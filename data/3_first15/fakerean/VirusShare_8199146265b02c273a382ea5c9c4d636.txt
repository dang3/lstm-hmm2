sbb
add
mov
and
lea
inc
mov
xchg
imul
rolb
leave
out
outsl
fs
sarb
or
or
sub
mov
jbe
hlt
sbb
test
cmp
dec
loopne
mov
push
or
popf
loope
pop
inc
ret
inc
gs
lods
xor
cmp
jp
std
orl
addr16
cmp
jno
hlt
xor
mov
xchg
test
imul
ficompl
push
daa
fcmovb
in
pusha
or
fsts
or
out
push
sub
and
mov
push
pop
lock
into
xchg
frstor
out
jmp
out
stos
shlb
push
add
test
rcll
jbe
aam
xor
fdivs
stos
aas
stc
mov
int3
cmp
mov
jnp
xor
icebp
sti
addr16
jae
sbb
mov
stc
push
insl
cwtl
out
cli
stos
jl
mov
jmp
mov
mov
or
push
stos
sbb
jne
xchg
add
cmp
jbe
sub
leave
jnp
inc
scas
inc
push
enter
jg
stc
leave
mov
jle
repz
xchg
ss
cmp
mov
mov
push
sub
or
scas
push
push
lcall
xlat
ret
xor
jne
cltd
mov
and
call
push
testl
or
rol
sbb
inc
or
int3
mov
mov
dec
xor
int3
push
push
mov
push
shll
fists
or
fidivrl
xchg
je
add
fsubrp
popa
fwait
inc
out
decb
cmc
and
repnz
aam
sub
sti
inc
xor
ret
inc
adc
nop
push
cmpl
out
insl
into
test
xchg
add
outsl
cltd
add
add
push
lock
mov
test
lock
lret
rep
ret
or
add
jno
outsl
sbb
dec
adc
inc
subl
dec
sbb
outsb
rep
in
sar
mov
mov
or
in
mov
xchg
jmp
rclb
movsb
fidivl
imul
inc
sbb
inc
xchg
adc
aaa
in
sbb
iret
xchg
xor
xor
xchg
subl
dec
xor
add
es
negl
je
cmpsb
jecxz
dec
outsl
sbb
cmp
call
jns,pt
fs
xchg
lahf
popa
lock
gs
dec
mov
and
scas
aas
mov
xchg
call
popf
jo
cwtl
and
push
decl
loope
jnp
out
push
add
push
xor
mov
push
sub
mov
inc
lret
mov
pop
jmp
and
cli
mov
out
roll
stos
cltd
cmp
jecxz
dec
mov
mov
movsb
insb
lds
and
rcrb
xchg
daa
xchg
sub
mov
push
loopne
sbb
fdivrs
mov
xor
xchg
cltd
mov
int
xor
call
mov
gs
dec
aaa
jmp
xchg
lret
inc
push
aam
popa
in
mov
adc
decl
dec
aad
dec
dec
add
imul
int3
adc
sar
dec
outsl
or
call
fstl
mov
xor
mov
mov
adc
push
cmc
mov
sbb
sub
inc
or
mov
outsl
push
mov
and
xor
in
cmp
movsb
adc
push
imul
popf
insl
jmp
cltd
push
fstpt
sbb
inc
das
xchg
pop
mov
and
xor
std
sub
fs
pop
roll
jns
push
clc
iret
or
mov
testb
xchg
fs
mov
push
add
push
lods
fstps
fadds
cld
mov
insb
je
stos
mov
mov
and
fisubl
jg
inc
inc
and
mov
cmpsl
adc
pop
arpl
mov
pop
inc
imul
lods
push
dec
aam
addl
insb
out
dec
lcall
sbb
dec
and
mov
or
inc
icebp
arpl
shll
and
pop
mov
xor
pop
jmp
mov
adc
leave
stos
push
inc
sbb
in
test
cs
xor
xlat
mov
lret
pop
imul
pop
dec
les
cmpsb
inc
mov
and
xor
pop
sbb
jo
nop
push
subl
cwtl
cmp
sub
sahf
and
jb
mov
sbb
popf
fwait
dec
adc
fdivrp
repnz
cmc
mov
mov
fidivrs
mov
mov
fists
dec
xlat
pop
loop
xor
jno
cmp
push
mov
adc
mov
test
call
inc
inc
ud2
mov
sarl
int3
ja
lahf
mov
pop
xchg
xorb
jp
scas
ljmp
lahf
lcall
pop
push
push
test
jo
jae
ret
mov
add
lods
out
sbb
stos
test
sub
dec
inc
jo
dec
mov
push
aas
sbb
popf
jne
sarl
in
sub
mov
lods
out
repnz
mov
pop
sbb
daa
cmpb
sahf
add
test
or
and
push
push
cmp
push
xchg
xchg
fildl
add
mov
adc
mov
push
sub
add
lret
xchg
jbe
add
or
mov
or
xor
insb
dec
or
sub
mov
push
repz
or
adc
jae
sti
lahf
sbb
jns
stos
mov
mov
ljmp
xchg
mov
dec
mov
jbe
inc
in
xchg
mov
gs
and
in
sti
jnp
jne
jne
subb
jae
cmpsl
shlb
jb
xorl
hlt
sub
movl
lcall
or
aas
xchg
imul
mov
addr16
outsb
shlb
add
xchg
pop
pop
xchg
sbb
cs
cmp
pop
les
mov
addl
sub
in
shl
dec
mov
rcrb
sti
xchg
loopne
pop
popa
jo
sub
in
inc
ss
lcall
ds
stos
xchg
jb
xor
lret
out
movsb
mov
in
lods
push
movsb
mov
in
cmp
pusha
int3
push
lods
es
xchg
push
test
fdivr
pusha
stos
into
jmp
xor
adc
mov
iret
adc
pop
and
loope
adc
mov
xor
imul
mov
shrb
cmp
repnz
adcb
mull
out
inc
mov
and
adc
pop
fwait
mov
arpl
ja
mov
insl
adc
and
or
mov
dec
aas
adc
cld
mov
ficoms
jbe
mov
sbb
das
mull
addl
xor
or
pushl
loop
movsb
sbb
xor
or
or
dec
cltd
push
outsb
call
pop
jb
jne
fldl
and
xor
push
stos
in
push
loopne
mov
fs
inc
inc
dec
ja
jge
outsl
ds
fimuls
sub
leave
test
lret
mov
aad
pushf
pop
pop
push
sub
push
pop
into
mov
fs
pop
inc
sub
mov
daa
int
jmp
mov
and
add
mov
xchg
pop
lods
test
pusha
push
imul
inc
mov
and
movsl
neg
xchg
mov
jne
pop
hlt
pushf
add
add
mov
push
fs
leave
mov
xor
sti
shlb
sub
push
ds
inc
insb
xor
mov
or
sub
daa
test
call
rclb
pop
and
inc
daa
xorb
pop
push
add
inc
je
out
pop
rcrb
push
xchg
aad
subl
outsl
xor
andb
cmp
push
scas
loop
xchg
mov
mov
test
mov
or
cmp
and
sbbb
jno
pop
mov
sub
loop
adc
pop
push
cmp
jmp
adc
ja
pop
dec
jo
mov
mov
adc
das
repz
xor
xlat
sbb
pop
cmp
xchg
ljmp
scas
cmc
test
cmpsl
cmpsb
lret
jb
movsb
pop
std
mov
fdivrl
sbb
test
aam
sbb
xor
pop
mov
movsb
or
cs
sub
mov
sub
subb
adc
lahf
fs
imul
gs
stos
sub
or
and
lods
xchg
mov
scas
jns
mov
sub
jo
xchg
lret
leave
sub
clc
xchg
jp
xchg
outsb
cmp
js
inc
xchg
lcall
push
mov
mov
dec
cmp
in
shlb
jg,pt
jne
xchg
pop
loopne
pop
xchg
je
adc
lahf
jge
lret
add
mov
stc
cmp
jecxz
adc
pop
adc
cli
adc
nopl
iret
jb
test
clc
pop
lea
lock
add
xchg
sub
cmpsl
jnp
dec
int
pop
adc
add
mov
clc
gs
mov
sbb
daa
lcall
push
sbb
and
jae
sbb
add
ss
xchg
jecxz
scas
lea
adc
inc
es
sub
xchg
roll
iret
movsl
aam
cmpsl
push
pop
iret
mul
aam
push
es
insl
ss
xchg
gs
or
sbb
js
in
xchg
popf
hlt
out
insl
mov
scas
jmp
mov
pusha
pop
out
cmp
fstps
xor
jmp
sub
rcrl
sbb
dec
aas
cmp
xor
push
pop
push
mov
push
mov
lods
rcrb
rcrb
movsb
mov
push
sbb
pop
push
shrb
daa
imul
mov
rorl
fidivrs
mov
repz
out
enter
jne
push
cmp
push
mov
xor
xor
movsl
push
orl
imul
cmpsb
iret
std
hlt
pop
jnp
ss
sbb
lcall
inc
shrb
shll
pop
push
jmp
push
les
std
das
xchg
lods
in
fsubs
push
inc
out
pusha
cmp
mov
mov
imul
push
dec
mov
xchg
sahf
cmp
outsb
imul
hlt
movsl
popa
pop
insb
or
imul
mov
and
adc
cmpsl
mov
xor
fdivrp
rorb
xchg
rclb
pop
sti
mov
jp
mov
insl
mov
repnz
stc
or
pop
cmp
cmpsl
lods
jl
test
xlat
repz
jae
jp
cmp
and
xor
in
cmp
sbb
xchg
xor
mov
movsb
or
push
xor
xor
pusha
out
fmuls
cmp
loopne
xchg
ficoms
jns
lds
jo
ljmp
pop
in
and
jg
sub
imul
das
addr16
cld
adc
cmp
jl
cmp
and
jnp
cld
icebp
nop
cltd
repnz
stc
inc
jo
mull
data16
or
stc
sub
mov
call
inc
arpl
lret
dec
jmp
add
stc
push
mov
hlt
xor
or
ds
xchg
sbbl
xchg
dec
xor
mov
jmp
lahf
adc
fsubrl
mov
mov
sub
xchg
xchg
mov
cmpl
test
lods
cld
push
push
adc
fnsave
or
jae
movsb
cli
jg
popf
jl
out
cmp
mov
mov
xor
adc
xchg
xor
mov
or
and
je
pop
push
jmp
sbb
sub
daa
mov
mulb
mov
jle
cwtl
add
push
int
xchg
mov
int
repnz
leave
in
xchg
push
jge
je
jmp
outsl
xchg
sub
adc
cli
aad
push
xchg
dec
cmp
dec
dec
push
push
sub
xchg
cmpsl
push
cmp
add
ss
mov
imul
jecxz
jbe
out
fdiv
xor
jns,pn
cmp
cwtl
aaa
rorl
inc
loop
mov
mov
jg
out
lret
js
jns
daa
jle
mov
repz
inc
cmp
cmp
adc
scas
jb
mov
xchg
sbb
test
adc
lock
dec
pop
cmp
jns
mov
sbb
in
mov
popf
adc
mov
dec
pop
bound
fsubr
or
repz
notb
xchg
add
cmc
xchg
add
dec
dec
sbbl
cltd
lret
xor
inc
rorb
shrl
push
insl
push
out
add
sbb
ljmp
lods
int3
ss
cmp
sub
dec
cmp
xchg
cmp
repz
adc
in
mov
leave
push
cmp
loopne
loop
lret
cmp
sbb
hlt
push
inc
in
scas
mov
and
stos
arpl
cli
mov
das
int
mov
shl
xchg
adc
fisttps
cltd
dec
cs
jp
xchg
insb
and
out
inc
fst
dec
sub
jne
fdivl
mov
out
adc
pop
imul
fdivp
fldl
pop
repz
fnsave
pop
push
mov
inc
xlat
push
mov
jecxz
cmp
sti
inc
insb
fwait
shrl
fldenv
fs
lahf
jecxz
repnz
sti
popf
and
lock
fistps
test
and
xor
enter
sub
jl
leave
dec
mov
ja
cmpsb
cld
fscale
lea
mov
arpl
pushf
int
xor
adc
insb
movb
das
lods
repnz
enter
aas
mov
test
lahf
es
push
xor
mov
jle
loop
insb
inc
mov
xchg
add
pushf
pop
sub
es
push
jp
in
nop
adc
repnz
gs
fiadds
je
and
fdivrl
mov
shll
in
rcl
mov
cli
lret
xchg
popa
or
popf
adc
inc
sbb
dec
test
leave
mov
dec
lcall
and
fistl
add
cld
sbb
mov
cltd
out
push
jg
and
cmp
es
push
scas
mov
repnz
pop
into
shll
idiv
fs
xor
push
dec
ljmp
je
jns
ja
cld
push
outsl
cs
mov
int
out
xchg
out
lock
xlat
cwtl
lret
dec
cli
repz
repnz
xchg
in
and
out
pushf
hlt
add
add
mov
dec
sbb
inc
daa
mov
insb
icebp
sub
xchg
in
loope
inc
pop
lea
fiaddl
xor
push
jae
jl
or
ret
incl
dec
pop
dec
lods
xchg
sub
out
xor
arpl
or
xchg
adc
dec
cmp
mov
shll
xorb
jae
scas
arpl
outsb
and
cmp
inc
std
push
sbbl
stc
pop
cli
push
xchg
mov
adc
adc
int3
and
loope
lahf
mov
xchg
cmp
fninit
in
lcall
cmpsb
pusha
gs
es
adcl
mov
popa
hlt
inc
jl
shr
rcrl
daa
das
inc
inc
mov
jb
push
push
in
adc
add
jno
bound
push
xor
inc
pop
xchg
push
dec
mov
xlat
in
xchg
ss
push
xor
jb
leave
int
sar
pop
mov
cli
ljmp
adc
mov
jmp
cld
inc
sbb
adc
jecxz
dec
jp
stos
cmp
es
sbb
mov
lahf
lea
xor
js
clc
in
add
sarb
aam
pushf
cld
cmpsb
mov
mov
jbe
fcoms
rorl
xorl
xor
mov
ret
inc
lock
xchg
shll
subl
mov
idivb
cmp
cmpsb
xor
xchg
or
pop
shl
out
jmp
testb
push
hlt
xor
jae
hlt
imul
push
or
repnz
add
cli
fidivrl
out
cmpsb
and
mov
jb
ljmp
mov
shrl
outsb
lods
in
or
pop
ss
sub
jl
cli
xrelease
sub
push
outsl
fdivp
sub
sbb
dec
pop
jle
push
insl
ret
sti
xor
fdivr
sub
mov
push
fidivrs
inc
fnstenv
fs
sti
cmp
aam
ss
jbe
jmpw
adc
arpl
pop
std
ja
pop
xchg
sahf
cmp
lods
inc
daa
stc
sub
pop
vpaddsw
adc
lods
icebp
inc
mov
jl
fdivr
adc
adc
xor
pop
cwtl
lahf
fsubl
inc
xchg
mov
push
pop
movsb
xchg
or
shlb
dec
pop
xor
into
add
xchg
push
sti
cmp
inc
jmp
xchg
or
cld
in
shl
and
idivl
in
pop
hlt
sbb
xchg
cli
lods
add
add
cmc
rorb
out
aam
inc
push
inc
sub
sarb
aas
jbe
cltd
sub
jecxz
out
jge
sub
pushf
xor
mov
inc
shrl
adc
sbb
cmp
cwtl
je
dec
mov
jle
arpl
mov
jae
insl
arpl
aam
test
xor
nop
hlt
xchg
dec
push
int3
cmp
das
fcoms
pop
rcll
xchg
mov
pop
push
mov
inc
sbb
ljmp
pop
jne
cmp
pop
xchg
mov
push
cmpsb
jne
push
push
lret
outsb
ret
xor
mov
jecxz
ret
mov
push
adcl
std
adc
in
add
push
or
jns
hlt
push
push
loope
outsl
cmp
inc
dec
rol
out
out
ljmp
xchg
push
outsl
mov
rcrl
mov
cli
add
int3
in
add
sar
inc
out
iret
test
and
inc
mov
sub
jo
jmp
popf
lret
jns
adc
push
sub
out
mov
mov
ret
inc
adc
jge
lods
mov
jno
pop
and
imul
stc
lds
cmpsb
mov
in
mov
lods
enter
jl
sbb
fstpl
out
pop
sbb
mov
push
leave
sub
inc
or
push
push
cmp
and
lcall
cmp
test
cmp
leave
xchg
sbb
in
jbe
and
jp
fwait
sbb
ds
pushf
sub
out
lahf
lea
mov
jne
ss
xchg
jge
xor
cmp
xor
push
xor
cmp
xchg
jg
addr16
xchg
repnz
iret
jb
push
fsubr
inc
jns
cltd
xor
push
cwtl
cltd
push
push
ja
mov
in
aad
sub
imul
mov
hlt
fucom
iret
mov
stos
imul
jmp
mov
push
xchg
pop
mov
sub
in
decb
cmp
inc
test
into
jg,pn
fidivrs
in
xchg
repz
inc
shlb
sub
je
cmp
xor
sub
adc
xchg
iret
push
addl
sti
cmpsb
fdivl
fiadds
jecxz
jge
shr
in
cwtl
andb
pop
enter
or
outsl
fdiv
jnp
mov
dec
imul
xchg
pop
pop
push
mov
jmp
xor
mov
dec
movsl
xchg
xor
aad
inc
lret
dec
aad
iret
lret
mov
lea
fmull
mov
xchg
scas
adc
fwait
xor
orl
dec
stc
jle
dec
or
fidivrs
enter
js
xor
repnz
ja
test
les
ja
pop
out
jb
js
add
inc
ret
mov
mov
xorb
sti
push
cmp
pop
pop
rcrl
cmovge
push
imul
jmp
repnz
popa
mov
push
in
inc
iret
in
cli
popf
mov
cld
sbb
xchg
cmp
shlb
dec
lock
sub
lcall
je
imul
xchg
roll
aad
xchg
pcmpgtd
int
lods
icebp
dec
addr16
cli
pop
hlt
dec
incl
mov
or
adc
cmp
mov
sbb
pushf
adc
pop
and
scas
das
mov
clc
cmp
jno
ljmp
aaa
loopne
adc
jns
outsl
in
aad
mov
sbb
add
hlt
in
addr16
ficoms
imul
mov
mov
mov
imul
jp
ret
cmp
aas
jb
mov
hlt
push
loopne
mov
mov
std
repz
sbb
cltd
mov
sbb
int
enter
jae
stos
sub
adc
mov
cmc
lods
stos
mov
je
ret
ficoml
std
mov
xor
mov
stc
sarb
and
lea
cld
sbb
fs
sub
call
lahf
push
rorl
mov
and
imul
cmp
sbb
mov
imul
add
xor
xchg
mov
cmp
ret
imulb
adc
mov
movsl
xlat
cmp
pop
or
shl
lret
outsb
ds
cmp
ss
sub
dec
sbb
or
jg
pop
mov
adc
add
dec
cmovge
outsb
cmc
lret
add
dec
mov
mov
idivb
iret
fsubp
xchg
pop
mov
loop
jne
or
sbb
in
cmp
out
clc
xchg
clc
xor
aaa
cmp
pop
outsb
lcall
lret
ret
lds
mov
pop
rcrb
scas
jno
xchg
ret
adc
push
sub
mull
sbb
stos
repz
hlt
mov
mov
jecxz
sub
adcb
fcoms
sbbb
sub
cs
movb
pop
adc
movsb
cmp
xchg
sahf
aaa
cld
imul
out
or
push
push
sub
mov
mov
lds
scas
xlat
sar
or
shlb
movsl
sahf
jecxz
and
xor
in
enter
mov
xor
addr16
xor
loope
adc
pop
push
and
inc
xchg
fs
pop
add
call
fwait
call
cmpsb
push
rcrb
push
loope
sbb
add
ja
ffree
rcr
adc
or
push
cmp
sub
xor
inc
fldenv
pop
aas
inc
xchg
shll
hlt
or
and
outsb
leave
inc
fcmovne
xlat
cltd
pop
fistpll
and
and
shrb
aad
icebp
xor
mov
adc
xor
cmp
std
xchg
jbe
daa
inc
jg
aam
repnz
jle
dec
movsb
lret
in
pop
repz
cmp
jo
mov
and
ljmp
outsl
lret
mov
and
lret
insb
jb
addr16
inc
pusha
mov
xor
aam
mov
outsl
pop
test
cli
insb
enter
stos
push
dec
mov
inc
mov
sbb
les
daa
and
test
or
lcall
addr16
jo
inc
mov
flds
xchg
xor
cmc
clc
insl
cmp
cltd
test
push
iret
negb
sbb
mov
xchg
add
push
sub
mov
fsubrs
aad
pop
cld
outsl
or
les
jne
nop
lret
pop
mov
or
jp
add
aaa
orl
scas
inc
cltd
fnstcw
add
in
lcall
sub
or
xor
test
cmc
lahf
and
stos
aad
xchg
outsl
movsb
push
mov
mov
sub
cmp
pop
iret
adc
mov
add
in
fdivrs
dec
cli
and
frstor
jge
mov
pop
js
pusha
pusha
cmp
repz
cwtl
hlt
jbe
jmp
sub
fsubrs
dec
jl
cmpsb
mov
test
in
dec
es
sub
aam
pop
sub
jecxz
jl
pop
aas
out
out
cmp
jbe
pushf
jo
shl
jecxz
jl
jle
sub
push
es
mov
ss
and
pop
sti
ror
mov
sub
mov
and
xchg
or
and
pop
test
mov
inc
push
das
in
xchg
js
scas
stos
jle
cwtl
sbb
repnz
loop
mov
or
pop
mov
or
jae
mov
xchg
mov
xchg
testb
adcb
pop
out
test
xchg
pop
fs
addr16
pop
popf
daa
shl
pop
outsb
and
iret
add
movsb
loop
pop
fimuls
hlt
ljmp
cmpsl
push
aaa
mov
sub
insb
xchg
test
xacquire
sub
add
push
sbb
pop
jmp
or
cmp
subb
or
adc
stos
and
adc
jmp
xor
mov
inc
pusha
push
pop
push
push
jnp
dec
mov
add
mov
cld
jae
movl
lds
lcall
int3
mov
popa
shll
cmp
pop
sub
mov
add
ret
gs
push
and
add
mov
sbb
divb
icebp
loope
push
loop
inc
jnp
push
and
enter
ficoml
int3
scas
push
and
shll
or
ja
enter
sub
ds
out
movsb
aas
sbb
jns
cmp
jb
sub
ds
lds
pop
clc
into
sub
cmp
fwait
pop
sarl
adc
add
dec
inc
xchg
push
scas
ljmp
mov
mov
xchg
pextrw
push
shll
fidivrl
xchg
test
es
data16
add
lea
pop
jae
xor
add
mov
mov
dec
mov
imul
dec
shlb
or
cli
cld
push
xor
mov
mov
add
out
cmp
cmp
stc
xchg
out
mov
lds
mov
mov
dec
mov
ds
lret
dec
add
into
callw
jecxz
leave
popa
push
xchg
imul
pop
js
xchg
cmpsb
pop
cmp
cmp
gs
insb
xchg
xchg
sbb
lcall
mov
rcr
lea
rolb
and
roll
inc
loopne
das
out
adc
in
sbb
pusha
int3
pop
cmpsl
insl
lret
jle
rorb
mov
iret
mov
adc
mov
add
in
ss
push
jmp
les
mov
push
mov
stos
adc
scas
push
dec
jbe
cld
cmp
movsl
mov
test
push
pop
lret
push
test
fs
pop
push
hlt
push
push
jge
pop
aam
jle
or
ffreep
cld
push
jg
fstpt
ljmp
push
ds
mov
mov
mov
push
cmpsl
push
cmp
pop
ja
out
fisttps
and
jle
sbb
out
add
jae
mov
scas
cwtl
sbb
adc
fwait
xchg
xchg
gs
push
jmp
icebp
shrl
add
cmc
cmp
adc
cmp
stos
jge
xor
xor
js
in
jecxz
add
arpl
out
dec
push
cwtl
mov
cmc
jnp
mov
cmp
inc
popf
idivb
mov
loope
jmp
shlb
das
outsb
pop
sarb
mov
cs
adc
cmp
cmp
mov
jecxz
push
pop
std
inc
push
aas
call
fldcw
push
lahf
mov
syscall
jl
imul
rol
out
mov
iret
insb
cltd
hlt
fbld
insb
cli
push
jmp
cmp
stos
adc
aam
add
and
les
xchg
shr
cmp
xor
ds
jns
mov
cmpsb
stos
sbb
mov
aas
jae
not
dec
sbb
adc
cltd
sahf
idiv
inc
lea
sub
int3
cmp
out
ljmp
cmpsl
movsl
mov
cli
loopne
jno
fistpl
stos
mov
test
sbb
add
out
rorb
out
in
lahf
cmpsl
jmp
pop
shlb
cvtpi2ps
mov
push
stc
dec
or
add
xchg
js
pop
and
push
test
ds
lock
fbld
lea
jb
in
in
push
fimuls
stos
movsl
leave
xor
test
out
pushf
out
mov
inc
inc
loop
cmp
fdivl
lds
adc
cmp
aas
into
cmp
jbe
cmp
sub
mov
popf
cmp
inc
or
out
divb
rolb
mov
jg
cmp
push
mov
pop
mov
negl
and
adc
adc
ljmp
daa
push
jno
push
xor
adc
push
sub
outsb
add
mulb
out
mov
mov
mov
pop
dec
or
rorb
push
mov
xchg
fisttpl
pop
jno
and
mov
and
sti
addr16
ret
xlat
movsl
sahf
lcall
insb
stos
inc
in
sbb
js
and
pop
stos
sub
insb
mov
icebp
sbb
scas
out
xor
sbb
dec
jnp
fcompl
aam
sbb
sbb
sahf
mov
outsb
pop
sbb
scas
loopne
mov
ret
insl
add
push
idivl
and
movsb
sarl
fnstenv
repnz
dec
xor
push
push
add
cmp
loop
cmp
and
shll
push
into
popa
jne
mov
inc
xchg
jb
cmp
xor
jle
fildl
fsub
mov
pop
mov
mov
sbb
cmp
jp
push
jno
jo
jg
das
imul
das
mov
add
cmpb
mov
mov
imul
inc
mov
xchg
dec
out
pop
inc
popf
aam
imul
mov
out
add
add
adc
xchg
lea
call
xchg
pop
inc
pusha
jl
std
aad
and
fwait
orb
xchg
xchg
pop
sub
pop
leave
mov
fimuls
mov
mov
mov
leave
insl
aad
sahf
dec
aam
mov
push
jo
popf
loope
insb
jae
push
pop
mov
inc
lcall
mov
in
bswap
fs
sub
imulb
pop
rcl
out
mov
dec
dec
xor
fistpll
int
sbb
cltd
xchg
imul
xor
mov
fistps
repnz
popf
sub
fld
int3
sbb
mov
clc
shll
inc
outsl
or
inc
mov
sbbl
inc
mov
ljmp
stc
outsl
push
jge
and
cltd
sub
negb
jbe
push
pop
out
pop
fldt
je
and
lret
jp
add
aad
dec
jecxz
lret
jnp
push
rolb
pop
out
or
mov
insb
or
call
pushf
and
jge
jo
push
icebp
jg
stos
push
dec
clc
les
rorb
xchg
lret
testl
fcmovnb
or
hlt
lods
cli
ja
xchg
insl
out
push
in
test
imul
mov
xor
std
jl
fwait
clc
in
jbe
fists
dec
dec
gs
mov
fisttpl
or
shr
rclb
icebp
add
pop
adc
push
ds
jg
sub
lea
scas
pop
bound
mov
fsubrl
ret
dec
sub
lcall
loope
and
adc
push
pop
ds
jne
sub
inc
shlb
fdivr
cmc
aaa
sbb
cmpsb
repnz
and
int
les
push
cwtl
jnp
sub
fwait
xor
xlat
jns
push
pop
inc
add
dec
fs
fists
push
mov
mov
cmp
fldl
xor
js
jae
mov
push
jge
push
test
int3
es
mov
sub
dec
mov
negl
ret
mov
cmc
fists
stos
aas
jmp
and
shll
test
test
pushf
inc
lret
inc
fwait
lods
sti
shll
push
sbb
ds
int3
icebp
cli
mov
pop
mov
xchg
adc
out
inc
addr16
mov
insb
push
xchg
repnz
or
add
decl
shrl
std
test
int3
fiadds
int
jp
xchg
divl
sahf
add
cli
mov
or
imul
fcoms
test
jnp
out
icebp
jne
ds
push
mov
mov
or
inc
mov
cmp
cld
sbb
add
adc
ss
sub
mov
and
adc
mov
std
xlat
sub
insl
inc
stos
jmp
mov
jno
inc
sub
mov
mov
dec
lds
fwait
into
out
hlt
scas
cwtl
xchg
push
pop
sbb
cmp
mov
in
cmp
mov
adc
mov
rcll
mov
scas
in
fsubr
fwait
addr16
jle
mov
enter
cmc
push
mov
outsb
notb
arpl
xor
nop
add
es
sbb
push
daa
lock
out
or
gs
or
andb
cmpsb
cmp
xlat
les
and
enter
testb
cld
iret
mov
fimull
cli
mov
dec
out
jmp
pushf
mov
mov
xchg
fmull
insb
dec
push
or
mov
rcr
or
push
iret
fstl
cwtl
rorl
les
icebp
loopne
mov
mov
or
addl
inc
push
repz
jge
push
sub
inc
ljmp
adc
add
enter
sbb
or
push
and
faddp
insb
lea
add
test
in
imul
xchg
in
and
lods
cmpsb
loope
mov
cmpsl
mov
aaa
xor
gs
push
leave
inc
outsl
mov
dec
cmp
inc
sahf
xor
addl
stos
lret
and
jbe
push
in
pop
adc
rorl
lahf
lods
xchg
mov
lock
add
mov
roll
movb
mov
bnd
sahf
out
repz
cwtl
cld
jbe
xor
rorb
inc
mov
pop
xchg
fmul
shll
cmpsl
jo
pop
testb
inc
icebp
mov
xchg
leave
sbb
ja
mov
in
mov
mov
push
jb
xor
sub
clc
push
push
mov
call
hlt
cmp
adc
in
mov
rcll
and
in
push
out
and
dec
adcb
push
div
stos
sarb
outsb
jmp
jo
lcall
mov
stos
mov
test
scas
dec
jmp
lahf
pop
outsb
cli
lods
mov
xor
mov
inc
leave
and
mov
cmp
adc
and
lods
add
roll
test
mov
setnp
cmp
out
and
mov
and
fsubs
repnz
mov
pushf
ret
mov
push
fs
xchg
mov
mov
nop
fadd
in
fldt
sbb
cmp
mov
cwtl
idivl
jmp
push
push
or
ljmp
inc
mov
xchg
mov
movsb
outsb
jbe
or
into
jl
sub
in
adc
cmp
mov
pop
mov
or
jg
xchg
sub
sub
and
add
icebp
orb
xchg
movsl
orb
xor
decl
sbb
push
or
dec
leave
fcmovne
push
aam
push
imul
pop
movsl
mov
ss
aad
insl
js
cmp
mov
je
cld
add
or
lds
pop
and
cltd
jecxz
sbb
imul
and
sub
int
shrl
bound
sbb
lret
push
hlt
repnz
sti
xchg
and
aaa
or
cmp
pop
lret
sub
enter
sbb
lods
stos
cld
outsb
fsubrl
mov
lret
or
addl
shll
adc
mov
pop
mov
loopne
dec
in
inc
inc
outsl
nop
lods
dec
mov
and
mov
mov
cli
stos
xorb
mov
mov
dec
dec
dec
fs
xor
cmpsb
insb
or
sub
sub
dec
nop/reserved
jnp
fldt
loope
xchg
mov
xor
testl
sub
mov
push
ds
clc
das
rcl
cmp
sar
aam
enter
scas
fistpll
fdivrs
inc
test
ret
push
inc
xchg
add
shrb
insl
or
loope
out
js
and
mov
stc
xchg
hlt
sub
repz
loope
lret
lds
pop
clc
addb
xor
mov
mov
xor
push
test
test
mov
mov
shll
ret
jp
ljmp
jae
push
cld
xor
pop
add
push
addr16
test
jbe
out
inc
fidivrl
fcomip
adc
in
push
int
or
mov
and
mov
jno
nop
xchg
pop
sti
fcmovu
sbb
mov
shlb
imul
subl
repnz
fcompl
outsb
fcomip
jl
push
addl
push
bound
xchg
lahf
mov
loopne
fidivrl
push
call
inc
mov
cmc
xchg
aas
xorb
push
cmp
inc
and
sti
loopne
ror
iret
popa
jg
lret
push
xor
mov
lods
mov
pop
sarb
inc
xchg
add
aad
fstl
jmp
aas
inc
iret
mov
rcrb
scas
push
aas
push
mov
xor
cltd
dec
and
ljmp
inc
mov
add
cli
sbb
jle
adc
or
xchg
push
dec
pop
mov
jb
xchg
adc
sub
and
mov
xor
xor
nop
and
pop
xor
adc
add
icebp
scas
mulb
jo
lods
add
adc
in
fninit
imul
es
xor
es
push
outsb
jbe
pop
mov
xor
lock
arpl
or
cmpb
movsb
orb
mov
jae
movsb
stos
mov
dec
jl
jmp
movsb
lods
scas
jmp
jb
repnz
inc
fildll
int
scas
mov
hlt
xchg
mov
lea
dec
lahf
xchg
hlt
xchg
push
dec
stos
pop
or
xor
outsl
cmp
cmpsb
mov
or
inc
dec
push
inc
mov
fidivrl
lret
xor
sbb
pop
inc
xor
sti
mov
cs
int3
dec
xchg
pushf
mov
jl
cs
mov
test
fwait
sbb
push
in
jle
push
sbb
iret
je
adc
fcoml
mov
cmp
jl
out
bnd
mov
cli
push
ret
daa
push
sub
ja
jno
test
cmpsl
add
test
shlb
jmp
add
cli
jle
fs
or
arpl
mov
jl
jmp
gs
push
repz
mov
xchg
inc
xchg
or
insl
and
mulb
push
ds
sbbl
xchg
xor
and
xchg
pop
or
in
add
adc
sbb
add
in
cmp
and
mov
clc
fs
and
ret
scas
sub
fistl
sahf
mov
xchg
xchg
jae
cmp
into
push
sti
ljmp
jns
inc
call
mov
in
and
sbb
int3
std
lock
cmpsl
jge
daa
pushf
add
fstps
pop
into
inc
or
pop
dec
xor
pop
bound
push
sti
mov
cmp
aam
sub
push
dec
mov
arpl
aam
xchg
jmp
xchg
xor
lock
xchg
loope
cltd
mov
aam
mov
outsb
popf
call
daa
dec
addr16
mov
and
xor
mov
xchg
fdivrl
imull
sbb
leave
xchg
scas
dec
fadds
nop
pop
outsb
dec
and
lods
push
or
or
cwtl
insl
fcoml
jno
pop
jo
mov
aaa
jno
cmpsb
addr16
jmp
ss
push
bound
dec
subb
and
sahf
ret
ds
push
cli
fst
in
mov
rcl
cmp
inc
jl
in
pop
test
pop
mov
out
xchg
or
test
add
adc
push
sub
mov
insb
out
stc
lret
cmc
jmp
cmpsl
bound
sub
mov
push
std
arpl
cmp
xor
repz
iret
push
add
pop
add
insl
negl
jge
sub
pop
adc
sbb
push
lds
xchg
push
rcrb
hlt
decb
ja
nop
ljmp
fisttpl
pusha
int
inc
lcall
nop
adc
sub
dec
pusha
imulb
aad
inc
inc
or
xor
push
int3
daa
cmp
les
fcmovnbe
das
not
test
mov
inc
mov
pop
shll
ja
and
data16
int
scas
lahf
mov
imul
mov
xor
xor
mov
imul
movsl
rorb
andb
jb
and
pop
xchg
mov
push
inc
fwait
dec
arpl
mov
xlat
mov
outsl
aas
hlt
fdivp
mov
ret
leave
in
loop
xor
xchg
pop
pushf
popf
movd
or
in
push
jmp
sub
cs
popf
inc
and
ljmp
cmp
pop
jo
jl
xchg
pop
stos
lock
test
pop
pop
aas
hlt
ss
out
fstps
inc
xor
imul
in
stos
mov
scas
adc
hlt
popl
sub
mov
xor
shlb
mov
pop
in
divb
testl
push
cmp
xor
xor
sub
call
sub
sub
sub
sub
xor
pusha
fs
lea
daa
xchg
cmpsl
jmp
dec
insb
sub
xor
xlat
call
out
aas
mov
xchg
in
and
addr16
adc
or
mov
sbb
lret
ds
push
mov
cmp
test
dec
out
aad
nop
jae
xor
jg
mov
sbb
xor
aad
daa
pop
add
adc
ja
popf
stos
mov
mov
arpl
sub
add
hlt
mov
repz
cmpsl
xchg
decl
push
arpl
xlat
cmp
cld
mov
xchg
aaa
adcl
enter
xor
inc
ja
or
push
ret
test
sti
je
cwtl
xor
fisttpl
fdivrp
daa
in
mov
and
jns
jmp
xor
icebp
inc
mov
addr16
xchg
inc
push
and
dec
ja
mov
cmp
xchg
pop
mov
jo
hlt
jecxz
inc
and
test
push
xor
ja
and
sub
fsub
xchg
cltd
and
into
push
scas
xor
ja
lock
in
pop
and
mov
in
adc
not
lea
loopne
jo
into
cmpsb
fidivl
test
push
jno
mov
mov
outsl
xor
or
sub
sahf
dec
cmp
push
shlb
dec
mov
jns
cmpsl
push
pop
fs
decb
insl
lock
mov
cs
insb
sbb
enter
aam
out
scas
push
mov
and
cmp
add
lods
sub
or
and
in
mov
ss
mov
and
cwtl
ret
into
cli
leave
inc
push
lock
arpl
andb
sbb
adc
subb
inc
mov
es
jb
or
xchg
addr16
mov
mov
sbb
bound
xorl
mov
jnp
push
xlat
cmc
cmp
dec
jne
test
push
mov
loopne
and
pop
mov
test
leave
bound
jno
outsb
bnd
mov
adc
hlt
aaa
sub
popf
jmp
test
lahf
mov
fincstp
call
xor
lret
mov
cmp
das
cltd
pop
cmpsl
test
mov
sbb
mov
mov
sub
leave
cli
xor
clc
in
incl
loop
mov
mov
fldl
adc
mov
imul
in
mov
lds
mov
jmp
std
ja
loop
sahf
jp
add
push
adc
ror
daa
pop
push
inc
dec
sub
sub
dec
xor
pusha
and
mov
mov
sub
dec
sbb
push
mov
test
and
gs
mov
and
jp
cmc
idiv
push
sub
or
and
pop
or
xlat
jecxz
into
out
xor
in
xor
sahf
hlt
sarl
daa
cmp
inc
xor
add
inc
int
jmp
mov
fstpl
push
fcoms
les
jmp
and
add
fstpl
fwait
icebp
sub
int
mov
add
inc
ficoml
mov
jnp
jge
ret
adc
stos
test
adc
loopne
adc
insl
mov
gs
lahf
jmp
xor
mov
and
pop
or
push
adc
jns
jns
sub
push
cmc
int3
sub
cmc
inc
or
and
fs
cltd
imul
ss
fdecstp
jne
mov
out
mov
xchg
loop
pop
push
clc
or
push
inc
lcall
pop
imul
lds
adcb
je
jg
sti
adc
aaa
jnp
dec
fidivrs
int3
in
mov
xor
lret
mov
in
mov
mov
inc
sbb
cltd
mov
test
out
repz
dec
cmc
mov
cld
arpl
sbb
or
ljmp
lcall
push
cmp
and
loopne
cli
ljmp
arpl
jp
subb
xor
div
rorb
lds
imul
in
iret
mov
sbb
js
cmp
test
insb
xor
subb
mov
mov
add
fisttpll
aam
fcoms
sub
in
push
mov
icebp
scas
cmc
cmc
vmovq
jg
mov
or
stc
jmp
imul
and
out
push
fwait
decb
adc
inc
xchg
xchg
mov
scas
xlat
lock
sub
adc
sub
push
popa
cmpsl
imul
ret
es
mov
rorl
mov
cli
xchg
push
jg
sbb
fdivr
jmp
nop
mov
movsl
enter
loope
jl
inc
push
imul
sub
loope,pt
jne
cli
pop
in
ret
xorl
cmp
int3
sub
xlat
mov
xchg
pusha
lea
mov
mov
dec
pop
test
push
inc
hlt
and
adc
dec
jbe
pop
pop
mov
clc
sub
push
pop
rorb
cli
adc
xor
cld
fistpl
lock
push
pop
mov
xor
push
inc
push
push
sbb
or
dec
mulb
mov
xor
clc
ds
sbb
stos
scas
rcrl
gs
xchg
shlb
ljmp
sbb
in
enter
xor
xorb
imul
test
pop
movlps
adc
sbb
pop
jae
mov
subb
mov
enter
pop
cmp
or
ret
push
enter
data16
lods
pop
mov
inc
inc
movsl
jecxz
lea
loop
scas
pop
sbb
push
mov
mov
gs
movsl
adcl
push
push
sub
nop
or
sub
pop
imull
das
mov
adc
in
jg
out
ret
int3
xor
pop
int3
lods
inc
fcmovb
addr16
popf
sbb
mov
out
lods
mov
aad
jl
call
dec
or
mov
cwtl
xor
fisubl
cs
and
lods
pop
mov
xlat
cmp
dec
hlt
mov
leave
loop
lds
sub
dec
js
shlb
push
int
mov
call
jo
inc
mov
mov
repnz
fmull
es
js
lea
or
ja
inc
lcall
cmp
cli
sub
xchg
iret
js
add
mov
inc
daa
fsubrs
addb
rclb
cmp
mov
push
pop
adc
mov
or
mov
mov
pusha
fucom
cwtl
fwait
dec
scas
jmp
sti
mov
xor
xlat
cli
in
pop
loopne
xlat
mov
jb
mov
mov
xchg
jge
in
sub
iret
fisttpl
jae
jns
imul
jg
stos
push
enter
add
rclb
xor
shrl
inc
sub
xchg
pop
pop
push
notl
in
lods
shlb
cwtl
xchg
xchg
ljmp
dec
je
cmp
jo
push
mov
jne
jp
push
ds
adc
daa
scas
fildll
lea
pusha
jge
and
data16
pop
in
xlat
rcrl
aam
push
lret
mov
xor
lock
dec
dec
cmc
testl
cltd
push
ds
addr16
lock
lret
fcoml
add
pop
and
lret
xor
lock
mov
sbb
mov
pop
stos
stc
repz
addr16
xor
adc
dec
mov
or
cmp
xor
mov
pop
jnp
cld
fwait
jge
sbb
test
nop
ret
inc
jns
int
mov
sahf
mov
fcoms
pop
outsl
in
pop
add
or
dec
mov
or
push
xchg
or
jmp
scas
movsb
ficomps
dec
or
pop
hlt
and
mov
addb
add
rclb
pusha
cmp
and
cli
inc
cmp
mov
push
mov
fucom
inc
xchg
es
std
stos
jno
cmpsb
outsb
mov
xchg
or
test
jns
into
clc
int
pusha
ret
lods
jg
cwtl
insb
or
dec
pop
mov
xchg
pop
jo
aad
js
stos
out
lods
sahf
cmp
pop
int
enter
pop
sub
adc
imul
push
or
popf
call
aaa
push
std
test
mov
aam
jb
int3
into
lods
fld
leave
loopne
ficomps
rorb
fisubs
ja
insl
xor
mov
popf
pop
fsubl
mov
inc
nop
into
xchg
mov
dec
or
jmp
dec
aam
jp
movsb
or
and
push
xor
mov
lock
hlt
and
xor
fdivrs
andl
neg
repnz
pop
data16
and
adc
stc
hlt
pop
xchg
andl
outsb
mov
add
mov
jecxz
mov
ss
outsl
xor
aaa
mov
aaa
es
xchg
mov
jp
cmc
addr16
in
rcrb
aaa
aaa
pause
mov
push
notl
gs
enter
pop
std
nop
sub
sub
scas
fs
mov
mov
mov
adc
repz
dec
cmp
push
jge
pop
sub
sti
loop
jg
inc
mov
fcompl
mov
sub
adc
pop
mov
adcl
push
orb
mov
push
and
xchg
fstl
adc
ljmp
sub
dec
adcb
ss
adc
in
cld
mov
lds
pop
rorb
ds
sti
outsl
mov
add
add
dec
out
lret
incb
decl
mov
test
repnz
fiadds
popa
lcall
lock
mov
mov
pop
push
pusha
inc
cmc
outsb
sbb
rclb
xchg
adc
sub
dec
imul
pop
movsl
push
add
vpaddd
out
sub
lods
cmp
scas
xchg
dec
mov
jns
stos
sub
mov
cli
out
and
or
or
push
or
mov
adc
push
pop
loop
xlat
ss
mov
mov
or
cmpsl
inc
mov
sbb
sarl
fwait
dec
jge
int3
mov
ficoms
shrb
dec
pop
xor
loope
fistpll
lea
or
in
push
mov
cli
pop
adc
lea
sbb
into
out
rep
iret
repz
adc
mov
push
inc
int
or
enter
in
sti
insl
stc
insl
popa
jbe
adc
daa
push
mov
xchg
cmp
imul
das
mov
or
jbe
mov
and
das
int3
sbb
cwtl
mov
inc
sbbl
xor
inc
in
rol
mov
and
sbb
inc
jne
movsb
int3
jl
dec
pop
test
aas
inc
dec
or
fldl
mov
adc
sub
js
cmpsl
dec
and
int3
arpl
cmp
daa
push
stos
add
adc
jp
jo
sub
xchg
pop
jnp
sbb
ret
sbb
push
in
aad
out
mov
test
leave
pusha
push
mov
mov
add
xchg
test
fldenv
push
lock
xchg
mov
lret
insl
sahf
cmp
sbb
int
push
or
fidivrl
sbbl
jmp
mov
aad
pop
andb
jg
mov
out
cmp
shlb
dec
mov
xlat
outsl
in
std
and
xor
jle
and
jmp
lret
push
push
enter
and
lock
mov
insl
jmp
addr16
mov
call
and
lret
inc
add
rcrb
rorb
jae
lret
pop
sub
or
push
or
shll
test
pop
aaa
lahf
jae
mov
rorl
aam
cmpsb
iret
or
mov
dec
sub
aas
add
adc
or
fdivrl
pop
popf
pop
enter
sub
movsb
adc
jmp
cmp
mov
aad
outsl
dec
jbe
and
push
push
cmpl
add
fwait
xorb
xchg
std
adc
and
out
dec
mov
ds
mov
mov
imul
xlat
call
adc
out
lahf
hlt
in
mov
mov
push
push
insb
add
movl
mov
adc
iret
cmpsb
rolb
int
loop
mov
mov
mov
mov
and
subb
dec
fstps
mov
imull
aad
ret
subb
pop
out
and
cmp
scas
iret
arpl
mov
sub
rorb
cmp
int
ss
int3
push
fwait
and
jle
inc
sbb
pop
inc
hlt
jl
mov
setbe
mov
push
add
cmp
ret
imul
sbb
mov
pushf
test
ror
cltd
cmp
fstl
mov
inc
adc
cmp
mov
push
xchg
sub
sub
push
xlat
and
inc
loop
and
sub
pop
movsl
cmp
arpl
fnstcw
jnp
mov
popa
add
pop
cmp
daa
test
movsb
push
dec
rcrl
xchg
bound
add
add
aas
dec
arpl
cmp
out
mov
add
mov
adc
cld
jnp
cmp
popa
jp
pop
pop
bound
pop
adc
cwtl
jbe
divb
or
ss
js
xchg
jne
sub
lret
mov
mov
push
inc
push
cmp
and
in
fwait
xchg
mov
jge
loope
sbb
cli
inc
pop
subl
int
fs
sub
mov
movsl
in
pusha
fimull
sbb
xor
lcall
or
mov
adc
mov
lcall
les
mov
jge
cmpsl
jp
loopne
rolb
lret
movb
sti
nop
leave
adc
inc
sub
xlat
mov
outsl
imull
sbb
scas
mov
je
mov
pop
mov
add
enter
stos
lods
les
mov
push
stc
add
adc
add
mov
ljmp
insb
cmp
mov
aas
in
test
mov
mov
cld
jle
jnp
scas
adcb
mov
xor
pop
cmp
into
push
jbe
sti
cmpl
int3
or
sbb
pop
pop
adc
jge
loopne
jge
dec
in
scas
test
push
sbb
mov
pop
push
mov
fs
bound
rcrb
cli
push
mov
mov
dec
sbb
mov
lret
adc
lods
add
jbe
stc
sub
mov
sbb
pop
jnp
out
mov
fisubs
aaa
std
lgdtl
out
push
push
push
jmp
mov
repnz
in
and
cmp
repnz
and
cld
sbb
fsubr
push
sbb
or
test
sti
loopne
push
mov
sub
inc
mov
add
popf
int
sub
pop
push
aaa
in
jo
sub
cmp
jns
cwtl
push
mov
mov
aad
adc
xchg
mov
or
or
dec
sti
scas
sbb
test
test
pop
inc
pusha
aam
jmp
pop
bswap
or
jmp
dec
ljmp
push
stos
pop
inc
cmp
push
es
push
sbb
cli
in
lock
add
mov
sbb
ds
cmpsb
add
inc
inc
pop
aad
ret
inc
stos
xor
pop
shrl
adc
jp
inc
mov
push
into
fadd
push
push
jl
inc
hlt
xchg
popf
xchg
std
cwtl
fcoms
cwtl
push
insl
push
stos
test
xchg
jle
add
sbb
add
dec
xor
mov
mov
sbb
push
shrl
mov
jmp
inc
jne
jnp
xchg
xor
push
adc
push
jge
sub
push
pop
adc
ja
rcl
sbb
out
xchg
jmp
add
mov
adc
xchg
pop
jb
xchg
xchg
fiaddl
shl
mov
aas
jmp
insl
xchg
mov
mov
roll
cmp
scas
cld
lcall
sub
ret
stc
push
daa
out
ret
dec
scas
out
lcall
inc
mov
pop
sub
xor
mov
loope
pop
jl
fiadds
lods
sahf
lods
ss
mov
lret
jmp
sbb
insl
jmp
std
jle
dec
out
in
call
dec
inc
mov
xchg
push
cs
xorl
fucomi
push
lret
dec
push
mov
lea
hlt
push
xchg
mov
in
xor
inc
mov
cwtl
inc
mov
outsl
into
dec
sub
mov
add
popa
lods
ljmp
and
add
cmpsb
sub
push
clc
subb
fucompp
xor
jmp
cmp
mov
in
add
iret
cltd
idivl
andl
sbb
rclb
aam
ret
adc
mov
mov
dec
movsl
pop
mov
mov
insl
xchg
dec
fs
out
or
in
mov
sbb
fsts
add
daa
aad
fnstenv
add
insl
orb
nop
push
adc
imul
fisubl
pop
shrb
push
inc
pop
xchg
inc
mov
pop
adc
mov
repz
sbb
loopne
or
ret
nop
test
int3
mov
pop
pop
mov
cmp
lahf
es
jl
insl
je
lea
pop
sub
and
cwtl
push
mov
cs
xchg
fidivl
mov
push
out
fmul
jno
ud0
imul
test
js
mov
addr16
sub
add
cmc
rcll
ucomiss
mov
lds
xor
fists
dec
push
jns
lahf
lods
iret
push
xchg
in
adc
xchg
mov
in
cmp
mov
fiadds
xchg
jg
adc
mov
je
jle
jle
mov
rcrb
dec
out
les
fnstcw
xchg
sbb
or
insb
xchg
sbbb
or
popf
sub
out
fsubrp
jmp
pop
mov
hlt
lcall
sub
daa
jnp
je
and
lock
fbstp
pop
mov
scas
mov
ret
imul
cld
and
or
push
dec
push
int3
iret
mov
addr16
test
sub
dec
jp
xchg
es
sbb
jp
mov
sbb
inc
fwait
pop
pop
js
rcll
jb
mov
mov
test
nop
daa
sub
arpl
cmp
stc
mov
inc
arpl
pop
inc
cmp
pop
pusha
fdivrl
addr16
dec
insb
stos
adc
outsb
incl
inc
inc
rorb
arpl
sub
movsb
js
pop
imul
int
mov
insl
xchg
negl
mov
aad
es
aam
cmp
shlb
pop
nop
cld
test
outsb
xchg
cmp
stos
mov
jno
enter
fsubs
cmpsb
gs
cwtl
sbb
xchg
lret
jle
rcrl
mov
xchg
pop
or
dec
ss
aaa
clc
add
push
xor
out
pop
in
test
mov
push
out
lock
cli
or
mov
shl
and
arpl
outsl
shll
shlb
dec
dec
pop
sahf
mov
add
cmpsl
lods
std
nop
sbb
push
or
arpl
xchg
call
pop
or
lds
xor
add
push
adc
mov
data16
push
fwait
xchg
cmpsb
push
sbb
fisttps
jle
push
shll
les
or
rcll
mov
push
fbstp
adc
mov
std
imul
insl
cmc
jno
add
inc
jns
adc
mov
mov
fnstcw
jl
fs
mov
jl
xchg
movsl
adc
jno
addl
xor
gs
push
push
mov
push
jg
mov
lock
std
add
cmc
fwait
add
and
sub
in
clc
sbb
pop
mov
pop
mov
push
in
add
sti
rolb
xor
dec
xchg
fstp
fstl
dec
rolb
sahf
inc
in
jl
dec
ret
and
mov
cmp
or
and
dec
inc
imul
add
sub
int
pop
shlb
loope
fdivl
inc
push
outsb
inc
push
mov
das
fidivrl
xchg
arpl
mov
int
push
pop
daa
aad
pushf
dec
loope
xchg
enter
js
test
xor
inc
jle
out
inc
cmpxchg
inc
inc
push
pop
cmp
cld
mov
sbb
nop
sti
lea
adc
xor
mov
movsb
xor
mov
dec
and
imul
adc
in
lods
aad
jnp
pop
outsl
rcrb
call
jae
pop
js
xor
out
pop
jae
or
jge
push
pop
test
cld
ja
cwtl
lods
mov
pop
fwait
or
sub
cmp
in
ja
xor
dec
aaa
iret
imul
fadds
stc
sub
shll
dec
pop
cmc
or
stos
xor
pushw
ret
or
fnstenv
out
rorl
and
dec
xlat
lahf
mov
sub
js
jl
pop
xchg
push
and
out
inc
mov
xchg
adc
pop
loopne
neg
mov
popf
mov
cltd
jecxz
popl
ss
mov
stos
push
scas
cmp
jge
scas
mov
sahf
dec
mov
lret
sahf
jns
push
out
push
popa
lea
mov
push
push
sub
sub
insl
jnp
or
loop
test
xlat
rolb
cmp
push
scas
cli
mov
sbb
sbb
push
out
jl
inc
sbb
insb
in
mov
dec
mov
cltd
pop
imul
mov
xchg
jp
sub
lds
repnz
push
fnstsw
sub
cmpsb
and
push
leave
adc
pop
clc
jo
ja
jmp
in
jge
and
and
push
adc
mov
add
loopne
xchg
jae
sub
pop
rcr
inc
push
imul
popf
movsb
mov
movsl
push
ret
data16
mov
test
jmp
ret
scas
adc
loope
xchg
into
adcl
xor
js
test
mov
imul
leave
lahf
push
std
fldt
or
pop
mov
pop
mov
dec
movsl
addr16
pop
int3
pop
insb
scas
seta
aam
gs
stos
dec
mov
push
inc
dec
jb
imul
lock
push
fstps
xlat
xchg
int
fucomip
mov
cmp
aaa
aaa
xor
dec
bsf
mov
pusha
push
inc
mov
rorl
sti
jns
add
dec
dec
cwtl
inc
inc
lahf
hlt
and
sbb
imul
mov
inc
divl
dec
nop
push
nopl
dec
add
sarl
jecxz
les
push
adc
jns
jb
ds
jb
rolb
inc
and
mov
shr
subl
sbb
pop
mov
insb
les
fsubl
sbb
leave
dec
lret
sub
and
dec
fnsave
enter
divl
sbb
sub
sahf
cmc
out
out
out
sbb
sub
stos
outsl
mov
ret
jl
dec
mov
cmp
lret
std
xchg
jp
cmp
ret
add
jmp
or
dec
pop
ljmp
xchg
dec
and
cli
sahf
mov
clc
dec
pop
imull
das
lock
add
lret
push
lds
cwtl
outsb
pop
mov
cmpsl
push
cmc
imul
sarb
xor
inc
xchg
addb
dec
push
mov
dec
gs
jb
xor
sarb
fs
push
jnp
repnz
dec
mov
sbb
xchg
and
scas
addps
repz
jo
test
push
push
pause
xchg
rol
mov
popa
inc
inc
out
das
mov
mov
inc
mov
push
sbb
loope
test
insl
cmp
lods
or
shl
jp
outsb
mov
cld
or
jno
ljmp
lcall
sbb
clc
loope
xlat
sahf
adc
cmpsb
dec
js
mov
jge
pop
pop
scas
out
movsl
or
and
loop
fs
or
subb
pushf
or
push
adc
mov
cwtl
xor
popa
jg
jmp
or
add
inc
or
in
cmp
sub
daa
lcall
rcr
and
lret
xchg
sbb
inc
push
push
icebp
add
xor
mov
xorb
gs
fdivp
add
cmp
add
test
xor
mov
jmp
mov
mov
notb
sub
ret
pop
mov
push
mov
addr16
jbe
inc
popa
push
jbe
pop
lcall
and
mov
or
and
iret
sarl
push
jecxz
movsb
lods
rolb
jb
mov
pop
lret
dec
jae
xchg
push
shrb
xor
hlt
and
xchg
mov
or
adc
cmpb
push
jge,pt
in
adc
cmp
add
and
mov
push
sarl
jne
cld
jle
insl
xor
fcmovb
idivl
subb
mov
fisttps
jge
pop
fidivs
jns
scas
aas
dec
pop
jg
jns
ret
gs
mov
jge
addr16
mov
mov
mov
stos
adc
fs
cltd
dec
dec
pusha
mov
push
insb
add
loope
pop
les
cmp
icebp
add
xchg
jnp
and
sti
sar
sub
and
mov
or
stos
and
cld
mov
jo
cltd
int3
cmpsb
mov
fcomps
je
mul
popf
into
cwtl
add
push
roll
cli
jo
jp
xor
xor
stc
cmp
push
test
clc
push
mov
xchg
sub
and
loope
mov
shll
test
fidivs
cmp
out
out
mulb
fcoml
push
adc
fisubrl
aaa
test
out
cs
or
adc
cmp
push
sub
rorb
jne
jle
hlt
sbb
inc
fbld
lods
andb
cltd
mov
icebp
or
jp
inc
iret
inc
sbb
negb
sbb
push
rclb
xor
jecxz
mov
mov
pop
lods
pop
inc
rcrl
push
dec
addr16
xor
dec
enter
sbb
add
mov
sub
jb
sahf
xlat
jp
xor
xor
sbb
test
pop
dec
imul
into
jmp
jecxz
daa
cmpsl
adc
je
push
rcrl
pop
cmp
jb
mov
mov
jns
mov
jno
pusha
addr16
mov
mov
aas
adc
es
mov
mov
pop
cmpsl
testb
imul
xchg
and
xor
push
and
ljmp
sbb
mov
out
mov
add
mov
cli
add
pop
dec
cwtl
fistl
cmp
sub
mov
mov
sbb
enter
arpl
and
pop
cmp
pop
add
stc
test
movsl
cmc
aad
pop
rcll
jecxz
pop
leave
push
mov
jle
jp
jg
mov
bound
iret
jo
and
or
or
or
adc
mov
cmp
push
cmp
jbe
jae
sub
adc
adc
and
inc
js
inc
pop
sub
xor
xchg
in
imul
jmp
cmp
mov
jbe
xchg
es
sbb
fdivrl
dec
or
ds
jl
shr
stos
aaa
test
cmp
icebp
cmp
and
mov
or
aam
lcall
and
xchg
shrb
outsb
add
mov
pushf
in
and
sbb
int
in
push
call
mov
or
outsl
mov
jns
std
mov
sar
mov
ret
cmc
addr16
sti
lahf
mov
adc
rcr
xchg
repz
pop
aam
lahf
adc
mov
or
xchg
push
jb
imul
and
repnz
fildll
imul
adc
fnstenv
addb
addl
pop
hlt
cmp
dec
shl
sbb
cmp
addr16
cmpsb
xchg
mov
notl
cmp
jae
add
pop
push
mov
adc
jns
jle
jb
inc
les
repnz
mov
test
addr16
outsb
cli
es
stos
xchg
push
xlat
cmp
call
ljmp
stos
xchg
jp
xor
mov
test
mov
out
sahf
outsl
lahf
out
dec
ret
pop
mov
xchg
insb
mov
xchg
adc
mov
rcl
out
test
push
sub
jg
push
xchg
dec
repz
adc
mov
out
or
fstpt
pop
inc
bound
mov
cs
pop
nop
xchg
int
adc
pop
dec
bound
jae
into
addr16
scas
cmp
add
jle
cmc
pusha
mov
jge
hlt
xor
mov
jne
lcall
or
fs
imul
and
repz
mov
movsl
sbb
cmc
fdiv
fistpl
ja
inc
add
adc
push
inc
ror
and
or
das
sbb
cmp
dec
cld
lret
in
jl
jmp
xchg
clc
mov
adc
icebp
outsl
push
ljmp
aas
sarl
add
xor
pop
push
mov
cs
loope
aad
dec
in
aaa
adc
inc
lods
ret
or
pop
xchg
ja,pn
add
xor
std
jns
cmp
dec
sub
jo
insb
mov
mov
fs
cld
loop
mov
lret
jmp
jle
pusha
scas
sub
cmc
sub
sahf
stc
sub
mov
cmp
adc
push
pop
push
dec
loopne
lea
scas
fs
or
mov
mov
inc
lock
clc
xchg
clc
std
sbb
fstpt
das
outsb
pusha
movsb
hlt
inc
adc
mov
inc
xor
sub
xchg
loopne
movsl
pushf
movsb
ficoml
sbb
mov
shll
add
dec
es
ja
gs
inc
orl
inc
imul
shl
inc
or
push
mov
sbb
sahf
mov
cmp
movsl
test
pop
das
into
xchg
sub
inc
rorl
fnstsw
movsw
lods
add
push
gs
pop
xor
aad
fidivrs
adc
push
mov
adc
mov
mov
loope
dec
add
jmp
cmc
inc
push
int
pusha
jbe
add
cmp
sbb
loop
in
test
lods
repz
mov
cmp
sarb
test
xor
out
jle
mov
add
js
cwtl
or
js
dec
ljmp
mov
adc
sti
dec
push
inc
insl
cmp
jbe
in
adc
push
test
int3
or
lock
inc
add
push
xchg
popf
inc
hlt
movsl
jmp
test
inc
jecxz
mov
adc
dec
and
jb
ja
scas
mull
or
jp
jg
inc
clc
or
call
stos
jns
imul
mov
loopne
or
cld
dec
pop
jge
adc
stos
daa
push
xor
int3
inc
dec
subb
mov
jecxz
jae
or
sbb
jae
cmp
dec
cmp
jns
lahf
mov
fbld
lret
aas
mov
mov
cmc
mov
shr
pop
orl
cmp
insb
insb
clc
stc
ss
mov
inc
out
pop
jae
xchg
mov
iret
lods
notb
jp
out
push
xchg
insb
enter
inc
std
cmp
push
imul
xor
inc
lret
push
ret
pop
enter
repz
mov
sbb
adc
sub
xor
xor
add
mov
in
or
add
mov
adc
mov
movsb
divl
repz
xchg
add
sub
cli
divl
stos
testb
jle
sub
fsubs
rolb
push
scas
cwtl
rol
rcrb
sti
sbb
xor
pop
in
or
or
rorb
or
dec
mov
fidivl
fst
xorl
xchg
add
stos
dec
xchg
in
push
fnsave
outsl
xchg
fdivs
pop
or
outsb
in
scas
and
sub
sar
fs
inc
mov
cwtl
fimull
and
shlb
mov
lds
mov
and
clc
repnz
js
mov
dec
test
add
push
sbb
scas
cltd
pusha
push
aas
rol
lea
rorl
xchg
push
adc
pushf
xchg
add
pop
jno
xlat
dec
mov
rcrl
cmp
add
ljmp
dec
repz
orb
inc
adc
cmc
out
mov
or
sub
rcrb
dec
popa
xchg
dec
sbb
dec
xor
into
psubq
and
in
lds
fsubs
das
insb
mov
into
sub
jge
leave
pushf
int3
push
lock
shr
iret
mov
jnp
cmpl
icebp
xor
dec
aad
and
dec
inc
movb
std
popf
cmp
imul
xlat
ljmp
iret
xchg
xchg
adc
add
adc
ja
jl
cmp
jmp
repz
inc
std
int
test
scas
inc
jo
and
sub
xchg
inc
out
aam
insl
sbb
out
and
mov
mov
pushf
aam
std
sub
dec
push
stos
das
test
cmp
dec
ret
fucom
popa
mov
jmp
dec
mov
mov
std
jae
call
pop
cli
aad
push
imulb
mov
out
jl
neg
cmp
xor
fsubrl
stc
and
in
imul
add
sub
xor
dec
movsb
xchg
sbbb
push
or
je
cwtl
jne
test
aaa
inc
pop
int3
and
psubq
das
mov
sar
and
addr16
fwait
sbb
add
mov
jo
mov
dec
adc
add
xchg
test
sub
nop
sub
movsb
fists
push
dec
ret
mov
cmp
push
xlat
xchg
push
imul
popa
xlat
pop
insb
negl
sbb
fidivrs
and
fdivs
cmp
movsb
sub
shrl
add
add
jo
lret
mov
or
mov
jl
pop
test
scas
stos
dec
sub
mov
ja
jns
or
xchg
fwait
cmp
ja
mov
std
test
adc
outsl
sub
lock
xchg
cmp
jmp
and
and
ds
scas
cmpsl
rcr
mov
mov
mov
aaa
sbb
ds
lahf
data16
nop
sub
sbb
jg
push
andb
xor
cmp
mov
cld
mov
ja
adc
mov
jge
std
fcoms
cmpsl
movsb
add
and
inc
sub
cld
mov
js
cmp
sbb
push
test
lock
aad
test
add
shll
and
cmpsb
sbb
mov
mov
lahf
mov
dec
aas
icebp
push
xchg
mov
pop
mov
adc
cld
push
mov
push
aas
mov
pop
ss
inc
frstor
orb
add
imul
xchg
and
push
addr16
call
sub
inc
into
xor
lahf
popa
test
cmp
int
ljmp
add
inc
push
mov
cmpsl
inc
mov
orl
add
jmp
xor
dec
adc
dec
cmp
aam
fidivs
sbb
aas
das
cmp
jno
aaa
ds
std
mov
mov
xchg
dec
xor
mov
adc
mov
dec
lock
or
test
mov
popf
pop
pop
fisubs
les
mov
cltd
out
mov
div
arpl
cld
mov
fnstenv
cmp
cmp
mov
inc
push
icebp
gs
rolb
loopne
mov
shl
push
out
pop
sti
cmp
ret
adc
jmp
mov
sbb
lock
mov
push
add
xchg
int
shll
aas
sub
iret
sbb
add
xor
pop
xchg
add
shrb
sbb
in
out
les
inc
dec
fstpl
dec
repz
and
aas
and
push
ret
cmp
aaa
lock
imull
jo
pushw
gs
adc
mov
cmp
push
push
push
addr16
clc
testb
mov
insb
imul
sub
jae
cmpsl
aam
loope
pushf
out
dec
dec
add
rcr
aas
jge
dec
jl
mov
xchg
cmp
xchg
mov
mov
icebp
pop
jl
pop
and
rcrb
clc
js
mov
mov
gs
sbb
test
loopne
push
arpl
movsb
iret
xchg
push
mov
dec
push
jl
inc
xchg
jne
xor
mov
xchg
push
movsb
dec
xchg
dec
pop
push
sbb
or
les
or
pop
mov
fisubs
xchg
test
loope
into
in
repz
aas
mov
sub
insl
dec
adcl
and
cmp
je
shrb
inc
popa
xchg
fstpt
xor
jmp
push
adc
lret
push
cs
push
jnp
pop
idivb
das
cmp
sub
jnp
and
adcb
fisubrs
jne
leave
xor
or
cmpsb
aas
xchg
mov
movsb
popf
sahf
fucomp
push
adc
mov
int
popa
or
xchg
lods
add
ja
ret
push
scas
loop
mov
inc
mov
imul
or
mov
into
cltd
jno
inc
jmp
adc
gs
nop
mov
jbe
mov
or
sub
pop
xor
mov
and
xor
into
ret
test
addr16
dec
cmp
push
mov
movsb
test
mov
push
add
mov
push
icebp
jbe
repz
das
add
lcall
rorl
jbe
ljmp
insb
bnd
lret
push
rclb
outsb
ret
ret
sbb
fidivrl
cmp
push
sbb
push
sub
push
lea
xor
xchg
cwtl
cs
add
test
inc
sub
inc
or
xchg
rolb
lcall
mov
mov
lahf
pusha
jnp
rorb
dec
xchg
and
mov
xchg
push
hlt
adc
dec
test
je
out
loop
loope
cmp
inc
out
clc
mov
adc
sbb
icebp
pop
fstps
or
fs
test
sbb
push
das
sbb
scas
xor
sub
inc
mov
jg
sbb
or
dec
xchg
nop
pop
and
ret
add
insb
xor
or
das
cmp
mov
rcrb
lret
stc
jns
push
mov
and
push
mov
outsb
mov
fnstcw
lds
idivb
add
ljmp
and
leave
scas
push
hlt
cmp
mov
xchg
inc
and
xor
dec
mov
test
fcomp
scas
ret
fiaddl
in
adc
mov
or
mov
push
mov
ret
jecxz
sub
cmp
clc
or
inc
adc
adcl
cmc
sbb
mov
cmp
test
int3
pop
enter
xor
add
jge
pop
dec
dec
pop
aam
repnz
and
xchg
jg
iret
enter
cltd
mov
mov
mov
fwait
cmpsl
xchg
add
repz
xchg
lods
inc
cmc
sub
adc
les
pop
cmp
lret
pop
test
out
iret
mov
aaa
jge
and
adc
daa
and
sub
push
xor
cmp
xor
lea
fisubrl
clc
shll
jmp
fwait
jle
inc
pop
ficoml
mov
fisubrs
jge
rclb
sub
stos
stos
jecxz
outsl
push
rorl
push
push
cmp
or
and
aaa
push
lds
movsb
cmp
push
arpl
jnp
lods
fnstenv
and
mov
cmp
loope
lahf
adc
and
xchg
fdivs
jno
mov
or
in
xor
jno
add
shl
shrl
gs
xchg
test
outsb
insb
adc
push
pop
and
insl
fcompl
mov
adc
pop
lret
add
jmp
mov
pop
mov
sub
mov
in
shr
inc
add
ss
inc
pop
test
aas
repz
mov
imul
jae
inc
fistl
ss
push
ja
dec
shl
xorl
sbb
add
jno
scas
push
mov
pop
cmp
cmpl
and
jae
fisubl
mov
or
jmp
aam
mov
add
idivl
xor
sbb
scas
test
ret
sub
adc
lock
jge
jnp
sbb
jg
fisttps
cld
jns
jl
and
les
daa
ss
decb
inc
push
dec
fsubrl
adc
out
test
pop
stos
adc
adc
inc
mov
mov
addl
xchg
jno
mov
out
pop
xor
inc
or
data16
out
outsl
es
sbb
push
std
fstpt
js
fwait
and
les
std
aas
psubq
imul
cs
adcl
loop
rcr
dec
dec
sar
push
sbb
cmovp
inc
xor
add
test
cmp
push
and
xchg
jno
loope
out
and
mulb
xchg
mov
push
xchg
in
test
shll
mov
fldt
mov
das
ret
leave
cmpsb
jbe
mov
dec
push
scas
mov
or
mov
shll
xchg
lock
push
mov
movsl
mov
lods
loop
xchg
data16
jle
mov
rcl
add
popa
push
and
sbb
cli
jge
das
pop
xchg
push
sub
fadd
out
and
ret
mov
sub
jge
scas
mov
mov
xchg
jo
push
cmpsb
push
pop
mov
fmuls
loop
jecxz
je
shll
xchg
std
lock
xor
add
mov
dec
push
pop
push
push
pop
aaa
cmp
lahf
jne
lret
ret
sbb
das
jp
cmp
and
out
and
cmp
push
out
mov
or
call
sub
adc
sbb
cmp
mov
in
push
pop
and
cmp
xor
add
insl
cmp
dec
les
imull
cmp
inc
pop
cmp
test
mov
jne
inc
test
out
aaa
cmp
stos
decb
mov
aas
mov
repz
mov
dec
aam
lret
sbb
and
sbb
mov
std
cmp
push
mov
in
fmuls
jp
jbe
ljmp
mov
js
lret
iret
es
jb
mov
jmp
adc
in
ret
pop
pop
mov
xchg
lea
add
inc
jnp
sub
mov
lods
std
mov
rclb
pushf
pushf
out
jnp
xor
sub
in
cmp
ljmp
or
xchg
inc
add
cmp
and
sub
fldcw
fs
cmp
lret
fdivrs
loop
pop
imul
xchg
pop
pop
or
lea
sub
dec
insl
test
in
adc
jno
out
push
pop
shrl
daa
xor
aad
cmp
les
insb
fidivl
sarb
adc
fmull
mov
lret
pop
cwtl
shlb
in
dec
sbbb
pop
cs
mov
daa
das
cmp
push
mov
dec
lret
jge
jmp
xchg
cmp
xlat
fistps
pop
cmc
nop
rclb
jbe
aas
pop
stc
lds
fisttps
inc
nop
dec
ja
add
leave
jae
inc
add
sbb
imul
stc
dec
lret
das
sbb
pop
call
pusha
les
xchg
pop
adc
movsl
and
inc
cmpsl
decb
lds
cmp
enter
pusha
out
mov
xor
cmp
mov
into
in
sbb
pop
inc
mov
xor
jp
sahf
loop
pop
jmp
adc
cmp
lret
mov
scas
test
clc
mov
clc
xchg
sub
xchg
push
push
loop
xchg
cmp
dec
aaa
inc
scas
push
inc
pop
jmp
and
xor
lea
cmp
and
xchg
xorl
pop
in
fs
push
lea
sbb
insl
xchg
ljmp
mov
pop
mov
dec
test
and
inc
pop
inc
push
sarl
mov
out
stos
fldln2
jle
lock
pop
mov
rep
out
subl
loopne
xchg
fdivr
lds
dec
inc
iret
stc
bound
sbb
push
icebp
mov
pop
gs
insb
test
inc
and
ficoms
addb
daa
rep
xchg
xor
push
bound
dec
cs
data16
jne
dec
cmp
mov
sub
jns
pop
imulb
cmp
movsl
and
inc
bound
jmp
jmp
or
pop
cwtl
imul
dec
mov
mov
je
lcall
cmp
jmp
das
sub
mov
cmpsb
jle
push
pop
sub
iret
dec
stc
daa
dec
in
mov
add
sbb
jge
arpl
clc
test
imul
xor
or
pop
movsb
or
mov
sbb
jns
or
xchg
jb
mov
cs
cmc
pop
in
xor
popa
adc
test
mov
lods
jmp
inc
and
push
popa
popf
cmpsl
and
int
scas
movl
dec
inc
push
test
rcll
orb
and
es
and
iret
repnz
push
sbb
xor
repz
add
dec
mov
lcall
xor
sbb
lods
scas
scas
idivb
jmp
test
cmp
test
jp
jecxz
add
loopne
ds
pusha
bound
push
idivb
dec
sub
jns
pop
out
stos
ja
outsb
or
loopne
cmc
pop
je
shll
stos
cs
imul
pop
push
push
repz
lret
mov
sbb
lea
lods
dec
pop
and
jle
cmc
cmp
cld
pop
data16
xor
add
jecxz
mov
and
cltd
arpl
lock
imul
sub
sbb
dec
iret
shll
pop
xchg
cli
aaa
ret
inc
aaa
fs
lahf
cmp
lock
shll
pop
sarb
push
iret
sub
repz
lods
scas
movl
js
pop
or
inc
andb
shrb
popf
sarb
mov
lcall
add
or
mov
fwait
lret
mov
jnp
pop
mov
cs
in
ss
fiadds
cmp
pop
xor
mov
xchg
arpl
iret
clc
add
mov
xor
inc
push
dec
int3
dec
sbb
sbb
sub
aas
rorl
jnp
lcall
test
jo
mov
cmp
rorl
movsl
in
fiaddl
rcrl
jne
scas
mov
fidivrl
jcxz
or
mov
add
push
stc
cmp
pushf
mov
add
pop
js
jmp
clc
mov
das
or
test
pop
pop
mov
push
xchg
sbb
cmp
adc
ss
int3
cmp
cmc
pop
rclb
jl
ds
dec
or
mov
loope
pop
testl
dec
sahf
mov
sbb
cmpsb
inc
dec
pop
ljmp
push
aaa
sub
stc
jmp
mov
inc
cmp
out
push
push
cmp
xor
push
or
xchg
dec
insl
mov
repnz
ss
mov
movsl
into
bound
notb
hlt
xor
jnp
pop
cmp
repz
jbe
jg
xchg
jge
jl
in
ss
mov
pop
cmc
jae
xchg
push
lret
je
xchg
xor
push
nop
test
and
add
inc
pop
fistpll
loop
scas
icebp
dec
test
adc
ja
addr16
inc
lcall
jmp
mov
dec
aad
add
gs
adc
mull
add
xor
jmp
dec
clc
mov
out
mov
pop
inc
out
jae
cmp
sahf
movsb
inc
out
lret
xlat
inc
adc
xchg
loopne
push
arpl
inc
or
push
xor
lock
repz
in
loope
cmp
cs
mov
loop
xlat
leave
push
enter
aam
bound
outsb
imul
out
mov
pop
xor
je
jmp
mov
bound
pop
arpl
adc
inc
cmp
loop
sti
into
jnp
mov
mov
mov
xchg
fists
int
call
pop
mov
pop
leave
ficompl
rorb
inc
jbe
int3
pop
test
cmp
pushw
out
xchg
jo
ret
push
sbb
mov
imull
mov
sub
js
sub
add
jb
jns
or
stc
cmp
stos
xor
adc
aad
mov
jl
xchg
dec
mov
mov
lods
outsl
inc
dec
stc
mov
imul
push
sti
jb
pop
pop
lahf
clc
call
push
and
sbb
test
pop
dec
push
mov
add
lea
mov
in
sbb
pusha
and
mov
popa
in
fsts
pop
lret
gs
inc
push
cmp
int3
aam
imul
dec
pop
mov
aas
and
popa
mov
pushf
pushf
inc
xchg
rcpps
js
lock
decb
mov
push
jecxz
out
fildl
cs
xor
mov
aaa
test
clc
stos
scas
pop
adc
push
or
movsl
pop
in
push
sub
shrl
xchg
pop
dec
xchg
push
inc
scas
xchg
mov
and
sbb
mov
loop
popa
pop
lock
mov
push
lret
into
push
lahf
movsl
es
jp
mov
push
xor
gs
arpl
fdivl
dec
push
pop
sbb
push
arpl
rclb
dec
push
inc
fwait
mov
xor
js
xchg
scas
movsb
clc
aad
xor
sub
sbb
inc
rolb
addl
cmp
insb
test
loopne
jne
or
xlat
out
push
pop
push
cmpl
loop
data16
cmp
mov
mov
add
adc
imul
cmp
add
jge
dec
in
xchg
mov
mov
pop
adc
popa
xorb
ljmp
dec
sub
out
dec
push
cmp
mov
into
call
jg
in
cwtl
rcrl
adc
dec
or
or
test
push
imul
in
mov
mov
xor
fstps
adc
insl
mov
mov
jb
add
enter
sub
sahf
mov
shrl
ds
push
fbstp
mov
push
lret
ret
dec
pushf
or
xchg
push
xorb
insb
mov
fucom
mov
mov
adc
pop
aas
and
xchg
insb
aas
fmul
shl
lret
sti
inc
mov
leave
jmp
push
adc
cmp
cmp
sbb
dec
push
mov
call
gs
push
xchg
imull
cltd
lret
aad
out
inc
sub
mov
push
cmpsb
imul
in
iret
nop
call
xor
sbb
add
arpl
xchg
in
push
push
xchg
jns
mov
inc
fldcw
addr16
mov
fcoms
jecxz
stc
rcl
sub
cmc
xchg
xchg
sub
xchg
jae
jge
cmp
sbb
dec
nop
pop
clc
sbb
and
add
rorb
sbb
add
dec
popf
std
xor
push
and
sarb
dec
dec
clc
enter
mov
push
movsb
jo
addr16
scas
inc
jge
cld
cmp
and
adc
ljmp
sub
xor
stc
add
jns
ret
in
jns
ljmp
push
ljmp
mov
xchg
jle
adc
mov
push
imulb
and
add
test
and
cmp
and
mov
ja
cld
xchg
mov
insl
mov
jb
add
ret
push
sbb
mulb
iret
out
fisubl
xchg
sub
bound
inc
jnp
test
stc
mov
adc
pushf
scas
mov
movsb
push
xor
xchg
cmp
mov
loopne
shll
aad
push
xor
fwait
insl
lahf
mov
sbb
vmovaps
daa
je
test
push
arpl
in
sub
inc
push
vaddsubps
mov
lock
sbb
and
in
je
mov
pop
xchg
adc
and
aas
add
dec
jmp
outsb
mov
lret
arpl
xor
shll
out
js
int3
inc
cmc
push
ljmp
fs
leave
cmp
or
out
pop
adc
out
jnp
mov
pop
mov
push
jb
lret
cmpsb
xor
arpl
repnz
pop
enter
iret
xor
and
push
dec
mov
fcomp
sahf
pop
shlb
out
andb
scas
int3
xlat
mov
push
shll
mov
cmp
loop
in
call
or
push
test
mov
cmp
sbb
gs
les
in
iret
push
sub
and
mov
mov
orl
jnp
and
cwtl
push
aaa
and
push
test
jne
ljmp
push
mov
int
cmp
xor
mov
dec
sbb
aaa
enter
and
ret
or
shlb
inc
fisubl
aam
push
jecxz
ljmp
mov
repz
push
popa
arpl
sub
mov
lret
xchg
nop
sbbl
push
cltd
addr16
addr16
cmpsl
mov
outsl
or
fisttpl
cmp
outsl
push
das
into
popf
mov
mov
add
ja
add
mov
mov
test
or
imul
xchg
out
sbbb
and
pop
movsl
or
mov
std
mov
scas
insb
ror
leave
push
push
enter
repz
fildll
mov
pop
jb
mov
inc
inc
cli
sub
icebp
cwtl
xor
popa
mov
sti
mov
negb
mov
xor
inc
xchg
inc
or
cmp
dec
xlat
xchg
aas
test
sub
pop
adc
jae
mov
imul
mull
sbb
ja
jl
jle
adc
scas
jne
pop
test
rcrl
xchg
jl
xor
cwtl
mov
pop
ljmp
mov
dec
xor
cmp
in
sbb
dec
ds
scas
movsb
cmp
aas
add
ljmp
cmp
clc
jle
lcall
sti
cwtl
jb
jl
shlb
out
dec
adc
pop
pop
mov
jae
int3
ret
lods
out
cmpsb
loopne
mov
call
in
fldl
inc
and
sbb
inc
dec
negl
out
out
push
test
push
insb
leave
inc
mov
ja
adc
cmc
rcll
jmp
lock
je
jge
jecxz
xchg
sbb
inc
push
insb
pushf
fisttpl
mov
test
stos
mov
or
cmp
pop
cltd
es
jno
fsubr
xor
dec
insl
stos
and
or
xchg
and
inc
dec
in
xchg
sarl
pusha
test
aaa
fdivr
sbb
xor
or
rclb
pop
pop
push
or
xchg
outsl
fcmovu
sub
std
xchg
cmp
cmpsb
aas
outsb
xor
cltd
inc
cmp
fisubrs
ret
test
gs
sbb
cld
xor
lret
cmp
sub
lcall
rcll
pop
jge
adc
in
lcall
and
lods
data16
test
fs
lds
xor
dec
cmp
push
or
das
dec
or
or
aam
nop
or
cmp
mov
push
insb
movsb
pop
add
rorl
pushf
push
insl
add
cltd
decb
test
daa
add
jno
sahf
addr16
popa
cwtl
outsl
test
add
dec
ljmp
mov
fstpl
xlat
movl
repnz
mov
in
push
push
and
fldl
test
xor
outsb
andb
or
nop
mov
repnz
inc
add
mov
in
add
mov
je
les
and
out
insl
in
cmovl
mov
adc
pop
enter
lcall
aam
and
jo
push
add
xchg
cmp
mov
push
rorl
fs
shr
push
sahf
out
mov
mov
ljmp
out
adc
lods
sub
out
iret
mov
push
push
jns
addr16
fldl
dec
push
decb
jb
add
rorb
ror
es
sub
mov
push
push
test
inc
push
outsl
xchg
jmp
or
inc
pushf
push
into
mov
lea
and
cmp
je
push
and
addb
jae
std
xlat
cmpb
mov
jmp
das
push
sbb
pop
lods
aaa
jge
addl
mov
pusha
ss
inc
aaa
sahf
xchg
js
mov
or
shlb
outsl
sbb
repnz
or
xor
into
sti
repz
sub
int
stc
xor
jo
or
cmpsl
std
xlat
pop
test
push
adcl
push
imul
xchg
xchg
jae
push
cld
in
fisttpl
jbe
fwait
inc
adc
pop
sub
insl
cmp
inc
sub
loop
stc
popa
xchg
sub
ret
pop
xchg
test
push
pop
ficomps
je
or
pop
lods
out
add
lcall
pusha
adc
ss
push
push
shlb
or
or
pop
dec
xor
nop
or
mov
pop
loop
push
das
insb
cmpsb
ret
inc
xchg
mov
arpl
dec
push
sbb
and
xchg
fdivrl
push
sahf
mov
push
adc
lcall
test
es
in
mov
stc
cltd
dec
lds
push
adc
adc
add
dec
fwait
adc
dec
mov
enter
xchg
dec
jle
into
push
mov
and
mov
pop
and
cmp
js
lock
mov
ja
cmp
lret
xlat
mov
push
mov
insb
mov
sarb
mov
jb
addr16
push
inc
in
sbb
sti
mov
cltd
aas
clc
jne
sbb
enter
imul
jo
dec
inc
cmpsb
loop
sti
icebp
mov
push
or
popf
popa
shrl
dec
sbb
push
mov
push
inc
fisubs
mov
cmpsl
lods
jae
xlat
and
cltd
lea
rorl
xchg
cmp
addr16
iret
mov
sbb
push
mov
std
mov
lcall
mov
sub
inc
out
push
push
ficompl
cs
movsb
adc
sti
sub
loopne
imul
repnz
leave
pop
add
pop
testb
push
mov
xchg
inc
xlat
movsb
sub
ret
mov
cmp
push
mov
and
daa
and
pop
mov
push
cld
ja
outsl
aaa
cmc
in
and
jb
mov
int3
cmpsl
addr16
mov
je
loopne
call
ds
xor
and
gs
movsb
hlt
mov
ficompl
sub
sbb
fnstenv
enter
sub
cmp
stos
lods
test
sub
jno
popf
popf
pop
int3
xchg
rcrb
and
ret
push
sahf
and
stos
dec
and
out
fsubs
stos
movsl
xor
push
dec
jnp
inc
jle
and
push
mov
lret
in
movsl
sub
cs
mov
pop
mov
inc
pop
mov
int3
movsb
mov
sub
sbb
das
icebp
stos
test
xlat
jmp
imul
cltd
or
xor
adc
jge
cltd
jle
pop
lock
or
cmpsb
leave
push
mov
mov
jp
arpl
push
shl
inc
arpl
jg
cmp
jp
xchg
fidivs
sub
test
out
xlat
sar
arpl
xor
jno
adc
decl
test
pop
movl
cmp
push
xor
int3
mov
sub
fdiv
xchg
jns
in
cltd
addb
inc
fadd
dec
mov
jle
ss
or
insb
pop
pop
stos
rcll
jecxz
fsubs
test
xlat
jbe
xchg
adc
jmp
pop
fistps
mov
push
mov
push
sub
push
loope
loopne
or
adc
movups
adc
mov
pop
arpl
out
sahf
jb
or
clc
es
into
jne
push
imul
add
xor
push
push
dec
xchg
test
lods
popa
punpckhwd
push
sub
pop
scas
lds
sub
lcall
icebp
sbbl
xor
negl
sbb
js
data16
dec
fsubs
mov
fisubrs
rclb
xor
sub
xchg
and
mov
inc
test
dec
and
out
clc
dec
sahf
insb
mov
xor
inc
lahf
jle
add
mov
fs
decl
or
mov
push
jbe
sbb
sbb
add
insb
ret
xlat
or
mov
int3
push
aas
out
adc
outsb
xlat
adc
movsb
insb
mov
sbb
lods
xor
mov
and
or
cmp
cmp
jle
mov
jmp
mov
movsb
lcall
pop
lock
call
add
jmp
mov
xor
cmp
ljmp
mov
inc
mov
repz
cmp
pop
add
imul
aad
adc
mov
loop
pop
inc
ljmp
mov
in
nop
in
leave
outsl
inc
jmp
pop
pop
xor
aas
mov
imul
loopne
xchg
push
int
rcrb
pop
in
sbb
push
pop
out
fsubr
xor
sbb
mov
sbb
pop
ja
cmpsl
lock
add
push
insl
sub
push
add
push
cs
test
jecxz
mov
mov
fsubp
adc
xchg
cmpsb
cmp
xor
jge
add
adc
pop
out
bound
loop
outsb
push
aad
xchg
cmp
mov
lahf
ljmp
cli
xor
mov
lahf
in
mov
aaa
in
aam
in
add
sub
mov
mov
aam
in
push
mov
inc
imul
push
rolb
movsl
xchg
int3
mov
jg
sub
hlt
hlt
jno
dec
imul
test
push
mov
push
mov
mov
mov
mov
or
and
movsl
insb
sbb
and
sub
sbb
into
mov
int3
mov
loope
rolb
loop,pn
mov
hlt
rol
call
ja
pextrw
cs
ficompl
movsb
mov
test
push
sarl
roll
inc
jle
out
dec
adcb
outsb
mov
or
pop
lret
xor
mov
push
or
xchg
scas
pop
aam
data16
test
jg
pop
sub
cmpsb
lret
add
fsts
int3
push
or
mov
jo
call
outsb
je
add
or
ss
rolb
aad
jp
jmp
frstor
fstpt
es
mov
ja
lock
testb
pop
cmc
push
lret
gs
sub
inc
adc
pusha
out
test
test
jmp
mov
mov
out
sbb
dec
mov
mov
and
xchg
bound
popa
inc
push
pop
xchg
daa
inc
adc
push
add
mov
aam
pop
hlt
push
push
mov
cmp
xor
xor
push
aaa
cmp
cmc
jge
inc
dec
adc
nop
lock
ret
movsb
or
fwait
lods
arpl
cmpb
add
sti
inc
xchg
pop
scas
dec
and
cltd
rcl
pop
out
aaa
mov
movsl
in
add
sbb
pop
shll
xor
dec
popf
int3
xor
rcrl
xchg
xchg
jle
mov
es
bnd
mov
clc
ds
xor
dec
lret
push
jle
push
adc
inc
push
mov
push
fwait
pop
push
jno
stc
lcall
fisubrl
push
push
cmp
mov
fcmovne
lea
add
pop
rcrl
cmp
lcall
loopne
sub
dec
or
xchg
xor
fsubl
dec
data16
rcr
outsb
cmp
jmp
and
push
mov
or
stos
jp
jecxz
push
popa
lret
add
or
pop
rcll
fildl
jmp
and
cmpsb
loop
out
mov
mov
xchg
call
and
mul
inc
mov
sub
dec
dec
in
xor
sub
ja
dec
fwait
dec
add
dec
in
jbe
and
cmp
cld
loopne
pop
jmp
jo
sub
mov
sub
subb
mov
in
mov
lcall
mov
fnstenv
xlat
imul
jnp
int3
rorb
jmp
adc
inc
mov
mov
adc
iret
adc
sar
repnz
aam
hlt
les
ja
xor
jg
nop
or
fsubs
pop
insb
xor
divl
mov
xchg
cmp
addr16
shr
scas
jo
sbbl
inc
imul
dec
cli
stc
mov
movsb
pop
loop
je
jbe
sbbb
jnp
mov
test
pop
or
stos
ret
idivl
or
lret
xchg
mov
mov
jg
add
push
mov
std
pop
popa
aam
repnz
les
jae
scas
jne
dec
stc
mov
aad
test
lahf
dec
pop
enter
xlat
jno
push
mov
pusha
or
popf
xorl
in
xchg
ja
cmpsl
inc
aas
sti
or
cld
jg
sub
jge
dec
jno
and
fcmove
mov
dec
adc
leave
xchg
xor
xchg
dec
sub
jl
or
mov
or
aaa
add
inc
mov
sub
xor
stc
loop
adc
pop
jmp
imul
cli
pop
fidivrs
je
and
das
lds
stos
cs
cmp
stos
in
cld
xor
pop
lea
cld
jmp
pop
jo
xchg
shrl
dec
lret
stos
dec
jns
cmp
cmc
adc
and
dec
or
nop
mov
dec
in
adc
mov
aad
push
stos
pop
and
mov
sub
cmp
add
pop
and
mov
insb
sub
pop
mov
adc
rolb
mov
dec
fs
ds
gs
add
nop
jmp
or
rcrb
sub
cltd
test
or
in
sbb
add
cmp
bound
ss
mov
std
xchg
push
mov
or
insl
lahf
sahf
mov
push
ja
scas
stos
add
test
mov
adc
jge
insl
jecxz
cmp
jns
mov
jmp
lock
in
mov
cmp
mov
xchg
ds
sbb
sti
xchg
les
cmpsb
dec
xchg
xchg
and
mov
jl
and
mov
dec
test
sub
sub
lcall
sarb
repz
xchg
das
mulb
sbb
pop
popf
stos
jo
mov
into
ds
bound
repnz
jb
mov
arpl
sub
inc
mov
cmp
add
mov
dec
aaa
add
fidivrs
sbb
std
repnz
pusha
cmp
push
mov
xchg
aaa
inc
outsl
sbb
das
adc
adc
adcl
push
jo
xchg
in
or
rcl
sub
inc
jbe
add
sub
mov
inc
outsl
dec
push
incb
in
pop
mov
lahf
jns
inc
sbb
xchg
in
leave
aaa
jne
call
and
pop
and
das
mov
in
add
rorb
daa
ja
xor
push
mov
inc
jb
imul
and
sbb
pop
add
jge
loope
inc
pop
cmp
mov
ja
mov
mov
in
insl
in
add
push
pop
cwtl
push
xor
sbb
pop
test
inc
sbb
mov
arpl
pop
movsb
ljmp
inc
lcall
add
stc
cmp
aaa
aam
ds
daa
inc
mov
mov
mov
or
leave
movsb
rolb
adc
mov
xlat
add
push
mov
or
sbb
or
or
vaddsubps
adc
mov
mov
in
push
int
push
jecxz
mov
cmpsb
int
dec
sarl
pop
outsb
and
jl
mov
sub
cs
lds
test
stos
push
nop
or
and
or
aaa
aam
cld
pop
xchg
inc
cli
or
adc
pop
sub
sbb
mov
js
insb
add
adc
sub
and
mov
add
jo
in
lcall
pop
outsl
pushf
sub
mov
popl
cs
outsl
lcall
imulb
dec
sbb
repz
mov
imul
lea
mov
data16
scas
pop
cmc
orl
xlat
cmp
and
mov
push
mov
fdivs
dec
fstpl
test
adc
stos
mov
add
jg
or
out
mov
mov
scas
fs
rcr
cli
aaa
ftst
jp
andl
cmpsl
insl
cltd
adc
pop
mov
sbb
xchg
cltd
jne
in
mov
sub
fidivs
jo
inc
fdivrl
add
or
dec
sub
xchg
test
pop
loopne
arpl
fs
sub
das
inc
imul
aam
fisttps
ljmp
scas
lret
lods
in
test
daa
push
cmp
daa
sbb
cmp
movl
push
sbb
imul
imul
or
aam
adc
imul
xlat
mov
in
int
aas
aad
xor
cmp
test
dec
pop
jmp
sbb
cli
outsl
fs
and
cmp
push
xchg
addb
insl
loopne
ds
test
sub
movsb
pop
mov
repnz
jne
cmpsb
outsl
inc
dec
rol
sub
xlat
shll
popl
aam
jne
lret
popa
xor
icebp
mov
cmp
or
sbb
mov
mov
inc
or
mov
push
scas
cmp
imul
cmc
inc
xchg
jmp
fadds
inc
les
mov
outsb
popa
aad
xchg
mov
sub
addr16
mov
adc
sti
sbb
in
pop
jg
mov
mov
jecxz
push
mov
or
add
andl
lret
out
xchg
aaa
cmp
out
sbb
sbb
pusha
cwtl
sub
enter
ds
mov
jmp
mov
mov
jmp
inc
push
adc
mov
sub
lods
add
js
movsl
sbb
jle
and
dec
and
div
test
push
das
push
pop
iret
outsb
mov
scas
mov
je
cmpsl
pop
lds
sub
pop
jmp
je
pop
jb
das
scas
dec
mov
jb
sbb
dec
jne
ret
in
mov
lods
dec
out
lods
fprem1
subl
pop
andl
push
inc
data16
sahf
add
insl
fs
mov
pop
sub
stos
cmc
inc
and
lret
inc
in
xchg
rcl
xlat
stc
pop
or
pop
cmc
addl
adc
mov
jl
insl
fdivrp
xchg
rolb
xchg
pop
push
jle
mov
mov
in
lret
dec
ret
push
mov
mov
sbb
loopne
or
std
and
das
rcr
in
mov
lret
out
cmp
or
mov
mov
pusha
nop
scas
mov
mov
xchg
and
je
addr16
lret
adc
out
shlb
mov
or
inc
fwait
dec
add
leave
lds
sub
cmp
pusha
cmovle
xchg
add
sbb
aam
pop
xchg
ficoml
mov
bound
cmc
inc
cmpsb
repz
sub
mov
xchg
call
ja
shlb
cmpb
adc
or
insl
or
jbe
mov
push
leave
ficomps
pop
data16
fwait
addr16
mov
cmpsb
icebp
sub
ds
fildl
mov
ficoml
cltd
faddl
dec
pop
push
dec
cmp
inc
xchg
les
mov
push
ficoms
sub
mov
ret
imul
pop
cmp
shll
inc
dec
orb
out
xor
jmp
and
or
mov
dec
mov
jb
stc
push
mov
jnp
xor
cmp
mov
cmpsl
mov
sbb
imul
add
pop
dec
in
and
dec
insb
insb
rcrb
xchg
or
jns
repnz
addr16
bsr
insl
in
inc
sbb
pop
test
dec
xchg
jecxz
mov
xor
or
int
mov
jo
or
xchg
frndint
mov
stc
cmpsl
pop
and
sti
jnp
fwait
or
mov
mov
pop
xchg
lock
repz
pop
aaa
in
adc
hlt
adc
cmpb
jmp
xchg
ljmp
stos
loopne
data16
rcrb
dec
fnstsw
or
shrl
push
out
bound
cmp
addr16
inc
fstl
xchg
sar
xchg
in
push
orl
shrb
shlb
lods
gs
pop
outsb
clc
inc
scas
xchg
inc
mov
andl
and
mov
inc
mov
cmpsl
fucomip
addr16
test
addr16
and
stos
or
decb
xor
xor
mov
pusha
mov
adc
inc
imul
loope
repnz
ljmp
jns
and
fcompp
inc
or
fnstcw
dec
sub
inc
pop
fs
and
mov
cmc
sub
jg
pop
lret
sub
pop
fimull
sub
pop
int
outsl
inc
push
inc
inc
dec
out
inc
out
in
shlb
sub
lea
test
cmp
sub
sbb
sbb
fiadds
enter
push
cmc
sbb
test
sbb
shll
mov
push
pop
add
popf
leave
ja
loop
mov
shrl
add
inc
lods
mov
rol
sub
rorl
sbb
jno
je
inc
adc
sub
xor
and
xor
adc
idiv
sbb
pop
or
xor
aaa
xchg
inc
xchg
pop
shll
jns
jp
repz
xor
cwtl
lahf
inc
cltd
jecxz
sbb
cmc
loopne
mov
or
pop
dec
add
mov
and
pop
fisubrs
cmp
iret
mov
enter
ret
xchg
test
mov
mov
call
adc
sahf
mov
mov
mov
das
mov
imulb
js
mov
insb
fidivrs
sbb
and
sub
push
mov
testb
mov
and
mov
xor
pop
xchg
outsl
xlat
into
jne
mov
mov
daa
or
jbe
fisttpl
mov
cs
pop
test
xchg
push
les
imul
mov
and
popf
lea
mov
or
push
mov
pop
cmp
cli
adc
ljmp
lock
movsb
xchg
loop
mov
dec
pcmpeqd
mov
inc
cmp
xorb
mov
push
mov
pop
stos
inc
es
or
pushf
cmc
mov
punpckhdq
mov
push
add
mov
adc
mov
sub
add
in
and
xchg
push
and
fbld
fstpt
fs
jno
pop
mov
daa
xor
int
jecxz
or
out
insl
push
rorl
repnz
sti
jp
mov
sbb
cwtl
les
mov
pop
cmovge
pop
adc
stos
jb
ret
jb
fs
lods
cmpsl
xorb
push
loop
stc
neg
rcl
and
pop
incl
inc
insb
jns
push
mov
mov
shl
jecxz
push
clc
pop
adc
xchg
cmp
inc
mov
rolb
sub
sarb
jecxz
jnp
push
mov
inc
idivl
loope
ljmp
xchg
or
mov
and
andl
xor
cmpsl
jp
jg
insl
ficoms
add
jno
ljmp
mov
andl
dec
dec
arpl
es
jecxz
out
sbb
push
push
mov
movsb
mov
dec
ret
data16
rorl
loopne
cld
in
mov
add
jmp
out
mov
jnp
movsb
inc
fs
xchg
jnp
or
nop
xor
pop
popa
decl
sbb
loope
cwtl
aad
cltd
cmp
fnsave
loopne
jmp
dec
cmc
mov
or
sbb
jbe
int
imul
sahf
int3
aas
out
nop
inc
adc
je
cmp
sbbl
das
inc
lds
or
cmpsl
sbb
das
pop
adc
and
imul
mov
ja
push
adc
or
lret
imul
int
jp
js
mov
incb
adc
cmp
aam
arpl
js
jle
add
vpshld
inc
and
inc
call
fucomip
sbb
stc
shrb
jno
inc
or
push
xchg
xchg
inc
xlat
scas
xchg
sub
sbb
fisttpl
not
jnp
xor
pusha
repnz
mov
pop
pop
leave
mov
clc
mov
leave
mov
jne
xchg
mov
jno
jp
sub
sbb
test
and
inc
test
je
ljmp
sti
cltd
sbbl
lahf
cli
fisttpll
js
cltd
aaa
adc
scas
out
fldenv
pop
das
cmpsb
shrl
xor
dec
pop
xchg
cld
insb
jns
aam
insl
popf
jo
outsb
inc
pop
mov
je
pusha
mov
pop
scas
pop
mov
mov
popa
lahf
mov
jnp
pop
fisttpll
movsb
adc
js
stc
cmpsl
sti
testb
xchg
out
jno
and
jne
outsl
jbe
scas
jle
cmpsl
outsb
sub
or
cltd
fstl
mov
dec
aam
roll
jno,pt
cmp
dec
inc
js
jbe
cld
inc
and
pusha
int
sbb
leave
sahf
add
push
jns
scas
jbe
or
sbb
mov
adc
mov
mov
mov
fisttpll
cwtl
cli
jns
ljmp
sbb
daa
mov
xor
jnp
insl
inc
pop
mulb
or
ficoml
add
outsl
aaa
rcl
mov
or
pop
cmp
sub
ja
arpl
cmp
ljmp
mov
push
pop
jns
xlat
dec
push
adc
mov
adc
adc
push
ds
cmp
jne
cmp
outsb
xor
fs
mov
jmp
mov
sbb
repz
xchg
gs
sbb
test
fcmovnu
icebp
xchg
nop
xlat
mov
xor
mov
xchg
cld
mov
dec
pusha
adcl
loopne
addr16
or
fists
dec
fnstcw
push
daa
nop
sub
cmp
cmp
shll
mov
aaa
arpl
cs
inc
mov
push
ds
addb
addr16
insb
xchg
int3
xor
loop
in
or
or
stos
inc
out
jns
mov
jmp
cmp
xchg
inc
mov
int
aad
pop
jne
mov
ret
outsl
mov
xor
inc
jle
inc
fs
sub
pop
mov
mov
ror
mov
jge
mov
mov
sbb
lock
adc
aam
add
data16
stc
or
aam
ds
mov
mov
cmc
nop
loope
adc
pop
mov
outsl
in
jb
sub
mov
outsl
stc
subl
insb
push
imul
mov
insb
pushf
xor
cmpsl
inc
jne
push
mov
push
push
cltd
aad
fldt
rorb
mov
dec
rolb
and
xor
neg
shr
push
outsb
test
clc
push
push
loop
inc
insb
outsl
xchg
loop
in
icebp
ficompl
in
push
dec
dec
std
mov
es
enter
movsb
mov
jle
dec
lock
out
popa
xchg
inc
rorb
sub
dec
ljmp
jbe
push
add
mov
inc
jge
clc
mov
jns
dec
dec
lea
in
push
movsl
out
inc
xor
test
inc
xor
mov
out
pop
imul
fisttpll
adc
lcall
add
add
aaa
std
push
ss
xlat
mov
in
bound
jl
mov
sbb
xchg
mov
inc
inc
and
lahf
test
pop
idivl
cli
xlat
inc
jg
adc
cmp
or
inc
mov
sahf
ret
push
fs
insb
cmc
cld
je
outsl
xchg
mov
int3
and
aaa
test
inc
mov
outsb
sarb
mov
sbb
push
add
int3
push
mov
sarl
jg
mov
pop
cmp
sbbl
add
push
adc
xor
rcrl
mov
dec
jne
fsubrl
jge
nop
pop
sbb
loop
mov
xorb
imul
stos
jne
addr16
push
dec
cmpb
scas
mov
mov
scas
xchg
pop
add
ret
adc
rcr
xor
std
std
dec
aas
inc
inc
jmp
sti
in
aad
lock
push
adc
lock
sub
jle
es
sub
pop
loop
push
push
test
std
mov
cmpsb
scas
or
mov
sub
ds
loop
xchg
cmp
push
sub
test
loope
gs
sub
jo
arpl
lods
lds
rcr
insl
jp
dec
es
movsb
and
popf
push
sub
xor
fwait
mov
fsubl
or
pop
dec
int
xor
and
mov
jb
sub
imul
in
sub
out
xlat
cmp
das
scas
dec
repz
ret
lods
add
xor
pop
xchg
or
dec
or
add
movsl
mov
mov
ljmp
mov
cmp
or
enter
lret
push
cli
push
cld
xchg
mov
push
mov
sarl
or
inc
and
adc
mov
insb
mov
sbb
pop
add
jno
dec
idiv
movsl
mov
and
pusha
adc
adc
cltd
fildl
mov
pop
push
jne
cmp
mov
and
rolb
push
pushf
mov
inc
add
jg,pt
in
xchg
gs
es
movsl
xchg
sub
aaa
scas
add
cltd
pop
jmp
mov
movsb
adc
cmp
xor
fidivl
test
cmp
sub
sbb
cmp
mov
cmpsl
sahf
or
mov
ret
jno,pn
test
mov
popa
mov
sub
add
xchg
pop
jbe
divl
mov
bound
iret
repnz
or
push
int
int3
xor
push
mov
pop
ret
or
add
xchg
dec
mov
jge
aad
das
loop
xor
stos
nop
pop
pop
mov
fnstcw
adc
jns
sbb
shlb
rclb
stos
loope
and
imul
fadds
aad
adc
pop
loope
out
cmpb
imul
and
imul
shlb
push
std
xor
pop
pop
stos
ss
js
int
xchg
xor
xor
pop
pop
aam
cmc
adcl
loope
call
repnz
cmp
rorl
ljmp
lcall
cmp
andl
fisttpll
popa
iret
scas
imul
xor
pcmpgtw
je
inc
scas
clc
pop
dec
lret
daa
int3
out
mov
xchg
adc
push
adcl
adc
adc
cmpsl
ds
cmpsl
lods
or
and
inc
ss
jecxz
cmp
loop
jge
insb
mov
lds
sbb
pop
imul
push
or
jbe
add
orl
imul
in
mov
mov
sub
or
or
push
sub
and
repnz
ds
aam
test
dec
push
mov
femms
inc
or
mov
xor
cli
fnstcw
mov
cmpsb
insb
cmc
dec
jle
js
mov
jge
ds
mov
pop
psubsb
fcomps
cmc
rolb
cmp
mov
mov
mov
sub
cmp
push
ret
imul
insl
pop
aaa
xchg
mov
dec
push
movsl
repnz
sbb
in
adc
aad
into
mov
jo
insl
cmp
inc
aaa
sbb
aam
mov
repz
leave
dec
int3
mov
xchg
test
and
dec
ds
adc
sub
pop
and
shl
inc
int
inc
fadd
outsl
jnp
mov
xchg
pop
rclb
mov
add
inc
sarb
sub
xor
pusha
stc
pop
mov
cmp
xchg
xorl
xorl
cmp
pop
or
jb
mov
jbe
mov
xor
gs
cmp
xchg
notb
test
jg
fildll
push
repnz
les
push
sbb
les
xor
outsb
push
aas
or
adc
xchg
jmp
dec
jg
orb
fisttps
jg
xchg
jmp
sub
pushf
sbbb
int3
stc
sbb
push
iret
pop
dec
push
inc
xchg
pop
jge
xchg
lret
insb
fsubp
stos
mov
fstps
mov
data16
icebp
andb
mov
stos
xchg
mov
mov
and
mov
inc
push
stc
mov
loope
stos
push
mov
xor
add
das
dec
dec
xchg
cli
sbb
jge
out
jg
pop
cmpsb
stc
add
rcrb
roll
jnp
lods
sti
loope
mov
add
or
test
fbstp
popa
pop
fnstenv
fldt
add
jno
dec
insb
aaa
mov
mov
push
fsubrl
ret
sub
and
fldenv
in
scas
popl
sbb
je
jecxz
pop
push
in
mov
inc
shl
pop
scas
ss
pop
rcll
stos
and
nop
xor
sub
sub
or
mov
ja
xchg
push
int3
ret
push
or
insb
leave
outsl
in
subl
stc
and
dec
add
mov
cmp
jno
pop
aad
mov
pop
rcrb
adc
adc
sbb
push
jae
fdivs
mov
out
scas
dec
out
imul
jg
xor
adc
imul
cmp
inc
push
sbb
cmpsb
or
dec
dec
xlat
mov
jg
cmp
cmc
in
xor
cmp
out
or
iret
push
xchg
xor
or
push
add
repnz
sub
adc
shll
cmp
iret
cmp
add
lret
pushw
mov
xchg
adc
xor
cs
xor
jmp
inc
add
psubsw
fst
push
div
jp
out
pop
adc
pop
out
add
cmp
mov
inc
hlt
sub
mov
or
imul
bound
xchg
adc
push
mov
mov
cltd
inc
faddl
cmp
pop
jl
inc
push
adc
ja
push
xchg
stos
je
lahf
popa
pop
add
outsb
enter
stc
push
mov
push
jle
push
mov
lret
out
push
clc
adc
or
or
iret
in
cmp
nop
jge
sti
dec
ljmp
or
pusha
cmp
inc
cmpsb
or
xchg
ja
cwtl
arpl
frstpm(287
test
pop
sbb
mov
rolb
xor
pop
lods
or
jne
push
clc
cmp
stc
lock
push
xchg
lods
jne
hlt
mov
std
aas
pop
push
dec
pop
dec
dec
push
sub
inc
xchg
into
push
and
loope
dec
nop
lea
leave
mov
mov
cltd
gs
push
sbb
adc
xor
cmp
or
popf
cltd
hlt
jmp
push
sub
cmc
sbb
mov
fldl
and
movsl
sub
cmp
in
insb
push
xor
outsb
or
sub
mov
lock
pop
enter
dec
xchg
adc
mov
stos
mov
test
mov
bound
sahf
sub
sub
pandn
sbb
inc
push
bound
movl
in
call
mov
fadds
inc
sub
fs
adc
push
xchg
or
mov
pop
push
lock
xor
adc
add
fwait
insb
mov
pop
jp
pusha
sbb
adc
dec
addr16
add
out
mov
dec
das
adc
in
ljmp
je
xlat
ja
push
arpl
and
mov
and
sbb
loopne
movsb
sub
xchg
add
jne
lahf
push
lret
pop
push
mov
push
aaa
and
cmp
lock
jae
sub
xor
ret
loope
sbb
jp
sub
mov
xchg
pop
aam
adc
inc
add
fcoms
xor
xor
pop
out
ffree
loopne
aam
lods
popf
sbb
dec
inc
fs
pop
inc
out
iret
add
loopne
test
pusha
bound
mov
iret
mov
leave
insb
xor
aam
adc
xchg
decb
hlt
jb
arpl
scas
fstpt
sub
mov
scas
cmpsb
adc
shlb
dec
mov
and
sub
mov
bnd
mov
lods
mov
mov
push
in
enter
dec
in
and
gs
mov
xchg
ljmp
in
fucomp
adcl
rorl
scas
add
sbb
setge
in
aas
int
jnp
and
dec
sbb
add
jg
repz
dec
sbb
cltd
call
mov
stc
dec
xchg
inc
jge
push
mov
in
add
shll
pop
lds
sti
sub
adc
addb
and
andb
into
mov
fbstp
sub
js
outsb
inc
jmp
lods
push
add
push
inc
xchg
and
js
ret
stc
jns
jne
stos
in
xchg
mov
jmp
pop
fwait
xor
cmpsl
mov
lcall
add
das
movsb
jns
notb
into
and
pop
cmp
pop
fnsave
int3
js
jecxz
mov
rcrb
fs
enter
cwtl
lds
jo
dec
in
lds
ljmp
and
pop
aam
or
repnz
inc
pop
sbb
addl
jmp
jne
jns
push
jg
sub
cwtl
and
and
pushf
lcall
jnp
cmp
add
popf
mov
add
dec
inc
sbb
xchg
pop
subl
decl
xor
sarb
repz
sub
sub
mov
mov
mov
cli
and
divl
cmp
cltd
jecxz
imul
and
ss
lods
nop
lea
jp
mov
ds
jb
in
pop
mov
xor
fadds
mov
repnz
fwait
pop
ret
cld
aad
popf
and
je
test
pop
inc
cmp
xor
mov
inc
cltd
mov
cwtl
adc
push
lea
ret
fucompp
mov
nop
push
jge
pushf
xor
xchg
sahf
push
aam
add
out
jno
int
jmp
test
pop
xor
test
in
scas
ljmp
push
jno
cmc
popa
idiv
fbld
jle
mov
xor
int3
dec
push
sbb
mov
lods
movsl
push
mov
add
xlat
invd
js
xchg
pop
push
sbb
pop
and
xor
or
mov
jmp
inc
stc
movsl
jp
sub
scas
lret
std
out
adc
xchg
mov
sub
push
int3
mov
push
jae,pn
jae
cmc
add
xchg
cmp
cwtl
outsl
mov
or
xchg
push
sbb
aad
cmp
ljmp
mov
das
xchg
daa
cmp
rcl
cmp
cmp
adc
adc
in
cmp
sub
sbb
movsl
mov
lods
mov
xchg
incb
xor
and
lret
sub
out
mov
add
pushf
sbb
frstor
push
data16
hlt
jb
adc
xchg
mov
jge
or
into
hlt
add
sbb
orl
sbb
mov
je
pop
and
push
call
lret
pop
mov
cmpsb
push
testb
test
xchg
jnp
jns
adc
xor
cmp
insb
ss
jp
dec
xor
cli
lret
in
cmc
mov
mov
adc
notl
pop
cwtl
push
sbb
or
enter
and
arpl
ljmp
aas
fldcw
loope
xchg
shlb
lods
in
cmc
or
popf
outsb
cmp
xor
dec
out
dec
mov
push
aad
pop
imulb
mov
fucomi
clc
int
orb
mov
push
mov
mov
inc
mov
leave
cmp
cld
lods
pop
insl
cmp
xor
lret
pop
nop
lret
pop
sub
xchg
xor
test
dec
divb
dec
xor
push
cmp
cmp
mov
pop
and
testb
mov
jp
push
xor
lods
inc
jne
push
out
mov
jge
popl
and
lea
ficompl
aad
cmp
and
stos
bnd
inc
arpl
push
in
push
pop
shlb
pop
pop
sbb
lea
mov
or
sbb
sti
push
test
popa
nop
pop
ret
dec
xlat
or
fnsetpm(287
jbe
mov
jae
jle
in
test
xchg
push
shlb
insb
ret
push
pushf
or
fsubrl
or
notl
cmp
or
xor
stos
jo
xlat
cmp
push
xchg
das
sub
mov
out
in
mov
in
loop
jo
mov
dec
aam
ljmp
xor
jne
test
les
jbe
mov
cs
xorb
outsl
jns
add
inc
rclb
mov
push
test
insb
or
bsf
jl
fistl
stos
cld
repnz
jno
mov
loop
push
and
nop
jl
mov
clc
iret
push
orb
sub
fildll
push
jns
adc
daa
popa
pop
ret
cmc
fildl
jmp
jmp
mov
loope
std
add
clc
sub
jns
sub
xor
dec
mov
mov
jp
repz
jbe
je
loopne
sub
pop
dec
inc
pushl
fbstp
jae
imul
sarb
mov
shll
xchg
dec
imul
mov
psrlq
xchg
int3
cwtl
ss
scas
aad
or
leave
aam
movsb
rolb
imul
fwait
cmp
pop
dec
lahf
pop
xchg
and
sbb
ss
mov
gs
pop
jmp
xchg
imul
cmp
outsl
jecxz
ret
inc
mov
lods
fisubs
pusha
rcll
adc
cmp
mov
push
cwtl
mov
xor
notb
add
std
ss
xchg
pusha
xchg
and
in
cmpsl
pop
call
popa
arpl
jle
sub
imul
outsl
fmuls
in
cmp
pop
push
mov
mov
jns
stc
cmp
stc
cmp
das
inc
or
dec
or
pushf
popf
jbe
jnp
sub
push
test
repnz
mov
insl
fnsave
sbb
sbb
pusha
sub
popl
in
fs
outsl
xchg
push
movsb
rep
sub
negl
jecxz
pop
js
jle
cld
and
sbb
fdivl
in
fwait
leave
outsb
lret
push
inc
cs
test
inc
cmp
and
daa
aad
or
das
shlb
les
lcall
nop
add
sti
addr16
push
pushf
push
lds
andb
cld
mov
lret
imul
inc
in
inc
dec
loopne
fimull
sub
aad
mov
add
fidivs
push
push
mov
rorl
sub
mov
cs
mov
sahf
xchg
pusha
es
jge
fstpl
push
aas
cs
dec
movsl
inc
sub
and
adc
ja
int
dec
xor
sub
popa
inc
sarl
clc
aad
lret
aas
rcrl
add
pop
int
adc
imul
cmpb
ret
adc
movsl
ljmp
fbld
dec
push
ret
cmc
cwtl
sub
shl
fs
pop
dec
cmp
xchg
pop
sub
inc
mov
test
adc
test
in
adc
inc
lahf
ficompl
pushf
icebp
es
jbe
pause
out
repnz
loope
xchg
push
in
mov
cld
int3
mov
leave
pop
cmp
jmp
rcrl
lods
fistl
test
sbb
xchg
adcl
cltd
pop
mov
and
mov
sbb
fwait
sbb
xchg
loopne
jmp
jp
cmp
mov
cwtl
inc
xor
loop
icebp
lods
sbb
pop
out
inc
xor
mov
and
clc
lods
mov
fs
repnz
add
popa
pop
popf
leave
ljmp
adc
lcall
lahf
push
sbb
push
stos
xchg
imull
scas
push
jmp
pop
mull
dec
lcall
fldenv
mov
scas
loopne
pop
test
imul
jnp
gs
jl
test
add
dec
and
xor
cltd
std
shlb
iret
cmc
sub
sbb
rclb
mov
lret
adc
inc
nop
or
arpl
xchg
mov
xchg
lods
mov
jle
inc
repz
xor
jg
sub
lahf
jmp
iret
adcb
pop
std
cmp
inc
mov
sub
sub
push
in
xor
jns
jg
xchg
cli
or
sub
add
fadds
cmp
push
inc
push
pop
mov
and
aad
or
or
int
dec
inc
imul
add
inc
push
stos
cmpl
jmp
jo
imul
jb
dec
push
std
loope
popf
pop
xorb
dec
xchg
fldt
sbb
inc
les
mov
psubw
test
out
ret
lds
jg
adc
std
adc
push
insl
or
or
out
and
andw
jo
fdivl
test
push
and
dec
adc
push
or
rorb
jb
mov
and
xor
mov
stc
test
inc
imull
in
stc
test
and
mov
jl
mov
cltd
and
scas
imul
push
test
fnstsw
inc
std
pop
out
movsl
xchg
cmp
mov
adc
outsl
lahf
pushf
add
shr
pop
sbb
adc
loope,pn
cli
or
dec
das
jmp
cmpsl
aaa
insl
subb
mov
or
jle
fidivrs
sub
push
rep
pop
fnsetpm(287
xchg
testl
mov
loope
push
jl
mov
lods
aam
push
push
in
mov
push
sub
movsb
es
loop
and
and
jp
mov
ret
dec
fstps
jmp
mov
sbb
bound
and
insl
adc
or
mov
sti
sub
pop
sbb
cltd
sub
rorb
leave
ror
mov
add
xor
inc
xchg
sbb
jns
fistl
roll
cmp
ffreep
pop
push
push
inc
jne
push
inc
bound
pushf
mov
push
jb
mov
sbb
std
inc
jns
test
pop
add
enter
push
outsb
cld
imul
pushf
addr16
cmp
or
adc
adc
add
cmp
mov
mov
mov
ljmp
aaa
fsts
insl
popa
fimull
cmp
scas
cmpsl
inc
xlat
push
pushf
adc
jg
shll
or
add
mov
sub
jnp
push
xor
mov
rep
loope
mov
decb
jle
push
sub
push
xchg
cld
movb
sub
jo
loopne
xchg
bts
div
divb
sbb
ss
cmp
adc
mov
sti
inc
clc
ss
and
int3
pop
sbb
adc
sub
xchg
mov
or
add
fwait
rep
mov
ret
stc
lea
mov
mov
inc
insl
loop
mov
arpl
dec
jbe
popa
mov
push
repz
shll
ljmp
pop
pop
mov
lret
mov
aad
inc
mov
loope
sub
jae
js
push
add
inc
xchg
jae
imull
pop
stos
sbb
inc
mov
pop
test
shlb
das
xchg
jp
cmpsl
scas
andb
clc
add
pop
jp
fwait
data16
adc
inc
xlat
adc
test
cmp
or
sarl
cld
push
cmpsl
mov
dec
je
lds
and
xchg
setge
hlt
xchg
xchg
mov
jmp
and
push
or
out
aas
sahf
sbb
lods
in
adc
mov
mov
jle
sarb
and
mov
pop
jecxz
lret
xor
cmc
pop
clc
push
insl
imul
xchg
aam
jns
clc
out
sbb
rorl
stc
outsl
and
dec
test
cmpsb
dec
jg
xchg
inc
enter
sbb
dec
mov
ds
push
sub
sbb
stc
xchg
adc
addl
rcrb
fbld
push
insb
adc
xor
clc
dec
sbb
adc
mov
pop
xor
mov
fsub
mov
cmpsb
dec
push
rorb
pop
xchg
xor
fmull
addb
insb
je
pop
sub
cmpb
jp
xchg
rcr
addb
cmp
mov
sbb
scas
stc
sub
cmp
pushf
sbb
sub
and
cmpsb
push
sbb
stos
or
rcll
push
and
and
add
cmc
sub
adcb
cmp
push
jno
testb
in
or
jle
mov
out
and
scas
fiaddl
jge
inc
jle
nop
sbb
cmp
rcrb
cmp
loope
xor
js
mov
imul
loop
insl
lret
lahf
lret
mov
mov
push
nop
xor
mov
daa
dec
es
cmp
movsl
daa
ss
movsl
cmp
into
mov
add
aaa
les
cmp
and
data16
roll
sahf
sarb
shrl
js
aaa
fdivl
lds
sbb
pusha
pop
ret
addl
jns
in
pop
test
into
cli
pop
nop
xchg
mov
pop
faddp
or
les
scas
adc
or
icebp
data16
push
std
push
mov
mov
in
fsubrl
fwait
push
fcoml
ljmp
pop
xchg
scas
lods
sbb
ljmp
aam
aam
mov
push
dec
xor
psraw
leave
ja
in
mov
stos
out
icebp
and
insl
idivl
or
repz
into
hlt
adc
jo
cmp
mov
pushf
test
sahf
push
push
fdivrl
xchg
imul
mov
in
add
lahf
stos
add
rolb
imul
jl
repz
ret
mov
aam
mov
mov
gs
pop
jae
lods
es
xchg
xor
push
adc
fcmovbe
push
or
push
lds
ss
jnp
clc
add
pop
add
jns
ljmp
mov
jae
sbb
ss
outsb
lock
push
sub
adc
mov
inc
lea
xchg
pop
cwtl
mov
outsl
test
fs
out
jge
sahf
xchg
movsl
in
push
mov
bound
hlt
pop
push
mov
push
mov
xchg
sarb
sub
sub
insl
xchg
push
lret
jp
xchg
xchg
rol
and
pop
das
inc
shrb
aad
jmp
gs
mov
sbb
out
inc
cltd
scas
faddl
inc
jns
inc
mov
data16
bound
fldenv
dec
xor
jl
pop
rolb
loopne
xchg
in
push
shl
inc
mov
daa
xor
mov
sbb
and
clc
lock
cmp
mov
adc
push
inc
test
cli
bound
adc
out
hlt
sub
push
mov
test
pop
xchg
movsb
jp
stc
aaa
dec
out
ficoml
sbb
dec
dec
inc
xchg
sbb
mov
fldcw
cmpsb
xor
xchg
and
test
aam
js
in
sub
and
dec
mov
push
inc
cmpb
fidivs
rcr
repnz
sub
scas
enter
aad
out
jle
das
icebp
jg
ss
lcall
dec
addr16
enter
les
lret
cmp
cmp
push
lock
sub
mov
lods
lock
jle
cld
mov
xchg
mov
dec
mov
popf
popa
fidivrs
pop
jo
pushf
jl
cmp
popa
mov
int
inc
push
mov
inc
js
idivb
loop
nop
daa
adc
out
cmpl
mov
mov
inc
inc
fcmovbe
mov
pop
cmovs
rcr
xor
jno
inc
sbb
xchg
inc
iret
fstl
mov
mov
xlat
xchg
clc
push
pop
int
wrmsr
push
inc
mov
pop
sarb
and
call
ss
mov
fpatan
adc
nop
mov
push
or
add
mov
test
movsl
bound
insl
lret
cli
cmc
fsts
ss
or
ja
in
outsl
decb
ret
cmc
or
rcrb
call
sub
addr16
push
sub
ja
and
loopne
fldenv
sahf
ss
sub
xchg
push
inc
mov
loop
les
sbb
out
js
dec
and
sub
mov
in
les
loop
jae
mov
sbb
push
push
inc
cmp
push
xchg
push
iret
inc
sbb
or
outsb
js
push
roll
idivl
pop
mov
adc
pop
pop
je
mov
imul
mov
mov
shl
sahf
mov
jae
mov
repz
cmc
jmp
push
movsl
sub
mov
iret
in
xchg
cwtl
jbe
aaa
mov
fwait
mulb
add
pop
pop
lods
xor
ds
jbe
std
dec
pop
in
dec
mov
xor
test
into
xchg
addl
sub
jg
inc
fistps
repz
imul
or
inc
scas
cld
sbb
test
in
pop
xor
imul
xlat
mov
outsl
loopne
rolb
rol
sbb
jge
xchg
jbe
lds
adc
cwtl
jne
aad
jge
inc
sbb
adc
add
inc
jmp
and
push
jo
mov
ret
inc
fcoml
cltd
jg
mov
mov
mov
cmp
and
xchg
xchg
fisubrs
add
inc
xor
jg
jg
ss
and
xchg
in
jno
push
cmp
jp
shrb
imul
sbb
daa
repz
lcall
pop
repnz
jl
fstpl
cli
or
xor
stos
lods
push
scas
cmpb
cmpsb
push
dec
sub
inc
or
xor
jae
bswap
mull
mov
push
call
rclb
stc
xor
cwtl
push
in
mov
cmpsl
xor
repz
sub
faddp
mov
push
xor
push
sbb
sbb
push
leave
icebp
call
aaa
jge
negb
pop
sarb
adcl
mov
push
dec
lods
out
add
lds
sahf
push
jo
mov
pop
sub
fwait
xor
insl
mov
scas
fdivrl
sbb
or
cmc
or
push
mov
dec
and
inc
xlat
dec
adc
add
adc
jecxz
sahf
lret
mov
mov
ret
push
imul
mov
mull
icebp
xor
xlat
mov
in
test
sahf
jbe
adc
mov
push
sub
sarl
test
roll
lods
stos
push
pop
ret
adc
xchg
jno
fsub
roll
outsb
sub
andl
xor
insb
es
jecxz
mov
pop
shrb
sti
xor
jle
imulb
lahf
leave
ss
mov
aam
xchg
and
mov
xchg
inc
push
dec
cli
mov
push
add
xchg
adc
rorb
ret
negl
fcomi
xlat
lret
cld
enter
mov
jecxz
mov
popf
in
mov
loopne
psllq
adc
mov
xorl
fs
jno
sub
or
lret
mov
pop
lods
mov
pop
mov
xlat
out
jb
decl
cmp
push
int3
adc
mov
ljmp
imul
stc
pop
add
add
fistps
ja
mov
sti
pop
in
pusha
in
fildl
fiadds
fistpl
inc
or
stc
cmp
addr16
xlat
leave
movsl
add
pop
loop
out
test
fisttpll
mov
cwtl
cwtl
enter
lea
loop
fistpl
xor
inc
cld
imul
sahf
outsl
jge
lea
fdivr
fs
push
xchg
insb
jmp
enter
cld
loopne
xchg
inc
xor
pop
es
decl
idivb
notl
cld
movsb
push
cmpsl
popf
cmp
pop
or
or
inc
push
or
out
adc
stos
and
ret
dec
adcl
sub
push
incl
leave
ret
out
dec
dec
out
add
adc
cmc
andl
pushf
shrl
cwtl
movsb
push
dec
add
inc
dec
lea
and
mov
test
cmpsb
mov
lods
fists
sbb
pop
xchg
sub
mov
dec
dec
dec
mov
leave
cmp
mov
ss
pop
dec
mul
add
and
sbb
ja
bound
bt
mov
mov
int
test
mov
sti
jl
scas
pop
dec
adc
stos
aas
xchg
pop
icebp
mov
sbb
xor
xorl
fmulp
pop
and
or
sti
pop
add
in
cld
xchg
in
test
sub
test
xor
rolb
outsl
xchg
push
and
jae
push
std
ds
rolb
cmp
mov
sub
jg
rcll
dec
out
push
jp
ljmp
xlat
xorl
xchg
mov
inc
xchg
les
insb
jo
stc
xor
insl
lcall
sub
mov
arpl
inc
pop
out
pushf
jge
jmp
xchg
push
sar
lret
pop
pusha
mov
push
adc
out
cmp
mov
icebp
mov
addr16
dec
in
data16
cwtl
pop
in
dec
jge
xor
fs
ret
cmpsb
dec
subl
sbb
add
es
xchg
or
insl
sbb
jno
pop
nop
jns
ret
movsl
int
ficoms
cld
cld
rcll
xchg
jnp
jb
or
and
xchg
mov
lret
les
add
ret
jnp
call
mov
adc
push
push
movsb
bound
sbb
imul
imul
xchg
out
pop
jg
out
push
lret
scas
jmp
pushf
xchg
fsubrp
sbb
jae
into
inc
inc
shrb
into
lcall
push
dec
call
out
mov
push
or
dec
daa
call
or
orb
in
dec
cmpsl
mov
pop
pop
outsb
mov
xchg
xchg
xor
mov
lods
xor
in
xchg
pop
pop
dec
jg
ljmp
cmc
jno
lea
mov
mov
dec
xor
sarl
insl
shll
pop
push
mov
addps
shl
mov
pop
fildl
ficoml
dec
imul
add
xor
xchg
mov
sub
mov
in
movsl
add
sbb
fstpl
divl
test
pop
mov
incb
int3
dec
sub
mov
nop
mov
adc
addb
mov
shll
mov
mov
dec
inc
or
std
sbb
pop
aaa
imul
fucomi
and
les
sbb
frstor
roll
fistps
cmp
stc
test
dec
test
mov
xor
pop
jns
pusha
mov
out
pusha
fisttpl
xor
inc
push
inc
ja
xor
xorb
pushf
sbb
and
pop
into
arpl
inc
sub
inc
inc
out
in
in
jmp
cmpsb
arpl
inc
dec
sbb
ss
push
sbb
out
popa
push
dec
sbb
xchg
jns
add
push
adc
mov
mov
or
mov
andb
imul
mov
or
jns
mov
shl
push
lea
dec
mov
dec
insl
xchg
scas
lahf
jecxz
mov
mov
add
ds
out
jae
clc
jp
fisubs
ret
xchg
dec
sbb
hlt
sahf
cmp
loope
popa
ficoml
dec
mov
int3
cmp
imul
test
popa
repnz
pop
lcall
dec
movb
push
rclb
inc
lds
int3
rcrb
sbb
push
cli
and
adc
push
cli
push
or
jge
inc
mov
push
out
sbb
and
cmp
push
aaa
pop
adc
loope
fcoml
clc
fwait
lahf
dec
push
mull
stos
int
dec
jmp
or
xor
sbb
gs
scas
aam
inc
les
add
jmp
fidivrl
icebp
andb
bound
lods
and
jne
sub
lds
scas
and
add
xor
xchg
adc
mov
jae
je
cmpsl
arpl
lahf
cmp
cmc
inc
in
mov
out
ljmp
pop
xchg
ljmp
cwtl
mov
iret
mov
add
mov
push
je
gs
shll
push
mov
and
mov
xor
test
cmpl
and
out
int3
sbb
cmp
ret
add
push
pop
sub
cmp
cmpsl
pop
jle
mov
cmp
fisttps
popa
call
cmp
xor
and
dec
jns
in
jnp
xchg
into
mov
into
ljmp
ss
push
push
jns
popf
and
mov
pop
ret
insl
cwtl
sbb
ljmp
in
call
imul
mov
stos
js
jno
lods
cld
jge
pop
pusha
add
jp
push
aad
lcall
repnz
int3
push
jb
mov
js
bound
add
mov
sub
and
xchg
xchg
sahf
in
mov
aaa
sahf
or
clc
pushf
aas
loop
mov
ds
xchg
push
adc
adc
cmp
cld
cmc
les
cmp
roll
std
adc
loop
xor
lret
ret
shr
mov
mov
loopne
mov
aad
jns
pop
sub
xchg
push
movsl
out
flds
insl
push
mov
add
arpl
cli
test
mov
test
ja
popa
outsl
pop
lret
jns
xor
scas
lcall
xchg
inc
jge
pop
xorl
ficompl
lahf
adc
xor
ja
ret
loopne
ja
in
jbe
jb
dec
and
jb
test
fstp
cwtl
scas
inc
dec
push
adc
rcll
ret
and
jmp
fisttpll
sbb
cmpsl
xchg
mov
arpl
xchg
pop
sub
inc
cmpsb
xor
jmp
pushf
push
int3
inc
insl
mov
stc
fsts
int3
push
push
jle
mov
imul
sub
mov
push
add
loop
popa
int3
popf
loopne
xchg
rol
repz
push
ja
xchg
jmp
shll
inc
inc
mov
xor
mov
push
mov
imul
jbe
loopne
rorb
or
shlb
jns
sbb
jno
insl
pop
fistps
push
xchg
rcll
xacquire
call
icebp
dec
rcrl
mov
out
inc
pop
sub
ljmp
sub
pop
inc
sti
sub
sbb
in
inc
xlat
stc
adc
dec
dec
pop
xor
nop
push
lods
inc
fwait
mov
fdivl
out
jo
stos
sub
int
mov
stos
xchg
mov
lret
dec
test
mov
insb
je
xchg
add
into
mov
outsl
push
out
jae
ret
negb
clc
imul
add
push
jns
mov
ja
ja
in
mov
mov
lods
xchg
test
mov
jle
cmpb
cmp
sub
xchg
sbb
fnstsw
mov
nop
fldt
std
and
push
xchg
pop
push
xchg
jbe
es
arpl
mov
in
cmpb
lret
sub
cmc
popa
aad
cmp
popf
and
rcll
stos
pop
sub
rclb
xor
xchg
lahf
push
sub
push
testl
pop
incl
ljmp
mov
pop
ret
test
inc
mov
out
nop
sub
fidivrl
xchg
gs
cmpb
mov
aaa
mov
pop
sbb
mov
cmp
ss
sbb
xor
jmp
loope
push
or
lcall
and
push
add
mov
add
adc
add
push
push
data16
enter
sbb
adc
scas
push
xor
inc
and
test
jns
jb
and
cmpsb
movsb
out
gs
sub
pop
jae
inc
aad
sbb
mov
mov
hlt
or
ficoms
pop
jl
js
jle
aas
inc
das
mov
sub
push
shlb
pop
xchg
ja
xor
xchg
xchg
dec
aas
je
rdtsc
cmp
pop
jmp
aas
loopne
jle
mov
insb
fcmovnu
test
inc
mov
fs
es
jne
sahf
mov
lret
cli
test
push
pop
push
push
or
xchg
push
mov
xchg
xor
mov
dec
insl
cmp
and
xchg
lret
popa
mov
sbb
addr16
repz
mov
mov
popf
neg
xchg
cmp
fcoms
push
lahf
pop
repz
in
jo
lock
daa
call
adc
jo
inc
add
sub
in
shrl
rorb
jge
mov
inc
pop
data16
es
cmp
loop
loopne
rorl
std
stos
cmpsl
sub
xlat
mov
orb
shrl
inc
lret
inc
mov
outsb
cltd
loop
dec
adc
add
push
imul
dec
push
pusha
out
out
mov
dec
mov
sub
scas
or
cmp
imul
fnstcw
pop
sbb
sub
jl
cmpsl
or
sbb
sub
and
sysenter
mov
or
cmpb
out
add
outsl
mov
testb
adc
mov
xor
xchg
aad
mov
sti
mov
pop
mov
shll
data16
push
adc
pusha
add
sub
fwait
or
adc
push
sbb
mov
add
jbe
aaa
test
push
popf
insl
xchg
ret
inc
cld
clc
jnp
lods
jb
xchg
mov
pop
jnp
cltd
lea
into
jbe
pop
stc
push
push
rcr
ja
mov
mov
jae
mov
sti
mov
inc
or
shl
cmp
roll
lahf
pop
lret
xor
pop
pop
mov
mov
xchg
jns
inc
fwait
loopne
mov
pushf
xchg
jmp
shrl
mov
data16
out
cmpsb
ret
loopne
lods
ja
sbb
add
test
mov
mov
cwtl
xor
mov
xchg
cmp
loope
movups
cltd
xor
ds
lret
push
mov
es
pop
pushf
xchg
xchg
das
push
xchg
cmp
sbb
icebp
test
test
mov
adc
stos
dec
leave
aaa
test
imul
adc
push
adc
and
insl
or
push
add
test
shl
mov
or
and
mov
fldcw
mov
sub
pop
movsb
jmp
cmp
in
xor
fmuls
adc
fxtract
mov
push
sbb
pop
inc
push
aaa
imul
call
xchg
push
inc
sbb
cmp
repz
subl
pop
sub
jp
imul
out
or
and
xor
mov
sbbb
pop
repnz
sbb
cmp
js
cmc
mov
dec
or
sbb
inc
dec
bound
or
fsubp
xchg
pop
cli
stos
push
sarb
push
loopne,pt
test
cmp
jp
fwait
xchg
adc
popf
imull
cmpb
push
cltd
jbe
in
fs
in
dec
mov
lods
xchg
jbe
adc
cmp
daa
fnstsw
pop
filds
lock
or
mov
jecxz
lock
shlb
adc
jb
and
jnp
movsl
movsl
nop
loop
sub
pop
fldt
ret
out
cmp
jne
out
gs
sub
pop
sbb
or
mov
adc
test
push
sub
enter
stc
adc
movsl
sub
sarb
cltd
pop
mov
sbb
sub
push
jno
in
ss
cmp
mov
outsl
cmp
rcrb
dec
and
clc
mov
adc
sbb
out
add
and
pop
dec
ds
mov
and
in
mov
dec
adc
pop
test
divl
outsl
or
bound
pop
mov
leave
cmc
dec
hlt
add
mov
jne
bound
int
push
jl
dec
inc
push
push
into
push
mov
ljmp
sarl
push
pop
frstor
ljmp
pushf
mov
pusha
decl
push
enter
call
add
pop
sub
aas
sbb
cmp
sti
cmp
xchg
mov
in
xchg
xlat
xchg
adc
pop
xchg
outsb
lock
ljmp
xlat
inc
rclb
loop
insl
adc
and
les
addr16
aad
out
and
mov
xchg
rcll
push
imul
mov
test
je
cmp
fmull
dec
xchg
jle
mov
pop
lcall
mov
mov
fstpl
jbe
push
xor
sarb
fldcw
add
outsb
sub
test
or
adcl
scas
filds
mov
adc
cmovae
sub
fistl
movsb
cwtl
lods
push
adcl
jns
mov
loopne
xor
adc
xor
lods
add
pop
or
xor
ret
fidivrl
dec
pop
icebp
pop
ret
adc
arpl
addl
pop
ja
jnp
add
int
xlat
pop
jl
scas
xlat
clc
into
cltd
dec
and
push
mov
mov
test
jnp
dec
xchg
xchg
and
xor
add
xchg
xor
jp
inc
icebp
data16
pop
shr
cmp
mov
push
xchg
pop
xchg
add
in
in
clc
jge
mov
fidivrl
repz
mov
imul
or
fwait
lods
mov
das
outsl
pushw
cmp
imul
idiv
lock
push
mov
pop
or
mov
fs
sub
push
lods
xor
mov
xchg
fistps
cmp
aaa
mov
cmp
mov
pop
loope
mov
adc
lcall
nop
mov
scas
test
cmp
sub
pop
and
xchg
sub
in
outsl
les
ds
pop
loope
scas
cmp
mov
outsb
push
and
icebp
pop
les
jns
sbb
or
scas
push
sub
mov
imul
mov
lock
iret
xchg
jg
std
pop
nop
push
gs
mov
xor
jle
jne
push
push
test
dec
jg
lahf
push
loopne
loop
jge
aad
loopne
or
cld
fwait
stc
mov
hlt
stos
pop
mov
sbb
mov
xor
mov
aaa
or
xchg
stos
in
fimuls
ds
and
cmpsb
pop
sub
negl
add
xorb
rorl
dec
stc
pop
scas
test
xchg
ljmp
xchg
pop
and
mov
out
cmovae
adc
outsl
sbb
jmp
data16
imul
pop
adc
mov
out
stc
mov
loope
pusha
cmpsb
idivl
fs
inc
in
lea
fmul
sbb
lcall
pop
inc
dec
and
adc
xchg
es
sbb
js
jb
mov
mov
adc
shl
leave
scas
mov
call
jae
mov
mov
pop
das
and
xchg
in
pop
addb
adc
ret
cmp
jno
nop
xor
mov
ret
inc
xchg
sbb
xor
dec
hlt
xor
shrb
arpl
insl
sbb
movsb
pop
add
loop
sbb
shll
int
repnz
adc
xor
sarb
sub
stc
cmpl
lret
and
lods
add
int
or
pop
repz
and
push
cld
fsts
stos
dec
aas
push
lds
jae
repnz
addr16
shrl
popf
sub
inc
es
test
xchg
pushf
cmpsb
jae
sub
jae
xchg
mov
test
push
xchg
dec
xor
and
fldt
sub
pusha
adcl
push
arpl
popf
xchg
cwtl
fimuls
fwait
push
call
mov
lret
ss
stos
mov
lret
push
ljmp
out
add
insl
mov
cltd
pop
cld
loopne
and
lods
dec
sub
imul
xchg
adc
sbb
or
data16
mov
dec
ret
jge
pop
mov
inc
outsb
sbb
and
and
out
push
fwait
notl
stos
or
imul
inc
jl
mov
mov
imul
loopne
aam
ss
cmp
mov
xorb
or
aaa
sbb
leave
xchg
jbe
sub
mov
adc
divps
and
mov
and
out
pop
cmp
push
stos
mov
adc
scas
pusha
xor
lahf
sbb
bound
bound
into
xchg
inc
int3
adc
ret
in
add
inc
adc
push
push
stos
ja
inc
pop
sahf
fistpll
adcl
ss
into
and
cmp
inc
mov
scas
mov
pop
movb
repz
mov
mov
lods
push
jmp
or
test
fstl
add
jle
sarl
clc
mov
mov
dec
sbb
mov
lods
fs
fcompl
pop
fs
push
aad
mov
jae
loope
sub
push
mov
and
and
dec
icebp
fistl
ds
mov
je
jb
push
add
lret
or
lea
xchg
test
add
cld
push
sahf
and
xor
shll
std
mov
jecxz
pop
push
sahf
ja
bound
aam
test
fs
ss
xchg
int3
sbb
jl
shlb
sbb
inc
mov
sbb
inc
push
mov
xchg
jmp
sub
mov
in
scas
sahf
mov
cmpsb
into
out
and
movsl
and
cmc
pop
inc
push
fistpll
mov
pop
pop
add
push
push
enter
mov
popa
pop
call
scas
popf
pop
lods
and
adc
movsb
mov
dec
mov
lcall
mov
jecxz
cmpsb
rcrl
jg
lods
lcall
insl
pop
cmp
call
in
adc
orb
jnp
rclb
mov
rorb
inc
xlat
or
sub
mov
push
sahf
fistl
jmp
aas
push
add
out
and
loop
mov
aad
rolb
push
jb
rcl
xorl
popa
push
or
jno
add
add
xlat
stos
pop
insb
jp
int
jge
push
sbb
xor
sbb
xor
mov
repz
je
loopne
lods
in
pop
jnp
jge
pop
mov
fidivl
repz
cmp
and
xor
lods
sbb
mov
and
clc
pop
test
xchg
inc
lret
test
int
adc
repz
out
adc
dec
daa
jmp
sub
lods
jb
adc
call
inc
sbb
and
dec
in
int3
add
sub
xor
fadd
ret
pop
lret
rolb
sub
sbb
lcall
out
cmp
jb
or
jno
mov
in
inc
les
jns
cmp
mov
inc
ror
enter
leave
jns
xor
jecxz
cs
js
test
mov
out
aam
inc
fdivrl
mov
cmpsl
les
lds
in
add
outsb
push
push
cmpl
aaa
loop
adc
imul
mov
xor
pop
fbld
frstor
repz
add
mov
cmp
inc
ror
mov
icebp
sbb
dec
sbb
adc
aad
fwait
push
aas
lret
jle
cmpsb
add
xchg
add
out
jmp
cmp
inc
mov
sub
or
sbb
xor
test
call
daa
jo
mov
cmp
mov
in
mov
es
push
push
ret
adc
inc
inc
cmp
mov
jbe
or
jp
dec
adc
or
xchg
flds
rcl
inc
lods
pop
mov
iret
popf
lahf
leave
dec
hlt
mov
sub
inc
hlt
aam
dec
mov
add
jb
cmpsb
push
popl
push
xchg
cmp
rorl
ret
iret
int
mov
insl
pop
js
cmp
mov
mov
lahf
repnz
rcr
mov
pop
pop
rorb
pop
and
imul
mov
mov
shrl
pusha
mov
pop
sub
pusha
mov
in
rcrl
or
xor
mov
sub
xchg
inc
mov
lods
xchg
cwtl
adc
enter
sub
repnz
scas
ljmp
sbb
sub
fidivrl
add
bound
arpl
idiv
call
cmpsl
daa
out
inc
mov
add
popf
scas
or
adc
sub
xor
pop
lods
testl
push
dec
popf
xor
inc
sahf
sbb
adcl
push
inc
inc
test
mov
lock
xor
dec
dec
test
sbb
mov
inc
and
inc
outsl
inc
cmp
sub
jno
or
lds
fdivr
sahf
inc
push
add
push
cmp
fnstenv
mov
sbb
cmpb
jnp
das
cmp
dec
insl
loop
cs
sbb
xor
hlt
out
push
mov
push
xor
mov
or
inc
addr16
stos
cmc
or
mov
push
lock
dec
sub
test
xchg
clc
xchg
pop
call
fsub
pusha
cmpsb
iret
shlb
pop
lods
dec
pushf
push
int3
lea
pop
out
or
call
jbe
out
mov
pop
fcoml
xchg
or
repnz
pop
jo
push
shlb
orl
ret
inc
mov
xchg
sub
iret
dec
push
sbb
and
loope
je
stos
fwait
mov
int3
pop
adc
pop
shl
mov
mov
add
mov
xchg
adc
push
loop
mov
cwtl
dec
ljmp
mov
dec
adc
lock
inc
lcall
cmc
mov
cmp
and
push
mov
push
pop
jnp
mov
xchg
pop
dec
push
inc
xchg
push
stc
nop
cltd
test
push
push
and
pop
ss
dec
nop
inc
ret
jp
jecxz
int
lods
out
es
in
test
lret
adc
adc
push
cltd
add
adc
push
xor
adc
jle
push
iret
adc
mov
sub
ret
out
pop
sbb
push
loope
mov
sahf
mov
sub
fs
insb
loop
sbb
add
je
outsl
std
neg
or
popf
lret
dec
frstor
out
mull
adc
xchg
dec
andb
je
mov
cwtl
in
mulb
and
dec
mov
add
add
xchg
in
sub
mov
into
jg
incl
stc
pop
shl
fs
xchg
cs
stos
iret
fwait
push
jbe
jo
pop
fwait
lods
mov
inc
dec
popl
ss
sub
add
mov
aam
ffree
out
mov
aas
in
sbb
push
push
xor
push
dec
push
sbb
sub
and
pushf
push
add
call
ja
sbb
aam
jmp
test
xorl
inc
add
mov
and
xchg
xlat
int
stos
enter
cltd
lret
jmp
xor
sbbl
jb
or
into
add
enter
xchg
mov
dec
pop
push
test
in
mov
jecxz
xor
lahf
xor
rcrb
lods
mov
jmp
mov
mov
stos
fimull
shlb
push
out
pop
xchg
ret
cmc
scas
les
cltd
rcrl
stos
lock
repz
inc
arpl
loope
pop
inc
es
lcall
mov
movl
xor
cmp
mov
cmp
js
mov
scas
mov
lods
or
push
in
div
addr16
ja
clc
sub
xor
jecxz
ret
mov
outsl
icebp
lahf
xchg
lcall
cmpsl
out
mov
mov
xchg
stos
pop
outsl
pop
stos
fsubrs
or
adc
xor
or
pop
mov
mov
dec
push
ds
movsl
xor
mov
push
jae
fwait
pop
mov
enter
cmp
mov
incl
cltd
push
and
test
pop
cmc
mov
popa
dec
adc
ret
pop
sub
aam
mov
imul
jne
and
cmpsb
daa
stos
js
adc
or
roll
sbb
sar
push
add
subl
sbb
jle
js
adc
es
mov
clc
in
cmp
or
outsb
lods
mov
mov
inc
out
dec
or
mov
test
test
hlt
in
andl
adc
jmp
add
addr16
push
sbb
jns
mov
das
aas
dec
fildl
add
jne
js
dec
mov
sbb
ret
xchg
sarb
sti
ror
aaa
cmpsl
or
inc
arpl
mov
sbb
shll
stc
or
mov
add
stos
aas
mov
cs
arpl
adc
out
in
insw
xchg
rcr
std
mov
xchg
and
pop
mov
sbb
cld
pop
xor
pop
cmp
test
mov
push
push
lcall
sbb
jmp
dec
mov
icebp
outsl
cli
or
iret
hlt
pop
ret
jmp
jno
test
in
or
lods
cmp
lcall
mov
pop
xchg
mov
je
push
mov
mov
jl
ret
hlt
or
mov
inc
jo
lret
in
push
push
pop
jle
push
test
jmp
shlb
push
push
cmc
movsl
repz
jle
aad
mov
dec
rcl
dec
data16
jge
jbe
xchg
js
sub
movsb
stos
adc
fwait
add
out
lock
dec
enter
mov
dec
jb
jl
xlat
les
lods
lret
jmp
inc
adc
roll
mov
leave
mov
fdivs
cmp
xlat
adc
push
aas
addl
lret
sbb
jno
xchg
push
idivb
add
mov
jns
lods
popa
sub
daa
rcrb
es
loop
sub
mov
cld
inc
inc
or
pop
mov
in
das
cmp
push
shlb
popf
or
adc
movsl
negb
dec
int
outsb
mov
arpl
pop
sbb
aaa
inc
mov
scas
out
jmp
jecxz
cmp
lock
xchg
mov
or
push
in
mov
je
lods
lock
mov
mov
mov
push
and
jg
lock
movsl
cmp
out
push
xchg
and
cli
mov
call
xor
popa
enter
pop
add
dec
in
das
lcall
push
pushl
cmpsl
leave
cli
cld
pusha
mov
add
rcrb
cltd
rcrl
xlat
xchg
test
sub
cmp
invd
or
add
mov
and
sti
mov
push
mov
lea
mov
loop
sahf
xchg
xor
jg
mov
sarl
lods
cmp
sti
adc
cli
mov
sbb
inc
insb
push
mov
data16
aad
sbb
cs
pop
test
xchg
sarb
ss
rorl
jg
insl
int3
sub
lock
xchg
and
pop
push
pusha
cmp
push
mov
sbb
jns
aad
inc
sub
sub
xchg
adc
mov
push
insb
notl
adc
sub
dec
cmp
imul
cmpsb
js
adc
push
jae
and
and
dec
cmpl
push
rorb
jle
es
clc
adc
adc
popa
imul
dec
dec
add
and
test
cs
xor
sub
sub
je
sub
or
faddp
pop
into
jb
std
adc
ss
out
fisubs
mov
aas
pushf
pop
xchg
lods
lds
dec
es
bnd
stos
arpl
mov
test
pop
ret
push
call
jg
mov
jnp
rcll
mov
pop
mov
mov
adc
loopne
sti
pushf
mov
test
fwait
mov
pop
out
lret
pop
insl
adcl
shrb
outsl
dec
cmpb
dec
or
jns
mov
arpl
sub
test
test
mov
xor
inc
mov
sarb
repz
sbb
inc
cmp
mov
nop
jbe
cmp
fsubrp
and
adc
lods
data16
xchg
cmpsb
outsl
inc
xchg
daa
aas
adc
pop
std
add
xor
roll
sbb
cmp
or
test
sub
shlb
les
out
sbb
push
jae
imul
jno
inc
xchg
pop
test
sbb
add
add
ss
sbb
setbe
jns
jae
nop
sahf
movb
scas
loope
sub
or
push
xor
mov
add
fbstp
push
push
jmp
and
daa
lds
adc
imul
pop
inc
subl
jmp
negl
inc
mov
lea
sbbl
fdivrs
adc
sub
mov
inc
inc
or
xor
ljmp
shl
mov
sbb
add
aad
inc
in
push
in
scas
jne
sbb
cs
es
data16
cli
repnz
pop
stos
dec
mov
scas
mov
pushf
loope
inc
mov
pop
pusha
leave
lret
pop
ret
mov
dec
pusha
xor
add
cmp
fildl
dec
inc
add
xchg
jns
aad
xchg
sbbb
lea
sahf
aaa
push
cwtl
dec
inc
repnz
lret
outsl
push
push
cmp
out
lcall
jle
jle
lret
lock
pop
ret
pop
jbe
mov
sahf
sbb
scas
loopne
inc
test
add
push
or
sbb
je
test
and
gs
jnp
cmp
sbb
inc
pop
mov
mov
dec
sbb
in
mov
sbbl
mov
sub
mov
xor
jmp
lock
push
pop
mov
unpckhps
aas
movsb
leave
faddp
pop
pop
xor
lock
add
lret
adc
pop
mov
repz
pop
push
hlt
std
aad
xlat
jge
or
jo
cmp
fldcw
or
into
out
arpl
cmp
jl
fs
inc
push
call
into
bound
pop
push
outsb
push
mov
or
cmp
ret
pop
nop
loop
lea
ljmp
inc
pop
js
xlat
enter
jnp
push
rol
and
or
xchg
adc
fs
sahf
orl
bound
jg
add
dec
cmp
fidivl
pusha
adc
imul
icebp
popf
jnp
fucomip
aam
int3
dec
push
xor
mov
adc
rcll
lcall
into
mov
ret
dec
fwait
in
lds
xchg
cmpsl
dec
add
xor
adc
fld
repz
stos
xchg
fwait
rolb
cmp
das
or
or
inc
inc
nop
cltd
sarb
pop
add
jp
dec
leave
xor
inc
push
mov
mov
popa
rclb
mov
adc
push
cmp
xchg
cmp
or
dec
push
sub
jg
push
sbb
les
add
cld
dec
cmp
lcall
imul
shll
add
outsb
jge
out
jae
shlb
and
and
push
jl
xchg
shr
or
adc
gs
and
pushf
sub
adc
aam
mov
adc
jnp
or
mov
xor
rcr
int
mov
pushf
dec
dec
dec
dec
inc
sbb
ja
stos
push
cwtl
xchg
lea
loopne
sub
shlb
scas
jae
push
mov
pop
sub
faddl
xor
pop
cwtl
jl
sub
push
les
cmp
xorb
push
jp
push
push
or
ss
push
std
and
xor
pop
add
fmuls
ret
and
mov
mov
pop
ret
test
test
fistl
cmp
dec
jns
inc
pop
inc
out
jnp
inc
mov
iret
inc
addr16
cmp
dec
pop
jge
aad
hlt
lret
pushf
push
pop
mov
mov
lods
push
xor
sub
lret
mov
popa
gs
in
ret
in
ljmp
sti
pop
mov
imul
rorl
adcb
fwait
add
and
or
or
push
popa
out
test
dec
lahf
aas
dec
gs
push
pop
dec
pop
mov
dec
mov
iret
cli
mov
hlt
and
data16
fimull
dec
pop
jl
cmp
mov
and
inc
out
lods
sub
testb
sbb
fwait
test
adc
sbb
imul
sar
cmp
inc
push
sbbl
xchg
ret
rcr
sti
stc
out
addr16
cmp
fwait
jecxz
adc
test
xor
imul
cmpsb
fistl
imul
pop
jae
fs
sub
jbe
mov
add
push
jo
inc
flds
mov
xor
mov
and
pop
pop
inc
out
lea
imul
push
dec
hlt
rorl
sti
xor
xchg
mov
sarl
into
add
sbb
into
push
sbb
insl
std
imul
scas
xchg
sub
sbb
lahf
fiadds
es
xor
fldenv
dec
aam
cmp
cmp
rcll
in
push
dec
pushf
sub
insb
icebp
jmp
sbb
inc
mov
shll
leave
sub
cmp
incb
enter
stc
js
stc
mov
push
pop
lods
sbb
lcall
xchg
int3
repnz
arpl
fs
loope
imull
mov
push
jle
adc
test
mov
push
sbb
mov
pushf
sti
dec
mov
jecxz
pop
mov
or
cmc
mov
mov
xchg
lock
mov
mov
mov
mov
js
test
xchg
arpl
push
inc
enter
inc
int3
xchg
pop
shl
push
pop
dec
dec
sub
addr16
pop
daa
and
addr16
mov
ret
jns
xchg
cli
or
mov
pop
pop
xchg
dec
push
stos
iret
dec
cmpl
fistl
cmp
sbb
mov
mov
in
gs
pop
loop
or
out
icebp
cmpsl
test
ret
movsb
int
popf
je
inc
aad
iret
mov
inc
ret
test
rcll
mov
std
cmp
add
and
fimull
adc
sahf
jp
pop
jmp
cwtl
mov
add
js
lret
mov
flds
aad
imul
test
ja
sub
jecxz
repnz
push
mov
das
xor
sbb
int
push
push
fidivrl
cmc
fwait
pop
cmpsb
call
mov
pop
xor
cmp
xor
mov
xchg
test
mov
js
jg
mov
popa
inc
inc
test
mov
jns
sbb
jmp
lret
mov
in
xor
pop
aad
rorl
jnp
insb
shlb
roll
xor
out
fcmovb
cltd
outsl
std
in
or
rcl
sub
pushf
xor
daa
xchg
int3
adc
mov
push
js,pn
sub
mov
icebp
outsb
xor
orl
jae
jmp
in
fildll
adc
adc
mov
sbb
sbb
dec
stos
push
sbb
loop
addr16
add
adc
movsl
test
push
stc
mov
inc
in
mov
cmp
out
mov
xor
jmp
mov
add
loopne
movsb
scas
enter
mov
sub
fstl
xchg
xchg
jecxz
aad
inc
sbb
outsb
sahf
jae
negb
pop
jno
jle
sub
mov
lods
bound
daa
mov
pushf
pop
cmp
out
outsb
cmc
addr16
or
test
jg
fistps
imul
rcll
mov
cmp
adc
fisubrs
mov
addb
ja
cmp
ret
pop
cmpsb
add
inc
xorl
loop
jnp
mov
es
sahf
jb
mov
xchg
cmp
jbe
jl
xchg
or
insb
xor
add
mov
pushf
scas
int3
jns
scas
mov
stc
sub
lods
call
adc
repz
dec
mov
xchg
mov
rclw
sub
roll
fadd
push
ret
test
out
imul
mov
movsb
enter
subl
ror
fsubrp
jns
or
arpl
sar
jne
or
mov
push
or
xor
or
cmp
stc
in
aaa
pushl
cmpsb
xor
jbe
cmp
or
sbb
aam
add
pop
shll
das
adc
push
popl
mov
pushf
dec
xchg
jne
in
or
xlat
lret
sarb
inc
rcrl
cmc
rorb
icebp
imul
xchg
daa
stc
in
push
je
pop
icebp
out
adc
mov
stos
dec
aaa
movsb
mov
sbb
lret
pop
flds
ret
out
addr16
sysenter
mov
nop
or
aaa
xchg
daa
jle
mov
jle
les
xor
je
pop
mov
pop
mov
or
rolb
pop
popf
mov
aad
sub
ret
mov
nop
sahf
aas
xor
add
pop
in
xor
ret
mov
lcall
fs
cs
nop
cmp
mov
cs
and
dec
and
les
xchg
out
mov
ficomps
and
push
pop
mov
mov
aas
icebp
cmpsl
lods
xor
inc
int3
clc
sub
adc
cwtl
fisubrs
into
cmp
int3
popf
iret
sarl
nop
stc
mov
xor
fadds
dec
jmp
inc
int
test
or
push
mov
je
mov
inc
jae
data16
addl
loopne
lahf
xchg
das
std
add
sahf
sub
loopne
scas
and
and
add
sbb
dec
xor
mov
inc
aaa
ja
ret
inc
dec
imul
jno
adcl
xchg
pop
sub
dec
into
push
incb
out
pop
cmp
push
out
inc
mov
pop
popa
and
stos
test
inc
rcr
insl
into
sub
mov
sub
btl
sbb
mov
out
lret
jl
mov
cmp
inc
out
repnz
push
jb
mov
mov
inc
mov
int
dec
clc
cmpsb
mov
adcl
lahf
cmp
mov
psubb
cwtl
repz
or
addb
out
jns
push
ds
add
out
pop
sub
es
in
out
mov
cmp
shrb
fwait
mov
aad
mov
push
jbe
cmpb
xor
push
sarb
cmp
adc
sti
xchg
cmp
add
movsb
jmp
into
ljmp
ja
ficompl
fcoms
pop
adc
jbe
lret
inc
outsb
js
test
leave
iret
inc
push
sahf
stc
outsb
leave
inc
add
cmp
je
mov
in
sbb
push
pop
xor
xchg
das
push
pop
arpl
data16
lods
push
movb
lods
xchg
jns
xchg
test
dec
mov
and
push
mov
pusha
jns
xlat
pusha
sahf
push
fcmovb
dec
mov
cmp
popf
mov
cld
out
shr
cltd
cld
inc
iret
add
inc
icebp
mov
rclb
mov
lea
pop
test
mov
pop
icebp
scas
mulb
pop
mov
sti
shl
jecxz
fiadds
roll
xlat
in
test
in
add
aam
jmp
std
inc
cwtl
pslld
mov
icebp
xlat
adcl
lret
js
sbb
dec
in
mov
aaa
out
mov
int
mov
mov
dec
mov
shlb
cmp
std
in
lcall
pop
cmpsb
cmp
test
xchg
push
xchg
sbb
lret
pop
push
pop
jl
rorl
dec
fidivs
les
into
cmc
mov
jnp
push
xlat
mov
push
push
dec
aaa
fstpt
iret
dec
cmc
push
cmp
jne
cmp
push
lock
mov
xlat
in
es
jle
pop
hlt
jne
pop
xor
push
push
adc
xchg
stc
fistps
mov
rolb
fcomps
leave
std
xlat
aam
mov
mov
mov
pop
jp
push
rsqrtps
lods
cmc
xchg
push
push
lret
and
test
sub
push
adc
je
xor
insb
or
mov
jnp
adc
xchg
xchg
sbb
pop
jae
mov
and
out
out
sbb
test
push
pop
lods
mov
mov
lods
test
cmp
add
loopne
cmp
and
jg
imul
lcall
stc
rcl
mov
rorl
sub
sbbb
xchg
aaa
jecxz
gs
or
ficompl
mov
cli
push
fs
fdivs
ror
inc
movsb
ret
imul
push
daa
or
shll
xchg
jne
inc
loope
mov
repz
rorb
xor
sub
ret
mov
inc
popf
push
xchg
bound
pop
loop
out
enter
xor
das
sub
outsl
pop
mov
sbb
lea
pusha
push
adc
call
lret
int3
call
jne
pop
sti
andb
rolb
push
lret
cld
dec
dec
sub
ret
adc
add
clc
aaa
movsl
hlt
aas
mov
repz
loop
enter
dec
adc
jns
jg
add
aas
add
pusha
cmpl
je
and
mov
nop
xchg
int
or
push
push
daa
lret
shl
ljmp
outsl
jl
pop
call
js
add
into
mov
loopne
sbb
mov
in
cmp
jb
int
mov
mov
mov
sbb
out
out
dec
dec
aas
test
in
jb
loope
sub
sbb
lcall
pop
mov
stc
rcl
cmpb
out
scas
cmpb
fstpl
mov
ljmp
xor
jbe
std
push
push
imul
adc
loope
bound
aad
shlb
aam
pop
xchg
cli
aas
pop
into
sarl
add
aas
or
sbb
fmulp
sar
sbb
dec
push
test
cwtl
in
jae
shll
arpl
lods
mov
adc
inc
lods
rolb
push
das
push
pop
addr16
jno
mov
imul
sahf
in
sbb
es
fsubrs
mov
add
testb
popa
bound
jl
and
fstpt
fs
pmaxub
inc
das
sub
xor
ret
pop
pop
xchg
enter
push
dec
lock
repz
insl
xchg
ret
jb
push
sbb
aad
daa
jecxz
dec
cwtl
dec
and
jmp
fidivs
out
fisubs
cmc
mov
adc
bound
cmp
shrb
mov
jcxz
movl
shlb
repnz
popa
ds
add
inc
cmp
outsl
jge
popa
fs
iret
xor
dec
ret
and
inc
push
adc
shrl
jl
cwtl
mov
out
out
mov
add
cltd
mov
lahf
lock
pushf
aam
mov
xchg
test
mov
sbb
pop
fcom
sbb
cmp
sti
out
mov
int3
jle
lahf
add
mov
pop
je
and
in
jno
fcoml
mov
cmp
sub
cli
and
insl
jb
mov
jbe
rclb
push
jmp
inc
xor
sub
loope
test
or
add
scas
jae
test
sar
lods
lcall
adc
sub
aaa
mov
and
sbb
and
push
pusha
adc
mov
adc
pop
daa
mov
mov
scas
mov
loope
cltd
mov
lcall
out
push
call
mov
mov
in
push
inc
in
subb
sbb
cmpsb
dec
dec
arpl
in
add
pop
pop
arpl
mov
cmp
stos
and
rorl
test
xlat
stc
mov
sbb
push
out
fcmovne
inc
cmpsb
mov
jbe,pt
mov
xchg
sbb
jno
xor
mov
cld
jae
leave
adc
mov
pop
inc
or
xchg
stos
iret
inc
inc
pop
sub
pop
mov
or
and
sub
push
add
ss
movl
gs
sbb
and
mov
mov
inc
mov
iret
insl
leave
xchg
inc
std
aas
inc
scas
pusha
cwtl
shll
ret
ret
mov
in
xor
insb
je
mov
orb
lds
lock
fidivrs
push
dec
and
js
sbb
inc
cmp
daa
add
xor
sub
jo
call
push
fisubrs
jle
lahf
jle
pushf
push
sub
test
inc
lcall
add
and
sbb
pusha
repnz
ret
sbb
jmp
sub
pop
cld
or
fldt
bound
xor
inc
fldl
lret
imul
add
add
movsb
jnp
lret
movsl
mov
mov
test
movsl
and
insb
icebp
or
aam
mov
push
mulb
or
sub
dec
sbb
ljmp
loope
xchg
lods
clc
inc
xchg
pop
mov
out
xor
jne
loope
fildll
adc
jnp
clc
mov
daa
cmp
ret
xchg
test
add
mov
fadds
inc
mov
adc
decb
je
lahf
inc
push
mov
or
jl
cmovnp
pop
push
dec
div
rorb
mov
lret
jge
loope
adc
mov
fcoml
jge
aaa
xor
push
adc
inc
add
lods
adc
fsubrl
mov
cmp
in
rcrl
sub
inc
or
fs
dec
sub
mov
xchg
cmp
mov
jmp
aas
mov
push
loopne
repnz
int3
xlat
int
sub
shll
shlb
push
leave
imul
inc
imul
mul
pop
and
test
or
ret
in
hlt
sbb
call
xor
or
push
jl
inc
adc
add
stos
nop
pop
adc
fwait
xor
stc
rol
or
jecxz
pop
mov
in
push
cmpb
xor
dec
repz
push
leave
test
xor
add
adc
mov
sti
fmull
sub
hlt
mov
jp
and
stc
aam
sub
push
inc
mov
cmpsl
in
lods
test
push
sub
xor
hlt
stos
nop
add
lcall
add
jl
pop
iret
jno
dec
ret
jmp
sbb
sub
mov
push
pop
movsl
shrb
cmpsl
cmp
or
xorb
jae
and
and
dec
or
pop
lret
fisttps
push
inc
int3
movsb
mov
jge
sub
and
pop
mov
jno
dec
adc
js
ficoms
shr
insb
or
fmul
subl
in
jmp
vmulps
imul
fiadds
adc
decl
test
mov
sbb
bound
push
insb
mov
les
xchg
add
sub
jnp
xor
push
test
sub
jb
mov
loop
movsl
mov
push
insb
stos
je
dec
mov
mov
add
or
push
jle
nop
movsl
xchg
fstpt
int3
xorl
fstpl
enter
mov
andb
pop
out
fistpl
jnp
xchg
and
xor
lret
sub
mov
and
sbb
sbb
inc
xor
pop
out
xor
movsb
xlat
mov
push
lret
rorl
pop
iret
pop
es
jb
pusha
and
jl
aas
jecxz
not
xor
push
or
add
sub
sbb
rcr
movsb
popa
or
bound
pop
rolb
pop
loopne
inc
shlb
jp,pt
addr16
fmuls
mov
push
loopne
std
sahf
lds
rorb
movsl
bound
test
mov
jno
and
test
out
mov
insl
out
hlt
sbbl
in
scas
cli
xchg
mov
jecxz
lea
xor
sbb
out
push
pop
popa
lds
sub
loope
xchg
cmpsl
loope
aaa
push
mov
xchg
js
nop
or
inc
mov
movsb
rol
in
dec
loope
loopne
in
inc
andb
mov
jl
jp
aas
daa
pop
sbb
lret
mov
jle
lret
push
test
push
test
xchg
mov
push
jns
mov
mov
jl
push
in
mov
jmp
mov
shll
pop
sub
fbstp
ret
fsub
xchg
xchg
jo
lods
into
dec
inc
inc
out
out
imul
clc
push
xchg
and
ljmp
icebp
sub
xor
cmp
lds
inc
dec
stos
sbb
mov
das
xchg
in
outsl
mov
mov
fs
mov
pusha
and
pop
adc
dec
pop
ja
fidivs
cmpsb
in
and
int3
dec
adc
sbb
xor
and
bound
cmp
int
outsb
sub
sub
imul
xor
inc
lea
mov
dec
dec
je
cli
jnp
jmp
sub
push
movb
sub
push
adc
dec
mov
xchg
sub
cwtl
add
in
dec
mull
dec
and
pop
fistps
pop
pop
scas
jmp
je
subl
rcll
cmp
sbb
jge
jecxz
aad
pop
lock
aas
sbb
adcb
fdivs
push
push
jg
sarl
pop
jns
inc
xlat
jns
popf
stos
sub
sahf
fsin
adc
and
decl
mov
adc
xor
test
outsl
xchg
pop
jmp
jle
push
cmp
loop
sbb
test
adc
aad
pop
hlt
lods
movsb
push
inc
pause
scas
daa
out
mov
loop
cltd
sbb
cli
add
mov
int3
jbe
sbb
mov
stc
jge
addr16
jo
and
stos
leave
xchg
addl
xor
mov
mov
mov
mov
dec
out
push
aam
lea
sub
push
shlb
mov
pop
ljmp
popf
rorb
ljmp
xchg
sbb
xchg
sub
loop
push
xor
jg
push
pop
scas
jnp
inc
icebp
xor
jns
fisubrs
popf
xor
in
aad
mov
jmp
jl
aas
xchg
fisubrl
inc
rorl
lahf
loop
push
in
or
mov
arpl
or
jmp
outsb
pop
out
fadds
jne
and
push
pop
add
in
push
test
mov
inc
mov
dec
mov
mov
and
ret
mov
push
or
sbbl
mov
or
stos
adc
fucomip
aas
or
sbb
je
insb
test
pop
nop
xor
test
int3
mov
mov
getsec
imul
pcmpeqb
xor
cmp
clc
inc
test
jge
push
mov
iret
add
loopne
in
push
dec
dec
mov
xor
repz
lods
sub
out
pop
fisttps
imul
into
and
pop
lret
lret
jns
mov
das
pusha
or
pop
insl
cmc
cmp
or
xchg
mov
pop
add
rcl
scas
sub
push
dec
mov
cmp
bound
xor
push
inc
xchg
inc
add
lahf
cmp
roll
jo
sub
pop
mov
ret
push
xor
jbe
adc
movsb
jg
out
divb
push
adcl
sti
dec
dec
inc
push
fwait
loopne
mov
mov
push
sub
mov
and
out
or
dec
xchg
sbb
xchg
jnp
scas
icebp
test
aam
push
out
mov
inc
push
add
lods
popf
mov
jb
andb
iret
push
rorb
rcrl
dec
not
and
xchg
jmp
jmp
push
mov
bound
mov
ds
fcomip
mov
dec
mov
mov
or
push
adc
jge
imul
xchg
popf
mov
or
roll
sbb
ja
mov
mov
cltd
cmp
lods
aaa
and
or
mov
inc
dec
test
sahf
dec
lret
cmpsl
cli
mov
mov
or
xchg
test
in
lds
sbb
xchg
pop
sbb
enter
sub
sub
out
jne
aas
or
rcrb
test
mov
bound
sar
ret
dec
mov
mov
mov
lcall
outsb
cld
das
in
push
mov
outsl
gs
adc
es
push
push
sub
je
daa
in
push
je
insb
shl
sub
pop
adc
lret
movsb
aas
cmp
cmp
dec
jo
in
lret
sbb
mov
jno
fcompl
jnp
cmp
scas
mov
out
jae
lahf
std
sub
lret
mov
filds
loopne
mov
adc
out
mov
pop
loop
push
adc
jmp
out
rol
add
mov
mov
add
ljmp
lods
push
dec
pop
scas
jg
xchg
in
push
adc
mov
add
imul
mov
add
sub
aas
imul
js
in
adc
jl
in
xchg
ja
mov
or
cmpsl
cwtl
dec
sub
sbb
mov
push
ret
lds
xchg
clc
pop
stc
pop
imul
push
add
xchg
lret
pop
cwtl
add
loope
mov
mov
ljmp
and
lahf
std
and
pushf
sti
adc
push
xor
ret
push
push
inc
ret
push
in
mov
inc
js
add
repnz
rcrl
mov
jbe
test
scas
ret
outsb
mov
arpl
ja
jecxz
pop
or
lea
adc
rcrl
insl
jle
and
or
xchg
ret
sub
and
push
ja
out
repnz
mov
lods
mov
out
arpl
xchg
ss
jno
inc
movsl
test
adc
add
xchg
push
rcrl
adcb
xchg
cli
cmc
sti
out
shrb
addl
movsl
lcall
movsl
inc
aad
jl
aad
hlt
or
fs
cs
push
mov
mov
int
in
push
xor
jbe
jmp
ficomps
ret
pop
hlt
subl
daa
shlb
xchg
jne
orb
xchg
je
cmpsb
int
jb
adc
xchg
lret
aad
in
jl
xchg
test
mov
cmpsb
cmp
outsb
dec
gs
mov
shlb
mov
int3
insb
testl
arpl
outsb
loop
mov
mov
xchg
cmp
bound
jbe
pop
fwait
dec
inc
add
loope
jg
dec
pop
test
and
sub
xchg
jle
leave
and
rcll
je
sub
arpl
add
inc
das
cmp
dec
sahf
test
push
shll
pop
repz
fists
jle
rorb
ret
out
ljmp
mov
push
dec
movsb
jns
mov
xchg
or
dec
fcmovb
mov
fnsave
shr
xchg
jg
sub
fcomp
push
mov
out
cmp
dec
cld
push
mov
mov
lret
sbb
add
hlt
or
add
inc
push
aam
gs
inc
je
xchg
xor
std
push
mov
pop
out
icebp
mov
aaa
pop
adc
push
ret
and
pushf
sub
int3
cmpsl
mov
pop
jp
subps
sub
xchg
shrl
cs
repnz
or
pop
and
std
repnz
xor
pop
cmp
add
jbe
call
out
std
cmpsb
push
or
jmp
shrl
stos
stos
sub
outsb
int3
fnstcw
sbb
jmp
xor
push
repz
fldcw
popa
addr16
sbbl
lret
mov
xchg
les
mov
ftst
xchg
cltd
sbb
rorl
xor
mov
push
repz
test
jae
stos
cmp
adc
cmp
int
das
aam
or
lcall
mov
push
add
mov
xchg
data16
sbb
push
or
xor
cmp
add
mov
cmp
sbb
xor
daa
mov
sbb
test
sbb
and
pop
and
jne
push
sbb
add
sub
and
adc
xor
xchg
push
or
aad
or
out
call
test
rorb
ret
or
jecxz
hlt
sti
mov
fldenv
jge
cmp
test
andb
call
push
popa
lret
cmpsb
je
fstpt
clc
inc
jns
out
and
test
sbb
xchg
js
push
pushf
xlat
inc
mov
xchg
inc
or
sahf
scas
jge
stos
rcll
jno
repz
into
sub
jecxz
inc
add
xchg
sbb
sub
cwtl
jl
push
adc
insb
mov
test
add
push
fxch
ja
xlat
xchg
inc
pop
sbb
cmpsl
cmpsl
mov
stos
lods
lahf
cmpsb
xor
fists
out
jge
add
gs
je
cld
push
dec
mov
sub
inc
cmp
cli
sub
pushf
js
lahf
push
shrl
xchg
jecxz
push
lock
inc
lea
and
dec
out
push
cs
mov
ljmp
mov
les
lahf
loopne
fimull
test
rorb
push
bound
repnz
push
pushf
or
leave
das
loopne
jg
lock
dec
lea
rol
jne
stos
jp
lea
mov
mov
cmp
hlt
int
add
decl
push
mov
cmp
xor
dec
scas
dec
mov
sbb
sbb
inc
jbe
arpl
je
xor
fistpl
xchg
mov
mov
mov
or
sahf
cmp
ss
lock
aam
in
pusha
scas
mov
es
mov
xchg
sub
fidivs
fcmovnb
movsl
cltd
mov
jge
adc
xchg
icebp
mov
nop
push
fs
sub
mov
jle
pop
dec
mov
or
push
xchg
jbe
test
jp
jge
inc
pop
jae
dec
cmpsb
test
xchg
xor
popa
or
movsb
xchg
in
in
out
sbb
lret
out
pop
ja
xchg
add
xchg
push
mov
dec
jne
lcall
outsl
jecxz
mov
xchg
fsubrs
stos
pop
into
mov
in
ficompl
dec
addr16
scas
push
out
cli
xchg
push
xchg
iret
push
mov
int3
dec
stos
jo
push
outsb
sub
jecxz
cwtl
jae
movntq
scas
mov
mov
or
inc
cs
arpl
stos
movsl
sbb
sub
cli
adc
out
sub
aaa
jo
jne
xchg
inc
push
popa
mov
cmp
jbe
rcrl
jg
sbb
pop
enter
loopne
daa
xor
aaa
adc
and
cltd
mov
xchg
xchg
sub
out
cmpsb
fincstp
xchg
jge
or
push
mov
loope
xchg
push
add
or
rcrb
popa
xchg
or
repnz
dec
xor
xor
call
loop
inc
shrl
mov
test
fld1
jmp
pop
lock
fildll
shl
dec
aas
and
add
sub
lods
jge
mov
push
inc
pop
or
cld
ja
icebp
push
dec
cmpsb
and
cmp
scas
xchg
mov
jmp
push
mov
mov
dec
aaa
out
into
in
push
adc
sbb
cld
sarb
test
dec
inc
xor
and
ja
jge
or
xor
arpl
xor
mov
mov
mov
lock
xor
ljmp
into
unpcklps
cltd
mov
rcrb
insb
ss
std
shrb
out
xchg
or
popf
mov
pop
sub
int
push
pop
xchg
addr16
hlt
sbb
aas
push
fists
mov
imul
mov
outsl
push
jb
xchg
clc
dec
int
cmp
xchg
xchg
xchg
xchg
jno
fisubs
xchg
repnz
lahf
lret
and
add
and
cmc
sub
mov
mov
add
dec
mov
cld
mov
mov
jp
pop
or
mov
movsb
dec
dec
inc
repz
sbb
movsb
lods
add
fcomip
lods
pop
or
lods
mov
movl
out
sbb
mov
and
push
dec
or
sub
mov
call
enter
sbbl
std
jnp
scas
sti
loope
insb
mov
out
out
mov
xor
sahf
mov
inc
aaa
jbe
out
xchg
cmp
loop
mov
jns
xchg
mov
lock
ret
sbb
sti
add
call
or
jmp
ss
sbb
call
adc
and
movsb
xchg
inc
and
mov
mov
mov
std
call
mov
jecxz
mov
ret
ss
fs
mov
orb
imul
ja
aad
xor
jne
popa
cmc
ja
cmp
sbb
sti
popa
fstps
out
push
rep
lcall
mov
das
incb
loopne
pop
sbb
loope
inc
push
pop
sbbb
dec
inc
popa
leave
bound
sbb
fsubrl
loope
sbb
je
cltd
xchg
xor
and
and
repnz
add
add
lods
into
movsl
outsb
pop
push
mov
dec
add
push
int3
popa
push
cs
ljmp
paddsb
out
inc
data16
xchg
cld
sti
call
cmp
sub
cmp
and
and
out
outsl
icebp
push
ret
dec
sarb
cmpsb
cmc
xor
shr
jle
mov
sub
lock
cmpb
loopne
test
lahf
mul
push
xchg
mov
loop
cmp
ror
cli
sbb
xor
and
fs
push
pop
mov
mov
pop
xchg
push
jmp
pop
xchg
outsl
repz
xchg
push
call
inc
inc
insl
sbb
repz
mov
lret
push
ja
ss
fcomps
xor
jbe
mov
mov
fisubrl
jne
rorb
clc
xchg
mov
add
int
leave
push
int3
mov
stos
xchg
test
lods
not
push
outsl
ror
outsb
or
sub
push
scas
iret
or
jb
pop
js
ret
mov
adc
test
and
fimull
addr16
xchg
cld
mov
push
cwtl
jno
fstpl
inc
push
jae
fwait
mov
ficompl
xlat
imul
outsb
mov
adc
scas
nop
outsb
jecxz
mov
jo
dec
sti
xor
daa
outsl
pop
push
clc
xor
cmp
ret
xor
sub
pushf
shll
push
add
pop
pusha
push
add
test
int3
outsb
jp
pop
stos
lock
and
mov
ds
arpl
mov
call
adc
scas
dec
pop
mov
or
fucomp
and
pop
daa
lret
cmc
add
shll
jns
mov
mov
mov
dec
insb
pop
sub
xchg
stos
je
enter
and
lea
pop
rcll
mov
inc
stos
in
or
int
in
dec
add
hlt
fsubl
data16
adcb
pop
ss
decl
mov
xchg
sbb
test
sub
lea
fadds
xorb
fsub
outsl
xchg
repz
pop
fbstp
aad
dec
pop
mov
mov
dec
out
mov
outsl
fptan
fnsave
xchg
loop
sbb
addr16
xor
push
dec
stc
in
je
jle
xchg
mov
rol
sub
test
xchg
stc
adc
movsl
mov
fiadds
ds
lcall
push
lcall
inc
xchg
lods
scas
lds
push
test
out
add
push
clc
or
inc
cmp
sbb
dec
es
jns
cmpsb
mov
mov
mov
or
push
jge
or
shrb
fisubrl
lock
lahf
jmp
push
xor
mov
dec
in
inc
adc
pop
push
xchg
loop
outsl
pusha
lret
lds
lahf
mov
inc
xlat
cltd
in
repz
mov
call
adc
ss
movsl
call
adc
lret
xchg
mov
stc
bound
jbe
dec
notb
cmpsl
pusha
imul
sub
fisubrl
sbb
cmpsb
cmp
divb
rcl
mov
inc
fstps
call
sarl
sarb
icebp
test
sbb
push
out
jecxz
lea
jl
xor
push
nop
dec
shlb
jl
ja
ja
ds
mov
cli
xchg
dec
popf
dec
xchg
jp
les
jnp
rolb
sbb
xor
mov
sti
fnstcw
inc
fmull
mov
lock
movsb
xlat
sbb
sub
mov
sbb
sahf
and
cwtl
popa
mov
les
add
bound
push
pusha
push
xor
into
and
outsl
jb
loope
and
mov
sbb
jle
aad
gs
and
and
or
xchg
adc
stc
add
scas
sub
sub
cmp
mov
loopne
push
adc
js
stc
imul
mov
imulb
xor
xchg
dec
jg
adc
movsl
in
shrl
sub
imulb
add
and
rorb
jg
divl
divl
aad
outsb
cmp
mov
repnz
push
or
aaa
pushf
fiadds
aam
dec
test
dec
js
loope
push
jbe
test
in
imul
out
xchg
mov
cs
aaa
enter
or
insl
shlb
outsb
adc
loopne
add
pop
mov
sub
fsts
cmpsb
jmp
pop
out
test
jp
dec
add
pusha
orb
cmc
ret
ret
movsb
adc
loop
lcall
inc
fisubrs
jno
call
test
dec
cmc
lret
pop
lods
sbb
jnp
inc
sub
jb
add
cmp
aad
fildl
inc
pop
fisttpll
mov
ja
cwtl
mov
ljmp
push
subb
sbb
pop
fcomps
loope
hlt
xchg
xchg
sbb
jle
push
add
std
inc
and
sbb
xor
mov
pop
lahf
jbe
sub
xor
add
in
mov
icebp
sub
stos
push
pop
outsl
imul
cwtl
into
movsb
push
je
movsb
push
imul
mov
xchg
call
xlat
dec
iret
rorl
xor
add
pop
bound
into
mov
sarl
mov
adc
fistpl
adc
lods
jbe
pop
xor
xchg
jb
pop
adc
js
nop
mov
sbbl
sub
cmc
sub
call
xchg
jo
imul
xor
dec
jns
xchg
mov
test
xor
xor
cmp
pop
jne
scas
inc
sub
sub
and
out
inc
jnp
xor
int
inc
inc
dec
je
xchg
into
sub
jns
sbb
jmp
addr16
in
or
xchg
push
or
or
fildl
ret
pop
mov
inc
xor
ja
jbe
mov
lcall
xor
inc
sub
cmpsl
pop
xchg
adc
add
add
das
and
les
mov
xchg
hlt
pop
push
push
pushf
ret
mov
dec
mov
sbb
inc
jno
sbb
sub
push
out
mov
aam
and
lods
push
cmp
add
test
xchg
not
sub
je
test
dec
mov
mov
pop
or
in
icebp
mov
inc
dec
movsb
dec
sbb
add
sti
dec
xor
and
ss
inc
in
fcmovb
popf
stos
inc
or
mov
sub
imul
test
mov
daa
popa
mov
xchg
pop
push
rcrb
push
xchg
enter
xchg
push
insl
xor
cwtl
dec
xor
mov
push
cmp
mov
sbb
dec
mov
mov
cmp
add
out
or
xlat
fisttpll
shrl
test
xchg
sbb
push
js
xchg
xchg
dec
mov
pop
mov
imul
in
push
lods
repz
in
pmulhuw
hlt
mov
mov
cmp
jl
cwtl
lods
inc
cld
int3
aas
scas
cmpsl
and
mov
mov
pusha
iret
mov
push
push
jl
push
sub
sarb
push
ret
fwait
adc
and
mov
hlt
xchg
movsl
fcomps
dec
xchg
cli
xchg
xor
xchg
inc
push
mov
lods
fdivl
inc
gs
xor
pusha
adc
add
and
outsb
out
xchg
sbb
repz
cmp
mov
push
push
leave
aam
pop
aam
cld
fists
fldl
iret
aad
daa
aaa
subl
cwtl
pop
mov
pop
xlat
rolb
shrb
mov
inc
cmp
stos
and
outsb
mov
xchg
jecxz
lea
nop
adc
lcall
cmp
hlt
cmp
loope
cs
sub
es
cmp
dec
inc
int3
lea
stc
jmp
push
js
loop
xchg
cmp
mov
in
cmp
sub
adc
call
pusha
daa
mov
mov
cmp
iret
lcall
jbe
jae
push
scas
mov
stc
jle
aas
test
leave
repz
lret
repnz
cli
xchg
xchg
mov
xchg
xor
add
lea
xor
shlb
daa
shrb
mov
leave
sahf
in
popa
mov
xchg
sbb
inc
js
aam
mov
jbe
mov
insb
or
dec
inc
jge
inc
mov
inc
adc
add
jl
dec
ss
dec
xor
lahf
les
xor
bound
insb
and
jge
testl
jle
test
test
xchg
and
sti
push
inc
lret
cwtl
sub
jl
mov
cmpb
dec
cmpsb
sub
mov
mov
mov
and
and
sar
mov
mov
aaa
ds
adc
pop
ss
sub
push
pop
xor
cmp
fdivr
and
lahf
jnp
lods
ds
scas
popf
and
xchg
xor
adc
pop
cmp
cmc
add
or
test
mov
sub
jle,pt
dec
in
push
clc
xchg
hlt
dec
repz
adc
test
lock
push
dec
jbe
cs
out
adc
shlb
mov
int
jmp
xchg
insb
pop
sbb
fisubrl
int3
bound
push
adc
lahf
xchg
inc
aas
lock
mov
adc
iret
xchg
xchg
xchg
inc
dec
bound
sti
enter
movsl
imul
or
fwait
push
push
cs
movsl
sti
fs
aam
in
pop
pop
lods
test
mov
lea
sbb
inc
sub
shll
mov
cli
or
or
inc
inc
shrb
scas
xchg
movsb
pop
mov
inc
mov
cmp
mov
loope
cwtl
xorl
adc
sbb
or
stc
or
add
push
scas
out
push
lods
int3
adc
das
mov
dec
into
adcl
aas
inc
cli
mov
nop
adc
bound
popf
les
mov
loop
mov
jg
cli
out
cmpl
or
push
das
outsb
mov
fsubs
cmp
push
sub
icebp
dec
sub
sbb
xor
pop
cltd
pop
xlat
sbb
rclb
pop
sbb
push
mov
ret
jp
sbb
push
icebp
cltd
inc
adc
sub
ret
xchg
movsb
shrl
fmull
rolb
clc
xchg
pop
mov
xchg
aam
jge
push
dec
and
clc
dec
insl
sub
fisubrl
cltd
sbb
pop
cltd
lret
cltd
loopne
jmp
leave
push
outsb
jae
or
cmp
cld
push
sub
adcb
inc
sub
fstl
jno
adc
mov
ljmp
into
lea
xchg
icebp
pop
int
mov
mov
and
popf
fs
xlat
pushf
jmp
sub
shlb
adc
mov
push
xchg
mov
sbb
stos
sub
loopne
xchg
mov
les
inc
lods
or
inc
push
out
jmp
jecxz
pop
xchg
in
in
push
ds
xchg
lds
push
push
xorb
notl
les
movsb
add
mov
push
jg
jmp
mov
push
adc
cmp
xchg
pop
xlat
dec
jne
mov
mov
daa
or
filds
es
pop
dec
nop
or
xor
pushf
cmp
mov
vmwrite
push
mov
xor
popa
das
mov
dec
lahf
rcll
sub
inc
sbb
xchg
push
sub
test
mov
jmp
movsb
data16
lahf
jl
in
mov
fwait
dec
cwtl
and
cld
xchg
jecxz
add
nop
cmpsl
imul
jnp
jnp
sbb
ja
in
mov
xchg
mov
mov
nop
js
or
movsb
add
xor
sbb
insl
jp
pop
jg
lea
iret
fidivs
pop
leave
out
xchg
es
mov
imul
and
loop
sbb
iret
leave
test
std
or
cmc
push
push
push
dec
and
fisubrs
flds
mov
push
test
cmpsb
test
pushf
scas
scas
jp
sub
insl
in
daa
shrb
inc
xchg
dec
inc
inc
jp
jnp
add
xchg
sub
xrelease
xchg
xor
cltd
repz
sbb
lret
cmp
pushf
adc
stc
lds
mov
xchg
mov
xchg
jmp
add
imul
dec
lret
jbe
mov
or
mov
mov
add
fbld
out
aaa
lea
scas
enter
enter
cs
clc
bound
jbe
pop
outsb
and
loop
jg
les
iret
enter
jg
push
leave
sarl
pop
pop
ljmp
dec
fsubs
jnp
jle
rclb
rorb
or
rcrb
loopne
movsl
rolb
xlat
add
je
xchg
mov
and
mov
in
fdivs
inc
mov
daa
lea
aaa
sbb
mov
mov
test
cmc
jg
fs
call
mull
jmp
push
aad
add
dec
jmp
in
push
inc
rorb
pop
stos
mov
movsl
popa
lcall
add
insl
sbb
test
cwtl
sub
roll
test
pop
outsb
scas
iret
insb
jnp
inc
pop
in
cs
sub
hlt
cmp
shr
adcb
cmp
or
mov
data16
dec
int3
mov
imul
ljmp
gs
pop
jmp
jge
filds
mov
movsl
pop
xor
and
jmp
insl
imul
repnz
clc
enter
inc
sbb
sub
sbb
mov
shlb
adc
call
pop
add
mov
out
push
pop
and
ss
and
outsb
lret
mov
das
mov
sub
aad
cmp
sahf
xchg
add
fstl
mov
arpl
push
push
jmp
movsb
mov
fwait
loope
ja
int
flds
jnp
test
loopne
loope
pop
adc
popa
add
pop
ss
pop
jmp
ret
jmp
in
in
test
fisubrl
aad
cmpsb
stos
sub
pop
fisubrs
sahf
push
xorb
cmpsb
push
xchg
scas
xchg
in
or
pushf
xor
rcrb
push
cs
pop
mov
dec
arpl
repnz
mov
roll
jp
pop
pop
loope
inc
out
cmp
add
insb
xor
xchg
or
mov
push
push
cmpsl
mov
mov
mov
enter
jns
sub
ss
test
sbb
sbb
mov
xor
sbb
mov
push
or
in
inc
xchg
xor
data16
arpl
out
pop
mov
in
xorb
and
inc
xor
lods
imul
fistpll
adc
xchg
gs
lods
loope
sbb
pushf
aas
pop
mov
cmpsl
mov
scas
add
aaa
push
imul
in
xor
das
in
jno
fsub
jge
gs
add
filds
add
mov
cwtl
cmpsl
iret
pop
adc
sbb
jecxz
ret
or
fwait
pop
and
xor
cld
pop
add
add
aad
or
cmp
mov
inc
jns
loop
std
pop
add
and
sbb
shrb
sub
loope
fdivl
fiaddl
cld
dec
cmp
scas
out
aas
jnp
je
addl
xor
aam
jno
adc
shl
stc
xchg
je
vmptrld
push
icebp
int
sbbl
push
adc
jge
pop
fsubs
scas
je
jnp
outsb
cli
jge
inc
sub
aaa
mov
js
sub
dec
in
mov
adc
je
sahf
lds
or
or
adc
mov
mov
gs
cmp
jnp
loop
cmp
daa
mov
push
push
lcall
fstp
stos
ret
sbb
movl
add
shrb
fwait
jb
les
addb
mov
or
mov
mov
addr16
lret
push
int
lds
jge
ljmp
gs
fcoml
adcl
add
mov
outsb
fucom
int3
add
mov
cmp
fisttps
insl
or
push
stos
sarb
repnz
orl
cs
daa
mov
hlt
notl
ficomps
push
cmpsl
je
rorl
mov
or
outsl
jns
outsl
rolb
imul
mov
lds
add
out
fwait
lahf
hlt
ds
mov
lock
nop
data16
mov
insl
cmp
negb
xor
dec
dec
inc
xchg
mov
test
das
cmp
push
cmc
outsl
xchg
or
das
loop
daa
mov
dec
xchg
mov
xchg
push
sub
push
dec
add
add
pop
rcl
mov
dec
divl
loop
dec
xchg
push
cmpsl
xchg
ljmp
popf
adc
push
xor
mov
rorb
popf
dec
andl
clc
xchg
xor
cmp
loopne
mov
pop
lea
sahf
and
arpl
jns
arpl
stos
jo
nop
ficompl
lods
or
dec
cld
mov
sbb
stos
stos
rcr
xor
popf
cwtl
nopl
cs
aas
xor
je
out
ss
cli
jl
push
cmp
shl
aas
arpl
cli
dec
lret
jae
jl
jp
jecxz
fisttpl
xor
or
popf
std
outsl
lods
cmp
pop
sub
mov
jp
cs
hlt
or
inc
or
jp
popa
xchg
adc
cld
mov
dec
sbb
js
sub
das
test
inc
in
fildl
ljmp
xchg
add
in
cmp
jns
dec
mov
les
add
mov
xor
out
popf
adc
xor
jno
adc
lret
pop
sbb
jo
fsubrs
push
adc
in
stos
cmp
out
sub
icebp
xor
add
call
imul
stos
lret
gs
and
xchg
add
mov
mov
pop
cmpsb
xchg
push
out
aas
pushl
daa
jmp
add
std
pop
mov
out
and
dec
mov
pop
scas
fs
jmp
xor
or
xor
aas
mov
clc
push
adc
in
subl
jle
jno
pop
mov
sub
adc
pop
mov
movsl
jbe
subl
push
repz
inc
fstl
icebp
notb
jbe
add
sbb
fildll
or
in
mulb
enter
fsts
push
mov
adc
push
icebp
inc
out
mov
xor
icebp
push
xor
pop
xor
push
outsb
xchg
pop
fmulp
fistpll
and
jo
push
movsb
xor
pop
jno
sbb
stos
aaa
or
aas
decb
pop
scas
jmp
jb
jnp
pop
add
dec
add
lahf
inc
or
and
outsl
jae
mov
movsl
scas
out
cmp
pop
imul
out
repnz
or
decl
stc
sarl
mov
sub
js
mov
cmpsl
sti
cmp
dec
pop
das
in
pop
jge
test
data16
js
jle
adc
mov
aam
mov
testl
stos
mov
xchg
add
cmp
ror
lea
mov
cs
adc
jecxz
sarb
lods
pop
and
adc
les
mov
loopne
in
in
mov
jecxz
cmp
mov
repnz
mov
add
xor
enter
mov
fstps
cld
jmp
test
pushf
lods
push
xchg
dec
lock
push
push
dec
adc
push
cmp
ds
xor
sub
lret
jecxz
and
test
and
or
sbb
jno
test
das
add
inc
popf
sahf
mov
pop
add
les
dec
sbb
mov
pop
data16
xchg
or
mov
addb
dec
pop
push
loop
xchg
xor
xor
fistl
enter
and
nop
xor
cwtl
and
cld
cmc
xor
push
push
fs
push
movl
adc
sbb
cs
inc
lds
mov
pusha
mov
pop
clc
xor
mov
or
sbb
sbb
dec
hlt
and
js
cs
insb
push
inc
mov
jno
sar
mov
adc
shl
push
inc
xor
cmpsl
jge
adc
and
cld
and
call
lret
or
inc
aam
adc
adc
icebp
out
cmc
jecxz
nop
lcall
loop
aas
xor
adcl
adc
out
test
mov
cld
jns
pop
out
out
and
repnz
test
les
inc
pop
call
pushl
fldenv
addr16
jne
or
dec
push
sub
fsubrs
or
vpsubsw
lea
pop
jbe
lret
xor
push
jg
pop
xor
repz
mov
pop
std
cld
push
mov
test
mov
dec
in
pop
cmpsl
pop
fadds
push
adc
clc
or
lods
xchg
dec
mov
mov
ja
inc
push
pushf
imul
outsb
movsl
fidivrs
jnp
cmpsl
mov
fsubs
insb
jp
xor
enter
imul
dec
sbb
and
xchg
in
out
mov
dec
mov
mull
fistpl
mov
into
stc
or
jne
mov
cmp
inc
enter
in
cmp
mov
mov
inc
lods
push
insb
shl
inc
mov
jns
push
orb
lret
jmp
xchg
ret
loopne
or
mov
dec
sub
cwtl
ror
in
mov
daa
adc
in
pop
js
push
xorl
sub
or
ljmp
push
dec
lret
in
popa
adc
aad
xor
jnp
pop
and
inc
rcll
and
cmpsl
pop
stos
inc
aam
cmp
push
adc
jb
sub
push
test
mov
loope
jl
and
scas
push
scas
pop
clc
or
out
add
jnp
cmpsb
sbb
sbb
repnz
push
and
pop
mov
sbb
aas
sarl
jge
repnz
scas
leave
out
test
add
aaa
jmp
aas
jne
test
inc
daa
inc
mov
popa
dec
sub
lods
aad
test
cmp
xchg
lea
data16
cmp
cmpsb
test
pop
jns
sbb
imul
jge
mov
int
xor
lds
inc
cmc
stos
and
push
int
fidivrl
xor
xor
fwait
jbe
cwtl
or
test
push
or
pop
xchg
cli
adc
addl
fisttps
lret
es
in
out
ret
sub
movsl
push
mov
daa
insb
xlat
sub
add
mov
sbb
mov
daa
inc
sbb
mov
sbb
dec
mov
inc
lock
jp
sbb
pop
testl
xor
cltd
insl
fdivr
rorb
and
pop
call
xchg
inc
in
inc
movsb
xchg
push
ret
mov
mov
das
cltd
sub
adc
jb
adc
inc
mov
xchg
mov
lods
adc
pushf
xor
imul
jnp
loopne
lret
shr
lea
int3
sub
xchg
lahf
fcomps
nop
ds
into
pop
jle
push
xchg
lods
jns
aas
in
add
idivl
je
dec
push
adc
xor
test
xchg
inc
cmp
cmpsb
pushf
sub
icebp
popf
sub
loop
cld
or
or
mov
jmp
outsb
sti
xor
imul
pop
adcb
sahf
push
push
add
or
inc
pop
movlps
in
inc
pop
imul
out
mov
ljmp
sub
repnz
jp
mov
inc
repnz
mov
push
pop
stc
enter
int
fmull
in
jae
les
push
ljmp
xchg
sbbl
lods
jbe
lret
imul
aaa
dec
iret
sahf
aaa
lea
test
pushf
sarl
fsubrl
mov
fisubl
std
outsl
sbb
mov
sub
cmp
xchg
in
and
ss
pusha
push
int3
into
push
les
bound
insl
or
cmc
repz
pop
icebp
daa
cmc
shr
movsb
enter
mov
movsl
mov
xor
pushf
push
xchg
imul
loop
jns
sbb
inc
rcrl
inc
add
mov
jae
hlt
pop
hlt
test
mov
mov
add
fbld
xor
iret
inc
push
dec
das
push
gs
lods
aam
rcll
ss
nop
inc
out
shll
lods
sbb
arpl
add
and
push
xchg
mov
xchg
cmp
lock
pushf
xlat
lcall
inc
xchg
pop
cwtl
jbe
xchg
out
push
int
arpl
out
sub
cmp
fcmovnu
and
sub
nop
or
jg
lret
and
mov
dec
lahf
cld
hlt
lcall
scas
std
rcll
js
mov
adcb
inc
sub
inc
xchg
loope
push
push
push
pop
repz
enter
int3
or
dec
or
sub
fisubs
enter
int
call
loopne
adc
xor
clc
xchg
out
bound
fbstp
out
add
sub
mov
jns
push
sub
aas
adc
lock
inc
pop
scas
push
stos
mov
push
mov
insl
ret
cmpl
pop
and
inc
iret
sbb
cs
xchg
xchg
push
and
or
pop
push
insb
xchg
fdiv
js
nop
popl
shlb
xor
fiaddl
pop
jge
or
lods
xchg
ds
scas
lods
mov
leave
jl
int3
dec
in
test
aas
cs
jo
jp
aas
mov
leave
pop
cmp
dec
movsb
adc
insb
dec
jle
mov
sub
push
xchg
sbb
sahf
nop
mov
lods
fsubs
sbb
loopne
pop
in
fdivrp
pusha
cld
loop
jl
shrb
ret
jle
pop
fidivrs
fdivs
mov
mov
pushf
dec
mov
mov
push
mulb
fdivrl
cvtpi2ps
inc
ja
mov
out
add
test
loope
in
mov
dec
fadds
nop
and
sub
lahf
inc
mov
imulb
pop
sub
fisttpll
test
or
pop
adc
inc
flds
out
jno
xor
cmp
stc
push
push
orb
dec
sub
int3
fwait
sbb
push
mov
mov
sbb
jb
inc
push
push
jno
inc
stos
xor
rcll
pop
sbb
call
mov
lods
inc
mov
jge
aas
rcr
mov
xchg
nop
lcall
mov
faddp
push
pop
cli
fadd
push
insl
xchg
call
cli
mov
lea
lret
inc
mov
cwtl
push
ss
daa
or
mov
mov
cld
daa
xor
sbb
add
jae
out
clc
bound
fs
xlat
ss
rcll
es
lock
push
ret
insl
stos
enter
pop
enter
sub
mov
out
mov
pop
mov
std
mov
push
stos
adc
adc
jmp
jl
lock
inc
call
add
xchg
jne
mov
cs
inc
lcall
cmp
mov
or
loop
push
scas
test
mov
sti
xor
loopne
fwait
dec
sub
xchg
fs
jne
ss
and
gs
sbb
jmp
jne
aas
sti
loopne
ljmp
jge
push
andb
in
push
push
lea
nop
dec
pop
push
rcr
clc
mov
clc
cmpsl
sbb
cli
pop
sbb
cs
mov
and
xor
push
cmp
icebp
adc
and
bswap
bnd
or
outsb
dec
adc
cmp
xchg
and
xchg
int
cmp
clc
adcl
pop
out
inc
jo
aam
nop
fiadds
addb
sub
je
rclb
inc
mov
push
mov
mov
imul
ljmp
mov
inc
mov
cli
aam
jp
xchg
and
fwait
adc
rorb
xchg
enter
lock
push
paddw
cmp
sbb
push
and
jns
add
xadd
xchg
rcrl
xchg
jmp
adc
mov
mov
cmpl
mov
mov
sbb
arpl
aaa
xor
xor
fdivrl
cmp
jns
lods
pop
xlat
jbe
and
adc
jae
test
cmp
mov
sbb
sub
dec
xchg
scas
adc
xorb
inc
xchg
xor
fdivs
xlat
xor
adc
mov
mov
push
fs
je
pop
aad
in
mov
rorb
xchg
hlt
popf
fcoms
loop
dec
enter
push
adc
sbb
dec
test
mov
cld
adc
inc
fimuls
mov
add
mov
mov
cmc
or
dec
sbb
dec
cmpsb
hlt
movsb
ljmp
adc
push
pop
dec
cld
push
sub
sub
pop
xchg
ret
sbb
sti
xchg
mov
loope
and
test
test
rclb
test
adc
cmp
mov
inc
sbbb
mov
cmpl
mov
cli
pop
cmp
push
add
push
mov
shlb
push
enter
frstor
ja
mov
adc
xchg
pop
dec
pusha
cmp
loopne
push
lcall
lahf
add
loopne
pop
test
pop
jecxz
jge
je
xchg
push
jns
mov
mov
test
addr16
movsl
lea
pushf
pop
sbb
add
pop
sarl
sub
inc
add
sbb
jle
mov
test
jbe
mov
sbb
mov
gs
xchg
frstor
fucomi
dec
push
sub
mov
or
pop
mov
cmp
insb
add
push
ljmp
popf
es
push
mov
stos
ljmp
js
mov
jg
xchg
xchg
push
pop
xchg
loopne
rorb
loope
pop
iret
mov
pop
adc
cmpsb
int
dec
adc
add
add
dec
and
ret
jp
push
outsl
inc
mov
lret
into
add
ret
mov
and
jns
mulb
cmp
mov
insb
push
xchg
xor
dec
adc
cmp
fistl
clc
ljmp
add
push
sub
sbb
test
add
rolb
out
test
mov
cmp
hlt
lea
mov
setg
or
fs
mov
xor
dec
sub
sbb
or
jns
xor
repnz
push
nop
and
shlb
jmp
js
sbbb
dec
mov
ret
or
call
call
decl
xchg
mov
sub
adc
sti
sub
mov
fstl
aad
ret
rol
or
lock
pop
dec
push
xchg
cmpsb
sub
jno
test
dec
jge
rcll
xor
loop
les
add
mov
daa
add
movb
add
inc
xchg
add
cltd
dec
push
xchg
push
mov
repz
cld
or
arpl
movsb
pop
fdivl
shll
orl
pop
iret
insb
in
scas
cs
sahf
mov
movsl
rclb
in
mov
push
mov
es
add
pushf
in
cmp
push
and
std
xchg
adc
subb
test
push
fnstcw
cli
idivb
out
mov
fidivl
pop
cmpsl
pop
add
xor
testb
mov
rcrb
push
mov
adcb
sarl
cld
dec
push
mov
mov
mov
pop
in
insl
jo
sub
pusha
push
and
mov
addl
push
clc
sti
jne
xchg
mov
pop
sti
or
sub
dec
mov
lock
mov
inc
or
mov
mov
cmp
dec
pop
cmp
out
sub
mov
lods
sub
push
pop
int
pop
xchg
fdivrs
cltd
popa
aaa
push
fistps
gs
push
shrb
pushf
mov
cmp
lods
daa
in
sub
sub
in
iret
mov
pop
push
outsl
cld
insl
sbb
icebp
xchg
shrl
mov
mov
loopne
add
cltd
mov
xchg
inc
dec
out
inc
cmp
pop
test
and
pushf
adc
dec
aad
adc
out
xchg
lods
push
xchg
add
add
mov
int3
add
pop
adc
sub
rclb
cltd
out
lock
inc
cmpsb
or
lcall
test
adc
aaa
jne
dec
mov
popa
dec
outsb
pop
dec
xchg
mov
push
and
into
push
add
aam
mov
inc
or
scas
pop
mov
xor
imul
dec
inc
jae
pop
dec
inc
sbb
cmp
movsl
jb
push
fistpll
rcrl
mov
fwait
and
lret
jge
aad
pop
lret
fimull
aaa
int
out
adc
push
mov
inc
pop
mov
adc
or
movsl
pop
sahf
xchg
pushl
test
cmc
push
or
lret
or
adc
pop
loope
rclb
mov
add
xor
adc
push
pusha
pop
and
push
cld
pop
add
addr16
mov
jbe
mov
mov
cmc
add
fs
push
inc
mov
pop
sbb
repnz
loope
cmp
and
push
mov
adc
jbe
call
cmc
xor
jecxz
add
insb
addr16
inc
outsl
ss
mov
mov
add
dec
xchg
fcmovb
iret
fdivp
dec
je
shlb
test
leave
dec
add
or
outsb
cmpsb
xlat
dec
xchg
mov
mov
sub
xchg
sbb
dec
test
jb,pt
hlt
insb
mov
lods
push
ss
in
fwait
pop
push
mov
sbb
pusha
hlt
fadds
mov
jns
hlt
movl
loope
cmp
sub
dec
sub
cmp
icebp
add
ljmp
xchg
pop
lahf
xchg
inc
cli
sbb
dec
ret
dec
add
sub
cmpsl
mov
ja
out
add
faddl
popf
fdivs
adc
dec
sub
jl
outsb
test
sarb
inc
loop
push
cmp
mov
das
push
movsb
aam
or
lock
repnz
add
jnp
addr16
and
and
xor
iret
push
mov
insb
jno
xchg
cwtl
lret
jge
daa
fdivrs
fildll
loop
inc
loope
bound
xchg
shlb
mov
mov
jne
xchg
or
dec
lret
add
xchg
out
outsl
mov
js
int
sarl
dec
fsubl
cmp
pop
sti
dec
xor
sahf
xchg
rcrb
inc
and
push
gs
mov
jge
pop
and
lret
and
out
js
mov
push
mov
pop
es
jmp
int
cmp
das
add
cmpsb
pop
mov
nop
sub
int3
or
loope
addr16
lret
loopne
popa
cmp
xchg
pop
loopne
mov
ljmp
and
cmp
cld
adcb
cmp
in
aas
mov
push
cmp
out
fprem
ficoms
mov
test
bound
dec
fcompl
jmp
shll
in
push
sar
jp
jb
icebp
mov
xchg
push
mov
outsb
jmp
inc
and
dec
repnz
adc
sbb
cmp
dec
mov
inc
repnz
mov
sub
test
xchg
sbb
movsb
cmp
jle
pusha
push
xchg
sbb
fwait
test
into
cmpsl
cmp
sub
pop
jmp
lock
mov
add
xchg
scas
pop
and
or
test
sub
inc
stos
pop
sub
push
jne
xlat
pop
cmp
xor
sbb
out
lods
or
scas
mov
sbb
outsl
arpl
in
clc
cmp
xchg
in
push
or
or
or
je
call
fidivs
cltd
jno
inc
sti
jns
in
lret
lea
lret
and
ficoml
jg
xor
and
mov
out
iret
add
mov
inc
inc
cmp
imul
addr16
lods
jb
xchg
cwtl
stos
xchg
pop
pop
sarl
aas
mov
fimull
or
les
or
mov
out
inc
mov
or
cwtl
push
push
jnp
arpl
rorb
add
jg
inc
mov
mov
je
jo
sarl
call
lds
dec
addr16
js
rorl
leave
aaa
jg
daa
fucom
leave
outsb
and
xchg
cmc
jb
pusha
fsubrp
mov
test
jns
jl
xchg
inc
adc
inc
out
orl
aam
dec
pop
shlb
movsl
jmp
xor
lods
daa
mov
mov
xchg
xchg
push
dec
cmpsl
adc
popa
mov
out
rol
push
jp
es
cmpsb
cmp
push
or
sbb
xlat
arpl
push
mov
out
ss
std
ljmp
inc
lahf
xlat
adc
inc
pop
outsb
in
stc
adc
es
mov
sbb
jle
out
cmpb
scas
dec
pop
push
dec
dec
or
arpl
push
xchg
movntps
mov
mov
ret
out
dec
int
jne
mov
push
stos
add
xlat
test
push
cmp
pop
mov
sub
mov
mov
data16
out
dec
test
or
push
ljmp
scas
fwait
nop
pusha
cltd
jno
lret
mov
dec
lock
aas
repz
popf
push
repz
outsl
cmpsb
sbb
pop
and
lahf
push
or
jge
pop
push
sub
mov
sub
outsb
es
xchg
push
mov
mov
repnz
repz
cli
mov
push
mov
mov
and
push
lds
push
stos
sbbl
push
nop
dec
rcll
mov
push
push
inc
pusha
jae
aam
popa
aas
imulb
or
icebp
and
dec
and
cltd
in
jno
pop
mov
push
pop
sub
xor
xchg
and
sub
pop
roll
gs
sub
aaa
scas
mov
scas
push
or
out
cmp
divl
jo
push
into
stos
ljmp
popa
fiadds
mov
dec
loop
mov
bound
cmp
mov
or
jae
sub
dec
movsb
imulb
sbbl
sti
mov
call
cmp
xor
fsts
jle
dec
push
cwtl
cld
mov
and
mov
mov
add
popf
push
jno
xchg
sub
inc
mov
insb
div
push
stos
js
push
xchg
js
mov
mov
mov
fldt
fld
lret
or
les
cmp
insl
xchg
add
xchg
je
int3
movsl
std
pop
add
les
xchg
pop
iret
pop
orb
mov
sbb
mov
outsl
push
mov
out
lds
jmp
inc
scas
test
ficoms
sbb
test
test
or
inc
imul
jg
test
addb
push
lock
pop
xchg
sbb
int3
addps
cwtl
shlb
jb
repnz
insl
testl
cmp
or
stc
jnp
mov
and
addr16
cwtl
adc
aad
lahf
adc
push
cmp
arpl
pushf
add
inc
sub
mov
ja
sarl
scas
and
mov
cmp
sbb
mov
xchg
int3
cli
jns
imul
sbb
xchg
ds
outsb
jbe
mov
out
mov
aad
addl
cmpsb
add
icebp
frndint
jno
or
jl
les
ss
add
cmp
cld
scas
sbbb
pop
call
repnz
jge
dec
and
dec
daa
mov
gs
jno
inc
jae
add
xlat
movl
hlt
mov
pushf
or
add
sbb
cmpsl
repz
lods
sbb
push
popa
ja
out
fnstsw
xchg
outsb
lds
sbb
jno
ds
pushf
arpl
pop
insb
or
adc
dec
jns
test
pop
xchg
movsb
jb
sbb
push
pushf
pop
scas
xchg
push
bound
or
cmp
jnp
jb
inc
jno
mov
stos
cmpsl
and
and
dec
push
es
dec
movl
leave
out
pop
jo
xor
sbb
jne
je
push
mov
mov
repz
data16
adc
jne
and
scas
lahf
inc
mov
ret
repz
cwtl
inc
mov
cmpsl
mov
pop
ljmp
pop
adc
xor
cld
mov
jmp
inc
or
insb
int3
in
sub
sti
mov
gs
andl
add
lahf
xchg
jae
mov
test
scas
rcll
xor
xor
and
fisttpl
xlat
add
mov
in
dec
sub
ja
repnz
dec
inc
and
jno
cld
jae
je
mov
popa
cmp
jle
data16
jp
enter
mov
sub
jl
test
or
cmp
shrb
cwtl
mov
push
mov
loope
mov
or
push
push
cwtl
adc
xor
ret
sub
out
test
mov
loop
sbb
fwait
push
lret
enter
inc
jmp
jecxz
jle
daa
nop
push
sbb
je
mov
xchg
lods
in
mov
mov
cmpsl
adc
bound
loop
mov
cmp
inc
shll
inc
xchg
dec
ljmp
dec
add
xchg
cs
call
sub
lret
xor
bound
lahf
fcompl
pop
arpl
mov
inc
sub
pop
push
pop
pop
data16
cmpxchg
sti
push
std
xor
mov
xorl
arpl
mov
push
or
repz
lahf
add
xor
sbb
cmp
loop
mov
iret
iret
mov
mov
jae
dec
dec
scas
or
iret
pop
in
mov
fstl
lods
sub
cmp
inc
pop
aas
jbe
inc
std
lods
push
dec
sahf
xor
adc
jbe
dec
add
nop
adc
sbb
scas
loop
dec
mov
scas
jb
cld
aas
cs
pop
adc
cmp
test
out
sub
sbb
insl
lds
std
cmp
scas
dec
mov
push
bound
pop
cmp
arpl
add
sub
add
popa
test
ret
aas
outsb
mov
cmc
out
mov
cwtl
pop
enter
imul
sub
sub
ljmp
and
xor
dec
icebp
test
cwtl
call
mov
sbb
push
in
mov
xchg
add
popa
loope
addb
je
xchg
test
cmp
jbe
cld
loopne
ret
loopne
and
xorl
mov
divl
push
dec
outsl
aas
or
loope
ret
pop
lret
push
add
outsb
movb
aas
cmp
cmp
xor
jle
fldt
fiaddl
fwait
mov
gs
int
scas
imul
pop
mov
inc
jnp
insb
inc
ja
lock
mov
and
imul
dec
addr16
sti
mov
mov
xor
dec
mov
mov
jnp
idivw
cmp
pop
pop
jmp
sbb
arpl
push
mov
mov
fdivs
stos
ja
jp
pop
mov
jnp
popf
jne
and
push
inc
sub
cmp
shl
push
sub
fsubp
adc
enter
add
pop
icebp
ja
dec
add
test
rcll
jb
je
stos
cld
sub
shrl
xor
std
mov
aad
stos
inc
leave
dec
call
popa
in
cmp
add
bound
jns
jnp
lock
leave
or
or
push
fnsave
dec
pop
jle
inc
roll
jo
data16
ffree
push
decb
fwait
addb
lcall
mov
inc
imul
call
int3
push
jns
xor
cwtl
jmp
imul
push
adc
fildl
icebp
nop
pop
sbb
inc
inc
push
jbe
dec
pop
loope
dec
das
adc
mov
sub
jae
mov
add
xor
jg
shrb
cmp
fdivl
aas
mov
pop
lods
std
pop
lock
fnstsw
adc
jl
jb
outsl
andl
mov
fldl
mov
xor
inc
inc
in
mov
mov
ret
dec
add
fmuls
xchg
fbld
pop
and
aas
fs
aam
pop
stos
outsb
sub
outsl
xor
pop
mov
mov
pusha
stos
es
push
fisubrs
pop
cwtl
in
icebp
jne
xchg
mov
fs
pop
movsb
xchg
xchg
aaa
movsb
add
mov
mov
mov
push
push
outsl
nop
inc
shlb
stos
push
insb
pop
lods
sbb
push
sbb
pop
iret
pusha
sti
ret
jae
jl
xchg
testl
and
in
xor
xor
sub
lock
push
pop
mov
outsb
xlat
mov
pop
mov
xor
xchg
mov
punpckhdq
adc
std
nop
enter
jmp
mov
cmp
bound
scas
mov
jle
dec
mov
xchg
push
sbb
cmp
mov
ds
jbe
repnz
dec
adc
mov
inc
add
clc
push
test
daa
cmpsb
and
insl
jmp
pop
push
push
and
pop
scas
pop
sub
push
dec
fdivp
iret
inc
and
hlt
mov
jb
xor
pop
mov
in
cltd
dec
mov
fnsave
cmp
and
push
lods
imul
paddsb
stc
cmp
mov
loopne
xchg
push
pop
mov
or
adc
imul
movsl
mov
dec
call
sub
push
pop
ds
add
scas
shrb
std
push
into
ds
jmp
out
into
cmp
adc
out
fs
call
mov
aam
mov
fidivrs
aaa
xchg
les
adc
aad
out
dec
es
fcomps
jecxz
mov
lods
clc
cmp
push
mov
fcomp
ret
xchg
scas
rcrb
shl
ja,pn
add
cmp
push
mov
repnz
add
add
jns
das
out
lods
inc
add
inc
mov
gs
or
pop
push
mov
mov
fyl2xp1
fisttps
xchg
leave
sarb
pop
inc
cmp
jp
sbb
in
push
sbb
sub
cmp
nop
inc
and
dec
push
xchg
shlb
mov
push
out
sbb
icebp
pop
ret
insb
pop
cli
sub
add
ret
arpl
xor
xchg
mov
in
add
arpl
shrl
divl
into
imul
jp
imul
dec
mov
gs
xor
add
adc
mov
push
popf
jbe
stos
add
cmpsl
adc
loopne
mov
scas
icebp
ljmp
pop
js
movsl
mov
jecxz
clc
test
fwait
es
lock
lahf
push
mov
or
dec
xor
xchg
cmp
lret
xor
adc
cli
pusha
not
test
mov
fwait
mov
movsl
test
arpl
mov
cld
or
pop
xchg
cmpsb
cmp
shll
push
mov
dec
pusha
lcall
ss
mov
or
jg
mov
sbb
pop
pop
rorl
pop
mov
dec
xchg
out
psraw
inc
dec
outsb
push
pop
cs
xchg
stc
sub
inc
sub
dec
or
ror
jle
in
enter
jo
or
xchg
pop
xchg
adc
fmuls
outsl
stos
in
sbb
push
and
add
sbb
add
sbb
aam
pop
out
hlt
push
jmp
adc
dec
push
push
ljmp
loop
cmpsb
or
dec
pop
loope
in
rcrl
or
cltd
jnp
fcmovnu
cmp
xor
and
jns
rorb
push
fcompl
push
adc
add
push
xchg
xchg
adc
sub
adc
dec
push
xchg
arpl
pop
fmuls
pop
push
jmp
dec
int
sbb
xchg
popa
in
outsb
xchg
je
leave
adc
lret
rcll
test
pop
jbe
dec
shrl
dec
sub
sahf
cmpsb
or
aas
mov
test
popa
mov
rolb
dec
mov
into
sbb
sub
out
xchg
stc
mov
pop
enter
pusha
push
sbb
adc
sbb
sbb
push
ja
add
in
jb
int
xor
xor
loop
mov
xchg
pop
push
inc
cmp
sarb
clc
push
aam
outsl
xchg
add
enter
and
aam
sbb
push
test
and
sbb
popf
sub
push
dec
jecxz
inc
sahf
mov
out
mov
dec
scas
icebp
shlb
pushf
iret
loope
jne
add
popa
mov
gs
lahf
jne
adc
lea
cmp
push
add
mov
or
packsswb
dec
lcall
ret
push
test
shr
pop
xchg
mov
push
insl
outsl
and
xor
cmpsl
xor
sar
dec
xor
add
xor
mov
pop
sbb
pop
sbb
test
outsl
fwait
xchg
leave
dec
ret
adcb
xor
or
mov
mov
aam
mov
xchg
mov
mov
ret
shrb
icebp
jp
js
push
lods
stos
push
xchg
roll
ja,pt
jmp
aas
nop
stos
mov
push
rclb
or
je
or
jecxz
adc
addl
es
imul
imul
mov
test
dec
fistpl
mov
sub
in
test
pop
rcrl
icebp
or
sbb
leave
cmp
call
cld
and
daa
test
push
pushf
mov
js
push
jno
inc
ds
mov
cmpsb
ret
adc
adc
nop
jnp
adc
fisubrs
lcall
int3
bound
or
push
subb
adc
test
leave
cmpsl
scas
jmp
loop
lea
jo
test
add
ret
cmp
jge
add
push
mov
movsb
loop
mov
mov
roll
mov
mov
dec
lahf
mov
aam
aam
clc
test
insb
sub
mov
aaa
pop
test
and
cmp
adc
rclb
jle
add
add
xchg
subl
and
jge
sbb
movsl
push
sbb
ss
push
cwtl
in
fsubl
outsb
or
add
cld
stos
int
pop
jns
mov
dec
jns
mov
cwtl
dec
xor
je
iret
stc
inc
bound
adc
inc
je
xchg
pop
mov
adc
fs
sarb
fs
sbb
ja
test
jmp
sbb
out
ret
add
xchg
mulb
ret
or
mov
xor
pop
scas
pop
mov
sub
scas
test
fstpl
or
in
dec
mov
mov
cltd
ljmp
fs
mov
dec
fwait
sti
sub
lahf
rorl
jnp
nop
pop
inc
movsl
mov
xchg
or
adc
pop
mov
cs
jo
or
sub
ja
xor
mov
ret
adc
push
js
repnz
icebp
mov
movsb
jle
xchg
in
ja
pop
xchg
xor
je
jae
push
int
out
jle
push
add
addr16
loopne
adc
movsl
xlat
test
inc
mov
fcmovnb
ret
shll
inc
shr
pusha
clc
mov
pop
mov
adc
data16
sub
cmp
mov
push
cltd
fyl2x
push
incb
jmp
mov
scas
xorb
add
jg
and
and
fsubr
ds
insb
xor
or
lcall
mov
inc
adc
add
or
lds
lahf
mov
data16
cmp
add
sti
adc
nop
shll
testb
jo
jge
hlt
jae
int3
and
add
jno
mov
cmp
aad
pop
xchg
addl
mov
ja
nop
cmp
setno
push
repz
dec
icebp
mov
popf
std
pop
cmp
and
repnz
add
pushf
jns
das
in
cmpsl
scas
sub
es
in
in
movsl
mov
filds
int3
mov
outsb
les
mulb
jae
sub
xchg
dec
fucomi
movsl
rolb
testl
cltd
adc
push
sbb
lock
int
outsb
cld
ret
jecxz
aaa
cltd
lds
scas
imulb
adc
sbbb
cmp
das
mov
pop
das
jge
add
jl
cmp
shlb
jo
cmp
sub
inc
int3
ficoml
push
jmp
xor
pop
adc
lea
scas
cli
ljmp
in
inc
popa
push
xor
mov
sbb
ss
in
add
and
int
mov
rolb
cmc
ljmp
in
arpl
inc
jae
mov
xchg
loopne
and
call
lock
push
cs
nop
je
jae
or
sbb
inc
mov
test
stos
jne
inc
mov
or
sub
xchg
inc
jae
imul
int
sub
popf
xchg
cmpsl
inc
lret
stos
pop
fidivrs
pop
in
xchg
loopne
adc
es
imul
push
xor
stos
push
xor
dec
xor
adc
inc
push
dec
dec
into
sbb
loopne
dec
jg
fildl
cmpsb
ljmp
push
push
inc
push
lcall
pop
lock
or
stos
imul
add
xchg
fwait
clc
ret
lcall
push
loopne
fcomps
adc
and
mov
ffreep
movb
imul
cmpsl
or
dec
leave
sbb
je
jl
sub
jecxz
cmp
inc
repnz
cli
pop
shl
push
inc
fidivrl
xchg
or
scas
xchg
sbb
stos
fwait
adc
es
jl
inc
fdivrs
xchg
rcr
outsb
adc
mov
xchg
ret
fwait
xor
jb
in
fiadds
lret
inc
imul
adc
enter
mulb
push
inc
add
lret
fwait
cs
mov
or
sbb
xor
int
push
and
sub
or
xor
inc
int
loope
rorl
ret
fsts
sbb
lret
aam
inc
int3
xchg
aaa
int
and
adc
push
inc
sub
sbb
sbb
andb
add
imul
push
mov
lcall
ljmp
cmpb
mov
pop
test
shll
or
inc
mov
loopne
fildl
push
jmp
mov
cs
inc
ljmp
dec
xor
pop
fnsave
pusha
mov
jmp
mov
clc
mov
ja
mov
xchg
je
cwtl
scas
repnz
add
dec
stc
or
inc
sbb
xor
push
sarl
adc
inc
add
and
mov
cmp
fstps
ds
aad
dec
mov
fisubl
jb
test
add
arpl
lock
loop
loopne
outsb
gs
stc
sti
jne
push
dec
popa
and
cmp
out
or
xor
out
aam
ss
dec
jns
or
movsb
cltd
aaa
push
and
outsl
loope
dec
int
adcl
ret
push
loop
add
lods
adc
mov
rclb
aaa
ret
fildll
daa
sar
lods
test
sahf
sub
add
data16
clc
mov
dec
or
enter
repz
shr
mov
jl
inc
push
mov
pop
push
add
or
mov
in
jb
mov
mov
js
imul
xor
in
sub
xor
test
fmuls
movsb
dec
ret
aam
cltd
adc
fistpl
daa
inc
mov
push
mov
dec
or
push
pushf
mov
out
fsub
pop
test
push
adc
jb
push
movsl
lret
int
movb
add
xchg
dec
sbb
push
inc
enter
das
lahf
add
mov
iret
vaddpd
cmp
out
leave
sbb
movsl
rcr
mov
insl
or
mov
cld
xor
lahf
test
xchg
and
std
mov
inc
xchg
dec
stos
rcr
fwait
adc
ss
push
enter
in
pushf
mov
das
mov
jmp
cwtl
sub
or
outsb
push
sub
push
add
lcall
cs
pop
jmp
fisubs
sub
mov
dec
inc
and
add
mov
clc
cmc
outsl
ss
test
pop
jl
pop
movsb
xchg
sbb
icebp
imul
or
fdivs
mov
arpl
cmp
sarl
outsl
outsb
xchg
nop
clc
jb
bound
outsl
mov
shr
outsb
add
test
rcll
inc
sub
sahf
ror
jmp
dec
inc
add
aad
xchg
out
dec
push
mov
add
and
jmp
push
jo
mov
idiv
aad
pushf
or
mov
pop
lock
adc
jmp
xor
add
jge
xchg
jnp
repnz
xor
aam
mov
push
sbbb
jnp
mov
lret
jge
call
dec
outsl
sbb
pop
xchg
cmpsl
test
sti
inc
inc
cmp
inc
push
inc
jmp
sti
icebp
sub
adc
movsb
sub
fdivs
xchg
sub
sub
sbb
mov
sti
jo
cmovs
scas
mov
mov
es
jo
mov
dec
xchg
ror
out
outsl
enter
add
jge
jge
inc
dec
or
mov
lahf
mov
flds
ret
jge
mov
mov
cmp
repz
mov
and
jb
or
dec
insb
mov
jge
or
jg
jns
sub
das
xchg
test
pop
sbb
mov
push
testl
adc
pop
cmp
jge
adcb
push
mov
xchg
add
repz
stos
or
jae
out
aad
int3
daa
push
mov
aaa
xchg
sbb
stos
fsubl
fs
out
pop
cmp
stc
ror
and
sub
xor
scas
jecxz
sub
mov
mov
jae
pop
pop
or
fisubl
addl
cmpsl
mov
xchg
nop
pop
and
pop
stc
movsl
push
sub
adc
popf
jg
dec
roll
cld
push
mov
pushf
clc
in
dec
push
inc
cltd
cwtl
pop
lods
daa
pop
xchg
pop
or
add
jge
jnp
dec
mov
adcb
divl
dec
loopne
cmp
mov
or
ficoml
jno
sub
xchg
add
xchg
sub
adc
add
gs
or
bound
mov
and
mov
in
xor
lock
xor
cmp
mov
adc
loopne
loopne
lock
lcall
mov
sub
sub
gs
add
movsb
inc
je
xor
or
pop
jae
mov
call
mov
insb
jle
sbb
push
insl
and
das
les
dec
or
mov
xchg
outsl
sub
fistpl
repnz
sarb
xor
fs
inc
fwait
and
les
sahf
xor
data16
cmp
add
pop
shlb
flds
mov
add
xchg
aaa
sub
ds
mov
and
aam
cmpsl
imul
and
pop
int
push
lahf
addr16
add
cltd
mov
fisubrs
out
xchg
push
dec
fldcw
jnp
dec
adc
outsl
cmc
xor
inc
daa
and
loopne
mov
push
rcr
sti
pop
cmp
notb
xlat
sarb
cmc
pushl
and
stos
sarl
inc
inc
sbb
sbb
cwtl
inc
pop
xorb
arpl
xchg
mov
outsl
stc
jmp
xchg
push
pop
iret
or
jp
das
and
mov
adc
jb
lahf
in
lds
pop
sub
pop
push
js
and
je
pop
add
imul
loope
aad
int
push
pop
and
mov
test
call
pusha
aaa
out
outsb
mov
mov
into
pushf
xchg
stos
vmread
push
lock
cmc
jae
or
pop
add
pop
mov
pop
adc
and
jae
cli
fistps
andl
pop
dec
std
jb
or
test
loop
in
popf
mov
enter
push
sub
cmpsb
pop
mov
jnp
popf
adcb
xor
scas
movzwl
js
dec
sbb
push
xor
cmp
out
jp
pop
and
js
xchg
hlt
popl
cmp
dec
or
es
push
aaa
dec
inc
ja
pop
fwait
jbe
scas
in
sub
or
jge
je
cmp
jne
adc
jecxz
dec
push
dec
push
pushf
cmc
ds
mov
jne
sbb
inc
jo
pop
xor
sti
jmp
mov
imul
in
in
inc
je
mov
mulb
rol
mov
pop
pop
pushl
pop
xchg
pushf
inc
pop
fs
fs
mov
or
loopne
sub
in
imul
mov
aaa
sub
dec
or
lea
js
repz
outsb
pop
sbb
xchg
mov
loope
fmull
aas
jge
fldt
xchg
mov
and
lds
xchg
ja
push
inc
fs
cmpsw
test
jmp
dec
loopne
cmpb
lods
mov
cmp
idivl
sub
or
push
pop
adc
push
data16
in
in
sub
xchg
jge
sub
mov
push
pop
sbb
push
push
jmp
jb
ror
mov
leave
cmp
lea
push
outsl
testl
fadd
fistps
mov
cmpsb
aad
lock
or
popf
jbe
or
sbb
mov
and
mov
dec
sbb
int
stos
mov
test
or
add
pop
aad
bound
xchg
and
adc
and
xlat
and
xlat
xchg
jae
mov
movsl
dec
dec
movsl
push
mov
pushf
push
jmp
dec
xchg
mov
mov
imul
add
push
icebp
repnz
inc
popf
aas
mov
scas
jecxz
stos
sbb
movsb
xchg
imul
test
jmp
mov
mov
mov
adc
jnp
test
aas
pop
sbb
bound
sbb
mov
repz
imul
nop
mov
pop
stos
and
adc
jg
mov
out
pusha
jp
sbb
jl
ret
in
adc
or
pop
subb
into
in
jb
or
inc
or
aas
mov
loop
push
dec
ret
out
mov
int3
out
sub
dec
sub
in
mov
mov
push
lahf
dec
add
rcll
stos
inc
fiaddl
loop
rcrl
jo
or
or
push
fcmovne
outsb
leave
lods
sahf
jmp
sbb
mov
mov
notl
lock
mov
outsl
inc
scas
cld
push
or
outsl
add
ljmp
push
repnz
inc
inc
cli
mov
int
mov
mov
jge
in
mov
jecxz
insl
movhps
fiadds
imul
into
iret
out
movsb
rcll
call
inc
cmpsl
pushf
mov
and
inc
adc
fstpl
push
enter
hlt
xor
sti
xor
data16
cltd
pusha
imul
ss
aad
stos
shrl
ret
sti
icebp
cmp
icebp
pop
push
jbe
test
sub
push
add
lret
scas
push
and
cld
mov
test
dec
jecxz
push
loopne
or
sub
test
xlat
jge
dec
jg
sub
mov
or
mov
and
pusha
and
jl
mov
sub
mov
je
call
xchg
push
loopne
loopw
jle
lods
pusha
xchg
loop
fsub
mov
dec
cmp
pop
ret
sti
pop
cmp
test
loope
jge
jbe
push
int3
push
out
jns
push
shlb
add
imul
inc
push
and
mov
xchg
xorl
mov
scas
cs
fldenv
mov
rcll
add
jbe
fsts
dec
push
inc
jmp
mov
jp
mov
iret
fwait
dec
insl
dec
movl
adc
dec
loopne
dec
mov
ljmp
mov
and
jnp
out
jae
rcrb
in
dec
mov
adc
dec
mov
inc
add
jle
ds
les
je
imul
add
loop
pop
xchg
jne
and
leave
push
jp
int
jmp
ljmp
stc
add
sub
or
and
mov
mov
xchg
outsb
add
movl
mov
lock
ret
add
sub
add
insb
add
add
movsb
jmp
lods
push
insb
out
sub
sti
lods
test
push
adcl
lods
jo
mov
js
rcl
jge
mov
adc
pusha
les
les
pop
fnstenv
cmpsb
ljmp
cmp
and
push
xchg
leave
jecxz
aas
js
or
fxch
jnp
mov
xchg
xchg
loop
mov
and
mov
jle
js
pusha
repnz
imul
call
adc
or
mov
sub
stos
sahf
scas
mov
sub
xchg
xchg
adc
xchg
imul
jns
and
daa
dec
pop
data16
push
popf
es
sbb
xor
xchg
push
and
mov
les
pop
lret
subb
rorl
and
cmp
clc
cwtl
out
sbb
addr16
cld
jmp
mov
dec
push
jbe
insl
insb
mov
les
push
dec
and
aad
mov
sahf
cmpsl
icebp
sub
push
add
test
aaa
mov
insb
ret
sti
push
inc
clc
xchg
mov
lods
lret
jae
pop
mov
sbb
push
fisubrs
dec
outsb
test
test
push
push
xor
and
mov
nop
and
ret
fidivl
aad
push
cmpsl
scas
mov
push
test
lcall
fdivr
mov
popa
inc
sbb
pushf
clc
dec
rcrl
lds
cmp
adc
in
mov
cmp
jl
ja
jnp
mov
jae
in
add
es
gs
push
jg
movsl
adc
mov
push
pop
sahf
out
in
pop
pop
jge
mov
stc
sub
shll
out
leave
fistps
insl
scas
xor
cmp
cmpsl
ljmp
call
pop
push
lea
cmp
or
cmpsb
pop
dec
dec
jo
add
cmc
or
jg
ja
sbb
addr16
mov
ds
shrb
cltd
aam
loopne
sbb
lcall
adc
xorb
scas
sti
pop
jae
xchg
xchg
pop
ds
insb
push
movsl
dec
cmp
adc
pusha
call
stos
fnstenv
jmp
add
rcl
adc
lret
jae
pop
sbb
test
fcompl
std
pushf
in
fwait
sub
leave
mov
xor
ret
ss
je
xchg
cmp
popf
pop
sbb
sbb
xchg
ja
add
leave
adc
lahf
ss
stos
jp
mov
push
adc
je
imul
and
ret
repnz
negl
xor
stos
mov
push
vmovaps
jnp
inc
or
push
or
xchg
add
dec
cmp
lret
xor
fdivs
insl
adc
fwait
adc
arpl
cmp
sub
and
xor
test
pop
hlt
mov
into
sbb
sbbl
int3
lods
push
cmp
jge
mov
ljmp
push
ret
dec
dec
mov
or
fcomip
mov
mov
push
hlt
adc
jmp
pop
imul
or
icebp
jl
mov
js
push
incl
call
icebp
jne
dec
sahf
lock
cmp
lea
jmp
pop
push
pop
lock
mov
andl
xor
add
inc
psubusb
ds
mov
mov
push
movzwl
cltd
fisubs
jbe
inc
mov
fisttpl
xor
into
popa
in
jg
int3
lahf
jns
std
es
out
out
in
adc
inc
xor
add
pop
cmp
or
mov
xchg
dec
dec
fidivs
das
dec
jne
xchg
mov
mov
sub
pop
ljmp
jmp
inc
int
fdivrl
pushf
sar
popa
cmpsl
aas
cmp
pop
or
fs
out
lcall
xchg
mov
int3
test
aam
ret
jecxz
inc
xchg
mov
sti
out
push
or
mov
out
jl
rorl
das
sbb
mov
sub
ljmp
rol
es
or
rcll
aam
xchg
fbld
inc
mov
test
lods
popa
testl
xor
out
push
inc
mov
mov
std
xlat
insl
xor
push
adc
dec
rolb
xor
daa
inc
dec
testb
sub
add
mov
dec
cmpsb
repnz
push
lods
orb
int
push
push
repnz
or
pop
pop
ret
je
leave
inc
sti
jb
cmp
mov
xchg
mov
stc
mov
mov
jbe
sub
ljmp
or
aas
pop
rolb
fdivrl
cwtl
mov
inc
push
sahf
fistpll
fldenv
mov
and
push
mov
mov
cmp
add
inc
ja
fiaddl
cmc
lahf
mov
mov
xor
nop
sbb
push
sar
sbb
xchg
lods
cmp
mov
mov
mov
test
out
jecxz
cmc
jae
cmc
insb
es
xchg
push
xor
jbe
sub
dec
mov
lods
mov
lret
push
cltd
les
stc
and
pushl
arpl
in
pminsw
or
subb
ret
leave
in
rcll
dec
lods
cs
fistpl
ret
xchg
adc
repnz
and
mov
and
xchg
sub
repz
inc
lods
vpmaddwd
pop
xor
decl
mov
xchg
inc
imul
ja
and
lahf
cmpl
sub
mov
adc
cmpl
fistl
push
leave
scas
dec
movsl
ljmp
jb
push
aad
cli
push
daa
inc
jne
xchg
mov
fs
xor
add
cmp
xchg
jl
sbb
in
mov
and
cmc
dec
sbbl
ret
add
mov
pusha
fmulp
inc
sub
sub
gs
or
daa
mov
pop
mov
adc
pop
pop
out
adc
int
xchg
insl
mov
cs
pop
fidivl
lret
jnp
lahf
jns
mov
stos
push
adc
mov
fcmovb
aam
xchg
xchg
jp
in
push
inc
popf
mov
movsb
jo
cmp
enter
mov
daa
addr16
rcrl
and
mov
push
ja
jns
cltd
jno
pusha
call
or
test
sbb
mov
xchg
sbb
xchg
mulb
fs
cli
ret
fs
push
mov
sub
loopne
xor
pop
push
inc
bound
mov
dec
mov
sbb
sbb
adc
pop
xchg
lahf
add
jecxz
loop
xchg
in
jl
ss
jp
call
movsb
out
jo
mov
movsb
sbb
mov
and
arpl
xor
mov
add
cmp
sbbl
lea
and
jne
out
mov
fsts
xchg
je
adc
leave
jle
leave
and
mov
ss
adc
jb
movsl
xor
adc
push
inc
out
scas
loope
pop
pop
jg
sub
adc
repnz
xchg
fidivrl
out
lahf
lahf
loopne
ror
pushf
std
les
stos
or
movsb
mov
in
addr16
scas
lahf
out
xor
mov
lcall
scas
mov
hlt
outsl
arpl
mov
adc
in
in
sbb
int
ss
movl
je
cmp
dec
outsl
icebp
push
cmc
xor
push
pop
sub
in
jae
mov
mov
jmp
test
in
in
pusha
les
enter
scas
rcrb
aam
pop
adc
scas
add
xchg
add
stos
out
daa
or
clc
fimull
xchg
jae
mov
mov
ret
stos
leave
into
adc
aas
lretw
jle
mov
sub
jnp
push
leave
mov
jae
xchg
push
pop
and
mov
data16
sbb
fimuls
cmpsl
jmp
mov
dec
jmp
add
pop
mov
jmp
lods
bound
push
cwtl
jl
lahf
int
addl
xchg
add
push
popa
out
or
dec
mov
fdivr
xchg
mov
mov
pop
cmp
mov
nop
xchg
insb
mov
xchg
jbe
test
mov
dec
or
xor
pop
inc
insb
loop
stos
lds
ja
mov
push
add
dec
inc
and
inc
jmp
repz
or
div
fcomps
push
inc
cmp
popa
pop
xor
mov
push
mov
add
es
jmp
pop
inc
jb
cmpsb
lds
mov
ds
push
inc
ljmp
xlat
std
sub
adc
loop
sub
repz
push
arpl
fsubrs
movsl
push
pop
push
add
push
dec
stos
sbb
pop
mov
jns
add
push
cmc
cmpsb
xchg
push
mov
push
fimuls
xchg
xchg
test
push
xchg
mov
lret
dec
cmpsb
sub
lock
gs
aam
negb
in
dec
push
ljmp
call
add
les
add
pop
mov
cmp
lcall
add
cmpsb
jb
xor
ret
fucomip
hlt
into
mov
shlb
cmp
adc
and
and
sahf
popa
xor
inc
clc
sub
imul
js
dec
jle
lahf
movsl
sub
lds
lods
test
jecxz
lcall
or
faddp
imul
jae
or
sahf
mov
pusha
jecxz
push
cmp
in
ljmp
aam
insl
adc
push
repz
pop
cmc
sar
sub
ret
popa
repz
inc
mov
jecxz
mov
xor
iret
add
aas
ret
or
mov
jbe
dec
or
or
lods
cli
cmp
dec
negl
push
in
mov
fcmovnb
push
sub
shl
push
arpl
cmp
xchg
jge
pop
and
int3
adc
pop
add
je
subb
inc
xor
mov
and
lods
sahf
mov
mov
jnp
clc
in
pop
fwait
pop
jns
filds
mov
cmp
jno
dec
mov
jo
mov
mov
add
lds
mov
push
xchg
test
ret
pop
ss
cltd
je
pop
movntq
pop
nop
test
pop
inc
dec
sbb
sti
mov
fstpt
repz
fistps
sub
enter
pop
js
jecxz
fidivl
cmp
test
stc
xchg
dec
lret
jge
cmp
repz
out
fwait
xlat
mov
shlb
add
dec
in
mov
stos
add
fmul
push
mov
push
mov
or
ficoms
mov
xchg
jae
cmpb
pop
addr16
stc
or
mov
and
mov
push
insl
mov
orl
cmp
push
xchg
xlat
xchg
sbb
imul
mov
out
js
leave
push
adc
loop
iret
leave
jb
pop
jg
insb
fisubrs
sub
xorb
lods
mov
and
cld
fadd
icebp
call
sbb
in
sub
psubsw
sbb
movsl
sbb
ss
sub
adc
mov
rorl
in
xor
lods
in
add
hlt
jae
adc
mov
ror
mov
xor
sbb
fbld
pop
inc
shl
xlat
cltd
enter
sbb
xchg
mov
cmp
dec
jne
out
cld
xor
jmp
mov
jns
or
mov
movsb
ret
es
sub
xchg
dec
test
xchg
push
mov
push
dec
push
xchg
push
ret
cmp
pop
std
dec
stos
adc
mov
aad
incl
dec
enter
cmp
fs
testb
cmp
lahf
push
ret
push
adc
loopew
loope
xor
or
xchg
xor
pop
xlat
mov
fs
fadd
and
add
fisubrs
cmp
jno
inc
fsubrl
lahf
xchg
out
jge
orl
cltd
mov
mov
sub
test
pop
xor
cli
gs
ret
add
sbb
daa
repz
mov
mov
pop
mov
pop
sub
imul
loop
dec
mov
dec
xor
bound
test
aas
repz
or
sub
jecxz
ja
jae
insb
xchg
and
ror
stos
xchg
xchg
adc
or
jne
ds
inc
jl
xchg
aas
xchg
fstpl
popa
pop
jg
jne
imull
cmpsb
aas
icebp
push
cmp
cmp
and
pop
sbbb
data16
add
and
inc
and
jnp
pop
aas
int
inc
rclb
inc
cld
jge
jge
insb
dec
stos
xor
xchg
data16
sbb
push
in
cli
aam
sub
push
sbb
push
icebp
adc
clc
dec
mov
lock
fistps
stc
adc
add
pop
ja
xchg
sbb
cs
xlat
hlt
jmp
imul
call
and
mov
hlt
iret
mov
fcoms
lods
bound
jg
mov
lock
push
ja
jo
sub
shlb
pushf
sbb
push
stos
mov
adc
sbb
mov
jns
mov
xor
test
push
repnz
jl
lock
pop
and
in
xor
and
mov
cmp
das
ret
aam
in
enter
jae
xorl
iret
shrl
and
push
push
jns
in
sbb
pop
pusha
cmp
bound
pop
xchg
fwait
sahf
lcall
scas
in
push
push
cmpl
jge
cmpsb
into
xchg
movsb
cmpsb
mov
cmp
xchg
fwait
xchg
pop
in
xor
idiv
fdivrl
inc
mov
mov
pop
bound
aas
loop
in
roll
sbb
gs
jg
movsl
mov
sub
arpl
mov
faddl
in
repz
enter
mov
dec
data16
pop
jne
cmp
int3
bound
rcl
cmp
jge
add
mov
adc
mov
xor
sub
xchg
stos
add
jne
je
inc
cmp
ljmp
loope
xchg
fidivs
mov
icebp
hlt
adc
ljmp
out
testb
fisubs
push
lahf
into
je
add
ds
movsl
add
fs
mov
jl
gs
inc
add
mov
cltd
leave
enter
sub
push
and
scas
cs
fcomps
es
out
sub
adc
jno
enter
fstpl
jp
and
jbe
sahf
ret
imul
hlt
mov
lahf
pop
mov
in
sahf
sub
aas
xor
cmpsl
aad
dec
out
imul
dec
in
mov
int
add
cmp
jnp
sbb
pop
push
test
sti
iret
in
or
xchg
addr16
pop
adc
loopne
das
pop
inc
and
loop
push
ret
iret
mov
cmp
inc
imul
xorl
inc
dec
incb
repz
or
and
jne
push
fsts
pop
push
pushf
addr16
les
fisubrs
aam
in
pushf
xor
int3
loop
inc
ret
dec
jg,pn
jp
das
pop
sub
add
or
adc
adc
and
stos
into
mov
jnp
jne
inc
stc
sbb
cmp
out
fsubs
iret
in
mov
daa
sbb
mov
rorb
cwtl
fcomps
sbb
xor
jo
pop
daa
dec
and
mov
sub
fs
inc
pop
pop
scas
inc
jg
ja
mov
aas
mov
loopne
andb
mov
test
xor
xchg
inc
push
sahf
ret
lds
dec
adc
cmp
movsb
xlat
mov
xchg
mov
dec
cmp
insl
hlt
fcmove
xchg
xor
insb
sbb
lret
icebp
repnz
pop
clc
and
orb
js
adc
adc
inc
adc
mov
ror
int3
in
inc
push
dec
push
lods
dec
lcall
testb
xchg
xchg
jnp
out
cmp
jb
out
in
loope
mov
test
scas
sbb
xchg
sbb
xor
xchg
pop
in
lods
sub
mov
subl
cltd
mov
jnp
pushf
sub
pop
add
push
movsb
cmp
and
add
jnp
pop
xchg
sub
mov
loope
cmp
jmp
loope
out
xor
das
into
inc
jae
lods
aad
outsl
and
subb
mov
mov
dec
pop
jnp
popa
pop
push
sbbl
inc
mov
cltd
rorl
inc
cwtl
std
mov
sarb
cwtl
clc
ficoms
jnp
fadds
lods
mov
out
push
add
std
xchg
ffreep
mov
pop
xor
jge
jmp
je
pop
mov
repz
dec
in
ljmp
dec
push
jno
rolb
xchg
jge
sub
mov
popf
repnz
or
jns
jbe
and
inc
sbb
or
or
push
pop
jl
sub
xor
shll
sbb
sub
js,pt
stos
icebp
mov
test
xchg
push
imul
add
xchg
je
pop
jge
pop
jp
popa
adc
jb
fsubs
adc
xchg
sbb
push
test
call
push
cmpsl
add
sub
pushf
jb,pt
callw
pop
push
push
hlt
pop
add
sarb
mov
popf
outsb
imul
in
push
jl
and
gs
xchg
sbb
jle
cs
cwtl
pop
fcmove
mov
pusha
jne
cmpl
or
inc
push
cmp
push
push
movl
je
and
je
cmp
jg
lea
sub
adc
in
push
mov
pop
loop
push
pmuludq
jmp
push
jae
mov
jae
cmovae
loop
jnp
xchg
repz
int3
lcall
fwait
and
sahf
and
dec
cwtl
idivb
jno
xchg
mov
cmp
xchg
push
pop
mov
arpl
fstpl
cmpl
push
or
cli
fnstcw
cmp
loop
mov
pop
inc
sbb
sub
dec
add
add
and
enter
adc
xchg
mov
xlat
dec
imul
cmp
lret
sub
jae
pop
insb
dec
push
jmp
cmp
xor
jns
xor
lret
xor
shlb
or
mov
push
imul
or
aas
lods
arpl
jbe
mov
sarb
add
xchg
push
or
pushf
push
insb
sbb
sub
lahf
push
jle
mov
sti
movsl
push
lahf
pop
pop
outsl
test
mov
add
adc
and
push
mov
pop
arpl
lret
sbb
outsb
cmc
xor
insb
xchg
dec
adc
nop
shrb
adc
fucom
xchg
xchg
pop
sub
popf
pop
xchg
xor
push
stos
aaa
fisttpll
sbb
push
add
mov
pop
push
shll
fwait
jo
int3
outsl
and
and
cmp
jbe
aad
and
inc
lahf
loopne
in
mov
lret
ret
int
mov
fcomp
jmp
jp
cltd
or
and
mov
xor
imul
lret
dec
mov
xor
hlt
push
cld
mov
dec
arpl
jae
fwait
jo
xchg
mov
mov
orl
mov
pop
sti
xor
or
push
movsl
pop
xor
or
cwtl
xchg
pop
mov
and
pop
repnz
scas
sub
mov
movsb
sub
adcl
jle
or
mov
je
jno
cltd
mov
and
stos
add
add
and
addb
jno
push
dec
sbb
loop
xchg
insl
or
cmpl
push
mov
in
push
mov
pop
jae
das
add
je
mov
pop
lds
xchg
ret
cmp
or
or
repnz
ret
mov
jl
add
cmpsl
pop
lods
cmp
or
or
outsl
fstl
add
xchg
arpl
pop
inc
cmp
andl
mov
sbb
call
ljmp
lods
enter
lret
in
xchg
in
cmp
cmpl
cmp
gs
cmp
mov
mov
mov
jno
inc
sbb
inc
jp
out
push
arpl
jbe
inc
cmc
cs
and
fidivl
pop
out
mov
xchg
adc
mov
pop
push
mov
sbb
cmp
push
pop
inc
inc
pop
adc
jg
mov
fstpt
mov
lock
pop
clc
push
mov
lds
fmulp
sbb
mov
jae
push
xlat
and
insl
inc
imul
aas
repz
push
pop
jns
cltd
das
loope
adc
xchg
addr16
jecxz
out
ljmp
mov
jo
push
pop
cwtl
pop
dec
repnz
or
jnp
fnstcw
daa
or
fwait
adc
icebp
and
movsb
and
xchg
loopne
js
fsubs
aas
xor
push
pop
fdivrs
scas
js
pop
cmp
xchg
mov
push
loope
jge
inc
aas
cmc
jge
es
lcall
lods
jns
adc
adc
and
inc
mov
mov
pop
adc
out
or
cltd
xor
pop
iret
lahf
std
fnstsw
mov
sub
test
and
xor
push
stos
xchg
addr16
outsl
cmc
cmpsb
scas
or
xchg
push
sbb
pushf
pop
movsl
adc
lahf
int
outsl
jmp
dec
add
and
adc
mov
ljmp
adc
jae
lock
and
outsl
mov
xchg
outsl
inc
cmp
dec
and
std
mov
cmovne
cli
lret
loopne
leave
push
xchg
xor
sub
lods
push
aaa
repnz
loop
cmpsl
lods
iret
loope
mov
sbb
cmp
les
icebp
mov
imul
pusha
leave
and
dec
cmc
pop
inc
enter
jne
in
lahf
and
pop
add
xchg
inc
inc
cmc
add
int3
popf
xor
repz
aaa
sbb
je
or
ret
push
jmp
mov
mov
out
div
faddp
sahf
pop
gs
notb
mov
add
push
out
negb
push
inc
xchg
mov
jnp
ds
js
shlb
dec
jmp
xchg
insb
fimull
fnstsw
loope
pushf
dec
insl
add
and
pop
bound
pop
inc
adc
shlb
mov
pop
iret
sti
jge
lcall
ja
or
lods
pop
dec
cmc
and
push
rorl
mov
in
outsl
daa
sbb
je,pt
cmp
xchg
pop
hlt
lcall
das
xchg
mov
mov
lcall
pop
and
mov
js
pop
jbe
ds
mov
dec
inc
sub
and
cmpsb
nop
rcrb
lret
loopne
inc
aam
out
xchg
cwtl
inc
dec
mov
jno
or
aaa
out
xlat
xchg
sub
addr16
xchg
andl
sbb
xor
xchg
xchg
mov
inc
lahf
push
sub
mov
fsubp
cmpsl
jns
inc
cmp
adc
inc
dec
ljmp
ljmp
cmc
cs
inc
sar
daa
or
jg
jle
dec
dec
test
mov
fildll
scas
adc
xor
xchg
dec
sti
repnz
std
stos
in
ljmp
loop
aas
jb
int3
mov
outsb
aam
movsl
push
push
dec
pop
or
add
and
push
int
jns
mov
push
mov
mov
pop
sarl
out
lret
sbb
cmp
push
push
rol
fcmovnu
adc
pushf
push
jle
jns
add
dec
testl
push
pop
testl
and
and
add
dec
enter
jecxz
lret
inc
sub
sub
leave
jmp
scas
sbb
cmp
dec
and
push
sbb
int
xor
stc
mov
adc
mov
xchg
sub
jnp
orl
fs
sar
fstpl
xor
or
mov
adc
xchg
push
dec
or
jns
loopne
repz
cmp
inc
cmp
jne
lods
cs
push
xchg
sbb
mov
inc
call
fwait
or
adc
inc
mov
pop
gs
adc
hlt
dec
inc
mov
out
and
addr16
dec
adcl
pop
xchg
cmpsl
jne
or
loop
mov
cmpsb
sub
cmc
divl
push
hlt
sub
push
mov
clc
mov
out
lahf
outsl
dec
filds
mov
mov
xchg
adc
or
xchg
test
inc
insb
imul
jg
fiaddl
or
das
test
shll
push
mov
frstor
jae
pop
call
sbb
jg
cs
sub
das
inc
cmp
outsl
cli
inc
imul
sbb
pop
xchg
aaa
xchg
roll
mov
pop
jmp
pop
int
imul
xchg
cltd
cmpb
repz
std
cwtl
decb
push
inc
dec
or
jbe
or
or
jbe
xchg
or
dec
push
incb
fisubl
mov
idivb
adc
roll
movsb
shrl
imulb
cmpsb
dec
dec
or
mov
gs
xorl
in
es
xchg
fildl
and
push
pop
sub
loopne
mov
ss
cmpsb
es
jl
or
cltd
mov
jge
mov
jp
sub
loopne,pt
popa
push
jp
imul
adc
push
inc
push
and
mov
dec
push
aas
movsl
sbb
sub
pop
call
stos
std
fwait
call
push
pop
sub
mov
dec
orb
ds
mov
inc
jmp
sub
and
pop
jnp
pop
lods
je
daa
clc
jb
add
scas
insb
mov
loop
cli
loop
dec
add
cmpl
jmp
test
lods
fstp
xor
xchg
sbb
jbe
xor
stc
ficoml
fimuls
mov
xchg
xchg
rcrl
dec
xchg
sbb
fdivs
fsubl
addr16
xchg
push
dec
scas
aas
fisttpl
out
call
mov
cli
movsb
sbb
hlt
jg
fs
sbb
int3
xchg
in
push
inc
mov
cwtl
cmp
daa
rclb
in
xchg
push
test
dec
ljmp
out
xchg
jecxz
stc
cli
cmp
mov
pop
imul
push
xchg
xor
pop
shl
sub
mov
mov
js
shlb
imul
sbb
lds
je
movsl
test
loopne
push
jns
mov
or
test
xor
loope
aas
or
xchg
loopne
mov
mov
jnp
arpl
jl
push
push
mov
call
int3
xchg
in
mov
inc
outsl
xchg
int3
pop
insl
fldl
or
jl
xor
fmul
fnstsw
mov
dec
icebp
cs
pop
out
icebp
mov
inc
mov
mov
fcompl
jbe
in
adc
dec
xchg
enter
and
enter
sub
ficoms
xchg
shlb
es
jle
cmp
sahf
je
cmpsb
push
popf
ror
xor
xchg
mov
inc
xchg
add
cmpsl
dec
mov
xchg
aaa
movsb
mov
adc
clc
push
orl
out
dec
gs
sbb
outsb
cltd
imul
adc
imul
jb
mov
push
jnp
sbb
mov
sbb
jbe
dec
stos
lds
ret
fildl
int3
inc
pop
daa
test
shl
lods
push
nop
fmuls
or
sbb
cwtl
adc
cmc
ljmp
daa
inc
out
sti
mov
test
test
dec
push
das
out
aaa
dec
fnstenv
push
inc
dec
lods
mov
adc
pop
lcall
cmp
pop
sbb
pop
cmpsb
fdiv
ret
cmp
push
aas
cli
mov
insb
js
and
xchg
out
cmp
call
scas
fcomps
mov
fsubs
sbb
movsl
or
adc
xchg
andb
clc
gs
mov
lock
xchg
out
dec
jnp
cmc
or
dec
or
jle
leave
xchg
jecxz
in
add
cmp
mov
in
and
cmp
xchg
jge
cmpsb
in
cmpb
lcall
lods
data16
cmpsb
sahf
mov
jp
or
pop
das
gs
jle
push
imul
mov
and
sbb
and
mov
pop
dec
sarl
popa
xor
loope
clc
lcall
adc
std
dec
loope
or
lret
jns
insl
mov
in
repz
ds
loopne
loope
pop
arpl
mov
sbb
pushf
mov
das
push
divb
add
xchg
movsb
xor
mov
adc
test
push
pop
cmc
lods
fsubs
push
cltd
push
incb
iret
mov
dec
push
incb
fdiv
cmp
pop
insb
daa
cmpl
pop
mov
cmpsl
push
push
enter
add
and
adc
or
xor
push
in
dec
fs
or
mov
mov
fwait
jecxz
pop
add
xchg
push
jno
cmp
shlb
jae
mov
aad
jecxz
jns
ss
xor
xchg
lds
out
icebp
pop
or
das
sbb
pop
adc
jle
inc
roll
iret
data16
out
ss
mov
and
mov
idivb
push
mov
in
shlb
dec
sbb
cmp
pushl
sbb
imul
lret
das
and
push
es
ja
js
or
dec
in
lahf
iret
and
adc
mov
cmc
mov
sub
and
popf
enter
and
gs
cmp
aas
mov
data16
sub
xchg
cwtl
lea
in
cmp
adc
push
and
mov
subb
xchg
bound
sub
xor
enter
bound
jns
popa
cmpsb
jecxz
ss
mov
push
gs
insl
mov
jbe
clc
jp
inc
popa
mov
adc
icebp
pusha
in
mov
xchg
dec
xchg
xlat
push
jno
negl
jge
lea
pop
and
clc
bound
xchg
sub
pop
mov
dec
loopne
cmp
inc
sbb
lret
std
and
xchg
dec
cwtl
jmp
bound
xor
lods
or
push
repnz
dec
popf
stos
push
pop
push
mov
xchg
fstps
rclb
xchg
adc
push
cmp
pop
pop
lahf
addl
mov
cld
xor
imul
stos
mov
mov
stos
adc
fidivs
sbb
and
dec
cmpsl
mov
mov
xor
mov
mov
sbbl
add
jge
and
movsb
cmc
xchg
adc
pop
test
sub
mov
xor
xchg
fsubrl
pop
faddl
bndstx
das
test
adc
dec
inc
psubusw
xrelease
scas
sub
push
and
popa
pop
rcll
cmp
mov
movsb
push
pop
std
into
push
pop
clc
cmpl
add
mov
inc
iret
xchg
jno
sbb
aam
push
ret
push
or
add
shl
jp
enter
and
in
es
in
jmp
or
pop
movsl
adc
pop
mov
push
cmp
inc
js
cmp
mov
cmp
dec
mov
cmp
jecxz
push
xor
xchg
pop
push
ds
in
int3
cld
popf
ds
dec
sbb
mov
xchg
into
scas
xor
pop
and
nop
iret
out
jne
cmp
xchg
sahf
cmpsb
pop
push
sub
and
inc
cmp
mov
adc
add
bound
xor
enter
push
xchg
jl
jl
ljmp
push
and
mov
jmp
cmpsb
push
adc
cli
aam
clc
mov
mov
push
enter
mov
aad
cmp
add
xor
or
sbbl
pop
fs
mov
mov
pop
xor
cmp
bound
sub
aas
pushf
mov
pop
js
pop
add
icebp
lods
arpl
mov
push
mov
inc
hlt
cmpb
push
pop
ja
je
push
int
and
inc
scas
iret
shll
test
arpl
adc
dec
xchg
insb
popf
dec
outsl
mov
and
inc
push
sbb
jmp
pop
mov
pop
or
aad
call
adc
lcall
inc
mov
cwtl
sbb
aas
mov
out
inc
fiaddl
fwait
mull
divb
pop
xchg
clc
push
dec
stc
push
popa
cltd
ret
out
aaa
test
inc
dec
aam
xlat
jp
pop
cmp
clc
pop
add
js
mov
repz
mov
jge
in
sbb
or
adc
push
jb
inc
sbb
sbb
adc
cmp
ret
dec
fimull
dec
std
and
and
mov
mov
rol
mov
sahf
data16
lea
pop
in
xor
mov
mov
fcoml
fsubs
xchg
cmpsl
xor
xchg
mov
sub
aas
add
xor
lcall
lcall
add
jmp
mov
roll
loopne
jmp
or
jge
flds
fwait
and
icebp
jno
cmpsl
push
rorl
jecxz
sbb
sahf
mov
push
shrl
cltd
addr16
cmp
cmp
pop
inc
scas
cmp
jle
rcrl
mov
or
ret
xchg
fs
das
ljmp
rcrb
ss
aas
lock
dec
sub
cmpsb
test
mov
sbb
or
push
cs
cwtl
je
add
add
lods
jmp
mov
and
in
mov
push
loop
dec
cmp
mov
stc
and
xchg
jge
fidivrs
out
jg
lods
jnp
inc
add
jmp
xchg
rcll
fldz
push
inc
mov
scas
mov
divl
and
jnp
lea
xchg
mov
iret
mull
les
add
mov
xor
subl
movsl
and
test
cld
rcll
cld
sbb
data16
push
adc
pop
test
ss
xor
mov
imul
lds
inc
insb
sbb
xchg
cmp
insl
stc
push
imul
sarb
cmp
sub
xor
sub
cmp
test
xchg
lret
mov
outsl
xchg
hlt
fcomip
pop
js
jle
or
and
mov
addl
arpl
mov
cmpsb
mov
shll
hlt
push
sbb
fwait
adc
aam
xor
inc
shlb
shrl
jo
sbb
inc
popf
sub
divb
sarb
loop
xor
test
stos
xchg
pop
fdivs
mov
jecxz
mov
mov
cmp
addr16
pop
dec
xchg
jae
cmp
fisttpl
pop
insl
or
loope
xchg
dec
push
loope
mov
sub
and
out
sub
pop
dec
mov
test
mov
lret
popa
enter
dec
imul
shl
outsl
insb
xor
pop
sub
sub
ret
cmc
es
sbb
ds
mov
enter
sbb
cs
mov
pop
into
and
jecxz
add
ret
and
scas
icebp
sbb
push
push
xchg
pusha
adc
test
ss
inc
xlat
stc
sbb
enter
sarb
nop
test
mov
sbb
popf
push
stos
jns
sub
cmc
pop
lods
insb
sub
push
pop
shr
mov
daa
movntq
sub
and
pop
push
sbb
ljmp
int
test
insl
aaa
xchg
cld
xor
pop
jp
inc
stos
sbb
pop
les
outsb
adc
xlat
mov
sbbl
cld
xor
sbb
int
xchg
sub
mov
push
roll
loopne
gs
push
mov
or
pop
out
inc
jge
test
mov
cli
stos
out
dec
in
cmp
mov
mov
scas
popf
mov
js
sti
add
enter
dec
mov
popa
xchg
jno
leave
in
pop
stos
daa
movsl
das
adc
mov
push
cltd
and
adc
sub
mov
stc
rolb
fucomi
fcompl
cltd
lock
adcb
push
mov
push
xorl
test
xabort
js
mov
cli
insb
jecxz
add
inc
dec
xchg
mov
rolb
imul
sbb
fiaddl
sub
mov
lret
ret
cltd
and
xor
in
cmp
xlat
add
dec
dec
and
xlat
sbb
loopne
pop
cs
cld
and
jns
ja
movsl
aaa
dec
or
add
push
ljmp
gs
or
jle
mov
mov
mov
inc
mov
sub
mov
mov
dec
mov
jbe
jge
iret
xor
mov
adcb
pop
orb
ret
pop
mov
shrl
test
xchg
pop
loop
insb
mov
and
rcll
mov
xor
mov
adc
cmp
lea
fdivs
dec
daa
lret
fildll
dec
ret
jmp
fisttpl
repz
inc
mov
adc
nop
push
pop
cltd
fcoml
fldcw
xor
cli
ret
xor
out
and
movsl
pop
inc
jno
jns
and
pushf
loope
es
cld
add
xlat
nop
jecxz
xor
dec
jne
in
inc
stos
fadd
mov
cmp
fidivl
arpl
mov
jecxz
and
inc
lds
jle
xchg
push
xchg
dec
daa
sbb
call
dec
sbb
push
mov
or
pop
push
or
hlt
jp
ss
dec
inc
inc
lret
jl
inc
and
clc
test
xchg
loopne
leave
out
dec
xchg
jle,pt
or
and
cmp
movsl
in
fs
push
stos
aas
pop
push
mov
xchg
xor
mov
mov
insl
fldenv
inc
dec
ss
jnp
pop
xor
mov
cld
adc
scas
into
ret
add
in
dec
jb
ja
or
call
das
inc
jge
lret
adc
sub
in
fisubs
xor
push
pop
fldt
xchg
sarl
bound
xchg
push
fiadds
xor
xchg
jne
cmp
sbb
scas
shl
stos
push
call
sub
mov
mov
mov
popa
sbb
fcoml
pop
roll
les
or
addr16
icebp
and
aam
rolb
pop
pop
jnp
push
pop
jge
pusha
leave
fldenv
or
push
fstpt
mov
push
jns
xchg
push
addb
xor
ja
or
loope
xchg
ret
into
das
mov
mov
sbb
or
mov
dec
and
in
subl
and
dec
test
push
andb
sarl
dec
mov
out
insb
pop
jnp
and
iret
mov
adc
sbb
mov
push
pop
dec
shll
dec
adc
data16
jle
inc
in
movsl
push
stos
sub
mov
stos
mov
mov
es
inc
add
lea
push
dec
out
in
lods
mov
pop
mov
mov
je
and
sub
xchg
fadd
and
insb
jae
mov
sub
sbb
lret
fldt
jecxz
outsb
add
add
xchg
fcoml
cwtl
mov
xor
push
iret
shlb
enter
mov
xchg
in
mov
xor
cmc
dec
push
enter
cmpsb
fcoms
das
rorl
xor
lods
mov
gs
mov
sbb
push
mov
rclb
hlt
stos
mov
popf
test
mov
cmp
xchg
pushf
pop
call
cmp
sub
cmpsl
gs
lods
inc
push
gs
add
xchg
rorb
notb
bound
cmp
push
add
imul
outsl
cli
ljmp
pop
in
data16
pop
or
loopne
push
mov
inc
insl
pop
aas
and
xchg
dec
mov
sub
shrb
shrl
pop
inc
imul
js
mov
daa
push
mov
push
pop
mov
pop
sbb
sub
sbb
add
addr16
inc
out
lock
outsb
rolb
or
add
ret
in
push
pop
mov
outsl
insl
fisttps
xor
xchg
inc
bound
mov
cwtl
in
push
cmp
xlat
jge
xor
movntq
out
xchg
push
add
push
loop
insb
mov
push
jecxz
movsl
jmp
mov
repnz
dec
int3
test
cmp
cmp
sbbb
dec
lcall
mov
cmpsb
or
arpl
push
xor
daa
imul
inc
mov
daa
stos
out
imul
push
mov
or
cmpl
or
cmp
sbb
rclb
iret
pop
xor
mov
and
and
pop
ror
dec
or
mov
jne
lret
test
mov
add
movsl
ret
mov
scas
mov
xchg
or
xchg
pop
cwtl
cmc
inc
cmp
shll
sbb
dec
mov
test
or
cs
push
movsb
mov
mov
or
mov
xlat
stos
mov
dec
jno
lods
std
lahf
incb
pop
xchg
add
add
rclb
mov
in
xchg
js
lcall
in
or
cmc
aaa
pop
xor
mov
int
orb
aaa
sub
fisttpll
aam
dec
push
stc
inc
inc
cmp
xor
xor
clc
into
push
out
ret
mov
ljmp
into
je
push
mov
jle
ds
jno
cli
add
adc
inc
repnz
jg
mov
test
pop
xchg
ret
hlt
xchg
sarb
addb
adc
flds
imul
dec
movsb
ret
fildll
mov
dec
cli
pop
orb
outsl
aad
push
in
and
call
mov
lea
test
fnsave
leave
push
mov
data16
mov
mov
lock
in
loop
fcompl
sbb
xchg
hlt
hlt
mov
dec
gs
xor
mov
sbb
pop
mov
and
jl
cmp
jg
shl
test
rcll
imul
dec
aas
lret
in
movsl
cmp
repnz
mov
aas
in
pop
xchg
cld
xor
cmp
fwait
jp
out
xor
cmpsl
cltd
mov
pop
cmp
aad
jmp
adc
js
mov
mov
insb
out
push
add
fdivrs
pop
or
enter
mov
loop
dec
push
jno
or
push
addr16
adc
push
mov
out
setp
push
xchg
or
cwtl
or
mov
mov
jo
loopne
outsb
pop
and
xor
out
dec
mov
aaa
mov
insb
pop
adc
cld
sub
xchg
jecxz
adc
scas
fwait
add
adc
pusha
shll
cwtl
sub
add
add
mov
pop
shrb
adc
jb
icebp
push
ljmp
pop
jmp
mov
leave
or
cmp
sahf
mov
jno
not
icebp
outsl
cs
pop
mov
xlat
add
dec
xor
int
imul
jle
dec
lahf
add
fdivrp
stos
popl
push
neg
dec
aas
xchg
fcomip
jp
imul
and
cmc
jne
data16
in
cld
xlat
nop
es
xchg
divl
mov
push
adcl
les
pop
dec
shl
aam
pop
lret
xchg
cmpsl
stos
xor
test
push
pop
push
jns
pop
ljmp
jo
cmp
in
and
fstpl
ret
xchg
pusha
dec
mov
jmp
push
out
rol
or
xor
ds
cmpsl
add
xchg
bound
jge
mov
negl
jae
mov
xor
or
add
mov
ss
or
xor
mov
adc
in
jl
sub
push
dec
outsl
jle
lods
inc
movsl
shrb
mov
add
dec
ss
les
jbe
mov
add
imul
inc
pop
ljmp
addr16
pop
ss
mov
mov
and
adc
je
mov
insb
sub
dec
dec
push
pop
push
inc
sbb
clc
inc
and
repz
data16
sbbl
jns
int
xchg
sbb
rcrl
push
cmp
push
daa
inc
scas
je
outsb
pop
and
adc
cmova
nop
dec
repz
adc
pop
inc
jne
dec
cs
cwtl
std
loopne
imul
push
test
sub
test
dec
cmpsb
movsb
mov
xor
test
adc
repnz
pop
nop
lret
cli
cmp
imul
xchg
hlt
andl
negb
xor
jge
jg
push
daa
cmp
arpl
mov
dec
mov
cmp
mov
lods
xchg
std
cmp
pop
scas
xor
jp
ljmp
add
pop
ds
movsb
pop
cmc
push
int
loope
mov
lret
fisubrs
data16
sahf
jb
push
and
dec
pop
fimull
mov
les
jne
repnz
mov
das
mov
sbb
fwait
xor
stos
and
jecxz
shlb
xchg
pop
push
jle
test
inc
lods
subl
test
pop
ficoml
jae
lret
jmp
outsl
mov
stos
fstpt
cs
push
dec
inc
cmpsl
xchg
sbbl
mov
or
repnz
popf
frstor
mov
ljmp
or
mov
push
mov
sbb
sbb
jno
js
mov
gs
push
jge
mov
jle
mov
js
jae
jb
jbe
clc
shr
xchg
xor
mov
mov
sbb
pop
jno
pusha
sti
xchg
and
xchg
jb
fsubl
into
xor
adc
pmaxub
mov
gs
in
mov
fidivrs
or
xor
cs
adc
out
xchg
pop
xor
and
xchg
mov
mov
jbe
push
mov
mov
lds
dec
imul
mov
aaa
ja
outsl
insb
mov
pushf
out
sub
sub
cli
dec
push
sub
mov
sbb
push
mov
add
insb
push
movsl
in
add
sub
jg
or
mov
call
shll
mov
ds
xchg
aas
and
mov
adc
aam
mov
xchg
fsubr
pop
into
lahf
xor
out
jbe
xchg
incl
movaps
adc
lret
subl
gs
jb
and
lcall
imul
cmp
mov
cmp
test
mov
xchg
sub
sbb
inc
bound
fisubs
or
lods
pushf
jle
jbe
aad
mov
int3
pop
sbb
jno
arpl
in
ljmp
cld
icebp
xor
dec
fildl
pop
push
jae
arpl
fnstenv
mov
fistl
loop
jmp
stc
dec
pushf
fldcw
cmpsl
push
out
insb
popa
mov
fnstcw
sub
lea
sahf
ror
shll
insl
push
dec
in
into
cmpsl
imul
sarl
movsb
ja
mov
gs
subl
adc
daa
inc
into
push
scas
in
hlt
mov
inc
pop
pop
jge
jle
jp
inc
and
call
sub
test
movsb
jmp
ljmp
test
inc
mov
sub
lods
mov
push
or
inc
in
xchg
in
repnz
fcomi
js
sub
fs
jmp
leave
dec
ss
gs
mov
lea
jnp
xchg
addl
pop
arpl
je
aas
dec
outsl
aas
sbb
dec
out
or
test
int3
pop
or
test
movsl
lds
inc
sbb
addb
xchg
addr16
ret
jb
div
out
sub
mov
test
or
jecxz
sub
fldt
repz
aad
ficoms
xchg
push
stc
in
notl
std
shll
enter
in
cmp
shl
mov
xchg
jb
stc
mov
xor
and
pop
fldcw
mov
mov
sub
test
loope
push
std
push
push
lret
fimuls
pop
stos
fcos
push
call
adc
test
mov
inc
xor
mov
jb
stos
test
or
inc
sub
icebp
test
das
push
shrl
pop
mov
sub
ret
imul
jecxz
or
ja
push
cmp
push
ljmp
inc
les
dec
mov
push
sub
adc
leave
in
xlat
ret
adc
dec
test
arpl
fildll
outsb
dec
xchg
hlt
mov
sub
pop
mov
jae
dec
jl
outsb
jno
mov
jmp
fdivrp
aam
push
cmpsb
cwtl
jbe
push
into
or
rcrl
outsb
or
mov
xchg
push
jo
push
mov
popf
ss
and
sub
addr16
mov
outsl
movsl
out
loope
ja
pop
daa
hlt
mov
fsts
pop
js
mov
nop
das
in
or
sbb
fbld
lret
dec
push
adc
inc
cmp
or
xchg
mov
cmp
popa
inc
fdivl
xchg
je
add
xor
int3
sbbb
mov
xchg
subb
aaa
test
insl
add
in
or
dec
fmull
dec
iret
xchg
mov
fnsave
push
sbb
outsl
cmp
mov
orl
cmp
call
dec
hlt
push
sub
push
and
inc
fstps
pop
stos
call
or
mov
inc
bound
xchg
add
or
rorl
add
ds
cmp
inc
ret
xor
cld
loop
pop
in
jo
stc
or
repz
mov
dec
cmp
adc
sti
rcrl
js
cli
inc
add
xor
mov
mov
mov
popa
cltd
push
lret
sbb
into
subl
popl
ret
ret
pop
and
loopne
aam
mov
outsl
dec
bound
mov
scas
pop
ljmp
push
loop
addr16
fcmove
jg
mov
mov
out
fdivs
daa
xor
sbb
and
ret
dec
ret
pop
xchg
leave
sarl
cmpb
std
and
xor
mov
and
cmp
jbe
sub
cli
mov
call
xor
dec
das
jae
fnsave
pop
mov
dec
cwtl
stos
cmp
mov
or
dec
dec
dec
jno
sbb
inc
lock
ret
mov
mov
xor
mov
test
dec
sbb
pop
lret
push
repz
adc
push
out
xchg
mov
vsqrtpd
pushf
mov
push
in
stos
mov
and
xor
and
stos
adc
pop
mov
sub
scas
pop
cmpsl
int
add
adc
sbb
out
mov
cmp
mov
fimuls
mov
mov
sub
insl
js
in
pop
push
inc
cmp
sub
testl
mov
cltd
xchg
mov
pop
cmp
adc
push
repnz
scas
and
aad
mov
dec
mov
mov
mov
mov
jnp
icebp
pushf
insb
shld
adcb
pop
int3
mov
mov
cmp
jg
xchg
cltd
push
test
mov
test
lcall
imul
lods
iret
bound
imulb
in
jae
lods
stos
sar
sbb
sub
sub
testl
ja
es
jne
ljmp
push
orb
aas
push
and
bound
int3
cltd
in
pop
add
sbb
lcall
stc
jbe
mov
mov
repz
clc
mov
cmp
and
xor
add
subl
fdivs
dec
jmp
xor
hlt
movsb
ds
push
adc
xor
xchg
scas
jns
movl
imul
push
sub
inc
fldt
daa
add
xor
lods
ret
test
in
push
xchg
jne
arpl
out
cmp
xchg
mov
lret
stc
clc
inc
push
in
and
popa
cs
test
xor
and
xchg
xchg
push
outsl
jge
mov
mov
ljmp
cmc
ret
test
leave
jb
mov
icebp
sub
cmp
pop
and
mov
add
add
pop
stc
dec
dec
mov
sub
pop
subl
imul
mov
jg
mov
orl
mov
scas
cmp
cmp
stos
push
and
jnp
mov
xchg
pop
cmc
in
mov
sbb
dec
fsubrl
xor
les
mov
lea
pop
popf
xor
mov
inc
aas
pushf
dec
cmp
jg
in
lock
lret
out
nop
rorb
rclb
mov
lea
add
scas
sbb
sub
or
sbb
inc
xchg
add
dec
pop
arpl
mov
testb
inc
jnp
xchg
pop
data16
xor
inc
dec
outsb
bound
inc
loop
cltd
fdivrs
or
ljmp
push
rorb
push
cli
mov
rcll
cmp
mov
cmc
or
xchg
sbbb
mov
xor
das
jecxz
pop
add
xor
sub
dec
or
cmp
and
pop
pop
rcl
sub
cmpsb
pop
add
test
sbb
aam
aam
adc
lds
daa
fwait
out
movsb
and
sub
sbb
jbe
and
inc
jle
movsb
pushf
imul
hlt
xchg
xor
mov
cmp
dec
imul
imul
mov
ret
pop
hlt
je
sub
mov
mov
gs
adc
inc
jecxz
lret
mov
je
les
mov
and
sbb
aad
xor
popf
adcl
pop
pusha
inc
inc
push
notb
adc
enter
xchg
pop
gs
xchg
mov
or
gs
fchs
cmc
jle
jnp
pop
ds
xorb
push
push
fistl
out
sub
in
scas
sbb
pop
in
push
loope
mov
xor
sbb
fbstp
xchg
jnp
mov
inc
jmp
cmp
test
mov
je
lcall
inc
stc
cmpsb
mov
outsb
hlt
out
or
pop
mov
jbe
pop
cmpsb
sbb
sti
jo
popf
in
mov
sbb
ret
ljmp
enter
inc
jecxz
es
add
sbbb
lods
gs
lods
cmp
std
inc
pusha
sbb
and
jg
pop
push
add
cmp
or
and
mov
mov
cmp
ja
pop
adc
or
inc
insb
pusha
jmp
pop
imul
dec
and
inc
insl
lods
jb
or
pop
xchg
xchg
test
das
mov
inc
jnp
fistpll
pop
dec
lds
xor
cltd
sti
sub
les
xor
lods
movsl
adc
gs
shlb
insl
push
jno
add
clc
daa
lds
xchg
mov
mov
cwtl
add
sbb
add
adc
jmp
xchg
insl
and
push
xor
xchg
jmp
mov
scas
push
sub
pop
daa
std
push
add
fisttpl
jae
inc
xor
hlt
int
dec
push
sub
or
mov
mov
sti
jle
pop
stos
hlt
xor
lret
inc
sub
lock
mov
icebp
repnz
lahf
lret
push
cltd
cpuid
aad
and
xor
repz
mov
in
lock
push
aad
cmp
sarl
pop
inc
mov
scas
repz
mov
int3
sub
lahf
lret
insl
fstps
push
stc
lods
and
aad
sbbl
adc
fstpt
and
push
lods
test
mov
leave
or
pop
jp
repz
mov
inc
inc
outsb
push
mov
dec
push
xchg
jmp
cltd
sub
popa
sbb
sbbb
push
mov
in
and
test
lock
xchg
pop
pop
pop
dec
mov
addr16
sar
inc
clc
dec
pop
pop
inc
adc
dec
mov
insb
lret
xchg
out
or
sbb
pop
cld
in
lcall
das
mov
or
adc
std
nop
leave
outsl
pop
add
rcll
and
aad
imul
call
adc
call
jp
into
das
pop
xlat
ficoml
aam
sbb
ss
addr16
cmpsb
leave
pop
or
in
movl
loop
dec
je
cs
mov
dec
repz
push
jg
xorb
or
lock
and
jnp
rol
or
mov
lret
xchg
popf
shl
aas
mov
stos
das
inc
popa
cmc
cmp
mov
xchg
clc
iret
sub
lret
xorl
push
daa
repz
jb
jb,pt
pop
fstpt
push
hlt
pusha
cmp
pop
jae
mov
push
fmul
sbb
jbe
test
sub
or
cwtl
imul
push
lds
inc
aas
mov
jle
mov
mov
mov
or
dec
push
stc
in
outsb
ljmp
xchg
das
mov
or
cli
repnz
pushf
xor
mov
push
out
add
mov
inc
xlat
or
cltd
add
out
mov
add
ja
stos
dec
or
pop
jb
or
mov
pusha
cmpsb
ss
inc
icebp
mov
or
std
inc
inc
lods
and
out
or
cmpsb
push
cmp
stos
sti
scas
popf
add
sub
mov
lods
out
fdivp
mov
call
or
jg
push
pushf
in
mov
fldl2e
pop
lahf
aas
lahf
dec
cmpsl
subl
cltd
mov
sub
loop
jg
lods
andb
jecxz
xor
sbb
sbb
fs
mov
push
mov
lahf
cmp
pop
daa
sub
ja
in
xchg
pop
pop
mov
xchg
popa
fsubrl
leave
nop
jmp
jns
call
lds
std
lock
imul
fiadds
pop
jb
sahf
adc
pop
jle
jp
mov
xor
fnstenv
aaa
out
lea
or
sub
cmp
jmp
cmpsl
pop
cmp
mov
xor
adc
and
and
pushf
push
pop
and
xorb
jp
and
in
ret
mov
dec
dec
rcrl
in
push
arpl
mov
int3
sub
xor
and
xchg
mov
mov
sub
sbb
aam
cmpsl
sub
mov
mov
sub
repz
cmpsl
sub
cmp
dec
pop
pop
ds
scas
cmp
mov
cmc
stos
leave
mov
mov
cmp
loope
out
insb
lret
lds
mov
das
aas
xchg
pop
sub
sbb
shll
pop
push
mov
out
mov
sub
imul
cmp
mov
pop
aam
or
fldenv
jmp
or
or
jmp
pop
cltd
mov
aam
xchg
sub
pop
jb
pop
sbb
pop
cmpsb
sbb
or
adc
xchg
je
out
fidivs
iret
and
mov
adc
test
cltd
ss
xchg
outsl
inc
call
loop
ret
dec
leave
and
js
sbb
jb
mov
lods
add
xchg
in
adc
adc
cmp
repnz
lea
xchg
add
frstor
xchg
cwtl
jb
xor
add
stc
es
or
sub
mov
sbb
inc
jmp
ds
jle
cmp
lcall
movsl
dec
pusha
lcall
mov
cmp
mov
into
jo
xor
mov
cwtl
adc
push
add
or
push
sub
icebp
mov
cmp
clc
cltd
dec
add
popa
or
daa
les
and
push
or
mov
or
out
cmpsl
ja
andb
push
lahf
insb
test
mov
mov
shl
dec
cmp
cltd
jp
leave
and
mov
push
pop
mov
xchg
int3
jge
sbb
add
stc
inc
pop
mov
dec
mov
into
jmp
xchg
sub
aad
inc
jns
xor
xor
ds
dec
pop
pop
xchg
shrb
out
lea
sub
out
inc
inc
aaa
lahf
movsb
jb
sub
rorb
icebp
push
jns
aad
arpl
test
lea
lahf
dec
inc
sbb
dec
insb
mov
add
out
jmp
xchg
test
mov
outsb
iret
sar
xor
dec
gs
lahf
mov
mov
addr16
in
popf
shrl
pop
push
nop
pusha
call
fwait
js
pop
cli
sub
nop
jae
fistps
js
sbb
push
fcoml
inc
dec
pop
shll
dec
xlat
ret
shrl
mov
cmp
cmp
cmp
mov
add
or
jmp
push
cmp
rcrl
pusha
lea
out
jns
lds
mov
ja
mov
mov
and
outsb
inc
cmp
and
enter
fcmove
je
jae
xorl
push
inc
decl
repz
in
popa
and
bound
scas
test
or
fisttps
and
int
mov
decb
in
adc
mov
pop
pop
xchg
shl
jp
cli
or
add
mov
pop
shlb
jae
cwtl
xchg
xor
andl
sbb
test
push
jl
jns
cwtl
out
stos
ret
xchg
sbb
imul
cmp
mov
scas
add
repz
lock
jmp
sub
arpl
cmp
xchg
add
pushf
xor
xchg
pop
mov
pop
roll
ret
xchg
dec
bound
inc
dec
jmp
loop
cmp
dec
lods
push
push
repnz
or
adc
jmp
xor
push
out
mov
dec
bound
mov
cmp
nop
jne
xor
dec
imul
jnp
inc
xchg
add
and
pinsrw
test
pop
and
scas
cs
push
clc
push
mov
cs
into
xor
int
mov
ret
into
jmp
insb
mov
jg
jmp
cld
ljmp
xor
xchg
sarl
cmpsb
sbbl
inc
pop
fisubrs
mov
sbb
js
mov
cmp
jne
push
jb
dec
add
gs
es
lret
sub
xor
sub
xorb
jns
fstl
xchg
push
stos
pop
sbb
add
std
mov
movsl
mov
adc
and
lods
testb
pop
aaa
pusha
sbb
test
sar
xchg
pop
subl
push
or
xlat
xor
subb
mov
mov
jg
lcall
mov
pop
dec
jno
ja
adc
je
sub
dec
sub
ja
sarl
enter
lods
movl
shlb
repz
sub
cmpsl
cli
leave
mov
repnz
xor
dec
outsb
insb
test
pop
pusha
add
sbbl
push
adc
pop
cmp
je
inc
cmp
mov
fnstenv
aam
lds
cmp
cli
mov
sub
cmp
rcll
mov
lahf
pop
es
mov
jnp
sbb
add
add
jecxz
ss
xor
ss
sub
dec
jno
dec
dec
mov
shr
and
test
out
sbb
push
lock
sti
cmp
movswl
push
inc
pop
mov
mov
add
stos
pop
test
out
xor
iretw
movsb
gs
mov
sti
jmp
enter
not
lods
mov
lahf
fsubrl
cwtl
lret
notb
mov
in
pop
xor
in
lods
cmc
mov
xor
dec
movsl
test
aas
adc
gs
xchg
pop
insl
faddl
xor
nop
pop
xchg
fisttpll
xor
xchg
mov
leave
aad
lods
js
sbb
push
and
mov
xor
sub
push
jne
add
dec
sub
mov
lret
push
inc
fxtract
ljmp
movsb
adc
adc
dec
popa
xchg
mov
stc
int
mov
cmp
sbb
add
mov
jo
fldenv
inc
outsl
mov
fisttpll
loope
pop
or
or
adc
stos
mov
fldenv
or
mov
stc
mov
cmpsl
out
dec
push
das
cmpsl
fcoms
xchg
push
cmpsb
push
das
movsb
dec
ds
sub
sbb
or
mov
leave
mov
out
dec
sti
push
int
sbbb
movsb
mov
jg
rcrb
pop
sbb
shll
int
ret
popf
jle
fucomp
add
dec
mov
xor
stos
das
add
sub
popa
jg
and
xchg
enterw
sbb
stc
jae
or
cwtl
loope
mov
mov
rorl
cmp
push
cmp
xchg
jae
call
gs
fdivrp
add
mov
xor
sbb
cmpsb
lcall
and
pushf
jg
sbb
sub
andl
and
imul
ljmp
jbe
test
clc
fstps
pop
aas
jns
push
mov
push
inc
inc
dec
cmp
lea
addl
shrl
mov
je
cli
std
or
imulb
loop
and
sub
pop
int3
imul
lea
das
aam
mov
inc
fbld
jb
lea
shl
push
jge
mull
repnz
inc
and
out
dec
sbb
pop
sbb
imul
imul
mov
xor
loop
mov
sub
stc
fbld
adc
imul
fdivs
push
fimuls
negl
lea
push
aad
adc
test
xchg
inc
xchg
inc
xchg
dec
lret
mov
mov
test
mov
add
clc
scas
xchg
loopne
push
push
push
fwait
push
insl
cltd
cli
rcrl
push
dec
xlat
out
fiadds
xor
ja
and
mov
cli
lods
jmp
aaa
sbbl
popa
pop
cmp
cmp
pop
xchg
xlat
sbb
lods
rcll
jbe
js
sbb
inc
jp
cmpsl
in
jb
sbb
add
scas
jecxz
outsl
jg
pusha
dec
sub
loop
adcl
jne
push
lahf
mov
cmp
inc
and
jmp
jmp
add
jns
cmp
ds
pop
add
mov
sub
mov
pop
mov
push
sahf
gs
mov
js
aaa
shlb
pusha
jecxz
push
xchg
jns
cmpsl
mov
test
ds
xlat
popf
sahf
inc
cmp
gs
dec
int3
xchg
sub
pop
xchg
xor
andb
mov
mov
jb
mov
ret
loope
popf
aas
repnz
lret
rorb
cmp
mov
sub
out
es
jle
mov
and
mov
jae
xchg
clc
inc
addl
mov
mov
into
dec
enter
xchg
mov
imul
lret
cmpb
xchg
pushf
cmp
into
hlt
pop
aas
lret
push
push
cmove
lret
xchg
jge
jne
into
mov
hlt
jo
popf
rcrb
ljmp
mov
ret
ret
xor
cmp
jp
lret
adc
dec
in
mov
fs
dec
push
je
fidivrl
inc
inc
mov
dec
jo
xlat
lahf
fcoml
jmp
rcl
sahf
xor
dec
push
rcrb
jl
mov
mov
adc
jo
sub
mov
ret
xchg
insb
or
je
cmp
push
xchg
imull
fsubr
pop
xchg
mov
ljmp
movl
in
cs
push
inc
sbb
out
inc
mov
or
movsb
add
add
mov
jge
cmp
mov
mov
cmc
imul
fdivl
pop
pop
mov
iret
ret
cmp
xchg
xlat
pusha
cmc
outsl
pop
push
popl
lret
lods
dec
xor
ss
xor
outsb
ss
shlb
movsb
imul
dec
push
jnp
jecxz
inc
pop
in
jne
lock
fiadds
sbb
mov
lahf
out
sti
pop
xor
push
pop
mov
jae
stos
push
loope
enter
lcall
popf
push
dec
jnp
jno
cmp
push
lds
lock
pusha
int3
jg
clc
pminsw
mov
pop
outsl
neg
test
sbb
cs
pop
dec
rclb
orb
decl
outsb
sbb
pop
and
ljmp
push
insb
dec
scas
mov
ret
in
rcr
and
dec
insl
push
cmp
loope
in
sbb
daa
cmp
repnz
pop
jbe
xchg
je
inc
sahf
jae
jne
or
icebp
adc
mov
movsl
frstor
sub
je
xor
inc
insb
push
in
mov
push
xchg
cltd
fldcw
mov
cmc
pop
clc
xchg
and
int
push
cs
cmp
inc
add
es
imul
pop
enter
fwait
test
mov
or
dec
jg
int
add
cmpsl
inc
shrl
cld
lret
jle
cmp
mov
stos
fdivrp
push
ss
sbb
xor
mov
jo
mov
adc
insl
push
scas
and
fadd
jp
fld
out
fnstsw
lcall
mov
aam
jecxz
mov
xchg
rcrl
and
fbld
jno
cld
jg
and
daa
cmp
xchg
cmp
push
and
inc
push
aam
mov
xor
stos
test
mov
lahf
push
mov
sub
repnz
dec
ret
cmp
lods
sbbb
mov
push
and
xchg
and
ret
aaa
into
fsubr
xor
add
cmpb
cwtl
mov
out
adc
mov
xor
stos
xlat
fwait
cmp
pop
leave
mov
cmp
mov
repnz
push
push
jno
stc
pop
add
loopne
inc
xor
scas
ret
cmp
push
call
push
adc
xor
inc
clc
xor
push
mov
xorb
lods
and
xor
jne
jae
push
cld
push
int3
bound
adc
imul
arpl
iret
sbb
scas
adc
sbb
mov
add
out
in
or
xor
xchg
mov
out
inc
mov
jge
je
and
mov
and
xchg
pop
push
cld
mov
cmpb
scas
xchg
mov
insl
push
pop
dec
gs
xchg
sub
cmpsb
jge
cmp
xchg
or
jne
in
inc
pop
jmp
jnp
ljmp
mov
xor
pusha
movsb
les
inc
xchg
mov
repz
pop
pop
rorl
inc
testb
mov
ret
sub
or
or
mov
divb
mov
mov
add
inc
scas
pop
push
ret
lcall
push
repnz
mov
mov
rcll
out
adc
jge
dec
mov
jae
in
in
aas
aas
add
pop
fnstcw
pusha
inc
inc
imul
inc
nop
lret
dec
adc
js
cli
mov
cltd
push
insl
xchg
xchg
jae
cmp
jge
addl
push
fs
add
into
xchg
adc
xor
mov
loop
divb
shll
daa
nop
jae
jmp
mov
pushf
sub
jmp
arpl
rolb
lods
xchg
lahf
push
sub
shlb
jecxz
inc
fs
dec
xchg
push
and
aaa
jecxz
mov
lods
push
add
cmp
sub
fists
and
pop
cmp
jg
and
push
cmp
mov
scas
jg
add
cmp
lret
fcmovne
aam
out
cwtl
lock
xchg
cmc
lea
inc
sbb
push
rcrb
sbb
je
movsb
xor
mov
xlat
sbb
js
mov
jl
or
mov
and
fsubr
pop
or
mov
push
sbbb
clc
fnstenv
pop
add
sarb
lock
inc
movsl
mov
cwtl
xor
sub
shll
xor
shll
in
cmp
out
cltd
xor
pop
stos
pop
std
jns
jg
sbb
shrl
je
divb
xchg
or
dec
push
sbb
xchg
in
fs
inc
add
insb
ret
xchg
mov
rclb
int
aad
inc
aaa
and
sub
ss
mov
cmp
dec
sbbb
shrl
gs
data16
pop
icebp
add
xor
mov
pop
jns
mov
push
push
or
jmp
stos
adc
push
jo
pop
xor
loope
mov
mov
mov
stos
subb
xor
xchg
std
or
sbb
mov
xor
movsb
pop
lahf
and
scas
outsl
mov
mov
loope
xchg
xchg
daa
cmp
xor
js
mov
pop
ds
jbe
cld
ret
dec
shll
push
loop
mov
sub
mov
add
cmp
inc
imul
and
sbb
sti
movb
mov
pop
roll
out
dec
sbbb
int
jmp
xchg
daa
int3
mov
add
jno
aas
aad
dec
or
enter
shlb
mov
inc
rol
inc
outsl
jno
cmp
clc
jae
test
aam
mov
pop
popa
es
mov
adc
dec
movsb
jb
dec
xchg
pop
push
push
jle
dec
daa
cmp
addl
jbe
cmp
and
sub
movsl
fxam
inc
xchg
pop
call
dec
sbb
xchg
daa
pop
lahf
xor
icebp
sub
rcrb
jno
daa
pop
dec
mov
jge
cmpsb
jb
fiadds
jae
ja
sub
cwtl
dec
pop
or
sbb
cmp
sub
leave
in
push
lods
xchg
dec
es
pusha
and
rolb
ja
jge
push
roll
cltd
xchg
enter
push
inc
jecxz
add
cmp
es
cmp
pop
test
repz
leave
movsb
mov
cmpsl
mov
sub
push
cs
nop
outsl
push
sbb
gs
jbe
rorb
xchg
test
out
je
int3
mov
xchg
push
lock
mov
or
pop
cmp
lret
inc
inc
fsubr
add
popf
lods
dec
sti
add
fidivs
jae
std
sahf
mov
or
and
dec
mov
jg
jo
jecxz
and
cmp
loopne
movsb
mov
shlb
dec
std
sub
cmc
imul
scas
cmp
pop
jg
sbb
pop
ja
scas
mov
lods
sbb
jns
cmp
xor
adc
cmp
test
add
pop
inc
je
mov
in
xchg
cmp
xchg
aad
lods
test
and
adc
stc
mov
cmpsl
jecxz
or
arpl
inc
and
cmpsb
cmp
or
or
jb
and
sub
data16
mov
std
sbb
fiadds
int
inc
nop
xlat
jo
lods
cltd
pushf
gs
shll
ret
mov
stos
pop
push
cs
mov
xchg
add
adc
pop
push
push
mov
cmp
aad
mov
outsb
push
cwtl
xor
cmp
stc
mov
dec
les
jp
int
mov
xchg
cmpsl
push
ror
and
cli
loope
out
outsl
push
dec
push
push
imul
pop
add
mov
mov
mov
aaa
cmc
inc
loope
or
cld
repnz
cmp
pop
inc
rorl
aad
ljmp
fdivrl
xor
jmp
sahf
mull
jb
mov
loop
pop
jp
mov
dec
xor
gs
stc
add
stos
and
leave
nop
fidivl
imul
lahf
lock
inc
adc
repnz
add
inc
call
push
xchg
pushl
mov
dec
push
jne
dec
mov
mov
jne
fwait
mov
sahf
and
pop
imul
jbe
icebp
stos
ret
dec
sbb
mov
pop
cmp
testl
cmp
outsl
clc
int
xor
test
push
call
pop
test
es
mov
das
xor
sub
xor
out
and
lret
mov
mov
jmp
and
mov
pop
std
cltd
xlat
je
pop
and
adc
les
jns
sub
rcrl
ret
js
insl
or
pop
ficompl
mov
adc
mov
repnz
xor
es
xor
xor
sbb
les
cmp
xchg
mov
insb
insb
adc
cmp
inc
dec
enter
dec
jb
add
lods
stos
sahf
xchg
cmpsb
add
fldenv
lret
sub
inc
adc
lods
cmp
aad
jmp
mov
nop
or
gs
sbb
cmp
mov
adc
and
dec
and
sub
mov
and
xchg
push
loope
mov
mov
fadds
push
popf
mov
cmpsl
iret
dec
add
jne
fdivl
adc
xchg
sarl
shlb
scas
or
pop
loopne
cmp
mov
jns
icebp
pushf
sub
idivb
cmp
adc
fbstp
push
pop
scas
push
lods
in
dec
daa
lods
pop
add
popa
das
pop
das
and
pop
or
cmp
jbe
loope
fs
repz
pop
or
cli
inc
aam
cmpb
pop
lds
or
sbb
andl
insl
fs
into
dec
and
jnp
jmp
xor
gs
and
ret
test
nop
jl
ret
shrb
sti
and
add
mov
push
mov
mov
sbb
out
push
repnz
das
mov
mov
hlt
sub
sbb
mov
addr16
ret
lods
fildll
test
dec
adc
push
xchg
daa
test
lds
push
pop
js
jecxz
test
orl
sbb
push
ret
aam
in
xchg
mov
or
inc
push
jns
push
lock
or
pop
daa
lcall
push
dec
cmp
ret
adc
sub
iret
loopne
cmpsb
and
add
sub
bound
adc
je
and
or
fistpl
push
pop
stos
dec
out
aas
jge
add
and
loop
jbe
icebp
jecxz
jno
leave
imull
les
add
lahf
cmp
push
xchg
aam
sbb
daa
sbb
jno
xorb
decb
data16
mov
xchg
jae
xchg
cmp
lds
cmp
mov
pop
pop
fwait
arpl
pop
emms
cwtl
lret
and
loope
aaa
std
or
jo
shrl
xchg
adc
mov
ds
lods
dec
lods
icebp
scas
mov
xchg
cmpsb
mov
cmp
push
and
arpl
pop
dec
inc
jb
jnp
dec
mov
enter
aam
lods
pop
out
adc
xchg
mov
cwtl
add
pop
ja
xchg
cmp
push
outsb
mov
sbb
mov
push
jbe
sub
sar
cltd
sbb
or
sub
js
add
movsbl
lahf
mov
test
repz
mov
rorl
push
mov
ss
push
stos
popf
cmp
xor
xchg
call
int
pop
mov
popf
jno
add
dec
mov
in
mov
aaa
fdiv
push
call
das
sti
icebp
daa
popf
sub
insl
inc
in
dec
mov
in
mov
test
push
and
jb
push
leave
pop
cmp
add
dec
das
scas
sbb
adc
lret
test
mov
loopne
pop
daa
mov
mov
add
jns
jns
xor
sbb
or
mov
sbb
sbb
in
sahf
inc
and
enter
test
addb
sbb
mov
mov
repnz
add
jmp
jge
mov
adc
jmp
repz
pushf
pop
sub
cmpsb
or
jmp
add
ret
sub
test
into
xchg
pop
test
jmp
jno
dec
mov
ret
stos
scas
sub
mov
lds
ds
shl
push
mov
sbb
jle
loope
push
cmpsb
cwtl
inc
add
adc
push
js
jns
lds
xchg
stos
jo
push
xlat
dec
fwait
cmp
lock
inc
clc
mov
imul
test
push
xor
std
in
jnp
pop
pop
and
inc
ret
jg
xchg
push
add
es
jne
add
xchg
popa
pop
call
loop
mov
cli
or
jo
loopne
rcr
jmp
je
jmp
int3
into
leave
jns
fs
cwtl
mov
push
loope
mov
movsb
js
aaa
mov
inc
jbe
mov
inc
dec
out
push
aaa
in
mov
decb
pop
popa
dec
repz
dec
mov
and
add
cltd
mov
loope
imul
sahf
lods
push
or
mov
popf
or
lahf
lods
test
mov
aad
movsb
xchg
addr16
mov
pop
adc
addb
rol
cltd
adc
lret
ret
shll
sub
gs
fnstcw
xchg
push
inc
xchg
pusha
loop
stos
xchg
mov
cli
push
icebp
jb
adc
fsubp
lcall
mov
xor
push
sub
ds
enter
and
push
add
fwait
adc
push
dec
xchg
repnz
stos
pop
mov
nop
cmp
and
int3
call
outsl
sub
cmpsb
out
insl
cmp
out
sbb
ss
in
andb
jb
sti
in
cmpsl
cmp
push
xchg
cli
nop
in
mov
pop
ss
inc
xchg
mov
and
cltd
dec
and
xor
cmp
jb
xchg
out
pop
xor
cmp
cltd
dec
outsb
sbb
dec
sbb
add
pop
repz
mov
mov
dec
xor
sbb
inc
lods
or
out
int
lock
sub
jbe
fcomps
sub
dec
mov
rcrb
into
pop
mov
jmp
out
pushf
dec
fbstp
nop
mov
sbb
or
rclb
aad
mov
repz
ret
int3
xchg
add
xchg
mov
or
xor
ret
dec
push
dec
fstpl
mov
lret
mov
inc
push
jge
and
cwtl
and
mov
pop
adc
popf
adcl
repz
fs
adc
iret
pop
stc
or
movntps
cmp
push
inc
inc
shlb
int
sub
insb
lods
ret
out
push
stos
sbb
test
imul
loopne
xchg
mov
mov
icebp
pop
pop
insb
or
lret
push
and
leave
jl
mov
mov
das
xchg
push
fld
jl
lret
insb
sbb
stos
add
pop
lds
or
lret
jmp
lock
dec
and
lea
lret
sbb
imul
cli
push
pop
popf
xchg
and
xorb
scas
data16
rolb
cmp
sahf
dec
push
andl
sbb
idiv
aad
test
dec
mov
or
insl
add
rcll
mov
mov
sarb
data16
rcrb
mov
les
mov
push
push
aad
loope
jle
push
cwtl
mov
xor
and
xchg
fcoml
mov
cmp
push
mov
mov
mov
in
fstps
add
adc
add
cmc
xchg
stos
adc
sbb
dec
not
rorl
hlt
fwait
mov
enter
pop
fisttps
sbb
jmp
cmp
or
movsb
pushf
jg
hlt
mov
outsl
xchg
mov
jo
add
xor
xchg
stc
push
ss
popa
mov
pop
testl
into
std
pop
and
or
mov
fcoms
cmp
pop
push
dec
aad
cmp
je
adc
mov
cmc
mov
pop
push
hlt
cmp
arpl
mov
int3
mov
or
dec
jmp
and
loopne
aam
sub
comiss
addr16
mov
add
daa
mov
mov
pop
adc
push
cs
xor
inc
repnz
imul
mov
adc
cwtl
adc
dec
ficoml
mov
mov
push
fsubrs
add
push
push
xchg
or
outsb
negb
cs
adc
mov
push
jp
addl
mov
mov
inc
xor
mov
jo
imul
cmp
bound
sub
sbb
cmp
daa
fiaddl
push
jae
inc
std
fimuls
and
sbb
and
or
cmc
add
lods
insl
sbb
iret
mov
into
rcll
in
and
in
jae
es
mov
inc
call
sub
arpl
fsts
dec
test
mov
cli
addr16
sbb
pop
push
icebp
pop
sti
popf
push
and
addb
loopne
mov
jo
pushf
out
and
cmp
enter
movsb
sbb
mov
les
leave
lods
pop
xor
xchg
xor
cmpsl
add
mov
sub
xor
lods
shll
scas
sbb
loop
sbb
mov
xchg
imul
std
cmp
rorb
fmuls
dec
stos
jnp
out
arpl
clc
mov
inc
pop
nop
pop
repz
insl
sub
xor
add
stos
leave
lahf
imul
and
test
sub
dec
inc
lods
xchg
adc
orb
mov
inc
and
popf
dec
xchg
repz
test
pop
sbb
ljmp
test
aam
lea
out
or
cmpsb
mov
pop
xchg
inc
sahf
sbb
int
adc
cmc
out
jnp
clc
loopne
aam
mov
dec
push
ss
shl
enter
jbe
inc
inc
shrl
lea
pop
push
imull
scas
sub
pop
xchg
out
lods
push
mov
les
fwait
cmp
orl
inc
mov
jp
aam
add
cmpsb
push
loopne
mov
call
xchg
mov
incl
clc
pop
sbb
pusha
mov
xor
adc
daa
pop
pop
icebp
repz
mov
fiaddl
movsl
cmovae
xchg
mov
out
lea
hlt
inc
mov
add
cmp
dec
lds
mov
in
mov
xor
mov
inc
cmpsb
out
shl
sub
adc
mov
jnp
xor
sbb
fiaddl
imul
rcll
add
sar
push
fdivr
adc
cli
pop
popf
pop
inc
xchg
lds
pusha
cmc
jae
lret
xchg
xchg
cmp
inc
jp
pop
daa
mov
call
jb
lods
add
ficoml
xchg
and
adc
push
mov
test
inc
hlt
and
clc
imul
dec
inc
shll
test
adc
insb
idivb
movsl
pushf
fsub
or
sbb
sub
dec
or
aam
mov
xor
std
cmp
mov
push
out
mov
fiaddl
lock
xchg
fmull
adc
adc
xchg
lret
cmc
add
test
mov
or
jge
cs
sbb
xchg
inc
or
pop
inc
xchg
js
sbbl
fneni(8087
inc
and
movl
mov
subl
loopne
mov
je
inc
mov
ljmp
jg
bound
and
pop
mov
movsb
add
add
mov
add
fstpt
mov
or
test
in
xor
leave
clc
sbb
ljmp
cmp
sahf
mov
imul
push
pop
pop
sbb
lds
cmp
outsb
jmp
push
xchg
scas
popa
xchg
sub
or
jne
dec
outsl
jne
mov
xchg
fnstenv
inc
testl
inc
or
sbb
adc
jno
js
std
inc
dec
mov
sbb
mov
xor
and
imul
js
leave
int3
sub
pop
lock
cltd
aam
mov
and
in
das
test
adc
or
xor
sub
rcll
scas
inc
sub
adc
xchg
stos
dec
repnz
lock
out
jmp
inc
adc
cmp
out
cmpsl
jecxz,pt
push
fucomip
pop
jg
imul
into
mov
push
inc
jno
cmpsb
andl
ret
stos
push
xchg
pop
dec
scas
pusha
add
push
jbe
loope
jnp
test
sarl
int3
lcall
ret
test
mov
lahf
imul
mov
sbb
cmp
pushf
aad
mov
cld
mov
xchg
sbb
imul
jns
push
decl
int
jecxz
push
int
dec
mov
lods
adc
jle
repz
xor
rcll
loopne
mov
mov
sbb
cld
mov
popa
pop
xchg
xchg
sub
mov
sti
lds
jns
sub
sub
int3
ljmp
into
js
sub
jb
test
mov
jns
push
in
mov
pushf
in
insl
das
jns
les
mov
mov
or
call
jl
sarb
shll
sahf
push
xchg
sbb
mov
jno
jp
movsb
out
out
mov
leave
or
sbb
jno
out
push
or
push
aaa
mov
xor
and
pop
in
movsb
jns
andl
pusha
sub
adc
daa
cmp
and
ficoml
in
cltd
mov
jle
divl
lret
mov
mov
not
jg
das
ss
jmp
jns
jbe
inc
daa
idivb
mov
mov
mov
jno
mov
jle
push
jg
sub
addr16
cmc
jbe
loop
mov
dec
rorl
push
jne
inc
jg
push
xchg
cld
jne
mov
lods
push
addr16
pop
sbb
sub
pop
movsb
mov
imul
sub
mov
cmc
aas
and
mov
fisubl
jo
pop
jbe
pop
pop
mov
test
fimuls
sub
fsubl
dec
mov
cltd
loop
aam
mov
push
adc
xor
loop
push
sub
add
xchg
stos
sub
jle
fldenv
dec
xchg
es
push
cmp
cmp
xchg
jmp
lods
mov
mov
repz
mov
inc
das
out
out
pop
lret
push
test
mov
add
pop
jl
mov
imul
lods
cmp
mov
inc
call
or
scas
fldt
xchg
les
inc
in
add
gs
shll
push
push
push
and
mov
addl
push
add
cmp
mov
cmp
fistpl
mov
rolb
int3
ds
mov
pop
jno
mov
cltd
icebp
inc
movsl
lods
xchg
bound
les
test
in
inc
mov
pusha
xchg
sbb
jle
mov
pushf
push
aaa
sbb
xor
addr16
mulb
push
js
add
jle
or
out
je
out
add
cmpsl
inc
fiadds
mull
mov
lahf
orb
xor
inc
or
repnz
jo
and
fsts
andb
sub
push
sbb
jno
xchg
xor
daa
fnstenv
xlat
xchg
sbb
out
pushf
cmpsb
hlt
insl
mov
daa
xchg
jns
adc
mov
ret
fnsave
aad
bound
and
mov
pop
inc
or
jae
adcb
xor
arpl
inc
inc
sarb
cmovae
out
push
mov
aad
sti
inc
lret
sahf
dec
aas
add
sub
sub
ret
push
pop
pop
cmp
jnp
cld
pop
mov
mov
cmp
dec
lock
outsb
xor
imul
test
xor
scas
incl
sbb
pop
and
adc
jo
dec
jg
and
sbb
gs
jle
out
mov
inc
aad
lret
mov
mov
mov
mov
xor
jle
out
dec
sar
push
loop
sbb
daa
imul
pop
stos
xchg
pop
in
pusha
push
rcl
jl
rolb
dec
out
cmp
dec
outsl
pop
jl
nop
cmp
sub
not
mov
or
fwait
jle
ret
mov
cli
cmc
mov
nop
loope
mov
xor
out
xchg
inc
mov
rcrl
or
cltd
jne
xchg
and
out
dec
in
mov
lods
xor
lods
or
les
outsb
mov
and
add
addr16
leave
stc
mov
ret
cmpb
xchg
jg
orl
dec
mov
cmp
xchg
xchg
mov
dec
pop
sarb
hlt
fstpl
xchg
dec
clc
cmp
loop
arpl
lds
push
fistpll
jo
push
imul
stos
pop
push
rcrl
loope
test
cmpsl
loope
ljmp
subb
mov
enter
push
frstor
iret
rorl
fidivs
dec
push
mov
ret
movb
gs
imul
leave
or
shrb
push
loopne
mov
jo
sub
les
pop
mov
push
pusha
cli
ret
mov
sub
pop
mov
dec
stos
aaa
xchg
test
dec
repnz
test
rcll
jmp
lds
or
cld
mov
clc
xorl
or
jae
iret
push
adc
inc
xlat
pop
adc
dec
aaa
nop
jbe
and
out
mov
or
jl
sub
and
or
xor
inc
push
repnz
das
inc
or
imul
shll
imul
mov
or
cli
inc
push
push
jg
and
pop
cmp
lods
aam
cld
add
aam
out
fdivs
stos
lock
jp
orl
mov
jns
xlat
cmc
vcvttsd2si
pop
mov
stc
inc
mov
imul
les
mov
push
aas
je
sarb
add
sbb
cmp
cltd
mulb
pop
jne
mov
addr16
cmp
or
jg
insl
das
ficomps
std
add
dec
or
pop
or
push
mov
mov
mull
sub
pop
push
lcall
sti
stos
mov
pop
bound
iret
and
mov
insb
test
outsb
mov
xchg
pop
test
fdivr
adc
mov
lret
jmp
lock
fwait
adc
cmpsl
aam
jle
mov
xchg
aam
push
sub
push
pop
movsb
enter
jbe
jne
xorb
sahf
pop
fs
and
xchg
sbb
pop
dec
push
pusha
gs
imul
pop
xor
cmp
fisubl
pop
dec
xchg
hlt
jae
fsubs
and
and
rcrl
push
cmpsl
stos
inc
ljmp
add
mov
test
mov
decl
fs
es
adc
fs
add
fidivrs
shr
fwait
push
cs
push
fimull
ljmp
cmp
loop
icebp
mov
sub
jae
repnz
jno
inc
or
dec
aas
xchg
popf
sub
xchg
sbb
mov
das
inc
xor
inc
mov
je
jp
jp
test
add
cmp
adc
mov
std
popa
out
pusha
pop
scas
out
fstpt
pop
xlat
lods
scas
cwtl
and
sub
popa
shll
xchg
xchg
jmp
lock
mov
repnz
lds
jle
fwait
test
push
test
stos
sub
out
fldenv
lret
aas
xchg
icebp
xor
sub
loop
loope
repnz
pushf
adc
add
shll
push
out
pop
and
sbb
jmp
mov
hlt
js
xchg
je
xchg
cmp
mov
sub
pop
pop
adc
or
fs
fs
sub
inc
and
aaa
lcall
xchg
xchg
mov
add
repnz
loopne
and
sbbb
xchg
xchg
cld
sub
jecxz
add
sbbl
sub
inc
cmp
in
ds
push
mov
pop
imul
inc
lcall
or
inc
and
push
fdivr
flds
xchg
nop
mov
and
xor
mov
cmpsb
enter
je
lea
push
bound
cs
push
das
jle
mov
fisubrl
out
mov
mov
inc
lret
div
scas
xor
in
pop
arpl
xchg
in
mov
repz
dec
aas
sub
lods
and
iret
xacquire
movsl
pushf
fldl
jecxz
add
cmp
pushf
ss
insl
pop
cmp
pop
xchg
frstor
mov
rcrb
mov
out
data16
jmp
mov
lock
cltd
xor
push
mov
push
ds
or
sub
mov
cmp
inc
cs
push
jo
cli
or
jmp
cmp
xchg
subb
cltd
mov
pmullw
mov
mov
scas
ss
lret
movsb
and
aas
inc
in
lds
push
outsb
fwait
add
jno
mov
inc
stos
mov
rcr
mov
ret
lods
jle
mov
stos
imul
lcall
loopne
fnstcw
inc
xor
in
daa
jp
or
movsb
adc
xor
sahf
and
push
pop
mov
sub
pop
mov
add
push
xchg
inc
repnz
testl
int
push
popa
imul
call
pushf
pop
adc
pop
push
shlb
pushf
dec
aaa
test
adc
xchg
cmpsl
sub
cmpl
jg
push
inc
and
mov
or
cltd
or
adc
jmp
cmp
dec
cmp
sarb
shl
cld
inc
push
data16
stos
lock
mov
test
push
es
pop
jecxz
pop
js
insb
inc
dec
ror
scas
jecxz
std
sub
arpl
pop
cli
aaa
push
mov
orl
out
xchg
sti
stos
fisubl
sbb
dec
push
xchg
or
mov
js
push
out
or
insb
in
mov
push
ds
mov
jmp
fldt
or
mov
xor
gs
pop
pop
mov
fcomi
outsl
push
sbb
daa
lret
or
fdivl
in
notb
or
mov
arpl
and
cltd
scas
in
loope
jmp
mov
shlb
imul
push
adc
scas
ljmp
xor
push
sbb
cmp
out
cli
insl
das
xchg
cmpsb
mov
mov
add
push
aad
mov
es
insl
call
fists
adc
imul
fldenv
push
push
shr
jmp
inc
inc
enter
fnstsw
data16
mov
in
das
arpl
notl
cmpsb
dec
fstpt
lods
fstpt
inc
inc
outsl
lock
sti
cmp
loopne
cmpsb
pop
fdivs
adc
fs
dec
imulb
mov
bound
mov
push
loopne
in
push
loopne
sbb
mov
or
decb
sti
inc
push
lds
pop
notb
in
flds
dec
aas
jecxz
mov
ja
out
leave
add
into
outsb
lea
pop
sti
ds
stos
push
xchg
gs
fcmovbe
fbld
test
jmp
fimull
enter
iret
adc
cmp
mov
lock
out
pushf
mulb
ret
sbb
inc
push
pusha
or
cwtl
fs
dec
and
jnp
push
test
or
xchg
sete
jmp
sbb
ffreep
mov
push
bswap
and
sahf
push
fwait
jp
jae
in
test
js
dec
add
icebp
push
daa
add
inc
jo
dec
jmp
pop
andl
jg
push
add
pop
cltd
loope
push
out
cmpb
rcl
sbb
fwait
hlt
xor
jb
jecxz
movsl
adc
pop
mov
les
loope
jae
cltd
lea
jo
push
and
cltd
cmp
sbb
mov
daa
test
mov
mov
mov
cwtl
movsb
test
cmp
in
xor
pop
shl
in
into
pop
nop
imul
lret
fisubs
cmp
out
lods
js
fisubrs
jnp
shlb
mov
int
call
pavgw
jmp
stos
imul
jnp
out
xor
fdecstp
pop
mov
sbb
out
xor
cmp
jae
into
das
cmp
mov
inc
xchg
ja
std
ljmp
divb
test
sub
sbb
sarb
mov
imul
jmp
das
mov
jb
adc
out
cli
and
and
lods
jg
dec
adc
aaa
lock
jb
mov
mov
push
lahf
push
frstor
mov
cmpsb
data16
sbbl
fistpl
pop
outsb
out
outsl
adc
mov
ss
cli
push
mov
mov
cmpsb
enter
cs
jge
dec
inc
pop
fwait
jmp
ds
out
inc
or
or
int3
rcll
hlt
jge
pop
cwtl
subb
jmp
jae
push
sub
push
xor
sbb
or
or
mov
dec
ficompl
ret
pop
stos
xor
or
les
cmp
or
sub
fsub
push
call
xor
adc
cmpsb
pop
push
cmp
std
ljmp
arpl
xchg
test
xchg
in
xchg
inc
cmpsl
mov
stc
cmp
xchg
pop
daa
jp
hlt
scas
fistpl
xor
sub
jnp
int3
scas
out
mov
cmc
je
jg
mov
mov
into
and
out
inc
addr16
xchg
shlb
bound
sti
imul
es
pushf
sahf
int
test
xchg
push
add
and
adc
xor
adc
mov
or
or
scas
movsl
test
inc
inc
mov
inc
cld
out
adc
mov
insb
ret
dec
mov
sub
jae
jmp
jo
hlt
rorl
sahf
negb
fbld
add
sub
inc
mov
push
adc
in
lock
test
aas
aad
pop
sbb
pop
in
xchg
lahf
push
dec
add
ficoml
fdivrs
pop
pop
jo
les
mov
pop
mov
and
aad
sbb
jbe
mov
das
leave
test
int3
test
mov
fbld
mov
sbb
fwait
pop
cli
es
mov
mov
sub
ss
mov
cmp
out
leave
in
jle
cld
lret
pop
notb
enter
imul
repz
jae,pt
xchg
fldt
jbe
addb
sbb
fistps
pop
cmc
push
sub
mov
jp
outsb
bound
mov
jo
xor
jmp
sub
repz
mov
mov
rclb
jne
xlat
cmpsl
outsl
pushf
hlt
out
jb
pop
sub
mov
push
push
lds
and
ret
pop
mov
add
push
iret
xchg
das
sti
je
xchg
mov
sub
and
aas
sub
mov
imul
or
sub
test
pop
movsl
add
lock
mov
push
in
push
pop
jb
dec
mov
fisubrl
repz
jae
loope
in
mov
mov
pop
dec
pop
int
scas
pop
jle
call
popa
sub
subb
int3
mov
ljmp
nop
xorl
xchg
ret
cld
ret
ds
mov
idiv
fimull
mov
pop
mov
lods
or
sub
enter
xor
cmp
add
xchg
jecxz
inc
or
mov
insl
jne
mov
repnz
insl
jmp
lea
xor
mov
movsl
jmp
daa
adc
cld
lea
dec
push
in
adc
xchg
nop
add
jnp
loope
add
or
out
enter
fwait
mov
mov
fwait
std
pop
xor
cmp
sub
xchg
dec
movsl
push
cmc
rorl
mov
ror
cld
fcmovne
push
dec
insb
outsb
js
jne
cmp
and
inc
inc
js
push
nop
jnp
jp
mov
cld
movsl
fstpl
notb
mov
ret
aad
out
cmp
jbe
add
sbb
iret
popf
test
sub
leave
std
cmp
sbb
repnz
push
mov
cmp
popf
add
pop
add
xor
adc
lds
inc
mov
addb
aas
orl
mov
dec
ljmp
das
mov
leave
sahf
int3
pop
push
and
pop
pop
pop
mov
roll
fildl
cmp
pop
mov
push
fyl2x
sbb
rcrb
movsl
push
jb
mov
pop
jp
cmp
dec
insb
cld
cmp
jl
mov
pushf
lret
dec
stos
ljmp
push
mov
xchg
dec
nop
sub
push
cmpsl
sub
int
pop
pop
daa
xchg
rolb
cwtl
movsl
and
mov
outsl
cs
data16
movl
dec
leave
adc
mov
fwait
cmpsb
les
mov
sbb
xchg
es
mov
jp
test
jbe
xlat
push
into
fstpt
ficompl
push
sbb
in
jle
repz
xchg
jne
cmp
mov
movsl
mov
test
push
hlt
cmp
jne
testb
popa
out
aam
out
gs
jmp
ljmp
pusha
add
call
xlat
call
or
test
pop
ret
push
insl
xchg
out
fcomps
sbb
cltd
in
mov
sbb
mov
fstl
xor
lcall
xor
adc
dec
andl
dec
daa
xchg
pop
or
xor
clc
push
outsl
fidivrl
jno
push
mov
int3
or
mov
inc
pop
or
cmpl
inc
mov
mov
das
push
mov
sub
jmp
ret
std
dec
fcoml
sub
jne
sbb
pop
xlat
imul
add
mov
xchg
imul
cmp
inc
rol
jmp
test
stos
insl
xor
lret
push
mov
push
add
mov
mov
cwtl
mov
mov
jno
inc
push
out
cs
jno
mov
js
jns
or
iret
sub
ss
movsb
xor
mov
and
mov
test
and
push
mov
push
mov
xchg
je
daa
push
fldenv
adcl
aam
cmp
jb
aas
roll
push
xor
xchg
andl
insb
adc
sub
aam
sub
ror
mov
loope
fptan
leave
xor
push
sbb
loopne
sbb
mov
mov
adc
inc
or
arpl
test
lret
push
out
imul
xchg
pop
jle
cmpsl
mov
out
movsl
mov
xor
dec
adcb
movsb
inc
inc
sub
or
pop
insb
cmc
fnsave
mov
shlb
in
loop
sub
in
sbb
push
int
xchg
dec
ret
pushf
aam
mov
js
pop
insb
out
mov
lret
push
ret
in
shl
xchg
fidivrs
xor
ljmp
arpl
jbe
fisubl
push
pop
push
es
enter
mov
mov
iret
add
mov
push
pop
and
test
push
sub
xchg
popa
nop
icebp
push
mov
ljmp
mov
dec
dec
adc
arpl
test
and
inc
push
jl
and
xor
rorb
cltd
mov
mov
and
inc
sbb
jns
test
stc
js
xchg
sarb
lods
mov
hlt
imul
cmpsl
sti
cwtl
and
js
rclb
add
push
mov
add
call
data16
lods
or
std
mov
ds
data16
jae
sbb
cmpsb
in
add
xor
gs
pop
and
psubusb
lods
mov
outsb
mov
hlt
ja
dec
arpl
pop
inc
loop
push
sti
ret
movsb
and
movb
cltd
adc
xchg
pop
clc
mov
aad
popa
call
push
jge
cli
and
dec
out
std
push
leave
xor
sub
mov
out
out
and
ret
in
add
cmp
and
xor
sbb
lcall
arpl
dec
movsb
cld
out
out
add
xchg
ds
add
cmovs
sub
int3
pop
lds
int3
sbb
or
mov
pop
ret
cltd
mov
imul
inc
push
mov
jnp
enter
xchg
aad
and
test
pusha
fs
xchg
fucom
push
jo
add
cwtl
push
jnp
mov
inc
sahf
pop
cmp
cmp
jecxz
insb
addr16
or
insl
and
xchg
jecxz
sbb
mov
mov
add
pop
sub
pop
dec
xorb
pusha
icebp
stos
mov
enter
ljmp
ss
aaa
jno
adc
in
add
push
lods
nop
pop
jnp
repz
and
push
pop
jne
stc
or
dec
insb
lcall
insl
clc
shlb
xor
mov
lret
push
mov
xchg
les
jmp
inc
xor
fdivrs
shll
xchg
sti
inc
mov
sub
outsl
jo
fstpt
ficomps
cwtl
lock
jg
push
enter
cs
mov
fistpl
shl
jno
jl
inc
hlt
mov
loopne
and
shrb
mov
add
push
movsl
pop
xchg
cmpsl
aad
inc
inc
sbb
jno
xor
divb
xchg
pop
data16
sbbl
jb
sub
mov
xchg
ds
ret
addr16
icebp
inc
aam
call
movsl
jbe
ja
push
fcoms
movsl
mov
das
xlat
ret
fst
ja
in
fwait
push
data16
xor
mov
xchg
cld
int3
adc
mov
or
call
and
inc
pushf
enter
jno
dec
sbb
inc
mov
mov
adc
pop
mov
adc
mov
cwtl
or
inc
arpl
les
sbb
shl
ret
pop
cmpsl
out
or
or
lock
scas
jbe
in
aas
clc
push
add
lcall
into
dec
sub
push
data16
ljmp
mov
in
pop
popf
xchg
aad
and
std
or
out
loope
data16
pushf
lock
rclb
jmp
call
sub
mov
dec
jae
xchg
and
and
fldl
dec
mov
mov
pusha
fnstenv
add
pop
cld
xlat
cmp
outsl
andb
cmp
dec
pop
xchg
cmp
cli
mov
push
andb
lods
mov
xor
test
in
or
pop
add
push
cmpsb
fs
push
add
and
adc
push
popf
jns
push
inc
cmp
mov
test
aad
pop
xchg
mov
jg
js
sbb
pop
or
adc
pop
jl
sbb
or
mov
mull
lret
jno
mov
bound
or
inc
pop
fdivr
pop
bound
out
insl
arpl
adc
and
loop
dec
push
push
mov
in
mov
out
loop
xchg
and
loope
cs
xchg
ror
and
inc
lcall
inc
mov
mov
or
arpl
lahf
roll
adc
sbb
lret
fs
pop
cs
rcrb
in
lret
or
ror
ljmp
int
pop
sahf
xchg
fldt
js
icebp
ljmp
or
les
jp
cmp
ds
in
pop
ret
in
pop
mov
jno
ret
pop
mov
roll
es
inc
orl
lret
and
push
cmpsb
stos
fldl
jmp
sbb
dec
shlb
add
xchg
test
and
fiadds
add
pushf
jmp
xchg
mov
mov
cmp
jmp
pop
std
add
aaa
push
scas
jg
add
idivb
je
cmpsl
mov
push
dec
add
pop
dec
pusha
jae
mov
push
mov
mov
fwait
lahf
mov
push
and
outsl
inc
or
je
jge
mov
pop
lea
add
es
dec
mov
out
push
xor
sub
addr16
lcall
xchg
daa
jae
movsb
lcall
std
jno
mov
xchg
ret
jge
cmp
shrb
mov
outsb
cmp
ficompl
cmp
sub
cltd
sbb
iret
ds
or
push
adcl
je
sti
adc
cmp
push
sarb
mov
movsl
imul
dec
mov
test
fidivrs
dec
imulb
pop
rorl
fld
in
imul
xchg
inc
nop
fsts
push
movsb
pushf
mov
test
inc
mov
imul
jl
sbb
hlt
je
lods
mov
sahf
test
aaa
shrb
push
rcl
and
jnp
dec
cmp
pusha
nop
sbb
or
movsb
or
repnz
mov
xor
dec
sbb
or
repz
push
dec
iret
and
bound
add
test
imul
popf
lds
addb
enter
ret
in
pop
in
jbe
add
adc
or
bound
out
jo
mov
adc
ficomps
and
fs
add
pop
mov
jg
loopne
pop
jne
fwait
push
hlt
mov
enter
pop
in
push
lahf
pop
sub
mov
mov
test
adc
push
xchg
sbb
jmp
pop
sub
scas
add
lods
sbb
push
and
xchg
jg
or
int
outsl
sbb
mov
sbb
lret
push
dec
mov
fisttpll
imul
sbb
xor
sarl
push
loop
clc
fwait
mov
dec
dec
or
into
iret
pop
leave
ss
lahf
stos
sahf
in
les
dec
aam
mov
sbb
mov
incl
mov
mov
fistl
out
mov
dec
sbb
mov
cmpsb
jp
int
dec
xchg
test
dec
mov
sbbb
jnp
jecxz
mov
mov
aam
push
xchg
lahf
addb
add
aas
pop
sbb
sahf
outsl
pop
scas
push
pop
out
shlb
outsl
jb
js
into
iret
jp
or
sbb
loop
push
adc
jg
pop
dec
lret
dec
fmulp
jmp
rclb
add
in
xor
leave
out
mov
or
leave
pop
cld
icebp
xor
lock
mov
cmpsb
xchg
mov
adc
test
mov
and
stos
push
lret
xor
adc
pop
inc
dec
fildl
or
loope
pop
test
dec
mov
push
es
cli
jecxz
jb
sub
xchg
jl
mov
push
xchg
push
aad
movsl
dec
ljmp
xor
jae
cmp
cltd
push
stos
shll
inc
mov
dec
mov
fldenv
ljmp
and
insb
testl
mov
push
data16
push
inc
mov
add
ret
in
ljmp
popa
rclb
cmpsb
mov
pop
jecxz
xchg
repz
rol
pop
push
mov
jns,pn
sti
enter
insl
ljmp
mov
push
sub
cmp
or
insb
push
jge
add
sbb
inc
shl
je
enter
in
dec
imul
mov
cwtl
arpl
fildl
xchg
sub
in
add
mov
insb
mov
fisubrl
fistpl
mov
lahf
add
aam
dec
mov
mov
mov
push
cmpsl
mov
jae
call
aas
scas
adc
inc
out
xchg
add
xchg
popa
dec
xor
inc
sub
sti
jg
enter
out
popa
or
xchg
push
fstp
mov
push
fisubrl
cmp
clc
fisttpl
subb
or
sbb
mov
inc
inc
lock
xor
movsb
jl
push
fwait
push
pop
xchg
and
sahf
nop
dec
push
push
arpl
push
scas
cmpsl
pavgw
outsb
outsb
lock
insl
mov
cmp
mov
imul
test
xlat
inc
add
fiaddl
fdivs
imul
push
mov
repnz
push
out
or
add
out
pop
and
scas
sti
or
jb
out
ret
mulb
push
jecxz
dec
das
inc
imul
and
in
mov
inc
shlb
mov
fistpl
mov
dec
ror
inc
adc
dec
lds
insb
mov
mov
inc
mov
flds
dec
icebp
xchg
xchg
mov
jne
push
mov
mov
cmp
jo
in
or
stos
jge
outsb
fnsave
mov
repnz
xor
lods
adc
dec
gs
cmpl
in
fimull
nop
outsb
aam
xor
mov
push
xor
adc
mov
cmp
popf
imul
cmpsb
repnz
xchg
mov
or
cmc
cmc
movsl
in
mov
dec
les
and
jmp
sub
mov
pop
sub
leave
movsl
mov
insb
clc
mov
add
push
hlt
sub
inc
pop
pop
xor
sub
cmp
mov
mov
lods
std
add
mov
int3
add
jle
mov
jo
in
int3
scas
aad
inc
xlat
in
cmpb
in
jbe
call
scas
imul
sbb
lret
add
dec
out
sbb
ret
pop
imul
xlat
dec
or
jae
icebp
or
xor
inc
push
rorb
pop
sub
pop
pop
cmpsb
lock
dec
aaa
fwait
std
inc
cwtl
enter
jae
or
bound
jnp
add
cli
mov
sub
negb
lods
xchg
scas
adc
shr
sub
scas
mov
sbb
jp
xchg
sub
movl
pop
jno
sub
pushf
addl
xchg
out
outsl
pop
test
mov
stc
dec
ret
sub
addr16
inc
add
jns
fwait
hlt
subl
mov
mov
test
lds
or
inc
test
pop
ffreep
xchg
and
fldl
bound
sbb
jge
les
mov
xor
test
int
push
push
lock
stos
inc
jmp
ret
lcall
push
jns
mov
push
lods
addr16
and
cmp
enter
mov
jnp
imul
push
aad
fs
mov
xor
xchg
fiadds
arpl
aaa
mov
pushf
scas
push
icebp
shlb
cmp
xor
mov
mov
and
shrl
xchg
cmc
mov
xor
pop
cmp
fldt
outsb
push
outsb
mov
cwtl
insb
pop
push
add
in
stos
sbb
sub
sbb
sbb
adcb
jmp
mov
or
idiv
cltd
cmp
adc
faddl
pause
lds
push
and
sub
arpl
das
mov
bound
cmpsb
dec
xor
cmp
cli
mov
imul
outsb
xlat
loope
test
jg
and
pop
push
loope
jl
sub
leave
aam
loopne
jnp
inc
mov
popa
ficomps
call
jno
jl
nop
push
lea
push
mov
or
rorb
sbb
iret
xchg
and
fwait
aas
loopne
xchg
sub
sbb
push
insb
cmp
mov
inc
movsb
hlt
add
xor
lds
adc
jne
jno
jb
out
cmp
push
cmp
mov
in
popa
outsb
mov
out
sub
sub
mov
dec
fs
jae
test
add
call
sti
xor
pop
push
fwait
rcr
adc
lahf
xor
enter
outsl
or
movsl
out
mov
stos
sarl
sti
inc
jbe
fnstcw
pop
daa
repnz
sahf
cmp
jo
cmpsl
mov
pop
pusha
cld
in
mov
xchg
push
dec
sub
cmp
imul
push
xchg
addl
das
subb
cmp
testb
sub
push
aam
mov
lea
repnz
addb
inc
loop
imul
push
inc
stos
movsl
jmp
pop
and
xchg
mov
add
mov
lea
bound
push
or
cmc
sti
lods
test
int
pop
inc
mov
mov
pop
push
addr16
cmp
cltd
and
inc
lea
jbe
mov
lcall
and
adc
push
outsb
es
mov
adc
jmp
daa
loop
insb
mov
dec
lret
push
clc
sbb
mov
xor
push
jp
outsl
xorl
lret
cmc
sbb
mov
mov
dec
nop
arpl
ljmp
lea
sbb
or
add
mov
aaa
inc
lods
jmp
mov
push
inc
xor
call
imul
and
or
ret
jnp
push
jmp
pop
incl
adc
int
cli
sub
mov
push
add
xchg
add
test
mov
xlat
hlt
call
fsts
cmovs
gs
stos
fsubrs
push
push
lock
cmpsl
lods
lret
mov
jmp
mov
rolb
lret
sub
cmpb
cmp
ret
xlat
test
cmp
and
xchg
cmp
mov
rorb
loopne
add
inc
arpl
mov
sbb
je
out
xchg
mov
mov
jnp
in
or
add
pusha
js
arpl
or
xor
adc
dec
ds
jo
pop
adc
loope
xchg
jno
or
loop
into
xor
fsub
shll
out
lret
pop
sub
pop
pop
stos
sub
jno
fisubrs
or
imul
mov
adc
out
int3
fcmovnbe
int
fwait
iret
shl
repz
pop
sbbb
mov
or
add
xlat
cmp
push
ja
and
pop
leave
mov
arpl
ss
inc
sub
xchg
int
out
mov
pop
or
inc
outsb
push
add
daa
push
clc
jo
aad
icebp
ret
inc
popf
sub
outsb
fcompl
and
sbb
test
push
ret
or
insl
js
adcb
sbb
mov
fdivr
iret
popl
pusha
call
inc
ss
jno
loope
inc
insb
mov
sub
xor
mov
jp
imul
call
gs
pop
aas
into
das
mov
xchg
ret
xchg
imul
popf
dec
mov
push
and
jbe
mov
filds
pusha
mov
sbb
popf
clc
aaa
imul
in
es
test
push
das
divl
push
add
nop
mov
loope
call
adc
cmpsl
push
mov
sub
jnp
adc
nop
xchg
notl
mov
iret
or
jns
push
xor
mov
scas
enter
sub
sarl
cmp
sub
xor
xchg
xchg
imul
fidivl
dec
dec
in
or
lret
nop
inc
sub
aas
dec
mov
pop
pop
inc
xchg
pop
test
jle
arpl
add
xor
cli
jl
enter
adc
cmp
add
cltd
push
sbb
lret
movsb
sbb
mov
cmp
adc
adc
mov
je
cmp
dec
and
movsl
cmp
add
mov
aad
rclb
mov
xchg
and
push
cmp
lods
je
cmc
mov
sbb
inc
sub
pop
mov
mov
push
xlat
cmp
xchg
icebp
scas
pop
test
adc
cmp
mov
adc
cmp
xor
push
pop
roll
push
sub
pop
mov
sahf
or
dec
pop
aas
xor
or
mov
mov
sbb
jge
test
xchg
mov
xchg
mov
enter
add
inc
mov
stos
gs
jne
sar
out
and
or
ja
sbbl
sbb
adc
pop
push
and
movsb
sbbl
aaa
mov
push
testl
inc
imul
hlt
icebp
mov
jle
cmp
pop
inc
inc
xchg
dec
sahf
addr16
pop
push
scas
mov
jecxz
and
xor
pop
or
mov
insl
sbb
inc
pop
arpl
cld
add
pusha
xlat
jns
gs
pop
lock
cmp
fs
jmp
lea
int3
out
ret
or
xor
xchg
sarl
mov
jbe
aam
xchg
pusha
jle
repz
or
mov
sub
fucomi
sbb
insb
pop
adc
mov
push
daa
mov
dec
inc
mov
mov
out
inc
xor
sbb
push
movsl
or
mov
sub
imul
add
fucomip
inc
out
mov
and
pop
xlat
mov
sub
sbb
fsubs
mov
pop
cmpsb
insb
repz
arpl
loopne
sub
ss
dec
push
cmp
je,pn
sarb
pop
jge
and
pop
xor
mov
aaa
lahf
push
xor
jne
data16
lahf
insl
mov
dec
inc
jb
lods
pop
sbb
cmpsb
aas
and
push
ret
mov
dec
faddl
sbb
sub
inc
cmp
ja
orl
std
push
push
mov
mov
adc
xchg
pop
repz
sbb
je
push
cmp
mov
or
leave
or
add
nop
inc
js
inc
sti
dec
fists
cltd
lahf
cld
movsl
cld
mov
xchg
outsl
addb
int3
or
dec
dec
xor
insb
or
fcompl
imul
xor
mov
mov
test
mov
or
dec
mov
xchg
mov
mov
sahf
pusha
jl
inc
mov
cmp
bound
cmpsb
aad
mov
mov
mov
sbb
stc
mov
icebp
xlat
cs
mov
les
imulb
jne
lret
frstor
test
out
mov
sub
or
cld
sub
sahf
pop
aas
idiv
scas
aam
or
pushaw
outsb
and
aas
cmp
loopne
lods
and
xchg
orb
jle
push
add
cltd
js
test
or
data16
aad
inc
imulb
fs
adcb
cmp
movsl
inc
cmp
lahf
sub
shlb
and
repnz
add
xor
hlt
iret
sti
xlat
leave
repnz
xchg
xchg
lret
test
clc
jg
insb
les
out
andl
dec
cmp
stc
adc
jp
roll
sti
dec
jbe
add
sbb
shl
or
in
mov
pop
xor
mov
dec
jge
dec
add
mov
push
lret
inc
bound
scas
clc
fidivrs
xchg
call
ds
xor
rcrb
sbb
loopne
cli
pop
fildl
mov
mov
mov
mov
rol
call
xor
fldt
fmuls
and
shl
ljmp
dec
out
add
mov
cmc
xlat
mov
cmpsb
loope
rcl
mov
sbb
xor
in
cli
test
daa
in
mov
aad
jne
lock
xchg
out
stos
cmp
mov
push
out
and
loope
shll
adc
sub
and
dec
xchg
rcrb
cmp
sti
pusha
xor
shlb
mov
loope
std
xor
push
mov
push
cmp
shlb
xor
inc
les
rclb
daa
data16
insl
sbbl
add
sbb
add
sbb
fistpll
movsl
inc
add
pop
sti
cmp
lea
mov
mov
jp
pop
imul
mov
sbb
jno
xorb
les
dec
dec
pop
mov
and
repnz
adc
insl
inc
mov
dec
out
jns
fldt
cmpsb
fsubrs
add
out
cmpb
into
push
mov
hlt
pop
mov
pop
pusha
push
xchg
xchg
xor
mov
out
inc
or
lahf
iret
dec
into
and
sbb
dec
pop
mov
or
mov
mov
pop
cwtl
dec
cli
mov
jge
enter
jl
stos
lods
push
and
adc
int
scas
inc
ds
xor
stc
pop
dec
adcb
in
mov
push
pop
mov
loop
or
pop
pop
or
lods
pop
bound
jge
fimuls
mov
pop
sti
push
divw
jecxz
ret
pop
popa
ds
imul
pop
mov
cld
rcrl
add
lahf
ret
dec
push
add
pop
leave
ud1
add
aaa
sbb
lods
mov
pop
aas
mov
popaw
lcall
lret
or
sub
sbb
adc
sub
jno
cli
or
lret
sbb
xorb
mov
cltd
into
ljmp
xchg
push
xor
pop
adc
out
int
xchg
rol
push
xchg
sbb
int3
mov
pop
jnp
cwtl
cmpsl
fwait
inc
sbb
sbb
mov
jge
or
insl
imul
into
mov
or
xor
pusha
mov
ss
int
call
jae
pop
cmpsl
rclb
lea
add
mul
out
ss
jmp
mov
lds
or
sub
jnp
ds
cwtl
subb
xchg
jne
andl
adc
ret
jo
test
decb
mov
test
mov
and
popf
dec
outsb
jno
jns
xchg
inc
inc
inc
js
addr16
repnz
jns
sbb
ss
or
dec
lds
jns
test
xchg
inc
mov
test
or
daa
sti
ljmp
insb
sub
cli
xlat
iret
addb
lods
or
jecxz
and
sbb
iret
insb
adc
inc
mov
out
jecxz
xchg
push
js
push
dec
adcl
cld
and
pop
int
mov
and
pop
test
icebp
inc
push
cmpsl
cmc
mov
loope
jle
mov
xchg
hlt
inc
cwtl
sbb
jg
js
pop
or
and
mov
and
ret
mov
ljmp
sub
push
mov
inc
inc
mov
adc
inc
sbb
mov
sbb
test
stc
cmp
xlat
dec
mov
cmp
push
movsb
into
sar
adc
hlt
mov
adc
rorl
push
divl
into
sub
or
fnstcw
subb
nop
loopne
push
xor
in
lahf
push
push
imul
sbbl
maxps
fsub
sbb
imul
fwait
lret
movsb
xchg
test
mov
inc
cmp
sub
jecxz
add
int3
aas
loop
shlb
setae
adc
cmpsl
and
filds
fnsave
adc
insb
mov
hlt
mov
fcmovnbe
insl
jne
sub
sbb
jb
ficoms
bound
sbb
jecxz
lods
xchg
add
ss
bound
and
pop
adc
rcll
movsb
sub
test
scas
sub
out
xchg
push
rcll
pop
or
mov
add
jo
cmp
mov
dec
loope
and
dec
mov
mov
jl
sub
fwait
not
push
clc
pop
push
jg
push
mov
stos
jo
adc
adcb
inc
xor
test
lods
xor
jecxz
lahf
cltd
rolb
push
mov
scas
jmp
jae
psubusb
scas
mov
pop
adc
fnstenv
cld
sar
enter
xchg
stos
into
mov
add
aam
and
jbe
sbb
push
imul
je
psadbw
insb
and
push
add
adc
fwait
sbb
or
add
jmp
sub
out
lahf
push
jns
jae
push
pop
notl
imulb
mov
dec
mov
je
ret
test
push
movsl
xor
add
inc
stos
push
fwait
outsl
mov
enter
jg
xor
pop
inc
and
into
hlt
inc
pop
jb
push
ljmp
rcrl
stos
loopne
sbb
mov
sub
pushl
popa
mov
jl
mov
insl
mov
push
sbb
xor
inc
retw
sub
lret
lods
mov
mov
hlt
mov
rorl
icebp
push
mov
mov
out
arpl
out
scas
sub
adc
lds
mov
add
aaa
daa
inc
sbb
je
dec
fdivs
iret
or
rolb
xchg
pop
jl
adc
adc
fwait
jb
test
outsl
pop
stc
jp
daa
dec
arpl
mov
cs
jmp
loope
sub
out
sub
dec
or
push
inc
ficoml
cmp
dec
out
mov
lds
fisubrs
fadd
push
movsb
imul
sub
in
and
adc
das
cmp
fld
in
and
mov
jle
sub
sbb
sbb
xor
cmp
lods
pop
mov
jnp
xchg
enter
orl
cwtl
mov
xchg
push
subb
repnz
xchg
pop
es
add
inc
or
rclb
rcr
xchg
dec
lcall
xchg
bound
fwait
stc
lcall
cs
jbe
pop
cmp
lods
arpl
js
sahf
xchg
call
or
pop
inc
pusha
mov
repnz
mov
push
aad
aad
push
in
lock
js
add
daa
xchg
iret
in
dec
js
sti
jno
dec
movaps
das
sub
jle
cmpsl
push
retw
inc
sub
enter
adc
mov
mov
push
mov
fsubl
xor
es
popa
push
pop
outsl
cmpl
cmp
scas
icebp
addl
out
loope
mov
dec
fs
fistpll
inc
inc
pop
cli
jp
stos
push
ja
pushf
repnz
xchg
shl
insb
mov
pavgb
xchg
mov
and
test
outsb
jb
enter
adc
sub
jo
pusha
jbe
fisubs
add
lcall
gs
jg
mov
fbstp
sub
push
mov
cwtl
mov
dec
ret
dec
fbstp
xchg
jns
xor
push
insb
cmp
pop
insl
sti
mov
and
pop
mov
ja
adc
sub
divl
and
adc
inc
or
xchg
mov
pop
jno
jecxz
and
jp
cmpsl
jnp
dec
pop
lcall
inc
daa
cld
ret
dec
mov
mov
fnsave
imul
fwait
insl
push
enter
push
std
pop
negl
in
pop
sub
loop
or
mov
mov
jae
int
pop
notl
adc
xchg
call
xor
mov
lret
out
mov
dec
sbb
xor
xor
out
jb
jle
mov
cmp
in
mov
jns
push
and
pop
dec
mov
mov
loop
mov
and
arpl
mov
mov
ds
dec
cmp
push
cwtl
ja
aad
inc
iret
popf
cmpsl
mov
push
add
lcall
mov
fucomp
mov
mov
dec
xchg
add
stc
push
push
fwait
push
xchg
das
pushf
nop
mov
fcomps
lods
mov
test
mov
sbb
es
call
nop
push
mov
pop
jecxz
mov
inc
rclb
loopne
cmp
xor
push
mov
inc
jnp
jle
inc
or
sub
inc
or
loope
unpckhps
inc
arpl
cld
sahf
lret
xchg
dec
leave
ret
cmp
push
push
das
fst
dec
adc
add
xor
and
nop
cmp
mov
inc
out
addb
mov
lret
mov
mov
lret
psubsw
rorl
xor
inc
or
aas
mov
popf
test
or
xor
xchg
push
pop
mov
pop
xchg
pushf
adc
popl
sub
dec
sbbb
pop
icebp
jae
daa
pop
inc
lret
inc
sub
jg
sub
ds
rolb
add
sub
push
pop
add
in
mov
jo
sub
mov
sarl
pop
gs
push
mov
jno
jmp
or
scas
adc
shll
jp
inc
push
xchg
mov
fidivrs
repnz
mov
xor
bound
dec
mov
addr16
and
pop
popa
insb
inc
gs
orb
adc
shlb
and
lods
push
push
dec
ja
pop
lret
add
loope
lret
repnz
pop
or
daa
xor
ss
lea
sahf
sbb
add
xor
jle
lret
insw
lret
xor
fld
xor
xor
push
jns
jle
mov
out
push
jo
lret
mov
rcl
das
rcl
add
arpl
out
push
ds
repnz
sbb
rcl
iret
dec
notb
insb
dec
rcr
or
inc
insl
sub
sub
bound
adc
and
push
out
sub
sbb
popa
mov
lea
int
aam
push
popa
imul
xor
mov
and
lock
pop
icebp
cmc
aas
pop
jp
cld
pop
cli
mov
push
mov
or
lret
fldt
aam
sbb
pusha
fnstsw
lret
mov
in
fmuls
adc
mov
dec
stos
push
inc
cmpsl
ss
ret
jo
cmp
sbb
mov
pop
sub
push
pop
jo
les
sub
sbb
dec
add
add
mov
loopne
pop
rorb
mov
fimuls
pop
mov
or
and
inc
cmp
int
cmpl
popa
popaw
in
inc
mov
push
outsl
shrl
pushf
xchg
adc
sti
arpl
repz
fsub
jle
cmp
adc
mov
inc
jg
shll
mov
aad
stc
nop
out
out
jns
push
inc
push
mov
mov
stos
dec
leave
les
pop
lea
push
jbe
dec
pop
push
cmp
and
xchg
ror
rcr
gs
lcall
jnp
pop
cli
xchg
cli
mov
or
xor
or
adc
testb
push
inc
adc
dec
sbb
xchg
int
fmul
and
loope
dec
ljmp
pop
icebp
arpl
mov
dec
jne
fdivl
jnp
cmpsw
int3
call
mov
add
out
xchg
jecxz
stos
aad
sub
popa
cltd
push
mov
mov
sti
pushf
and
imul
jo
fcompl
mov
out
xlat
adc
fldcw
lea
nop
pop
insb
lods
adc
scas
stc
sub
xchg
adc
stc
aas
loope
mov
cld
insl
imul
push
rcrl
sbb
jae
mov
push
shr
mov
lods
aas
sub
xor
aas
int
dec
loope
cmp
or
sub
lret
sbb
les
clc
mov
push
cmp
pusha
repz
jge
je
mov
bound
loope
inc
jmp
cmp
arpl
jecxz
pop
loopne
mov
jp
or
repnz
or
out
lret
call
aam
xchg
xor
in
and
dec
insb
push
je
sbb
push
out
aad
inc
or
mov
imul
xorb
mov
adc
cmpsb
sub
mov
loopne
pop
push
xchg
sub
adc
jae
or
xchg
insb
jne
sbb
aam
pop
and
mov
push
lock
cmp
stos
inc
fwait
mov
xlat
popa
fld
scas
add
arpl
aam
outsl
test
outsb
pop
or
icebp
repz
xchg
inc
mov
inc
pop
push
mov
sarb
pop
aas
cmpsl
outsl
sbb
xchg
xor
mov
inc
xchg
sti
mov
sbb
addl
enter
mov
je
mov
mov
insb
jno
clc
pop
xchg
imul
mov
sub
jg
in
insl
inc
mov
clc
push
lock
jnp
mov
push
outsb
mov
lcall
ret
and
nop
pop
in
push
cltd
add
sahf
xchg
popa
xchg
xchg
sub
jne
lcall
jecxz
add
je
arpl
pop
ror
out
je
mov
add
push
inc
push
cmpsl
inc
or
push
jecxz
insl
inc
insl
or
mov
testb
fistps
push
add
push
add
fnsave
push
ror
xchg
adc
pushf
push
cmp
lea
adc
leave
pop
in
out
out
movlps
insl
mov
icebp
movsl
out
sbb
sub
xor
pop
sbb
mov
mov
mov
mov
mov
cmp
dec
adc
lcall
cmp
ficompl
pop
inc
mov
test
dec
mov
mov
lds
push
pop
jl
push
sbb
sbb
push
inc
sub
ret
jne
mov
sahf
dec
dec
mov
fldpi
loopne
stos
arpl
jnp
pop
andb
lret
fidivs
adc
icebp
push
lea
aas
adc
jp
sbb
dec
add
out
test
pop
jns
dec
gs
push
xlat
jbe
sarl
adc
inc
add
sbb
jns
xor
cmpsb
xchg
jge
cmp
adc
ja
sbb
add
fdivl
sub
daa
lahf
mov
mov
jb
mov
arpl
push
mov
adc
shlb
fs
sti
and
daa
jbe
pushf
add
lret
outsb
call
mov
in
rolb
inc
add
add
mov
loope
scas
in
leave
imull
dec
es
pop
push
pushf
adc
jo
jo
mov
push
pop
fs
or
dec
icebp
mov
mov
mov
cli
mov
mov
cmp
jae
push
push
in
notl
jecxz
add
in
bound
in
in
aas
push
dec
lahf
mov
sbb
dec
sub
sbb
cmp
out
inc
mov
iret
xor
adc
adc
mov
sub
movsb
xchg
sbb
add
test
or
mov
jae
aad
mov
insb
dec
or
mov
cld
js
mov
int3
and
fwait
mov
jecxz
jnp
ret
sbb
push
push
adc
pop
adc
push
or
mov
pop
mov
sub
dec
cli
jbe
mov
push
shlb
aaa
movaps
aas
lock
and
imul
or
mov
es
sub
ja
pop
mov
adc
dec
push
imul
push
stos
sbb
add
sbbb
lret
dec
js
subb
call
push
mov
mov
jo
shrl
pushf
je
lahf
sbb
daa
push
xor
push
mov
test
rorb
xchg
xchg
fwait
xchg
aaa
dec
pusha
in
lock
push
push
jne
das
fcompl
push
daa
in
stc
xorl
shll
call
mov
bnd
out
jo
jb
fiadds
insb
add
push
repz
ja
mov
mov
ja
ror
xor
psllw
mov
push
pop
lods
lcall
gs
cmp
or
sti
xchg
in
cmc
out
in
les
add
inc
push
dec
mov
pop
mov
xchg
adc
push
jo
pop
scas
and
push
push
jbe
jnp
fmulp
sbb
aaa
int3
push
ja
lret
jo
enter
enter
mov
std
xchg
cmp
sub
or
mov
jecxz
mov
into
sbb
int
mov
or
and
mov
sub
jnp
fwait
mov
shrl
stos
mov
int3
mov
xchg
call
cmp
std
push
mov
das
mov
loopne
dec
movsb
adc
add
ljmp
mov
mov
fidivs
push
and
xchg
or
mov
jge
rolb
mov
xchg
push
pop
inc
mov
mov
in
lea
leave
cli
enter
test
xchg
cli
incb
mov
int
ret
sub
ja
xchg
aad
sbb
stos
mov
mov
jge
sub
loope
movsb
rcr
pushf
jns
and
jle
scas
xchg
pop
xchg
sbb
test
mov
or
xchg
jmp
lret
popf
sbb
scas
out
xchg
push
loope
or
push
out
scas
add
or
outsb
das
incb
and
xchg
cmpsb
scas
cmp
stos
fwait
outsl
sub
mov
xor
mov
mov
fnstcw
push
dec
jge
inc
jns
pop
push
push
push
in
pop
pop
arpl
jmp
mov
cmovs
jp
sahf
out
test
dec
mov
loope,pt
push
dec
cltd
or
dec
cmp
mov
in
leave
imul
or
adc
push
stos
daa
xlat
xor
enter
insl
shlb
aam
movsb
fwait
or
adc
test
sti
adc
pop
aaa
xor
daa
icebp
cld
sbb
out
jne
and
xchg
scas
mov
adc
adc
push
pushf
push
cmp
jae
inc
jg
aas
xor
daa
add
xor
rcl
out
adc
jae
and
imul
cmc
fldcw
jmp
adc
dec
testb
iret
ret
dec
and
dec
shll
sti
mov
sub
adc
repnz
pop
in
dec
mov
jle
xchg
cmp
ret
xlat
cld
sbb
rcrl
mov
icebp
add
mov
test
fwait
dec
int
out
inc
adc
sarl
mov
jae
lret
imulb
xchg
lods
clc
dec
dec
imul
std
fistps
and
cmp
xlat
aad
mov
mov
xchg
cwtl
mov
cmpsl
mov
scas
cltd
mov
dec
insl
and
out
mov
or
fimull
lret
xchg
cld
and
xchg
mov
cltd
icebp
cmc
mov
int3
mov
adc
loopne
orb
pop
lahf
mov
out
mov
mov
fdiv
jge
and
testl
vpermd
in
iret
lods
xchg
mov
andb
or
int
and
popa
or
cmpsb
fisubrl
dec
iret
adc
pop
sti
nop
fcomps
or
add
cmpsb
pushf
int3
enter
jp
nop
jnp
mov
addb
lahf
mov
mov
negb
dec
and
ret
push
mov
jno
jle
dec
jle
add
jecxz
sub
sahf
leave
cmp
imulb
addr16
icebp
cmpb
pop
cli
sub
das
inc
adc
orb
jb
push
push
pusha
lret
mov
std
mov
bnd
jno
test
xor
sbb
ja
mov
mov
mov
mov
bound
sbbl
mov
inc
cmp
and
xchg
ret
pushf
dec
dec
sbb
loop
push
js
sub
and
inc
pop
sti
cmp
in
sbb
or
push
pop
and
pop
stos
cmc
fistpll
loopne
mov
cli
inc
outsl
mov
mov
inc
and
jae
jo
xchg
jo
mov
bound
add
inc
data16
pop
mov
xor
adcb
popa
push
jecxz
or
jge
push
xchg
ret
in
mov
jbe
movsb
xor
das
sbb
pop
je
sub
mov
push
js
push
gs
adc
stc
lods
daa
int
or
jns
addr16
mov
pop
sub
mov
push
mov
mov
pop
addr16
xor
fdivs
cmp
shll
sbb
pop
rolb
bound
xor
cmp
lahf
out
int3
movsl
pushf
iret
push
mov
adc
test
clc
jmp
adc
imul
and
outsl
insl
in
jno
push
push
xor
xor
adc
sbb
push
rol
int3
outsl
test
scas
lret
sahf
fwait
sub
lock
fistpl
idivb
xchg
aaa
dec
xchg
movsl
push
cwtl
and
sbbb
mov
fdivrs
dec
push
cltd
adc
add
dec
mov
push
cmp
sarl
sbb
lea
dec
gs
js
ficomps
add
cmp
hlt
adc
lock
xorb
inc
test
inc
xchg
xchg
test
push
mov
sarl
jmp
std
loop
ficomps
imul
cmp
loopne
fnsave
add
pop
sub
arpl
cmp
and
xor
mov
ljmp
mov
pop
mov
cmp
pop
lret
inc
sub
out
stos
insb
jecxz
mov
and
stos
dec
es
fdivrs
or
imull
sub
lcall
pop
cmpps
je
jp
dec
cmp
dec
stos
cli
fdivl
aad
inc
ret
push
lds
jb
call
and
and
iret
add
jmp
push
sbb
push
push
js
push
xchg
sub
les
mov
dec
out
push
loope
and
ds
sub
xchg
sbb
jbe
dec
or
ret
pop
hlt
push
in
jge
stos
pop
xor
cmpsb
jno
sub
mov
mov
push
jbe
stos
mov
in
mov
aaa
adc
pop
push
jbe
mov
fbld
cmp
mov
push
pop
jmp
adc
pop
fdivrl
outsb
adc
andb
fwait
fwait
xchg
das
repnz
in
jl
mov
lahf
xchg
mov
scas
cltd
out
out
sti
ds
fs
add
mov
jg
and
int3
hlt
or
fwait
pop
adc
cmpl
add
scas
ja
addr16
hlt
mov
cwtl
mov
mov
jae
test
ljmp
sub
loop
pop
out
loop
andl
mov
xchg
sbb
inc
mov
popa
iret
add
fwait
insb
xchg
or
ret
jns
sub
out
mov
aam
and
cmpsl
lods
insb
jbe
jne
ret
and
cmp
mov
lret
mov
lret
outsb
mov
inc
aam
mov
shrd
hlt
pop
lret
imul
inc
fisubs
je
mov
xor
fcmovu
fs
icebp
pop
in
xor
add
cmpsl
pop
xor
sub
addr16
cs
xor
mov
shll
js
dec
cmp
aam
dec
orl
and
jb
into
scas
std
mov
stos
mov
and
in
xor
xor
inc
push
divl
hlt
mov
hlt
pop
mov
pop
adc
xor
int3
push
mov
push
or
fs
mov
gs
mov
lds
and
add
xchg
cwtl
and
jnp
test
ret
ret
and
repz
shlb
add
mov
movsb
sub
dec
outsl
fldl
mov
push
hlt
pushf
jne
aad
inc
and
lods
mov
shll
adcb
mov
xchg
sti
notl
push
ret
in
cs
cwtl
mov
push
sub
decb
jp
mov
repz
push
mov
and
push
xor
scas
mov
int3
insb
insb
lds
into
mov
push
cwtl
xor
mull
inc
fldt
enter
push
push
add
lea
xor
xchg
inc
test
outsl
sbbl
jecxz
jecxz
lds
inc
inc
ss
fidivs
and
test
dec
push
bound
aas
adc
mov
inc
int3
or
mov
cmp
enter
pop
xor
repz
sub
movsl
inc
stos
ja
dec
enter
xor
pop
and
xchg
pop
shrl
roll
fildll
nop
dec
test
mov
lods
andb
sbb
mov
in
adc
ret
mov
push
mov
pusha
call
loop
jno
dec
mov
adcb
fdivs
pop
loope
out
dec
cmp
xchg
mov
in
push
xor
sbb
xlat
jle
jo
sbb
ja
in
xchg
fbstp
add
test
sub
leave
aad
xchg
cld
jp
lods
push
push
xchg
jb
cmp
stos
mov
lods
pop
fdiv
popf
fcomi
out
jbe
stc
pop
xor
mov
adc
push
out
scas
xorl
dec
out
lods
sbb
aad
jne
lods
out
int
jbe
lock
dec
mov
mov
lock
mov
cltd
pop
fwait
mov
out
pop
divb
repnz
pop
adc
push
je
jl
sub
addr16
loop
es
filds
pop
out
sahf
movsl
sbb
insl
test
pop
icebp
call
push
loopne
xor
inc
mov
mov
inc
xor
mov
cmp
cmp
out
call
jg
xchg
out
std
fcomp
lods
lea
mov
xor
icebp
mov
xorl
lret
into
adc
mov
or
lds
ret
mov
mov
jnp
inc
add
cs
push
xchg
outsb
sar
mov
int3
sarb
sahf
daa
popa
push
and
out
jnp
mov
add
xchg
outsl
and
ds
orb
cld
nop
push
fnstcw
les
mov
xor
in
fcomp
cwtl
inc
inc
inc
mov
mov
xchg
daa
andb
jmp
inc
test
inc
enter
dec
sub
sub
in
jle
mov
cmp
pop
dec
adc
sub
rorl
xchg
xlat
jge
mov
inc
scas
cmp
sti
push
aad
push
xor
sbbl
rcl
mov
inc
or
mov
clc
add
pop
jle
xchg
out
sar
lret
inc
mov
cs
cmpsl
and
cmc
mov
xor
jmp
adc
sbb
mov
outsl
ljmp
mov
push
dec
jns
rcrb
int
sti
sbb
pusha
sbb
adc
jnp
add
ss
dec
mov
jecxz
jg
add
scas
sbb
sbb
dec
test
xchg
pushl
pop
inc
xor
insb
pop
sar
negl
sub
stos
lahf
sub
shlb
dec
loop
pusha
and
aad
test
adc
fwait
lret
inc
stos
int
test
xor
cmp
mov
adc
sub
pop
aaa
and
xchg
pop
in
xchg
sub
push
aaa
lods
xchg
in
test
mov
fidivl
adc
cld
jge
bound
jp
mov
and
push
inc
inc
sbb
ret
scas
pop
cmp
mov
adc
iret
xor
scas
sub
xchg
or
xchg
jae
aas
inc
ds
in
inc
jecxz
out
push
stos
pop
ret
loopne
enter
add
sub
jnp
push
xchg
std
and
mov
push
out
stos
movsl
pop
dec
cwtl
sub
jge
data16
in
push
popf
add
test
push
cmpsb
cmpsb
cltd
jge
lea
add
sti
nop
jmp
out
inc
xor
aaa
popa
add
mov
add
sbb
sbb
mov
sub
mov
aad
test
and
push
xor
or
ljmp
cmp
sub
and
cld
jl
dec
and
push
cltd
add
xchg
push
jne
sub
cmc
mov
fidivl
inc
shlb
or
lahf
inc
js
pop
lret
insb
cmp
stc
rcrb
stc
pop
cmp
sub
nop
test
loopne
scas
hlt
adc
push
mov
stos
fbstp
rclb
int3
mov
pop
fstpt
ljmp
xchg
imul
jmp
inc
mov
and
fdivs
sub
popa
dec
mov
js
and
adc
cltd
fcompl
xchg
fs
sub
xor
cmpsl
cmp
in
mov
or
add
insl
jmp
or
mov
ss
fidivl
popa
sbb
aam
inc
scas
or
cltd
push
icebp
jno
imul
xor
xchg
dec
outsl
pop
adc
stc
xor
rorl
popa
dec
jno
es
jmp
cmp
insl
sub
jns
mov
mov
jecxz
sbb
mov
lea
sub
shrl
add
imul
lods
loope
sbb
xor
dec
push
push
mov
or
addr16
inc
or
lea
mov
nop
shll
mov
out
hlt
jp
or
test
cli
xor
mov
xchg
adc
jb
out
xchg
or
cld
cmp
xchg
test
sub
enter
gs
mov
ftst
das
or
cmc
push
in
fs
cmp
add
add
lods
push
lcall
test
movsb
shlb
or
jo
xchg
xchg
insb
fcmovnb
mov
sub
jbe
enter
jmp
mov
add
add
or
and
sti
addr16
in
je
stos
sbb
xchg
mov
into
jp
jns
pandn
ret
xchg
or
js
mov
cmp
push
cmp
lcall
and
out
inc
push
aam
int3
lock
loope
adcb
ja
mov
mulb
cmp
inc
out
mov
mov
sub
bndstx
sub
popf
adc
jnp
enter
mov
and
test
adc
stc
adc
cmp
add
jbe
les
add
add
inc
add
and
mov
outsb
sbb
in
ljmp
lret
add
mov
mov
jae
fisubs
in
dec
aas
lcall
je
adc
test
aas
out
xor
lret
je
or
enter
sub
shlb
jb
or
les
je
lods
fwait
or
insb
jb
add
mov
xchg
sti
pop
pop
sbb
mov
jbe
lods
fistpl
xor
adc
cltd
dec
or
add
insl
mov
mov
pop
pop
or
test
arpl
mov
and
and
test
fs
vsqrtss
cmpsb
fld
dec
pop
gs
xor
sub
cmp
push
sub
jl
inc
es
loopne
stos
add
int
sti
fwait
scas
cli
xor
cmpsb
xchg
fbld
scas
rorb
pop
jns
or
inc
cmp
aaa
lds
mov
jmp
scas
pushf
stc
mov
clc
mov
xor
lahf
out
cltd
test
shrl
stc
rcrl
pop
xchg
addb
lods
sbb
addr16
mov
or
push
aad
iret
push
iret
sbb
sarb
out
adc
sbb
cmp
jb
jnp
clc
ja
and
xchg
mov
into
mov
cltd
cmpsb
jbe
sub
fs
movsb
shrb
mov
loop
mov
xor
jmp
jmp
inc
insb
xchg
add
loop
fwait
mov
dec
and
xchg
push
jmp
test
push
cmc
imul
test
test
sarb
dec
mov
mov
push
lret
in
jmp
outsl
jbe
dec
test
addr16
lods
fidivl
jae
lds
mov
insl
call
sub
push
dec
xor
jo
pushf
mov
add
jle
mov
call
xor
sub
fldt
ss
push
inc
inc
jecxz
popf
in
mov
mov
mov
daa
loop
xor
or
jge
stos
aas
int
jbe
mov
les
out
push
mov
mov
pop
stc
jecxz
incb
into
jmp
cmpsb
in
xchg
fadds
sti
ljmp
mov
cmp
jge
mov
js
in
mov
test
xchg
mov
test
iret
rcll
imul
cmc
jne
nop
shrl
jecxz
ss
loopne
inc
popa
or
dec
push
xchg
push
pop
mov
das
mov
xor
das
sarb
mov
mov
test
shll
movb
iret
mov
cli
cmp
mov
popf
addr16
testb
imul
xor
sbb
es
ss
ja
pop
incl
mov
imul
inc
js
mov
dec
jae
rclb
push
push
mov
mov
ficoml
cmp
arpl
dec
dec
in
loopne
popa
mov
add
dec
imul
xchg
lcall
mov
mov
arpl
filds
sub
lods
push
test
jp
xor
xor
repnz
sti
hlt
mov
fistl
nop
or
ror
dec
mov
in
sub
dec
adc
add
cltd
jae
or
sub
ficoms
push
aas
jae
sti
push
push
inc
rcll
jbe
dec
or
mov
inc
ficomps
hlt
push
aad
pop
aam
xor
xchg
mov
int3
pop
mov
xchg
mov
insb
push
sub
and
test
adc
fwait
cltd
lcall
pop
test
mov
testb
jmp
out
sarb
sub
pop
and
or
out
out
add
jge
jns
mov
in
scas
jae
adc
lds
cld
imul
lods
xlat
pop
push
loopne
loopne
inc
pop
mov
inc
fmull
mov
pop
in
push
pop
xchg
les
jp
inc
xor
sbb
and
mov
loope
shrl
mov
out
loopne
stos
adc
inc
cmp
push
xchg
cwtl
xchg
xchg
pop
leave
dec
je
dec
int
push
mov
cli
jnp
fnstenv
and
jnp
clc
or
ret
pop
cmpsl
ja
mov
xchg
jo
nop
mov
dec
test
dec
cmpl
dec
adc
dec
fcompl
popf
dec
insb
dec
pop
loop
push
insb
fsubrl
loop
cmp
xchg
int
mov
call
adc
pop
hlt
adc
xor
int3
inc
sbb
aam
test
aas
adc
inc
pop
adc
stc
inc
jb
lea
mov
or
call
xchg
scas
test
icebp
xor
xchg
outsb
out
sbbb
fisubrs
sub
adcl
mov
mov
je
test
mov
lcall
loop
mov
jnp
sub
add
leave
or
push
sbb
dec
xchg
cmp
lret
mov
jle
pop
faddp
pop
push
nop
ja
jnp
imul
mov
fcmovb
std
mov
push
and
adc
loopw
xchg
push
xchg
pop
std
cmc
add
out
test
adc
pop
fdivs
mov
pop
xor
cwtl
into
pop
pop
shlb
out
dec
and
mov
inc
inc
cmp
test
testl
mov
mov
cmc
lods
jno
xor
cld
mov
jmp
test
sub
mov
xor
pavgb
addr16
pop
cmp
push
adc
rcrl
push
lds
push
fisttps
inc
mov
popf
adc
addr16
ret
aaa
pop
or
inc
pusha
cmpsb
adc
fwait
add
outsb
test
pop
jne
lret
fdivl
inc
dec
mov
rclb
mov
ljmp
mov
sbb
push
mov
call
add
sti
xchg
xchg
push
lods
outsb
jmp
fbstp
jg
mov
mov
xor
xchg
or
call
xlat
or
dec
sub
pop
inc
sub
mov
mov
or
jmp
xchg
cli
cli
out
stos
or
push
and
xor
push
mov
movups
icebp
sub
fucomp
pop
stos
push
jno
js
fstpt
lock
lahf
lret
aad
out
inc
sarb
daa
out
out
push
lcall
sahf
dec
repz
mov
out
cmp
loop
es
sub
popf
jno
gs
inc
inc
mov
adc
call
fcmovnu
fneni(8087
cld
fs
dec
lret
gs
inc
lods
out
sub
mov
push
sub
fistpl
daa
ljmp
xor
ret
out
leave
and
xor
adc
mov
jecxz
dec
test
mov
jmp
es
sub
pushf
sbb
xchg
jo
mov
mov
lods
adc
xor
pop
push
mov
or
insb
lret
fnstenv
adc
fcomps
int3
pop
das
fstl
or
push
mov
inc
shll
mov
cmp
in
shl
jg
les
xchg
rorb
data16
xor
sbb
test
xor
ret
xor
cmpsl
push
lret
gs
cmp
xor
xchg
ficoml
cwtl
inc
and
push
or
cmc
cmp
add
cmp
adcl
push
loop
es
add
int3
cli
scas
or
mov
popf
data16
clc
das
add
leave
rep
xchg
pop
add
clc
mov
mov
out
or
dec
or
stc
loop
lret
std
into
stos
out
cmp
mov
rolb
jl
dec
push
sbb
int3
mov
pop
xchg
ja
mov
fbstp
bound
lods
xchg
bound
cmc
test
test
or
and
shrl
mov
in
call
dec
bound
and
xchg
add
push
lods
gs
push
fwait
mov
hlt
cli
xor
mov
das
sub
push
push
enter
jg
movsl
mov
loop
mov
bound
fnstsw
int3
in
mov
dec
push
jnp
aad
test
pop
movsl
push
out
add
decb
jle
mov
adc
test
pop
add
mov
adc
movsl
cmc
rcrl
sbb
in
mov
mov
mov
sti
ficoms
lds
in
jns
subl
jae
sbb
jnp
or
ret
xorl
mov
mov
lahf
xchg
push
test
out
inc
arpl
and
jnp
or
inc
xchg
adc
outsb
jecxz
xchg
out
mov
mov
pop
fmull
pop
fdivrl
movsl
jmp
mov
fldt
mull
push
sti
lret
sub
ss
jp
sbb
mov
jg
sub
inc
shlb
into
das
dec
add
stc
sub
in
iret
mov
in
in
add
jbe
or
ds
push
sbb
outsl
cwtl
clc
dec
fcompl
dec
jns
arpl
imul
dec
shrb
fstpl
gs
jae
sub
cltd
fildl
add
js
xlat
cmpsl
test
and
aad
cli
add
rcrl
push
mov
jne
dec
jb
push
cmp
lods
mov
iret
sub
rcl
mov
lahf
into
sbb
out
jecxz
push
sbb
pop
inc
push
cmp
push
clc
add
dec
fcom
gs
mov
stos
loopne
jg
mov
in
inc
shlb
leave
mov
jmp
jbe
std
out
fadds
lock
mov
cmpsb
pop
jecxz
vsubss
hlt
into
or
rcrw
lea
dec
test
fistps
xor
sarl
ret
cmpsl
push
inc
push
inc
lock
fldt
xor
lock
cli
lods
ja
jns
pop
mov
movsl
inc
loope
inc
xchg
jmp
push
in
pop
mov
add
or
add
push
inc
ret
pop
jbe
mov
jns
mov
pop
jns
inc
cs
push
and
and
xchg
sbb
jl
and
mov
bound
mov
jg
inc
std
ja
int3
jno
or
and
sub
lahf
stos
push
mov
or
fs
int
mov
mov
das
iret
dec
cmp
shrl
jo
jge
jecxz
ffreep
mov
sub
ja
sub
mov
mov
into
add
dec
sbbb
ljmp
fs
sub
mov
pop
push
and
test
mov
adc
inc
push
inc
pop
pop
mov
add
ret
pop
xor
aam
cmp
sub
adc
push
out
mov
add
sbb
mov
inc
jmp
sahf
fmuls
lret
lcall
xor
neg
repnz
inc
mov
adc
sub
clc
sub
pop
mulb
sbb
nop
and
pushf
mov
push
dec
fstpl
fadds
sbb
or
pop
or
jb
ss
lahf
pop
sarl
ljmp
cmp
repnz
adc
pop
lds
cmpsl
or
rorb
scas
adc
scas
aaa
fimull
mov
dec
out
cmp
sbb
sbb
je
mov
and
pop
sub
rorb
mov
into
push
sbb
jno
movsb
jl
sbb
repnz
jbe
mov
lock
movsl
aaa
sbb
js
cltd
xor
push
jne
dec
pop
fcompl
add
psubd
stc
mov
push
mov
cli
pop
mov
adc
ror
dec
stos
shrl
sbb
push
popa
xchg
mov
mov
rorl
xor
pop
mov
mov
out
cmpsl
pop
jbe
and
pop
xchg
mov
dec
cmp
div
in
mov
les
loopne
push
insl
cmp
inc
in
bound
jge
jmp
ret
or
pusha
pop
mov
xor
adc
rol
mov
je
push
aam
pop
enter
adc
lahf
cli
push
jbe
fwait
push
repnz
scas
lods
lahf
cmp
xor
mov
xchg
adc
je
daa
mov
cmp
mov
imul
aam
sub
aad
mov
xchg
push
out
add
xor
cmc
fnsave
push
pop
movsb
repnz
call
or
add
pop
dec
lock
divl
sti
push
add
cmpsl
sbb
into
cmpb
sub
cmc
aam
fs
aad
xchg
bound
arpl
jo
push
push
push
in
fs
or
and
inc
sub
sub
dec
stos
test
movsb
cmp
cwtl
pop
mov
popw
mov
pop
inc
rorl
cmpsb
fidivrl
mov
xchg
xor
pop
pop
scas
push
jae
pmaxub
push
jns
mov
test
lahf
xchg
out
bound
and
adc
fmul
test
mov
or
cltd
mov
and
sub
dec
and
add
mov
xchg
add
jno
ret
sbb
sub
repnz
dec
dec
in
in
fcoml
inc
jg
and
sub
mov
movsb
lock
mov
cmpb
inc
aas
xchg
pop
adc
dec
cmpsb
sahf
pop
cmp
xchg
and
ja
sbb
out
stc
aad
mov
or
push
adc
push
stos
cli
arpl
and
std
div
xchg
sarb
xchg
and
cmp
roll
cmp
enter
mov
jnp
loopne
xor
xor
mov
aaa
xchg
lods
mov
xchg
popa
jo
xchg
sub
out
jns
mov
xchg
push
push
mov
andl
mov
imul
pop
cmp
mov
add
or
popa
arpl
addr16
add
xor
and
int
mov
dec
into
xor
dec
or
sbb
mov
in
inc
jns
add
pop
bound
cmpsl
icebp
jg
adc
js
lds
arpl
pop
add
cmpsl
pop
jmp
and
sub
sbb
xor
mov
ss
pop
stc
outsl
add
cmp
dec
inc
scas
ss
xchg
icebp
cmovl
mov
mov
pop
repz
fldcw
stc
xchg
adc
jle
je
push
sbb
dec
xor
xchg
xchg
dec
pop
xchg
lahf
xor
xlat
pop
mov
fidivrl
das
or
and
mov
inc
mov
mov
popf
adc
lods
mov
mov
adc
mov
movsl
dec
mov
mov
les
in
repz
mov
out
push
pop
or
dec
int3
icebp
add
mov
in
out
es
cwtl
dec
mov
int
imul
nop
or
xchg
pop
out
jb
mov
mov
mov
push
ds
push
pop
and
cmp
xor
jp
adc
pmulhw
loop
cltd
push
xchg
cwtl
popf
inc
sub
or
add
inc
popa
mov
shrb
sub
mov
stc
jmp
adc
push
cmp
and
ret
fdivp
pop
push
push
int3
fisubrs
jle
mov
push
in
push
mov
mov
or
dec
xlat
add
aad
push
push
pop
or
mov
push
jl
cwtl
adc
xlat
sub
scas
sbb
push
or
pop
jne
jle
ljmp
movsl
lods
jbe
leave
int3
xor
inc
xchg
xchg
aam
xor
pop
or
outsb
rcl
hlt
gs
or
push
jle
jae
daa
dec
test
loope
mov
insl
movsl
lods
fs
arpl
movsb
dec
pusha
mull
imul
xchg
adc
jns
mov
mov
sbb
loopne
add
dec
shlb
loopne
cltd
jo
mov
sbb
jne
push
enter
mov
aad
xchg
lods
dec
movsb
popf
cli
int3
sbb
xor
cs
and
into
testb
push
push
jecxz
in
iret
pop
sbb
dec
mov
mov
cmp
test
xor
cli
mov
dec
lock
inc
push
lret
out
push
add
dec
sbb
paddusb
getsec
xor
jge
dec
mov
jmp
mov
aas
ss
hlt
adc
dec
out
xor
lcall
repz
lea
loopne
mov
cmp
daa
ljmp
cmp
aam
std
xor
enter
sub
adcb
movsb
xchg
pop
shl
adc
xor
sbb
and
int
jnp
xchg
sub
add
es
add
pop
clc
jecxz
cli
pop
mov
add
jae
rol
or
mov
mov
inc
xor
fwait
pop
arpl
int
mov
fs
je
push
loope
push
mov
jmp
xchg
or
jecxz
adc
xchg
mov
fisubl
jns
mov
push
jbe
enter
inc
pop
hlt
sbb
xchg
fcmove
cwtl
out
test
imul
jge
jae
stc
push
addr16
xchg
push
and
rcll
jne
jl
push
sar
shll
inc
mov
call
fwait
xor
stc
sbb
push
inc
cmp
push
repnz
push
cmp
mov
stc
mov
call
lahf
mov
mov
leave
ds
scas
cmpsb
cmpsb
lret
mov
loopne
jnp
xchg
or
dec
bound
add
gs
lret
sub
mov
mov
jg
dec
in
mov
inc
sbb
daa
iret
mov
adc
or
dec
es
std
imul
test
divb
cmp
mov
adc
mov
sahf
sbb
jnp
push
xlat
inc
pushf
add
ret
insl
mov
sti
mov
push
or
push
sarl
cmpsl
loopne
scas
push
mov
lods
cmp
adc
cmp
lcall
xor
scas
adc
imul
out
rcrb
imul
xor
aad
cld
push
fistps
cwtl
cltd
scas
sbb
leavew
cli
dec
mov
dec
xchg
add
mov
or
imul
sub
test
addr16
jns
out
mov
mov
rclb
inc
test
mov
jl
jo
daa
sbb
std
lahf
push
dec
das
cltd
ret
jb,pt
fmuls
rol
test
in
int
enter
lret
push
push
mov
dec
and
cmpsl
orl
daa
cmp
or
and
stc
fistpll
dec
pop
xchg
jbe
aam
push
inc
xchg
outsl
mov
and
cmp
aam
mov
pop
sar
adc
incl
fs
xchg
out
test
ret
insl
movsb
les
mov
cli
rclb
lock
xor
jo
movsl
loop
in
mov
sub
js
add
outsl
cmp
nop
iret
shl
jo
aaa
or
or
jge
inc
xchg
mov
in
rorl
mov
popa
push
jae
cld
lret
jb
fadds
shrl
loop
out
ljmp
mov
lds
imul
lods
xlat
imul
jne
faddp
in
cmc
inc
xor
lahf
add
inc
or
push
push
xchg
cld
or
sti
cmp
dec
pop
cmp
scas
push
fistps
push
pusha
je
cmp
ljmp
push
cs
icebp
xchg
sub
xor
adc
mov
mov
lahf
push
lcall
sbb
lahf
sub
fs
into
jnp
sbb
scas
lret
jo
and
jb
cs
or
enter
pop
jp
daa
inc
lods
push
and
icebp
dec
scas
xor
repnz
jno
lods
mov
ret
addl
cmp
bound
jmp
jnp
or
iret
popa
pop
ss
cmc
rclb
in
test
or
sbb
adc
repz
sarl
adc
xor
mov
les
call
icebp
and
repz
mov
mov
in
jmp
cs
cmp
test
gs
or
push
ljmp
mov
mov
lods
dec
add
xor
xchg
sahf
loope
cmc
divl
sbb
push
stos
push
pop
pop
outsb
daa
xor
dec
push
sbb
ss
mov
inc
fmuls
je
popa
gs
xchg
pop
out
fcompl
clc
xor
lock
cmp
fcoml
inc
mov
cvttps2pi
clc
std
inc
cld
xchg
and
jno
fwait
sarb
adc
xchg
pop
fsubp
mov
cmp
add
movzwl
xor
js
loop
xchg
test
bound
mov
repz
and
and
jg
sbb
lcall
pop
mov
xchg
loope
test
imul
int3
lea
push
push
cmpsl
xchg
or
cld
inc
leave
test
and
pop
ret
and
mov
icebp
out
and
outsl
rcrl
iret
adc
sub
neg
adc
sbb
loopne
push
xor
int
mov
addb
ds
stc
pop
xchg
sbbl
or
fld
xchg
fdivp
test
mov
ljmp
sub
jl
je
jbe
cmpsb
outsb
mov
xchg
pop
daa
clc
popa
push
fnstenv
lods
dec
inc
lea
ror
in
xchg
cmp
mov
jmp
sbb
arpl
mov
popf
fs
inc
add
sub
lcall
push
pushf
mov
jae
push
xor
jno
push
push
mov
add
cmc
popa
adcl
enter
ss
sbb
pop
dec
into
and
ret
ss
addr16
mov
stos
lcall
test
inc
add
imul
aaa
hlt
dec
pop
pop
add
jl
jecxz
mov
iret
sahf
xor
dec
call
sti
popa
out
mov
jmp
test
adc
cltd
pop
aam
cmpsl
sub
mull
sub
insl
jbe
mov
ja
dec
out
hlt
push
mov
loopne
stc
pusha
js
test
lods
jo
insl
icebp
sub
je
clc
xrelease
repz
aaa
orl
mov
stos
subl
pop
stos
or
incb
jecxz
sub
and
sub
cmp
cmp
jne
push
outsb
adc
dec
fs
loope
aad
adc
data16
arpl
and
shlb
xchg
jo
add
daa
mov
nop
ds
push
sub
xor
fmul
mov
sub
int
mov
ret
into
push
stos
or
fsubrs
mov
jle
pop
ljmp
jns
jmp
jecxz
sub
dec
lds
scas
or
sar
dec
lods
xchg
push
insb
jge
addr16
test
xchg
clc
stos
call
push
repnz
add
mov
movsb
inc
lret
sbb
push
cmp
mov
test
fs
jo
dec
cmp
dec
xchg
add
jbe
add
add
imul
mov
pop
push
push
mov
add
decb
cmp
sub
mov
scas
inc
add
pop
fcomi
repz
pop
fisubrl
mov
out
cmp
mov
lahf
and
sbb
mov
shr
lcall
jp,pn
adc
das
leave
mov
or
mov
push
push
jecxz
lea
je
pop
ss
cmpb
int3
mov
lret
dec
sub
dec
push
movsb
into
in
gs
fsubl
aaa
mov
mov
jb
movsl
jmp
mov
push
idivb
fistpll
mov
push
cs
xchg
jecxz
or
roll
mov
mov
imull
or
fsubrp
sbbl
lcall
aad
sub
mov
out
or
arpl
adc
dec
lret
out
sub
sub
and
cmp
mov
cld
daa
xchg
mov
mov
mov
std
ljmp
mov
xor
mov
iret
jae
out
leave
jp
lahf
push
arpl
push
dec
xor
inc
dec
jne
adc
leave
and
xchg
sub
sbb
pop
mov
sub
fisubl
push
xchg
inc
mov
sti
or
ret
push
and
test
sbb
xor
mov
scas
idivb
push
mov
sbb
test
pushf
jl
sub
and
daa
ss
xchg
aaa
mov
dec
es
mov
jbe
pop
dec
mov
and
mov
shll
sub
orl
adcl
je
add
adc
lods
cmpsl
pop
jge
hlt
adc
scas
pushf
in
loopne
mov
sub
xor
dec
in
mov
push
push
jl
add
mov
test
in
imul
mov
ret
and
test
dec
pop
push
repz
xor
std
inc
hlt
dec
lahf
and
jns
insl
sub
jge
test
pushf
mov
xor
inc
mov
cmp
mov
fmull
fdivrl
stc
pop
int
mov
cmc
out
gs
mov
dec
call
jb
adc
lea
mov
in
imul
ja
pop
pop
hlt
out
and
fsubl
mov
je
ret
imul
icebp
sbb
popa
mov
or
and
popa
xor
lods
inc
push
test
jno
cmp
aas
or
add
inc
dec
sbb
sbbl
lahf
push
jecxz
aam
stos
adc
add
and
into
rorl
arpl
sub
rcl
mov
adc
sbb
add
jb
push
xor
das
mov
mov
fmull
lods
mov
movq
sub
adcb
or
aas
jno
mov
dec
std
fnstcw
mov
xchg
orl
xchg
stc
in
push
ljmp
cmp
aam
mov
and
rcl
push
shl
jmp
and
sub
xlat
pushf
mov
sarl
scas
dec
outsl
out
jb
adc
push
cmp
jl
rclb
xchg
or
add
mov
clc
mov
mov
shll
aam
pushf
std
xchg
push
scas
xchg
push
pushf
rclb
cwtl
mov
jne
iret
jo
fistps
sti
jno
insb
pop
mov
je
xchg
xor
jns
loope
les
push
inc
jbe
movsb
in
push
mov
inc
sahf
cmp
cwtl
cmp
sub
ja
mov
push
ljmp
or
jge
rorb
inc
mov
sbb
sub
ja
cmp
adc
mov
insb
push
inc
adc
xchg
or
jmp
adc
push
xchg
adc
in
push
adcb
mov
mov
clc
idivb
jge
mov
test
mov
mov
inc
jp
sub
jae
xchg
into
push
inc
xor
es
push
jg
inc
dec
jle
lret
imulb
test
sub
je
push
mov
and
aaa
mov
movsb
outsb
xchg
pop
mov
pop
pop
sub
dec
pop
jge,pt
mov
and
repnz
pusha
cmp
cmpsl
adc
cmp
int
sub
imulb
loopne
and
sbb
cli
decl
xor
mov
xlat
leave
xor
ja
sbb
adc
or
sub
test
dec
xchg
movsb
movsb
jbe
enter
mov
jp
mov
aam
inc
sub
leave
stos
setl
sbbl
popa
pushf
dec
mov
lahf
scas
add
inc
or
push
push
ja
jb
stc
add
mov
aas
or
scas
daa
imul
push
das
cmp
pop
cmpsb
jge
adc
cmp
mov
in
add
lea
and
xchg
xchg
sub
push
cmp
inc
pusha
push
loope
pop
nop
negb
in
cmp
and
mov
sub
hlt
jne
mov
add
mov
mov
dec
inc
pop
add
pop
cli
push
dec
dec
jg
sbb
sahf
jb
mov
mov
aad
loop
mov
gs
bound
xlat
andb
push
mov
lock
scas
mov
mov
xchg
cld
pop
ljmp
cmp
int
in
cmpb
fdivrs
dec
dec
adc
cmp
lea
testb
mov
cmp
or
xchg
xchg
cmp
add
ds
push
inc
out
sbb
jle
inc
xchg
jo
lods
and
pop
fmuls
cmp
xor
dec
sub
cs
jge
xor
cmp
leave
rol
or
clc
lock
jns
sbb
repnz
xchg
stc
inc
sub
or
iret
cli
in
jle
jle
dec
add
gs
mov
mov
add
scas
pop
in
aaa
mov
add
arpl
xchg
stos
or
xchg
dec
imul
fwait
adc
inc
xor
cmpsl
int
mov
push
roll
divl
fldcw
mov
pop
popf
lods
jb
push
xchg
lods
lea
loope
into
add
cli
jl
pop
inc
popa
nop
into
xchg
mov
dec
addr16
xor
inc
mulb
jmp
jge
jmp
push
ss
and
mov
popf
sub
pop
mov
iret
cmpsb
hlt
push
xchg
pusha
in
mov
or
shrb
sub
push
add
adcb
out
insl
sub
insl
cwtl
add
mov
stos
adc
or
push
jb
into
dec
out
pop
jp
jbe
mov
push
aaa
dec
push
xchg
int3
mov
pop
pop
xchg
mov
shrb
pop
push
dec
arpl
adcl
fcom
jg
aam
dec
lods
cld
push
aaa
or
js
push
mov
jle
xor
bound
fstpt
lock
lcall
inc
or
popf
cwtl
test
outsb
jl
mov
shll
repz
adc
push
xor
add
stos
test
sahf
cmp
inc
adc
cmp
lock
and
cmpsl
orb
les
mov
mov
mov
adc
adc
jp
xor
and
fstps
test
lcall
fidivrl
pop
lahf
xchg
test
std
jecxz
fimull
in
cs
sbb
lock
insl
xor
insl
leave
jle
es
fildl
mov
dec
movsl
xor
mov
fisttpll
fwait
cmp
mov
movsl
ljmp
repnz
dec
xchg
adc
add
inc
mov
mov
hlt
cltd
js
mov
imul
inc
in
jno
or
add
in
adc
ja
ds
add
jns
aaa
or
sbb
movd
call
jne
add
out
mov
dec
adc
cmp
out
inc
push
call
jno
fmul
cltd
lock
pop
rorl
push
frstor
clc
hlt
sti
lods
std
adc
ror
xor
adc
inc
jbe
leave
mov
dec
cld
out
data16
scas
cmc
sbbb
add
rcll
loope
or
add
roll
inc
out
je
or
pop
and
bnd
int
nop
and
es
mov
add
push
adc
xchg
cwtl
ret
xchg
data16
and
adc
jp
push
lret
dec
sub
test
fsubrl
or
insl
xchg
sbb
sti
decl
mov
jbe
mov
xchg
push
push
testl
jb
mov
out
clc
add
pop
fs
jno
push
xchg
jbe
leave
mov
cmp
je
mov
and
imul
sub
dec
jmp
lock
jg
rorl
orb
cmpb
daa
flds
lods
or
adc
add
mov
mov
jae
jae
imul
test
sub
sbb
in
sbbb
pop
xchg
stc
pop
and
dec
pop
lcall
adc
mov
pop
out
mov
push
mov
push
mov
outsl
fwait
cmpsl
or
insb
fbld
out
shll
fdivl
add
add
ss
lret
lret
jl
cmp
loopne
sbbb
dec
pop
or
out
fidivl
xchg
popa
mov
inc
aad
repnz
mov
mov
in
sbb
cmp
jnp
nop
adc
fs
dec
fsubl
lock
add
rcll
push
test
out
adc
lahf
xchg
jmp
out
rcrl
leave
cli
mov
shlb
push
pop
sti
mov
andl
lea
push
pop
adc
popa
stc
sarb
jl
addr16
push
or
jl
xchg
ja,pn
inc
sub
jmp
hlt
dec
js
cmp
sahf
sti
fists
inc
sbb
subl
mov
inc
sahf
mov
repnz
ror
mov
push
sbb
gs
dec
leave
cli
jg
mov
sbb
sub
mulb
pop
js
xor
and
xchg
mov
fstpt
sub
cmp
adcl
mov
cmc
push
cmp
jg
or
mov
add
sub
xchg
fadd
jne
jecxz
ret
cmp
out
popa
add
mov
in
dec
mov
scas
jecxz
xlat
iret
lfs
mov
mov
orb
pop
or
in
sub
add
repnz
mov
loopne
adc
test
jmp
sbb
xor
sarb
push
jge
add
pop
cmp
lcall
in
inc
pop
stc
call
in
lret
dec
xchg
leave
aas
push
in
fwait
add
dec
imul
mov
dec
push
mov
test
jecxz
mov
mov
mov
test
lret
inc
popf
orb
test
adc
inc
test
add
orl
inc
out
add
ljmp
rorb
jbe
enter
fcom
add
push
out
into
int3
clc
cmp
int3
or
mov
aam
sbb
in
cmp
outsb
outsl
cmpsl
xor
push
inc
xor
in
fstps
mov
mov
aas
stc
fsubrl
cmp
fcompl
mov
imul
sbb
test
xchg
sbb
sbb
mov
cltd
pop
pop
jmp
cmpl
or
xlat
or
pushf
adc
xchg
cmpb
lahf
mov
test
jmp
popa
aad
cs
cmp
push
cltd
jb
push
mov
or
adc
inc
pop
mov
insl
xor
or
out
das
dec
lret
xorl
cmp
cmpsl
repz
mov
mov
in
aam
subb
pop
popf
insl
fiaddl
cwtl
mov
sub
jne
and
cmpsb
push
mov
cmp
push
jge,pt
pop
jg
xor
add
cmp
test
mov
mov
js
cmp
dec
inc
cmpsb
cmp
or
xchg
adc
aas
lock
sti
mov
loopne
jl
bnd
xorb
xchg
insb
push
ja
das
adc
clc
inc
hlt
pop
and
sub
into
popa
fidivrl
jno
ljmp
andb
aas
outsl
inc
shrl
fbld
aad
in
mov
inc
push
ret
or
push
lds
add
push
jo
mov
cmpb
nop
cmpsb
rclb
push
jns
rcrl
xchg
or
and
sbb
add
roll
push
out
cmpsb
jle
shlb
and
xor
daa
subb
mov
inc
jl
cmp
adc
cmpsb
cmp
ret
scas
mov
pop
cwtl
xlat
cmp
bound
dec
mov
fwait
or
mov
inc
mov
pop
lret
dec
add
test
adc
cwtl
add
paddsb
xchg
xor
inc
xchg
ret
mull
xor
jecxz
cmp
dec
mov
les
cs
sbb
add
cmp
cmpl
lock
orb
shll
andl
les
popl
and
orl
stc
jp
test
dec
jge
pop
push
jg
jg
lret
inc
jo
inc
xlat
adc
js
push
inc
jmp
scas
mov
sub
imul
pop
lods
out
push
into
out
inc
sub
add
cmp
mov
repnz
push
mov
push
push
std
xchg
lods
add
mov
lods
add
insl
cld
mov
adc
adc
sbb
fcoms
popa
jb
mov
aam
mov
leave
loop
pop
std
repnz
xchg
xor
aaa
xor
sbbl
mov
aam
in
shll
cmp
les
and
lret
mov
pusha
inc
mov
mov
mov
jns
lods
and
push
pop
fcmovb
pop
in
or
inc
mov
xchg
nop
cld
pop
cmp
xchg
ficomps
bound
fsubl
sub
or
repz
pop
add
shrl
cli
test
repz
xchg
ret
sbb
pop
jmp
call
jb
inc
idivl
pop
in
lods
bound
mov
stos
sub
loopne
dec
pop
push
loop
cmp
bnd
pop
in
lahf
dec
mov
ret
push
stc
ret
insb
push
mov
jbe
enter
inc
mov
fsubl
inc
out
loop
xor
outsb
ljmp
or
sub
pop
je
jle
sub
xor
mov
pop
pop
xchg
out
xor
push
pop
pop
es
sbb
std
xchg
push
std
add
shl
inc
sub
aaa
sub
cmp
sub
fdivp
and
pop
xor
mov
or
int3
jg
mov
or
push
xlat
insl
pop
cmpb
add
push
arpl
or
lret
aam
or
cmp
xchg
sub
pop
inc
push
cmpsl
sbb
pop
dec
ljmp
dec
clc
imul
push
imul
jno
or
ret
pop
jp
and
sahf
fldt
dec
xchg
leave
cwtl
mov
mov
mov
inc
xchg
aaa
insb
hlt
iret
mov
sbb
enter
stos
scas
test
and
scas
dec
cmovs
xchg
fcoms
inc
int
notb
lcall
out
mov
mov
mov
shrb
out
cwtl
and
sub
test
xor
mov
in
dec
adc
xor
mov
or
push
push
inc
push
jge
push
pop
mov
jle
fldcw
cmp
xor
dec
ss
add
test
add
std
mov
cs
push
shlb
mov
cmp
cmpsb
in
iret
out
pop
mov
insb
das
adc
rcl
stc
dec
popf
les
jno
scas
add
sub
dec
insb
adc
hlt
cmp
adc
ds
mov
dec
pop
mov
lcall
push
sarb
lcall
jmp
jl
aam
loopne
add
dec
pop
xor
cmc
jne
mov
pop
popa
rorl
inc
loope
stos
xor
ret
lcall
pusha
fnstsw
add
jno
jecxz
sarb
inc
mov
and
sub
jo
adc
test
pop
repz
mov
push
xor
cmp
sub
repz
push
out
fistps
pop
std
call
shll
sbb
dec
mov
mov
loope
stos
mov
ja
cmp
mov
inc
adc
or
xchg
mov
call
mov
sti
insl
jge
aam
mov
movsl
das
clc
scas
pop
sbb
fbld
push
adc
mov
mov
fidivrs
or
adc
cwtl
ljmp
ja
sub
dec
jae
xor
mov
sbb
push
pusha
dec
push
cmp
js
sbb
addr16
and
fists
jp
push
xor
clc
outsb
outsl
sub
out
xor
pushf
lods
mov
test
sahf
in
mov
xor
mov
push
add
mov
adc
movsb
pop
dec
push
xchg
mov
mov
adc
in
sti
jo
jbe
dec
cltd
mov
outsl
and
dec
xorb
add
cmpsl
xor
pop
xchg
pushl
sahf
fisttps
mov
sahf
adc
jnp
adc
insb
clc
aaa
outsb
call
test
ljmp
mov
lret
inc
inc
jp
mov
adc
in
mov
incb
fwait
sbb
cmp
inc
push
mov
mov
inc
idivb
xchg
sub
popa
dec
into
add
stos
iret
mov
rol
sbb
das
in
mov
mov
or
sub
inc
inc
cmp
mov
mov
xchg
xlat
mov
or
sbb
popf
rcrl
rcrb
cmpsl
addr16
xor
repz
and
inc
mov
xor
pop
js
dec
call
jns
sahf
orb
movsb
add
mov
outsb
fwait
cmp
movb
mov
adc
fnstsw
push
cwtl
cmp
fwait
daa
xchg
dec
loopne
push
xor
mov
add
xchg
adcl
fmull
xchg
mov
cmp
cmpsl
ss
push
add
jns
dec
dec
cmp
test
js
xchg
add
mov
lods
xchg
shrl
test
loope
inc
sti
pop
shl
test
xchg
les
out
mov
add
add
addr16
rcl
jmp
pusha
insb
je
je
cwtl
ret
pusha
sbb
loope
dec
jae
cmp
movsl
and
rep
sbb
dec
sarl
sbb
push
sbb
cmp
adc
test
sbb
cmp
adc
js
push
sbb
adc
adcl
jo
js
bound
data16
cmp
clc
xchg
xor
mov
cmp
adc
or
sub
mov
mov
adc
dec
bound
mov
popa
mov
daa
not
test
pushf
cmp
pop
sub
jno
enter
xor
stc
fildl
fistl
fcmovnbe
jp
repz
lds
in
push
push
inc
outsl
fsubrl
sub
sti
fwait
stos
daa
mov
and
push
jbe
add
js
add
mov
andl
xchg
lret
push
cmp
int3
add
stc
push
jl
testb
out
sti
jo
subl
sub
jo
incl
in
test
jbe
dec
outsb
shrl
inc
pop
ja
int
inc
or
cli
pushf
sbb
jbe
popf
push
inc
and
test
and
ds
cmp
test
sti
and
jae
mov
sbb
push
mov
pop
movsb
pop
cs
fstl
cmpsl
scas
imul
stc
dec
cmp
addr16
fwait
neg
push
js
mov
push
lods
mov
xchg
cli
mov
cmpsb
or
cmc
pushf
jmp
insl
addb
mov
scas
pop
jae
std
mov
lock
mov
xor
cmp
insl
mov
out
sub
inc
jo
push
adc
mov
push
insb
mov
xchg
stc
xor
inc
sbb
mov
popa
inc
cmp
add
mov
int3
sbb
xchg
lret
push
pusha
cmp
sub
push
loop
xlat
mov
lea
push
inc
or
lret
lds
or
cltd
insb
adc
pop
mov
cmp
nop
sbb
mov
pushf
idivb
loope
in
xor
aad
mov
jne
jle
sarb
iret
mov
aam
jnp
cmp
xchg
push
lahf
lods
add
les
nop
add
pop
inc
mov
inc
addr16
jl,pt
mov
inc
rcrb
fs
xchg
push
sti
lret
lock
fstps
sbb
lahf
mov
daa
cs
roll
dec
xor
lret
xor
fwait
pop
and
mov
out
xchg
pop
add
mov
cmp
dec
into
out
ficoml
ret
in
jb
xor
enter
or
lea
lcall
or
cmpsl
in
push
jbe
je
aaa
push
out
cmpsb
out
ss
mov
inc
jmp
pause
imul
fcmovnbe
rcrl
sub
mov
sbb
iret
fiadds
test
inc
addr16
xchg
pop
lock
sub
pushf
in
ja
lods
jmp
push
adc
out
ds
movsb
adc
push
clc
xchg
cmp
fdivs
jp
jae
cmp
or
jo
mov
cmpsl
inc
cs
lret
loopne
add
dec
mov
mov
loopne
mov
scas
xchg
cmpsl
mov
icebp
iret
dec
pop
je
xor
mov
lods
test
lret
cltd
psubsb
inc
leave
xor
push
fldl
mov
mov
lods
outsb
pop
cmpb
and
or
dec
add
roll
xlat
or
bsf
xor
add
les
xor
cmc
mov
sbb
xor
xchg
mov
popf
cmp
cmp
movsb
inc
gs
shr
lret
cld
mov
mov
mov
aad
dec
in
push
mov
rorl
pop
cmp
jecxz
mov
lret
jge
or
lret
add
mov
sti
mov
xor
test
mov
lcall
dec
fs
xor
shlb
xchg
arpl
aad
cltd
nop
lea
shlb
enter
mov
aaa
sub
and
jl
add
xor
jmp
rolb
adc
popf
aad
pusha
jno
sbb
mov
xchg
and
fimuls
mov
int
sub
mov
sbb
lahf
mov
jb
jne
sti
cmp
std
test
ret
add
imul
mov
ret
pop
push
pop
repnz
ljmp
or
stos
or
adc
pop
or
and
test
cs
jmp
sub
lock
popa
and
sbb
outsl
sbb
movsl
sbb
xor
not
and
mov
sub
inc
inc
adc
add
add
rorl
sub
mov
fwait
out
fistl
adc
fistps
roll
out
je
ret
lods
cmp
or
jecxz
mov
repnz
xor
out
call
sti
mov
outsl
ficomps
push
test
dec
loop
adc
cmp
arpl
repz
and
pop
in
aam
out
mov
es
mov
and
pop
jns
xchg
in
fdivs
popf
pop
xor
add
mov
or
in
sub
sbbb
outsb
imull
cmp
cmp
fdivp
fcoml
js
loop
fs
pop
dec
fsubs
inc
mov
out
fildl
cmpl
ror
data16
or
pop
cmp
std
mov
outsb
xchg
push
add
inc
push
sbbb
xchg
xor
xor
inc
daa
cmpb
pop
je
mov
lcall
or
xchg
lock
aam
cmp
lods
adc
cmpsb
cmp
imul
xchg
xchg
cmc
inc
push
aam
mov
aam
ss
sub
push
popl
or
sub
sub
mov
test
sarl
das
add
iret
push
and
fstpt
mov
fmull
or
adc
push
sbb
inc
pop
or
scas
lock
aaa
test
mov
cmp
dec
xchg
leave
and
add
jp
sbb
xor
and
rcrl
dec
mov
sbb
fstpl
cwtl
inc
and
imul
popa
add
int
sbb
fnstsw
and
icebp
cmpsl
mov
xchg
std
mov
je
ljmp
orl
filds
cmp
std
add
pushf
daa
pop
out
mov
cwtl
sub
daa
aam
addr16
adc
adc
and
in
loope
shl
sub
std
stos
lea
jne
cli
aad
push
pop
cmp
xchg
jne
icebp
leave
dec
and
adcl
inc
mov
repz
push
push
pop
mov
dec
icebp
and
xor
sub
and
mov
push
xor
pop
out
or
mov
lcall
int
dec
add
inc
or
jns
adcl
adc
shrl
xchg
mov
pushf
sub
stc
pop
fsub
sbb
and
pop
cmc
inc
inc
cmpsl
xchg
and
xchg
pop
mov
jno
mov
and
jne
rorl
jo
xchg
pop
es
mov
roll
jmp
lods
f2xm1
inc
pop
cwtl
jb
push
insl
xchg
lahf
cmc
lods
pop
add
fucomip
in
xchg
subb
inc
add
jmp
adc
test
scas
jo
push
sub
jae
test
mov
fsub
jle
mov
push
loope
xor
and
or
popa
cwtl
fnstenv
sbb
or
sti
mov
hlt
movsb
mulb
pop
arpl
lods
mov
and
and
fldenv
sbb
pop
lods
inc
shlb
daa
xchg
sbb
test
mov
cmp
xor
dec
sti
pop
ljmp
xchg
aad
pushf
loopne
in
aam
movlps
mov
xchg
aam
or
add
out
sub
out
test
cld
push
aad
push
push
orb
jbe
outsb
pop
pop
fstl
test
jae
add
stos
mov
xchg
mov
push
or
fldt
push
inc
aam
lret
insb
xchg
cmp
and
loope
repnz
stos
repnz
jno
mov
lahf
xchg
das
fdivrs
or
cmpsb
ret
pusha
adc
cmp
repnz
lret
bound
je
xor
cltd
jge
push
sbb
xchg
xchg
add
pop
pop
movsl
fs
cld
pushf
test
pop
insb
inc
xchg
and
outsb
pop
test
aaa
xor
jp
out
test
mov
push
mov
lret
cwtl
rorb
pop
pop
xchg
dec
pop
cmpsl
jb
test
and
test
roll
out
mov
jge
loope
add
sbb
pop
cmp
rcrl
and
pushf
xchg
sbb
insl
andl
push
lods
pop
lahf
popf
add
jae
cs
jnp
fcomp
sub
cmp
and
sub
ret
popa
jae
cmpsl
xchg
dec
sarl
call
inc
rorb
fxch
cmc
xchg
aaa
ret
xor
mov
jns
jnp
jmp
sbb
jnp
dec
in
dec
and
sbb
jo
mov
sbb
into
daa
inc
jle
int3
lea
adc
mov
sbb
sbb
push
adc
sub
dec
jae
add
cmp
in
aas
enter
sbb
repz
jecxz
mov
push
inc
jbe
test
adc
cmp
enter
imul
sbb
mov
xchg
ss
rol
mov
push
insb
ss
les
aaa
in
outsl
mov
add
in
or
movsb
inc
fcomp
jmp
push
aas
shl
loope
repz
mov
lods
pop
int3
sub
xor
cltd
sbb
dec
mov
mov
jl
rclb
sub
clc
add
mov
adc
xchg
fwait
xor
sub
clc
mov
clc
jmp
fbld
xlat
js
pushw
inc
subb
loopne
xor
mov
fld1
mov
test
gs
sub
lock
cmp
and
ljmp
lods
orb
cmp
pusha
pop
or
leave
shll
sahf
and
pslld
adc
mov
enter
jo
clc
and
and
outsb
cmc
mov
test
mov
cmp
or
inc
jp
int
xchg
lods
push
sub
push
stos
sub
adc
sub
jb
mov
out
xor
pusha
inc
cmp
gs
daa
popf
inc
cmp
adcb
lcall
faddl
add
in
and
adc
jb
push
scas
xor
ret
jp
mov
sub
mov
aam
and
add
dec
loope
out
dec
jecxz
pop
daa
into
insb
lret
sub
cmc
jo
cld
mov
ret
sub
sbb
icebp
test
shlb
jge
jg
lock
mov
and
ljmp
pop
push
cmc
push
es
push
dec
adc
cmpsl
inc
in
mov
xchg
insl
xchg
cld
hlt
test
test
test
lret
decb
mov
ljmp
pop
inc
ret
cmc
inc
icebp
rolb
xor
ljmp
cmp
cli
ds
fwait
sbb
xor
repnz
sub
popf
ret
lahf
les
ja
dec
pop
pop
jg
xor
stos
fidivrl
dec
fcmovnbe
stos
addb
xchg
cmp
mov
and
mov
push
test
out
push
inc
into
fs
cmp
pop
js
outsb
push
hlt
inc
mov
pop
push
xchg
daa
mov
add
xor
test
imul
add
inc
stc
xor
mov
push
mov
cld
jmp
or
xchg
push
outsl
push
xor
sbb
xchg
loop
push
ja
loopne
cmp
imul
es
mov
scas
xor
jne
lcall
sbb
loopne
push
aad
push
sbb
xchg
js
adc
sbb
test
pop
inc
inc
es
out
sbb
int3
out
les
cli
pop
out
test
ds
mov
leave
lea
or
add
mov
mov
stos
sbb
xor
aad
enter
push
ret
or
xlat
add
pop
sbb
lret
inc
js
adc
add
mov
cld
inc
das
jle
lods
jnp
xchg
mov
cmc
in
push
enter
push
ret
call
pop
pop
jo
dec
fcoms
scas
and
mov
test
pop
lods
lock
or
int
and
dec
setge
std
ret
in
inc
xor
add
adc
mov
fists
pop
outsl
xor
bound
gs
sub
imul
xchg
pusha
jns
xor
pop
mov
stc
adc
cmpb
push
cmp
and
xchg
dec
sti
jg
shlb
cmp
daa
jecxz
sbb
push
xchg
pop
mov
fisubs
sahf
dec
ret
push
or
out
jge
arpl
fchs
jnp
inc
jnp
lret
fnsave
leave
push
andb
loope
mov
in
sahf
sub
mov
lcall
push
adcl
or
ds
cmovge
lcall
repz
push
mov
jmp
push
out
movsb
or
outsb
pop
mov
icebp
sbb
decb
jb
jle
dec
push
fistps
xchg
into
das
test
test
fidivs
pop
lahf
out
sbb
mov
ss
pusha
mov
pop
call
or
shll
pop
into
ds
xor
push
je
mov
jae
push
sti
dec
movsb
pop
or
inc
jecxz
dec
and
xchg
out
mov
push
xor
shll
sub
es
adc
mov
dec
sub
ja
subb
push
inc
xchg
cmc
cmp
mov
fs
aad
inc
mov
in
inc
push
xchg
out
adc
cltd
sbb
add
das
outsl
dec
xchg
int3
test
push
aam
inc
mov
dec
jg
mov
xchg
movsl
pop
imulb
mov
scas
sbb
sbb
mov
dec
and
popa
aad
and
cmpsb
mov
or
mov
test
and
bound
aad
fmull
pop
ja
mov
dec
adc
std
rolb
loop
lret
jo
das
ss
movsb
and
mov
into
xlat
dec
out
xor
jno
push
pop
jl
jnp
add
test
cmp
negl
imul
idivl
aad
pop
and
dec
pop
pop
inc
out
movsl
and
xor
sub
mov
jge
mov
pop
dec
mov
mov
xor
das
sub
loopne
cmp
mov
sub
pusha
popa
popl
pop
call
aam
sahf
dec
sahf
mul
sub
negl
add
out
add
repz
popa
pop
jge
clc
test
lret
sbb
mov
mov
fcomip
pop
push
adc
push
cmp
pop
xor
out
jbe
sub
arpl
inc
stos
mov
adc
nop
add
lret
clc
push
outsb
shl
cmp
jmp
lret
push
dec
mov
mov
aaa
jbe
orb
jno
rcrb
ljmp
xor
sbb
or
fnsave
sub
sub
ss
jmp
shrb
sbb
or
pop
cmp
jmp
lea
daa
or
xchg
das
dec
and
or
jb
fwait
lds
cmp
mov
test
sub
pop
lahf
pop
mov
es
scas
movsb
or
pop
insl
push
add
mov
insl
cmp
sbb
arpl
mov
stc
mov
mov
push
mov
jecxz
movsl
or
dec
jae
add
mov
iret
insl
lret
push
inc
repz
xor
enter
rclb
mov
and
xchg
out
xor
testl
or
leave
push
jl
xor
int
pop
sub
mov
arpl
mull
dec
lds
or
sub
cmp
lea
mov
lahf
std
jno
push
cmp
lods
xor
sahf
jb
push
pop
shll
jmp
cmpsl
and
ret
inc
daa
stos
mov
lods
div
xchg
mov
or
aam
push
fisttpll
pusha
add
sbb
out
out
shrl
iret
loope
shll
pop
jns
das
pop
or
adc
pop
orb
xchg
cmp
fisttpl
jb
pop
and
xor
sbb
dec
and
mov
jl
lea
fdivs
out
jnp
jecxz
adc
jno
adc
cwtl
pushf
icebp
pop
sbb
xlat
sbb
outsl
test
dec
ljmp
jo
test
pop
mov
fmul
xchg
xchg
in
mov
sub
push
and
push
loopne
je
add
jg
cmpb
or
mov
pop
xchg
or
jmp
pop
mov
jle
inc
mov
xor
mov
mov
jae
je
sub
push
adc
lock
push
aaa
inc
xchg
and
fidivrl
outsl
jmp
repnz
jne
dec
enter
push
data16
mov
cld
mov
js
mov
push
icebp
xchg
mov
jge
pop
and
cmpsl
js
xor
rsm
out
stos
lods
jbe
out
or
out
jle
jae
cmpl
cmc
iret
jecxz
sbb
lcall
cmp
add
jl
inc
sub
test
es
ljmp
mov
xchg
push
movsb
xchg
arpl
out
fildll
ret
jne
push
popf
clc
leave
stos
daa
sarl
cli
testl
bound
mov
lahf
lods
mov
loope
popa
pop
push
outsl
int
push
frstor
adc
push
xor
test
or
in
dec
mov
jl
in
insb
lods
daa
mov
adc
dec
mov
aam
push
sub
lcall
xchg
jmp
popf
test
jle
xor
jno
add
movsb
sub
rcpps
jmp
jno
add
sahf
mov
xchg
shll
mov
aaa
test
dec
ja
push
xchg
hlt
dec
loope
adc
xor
sub
cmp
jns
scas
arpl
out
mov
iret
sub
adc
add
adc
jle
or
cmp
add
mov
loopne
int3
mov
addr16
dec
mov
sbb
aam
mov
addr16
incl
stos
hlt
gs
cld
lods
mov
cli
inc
int3
adc
mov
repz
iret
hlt
jnp
int3
sbb
sub
lds
scas
sub
or
loopne
addb
sarl
pop
inc
inc
mov
bound
mov
sbb
vpmaddwd
sub
pop
in
or
xchg
lods
push
mov
sub
sub
repz
dec
nop
fiaddl
cmc
roll
add
inc
adcl
es
test
in
pop
dec
leave
pushf
cmp
xchg
lds
addr16
xchg
mov
and
cmp
xlat
pop
sbb
test
push
pop
pop
dec
and
lods
fdivrl
or
pop
dec
lcall
sbb
mov
jle
ja
mov
dec
push
dec
mov
aad
push
es
mov
fiaddl
jns
jmp
mov
int
push
mov
mov
mov
sbb
dec
xlat
scas
jge
xchg
daa
cltd
mov
push
xor
out
test
or
xchg
lret
inc
adc
mov
mov
lcall
testb
flds
jns,pn
test
add
adc
add
je
inc
and
cltd
and
push
push
cli
cmp
mov
sti
mov
and
in
inc
or
mov
pop
jge
mov
cmp
popf
dec
inc
mov
adc
add
inc
sbb
mov
add
jno
sub
jl
int
sbb
inc
and
inc
popf
and
mov
jecxz
xor
or
or
jp
push
xchg
mov
popf
fistpl
cmpsb
ret
mov
fcmovne
sub
adc
js
mov
mov
xorl
cs
stos
stos
roll
popa
xlat
fsubs
cmp
xchg
cmp
jl
dec
inc
mov
mov
out
lods
aad
insl
mov
addr16
pop
fisubrs
js
daa
clc
icebp
das
in
inc
filds
nop
or
rcrl
add
rorb
stos
outsb
mov
mov
adc
rcll
aad
adc
shll
fbld
js
pop
fmuls
sbb
push
cmpsl
mov
adc
cmp
les
pop
adc
sub
cmpsb
clc
mov
cltd
les
stos
fnstsw
aaa
lock
in
cmp
mov
adc
inc
ret
xchg
out
fsts
mov
lea
cli
inc
mov
jge
pop
cmp
mov
pop
mov
ds
jp
lock
dec
data16
jmp
sbb
js
fsubp
pop
and
aad
or
imul
push
icebp
sti
insb
mov
sub
imul
daa
add
xchg
cwtl
adc
popf
pop
cmp
sbb
or
ljmp
and
xchg
push
inc
pop
add
lea
in
repnz
adc
sbb
aam
cmp
sbb
or
push
pop
pop
ds
pop
fdivr
push
insl
dec
mov
lods
subb
add
pop
xchg
fsubrl
out
sbb
sub
add
mov
jne
test
push
lea
jge
pop
divl
cmpsb
jmp
mov
loopne
and
shr
mov
adc
pop
jae
roll
xchg
xchg
sbb
sahf
mov
jnp
bnd
mov
or
idivl
leave
fdivs
cmpsb
inc
icebp
push
mov
jmp
in
out
dec
push
movsl
inc
sub
mov
jmp
jp
std
dec
add
adc
daa
add
into
inc
insb
test
rcrb
sbb
loop
arpl
shll
inc
out
xchg
lahf
xor
mov
pusha
in
arpl
int3
fldt
or
shlw
incb
pop
imull
test
adc
mov
push
je
mov
sbb
fdivrl
mov
sub
pop
sub
dec
pusha
data16
or
popf
pop
push
je
fsubs
mov
cs
cwtl
scas
cmp
ljmp
clc
imul
sub
addr16
leave
pop
push
movsl
dec
or
lret
fwait
popl
js,pn
stos
nop
pop
push
fsubs
sbbb
mov
call
adc
inc
cli
and
xchg
or
jecxz
mov
loopne
sbb
jle
pop
scas
into
aad
mov
daa
rolb
jb
iret
jb
adc
popf
aaa
out
add
data16
loope
xor
dec
or
clc
adcl
loope
add
mov
addl
jge
add
lods
dec
xchg
ds
jnp
pop
nop
test
push
jbe
push
movsl
pusha
cld
or
jae
push
sti
aam
cld
out
xor
fadd
mov
sahf
cmp
push
push
scas
outsb
cmp
add
addb
push
jne
or
xor
addr16
xor
repz
jecxz
xchg
lss
imul
adc
pop
arpl
mov
add
popa
mov
add
sahf
push
popf
mov
arpl
jmp
test
sub
cmc
lret
clc
and
xchg
sub
ljmp
cmp
adc
mov
pop
xchg
mov
add
pop
les
jnp
test
std
mov
or
jle
add
fldt
das
rcll
pop
pop
add
popa
fldenv
loope
or
incb
outsb
int3
jl
fld
mov
nop
repnz
xchg
sub
cmc
inc
sbb
mov
fwait
or
mov
or
mov
add
lods
or
push
movsb
mov
xor
push
negb
sti
loopne
sbb
xchg
push
mov
lahf
out
insl
js
jno
cmpsb
cwtl
push
sub
xlat
je
fsubr
mov
cltd
inc
sti
jecxz
repz
sbb
pop
xor
and
and
bound
inc
movsb
mov
or
xor
and
add
adc
dec
sub
xchg
sahf
and
test
je
mov
repz
push
shll
mov
pop
or
sub
fadd
sub
and
aad
lahf
xor
pop
xorb
pop
fwait
xchg
mov
pop
stc
cmp
dec
dec
jns
and
fs
jae
dec
mov
sub
mov
daa
sub
mov
jl
stos
sbb
out
push
call
push
xchg
xchg
lock
xchg
int
push
cld
mov
inc
xor
int3
inc
mov
sub
mov
xchg
rcr
mov
out
orb
sti
mov
and
xor
adc
aad
sahf
mov
push
cmc
pop
jl
shrb
inc
sar
pop
aaa
mov
loopne
push
push
jbe
push
test
push
lds
xchg
mov
lret
mov
mov
aas
fwait
push
mov
jo
sbb
adcl
push
mov
les
rcr
fcmovu
dec
xchg
sti
inc
push
pop
add
adc
pop
int
pop
js
cmp
add
jo
inc
cli
push
cwtl
push
jecxz
push
mov
xchg
push
ret
mov
mov
sbb
xchg
in
clc
mov
cmpsb
out
add
outsb
dec
jecxz
sub
inc
inc
jle
hlt
jmp
jmp
xchg
fidivrs
sbb
sub
stos
jl
jb
and
mov
test
cmpb
enter
sub
insl
add
dec
push
in
xor
mov
ret
and
inc
add
ljmp
aas
scas
xor
sbb
iret
sbb
xor
jl
jge
ror
stc
mov
imul
or
push
test
out
adc
lods
inc
in
adc
aas
fidivl
out
shl
mov
pop
mov
loope
sbb
sbb
mov
popa
cld
push
xor
es
cmpsb
das
xchg
inc
and
pop
push
repz
ljmp
inc
jnp
out
sahf
int
mov
or
cmc
xor
mov
adc
xlat
push
nop
jb
xorl
stos
push
scas
test
dec
and
mov
jae
fbstp
aad
dec
pop
push
lret
loop
lret
dec
or
push
adc
mov
sub
shr
xor
das
cmp
push
cmp
lcall
rorb
jb
or
mov
jl
rorb
inc
mov
ret
inc
add
inc
inc
popa
ljmp
test
je
vmovss
dec
aaa
adc
sti
fwait
mov
fwait
lods
jae
mov
lcall
add
jle
dec
es
mov
push
test
mov
das
push
add
lcall
xchg
inc
sub
imul
pop
inc
testl
mov
xchg
sub
and
icebp
imul
stos
mov
mov
loope
sbb
fcmovnbe
push
repz
mull
push
mov
jecxz
jp
sub
push
ffreep
ret
jo
cmpsl
es
fnop
stos
fdivrs
mov
add
iret
stos
lds
xor
pop
ds
adc
sbb
jb
add
mov
nop
cmpsl
cmp
lea
out
cmp
mov
popa
aam
mov
and
mov
jecxz
jmp
or
insb
data16
test
fisubrl
push
test
push
ds
xor
cmp
or
sbb
sbb
cwtl
icebp
jge
jnp
pop
dec
aad
add
mov
dec
dec
mov
outsb
and
idivl
pop
test
adcb
xchg
jne
test
cmpsl
inc
cmpsb
clc
ss
mov
jne
jp
add
movsl
mov
pop
cmc
pop
mov
adc
mov
int3
pop
mov
cmp
jmp
cltd
pushf
mov
mov
sti
push
xlat
std
adc
jecxz
stos
popf
sbb
hlt
repz
in
ds
hlt
xchg
mov
jmp
push
mov
aas
mov
dec
jns
or
mov
add
negb
imul
lods
je
lods
cmp
daa
into
cs
inc
or
cmpsl
adc
out
cmp
dec
pop
cmc
pusha
add
sbb
pop
pop
lret
inc
sub
lahf
movsl
rclb
loop
bnd
dec
fistpl
arpl
inc
cs
lret
bts
movsl
movsl
xchg
cld
push
cmpsb
and
mov
cmc
or
cli
xchg
lret
sbb
push
mov
lock
push
in
jne
iret
jmp
movsb
sub
ret
push
nop
out
and
and
mov
sbbb
sub
jbe
cmp
cmp
orl
shll
lret
je
adc
lods
pusha
adc
bound
lea
cltd
xchg
mov
push
loope
pop
iret
lret
cwtl
mov
aas
int3
mov
add
adcl
adc
aaa
or
dec
mov
mov
mov
scas
fdivp
add
js
mov
fwait
sbb
mov
mov
dec
loopne
dec
jno
ret
adc
int3
lods
add
fcoms
mov
aad
sub
xchg
adc
xchg
cmp
fcoml
sbb
stos
mov
bound
mov
hlt
mov
mov
jne
imul
jbe
xor
icebp
cmc
stos
int3
mov
rcrb
sarb
cltd
icebp
and
jp
lea
popf
lock
rdpmc
or
sti
out
sub
pop
and
std
ds
les
ret
xor
cmc
cltd
push
pop
jmp
xchg
jg
aaa
mov
push
push
mov
scas
mov
pop
or
or
rcl
adc
sub
mov
insb
fmul
orl
push
cld
sub
repnz
pop
aam
popf
lock
sti
loopne
sbb
mov
xchg
js
mov
jecxz
cmpsb
mov
sar
int
out
shlb
fsubrs
mov
adc
adc
xlat
mov
stc
insb
inc
out
dec
xor
lea
adc
sub
data16
mov
dec
hlt
jmp
mov
dec
mov
lds
mov
pop
sbb
repnz
adc
sub
inc
int
popf
shlb
push
xchg
fdivr
enter
dec
insl
je
arpl
adc
push
aaa
int3
ja
sub
mov
repnz
andl
pop
dec
mov
ds
xor
fucom
pop
out
xor
out
sub
pushf
pcmpgtb
aas
or
cmpsl
mov
mov
enter
rorl
test
fcompl
push
shlb
adc
sbb
sahf
pop
int3
clc
or
jne
imul
push
mov
pop
popf
daa
or
xlat
push
std
sub
jge
fldcw
test
cmpsb
pop
mov
outsb
clc
mov
xchg
cld
or
and
aas
cmp
push
jp
mov
jo
adc
xor
add
notb
inc
push
cltd
fldenv
and
arpl
dec
ss
fcmovu
pop
adc
les
mov
push
mov
leave
sub
repnz
inc
xlat
mov
adc
aam
inc
pop
add
adc
sbb
enter
adc
ret
inc
fldcw
dec
jno
mov
sti
mull
and
jmp
mov
pop
jns
enter
inc
cmpsl
and
cmc
xchg
in
jno
xchg
pop
mov
fstpt
scas
xchg
xchg
mov
incl
mov
pop
das
mov
sti
adc
xchg
pop
xchg
jl
lea
cmpsb
sbb
jns
sbb
rolb
stos
add
arpl
decl
push
cmpb
mov
insb
mov
sbb
cmpsl
sbbl
xor
out
mov
adc
cli
imul
dec
sahf
xchg
or
or
cmc
mov
jb
inc
mov
mov
fcmovb
inc
insb
subl
sbb
adc
xor
ret
cmp
xor
xchg
push
lret
mov
xor
adc
xchg
nop
sub
mov
ljmp
push
inc
jmp
cmp
or
shll
mov
mov
out
insb
aad
inc
outsb
or
lds
and
movsb
adc
xor
jl
or
jbe
les
dec
call
daa
leave
bound
sbb
mov
movb
mov
mov
xchg
mov
pop
xlat
sub
arpl
leave
and
mov
mov
rcr
jmp
pop
mov
data16
push
movsb
gs
test
and
sub
xchg
and
push
xor
hlt
lods
outsl
push
mov
insl
nop
sbb
stos
and
aaa
add
jmp
loope
in
ret
mov
test
lret
xchg
sbb
push
and
gs
icebp
imul
mov
aam
mov
sbb
xchg
cwtl
rcl
jl
call
mov
fbstp
mov
fistpll
lods
jae
add
mov
pop
adcl
imull
push
outsb
sbb
aam
popf
mov
aad
cmc
fwait
dec
pusha
cmp
fadds
push
jmp
dec
mov
iret
dec
mov
cwtl
mov
popf
jp
lahf
outsl
xchg
sti
or
or
sub
pop
enter
sbb
cs
jl
popf
add
rcrb
sbb
pop
lret
xchg
lret
xor
mov
enter
pop
imul
and
cmp
dec
sub
xchg
xchg
xchg
dec
pushf
sahf
push
lea
mov
mov
cwtl
out
jo
and
jbe
push
mov
js
mov
scas
xlat
push
cmp
ret
dec
jp
lods
mov
mov
push
lea
aaa
jge
push
or
and
push
jle
cmp
pop
sub
lea
pop
lret
lock
jl
pop
cmc
jno
pop
stos
xor
and
fs
pop
daa
xchg
pop
dec
push
dec
je
pop
sbb
sub
ret
push
xchg
idivl
test
xlat
inc
cmp
cmp
jae
bsr
mov
clc
sbbl
loopne
mov
andl
sbb
cmp
xchg
pop
cli
or
clc
push
jp
mov
xlat
insb
mov
movsb
adc
call
push
out
out
xor
push
adc
mov
negb
addr16
mov
aaa
xor
cmc
mov
addr16
lahf
xchg
xorb
mov
hlt
jecxz
adc
xor
push
xor
mov
ret
hlt
aad
pop
lods
fistpl
push
leave
cs
cmpsb
inc
jmp
jno
cmpsl
gs
push
fdivl
addr16
gs
mov
sub
xor
ret
test
mov
arpl
test
pop
aam
call
and
dec
add
mov
adc
popf
rclb
cwtl
pop
push
lcall
inc
enter
popf
testl
movsl
rorb
insl
movsb
scas
sub
popa
repz
pop
cmpsb
mov
xlat
push
ja
les
adc
push
sub
shlb
cmpsb
enter
jnp
xor
add
aam
xor
in
mov
popa
pop
faddl
das
add
push
push
shrl
test
sbb
dec
push
inc
inc
and
adc
add
leave
pop
and
sub
insb
pop
das
mov
xor
and
adc
mov
lret
mov
aam
imul
mov
xor
repnz
gs
mov
lahf
mov
xchg
fadd
mov
test
out
cs
mov
or
es
rcrl
int
dec
lock
int3
rol
in
xlat
gs
dec
cmp
adc
or
sub
icebp
mov
inc
jp
add
shl
outsb
aaa
shr
aaa
sbb
insl
xchg
mov
adc
shll
popa
or
divb
pop
mov
add
fisubrl
pop
mov
mov
outsl
insl
dec
hlt
mov
fdivs
dec
lock
xchg
outsb
addr16
mov
dec
loopne
pop
fwait
std
sbb
jecxz
cmpsl
jmp
insb
repz
aas
sbb
cmp
iret
sbb
pusha
test
test
movsbl
cmpl
add
inc
xchg
subl
pop
int3
in
add
sbb
push
testl
sahf
pop
inc
adc
jmp
leave
mov
icebp
mov
orb
fidivrs
hlt
pop
sbb
test
out
fcompl
inc
sbb
arpl
sub
dec
dec
gs
ret
or
jne
mov
push
aad
in
or
fsubrs
dec
inc
cli
jl
mov
mov
or
xor
xchg
out
daa
aad
insl
mov
push
call
daa
int3
sub
pop
mov
scas
cmp
lods
sbb
jle
or
lahf
insb
xor
xor
test
add
pop
jecxz
sbbl
lcall
and
loope
push
adc
sbb
nop
mov
and
pushf
ret
lods
sub
arpl
pusha
scas
imul
les
sub
inc
test
sub
in
je
dec
add
adc
sub
lods
loop
loopne
out
call
sub
dec
push
jb
adc
xor
dec
aad
testb
sub
push
pop
leave
rclb
nop
shlb
cli
add
mov
into
mov
les
orl
and
gs
insl
mov
add
push
subl
xor
cltd
mov
test
inc
inc
jne
or
and
rorl
pop
mov
dec
add
xor
and
pop
mov
push
lea
dec
lcall
pop
and
xchg
add
sub
stos
ja
mov
push
outsb
dec
das
push
push
xor
mov
movsb
repz
popf
or
daa
jo
imul
sbb
in
adcl
mov
lods
rcrl
cli
push
push
xchg
enter
and
pop
out
lock
add
arpl
or
int3
pop
mov
sub
cmp
mov
sub
push
sub
loop
shll
test
jg
lock
faddp
adc
ljmp
loopne
fbld
shrl
aas
jle
mov
jecxz
pop
daa
mov
xchg
adc
add
xchg
aas
cld
shlb
cmpsl
ja
rcrb
es
imul
xor
ss
jns
inc
add
mov
repnz
mov
add
in
mov
jno
jno
mov
gs
sub
pop
fwait
cmp
adc
xor
mov
loope
push
cmp
shll
bound
mov
jecxz
inc
or
imul
jnp
lcall
and
shl
push
clc
dec
jge
out
mov
sub
mov
inc
ss
gs
bound
add
pushl
loopne
and
cmp
push
jg
iret
add
aaa
mov
sbb
dec
aaa
lea
out
cmp
js
mov
in
inc
cmp
mov
out
xchg
mov
mov
jo
mov
paddsw
sbb
mov
mov
jno
jmp
call
add
aad
dec
loope
enter
inc
mov
lret
mov
data16
and
outsb
inc
jp
push
or
rcll
loop
push
rorb
cmpsb
or
movsb
lret
xor
jecxz
cs
sarl
push
mov
xchg
dec
popa
inc
dec
sbb
lret
add
mov
sti
add
ret
fcmovne
fs
jle
insb
jg
jp
popf
mov
inc
push
mov
sbb
add
fidivs
push
stc
and
ficoms
call
dec
pop
xor
add
inc
aaa
mov
aaa
mov
lcall
or
pop
push
add
cltd
pusha
je
bnd
xlat
adc
lret
adc
sbb
push
add
aaa
cmp
ljmp
cs
push
push
xchg
daa
lret
mov
mov
mov
push
out
cltd
aas
je
cmp
jb
iret
inc
test
arpl
lret
jmp
and
popf
test
rorb
cmp
test
daa
insl
mov
testl
jne
xor
ja
jmp
pop
decl
pop
pop
push
scas
call
in
jl
in
fs
dec
pop
and
mov
or
pop
and
inc
sub
jno
repz
insb
jb
and
add
dec
insb
xchg
jle
lods
gs
popa
test
ss
ds
sbb
mov
lret
cmpsb
dec
pop
jle
adc
out
push
mov
andb
cmp
outsb
cmp
cmpsb
xchg
xchg
and
repz
jo
data16
ficoms
pop
inc
repnz
and
clc
mov
into
add
jo
les
test
mov
test
pop
test
ss
adc
add
sub
pop
or
inc
jecxz
rcl
pop
popf
int
and
sti
cmc
adc
fnstcw
jmp
icebp
test
popa
shld
pop
xchg
sbb
jbe
push
dec
push
adc
cmp
adc
sti
lret
xchg
or
adc
dec
test
cmp
lcall
mov
fbld
stos
mov
pop
and
or
stc
addr16
imul
mov
mov
mov
push
testl
fldt
cmp
push
inc
sbb
adc
loope
and
insl
lret
not
add
mov
aad
cmp
insb
fcoml
aaa
adc
or
xchg
or
and
xchg
jl
movsl
push
fstl
loop
loop
scas
xchg
sbb
fsubp
xchg
icebp
add
rcll
ss
fcmovu
fstps
pop
cmc
jle
jp
lahf
mov
push
lret
inc
pop
stos
incl
in
in
jo
mov
std
jo
cmp
bnd
mov
or
push
sbb
imul
jge
mov
add
mov
loop
cli
ljmp
stos
pop
push
jne
mov
mov
mov
mov
pop
movsb
jl
push
imul
cmpsl
faddp
call
mov
fmuls
mov
mov
das
sbb
push
es
dec
lahf
add
pop
mov
xchg
out
fcmovbe
daa
cli
sub
out
insl
testb
aad
jle
mov
inc
scas
cmp
in
ret
jne
pop
or
push
hlt
scas
cmc
test
xor
dec
stos
pop
or
inc
sub
inc
dec
xchg
nopl
cmp
push
push
int3
sub
inc
or
stos
mov
mov
sub
pop
mov
push
mov
or
lahf
pop
lcall
nop
fsubrp
mov
inc
push
push
push
rolb
scas
or
adc
xchg
pop
mov
xchg
cmpsb
enter
mov
into
cli
sbb
add
mov
jnp
lods
xchg
push
xchg
adcl
dec
out
cmp
test
pop
gs
jg
cmc
or
ficoml
test
sbb
xchg
arpl
adcl
stc
pop
mov
mulb
cmp
daa
add
insb
std
and
cmp
add
leave
xchg
loopne
jbe
adc
int
in
dec
outsl
ljmp
adc
cmp
ljmp
std
mov
xchg
popa
jecxz
mov
xor
pop
pushf
cmpsb
xchg
insl
shlb
ljmp
xor
sahf
pop
leave
insb
push
loop
fwait
jae
jne
hlt
repz
insb
scas
sbb
scas
pop
fwait
mov
lahf
test
repnz
dec
mov
xchg
jns
jecxz
jno
div
ja
mov
add
rcrb
cmp
pop
push
rolb
hlt
xchg
in
nop
mov
xchg
mov
mov
push
dec
jne
cmpl
sub
pop
mov
jp
lcall
loopne
push
and
js
and
xor
in
neg
dec
sbb
sahf
pop
fistpll
cmp
sarl
fsubrl
insb
sbb
es
xor
push
shl
inc
mov
stos
mov
push
ret
mov
int
loop
test
movsl
nop
mov
push
xchg
push
jae
scas
fstp
daa
in
sub
fisubl
popf
xor
mov
iret
fsubs
cmp
pop
aas
push
imul
ljmp
push
bound
movsb
ret
out
xor
fisubl
ljmp
inc
sbbl
sahf
mov
fisttps
insl
mov
cs
mov
mov
daa
push
fnstsw
int3
inc
dec
inc
and
jo
push
sub
test
push
jbe
subl
xor
popf
jno
sub
sub
repz
push
leave
jecxz
push
ja
sahf
gs
or
rclb
test
lods
or
push
cmp
lea
je
xor
stos
mov
push
shll
inc
negl
xchg
mov
add
and
andl
inc
jl
addl
imul
jecxz
and
lods
jl
pop
test
jb
xor
jne
data16
in
jp
or
adc
and
sti
pop
and
in
pop
arpl
popf
pop
cmpsb
pop
out
xchg
or
shr
cli
aam
cmpsb
jns
or
fwait
movsl
ds
pop
cmp
push
xchg
mov
or
nop
push
aaa
xchg
push
pop
clc
xor
adcb
testl
fdivs
jne
mov
call
in
test
sbb
neg
mov
in
cmpsl
add
dec
mov
shll
mov
and
push
repz
imul
enter
pop
push
adc
push
fs
subl
mov
popf
lea
push
insl
cmp
mov
outsl
fisttps
mov
pop
lahf
xchg
les
pop
push
jo
addl
insl
out
lods
adc
lcall
mov
pop
sub
xchg
jle
mov
cmp
push
add
cmpsb
outsb
outsl
rcrb
enter
pop
addr16
pop
jbe
fs
inc
xchg
pop
jo
lret
mov
call
or
mov
push
jp
mov
out
pop
xor
push
add
out
and
mov
fistps
aaa
addl
ror
xchg
clc
dec
and
addl
addr16
pop
repnz
je
sahf
mov
dec
ja
int3
jns
popf
movsb
add
inc
xor
mov
sub
fninit
mov
sbb
or
inc
and
ja
sahf
jo
cmpsb
lcall
push
rclb
mov
sub
dec
push
into
sti
movsb
sbb
lock
cltd
pop
mov
aaa
lret
imul
push
xor
adc
fdivr
adc
adc
mov
subb
test
sub
mov
bound
jo
fists
in
mov
xchg
xorb
or
dec
push
enter
and
and
in
sbb
xchg
fbstp
inc
bound
shrl
imul
es
mov
mov
mov
shll
pop
xchg
mov
aad
fnsave
ret
aas
icebp
push
shl
xor
iret
pop
dec
mov
scas
mov
adc
cmp
cmpsb
ja
add
mov
cmp
push
dec
sbb
mov
rcrb
gs
scas
ret
pop
and
imul
js
lret
and
insb
xchg
cmp
call
mov
mov
cltd
popf
gs
loop
out
xchg
xor
dec
add
mov
adc
xorb
adc
arpl
ss
imul
call
sbb
vpmulhuw
scas
mov
lret
data16
ret
pop
or
xchg
mov
pop
xchg
into
xor
cmp
and
dec
or
ficoml
scas
adc
mov
pop
dec
dec
cmpsb
fldenv
jmp
ja
mov
sub
sub
pop
adc
lods
fwait
adc
ret
push
subb
or
dec
loop
mov
mov
jp
test
rol
jo
xchg
leave
loop
js
add
jnp
push
pop
pop
mov
aas
jmp
mov
js
mov
sbb
sub
add
test
lret
sbb
or
push
imul
inc
push
jo
cmc
fbstp
dec
pop
data16
in
pop
stos
adc
outsb
dec
and
inc
popf
mov
les
leave
pop
test
movsl
dec
xor
out
fists
xchg
pusha
das
arpl
es
dec
cli
sub
arpl
pop
dec
out
add
mov
aas
sbb
sub
call
push
push
pop
lods
mov
sbb
es
rorl
imul
dec
daa
push
bnd
add
bound
add
lret
cmp
add
les
or
adc
mov
mov
push
sub
sahf
jle
stos
xor
cmpsb
inc
cmc
add
jle
cmp
aaa
jb
jne
adc
loopne
jmp
ja
sub
addr16
cmp
adc
mov
mov
orb
lret
into
or
inc
sbb
ret
inc
push
arpl
into
mov
shrl
adc
mov
add
pop
pop
jp
xchg
shrb
adc
es
jecxz
mov
rcrl
lock
ja
xor
sarl
int3
test
cmpsb
push
in
mov
inc
pop
mov
mov
or
sbb
scas
mov
inc
jno
stos
mov
mov
jmp
das
or
xchg
rolb
cltd
mov
fstps
cmpsl
out
mov
pop
xor
xor
cmpsl
xchg
aaa
repnz
mov
jne
cld
push
add
jmp
cmp
and
cmp
mov
fs
addr16
pop
inc
adc
adc
orl
adc
sbb
lahf
xor
jae
test
int3
and
or
dec
popf
pop
subb
xchg
popa
add
repnz
dec
js
xor
sbb
sahf
sub
repz
cld
jne
cwtl
push
add
jae
test
dec
mov
cmp
pop
lahf
aad
and
ss
adc
push
rolb
cmp
jne
shll
adc
out
jne
jl
out
shr
cmpsb
and
sub
xchg
xchg
push
ret
pop
jp
jae
cmp
iret
ret
repnz
arpl
dec
sbbl
pusha
adc
adc
mov
lods
sbb
xchg
push
lods
sarb
rolb
mov
sbb
daa
mov
dec
xchg
jae
xchg
sti
into
iret
sbb
mov
and
mov
jl
pop
sub
pop
movsl
test
arpl
movsb
mov
sti
jae
je
pop
sbb
mov
xor
xchg
xchg
inc
das
mov
sub
mov
insb
dec
stos
scas
mov
outsb
jo
mov
xlat
imulb
addr16
mov
sbb
cltd
pop
out
les
pushf
adc
popf
cmp
insb
std
xchg
cmc
dec
fcoms
mov
or
pop
rcrl
and
out
pop
jne
shrl
jbe
add
ja
pop
in
out
inc
mov
fisubs
xchg
mov
jl
loopne
data16
jp
jl
xchg
fwait
out
iret
inc
or
ja
stos
je
xchg
mov
gs
loop
jae
cmc
xor
mov
jmp
mov
or
imul
adc
loopne
cli
sub
ds
jecxz
pop
mov
ljmp
xchg
scas
es
cmp
jno
in
mov
fists
stc
xchg
int3
scas
adc
insb
adc
jmp
std
xor
dec
mov
mulb
dec
mov
pop
adc
in
xor
pop
xchg
mov
mov
mov
clc
mov
pop
dec
daa
subl
aaa
imul
out
push
push
les
inc
ss
clc
sti
sub
xlat
xor
and
das
inc
xchg
xchg
mov
jno
inc
mov
ficoml
fsubrl
outsb
cmp
push
pushf
xchg
mov
and
or
fsubs
xor
mov
mov
stos
sub
or
jle
jns
repnz
cmp
jmp
pop
cmp
loope
pop
mov
sbb
add
movsl
pop
xor
cwtl
rorl
and
int
mov
dec
adc
dec
test
arpl
ds
rclb
mov
or
dec
mov
pop
or
pop
out
dec
outsb
icebp
and
sbb
cmp
adc
call
pop
nopl
xchg
daa
xchg
xchg
push
imul
fbld
cmp
out
fwait
jb
in
inc
adc
adc
and
outsl
mov
cmp
dec
sbb
push
leave
mov
xor
mov
adc
mov
xchg
jo
cmpsb
and
cs
sti
mov
and
cli
loop
mov
mov
cs
push
jo
arpl
pop
call
adc
ljmp
add
dec
mov
add
fcmovnu
in
pushl
xchg
pop
scas
fwait
push
out
out
ss
dec
jmp
pop
jbe
popa
dec
pop
adcl
push
pop
imul
dec
icebp
ljmp
sti
out
dec
cmp
sub
sbb
outsb
push
add
add
mov
or
xor
mov
mov
dec
es
testl
jae
in
cmp
jbe
add
test
cmc
jae
pusha
lcall
mov
call
fmulp
jp
adc
fsubrs
cmp
lock
sbb
jle
es
push
popa
aam
xchg
je
add
cmp
lahf
mov
hlt
mov
cmp
pop
mov
mov
out
pop
push
jecxz
and
mov
outsb
sbb
fwait
icebp
pop
outsl
ret
call
cmc
nop
dec
outsl
cltd
inc
out
sbb
cld
int3
scas
mov
mov
orb
icebp
jne
mov
data16
cmp
xor
mov
jns
cmp
outsb
lds
lahf
test
lock
mov
ljmp
dec
out
mov
aas
or
popa
or
add
pop
insl
xchg
sarb
push
adc
aas
fs
jo
adc
sti
xchg
cld
imul
jbe
xchg
gs
loop
adc
sbb
mov
dec
lret
dec
sbb
outsb
fdivs
jb
fldl
sbb
fbstp
adc
int3
jbe
daa
aam
xchg
test
test
cmpsb
mov
sti
sbb
inc
mov
loop
fs
cs
pop
mov
mov
dec
lahf
clc
arpl
shlb
and
and
decb
ror
and
adc
into
cmp
icebp
and
sbb
cmp
out
sbb
jge
pop
fcoms
pop
and
imul
sub
sub
and
mov
lcall
pop
stc
mov
daa
lcall
out
jmp
fstps
popf
mov
cmp
mov
mov
hlt
sti
test
lcall
sbb
inc
sub
out
mov
or
cmp
mov
or
xchg
fcoms
jmp
jle
mov
bound
popf
ljmp
cltd
xchg
xor
lcall
ds
jmp
adc
and
push
dec
or
in
jp
dec
dec
mov
repnz
gs
ljmp
test
xchg
bound
or
outsb
adc
jo
and
xchg
push
out
stc
push
popa
inc
es
orb
shlb
mov
jg
addr16
xor
mov
fsubl
incl
mov
xchg
aas
fiaddl
push
sbb
cltd
cmp
add
popa
ss
int3
mov
aaa
shrl
mov
aam
ja
pop
shrl
mov
inc
push
push
pop
dec
sbb
adc
jnp
or
cmp
lods
stc
mov
out
js
pop
bound
and
fistpl
mov
dec
test
pop
jmp
push
jb
movsb
mov
push
inc
fucomp
das
adc
je
cmp
loope
mov
bound
scas
loop
sbb
fistpll
push
loope
cmpsl
fsubrl
adcl
ds
xor
stos
bswap
mov
xchg
mov
lds
push
imul
ficomps
add
sub
dec
push
lds
push
push
fs
int3
cmp
cld
fldt
mov
or
js
fwait
jecxz
arpl
sbbb
add
mov
cmp
push
mov
jge
cmp
mov
jg
mov
mov
fstl
xor
mov
xchg
lods
adc
push
cmpb
xor
mov
inc
hlt
jmp
arpl
jge
and
lods
adc
popf
pusha
jmp
lcall
mov
mov
adc
xor
js
std
in
and
jbe
scas
push
sbbb
mov
imul
mov
or
aaa
mov
mov
cld
mov
in
ret
nop
sbb
cmp
mov
jp
dec
ja
lea
lcall
bound
shl
aas
rep
pop
and
les
push
movsl
out
loope
loope
xchg
sbb
scas
int
jnp
push
mov
scas
mov
outsl
push
xchg
mov
lcall
dec
fwait
push
xor
cs
mov
add
xchg
mov
stc
shlb
xchg
mov
xorl
fld
push
xchg
rep
mov
aad
cmp
inc
jb
test
test
out
sbb
mov
fdivl
int3
je
stos
fdivrl
mov
dec
adc
xor
mov
mov
mov
pop
shrb
loopne
aam
jp
inc
xchg
push
mov
jb
xchg
iret
push
xchg
jbe
lcall
mov
push
adc
sbb
jne
je
jg
lcall
jp
add
inc
xchg
cmc
setns
inc
aaa
adc
sti
and
adc
imul
jns
repnz
inc
cmp
jle
pusha
movsl
sbb
andb
lahf
fdiv
mov
push
jno
aad
and
add
repnz
mov
mov
rol
movsb
xchg
jle
jmp
push
in
fucomip
and
faddl
mov
int3
mov
inc
add
imul
dec
ljmp
jno
add
xchg
adc
addr16
cmpsl
inc
sbb
fsts
pop
jo
loopne
inc
push
out
repnz
nop
sbb
shlb
mov
call
pushf
push
push
jl
stos
mov
es
aaa
xchg
jge
pop
ss
xorl
lds
mov
fcmovnbe
insl
fyl2x
orb
mov
add
pop
dec
pop
lods
ss
sub
test
fnstsw
mov
jg
xor
dec
decl
pop
mov
adcb
int3
dec
into
push
ss
xchg
jae
decl
sbb
ds
loopne
insb
mov
add
dec
pop
push
mov
ret
js
and
add
mov
loope
xchg
dec
push
mov
pop
inc
adc
shl
push
fcompl
in
jae
shlb
add
out
push
fistl
xor
iret
add
or
xor
orb
inc
lods
js
dec
mov
mov
cmp
call
xchg
inc
popa
inc
add
xchg
adc
lret
popw
mov
mov
sbb
inc
mov
outsl
jecxz
addr16
daa
int3
pop
scas
and
xchg
jnp
aas
mov
ds
mov
push
mov
push
xchg
xor
dec
push
pop
ss
mov
mul
ret
mov
dec
lea
pop
mov
push
loop
adc
jae
adc
pop
xor
xor
mov
in
sbb
mov
push
sbb
clc
ror
jne
mov
popa
inc
push
mov
cmp
inc
lods
ja
je
mov
add
cmp
sub
jmp
jns
cmp
aam
pop
pop
mov
ret
jne
in
out
dec
push
pop
pop
in
rol
loop
jns
xchg
imul
mov
loop
fs
inc
cmpsl
push
cmc
cmp
aam
push
pop
lock
cli
call
inc
push
xor
into
cmpsb
cli
movsl
sbb
loope
xlat
sub
pop
fistps
push
sub
or
cmp
cs
xchg
jnp
pop
mov
xor
mov
shll
push
cli
jo
mov
or
inc
jp
call
in
xchg
cmp
fnstcw
xchg
and
mov
hlt
push
outsl
jl
test
add
jbe
gs
adc
mov
jns
sbb
and
dec
rcrb
xor
push
pop
out
aaa
jle
aad
test
pop
lret
dec
xchg
push
mov
push
imul
push
pop
pop
ret
mov
arpl
inc
adc
jb
and
mov
fdivrs
lret
cmp
lods
dec
mov
mov
orb
jg
roll
add
lret
mov
es
addb
aam
daa
lods
mov
out
lds
pop
and
mov
and
push
adc
es
aaa
stc
ja
jo
js
or
and
or
mov
add
int3
outsb
das
pop
in
sbb
shll
sahf
dec
mov
mov
xor
popf
push
adc
testb
push
adc
loopne
ds
adc
mov
orl
lahf
clc
jae
mov
repnz
pop
mov
fnstsw
mov
aam
adc
je
inc
mov
test
cmpsb
nop
gs
int
iret
xchg
push
aad
ljmp
and
mov
push
loope
std
pop
shlb
fdivl
testb
pop
sbb
push
fdivs
js
sbb
xchg
outsl
xor
subl
ljmp
jns
or
js
lahf
mov
inc
out
push
out
popa
mov
fidivrs
pop
repnz
bsf
pushf
aas
int3
mov
fisubrs
les
sub
cmpsb
rcr
int
test
mov
mov
ss
fadds
scas
inc
cld
testl
fdivrs
imul
xchg
jb
mov
and
jo
out
call
jge
adc
mov
nop
add
loope
outsb
adc
shl
xchg
scas
dec
fldenv
add
xchg
icebp
scas
sbbb
dec
cmp
inc
cmp
das
je
xchg
xchg
in
cmpsl
mov
and
daa
mov
sbb
or
xchg
psubsb
and
push
jne
mov
adc
xchg
cmc
sbbl
les
pop
and
test
mov
pop
ror
cmpl
pop
jg
mov
mov
mov
mov
sarl
movsb
adc
dec
outsl
xchg
jb
mov
xchg
xchg
fwait
int3
dec
pop
cmp
jbe
gs
test
sbb
jno
icebp
call
pop
pop
ds
fisubrl
das
lcall
jo
xor
fidivs
jge
jns
xor
jnp
call
push
add
mov
xlat
pop
popa
test
lock
xchg
sub
pushl
or
repz
gs
out
adc
lret
push
call
dec
pop
push
xor
dec
push
repnz
mov
shl
fucomip
and
xchg
adc
mulb
xor
and
gs
xchg
push
das
jb
lds
sbb
push
add
adc
out
mov
mov
dec
push
or
push
pop
lahf
into
lods
push
cmp
dec
in
lds
aas
lret
aam
mov
jno
aas
leave
lcall
dec
pop
aaa
dec
les
pop
add
inc
mov
ds
inc
pop
xlat
xchg
mov
fs
mov
xor
push
xor
daa
or
incb
fcoms
pop
call
lods
push
aam
inc
inc
adc
mov
mov
push
lods
filds
xchg
outsb
sub
sub
int
mov
adc
sbbl
jle
sub
loopne
ss
dec
jge
inc
mov
mov
shl
xchg
pop
aaa
shlb
shll
adc
push
outsb
xchg
and
add
andl
mov
arpl
hlt
xor
mov
loopne
insb
adc
push
out
push
mov
xor
adc
mov
pushf
test
dec
fists
out
fs
pushf
inc
dec
sub
adc
lcall
jnp
loop
enter
jo
daa
repz
out
shll
sub
pushf
push
js
mov
into
ljmp
xchg
mov
mov
scas
testl
jbe
mov
mov
mov
fcmovnbe
pusha
aad
and
loope
cmp
insl
hlt
stc
fstps
std
pusha
outsb
xlat
in
jo
xlat
dec
jnp
js
sub
in
insb
sbb
cltd
cld
mov
mov
jmp
imul
int3
repnz
pop
sub
cmc
outsb
pop
sbb
testl
hlt
lahf
xchg
subb
xchg
jb
insb
nop
outsl
xorb
ret
pusha
jl
in
shlb
out
pop
jge,pn
push
push
add
loope
stos
add
lods
xlat
xchg
lea
add
cmp
out
dec
leave
xor
xor
out
lcall
push
xchg
sahf
xor
clc
jg
sub
insl
lods
push
out
imul
and
inc
out
cmp
or
inc
mov
aad
jo
int3
adc
outsl
xchg
xchg
jnp
lahf
sbb
lcall
push
jp
ss
subl
inc
sbb
mov
or
cli
mov
out
mov
icebp
lcall
mov
std
sub
movsl
jle
das
xchg
lods
xor
mov
enter
xlat
mov
push
push
daa
pop
mov
addr16
dec
stos
pop
and
inc
call
pop
subb
dec
pop
jge
mov
das
imul
sbb
push
inc
jno
and
add
xchg
aad
sbb
cli
fists
adc
push
leave
and
dec
dec
rcr
pop
pop
add
add
rcl
inc
mov
or
mov
fwait
or
xchg
mov
xor
or
fwait
jbe
add
dec
xlat
or
aas
std
insl
push
mov
and
sbb
xor
jno
aas
sub
sub
xchg
sarb
lods
inc
or
out
xchg
lret
out
jns
mov
shrl
sti
orb
movsl
lds
pop
inc
sahf
sub
cmpsl
stos
and
ja
int3
pop
jo
mov
and
pop
push
imul
fs
lock
inc
out
es
mov
mov
in
push
out
pop
sbb
mov
lock
xlat
shll
jne
in
jle
lods
sbb
lret
mov
loope
and
push
sub
movsl
mov
in
test
adc
hlt
inc
adc
cmpsb
dec
inc
inc
push
push
cmc
sti
cli
adc
lods
jmp
sub
mov
xorl
rclb
testb
fstps
inc
adc
popf
cmpl
sub
push
or
xchg
bound
dec
bound
jp
je
bound
xor
cmp
fs
push
xchg
xchg
or
aam
jno
push
pop
xchg
pop
mov
push
jge
jmp
sbb
pop
leave
or
jnp
lret
nop
mov
pop
mov
arpl
pop
mov
iret
push
notb
sbb
mov
fistpl
sbb
pop
xchg
pusha
iret
jecxz
or
and
dec
mov
lds
repnz
arpl
mov
lds
pop
pop
movsb
lods
mov
mov
jne
dec
mov
jns
mulb
test
cmp
imul
adc
mov
call
sbb
insl
cmp
jbe
iret
and
jp
push
int3
push
xor
in
add
mov
xchg
ss
movsl
rolb
daa
mov
loop
fwait
and
cs
insb
adc
cmp
or
push
cmp
push
frstor
lea
sub
adc
repnz
ja
ja
lea
movsb
add
das
ljmp
sub
je
lods
or
fisubrs
cmpsl
xorb
cmc
jae
pop
push
out
js
outsb
mov
mov
std
fdivrl
mov
mov
mov
inc
mov
sub
xchg
add
sti
sbb
mov
add
inc
xchg
xchg
jp
loopne
dec
ljmp
pushf
sahf
dec
iret
mov
call
xor
sahf
xchg
xor
in
scas
in
imul
fucomi
decb
sub
push
fld
jno
popa
add
push
mov
or
dec
into
stc
pop
mov
adc
in
icebp
add
push
ja
jle
cmp
ss
sbb
lods
lret
adc
out
push
adc
jo
mov
paddusw
lahf
jl
jecxz
jge
fdiv
and
lock
ret
test
sahf
rol
sub
dec
hlt
jno
xor
sbb
sbb
aaa
jle
mov
in
icebp
add
sbb
sub
fs
lahf
sar
xor
enter
jo
imul
mov
adc
movlps
fisttpll
dec
imul
lea
mov
dec
pop
push
xchg
jo
dec
inc
stc
lcall
inc
jl
jnp
and
divl
dec
inc
jae
out
lahf
lret
pusha
jo
sub
popf
xlat
ror
sbb
sbb
mov
test
jmp
add
push
pop
mov
mov
loopne
aad
push
adc
lahf
lods
test
icebp
test
adc
inc
mov
data16
mov
lret
fmuls
insl
stos
adc
in
cmc
bswap
xchg
outsb
jge
cmp
push
adc
inc
es
ds
out
jne
xchg
or
sbb
fsts
in
sub
repz
lods
in
fmull
sub
sbb
mov
push
lods
mov
xchg
push
fnsave
or
xor
adc
adc
std
in
dec
movsb
fsub
mov
mov
add
in
adc
test
pop
loopne
mov
sti
dec
push
pop
push
movsl
sbb
mov
int3
jmp
mull
or
or
sahf
mov
inc
mov
imul
pop
xor
adcb
decl
xchg
arpl
adc
add
in
cld
fs
sub
inc
xchg
sbb
dec
pop
mov
xlat
dec
mov
dec
ret
sbb
and
push
lret
lret
call
mov
pop
out
testb
nop
fmul
cmp
add
imul
adc
repz
xor
hlt
jae
stos
mov
mov
sbb
out
and
cmp
dec
pop
mov
xchg
inc
stos
popa
push
mov
movsb
stc
cmp
aam
mov
int
jl
dec
mov
rcrb
push
push
mov
pxor
cmc
out
mov
xor
add
rorb
outsb
loopne
sbb
xchg
mov
pop
mov
test
fwait
mov
and
ljmp
mov
gs
scas
inc
adc
fidivrs
ret
sub
enter
xchg
pop
insl
sahf
cmp
imull
ret
push
ret
inc
adc
fstpt
jp
lret
in
cmc
outsb
loop
lret
mov
cmc
int3
sbb
push
sub
or
lds
xchg
into
dec
shl
adc
inc
hlt
xor
test
mov
outsl
mov
es
push
add
shl
and
lret
mov
int
mov
lock
xchg
pop
icebp
mov
int3
mov
pop
and
xchg
add
xchg
mov
inc
cmc
sbbl
sub
lds
test
cmp
and
xchg
push
stc
inc
push
dec
js
mov
push
scas
out
jp
fidivl
scas
dec
mov
outsb
aaa
mov
xor
shr
adc
mov
mov
dec
mov
ret
inc
push
subb
xor
inc
mov
stos
outsb
popa
je
jmp
adc
mov
jbe
and
ret
push
sub
sbb
xor
sbb
inc
cmpsb
push
jno
jno
lahf
call
push
pop
aad
dec
js
jns
add
insb
cmp
fwait
cmp
mov
add
jge
push
out
mov
push
or
dec
leave
jecxz
out
js
ret
iret
mov
jae
xchg
ret
push
enter
ret
sarb
adc
inc
adcb
shll
lods
icebp
mov
cld
stos
fsts
repz
das
mov
hlt
mov
pop
ja
fsubs
loop
add
mov
arpl
cmp
call
and
mov
addr16
mov
incb
sbb
call
dec
mov
clc
and
loop
outsb
repz
inc
int3
sub
add
lret
stos
call
pop
mov
stos
mov
pusha
inc
mov
iret
add
lods
je
sbb
incl
and
cmovs
sbb
push
iret
jo
nop
mov
xlat
cwtl
or
sub
jne
sbb
or
out
lock
dec
inc
inc
test
pusha
inc
pop
or
popf
std
dec
lahf
pop
xor
jno
mov
xchg
pop
jo
cmpsb
dec
fiadds
fnsave
inc
mov
mov
jmp
out
fwait
pusha
imul
mov
sub
or
scas
lods
mov
push
test
cmpsl
js
fisubl
rcll
or
mov
out
scas
xchg
inc
movsl
or
adc
jns
sub
or
mov
jns
mov
in
inc
dec
pand
push
lret
mov
sub
shlb
fdivrs
inc
outsl
ss
mov
push
aaa
into
dec
jg
into
and
stos
or
mov
pop
aas
cld
stos
cmp
frstor
add
mov
xchg
inc
lret
notl
adc
jno
icebp
jb
mov
stos
ret
enter
push
in
jns
jb
cmp
mov
cwtl
push
pop
push
mov
lret
add
or
ds
in
decl
movsb
cwtl
jnp
gs
cltd
adc
inc
push
cmp
je
fsub
push
sbb
sbb
jbe
int3
dec
mov
push
daa
jb
xor
mov
aas
in
sbb
push
xlat
or
xor
addr16
xchg
mov
loopne
cli
dec
mov
pop
aas
push
adc
enter
jo
sbb
ljmp
lret
adc
and
ss
in
xor
pushf
addb
in
sbb
and
inc
mov
orl
jmp
pop
inc
cs
int3
add
xlat
imul
mov
lea
jo
cmc
outsb
dec
test
notl
push
fnstsw
cmp
loop
lret
sahf
and
xor
fadds
loop
cmp
dec
cmp
mov
jle
push
or
and
xchg
pop
inc
out
shll
shlb
pop
xchg
pop
push
adc
pop
push
and
mov
scas
pop
cwtl
xor
lahf
xor
aam
ret
cmpsb
imul
test
lcall
push
sbb
mov
inc
lcall
ljmp
repz
jo
ss
notb
xchg
out
jmp
pop
adc
push
cli
movsl
add
bound
jno
outsb
mov
std
ja
xchg
jo
pop
scas
cwtl
shlb
pop
jecxz
fistpl
pop
notb
jb
sub
and
std
mov
insl
dec
out
hlt
xchg
cli
loopne
mov
mov
adc
cli
xor
add
cmc
and
jne
mov
cmp
clc
mov
xor
mov
push
mov
stos
xchg
push
jb
push
scas
sbb
inc
sti
push
cld
into
xchg
popa
mov
loope
gs
lret
cltd
jns
xchg
mov
scas
shlb
pusha
mov
rolb
enter
sbb
call
pop
lret
mov
fldcw
sarb
jnp
jecxz
or
add
lods
ret
rcrl
push
xchg
je
mov
aaa
ja
das
push
jmp
int3
sbb
inc
xor
add
scas
add
xorb
cwtl
and
std
aas
daa
sub
daa
jl
and
xchg
popf
mov
fldenv
cs
cli
sbb
out
outsb
lret
push
xorl
mov
xchg
fmuls
xor
mov
dec
cmp
mov
jo
outsb
adc
dec
push
mov
mov
pop
insl
cmpb
push
xchg
cmp
add
jbe
inc
xor
and
dec
and
adc
mov
mov
sbbb
ret
ret
std
shl
imul
hlt
jnp
leave
cs
js
ret
loop
sbbb
test
inc
stos
scas
loop
mov
sti
adc
scas
sub
add
pushf
and
inc
shl
test
xchg
xor
or
pop
insl
outsl
sbbl
divb
lea
sbb
sarl
ret
push
inc
jmp
sbbb
mov
mov
fidivs
mov
xchg
daa
loope
rclb
mov
push
out
cld
jbe
out
and
imul
push
repz
mov
push
fmull
insb
jnp
cltd
cmp
inc
scas
icebp
push
sarb
sub
mull
test
adc
cmp
into
ja
sub
add
add
popa
mov
add
test
xchg
inc
pop
or
pop
mov
inc
pop
fstl
sbb
dec
fidivs
movsb
int
xor
add
mov
insb
lahf
jg
aad
lea
cmpsb
mov
js
lret
pop
jg
sbb
mov
aaa
insb
movsb
inc
adc
stos
outsl
int3
sub
ret
jno
jo
push
jne
add
push
push
es
popf
in
add
daa
outsb
dec
push
mov
mov
cltd
out
jg
mov
ret
push
jp
outsl
dec
ret
popa
mov
mov
pop
sub
rcl
les
sbb
pop
and
mov
cmp
dec
pop
sahf
mov
imul
orb
inc
out
sub
into
pop
cli
cmp
dec
pusha
in
fsubrl
inc
add
test
dec
shrl
push
lods
dec
out
fucomip
orl
sbb
or
out
gs
fidivs
aas
lret
daa
daa
cmp
jge
and
sahf
je
push
push
xlat
jmp
cmc
bound
fwait
mov
insl
xor
inc
sub
mov
jno
les
scas
xchg
sti
lea
inc
pop
iret
lcall
lret
jmp
test
mov
insb
adc
cmp
adc
in
test
inc
add
xchg
fldl
pusha
aad
cmc
mov
fwait
push
faddl
pop
or
loopne
dec
notl
idivb
sub
jb
ret
pop
or
fistps
lcall
mov
pushf
fcompl
xlat
jle
pop
jecxz
sbb
dec
fistpll
xchg
mov
out
fdecstp
push
push
or
pop
lods
fmuls
aad
push
ljmp
hlt
clc
testl
pop
jno
insl
gs
repz
fisubl
push
ret
cmp
push
mov
es
jo
pop
rol
sbb
sbbl
repz
lcall
sub
mov
pusha
clc
and
mov
xchg
xlat
xchg
popf
dec
pop
mov
popa
cmp
pop
jl
inc
repz
xlat
jp
add
xchg
cli
pop
fcmovbe
es
pop
int3
sahf
push
or
repz
cmp
ljmp
push
arpl
push
xor
inc
cmc
dec
popa
cmpsb
fdivrp
mov
pop
and
mov
cmp
fnsave
add
push
clc
rcll
inc
or
cmp
mov
jecxz
jb
mov
mov
test
sbbl
mov
cmp
push
or
repz
sub
mov
cmp
mov
adc
mov
mov
scas
push
sub
sub
lret
scas
loop
in
icebp
jmp
into
imul
mov
out
je
sub
addr16
push
dec
push
subl
js
into
xor
iret
dec
hlt
jne
push
sbb
and
mov
pop
xchg
jl
enter
lock
int3
fisttpl
lods
bound
lock
test
test
and
mov
xor
dec
idiv
adc
adc
push
clc
and
movsb
mov
in
mov
push
mov
or
xchg
fistpl
xchg
pop
push
xchg
jb
pop
mov
mov
dec
dec
and
jle
adc
inc
enter
rcrl
sub
movsb
jp
pop
arpl
addb
adc
loop
std
jb
inc
je
outsb
ja
sub
out
and
es
adc
pop
push
int3
mov
jg
ret
xorl
imul
cmc
inc
mov
mov
jmp
inc
lods
mov
jmp
dec
ljmp
xor
addr16
ljmp
sub
mov
mov
cltd
xor
cmp
movl
and
xor
adc
add
into
push
adc
pop
pop
fbld
adc
sub
shll
shl
sub
std
jp
rcll
pop
and
pop
cli
rclb
or
int3
pop
out
push
pop
cmc
xor
jp
xlat
mov
loopne
cmp
or
pop
inc
push
and
and
mov
push
lods
inc
scas
sti
mov
mov
mov
or
jno
notb
stos
xchg
and
jmp
inc
pop
adc
ja
btc
int3
sbb
or
xchg
outsb
jecxz
aas
add
and
push
mov
outsl
mov
dec
jae
sbb
repz
cmc
xchg
aas
gs
mov
mov
push
lock
lret
scas
inc
pop
sahf
and
shll
clc
nop
xor
loope
inc
nop
push
push
mull
imul
xsavec
outsl
test
and
fsubr
mov
lcall
jge
in
push
sarl
hlt
xor
clc
ficoms
mov
and
jle
dec
jp
outsl
int
fisttpll
cli
pop
lcall
lods
mov
jbe
or
adc
jns
aaa
pop
pusha
out
movsl
loop
ljmp
mov
sbb
mov
movsl
add
mov
jae
pusha
jno
and
push
lret
dec
lds
xor
mov
inc
mov
mov
mov
sbb
test
pop
mov
push
add
clc
adc
mov
jmp
jp
jge
popf
nop
inc
fcoms
sbb
jg
jnp
dec
ret
into
add
cwtl
les
mov
adc
or
jmp
cltd
call
jbe
xlat
mov
jo
scas
jecxz
test
dec
lcall
add
cmp
inc
add
insl
mov
mov
lods
add
adc
cltd
or
pop
arpl
out
in
cmp
in
pop
lods
push
jl
mov
xor
dec
xchg
cmp
scas
sbb
fldcw
inc
mov
xchg
setne
nop
imul
addr16
or
shr
repz
lock
aam
xchg
sub
mov
lret
loopne
nop
ss
mov
call
mov
sar
jp
fwait
das
je
fmull
pop
outsl
mov
mov
inc
lds
push
out
mov
mov
adc
push
mov
popf
bswap
cmpsl
shr
sbb
outsl
mov
in
jb
xor
and
cmpsl
push
dec
lods
cmp
fcmovnu
dec
dec
fs
cmpsb
pop
mov
std
dec
lock
cli
cltd
test
xchg
scas
mov
cmp
add
xchg
test
ljmp
sub
or
add
adc
dec
sub
test
ds
movsb
icebp
push
sti
xchg
dec
stos
inc
jae
mov
repz
adc
pop
pusha
movsl
call
push
inc
mov
cs
es
popf
popf
jne
pushf
mov
cmp
or
popa
test
addr16
xchg
ret
dec
mov
adc
sbb
lds
stos
iret
sarl
push
or
mov
push
ds
mov
adc
outsb
roll
cs
cmpsl
cmp
fsubs
xor
imul
jno
cmp
lcall
push
jl
shr
xor
dec
dec
mov
clc
xchg
gs
test
sbb
sub
or
adc
mov
fcompl
mov
cwtl
jge
frstor
inc
or
push
xor
outsl
cmp
mov
mov
movsb
sbb
movsl
or
push
dec
dec
loop
mov
loop
jo
sbbb
fstpl
stos
adc
add
xchg
mov
push
and
mov
push
jmp
sarb
mov
mov
adc
jmp
mov
pop
xchg
pop
push
outsb
ljmp
fcoms
jp
lock
sbb
xchg
cmp
adc
pop
lods
out
jle
out
mov
inc
lahf
add
cld
sbb
das
and
adc
fistl
popf
cmp
in
dec
xchg
adc
fnstcw
cs
jb
in
jle
cmp
test
dec
add
mov
rorl
jg
movsl
and
data16
cli
add
mov
cmpsb
std
mov
jno
leave
in
fs
mov
sub
lret
hlt
jbe
adc
mov
inc
pop
data16
jns
lods
loope
ljmp
inc
push
mov
inc
xor
xlat
int
sub
adc
in
push
fmuls
dec
mov
lcall
nop
jge
mov
ja
outsl
icebp
jae
mov
lahf
mov
mov
dec
add
stc
mov
xor
out
cld
jp
mov
adc
sbb
insl
nop
add
call
adc
mov
stc
mov
dec
cmp
movsb
std
jl
pop
in
fstpl
jno
shrl
das
shlb
popf
jle
gs
fwait
xchg
scas
push
outsl
hlt
push
cs
sbb
sbb
pushf
dec
scas
cmp
push
scas
mov
negl
mov
sub
daa
inc
cmp
cmpb
insl
xor
push
daa
add
dec
jo
dec
loop
sbb
mov
cmp
dec
ss
cmp
push
arpl
mov
les
lds
out
movsb
cmp
add
add
ret
test
xor
das
mov
cld
adc
aam
out
and
sub
push
insl
outsl
mov
mov
sub
pop
push
testl
push
and
add
push
js
jnp
push
pop
shr
and
mov
inc
insl
xchg
adc
repnz
aaa
lock
xor
movsl
rolb
packssdw
mov
stos
sbb
push
mov
mov
not
cltd
adc
cmc
sub
sub
ja
icebp
aas
xor
or
pop
pop
mov
add
mov
adc
es
stos
mov
data16
leave
pop
bound
test
into
mov
fstpl
cmp
ret
clc
jns
inc
mov
mov
xchg
in
mov
gs
xor
or
mov
xor
cmpsl
lock
das
pop
adc
mov
xor
sub
jle
cmpsb
xchg
xchg
cmpsb
insl
mov
insb
lret
bound
jo
ss
lds
leave
scas
jae
pop
js
cmp
or
fildll
and
pusha
bswap
xchg
fcomp
mov
add
jns
push
out
js
andb
loopne
jg
outsl
ficomps
aas
arpl
and
sbb
adc
insl
js
mov
int
out
mov
mov
scas
and
aad
push
jmp
rcr
lods
outsl
out
sub
insb
lods
dec
jecxz
je
filds
cmc
sub
pushf
int3
stos
in
lret
pop
cmp
pop
xor
add
xchg
push
sub
lret
or
jle
scas
test
cwtl
jo
fisubrl
cs
dec
call
sub
cmp
dec
cmp
andb
xor
sbb
lods
add
push
sub
inc
push
fisubs
scas
dec
jo
in
push
jp
adc
cld
add
stos
repz
pop
pop
jmp
dec
lret
jge
push
adc
and
test
mov
nop
mov
lea
imulb
pop
and
and
int3
jecxz
lods
jno
repnz
jns
jns
sahf
lock
rcrb
cmp
mov
ret
lods
add
pop
push
shrb
add
loop
push
mov
push
sbb
sbb
mov
sbb
dec
adc
lret
rclb
testl
and
lods
in
fdivl
cld
rorb
inc
lds
ja
jbe
dec
out
mov
jp
insl
add
stos
pop
pop
xchg
mov
das
es
sbb
pop
aas
push
int3
scas
and
sbb
shr
in
mov
je
mov
sbb
in
out
in
adc
add
and
sbb
scas
insl
lock
movsb
xchg
outsl
cmp
bound
imul
adcb
push
cmpsl
scas
push
adc
fidivrl
mov
je
xchg
and
fs
lock
or
dec
cmpsb
hlt
in
sub
pushf
popa
or
inc
cmpsl
jmp
mov
loope
jge
add
scas
and
pop
fmuls
inc
adc
xchg
xchg
cs
lret
lret
cwtl
inc
sub
ficoms
out
push
jns
mov
xor
or
push
xor
cli
adc
push
in
fwait
and
fwait
das
inc
and
xorb
xchg
lret
cmp
movsb
jle
stc
outsb
push
popa
outsb
vmread
rorl
and
mov
fidivs
in
cld
inc
daa
jecxz
xchg
cmp
push
xchg
mov
cs
dec
aad
loope
cmpsl
out
pop
and
pop
and
pop
out
fcmovbe
sbb
mov
xor
mov
incl
fsubrs
leave
jnp
call
and
jl
out
jbe
push
inc
rcll
jbe
aad
pop
hlt
scas
js
and
sub
inc
leave
aas
xlat
push
into
pop
shlb
clc
sub
addr16
mov
add
fs
in
test
jb
xor
in
push
xchg
cmp
loopne
dec
sub
bound
in
jns
in
ljmp
pop
js
push
aam
cmpsl
imul
xchg
es
je
ss
dec
sub
lods
pop
adc
in
ror
lahf
xchg
push
dec
pop
mov
aaa
and
mov
cmp
mov
clc
dec
pop
sti
icebp
push
decb
mov
aam
xchg
imul
int
xchg
pop
pop
xchg
sbb
and
shlb
pop
sbb
xchg
in
call
test
mov
sub
add
or
ljmp
scas
cmp
dec
and
testl
sub
jae
cmp
ds
mov
nop
jle
mov
stos
repnz
aad
scas
popf
inc
icebp
jmp
dec
cmp
mov
and
jae
or
daa
lea
leave
rcrl
mov
mov
cs
std
outsb
in
sbb
mov
out
pop
or
dec
push
mov
call
add
sub
sbb
clc
pop
push
repz
xchg
xor
movsb
fisubrs
dec
in
push
mov
mov
or
xorl
es
fisttpll
rorl
stc
shrb
into
out
loopne
xchg
fidivl
inc
mov
pop
pop
mov
dec
pop
pop
addl
ret
mov
xchg
mov
jge
imul
xor
loop
adc
inc
subb
push
push
fcos
jo
js
inc
adc
mov
sbb
mov
xchg
divb
cmpl
inc
shrl
xchg
clc
push
xor
aad
ss
jne
out
popa
out
inc
movsb
jo
sbb
pop
jmp
pop
jl
push
mov
dec
sbb
mov
mov
cli
in
popf
testb
xchg
jbe
adc
or
shll
add
test
and
mov
imul
lods
cmpsl
repz
inc
adc
out
in
out
fwait
mov
inc
ret
popa
add
cmp
lahf
lock
adc
mov
xchg
out
test
lret
jae,pn
jge
ljmp
das
push
inc
std
adc
push
mov
mov
dec
nop
jle
push
mov
mov
cmp
adc
pop
mov
mov
out
cmp
sbb
adc
xor
and
rclb
xchg
in
ljmp
hlt
push
cmp
in
out
into
jo
ret
rcrl
jns
outsl
inc
cwtl
dec
mov
dec
dec
repnz
sti
ficomps
clc
or
jecxz
mov
test
inc
fisubrs
lret
mov
in
adc
lcall
push
shlb
aam
push
inc
dec
pop
cmp
sub
add
cmc
arpl
outsb
stos
push
mov
mov
std
imul
mov
cmp
sbb
popf
pop
mov
lahf
les
mov
lret
pop
add
rorb
ljmp
and
sbb
xchg
mov
pop
cmp
push
xchg
add
inc
or
jne
dec
cmp
push
jecxz
aam
mov
pop
inc
adcl
es
cmpb
test
pop
imul
les
daa
outsl
leave
add
xchg
notl
mov
pushf
mov
cmp
loop
xchg
mov
mov
lret
pushf
push
or
lret
push
sub
sti
inc
push
je
loopne
test
jl
sbb
ja
pushf
adc
outsb
dec
mov
mov
xor
daa
lods
shll
ss
cwtl
aaa
cmp
and
aam
xchg
ds
xlat
xchg
scas
cmp
xchg
cwtl
pop
pop
dec
outsb
pop
fmull
and
mov
xchg
mov
test
cltd
orl
insb
push
nop
fcmove
cmc
or
jns
jno
testb
mov
jge
ja
or
mov
pop
add
inc
subb
setg
and
shr
pop
jp
cs
mov
inc
insl
hlt
add
add
aas
std
xor
push
iret
jo
adc
push
pop
pushl
jle
adc
inc
js
loopne
push
sbb
fnstcw
xor
xor
jnp
mov
add
mov
xchg
xor
jo
cmpsl
inc
bound
lods
int3
outsb
stos
inc
inc
nop
lret
add
fistpll
xorl
push
std
sbbl
in
pop
leave
in
ffreep
xor
jp
dec
mov
lods
sbb
outsb
cmp
pusha
add
pop
mov
fwait
enter
push
push
and
add
addb
xchg
pusha
jno
movsl
data16
cmp
cmp
lods
and
mov
sbb
test
mov
xchg
jnp
mull
mov
hlt
icebp
mov
sbb
lret
out
cmp
adc
jmp
je
xchg
xlat
cmp
loope
jmp
es
fistpll
sub
adc
sbb
popa
jecxz
add
arpl
pop
adc
pop
popl
test
jo
adc
scas
push
jle
dec
push
imul
dec
fs
mov
add
sub
add
pusha
jl
in
sti
dec
inc
loope
and
push
pop
mov
repz
xor
sbb
dec
sub
xchg
outsl
sub
sarl
out
adc
dec
hlt
sar
insb
test
in
std
and
cmp
and
mov
or
mov
out
popf
jae
in
xchg
fidivs
xchg
std
fbstp
mov
in
push
pop
movsb
dec
pop
pop
daa
inc
mov
mov
je
aaa
push
and
mov
mov
mov
jge
aam
icebp
jl
xlat
adcb
sahf
add
push
cmp
add
mov
mov
pop
sub
xchg
pop
dec
das
sti
xchg
ja
mov
cmpsb
push
and
repz
mov
rcll
pusha
negb
and
fbstp
push
rolb
jo
outsb
sub
fbld
stc
xchg
in
cmc
add
jne
jns
dec
cmp
inc
dec
xor
jnp
bound
ret
ffreep
jg
sarl
loop
and
ljmp
and
xchg
lock
outsb
mov
adc
push
push
xor
mov
iret
push
out
xor
lret
or
fcomp
pop
pop
xchg
mov
fimull
repnz
in
xchg
iret
or
les
fwait
and
lock
xor
aas
dec
sub
xchg
stos
mov
movb
inc
jae
mov
mov
test
cmp
in
cmp
fnsave
loope
popa
xor
fsts
jo
ja
sub
cmp
lret
add
lcall
inc
push
fwait
pop
jbe
hlt
jmp
sub
cltd
mov
cvtps2pd
rol
push
ret
pop
mov
cmp
sti
inc
das
mov
call
push
outsb
sbb
push
mov
mov
jne
jecxz
adc
popa
imul
sub
mov
repz
enter
mov
mov
or
jb
ret
mov
mov
mov
push
movsl
or
push
pop
xor
fs
xor
jo
subl
enter
and
mov
dec
or
idiv
mov
loopne
dec
dec
mov
xchg
ds
cmp
adc
ret
test
push
mov
cwtl
or
mov
cltd
add
sbb
hlt
or
insl
icebp
sbb
icebp
jmp
jo
push
mov
push
lret
data16
push
jmp
sbb
jecxz
pop
xchg
add
and
out
scas
cmp
or
fisttpl
mov
adc
pop
gs
adc
jb
arpl
and
incl
scas
add
daa
cwtl
jne
aas
xchg
dec
jnp
adc
dec
mov
xchg
je
jnp
addl
mov
mov
aas
ja
aam
add
dec
cmpb
dec
cmc
add
adc
dec
int
adc
mov
aad
jg
dec
cltd
pop
inc
inc
out
dec
aad
fimuls
cmpsb
mov
jge
gs
sbb
cmpsl
mov
nop
daa
or
mov
mov
xchg
adc
sub
test
adc
fcmovbe
jno
fdivs
std
cld
fnstsw
fsubrs
test
mov
fdiv
lds
push
adc
frstor
xchg
inc
ret
mov
lea
pop
aad
aas
adc
pusha
adcl
and
or
sarl
pop
mov
daa
jg
mov
ss
inc
push
dec
hlt
jle
mov
outsb
inc
int3
notl
sub
and
nop
pusha
cltd
pop
fldenv
andb
dec
and
add
adc
iret
ret
fs
adcb
adc
arpl
insb
dec
lds
sbb
xor
cwtl
xor
loopne
data16
cmc
es
rcrl
inc
pop
aad
sbb
lret
add
inc
lret
fdiv
int
mov
jp
xor
aad
movsb
cmpsl
xchg
dec
int3
lret
mov
pop
cltd
push
cmc
loopne
lds
mov
or
out
sub
es
mov
pop
jecxz
xchg
sub
pop
mov
pop
xor
les
push
pop
or
mov
in
insb
repz
mov
lds
fbstp
push
jp
sub
popa
inc
ret
mov
xchg
xorl
sbb
jp
inc
and
dec
sub
xor
arpl
push
jmp
mov
mov
imul
lods
mov
jg
mov
lretw
mov
cmp
jns
jle
jl
sub
xchg
pop
mulb
mov
jmp
icebp
fistps
cmpsl
dec
lock
sbb
scas
movsl
scas
stos
out
mov
shlb
enter
cmpsl
mov
leave
lcall
cmpb
test
dec
pop
adc
or
in
idivb
mov
das
mov
cmp
mov
xlat
lds
je
inc
sub
pop
cmp
pop
ja
or
cmp
mov
ds
mov
jge
cmp
inc
fwait
mov
and
cmp
mov
daa
leave
adc
rcrb
bound
enter
jne
push
mov
call
jae
popf
icebp
mov
push
test
push
shrl
ljmp
adc
enter
icebp
lahf
mov
sarb
pushf
addr16
cmp
mov
in
imul
pushf
out
and
sub
mov
xchg
sbb
xchg
sti
pop
jmp
xchg
cmc
xchg
dec
fucomi
inc
sub
std
and
cmp
scas
out
pop
adc
popl
fisubs
outsl
and
sbb
pop
out
repz
mov
push
lods
lods
out
mov
cmc
fdivl
mov
iret
jge
push
cld
xor
movsl
mov
out
iret
jbe
mov
sahf
fildll
xor
negl
xor
mov
push
pop
fisubl
in
insl
xor
mov
popa
mov
pop
inc
or
rclb
push
outsl
push
add
movsl
in
mov
push
push
lcall
xor
clc
pop
and
lcall
sahf
mov
sarl
lock
cmp
data16
fadds
xor
adc
inc
repnz
int3
adc
outsb
addb
arpl
jl
or
pop
mov
dec
cs
sti
lock
ret
cmp
pop
jle
cmovp
popa
xchg
and
stc
int
leave
faddp
push
andb
push
lea
mov
xor
push
mov
fcoml
daa
dec
inc
popa
jno
and
or
xor
push
pop
iret
fmulp
push
pop
adc
sbb
cmp
lock
int
dec
aas
mov
lcall
pop
xor
loopne
popf
push
pop
jno
or
xor
fbld
cli
ss
fs
ja
dec
adc
aaa
cmp
sub
sbb
cmc
push
adcl
and
mov
cmpb
movl
xchg
clc
dec
adc
call
cmc
sbb
in
jo
mov
aad
mov
test
shlb
lahf
insb
push
and
out
adc
inc
cmpb
xor
mov
lods
inc
and
hlt
inc
aas
or
andl
dec
rorb
movsl
nop
dec
cmpsl
sbb
insb
jbe
dec
xchg
ja
or
gs
jg
ds
in
push
pop
or
cmpsb
mov
jae
lock
fisubrl
popl
sarl
call
adc
xor
out
clc
int3
sub
movsb
cmc
xlat
mov
push
sbb
push
das
stos
sbb
push
push
popf
xchg
mov
mov
or
fs
pop
xor
xorl
andl
mov
out
stc
int
inc
dec
pop
idiv
cmp
adc
sahf
jmp
mov
adc
fcmovu
sub
mov
add
and
test
cmp
inc
or
mov
and
inc
in
mov
push
lahf
dec
xchg
mov
mov
out
push
mov
lds
rcr
inc
dec
popa
xchg
ss
cmp
into
pop
std
js
outsl
in
cmp
xchg
repz
ret
ljmp
iret
pushf
insb
arpl
dec
lea
nop
cmpsl
cmp
shlb
jle
sub
mov
mov
or
into
pop
xchg
sbb
test
fwait
sub
inc
pushf
aad
or
mov
bound
addr16
stc
repnz
mov
ficoml
sbb
imull
shl
lock
dec
mov
sahf
and
cwtl
insb
lret
loope
paddsb
imul
add
mov
popf
adc
mov
mov
bound
cmp
leave
or
xlat
dec
jp
dec
dec
adc
pop
and
ret
sbb
outsb
fldenv
push
pushf
aam
mov
aas
mov
push
cltd
xor
or
xor
dec
xchg
shlb
mov
jns
ljmp
test
movsb
cmp
lock
push
mov
jmp
mov
aaa
or
out
subl
fnstsw
add
sub
push
lcall
mov
int
adc
and
nop
mov
mov
notb
hlt
pushf
jb
adcl
add
sarl
call
adcb
xchg
test
outsb
jge
in
outsl
imul
add
aam
aam
push
in
fstl
insb
stc
cmc
push
sub
mov
jge
inc
inc
movl
push
push
mov
fdivrs
cmp
push
push
inc
add
fs
push
dec
push
aad
ljmp
shll
mov
ret
push
pop
add
hlt
sbb
push
and
pxor
int
cwtl
int3
insl
fdiv
cmc
clc
push
out
mov
dec
xchg
add
std
mov
sub
xchg
lret
stc
dec
jne
mov
pushf
gs
dec
jns
lods
inc
addb
iret
mov
inc
or
jae
mov
nop
push
movsb
frstor
leave
inc
add
test
pop
jne
or
int
daa
inc
hlt
push
cmp
inc
je
mov
cmp
pop
call
mov
insl
mov
out
filds
test
sbbb
mov
lcall
mov
inc
enter
stc
sahf
scas
sbb
cmp
lock
das
adcl
pushf
add
add
mov
cmpsl
dec
popa
push
mov
cmp
jle
fisttps
pop
orl
inc
jo
cmp
popf
notb
movsb
fiadds
nop
ficoml
fstpt
push
pop
adc
aas
or
ds
jle
inc
out
push
mov
jno
inc
outsl
jns
mov
dec
fsubrl
pop
dec
and
aas
ds
jl
lcall
faddp
sbb
mov
inc
fldcw
jl
sub
cmp
inc
mov
sbb
mov
xchg
mov
call
xor
push
xor
or
push
and
pusha
stc
aad
jg
insb
or
cmp
pop
in
ljmp
dec
gs
inc
fcompl
lock
cli
cwtl
inc
jno
push
jmp
test
insl
inc
outsb
sbb
or
cmpsb
push
shr
and
add
adc
push
rolb
push
movsl
inc
rorl
scas
jnp
inc
mov
shl
shll
enter
cmpsb
add
popa
js
push
lea
add
ds
iret
mov
mov
sub
dec
pop
repnz
xchg
push
jno
xor
test
fistl
push
repz
push
xchg
notb
lcall
inc
outsb
in
mov
mov
in
aad
dec
fstpl
inc
cli
in
lret
pop
mov
push
movsb
sub
aad
jle
aam
jbe
pop
xchg
adcb
pop
jecxz
mov
and
and
mov
adc
mov
jnp
scas
xor
lock
dec
les
inc
mov
push
outsl
sub
push
and
xlat
cs
rclb
dec
inc
jnp
or
jns
jb
pop
mov
xor
mov
push
shrb
in
das
cltd
push
mov
leave
jno
jmp
sub
enter
mov
testl
out
xlat
and
ret
xor
shrl
adc
mov
das
pop
fisubrs
inc
push
push
lret
imul
fstps
xlat
sbb
jnp
pop
mov
aam
out
inc
and
cmp
sub
mov
out
adc
xchg
pop
cmc
imul
xor
inc
je
push
sbb
jmp
aam
sbb
sub
jl
push
jecxz
xlat
and
push
add
popa
out
jecxz
mov
mov
add
or
dec
mov
sub
add
icebp
rorl
fwait
sbb
xor
or
pop
fmul
sbb
rcr
sub
pushf
xor
cmc
pop
xchg
lods
jp
or
adc
pop
add
pushf
rorb
push
inc
pop
jae
xor
or
xchg
fsubl
mov
inc
mov
lds
in
jg
mov
scas
stos
loope
bnd
lock
cmp
pop
push
imul
aaa
arpl
push
scas
inc
lret
lods
dec
add
cmp
push
pop
xlat
lret
dec
leave
pop
sbb
cmp
push
loop
int3
add
mov
scas
push
or
and
inc
loope
out
mov
jge
stos
pop
mov
hlt
mov
mov
ds
imul
adc
mov
fs
mov
ret
jl
mov
push
lods
in
std
cmp
lret
dec
mov
push
jb
dec
je
addr16
or
rorb
xchg
adc
pop
push
lahf
and
jl
cs
pop
xor
es
jns
and
in
icebp
in
lret
jge
xchg
xchg
push
add
or
sbb
loopne
and
adc
jp
sub
das
or
cmp
jl
cmp
mov
lods
pop
popa
scas
dec
outsl
jmp
adc
fstpl
nopl
mov
add
std
in
loop
imul
imul
stos
iret
sbb
push
and
fst
add
mov
das
pop
mov
repz
inc
outsl
sbb
xor
pop
mov
outsb
fisubrs
shl
cmp
push
jp
arpl
leave
iret
adc
cwtl
pop
jle
pop
sub
cld
jns
and
call
add
mov
sbb
xor
fistps
inc
lea
in
dec
add
imul
sbb
mov
xchg
jb
xor
sub
xor
mov
out
rcrb
filds
mov
fdivl
movsl
cmc
in
adc
enter
test
ret
dec
ret
shl
es
mov
loopne
cmp
cmpsl
pop
lcall
sarb
arpl
dec
or
fldcw
loopne
mov
pop
ja
cmp
je
stos
push
mov
pushf
data16
push
sub
sub
fcoml
test
lahf
ja
fcmovnb
inc
and
mov
inc
or
pop
fldt
xchg
sub
daa
in
lcall
jecxz
lea
orb
mov
push
jg
nop
insb
je
test
das
or
and
cmp
mov
cmp
mov
adc
ljmp
rcll
fnstsw
imul
pushf
push
test
mov
imul
clc
push
movsl
scas
xor
fisubs
add
aas
fwait
jno
cmp
pop
psubq
sarl
scas
cltd
pop
mov
dec
aas
or
popf
test
lahf
jl
inc
and
in
add
mov
pop
jo
xchg
incb
and
dec
fimuls
inc
outsl
xchg
fstps
inc
sub
xor
xchg
jle
add
push
and
sbb
pop
daa
test
lods
enter
mov
sub
fcoms
shll
lods
cwtl
mov
or
mov
sbb
subb
pop
outsb
cmc
mov
and
pop
jnp
lret
call
xchg
xor
stc
dec
loope
loopne
xor
incl
pop
clc
mov
adc
scas
jle
pop
mov
fdivs
dec
das
pop
mov
and
int3
push
mov
rcll
fildll
das
cmp
jb
mov
jno
pop
popa
mov
inc
jns
ret
xchg
lea
or
xor
lods
aas
lea
aaa
test
iret
inc
leave
pop
inc
push
leave
je
test
cmp
fcomps
sbb
pop
stc
mov
imul
data16
dec
mov
sub
jb
push
cmp
repz
das
test
push
mov
push
push
dec
icebp
jmp
mov
inc
in
rolb
les
aaa
push
sbbl
xor
in
jno
add
push
aad
mov
iret
pop
mov
push
and
mov
push
test
mov
into
push
xchg
mov
sbb
ret
pop
mov
addr16
cli
ret
inc
mov
cmc
test
in
loope
int3
jb
mov
pushf
pop
scas
popa
rorl
add
aaa
dec
mul
jae
push
pushf
mov
push
inc
cmpsb
pusha
pop
sbb
and
int3
mov
stc
js
xor
aam
sub
xor
pop
popf
xchg
sti
fdivrl
setno
dec
or
dec
inc
imull
mov
aas
arpl
fdivr
mov
cmpl
xor
mov
gs
sub
pushf
add
xor
subl
pop
xchg
inc
enter
xchg
dec
ret
arpl
and
sahf
sbb
incl
addr16
mov
xchg
lret
ffreep
xchg
loop
fimull
cmp
fildl
test
xchg
cli
add
and
sub
xchg
rorb
or
aaa
inc
pop
ss
push
lods
mov
loope
xor
stos
div
lea
jnp
jbe
movsb
rcl
mov
jl
jge
jne
pop
mov
and
sub
mov
sarb
adc
addr16
add
adc
mov
and
cld
pusha
bound
mov
call
pop
jle
cmp
mov
ret
xchg
xor
cltd
xchg
lcall
jmp
fiaddl
adc
and
lds
lea
fs
or
lods
mov
enter
push
scas
aam
adc
lock
dec
jbe
popf
push
inc
scas
loop
mov
push
loop
pop
andb
popf
lcall
stc
arpl
or
or
fsubr
push
jmp
xchg
xor
movsb
inc
loopne
out
lods
inc
add
xchg
lcall
mov
add
jnp
pushf
sbb
jg
mov
mov
pop
scas
roll
pop
stc
push
xor
cli
and
arpl
jle
pusha
mov
rcll
xchg
nop
sub
lahf
test
inc
fstl
adc
cmpsl
adc
add
pop
xor
pop
loopne
out
ja
jg
cmp
in
pop
es
scas
pop
std
or
pop
pop
clc
leave
add
insb
into
pop
cmp
shll
sbb
mov
outsl
or
mov
xorl
call
rolb
into
int3
cld
push
es
scas
inc
and
jecxz
mov
cmpsb
lahf
dec
rcrl
xchg
sbb
shlb
ja
and
hlt
shll
loop
jp
lret
rorl
scas
sub
or
push
mov
or
jae
jmp
cmp
fistpl
mov
cltd
out
mov
mov
mov
pop
xchg
shll
cwtl
xlat
addr16
aam
xor
inc
jecxz
enter
jb
mov
repnz
stos
mov
sbb
inc
enter
add
in
dec
decl
ret
inc
ds
or
xchg
shlb
push
sbb
addr16
lret
pop
aaa
pop
nop
xchg
out
jge
scas
adc
jge
ja
dec
pop
pop
push
jne
xor
sub
and
mov
push
dec
pushf
lret
test
dec
push
inc
pusha
push
rcll
lods
sbb
sub
pop
jne
aas
jb
mov
aam
pop
repz
cmp
movsb
inc
je
lcall
jae
out
dec
cmpsb
aam
sbb
cmp
stos
adc
sti
es
sub
std
sbb
test
xchg
xor
lahf
testl
shll
adc
dec
pop
hlt
add
es
push
inc
dec
xchg
jae
inc
cwtl
clc
int
fisttps
jno
jnp
jge
add
in
sbb
daa
cwtl
dec
lret
sub
aad
orw
cs
cld
mov
fxch
ret
mov
dec
movsl
in
inc
loope
mov
ret
sbb
sbb
xor
scas
add
sahf
xor
sbb
dec
pop
pop
xor
jge
cmp
adc
pop
push
out
movsb
xchg
mov
in
cmpsl
mov
ret
subb
push
pop
push
dec
testl
pushf
or
incb
xor
push
mov
xor
pop
iret
dec
dec
ror
ljmp
dec
xchg
pop
int3
imul
push
das
xchg
push
sbb
push
out
inc
es
cmp
test
arpl
insl
push
cmc
cmp
test
int
lds
test
push
lea
push
mov
adc
ror
scas
mov
rcl
push
movsl
cli
lods
mov
pop
ret
dec
aad
loop
outsb
add
jno
lods
popa
in
sub
pushf
xchg
je
int
fimuls
clc
in
or
out
sub
xchg
das
mov
cwtl
cmpsb
jp
out
aaa
mov
push
lods
or
pop
and
pop
sbb
stc
das
stos
mov
lret
cltd
out
xor
fdivr
rclb
es
es
in
je
jns
inc
ljmp
xchg
scas
xchg
arpl
nop
and
andl
push
xchg
movsb
xchg
inc
xor
pop
fildl
and
fs
mov
ror
mov
pop
mov
inc
cwtl
sti
inc
mov
or
in
jbe
in
in
dec
lcall
and
dec
insl
stc
nop
sub
loopne
or
push
movsb
mov
cmp
mov
push
loop
insl
insl
sub
push
inc
loop
push
fnstcw
ret
mov
mov
lds
js
push
loopne
fists
mov
jnp
mov
in
lret
pop
adc
jno
sub
push
fcmove
add
je
mov
mov
add
fcompl
push
rcll
mov
mov
fprem1
and
xchg
push
mov
or
jb
jno
push
xchg
lcall
icebp
in
adc
and
sbb
sti
sbb
lea
mov
adc
cmp
mov
mov
ja
cmp
out
mov
push
paddb
mov
cwtl
mov
adc
data16
out
cmp
cs
xor
pop
pop
sbb
mov
mov
outsb
mov
inc
mov
in
and
enter
ja
pop
mov
lds
pushl
sarb
test
fwait
mov
pusha
fdivl
stos
lea
into
or
pusha
sbb
inc
cmp
push
and
les
and
cmp
xor
dec
and
mov
jo
xor
jecxz
mov
loop
imul
dec
mov
xor
das
ss
sti
std
mov
es
dec
add
pushf
mov
jmp
fstpt
dec
sub
les
pop
rcr
mov
sub
mov
sbb
inc
mov
sahf
dec
stc
push
dec
jno
cmpsb
outsl
mov
imul
jl
mov
in
ljmp
or
test
out
push
cmpsb
xchg
mov
movsl
mov
pushf
popf
jle
ret
andnps
mov
pushf
ja
pop
sbb
test
xchg
jl
mov
push
incl
mov
jns
enter
into
mov
in
cmp
cli
jmp
pop
sub
inc
and
fstpl
cld
xchg
jg
push
pop
xchg
mov
jg
mov
push
scas
push
push
xchg
shl
gs
repnz
std
lods
arpl
ss
mov
xchg
pop
pop
nop
jecxz
mov
inc
sub
xlat
in
cmp
pushf
movsl
std
rcll
and
jp
inc
lock
cmc
ret
clc
lock
jo
ret
jns
sub
pop
or
cmp
push
jp
jbe
jge
popa
cmp
ret
hlt
scas
iret
into
lock
and
push
scas
out
mov
test
mov
inc
mov
sbb
repnz
sub
pushf
xor
push
and
adc
cmp
loopne
scas
add
jecxz
lock
test
sub
cli
gs
push
out
mov
call
cmp
and
jg
mov
xor
pushf
xchg
cmpsb
outsl
loopne
enter
cmpb
mov
test
or
mov
pop
cmp
arpl
outsl
xchg
fidivrs
or
incl
add
jg
jbe
and
pop
repz
cmp
push
icebp
mov
aad
out
mov
out
aam
imul
and
dec
mov
xor
xchg
cwtl
js
inc
rorb
aas
cltd
cs
xchg
dec
inc
adc
fisubl
aam
hlt
push
popa
popf
out
xchg
mov
into
mov
pushf
lods
cmp
js
cmp
mov
dec
cmp
mov
outsb
bound
sbb
fsts
std
ret
jp
movsl
mov
fs
aam
or
pushf
mov
jmp
cmpsl
mov
jo
je
mov
cli
test
sarl
ljmp
dec
adc
sbb
pop
rolb
jmp
loopne
sti
das
nop
cs
or
loope
cmp
jg
pop
jge
cwtl
or
dec
fbld
dec
lret
test
movsl
cmp
mov
mov
lock
push
or
cli
jo
mov
mov
jo
es
cmpsl
aas
into
repz
xor
insl
sahf
sub
dec
shrb
mov
xchg
inc
sbb
jp
xor
sub
pushf
cltd
sbb
cmpsl
in
add
loope
pop
jecxz
xchg
leave
les
std
clc
rcll
in
mov
xor
xchg
int
aas
repz
mov
test
cs
lret
into
nop
ljmp
sub
add
push
lcall
mov
ret
fldcw
cmpsl
aam
push
data16
pusha
push
into
dec
push
adc
roll
movsb
push
in
push
jge
nop
mov
pop
add
sub
dec
xor
or
xlat
movsb
inc
add
fiadds
outsb
lret
pusha
or
lods
jo
das
xor
inc
int
je
mov
jle
in
sub
sub
cli
cld
cltd
xor
fistps
mov
fucomip
cmpsb
pop
scas
push
push
dec
push
icebp
xor
mov
dec
sti
mull
jns
xchg
or
jle
sbbl
inc
xchg
cmp
dec
mov
inc
mov
iret
pop
aam
pop
gs
imul
cmp
inc
xchg
xchg
push
icebp
fnstsw
ljmp
mov
jmp
sub
jae
stc
mov
jge
jo
xchg
or
and
jbe
mov
arpl
pop
enter
adc
fwait
cld
lret
cmp
loopne
pop
jle
sub
ret
mov
fcmovnbe
pusha
fbstp
fidivrl
out
push
mov
sbb
shrb
stos
jae
cmp
sarl
shlb
movsl
ret
dec
dec
pop
jle
cmpsb
out
push
cld
sbb
xchg
lock
das
ss
dec
xchg
lock
mov
mov
repnz
std
leave
sub
fwait
cmp
cmc
hlt
shrl
stc
dec
mov
call
jg
inc
clc
mov
out
mov
test
test
add
lret
add
sbb
adc
ljmp
out
pop
xor
fnstcw
std
fcoml
push
xor
lods
outsb
ljmp
stc
push
repz
jle
cmpsb
adc
pop
sub
repz
adc
adc
jne
testl
enter
out
call
loopne
rorb
push
pop
mov
sarb
test
stc
divl
bound
adc
pop
lods
ficoms
and
fistl
lcall
stc
dec
xor
cmpl
lods
pop
dec
stc
dec
int3
add
mov
or
xor
iret
mov
mov
dec
xlat
jecxz
outsb
jae
int3
fistpll
repz
aaa
lahf
sbb
mov
fcmovnb
stos
repnz
add
outsb
mov
sub
cmpb
fxsave
ss
dec
adc
xchg
jl
repnz
mov
mov
std
aas
enter
add
xor
xchg
inc
xchg
sahf
into
in
outsb
cmp
push
in
push
gs
pop
inc
test
mov
or
mov
adcb
and
out
pop
call
xchg
pop
lret
lcall
jns
pop
xor
outsb
ret
push
xchg
inc
or
push
adc
aaa
xorb
jl
sti
loopne
into
add
les
js
and
xor
outsl
shrl
out
movsb
leave
and
lods
sub
dec
sti
jmp
jae
add
lahf
in
nop
adcb
fldenv
jle
xchg
rcr
sti
cmp
je
ror
cwtl
pop
movsb
adc
mov
or
popf
pop
mov
and
jmp
mov
xchg
or
jecxz
mov
or
out
clc
pop
cmp
stos
outsb
sarb
cmc
into
mov
nop
cmc
in
inc
add
dec
dec
jnp
mov
test
adc
lods
lcall
out
jo
jle
test
cli
cmp
xchg
repz
mov
sub
test
xlat
mov
aam
or
and
sub
mov
cwtl
ret
scas
mov
imul
mov
jg
sbbl
dec
or
pop
lea
adc
pop
jns
out
cmpsl
push
outsl
stos
faddp
cld
jl
adc
add
add
add
add
jo
sub
pop
push
gs
lret
insb
or
and
loopne
push
in
cmp
adc
dec
lods
inc
scas
pop
icebp
push
add
ss
arpl
repnz
lret
add
into
pop
lret
aam
sbb
mov
shll
test
mov
push
sub
cmp
aad
xor
jb
dec
push
or
sti
jae
aam
xlat
outsb
cmpb
jb
insb
mov
aaa
add
xchg
loop
mov
imul
fwait
loopne
push
inc
push
aaa
mov
stos
dec
pop
in
lahf
ss
xchg
aad
sbb
mov
or
mov
sub
or
xor
xor
outsb
pop
mov
movsl
mov
push
push
dec
pop
jg
jp
sub
xchg
insl
dec
into
sub
push
cld
xor
test
pop
adc
into
adc
clc
add
cmpsl
xchg
ficoms
popf
pop
jnp
pop
out
lods
ss
mov
rep
inc
dec
adc
shl
cmpsl
popf
repnz
jmp
sbb
jae
test
mov
lret
jae
repnz
jmp
hlt
mov
cmpsb
xchg
cmc
push
outsl
xor
pop
xchg
push
adc
xchg
stos
jmp
cmp
lods
jle
out
jae
cmp
icebp
faddl
dec
das
test
cwtl
shll
cs
xchg
xchg
dec
dec
add
sub
movsb
bound
nop
mov
pop
imul
in
shl
mov
sub
std
mov
lock
dec
sbb
testb
adc
adc
adc
add
inc
iret
scas
pop
cmp
push
xchg
flds
js
jns
imul
insl
or
xor
sar
mov
dec
mov
icebp
fcoml
or
mov
mov
lret
jne
cltd
pusha
add
lods
cld
mov
push
divb
js
xchg
dec
xchg
sbb
push
pop
fcmovu
pop
and
sahf
inc
std
fimull
pop
std
sti
jb
cs
add
adc
clc
ds
pop
fnstenv
daa
es
rcll
ret
pop
jbe
stc
daa
dec
pusha
scas
das
sbb
xor
mov
mov
mov
daa
dec
or
lods
cmp
xor
push
sub
adc
fstpl
jnp
sub
incb
jnp
push
sub
push
pushf
fildl
lods
mov
movlps
out
lcall
jecxz
xor
out
push
lret
int3
dec
mov
mov
inc
xchg
sbb
dec
jb
out
xor
xchg
cld
mov
rclb
and
inc
add
idivl
and
jmp
imul
jo
arpl
out
test
push
mov
jbe
rolb
idiv
fldl
enter
adc
push
xchg
test
adc
sbb
push
mov
popa
mov
je
lahf
mov
test
das
lret
test
and
jmp
jmp
out
mov
sub
mov
fadds
imul
push
adc
dec
ja
push
popa
ja
repz
push
push
cltd
negb
xchg
xor
in
vsqrtss
add
icebp
movsl
sbb
filds
xor
sub
test
gs
or
mov
lret
push
aam
rcr
test
dec
sub
imul
inc
aas
outsl
or
cld
and
stos
jno
pop
imul
add
dec
shll
aaa
shlb
lret
sub
jmp
int3
mov
cld
sbb
pop
inc
popf
ret
adcl
loop
xchg
push
dec
ds
icebp
aad
movl
negb
add
dec
inc
outsl
sti
sbb
icebp
and
push
in
repz
add
je
adc
hlt
mov
lret
ja
cs
iret
push
mov
clc
inc
sbb
jb
pop
xchg
popf
or
sahf
aaa
insl
push
inc
cwtl
jbe,pn
sbb
fs
lret
or
mov
dec
repnz
adc
lock
mov
stos
jle
xchg
cmp
es
jp
insl
mov
sub
mov
jne
icebp
xchg
push
movsl
jmp
xchg
movsb
fimuls
pop
mov
fmull
push
nop
sbb
imul
and
xor
push
jp
int
jl
push
movsb
push
imul
jg
out
rcrl
std
imulb
iret
sub
mov
repz
cs
cmp
loopne,pn
xlat
icebp
push
and
scas
push
and
push
add
xor
test
scas
jno
xchg
cmp
rclb
adc
pop
add
pop
sti
in
lods
xlat
movsl
push
and
lds
pop
add
sbb
fwait
cmp
insl
sbbb
xchg
cmp
ljmp
stos
aas
xor
cmp
dec
shrl
insl
adc
fldl
jb
or
mov
out
xchg
and
mov
lcall
stc
loopne
nop
loopne
xor
mov
fcoml
inc
fdivrl
sub
pop
mov
int3
in
repz
xlat
addr16
mov
pop
in
xor
cmp
lcall
xor
sub
les
xor
roll
mov
xor
mov
inc
enter
mov
pop
dec
adc
jns
fld
in
scas
ret
cmp
push
inc
js
or
mov
clc
repz
mov
daa
xlat
movsb
stc
jmp
or
dec
das
shrl
enter
pop
mov
mov
xchg
cmc
lea
ds
insl
fstpt
cmpsb
insb
mov
fiadds
and
mov
mov
inc
test
pusha
mov
mov
jmp
sub
adc
and
jg
in
pop
leave
and
imul
int
fiadds
push
mov
stos
lahf
cmp
int
push
push
pop
jl
bound
pop
xor
out
inc
pop
pushf
sbb
push
popf
data16
cli
xchg
push
mov
jno
addr16
insl
loop
repz
mov
iret
pop
call
pop
mov
sub
xor
sub
roll
add
or
stc
dec
fnstsw
sbb
mulb
mov
fwait
add
ret
outsl
js
out
adc
in
or
stc
mov
rcr
jle
es
jle
pop
into
sub
adc
sub
enter
ja
enter
xchg
int
adc
or
ljmp
or
popf
inc
push
scas
and
mov
repnz
adc
out
in
jo
adc
jo
fbstp
xor
or
aad
ds
dec
imul
cmp
add
loope
adc
cwtl
and
push
jmp
push
in
pop
cmpsl
mov
jge,pt
adc
sub
cmp
xchg
push
push
mov
test
cmp
jnp
add
adc
subb
movsb
cltd
iret
stc
stos
cmp
push
cwtl
call
in
mov
cmp
mov
lea
movsl
into
mov
mov
sbb
adc
jo
push
jae
push
notl
decl
and
jb
cmpsl
cwtl
xchg
sti
inc
sbb
or
lret
dec
xor
lret
pop
stos
ss
jns
insl
dec
ret
dec
testb
mov
push
xor
dec
mov
mov
shl
in
xchg
cwtl
les
push
jl
loop
mov
loopne
xor
ret
int3
outsl
cmpsl
rorl
cmp
test
mov
mov
in
adc
arpl
mov
faddp
insb
jne
mov
shrl
into
pop
inc
out
lcall
gs
xor
push
xchg
cld
test
call
jp
scas
cmp
mov
xchg
push
xchg
dec
add
inc
jecxz
cmp
bound
xchg
fs
aaa
dec
test
xorb
cwtl
loop
lock
xchg
push
outsl
mov
mov
incb
push
pop
mov
cmp
ret
hlt
fistpll
ja
add
sbb
cmp
cmp
ficoml
data16
mov
outsb
add
std
repnz
mov
or
scas
jl
popf
jo
stc
sbb
ss
push
out
cmp
pushf
lods
in
fwait
rcl
je
stc
popa
xchg
in
fucom
fs
mov
or
add
xchg
xorb
push
xchg
test
hlt
insb
cmpsl
xor
pop
test
xchg
mov
dec
test
fimull
arpl
fldcw
shr
cmpl
cmpsl
incl
testl
and
rorb
xor
cmp
jecxz
and
xchg
rcll
popa
cmp
mov
pop
ljmp
in
xchg
cmp
pusha
jns
stc
mov
add
and
loop
out
pushf
sbb
inc
scas
test
mov
add
push
mov
fs
rorl
ret
lods
imul
adc
sbb
sub
push
mov
test
cld
xchg
bound
or
adc
nop
jne
xchg
xlat
mov
lahf
ss
arpl
xchg
enter
or
xor
mov
je
pop
repnz
imul
push
mov
fiadds
mov
jmp
inc
fadd
popl
or
sbbb
xchg
test
ss
fistps
add
cmpsl
dec
fcmove
or
xor
clc
xchg
inc
add
rclb
insl
fldl
shlb
pop
pop
int3
jmp
pop
jo
push
sar
xchg
xlat
xchg
jns
addl
rclb
lock
xchg
and
inc
js
xor
and
iret
in
scas
outsb
dec
stc
les
and
lods
mov
dec
jmp
adc
xchg
bound
cmpsl
jl
cmpsb
mov
fsubrl
das
dec
ret
pop
mov
loope
test
sbb
push
cmp
mov
icebp
push
imul
cld
loope
cmpl
data16
icebp
in
mov
cmpsl
dec
test
push
in
dec
xor
subl
mov
rclb
lcall
push
pop
sahf
or
xorb
jg
or
xchg
dec
mov
out
jae
jecxz
mov
or
xchg
push
stos
cld
ss
stos
out
out
cmp
adcb
sbb
data16
test
jae
fnstenv
adc
mov
mov
push
mov
in
xor
inc
inc
pop
mov
or
call
pop
cs
sbbb
shrl
jp
and
inc
sub
ss
leave
mov
lods
add
dec
xor
mov
xchg
and
cmc
int
jg
test
rclb
lahf
and
push
icebp
pop
xchg
xchg
es
cmp
icebp
leave
jmp
mov
cmc
sbb
lcall
iret
push
cwtl
and
es
outsl
cwtl
data16
cmp
or
mov
dec
and
pop
or
test
inc
sub
js
stc
or
fsubp
inc
dec
jle
aas
cld
andl
repz
ret
fstp
sbb
popf
cltd
add
jbe
shlb
mov
xchg
mov
ds
pusha
jno
push
mov
sub
in
outsl
xor
jg
sub
sti
test
jae
shrl
in
pop
mov
popa
clc
mov
or
daa
xchg
jge
push
bound
out
mov
mov
cltd
sub
dec
jmp
cmpsb
pop
imul
rorb
loop
enter
test
repnz
stos
xor
xchg
and
mov
out
jns
cmp
ret
out
sarl
cmpsl
pop
mov
cmp
dec
imul
addr16
cmp
loopne
outsb
jp
push
jns
aam
mov
push
jmp
fstps
mov
out
dec
cmpsl
lret
bound
imul
and
roll
mov
mov
lds
xchg
xchg
daa
decb
mov
mov
ss
inc
adc
lahf
aad
mov
jo
loop
clc
fs
push
pop
aaa
inc
dec
insl
outsl
cmc
loop
mov
fcomip
push
pusha
fwait
out
push
push
sbb
xor
dec
loop
push
dec
mov
push
mov
inc
add
jae
mov
mov
fst
push
filds
inc
fildl
dec
push
add
sub
mov
cmp
xchg
mov
push
cwtl
out
lods
mov
inc
lcall
jg
daa
test
xchg
sti
stos
mov
neg
xchg
mov
into
jbe
sbb
fsts
dec
test
mov
lods
stc
jecxz
imul
mov
mov
mov
loope
sbb
sub
xor
sti
mov
nop
push
nop
jmp
stc
jmp
out
mov
mov
mov
xor
in
insl
mov
addr16
dec
jb
in
jbe
lock
popf
pop
inc
pop
imul
pop
sub
clc
outsb
add
pop
movsl
push
cli
mov
std
idivl
ljmp
arpl
int
lahf
jp
iret
scas
pushf
cld
adc
ds
lahf
push
stos
stc
in
inc
jp
ret
fbld
jne
ss
call
popf
inc
fisttpll
rcr
xchg
movsl
int
in
fadd
out
stc
and
popa
xchg
std
pop
jne
sub
mov
shlb
cmc
xor
outsb
stc
pop
sti
mov
aas
or
pop
mov
lock
xor
mov
mov
push
sbb
stc
jno
mov
mov
stos
scas
int3
mov
xor
adc
pop
into
mov
dec
stc
lds
push
mov
dec
dec
pop
pop
cmc
push
out
adc
mov
sub
shl
lret
push
push
ja
mov
in
pop
or
sub
scas
mov
push
push
xor
movsb
inc
push
iret
aad
or
pop
jge,pt
sub
jnp
mov
pop
push
jle
rolb
scas
push
adc
mov
clc
or
ljmp
jns
jmp
mov
xor
popa
in
jbe
sub
rol
add
jno
sahf
mov
xchg
test
aas
and
int
adc
push
add
mov
insb
pusha
or
push
dec
push
dec
inc
pop
int3
pop
pop
out
push
push
aaa
mov
fdivr
ds
pop
test
fnstenv
mov
loop
xchg
iret
sarb
mov
sbb
lods
insl
gs
cs
out
xor
pop
sar
cmp
ficompl
or
imul
push
cmc
ljmp
ret
xor
test
dec
shlb
cmp
push
xorl
xchg
fmull
addr16
adc
lcall
pusha
dec
push
push
xor
inc
jo
dec
in
mov
aas
push
push
xchg
pop
jle
push
jl
push
je
lret
lods
xchg
jmp
stos
inc
xchg
je,pt
dec
shrl
push
dec
xor
xchg
xlat
movsl
xor
in
or
pop
dec
inc
std
add
mov
repz
lea
in
aaa
mov
push
cld
loop
inc
sbb
les
cld
das
mov
movsl
mov
add
xchg
insb
jo
push
lods
push
outsb
pop
xor
jb
pop
pop
sbb
or
ss
sub
lods
into
jae
ss
addr16
xchg
lock
dec
fcompl
dec
inc
insb
xchg
movsl
push
mov
or
mov
mov
test
or
jmp
inc
add
imul
mov
add
jno
mul
dec
jg
daa
inc
xor
sub
out
or
xor
in
xor
cmc
dec
data16
jmp
icebp
push
push
out
imul
cmp
fsubs
push
ficoml
and
clc
jl
je
sahf
push
mov
mov
mov
sub
jmp
mov
fadds
mov
sbbl
mov
pop
cwtl
sub
add
and
mov
insb
outsl
push
sbb
lock
sbb
int
movsb
and
imul
insl
fldt
pop
jge
jecxz
push
data16
xchg
jne
cmp
das
jb
dec
xor
adc
ror
jno
sub
and
mov
in
insb
xchg
fdivrl
xchg
std
pop
ficomps
sub
clc
paddb
mov
cmp
sbb
stos
dec
mov
xor
xchg
add
inc
fisttpll
push
pop
aad
je
or
lret
mov
push
loopne
enter
lods
leave
sub
shrb
mov
sahf
lods
ret
jne
out
outsb
cmp
mov
cmpsl
nop
fidivl
ret
sub
and
mov
data16
jae
xorb
popa
sbbb
in
outsb
ds
jg
sub
fcomip
jle
bound
iret
scas
rcrl
and
push
mov
ficomps
mov
les
daa
xor
imul
popa
pop
pushf
movsl
mov
fwait
mov
mov
xchg
jle
int
pop
and
cmp
jmp
fwait
push
mov
jbe
jns
sbb
lods
cmp
pop
or
inc
rorl
in
cmp
mov
ficompl
push
pop
stos
sub
call
scas
sbbl
cmp
cmp
dec
or
imul
adc
pusha
push
incb
hlt
out
shl
or
into
push
mov
add
enter
shr
pop
in
std
movsl
cmpl
in
je
xor
jp
or
adc
lods
nop
cmp
clc
inc
les
les
loop
mov
mov
and
testl
scas
test
ret
dec
cmp
ficoms
lock
mov
aaa
inc
mov
mov
push
jmp
push
sbb
sub
cmp
adc
test
nop
jno
test
push
iret
lock
sbb
data16
or
daa
add
fisubs
push
aaa
sub
repnz
gs
pop
xchg
jne
mov
movsl
stc
cmp
pop
into
xchg
cmp
out
dec
mov
lock
idivb
fmuls
xchg
xor
push
mov
inc
orl
or
sub
jle
ret
lahf
mov
inc
adc
jmp
sub
addr16
ret
enter
rcll
lahf
xor
or
ds
jbe
mov
adc
push
test
rorb
mov
cmp
mov
inc
fldl
jmp
mulb
inc
sbb
cmovb
push
stos
pusha
inc
lea
or
xor
cmp
dec
inc
mov
lahf
js
out
push
cmp
jbe
imul
add
xchg
and
cmpsl
shr
shlb
cmc
icebp
sahf
xchg
push
add
call
movsl
mov
rorb
mov
fwait
sbb
adc
or
jo
sbb
pop
jo
dec
inc
jns
inc
pop
dec
mov
es
dec
psubsb
imul
inc
and
pop
imull
push
inc
fcoml
or
daa
mov
xlat
inc
ljmp
loop
fs
std
stos
ficompl
mov
or
aaa
xchg
shll
jmp
xlat
mov
dec
sbb
ja
cmp
les
idivb
push
jo
pop
fs
pop
sbb
in
mov
push
je
lods
mov
mov
mov
in
cmp
add
jne
jmp
mov
lcall
mov
test
sub
mov
xchg
push
mov
and
out
stc
push
cs
pop
or
pop
fwait
dec
jnp
out
mov
push
loop
push
daa
mov
add
scas
or
movsl
push
call
std
push
jbe
rcr
sbb
or
sbb
jne
pop
inc
xor
cmp
sbb
jl
and
hlt
outsl
frstor
clc
mov
push
jne
add
leave
sub
mov
inc
bound
dec
push
push
and
leave
fwait
mov
sahf
cmp
test
cmp
mov
xor
pop
or
into
std
cmpsl
cmp
push
mov
andb
or
stos
nop
imul
push
cld
inc
in
cltd
sbb
mov
fmull
mov
pop
das
lock
inc
stos
cmp
sbb
pop
lods
inc
mov
sub
movsb
sub
mov
mov
enter
or
dec
fwait
xchg
and
mov
xchg
loopne
inc
pop
mov
lea
xor
out
and
inc
adc
and
dec
xchg
push
fldenv
cmc
cmovle
repz
popf
mov
outsb
mov
test
add
das
cmpb
outsl
jnp
stos
das
sti
shrl
out
test
aas
test
adc
fdiv
add
mov
negl
out
adc
nop
jnp
mov
pop
stos
jecxz
andb
sub
out
rclb
sub
pop
mov
pushf
test
adc
in
xor
out
in
sti
push
xor
mov
mov
out
ss
pop
add
cwtl
push
xchg
xor
in
xchg
xlat
adc
or
mov
add
stos
sbb
mov
jmp
jle
mov
out
mov
aad
sbb
xchg
push
inc
rorl
sub
subl
lret
mov
imul
cmp
dec
mov
aam
fistl
sbb
jmp
popa
pop
adc
adc
int
insb
jbe
fcompl
mov
mov
xor
pop
or
jle
nop
jne
scas
jb
jg
into
out
lods
xor
push
pushf
mov
stos
jbe
js
cmp
xlat
add
adc
pusha
pop
jbe
iret
les
inc
lret
cmp
rol
dec
sub
movsb
cmc
mov
popf
dec
add
push
sbb
fidivrs
insb
mov
mov
pop
in
mov
adc
jmp
cltd
aam
add
int
int
mov
lahf
aas
dec
pop
cmp
jmp
mov
dec
clc
pop
lahf
loopne
cmp
xchg
stc
aas
sub
mov
sub
fbld
les
or
mov
negl
jno
or
and
or
mov
mov
lcall
adc
rclb
sbb
jno
pop
pushf
mov
cwtl
inc
fwait
ss
adc
movsb
sbb
je
lret
mov
cmp
jmp
in
pop
mov
push
pusha
pop
mov
fisubs
jmp
into
xchg
fadds
mov
mov
shl
clc
sahf
repnz
testb
inc
mov
cs
mov
fwait
stos
dec
or
or
xchg
or
in
dec
sbb
and
je
inc
out
jne
movsb
scas
mov
and
outsl
cmp
cmp
sbb
insl
arpl
jp
fs
pop
mov
xor
push
aaa
jle
dec
mov
dec
int3
push
arpl
push
jb
loop
loope
jge
lock
or
sar
or
cmpsl
and
paddsw
jmp
pushf
push
dec
push
dec
mov
roll
pusha
push
jo
das
je
cmp
sbb
inc
mov
imul
push
cltd
std
xor
jecxz
std
add
subb
sbb
mov
aas
out
std
push
aam
add
fidivrs
arpl
out
jne
xorb
mov
insl
mov
in
jl
xor
jl
pop
aad
and
mov
mov
mov
pop
rol
xchg
das
sub
bound
adc
aam
jb
push
push
fs
sub
mov
mov
mov
pop
xor
pop
xchg
pop
xlat
pop
cmp
or
inc
jo
xchg
in
push
inc
jbe
push
cmpsb
push
movsb
std
cmp
movsl
xchg
scas
sbb
lods
call
and
and
or
xchg
hlt
or
lds
push
sub
addr16
add
fstpl
and
jl
push
fisttpl
push
aam
lea
push
mov
hlt
mov
lods
pop
movsl
sti
mov
xchg
iret
fdivrs
push
pop
jecxz
jbe
fbstp
lods
xor
insb
repnz
or
jno
je
mov
fucomp
add
hlt
in
inc
out
jmp
stos
jb
fisubrl
iret
jno
call
call
movsb
sub
mov
lret
gs
aam
sti
stos
faddl
dec
cmc
sub
iret
pop
inc
sub
test
arpl
cwtl
ds
mov
clc
bound
lcall
aas
ljmp
and
jb
icebp
dec
pop
shl
pop
xchg
jnp
xchg
nop
outsl
insb
loope
push
fs
out
ljmp
jge
mov
jl
incl
xor
subl
mov
outsl
xchg
and
adc
sbb
loope
ss
mov
jnp
out
dec
jb
ret
xor
scas
dec
push
mov
repnz
push
add
pushl
rcr
sbb
outsb
daa
pusha
adc
mov
jl
mov
sbb
jecxz
inc
xchg
cmpsl
push
push
mov
sbb
push
data16
xor
cld
cmp
dec
push
add
xchg
in
ss
push
mov
sbb
cmpsl
inc
imul
ret
cmp
stc
fistl
push
dec
sub
or
mov
mov
push
or
sub
aam
mov
loopne
and
sbb
ljmp
orb
xchg
push
test
xor
inc
add
in
xchg
les
sbb
fdivp
push
mov
mov
frstor
mov
pop
aas
add
out
cld
pop
inc
mov
inc
jo
push
add
pop
sbb
pop
loope
jecxz
adc
xor
test
daa
cmpsl
fisttpl
ret
les
dec
add
sub
popa
dec
lcall
jae
fidivl
popf
lret
adcl
insb
pop
cmpl
out
mov
pop
jno
daa
daa
jno
aaa
xchg
mov
aam
and
mov
js
pop
scas
xchg
inc
hlt
lret
cmpb
mov
cmp
pop
cli
jo
out
call
adc
jne
shlb
and
lods
or
sub
loop
rol
mov
inc
arpl
dec
ret
divb
mov
push
imul
or
test
add
pop
fdivrl
bound
fcmovne
push
pop
mov
jmp
dec
mov
test
inc
ds
movsb
xor
scas
adc
pop
pop
out
dec
dec
fmull
rcr
mov
and
xchg
or
mov
shrl
in
cs
sub
cld
rolb
jg
push
xor
mov
aam
dec
or
mov
mov
cmpsl
push
out
lods
lods
dec
stos
shrb
sbb
push
aam
stos
push
lcall
clc
cmp
ret
js
mov
sub
fdivrl
ret
pop
and
dec
pop
test
sbb
mov
aas
int3
ljmp
inc
push
sub
aaa
lods
lret
inc
scas
xor
pop
loop
push
add
test
sbb
mov
pop
push
sbb
push
call
rorl
or
stc
cs
fistl
add
inc
mov
push
mov
dec
in
in
out
and
xchg
push
movsl
cmc
aaa
xor
jnp
arpl
jge
je
shl
pavgw
jno
pusha
iret
cmp
or
sub
and
and
jecxz
in
pop
or
clc
cs
add
rclb
out
xchg
mov
xor
jg
mov
and
and
xor
jp
pop
shlb
js
insb
arpl
cs
xor
or
or
dec
pop
push
paddw
mov
jb
xor
fisubrs
cld
lock
and
insb
out
aad
push
out
jl
outsl
clc
cli
in
in
lds
mov
pop
fs
inc
cwtl
arpl
dec
sarb
push
sbb
enter
lods
cwtl
sbb
mov
inc
addr16
les
pop
inc
dec
push
frstor
push
out
xchg
loope
xchg
push
repz
mov
rcl
pop
iret
stc
roll
or
pushl
cltd
xchg
pop
mov
in
movsb
imul
and
inc
pxor
sbb
movsb
sbb
jbe
jne
cwtl
dec
imul
iret
mov
pop
bound
push
jl
pop
movsl
sahf
mov
mull
jmp
sub
jns
jl
jae
inc
out
jno
adc
jl
mov
adc
push
sbb
mov
iret
push
cld
sbb
or
out
inc
popf
sbb
xor
fisubs
jns
dec
scas
movsl
mov
dec
mov
push
aaa
out
mov
aas
outsb
jg
imul
cmpl
jp
mov
loopne
xlat
pop
ja
lea
cmp
pop
jle
enter
fsts
cmp
ret
repz
iret
imul
das
and
sbb
mov
aad
in
xchg
out
mov
in
jle
sub
das
ds
pop
bound
out
inc
adc
adc
scas
ret
cmp
test
movl
add
dec
movsl
imul
test
xchg
je
adc
add
ds
mov
in
push
dec
push
lcall
shrb
cmpsl
jecxz
fwait
dec
aad
ljmp
outsb
push
div
jns
int3
mov
xchg
adc
jmp
inc
mov
rcrl
xchg
outsl
or
jmp
adc
das
nop
ss
xor
es
xchg
push
dec
fcompp
cmpsb
push
jecxz
cmp
jl
leave
or
mov
mov
fimuls
repz
xorb
stc
filds
out
push
mov
pop
call
dec
scas
and
mov
lret
cmp
mov
push
mov
ljmp
aam
and
jle
dec
push
push
adc
mov
xor
mov
mov
cmp
and
repnz
adc
ss
cwtl
push
pop
jbe
adc
xchg
int
testl
ds
adc
and
pop
icebp
mov
lea
mov
inc
cltd
jecxz
push
xlat
sbb
add
xchg
xchg
aad
rcrb
xchg
scas
adc
ret
shll
add
test
arpl
mov
test
or
mov
cs
out
lret
xchg
pop
shrl
xor
xchg
mov
das
and
add
adc
add
add
scas
cmpsb
cmc
je
adc
int3
rclb
es
and
clc
push
fdivrl
sub
jb
cmp
and
sub
movsl
push
jg
fs
push
ret
lcall
popf
or
dec
in
cmp
push
int
ds
clc
jbe
out
aaa
test
cmp
cmp
mov
imul
mov
adc
mov
jmp
inc
xor
rcl
test
xor
imull
and
cmp
fstps
inc
sbb
xchg
and
fwait
push
adc
mov
ret
sti
push
iret
pusha
iret
or
cmpsl
js
insb
ljmp
jno
popf
cmpsl
mov
inc
lcall
sub
mov
lods
cmp
and
daa
and
mov
adc
inc
shr
fdivrs
mov
mov
dec
xor
jge
jne
loop
jl
in
lret
testb
jl
xor
test
in
pop
mov
repz
inc
lcall
gs
sbb
je
mov
insb
push
inc
mov
mov
sbbb
data16
mov
pop
inc
roll
push
test
in
inc
aas
dec
adc
out
sarl
sbbl
mov
mov
xor
adc
jecxz
and
inc
mov
in
ljmp
xor
cmpl
jmp
adc
mov
mov
fs
push
lods
push
lahf
mov
stos
iret
out
cmp
outsl
push
cs
jnp
aas
mov
push
sub
pop
mov
jmp
and
test
shll
aaa
repz
xchg
mov
push
dec
popa
push
push
enter
add
cli
inc
shl
xchg
lcall
jo
lcall
addb
dec
loope
sbb
stc
pop
mov
or
add
lret
dec
lods
outsb
sti
mov
inc
sbb
sub
stos
sbbb
mov
out
ss
test
repnz
and
jg
inc
inc
test
lock
add
int
fsts
push
loopne
fisttps
fwait
in
push
icebp
mov
mov
or
test
setne
mov
add
jae
dec
stos
cmpsl
jl
or
dec
repnz
pushfw
xchg
sub
xchg
sbb
pop
out
pop
outsl
data16
inc
sbb
addl
mov
aaa
rcl
jmp
out
repnz
stos
lds
imull
scas
mov
jge
xchg
ja
or
cmpsl
sbb
insb
bound
push
fmull
in
inc
add
aad
fcmove
or
movsl
sub
lods
daa
testb
jmp
push
push
xchg
inc
repz
lods
push
sahf
jae
loopne
push
jecxz
inc
sbb
xchg
stc
stc
mov
or
bound
out
in
xchg
mov
push
pop
cmp
sub
loope
cmpsb
and
in
bound
xchg
movlps
mov
cmp
sbb
loopne
or
fcmovu
jle
mov
xchg
out
add
mov
cmpsl
add
shlb
xchg
xor
push
outsb
cmp
push
mov
jge
lea
sbb
rcrb
stos
ss
les
cli
icebp
xor
or
and
imulb
jne
mov
ljmp
insl
sub
jmp
lea
jg
pop
xchg
pop
mov
cmpsl
mov
sub
cmp
push
jo
mov
repnz
add
scas
mov
cmpsb
mov
push
fsubrs
mov
sbb
outsl
cwtl
addr16
cmp
pop
cltd
loop
mov
mov
outsb
sub
adc
dec
xchg
lods
out
mov
daa
fs
inc
xor
pop
mov
sub
in
push
mov
jno
fs
aaa
ds
in
and
scas
ret
popa
xor
add
cmpsb
dec
iret
loop
out
jno
pop
loop
negb
fs
lcall
repz
push
cmp
pop
xorb
pop
pop
cmp
or
xlat
loop
cld
add
mov
push
cmc
cmp
insl
enter
fistl
adc
xor
aad
push
pop
jmp
ret
pop
push
and
out
push
out
mov
xchg
lret
jle
sbb
sub
sbb
inc
adc
jp
inc
jge
stc
inc
ret
movsb
stc
add
pushf
dec
jns
divb
inc
mov
js
popf
mov
les
xchg
cltd
mov
mov
inc
fld
in
xchg
xor
lods
pop
rorl
mov
out
enter
aaa
pop
xchg
inc
xchg
adc
cmpsb
sub
jns
and
in
sbb
cmp
xchg
mov
sbbl
adc
mov
jecxz
scas
das
fstps
rcll
imul
cmp
mov
dec
sub
mov
mov
inc
ss
xor
adc
jp
jmp
pop
sub
push
ljmp
pop
jp
xlat
sarl
push
ret
cmpsb
mov
sub
push
jbe
dec
ss
es
and
mov
divl
pop
lock
xchg
mov
push
lahf
lret
or
jp
mov
out
xor
sbbb
lea
add
sti
push
fs
xor
or
push
in
xor
ficoms
test
stos
sub
mov
out
inc
sbbb
jp
icebp
hlt
and
pop
cmp
pop
add
inc
or
lods
cmpsl
mov
popa
jno
lcall
fisubs
jle
mov
outsb
shlb
stos
hlt
and
ljmp
pop
lcall
adc
xor
stos
insb
aad
idivb
in
pop
dec
pop
lods
lock
jp
mov
mov
lock
and
jmp
std
ss
inc
mov
sbb
pusha
xorb
pop
add
adc
mull
fstpl
fcmovnb
jae
add
out
jge
mov
out
push
mov
jle
ret
dec
nop
xor
and
out
fldt
scas
mov
lret
cmp
rcrb
insl
dec
xlat
mov
or
ja
hlt
xor
std
pushf
cmp
rcr
in
hlt
inc
popf
xlat
push
mov
std
jae
mov
in
cli
add
cltd
and
jne
fs
add
pop
mov
mov
push
push
pushl
and
mov
adc
or
mov
stc
stos
vmptrst
clc
str
pop
sbb
push
jge
push
push
xchg
push
mov
sbb
jb
dec
call
xchg
cmp
lock
ljmp
mov
ds
loope
adc
lea
fdiv
movsb
fisubs
inc
cmc
bsr
push
inc
dec
es
push
mov
cmc
mov
dec
push
mov
insb
addr16
lods
mov
andb
sbb
jmp
jg
repnz
mov
and
test
or
mov
inc
popa
cwtl
pop
mov
cmp
addr16
data16
repz
xor
test
outsl
push
sahf
sub
or
movsb
pop
repz
mov
cmc
icebp
pop
jg
popa
in
lock
out
dec
rol
aad
pop
mov
enter
idiv
ljmp
and
aad
sbb
push
data16
xchg
cmp
adc
pop
test
jmp
dec
fisubl
pop
cltd
cltd
sbb
and
jmp
je
jno
jp
dec
push
mov
or
insl
cmpsl
inc
push
neg
push
mov
fistpl
xchg
lret
insb
pop
popa
icebp
cld
nop
mov
add
pop
sbb
dec
fildl
or
jle
lods
xchg
pop
out
inc
in
xchg
in
push
and
sub
ja
push
in
push
xchg
add
es
rolb
lret
lret
jae
push
rcrl
cmp
sbbb
inc
mov
inc
aam
out
ljmp
pop
rorb
and
jno
inc
mov
jae
data16
cmpsl
addr16
cmp
lods
cmp
sub
pop
rolb
sub
rclb
xlat
lret
psraw
mov
loope
ret
mov
mov
movb
mov
aam
jo
popf
mov
into
jge
andb
cmp
sahf
ret
in
sarl
cmc
insl
mov
xor
lds
pusha
xor
sti
sub
lods
adc
pop
mov
mov
stos
inc
adc
rcll
aam
lcall
fdivrl
mov
rcr
ljmp
push
or
sbbb
pop
pop
inc
pop
xchg
cmp
cmp
sar
add
icebp
mov
ja
sub
dec
enter
je
stos
das
pop
int3
sub
lods
pop
xchg
push
xchg
xchg
lock
lods
pop
push
pop
inc
data16
push
or
mov
push
xchg
jo
sbb
inc
cld
int
pop
mov
cs
sbb
sahf
sarb
and
xor
pop
movsl
inc
nop
jnp
out
mov
dec
adc
inc
jl
das
xor
out
scas
mov
int
xchg
mov
das
scas
or
xor
mov
repnz
and
sbb
cmp
cli
clc
adc
mov
hlt
add
dec
sbb
mov
xchg
ja
test
adc
push
popf
add
push
pop
in
shll
mov
insl
imul
jge
or
jno
movsl
es
push
lcall
out
adc
jecxz
jle
into
jge
fidivrl
ss
fldl
hlt
in
sub
pop
into
shr
lahf
icebp
cmpsl
xchg
fwait
or
mov
inc
dec
pop
mov
cmp
inc
repz
cmpsb
enter
sbb
lds
add
mov
dec
mov
mov
push
jb
and
lods
repz
sti
neg
jno
rcrb
mov
inc
push
lret
cmp
outsl
adc
rcll
int
mov
pop
andl
outsb
dec
add
xchg
sbb
in
mov
mulb
sub
clc
lea
add
xor
mov
andb
push
sub
jecxz
cmp
jecxz
inc
cmp
inc
hlt
xor
mov
sub
pop
ss
xor
loop
mov
rorl
cld
cmp
cld
aaa
and
dec
inc
xchg
add
cmp
push
movsl
fsubrl
lods
pop
jae
and
std
mov
or
push
add
add
mov
or
sbb
loop
xlat
mov
xchg
push
rcll
and
inc
inc
fs
and
cmp
sub
ss
cmp
repz
push
fsubs
orl
xor
xchg
xlat
mov
adc
jo
addr16
sbb
fs
adc
xchg
mov
mov
adc
lahf
ja
mov
mov
sbb
xor
jge
lods
or
dec
xchg
push
mov
aaa
push
pusha
mov
fdivrl
xorl
sahf
in
pop
jns
cmpb
or
fs
mov
xchg
cld
icebp
stc
or
or
xor
data16
jnp
cmp
push
xchg
add
sbb
test
add
ret
sbb
xchg
in
dec
push
addr16
bnd
out
lcall
push
aaa
sub
addr16
incb
adc
subl
inc
mov
sub
cmp
sbb
cwtl
pop
xor
jo
pmullw
sbb
aam
jbe
mov
js
in
jg
fisttpll
pop
mov
mov
daa
add
mov
fidivs
fildl
dec
pop
nop
mov
or
ljmp
xor
pop
adc
jae
rcrl
pop
or
dec
pop
mov
xor
and
in
sub
lock
dec
push
cwtl
out
stos
fsubs
mov
mov
ret
or
push
xchg
xchg
into
lretw
mov
aaa
push
inc
test
jb
movsl
adc
mov
and
sahf
pop
adc
sub
aad
sbb
sti
cwtl
pop
jbe
mov
push
jle
popa
data16
add
add
mov
xchg
or
mov
ds
adc
sub
mov
in
lcall
movsl
in
mov
jecxz
ljmp
je
inc
xor
xlat
hlt
cld
pop
mov
rolb
hlt
push
lret
mov
sbb
movb
inc
sub
mov
mov
adc
in
cmp
pusha
pop
das
push
pop
mov
ljmp
mov
dec
adc
mov
pop
xor
xchg
dec
ja
lcall
inc
icebp
in
mov
jmp
addr16
and
faddp
stc
fildll
paddb
incb
scas
push
in
sbb
mov
call
ret
dec
mov
pusha
cwtl
sub
ss
dec
push
cmc
mov
and
outsl
shl
mov
xlat
mov
clc
into
aaa
popa
loope
push
movsl
movl
xchg
xchg
jecxz
and
into
and
xor
imul
push
lods
mov
mov
jl
sub
dec
mov
js
sub
flds
xchg
ja
cmp
jbe
divl
outsb
ret
kmovw
mov
in
mov
adc
pop
cmpsl
inc
lret
xor
dec
ja
or
add
xchg
scas
xchg
xchg
jo
xchg
pop
adc
cwtl
xstore-rng
cmpsl
pop
ret
push
ficoms
sub
out
addr16
dec
sub
testb
scas
imul
lock
or
cmp
pushf
clc
pop
in
clc
cmp
hlt
cmpb
mov
sub
mov
shlb
data16
out
movsb
popa
mov
push
mov
sbb
popa
xchg
add
scas
fsub
ds
or
les
addb
cmpl
and
mov
dec
xorb
xor
jae
inc
mov
lods
js
clc
xchg
jg
popf
xor
mov
push
xchg
mov
cmc
inc
les
pop
jno
out
scas
xchg
scas
mov
sarl
loop
and
sbb
iret
insb
or
popf
jbe
xchg
mov
pop
xchg
pminub
inc
push
add
cld
sti
pop
outsb
ja
stc
sub
cltd
imul
dec
out
fwait
test
cmp
lcall
push
das
imul
cwtl
outsl
sbb
fstp
xchg
stos
rcr
and
dec
aam
adc
scas
call
int3
mov
shrb
push
xor
push
add
outsl
pop
sti
push
cmpb
in
in
aas
or
dec
dec
dec
inc
mov
cmp
pop
fdivrs
add
or
pop
fwait
mov
ss
daa
aam
add
out
in
leave
mov
push
xorl
mov
adc
stos
adc
sbb
inc
and
xor
fdivs
push
loopew
mov
jno
fs
cmp
movhps
nop
loopne
mov
mov
orl
pop
inc
or
rcrb
xchg
rorb
mov
test
push
aam
mov
jo
in
mov
aaa
xchg
aaa
out
push
out
adc
jp
jo
push
inc
rorl
mov
cs
hlt
or
les
ret
add
lds
inc
mov
roll
mov
or
xchg
stos
mov
push
je
jb
sbb
outsb
add
cmp
xor
mov
push
jg
dec
jge
sub
mov
cwtl
push
or
dec
aas
xor
jne
dec
xchg
das
fnstsw
or
inc
lret
mov
sbb
mov
rcrl
mov
fcmovnb
mov
adc
ror
orb
sti
loopne
mov
fimull
adc
stos
lahf
insl
cwtl
faddl
std
test
scas
leave
mov
and
ljmp
cmp
adcl
fdivrl
jne
push
dec
int3
lret
adc
cltd
in
sti
dec
popf
stos
andl
mov
lock
add
imul
jmp
mov
pop
out
fs
arpl
mov
xor
or
sti
call
outsl
and
mul
js
mov
jl
or
cmp
pop
and
fcmovne
inc
sub
or
push
mov
push
mov
mov
mov
xor
and
cmp
roll
jo
or
test
mov
icebp
sub
adc
lods
test
insl
push
inc
jl
lods
mov
mov
cmp
jp
insb
in
movsl
dec
xchg
dec
sar
jmp
adc
mov
fcomi
bound
adc
pop
bound
pop
fcom
push
jo
push
shlb
pop
out
dec
and
sub
rcrl
jecxz
mov
inc
sub
or
and
lcall
mov
xchg
xchg
push
lahf
add
in
mov
loopne
jge
test
in
inc
ds
cld
inc
pop
mov
daa
in
cmp
xor
pop
lcall
hlt
jb
xor
mov
push
je
dec
fmul
repnz
std
and
jae
mov
sub
mov
sub
jne
inc
xor
add
xchg
faddl
push
flds
xchg
lods
cmp
in
inc
xor
xchg
lods
les
gs
adcl
add
ret
mov
mov
sub
test
inc
sbb
popa
cmp
imul
dec
out
adc
in
mov
mov
dec
lock
push
pop
ljmp
mov
mov
repnz
xor
mov
mov
sbb
xor
and
cli
cmp
dec
mov
xor
fcmovne
push
adc
mov
jle
aam
mov
cmpsl
ficoms
mov
pop
inc
outsl
push
sub
add
aam
enter
xchg
scas
mov
les
mov
ret
aas
sbb
in
jl,pn
lcall
mov
mov
sbb
pop
sahf
adcl
lods
push
jne
add
dec
adc
sbb
or
mov
push
pop
cmp
scas
sbb
jne
aaa
cwtl
repnz
adc
mov
enter
movsl
out
dec
xor
push
icebp
mov
cmc
mov
nop
adc
sub
pusha
insl
or
shlb
pop
inc
outsb
pop
pop
ret
les
xor
out
iret
mov
dec
pop
adc
call
sbb
xor
lret
imul
movsb
data16
jns
adc
mov
lds
jg
cmp
inc
jo
test
jp
sbb
movsb
xor
pusha
andb
push
or
or
jnp
fiadds
cmp
push
jb
lods
pop
cmp
sbb
xchg
adc
pop
add
jae
pop
jbe
sub
adc
leave
fistps
lods
cmp
lds
adc
incl
adc
call
into
adc
cmp
sbb
out
movsl
lahf
mov
test
mov
mov
sbbb
adc
or
inc
movsb
into
imul
gs
xor
mov
push
ljmp
idiv
lds
xor
je
or
and
adc
scas
movsl
dec
fisttpll
cmpsb
out
lahf
inc
sub
dec
bound
in
ret
cmpsb
sub
mov
push
fistl
xchg
sub
jae
jno
lret
inc
popl
dec
ds
scas
xchg
or
insb
jo
mov
push
lods
dec
xchg
cmp
mov
push
fistpll
aam
pop
mov
sub
ds
adc
pop
cmc
xchg
or
jb
or
pop
jne
outsb
lea
cld
out
mov
push
and
jnp
xor
aas
dec
mov
jg
cmpsl
inc
sub
sti
dec
iret
pop
push
and
pusha
lret
jmp
xor
insb
cmpsl
sbb
mov
jge
and
pushf
mov
pop
add
add
mov
daa
push
xchg
mov
out
loopne
pop
inc
sahf
test
adc
test
lret
jnp
jbe
bound
js
imul
push
loopne
dec
fsubrl
fbld
fs
pop
loopne
in
mov
stos
insl
add
js
into
push
adc
lcall
xor
pop
mov
dec
sub
lret
mov
add
sbb
sbb
jg
jp
xor
repnz
cmp
jno
fisubrl
push
repz
jl
adc
mov
cmpl
xlat
fmull
imul
jns
lret
test
fidivrs
out
aas
mov
pop
sub
sub
loopne
test
into
inc
ret
pop
cmp
in
fsubrs
push
xchg
rcl
xchg
or
out
in
ret
xor
in
sbb
pop
or
push
scas
mov
mov
ss
pop
inc
ljmp
push
repnz
rcrb
jg
xor
scas
mov
roll
inc
sub
inc
shl
cwtl
faddp
insb
pop
mov
sbb
scas
pop
jmp
jb
mov
mov
daa
fwait
scas
inc
jge
dec
jl
xchg
icebp
aad
and
jbe
jno
lcall
pop
pop
pop
add
push
mov
je
push
adc
into
arpl
dec
inc
scas
or
scas
mov
outsb
jle
cmpsl
lret
rcll
cmpsl
fldenv
cmc
xchg
leave
mov
shrb
bound
jbe
out
loop
sar
pop
dec
icebp
or
dec
push
sarl
xlat
sarl
fisttps
test
mov
ja
sbb
es
lret
adc
icebp
xlat
cmp
jmp
in
jmp
xchg
fs
xor
mov
xor
aad
jo
push
mov
sub
cltd
add
fbstp
insb
in
pop
push
les
sub
jmp
rorl
push
adc
mov
cmpb
popf
dec
sbbb
inc
lahf
jmp
repz
rcrl
imul
cltd
inc
cmpsb
push
rclb
scas
push
and
push
dec
inc
mov
jmp
push
mov
jno
jle
pop
pushf
adc
mov
sti
xor
fnstcw
fdivs
andl
mov
pop
xor
cmp
inc
ret
data16
dec
pusha
mov
loope
or
cmp
xchg
ret
dec
shll
or
jns
fists
fdiv
push
outsb
movsb
popf
mov
mov
add
pop
and
and
and
dec
jnp
and
test
mov
sub
gs
jnp,pn
push
aam
push
jbe
sbb
mov
inc
adc
xor
sar
stos
jb
icebp
add
mov
fsts
sub
lods
inc
fs
mov
xchg
in
sub
repnz
push
stos
pop
sbb
subl
sahf
hlt
test
je
sub
cltd
pushf
outsb
jecxz
or
inc
add
es
popa
push
mov
add
lods
sarb
cwtl
mov
dec
pop
dec
push
pusha
jnp
test
data16
adc
sub
mov
pop
nop
xlat
sti
sbb
movsb
inc
ret
and
ja
dec
adc
icebp
xadd
mov
outsb
dec
test
testb
lds
fistpll
inc
insb
data16
rclb
jo
rcll
nop
pop
in
sbb
add
aaa
pop
mov
or
les
enter
stc
iret
xor
adc
and
sbb
in
mov
sbb
loop
cmp
mov
xchg
sub
inc
adc
xor
cmp
test
mov
enter
aas
pop
adc
popf
lcall
xchg
dec
mov
dec
xchg
jo
jecxz
shll
lds
sbb
nop
pop
nop
and
push
mov
and
hlt
or
jl
cmp
movsb
and
or
cmc
nop
scas
les
jg
mov
imul
lcall
fs
or
push
shll
xchg
sarl
cmp
pop
mov
push
xchg
out
inc
dec
mov
fdivrs
rcrb
sbb
cmpsb
jmp
and
movsb
int3
add
dec
xchg
mov
in
xchg
fadds
nop
les
hlt
or
cmpsb
hlt
adc
mov
lahf
adc
lret
iret
mov
int
mov
out
xor
inc
dec
repz
mov
xor
xlat
repnz
jae
out
das
xor
ljmp
or
out
movsb
jno
repnz
jecxz
or
movsl
push
fildl
rcl
fistpl
or
lods
jg
orl
fistpll
cld
sub
cmp
pop
lahf
ffreep
jno
std
lahf
mov
push
mov
cwtl
cld
fldcw
mov
outsb
movsl
call
popf
push
jbe
test
imul
mov
xchg
gs
pop
adc
mov
jle
lahf
mov
lret
test
sub
pop
pop
sahf
and
outsl
shl
push
aas
imul
lods
and
xchg
xor
hlt
cmp
cmp
stos
sbb
jns
mov
and
xor
inc
pop
cld
loope
or
out
nop
xchg
dec
inc
sub
daa
popa
mov
repnz
mov
sbb
mov
or
and
aas
or
or
outsb
je
mov
fcompl
popa
pop
scas
xchg
aaa
scas
cli
push
push
pusha
movsl
insb
test
in
inc
jne
inc
daa
xchg
mov
inc
jno
jmp
jb
mov
lea
jns
shll
xor
hlt
pop
xchg
dec
push
cmp
or
pop
addr16
gs
mov
push
mov
dec
out
adc
inc
ljmp
mov
inc
outsb
adc
inc
repz
dec
arpl
and
inc
push
cmp
jmp
adc
in
idiv
push
lds
mov
dec
push
push
cmp
pop
inc
ss
sbb
jb
jle
bound
dec
xchg
in
jns
sbb
mov
xchg
pop
adc
and
sub
std
popf
cltd
pop
mov
pop
mov
cmp
pusha
dec
fidivl
dec
mov
dec
push
nop
arpl
shll
popa
movl
inc
mov
sbb
xchg
imul
mov
and
iret
add
xchg
movsb
rcrl
xchg
loope
in
mov
mov
dec
push
sbb
mov
or
int3
jae
cmp
fists
mov
fcmovbe
lods
pusha
cmp
mov
lret
stc
jne
mov
jb
data16
xor
push
jne
mov
push
sbb
imul
addr16
fistpll
call
insb
aam
test
or
ret
fdivrl
mov
popf
inc
push
xchg
dec
cmp
iret
sub
dec
push
sahf
hlt
lds
mov
repnz
jg
add
sub
loope
xchg
andl
push
sbb
push
jb
mov
mov
mov
aad
loope
mov
icebp
cmpsl
loop
and
adc
loope
xor
nop
pop
cmp
adcb
stc
dec
andb
mov
inc
jo
ror
push
aad
mull
add
sbbl
js
or
add
inc
punpckhwd
jmp
xchg
xor
enter
scas
mov
out
xchg
mov
ljmp
imul
sbb
hlt
mov
xlat
aaa
push
inc
push
xor
sbb
inc
insl
mov
xor
jecxz
fwait
mov
decl
cmp
loope
sahf
sbb
sub
push
out
dec
sub
aad
ds
pop
pop
dec
lret
lds
lods
mov
cmp
inc
lods
mov
xchg
imul
in
fmul
cmp
sub
cmp
cmc
pop
mov
add
jle
cmp
jae
sbb
sahf
pop
les
dec
inc
and
mov
push
test
inc
push
jge
mov
sarb
dec
rolb
popa
mov
jge
stos
rclb
xchg
imul
and
mov
test
mov
shlb
mov
and
pop
push
pop
xlat
pop
xor
mov
push
push
jp
sbb
ret
iret
imul
jb
test
xor
push
fistps
js
jp
pop
cmpsl
stc
test
je
loope
inc
sub
popf
xchg
xchg
ds
insb
movsb
je
ficoml
aaa
call
mov
scas
aam
push
push
cmp
mov
in
dec
into
dec
test
cmp
loope
cmpsb
fldcw
rcl
ret
mov
aaa
pop
push
jo
lea
jns
pop
xor
jmp
inc
popa
mov
pop
sub
in
inc
movsl
add
test
mov
push
sar
sti
fiaddl
mov
cmp
in
xor
in
sbb
jbe
sarl
outsl
shrl
jb
cwtl
insb
fimull
pop
int3
jnp
sub
jl
or
sbb
push
add
push
jg
fisubs
scas
dec
dec
pop
idivb
adc
or
cmpsl
jg,pn
clc
movsl
dec
cld
loope
movsb
shll
ss
pop
ret
mov
inc
shl
enter
test
icebp
in
mov
ljmp
sbb
addl
mov
mov
insl
hlt
cmpsb
mov
adc
lret
out
pop
inc
add
mov
aad
std
mov
pusha
or
js
mov
xor
mov
ds
cltd
add
xchg
lods
pop
and
rcl
clc
outsl
xor
cmc
add
and
cmp
mov
addr16
cld
sar
sahf
mov
push
pop
xchg
cmc
cmpsl
enter
insb
int
or
adc
dec
shr
xchg
bound
or
test
movl
test
dec
mov
xor
dec
clc
dec
fistl
add
xchg
mov
mov
lods
data16
or
repz
lret
mov
sub
pop
and
fistl
jge
outsb
enter
in
jp
rcll
sub
mov
call
xchg
cli
hlt
dec
jp
jnp
sbb
sbb
mov
iret
mov
lahf
push
or
sub
inc
mov
pop
xchg
loopne
das
ss
or
sub
jb
popf
jmp
jmp
pop
pop
push
fimull
call
pop
push
xor
orb
mov
fucomp
jno
lret
fcoml
mov
into
fdivp
sbb
add
inc
fwait
xchg
enter
insl
adc
xchg
fstp
mov
stos
imul
ja
xor
mov
cmp
out
mov
or
fcmovne
mov
jnp
clc
int
fnstenv
push
aaa
or
push
or
and
hlt
pop
adc
js
jno
repz
mov
aad
jecxz
cmp
sub
loop
xchg
testb
cld
test
dec
xor
jbe
aad
sbb
repnz
push
mov
jmp
lret
test
iret
adc
sub
jmp
iret
ja
and
out
xchg
pop
sub
mov
out
add
outsb
rcl
fidivl
das
mov
adc
hlt
pop
jg,pt
inc
movsl
push
cmp
push
jne
int3
adc
pop
scas
mov
sub
movsl
clc
hlt
pop
push
js
dec
nop
xchg
aaa
loop
movsb
xchg
xor
icebp
mov
rol
xchg
and
dec
xlat
mov
adc
fidivrl
sahf
jb
add
sub
mov
mov
jg
loopne
push
jns
push
mov
sti
inc
mov
jae
or
add
stos
push
add
mulb
hlt
repnz
mov
push
dec
lea
insl
add
pushf
outsl
sbb
sub
mov
jns
test
dec
mov
jne
push
arpl
mov
in
cmc
sarl
sub
loop
or
push
mov
xlat
mov
dec
sub
subpd
iret
add
sub
mov
in
push
icebp
js
imull
push
pop
and
jne
push
and
mov
insb
lret
pop
xchg
imul
push
jle
sti
push
cmp
cld
mov
sub
in
arpl
mov
inc
sub
mov
cmp
in
adc
wbinvd
jno
lea
push
loopne
mov
dec
ds
outsb
cmc
setns
pop
cwtl
mov
mov
add
sub
sub
cltd
lea
pop
in
cld
imul
sub
das
adc
xor
lds
je
mov
fildll
xchg
cmc
fcompl
mov
xlat
addr16
add
or
lea
sbb
dec
mov
add
addr16
xor
jo
push
pop
aaa
clc
jle
push
addb
cmp
mov
jl
sub
lret
imul
mov
add
jg
sub
and
push
fsubl
pop
xor
cld
out
out
push
xor
out
xchg
pop
mov
inc
loop
aam
xchg
jae
fisttpll
cmp
scas
inc
mov
xchg
cs
les
fxch
rcll
adc
orb
imul
jnp
scas
fists
into
mov
aaa
loope
xchg
das
outsl
lret
jne
sub
dec
cmp
int3
xor
mov
loopne
lret
mov
negl
repz
jl
ficomps
int
pop
xor
rorl
jmp
pop
cmc
loope
mov
xor
mov
shlb
jno
imul
andb
inc
pushl
cli
sbb
or
xor
fmull
sub
pop
lock
cmpl
pop
inc
push
xor
push
pushf
lahf
inc
mov
adc
mov
jae,pn
mov
imul
cmova
fwait
pop
int3
jmp
jbe
hlt
push
in
cmc
cmp
lods
jge
fdivp
sarl
pop
adc
cmp
push
xchg
sbb
jae
dec
je
js
mov
fdivrs
mulb
jl
adc
jmp
imul
pop
mov
stc
pushl
scas
ret
push
loopne
mov
in
sahf
sbb
xor
mov
pop
lods
out
dec
lcall
pop
jmp
mov
cmpsb
pusha
data16
xchg
and
jno
sbb
dec
jns
add
iret
adc
lcall
or
cmp
pop
es
mov
leave
pop
adc
adc
push
add
lea
pop
daa
stc
clc
cmp
pop
adcb
test
movups
repz
or
lods
mov
mov
jg
mov
fstpt
daa
nop
jl
leave
int
shll
rorb
arpl
mov
add
xchg
filds
in
es
mov
data16
dec
fistl
ret
call
mov
aam
aad
cmpsl
mov
imul
test
mov
dec
iret
or
adc
mov
repnz
shll
pop
sbb
sbb
xchg
int
cmp
lds
pop
repz
push
or
mov
mov
jne
xor
mov
push
sbb
jae
xor
and
xor
fistpll
sbb
repz
xor
sti
mov
mov
call
mov
and
notb
jg
jge
xor
cmp
xchg
negl
mov
stos
insb
mov
clc
fucom
dec
je
es
dec
add
mov
pusha
mov
mov
pop
hlt
and
in
ja
add
inc
xor
int3
mov
pop
sbb
dec
inc
sub
push
imul
test
call
push
mov
pop
ret
pop
inc
cmp
pop
subb
psubusw
xchg
sub
int
movsl
rep
sbb
sbb
mov
or
pop
adc
push
mov
dec
mov
jno
sbb
mov
aam
cwtl
mov
lret
dec
jle
lods
jb
xchg
pusha
repnz
popf
fiaddl
popf
jb
pop
xchg
pop
int3
xor
int3
sub
push
adc
jnp
jle
and
scas
jmp
dec
lret
notb
bound
idivb
nop
pop
andb
rclb
inc
cli
mov
daa
aad
xchg
stos
outsl
in
inc
pop
fnstenv
or
repz
ret
popl
adc
adc
inc
les
mov
jb
cli
pop
scas
mov
sbb
dec
mov
fsts
les
test
pusha
push
sar
test
add
cli
fwait
clc
out
in
lods
sbb
sbb
imul
inc
jns
stos
outsl
cltd
shl
push
mov
xchg
fstps
push
insl
sub
lods
xchg
enter
out
scas
sub
hlt
lods
adc
mov
jl
pop
int
xchg
dec
and
scas
xchg
mov
inc
stc
jo
in
nop
mov
push
fisttps
in
cmp
in
cmp
push
icebp
xchg
mov
push
sub
or
jne
jb
imul
sub
ret
call
scas
sti
lods
out
int
out
mov
outsb
dec
into
adc
add
ja
mov
sahf
sub
xchg
pop
andl
mov
sbb
sbb
mov
add
mov
mov
jg
lret
ljmp
xchg
pop
ljmp
das
lea
adc
ss
push
mov
or
dec
cmp
xor
fsubr
test
imul
or
popa
inc
mov
pop
xor
test
sub
and
dec
jo
adc
es
sbb
xchg
sub
mov
loop
or
mov
mov
jb
push
mov
out
pop
cmpsb
sbb
gs
aad
inc
and
or
mov
sbb
push
pop
test
xchg
mov
mov
ss
add
mov
cld
mov
inc
int
bound
movsl
je
outsl
ja
movsb
jecxz
inc
nop
in
loope
sti
jmp
lahf
pop
push
aad
inc
or
xchg
pop
jae
enter
jae
lret
mov
jns
rorb
mov
xchg
rorl
insl
xor
mov
mov
rol
jle
std
cwtl
mov
in
pop
or
sbb
jbe
inc
je
inc
dec
fiadds
add
cli
fiadds
shrl
xor
mov
aad
imul
aaa
stos
outsl
fdiv
mov
loopne
xlat
leave
pop
xor
jl
cs
sub
sub
mov
inc
bnd
test
mov
and
mov
push
es
xchg
push
loope
mov
inc
popf
out
repnz
shll
popf
dec
movsb
push
mov
fsts
lahf
xchg
adc
movsb
xor
repnz
orl
adc
js
idiv
movsb
dec
mov
sbb
sbb
xor
or
push
cld
cmp
popf
dec
movsb
xchg
fimull
cmp
and
push
enter
sub
push
ss
fsubl
sub
ljmp
jne
sbb
dec
out
notb
shll
cli
mov
popa
cmp
inc
int
sahf
cmpsl
in
int
aas
mov
gs
rclb
mov
inc
imul
jb
pop
nop
ss
scas
cwtl
int3
pop
popf
mov
js
xchg
aaa
pushf
or
mov
pop
data16
repz
mov
mov
xchg
cwtl
dec
dec
std
cmp
xchg
mov
cli
jb
inc
sbb
cwtl
mov
or
jbe
pop
rcr
in
jmp
push
jbe
hlt
dec
gs
xor
jle
out
aas
into
in
xchg
cmp
andl
test
ja
pop
jg
outsl
add
sub
mov
sub
cmp
test
idivb
outsb
cwtl
popf
outsb
test
and
clc
xor
jl
test
aad
sub
mov
xlat
xchg
push
scas
xchg
xchg
sarb
add
mov
notb
fs
divl
subb
test
mov
ficoms
mov
rclb
outsb
cmpsb
sub
jmp
dec
sub
negl
fsubl
xchg
mov
jbe
enter
push
mov
and
push
push
or
jl
sub
out
mov
add
and
mov
scas
jne
xchg
inc
popa
xor
rcrl
insb
pop
push
xor
dec
inc
out
ret
les
xlat
int
cltd
insb
fdivrl
paddsb
out
mov
mov
xchg
mov
mov
pop
xor
inc
js
lret
in
sbb
jmp
idivl
inc
inc
int3
xchg
shlb
cli
mov
addr16
sbb
cmc
xchg
aaa
out
push
inc
aad
pop
ret
sbb
adc
imul
push
mov
xor
pop
sub
cmp
or
sbb
push
icebp
dec
push
out
je
outsb
ljmp
pushf
add
and
scas
test
sub
fsub
mov
and
sarl
push
xor
repnz
scas
push
iret
mov
popf
int3
out
scas
cli
test
pushf
xor
scas
xor
loopne
ficoml
test
je
out
push
inc
add
push
mov
jo
pop
jo
dec
pop
cmp
mov
popf
adc
xlat
dec
push
jg
push
and
cld
lods
add
mov
or
rcr
dec
sbb
push
shlb
ja
movsb
lahf
xlat
pop
movsl
pop
add
es
sbb
cli
lea
dec
xchg
jb
push
movsl
pop
pop
inc
or
stos
adc
daa
mov
cmc
mov
leave
ds
push
inc
les
and
mov
sbb
loope
mov
in
jp
mov
xor
cmp
adc
imul
imul
inc
lea
loopne
aaa
sbb
dec
push
mov
ffreep
es
pusha
scas
xchg
xor
jbe
inc
mov
xchg
cmp
xor
xor
jno
sub
xchg
mov
jmp
neg
mov
cmc
lods
cmp
cmc
aas
outsb
cltd
jb
fdivrs
in
pop
roll
jmp
mov
ja
fisttps
mov
imul
or
pop
inc
bound
movsl
ret
fiadds
push
sub
push
scas
cmpsl
arpl
jb
iret
add
or
mov
std
dec
push
push
xlat
mov
mov
dec
sub
scas
sbb
mov
jbe
shrl
dec
data16
cmp
je
and
xchg
adc
lods
xor
icebp
xchg
outsb
sub
outsb
fstpt
lds
add
jmp
arpl
add
push
inc
test
test
push
mov
push
pop
sbb
arpl
sbb
hlt
lret
fstpl
push
or
les
fistps
cmp
cltd
push
adc
inc
lods
or
popa
jecxz
dec
addr16
outsb
pusha
push
dec
xchg
test
pop
jl,pn
mov
dec
cmpsb
cmp
lcall
sbb
inc
jnp
and
repz
add
sub
adc
pusha
lcall
xchg
xor
aad
je
outsb
in
mov
push
out
fidivl
aad
hlt
jo
mov
jnp
outsb
and
or
insl
cmc
mov
es
and
insb
xchg
xchg
in
stos
xlat
sahf
sbb
mov
repnz
and
jbe
mov
jbe
dec
push
and
fdivrl
cli
fldcw
xchg
sub
adc
sbb
dec
lcall
stos
jo
xchg
lods
loope
xor
dec
pop
iret
jne
push
out
xorl
sub
pop
cltd
movsb
or
mov
and
adc
push
jae
int3
cltd
adc
mov
xor
jb
sbb
dec
or
adc
scas
loop
mov
mov
cmpsl
and
addr16
leave
push
and
jmp
jno
mov
arpl
sbb
mov
jbe
or
xlat
xchg
ds
jecxz
push
cli
mov
mov
xchg
pop
mov
push
test
bound
cmp
mov
lock
jbe
xchg
dec
inc
mov
xchg
jne
xor
dec
subb
jl
pop
cmp
cmc
insl
xchg
sub
jno
mov
in
dec
jne
cmp
test
pop
push
mov
std
pop
loope
mov
sub
cmp
lcall
gs
xchg
push
cld
jo
sub
pop
cmp
insb
mov
mov
push
adc
pop
xchg
push
sbb
and
mov
js
imul
inc
jl
mov
push
xchg
pusha
movsb
in
mov
pop
jge
xchg
push
xchg
mov
or
and
fists
xlat
xor
in
clc
fwait
or
jmp
jecxz
adc
pop
test
pushf
jecxz
enter
dec
add
loopne
sub
dec
jl
xorb
dec
cmc
icebp
xorb
fidivrs
sbb
cld
frstor
dec
mov
cld
out
fcoms
push
in
and
lods
xchg
out
xor
fstp
xchg
sbb
push
mov
std
test
mov
xor
sbbl
je
aas
mov
xorl
push
xchg
fs
add
fnstenv
test
cs
push
fidivs
mov
mov
push
mov
adc
push
mov
fwait
jmp
xor
mov
and
sbb
pop
push
sbb
dec
cld
cmpxchg
push
jmp
mov
int
jl
cmp
ret
test
xor
inc
stc
xchg
cltd
das
cmpsb
imul
cmc
xlat
imul
xor
or
jmp
pop
out
inc
mov
fs
rcll
movsl
dec
lds
jl
xchg
xchg
sub
sbb
mov
sub
mov
enter
popf
outsb
or
mov
adc
cmpsb
fwait
arpl
sbb
xlat
push
mov
sub
test
jmp
jecxz
inc
popa
scas
inc
jae
mov
jl
mov
mov
dec
clc
dec
adc
add
int3
mov
xchg
jne
xor
and
mov
in
sub
shlb
mov
pop
movsl
sbb
push
cmp
sti
ret
jmp
inc
cs
fcoms
sbb
or
cltd
fisttpll
addb
fidivrl
adc
imul
insl
xchg
ret
clc
fnstcw
aad
sbb
lret
hlt
inc
and
dec
out
xchg
test
xor
aam
and
int3
xor
int3
pop
stos
sbb
mov
int3
lahf
xlat
in
bnd
lahf
imul
inc
fimuls
mov
rcr
clc
fldln2
add
jnp
xchg
nop
dec
xor
les
loop
push
xlat
xor
adc
inc
xchg
xchg
push
lret
jecxz
shrb
and
xchg
xlat
fs
int3
cltd
out
xchg
shll
or
aad
in
xchg
push
std
cmp
sti
xchg
adc
lea
movsb
xor
js
jb
out
jl
sbb
fldl
add
outsb
pop
fs
mov
ret
and
lods
aad
inc
mov
pop
repnz
faddp
cltd
cmp
pop
call
cmc
out
ror
pushf
fbld
pop
mov
push
xchg
insb
icebp
jecxz
xor
mov
cmpsb
fidivs
loopne
mov
mov
sub
mov
rcl
inc
fdivp
push
xchg
inc
std
xor
dec
repnz
jbe
sti
push
scas
ja
iret
fcom
pop
sbb
pop
mov
inc
sbb
and
dec
xchg
pop
rcrl
pop
xchg
pop
jl
jno
push
lods
pop
and
adc
test
jo
jb
fs
jo
shlb
icebp
movsl
pusha
test
inc
jne
fcomps
repnz
shlb
xor
icebp
cmp
notb
xlat
les
push
stos
pop
mov
pop
popa
adc
add
outsl
xchg
mov
push
mov
push
mov
insb
add
cld
push
nop
push
aaa
out
inc
pop
pop
sbb
imul
cmp
or
mov
cmp
fldenv
push
cli
push
and
mov
fwait
xchg
popf
gs
or
movsl
lods
inc
test
push
xor
sub
lods
les
iret
sti
add
dec
xor
fs
aaa
mov
iret
mov
jb
xchg
cmp
or
push
and
movsb
xchg
push
inc
jmp
movsb
cmc
hlt
fdivl
pop
into
inc
lret
xor
fmull
clc
stc
mov
sti
stos
outsb
mov
iret
pushf
cltd
xchg
nop
hlt
cmp
cmp
sarb
in
inc
xor
movsl
movsl
xchg
andl
mov
sti
mov
mov
sti
insl
xchg
add
lea
aam
pop
adc
bound
push
xchg
out
cmp
push
jmp
pop
push
inc
inc
lods
and
int3
sbb
notb
cmpsl
pop
and
fisubrs
adc
gs
xchg
out
or
mov
or
or
in
or
sti
jp
cmp
lea
sbb
adc
jecxz
stos
ds
loop
inc
pop
test
mov
cmpsb
cli
inc
sbb
add
or
cmp
sub
pusha
leave
jge
roll
movsb
out
js
or
je
call
sub
iret
mov
cmc
out
sbb
shrl
xchg
and
outsl
mov
lds
ret
ficoms
and
dec
xchg
and
jns
int
cmc
lea
int3
inc
bound
fmulp
xor
xchg
les
fs
xchg
or
dec
lock
xor
fwait
xchg
xchg
cmp
aad
mov
adc
pop
inc
daa
mov
arpl
popf
xor
and
call
mov
xor
lret
repz
out
mov
xor
mov
sub
enter
mulb
or
outsb
dec
lods
inc
cmp
rcrb
mov
or
add
addr16
psubd
mov
shll
adc
shll
sbb
insb
xchg
push
ds
mov
sub
enter
sub
popf
dec
and
fsubl
dec
mov
cld
and
sbb
xchg
push
fisttpl
cld
push
xchg
shlb
mov
jb,pt
push
inc
test
loopne
aam
cmpsb
pusha
addr16
rorl
push
and
inc
push
pop
mov
or
cld
inc
sar
cltd
leave
leave
arpl
popa
sbb
in
pop
add
mov
mov
mov
test
jl
add
xchg
adc
bound
sbb
xchg
or
jo
js
sbb
lods
aas
out
in
fcmovnbe
ror
cwtl
or
icebp
ja
and
push
or
fcomps
loop
fs
sbb
shlb
std
xchg
out
dec
pop
cmp
adc
push
mov
jle
jo
mov
sbb
adc
push
mov
jns
mov
loopne
xchg
test
iret
das
leave
cwtl
inc
xlat
cmpsb
rcrb
js
xlat
je
mov
push
mov
daa
sbb
out
dec
xchg
aas
jnp
negl
enter
jp
sub
mov
lock
imul
lahf
lret
bound
push
dec
idivb
inc
cmpb
mov
jae
push
in
testb
dec
mov
jp
bound
xor
outsb
push
cltd
sbb
jge
xchg
xchg
aaa
push
pop
mov
jle
adc
and
and
mov
cmp
dec
test
inc
pusha
push
addl
sbb
cld
lea
in
sub
repnz
push
xor
xchg
jl
xor
outsb
lock
inc
stc
ud1
pop
xlat
inc
pop
call
xchg
mov
movsl
jge
repz
mov
xchg
jecxz
add
mov
arpl
lcall
lar
out
imul
xchg
inc
ret
mov
in
leave
jno
mov
mov
lret
imull
xlat
or
jmp
mov
fwait
jae
xor
fwait
xor
cmp
adc
pop
cltd
insl
dec
xor
lret
cld
mov
jp
hlt
xor
push
mov
dec
aaa
mov
in
sub
out
imul
rorl
mov
out
roll
ss
pop
gs
in
xor
dec
push
mull
testl
pop
or
push
jo
or
mov
repz
mov
insl
pop
cmpsl
insb
inc
adc
pusha
cmpsb
or
stos
inc
mov
adc
inc
ja
movsb
inc
sub
push
jo
mov
mov
lcall
rcrb
jae
cmp
jb
mov
mov
add
cmp
ss
jp
cmp
pop
and
push
out
inc
cmc
sar
jmp
sbb
daa
addr16
int
push
jno
dec
mov
push
fstpt
out
cmp
movzwl
push
lods
xchg
xor
xchg
loop
push
cld
push
xchg
inc
dec
fmulp
popa
out
out
push
sbb
mov
or
fisubrl
cmp
rorb
dec
adc
and
into
das
sbb
cwtl
inc
pop
stc
jge
sbb
xor
mov
and
sbb
outsb
sbb
out
jge
pop
inc
popf
movsl
xlat
mov
sbb
cmpsb
scas
jp
and
mov
push
scas
outsb
lods
addl
cmp
aas
ficomps
cmp
in
pop
jmp
add
push
pop
mov
cmp
xor
push
sbb
cld
jl
loop
mov
jns
xor
imul
call
push
sar
notb
jb
test
inc
xor
incl
and
dec
pop
popf
cmpsl
testl
lret
inc
and
pop
adc
dec
movsb
inc
test
xor
or
mov
cmp
pushf
inc
push
fildl
add
cmc
insl
into
aad
xorb
outsb
in
push
inc
push
push
in
dec
aam
imul
cmp
xchg
int3
mov
mov
jmp
mov
test
ss
add
cmpsb
mov
test
adc
aam
repz
sahf
cmpsl
adc
and
mov
ds
xlat
aaa
sub
add
mov
or
push
scas
imul
mov
test
test
pop
in
cmpsl
neg
pop
and
xor
out
mov
sub
push
insb
sub
xchg
and
les
iret
leave
icebp
loop
adc
mov
and
mov
push
adc
mov
xor
cmp
push
sbb
js
push
xchg
adc
dec
jmp
fninit
and
cmp
stos
fstpt
icebp
rorl
mov
xor
into
ss
xchg
loop
jl
cmpsl
roll
outsb
and
add
out
stos
fucomi
fmulp
insl
fisttpl
push
or
ds
push
mov
cmp
mov
ret
loop
xchg
jg
or
or
pop
clc
push
push
xchg
xchg
mov
push
aam
add
push
inc
out
push
inc
ret
hlt
push
hlt
or
cmp
pop
push
hlt
icebp
push
call
adcl
shrl
andb
pop
and
imul
and
loope
dec
push
js
jbe
xor
dec
xchg
out
mov
mov
iret
xor
pop
push
sbb
xchg
sub
cltd
call
ja
sarb
xchg
fistl
mov
stos
fdivr
cs
mov
nop
loopne
push
clc
jbe
push
repz
mov
dec
sub
std
sub
test
push
mov
ret
xchg
test
adc
pop
xchg
test
fnstcw
ss
sub
or
mov
sahf
pop
addr16
mov
mov
mov
cmpsb
push
aaa
pop
sub
ja
adc
xor
push
sti
pop
add
pop
dec
test
out
push
inc
insb
out
sbb
and
adc
xchg
pop
movsl
sub
jg
lret
pop
pop
or
inc
mov
iret
cmpb
leave
and
jbe
sbbb
xchg
into
int3
adc
andl
sar
or
fstpt
testl
data16
xchg
cmp
bound
stos
xor
or
cmp
xchg
mov
scas
dec
mov
into
push
out
outsb
inc
mov
and
pop
clc
clc
mov
xchg
and
sbb
and
jmp
movsb
push
dec
push
lret
and
cmp
aad
dec
or
mov
xor
pminub
fisubl
icebp
mov
push
pop
cmp
and
push
mov
pop
adc
ret
icebp
push
loop
scas
movsl
jo
fs
xchg
stos
lods
data16
idivb
mov
add
cmp
hlt
jg
mov
inc
pop
mov
jg
movb
in
cmp
sbb
lods
or
mov
cmpsb
lahf
cmp
pop
add
jbe
pusha
pop
push
js
xchg
dec
jp
dec
fistpll
cmpsl
loop
mov
pop
gs
push
cmp
fnstsw
das
jae
cwtl
fdivl
testl
shll
jns
mov
push
mov
and
mov
push
adc
ss
push
lds
loop
fcoml
pop
dec
dec
les
in
inc
mov
or
pusha
popa
add
sbb
cmp
add
movd
subl
mov
mov
pop
sti
jns
push
out
mov
dec
mov
movsl
fiaddl
pop
sub
and
jnp
xlat
jno
ret
clc
cmp
or
aas
lock
lds
and
xchg
mov
dec
shrb
test
cmpsl
arpl
jl
cmp
insb
jle
mov
jno
mov
aaa
jno
loope
push
ret
push
pop
fwait
sub
mov
addl
jg
lret
jp
out
mov
cmpsl
loope
int3
jp
cli
rolb
mov
repz
shlb
out
cmpsb
out
sbb
std
iret
enter
push
fcompl
add
and
sub
mov
jbe
pushf
mov
sub
and
adc
or
jg
sub
ss
push
push
pop
popf
inc
enter
enter
mov
jbe
fidivs
adc
or
mov
pop
xorl
push
dec
mov
es
cmp
jns
sub
dec
inc
ljmp
pop
cmp
sub
bound
out
sbb
lret
pop
hlt
mov
sbb
mov
nop
leave
mov
jl
xchg
icebp
sbb
movsb
push
mov
jns
lods
add
and
xchg
jb
lock
in
cli
test
push
les
mov
cmp
mov
in
pop
xor
inc
push
jae
xor
cs
push
pop
aaa
fcoml
test
push
jp
ret
dec
clc
cld
dec
sub
sarb
popf
outsb
imul
jmp
cwtl
and
or
and
adc
in
push
das
mov
aad
pop
mov
mov
or
xor
or
lock
cmp
xor
adcl
imul
jnp
cmc
stos
pushf
loopne
aam
jle
fldt
cltd
scas
lods
movsb
mov
xchg
jmp
cld
mov
js
cmp
push
test
jmp
and
and
cmp
shll
sbb
roll
mov
aam
inc
fstpt
xchg
imul
hlt
xchg
insb
ss
xchg
fwait
scas
das
xor
adc
mov
dec
movsbl
or
leave
push
lods
inc
sbb
sahf
adc
out
push
ds
or
jl
lock
dec
sti
sub
pop
lods
retw
push
sbb
out
test
outsl
mov
push
push
mov
sub
daa
aas
daa
xchg
cltd
outsl
xchg
xchg
decb
sbb
iret
sub
mov
sbb
ljmp
je
cmpsl
push
adc
adc
dec
and
inc
jp
xchg
push
ljmp
jecxz
sti
xchg
mov
ss
push
das
sub
test
mov
clc
ret
adc
ljmp
hlt
cmpsl
cmp
test
mov
movsb
mov
aad
jae
push
mov
dec
mov
inc
sub
and
lea
pop
fisttpll
ret
mov
adc
sbb
lret
pop
aaa
ret
stc
lahf
mov
test
inc
push
sahf
loop
dec
cmp
mov
pusha
add
int
cmpsb
pop
mov
out
mov
jns
dec
mov
dec
rcl
cltd
sbb
sti
daa
sbb
xor
jb
data16
cmpsl
jae
stos
mov
adc
or
in
sti
cmp
test
jp
lcall
std
call
add
adc
jmp
aam
and
sbb
jae
out
sbb
into
icebp
fcmovb
ret
enter
fidivrl
outsb
add
bound
pop
xchg
std
cmp
data16
int
dec
movsb
jg
ror
mov
ljmp
sahf
into
adc
fbstp
inc
ret
aad
sti
shr
sub
add
fwait
divl
addb
xchg
std
cmpsl
negl
adc
inc
adc
dec
out
lea
jle
std
mov
in
aaa
cmc
and
es
inc
push
push
push
xchg
js
mov
mov
jo
testb
jl
jl
jl
rolb
mov
sub
mov
andl
pop
aam
sbb
mov
test
mov
dec
pop
outsl
rcll
dec
jae
pop
repnz
mov
out
jle
xchg
out
fiadds
and
dec
test
or
lds
push
push
repnz
mov
call
addl
push
push
lock
shl
dec
imul
insl
mov
lret
push
addr16
mov
mov
outsb
sub
and
and
adc
and
pop
adc
add
xor
loop
int
cwtl
test
jmp
mov
out
pop
or
add
lret
inc
dec
xchg
dec
int3
or
lcall
push
xlat
popa
pop
cmc
pusha
popa
inc
pop
rcrl
aad
fadds
and
iret
pusha
inc
xchg
xorl
mov
out
dec
cmpsl
vmread
inc
sub
inc
adc
in
inc
add
pop
pop
mov
mov
notl
mov
adc
adc
xor
dec
movsl
jl
cmp
idivl
aad
pinsrw
mov
into
add
sarl
xchg
insb
add
adcl
xchg
out
mov
cmp
jbe
dec
cmp
in
and
pop
xchg
cmc
ja
hlt
cld
gs
push
mov
jne
lods
pop
movsl
in
dec
add
les
fsubrl
leave
xchg
movsl
and
push
loop
addr16
sub
sbb
inc
nop
arpl
pop
flds
mov
push
scas
fimull
jcxz
dec
leave
add
pop
test
or
out
popf
out
test
and
pop
xor
mov
dec
pop
popa
xchg
outsl
fs
sub
ja
pop
pop
leave
int
movsl
add
pop
cmp
loope
xchg
aaa
loop
aaa
jns
jbe
cwtl
lcall
lock
mov
cmp
test
nop
jge
outsl
shl
mov
lret
sbb
mov
sub
cld
outsb
pop
inc
and
mov
decb
push
rcrb
mov
mov
mov
in
lahf
adc
push
ret
jne
shr
jg
loop
in
dec
inc
push
and
lds
pop
inc
or
inc
jg
cld
adc
stmxcsr
pusha
icebp
aad
clc
mov
stc
mov
jo
fadds
add
add
dec
sbb
pop
stos
movsb
sub
jl
adc
cld
loopne
popf
test
or
js
dec
movsl
data16
lods
sbb
pop
mov
das
dec
mov
movsb
inc
xchg
mov
inc
movsb
mov
aam
cmpsb
push
jae
lds
adc
mov
dec
xchg
sahf
cmp
pop
jle
xchg
stos
mov
and
mov
sub
fwait
rcrl
imul
cltd
fidivl
push
shlb
lahf
xlat
xchg
xchg
rcrb
enter
lahf
negb
xchg
inc
loop
js
daa
test
fsubr
ret
jmp
or
xlat
mov
in
ret
shl
sahf
or
pop
test
jae
cwtl
pop
xor
and
or
mov
jmp
push
roll
mov
in
mov
ss
dec
imul
push
test
push
imul
call
push
shl
add
or
nop
sti
std
out
add
jle
shl
gs
xchg
cmpsb
shrb
and
and
into
repnz
adc
push
outsb
rcll
cld
filds
fsubrl
dec
shll
inc
mov
inc
test
adc
repz
fwait
jae
mov
jo
push
and
ja
sub
aam
out
adc
or
outsb
pop
lds
pusha
test
pop
rcll
lahf
xor
sub
stos
dec
jo
jnp
xchg
daa
popf
std
movsl
pop
stos
mov
js
lret
addb
xchg
addr16
xchg
ja
movb
setp
je
out
push
jle
in
and
push
mov
mov
aam
sub
arpl
xor
mov
lret
pop
fdiv
inc
call
push
inc
adc
jae
push
loopne
or
popf
lds
push
call
dec
ds
fwait
and
xchg
xchg
xor
push
out
lea
xchg
jno
divl
adc
jl
pusha
leave
fwait
xor
data16
cmp
imul
mov
mov
aad
stos
les
int3
mov
stos
js
imul
pop
jp
js
in
sbb
cli
js
ret
or
xchg
add
loopne
or
fninit
inc
leave
pop
dec
fnstsw
sti
cwtl
aam
or
enter
sahf
and
ret
loopne
ret
sub
ljmp
cmpb
dec
push
inc
mov
data16
xchg
test
imul
cli
mov
dec
cmpsb
and
jae
sbb
push
in
sub
adc
or
ja
sub
or
fiadds
mov
stc
aam
ds
nop
push
loope
stos
sti
sub
adc
stos
les
ja
cli
ss
sbb
out
stos
mov
xlat
fidivrs
test
rcrb
sbb
fisubrl
or
scas
adc
or
gs
push
ds
push
enter
or
push
sarl
sti
inc
imul
repz
rclb
xor
iret
mov
jne
clc
sub
outsb
push
cwtl
gs
inc
inc
xlat
stc
pusha
test
lret
cmpsb
xchg
and
or
fdivrs
xchg
call
xchg
notb
xchg
mov
jo
nop
lea
lock
xor
loopne
inc
mov
sub
scas
cld
inc
jb
movsb
in
roll
inc
dec
test
pop
out
test
jg
pop
dec
sti
xchg
xchg
sub
push
push
xor
jo
cltd
faddl
jl
pop
mov
movsb
xchg
pop
adc
dec
lds
cmp
or
bound
ret
jmp
fistpll
jecxz
shrb
push
push
imul
ljmp
mov
dec
cld
sahf
cld
mov
and
sbbb
in
xchg
and
daa
jl
xor
stos
mov
shll
mov
jecxz
push
xchg
daa
and
loope
pop
out
jmp
push
pop
or
mov
add
stc
push
lods
lahf
adc
daa
mov
inc
out
cs
push
cmpsb
daa
mov
pop
adcl
gs
loop
pusha
cmp
inc
aam
or
push
scas
pusha
mov
test
and
sbb
call
test
cmpsl
or
xchg
inc
inc
icebp
inc
xchg
imul
loop
mov
mov
in
jecxz
mov
xchg
rclb
imul
mov
jmp
jge
repnz
sbb
out
leave
mov
jne
pop
stos
xchg
mov
cld
mov
rcrb
jb
loop
or
mov
enter
xchg
mul
cmp
xor
and
aaa
daa
lods
jg
or
outsl
cmp
jg
mov
add
cltd
stc
sahf
fstpl
xchg
scas
out
dec
xchg
mov
loop
pusha
stos
lods
pop
jecxz
jb
lock
mov
stos
mov
popa
pop
mov
daa
lods
test
lcall
lock
nop
and
insl
push
and
lcall
push
test
inc
xchg
bnd
add
enter
fildll
sbb
mov
mov
cs
mov
lods
push
sub
sub
jae
jns
mov
or
ds
or
mov
sub
in
xor
cli
lret
jb
or
ljmp
int3
cmp
cmp
je
ret
mov
daa
push
xchg
and
push
lcall
popa
mov
sti
cmp
arpl
cmp
and
xor
loop
lret
mov
out
push
in
cmp
adc
int
pop
sbb
test
mov
mov
mov
ss
dec
out
lock
mov
pop
mov
arpl
xchg
and
lds
andb
pop
cmpsl
and
cs
xor
and
mov
scas
dec
out
push
fdivl
in
inc
cmp
add
push
loopne
int3
mov
movsl
data16
jmp
movsb
aad
sti
daa
hlt
mov
push
sbb
popf
imul
jmp
ja
cmp
test
dec
cld
jns
mov
push
cmpsl
xor
pop
dec
xor
dec
jns
gs
xor
add
and
adc
mov
cmpl
push
dec
bound
mov
add
fsub
out
paddsw
fdivr
sub
int
bound
cmc
mov
imul
jg
xlat
into
subl
repz
dec
mov
call
push
in
adc
fildll
lahf
rorb
xor
test
jno
xchg
push
push
push
rol
lods
inc
dec
inc
sbb
push
int3
sbb
push
mov
xchg
ret
or
cmp
out
sub
fcmovne
push
stos
or
jp
loope
shlb
mov
push
dec
rclb
inc
stos
mov
sub
fwait
sahf
pop
xchg
pop
mov
repz
rolb
mov
imul
and
int3
leave
lods
rcl
pusha
bound
mov
push
dec
dec
jle
in
mov
repnz
mov
inc
xchg
sbb
test
cmp
push
sbb
mov
cmp
push
sbb
xchg
xchg
sbbl
insl
adc
ret
lods
xchg
cmp
jo
lods
sub
lea
push
mov
pop
nop
nop
repz
lea
push
lcall
push
inc
out
pushf
mov
in
les
dec
roll
inc
and
cmpsb
pop
add
scas
or
scas
arpl
lcall
ret
insb
cmp
xchg
pop
aam
pop
mov
jmp
in
jl
repnz
mov
sub
stos
adc
add
out
into
aas
mov
jecxz
fidivrs
add
mov
pop
aaa
mov
lods
or
in
pop
or
push
add
insl
push
add
or
pusha
inc
bound
sbb
inc
bswap
xor
fldt
daa
iret
lods
mov
aad
in
adc
movsb
out
xor
mov
inc
pop
push
fistl
push
mov
jnp
xchg
fidivs
sahf
in
jmp
sahf
rorb
psubb
arpl
scas
mov
shlb
in
push
pushf
dec
xchg
aam
rcll
cmpsl
icebp
or
adc
jecxz
jne
fldt
and
adcl
repz
dec
jle
and
push
pushf
mov
fistps
push
loopne
mov
cmp
mov
icebp
sub
shll
mov
int3
pop
aaa
push
xchg
mov
clc
jp
sbb
test
dec
mov
or
int
in
jge
and
mov
fisttpl
int3
pusha
mov
add
std
adc
stos
push
jb
inc
mov
mov
scas
and
ljmp
inc
sbb
add
cmp
mov
sbb
popa
or
mov
push
setp
rol
push
aam
aad
pop
jae
inc
add
dec
add
mulb
out
push
or
jbe
andb
das
add
jl
jbe
lea
mov
xchg
lods
loop
scas
fsts
addb
cli
dec
aaa
xor
push
in
out
inc
out
and
inc
mull
lods
mov
stos
push
fbstp
std
inc
scas
stos
scas
sbb
cmp
cltd
roll
stos
iret
pop
fwait
inc
mov
inc
xorl
nop
movsb
popa
cmc
push
out
xchg
adc
aam
add
dec
push
dec
adc
fprem1
ljmp
out
lret
cmpsb
xchg
xchg
push
mov
jge
ds
pop
in
pop
sbb
jne
and
repz
push
test
loopne
das
ficoml
fwait
repnz
cmc
roll
xchg
lock
lods
sub
and
fldt
push
jl
les
fwait
xor
inc
mov
xchg
add
pop
dec
stos
cmpsb
fimull
push
scas
ds
rcll
pop
hlt
adc
sbb
ret
jno
fdivs
insb
jge
mov
sete
out
jo
ljmp
movsb
push
sbb
xchg
cmp
int3
sti
push
cs
mov
shlb
adc
push
stos
pusha
or
mov
mov
sub
ja
jmp
mov
mov
in
aaa
addr16
iret
lods
int
cmp
or
ficomps
xor
faddl
cltd
cmpsb
cwtl
cmovl
mov
out
leave
xchg
push
fstl
mov
sahf
sahf
xor
imul
aam
push
je
sub
sub
mov
in
cs
xchg
mov
mov
clc
mov
and
pop
in
inc
push
inc
mov
or
iret
scas
add
jne
test
and
lods
xchg
std
pop
xor
negl
and
inc
push
popa
push
aad
scas
pusha
pop
inc
adc
cmp
inc
rcll
add
movsb
loop
sub
aas
daa
add
push
and
dec
mov
adc
mov
gs
dec
push
mov
or
aam
inc
out
xchg
fnstcw
push
nop
lcall
xchg
pop
ds
sbb
dec
cmp
mov
test
jbe
lea
cwtl
lods
iret
sbb
stos
mov
psubq
jae
sbb
fadd
sub
es
mov
mov
jl
fdiv
data16
fcomps
ja
imul
in
jo
xchg
jge
aas
data16
inc
addl
mov
push
mov
in
sarb
sbb
shrb
repz
add
test
jno
popa
add
sbb
idivl
in
leave
or
out
push
sbb
inc
stos
mov
push
push
adc
cmp
int
cmp
push
out
sbb
cli
mov
cmp
and
inc
imul
or
jne
ljmp
enter
cli
inc
add
in
andl
cmp
cmp
mov
lods
movsb
ljmp
je
pop
mov
mov
pop
cmc
stos
jle
pop
imul
lret
and
lea
int3
add
hlt
lea
xchg
or
push
cmpsl
test
sub
popf
jbe
lahf
jns
jg
cmp
mov
mov
and
cltd
add
loope
adc
push
in
lahf
sti
int
jmp
cmpsl
push
in
repz
lea
lock
sbb
mov
popa
dec
mov
ret
mov
enter
mov
sub
mov
xchg
stc
inc
in
jno
stc
aaa
pop
and
xorb
cmp
cmp
adc
outsb
push
dec
push
cmpsb
in
jle
stos
sbb
test
scas
dec
popa
test
int3
cmpsb
imul
shr
sbb
popa
push
hlt
js
daa
mov
mov
popf
mov
cmp
or
jb
dec
inc
das
lea
jno
and
adc
cmpsl
cmp
fbld
lahf
test
sub
in
push
xor
mov
push
movsb
addl
jecxz
pop
lretw
cltd
adc
out
push
repnz
push
js
pop
push
sbb
inc
jnp
je
push
pop
mov
imul
movsb
or
push
sub
dec
or
aad
sti
cwtl
call
fcompl
lret
adc
and
les
sub
jno
or
lcall
enterw
loopne
and
sbb
lcall
out
test
jle
enter
pusha
iret
imul
stos
cmpsl
gs
sub
clc
aaa
fstl
je
imul
outsb
cmp
push
push
push
es
repz
adcb
or
xorl
testb
rcr
vorpd
insb
outsl
inc
mov
xchg
inc
pusha
xor
pop
cli
xchg
add
gs
cmpsl
test
inc
mov
cwtl
dec
movsb
push
push
pop
add
mov
xor
jp
lock
cld
mov
add
scas
or
pushf
pop
cmc
or
mov
cmc
push
loope
and
xor
cmpb
xor
test
in
imul
inc
pop
mov
add
xchg
scas
pop
jge
pop
gs
stos
shrl
add
push
lock
loop
decl
or
xchg
inc
or
xor
mov
sti
push
push
mov
std
sub
add
jmp
mov
adc
and
cmc
mov
xor
inc
adc
iret
pusha
imul
xchg
idivb
push
bound
sbb
mov
dec
xchg
test
dec
jl
les
pop
xchg
push
les
adc
mov
ljmp
xorb
inc
push
sbb
jbe
ds
addl
push
xor
out
xor
and
cmp
das
cli
cmp
mov
ds
push
and
push
enter
pusha
pushf
jmp
addr16
fisubs
aad
lahf
movsl
in
sbb
cmp
xchg
lret
xchg
jns
jno
jno
rcll
sbb
cmp
jns
xchg
sub
popf
mov
aam
cmp
adc
mov
and
xor
pop
inc
mov
sbb
pop
push
scas
dec
xchg
sbbl
movsb
movsl
loopne
shlb
jmp
mov
fwait
aam
into
mov
dec
subb
sub
and
fisttpll
mov
pop
int3
jo
sbb
fs
inc
decl
dec
xchg
add
push
add
add
mov
daa
test
imul
popa
mov
xor
inc
mov
fdivs
sti
inc
push
test
pusha
jmp
fistps
repnz
sahf
add
xchg
sahf
bound
fstpl
mov
cli
xchg
popf
dec
cmc
add
xchg
sbb
in
xor
pusha
mov
push
cmp
pop
mov
cmp
mov
insb
es
in
sbb
push
cmp
or
xor
xchg
push
sbbl
stos
call
fs
orl
cmp
push
in
push
mov
and
stos
cwtl
adc
fmul
imul
lea
out
sbb
mov
mov
cmp
jp
pop
jp
dec
int
dec
xor
outsb
or
and
scas
out
cmpb
xor
cld
pop
pop
and
mov
pop
and
fisttpl
daa
popa
sub
sub
dec
adc
xorl
inc
jg
sti
out
addr16
pop
call
jno
or
xchg
add
sbb
and
lret
sbb
enter
pop
stos
mov
sub
sbb
mov
shll
mov
int
stos
dec
mov
pop
out
out
imul
sub
adc
pop
xlat
sbb
pop
out
xor
cmpsl
notb
fdivrl
add
aaa
mov
fisttps
mov
clc
in
push
lock
test
in
mov
shll
adc
gs
ret
shl
push
mov
mov
or
insb
inc
lret
dec
sub
insl
inc
ror
jo
sub
decl
mov
xchg
femms
pop
mov
xorl
leave
clc
dec
cmpsl
pop
enter
cld
iret
cmp
ficoms
jne
inc
xor
lds
mov
jge
dec
dec
aaa
pop
or
shlb
jo
mov
sub
xchg
push
cmp
cmpl
inc
sbb
pop
inc
int3
xchg
aas
push
dec
stos
sub
popa
jmp
ror
test
pop
sbb
lret
in
and
ds
out
repnz
in
lods
and
xlat
arpl
ljmp
mov
sub
addr16
mov
or
ret
xchg
fcoms
mov
scas
mov
pusha
sub
loop
ds
sbb
arpl
pop
mov
cmp
js
and
add
inc
aad
mov
out
sbb
adc
mov
mov
loop
dec
data16
call
imul
cmp
ret
in
rolb
scas
and
shlb
sub
xor
push
scas
out
jb
in
sbb
ja
js
in
cmpl
dec
in
jmp
mov
xchg
sbb
pop
mov
sbb
xchg
jg
or
xchg
ja
add
popl
sub
stc
jmp
mov
test
clc
xor
xchg
sbb
sahf
insb
mov
inc
push
jmp
aam
daa
sub
push
jp
push
andb
shll
stc
loopne
cmp
stos
in
sub
xchg
rcrl
xchg
push
push
and
std
call
cmp
inc
in
mov
pop
mov
mov
nopl
shlb
push
push
xor
gs
imul
xor
push
jno
icebp
jo
std
cmp
push
dec
mov
inc
pop
mov
icebp
xor
cmp
lods
ret
xor
je
inc
sbb
mov
movsb
sub
fidivrs
xchg
movsl
fldt
adc
xchg
or
into
jb
and
paddusw
insb
ss
in
mov
out
fwait
cmpl
fistl
sub
js
ficoml
inc
pop
insl
ss
lds
mov
inc
repz
pop
ljmp
jo
xchg
fcompl
mov
pop
mov
mov
xchg
ret
movsl
loop
pop
popa
lret
xlat
frndint
inc
mov
das
and
sub
mov
lret
mov
mov
gs
or
mov
jne
cmp
adc
test
dec
insl
push
xlat
in
cwtl
popa
xor
jp
sub
or
insb
mov
pusha
sbb
stos
ja
in
sahf
mov
icebp
imul
int3
ljmp
enter
sub
mov
fldl
imul
movsb
add
xchg
sub
mov
xchg
jmp
ss
inc
ret
or
rclb
inc
stos
fadd
inc
pop
lcall
pop
mov
shrl
sti
or
pop
popa
sarb
repz
fcomp
sub
mov
mov
outsl
and
cmp
fisubrs
dec
sbb
xchg
cmp
inc
out
add
mov
cmp
xchg
push
cmp
xor
jp
int
sbb
dec
data16
xchg
cmpsl
mov
jmp
rcrl
mov
mov
jae
ss
scas
mov
fistps
sti
pop
dec
rcll
xor
pop
cmp
sub
sub
lret
add
inc
adc
out
add
and
push
cltd
loope
ja
stc
fstpt
adc
out
mov
aaa
call
imul
aad
outsl
aam
in
clc
imul
mov
xchg
jecxz
mov
cltd
repz
cmp
cs
sbb
cmp
mov
popf
data16
test
jle
jg
cli
pop
imul
mov
sahf
out
outsl
outsl
mov
aas
mov
shl
mov
popf
adc
stos
daa
out
sbb
push
incl
aas
es
lods
daa
cld
ljmp
aam
sub
fdivs
xchg
jp
mov
iret
add
cli
dec
ror
dec
mov
mov
add
loopne
dec
fnsave
push
fdivl
adc
dec
mov
xchg
fiadds
mov
lock
ja
push
mov
decl
jb
and
add
fcmovbe
xorb
dec
rcl
sbb
mov
mov
rcll
jns
fistpll
jb
jg
fcmove
xchg
push
outsl
inc
call
xchg
jl
jb
enter
mov
or
push
ret
inc
iret
aas
or
stos
inc
push
out
mov
fildl
loop
mov
xor
pop
jecxz
jecxz
xor
push
imul
ret
sbb
cmp
gs
out
or
sbb
ficoml
mov
test
iret
sbbl
adc
mov
fnstsw
in
nop
je
cmp
jnp
dec
insl
fdivl
sub
scas
fstps
pop
mov
adc
lea
addl
stos
insb
andps
push
cmpsl
adc
dec
dec
xchg
es
gs
cs
inc
sti
cmpsl
testl
mov
cmp
fs
adc
mov
mov
sub
mov
cmp
mov
xchg
pop
inc
ljmp
cmp
xor
dec
and
sub
dec
repz
fsubr
cwtl
push
jbe
lret
ja
jbe
mov
jle
cmp
out
xchg
xchg
inc
sbb
das
push
pop
ss
loopne
test
add
mov
adc
mov
int
cmp
mov
repz
rcl
jns
stos
popa
aad
lcall
mov
test
jo
sub
mov
mov
lock
push
push
dec
xchg
xchg
test
out
in
cmp
or
and
icebp
mov
int3
sahf
or
or
xlat
clc
jb
sahf
add
push
aam
mov
add
out
sar
scas
in
cmc
sub
mov
pop
ljmp
xor
sub
jno
ficoml
or
jnp
flds
jle
inc
ljmp
jge
jbe
lcall
dec
call
jne
dec
call
jp
sti
cmp
push
je
xor
cli
testl
sub
mov
or
pop
add
pop
int
mov
sbb
je
movsl
jnp
es
push
leave
push
sbb
lret
or
and
jnp
jo
adcb
add
cwtl
mov
je
mov
or
frstor
and
ret
decl
sbb
mov
scas
aad
xchg
aam
adc
jns
mov
mov
or
je
jl
sahf
jnp
push
sbb
test
test
adc
out
mov
jnp
lahf
js
out
dec
adc
xor
cli
pushf
imul
nop
pop
sbb
pop
test
cmp
adc
and
jns
jg
push
outsl
ss
add
sbb
incb
rclb
push
aam
and
ss
xor
add
mov
mov
push
or
dec
fs
push
test
cmp
dec
mov
mov
mov
and
sbb
std
mov
sbb
fwait
sti
inc
xchg
sarb
in
push
inc
xchg
and
push
dec
push
sbb
adc
and
shl
cld
scas
push
jb
aas
scas
push
or
pop
les
inc
std
scas
sbb
movsb
shlb
push
jle
shll
sarb
gs
cmpsb
and
inc
repz
in
fistpl
out
sahf
inc
shr
mull
cmp
xor
xor
mov
xchg
fs
pop
adcb
mov
stos
add
xor
mov
mov
mov
adc
pop
or
mov
out
jo
dec
nopl
int3
push
xor
shll
repz
xchg
push
jge,pn
arpl
cmp
jmp
jno
adc
movl
mov
cmpsl
xchg
mov
test
push
js
xchg
ret
mov
scas
mov
add
jnp
test
cmp
mov
xor
movsl
xchg
xlat
stos
dec
and
pop
dec
sti
int
add
lea
js
adc
fldenv
jle
inc
cld
pop
sub
cs
aaa
sub
fdiv
inc
aaa
lea
ja
mov
rcl
cld
int
rcll
fdivl
mov
cmpb
adc
enterw
pop
leave
into
xchg
sbb
sbb
pop
sub
push
out
push
mov
in
sbb
lret
add
pop
ret
popa
pusha
das
cmpsb
movsl
ret
cmpsb
mov
xor
or
popa
clc
xchg
sub
push
in
mov
inc
pop
jbe
inc
daa
rolb
pop
jmp
adc
or
out
in
iret
in
and
adc
into
aas
sub
jmp
pop
es
or
adc
ja
arpl
outsb
sbb
mov
aad
or
hlt
cmp
and
repnz
fstpl
jo
ret
mov
inc
cmpsl
sub
mov
mov
inc
fimull
push
icebp
xchg
repz
cs
pop
xchg
into
int
nop
fnstcw
mov
test
std
xor
out
loopne
shlb
loopne
imulb
scas
add
xlat
add
int
test
sti
lahf
mov
jne
mov
sbb
pop
out
test
rol
idiv
or
jle
fldt
mov
jg
mov
xchg
je
xchg
jo
pop
xor
icebp
mov
aas
sti
cmp
nop
or
xlat
pop
cmp
das
idivb
pop
dec
cmpsb
xchg
pushf
mov
mov
adc
inc
mov
add
testb
daa
inc
jp
out
outsl
pop
mov
out
fiaddl
int
repz
sbb
pusha
add
inc
dec
outsl
out
lcall
jb
roll
xor
popf
movl
xchg
pusha
cmp
stos
test
fistl
cwtl
mov
mov
int3
mov
shlb
sti
push
mov
jbe
in
and
push
pop
fs
pop
xchg
jno
inc
jb
jmp
hlt
mov
push
pusha
mov
and
fs
daa
pop
inc
push
ficoml
inc
ljmp
arpl
cli
inc
out
out
daa
and
xor
addr16
xchg
jnp
add
inc
mov
rorl
or
out
ret
popf
cmp
pop
dec
inc
lret
push
sarl
scas
lods
pushf
or
int
jne
test
dec
enter
aad
mov
push
mov
xchg
push
xchg
mov
mov
sbb
loope
mull
mov
pop
je
cwtl
std
shlb
fildll
and
ret
data16
loope
dec
arpl
js
mov
mov
sti
cmp
dec
sub
outsb
cmp
cvtdq2ps
and
bound
andb
mov
mov
adcb
mov
test
mov
cmpb
adc
inc
cmp
dec
jmp
xchg
cltd
cmp
mov
movsb
push
push
test
mov
jbe
negb
sub
sti
dec
outsl
xchg
adc
jb
rorb
fisubs
enter
lock
mov
fmulp
sub
aas
and
sub
mov
adc
jle
pop
xorl
ficoms
mov
add
xor
push
mov
push
mov
pop
jecxz
shlb
lds
dec
pop
cwtl
cmp
dec
cld
push
adc
mov
xor
adcb
cmp
and
ljmp
add
jns
scas
add
outsl
add
std
sub
jl
popa
insl
lods
popf
jo
add
sub
xor
adc
jg
pop
sbbb
repz
pop
cmp
out
xchg
inc
jno
mov
sub
cld
mov
mov
mov
push
cmp
mov
out
xchg
mov
push
push
mov
mov
cmp
lret
pop
lret
fsubp
sbb
mov
rol
inc
xchg
or
outsl
dec
push
xor
fdivs
fildll
push
test
insb
in
jb
cmp
mov
pop
cmp
aaa
shrb
int3
je
sbb
cmc
ja
out
mov
in
lods
rorb
lock
in
icebp
lret
je
xchg
mov
out
fdiv
test
sub
repz
cmp
pop
ret
ss
push
out
fdivs
cld
cwtl
jg
or
fcmove
xchg
xlat
addr16
adc
inc
jns
ret
inc
rolb
xor
inc
mov
lods
pop
aaa
pop
xor
pop
jp
fsubrl
imul
adc
jno
push
jnp
xlat
xor
add
cmc
sarl
lds
add
mov
sti
push
pushf
dec
push
dec
leave
scas
andb
jmp
mov
insl
sbb
cmp
fbstp
sarb
out
inc
aaa
dec
out
neg
out
insl
push
scas
xchg
in
push
xlat
icebp
sahf
mov
int3
xor
mov
aaa
lods
sub
ljmp
fwait
aam
xor
cmp
or
pop
xor
imul
movsl
xchg
sbb
mov
sbb
mov
mov
push
mov
pop
hlt
mov
or
lahf
in
mov
outsl
xchg
add
lods
int3
fwait
mov
sti
push
lods
imul
sub
pop
out
stos
cmp
pop
sbb
stos
shll
pop
testb
je
dec
in
lretw
xor
and
mov
in
xchg
cwtl
testb
mov
dec
mulb
in
fisubs
and
pushf
pushf
push
aad
add
add
movsb
cltd
inc
pop
push
pop
pushf
mov
sbb
jns
xchg
insb
lcall
adc
and
adc
xor
loopne
pop
daa
mov
mov
mov
cmp
and
dec
adc
scas
fdivr
xchg
imul
add
into
jle
and
push
xchg
cmc
loop
inc
mov
or
popa
imul
inc
dec
flds
dec
out
and
das
imul
add
imul
cmp
dec
es
das
mov
arpl
mov
push
pop
leave
aam
test
das
arpl
xchg
repnz
xchg
xor
xor
cmp
push
add
loopne
loop
insl
in
cltd
insb
and
mov
pop
fwait
mov
mov
in
movsb
xchg
dec
fmuls
icebp
lahf
xchg
in
pop
pop
test
xchg
imul
jmp
cmp
mov
nop
lds
shl
cltd
pop
pop
push
mov
or
sahf
popf
andb
cmp
jle
shlb
sub
std
nop
cwtl
jo
insl
in
call
aaa
mov
mov
sub
mov
fiadds
mov
clc
je
int3
aas
pop
addr16
or
pop
push
loopne
inc
add
aam
pop
std
push
mov
xchg
shrb
loopne
pop
data16
or
mov
mov
cltd
sarb
push
outsl
fcmovb
mov
lret
pop
sbb
dec
stos
cmpsb
jbe
repz
sahf
les
inc
jp
js
scas
das
pop
repz
loopne
addl
stc
adc
cmp
xchg
inc
mov
pop
inc
aaa
aas
push
push
daa
pop
out
out
inc
das
lcall
out
in
push
out
dec
rcll
cmpsb
aad
push
sbb
daa
cwtl
jmp
insl
mov
cmc
jns
cwtl
test
in
sbb
pop
adcl
inc
shll
aaa
fstps
rorl
imul
xor
arpl
shrb
test
push
mov
das
not
call
arpl
lret
ret
in
xor
add
ret
mov
cs
outsl
scas
dec
inc
rorb
pop
cmpsb
or
mov
push
hlt
pop
nop
out
repz
jle
jno
dec
loop
imul
inc
pop
lahf
mov
out
dec
sub
imul
in
mov
cmc
mov
lods
leave
testl
imul
jmp
adc
mov
aad
das
sub
rcl
std
stc
movsl
cltd
adc
subb
push
imul
rclb
int
inc
icebp
ror
loope
das
or
cltd
shl
pop
push
mov
and
or
imul
xor
pop
cmpsl
mov
mov
jae
mov
pop
sub
mov
inc
stc
fmull
in
out
lret
ret
movsb
cmpsb
bound
push
ficompl
xchg
mov
ss
pop
and
lahf
xchg
and
test
xor
mov
rsqrtps
cmpsb
lea
inc
ljmp
aam
inc
sti
je
ds
shrb
sub
popf
pusha
ss
push
jp
xor
push
and
es
mov
ss
sub
inc
push
inc
dec
pop
cmpsl
dec
stos
lock
sub
cwtl
or
lea
enter
in
in
jbe
push
push
loop
aam
icebp
mov
addr16
inc
push
mov
adc
ja
aas
mov
data16
push
out
mov
jl
cmp
mov
scas
mov
pusha
mov
or
aad
push
push
xor
test
int
rolb
ja
cwtl
jl
pop
mov
test
and
notb
mov
jmp
xchg
int3
dec
aad
sub
and
xchg
mov
push
test
leave
xchg
xor
dec
or
push
pop
push
lods
sub
sub
and
xchg
out
leave
fnstcw
mov
aam
ret
fmulp
lret
stc
mov
xor
cmp
aad
movsb
jg
xchg
xchg
sub
fstps
lods
lcall
arpl
push
mov
sub
push
jae
xchg
repz
mov
mov
xor
imul
iret
insb
fld
rcll
mov
enter
cmp
sahf
pop
add
dec
fs
mov
mov
popf
aad
jbe
test
scas
sbb
push
cltd
mov
xor
pop
adc
pusha
and
cmp
cmp
dec
cltd
sub
xchg
xchg
ljmp
and
mov
push
and
jb
int3
sub
mov
xchg
xchg
lret
loop
fsubs
int3
repz
push
xchg
adc
mov
jns
fidivrl
sar
cmp
xchg
shrb
jecxz
jp
leave
cmpsb
mov
xchg
std
daa
test
jle
sub
dec
ss
adcl
cmc
mov
sbb
jae
push
insb
incb
adc
mov
cld
inc
xor
adc
inc
imul
ret
pop
adc
movsl
jl
mov
fldenv
cmpsb
mov
int
push
pushf
loopne
cltd
inc
jp
jns
push
adc
xlat
pop
mov
or
das
mov
in
or
insb
out
mov
xchg
xor
push
sub
sbb
idiv
sbb
sub
jmp
lret
jecxz
loopne
nop
call
sbb
inc
lods
xor
mov
mov
mov
cwtl
clc
loope
xor
jmp
push
inc
int
sub
outsl
popa
sub
adc
loop
daa
mov
push
mov
jno
xchg
flds
xor
jl
jbe
daa
das
sbb
add
pop
mov
xchg
xor
scas
xchg
dec
pop
into
mov
xchg
adcl
imul
xchg
xchg
scas
cmp
dec
imul
pop
jnp
add
cld
fwait
cld
pop
sub
rcrb
arpl
stc
clc
mov
or
adc
mov
lea
fdivl
xchg
add
jae
sub
xlat
out
ljmp
fisubs
subb
and
arpl
bound
adcl
fildl
xor
stos
in
insb
dec
xor
adc
mov
and
fbld
in
inc
mov
xlat
fdivrs
fstp
xlat
inc
stos
mov
fidivs
mov
or
adc
dec
iret
inc
insl
dec
mov
stos
in
scas
mov
mov
pop
lcall
daa
sbbl
push
inc
shlb
xor
cwtl
mov
add
and
scas
loope
lahf
xchg
fs
ret
dec
pop
jp
bound
shlb
arpl
pop
aaa
dec
orb
test
aam
jl
adc
mov
adc
mov
je
sub
dec
hlt
mov
je
push
mov
lea
sti
pop
mov
xchg
inc
flds
fsts
pop
rorl
divps
cwtl
outsb
and
leave
or
xorl
aaa
scas
cli
daa
inc
aam
xchg
inc
cli
or
sub
mov
adc
insl
adc
jnp
shlb
sbb
push
push
sub
data16
pop
pusha
divl
std
clc
push
in
int3
bound
inc
lds
push
xchg
add
xchg
mov
gs
daa
sbb
cmpsb
popf
std
sub
shll
cmp
jecxz
in
fisttpl
ret
adc
roll
inc
mov
repz
movsb
fcoml
stos
sahf
insb
dec
sbb
rorb
cli
arpl
xchg
dec
sbb
sbb
mov
push
jecxz
nop
rcl
xchg
sbb
inc
sbb
sbb
fldcw
aad
adc
outsl
inc
mov
cmpsb
loopne
sbb
addr16
push
mov
out
push
push
pop
push
or
dec
xor
jmp
xor
scas
insl
shl
adc
adc
sbb
bound
mov
subb
mov
sbb
stos
mov
mov
fwait
add
jmp
fidivs
iret
jne
or
mov
lods
lods
push
mov
test
dec
push
dec
mov
jg
cld
pop
jnp
or
sahf
xchg
sbb
inc
inc
mov
addr16
call
out
cmp
lds
outsl
mov
jmp
xchg
ss
fs
pushf
sub
cmp
pop
cli
inc
into
inc
jae
fisubrl
push
ds
push
cli
and
int3
jp
out
stos
pop
js
hlt
stc
ja
jecxz
in
jp
inc
neg
jp
mov
adc
add
jmp
mov
popf
inc
push
jmp
pop
mov
cli
lods
mov
ja
push
sbb
jecxz
jb
repnz
pop
adc
aaa
mov
mov
adc
icebp
xor
rorl
ja
outsl
lret
lock
or
ds
cmp
mov
les
test
and
outsl
insb
xor
lret
xchg
jb
lods
push
lahf
or
jae
jg
add
adc
dec
mov
cwtl
inc
push
es
adc
pushf
mov
adc
add
and
sub
in
and
push
iret
stc
cli
cwtl
xlat
popf
jle
jmp
mov
lods
dec
or
cltd
cmp
cmp
sbb
xchg
in
aaa
inc
xchg
scas
and
enter
mov
ds
loope,pt
mov
test
jp
xchg
mov
or
or
mov
sub
cli
mov
or
dec
addr16
inc
mov
cmpsw
fst
jl
addr16
pop
sbb
dec
imul
inc
cmp
xchg
mov
fisubrs
das
add
lds
lahf
mov
xchg
lock
mov
mov
dec
popf
cltd
mov
test
fwait
or
mov
jmp
mov
mov
loopne
enter
adc
repz
cmc
in
mov
push
jge
sbb
xor
in
aad
roll
test
jnp
or
add
lock
pop
fnstsw
incl
jne
lea
pop
jbe
cmpxchg
stos
push
stos
sbb
scas
xchg
or
js
aad
xorb
fnstcw
ds
out
inc
enter
lock
mov
jmp
push
push
clc
sbb
xor
lret
faddl
fimuls
aaa
or
adc
xchg
push
xor
punpckhbw
fdivrs
imul
add
stc
adcl
adcb
jbe
jns
xor
mov
xlat
bound
movsl
jbe
dec
pop
lret
xor
jecxz
imul
push
sti
xor
or
xor
testl
dec
push
subb
mov
push
jo
je
jae
jg
push
mov
js
pop
xor
test
pop
mov
jo
pop
add
into
cmovae
sbb
cmpsl
sbb
lahf
ss
je
in
jae
int3
xor
xor
pop
sub
scas
jmp
mov
sbb
aas
xchg
inc
add
imul
cmpsl
mov
push
jle
and
cli
or
ret
fs
leave
repnz
loopne
jae
xchg
pop
in
xor
outsl
aaa
mov
popa
ds
ret
jae
adcl
outsl
mov
xchg
scas
jecxz
jbe
add
scas
or
stc
push
pop
inc
shlb
push
jecxz
daa
and
leave
inc
adc
lret
cmc
sbb
in
mov
rorb
ss
subl
jle
jmp
or
sbb
scas
lods
sub
subl
adc
mov
sbb
push
div
dec
mov
out
int3
jne
sbb
in
leave
add
sbb
mov
aad
ret
mov
dec
mov
fldl
xchg
mov
jo
insb
sbb
adcb
add
xchg
subl
sub
outsl
cmp
or
sub
popf
test
pop
pop
mov
xchg
loopne
add
xor
push
movl
cs
les
xor
or
leave
sbb
xchg
add
sub
gs
sub
dec
fnsave
mov
fmul
push
xchg
dec
sub
pusha
jecxz
sub
aaa
sarb
push
jb
sahf
push
fisubs
push
mov
cs
cmp
jns
xor
and
mov
sub
push
outsb
mov
mov
stos
xchg
xchg
pop
int
cmp
xchg
rep
sbb
add
out
mov
sarb
pop
cwtl
shl
xchg
cmpsl
std
mov
into
sbb
xchg
out
jne
xor
jns
dec
or
or
fcomip
ja
flds
lahf
add
dec
inc
sub
ret
lahf
test
and
push
pop
mov
pop
push
jl
lahf
into
add
xlat
mov
out
dec
pusha
sbb
pop
cmpsl
and
add
loope
repz
push
std
std
push
lock
movsl
fisubrl
adc
cmp
mov
sub
pop
pop
cltd
jb
mov
cltd
fwait
xchg
daa
and
mov
lods
xor
popfw
stos
inc
or
jl
in
ss
inc
cmc
pusha
and
aad
stc
xchg
add
mov
repz
cmpsb
jnp
add
or
mov
cmp
mov
call
pop
adc
or
cmpsb
xlat
mov
pop
cmpsl
adc
mov
dec
cmpsl
push
lods
lret
mov
mov
or
inc
adc
std
test
pop
loop
sbb
cmp
pop
movsb
fnstcw
xchg
bswap
lock
xor
scas
pop
xchg
std
and
mov
scas
dec
sbb
rclb
sub
mov
out
stc
sbb
dec
mov
jmp
std
adcw
dec
pop
or
andb
fcomi
and
insl
pop
push
ja
aas
mov
jae
cmp
mov
xor
xlat
or
das
aad
andb
push
jnp
in
lock
fs
sti
and
lret
inc
pusha
dec
push
int
sahf
mov
rcr
or
mov
and
out
js
or
inc
dec
xchg
push
sub
cwtl
gs
inc
mov
arpl
das
dec
and
and
cmp
shll
sbb
int
xchg
add
mov
jge
lods
cmp
jne
adc
sub
arpl
cmp
mov
fistpl
lcall
int
popa
cmp
sub
adc
aaa
pop
pushl
addl
xchg
add
test
scas
js
in
and
xchg
test
imull
mov
in
popf
lahf
test
aam
mov
mov
jo
cmp
cmp
into
bound
sbb
fisttpl
or
mov
test
mov
enter
movsl
inc
xlat
sub
dec
mov
or
addr16
mov
scas
mov
pop
fcomp
hlt
pop
push
mov
xor
pop
ds
jae
push
fisttpl
imul
cmp
mov
test
mov
dec
test
jmp
cld
sarb
cld
mov
pop
push
repz
push
pop
pushf
dec
sbb
sub
or
jb
add
add
insb
sahf
xchg
sub
mov
add
dec
jl
incl
arpl
jo
or
fisubrs
fdivl
gs
xor
dec
mov
arpl
push
jbe
das
xor
sbb
cs
rcrl
repz
pop
arpl
jge
iret
add
or
lods
push
and
inc
jne
movsl
mov
mov
dec
fnstenv
shll
mov
ret
cmp
add
and
sub
fcomps
xchg
and
mov
and
std
data16
pop
aam
push
data16
cmp
or
ljmp
imul
or
cmp
and
out
jle
jmp
or
fs
mov
insl
cltd
aad
mov
add
push
inc
pop
and
xchg
es
fnstcw
dec
xchg
mov
fildl
mov
jne
shlb
push
test
fwait
ret
pop
push
daa
inc
aad
vmread
lods
ret
jb
outsl
push
push
movsb
movsl
pop
out
mov
nop
out
or
push
dec
mov
or
sub
inc
shrb
iretw
addr16
lcall
repz
push
fistpl
jne
gs
iret
mov
xchg
mov
repnz
das
rcll
ds
outsl
aad
filds
sbb
nop
push
and
or
loope
mov
inc
mov
jg
push
iret
pusha
dec
and
cli
push
sbb
mov
vcvttss2si
xor
or
fdivr
mov
test
int
repnz
addb
pop
cmpsl
cmc
ret
sub
fcmovbe
add
xchg
pop
pop
and
stc
shl
adc
inc
imul
adc
pusha
orl
lahf
mov
cmp
pop
push
xchg
push
mov
pop
rorl
and
mov
loopne
popa
xor
or
pop
lock
icebp
mov
pop
test
out
dec
sbb
pop
sub
ror
adcl
ret
cmc
add
sti
enter
repz
mov
pop
or
xchg
sar
jo
aad
prefetch
and
pop
rcrl
std
les
mov
xor
cmp
mov
mov
lea
cmp
fistps
push
push
cmp
dec
push
test
ret
pop
jge
sub
jns
adc
mov
pop
sub
orb
jb
ret
push
lds
mov
fldenv
repnz
xor
add
sbb
add
or
xchg
stc
icebp
jb
push
xor
or
das
add
push
xor
sub
stos
outsb
out
pop
push
fwait
jge
mov
movsb
pop
das
shrd
das
mov
sbb
lea
or
loop
aaa
scas
push
insl
leave
int
imul
bound
mov
lods
xor
jp
jg
movsl
lods
xchg
dec
aaa
inc
stc
das
cmc
imul
jle
wrmsr
push
push
lds
adc
push
xor
lock
mov
pop
popa
test
sbb
sbb
sub
push
repnz
cltd
pop
out
stos
or
push
dec
mov
repz
rep
sbb
dec
aas
mov
fs
xlat
sbbl
cmp
cmpsl
les
enter
aam
and
mov
aaa
aam
xchg
cwtl
outsb
insl
std
in
cmp
xchg
data16
out
inc
gs
int
std
aas
xor
lock
shrl
push
lea
cwtl
aad
outsb
or
test
es
pushf
test
out
dec
and
lods
add
jno
xor
mov
xchg
gs
inc
leave
push
or
sub
push
popa
mov
icebp
add
scas
ret
push
dec
int3
push
jns
movzwl
cmp
cmp
into
pusha
cmp
mov
cmp
popf
lods
inc
inc
and
imul
adc
and
mov
jbe
mov
xchg
sub
sbb
push
push
fwait
loopne
jp
fmul
push
mov
push
rcll
jge
int
out
ficomps
lret
idivl
and
push
insl
out
cltd
cwtl
xor
xor
or
imul
inc
stos
jbe
fcmovne
add
sahf
sbb
mov
fcmovbe
cld
or
inc
mov
cmp
bound
or
mov
gs
lds
dec
mov
push
sbb
xlat
xor
stos
xchg
scas
or
scas
jo
lds
add
dec
outsb
push
shl
rolb
dec
mov
cwtl
out
popa
lahf
push
mulb
jbe
ja
mov
cltd
testb
adc
mov
jg
sub
pop
mov
daa
sbb
shr
inc
cmpl
push
push
ficomps
mov
mov
clc
xchg
in
and
dec
lods
pop
push
lea
mov
xor
andl
dec
pop
aas
fsubl
sbb
out
das
mov
out
dec
out
shr
push
jp
jmp
les
dec
or
outsl
ss
sarb
jp
xlat
xchg
pop
arpl
jmp
in
mov
aas
add
add
cmp
jae
pop
scas
test
mov
push
inc
cmp
lock
pop
lret
fnsave
test
ds
mov
mov
jae
mov
jl
test
rclb
in
jle
push
or
jecxz
sbb
inc
jg
sbb
xchg
mov
sbb
es
repz
mov
dec
fcmovnu
cmp
fadds
mov
nop
push
adcl
pusha
or
dec
daa
inc
out
cmp
js
xor
clc
xor
mov
adc
pop
loopne
add
sub
mov
or
add
addr16
sub
adc
and
push
sbb
out
jecxz
mov
jae
pop
jns
mov
cltd
and
std
push
in
popf
xlat
mov
inc
or
sub
out
and
mov
fwait
int3
add
push
int3
dec
and
dec
scas
push
ljmp
mov
sub
jnp
mov
xchg
pop
jp
repz
mov
mov
imulb
pop
data16
pushl
ja
push
fwait
cmpsb
mov
pop
scas
pop
das
inc
add
stc
cmp
stos
cmpb
cld
jbe
push
xor
jge
dec
xchg
loopne
jns
push
popa
and
xchg
ret
cmc
push
pop
cmp
cld
adcb
lret
cwtl
cmc
mov
arpl
xor
pushf
add
xchg
leave
arpl
jno
out
xorb
adc
js
pop
mov
and
ljmp
loop
shrl
pop
fsubrp
adc
aaa
cmc
cmc
outsl
push
inc
sub
int
jmp
add
dec
sbb
pop
jb
mov
mov
loop
xchg
sbb
pop
aad
je
aad
iret
mov
jecxz
adc
add
xor
cli
dec
negb
sbb
sub
stos
icebp
xor
into
jg
fistl
xor
test
out
insl
inc
pop
iret
cli
inc
pushf
jmp
popf
int
sub
test
shlb
sbb
and
fmul
fdivr
or
outsb
pop
cmp
xchg
adc
fwait
and
mov
xchg
pop
jge
enter
rolb
push
xchg
mov
inc
cld
and
dec
subl
rol
fsubl
mov
xchg
mov
jg
pop
jae
je
aaa
popf
push
xlat
ja
cmp
dec
lea
pop
mov
or
sbb
and
mov
loope
int
adc
bound
sub
cmp
mov
loop
sub
xor
scas
push
xor
sbbl
dec
inc
idiv
lods
dec
push
sbb
sahf
jmp
cmp
call
push
cltd
pusha
mov
push
ror
psrld
xlat
test
push
fstl
jbe
aas
jno
or
add
xchg
sub
mov
jg
fadd
mov
jge
cmpsl
xchg
in
shl
fstpt
pop
in
sbbl
es
call
loope
mov
inc
adc
mov
cmp
sbb
addr16
dec
xorl
add
fs
call
imul
lret
jnp
mov
mov
inc
xchg
sub
lds
sbb
repz
ja
jno
jle
and
fbstp
rcll
lahf
in
and
pop
outsb
adc
dec
das
inc
fcompl
cs
icebp
jno
fcmovnbe
xchg
xchg
adc
test
and
leave
jne
rorb
cmp
pop
mov
xchg
mov
dec
hlt
and
sbb
mov
fsubrl
or
jp
dec
test
mov
add
mov
xlat
lods
out
in
mov
push
sub
dec
shll
cltd
nop
jl
loop
mov
repnz
enter
iret
call
out
pop
push
test
adc
mov
stc
jae
cmp
or
mov
sbb
addr16
pop
fimuls
dec
test
mov
or
lret
sub
mov
mov
repz
out
cmp
ds
push
xor
mov
mov
sti
inc
lret
or
cmp
cmp
les
aam
repz
mov
in
mov
sub
sbbl
leave
and
push
and
ret
lret
jle
clc
bound
jl
int
fdivrl
push
insl
jno
inc
xchg
nop
notl
orps
test
jne
insb
data16
mov
in
enter
cmp
mov
or
dec
dec
inc
xor
dec
pop
push
mov
xor
mov
mov
xor
sti
aaa
push
mov
enter
and
in
idivl
pop
pop
dec
xchg
insb
jb
cltd
test
scas
sbbb
or
aad
in
cmp
xchg
movsl
cmpsl
fs
adc
ja
pop
loope
sub
or
mov
fisubs
shlb
hlt
xchg
xchg
inc
xchg
pop
popl
aas
and
mov
int
lahf
sarl
mov
fwait
add
ret
xor
cmp
jle
sbb
mov
sub
mov
sub
ret
xchg
jecxz
xor
jmp
imul
mov
pop
pop
stos
das
bound
bound
jge
arpl
push
mov
fidivrl
ficoml
inc
stos
xchg
pop
jl
pop
iret
dec
mov
loopne
nop
pop
pop
lcall
pop
push
dec
xor
iret
lea
xchg
sub
and
mov
xchg
cltd
jne
jns
xor
das
adc
xchg
ljmp
jbe
test
jmp
mov
lret
dec
pcmpeqd
sbb
ja
jbe
jmp
xchg
push
pop
dec
xlat
inc
xor
mov
int
adc
shrb
push
mov
pop
stos
xor
scas
mov
cmp
fldt
or
pop
test
xchg
divl
rcrb
mov
jnp
dec
pop
mov
lret
call
pop
jle
push
add
jmp
adc
sarb
incb
jne
cmp
sahf
nop
insb
or
ret
loop
andb
mov
out
popa
sbb
es
xlat
dec
imul
mov
cmpsb
or
inc
ret
outsl
outsb
outsl
or
push
test
ljmp
leave
mov
in
stc
in
les
dec
mov
jg
push
jp
adc
add
push
cmp
scas
into
jns
dec
into
xlat
xchg
stos
pop
fmul
dec
mov
movsl
adc
in
mov
xchg
in
pop
or
cmpl
fimull
ret
sbb
idivl
cmc
add
sub
mov
ret
ds
loope
cmp
xchg
subb
adc
cli
jg
mov
mov
push
dec
jbe
leave
decb
test
and
pop
dec
pusha
dec
repz
jp
out
inc
lods
sbb
rol
dec
xor
push
fimuls
cmc
stos
or
scas
rolb
push
mov
xchg
push
js
fildll
pop
mov
rdtsc
fadds
repnz
jnp
xchg
lcall
mov
adc
pop
and
repz
and
mov
mov
mov
inc
cmp
mov
test
arpl
jno
arpl
fstpt
subl
insb
in
jmp
scas
rcll
mov
lea
addr16
into
xor
mov
lods
ja
mov
ljmp
sbb
repz
pop
hlt
jne
stc
lods
repz
pop
aad
xchg
loop
cwtl
mov
jbe
test
roll
gs
jae
in
stos
dec
pop
rcll
fdiv
mov
mov
test
or
fwait
pop
and
and
lret
loopne
push
pop
inc
and
das
sbb
sub
imull
and
pop
xlat
outsl
mov
stos
mov
daa
call
and
mov
orl
adcb
and
dec
pop
inc
enter
mov
in
ret
je
lds
pop
outsb
movsl
add
je
inc
push
insb
push
sbb
iret
mov
ret
jl
inc
adc
pop
xor
mov
fsubrs
cltd
cwtl
or
cltd
fcomps
pop
mov
fstl
shrl
and
sub
adc
loope
xor
push
mov
daa
popf
mov
add
and
fwait
stc
sub
add
pop
into
lea
xchg
fstps
mov
ds
cmpsb
fisubrl
psrad
lahf
shrl
jge
jl
pop
push
gs
pushf
jb
lea
lret
sub
sub
mov
xchg
xor
mov
pop
jb
cld
sub
lahf
je
or
fdivr
push
mov
sbb
out
mov
add
push
dec
push
subl
adc
leave
jl
cmp
data16
dec
xor
scas
aaa
leave
dec
push
int
or
add
and
add
popf
inc
xor
pop
jo
jl
jne
fwait
jecxz
adcb
push
filds
jb
sbb
cmovle
pop
hlt
loopne
mov
push
call
pop
scas
rcrl
dec
pop
inc
fmull
enter
push
std
fcoml
lods
xor
outsl
or
mov
xor
sahf
lret
push
xor
pop
in
mov
inc
sbb
stos
in
lahf
shll
cltd
xlat
jne
add
and
dec
in
sbbl
adc
repnz
or
dec
rcrl
pop
pusha
std
push
or
sti
mov
ljmp
jbe
xchg
insl
add
add
adc
ret
add
mov
xchg
insl
and
pop
xchg
push
test
push
rorb
or
mov
lods
mov
pop
stc
xchg
cltd
adc
mov
xor
mov
and
adc
aad
into
mov
ds
jo
pop
jecxz
jno
lcall
adc
adc
arpl
ss
and
ss
pop
cmp
cmpsb
fcmovb
call
int
or
pushf
movsl
xor
xchg
bsr
pop
sub
dec
into
pop
pop
inc
xchg
into
aas
inc
cmpsl
notb
jl
adc
sbb
cmpsl
cmp
xor
mov
push
sub
aaa
lea
mov
shr
add
ret
push
cmp
lods
xor
add
add
push
mov
add
js
push
in
cli
in
pop
cmp
adc
lret
gs
cmpsl
sub
popf
jne
lods
sub
test
les
enter
stc
fstp
loopne
jb
out
inc
cmp
stos
push
mov
xor
popa
gs
mov
jns
mov
sub
jns
in
loopne
and
je
sub
push
or
aam
lock
mov
dec
cmpsl
xlat
pop
and
jecxz
jo
and
int3
test
test
cmp
mov
xor
iret
inc
push
ss
outsb
icebp
pusha
je
mov
add
adc
loop
sarb
cmp
pop
sub
sbb
clc
leave
sbb
jne
inc
shl
in
sub
mov
xchg
sti
hlt
sbb
mov
je
push
or
das
push
lds
xchg
push
frstor
pop
inc
xor
out
out
inc
adc
push
mov
loop
xor
push
shll
popf
sub
mov
push
repz
test
jne
jmp
out
ss
addr16
lods
cmp
dec
int3
push
dec
stos
dec
and
and
push
xchg
sub
push
mov
xchg
jp
in
lahf
sbb
inc
cmp
sti
mov
popa
xlat
sbb
mov
fimuls
fcoms
adc
cmc
decl
or
cmp
lods
cmp
cmp
lea
add
ja
jns
in
push
and
in
add
addr16
add
add
xor
sbb
ds
call
in
inc
add
into
inc
lret
xchg
lahf
add
mov
fbstp
pop
xchg
sbb
dec
lret
fisttpll
mov
daa
out
aas
xor
lock
jo
adc
pop
mov
mov
ljmp
scas
xor
popa
dec
xlat
scas
out
and
dec
xorl
mov
and
or
and
inc
or
mov
mov
nop
movsl
clc
add
out
sbb
mov
inc
xor
lock
inc
clc
std
or
cwtl
pop
movsb
push
push
cwtl
jo
jl
scas
xchg
cmpsb
xor
push
jg
and
sub
cmp
cmp
jecxz
xchg
jae
out
inc
pop
imul
mov
jo
loopne
xor
test
jmp
lds
sbb
lcall
and
std
cld
mov
mov
enter
rclb
xlat
and
lods
int
subl
negb
add
aam
out
popa
fistl
js
jg
hlt
dec
cmp
jnp
cld
or
jns
test
cmpsb
mov
push
es
or
shl
bts
adc
xlat
lcall
outsb
push
inc
jb
outsb
sbb
push
int
or
sbb
adc
sub
jle
sub
dec
dec
jns
jbe
lret
sbb
js
adc
daa
pop
add
sar
pop
dec
pop
fldenv
dec
stc
xchg
adc
dec
loope
jmp
jno
pop
and
mov
js
rcll
sahf
cwtl
jp
add
dec
idivb
add
mov
andl
aad
bound
adc
shr
cmp
and
sbb
cmp
and
enter
loope
fwait
dec
nop
lds
mov
mov
and
adc
add
arpl
jge
xchg
iret
fnsave
popf
mov
sbb
mov
repnz
outsl
lods
out
lods
inc
js
sbb
mov
pop
repnz
jbe
or
jmp
mov
aad
xchg
xchg
mov
int
push
out
mov
and
mov
dec
in
adc
loopne
push
sbb
test
stc
movsb
or
clc
sub
sub
test
cmpsl
popl
dec
mov
into
add
or
push
sbb
jbe
jns
andb
jmp
cmpsb
das
test
xlat
sti
mov
cmc
jae
lds
push
push
cld
mov
testl
mov
scas
add
stos
ja
into
dec
push
mov
std
call
inc
sbb
xor
aas
pop
ret
mov
sbb
in
xor
sbb
cmp
push
jnp
mov
in
jmp
xor
dec
xchg
ljmp
ja
sbb
imul
ret
xor
mov
mov
es
push
loop
xor
adc
push
sub
arpl
dec
mov
or
inc
les
rclb
mov
or
mov
shll
rolb
pop
adc
xchg
jnp
sbb
sub
lahf
push
push
sbb
scas
cmp
out
push
dec
outsl
fsubrs
and
xchg
movl
ret
cli
fwait
mov
and
je
inc
cs
inc
push
lods
das
mov
inc
js
rcl
xchg
imul
es
pop
out
js
test
xlat
cmp
out
pusha
fsub
roll
das
les
jl
cmc
lds
in
push
xchg
sub
pop
mov
testl
je
aad
pop
lcall
pop
test
subl
mov
in
or
fwait
and
fidivs
stos
testb
ljmp
inc
daa
pop
cmp
jmp
and
add
or
pop
jg
mov
fldt
imul
lret
jge
sbb
inc
jnp
lcall
lods
adc
adc
test
sub
in
mov
add
xorb
push
lea
mov
repnz
fld
mov
psubw
addr16
enterw
sarl
sbb
dec
mov
mov
roll
mov
lea
and
add
enter
in
out
xor
insl
pop
in
fisubrl
repz
mov
imul
in
aad
nop
cli
jg
call
push
rorl
std
leave
sti
adc
jnp
jl
sub
loope
ljmp
fnstsw
adc
addr16
ljmp
sub
mov
pop
std
add
fistl
pusha
out
rorb
test
adc
ret
and
repz
sbb
jo
lahf
jle
flds
subb
lock
outsl
xor
lcall
in
pop
sbb
xlat
enter
insl
in
aas
inc
sbb
mov
lahf
dec
push
arpl
mov
mov
insb
mov
mov
xchg
imulb
mov
adc
adc
xor
push
lret
push
scas
xor
imul
jns
popa
push
sbb
mov
and
in
or
pop
ret
jle
in
sbb
scas
mov
inc
jp
mov
and
push
fstl
insl
mov
cmp
jno
cmp
inc
mov
cmpsl
mov
sahf
icebp
outsl
or
adc
and
and
insb
rorl
cmpsl
cmpsb
add
fldl
cmp
mov
imul
adc
xchg
dec
xor
xchg
insb
adc
aas
pop
cwtl
pop
push
iret
xchg
sbb
push
pop
mov
cmp
mov
mov
out
hlt
lcall
lahf
inc
sub
mov
and
repnz
xchg
xchg
test
inc
pusha
int
sub
sbb
dec
and
sbb
mov
mov
rcll
pop
xchg
xchg
xchg
sbbb
add
dec
mov
and
adc
jl
cs
pushf
cmpb
dec
mov
jno
outsl
push
xor
jp
test
xlat
sub
ret
in
ljmp
push
jnp
fwait
cmc
xchg
pop
cli
es
push
pop
cmp
out
mov
call
icebp
and
dec
stc
pop
cmpb
jb
ja
jmp
in
mov
cmpsl
icebp
dec
pop
clc
mov
inc
stos
pop
lock
xchg
xor
iret
push
ja
mov
fnstenv
cmc
stos
dec
sub
bound
daa
imul
mov
fstl
aad
stos
mov
mov
ret
push
pop
xchg
jmp
mov
ja
lds
sbb
out
xchg
rorl
mov
lods
jnp
stos
sbb
ret
aaa
repz
add
xor
sahf
mov
fldl
pop
fadds
sbb
mov
add
sub
cmpsb
or
dec
in
jbe
mov
cltd
les
dec
aaa
jl
mov
xchg
dec
popa
or
jb
out
mov
lock
cmp
in
int
js
dec
mov
mov
inc
cmp
shll
or
lcall
cwtl
cmp
jecxz
xchg
je
pop
adc
hlt
mov
lock
cmpsb
das
xchg
addl
and
repnz
lea
cmp
jmp
in
pop
out
pop
push
lret
std
cltd
jno
inc
pop
in
rcrb
push
clc
sbb
int
adc
xlat
movsl
dec
sbb
stc
cld
int
std
into
push
xor
add
pop
aad
arpl
xchg
push
or
xor
adc
loope
pop
repnz
dec
push
sbb
gs
xor
fldenv
jns
bound
rol
sti
jne
rorl
dec
dec
notb
ret
push
mov
or
mov
mov
push
cmpsl
mov
adc
idivl
lds
sbb
jge
dec
cwtl
xchg
pop
sub
fistl
out
in
xor
xchg
cmp
leave
push
loope
adc
cltd
insb
cwtl
mov
xor
rorl
dec
arpl
mov
push
sar
lret
mov
outsl
repnz
outsb
call
dec
xor
fs
test
jmp
adc
add
pusha
sbb
mov
jae
rorl
pop
pusha
fimuls
je
mov
faddp
sub
mov
sti
inc
push
xor
addr16
repnz
sarl
gs
pushf
pop
stos
push
xchg
lret
in
dec
imul
pop
fwait
arpl
inc
ret
adc
lcall
adc
jno
and
xor
inc
imul
insl
out
xor
fimuls
stc
addr16
mov
sbb
icebp
popf
mov
sti
hlt
mov
pcmpgtw
add
adc
fbstp
std
push
adc
mov
mov
loope
or
adc
in
dec
test
push
mov
scas
sub
ret
sahf
push
leave
popa
test
aaa
sbb
fwait
push
sub
enter
jo
mov
pushf
push
xchg
xchg
test
dec
mov
mov
out
jmp
mov
mov
pop
or
mov
add
fimuls
pop
xlat
out
fldenv
cmp
jne
xor
sti
jmp
push
pop
dec
mov
addl
pop
ds
add
dec
aaa
dec
loope
and
pop
fdiv
cmc
decb
mov
nop
addr16
nop
lahf
push
rorl
mov
mov
sti
push
or
and
mov
mov
in
stos
xor
pop
mov
xchg
mov
enter
ss
repnz
or
push
std
in
adc
cmp
call
dec
cmp
pop
mov
je
out
mov
cmc
js
call
repz
or
iret
push
cmp
mov
enter
pop
mov
add
ds
pop
js
jne
arpl
hlt
jb
hlt
adc
xchg
cmp
inc
ret
push
das
sahf
cltd
jge
lods
pop
ss
pop
lods
push
push
jae
repnz
insb
lea
lods
jmp
jae
jns
xor
adc
xchg
outsl
lods
sbb
mov
jne
or
mov
pushf
ret
sub
out
out
loop
sbb
bound
pop
cli
xor
ret
insl
test
dec
jns
sub
outsl
sbb
push
xchg
pop
jne
cmp
icebp
addb
jg
das
jo
inc
rclb
je
lcall
ret
jmp
add
or
insl
xchg
cltd
pop
dec
push
rcl
fisttps
dec
push
push
rep
popf
cmp
icebp
in
push
popa
int
loope
inc
dec
jg
dec
mov
cld
mov
outsl
or
mov
dec
sbbl
test
pop
adc
mov
jno
or
sti
xchg
out
sub
jecxz
jne
ret
leave
pop
cmpb
jg
lock
jo
adc
je
in
loope
sbb
loope
sahf
fnstcw
pop
pop
jno
out
add
lea
aaa
mov
test
push
or
push
pop
push
sub
jne
rcrb
cwtl
dec
jle
stc
out
add
dec
push
adc
negl
xorl
in
pop
in
ds
jae
xchg
cwtl
daa
rcrb
test
xor
out
mov
sahf
adc
dec
xor
les
sbb
ljmp
xor
and
daa
xor
push
sub
xchg
sub
sbb
pushw
mov
int
mov
repnz
xchg
sbb
loope
insl
lea
in
testb
jns
lret
inc
rol
pop
iret
icebp
lret
mov
mov
js
fwait
lock
rol
mov
fstps
and
or
aas
sbb
test
sti
mov
sbb
lods
push
test
mov
push
testb
cs
outsb
push
lret
es
xchg
repz
rorl
mov
pop
inc
loopne
push
and
outsb
mov
pop
push
clc
in
inc
fld
ret
sbb
dec
pop
cmpsl
inc
fs
cmpsl
sub
lods
es
gs
std
les
mov
dec
cmp
pop
jmp
test
inc
ds
pop
pop
test
arpl
lea
mov
aam
or
add
cwtl
imul
mov
add
insb
mov
dec
repz
loope
clc
mov
call
or
mov
add
mov
rcrl
pop
stc
dec
mov
mov
push
ljmp
sub
cmp
xor
sbb
xchg
lock
lahf
shlb
loop
sbb
mov
jle
mov
test
xor
mov
gs
iret
dec
out
divl
mov
cmovns
xchg
loopne
enter
or
shlb
insb
sti
test
lcall
dec
jg
outsb
xchg
fcoms
push
pusha
fcmovne
sub
cmp
mov
outsl
rclb
mov
jl
fldenv
mov
jecxz
add
std
jbe
hlt
lods
pop
add
cmp
pusha
popf
mov
push
outsb
ret
push
xor
out
jns
cmpsb
jmp
imul
std
stos
insl
sub
insb
cmp
push
xchg
outsl
or
lcall
aad
xor
test
cmp
push
cltd
stos
pop
adc
std
or
jo
jmp
push
xchg
sbb
mov
lock
or
cmp
jl
sbb
dec
test
or
pop
sbb
ficoml
imul
push
adc
mov
retw
or
dec
xchg
jmp
pop
shll
daa
sub
add
pop
call
mov
ret
push
jp
outsb
andl
ljmp
xchg
data16
mov
dec
aas
rorb
mov
clc
test
inc
leave
xchg
push
test
jle
pop
adc
into
mov
inc
es
jge
sbb
sub
xorl
insb
sarl
push
push
nop
pushf
push
stc
mov
int3
dec
and
es
stos
push
dec
cltd
es
xchg
xchg
cmp
lds
push
int3
mov
js
adc
repz
dec
out
cmp
stos
je
leave
test
insl
sub
stc
mov
daa
jo
mov
xor
mov
das
test
mov
or
mov
jns
inc
adc
jp
xchg
xor
cld
in
inc
sub
std
inc
pop
repz
or
lds
aas
movsl
je
lock
mov
sbbb
xlat
cmp
inc
jb
or
sub
shl
xchg
cmp
jle
xor
call
dec
jne
iret
cmp
jne
insl
inc
or
shrb
inc
movsb
sahf
mov
dec
jne
pop
sti
shl
mov
mov
sbb
mov
shlb
jno
mov
subl
inc
sbb
cmc
fisubrl
rep
cltd
cmp
subl
fmull
push
sbb
lds
jecxz
scas
push
mov
sub
push
scas
push
pop
repz
dec
out
fsubl
jg
xor
lcall
sub
pop
out
push
push
sub
enter
rcll
int
fwait
and
mov
cmp
sub
mov
pop
and
push
rol
push
mov
cmp
dec
sub
inc
clc
sub
lcall
adc
mov
pop
adc
xchg
nop
add
xor
popf
xlat
mov
iret
cmpsb
add
and
or
clc
mov
daa
sbb
dec
xor
jbe
in
add
cmp
jle
mov
mov
sbb
dec
inc
sub
push
push
pop
insb
dec
dec
jae
addl
nop
adc
sub
outsb
lock
inc
rorb
xor
loopne
sbb
lds
fadds
outsl
stos
dec
jns
sub
ss
lods
xor
cld
or
cmp
push
aas
push
jne
mov
loopne
and
cltd
cmp
pusha
mov
sbb
push
incl
lcall
cmp
into
xchg
mov
ds
mov
xchg
pop
dec
mov
or
push
jg
ret
sub
sub
mov
cmp
fistl
inc
adc
outsl
ret
adc
mov
test
repnz
faddl
pop
xchg
stos
test
sahf
aas
mov
sti
pop
lock
add
idivb
inc
rcrl
lret
int
xchg
or
add
jno
into
or
into
pop
xchg
mov
inc
push
mov
xor
stos
out
cs
inc
and
xchg
jmp
cmp
add
testb
push
rclb
xorb
iret
test
xchg
xchg
mov
jl
sbb
enter
push
mov
mov
sbb
hlt
orl
and
and
push
jecxz
jg
mov
jge
fiadds
add
sub
cmp
es
mov
icebp
mov
idiv
fbstp
jbe
scas
jns
mov
push
nop
pop
js
mov
push
repnz
add
fcoml
std
mov
sbb
jmp
test
sbb
iret
cmp
adc
jge
fisubs
mov
aam
mov
xchg
cwtd
jbe
test
push
std
pop
arpl
mov
adc
pop
cmc
addb
std
das
add
sub
mov
push
push
pushf
roll
mov
and
mov
sub
jp
adc
xlat
mov
adc
xor
adc
xchg
lds
outsl
inc
and
inc
xchg
dec
sbb
sete
negl
int3
cmp
cli
icebp
cmp
inc
dec
int3
fs
imul
jle
jl
fisttps
inc
dec
jmp
dec
call
enter
mov
xor
xor
lahf
dec
add
jp
mov
push
sub
add
movsb
icebp
repnz
jg
sub
xchg
inc
insl
add
imul
bound
das
mov
jns
pop
and
scas
ja
loopne
xchg
inc
and
loop
inc
push
scas
divl
adc
imul
jmp
cli
call
inc
mov
lret
mov
jno
push
insb
sbb
sbb
jge
ljmp
ret
push
out
mull
fwait
decb
loop
pop
aas
xchg
mov
std
dec
xchg
jle
cmp
push
aaa
sahf
jle
push
out
fs
lock
sub
leave
sub
lret
xchg
addb
xchg
js
mov
jl
pusha
fiadds
daa
push
sahf
pop
rcr
call
loop
movsb
jle
adc
jmp
mov
mov
mov
leave
cmp
adc
mull
jb
mov
inc
xor
add
dec
leave
mov
fnsave
mov
sub
add
stc
adc
scas
imul
es
and
aaa
sub
movsb
push
mov
ss
ret
pop
insl
fs
jno
shl
leave
or
sbb
les
fisubl
add
call
leave
outsl
pop
lods
negl
into
xor
cmp
jmp
orb
xor
mov
mov
push
ret
inc
jge
or
or
fadds
out
lret
test
dec
and
pop
jl
in
sub
mov
loopne
xor
mov
fsubl
enter
and
fistpl
sbb
icebp
ret
add
mov
fcomps
pusha
sbb
push
pusha
icebp
pop
fldcw
loop
inc
test
adc
mov
jle
dec
cmp
cmp
sbb
add
mov
inc
jle
push
imul
clc
inc
arpl
out
inc
bound
pushf
movsl
inc
pop
cmp
fdiv
ljmp
stos
imul
lret
arpl
pop
mov
sbb
sbb
jge
mov
sub
pop
les
in
mov
push
pop
inc
fildll
or
adc
sub
mov
cmpsl
sbb
pusha
pop
cs
out
jne,pt
rclb
imul
loope
mov
sti
push
mov
je
dec
xchg
xor
pop
sub
loop
call
loopne
mov
push
sub
adcb
int
popf
movsb
mov
fstps
in
pop
jns
adc
dec
push
dec
pop
xchg
mov
mov
es
pop
jp
nop
sbb
pop
shlb
das
cli
test
popa
ret
fisubl
mov
mov
sub
push
lcall
scas
imul
and
popa
xor
fiadds
fistpll
out
notb
test
mov
arpl
movl
lock
xor
inc
cmpsb
outsb
mov
insb
mov
jecxz
sub
fdivrl
mov
out
cli
xchg
dec
sbb
push
lcall
fstl
imul
dec
pop
iret
repz
or
push
jl
mov
pop
subl
adc
sbbb
andb
mov
mov
data16
jge
xchg
lret
mov
or
sahf
shrb
ljmp
test
in
push
enter
mov
xchg
xchg
ss
mov
pop
sbb
out
ja
test
mov
xor
iret
inc
sti
cmp
pushf
ja
addb
add
imul
ss
nop
add
pop
test
loopne
int
and
les
mov
xchg
aam
imull
stos
ror
loop
push
lcall
xor
mov
in
ror
or
aas
xchg
xchg
fdivrs
hlt
xchg
cwtl
pop
add
loop
iret
inc
ljmp
aas
xchg
mov
jmp
das
aad
sbb
mov
lods
das
mov
insl
jne
les
inc
adc
xor
lods
lods
stos
data16
xchg
test
jnp
cmp
jmp
dec
jns
push
xor
xchg
xchg
jae
imul
xchg
insl
mov
dec
add
cmc
inc
fbld
mov
add
orb
sub
pop
lahf
aaa
stos
mov
inc
sub
inc
mov
pop
pop
mov
sbb
or
icebp
out
pop
xchg
lahf
pop
jecxz
insb
mov
hlt
repnz
mov
ficompl
mov
fwait
mov
je
adc
ret
cmp
cmp
rolb
shlb
shll
pop
sahf
inc
idiv
aad
inc
xlat
jno
cmp
adc
xlat
testb
mov
push
xchg
aad
gs
fs
push
popa
xor
rcr
pop
xor
pop
sub
testl
adc
xchg
repnz
jmp
loope
inc
in
sub
pop
inc
fwait
ja
rolb
cmc
lods
outsl
push
in
sbb
mov
push
and
and
out
mov
inc
xor
inc
sbb
sub
sarl
lds
inc
shrb
jge
pusha
je
das
cmp
mov
cld
mov
ret
sbb
cmc
aad
add
push
add
xor
inc
adc
jp
xlat
test
je
ljmp
es
lds
pop
ljmp
sub
ja
out
out
imul
pop
cld
mov
bound
xchg
in
imul
push
mov
cmp
rcrl
sbb
xor
jg
ror
fstpl
cli
jg
mov
in
mov
mov
cmp
pop
push
mov
inc
adc
popa
xor
mov
mov
sarl
push
ss
jmp
add
mov
and
sarl
mov
and
xlat
shr
dec
pushf
dec
cld
out
lds
mov
push
je
in
xchg
out
sbb
stos
std
sbb
inc
and
int
adc
mov
scas
mov
jge
shrb
in
dec
pop
ss
or
jmp
test
std
sub
cmpsb
and
mov
sbb
inc
adc
test
cmp
add
sti
add
test
lret
clc
or
sub
into
sub
pusha
mov
insl
sub
sti
mov
xor
pop
fisubrs
ljmp
sahf
inc
push
stos
pushl
rorb
fstl
xchg
xor
imul
xor
push
xchg
je
arpl
out
insl
inc
test
mov
mov
loop
push
lds
cmp
jge
push
and
sbb
and
inc
dec
repz
dec
shrl
stos
in
sbb
addr16
fsubrl
testl
cwtl
pop
push
fsubrl
out
out
pop
mov
jge
pushl
mov
mov
clc
sbbb
lods
push
cwtl
repnz
add
xchg
jmp
pop
push
jns
mov
call
and
ret
pop
stos
ja
add
iret
mov
mov
mov
das
mov
ds
test
xchg
test
sahf
test
mov
jl
xchg
pop
sbb
mov
mul
aad
inc
cmc
xchg
sub
lods
pop
adc
dec
mov
or
sub
jb
jb
repz
mov
repz
mov
sub
add
pcmpgtb
mov
arpl
jne
or
xor
xchg
adc
and
cmp
dec
jno
pushf
loopne
mov
push
gs
int3
daa
mov
push
adc
dec
adc
aas
xlat
adc
les
ljmp
cmpsb
jecxz
jecxz
cmpl
or
push
add
pop
cmp
lds
ja
xchg
loop
jo
and
push
push
and
add
xchg
int
mov
pop
addl
std
sahf
push
inc
aas
out
imul
outsb
or
mov
shll
and
dec
push
sbb
xchg
jns
adc
push
lahf
xchg
aad
in
loope
icebp
iret
and
inc
ss
rorb
mov
test
push
jg
pop
cmc
cltd
arpl
mov
inc
sub
stos
adc
adc
int3
pop
fcoml
iret
out
aad
add
pop
push
xor
test
sbbl
rcll
sub
sbb
inc
scas
pop
fmuls
cld
adc
aaa
popf
addb
cmp
std
call
mov
dec
push
mov
push
push
mov
pop
lcall
push
adc
and
fistps
cwtl
out
lods
imul
in
mov
addr16
in
mov
aam
cmp
sahf
dec
rcrb
xchg
ret
cld
lret
dec
std
lcall
jne
hlt
test
dec
xchg
fidivrs
push
push
jecxz
rcrl
push
fs
mov
push
pop
push
test
sub
jecxz
pop
rcl
mov
ficompl
hlt
and
int
inc
es
out
jae
xchg
cs
or
xchg
push
add
call
cmp
mov
fiadds
push
lea
push
in
mov
stos
cmp
xor
cmp
jne
or
adc
leave
pop
sti
mov
push
mov
xor
fidivl
adc
push
dec
stos
fisttps
cmc
xor
adc
push
jmp
adc
mov
dec
mov
cltd
sbb
mull
insb
int
pop
loope
das
test
sub
mov
mov
mov
int3
cmp
and
insl
add
xchg
sbb
fptan
adc
in
mov
cmc
pop
repnz
outsb
lds
pop
fninit
or
filds
imul
adc
jo
jnp
push
mov
cmp
jno
jns
mov
mov
adc
outsb
push
js
jne
add
inc
inc
push
mov
mov
lds
pop
pop
mov
mov
pop
scas
xchg
mov
rdtsc
aas
or
in
cmp
ljmp
sbb
fdivl
xor
rorl
pop
in
adc
and
xchg
push
push
rclb
int3
lods
and
repz
data16
jo
mov
stc
negb
scas
cltd
add
stos
aas
div
daa
test
jo
jle
dec
loop
mov
push
push
adc
mov
insl
or
inc
jmp
movb
push
cwtl
inc
xchg
cmp
test
shlb
and
cmp
test
and
test
aad
add
test
mov
fstl
xchg
mov
popf
xlat
add
dec
pop
dec
push
lret
jbe
cmpsb
push
sbb
xchg
lahf
cmp
mov
xchg
lock
aas
sbb
sub
xchg
or
sti
lock
test
xchg
aam
dec
rcl
mov
mov
lea
mov
sbb
adc
lahf
jmp
cli
lea
and
test
daa
sub
xchg
test
and
sub
fnsave
cmpxchg
jne
outsl
mov
and
insl
xor
fwait
xchg
repz
jg
mov
add
add
push
std
mov
add
scas
cld
frstor
inc
outsb
cmpsb
outsl
or
ja
jg
ret
xchg
push
push
or
scas
inc
cmp
dec
jmp
push
in
popa
ljmp
sahf
pop
imul
mov
jnp
in
out
repz
nop
aas
mov
ljmp
adcl
jp
push
movsb
in
mov
lret
xor
hlt
xor
push
gs
adc
es
and
mov
push
loopne
stos
hlt
imul
mov
xchg
xchg
jb
push
ds
or
sbb
mov
in
std
sub
push
pop
xchg
cmp
jge
bound
jp
ja
cmc
mov
cmpsl
xor
xchg
mov
pop
cmp
mov
popl
mov
loopne
fadds
lds
push
xchg
ja
pop
xor
pop
jmp
and
gs
mov
adc
mov
dec
xchg
scas
out
mov
popl
idiv
mov
pop
repz
insb
mov
cs
pop
fsts
xlat
daa
adc
test
mov
ret
add
xchg
andl
jno
repz
mov
lret
lods
pop
imul
and
cmp
adc
pop
xor
pop
mov
cmpb
xchg
lea
or
call
pop
cmp
push
push
cltd
sub
jns
xchg
ss
aas
loopne
aaa
psubw
inc
xchg
data16
fnstcw
cmp
inc
add
lods
std
popa
jns
pop
nop
adc
repz
cmpsl
cwtl
add
hlt
dec
mov
xor
clc
pusha
jl
push
aas
cmp
jge
out
sbb
sti
jns
pop
adc
mov
mov
hlt
ret
mov
lds
jbe
testb
xorl
das
outsb
mov
cltd
cmpsl
loopne
ret
out
lea
mov
ret
mov
daa
mov
jl
mov
push
xchg
jbe
push
inc
xchg
jge
fiaddl
bound
add
mov
mov
mov
sub
xor
xchg
pop
scas
das
cs
push
jae
jl
jnp
mov
inc
das
xchg
sub
fld
lret
pop
call
ret
adc
loop
dec
xor
push
cmp
iret
jmp
rol
nop
lahf
add
pop
rcll
bound
dec
testb
das
adc
js
dec
inc
fbld
mov
rol
pop
dec
or
lret
fcmove
push
mov
test
imul
rcrl
call
cli
add
add
xor
jno
push
push
sub
xor
addr16
sub
pop
jb
rclb
jle
in
ljmp
ror
add
addl
push
or
dec
std
outsb
out
mov
add
enter
cmp
je
hlt
mov
sti
decb
es
sbb
nop
xor
lcall
outsb
cmp
imul
ljmp
lock
push
adc
loope
pushf
mov
int
pop
arpl
movsb
sbb
jecxz
inc
pop
xchg
int3
pop
lret
sub
push
or
in
cltd
das
mov
jo
and
xchg
insb
mov
or
or
xlat
shrb
movsl
movsl
or
sti
jle
push
adc
out
sbbl
in
insb
inc
dec
repnz
add
cmovge
addr16
bound
xchg
xchg
push
lods
mov
xor
and
shrl
sub
add
add
inc
and
popa
dec
dec
insb
jle
ret
and
mov
jb
fsubrs
std
cmp
mov
xchg
addl
jle
jmp
dec
bnd
dec
loop
aas
or
xchg
daa
mov
out
aas
mov
int
mov
repz
jbe
shrl
or
add
stos
fistpll
push
jge
adc
ret
xor
adc
jmp
shrl
iret
xor
pop
or
xchg
out
xchg
sub
outsl
fwait
rol
or
pop
jmp
inc
scas
imul
out
add
or
xchg
adc
jle
lods
imul
mov
pop
or
xor
add
and
sub
push
xchg
stos
nop
sti
mov
inc
out
dec
inc
jo
jl
jo
pop
xchg
cmpsl
pop
sahf
mov
scas
cltd
js
xor
adcl
sub
mov
cmp
or
cmp
es
lret
outsl
add
mov
aaa
mov
cmp
push
stos
call
arpl
outsb
loop
in
ret
jbe
in
loopne
gs
or
dec
sbb
ja
in
mov
mov
xchg
ljmp
pop
sahf
jne
xchg
inc
xchg
cli
fwait
dec
jno
mov
test
daa
jns
sub
xor
fwait
adc
iret
xchg
call
mov
ja
inc
sbb
xlat
push
in
and
pop
jae
decb
dec
lahf
pop
mov
fcomi
lock
mov
sahf
push
test
inc
in
cld
add
lods
cmp
push
test
loop
push
mov
sahf
shl
sarb
enter
flds
aam
in
xchg
enter
xchg
mov
outsl
mov
std
push
or
xchg
lock
jno
cld
rcll
jge
data16
andl
sarl
addl
dec
push
hlt
mov
cli
shll
add
rorl
push
inc
or
mov
pop
stc
xchg
cmp
out
pop
jmp
pop
call
cmp
packssdw
sub
mov
adc
lret
test
adc
xchg
and
inc
test
bound
cwtl
test
cmp
sbb
ret
or
xor
xorl
push
enter
push
repz
dec
pop
cmp
jns
mov
popf
jo
push
icebp
xlat
xchg
and
rcrb
ret
pushl
jg
mov
test
inc
xchg
repz
dec
jmp
int
out
test
mov
scas
clc
or
push
sbb
sub
mov
js
bound
cmp
push
and
stos
call
cld
pop
pop
cmp
das
dec
pop
xchg
jbe
mov
jae
repnz
ret
adc
jnp
cmp
add
mov
dec
pop
jne
pop
jecxz
fldenv
and
loopne
xor
movsb
jo
mov
xor
sbbb
leave
sub
rep
inc
lret
loop
add
sbb
shrb
loop
pop
pop
mov
xchg
ret
dec
jg
jns
sub
add
rorl
cld
popf
mov
mov
test
add
mov
nop
and
and
jo
push
and
shl
dec
push
push
cmp
jecxz
dec
sti
lahf
add
cwtl
jmp
enter
push
cld
adc
xchg
ret
mov
pushf
rorl
add
push
movsl
scas
pop
add
test
nop
mov
fcmovnbe
rcl
cmp
mov
sub
xchg
or
xchg
pop
int
xorl
add
in
sub
xor
and
ffree
jns
mov
ljmp
mov
orb
mov
mov
dec
insl
ds
dec
pop
cltd
cld
cmp
cli
out
xchg
adc
popa
jg
fs
xchg
push
cmp
test
xchg
push
mov
cmp
repnz
sub
sub
or
idivl
pop
sub
jnp
inc
jnp
lret
loop
cmp
jnp
test
into
push
ss
sub
fwait
int3
inc
hlt
out
jo,pt
cld
lock
rcrb
sarl
mov
movsl
adcl
xor
daa
push
jmp
shlb
push
pop
shll
enter
push
xor
adc
add
jmp
jle
dec
nop
hlt
ficoms
pop
add
or
test
gs
mov
scas
xor
lods
aam
cltd
pop
cmp
in
fcmovu
cltd
dec
and
adc
xchg
push
test
outsb
imul
lahf
jmp
pop
repz
outsl
sub
cld
mov
push
and
add
and
jne
push
fisubl
mov
xchg
jo
shl
mov
xor
imul
out
pop
lcall
int3
cmc
fdivrs
leave
push
pop
add
pusha
fs
xor
icebp
push
inc
cmp
xchg
dec
sbb
mov
out
sbb
stos
push
les
jl
pop
call
lods
scas
and
dec
arpl
push
pushf
mov
fmul
push
jecxz
mov
fwait
imul
or
jno
andl
enter
mov
insb
fcmovu
aaa
xor
lret
sahf
mov
cmp
leave
cmp
dec
and
test
mov
popa
imul
mov
sub
jle
mov
inc
sahf
add
cmp
add
push
pop
loope,pn
push
mov
dec
inc
repnz
fwait
mov
sbb
cmp
push
sbb
lds
mov
push
xchg
jnp
or
push
pop
ret
pop
mov
push
movsb
push
jne
cmp
bound
cli
out
insl
pop
scas
stc
pop
pop
sub
add
addl
inc
jecxz
or
test
push
movsl
mov
cwtl
jmp
fistl
sub
pusha
mov
popf
jb
pop
adc
xlat
pushf
jb
add
shll
adc
stos
outsl
jecxz
or
xchg
iret
mov
jns
orl
sub
cwtl
sub
mov
lahf
sub
idivl
ficoms
inc
fisttps
jae
mov
add
sbb
mov
in
repnz
lcall
into
push
xchg
mov
xchg
js
das
dec
dec
adc
jo
int
dec
fs
and
jbe
cwtl
mov
repz
mov
fcmovb
add
loopne
pusha
insb
jnp
ss
ljmp
xchg
bound
in
daa
in
pop
loopne
xlat
jl
into
jge
imul
sbbb
mov
dec
imul
pusha
into
fwait
dec
sarb
or
mov
mov
repnz
push
cmc
lret
push
push
popa
mov
dec
and
insl
sub
jo
push
rolb
faddl
fadds
loop
lock
inc
sbb
outsb
leave
jo
ljmp
movsb
push
call
xchg
pop
call
scas
nop
add
inc
push
pop
int3
stc
aaa
loope
rolb
push
cmp
jne
and
sub
jl
nop
sahf
movsl
stos
enter
fcomip
lds
out
push
push
sbb
insl
sbb
mov
test
les
imul
aam
test
inc
ss
arpl
scas
and
mov
aad
rorb
cmc
shl
sub
fisubrs
test
or
inc
lret
loopne
jl
lods
lea
pop
or
mov
push
repz
pop
xlat
ret
jp
dec
jge
sbbl
outsb
test
outsb
mov
pop
xchg
test
xchg
aad
pop
sti
movzbl
jecxz
test
lret
mov
dec
enter
push
std
outsl
icebp
in
aad
aas
mov
or
test
lcall
pop
and
cmpsb
dec
dec
data16
cmpsb
or
inc
gs
in
fwait
shll
pop
inc
iret
test
stc
test
add
sbb
xchg
pop
stos
pop
ficoms
insb
sbb
std
lock
daa
stos
mov
nop
cmp
call
adc
pop
sub
data16
add
sub
sub
jmp
lahf
outsb
sbb
sbb
scas
sbbl
pop
leave
or
aaa
xchg
pop
jg
js
jno
lock
popa
xor
and
addl
fdivs
xor
ljmp
sbb
xchg
pop
leave
add
xchg
pop
les
or
mov
js
in
in
sub
cwtl
clc
iret
in
sub
outsl
mov
icebp
test
sti
sahf
call
xchg
ret
int
jbe
repz
pop
xchg
and
enter
xchg
push
push
mov
dec
cmp
repnz
mov
cmp
and
dec
in
xchg
jns
cmc
aas
shrl
pop
jne
mov
adcl
outsb
nop
xlat
add
pop
xchg
es
lret
andb
outsb
into
fsubp
sarb
dec
push
or
repnz
push
lock
cmp
mov
mov
adc
arpl
xor
rclb
scas
stos
xchg
or
in
add
sbb
xchg
in
push
sbb
jne
dec
jmp
leave
std
popf
mov
and
fadds
push
xlat
std
add
rcll
iret
out
out
push
pop
test
std
cmpsl
push
pop
and
aaa
mov
adc
jb
inc
jno
or
mov
pop
out
add
mov
imulb
xor
das
cmpsl
pop
jg
sub
loop
mov
push
cmp
ss
idiv
dec
jo
inc
pop
outsl
dec
pop
cmp
cmp
jne
cmp
sbb
mov
mov
add
jbe
add
xchg
xchg
cmpl
cmpsb
arpl
jmp
mov
jbe
sarl
in
mov
jbe
fimuls
sbb
js
dec
xchg
mov
dec
dec
xor
adc
dec
sbb
mov
jo
lret
xor
adc
mov
and
lods
xchg
inc
cmp
jg
pop
loopne
xchg
xor
sbb
cmp
scas
icebp
add
pop
push
jns
pusha
punpckhdq
mov
movsl
or
xchg
cwtl
fwait
cmp
xchg
scas
je
mov
popa
dec
cmp
sahf
add
mov
enter
rcrl
jg
repnz
jb
cmp
xlat
push
add
ret
iret
and
xchg
add
or
jbe
shrb
pushf
dec
mov
cmc
mov
js
repnz
adc
inc
bnd
rcrl
fcmovnu
mov
push
sbb
mov
je
jo
adc
out
outsl
or
jns
testl
xor
dec
push
xchg
scas
insb
mov
cmp
out
aam
add
cmpl
mov
sbb
scas
fsubrs
mov
mov
adc
jb
cmp
or
fdivp
xchg
imul
adc
imul
sti
cmpsb
mov
sub
bound
ret
inc
jae
in
adc
mov
divl
fs
js
lea
push
fistl
ja
popa
adc
cmp
in
mov
adc
icebp
or
cmp
es
mov
fs
stos
addb
sbb
mov
sub
xchg
cmc
cmp
js
cltd
xor
in
sub
and
mov
adc
pop
add
mov
push
jo
push
in
cmp
pop
cmpsl
lea
jae
cld
cltd
loope
test
xor
enter
add
aad
jg
aaa
clc
xor
pop
jb
adc
sub
inc
fs
add
or
fadd
mov
addr16
mov
lods
xchg
testb
lods
or
bound
fildl
inc
lahf
mov
out
sub
jae
or
std
ret
out
jle
jno
sub
add
jne
push
call
or
mov
xchg
inc
lahf
aas
cmp
data16
mov
pop
mov
cwtl
fbld
js
into
mov
sahf
cmpsl
add
dec
pop
dec
popf
xchg
sub
data16
pop
js
sub
loopne
jo
pop
push
cmp
and
mov
imul
les
fstpl
pop
and
cld
loopne
fldt
ss
and
test
mov
out
insb
pop
pop
sbb
mov
into
ja
mov
movsb
push
push
cmp
push
into
test
xchg
cmpb
jg
fildll
outsb
add
mov
cli
fmull
pushf
mov
outsb
ret
dec
add
outsl
cltd
sbb
adc
dec
subb
lea
shl
faddl
add
dec
adc
rclb
cltd
aas
lock
sub
adc
fcoms
pop
push
pop
fisttpll
cmpsb
dec
jae
stc
adc
xor
stc
mov
xchg
mov
xor
pusha
stc
mov
push
push
xchg
xchg
out
fdivl
ret
pop
inc
jg
and
icebp
testb
xlat
or
imul
pop
adc
push
aas
mov
imul
scas
push
inc
xchg
adc
push
adc
addb
and
xor
sub
push
xchg
mov
add
jne
push
scas
mov
jns
jecxz
push
pop
lea
decb
int
add
mov
xor
mov
iret
arpl
out
insb
dec
repz
arpl
adc
jbe
ja
mov
pop
pop
push
push
icebp
pop
stos
xchg
dec
mov
cmp
inc
in
loop
rorl
xchg
inc
cmp
push
fstps
fbld
out
js
sub
mov
xlat
pop
call
jb
popa
jg
or
sub
and
xlat
out
out
jmp
jge
mov
call
xchg
shrb
jmp
flds
rorl
mov
adc
xchg
push
jle
movb
into
inc
or
push
xchg
and
cmpsl
dec
sbb
int
lahf
mov
mov
jb
insb
push
pop
scas
and
mov
xor
std
aad
rol
xor
cli
push
pop
mov
lods
nop
stos
jle
out
orb
aas
push
inc
pusha
mov
xor
notl
data16
outsl
inc
mov
mov
dec
or
xchg
xchg
jge
push
xchg
popa
mov
jg
or
jg
lcall
lock
imul
popf
pop
cmp
inc
enter
mov
repz
in
jae
mov
out
insl
mov
test
das
xchg
subl
call
sub
adc
xor
sti
faddl
in
pop
lods
push
push
rcrb
push
xor
jnp
cmp
and
push
dec
in
push
test
and
push
cmc
popa
bound
jns
pop
aas
push
pop
je
out
into
push
add
es
pushl
lret
pop
ret
dec
sbb
sbb
push
lds
in
pop
mov
or
fisubrs
mov
jnp
inc
std
jp
aaa
loopne
mov
lea
cmp
fcomp
out
fidivrl
mov
sub
out
imul
pop
lock
xchg
mov
mov
add
imul
xchg
jle
test
stos
cmp
jnp
lret
rclb
mov
sbb
jb
dec
test
or
inc
jnp
inc
in
decl
xchg
jnp
mov
addr16
xor
sar
outsb
scas
lcall
hlt
fwait
mov
insb
sbb
fisttps
xchg
xchg
imul
xchg
xor
mov
mov
inc
movsl
xchg
loopne
test
pop
xor
pop
inc
arpl
cmp
in
stc
out
mov
or
aaa
xlat
enter
aam
jno
and
or
stos
dec
insb
add
lds
push
dec
mov
sarb
sbb
xor
test
arpl
ror
adcl
inc
mov
cmc
cmp
movsb
add
sub
jae
jecxz
inc
jns
lcall
out
mov
sub
pop
pop
jmp
aas
test
es
pop
sub
dec
adc
sahf
mov
cwtl
je
adc
mov
into
cld
mov
sarb
notb
cmpsl
movsl
cltd
daa
int
fstp
xchg
add
pop
push
and
pcmpgtb
inc
mov
dec
pop
add
data16
cmp
adc
mov
data16
sub
fidivrl
outsb
cmpsb
adc
dec
div
in
sub
dec
nop
pop
sub
dec
cmp
arpl
push
aad
sbb
insl
fstpt
jge
push
dec
sub
outsb
loopne
rorb
jle
or
rcrl
enter
add
adc
dec
test
out
shlb
ja
rol
add
addr16
push
les
jp
and
adc
mov
mov
addb
cmp
mov
in
or
pop
ret
cmpsb
aam
cmp
js
adc
mull
cld
cmp
push
mov
neg
push
sub
enter
mov
data16
jne
or
test
jmp
jp
clc
adc
xchg
fldl
jno
push
hlt
enterw
mov
pop
inc
pop
xor
pop
pop
test
cwtl
adc
inc
and
push
push
shll
push
nop
outsw
dec
call
mov
mov
scas
jl
jle
dec
iret
mov
loop
les
xchg
add
adc
jl
add
dec
test
lds
in
jbe
insb
mov
bound
push
int3
xchg
in
pop
cmp
dec
mov
sub
mov
or
sbb
lcall
xchg
aaa
jmp
adc
xlat
xchg
outsl
repnz
sbb
lods
fistpl
leave
xchg
pop
orb
adc
arpl
in
in
inc
xor
mov
divl
cli
ja
std
add
fists
mov
stos
in
test
cltd
lret
pop
ss
sbb
sbb
stos
xchg
mov
fistpl
sub
mov
fwait
or
out
scas
rcrb
push
fidivrs
inc
cmp
aad
mov
aas
lret
loope
pop
pop
adc
test
adc
xchg
lret
aas
push
xor
and
xor
mov
adc
aaa
bound
popa
mov
scas
or
xchg
pop
outsb
add
sbb
shr
arpl
shll
inc
sub
inc
mov
jl
inc
icebp
call
repnz
xor
jmp
xchg
in
std
add
mov
sbb
ds
inc
xchg
test
popf
jge
adc
sti
dec
add
adc
lahf
push
push
out
mov
scas
outsb
int
jno
add
shll
lcall
lret
cmp
jl
dec
and
pop
std
sub
and
push
xor
jns
in
sub
sahf
mov
scas
mov
out
imul
fidivrl
mov
insl
dec
add
fstps
outsl
jne
mov
or
das
call
push
cli
sbb
jg
int
lret
out
adc
jge
push
and
or
mov
or
jno
popa
mov
xchg
rcrl
cltd
inc
mov
inc
in
outsb
lahf
mov
sahf
push
cmp
fucom
sub
in
push
mov
cmc
cli
sub
sub
lret
jg
out
pop
xchg
rcr
xor
adc
pop
xchg
jae
ljmp
ja
pop
arpl
mov
scas
sbb
test
add
std
pop
mov
je
cmp
cmp
dec
push
add
stos
shrb
dec
pushf
in
and
sti
jno
movsb
lods
cmc
clc
xorl
dec
add
jnp
sub
cmc
sub
addr16
je
jo
repnz
out
lret
testb
sbb
jnp
push
mov
comiss
pop
push
mov
pop
mov
cmpb
scas
ljmp
mov
jecxz
jnp
pop
fldt
dec
rcrb
pop
or
test
dec
sbb
fsubl
jae
dec
ljmp
stos
lahf
bound
mov
out
sub
lea
sub
jecxz
push
mov
sub
adc
ds
lret
outsl
cs
jnp
mov
mov
hlt
jmp
push
movsl
lea
xchg
push
dec
sub
inc
fistps
pop
and
and
or
dec
mov
xchg
xorb
popa
add
icebp
xor
xchg
lret
xor
dec
fimull
lods
pushf
push
stos
pop
jo
adc
fldl
sub
pop
data16
icebp
inc
int
fadd
inc
push
pop
and
stos
ja
addr16
pop
mov
add
lret
aaa
movsb
inc
inc
mov
mov
cmpsb
jbe
leave
fmuls
test
pop
or
sti
or
mov
aas
cmpsb
fnclex
insb
xor
xchg
dec
inc
stos
and
roll
repz
popa
das
shlb
mov
mov
lock
push
pop
mov
sub
pop
mov
subl
std
clc
mov
mov
mov
add
int3
pop
cmpsb
rcll
dec
mov
jmp
rclb
cmpsl
int3
movsl
ljmp
jecxz
push
pusha
cld
xor
mov
or
pop
push
inc
cmpb
lds
sbb
out
xchg
popa
pop
dec
sub
loopne
fwait
mov
and
loope
cld
fcoms
mov
adc
outsb
mov
ss
rorl
in
cmp
mov
or
pop
fdivrs
sub
push
arpl
insl
xor
inc
sub
in
ds
jae
js
mov
inc
adc
stos
mov
sahf
and
in
mov
outsl
inc
mov
jae
rcrl
cwtl
push
sahf
daa
jne
xchg
scas
je
lret
mov
stos
mov
loop
pop
add
das
jnp
xor
mov
mov
in
or
shrl
out
xchg
xor
lods
pop
cld
mov
outsl
cmp
cwtl
subl
enter
xor
jle
jmp
inc
mov
hlt
mov
sbb
das
in
push
pop
pop
add
cwtl
cmp
ljmp
icebp
iret
fdivp
cli
jae
fcmovbe
imul
stc
mov
nop
mov
mov
ja
jge
push
xor
push
mov
mov
pop
push
dec
scas
int
in
loope
inc
jns
pop
cmp
fisttpll
push
cmpsl
in
minps
hlt
inc
mov
popf
fdivs
push
fsubs
inc
movsl
out
out
lahf
mov
out
or
icebp
mov
enter
js
aam
repz
or
push
int
cmp
mov
or
cmp
mov
inc
cmpl
push
adcb
jle
and
sbb
int3
sub
add
mov
nop
out
jbe
imul
adcl
out
mov
stc
push
push
call
lock
fwait
pop
mov
mov
loopne
cmpsb
pop
mov
mov
arpl
int3
fnsave
rcrl
xor
loop
iret
dec
jmp
or
adc
push
ljmp
jg
mov
mov
lock
or
pushf
inc
inc
mov
dec
imul
cmpsb
adc
mov
enter
sar
lock
push
push
ds
push
push
xchg
bound
and
mov
es
mov
loopne
xor
pop
arpl
jae
lahf
sti
das
pushf
mov
adc
jle
pop
movsl
sahf
int
rolb
neg
shll
xor
out
rcr
movsb
mov
popa
dec
insl
mull
inc
test
aas
xchg
and
scas
inc
imul
inc
sti
mov
fisubrl
scas
sub
push
mov
mov
out
aas
mov
or
mov
stos
out
enter
xchg
sbb
jg
and
ja
fnstenv
out
lret
dec
scas
cmp
sbb
or
pcmpeqd
jg
sub
call
pop
adc
jmp
mov
inc
lahf
sbb
movsb
adc
pop
clc
mov
xor
repz
popa
xchg
cmpsl
push
bound
shlb
jb
push
iret
andl
popa
push
nop
and
aas
int3
add
nop
cmp
pop
push
fwait
dec
enter
test
ljmp
mov
pusha
stos
std
enter
sbb
add
push
xchg
aas
or
mov
push
mov
test
and
mov
adcb
hlt
adc
sub
cmc
or
or
loopne
movsb
xor
loope
lahf
lods
outsb
xchg
insl
lock
add
cwtl
int3
or
in
jnp
adc
call
cs
lock
push
ss
hlt
sub
mov
pop
add
pop
cmc
sbb
into
mov
add
push
jmp
mov
add
out
clc
je
ret
or
stos
out
pop
pushl
and
daa
push
lret
imul
outsb
mov
and
push
ret
addr16
icebp
stos
pop
hlt
rorl
rorl
add
dec
inc
iret
sub
outsl
or
shlb
pop
clc
jp
enter
arpl
inc
fwait
mov
mov
fistpl
loope
sbb
pusha
in
loope
movsb
mov
xorl
insl
clc
cmp
jae
add
movsl
or
in
int
shr
sub
outsb
or
lret
andb
pusha
sub
jle
jge
dec
fists
les
mov
jle
lret
add
lock
insl
pop
lods
cmpl
pushf
icebp
gs
scas
rcl
fxch
in
inc
jae
cmpsb
ljmp
sub
pop
sbb
xlat
cmpsb
cld
stos
jne
jo
push
jmp
push
aam
and
addr16
fdivl
repz
xchg
push
repnz
mov
addr16
rcll
cmpsl
test
sbb
cmpsb
ror
cmp
shll
pop
sub
xor
push
stc
lods
pop
cmp
adc
sbb
shrl
inc
xor
sub
sahf
inc
xchg
mov
push
test
and
cmp
outsl
jecxz
cmp
mov
fisttpl
ror
pop
pop
mov
leave
push
inc
outsl
adc
mov
imul
out
mov
xor
and
rorb
shll
clc
shll
pusha
insl
int3
or
mov
test
add
push
int
or
xorl
xchg
xor
sbb
sbb
push
das
add
sbb
inc
orb
aad
dec
sub
arpl
lahf
xchg
cmp
push
and
lds
bound
ja
mov
sub
repnz
movsl
mov
es
aas
jle
or
pusha
mov
in
lds
jnp
ds
out
cmpsb
aam
cmpsb
cmp
repz
nop
imul
add
filds
adc
pop
push
fnstenv
fcomps
push
sub
xchg
out
cmp
sarl
mov
and
fldenv
pop
mov
mov
in
push
test
sub
dec
movsb
outsl
shlb
sbb
jo
in
std
cltd
pop
mov
pop
shrl
ret
cwtl
add
mov
and
lea
mov
outsl
mov
pop
popa
lret
or
mov
dec
hlt
ret
adc
xchg
sub
icebp
mov
js
enter
sub
xabort
ss
dec
inc
rorb
in
inc
test
outsb
jg
ret
addb
pop
daa
aad
adc
jns
adc
push
mov
mov
nop
stos
ret
mov
mov
jp
jno
jns
mov
popf
repz
arpl
fcmovnb
mov
movsb
shll
int
cmp
test
add
lods
mov
pop
jl
jne
push
call
dec
jge
xor
adc
push
enter
gs
sub
lahf
ds
add
jl
cmp
xchg
stc
mov
mov
cmp
jne
mov
lret
sub
adc
daa
bound
adc
adc
mov
dec
int
in
adc
cmp
push
cmp
aas
mov
sbb
adc
rol
ja
xor
adc
fdiv
lea
mov
loope
out
xor
cmpsl
mov
test
jnp
or
sub
cli
pop
sarl
mov
push
xor
adc
sbb
cmc
imul
sti
les
cmc
mov
out
push
push
adc
stc
adc
push
imul
clc
cmpb
popa
dec
push
or
mov
adc
ds
push
aam
movsl
sub
out
loope
hlt
fs
cmp
or
test
push
dec
test
loopne
lds
mov
out
clc
lahf
sub
dec
jge
push
inc
outsl
jg
leave
lds
mov
mov
dec
cld
cwtl
xor
mov
rorb
mov
xor
sub
ffree
xor
cmp
movsl
aas
test
and
into
lock
fbld
out
movb
arpl
aas
pop
pop
in
iret
inc
mov
iret
pop
loopne
lea
outsl
inc
aam
fcoml
xchg
push
pusha
dec
add
jae
movsb
mov
mov
imul
adc
sub
cmp
sbbl
jmp
jb
test
scas
xor
shll
mov
or
mov
push
mov
repz
dec
out
xchg
mov
sub
inc
fwait
jg
xchg
gs
insb
popf
ret
pop
push
nop
insb
test
gs
stos
jle
lret
mov
mov
xchg
pop
xor
jge
mov
mov
jmp
adc
sbb
rcrl
pop
stc
xchg
repnz
jg
add
jl
ja
add
pop
arpl
add
mov
ljmp
sbb
ljmp
jns
xchg
int
in
mov
mov
dec
fsubrs
rcl
nop
xlat
mov
lcall
add
xchg
or
inc
push
mov
or
cmpsb
cmp
and
push
mov
repnz
dec
ret
ljmp
jbe
push
adc
or
inc
shrl
inc
xor
add
fwait
pop
mov
scas
mov
movsb
popf
int
jmp
mov
jl
adc
cmp
cmp
pop
add
jp
ds
mov
mov
push
test
test
inc
aas
js
mov
js
sbb
addr16
dec
leave
insl
jns
mov
out
fcoms
add
imull
mov
repnz
push
xchg
mov
int
cli
and
out
jp
mov
dec
lock
push
cwtl
mov
sbb
outsl
and
push
sbb
cs
pop
ja
pop
pop
or
dec
in
xchg
and
not
data16
mov
dec
sbb
hlt
enter
xor
loop
push
push
adc
shlb
test
fcompl
sbb
cmpsb
inc
lcall
gs
mov
int3
jg
prefetcht0
adc
or
cmc
xchg
jo
sub
mov
sbbl
into
sbb
test
mov
clc
push
mov
in
popa
lock
mov
syscall
inc
and
aaa
sbbl
loopne
cltd
mov
jmp
es
shrl
jo
xor
addr16
lds
ss
and
jg
outsb
cmpsb
out
lds
mov
pop
or
xadd
rcll
rorb
into
adcl
stos
mov
dec
xchg
imul
mov
push
dec
and
xor
xor
test
gs
mov
inc
lds
mov
out
inc
adcl
hlt
xchg
test
jno
sub
iret
adc
mov
cmp
addl
jp
jb
loope
popa
sbb
mov
pop
scas
frstor
dec
ljmp
xchg
add
cmpsb
into
cmp
sbb
arpl
xchg
das
xlat
jbe
fisttpl
pop
and
arpl
jge
into
adc
imul
mull
ds
clc
jge
sbb
mov
int
addl
repnz
mov
mov
cmp
mov
or
addr16
adc
mov
ja
mov
push
sbb
jmp
mov
addr16
mov
jae
int3
sub
loope
rcrl
ljmp
jne
xchg
push
mov
push
dec
lret
int
leave
aam
xchg
inc
xchg
inc
in
sub
fimuls
je
xor
daa
in
clc
cli
add
loopne
cmp
mov
push
movb
jecxz
out
testl
daa
push
xchg
xor
xor
adc
and
jg
lea
cwtl
jb
insb
stos
push
push
xchg
stos
stc
imul
xor
push
mov
lret
fcompl
mov
imul
jp
pop
lret
pushf
sbb
pop
test
sbb
shll
pop
xchg
ret
pop
out
cmp
push
push
scas
cmp
adc
pusha
out
push
iret
add
icebp
push
fiadds
fstpt
dec
fstpl
adc
stos
aaa
or
cld
mov
jmp
jnp
jg
aaa
mov
dec
jl
fnstenv
and
andb
lret
xchg
dec
mov
scas
sbb
inc
push
xchg
and
pop
fdivr
in
xlat
push
aam
xor
mov
fwait
jecxz
pusha
xorl
push
fsubrs
cmp
movsb
push
aas
cld
test
insb
call
std
sarl
jge
lret
mov
jle
stc
xor
mov
add
xchg
adc
xlat
lcall
dec
mov
xor
and
icebp
mov
ja
xchg
sub
decb
adc
loopne
js
call
leave
or
test
gs
int
add
mov
sbb
js
dec
icebp
pop
xor
cltd
add
scas
push
mov
sti
stc
sub
loop
lahf
cli
rorb
xor
sbb
dec
std
lods
push
adc
popf
iret
jmp
sbb
addb
jecxz
jp
outsb
loopne
push
test
andb
cmp
imul
or
pop
or
sub
inc
bound
sti
xchg
sub
sahf
sub
cltd
adc
push
cmp
add
lea
out
and
pop
cli
inc
fwait
cmp
iret
fistps
insb
das
xchg
int3
cmc
sti
hlt
aaa
cmp
imul
outsb
jge
pop
loope
or
or
mov
mov
mov
lods
jne
push
inc
cld
push
lahf
std
cmp
dec
lock
stc
jecxz
into
push
xlat
js
fistl
rorb
or
mov
push
lcall
push
loopne
in
subl
mov
es
jbe
xor
jae
inc
inc
clc
int
pop
or
jae
xor
cmp
scas
mov
jmp
add
or
jmp
push
mov
xchg
ret
ljmp
fnstsw
adc
mov
mov
and
mov
adc
mov
lahf
out
leave
idivl
insb
insl
mov
pop
push
adc
clc
mov
in
cmpsl
pop
mov
mov
adc
dec
fisubl
xor
icebp
jo
jno
stc
rcl
enter
out
dec
in
lcall
and
mov
test
out
cmpsb
scas
ss
xchg
jp
leave
test
jne
ret
push
cli
dec
xor
jae
xchg
and
push
ret
rcrl
rcr
mulb
pop
sahf
icebp
fcmovnbe
add
imul
pop
cmp
push
pop
and
dec
lahf
xor
jg
in
pop
pop
addr16
mov
dec
aaa
dec
sub
jle
jno
lahf
mov
loop
mov
jo
in
int
in
sbb
xor
dec
jl
fildl
ljmp
nop
cmpsb
push
lds
fdivrl
lds
xchg
mov
xchg
aaa
fistpl
lahf
adc
packuswb
ficoml
test
push
and
add
jno
xor
addr16
test
sbb
es
ja
inc
push
and
call
sar
mov
nop
frstor
in
sub
mov
mov
and
je
xchg
mov
sub
je
fcoml
pop
jecxz
add
fildll
lock
jae
ret
in
mov
mov
popa
pop
fmuls
xorl
lods
in
or
mov
jg
and
insl
fildl
test
bound
push
adc
cmp
mov
dec
sub
das
fbstp
mov
pusha
lahf
stos
and
push
test
adc
stc
dec
rcrb
sbb
popa
repnz
ljmp
aas
push
es
cs
cwtl
xchg
cmpsl
stos
iret
js
and
mov
mov
push
cmp
sbb
jo
sub
rcr
insb
jle
mov
add
mov
int3
lret
push
imul
je
int3
or
mov
in
pop
push
data16
mov
mov
push
xor
clc
xor
inc
jecxz
add
xor
fmul
call
jb
test
jg
ficomps
rol
cld
add
mov
and
mov
fcomp
cmp
inc
bound
int3
pop
in
into
pop
int
push
and
inc
stos
and
ja
pop
jb
cmpsl
sub
sub
mov
js
aas
sbb
xor
and
add
fwait
test
cld
push
sti
dec
bswap
jns
jns
and
sbb
cmp
dec
jae
sbb
fcom
stc
adc
pop
loopne
or
pop
ds
sti
into
xchg
or
cmp
add
inc
adc
popa
inc
adc
js
sub
mov
ja
orb
mov
lea
fidivrl
xlat
loop
adc
or
adc
inc
xor
sahf
push
pop
cmc
loope
loope
pop
lods
es
out
inc
sub
lret
mov
sbb
adc
jbe,pn
adc
cld
jno
xchg
inc
std
jbe
xor
test
push
jnp
iret
shrb
das
inc
jnp
jg
or
pop
repz
idivb
movsl
and
ljmp
loopne
out
loope
into
packuswb
ficoms
arpl
cli
mov
sub
rorl
mov
push
mov
mov
jo
jnp
ljmp
push
jmp
xor
inc
and
mov
cmp
daa
ljmp
dec
inc
int
mov
cld
orb
lahf
add
out
mov
fs
push
fcmovb
inc
ret
mov
cmp
in
jg
lcall
mov
mov
xchg
xor
push
push
push
xlat
scas
divb
push
add
jle
xchg
aam
push
or
mov
in
out
loopne
sbb
in
jmp
push
push
push
lock
fists
ret
lds
jb
push
cs
loope
push
jne
adcl
inc
mov
outsb
xor
hlt
lret
jo
aam
test
pop
mov
pop
arpl
lock
iret
es
jge
cmc
es
aaa
jo,pn
addr16
sbb
lret
ss
mov
sbb
repnz
sub
xor
data16
jmp
rclb
lea
xlat
adc
adc
adc
or
shr
mov
and
push
jnp
pop
aas
mov
cmc
adcl
movsb
filds
cmp
mov
sub
cmp
jp
mov
out
int3
icebp
out
jo
stc
mov
idivb
dec
pop
fdivrs
pop
mov
imul
jle
xlat
out
scas
sahf
mov
call
lretw
gs
xchg
div
mov
jge
rcrl
inc
add
ret
add
push
shl
pop
dec
lods
lret
test
jmp
inc
add
add
rclb
push
lods
sbb
fsub
les
or
call
pop
or
lock
icebp
sbbl
cmp
xchg
cmpsb
xchg
movsl
cli
or
aam
push
pop
ljmp
aaa
push
stc
pop
sbb
inc
adc
fiaddl
ja
push
or
jmp
aaa
jp
lods
shr
stos
data16
add
dec
mov
shll
dec
stos
arpl
push
and
xor
test
push
sbb
and
jecxz
das
sub
jbe
nop
test
ret
pop
out
stos
add
jnp
or
push
adc
fildll
adc
dec
popf
test
ret
negb
das
jb
test
cmp
or
push
pop
sbb
mov
adc
inc
outsl
add
or
dec
inc
cmp
popf
fs
lock
in
push
mov
push
sahf
xlat
lods
mov
loopne
roll
dec
js
bound
out
pusha
pop
jmp
sbb
sub
mov
mov
fstl
sub
push
lds
ret
ljmp
lcall
loop
push
jecxz
aas
fmuls
jle
icebp
ljmp
inc
mov
in
pop
xchg
leave
popa
sbb
jl
out
mov
clc
pop
lods
leave
jbe
int3
sub
mov
sbb
jmp
lea
pop
jp
testb
sbb
dec
pop
jle
adc
loope
lock
pop
cld
xchg
addr16
cmpsl
jmp
ja
jl,pn
pusha
mov
aam
fisubs
mov
shll
mov
push
sub
subl
cmc
sub
mov
pushaw
es
imulb
fisubrl
test
sbb
push
call
test
cmp
sti
jle
ljmp
pusha
nop
jae
inc
call
hlt
dec
jbe
movsb
rcrl
fs
sti
xor
sbb
shll
mov
sar
jae
cld
ljmp
test
fbstp
movntq
out
pusha
dec
xchg
icebp
add
stos
jmp
shl
inc
mov
icebp
leave
popf
pop
int3
push
out
rcrb
pop
sub
in
adc
sub
xchg
inc
xlat
leave
mov
fisttpll
cmp
daa
or
cmpsb
jne
out
cmp
inc
dec
outsb
or
or
or
in
out
sbb
into
sub
jmp
jle
hlt
cmc
and
out
pop
mov
imul
ret
adc
or
in
sahf
jb
ret
gs
test
mov
icebp
jp
xchg
jcxz
sbb
or
adc
sahf
adc
pop
mov
cmc
gs
in
or
push
mov
jge
rcrb
aad
xchg
inc
int
scas
nop
mov
stos
adc
add
dec
xor
mov
cmp
test
xchg
mov
sub
scas
adcb
push
push
cmp
adc
mov
lret
jl
mov
testb
movsb
cmp
scas
add
es
iret
cmp
xor
mov
cmp
cmp
movsl
mov
sub
stos
insb
out
and
aas
mov
adc
push
shrb
jns
jnp
inc
mov
dec
sbbb
pop
mov
sti
test
push
adc
mov
adc
push
xchg
pusha
stc
inc
incl
mov
pop
mov
adc
ret
repnz
mov
pop
jnp
aam
add
repnz
mov
pop
rolb
cmp
push
popf
popf
mov
inc
iret
sub
stos
pop
addr16
push
out
outsb
sahf
jecxz
xchg
inc
and
xchg
mov
mov
movsb
fdivrl
add
mov
je
sbb
rcrb
add
into
add
cmpsb
lret
mov
sbb
scas
cmpsl
jne
cmp
jmp
push
pop
mov
mov
jmp
mov
lahf
sbb
dec
divl
out
jmp
notl
xchg
pop
cld
xor
sarb
lock
push
xchg
test
pop
sarl
adc
movsl
pop
pop
int
mov
fdivrs
sub
mov
push
bound
loop
icebp
std
cmp
inc
jnp
add
cmp
jmp
mov
push
mov
lret
hlt
inc
stos
pop
xchg
mov
inc
xchg
cmpl
fsts
mov
push
sub
add
and
sbb
adc
and
inc
scas
fidivl
mov
in
js
int
inc
mov
mov
lea
push
sub
lods
mov
pusha
movsl
dec
xor
shll
push
pop
inc
inc
into
cltd
in
jo
adc
push
in
adcb
sbb
and
pop
mov
add
xor
cli
sbb
mov
push
pop
dec
daa
daa
fidivrl
add
or
ljmp
imul
ret
xchg
enter
pop
adc
sub
xor
mov
cld
dec
out
fldenv
dec
jp
mov
dec
push
scas
xlat
mov
cmp
xchg
ret
xor
lahf
inc
mov
dec
movsb
push
push
aam
pop
fisubrs
mov
cmp
lock
lock
ja
movsb
inc
subb
scas
decl
push
push
mov
sbb
and
fldenv
xor
push
shr
sub
fsubrl
push
int
cmpsl
jo
pop
test
adc
push
js
add
lret
add
push
sub
jp
outsl
lahf
push
jno
fidivl
and
scas
mov
mov
xor
jnp
cltd
and
dec
xchg
push
lret
ret
and
and
mov
sti
mov
push
jmp
cmp
mov
dec
jb
and
icebp
jle
xchg
xor
push
fsubs
xlat
mov
cmpsl
push
idivl
out
pop
out
fldenv
ja
xor
push
fisttpll
mov
mov
sti
call
inc
sub
roll
popf
xlat
fiadds
pop
test
int
cltd
or
and
jl
out
push
cmpsb
test
outsl
cmpsl
enter
stc
inc
out
adc
push
movsb
mov
idiv
notl
dec
cmc
jge
push
xchg
or
orb
mov
adcb
nop
movsl
ljmp
repz
popa
negl
jmp
jge
lret
test
push
or
pcmpeqw
xchg
rolb
sbb
and
jbe
insl
insb
mov
adc
inc
jle
adc
lods
punpckldq
mov
mov
push
pushf
aaa
fnstsw
mov
mov
mov
fildl
mov
ret
xor
sub
or
and
int
add
fdiv
mov
mov
cmpps
adc
inc
jb
arpl
mov
scas
lods
mov
jge
mov
jnp
mov
jne
push
std
jmp
xchg
lcall
daa
sbb
jecxz
jne
xor
lds
or
inc
call
adc
sahf
cmpsl
push
adcl
sub
sbb
repnz
sub
test
ds
aam
push
xchg
cmp
sahf
jle
xchg
sti
repz
lret
les
xor
xchg
fistpll
mov
jne
jo
and
mov
ja
ljmp
ret
push
dec
orl
mov
dec
fcomps
sahf
pop
in
inc
clc
xchg
hlt
sub
xor
xor
inc
test
pop
in
sbb
fists
repz
shlb
ret
sub
cli
xchg
add
stos
jmp
push
adc
mov
stos
movsl
arpl
sti
mov
les
call
aaa
mov
std
xchg
sub
inc
xchg
jae
dec
mov
sbb
mov
lcall
sarb
aaa
fimull
test
jb
xchg
nop
push
xchg
pop
test
outsb
adc
lahf
stos
push
shlb
and
loope
inc
movsl
xchg
je
jo
or
push
mov
lahf
or
sub
sub
sahf
es
and
adc
mov
xchg
aam
in
xchg
jno
popa
dec
sarb
pop
mov
mov
andl
ds
scas
insl
sbb
jp
leave
nop
sbb
jno
js
ds
adc
pop
test
sti
out
das
xchg
inc
pop
xor
xor
jge
lcall
pop
repnz
inc
fmull
sub
pop
inc
out
lret
pop
xchg
int
push
inc
das
and
adc
jg
cs
push
mov
sub
lods
push
mov
pop
add
ss
test
call
fnstsw
adc
ss
sti
cmp
dec
xchg
fs
mov
pop
push
xor
in
imul
mov
mov
xor
jbe
repz
sbb
mov
cmp
sbb
xor
sbb
jne
jne
filds
fs
ror
mov
ja
and
xchg
adc
mov
mov
sqrtps
sub
cmp
in
cmp
stos
adc
push
rorb
mov
cwtl
pop
add
jecxz
jl
lret
sti
inc
fs
mov
pop
test
sbbl
rcrl
mov
mov
sub
pop
mov
xchg
jns
and
in
dec
cmp
or
inc
push
js
mov
std
mov
mov
std
jl
or
dec
push
jecxz
adc
xchg
cmp
fsubs
mov
in
add
add
flds
mov
movsb
int3
mov
scas
mov
inc
shlb
stc
mov
jae
push
inc
add
lock
cld
mov
and
ret
dec
xor
call
stos
jle
or
jae
adc
xchg
mov
mov
aas
sbb
jl
ss
dec
lods
mov
notl
sahf
mov
adc
div
adc
stos
xor
or
stc
in
xchg
sub
xchg
int
xchg
mov
xchg
dec
shrl
stc
shll
mov
or
push
imul
xchg
es
mov
pop
xchg
aas
lds
xor
xor
rcll
scas
fs
das
sti
sbb
into
pop
xchg
add
lret
push
cmp
mov
adc
push
ss
sbb
dec
in
or
popa
jmp
data16
mov
mov
mov
inc
xchg
lea
mov
dec
aas
mov
js
cli
cmp
cmc
xor
js
inc
repnz
cmp
mov
adc
jecxz
in
aam
mov
in
lea
xchg
gs
add
mov
int
xor
mov
fcom
sti
std
sarl
cmp
jle
and
idivb
jns
mov
add
les
sbb
lret
aaa
mov
jg
repnz
lock
je
aad
test
mov
movsb
shlb
mov
inc
xchg
aad
lods
jl
loope
roll
xor
push
shll
pop
add
ret
pop
fildl
ficomps
jo
xchg
add
add
xlat
rorl
and
jp
push
adcb
outsb
gs
leave
inc
jl
adc
sbb
in
in
dec
xor
push
jae
es
aas
in
jae
jle
xor
aam
mov
sti
or
mov
leave
mov
mov
stos
and
lret
xchg
sbbl
ficoms
jecxz
rcrb
inc
out
ljmp
lahf
cwtl
push
je
adc
add
push
or
stos
pop
adc
push
ds
mov
lret
dec
test
mov
jmp
adc
mov
push
iret
or
fdivrl
jo
popf
lcall
dec
cmp
repz
push
sbb
sub
movsl
test
pop
mov
mov
idiv
pusha
out
fst
orl
pop
call
cmp
ds
test
sbb
loop
or
mov
jnp
xchg
push
imul
rol
lcall
shlb
les
pop
dec
jmp
movsb
adc
dec
insb
fidivs
cmp
pusha
push
fs
mov
push
aaa
lret
mov
or
cltd
ret
dec
mov
add
mov
cs
mov
pop
lods
and
aas
fiaddl
inc
or
xor
movsl
push
push
xchg
xchg
mov
ret
xchg
sbb
inc
push
outsl
cmp
xor
fists
add
jle
sahf
add
cmp
fbstp
xor
inc
daa
jmp
lret
cmp
sub
push
mov
xchg
movsb
inc
in
repnz
mov
je
pop
cmpsb
fs
imul
mov
xchg
dec
loopne
cltd
arpl
xlat
pop
xor
push
xlat
pop
jbe
add
dec
cli
xchg
mov
sub
push
mov
mov
nop
cmpsl
loopne
addr16
in
es
xchg
mov
aam
sbb
push
cmc
je
cli
shrb
mov
adc
mov
je
and
rcrb
cmp
rcll
mov
xlat
inc
sub
in
nop
divl
or
lods
sti
insl
clc
xor
add
sbb
mov
xchg
mov
loop
mov
xchg
dec
dec
jae
jg
mov
test
mov
and
lods
fucomip
xchg
lods
or
nop
jl
sbb
sub
in
loope
push
stos
sbb
cs
dec
call
adc
add
add
js
push
mov
mov
std
add
pop
lahf
and
mov
int3
or
cmp
insl
inc
xchg
pop
fwait
int
inc
gs
mov
cmp
or
xor
ret
dec
aad
and
mov
daa
dec
fisubs
mov
out
jl
ret
mov
jp
mov
out
flds
aas
mov
xchg
and
or
inc
sarb
adc
bound
lea
mov
mov
nop
inc
and
in
pop
mov
loope
xorl
icebp
and
inc
inc
pop
cmpsl
sbb
dec
iret
mov
sbb
inc
mov
sbb
sub
out
pop
xchg
jbe
lods
test
and
mov
sbb
shll
loop
sub
aas
or
mulb
leave
sub
ljmp
add
leave
cwtl
sbb
repz
call
fsub
cmc
int3
lods
or
dec
jae
subl
mov
clc
cmp
push
ja
lods
fisubs
add
jmp
je
fs
cmp
in
call
js
cmc
negb
je
std
jecxz
test
lret
clc
test
jb
sub
mov
add
xor
mov
repnz
or
cmc
push
adc
xor
sbb
fdivs
rcll
pop
adc
cld
bound
and
mov
cmp
iret
aas
icebp
aas
in
or
movsb
and
mov
std
cli
cmpsb
ret
add
hlt
push
cmp
adcl
mov
xchg
jbe
leave
mov
mov
aam
add
jno
lret
in
cltd
mov
fiaddl
pop
fisubl
add
mov
push
adc
cmpsl
sahf
pop
aaa
push
in
sub
lock
pop
sbbl
loop,pt
outsl
and
mov
addl
pop
push
jle
or
movsl
outsb
mov
loope
movsl
jecxz
sub
jl
daa
inc
leave
daa
mov
inc
stc
inc
dec
xor
lcall
std
jo
push
push
lea
push
pusha
cs
fwait
adc
mov
mov
dec
out
repz
mov
jnp
jl
or
sbb
loop
test
mov
mov
add
pop
mov
std
pop
xchg
ds
cmp
loopne
add
push
in
fisttpll
mov
or
hlt
inc
scas
add
sarl
clc
jns
aam
fwait
dec
lods
loope
std
adc
cmp
icebp
cmp
xchg
icebp
add
je
or
mov
mov
cmp
pop
or
sti
xor
xor
cmp
jbe
xorb
aam
sbb
jb
or
gs
or
pop
mov
lret
into
adc
ret
loopnew
nop
cmp
xor
jle
xchg
movsb
stc
cmp
loopne
and
pop
scas
and
push
sub
imul
jp
loope
cwtl
sub
dec
fldcw
inc
and
jle
or
call
push
mov
into
mov
or
jl
dec
or
fsts
mov
loopne
mov
sub
xor
lea
imul
mov
adc
movsl
mov
mov
mov
mov
sub
ds
inc
out
idivl
addr16
push
leave
int
sub
sbb
and
mov
addr16
add
imul
adcb
jne
test
xorb
imul
addr16
outsl
mov
sub
js
cmp
cmc
aam
mov
imul
movsb
add
mov
and
loop
leave
cmp
pushf
jl
xchg
mov
cltd
adc
fsub
test
or
lea
shrb
mov
dec
xchg
test
mov
rcll
pop
mov
xchg
mov
xlat
je
jmp
lds
test
int3
cmp
fs
shl
cmp
arpl
mov
jle
frstor
mov
clc
aad
sti
sub
mov
push
cmp
jb
test
xor
sub
adc
aam
dec
jg
mov
loop
adc
and
push
nop
sub
xchg
dec
inc
mov
push
mov
rcll
xor
mov
cli
dec
cld
ja
lahf
leave
mov
hlt
jne
mov
ja
ficomps
inc
jo
adc
in
push
adc
mov
and
addl
jns
and
mov
into
mov
jno
add
inc
out
sbb
repnz
sahf
loop
pop
test
inc
push
scas
bound
lods
imul
mov
fstp
xor
fs
mov
stos
fwait
les
insb
fwait
dec
aaa
andb
jp
stos
push
xor
jo
cmpsl
imul
bound
and
push
in
in
or
mov
adc
mov
addb
xor
add
mov
cmp
inc
sbb
inc
add
shlb
fs
mov
jecxz
sub
adcb
sahf
ret
mov
test
fimull
loopne
cmp
cltd
stos
popa
int3
jl
out
sbb
movups
hlt
sbb
inc
imul
orl
cmp
mov
imul
mov
rcrb
pop
test
pop
in
das
sub
scas
jle
and
mov
in
test
lock
jmp
not
jle
pusha
lock
cmpsl
sbb
pop
jle
xchg
sti
sbbl
sub
mov
arpl
dec
lds
lret
ret
jmp
les
adcl
sbb
cmpsb
test
cmp
xchg
cmpb
mov
mov
sub
std
inc
cmp
inc
in
mov
jb
aam
and
jo
pop
pop
and
stos
xor
sbb
xchg
push
lahf
sub
aam
xlat
jecxz
dec
mov
inc
sahf
jge
clc
xor
cmp
div
movaps
pop
xor
push
mov
out
cmc
jmp
fs
test
jo
sbb
mov
jne
fdiv
mov
cmpsb
shrb
sbb
cmp
js
or
add
adc
int3
fiadds
inc
pop
in
inc
icebp
sbb
mov
or
cmpsl
popf
cmp
test
mov
test
mov
rcr
jmp
sub
sbb
lods
mov
mov
or
add
mov
xchg
sti
xor
std
cmpsl
test
cli
rorb
out
jge
cmc
andb
adc
dec
xlat
add
jge,pn
hlt
jmp
outsl
inc
pop
dec
jbe
les
notl
dec
scas
inc
cmpl
dec
dec
cmpsl
popa
sub
outsl
in
sahf
jg
rcrw
popf
in
imul
push
sub
stos
mov
mov
mull
test
xchg
or
mov
jg
fadds
shll
sbb
pop
sbb
pop
jmp
pop
inc
in
add
rolb
insl
lock
sti
in
shrl
int
jge
mov
loope
mov
daa
inc
pop
push
pop
sbb
rolb
push
sub
cmpsl
jle
lods
addr16
mov
repz
je
pop
test
push
lret
test
jb
mov
add
sub
clc
jo
inc
and
and
insl
fnclex
push
int3
push
mov
loope
push
pop
roll
clc
jo
lods
enter
jmp
mov
xlat
and
outsb
add
sti
jnp
add
nop
or
push
loope
cmpb
cli
ss
cmp
sahf
dec
scas
loopne
in
scas
xchg
xor
sub
push
mov
cs
cwtl
mov
jp
mov
xor
mov
xchg
andb
fmull
cmp
enter
push
inc
stos
sti
adc
bound
les
cmp
or
sub
pop
test
mov
xor
popf
ret
mov
mov
mov
jmp
mov
pop
adc
rclb
dec
and
and
mov
fstpt
stc
pop
add
xchg
mov
add
mov
pop
mov
xchg
mov
test
scas
mov
jbe
and
fldcw
jno
jae
mov
outsb
push
das
mov
mov
push
ds
push
sub
int3
pop
jmp
lret
xchg
inc
popa
shll
dec
cmp
outsl
lods
pop
enter
dec
out
ret
pop
rcl
sub
mov
add
sub
xchg
ss
sub
xchg
outsl
cmpsb
mov
xchg
sbbl
int3
add
cmpsl
push
xchg
push
push
push
fnsave
pop
pop
jb
mulb
sarb
push
ret
fwait
dec
or
mov
fsub
mov
mov
repz
stc
mov
adc
int3
mov
mov
sbb
jmp
arpl
ljmp
test
dec
scas
jl
stc
lahf
fsubrs
ja
cmpsb
or
ret
dec
fwait
push
lret
daa
outsl
lods
sbb
testl
bound
in
in
das
cltd
mov
lcall
jbe
push
fchs
daa
outsl
xchg
pop
clc
adc
inc
insl
lea
mov
mov
and
movsb
inc
push
out
std
iret
aaa
out
jge
inc
loope
mov
mov
aam
mov
nop
int3
mov
aad
sbb
lods
repz
dec
mov
fstps
jae
scas
fsubp
or
js
lcall
in
xor
popf
push
jb
cmpb
fisttpll
adc
in
fs
cmc
test
popa
sahf
adc
rcr
adc
sahf
lods
insb
mov
xchg
jge
sbb
mov
lret
ljmp
pop
xchg
jnp
mov
mov
in
or
mov
subb
push
cld
pop
ss
push
jl
pop
jnp
inc
imul
test
adc
in
push
jle
repz
inc
out
in
pop
cmpb
rol
mulb
inc
stos
and
push
test
jg
fidivrs
fistpl
aam
inc
or
cmp
push
jmp
jge
adcl
stos
gs
aam
cmp
or
pop
out
shlb
sbb
mov
sahf
in
cltd
cwtl
push
sub
and
mov
lds
mov
xchg
adc
fcmovu
loopne
hlt
std
jmp
adc
sub
or
mov
mov
adc
dec
xlat
cmp
les
sbb
mov
cmp
call
pmulhuw
adc
out
cmpsb
movsb
rcrl
pop
cmc
adc
movsl
xor
stc
popf
scas
xchg
xchg
in
mov
shrb
dec
cmp
cmp
mov
jge
cld
push
and
lods
push
insl
add
sbb
cmp
scas
arpl
cmpsb
add
adc
lods
xchg
idiv
shrl
push
push
dec
ret
movsb
repz
jmp
sub
sub
icebp
daa
fdivrs
mov
adc
into
add
in
addb
add
xchg
negb
or
arpl
mov
call
push
nop
ficompl
add
iret
insl
test
xor
or
in
add
dec
shll
mov
repnz
lahf
fdivrp
fnstcw
or
mov
loope,pt
dec
add
cld
jnp
push
xchg
adc
scas
jl
subl
push
aaa
out
dec
repnz
pop
ss
or
jg
xchg
repnz
xor
pop
mov
nop
mov
inc
dec
dec
xor
sub
push
fstpl
lahf
imul
iret
inc
cltd
cmp
lret
jmp
div
je
scas
sub
insb
pop
dec
test
fstps
and
xchg
iret
pop
push
je
ret
xor
jns
std
in
or
outsb
dec
mov
mov
popf
daa
fwait
pop
cwtl
icebp
cmpsl
dec
jp
lods
loop
addl
test
aaa
in
jns
outsb
je
mov
mov
xchg
sti
push
mov
sbb
inc
xchg
lea
jge
jle
push
cmp
nop
imul
negb
pushf
ja
push
lret
or
dec
xchg
sub
pop
cmpsb
add
rorl
mov
sbb
mov
call
or
insl
inc
pop
ljmp
in
pusha
and
and
push
sti
rolb
push
adc
xchg
data16
push
pop
and
pushf
adc
sbb
leave
or
addr16
into
testb
loopne
mov
in
nop
clc
jl
dec
aas
fstp
and
push
push
stos
scas
jno
cld
sbb
adc
mov
inc
jae
gs
mov
fsts
jns
sti
lret
nop
push
mov
fistl
pop
adc
pushf
push
pop
push
movsl
xor
cmp
loopne
repz
mov
jne
shl
in
lock
xchg
loopne
jecxz
or
sbb
push
jne
aad
push
cmp
mov
pop
movsl
rolb
push
xchg
pop
inc
mov
lea
leave
mov
xchg
mov
ljmp
push
aam
stos
cmp
mov
mov
fwait
xchg
xchg
outsl
and
dec
sub
fs
idivb
pop
addr16
inc
push
nop
movsb
fcoms
mov
dec
push
cmp
sbb
outsl
lea
ljmp
jb
pop
mov
adc
lock
push
incb
add
and
out
cmc
pop
xlat
jle
stc
lret
clc
leave
mov
mov
xor
mov
mov
imul
jecxz
jbe
in
dec
shll
in
xlat
pop
jae
ror
loopne
inc
push
xor
push
rcrl
scas
test
repz
mov
jo
mov
ret
ss
fstpl
and
aad
jo
cmpsl
xchg
fisubl
jnp
stc
sbb
lock
add
jb
fsubl
mov
or
mov
int
les
pushl
adc
in
cmpsl
ficoml
pushf
repnz
aaa
jle
xor
jnp
fstpl
sub
pop
pop
mov
shll
shlb
shlb
sti
sarl
jle
aas
inc
mov
adc
xor
sub
xor
adc
sahf
or
out
out
pop
and
outsl
pushf
jb
enter
leave
push
into
lcall
add
mov
std
mov
inc
push
shrb
xor
xchg
outsl
xor
enter
sbb
sub
out
stos
pop
mov
rorb
cmpsb
sbb
scas
pop
xor
xchg
lret
sbb
xlat
cmp
mov
roll
add
dec
rolb
mov
xchg
sbb
test
xor
icebp
xchg
sbb
fsubrs
clc
rol
pop
leave
cmp
bound
sbb
cmp
mov
icebp
in
fwait
lahf
jmp
repz
mov
inc
hlt
mov
lock
push
sub
add
cmp
fs
nop
repz
or
rcrl
adc
imul
jo
gs
lret
sbb
test
dec
cmp
mov
xchg
pop
mov
nop
mov
movsl
mov
pusha
ds
pop
movsb
mov
push
pop
imul
test
lret
loopne
mov
scas
fmuls
jg
std
dec
push
xchg
jmp
lret
popa
loopne
push
int
mov
fisttps
pop
and
ds
cs
out
insb
scas
popf
icebp
and
repz
jl
pop
jno
movsb
arpl
or
js
test
xlat
cmc
xchg
sub
movsb
call
sbb
stc
fstps
pushf
aaa
cld
pop
xchg
and
xchg
and
movsb
fildll
jecxz
jp,pn
xlat
cmp
push
mov
ss
pop
jb
rcll
sbb
stc
or
outsl
int
movl
jae,pt
test
loope
mov
and
scas
test
pop
ja
push
xor
dec
repnz
push
mov
movsl
movsb
push
imul
jge
sti
jge
xchg
pop
mov
jbe
mov
in
xchg
add
pop
ja
sbb
mov
shll
ror
jbe
into
cltd
sti
adc
shlb
ja
or
loop
mov
sarb
push
mov
stc
or
ja
sbb
iret
frstor
loopne
dec
dec
repnz
pop
push
jmp
sahf
mov
pcmpgtw
cmpl
dec
inc
jno
cmp
std
lret
data16
or
test
pushf
aad
pop
stc
imul
xor
test
add
cld
xor
pop
les
mov
and
cmc
lock
lahf
jnp
dec
pop
dec
shrl
dec
jae
or
test
imul
jb
add
add
js
cli
mov
cmc
mov
sub
loope
jle
lods
insb
mov
testb
and
cmp
adcl
out
and
xor
js
ret
out
dec
pop
sbb
or
sub
pop
sub
stos
mov
xchg
xor
inc
popf
or
sahf
xchg
icebp
nop
sbb
cmp
xchg
iret
jb
cmp
imul
mov
js
out
ds
xor
mull
not
mov
fldcw
jno
dec
xor
or
call
fcmovnu
inc
insl
or
mov
sub
cld
or
lret
std
sar
sahf
push
mov
popf
xchg
cmp
andl
ja
fs
daa
add
jbe
sbb
xchg
fnstsw
test
add
jo
jns
jl
cmp
imul
add
inc
jmp
call
adc
pop
jo
mov
push
inc
cmp
js
or
sub
push
stos
gs
push
adc
fiadds
cmp
and
les
dec
mov
xchg
cmp
pop
pop
shl
and
aas
dec
data16
sub
test
xlat
mov
in
adc
test
mov
cmpsl
pop
lods
dec
int
mov
outsb
notl
push
stc
shrl
pop
jg
dec
adc
ljmp
jns
js
out
cmp
cmpl
sub
outsl
lahf
or
out
cmp
sub
aad
outsb
fabs
hlt
popf
jl
dec
dec
ja
gs
insb
pop
jnp
jo
push
popf
mov
shl
cmpsb
xor
call
xorl
jmp
push
mov
pusha
pushf
fcomps
mov
mov
leave
leave
stos
test
mov
cmp
ret
push
pop
sub
add
ds
ret
dec
push
outsb
iret
cmp
sti
ds
out
daa
inc
mov
pop
and
add
inc
add
in
sub
aad
out
hlt
xchg
pop
aad
pop
rorl
aam
out
cmp
out
pop
ja
inc
out
mov
loopne
popf
cmp
cmp
add
jmp
sub
test
inc
add
sub
push
pusha
push
push
add
inc
cltd
repnz
shll
xor
fwait
cld
jecxz
mov
or
pop
lahf
int3
lcall
out
dec
pop
mov
test
sbbb
dec
push
data16
lret
and
xor
cmpsb
jge
mov
loopne
loopne
push
lods
lcall
loope
or
mov
daa
jae
into
fwait
push
xor
jae
call
cmpsb
mov
test
pop
push
push
mov
into
sbb
adc
xchg
add
sbb
nop
mov
rcpps
add
push
and
push
mov
inc
fmull
dec
les
pop
jmp
or
repnz
addb
fcmovu
or
stos
imul
push
mov
add
fldl
call
xchg
xchg
aad
shlb
es
jg
std
mov
aaa
cli
xchg
sbb
data16
pop
inc
leave
mov
mov
jnp
loop
jae
addr16
pop
inc
push
inc
pop
stos
mov
shll
das
pop
cmp
jo
int3
mov
cmp
xchg
bound
mov
jnp
jg
sbb
fcomp
pop
fsubrs
xor
iret
jge
pop
insb
jmp
lret
lcall
cmp
fwait
sbb
jmp
xchg
sub
addr16
cmp
push
roll
fldcw
jp
dec
sub
mov
jno
int3
xor
jbe
inc
jb
dec
lea
inc
pop
cmp
mov
jae
mov
dec
inc
mov
add
outsl
or
es
jbe
or
aaa
jbe
out
sub
push
xchg
fs
or
test
inc
call
push
jbe
jns
neg
gs
in
aaa
cmpb
fildl
leave
or
pop
js
fildll
mov
cld
out
insb
mov
lds
sti
add
fs
push
sbb
cld
aas
add
push
clc
aaa
outsl
out
jmp
and
push
xor
in
ss
inc
mov
sbb
sub
inc
xchg
push
mov
lret
and
jecxz
mov
pushf
loope
push
stos
mov
or
ds
mov
jmp
pushf
mov
std
ds
mov
cmpsl
mov
pusha
mov
adc
rol
adc
mov
jl
mov
sar
sarb
cmp
mov
sub
insl
aam
xor
pop
clc
pushf
push
mov
mulb
inc
and
divb
jg
nop
sub
cmpsl
jo
outsb
out
leave
and
mov
mov
ljmp
mov
stc
test
into
iret
pushf
or
aas
xor
notb
and
xor
push
xchg
insl
ret
ret
and
ret
cld
ror
mov
fdivrs
fcmovne
int
adc
mov
nop
jmp
mov
loop
scas
mov
dec
ret
out
xor
iret
shlb
pushf
xor
sbbb
scas
mov
mov
aad
shl
push
loope
or
mov
int
or
es
sub
les
ljmp
fildll
add
or
outsl
xchg
insl
sbb
pushf
mov
cmp
dec
pop
iret
push
cmp
popf
mov
jl
jns
mov
pop
ror
jne
xchg
ljmpw
daa
push
test
sti
inc
xchg
imul
aad
add
mov
lods
inc
inc
xchg
mov
mov
mov
aam
cmp
rcll
mov
jecxz
imul
dec
mov
or
clc
sub
cli
xchg
and
pop
repnz
adc
xchg
lods
in
movsb
xor
adc
push
xchg
movb
mov
jge
inc
inc
pop
stos
lods
pop
out
sub
pop
ljmp
sbb
mov
out
in
rorl
mov
xchg
inc
fsubs
xchg
repz
test
call
ret
sbb
out
xorb
cmpsb
jecxz
sbb
int3
sbb
shll
inc
pop
inc
orb
dec
xchg
sbb
out
xor
add
in
or
sahf
push
out
cmp
xchg
jns
pusha
lahf
out
lahf
jmp
ret
jle
cmp
hlt
leave
outsb
iret
lods
adc
xchg
pop
fbstp
mov
lcall
divl
loope
mov
loope
pushf
scas
pop
cli
sub
test
or
push
sbb
lea
repz
mov
aas
pop
xor
add
jnp
andb
movsb
leavew
mov
mov
push
and
cmc
xchg
pusha
pop
add
xchg
out
xchg
shrb
or
mov
fdivl
in
insl
mov
sbb
fcomip
pusha
xchg
adc
cmpsb
jbe
lods
add
mov
ja
pop
sbb
cmpsb
rcrb
adc
repnz
inc
movsl
popf
int
cmp
pop
stc
pop
cmpsl
and
jb
ret
dec
sub
sbb
jle
ret
fisttps
bound
adc
sahf
xchg
cmp
xor
sahf
mov
adc
movsl
inc
cwtl
and
filds
sbb
xchg
data16
gs
jns
dec
cmp
adc
pop
pushf
scas
imul
inc
cmp
mov
mov
adcl
loop
mov
fbstp
add
aas
jbe
mov
pop
push
int3
xor
js
sbb
cmp
fs
mov
rcr
aam
push
enter
pop
push
and
inc
shlb
push
dec
mov
les
stos
pop
jo
adc
mov
loope
in
enter
addl
and
mov
call
cmpb
and
bound
sbb
cmp
dec
and
push
jne
adc
xchg
loope
scas
add
sbb
rcrl
xor
mov
movsb
shr
inc
hlt
jecxz
scas
mov
call
sub
xchg
cli
pop
xor
or
jg
add
dec
jno
ret
push
das
xchg
add
pushf
add
js
sbb
mov
or
dec
push
dec
lret
adc
mov
add
bound
xchg
push
pop
into
outsb
and
nop
negb
and
jnp,pt
inc
cmp
push
xchg
int3
fnsave
test
ficompl
cmp
in
scas
out
jns
js
fsubrs
push
pop
bound
daa
or
xchg
and
call
movsb
xchg
jb
ror
pop
stos
sub
rorb
jno
xor
sahf
in
cmpsl
ficoms
in
rclb
cli
lahf
xchg
outsl
dec
xor
inc
call
popa
pop
add
cld
inc
jp
mov
jae
stos
mov
pop
mov
fadds
mov
xchg
popa
dec
cmpsl
xor
gs
fs
out
push
jns
and
or
test
dec
sbb
mov
sbb
pop
add
js
xor
aam
inc
leave
pop
xlat
fs
out
xor
cld
hlt
push
mov
mov
inc
cmp
push
dec
out
call
push
add
pop
test
adc
mov
pop
in
nop
add
fisubrs
test
sbb
cltd
cld
cmp
repnz
mov
sub
adc
pushf
dec
iret
jge
cmp
mov
and
pusha
add
jo
push
mov
mov
cmpsb
push
mov
jae
sub
testb
jmp
dec
sbb
orb
adc
sub
xor
fists
xchg
push
inc
clc
inc
lcall
out
jns
push
ljmp
pop
or
xchg
adc
aas
jo
cmp
mov
lods
pop
push
xor
push
fwait
rcrl
add
in
dec
mov
fisttpl
std
cli
push
pop
xor
pushf
cli
mov
test
pop
call
or
add
add
rclb
add
cmp
stc
repz
or
leave
sbbb
shlb
flds
jecxz
add
out
dec
insl
adc
loope
inc
cmpsb
test
mov
and
xchg
xchg
adc
jo
add
adc
push
inc
cmpsl
mov
pop
aaa
enter
testb
pop
pusha
sub
adc
jl
mov
test
push
imul
es
mov
xchg
and
or
fistpll
std
and
adc
fwait
sarb
adc
fs
mov
pop
stos
or
dec
jp
mov
sti
dec
nop
mov
cmp
adc
insl
push
mov
test
lret
cmpsb
xlat
jae
cmp
jp
push
ret
mov
xor
data16
inc
orl
add
jbe
xor
or
adc
movsl
pop
sbb
mov
mov
popa
add
bound
inc
mov
mov
mov
jae
rolb
push
sbb
mov
dec
movsl
popa
jns
xchg
movlhps
adc
aad
fucomip
mov
pop
inc
repz
jns
std
scas
xchg
imul
sbb
push
push
aad
shlb
shlb
arpl
imul
xchg
loopne
adc
popf
dec
push
mov
mov
jmp
inc
movsb
jle,pn
xor
cld
sbbb
imul
dec
sub
mov
test
les
push
inc
andb
addl
popa
loopne
mov
jb
mov
rclb
neg
fsub
shrl
movsb
and
shrb
in
dec
xchg
cmp
sbb
in
sub
push
ficompl
jb
notb
add
or
inc
cs
fidivrs
cwtl
int
dec
cmc
std
push
mov
jb
hlt
and
popa
xchg
ror
sbb
dec
jb
xchg
xorb
jne
lock
rclb
in
xlat
jno
fisubl
lcall
inc
out
jae
pop
repz
jo
sti
mov
cs
mov
inc
in
scas
loop
mov
fcomps
js
pop
imul
push
jno
outsb
lods
imul
jp
sbb
leave
ljmp
push
mov
fdivrs
cwtl
xchg
pop
rcll
xchg
mov
cmpsb
out
and
push
sbb
adc
pop
dec
lods
or
je
je
pop
in
inc
jae
pop
or
repz
jne
cmpsb
mov
push
fsub
xchg
int
out
popf
xor
movsb
enter
bound
fcomps
push
popa
outsl
mov
mov
ret
mov
or
orb
jo
outsl
xchg
dec
cmp
in
test
pusha
outsl
add
test
sub
sub
xor
bound
dec
shrl
mov
mov
sub
fldenv
adc
fwait
and
movsb
mov
jmp
stos
sahf
mov
stos
hlt
rcrl
idivl
mov
movsb
cmp
xchg
mov
clc
roll
adc
sub
xor
jmp
movsb
das
push
or
pusha
pop
xchg
std
hlt
ret
xchg
adc
cltd
aam
fs
test
mov
iret
lea
adc
fwait
and
lods
jno
lds
push
lds
popa
cld
push
mov
ja
adc
std
cmp
mov
push
std
adc
gs
cmp
sbb
cmp
mov
sbb
jb
pushf
orb
mov
push
loop
or
test
cs
pushf
jae
fwait
jp
xor
andb
in
dec
jge
mov
movsb
jbe
sub
je
dec
xor
cli
dec
fdivrs
lea
imull
data16
je
js
sbbl
outsb
push
jecxz
mov
fsubl
xor
dec
int
das
mov
jecxz
push
and
xchg
xor
sarb
sbb
xchg
sub
inc
mov
stos
sarb
push
push
addps
std
jns
push
test
es
and
pop
push
xchg
test
sbb
notb
push
push
push
movsb
movsl
jnp
mov
shlb
xchg
or
scas
xlat
mov
adc
mov
add
pop
xor
sahf
xchg
js
xchg
gs
fdivrl
sub
test
xor
push
dec
repz
xchg
dec
or
pop
sbb
mov
inc
jmp
mov
sub
mov
movsl
adc
pop
int3
pop
cld
arpl
outsb
fidivrl
dec
out
inc
xor
outsl
fs
xor
sbb
push
xchg
arpl
and
and
lcall
scas
cmpsl
jno
adc
mov
aam
test
movsl
fiaddl
out
sbb
push
dec
pop
insl
das
lds
adc
xchg
ss
cmp
out
xor
filds
hlt
iret
pusha
mov
in
sub
inc
lahf
or
adcb
jbe
add
ret
ljmp
mov
push
and
cmp
and
xchg
sub
push
pop
enter
scas
sub
xchg
lahf
adc
pop
enter
mov
clc
imul
mov
sbb
xor
pop
ljmp
idivl
repnz
sbb
push
nop
cmp
xchg
call
xchg
mov
xor
jge
scas
push
add
and
ficoml
jp
mov
xchg
setnp
mov
push
leave
cli
iret
aas
sbb
in
jg
lret
loopne
pusha
loop
inc
hlt
outsl
cmpsb
pop
sahf
icebp
ret
sub
mov
push
lods
cmpsl
jge
jge
push
fstpl
pop
shr
aam
icebp
repz
in
dec
sbbl
roll
fnstcw
negl
stc
sbb
inc
mov
ljmp
sub
sbb
jbe
cwtl
shrb
mov
ja
jmp
lea
sbb
ficoml
bound
mov
mov
pop
sbb
arpl
push
mov
mov
pop
daa
inc
xor
jnp
mov
test
icebp
jmp
jns
clc
in
fsubl
fadds
test
mov
aas
rorb
pop
ret
rcl
cli
mov
fnsave
test
or
lock
xchg
aad
mov
adc
dec
call
jno
xor
icebp
icebp
jb
aas
pop
enter
and
cs
push
pop
mov
adc
lahf
pop
mov
xorl
scas
outsl
stc
add
insb
mov
jg
imulb
pop
mov
inc
adc
sbb
mov
in
cmp
sbbl
sti
call
add
mov
mov
and
sub
daa
enter
lods
lods
dec
sbb
fdivp
jle
in
push
cmp
cmp
mov
add
rolb
mov
push
jnp
adc
pusha
or
mov
pop
rcr
cmpsl
ss
mov
lock
sbb
das
adc
mov
add
lods
pop
hlt
js
dec
push
pushf
cmp
add
jge
out
sub
cmp
pusha
clc
jb
push
in
xorb
into
push
xor
sarb
or
icebp
repnz
rol
je
arpl
rolb
mov
adc
addr16
pop
and
xor
sbb
mov
arpl
mov
jno
jbe
pop
jns
in
mov
lea
aad
mov
or
aas
xlat
push
subb
pushl
mov
xor
inc
pushl
sbb
aad
repz
and
ds
fnstenv
push
adc
fcmovu
push
in
xchg
mov
repnz
test
pop
lret
je
jmp
mov
jg
pop
mov
call
jg
or
ljmp
dec
add
ret
mov
sbb
add
cmc
test
insb
sbb
pop
jge
dec
or
jns
ret
fs
cmpsb
adc
push
push
jb
mov
shlb
add
cmp
in
jbe
cli
ja
cmp
and
scas
adc
mov
push
add
loopne
jo
push
sub
dec
bound
popa
and
mov
push
imul
jl
mov
mov
aaa
push
pop
jb
mov
push
aam
jns
cmp
fcomp
sub
aam
fiaddl
jnp
mov
insl
call
sbb
dec
push
insl
xchg
lcall
shll
in
test
pushf
jp
mov
mov
out
inc
ja
jae
xchg
test
test
jnp
unpckhps
imul
push
dec
pop
roll
ficomps
dec
xor
shlb
test
mov
loopne
fdivrs
scas
enter
ss
clc
mov
and
into
dec
push
or
lea
push
out
xchg
ds
mov
shrb
or
fnsave
insb
aaa
icebp
and
add
fdivs
jmp
icebp
jp
scas
aas
jae
test
ljmp
test
inc
pop
jno
sarl
iret
mov
push
push
sub
ficompl
ja
sarl
adc
mov
repz
push
nop
repnz
fwait
fdivr
pop
push
movl
and
push
cltd
sbb
mov
test
jle
cld
std
icebp
sbb
jg
mov
pop
dec
es
add
push
lods
or
mov
push
mov
jno
lahf
xchg
mov
push
or
imul
add
in
decb
xor
jae
or
cmp
jb
push
lods
lahf
popl
jp
push
push
mov
push
mov
pop
inc
lods
and
clc
outsl
imul
orl
sub
idivl
push
sahf
cmp
lcall
mov
mov
sbb
enter
sub
inc
in
dec
or
inc
adc
xchg
xor
xlat
mov
push
jno
push
xchg
push
mov
cmpsb
cmp
pop
js
or
push
add
pop
in
aam
inc
adc
push
fs
lods
cmp
add
jbe
outsl
dec
pop
out
jmp
or
and
mov
ss
in
scas
push
repnz
rolb
mov
loope
mov
aaa
fcomi
push
in
push
sti
iret
out
push
push
clc
div
out
pop
outsl
sbb
cmpsb
mov
sbb
jbe
dec
cltd
xor
inc
js,pt
push
mov
cld
mov
testl
rolb
insl
int3
das
cmp
movsb
mov
imul
sti
rorl
push
js
lret
and
xor
mov
and
adc
mov
daa
lods
and
cltd
mov
clc
xor
and
stos
adc
mov
push
and
leave
aad
mov
cltd
adc
loope
xchg
cli
movsb
push
xor
insb
xor
sub
sbb
jmp
mov
adcl
les
or
dec
rclb
dec
dec
jl
lds
xor
or
pusha
fprem1
sub
xor
fdivrs
jno
pusha
cmp
xchg
ret
push
sub
out
aam
jb
mov
sbb
push
push
xlat
inc
imul
mov
mov
std
arpl
jns
pusha
mov
in
nop
addr16
outsb
sbb
lret
icebp
sub
pop
fnsave
sub
jb
int
or
lcall
insb
out
les
dec
int
adcl
and
mov
cmc
test
push
jae
push
jbe
imul
sar
inc
test
sub
gs
packuswb
dec
mov
xor
orb
dec
rolb
and
mov
sbb
dec
sbb
rolb
mov
push
ss
in
add
leave
cmp
test
cmp
stos
dec
in
dec
imul
pushf
ficoms
aas
push
or
jp
cmp
cmc
int3
or
adc
or
mov
adc
int3
pop
loope
inc
mov
push
test
push
shlb
pusha
mov
pop
jb
testb
fs
add
mov
push
xchg
loopne
lahf
jl
sub
outsb
repnz
lods
jge
popf
inc
test
inc
sub
dec
stc
roll
sbb
sub
xchg
mov
popl
or
or
insl
cwtl
mov
mov
xchg
lea
scas
sahf
inc
adc
jbe
cwtl
mov
pop
cmpsb
popf
dec
add
lods
adc
loope
xchg
push
or
lret
or
fwait
test
cmp
mov
rol
adc
mov
xor
aas
out
add
gs
aam
push
inc
cmp
cltd
or
shl
test
test
cld
sub
inc
in
add
sti
ret
sbb
pop
fnsave
pop
dec
enter
and
sub
mov
test
jg
scas
rcrl
mov
cmp
out
mov
sarl
jbe
int
movsl
aaa
mov
movsl
mov
jp
mov
mov
pusha
or
push
cwtl
cmp
enter
std
sbb
and
dec
sub
lret
push
mov
pushf
in
out
mov
ret
mov
cmp
rcll
add
push
ud1
jno
jle
and
sbb
in
ljmp
jg
mov
loope
xor
mov
jnp
mov
and
mov
mov
insb
dec
and
test
and
push
frstor
js
xchg
sub
frstor
inc
and
jmp
adc
or
jne
adc
fs
addr16
pop
and
cld
xchg
push
pop
mov
ret
cmpsl
mov
jmp
jo
jb
inc
in
roll
cmc
arpl
inc
mov
push
add
inc
xor
push
hlt
sub
aam
xchg
mov
jmp
sbb
push
pop
out
fcomps
das
mov
fadd
push
stc
enter
push
sti
cmp
sti
or
pop
js
fcomi
push
mov
cmp
emms
mov
jecxz
jne
pop
ss
dec
outsl
jmp
fists
cs
jae
and
inc
push
imul
mov
mov
aad
out
mov
divl
rclb
add
stos
scas
or
dec
lea
xor
mov
outsl
dec
sbb
pop
incl
sahf
pop
ret
enter
ss
mov
jecxz
inc
pop
pop
xchg
ret
or
pop
ja
popa
dec
data16
out
xor
fcmovnu
das
and
and
lods
cmp
mov
call
dec
fcmovnb
jne
testb
push
sub
cmp
cmp
and
mov
lods
fdivrp
xchg
fiadds
in
dec
icebp
xchg
jle
loope
push
mov
jmp
test
mov
xor
addr16
test
aad
jo
repz
or
push
mov
mov
mov
cmp
adc
and
ljmp
fidivrl
or
ror
loope
popa
ret
dec
xchg
test
pop
inc
pop
out
js
in
aam
mov
sub
mov
aas
mov
dec
xchg
into
fdivs
insb
or
and
jo
shrb
jl
adc
cs
dec
push
jae
xchg
std
js
push
jecxz
push
adc
push
rol
je
in
add
and
popf
mov
test
push
push
mov
push
xor
div
jb
nop
or
shll
cmc
nop
test
add
stos
inc
out
pop
xchg
pop
xchg
cmp
mov
mov
push
cmp
mov
ljmp
out
and
inc
and
aad
sub
les
sbb
mov
xchg
decb
dec
int3
and
sub
add
outsl
xor
xor
adc
and
add
outsl
jmp
xor
mov
mov
int
lods
cmpsl
popf
push
testl
xor
mov
cmp
imul
out
stc
imul
int3
inc
aam
xor
pop
loop
mov
jl
ss
test
pushf
ds
and
xor
negb
pop
push
mov
cmp
mov
xchg
mov
push
cmc
xchg
mov
pop
xchg
xchg
adc
adc
pop
inc
jb
add
or
fcmovnb
pop
pop
cmp
orl
sub
or
add
aad
sbb
pusha
dec
cmp
fcomp
push
dec
and
cmp
leave
mov
gs
pop
and
in
mov
cmp
or
fldenv
mov
inc
ss
xor
and
aam
add
and
frstor
cmp
lret
or
scas
jl
lea
pop
pop
push
adc
icebp
cmpsb
std
xor
rcrb
cmpsl
mov
mov
cmpsb
add
mov
pop
int3
sub
mov
mov
and
test
imul
fisttps
jne
dec
add
mov
xor
ja
mov
imul
sbb
push
mov
inc
pop
aad
divl
adc
dec
mov
andl
into
loop
pop
loop
das
test
dec
xor
notl
scas
xor
add
jns
cli
popa
lock
mov
xor
mov
xchg
hlt
ret
pusha
aas
cmpsl
add
fs
cmp
imul
mov
inc
fcmovu
ficompl
mov
pop
popf
push
push
fldcw
cld
mov
adcb
cltd
aad
popf
pop
test
mov
out
jo
daa
push
fcoms
loop
andl
mov
pushw
jg
out
cmpsl
mov
add
lods
ret
vaddps
jge
sarl
shlb
xchg
out
jnp
movsb
std
xchg
lcall
lds
movsl
push
mov
fnstsw
imull
cmc
test
gs
push
push
jl
add
lods
jge
out
jae
mov
xlat
incl
fcompl
pop
xchg
dec
sbb
xorb
cmc
ljmp
in
jo
push
adc
out
test
mov
mov
sar
mov
inc
jge
rcrl
adc
sbb
into
clc
pop
shlb
stos
pop
sbb
lret
or
je
sarl
popf
out
dec
mov
push
and
fstpl
cmp
stos
sbb
test
sbb
push
pop
mov
stos
push
add
adc
xchg
shl
cmp
call
inc
rorl
insb
and
inc
mov
lock
fistpll
mov
add
out
pop
in
push
iret
mov
jmp
push
jmp
rolb
push
lret
mov
ss
mov
pop
adcb
arpl
cmpsl
cld
mov
pop
cld
ret
xchg
add
xchg
add
mov
adc
lret
lds
sti
lock
adc
fstl
test
and
push
nop
pop
jle
ror
or
xor
hlt
jp
lret
mov
movsl
adc
aad
ds
mov
int
clc
lock
rcr
push
in
mov
xchg
ficoms
imul
mov
fldt
fcomp
shrl
jnp
mov
push
add
imul
lcall
jle
popf
jmp
sahf
mov
add
fdivrl
cltd
sbb
xor
mov
fs
sbb
mov
repz
mov
stos
imul
sbb
enter
test
std
das
xchg
popa
push
loopne
push
jp
xchg
mov
mov
mov
sub
mov
aas
cwtl
call
cltd
xchg
call
xchg
mov
dec
jg
add
mov
cmpsb
mov
push
leave
js
sbb
xor
cmp
inc
jnp
jle
scas
mov
fdivr
call
movsl
mov
jl
push
xchg
ljmp
lock
sub
loop
iret
scas
pop
push
fidivrs
inc
je
out
ret
cli
clc
mov
daa
out
shlb
mov
int3
cmp
xlat
insl
fisttpll
into
mov
sahf
clc
mov
in
jb
add
loop
sti
sub
sbb
sub
add
mov
cmp
and
mov
movsb
jno
jg
call
rcrl
pop
sbb
or
mov
jo
mov
stos
dec
jb
lahf
pop
stos
enter
xchg
je
test
ret
push
es
aas
aad
mov
cld
mov
push
add
loope
outsb
fs
push
loopne
test
pop
mov
jno
dec
sub
popa
stc
adc
ret
mov
sub
popa
sbb
nop
xor
xchg
sbb
or
push
leave
or
into
pop
cli
call
mov
clc
xlat
jl
dec
push
leave
fildll
aad
aaa
loope
or
xor
in
xchg
leave
cld
sbb
add
xchg
movsb
std
ja
loopne
adc
sbb
mov
repnz
sub
cmp
jns
fbstp
fimuls
pop
and
add
sub
mov
jo
push
mov
mov
push
imul
xchg
sahf
mov
lods
out
shl
cmp
jmp
mov
aas
lcall
xor
popa
inc
int
and
push
sbb
and
movsl
mov
pop
cld
cmp
mov
andl
mov
add
fdivrl
cmp
sub
or
pop
jle
jmp
lock
xchg
pop
push
test
sbb
or
push
cmp
xchg
adc
sub
inc
scas
outsl
cmp
mov
xchg
je
ret
sub
jns
outsb
and
loopne
add
scas
clc
and
mov
adc
push
das
mov
jb
fisttpl
jae
lock
lret
call
push
push
rcr
jno
cli
test
insb
js
dec
sbb
data16
cmp
sbb
movsb
mov
cmpl
sbb
pusha
repz
sub
sbb
sub
icebp
jge
cwtl
inc
shll
loop
out
aaa
daa
adc
das
insl
push
mov
test
xchg
xchg
jge
sahf
cmp
pop
pop
mov
in
mov
inc
arpl
iret
fstpt
jno
iret
mov
clc
in
mov
popa
xor
dec
push
mov
mov
mov
push
pop
mov
in
cmpsb
mov
in
ss
fs
stc
fs
rorb
and
push
dec
jo
test
mov
lea
push
xlat
push
in
bound
xor
sub
add
pop
in
mov
fdivl
pop
xchg
mov
adc
adc
jns
adc
xchg
xchg
mov
pop
test
loope
ret
out
lahf
push
clts
and
pop
mov
xlat
xchg
shl
adc
xchg
lcall
lods
and
outsl
cltd
repnz
lds
es
pop
out
push
incb
test
jae
jg
dec
data16
adc
sbb
dec
mov
dec
sti
xor
mov
add
sub
rcrb
mov
jae
jae
xchg
jne
jbe
das
stc
movsl
rorb
fs
aad
ret
and
dec
jae
in
ret
lahf
dec
xchg
lahf
mov
orl
mov
jnp
mov
push
adc
adc
jo
nopl
lahf
push
mov
inc
loope
mov
or
cmpsb
xor
adc
in
psllw
sub
add
cwtl
and
push
sub
xchg
cli
leavew
insl
leave
pop
sub
push
cmc
aad
jmp
pop
mov
inc
in
or
addr16
and
add
stos
outsb
pop
ds
repz
fidivl
mov
in
add
sub
adc
mov
popf
loopne
and
icebp
and
stc
jae
leave
call
test
orb
sub
pop
lods
mov
pop
out
movsb
and
aas
cmp
push
or
push
mov
test
scas
dec
movsl
enter
jbe
aas
insl
clc
push
jns
stos
jl
xor
lods
mov
rcrl
clc
stc
add
and
shll
dec
je
push
fwait
shll
iret
leave
popa
cs
xor
mov
cmpsl
insb
cmpsl
mov
mov
push
movsl
push
xchg
scas
xor
out
je
cmovle
lods
jnp
sub
pop
mov
fdivl
sub
inc
fs
addr16
outsl
fcomps
mov
rclb
in
outsb
jne
push
daa
mov
xchg
enter
xchg
xchg
out
pop
mov
pop
dec
in
test
sbb
sbb
mov
loope
pop
gs
fwait
rclb
xor
cmp
iret
inc
jns
scas
pop
mov
and
jecxz
fcoms
mov
mov
mov
inc
aad
cmc
xchg
jmp
add
pop
push
lock
xlat
sub
rolb
push
xor
stos
in
sbb
int
data16
inc
clc
mov
push
daa
loope
mov
out
push
or
push
jb
js
enter
out
scas
je
jl
push
lock
lahf
push
das
je
xchg
or
xchg
enter
inc
hlt
ret
xchg
leave
jne
and
xor
out
sub
xchg
sbb
pop
xchg
xchg
jge
flds
pop
mov
out
roll
aaa
sbb
loope
jns
cltd
jne
cltd
or
cmc
add
icebp
xchg
je,pn
sub
push
cmp
into
push
adc
lcall
fcompl
inc
shl
fs
outsl
pop
and
jle
or
pop
rclb
ljmp
push
sbbl
adc
sub
cmpsl
or
pop
push
nop
lea
int3
sub
imul
pop
scas
mov
push
sbb
cli
aam
cmp
add
dec
into
cld
sub
jns
add
and
mov
mov
lods
imulb
add
ss
jecxz
mov
sbb
daa
jb
or
add
sbb
and
add
out
loopne
mov
xor
xor
popw
in
js
gs
pop
aad
dec
push
lahf
push
mov
pop
test
jae
scas
push
add
in
lods
imul
push
mov
push
xchg
jecxz
loopne
addr16
inc
push
dec
repnz
in
test
or
mov
rclb
cmpsl
loopne
adc
cmpsb
cmpsb
mov
pop
push
jmp
test
cmp
fucom
test
sbb
jge
out
sub
out
ret
imul
jb
clc
mov
mov
mov
cmp
aam
paddsb
dec
nop
add
dec
sbb
and
pushf
jae
inc
loop
jle
cmpl
data16
jo
cmc
ja
fs
pushf
push
jp
call
int3
jmp
xchg
lcall
push
mov
cld
sub
adc
push
xor
add
xor
lahf
jne
mov
dec
mov
dec
das
ficomps
loopne,pn
fs
popf
lret
lret
out
sahf
orl
inc
das
enter
lret
push
mov
repnz
or
pusha
je
out
sbb
sub
pop
sub
ljmp
lret
inc
outsb
aas
nop
fcmovb
inc
and
jnp
ret
movsl
out
or
stos
jl
into
or
sbb
sbb
adc
add
jo
arpl
and
gs
add
lock
std
movsb
in
in
mov
add
sti
rolb
push
mulb
lahf
xlat
pop
ret
in
sub
dec
sarb
pop
out
popf
or
adc
rcr
inc
and
int3
loop
cmp
or
bnd
pop
ret
jne
or
enter
adc
adc
add
iret
fsin
out
outsb
lock
ret
repz
pop
insl
popf
repz
out
cmp
nop
mov
in
adc
dec
movsl
clc
push
loopne
mov
scas
ret
out
xchg
ljmp
mov
adc
fwait
sub
and
pop
dec
mov
fwait
push
xor
xchg
and
stos
pop
push
add
test
cmp
and
add
arpl
and
jns
sbb
ds
out
mov
mov
lahf
mov
mov
pop
inc
cmp
jns
fs
loop
testb
pop
adc
sbb
jbe
jnp
mov
mov
adc
fstl
or
idivb
mov
int
inc
dec
push
jl
cmc
add
cmp
pop
int3
aam
jns
data16
xor
pop
dec
ret
mov
cmc
into
clc
inc
ja
jo
xchg
adc
pop
jns
or
sub
jle
mov
mov
cmpsl
gs
repz
jmp
adc
jmp
out
aaa
mov
stos
pop
int
subb
jo
push
pusha
stos
dec
sub
xlat
movsl
cmp
mov
fs
cltd
mov
pop
jae
int
and
cltd
fsubl
adc
aas
xor
ljmp
out
popa
cld
sbb
test
lahf
mov
rcrl
mov
scas
jb
fwait
outsb
jmp
push
xor
jg
int3
or
gs
popa
mov
xchg
jp
jo
xchg
shll
inc
ljmp
xor
cmp
and
jbe
xchg
int3
mov
cmp
push
cmc
mov
repz
insl
test
pop
mov
test
insb
aas
pop
cld
in
inc
pop
jno
bound
aad
dec
pop
or
je
mov
mov
sbb
js
cmp
fistl
dec
clc
xor
sub
cmp
mov
push
icebp
and
dec
push
mov
pop
in
sub
int
lock
fnstcw
mov
lods
das
imul
imul
and
fidivrs
sarl
mov
dec
xchg
inc
push
mov
std
jge
mov
push
clc
jb
push
lcall
test
add
fsubrs
mov
adc
adc
jge
cmp
rorb
inc
inc
arpl
mov
iret
push
xchg
in
inc
das
add
int
jle
stos
movsb
and
jg
mov
mov
and
add
adc
shlb
mov
xchg
in
out
fcomip
dec
pop
adc
pop
nop
out
adc
mov
mov
pushf
pop
push
mov
jo
sbb
imul
mov
inc
push
out
xor
cmpsl
mov
dec
xorl
push
shl
icebp
jb
sahf
inc
mov
sub
sub
les
mov
or
cmp
cmp
xor
jle,pt
fiadds
xchg
adc
xor
inc
jmp
pop
sbb
pop
cmp
stos
sbb
addr16
fbld
mov
or
out
jge
mov
testb
dec
or
int
cmp
pop
sub
mov
addr16
jp
mov
dec
or
pop
adc
mov
xchg
or
inc
cmp
push
xlat
sub
mov
mov
movsl
jnp
dec
inc
pusha
add
in
sub
pop
je
pop
loopne
lahf
repz
jne
push
add
rcll
fisttpl
add
add
cmp
mov
fisttpll
sahf
pop
imul
xchg
testb
repnz
jns
xchg
cmp
int3
out
jns
daa
cmc
jl
es
mov
xor
ja
aaa
push
ljmp
adc
cmc
insb
xchg
sar
popf
or
ret
out
dec
repnz
ret
add
aaa
out
push
add
xor
leave
stc
nop
lret
nop
insb
hlt
lea
xchg
scas
movsl
inc
testl
outsl
adc
clc
pusha
cld
test
and
sbb
pop
inc
adc
add
imul
mov
mov
call
xorb
cltd
adc
xor
adc
pop
sub
pop
outsl
mov
mov
js
dec
mov
mov
lods
out
mov
xchg
hlt
dec
or
call
in
mov
fucomip
pop
shll
xchg
in
dec
mov
jp
mov
mov
hlt
mov
arpl
cmc
push
push
pop
jp
cli
cmp
stc
nop
in
test
shlb
inc
lods
cs
mov
push
cmp
jb
inc
jno
jae
xor
pop
pop
push
mov
adc
and
xchg
adc
mov
leave
sahf
ret
and
dec
add
jge
mov
cmpsb
xor
ret
cwtl
movaps
jl
cmp
add
inc
xchg
mov
test
jl
xor
jns
xchg
iret
mov
cmp
mov
loope
dec
aad
pusha
mov
fcmove
mov
lahf
pop
cld
or
mov
call
and
outsb
and
mov
cmpsl
inc
ljmp
mov
rcrb
pop
jb
and
inc
mov
or
loope
add
push
xchg
add
pop
mov
cld
xor
in
cmpl
push
xchg
imul
xchg
pushl
pop
add
jne
imul
cmpsl
xchg
adc
adc
push
cmp
mov
or
xchg
gs
mov
in
outsl
faddp
jnp
mov
mulb
or
sbb
pushf
lods
lahf
dec
xchg
jbe
mov
dec
jecxz
push
add
or
daa
jmp
sarl
mov
test
xor
mov
stos
lahf
cmp
addr16
mov
or
inc
adc
js
fwait
xchg
mov
jno
les
outsl
outsb
inc
js
adc
pop
mov
push
fldt
and
daa
add
adc
and
fistpll
jmp
jecxz
mov
test
or
or
jl
lods
mov
scas
je
mov
cs
push
daa
inc
mov
xor
inc
fdivrl
jp
leave
je
das
out
pop
push
scas
lods
out
mov
movsb
mov
push
pop
imul
int3
jge
inc
and
push
lahf
pop
lods
mov
mov
cmp
dec
mov
sbb
or
push
insl
pushf
and
stos
pushf
stc
bound
push
fisubrl
aad
mov
lret
mov
push
pop
xor
xchg
xor
sbb
sbb
idivl
ss
push
rcrb
test
push
push
and
jb,pt
mov
pop
sub
and
jbe
cld
mov
add
scas
ja
dec
mov
xchg
xor
ret
popf
xchg
dec
or
cltd
popa
test
push
and
inc
ss
inc
loope
dec
out
imulb
pop
mov
lock
xlat
shll
adc
xchg
xor
jbe
pushf
fildll
mov
pop
addr16
xor
es
popa
call
sbb
mov
aam
xor
inc
push
add
addb
cld
lods
mov
int3
pop
add
or
push
js
inc
push
mov
mov
jecxz
ljmp
aad
setg
mov
cmp
cmp
fwait
sti
jae
pop
mov
push
outsl
dec
xor
mov
xchg
xchg
mov
dec
sahf
add
ret
int3
xor
nop
jae
insb
push
jecxz
jns
int3
sbb
cli
test
cli
push
jl
in
xor
cmpsb
mov
lahf
xchg
push
jmp
dec
fbld
mov
push
roll
dec
addr16
test
push
dec
and
dec
roll
fistl
sub
js
inc
jno
fstpt
sbb
xor
cli
outsl
adc
in
jnp
mov
loop
mov
stc
iret
aas
jae
sub
push
inc
pop
mov
std
les
sbb
xchg
in
test
lds
lret
sbb
inc
es
adc
cmc
or
gs
in
xchg
fisubl
pop
and
leave
int
inc
jmp
insl
xchg
lret
pop
jl
cmpsl
xor
push
pushf
repz
jo
cltd
or
adc
stc
jo
aam
and
int3
xchg
mov
mov
syscall
mov
cmc
js
popl
push
movsb
xchg
clc
mov
int3
pushf
push
sbb
jbe,pt
jmp
fnstenv
je
mov
dec
notb
shlb
iret
fisttpl
cwtl
xor
mov
xchg
xor
jle
xor
cmp
stc
fsts
pop
push
jle
sarl
fimuls
lods
into
xor
push
aaa
outsl
hlt
or
pop
mov
movsb
pop
pop
shl
push
xchg
cmc
pop
ljmp
scas
jle
fldenv
cli
add
mov
popa
adc
hlt
pushf
inc
pop
ja
jp
lcall
out
sti
data16
mov
mov
jmp
mov
pop
push
mov
sar
push
imul
loopne
push
in
push
mov
iret
pop
fimull
das
sbb
shr
xchg
pushf
addb
mov
movsb
imul
fwait
xchg
or
dec
out
cmpsb
cmpsb
roll
xchg
push
popf
push
dec
inc
arpl
cmp
sub
mov
gs
cmpsl
jo
jecxz
ja
cmpb
mov
mov
cmp
mov
sbb
pop
mov
imul
mov
dec
pop
dec
fmul
arpl
sarb
out
dec
inc
aas
sbb
jl
and
and
test
jecxz
gs
sbb
inc
stos
adc
cli
mov
xchg
jg
mov
mov
jmp
push
rol
hlt
shlb
cmpsl
stc
imul
adc
movsb
dec
ljmp
dec
ja
mov
push
ret
pop
adc
andps
xchg
inc
inc
jle
mov
push
adc
mov
mov
sbb
test
push
les
add
or
imul
decb
cmpsl
dec
mov
ss
repnz
std
loopne
negb
pop
bound
dec
aaa
sbb
add
pop
mov
insb
xchg
movsb
push
dec
mov
jg
xchg
neg
mov
shll
xchg
lds
es
dec
pusha
mov
test
gs
insb
and
push
and
popa
mov
mov
sbb
mov
nop
jecxz
sbb
out
mov
mov
lea
les
xchg
decl
decl
sub
lret
mov
xor
imul
lds
xchg
mov
nop
addr16
sarb
test
cli
gs
xor
jl
test
or
push
mov
push
in
roll
loopne
dec
push
call
js
fiadds
popa
data16
in
insl
ficoml
in
pop
mov
bound
push
push
jp
imul
call
mov
adc
leave
sbb
mov
cmp
push
or
lods
inc
shll
scas
pop
pop
pop
xor
sub
lods
inc
inc
xchg
hlt
insb
lods
int
out
sub
test
cmp
mov
jnp
scas
mov
mov
fstl
aad
mov
mov
repnz
xchg
adc
mov
xor
xlat
outsl
mov
loop
xchg
xchg
pop
mov
gs
jbe
and
jp
xchg
int
and
inc
loop
sti
imul
push
cli
stos
and
faddl
jg
dec
shlb
adc
andl
aam
dec
inc
iret
out
pop
icebp
out
mov
div
and
cmp
and
aaa
aad
xchg
sub
inc
inc
fsubrl
and
adc
adc
mov
out
in
sbb
outsl
test
adc
and
jp
inc
jmp
test
push
jnp
adc
ret
insl
cmp
lock
xchg
dec
mov
out
vmwrite
es
xor
fnstcw
cli
out
push
in
adc
or
or
mov
imul
lock
testb
push
lcall
add
mov
das
push
aam
mov
mov
pop
fstpt
add
imul
sbb
imul
icebp
sbb
sub
pop
pop
fwait
xchg
pop
jle
out
fadd
hlt
mov
hlt
test
mov
dec
jp
pop
inc
clc
cs
mov
inc
arpl
leave
and
and
insl
push
inc
add
dec
mov
jbe
testl
fucom
push
add
fwait
pushaw
pop
xlat
movsb
mov
mov
js
mov
fs
push
dec
les
jo
dec
lret
nop
fwait
mov
dec
cli
jl
push
aam
mov
test
mov
frstor
add
mov
push
psllq
lret
loopne
arpl
cmp
jnp
dec
xor
xchg
sub
xor
and
push
not
or
inc
rorl
scas
je
inc
std
adc
shl
add
sarl
pop
and
jmp
ja
stos
lret
pop
inc
cmp
pop
ds
cmp
xor
push
test
imul
mov
sbb
ficoms
nop
rorb
fisttpll
dec
in
in
int3
test
sub
scas
in
push
pusha
adc
mulb
sbb
pop
mov
in
subb
fwait
jg
addb
sbb
push
sbb
test
das
jg
ja
out
mov
das
fs
stos
mov
mov
or
inc
sub
and
xchg
lahf
jne
jecxz
jl
lods
cltd
pop
jecxz
adc
ret
inc
int
sarl
stc
lea
mov
bound
mov
lods
fistl
das
roll
fcomps
jb
xchg
mov
inc
daa
mov
outsb
adc
mov
xchg
jae
mov
rolb
jne
or
fisttpll
xor
scas
fisubrl
mov
fcmove
mov
cmpsl
inc
mov
push
jae
jle
jae
push
insb
stos
pop
leave
mov
xlat
xchg
imul
hlt
mov
cld
outsb
sti
and
cmp
mov
mov
inc
mov
add
mov
movsl
nop
xchg
stos
jecxz
mov
test
aad
push
push
or
pop
daa
imul
xchg
or
jg
xorb
dec
pop
aaa
pop
out
cmpl
push
adc
add
mov
leave
pushf
or
rcrb
lcall
lret
fisttpll
aad
mov
sti
push
xor
fyl2xp1
sub
cmpsl
xchg
pop
cltd
mov
jle
test
and
sbb
in
lock
inc
aaa
mov
xor
iret
mov
pop
mov
and
dec
lods
sub
scas
mov
inc
cmp
mov
gs
inc
mov
jmp
jecxz
add
and
scas
stc
push
lds
xchg
enter
dec
push
scas
mov
inc
scas
push
jmp
sbb
sbb
pop
fucomp
subb
sbb
mov
cmpb
pop
ljmp
inc
push
int
or
mov
insl
pop
mov
adc
rolb
xchg
sbb
pop
mov
jne
daa
lret
jnp
pop
movsb
inc
add
pop
and
and
push
cmp
jge
popf
por
and
int
fdivl
shr
xor
adc
jle
es
sarl
fdivr
add
jle
cmp
lret
cmp
leave
das
je
or
test
inc
sbbl
stc
xchg
xchg
test
and
aad
cld
gs
xor
mov
insl
push
add
gs
mov
in
push
xor
das
outsl
add
jge
movsb
popaw
lcall
gs
push
dec
jg
mov
push
fs
les
jns
arpl
cmpb
sbb
mov
jbe
xchg
fdivrs
xchg
popf
pop
mov
jge
mov
pop
cld
jne
pushf
mov
popa
xchg
loop
jmp
in
rcrb
mov
mov
into
push
or
popf
inc
mov
stos
iret
out
xor
adc
in
or
or
movsl
sarb
jbe
test
into
push
ja
daa
in
cmpl
dec
jne
clc
bound
dec
or
or
mov
or
rolb
sbb
imul
push
adc
ret
jb
sub
jge
es
in
insb
mov
cmpb
add
adc
mov
sub
sti
jne
dec
dec
sbb
xlat
shlb
jecxz
arpl
push
test
std
adc
ss
jne
in
lods
js
mov
mov
pusha
or
jmp
inc
out
sub
mov
es
mov
mov
fwait
jecxz
inc
inc
dec
mov
xchg
addr16
pop
mov
mov
and
jno
jne
and
sarl
jb
in
mov
pop
int
adc
loop
add
xchg
xchg
pop
xor
add
vmaxps
and
cwtl
or
out
loopne
mov
jle
mov
js
mov
mov
loope
daa
hlt
fsubrp
and
das
xlat
push
js
and
ficoms
inc
or
mov
out
ss
icebp
hlt
xchg
mov
mov
cmp
mov
sbb
xchg
xchg
fistl
xchg
clc
ja
ret
and
test
ret
mov
sti
dec
mov
popf
dec
jmp
aaa
out
pop
mov
pop
roll
jno
imul
mov
out
cld
cmp
or
dec
and
loopne
fidivs
sti
and
daa
sub
int
gs
mov
mov
or
adc
cmp
xchg
outsb
shlb
inc
dec
ds
mov
push
mov
add
pop
ljmp
sub
pusha
push
dec
insb
xchg
call
fmull
inc
mov
and
loopne
dec
pop
adc
loopne
outsl
adc
adc
pop
les
adc
dec
and
outsl
jo
repnz
ds
push
test
insb
xchg
cmp
add
outsb
fidivl
scas
jae
addr16
xor
xchg
and
sahf
sti
xor
js
movsl
mov
rcr
xchg
push
xchg
xchg
hlt
xchg
inc
inc
mov
js
in
sub
xor
sbb
inc
or
andl
push
cwtl
jno
or
jae
mov
idiv
fistpll
or
int3
jg
pop
mov
sbb
bound
sbbb
cmp
ss
orl
cmpsb
lcall
or
clc
jno
das
cmp
out
je
repnz
sarb
iret
in
cs
mov
test
jp
popa
fisttps
das
push
mov
in
outsb
xchg
sub
mov
mov
scas
in
pop
mov
cmp
sub
adc
out
cld
int
movsb
cltd
pushf
mov
add
cltd
in
loop
out
lods
sub
sar
xchg
fwait
scas
mov
push
pop
dec
pusha
xchg
enter
cmp
in
loop
adc
mov
mov
or
stc
lods
mov
push
ljmp
cmp
pop
fsubr
ret
add
cmp
imul
jmp
sub
inc
push
add
mov
lret
sub
adc
xchg
pusha
aaa
pop
push
rorb
mov
jge
ds
xchg
test
stc
mov
mov
loopne
mov
je
adc
sbb
rcr
mov
test
or
mov
leave
data16
xchg
inc
pop
and
xchg
cmp
dec
adcl
mov
les
sti
rol
fisubs
aam
pop
cmpsl
cmp
pusha
pop
clc
xchg
xorb
ja
imul
pop
dec
arpl
pop
in
ljmp
test
roll
outsl
decb
cmp
or
fisubl
outsl
pop
cmp
fimuls
icebp
hlt
test
lret
in
fnstsw
stos
mov
lods
mov
call
inc
push
dec
aam
data16
jg
mov
or
fnstenv
bound
dec
sbb
mov
dec
addr16
dec
xchg
jns
dec
popa
in
sbb
mov
repnz
rcrb
scas
test
and
sub
ss
mov
add
fsubp
push
scas
jne
lret
mov
sbb
pop
sub
jnp
iret
sbb
push
in
stc
imul
int
mov
gs
mov
adc
and
insl
fucomi
jae
test
xchg
cmp
mull
or
push
sar
sbb
xchg
pop
mov
mov
xor
repz
jecxz
sub
hlt
lahf
cmc
cmp
gs
pop
call
fstpt
dec
jge
mov
hlt
dec
xchg
sub
xor
cmp
pop
pop
jns
test
xor
stos
mov
mov
arpl
xchg
mov
mov
clc
and
enter
push
mov
mov
push
jmp
cmp
rol
stos
inc
movb
jecxz
in
mov
mov
pop
adc
std
jo
or
lds
sbb
mov
and
xor
cmp
xchg
push
adc
outsl
xchg
mov
aad
sbb
loop
push
xchg
xor
or
push
mov
pushf
lcall
stos
push
jnp
nop
jmp
adc
scas
xor
lods
sbb
es
or
xor
je
sbb
add
jae
or
faddl
sbb
jp
negl
ret
cwtl
sbb
testb
lods
sbb
inc
jnp
lods
xor
arpl
test
dec
jle
lea
pop
adc
cmp
mov
mov
mov
mov
fldt
xor
mov
cmp
ds
call
stos
jle
lds
dec
jb
sbb
lret
mov
lret
fsubrs
ret
loop
lock
jecxz
xchg
lods
mov
adc
fdivs
xchg
cmp
les
sahf
aad
and
adc
jmp
jmp
pop
jno
out
repz
arpl
cmp
or
jb
mov
inc
pop
jmp
das
xchg
push
mov
test
test
cwtl
jl
inc
jb
cmp
mov
clc
xor
mov
sti
sbb
fnstenv
push
shr
outsb
xchg
jmp
mov
push
leave
inc
std
bound
jnp
and
repz
or
xchg
enter
inc
lds
mov
inc
test
push
xlat
push
sub
mov
sub
jecxz
mov
out
aam
nop
xchg
hlt
sub
cmp
inc
test
inc
rolb
and
inc
xor
mov
mov
mov
jbe
inc
pushf
imul
pop
in
dec
mov
sub
or
push
xor
push
call
dec
sbb
sub
cs
pop
pop
repnz
jnp
clc
insl
je
mov
pop
adc
popf
sbb
mov
inc
cwtl
mov
mov
ljmp
push
loope
stos
inc
arpl
inc
inc
push
and
loopne
addr16
sbb
stos
daa
xor
sbb
es
mov
inc
sub
outsb
call
in
nop
out
ds
lods
nop
sbb
xchg
xor
lret
cmp
sub
adc
sub
out
and
test
cmp
test
fidivl
cs
mov
in
add
sub
adc
punpcklbw
inc
and
loope
dec
sub
std
je
inc
inc
jmp
in
ljmp
aas
jnp
inc
mov
repz
or
ljmp
inc
mov
unpckhps
inc
or
push
leave
std
movsl
aaa
out
cmp
mov
ja
jg
push
adc
mov
rcrl
cmpsl
or
rcrl
cmpsb
sub
xlat
outsb
sub
and
xor
lds
add
sub
push
scas
je
jecxz
pop
xchg
jp
inc
mov
xor
xchg
mov
mov
xchg
jbe
test
testb
sub
xorb
ret
bound
mov
or
addl
mov
mov
add
scas
in
xchg
outsb
and
int3
pushf
mov
out
je
frstor
test
sbbb
pop
cmp
fwait
add
popa
loope
add
xchg
sub
mov
push
and
dec
and
push
adc
outsl
fildl
adc
inc
fiaddl
sahf
push
sbb
aas
push
sarb
ret
aad
dec
inc
out
push
add
mov
dec
iret
in
popf
mov
xchg
sbb
push
inc
mov
dec
lea
push
jge
sbb
movsb
adc
mov
arpl
mov
stos
push
mov
xchg
or
mov
xorb
aaa
and
cwtl
adc
xchg
cmpsb
sbb
fldenv
mov
adc
movsb
js
addr16
xchg
out
pop
jge
lds
sub
xchg
adc
mov
adc
sub
adc
lret
and
std
cli
in
sbb
aad
popf
ds
fs
sub
inc
pop
int3
rol
mov
in
out
je
jecxz
push
negl
sub
pop
push
lock
das
xor
push
cmp
pop
insb
inc
faddl
or
mov
stos
xchg
andb
ja
sub
mov
bound
push
adc
cmp
mov
jg
cmp
mov
adc
mov
mov
pop
sti
pop
add
or
ja
iret
sbbl
out
mov
call
leave
in
ja
mov
mov
ret
jl
or
cmpsl
mov
ret
adc
add
mov
sub
adc
shlb
aas
xchg
sub
pop
add
adc
xchg
mov
mov
inc
mov
sub
dec
inc
mov
mov
inc
mov
pop
shlb
imul
fsts
lods
inc
xor
addr16
in
repz
sahf
jnp
add
xchg
xchg
mov
push
int3
fwait
vmovups
sbb
jbe
rol
lret
ficoml
int
and
push
or
cmc
enter
or
ret
mov
lahf
mov
repz
xor
imul
sbb
call
sar
rorb
loopne
xor
and
mov
dec
cmp
xor
mov
cmc
jns
dec
les
xor
adc
js
adc
imul
push
adc
iret
inc
iret
mov
mov
sub
push
gs
mov
and
and
pushf
aaa
and
scas
jle
imul
mov
dec
rcr
cmp
repnz
pop
scas
mov
xchg
das
xchg
test
xchg
into
mov
adc
call
and
xor
jnp
repnz
xor
inc
rolb
stos
lods
push
aaa
xchg
aas
xor
xor
ja,pt
inc
rol
rorb
aam
and
out
ss
into
pop
ds
mov
push
in
in
into
push
leave
out
sbb
xor
cmp
push
push
sarl
or
and
xchg
and
and
ficoms
pop
push
out
data16
test
jbe
dec
popf
call
dec
inc
jnp
fisubrs
xchg
sub
fnstcw
sarb
pop
sti
int3
pop
xor
mov
dec
push
push
sub
dec
mov
jl
mov
pop
leave
or
out
mov
xchg
adc
push
popf
dec
lret
shrb
and
lahf
xor
in
movsb
out
aas
enter
test
sub
popf
loop
std
aas
fs
bound
outsl
mov
dec
nop
add
dec
push
mov
jmp
sahf
fisubs
sti
imul
push
stos
cmp
popa
out
mov
jb
mov
test
dec
sub
push
stos
mov
add
pop
cmp
xchg
push
pop
lds
fisubs
xor
pop
out
jnp
pop
fwait
xchg
jae
pop
inc
cmpb
push
inc
std
dec
xchg
in
js
pushf
hlt
jno
jl
sub
add
sbb
push
mov
mov
adc
and
jmp
fnstcw
mov
insl
add
iret
xor
dec
sbb
enter
and
sbb
std
sub
or
js
leave
stc
dec
cli
imul
push
cltd
fcomps
mov
sub
repz
push
sar
push
lea
scas
inc
lcall
and
adc
cli
xorb
mov
sub
mov
lea
je
xchg
int
std
fsubs
fld
sub
int3
mov
pushf
xchg
pop
jl
adc
mov
pop
mov
inc
jle
jb
cmpl
pop
jnp
cmpb
xorb
icebp
mov
shl
test
icebp
add
mov
or
bound
xlat
out
adc
cwtl
das
sti
or
cs
push
les
jecxz
lahf
adc
aas
hlt
aaa
out
adc
in
mov
dec
cmp
ret
sub
addr16
push
sub
out
pop
sub
add
mov
xchg
pop
stos
inc
repz
lret
mov
dec
lods
push
pusha
mov
out
jne
inc
mov
cmp
mov
lret
stos
pop
push
sub
cmpsb
cmp
jnp
mov
fbld
inc
dec
inc
add
mov
xchg
cmp
adc
xchg
js
insb
pop
or
and
inc
cmp
xorl
sahf
inc
lock
outsb
xor
sti
fs
adc
mov
cld
ret
inc
sbb
mov
adc
loopne
push
popa
fdivp
dec
in
adc
imul
pop
mov
cmpsl
sti
fildll
imul
xchg
aad
pop
pop
enter
and
loope
sbb
test
sub
cmc
and
dec
lret
adc
stos
sub
mov
cmp
inc
cmc
adc
or
mov
cld
stos
jle
lods
inc
arpl
addr16
scas
imulb
sub
icebp
ja
sti
mov
stc
popa
cli
es
lods
test
mov
popa
loope
mov
adc
mov
jbe
stos
pop
xor
or
aad
lea
aas
pop
enter
lret
pop
imul
lahf
sbb
popf
or
mov
hlt
pop
das
pop
jecxz
inc
dec
fsubl
adc
es
inc
cld
xchg
out
sub
stos
aas
lret
pop
stc
leave
rol
dec
or
inc
jae
lret
enter
mov
outsb
orb
testl
push
xchg
mov
dec
ljmp
ja
frstor
test
mov
mov
insl
push
movsl
gs
fbstp
pop
pushf
adc
lock
sub
imul
fistpll
mov
jne
jb
pop
iret
add
popa
adc
jge
clc
mov
dec
in
sbb
jbe
rorl
pop
aas
fistl
add
mov
mov
shrl
pop
shll
movsl
cmp
push
pusha
mov
cli
imul
jmp
xchg
scas
mov
cmp
sub
roll
mov
sub
ds
inc
jg
nopl
pop
call
add
popa
test
sbb
jmp
paddsw
xlat
push
ror
sub
cwtl
in
mov
les
mov
xor
in
mov
js
fildll
dec
cmpsl
cld
pop
pusha
scas
call
daa
mov
inc
pusha
sbb
in
aad
xor
dec
rcr
mov
or
in
push
sahf
xchg
loop
ret
sbb
and
jmp
adc
sub
push
loop
mov
pusha
xchg
das
jo
mov
pop
inc
int
bnd
nop
add
xchg
or
add
mov
push
aad
idivb
popa
and
jns
jl
mov
in
aas
notl
into
dec
jecxz
shll
sbb
repz
flds
into
mov
out
imul
cmpsl
push
roll
les
ljmp
mov
adc
scas
inc
pop
inc
adc
js,pn
outsl
je
push
jb,pt
js
int
cmpsl
adcl
test
add
mov
fisubrs
test
daa
dec
ret
add
mov
mov
stos
and
xlat
dec
mov
sbb
push
xor
popf
fs
imul
in
sbb
and
and
sbb
sub
mov
packssdw
dec
clc
fbld
fsubl
cld
shrb
out
fstpt
jne
daa
mov
pop
dec
aaa
daa
hlt
xchg
push
add
mov
xor
xlat
testb
sub
insl
arpl
push
jecxz
ds
ret
loop
ds
and
popf
movups
movl
in
xchg
sbb
push
sahf
sahf
test
aas
jmp
lods
dec
inc
mov
mov
mov
leave
ret
pushl
xchg
imul
mov
scas
lahf
dec
cmpl
leave
fcmovnb
out
lods
sub
push
xchg
fsts
and
sbb
mov
mov
xchg
or
cli
mov
pop
add
scas
pop
hlt
test
cli
mov
mov
loop
mov
inc
sbb
add
cmp
pop
inc
cmc
mov
mov
sbb
roll
add
jp
dec
lahf
daa
popa
aaa
stos
xor
or
pop
int
adc
ret
adc
stc
arpl
mov
loopne
mov
and
and
insb
dec
stos
mov
adc
nop
mov
push
mov
jmp
popa
xchg
mov
push
insb
jae
fisubrs
xchg
test
push
and
sarl
pop
rolb
test
pop
fdivr
into
loopne
dec
jbe
enter
cmp
cmp
jecxz
es
lock
ret
idivb
cwtl
mov
loop
xor
mov
leave
fists
cs
and
popl
xchg
test
popf
and
lret
mov
icebp
lods
and
or
push
hlt
sbb
jae
addb
pushf
pop
cmp
dec
dec
ljmp
mov
mov
in
scas
mov
insl
cs
push
ret
lcall
lret
push
faddl
in
lcall
push
sbb
call
dec
mov
xor
sbb
inc
pop
sbbl
mov
cmc
cli
dec
movsl
xchg
dec
cmp
out
mov
xchg
jg
pushf
push
movsl
xor
imul
hlt
push
shrb
out
rcll
xchg
adc
xchg
cmp
xchg
test
xchg
lods
lahf
insl
jl
imul
loopne
aad
mov
ret
pop
dec
loop
mov
push
cmp
cmpsl
mov
repz
cmp
cmp
sub
into
push
iret
and
aam
fwait
jge
push
dec
nop
xchg
repz
scas
lods
xlat
call
out
sets
jmp
std
std
cltd
in
rcrb
push
cmp
or
and
xchg
mov
sbb
dec
jne
test
mov
xchg
fdivl
mov
adc
sbb
inc
outsb
movsl
mov
jmp
xorb
movd
fnstenv
jg
movsl
in
out
es
xchg
bound
bound
outsb
lea
je
mov
mov
and
inc
stos
dec
inc
add
ljmp
lods
push
sbb
lret
dec
lret
push
icebp
insl
jb
vprotw
adcl
in
and
fsubrs
hlt
lds
jo
imul
pushf
jbe
push
aad
test
pop
push
sbb
pop
fcoms
xlat
leave
push
or
das
push
push
popa
ficoml
iret
cltd
xor
mov
lcall
inc
or
inc
cmp
repnz
ret
sub
dec
movsl
and
adc
pushf
pusha
sub
or
outsb
das
sub
lock
mov
add
lea
inc
jnp
test
add
lods
in
sbb
push
push
cld
push
push
and
add
mov
divb
pop
jge
push
or
cmp
shrb
add
add
pop
fstp
inc
out
cmp
sub
loop
sbb
ret
lahf
ret
mov
add
cli
cltd
add
insb
pop
jmp
pop
or
mov
sub
mov
cmpsl
adc
ss
push
loop
inc
shlb
push
add
xchg
sub
xorb
xchg
test
add
ja
mov
pushf
mov
pop
daa
inc
sbb
jbe
lock
jmp
out
jae
xor
sar
movsl
jae
lret
stos
fs
loopne
cmp
je
subl
push
push
inc
and
cmp
cmpsb
mov
andb
fstps
leave
or
fstpl
out
mov
pop
mov
inc
addr16
lock
mov
lahf
or
xchg
sbb
in
push
repnz
dec
in
mov
lock
pop
add
or
add
fimuls
jne
ret
mov
mov
adc
xor
pop
sbb
ljmp
fnstenv
stos
shrb
adc
in
mov
xchg
push
inc
pop
adc
jnp
stos
push
adc
das
mov
jle
cld
ret
cmpsb
negl
out
ret
push
fwait
dec
push
in
cmc
lahf
sub
pop
add
clc
in
push
pop
movsb
ret
xchg
out
xor
imul
mov
fimull
inc
or
inc
mov
jmp
or
sub
jo
or
sbb
pop
movl
insl
pop
in
dec
xchg
jp
inc
sbb
mov
mov
sbb
pop
int
out
mov
pop
jo
sahf
iret
push
xor
into
jne
jb
les
lcall
das
xchg
out
add
sub
sub
pop
scas
dec
dec
fs
dec
sbb
dec
sbb
add
mov
sbb
or
dec
lcall
xchg
out
xlat
push
xor
pop
add
sub
mov
das
adc
hlt
add
push
out
push
add
stos
cmp
lret
xchg
inc
cmp
pop
and
push
mov
nop
push
cmp
in
sbb
in
mov
mov
fisubrl
ja
shl
mov
shl
rcrl
sbb
int
in
xor
mov
fs
imul
pop
pop
idivb
aad
popa
fdivrl
les
adc
xchg
in
sub
pop
out
inc
gs
out
in
or
insl
push
or
xor
pop
test
jecxz
xchg
push
out
mov
repnz
sbb
xor
sub
dec
push
ljmp
pop
sarl
sbb
xor
fistpl
cmp
adc
inc
cmc
or
xchg
mov
pop
cli
cmp
pop
xor
jo
fidivs
dec
push
lods
notl
les
test
mov
fimuls
in
jmp
subb
xor
inc
lock
decb
inc
in
imul
es
mov
adc
into
push
int
sub
jns
mov
cltd
lret
sbb
sbb
mov
xchg
rorb
xlat
ljmp
sbb
pop
jmp
xchg
mov
fs
loopne
lret
dec
jo
sub
sti
lahf
out
xor
mov
adc
popa
call
ds
inc
sarl
ficompl
add
and
mov
imul
in
xor
push
mov
movb
clts
popf
jecxz
out
scas
and
xor
sti
adc
cmp
xchg
sbb
sbb
imul
mov
dec
sbb
mov
mov
adc
push
repnz
xor
mov
ja
out
sbb
pop
xchg
fsubrs
loopne
mov
inc
shrb
fnstsw
loop
mov
xor
adc
and
adcl
orb
ficomps
mov
in
fadds
mov
cmc
xchg
push
jo
mov
xlat
pop
loopne
daa
xor
imul
mov
xchg
and
push
cmp
pop
add
push
divl
mov
push
push
jo
out
pop
sub
lahf
sbbl
or
sbb
cmpl
int
call
mov
sub
mov
xor
jno
cld
fcompl
arpl
out
jecxz
pop
bnd
inc
add
mov
mov
test
sti
fistpl
scas
adc
dec
cli
mov
idiv
out
loop
in
mov
in
and
mov
dec
stc
std
inc
push
lock
loopne
dec
ja
js
lret
mov
sub
jno
jnp
mov
jmp
in
cli
push
dec
sub
cli
cmpsb
rcl
xchg
dec
sbb
addl
out
dec
das
xchg
cs
out
mov
sbb
lcall
insl
into
mov
push
das
sub
subb
push
shrb
mov
push
adc
mov
cmp
dec
mov
pushf
pop
sub
das
dec
jle
fidivs
push
lods
fdivr
dec
outsl
stos
mov
push
adc
jl
dec
lock
pop
lds
leave
or
mov
nop
and
pop
loopne
sbb
out
sarl
aaa
dec
pushf
pop
or
inc
ljmp
add
insb
aas
imul
and
ds
cmc
ror
fimull
push
and
aam
fadds
add
shlb
cmpsl
push
adc
shl
ficoml
adc
pop
mov
xchg
add
roll
ret
fs
push
popf
push
sti
push
add
aaa
imul
cmp
ret
jge
or
rolb
adc
lret
jb
mov
and
and
adc
enter
test
mov
nop
leave
mov
hlt
test
cmpsl
fcmovne
lock
addr16
testl
pop
push
scas
push
mov
mov
jmp
out
movsb
sub
repnz
notl
jmpw
mov
push
cs
push
aaa
imul
xchg
jne
push
fwait
mov
jmp
lea
pop
mov
push
pop
orb
jle
fists
pop
pop
ficompl
mov
pushf
xor
call
daa
mov
popf
sbb
repz
mov
cmp
cmpl
jmp
pop
and
mov
fnstsw
repz
ficompl
in
aam
pop
sti
jne
lret
loope
and
in
repnz
rcrl
mov
in
and
pop
xor
mov
or
inc
jge
fimuls
fistl
cltd
popa
leavew
xor
mov
mov
or
xchg
int
push
sahf
inc
fdivrl
jle
mov
lods
push
and
int
or
xorl
iret
fimull
lret
popf
inc
int
out
stos
xchg
xor
dec
jo
xor
mov
jbe
pusha
push
enter
jns
sub
mov
scas
jb
jge
enter
lock
add
cmc
bound
mov
cmpsl
inc
sub
push
mov
nopl
call
jb
dec
and
fmuls
mov
call
xchg
fmul
adc
stos
or
repnz
dec
push
push
or
inc
stos
cmpsl
and
pop
jae
xor
add
add
adc
cmp
and
aam
inc
push
xchg
leave
rorl
cmp
les
insb
mov
pusha
or
push
mov
push
cltd
testl
aaa
and
das
loope
sub
pushf
rcl
inc
mov
ret
sbb
fiadds
push
ja
shlb
mov
xor
add
dec
mov
mov
das
push
scas
xchg
xor
aaa
jge
xor
jp
and
push
cmpsb
sbb
xor
mov
jmp
xlat
or
push
repz
sbb
pop
push
aas
test
lds
push
sub
addl
in
shrb
xchg
add
movsl
mov
sbb
push
inc
loopne
or
out
jns
pop
lret
jge
pop
int
mov
mov
jb
fwait
mov
add
add
pop
mov
insb
mulb
pop
push
jae
lret
push
pop
incl
jl
dec
mov
mov
mov
mov
lock
out
mov
dec
out
push
loopne
push
mov
or
mov
cwtl
aam
fwait
repz
sub
pop
ljmp
jmp
mov
pusha
or
js
movsl
int3
push
push
inc
aad
mov
mov
jp
cmp
scas
scas
loop
and
stos
mov
sub
shlb
lahf
sbb
stos
add
xchg
mov
ljmp
lret
sbbl
push
push
dec
out
push
pop
leave
ja
xor
cmp
rclb
sub
lods
adc
enter
std
aad
mov
inc
jno
sub
add
dec
mov
cmp
ja,pn
int3
or
or
and
ss
iret
pop
inc
data16
popf
or
call
mov
cmp
jle
push
repnz
push
bound
xchg
shl
cld
push
out
dec
scas
jl
mov
sbb
jmp
clc
loope
push
std
mov
iret
es
xchg
ja
fwait
push
xchg
push
test
out
adc
shll
add
arpl
es
test
gs
inc
push
cmp
addr16
mov
ja
jnp
mov
mov
lock
sub
incb
ret
xorb
and
repnz
push
mov
and
jle
xchg
mov
ret
js
push
insl
pushf
sbb
fdivrs
mov
in
sbb
pop
subb
js
mov
insl
push
mov
adc
pop
addl
icebp
cmpsl
inc
cmp
mov
in
in
notb
popf
push
ljmp
push
data16
sub
pop
mov
cmp
hlt
inc
fstpt
shrl
fimuls
fadds
out
add
dec
cmp
sub
mov
lcall
cmp
aam
mov
add
dec
ds
dec
push
or
jg
ds
mov
adc
mov
dec
xor
dec
test
stos
repz
les
je
sahf
es
mov
fcom
addl
mov
push
mov
add
mov
pop
in
aam
sbb
lods
mov
cmp
jp
stos
mov
adc
pop
in
lret
into
push
call
push
mov
data16
push
xor
ja
lock
xor
sub
rcr
jg
sub
mov
fsubrp
mov
mov
das
dec
movsb
xchg
cwtl
sarb
insl
mov
mov
stc
adc
cli
addb
negl
and
mov
lret
push
fdivrp
jo
and
push
pusha
mov
inc
lcall
repnz
dec
xchg
push
dec
cmp
push
mov
loope
lret
subl
mov
sub
cld
adc
mov
loope
adc
pop
sub
insb
jns
jg
jg
jp
adc
cld
mov
dec
call
push
mov
mov
nop
pop
repnz
dec
rcrb
pusha
mov
cmpsl
add
loopne
aad
je
ljmp
jl
vmovd
add
pop
add
int
jnp
call
push
jo,pn
xchg
imul
and
adc
xor
mov
fiadds
pop
or
jp
lret
fdivr
mov
gs
cmp
sub
mov
jecxz
xchg
mov
jne
xlat
fisttps
sahf
inc
xlat
push
daa
mov
in
xor
inc
jne
stos
mov
cltd
add
sar
pop
cwtl
pop
sbb
popa
jg
mov
cltd
clc
orps
mov
cli
xchg
xchg
dec
mov
sti
mov
add
xchg
mov
scas
push
push
addb
push
cmpsb
das
jns
xchg
push
add
std
mov
leave
scas
jle
ljmp
aaa
sbbl
or
fcoms
fcom
lds
dec
add
mov
out
andl
cmp
inc
fisttps
jno
lods
fwait
mov
jle
shrl
cld
dec
icebp
xchg
push
mov
mov
call
fildl
call
scas
xchg
jbe
lods
cmp
ljmp
mov
in
js
scas
mov
pop
xorl
dec
cmp
in
or
lds
lea
out
push
iret
pop
loop,pt
and
dec
inc
movsl
or
rcr
mov
dec
push
sbb
push
into
jbe
pop
push
icebp
hlt
push
xor
xchg
test
in
std
dec
pop
xor
lret
cmpsb
aad
movsb
rclb
mov
xchg
test
jbe
cmpsl
xchg
pop
pop
ds
enter
push
inc
lea
mov
and
add
xchg
lds
xorb
mov
push
addr16
stc
dec
int
ret
ja
test
ss
pop
mov
out
add
lock
mov
sahf
inc
mov
sahf
add
data16
into
cmp
pop
push
pusha
clc
rcll
fsubl
add
push
repnz
ja
sub
dec
out
adc
lret
and
jmp
jge
adc
icebp
cmp
ss
ret
loop
xor
push
aaa
mov
push
inc
and
inc
bound
inc
daa
loopne
ret
cld
xchg
xchg
mulb
push
jns
pop
mov
insl
test
inc
ja
fcomi
cmp
cmpsb
jp
mov
aas
popa
lahf
aas
orb
icebp
mov
enter
aas
cwtl
mov
call
imulb
cli
cmp
push
aas
sbbl
dec
ds
dec
sub
fdivrs
ss
jne
ljmp
jmp
daa
adc
shll
lods
jae
leave
js
add
mov
addr16
add
icebp
imul
fwait
repnz
mov
clc
mov
dec
or
in
fnstenv
or
xlat
and
cmpxchg
dec
jnp
mov
mov
xchg
jle
in
cltd
add
cmp
sub
inc
mov
std
mov
add
xchg
clc
pop
sub
mov
add
jb
into
js
add
cmp
cmp
incb
cmp
add
movsl
pop
xchg
jb
xor
mov
iret
in
or
sub
mov
push
test
es
inc
scas
add
xor
insb
inc
cmp
jg
inc
cmp
cmp
std
lcall
jns
xor
stos
mov
dec
shl
out
in
repnz
xchg
push
sbb
mov
pushf
push
out
dec
jge
lcall
push
popa
cmp
sbb
adc
bound
mov
loopne
in
mov
repz
hlt
iret
or
push
out
or
movsl
fs
shlb
mov
lcall
repz
aas
sub
xor
imul
rclb
pop
lret
xor
stos
cmp
cmc
push
fldl
adc
stos
aaa
test
cmp
and
lock
xor
push
jb,pt
or
loopne
je
mov
mov
mov
mov
fsubs
fwait
dec
cmp
hlt
dec
xchg
aaa
xor
mov
pusha
push
mov
push
mov
sbb
jle
dec
inc
xor
xchg
cwtl
loop
dec
push
adc
bswap
cmp
aas
add
xchg
pop
gs
xor
dec
ds
pop
push
jl
outsl
in
dec
xchg
jecxz
mov
push
jno
push
xor
add
add
lahf
or
imul
push
jno
jl
and
jp
inc
mov
sub
imul
xchg
sahf
insb
add
sub
loope
in
sub
xor
mov
cltd
mov
push
lret
mov
shl
je
xor
idiv
pop
test
pop
lods
pop
sarl
push
js
fs
push
xchg
inc
jo
jecxz
js
jp
sbb
call
clc
mov
ja
mov
incb
div
xchg
nop
xlat
jl
push
add
shll
mov
inc
jmp
pop
jns
push
loope
and
cmc
nop
fucomp
dec
sbb
insl
scas
lcall
and
push
loope
mov
cltd
imul
outsl
movsl
mov
mov
xchg
cwtl
mov
mov
xchg
fdivl
mov
push
popa
inc
mov
fptan
xchg
or
clc
mov
mov
mov
xor
adc
inc
cld
pushf
xchg
pop
dec
call
inc
xor
test
or
fsubr
jmp
test
xor
mulb
lcall
mov
adc
inc
psraw
or
adc
jbe
inc
call
xor
inc
jb
push
push
iret
pop
add
inc
scas
mov
mov
mov
int3
les
arpl
or
mov
cmpsb
mov
repnz
rcr
jp
cli
mov
sub
sbb
jo
imull
push
dec
mov
fbld
pop
xchg
out
bound
cmp
cld
pop
and
add
out
aam
fildl
sbb
int3
std
jmp
mov
add
xchg
movsl
push
lret
adc
mov
movsb
sub
fs
or
int
into
pop
dec
pop
cmp
inc
jmp
and
in
ja
sahf
or
or
test
mov
mov
cmc
and
iret
lea
mov
push
push
add
or
push
jg
decb
leave
pop
fidivs
cmp
mov
push
lods
stos
adc
or
in
es
mov
xchg
cmp
xchg
sub
or
fnstcw
mov
adc
sbb
aad
gs
mov
sub
das
test
or
mov
sub
outsb
pop
scas
mov
insb
sub
pushf
pop
xchg
adc
jp
test
mov
aas
cmp
push
inc
dec
lods
push
mov
cmp
mov
pop
loopne
sub
mov
repz
pop
or
inc
and
outsb
add
pop
insb
ds
dec
pop
movsl
or
xchg
test
inc
sub
inc
movb
xor
dec
xor
cs
sbb
mov
test
lock
or
mov
sbb
pop
outsb
jg
out
lods
popf
xor
push
rclb
aam
cld
clc
mov
sub
icebp
push
mov
pushf
icebp
cmp
pop
xor
mov
frstor
iret
xor
outsl
lock
or
add
insb
andl
out
jnp
insb
cmp
adc
es
pop
mov
dec
test
jl
sbb
xor
add
push
push
aad
fcoms
addr16
pop
ficoml
divl
xor
fld
test
ss
push
xor
or
iret
xlat
sub
cmp
adc
adc
shl
imul
sbb
stos
ret
fisubs
pop
and
adc
pop
dec
cli
aam
out
lcall
insb
xchg
push
sti
das
push
adc
insb
xchg
add
push
idivb
inc
jmp
inc
dec
je
adc
add
sbb
sbbb
push
inc
inc
pop
lods
imul
shll
aas
xchg
sbb
imul
lahf
jl
lock
lock
jle
jmp
mov
outsl
in
xchg
mov
int3
cmp
stos
xorl
fidivrl
fimuls
movsl
push
rorl
and
cmpsb
add
rolb
jp
dec
mov
mov
sarb
movsb
hlt
xor
push
fadd
ficoms
test
xor
int3
mov
sbb
stos
jp
mov
iret
repz
aaa
and
mov
std
sbb
pop
in
lret
addb
sbb
inc
xchg
and
lcall
rcrl
xor
ljmp
cmp
mov
out
dec
sbb
ret
sahf
mov
inc
insb
enter
pop
loope
mov
inc
hlt
test
cmp
inc
xor
push
cwtl
int
insb
sbb
mov
inc
jb
xchg
test
sub
cli
jecxz
and
jecxz
cmpb
cmpsb
add
cmpsl
mov
dec
ds
add
mov
sbb
sub
into
insb
xchg
mov
fistpl
or
arpl
je
lods
cli
xor
cmp
bound
push
and
push
add
popa
ja
adcb
xchg
cmp
xchg
mov
jne
pop
inc
es
mov
ficoml
and
dec
xchg
in
mov
pop
or
leave
pusha
fstpl
cmp
or
and
ret
stos
or
int3
xchg
sbb
pusha
int
ss
or
push
pusha
push
fcoms
and
jmp
insl
add
xchg
push
add
adcb
mov
fistl
push
mov
cld
jne
add
arpl
mov
movzbl
push
inc
adc
push
mov
mov
jmp
or
sub
ja
push
cwtl
hlt
dec
add
fnsave
ja
and
aad
xor
insl
call
xchg
and
mov
xor
in
inc
add
xchg
mov
fs
xchg
insl
or
js
inc
cmp
fidivs
adc
adc
or
jno
stos
fwait
clc
out
arpl
les
dec
and
dec
pop
jo
stc
cltd
push
and
jecxz
ret
inc
cmp
jno
repnz
pop
sahf
xor
cmp
add
push
jno
js
push
lock
sti
push
inc
fidivl
stc
jle
leave
push
xchg
ficoms
imul
shlb
jno
xlat
fldenv
cmp
jne
shlb
mov
ljmp
and
inc
filds
fidivrs
pop
stc
jb
xor
mov
mov
jbe
mov
and
cltd
cmp
mov
xor
inc
adc
testb
inc
mov
xor
xor
xor
cmp
mov
movntps
xchg
or
dec
insb
test
mov
add
jo
mov
gs
out
rorb
stos
jb
movsl
mov
dec
popf
rcll
push
push
push
adc
adc
push
xor
call
jne
lds
xchg
add
adc
dec
pop
test
add
jge
jle
jge
cmpsl
or
sub
lock
xor
stos
fs
pop
pop
push
push
in
mov
bound
xchg
xorl
push
das
ljmp
cs
jne
repz
or
xchg
popf
mov
adc
add
xchg
sub
outsb
outsb
hlt
xor
push
or
hlt
inc
movsb
popf
or
push
adc
sbb
jae
repnz
dec
mov
rcll
pop
out
lahf
mov
arpl
loopne
mov
rclb
sub
jl
jns
pop
fxch
mov
mov
inc
sub
rcr
addr16
adc
ljmp
mov
jecxz
mov
mov
sarb
hlt
jne
arpl
insl
xor
xlat
add
orl
mov
push
popf
push
push
icebp
and
ds
fadds
stos
lds
xor
test
pop
into
xor
std
xor
cmpsl
push
ljmp
push
fs
dec
into
mov
mov
sbb
xchg
in
popa
in
loop
jl
xor
dec
xorb
and
xor
jno
lea
pop
jbe
cld
mov
pxor
pop
adc
jg
pop
pop
or
inc
mov
jbe
pcmpeqw
inc
loop
sub
mov
mov
lret
adc
aam
lds
cmc
mov
test
add
adc
sbb
jne
jp
xchg
sbb
arpl
pop
mov
push
mov
xor
and
xor
lods
cmp
test
inc
xorb
mov
int
cmp
iret
adc
and
mov
dec
in
and
les
jns
scas
movsl
sbb
mov
out
test
add
jnp
mov
push
sub
jle
sbb
mov
mov
xchg
int3
aas
rcr
xchg
jne
push
shlb
push
jge
dec
out
jns
cmp
jecxz
adcl
jmp
pop
jp
jg
dec
push
lds
adc
push
adc
cmp
mov
mov
aad
xchg
shl
das
bound
adcb
iret
scas
rcrl
in
lcall
negl
cmpsl
xor
out
sahf
fwait
mov
jo
lds
xchg
insl
pop
in
cwtl
faddl
cli
cli
in
test
mov
jg
cltd
mov
xchg
shr
loopne
pop
fnstenv
add
jno,pt
inc
jb
cmpb
add
and
rcr
movsb
mov
mov
repz
in
scas
push
xchg
jns
fxch
loopne
or
jo
jecxz
enter
mov
enter
in
pushf
mov
xlat
subb
icebp
addr16
lds
mov
loope
cmp
and
setl
clc
leave
sub
cwtl
ljmp
mov
out
jae
movlps
or
sub
dec
outsl
sub
mov
sub
dec
push
push
cmp
mov
call
sub
push
nop
pop
cmp
sbb
lret
lret
lea
call
push
cmp
push
or
ds
inc
mov
jmp
sbb
loope
or
mov
pop
gs
or
xor
mov
xchg
movsb
pusha
push
sbb
add
xchg
nop
adc
sahf
inc
outsl
mull
mov
icebp
gs
scas
imul
mov
bnd
movups
orl
leave
xchg
ljmp
and
andb
fmuls
test
arpl
push
lock
adc
mov
jbe
jp
mov
pop
and
lods
inc
or
mov
and
popa
outsb
jmp
xchg
pop
mov
bound
int3
mov
repz
insb
mov
int3
cmp
adc
imul
cmpsl
icebp
mov
je
push
sbb
xchg
lods
scas
and
stos
dec
call
and
or
sub
sbb
lret
sahf
push
push
adcb
mov
imul
int3
sarl
sahf
mov
out
dec
je
aam
jne
push
mov
call
mov
es
loop
dec
pop
mov
ficoms
mov
outsl
fsubs
imul
icebp
mov
push
or
mov
mov
sbb
mov
cli
cltd
mov
jl
es
aas
sarl
mov
cmpsb
into
or
sub
pushf
pop
sub
or
xchg
inc
icebp
sub
jecxz
sti
leave
outsl
cmp
popa
lret
push
fistps
xchg
and
loop
scas
fbstp
mov
adc
hlt
push
ret
mov
out
fdivrp
cmp
rclb
pop
repz
pop
inc
aaa
dec
jge
fldt
sbb
shrl
icebp
cmpsl
pop
xchg
adc
loop
adc
push
mov
inc
push
shl
mov
les
pop
rclb
lcall
xchg
inc
inc
dec
xchg
daa
stc
aas
cltd
aad
inc
in
mov
test
das
jae
push
pop
cltd
cmp
jge
xchg
lods
std
xor
jno
xor
lahf
sub
out
sbb
and
add
push
into
sub
stos
xor
and
xor
stos
movsl
jae
scas
cwtl
out
fistps
add
mov
in
rclb
lock
rorb
mov
adc
imul
push
aas
or
pminsw
mov
ret
ret
xchg
and
sti
adc
or
stos
hlt
or
sbbb
notb
push
inc
or
jmp
cwtl
ret
sahf
sbb
jno
inc
jmp
add
push
xor
or
shlb
in
outsb
xor
std
push
aas
pusha
aad
negl
mov
adc
xor
and
or
aad
cld
xchg
or
cmp
stc
aaa
out
lret
dec
icebp
inc
iret
mov
popa
or
adc
sti
sub
stos
mov
push
incl
stc
lret
cld
inc
push
jl
pop
sub
adc
pop
pop
pop
jmp
mov
xchg
jno
dec
add
rcr
imul
or
jg
jmp
cwtl
mov
and
stc
mov
and
cld
test
add
add
notl
lock
insl
jg
out
add
cmp
xchg
in
pushf
inc
loopne
mov
push
ljmp
dec
lods
cld
sub
cmp
dec
sbb
inc
sbbl
imul
scas
loopne
sub
cmp
out
out
xchg
ja
mull
xchg
inc
roll
test
xor
das
cmp
rcll
scas
fisttpl
pop
inc
fnsave
repnz
inc
rcll
andl
shrb
xlat
das
lods
sbb
push
divb
mov
je
push
loopne
pop
sbb
into
enter
mov
mov
cmp
loopne
pop
fidivl
or
xchg
rorb
insl
in
mov
je
popl
popf
mov
clc
shl
push
xchg
ret
test
jg
subl
iret
mov
fwait
push
adc
and
aam
pop
lods
jb
adc
inc
icebp
xor
arpl
add
cmp
inc
pop
pop
sub
lock
pusha
js
inc
aad
arpl
push
lcall
push
pusha
add
insb
test
sub
xor
pop
push
fsubr
dec
jbe
lret
sbb
or
in
sbb
subl
je
cmp
add
and
add
xchg
xchg
inc
cmpl
shrl
test
add
jp
sbb
mov
sub
ds
outsb
lea
enter
rorl
push
push
lret
js
sub
arpl
mov
rorl
imul
ds
push
mov
lods
mov
pusha
cmpsl
mov
dec
jne
jmp
push
xchg
or
lea
leave
and
mov
dec
loop
lea
cmp
inc
dec
cmp
pop
arpl
mov
mov
sbb
mov
and
pop
gs
push
inc
adc
jg
sub
and
scas
push
loope
ret
inc
arpl
push
xlat
xchg
lret
push
out
cmpsl
and
cmpsb
add
xchg
xor
adc
test
fsubrs
adc
aad
pop
nop
jbe
out
je
ja
mov
jle
cmp
cli
in
mov
pop
push
cs
cmp
xchg
mov
sahf
dec
test
mov
je
add
outsb
jg
push
mov
mov
fistpl
sbb
enter
in
push
dec
cmpsl
lret
fists
ds
pop
mov
xor
mov
outsl
divb
pop
mov
imul
imul
dec
cmp
mov
pop
pop
or
cwtl
mov
out
adc
scas
cmp
mov
sbb
xor
jg
jp
mov
test
add
jmp
std
aad
add
mov
jae
pop
adc
enter
push
push
imulb
repz
xchg
pop
or
psubb
xchg
stos
xor
fisttpl
aas
or
jl
loop
call
test
xchg
pushf
lods
stos
pop
and
jo
insb
cmc
aam
data16
mov
inc
lds
mov
out
inc
mov
inc
fistpll
leave
call
in
xchg
movsb
adc
test
gs
shl
insb
imul
xchg
and
dec
inc
nop
je
cmpb
in
cmpsl
xor
in
icebp
popf
cli
mov
ret
es
sbb
mov
fdivrs
fistl
ret
outsb
jnp
fucomi
xchg
loopne
lret
inc
and
mov
loop
mov
jbe
ja
mov
or
inc
jp
and
outsl
stc
in
mov
adc
insl
lahf
aaa
xor
add
xlat
add
inc
stos
add
pop
mov
arpl
les
hlt
xchg
cmp
lods
shrl
pusha
jl
ret
push
call
mov
push
and
mov
pop
mov
outsb
std
cmp
aam
add
pop
lods
arpl
fiadds
data16
xchg
addb
mov
xor
cmp
cld
xchg
sub
lcall
lds
push
stos
popl
std
mov
push
fdivl
mov
mov
arpl
sbb
xchg
xchg
in
add
stc
xchg
movsl
in
mov
inc
adc
add
out
movsl
insl
lret
cmc
lret
push
cmpsl
inc
rcll
lock
outsl
out
mov
cmc
aas
xchg
mov
sub
mov
ja
sub
cli
pop
adc
mov
and
xor
inc
stos
jg
shlb
push
xor
mov
xor
stc
sti
mov
xor
test
adc
sub
jg
stos
mov
mov
inc
inc
push
aaa
and
shll
add
sbbb
sub
xchg
sbb
insl
xchg
gs
scas
mov
pop
xor
es
loop
sub
js
push
clc
clc
icebp
xorl
adcb
push
mov
pop
dec
xor
std
mov
fwait
fcomps
fadds
scas
hlt
outsb
mov
mov
call
inc
add
je
mov
mov
adc
pop
cli
das
push
out
test
sbb
out
rorl
xor
cmp
scas
outsb
inc
jae
or
repz
aas
mov
imul
test
push
jno
gs
scas
jg
pop
hlt
mov
sbb
cmp
push
movsb
roll
mov
sub
mov
xchg
out
lds
jae
mov
xchg
mov
adc
mov
repz
mov
lret
dec
dec
pop
ljmp
mov
clc
pusha
paddsb
sub
or
lcall
add
daa
and
arpl
push
les
stos
mov
lret
out
mov
into
pop
or
inc
outsl
adc
pop
mov
inc
jecxz
mov
sub
arpl
jmp
adc
das
popl
xor
pop
cmp
out
clc
test
in
sub
in
fbld
popf
out
into
push
xor
lock
fabs
nop
fnstcw
dec
arpl
xchg
jmp
push
aas
cltd
js
rolb
add
mov
jne
cmp
sti
xor
cs
cmp
jl
cli
and
hlt
fidivrs
mov
repnz
push
and
stc
sti
fistpll
jl
xor
pop
mov
inc
sbb
dec
mov
mov
jge
sub
push
inc
jbe
movsb
arpl
adc
cmp
nop
test
pop
dec
xchg
inc
inc
inc
adc
ja
sarl
mov
xchg
push
jbe
adc
xchg
mulb
push
pop
cs
fwait
and
pop
xchg
jne
and
mov
dec
mov
jmp
fstpt
and
outsb
rol
pushf
int
idivb
test
jb
jns
loop
stos
mov
add
inc
inc
pop
and
rcl
fstpt
ja
mov
les
popa
insb
push
ficompl
push
bound
sbb
dec
or
outsl
jp
testl
xor
movsb
test
shl
in
loopne
out
scas
mov
xor
mov
mov
push
push
mov
mov
pop
jo
sub
xor
inc
cs
push
or
and
add
xchg
in
xchg
scas
lods
add
mov
push
xor
dec
repnz
std
gs
xchg
sub
sbb
cwtl
xor
pop
cmpsb
mov
pop
nop
dec
sbb
mov
test
xchg
ret
outsl
hlt
cld
mov
imul
scas
in
push
jns
or
dec
push
add
je
lahf
mulb
pop
rorb
push
push
pop
fadds
push
jne
fildll
push
das
lds
jnp
xor
pop
or
sbb
push
adcb
cmp
fdivp
stos
push
cmp
xor
imul
xchg
jno
ss
test
and
mov
mov
popa
cmp
mov
inc
stos
mov
ret
fmuls
sbb
stc
rcrb
push
jecxz
xchg
sub
mov
sbb
sbb
lahf
jmp
jae
iret
in
dec
cmc
and
fidivrs
roll
lods
arpl
js
into
mov
icebp
enter
mov
std
scas
testb
cs
sahf
mov
mov
dec
stos
int3
icebp
xchg
imull
jecxz
icebp
adc
call
pop
pop
or
arpl
in
dec
scas
lods
mov
ret
int3
dec
sbb
xchg
xor
push
pushf
jl
jmp
je
aam
cmp
push
ja
repnz
adc
mov
arpl
mull
sahf
or
pushl
mov
or
out
ffreep
aam
xchg
push
hlt
rcll
mov
aas
mov
jle
jg
push
push
inc
mov
arpl
mov
sbb
loopne
and
mov
icebp
in
push
pop
jns
add
out
lcall
imul
pop
pop
push
mov
jnp
push
sbb
xor
pop
and
pop
sub
dec
lock
or
repz
cmp
xchg
stos
ret
faddl
pusha
cli
adc
pop
add
sahf
sbb
or
test
ficompl
jl
std
ja
cmp
add
int
in
dec
mov
mov
cltd
js
push
cmp
push
pop
frstor
mov
icebp
test
adc
cmpsb
ret
mov
push
sub
jp
imul
test
and
mov
cmpsb
arpl
xchg
repz
lods
sub
mov
mov
sbb
cmpsl
outsl
cmpsb
mov
dec
cli
test
ret
lods
mov
sub
ret
and
inc
mov
push
sbb
jo
dec
jnp
pop
btc
shll
loop
dec
cmp
mov
gs
call
inc
mov
or
mov
sbb
xorb
xlat
pop
std
add
in
imul
rcr
mov
pop
insl
scas
or
imul
lret
add
sbb
jo,pt
push
mov
ss
gs
mov
inc
in
flds
add
jbe
push
or
enter
mov
pushf
jmp
sub
test
adc
jle
outsl
adc
dec
enter
and
mov
loope
cli
add
movsl
das
jge
mov
sbb
sbb
mov
inc
sub
and
push
es
fs
xchg
scas
push
jae
push
scas
int
and
fstl
dec
xor
lret
mov
mov
or
dec
movsl
xor
test
xor
dec
dec
aaa
out
jno
mov
pop
addr16
das
mov
ss
rcrl
push
insb
mov
cmp
push
mov
fidivs
or
popa
xchg
xor
lods
adc
pop
xchg
dec
mov
orb
add
cmp
insl
iret
jge
adc
lcall
in
shrb
push
jecxz
mov
aam
call
xor
adc
shll
shrb
arpl
push
mov
xchg
sub
mov
loope
mov
fistpll
fdivrp
cld
jle
cmp
inc
and
adc
test
sub
scas
mov
inc
in
lock
lea
xor
repz
pushf
cmp
fcmovnbe
push
outsb
sbb
add
arpl
push
push
insb
push
aaa
xor
outsl
ja
out
movsl
add
les
jp
pop
add
cltd
and
push
dec
inc
pop
dec
sbb
out
lcall
jg
pop
fstpl
adc
pop
pop
jno
or
xchg
test
xchg
pop
clc
jbe
aaa
dec
aaa
cld
imul
mov
mov
loop
push
xchg
ds
cmpsb
add
xor
and
pusha
mov
jnp
dec
sbb
out
cmp
jmp
xor
repnz
test
xchg
iret
inc
or
jbe
lock
pop
push
outsb
push
push
add
in
mov
dec
imul
mov
lret
xchg
inc
daa
and
sub
jb
and
fimull
stc
aaa
xchg
jl
cmpsl
push
mov
ret
adc
cmc
subl
popa
or
imul
mov
inc
cmpsb
inc
push
and
push
lahf
add
sub
sub
dec
or
fdivrl
mov
dec
stos
sub
pop
mov
inc
and
mov
and
mov
sti
xor
adc
lea
sbb
add
fadds
mov
push
pusha
movsb
sti
push
test
repz
sbb
sarb
popa
mov
les
rclb
add
dec
cmpl
les
xchg
add
adc
test
cmpsb
mov
xchg
jns
inc
je
rcrl
and
push
fucomip
loopne
cld
or
jo
test
mov
cvtpi2ps
je
adc
fistl
enter
fnsave
sub
rorl
jmp
dec
mov
jmp
cmpsb
push
rorl
imul
pusha
sar
mov
add
jb
out
lds
test
out
pop
jmp
ljmp
fs
pop
push
dec
scas
push
cwtl
cmp
mov
call
inc
push
jmp
add
mov
adcb
nop
cli
inc
adc
pop
push
xor
mov
lock
adc
and
daa
arpl
adc
sub
lret
int
in
cmp
stc
xchg
mov
cmp
push
daa
and
stos
mov
imul
jecxz
pop
iret
sub
lret
jp
aaa
mov
cmp
ss
jmp
idivb
sub
loopne
push
sti
or
lea
push
lods
iret
sub
and
test
cmc
cli
ficomps
rcl
pop
test
lea
popf
dec
inc
in
xchg
lcall
orb
fs
shl
fs
add
push
out
sub
or
xlat
loopne
scas
and
mov
gs
add
popa
pusha
xor
mov
fcoml
push
loopne
cmc
cmp
jnp
pushf
jl
jns
repz
shll
push
add
fisubl
cmp
sbb
push
adc
shl
add
out
mov
push
xor
push
cmp
fstpl
or
cs
cli
mull
call
outsl
imul
mov
or
stos
add
addr16
add
sub
push
pop
test
in
inc
cmc
adc
inc
iret
mov
imul
leave
mov
jns
mov
loope
push
testl
scas
jae
addr16
or
dec
hlt
outsl
push
xchg
test
mov
xchg
sub
andl
mov
mov
jns
mov
pop
mov
mov
pop
data16
xchg
and
testl
mov
cmp
movsb
movsl
push
inc
stos
adcl
push
rcrb
mov
lahf
add
push
adc
es
in
notb
cmc
add
add
test
lahf
mov
ja
test
aam
shrl
xor
jge
loope
cmp
dec
lret
mov
xchg
sub
mov
cltd
mov
jmp
pusha
cmpb
in
ret
xchg
mov
loopne
cmc
out
clc
jmp
xchg
sub
add
out
sbb
test
call
or
repz
inc
jle
lock
lods
or
fwait
shl
jp
add
pop
js
std
pusha
push
add
mov
dec
roll
push
jno
repz
movsl
mov
adc
jecxz
pop
cmpsl
adc
pop
stos
clc
fdiv
sbb
std
mov
dec
scas
push
sub
sub
adc
lahf
rolb
rcl
pushf
dec
out
pop
mov
push
mov
int
xchg
mov
adc
stc
in
data16
roll
fcomps
andl
cmp
arpl
imul
pop
adc
fldcw
stos
mov
and
and
jge
push
mov
xlat
js
xor
xorl
lock
dec
push
jno
bound
repnz
xchg
es
mov
add
lret
jl
repz
aad
dec
das
mov
sti
pusha
in
inc
lea
mov
aas
daa
mov
or
sbb
clc
sbb
xchg
lret
xor
xchg
jb
aad
imul
enter
dec
cmp
dec
into
jbe
out
mov
pop
inc
jb
xchg
arpl
shrl
sub
cs
out
sbb
call
aad
popl
and
xchg
nop
fcoml
sub
mov
aas
movsl
pop
idivl
jge
mov
pop
push
sahf
mov
cmp
jg
pop
cmp
pop
mov
jp
push
pop
lods
icebp
xchg
das
repnz
scas
movsl
out
xchg
clc
push
xchg
comiss
and
inc
push
inc
clc
ss
imul
cmp
jecxz
mov
push
rcr
das
push
lcall
mov
test
jle
scas
cli
push
or
sbb
xor
jge
popa
int3
xchg
cmp
adc
sub
rolb
mov
dec
int
xchg
pushf
jae
jle
dec
inc
push
fwait
ljmp
out
cld
cmpsl
nop
ljmp
test
leave
andb
jbe
inc
inc
cwtl
out
mov
insb
xor
mov
xchg
es
loopne
xor
and
lods
dec
push
adc
jg
and
sbb
or
insl
sub
test
push
iret
mov
inc
add
and
inc
clc
testl
loope
hlt
pusha
mov
inc
jbe
aad
pusha
std
inc
inc
mov
fdivrs
js
rorl
lods
enter
cld
and
push
push
jo
jmp
cmp
xor
stos
jmp
les
into
fwait
sbb
mov
sahf
in
mov
cmpsb
xchg
repnz
loop
scas
mov
inc
adc
loope
xchg
sbb
jb
mov
cmpsl
xchg
mov
das
test
mov
push
mov
cmp
repnz
mov
mov
xchg
pop
dec
lahf
sbb
test
inc
jle
xchg
xchg
add
mov
pop
shrl
mov
pop
mov
cltd
xchg
sub
lcall
push
mov
xchg
popa
jne
insb
mov
sbb
xor
cmpsl
mov
int3
or
sub
push
test
xor
push
and
xor
sub
movsl
sar
aad
mov
mov
in
ja
das
or
push
mov
jp
cwtl
mov
or
pop
dec
imul
stos
pcmpeqw
andb
pop
xchg
lahf
insl
lcall
mov
pop
jne
mov
xchg
or
and
dec
mov
sbb
mov
mov
movsb
xchg
rcrl
mov
push
aaa
jl
push
mov
dec
sti
aam
rcll
mov
adc
mov
aad
push
out
xor
lahf
dec
jbe
rorl
mov
jmp
ja
fcompl
fnstenv
mov
and
inc
clc
lcall
push
repnz
and
and
sub
mov
aad
loopne
in
jnp,pt
fisubs
clc
insb
pop
sbb
jae
or
fadds
sbb
adc
movsb
push
lret
arpl
fsub
mov
mov
cmp
and
jae
mov
cld
push
fisubrs
push
xchg
aad
ss
test
mov
mov
push
or
mov
out
fistpll
addr16
imul
pop
js
xchg
lret
imul
scas
adc
sub
and
push
ss
mov
mov
adc
in
cmc
and
mov
bound
add
add
insl
fdivl
cli
mov
testb
and
sahf
pushw
mov
outsl
pop
cli
mov
bound
xlat
cmp
aam
lods
arpl
mov
scas
jmp
dec
cmp
dec
cmp
sbb
mov
cwtl
mov
movsl
jns
pop
mov
lcall
aad
dec
es
pop
lcall
push
jecxz
mov
aaa
mov
cmpsb
fidivs
jmp
je
rclb
pcmpgtb
jmp
mov
adc
push
and
pop
daa
push
push
and
xorb
insl
sbb
cld
clc
cmp
mov
cmp
test
xchg
lods
cmpsb
lcall
int3
cwtl
pop
fwait
dec
jmp
pop
add
xchg
je
loope
in
loop
test
jge
dec
ficoms
aas
mov
ja
arpl
cs
out
and
and
cld
imul
dec
pop
sub
or
insb
fs
add
in
pop
inc
xlat
jg
stos
mov
sbb
push
push
cld
mov
sti
lret
or
sbb
xchg
inc
or
pusha
out
push
gs
jns
in
dec
cmp
out
fstpt
in
divb
imul
jnp
loope
push
cmpl
fiadds
and
mov
mov
hlt
sbb
das
jg
ret
fwait
popf
or
jg
cmpl
shrb
jg
and
cmpb
push
mov
mov
dec
sbb
push
sbb
call
dec
lea
sahf
roll
mov
push
loope
repnz
fcmovnbe
jg
loopne
js
pop
mov
dec
sbb
inc
shll
jne
scas
inc
pop
out
adc
mov
mov
push
sbb
sub
pusha
adc
and
mov
dec
xchg
push
int3
jbe
in
enter
jmp
xorl
mov
fimull
call
out
out
sahf
adc
xchg
cmp
pop
mov
mov
mov
adc
jecxz
mov
les
fsts
clc
dec
in
add
xchg
mov
insb
inc
and
xchg
xchg
pop
or
pop
movsb
add
rcr
xchg
push
mov
adc
mov
xor
add
cs
xchg
sub
pop
xchg
fisubs
mov
sbb
cli
push
dec
inc
idiv
push
push
sbb
loope
mov
inc
cmp
pop
es
repnz
fiaddl
in
aaa
cmpsl
xchg
fwait
nop
fists
int
shlb
rorl
cmp
daa
movsb
loop
mov
das
mov
mov
shll
sti
add
jo
add
stos
xchg
inc
dec
and
pusha
ret
xchg
jp
and
pushf
mov
dec
cmp
cmp
ss
scas
push
push
sub
mov
imul
ljmp
call
and
sbb
leave
or
sti
sub
push
int3
sub
push
scas
jge
in
mov
inc
pop
repz
gs
cmp
sub
into
sbbl
sub
cmpsb
cmp
cwtl
lods
jo
imul
int3
sbb
or
shlb
and
mov
dec
test
lods
mov
jne
enter
iret
adc
mov
lea
lret
cwtl
jno
ss
insl
fucomp
mov
cs
push
mov
jl
out
aaa
sahf
incl
xchg
lcall
add
call
fcoml
jle
and
jle
jb
xor
ret
cmpsl
mov
adc
clc
gs
movsl
repnz
out
scas
lock
nopl
cmpsl
out
cmpsb
push
lods
scas
mov
fstps
mov
es
movsb
pop
pop
lods
dec
das
and
inc
lcall
xor
subb
insl
mov
xchg
xchg
xchg
pop
lock
into
int
lods
pushf
fwait
xor
mov
cltd
pop
testl
jp
jns
xchg
fsubs
imul
fidivs
and
scas
xchg
inc
add
xor
push
fldl
xor
dec
dec
mov
outsl
adc
sub
xchg
inc
add
adc
xchg
cmc
push
mov
jg
xchg
std
in
xchg
mov
and
sub
push
incb
in
lds
xor
test
xor
cltd
xchg
iret
cmpsb
pop
nop
xorb
inc
mull
and
push
clc
add
mov
mov
or
jg
imul
mov
mov
aaa
fidivrl
mov
mov
test
ljmp
js
jae
push
add
add
lahf
jp
dec
mov
push
mov
ficoml
sbb
jo
jecxz
dec
sahf
scas
out
js
xchg
imul
xlat
rorb
or
or
push
mov
sub
push
pop
push
jo
cmp
push
and
push
xchg
dec
sub
pop
test
pop
int
cli
pop
out
pop
pop
es
and
out
inc
lret
int
idiv
dec
in
mov
sub
mov
test
cltd
lahf
jnp
cmp
lret
test
push
xchg
inc
pusha
loope
sarl
fildll
inc
xor
iret
pop
lods
ficompl
dec
pushf
test
not
push
cmpsl
cmpsl
or
dec
mov
inc
push
popa
push
int
shrb
cwtl
pop
cmp
pop
lcall
sub
mov
pop
dec
mov
and
or
repnz
pop
pop
data16
adc
cli
mov
in
lods
pop
movsl
cmp
dec
add
jp
sarb
pop
lds
cltd
xor
or
or
push
fisubrs
inc
mov
mov
addr16
mov
xchg
fsubrl
mov
sub
xchg
test
shl
push
data16
enter
or
repnz
insl
int
mov
jno
and
mov
adc
lcall
pop
adc
fld
pop
mov
mov
or
hlt
call
ja
adc
mov
pop
xchg
inc
lds
int
mov
ret
push
fisubrs
enter
ljmp
or
fiaddl
cld
sbb
rolb
mov
inc
add
popf
test
call
stos
inc
das
in
push
xchg
adc
sub
mov
mov
dec
idivb
imul
testb
mov
std
mov
add
push
pop
inc
cwtl
out
jmp
sub
mov
mov
sub
push
inc
js
dec
lret
xchg
repnz
insl
jno
jnp
in
es
xchg
xchg
or
mov
stc
rcl
cmpsb
test
aaa
mov
psrad
insl
jle
fsubl
aad
sbb
and
ja
ret
outsb
or
and
jle
bnd
popf
mov
out
lods
sti
sbb
mov
icebp
jg
fistpll
jle
push
and
push
jnp
arpl
cmp
sbb
loope
sub
pop
push
cmp
das
imul
mov
je
cmp
cmp
push
jp
popf
lods
aaa
xlat
out
ds
xor
les
lret
enter
ret
xchg
push
jo
jl
movsb
push
pop
decl
mov
and
movsl
dec
or
and
aad
pop
add
mov
xor
jmp
scas
scas
push
jp
pushf
xor
xchg
mov
jnp
xor
fwait
or
cmp
jo
sahf
pop
repz
scas
mov
dec
push
pop
push
jae
prefetchwt1
or
push
imul
pop
lods
jge
jmp
pop
sub
inc
loope
ret
repnz
orl
fstpt
adc
lret
push
or
jbe
cmpb
mov
mov
mov
mov
inc
pushf
addr16
imul
jns
cmp
mov
sbb
or
hlt
push
movsl
xor
add
shlb
std
popa
push
xor
inc
jg
pop
xor
fcomip
mov
fiaddl
cli
mov
in
lcall
cmp
cmp
dec
jns
pop
cmp
out
iret
dec
mov
push
daa
ss
sbb
mov
or
push
or
xchg
lcall
adc
dec
mov
dec
insl
mov
subl
jo
cmpsl
test
pop
add
push
pop
inc
cmpl
inc
lahf
test
jp
fistpl
nop
sub
lret
jge
jmp
bnd
jo
push
pop
ljmp
addl
pop
insb
test
inc
js
inc
cmp
jl
xor
pop
and
inc
adc
dec
fnstcw
inc
and
cmpsb
fmull
iret
jmp
roll
scas
mov
add
dec
stos
aam
dec
andb
xchg
pop
mov
movsb
ja
xchg
jmp
and
addr16
sub
cld
lret
xor
cmp
xchg
or
jp
mov
adc
daa
adc
lcall
mov
shl
popl
sbb
into
xor
xchg
inc
cmp
inc
sbb
out
into
movsb
adc
push
orb
dec
jno
or
mov
or
popl
mov
and
insb
scas
sbb
fsin
push
mov
test
scas
lret
xor
ljmp
push
pusha
cmp
repnz
mov
mov
jle
repnz
mov
rep
xchg
fcompl
push
js
inc
add
and
stc
cmp
sub
add
das
sbb
jne
sbb
mov
and
outsb
stos
xchg
cld
lahf
mov
jg
mov
mov
rcrb
jb
ds
inc
jnp
mov
push
inc
call
dec
sub
cmp
jmp
adc
je
dec
xor
xchg
dec
cmpsb
mov
daa
dec
clc
push
daa
in
jno
mov
mov
mov
bound
insl
das
add
roll
bound
add
hlt
add
aas
xor
dec
fsub
and
repnz
fisttpl
pop
add
mov
arpl
fisttpll
add
jnp
ret
adc
dec
xchg
adc
movb
fstpl
inc
fcos
shrl
and
inc
ja
fdivrp
ret
dec
cmp
jne
fbld
lret
popf
sti
aad
jge
mov
cltd
mov
jno
adc
adc
pop
shlb
lahf
ds
mov
pop
pop
adc
ss
sbb
lcall
scas
mov
jg
mov
mov
insb
call
mov
cli
subb
push
test
pushf
fld
push
stc
fiadds
mov
aad
mov
xchg
cmpl
sub
mov
dec
in
call
mov
cmp
enter
push
scas
enter
es
pop
and
mov
out
inc
mov
jo
je
gs
les
inc
les
repz
jno
aam
and
popa
test
mov
mov
lock
in
sub
popa
adc
call
jl
hlt
sbb
sub
bound
pop
test
sub
xchg
int
aam
sub
loop
adc
loop
neg
jge
icebp
enter
sbb
aas
or
repz
test
repz
and
pop
jae
push
sbb
icebp
std
jb
imul
pop
ds
adc
cmp
enter
xor
sti
scas
sub
enter
cmp
dec
outsl
lea
loopne
dec
xor
leave
dec
jo
fcmovnbe
adc
ret
cli
fdiv
sbb
inc
ljmp
sbb
jnp
decb
add
push
repnz
sbb
dec
int
xor
xchg
or
or
std
sbb
js
add
rclb
xor
add
pop
mov
nop
jle
push
imul
push
dec
mov
push
jl
js
cmp
lea
popf
mov
mov
je
inc
mov
ds
lret
pop
roll
mov
adc
adc
mov
je
std
loop
cmp
daa
fwait
das
rdtsc
jmp
ss
sub
lret
jns
mov
add
push
sub
pop
rcrb
xchg
inc
push
jns
loop
sub
dec
add
call
mov
mov
sub
in
sarb
dec
xchg
jb
add
mov
mov
cmpsl
adc
in
ret
lods
je
pushf
icebp
cmp
xchg
xor
pop
jp
daa
subb
cmc
push
pop
jp
mov
pop
lock
dec
sbbl
decl
adc
lret
and
insb
fwait
js
xchg
xchg
mov
mov
shrb
jae
or
imul
xor
and
xchg
push
fmuls
daa
push
sti
mov
mov
int
mov
xchg
jle
jmp
jle
push
adc
xor
xor
push
push
je
jle
push
fdivl
shrb
mov
pop
movsl
jg
cmp
negb
jp
andl
das
inc
lret
fnstsw
mov
outsb
adc
xor
mov
cmpsl
add
push
push
je
orl
cmp
xor
or
dec
push
pop
add
out
add
popa
add
jg
adc
stos
lret
cmpsb
push
or
push
push
icebp
clc
dec
cmp
push
aam
lcall
cmp
out
xchg
jmp
or
out
icebp
or
inc
or
add
test
movsb
loope
inc
mov
add
sbb
jbe
ljmp
xor
pop
xchg
jns
dec
xchg
sub
outsb
call
call
push
sbb
arpl
in
aas
pop
aam
jg
pop
mov
std
das
popf
sbb
aad
cmp
or
and
aaa
data16
les
fstpl
jge
cmp
inc
mov
jno
mov
push
mov
rcrb
jg
inc
mov
lods
sub
test
jo
insb
test
call
pop
sub
cwtl
ss
dec
addr16
faddl
in
inc
jns
outsb
neg
stc
push
fcomps
call
lds
movsl
mov
adc
into
push
mov
dec
test
pop
ja
movsb
jp
mov
clc
xor
je
hlt
mov
mov
mov
jae
jp
push
ret
cs
pop
fcmovbe
dec
xchg
sbb
stc
arpl
outsb
mov
cmc
xchg
add
add
cmpsb
adc
ror
les
cmp
imulb
repnz
and
mov
jo
fildl
pop
call
pop
push
in
pop
lods
pop
sbb
inc
pop
jb
mov
push
mov
fsub
jmp
in
lds
dec
sbb
mov
pop
inc
icebp
pop
dec
xor
test
sbb
aaa
mov
cmp
clc
mov
into
jbe
and
lahf
sbb
mov
pop
in
jbe
add
adc
adc
mov
lret
pop
xor
jge
jg,pt
cltd
sahf
mov
repz
xlat
les
imull
xchg
pusha
stos
cmpsb
inc
add
pop
adc
stos
scas
movhlps
adc
push
mov
mov
inc
or
insb
decb
out
jecxz
cmc
ja
and
pop
cmp
test
cli
cli
jne
mov
inc
dec
cmp
imulb
jmp
add
inc
sbb
or
rorl
shlb
dec
adcl
jge
scas
cmp
mov
inc
ja
mov
xor
inc
inc
sarl
sub
mov
jg
jb
sti
pop
xchg
mov
nop
andl
inc
jae
and
push
cmp
int3
mov
jmp
lret
lahf
jo
pop
ret
sub
ja
stc
adc
mov
out
leave
or
push
cmp
aas
jg
jno
cmp
leave
adc
inc
mov
adc
xchg
cmpsl
xchg
or
push
mov
push
loope
sbb
ret
jnp
fcos
xchg
and
sub
fwait
jmp
xor
mov
dec
lock
lret
insb
and
test
xor
pop
sub
add
arpl
sub
scas
inc
pop
or
iret
enter
xchg
insb
sub
push
ds
mov
inc
push
lock
sar
xor
loope
pop
jmp
sub
scas
aad
push
adc
pshufw
or
lcall
cmp
hlt
mov
mov
daa
and
mov
loopne
lea
add
jne
pop
sarb
mov
and
mov
sub
dec
imul
je
mov
jbe
outsb
mov
nop
add
adc
int
out
dec
mov
inc
pop
mov
mov
jp
xchg
jg
cwtl
add
pop
and
push
rcll
test
or
fisubrl
ret
aad
inc
ja
out
or
mov
loop
iret
sbb
add
movb
pop
cltd
inc
andb
and
filds
inc
pop
popf
xchg
lea
iret
xchg
sti
adcl
fists
fisubl
jg
aas
mov
push
repz
stos
inc
jecxz
arpl
sahf
xchg
pop
mov
les
mov
jmp
cs
add
fsubrl
scas
pushf
xchg
cwtl
addr16
cmp
sahf
out
outsl
cli
ds
shlb
les
xchg
hlt
shl
xchg
mov
pusha
dec
in
daa
xor
push
out
dec
int
sbb
test
push
jmp
cmpsb
out
cmp
cmp
out
xchg
adc
push
ds
jae
or
pop
rcl
test
jge
xlat
push
xchg
push
jne
mov
jecxz
jbe
dec
lock
test
ja
inc
lcall
mov
int3
cs
or
sub
dec
rorb
mov
inc
cmp
insb
rol
cmp
push
hlt
jmp
out
cli
or
cmp
sarl
pop
cmc
sbb
fdivs
out
adc
adc
fbstp
jno
inc
shrb
lcall
popf
push
popa
pusha
mov
push
push
cmp
js
xor
iret
ss
cmp
lds
pop
sbb
loop
scas
shrl
sahf
stos
mov
dec
dec
xchg
sub
in
das
xor
pop
sbbb
or
mov
add
jp
scas
jnp
loopne
icebp
pusha
sbb
rclb
mov
inc
cmp
xchg
mov
fstl
in
inc
ja
dec
ss
and
inc
lock
lds
xchg
xchg
andb
subb
cmp
jg
and
filds
in
insl
lret
mov
mov
xchg
sbb
dec
inc
cltd
mov
adc
and
cmpsb
std
cli
sbb
jnp
cmp
sub
lds
lds
dec
ds
xor
mov
aaa
add
pop
mov
dec
xchg
push
adc
and
jb
sub
aad
cmpsl
pop
inc
adc
jmp
out
decb
addr16
clc
sbb
insl
xor
or
rcrl
ljmp
xchg
xchg
jns
mov
fidivs
pop
xlat
xchg
mov
mov
dec
fcmovb
mov
inc
add
ljmp
add
xlat
cmp
xor
pop
sbb
icebp
pop
fsubr
std
dec
loopne
push
inc
loopne
jne
shl
lods
jb
iret
aas
xor
shl
jae
movsl
sbb
sbb
mov
cmp
adc
movsl
push
pop
push
out
mov
xor
clc
push
or
add
insl
fprem
inc
or
orb
js,pt
add
mov
stc
inc
or
ret
inc
sub
insb
push
cmpsl
cmc
popf
add
inc
lahf
iret
aad
sbb
jno
imull
mov
mov
cmp
sub
test
and
movsl
pop
mov
dec
xor
adc
mov
imul
mov
pop
fiaddl
andps
jg
ret
adc
or
enter
adc
push
cmp
xor
sub
out
and
pushf
pop
subb
sbb
hlt
add
cmp
sub
popa
int3
out
mov
sub
jle
popa
dec
xchg
push
insb
rcrb
jno
rol
inc
mov
jns
imulb
push
inc
pop
scas
adc
jmp
gs
xchg
push
dec
jno
fnstcw
xchg
lock
lods
adc
sbb
insb
bound
shl
mov
mov
ljmp
push
adc
out
data16
jecxz
in
imulb
push
cmp
xchg
das
add
or
add
mov
and
jg
roll
sub
cld
test
out
cwtl
mov
ja
mov
add
xor
popf
mov
sub
test
dec
jmp
incb
js
dec
or
jb
mov
add
jmp
and
xchg
testl
push
mov
leave
push
notb
sbb
repnz
ds
lods
in
out
add
movsb
arpl
and
loop
mov
int3
jbe
pop
mov
mov
imul
push
adc
dec
add
mov
push
push
dec
push
xlat
mov
pusha
incb
pop
inc
add
xchg
lds
jno
loopne
cmp
icebp
outsl
or
push
mov
and
push
sub
addps
clc
je
aaa
test
das
mov
leave
push
pushf
out
scas
adc
stos
xchg
iret
insl
in
lds
pop
movsb
xor
stos
adc
movsl
fdivl
jecxz
pop
pop
insb
cmp
mov
ficoml
addr16
pop
or
shlb
or
gs
ret
enter
mov
mov
iret
in
stc
add
out
ret
mov
xor
repz
scas
aam
outsb
sub
notb
pop
push
adcb
or
and
pop
or
clc
or
pop
in
adc
rep
fs
inc
cmp
push
icebp
xchg
adcl
lret
mov
rorb
mov
movsb
xchg
xchg
in
adc
pop
or
add
jae
ret
jmp
negl
jmp
movsl
ret
popf
scas
push
sbb
inc
dec
insl
dec
add
push
cmp
clc
mov
inc
fsub
xchg
out
aas
mov
jno
and
inc
fisttpl
in
lahf
lock
sub
and
mov
xchg
dec
mov
push
and
push
jnp
cmp
xor
dec
adc
in
outsb
sub
cmc
xor
pop
cmpsl
mov
or
cmpsl
cwtl
cld
loopne
dec
pushf
pop
in
rcll
pop
sub
aam
bound
out
add
adc
mov
push
imul
mov
adc
xor
or
into
adc
jecxz
stos
jo
scas
insb
lret
pop
repnz
xor
gs
or
pop
dec
mov
jg
xchg
mov
push
mov
adcl
lods
insl
mov
pop
into
push
push
sar
scas
xchg
or
pop
data16
push
jnp
mov
pop
push
mov
imul
cmpsb
xor
push
sti
adc
shl
push
mov
xor
nop
repz
hlt
mov
pop
pop
push
ret
mov
mov
push
add
ja
add
adc
fmuls
call
lcall
jmp
rorb
cld
sub
ficomps
shll
fcoml
cmp
in
or
inc
loope
jae
rclb
rcr
out
pop
jnp
imul
ss
push
fnstenv
mov
dec
fs
scas
outsl
or
ljmp
fldcw
addb
fstpt
jle
sbb
adc
fsts
jp
cmp
subl
and
call
sub
test
xchg
lods
adc
xor
adc
add
xchg
mov
dec
aas
nop
and
mov
add
xlat
mov
je
sbb
lods
mov
cli
call
jg
jge
es
jns
scas
jle
sbb
mov
and
cld
mov
push
test
inc
inc
sbb
ds
or
jl
xchg
das
cmp
add
and
mov
and
cmp
icebp
mov
cmp
xor
pop
add
lds
sub
lret
cmp
and
pop
std
adc
fstpl
sti
mov
adcl
out
popf
ficoml
in
jl
push
jecxz
ret
and
outsb
pusha
mov
mov
mov
in
popf
out
inc
adcb
inc
mov
sub
or
xor
xchg
dec
dec
fdivl
mov
nop
out
push
out
pop
sbb
sub
rcll
xor
mov
push
push
push
add
jb
mov
pop
inc
mov
pop
cmp
add
std
fwait
or
add
ss
mov
fldt
pop
dec
sub
mov
mov
mov
push
out
pop
jno
adc
push
idivl
test
push
or
pop
mov
sub
cmp
movsl
dec
xchg
adc
or
mov
or
pop
call
lret
lret
add
jnp
mov
and
or
and
dec
inc
not
sub
add
es
sub
je
xor
clc
lret
imul
es
mov
adc
pop
and
xor
sub
xor
push
mov
dec
jecxz
inc
fcompl
cwtl
pop
stos
popa
out
pushl
add
andb
mov
push
sub
mov
mov
std
sub
adc
cltd
pusha
in
xor
pop
mov
pushf
aam
add
cmp
shrb
imul
dec
mov
cmp
lahf
and
enter
imul
or
cmp
xchg
cmp
xchg
divb
mov
enter
lret
loop
std
cld
push
pop
inc
xchg
cld
sbb
in
repnz
mov
mov
pop
fidivl
cli
add
jae
mov
mov
xchg
pop
inc
mov
push
push
pop
mov
push
in
jle
push
arpl
bnd
sahf
out
jo
ret
xor
fmulp
cmp
add
rcr
fldt
or
add
push
cmp
je
movsl
jge
dec
dec
aam
mov
ds
incb
adc
enter
mov
xchg
scas
test
add
mov
lds
movsl
mov
pop
sub
mov
push
mov
cmp
mov
dec
jge
shll
jb
dec
xor
aaa
adc
push
inc
dec
cmc
stos
dec
xor
sub
xchg
mov
or
cmp
mov
rorb
mov
jge
sub
push
daa
call
mov
lds
mov
add
inc
or
or
push
clc
imul
mov
jno
lret
ljmp
pop
addr16
lcall
pop
sbbb
loopne
arpl
out
mov
leave
adcb
cmp
jmp
nop
pop
hlt
mov
notl
push
neg
mov
mov
lcall
insb
hlt
jle
ds
jl
leave
rol
and
xchg
adc
pop
and
and
fwait
popf
ret
mov
rclb
out
test
ret
lea
mov
das
mov
adc
iret
aam
dec
mov
dec
dec
jne
jle
scas
dec
test
outsb
xor
out
in
scas
loop
xchg
hlt
jge
or
mov
or
push
inc
and
adc
hlt
sub
sub
test
stos
sbb
clc
mov
inc
cmpsl
sub
testl
dec
scas
cli
mov
aad
mov
jmp
mov
or
mov
and
push
out
mov
mov
dec
mov
mov
jb
es
mov
cmp
in
inc
dec
test
arpl
rorb
lds
jp
mov
sub
fsubr
call
pop
stos
dec
sub
popf
cmpsl
push
jmp
cmpsl
xor
sub
pop
out
dec
inc
cmp
enter
movsl
jne
jb
cmpsb
shrb
data16
ss
jb
jle
sbb
into
cmp
rolb
sub
js
and
mov
mov
and
test
mov
cmc
mov
mov
loopne
or
xchg
sti
pop
aam
push
sahf
aas
sbb
inc
jbe
inc
loopne
xchg
jo
popa
rcrl
xor
mov
lods
add
pushf
cmp
bnd
sbb
in
dec
lea
inc
outsl
jb
sub
scas
cmpsb
mov
jge
test
xor
jmp
lods
sub
ret
xor
sub
aas
xor
into
mov
cmp
clc
addl
mov
jno
lret
idivl
mov
add
cmp
add
fmul
jo
orl
stc
gs
repnz
or
xchg
sub
lcall
inc
notl
into
test
cmp
bound
scas
lahf
clc
repnz
inc
push
pop
jmp
dec
lret
push
mov
cli
and
or
xchg
je
dec
inc
stc
dec
or
in
out
into
mov
loope
mov
das
dec
sub
ret
in
cltd
repz
fistl
add
mov
mov
aas
flds
jb
subb
fstpl
mov
lods
test
sbb
dec
jge
pop
mov
pop
inc
inc
sub
pop
xor
mov
bound
es
jg
test
nop
lret
add
outsb
fcmovnu
into
jne
cmp
cs
jns
in
data16
out
bound
sbb
inc
and
inc
jecxz
xor
mul
lds
lods
mov
push
ljmp
lret
push
pop
hlt
sbb
lea
je
scas
mov
jno
inc
xchg
in
mov
lock
xor
pop
adc
pop
in
mov
sbb
xor
jae
arpl
xchg
insb
scas
data16
pop
leave
and
mov
push
inc
ljmp
sub
or
inc
push
sti
dec
inc
cmp
inc
cmp
fmull
pop
xchg
jp
or
dec
outsl
insl
shlb
mov
push
cmc
pop
sbb
sahf
xor
test
ret
xchg
pusha
push
fwait
jbe
or
jmp
ss
adc
dec
adc
lock
xor
in
push
jno
stc
jae
push
in
out
jae
sbb
dec
xor
imul
push
mov
sub
clc
push
xor
gs
popa
push
loopne
cmp
push
arpl
into
imul
into
sub
adc
loope
and
xlat
ret
ss
lahf
sbb
cmc
out
inc
aaa
push
ljmp
inc
jp
pop
xor
pop
mov
repnz
sahf
das
mov
adc
or
jno
push
ljmp
mov
pop
adcb
mov
pop
xchg
mov
lods
jne
fdiv
xchg
stos
shlb
cmpsb
inc
cmp
cmp
sbb
bound
pop
sub
loope
cmpsb
pop
pop
fcomps
pushf
mov
fwait
scas
adc
or
into
sahf
int3
xchg
ja
mov
js
adc
and
cwtl
sub
ljmp
cmpsl
mov
popa
lds
or
xchg
cwtl
cmp
jp
clc
ficoml
mov
int
and
mov
xor
stos
dec
js
ss
fldcw
push
xor
out
xchg
pop
push
sub
testb
mov
push
add
pop
enter
xchg
mov
xchg
sbb
insb
jmp
adc
adcb
pop
sbb
cmpsb
shrl
inc
mov
scas
test
faddp
xchg
lret
jle
das
data16
out
into
dec
daa
xor
pushf
ljmp
aam
leave
dec
mov
mov
xchg
jb
mov
arpl
rol
xlat
jae
clc
pop
lods
xor
loopne
xlat
and
out
jae
mov
popf
cmp
les
adc
loope
dec
cld
fldt
jg
jl
mov
movb
mov
mov
mov
cmp
pop
or
pop
jb
int3
sbb
stos
jo
pop
int3
gs
lods
mov
movsb
xchg
inc
push
imul
and
mov
add
xor
adc
clc
clc
shrb
test
orl
dec
ljmp
fadds
addl
xchg
std
mov
xchg
cmpsb
and
test
push
sti
je
outsl
xchg
jecxz
cmp
mov
and
mov
fwait
push
fbld
lret
xchg
das
imul
out
andb
orl
enter
and
jb
jg
jge
es
cmp
and
loop
cld
inc
cltd
fisubl
inc
mov
cmpb
pop
movsl
inc
rcrb
daa
jg
pop
movsb
cmp
pusha
dec
xor
push
cmp
mov
inc
add
cltd
test
jecxz
pop
lods
lods
or
cmp
lods
adc
xchg
pusha
testl
pop
mov
push
dec
push
jecxz
stc
sub
mov
jmp
imul
inc
sub
mov
call
int3
push
or
rcll
dec
fimuls
add
xchg
inc
negl
dec
lods
jae
lahf
xor
mov
mov
outsb
sub
cmp
push
sahf
test
push
mov
fstpt
scas
subl
ds
lods
mov
scas
mov
scas
daa
sub
fistl
int
insl
mov
and
push
fs
sbb
call
lea
mov
or
outsl
jl
xchg
pop
mov
pushf
and
sub
aam
mov
xchg
fs
mov
adc
mov
sbb
out
sub
ficomps
stc
cmp
loope
mov
rorl
into
icebp
mov
xchg
add
xchg
aas
movsl
mov
clc
ljmp
push
out
add
xor
jo
shll
and
add
hlt
movsb
insb
idiv
jecxz
xchg
test
test
iret
mov
cld
popf
in
mov
sbb
adc
sbb
mov
pop
xor
outsl
and
adc
ficomps
sbb
ret
and
dec
jb
dec
aad
push
add
cmc
lret
test
sarl
xor
scas
add
push
mulb
cmp
xor
push
jnp
scas
xchg
pop
jb
pop
xchg
ss
adc
xor
and
fisubl
push
es
adc
fwait
ret
lahf
jnp
xor
sbb
frstor
push
mov
cmp
add
enter
fsubrl
aam
mov
out
sub
shl
gs
xchg
adc
mov
sbb
jg
mov
sbb
fisubl
and
pop
sub
jg
mov
lahf
add
rolb
flds
push
jmp
sub
aad
adc
popa
ss
cmp
jae
outsb
bound
loop
lret
push
xchg
dec
cmp
add
xchg
cmpl
call
add
mov
and
std
mov
jne
dec
cld
mov
inc
es
fstps
push
add
pop
fbld
xor
jne
ret
xor
pop
std
into
jne
lods
add
shrl
push
aad
mov
mov
or
xchg
xchg
popf
js
jle
test
fmuls
lock
decb
stos
mov
cwtl
into
dec
mov
popf
mov
and
lcall
call
lea
faddl
jo
outsb
shll
out
mov
cs
div
push
cmpsb
xchg
scas
orl
sti
lret
jbe
push
imul
ljmp
jb
cmp
mov
nop
dec
mov
mov
xor
push
mov
jbe
adc
repz
test
pop
inc
push
mov
test
mov
int
enter
cmpsl
adc
or
mov
insb
cmc
adc
mov
inc
out
inc
popf
hlt
push
es
and
cmpsl
test
mov
insl
push
test
inc
jns
cld
shl
xchg
addr16
andl
jg
lods
cmp
pusha
and
and
jno
stc
repnz
push
sub
pop
mulb
jp
lock
std
adc
int
cmc
rorb
shrb
ret
mov
lret
test
test
or
cld
jp
sub
jl
mov
pop
xorb
mov
and
les
daa
or
pop
push
mov
cmc
inc
dec
mov
insb
jge
inc
mov
int3
or
inc
and
jg
int3
mov
dec
lods
das
lock
fstpl
cmp
icebp
pop
sbb
mov
insl
adc
jmp
jl
and
xor
jmp
xor
outsl
and
push
xchg
cld
cmp
jmp
cmp
mov
sti
sub
push
lret
adc
push
jl
adc
js
jo
cli
or
fs
or
inc
dec
cmp
jl
in
xor
cli
mov
pop
inc
xchg
and
in
loop
xor
aas
pop
add
push
and
mov
test
inc
adc
xor
imul
add
cmp
fcoml
pop
mov
in
pop
pop
sarl
pop
mov
fwait
jge
scas
fdiv
inc
mov
sahf
cmp
loop
pop
sbb
jp
subl
in
mov
pop
ljmp
xchg
sub
fidivrs
adc
jge
push
adc
jo
int
stos
mov
sub
in
cmpsl
mov
mov
inc
call
fcomps
xchg
icebp
add
push
sbb
idivl
or
jge
test
mov
sbb
mov
mov
cmp
insl
cmp
mov
pop
test
ret
lods
or
push
or
mov
mov
sbb
mov
out
insb
enter
ss
mov
outsb
push
fsubr
les
sbb
sbb
popa
push
daa
jnp
lods
shlb
lahf
dec
or
fwait
imul
mov
xchg
gs
mov
mov
nop
sbb
inc
sub
popf
fnstenv
add
mov
add
push
arpl
pop
stos
mov
sti
stos
repnz
fcmovb
clc
mov
lock
jno
or
sub
outsb
test
scas
stos
pop
lods
rcll
dec
test
nop
sbb
dec
es
dec
add
stc
mov
inc
xchg
push
and
cmp
push
mov
pusha
rcrl
and
clc
jno
jne
dec
mov
out
ja
shll
pop
add
in
lods
fwait
out
bound
dec
aas
repnz
inc
sub
pop
xchg
jecxz
jnp
ret
in
cmp
adc
jle
fisubl
pop
es
xchg
mov
stc
sub
iret
adc
imul
cmp
pop
or
rolb
fistl
scas
imul
out
stos
roll
sbb
push
and
jb
lcall
fadds
jno
ds
imull
icebp
fisttpll
pop
or
cmp
jl
fwait
pushf
ss
movsl
adc
adc
lcall
inc
loopne
xchg
clc
xchg
dec
xor
mov
ja
out
gs
push
inc
pop
lds
jmp
out
jmp
fildl
leave
mov
dec
sbb
cmp
pop
pop
movsb
sub
mov
dec
lods
call
mov
mov
testb
dec
cld
push
xchg
call
push
sub
leave
jb
jl
lods
ret
pop
test
loope
pop
or
mov
sbb
cs
lods
push
dec
mov
mov
cwtl
imul
cmp
adc
jge
adc
cli
sbb
ds
cs
lret
lods
loop
sbb
loopne
xlat
xor
es
xchg
push
pop
mov
jne
iret
xlat
push
sbb
and
dec
jns
or
jns
jae
jp
jns
ret
jne
inc
dec
mov
sub
inc
pushf
arpl
xor
sbb
jo
xor
lock
mov
push
push
lret
fnstcw
push
cmpsl
out
fisubrs
inc
leave
adc
pushf
lret
inc
aas
inc
inc
icebp
and
adcl
data16
pop
add
mov
movb
insb
jb
test
addr16
add
dec
xlat
jmp
cmp
jns
fwait
hlt
add
imul
iret
outsb
adc
jp
bound
test
lods
sbb
sbb
xor
push
dec
lds
dec
in
mov
xor
sub
cwtl
dec
pop
xchg
mov
or
test
js
movsl
mov
ljmp
les
adc
push
sbb
inc
lock
fcmovne
aaa
dec
dec
sar
pop
popa
cld
gs
sbb
mov
ja
jp
das
adc
jp
inc
jge
sub
xchg
jle
ljmp
pop
loop,pn
and
xor
mov
sub
popf
std
push
out
mov
das
stos
cmp
inc
fld
ret
xchg
ljmp
aam
sub
cmpb
xor
into
lcall
pmaddwd
adc
sbb
xchg
jl
ds
test
pop
inc
in
sti
fdivr
push
ds
sbbl
push
or
lock
movsl
aam
xchg
mov
loopne
movsb
xor
cli
cmp
mov
insl
adc
adc
mov
mov
dec
jnp
cmp
dec
jge
push
incl
push
push
outsb
and
outsl
out
lods
dec
mul
push
mov
test
inc
dec
push
cltd
sbb
outsl
in
ret
push
or
pop
icebp
repnz
sub
lcall
stos
cmpsb
scas
dec
mov
push
shlb
adcb
imul
add
dec
in
push
cmc
roll
and
insb
jmp
adc
sbb
mov
gs
cs
push
xor
cmp
xchg
mov
clc
aad
mov
mov
aaa
dec
mov
mov
js
out
inc
or
sti
and
ss
inc
xchg
cmp
stos
mov
mov
xor
mov
inc
adc
ljmp
les
pop
cs
popf
enter
jge
loopne
cmc
rcrb
mov
pop
or
mov
ret
adc
shll
js
xlat
in
jp
push
sbbl
or
cmc
xchg
icebp
cmp
test
clc
movsb
aad
jle
repz
inc
int
adc
popa
cmp
sbb
inc
push
jge
lds
pop
pop
sbb
neg
test
cmp
inc
enter
loope
xchg
outsl
shll
fnstenv
test
push
cld
jno
sub
loopne
cmp
adcl
add
cmp
fidivrs
call
lret
rorl
add
std
mov
test
js
lods
movsb
mov
test
stos
add
test
lock
mov
push
movsb
and
sub
xor
adc
fwait
ret
sub
imul
test
mov
mov
and
sarl
gs
sti
cltd
mov
ret
test
dec
testl
daa
rorb
test
add
jp
mov
mov
out
xor
or
movsl
push
push
xor
lods
nop
jnp
sti
aas
ret
mov
xchg
ljmp
sub
or
push
push
adc
hlt
mov
xchg
fisttpll
add
xchg
sbb
dec
insb
jno
add
inc
mov
cmp
jecxz
cmpsb
cmp
mov
dec
inc
mov
mov
in
ja
push
mov
fstpl
filds
mov
std
inc
pusha
adc
aas
daa
call
shrb
inc
lahf
iret
call
cmpsl
mov
jb
sbb
xchg
cmp
xlat
ss
popa
sub
adc
imul
mov
adc
testl
xor
cmc
in
sti
mov
lahf
fiadds
insl
push
out
stc
fs
les
leave
fstpt
test
xor
jg
push
aaa
popa
jae
sub
std
or
push
fildl
in
and
shlb
imul
push
nop
fstps
ret
ret
jb
sbbl
push
mov
dec
cs
sub
fidivl
sbb
jno,pn
pop
hlt
and
adcl
fsubrl
repnz
sbbl
cltd
xchg
cmpsl
cmp
jge
shlb
push
popf
push
mov
xor
sub
xchg
xchg
scas
imul
fwait
std
inc
or
mov
adc
dec
in
xchg
or
fisttps
daa
adc
pop
mov
pop
das
jecxz
insb
loop
hlt
cwtl
imul
adc
fincstp
fwait
xchg
push
sub
test
jno
jg
xchg
cmp
imul
sbb
mov
filds
jl
int3
inc
cwtl
andl
sbb
loop
or
adc
inc
stos
dec
mov
aad
adc
cld
rcpps
xor
mov
ret
cmpsl
paddusw
xchg
inc
sbb
ja
loopne
push
out
lds
ret
adc
pop
pop
movsl
rep
mov
xchg
mov
xchg
xor
roll
pop
sub
dec
pop
aam
clc
aam
mov
mov
jo
jne
fcomps
add
subb
adc
mov
outsb
mov
movsb
outsl
stc
sahf
adcl
ret
sub
int
adc
lea
pushf
fcmovu
push
movsl
mov
push
mov
push
fidivs
test
jb
jg
out
jl
dec
inc
cmp
call
ror
rclb
ds
ja
ret
lea
outsb
repnz
adc
jns
dec
jg
dec
cmpsb
les
mov
out
insb
mov
cmp
scas
sti
add
into
jp
add
inc
push
push
sbb
sub
test
pop
cmc
push
mov
jmp
std
add
vorpd
cmpsb
fidivl
sti
insb
sub
mov
scas
cli
xchg
cmc
addb
adcl
in
mov
mov
movsl
nop
sbb
mov
pop
shlb
cmp
loope
sar
popf
mov
repnz
sub
sub
dec
mov
in
push
add
sub
scas
stc
repnz
fcmovb
ljmp
loope
cmp
mov
sub
sbb
outsl
mov
ja
and
inc
leave
adcb
mov
lcall
cmp
xchg
sbb
mov
jle
dec
mov
jno
test
movl
mov
clc
add
push
sub
fdivrl
and
shlb
jbe
cmc
mov
mov
mov
pop
push
jp
xor
fildl
sbb
adc
stos
dec
inc
xchg
inc
cli
add
sbb
in
insl
aad
rcrl
movsl
sub
pop
into
and
repz
lods
enter
mov
movsb
and
repz
jg
icebp
cmp
jnp
iret
and
pop
mov
inc
test
daa
loope
cmpsl
lahf
xchg
fidivl
cmp
or
test
testb
xchg
xchg
bound
in
cmp
outsl
out
jmp
shll
mov
jo
clc
add
xor
pushf
icebp
lea
bswap
imul
insl
cwtl
testb
jno
test
insb
xor
daa
add
mov
loop
inc
movsl
outsb
addr16
imull
mov
push
push
addr16
jp
or
pop
dec
test
adc
sbb
mov
mov
add
loop
das
fs
mov
add
mov
je
push
imul
mov
ja
call
and
inc
lods
lahf
lds
lret
xor
data16
push
nop
out
imul
mov
cmp
and
dec
dec
xchg
sub
in
stc
inc
mov
fs
sub
adc
cmp
xchg
cmp
aaa
push
jno
lahf
lahf
xchg
inc
mov
cmp
mov
lret
clc
addr16
faddl
push
loopne
pop
xor
xor
jle
add
adc
push
scas
jo
push
or
addr16
jecxz
es
push
and
dec
inc
mov
xorb
rclb
test
and
aaa
jno
icebp
inc
cmpsb
ja
enter
in
test
test
xor
scas
adc
or
inc
mov
imul
popf
pop
xor
add
and
clc
mov
cmp
sub
lret
movb
leave
jbe
mov
adc
and
stos
fs
stos
rep
dec
jmp
pop
fs
mov
pop
movsb
mov
push
sbb
clc
xchg
jecxz
jmp
mov
lods
pop
sahf
popf
jno
test
out
xchg
dec
aad
fists
lret
jg
in
movsb
das
loopne
push
in
push
int3
mov
inc
xlat
push
iret
sbb
cmpsl
xor
and
cli
scas
outsl
mov
jecxz
sub
xor
cmp
or
jne
fs
jbe
setge
pop
jns
add
sbb
push
test
js
sub
sub
and
xchg
into
adc
cmp
mov
cmpb
inc
jbe
and
push
lcall
or
test
stos
fiaddl
sarb
sbb
pop
jno
mov
pop
xlat
das
or
xchg
insb
loopne
inc
std
sbb
icebp
jp
es
stc
mov
icebp
mov
jns
inc
or
stc
push
xor
pop
int
push
mov
test
mov
pushf
and
mov
mov
daa
lea
dec
pushf
mov
sub
mov
and
lcall
add
iret
cmp
mov
or
lcall
push
mov
int3
add
es
pusha
scas
sahf
and
inc
push
sbb
pop
mov
nop
ret
push
in
inc
imul
std
call
loope
lcall
int3
orb
aad
aas
cld
test
in
in
sbb
fcomps
ds
jge
pop
or
in
xchg
lret
cmp
cltd
es
inc
dec
fwait
aaa
jne
or
lods
arpl
jle
xchg
push
into
int
lock
bnd
inc
pop
and
sbb
mov
imul
add
cmpb
mov
shrb
or
mov
bound
jmp
ss
sahf
jb
xchg
stc
ja
add
enter
adc
mov
test
faddp
push
sbb
mov
int
mov
in
sbb
pop
inc
jmp
inc
adc
shll
mov
and
dec
add
pop
test
xchg
sahf
inc
inc
sahf
pop
aaa
loopne
in
lds
sub
jae
int
insl
in
cs
repz
sbb
mov
sbb
loop
pop
dec
pop
test
daa
leave
push
test
incb
pop
in
scas
xchg
mov
shrl
fldt
nop
pop
or
xor
rorl
xchg
jge
jnp
mov
popf
mov
mov
push
sub
dec
xor
push
xchg
daa
add
xchg
mov
jmp
lods
push
xor
adc
xchg
push
fcmovu
repz
ljmp
aaa
iret
fistps
mul
push
inc
xchg
sub
cmpl
cmp
inc
cmp
orl
xor
inc
dec
inc
shrb
mov
xor
xchg
mov
int3
push
aam
pop
mov
xchg
mov
dec
push
push
inc
pusha
lds
enter
out
lea
sbb
fisubrs
jecxz
inc
movsl
cmc
pop
shrl
jo
icebp
xchg
xchg
push
loopne
adc
push
addr16
pop
sbbb
pushf
cld
jb
mov
fiaddl
push
js
cmp
cmp
dec
aas
es
leave
xchg
dec
xor
sbb
out
xchg
mov
cltd
jo
sbb
add
out
cwtl
add
sub
sbb
cld
call
div
xor
popa
push
mov
loop
sar
enter
stos
data16
jne
insb
leave
lret
mov
out
dec
mov
inc
mov
jl
cmpsl
shll
in
cmp
push
in
nop
pop
rcl
call
shlb
mov
push
in
mov
into
shlb
sti
lds
and
inc
incb
inc
mov
lahf
iret
push
dec
out
push
sbb
fistpl
out
add
cltd
dec
pop
jl
insb
or
xchg
repnz
sub
and
mov
adc
insl
pop
cs
into
or
xchg
inc
xor
cmp
js
jmp
jo
dec
movsl
sub
lods
cmpsl
xchg
insb
sbb
add
inc
bound
cmp
jmp
adcl
sub
pop
sub
test
pop
lret
leave
push
sbb
in
ss
xor
pop
jle
xchg
adc
cli
ror
lcall
adc
std
aad
fwait
fsubrl
clc
and
jge
fcmovnbe
inc
imul
inc
or
fidivl
je
bound
cs
loop
lret
addl
jmp
data16
lea
nop
cmp
adc
lahf
cmpsb
jnp
fnstenv
mov
stos
sub
cmc
cli
lret
cli
mov
pop
inc
aas
xlat
cld
xchg
cld
into
xchg
test
out
sbb
inc
push
je
repnz
in
mov
fisubs
fbld
mov
sub
lea
add
out
cmp
leave
icebp
or
repz
ret
mov
jbe
xchg
fidivl
jb
adc
dec
loopnew
sub
xchg
push
or
cltd
nop
fistl
inc
mov
adc
or
adc
xor
repz
or
lret
inc
push
scas
inc
enter
int
daa
mov
sbb
jecxz
sub
or
dec
nop
clc
loope
jl
inc
aad
xchg
rcl
cmpsb
pop
pop
sbb
das
adc
push
jae
pop
lds
pop
mov
insl
lods
stos
jp
push
add
sar
test
and
inc
movsb
mov
leave
into
pop
and
insl
jns
in
sahf
jbe
sbb
sub
popf
dec
add
ss
xor
in
bound
cwtl
pushf
sbb
insb
int
xor
bound
adc
hlt
sub
loopne
or
mov
sub
xchg
jp
push
daa
add
gs
fwait
and
jns
mov
sbb
pop
loopne
call
in
mov
mov
push
push
insb
dec
jl
pop
fldl2t
nop
lea
jle
cmp
insb
scas
add
inc
test
push
adc
mov
jae
mov
sahf
cmc
and
push
mov
sbb
push
pushf
lods
xor
push
addr16
testb
adc
fldl2e
push
cmp
je
in
imul
inc
dec
add
dec
lods
adc
daa
adcl
add
dec
ss
push
int3
sbb
mov
cmpl
xchg
adc
push
fildl
inc
and
shlb
in
sbb
pop
jne
insl
mov
addb
cmp
xlat
push
icebp
pop
xor
jne
xor
sbb
mov
xchg
pusha
sub
push
sub
inc
icebp
int
test
push
call
jg
repz
xor
in
std
or
std
xor
or
mov
push
sti
add
cs
inc
cmp
call
mov
mov
scas
ret
test
jmp
mov
dec
and
lds
insb
nop
sub
and
cmc
sbb
pop
jmp
sbb
int
jge
mov
outsb
xchg
mov
mov
outsb
xchg
cs
out
out
cmpsl
dec
and
jg
js
pop
out
mov
arpl
imul
sti
fucom
daa
adc
das
xchg
imul
cmp
aam
and
and
out
add
lcall
and
mov
mov
movsb
pop
insl
inc
cltd
imul
mov
push
fwait
notb
addr16
leave
out
sbb
and
pop
sbb
testb
mov
push
mov
es
mov
adc
mov
xchg
mov
cmpsl
insl
dec
mov
or
mov
sbb
sub
mov
test
adc
fadds
ud1
scas
loope
ret
add
xorb
imul
pushf
push
push
jecxz
data16
imul
push
daa
or
dec
nop
mov
pushf
mov
addr16
movsb
scas
test
cmp
mov
idivl
jo
sub
leave
movsb
out
out
mov
mov
subb
mov
aas
loopne
rorl
aaa
sqrtps
out
xor
and
ljmp
mov
mov
mov
mov
leave
ljmp
push
iret
aaa
dec
mov
cmp
stc
ret
jb
in
inc
mov
lahf
movsl
jne
inc
cmpsl
pop
fsts
shll
jb
sbb
adc
inc
hlt
das
jo
daa
xor
pop
js
add
add
pushf
xchg
ficoml
pop
roll
stos
lahf
mov
shll
push
lret
fisubs
cmp
or
testl
xchg
stos
daa
imull
and
xchg
pop
adc
and
mov
jno
inc
inc
repnz
in
mov
xlat
sarl
or
xor
jnp
aad
lock
sbb
push
add
bound
jbe
loop
shrl
movsl
and
pusha
test
jg
mov
mov
cmp
push
cmp
test
add
xchg
leave
inc
cld
adc
pop
xchg
hlt
popa
sub
jo
gs
sahf
mov
jle
popa
jb
and
into
sbb
lods
repz
xor
cmpsb
mov
imull
xor
xchg
in
push
sub
paddsb
push
mov
in
sbb
adc
arpl
jo
lods
outsb
aam
cmp
es
push
dec
adc
decl
or
xor
icebp
xorb
fcmovnb
xor
push
lret
mov
sub
push
xchg
lcall
xor
inc
out
sub
cmp
sbb
add
je
sub
dec
dec
cld
fsub
imul
out
xchg
in
jbe
and
mov
cli
adc
loope
xchg
mov
out
dec
inc
lcall
hlt
push
andl
and
aam
ret
adc
dec
sarl
xor
shlb
sbb
fidivl
push
pop
add
cmp
les
pushf
mov
mov
data16
mov
mov
jne
mov
int3
add
loope
std
fnsave
xchg
lret
call
das
stc
push
inc
divl
fstl
add
fimuls
mov
cmp
dec
push
pop
push
pop
daa
cwtl
repnz
jns
cli
ss
jno
cs
sbb
add
scas
mov
and
pusha
or
imul
jo
es
test
ret
push
pop
jmp
loop
or
mov
nop
pop
jg
icebp
fnstenv
push
sub
adc
push
xor
push
cmpsb
sub
dec
into
insl
mov
ljmp
sub
or
loopne
dec
xchg
mov
fdivrs
int3
pop
and
rcl
sbb
out
out
add
dec
rcr
add
imul
mov
dec
sub
cli
push
dec
xchg
lcall
fldt
mov
push
daa
cmpl
pop
pop
lds
or
jnp
mov
xchg
adc
sub
pop
pop
inc
mov
sub
arpl
sub
or
lock
jae
pop
cmp
mov
inc
cli
int
ljmp
mov
in
das
imul
inc
xchg
jb
mov
jb
mov
imul
add
pop
push
pop
dec
js
arpl
inc
mov
mov
fwait
nop
or
push
dec
insb
inc
add
inc
mov
xchg
mov
push
cmpsb
mov
cs
mov
loope
sarb
and
xor
into
xchg
mov
jne
sub
or
xor
add
pushf
imul
repz
andl
sbb
out
pusha
xor
jae
pusha
test
outsb
xor
mov
ret
dec
mov
cwtl
jo
and
jg
stos
int3
add
movsl
je
arpl
mov
mov
sbb
xor
jecxz
nop
jne
stos
orb
jmp
mov
adc
sbb
dec
sub
test
pop
xor
mov
xchg
movsl
andl
dec
dec
les
cmp
xor
loope
lods
inc
jbe
arpl
ss
mov
fdivs
mov
sbb
bound
icebp
push
cmp
popf
mov
nop
add
and
gs
cli
xchg
and
std
fsubrl
stos
xor
xchg
insl
sahf
mov
dec
mov
inc
and
adc
sbb
fcomp
fcmovu
sub
and
dec
stc
mov
lds
outsb
and
fnstcw
filds
lods
jg
or
push
and
jl
fwait
cmp
loop
cmp
out
pop
cltd
fdivp
mov
mov
add
add
out
nop
xor
mov
dec
sub
push
push
arpl
pop
dec
jmp
inc
xlat
mov
bound
xchg
leave
data16
and
pusha
addb
cmpb
mov
scas
call
insl
shll
mov
push
aad
nop
cli
and
jns
adc
pop
sbb
pusha
cmp
aam
sub
pop
jle
sub
and
loope
jno
rorl
je
addr16
inc
lahf
dec
sbb
xlat
jmp
scas
repnz
xor
negl
adc
sbb
scas
sbb
hlt
adc
adc
xchg
push
outsb
sub
clc
jecxz
out
and
pop
adc
imul
sbb
mov
fsts
xor
and
or
out
outsl
jo
push
sub
and
sub
movsl
sub
adc
pop
sub
lcall
xchg
stos
adc
ds
js
cmpsl
xor
add
cmp
in
es
cltd
mov
cs
push
jp
out
mov
xchg
sbbb
gs
in
inc
test
sub
mov
clc
ret
push
rol
dec
cmpsl
pop
insl
arpl
mov
push
push
mov
and
pop
iret
sbb
ss
icebp
mov
inc
sbb
shl
cmp
lcall
add
mov
cltd
mov
sbbb
popf
ficoml
outsl
or
jg
sarl
mov
mov
int
shlb
orl
pop
pusha
div
mov
inc
subb
add
cmp
add
inc
das
repnz
jmp
push
call
popf
mov
int3
inc
outsb
dec
mov
lea
stos
add
iret
sahf
inc
or
hlt
cmp
pop
mov
lea
mov
pop
js
or
cmp
adc
lods
ljmp
pop
hlt
mov
sahf
les
dec
dec
pop
out
push
dec
dec
pop
xor
adc
push
xchg
cwtl
addr16
pop
out
xor
icebp
and
enter
dec
insl
add
or
jmp
and
cmp
test
cli
dec
leave
ficoml
hlt
xor
test
aam
lods
mov
outsl
cbtw
das
ljmp
aam
mov
sub
cs
pop
or
and
or
stos
stc
add
jbe
outsb
mov
cmpsb
push
lods
add
push
jno
es
xor
jl
fxch
dec
mov
push
xor
dec
cmc
mov
jl
loop
jp
xor
mov
fiaddl
cmp
sbb
leave
mov
mov
rolb
ficomps
sbb
xchg
shlb
jns
jle
pop
out
pop
inc
pop
cmp
jnp
js
mov
or
out
or
iret
cs
mov
sub
adc
leave
test
push
rcl
mov
rclb
mov
inc
inc
sbb
mov
daa
movsl
aam
sahf
imul
mov
adc
sbb
in
dec
scas
divb
in
repz
cli
xlat
sbb
xchg
out
sbb
int3
mov
push
fwait
xchg
pop
sbb
xor
jne
dec
jmp
rorb
ljmp
dec
inc
movsl
fdivrs
repz
dec
and
in
negl
cmp
and
cmp
push
lea
ds
cmpsb
roll
jl
inc
xor
push
mov
negl
iret
out
nop
lea
dec
pop
cmc
dec
xchg
ja
mov
mov
push
subl
pop
arpl
push
les
and
xchg
adc
dec
scas
hlt
aaa
adc
inc
stos
push
fxch
sbb
mov
pusha
les
dec
dec
inc
add
dec
sarb
dec
loop
cmpsl
mov
add
xchg
loop
jne
lods
repnz
adc
mov
fbld
pop
or
aaa
inc
shl
pop
or
enter
push
jae
add
popf
sub
mov
mov
cmpb
enter
leave
inc
pop
outsb
bound
add
xchg
push
push
arpl
push
fsubl
mov
cwtl
daa
dec
mov
fwait
movb
mov
mov
add
jb
in
repnz
mov
cltd
mov
outsl
ret
fisubl
xor
movl
mov
in
loope
xor
cmp
movsl
xchg
or
pop
cltd
sbb
ljmp
push
ret
sub
lods
cmpsb
sbb
stos
sahf
lret
popa
xchg
mulb
mov
adc
push
ds
sbb
cmp
subl
mov
roll
xlat
pushf
and
sbb
mov
mov
out
daa
cmpsb
shrb
lods
nop
leave
out
jg
adc
jo
aaa
pop
es
lcall
mov
rorb
movsb
dec
push
push
loop
movsl
dec
add
and
loopne
sarb
in
push
lods
das
cmpsl
lret
mov
xchg
imul
jb
sbb
cmp
sbb
sub
insl
popf
and
push
jle
xchg
popf
mov
or
je
push
and
jp
icebp
cli
aad
fiadds
xor
rol
jmp
and
aas
xchg
mov
push
dec
xor
dec
xlat
mov
mov
or
or
xor
mov
daa
adc
stc
jg
cld
mov
es
sub
scas
leave
jecxz
in
push
pop
cld
stc
cmpsl
pop
sbb
add
jbe
subl
xchg
out
lock
add
mov
aaa
lahf
aaa
out
xchg
pop
xchg
inc
mov
mov
jnp
loopne
subl
jge
pop
icebp
pop
xor
mov
mov
or
adc
sub
mov
sub
lahf
dec
mov
push
xchg
cmp
and
xor
loop
aas
xchg
xor
mov
push
or
and
jp
xchg
les
add
pop
add
mov
mov
fwait
and
outsb
push
xor
push
mov
in
pop
adc
jmp
cmp
xchg
popf
popf
and
xor
mov
insb
outsl
or
cmp
sti
cld
and
pop
or
call
sub
imull
sub
cltd
or
enter
js
adc
ret
dec
out
mov
sbb
cmp
push
jl
fildl
ss
or
ss
adc
dec
fdecstp
into
punpckldq
pop
mov
mov
add
loopne
add
mov
ret
xor
cmpb
aaa
adc
sub
fildll
clc
inc
adc
mov
test
insb
ss
int
into
es
dec
inc
pop
push
cltd
aas
repz
imul
jp,pt
pop
ss
jp
cmp
pop
cwtl
int
scas
cmc
xor
out
adcl
mov
sub
jmp
xor
lahf
lret
arpl
cmp
cmpb
out
sub
mov
xor
imul
push
push
xchg
hlt
pop
xor
jl
inc
xchg
outsb
mov
sbb
and
xchg
cmp
inc
xchg
push
repz
push
inc
cmc
and
fs
call
pop
loopne
adc
dec
push
jmp
hlt
les
repz
in
popl
fnstsw
shrb
sub
xchg
push
push
loopne
int3
mov
out
push
aam
fstl
pop
fldt
iret
cmpb
dec
mov
sbb
aas
and
repnz
ljmp
dec
sbb
jl
shlb
mov
loopne
fcoms
xchg
loop
movsb
sub
sub
adc
xor
dec
xor
mov
shlb
sub
imul
or
xor
stos
push
ss
cld
sbb
sub
pop
loop
daa
mov
sub
unpcklps
orl
ficoml
out
jae
push
lcall
out
cmp
insl
movsl
sarl
bound
sub
clc
test
in
mov
imul
add
hlt
adc
sub
jnp
mov
sub
mov
or
mov
shll
dec
jmp
sbb
mov
test
out
shlb
inc
xor
arpl
imul
into
addl
les
stos
scas
xor
mov
xchg
insl
std
cmc
insb
dec
cmp
or
sub
sbb
dec
cltd
mov
adcl
stos
jb
fstps
xchg
lahf
xchg
outsl
repz
sbb
inc
xchg
out
add
orl
push
bound
add
fcmove
loope
dec
clc
addl
out
out
enter
gs
bound
sti
sub
mov
pop
xchg
adc
push
xchg
enter
sbb
jae
fs
inc
sbb
dec
loope
ds
push
mov
jae
cmp
into
dec
imul
loop
adc
mov
out
xchg
xor
and
ss
in
stos
or
add
mov
mulb
jl
mov
int3
idivl
in
inc
imul
cwtl
cs
hlt
in
pop
adc
mov
incl
imul
sub
and
push
jle
adc
xor
adc
lcall
or
or
ljmp
push
mov
push
jno
cmp
out
aad
aad
ss
mov
daa
shll
adc
pop
std
sbb
or
ss
mov
adc
jl
jne
pop
sahf
std
dec
fildll
out
pop
int3
xor
call
movsl
sub
cwtl
arpl
mov
icebp
add
cmp
daa
inc
fcomi
mull
aaa
out
aas
orl
mov
and
pop
jle
out
rorl
sub
les
addl
popa
subb
xchg
scas
mov
sbb
jbe
nop
lcall
jo
insb
jecxz
out
lods
fsts
stc
sub
movl
repnz
dec
mov
mov
sub
lret
mov
lds
dec
xlat
repnz
shl
lahf
jo
and
rcl
clc
andl
add
je
pop
mov
nop
xchg
pop
inc
dec
dec
out
pop
ret
mov
sti
jecxz
bound
mov
jmp
imul
sub
test
mov
es
negb
push
or
outsl
jne
leave
inc
aam
or
jmp
addl
movsb
dec
sbb
mov
cmpsl
enter
and
or
pop
mov
xchg
roll
inc
sbb
pop
sbb
pop
cld
inc
arpl
mov
and
iret
clc
jl
ds
inc
mov
push
dec
pop
bound
movsl
xchg
cmp
sub
out
fstl
jl
stos
mov
inc
gs
jl
push
xchg
fsubl
iret
lds
hlt
fmuls
or
inc
dec
sub
push
lcall
inc
sti
inc
scas
int3
mov
stos
cwtl
bound
sbb
jmp
adc
outsl
arpl
and
mov
xor
pop
adc
popa
in
test
mov
push
mov
xchg
popa
sti
xor
iret
adc
push
outsl
cmp
pop
ret
push
jl
xor
int3
shl
hlt
dec
out
dec
dec
or
push
in
fstpt
xor
add
mov
imul
mov
push
push
dec
fisttps
xlat
sbb
or
fstpl
dec
lret
in
push
pop
stos
fdivs
mulb
idivb
or
or
test
inc
adc
rclb
lds
add
cwtl
mov
lahf
adc
jp
and
inc
xchg
jno
jbe
xor
or
dec
pop
cltd
sbb
mov
js
bound
divl
outsb
cmp
ljmp
js
outsb
sub
aad
lods
nop
icebp
xchg
test
xchg
push
adc
nop
push
vcvttps2dq
or
jo
mov
adc
sti
mov
cmp
fidivrs
ss
fsubs
jne
enter
adc
mov
push
jp
ror
imul
cmpsl
mov
add
push
stos
cmc
out
adc
push
in
sbb
es
sbb
xchg
fsubr
mov
test
or
daa
out
and
sahf
addr16
xchg
xor
ljmp
adc
or
mov
sub
insl
sahf
test
aas
dec
mov
jne
or
pop
xor
imul
and
dec
dec
or
mov
ja
fldenv
sbb
lds
fldl
pop
sub
pop
lret
lahf
adc
pusha
mov
sub
dec
push
aas
stc
mov
flds
xchg
jp
test
sti
push
inc
fnstcw
push
or
pop
in
out
cwtl
cmp
pop
mov
orb
jo
loopne
ret
pop
jmp
ret
jnp
test
fwait
sti
dec
aam
mov
pop
movsl
insb
testb
push
pop
orb
das
sub
mov
adc
stc
repz
sarb
jp
jp
lods
testl
test
cmp
clc
adc
pushf
arpl
or
pop
mov
lcall
add
lea
and
push
sub
dec
cmp
lea
mov
xorl
test
aas
std
pop
sti
jle
and
and
ret
outsl
into
jecxz
fcom
jecxz
sbb
mov
fistpll
js
pop
xchg
push
mov
call
jmp
pop
rclb
mov
repnz
mov
sbb
xchg
cwtl
pop
cmc
sub
pusha
or
mov
xchg
es
jae
inc
in
dec
clc
push
pushf
ret
and
add
cli
lcall
sub
sbb
push
mov
sbb
cmp
sbb
shll
xchg
cmc
sahf
cmp
mov
clc
adc
jmp
adc
mov
add
sub
outsl
cmc
ja
pushf
fistps
mov
daa
cld
ss
stos
pop
sbb
addr16
lea
pop
mov
push
push
jnp
xchg
mov
loopne
imul
xchg
dec
mov
add
lds
test
sahf
inc
jbe
rorb
cld
vcvtps2pd
fwait
lahf
xchg
xchg
inc
mov
xor
cmc
jo
push
je
xchg
pushf
adc
pop
jge
cmp
outsl
adc
lock
cmp
test
js
sbb
shl
prefetch
add
pop
mov
inc
adc
fdivrl
and
jbe
jp
shlb
nop
gs
jbe
rcll
loop
dec
sahf
dec
dec
jae
subb
ja
out
push
test
mov
jnp
sub
pop
sub
lods
fsubrp
das
aas
jg
xchg
cmpsb
mov
inc
sbb
mov
and
aam
jns
mov
sub
int
dec
jge
lea
int3
pop
cmc
mov
loope
xorl
and
inc
xor
sbb
testl
jmp
insb
jo
std
xchg
fistps
sbb
ret
inc
insb
mov
lcall
leave
sbb
sub
cmp
fwait
in
mov
jae
xor
ret
xor
fmuls
jne
mov
ret
add
push
andl
ret
mov
popf
add
popf
cli
mov
in
or
insb
dec
dec
out
sbb
cs
jge
dec
sub
inc
or
jmp
jmp
xchg
and
sub
dec
adc
sti
in
loopne
mov
pop
xor
cmp
mov
bound
aas
ljmp
mov
into
call
push
cltd
pop
push
jno
aam
out
adc
cmc
int
dec
outsb
sub
inc
add
out
int3
loope
and
adc
idiv
sub
adc
subb
fiaddl
int
rorb
adc
idiv
xor
dec
xchg
pop
mov
sti
lcall
mov
cwtl
aaa
xchg
neg
insl
jns
cmp
mov
mov
lods
in
test
stc
mov
sar
rolb
pop
sahf
int3
int3
aaa
rcrb
xor
mov
mov
or
popf
ret
mov
lcall
mov
or
jne
jl
mov
or
shlb
ljmp
test
ja
pusha
in
loop
mov
mov
test
test
into
les
mov
adc
ss
push
pop
sbb
sbb
pop
inc
pop
mov
inc
aas
inc
cmp
stc
ja
ret
cmpb
fidivl
push
add
mov
jbe
arpl
divl
lods
jb
and
inc
pop
adc
data16
jp
push
fistl
cmpsb
cmc
ss
rcrl
mov
jo
sarb
dec
jge
push
xchg
push
xchg
test
imul
test
and
add
or
mov
nop
sub
push
dec
sbb
arpl
pop
sbb
jl
pop
arpl
jle
lcall
adc
inc
xchg
xchg
imul
add
pop
inc
mov
lds
add
sub
jl
in
stos
mov
js
inc
sti
cmpsl
andb
rolb
push
mov
mov
sub
inc
sub
cwtl
rcr
out
data16
fs
cltd
cltd
and
lods
dec
dec
fidivl
adc
lds
sub
sbb
icebp
add
aas
mov
mov
push
pop
lods
mov
inc
push
shl
lods
pusha
shrb
lahf
in
in
daa
xchg
mov
js
in
push
out
in
lret
xchg
lea
xchg
enter
xor
mov
arpl
outsb
sub
adc
or
insb
push
dec
pop
fs
jmp
mov
lods
or
pop
push
cli
xchg
jl
outsl
xchg
incb
add
mov
aam
mov
idivb
scas
je
mov
jno
bound
shl
mov
ret
pusha
push
cmc
dec
mov
out
movsl
pop
hlt
test
push
mov
jne
sti
ss
mov
loop
xlat
xchg
mov
add
sbb
shld
xor
pop
dec
and
sub
fsubr
xchg
mov
mov
cwtl
inc
movsl
mov
mov
adc
push
sub
out
mov
jmp
xchg
data16
xchg
into
ret
shl
add
test
loopne
push
outsl
xchg
push
aaa
fwait
loopne
loopne
jb
aas
in
sti
mov
cli
gs
mov
das
loop
stc
mov
scas
dec
mov
or
xor
mov
sub
in
shlb
add
sbb
aaa
rclb
mov
push
or
inc
clc
dec
sbb
std
push
pop
repnz
mov
rorb
and
sub
ret
or
inc
cmp
in
ja
xchg
jne
mov
inc
or
lea
pop
cmp
lds
jg
mov
loop
jmp
dec
lret
mov
sub
xchg
sub
test
subl
mov
mov
jecxz
jnp
ds
sub
dec
div
cmp
adc
inc
and
pop
lahf
inc
int
sbb
leave
push
mov
cltd
mov
mov
out
xlat
insl
pushf
and
fnstsw
mov
aam
out
push
enter
adc
jnp
fndisi(8087
je
insb
ss
add
or
in
mov
jnp
and
or
sbb
loop
movsl
push
aam
scas
or
stos
xor
cltd
or
or
xor
fmulp
mov
pop
outsb
jle
xchg
dec
lret
add
sub
enter
push
cltd
movsb
xchg
add
lcall
jge
pop
adc
push
in
dec
push
push
scas
addr16
mov
cmp
jne
xor
mov
lea
sbb
jo
test
daa
xor
push
scas
dec
push
cs
adc
and
fildll
js
test
popf
mov
xchg
popl
xchg
sarl
fildl
rcr
adc
out
hlt
mov
mov
jae
lods
ss
xchg
jnp
cwtl
xor
ficoms
stos
add
lcall
push
dec
loop
leave
mov
sub
sbb
mov
pop
mov
jae
jmp
lds
rorb
push
aad
into
data16
xchg
or
sub
jne
cld
mov
in
add
ljmp
inc
rcr
cmp
nop
jo
pusha
inc
mov
push
mov
mov
dec
pop
lds
ret
movsl
insl
inc
mov
in
rorl
dec
jae
push
bound
jae
mov
in
mov
jge
loop
shll
incl
jae
loop
or
sub
stc
fnstcw
rorl
loop
mov
jle
mov
jg
jecxz
out
inc
fwait
jne
paddusb
mov
push
cmp
out
pop
sub
adc
xchg
jl
in
xor
mov
push
and
jl
mull
jb
aas
pop
xchg
jno
je
popa
nop
stos
mov
popf
fs
decl
pop
pop
ss
sub
cmp
xorl
insb
mov
fwait
jmp
subb
in
dec
rcl
sbb
cmc
cmp
nop
xchg
stos
ds
adc
aas
pop
push
adc
js
test
cmp
roll
cmp
jg
fnstsw
xchg
fwait
xor
nop
cmp
mov
xchg
jl
outsb
push
mov
pop
adcb
sbb
js
sub
test
mov
mov
jbe
xor
sbb
fwait
lods
add
pop
jge
cli
jmp
rcr
test
inc
test
iret
mov
inc
rcrl
mov
mov
test
pop
sbb
mov
inc
cltd
xchg
je
in
test
or
rcll
in
dec
lds
outsb
cld
sbb
jl
fwait
ret
adc
and
rcr
loop
mov
pop
inc
leave
cmp
popf
insl
pop
sbb
and
jo
repz
or
aam
je
pop
xor
jmp
fsubr
pop
pop
pop
inc
push
sbb
dec
jo,pn
lock
imul
pop
pop
outsl
mov
and
imul
jecxz
cmp
mov
jo
out
cltd
xchg
lret
sbb
mov
out
mov
mov
aas
sbb
lret
outsb
std
sub
mov
sbb
xchg
iret
pop
sbbl
lea
es
jle
mov
aam
push
into
adc
xchg
mov
lock
sub
enter
adc
fnstsw
mov
xor
popf
jg
add
xchg
fdivs
iret
jne
dec
jb
sbb
push
add
es
add
test
and
adcl
and
fimuls
hlt
sbb
out
sarb
es
enter
mov
cmp
inc
or
jmp
dec
mov
mov
ja
movb
lahf
imul
push
add
stos
cmp
sbb
fistps
lret
jge
ds
cmp
scas
pop
push
loop
sub
push
jmp
ds
repz
repz
mov
xor
loop
dec
jbe
xor
dec
add
adc
jp
mov
test
mov
jne
lock
test
stc
inc
rolb
daa
inc
xchg
hlt
pop
xor
dec
ret
lds
xchg
xchg
push
shlb
cwtl
cltd
cli
jg
test
out
dec
mov
mov
pop
jne
cmpsl
ret
jle
test
fdivrs
push
push
clc
insb
jo
pop
jg
rclb
enter
lea
push
js
pop
outsl
mov
jae
hlt
sbb
outsl
push
stos
xor
jnp
xor
push
popa
arpl
rolb
mov
daa
divb
fnclex
shll
sbb
xchg
test
jnp
int3
out
sbb
xlat
pop
arpl
add
mov
popa
push
inc
movsb
mov
push
cmpsb
in
xchg
test
rcrb
sbb
out
add
or
or
pop
insl
rorl
test
push
repz
cmp
addb
or
int
clc
addr16
subb
jmp
inc
aad
lods
mov
test
jp
fsub
out
ret
xor
jle
fildl
pop
and
jge
xchg
aaa
mov
jne
lcall
dec
cmp
hlt
fnstsw
mov
adc
xorb
pop
push
or
jecxz
xor
jge
xlat
sbb
movsl
mov
or
movsb
adc
mov
push
fsubrs
cltd
adcl
jne
enter
icebp
mov
ret
fwait
test
push
dec
or
xchg
or
lret
insl
push
enter
sub
insl
dec
and
sbb
frstor
sarb
mov
mov
cmpsb
xchg
sbb
shll
sub
pop
sbb
std
insl
jp
xor
sar
mov
aaa
out
and
fldl
ror
imul
stos
test
mov
and
pop
push
mov
sti
or
movsl
in
sbb
fwait
aaa
lret
xchg
into
fsubr
inc
das
cmp
jae
rcrb
repz
out
or
insl
add
push
and
pmullw
test
aaa
testl
and
in
push
jae
daa
out
aaa
xchg
dec
sub
pop
xor
pop
rol
sti
push
push
dec
sub
js
outsl
pop
dec
or
fwait
mov
inc
out
cmp
stos
sbb
xchg
inc
scas
inc
das
ss
js
mov
xor
dec
in
adc
mov
adc
sub
in
inc
push
lds
mov
popf
push
test
repnz
adc
ss
push
xchg
scas
pop
jmp
jns
sti
in
adc
mov
add
fwait
js
fcoms
jmp
xor
or
dec
movsb
inc
imul
outsl
scas
mov
push
dec
jb
push
loope
or
dec
mov
mov
sbb
leave
int3
push
and
xchg
aad
and
imul
aam
dec
mov
fnsave
jecxz
or
mov
jmp
xlat
mov
test
mov
cmp
fimull
jbe
imul
data16
test
cmp
sub
ja
pusha
not
xor
push
jge
arpl
xchg
je
or
sbb
leave
push
cmc
lock
push
mov
mov
cmp
es
mov
or
fld
lahf
pop
mov
out
inc
jno
adc
sub
sbb
loopne
mov
clc
or
imulb
mov
inc
ja
in
dec
xchg
mov
cli
jl
dec
pop
shrl
jnp
call
push
nop
inc
mov
jb
fsubr
mov
sub
addr16
inc
xchg
lods
jg
mov
sbb
loopne
js
add
adcl
and
dec
mov
in
inc
fsubp
ret
stos
xchg
repnz
jge
call
loopne
lea
aas
and
sbb
push
adc
mov
stos
jge
or
mov
insb
mov
mov
shlb
sbb
push
icebp
gs
mov
mov
inc
xchg
add
mov
push
and
or
cmp
cmp
ljmp
mov
xlat
add
imul
imul
dec
xor
xchg
idiv
pop
outsb
fcomp
cli
roll
pop
jle
shlb
arpl
mov
cmp
mov
mov
shrb
adc
ds
jl
push
pop
mov
inc
cmc
inc
enter
mulb
xor
imul
adc
lret
jnp
daa
mov
pop
jnp
dec
mov
dec
or
sub
sti
inc
sahf
sub
ja
fcmovbe
pop
aad
pop
idivb
sti
outsl
lret
push
fidivl
cmp
into
ss
rorl
mov
int3
mov
push
test
addl
scas
and
mov
mov
popf
mov
xor
out
popa
popf
cmovns
dec
dec
xchg
int3
xchg
js
jo
nop
mov
out
stos
jmp
repnz
add
xchg
dec
and
cmpsb
loope
ds
inc
popw
jae
mov
gs
push
pushf
rclb
scas
mov
mov
pop
subb
ljmp
enter
or
inc
mov
dec
jno
mov
cmc
test
iret
cltd
ret
add
cmp
ret
push
lea
aad
push
xor
jnp
sbb
std
pop
xor
ljmp
shrb
xor
xor
rcrl
cmp
mov
add
pop
fisttpl
les
dec
arpl
sti
xchg
xchg
fadd
lcall
cmpsb
je
loope
mov
mov
sbb
add
inc
pop
jecxz
pop
sbb
mov
test
add
lods
movsb
and
adc
dec
inc
sub
hlt
mov
sarb
adc
push
scas
clc
mov
fwait
adc
add
loopne
push
je
cmp
pop
mov
negb
mov
fisttpl
out
or
loopne
mov
mov
mov
xchg
fistpll
dec
mov
mov
orb
testl
cmp
dec
mov
aaa
push
and
cmp
out
out
cmc
rol
popa
cltd
and
aam
das
sbb
shll
mov
loope
dec
dec
mulb
or
std
jl
jnp
in
sti
push
xorb
fwait
dec
insl
in
add
loopne
orb
out
pop
add
inc
addr16
push
mov
in
dec
pop
ds
or
dec
jne
mov
inc
pop
je
in
sbb
jg
cmp
scas
xchg
add
or
mov
or
js
les
mov
xor
lods
dec
inc
inc
cmpsb
lret
cld
loop
inc
sbb
das
dec
sub
frstor
or
cmp
xchg
cmc
test
int
sahf
push
mov
dec
pushf
addb
mov
mov
jge
pop
jnp
notl
jge
pop
pop
cltd
xlat
mov
push
or
fstl
dec
adc
pop
imul
sub
mov
cltd
outsl
lods
add
stos
daa
gs
xchg
push
in
inc
faddl
xchg
sub
adc
ret
pop
je
add
sub
inc
loope
lret
mov
jnp
lret
stc
mov
fcmovnb
dec
clc
add
xor
push
mov
push
test
ss
xchg
cmp
xchg
inc
dec
testb
inc
mov
xchg
mov
cltd
inc
stc
cmp
repnz
jne
mov
push
cmp
inc
sti
outsl
out
pop
into
stos
jae
enter
fdivrs
lds
xchg
cmc
sub
shlb
xchg
daa
dec
insb
inc
popf
and
xor
mov
lret
add
mov
cmp
hlt
lahf
psraw
add
mov
es
jecxz
jae
and
hlt
pop
popa
aas
dec
xor
pop
adc
pop
cmp
inc
mov
push
sbb
scas
insl
sbb
out
lods
xor
sub
mov
outsl
movd
inc
icebp
clc
mov
call
adc
sub
jmp
fists
mov
pop
push
loop
jno
or
fbld
xchg
movsl
sub
jmp
adc
lret
and
dec
pop
dec
outsl
imul
test
shlb
loope
sbb
and
clc
imull
fwait
shll
pop
imul
insb
subl
loopne
and
pusha
out
sub
and
inc
mov
dec
sahf
lret
pop
cwtl
adc
les
mov
mov
jp
test
fistl
test
into
mov
rcl
mov
nop
xor
mov
inc
loop
je
push
test
jg
in
ficoml
icebp
xchg
inc
je
mov
jmp
push
fistpll
sub
lcall
adc
dec
ja
and
xchg
int3
loopne
or
call
lea
or
add
jp
cmp
pop
iret
outsb
jo
jp
adc
mov
scas
push
pushf
push
aam
push
jl
and
mov
jne
out
push
inc
ret
mov
les
sbb
mov
mov
call
cmpsl
lret
push
pushf
xor
test
mov
mov
rol
and
sbb
lods
dec
sbb
idivl
bnd
mov
rcll
add
fcmove
scas
or
out
ds
adc
ss
ljmp
pop
xchg
add
andb
aas
sti
xchg
cmpsb
jge
xor
out
fidivrl
dec
jno
pop
dec
sub
lret
data16
xchg
sbb
cmc
leave
lods
popf
aas
cpuid
xor
jecxz
push
xchg
stos
dec
nop
fidivrs
jecxz
pop
shl
dec
notl
pop
inc
sbb
mov
pop
and
out
fisttps
cmp
fdivs
xlat
pause
loope
in
lahf
test
xchg
cwtl
out
adcb
imul
mov
cmp
mov
mov
inc
jp
mov
jnp
mov
sbb
mov
mov
xor
insb
jnp
repz
cld
inc
dec
out
aaa
and
adc
push
dec
cwtl
cmpsl
push
ficomps
outsl
mov
stos
pop
scas
sbbl
test
cmc
xchg
shl
pop
jb,pt
pop
xcrypt-cbc
cmpsl
xchg
fcmovnb
and
repz
xlat
data16
mov
outsl
loopne
incl
addl
mov
mov
sti
test
loope
xchg
fs
mov
out
mov
popa
xor
pop
sbb
xor
adc
psrld
and
pop
cli
repz
jmp
inc
js
pop
aas
std
iret
dec
jns
or
mov
dec
xchg
pop
mov
fwait
inc
jnp
cmp
adc
push
xchg
inc
pop
cmp
data16
mov
in
add
sbb
aas
jl
push
pop
push
pop
aad
push
fwait
cmpsb
sub
add
jle
std
test
fadd
jg
dec
imul
shrb
mov
sbb
and
cwtl
pop
sub
adc
icebp
mov
cmc
je,pt
sub
icebp
inc
icebp
push
cwtl
jecxz
mov
jns
cmpb
mov
jnp
dec
push
push
and
inc
add
xchg
loop
int
aad
mov
adc
cmc
sbb
sub
ffreep
sbb
or
cmp
in
jl
cmp
push
or
sub
iret
and
sbb
ljmp
movsb
sub
pop
pop
cwtl
repnz
fsubl
mov
mov
xor
dec
pop
insl
in
push
adc
call
inc
dec
or
jle
push
mov
aas
sub
fwait
xchg
jg
lea
inc
or
xchg
cli
jns
aam
or
ds
aaa
lds
aam
cmp
rep
sti
into
js
mulb
rolb
lds
pushl
pop
cmpsb
dec
pop
test
mov
iret
icebp
add
add
pop
adc
mov
push
ja
roll
into
sbb
fsubl
xor
sbb
xor
or
xor
adc
rcr
rclb
imul
jmp
loop
inc
ret
dec
pop
xor
mov
jp
sahf
jb
into
jge
dec
add
outsb
xor
jo
cmp
fnstsw
nop
sub
mov
xchg
lcall
push
out
lods
daa
out
push
ret
jbe
in
cli
rol
into
daa
pop
mov
addl
xor
cs
seta
cmp
xchg
outsl
cmp
or
fstps
pop
cmp
or
mov
mov
ret
inc
pop
sbbb
ljmp
scas
dec
mov
push
pushf
dec
push
inc
sub
mov
mov
sti
add
or
jmp
data16
or
sbb
adc
lock
xchg
dec
xor
xchg
repnz
add
mov
push
push
pushf
arpl
push
fwait
pop
mov
push
orl
adc
aaa
std
lds
sub
pop
hlt
jae
sbb
aaa
pop
std
mov
outsb
mov
lods
pop
call
mov
and
mov
push
test
sub
xor
pusha
lock
aad
lods
loope
in
push
mov
adc
stc
or
std
imul
and
jmp
bound
out
xor
push
mov
adc
inc
sbb
addr16
and
adc
testb
xchg
ficoml
push
sub
not
outsb
daa
inc
cltd
movsb
bound
stos
aas
loopne
cmp
add
and
and
add
pusha
aaa
xor
sub
add
rcrl
sar
cmpb
fldt
xor
lods
cmp
sbb
pop
push
jl
fstl
sbb
push
popf
inc
fwait
mov
sti
inc
jne
sbb
adc
push
cmp
pop
std
inc
mov
jb
lds
ja
clc
inc
and
xchg
jns
repnz
jecxz
test
loop
out
jp
mov
ficoms
into
scas
aad
fs
stc
ds
outsl
inc
sbb
icebp
and
xor
lds
sbb
jne
mov
jg
cmp
xlat
cmp
jno
inc
push
insl
js
xchg
nop
jge
or
movsb
into
arpl
push
and
add
mov
jl
shl
fwait
sbb
int3
xorb
ret
test
stos
shrl
cld
cmpsl
repnz
push
test
mov
pop
iret
call
movsl
leave
inc
add
ljmp
mov
out
iret
inc
jp
adc
mov
lds
mov
movsl
mov
aas
shrl
in
jnp
dec
xchg
mov
insl
imul
jge
sub
jnp
mov
cmpsl
mov
mov
lock
mov
sarb
xchg
arpl
inc
dec
fdivs
psubsw
lock
adc
dec
cwtl
jns
and
jno
add
mov
pop
cmc
adc
loopne
enter
dec
push
mov
shlb
mov
rcl
clc
mov
dec
pop
cmp
xchg
repnz
push
pop
sub
ss
jge
xchg
scas
and
cmc
inc
mov
pop
and
or
scas
and
push
enter
out
xor
inc
push
fnstenv
loopne
pop
mov
je
mov
cmp
mov
data16
and
sub
fildl
mov
mov
lds
xor
push
adc
loope
pop
inc
cmpsb
test
cld
mov
pop
push
inc
add
dec
dec
lcall
sub
cmp
xlat
loopne
cs
mov
jb
je
out
and
xor
mov
inc
lds
cli
int
jge
jnp
mov
sub
sbb
fsubp
mov
adc
sub
cli
movsb
ja
cmp
rclb
ljmp
fcompp
mov
aas
inc
jg
cmc
jmp
fisttps
faddl
pop
sub
scas
cmc
sbb
lcall
cmp
andb
push
leave
popf
lahf
pop
jno
addr16
cmpsl
sbb
xlat
sbb
lret
out
push
xchg
pop
xor
insb
movsl
inc
lret
dec
push
test
cmpsl
mov
mov
xchg
gs
lret
imul
inc
pop
fmull
fs
aas
mov
out
jmp
mov
sti
dec
cmpsl
xor
shll
mov
addr16
mov
sub
ljmp
enter
jmp
jp
loopne
xor
jp
inc
shl
fs
dec
adc
pusha
clc
cmp
icebp
dec
aas
adc
jno
aaa
push
jns
out
jnp
out
push
clc
iret
sahf
loopne
sub
jno
in
or
adc
aaa
aaa
call
push
inc
inc
jbe
cltd
jl
xchg
pop
mov
fcomps
incb
lahf
jno
fcoms
fidivrl
mov
pop
and
and
movsb
mov
in
xor
test
jp
fmull
pop
daa
lcall
mov
and
ja
push
hlt
arpl
mov
cltd
inc
push
mov
ret
sti
inc
lock
cmpsl
lea
into
push
lret
jo
sarl
aad
repnz
loopne
aad
mov
fbld
pop
insl
stos
gs
clc
push
xor
and
push
nop
testl
idivl
nop
push
and
and
clc
mov
xor
sub
push
jecxz
lock
add
out
inc
imull
jmp
in
mov
les
adc
outsl
mov
add
or
int
rcr
ss
loope
lods
lods
rcll
xor
pop
cmp
xchg
mov
test
lcall
adc
adc
push
sub
loopne
frstor
xlat
sub
pop
nop
xor
out
jle
mov
xchg
jp
imul
xchg
mov
sbb
sub
scas
fcmovne
mov
std
lcall
sbb
fisubs
in
arpl
arpl
mov
adcb
push
xchg
pop
adc
incl
cld
mov
and
fadds
pop
xor
test
and
cli
ljmp
shrb
jo
pushl
inc
mov
mov
adc
testl
xlat
jb
cmp
inc
mov
adc
lods
cld
fsubrl
fs
and
and
cmp
outsb
inc
adc
outsb
mov
mov
sahf
pusha
or
nop
aaa
sti
xor
add
sbb
outsl
mov
fildll
stc
mov
fadd
movsb
cmc
pop
pushf
fldenv
test
jl
mov
adc
lock
mov
fildl
lock
xchg
xor
inc
rclb
testl
jecxz
pop
sar
mov
inc
adc
sub
dec
cmpsb
cmp
push
sub
adc
xor
push
stc
mov
les
andps
xor
pop
mov
sbb
aaa
sbb
inc
lcall
fdiv
jle
dec
rcl
or
adc
popf
push
frstor
add
sti
aas
cmp
frstor
xor
dec
sbb
dec
fisubs
xor
xor
lods
fucom
add
xor
sbb
sbb
and
rorl
loope
rcrb
out
cmp
jnp
dec
hlt
sbb
outsb
leave
imul
scas
pop
les
rcrl
in
int
loope
push
daa
pop
sub
adc
mov
cmp
test
mov
leave
fdivrs
mov
enter
add
pusha
into
inc
aam
sbb
dec
mov
js
inc
ss
arpl
add
lahf
repz
mov
ret
imul
lods
jns
or
mov
sbb
pushf
mov
cmp
hlt
cmp
xchg
in
shrl
inc
push
dec
adc
adc
xlat
adc
adc
adc
or
jae
and
addr16
jmp
dec
outsb
push
push
icebp
mov
dec
testb
mov
hlt
xchg
ljmp
sub
imul
sbb
int3
and
jno
jb
mov
das
pop
movsl
outsb
pop
sub
lods
leave
jecxz
scas
lods
or
push
sbb
inc
divb
ljmp
push
mov
je
daa
pop
cwtl
mov
test
in
js
xor
pop
jle
jo
das
pop
push
mov
add
mov
daa
aam
sub
stc
sub
fldl
clc
inc
cwtl
orb
jne
in
in
and
call
out
pop
std
jo
jecxz
data16
popf
push
push
adc
fwait
sub
in
jns
ja
stc
ss
or
cld
cs
cli
leave
int
hlt
pop
push
sbb
mov
fiaddl
lahf
jae
ss
je
test
ret
pop
ret
cmp
jle
out
pushl
and
imul
les
adc
int
xchg
sub
adc
inc
fidivrs
lods
pushf
in
lds
stc
push
lret
sti
iret
loope
lods
lock
lods
xchg
jg
mov
dec
dec
mov
call
rcl
aad
jb
setl
pop
push
inc
pop
imul
pop
or
push
movsl
lds
and
mov
jae
mov
fchs
nop
jge
je
xor
test
mov
pop
rclb
jne
sub
pop
std
and
adc
add
cmpl
add
je
imul
movhps
sbb
ficompl
xorl
mov
test
nop
ret
mov
aam
jne
jnp
jg
sahf
mov
in
decb
dec
jnp
mov
xor
stc
std
or
pop
enter
cmp
movsb
shrl
jns
jmp
jae
int
xchg
jmp
adc
sub
and
dec
leave
cltd
or
outsl
movsl
mov
aad
dec
adc
inc
sbb
push
sbb
in
push
mov
test
ret
je
mov
mov
addl
lahf
incl
int
inc
inc
sub
mov
push
sub
imul
mov
inc
mov
in
in
in
add
mov
movsb
mov
stc
fwait
pop
adc
adc
in
gs
int3
cwtl
outsl
sbb
push
sbb
fstpl
xchg
cmpsb
mov
jmp
shl
ljmp
hlt
scas
sarb
or
cwtl
jnp
fsubrs
push
lds
jg
mov
cmp
xchg
nop
out
pop
ja
scas
outsl
dec
sbb
pusha
lock
push
xchg
dec
lcall
jle
or
sahf
sub
mov
mov
cwtl
loop
cltd
sbb
pusha
mov
inc
jae
insb
stos
jle
jl
test
add
loop
lret
adc
jns
aad
sub
push
popf
push
xor
sub
mov
inc
loope
jge
addr16
scas
scas
inc
test
popf
inc
pop
rcrb
dec
loopne
std
push
adc
cmp
ljmp
push
xchg
xchg
adc
div
mov
rclb
or
lret
mov
mov
push
outsb
insb
mov
in
mov
sub
jno
pop
pop
sti
xchg
icebp
sub
pusha
test
cmp
adcb
pop
roll
in
mov
lahf
mov
or
pop
cld
mov
push
jo
aas
into
lcall
and
inc
cmp
inc
in
mov
negb
repnz
add
xchg
clc
imul
add
test
clc
imul
jecxz
xchg
in
les
fwait
shrb
into
cmp
icebp
push
xchg
test
xor
inc
dec
mov
dec
sbbl
popa
push
add
inc
mov
push
jecxz
mov
aam
and
fcompl
icebp
aad
icebp
jb
jno
push
jbe
xlat
cs
xchg
lret
inc
or
bound
jge
ret
icebp
stc
cmpl
mov
lret
rolb
or
imul
cs
mov
std
gs
lcall
mov
or
push
sbb
add
repz
xchg
pop
sub
xor
push
lds
out
mov
nop
and
push
adc
mov
push
lock
ja
cli
or
dec
push
adc
add
mov
inc
push
mov
fbstp
xchg
jo
mov
push
push
cli
ja
jns
push
sarb
cmp
sub
repnz
mov
or
inc
push
mov
ss
cli
je
clc
clc
push
inc
mov
pop
or
mov
push
and
in
cmc
push
push
imul
inc
push
sbb
add
in
mov
dec
mov
jo
icebp
xchg
jp
add
scas
or
lea
xchg
imull
sbb
adc
jp
inc
or
leave
inc
jno
xor
add
inc
fs
xchg
test
push
adc
mov
mov
pop
scas
aam
dec
in
jno
sbb
cmp
into
pushf
pop
cli
aas
outsl
fs
scas
mov
cmp
mov
push
adc
loopne
mov
lret
and
test
icebp
movsb
inc
cmp
mov
cmp
mov
rol
inc
push
dec
dec
testl
test
mov
mulb
pusha
add
inc
arpl
ss
push
pop
push
push
dec
pop
sub
mov
jmp
mov
push
aas
pop
jb
cli
pop
inc
rorl
pcmpeqd
movsl
sar
cmc
pop
xchg
dec
pop
xchg
pop
mov
lahf
insb
add
adc
into
pusha
dec
adc
pop
rorb
jns
jnp
cmp
or
in
ds
lret
mov
test
sub
mov
push
and
insl
xor
ret
insl
cmp
daa
cmp
sub
aas
sub
inc
lock
and
xlat
and
jle
daa
dec
mov
mov
lds
add
enter
mov
es
pop
or
cld
andl
orl
mov
inc
or
test
je
sbb
push
mov
cmp
shl
add
jns
test
in
xlat
fidivl
or
pop
pop
fcmovbe
xchg
mov
add
pop
loope
roll
mov
and
mov
sub
sub
cltd
cmpb
jbe
pop
shr
pop
in
inc
mov
mov
cmpsl
sbbl
push
add
pop
imul
test
test
imul
pop
adc
stos
mov
xor
das
xor
sbb
sti
sarl
and
inc
mov
aaa
int
and
inc
mul
jno
insb
and
rcll
ja
icebp
sub
insl
jbe
mov
loopne
adc
int
lea
lret
aaa
cmpsl
daa
or
shlb
push
daa
loop
adc
insb
mov
jno
in
out
int3
jae
mov
test
jp
icebp
push
push
add
filds
stos
push
jae
rcrl
lcall
iret
inc
mov
sbb
xchg
negb
iret
stc
jo
mov
adc
mov
or
push
jbe
daa
popf
cmc
pop
cmpsb
sub
stc
fbld
jp
fists
aam
stc
mov
popf
or
push
push
mov
mov
mov
mov
dec
lcall
jg
inc
gs
mov
jp
shll
and
mov
jmp
ret
sub
xchg
dec
aaa
cltd
push
pop
ficoms
daa
fstl
jmp
mov
div
mov
add
mov
or
mov
jns
push
pop
dec
jo
cld
ss
pop
imul
movups
movsl
jne
out
cli
fcmove
cmp
xchg
xor
cmp
shr
jno
jp
xor
xor
insb
js
sbb
sbbl
sahf
jns
add
cwtl
push
mov
daa
sbb
xor
mov
sbb
data16
out
bound
inc
pop
loopne
adc
loopne
add
adc
mov
adc
scas
mov
into
adc
pop
fstpt
sbb
clc
mov
mov
pop
push
push
and
push
js
fmuls
out
pop
ret
lods
in
ja
fiadds
mov
cmp
cs
in
sbb
stos
jae
xchg
outsb
es
adc
mov
mov
push
mov
fs
xlat
and
divl
rolb
push
xlat
mov
jo,pt
pusha
and
or
sub
divb
mov
cmp
icebp
nop
data16
sbb
je
mov
mov
or
xlat
rcl
pop
jecxz
push
popa
lahf
mov
js
push
data16
mov
push
cmp
and
push
outsb
or
pop
cmc
sub
cli
jns
sbb
mov
xchg
xor
ds
rorl
nop
sub
or
xor
iret
sbb
stc
mov
inc
jae
stc
xchg
scas
or
xchg
mov
mov
call
jbe
mov
gs
in
testl
fdivl
shrl
inc
out
pop
arpl
add
das
outsl
pop
filds
cmp
push
test
adc
hlt
lahf
out
int3
gs
repz
aad
sbb
jge
aaa
add
test
jl
test
movsb
dec
sbb
sub
popf
aam
or
cld
push
xchg
sarl
sarl
fdiv
mov
ret
adc
and
int3
sbb
fisubs
sti
frstor
fs
repz
cmp
jne
push
mov
aam
aam
xorb
movsb
or
ficomps
jno
sub
imul
sub
lret
mov
mov
loop
mov
adc
lds
sbb
imul
mov
xor
xchg
int3
cmpsb
int
es
nop
adc
add
xor
sub
rolb
insl
sub
mov
ret
jno
outsb
and
jns
pushf
popf
dec
lods
add
add
dec
iret
jge
push
mov
xchg
push
xlat
addb
fcmovnu
cmpsb
and
jg
mov
cld
out
aam
jae
fld
inc
jno
clc
add
js
imul
ss
outsl
popf
ret
mov
ljmp
and
xor
mov
sbb
sbb
jge
data16
xchg
loope
jbe
or
sub
inc
xchg
sub
fcoml
inc
rep
mov
add
xor
ror
ss
or
sahf
dec
push
mov
js
aas
outsl
ret
aam
cmp
rclb
lret
aas
es
lret
add
sbb
cmpsb
pop
pusha
sub
push
pop
shll
in
out
psrld
pop
pop
cmp
mov
jle
les
imul
or
test
jno
insb
mov
jnp
loopne
sahf
adc
adc
sbb
mov
mov
cs
lret
das
stc
jns
and
jo
outsb
fidivrl
jg
fsubr
xchg
push
hlt
xor
xchg
push
ss
mov
gs
mov
fisubrs
add
int3
jbe
cmp
jecxz
mov
insb
test
aaa
push
imull
pop
mov
fildl
adc
pop
ljmp
pop
push
mov
inc
jnp
fnstsw
mov
enter
aas
sbb
push
mov
mov
mov
movsl
clc
add
or
push
push
test
mull
sbb
in
ficomps
and
sub
inc
cmp
mov
aad
std
push
jge
pop
aad
insb
sarb
ljmp
dec
push
aas
adc
int
mov
xchg
in
push
jno
les
or
scas
fstps
mov
push
lock
fstps
ds
imul
lods
roll
int3
adc
add
std
mov
mov
mov
je
xchg
cmp
inc
das
add
loop
pop
inc
mov
adc
test
es
shrl
and
dec
mov
addr16
push
pop
fcomps
mov
pop
ja
jne
dec
dec
gs
and
inc
xchg
cmp
add
arpl
mov
fnstsw
mov
or
nop
and
dec
and
sbb
ds
sub
pop
leave
adc
pusha
fldl
out
cmpsl
cmp
and
jge
sbb
pop
insl
or
xor
ss
xor
icebp
pop
inc
mov
and
fisttpll
mov
divb
fists
data16
lock
bound
inc
mov
sarb
leave
dec
mov
pop
add
dec
icebp
jns
jle
and
daa
jg
pop
adc
std
loopne
arpl
cmp
mov
adc
movsb
pop
mov
pop
cltd
aas
sub
sbb
jae
call
push
lods
mov
push
std
dec
icebp
repnz
xchg
lods
pushf
test
lock
negl
mov
mov
cltd
dec
mov
cmpb
aam
cmp
push
popf
mov
sbbb
dec
pop
push
cmc
aam
movb
call
cmp
sub
cs
lcall
lea
cld
sub
aaa
out
lock
ret
hlt
jne
adc
cmpsb
push
jae
icebp
mov
and
aam
inc
sbb
in
cmp
push
insb
xor
and
inc
test
mov
push
outsb
jecxz
rcll
sub
cmp
jp
fsubl
ss
add
in
iret
pop
inc
insl
mov
mov
jb
xchg
jge
mov
xchg
adcl
ja
daa
sbb
cmp
int3
xor
xchg
cmp
jbe
or
maxps
jo
push
rorl
lret
in
cltd
cmpsl
mov
push
cli
mov
push
lahf
xchg
ljmp
repnz
outsl
dec
add
aaa
push
mov
mov
cmp
mov
inc
mov
or
mov
dec
leave
mov
popa
add
push
test
lock
pop
dec
je
in
addr16
pop
in
ss
mov
jl
repz
sub
stos
test
fdivl
push
in
loopne
jns
in
mov
cmpsl
adc
ret
lods
adc
test
push
int
fcmovbe
andl
ja
imul
mov
mov
push
addr16
mov
mov
jae
fbstp
outsb
or
mov
loopne
push
mov
jne
sbb
lock
lret
adc
test
lds
inc
outsl
mov
mov
lahf
js
test
out
test
aaa
and
xchg
outsb
lcall
test
aam
into
pop
aas
hlt
gs
add
or
test
out
fcom
dec
and
jmp
pushf
in
lods
dec
push
mov
lret
cmp
lret
fsubrl
xchg
lea
imul
outsb
mov
mov
jmp
dec
xchg
hlt
adc
in
je
push
pushf
pop
sbbl
mov
cs
mov
adc
xor
jl
mov
xor
and
loop
push
out
adc
sub
lock
add
sti
insb
aaa
adc
into
sbb
mov
cmp
mov
movsl
ds
movsl
scas
push
cli
scas
xchg
jg
push
inc
shll
xchg
mull
jo
cmp
lcall
cmp
cmp
inc
sub
mov
iret
sub
xor
jmp
and
xor
push
imul
push
loopne
jl
mov
mov
xchg
xlat
je
sbb
xor
add
push
mov
fwait
in
adc
adc
xor
fildll
jmp
shll
dec
mov
test
pop
sbbb
push
cmp
jno
mov
je
mov
int
gs
hlt
pop
push
or
xchg
test
repnz
push
or
push
hlt
mov
jb
xchg
jne
lahf
push
mov
filds
and
es
and
push
mov
xchg
fwait
and
pop
pop
xchg
dec
dec
push
jecxz
lods
mov
inc
mov
hlt
mov
clc
add
ret
stos
mov
fmul
push
insl
adc
sub
mov
xor
jl
lock
cmp
shlb
js
test
lods
adc
and
inc
mov
pop
lcall
andb
mov
mov
addb
jl
lods
mov
lret
mov
and
mov
pushl
inc
pop
out
cmp
sbb
mov
ljmp
dec
rol
les
lret
jle
cltd
push
pusha
shll
iret
icebp
xor
xor
xor
call
jl
cmpsb
stc
imulb
sahf
push
fisttpll
lods
int
data16
mov
or
push
stos
movsl
xchg
mov
rclb
lds
mov
out
mov
cmp
pop
mov
jae
nop
cmc
jg
push
fisttpll
jnp
sub
add
sbb
mov
loopne
jb
mov
loop
jno
jno
sbb
inc
pop
imul
rorb
or
xchg
scas
xor
jb
rorl
int3
jp
push
jns
int3
jbe
mov
negb
inc
scas
lock
test
push
mov
es
cmpb
mov
je
rorl
cmpsl
dec
pop
inc
push
pop
mov
dec
push
mov
adcl
sti
jl
popf
dec
dec
subb
in
inc
adc
fcomp
dec
outsb
sbb
add
push
mov
pop
push
testb
xor
mov
push
jns
cld
movsb
jmp
repnz
mov
cwtl
movsb
outsl
sub
clc
rcll
sbb
out
jg
jae
xor
add
repnz
sub
pop
rclb
mov
jp
ljmp
jp
jge
dec
sub
xor
loope
int
or
sbbb
es
cli
ret
mov
fcoms
jle
inc
ljmp
scas
std
outsl
pop
cmp
push
jmp
sbb
js
aaa
jne
dec
xchg
gs
xor
pusha
notb
adc
inc
cmp
lods
icebp
jg
outsl
mov
jl
fsts
xor
adc
xchg
lods
jmp
aad
adc
pusha
and
sbb
lea
dec
shr
jbe
lock
push
lret
dec
addr16
adc
push
jge
push
in
cmc
addr16
js
leave
mov
daa
dec
push
push
ljmp
xchg
sub
ljmp
roll
or
sbb
dec
movsl
mov
daa
inc
and
pop
fsubl
aad
idiv
out
mov
shrl
xor
paddsw
popa
daa
popa
cmp
pop
xlat
and
shl
mov
xchg
push
in
stc
adc
sbb
inc
cwtl
cmpsb
xchg
push
cli
inc
dec
js
add
push
outsl
cli
mov
das
sahf
ss
push
aaa
aas
or
add
mov
lcall
cmp
and
push
jmp
xabort
xor
xchg
mov
fdivs
maxps
inc
or
xor
int3
cmp
sbb
inc
mov
and
mov
fidivrs
sbb
mov
outsb
daa
sub
xchg
ljmp
gs
aam
jg
jbe
scas
mov
sub
sarl
ret
inc
mov
adc
rcll
ja
dec
scas
sub
int3
ret
pop
ret
call
mov
sbb
and
jb
int
jns
or
scas
dec
je
repnz
clc
xlat
sti
je
clc
jbe
xchg
popa
cmp
cwtl
mov
aam
or
sbb
mov
rcll
insl
fistps
sarl
arpl
dec
adc
push
jle
inc
push
mov
dec
fidivl
pop
lods
imul
insl
sub
ljmp
xor
push
pop
cmpsb
das
imul
aas
pop
push
ret
cs
xor
test
iret
inc
pushf
sbb
xchg
push
xchg
jno
mov
movsb
ret
inc
sti
lret
cld
orl
mov
pop
decl
jg
mov
dec
imul
je
mov
out
add
jmp
adc
es
sbb
inc
imul
xlat
push
in
sahf
xchg
loop
sbb
mov
dec
in
arpl
inc
cmpsl
fiaddl
movsl
add
imul
fistpl
or
push
xchg
std
or
mov
int3
test
or
mov
aaa
xchg
iret
shlb
mov
in
out
aaa
outsb
adc
ss
inc
mov
adc
cmp
test
aaa
mov
xor
push
cmpsb
xchg
xchg
add
adc
xor
sbb
int3
roll
push
fdivrs
mov
ret
mov
aas
sbb
hlt
dec
jo
push
xor
inc
dec
mov
pop
out
and
out
mov
jecxz
pop
out
aas
out
clc
or
cli
add
cld
sub
pop
jno
sahf
jge
test
loop
jae
or
lock
jnp
lock
pop
cmp
aas
mov
mov
mov
jbe
xor
lock
icebp
add
out
fsubrs
lret
outsb
in
pop
inc
dec
sub
testl
push
call
lods
adc
or
mov
xchg
pop
jmp
call
add
mov
pop
or
pusha
gs
jmp
add
loop
sub
cmp
ffreep
or
xchg
push
insb
je
mov
out
push
jae
das
sub
nop
mov
add
mov
dec
fcoms
dec
scas
mov
sbbl
shll
sub
dec
fbld
sbb
frstor
mov
fidivrl
into
and
ljmp
lods
mov
push
adc
inc
pop
sbb
dec
mov
cld
inc
shr
int3
bound
xchg
cmpsb
inc
push
jge
jnp
push
mov
push
pop
flds
ljmp
bound
mov
mov
or
cmpsl
mov
in
in
icebp
out
repz
dec
mov
mov
pop
in
cld
ficoms
mov
scas
mov
aaa
cmp
sbb
cmp
adc
data16
xor
inc
mov
dec
push
or
fcmovu
jne
add
xchg
adc
sbb
add
cmp
std
call
mov
mov
adc
arpl
clc
popa
push
cwtl
inc
push
jnp
or
in
insl
mov
add
mov
mov
mov
test
inc
and
ret
in
push
in
mov
adc
xor
out
add
add
pop
mov
sbb
and
jmp
xchg
mov
jg
xchg
mov
dec
imul
mov
adc
push
in
loop
fldenv
ja
cltd
mov
in
loop
jg
jae
sub
pop
pusha
popa
enter
mov
insl
popa
cmp
or
xchg
cmp
out
mov
stc
das
lds
addb
push
fcoml
or
cmp
fdivl
add
mov
jmp
aas
xchg
mov
xorl
push
mov
inc
sar
dec
push
inc
cmp
clc
xor
std
jb
mov
add
jg
fcmovb
loope
sbb
lds
mov
jo
sbb
pop
imull
mov
xorb
mov
adc
pop
push
cmp
mov
mov
test
sbb
mov
cmp
int3
mov
xchg
ja
push
aas
mov
lret
cld
adc
testl
dec
movsl
inc
push
sub
mov
sbb
pop
int3
pop
adc
jle
inc
inc
pop
mov
fsubrp
outsl
das
mov
imul
xor
test
scas
mov
jae
mov
shlb
mov
std
and
push
daa
stc
in
xchg
clc
or
mov
add
xor
popf
icebp
dec
hlt
ss
fldl
sti
mov
adc
push
jne
xor
dec
rorb
xchg
popf
dec
push
push
or
fwait
xor
rorb
adc
mov
out
mov
xchg
dec
cmp
aad
dec
ds
rol
cmpsb
scas
adc
xor
scas
push
jne
movsb
sub
sti
in
sbb
repnz
mov
ss
push
lret
out
aam
fldcw
rol
lcall
sub
xchg
in
aad
mov
mov
imul
les
fs
jl
mov
sub
and
xchg
aas
inc
je
jno
mov
dec
in
cld
or
stc
icebp
scas
mov
fs
std
lods
lods
xchg
out
add
mov
adc
mov
mov
fistl
cld
mov
jo
jno
inc
mov
outsl
out
and
and
jno
and
mov
xchg
das
in
mov
bound
jns
lock
sti
mov
stc
cmpsb
loopne
xchg
mov
dec
sbb
lahf
jne
addr16
jbe
ror
cli
fiadds
stos
sbb
pop
stos
xchg
sbb
jne
sbb
cwtl
sti
lods
push
lahf
inc
lock
jmp
mov
cmp
cli
mov
jbe
faddl
xchg
jne
jmp
sbb
insb
in
add
xchg
insl
out
repnz
insb
int
lret
xor
mov
inc
mov
or
push
rcrb
add
mov
mov
clc
and
push
loopne
insl
lret
pusha
dec
inc
jg
or
ret
inc
call
je
aam
fwait
sti
xchg
ja
stos
cmp
ljmp
imul
jmp
mov
je
adc
lret
aas
mov
inc
aas
jmp
lahf
and
inc
jns
push
dec
fs
push
ror
int
decb
cmp
test
out
xchg
call
ss
adc
das
and
add
movsb
mov
ds
out
lds
add
fstps
mov
in
mov
hlt
dec
jo
orb
dec
bound
jno
cmpsb
clc
mov
cmpsl
dec
outsl
mov
xor
cmp
and
cmp
popa
and
test
adc
fcomps
mov
and
mov
shrl
cmp
call
or
push
test
mov
cmpsb
out
mov
es
iret
jno
int3
xor
inc
int
push
arpl
pushf
sub
sarl
jb
out
jo
add
sub
dec
push
dec
cwtl
cltd
cmp
mov
ljmp
mov
rclb
xor
cmpsb
les
or
jp
xlat
iret
fdivs
mov
out
pop
iret
fneni(8087
push
dec
outsl
test
fwait
push
add
mov
mov
sahf
mov
fsubs
aad
aad
daa
add
push
adc
and
sbb
outsl
pop
or
daa
cmp
ja
mov
xchg
leave
sbb
testb
shrb
in
push
dec
pop
pusha
sahf
ret
ficoml
push
popf
lret
cltd
mov
cmpsl
lea
push
add
gs
in
sbbl
or
mov
pop
clc
int3
lea
scas
imul
imul
fidivl
shl
xchg
or
sub
ret
dec
mov
and
inc
push
push
jecxz
enter
xchg
out
dec
inc
pop
mov
jge
ss
aas
call
cld
pop
xchg
hlt
lret
arpl
aas
pop
iret
out
ja
test
andb
jmp
jb
cld
int3
or
imul
call
shll
dec
insb
xchg
push
push
mov
test
xor
fdivl
and
lods
fldl
push
leave
and
sub
subb
aad
notb
lock
es
xor
mov
mov
mov
stos
les
dec
xor
mov
sbb
cmp
pop
sub
jb
lahf
mov
lret
ljmp
gs
sbb
sub
rolb
pop
sbb
push
in
pop
sub
loop
adc
ret
orb
mov
sub
jbe
cmpsb
enter
mov
mov
cltd
jns
sbb
mov
jecxz
adc
ja
sub
shl
vexp2ps
jbe
aad
mov
add
out
pop
mov
mov
adc
cmp
pop
xor
sbb
repz
sub
xor
push
sbb
push
mov
adc
sub
mov
int3
xlat
xor
xor
sbb
sub
cltd
popf
add
ret
test
pop
fptan
hlt
js
int3
outsl
xchg
stos
sarl
movsl
xorb
clc
jae
jo
loop
ljmp
adc
pushf
in
pop
push
mov
ja
mov
dec
fiadds
mov
mov
and
sarb
jb
lock
sbb
add
cmpb
imul
mov
jge
adc
inc
fucomi
mov
icebp
enter
cmp
jb
push
testl
and
push
inc
pop
add
aam
inc
mov
sub
dec
lds
test
std
fstpl
js
je
js
dec
incl
jmp
pushf
push
dec
jle
xor
sbbl
pop
mov
pop
adc
jecxz
icebp
xor
leave
out
push
or
jl
jecxz
nop
mov
mov
sbb
mov
push
mov
fadds
fldl
xchg
leave
jmp
sarl
add
jp
test
and
cmp
push
mov
or
adc
lcall
add
mov
jmp
sbb
pop
xor
fwait
hlt
jg
jmp
mov
cmp
out
jne
sub
divl
shll
sti
rclb
in
cmp
push
jmp
ljmp
mov
scas
jmp
scas
mov
pavgb
lock
ss
mov
out
fs
mov
fnstenv
sbb
push
ret
inc
push
cld
cs
mov
lahf
lcall
mov
push
dec
sahf
fisttpl
xor
inc
in
fcomp
inc
mov
pop
hlt
push
push
inc
mov
and
xor
nop
inc
sub
inc
pop
xchg
xlat
into
or
ret
cmpsl
push
mov
mov
pop
cmp
xor
imul
loop
inc
iret
loope
inc
out
and
and
aaa
jg
js
ljmp
dec
add
fstps
push
hlt
into
push
sub
mov
jae
lret
rcll
xchg
fcomps
repz
jbe
and
and
ret
fidivs
insl
dec
or
js
lea
mov
adc
jne
insl
loopne
cmc
arpl
and
test
sbb
inc
lcall
mov
cltd
movsb
add
add
or
mov
or
cld
xchg
jecxz
call
and
enter
and
cmp
loopne
mov
dec
rolb
in
sub
icebp
testb
ret
decb
imul
les
xchg
out
dec
in
and
mov
mov
dec
pop
gs
sub
mov
orl
xchg
or
mov
adcl
inc
cld
mov
jle
add
xchg
inc
mov
arpl
or
inc
cmc
inc
sbb
out
xorl
jmp
dec
xchg
lahf
fstps
or
sub
in
add
sbb
movsl
push
push
add
inc
mov
stos
jnp
fldenv
cmp
add
mov
or
mov
les
xchg
lods
stc
mov
movsl
loop
push
inc
xchg
pop
cld
jl
jne
or
mov
xchg
int3
adc
mov
cmp
daa
loope
jbe
push
dec
loope
pusha
dec
addl
jne
xor
outsb
movsb
pop
pop
pop
mov
test
sub
dec
in
adc
std
mov
push
sarb
add
sbb
repz
pop
in
mov
push
and
mov
lods
int
movsl
add
lods
setg
inc
aas
or
dec
divb
xchg
jl
mov
test
repz
jb
int
xchg
and
lds
lret
test
mov
inc
jo
xchg
bound
adc
scas
cli
mov
dec
addr16
or
adc
aam
push
sbb
cmp
xchg
cmpsb
shll
mov
inc
push
mov
movsl
enter
nop
jb
push
cmp
mov
sub
pop
insb
ljmp
into
jns
adcl
dec
xor
push
mov
cmpsl
sbb
fidivs
insl
dec
movsb
push
pop
xchg
inc
leave
xlat
scas
mov
stos
sbb
adc
xchg
inc
aam
or
imul
mov
push
push
and
adcl
adc
lret
sub
ficoml
outsb
das
push
repnz
scas
inc
cwtl
iret
shl
and
fstps
xchg
scas
lock
out
sbb
pusha
sbb
fs
insl
es
sbbb
push
jnp
push
js
mov
xchg
push
push
lea
imul
imul
inc
sar
orl
adc
add
call
fldenv
mov
adc
hlt
push
push
pop
pop
mov
out
sbb
test
loope
mov
sub
sar
dec
push
fwait
jmp
jg
dec
sbb
insl
xchg
shrb
popa
dec
arpl
dec
fsts
jmp
push
insl
jb
movsb
jp
fidivs
loope
lret
inc
xchg
fisubrl
push
mov
aad
inc
xorl
add
mov
mov
in
mov
and
add
out
mov
cmp
ret
pop
mov
lds
test
loope
jp
push
dec
mov
or
test
ljmp
repnz
rolb
aam
scas
les
imul
dec
pop
lods
push
pop
aaa
mov
inc
xchg
sbb
pusha
xor
dec
mov
je
mov
test
loop
inc
ror
sbb
xchg
fisttpll
in
sbb
daa
scas
lods
rolb
shll
or
pop
inc
sub
add
pop
and
mov
adc
hlt
adc
and
scas
sub
and
mulb
rorb
ja
xchg
fxch
inc
lds
psllq
dec
mov
int3
pop
xlat
pop
in
lea
mov
push
call
xor
push
lret
notb
xor
stc
ret
xchg
push
mov
jnp
dec
popf
xchg
fmull
xor
push
xchg
jmp
mov
and
jo
sub
imul
sahf
dec
jmp
mov
negl
shlb
outsl
push
cmp
push
dec
jbe
mov
push
movsb
sbb
mov
in
mov
ljmp
cmp
sarb
out
or
or
jge
mov
jmp
out
push
adc
hlt
xchg
jb
sub
test
mov
sbb
push
sub
mov
mov
clc
mov
mov
in
ret
pushf
and
or
push
and
inc
or
add
cmp
loope
mov
mov
div
jle
dec
xchg
fisubl
repnz
gs
ja
lahf
sub
pop
inc
cmp
mov
stos
push
xchg
mov
rorl
lss
push
mov
push
push
imul
cmp
pop
or
sub
jo
stc
test
jle
and
lea
es
movsb
mov
nop
fisttps
jns
fwait
xchg
or
shlb
pop
dec
cmpsb
mov
popa
lds
mov
and
pop
dec
in
sub
mov
pop
insl
fs
jg
sub
lock
bound
add
cmpb
or
cmp
inc
testl
cmpsl
test
jb
in
mov
mov
dec
and
dec
push
lods
inc
adc
stos
movsb
movsb
and
insl
hlt
jle,pn
std
xchg
mov
rol
mov
xor
push
mov
or
sub
ss
sti
insb
scas
inc
dec
dec
ss
loopne
icebp
xor
and
mov
clc
and
daa
loopne
pop
popa
sbb
jo
and
enter
add
sti
mov
mov
ljmp
cwtl
sbb
jno
addr16
xor
into
xchg
pop
inc
add
cmpsb
stos
mul
mov
lcall
xchg
xor
into
test
xchg
mov
popf
iret
inc
imul
pusha
pop
xchg
sti
inc
int3
push
or
out
inc
js
div
pop
push
inc
dec
add
call
pop
ljmp
mov
insb
add
lcall
mov
lcall
adc
or
mov
jg
ficoml
and
mov
ret
or
pop
not
inc
in
pop
nop
cmp
ror
dec
xor
mov
jge
mov
jmp
sub
ret
mov
mov
imul
push
addr16
and
dec
mov
bound
data16
jo
xor
inc
or
cmc
add
push
out
mov
mov
cld
xchg
add
ds
dec
mov
mov
lcall
popa
add
adc
out
sub
enter
xchg
mov
push
jmp
sbb
rorl
out
add
lahf
movsb
ds
cmc
in
add
xor
push
adc
iret
or
in
dec
push
push
in
push
aas
adc
adc
aas
outsb
mov
outsb
adc
das
pop
and
enter
stos
push
push
jb
and
out
cmp
dec
ja
pushf
jmp
jno
cmp
sub
ds
xchg
ja
mov
pop
cmpsb
popa
pop
pop
xor
add
pop
stos
fcmovne
pop
sub
imul
imul
mov
in
lcall
and
gs
mov
mov
pop
inc
lret
add
or
jne
xor
test
aas
jno
int
mov
aad
pop
bound
testb
push
into
dec
mov
test
cmp
xchg
pushf
sbb
or
stc
mov
loopne
dec
repnz
xchg
xchg
mov
pop
int
icebp
jns
ret
shlb
jle
push
and
push
mov
mov
fld
daa
jmp
lods
rcr
sbb
arpl
inc
pop
xchg
sbb
ljmp
pop
sub
mov
scas
testl
test
dec
testl
jns
jne
idivb
aam
inc
insb
mov
pop
and
sahf
popa
aas
out
xchg
push
pop
loop
pop
push
lret
aam
nop
fucomi
jl
sub
fldenv
sbb
adc
repnz
das
dec
in
inc
imul
aad
sbb
pop
dec
fmul
mov
xchg
in
subl
cltd
pop
add
clc
pop
inc
shlb
xor
in
cwtl
push
xchg
nop
movl
les
stc
xor
sbb
in
mov
repnz
ret
jp,pt
cmp
jo
es
es
cmp
and
cmp
and
jl
push
pop
sbb
adc
addr16
cwtl
aas
push
mov
test
sub
mov
add
hlt
jno
je
icebp
out
xor
mov
pop
addr16
sub
int
mov
imul
jmp
aaa
out
adc
xchg
dec
test
pop
inc
and
mov
xlat
sbb
push
nop
xlat
and
std
subb
cli
mov
hlt
xchg
cmp
sub
test
and
push
pop
fisttpl
xchg
inc
xchg
mov
jl
jmp
push
pop
add
cwtl
mov
add
jo
hlt
add
jle
addl
and
je
fstps
js
sub
stos
push
cltd
jb
mov
cmp
pusha
mov
push
fsubrs
test
into
popf
int
adc
adc
imul
icebp
out
gs
push
imul
rorl
and
in
rorb
cmpsb
cmp
sub
xor
fcompl
out
test
enter
lret
mov
mov
push
in
sub
xchg
out
hlt
decb
lcall
xchg
cmp
dec
jl
cmp
mov
push
inc
mull
xchg
push
iret
pushf
xchg
adc
push
iret
inc
or
dec
cmpsl
repnz
xchg
add
xor
orb
jecxz
dec
leave
imul
inc
outsb
pop
and
imul
jae
fistps
pop
jbe
rol
pop
test
inc
pushl
test
pop
or
add
jmp
mov
dec
jnp
sub
sub
lock
loopne
jp
cmpsl
jns
lods
sbb
cmp
jnp
or
xlat
divb
stos
jb
popa
lret
jmp
fwait
jg
and
cltd
shlb
int
pop
pop
test
arpl
lahf
out
enter
pop
jle
dec
cmp
out
sbbl
xchg
fs
stos
daa
in
mov
nop
sub
sahf
xorb
pop
mov
jns
out
out
cmpsb
mov
ret
mov
pop
ljmp
sbb
mov
sbb
sub
add
scas
icebp
adc
shrl
imul
xchg
xor
sti
je
movsb
or
xor
shl
add
es
jns
push
cmp
test
in
out
sbb
push
int
jbe
xchg
imul
into
xchg
je
sahf
roll
sub
lea
fisubrl
xor
jb
dec
outsb
out
mov
lcall
and
mov
dec
clc
lea
std
adc
adc
mov
ds
sub
or
leave
inc
gs
push
flds
sub
in
stos
outsl
push
push
adc
leave
mov
sub
pop
push
jae
xor
leave
mov
add
aam
aas
outsl
push
mov
cmc
sub
shl
or
push
les
js
je
lods
stos
cs
or
iret
dec
mov
sbb
lods
call
int3
dec
mov
add
pop
add
sti
mov
and
pop
push
gs
into
out
fsubrl
fcompl
mov
enter
aad
cmp
jae
outsl
adc
cmpsb
mov
xor
adc
lea
xor
in
lahf
lock
ds
push
lods
pop
stos
adc
push
ljmp
aaa
mov
mov
inc
lcall
mov
ja
stos
nop
xor
out
push
lods
inc
xlat
iret
lods
mov
mov
clc
adc
lret
or
andl
add
es
stos
xchg
out
rcl
ror
hlt
adc
lahf
divb
mov
cmp
adc
les
cmpl
add
insl
jns
lods
or
es
orb
jge
xchg
xor
pop
cmc
inc
test
push
in
adc
lods
nop
stos
xor
add
push
scas
icebp
xchg
pushf
xor
push
loop
inc
sub
jl
in
sarl
aam
mov
mov
mov
lods
ret
or
fists
mov
fbld
test
jp
inc
mov
sbb
pushf
std
loope
negb
adc
imul
les
xchg
xlat
pushf
out
scas
rcll
inc
out
int3
punpcklwd
and
jno
int3
dec
movsb
mov
imul
xchg
pop
push
fnstsw
rcll
mov
ret
jecxz
nopl
dec
mov
int3
neg
inc
pusha
arpl
cli
scas
mov
adc
cmp
cltd
adc
popa
inc
imul
xchg
xchg
mov
test
inc
sbb
inc
jo
pop
imul
ret
cmp
push
shrl
test
push
stc
mov
inc
cli
mov
imul
pop
pusha
cltd
dec
mov
xor
clc
dec
out
jmp
hlt
adc
push
mov
sbb
in
gs
jo
pushf
dec
xor
mov
aas
mov
jnp
lret
insl
inc
lods
scas
inc
add
xorl
inc
xchg
add
jo
fisttpll
loop
call
sbb
push
jge
popa
out
mov
pop
jmp
push
pushf
jl
or
jp
dec
xor
nop
inc
adc
push
les
pop
scas
int3
mov
mov
dec
ret
int
int3
lret
and
out
ljmp
and
loop
sub
sbb
pushf
xchg
jo
insl
add
mov
icebp
add
loop
rcll
inc
adc
loop
sub
nopl
inc
stos
push
add
adc
cmc
rorl
stos
pop
or
jge
and
repz
push
sub
ffreep
bound
movsb
inc
stos
repz
and
decl
test
push
outsl
inc
scas
mov
sbb
xor
mov
mov
dec
xor
mov
adcb
inc
push
xor
fsubr
push
add
xchg
fildl
in
call
mov
or
sahf
js
cmp
pop
jmp
cmp
add
dec
and
sbb
xor
bound
fs
mov
mov
adc
cmp
mov
jno
ja
dec
mov
bound
mov
jle
mull
pop
cld
insl
test
dec
cmpsb
addl
cmp
dec
xorb
mov
pop
mov
sti
stos
push
xchg
mov
icebp
repnz
and
pop
xchg
pop
inc
sahf
lea
scas
xlat
mov
ret
adc
pop
or
cmc
mov
fisubl
jmp
bswap
popf
add
cmc
push
test
loopne
sub
push
outsl
pop
pop
dec
dec
mov
mov
push
or
fnsave
cmpsl
rcrl
repnz
scas
inc
xor
mov
or
jne
jnp
js
cmp
nop
pop
insb
push
mov
xchg
and
cwtl
cmpsl
aas
outsb
push
lea
add
jp
cltd
insl
jge
xchg
daa
mov
popa
jmp
outsb
sahf
ds
and
xorb
shrb
fs
inc
lods
mov
cld
daa
aad
mov
xchg
sub
vmovaps
push
incl
ljmp
xchg
mov
jns
imul
add
and
inc
push
inc
popf
dec
push
div
xchg
shr
and
inc
test
adc
xor
xchg
iret
jns
add
sub
mov
loope
lret
aas
inc
jl
ss
pop
ret
jns
test
lret
ret
mov
xlat
divl
mov
stos
pop
sub
subb
cli
in
dec
jbe
outsl
es
xchg
mov
push
jecxz
inc
clc
lock
add
push
data16
pushf
push
push
add
popf
out
add
je
jns
mov
and
mov
sub
mov
dec
cmp
hlt
dec
adc
jb
cmp
clc
or
or
mov
clc
mov
fdivl
adc
in
addb
icebp
int3
inc
jl
loop
rorl
sub
ja
or
cmp
in
popf
pusha
ffreep
inc
rorl
scas
mov
pop
push
xor
mov
fwait
sbb
aaa
push
sbb
nop
sbb
sub
inc
stos
out
pop
cmp
in
pop
popf
lahf
sbb
lahf
rcrb
jne
idivl
push
in
cmp
push
and
xchg
push
dec
pop
adc
call
insl
sub
out
fnsave
mov
add
mov
push
stc
sbb
dec
loope
cmp
xor
imul
lds
icebp
mov
sub
push
push
sub
sub
jno
scas
add
sti
xchg
rcll
cli
pop
and
data16
push
test
test
into
pop
repnz
test
add
xor
jl
inc
xchg
iret
and
out
pop
dec
xchg
je
std
jmp
inc
orb
inc
icebp
xchg
pop
pop
pop
push
jb
jnp
push
in
inc
gs
das
jo
out
int
xor
sbb
std
test
bound
mov
iret
push
adc
push
cmpsl
ret
mov
repnz
push
dec
add
mov
pop
sahf
rcll
or
sbb
jmp
into
xchg
aam
push
loopne
sbb
ss
sahf
dec
adc
add
jp
or
lahf
lret
andb
fnstsw
jg
adc
inc
jg
lahf
push
sub
test
adc
rcl
fstpt
xor
aas
test
mov
sbb
jne
lds
mov
cmp
ja
xlat
push
add
or
aad
clc
jg
shr
daa
cwtl
sub
sbb
cmp
mov
data16
ret
cmp
pop
fsubrs
ffree
or
mov
lcallw
iret
xlat
jle
in
inc
idivb
int3
inc
jecxz
inc
adc
mov
push
cmp
xchg
mov
clc
rorb
flds
and
int
mov
lcallw
xchg
push
cmpl
pop
cmp
pushf
rcrl
sti
pop
xor
pop
cmpsl
out
arpl
cmp
addb
arpl
lret
hlt
insl
mov
inc
negl
aad
jb
call
mov
data16
ja
call
push
and
jb
mov
loopne
aaa
inc
scas
xchg
sub
push
xchg
jl
mov
push
jb
sti
cmp
mov
sbb
scas
aam
jo
dec
adcl
rcll
sub
icebp
pop
inc
mov
adc
sbb
popl
push
and
xorb
cmp
and
lcall
mov
dec
int3
jecxz
or
lret
mov
cld
adc
pop
clc
sub
push
test
mov
pusha
xlat
mov
xchg
sub
push
fldcw
mov
popf
xchg
inc
xchg
sbb
or
shrb
inc
xor
into
ljmp
adc
cmp
jle
cltd
sub
xor
cld
pop
cs
jns
jp
dec
jecxz
rorb
mov
cld
std
fstl
mov
add
cmpsb
iret
ljmp
rolb
jo
xor
shll
aam
mov
enter
sub
ljmp
fidivs
push
xor
stc
movsb
cs
insb
test
ljmp
mov
lret
pop
inc
jno
insb
stos
mov
pop
fdivrs
lds
pop
mov
dec
lret
negl
push
sbb
adc
fildl
mov
cmp
or
lret
pusha
jbe
fs
sub
push
jg
ds
fcmovnb
push
add
and
jmp
mov
xchg
push
cmpb
fstl
loopne
rorb
js
cmp
dec
jno
adc
mov
xor
push
cmp
cmpsb
mov
push
sbb
scas
or
dec
into
mov
cmp
stos
in
xchg
push
int
cmp
scas
insl
lahf
xor
inc
lods
rcll
add
push
icebp
add
adc
lret
sub
push
fdivl
xor
inc
cmc
out
xchg
out
js
shll
xchg
lods
or
and
push
inc
mov
jp
add
pusha
pop
cli
adc
loop
repnz
rcrl
das
sbb
arpl
test
data16
repz
mov
adc
adc
mov
xor
pop
add
sbb
push
sub
lods
das
or
jo
movsb
pslld
xchg
test
stos
mov
aaa
ret
jg
inc
ja
mov
jmp
mov
inc
sbb
or
test
jno
add
movsb
out
sbb
cmp
adc
or
xor
dec
std
xorb
push
mov
add
lods
in
mulb
sbb
push
into
pushl
mov
cmp
mov
or
pushf
shll
cwtl
mov
mov
adc
mov
outsl
xor
pop
ljmp
orb
arpl
outsb
jnp
dec
adc
cmp
jl
push
imulb
push
cmp
jnp
in
push
in
pop
xlat
lret
mov
test
daa
mov
insl
in
adc
icebp
and
ret
mov
inc
testb
sub
sub
ret
insl
or
lahf
addr16
add
fistps
xor
fcomps
xchg
sub
jne
cmp
inc
cmpb
mov
stos
lds
xchg
jle
imull
es
mov
push
pop
push
ret
icebp
repnz
xlat
hlt
das
dec
mov
gs
divl
dec
fisubrl
xor
dec
dec
cs
jns
sbb
jns
mov
out
fwait
movsb
cmp
mov
push
dec
aad
xor
insl
adc
sub
ret
xchg
dec
sub
pop
das
sub
repz
cmp
pusha
add
nop
test
push
lods
loopne
fcmovnbe
ss
cmp
jne
lods
in
add
fwait
jo
dec
cmpsl
mov
mov
aas
xor
mov
sarl
mov
fs
pop
or
add
push
ret
xor
cmp
in
lea
inc
push
subb
daa
push
pop
mov
mov
mov
push
pop
mov
ds
xchg
scas
cmp
je
shlb
roll
ret
or
sbb
cmp
mov
inc
jns
cmpsb
pop
jg
and
int
fwait
sbb
enter
in
dec
xor
mov
addr16
fisubrl
xchg
jmp
mov
call
add
inc
cmp
stos
or
mov
pop
iret
lahf
and
sub
in
mov
stos
sti
stc
push
or
ret
je
sar
cld
cmpsb
pop
roll
add
sbb
dec
nop
imul
sub
je
shrl
xchg
mov
inc
push
push
xor
cmpsb
in
jbe
cmp
js
shll
xchg
and
xchg
outsl
subb
out
gs
out
loope
and
xchg
movsb
sub
scas
mov
hlt
pop
pusha
push
adc
inc
repnz
rorl
push
dec
fisttpll
dec
adc
inc
shll
push
clc
xchg
or
int
and
adcb
enter
daa
in
xor
insl
adc
xchg
fnstcw
sbb
dec
add
inc
inc
xchg
push
sbb
in
lcall
fdivrs
add
sub
cltd
in
or
fiadds
sub
mov
fsubs
push
inc
dec
cmp
jp
ja
imul
sub
mov
bound
mov
push
or
sub
mov
mov
jns
jmp
je
jle
out
or
or
jns
jne
or
nop
cmpsl
pop
adc
xor
pop
fs
std
or
fptan
add
nop
in
sbb
xchg
popa
mov
repz
xor
mov
jbe
lret
mov
lret
push
je
imul
imul
xchg
dec
xchg
test
push
push
das
leave
jge
shll
sub
mov
add
cltd
mov
jp
cmpb
fstl
xchg
adc
sub
mov
enter
xchg
ljmpw
pushf
xlat
add
mov
je
rorb
mov
aas
jo
inc
mov
jne
rcll
mov
ret
int3
inc
sti
mov
xchg
lds
xor
pop
push
xor
push
mov
stc
mov
mov
ja
mov
pop
mov
pop
or
and
jmp
in
arpl
jl
inc
mov
inc
aam
inc
cmp
pop
cmp
and
shlb
mov
sub
pop
cmp
pop
fcmovnbe
test
daa
and
mov
ljmp
and
xchg
sbb
clc
sub
jg
fildll
movsb
inc
cmp
xor
adc
xchg
inc
repnz
lea
cmp
mov
dec
sbb
dec
test
pop
fcmovnbe
add
dec
rcl
mov
into
xor
push
cs
push
fdivp
popf
movsl
mov
aas
repz
iret
loop
into
hlt
inc
and
outsb
cmpsl
bound
insb
sbbl
pushf
xchg
cwtl
adc
popf
cmp
test
pusha
xchg
adc
xchg
shrl
shll
imull
lahf
sbb
push
adc
mov
push
or
cmp
push
jge
inc
jge
inc
or
jns
mov
xchg
push
mov
mov
sub
lahf
mov
xchg
inc
and
mov
mov
es
ret
adc
repz
and
adcl
fnstenv
clc
inc
adc
xchg
out
adc
fxam
xchg
add
pop
add
scas
push
dec
cmp
pop
data16
es
mov
xor
lcall
test
shlb
nop
sbb
dec
and
out
push
mov
xchg
push
arpl
sbb
loopne
nop
xor
mov
xchg
test
add
pop
jnp
in
sbb
cmp
das
mov
push
lds
fwait
jg
shl
inc
add
pmaxsw
scas
popf
pop
ja
mov
pop
push
movsl
xor
sbb
dec
dec
xchg
data16
push
pop
bswap
mov
mov
stos
test
mov
out
pop
push
jmp
sub
mov
lea
cltd
push
jmp
nop
xchg
daa
test
scas
inc
or
cmpsb
push
loope
sbb
int3
push
and
fldl
fsubr
dec
jmp
adc
aas
cmp
mov
sbb
cmp
shlb
jno
or
fcoms
rcll
sbb
push
ds
std
sbb
push
daa
adc
dec
pushf
sti
pop
sbb
subb
xchg
xlat
or
mov
xor
jmp
xchg
loope
mov
mov
into
push
aas
loope
push
add
dec
pop
mov
subb
jno
aam
loopne
xor
fadds
dec
jmp
push
pop
scas
xchg
popa
outsl
incb
frstor
cmp
cmp
shrb
aas
ret
clc
sbb
inc
data16
jl
pop
sahf
cmp
loope
add
adc
movsb
or
adc
mov
sbb
rclb
inc
or
mov
sahf
in
and
loope
jl
xor
outsl
addb
leave
std
jbe
adc
and
shrb
xor
mov
mov
ficoml
mov
repnz
or
lds
lret
fiaddl
inc
xchg
push
add
adc
sub
push
or
ja
dec
push
andb
repz
fwait
ds
ret
sbb
loop
movsl
xchg
xor
mov
pusha
incl
jnp
test
negl
dec
outsl
pop
dec
mov
gs
push
sub
sar
pop
aaa
push
cmc
and
adc
out
in
lret
xor
imul
aad
enter
notl
pop
and
xchg
out
insb
and
mov
lods
push
xchg
dec
fistpl
lahf
loope
stos
xor
ljmp
jns
pop
pop
and
fadd
lods
ud0
fs
jmp
jg
aas
mov
dec
lret
sbb
in
lock
add
je
stos
jp
in
lahf
clc
clc
sti
clc
sub
adc
jg
pop
in
fcmovnbe
sbb
mov
lcall
insl
ret
xchg
iret
pushf
sub
mov
push
sub
pop
xor
rcrl
jno
xchg
push
cli
stc
xchg
scas
repz
or
and
test
sub
outsb
or
icebp
mov
jp
sahf
jmp
adc
ja
and
loopne
cmpsb
ljmp
mov
popf
mov
lock
mov
dec
sub
dec
stos
sbb
fidivrs
ret
xor
es
std
in
inc
aas
fidivrs
cmp
ret
aad
jne
cmp
mov
repnz
icebp
pop
dec
test
mull
xchg
cmpsb
ljmp
cmp
in
lahf
mov
lds
xchg
or
mov
xchg
pop
shr
cmc
mov
lret
scas
stc
adc
inc
jg
sbb
add
mov
cmp
nop
cmp
fiaddl
inc
rorb
lds
arpl
pop
hlt
jae
addr16
insl
and
es
xor
ret
mov
sub
xchg
xchg
lds
stos
andb
stc
jp
int3
sbb
iret
push
dec
adcl
repz
fstpt
and
xorl
add
enter
clc
push
xor
mov
cmpsl
fwait
int
test
and
add
or
nop
aas
mov
pop
jnp
mov
loop
or
repz
mov
adc
cli
pop
adc
fisubrs
nop/reserved
mov
push
repnz
add
add
adc
jo
inc
fildll
mov
ljmp
lds
or
push
jecxz
fldenv
mov
call
out
inc
aam
xchg
and
and
test
lret
pop
jne
ljmp
xchg
add
push
and
push
sub
xorl
test
cwtl
fiaddl
sbb
or
jl
test
fnsave
jne
test
or
test
cmp
call
stos
lret
xchg
lea
adc
int
or
jo
ret
fmul
jo
add
cld
mov
dec
xor
xor
andb
shlb
sbbb
push
pop
lods
out
pop
pop
mov
pop
jmp
aam
mov
shrl
cmp
push
ljmp
aad
xchg
push
mov
add
inc
unpckhps
rcll
xchg
scas
pusha
push
dec
xchg
and
add
jne
jl
push
decl
out
push
fmulp
pop
xor
ds
stc
sbb
adc
bound
jno
out
stos
std
mov
lods
shr
andps
add
xchg
add
adc
add
in
sub
insb
sbb
adc
cmp
xchg
icebp
test
jmp
divb
add
lcall
lret
cmpsl
cmp
imul
sbb
int
divl
cmp
pop
rcr
repz
push
push
sbb
jo
sbb
shrl
imul
push
das
pop
loope
inc
mov
mov
sbb
clc
stos
mov
jmp
push
mov
sub
cmpsb
cmc
into
mov
mov
in
je
push
inc
mov
std
stos
std
adc
outsb
xor
repnz
jp
stc
fnstsw
insb
xlat
cmp
in
sbb
xchg
sub
pop
lcall
jp
dec
arpl
add
push
push
icebp
imul
popa
mov
in
or
or
dec
mov
cmpsb
pusha
rolb
fldenv
mov
pop
jne
xchg
data16
xchg
outsb
cmp
test
jecxz
xchg
scas
inc
call
idivb
dec
inc
mov
jo
lret
and
in
out
jo
sub
mov
sub
jo
call
mov
add
jecxz
add
lods
scas
outsb
mov
push
loop
xchg
pop
xchg
addl
fcmovbe
hlt
add
iret
sub
ret
shl
jbe
push
call
jge
sbb
jae
cmp
mov
subb
sbb
fnstcw
mov
jae
pop
cltd
sub
mov
dec
das
out
pop
scas
fnsave
cmp
in
cmp
mov
jb
cmp
pop
push
fcmovnbe
xor
inc
rclb
cmp
jecxz
fidivl
ret
out
mov
aas
sub
add
movsb
aaa
mov
jmp
push
xchg
cs
inc
push
push
pop
cmp
insb
repnz
insb
dec
jns
add
and
cmpb
shll
mov
mov
mov
lea
pusha
stos
pop
jg
and
jb
mov
fidivrs
mov
es
and
out
sub
push
shll
xchg
pop
fisubrl
lock
jmp
ror
idivl
xchg
sbb
arpl
inc
enter
cmpsl
xchg
jp
ljmp
add
cmp
xlat
decb
insb
lods
xlat
push
js
gs
dec
lds
fs
adc
inc
lahf
ja
inc
stc
dec
es
dec
jecxz
jle
js
jns
inc
xor
fsubs
and
jne
cltd
popf
aaa
push
shl
std
jl
cmp
add
nop
stc
push
jae
andb
sub
outsb
add
lret
cmp
mov
dec
jno
mov
lret
cmp
loopne
cli
mov
push
es
xchg
and
mov
or
cmpsl
inc
jne
push
iret
xor
mov
sbb
sub
fcomi
bound
sbb
test
cmp
push
add
fcmovne
mov
into
add
sbb
mov
mov
jo
fmuls
ret
add
adc
mov
mov
insb
xor
sub
ret
jb
ja
stos
dec
jns
ret
fldl
lds
out
adc
push
js
aas
or
xchg
inc
fdivrl
mov
leave
mov
arpl
aas
pop
fsubr
dec
out
jecxz
push
divl
fidivl
fidivs
or
loop
in
dec
addb
popa
mov
and
inc
lret
ret
addl
mov
popf
clc
lock
push
cmc
fdivl
lock
cmp
sub
mov
dec
out
loope
mov
jo
fadds
sub
sub
addr16
lock
mov
fildl
mov
dec
and
adc
fiadds
sbbb
es
mov
and
mov
stc
and
daa
popa
xchg
data16
pop
aas
mov
cli
aas
icebp
stc
inc
cs
mov
push
jne
fsubrl
stc
hlt
adc
mov
cs
mov
fidivl
imul
xchg
jmp
cli
loope
gs
or
inc
or
mov
lahf
outsl
mov
add
jo
xor
jb
xchg
cmpsl
jge
movsl
out
pop
jl
cld
call
or
mov
push
outsb
mov
std
cltd
mov
pop
fldenv
jno
arpl
leave
xor
dec
loope
jno
xlat
mov
push
sbb
pop
mov
inc
lods
icebp
xor
mov
jecxz
sub
dec
mov
mov
cmp
add
push
push
lret
adc
sub
lret
jecxz,pt
subl
negb
out
cmpsl
sub
cmp
push
dec
xor
cmpl
pop
xchg
inc
xor
dec
stc
or
ret
cli
ss
int
and
dec
and
sarl
lds
lret
in
rclb
imul
inc
pop
orl
ss
movsl
cltd
fmuls
or
cmp
arpl
jmp
orb
int3
mov
pop
data16
jmp
loope
mov
sub
loope
shll
sub
xor
xchg
mov
fwait
jmp
sub
movsl
cmp
dec
inc
cwtl
dec
outsl
adc
pop
addr16
jb
add
sbb
jmp
aad
ljmp
stos
adc
leave
mov
xor
pop
bound
sub
and
sbb
inc
out
adc
xchg
mov
mov
clc
into
cmp
imul
inc
xor
mov
xor
fbld
mov
adc
out
stos
mov
add
test
adc
mov
ret
or
sub
rcrl
cmp
jl
xor
testl
int
pusha
imul
fists
lret
pushf
aad
add
cli
adc
adc
das
lods
loopne
pop
add
mov
sub
sub
xchg
jle
xchg
mov
shlb
or
mov
mov
out
sar
les
cmp
rcrb
loop
iret
xor
pop
outsl
pop
jp
in
push
ja
push
adc
cwtl
mov
adc
xorb
out
mov
mov
mov
push
and
stos
cltd
int3
fcomp
aad
stos
or
mov
inc
adc
sahf
adc
std
xchg
out
lcall
cwtl
pusha
mov
cmc
add
neg
out
fs
lods
adc
xor
jge
iret
cmp
clc
aas
fs
push
movsb
test
xor
into
xor
fwait
jg
cmpsb
test
cmp
cltd
pop
insl
xor
adc
lret
add
lods
adc
cmp
pop
test
xor
inc
mov
fs
fildl
lahf
or
sbb
pop
imul
cmp
xor
push
insl
enter
data16
repz
lea
sti
je
push
ds
sub
lds
movsb
fwait
rorb
inc
leave
inc
jnp
lea
imull
jmp
in
and
clc
test
add
pusha
or
xchg
or
aas
xor
lods
inc
mov
and
mov
add
ret
cmp
loop
xor
adc
pop
push
xor
fldl
jl
fdivrl
push
cmp
xor
xlat
add
mov
imul
inc
fcomp
xchg
fs
jmp
ds
inc
cwtl
jg
mov
xor
repnz
shlb
or
mov
or
add
xor
push
cmp
add
push
push
inc
scas
das
sbb
adc
xchg
out
test
add
add
cli
xor
in
xor
mov
rol
cld
call
lods
cmp
jecxz
xchg
jl
or
inc
pop
ss
adcb
mov
inc
pusha
cli
push
outsl
mov
das
xor
jp
test
or
ss
push
mov
gs
push
inc
add
mov
inc
decb
lcall
ret
lods
clc
fdivrl
adc
xor
dec
pop
out
mov
lods
imul
dec
arpl
sbb
arpl
out
push
je
addl
add
jmp
out
jg
mov
add
xor
cmp
subb
xor
into
js
push
add
jno
mov
sbbb
inc
daa
mov
add
test
cld
les
div
fimull
add
jae
cmp
mov
mov
fidivs
fistpll
mov
fs
arpl
fistpl
repz
orl
xchg
incb
dec
push
clc
xchg
jle
cmp
testb
fdivrs
enter
out
jae
pusha
lcall
je
in
fldt
shlb
lock
call
int
repz
fistps
adc
push
jnp
sbb
fnstsw
nop
jnp
fwait
sub
inc
aas
push
adc
push
add
iret
mov
movsl
xchg
pusha
adc
jbe
sbbb
out
xchg
ficoml
stc
shlb
cmp
in
jp
hlt
jge
mov
lcall
lock
test
aaa
push
pushf
in
cli
mov
inc
inc
pusha
or
xchg
das
sar
dec
push
inc
popf
mov
mov
pop
shld
inc
js
lahf
cmp
push
mov
fwait
cmp
cwtl
pop
pushf
inc
mov
aas
ret
pop
mov
adc
loopne
insb
pop
adc
lods
std
in
je
shlb
mov
push
scas
test
fisubl
push
lahf
arpl
sbb
cmp
sbb
cmp
mov
fisttps
mov
lods
idiv
in
scas
dec
mov
mov
fiadds
lds
mov
mov
out
cmpl
jb
or
in
loop,pn
xor
cmpl
push
call
jle
callw
loope
pop
rolb
hlt
clc
dec
orl
pop
pop
pop
sti
popa
rclb
jbe
in
aaa
nop
imul
popf
cmp
loope
add
and
inc
movsl
ss
add
xor
aas
pushf
add
hlt
push
adc
mov
sahf
sub
ljmp
push
or
cmp
pop
ljmp
dec
mov
xor
fistps
iret
movsb
test
shr
xor
loope
notl
lret
mov
iret
dec
sbb
mov
adc
or
mov
add
stc
sbb
test
scas
mov
sbb
subl
movl
pop
push
imul
pop
repz
sbb
mov
loop
outsl
mov
or
fiaddl
or
jmp
xlat
adc
ja
xor
xchg
push
enter
mov
sahf
rcl
in
pop
decb
mov
sbb
imul
cmp
push
out
adc
std
pop
hlt
or
call
adc
mov
lahf
loop
xchg
dec
cld
mov
aaa
icebp
es
pop
xchg
cld
mov
dec
jo
rcll
jmp
jo
and
out
mov
add
xlat
stc
push
cmp
int3
adc
or
sbb
cld
mov
xchg
aaa
jl
mov
stos
stc
cmc
call
je
repz
dec
mov
add
leave
mov
insb
and
sbb
xchg
movsb
cli
jne
xor
xor
jmp
adc
aaa
mov
ja
push
cmpsl
cmpsl
jno
mov
dec
and
add
jbe
cmp
fimuls
test
das
sbb
or
mov
out
movsb
adc
adcl
adc
mov
pop
fdivrl
mov
push
cmc
rcrl
jp
jmp
test
mov
jmp
jecxz
pop
or
lret
sub
mov
in
in
icebp
movsb
shl
lret
jnp
fcompl
inc
arpl
push
inc
or
and
scas
cmpsl
addr16
lret
jg
jp
cmpsb
xor
std
bound
aas
lds
pop
dec
ror
sbb
add
sbb
cmpb
aaa
in
ficompl
cmp
xor
jecxz
rorb
mov
adc
xchg
fwait
jbe
xchg
lret
js
fistpll
addr16
das
addb
jo
jbe
nop
xor
pop
push
enter
ficompl
data16
test
pop
test
or
or
dec
mov
je
cltd
pop
aas
into
in
cmp
in
arpl
xor
fwait
lcall
popa
or
pop
xchg
sbb
jge
jle
adc
movsb
cwtl
inc
push
int3
cmp
sbb
lahf
and
mov
jnp
into
std
adc
pop
sub
out
fsubs
faddl
flds
fwait
adc
out
insl
mov
add
and
sbb
inc
jmp
movzwl
ret
and
int
rcrb
mov
pop
popa
jns
shrb
pop
into
xlat
xchg
cli
add
int
mov
push
daa
cmc
divl
inc
add
lods
push
lcall
stos
inc
cld
popa
sbb
sbb
nop
icebp
les
adc
jbe
out
push
jbe
insl
xchg
push
loope
rclb
adc
xchg
iret
sub
sbb
xchg
xor
stos
movsl
dec
and
mov
outsb
pop
sti
mov
mov
push
popa
imul
and
aas
notl
add
scas
mov
fdivl
pop
mov
ljmp
mov
mov
inc
inc
lock
cmp
jbe
lods
or
aam
cli
dec
or
mov
jae
subl
mull
xchg
cmp
lea
flds
stc
leave
sbb
mov
int3
aaa
aaa
ret
lods
cmp
push
aaa
mov
mov
push
lahf
jmp
cmpsl
mov
jno
dec
or
sub
pusha
repz
out
pop
pop
js
or
stos
roll
mov
push
insl
jmp
clc
sbb
repnz
dec
movsb
or
xchg
mov
aam
adc
sbb
pop
fisttpl
in
pop
cmc
shll
push
xchg
xor
aam
sbb
das
test
loope
or
aas
inc
add
push
adc
jb
mov
and
call
sbb
scas
leave
fimuls
outsl
in
shlb
decl
cmp
xor
inc
adcl
add
stos
into
jl
aas
push
imul
sbb
movsb
inc
in
scas
pop
dec
ss
push
jns
test
inc
repnz
cmpsl
popf
sbb
pop
leave
and
dec
cld
rcrl
and
add
jmp
pop
lcall
xlat
add
push
jno
mov
inc
pop
mov
sub
cmp
and
mov
or
jae
pop
inc
and
fldenv
shll
pop
xchg
test
fisttpl
add
test
jp
iret
outsb
mulb
cmp
lcall
sti
lods
cmpb
cli
cli
or
fcompl
mov
adc
fdivrl
jmp
push
sti
adc
shlb
sbb
movsl
out
mov
adc
aaa
in
out
ret
outsl
mov
fcompl
popf
dec
pushf
inc
es
jo
inc
insl
xchg
push
in
das
mov
in
iret
xchg
shl
test
and
popf
gs
and
ret
cmp
mov
mov
mov
out
mov
lcall
stc
cmp
shlb
jnp
sbb
mov
aas
repz
push
or
out
sbb
sbb
lret
das
ja
push
jbe
mov
mov
jmp
sbb
xchg
movsb
addb
ret
cld
mov
and
out
adc
sbb
lcall
test
mov
movsl
loope
lcall
jg
push
into
mov
cmpsl
ja
xchg
jmp
xor
pop
mov
ficompl
mov
sub
pop
sbbb
sahf
xorb
xorb
test
xchg
cmc
adc
jne
dec
add
lahf
sbb
test
push
js
mov
pop
shll
cs
mov
pop
or
cmp
adc
aaa
std
outsl
mov
cmp
nop
lds
mov
inc
xchg
imul
fiadds
loope
bound
das
insb
nop
xor
inc
mov
adc
stc
dec
sbb
gs
movsb
subb
and
andb
stos
aaa
inc
lock
sbb
loope
scas
rolb
popf
das
fdivrs
jne
mov
out
rol
and
adc
icebp
fidivl
xor
sub
jb
outsb
push
das
mov
mov
fisttpll
fadds
adc
mov
add
sub
sub
cmpsl
add
arpl
negb
loopne
inc
or
loop
and
push
pop
push
mov
movsl
mov
jecxz
ljmp
pop
mov
add
xchg
pushf
lahf
roll
loopne
icebp
jns,pt
cltd
mov
cmpsb
insb
dec
cwtl
mov
cmp
les
out
mov
mov
loopne
jnp
test
es
and
icebp
xchg
lea
fwait
push
fninit
push
andb
push
add
adc
mov
sbb
push
add
adc
cmp
pop
shll
push
mov
adc
icebp
pushf
xchg
dec
mov
cmpsb
jp
dec
jmp
dec
inc
mov
jge
sbb
add
in
push
js
fidivrl
hlt
aas
inc
mov
mov
cld
add
push
fiaddl
inc
aad
stos
bound
mov
jecxz
fiaddl
push
movsl
pop
mov
pop
stc
mov
pop
push
in
movsl
jae
push
lahf
scas
aas
push
push
popf
sub
in
fistps
arpl
mov
mov
push
xor
add
jne
mov
stc
flds
inc
pop
scas
adc
insl
sti
bound
aad
mov
gs
ror
or
sub
iret
cwtl
int3
out
pop
pop
aam
dec
cs
sbb
fidivs
push
scas
push
hlt
hlt
xor
inc
mov
lea
imul
push
pushf
pop
sbb
sbb
insb
pop
aas
or
dec
push
mov
mov
mov
adc
into
xabort
dec
mov
outsb
mov
sub
xchg
out
daa
enter
int
dec
sub
call
adc
aaa
xchg
cmp
repz
shrl
gs
jno
test
test
cmpsl
jnp
insb
das
jae
mov
mull
sahf
add
inc
xor
lods
mov
loop
pop
sbb
add
cltd
xchg
add
jge
stc
fnsave
cmc
mov
inc
push
fcomp
dec
rolb
sarb
pop
outsl
clc
aaa
outsl
sbb
mov
loopne
outsl
shll
push
sub
mov
das
xor
xchg
sarl
ja
insl
imul
xchg
rcr
mov
add
out
pushf
mov
orb
pop
insb
adc
pop
push
sbb
inc
fsub
inc
aaa
pop
cmp
pop
loopne
mov
inc
cld
pop
insb
sub
aas
ljmp
dec
sbbl
add
stc
cmp
aam
inc
adc
jmp
xor
sub
adc
hlt
jl
add
in
xchg
incl
xchg
dec
cmp
cmc
repnz
cmp
xchg
mov
jae
jb
xchg
lahf
fwait
stos
outsb
adc
add
cmp
push
js
xchg
sbbb
mov
fndisi(8087
cmovg
mov
lods
xlat
ljmp
dec
xor
cmpsb
std
popa
mov
pop
fsts
cmp
pop
lret
lret
stos
ja
push
add
andb
sub
and
pushf
sbb
cs
jmp
scas
xor
test
or
sbb
mov
add
fadd
sbb
aad
inc
xchg
push
xor
jge
mov
loop
mov
sbb
push
lret
inc
ja
jbe
xchg
test
xchg
neg
loope
repz
dec
scas
and
mov
icebp
jns
sbbl
inc
fmulp
repz
sbb
test
pop
xchg
mov
jns
jbe
mov
out
pop
mov
inc
mov
int
jmp
lods
cmp
mov
sub
shll
sub
and
jo
outsb
or
inc
cld
pop
shll
js
jecxz
repnz
sbb
and
ds
ss
or
xorl
cmp
push
sub
add
lea
das
and
inc
sahf
movsb
xlat
pop
shlb
cmp
add
lcall
mov
mov
inc
lock
push
pop
push
incl
dec
fwait
sahf
mov
xchg
ljmp
out
mov
push
rcll
stc
sbb
mov
xor
mov
pop
mov
pop
push
xchg
dec
test
ret
pusha
fcom
loope
mov
adc
fs
jns
jmp
pop
fmulp
sbb
xor
pushf
cmc
arpl
sti
mov
sbb
cmp
sub
xchg
dec
xor
adc
sbb
insl
and
and
jge
lret
add
mov
les
aad
dec
add
test
jns
orb
mov
cwtl
or
inc
pop
test
ret
icebp
adc
pop
fs
sub
jge
lods
adc
mov
frndint
lcall
mov
pop
mov
mov
pop
mov
mov
pop
inc
and
or
pop
cmpsl
leave
sbb
mov
mov
lds
ds
xor
ja
xchg
in
insl
lock
sub
push
pop
and
lea
inc
cmc
mov
sbb
call
add
push
jl
jmp
mov
sub
notl
pusha
sbb
jecxz
dec
pop
cmp
addr16
sbb
sbb
call
mov
mov
mov
dec
dec
mov
fwait
es
xchg
pop
aam
aaa
and
mov
jno
jo
or
into
mov
in
mov
sub
push
sub
iret
dec
mov
imulb
test
test
sub
pop
push
cmp
jl
or
sub
frstor
scas
dec
and
mov
mov
sub
leave
xchg
rcll
lods
loope
mov
cltd
cltd
lock
cwtl
add
pop
sbb
mov
es
into
push
xchg
sub
xchg
sbb
add
sbb
xor
pop
cltd
cltd
and
push
adc
test
ss
inc
jmp
test
adc
sub
jmp
jmp
lret
into
das
jne
dec
cmp
cld
dec
and
push
cmp
outsb
rcl
clc
stos
jmp
clc
out
xchg
xchg
out
out
fwait
rcrl
aad
cmpsb
adc
popf
ds
insl
lods
mov
ss
les
dec
adc
scas
pusha
xor
sbb
or
ja
std
inc
inc
mov
xchg
stos
dec
fistpl
ds
popf
in
in
jecxz
sub
jo
leave
push
std
adc
push
push
imul
daa
roll
jecxz
test
test
ret
lret
sarl
mov
or
lahf
cld
mov
inc
sbb
mov
mov
out
or
movsl
addl
mov
inc
inc
sbb
xchg
pop
ja
add
push
in
jne
clc
arpl
or
inc
xchg
lods
fs
jnp
inc
lret
pop
bound
cltd
or
mov
pop
ret
sbb
stos
inc
push
cld
call
imul
fildll
xchg
push
sbb
inc
shll
fidivl
mov
jecxz
mov
stc
xchg
mov
prefetch
or
mov
flds
sbb
aas
cli
dec
rorl
in
dec
iret
jno
jge
cmpsb
mov
xor
push
sahf
push
lret
pop
inc
lret
stos
push
mov
mov
pop
or
ja
jl
cmp
aad
pop
cmp
jle
imul
add
sub
inc
dec
int3
inc
in
pop
jno
push
in
stos
and
in
push
test
cs
mov
add
out
out
aad
dec
mov
and
push
pop
insl
adc
pop
int
fs
ds
test
adc
cld
mov
repz
cwtl
xor
mov
mov
mov
adc
jg
jmp
xor
pop
in
or
icebp
sti
jno
lds
movsl
jne
xor
dec
cmp
rol
mov
cmp
fists
or
inc
icebp
out
shrb
test
mov
cmp
lods
std
test
aad
js
in
jbe
and
lds
jns
jg
fistps
lcall
cmp
mov
cli
aas
and
jae
sti
jb
jb
cmp
ret
mov
ret
lds
ss
mov
inc
xchg
and
test
jne
mov
mov
scas
cltd
inc
add
sbb
hlt
or
sahf
inc
and
ficoml
fsubp
mov
adc
mov
lods
sbbl
push
dec
cmc
imul
xlat
outsb
mov
mov
in
test
pop
push
call
and
cld
pop
mov
adcl
push
jae
and
mov
mov
shl
les
pop
lock
sbb
jg
rorb
out
push
imul
outsb
lods
mov
cs
arpl
insb
lock
push
xor
pop
fptan
aaa
adc
cwtl
adc
lret
in
loope
adc
jecxz
rorb
mov
add
jl
jnp
mov
lret
or
add
add
pushf
test
mov
fcompl
jne
cmp
cli
cld
add
lods
jb
mov
inc
xor
arpl
xchg
gs
sub
xchg
aam
int
cmpsb
cs
outsl
push
or
cmp
in
mov
insb
push
iret
sub
add
push
or
lods
pop
mov
jmp
sbb
sub
sub
lea
hlt
push
ret
cmp
or
cli
cmp
xchg
orb
xchg
dec
and
ja
jbe
add
nop
mov
inc
or
mov
xchg
adc
lea
lods
sbb
sbb
mov
loope
leave
jno
cmp
test
mov
leave
movsb
xchg
testb
leave
jle
mov
in
push
cli
jno
insb
fimuls
pop
fsubs
ds
or
add
dec
push
fsubrl
mov
push
xchg
mov
movsl
ret
pop
aam
xor
lcall
and
fnstcw
repz
daa
sarl
sbb
insb
sbb
xlat
dec
push
xor
imul
int
stc
leave
ret
adc
inc
adc
sarb
adc
enter
mov
stos
flds
add
fstpt
imulb
rclb
push
mov
pushf
jl
mov
mov
stc
mov
fs
pop
cmp
stos
mov
xchg
mov
xchg
stc
dec
mov
mov
xchg
pop
sbb
cmp
lods
shlb
aam
adc
inc
jbe
in
add
push
mov
jmp
push
inc
or
lcall
jnp
repnz
mov
ja
enter
cmpsl
mov
cmp
test
and
pop
rclb
inc
cmpsl
mov
jle
dec
lahf
mov
or
insb
jae
fsubrp
lahf
insb
stos
in
push
imul
sahf
leave
cs
jns
and
aad
sub
loopne
cmp
cmpsb
xor
jnp
pop
add
and
xchg
add
ja
mov
add
addr16
sti
jno
or
out
xchg
jg
lret
add
mov
cmpsb
in
and
mov
out
and
cmp
or
cli
jae
xlat
or
leave
popf
add
fisubs
or
adc
pop
dec
lcall
repnz
setbe
nop
dec
ret
fwait
jmp
imul
or
mov
in
daa
push
dec
addr16
je
fistl
sub
js
add
sti
inc
nop
cmpsl
pop
out
fstpt
cmp
stos
nop
in
inc
subb
pop
in
shrb
jmp
xchg
mov
fidivrl
orl
sub
lahf
sbb
or
mov
in
add
and
stos
mov
fs
jg
in
sbb
pop
decl
xchg
lds
dec
in
ret
pop
xor
xor
ja
fdivs
adc
jno
jg
in
pushf
inc
inc
lock
xchg
pop
jle
dec
mov
xor
das
into
push
insl
arpl
in
imul
dec
ds
ja
loop
or
adc
dec
call
or
dec
pop
insb
adc
std
mov
mov
xchg
dec
out
mov
aas
movsl
adc
in
cmp
je
in
loop
dec
lahf
int
push
fstps
mov
outsb
and
push
insb
cmp
push
shl
pop
and
mov
mov
mov
and
cmp
cmc
outsl
ja
outsl
pop
xchg
test
test
clc
in
ret
call
mov
iret
popf
movsl
movsl
sti
xchg
aam
jge
dec
movsb
jns
pmulhuw
ljmp
pusha
mov
scas
scas
fnstenv
mov
cli
add
mov
mov
pop
xlat
ss
cmc
pop
pop
arpl
aaa
pop
jne
roll
pop
mov
cwtl
or
ret
adc
add
push
loop
xor
in
lods
xor
pusha
or
jns
add
pop
test
sti
mov
xor
dec
fcoml
popa
mov
xchg
popf
arpl
cmp
aam
xchg
push
and
sub
test
push
push
adc
cwtl
pop
and
xchg
repz
cmp
dec
dec
xor
mov
push
gs
test
inc
call
mov
clc
xchg
fmulp
sbb
inc
into
adc
or
adc
mov
sub
jns
in
xor
imul
add
fisttpl
shrl
xchg
push
sbb
inc
ljmp
sub
jns
sub
xor
push
fildl
std
push
lods
xorl
xchg
adc
xor
repz
fistpl
push
xor
repnz
ljmp
cmp
xchg
shl
pop
and
dec
and
cmp
out
inc
sbb
lock
addb
mov
mov
adcb
ret
mov
mov
iret
sbb
popl
add
adc
inc
sbb
fucom
mov
or
pop
vsubpd
or
jnp
leave
dec
jg
int3
and
mulb
pop
das
add
adc
loope
cmp
xchg
push
aad
push
andl
out
sub
repnz
pop
mov
sbb
push
nopl
cmpsb
inc
mov
dec
push
insl
in
aaa
jle
stc
jbe
gs
push
mov
xlat
add
call
ja
data16
jecxz
lahf
orl
lock
sub
push
cmp
lock
cltd
in
lods
and
sbb
mov
insl
fistpl
outsl
xor
cmp
aas
pop
pop
jb
lock
xor
jle
and
lahf
push
insb
fwait
pop
xchg
xchg
shlb
xchg
push
loopne
subb
into
insb
pop
and
or
aad
or
out
test
pushw
subl
cmpsb
push
ss
xchg
jno
js
mov
dec
test
lods
mov
movsl
jmp
jne
push
push
rol
sbb
push
adc
lds
mov
jns
cmp
dec
psubd
scas
cmpsl
pop
sub
in
dec
jl
jle
fxch
add
pop
cmp
mov
rcrl
dec
mov
xlat
sahf
inc
mov
test
cmp
xor
add
adc
icebp
lcall
scas
mov
lock
add
addr16
pop
sub
dec
xor
es
aaa
xor
add
pop
xor
add
and
test
push
and
xor
in
mov
call
mov
popa
mov
mov
sub
call
cs
xchg
fdivrl
fldl
cld
mov
lods
jp
sub
cmpsl
cmp
adcb
aaa
call
scas
outsb
pusha
jno
push
test
cs
pop
or
call
mov
or
aas
jns
movsb
fdivs
xchg
orl
out
add
push
cmpsl
mov
or
jge
jge
mov
daa
cmpsb
sbb
imul
mov
xchg
mov
jne
mov
roll
xor
cmp
mov
mov
mov
inc
or
mov
fdivr
mov
mov
stos
fs
addr16
inc
add
popa
iret
testl
pop
cmp
neg
mov
mov
rolb
sub
nop
dec
xor
lock
ljmp
and
xchg
mov
repnz
adc
mov
test
xchg
inc
cli
imul
or
inc
sub
movsb
jecxz
movsb
out
mov
test
pop
test
pusha
mov
add
movsl
scas
mov
inc
fistpll
outsl
leave
movsl
scas
jnp
dec
add
jbe
push
xor
scas
aas
lods
stos
pop
push
ret
dec
xor
dec
mov
mov
mov
pop
ret
fucomip
insb
push
mov
push
and
pop
sub
dec
es
mov
jmp
push
sbb
arpl
aam
shlb
imul
mov
pop
lods
jae
repz
movsb
xchg
loope
test
mov
int3
xor
jl
adc
mov
mov
and
nop
or
fsubs
jnp
or
add
push
dec
jnp
into
int3
add
shrl
cmp
mul
clc
xchg
pop
mov
cmp
insb
pop
push
mov
jle
lods
lret
cmpsb
imul
gs
pushf
inc
loopne
push
je
insb
shrl
or
rcll
cmc
test
add
fwait
dec
xchg
or
divb
jge
mov
ljmp
mov
jb
cltd
jecxz
push
pop
add
sub
outsl
mov
cmp
pop
mov
icebp
pop
mov
dec
add
dec
jns
out
insl
pop
adc
test
push
jle
lahf
add
ret
jle
pop
idivb
cmp
xchg
cmp
lcall
jmp
jae
adc
sbb
repz
repnz
nop
leave
iret
jo
adc
push
divl
sahf
xlat
aas
loop
cmp
outsb
leave
out
test
push
shll
jbe
inc
push
ljmp
inc
loopne
scas
pushf
pop
jnp
mov
push
dec
or
sub
divl
dec
or
and
dec
and
push
repnz
or
pusha
lods
sbbb
pop
data16
push
cmp
mov
fisubs
inc
xchg
scas
mov
leave
addb
lea
pushf
std
bound
mov
daa
cmpb
fs
popa
dec
leave
add
pushf
fistpll
mov
mov
testb
mov
pop
test
mov
mov
cmpsb
xor
mov
xlat
in
out
inc
xor
lds
push
mov
xor
jo
adc
cmp
pop
push
mov
fadd
mov
cli
mov
and
lea
cld
cs
pusha
movsl
mov
jo
test
fstpt
addr16
imul
push
test
scas
mov
adc
cmp
jg
xchg
sbb
je
push
push
dec
mov
push
or
add
xchg
iret
jle
je
jno
push
sub
push
mov
mov
imul
outsl
mov
adc
dec
adc
pushf
outsb
test
cltd
xchg
loope
xchg
daa
enter
dec
pop
and
mov
js
mov
aaa
in
or
cmp
adc
lock
jmp
jne
sub
or
insb
cs
nop
push
js
sub
js
push
pop
adc
jo
sbb
mov
test
or
loope
pop
xor
xchg
loop
jg
insl
cmp
inc
dec
fwait
cmp
ror
jge
pop
js
out
inc
movsb
jne
aad
mov
jle
mov
out
and
addl
inc
jae
push
push
cltd
and
frndint
xchg
mov
fiaddl
dec
mov
into
push
enter
or
sub
mov
mov
pop
fs
mov
lods
pop
mov
mov
jne
sub
loopne
lret
loopne
inc
icebp
add
test
roll
push
mov
ja
fsubl
sahf
sbb
or
popf
stc
or
movsl
mov
add
loop
cmp
loope
je
push
jg
rorb
cmp
fnsave
adc
fs
repnz
inc
orl
sub
pop
push
push
test
pop
leave
add
add
push
jne
clc
cmp
pop
cmp
negb
mov
xchg
mov
cmc
add
rclb
ljmp
test
sub
xorl
sub
mov
sub
or
cli
shl
pop
aas
nop
ret
and
or
xor
daa
fldl
sub
jns
mov
inc
mov
jge
and
mov
dec
inc
push
or
out
shlb
arpl
data16
inc
mov
mov
cmp
scas
sub
mov
push
pop
pop
xor
push
or
hlt
xchg
mov
push
loop
icebp
out
xchg
cld
nop
cmc
leave
lock
pop
out
xor
adc
bnd
push
dec
xor
es
comiss
push
adc
test
cmp
mov
in
cmp
xchg
sbb
repnz
cmp
in
mov
sub
xchg
imul
mov
dec
push
mov
pop
ja
and
mov
jmp
fwait
icebp
jmp
mov
fildll
push
mov
pusha
in
insb
inc
or
dec
cwtl
shrb
addl
ss
xor
jecxz
inc
jp
mov
add
push
out
push
adc
push
cwtl
jbe
mov
dec
pop
inc
fadds
mov
fidivl
fisttps
lods
pop
ljmp
and
aas
test
sbb
repz
pop
mov
pop
sahf
adc
add
imul
dec
sub
and
es
push
scas
stos
and
fisttps
pop
inc
adc
repnz
mov
div
lock
test
insl
je
xchg
inc
mov
lea
mov
inc
or
mov
lds
cli
or
je
mov
stos
cli
push
js
test
es
popf
mov
cli
outsb
mov
mov
jl
cmp
lcall
into
or
imul
lret
mov
sbb
add
ucomiss
repz
push
push
iret
ja
test
lds
mov
in
jns
push
mov
je
jns
hlt
imul
enter
adc
repz
hlt
mov
cmp
ret
fs
repz
pop
add
mov
add
int
xchg
mov
sahf
add
sub
outsb
fxtract
sbb
cld
pop
jb
je
fdivs
pop
dec
sub
xchg
xor
pop
mov
cmpsl
mov
mov
jo
and
push
shlb
xor
mov
sbb
jmp
lock
enter
dec
jp
insl
rcl
in
xchg
xor
dec
xor
popa
and
mov
test
iret
adc
pop
rcrb
jecxz
cmp
push
push
dec
sub
les
clc
cld
and
ret
leave
outsl
jnp
sub
lds
lahf
inc
imul
xchg
jp
cs
pop
dec
ret
mov
sub
es
sub
stos
inc
sub
inc
bound
cmp
addr16
cmp
scas
xchg
push
or
xchg
rorb
gs
pop
push
and
out
dec
call
scas
jae
lock
scas
sti
adc
sub
js
mov
in
iret
sub
and
fildll
mov
sbb
jb
push
add
jmp
adc
repnz
data16
out
out
outsb
sbb
push
mov
je
js
out
je
sub
dec
repz
xchg
fsubrl
cmp
je
pop
jge
xchg
icebp
adc
inc
sbb
push
repnz
pop
loop
xor
and
mov
fdivr
mov
lds
fstpt
sarb
hlt
sti
add
jbe
clc
mov
inc
arpl
add
repnz
fs
jae
pop
mov
lds
stos
or
pop
in
out
movsb
xchg
ljmp
adc
mov
mov
rcrl
mov
sub
es
orl
mov
lret
popf
jle
push
and
leave
adc
xchg
aas
add
push
add
dec
mov
pop
push
pop
daa
xchg
dec
out
dec
aaa
and
push
and
repnz
aas
mov
lods
push
insl
int3
inc
das
cmp
stc
sbb
lods
in
roll
adc
mov
out
add
add
jmp
pop
in
dec
cmp
xchg
push
cmp
out
mov
mov
mov
cmpsb
sbb
dec
mov
int3
cmpsl
jmp
rcrb
dec
rcl
adc
pusha
sub
adc
shl
imul
cmpsl
adcl
jno
cmp
adc
sub
test
cwtl
popa
test
jl
xor
popf
cmp
xor
inc
pop
cmp
mov
or
adcb
adc
stc
pushf
je
inc
inc
adc
mov
lock
jmp
movsl
scas
out
out
loopne
and
mov
popa
inc
mov
xchg
stos
cld
mov
insl
ss
xor
mov
pop
in
stos
mov
addr16
repz
shll
call
adc
rorb
inc
lods
imul
cmpsl
dec
das
imul
loopne
push
sub
sarb
add
xchg
push
insb
inc
push
sub
jp
and
xlat
inc
pushf
jp
push
cmpsl
stc
rol
ja
ja
sti
in
test
cmp
fcmove
push
rcrl
or
adc
aas
xchg
call
xchg
push
lock
xchg
test
fisubs
xchg
xchg
cmpsl
dec
jo
pop
fs
jbe
adc
inc
xor
mov
push
fwait
pop
ficomps
sub
jle
mov
clc
adc
loope
cmp
stos
call
mov
aam
mov
mov
mov
push
inc
add
adc
push
sbbb
add
jg
xor
imul
repz
pop
fbld
out
pop
js
mov
mov
push
iret
ja
xchg
movsb
xchg
sbb
mov
stos
insl
xchg
sub
mov
nop
push
stc
bound
in
cmp
adc
stc
adc
mov
and
lea
inc
lahf
inc
mov
mov
cmpsb
ret
xor
adc
div
xor
push
pop
push
jne
mov
jnp
outsb
dec
cld
arpl
lret
ret
out
sbb
ja
sub
leave
mov
scas
push
arpl
dec
pop
ret
mov
mov
popa
xor
mov
mov
mov
adc
fisubrs
in
pop
adc
pop
pop
fidivrs
pop
push
cmp
add
sub
imul
jle
dec
dec
rcll
inc
jge
inc
ljmp
dec
sub
fsubl
or
xchg
cmp
scas
ds
mov
or
dec
xchg
add
jae
push
xchg
call
jp
in
sahf
push
arpl
mov
sbb
pop
lret
jle
push
fstps
lret
jle
outsb
imul
jbe
push
in
pop
inc
aam
imul
testl
cwtl
push
fstpl
mov
mov
arpl
adcl
mov
daa
mov
pop
jae
fwait
cwtl
popa
sbb
pusha
dec
stos
mov
in
mov
lea
out
cmp
push
rcrl
dec
jmp
adc
xchg
cmpsl
sahf
imul
popa
dec
sub
jae
cwtl
stc
cmp
cmpsb
and
jbe
test
sbb
xchg
setnp
out
in
loopne
xchg
and
mov
pop
jl
scas
outsb
sbb
sbb
cwtl
mov
arpl
out
xchg
inc
call
inc
repz
and
pusha
sarl
pop
test
or
and
mov
sbb
jb
xchg
fcmovnb
stos
fnstcw
sbb
bound
xchg
out
aas
mov
mov
rolb
aaa
aas
pushw
rclb
xor
push
sbb
imul
cmp
jo
shl
sub
inc
pop
adc
decb
dec
std
jl
push
push
mov
jmp
push
sbb
das
sub
mov
sbb
cmp
mov
testb
cmpsb
lcall
stos
mov
fimuls
push
push
jb
fsub
icebp
push
adcl
push
cmc
loope
xlat
or
cmpsb
das
cmpb
xor
mov
sbbl
test
jno
out
cld
roll
roll
imul
aas
sub
push
hlt
pop
das
push
push
test
daa
out
sbb
jne
mov
lods
rolb
das
jl
out
xchg
and
mov
fildll
gs
xor
lret
xor
pop
mov
cltd
mov
xor
sti
scas
shll
insb
or
test
imul
jge
dec
xchg
adc
into
and
iret
sti
jl
sub
mov
inc
cld
mov
mov
ficoms
cmp
test
push
popf
call
cmp
pop
lods
out
push
pop
adc
sub
lcall
mov
xchg
dec
mov
mov
jl
pusha
mov
add
in
jo
das
insb
or
xor
clc
ja
push
push
frstor
dec
insb
mov
scas
xor
into
jmp
mov
lea
inc
jmp
add
inc
insl
mov
push
and
mov
lcall
mov
rcr
and
dec
filds
std
test
inc
dec
in
idiv
mov
scas
out
loope
lcall
pusha
xchg
cmp
or
rorl
fs
cmpsb
mov
loopne
sbb
and
rolb
outsl
jo
push
test
inc
xchg
cli
pop
std
lds
inc
bound
iret
push
dec
add
mov
mov
dec
mov
dec
sbb
fyl2xp1
fcompl
ljmp
cli
call
mov
out
insl
push
sahf
ljmp
push
mov
inc
xor
adc
and
aad
push
fimuls
jmp
dec
cmpsb
xchg
mov
inc
mov
lahf
outsb
repnz
sti
pop
push
mov
and
cmp
roll
mov
in
lods
inc
push
pop
sahf
ficoml
mov
pop
lods
rsm
fadd
xchg
rorl
cmpsb
push
add
adc
loop
stos
lret
lds
xchg
dec
and
popf
insb
stos
fidivrs
scas
push
pop
xlat
clc
or
ljmp
add
cmc
or
or
mov
lods
lods
je
xchg
nop
mov
xchg
xor
movsl
dec
add
jb
test
frstor
cmp
sbbb
or
lds
pop
test
mov
add
jo
sahf
fadds
push
lahf
xor
jmp
mov
sbb
add
pcmpgtd
imul
vmwrite
out
and
sbb
or
mov
cmp
cmp
ret
jnp
cmp
aaa
cli
jae
dec
aam
jle
mov
ret
shl
enter
aaa
out
pop
jp
jge
xchg
dec
repz
dec
in
sbb
in
test
ret
test
inc
lcall
aaa
mov
movsl
xor
xchg
insl
jnp
lea
lret
xchg
andl
lcall
fisubs
push
push
aaa
cmpsb
test
inc
out
xchg
ror
movsb
paddb
js
loope
aaa
imul
fidivrl
clc
pop
mov
rcll
ret
pop
adc
inc
shl
sbb
ds
and
sub
and
bound
mov
xchg
cld
sub
mov
jae
sub
mov
daa
or
and
test
into
pusha
es
ja
shlb
inc
jg
mov
push
inc
xor
inc
adc
sbb
shl
loopne
dec
nop
xlat
mov
mov
mov
into
rorl
insl
std
xchg
jecxz
sub
sbb
testl
and
add
and
pop
push
inc
inc
cli
pop
jns
dec
xchg
fbstp
dec
iret
push
stos
inc
leave
push
push
movsb
pushf
cltd
rorl
mov
mov
push
stos
fldl
popa
outsb
lods
cmp
lcall
add
jecxz
icebp
push
pop
stos
push
jnp
rorl
call
daa
and
sub
pop
dec
mov
xor
mov
insb
adcl
cltd
xchg
popf
push
cld
add
or
cltd
xchg
bnd
push
pop
pop
jmp
ds
sarb
pop
scas
pop
sub
out
scas
fs
lcall
aaa
jb
je
out
xchg
rol
pop
in
mov
insb
outsl
sbb
stos
cmpsl
cmp
fs
sysexit
pop
insb
sbb
sub
xchg
xchg
cmpl
das
cmp
cltd
sbb
stos
test
mov
fimuls
rolb
mov
or
add
and
or
sbb
xchg
cmp
daa
cmp
gs
pop
outsl
push
pusha
aas
pop
aaa
fildll
lea
leave
cmp
lcall
cmp
stc
dec
cmp
outsb
adc
mov
inc
xor
adc
pop
fldt
popa
adc
dec
pop
insb
loop
mov
mov
movsl
jnp
push
lods
lret
pop
cli
jp
cmp
ds
lahf
sub
sar
dec
aaa
les
ret
mov
test
or
addr16
jnp
or
add
push
jb
pusha
add
jb
jmp
jo
sbb
pop
in
loope
shll
mov
push
xor
es
dec
addr16
jno
lret
clc
push
push
inc
div
fstpt
xlat
inc
dec
out
pushf
fdecstp
xchg
jae
aas
loopne
jne
sub
pushf
outsl
push
das
inc
sub
idivl
imul
mov
ss
sub
lret
lret
xchg
sbb
shrl
push
fstpt
nop
fs
jb
cmp
inc
sub
jno
cli
fwait
xchg
jmp
mov
inc
mov
sub
and
sub
lods
ret
ljmp
sub
sub
test
andl
incl
add
sbb
sti
jae
nop
aaa
cmp
ficoml
cmp
mov
inc
stos
push
cs
push
mov
int
cmp
fwait
mov
mov
mov
call
pop
push
rol
scas
sbb
mov
add
fcmovnu
icebp
pop
add
sahf
fdivl
pop
xorb
and
loope
dec
inc
outsl
jnp
xor
cs
mov
jle
or
pop
outsb
test
in
out
scas
jnp
xlat
in
cmp
cmc
xchg
xchg
pop
lcall
inc
movsb
xlat
negl
fstps
xchg
shrl
test
or
pop
mov
and
loopnew
pop
sahf
adc
insb
push
ret
aaa
lea
sub
mov
lret
cld
pop
jnp
xchg
mov
aaa
in
push
inc
loop
inc
insb
movsl
or
lock
into
inc
inc
sbb
xor
insb
addr16
push
adc
fcomi
les
xchg
idivb
jp
shlb
movb
mov
iret
mov
movhlps
mov
jp
out
icebp
scas
int3
enter
adc
push
clc
scas
enter
jae
iret
fiadds
fimull
out
or
lahf
add
dec
shll
cmpsb
xchg
outsb
or
pop
pop
push
mov
sbb
xchg
mov
sbb
out
test
es
pop
inc
fs
adc
push
cmpsb
sarl
lahf
movsb
stos
cmp
add
cwtl
scas
test
xor
mov
xchg
notb
jb
push
or
push
inc
out
add
pminub
dec
lds
pop
mov
andb
lahf
lcall
lods
sbb
sbb
mov
cld
repz
inc
cmp
arpl
and
ja
xchg
cmp
in
rorl
jnp
dec
pushl
dec
mov
nop
je
mov
sbb
into
imul
hlt
scas
into
dec
inc
mov
inc
pop
inc
adc
lahf
adc
xor
out
jge
xchg
fs
pop
inc
mov
dec
int3
push
mov
loope
scas
test
mov
bound
hlt
repnz
out
dec
lret
sub
pop
pop
lock
cld
out
jb
out
pushf
sbb
icebp
std
push
and
repnz
aas
push
xlat
scas
adc
lret
mov
mov
inc
sbb
out
insl
out
xchg
cwtl
jnp
fimuls
jecxz
xor
out
pop
cltd
add
aad
jnp
scas
pusha
fdivrs
sub
lea
imul
int
xor
lahf
fwait
je
jnp
dec
adc
fldenv
ficompl
add
sub
dec
xor
ffree
fistpll
dec
xor
cli
cwtl
xchg
loope
in
jbe
adc
ss
out
cmp
out
jl
add
stos
mov
mov
out
push
test
push
cld
cmp
stos
aas
nop
testl
pop
loop
pop
cmc
pop
lret
pop
outsb
inc
ficomps
xchg
sub
push
jns
fldl
std
loopne
loopne
scas
in
insl
rcll
call
ret
xor
sbb
repnz
jge
add
sub
fsubrl
add
mov
pop
outsb
or
add
ja
rcrl
mov
test
lods
inc
insl
jecxz
repnz
pop
xlat
and
add
mov
inc
flds
test
push
imul
lock
jmp
cmp
add
add
add
mov
cli
add
cmp
inc
loop
and
mov
daa
out
jae
out
pop
lods
nop
mov
push
outsl
jge
xor
dec
jb
out
dec
or
jne
mov
es
ljmp
and
push
xor
sub
scas
in
subb
inc
rcrb
ljmp
pop
int
fidivs
jg
push
sub
pop
adc
xor
sti
push
sbb
hlt
mov
jno
sbbl
fstps
daa
outsl
into
call
pop
cs
lret
jle
loop
lea
lods
stc
mov
rol
shr
daa
jo
mov
mov
mov
out
test
inc
mov
cwtl
push
pop
or
push
ja
fs
dec
or
mov
stc
jg
es
cli
loope
shll
or
gs
ret
push
or
fnsave
mov
daa
or
mov
adc
loop
mov
lcall
pop
inc
adc
pop
test
jbe
add
mov
and
mov
or
or
mov
add
mov
mov
jp
and
mov
mov
cld
roll
push
es
outsb
xor
push
decl
add
adc
aaa
std
pop
lret
ss
ljmp
or
ss
cwtl
jp
orb
sbb
out
lds
repz
mov
es
loope
outsl
inc
xchg
push
push
cmp
mov
xchg
stc
dec
fs
cltd
loope
mov
in
outsb
idivl
lock
aaa
sub
testb
imul
lds
inc
xchg
call
adc
ret
mov
add
scas
jg
and
test
dec
push
mov
scas
mov
mov
xchg
out
scas
add
inc
ljmp
xchg
pop
cmp
pop
rcl
jbe
dec
jge
fnstsw
ja
or
cmp
mov
gs
jecxz
std
loop
les
jne
inc
rorl
insb
ds
jmp
cld
rcrb
adc
dec
mov
push
loopne
sub
pop
stc
dec
cmp
cltd
mov
leave
or
xchg
dec
shl
lds
adc
sbb
inc
js
cmp
sub
arpl
cltd
mov
mov
repnz
sahf
or
stc
stos
lods
ficomps
lahf
lds
shll
and
adc
xlat
cltd
repz
add
sbb
xor
loop
fwait
rep
xor
in
lods
ret
cld
mov
shl
mov
sbb
push
lods
dec
nop
pop
push
xchg
mov
pop
cmpb
mov
pop
cmpb
imul
daa
inc
push
cmpsb
lods
jb
xor
in
and
mov
gs
idivl
pop
aas
xchg
icebp
fisubrs
jmp
addr16
aad
dec
mov
out
xchg
jne
daa
test
jle
pushf
adc
xor
jge
adc
or
arpl
cltd
or
jno
or
add
adc
out
xor
sahf
and
inc
xor
mov
adc
sub
jecxz
or
cmc
outsb
sahf
imul
loopne
pop
pop
xlat
push
inc
jnp
cs
jb
in
cmp
out
bound
jb
and
sahf
test
stos
mov
insl
fwait
movsl
push
mov
jle
jns
sbb
hlt
push
rcll
sbb
push
pop
dec
push
xchg
adc
add
clc
xor
inc
pushf
jne
es
mov
out
pop
lea
cmp
xor
int3
nop
fsubl
pop
clc
xchg
mov
and
xlat
fidivrl
cmp
fs
ficomps
test
or
in
xchg
or
mov
adc
mov
dec
inc
sub
jge
xchg
add
pop
sub
clc
xor
pushf
cmc
mov
xchg
sub
lret
ret
outsl
std
mov
xchg
addb
xor
lahf
push
sbbl
insl
les
dec
mov
dec
lods
cld
ret
roll
dec
in
stos
jecxz
mov
or
xchg
or
push
sub
movsb
jle
xchg
mov
and
mul
bound
pop
add
sti
into
aaa
mov
jecxz
loopne
mov
mov
xor
pop
mov
push
push
cs
cmp
in
xchg
adc
movsl
mov
jmp
std
not
cmp
rcl
adc
push
hlt
lds
inc
clc
mov
decb
mov
outsl
loopne
sbb
popa
inc
xor
xchg
push
mov
imul
cs
jae
jge
xchg
jnp
shlb
push
and
adc
incb
shrb
push
push
xlat
adc
and
arpl
out
pop
inc
inc
jecxz
dec
and
mov
cmp
jno
pop
dec
sbb
outsl
imul
jge
and
test
aad
gs
sbb
cwtl
hlt
jle
in
and
insb
rorl
test
pop
in
out
cwtl
jmp
mov
mov
dec
pop
roll
sub
fiaddl
addr16
int
mov
out
xchg
lods
sbb
jne
push
or
inc
push
mov
add
jae
jo
xorl
cmpsl
test
add
and
ljmp
xchg
mov
mov
repnz
pop
dec
addl
fnstsw
leave
push
pushw
insl
push
xchg
xchg
movntps
push
rcrl
and
xor
inc
pop
sbb
int3
mov
add
testl
les
pop
fs
xlat
xchg
sbb
das
cmp
sub
mov
and
jns
cmpsb
sahf
pop
lcall
push
testb
inc
fstl
fnstcw
pop
xchg
or
pushf
pop
xor
outsl
mov
ret
mov
in
ljmp
pop
insb
jecxz
pop
outsl
xchg
js
lcall
sbb
jecxz
neg
pusha
mov
xor
enter
in
push
stc
mov
mov
add
dec
add
push
jle
sbb
data16
xchg
add
insl
sbb
lods
ss
enter
movsl
lods
push
jne
xor
mov
sub
and
mov
sbb
adcl
scas
mov
je
and
sub
bound
out
and
xchg
adc
int
push
jae
sbb
int3
mov
test
sub
fstpl
nop
mulb
fnstsw
rcrl
cmpsl
jmp
stc
mov
lods
jge
daa
mov
jecxz
jnp
adc
jo
fcmovu
mov
inc
xchg
lds
jo
mov
ss
jecxz
jle
cmc
mov
pop
or
dec
data16
adc
fyl2x
mov
push
cli
dec
mov
inc
mov
fstp
dec
sahf
push
cmpsb
xchg
aaa
mov
ss
in
orl
lods
push
nop
orb
lds
in
dec
mov
pusha
push
dec
nop
jge
sarl
test
push
jl
xchg
in
cmp
sbb
xchg
popa
rorb
mov
jl
sbb
pushf
pop
mov
xor
jmp
inc
jne
push
mull
bound
pop
jmp
mov
mov
sbb
das
imul
mov
lea
sbb
movsl
adc
sti
divb
push
mov
pushf
cmp
push
jno
hlt
jg
xor
fldl
cmp
or
mov
je
lahf
sub
arpl
or
shrb
push
sti
popa
loop
imul
sbbb
rcll
adc
adc
lds
int
stos
outsb
pop
push
mov
xchg
cs
mov
pop
in
cmpsl
dec
cmpsl
or
xchg
sahf
scas
or
xchg
movl
add
repz
cmp
pop
mov
lds
jg
adc
movsb
fs
negb
add
fwait
sub
in
xor
dec
cmpsl
add
in
filds
xor
add
xor
js
in
jl
stos
mov
mov
adc
pop
pop
insb
out
jmp
push
mov
cwtl
fsubr
test
jno
sbb
test
push
scas
pop
jb
push
in
aas
nop
cmpsl
aas
xor
pop
andb
mov
cli
inc
sub
jnp
sahf
add
out
fistps
pusha
aaa
add
fucomp
in
add
push
mov
jno
int3
xorb
decl
sub
mov
push
jb,pn
add
ret
hlt
shrl
orl
fsubs
fimull
xchg
das
mov
imul
stos
mov
dec
call
aaa
push
cs
push
sahf
stos
pop
pop
dec
lahf
and
jg
lock
sbb
and
mov
mov
jg
xorb
sub
lret
pop
or
cmpsl
mov
xchg
ja
pop
sub
or
repnz
rcrl
ss
shrb
jmp
push
and
clc
inc
cmpsl
inc
call
or
nop
shl
pop
call
mov
mov
push
es
sbb
jbe
cmc
mov
sbb
out
ret
shl
jl,pt
fcoml
adc
cmpsl
pop
notl
outsb
lea
sbb
adc
rcl
adc
jbe
xor
mov
push
adc
mov
mov
jno
push
sbb
sbb
popw
nop
imul
sarb
sbb
lret
jno
push
imul
subl
aaa
faddp
or
mov
cmpl
ficompl
jns
pop
mov
mov
lahf
push
fdivrs
shrl
pop
cli
ljmp
jns
pop
jae
enter
ja
or
pusha
lods
test
aaa
push
mov
dec
xchg
rcrb
mov
sbb
mov
test
sahf
adcl
add
aas
cmp
fidivs
xchg
data16
arpl
mov
mov
dec
movsl
sbb
xor
inc
data16
shr
jg
add
icebp
dec
mov
fisttpl
pop
mov
bound
add
or
inc
ret
lcall
inc
popf
dec
sbb
sub
loopne
add
dec
pop
fcmovnu
jmp
aam
fisttpl
out
iret
stos
xchg
fdivrs
cmpb
push
cmp
fcoms
rclb
jo
jns
inc
ljmp
sbb
rcrb
pop
out
mov
fcomps
xor
adc
test
aam
pop
int
push
dec
mov
bound
sbb
rclb
jno
shlb
andl
aas
cmp
test
icebp
shlb
cmp
daa
mov
mov
and
mov
rclb
and
lret
inc
ret
popf
sub
inc
pop
negb
jg
stos
dec
cmpsl
ja
js
dec
dec
pop
std
dec
or
xchg
xchg
ds
ret
cwtl
lahf
scas
out
cltd
scas
or
ret
test
sub
xor
inc
pop
lods
sti
adc
sbb
test
or
sub
jae
and
cmpsb
orl
xchg
dec
fwait
shll
cmc
fnsave
xchg
imul
cwtl
xor
clc
push
test
jo
dec
cwtl
sub
test
mov
lcall
jne
sub
int
xchg
jg
xor
clc
jb
mov
out
ficoms
push
dec
int
fwait
rcrl
mov
sbb
inc
add
push
xchg
in
nop
fwait
cmc
dec
push
xchg
int
repnz
pop
ss
insl
sbb
or
xchg
fildll
push
lods
pop
nop
call
das
sub
jnp
ficomps
stc
shlb
test
mov
fs
or
movsb
addr16
lds
daa
jp
xor
into
sbb
xchg
in
scas
add
mov
add
sar
dec
in
sub
movsl
xchg
inc
in
dec
call
inc
jg
mov
sub
push
cltd
jnp
sbb
jl
dec
jge
mov
or
dec
lahf
mov
push
mov
lret
stos
arpl
sub
ret
cmp
test
fucomip
sbb
jp
cmp
ret
cmc
in
rcr
or
mov
inc
mov
adc
mov
mov
xchg
mov
jle
and
xor
dec
mov
mov
movsl
inc
mov
js
imul
xchg
imul
jno
cmpsb
cmpsb
cmp
ret
and
dec
inc
insb
cmp
pop
pop
pop
fisubs
popl
aas
cmp
cmc
mov
imul
addr16
fcompl
inc
mov
gs
testb
dec
jp
nop
jge
ret
mov
and
ds
call
aas
call
pop
jnp
jg
mov
or
xor
jmp
xorb
test
test
xchg
adc
fwait
dec
in
xchg
pop
rolb
mov
cmp
mov
pop
pushf
andl
jg
test
cmp
jp
adc
xor
test
or
jmp
orl
mov
aam
jo
shll
out
push
sbb
test
xchg
stc
and
and
lods
iret
inc
mov
nop
test
ds
fucomp
pop
inc
mov
out
fnsave
lds
sub
pop
inc
adcl
js
or
arpl
int
jb
imul
mov
inc
mov
popf
cmp
sbb
add
mov
jmp
mov
ja
push
add
and
std
mov
add
or
imul
insb
inc
jp
lcall
mov
push
push
cld
xor
iret
ja
loope
or
push
jo
jmp
xor
add
enter
and
mov
outsl
mulb
inc
fwait
adc
sar
or
sti
lfs
bound
imul
mov
cmp
xor
xchg
fstpl
fadds
jns
mov
sahf
sub
aaa
jp
aaa
mov
icebp
pop
jp
inc
add
cli
and
jno
into
adc
insb
xchg
fiaddl
int3
mov
and
mov
int3
hlt
inc
cwtl
mov
icebp
add
xchg
dec
inc
and
adc
jo
xchg
xor
jl
mov
lahf
dec
push
xchg
fisttpll
gs
outsb
or
test
push
jecxz
test
sbb
std
notb
push
push
cmpl
or
movsb
fcomps
outsb
jmp
aam
fists
test
push
sub
dec
ja
mov
dec
lods
fbstp
ror
cmp
pop
pop
not
mov
pop
cmp
jl
out
and
pop
adc
jmp
cwtl
shlb
fucomp
xchg
aaa
addr16
arpl
enter
cmp
aam
xor
fcmovnu
ja
jns
and
rcrb
pop
cmp
in
into
arpl
mov
xor
xor
mov
push
shl
and
loope
std
lock
rcrb
pusha
movsb
push
stos
jnp
leave
and
mov
and
mov
shlb
rolb
mov
arpl
inc
popa
dec
pop
ss
adc
scas
mov
sbb
mov
das
decl
dec
popf
push
stos
or
iret
scas
je
sub
out
insl
mov
cmp
test
xor
into
mov
notl
adc
pop
fimull
sub
jno
test
push
push
popa
cmp
das
cmp
pop
xor
sbb
mov
test
fbld
ss
push
ret
mov
jle
mov
cmpsb
mov
cmpsl
lock
xlat
xor
xlat
pop
stos
xor
and
add
inc
sub
pusha
dec
incl
push
adc
mov
rorl
out
lock
pop
or
loope
dec
adc
iret
push
aad
int
test
nop
jecxz
mov
mov
ret
pop
jns
sub
mov
pop
shrb
mov
lcall
push
pop
data16
adc
aam
inc
adc
lahf
xchg
pop
popf
jp
ljmp
mov
xlat
int3
pop
shrl
fs
lock
jle
test
mov
adc
mov
dec
adc
movhlps
testb
push
push
cld
fdivl
xchg
std
adc
hlt
in
into
and
pop
mov
mov
pop
aad
enter
mov
sub
out
lea
push
call
in
pop
cmp
repz
dec
adc
inc
adc
imul
pop
sti
cmp
aam
fnsave
mov
xorl
dec
mov
fstpl
xchg
adc
adc
nop
adc
or
out
cmpsb
pop
mov
or
sub
xlat
lds
push
je
inc
mov
mov
push
inc
scas
fwait
orl
sub
or
or
das
mov
bound
inc
jbe
inc
rclb
dec
jo
jnp
add
fdivs
jno
into
cmc
test
fnstsw
cmpsl
cmpsb
mov
dec
js
and
int3
ljmp
mulb
es
pop
imul
mov
jbe
outsb
dec
shll
dec
jecxz
cmp
xor
xchg
outsb
adc
fldenv
leave
sbb
cmp
adc
cs
cmp
mov
shll
adc
jns
xchg
scas
jo
xchg
pop
cld
cmp
iret
sub
lods
and
mov
pop
and
or
inc
adc
stc
adc
mov
adc
out
xor
insb
or
pop
or
push
xchg
mov
loopne
jns
jbe
lret
add
jl
dec
hlt
ficoml
stos
jle
dec
test
push
adc
lcall
mov
shr
dec
rorb
mov
imul
sbbl
fs
adc
jl
dec
arpl
inc
leave
loop
sub
sub
xchg
dec
mov
inc
dec
imul
movsb
push
lcall
mov
ret
mov
jmp
mov
iret
push
popf
inc
cmp
dec
xchg
stos
sbb
push
daa
adc
jge
stos
ds
or
loope
push
rorb
jne
scas
sbb
fs
cmp
mov
into
int
jnp
loopne
dec
lds
outsb
shr
lods
jmp
das
inc
mov
xor
mov
or
scas
sbb
and
fnsave
imul
sbb
mov
cwtl
pop
mov
out
cmp
push
or
mov
mov
popf
cli
inc
fs
dec
or
cmp
inc
adc
ror
and
stos
push
sbb
jbe
aas
sub
fistpl
cli
mov
daa
fists
pop
sysret
loopne
xchg
pop
mov
sub
hlt
pop
jp
nop
add
inc
cltd
or
pop
aas
maxps
and
inc
adc
xchg
xchg
in
test
mov
jge
dec
out
xchg
or
shrb
sbb
sahf
into
pusha
out
and
jle
mov
loope
data16
scas
pop
mov
inc
mov
stos
insb
aas
cmpsl
int3
loop
sbb
adc
pop
xor
pop
mov
lods
jnp
imulb
loop
xor
xor
push
scas
es
inc
mov
movsb
dec
pop
jno
aaa
data16
pusha
add
test
sub
insb
and
cmpsb
xor
sub
testb
sub
dec
dec
xor
inc
push
jmp
enter
mov
mov
das
push
xor
sbb
xor
loope
enter
bnd
dec
out
sub
fs
mov
dec
inc
les
mov
or
add
fsts
scas
aas
mov
jl
out
sbb
cmpsb
rclb
out
push
fucomp
mov
fildl
shlb
frstor
int
int
movl
icebp
jb
incb
fldl
pop
adc
and
push
cli
shll
dec
mov
dec
mov
mov
cli
cmpl
push
inc
xchg
jmp
push
xor
dec
fstps
pop
mov
dec
add
imul
leave
inc
clc
or
mull
filds
cwtl
icebp
cmc
inc
mov
ret
imul
leave
in
sbb
push
sti
iret
push
dec
and
adc
sub
or
push
push
js
lds
mov
adc
cmp
push
or
mov
pop
test
pop
aad
in
dec
mov
call
nop
push
dec
jno
push
mov
xor
vcvttsd2si
test
cltd
xchg
popf
inc
mov
cmp
sbb
pop
push
int
cmp
cmp
daa
ss
imul
pop
mov
scas
adc
push
jno
jmp
out
out
lds
pop
xchg
popf
xor
int3
mov
jae
mov
es
imul
add
loopne
mov
icebp
xlat
xchg
loopne
cs
lret
mov
ret
addr16
rcr
rcl
push
fisubrs
std
das
popa
aas
popf
push
ret
iret
loope
lret
outsb
jno
pushf
push
enter
aam
test
xchg
rcrb
cmp
xchg
ret
xchg
into
and
divl
sbbw
cmp
mov
or
cs
push
xlat
pushf
ficoms
cwtl
ror
jno
ss
jno
stos
movsl
cmc
pop
pop
jecxz
jbe
pusha
sarl
cld
sti
or
inc
ss
lea
xor
add
sub
pusha
pop
or
jg
xlat
jg
push
je
aaa
aas
popa
adc
lds
in
pushf
lret
or
mov
xor
ficomps
dec
adc
mov
cmpsb
adc
jns
lahf
clc
pusha
fcmovu
jl
jo
cmpsl
sbb
mov
ljmp
adc
arpl
fs
pop
data16
repz
push
mov
mov
add
dec
sbbb
fistpl
iret
loopne
inc
mov
inc
add
aad
shlb
and
js
mov
insl
add
inc
xchg
cmp
ljmp
xorl
enter
sahf
int3
sub
jl
push
push
mov
loope
lods
insl
push
insb
add
pop
int
fisttpll
push
mov
leave
pop
lods
fsts
cltd
and
jo
daa
nop
inc
arpl
out
cwtl
dec
xchg
fisttpl
mov
mov
fiadds
cmc
jo
push
xor
ja
int
pop
mov
dec
or
lahf
xchg
and
notl
repnz
xchg
inc
cmp
and
adc
mov
shl
add
test
aas
scas
inc
pop
lcall
xlat
fs
fs
addr16
fwait
cld
sti
mov
push
mov
in
stos
jno
aam
push
sbb
and
pop
xor
cmp
mov
jecxz
mov
or
xor
lds
or
inc
movsb
test
dec
push
imul
scas
or
inc
mov
jno
push
inc
addps
pushf
lds
mov
sub
scas
fs
adc
push
cmp
loopne
popf
mov
movsl
iret
jl
cmp
sub
scas
cld
stc
push
cmp
lret
jne
jbe
inc
mov
jns
movsl
mov
mov
ja
sbb
mov
push
inc
and
cmp
and
or
or
sub
inc
push
mov
in
push
test
loopne
mov
cltd
cltd
aad
jae
test
out
or
int
lods
jp
aam
or
in
pop
sbb
fistpl
andb
fisttpl
rolb
jae
sbb
mov
add
cli
lret
dec
jg
xchg
outsb
pop
cmpl
andb
mov
jle
sub
sub
cmpl
sbbb
inc
test
jo
out
das
lods
pushf
test
push
inc
mov
into
add
cmpsb
pop
push
pop
mov
cmp
scas
dec
outsb
in
cltd
test
lahf
pop
scas
aaa
sbb
jp
mov
pushfw
outsb
test
test
ror
pop
cmp
or
fwait
or
into
out
test
mov
scas
adc
sbb
or
shll
xor
sti
inc
lock
push
mov
testl
call
inc
adcl
cmp
pusha
imul
dec
fimuls
jbe
int
jo
cmpsb
test
sbb
push
push
divl
xor
cmpsl
mov
fdivr
orl
mov
add
sbb
xchg
iret
je
xor
and
inc
in
popa
cmpsb
and
std
jg
pop
mov
int3
sahf
pop
or
int3
hlt
xor
or
ljmp
xchg
adc
xchg
gs
sbb
lahf
test
ss
or
xchg
xchg
push
aas
push
or
lock
cmc
sahf
dec
aad
enter
or
adc
xlat
pop
daa
lahf
mov
mov
sbb
ja
push
sbb
adc
and
ret
pop
in
nop
add
push
jo
subb
or
adc
or
scas
mov
push
test
mov
sub
mov
std
mov
jmp
cmp
mov
cmpxchg
and
or
sti
xchg
fistps
cli
pop
adc
sbb
pop
push
rorb
xchg
in
jbe
pop
loopne
loope
movsl
dec
hlt
mov
dec
insl
mov
or
mov
dec
dec
leave
mov
mov
repnz
insl
call
rcl
sarb
test
into
mov
sbbb
push
pop
shl
mov
dec
cmp
cmpsb
or
and
ljmp
jecxz
push
hlt
call
addb
jl
sbbl
push
and
inc
fcoml
jo
loop
imul
xor
ret
movsb
cmpsb
sbb
pop
stos
and
pop
jl
loope
add
nop
fsub
push
xchg
add
jmp
or
cmp
out
sbb
cmp
loope
mov
int
in
xchg
mov
mov
fidivs
scas
lods
xor
pop
sti
mov
or
dec
cmpsb
jecxz
stc
pop
and
xor
inc
ret
fstp
int3
notl
mov
lcall
push
enter
shll
pop
add
push
xor
in
test
mov
jl,pt
cs
dec
lods
and
clc
incl
or
int
adc
mov
xor
rol
cmp
lcall
sti
fidivrs
imul
adc
ss
daa
and
cs
pop
or
bswap
sbb
jae
push
addr16
xchg
imul
sti
inc
in
adc
pushaw
out
call
out
sahf
sti
scas
pop
dec
or
inc
sub
push
pop
fnstsw
outsb
insb
dec
ret
add
xor
adc
imul
lret
cs
sub
push
adc
xorb
scas
push
icebp
mov
pop
mov
fstps
xchg
xor
roll
cmpsb
mov
sbb
into
push
sub
push
stos
addl
ss
out
inc
outsl
std
or
stos
lea
sbb
mov
popa
mov
adc
pusha
testb
mov
jno
cmp
ret
sbb
or
mov
mov
jae
inc
sub
loopne
notl
dec
sub
hlt
out
pop
or
mov
loopne
mov
add
movsl
inc
leave
fsts
sub
dec
xchg
xor
lds
insb
fcmovnbe
sbb
sub
jno
sub
or
cmc
imul
jno
in
test
lret
mov
add
mov
pushf
mov
loope
movsb
pop
sub
cs
movsb
xor
xor
js
lret
iret
jns
pop
shrb
xchg
xchg
sbb
xchg
imul
push
push
popa
sub
outsl
test
arpl
imul
in
imul
inc
std
mov
lahf
jp
sub
outsb
pushf
xor
pop
inc
xchg
and
jnp
es
ds
cmp
cmp
mov
inc
out
add
dec
cs
xchg
xchg
test
push
inc
push
jp
lret
sub
movsb
inc
in
test
pusha
xchg
and
cmp
das
lret
js
cwtl
push
imul
cwtl
and
mov
mov
hlt
sub
or
and
testl
add
add
dec
push
mov
dec
xchg
lds
adc
mov
xor
daa
mov
xchg
cmp
jg
xchg
test
push
inc
into
push
push
add
ljmp
dec
pop
das
jecxz
pop
gs
fxtract
or
loopne
xchg
dec
aam
adc
lock
mov
jmp
aaa
mov
outsl
sbb
lea
xchg
jnp
outsl
das
add
or
imul
xchg
or
or
out
test
push
lret
hlt
jns
add
mov
loope
cmp
fdivrl
ds
dec
stos
mov
xchg
mov
or
push
cmp
sub
jp
cmp
call
and
adc
dec
int
push
aas
push
rcr
push
xchg
movsl
sbb
and
ljmp
adc
rorl
cmp
jb
push
mov
lods
call
push
or
iret
loop
mov
cmp
out
dec
in
sarb
fs
cld
insl
mov
leave
test
and
outsb
daa
cmpsl
lods
lods
xor
pop
jl
pop
sahf
mov
sub
es
mov
sub
push
dec
scas
imul
loopne
in
push
mov
mov
lret
fistl
xchg
fldt
ficoml
adc
pop
idivb
mov
hlt
sbb
jge
or
mov
or
test
scas
call
cmp
jns
mov
aaa
jo
mov
shlb
adc
mov
add
mov
out
xchg
push
xor
insl
js
xchg
std
mov
push
test
rorl
out
mov
inc
loope
add
dec
dec
dec
nop
and
in
inc
ljmp
mov
fidivrs
pop
mov
jmp
clc
adc
mov
fwait
mov
orl
inc
loope
insl
pop
fdivl
or
mov
mov
pop
cli
add
into
or
cmp
add
cmp
test
loop
jp
jl
gs
jg
inc
into
xchg
ret
cs
jl
mov
mov
in
pop
test
sub
mov
jae
jns
pop
mov
mov
adc
add
mov
xor
pop
add
fucom
sbb
pop
push
ja
stos
ret
out
cmp
lock
cmpl
dec
movsl
popa
push
mov
sbb
int3
adc
das
pop
push
adc
mov
cmp
xor
decb
cld
add
mov
clc
mov
sbb
mov
sarb
cmp
mov
xchg
aas
xor
stc
xchg
mov
shrb
mov
mov
mov
jb
add
xchg
push
xchg
sahf
lods
sub
mov
xchg
cmp
or
jo
outsb
dec
fldenv
ret
xor
pusha
jo
int
repnz
add
aam
fldt
in
mov
mov
xor
or
pop
in
mov
mov
ljmp
push
fldenv
lds
test
cmpb
aad
or
scas
mov
cwtl
or
mov
pop
mov
lods
in
js
xchg
mov
push
pop
inc
pop
mov
fwait
sub
dec
cmp
stc
outsb
dec
xchg
fisttps
pop
adc
inc
jnp
lock
push
outsb
rcrl
fmul
mov
outsb
repz
push
in
in
mov
mov
cmpl
insl
repnz
enter
push
in
sub
pop
prefetch
or
push
iret
inc
lods
std
sbb
mov
outsl
mov
out
jnp
bnd
sbb
addb
add
aam
clc
fdivrl
lock
jne
mov
sbb
gs
xchg
sahf
lcall
lahf
pop
push
inc
aaa
push
cmp
lods
mov
inc
or
pusha
bound
rorl
and
inc
push
addr16
sahf
fwait
mov
mov
test
into
jmp
sub
inc
imul
dec
mov
sbb
out
sbb
add
hlt
aam
lods
or
push
push
mov
es
add
leave
outsl
jae
cs
inc
and
mov
jbe
sbb
pop
aad
or
fisttpll
jae
jns
nop
aam
or
or
mov
mov
rcrb
cmp
cmp
mov
sarb
xchg
aaa
out
dec
lods
sbb
push
mov
dec
sub
mov
jecxz
orb
or
push
fcmovnbe
in
xor
fisttpl
inc
jle
dec
mov
add
pushf
jb
loopne
sbb
adc
cli
xchg
fmul
or
stos
lock
sub
in
lahf
out
xchg
xadd
lods
repnz
movl
stos
mov
out
pusha
inc
xchg
lret
cld
lahf
test
mov
sbb
sbb
cmp
ficompl
sbb
xor
movsl
int3
sub
dec
aaa
push
dec
and
push
loop
cmp
data16
out
mov
ret
sub
xor
orl
lock
les
push
mov
cmp
add
in
dec
mov
adc
clc
dec
wbinvd
ds
repnz
cwtl
add
push
xchg
mov
nop
outsl
mov
inc
cwtl
mov
pop
inc
adc
lea
or
lds
lret
in
lds
outsb
lret
xchg
in
fwait
xchg
inc
loopne
in
xchg
pop
int3
nop
mul
movsl
sub
mov
sub
outsb
fadd
xor
pushf
test
nop
sub
push
js
out
std
sti
cmp
pop
std
xchg
pushf
cmp
cmp
decl
leave
int
xor
mov
xchg
rcrb
cmp
pop
mov
movsb
dec
and
addr16
xchg
xchg
jb
mov
shll
jecxz
bnd
cmpb
jl
lahf
sub
lods
adc
dec
into
int
popf
fstp
pop
sub
pop
xor
add
xor
pop
cmp
inc
and
test
mov
pop
scas
push
loope
shrl
ret
add
dec
mov
mov
nop
out
sahf
pop
out
or
decb
xor
adc
stos
lret
push
icebp
arpl
jmp
xchg
xchg
mov
scas
push
imul
sub
test
scas
xchg
pop
aad
leave
out
push
mov
mov
mov
cmp
sar
movsb
jge
cmp
cmpsb
mov
sbb
les
icebp
cli
cmp
or
mov
mov
lods
stc
dec
xor
push
sub
lret
fists
mov
neg
jne
and
ljmp
insl
aas
sahf
mov
out
fisttpll
stos
add
mov
cmp
sbb
arpl
xor
cmc
xchg
pop
cmp
push
jae
sub
inc
daa
fiaddl
sub
xor
adc
pop
pop
lods
cmp
loope
stos
cmp
rcr
fmulp
cmpsb
push
and
mov
aam
pop
adcl
in
xor
outsl
ret
xlat
test
fyl2xp1
mov
lret
xlat
stos
gs
and
inc
mov
mov
push
movsb
inc
jmp
stos
inc
movsb
gs
ljmp
jge
clc
leave
sbb
jl
out
repnz
into
adc
push
mov
fisubrs
hlt
les
incb
mov
ss
xor
cmc
lret
jecxz
adc
sbb
insb
inc
lds
add
addr16
mov
push
push
push
in
mov
pop
cmp
sub
sbb
int
add
sbb
xor
xchg
adc
adc
inc
jne
scas
sbb
jg
push
or
add
sub
mov
sbb
fwait
lret
dec
sahf
lahf
dec
loop
sub
repz
adc
fidivl
sub
fdivs
add
mov
xor
out
rclb
jge
adcl
addr16
jns
mov
out
fisttpl
jno
arpl
pop
scas
test
add
pushf
cld
pop
sub
and
mov
lods
mov
in
mov
push
dec
mov
ret
or
movsl
mov
cmp
jle
add
inc
loope
icebp
jg
inc
pop
sub
jecxz
push
xor
outsb
out
test
les
cmpl
pop
lcall
and
pop
mov
xchg
rclb
pop
lock
mov
mov
fmul
pop
aad
inc
ja
iret
push
data16
movsb
or
xchg
jecxz
out
push
xor
cmp
or
inc
sbb
mov
pop
cmp
enter
pushf
hlt
push
divb
dec
call
push
stos
shrl
mov
shld
mov
xor
test
inc
imul
inc
xchg
inc
ficoml
aaa
adc
aad
mov
mov
and
pop
adcb
icebp
jmp
mov
rol
and
lahf
insl
mov
sbbb
lahf
lcall
jo
inc
xchg
movsb
iret
dec
icebp
inc
push
cltd
clc
jnp
ja
cs
mov
push
and
mov
mov
fmul
test
in
sbb
cld
cmpsl
xlat
out
push
xor
inc
and
aas
cmp
or
data16
push
mov
xor
pop
inc
add
dec
mov
imul
push
and
sub
push
lods
les
jnp
out
jo
ss
jmp
jle
aas
jmp
enter
mov
int3
scas
mov
push
xor
mov
fisubrl
pushl
insl
into
and
hlt
mov
pop
movsb
aad
and
and
scas
add
les
push
add
cmp
adc
outsb
xchg
sub
ja
or
out
pop
test
sub
stos
test
repz
pop
sbb
cld
movsb
jne
push
aam
aaa
js
lcall
in
or
fsubrp
add
sub
or
mov
testb
adc
fisttpll
sub
pushf
add
add
push
mov
or
cmp
sbb
cmp
push
mov
xchg
adc
jmp
insl
out
dec
jmp
fiadds
rcr
pop
push
push
add
jnp
movsb
push
loope
or
push
in
stos
add
test
xor
aad
pop
lret
pop
sbb
adcb
add
lods
stc
icebp
inc
or
fistpl
push
or
push
mov
outsl
ss
ret
daa
inc
das
call
ret
or
cs
push
repnz
dec
and
loop
leave
xchg
repnz
in
xchg
xor
fwait
and
push
pop
cmp
mov
sarb
fistl
adc
jle
sub
inc
fiadds
dec
xor
cltd
sti
fbstp
int3
out
dec
cmp
mov
and
mov
fldcw
in
rolb
xchg
nop
jg
sti
fldt
mov
dec
jno
dec
sarb
add
jl
add
jmp
xchg
pop
stos
das
fst
cmp
pop
xor
js
push
jns
xor
push
in
mov
adc
imul
jmp
rorl
test
ljmp
dec
mov
xor
sti
adc
add
iret
pop
dec
pop
inc
insl
dec
pop
outsl
adc
adc
fbstp
repz
pop
xchg
or
pop
sub
test
fldenv
xor
sub
dec
icebp
fs
dec
into
into
data16
jle
push
sbb
bound
test
xor
lock
dec
ljmp
adc
adc
call
mov
mov
add
push
mov
pop
icebp
and
jne
inc
aaa
add
xchg
inc
lds
iret
add
sarb
jnp
in
add
add
fisubrs
aad
mov
sub
lcall
out
jmp
jmp
jb
popa
ds
ret
and
popf
inc
test
pop
mov
push
lds
je
repnz
pushf
in
ljmp
je
ds
fadd
add
lea
sub
xlat
inc
sti
add
popf
ja
scas
aam
inc
fldl
jo
push
pop
push
mov
mov
or
adc
test
jo
je
sub
inc
mov
int3
sub
bswap
add
inc
hlt
jae
or
pop
ljmp
sub
sbb
clc
jge
or
enter
and
cmpsl
mov
sub
xchg
cli
add
pop
imul
mov
jbe
dec
push
jno
icebp
mov
sub
sub
mov
push
sbb
dec
fmul
jmp
xlat
mov
sbb
sub
jge
dec
out
mov
imul
mov
mov
lds
add
arpl
in
in
cmp
dec
push
scas
mov
ljmp
sub
shrb
cs
outsb
pop
mov
or
cmpl
inc
mov
inc
or
rcr
popa
cld
jg
sub
pop
into
ret
push
dec
dec
in
cltd
ss
adc
push
clc
mov
sar
xchg
stos
ret
je
arpl
mov
inc
sbb
push
push
cmpb
aaa
adc
pop
jb
cmp
rclb
mov
loopne
dec
jo
shll
mov
or
pop
adc
inc
test
daa
push
movsl
mov
mov
sub
lods
out
jl
test
popa
jns
sti
xchg
mov
in
and
sbb
or
lahf
fidivrl
fmulp
pop
dec
jg
or
out
es
sub
aas
adc
in
xchg
pop
ret
call
dec
imul
jns
std
pop
push
xchg
or
mov
jl
push
inc
dec
cs
adcb
sub
jb
mov
test
add
sbb
test
insl
sub
push
js
jp
pop
adc
inc
and
pop
push
stos
jae
roll
fiadds
inc
dec
adc
sub
or
mov
movb
cmp
dec
jl
jle
dec
bound
xchg
or
icebp
rcll
jecxz
mov
xchg
mov
fcompl
notb
decl
pop
mov
fstpl
and
pop
cli
sub
lods
idivl
xchg
inc
pusha
icebp
jecxz
stos
and
mov
icebp
fldt
popf
cwtl
clc
add
mov
add
pop
jne
jge
loop
cmp
pop
xor
adc
das
inc
sbb
popf
call
daa
sub
lret
frstors
jge
jl
mov
pop
leave
sub
mov
xchg
leave
pusha
mov
fbstp
xchg
xchg
cmp
sub
jb
clc
das
xor
imul
fwait
clc
lods
cmpsb
fcoml
lret
push
mov
xor
sub
movsl
cld
lahf
out
loop
mov
cld
push
add
lds
popa
fmuls
out
cmpsb
add
enter
out
pop
out
lret
movl
push
adc
push
xchg
and
addr16
jae
fldl
popa
int
out
outsb
or
je
push
adc
mov
ljmp
or
pop
add
adc
sbb
mov
aaa
or
and
out
pop
int3
cmp
sbb
lods
inc
xchg
repnz
in
into
test
inc
popa
fldenv
in
out
push
aad
outsb
jecxz
or
dec
sub
push
push
mov
popa
sub
and
cld
mov
push
push
jb
clc
push
dec
mov
mov
test
shll
push
mov
xchg
mov
pop
cmp
push
repz
jl
adc
xchg
mov
fadd
jne
insl
pop
cmpsl
arpl
popa
testb
sub
xchg
sahf
lcall
imul
out
xor
mov
adc
lods
inc
inc
jmp
call
adc
cmpsl
cmpsl
stos
pop
clc
and
sbb
cmpb
popa
repz
push
push
les
in
pop
sbb
and
cld
add
lret
xchg
lret
dec
out
stos
in
lret
jp
xor
and
out
lahf
jmp
stc
int
clc
sub
and
mov
push
pop
lcall
nop
scas
dec
cmpb
cmc
push
daa
scas
pop
or
pop
pop
int3
inc
pop
cs
fisttpl
shll
scas
or
xor
sbb
or
mov
fidivrs
sbb
pushf
add
sbb
xchg
sub
popf
inc
xor
mov
cmp
movsl
mov
mov
dec
push
mov
pop
in
sub
jmp
or
aas
lahf
pop
ljmp
or
add
out
enter
dec
push
fistpl
clc
movsl
dec
dec
mov
mov
rclb
packuswb
xor
or
pop
ret
insl
fcomps
fsubrs
xchg
loope
pop
pop
cltd
outsb
dec
inc
inc
push
inc
inc
cmp
xor
mov
adc
mov
mov
popf
adc
pop
mov
xorl
xchg
rcrl
frstor
ja
out
in
jbe
sbb
sub
aam
out
stos
lds
mov
cmp
jg
fidivl
mov
into
cs
sub
cs
ja
aam
lods
out
sbb
insl
cmpsl
aam
inc
stos
adc
mov
ficoml
jne
xchg
jmp
push
or
pusha
jne
rclb
mov
mov
loope
cmpsb
popa
test
bound
les
mov
mov
fnstenv
inc
outsb
mov
outsl
add
lahf
mov
adc
mov
push
pop
fiadds
dec
sbb
cmp
cli
out
andb
mov
push
les
cmc
out
xor
push
loope
xor
fnstenv
outsb
mov
rcll
js
dec
lret
jnp
out
push
jge
mov
pop
popf
inc
mov
test
dec
mov
xor
cmp
pop
out
in
push
inc
cmp
dec
test
outsb
fdivl
nop
lret
cs
lret
fnsave
ja
pop
push
mov
inc
pusha
mov
hlt
dec
inc
stc
jmp
sub
lock
jle
in
adc
stc
ss
adc
jbe
pop
xchg
push
cmc
adc
xchg
push
fldt
insl
push
cmpl
mov
data16
xchg
imul
test
rcll
xor
fsubrs
je
dec
ret
jg
dec
or
cmp
notl
cmp
test
test
test
repz
xor
sub
pop
ds
arpl
jnp
negl
leave
dec
inc
xor
fbld
outsl
adc
fists
jg
cmp
cmp
jg
loop
inc
sub
adc
imul
sub
fs
mov
in
push
dec
or
stos
nop
push
lretw
clc
mov
adc
js
jp
xchg
xor
aad
mov
cmp
out
inc
in
inc
adcl
xor
cmp
cli
dec
push
mov
cs
mov
lahf
popf
lock
int
rcrb
popf
mov
repz
out
jge
or
xor
into
mov
adc
ljmp
jg
push
mov
or
ja
cs
and
or
in
out
test
data16
or
inc
lcall
jl
in
imul
and
sub
subb
xchg
mov
mov
cmp
cmpsl
testb
push
inc
leave
out
push
insb
int3
mov
mov
xchg
mov
in
insb
ljmp
ret
adc
adc
xchg
cwtl
cmp
or
call
inc
addr16
pop
xchg
pusha
sub
mov
pop
test
cltd
fcmovu
sbb
mov
test
and
cmp
sub
mov
ds
xchg
xor
fwait
imull
scas
lcall
inc
cwtl
add
or
int3
or
push
push
in
jo
movb
inc
mov
in
scas
or
std
sub
lcall
inc
outsb
cmp
jg
es
mov
xor
ja
and
pop
add
ljmp
sbb
mov
push
lock
xchg
pop
stos
icebp
cwtl
pop
sbb
test
add
and
neg
pusha
dec
sub
or
stos
scas
out
push
mov
xchg
dec
pop
cmpsl
pop
jbe
push
xchg
jae
add
inc
push
xchg
pop
jae
js
popa
cmpsb
andb
cmc
aam
dec
inc
push
push
fwait
mov
lea
fwait
imul
pop
or
xor
jnp
cmp
mov
xor
fwait
dec
push
in
dec
mov
xchg
outsb
into
leave
lret
addr16
and
cmp
pop
cmp
cld
xchg
sti
adc
pusha
inc
pop
insl
jg
imul
mov
nop
inc
push
pop
mov
mov
cmpl
repnz
mov
cmp
dec
iret
xor
sbb
ret
lock
ret
arpl
jbe
cmp
push
lock
std
push
cwtl
and
inc
push
and
adc
es
push
into
mov
lret
call
jns
mov
pop
jg
cmp
or
bound
pop
mov
stc
dec
push
rcl
roll
fwait
mov
sbb
push
int3
dec
std
sbb
out
cwtl
cwtl
pop
mov
std
mov
pop
js
sub
gs
xor
cmp
daa
mov
int3
cmp
xchg
adc
mov
mov
adc
in
and
aaa
imul
pop
jb
xor
jge
mov
jae
fcmovu
adc
imul
into
testl
push
je
lea
lods
les
lds
inc
xchg
pop
add
pushf
mov
int3
mov
jp
ljmp
sub
and
fwait
cwtl
cmp
and
push
mov
popf
jno
xor
inc
rcrb
rcl
cli
jl
ret
mov
xchg
fildl
pushf
push
iret
mov
mov
mov
aaa
shld
xor
ds
jbe
push
mov
adc
aaa
fcmove
cld
jp
jb
out
les
sub
jns
dec
mov
test
add
cld
pop
insl
mov
leave
cmpsl
jnp
aas
jge
bound
mov
lcall
out
cmp
test
shll
xchg
push
and
bound
push
es
orb
ljmp
iret
mov
cli
aas
arpl
sbb
sbb
xor
cltd
add
adc
aad
cmp
mov
call
cltd
pushf
pop
push
jnp
inc
loope
adc
inc
pop
push
jnp
fbld
leave
xchg
adc
push
insl
dec
std
jle
cmp
out
fincstp
or
and
mov
add
push
dec
mov
insb
icebp
sbb
fisttpl
jl
push
or
pushf
stos
pushf
or
xor
cmp
sahf
jle
stos
fistps
pop
cltd
ret
xchg
ret
ja
and
add
sbbb
mov
and
xor
pushf
jae
sbb
dec
testl
sti
push
bound
adc
pop
call
in
or
and
or
sbb
aas
insl
int
xchg
cmp
es
jmp
dec
or
jp
hlt
xchg
mov
je
in
sub
mov
dec
arpl
adc
je
std
mov
mov
dec
push
test
push
sbb
inc
aaa
add
rcr
ret
sbb
outsb
mov
ret
cmp
arpl
in
hlt
push
xchg
lock
sbb
adc
test
adc
test
insb
in
mov
push
fs
mov
xor
xchg
hlt
movsb
aas
cmpsb
push
fldenv
lahf
jmp
iret
xor
push
add
jle
cwtl
aaa
addb
pusha
out
xchg
je
adc
mov
sub
and
add
jb
jnp
inc
lea
aas
or
rorl
arpl
cmpsl
xor
inc
scas
jmp
mov
notb
push
inc
stc
mov
ficoms
pusha
mov
cli
fs
mov
push
lahf
mov
in
jmp
push
adc
mov
fmuls
inc
inc
sub
ret
add
rcrl
cltd
mov
ljmp
pushf
jle
jns
add
notl
popf
jecxz
xlat
push
test
sbb
xorb
jne
sub
aas
das
mov
mov
pop
push
cld
hlt
out
loope
push
notb
mov
mov
cmp
mov
and
test
sub
cmp
and
jle
cmp
push
inc
scas
adc
pop
and
fwait
adc
repnz
sbb
stc
fs
cmp
movl
jge
mov
rorl
xchg
xchg
sahf
inc
lock
sbb
fldt
pushf
mov
aas
cli
loop
hlt
repnz
arpl
test
dec
push
call
mov
in
mov
fst
loop
jae
int3
cmc
xor
jmp
inc
mov
enter
jg
rorb
test
movsb
dec
push
test
mov
jmp
fsubrl
and
xchg
push
cs
inc
test
add
xchg
mov
mov
xlat
cmp
and
adc
std
add
sbb
sub
aas
pop
xchg
xchg
and
sbb
lods
mov
add
mov
add
xlat
mov
push
ffree
add
aad
push
dec
or
cmp
scas
pop
fildll
lret
int3
push
aas
outsb
test
inc
push
mull
push
inc
pop
jo
loop
call
addb
lods
fdiv
or
iret
cmp
jle
adc
mov
mov
cmp
into
sbb
mov
aam
cmc
inc
scas
xchg
or
inc
xchg
mov
cmpsb
jecxz
xchg
xchg
xor
js
rcl
mov
jo
xchg
inc
mov
mov
jns
js
leave
jl
inc
sbb
jle
lods
sti
mov
xchg
ret
inc
or
add
dec
xchg
ret
addr16
idiv
pop
test
lds
fstps
mov
mov
push
imul
lret
aaa
sbb
sub
add
add
lods
xor
leave
pop
orl
dec
pop
push
repz
outsb
cwtl
push
aaa
mov
add
pop
fbstp
cmc
cmp
push
jmp
inc
movsb
adc
mov
cmp
popa
mov
popf
fdivrl
outsl
in
pop
das
push
push
jno
add
lahf
xchg
outsb
or
testb
mov
scas
ss
pop
sbb
flds
or
roll
imulb
cmp
testl
clc
ret
iret
mov
add
ja
outsb
xchg
mov
sbb
bnd
into
push
dec
xor
cmpb
sub
jns
mov
mov
jns
or
push
hlt
adc
int3
mov
or
cld
hlt
push
jne
sbb
fidivrl
sarb
inc
fildll
jne
repz
xchg
jge,pn
nop
int3
ret
enter
pop
pop
arpl
xchg
jnp
add
mov
sub
clc
inc
pop
and
popa
sbb
fcmovnb
pop
aaa
out
pop
insl
arpl
add
inc
fs
call
pop
std
inc
out
psrld
lods
xorb
adc
or
xor
xor
fsqrt
pushf
fcmovnbe
sti
sti
and
int3
movsb
pop
dec
push
movsl
add
fidivrs
lret
push
xchg
int
rclb
push
xchg
jns
mov
inc
cmc
pop
pop
shl
leave
add
ret
fs
ret
inc
mov
ja
je
add
stc
iret
push
ret
push
into
adc
pusha
mov
pusha
dec
fimull
nop
mov
jnp
jge
dec
jg
cmpsl
mov
pushf
dec
sub
insb
xchg
cmp
aas
mov
or
adcb
int
imul
movsl
dec
popa
push
jle
mov
aam
ret
cmc
pushf
mov
sub
or
insl
fidivrs
jecxz
mov
push
shlb
xor
xor
push
ss
pop
sti
clc
sub
orl
xlat
mov
or
sbb
lods
out
and
cs
rcrl
dec
push
mov
and
push
and
jmp
dec
xchg
mov
xchg
rolb
push
or
inc
xor
push
leave
mov
icebp
pop
xor
gs
lret
cmp
pop
cmp
idiv
sub
fdivrl
cmpsb
xor
cli
xchg
cmpsb
add
push
popa
pop
or
insl
xor
jb
dec
iret
stc
sahf
sub
cmp
fildl
mov
xor
jae
ficoml
iret
lret
lcall
outsl
dec
sti
aaa
ljmp
in
movsb
mov
test
ret
xlat
inc
mov
std
cmpsb
es
cmp
cmpsb
or
add
xor
out
cld
mov
push
pusha
dec
mov
test
scas
aas
adc
movsl
pusha
mov
push
xor
icebp
ret
cli
pop
aaa
test
jecxz
jg
es
pusha
sar
dec
hlt
dec
loop
xchg
inc
inc
xchg
cld
in
hlt
mov
in
mov
ss
fldenv
inc
cmp
jae
test
xor
dec
stos
add
cmp
mov
and
in
jge
aad
cmp
sub
and
mov
push
lcall
and
push
dec
and
sub
jp
fiadds
arpl
addb
cltd
adc
jp
roll
inc
mov
push
pusha
cmp
andl
out
lretw
or
out
jg
getsec
rolb
fsubr
cwtl
push
cltd
or
push
or
repz
fildll
inc
gs
out
sbb
fistpll
aam
xchg
jle
fcomp
mov
xchg
mov
xlat
icebp
mov
dec
mov
add
fs
or
dec
test
dec
add
dec
das
ds
and
rcll
or
mov
adc
mov
mov
ret
enter
jne
inc
stos
cld
rorb
xchg
push
xor
mov
dec
mov
jbe
mov
jge
pop
outsb
insl
nop
popa
sbb
adc
and
outsl
js
fldcw
mov
xchg
popf
into
loopne
and
xchg
fdivl
stos
sub
xchg
dec
inc
or
out
rclb
notl
data16
ret
push
cmp
sti
outsl
stc
push
cmp
xlat
in
hlt
iret
mov
pop
popf
xor
pop
subl
push
jecxz
pop
insb
loopne
pop
loope
xchg
sub
xchg
add
pop
aas
xchg
leave
stos
push
sub
lret
adc
xor
loop
cmpsb
lods
cmpsl
push
inc
inc
mov
xchg
xor
xlat
jns
popa
cmp
cmpsb
sub
jle
pop
xor
ja
sub
add
sbb
push
push
lods
loop
scas
pushf
imul
ret
lret
mov
es
cwtl
jnp
push
lahf
vmread
xor
fdivp
or
sbb
fsubrl
jmp
imul
push
inc
adc
test
sub
lret
pop
cmp
addr16
mov
add
out
rcrb
mov
mov
pop
lret
cs
pop
movsl
mov
inc
xchg
adc
into
dec
leave
cmc
sbb
and
mov
cltd
jno
pop
jecxz
ja
out
jns
or
lcall
add
in
cmp
mov
cwtl
loope
adc
lods
in
call
stos
or
push
je
inc
imul
dec
or
xchg
decl
imul
cmpsb
mov
pop
scas
mov
mov
sub
or
test
je
xchg
push
xchg
sbb
enter
sahf
fdivp
add
cltd
int3
push
outsl
mov
lods
mov
rorb
repz
out
sub
adc
pop
sub
sbb
les
sbb
pushf
cmp
test
int3
jo
and
mov
sahf
dec
sbb
inc
adc
cmpsl
repz
pop
xor
xchg
mov
notb
lock
outsb
pushf
push
out
test
cmp
ljmp
ds
mov
jo
add
jl
mov
jge
adcb
mov
lret
js
loop
pop
outsb
sub
test
inc
jne
sbb
pop
bound
in
xchg
ja
sub
outsl
enter
hlt
movsb
and
or
sub
dec
xor
lds
incb
push
dec
push
aaa
xor
cli
mov
inc
jo
and
enter
sbb
fcoms
inc
rcll
mov
rorl
dec
pop
xor
xchg
pop
ljmp
pop
cmp
xchg
lock
lcall
xchg
jg
cmp
mov
mov
pop
stos
push
xor
xchg
or
int3
pusha
xchg
pop
addr16
xor
cwtl
pop
test
mov
sub
xchg
fucomp
push
add
or
call
cld
xchg
xorl
or
dec
pop
add
out
iret
sbb
pushf
xor
pop
cwtl
movsb
xor
data16
bswap
loope
mov
inc
mov
mov
movsl
push
inc
test
test
inc
incl
enter
cmp
lcall
jns
mov
xor
xchg
sti
mov
sub
jb
pop
jecxz
fstpl
fstps
repz
insl
dec
jg
scas
leave
or
mov
jl
jecxz
mov
push
test
imul
in
out
cwtl
pop
sub
arpl
dec
cs
xor
xchg
int3
fsts
icebp
pushfw
sub
inc
cmp
jp
pop
cltd
stos
fdiv
add
adc
cmp
ret
cli
shlb
xor
mov
adcl
mov
mov
jmp
push
popa
sub
mov
mov
adcb
lods
es
and
mov
idiv
jnp
add
cmp
ret
cmp
rcrb
lock
test
jo
xorl
inc
adc
or
jnp
pop
jae
mov
mov
jmp
mov
lea
or
inc
add
mov
and
rcll
jle
mov
ljmp
aam
jo
jne
xor
out
add
pushf
adc
xchg
push
les
aaa
jnp
cli
mov
enter
stc
insb
xor
jecxz
aas
or
mov
out
cmc
xor
inc
fmuls
xor
push
xchg
mov
xchg
ljmp
pop
stos
pop
xchg
pop
dec
cmp
lahf
dec
mov
not
stos
repnz
mov
and
fidivs
test
int
std
cmpsb
out
sbb
lods
adc
add
stos
fisttps
scas
out
into
cmp
inc
int
pop
ss
jne
pop
push
push
mov
stos
xor
aam
cltd
push
insl
add
pop
mov
es
jno
stc
adc
iret
mov
daa
loopne
inc
sar
add
inc
ds
adc
lcall
dec
loopne
int
mov
ret
addb
out
cmp
repnz
adc
inc
dec
je
in
neg
enter
jb
xor
mov
mov
aaa
xor
dec
insl
out
bndldx
std
inc
lds
cmp
bound
loope
cmp
subb
mov
adcl
mov
in
sqrtps
jp
ret
or
mov
shl
mov
popf
adc
push
push
cmp
pop
mov
mov
jle
sub
stos
pop
das
sbb
out
jg
out
movsb
and
adc
add
sub
add
cwtl
pop
jbe
fcomps
pushf
add
lods
xchg
leave
or
sub
inc
rclb
icebp
add
add
xchg
dec
sub
jbe
sub
push
jnp
inc
loope
ret
add
jge
add
adc
je
jmp
stos
xor
mov
jmp
xchg
adc
add
cmpsb
cld
pop
js
adc
jne
mov
bound
xchg
mov
add
sub
pop
jecxz
fs
fsubl
cmp
jbe
int
fstl
jmp
sbb
pusha
jg
xchg
arpl
xor
cltd
pop
mov
or
dec
jg
ljmp
mov
add
jle
xchg
testb
xchg
je
sti
jno
mov
hlt
mov
cmp
test
daa
inc
mov
in
cld
cmp
hlt
xchg
jge
in
mov
xor
mov
clc
fbld
cltd
push
sub
repz
inc
outsl
push
inc
cli
mov
cld
stc
jbe
add
xchg
in
mov
jmp
lahf
cmpsl
leave
and
movsb
add
cmpsb
test
sbb
pop
mov
fmuls
mov
gs
add
scas
outsb
mov
push
adc
add
jns
cmp
rorl
clc
jl
negl
orl
xchg
clc
or
jle
js
mov
lds
sbb
dec
and
mov
test
sbb
xchg
jecxz
imul
xor
test
lods
jmp
cmp
fcompl
in
addr16
xchg
or
ja
lret
andb
and
insl
add
in
std
bound
cmp
pop
shll
stos
aaa
arpl
add
movl
test
cmc
jne
sti
cmpb
es
lds
mov
jecxz
push
int
ret
adcb
into
leave
sub
les
hlt
mov
jbe
aas
sbb
cs
push
push
je
sbb
xchg
or
insb
jl
cmpsl
cmp
into
mov
push
rcrl
or
mov
xor
lods
sahf
cmpsl
ror
cmpsl
mov
mov
pusha
hlt
cld
sets
fstps
dec
mov
aad
das
inc
jo
mov
sub
sbb
les
mov
scas
in
or
mov
jle
adc
cld
fstpl
pop
add
mov
movsl
xchg
leave
cltd
insb
fcomps
shlb
jge
or
fdivs
push
add
inc
and
stos
std
addl
les
jle
test
xlat
std
enter
push
add
jns
adc
sbb
in
and
pop
out
flds
test
xchg
mov
out
fistpll
sub
ss
test
sahf
rclb
and
scas
fucomp
out
in
sti
mov
mov
nop
loopne
ss
xchg
dec
js
push
nop
aam
sub
mov
ror
scas
jno
insl
push
jp
repnz
in
xlat
les
fnsetpm(287
adc
hlt
push
xchg
cmc
jl
mov
jg
lcall
stos
xchg
push
push
ret
daa
sub
fcomps
dec
xchg
xor
add
adc
testb
push
sbbb
in
push
int
adc
popa
shlb
sbb
mov
pushf
testl
out
adc
and
xor
addb
adc
cmpsb
loope
aad
fmull
aaa
jecxz
jecxz
xor
iret
testb
ss
mov
outsl
and
adc
add
and
add
mov
push
std
jp
xchg
pop
sbb
sbb
addr16
sub
stc
push
fistpll
test
std
or
xor
icebp
pop
adc
mov
insb
pop
test
xor
or
inc
lcall
or
scas
sbb
dec
movsb
arpl
mov
push
es
cmpsb
cli
out
adc
out
and
ljmp
imul
mov
jl
enter
xchg
neg
mov
mov
int
and
and
and
lret
jecxz
sub
adc
and
sbb
call
fwait
jae
dec
ret
popl
sbb
imul
mov
pop
push
pushf
ret
dec
mov
cli
popa
mov
cmp
dec
pop
call
popf
dec
push
icebp
pop
cmp
jmp
cltd
inc
xorb
iret
loopne
mov
sbb
sbb
outsb
or
lret
xor
mov
jp
mov
ljmp
es
mov
repz
jp
mov
js
xor
scas
sbb
lds
and
in
and
inc
fistps
and
icebp
clc
ret
sbb
sub
insl
mov
and
shrb
pop
jg
iret
cmp
add
daa
mov
iret
cmpsb
js
mov
or
fs
dec
mov
mov
and
pop
jmp
mov
enter
std
test
dec
ret
je
pop
jo
popl
aaa
aam
clc
jne
pop
scas
sbb
imul
push
add
adc
rcll
push
cmp
cmp
test
bound
sbb
xor
repnz
sub
mov
popf
jnp,pn
mov
fidivs
stos
xor
and
inc
jne
not
jnp
dec
mov
and
mov
lret
out
pusha
xchg
std
mov
xor
orl
aaa
inc
cmc
adc
call
and
testb
loope
xchg
xor
push
mov
outsb
imul
sub
ljmp
sbbb
jecxz
adc
mov
bound
adc
xchg
or
cs
les
adc
lock
mov
cltd
lret
mov
sbb
dec
and
jmp
mov
cmp
idivl
in
fcmovu
pushf
sub
ret
lea
popa
pushf
ret
subb
mov
in
dec
leave
push
out
shll
push
out
rcrl
int3
add
cmp
adc
das
xchg
and
push
je
dec
cmp
jno
fsubrl
or
sub
inc
push
and
inc
mov
xchg
stc
testb
add
pop
xchg
jo
xlat
cmpl
dec
mov
lret
sub
pushf
arpl
mov
outsb
mov
inc
test
in
dec
jns
jbe
mov
out
jb
xchg
xorb
xor
push
fildll
push
js
sbb
test
dec
jae
mov
or
push
xor
shll
push
pop
insl
scas
jnp
mov
mov
pop
in
out
test
fs
pop
adc
mov
and
es
scas
js
cmp
lods
xor
movsb
cmp
pop
cmpsl
pusha
sub
mov
stc
fwait
dec
std
flds
push
sbb
fmuls
adc
push
pop
ja
sub
cmp
cld
fwait
sub
xor
inc
fs
mov
aas
xchg
sub
loop
add
outsb
jae
nop
push
ja
incl
mov
push
aas
fcoms
ficompl
xchg
mov
cmpsl
inc
sub
dec
jbe
push
movsl
pop
stos
imul
pop
sbb
push
test
bound
arpl
and
out
cmc
xor
test
scas
add
inc
jo
pop
pushf
or
fmulp
sbb
leave
out
scas
mov
mov
mov
cwtl
dec
mov
out
loop
and
ljmp
mov
xchg
shlb
es
and
push
jecxz
adc
popf
add
mov
mov
jnp
insl
lret
and
scas
pop
test
pop
pop
mov
or
mov
sub
and
push
dec
pop
jnp
fcmove
mov
ret
push
sub
or
adc
clc
cmpb
gs
jg
insl
int
cmp
dec
std
enter
sub
fldl
xchg
add
xlat
movsb
aad
mov
pop
mov
adc
mov
add
mov
lods
sub
mov
in
adc
adc
nop
push
es
xor
dec
dec
clc
inc
outsl
push
mov
cmpsl
in
popl
xchg
xlat
mov
fisubrs
out
int3
xchg
inc
cmp
push
divb
cmp
inc
mov
sub
int
je
les
add
aaa
pop
fcoms
mov
or
cli
data16
lcall
mov
shll
in
insl
cmp
xlat
xchg
ds
popf
sub
mov
and
imul
xchg
cmp
in
xlat
sub
mov
dec
lret
pop
mov
xor
jbe
push
jge
not
xor
xor
xlat
js
jecxz
xlat
into
in
push
mov
or
inc
fildl
mov
push
std
mov
dec
insb
icebp
dec
jecxz
loope
icebp
mov
push
or
fimull
pop
jl
push
lcall
adc
mov
cwtl
scas
add
fstps
sbb
jbe
dec
sub
arpl
test
adc
jg
mov
filds
nop
arpl
stos
pop
jno
sub
mov
cmp
xchg
xchg
lods
pop
rcrl
stos
aas
mov
push
out
cmp
aam
sbb
xchg
shl
jle
cli
scas
sbb
lea
add
scas
cmp
sbb
cmpsl
jbe
fldenv
dec
adc
push
pop
mov
std
data16
into
xorb
lahf
sub
fcmovb
repz
je
or
cmpsl
inc
jne
xor
push
dec
hlt
cmp
mov
je
or
xchg
js
and
sub
add
push
mov
ret
mov
jb
cmp
or
dec
jae
pop
mov
into
ret
int
mov
es
mov
or
in
gs
mov
insl
pop
push
mov
and
hlt
aad
jbe
mov
ret
inc
push
xchg
jne
push
into
addl
pop
cmpb
inc
or
test
fsubl
lds
push
sub
test
fldl
adc
outsb
pop
fsubs
pop
cltd
sub
fwait
xor
mov
js
int
das
or
mov
xchg
push
dec
pop
push
fcmovu
negl
scas
fsubr
das
inc
gs
sub
out
mov
fwait
cs
lods
ljmp
addr16
cmp
lahf
pop
mov
push
xchg
lods
mov
in
xchg
jbe
sub
mov
pop
adc
in
test
imul
shlb
mov
imul
das
xchg
xor
ljmp
cmpsb
popf
push
xlat
mov
pop
mov
je
or
jp
repz
jecxz
call
adc
idivl
xor
mov
mov
pop
sub
mov
mov
out
add
sub
gs
je
movl
mov
jmp
pop
je
mov
jbe
xchg
lods
movl
push
fdivrs
andb
dec
fwait
idivb
notl
jne
out
insb
and
sbb
iret
cmp
in
xor
xor
js
xor
adcl
fildll
les
cmc
addr16
rorl
mov
cmp
std
loopne
out
lock
loop
and
dec
test
or
dec
mov
cmpsb
les
lret
out
fwait
ljmp
ficomps
aad
mov
dec
stos
xchg
pop
inc
adc
mov
sbb
push
jae
and
push
sub
sub
or
popaw
imul
xlat
sbb
xor
jmp
xchg
hlt
pop
addb
mov
sahf
popa
mov
es
divb
sub
mov
and
pop
fsubrl
mov
pop
adc
cmp
call
fisttpl
sbb
cltd
adc
in
mov
int3
jp
cmpb
push
enter
out
test
inc
cwtl
rorl
fisubs
aad
or
xor
inc
outsb
sub
adc
fiaddl
out
lret
cmp
or
mov
mov
mov
test
pop
mov
lock
fsubs
mov
pop
dec
pop
inc
stc
sub
adc
pop
fistpll
fcmovne
sub
cmp
add
dec
pop
lods
js
daa
push
pushf
lret
sbb
imul
sub
sbbl
mov
add
xor
call
adc
nop
jb
inc
mov
jle
jns
and
sbb
sub
dec
lret
sub
arpl
xor
jle
push
pop
adc
jmp
subl
push
ret
leave
mov
xchg
inc
ret
imul
insl
sbb
shrb
inc
movsb
out
je
xor
inc
and
dec
push
mov
popf
adc
inc
jb
addl
mov
daa
outsb
pop
mul
test
xor
xlat
aaa
orb
inc
mov
outsb
fsubl
cmc
xor
sub
mov
call
aad
cld
ror
fisubrs
popf
sbb
in
imul
push
jg
bound
mul
dec
insb
adc
mov
das
out
ficoms
fwait
pusha
dec
inc
lret
xor
mov
jl
mov
adc
xchg
pop
pop
enter
adc
clc
push
mov
arpl
mov
sub
mov
pop
sbb
lods
cs
fcmovnb
xchg
inc
xlat
test
sbb
out
pmulhuw
xorl
push
xchg
jmp
and
xor
movsl
and
lea
xor
dec
mov
stos
shlb
mov
xchg
pop
xor
inc
lods
fcoms
mov
movsb
sub
jp
mov
add
cmpsl
add
es
jecxz
sub
es
push
xchg
inc
adc
ret
push
jmp
add
and
mov
lea
or
ss
jae
movsb
stc
arpl
xchg
aaa
mov
pop
lcall
or
outsl
mov
cmpsl
mov
roll
and
out
dec
mov
push
loop
inc
dec
dec
adc
inc
ret
lods
mov
mov
sub
fstps
loopne
sub
lods
xor
pop
mov
fucompp
mov
mov
mov
data16
stos
test
push
daa
mov
xchg
movsb
addr16
adc
std
sub
dec
aam
inc
pop
out
fsubl
mov
mov
inc
daa
rcr
call
mov
mov
dec
pop
xor
pop
add
push
inc
mov
jnp
sbbb
mov
test
push
ja
mov
mov
push
js
pusha
ljmp
mov
push
scas
pop
sbb
lds
cld
add
ljmp
mov
cmc
daa
outsb
mov
inc
cmpsl
pop
or
shrd
lock
sub
pushf
xor
lret
or
push
lret
mov
rorb
test
int
test
jl
jne
pusha
cli
pop
subl
fwait
call
mov
sub
rolb
mov
out
mov
mov
mov
cmpsb
dec
inc
pushf
lods
jecxz
mov
xor
inc
dec
call
out
jae
pop
popa
push
out
movsl
popa
call
insb
movsl
popf
xor
popa
jle
loopne
int
fists
dec
mov
out
mov
jne
pop
cwtl
mov
mov
mov
sbb
jns
or
out
mov
dec
imul
iret
sbb
dec
push
int
notb
push
cmpsl
mov
loop
xor
pop
jge
cmp
pop
int
imull
movl
cmp
pop
dec
test
pop
inc
rorb
xor
test
pop
cld
fldl
xchg
jae
mov
pop
and
or
mov
daa
popa
xchg
jle
inc
dec
inc
js
popa
pop
iret
mov
xchg
sbb
test
and
les
mov
xchg
dec
ret
mov
add
repz
mov
daa
cmp
dec
mov
cmp
popa
push
xchg
lcall
addr16
loope
cli
sub
scas
icebp
arpl
stos
icebp
mov
inc
outsb
xchg
pusha
dec
sbb
add
rorb
push
leave
repz
mov
sti
and
or
jmp
cmp
dec
test
xchg
dec
enter
or
notb
mov
adc
push
and
movsb
pop
out
jmp
js
nop
sub
inc
imul
pop
test
mov
inc
pop
imul
jecxz
lods
adc
stos
mov
int3
pop
cmp
fiaddl
repnz
dec
push
xchg
pushf
inc
pop
negb
add
xlat
dec
movsl
repz
push
or
in
mov
or
pop
and
filds
mov
jmp
adc
sbb
and
cmp
mov
jbe
or
inc
ja
dec
sbb
movsl
fisttps
xchg
lds
mov
push
clc
popa
push
stc
push
mov
and
jmp
in
dec
pushf
xlat
and
fisttpll
lcall
mov
push
sbb
dec
mov
je
jmp
fwait
mov
push
mov
mov
out
sahf
test
cs
pop
scas
data16
adc
sarl
rcrb
mov
mov
lret
ja
mov
clc
andb
jbe
add
xchg
dec
cmp
movsl
aam
sbb
lret
stos
dec
sti
loop
adc
or
jb
cld
es
jp
mov
call
movsl
xchg
pop
xor
push
pop
push
adc
xor
enter
call
mov
add
ds
lret
cmpsl
fcomi
dec
into
test
xchg
das
arpl
mov
bound
pushf
test
lret
add
sbb
mov
enter
subl
int3
pop
jecxz
ljmp
xchg
jge
cs
xchg
jae
xchg
pop
imul
xor
mov
sub
nop
inc
ss
hlt
stos
mov
jmp
inc
pop
ds
cmc
pop
data16
leave
orl
outsb
xlat
lods
fs
mov
fs
pmulhuw
ja
cmp
mov
and
rcrl
xchg
iret
aas
test
push
and
pop
shlb
enter
fsubrl
negb
std
nop
adc
xor
mov
fiaddl
inc
xor
sub
xchg
test
pushf
loopne
sub
shll
or
pop
lods
jle
loopne
lods
iret
jne
testl
movsb
cli
push
mov
fiadds
idiv
mov
xor
sbb
pop
fdivp
push
scas
stos
pop
mov
popa
pushf
pop
jecxz
inc
test
pusha
imul
lahf
cli
mov
inc
call
in
fstpl
dec
dec
sahf
enter
xchg
repz
movsl
test
test
outsb
xchg
clc
mov
adcb
push
sbb
dec
push
outsb
jbe
xor
cmp
xlat
lds
add
je
jge
imul
loop
mov
and
aad
xchg
xor
repnz
mov
cmp
sub
add
pop
adc
add
and
rcrl
xchg
in
mov
pop
repz
sub
sub
lcall
scas
aam
add
xor
mov
mov
jbe
adc
inc
scas
mov
aaa
mov
andnps
cmp
cmpsb
cmp
jo
sbb
shrl
dec
adc
inc
stos
dec
pop
inc
mov
je
inc
mov
inc
fucom
jno
icebp
sbb
call
jb
into
in
fdivrl
subb
pop
add
sbb
fidivl
test
fisubrl
int
push
or
jle
int3
loopne
stc
xor
sbb
xor
test
in
and
in
xlat
jnp
push
mov
jo
mov
ljmp
fisttps
flds
int
mov
mov
hlt
int
dec
lods
jae
int
mov
cwtl
out
shrb
inc
dec
insb
xor
jp
ret
or
cs
hlt
loope
sub
and
mov
inc
adc
arpl
stos
pop
out
imul
mov
das
arpl
insl
fisttpll
pop
xchg
int
in
insb
loop
pushf
add
outsb
addr16
and
adc
out
adc
push
or
sub
scas
rcrl
stc
insb
aam
push
cmc
cmp
xor
xchg
xor
imul
adc
push
test
xchg
test
push
add
enter
mov
fdivr
push
push
and
subb
add
add
mov
adc
add
fwait
lods
push
sub
push
jne
iret
pop
sbb
xor
fnstsw
dec
inc
xorl
ss
lcall
and
nop
daa
fiadds
outsb
add
clc
fst
fldt
nop
push
movsb
mov
mov
sbb
jb
adc
repnz
sub
push
fwait
in
imul
ficoml
dec
out
and
inc
dec
dec
pop
or
aas
mov
bound
or
jl
jp
fdivs
int3
daa
push
lcall
sahf
jmp
push
not
call
sbb
cmp
pop
test
mov
push
cmp
xchg
mov
rorl
test
add
mov
inc
rcll
xlat
cltd
pusha
fnop
pop
mov
movsl
dec
jp
mov
cmpsb
out
sti
cmpsl
stos
test
shrl
rcrl
icebp
dec
scas
stos
pop
loope
push
sbb
mov
cmpsb
cmp
inc
movsl
scas
sub
fidivl
or
and
pop
ficoml
gs
out
ficomps
inc
ffreep
std
es
popl
jmp
or
and
mov
cmp
call
jmp
cmpsl
push
nop
pop
or
aaa
roll
outsb
cmp
push
out
clc
mov
jbe
cmp
mov
inc
je
lahf
xor
jb
and
cmp
sub
xor
sub
es
fcomps
jo
test
aam
pop
add
nop
sub
or
jg
sub
or
xchg
imul
mov
ss
mov
sub
movsl
jbe
and
inc
sub
out
stos
loope
popf
sub
sub
scas
in
inc
in
fisttps
jg
push
push
rorl
je
xchg
fnstcw
insb
mov
push
arpl
icebp
sti
aad
bound
dec
adc
push
stc
xchg
rcr
das
lret
sbb
mov
ret
xorb
push
pop
cmpsl
dec
mov
mov
adc
and
xor
inc
addr16
les
in
sbb
mov
push
incb
fs
xor
mov
push
movsl
xchg
dec
cli
fdivs
push
data16
repz
jmp
adc
mov
dec
es
cmp
dec
aaa
xchg
jne,pn
push
or
sbb
inc
and
clc
outsl
aaa
fsubr
add
ljmp
fcoml
jecxz
adc
rcr
int
scas
sub
pop
mov
jmp
in
push
int3
hlt
test
xchg
xor
push
mov
and
ljmp
out
arpl
lock
sub
add
insl
stos
enter
adc
aas
scas
bswap
jg
pop
xchg
sub
xor
jmp
outsb
shll
dec
faddl
cmp
xor
decb
lret
push
xchg
cld
and
cvtdq2ps
pusha
cs
fcomps
in
insb
cs
jbe
mov
mul
int3
jmp
mov
lret
cmp
lcall
mov
aas
fstpt
cmp
sub
xchg
inc
fwait
jb
mov
int3
das
pop
jl
sahf
cmpsb
rcrl
pushl
aaa
int3
jae
xchg
push
jmp
sarb
repnz
mov
dec
jp
subb
push
mov
std
mov
mov
sub
in
fimuls
icebp
daa
push
dec
or
jae
das
dec
pushf
aas
add
add
addr16
mov
ret
test
cwtl
or
inc
add
mov
lahf
adc
cmpsl
dec
cmp
xor
es
insl
fcmovnu
and
sub
es
mov
add
cwtl
add
in
test
sbb
jbe
adc
cmp
sub
sti
mov
int
fistpl
cmpsb
and
cmp
lret
ret
incl
rorl
ret
fcmovbe
cs
sub
cmp
dec
lods
sub
xor
inc
js
popf
scas
lods
sbb
stc
fidivrs
sbb
pop
inc
adc
std
mov
ja
ss
cmpb
jne
push
imul
aad
dec
pop
mov
mov
rolb
cmpsb
dec
js
loopne
jns
push
pop
incb
add
hlt
cwtl
or
das
pop
xor
shll
mov
jmp
test
lret
arpl
or
add
push
inc
stos
inc
scas
mull
stc
sub
sbb
jne
loopne
adc
dec
xchg
lock
cwtl
lds
adc
stc
aaa
xlat
lea
je
push
data16
mov
mov
xor
mov
push
xchg
repz
cmp
mov
or
sarb
data16
outsb
pop
mov
outsb
imul
cmp
pop
outsl
in
repnz
je
pushf
and
out
mov
jbe
fnstcw
insl
je
jno
xchg
adc
shrl
imul
xchg
stos
les
jne
mov
repnz
xchg
dec
dec
mov
dec
mov
jnp
fs
and
cmp
sub
test
pop
cmpb
add
imul
add
adc
cmpb
movl
xor
aam
stc
sahf
jg
aaa
bound
pushf
enter
fidivrs
jne
or
jl
pop
icebp
mov
into
test
mov
fisubs
pop
dec
or
dec
test
out
xchg
ds
dec
adc
push
sahf
pop
xchg
mov
xor
and
cmpsb
pushl
lret
mov
gs
or
icebp
ficoms
xor
xchg
and
mov
pop
and
ds
push
imul
push
rcrl
add
scas
push
dec
cmp
adc
stc
es
cli
ja
lock
imul
rol
pop
xor
dec
add
mov
cld
add
mov
call
xchg
shrl
cmp
in
jno
dec
adc
in
mov
mov
pusha
mov
sbb
sahf
into
push
dec
pop
jne
pop
lcall
mov
xchg
sub
fcoml
push
adc
and
xor
ret
jae
fcos
loopne
jmp
call
pop
jbe
xor
idivl
pop
mov
hlt
mov
stc
mov
fdivr
add
pushf
ljmp
mov
or
and
jg
fbld
xor
cmp
dec
jge
dec
es
or
push
mov
inc
insb
inc
xorl
ret
test
sbb
push
rol
ljmp
es
leave
ljmp
es
scas
mov
mov
outsb
lret
stos
pushf
push
testl
and
lret
push
cs
cmpb
repnz
daa
sbb
movsl
inc
inc
xchg
inc
pushf
jp
aas
insb
push
xor
andb
or
sbb
sbb
add
mov
rcll
push
mov
orl
lret
xchg
call
pop
cmpsl
add
xchg
test
fwait
sub
and
and
cmp
push
or
out
les
mov
mov
sub
pop
enter
in
dec
ja
jp
es
jmp
sub
xor
inc
xor
cmc
add
xchg
pop
stos
loope
xor
adc
dec
lods
daa
into
mov
and
repnz
add
and
rclb
adc
dec
push
shr
xchg
sbb
jecxz
shlb
fdiv
or
jne
push
mov
sbb
fisubs
push
xlat
out
cld
shlb
push
rol
or
or
rcrl
fists
aam
mov
in
int
lds
xorl
movsb
sub
pop
cmpsl
or
jns
dec
adc
push
pop
add
sbb
lret
push
dec
dec
mov
mov
paddusb
aas
lods
adc
xchg
dec
jg
dec
jae
iret
cwtl
sbb
repz
xchg
adc
insl
pop
andl
cli
imul
jbe
jge
daa
mov
jg
push
addr16
mov
push
clc
aaa
sub
sahf
fstpt
cmpb
xor
add
cwtl
dec
mov
jne
bound
mov
mov
sub
imul
fildll
xor
mov
mov
push
mov
lcall
sbb
mov
xchg
add
xor
pop
adc
jle
push
jecxz
xor
mov
enter
push
mov
out
in
scas
cmpsb
in
mov
jb
and
fcmovnu
cmp
mov
push
int3
test
and
icebp
sarb
mov
nop
loope
fsubl
xchg
aaa
mov
cmp
cmp
aas
hlt
dec
cld
xchg
mov
inc
adc
cli
ljmp
movsb
jns
mov
mov
cs
cmpsl
adc
mov
or
inc
lods
movsl
mov
dec
fisttpll
je
divb
sbb
decb
inc
mov
movsl
mov
fdivrs
mov
mov
rclb
dec
dec
sbb
test
xchg
pop
or
dec
jns
or
mov
sub
jnp
in
lea
push
jle
push
push
loope
xor
inc
mov
xchg
xor
aad
adc
ss
mov
cmp
xchg
sbb
jae
cli
fnstcw
push
clc
aam
in
jmp
sbb
shrb
sarb
in
ds
push
xlat
test
mov
jo
inc
rorb
imul
mov
lods
sub
cli
cmp
out
sarb
insb
xchg
jns
dec
dec
imul
int3
sub
inc
mov
dec
fstpl
aaa
test
incl
push
pop
data16
scas
mov
sub
xor
fcomp
cmpsl
xchg
shlb
cmpsl
loope
jne
mov
dec
jp
dec
movsl
fiaddl
rorl
pop
push
xchg
shrb
mov
pop
inc
lret
mov
push
test
cmp
insb
fs
rclb
outsb
cmp
sub
adc
push
lret
xor
aas
ljmp
je
dec
cmpsl
xor
lret
or
inc
jmp
cli
cwtl
and
int3
test
xor
pop
mov
out
aad
pop
rcrb
inc
movsb
stos
ret
mov
inc
mov
xor
sub
daa
mov
je
cmpb
add
pmullw
rorb
mov
push
push
sahf
fdivrs
testl
into
xlat
push
faddl
mov
jg
dec
cmpsl
cmp
arpl
pop
in
jo
pusha
push
clc
cs
test
out
adc
sbb
push
aaa
sahf
inc
call
mov
into
int
je
testl
jmp
xlat
sarl
dec
and
hlt
and
xchg
in
js
mov
pop
sti
cmp
cmp
and
push
xlat
jecxz
lea
cwtl
add
in
notb
dec
mov
xchg
xorb
arpl
add
jnp
hlt
insb
pop
jp
lcall
loop
dec
int
sahf
jns
pop
mov
or
push
mov
cmp
das
rcrl
cmpsb
inc
push
clc
or
xor
std
jge
mov
mov
jle
inc
enter
icebp
gs
out
fwait
loop
mov
cmpsl
xchg
lods
cmp
leave
adc
popf
call
fs
add
jg
or
push
lds
cmpsb
xchg
cmp
and
xor
data16
psadbw
mov
notb
fdivrs
push
or
shll
les
pop
mov
ljmp
jl
lret
dec
add
lahf
dec
mov
xor
xlat
int
xor
pop
xlat
dec
inc
push
or
lcall
mov
fwait
std
add
add
loop
add
pushl
jmp
repnz
in
std
int
mov
xchg
push
fninit
adc
out
pop
cmp
ret
pusha
outsl
mov
sub
out
and
int
daa
shlb
rcll
pop
add
fdivrl
je
fsts
imul
pop
pop
call
jns
cmp
jae
jno
cld
mov
cmp
fnstcw
pop
xchg
sbb
ret
cmpsl
lahf
imul
push
daa
push
lcall
mov
pop
sub
and
or
fcomp
hlt
adcl
je
fcmovu
adc
mov
mov
sbb
push
sub
cmp
push
mov
stos
popa
xor
and
sbb
icebp
sbbl
outsl
push
lret
repnz
push
inc
loop
mov
fimull
mov
cmp
mov
lret
cmpsb
lret
in
imul
popa
or
mov
add
xor
into
pop
sbb
sbbl
cmp
mov
in
push
dec
pop
scas
xchg
add
call
mov
sbb
cmp
fists
xchg
fsub
mov
jp
mov
cmp
mov
jnp
xchg
push
lret
dec
stos
pop
lds
push
add
or
pop
hlt
mov
sbb
push
pop
cmp
jbe
push
lcall
hlt
shlb
sub
nop
or
sti
mov
enter
ret
icebp
add
cmpsb
jle
dec
insl
in
push
inc
ja
scas
ds
sbbl
bnd
dec
inc
push
inc
pop
jnp
push
mov
mov
dec
loopne
xchg
mov
pop
dec
sbb
pop
dec
lcall
out
clc
std
xchg
mov
pushf
and
push
iret
lods
dec
xlat
dec
jle
fs
pop
cld
pop
jmp
mov
hlt
and
push
nop
jl
xchg
push
andl
mov
push
cwtl
leave
inc
mov
jecxz
in
add
stos
and
push
push
cmp
push
fisttpll
mov
fwait
or
cmp
loop
xlat
xor
fs
popf
imul
mov
mov
cltd
mov
and
mov
shlb
mov
jmp
insb
cmpb
imul
sub
aaa
push
mov
sub
popa
nop
js
nop
cli
int3
adc
sti
jae
inc
mov
and
sub
fisttps
cltd
and
dec
pop
les
movsb
div
in
cmp
dec
xor
jge
cmpl
movsl
xchg
fs
sub
call
inc
addl
adc
xchg
mov
movsl
ds
adc
add
xor
outsb
inc
pop
lods
lods
loop
scas
or
test
enter
push
iret
and
bound
scas
push
push
mov
jle
popf
sbb
out
insl
xor
jmp
in
rclb
fsubl
lds
sub
mov
insb
xchg
xor
shlb
or
xchg
mov
cmp
ljmp
add
loopne
cmp
inc
jmp
push
jmp
or
dec
pop
cmpsl
mov
pop
push
pop
and
dec
mov
hlt
outsl
cmp
mov
enter
mov
int3
lret
ret
sbb
push
push
out
dec
or
fidivl
jl
sbb
push
scas
nop
into
movsb
cltd
jmp
sti
jo
mov
ljmp
int3
pop
nop
iret
out
dec
lret
xchg
mov
leave
sub
hlt
inc
jns
lret
scas
cli
out
jg
iret
rolb
mov
mov
adc
and
test
pop
or
data16
ret
cs
sbb
or
push
adc
xor
or
hlt
sbb
sbb
loopne
xor
pop
jb
or
shr
adc
call
and
pop
jge
inc
icebp
pop
addr16
cli
lret
lcall
lret
or
sbbb
xchg
scas
popa
jmp
xor
sub
hlt
in
insb
mov
dec
repnz
seto
dec
data16
push
jmp
addl
mov
mov
pop
push
fsubp
out
inc
pop
cmpsl
mov
stos
xchg
lea
test
sub
test
nop
ja
pop
leave
pop
push
dec
xchg
mov
dec
rcl
mov
pop
stos
enter
imul
adc
push
and
add
jne
xchg
fwait
icebp
inc
inc
xor
movsb
or
cmp
push
imul
jmp
addr16
dec
cs
mov
mov
clc
push
rcr
shlb
outsb
inc
aad
mov
xorl
cmp
xor
loope
jle
push
rorl
shll
lcall
lret
shl
fistps
out
mov
icebp
pusha
pushf
sti
sti
mov
dec
dec
mov
sbb
cmp
inc
cmp
clc
xchg
out
push
mov
cltd
fldcw
lahf
jae
or
mov
pop
push
or
shr
inc
lods
fdivp
adc
mov
push
stos
add
nop
imul
or
xchg
addr16
popf
in
ret
imul
dec
push
sub
lahf
lods
aaa
inc
or
fisttpll
xor
fwait
ds
sti
or
sti
jg
jno
fildl
inc
into
lea
jmp
fsubs
test
decb
and
mov
hlt
pop
add
adc
push
arpl
popf
fbstp
sti
adc
jecxz
xor
dec
adc
into
sqrtps
sti
out
mov
adc
lds
daa
inc
popf
mov
xchg
in
mov
sbb
jno
in
das
sbb
cmp
vcmpss
repnz
pop
pusha
jecxz
push
lea
pushl
movsl
push
inc
mov
stos
fwait
test
dec
test
mov
push
rol
js,pt
jg
scas
or
jno
mov
mov
aam
clc
dec
sub
jmp
inc
sub
mov
daa
stos
stos
jp
lock
js
mov
jl
sti
mov
insb
aaa
ret
shrl
dec
int
pop
pop
mov
test
jo
iret
nop
loope
cmp
inc
pop
sbb
pusha
fdecstp
pop
lret
sti
jb
rorl
repz
jae
mov
or
notl
push
pop
int3
ja
jl
fs
push
nop
call
xchg
pop
imul
ret
dec
sti
sub
jb
jl
ret
out
or
jbe,pt
xchg
popf
xchg
add
inc
sbb
loope
sbb
pop
xorb
push
iret
jg
pop
adc
or
push
jbe
jno
mov
adc
sbbl
loope
mov
mov
fisubrs
xchg
mov
ljmp
dec
sti
push
or
adc
into
es
xorl
pop
aas
mov
mov
inc
mulb
leave
mov
push
xchg
popa
das
cmp
sub
enter
sub
mov
push
js
pop
inc
jo
outsb
dec
shlb
scas
mov
jb
xchg
push
sar
mov
dec
mov
add
ja
rcrl
lds
out
mov
pop
xchg
lock
xor
lods
inc
dec
scas
es
movsl
lcall
test
rcll
test
arpl
inc
jbe
pushf
idivl
popf
push
scas
mov
fisubs
out
inc
sarb
loopne
add
mov
add
add
add
inc
test
cmpsb
test
push
rcrl
into
push
lock
shl
pop
in
jmp
jo
cmp
mov
das
xchg
mov
idivb
inc
aaa
and
xor
mov
fmuls
xchg
add
xor
push
orb
mov
mov
mov
out
das
clc
mov
add
mov
jns
repnz
cwtl
add
push
push
pop
pop
mov
xchg
imulb
js
sbbb
sub
push
mov
mov
lahf
push
jl
push
jbe
lcall
push
sarb
and
icebp
popf
call
inc
inc
or
sbb
xchg
push
scas
sar
lcall
cmp
fwait
pop
pop
sbb
ret
arpl
mov
cmp
adc
sub
add
je
cmc
loope
dec
jbe
xchg
and
ffreep
jl
xchg
add
lahf
cmpl
popa
jb
test
fwait
sub
inc
cmp
sub
leave
cmp
fimuls
daa
lea
cmp
jmp
bound
inc
lods
inc
and
stc
mov
outsl
pop
ljmp
inc
data16
aam
or
lahf
setnp
sub
cmp
add
xor
int
test
lods
aas
in
pop
out
shlb
sub
mulb
push
inc
pop
shlb
idivl
mov
out
std
insb
sti
lret
repz
aad
xchg
fcmovne
and
rcl
mov
inc
int
push
jp
addb
stc
mov
push
lahf
adc
and
xchg
and
pop
shl
aam
lods
imul
xlat
lahf
rorb
cwtl
and
movsb
mov
sub
dec
and
cmpsb
icebp
push
aaa
out
sub
call
sahf
pop
notl
xlat
subb
push
dec
or
js
inc
mov
call
jle
jl
dec
pop
mov
push
sub
loop
lea
xchg
xor
pushw
in
ret
loop
push
xchg
shlb
ret
lret
call
mov
mov
cmp
ss
lods
jle
dec
xchg
inc
cltd
lret
aas
out
movsl
flds
cli
test
pop
jae
into
pop
cs
data16
fsubrl
fistpl
inc
ljmp
out
and
sbb
push
insl
jo
es
out
mov
punpckldq
rolb
scas
stc
cmpsw
ss
int
or
scas
repnz
pop
dec
mov
fsubrl
clc
call
je
adc
xlat
icebp
lods
movsb
cmpsl
push
add
clc
jg
cmp
adc
or
or
push
and
xchg
mov
push
std
and
aaa
mov
lea
outsb
test
pop
jecxz
test
sbb
jno
ljmp
jne
jnp
aas
xchg
sub
out
jmp
stos
xor
rcl
psubb
xchg
sbb
inc
addr16
lea
mov
aas
jl
add
jmp
imul
movsb
and
mov
lret
nop
popf
sub
jbe
dec
xorb
jp
push
or
add
add
mov
adc
andb
xchg
insb
inc
int3
cmp
sbb
repnz
out
roll
inc
mov
jl
test
lret
adc
or
push
arpl
jmp
jns
adc
lods
mov
cltd
mov
adc
cmp
cld
lock
sti
inc
or
lea
push
mov
mov
xchg
movsb
and
pop
pop
xor
gs
mov
sub
jbe
lock
jb
or
inc
jmp
adc
sbb
jo
clc
mov
cltd
inc
out
mov
sub
fsts
mov
inc
inc
addl
add
cltd
cmp
push
xlat
cmp
inc
iret
pop
jb
icebp
sahf
pop
mov
out
test
lds
and
add
mov
pop
xchg
push
lods
ss
std
idivl
movsl
pop
push
or
movsb
xor
jbe
mov
ret
mov
push
inc
stos
cmp
addl
xorb
jns
jae
jns
in
pop
mov
and
jg
fnstsw
mov
lret
add
std
cmpsl
xchg
and
cs
inc
popf
aam
je
mov
in
sub
jl
mov
cltd
or
xorb
cwtl
add
cmpsb
test
ret
push
cld
popf
outsb
iret
xor
sbb
mov
push
cli
cmp
jnp
cmpl
xchg
inc
decb
push
xor
loop
inc
shl
jbe
jl
scas
xchg
sub
mov
pop
cmp
lret
push
xchg
mov
pop
call
pop
js
mov
in
xor
call
gs
and
cs
adc
push
sahf
and
mov
add
out
sub
hlt
into
jmp
ffreep
adc
xorl
and
aam
or
lahf
sahf
stos
int
cs
pop
push
cmp
mov
or
or
add
fdivp
mov
lcall
xchg
or
loop
lret
data16
sub
xchg
in
lahf
jg
lods
xchg
sbb
lds
insb
stc
out
loopne
xor
loope
es
test
daa
mov
adc
jno
mov
mov
dec
pop
data16
dec
jge
sub
fstpt
xchg
lret
cmp
in
iret
jb
push
sub
scas
add
inc
mov
and
inc
clc
inc
cltd
sbb
inc
cmpsl
or
sbb
movsb
lods
jge
aam
stos
popa
push
jns
mov
dec
add
sti
jo
pop
xchg
sbb
or
popf
repnz
sub
cld
pop
mov
jnp
push
or
mov
scas
sbb
stos
int3
mov
mov
js
stc
mov
lock
cmp
inc
enter
rorb
mov
mov
lods
ds
sub
pusha
mul
std
stos
push
fsubs
ret
push
dec
daa
cmp
aam
xor
or
cmc
in
repnz
and
adc
adc
dec
in
lcall
jg
mov
jns
mov
push
mov
stos
cmp
popf
push
cmpsl
test
push
mov
cmc
push
negl
push
jno
add
loop
adcb
push
jp
adc
jp
insb
pop
loopne
xor
loopne
sub
and
jl
pusha
or
pop
fbstp
mov
fidivrl
arpl
movsb
pop
push
cmp
stos
imul
or
inc
clc
insb
das
loope
or
push
pop
rcl
lds
xor
mov
sub
pusha
add
mov
rclb
lcall
xor
in
mov
push
shl
jae
mov
mov
cmp
pop
enter
or
leave
cmc
add
mov
sti
test
inc
cmc
dec
jae
fadds
sub
jo
jmp
dec
stc
fucomip
addr16
push
inc
mov
insl
sub
adc
adc
push
fs
xchg
mov
popa
mov
cmpsb
fcom
fs
push
adc
mov
sbb
xchg
lret
popa
lods
push
shlb
mov
cmp
dec
mov
push
jno
cli
ret
jno
jnp
inc
pop
js
cmpsl
fsubl
leave
xor
insb
dec
sub
adc
jp
sahf
ss
cmc
cwtl
test
jns
mov
addr16
lret
jmp
int
or
in
mov
popf
mov
out
inc
push
mov
sub
or
idivl
aaa
lea
jecxz
je
clc
and
push
fadds
push
pop
mov
pushf
incl
movsl
icebp
jl
pop
mov
xor
xor
imul
xor
sbb
leave
adc
jb
fdivrs
inc
repnz
fwait
outsb
push
cmc
jnp
aam
mov
mov
pop
clc
cltd
push
sub
fcomip
mov
jo
repnz
and
pop
and
xor
mov
push
addr16
or
leave
roll
jbe
hlt
leave
mov
dec
sbb
pushf
into
mov
test
rorl
pusha
rclb
jo
push
inc
imul
les
jge
mul
mov
sbb
and
push
mov
aam
loopne
fldln2
and
mov
mov
mov
xor
push
addr16
and
cld
jle
cmp
test
icebp
fiadds
repnz
mov
push
ja
les
xor
pop
rolb
lods
mov
mov
xchg
mov
stos
dec
dec
mov
mov
jne
icebp
clc
or
in
loop
dec
nop
pop
push
int
in
test
or
mov
jnp
add
fldt
daa
fsubl
xchg
inc
cs
addl
fildll
sar
adc
scas
mov
out
and
xchg
add
ret
loop
mov
stc
cmp
sbb
stos
divb
lods
repz
xchg
mov
cmpsl
hlt
hlt
xor
rolb
roll
adc
sbb
pop
pop
jnp
scas
push
idivl
dec
gs
repnz
lcall
arpl
push
shlb
dec
stos
imul
push
cwtl
add
mov
push
aaa
stos
sti
imul
add
jb
mov
inc
sub
mov
mov
xchg
cmpsb
or
xchg
sbb
lahf
sahf
jp
in
mov
lcall
pop
daa
push
xor
cwtl
pop
in
popa
aas
sbb
out
insl
xchg
pop
outsb
xchg
xchg
adc
dec
outsb
cmp
lret
in
push
push
cs
cmp
mov
je
sbb
mov
inc
lahf
fcoms
mov
jne
test
stc
std
mov
and
xchg
frstor
inc
jp
mov
stc
in
shrb
stos
or
xor
mov
cmovb
dec
ds
cmc
ret
jle
xchg
in
dec
jns
adcl
push
loope
movsb
fwait
jecxz
pop
add
loopne
int
aad
xchg
lods
or
cld
in
bound
aad
sti
mov
iret
jl
cs
test
pop
imul
cld
sbb
push
sub
daa
add
mov
jne
shrb
pop
mov
shrl
and
or
ret
scas
mov
adc
mov
or
and
cmc
and
mov
pop
mov
xor
xchg
rorb
and
aas
xor
xchg
call
inc
test
sbb
cmpsl
insb
mov
xor
adc
rcrb
add
push
push
push
rcrl
xchg
mov
xchg
aad
ret
repnz
stos
in
inc
sbb
scas
sbb
lret
shll
xchg
out
scas
jmp
imul
xchg
mov
addr16
push
gs
sub
loopne
push
gs
jno
gs
push
mov
xor
repz
stc
aad
int
sbb
jns
test
cmpsl
jb
pop
push
mov
pop
mov
mov
mov
stos
add
mov
lods
sbb
cmp
out
fucom
inc
scas
mov
and
lock
mov
test
loope
push
pusha
mov
scas
dec
xorl
add
push
cmp
cmc
jbe
pop
pop
jmp
outsl
jp
jmp
mov
add
rcrb
xor
mov
dec
or
lds
and
shr
mov
popf
dec
fstps
jp
negl
mov
push
inc
pushf
jg
add
stos
lcall
je
out
sbb
popa
popa
cmp
mov
push
stos
inc
jmp
sbb
loopne
lods
shrl
andl
add
rcrb
or
mov
pop
jnp
push
pop
notl
ret
fmulp
mov
mov
jp
movsl
cmp
pop
lods
sub
cmpsl
push
mov
fstpl
mov
jno
pop
mov
pop
cmp
and
cmp
adc
outsl
stc
notb
pop
inc
enter
sbb
jp
outsl
stos
push
dec
add
mov
lea
and
cmp
lods
mov
cmp
xchg
push
push
rolb
lock
pop
subl
cmp
subl
std
dec
xchg
mov
test
xlat
cld
rcrl
push
pop
testb
mov
mov
in
jae
fmull
xor
xchg
dec
mov
xor
int3
in
ds
out
loop
xchg
lods
mov
cmp
mov
mov
or
xor
scas
pop
xchg
aas
sbb
mov
dec
pop
mov
jbe
loop
rdpmc
movsb
arpl
mov
lcall
repz
cmp
sub
cmp
cmp
mov
sbb
push
sub
sarb
mov
sbb
sub
les
mov
mov
ss
add
pop
into
fdiv
mov
inc
movsb
sub
fsubrs
xlat
ljmp
outsb
add
scas
cltd
cmp
mov
lea
ffree
pushf
sti
and
or
into
es
into
pusha
xchg
add
sub
push
cmc
xor
shlb
int
or
jp
mov
adc
push
mov
xchg
jns
jno
es
rcll
hlt
xor
pop
and
mov
jbe
bound
pop
push
xlat
add
clc
test
nop
loop
mov
add
shl
imul
xchg
jle
cmp
in
mov
lds
ret
stos
pushf
mov
pop
adc
cld
cmpsb
fdivl
push
aas
xchg
add
mov
xchg
jae
scas
mov
stos
data16
adc
ret
push
imul
mov
jl
lock
dec
test
hlt
xlat
adc
gs
sub
out
ds
mov
shrd
fsubrl
cmp
push
inc
cli
ds
imul
cmp
in
mov
push
cs
clc
or
add
ret
pop
inc
fistpl
lock
mov
loopne
int3
les
icebp
scas
or
es
xor
jge
xchg
outsl
add
cmp
in
repnz
push
xchg
pop
fisttpll
es
jb
cmp
inc
ja
inc
lret
iret
push
fcomps
adc
xchg
jb
xlat
push
aad
sbbb
dec
mov
and
data16
es
cmp
sbb
adc
arpl
sarb
inc
or
flds
in
push
test
cmp
ja
in
cmp
sbb
popf
lret
jecxz
jle
dec
jp
dec
jmp
nop
sub
jb
aam
bound
mov
dec
jle
dec
push
fbld
mov
addl
dec
mov
xchg
and
mov
sub
or
push
icebp
das
inc
cmp
js
pop
sub
add
mov
fs
lock
cltd
addr16
mov
leave
mov
cmpsl
fstps
adc
sub
nop
adc
adc
fidivs
out
mov
pop
insb
lret
or
and
or
sbb
mov
adc
sbb
push
mov
movl
stc
xchg
dec
decl
imul
mov
pop
xor
aas
jb
add
pusha
inc
cwtl
loopne
das
fcmovnb
in
push
addr16
inc
dec
push
pop
out
sub
and
cli
mov
loopne
jbe
shl
lcall
cmp
cli
popf
dec
cmp
sub
push
push
mov
in
push
es
or
lea
xor
ss
xchg
inc
aaa
push
sbb
rcrl
pop
add
js
lret
or
inc
out
add
sub
jl
je
shrb
jg
stos
lcall
fcmovnb
lret
push
cmp
mov
rorl
test
lea
sbb
xchg
lea
imul
test
into
inc
pop
lcall
add
inc
out
push
mov
lock
shlb
mull
arpl
dec
sbb
orl
jecxz
bound
xchg
repz
adc
pop
in
movsl
dec
push
call
cmp
push
fsubrs
lcall
cmp
int
mov
jae
sti
xor
div
ret
movsl
into
pop
mov
test
ficoml
and
sub
adc
cmp
inc
jg
push
dec
mov
sub
jmp
sti
adc
leave
add
cmc
ljmp
ja
jne
in
leave
inc
push
push
sbb
cli
add
test
inc
cwtl
mov
stos
popa
mov
jno
inc
push
lock
lea
add
sahf
outsl
dec
das
icebp
xor
aad
add
inc
pop
or
and
push
mov
push
pushf
dec
js
repz
pop
and
sbb
dec
cmp
dec
aaa
mov
outsb
mov
xor
cmp
dec
mov
cmp
adc
arpl
mov
sub
inc
fwait
in
add
hlt
sbbl
dec
hlt
add
scas
call
inc
pushf
jecxz
cld
stos
mov
das
adc
and
incl
sti
nop
jno
adc
repz
xchg
mov
lret
sbb
shlb
out
nop
pop
pop
mov
xor
cmp
and
cmc
stos
sbb
lahf
xor
in
adc
popf
xor
fdivrs
push
mov
int3
adc
adc
fistpll
out
aam
bound
clc
inc
sub
xorl
dec
mov
xchg
sbb
aaa
in
or
sub
int3
jbe
dec
sub
fistpl
and
fxch
fisubrl
or
adc
add
test
into
imul
and
or
imull
daa
push
xchg
push
lds
clc
fisubrs
aas
dec
mov
dec
adc
push
pop
pop
sbb
in
push
xchg
push
out
insb
mov
cld
xlat
sbb
popa
add
leave
mov
adc
insl
adc
mov
out
out
movsl
push
in
xor
pop
dec
jns
mov
push
aas
and
loop
incl
aas
xorb
xchg
shrb
dec
cli
add
xchg
repnz
fs
jecxz
repnz
cli
inc
add
xchg
pop
rol
dec
in
cwtl
bound
lcall
repz
pop
bswap
fisubrl
pop
rcrl
adc
mov
sbb
fwait
dec
arpl
hlt
repz
dec
xchg
aaa
add
shrl
test
icebp
mov
jp
push
notb
mov
push
inc
out
in
fisubs
clc
cmp
aad
fneni(8087
cwtl
rolb
in
xchg
cwtl
arpl
hlt
negl
push
outsb
int3
outsl
lds
arpl
ds
xchg
jecxz
add
sub
jne
or
sub
lret
cmp
push
mov
add
cmp
sar
and
lea
mov
dec
dec
hlt
xor
cmp
lahf
out
xor
in
sti
and
push
rcll
rcr
push
pop
xor
dec
cmp
push
and
dec
adcb
insl
pop
jb
enter
dec
mov
sub
push
leave
adc
fcoms
pop
pop
cwtl
and
dec
mov
shrb
mov
in
inc
test
lock
mov
lds
divl
or
fbstp
sti
fdivrl
cltd
inc
mov
mov
dec
push
dec
cmpsl
inc
mov
loope
rcrb
adc
sbb
cmpsl
and
and
cmp
push
jno
movsb
mov
jmp
cs
aas
sbb
pop
cmpb
inc
imul
sub
add
int3
xchg
jle
cmpsb
push
or
push
mov
sub
mov
jp
inc
xchg
in
arpl
nop
pop
cmp
jno
lods
cmp
in
ret
aas
jmp
inc
mov
sub
adc
divl
aas
xchg
mov
les
lods
cmc
add
movsl
adc
xchg
inc
and
mov
inc
dec
shrl
sbb
loopne
rcr
sahf
push
stos
jne
inc
mov
test
pusha
push
test
push
movsl
or
pop
mov
push
add
fstl
xor
cli
fidivrs
mov
cmp
mov
fadd
pop
loope
addr16
addr16
sub
and
mov
cmpsb
lods
pop
jecxz
mov
aam
mov
adc
sbb
xchg
xchg
sahf
jp
sub
dec
cs
test
outsb
clc
fwait
adc
aad
loopne
mov
mov
ljmp
inc
push
jo
mov
mov
rclb
inc
fcompl
std
jnp
xchg
push
nop
das
lret
jno
and
pop
push
daa
and
clc
rclb
pop
push
loopne
or
xchg
pushf
sbbb
xlat
lods
inc
xlat
push
or
flds
mov
adc
out
sbb
ja
in
cmp
ss
push
daa
dec
lea
sbb
aas
and
cmp
cmc
sbb
mov
mov
sub
loope
in
xchg
daa
outsl
lret
mov
lds
and
aad
movsl
gs
call
std
mov
movsl
xlat
and
je
sub
lcall
popa
mov
xchg
bound
sbb
jmp
fsubl
in
ret
jne
cmpsb
les
jl
iret
push
cmpsb
xor
sbb
sbb
shlb
cmp
xor
sbb
xlat
insb
xchg
sbb
mov
mov
mov
mov
mov
dec
jecxz
scas
daa
jge
loopne
xchg
lock
inc
mov
sbb
stos
ret
push
jecxz
push
sbb
outsl
mov
or
repz
leave
dec
add
xor
fwait
insb
add
pop
mov
mov
jnp
mov
js
ret
rorb
xor
xor
sub
cmp
popf
fs
sub
mull
xchg
jle
mov
adc
cmp
xor
cwtl
repz
cmpsl
pop
arpl
cmp
cmp
cmp
inc
pop
aas
push
dec
lret
mov
jae
mov
inc
aam
rcrb
push
dec
out
in
xchg
inc
enter
dec
mov
rorb
bound
dec
rcll
enter
jns
sbb
mov
sub
fldt
test
cwtl
add
cli
lret
test
aam
sbb
push
aaa
cmc
add
pop
ss
rolb
gs
cmp
mov
lea
pop
adc
insb
mov
jmp
xor
pop
jno
test
sub
inc
xor
pop
iret
pop
out
dec
xor
scas
icebp
jns
push
nop
cmc
mov
stos
sub
mov
je
cmp
in
pop
aaa
jo
int3
imul
rcrb
sub
jg
enter
and
mov
mov
mov
pop
pop
cmc
mov
push
lgdtl
add
xchg
inc
jnp
jge
push
mov
mov
mov
rclb
cmp
sub
pop
inc
push
int3
or
inc
imul
fs
push
adc
jns
inc
adc
inc
cmp
pop
ret
pushf
fwait
cld
or
xlat
dec
dec
cmp
push
add
scas
test
mov
add
and
lret
xor
je
je
push
mov
data16
lock
cmp
pop
adc
ds
mov
daa
cmp
iret
out
pop
hlt
fadd
xchg
jge
sub
dec
pushf
jo
inc
push
xor
mov
insb
sub
mov
sbb
cmp
fdivrl
leave
mov
jb
fimull
sbb
push
rcr
lret
jge
cli
jo
xor
mov
das
mov
mov
aam
mov
ret
out
daa
fstpl
or
pop
movsl
sti
sbb
test
inc
out
dec
push
mov
sub
xchg
incl
cltd
xor
imul
push
mov
mov
and
adc
lods
in
rcrl
inc
cld
mov
cmp
je
jg
scas
lcall
pop
push
cmp
aad
ficomps
jbe
pop
bound
lret
ljmp
hlt
cmp
fnstsw
fs
addr16
jecxz
push
clc
and
mov
insb
pop
sbbb
stc
jl
insb
test
push
xchg
test
jmp
out
cli
fisttpl
sub
in
xchg
shrl
sbb
sub
push
iret
test
popf
add
loope
ja
sub
cli
jnp
aas
shrl
outsl
dec
enter
mov
scas
test
sti
lea
ja
aaa
jl
sbb
dec
jae
lcall
jp
and
push
xchg
aam
aas
int3
inc
sti
test
in
iret
cs
xor
leave
aaa
inc
shlb
sbb
mov
inc
out
aad
fucomip
mov
pop
and
leave
fadds
cmp
cmp
iret
nop
imul
je
mov
mov
xchg
movsb
cmp
mov
adc
jbe
push
lock
hlt
jmp
xchg
xchg
xlat
jne
mov
int
xchg
incb
lea
adc
mov
mov
adc
sbb
jle
jbe
push
gs
out
xchg
dec
xor
das
pop
mov
inc
stos
mov
movsl
cmc
test
xchg
ja
lods
sbb
xchg
xor
dec
xchg
push
cli
ror
cmp
and
icebp
mov
pop
test
fcoms
xor
xor
xchg
aas
inc
jae
sbb
push
les
out
pop
popa
ret
popf
dec
or
sub
push
imul
pop
or
stos
push
out
test
aas
cmp
lock
test
mov
sbb
imul
shll
rorl
mov
js
cld
je
outsb
into
aaa
lret
inc
cltd
pop
jnp
adc
sar
mov
sub
push
fcom
mov
cmc
fucomip
or
pop
roll
xchg
adc
cli
andb
mov
inc
stos
xor
mov
mov
xor
adc
loope
movlps
sub
lods
sub
jb
das
lret
mov
adc
pop
sbb
dec
push
sbb
inc
jmp
testb
das
enter
xchg
mov
push
fists
in
xchg
push
xchg
lret
in
sahf
add
outsl
insl
outsl
xchg
xor
insl
adc
pop
mov
test
jge
jnp
nop
mov
pushw
lods
outsb
cmp
mov
out
add
push
orb
xor
sub
push
cmpsl
sbb
jl
pop
dec
push
pop
outsb
cmc
jae
cwtl
mov
dec
xchg
pop
and
subb
pop
movsl
sub
inc
aad
and
lods
movl
frstor
icebp
push
adc
jno
test
mov
dec
rcr
test
repnz
jl
aas
mov
enter
adcl
xor
add
pusha
inc
dec
cli
sub
cmp
dec
pop
dec
jo
lret
stc
xchg
sarl
in
dec
mov
push
adc
add
lcall
popa
xchg
test
mov
xchg
cmp
out
call
cwtl
out
dec
js
in
push
jge
mov
outsb
or
sub
insb
xor
shll
idivb
xchg
popl
sub
addb
sbb
pusha
rolb
jb
mov
loopne
test
lock
and
imul
insb
icebp
rcll
into
and
sarb
jbe
test
cwtl
imul
testl
loop
daa
mov
ds
sbb
pop
jb
and
cmc
divb
jmp
in
xchg
cmp
pop
repnz
daa
sub
inc
sub
ljmp
stc
push
mov
mov
fisttpll
jecxz
pop
fdivrs
popa
inc
aam
ja
sub
clc
popf
xchg
repz
inc
sarl
incl
inc
inc
repz
push
mov
and
mov
clc
je
add
and
push
pop
cld
insl
leave
lea
insl
nop
out
sbb
ss
stc
outsl
outsb
pop
inc
rolb
xchg
push
dec
es
std
int3
fcoml
push
cltd
clc
mov
inc
cmp
lea
pop
das
inc
std
dec
gs
lret
push
out
movsb
xchg
arpl
pop
imul
jecxz
out
mov
jmp
cld
cs
mov
mov
fs
dec
jae
in
cmp
mov
xor
jmp
loopne
xchg
scas
cli
mov
stos
mov
divb
sarb
int3
insb
movsl
into
adc
aad
sub
test
in
insb
je
sbb
add
int
push
mov
cmp
clc
pusha
cmpsb
xor
add
mov
lret
shr
incl
dec
and
mov
mov
mov
cwtl
ja
xor
jge
and
mov
div
inc
add
jmp
xchg
and
sub
cmp
pop
mov
fdivl
lds
xor
push
push
sub
rcr
xchg
fisttpll
jns
sbb
push
pop
xor
ror
rcrl
xchg
ja
jge
pop
mov
or
mov
std
sahf
cmp
mov
subb
int3
and
cmc
push
movsl
iret
std
and
mov
dec
in
pop
movups
and
jns
das
lcall
jp
scas
jbe
movsb
mov
adc
mov
jns
jle
and
push
fidivl
pop
or
mov
into
int
dec
jne
out
push
cli
cmpsb
xor
in
cli
roll
and
mov
je
mov
pop
into
movsl
lret
add
into
mov
lret
add
inc
mov
pusha
out
scas
jp
subb
cltd
fcmovnbe
jl
loop
jl
mov
icebp
push
lcall
test
sub
fisubrl
sti
xor
iret
pop
add
cli
adc
out
rcll
xor
adc
ja
xchg
and
rclb
clc
mov
push
add
js
outsl
lea
and
jmp
pop
outsl
fidivs
xchg
cs
and
icebp
popf
idivl
repnz
mov
shl
push
sbb
cmp
cmp
push
jp
data16
stos
inc
add
cwtl
mov
jo
sub
bound
out
dec
xor
push
nop
dec
xor
add
cmp
inc
mov
hlt
add
shrb
test
mov
stc
mov
out
nop
inc
push
lret
push
mov
sbb
pop
mov
sbb
stos
mov
nopl
or
mov
push
push
inc
lret
dec
daa
xchg
sub
xchg
and
jae
pushf
adc
push
cwtl
jp
jne
lret
rcrl
sub
stos
rorl
inc
sub
arpl
loop
sahf
add
movsl
inc
daa
and
imul
dec
adc
sub
cld
xlat
add
sahf
or
and
jae
out
hlt
mov
xchg
mov
ljmp
movsb
pop
dec
mov
je
sbbl
cli
test
mov
lock
cmp
cli
aaa
mov
jle
xor
xor
sbb
inc
mov
inc
jp
fwait
pop
outsl
cmc
mov
cmc
cmp
xchg
and
add
add
cmp
and
out
sbb
mov
jmp
bound
loope
lea
lea
xor
addr16
sub
jge
push
mov
pushl
push
adc
mov
int
lret
icebp
lahf
adc
movsb
aas
int
js
sbb
adc
cmp
adc
scas
adc
or
enter
xchg
out
push
rcrb
inc
lahf
jg
fbstp
lcall
movsl
cmove
sub
in
adc
inc
push
std
les
mov
mov
mov
iret
adc
nop
in
or
push
ret
mov
loope
je
jp
pop
inc
in
pop
bnd
dec
lret
jge
pop
push
decl
in
mov
insl
sbb
xchg
dec
cmp
ret
inc
cltd
loope
inc
fists
nop
pusha
loopne
movl
jle
cmp
lods
clc
xor
push
mov
pop
into
mov
aam
js
inc
ljmp
mov
pop
mov
xchg
fisubrs
ret
aad
cltd
mov
jns
or
jmp
subl
sub
jge
aad
and
pop
and
sub
movsb
xor
popf
aam
adc
shrb
jae
dec
push
cmc
test
es
jge
shlb
and
mov
dec
lea
cmpsb
dec
push
sub
jg
inc
pop
mov
out
lcall
scas
in
notl
lods
jmp
add
ret
movsb
sarl
mov
add
aad
lods
xor
enter
ret
lock
and
roll
xchg
inc
gs
jp
fisubs
inc
aam
es
andl
shrb
jnp
fcmove
lock
jmp
or
daa
or
cltd
mov
fbstp
rclb
push
xor
jecxz
push
jmp
mov
idivl
iret
push
shrb
insl
and
sub
insb
xchg
mov
mov
gs
loop
push
add
stos
testb
stc
movsl
fsubs
xchg
orb
ja
mov
repnz
aaa
push
adc
and
call
push
testb
dec
inc
push
pop
add
push
xor
push
inc
xor
jno
jg
xchg
stos
xor
imul
enter
lock
sbb
stos
por
fbstp
mov
inc
inc
xchg
inc
gs
add
outsl
icebp
xor
sub
bound
fistl
pop
fbstp
call
jge
xchg
mov
popa
add
jp
adc
xchg
int3
movsb
mov
mov
sbb
in
adc
aad
inc
xchg
cwtl
and
lods
imul
and
pop
dec
fs
mov
xor
mov
xor
xchg
lock
or
adc
int3
loopne
fidivl
adc
mov
in
repnz
movsb
pop
icebp
mov
movsb
and
mov
sahf
cmp
out
pop
jb
mov
lods
cmp
loopne
and
add
sbb
int
pop
adc
xchg
pop
pop
movsb
mov
sbb
mov
jecxz
clc
dec
fs
or
mov
insl
ds
clc
notb
frstor
jae
xor
int
jb
mov
cmp
or
push
cmpb
inc
jmp
in
cmp
pop
je
inc
scas
jno
mov
mov
iret
fstps
and
mov
xor
mov
or
jle
sbb
push
pop
mov
cli
mov
insl
cmc
and
xor
pop
pop
mov
ds
fsubs
push
rcrl
sbb
movsb
iret
inc
push
mov
mov
addl
mov
data16
lahf
iret
test
xor
dec
mov
les
jne
and
fldl
js
xlat
mov
or
addb
xor
sbb
hlt
jmp
inc
addl
adc
test
jp
xchg
mov
jb
std
adc
pop
pop
adc
dec
daa
cmp
daa
or
cmp
cmp
scas
xchg
in
lock
jg
inc
inc
lock
shrl
dec
sbb
lret
stc
inc
arpl
inc
setp
mov
into
aas
lret
mov
in
scas
and
adc
loop
mov
inc
fsubs
cmp
inc
cs
push
int3
lock
fdivrl
cli
xor
fs
cli
push
xor
mov
popf
aad
jbe
iret
mov
dec
sti
dec
adc
cmc
aaa
fmull
and
adc
clc
into
shlb
or
xchg
out
push
push
push
jbe
sub
fwait
or
shlb
mov
inc
fdivs
fisttpl
adc
inc
cmp
push
xchg
or
jecxz
icebp
lret
loope
add
sbb
cld
cmp
pop
push
mov
jl
jnp
cmpsb
push
addr16
aas
nop
cmpsl
mov
mov
aad
jns
xchg
xchg
or
mov
lock
test
push
cmp
pop
cmp
or
xchg
mov
xchg
pushf
push
jmp
out
jp
or
inc
ret
and
adc
push
add
jb
cmp
imull
sbb
xchg
add
nop
mov
push
mov
pop
js
jmp
pop
rorb
adc
stc
xchg
gs
sbb
lock
xchg
fcompl
dec
dec
pop
cmc
add
pop
dec
push
mov
dec
jbe
or
mov
cmpsb
popf
repz
imul
xor
inc
cmp
les
les
aam
mov
add
out
sub
jle
cmpsb
sub
lahf
xchg
lcall
push
lock
jle
rol
jo
fmull
jne
stos
mov
inc
add
pop
and
outsl
ds
outsb
push
inc
xchg
int3
lods
adc
mov
insl
addl
stos
mov
mov
imulb
mov
mov
rcrl
sti
dec
clc
faddl
add
mov
xchg
inc
sbb
je
popf
jno
xorl
cmpsb
pop
sbb
mov
dec
mov
sahf
jo
out
push
mov
sub
fsub
push
xor
mov
in
sub
lods
or
aad
mov
and
fmul
inc
mull
dec
jmp
jns
dec
sub
mov
push
out
mov
dec
jno
and
aam
leave
inc
lret
adc
testl
lds
stos
ds
jb
and
inc
sub
or
lret
mov
les
fidivrs
pop
js
mov
daa
jo
ljmp
inc
add
aaa
orb
or
leave
pop
xchg
movsb
popf
jne
mov
pusha
or
pop
imul
or
mov
lock
cli
or
shrb
mov
pop
enter
sub
add
dec
add
hlt
fimull
cmp
xlat
dec
in
std
xchg
push
add
add
mov
mov
in
hlt
fiaddl
mov
adcl
ds
push
std
mov
imul
push
mov
sbb
ret
xchg
push
pop
lods
xor
std
add
inc
xchg
jae
dec
repnz
jbe
js
shrl
enter
lods
xchg
hlt
sub
dec
push
mov
mov
aam
mov
in
fldl2e
rdpmc
dec
gs
cmp
mov
push
jle
push
dec
pop
in
mov
xchg
dec
lret
je
pop
ret
movsl
lds
xchg
scas
sti
mov
rorb
cld
lahf
mov
jmp
mov
lret
push
fidivs
sbb
adc
mov
out
out
pop
mov
loope
adc
lods
pop
stos
imul
add
enter
pushf
iret
or
push
sub
int
in
cli
adc
sbb
ljmp
jbe
cmp
stos
hlt
or
outsl
leave
or
pop
jg
je
out
xor
hlt
icebp
jb
cmp
outsb
xchg
je
out
push
stos
xchg
mov
add
xor
test
ja
loopne
nop
pop
add
lahf
add
push
cld
dec
ss
scas
out
aad
add
imul
jmp
and
adc
push
bound
mov
inc
int3
mov
lock
xchg
jg
sub
cmpsl
mov
sahf
cwtl
mov
aas
or
daa
test
call
mov
lock
addr16
add
mov
out
lods
push
jg
lahf
push
or
je
sub
stos
xor
int
sub
mov
adc
fsts
leave
push
and
daa
inc
cltd
scas
pop
push
add
cltd
pop
lds
jle
cmp
mov
pop
nop
arpl
hlt
lret
sub
repz
sub
sub
add
pop
repnz
insl
add
dec
test
or
jl
sub
arpl
iret
and
call
jmp
sub
ja
mov
fs
repnz
add
xchg
sub
test
mov
or
aad
and
sub
inc
insl
or
loop
fsubrs
add
mov
mov
mov
mov
mov
test
push
out
cwtl
sub
or
ficoml
mov
js
mov
mov
bound
xchg
mov
inc
add
inc
push
push
cmc
pop
insl
pop
outsl
jg
inc
mov
roll
sub
jbe
lahf
pop
and
xchg
fstps
test
cmp
rol
or
inc
pop
xor
lods
jb
inc
sub
mov
jne
add
inc
jmp
add
cmp
or
rcll
or
and
push
mov
inc
stc
stc
xor
push
jge
pusha
ljmp
dec
loope
shrb
lds
arpl
shll
add
addr16
inc
test
sub
push
inc
mov
jbe
scas
add
rcl
mov
rcl
mov
mov
mov
cmc
pusha
ficompl
jg
push
dec
movsl
fcomps
mov
in
cmp
je
dec
add
push
jo
or
addr16
or
dec
adc
pop
outsb
jae
pusha
adc
sbb
and
pop
enter
adc
in
pop
add
push
sub
aas
sahf
in
lret
lods
dec
imul
jmp
or
jp
icebp
dec
push
jo
mov
xchg
mov
fstpt
xor
movsl
loopne
dec
pop
ss
mov
lcall
xchg
push
push
inc
js
jge
das
jge
daa
xor
push
loopne
lret
cmpsb
pop
out
movl
jl
int
lret
or
in
fld
xor
arpl
add
enter
xchg
mov
cmpsb
adc
ret
std
sub
mov
notb
fistpl
dec
scas
insl
into
cmp
ss
xor
dec
mov
xor
movl
dec
push
xor
dec
lods
or
cmpl
mov
repnz
pop
stc
imul
mov
outsl
and
jb
xor
aas
lods
out
int3
cwtl
arpl
cmp
or
xor
sub
sbb
pop
ss
cld
add
lock
push
adc
fstl
xchg
xchg
dec
xchg
mov
pop
push
cmp
int
test
fnstcw
scas
test
sbb
es
mov
sbb
enter
jge
push
mov
js
lea
push
sbb
pop
push
push
pop
mov
stc
add
inc
xchg
xadd
test
jns
out
or
scas
std
popa
jae
push
and
int
add
pop
add
pop
in
js
int3
xchg
clc
inc
insl
inc
cmp
sbb
xchg
cmp
pop
out
imull
int
xlat
lds
lahf
cmp
mov
mov
dec
xchg
xlat
test
sub
ret
pop
stc
sti
dec
adc
or
cwtl
cmp
aad
mov
pushf
sbb
sub
or
aas
cmp
nopl
repnz
insb
pop
adcb
std
cmp
mov
push
mov
shlb
lcall
cmpb
sarl
adc
cld
imul
jnp
fldt
mov
cltd
dec
jno
push
sbb
sbb
mov
jecxz
mov
testb
andl
fs
das
pop
gs
imul
sbb
gs
add
pushf
ret
pop
inc
sbb
add
or
dec
movsl
add
inc
and
dec
inc
adc
jno
or
addb
xchg
addr16
mov
adc
fidivrl
cmp
int
in
stc
rcll
test
push
int3
xchg
mov
loop
dec
jmp
cmp
loope
jo
fnstsw
sbb
sbb
loop
incl
test
sbb
add
push
fdivr
test
and
bound
out
dec
lds
sbb
add
les
ja
jnp
aam
mov
data16
in
sbb
addb
aas
out
mov
xchg
mov
lods
or
adc
popa
aas
jae
sub
inc
adc
xchg
out
movsl
test
adc
mov
cmp
pop
lret
jg
add
add
jle
data16
call
cmp
mov
fsubl
cmpsl
cvtpi2ps
jl
mov
out
jg
xor
aas
fs
sbbb
test
jg
pop
hlt
inc
pop
movsl
shll
pop
sub
jg
pop
sbb
add
pusha
pop
cmp
dec
lret
mov
int
cmp
hlt
clc
inc
pop
pusha
cmpsl
daa
sbb
pushf
ror
aas
jo
sbb
insl
es
mov
or
sbb
roll
in
push
sub
outsl
int3
xorb
mov
imul
or
mov
sbb
jp
sub
add
loope
jbe
add
jnp
loope
mov
jg
addr16
xlat
or
mov
fistps
xor
out
inc
addr16
daa
rcrl
mov
lock
js
int3
sti
dec
push
pop
xor
sbb
xchg
int
push
jecxz
test
jb
mov
pop
push
lds
nop
lods
pop
loope
jmp
push
xlat
cmp
outsb
mov
cmp
sahf
cmp
cmp
lds
negb
test
loope
lods
jmp
mov
pop
push
fdivl
int
imul
xor
scas
out
rcrb
lcall
jmp
imul
or
mov
aas
xor
loop
fst
mov
xlat
js
push
push
or
add
scas
lahf
clc
stc
cmp
out
xchg
ret
mov
fnstenv
xchg
adcl
sub
jecxz
push
nop
cmp
fiaddl
loopne
mov
sbb
lret
or
outsl
inc
bound
pop
cmp
lds
push
je
sub
movsl
repnz
jmp
jg
and
or
push
xor
lret
mov
jno
mov
mov
shr
int3
inc
xchg
sub
mov
xchg
outsb
lea
and
and
ss
icebp
fnsave
leave
les
cmp
idivb
pop
out
dec
ljmp
mov
in
nop
sti
inc
pop
jle
mov
and
hlt
cmpsl
clc
daa
imul
lods
lods
into
sbb
push
fdivp
testl
adc
mov
xchg
push
out
aaa
aad
dec
xor
pop
loope
mov
or
xchg
pop
sahf
mov
dec
pop
jl
dec
bswap
jnp
clc
lea
lret
sti
movsb
mov
fdivs
xor
lret
jno
jge
or
and
lods
ljmp
mov
repz
pop
je
fcomps
push
ficomps
inc
shr
fnstenv
jo
mov
inc
cmp
clc
std
inc
mov
bnd
cltd
cmp
dec
mov
sarb
sbbl
mov
sbb
push
cs
bsf
adc
push
adc
pop
jne
sub
jp
popf
push
lea
adc
lock
shrb
hlt
and
cmp
adc
cmp
pop
jne
daa
jg
and
add
push
add
pop
jnp
sti
dec
and
inc
or
xorl
jecxz
cld
mov
movsb
subl
and
cld
jg
xchg
mov
and
jne
imul
nop
loop
inc
lret
add
cmp
in
sbb
ds
cmp
mov
andl
into
out
aam
sub
inc
xor
negb
mov
pop
sub
jp
adc
mov
movsb
jge
push
pop
clc
jns
shrl
and
cmc
dec
idivl
mov
pop
jb
mov
aas
cmp
fimull
jne
push
pop
ret
fbstp
dec
insb
mov
cli
lcall
outsl
push
xchg
push
mov
or
push
repnz
push
pop
cs
stos
mov
jo
nop
ja
push
push
lahf
pop
adc
mov
movsl
sbb
imul
aam
adc
sub
std
mov
ljmp
dec
and
aaa
popl
cltd
lahf
lret
jge
dec
xchg
out
loop
fsts
xchg
ja
push
outsb
lcall
repz
pop
mov
js
das
incl
and
pop
xor
add
inc
pop
pop
ljmp
inc
and
iret
push
scas
out
pop
mov
inc
addb
popf
nop
arpl
inc
popa
stos
fisttps
cmp
test
fstps
xchg
clc
out
jmp
lock
pop
insl
or
aam
push
les
rcrb
addr16
push
mov
and
cld
cmp
inc
mov
pusha
inc
and
cld
outsl
or
push
xor
adcl
fsubrs
mov
ss
push
fcoms
jecxz
mov
add
push
cmp
out
repz
cmpb
mov
inc
inc
or
lock
or
xor
out
lret
leave
mov
and
mov
movsl
leave
cmpsl
cwtl
cmp
aaa
xchg
inc
ss
mov
and
sub
pop
xchg
jno
das
insl
sbb
insb
scas
add
inc
mov
jle
jns
insl
idivb
add
jle
cwtl
or
daa
xchg
jmp
inc
adc
out
jecxz
push
cmpb
ljmp
pop
mov
leave
pop
daa
or
cs
ret
clc
stos
mov
imul
outsl
clc
cmp
loope
and
sbb
imul
js
adc
bound
ret
loop
cld
mov
pop
mov
push
sbb
or
insl
jno
fucomip
out
scas
lods
sbb
out
cwtl
and
call
mov
inc
sbb
jecxz
sub
mull
mov
in
cmp
out
out
movsb
cltd
roll
repnz
adc
mov
mov
das
loope
subl
je
mov
in
loopne
jmp
in
out
mov
ret
sbb
cmp
or
push
in
cli
scas
testl
inc
xchg
xchg
js
mov
je
aaa
daa
or
sub
or
rcrl
cmp
les
mov
and
stos
fstpl
lods
jg
imul
jo,pt
test
ret
sahf
sbb
addr16
pushw
push
jnp
adc
sub
xchg
jp
jmp
shl
popa
add
add
outsb
pusha
lcall
push
pusha
inc
inc
cmp
repz
mov
stos
sbb
mov
mov
xlat
and
inc
fisttpl
xchg
ret
test
jbe
hlt
cld
in
lock
imul
fisttpl
cmp
cmp
hlt
mov
outsl
scas
jge
or
pop
jge
nop
std
pop
inc
xor
sti
testb
aam
inc
or
push
cltd
inc
and
loop
and
repz
mov
js
in
int
scas
out
enter
js
mov
and
call
and
aad
stc
fstps
xor
pop
mov
adc
test
pop
loop
shl
inc
pusha
repnz
sbb
fidivrl
enter
mov
sbb
sub
das
pop
and
dec
adc
adc
in
inc
mov
sbb
and
insl
in
add
mov
fsubr
or
movsb
pusha
sbb
outsl
pavgb
mov
aam
leave
test
loope
flds
add
and
callw
scas
adc
cltd
mov
xor
dec
idivb
mov
lock
push
test
xchg
fldt
pushf
jne
out
cmp
cmp
adc
or
ror
push
gs
cmp
xchg
or
cmp
test
lea
mov
cld
mov
pop
push
lret
inc
sahf
mov
loopne
inc
or
enter
xchg
sbb
ljmp
add
sbb
mov
add
fisttpll
mov
pop
test
test
ja
xchg
jl
mov
std
hlt
inc
pop
test
xor
cmc
mov
das
mov
ss
add
mov
mov
pop
and
push
cld
adc
sbb
enter
in
bound
mov
es
inc
xchg
push
or
add
pop
fdiv
int
push
mov
inc
loop
incb
imul
cwtl
gs
pop
movsl
dec
out
xorl
hlt
sahf
jle
sbb
push
dec
xchg
inc
notb
jns
in
mov
daa
and
aad
mov
shll
mov
mov
sbb
cmp
scas
insl
inc
and
in
push
flds
cmp
add
dec
mov
rcr
add
addr16
mov
adc
lds
pusha
push
pop
mov
mov
pop
mov
mov
daa
test
jne
push
repz
dec
ss
lea
jnp
xor
add
lods
pop
mov
mov
sbb
xor
add
sub
sbb
sub
outsb
or
inc
in
pop
and
repnz
fs
sub
rorb
mov
mov
das
test
sub
pop
enter
in
dec
sub
mov
jbe
cmp
mov
mov
popl
jnp
pop
add
cmp
push
mov
push
sbb
out
push
rolw
leave
loop
push
inc
fldl
jnp
cmp
mov
adc
sbb
add
dec
iret
sti
scas
or
lret
inc
and
outsb
mov
in
push
xor
testl
pop
cmp
inc
fcoms
pop
inc
sub
scas
add
jmp
adc
push
pop
mov
rorl
pusha
ret
push
lahf
push
xor
xchg
pusha
dec
cmpb
and
imul
fs
in
fcoml
fnstenv
popa
cmp
sbb
mov
push
jge
sbb
repz
pop
scas
xorb
sbb
shl
test
out
sahf
pop
jns
and
adcl
in
mov
xchg
test
mov
mov
dec
notl
sub
cmpsl
and
add
xor
inc
sbb
push
out
lods
imul
gs
and
out
lods
sahf
mov
in
orl
pusha
xchg
lea
mov
push
mov
jg
loop
fwait
ret
inc
adc
rcll
push
add
pop
push
das
push
popf
adc
cmp
mov
inc
scas
add
addr16
jmp
sahf
xor
fnstenv
dec
xchg
inc
push
stos
sarb
sbb
popa
cmpsb
push
dec
ficoml
jne
push
call
push
imul
dec
xor
es
xchg
dec
push
stos
xchg
xchg
inc
out
movsb
add
imul
or
push
or
jnp
and
in
stc
xor
loope
ss
push
inc
push
mov
aaa
inc
nop
aam
fdivl
sub
xchg
sub
mov
mov
jl
in
bnd
pushf
ss
mov
pop
cmp
xchg
and
int
adc
fsubp
pop
xlat
mov
pop
lret
or
push
stos
shll
pop
push
jecxz
loope
cwtl
adc
stos
test
pop
nop
cmpb
cltd
cli
test
sarb
xlat
lret
cmpsl
sub
jnp
je
loop
push
aaa
pop
jp
pop
cmc
fs
divl
jmp
sbb
mov
cltd
sahf
out
out
imull
out
out
shlb
cmp
in
out
sbb
hlt
cmp
sbb
jae
aas
push
sub
xor
repz
lcall
enter
movsb
adc
shlb
xlat
xor
imul
dec
aad
add
sbb
cmp
push
arpl
icebp
jecxz
xor
pop
mov
out
iret
xor
lods
cmp
lods
in
push
pop
lret
mov
ret
in
lret
xchg
dec
lods
xor
adc
ds
inc
and
jne
xor
sub
dec
mov
push
pop
cmp
add
sbb
and
cmp
adc
xchg
lock
pop
jmp
in
bound
orb
push
push
xor
xchg
add
into
ret
mov
cmp
rolb
xchg
sbb
and
mov
inc
fistl
xor
sti
mov
out
loop
fidivs
out
setg
cmp
lds
xor
aad
repz
mov
xchg
xor
push
and
xor
mov
push
sub
or
inc
push
sub
mov
sub
loope
mov
add
clc
xor
into
fcmovnbe
test
in
in
test
sub
cmc
outsl
sub
cltd
cmp
push
fwait
std
jmp
cmp
and
mov
cmp
lret
ds
sbb
test
add
cmpsb
jae
fwait
mov
pushf
or
jecxz
fstpt
ffree
push
pushf
or
testb
add
mov
aam
xor
les
les
imulb
sbb
push
leave
in
jge
jb
lods
lcall
cmp
call
inc
movsl
test
push
jecxz
fimull
mov
and
andl
test
mov
mov
dec
subb
in
movsb
test
inc
jp
cli
enter
jp
mov
jno
push
fstpl
jl
pop
out
push
int
push
lods
and
xchg
sub
pusha
xchg
test
xchg
shll
xor
mov
add
cmpsb
xchg
push
out
and
rcll
int3
fnsave
jmp
jle
mov
add
mov
and
push
cld
pop
mov
mov
insl
syscall
js
loope
jae
in
test
lock
je
jle
imul
into
jbe
stos
sbb
notl
insl
mov
cli
sub
shrb
iret
in
mov
xchg
je
aas
mov
jecxz,pt
sbb
test
jg
mov
or
out
push
cltd
sbbl
pop
xchg
push
in
xor
gs
mov
cs
mov
and
cmp
push
push
lods
rorb
add
dec
xor
hlt
add
sub
pop
stos
insb
push
insb
jb
jb
xchg
js
mov
mov
jnp
xor
and
jmp
cltd
pop
mov
enter
mov
xchg
sub
popa
xchg
or
cmp
push
sub
mov
pushf
out
inc
xor
mov
jg
mov
enter
inc
push
lret
lds
xor
jecxz
inc
lds
imul
aaa
sbb
or
adc
not
ds
cmp
or
nop
int3
adc
mov
lods
mov
je
inc
xchg
incb
cmovno
jbe
cmp
andb
jge
outsb
cmp
fcomp
sbb
pop
and
test
psubusw
and
and
or
repz
mov
ficoml
mov
jecxz
mov
mov
outsl
cwtl
mov
out
sbb
cmp
push
xor
sahf
cmp
testb
mov
das
rolb
and
dec
arpl
and
scas
lods
jg
je
cmp
lock
cmp
lret
pusha
es
out
imul
or
les
mov
fs
movsl
ja
adc
sbb
daa
ljmp
in
sub
dec
sbb
mov
int3
pop
arpl
sbb
push
int
rol
aad
dec
adc
xor
movsb
shlb
xlat
pop
insb
mov
jae
inc
add
loopne
jge
pop
xchg
incl
std
lcall
adc
push
xchg
inc
jge
test
repnz
mov
arpl
test
std
stc
sub
dec
ret
sub
int
outsl
mov
sbb
sbb
outsl
movsb
call
fidivrs
fdivs
adc
inc
fprem1
les
sbb
inc
out
xor
xor
insb
inc
xchg
cld
ds
loop
test
mov
xor
sbb
sub
mov
dec
push
into
jb
push
lds
imul
mov
movsl
fs
movsb
sbb
in
add
iret
fildll
xchg
xchg
test
pop
in
cmp
dec
pop
cmp
xchg
and
adc
or
les
lock
and
xor
adc
outsb
int3
add
fadd
negl
arpl
test
fildl
push
or
or
stos
or
cmp
xchg
jns
sub
outsl
pop
test
aad
loope
andl
mov
in
subl
cld
je
push
mov
into
in
inc
xor
mov
out
sub
out
pop
je
call
cmp
cli
pop
mov
pop
xchg
repnz
rcll
mov
pushf
and
scas
jns
pop
in
ret
test
jp
jmp
or
rolb
mov
aam
repnz
lret
pop
push
repz
movsl
mov
inc
xchg
pop
rolb
xor
pop
ljmp
gs
add
sarl
shrl
ss
jmp
push
jl
jo
mov
inc
out
shll
fisubrl
jns
mov
adcl
call
rcr
repnz
call
test
push
cmp
rorl
sbb
out
xchg
bound
add
jg
jnp
add
xchg
loope
repnz
sub
lcall
in
mov
fs
mov
fiadds
mov
movsl
int3
pop
js
inc
mov
sbb
mov
xor
outsb
dec
scas
out
mov
cli
add
jmp
ja
shrl
xchg
pop
mov
in
shl
pop
xor
cltd
and
push
dec
sbb
xchg
pop
xor
mov
ja
xor
hlt
pop
lret
clc
and
clc
cmp
mov
add
es
push
jmp
sbb
cmpsb
xchg
test
enter
push
xchg
mov
mov
repz
fildll
adc
push
jge
and
jns
mov
mov
es
les
js
sahf
add
xchg
cmp
lret
mov
cmpsb
add
sti
push
mov
iret
les
sub
jecxz
lds
repz
repz
cmpsl
and
push
jle
je
ja
sub
cmp
ljmp
in
xorb
je
push
xor
xorl
mov
cmpsl
and
movsl
xor
js
ror
mov
scas
je
jae
popa
jle
int3
in
inc
or
out
iret
lds
cmp
cwtl
gs
movsl
or
dec
push
xchg
mov
ja
movsl
pushf
pop
repz
xchg
vmovsd
gs
pop
out
outsb
lret
xchg
testl
mov
inc
jbe
mov
mov
cli
clc
call
jbe
mov
inc
mov
shrl
jnp
mov
add
cli
and
sbb
out
push
mov
adc
repnz
xchg
loope
or
and
push
sub
inc
repnz
xchg
push
adc
sub
inc
idiv
cli
outsb
jp
xchg
mov
jbe
icebp
or
imul
fistps
adc
cmc
push
ds
xchg
sbbb
lret
fiadds
aad
es
ret
lea
lahf
fstps
sub
pop
dec
pusha
movsb
cmp
mov
or
adc
lods
xchg
lahf
mov
dec
xchg
and
int
sahf
jo
inc
popf
jg
add
jns
pop
adc
or
or
hlt
push
ret
and
xlat
enter
pop
jns
negb
jns
jp
xor
push
flds
inc
cmp
mov
jp
bound
imul
jns
repnz
add
mov
int
xchg
in
ds
repnz
insl
sti
lret
popf
mov
movd
mov
cmp
xor
mov
ss
cmp
setle
imul
mov
insb
xchg
pushf
inc
sub
inc
lea
jae
lods
test
xchg
sbb
scas
mov
jp
mov
and
adc
daa
outsl
dec
out
push
cmpl
mov
push
mov
jge
sub
iret
std
nop
loop
inc
mov
jbe
addr16
pusha
mov
mov
ret
rolb
pop
lret
jno
imul
mov
sti
sti
dec
dec
les
aas
mov
test
sbb
lcall
sti
sbb
jecxz
jb
inc
rcr
ja
pop
int
jmp
add
mov
bound
out
loope
adc
pop
test
idivb
and
imul
cltd
jb
lods
ret
dec
sbb
subl
jb
mov
xor
stos
hlt
push
test
adc
cmp
rorl
ljmp
xor
adc
loope
outsb
jnp
repz
mov
shl
fstl
stc
push
pop
mov
xchg
mov
add
mov
xor
scas
sbb
andb
out
push
and
lahf
mov
or
test
dec
inc
mov
jo
sub
cmp
mov
ljmp
ljmp
add
call
inc
fstl
call
pusha
in
mov
xor
fisttpl
push
push
out
fldcw
lcall
mov
ss
repnz
jmp
jmp
mov
iret
fcoms
movsl
cmp
pop
or
sub
lock
daa
push
dec
out
sub
jle
lods
mov
ret
inc
jmp
adc
in
jne
dec
fsubrl
jno
addr16
insl
dec
cmpsl
pop
xor
jns
mov
pop
or
inc
aad
xchg
mov
mov
shrl
cmp
mov
xchg
repz
push
pushf
std
mov
and
sub
lds
and
or
pop
hlt
xchg
jecxz
adcl
cmp
adc
mov
ja
pop
pminub
dec
jle
jns
inc
xlat
xor
test
ds
and
jbe
sub
adc
add
jmp
out
aaa
adc
test
dec
adc
cltd
inc
mov
jecxz
out
jmp
sbbl
push
ror
lcall
in
scas
pop
loop
mov
iret
xor
leave
mov
dec
and
mov
ror
roll
adc
jnp
mov
jl,pn
mov
add
subl
cmp
fnstsw
in
repnz
cmpb
jae
repz
enter
mov
pop
fcoml
in
mov
cmp
iret
fdivl
in
sbb
push
mov
ret
and
jbe
movsb
out
pop
push
andl
sbb
loopne
or
sub
leave
mov
outsl
inc
xchg
xchg
insb
lahf
push
pushf
gs
clc
xchg
add
push
or
sti
jnp
and
insb
xchg
mov
int3
or
dec
clc
jbe
pop
mov
pop
xchg
adc
ljmp
fwait
or
cli
test
aad
jnp
scas
cmp
out
movsb
mov
test
rorl
imulb
bound
adc
mov
mov
enter
out
jp
je
imul
adc
push
mov
test
sbb
xor
aaa
fcomps
cmp
sahf
test
hlt
mov
cmp
or
fsubrs
jns
fisubl
dec
jnp
xor
mov
pop
push
int
or
mov
pushl
fcmovbe
call
sti
and
mov
mov
aam
and
imul
add
fldt
mov
arpl
pop
inc
pop
fnsave
sub
jnp
addr16
mov
out
mov
daa
jmp
andb
sbb
or
fmuls
aad
add
add
out
out
xchg
jnp
sahf
pop
add
les
xor
outsb
std
add
and
leave
add
mov
mov
in
lfs
push
adc
dec
xchg
pop
adc
je
lret
jle
cmp
jp
insl
mov
aaa
daa
and
mov
add
popa
push
and
pop
mov
arpl
inc
xor
push
lea
mov
sti
jo
lds
inc
fnsave
jne
mov
lcall
nop
mov
xchg
inc
jecxz
and
jb
xlat
and
pop
popa
sbb
and
in
sbb
test
xchg
add
push
jge
push
or
mov
stos
loopne
mov
pop
jb
jnp
stos
push
cmp
daa
out
test
loopne
jo
push
nopl
std
pop
mov
push
cmp
shll
fmulp
insl
push
pop
cwtl
es
inc
mov
mov
or
xor
inc
insl
out
fistpl
cmp
adc
inc
out
jp
mov
cmp
push
jmp
xchg
leave
das
mov
sbb
inc
call
into
in
add
outsb
and
sbb
pusha
pop
add
imul
cmp
fs
mov
cmp
leave
shlb
fcompl
popf
pushw
out
adc
inc
or
cmp
mov
lods
mov
lds
dec
xor
or
add
fdivrs
popa
scas
movsb
test
mov
adc
inc
repz
dec
pop
adc
addr16
or
lds
les
adc
cmp
scas
and
pop
adc
sahf
jns
lret
in
cmpsb
loopne
ficoms
sub
imul
loopne
mov
sbbl
inc
mov
mov
in
shl
xor
push
xor
clc
pop
push
movsb
aad
insl
inc
adc
sti
xor
insb
in
lods
ss
and
sbb
out
mov
add
mov
sbb
mov
push
lahf
iret
xlat
mov
jl
cmp
mov
adc
jg
sbb
lret
inc
lret
call
out
std
and
jl
mov
jl
jbe
int3
and
dec
leave
cmp
pop
lea
fidivrs
nop
lea
lea
push
xor
sub
xchg
xchg
sti
cmp
ficomps
adc
repnz
add
mov
inc
cmp
loop
jg
or
mov
inc
dec
ljmp
sbb
mov
adc
mov
stc
add
and
inc
enter
rcrl
hlt
push
add
xchg
xor
dec
lods
add
mov
arpl
push
cmpsl
dec
and
push
cld
shrl
or
scas
pop
mov
scas
jne
fimull
aaa
mov
leave
lods
lret
fwait
scas
push
aaa
lods
int
jge
cmpsb
iret
mov
xor
cmpsl
inc
repnz
outsl
sbb
xchg
or
pop
cmpl
js
ljmp
loope
cmc
aaa
sbbl
sarb
add
pop
jae
sub
es
in
sahf
scas
cwtl
orl
rcll
push
jg
ret
mov
sub
sub
sahf
dec
xlat
mov
add
mov
jne
sub
in
movsl
xorl
je
lds
cmp
inc
pop
pop
pop
add
enter
add
ss
jno
sub
sti
xor
pop
dec
or
add
pusha
adc
sub
aam
push
push
sub
cli
jno
push
xlat
jbe
cmpsb
test
aam
push
ss
movb
xor
mov
std
lahf
sub
call
cltd
out
btc
mov
mov
mov
pop
mov
push
xchg
xor
xor
or
push
fists
or
lret
mov
xchg
dec
sub
or
jo
outsl
mov
mov
jnp
ret
loopne
cmp
jecxz
gs
popf
stos
sub
adc
add
xchg
mov
mov
or
mov
jp
sub
test
inc
loop
mov
sar
out
adc
scas
mov
icebp
idivl
lea
push
notl
inc
test
imul
icebp
js
cmp
clc
jbe
iret
lcall
ss
mov
pinsrw
xor
test
inc
in
fwait
pop
mov
xchg
cld
fildl
push
stc
mov
xchg
aam
pop
xchg
fucomi
cld
adc
into
shlb
dec
adc
inc
push
sub
sub
xchg
nop
push
ds
ror
xchg
fcmove
das
sub
pop
mov
jmp
fadds
mov
and
cmp
sbb
popf
jecxz
cltd
xchg
ss
push
xchg
dec
test
nop
sbb
sub
push
xor
adc
sarb
aad
fucomi
ss
movsl
fldt
outsb
out
popa
les
fimull
popa
cmp
lods
mov
push
or
pop
xchg
mov
mov
cmc
cmpsb
add
popl
stos
int
xor
rorl
stc
lods
push
xchg
cmp
jno
cli
push
sarl
push
lds
shrb
dec
jmp
xchg
dec
sub
icebp
ret
mov
in
das
cltd
lcall
and
jbe
lret
shr
in
test
dec
rcll
in
mov
sbb
xorb
push
jmp
mov
add
jo
pop
in
inc
mov
int3
gs
and
jg
sbb
movsb
out
nop
ds
loope
sbb
mov
cmpsl
xor
xchg
test
jb,pt
sub
jp
push
outsl
xchg
pop
test
and
sub
cld
sub
js
xchg
adc
or
xchg
inc
sahf
inc
leave
jne
pop
lret
xchg
cmp
loope
repnz
fmull
leave
pop
and
jns
stc
or
mov
inc
mov
cmpsb
dec
push
mov
pusha
mov
lock
or
pusha
pop
and
pop
jg
dec
mov
popf
dec
push
push
arpl
fldl2t
clc
xchg
insl
mov
pusha
loope
cld
cmp
mov
cli
jb
sub
cmp
add
inc
out
test
mov
test
outsb
dec
fdivl
fiadds
ss
nop
daa
repnz
xchg
test
mov
mov
jb
popa
fimuls
ret
mov
lcall
mov
stc
add
bound
add
scas
movsl
decl
jcxz
fwait
enter
stos
scas
xchg
lock
cwtl
fimuls
stos
jle
out
mov
sub
fildll
mov
inc
in
test
push
jmp
pop
xlat
xchg
fisttpll
aaa
in
fnstenv
cltd
out
pop
test
fldcw
int3
push
mov
and
std
cltd
xor
mov
add
sahf
cmp
in
jbe
in
push
not
imul
ss
mov
mov
mov
pop
cs
cmp
cmp
repnz
cltd
sbb
inc
push
loop
rorl
mov
rol
stc
pop
add
sbb
dec
push
cld
push
pop
movsl
leave
lret
xor
jl
dec
inc
mov
mov
sbb
jle
pop
lods
or
dec
inc
idiv
test
hlt
test
and
in
pusha
hlt
in
jnp
mov
mov
or
push
movsb
jno
movsl
jl
int3
ds
insb
ds
out
xchg
popw
daa
mov
shl
lods
in
out
pop
sarb
jbe
aaa
mov
xchg
popa
mov
xchg
inc
insl
bound
rcrl
fs
sbb
stos
stos
icebp
in
or
jp
and
insb
xor
cmp
jno
and
outsl
pop
or
mov
xor
fcoml
sub
jecxz
pop
dec
dec
insb
and
addr16
xor
mov
inc
inc
and
icebp
or
pop
les
stc
imull
sbb
repnz
cs
push
aad
mov
clc
xchg
insb
mov
movsl
sbb
das
pop
les
adcb
clc
arpl
stos
mov
dec
and
cli
xor
fucomi
ljmp
outsl
lret
aam
int
mov
jb
push
hlt
inc
mov
lret
rcrl
rolb
sahf
fs
dec
jne
mov
out
lods
pusha
lds
inc
cmp
outsb
lret
sub
out
pop
xchg
adc
lret
dec
add
shll
inc
lret
mov
push
sbb
xchg
stc
outsb
sti
xchg
or
out
loop
fldt
xchg
add
mov
xchg
inc
sub
xorb
jmp
test
xor
inc
lods
inc
ret
inc
mov
adc
push
pop
jns
pop
mov
int
ret
xorl
push
cmpsl
mov
in
inc
shlb
out
ja
sbbl
in
shl
stc
aad
cmc
sbb
add
cld
rolb
mov
mov
pop
stos
cltd
adc
jmp
clc
shrl
mov
cmp
scas
scas
adc
mov
popa
rolb
lock
push
jmp
pop
scas
repnz
or
ljmp
adc
jnp
in
inc
imul
addl
daa
es
jne
dec
cwtl
or
adc
out
es
test
xchg
mov
addr16
jbe
adc
sub
jnp
mov
mov
mov
jb
lods
sarl
jno
mov
xor
outsl
fwait
or
inc
lods
movsb
cmp
daa
in
lret
pushf
in
cmpsb
xor
loop
sub
jle
jecxz
jle
pop
lret
fmuls
fdiv
mov
pop
xor
push
pop
outsl
rcrl
pop
aad
mov
add
outsb
repnz
adc
imul
and
fs
lods
sbb
mov
sahf
push
imul
rep
in
jge
push
jae
aam
fcompl
shl
adc
sti
stc
ja
jmp
out
in
dec
fs
jns
mov
or
adcl
dec
pop
xor
fadd
dec
arpl
nop
jbe
enter
scas
fsubrl
jmp
aam
and
cmpsb
cmp
pop
popa
adc
jb
aam
jge
into
mov
cli
adc
and
add
call
and
rolb
cmpsl
jle
or
shll
test
mov
jp
and
and
test
fsubp
mov
dec
push
fcoml
jo
out
enter
pop
jmp
mov
adc
or
pop
xor
push
mov
sbb
fstl
mov
add
mov
sbb
sub
dec
sub
and
ret
cmpsb
xchg
lds
inc
push
push
push
les
lods
icebp
stos
popa
nop
mov
call
cli
inc
orl
rorl
pop
jp
mov
pop
mov
lss
adc
in
negb
mov
add
ds
cld
cmp
negb
aam
xchg
loop
ds
repnz
in
mov
fstps
js
cmc
add
mov
lcall
cltd
lahf
pop
jp
aas
mov
dec
decb
mov
ja
cmpsl
mov
push
addr16
adc
inc
xor
lcall
sti
fwait
movsl
ss
sub
or
movsl
lahf
pop
in
dec
pop
notb
mov
jmp
dec
pop
push
lods
push
pusha
leave
out
push
mov
cmp
ficomps
jmp
aas
xor
ja
mov
rcll
aad
subl
xchg
cmp
dec
outsb
pop
aad
push
sub
in
cwtl
imul
add
imul
fnstenv
adc
sub
pop
and
add
jmp
iret
jl
jbe
test
cwtl
mov
nop
sahf
mov
xlat
dec
adc
scas
clc
and
or
mov
push
push
dec
cmp
xchg
sbb
fnsave
sub
fcomps
xchg
data16
and
arpl
jl
aad
push
push
fcoml
mov
js
test
xlat
push
arpl
pop
cmc
pop
clc
pop
and
into
fisttps
fdivs
decl
in
adc
decb
aaa
xor
mov
outsl
inc
stos
mull
xchg
mov
stc
jge
dec
add
adc
mov
push
dec
out
xor
xor
push
test
push
hlt
cmp
xor
mov
or
mul
cmc
mov
cmp
xchg
popf
sub
int
fwait
jl
sahf
inc
or
aas
jl
loop
sub
jl
push
cltd
pop
das
mov
notl
bound
test
cmpsb
push
add
scas
fstpt
xchg
sahf
sbb
leave
sar
shl
push
call
and
imul
cmp
pop
jmp
xchg
pop
and
sub
sub
movsb
cmp
jecxz
mov
pop
jne
inc
repnz
call
sbb
fldl
xorb
inc
int
leave
xor
addr16
mov
mov
jns
inc
fs
or
xchg
dec
aad
nop
fisttpll
dec
xor
xchg
dec
inc
jle
fwait
sub
mov
lds
lret
divb
cmp
inc
sahf
cld
roll
testb
insb
paddq
andl
push
popa
mov
cmpsl
fcomps
push
xchg
hlt
icebp
iret
cwtl
fildl
mov
jo
js
movsl
dec
js
mov
mov
faddl
aaa
jl
adc
or
adc
mov
shr
insl
xchg
hlt
inc
pop
mov
or
dec
je
xor
fsubrl
out
xor
dec
lods
jne
pop
ljmp
out
mov
in
out
sbb
pop
xchg
arpl
in
pop
jne
push
mov
icebp
add
pop
sti
jns
in
xchg
dec
push
shlb
stos
mov
in
push
cmpsl
add
insb
adc
push
lock
xchg
jnp
pop
clc
das
insl
xchg
pop
hlt
sbb
mov
loope
push
decl
in
divb
fdivrl
pop
jo
mov
jo
lods
shrb
addr16
push
in
loop
mov
mov
lods
ja
leave
clc
xlat
or
enter
sub
push
xchg
test
xor
add
mov
int
lods
adc
pop
inc
popa
add
cltd
loopne
icebp
test
adc
outsl
out
cmp
and
cmp
ret
adc
mov
dec
push
mov
xor
sbb
pop
std
std
fcmovnbe
lea
mov
add
lods
mov
call
push
jecxz
outsl
xor
jne
lret
inc
scas
nop
jmp
ret
lock
test
pop
inc
sbb
int
fadd
sub
xchg
xchg
aam
push
je
rcll
mov
and
pop
shlb
std
int
xchg
ja
mov
aam
adc
push
lcall
pop
jmp
mov
jecxz
lea
mov
mov
xchg
mov
cmpsl
or
pop
sbb
adc
xchg
or
add
stos
jae
sbb
push
jne
cmpsl
jmp
sub
jb
push
andb
icebp
jle
mull
add
pop
lcall
dec
cwtl
sub
jnp
sbb
das
mov
sub
ss
fsubp
lock
insb
adc
adc
jl
mov
ds
push
add
mul
rcrl
mov
das
data16
dec
adc
sub
push
int3
rcll
aas
mov
leave
loope
xchg
aam
movsl
mov
xchg
xor
cli
repnz
xlat
adcl
pop
in
mov
mov
aam
bndldx
mov
add
jecxz
xchg
outsb
leave
push
xchg
and
mov
test
loope
pop
pop
sarb
insb
in
nop
and
cmp
in
outsb
call
ret
rolb
in
andl
lock
dec
and
dec
mov
jp
xchg
mov
les
add
pusha
add
add
imull
pop
clc
stos
adc
xor
shrb
and
or
in
test
or
xchg
ret
sahf
mov
dec
mov
dec
add
adc
xor
and
cmp
in
mov
cmpsb
and
fwait
jns
and
ja
in
jg
js
daa
jecxz
add
cmp
inc
popf
jns
outsl
stos
std
inc
repz
ljmp
inc
xchg
dec
mov
and
rep
mov
arpl
mov
les
dec
adc
cli
mov
jns
push
mov
stos
insl
push
inc
f2xm1
repz
int
ret
sub
aaa
pop
ss
fidivrs
mov
idiv
mov
adc
mov
stos
lcall
push
cs
jmp
xchg
pop
mov
sub
dec
rol
aam
ds
shll
lret
add
sbb
fstl
xchg
sbb
int3
jae
movl
jg
in
hlt
jae
fdiv
cmp
or
pushf
or
filds
test
ja
jnp
pop
sti
enter
sahf
repz
out
ss
cmp
dec
cmpsl
movsl
cmc
pop
adc
mov
mov
push
push
xchg
inc
xchg
loop
movsb
out
adc
movsl
movsl
jg
cltd
test
in
xor
fs
mov
cmp
arpl
cmpsb
dec
in
std
mov
dec
push
mov
movl
add
mov
jno
pop
pop
popa
hlt
add
test
outsb
xchg
pop
out
mov
jno
dec
pop
dec
mov
push
movsb
out
cmp
jl
xchg
cmp
outsl
adc
xchg
arpl
lcall
test
sub
ret
dec
sarl
dec
mov
out
push
mov
push
nop
xchg
jl
scas
pop
stos
add
push
stos
test
lods
pop
dec
fwait
arpl
int
iret
jns
add
cmp
adc
xchg
cmp
or
idivb
pop
cmpsb
cmp
pop
cmp
ds
mov
popa
mov
mov
fiadds
push
cmc
nop
fs
dec
adc
inc
stc
les
or
fdivrs
lea
in
pop
insl
iret
pop
mov
loopne
cmc
push
repz
sbb
and
lcall
in
dec
movsb
repnz
push
adc
rorl
fs
xchg
sbb
sub
xlat
popf
int3
mov
xorl
leave
push
int3
adc
in
mov
mov
sub
or
adc
mov
int3
das
push
dec
sbb
cmp
lcall
dec
sbb
leave
icebp
sbbb
mov
loopne
xchg
sub
xchg
xchg
cltd
fistl
subb
jge
data16
mov
mov
or
mov
cli
mov
inc
or
std
cmpsb
loopne
inc
sub
pop
sbb
push
and
dec
add
mov
and
pop
sbb
cli
xchg
adc
lods
and
dec
das
hlt
shll
adc
inc
mov
addr16
dec
rcrb
jecxz
inc
dec
test
xor
lsl
mov
dec
xlat
negb
cmc
int3
xor
cmc
js
shlb
push
imul
xchg
xlat
addr16
lock
stos
push
dec
xchg
rcrl
mov
shlb
test
repz
ljmp
jmp
sub
xor
inc
adc
sahf
popf
clc
xchg
cs
xor
cwtl
mov
or
ficompl
js
imul
cmp
nop
inc
insb
sbb
and
sub
push
arpl
dec
jmp
mov
mov
sbb
cmp
into
mov
outsl
pop
inc
roll
cmp
mov
loopne
leave
fsubs
adc
mov
sub
xchg
sbb
sti
into
lret
push
jae
add
cmpsb
sbb
xor
fldenv
sbb
jle
or
mov
test
push
sbb
adc
xor
mov
imul
xchg
xor
add
cld
adc
xor
cmp
lds
sarb
xor
ret
sbb
xchg
daa
sub
and
iret
mov
orl
ret
cli
inc
js
fstpt
lret
andb
xchg
fmull
dec
mov
shrb
and
icebp
loop
fidivs
add
notb
int3
pop
and
jl
add
jle
sti
xlat
mov
hlt
out
mov
or
mov
mov
lods
push
js
sahf
xlat
mov
and
mov
push
jnp
mov
aaa
sbb
inc
sbb
cmp
pop
jno
arpl
repz
daa
xorl
adc
pop
mov
fidivrl
hlt
xor
daa
stos
dec
push
test
je
in
rcrb
add
scas
shrb
fimull
dec
pshufw
cld
in
insb
or
jne
cmpsl
xlat
push
sbb
dec
popa
out
add
pop
xor
mov
inc
movsl
sbb
mov
loop
lds
clc
hlt
or
mov
xor
int3
test
out
or
les
adc
addb
sbb
mov
lods
pop
and
cwtl
or
jmp
repz
xor
add
mov
je
rcrl
notb
loop
add
mov
jno
mov
and
xchg
fidivrs
mov
cmp
inc
sbb
pop
aaa
mov
scas
shlb
mov
xchg
rol
pop
fwait
adc
hlt
mov
sarl
dec
in
lds
lea
cmp
sub
and
mov
xor
sub
pop
aaa
sub
add
mov
in
je
cli
insl
imul
mov
es
mov
adc
pusha
mov
inc
dec
lret
mov
test
pop
mov
adc
xchg
jge
dec
in
inc
dec
shll
add
fists
mov
add
cwtl
sbb
dec
add
orl
insb
das
lcall
sub
dec
ret
mov
inc
pop
mov
popf
sub
adc
fadds
ror
and
xchg
jo
push
dec
mov
push
adc
jmp
xchg
jmp
xor
mov
fcomi
xor
mov
adc
lock
fwait
sbb
adc
arpl
dec
movsw
adc
push
hlt
outsl
insb
stos
inc
add
into
xor
repz
ret
sbbb
incl
hlt
in
or
ljmp
mov
loopne
fstps
mov
xchg
add
negl
sub
xchg
in
sub
or
test
idivb
mov
add
loop
cmp
pop
stos
sub
addr16
inc
mov
je
ss
inc
outsb
push
inc
push
les
or
sti
mov
mov
and
enter
and
or
or
movsb
std
ljmp
fsubs
ret
mov
lods
shrb
pop
sub
jecxz
add
and
and
mov
cmp
push
xor
sbb
mov
je
mov
insb
sub
cmovno
jge
xor
xor
sub
and
imul
push
xor
cmp
adc
jmp
mov
cld
mov
sub
sub
jp
sbb
lahf
rcrl
sbb
mov
push
mov
sub
shrb
mov
dec
cs
test
add
mov
cmpsl
loop
push
ja
inc
cld
xchg
lret
jp
out
jp
or
repz
orl
jge
repnz
add
lret
int
es
daa
cmp
frstor
sti
jle
jmp
test
mov
adc
popf
and
mov
mov
sbb
mov
pop
inc
or
arpl
mov
pusha
in
icebp
loopne
daa
xor
or
dec
mov
lret
pusha
pop
pop
jo
mov
lods
nop
mov
sbb
data16
aam
or
dec
dec
out
jno
aas
gs
sub
lret
aam
mov
xor
push
ds
outsb
ss
jno
cli
imul
sub
xor
push
std
xor
xchg
in
cmp
lret
mov
cmp
pop
cmpsl
and
mov
sub
arpl
mulb
icebp
repnz
cmp
shl
in
xlat
xorb
adc
adc
mov
imul
push
jb
repz
es
pop
rclb
test
lret
add
repz
clc
lcall
sbb
push
push
nop
je
xor
mov
popa
insl
xor
int3
add
xchg
aas
ror
dec
int
fisubrl
mov
dec
xor
out
lret
add
loopne
or
cmpsb
sarl
lock
or
mov
dec
push
fbld
into
mov
or
jns
daa
push
dec
pop
pop
test
sbb
cs
lfs
cmp
xor
xchg
xchg
enter
jg
in
mov
lds
inc
push
or
iret
int3
mov
nop
frstor
les
lods
stos
mov
repz
aad
das
jno
sub
rorl
icebp
inc
lods
std
or
clc
add
fidivl
dec
loop
iret
mov
dec
nop
lods
add
popf
sub
pop
xchg
dec
adc
cli
iret
orl
shll
jp
ret
inc
jns
popl
jg
sbb
out
pusha
shlb
sub
iret
cli
repz
clc
jmp
mov
imul
pop
or
push
jb
std
arpl
mov
add
daa
cmpsl
mov
push
xor
pop
sub
cmp
add
and
outsb
icebp
rorb
add
call
outsl
sub
or
push
jl
and
addr16
push
mov
out
clc
mull
and
gs
aas
cwtl
sub
mov
shll
cmp
mov
mov
push
push
in
inc
or
repz
sbb
enter
xchg
in
and
or
sbbb
ss
jp
imul
shr
dec
push
and
mov
push
out
jg
sub
dec
or
mov
sarl
mov
bound
std
sarl
sti
mov
outsl
mov
xor
sbb
mov
inc
pop
in
push
xchg
dec
insl
and
es
push
pop
adc
mov
add
push
arpl
ror
mov
inc
int
pop
pusha
pop
sbb
outsb
pop
into
sub
and
dec
inc
mov
pop
ds
mov
and
sub
xor
fstpt
xchg
or
imul
mov
fnstcw
scas
inc
jb
shll
xor
fldenv
cltd
aaa
lcall
push
fisttpl
mov
sub
sbb
fnstcw
outsl
and
push
lcall
sbb
arpl
aam
aam
push
insl
push
mov
inc
sbb
fabs
jecxz
cltd
sbb
mov
xchg
repnz
mov
push
pop
pop
insb
xor
sub
aam
sbb
bnd
mov
jge
lods
add
outsl
mov
daa
mov
jne
add
rolb
subb
mov
mov
adc
jne
dec
shl
inc
ljmp
into
jo
cmp
outsl
jecxz
mov
hlt
repnz
adc
je
mov
mov
gs
fistl
sti
shl
fs
cmp
xor
or
outsb
sub
push
addl
push
mov
inc
or
cld
lock
aas
push
lret
xchg
xchg
decb
adc
lcall
jo
iret
les
mov
jle
clc
lds
dec
cld
and
mov
xchg
add
cld
dec
fnstenv
sbb
xchg
out
popf
sub
pop
ja
pusha
adc
pop
and
add
ds
cmpsl
loop
imul
fwait
or
adc
or
ret
cwtl
cmp
mov
mov
pop
jno
or
sub
mov
psadbw
pushl
mov
cmc
loopne
pop
shrl
jo
push
push
repnz
push
les
adc
jne
push
add
xchg
pop
gs
xchg
and
sbb
jle
lods
outsl
popf
inc
mov
lret
jb
lds
push
jecxz
pop
loope
add
pop
rclb
pusha
cltd
fcoml
pop
sahf
sbb
lods
xchg
loopne
lcallw
call
lret
xchg
or
test
stos
mov
or
and
lea
dec
push
or
push
dec
sbb
rcll
push
mov
mov
xchg
add
outsb
lahf
test
xchg
jno
and
mov
divb
xor
push
sti
addr16
arpl
dec
pop
mov
jmp
xchg
cmp
popf
js
cmp
fbstp
aas
jge
mov
jmp
je
movsl
aas
lahf
mov
push
and
add
jb
or
bound
pop
push
xchg
repnz
lcall
das
dec
inc
cmp
mov
mov
sbb
cwtl
and
lret
pop
xchg
mov
js
xchg
xor
sbb
mov
xchg
cmp
test
jmp
fs
jge
sbb
loopne
clc
movsb
imul
clc
mov
addr16
test
mov
adc
jge
sti
adc
fsts
xor
dec
mov
inc
lret
sub
pop
and
and
lea
int3
xchg
out
into
add
push
add
xchg
test
push
mov
mov
insl
xchg
stos
add
je
insl
inc
jmp
lahf
and
sub
or
gs
lods
push
fdivrs
jns
aad
pop
popf
rolb
daa
repz
lret
out
lods
outsb
lret
cltd
out
data16
mov
fcomps
lock
lret
int
inc
loop
push
movsl
sti
nop
xor
mov
fdiv
mov
mov
int
shlb
or
icebp
movsl
imul
jbe
cmpsb
imul
fidivrl
test
mov
scas
jbe
pop
fisttpll
jp
data16
inc
enter
mov
dec
notb
dec
jge
jb
pop
in
push
lahf
inc
rolb
adc
into
out
cli
and
or
sbb
cmp
int3
jb
shlb
in
hlt
add
xchg
inc
scas
iret
mov
push
xchg
pop
mov
std
sub
push
push
pop
sub
lret
orb
data16
sti
hlt
pop
fucomp
lock
dec
mov
push
mov
sarl
dec
dec
aad
pop
dec
cli
rolb
sub
test
aas
jl
push
sbb
push
or
push
lock
jbe
and
sbb
cmp
cmpsl
mov
push
mov
sahf
mov
lea
cs
add
cmc
jmp
into
les
pop
and
iret
inc
pop
push
ljmp
popa
aam
out
loope
and
jbe
mov
add
dec
je
push
inc
pop
fsubr
shr
push
scas
sbb
add
ja,pt
loopne
dec
orb
test
cmp
imul
popf
dec
inc
sub
xor
dec
mov
pop
call
pop
rol
std
fimull
ret
pop
je
les
not
pop
dec
adc
repz
xchg
and
aas
mov
scas
je
cmp
fbld
dec
sub
lods
addb
out
inc
fnstenv
sbb
lods
rol
mov
adc
mov
mov
jbe
mov
xchg
sarl
add
cmpsl
dec
mov
xchg
cmp
adc
movsl
ret
int
ss
inc
das
addr16
out
lret
push
or
push
ret
xchg
das
lds
adc
shll
cmp
stos
dec
cmp
or
push
lret
fstpl
jb
stos
or
or
fisttpl
shrb
jnp
xorb
jns
pop
or
adc
mov
add
pushf
mov
xchg
sbb
lcall
adc
cmp
xor
cmpl
mov
mov
cs
aad
outsl
push
ret
push
orb
shrl
inc
lret
sti
out
nop
and
ds
lds
push
stos
mov
lock
jge
xor
repz
cmpb
xchg
call
enter
sarb
ds
aad
sbb
loopne
jg
pop
xlat
enter
pop
popa
mov
cmp
push
mov
xchg
cmp
or
repz
push
jge
in
cmp
jl
or
push
and
jge
rcrl
push
mov
adc
lods
shr
mov
in
sub
test
imul
psubusw
push
and
bound
and
adc
fcmove
syscall
test
push
push
rcr
add
nop
int
mov
fdivs
pop
in
lds
cltd
xor
bound
mov
jne
xchg
cltd
in
hlt
jle
lods
mov
cmp
dec
bound
mov
sub
adc
arpl
lods
or
ficoms
fadds
xor
jnp
xchg
or
add
ror
sbb
xchg
iret
hlt
pop
insl
jns
push
xor
or
test
mov
sub
xor
or
jno
repz
adc
jg
sub
in
jge
adc
ja
in
inc
icebp
inc
addr16
ja
out
xor
adc
mov
mov
aas
repnz
ljmp
rcrb
pop
push
outsl
cmp
push
xor
pop
or
fmuls
push
dec
xor
enter
shrb
mov
mov
aaa
fcoms
pop
outsl
xchg
test
pushf
mov
imul
push
into
push
mov
cmc
mov
and
mov
cltd
int3
jno
sbb
inc
push
push
adcl
xchg
jmp
test
push
add
mov
xlat
cmpsl
stc
dec
sti
lcall
jne
repnz
popa
test
mov
test
or
rorb
aaa
pmovmskb
les
push
scas
jmp
jo
lds
inc
or
fisubrs
loope
insb
mov
inc
xor
in
xor
cwtl
mov
mov
xor
dec
push
lea
add
and
loope
ljmp
ljmp
mov
pop
cmp
sub
mov
inc
adc
scas
sti
cmp
push
mov
fbld
sbb
testl
push
loop
xor
out
test
leave
add
negb
iret
inc
repz
pop
cmp
sbb
inc
or
in
das
jg
bound
test
xchg
dec
mov
xor
pop
mov
cmp
push
or
fimuls
mov
inc
mov
aad
add
lods
xchg
mov
jo
ljmp
cmc
ret
pusha
add
adc
cmpsb
loopne
add
fisubl
inc
into
cmp
cmp
mov
adc
push
inc
ror
mov
rcrl
and
xor
jecxz
jb
cmpsb
insl
shrl
scas
fst
inc
fsubrl
push
xchg
in
jle
icebp
je
xlat
mov
push
sbb
or
sub
lret
aaa
mov
in
cwtl
or
das
orb
call
push
aaa
inc
pminsw
lret
cs
add
lret
push
stc
pop
subl
lret
add
sub
jmp
gs
mov
inc
decb
fs
xchg
mov
sbb
stc
mov
icebp
call
xor
jp
minps
xchg
ja
popa
mov
aas
inc
lahf
enter
jbe
andl
mov
rcrl
dec
cmpsb
bnd
cltd
xchg
dec
fisttps
jne
outsb
repz
mov
inc
out
sti
inc
xchg
adc
stc
fcoms
and
push
pusha
lret
adc
js
js
mov
fdivrs
sbb
inc
push
push
mov
xchg
xchg
mov
rolb
cmp
sbb
out
popa
mov
dec
repnz
js
adc
jbe
or
decb
mov
cwtl
sbbb
ljmp
test
push
dec
inc
rcll
das
adc
sbb
fsubl
mov
clc
cwtl
test
std
leave
das
pop
sbb
adc
dec
in
imul
enter
scas
pop
pop
movsl
addr16
add
push
nop
scas
lcall
pop
cmc
add
xlat
sbb
pop
add
in
lret
lahf
js
and
or
or
inc
hlt
and
adc
pushf
mov
addb
test
or
add
push
jns
dec
add
pop
scas
mov
pop
imul
ja
pop
dec
xchg
or
xor
jl
push
clc
repnz
xor
sub
in
pop
les
cmp
jne
fucomi
and
jns
lea
push
insb
push
mov
push
lret
out
xor
mov
js
mov
hlt
scas
sub
and
push
js
in
nop
movb
jns
push
test
movsl
in
loopne
int
pop
dec
sub
push
sub
repnz
icebp
jae
mov
cmpl
xor
in
pop
jecxz
xorl
mov
mov
fidivs
lds
sbb
loop
shll
sub
mov
add
adc
xlat
dec
adc
jg
dec
mov
xchg
loope
jno
clc
pop
mov
cmpsl
mov
xchg
pop
aad
xor
adc
repnz
cmp
mov
dec
icebp
addr16
dec
dec
das
jo
data16
dec
add
cmp
jns
xchg
je,pt
ret
ss
cmp
jecxz
adc
mov
shlb
add
clc
sbb
xchg
mov
std
lret
mov
xchg
cmp
repz
fisubs
sub
sub
pusha
cmp
popa
addr16
pop
icebp
addb
pop
cmp
xchg
stos
out
xchg
dec
mov
and
inc
adcl
test
and
and
jmp
xchg
in
cmp
adc
cmp
jns
mov
inc
jle
inc
or
sbb
push
rcrl
push
ja
pop
or
push
enter
and
cmp
add
xor
ljmp
insl
jge
jae
push
add
xor
mov
scas
movb
inc
adc
mov
push
aam
sub
clc
mov
jno
pop
and
idivl
insb
pop
jmp
pop
mov
test
jg
outsl
testl
bound
pop
mov
pop
fs
aam
addr16
mov
fcompl
sub
and
fcmovnu
popf
pop
mov
sub
imul
or
fisubl
aaa
mov
ds
int
mov
test
int
mov
or
mov
test
pop
or
imul
inc
mov
or
popf
lock
xor
xchg
and
or
cmp
mov
mov
shl
mov
mov
imul
andb
mov
mov
fisttpll
pusha
push
sub
leave
incl
pop
fstpt
xchg
jnp
iret
add
pop
enter
out
push
jg
fistpll
jae
xchg
in
mov
pop
out
dec
jge
outsl
test
jns
movsl
fsubrs
repnz
pop
lds
out
xchg
scas
pop
rcl
dec
arpl
mov
rolb
arpl
scas
xchg
inc
jo
pop
int3
push
lock
or
adc
push
bound
cmp
addb
add
scas
fcmovnbe
cmpsl
or
imul
popf
mov
imulb
test
orb
push
push
lret
inc
leave
dec
add
push
mov
scas
push
sub
dec
sarb
fwait
sbb
adc
inc
ds
into
pop
xor
out
add
mov
sbb
scas
jp
js
xor
divb
mov
jmp
inc
lods
jl
inc
imul
jne
je
cmp
mov
mov
lahf
jg
mov
aam
push
loopne
or
push
int3
jne
sbb
popf
div
mov
jmp
and
push
outsl
inc
les
out
fsubrs
cmc
ja
mov
xchg
pushf
nop
mov
push
adc
movsl
lcall
or
into
lock
pop
cmp
add
cmpl
clc
pop
xchg
xchg
subb
jo
subl
out
inc
in
jmp
or
imull
mov
cmp
jle
or
cld
or
mov
mov
popl
pop
ret
mov
les
stos
xchg
call
or
ficompl
xchg
test
xor
or
sbb
and
pop
xor
ret
in
push
xor
pop
push
mov
dec
scas
push
std
inc
adc
mov
jne
into
add
call
dec
xor
aaa
adc
dec
pop
sub
xchg
pop
sub
add
test
in
xchg
and
loope
push
lods
cmp
mov
cmp
ss
rol
mov
xchg
dec
pusha
cmp
lea
cmpsb
aaa
dec
mov
in
add
and
loop
inc
adc
ret
test
mov
dec
int3
jmp
sub
xchg
adc
and
pop
sbb
push
cs
nop
jbe
cld
mov
mov
mov
pop
sub
mov
xor
pop
ljmp
mov
xor
xor
bound
out
jle
cmpsb
inc
mov
jae
addr16
lods
test
pop
pop
sahf
inc
dec
mov
xor
adc
push
or
add
js
push
repz
adc
clc
in
or
mov
inc
sub
xor
jle
mov
lds
mov
ss
rcrl
imul
cmpsb
jecxz
mov
rcl
stc
pop
add
les
jne
jo
shrl
mov
cmp
xor
jle
adcl
and
in
leave
pop
jl
test
mov
jno
ds
push
sub
push
jne
mov
push
fisubs
cmp
dec
int3
xor
cwtl
jns
sub
push
push
mov
nop
rolb
sti
divl
shll
ficompl
xor
pop
loopne
mov
mov
push
push
add
inc
adc
mov
and
add
jecxz
popf
xchg
shrb
push
mov
jo
rcrl
in
jp
push
in
xor
popa
push
push
jle
cmp
mov
das
jae
pop
clc
cmp
popf
testl
nop
movl
insl
sbbb
mov
xchg
lcall
mov
loopne
ret
ficoms
stos
mov
xor
in
mov
int3
lds
jge
mov
cmp
jo
lods
repz
aaa
sub
pop
add
pop
insb
dec
mov
stos
gs
cwtl
les
movsl
jae
sahf
out
cli
je
mov
cmc
fcomip
mov
fisttps
in
and
sbb
mov
mov
xchg
pop
inc
push
test
sub
pop
lods
xlat
in
repnz
repnz
movsb
stc
jp
adc
mov
fldt
push
adc
sub
and
sahf
cmp
pop
or
mov
jnp
mov
lea
jo
jl
aad
mov
add
dec
jb
jns
or
imull
cmp
mov
lods
out
sub
or
std
test
mov
fs
std
jp
repnz
adc
fs
jg
lods
pop
addl
mov
je
out
arpl
mov
mov
jbe
out
daa
jo
jae
jmp
and
test
std
mov
cli
mov
clc
pop
enter
out
out
out
sub
xor
cmp
mov
int
sbb
cli
inc
push
push
lock
sub
in
call
sub
cmpsl
xor
aaa
mov
sbb
sub
sarb
out
movsl
or
fsubs
out
imul
lret
out
xchg
and
sub
fdivrp
xchg
lds
push
push
xor
or
or
mov
ja
nop
pop
insl
test
mov
dec
push
and
fsubs
inc
push
scas
cmpsb
in
mov
mov
xor
push
push
in
movsb
dec
mov
out
fwait
adc
xor
loop
nop
or
icebp
add
xor
xchg
mov
pop
shlb
dec
push
test
pmaddwd
in
jb
and
mov
push
fidivrs
loop
movsl
mulb
and
dec
push
dec
dec
jmp
and
test
inc
and
call
in
cld
loopne
stos
cld
and
inc
lock
test
insl
fbld
push
in
mov
mov
stos
and
loopne
cmp
cwtl
xorl
fcoml
testl
idiv
cs
pop
insl
aam
adc
pop
jg
in
popa
dec
loop
adc
scas
mov
bound
pop
adc
push
out
mov
jecxz
mov
inc
jge
xor
pop
repz
sti
insl
out
push
icebp
and
dec
xor
xchg
js
loopne
movsb
jbe
inc
jnp
push
pop
mov
shlb
ljmp
sub
mov
mov
xlat
ret
les
sub
clc
push
push
xchg
xlat
and
decl
mov
lea
adc
sub
test
imul
mov
xor
xchg
ja
adc
pop
and
pushf
or
cmp
sbb
imul
lods
lods
pop
adc
jle
cmpsb
push
pop
lods
sbb
outsb
call
into
fistl
xchg
sti
sub
xor
scas
add
sahf
mov
cmp
mov
arpl
xor
bound
pop
pop
cs
jmp
xor
push
ljmp
lahf
sbb
out
mov
cmpb
push
es
ret
dec
into
clc
rcll
adc
mov
cmpsl
popf
addr16
sub
nop
das
pop
aaa
test
xchg
mov
mov
sub
bound
and
inc
jp
mov
xor
inc
es
imull
fs
test
push
add
ret
fs
cs
xchg
inc
mov
mov
and
sub
adc
nop
lcall
mov
stc
pop
mov
xchg
push
iret
or
ja
add
and
adc
outsl
xor
mov
fidivs
dec
ja
inc
std
or
jae
xchg
pop
mov
dec
push
out
clc
jo
ret
mov
ret
out
sub
popa
sti
sub
mov
lret
pop
push
or
out
call
push
jne
shlb
movsb
movsl
int3
adc
xor
lret
sbbl
pop
mov
mov
or
roll
outsl
popa
shrb
enter
add
jmp
js
add
test
imul
sub
stos
mov
cmp
mov
arpl
in
aas
pop
stc
dec
jb
je
loope
mov
rorl
xchg
lret
xor
popa
sub
xor
sbb
ret
mov
dec
jecxz
jns
jns
jecxz
adc
push
loope
ss
sar
lods
stos
test
xchg
cmp
pop
add
sub
dec
mov
jg
pop
test
sahf
push
dec
hlt
scas
bound
imul
enter
sub
dec
popa
push
cld
xchg
lods
les
push
mov
repz
inc
cltd
adc
adc
pop
je
inc
lods
xchg
hlt
or
add
ds
xor
push
push
xor
push
fwait
in
sbb
xor
scas
lret
inc
or
xchg
sub
mov
xor
jecxz
or
popa
add
movsl
ja
in
fbld
je
or
inc
mov
mov
or
daa
pop
rcrb
sbb
xchg
rorl
iret
xor
mov
retw
push
test
aad
repz
dec
rcrl
dec
adc
or
arpl
push
pop
pop
mov
shlb
sub
inc
ljmp
xchg
aaa
clc
ja
and
push
sbb
call
sahf
je
jl
cmp
adc
xchg
push
push
xchg
sub
mov
cmpl
lock
or
xchg
or
push
es
outsb
fsubrs
int
sbb
xor
stos
and
fdivrs
movsb
fadds
std
sbb
or
dec
ja
aas
rolb
int3
cltd
cwtl
sbb
mov
test
push
aad
mov
mov
les
fistpl
jmp
test
xchg
and
dec
cmpsb
lcall
lds
cmpsb
push
lea
inc
es
jmp
lds
xchg
notl
xchg
jecxz
xor
inc
mov
addr16
jne
sub
scas
mov
inc
push
push
out
xlat
pop
test
jge
sbb
test
jge
fsubl
push
pusha
inc
insl
xor
sbb
dec
iret
rorb
cmp
xor
adc
cmpsl
lods
out
in
mov
xchg
pop
outsl
jo
inc
add
adc
sub
sbb
and
or
add
xor
xchg
lcall
dec
sub
sub
sub
push
push
mov
rorl
xchg
mull
mov
mov
fsubrl
mov
ret
subb
mov
jg
loop
mov
pop
cmp
pop
idivb
repz
int3
mov
or
jle
jp
adc
clc
pop
push
dec
xor
xchg
in
and
je
es
cmc
data16
mov
mov
fwait
and
inc
popf
repz
xor
stos
mov
outsb
push
sti
outsb
shlb
inc
mov
aas
insl
or
xchg
sbb
cld
xor
pusha
daa
and
mov
xlat
faddl
mov
push
movsl
push
pushf
jg
and
add
jmp
inc
inc
push
push
mov
iret
cmpsl
shll
lcall
sbb
or
pop
aam
and
push
cmpsb
xchg
loop
mov
outsl
pusha
push
out
push
mov
ret
add
dec
mov
mov
xor
and
stos
fcomps
add
pop
or
cmp
ja
push
pop
dec
mov
scas
inc
mov
je
fnstenv
hlt
ss
sub
jae
sub
xor
out
enter
popf
pop
lods
outsl
jge
nop
push
js
fs
pop
popf
xchg
or
repnz
movsl
push
pusha
loope
sbb
mov
cmc
jbe
dec
push
push
cmovge
imul
cli
std
add
dec
xor
mov
aad
push
mov
in
mov
pop
dec
adc
loopne
fwait
xchg
pop
fstl
ret
xor
addr16
inc
mov
xchg
jae
inc
loopne
imul
dec
push
sbb
movsb
and
or
in
xor
insb
lea
aad
pop
adc
sbb
jae
sahf
cmpb
stos
push
or
fidivrs
adc
mull
dec
push
push
add
ljmp
mov
andl
dec
arpl
xchg
jae
add
sbb
out
jne
dec
mov
test
pop
jns
lret
out
cmc
sub
jo
lods
popf
push
pop
mov
int
je
aaa
and
inc
nop
xchg
fsubl
test
enter
data16
bound
push
shlb
cwtl
orb
add
mov
jg
js
xchg
push
xorl
in
imul
cmc
and
lock
mov
adc
cs
out
sti
xchg
cmpsb
xchg
jns
aaa
inc
leavew
mov
adc
mov
jmp
push
mov
mov
andl
repz
cmp
or
pop
push
pop
sub
cmc
adc
dec
iret
out
pop
aaa
icebp
push
repnz
jno
push
ret
pop
mov
lea
icebp
push
adc
movsl
call
arpl
shll
pop
add
je
mov
sub
and
inc
sub
xor
das
bound
mov
xchg
jmp
dec
loope
stos
out
sbb
inc
mov
mov
imul
mov
mov
mov
lahf
xchg
push
sbb
andl
icebp
cmpsb
std
into
pop
icebp
int
data16
out
pop
fwait
jle
not
std
test
inc
mov
or
nop
xlat
cmp
mov
jbe
push
movsb
testl
xchg
mov
lea
pop
adc
pop
mov
pop
fidivs
add
xchg
mov
inc
leave
mov
scas
rorl
or
in
imul
inc
ror
xor
cmovb
cmpsb
lods
xor
lds
push
stc
out
cmp
pop
mov
push
add
lods
popa
scas
inc
and
insb
test
test
jecxz
test
aaa
pop
cmp
inc
xchg
mov
inc
mov
dec
push
into
lods
rolb
sti
fdivrs
adc
imul
jne
dec
xchg
or
ja
mov
mov
andl
aam
cmpsb
xor
repnz
mov
vmwrite
mov
push
sub
popa
mov
insl
dec
cmp
inc
sub
add
pushf
cltd
xchg
mov
mov
mov
and
aaa
outsl
jl
fstpt
xlat
test
iret
sbb
out
inc
test
in
rolb
outsl
mov
add
sar
mov
add
fdivl
sbb
dec
push
rcr
push
jbe
orb
stos
bound
pop
push
add
shll
pop
fsts
jecxz
iret
xor
sub
lcall
aam
lds
mov
xchg
fdivl
and
fwait
and
cwtl
jl
sbb
insb
mov
xchg
lock
pushf
add
popf
add
xchg
mov
push
mov
dec
xchg
into
imul
test
dec
jecxz
inc
rcrb
stos
push
inc
loope
pop
mov
fstl
or
adc
jecxz
jecxz
daa
shlb
stos
test
mov
xor
mov
xor
push
cmc
loopne
fcmovb
pop
scas
jnp
fisubrl
lret
fstps
in
in
mov
gs
test
add
and
xor
adc
jmp
mov
aad
stc
xor
mov
push
mov
dec
mov
mov
dec
jno
cwtl
sahf
xlat
ds
inc
xor
dec
cmp
pop
rcr
jge
call
jbe
and
divb
stos
mov
dec
imul
inc
sub
lahf
jne
pushf
fistpl
dec
push
popl
mov
cmp
mov
or
add
hlt
mov
in
dec
mov
aad
xchg
repz
xor
xlat
in
add
aad
and
lods
sbb
mov
add
pop
jnp
cmp
pop
xchg
loopne
std
mov
aaa
fcoml
loope
dec
xchg
popa
js
aam
fisubl
outsb
popf
inc
popf
popl
loope
into
sti
dec
or
daa
in
mov
jno
retw
imul
stos
pop
rcll
clc
pop
mov
dec
pop
adc
mov
inc
pop
mov
add
inc
jb
xchg
icebp
mov
lea
movsl
mov
inc
lods
jmp
sbb
pop
push
ljmp
out
jle
adc
aad
and
push
call
mov
test
add
sti
dec
adc
fistpll
mov
cltd
mov
aas
sbb
sub
stc
das
and
jae
mov
xchg
outsb
push
jns
int3
jne
divl
mov
into
in
iret
pop
push
lods
das
push
jb
lret
das
inc
xchg
fbstp
xor
lods
jecxz
or
scas
mov
sub
ret
and
dec
test
aam
jno
mov
ret
out
dec
lods
cmp
mov
bts
cmp
jns
loopne
lahf
std
xchg
cmp
mov
and
adc
jp
jns
cmp
cltd
loope
lods
loop
hlt
inc
ror
fs
test
xchg
sbb
sbb
aam
orl
adc
js
xchg
push
out
cmc
pop
inc
pop
sub
out
sbb
pusha
out
inc
inc
pop
lret
imul
mov
add
cmp
inc
into
and
ss
jle
cmpsl
jbe
lcall
pushf
cmp
dec
adc
sub
in
xchg
mov
test
out
lods
adc
mov
pop
cltd
out
mov
mov
test
lods
out
clc
cmp
inc
shrb
movsl
imul
inc
xor
sub
jg
repz
mov
in
xor
notb
lahf
jmp
add
addb
int3
adcb
ss
test
loop
or
ja
mov
inc
call
mov
mov
fimuls
xchg
aam
outsb
add
cmp
xchg
add
add
jp
cmp
sub
mov
outsl
repz
sbb
in
jb
and
jl
outsb
inc
cmpsl
aas
mov
movsl
adc
pop
mov
pushf
cli
out
mov
sbb
out
jno,pn
or
in
pop
imul
rclb
mov
inc
rolb
mov
push
pop
fistpll
sti
orl
fwait
xor
test
shrb
gs
fsubrs
xchg
and
pop
in
xchg
pop
mov
xor
movsb
jno
arpl
xor
movsl
or
adc
inc
mov
mov
jmp
inc
shlb
sub
sub
mov
sbb
sbb
xchg
push
adc
jns
sub
or
fstpt
lretw
mov
loop
aas
xlat
movl
subb
ficoms
shr
fucom
aam
pop
mov
mov
rcrb
les
sub
mov
cld
xchg
int
nop
sub
fdivs
jmp
pop
xor
stos
test
and
sbb
sbb
xchg
sbb
sbb
mov
pop
icebp
sbb
push
test
loopne
out
mov
lods
inc
xchg
insl
inc
push
pop
inc
inc
movl
iret
sub
add
inc
ret
xchg
lcall
mov
arpl
jl
push
adc
repz
mov
or
mov
mov
ds
leave
dec
sbb
lock
mov
std
shll
je
testb
popf
shll
adc
ss
rol
push
jns
out
and
sahf
mov
or
xchg
mov
inc
adc
test
adc
mov
lahf
and
popf
sbb
jecxz
jns
inc
repnz
jne
adc
cs
mov
push
movsb
xor
cmp
dec
mov
sbb
add
cmc
add
aaa
mov
cmp
fcoms
pop
sahf
cmp
jge
scas
dec
jbe
loopne
fcomps
movsl
push
xor
or
outsl
add
pop
mov
mov
fistps
sahf
sbb
clc
sbb
jae
mov
or
in
mov
rcr
mov
and
lahf
xchg
push
mov
jbe
inc
das
xchg
jnp
loopne
fs
arpl
aas
jp
gs
or
gs
mov
in
aam
jno
in
adc
inc
xchg
sub
adc
lahf
cmc
push
jl
cmpsl
cmp
cmpsl
mov
call
daa
stos
repnz
lds
lods
lds
pop
scas
insl
lahf
inc
in
repnz
lcall
add
xor
add
lcall
outsb
and
mov
int3
push
test
xor
cmp
fcmovnbe
xchg
ds
and
jnp
push
push
fsubs
dec
adc
add
sbb
jae
leave
insl
jne
shrb
pop
push
outsl
xchg
pushf
sub
and
in
adc
cs
mov
cmp
push
mov
outsl
pop
jg
xchg
sbb
adc
clc
inc
mov
inc
jae
cmp
cmp
jge
cmp
sub
push
pop
aas
filds
js
enter
and
fs
sub
int
pop
aam
iret
test
mov
popl
jae
sub
mov
xorb
in
jbe
inc
mov
push
and
leave
push
xor
outsb
adc
add
pop
sti
xor
clc
mov
out
xchg
sbb
in
sbb
stos
stc
ljmp
pop
mov
jb
addl
pop
mov
mov
pop
pop
pop
out
or
rorb
cmpsl
xlat
aad
ret
push
int3
inc
push
sbb
adc
or
mov
addr16
jnp
jge
test
pop
cmp
and
or
inc
or
gs
jne
xor
xchg
xchg
inc
imul
cwtl
add
and
in
loopne
adc
and
ss
add
out
inc
add
xlat
mov
xor
lods
stos
mov
out
test
mov
mov
push
dec
or
ss
repnz
and
sub
adc
mov
dec
shll
pop
pop
sub
jb
adc
inc
cmc
push
mov
xchg
loopne
in
pop
jp
mov
jnp
shll
lds
enter
jbe
lods
jb
push
dec
and
cmp
outsb
lret
push
mov
jle
cli
sub
pop
cmpb
fcmovne
adc
cltd
movsl
repz
icebp
fcomps
sahf
pop
fildl
mov
jae
movsl
int3
lahf
andl
adc
in
adc
hlt
jno
xlat
and
lahf
jnp
push
push
je
mov
mov
and
and
mov
inc
add
or
fwait
mov
cmp
arpl
lds
mov
pop
cmp
pop
mov
cmp
add
xchg
fidivl
notl
int
int3
mov
cld
and
add
mov
push
dec
es
inc
sbb
lods
and
aam
mov
cmp
ret
imul
int
enter
xor
push
loop
test
pusha
xor
mov
mov
push
sahf
shlb
cmp
sub
and
popf
xor
mov
pop
nop
ficomps
inc
mov
cmp
lock
shlb
daa
enter
rcrb
dec
les
pop
stos
notl
scas
mov
or
inc
adc
loopne
mov
add
rorb
ljmp
das
int3
repz
adcl
into
inc
jo
xor
jo
addr16
call
pushf
inc
lock
cwtl
cs
and
lahf
cli
or
push
dec
dec
cld
loopne
sbb
inc
leave
scas
sbb
dec
mov
or
cmp
imull
roll
or
jnp
fists
arpl
sahf
lea
add
fs
dec
xchg
xor
pop
adc
jns
inc
mov
aaa
push
and
jnp
ret
in
imul
jno
mov
add
pop
testb
adc
push
cmp
out
loopne
pushf
add
and
or
cmp
jae
mov
inc
push
jg
xor
sbb
pop
add
insb
subl
aaa
insb
lahf
and
mov
and
sub
clc
mov
iret
in
ss
in
jecxz
ret
cld
pop
add
inc
push
add
push
sbb
pop
cmp
sub
aad
mov
add
mov
mov
jne
sub
into
lcall
mov
xchg
jmp
imulb
pop
jne
xor
mov
add
push
jl
cmp
loope
cmp
xchg
sub
inc
in
data16
fldcw
sbb
rcrb
sub
js
xchg
test
fstpl
dec
sub
mov
sub
xor
ja
gs
psrlq
jae
and
pushl
inc
mov
jno
pop
pop
inc
sbb
jp
int
sub
mov
rcr
pop
jae
xchg
movsb
daa
sti
push
stos
adc
adcb
fsubs
dec
mov
mov
sub
sahf
mov
mov
leave
cmp
push
shl
pop
pop
push
xchg
addl
imul
cmc
mov
sbb
dec
test
stc
repz
jg
add
mov
icebp
dec
stc
sti
pop
stos
dec
jl
in
cld
pushf
test
sbb
fwait
jns
inc
insl
addb
lock
push
adc
push
bound
insl
sub
out
pop
shrl
stos
jbe
add
shlb
mulb
cmp
sbb
push
xchg
out
in
jp
sbb
adc
cmc
push
mov
lods
mov
decl
xchg
cld
sarl
idiv
jle
pop
jns
call
mov
icebp
push
mov
ljmp
shll
mov
loopne
push
and
adc
and
movsb
out
pop
outsb
jmp
andl
dec
loopne
pop
jecxz
cmpsl
bound
push
jmp
and
loope
sub
cli
aaa
xlat
adc
test
in
stc
xor
cmc
pop
int
add
les
mov
jle
push
addr16
cmp
insb
inc
shlb
inc
fs
daa
or
cs
mov
in
jo
inc
push
clc
loop
mov
out
aam
lret
addps
dec
push
lods
sub
add
xor
inc
xor
pop
mov
out
shlb
lret
call
inc
lock
loop
imul
lret
outsb
dec
inc
pop
aaa
xchg
add
inc
loopne
and
or
inc
sbb
cwtl
push
mov
inc
mov
dec
or
cmc
test
mov
ret
push
adc
xor
jne
dec
aad
cmpsl
iret
ljmp
jb
xchg
ret
inc
mov
test
cmp
loopne
lea
inc
gs
sbb
xchg
bound
loop
leave
hlt
dec
or
xchg
arpl
mov
movsl
ja
jne
jns
test
fsubrs
mov
imul
or
test
sub
push
push
pusha
out
lret
and
xor
testl
repnz
andb
cmpb
das
jae
sbb
and
stos
sbb
fwait
sub
jae
mov
mov
cs
push
fcomp
pop
add
cmp
add
fsubs
mov
mov
sahf
ja
pop
pop
arpl
shlb
test
ja
daa
test
pop
push
roll
dec
jbe
and
ss
cwtl
lea
and
inc
mov
lock
sarl
push
jae
jb
mov
xor
inc
adc
out
push
mov
cmp
xor
mov
sub
pop
dec
push
cmp
call
dec
fsubrs
inc
lret
inc
mov
sbb
pop
in
and
jno
out
popf
imul
and
inc
sub
adc
xor
hlt
lret
scas
mov
sbb
rolb
scas
jbe
out
movsb
and
mov
mov
test
shrl
aam
cwtl
mov
insl
push
dec
inc
inc
lahf
ja
inc
clc
mov
or
sub
mov
imul
inc
and
repz
fwait
mov
mov
jmp
cmp
test
data16
repz
mov
jle
imul
ds
rorb
dec
cwtl
hlt
paddw
push
scas
push
stc
mov
arpl
mov
or
mov
sarl
stos
fmul
testb
sbb
push
or
push
in
pop
push
xchg
mov
int
pushf
sub
hlt
leave
popa
adcl
fistpl
adc
test
xchg
push
ja
adcb
jbe
mov
add
or
dec
inc
movsb
mov
pop
repnz
sbb
lret
adc
mov
outsl
jae
lock
pushf
mov
and
shr
in
leave
adcl
imul
add
popf
popa
iret
lock
mov
out
xor
cwtl
inc
dec
push
pop
mov
xchg
mov
les
mov
mov
fcmovnu
inc
sbb
int3
cld
popa
cld
pop
int3
aam
xor
outsl
leave
loop
sbb
cs
ret
push
sbb
xor
cmc
cmp
outsb
and
sahf
mov
push
mov
neg
cli
xchg
dec
fdivrp
sbb
mov
push
pop
and
mov
fisubrs
arpl
jmp
pop
int
jno
int3
jecxz
adc
scas
loop
push
fistpl
test
arpl
sbb
add
idivl
sti
mov
ss
cld
add
cs
xor
jns
cmc
pop
in
pop
sub
aad
xor
dec
mov
fs
in
ja
out
insb
dec
cmp
scas
scas
or
jmp
decl
cmpsl
daa
adcl
jle
jecxz
xchg
lods
adc
or
push
outsl
mov
icebp
add
push
add
pusha
stos
sbbl
xor
cmpsb
and
test
add
dec
sbb
cmp
addr16
mov
iret
std
out
in
push
adc
jp
int3
mov
and
inc
and
arpl
shrb
mov
test
lret
jp
or
cltd
adc
aam
test
and
aas
push
cltd
cwtl
dec
dec
shll
ret
rorb
pop
popf
or
sub
clc
cmc
pop
xchg
jmp
add
inc
jo
cld
pop
cwtl
and
xchg
mov
mov
pop
cmc
sub
xlat
sbb
stc
jge
fstpt
sub
dec
xor
mov
leave
pop
mov
and
cltd
cmp
ficoms
dec
shl
aam
dec
inc
inc
pop
add
pop
push
mov
movsb
movsb
test
jg
jmp
push
in
test
xor
movsb
dec
or
dec
test
out
xchg
xor
xor
add
ds
or
jg
popf
and
inc
outsl
pop
into
mov
stos
mov
xor
push
jnp
sbb
insb
mov
mov
flds
cmp
sti
or
rorl
out
cwtl
dec
jae
xchg
mov
imul
push
mov
cmp
movsb
mov
enter
rcrl
sub
out
loope
xchg
lods
imul
je
mov
and
pop
gs
ficoml
popa
shr
loop
or
and
cmp
ret
fstpl
out
test
dec
shll
outsb
addl
and
dec
leave
out
xchg
sub
lock
daa
pop
mov
fs
add
int3
sub
sub
testl
sbb
enter
mov
lcall
subb
mov
xchg
mov
mov
mov
scas
ret
push
adc
outsl
cld
mov
fnstenv
cmpsl
and
out
xorb
mov
hlt
or
fistpll
int
xchg
dec
bound
ds
js
or
xlat
jmp
mov
sub
das
lock
mov
lods
fldenv
fwait
fs
iret
mov
mov
push
jns
jae
dec
inc
mov
xchg
pop
dec
sbb
pushf
mov
add
xlat
xor
sub
sbb
daa
jnp
outsl
je
pushf
cwtl
dec
loop
pop
lret
dec
mov
gs
sbbl
addr16
aam
sbb
push
fs
pop
scas
ret
loopne
lods
jns
gs
stos
push
and
out
inc
adc
dec
or
dec
cmpsb
jb
loopne
adc
loope
xchg
das
push
push
sub
pop
mov
add
mov
pcmpeqw
popf
insl
add
xor
enter
xor
jg
mov
sahf
mov
rolb
jnp
jp
cli
mov
push
hlt
fstpt
daa
stc
or
scas
add
jmp
adc
movsl
push
sti
mov
sbb
jnp
mov
sbb
and
lret
fwait
pop
or
add
bound
or
imul
lret
pop
mov
pop
lret
mov
outsl
lret
mov
cmp
out
stc
loopne
xchg
xor
xchg
lods
xchg
or
mov
addb
shr
test
and
push
push
inc
fdivs
sbb
inc
mov
lods
adc
in
enter
sbb
outsb
pop
lds
cmp
lock
lds
xchg
xchg
inc
subb
test
dec
lods
pop
fbld
mov
xor
mov
xor
xchg
stos
mov
xor
mov
dec
lcall
fwait
mov
push
pop
or
das
icebp
inc
adc
mov
xchg
es
pushf
inc
out
cltd
sbb
fidivl
pop
ljmp
push
add
fsubrp
mov
cs
leave
push
cmpb
in
inc
out
pop
cld
push
cwtl
mov
mov
mov
addr16
sar
cmc
mov
nop
inc
out
mov
cmpsb
mov
or
fsubl
mov
and
xor
lods
scas
pop
inc
fcmovnbe
xchg
lcall
scas
jo
shrb
int
inc
cmp
xchg
ljmp
into
sbb
lods
loope
movb
mov
cmp
and
ret
sbb
lods
sub
xor
add
sti
into
outsb
popa
pop
sti
adc
mov
lds
pop
mov
xor
cmp
rolb
jae
cmpsb
aad
sbb
push
shll
push
out
jns
lea
xchg
cli
js
scas
sahf
adc
stos
ja
mov
aaa
sub
pop
mov
jno
hlt
push
cmp
xorb
mov
ds
cmp
add
or
mov
xor
mov
lret
ror
or
in
pop
mov
imul
push
fwait
mov
xor
cmp
leave
xorb
sahf
hlt
dec
out
fwait
into
jg
loopne
mov
lods
or
in
ficoml
jmp
fidivl
jo
ret
add
repz
mov
into
sbb
lock
sbb
xor
inc
adc
dec
out
mov
stc
fwait
dec
jecxz
addr16
fneni(8087
add
pop
xor
and
ret
imul
fisttpll
popa
subl
pop
mov
pop
adc
mov
mov
mov
icebp
adc
addr16
hlt
sbb
cmc
inc
insl
pop
inc
xchg
imul
rcrl
daa
xchg
xor
fs
ds
sbb
mov
adc
daa
jnp
clc
notl
mov
incb
dec
cs
jno
movsl
cmpsb
mov
popa
movsb
loopne
or
cmp
jbe
mov
dec
in
mov
lea
das
inc
movsl
mov
add
mov
fwait
imul
sahf
popf
push
dec
and
mov
adc
cld
cld
pusha
sbb
mov
xlat
clc
pop
dec
and
jmp
in
movsb
cs
pop
imul
fadds
cmp
mov
inc
cmp
or
les
cmc
mov
cmp
ret
fwait
popa
dec
fidivs
jmp
add
or
jle
fmuls
orl
das
mov
sbb
mov
repz
adc
sub
hlt
jmp
inc
mov
sti
cwtl
dec
and
cli
and
je
sbb
push
sti
dec
mov
fimull
pop
shlb
insb
add
nop
imul
pop
mov
scas
inc
jnp
dec
or
pop
pushf
jo
pop
mov
mov
imull
and
jb
add
pop
xorl
sahf
mov
mov
xchg
fcmovne
push
or
data16
stos
jg
scas
or
jne
jnp
dec
and
test
sub
mov
in
stos
scas
or
ret
cld
inc
fisubrl
and
mov
fs
jmp
pop
lds
xchg
andb
ja
test
lret
push
cmp
pushf
lcall
ret
orb
cmp
inc
int
loopne
int3
rorb
test
or
gs
sbb
iret
stos
ds
pop
cmp
lcall
loop
stos
sahf
rorb
lea
sub
es
push
xchg
in
xchg
ds
scas
cwtl
fisubl
sub
add
outsl
movl
sbb
out
xchg
imul
lahf
leave
jecxz
aam
lret
es
pushf
sub
stc
mov
lods
repz
negb
push
insb
sbb
xchg
mov
sub
xor
push
push
jge
push
lahf
in
test
cmp
negl
jbe
add
punpckldq
shll
aaa
clc
fistpll
fld
sarb
and
pop
pop
repz
rclb
xor
rcll
sbb
or
fs
int3
cmp
pusha
sbb
xor
rclb
jno
ffree
push
movsb
mov
sbbl
sbb
jae
bound
mov
and
add
insb
stc
testb
imul
and
lods
shrl
cmpsb
fcoml
push
sahf
inc
jns
scas
jo
jae
arpl
jb
xchg
xlat
aaa
push
mov
mov
lret
and
add
lods
inc
popa
sahf
xchg
xor
cmp
lods
and
jecxz
push
adc
imul
iret
test
mov
pop
pop
out
mov
notb
inc
sbb
pop
in
xor
pop
pop
aam
ret
imul
or
daa
sub
xchg
dec
push
jbe
je
jl,pn
or
cld
fists
sbb
dec
mov
jne
push
rcrl
repz
hlt
mov
or
fwait
addr16
jb
pop
dec
jmp
inc
cmp
insb
add
pop
jne
rcll
xor
fbld
pusha
daa
pop
pusha
cmp
int3
pop
inc
hlt
lods
inc
xchg
pop
xchg
stc
das
ss
out
mov
inc
div
push
cli
or
mov
push
out
test
fsubr
mov
clc
xor
test
shr
nop
mov
or
fldl2e
mov
shrb
push
fs
jmp
loope
jo
and
jbe
and
push
mov
xadd
int3
les
jbe
or
adc
aas
aas
mov
inc
lcall
out
cmpsl
dec
and
mov
jno
test
mov
dec
sbbl
ja
js
pop
jp
sbb
xchg
pop
jecxz
mov
les
mov
lds
divl
ja
lcall
je
enter
jno
mov
inc
push
scas
add
add
push
in
js
js
mov
loop
mov
insl
or
inc
and
push
int
mul
xor
cli
decl
ret
adc
pusha
or
mov
mov
data16
and
fidivrs
bound
aam
pushf
sbb
pop
xlat
lods
enter
insb
out
jge
add
pop
sub
jbe
repnz
mov
add
nop
mov
sub
ss
and
adc
loope
or
stc
push
ret
sbb
jmp
push
push
push
mov
movsl
sti
and
stos
int3
cs
js
out
pop
lahf
ja
fsubr
scas
push
and
mov
pop
dec
sbb
test
push
imul
jge
frstor
add
adc
scas
jbe
jmp
lret
or
push
push
add
sbb
inc
sub
lock
orb
lods
fmuls
mov
dec
pop
shlb
add
pop
dec
or
jno
inc
outsl
mov
push
hlt
mov
cmpsb
push
lds
loope
rcrb
pop
icebp
jmp
and
out
add
imul
jns
fcompl
pop
repnz
rcll
mov
xchg
jge
sbb
dec
es
xchg
mov
leave
adc
aaa
mov
cmp
scas
call
mov
cli
xchg
add
shll
aad
lock
fistps
xchg
push
test
sbb
je
jge
mov
inc
das
packssdw
jns
mov
mov
xchg
push
add
push
sti
jo
fwait
int
push
inc
push
jb
dec
xor
xchg
rorl
in
pop
add
lret
scas
lods
mov
popf
xchg
sarl
into
jne
push
xchg
mov
test
xchg
mov
push
in
sbb
mov
incb
aad
outsb
push
outsl
mov
test
xchg
mov
or
and
cmp
das
inc
sub
push
sub
xchg
xor
mov
dec
mov
or
add
pop
push
in
lods
faddp
test
cmpsb
shrb
bound
or
dec
shrb
dec
jmp
jle
popa
add
stos
les
push
popf
inc
mov
call
cmp
dec
push
std
loop
ficomps
jle,pn
repz
pushf
inc
jmp
test
ds
movsb
pop
daa
jge
and
add
js
push
pop
inc
mov
push
insl
aas
ss
jecxz
dec
sbb
repz
dec
mov
pop
leave
cmp
popf
jmp
sbb
sbb
rolb
lods
jnp
or
pop
xlat
jmp
outsl
add
dec
mov
notb
mov
es
dec
jnp
pop
repz
jbe
stos
sahf
js
pusha
cmpsl
xor
ja
je
xchg
das
sub
pop
imull
int3
sbb
jecxz
sbb
pop
popf
mov
jg
xor
push
ds
les
loopne
inc
fs
in
aaa
sub
add
ja
sbb
in
in
iret
mov
xor
movsb
es
hlt
movsb
mov
ss
sahf
hlt
scas
jno
data16
hlt
popa
and
inc
test
stos
sahf
mov
into
in
imul
sti
pop
enter
mov
jbe
xor
in
enter
dec
gs
mov
in
loopne
xor
daa
adc
adc
ficoml
fwait
arpl
pusha
mov
push
sbb
imull
inc
mov
xchg
adc
insl
xor
int
and
and
inc
mov
cwtl
cmp
or
imul
pushl
inc
mov
sti
testl
adc
cwtl
lock
cmpl
mov
mov
outsl
adc
ljmp
mov
jb
sahf
mov
roll
loope
dec
rorl
nop
int
loop
sbb
aas
or
into
fidivs
dec
sub
into
mov
xor
sub
andb
test
shrb
jle
and
mulb
sub
lods
push
dec
aam
or
sub
dec
xor
sbb
dec
imul
dec
ret
loop
mov
fs
adc
outsb
mov
in
add
mov
adc
pop
ds
ljmp
lret
aad
mov
mov
push
cmp
out
mov
mov
jo
cmp
mov
inc
imul
mov
out
cmc
inc
fcmovne
jg
fwait
adc
jae
mov
mov
push
pop
or
lds
pusha
gs
insl
les
mov
testl
xor
leave
push
push
mov
lret
push
mov
xchg
add
add
insb
xor
mov
push
fidivrs
lds
adc
push
xor
insb
and
dec
xchg
loopne
xor
lods
into
and
ret
jmp
sbb
flds
cltd
cmp
aam
fldenv
aam
cmp
push
inc
outsb
cmp
and
mov
xchg
mov
ja
iret
and
or
inc
into
arpl
push
mov
out
cmp
mov
ja
jle
call
adc
dec
fnsave
into
test
mov
xor
or
jns
mov
arpl
sub
out
test
repz
stc
mov
lahf
lret
pop
loop
add
out
bound
mov
push
loopne
sbb
cli
mov
rorl
lahf
or
fists
and
xchg
into
ret
cli
rcrb
imul
or
add
sbb
and
mov
dec
pop
sbb
test
dec
test
nop
sahf
int3
push
xchg
and
push
cs
sub
dec
sti
scas
sbb
xchg
push
les
imul
out
pop
jns
sub
mov
add
pusha
lods
adc
sub
mov
dec
mov
cmp
ret
inc
mov
xchg
or
mul
xor
mov
popa
xchg
in
ds
pop
dec
mov
pop
or
xchg
int3
iret
jbe
pop
andl
in
push
jae
mov
aas
mov
movsb
push
cmp
jle
xor
push
incb
mulb
xchg
cmpl
popa
push
pop
inc
inc
mov
adc
std
cld
bndldx
or
inc
jae
add
inc
cmpsb
cmp
mov
out
sub
or
mov
inc
add
loopne
sbbb
inc
daa
xor
adc
mov
cwtl
dec
jne
jp
ss
cmp
imul
mov
jmp
xorb
dec
loope
aad
adc
rclb
inc
lret
xchg
mov
out
ret
xchg
or
sub
pop
in
and
cmp
sbb
mov
xor
and
push
mov
push
jle
adc
inc
popf
int3
rcrl
mov
icebp
outsl
sbb
shr
arpl
adc
mov
cmp
mov
andl
lahf
xchg
dec
ret
aad
sbb
inc
clc
adc
imul
ds
loope
adc
mov
sbb
in
call
mov
mov
xchg
inc
fsubrs
std
pop
enter
std
or
pop
cmp
or
fcmovb
xlat
aas
aaa
cltd
insb
push
pop
out
mov
inc
lods
push
in
or
pushf
bound
mov
out
lock
add
rorb
adc
cmp
and
loope
mov
pushf
or
lds
push
push
mov
jb
sahf
mov
stos
inc
xchg
xchg
dec
call
pop
mov
out
sub
pop
sti
lds
xchg
imul
repnz
cs
dec
and
adc
mov
mov
cs
in
dec
or
out
sub
xor
mov
frstor
mov
jecxz
cmp
push
out
mov
ret
cli
inc
sub
lcall
pop
dec
stc
insb
imul
testl
adc
loop
mov
cmp
mov
in
jb
arpl
sbb
std
pop
test
xor
leave
mov
sti
movsl
shrl
int3
cmpsb
cmc
bnd
les
or
stc
push
xchg
stos
pop
out
and
notb
js
pop
lods
add
xor
mov
adc
shlb
shll
arpl
and
add
fcoml
sub
cld
cmp
adc
in
push
lahf
xchg
inc
fwait
je
fsubs
icebp
jbe
sbb
ret
inc
test
mov
jbe
xchg
movl
out
adc
push
fmull
mov
adc
sbbb
fisubrs
std
inc
pop
lahf
cmp
jmp
sbbb
cmp
popa
mov
test
jbe
jae
iret
sbb
imul
in
hlt
mov
or
dec
jne
cmp
ss
add
cmp
sti
fwait
and
cmc
out
pop
icebp
mov
es
out
cltd
decl
xor
push
in
cs
imul
movsl
mov
flds
sub
xchg
xchg
sahf
mov
add
mov
lret
dec
mov
loopne
mov
inc
rorl
mov
add
cld
out
sub
scas
gs
cltd
mov
movsl
xchg
xchg
jge
push
mov
cmp
inc
sti
sahf
pop
dec
ss
lods
imul
gs
jns
push
cmp
and
in
hlt
add
sbb
sbb
xlat
pop
push
xchg
sbb
call
outsb
stos
add
push
mov
or
jle
adc
inc
push
and
hlt
pusha
pop
add
push
cmpsl
out
fistl
pop
push
sub
mov
jg
xchg
pop
es
inc
mov
mov
jnp
and
xchg
push
js
pop
add
jl
daa
data16
dec
mov
std
std
test
iret
cmp
inc
adc
repnz
lea
push
arpl
or
mov
add
xor
out
imul
clc
negl
jb
mov
hlt
daa
pop
push
popf
fcoms
sub
sbbb
and
xchg
adc
adc
dec
enter
add
and
pushf
xchg
data16
push
lea
insb
mov
add
and
adc
ja
je
mov
mov
mov
pop
pusha
pop
and
shl
fnstcw
and
ficompl
ss
negb
int
sub
lret
sbb
movsl
sub
scas
push
jne
add
sbbb
jecxz
dec
fnstsw
rorl
call
inc
pop
addb
out
incl
ja
xchg
outsl
sub
test
xchg
sbb
das
fdivp
add
and
subl
adc
add
aaa
mov
ss
lret
iret
jg
mov
push
or
daa
pushf
loop
fs
ret
test
ds
push
adc
push
mov
pop
test
mov
lret
sub
out
outsl
imul
mov
mov
push
std
cmpsl
xor
adc
and
mov
sbb
jno
mov
data16
aam
pop
fs
dec
inc
xchg
cmp
mov
xlat
xchg
jge
mov
adc
pop
mov
xor
nop
xor
push
leave
inc
sbb
or
jne,pt
mov
inc
test
nop
lods
outsb
lea
inc
cs
xchg
or
js
jp
iret
xchg
pop
into
jno
adc
ss
rcr
shll
xchg
sbb
hlt
cmp
out
push
adc
dec
mov
jge
xor
pop
mov
loop
mov
push
stos
cli
lret
out
inc
add
lret
fs
or
xchg
sub
push
cs
test
ret
lea
movl
call
pop
sbb
jg
jge
sub
mov
or
cmpsb
push
lds
push
cmp
pop
lods
pusha
or
xchg
push
inc
adc
jle
shrl
dec
out
jbe
adc
out
add
fucom
pop
push
xchg
dec
movsl
sahf
das
add
stos
xor
add
aas
xchg
xchg
xchg
mov
lock
pop
push
jecxz
xchg
call
dec
adc
iret
xor
xchg
das
sub
lret
fisubrl
cmpsb
in
inc
into
orl
push
into
push
mov
clc
fldcw
stos
insl
stos
call
mov
jae
pop
int3
adc
xor
xchg
add
loope
xchg
and
out
pushf
outsl
shlb
pushf
dec
or
mov
mov
sub
imul
jnp
repnz
and
ds
cltd
sub
dec
insl
xchg
xchg
and
jecxz
xchg
mov
sbb
or
or
int3
xor
cmpsb
orb
mov
lahf
test
push
jb
ja
stos
sbb
pop
sahf
gs
mov
cmpsb
aaa
add
push
and
sbb
addr16
sub
push
or
cmp
loope
ret
inc
inc
lods
jbe
sub
jns
xor
xlat
xchg
mov
repnz
cmpsl
insl
cmp
enter
push
out
mov
xor
xchg
pop
mov
pushf
divb
mov
mov
add
mov
cmp
and
bound
lods
shrl
cmp
mov
fs
fmul
outsb
jle
jle
fnstsw
xor
notb
add
loopne
pop
std
and
subb
and
inc
insl
mov
and
pop
dec
dec
mov
dec
sti
push
push
jl,pn
in
add
in
bound
mov
loopne
nop
in
imul
imul
outsb
xchg
inc
addr16
and
mov
loop
das
mov
popf
xchg
add
pop
arpl
mov
mov
arpl
ficomps
adc
clc
adc
test
ret
mov
incb
imul
shll
mov
push
in
stos
js
adc
addb
xor
inc
jge
sbb
cmpsl
jl
test
mov
insb
cmp
lcall
lret
in
sbbl
aam
pop
ds
roll
xchg
and
shll
mov
out
inc
int
mov
or
leave
or
and
mov
outsl
cmpsb
push
push
popf
loope
sbb
add
pusha
sbb
loop
sti
xor
inc
andl
arpl
cmp
sbb
adc
aaa
xchg
sahf
push
lahf
inc
mov
je
jno
jb
aad
add
aaa
rcll
xor
ljmp
push
sbb
sub
cmp
inc
das
ds
jmp
stos
fstl
push
movsb
push
ret
mov
fstl
adc
stos
shr
mov
out
jnp
lret
popa
inc
addr16
nop
dec
xor
int3
cmc
leave
inc
jnp
mov
popf
jecxz
mov
ja
push
xor
mov
wbinvd
iret
dec
imul
sahf
call
out
popa
sbbb
pop
mov
mov
int3
xchg
dec
pushf
out
sub
out
sub
loop
popf
lock
ss
lea
cmp
stc
lret
push
adc
imul
mov
ja
add
jns
or
inc
inc
aad
fistl
sbb
mov
inc
aaa
sahf
in
mov
shlb
mov
inc
add
popa
mov
mov
cwtl
sub
lds
fnstenv
mov
out
repnz
inc
xchg
cmpsl
xbegin
aas
xor
mov
sbbb
cwtl
in
jge
sbb
aam
adc
push
in
aam
mov
and
jne
lods
mov
pop
and
test
ret
pop
pusha
inc
out
push
xor
adc
dec
leave
xor
popa
or
mov
cld
xchg
cmc
inc
adc
mov
aaa
lret
fwait
mull
push
or
mov
sbb
sbb
scas
push
xor
out
pop
stos
insl
jb
xor
xchg
xorb
out
ret
sbb
cmp
aam
cmovge
jmp
mov
inc
mov
adc
ja
clc
std
iret
aaa
das
stc
sub
ret
ljmp
or
cmp
cmpsb
cmp
outsb
fldl
in
mov
push
mov
pop
cld
div
mov
jnp
mov
fcoml
pusha
int
mov
cmp
adc
lret
rclb
out
jg
out
add
and
in
in
mov
loope
inc
or
ljmp
je
iret
cltd
push
add
sub
into
inc
cmp
mov
popa
dec
test
adc
out
inc
test
fs
lret
inc
sub
adc
push
addb
add
stc
jl
insl
loopne
inc
cmpsl
cld
or
push
scas
or
lret
sub
int3
clc
aaa
adc
into
arpl
lret
cs
dec
mov
mull
call
sarb
and
adc
insl
aaa
pushf
idivb
mov
mov
and
dec
int3
mov
arpl
sbb
mov
jbe
outsl
add
dec
add
ror
sbb
push
cwtl
pop
push
xchg
data16
jp
sbb
adc
adc
jne
sbb
adc
jp
fisubl
pop
rol
fstps
jp
xchg
popf
lods
add
sub
movzbl
imul
mov
mov
int3
dec
fwait
cli
push
aam
xor
imul
ret
sar
int3
sbb
xchg
pop
lret
xor
pop
mov
push
mov
mov
cmpsb
into
leave
mov
lea
in
jle
cmp
sub
jnp
test
out
pop
lock
cs
arpl
aaa
mov
cmpsb
and
push
or
je
and
mov
add
mov
push
rcll
dec
inc
push
and
xor
iret
pop
scas
sub
movsl
das
mov
stos
push
push
inc
outsb
mov
and
lea
fs
jns
or
scas
pushf
out
insb
subb
dec
cld
enter
imul
dec
lret
jp
dec
dec
push
popf
popa
loop
jmp
hlt
push
add
fldt
nop
pop
jno
mov
pop
cmp
add
hlt
mov
lret
ja
cmpsl
sbb
xchg
or
cmpsl
fsts
push
int3
cli
fwait
cmp
add
mov
and
inc
lret
push
testb
mov
rcrl
mov
jno
mov
insb
jl
mov
dec
pop
adc
inc
xor
adc
or
orl
data16
lods
test
sbb
cmp
xorb
or
adc
sahf
mov
cmpsb
xor
rcl
jb
inc
dec
mov
movsl
cmp
sub
insb
sbb
xchg
pop
jl
mov
and
cmp
sbb
sub
mov
ficoml
loopne
adc
or
andb
addb
mov
std
fildll
cmp
and
push
xor
mov
testb
test
es
icebp
add
cmp
cmp
les
rcl
outsb
ljmp
or
and
push
lods
xchg
lock
bound
mov
and
loop
sahf
fnstenv
cmp
repz
enter
ljmp
dec
add
push
imul
addl
xchg
pop
out
ja
ja
pop
addb
inc
inc
or
in
fcompl
rclb
into
test
sbb
xor
mov
lock
mov
xchg
xlat
fwait
push
adc
loope
and
dec
inc
mov
scas
sub
push
mov
and
mov
or
jp
or
call
jecxz
lahf
push
and
ret
movsl
xchg
out
mov
andb
xor
mov
cmp
sbb
and
lahf
insb
fbld
pop
sub
mov
mov
xchg
push
pop
je
icebp
lahf
pop
mov
add
loope
mov
jmp
cmc
pop
aas
or
mov
aas
das
call
cwtl
xor
cs
leave
jnp
jne
add
stc
jp
or
xor
dec
adcl
push
dec
cmpb
and
sub
shll
mov
lcall
pop
mov
imull
xchg
popa
adc
fidivl
mov
repz
cmp
xchg
and
jbe
test
cmc
jmp
jns
push
lahf
sbb
bound
repz
sarl
mov
out
lret
bnd
out
push
sbb
les
aam
imul
dec
push
jno
cs
repz
loop
lcall
std
xchg
bound
insb
cmpsb
arpl
outsb
ret
mov
sub
mov
xchg
sbb
ret
jle
pusha
leave
test
cmp
outsl
sbb
rol
mov
icebp
adc
adc
cmp
aaa
scas
roll
dec
inc
rorl
mov
popf
test
gs
cmp
cld
out
xchg
call
pop
lret
ret
dec
std
add
xchg
stos
popf
iret
loopne
xchg
into
mov
jbe
testl
xor
test
imul
push
ds
in
mov
or
jle
loopne
shll
jnp
add
mov
notb
subl
orl
out
rcrb
sti
cmp
mov
cmp
ret
js
faddl
and
shlb
sbb
nop
mov
out
insb
in
inc
pushf
xchg
testl
ss
inc
mov
fs
insb
aad
xor
jge
mov
and
cmpsl
int3
andl
xor
aaa
mov
inc
cmp
and
lret
pop
fisubrl
sub
jae
pushf
aad
ja
subb
dec
ds
adc
add
and
xchg
je
bound
jno
add
in
mov
js
inc
rclb
ret
pop
aam
xor
insb
or
xchg
xchg
gs
push
xlat
mov
cltd
outsb
sbb
sub
push
outsb
adc
aas
repz
jo
sbb
stos
jecxz
enter
bound
outsb
mov
pop
jge
in
in
sbb
push
sahf
adc
loop
push
subb
sbb
push
jo
jmp
pop
adcb
cmpsb
or
outsb
ror
dec
add
enter
in
push
outsl
pop
push
lcall
shlb
sahf
add
ret
fcompl
mov
out
fwait
lods
icebp
es
sub
jp
cli
xor
imul
das
jl
mov
mov
dec
in
imul
cld
add
add
sub
sbb
je
cltd
insb
bound
mov
jle
mov
popa
imul
or
mov
push
sbb
rcl
cwtl
fisttpl
mov
sbb
ja
sub
addb
sbbl
mov
movsl
mov
or
and
push
fwait
shlb
pop
inc
lock
xor
sbb
lea
or
jmp
or
mov
push
or
stos
in
add
movsl
stos
inc
mov
and
addr16
insb
cmp
inc
xor
mov
dec
push
adc
sub
ss
shll
mov
and
cli
mov
and
or
test
jae
push
or
cmpsl
fdivl
cmp
das
aad
pop
clc
out
cmp
pop
outsl
inc
sub
mov
xlat
cmp
rcrb
cmpsb
imul
rcll
adc
xchg
pop
mov
leave
mov
out
pushf
xor
mov
inc
test
jecxz
imul
sub
inc
mov
jp
insl
repnz
xlat
or
fiaddl
pop
cwtl
nop
rorl
cmc
addr16
jns
loopne
mov
movsl
int3
loope
push
add
mov
enter
rorb
shll
mov
push
push
push
stos
cmp
push
jb
mov
mov
add
enter
pop
sub
pop
test
adc
sub
inc
out
pop
mov
xor
sbb
xchg
adc
lret
aad
xor
mov
test
adc
ss
imul
hlt
mov
or
mov
push
enter
stc
loope
enter
jne
hlt
inc
add
stc
cmp
rorl
mov
mov
test
scas
lods
cmc
push
jg
jp
sbb
push
rclb
insl
das
filds
mov
fdivrs
call
sub
ljmp
or
gs
or
push
jmp
sti
and
fs
dec
leave
scas
movsl
xchg
jns
adc
dec
inc
jae
clc
fwait
mov
je
mov
loop
inc
add
enter
mov
test
setnp
ss
jmp
loope
sbb
repz
and
push
push
mov
ss
jb
or
or
sub
push
sub
jp
xchg
lods
push
vshufps
jge
or
mov
je
pop
js
or
pop
or
and
jge
xor
lea
jg
shlb
aam
data16
sub
jge
aam
or
inc
mov
out
add
jge
inc
mov
insb
xchg
ret
mov
bound
inc
add
aad
pushf
jae
mov
add
push
movsb
mov
xchg
das
jno
and
xchg
in
aaa
ljmp
aas
lcall
jae
ds
lods
testl
xor
sub
mov
sub
push
fldt
cmc
mov
aam
bound
test
ja
or
outsb
enter
cmp
dec
mov
push
pop
arpl
sbb
stc
xchg
lret
push
stos
lds
rcrl
sbb
and
jne
inc
and
sub
add
inc
es
push
jp
mov
xchg
pusha
insl
adc
ja
fdivrs
push
xor
mov
imul
push
in
hlt
push
and
lahf
sahf
pop
bts
mov
jae
dec
inc
jno
gs
movsl
pop
sbb
lods
mov
lods
lahf
xor
sbb
sub
add
jnp
xor
aad
cmp
leave
or
dec
sahf
je
cmp
shrl
popa
mov
jo
rolb
lret
into
xchg
or
or
lock
cmp
and
into
inc
or
test
mov
ss
bound
mov
push
ja
mov
dec
lock
sbb
dec
xchg
or
cmpsl
lahf
xchg
out
int
jno
sbb
aad
cltd
mov
lds
fldt
ja
repz
lds
lcall
in
test
adc
dec
xlat
daa
in
test
dec
dec
aad
fldl
shll
out
inc
xchg
push
and
lea
cmp
fdivr
pop
ret
lods
mov
movsl
lahf
sub
xchg
cwtl
sbb
inc
pop
stos
mulb
insb
fidivrs
inc
orb
clc
mov
pushf
xor
adc
iret
add
imul
iret
aas
ret
fldt
fldl
imul
xor
neg
nop
je
sbb
int
or
rorl
adc
idiv
mov
and
shrb
enter
and
out
inc
push
imul
and
js
aaa
pop
int
or
fsubr
mov
imul
loop
or
rclb
sbb
out
cs
add
inc
clc
imul
dec
xor
lock
or
xchg
sub
xchg
push
stos
in
and
inc
jmp
lods
mov
dec
movsb
pop
and
and
cmp
xchg
movsl
aaa
jecxz
xchg
mov
jnp
sub
ret
and
inc
adc
adc
pushf
repnz
sbb
adc
aam
lods
mov
std
sti
mov
hlt
mov
je
dec
movsb
xor
adc
pop
cmp
xchg
jp
mov
fwait
mov
inc
iret
movsb
sarl
shrl
add
daa
mov
lret
inc
ss
pop
ja
cmp
pop
mov
mov
and
pop
lahf
addr16
xchg
lods
and
scas
cmp
out
addr16
insl
push
lahf
lds
push
mov
lcall
pop
sub
add
or
aaa
jne
leave
cmp
out
inc
in
and
mov
daa
fidivrs
xchg
jns
jb
xchg
mov
fwait
in
notb
dec
xlat
cmp
aaa
pop
cmc
test
addl
inc
mov
mov
sbb
xchg
sbbb
int
fists
add
jne
std
mov
repnz
adc
pop
jecxz
push
push
mov
fucomip
in
aaa
mov
imul
push
xor
xchg
jns
lahf
dec
stc
cmp
cmp
inc
movsb
and
sbb
int
fidivs
jb
cmp
stc
shlb
loope
cs
fdivs
xor
add
xor
cltd
add
enter
inc
arpl
sahf
dec
cmp
hlt
cmc
jmp
xchg
dec
call
sbb
inc
adc
addb
add
lcall
ljmp
bound
inc
out
sub
scas
pop
push
xor
rol
imul
sub
cmp
popa
dec
add
mov
dec
nop
into
mov
push
rolb
mov
lahf
adc
push
in
ret
pop
cmp
repnz
mov
mov
inc
mov
jns
mov
aad
jb
cmpsl
push
xchg
in
push
adc
dec
mov
inc
add
iret
mov
or
mov
xchg
int3
icebp
popf
or
dec
xchg
data16
loop
xchg
das
adc
stos
sub
adc
mov
push
jp
arpl
fcoml
add
ss
fbld
mov
jne
std
xor
adc
repnz
test
test
mov
mov
daa
lret
test
stos
addr16
inc
fldpi
mov
les
add
adc
dec
lret
in
mov
mov
sbb
xchg
cmp
sub
int
data16
inc
out
cmp
jp
pushf
dec
sti
cmp
dec
add
or
lods
stos
test
push
or
and
inc
xchg
mov
test
pop
stos
push
push
dec
xor
jge
push
add
xor
lock
je
add
mov
or
jnp
cmpsb
push
ret
js
mov
mov
xchg
mov
lods
lock
and
add
pop
jmp
mov
add
andb
dec
jecxz
adc
imul
jnp
xor
xor
inc
mov
ss
fmull
test
stos
cli
xchg
sahf
pop
fnstenv
cmp
mulb
loop
test
and
xor
mov
adc
daa
stos
std
xchg
aaa
cmc
mov
sub
js
sub
repnz
dec
lock
ss
dec
and
cmp
stos
movsl
add
hlt
cwtl
adc
ret
repnz
in
int
gs
pop
cwtl
inc
scas
cmc
mov
push
xchg
inc
or
insb
shlb
and
inc
sahf
xchg
rorb
dec
int3
lret
jbe
push
xor
sub
test
aad
push
lea
addr16
ficompl
jns
push
pop
mov
push
cmp
in
aam
push
add
ret
loope
lret
roll
cld
adc
fwait
pop
rcll
jns
adc
inc
mov
stos
int
dec
jns
sub
enter
sbb
push
sarl
imul
xor
add
enter
sbb
xchg
dec
cmp
aaa
pop
jge
std
fimull
sub
xor
je
enter
or
mov
ds
inc
lret
inc
jg
and
or
add
mov
rolb
shrb
inc
mov
mov
xchg
repz
mov
fbstp
sbb
cmpsl
loop
scas
adc
inc
push
call
aad
xchg
ja
cmp
mov
and
int3
adc
pop
and
jb
jnp
pop
adc
movsb
sbb
xor
cltd
mov
jge
or
pop
push
mov
pop
mov
test
js
dec
sub
shrb
lds
int
cmpsb
inc
fs
mov
jae
cmpsb
mov
mov
lahf
mov
mov
and
in
jmp
sbb
sbb
add
insb
mov
je
xor
fdiv
dec
inc
fildl
rol
leave
fdiv
cmc
push
ficompl
aaa
xor
div
pop
sub
cs
inc
sarl
jmp
and
decl
repnz
out
scas
mov
hlt
push
testl
sbb
shrl
dec
int
fists
jl
loope
leave
add
mov
popf
mov
stc
push
fwait
arpl
sysexit
xchg
cmpsb
sub
pop
iret
adc
sub
xchg
rcl
stos
and
push
outsb
and
pop
push
xchg
push
push
in
and
mov
xor
stc
xchg
test
fcmovnb
jle
aas
mov
push
jle
js
mov
adc
ret
addr16
and
stc
xlat
xor
subl
sbb
sti
mov
push
pop
inc
into
das
scas
xor
es
push
mov
movsb
inc
adc
mov
adc
push
cltd
call
shll
inc
adc
movsb
pop
sub
adc
push
dec
mov
mov
sbb
rcr
inc
xchg
and
cltd
ss
xlat
int3
add
mov
scas
jnp
sbb
add
mov
cmp
xchg
xor
pushf
rcll
adc
lea
pop
test
mov
sub
loop
in
inc
in
insb
gs
sub
lret
pop
int3
adc
add
push
jp
rcl
sub
rcl
sti
scas
mov
xor
in
loopne
shlb
stc
lock
imul
pop
leave
es
sarb
iret
dec
pop
test
inc
inc
idiv
nop
dec
dec
outsb
jo
fsubrs
and
movsl
adc
inc
cmc
jb
xor
test
jp
jmp
add
xor
jo
xchg
jge
int3
cmp
mov
popa
imul
jecxz
test
insb
enter
sub
pusha
adc
fisttps
fwait
jo
cmpsl
test
das
xor
aas
or
jns
call
adc
xor
inc
mov
or
arpl
divl
jl
test
and
int
sbb
mov
adc
cld
outsb
stos
mov
scas
rcr
jae
stc
xchg
sahf
xor
jae
mov
or
add
mov
mov
mov
add
ja
fnsave
scas
repnz
loope
xlat
or
repnz
adc
out
aam
dec
cs
ret
test
ljmp
imul
stc
inc
jecxz
sbb
or
mov
mov
sahf
push
push
cmp
push
jno
rol
pop
movsl
mov
and
sbb
lahf
je
loop
fsubl
fcoms
jecxz
ja
subb
std
test
repz
fiaddl
lods
mov
sbb
adcl
mov
cmp
sti
push
loopne
mov
icebp
xor
icebp
jg
movsl
shll
xor
in
mov
decl
push
roll
out
lock
cmp
lea
sub
jmp
cli
sub
test
lret
or
mov
popa
mov
jns
xor
xchg
adc
add
int3
or
mov
mov
mov
mov
loopne
mov
pop
popl
sti
dec
cmp
dec
or
cmpsl
lods
ds
sbb
lahf
cmp
sbb
push
mov
clc
or
xor
adc
aam
dec
call
stos
or
movsb
cli
cmp
dec
mov
sbb
dec
decb
inc
xchg
aaa
dec
mov
mov
and
leave
addr16
cld
loopne
xchg
test
lea
xchg
cmpsb
test
pushf
mov
xor
and
fnstcw
xor
movsl
and
inc
bound
insb
cmpsl
cltd
leave
in
xchg
shrb
fadd
mov
pop
mov
mov
xchg
outsb
cmpsb
or
mov
mov
mov
mov
cli
mov
shl
loopne
jmp
push
jecxz
push
add
push
xor
inc
push
inc
inc
pushf
test
dec
xchg
inc
push
aad
pop
jae
jmp
cmpsb
lods
js
call
pop
xchg
xchg
xchg
nop
lret
clc
ret
imul
leave
jge
jno
push
jno
out
popf
mov
nop
mov
jp
cmp
mov
adc
out
sub
rcr
mov
jge
sbb
movsl
adc
je
cmp
push
jmp
or
xchg
fcmove
mov
sbb
inc
jl
int
repnz
js
stos
fwait
mov
ja
sub
shll
add
adc
mov
inc
xor
ret
lds
fwait
and
jb
lahf
ja
scas
repz
movsb
cmp
es
xchg
fld
mov
ja
test
movsl
dec
sarb
or
loop
sub
das
mov
pop
jbe
ja
lcall
mov
lea
cmpsb
fiadds
cmpsb
pop
test
mov
and
adc
imul
outsb
jge
sbb
pop
mov
push
dec
add
lret
pop
sbb
push
pop
dec
jb
inc
mov
mov
mov
push
jl
pushl
mov
mov
dec
sbb
int3
rorl
xchg
mov
xchg
sbb
inc
icebp
mov
mov
hlt
ret
jns
cmp
jne
sbb
sahf
or
mov
lds
jns
cmp
fs
lods
mov
lds
movsl
dec
pushaw
pop
add
add
lcall
jg
adc
repnz
xor
sbb
add
add
fsubrs
cmpsl
adc
imul
push
lret
dec
sub
push
clc
mov
les
xor
lods
add
test
out
jg
orl
in
sub
popa
out
popa
jbe
iret
hlt
push
es
out
loopne
loopne
adc
and
inc
iret
repz
pop
mov
lods
popf
movsl
or
xor
out
adc
std
dec
adc
push
push
lahf
or
mov
cmp
js
adc
cs
sub
repz
shlb
std
or
add
loop
jg
sti
popa
ficoms
bound
notb
push
mov
sub
aaa
popa
xchg
arpl
jle
repnz
mov
data16
mov
negb
sbb
xor
icebp
inc
jo
push
out
mov
mov
push
movsl
xchg
in
xor
in
sbb
dec
adc
fs
cmp
or
cmpsb
inc
lock
stc
pop
xor
mov
xor
sahf
scas
mov
add
jmp
pushf
hlt
pop
outsl
addr16
jmp
mov
cltd
push
int3
push
movsb
mov
repz
xor
adc
insl
daa
jnp
xchg
push
scas
cltd
icebp
jb
mov
inc
sbb
jns
out
lea
stos
adc
lret
mov
xchg
stos
and
pop
cltd
sub
decl
sub
pop
pop
or
cld
mov
das
int
adc
popa
sub
pop
xchg
xorb
sbb
call
out
mov
jb
and
cmp
es
icebp
adc
mov
subl
pushf
cmpsl
mov
fsubrp
addr16
mov
mov
sbb
push
loope
mov
pusha
xor
sbb
xor
and
pusha
lahf
bnd
and
mov
xchg
cmp
imul
push
ret
call
jnp
xchg
mov
xchg
int3
adc
test
jne
adc
nop
pushf
mov
cwtl
mov
das
inc
test
shl
xor
sub
inc
inc
out
or
mov
pop
cld
sahf
jmp
pop
cmp
out
xlat
mov
mov
ror
out
mov
roll
sbb
pop
jp
push
loope
xor
mov
pop
ljmp
arpl
iret
pop
or
xorl
lret
push
ds
lods
ds
out
outsb
add
dec
ljmp
ss
dec
jecxz
add
cmp
stos
xchg
mov
or
inc
nop
lods
xlat
cmp
pop
fisttps
jbe
inc
in
cmp
hlt
inc
sub
mov
lret
ret
das
dec
dec
insb
aad
filds
jbe
out
jo
lret
aad
pushf
dec
add
sub
cmp
je
pop
cmc
cmpsb
push
into
hlt
out
jb
rorl
icebp
test
addr16
in
fiadds
xor
pop
adc
dec
pop
jo
and
dec
aas
mov
into
push
pop
jl
jno
jecxz
adcl
packsswb
loope
movsb
rcr
aaa
outsl
adc
jp
jmp
ss
call
mov
addr16
loope
ljmp
cmpsb
es
pop
dec
imul
xchg
push
pop
lock
dec
shl
fdivrs
inc
das
sub
jl
inc
fstps
lret
popa
sub
inc
loopne
cmp
and
movsl
dec
mov
inc
int3
stc
repz
ds
mov
lahf
fs
lret
pop
adc
orps
repz
add
lret
or
fsub
mov
scas
dec
jmp
sub
call
sub
in
mov
test
xor
push
aas
repz
push
xor
aas
mull
out
inc
call
int3
je
mov
ret
xchg
loopne
adc
cmc
jmp
jns
jge
xor
pop
lds
sbb
sub
ja
jno
mov
iret
lods
xor
out
push
fimull
push
xlat
fstpl
lret
pop
pop
xchg
xchg
cmp
or
cmp
lea
or
jmp
dec
rorb
int3
sub
fsubrs
pop
lds
ret
mov
inc
jno
mov
sub
pusha
xor
xchg
add
fs
pop
and
sbbb
pop
jmp
mov
jmp
sbb
and
les
jecxz
jo
ja
push
cmp
pusha
lds
or
xlat
fdivrs
fisubrs
mov
dec
dec
in
inc
or
mov
sti
pop
add
add
mov
icebp
push
mov
add
cltd
push
mov
mov
mov
sbb
bnd
inc
out
pusha
xchg
cmp
je
or
les
sub
aas
test
js
shr
ss
push
push
xchg
clc
outsb
inc
mov
sahf
pop
cltd
in
mov
lods
repnz
adc
pop
mov
mov
pop
jb
sti
jmp
lret
dec
xor
xor
shll
mov
ret
sti
test
dec
ss
jb
jp
gs
clc
push
or
mov
jp
shll
nop
lss
pusha
inc
and
push
and
insb
inc
in
fnstsw
xchg
push
push
sub
jg
call
sub
sbb
repz
dec
pop
into
mov
scas
ret
pop
dec
xor
adc
lods
popa
adc
repz
out
out
out
sub
rclb
xor
in
xor
push
pop
mov
push
adc
sbb
inc
iret
in
mov
mov
leave
data16
sub
or
les
lahf
mov
xchg
adc
cmp
push
loopne
or
orb
scas
push
test
jbe
call
jp
out
lret
out
mov
xchg
or
out
pop
testl
or
cs
cmp
push
mov
add
pop
orl
jle
push
adc
jg
fstl
iret
xchg
div
pop
inc
ss
pushf
outsl
xor
or
bound
sub
pop
dec
gs
jl
cld
int3
push
inc
aas
insb
adc
movsl
imul
bound
pop
fidivrl
pop
pop
mov
jmp
or
mov
cli
push
dec
imul
mov
lods
mov
and
xor
je
fistps
push
jo
shlb
pushf
mov
ja
loop
inc
and
adc
xchg
andps
mov
push
mov
loop
mov
mov
dec
mov
lret
sbb
notb
jecxz
scas
mov
inc
insl
jno
cmp
shlb
dec
pop
popa
mov
adc
jne
jp
js
lea
and
inc
cwtl
movsl
stc
das
in
mov
icebp
push
aas
clc
xor
jb
stos
inc
clc
mov
xor
mov
jge
sub
sub
orb
icebp
mov
sbb
inc
shl
sbb
sbb
adc
sbbb
nop
inc
and
aam
ja
push
mov
push
jg
jb
pop
cmpsb
bound
mov
out
shrl
xorb
int
adc
arpl
xlat
add
or
mov
pop
aad
jl
rclb
adc
pusha
mov
adcb
std
push
lret
test
push
xlat
sub
push
add
hlt
hlt
mov
lods
mov
sti
mov
shlb
mov
dec
mov
testl
shll
xchg
nop
xchg
ret
adc
das
js
mov
fdivp
outsl
add
mov
inc
dec
pop
cmp
push
mov
int3
ljmp
out
lcall
fnstenv
arpl
icebp
sarl
push
mov
dec
test
js
inc
push
mov
roll
cmc
lcall
jge
jb
lock
xlat
jp
inc
mov
in
mov
sbb
lods
fadd
sarb
dec
shlb
roll
xchg
adc
or
loop
dec
sarl
jmp
ret
or
out
xchg
sbb
cmc
stc
data16
cltd
repz
cltd
sub
push
mov
adc
fcomip
ret
mov
call
das
mov
or
sub
lea
movsl
jo
jg
dec
pushf
test
loope
push
fnstsw
mov
jmp
adc
bound
and
xchg
lret
adc
aad
pop
lahf
cmp
mov
test
pop
scas
inc
push
jbe
push
fs
mov
lods
mov
movsb
stc
jno
sar
push
xor
nop
or
in
dec
mov
repnz
xchg
cmc
push
jbe
lods
sub
test
add
stc
jae
jge
insl
push
inc
xchg
lahf
push
aas
cli
or
hlt
int
xor
and
sub
cli
xor
mov
jmp
pop
shrb
mov
xchg
xor
cli
scas
xlat
jne
sbb
push
cwtl
repz
and
jmp
push
fdivs
inc
mov
lcall
rep
sbb
xchg
push
pop
cli
and
lret
scas
arpl
mov
cmpsb
mov
xchg
pop
mov
xchg
aad
int3
jp
mov
stc
aaa
jecxz
jge
mov
js,pt
pushf
pusha
dec
jle
fwait
mov
mov
insl
in
rorl
cmpsb
lea
out
inc
jae
push
loop
xchg
adc
lock
xchg
mul
in
jge
cli
cmp
push
loop
hlt
imul
into
rolb
mov
inc
dec
jmp
adc
out
add
mov
adc
pop
jne
sub
mov
sbb
daa
nop
test
loop
xor
fxch
cmp
fs
mov
mov
push
addb
adc
out
sti
push
xchg
sbb
in
dec
or
aam
or
adc
das
ds
imul
jge
es
fsubrl
or
dec
jp
test
sub
xchg
adc
push
lahf
inc
push
pushf
push
movsl
std
divl
mov
cmc
icebp
jne
xor
sub
scas
popa
jecxz
inc
xlat
loop
mov
mov
lcall
lahf
sub
pop
idivb
cmp
sahf
ds
adc
lods
push
test
sub
out
jg
inc
mov
cmpsb
push
jbe
fistps
mov
fwait
dec
in
adc
xor
pop
imulb
mov
push
sub
mov
lds
xchg
rclb
xlat
jne
inc
es
adc
pop
sbb
or
or
lock
xchg
into
push
mov
adc
or
repz
mov
jne
push
dec
out
in
cmpl
clc
inc
dec
xor
push
rcll
test
js
pop
cmp
out
filds
push
outsb
jns
add
lods
test
fmulp
mov
repnz
out
xchg
stos
fsubs
shlb
mov
pop
sub
repz
push
pop
sahf
dec
or
add
xor
imul
mov
fs
stc
call
insl
dec
or
es
sub
lcall
mov
notl
out
push
out
lock
ja
les
mov
in
jp
mov
inc
gs
mov
fcomps
mov
pop
mov
push
test
cmp
sbb
adc
sbb
jns
movsl
sub
notb
sbb
dec
or
stos
sub
adc
push
mov
aad
insl
ljmp
push
push
lock
imul
fstps
shll
lret
jbe
or
fcoms
sbbb
cmp
test
add
sbb
daa
roll
push
pushl
pop
adc
fcmovnbe
mov
scas
shll
lcall
decl
test
sbb
sub
add
pop
into
sbb
ror
sahf
cmpsb
repnz
scas
rcr
mov
dec
jp
ja
sbb
mov
int3
fidivrl
outsl
mulb
daa
or
inc
int
dec
sub
sarb
gs
iret
jl
scas
push
mov
lcall
popa
lcall
je
scas
add
orb
mov
mov
lret
jg
sbb
jmp
mov
mov
xchg
cmp
sub
push
lret
add
adc
jmp
push
out
push
mov
xchg
xor
bound
xchg
xchg
mov
xchg
sub
bnd
lds
push
pextrw
test
lods
xor
mov
rolb
jp
pop
pop
fwait
inc
pop
shrb
stos
or
lea
push
sub
xchg
test
in
cmp
scas
mov
cmc
add
out
aad
jne
jg
xchg
xlat
sbb
adc
cld
push
lds
jg
mov
jo
sbb
mov
movsb
aam
dec
adc
test
gs
gs
push
sub
test
inc
das
and
xor
repz
and
or
shll
cmp
xchg
test
imul
pushf
xlat
push
pop
jbe
xor
ljmp
incb
cmpsl
pop
dec
adc
pop
sbb
add
imul
sbb
in
sti
movsb
jo
xchg
sahf
xor
xor
jge
sbb
pop
aaa
int3
dec
popa
xor
cmp
xchg
andb
sbb
xchg
ljmp
jb
jae
sti
scas
cmc
xorl
sahf
push
stc
idivl
addl
adc
pop
dec
mov
es
xor
push
mov
push
jp
cmp
out
cmpsl
notl
sbb
adc
fwait
pop
push
loopne
aas
push
add
jmp
aam
cli
jle
xchg
sahf
push
shrb
xor
in
push
fldl
stos
inc
lret
or
adc
fadds
sub
loope
jno
push
stc
mov
cs
ret
lea
xor
jns
sbb
dec
push
repz
xchg
movsl
inc
js
pop
test
mov
aad
jnp
pop
mov
xchg
pop
repz
jae
repnz
jmp
ljmp
push
adc
sbb
mov
nop
mov
pop
xchg
pop
xor
pop
je
sbb
adc
jmp
or
mov
pop
mov
ja
adc
test
xchg
mov
push
movsb
std
das
mov
fisubrl
lret
shl
xchg
and
pop
inc
mov
dec
cmp
jge
push
aad
xor
inc
sbb
xor
sbb
test
pop
mov
xchg
popf
lea
xor
psubb
sbb
cmpsb
loopne
stos
dec
int3
dec
std
sub
adc
mov
imul
and
sti
dec
dec
loopne
popf
jae
mov
sarl
repnz
fwait
mov
mov
pop
mov
pop
bound
pop
scas
repz
js
push
les
fsubl
pop
es
adc
mov
and
ja
dec
or
mov
insl
adc
pop
lods
add
arpl
jae
adc
movsl
jne
orl
lock
jbe
cmp
xor
cmp
push
xchg
mov
mov
jae
inc
stos
popf
mov
int
pop
out
lcall
aaa
and
push
jle
sbb
cmpsl
lret
sbb
ret
aas
pop
ljmp
inc
loope
jae
jb
mov
pusha
pop
repnz
push
jmp
and
jae
adcb
orl
mov
es
inc
imulb
iret
subl
js
xadd
jmp
pop
sbb
lods
mov
jmp
xchg
enter
mov
pop
mov
imul
jp
and
xor
mov
std
push
push
std
push
mov
pop
inc
push
and
or
loop
adc
xchg
cmp
inc
mov
pop
xchg
mov
sbb
popf
into
or
dec
sbb
sbb
lret
xlat
push
std
btr
test
les
xor
push
mov
mov
lds
adc
mov
insl
mov
mov
ja
xlat
fdivs
pop
inc
dec
adc
dec
mov
or
inc
push
sbb
sti
daa
jns
mov
aam
push
inc
mov
out
sahf
lods
das
mov
inc
or
pop
cld
pop
jne
popf
and
es
clc
cli
lock
test
fisubl
add
pop
sub
cmp
sbb
scas
ss
mov
fcomp
arpl
fldcw
add
lods
and
inc
dec
nop
sti
sub
mov
lods
pop
xchg
push
dec
xchg
mov
stc
jns
push
cmp
sbb
xchg
lock
leave
ret
int
iret
pop
clc
fstl
and
pop
xor
test
push
cmp
arpl
sub
cmp
sbb
rorb
mov
ret
sub
cmc
cmp
fiadds
ljmp
negl
jbe
fwait
pop
xchg
pop
mov
icebp
in
imull
add
adc
shl
popf
fcom
imul
xor
or
push
lock
and
pop
xor
in
mov
lea
pop
rclb
ret
xchg
jl
or
xor
inc
push
jle
mov
add
mov
jns
scas
sub
repnz
pusha
scas
xchg
sub
pushf
jns
insb
icebp
aad
adc
jl
or
cmp
mov
mov
add
sbb
mov
mov
out
or
enter
decl
aaa
add
pop
fcomps
dec
ds
loopne
lcall
mov
loopne
dec
in
rcrb
fsubrl
test
pop
mov
xor
adc
jne
jg
js
call
nop
cmp
daa
inc
addl
and
call
imul
xor
shr
lock
sub
out
sti
and
sbb
pop
jne
mov
jae
scas
ret
mov
cmp
gs
add
movsl
fwait
xchg
cld
pop
shrb
add
sub
leave
sub
int3
pop
cmc
dec
or
lahf
cmp
sub
leave
mov
sub
movsl
shll
lret
outsb
xchg
push
adc
add
sbb
movsl
lret
dec
or
jno
lods
jg
test
cmp
movsb
mov
je
adc
out
push
pop
jne
test
aad
xchg
movsb
dec
adc
idivb
arpl
dec
fnclex
add
bnd
or
inc
scas
xchg
mov
loope
aaa
out
test
dec
and
iret
mov
or
push
mov
mov
add
shlb
leave
push
rcl
int
mov
je
sbb
push
loope
dec
mov
cmp
push
mov
cmp
movl
std
pop
xor
int3
push
mov
mov
sub
push
add
cltd
xor
mov
mov
mov
call
jecxz
out
movsl
ljmp
adc
add
push
aas
mov
aam
pop
in
mov
and
add
in
test
int
outsb
daa
adc
ja
in
mov
sub
dec
cmpsl
lods
dec
push
lcall
mov
sub
popf
push
scas
out
push
xor
movsb
or
jg
inc
pop
imul
sub
mov
xor
stos
rorb
xor
and
fiaddl
adc
dec
aad
lret
mov
mov
pop
hlt
add
add
mov
mov
test
imul
dec
push
filds
xor
or
aas
and
je
dec
in
lock
dec
xchg
mov
out
mov
mull
pop
push
pop
add
test
xchg
das
es
push
test
cwtl
stos
scas
bound
fists
and
xor
sar
adc
sub
mov
push
or
jmp
add
xchg
jg
jae
xchg
adc
inc
push
jo
je
inc
lods
jl
jb
mov
shrb
pop
test
incb
das
lret
cli
orl
xorl
cmpl
fmul
jmp
dec
xchg
sub
js
outsl
dec
mov
fiadds
idivb
add
enter
fimull
mov
xchg
mov
cli
add
cli
cwtl
jmp
lahf
ljmp
lock
test
push
jne
lret
xchg
dec
bound
mov
push
sub
pop
mov
mov
sub
fwait
lods
je
dec
pop
cmpsb
lods
inc
lret
and
lret
fstpl
aaa
and
in
test
adc
and
imul
mov
pop
ss
jae
jp
inc
test
repz
into
addr16
mov
sti
in
jp
xchg
icebp
aaa
fmull
arpl
xchg
lds
push
pop
push
int
out
into
fwait
rclb
addb
addr16
sti
lahf
mov
ror
mov
popa
ret
push
int
or
pop
push
iret
push
lds
jge
fidivs
daa
mov
cmp
jbe
sbb
fdivs
push
jb
mov
cmpsl
adc
sahf
fildll
xchg
jl
sub
stos
test
andl
mov
push
sub
push
sahf
shl
sbb
ss
or
outsb
sub
inc
xor
mov
repz
clc
mov
adc
out
jbe
adc
jne
popa
jge
test
cmp
and
pop
mov
dec
sub
mov
jl
xor
clc
arpl
out
push
imul
adc
ret
fbld
mov
pop
pop
rol
int
aaa
clc
push
pop
and
pop
lahf
dec
cmc
repz
push
call
mov
adc
and
and
out
xlat
loope
test
adc
adc
hlt
shr
mov
mov
jno
cwtl
adc
mov
mov
adc
inc
pop
inc
jo
movl
daa
push
ljmp
lods
dec
arpl
hlt
mov
xchg
add
addr16
and
and
ret
mov
mov
pop
lods
ret
mov
leave
movsb
fistl
subl
add
jge
addr16
mov
or
adc
in
adc
out
push
mov
dec
cmc
mov
std
pop
mov
repnz
outsl
pop
mov
xor
cmpsl
sbb
xor
fbld
jmp
xchg
cli
cmc
ss
rcll
mov
cld
mov
mov
xor
jnp
cs
jne
iret
cmp
cs
arpl
pop
cli
jl
repz
xchg
jmp
sbb
mov
out
cltd
mov
add
lret
stos
enter
inc
clc
test
or
pop
test
loopne
xchg
mov
lcall
insl
adcb
lds
std
gs
fsubrl
ret
xor
iret
in
test
andb
sbb
and
mov
jns
or
cmpsb
and
jbe
nop
mov
xchg
rcrb
stc
cmpsl
stc
xchg
push
stos
insl
jge
in
rolb
jg
fnstenv
cs
dec
xchg
rclb
in
xlat
mov
popf
mov
jl
sub
pop
lahf
mov
rorb
aas
lea
call
out
test
mov
add
pop
xor
pop
popf
lods
mov
push
enter
mov
test
pop
scas
fldl
jne
enter
or
xchg
xchg
lret
inc
dec
mov
cmc
gs
testb
popf
xorl
sarb
inc
mov
dec
outsl
xor
scas
mov
lret
loope
ret
rcrl
inc
and
mov
xchg
out
push
xor
and
adc
ljmp
aam
dec
sbb
cmp
aaa
xchg
jbe
ret
ret
arpl
mov
mov
popa
lock
aad
mov
xchg
xchg
xchg
imul
rcll
in
mov
and
scas
loop
pop
push
dec
add
mov
adc
or
fsubr
jmp
xorl
movsl
sbb
stos
sbb
pop
fwait
xchg
jns
das
xchg
dec
pushf
or
pop
jne
push
js
cmp
push
test
mov
xchg
cmc
push
mov
cmp
cmc
clc
mov
dec
test
mov
mov
dec
push
repnz
push
idiv
dec
das
or
mov
pop
add
imul
push
xor
lret
sub
cltd
lcall
mov
stos
add
outsb
pop
lods
push
sbb
cld
repnz
sbb
mov
mov
or
adc
popl
mov
adc
ds
pop
icebp
xchg
paddsw
mov
sahf
push
mov
dec
sbbb
mov
vmptrld
inc
lock
aam
mov
inc
or
imul
jne
mov
sar
jg
cs
cltd
movsb
lods
adc
sub
sti
dec
dec
cmpsb
aam
adc
in
lea
inc
repz
xchg
mov
gs
out
in
mov
adc
xor
test
mov
rorb
xchg
addb
aad
sbb
mov
push
or
adc
jbe
mov
fisttpll
in
clc
out
neg
mov
sub
cli
jno
cs
aaa
mov
cmc
ds
fcomi
jae
sbb
push
scas
pop
lods
jl
push
inc
or
mov
or
push
sbb
insb
test
sbb
cmpsl
int
ja
stos
in
lds
or
pop
push
test
outsb
repnz
mov
addr16
das
cmpl
enter
mov
fdivrs
shll
cmp
xor
push
dec
jmp
xchg
xchg
jns
aas
sub
pop
stos
arpl
pop
xchg
or
aam
das
and
in
addl
cmc
sub
or
das
fdiv
fstl
lahf
stos
xchg
sahf
xor
and
and
aas
push
jmp
xchg
mov
adc
and
scas
inc
jo
fdivl
or
std
mov
fs
sbb
inc
xchg
mov
mov
aaa
imul
leave
popl
dec
jns
into
ds
mov
jmp
filds
jbe
sbb
pop
jecxz
lds
ja
inc
cmp
lea
sbb
testl
jbe
xchg
test
imul
push
divl
jns
sbb
pop
xlat
arpl
pop
jecxz
popf
mov
ljmp
pushf
cltd
lods
push
pop
lock
fistpll
sti
xchg
loopne
arpl
fldt
pop
lock
adcl
arpl
sti
mov
fucomip
xchg
dec
lahf
scas
inc
adc
sarb
push
sahf
and
out
and
jmp
jle
lock
fstpt
push
inc
in
mov
cmpb
cmp
jg
fisttps
cmp
pop
mov
fs
sbb
in
and
and
adc
inc
divb
push
dec
int
push
imul
rorl
sub
mov
adc
push
xchg
popf
xchg
sbb
push
stc
lcall
call
push
enter
jae
sbb
jno
mov
and
ret
leave
push
inc
jnp
test
and
imul
jns
cmp
fsubs
sbbl
iret
repz
sbb
cmp
popf
in
sub
lods
jns
cld
mov
sbb
call
repz
pop
ret
sbb
push
leave
jmp
inc
add
xor
push
sub
jbe
lea
sahf
out
ljmp
or
fldcw
add
lcall
and
push
hlt
xlat
xor
out
mov
xor
pop
scas
and
pop
inc
adc
cltd
jg
scas
mov
jg
pop
push
mov
rcl
sbb
int3
xchg
fisubrs
iret
mov
neg
mov
mov
inc
sub
test
xor
xchg
cmpsb
repnz
add
data16
push
adc
mov
jg
push
lods
push
movb
inc
pop
out
or
adc
inc
jae
stc
int3
clc
dec
and
scas
pop
or
pop
mov
push
cmpsl
ret
inc
push
xchg
xchg
repnz
sbb
jle
and
mov
loop
push
outsl
xchg
xchg
jmp
push
xchg
pop
loopne
lea
imul
aam
pop
xor
xlat
sbb
mov
test
leave
mov
nop
or
cmp
add
mov
je
addr16
cltd
ret
push
aas
push
jbe
mov
mov
jns
or
adc
jne
mov
sahf
rorl
xchg
imul
jbe
movsb
lret
mov
arpl
push
pop
jne
jl
loopne
adc
jl
add
loop
scas
mov
fstpl
sub
mov
cmp
ret
sub
jge
dec
test
push
iret
mov
popf
not
xchg
xchg
divb
mov
cld
push
repz
xchg
or
and
lock
stos
addr16
mov
xchg
movsl
stc
imul
movl
lcall
inc
rcll
loopne
inc
icebp
push
cmp
sbb
movsl
leave
scas
pop
clc
lods
leave
xchg
adc
addb
fimull
in
dec
mov
out
pop
sbb
iret
pop
outsb
sbb
into
ret
adc
mov
pop
pop
mov
lods
in
add
call
adc
jle
and
jb
stos
jnp
dec
lahf
shrb
es
stos
pushf
nop
call
sub
sub
subl
mov
dec
mov
add
jg
ja
push
mov
sbb
cwtl
hlt
mov
test
push
push
jno
ljmp
sub
push
enter
adc
daa
and
jl
push
pop
je
fldenv
pusha
and
lret
les
das
movntps
lret
lret
jge
cld
xor
sub
jecxz
mov
mov
sub
jae,pt
cld
xchg
aas
push
sub
mov
xchg
ja
movsb
inc
addr16
dec
add
in
out
imull
pop
outsb
and
mov
lds
dec
pop
push
or
pop
jecxz
and
push
jno
pop
fidivrl
mov
stos
mov
aas
push
adc
fcmove
xor
ja
icebp
mov
and
ss
push
and
outsl
mov
std
insl
int3
dec
lret
cwtl
lea
aam
andps
pop
mov
cld
jo
mov
fnsave
add
fnstsw
pop
cmc
add
addr16
mov
and
adc
mov
mov
jge
in
mov
pop
ffree
ljmp
jbe
mov
xor
bswap
fisubrs
mov
sub
cld
js
or
adc
xchg
adc
stos
aaa
pop
ret
popf
or
dec
jb
nop
out
jl
pushf
push
adc
sub
pop
js
pop
push
idiv
cmc
enter
or
jno
mov
es
cmc
mov
jae
add
add
sbb
sahf
add
int3
push
std
pop
pop
das
push
movsl
inc
xorl
pop
sti
or
fists
mov
mov
inc
and
stos
inc
bound
sti
jae
sbb
mov
mov
adc
in
les
pop
sub
movsb
mov
fimuls
push
popfw
ljmp
and
mov
popf
pop
cmp
push
icebp
inc
ljmp
pop
ja
dec
sub
nop
adc
fmulp
in
pop
mov
inc
test
xchg
mov
xor
in
jns
das
mov
sub
mov
mov
loope
cli
ret
sbb
test
push
sub
cld
jl
add
inc
in
lret
sbb
cwtl
xorl
adcl
xor
rcll
xchg
pop
mov
and
pop
scas
cmp
push
mov
lahf
int3
dec
xchg
jo
cltd
jmp
movsb
lods
sub
scas
xor
cmpsl
movsb
pop
sahf
std
mov
or
xlat
mov
pop
enter
mov
sub
jb
cmp
dec
iret
pop
dec
aad
pushf
mov
lods
insl
mov
mov
andb
sub
adc
dec
cmp
in
orb
mov
imull
mov
pop
pop
xchg
cmp
sub
mov
incl
mov
outsb
cmp
sub
adc
push
std
jae
popa
fwait
mov
push
rcrb
loopne
pop
test
mov
cltd
loop
test
push
sub
pop
lret
and
outsb
push
mov
xor
lock
rolb
aad
cwtl
or
xor
mov
add
popf
cmp
gs
sbb
lahf
shl
out
push
fcoms
sbb
pop
shrb
mov
xchg
xchg
aad
add
fidivl
jmp
dec
sub
rcr
notl
mov
sbb
xor
sbb
mov
jns
lods
in
sbb
cli
test
arpl
outsl
cmp
fisubl
jmp
adc
aaa
addr16
jl
pop
lds
loop
subb
lods
fsubs
xorl
xchg
jg
xchg
adc
cmp
mov
mov
push
aad
std
jb
int
cmc
mov
xchg
call
jo
or
sbb
cs
dec
inc
lods
add
xchg
sbb
inc
inc
cs
ret
cli
in
in
ret
jns
dec
aam
outsb
mov
enter
sub
mov
sub
push
in
call
ds
cmc
out
pop
and
cmp
push
pop
xor
stos
js
push
mov
xchg
adc
pop
notb
out
imul
xor
xchg
adc
outsl
push
mov
into
movsl
lds
movsl
ficompl
data16
les
jecxz
imul
pop
mov
or
movsl
cmp
cmpl
jp
pop
inc
mov
pop
fsubrs
xchg
jno
xor
pop
sbb
fldt
mov
inc
sahf
subb
add
dec
mov
test
bnd
stc
mov
inc
lahf
daa
add
repz
or
dec
push
mov
xchg
repz
frstor
sub
xor
inc
popf
xchg
ljmp
fs
push
sub
and
data16
xchg
std
cwtl
inc
adc
hlt
js
add
and
in
pop
add
movsb
mov
js
sahf
iret
pop
or
sbb
or
test
in
jmp
push
push
iret
fistpll
sti
rorb
stc
nop
daa
cmp
add
or
jge
fimull
ffreep
les
xchg
in
bound
ljmp
sub
mov
pop
daa
adc
fwait
cwtl
ret
push
movsl
adc
xor
xchg
mov
mov
pop
ret
data16
fdivl
add
inc
inc
in
dec
popa
xor
sarl
xor
lret
dec
icebp
mov
cmp
lret
mov
ret
mov
push
add
mov
popf
mov
test
subb
jno
push
xchg
pop
adc
sbb
jo
daa
rcll
cld
cltd
xor
push
lock
adc
mov
and
sub
in
test
pop
std
mov
dec
scas
sbb
mov
mov
pop
idivl
dec
and
icebp
imul
mov
mov
dec
mov
icebp
int
cmp
push
push
sbb
arpl
mov
daa
xchg
jo
movsb
jne
mov
scas
into
sbb
lea
inc
mov
daa
cltd
jmp
shl
mov
mov
std
mov
inc
pop
sbb
lret
or
mov
push
int
or
sub
inc
ror
popf
lods
dec
and
xchg
imul
mov
out
cmp
xor
sbb
movsb
aas
mov
notb
cwtl
rorb
clc
stos
dec
xchg
pop
sbb
push
add
stc
xor
mov
movl
pop
loop
jne
cmpsl
rorl
xor
push
mov
sub
mov
adc
sub
sbb
push
and
outsl
cmp
dec
popf
lea
insl
sti
ret
jo
and
stos
fimull
aaa
lods
fildll
lahf
sahf
jmp
cwtl
sbb
out
inc
sbb
pop
das
nop
addl
jb
rcrb
jae
loop
and
rolb
jg
mov
push
in
mov
rcrl
sub
cmpsl
lahf
pop
mov
pop
push
adc
ret
push
int3
aad
mov
or
adc
or
je
adc
movsb
fcomps
cmpsl
and
inc
mov
loopne
mov
xor
dec
mov
add
fcmovne
mov
lea
das
sbb
mul
adc
mov
mov
jns
les
scas
inc
orl
push
add
or
testl
fdivs
push
popa
mov
cmpl
gs
lock
mov
lret
add
mov
stc
dec
pusha
ret
and
pop
push
xor
inc
sbb
jns
pop
and
sbb
cmp
add
lods
push
loope
pop
fstpt
scas
sub
and
popf
adc
nop
sub
cli
dec
shll
inc
push
cmpsl
push
test
fisubrs
cli
jno
arpl
divl
mov
in
pop
add
cs
popa
dec
dec
out
icebp
es
or
push
stc
das
fs
enter
or
and
lods
jge
sahf
lcall
call
push
push
sub
sti
repz
cmp
mov
jno
mov
enter
cmpsl
pop
pop
addr16
and
jno
shld
test
fwait
mov
hlt
outsl
push
sti
aad
mov
xchg
mov
bound
fdivl
xor
negb
xor
adc
mov
pop
aam
mov
pop
cmp
push
pop
fsubrl
ljmp
out
inc
les
loopne
push
or
dec
aam
mov
pop
jb
add
repz
call
xchg
aaa
sbb
xchg
inc
adc
ja
cmp
addl
inc
cmp
cmp
cmp
jae
shl
test
scas
pop
es
adc
mov
cmc
leave
cmpsb
je
add
clc
jno
xor
pop
in
sbb
or
dec
scas
pop
pop
aad
mulb
jecxz
pop
pop
mov
inc
and
mov
jmp
sbb
xor
call
sbb
cmpsl
pop
cld
pop
jns
hlt
cmp
mov
cmp
lods
addl
jno
test
repnz
sub
enter
xchg
leave
mov
loopne
fsubrs
out
xor
inc
ret
jp
jns
inc
or
cltd
adc
dec
add
std
xorb
jmp
rcll
jge
cwtl
es
adc
or
pop
xchg
xor
out
shl
pusha
lods
loopne
add
in
sbb
cmpsb
push
repz
bound
pop
mov
mov
lret
fidivrl
sbb
adc
in
sbb
lret
sbb
nop
fadds
jle
push
jbe
cld
out
movl
adc
push
sub
mov
xor
int
movsb
dec
inc
lods
jecxz
mov
push
dec
ja
jb
dec
mov
push
lret
dec
jns
mov
or
into
sub
add
and
std
push
inc
cld
ds
cmpsl
cmp
or
adc
int
cmpl
dec
lods
sub
repnz
outsb
aam
pop
xchg
fs
mov
mov
adc
arpl
pop
fisubs
xchg
sbb
push
xlat
pusha
aam
ljmp
add
jle
lods
ds
cmp
mov
insb
add
cmpsb
hlt
jp
shlb
jno
sub
adc
or
mov
jmp
shlb
fldl
mov
cmp
mov
test
dec
mov
push
shl
sub
pop
xchg
movsb
xchg
fwait
inc
lds
sahf
fs
adc
sbb
mov
dec
add
mul
pop
xor
in
and
cmc
fidivrs
and
adc
lea
dec
lcall
es
jge
cmpsb
insb
clc
ficoml
stos
jge
xor
add
fstpt
pop
jmp
xchg
pop
rcl
ret
inc
push
pusha
dec
jl
enter
xchg
fldcw
mov
insb
push
or
in
xchg
lods
pop
std
ret
adc
lods
cmp
fmuls
dec
lock
or
data16
in
sbb
shll
mov
lods
test
aam
cli
daa
shll
mov
ljmp
jle
in
sahf
cltd
jno
nop
mov
rcll
jmp
lcall
imul
fwait
mov
push
cmp
mov
imul
add
xchg
int
pop
dec
jnp
in
jl
mov
push
and
jae
push
and
xchg
xor
pusha
popf
sub
out
test
decb
loope
cmpsl
xchg
mov
or
pushw
into
xchg
xor
pop
fstpt
cmp
mov
hlt
rcr
pop
test
fldcw
dec
addb
std
adc
sbb
dec
mov
cwtl
mov
mov
mov
arpl
jb
sbb
mov
test
sub
fs
cmp
scas
push
xor
jne
repz
leave
mov
or
xor
adc
loopne
lret
cmpsl
xchg
push
repnz
xor
addl
xchg
aaa
ljmp
std
sub
dec
scas
loopne
adc
stos
int
or
pop
popa
pop
ljmp
addr16
cmpsl
shlb
jbe
adcl
jmp
xor
sarl
ret
xor
xchg
pop
pusha
jp
mov
fstps
sahf
adc
inc
clc
sar
push
jnp
pop
sbb
popf
add
mulb
jno
pusha
pop
cmc
test
adcl
int3
int3
cmp
or
mov
xchg
lds
jns
idivb
mov
add
dec
ja
inc
dec
xor
iret
fwait
std
movsl
mov
xor
sbb
sbb
sbb
mov
push
scas
ret
addb
sub
xor
fistpll
repz
mov
or
jmp
cmpsl
and
xchg
iret
xchg
popf
dec
mov
lcall
addl
jmp
ficomps
lret
hlt
fwait
lcall
xchg
mov
sbb
jecxz
push
sbb
and
mov
add
mov
jns
adc
mov
cmp
in
enter
cltd
ret
adc
out
xlat
xor
mov
shll
aas
xchg
inc
xchg
loop
outsl
mov
add
js
mov
popa
fcomp
daa
mov
out
lds
dec
dec
xor
test
jae
inc
lret
sahf
nop
aad
jbe
adc
mov
mov
sbb
cs
int
imul
enter
xor
ljmp
inc
adc
pop
inc
mulb
push
and
adc
xlat
int3
pusha
shlb
push
aam
mov
les
cld
rcl
push
dec
cs
test
shlb
cmp
je,pn
mov
inc
mov
outsl
ja
jns
jmp
jge
or
rolb
fst
scas
sub
outsl
outsl
fstpl
mov
adc
jg,pt
cmc
adc
stos
fdivrs
adc
jno
rolb
cld
aaa
inc
lds
pop
fld
and
mov
xor
ficoms
insb
pop
pop
out
sub
pop
sbb
stos
cli
jne
mov
repnz
ljmp
or
xor
add
stc
addr16
adcb
lods
mov
push
subl
lods
sub
test
inc
cld
or
pusha
pop
xor
repz
fstps
repnz
mov
lret
outsb
push
pop
mov
fwait
ja
enter
call
jne
xchg
icebp
push
and
xchg
mov
movsb
adc
ret
lods
dec
popf
or
mull
je
popf
ja
xchg
xchg
jmp
push
fldcw
ficomps
pop
insl
push
jl
fdivrl
push
dec
lret
pushl
jbe
push
test
mov
pop
or
in
mov
jae
push
and
xor
push
jb
and
mov
cmp
rclb
ficompl
add
in
jge
out
pop
jge
jge
lds
icebp
jge
in
inc
jg
xchg
lcall
push
dec
in
cmp
sub
nop
push
data16
movsl
sbb
ds
in
mov
pop
stc
push
push
xor
adc
mov
sub
xchg
mov
lret
ret
cmpsb
loopne
xchg
inc
jnp
add
loop
xchg
and
sbb
jle
sub
xchg
fwait
pop
cltd
cmp
push
jecxz
push
mov
mov
cmc
adc
addr16
sub
ds
pop
mov
nopl
lahf
filds
xchg
js
out
cli
js
cld
pop
sbb
pop
or
lea
dec
mov
xchg
int
ljmp
rolb
stos
sbb
cwtl
es
loopne
inc
std
add
mov
add
sub
shl
pop
jbe
mov
gs
arpl
pop
adc
test
mov
mov
mov
enter
xchg
or
inc
xor
push
adc
push
enter
xor
cmpsl
arpl
lock
cmpl
cli
out
sbb
or
or
mov
popa
push
cld
xchg
cmp
int
jmp
das
popl
notb
popa
xor
sbb
mov
mov
mov
ss
shl
mov
jmp
pushf
icebp
leave
nop
adc
mov
or
and
rolb
cli
inc
adc
inc
pushf
test
or
outsb
xor
insb
jge
daa
idivb
dec
rcl
push
or
push
xchg
xchg
cmp
adc
push
icebp
pop
sbb
inc
mul
daa
xlat
mov
pop
repnz
xor
int
in
pop
subb
sub
in
mov
lcall
jno
or
xor
shrb
jp
or
push
add
fldcw
and
ja
lret
imul
or
or
xor
sbb
or
pop
out
adc
and
xchg
cltd
push
lock
outsb
mov
push
stos
je
subl
in
lcall
xor
or
andl
pop
adc
dec
pop
inc
xchg
mov
sbb
pusha
push
or
mov
mov
fwait
xchg
sub
jns
xlat
pop
repz
out
cltd
popf
sub
push
xchg
mov
jl
xchg
ret
mov
ret
cmp
sbb
adc
nop
or
jae
mov
push
lock
sub
test
jecxz
jecxz
pop
lahf
cld
dec
jecxz
xor
adc
ss
outsb
inc
xchg
cmp
cli
insl
push
push
sub
lods
ljmp
push
adc
shll
push
ljmp
sbb
subl
outsb
call
or
mov
or
mov
ds
xlat
xchg
mov
out
add
xchg
imul
cmp
mov
push
fldenv
addl
push
sti
cmp
cmp
cmp
ja
cltd
mov
addr16
popf
ficomps
dec
inc
cmp
repz
sbb
cmp
jl
out
pop
movsl
dec
xor
arpl
or
movsb
arpl
mov
in
mov
mov
aam
pusha
push
cmpsb
xorl
lea
clc
or
lret
dec
push
add
or
bound
dec
cmp
cmpsb
fsubrl
into
jecxz
mov
ja
shlb
loope
fdivrl
fsubrp
shlb
mov
lods
cmp
xchg
jb
push
aas
mov
repnz
mov
inc
iret
orb
jb
add
add
sbb
pop
sbb
xlat
mov
dec
jg
sub
dec
shl
push
sub
flds
ds
ss
jecxz
aam
mov
in
bound
and
xlat
in
add
cli
add
push
std
mov
pop
mov
clc
les
jle
inc
mov
out
rorl
cmp
and
repnz
add
loope
sub
or
xchg
sub
inc
xor
sub
orl
imul
xchg
jl
mov
ret
and
push
inc
inc
and
cmp
push
mov
movsl
mov
dec
mov
cmpsl
mov
dec
lods
stc
lds
les
cmp
or
xor
jo
iret
shrb
aaa
mov
pop
sti
jg
lcall
imul
mov
pop
in
scas
or
pop
fcoms
fnstcw
pop
std
cmpl
cmc
fcmovne
test
jns
adc
in
jnp
cmpsb
add
subl
or
cmc
cwtl
cmp
sbb
xor
call
fmull
je
stos
or
fs
jne
faddl
dec
aaa
dec
adc
fimuls
call
pop
adc
sub
movsl
ljmp
dec
sub
repnz
push
add
sub
pop
fcompp
ss
push
insb
aam
jecxz
xor
fdiv
adc
fldcw
push
aaa
mov
push
fisubrl
push
jmp
xor
inc
sti
dec
addb
or
xor
cmpsl
add
into
push
mov
test
pop
ljmp
jo
inc
xchg
jge
mov
mov
leave
and
jl
out
xorl
leave
mov
mov
shlb
das
xchg
dec
stc
mov
push
sahf
arpl
xchg
scas
xchg
or
add
out
loope
fmull
out
arpl
push
push
fisttps
inc
mov
cmp
in
push
mov
int
mov
ret
ds
sub
xorl
outsl
xor
aam
xchg
ror
jno
push
fnstenv
jne
fs
in
sti
push
out
test
mov
xor
cltd
add
ret
lock
push
cmp
adc
subb
insl
mov
stc
add
or
mov
sbb
jg,pt
sbb
push
jmp
filds
xlat
inc
xchg
test
ret
mov
ja
sbb
cmpsb
aaa
pop
jle
cvtpi2ps
bound
test
imul
jne
repnz
dec
sub
out
je
xor
cmp
out
inc
in
push
push
orl
add
xchg
gs
xor
cmp
into
aam
data16
cmp
rolb
pop
dec
mov
inc
jecxz
dec
in
icebp
jp
outsl
and
inc
and
lret
aam
clc
inc
push
mov
mov
sub
mov
push
cmp
jno
out
es
out
jmp
shll
pusha
push
push
add
lcall
lahf
push
rep
adc
mov
lock
jne
jb
aad
adc
fldt
cs
sbb
mov
cmpsb
fnstcw
mov
or
mov
test
jb
lods
pop
or
scas
jg
jns
xor
decb
ljmp
shll
cmp
xchg
inc
in
cli
jmp
cld
rcll
lods
and
or
lock
and
fmull
repnz
xchg
sti
aaa
pop
testl
cmp
sahf
scas
jne
mov
sbb
mov
iret
cmp
call
and
icebp
push
sarl
pop
pop
rcr
jle
cmp
or
push
push
push
cwtl
lret
add
mov
and
inc
sbb
adc
pop
mov
or
mov
and
loop
push
mov
fwait
jmp
jmp
cmp
adc
push
cs
rcrb
sub
add
mov
fs
cmp
cld
stc
test
xor
sub
aas
ljmp
outsl
outsl
inc
fs
into
cmc
arpl
and
add
insl
outsl
cltd
stos
mov
and
lock
cld
cmc
jbe
std
cmpsb
imul
cltd
or
dec
ds
rclb
in
mov
push
lahf
mov
push
cmp
shlb
lcall
push
xchg
int
jle
inc
cmp
cwtl
cli
ds
jb
lcall
fmulp
pushf
scas
ljmp
int3
mov
pop
std
push
push
cmc
inc
jge
pop
pop
inc
out
mov
or
adcb
inc
in
loop
sti
mov
mov
cmpsb
jne
shl
jns
and
jle
pop
xor
cli
lahf
fmuls
mov
addr16
mov
xchg
dec
out
dec
repz
add
imul
mov
out
or
out
jns
lret
jle
and
sbb
popf
add
les
lahf
xchg
cli
data16
out
mov
mov
das
add
dec
sbb
stc
es
and
pop
jmp
push
out
mov
divl
fwait
or
inc
aad
testb
test
pop
push
sahf
push
adc
cld
mov
mov
divb
mov
pop
fxch
xchg
aam
loop
mov
gs
xor
shlb
jmp
ljmp
or
cmc
mov
out
icebp
das
in
pop
js
test
mov
push
iret
mov
in
xchg
ds
add
pop
pop
popf
mov
into
lods
lret
insb
pop
xor
jmp
scas
mov
fistl
mov
ss
push
leave
out
int
ficomps
fbstp
cmp
sbb
mov
sbb
lds
xlat
out
sub
mov
mov
inc
daa
jo
jno
sbb
jg
mov
inc
lods
enter
outsb
add
fcomi
add
sahf
sti
sbb
aaa
in
cmp
outsb
sbb
out
or
inc
xor
push
lods
push
mov
mov
xchg
lods
xchg
mov
fsubrs
dec
push
dec
loopne
adc
sti
lcall
mov
push
jno
fwait
push
jg
dec
mov
mov
lret
add
inc
jp
movsb
dec
xlat
sub
push
ja
out
lds
jle
push
sahf
and
dec
jb
mov
cmp
clc
xor
jecxz,pt
jge
jle
push
in
ficomps
jp
lods
aad
scas
ljmp
flds
fdivrs
sti
loopne
fwait
ret
addl
jl
lock
ss
push
fucomip
pminub
mov
sbb
lret
fiadds
mov
mov
test
jne
mov
push
sbb
push
sbb
je
jns
push
test
in
sbb
dec
sahf
bound
add
in
pop
nop
pop
sub
push
push
push
add
cli
or
xchg
enter
and
addl
xchg
inc
inc
lods
cmp
adc
xchg
push
divl
ret
mov
and
mov
mov
inc
push
jnp
sub
daa
std
jmp
subl
dec
pop
sbb
xor
xchg
lcall
mov
das
xchg
ja
imul
dec
subb
in
mov
pop
sub
rolb
sbb
fwait
daa
add
xchg
push
cmp
das
pop
inc
aaa
fisubs
lret
into
insb
sub
ret
pop
test
xchg
adc
jno
push
and
roll
out
jns
sbb
mov
pop
sub
or
xor
fs
cmp
xor
aaa
aaa
ss
or
pushw
pop
int3
adc
lea
push
mov
jb
and
mov
push
aad
lods
icebp
or
insl
int
aas
lret
sub
ja
cmc
cmp
fdivl
das
out
inc
rcr
inc
and
fistpll
or
push
fdivs
lds
out
mov
arpl
jge
loope
fidivs
dec
mov
push
orb
lret
or
mov
xchg
cld
clc
rcrb
and
outsl
jns
or
scas
inc
pop
jge
fcoml
lcall
aaa
subl
dec
push
cmpsl
xchg
imul
pop
lahf
push
data16
mov
mov
mov
cmp
ljmp
int3
repz
push
add
fdivrs
mov
mov
ficoml
and
xchg
dec
mov
jb
sub
out
sbb
mov
mov
je
mov
jo
dec
xor
mov
jge
and
fnstsw
push
mov
imul
add
ret
sub
rolb
fs
inc
test
test
xchg
mov
jge
push
and
shl
cmp
sbb
cmp
dec
sbb
mov
ret
push
icebp
xchg
scas
xchg
lds
add
sbb
xchg
sub
lods
or
mov
cmp
movsl
lock
or
dec
movsb
adc
movsb
adc
daa
sbb
lds
pop
stos
add
ret
nop
lods
lock
call
mov
mov
outsl
cmpsb
push
lcall
push
pusha
ds
pop
orb
sti
xchg
dec
stos
stc
call
in
shll
ljmp
cmc
aas
mov
and
loopne
xchg
xchg
enter
mov
xorb
enter
fistl
sbb
cmp
shl
cmpl
out
fwait
ret
mov
mov
fdivrs
nop
push
sbb
adc
shlb
push
inc
jmp
mov
adc
lods
push
ljmp
xor
adc
jne
stos
into
mov
xchg
shrb
cmc
and
add
push
xor
sub
adc
ss
mov
sahf
mov
xlat
ljmp
cmp
popf
out
addr16
mov
cmp
lock
loope
ret
inc
jge
or
in
popa
mov
loope
xor
push
cmp
or
aaa
les
ret
pop
xchg
mov
adc
out
int3
xchg
xchg
stos
sub
xor
loopne
call
pop
outsl
cs
sub
in
call
out
inc
jmp
shlb
adc
dec
mov
or
lea
fs
nop
lahf
sub
pop
shll
xor
icebp
add
cld
xor
cmpb
out
mov
xchg
inc
pop
xchg
mov
mov
mov
dec
fsubrs
pop
mov
mov
cltd
push
sbb
jo
mov
add
je
pop
jb
xor
in
int3
dec
enter
push
xlat
sahf
or
xchg
pop
ds
sbb
inc
mov
xchg
aad
aad
sub
fidivrs
cli
mov
jmp
cmc
inc
jp,pt
mov
clc
cli
stos
jnp
jl
test
inc
xlat
sti
mov
and
mov
adc
neg
insb
out
sub
fdivr
add
and
dec
leave
out
mov
cld
or
jecxz
mov
loop
test
dec
dec
jle
lahf
mov
lcall
fdivrl
adc
lret
cld
ret
xor
scas
add
mov
sub
push
stos
arpl
fdivrs
cmp
jp
sub
cmp
ret
fidivs
repnz
push
negl
add
cmp
lret
ret
das
int3
inc
call
leave
push
add
popf
dec
pop
jmp
mov
sbb
sbb
test
or
jo
mov
stc
popa
inc
das
insl
mov
iret
inc
xor
fldenv
es
into
push
and
shll
jle
std
push
mov
cli
inc
out
mov
pop
rcl
sub
xchg
mov
adc
stos
enter
outsb
repnz
pop
dec
jg
adc
loopne
popf
out
imul
xchg
cmp
xor
lret
ret
mov
sbb
fsub
pop
sbb
mov
and
movsb
pushf
xchg
push
push
shl
fs
shlb
popa
inc
mov
push
and
xor
in
jo
dec
cmp
mov
push
data16
mov
mov
sbb
mov
int3
jecxz
imul
sub
push
xchg
sbb
aam
mov
mov
sbb
mov
mov
xchg
mov
mov
sub
pop
pop
ftst
bndldx
inc
cmp
das
adc
push
sbb
test
dec
ret
adc
loop
mov
sub
es
add
je
jo
push
mov
mov
inc
out
scas
incl
loopne
jae
jne
cmpsb
out
push
aad
scas
gs
aaa
insl
xor
sbb
mov
jle
push
jl
push
dec
rcl
fmull
lea
imul
orb
cmpsl
sub
or
lea
add
inc
and
sub
mov
adc
lea
pop
sbb
cli
fstp
inc
mov
mov
mull
ficoms
add
inc
mov
loope
sti
cmc
stc
pop
shrb
cmp
aam
xorb
loop
add
stos
adc
out
test
or
cmp
inc
pop
lods
fs
outsb
xchg
add
xor
pop
aad
mov
popf
sbbl
adc
pop
in
cwtl
jne
ret
mov
in
out
push
addr16
mov
or
adc
mov
hlt
dec
or
or
mov
pusha
std
mov
pushf
aad
lret
scas
cmp
and
jmp
sbb
add
mov
popa
ds
insl
add
mov
push
test
int3
pop
jb
or
mov
fwait
sub
jnp
or
dec
xchg
lcall
popa
fdivrs
mov
lods
xor
jne
testb
lds
lock
pop
mov
jns
repz
jg
inc
sbb
pop
stos
adc
pushf
cwtl
ja
xor
jno
cs
pop
or
add
outsl
arpl
jl
xchg
dec
or
jl
cmpsb
scas
and
das
mov
push
jnp
arpl
inc
jne
int3
aas
out
xor
nop
movsb
inc
mov
and
xor
imul
xchg
cmp
mov
push
mov
add
lret
dec
sbb
std
cmp
outsl
xor
add
pop
into
stos
loopne
and
sbb
cmpsb
jo
add
ja
cmp
push
sarb
ret
icebp
jecxz
mov
xor
mov
pop
jno
repz
lcall
sub
adc
and
mov
xchg
outsl
outsb
fstps
and
fldt
fisubrl
mov
test
pop
loope
ss
imul
cmp
pop
imul
pushl
or
jae
sub
dec
popf
adc
add
stos
inc
or
fnsave
mov
stos
shlb
xor
dec
cmc
xorl
into
movl
sub
push
insb
iret
xlat
sbbl
out
pop
push
jo
mov
pop
pusha
insl
jle
jmp
fsubl
shl
in
sbb
int
hlt
xchg
mov
xorl
mov
or
pushf
adc
and
mov
add
inc
mov
imul
jg
and
mov
rcrb
aad
or
imul
mov
int3
imul
xor
popf
inc
movsb
in
adc
push
repz
jmp
lret
push
test
shll
xchg
push
lcall
stos
aad
in
mov
ficompl
dec
aaa
or
ljmp
jp
imul
les
mov
clc
loopne
jge
jge
xchg
push
jmp
test
ret
push
pop
jbe
and
mov
cld
fistps
leave
movb
test
sarb
and
mov
mov
and
pusha
loop
sbb
xor
in
mov
cmp
xor
fisubrl
ficoml
aam
jnp
add
clc
push
push
or
lret
add
pop
test
lods
bound
loope
idivl
lock
outsl
lods
cmp
int
add
loopne
clc
fimuls
bound
fimuls
mov
push
hlt
sub
stc
push
daa
sahf
push
hlt
shll
test
push
dec
scas
jl
push
xor
adc
lea
sub
mov
or
pop
jns
int3
pop
pop
cmc
or
cmp
pop
cwtl
rcrl
and
rcll
pop
cld
pop
int
cmpsl
or
sub
lret
scas
mov
push
pop
mov
adc
pop
cltd
imul
stos
test
mov
insl
movsb
fsts
andl
cmp
and
aas
pushf
scas
pop
lcall
mov
sbb
sbb
pop
out
mov
mov
cmp
iret
push
or
mov
push
lods
mov
add
bound
repnz
lods
leave
push
pop
add
push
lods
test
pop
jbe
and
push
pop
inc
cmc
jns
call
sub
arpl
mov
pop
les
pop
int
pop
aad
insb
cld
cmp
fs
mov
pop
mov
ds
mov
dec
fldcw
add
lea
jnp
jne
add
std
insl
loope
xchg
push
mov
mov
sub
subb
sub
jl
or
xchg
loop
pop
dec
mov
sub
mov
mov
mov
fwait
repz
divb
pop
cmpsb
mov
lret
mov
mov
mov
int
xchg
inc
mov
and
bt
orl
or
jno
nop
push
inc
or
js
das
lock
push
sar
insl
cmp
xor
jp
outsb
xchg
xor
xor
out
push
pop
sbb
jge
jp
pop
cli
jle
cmp
sbbb
jnp
push
or
adc
xchg
sarl
scas
dec
mov
push
cmp
mov
lods
cmp
std
rcl
jnp
pop
lods
leave
cmp
mov
dec
stos
mov
movsb
cmp
push
out
cmp
xchg
cmpsl
adc
adc
cmpsb
push
imul
push
adc
lea
lea
jge
enter
repnz
into
inc
cmc
out
rolb
sub
stos
leave
push
add
in
inc
xchg
icebp
or
adc
mov
inc
or
sahf
push
xchg
test
pop
add
stos
scas
adc
dec
loope
or
jmp
es
pop
out
ret
insl
xchg
stc
push
stc
push
xchg
dec
dec
mov
sar
hlt
ret
jmp
xchg
push
mov
or
push
or
and
pushf
je
int3
fidivl
ret
pop
cmp
inc
jge
sbb
dec
out
pusha
adc
imul
push
xchg
hlt
xchg
out
jae
mov
cs
add
sub
push
mov
dec
cmp
mov
jns
inc
mov
out
mov
xor
push
bound
mov
and
jnp
ss
loop
sub
inc
cltd
push
fidivs
imul
stos
sahf
ret
rorb
mov
jge
pop
imul
sbb
dec
sub
dec
mov
nop
in
or
sbb
test
popa
mov
daa
iret
cwtl
lea
test
add
popa
je
fs
mov
ss
push
scas
outsl
jg
out
dec
popf
push
mov
sbb
xchg
adc
aas
test
pop
js
imul
inc
push
sbbl
jecxz
loopne
insb
jle
xchg
movl
dec
adc
aas
adc
push
pop
loope
xor
sub
inc
xor
xor
mov
rcr
dec
cmp
cmpsl
cs
inc
stos
add
imul
xchg
push
inc
scas
sbb
push
rorb
mov
mov
push
aam
push
test
icebp
lret
push
fdivr
jb
lcall
mov
pop
adc
lret
test
cmp
mov
or
lahf
inc
cmpsb
mov
xchg
cmpsb
data16
push
mov
add
xchg
rolb
cmpsb
mov
push
outsb
fldl
or
mov
mov
mov
nop
or
popa
xchg
negl
or
xor
push
pop
jnp
sbb
int3
xchg
push
jg
push
call
in
repz
mov
pop
sub
jo
or
push
sti
sbb
or
add
inc
mov
rorl
sbb
mov
aas
xchg
mov
pop
cld
dec
cmpsb
xchg
notl
fdivl
fisubs
addr16
cmp
rcrb
cmpb
popf
pop
js
xchg
sbb
jecxz
leave
xor
and
push
inc
pop
fwait
cltd
rol
inc
sti
push
movsb
sub
rcll
fs
cmpsl
push
mov
rcl
dec
push
in
mov
outsl
dec
enter
cs
mov
js
pop
test
cmp
test
push
pop
sub
mov
movsb
wrmsr
mov
aaa
xchg
inc
stc
insb
stc
and
sbb
mov
mov
enter
jns
jge
mov
bound
mov
push
dec
pushl
lahf
fs
push
jmp
cld
insb
xchg
dec
lret
inc
movl
les
add
fsts
push
faddp
testb
cs
lret
mov
pop
or
mov
mov
les
xchg
cmp
dec
inc
adc
lret
sahf
stc
mov
inc
stos
dec
ja
pop
or
add
lds
std
rorb
sbb
mov
push
push
in
vpsubsw
pop
lods
pop
cmp
sbb
in
js
insb
sti
outsb
or
jg
or
cmp
push
adc
mov
pop
or
pop
mov
cmpb
adc
push
ds
fstp
xchg
mov
gs
test
data16
lea
sub
subl
cld
adc
outsb
das
adc
push
lock
push
adc
add
pop
lret
enter
loope
outsl
cmp
push
mov
pop
scas
and
in
test
cmp
sub
cmp
push
test
xchg
xchg
mov
xchg
sub
cmp
mov
lods
mov
pop
rcll
fisttps
ja
pushf
sub
ljmp
icebp
lret
int3
test
push
sub
inc
jnp
lods
filds
and
in
cmp
outsl
mov
mov
mov
in
in
sbb
ret
rorl
jne
and
pushf
and
xor
xchg
dec
push
mov
mov
cmpsb
mov
inc
adc
mov
and
or
dec
inc
add
sarl
inc
xchg
pop
sub
ret
rcl
ss
cmp
fsubrl
dec
and
push
sbb
xor
sbb
jge
repz
icebp
dec
cltd
and
lock
insb
add
scas
popl
dec
ret
jle
inc
call
dec
data16
xchg
ret
xchg
sbb
pop
sub
cmc
pop
lahf
int
je
jae
testb
mov
les
adc
clc
out
popf
mov
push
add
repnz
mov
loopne
adc
pop
out
jno
xor
pop
pop
mov
filds
adc
loop
loopne
bound
mov
adc
dec
loope
js
lahf
ficoms
repnz
dec
inc
mov
in
dec
iret
loopne
pop
sub
push
cmpsl
dec
addr16
sti
push
mov
fisttps
pop
iret
roll
popf
rorb
mov
cmc
mov
push
sbb
pop
pop
push
push
mov
fcmovnu
jmp
cwtl
insb
fiaddl
sub
cmc
mov
mov
mov
xchg
sbbl
hlt
mov
push
aas
lcall
fbstp
popa
push
arpl
mov
imul
mov
dec
jl
hlt
lahf
stc
popf
subb
outsl
jg
jb
ja
mov
clc
out
repnz
xlat
arpl
pop
inc
movsb
xor
xchg
adc
stos
sub
push
bnd
push
and
pop
insb
pop
inc
roll
pushf
mov
or
clc
les
jbe
mov
insl
cli
mov
lret
mov
dec
cmp
cmp
popa
les
cmp
pop
xchg
maskmovq
mull
dec
xlat
push
js
popa
mov
pop
sahf
nop
in
cmp
setg
ljmp
test
imul
loop
int
xlat
jnp
negb
je
cli
popa
push
cmp
lods
jo
rol
xchg
add
and
mov
enter
adc
dec
scas
jp
cmp
scas
pushf
or
ja
inc
inc
sbb
repnz
mov
mov
test
ret
cmp
in
jge
in
mov
insl
stos
test
dec
cmp
jns
ss
adc
xchg
jp
cltd
lods
enter
jno
or
leave
test
lahf
repz
lods
mov
xchg
push
mov
hlt
xor
shlb
sbb
jne
xchg
or
inc
lods
in
xchg
add
jp
punpcklbw
stos
mov
inc
cmp
jecxz
loop
cmp
imulb
add
adc
test
xchg
xor
jle
cmp
push
pop
ret
mov
dec
xor
js
pop
in
cmp
inc
andl
xor
cmp
aas
mov
int3
mov
into
fstps
mov
push
std
and
dec
orl
add
cmp
cmp
imul
adc
test
cs
data16
mov
testl
push
pop
push
enter
in
cld
xchg
dec
sbb
mov
or
adc
jle
mov
xor
xorb
mov
xchg
mov
pop
sub
dec
fldl
xchg
push
cltd
loop
xchg
jl
mov
stos
cli
cmp
fldt
aaa
xor
lods
push
leave
arpl
or
mov
and
xor
and
or
cwtl
lcall
add
decl
mov
or
mov
dec
pushf
dec
popf
lds
mov
adc
repnz
std
jmp
add
pop
mov
pop
inc
inc
scas
and
insl
gs
inc
push
mov
pop
jns
and
jns
lcall
and
std
jne
jnp
aas
sbb
jne
sti
out
pop
cwtl
int
add
mov
testl
push
xor
mov
push
lcall
and
pop
mov
icebp
stos
adc
dec
imul
dec
mov
or
and
movsl
jbe
int
pushf
std
loopne
nop
iret
call
mov
outsl
popf
loopne
ret
pop
je
movsl
dec
xlat
out
dec
lret
pop
cmpsl
call
pop
sub
cwtl
cmp
push
jmp
fiaddl
jmp
or
jo,pn
fidivl
add
icebp
sub
xchg
push
or
jnp
adc
sahf
add
aad
js
dec
mov
add
inc
lods
and
adc
push
mov
add
rorb
mov
and
jg
cs
idiv
pop
pop
cmp
jno
jo
dec
sub
dec
icebp
or
sbb
test
loope
add
outsb
jnp
je
dec
mov
ja,pn
cmp
mov
shl
testb
add
jge
or
cltd
shlb
sub
mov
sub
repnz
xor
xchg
jmp
add
adc
stos
dec
sub
popa
lret
cwtl
out
jnp
mov
or
xchg
sbb
push
mov
jno
xorb
int3
mul
es
sub
push
sub
loopne
cmp
adc
imul
dec
cwtl
cs
xor
and
cli
push
inc
mov
push
jg
push
push
jmp
insb
inc
jne
adc
loopne
iret
pop
sub
xor
pop
jo
jb
adc
sbb
and
sbb
mov
idiv
rcl
mov
pusha
ss
pop
inc
xchg
cmp
inc
cmp
push
outsb
les
mov
mov
stos
aam
adc
lods
mov
hlt
js
push
and
imul
sbb
xchg
mov
inc
xchg
pop
jbe
arpl
or
call
ret
out
cld
dec
add
cli
cltd
jle
dec
es
cli
subb
dec
inc
mov
inc
out
mov
pop
and
jno
insb
pop
in
pop
das
int
cmc
lock
xlat
sahf
add
push
inc
roll
stos
leave
mov
gs
and
hlt
add
inc
cmpl
pusha
xor
or
push
jp
dec
sub
out
outsb
pop
sbb
sbb
mov
push
jno
loop
mov
popa
pusha
not
shll
sub
fcomp
push
enter
in
mov
jle
sbb
mov
les
inc
addl
es
jb
and
dec
mov
mov
xchg
adc
cwtl
leave
lock
xchg
ret
mov
pop
mov
mov
roll
fsubs
jecxz
xor
adc
subb
incl
or
fwait
sbb
sbb
outsl
push
dec
call
push
ss
cmc
lds
jle
xor
out
shlb
xchg
pop
test
push
roll
mov
and
xchg
mov
inc
pusha
std
push
fs
lods
push
ds
loopne
adc
jl
cmpsl
cmpb
fldenv
cld
add
add
xchg
adc
repz
cli
dec
aam
or
cmpsb
mov
push
mov
rol
ret
data16
jmp
loopne
fisubrs
jge
scas
push
rcrl
add
pop
mov
outsb
xor
mov
ja
cmp
mov
push
xchg
fsubp
sbb
fwait
pop
or
iret
out
jae
xor
imul
popa
mov
movsl
pop
loop
fistps
lods
mov
lds
arpl
mov
mov
shl
pop
insl
cwtl
push
out
sbb
pop
negb
sub
mul
shlb
loop
pop
repz
subl
filds
rcr
lock
sub
mov
mov
push
out
push
cmp
or
mov
ret
sub
lret
push
sarb
jb
pushf
sub
popa
mov
mov
outsb
dec
cli
fwait
jge
xchg
fisubrl
xchg
ret
jecxz
lcall
test
out
xor
call
call
shrl
push
sbb
jno
jge
pop
mov
aam
and
and
cmpsl
sub
enter
out
sub
cmp
push
pop
sbb
and
cwtl
imul
dec
and
imul
daa
add
and
mov
cmp
or
inc
mov
sub
push
das
dec
arpl
div
pop
mov
aaa
mov
and
mov
clc
xor
fldenv
xlat
test
aaa
and
insb
lret
stc
in
xor
jl
lods
leave
adc
and
fdivrl
pop
in
dec
push
out
inc
shll
scas
mov
push
rcrb
hlt
fsubrl
popa
fisttpl
test
arpl
xor
inc
popa
dec
popl
pop
dec
mov
sbb
xchg
adc
or
push
insb
sbb
test
aam
dec
xchg
pop
mov
inc
sbb
push
lea
aam
and
ja
icebp
cmp
cs
sbb
push
jle
cmc
nop
or
jbe
in
out
ret
push
add
ret
cwtl
jge
outsl
in
dec
pop
add
adc
gs
mov
cmp
arpl
es
cmp
adc
xchg
loop
jle
adc
inc
dec
in
mov
pop
ret
in
cmp
ljmp
in
mov
bound
gs
rcrb
jbe
clc
jp
jmp
lea
jae
dec
loop
sbb
jmp
daa
in
popl
data16
xor
cltd
stos
jbe
jne
sbb
push
fstpt
pop
jmp
popa
cmpl
cmp
in
lock
add
aas
cmpsb
xchg
adc
imul
das
and
jne
sbb
jmp
xor
and
sbb
jp
aam
inc
cmp
jb
adc
mov
and
das
and
add
fisttpl
sub
int3
push
ret
xchg
add
adc
aaa
xlat
adc
and
mov
dec
sahf
mov
push
ss
cmpsb
jne
xor
adc
jg
add
icebp
adc
push
mov
sub
sbb
mov
ret
jo
aad
jge
or
repnz
mov
xchg
jbe
mov
add
xor
jnp
mov
imul
stc
cmp
aas
jle
addr16
out
fidivl
enter
jo
fadds
mov
cmp
sti
push
add
lock
adc
subps
decb
stos
mov
addb
test
and
jge
and
daa
mov
out
mov
fnstsw
aam
mov
stc
sub
lret
jecxz
add
popa
and
jge
repnz
inc
testl
xchg
jge
add
dec
stos
push
clc
or
insl
movl
pop
cld
std
ds
loop
jns
xor
inc
lock
jne
xorb
mov
xor
dec
add
cmp
mov
out
jge
mov
sub
dec
lock
and
gs
push
sti
jp
enter
aaa
xchg
mov
pop
test
fs
dec
bound
push
repnz
lea
mov
inc
xchg
xor
imul
and
shr
int
jnp
xor
cmpsb
out
lcall
lret
insl
mov
xchg
and
dec
insb
sahf
add
mov
inc
mov
dec
sahf
cwtl
dec
scas
movl
push
dec
push
push
aad
out
jp
pop
pop
mov
mov
insb
dec
push
mov
or
jge
push
push
dec
cmp
sarl
test
mov
int3
push
cmp
pop
cld
iret
fldl
ret
pusha
in
lods
movsb
inc
gs
pop
sti
sahf
push
push
sub
add
lahf
jae
xchg
fmull
push
js
xor
test
or
sbb
push
mov
inc
jo
add
lock
add
into
dec
mov
lds
sub
enter
repnz
adc
mov
push
add
xchg
rcll
inc
dec
and
vaddpd
xchg
ja
out
fcmove
arpl
aam
mov
dec
mov
sub
dec
inc
xor
popa
mov
in
mov
cwtl
leave
out
lret
sti
ret
or
mov
fcomps
inc
pop
and
sub
aad
aad
jecxz
stc
pop
push
mov
inc
fwait
cld
lds
push
adc
mov
aam
data16
clc
in
fsubl
add
testb
into
loop
test
mov
popa
push
popa
sub
scas
inc
mov
mov
inc
sub
xchg
stos
add
pop
dec
pop
cmp
push
cmp
fmul
lods
fiadds
mov
sub
and
shll
dec
aaa
bound
push
inc
xchg
cmpsb
scas
jo
aad
in
ljmp
neg
jb
fmul
dec
sub
rolb
jo
mov
shrl
xlat
mov
sub
adc
repz
decb
mov
push
sub
out
rorb
aaa
or
out
fmuls
adc
loop
jnp
jge
dec
dec
inc
cmp
xlat
ffreep
ret
outsl
icebp
adc
cwtl
decb
sub
inc
ffreep
cmpsb
ljmp
inc
push
jbe
jo
xor
jge
cmp
mov
punpcklwd
popa
sarl
out
std
enter
mov
push
stos
outsl
insl
or
xchg
sbb
addr16
hlt
sbb
out
shll
mov
fdivl
mov
mov
xchg
jnp
inc
testl
jae
pmaxub
popa
test
sbb
mov
dec
jno
cmp
pop
push
sub
adc
xlat
into
jle
mov
lret
out
dec
sub
xchg
jb
xor
imul
push
inc
filds
or
xchg
xchg
repz
rol
bound
call
pop
fnsave
out
adc
lods
jp
ret
insl
xchg
stos
pop
inc
jl
mov
sub
pop
push
cwtl
dec
imul
pop
test
shll
add
mov
pop
mov
arpl
loope
mov
xchg
xor
addr16
out
cmp
das
pop
mov
jnp
sahf
out
mov
dec
in
adc
hlt
bound
jb
mov
scas
cmp
cltd
cmpsl
jns
ss
jl
popa
fucomip
pusha
out
and
xor
pop
fsubp
fistpll
mov
insb
nop
mov
stos
sub
push
dec
ja
aam
cs
in
shll
js
inc
mov
clc
dec
popa
cmpsb
in
fstpt
call
jmp
int3
sahf
mov
fidivrl
es
imul
cwtl
sbb
push
push
daa
adc
or
das
adcl
push
in
push
pop
mov
sbb
pop
mov
fistl
stos
cld
repz
pop
sub
imul
mov
ret
roll
ljmp
in
xchg
iret
xchg
movsl
sbb
unpckhps
jmp
ds
rolb
movsl
inc
pusha
loope
xor
or
insb
inc
sub
mov
scas
cs
inc
sub
dec
aad
movsb
sbb
pop
xchg
rorl
sti
push
cmc
sti
lahf
popa
xchg
je
clc
xor
or
cli
insl
fadds
ret
mov
mov
ret
les
xchg
add
dec
push
cmpsl
ja
enter
push
enter
nop
lods
test
push
sar
rcrl
ret
jo
mov
fistpl
rep
mov
or
subl
add
faddl
int
nop
sbb
mov
cld
in
scas
push
xor
xchg
sbb
sub
mov
mov
inc
in
insb
jnp
cmc
dec
addl
sbb
mov
ljmp
scas
ret
std
aam
jmp
or
sbb
inc
mov
fistpl
lods
test
xchg
xchg
movsb
in
loopne
popl
ret
scas
test
jmp
xchg
leave
xchg
negl
clc
add
inc
outsl
sarl
sbb
int3
sbb
rolb
lods
cmp
lret
jb
pushf
sarl
adc
mov
je
repz
imul
mov
or
or
dec
or
mov
fildll
cwtl
pop
fdivs
stc
scas
push
loop
repz
int3
adc
insl
fadd
mov
mov
inc
mov
lahf
push
mov
aaa
insl
lret
jmp
outsb
aas
xchg
je
sbb
xor
sbb
cwtl
pop
pop
adcb
shrb
pop
neg
aam
mov
adc
push
ds
shll
jge
push
lea
mov
adc
mov
mov
jecxz
js
jle
mov
addr16
shr
pop
and
shlb
movsl
ja
repnz
xchg
inc
jmp
fiaddl
xor
lds
leave
sbb
jo
fld
xchg
ljmp
xchg
pushf
lods
jcxz
fmulp
jge
adc
and
and
sbbl
adc
mov
out
pop
push
pop
repnz
fcoms
ja
pop
popa
scas
mov
dec
cmp
jmp
or
lea
imul
sub
jecxz
sub
je
lods
cld
popf
cld
pop
mov
lcall
aam
xor
and
jecxz
add
icebp
mov
pop
nop
imul
pop
aaa
and
mov
pop
pop
mov
adc
adc
pop
mov
stos
popa
xchg
popa
insl
mov
out
popf
and
pop
dec
int
addr16
mov
inc
stos
mov
pop
pop
adc
mov
sub
fadd
pushf
cld
mov
and
mov
out
sbb
test
xor
mov
and
clc
pop
fwait
pushaw
push
pop
mov
lahf
aaa
test
bound
and
fstps
push
inc
lods
pop
and
pop
sahf
out
fiadds
sbb
mov
lods
icebp
mov
pushf
ljmp
rol
dec
cmp
sbb
iret
add
sbb
lea
push
jl
pop
or
sbbb
loop
out
aad
jb
pop
sub
les
jp
mov
mov
mov
testb
cmpps
fdivs
add
js
mov
das
cmp
adc
jne
mov
push
push
mov
push
push
das
inc
push
out
notl
push
flds
test
pop
in
adc
push
stc
jl
push
loop
repnz
adc
add
sub
mov
loope
xor
pop
xchg
imul
pop
jns
mov
jb
sbb
popa
mov
sbb
xor
in
inc
les
in
xor
fs
jae
and
and
out
icebp
pop
rcrb
movsb
cmp
mov
leave
sbb
in
shll
cmp
jl
cs
mov
add
sbb
repz
cmc
mov
out
daa
fldl
dec
pop
cmp
adc
in
sub
push
mov
adcl
or
rorl
insl
add
lcall
mov
outsl
data16
xchg
inc
mov
arpl
lcall
aaa
sbb
sbb
int
outsl
pop
jmp
pushf
jae
xchg
adc
push
lret
mov
decb
dec
hlt
xchg
and
pop
das
xchg
xchg
xlat
xchg
xchg
cld
cmp
add
mov
fadd
pop
xor
mov
dec
push
icebp
or
imul
mov
ljmp
jbe
push
pop
iret
dec
dec
and
jns
pop
loopne
cmp
push
and
outsl
inc
xor
clc
pop
mov
mov
movb
addr16
xor
xchg
sub
mov
xlat
movsb
xchg
add
stc
loop
xchg
push
sti
fildll
movsb
jl
and
adc
cmp
xor
add
nop
xor
sub
stc
cmpl
aad
dec
mov
mov
jno
cmp
mov
xor
mull
mov
imull
mov
jge
mov
mov
orl
stos
add
lods
mov
add
push
scas
mov
mov
mov
je
idivl
shll
adc
inc
add
fstps
inc
imul
hlt
mov
jmp
mov
xchg
mov
sar
sub
je
push
add
jo
lock
xor
pop
cld
cmp
add
aam
xchg
sub
aam
jb
pusha
vpshufhw
ret
popa
pop
or
xchg
sub
jle
pushf
fdivp
les
mov
das
cmc
mov
cmp
ja
xchg
pop
insb
xor
shlb
adc
mov
inc
scas
sbb
fbstp
adc
xor
fstpl
add
mov
divb
ljmp
cmp
lds
gs
add
sbb
out
sbbb
adc
or
into
mov
mov
xor
imul
subb
jp
lea
repz
sub
push
movsl
sub
inc
xorl
jp
scas
lock
xchg
repz
popa
push
adc
test
fisubrl
sarb
jae
imul
and
inc
mov
and
fldt
jmp
dec
or
push
push
shrb
popa
out
or
sbb
lret
or
shrb
xor
mov
push
xor
cli
clc
in
mov
cmp
fstl
xorb
and
jae
mov
insb
push
popl
mov
pop
xor
cli
sub
xor
inc
aas
test
lahf
dec
xchg
int
aad
add
jns
or
jb
dec
xchg
js
arpl
push
push
cmp
in
push
int3
insl
iret
popf
fidivrl
test
mov
test
pop
ret
sub
ret
mov
insb
test
sub
leave
xchg
aad
mov
imul
popa
push
jo
lock
insl
ss
xchg
pop
call
mov
scas
pusha
cwtl
jmp
mov
mov
outsb
cltd
sbb
je
pop
mov
pop
pushf
adc
jmp
fmul
cltd
loopne
pop
shll
adc
enter
je,pn
mov
mov
loop
mov
push
xchg
fcoml
and
movb
mov
mov
test
ret
mov
loopne
loope
cmc
sub
push
pop
push
inc
and
lret
lods
ds
outsl
sub
mov
xor
dec
mov
jne
call
add
loopne
jl
or
xchg
xchg
sahf
clc
idivb
pop
and
iret
bound
mov
sub
fbstp
xchg
loop
pop
mov
scas
mov
push
in
mov
fisttps
mov
mov
mov
and
push
lret
arpl
popf
addr16
mov
or
data16
bound
lea
inc
xor
inc
enter
jnp
loopne
out
sbbl
add
pop
push
xchg
xchg
out
add
ja
lds
or
adc
js
inc
repnz
adc
adcb
mov
mov
push
scas
das
mov
pop
xchg
ret
idivl
or
mov
adc
clc
pop
pop
aam
adc
mov
inc
dec
dec
jecxz
mov
les
cmp
mov
mov
adc
loop
and
loop
jecxz
mov
shrl
xchg
mov
mov
sti
das
dec
clc
shl
mov
mov
sub
scas
adc
lret
mov
sbb
xor
xchg
adc
adc
test
rorl
add
xchg
in
in
xor
pop
aad
add
push
lret
sahf
ret
mov
repnz
adc
movsb
in
cmpsl
popa
fwait
shll
pop
es
pop
or
fidivrl
dec
inc
adc
lcall
call
in
or
js
sub
pop
ret
in
xor
jb
into
push
or
movsl
outsl
arpl
insl
xchg
je
into
adc
imulb
xor
xchg
inc
and
xchg
test
adcl
fs
out
jne
lret
call
push
or
add
adc
or
inc
das
je
pop
push
xor
dec
jns
out
nop
xor
fiaddl
pop
cmp
pop
mov
pop
cmpsb
lods
pop
pop
repnz
in
sub
inc
pushf
rcr
out
and
inc
dec
mov
pop
leave
mov
or
icebp
ss
int
pop
xor
sahf
pop
iret
in
jnp
pushl
cli
mov
pop
in
scas
testl
fldenv
cmp
adc
and
sahf
mov
leave
pushf
iret
mov
or
and
cmp
mov
mov
mov
xchg
jecxz
es
and
xchg
addr16
mov
andl
xor
cwtl
imul
mov
sub
jecxz
mov
cwtl
xchg
pop
xchg
fstl
add
adc
xchg
cld
fiadds
dec
cmpsl
fdivrs
sti
mov
ror
lea
mov
test
add
push
pop
push
out
pop
cmpsb
test
mov
and
mov
rol
lret
pcmpgtb
loopne
out
repnz
adc
mov
testl
call
leave
xor
inc
je
pop
sbb
inc
dec
iret
push
hlt
inc
dec
int
cmp
fnsave
mov
jb
mov
pop
stos
out
or
push
inc
adc
dec
pushf
sub
enter
jp
xor
adc
in
pop
and
jnp
push
enter
sub
jecxz
adc
jge
inc
pop
mov
add
sbb
or
adc
adc
in
jmp
aad
inc
les
aam
inc
sbb
fwait
cwtl
adc
cli
push
add
in
scas
jo
nop
nop
sbb
rcl
scas
shl
pop
addr16
ret
dec
repz
jns
arpl
dec
push
movsl
insl
out
jo
cld
jmp
and
mov
sub
adc
movl
movsl
mov
pop
mov
lahf
aaa
es
stos
push
sti
int3
jl
mov
inc
mov
rolb
call
std
loope
adc
stos
push
push
call
scas
jo
and
loopne
sbb
mov
push
jecxz
cmp
and
cs
inc
inc
mov
xchg
mov
sbb
daa
inc
pop
inc
dec
dec
aaa
inc
mov
in
aas
lock
xor
lret
jp
mov
outsb
rcl
les
pop
mov
push
mov
dec
jl
mov
mov
push
pusha
sbb
test
ds
aam
lock
and
test
popf
mov
lods
pop
ja
mov
imul
xchg
imul
pop
ja
data16
mov
sub
ja
jle
dec
pop
push
inc
test
inc
out
call
call
xchg
mov
lahf
outsl
mov
mov
sbb
jge
mov
shl
shrb
mov
sub
ret
jle
pop
jno
xor
jo
rclw
adc
pop
jno
add
cmp
dec
adc
pop
push
scas
leave
iret
mov
and
enter
aas
adc
inc
or
mov
xchg
cmp
pusha
clc
aam
pop
push
push
sti
and
popa
dec
pop
cs
xchg
scas
mov
sub
mov
leave
sub
repnz
inc
xchg
in
aam
xchg
mov
loopne
xchg
cmp
out
in
inc
push
jns
test
pop
xor
add
cmpsb
mov
mov
aas
dec
dec
and
mov
outsb
cmc
inc
test
test
xchg
push
out
inc
divl
sbb
test
movb
ret
sahf
push
add
mov
fs
frstor
into
or
pop
cmp
cmp
scas
shrl
pop
push
pushf
fsts
adc
sbb
mov
inc
dec
fmull
test
in
pop
sub
pop
int3
xlat
clts
test
jle
and
sbb
iret
pushf
lret
out
fdivrp
lcall
cmpsl
jp
imulb
jecxz
ret
xchg
jg
or
add
and
in
loop
or
bound
xchg
push
roll
and
push
iret
pop
addl
cmc
push
mov
xor
loope
test
test
xor
ds
sub
jno
das
push
mov
aam
lods
dec
bound
pop
fs
and
sbb
push
bound
or
loopne
push
adc
pop
test
fists
inc
dec
dec
sbb
fcomp
aaa
adc
mov
fnsave
dec
mov
pop
outsb
add
ds
lea
lret
or
mov
adc
jge
push
in
dec
dec
cmp
mov
mov
outsb
subb
rorl
sub
hlt
mov
gs
lock
cmp
iret
adc
jle
push
enter
sahf
iret
addr16
jno
push
mov
pop
test
movb
push
movsl
mov
xor
sbb
xchg
or
cli
js
mov
dec
je
test
fdivs
push
fmuls
lcall
dec
jmp
xchg
jp
test
jg
or
ret
and
decl
inc
xchg
pop
pop
cmpsl
lahf
stos
dec
aad
cmp
cwtl
push
das
js
add
jle
int
xor
or
inc
jno
xor
lods
dec
js
int
jns
test
dec
push
lcall
out
mov
mov
insb
jl
je
stc
cmp
xchg
je
mov
add
mov
pop
fwait
mov
loope
les
pop
testb
and
cmc
or
sub
lods
lahf
popa
dec
cmp
jg
dec
lods
xchg
dec
add
inc
vcmpps
subl
loopne
mov
adc
mov
inc
and
sbbb
nop
mov
dec
mov
ja
ljmp
push
add
cmp
mov
adc
sbb
xchg
pop
mov
data16
adc
add
sbb
and
push
cmp
or
lods
dec
cmp
and
cmc
out
or
dec
jb
pushf
mov
pop
lcall
xchg
icebp
xchg
je
sub
out
cli
jb
imul
xor
outsb
test
xchg
aas
mov
int3
cmp
jp
fmul
cmp
adc
push
adc
add
jle
fs
rcrb
cwtl
aam
roll
iret
inc
inc
ret
dec
jp
or
cli
pop
xchg
sti
push
pop
popa
insl
xchg
cltd
mov
add
mov
cmp
or
int
arpl
ret
pop
test
sub
sbb
fsts
push
shrl
std
inc
xor
shl
hlt
xchg
push
pop
js
cmp
js
nop
pop
xor
push
push
jle
rorb
jb
arpl
lock
lret
jnp
loope
mov
int3
cmp
adcl
add
aam
inc
mov
fwait
push
inc
mov
std
mov
gs
ret
xor
scas
pop
scas
into
icebp
inc
sub
jmp
popf
add
out
xchg
push
inc
fs
inc
pop
lea
in
lock
decl
stos
xlat
jb
loope
and
inc
fcoml
xor
imul
adc
shlb
stos
push
lret
ja,pn
mov
inc
add
loop
add
adc
fldl
inc
inc
add
lea
scas
cmp
cwtl
and
push
int
test
inc
cmpl
rolb
pop
aas
xchg
cltd
rclb
add
daa
jbe
xchg
push
clc
or
mov
dec
outsl
call
adc
mov
lods
pop
jno
inc
xchg
add
sub
push
loope
addr16
inc
stc
jecxz
loope
xor
xor
loope
xchg
dec
aad
lods
sbb
int3
insb
dec
dec
push
test
fs
roll
inc
xor
xchg
fimull
push
shlb
cld
out
movsl
gs
push
jecxz
popa
and
inc
pop
push
dec
mov
push
xchg
pop
mov
cmp
or
and
clc
aad
fimuls
es
in
pop
scas
test
adc
mov
fistl
pop
insl
push
fstpt
xlat
xchg
stos
imul
cmp
sub
jl
call
fisttpl
sbb
popf
jbe
lock
das
push
mov
jae
xchg
adc
add
in
pop
shrb
xchg
sbb
ss
inc
shrb
push
cmpb
xor
sub
mov
int
and
mov
movsl
jg
xor
ss
pop
test
cmc
or
mov
push
mov
in
lcall
adc
sar
dec
cmpl
mov
leave
sti
repz
aad
xor
mov
dec
flds
lret
xor
push
sub
cmp
in
push
push
imul
push
or
hlt
inc
mov
and
and
push
enter
sahf
pop
xor
push
repnz
sbb
sahf
loope
jbe
sub
mov
in
mov
fdivrp
arpl
mov
cli
clc
jecxz
out
test
ljmp
xchg
mov
out
and
adc
loopne
mov
fildll
lahf
xor
push
pusha
mov
jg
lret
xchg
leave
adc
rorb
ds
in
fwait
xchg
dec
arpl
sbb
adc
clc
cmp
xlat
or
es
push
xchg
ror
jno
add
inc
inc
loope
roll
inc
in
das
cmp
inc
fistps
in
ret
fdivrp
xorl
out
fcomi
add
roll
mov
fidivl
inc
cmc
cmpsb
cmpsl
sbb
inc
enter
stc
lcall
repz
mov
int
jp
cld
popa
out
mov
cltd
xchg
lret
lds
or
push
fists
scas
fwait
sar
adc
pop
lods
dec
icebp
mov
jnp
ret
push
xor
outsl
mov
mov
mov
adc
mov
mov
push
mov
loop
flds
xchg
and
dec
dec
jl
icebp
jp
mov
out
sbb
sub
mov
leave
pop
cmpsb
add
sbb
pop
add
aas
mov
fisttpll
out
scas
sbb
cmp
lret
fiaddl
out
ljmp
jnp
insb
lods
fwait
data16
lret
xor
int
loop
pop
adc
ss
push
dec
aaa
pusha
fwait
jge
ljmp
mov
pop
xor
and
mov
mov
sbb
loopne
insl
or
sub
mov
push
or
sbb
xor
mov
jge
xchg
and
test
pop
jo
xor
out
insb
daa
ds
mov
xchg
inc
fsubrs
pop
add
test
mov
jg
mov
std
imul
es
push
add
mov
popf
sbb
dec
dec
xchg
sarb
jo
dec
out
push
add
cmp
je
sbb
iret
push
ds
mov
adc
xchg
mov
aas
movsb
xor
adc
shr
sub
sub
mov
xchg
xchg
inc
sahf
inc
and
push
out
push
fwait
imul
arpl
in
leave
pop
int3
inc
nop
in
ss
dec
mull
es
nop
std
lock
mov
push
andb
dec
ljmp
jb
or
pushf
xor
xchg
dec
mov
or
insb
repz
mov
notl
mov
lea
push
xchg
push
imul
test
ljmp
int
xchg
movnti
nop
pop
inc
xchg
adc
pop
lcall
inc
xchg
or
sub
lret
fistpl
pusha
sbb
inc
mov
scas
jecxz
je
cmp
in
dec
fistpl
loop
outsl
imul
test
xchg
popa
xchg
lret
dec
adc
xor
aas
add
addl
scas
rorb
or
paddsw
or
inc
add
jg
dec
aas
cld
sub
fistps
hlt
pop
fs
popf
aaa
imul
pop
data16
decb
pop
insl
fildll
ret
jne
mov
aad
xor
jns
rcll
sahf
pusha
int
lret
jb
sub
and
out
imul
inc
push
decb
mov
cmp
push
cmp
cmp
cmp
mov
push
jbe
mov
cld
flds
cmpl
dec
lods
and
or
jno
xchg
out
push
shl
and
bound
jle
ljmp
subl
nop
cmpsb
mov
cmp
xor
fwait
insb
clc
outsl
pop
add
fcomps
sbb
leave
insl
popf
ret
rol
or
dec
addl
cs
jle
inc
jle
jp
cs
stc
inc
aad
inc
pushf
pop
ffreep
jp
mov
cmc
js
or
cmp
cmp
idivb
inc
gs
xor
mov
dec
clc
mov
int
cmpsl
jle
pop
dec
or
sbb
and
jg
mov
std
xchg
fildll
enter
andl
or
popa
dec
push
mov
add
leave
rol
mov
mov
dec
lret
lock
xor
aam
clc
pop
outsb
sub
mov
scas
in
sti
dec
mov
sti
pop
xor
lret
dec
hlt
sahf
enter
movsb
and
rorl
dec
test
fcoms
xchg
insl
loopne
xor
xor
in
lods
pop
gs
cwtl
pop
push
fst
sahf
jns
stc
inc
aaa
daa
leave
ljmp
rclb
in
ja
sbb
dec
push
rorb
pop
pop
pop
sarb
push
add
bound
fldt
fcomps
faddl
imul
fcomip
mov
adc
enter
js
jbe
loope
jmp
scas
inc
int3
test
mov
mov
cmp
bound
jl
es
iret
rcr
in
aas
inc
push
xchg
add
sbb
nop
cmp
js
cs
hlt
mov
inc
je
mov
test
xor
mov
push
jle
pop
rcrl
and
mov
pop
push
in
and
cmp
lret
repz
jbe
inc
call
je
cwtl
subl
adc
mov
mov
xor
popa
and
hlt
subb
xchg
mov
add
pop
pop
cmc
mov
popa
fimull
adc
dec
adcb
mov
cmpsl
icebp
jnp
shrl
scas
lods
and
adc
or
pop
ret
outsl
dec
aas
outsl
mov
fdivl
pusha
inc
fildl
hlt
test
insl
xchg
int
fisttpll
std
stos
cwtl
ret
push
adc
lea
aas
mov
mov
mov
or
dec
sub
out
hlt
out
out
gs
fsubl
cmp
adc
fsubrs
xor
cmp
call
lods
push
out
jno
xchg
add
adc
icebp
inc
shl
sbb
push
sub
pusha
or
cmp
sti
subb
stos
gs
xor
push
adc
fldt
loopne
or
bound
in
shll
push
insl
xchg
popf
fcompl
xchg
cmpl
aaa
in
cmpsl
lods
mov
addl
cli
push
pop
cmp
into
xor
push
xor
jmp
imulb
clc
int3
dec
inc
ja
cmp
out
fwait
xor
jns
stc
inc
fcompl
icebp
pusha
je
sub
jae
subl
pop
or
pop
adc
jbe
mov
xorl
jge
hlt
add
xor
xlat
stc
test
mov
enter
loopne
out
push
jmp
xchg
cmpsl
adc
push
ljmp
pop
xchg
jns
mov
data16
adc
or
adc
push
sub
mov
xor
adc
scas
ret
cli
jo
inc
or
inc
pop
sbb
inc
sbb
push
pop
add
xor
gs
insb
cmc
add
push
je
cmp
aaa
fisttpl
pop
fsubr
popa
push
push
mov
es
das
jmp
inc
lret
xchg
call
adc
addr16
dec
scas
fsub
push
fisubs
jg
mov
aam
sub
mov
push
mov
xor
out
push
mov
add
inc
sub
shrl
fstpl
push
sub
out
cmp
sbb
xor
push
sbb
dec
sti
jmp
cmp
and
jae
adc
mov
push
test
inc
popf
mov
mov
outsb
mov
mov
insb
pop
jnp
sbb
aam
sti
adc
pop
je
leave
fldl
cmc
xor
mov
loope
lahf
rorb
insl
fisttpll
shll
push
adc
jecxz
int
ss
in
fdivs
add
jp
sbb
xor
inc
or
filds
fldt
xor
into
cmovnp
daa
out
jne
sub
movsl
testl
lods
add
stos
push
mov
mov
pop
cld
mov
pop
mul
cmc
das
int3
scas
iret
lods
sub
gs
clc
hlt
mov
out
inc
movsb
pop
mov
mov
hlt
pcmpeqw
and
shlb
lret
rolb
dec
add
jnp
cltd
int3
int
adc
ret
scas
lcall
or
dec
add
bound
movsb
in
pushf
and
pop
push
pop
addb
fucomip
mov
dec
stos
or
in
test
push
rcrb
fstpl
rolb
sti
jecxz
adc
mov
test
bound
repz
test
dec
ja
xchg
jl
in
ss
repnz
loope
test
clc
mov
rcll
xchg
mov
arpl
sbb
pop
test
outsb
push
fiaddl
dec
loopne
adc
mov
add
push
adc
jno
popa
pop
out
mov
mov
insl
adcb
movsb
call
sub
repnz
movb
jle
lea
movsl
sub
push
mov
jne
clc
dec
les
lods
mov
loopne
pause
subl
jle
jmp
mov
xor
movsl
ret
stos
aaa
out
mov
cld
cmp
lods
aad
rorb
mov
int3
loope
xor
out
std
inc
cwtl
mov
repnz
test
jmp
pop
xchg
sti
push
loope
jmp
sub
test
mov
mov
jge
jb
shrl
push
icebp
adc
fnsave
imul
jns
ljmp
lock
inc
dec
sbb
aaa
dec
mov
insb
xor
sbb
lcall
xlat
jmp
filds
mov
lods
cmp
adc
mov
pop
pop
dec
sarl
or
pop
sub
dec
dec
add
mov
sub
cs
cli
arpl
arpl
lret
test
fstpt
sbb
jae
out
cltd
fstpt
imul
cltd
std
into
scas
jbe
outsb
iret
jb
cmp
pop
test
cmp
stos
sbbb
int3
pop
outsb
js
push
daa
xor
adc
xchg
mov
out
rcl
negl
loope
in
mov
pushf
loop
and
mov
psllq
mov
jge
sahf
mov
fwait
pop
pop
lods
scas
cmp
pop
shll
sub
push
insl
adc
pop
dec
ds
cltd
sbbb
mov
inc
xchg
mov
pop
rolb
push
mov
add
jns
out
iret
mov
dec
pop
std
dec
mov
adc
sub
sbb
mov
out
mov
jecxz
add
push
jmp
iret
jnp
mov
mov
or
jmp
xchg
inc
cmp
cmp
cmp
mov
in
ja
mov
lret
mov
enter
movsl
sbb
cmp
add
push
out
arpl
aaa
lock
cmp
push
imul
mov
out
adc
inc
xor
sti
jo
mov
sbb
sub
loop
lods
dec
pop
lret
add
add
aaa
mov
in
xor
in
jecxz
out
inc
cmpsb
jns
add
les
xchg
cmp
xlat
fcomp
outsb
fcoml
mov
jae
jge
xchg
lahf
in
mov
stos
inc
cmp
test
int3
xor
and
sbb
rcrb
call
mov
mov
popa
mov
insl
and
xor
in
add
push
in
cmp
jmp
pop
or
add
dec
xchg
nop
cli
loopne
inc
mov
sbb
lahf
sahf
cmpsl
add
mov
sub
and
cwtl
add
pop
popf
or
rcrb
jg
cmpsl
sahf
gs
ret
sbb
or
and
cmp
cmp
imul
sub
mov
testb
movsb
and
insl
jl
or
add
mov
das
out
xor
fsubs
enter
cltd
js
fistl
sbb
lcall
pop
insb
arpl
sbb
pop
inc
inc
out
xchg
popa
fcoms
add
mov
subl
in
icebp
dec
stc
lahf
icebp
jmp
mov
test
pop
cltd
mov
jl
xchg
pushf
mov
loopne
testb
sub
inc
pop
pusha
jg
fcmovne
inc
cmp
hlt
sub
mov
lret
jge
mov
jno
das
cli
leave
shll
cmp
loop
je
stc
fsubrs
stos
hlt
jnp
inc
or
xor
add
mov
addb
inc
fsts
lahf
mov
xor
xor
pop
cmpl
dec
pusha
int3
loop
rcr
iret
mov
sbb
test
pop
jecxz
dec
pop
mov
inc
lock
scas
adc
mov
mov
rcrl
in
cmp
int3
movsl
cli
out
xchg
pop
inc
mov
pop
stos
pop
xor
ret
pop
lcall
rclb
inc
arpl
mov
inc
sub
cmp
or
cmp
mov
xlat
jecxz
push
pushf
add
loopne
es
inc
sbbb
sub
jmp
mov
cmpsl
daa
push
inc
leave
or
jmp
out
aad
xchg
push
xchg
push
or
cld
push
lods
arpl
in
mov
adc
out
cmpsl
js
xor
je
aad
pop
pop
inc
imul
lret
push
out
fld
sarl
fldt
pop
popa
ja
scas
sbb
xor
mov
nop
bound
testb
jecxz
mov
mov
popa
pop
scas
rclb
mov
add
fwait
add
add
dec
ret
addr16
inc
rolb
shrl
cmc
add
int3
jbe
fdiv
int
mov
cwtl
subb
cmp
adc
out
xlat
shr
aaa
pop
jb
loopne
in
push
mov
mov
pop
nop
sbb
sahf
and
jb
dec
arpl
add
lret
test
sarl
je
push
mov
pop
xor
sbb
xchg
mov
mov
sbb
cwtl
insb
dec
cmp
cmc
fstpt
arpl
pop
pop
mov
adc
mov
inc
lahf
xor
dec
out
test
pop
das
pop
scas
loopne
mov
in
cmp
xchg
mov
push
xor
mov
jo
jbe
cmp
pushf
std
xchg
call
jae
in
fcompl
add
jae,pn
and
loopne
fstl
push
dec
mov
jecxz
mov
out
dec
dec
add
jp
or
sti
or
mov
push
push
out
inc
pop
daa
in
cwtl
daa
es
das
outsl
out
test
nop
mov
add
outsb
stos
fbstp
das
in
sub
movsl
inc
xor
cmp
jmp
pop
cltd
adc
ja
inc
nop
loopne
stos
loopne
test
sub
jp
insl
mov
ret
cmc
mov
push
stos
divb
adcl
sbb
jns
dec
lahf
adc
and
lea
add
cmp
push
aaa
in
sti
js
add
sbb
hlt
cmpsl
jmp
lods
jns
pop
fdivp
rcrb
lret
pop
add
xchg
mov
cs
mov
mov
inc
dec
and
enter
lret
adc
addb
rolb
js
xchg
or
testl
fwait
mov
pop
scas
sbb
jbe
rsm
cmpsw
inc
das
mov
aam
jae
mov
and
mov
cmp
push
xor
sub
fcompl
cwtl
sbbb
inc
inc
pop
dec
adc
pop
push
cld
std
inc
fidivrs
fdivl
stc
pop
pop
lret
cmp
in
filds
jae
js
ret
int3
mov
scas
mov
pop
xor
jns
push
dec
pop
pop
cli
and
ret
and
mov
and
lcall
or
pop
cmpsl
pop
jg
cmp
aam
adc
sub
lahf
popf
pop
push
mov
mov
pusha
sarl
jecxz
mov
lock
in
out
mov
cmp
dec
mov
shl
ret
mov
fcmovb
mov
dec
xor
mov
ss
cmc
lret
rcl
inc
mov
jecxz
inc
inc
xor
pop
mov
cmp
sbb
stos
lods
jp
in
scas
aaa
xorb
adc
xor
rorb
imul
adc
mov
pop
add
jg
in
xchg
sbb
pop
cwtl
icebp
sub
pop
lds
imull
jge
and
insl
sbb
pop
pop
xchg
or
icebp
popf
and
or
inc
lret
faddl
arpl
inc
test
ja
xor
and
clc
mov
mov
add
mov
mov
push
mov
jbe
popa
dec
jg
push
add
movsl
out
addr16
aas
pop
mov
inc
mov
xchg
aaa
in
or
mov
pop
into
sti
pop
mov
xchg
scas
push
xor
test
jp
hlt
add
or
daa
out
loop
push
dec
cmpsb
mov
add
mov
xor
mov
test
and
rol
aas
inc
xchg
jp
jmp
ficoms
lea
rolb
mov
push
add
sbb
dec
mov
mov
mov
lea
xor
xor
xor
orb
or
push
addr16
mov
sbb
gs
push
fcmovb
mov
xchg
xlat
bnd
mov
pusha
cli
jmp
lds
or
xchg
cmpsb
push
adc
arpl
jl
adc
in
icebp
push
insb
mov
das
pop
out
outsb
mov
mov
and
pop
addr16
test
pop
sub
jo
ljmp
jnp
cmpsb
mov
lods
dec
jg
adc
movsl
nop
mov
loopne
ljmp
loop
mov
adc
std
dec
subl
and
test
sub
mov
or
adc
loop
pop
jae
out
push
icebp
stos
mov
addr16
rcrb
mov
scas
popa
pop
insb
je
or
pop
subl
or
mov
xor
mov
xor
ljmp
push
cmp
xor
sub
cwtl
fstpl
sbb
jle
pop
and
imul
mov
xchg
iret
pop
das
jne
es
lret
leave
dec
lods
call
into
dec
mov
ret
xchg
and
pop
stc
jmp
xchg
stc
cltd
dec
test
lahf
sub
dec
pop
push
ret
dec
cld
and
aas
pop
mov
jns
cmpsb
jl
add
jl
lret
push
jnp
sbb
gs
or
lea
rcrl
fsubrp
das
jecxz
pop
dec
cmc
fidivrl
jg
loopne
paddd
cld
pop
leave
fnstsw
out
push
faddl
cld
stos
add
and
cmp
out
movsb
cmpsb
js
lahf
cli
and
cltd
lea
out
cmpsl
lds
xor
push
aas
cld
and
in
mov
and
icebp
mov
imulb
mov
xchg
aaa
scas
repnz
dec
lock
adc
rcrl
pop
mov
sbb
rorb
lahf
out
stc
pop
mov
pop
mov
mov
add
mov
es
dec
testb
dec
jb
sbb
outsl
inc
inc
mov
cmp
or
stos
adc
aas
add
outsl
jmp
dec
mov
mov
fwait
fstpl
ljmp
xchg
push
xchg
xor
dec
popf
inc
dec
setl
ret
pop
leave
inc
scas
pop
adc
mov
lods
bound
test
jae
shrb
icebp
push
cmp
mov
push
push
rclb
cltd
int
sub
shrb
mov
push
sub
cmp
cs
lds
sbb
rolb
inc
lods
stos
push
or
popl
loop
scas
icebp
sub
inc
inc
sub
data16
cwtl
fadds
cmpsb
call
movsl
jae
mov
push
es
dec
js
cmp
jb
mov
jbe
loope
int3
stos
pop
inc
aas
sub
mov
or
dec
pop
sbbb
test
ljmp
mov
pop
sbb
jae
enter
push
mov
jnp
pop
nop
mov
rcll
aaa
jo
std
aad
cmpsl
mov
and
scas
jne
nop
dec
test
dec
fsub
iret
pushf
cmp
push
js
out
or
push
push
sahf
sbb
stc
mov
push
add
es
rcrl
cmp
xor
bound
inc
pop
imulb
lret
inc
aas
call
xor
ret
loopne
ds
rolb
or
fwait
inc
insl
imul
or
push
or
ficoml
daa
jo
xor
and
or
mov
jnp
gs
xchg
aas
cmp
add
cs
aaa
stc
mov
sub
loopne
aas
cmp
sbb
fwait
add
repz
in
push
movlps
mov
pop
mov
outsl
push
mov
sub
xor
jnp
cmp
scas
das
jno
sti
pushf
scas
int3
andb
or
xchg
xor
sbb
scas
fists
mov
mov
dec
xchg
inc
into
mov
prefetchnta
icebp
or
inc
andl
out
clc
hlt
mov
jne
adc
cli
pop
mov
or
sbb
xor
mov
xor
fs
jb
mov
iret
addr16
ds
imul
xor
cmp
xchg
ret
test
inc
jnp
pusha
adc
mov
dec
mov
pushf
movsb
or
jle
test
daa
adcb
lahf
arpl
sub
inc
cwtl
pop
aas
dec
pusha
out
loopne
dec
outsb
fistps
mov
inc
push
orb
lret
lret
ficomps
xorl
int
jge
into
cltd
jmp
popf
pop
and
icebp
cmp
xchg
add
in
lret
fcoml
mov
sub
add
mov
pushf
cmp
mov
lahf
in
es
xchg
mov
cmp
fmuls
sbb
and
xchg
add
movsl
sbb
xchg
shrb
pop
fstps
or
cwtl
push
sub
pop
movsb
mov
push
imul
pop
enter
scas
pop
xor
mov
dec
xlat
aad
mov
data16
and
inc
addb
movsb
fwait
cltd
jle
popf
pop
mov
xor
mov
or
sbb
ficoms
mov
cmpsb
or
mov
sbb
mov
mov
jp
sbb
les
jmp
mov
sub
xor
pop
lods
mov
sub
inc
push
add
fsubrl
insb
je
fs
mov
inc
jbe
adc
add
pusha
adc
jge
dec
int3
mov
and
fimuls
inc
cmpsl
call
stos
subl
cwtl
popf
and
stc
jge
pop
cld
and
sub
fwait
mov
fdivr
push
aam
xor
std
test
cmp
outsl
inc
lock
sub
test
pop
mov
gs
xor
lcall
sub
movsl
jmp
mov
sub
pop
mov
mov
xor
ret
cmpsb
pop
fs
mov
mov
imul
pop
popf
js
es
xchg
dec
popf
jg
in
aad
xchg
push
sti
adc
cmp
cmc
mov
divb
in
lret
pop
pop
push
aas
in
inc
int3
adc
popf
mov
lods
lret
pop
xor
dec
popf
fcmovu
notl
dec
in
ja
dec
data16
divb
loopne
adc
gs
bound
lcall
rcrl
push
mov
cmpps
pop
inc
xchg
aad
cltd
sbb
adc
shll
mov
dec
movsb
ljmp
nop
pop
ja
cmp
xchg
loop
mov
sub
mov
xchg
roll
add
cmpl
iret
sbb
bound
cs
push
xlat
fsubrl
stos
mov
push
cmp
in
arpl
xchg
inc
push
dec
push
pop
decl
sub
into
imul
lock
jnp
sub
dec
mov
jmp
out
dec
stos
xchg
sub
int
sbb
mov
repz
out
iret
fdivl
notb
jcxz
jg
jmp
stc
test
mov
dec
and
mov
jbe
imul
fdivp
jne
inc
mov
pop
dec
sub
call
push
popa
subb
pusha
test
or
and
lods
scas
imul
push
or
sbb
sub
stos
xor
add
loope
cli
arpl
scas
mov
jne
insb
mov
mov
shlb
inc
push
je
dec
idivb
ja
scas
xor
dec
popa
xchg
out
into
std
in
jnp
mov
xor
xchg
movsb
bound
in
cltd
sub
sub
or
jbe
and
xor
mov
xlat
jno
sti
sub
jns
fldt
scas
in
sub
inc
dec
push
jno
popa
jnp
mov
xor
and
insl
adc
pop
sarl
call
popf
fcompl
jno
test
pop
cli
out
je
and
sbb
mov
push
adc
not
adc
dec
mov
adc
sbb
cmp
negl
mov
cs
mov
inc
pushf
test
push
xchg
mov
and
aaa
lds
test
fnstcw
mov
int
xor
or
aad
sbb
xchg
sub
ds
int3
mov
std
in
icebp
out
dec
pop
mov
sbb
or
pop
into
jo
sub
xor
mov
addr16
pushf
add
xchg
pop
xor
xchg
sbb
mov
stos
scas
fnsave
jbe
in
xor
mov
push
in
fsubrl
xchg
push
mov
sub
mov
in
mov
aaa
inc
dec
adc
jbe
push
cmp
jne
pop
in
jecxz
test
cli
jo
test
sub
pop
rclb
pop
push
popf
xor
cmpsl
jg
sub
ja
bnd
push
xlat
popa
test
push
jg
je
enter
push
and
pop
cmpsl
fcomp
fs
mov
in
sbb
xchg
sbb
ljmp
jbe
or
sti
popa
daa
negb
sbb
test
ja
and
pop
jge
repnz
fsubrl
dec
popa
pop
gs
jle
add
cli
mov
pop
fidivrs
xchg
xchg
dec
les
cmp
xor
cmp
outsb
scas
pusha
jge
test
inc
mov
and
das
sub
lahf
lcall
lcall
je
dec
push
js
jecxz
pop
outsb
shlb
aad
cmp
cli
pop
ljmp
and
pop
xor
lea
dec
add
in
in
hlt
sbb
pop
hlt
stos
inc
cmp
hlt
stos
out
mov
and
clc
push
push
inc
sbb
inc
outsl
jmp
in
loope
ret
dec
lea
mov
push
sub
insb
stos
jl
xlat
adc
adc
rcrb
sti
cmp
loope
cmpb
sub
or
add
je
test
outsl
add
push
in
pop
push
cld
rcr
sbb
shlb
cld
push
sub
stc
jne
mov
xor
dec
dec
fwait
dec
mov
push
jp
lret
push
and
bound
cmp
stos
mov
add
cwtl
out
iret
shll
and
aam
testb
inc
push
arpl
scas
push
ss
movsl
imul
or
in
and
jb
cld
sysenter
out
cmp
pop
addl
push
inc
les
xchg
fs
fiaddl
xchg
adc
lds
adc
movsb
bound
and
adc
mov
push
test
mov
jbe
test
nop
and
inc
xchg
pop
out
pushl
sbb
daa
xchg
xchg
pop
adc
or
push
pop
push
sbb
xchg
inc
mov
shlb
xchg
adc
and
xchg
cmp
aam
fsubl
xchg
inc
roll
pop
les
pop
jmp
stc
inc
shll
aas
add
or
fldenv
movsb
clc
addr16
add
mov
inc
shl
sarl
gs
lock
add
mov
push
cli
mov
xor
jmp
stc
pextrw
cltd
outsb
fdivrs
lret
cmp
inc
push
push
mov
or
jo
mov
popf
cmpsb
movsb
jp
loopne
or
adc
jnp
push
push
notl
pop
aad
sbb
inc
jo
das
lcall
xchg
and
xlat
inc
in
test
and
mov
mov
mov
add
jo
movsl
icebp
popf
mov
subl
lock
rorl
cmp
cltd
dec
adc
fstl
cmp
bound
pushf
test
cmpl
pop
lss
jae
push
imul
lds
hlt
sub
in
sbb
fwait
cmpsl
imul
mov
inc
push
stos
cmpsl
push
mov
cli
lods
fldcw
dec
sbb
js
xor
enter
mov
cmpsb
out
popf
int
mov
je
inc
cltd
sub
xor
push
mov
mov
notl
push
push
mov
test
roll
mov
jle
negb
jae
mov
adc
mov
imul
pop
mov
xrelease
das
mov
ds
stos
xchg
popf
jns
add
cld
jne
push
repz
lcall
and
shll
das
mov
cmp
movsb
jmp
adc
fwait
pop
shlb
and
inc
fiaddl
jo
add
cmp
mov
mov
xor
add
arpl
push
xchg
mov
push
pop
mov
icebp
or
pushf
lods
fidivrl
lcall
or
xchg
xor
es
aam
xor
imul
xchg
dec
sbbb
adc
icebp
push
push
pmulhw
lods
es
mov
inc
out
mov
bound
lret
dec
sub
out
aas
jae
mov
mov
mov
pop
test
out
das
lcall
jno
pop
lcall
mov
push
call
sahf
in
inc
clc
repnz
push
out
fxch
xlat
fs
xor
stos
lahf
inc
mov
test
mov
or
xchg
xor
mov
imul
gs
stos
lcall
push
cmpsb
xchg
out
sub
mov
and
mov
add
out
dec
xor
jl
repz
cld
xor
aad
fcom
xorl
mov
xchg
lahf
adc
test
das
mov
out
testb
outsb
add
mov
mov
cmpsb
inc
inc
sahf
lret
fsubrl
aam
xchg
scas
fsts
icebp
subb
mov
jle
xlat
inc
les
out
cmp
loope
fildl
sub
cmc
rorb
fisttps
test
mov
rcrl
dec
pop
decb
in
aad
dec
xor
mov
fstl
adc
sub
pop
and
divl
xor
pop
pop
loopne
cld
movsl
pop
test
sub
xchg
sti
adc
movsl
das
push
dec
js
push
loop
std
mov
ja
in
cmp
ljmp
and
xor
mov
hlt
hlt
pop
sahf
fistps
aad
sbb
inc
adc
fsubs
add
addb
fidivrl
push
cmp
jbe
inc
xchg
shlb
sahf
nop
ret
icebp
das
scas
les
or
scas
and
out
rcrl
fcmovnb
mov
int
or
mov
mov
js
jle
in
dec
push
xchg
pop
loop
repnz
push
jg
leave
lods
xchg
mov
dec
call
std
int
jl
ret
push
jb,pn
shrb
mov
mov
or
mov
xor
popa
sub
fidivrs
xchg
fidivs
sub
sub
js
inc
rorl
out
xlat
adc
insl
mov
xor
sbbb
add
jbe
jbe
mov
jns
in
or
std
pop
mov
mov
and
in
int
and
test
mov
adc
aad
jns
andl
scas
inc
sarl
dec
into
mov
sbb
mov
adc
js
pop
lods
fisttps
inc
sti
push
das
test
cmp
xchg
jge
fsubrl
adc
and
je
adc
or
push
mov
inc
lcall
or
jne
pop
add
dec
icebp
dec
add
and
lret
mov
sbb
xchg
cmp
outsb
call
mov
lods
addl
mov
jge
or
popf
add
mov
jg
ds
mov
aas
sti
orb
cmp
je
xchg
sub
sbb
mov
inc
sbb
mov
jo
leave
inc
sub
cmp
adc
jecxz
mov
pop
mov
or
cmp
mov
addr16
sub
mov
jge
iret
stc
fstps
jle
fisubrs
mov
addr16
test
push
out
aam
jl
and
jmp
outsl
bnd
xchg
and
das
mov
mov
leave
roll
add
addr16
mov
pop
mov
push
aad
xlat
mov
sub
cmc
enter
sbb
outsl
pushf
std
int
pop
mov
cld
jecxz
mov
imul
mov
adc
fucomip
push
scas
mov
test
mov
das
push
cmpsb
call
jmp
test
outsl
je
clc
and
popa
push
enter
fisubl
add
test
clc
lret
bound
and
subl
shll
inc
or
sahf
call
loopne
add
imul
mov
cmp
cmpsb
jecxz
mov
ret
xchg
movsb
push
fimull
rol
push
pusha
dec
mov
testb
inc
push
dec
das
adc
mov
sti
pop
mov
dec
dec
cmp
scas
xorl
stc
or
imul
std
adc
cmc
xchg
dec
pop
into
pop
push
test
flds
and
adc
adc
add
dec
adc
adc
and
subb
mov
jmp
cwtl
push
push
add
rolb
call
cmp
push
lcall
cmp
cld
lods
sub
test
ret
faddl
bound
xchg
ret
aad
ja
jns
mov
xchg
fidivrl
test
adc
gs
jecxz
loopne
xchg
call
int
outsl
push
insl
test
out
mov
stc
pop
or
les
jae
dec
adc
sub
xor
out
xor
loopne
rclb
xchg
sub
mov
arpl
inc
fsubr
push
mov
sahf
mov
orl
loop
fdivrs
pop
adcl
sbb
test
mov
or
mov
fsubrp
jge
les
outsl
xchg
mov
hlt
xor
outsl
mov
pop
or
iret
daa
jge
fmulp
cmp
repz
inc
subl
clc
int
loope
jo
dec
test
pop
adc
and
add
icebp
sub
mov
and
outsl
imul
cmp
or
dec
jle
je
dec
jbe
roll
fbstp
push
mov
addr16
and
popl
and
lahf
cmp
push
mov
jle
mov
scas
dec
orb
inc
mov
leave
pop
jns
sti
arpl
lret
jge
mov
mov
add
stos
inc
mov
xchg
dec
out
lahf
in
inc
invd
rcrb
push
lcall
scas
pop
notb
add
cs
cmp
orl
mov
cld
push
popf
jg
lahf
aam
out
xchg
inc
cmp
or
add
loopne
negb
add
insb
lret
push
lods
add
fsubrs
out
out
pushf
lahf
adc
mov
movsl
dec
pop
divl
hlt
fistpl
add
inc
mov
mov
neg
mov
or
addr16
mov
pop
sbb
test
call
les
in
daa
lret
cmc
cmp
popf
cltd
adc
push
test
push
and
xor
out
std
hlt
insb
cltd
jne
lahf
xor
push
aaa
icebp
aas
push
xlat
loop
insl
icebp
popf
pop
and
int
shlb
xchg
or
cmp
push
fisubrs
nop
xorb
negb
and
dec
sti
jge
inc
push
xchg
hlt
cs
mov
adc
sar
mov
mov
or
xchg
mov
adc
movsl
cmpsb
and
rorb
pop
in
les
mov
int
pop
scas
fstl
int3
push
je
xchg
pop
rclb
sub
outsl
mov
push
mov
jg
movsl
xchg
imul
dec
adcb
mov
or
movsl
mov
adc
fmull
leave
cmp
sub
repnz
loop
push
int3
mov
int
mov
or
call
ja
xchg
sbb
pop
adc
movl
repz
and
filds
push
test
xchg
cmc
mov
lods
jg
in
insl
push
ficompl
movsl
mov
shlb
jbe
cwtl
jl
cmc
out
and
es
rcrl
inc
rol
clc
in
shll
mov
fwait
std
out
inc
fildl
cmpsl
cli
or
inc
add
pop
xor
mov
xchg
pop
fbld
out
jb
push
xchg
idivl
popf
popa
mov
mov
cmp
nop
or
fldt
ja
or
mov
or
jmp
sarl
insl
dec
outsb
sahf
hlt
sbb
push
mov
lret
push
hlt
scas
popa
out
sub
add
test
push
jo
inc
add
fwait
ret
outsl
sarl
adc
jecxz
dec
push
push
mov
xor
dec
outsl
jecxz
mov
pop
cld
hlt
rcl
in
bound
loop
insl
out
mov
popa
lcall
and
push
inc
mov
push
pop
jge
subl
adc
test
pop
push
rcll
jle
shll
test
test
or
sub
jb
aaa
sbb
mov
pop
inc
fimuls
adc
adc
insb
cli
cli
lods
in
dec
dec
adc
xor
scas
imul
pop
cli
dec
divl
out
cmp
cmp
lock
es
test
je
sbb
fiadds
ljmp
add
outsl
out
cmc
test
ret
sbb
outsl
push
xor
add
fcomps
je
push
outsb
mov
adc
push
dec
jnp
xor
cmpsl
loop
in
out
dec
gs
jne
or
pop
mov
in
cmpb
cmp
insl
jae
mov
mov
mov
adc
add
cld
add
rorl
scas
movsl
xor
out
jno
fwait
int3
mov
pushf
pusha
cs
pop
push
or
js
sti
leave
mov
jnp
cltd
push
xor
mov
push
sub
inc
or
add
jnp
outsb
mov
push
loop
inc
push
rcrl
inc
mov
add
movsl
inc
in
xor
mov
xor
outsb
adcl
xchg
popa
inc
dec
ljmp
or
sahf
ja
pop
or
pop
or
mov
push
fsubr
dec
lods
mov
sub
xor
mov
and
flds
mov
xor
pop
aas
ds
cmp
cmp
ficoml
jge
das
jecxz
pop
out
dec
jmp
jns
push
or
cmp
test
cmpsb
inc
out
and
outsb
xchg
mov
setns
mov
das
out
sbb
call
add
mov
pop
push
rcrb
mov
subl
cmp
adc
clc
into
ret
daa
leave
dec
jbe
jmp
add
xchg
shrl
je
inc
mov
add
xchg
mov
push
jbe
js
push
ret
cmp
pop
fcomps
out
icebp
jmp
sbb
dec
xor
std
inc
xchg
cltd
mov
dec
xchg
xchg
outsl
mov
pop
add
xor
add
mov
and
daa
subl
inc
jno
test
mov
sti
dec
outsl
mov
jmp
or
cli
imul
mov
pop
imul
push
out
inc
lea
outsb
dec
push
nop
mov
mov
mov
xchg
mov
ret
mov
cld
inc
sub
mov
adc
rcll
push
lods
dec
or
or
inc
imul
testl
jmp
out
aad
mov
cwtl
jl
inc
int
movsl
xor
mov
jg
or
add
sarb
dec
inc
in
mov
xchg
mov
clc
ds
push
dec
fsubrl
push
inc
imul
cmp
stos
arpl
pop
js
sub
popf
std
or
xchg
xchg
ds
mov
jg
or
imul
cld
xchg
imul
push
sbb
mov
shrl
adcb
xchg
into
push
pop
jl
int3
jecxz
cmpsb
cwtl
mov
je,pt
pop
mov
test
and
pop
stos
pop
push
dec
icebp
es
dec
sahf
xchg
or
mov
test
out
xor
test
inc
dec
xchg
xor
mov
sub
adc
and
out
insl
scas
sub
pushf
loopne
xor
jge
xor
rol
sahf
and
lea
sub
rcrb
lret
and
jle
outsl
inc
push
movsb
movsb
fstpt
jle
fistpll
and
aas
test
cmp
or
xchg
je
out
or
adc
lret
xchg
test
sbb
test
dec
dec
test
cmp
xor
pop
out
in
mov
inc
adcl
idivb
cwtl
and
repnz
add
push
xchg
push
dec
ljmp
add
clc
jne
pop
xlat
or
sysret
add
xorl
add
pop
pusha
inc
jnp
ss
and
imul
mov
es
popa
daa
pop
test
imul
xor
movsb
dec
mov
les
jl
out
cmp
cmp
nop
mov
fwait
push
nop
daa
xor
jmp
xor
ss
xchg
ret
movsb
inc
fidivl
xchg
push
js
pop
cld
mov
insl
movsl
push
sbb
imul
xlat
push
adc
adc
xchg
stos
xchg
push
pop
repnz
cmp
push
sbb
jp
fwait
lods
lea
mov
xor
or
loopne
ss
push
sbb
dec
arpl
or
scas
aas
inc
push
inc
icebp
fnstenv
add
idivb
rcll
cmc
inc
pop
xor
divb
out
xor
xchg
pop
jbe
cli
fbstp
sbb
mov
fs
add
fildl
cmpsl
mov
add
mov
mov
lahf
ja
xchg
mov
adc
mov
lods
mov
ret
mov
cmp
xchg
xchg
dec
and
xchg
jne
push
fistpl
dec
sti
int
xchg
cmp
add
dec
xor
adc
ja
xlat
cmpb
imul
jge
fidivrl
sub
jb
or
in
inc
xor
push
loop
test
aaa
out
pop
hlt
pop
in
hlt
sub
sub
rolb
in
push
add
adcb
in
sub
icebp
das
jnp
push
arpl
cmc
push
popa
jns
movb
adc
jg
pop
inc
dec
dec
incl
mov
shrl
sahf
xchg
inc
inc
pop
test
in
sbb
fwait
mov
cmc
adc
pop
add
mov
mov
push
cmp
push
andb
and
test
clc
ret
mov
popa
mov
test
in
mov
in
push
jae
jg
unpcklps
and
xlat
sub
and
lds
mov
fcomi
je
imul
add
inc
cmc
hlt
fs
mov
gs
push
pop
std
or
leave
fwait
mov
pop
in
pop
and
out
add
lods
jne
hlt
mov
inc
fstps
dec
mov
adc
mov
ss
lcall
xchg
int
js
mov
xor
cli
lea
bound
bound
mov
sub
xor
fstps
xor
xor
bound
in
dec
dec
dec
in
addr16
push
fnsave
cld
sahf
fcoml
scas
jne
jne
cmpl
push
inc
inc
popf
mov
jl
sub
frstor
les
jle,pt
insl
dec
shlb
dec
fs
popf
xchg
insl
fists
push
pushf
lea
sbb
mov
mov
and
mov
sbb
xor
in
add
call
jle
jbe
dec
dec
test
shlb
and
xchg
rorb
push
cmp
loopne
and
xor
es
int
push
test
in
mov
cmp
sub
inc
repz
inc
jae
cmp
or
divl
adc
push
loope
mov
int
pop
jo
jl
mov
scas
add
shl
sub
shll
les
les
lods
lahf
test
xlat
adc
dec
pop
sub
sbbl
push
and
popa
test
dec
jno
add
out
jnp
aam
mov
hlt
mov
add
arpl
dec
andl
jecxz
ret
sub
add
or
addr16
push
dec
xchg
push
fs
sub
pop
inc
mov
rcrb
fisttpl
and
lods
outsl
and
imull
push
test
dec
dec
mov
or
jnp
test
or
pop
pop
pop
mov
sbb
add
xchg
mov
lret
fwait
jp
mov
cmp
or
outsl
cmp
or
pop
or
inc
xor
inc
xchg
cltd
aaa
cltd
pop
and
addr16
mov
sbb
cmp
loope
negl
cmpl
dec
out
sbb
addb
test
jo
mov
je
nopl
js
test
or
xor
gs
std
gs
in
jecxz
jnp
fsubs
loope
repnz
pop
out
mov
xchg
push
mov
imul
test
lret
arpl
mov
mov
in
pop
sbb
push
jae
fidivl
daa
loope
test
mov
jae
imul
mov
test
gs
mov
loopne
addr16
mov
mov
xor
in
mov
adc
pop
xchg
out
add
daa
mov
xchg
test
dec
jge
xlat
movsl
mov
jp
or
dec
mov
cltd
jle
aad
scas
lea
cmp
mov
out
je
in
xchg
clc
add
insb
and
fwait
cmp
mov
xchg
lods
mov
imul
sub
add
xchg
js
cwtl
jmp
out
add
sub
sbb
pop
inc
dec
sbb
insl
xchg
jae
cmovl
fstpl
loopne
add
cmp
jo
inc
sub
scas
inc
cmp
and
movsb
adc
aaa
stos
xchg
add
inc
adc
inc
stos
jb
adc
and
cs
cmc
ja
rorb
fs
out
sub
push
aad
add
pop
xor
push
xchg
out
int3
push
movsl
xchg
pop
cmp
pop
adc
jno
mov
sub
or
popa
pop
aaa
mov
orb
or
insb
sub
repz
aaa
stos
pop
lcall
je
cmc
in
loopne
jnp
jns
mov
aaa
out
dec
cmpsb
mov
xor
mov
push
inc
mov
inc
mov
insl
test
daa
rol
jns
mov
out
fsubrs
movl
dec
dec
or
push
mov
frstor
dec
lods
pop
pop
cmp
inc
out
inc
mov
imul
and
das
in
pop
xchg
ljmp
push
scas
aam
jmp
jge
popw
xor
imul
out
test
jne
enter
fwait
test
push
xchg
je
mov
adc
scas
std
cmp
mov
rol
cmp
jnp
inc
cltd
cs
dec
int
movsb
enter
xchg
cmp
jnp
inc
inc
andb
fisttpll
push
es
sub
jle
cmpsl
lock
sub
push
out
adc
mov
clc
cltd
je
lahf
push
pop
psrlw
ljmp
sub
cmpsb
mov
xchg
sbbb
push
shl
lods
ret
jno
jp
cmp
jl
pop
or
iret
aas
add
test
sbb
push
aaa
dec
lcall
push
cwtl
repnz
mov
sbb
filds
mov
push
pop
mov
pop
mov
cmp
sbb
fmull
clc
testl
sbb
pop
fwait
push
stc
jne
fimull
xor
push
mov
test
push
jmp
and
dec
mov
ficoms
movsb
jg
addr16
sbb
sbb
scas
loop
mov
testl
or
xor
add
mov
out
push
loop
cltd
cld
lahf
flds
mov
inc
pop
loop
pop
stos
pop
enter
or
iret
jp
shrb
out
sbb
dec
add
cltd
xchg
pop
decl
xor
pushf
lods
adc
mov
adc
rclb
xchg
arpl
dec
mov
dec
pop
loopne
das
pushf
mov
pop
mov
cltd
cltd
inc
into
psraw
fucomip
movsb
adc
cmc
pusha
jl
and
or
mov
mov
int3
push
jns
inc
cmp
sahf
enter
xor
inc
or
xor
shll
dec
inc
clc
dec
addb
std
lahf
aad
push
loope
jb
cmp
bound
dec
jmp
dec
xor
cmpl
clc
mov
fdivs
mov
int
sub
scas
je
push
dec
mov
dec
loopne
in
in
push
dec
ds
test
pop
ds
ret
sub
sub
sub
mov
in
out
jbe
or
mov
pop
cld
jno
adc
clc
fisubrs
mov
int3
cli
xorb
test
xchg
in
push
mov
orb
stos
sub
xchg
sbb
fimull
mov
ja
sub
div
cmp
in
mov
add
jae
mov
aas
inc
sub
movsl
movb
mov
push
mov
and
push
enter
enter
call
or
dec
or
int
aam
sub
out
cmpsb
int
push
ja,pt
xor
adc
std
add
pop
repz
hlt
or
xchg
adc
sub
loope
jl
adc
cmp
hlt
mov
sbb
jge
cmp
jae
sub
adc
xor
insb
insb
xlat
out
xor
test
xchg
jecxz
jns
push
jno
inc
xor
loop
arpl
fcoms
xor
push
add
or
mov
mov
xchg
test
mov
xor
xlat
xchg
pop
mov
sar
adc
or
inc
xchg
add
sti
jne
movsl
cltd
in
inc
or
lret
or
push
lret
pop
sahf
lea
lahf
xchg
or
add
xchg
jae
test
pop
dec
sbb
movsl
mov
xor
rcr
mov
mov
pusha
rclb
or
xor
push
cmpsl
cmp
push
or
adc
mov
jb
adc
ljmp
into
or
psraw
dec
dec
xchg
or
daa
sub
scas
jb
jge
jnp
fwait
mov
in
rcll
cmp
test
cmp
sub
test
cmp
bound
sub
xchg
shrb
sbb
in
inc
out
popf
adc
ficoms
lret
sbbb
leave
pop
std
xor
jne
nop
int
aas
push
pushf
jecxz
cli
dec
not
pop
imul
mov
hlt
and
cmpsb
jp
jo
test
movsb
sub
sbb
popf
out
mov
adc
cmp
mov
es
cmp
stos
pop
jb
cld
into
iret
or
xchg
adc
ds
add
xchg
or
stos
cltd
jl
fnsave
pop
jecxz
shrl
movsl
movsl
push
jno
mov
cli
mov
scas
ror
cld
aaa
xchg
ss
lods
mov
adc
enter
inc
sbb
loopne
mov
addr16
xor
push
jmp
jl
cmpsb
jbe
mov
jecxz
rol
test
movsl
push
sub
xor
adc
data16
jg
movsb
mov
adc
stc
loop
int3
sahf
xchg
sbb
add
lds
rcrb
inc
cs
test
inc
mov
sbb
push
mov
out
out
pop
orps
mov
shlb
fsubrs
sbb
push
in
and
int3
push
add
into
mov
jp
ja
xor
cwtl
fwait
xchg
adc
dec
mov
test
xor
adc
dec
cltd
mov
xchg
cmpsb
mov
rclb
pop
cmpsl
dec
ret
jne
sbb
ljmp
or
jns
xor
inc
jae
add
xchg
dec
push
xchg
loopne
or
add
popa
sub
sti
fs
icebp
movsb
and
out
jmp
pop
add
xchg
das
mov
icebp
jns
push
jg
pop
xchg
jns
jp
idivl
fisttpll
push
hlt
add
enter
pushf
cmp
sub
nop
adc
icebp
jmp
mov
ds
sbb
inc
pop
loope
mov
sbb
sarl
les
inc
not
dec
add
inc
mov
xchg
push
out
fmul
aaa
ret
pop
add
mov
out
sub
pop
dec
or
and
mov
mov
fidivl
je
loopne
inc
js
xchg
addr16
sub
iret
aas
inc
in
in
ret
sub
mov
mov
jecxz
mov
mov
sahf
test
lahf
inc
lret
jl
aad
loopne
push
fs
jge
pop
ror
adc
xchg
or
sbbb
sub
lcall
jg
ds
outsb
mov
ljmp
adc
loope
dec
and
cmp
into
dec
in
faddl
push
dec
jl
cltd
pop
push
xchg
cld
fisubrl
adc
sbb
int
and
lret
jmp
popf
or
or
pop
pusha
push
mov
ret
outsb
cmpl
jecxz
jle
repz
imul
outsl
mov
cwtl
mov
sbb
xchg
insl
ss
movsl
adc
adc
jnp
adc
or
and
sub
stos
mov
xchg
push
xor
shr
xchg
sbb
mov
loopne
jae
xchg
repnz
das
adcb
out
insb
ss
test
xlat
pop
mov
fsubl
lea
and
cltd
es
mov
push
aaa
je
out
or
inc
mov
loop
cltd
or
rcrb
cmp
xchg
flds
pop
addr16
loopne
sbb
enter
sbb
int
movsl
cli
inc
scas
fs
mov
sahf
and
movsb
test
sub
data16
xchg
cs
mov
mov
fwait
pop
out
pop
sub
or
movsl
xor
fs
cmp
push
dec
sub
dec
lds
push
int
cmp
cmp
xchg
fadd
xor
push
mov
inc
and
mov
cmpl
repz
add
popa
dec
scas
adc
pop
pop
mov
mov
mov
mov
sub
je
lock
ss
add
sub
mov
iret
out
add
shlb
jb
test
push
jle
jo
sbb
enter
cmp
outsl
mov
xlat
mov
imul
stos
or
adc
daa
xor
push
jae
xchg
movl
jg
pop
jp
xor
cmp
push
xchg
xlat
inc
push
outsl
insl
push
sub
mov
or
cli
cmpsl
test
lret
lret
cmp
sub
dec
cld
push
jp
dec
adc
sbb
jp
ljmp
adc
lds
cmp
push
and
mov
imul
lret
and
and
mov
das
pop
push
sub
xchg
ljmp
jmp
and
cmp
sub
stos
inc
test
cmp
call
out
push
in
daa
inc
cmpsb
fsts
xor
imul
jo
push
aas
jecxz
leave
rol
mov
jae
or
push
jmp
lea
pop
xor
test
test
call
mov
mov
lea
cmp
pop
rcl
scas
cmp
adc
test
mov
sti
adcl
test
ss
shlb
mov
nop
fcomp
add
mov
test
cmp
mov
ds
clc
test
jo
aaa
inc
addr16
mov
adc
iret
ljmp
pop
jae
mov
adc
cmp
mov
out
pop
addr16
pop
inc
fs
xchg
int
fimull
aas
cmp
mov
ficoml
xchg
sbb
enter
mov
sub
test
mov
jecxz
pop
xchg
jb
test
pop
push
xchg
outsb
and
es
pop
dec
mov
xchg
das
lret
iret
jo
insl
push
jno
test
mov
cs
jl
test
xlat
inc
loopne
pop
mov
sbb
push
imul
into
inc
popf
aam
xchg
leave
inc
add
sub
sbb
repz
inc
jns
mov
insb
stos
fsubrl
out
repnz
xor
lock
in
xor
test
sub
sarl
cwtl
push
push
fldenv
inc
rorl
cld
mov
xorl
dec
mov
aaa
stos
movsl
icebp
and
cmp
loopne
xor
cld
outsb
push
add
mull
pop
pop
pop
pop
mov
and
stos
mov
inc
push
out
sbb
mov
imul
mov
mov
cwtl
icebp
jg
out
jl
xchg
cmpsb
stc
popf
rorb
sbb
pop
fidivrs
push
call
pop
cmpsb
cltd
int3
stc
or
xor
jge
mov
scas
enter
xchg
stos
icebp
xchg
mov
imul
scas
dec
nop
jno
jnp
jl
outsb
pop
and
dec
sub
test
inc
pop
xlat
and
mov
outsl
add
lods
dec
rorl
mov
cwtl
addl
out
dec
out
jmp
sahf
jb
add
cld
arpl
sbb
fwait
and
pop
stos
inc
cwtl
and
enter
not
loopne
call
testb
arpl
in
dec
lods
jp
enter
sub
add
fsub
fsubrp
xchg
sbb
sub
in
lock
ficomps
fs
inc
and
hlt
or
das
xorb
jle
in
pusha
je
mov
push
mov
mov
popa
inc
decl
jmp
out
adc
xor
push
sbb
cwtl
xchg
aas
push
adc
adc
jmp
inc
push
dec
daa
addr16
rcl
sarl
ret
dec
sub
stos
lds
inc
xchg
mov
dec
repnz
bnd
and
xor
popa
pop
sub
insb
faddl
leave
lock
stc
xor
idivl
push
jb
nop
sub
cld
pop
push
or
mov
jle
rorb
mov
xchg
outsb
add
rcl
imul
aaa
test
leave
adc
inc
dec
mov
leave
mov
lret
or
add
lods
std
add
pop
push
or
xchg
mov
call
mov
dec
mov
icebp
mov
mov
xchg
les
lds
repz
test
jge
fistpl
imul
cld
lret
inc
pushf
or
push
aad
mov
sbb
out
push
ds
shll
mov
push
popa
insl
push
fcomi
scas
push
xor
rclb
push
xor
stc
xchg
adc
das
outsb
pop
int
test
jmp
das
iret
pusha
sub
es
fimull
fcmovb
rorb
mov
sbb
dec
fdivs
fiaddl
cmc
enter
and
or
inc
rcrl
pusha
icebp
aad
cmp
sbb
movsl
mov
xchg
in
sub
bnd
xchg
lock
mov
fstpt
pop
xor
pusha
lret
addr16
das
adc
loop
repz
lods
into
xchg
les
cli
adc
or
sbb
push
xor
imul
pop
fld
lock
icebp
jecxz
push
sbb
dec
pop
stos
stos
sbb
in
sub
mov
loope
mov
mov
mov
jg
dec
int
call
add
movsl
ja
outsb
mov
pause
ret
push
lcall
jmp
sbb
nop
sub
push
mov
push
fsub
mov
mov
pop
sti
xor
fs
fdivr
test
jl
jle
push
xchg
xor
ror
sub
dec
xchg
mov
nop
and
movsb
jle
pop
gs
in
jmp
rolb
cmp
mov
dec
sub
push
xor
in
dec
pop
popa
rol
imul
mov
push
adc
mov
sbb
push
xor
pushf
out
adc
in
adc
pop
enter
lea
mov
loope
inc
rcr
pop
in
mov
stos
arpl
inc
xchg
sub
add
mov
mov
icebp
testl
shrb
push
cmpsl
test
lea
daa
sub
scas
xchg
sbb
jg
inc
aas
cmp
out
test
jnp
jmp
mov
dec
adc
dec
xor
pusha
je
pop
push
lcall
insb
test
mov
pop
inc
sahf
dec
sbb
or
out
incl
mov
jmp
leave
xor
pop
shlb
and
xor
ret
int
or
mov
cmp
out
jne
fildll
xchg
push
or
inc
xlat
and
cmpsl
jno
lcall
lea
mov
ret
cmp
sub
lahf
sub
jbe
ja
in
in
call
jge
in
data16
aad
ss
lods
jbe
mov
cmp
jns
cmpsb
roll
out
cmp
sub
adc
xor
dec
scas
sbb
cmp
aaa
xor
fdivl
aam
fiadds
daa
fs
cs
fnsave
xchg
dec
in
mov
pushf
popa
icebp
hlt
repz
mov
test
and
lret
shll
loope
aam
cmpsb
push
int3
dec
mov
adc
jnp
jae
mov
push
ror
std
lcall
test
mov
add
insl
push
jnp
or
xor
mov
cli
ret
int3
mov
lods
in
lods
xchg
rorb
rorl
pop
lcall
adc
loope
fcmovb
mov
into
inc
rcrl
pop
out
lods
jl
in
jne
leave
or
cmp
int3
sbb
mov
orl
push
test
rolb
sub
xor
xchg
mov
sbb
inc
sarl
xchg
ror
aas
sbb
fimull
inc
dec
stos
jmp
loope
mov
dec
sub
loopne
sti
aas
inc
ss
sbb
fcoms
xchg
in
sahf
push
mov
test
and
out
in
outsb
dec
cli
mov
mov
lea
orl
into
lea
lds
jecxz
les
push
rcll
aam
cmp
dec
cmp
jb
imul
dec
dec
pop
push
jo
mov
mov
imul
jo
testl
jns
testb
ret
bound
pop
pop
ss
int
mull
loopne
dec
test
cmp
mov
dec
daa
test
cmp
stc
mov
mov
fistl
jb
or
add
xlat
cli
xchg
stos
mov
xchg
mov
xor
xor
out
adc
xchg
inc
in
push
idivl
aaa
pop
mov
and
inc
xchg
cmp
js
subb
dec
int3
lods
popa
xchg
push
xchg
push
fisubrl
push
pop
push
outsb
adc
ss
sbb
push
mov
dec
stos
lret
xor
jo
popl
test
popf
lea
inc
sbbl
xor
ret
insl
mov
scas
rcr
sub
sub
push
lcall
data16
mov
dec
dec
pop
scas
icebp
aas
jne
sbb
adc
lea
mov
test
lcall
lods
inc
outsb
repnz
add
jmp
inc
jns
xor
and
out
cmpl
sub
sbb
rorb
mov
cmp
xchg
ret
mov
xchg
sub
inc
popf
adc
sub
mov
movsb
pop
and
movsb
mov
or
dec
mov
mov
andl
leave
jl
inc
sbbl
or
sub
adc
or
shrl
dec
mov
dec
jecxz
mov
addl
lds
mov
push
sub
and
shl
lock
and
jae
test
push
test
pop
outsl
mov
aad
xchg
ss
loopne
xor
and
mov
add
cmp
adc
pop
mov
or
pop
mov
pop
shll
cli
bound
lock
jecxz
xchg
cmp
insb
mov
lods
es
sbb
or
or
cmp
mov
cltd
cmpsl
sbb
out
mov
inc
jae
insb
fldl
mov
out
xchg
dec
and
mov
fcmovnbe
outsl
scas
push
dec
ds
mov
fcmovbe
inc
movsb
add
mov
inc
mov
call
jl
pop
sbb
jb
xor
dec
mov
xchg
pop
adc
jmp
pop
dec
cmpsl
int3
les
cmp
es
iret
sbb
popa
push
add
mov
mov
add
xchg
adc
cltd
mov
xchg
shr
mov
pop
loopne
sbb
das
leave
scas
sub
in
gs
std
mov
cwtl
xor
rcrb
fwait
aaa
push
xchg
add
pop
sahf
sbb
popf
xchg
and
push
xor
and
jg
jmp
dec
in
jecxz
mov
call
pop
psllw
aam
jno
popf
es
das
adc
jnp
jb
loope
lea
push
sbb
pop
xor
push
cltd
stos
or
and
push
cld
in
mov
aaa
jle
sub
push
inc
mov
das
in
add
les
cmp
daa
loopne
sub
xor
push
fcompl
mov
fdiv
test
xchg
ret
jecxz
jmp
xor
fnstenv
mov
fimuls
lcall
inc
sub
mov
inc
dec
inc
cmp
outsl
push
and
xchg
lods
int
inc
inc
pop
mov
mov
mov
inc
mov
test
clc
and
sub
cli
push
or
push
adc
jg
mov
rcl
jl
mov
leave
js
loopne
cmc
in
xor
pop
stos
fimull
das
lds
mov
lahf
pop
rolb
pushf
ret
ror
out
pop
sarl
cwtl
pop
or
int
dec
jl
in
mov
pusha
mov
inc
repz
lret
cmp
mov
aaa
out
xorb
sub
adc
xchg
and
dec
cmpsl
push
gs
inc
mov
pusha
sub
dec
pop
adc
jecxz
stos
cld
sbb
cmpsb
dec
jecxz
outsl
cwtl
dec
and
popa
iret
sbb
pop
xchg
insl
mov
mov
jno
inc
stos
js
mov
enter
jecxz
mov
cmpsl
fstps
xor
mov
cwtl
in
in
mov
shll
mov
fcmovb
mov
jg
pop
sbb
lret
xor
mov
sub
call
out
lahf
jl
mov
push
inc
xor
mov
test
lahf
jo
inc
push
popa
pop
xchg
jnp
int3
test
mov
jl
jo
jne
lcall
xchg
mov
mov
pop
stos
sbb
mov
repz
xchg
adc
jbe
xchg
push
dec
sbb
mov
inc
cmp
icebp
ss
cmp
push
outsl
dec
fnstsw
leave
cwtl
adc
sub
imul
inc
adc
inc
mov
and
loop
fnstcw
sub
xchg
xchg
bound
or
insb
inc
adc
mov
and
nop
lea
cmp
mov
pop
arpl
scas
std
cli
xorl
daa
insb
add
push
aaa
mov
insb
push
sbb
push
mov
ja
mov
sahf
cmp
scas
xchg
xor
sub
inc
in
cld
mov
adc
sahf
ljmp
cmpsb
add
cmp
mov
or
jg
dec
lcall
hlt
sti
jge
inc
enter
jg
and
cmp
ss
xlat
add
dec
enter
xor
mov
push
xchg
pop
ret
in
sbb
cmp
jge
dec
xorb
xor
add
ds
mov
hlt
or
cmp
mov
pushl
fcmove
pop
punpcklbw
frstor
mov
test
cmpsl
hlt
cli
test
rdtsc
cmpsb
dec
pop
test
fs
adc
int3
lret
dec
cs
adc
into
cmp
out
push
decb
push
movsl
ficoms
inc
add
jns
lea
and
nop
in
int
sub
xchg
adc
retw
sbb
roll
push
pop
push
cmc
adc
test
push
adcl
add
dec
rcrl
push
popa
xor
repz
xchg
mulb
aad
xchg
adc
mov
and
pop
sarb
arpl
sub
push
aas
mov
aad
cvttps2pi
cwtl
lret
iret
pop
dec
outsb
outsb
clc
fiaddl
out
fistpll
js
sbb
and
stos
jg
mov
mov
cmp
insl
aas
fdiv
lock
adcb
cmc
xchg
les
popa
add
sbb
dec
cmp
sahf
lods
mov
xor
add
test
inc
test
dec
out
inc
jns
icebp
loopne
rorl
dec
sbb
add
xchg
mov
xchg
fnsave
mov
out
lods
leave
lea
das
fstpt
lock
push
insb
push
mov
cmp
lods
mov
fwait
cli
or
clc
movsb
nop
and
cmp
dec
je
scas
add
lock
xchg
xchg
and
xor
out
jns
jnp
popa
jns
xchg
or
mov
push
mov
outsb
and
xor
mov
cmc
test
popf
mov
js
xchg
aad
aas
add
or
and
push
cmp
ret
jge
inc
pop
sub
sub
fs
push
test
loop
inc
jno
push
cmp
jo
sti
mov
fcmovnbe
jae
xchg
cs
ljmp
mov
or
ds
push
insl
inc
or
int3
es
adc
push
rolb
dec
mov
pop
insl
jae
in
sub
xor
bound
jnp
jb
pushf
cld
sbb
cmc
mov
aam
or
outsl
stc
add
xchg
cmpsb
pop
iret
inc
push
xchg
and
cmp
xor
sub
icebp
mov
mov
jle
xor
popf
sti
sbb
cwtl
or
cs
cmp
in
out
cltd
cmovns
fnsave
pop
jbe
outsl
pushl
outsb
push
push
jmp
jae
test
jmp
outsl
jno
mov
xchg
test
mov
sub
das
dec
jg
repnz
ficomps
cwtl
cmpl
mov
stc
dec
mov
cmpsl
push
es
clc
dec
pop
enter
xchg
mov
test
push
adc
jp
jnp
lds
jp
pop
fmull
notl
sahf
lahf
inc
ud0
and
imul
or
jb
ss
sub
and
scas
inc
jmp
lods
stc
push
xchg
jp
fdivl
pop
jecxz
nop
fdivrs
sub
and
in
adc
fsubp
ljmp
mov
mov
shlb
lahf
jne
cmpsb
ficomps
pusha
ds
push
enter
jmp
stos
pop
das
jg
stos
mov
mov
ss
dec
lods
cmpsb
scas
ss
push
ja
movsl
mov
test
mov
addr16
or
jg
jge
jge
cwtl
outsb
imul
pop
insl
mov
mov
dec
pop
rcll
inc
mov
jae
xchg
xor
or
subb
dec
sbb
ljmp
fs
jo
jle
popf
ret
aaa
daa
and
jmp
ljmp
mov
pop
iret
cmpsb
jge
xor
push
or
ret
xchg
or
mov
int
call
xor
xchg
adc
ficompl
ljmpw
push
ja
sbb
popf
iret
push
movsl
std
push
inc
adc
aaa
cmp
int3
inc
test
cmp
pop
negl
rcrl
mov
andb
test
dec
xchg
outsl
or
jl
iret
or
ret
movsl
mov
int3
popf
test
cmp
repz
out
cmp
pop
jecxz
scas
and
xor
pushf
in
dec
pop
out
add
xchg
pusha
inc
es
jl
rcr
sbb
insb
shl
hlt
inc
jecxz
xor
out
aam
addr16
arpl
push
hlt
xchg
mov
jp
addr16
pop
pavgb
pop
fisubrl
xchg
mov
inc
jns
out
inc
cld
std
pop
cmp
lock
movsl
ds
inc
fsub
cltd
ret
ja
mov
inc
and
mov
inc
scas
xor
insl
aad
cwtl
scas
hlt
mov
lock
cmp
fsts
inc
mov
mov
mov
xchg
and
add
sub
sbb
movsl
xchg
js
test
jns
xor
push
xchg
in
mov
iret
cmpsb
sub
jne
add
lods
cmp
ficompl
or
gs
jno
inc
testb
lods
push
jo
pushf
dec
imul
dec
pusha
scas
rorl
cmp
mov
movsl
imul
push
out
mov
and
shrl
push
lcall
xor
jmp
lods
sbb
jmp
lock
fadds
movsl
cld
int3
mov
mov
outsl
mov
mov
dec
sub
insb
xlat
dec
cltd
pop
inc
xor
bound
add
popf
or
dec
divb
cmpsl
push
out
sbb
pop
cmp
cmpsb
mov
sbb
rcr
mov
mov
sahf
jb
pop
xor
mov
sbb
mov
xchg
in
pop
mov
mov
mov
dec
mov
xchg
xchg
les
stc
cld
pop
fmul
mov
mov
xchg
sti
mov
xchg
jbe
jmp
out
jno
hlt
lds
push
inc
push
xlat
popf
mov
mov
imul
shlb
mov
stos
push
mov
xor
mov
and
add
out
sahf
enter
add
je
xlat
movsl
fmul
fsubl
pop
mov
xor
dec
mov
rcl
push
sti
inc
push
dec
jl
mov
stc
pop
xchg
push
insl
inc
ficoms
in
adc
dec
xor
stos
lret
lock
das
and
ljmp
mov
pop
sub
sub
pop
and
mov
les
sbbl
push
aad
call
mov
pop
xor
dec
fiaddl
inc
inc
out
mov
add
pop
aam
jns
jl
sahf
mov
push
sub
inc
jne
mov
push
adc
out
jns
lock
and
sahf
inc
mov
mov
lahf
lcall
leave
fwait
lcall
andb
mov
clc
xchg
bound
and
pop
cwtl
into
sarb
cmp
jmp
in
in
xchg
cmp
scas
insb
adc
mov
shl
jae
repnz
xor
out
ja
stos
sbb
mov
pop
js
push
insb
jmp
scas
cs
and
add
lods
mull
jp
stc
pop
cs
jb
pop
push
mov
fcmovnu
adc
int3
or
gs
inc
inc
sahf
imul
lods
mov
leave
pop
popa
sub
data16
sbb
jno
cmpsb
mov
fmuls
js,pt
ss
and
or
or
std
hlt
aam
push
and
xchg
inc
mov
sbb
xchg
std
dec
dec
aas
push
add
ret
adc
adc
test
mov
push
xor
stos
push
cmp
loop
data16
sbb
cmp
shrl
jbe
sahf
fwait
cmpsl
into
jno
sbb
xchg
mov
in
out
lods
dec
in
mov
inc
ds
push
lods
fimuls
cmp
jo
ret
leave
mov
lcall
imul
test
mov
push
arpl
and
stos
sahf
insl
ret
or
mov
int3
and
or
add
cmpsb
xlat
ret
or
mov
scas
push
add
jbe
out
in
sub
dec
push
sub
xchg
popa
ljmp
mov
xchg
and
pusha
sbb
gs
and
lock
imul
idivl
cmpsl
je
dec
loopne
sbb
out
adc
adc
mov
fs
pop
mov
add
stc
push
fimull
mov
imul
mov
mov
cltd
fisttps
aad
adc
push
and
jg
xchg
fistpll
jae
lret
jbe
repz
xchg
cltd
pop
iret
sbb
dec
and
dec
jg
pop
fildl
cmp
lcall
push
lods
adc
insb
lock
sbb
daa
push
test
or
je
stc
adc
mov
in
or
cmp
lock
mov
fs
mov
cmp
mov
repz
jno
jae
sahf
shr
mov
jo
push
fndisi(8087
sub
sub
je
mov
push
mov
inc
mov
shl
jne
xchg
out
lea
pop
and
pop
das
pop
mov
xor
jl
lods
subl
out
arpl
aad
test
out
pslld
ss
pop
stc
mov
xchg
cmp
cmp
mov
rcrl
cmpsb
xchg
mov
or
js
stos
cli
mov
sbb
leave
lcall
popa
lea
pop
or
push
insb
repnz
jb
mov
cli
push
movsb
pop
les
mov
push
out
mov
bound
stos
adc
lahf
scas
cmp
aad
jns
xchg
outsl
out
sub
xor
jne
inc
push
lret
ja
adc
movsb
stc
movsl
xor
icebp
lcall
scas
pop
into
sub
push
lods
or
sub
push
sbb
lea
xchg
sti
add
out
xchg
aad
mov
mov
cmpsl
mov
inc
fistpll
sbb
sbb
stos
das
lods
test
movsb
and
aas
pop
jle
inc
dec
popf
dec
inc
rcll
cmc
sahf
cmp
push
in
sub
push
stc
jecxz
add
inc
and
out
push
dec
call
into
dec
repz
dec
add
js
mov
add
loop
fimuls
incl
in
mov
test
mov
dec
cmpsb
ss
fxch
pop
and
sbb
jl
xchg
jg
mov
push
mov
movsb
incb
sub
push
jp
test
or
inc
add
or
fld1
daa
sub
mov
xor
mov
ret
test
dec
and
sub
enter
mov
xchg
inc
inc
jg
fstpl
xchg
xchg
cmpsl
icebp
ja
push
xchg
pop
jmp
std
scas
push
mov
jno
add
xchg
adc
mov
sarl
xor
jg
fsub
adc
scas
fsubrl
jno
and
and
mov
rolb
jmp
mov
push
xor
daa
push
inc
mov
cmp
loopne
adc
mov
adc
xchg
mov
adcb
cmpsl
or
inc
xor
sbb
mov
aad
ret
jecxz
lret
cltd
dec
adc
sub
test
jecxz
jae
ja
daa
imul
xor
aad
jbe
and
pop
or
pop
or
mov
neg
dec
or
dec
movsl
mov
sahf
sbb
fadds
adc
dec
pop
insl
pop
or
in
push
call
add
rcrb
dec
pop
jne
adc
sub
jp
pop
outsl
fcmovnu
pop
mov
or
lret
push
popf
testb
pop
mov
pop
shlb
in
add
mov
insb
sbb
pop
popa
jp
aas
xchg
loopne
pop
lods
jl
sub
add
out
popa
pop
sbb
cld
sub
mov
xchg
sbb
inc
lret
popa
sbb
jmp
or
ja
stc
in
icebp
dec
dec
cmp
lods
jne
sbb
cmp
dec
sub
mov
pop
add
push
loop
jp
test
xlat
xor
inc
push
or
jp
xchg
add
inc
fs
xor
rcll
movl
js
dec
sub
mov
mov
out
test
ror
sti
xchg
push
jo
int3
jno
int3
rcr
in
jl
scas
rcr
add
stos
pop
inc
mov
fnstcw
gs
repnz
pusha
int3
rcrb
push
mov
stc
stc
mov
int3
mov
mov
cli
adc
aam
mov
inc
ret
arpl
and
stc
xor
jnp
test
push
and
xor
sahf
sbb
in
adc
push
adc
mov
push
outsl
adc
jg
repnz
subb
icebp
and
push
sbb
leave
movsb
mov
lss
es
lock
daa
xor
inc
dec
add
pop
cmp
push
out
loope
xchg
enter
aad
out
jge
jle
das
pop
and
call
adc
ds
or
mov
cmpsl
xor
daa
lods
inc
jle
pop
std
je
jo
sub
jg
mov
popf
into
mov
lcall
ds
repz
xchg
lods
cmc
pop
cmpl
dec
shrl
add
mov
jb
adc
add
jmp
xor
neg
mov
rcl
pop
test
andb
inc
out
fldt
xchg
mov
or
sub
sbb
repnz
imul
and
mov
sbb
jbe
sbb
sub
popf
jle
leave
mov
in
std
add
ret
int3
movl
roll
gs
jg
jns
mov
dec
sarl
xchg
movsb
lock
rcrl
shlb
aaa
in
in
lods
push
push
sub
fists
es
push
jg
rolb
push
dec
in
fiadds
leave
xor
imul
jb
pop
test
ret
cmpw
int3
cmp
mov
sbb
mov
push
daa
stc
pop
jg
mov
pop
push
cmp
clc
mov
std
pushf
adc
cmpsb
mov
mov
or
push
cmp
sub
scas
sbb
fsubs
jbe
xchg
push
ret
add
loop
mov
dec
cli
pop
sub
push
out
sub
jl
mov
sbb
or
sti
ret
insb
sub
aam
and
sbb
and
cmp
aas
jbe
das
dec
loop
pop
repz
icebp
dec
jmp
es
or
push
dec
and
pop
dec
dec
push
adcb
test
popa
mov
sti
add
pop
add
in
std
mov
add
aas
mov
mov
test
pop
fstps
mov
punpcklwd
push
mov
ret
scas
clc
xchg
daa
xor
outsb
leave
out
cmp
jno
inc
sbb
or
sbb
lcall
bound
push
mov
sub
sarl
insb
stos
or
fistl
xchg
das
add
aaa
sbb
es
mov
pop
lret
popf
test
cmp
dec
fdiv
mov
cld
lock
cmp
rorb
mov
mov
stc
pop
pop
movsl
push
sub
inc
fdivl
fiaddl
dec
imul
xor
fsubl
cmp
xorl
nop
in
aas
lret
add
andl
or
call
mov
and
daa
push
pop
pusha
adc
arpl
mov
pop
cmpsb
inc
xchg
xor
mov
daa
icebp
sub
xchg
mov
rol
roll
iret
notb
fidivl
cmp
xchg
push
inc
roll
gs
fwait
xchg
lea
push
dec
gs
pop
imul
loop
in
loope
jb
jg
mov
mov
lret
jl
aaa
mov
das
dec
push
add
pop
inc
adc
dec
stos
mov
sub
add
sub
lahf
js
xor
mov
mov
pop
in
call
jge
jo
cltd
int
or
push
jo
add
jecxz
jle
cld
inc
das
setg
fidivrl
sti
clc
xchg
test
addw
aam
movsb
xor
push
dec
js
pop
mov
mov
or
jb
cmpsl
lds
mov
in
sti
test
nop
stos
mov
xchg
divb
pop
roll
jle
fdivrl
nop
push
adc
jnp
or
ret
lahf
add
jbe
sahf
sub
loopne
inc
mov
mov
mov
inc
or
hlt
bound
enter
add
loop
repnz
leave
xor
jnp
stos
rorl
push
jecxz
test
dec
xor
and
ljmp
xchg
popl
das
xor
pop
inc
sub
fisttpll
insb
test
lock
fwait
xchg
lds
rcll
inc
loop
push
icebp
and
mov
icebp
mov
jecxz
roll
jge
cwtl
std
out
pop
cmc
inc
adc
lods
push
mov
ja
fistl
out
into
xor
gs
lock
sub
aas
and
rolb
test
ret
bound
mov
imul
rol
and
mov
idivb
or
adc
shll
leave
jmp
mov
out
leave
mov
cmp
dec
iret
dec
and
je
incl
and
xor
or
insb
cli
outsb
rcrl
movsl
jle
je
adc
mov
jno
sbb
cs
jp
adc
jne
mov
mov
mov
mov
xchg
mov
das
insb
in
xchg
xlat
icebp
divl
cmpl
mov
cmpsl
sub
and
jmp
pop
cltd
inc
testl
push
fimuls
fldln2
ss
xor
mov
sub
push
pusha
sbb
or
cltd
inc
test
ret
addr16
cs
mov
sub
cld
push
lcall
xor
in
mov
sub
push
cmp
out
imul
xor
xchg
jae
test
out
fldcw
pop
push
aaa
pushf
inc
bound
xor
jns
in
call
jl
mov
xchg
xchg
jmp
mov
adc
adc
insl
test
decl
push
adc
adc
push
push
popf
adc
sub
in
mov
push
cmp
lcall
xchg
fcomps
ficoml
nop
push
neg
cmp
push
outsl
jge
test
pusha
mov
inc
xchg
js
scas
sti
mov
cmp
lahf
lods
mov
out
jle
arpl
mov
cmp
fcomps
pop
arpl
sub
ret
fildl
clc
insl
mov
push
xor
add
mov
scas
outsb
dec
inc
lods
scas
mov
fmuls
pop
sbb
cmp
jb
mov
ficomps
incl
add
fimuls
push
jle
stc
sti
sub
pusha
cmp
frstor
nop
mov
aam
in
sti
repnz
pushf
pop
mov
xchg
jns
cmp
jne
je
jne
enter
mov
inc
pop
sbb
shr
fistpll
sub
into
adc
add
sub
out
ret
fcmovne
mov
roll
fabs
push
nop
add
nop
aad
mov
fwait
xchg
sbb
stc
lock
or
xchg
mov
lds
jmp
test
ljmp
imul
jnp
xor
jg
js
movsl
dec
xchg
jmp
mov
lret
test
mov
stos
icebp
xor
mov
cmp
sub
sbb
add
or
lods
cltd
push
shll
js
xchg
insl
pop
cmpsb
lret
bound
cs
mov
inc
lcall
mov
lock
xor
pusha
nop
mov
dec
hlt
mov
shr
int
inc
sub
pusha
and
fcomps
pop
cmp
insb
comiss
jns
push
mov
and
jecxz
mov
pop
mov
fwait
sub
ret
xor
clc
insb
ds
cltd
inc
sbb
add
mov
push
push
sarb
mov
sub
adc
mov
out
lods
in
popa
pop
jl
jbe
loopnew
pop
dec
test
test
inc
mov
int
in
stos
js
les
adc
imul
jnp
xchg
xor
push
sbb
cmp
dec
dec
mov
xchg
sbbl
push
add
ret
sbb
inc
or
jae
shrb
mov
ljmp
add
xor
mov
stos
mov
test
add
aas
push
mov
hlt
mov
stos
movsl
popa
lcall
cmp
sbb
sub
adc
aad
stc
xor
push
sub
mov
je
sub
lahf
jo
popf
ret
dec
sub
arpl
mov
pop
cmp
pop
adc
scas
lods
rolb
jmp
lods
mov
inc
lcall
ret
jnp
or
ret
push
mov
outsb
jnp
imul
mov
jnp
sbb
sub
jg
push
mov
xchg
ret
mov
ss
xor
popa
lock
xlat
fstps
mov
pop
push
sbbl
xchg
jmp
fwait
in
js
pop
adc
scas
push
das
adc
test
es
or
mov
pop
rorb
xchg
sbb
loop
xchg
inc
mov
scas
xor
add
push
mov
lcall
sar
cli
lret
rcl
push
arpl
or
jle
cmp
clc
push
pop
jmp
sbb
test
jp
fldt
negb
pop
ja
lock
icebp
mov
pop
les
ljmp
inc
or
movsb
leave
hlt
test
mov
xor
cmc
mov
jbe
call
js
xchg
cmpsb
out
sti
sbbl
ss
mov
lock
sub
pop
add
mov
mov
inc
insl
out
and
and
ja
jns
mov
in
pop
test
sub
cmp
add
ret
add
push
xchg
jbe
adc
mov
pop
or
movsb
rclb
aaa
pop
xor
sbb
jno
or
cmp
shlb
sub
jnp
cmp
enter
xchg
jo,pt
arpl
and
lock
mov
mov
js
xor
scas
rorb
xchg
dec
dec
mov
mov
orl
dec
inc
dec
into
and
sahf
movsb
scas
cwtl
add
xor
sahf
sbb
lcall
jmp
ja
inc
mov
inc
fwait
lds
sbb
cmp
pop
xor
push
inc
into
mov
ja
mov
sarb
pop
js
push
aam
ljmp
lds
add
aaa
dec
mov
in
inc
jge
and
mov
mov
repz
mov
jg
cltd
das
dec
jp
lcall
cmp
mov
sub
fmuls
cmp
xor
loop
mov
stc
jp
add
inc
inc
jg
adc
jmp
popa
lcall
cltd
pop
addr16
jp
or
clc
or
repz
cmc
sahf
push
mov
mov
inc
lock
pop
dec
ja
ror
pop
sahf
ja
add
rorl
inc
cbtw
mov
jl
fwait
jb
mov
mov
pop
mov
xchg
sub
and
jno
and
divl
sti
sbb
pushf
push
fisubrs
sbb
fdivp
sub
mov
inc
out
pushl
sbb
in
add
dec
imul
mov
int
cs
cmp
dec
leave
inc
push
pop
test
jb
sub
add
cmp
pop
ret
mov
std
pop
sarb
movsb
jl
sub
cmp
mov
dec
lret
mov
dec
cmp
test
jl
xor
clc
adc
rcr
pop
in
inc
mov
cmc
pushf
rcll
insb
jmp
sarl
ljmp
inc
or
mov
jge
fbld
dec
mov
aas
lret
cmp
xor
push
loope
inc
jae
repnz
cmpsb
sub
jns
in
out
into
call
jmp
in
inc
out
mov
push
push
mov
in
xor
xchg
mov
jns
sti
dec
mov
adc
add
rcrb
xorb
jmp
mov
push
inc
mov
inc
inc
ss
fimuls
call
cmpsb
insl
mov
mov
xchg
in
mov
mov
xchg
cli
sub
fldl
popf
push
mov
jecxz
stc
fisubl
adc
movsb
mov
scas
fstpl
jmp
xorb
orb
pop
outsl
dec
jb
shlb
lods
xchg
xchg
mov
push
or
lock
test
mov
inc
pushf
sub
cld
and
mov
shlb
sub
dec
inc
insl
inc
leave
jmp
xor
mov
cmp
cmp
adc
xchg
jle
nop
arpl
mov
inc
arpl
in
lods
in
add
jns
jle
xchg
xor
mov
addl
nop
mov
jo
lods
mov
and
leave
nop
xchg
in
inc
push
stc
ret
push
and
aad
lods
loop
imul
lods
enter
iret
test
test
inc
pop
sub
cs
lcall
adc
or
lds
pusha
rorb
ficompl
jnp
fisubrl
pop
xlat
dec
ficoml
mov
call
jo
inc
negb
push
js
xor
cltd
push
adc
pop
mov
sar
pusha
and
cwtl
rol
fidivrs
jne
mov
dec
outsb
and
xchg
pop
rcrl
int3
aas
inc
shrl
mov
lcall
sub
mov
jo
std
addr16
mov
cld
lret
jmp
popf
xor
jp
stos
xchg
lahf
lea
mov
das
push
dec
pop
sbb
cld
cmp
aaa
popf
or
out
push
mov
repz
aaa
and
mov
pop
in
mov
stos
fnsave
xor
jbe
pop
add
ja
mov
cld
jns
std
scas
rcll
push
int3
aaa
xor
les
mov
fmull
lcall
add
movsl
hlt
xchg
sub
mov
clc
mov
hlt
xchg
cwtl
lods
in
es
mov
imul
insb
xchg
xchg
aas
test
bnd
hlt
icebp
lret
rcrb
and
imul
sub
mov
sbb
sahf
clc
fdivrl
jno
jo
cmp
jmp
daa
setg
aas
fiadds
int3
sti
inc
nop
or
jp
popf
cwtl
loope
test
in
and
jne
shlb
add
cmpl
les
sbb
jo
cwtl
and
mov
pushf
sub
jl
xor
push
mov
pusha
xlat
xchg
mov
xorl
decl
sbb
out
dec
dec
loopne
sbb
lea
mov
imul
sub
or
pop
movsl
popa
out
sub
mov
scas
repnz
scas
pop
arpl
jge
inc
ror
fwait
add
xor
sbb
cwtl
mov
mov
test
or
fistps
cmp
inc
sbb
or
outsl
punpckhdq
xchg
fdivl
das
mov
add
mov
pop
sbb
pop
ljmp
test
nop
cmp
sbb
mov
push
jp
xchg
add
sub
lcall
daa
and
sahf
jg
mov
leave
adc
pushf
ficompl
xchg
jmp
push
add
dec
fs
push
cmp
addr16
mov
inc
lock
std
aas
test
popf
pop
push
cmp
push
lea
add
mov
aaa
xchg
xlat
clc
pushf
and
daa
mov
sahf
adc
sbb
pop
adc
lods
mov
or
popf
mov
mov
mov
iret
cli
jle
add
andb
aaa
adcl
xor
cmc
push
and
fisubs
nop
rcl
insb
out
mov
in
addr16
pop
sahf
push
cmc
jne
int3
scas
push
xor
stos
sbb
mul
lahf
sbb
push
iret
push
data16
scas
icebp
andnps
dec
mov
mov
sub
ret
stc
inc
cli
cmp
inc
and
gs
mov
rcl
and
ss
push
add
cmp
inc
stc
lods
das
arpl
and
or
or
mulb
lahf
mov
jge
pusha
jns
mov
stos
pop
jne
pop
cmpsl
push
pushf
and
and
nop
cmp
lods
movsl
les
je
jmp
outsb
mov
shl
stos
ljmp
push
es
mov
push
out
daa
dec
pop
cmp
jl
shll
movsb
push
and
enter
pop
sub
push
test
xchg
mov
notb
insl
dec
or
imull
push
fdivrl
cmp
adc
test
push
pop
fidivl
push
cld
pushf
push
mov
adc
adcb
dec
sub
xchg
jle
jae
pop
inc
fwait
adc
mov
sub
lcall
add
pop
sbb
adc
notl
pop
jecxz
cmp
insl
dec
test
ret
cmp
and
sub
sub
stos
lret
mov
shlb
push
add
and
mov
push
inc
or
fmul
adc
push
cmp
ljmp
xchg
aas
and
pop
iret
pop
mov
popf
mov
ljmp
and
adc
shlb
mov
lcall
lret
add
fmull
cld
mov
sbb
mov
mov
add
mov
stos
test
xor
enter
ljmp
sub
dec
dec
and
jne
inc
out
test
out
push
ret
cld
inc
outsl
cmp
add
push
sbb
mov
xor
cmc
icebp
dec
fucom
scas
mov
ljmp
and
cmp
pushf
fwait
imul
rcll
xor
xchg
enter
cmpsb
and
push
mov
push
pop
xchg
fcompp
insb
add
and
pusha
std
lret
jmp
ss
pop
push
or
and
mov
push
dec
int
push
inc
insb
js
push
ja
pusha
loope
out
cli
outsb
sbb
cmpsl
inc
scas
sbb
sbb
jp
pop
repz
or
or
je
sub
adc
outsb
fiaddl
mov
jmp
and
adc
add
dec
outsl
push
cmpsb
cmp
push
push
xchg
add
inc
adc
and
xchg
inc
adc
cmp
lahf
and
ljmp
stc
cmp
sbb
ds
jmp
dec
cmp
adc
sbb
xchg
orl
rorb
push
adc
sbb
fisubrl
out
mov
fidivs
aad
mov
and
jbe
test
dec
xor
cltd
cli
cltd
xchg
push
push
fisttpl
repnz
es
popf
aam
and
push
andl
sar
and
jmp
or
loop
insl
push
cmp
es
sbbb
xor
call
mov
dec
mov
scas
sub
dec
and
lea
in
ss
lret
les
enter
inc
sub
pop
jmp
lahf
mov
mov
or
getsec
ljmp
leave
mov
mov
add
addb
negb
inc
sub
mov
or
cmc
pop
lret
sbb
dec
into
mov
dec
shll
popa
sbb
out
add
icebp
pushf
in
jecxz
xor
inc
lret
fadds
aam
arpl
enter
sti
es
ja
xor
enter
lret
xor
lods
insl
pop
sbb
leave
cmp
ret
xor
push
mov
mov
xchg
into
xchg
cwtl
data16
adc
add
xor
xchg
xlat
inc
jge
jp
sbbb
mov
xor
std
or
ror
jns
fdivl
dec
mov
add
data16
and
cmp
ret
aaa
pop
pop
outsb
xor
aaa
test
adc
xchg
ds
pop
sbb
push
jl
fidivrs
adc
sbb
ljmp
jg
add
hlt
sti
sbb
adc
xchg
cld
cwtl
ja
fdivrl
in
mov
icebp
add
pusha
ds
mov
test
fidivl
push
cmp
adc
jmp
mov
adc
add
xchg
push
mov
clc
dec
scas
or
rolb
jne
leave
lcall
fstpl
dec
and
mov
dec
mov
sub
in
out
lods
call
fildll
dec
jnp
sbb
xchg
cmpsb
stos
push
sahf
sbb
cmp
test
dec
popa
mov
aas
dec
stos
shll
mov
xor
mov
jmp
dec
inc
inc
mov
insb
mov
xchg
pop
loop
pop
lea
cmpl
and
jnp
pop
test
cltd
mov
pop
jae
insb
mov
lcall
das
ror
emms
push
cmp
xor
sub
mov
jp
jns
inc
mov
push
jg
scas
std
cs
lods
lcall
shlb
lahf
jbe
inc
dec
andb
or
xor
push
out
fnstenv
lahf
push
adc
scas
mov
mov
and
leave
sbb
shlb
decb
sar
test
jno
mov
xor
fistl
jne
movsl
shlb
fdivrl
insl
es
pop
mov
ljmp
xor
leave
cmc
push
mov
push
pop
out
jbe
stc
pop
std
cwtl
adc
inc
inc
nop
xchg
or
or
jno
mov
out
movsb
loopne
out
test
inc
sbb
in
or
pushl
mov
test
cmp
lahf
lock
inc
xchg
xchg
mov
push
dec
rcrl
ljmp
dec
xor
clc
jbe
div
test
shrb
sub
test
or
add
outsb
adc
add
int
mov
lock
xor
in
test
and
icebp
testb
mov
ret
pop
xor
and
cmp
lret
adc
jp
mov
fnstcw
sub
fwait
and
popa
lods
rcr
mov
mov
xchg
cmc
sbb
or
outsl
repz
outsb
mov
inc
sahf
fsubl
dec
in
jmp
lahf
mov
in
es
jp
mov
stos
imul
dec
les
and
adc
inc
push
or
cli
push
dec
mov
imul
repnz
sbbl
sti
cmp
stos
js
or
stc
fldcw
cmc
pop
stos
arpl
cmp
inc
outsl
jmp
and
pop
inc
ss
movsl
xor
add
dec
sbb
dec
int3
xor
push
adc
sub
cmpsl
rorb
dec
lds
std
ds
insb
sub
xchg
hlt
test
iret
imul
loopne
icebp
pop
das
out
loop
push
jl
jle
xor
mov
jecxz
xchg
adc
in
sub
addr16
imul
cwtl
xor
popf
popa
sbb
xchg
sub
arpl
mov
push
mov
inc
mov
ds
jno
sbb
data16
int
std
dec
mov
push
sahf
ds
mov
xchg
subl
mov
pop
mov
inc
dec
daa
pop
data16
dec
stos
mov
jmp
test
push
dec
in
lods
testb
adc
push
test
push
inc
les
inc
pusha
mov
pop
imul
add
xchg
xchg
inc
add
and
sub
mov
insb
push
sbb
out
hlt
mov
outsb
adc
arpl
mov
cwtl
xchg
mov
movsb
xchg
fdivrs
push
pop
xchg
inc
add
loopne
test
mov
mov
pop
icebp
and
mov
notb
mov
or
imull
sarb
shll
mov
xchg
clc
sbb
pop
imul
xorl
push
jle
jns
mov
jge
push
dec
xor
aas
sbb
mov
insb
mov
pushl
movsl
ljmp
gs
pusha
cmpsb
in
insl
xor
add
in
in
mov
daa
adcl
ret
sbb
pop
inc
jb
pop
sbb
pop
pop
cmp
push
shl
aaa
fistps
fimuls
lcall
aad
ret
xorl
add
lds
lahf
out
and
out
movsb
insb
imul
pop
and
loop
cmpsl
or
sub
xchg
mov
movsb
sbb
in
in
or
mov
jecxz
adc
std
aaa
movd
pop
or
addl
ja
or
and
scas
leave
sub
in
popf
inc
inc
xlat
inc
loop
xor
push
jb
je
adc
adc
jp
and
jbe
cld
jl
dec
or
fmuls
fildll
popf
inc
mov
sarl
mov
xchg
pop
fcoml
mov
add
add
stc
js
push
pop
lahf
jns
sbb
push
sub
mov
sbb
sbb
addb
daa
nop
test
xchg
leave
add
mov
sti
dec
jbe
mov
cmpsb
and
push
xchg
lret
into
or
push
divb
cmp
inc
add
add
mov
mov
loop
insb
jecxz
jb
adc
aam
mov
pop
stos
sbb
loopne
lret
mov
jb
mov
mov
cmp
popf
and
cmpsb
inc
lds
mov
sahf
mov
xor
popf
cli
addr16
fcoml
cwtl
rcll
ret
stc
sbb
pop
repz
in
movsb
iret
lods
in
push
mov
outsl
int
sbb
mov
fiadds
cmp
enter
out
and
imul
push
ss
fisttpl
jle,pn
pushf
addr16
lea
stos
sbb
adc
aas
lds
out
clc
mov
popf
jne
notl
scas
or
push
and
out
jnp
sti
out
xchg
int
cmp
js
out
leave
mov
lahf
nop
jns
sub
popf
inc
pop
shlb
int
test
je
sub
mov
std
mov
fsubrp
and
loope
pusha
add
sbb
orl
adc
pusha
js
int
mov
mov
pusha
pop
hlt
cmp
loop
ret
loope
daa
push
add
mov
mov
mov
cmpsl
cltd
cld
insb
lds
aad
cmpsl
xchg
mov
lea
push
push
rcll
mov
iret
adc
or
dec
sahf
fisttps
or
pusha
gs
aam
xchg
into
aaa
sbb
cli
dec
movsb
loopne
cmc
sbb
ss
xchg
call
cli
adc
push
xor
test
ficomps
add
cmp
test
pop
stos
mov
imul
and
mov
arpl
aad
test
inc
and
in
iret
dec
inc
push
mov
sub
mov
jmp
mov
repnz
jns
stos
imul
xor
sub
jns
stc
push
imulb
and
cmp
add
gs
out
shlb
add
clc
pop
pop
and
shl
xor
jno
jae
pushf
mov
jmp
outsb
popa
push
fnstsw
fs
loope
rcr
mov
sbb
sbb
inc
ret
sbb
pop
cmp
xchg
dec
mov
outsb
ljmp
xchg
pop
xchg
sub
cmp
loop
cmp
shll
insb
mov
sub
sub
push
movsl
push
hlt
jne
gs
test
jae
popa
jbe
pop
movsl
cld
sub
lock
xabort
fcoms
xor
pop
pop
cmp
mov
mov
push
das
xor
movsl
mov
mov
clc
inc
lea
jo
movb
mov
ja
mov
add
add
cmp
lods
dec
mov
push
clc
mov
cmp
cld
mov
pop
and
add
push
cmpsl
push
pop
add
jg
lods
xor
and
xor
push
pop
jge
lcall
ss
idiv
pop
fwait
and
loop
and
outsl
fsubr
fincstp
mov
xor
inc
mov
fiaddl
sub
int3
sbb
sub
es
xchg
addr16
popa
or
and
fsts
les
stos
jae
sbbb
cmp
outsb
mov
lock
cmpsl
pop
mov
sahf
sbb
mov
cmp
mov
mov
jne
push
sub
inc
stc
fdiv
hlt
cmp
data16
rep
out
adc
cmpsl
stos
pop
xchg
sbbl
dec
jae
dec
add
adc
and
pop
pop
iret
mov
push
fstl
stc
divl
or
mov
ret
dec
cs
lods
mov
arpl
cmpl
adc
push
cmpsb
stos
fsubr
je
dec
jns
push
jb
fildll
popf
pop
aam
mov
add
div
push
sbb
sbb
fwait
adc
test
sbb
jne
mov
mov
mov
xorl
and
mov
sub
icebp
rcll
inc
and
inc
pop
sar
sub
lahf
sbb
xor
repnz
repnz
push
mov
clc
mov
mov
outsb
and
cmp
into
lcall
pop
lds
mov
jno
mov
test
push
add
sub
je
cwtl
push
and
xchg
xchg
lods
mov
push
sbb
iret
mov
testb
je
mov
nop
bound
cli
add
dec
adc
pop
data16
jnp
pop
adcb
or
addr16
pop
or
xchg
jecxz
xchg
repz
stos
mov
xchg
imul
sahf
lods
sbb
pop
mov
imul
das
mov
test
pop
mov
and
sbb
and
push
jo
inc
notl
test
pusha
cltd
jmp
lret
ret
cmpsl
mov
andb
ret
jb
orb
sbb
aas
xchg
mov
lods
in
mov
mov
pop
adc
decl
or
jnp
fildll
pop
xlat
adc
jns
sub
pop
fstl
lahf
add
inc
daa
or
mov
inc
pop
inc
test
or
cmp
lds
push
sub
ja
iret
mov
outsb
mov
sbb
push
ds
or
adc
ja
in
or
shlb
dec
testb
sbb
in
mov
stos
out
fstp
xchg
push
lods
scas
cmp
sbb
in
fisttpl
cli
pop
int
sbb
add
cmp
arpl
fnstcw
push
lds
popf
mov
addb
mov
mov
jo
adc
mov
mov
fmul
xor
inc
sbb
cs
fldcw
aam
and
lcallw
mov
jge
inc
adcb
lods
call
test
fstpt
ja
out
jb
or
or
sbb
lods
inc
repnz
test
push
jle
lds
cmpsl
inc
imul
sbb
xchg
imul
cli
and
pop
pop
out
pop
mov
and
call
or
rol
jne
inc
dec
add
lods
push
or
int3
push
lds
push
scas
clc
mov
and
mov
je
sub
aaa
sti
repz
cli
jmp
jp
lret
push
adc
mov
inc
test
movsl
jge
lret
out
movsb
mov
mov
or
mov
jle
jno
pop
aam
lods
out
dec
fwait
sbb
popf
sbb
pop
and
sub
push
call
ret
jmp
jp
cmc
jne
mov
push
pop
int
aam
aam
imul
sbb
fistl
arpl
inc
jne
mov
dec
and
test
es
outsb
mov
cmpsl
lahf
jns
fldl
ljmp
rcr
out
sub
addr16
test
pusha
push
jmp
push
xchg
xor
sub
add
or
push
xlat
popa
dec
mov
mov
add
dec
mov
stos
lcall
jno
lahf
aas
mov
or
push
or
jge
or
add
cmp
or
mov
inc
sbb
outsl
aas
jno
lods
js
pusha
mov
hlt
test
das
ret
adc
jmp
mov
adc
or
and
ss
je
xor
mov
xor
push
nop
cld
xchg
mov
pop
dec
add
call
callw
faddl
or
test
roll
jp
scas
mov
lds
or
ret
sbb
sti
and
dec
movsl
push
jno
xchg
mov
add
cmp
hlt
add
or
add
into
pop
dec
inc
push
jge,pt
jo
movsl
inc
cmc
cmp
int3
push
or
pop
push
sub
mov
lahf
outsb
int3
sbb
or
stc
loop
inc
data16
mov
pop
jp
push
stc
shlb
in
aad
ds
test
or
mov
in
pop
sbbl
and
imul
mov
cwtl
add
adc
xchg
xor
sub
sub
test
fs
test
notl
add
lahf
push
push
jp
pop
je
nop
test
jl
adc
out
pushf
pusha
adc
das
out
in
std
ror
sbb
imul
fdivrl
je
jnp
or
jb
cmp
outsl
mov
repnz
mov
adc
in
cmpsb
mov
inc
bound
repz
cmc
add
mov
fiaddl
les
jo
out
sbb
lds
daa
cwtl
ljmp
in
xor
test
cmpb
ljmp
out
and
or
pop
push
int3
or
mov
outsl
lahf
js
in
sbb
sbbl
jp
adc
adc
das
in
adc
xorb
jno
add
sbb
jne
sub
mov
xorl
out
xor
aam
pop
stos
mov
dec
xchg
sub
sub
sahf
cmp
pop
and
std
fadds
mov
std
mov
imul
imul
in
test
inc
push
mov
rcr
pop
cmc
and
mov
xor
xchg
mov
addr16
pop
ss
push
call
pop
stc
pushf
or
cmp
out
inc
push
mov
mov
loop
insl
pop
cs
mov
jbe
inc
shl
lds
jo
mov
sarb
shll
mov
insb
xlat
stc
adcb
std
shrl
aaa
and
add
test
cmp
or
xor
and
mov
cli
jns
or
mov
lahf
add
out
xor
out
mov
add
mov
mov
cmp
fcmovne
fstpt
sub
or
jbe
sbbb
mov
sti
or
cld
lret
ret
push
je
das
sbb
sub
fwait
mov
pop
sub
sbb
fisubl
xor
xchg
icebp
cmp
clc
and
jo
into
xor
outsb
ja
sub
loope
jb
mov
faddp
xchg
adc
ss
and
ja
fs
push
add
pop
sub
pusha
test
dec
jnp
mov
cmp
mov
aam
pusha
jne
loopne
mov
ret
movsb
adc
imul
das
mov
fadds
jbe
ljmp
or
cli
mov
stos
push
enter
ljmp
push
pop
clc
jno
pop
xchg
and
xchg
jecxz
cmp
in
bnd
xlat
test
xlat
ja
repnz
sub
scas
dec
adc
dec
dec
cs
cli
mov
mov
jno
mov
mov
jb
pusha
or
aaa
js
out
insl
dec
xorb
sti
mov
out
pop
les
cmp
push
in
arpl
fistps
push
sub
mov
mov
test
cs
pop
fdivrs
dec
iret
add
les
or
xchg
dec
mov
push
int
and
das
mov
mov
mov
and
addl
fidivs
ss
mov
pop
nop
jle
out
sbbb
int
push
and
xchg
and
jge
mov
ds
cs
enter
outsl
fidivl
cmp
test
les
cmpsb
xchg
sub
or
sub
gs
ficomps
add
add
cs
fs
xor
inc
enter
or
lds
icebp
insl
pusha
faddl
in
push
popa
inc
jb
pop
inc
ja
pop
mov
sahf
dec
adc
xor
sbb
xor
stc
adc
or
push
dec
enter
pop
dec
lds
fimuls
outsl
add
pop
jp
xchg
jo
or
jecxz
jecxz
ds
dec
mov
mov
sub
movsl
fsubr
arpl
pop
scas
mull
mov
cmp
pop
fwait
sub
push
add
cmp
cwtl
add
xchg
shl
inc
mov
sub
fimull
lds
push
inc
cmp
inc
adc
in
push
xchg
xor
cmp
in
inc
push
sub
outsl
add
shll
mov
out
loop
testb
adc
pop
cmpsb
arpl
inc
popa
std
dec
sub
es
fmull
lea
jae
inc
or
or
fisttps
inc
ds
jnp
push
xchg
mov
insb
mov
and
orl
jmp
and
lret
adc
mov
push
inc
push
aaa
pop
sub
sbb
dec
push
xor
icebp
out
adc
out
jmp
xlat
mov
dec
ja
xor
push
sbb
xchg
stos
insb
insb
add
cs
fldcw
inc
adc
and
mov
into
mov
push
pop
outsl
fcomps
xor
mov
push
pop
jmp
or
add
scas
mov
mov
cwtl
out
or
push
pop
pusha
fs
pop
adcl
imul
push
shrb
adcb
pushl
xor
inc
leave
mov
jle
das
dec
adc
in
push
insb
or
pop
and
dec
inc
lahf
jmp
xor
mov
inc
sbb
inc
or
or
cmp
divb
subl
sbb
scas
ror
mov
incb
cltd
jo
sub
pop
ja
mov
sbb
js
fs
insl
popa
cltd
sbb
aad
add
mov
push
sbbb
dec
lods
sbb
sarl
mov
jo
jg
lods
xor
xchg
push
jnp
data16
sbb
mov
fsubp
rorl
mov
jb
aad
in
add
jle
inc
fnstcw
jp
jp
in
mov
leave
jno
data16
stc
xchg
arpl
dec
addb
push
outsb
inc
cli
jb
push
in
leave
repz
inc
add
or
andl
add
push
inc
cmpsb
jmp
sub
sti
and
and
inc
sbb
sub
outsl
and
dec
dec
push
fs
rolb
cmp
fiaddl
pop
stos
call
xchg
ret
xor
sbb
mov
out
sub
xor
in
fs
hlt
scas
aaa
fwait
xor
in
scas
cwtl
pop
into
xor
add
push
inc
add
xor
adc
cmp
dec
adc
add
cmp
adc
sti
jae
das
ljmp
sahf
mov
sub
or
in
xchg
add
movsl
mov
movsl
call
leave
dec
dec
adc
adc
stos
aam
loop
and
mov
cmpsb
sub
rcll
sbb
sti
cmp
fstp
cmovb
ja
clc
add
test
jae
add
pop
lahf
pop
ja
push
roll
pop
adc
xorb
or
jl
stc
mov
or
rcl
loop
inc
lods
stos
popf
push
lea
es
inc
out
pop
hlt
idivl
stos
mov
add
push
xorl
aad
pop
dec
jne
xor
dec
popa
jmp
sub
fsts
cmp
or
aaa
jl
bound
pop
popf
test
dec
lcall
test
mov
lods
lods
mov
push
add
jae
rcll
mov
scas
inc
es
or
cmp
dec
and
xchg
shl
push
sti
clc
sbb
les
sub
sbb
mov
repz
hlt
ficoms
cmp
je
loop
movsl
add
xchg
jno
sarl
sbb
shl
imul
push
adc
sbb
mov
mov
and
add
mov
sahf
daa
jl
dec
out
movb
rol
mov
cmp
and
xor
sahf
or
jp
stos
push
enter
fwait
stc
adc
enter
adc
jp
movsb
and
stc
dec
mov
push
inc
push
filds
stc
outsb
push
fmuls
mov
loopne
mov
pop
xchg
test
xor
or
jbe
adc
jbe
sti
adc
cmp
fiadds
or
xchg
pop
scas
cmpb
fisubl
std
sub
jmp
sbb
out
mov
fwait
mov
dec
movsl
in
inc
push
fsubr
sbb
pop
inc
outsb
out
or
xor
cmpb
sti
pushf
pop
ds
scas
scas
mov
mov
popa
test
cmp
or
xor
rorl
out
push
cltd
cmp
mov
add
js
or
aaa
loopne
mov
adc
jp
jle
or
dec
clc
icebp
lret
fdivs
xchg
into
jecxz
addb
mov
inc
daa
lea
fs
inc
xchg
outsl
cmp
mov
inc
and
inc
inc
rcll
and
or
pusha
daa
sbb
mov
xor
mov
inc
fdiv
dec
lock
jge
sahf
mov
push
lahf
dec
insl
adc
and
push
mov
out
arpl
cwtl
inc
mov
movsl
repz
cmp
arpl
push
jne
jne
cmp
mov
lahf
stos
push
ret
xchg
shr
enter
mov
mov
push
pop
add
pusha
sbb
leave
push
jg
scas
pop
ficompl
jne
mov
xor
fcoms
sbb
imul
imul
clc
inc
cmpsb
insb
stos
loope
cli
mov
lea
popf
add
push
sti
inc
sub
negl
mov
fcompp
subb
dec
push
jmp
in
fidivrl
push
std
int
lahf
aad
pushf
jecxz
clc
pop
and
adc
stos
mov
adc
dec
movb
push
in
lock
add
xchg
or
jmp
addr16
push
jg
sarl
ljmp
imul
cmp
jle
mov
and
mov
jmp
lods
cmpsl
sar
cld
stos
iret
lds
ror
add
cmp
inc
shlb
inc
mov
xor
mov
decl
iret
or
push
sub
jb
mov
cld
iret
lods
mov
inc
repz
stc
ja
outsb
fisubrs
cltd
enter
movsl
pop
sti
inc
fistpl
lret
jp
push
repz
nop
fs
dec
fidivl
cmp
inc
lret
sbb
sbb
and
hlt
push
dec
imul
aas
cmpsb
or
pushf
mov
pushf
add
or
mov
dec
add
fs
nop
jo
test
cmp
pop
adc
xchg
fildl
test
es
xor
and
sub
inc
ljmp
cwtl
jp
shr
inc
out
dec
cld
or
xchg
jnp
xchg
ja
rol
imul
push
das
ret
mov
inc
sbb
ds
adc
fimull
inc
sub
testb
mov
popa
in
roll
leave
xor
pusha
insl
inc
push
and
cmp
cmpsl
mov
mov
sbb
push
fisttpll
scas
mov
push
rorb
xor
mov
fcoml
jecxz
push
ljmp
inc
mov
or
xchg
pop
je
lcall
lods
mull
xor
popa
jle
xor
jmp
aam
mov
push
mov
rcll
aaa
xor
stc
fcoms
ret
iret
jl
das
cmp
loopne
int3
jge
pop
aam
sbb
dec
cmpsl
or
inc
adc
mov
pop
push
dec
mov
dec
stc
push
push
xor
pop
sti
shlb
andb
mov
mov
aad
iret
push
jns
cmp
testl
mov
sub
sbb
cmp
test
xor
mov
xchg
lret
mov
jae
and
or
call
dec
mov
xchg
xchg
aaa
imul
mov
and
dec
mov
xchg
lods
insb
outsb
xor
les
xchg
rorl
addr16
sahf
push
mov
pop
pop
add
cmpsb
jne
xor
add
fnstenv
shl
fwait
mov
pop
addr16
rclb
lahf
sub
popl
test
repnz
xor
mov
mov
movsb
ret
mov
iret
ss
pop
add
dec
sbb
notb
inc
pop
mov
xchg
test
cmp
sbb
ficoms
aaa
cmp
add
sub
aaa
xchg
push
add
jne,pn
imul
int3
adc
or
mov
enter
add
add
jb
fwait
incl
xchg
dec
cltd
inc
insl
inc
jnp
sbb
les
outsb
sub
pushf
jg
add
inc
vsqrtps
mov
sub
xor
pop
aam
pop
sbb
adc
in
fbld
jl
out
push
pushf
mov
sub
inc
dec
call
dec
cs
pop
les
xlat
pop
inc
jbe
jge
jg
mov
inc
sbb
mov
sub
push
pop
rcrb
jge
ficompl
lahf
repz
mov
pop
jbe
cltd
popf
cmp
jmp
scas
or
jmp
sbb
fdivr
push
sub
addr16
lret
jne
mov
scas
push
andb
sbb
and
xchg
aas
mov
pop
cmc
cmpsl
xlat
push
ja
fistl
pusha
cmp
fidivl
jae
inc
push
dec
add
std
push
clc
dec
lcall
aad
push
pop
adc
mov
aas
imul
mov
std
iret
cltd
xor
mov
sbb
in
xor
sub
add
pop
mov
inc
inc
ret
mov
nop
adc
cmp
scas
aad
andb
fiaddl
pop
ds
dec
leave
jo
je
aad
push
into
test
imul
jl
push
ss
aam
xor
mov
mov
dec
pop
cmc
enter
loop
ljmp
sti
add
aaa
imul
pop
mov
scas
je
dec
out
inc
loopne
xor
rorb
jmp
pop
insb
aad
pop
dec
fildll
dec
xor
or
inc
sub
gs
xchg
dec
and
in
mov
mov
imul
imul
and
xchg
mov
cmpsl
jns
mov
mov
and
dec
notb
andb
lea
or
push
sub
dec
lods
pushf
dec
xchg
leave
call
mov
fcmove
push
jmp
jmp
pop
xchg
mov
dec
push
jae
fidivs
stos
scas
repnz
test
js
loopne
push
fbld
into
jl
hlt
out
rcl
movsl
subl
stos
mov
lods
fdivs
sti
out
leave
mov
aas
ds
and
in
mov
push
lret
cmc
jp
xchg
movsl
or
inc
sub
jb
jecxz
inc
mov
rolb
pop
fisttpll
in
mov
mov
cmp
inc
loope
jno
ret
push
movsb
mov
cmpsl
dec
or
ffreep
hlt
sub
movsl
cld
lret
inc
sahf
mov
fists
inc
movsl
and
mov
imul
lock
orl
clc
cmp
ficoml
add
mov
scas
cmp
das
test
fadds
or
xor
xchg
push
loop
mov
arpl
insl
addr16
andb
lea
in
xor
pop
sbb
cwtl
push
push
outsl
xchg
inc
sti
dec
jb
clc
push
popa
lret
rcll
pop
popf
or
sahf
jge
into
out
leave
in
jle
mov
adc
mov
lds
add
or
or
sbb
lods
mov
pop
dec
bswap
push
out
sahf
xchg
stc
add
push
mov
hlt
sbb
jae
xor
and
xor
adc
lret
imul
into
aas
ror
mov
int
xchg
dec
aas
ficompl
fadds
ret
ljmp
lods
scas
in
jp
adc
in
out
and
fld
push
lods
shlb
and
mov
xchg
sbb
mov
fidivl
in
jne
ret
psadbw
pop
mov
inc
and
bound
cmp
add
jb
mov
mov
andb
mov
rol
leave
out
inc
sub
dec
aad
dec
xor
or
jle
into
xchg
cwtl
in
add
movsb
test
loop
pop
mov
jg
popf
dec
les
popa
sub
xchg
cmp
ljmp
fists
cld
stos
mov
adc
jg
mov
add
dec
pop
pop
enter
repz
ret
fwait
jne
xchg
sub
ficoms
adc
jns
mov
pop
mov
insl
in
lea
addl
out
jo
or
insl
push
mov
clc
xchg
repz
sbb
inc
je
or
lcall
xchg
pop
cmp
lret
pop
lods
sub
es
and
or
pop
cmpsb
addb
scas
pop
out
jnp
shl
xchg
mov
popfw
fwait
mov
out
mov
xor
mov
decl
push
icebp
gs
jl
or
sub
shlb
inc
fistl
pop
add
mov
popf
sbb
repnz
inc
into
insb
push
add
mov
pop
rorl
sbb
sbb
shlb
rcr
xchg
jne
daa
addl
test
push
jo
xchg
mov
cwtl
jae
and
rcll
fnstsw
cmp
std
sub
inc
sbb
movsl
jne
adc
add
rol
nop
and
call
xchg
pop
xor
icebp
test
adc
push
mov
sub
sbb
mov
icebp
pop
lods
dec
les
xor
scas
sub
imul
mov
pop
fnstsw
fwait
sbb
cmp
or
adc
cmpsl
fldcw
add
out
negl
aas
fisubrs
cmpsb
cmc
pop
cltd
ret
cmp
inc
xchg
add
dec
daa
popf
cld
cmpsl
mov
cld
sbb
insl
imulb
jne
pop
push
sub
push
scas
add
ret
cld
dec
inc
xor
mov
lock
test
push
sub
loope
adc
cli
scas
cmpsl
mov
idiv
sbb
pop
popf
sbb
pusha
push
sub
ljmp
sub
push
jge
xchg
shrb
movsl
lods
rclb
mov
mov
shl
mov
cmp
jae
and
mov
aaa
jo
sbb
je
xchg
push
nop
xor
rorl
or
pop
cwtl
pop
push
cmp
mov
mov
mov
sbb
push
leave
pop
outsl
cmp
xor
scas
mov
mov
mov
jne
jno
cwtl
adc
icebp
xchg
ror
xor
clc
aad
movsl
sahf
pop
add
add
rclb
adc
cmp
out
mov
push
sahf
pop
xor
mov
shl
and
out
mov
mov
lret
adc
mov
nop
xor
cmp
cmpsb
in
push
or
int
pop
sbb
or
inc
add
sahf
add
sub
jnp
inc
aaa
adc
sti
loop
add
mov
iret
flds
push
cltd
pop
push
jg
mov
inc
in
jle
xor
outsb
inc
jnp
xchg
das
jo
aaa
mulb
lret
insl
lds
cltd
push
mov
mov
sub
jae
mov
sbb
lods
ds
jge
or
mov
ss
lods
mov
test
mov
mov
js
fdivl
lea
lds
mov
add
push
btc
loope
cltd
outsb
add
push
xor
jbe
mov
xor
in
lret
mov
pop
xor
fidivrl
mov
jl
or
fldt
test
popa
pop
adc
pushf
adc
inc
enter
mov
fcoms
cmp
sbb
lret
dec
mov
add
xchg
and
divb
cmp
push
mov
push
loope
adc
movsb
xchg
jmp
andb
cmpsb
in
es
mov
mov
inc
out
xchg
cmp
iret
or
dec
das
xor
add
das
or
test
mov
dec
out
into
sti
icebp
sti
aas
ret
enter
cld
push
sahf
repz
xor
insb
ljmp
cmc
xchg
roll
add
jle
and
or
adc
std
int
loop
insl
jmp
mov
xor
insb
ja
iret
mov
add
cmp
out
cmp
inc
jne
pushf
xchg
imul
xchg
scas
push
and
push
repz
push
scas
jp
fwait
sbb
rcll
add
insw
add
push
mov
xor
mov
into
adc
jge
je
sahf
sbb
xchg
ljmp
iret
lahf
xchg
icebp
pop
cmp
xor
or
fstps
jbe
inc
xchg
insb
ret
aaa
adc
jns
jo
ja
pop
inc
lahf
or
xor
ds
shll
cmpsb
mov
popf
rorl
test
hlt
cmp
sbbb
pushl
into
test
das
testl
pop
outsb
out
xor
inc
xor
negb
les
mov
arpl
xchg
inc
mov
adc
pop
xchg
dec
rclb
inc
pop
adc
inc
fbld
popf
rorb
push
fnsave
xor
and
lock
ja
push
cli
cmp
adc
mov
bound
dec
jnp
loop
daa
jnp
push
or
jae
inc
inc
cmp
bound
lock
pop
arpl
popa
cmp
sarb
mov
out
and
int3
and
mov
stos
aad
test
jg
adc
pop
jo
inc
lret
icebp
gs
popa
push
cmp
push
pop
jbe
pop
sbb
out
xor
movsl
mov
pusha
sub
xor
jne
movsb
movsb
mov
mov
scas
ja
verw
in
and
xor
jb
loope
stos
mov
fdivs
add
inc
dec
mov
bound
adc
pop
mov
std
xlat
xor
sbb
lock
or
call
dec
xchg
mov
mov
mov
sbb
cwtl
sbb
mov
cmp
and
cmp
fcmovne
jmp
and
ds
shlb
cli
insl
push
and
jno
mov
or
xor
arpl
jnp
inc
leave
xchg
popa
inc
andl
mov
daa
mov
mov
stc
enter
pusha
cmp
ret
mov
add
xor
popa
out
and
sbb
loopne
pop
les
outsb
ret
cmp
cwtl
call
pop
data16
push
jl
scas
dec
and
mov
dec
sbb
jb
push
shl
setge
and
mov
push
or
mov
aas
xchg
add
push
fsubl
movsb
cli
jns
sub
andl
jl
fstpt
sub
and
andb
mov
jecxz
out
ret
pushf
push
cmp
mov
sub
push
mov
js
adc
loop
adc
inc
inc
jl
mov
and
addr16
inc
loope
cmp
dec
call
sbb
cmp
into
sbb
cli
sar
andb
jo
mulb
insl
mov
mov
dec
scas
icebp
aaa
mov
mov
iret
cmp
ja
mov
inc
sub
fsubrs
out
stos
adc
pop
cwtl
xchg
dec
jmp
andl
sti
incl
inc
push
repnz
dec
jb
cmp
sbb
or
push
jnp
dec
push
out
inc
inc
andl
dec
cmc
test
call
push
ret
push
xor
push
sarb
aam
popa
insb
jno
mov
jp
mov
adc
jbe
xchg
and
jg
jne
out
pop
clc
xchg
pop
insb
pushf
lock
adc
mov
mov
cwtl
xor
movl
int3
sub
repz
pop
adc
stos
adc
testl
jmp
cmp
xor
out
adc
or
inc
testl
cli
and
cmpsl
mov
add
xor
enter
jmp
insl
int3
xchg
cld
mov
mov
xchg
push
adc
jno
add
xchg
or
movsl
cmpsl
sbb
xor
pusha
cltd
inc
sbb
je
dec
mov
adc
push
icebp
xor
sub
nop
adc
sub
jecxz
sub
negl
dec
mov
jo
lsl
sbb
movsb
lahf
mov
mov
mov
push
inc
adc
scas
sarl
popa
or
jp
push
sti
fists
clc
ret
daa
sub
fldcw
scas
mov
fists
push
aaa
and
subb
sub
dec
cmc
pop
lahf
icebp
pop
out
mov
dec
xchg
mov
jbe
xchg
fldcw
data16
and
xchg
rorb
push
sahf
insl
inc
mov
je
pop
shrb
insl
cwtl
sub
sahf
xchg
push
popa
and
jno
scas
stos
sar
getsec
dec
lahf
iret
adc
aad
mov
mov
adc
jmp
mov
ret
mov
adc
jp
mov
push
or
daa
push
sbb
push
outsb
and
xchg
xor
in
mov
lret
xorb
cltd
adc
dec
sub
mov
movsb
inc
xor
mov
dec
les
or
mov
lods
mov
cmp
jmp
inc
aas
aam
outsl
mov
xor
adcb
pop
mov
cs
das
or
scas
icebp
data16
cmpsl
sahf
iret
into
test
fucomip
sti
cwtl
ljmp
jae
sub
imul
jecxz
movsb
ret
or
push
mov
adc
jmp
lods
sbb
pop
sarl
xchg
lea
imul
jb
aas
js
in
int3
cmp
scas
jo
jecxz
ss
in
sbb
scas
int3
call
xchg
bnd
mov
jle
in
bsf
xlat
rcrl
das
scas
lds
loope
mov
push
push
rorb
insl
ja
ss
xor
cmp
lcall
jecxz
pop
outsb
pop
movsl
dec
dec
pop
jl
hlt
jle
or
adc
push
push
jl
stos
insb
test
jp
loope
mov
rcll
mov
fists
cmc
fstpt
cs
jp
loop
cmp
jp
adc
xor
insl
ja
inc
push
ret
lods
push
sub
jp
pop
mov
out
mov
and
adc
and
pop
and
xchg
sbb
lret
mov
adc
xchg
push
push
mov
jo
adc
xor
mov
adc
int
sub
inc
mov
shlb
sbb
or
loopne
dec
mov
ds
ficoml
jns
push
jb
out
lock
lcall
sub
mov
sarb
adc
pusha
xchg
or
cmp
pusha
push
setne
mov
inc
dec
test
and
mov
and
mov
cmp
pop
orl
fimull
push
fldt
imul
inc
adc
fwait
adcl
and
lods
xor
pop
push
mov
lea
dec
mul
xchg
imul
out
adc
enter
xlat
jge
sbb
mov
adc
mov
js
sbb
pop
les
jbe
movsb
scas
inc
pop
mov
inc
call
jbe
and
dec
lea
int3
stos
ficompl
sarl
pop
ljmp
adcl
mov
lret
bound
inc
push
adc
sbb
insb
sub
movsb
movsl
sbbb
bound
pop
fsubl
cwtl
insb
xor
loope
push
rorl
mov
push
lahf
push
xor
mov
sbb
call
fmuls
sub
sbb
bound
add
cmp
mul
or
xchg
int3
sub
sbb
loop
outsb
ret
fistl
or
in
clc
gs
xchg
push
sub
cmpsb
add
mov
sbb
pop
scas
sub
sbb
jne
or
mov
iret
pop
xor
in
in
test
sub
fldt
pop
stos
mov
cmp
pop
add
and
rcrl
cltd
xchg
cmp
add
scas
cmpsb
pop
cltd
cmc
add
push
jp
push
sub
fcomps
fisttps
pop
cmp
sbb
in
cmp
pop
push
je
xchg
xchg
aad
lret
adc
xchg
aad
and
in
or
mov
mov
adc
add
dec
jbe
cmp
mov
shl
xchg
sub
mov
or
cmpsl
mov
xchg
sub
dec
fcoms
out
jnp
sbbl
les
mov
add
jbe
data16
push
insb
out
cld
leave
out
outsl
xchg
mov
mov
shll
imul
sbb
jb
pop
sarb
icebp
jmp
sbb
pop
push
daa
flds
adc
pop
enter
rcl
mov
pop
not
shll
pop
aam
push
les
loope
popa
xchg
mov
dec
mov
dec
xchg
fs
mov
push
arpl
xchg
xor
test
mov
and
aas
imul
nop
iret
or
lea
popf
cmp
add
jne
pusha
lds
movsb
add
pusha
pop
sbb
lahf
sbb
lock
jp
inc
fxch
stos
loope
pop
test
mov
jb
push
lock
sbb
outsb
push
leave
fxch
repnz
cmp
lods
fdivr
fmull
repz
lcall
adcb
stos
test
je
mov
into
loope
push
mov
data16
push
push
push
out
xchg
mov
filds
outsl
in
ljmp
int
or
fisttpl
js
mov
lret
repz
xchg
cmp
dec
fdivs
jp
imulb
fdivr
mov
push
rorb
loop
cmp
mov
mov
rcrl
cmp
add
addr16
inc
adc
or
ret
sbb
aam
je
shll
ret
dec
cmp
or
pop
push
mov
push
add
stos
xchg
cs
mov
pusha
je
mov
pop
inc
cmp
scas
push
ss
test
xchg
xchg
std
xor
js
jno
cmc
fcom
inc
mov
pop
inc
test
xchg
or
ss
sbb
push
ret
lods
repnz
fisttps
cmp
inc
xor
rcl
or
std
inc
pop
repz
pop
pusha
fs
pop
ljmp
sub
std
inc
int3
xchg
jne
hlt
nop
scas
rcl
sbbl
shlb
cmp
adc
xor
adc
mov
jmp
fcoml
rorb
popa
mov
ret
das
in
jne
pushf
gs
rolb
dec
and
mov
nop
inc
imul
jecxz
imul
and
clc
dec
push
or
mov
enter
xchg
je
aad
cmp
xor
mov
xchg
and
aas
adc
or
inc
fwait
sbb
dec
mov
stc
sub
addr16
cmp
adc
push
xorl
adc
push
rcr
xor
adc
aad
ss
or
xor
push
xor
xor
xor
lret
mov
cmp
lcall
dec
icebp
dec
adc
clc
adc
pop
bound
mov
shlb
inc
xor
add
and
pop
cs
cmp
mov
aas
mov
push
mov
cli
cmc
push
shll
test
mov
jg
mov
outsl
jo
inc
add
das
test
sahf
jb
cs
jge
dec
js
ret
push
imul
adc
mov
lret
int
icebp
adc
les
xchg
addr16
mov
xor
xchg
xor
mov
repz
jle
and
stos
lea
lds
daa
rorl
push
or
sbb
sbb
xchg
sub
insb
pushf
mov
push
xchg
sti
js
jne
dec
popa
pop
cmp
mov
testl
xchg
mov
mov
test
xor
cld
xchg
es
xchg
test
mov
sbb
lcall
stos
xor
aad
aam
mov
gs
rep
dec
dec
imul
insl
lods
xorl
jl
jae
cmc
xor
inc
xor
ret
jecxz
lods
jne
mov
sbb
inc
rcrl
dec
cld
jns
ljmp
out
sbb
push
sbbb
pop
stos
in
sbb
cmpb
mov
clc
cmp
scas
nop
xor
and
pop
cmp
inc
cwtl
pop
adc
inc
sti
rcr
outsl
cwtl
in
or
adc
insb
movsb
or
mov
jae
scas
mov
sub
pop
push
jo
jae
inc
popa
lea
cmp
arpl
std
lea
xchg
test
mov
and
loop
jg
or
fnsave
insl
arpl
ficoms
aaa
fldt
cmp
xchg
fcmovnbe
insb
xchg
adc
mov
pop
xor
cmp
test
dec
sbb
pushf
add
and
adc
popa
adc
jmp
cltd
jbe
inc
mov
mov
inc
cmp
cmpsb
inc
xchg
xor
sbb
dec
or
adc
xchg
call
dec
fsubrs
test
dec
mov
and
sbb
loope
pop
xor
aaa
jbe
mov
out
sbb
repnz
sti
in
movl
sub
cld
jb
leave
int
push
push
xchg
das
push
jge
mov
and
int3
jle
sub
lock
fnsave
cld
xchg
loopne
push
mov
out
lcall
mov
inc
loopne
jmp
cmpsl
xchg
repz
xor
mov
fildl
sahf
jmp
aad
ret
fcmovb
xchg
ss
and
add
fdivrp
dec
xchg
test
and
add
lcall
pop
mov
loop
or
lods
popa
pushf
leave
pop
int
push
cmp
dec
mov
fsubrl
daa
dec
out
sbb
ret
fcoml
leave
xlat
inc
loopne
lock
sbb
push
insl
or
cmpsb
sub
clc
jne
adc
call
in
xchg
inc
add
icebp
leave
inc
mov
aad
xchg
jae
xchg
shll
ja
lods
mov
add
daa
loope
dec
push
jns
ss
jne
je
jge
loop
xchg
adc
test
pop
fs
shlb
aas
notl
jb
mov
ret
cmp
jp
add
repz
pop
inc
ret
stos
sbb
mov
xor
test
add
fst
mov
xchg
pop
xor
add
mov
jne
xchg
fstpl
cmc
mov
sub
jmp
xor
cmpsb
fstl
push
and
inc
cmp
rcr
pop
sub
jne,pt
push
imul
imul
inc
fwait
cmpl
sti
dec
or
pushf
rcrl
imul
bound
mov
addr16
inc
push
out
inc
stos
jne
ljmp
mov
pop
das
lock
mov
ljmp
mov
je
push
subl
daa
repz
jp
push
jecxz
adc
add
ljmp
cmp
out
wrmsr
stc
xchg
in
addr16
jmp
mov
es
inc
jg
icebp
cmp
loope
add
mov
subb
lcall
and
pop
inc
push
xorl
int3
stc
fmull
cmp
fsubs
enter
ss
mov
movsl
in
outsb
xchg
into
jb
addr16
stc
mov
or
negb
fldcw
sub
push
push
sub
pop
cmp
out
jo
xor
imul
push
fisubrl
mov
mov
in
sahf
sbb
fnstenv
cmp
pop
mov
and
lsl
jno
mov
push
dec
xor
jmp
or
outsb
sbb
dec
imul
int3
mov
pop
jns
shll
jae
pop
lea
shll
inc
sbb
mov
mov
ret
xchg
push
pop
lock
push
int3
or
sub
mov
cltd
xor
pop
idiv
push
cmp
dec
shlb
push
jge
outsb
in
cmpsl
xor
push
pusha
mov
mov
pop
dec
jle
jne
jmp
inc
or
in
jp
adc
sbb
and
mov
outsl
or
fnsave
repz
xor
out
mov
es
out
adc
into
imul
aas
jle
in
jne
ret
flds
jae
push
sbb
jno
in
mov
in
mov
xchg
dec
flds
rorb
mov
push
push
nop
or
xchg
dec
sbb
and
dec
and
cmpsb
mov
shll
test
loope
push
loopne
arpl
js
lret
cmp
arpl
ljmp
dec
mov
cmpsb
xchg
xchg
andl
fwait
push
xchg
or
sbb
out
dec
xchg
fdivrl
js
sarb
push
jmp
xchg
jbe
add
sbb
addb
fcoms
push
sbb
push
je
call
pop
call
push
push
pop
out
repz
loop
xor
int
mov
fsubl
test
mov
std
xchg
imul
loope
dec
xor
and
mov
repnz
out
cltd
lret
mov
dec
push
jl
sub
cli
fdivl
ss
fiadds
sub
iret
test
popa
imulb
sbb
repz
jmp
mov
sbbb
adc
cld
sahf
out
add
add
int3
pop
test
xor
mov
insl
pushf
ds
sub
inc
shrb
push
daa
add
jns
cld
testl
ss
sbb
sub
jecxz
push
xor
inc
loop
mov
int3
mov
push
jle
xor
in
mov
je
and
andb
and
cmp
add
dec
sbb
mov
sub
popf
iret
mov
das
loopne
aaa
mov
pop
in
outsb
movsl
cld
mov
ret
pop
cli
inc
mov
dec
rorb
or
das
pop
mov
inc
cmp
clc
add
cmp
cmp
in
rolb
jne
and
out
mov
add
xor
lds
imul
xchg
pop
xor
subl
sarl
xlat
cmpsb
inc
dec
dec
dec
cmc
gs
lahf
sahf
popf
lods
adc
pop
pop
test
cmp
loope
mov
in
test
pop
jno
push
dec
mov
mov
mov
sub
lea
mov
cwtl
bound
out
sbb
adc
mov
and
stc
sahf
pusha
je
ret
cli
mov
cmp
and
sbb
mov
pop
scas
cwtl
or
mov
les
std
and
mov
orb
mov
xchg
ja
cwtl
testb
gs
xchg
xchg
pop
mov
mov
fwait
cmp
cmc
pop
pop
adc
sub
pop
and
es
xor
and
aaa
dec
dec
xor
enter
into
popf
adc
jle
mov
or
sub
inc
add
lcall
into
mov
mov
inc
add
mov
in
push
add
out
push
std
push
and
mov
cmp
bound
mov
addb
test
sub
push
lods
repnz
pushf
push
cwtl
insb
and
in
lock
loopne
repnz
mov
xor
out
lahf
rorb
xchg
ret
aad
sar
test
pop
inc
arpl
sub
jno
mov
xchg
push
jns
mov
sub
sahf
push
jne
clc
sub
stos
fstl
mov
movsb
and
fsubrs
insb
mov
scas
cmp
mov
mov
es
pusha
scas
cmp
pushf
in
daa
jge
or
sti
in
int3
in
jb
iret
mov
or
shrl
jg
test
push
push
imul
pop
ror
sbb
pop
lock
fs
xchg
inc
test
pop
sbb
imul
or
mul
movsl
js
jne
scas
push
add
int
pop
and
pop
jmp
out
xchg
out
push
sub
jl
gs
sub
dec
fistpl
push
pusha
andb
int3
inc
jns
inc
jl
sbb
jmp
dec
int
pop
jecxz
mov
jae
dec
js
adc
loope
sahf
push
dec
in
jne
push
and
and
jno
xor
movsb
xor
xor
inc
mov
stos
xlat
es
jge
push
test
jne
dec
pop
pop
inc
push
xchg
cld
aam
sahf
nop
add
inc
jo
outsb
repnz
imul
ret
lahf
fldenv
out
or
pop
mov
add
ret
sbb
psubsb
into
rcll
cmp
lret
jns
hlt
test
xor
icebp
arpl
adcl
xlat
mov
jo
sub
mov
lock
sub
gs
insl
mov
mov
ljmp
mov
xchg
enter
or
dec
and
sub
and
call
pop
push
xchg
or
movsl
xor
dec
dec
mov
ret
dec
pusha
stos
jne
mov
insl
pop
ret
inc
and
loop
jne
test
push
imul
lds
xlat
inc
aad
or
xchg
sti
xor
mov
cmp
cld
lods
aad
sbb
dec
fmull
stos
rcll
push
roll
mov
stc
cmp
push
inc
lea
std
shrl
les
mov
lods
sahf
mov
js
mov
mov
push
out
dec
and
addr16
dec
scas
cmc
mov
and
test
mov
inc
jg
out
jg
push
leave
and
pop
push
in
fstl
mov
into
aas
clc
push
inc
mov
out
pop
hlt
jl
jbe
rorl
icebp
scas
pusha
inc
jb
fs
push
mov
mov
cmp
pop
fcomps
jge
cltd
and
fs
out
pop
push
lcall
stc
mov
inc
lea
pop
adc
scas
icebp
test
xor
lods
xchg
ret
in
pop
imul
and
or
out
xchg
and
jge
jbe
cmp
cmp
mov
mov
and
clc
dec
cmp
cmp
and
mov
cwtl
out
sti
jp
inc
sbb
stc
lods
cltd
or
test
inc
inc
cli
pop
xor
bound
pop
in
out
cmp
jg
jmp
mov
mov
test
pop
scas
inc
imul
scas
movsl
mov
arpl
push
scas
ss
jle
inc
adc
cli
xor
aad
cmp
xchg
sarb
mov
es
push
inc
mov
scas
mov
dec
xor
adc
cmpsb
sub
andl
xchg
xor
pop
pop
fadd
add
xchg
nop
das
mulb
movsl
push
enter
aaa
aad
adc
fistl
jmp
aam
sbb
nop
insb
lods
daa
cmp
cli
pop
xchg
nop
into
fsub
adc
sahf
xchg
push
daa
inc
adc
jnp
int
fwait
mov
rcll
xor
jg
insl
int3
adc
add
sub
pop
pop
jbe
fwait
cmp
test
nop
xchg
xchg
jo
popf
scas
and
mov
out
xor
test
clc
ss
les
jnp
aas
aaa
pop
es
or
cmpsl
movsb
xchg
loope
sub
fidivl
or
in
fwait
subl
into
pop
inc
idivb
and
inc
add
cmp
loop
mov
add
ljmp
aas
imul
addr16
adc
cmp
adc
inc
push
pusha
xor
ret
push
loop
dec
jbe
dec
jge
push
and
push
je
jmp
dec
fmuls
adc
jae
pop
mov
stos
or
xor
test
cmp
xor
mov
inc
je
sbb
cmp
jg
push
test
aam
roll
fnstenv
cs
call
movsb
lds
jg
insb
inc
xchg
xor
or
fstpl
imul
leave
outsl
clc
push
imul
push
xor
in
fwait
fwait
mov
adcb
xchg
inc
lods
pop
pop
pop
daa
add
lock
in
jl
or
push
les
leave
pusha
fwait
xor
sbb
stos
out
ja
dec
repz
out
adc
push
xor
dec
aaa
xor
pop
push
lds
in
mov
mov
xchg
push
and
adc
jns
ljmp
push
push
call
adc
hlt
sub
stos
sub
stos
test
imul
icebp
push
mov
popf
lcall
xchg
xorl
hlt
out
scas
inc
incl
in
jb
out
inc
push
and
lret
ret
push
mov
cmc
dec
leave
cltd
jp
sub
jae
jl
mov
addr16
jmp
sbb
mov
lahf
adc
or
mov
mov
dec
pop
das
jne
xor
mov
jge
test
jne
xchg
je
xchg
push
scas
nop
pusha
pusha
cmp
jg
mov
mov
loop
jb
jge
inc
jo
lret
arpl
sub
sbb
hlt
sbb
push
iret
cli
pop
cld
negb
pop
add
iret
push
add
xchg
stos
add
daa
in
sub
ljmp
lock
pop
lret
fldcw
mov
out
jecxz
gs
sbb
inc
lods
mov
mov
cmp
dec
mov
xor
jmp
cmpsb
mov
ret
or
lock
push
cmpsl
sbb
pop
xlat
sub
xchg
jns
jbe
or
test
push
jnp
arpl
adc
xchg
push
lods
out
mov
push
pushl
push
movsl
sahf
aam
inc
daa
dec
push
frstor
sub
xor
lea
add
fnstenv
je
xchg
arpl
test
pop
cpuid
mov
rorb
or
aam
fsub
pop
sbb
enter
sub
call
pop
push
test
adc
ret
or
scas
add
icebp
iret
addr16
xor
or
push
push
xchg
or
rorb
icebp
sub
jae
xor
lea
pop
pop
cltd
ret
jb
test
xchg
pop
sahf
xchg
pop
jge
jne,pt
shrb
incl
lcall
call
sbb
sbb
sahf
movsl
dec
sarb
movsb
sub
lds
insb
cmc
ffreep
xchg
cmp
mov
mov
inc
push
xchg
outsl
mov
scas
loopne
sub
sub
adc
mov
iret
push
push
addb
scas
or
mov
fs
mov
xchg
mov
aas
push
sbb
sbb
lret
cs
in
loop
sub
mov
das
into
cltd
test
sarl
arpl
cmp
andl
call
adc
shl
push
out
mov
outsb
mov
pop
call
sub
dec
push
rcll
xchg
sahf
pop
push
and
outsb
js
mov
push
out
notb
pop
mov
adc
jmp
pop
xor
sti
pop
xor
inc
jae
cltd
leave
insl
jp
adc
enter
shll
fcmovu
cmp
mov
div
aam
shlb
int3
or
jo
arpl
push
cli
scas
fcmovnb
int3
cmp
push
add
add
sbb
cmp
mov
or
add
cmc
cmp
roll
and
or
sub
dec
out
inc
push
shll
pusha
mov
mov
jg
aaa
in
mov
int
mov
js
add
mov
inc
mov
jmp
ficoml
stos
add
and
imul
lea
aad
and
and
inc
ret
lcall
sbb
loop
loopne
inc
push
aaa
dec
in
notb
repnz
insl
stos
scas
jmp
mov
mov
add
popa
nop
sar
sub
aaa
xchg
leave
pop
push
cs
mov
sti
inc
and
mov
aad
mov
mov
ss
jno
icebp
xchg
xor
push
xchg
into
hlt
cmpsb
js
cmp
mov
pop
cmp
inc
sub
xlat
jbe
pop
loop
int
loop
mov
inc
std
pop
shlb
fucomi
pop
xchg
mov
dec
mov
dec
hlt
cltd
negl
mov
push
ja
popf
mov
sbb
mov
xor
test
pusha
and
pusha
sbb
gs
or
or
pop
push
aaa
mov
mov
stos
mov
fisubl
das
repz
aaa
mov
shrl
ret
and
cld
insb
pop
sti
arpl
mov
xor
ror
fidivrs
jle
push
cmpsb
dec
xor
and
pop
cmp
xchg
fucomip
pop
mov
repz
xor
adc
ss
dec
stc
movsl
xchg
loop
filds
les
ds
lea
icebp
xchg
mov
add
insb
out
pop
push
test
in
insb
popf
les
rcll
mov
mov
jnp
xchg
sbb
das
inc
roll
mov
sub
xchg
mov
and
ja
mull
leave
das
adc
xchg
and
add
mov
push
or
data16
jo
movsl
inc
mov
cmp
aad
shrb
xchg
div
sub
rorb
add
rorb
pusha
push
push
sub
shll
mov
imul
mov
mov
sub
loop
das
aaa
pop
push
mov
push
or
iret
xchg
mov
dec
cmpb
test
inc
pop
cmp
sbb
and
das
aad
jmp
mov
lret
push
cmp
mov
jb
or
pop
jp
dec
ja
aad
xchg
loope
pop
cmp
lds
movsl
xor
mov
push
cmpsb
repnz
adc
lock
xor
fdivs
inc
and
mov
xchg
sub
adc
push
das
pop
stos
mov
lods
into
mov
jmp
xchg
mov
cmp
loop
jmp
ss
sahf
mov
decb
roll
dec
mov
xchg
mov
fldt
cld
loop
insb
inc
xchg
push
in
rol
add
ret
inc
xchg
stos
dec
mov
dec
push
lock
int3
inc
clc
jmp
nop
add
jge
cmpsl
icebp
pop
mov
xchg
sbb
push
stos
jmp
addl
jl
adc
cmpsb
fcmove
sbb
adc
xor
daa
jb
dec
test
scas
xlat
sub
js
pop
dec
pop
outsb
pop
jecxz
mov
push
lods
pop
dec
xchg
dec
das
divl
aas
adc
and
cmp
xor
out
lret
sahf
jns
scas
xlat
add
cld
cmp
xlat
xchg
adc
dec
push
icebp
push
ja
adc
ds
jo
push
cli
clc
jns
mov
jle
jge
je
mov
xchg
mov
shll
cmp
shr
in
push
in
imul
mov
sbb
jmp
nop
xor
jns
mov
mulb
pop
fimuls
jmp
adc
repnz
test
xchg
in
and
xchg
mov
adc
xchg
leave
dec
hlt
cmp
jnp
roll
je
and
out
int3
sub
xor
mov
out
mov
push
insb
arpl
jge
fs
pop
sbb
stc
mov
push
dec
gs
xor
in
mov
sbb
je
arpl
lret
push
jecxz
xor
jnp
mov
dec
lea
insl
jmp
fmuls
shll
fdecstp
sub
in
xchg
add
xchg
stos
insb
scas
pushf
int
insb
cmp
sbb
nop
das
sub
cmp
xchg
in
es
sti
and
mov
xor
dec
mov
into
repnz
test
dec
xor
add
clc
rorb
int3
clc
enter
data16
add
sbb
lds
xlat
and
out
repnz
es
jne
sub
pop
xchg
icebp
outsb
test
iret
hlt
mov
pusha
or
mov
and
jne
jae
cs
lahf
inc
jl
lret
jl
fs
pop
push
mov
scas
add
ds
je
sub
jmp
xchg
pop
cmpsb
shl
add
and
stc
ss
dec
enter
fistpl
sbb
xor
out
add
xor
cld
sahf
xor
sbb
pushf
lock
pop
lret
dec
adc
push
add
iret
dec
inc
fimuls
xchg
je
pop
das
push
dec
sub
bnd
lods
sbb
jg
imul
stos
push
out
adc
fbld
imul
jbe
sbb
inc
sti
dec
call
jg
scas
or
lea
jns
orb
test
sbb
mov
jno
mov
dec
push
and
repnz
cmp
sbb
or
mov
dec
and
and
aad
dec
cmp
mov
lock
in
movsb
ds
mov
in
stc
loop
mov
mov
pop
xchg
mov
sub
js
popa
ljmp
popa
push
sbb
mov
xlat
push
imul
shll
mov
cmp
iret
fdivs
jb
push
push
sahf
sbb
xor
rorb
clc
stc
pop
xor
scas
into
mov
int
mov
or
or
jge
cmpsl
fs
sub
mov
ja
popa
mov
mov
repnz
jbe
shll
in
ja
cltd
mov
nop
out
testb
pop
mov
repz
in
jb
mov
cwtl
rcrb
push
data16
shrl
nop
in
mov
adc
push
nop
outsb
out
es
mov
and
mull
dec
lds
or
stc
pop
mov
enter
dec
cmpsl
and
in
bnd
mov
xor
lahf
mov
or
lods
fs
jl
lret
mov
and
add
adc
insb
jne
data16
pop
dec
scas
push
xchg
xor
push
in
mov
insl
nop
xor
addb
lods
loope
out
cmpsb
enter
cmp
aas
popf
adc
and
ret
jnp
imul
xorl
enter
xchg
mov
push
cli
fsubrs
fbld
popa
jg
push
out
into
dec
xchg
lcall
xor
jns
push
jbe
aas
xchg
lea
jmp
lds
cs
add
jmp
movsb
mov
loop
mov
sub
cmp
sub
sbb
dec
xlat
cmp
in
add
mov
inc
push
jge
pop
arpl
in
xor
mov
jl
stos
jns
dec
mov
push
ss
gs
push
dec
dec
shrl
cwtl
xor
and
ja
ja
mov
add
inc
dec
xchg
pop
pop
sbb
or
aas
ds
cmp
in
push
lods
das
inc
cmp
mov
xchg
imul
outsl
pop
mov
repnz
ds
test
mov
mov
inc
je
push
add
pushf
shrl
mov
mov
dec
sahf
push
in
lret
push
sbb
or
pusha
dec
popf
push
jne
cld
cmp
repz
mov
cltd
outsl
push
pop
scas
sub
cmc
fwait
adc
xor
xor
cmpsb
ljmp
jnp
mov
out
or
mov
mov
lret
addl
es
sub
icebp
mov
mov
data16
jne
psrld
jb
and
sub
fcmovnu
mov
sub
fdivrl
cld
cmp
je
or
scas
ret
jb
jbe
rolb
sub
dec
dec
mov
or
or
mov
clc
mov
cli
movsl
xor
addr16
mov
mov
insl
sub
setne
adc
test
push
and
mov
cld
shll
jne
jmp
push
mov
cmp
into
mov
aas
dec
sbb
xchg
xchg
cwtl
dec
pushf
cmpl
mov
sbb
mov
xchg
jmp
insl
push
mov
cmp
add
rol
mov
sbb
rcrb
or
inc
jno
and
pop
and
cmp
inc
sbb
nop
jbe
xor
popf
bound
jmp
mov
mov
rol
mov
in
mov
sub
filds
cmp
cmp
daa
cmc
jae
jne
sti
arpl
inc
movsb
cmpsl
shrl
call
mov
fs
xlat
pop
jns
aam
cmp
xchg
lods
push
and
sbb
popf
not
sarl
push
pop
mov
mov
orb
scas
and
shlb
sbb
call
orb
ret
xchg
outsb
and
mov
arpl
subb
jmp
repz
xchg
ret
shll
repz
xor
and
xchg
in
sub
sub
and
shrb
ret
lret
into
push
mov
lea
imul
cmp
push
adc
mov
outsl
mov
ljmp
dec
icebp
les
mov
clc
or
or
mov
jge
arpl
lock
movsl
xlat
fnsave
test
popf
sub
sub
data16
mov
shrb
rcrl
add
inc
adc
adc
fiaddl
mov
std
push
ss
test
inc
ss
add
xchg
fsubrs
mov
aam
mov
frstor
mov
sbb
inc
push
int3
mov
fistpl
lahf
add
adc
std
jno
cmp
aam
push
xor
or
outsl
dec
sarl
test
xor
pop
ds
fdivr
add
mov
fs
push
jae
fidivrl
add
sbb
aam
mov
xor
pop
adc
ret
in
jle
int
movaps
stc
dec
pop
arpl
iret
pop
popw
insl
in
movsl
aad
sbb
out
adc
or
pop
sub
and
stos
push
nop
jge
lret
cmpsb
adc
push
push
jnp
jecxz
in
sbb
scas
pop
xchg
pusha
xor
jp
dec
push
mov
test
in
iret
addb
inc
adc
int
add
xor
js
push
addr16
mov
cld
test
jmp
xchg
mov
cmp
mov
pop
fsubl
adc
cmp
or
aaa
aad
scas
cs
ljmp
jge
cwtl
sub
and
aas
push
push
rcrl
sub
mov
mov
jno
outsl
mov
in
sub
push
push
stc
andb
sahf
cs
inc
add
rolb
xchg
popf
xorl
push
fcomps
mov
sbb
pop
pop
sbb
pushf
mov
in
and
in
mov
mov
mov
pop
cmc
loopne
adc
nop
sbb
cmp
mov
std
ret
xlat
cmp
cs
ret
mov
jo
mov
inc
xchg
popf
pop
in
jg
cld
icebp
xchg
fs
push
dec
iret
or
or
xor
std
and
shr
and
xchg
adc
sub
sub
mov
ss
jae
push
mov
pop
mov
lds
sarl
dec
outsl
and
and
pop
hlt
inc
movsb
shlb
cmp
test
inc
jbe
push
sbb
rcll
xor
xchg
icebp
imul
daa
and
ss
mov
jmp
stos
stos
pusha
bound
popf
cmp
mov
mov
push
cli
pushl
dec
lret
jg
popa
jae
pusha
mov
or
add
mov
mov
cmp
fistl
mov
or
pop
mov
xchg
lahf
mov
sub
call
movsl
lods
lds
mov
test
aas
and
pop
mov
push
sbb
cld
into
adc
fisubl
cli
push
mov
inc
jge
push
mov
and
mov
popa
call
testb
icebp
xchg
or
mov
dec
cmp
loopne
inc
and
outsb
scas
jnp
mov
and
cmpsb
stc
pop
fwait
mov
dec
lds
push
sbb
shlb
adc
repnz
or
data16
test
and
push
outsb
jne
popf
jmp
and
sbb
pushf
repz
or
jb
jbe
xchg
out
pop
insb
fwait
aad
test
cmpsl
ja
pop
push
xor
popa
adc
jnp
mov
mov
mov
ja
add
sbb
mov
jbe
xchg
stos
addb
popa
ret
jle
test
push
mov
dec
or
jg
aam
lds
test
jns
sub
out
mov
sbb
jecxz
mov
stc
std
std
divb
aas
shlb
fsubl
fnsave
movsb
insb
xchg
dec
pop
ret
clc
mov
adc
cmp
mov
jnp
ljmp
stos
cld
popa
and
ljmp
data16
push
cmp
cltd
sbb
out
pop
sti
cmpb
mov
jge
js
mov
and
ret
push
or
dec
or
mov
mov
mov
orl
aas
jne
jae
dec
dec
xchg
fiadds
stos
lret
jno
into
jp
push
mov
jg
imul
bound
imul
popf
or
push
mov
loope
xchg
fs
lahf
outsl
lret
aaa
jbe
jo
icebp
enter
out
dec
xchg
inc
gs
test
mov
rcr
lret
sbb
mov
pop
loop
mov
inc
insl
add
jo
std
call
aas
test
out
aad
clc
repz
mov
icebp
push
cmp
pop
push
shrb
jno
jne
pushf
pop
jge
jne
mov
xchg
mov
jle
test
mov
cmpsl
repnz
data16
repz
les
ficompl
and
mov
sbb
lods
and
pop
int3
lea
in
mov
out
pop
dec
xchg
pusha
lcall
xchg
sub
mov
loop
popf
scas
xchg
lds
pop
mov
in
xor
push
setbe
jmp
pop
aaa
iret
lods
jnp
add
mov
adc
inc
push
shlb
mov
xorb
imull
aam
fstp
test
pop
testb
call
fsubp
mov
call
dec
nop
call
xchg
fs
and
call
xchg
xchg
mov
mov
push
and
out
out
inc
sbb
and
cmp
dec
fistpl
lods
loopne
or
pop
mov
fistpll
add
xchg
movsl
cltd
push
out
repz
mov
arpl
mov
push
pop
inc
stc
sub
rorb
aaa
xchg
push
outsl
int3
negl
sub
out
lcall
cmp
mov
mov
mov
mov
sub
or
or
popa
fstl
mov
push
shll
loope
rcrb
faddl
mov
adc
sub
in
les
nop
cs
icebp
ret
pusha
sub
lods
data16
aad
cmc
add
mov
loop
jle
dec
loop
test
cmp
in
add
inc
jne
sub
cmp
jle
inc
jg,pn
sbb
lods
mov
mov
icebp
rorl
jae
pop
test
push
stc
jle
adc
cmpl
mov
out
sbb
jg
mov
test
ds
adc
sarl
cld
loopne
bound
sbb
adcb
push
repz
fbld
js
push
xchg
dec
sti
lahf
pop
arpl
adc
imul
sbb
ja
jecxz
adc
push
add
or
loope
rorl
or
mov
dec
nop
xor
sub
testl
std
mov
sub
xor
push
push
test
add
cwtl
push
shrl
cld
inc
cwtl
push
sub
das
inc
std
sub
mov
lea
jmp
pop
lods
sub
lahf
inc
sub
fdivs
and
sub
sbbb
fimull
dec
adc
cmp
sub
mov
add
icebp
lock
std
lahf
lods
imul
pop
inc
movb
in
lret
sbb
pop
mulb
xchg
movsl
neg
fstl
mov
iret
icebp
sbb
jo
and
mov
bound
add
test
inc
pop
push
test
fs
xchg
incb
adc
push
fidivrs
jecxz
inc
push
addr16
clc
jne
fnstenv
call
add
aam
adc
das
rolb
int
push
lahf
xchg
cmpsl
jecxz
ds
stos
aaa
or
ret
cli
iret
xor
jge
notl
daa
push
and
cmp
je
pop
stos
xor
cld
sub
insl
shlb
push
call
in
hlt
cmp
push
lret
pusha
jbe
add
pop
cmp
aaa
pop
pop
and
inc
xchg
loope
xchg
or
push
ret
ja
push
xor
das
mov
push
std
xchg
repz
leave
test
xlat
nop
mov
push
xchg
adc
clc
jg
xchg
inc
imul
stc
add
or
repz
out
out
gs
push
arpl
aad
pop
test
int
popf
fwait
pop
and
adc
sub
mov
rcrl
xchg
inc
push
jge
sbb
movsl
test
mov
or
imul
mov
pop
in
mov
nop
mov
sbb
sub
into
fwait
insl
aas
or
nop
mov
jecxz
lcall
into
inc
cltd
add
insl
in
mov
mov
mov
cmp
stos
ljmp
adc
mov
mov
or
xchg
inc
lods
ss
inc
fsubrp
sub
sti
scas
leave
sbb
rclb
pusha
les
mov
stc
int3
out
dec
dec
daa
les
imul
icebp
jb
test
or
pop
pop
inc
loop
cwtl
shl
cld
mov
ret
inc
pop
dec
inc
das
sub
movsl
and
sbb
lea
jmp
push
cwtl
sbb
jb
xchg
inc
xor
jns
aas
push
lret
jb
or
nop
cmpb
popf
inc
test
divl
pop
aad
dec
cmp
lods
and
xlat
mov
pop
enter
jns
imul
rcr
fists
cmp
jge
xchg
rcll
data16
xor
rcrb
sbb
cmp
aas
pop
mov
add
mov
sub
mov
xchg
mov
adc
push
rorl
aas
ss
lret
dec
fnstsw
loope
inc
fdivs
sbb
inc
inc
mov
xchg
fbld
popf
popf
sub
add
std
dec
stos
push
jmp
fnsave
adc
jecxz
cmp
add
out
inc
add
pop
push
sahf
sbb
xor
push
stos
cmp
adc
or
jnp
lock
pop
and
jbe
cmp
clc
xchg
popa
or
clc
mov
repz
sub
in
lods
pushf
cmpsl
inc
mov
mov
mov
pusha
cmp
mov
or
int
mov
scas
add
or
or
xchg
test
dec
jecxz
push
dec
sbb
addr16
scas
push
cmp
fcoml
imul
jns
test
push
popf
fadds
das
arpl
lret
dec
push
mov
push
add
pop
scas
push
adc
xchg
or
into
mov
lea
mov
xor
mov
fisubrl
and
popf
test
xchg
js
push
pop
dec
jl
leave
mov
dec
mov
dec
lock
adc
xor
icebp
cmpl
fwait
addr16
and
into
lret
ss
jmp
jg
lcall
test
imull
xchg
push
mov
pop
push
push
xor
add
add
jl
jae
insl
lret
pop
in
dec
pop
pop
lcall
pop
xchg
adc
enter
sbb
ja
sub
mov
rcl
xor
push
pop
push
sub
sahf
xchg
or
mov
xchg
mov
aaa
xchg
mov
and
or
sti
push
popf
jg
cmpsb
gs
outsl
mov
mov
xor
test
std
xor
adc
cmpsb
xacquire
adc
scas
add
sub
xchg
push
add
mov
and
sub
std
mov
dec
add
cltd
pop
mov
je
fdivl
leave
jge
out
inc
xor
outsl
jae
sbb
icebp
orb
in
call
jge
xchg
fcompl
sbbb
push
sbb
int
std
pop
shlb
lods
orl
xor
sub
imul
ja
push
hlt
shll
aas
popf
xchg
fwait
mov
aaa
sahf
sarl
outsb
ja
dec
es
inc
loopne
mov
rcll
or
xor
fiaddl
and
movsb
loop
jg
cmc
int3
insl
loopne
mov
xor
andl
insb
jg
xchg
movsb
and
in
inc
cwtl
fcmovbe
mov
js
inc
in
mov
iret
cmp
mov
loopne
fcomp
cmp
movsb
out
pop
cs
sub
adc
int3
cmp
jo
or
xor
mov
push
jmp
jne
popa
push
cmpsb
push
and
sbb
jnp
in
movsb
or
mov
add
ret
push
movsl
sub
imulb
mov
jg
mov
push
adc
mov
mov
adc
pop
add
mov
mov
lea
push
and
sbb
mov
stos
or
and
loop
cs
mov
jne
js
cmp
mov
jne
pop
push
rolb
xchg
in
adc
mov
sbb
push
fcompl
ljmp
jns
mov
stc
lea
test
push
repnz
cltd
data16
xchg
inc
xchg
scas
mov
loop
jecxz
jg
xchg
xor
out
pop
lds
adc
cmovo
adc
repnz
int
dec
cltd
push
out
insl
mov
lods
mov
aaa
dec
sub
ljmp
push
outsb
pop
dec
dec
add
repnz
inc
incl
pop
stos
xlat
xorb
pushl
call
subb
add
jl
aas
and
mov
inc
insb
jmp
push
mov
stos
jmp
jge
clc
sub
scas
pop
cmpsl
inc
lock
xlat
enterw
mov
test
rcl
ljmp
jmp
sub
sbb
daa
lock
jns
fs
fwait
xchg
push
mov
shlb
jge
mov
iret
pop
push
mov
mov
or
jmp
inc
add
or
aas
mov
es
jmp
push
xor
push
and
stos
cmp
xor
jnp
adc
inc
repz
test
pushf
jmp
insl
stc
loopne
sub
aam
xchg
mov
out
aas
sbb
mov
shl
cmp
out
sahf
mov
scas
adc
sub
ud2
mov
mov
jno
add
mov
mov
and
jmp
or
and
mov
push
inc
xchg
gs
mov
dec
fcomps
pushf
sub
jo
lock
test
pop
inc
aaa
add
aas
jp
push
aas
orl
js
jno
ret
jg
mov
sub
in
arpl
mov
sbb
out
jmp
jmp
out
cli
lret
aam
sbb
xor
add
push
rorb
mov
iret
js
scas
sub
xchg
lcall
inc
movsb
mov
lods
xchg
lahf
repnz
fimull
fwait
dec
fldenv
mov
inc
cmp
popa
fistpl
push
lret
pop
ret
dec
push
dec
xchg
sbb
xchg
sbb
loop
fwait
shlb
mov
mov
jae
xchg
fwait
sbb
inc
in
push
popa
mov
lods
jb
insb
in
leave
dec
push
dec
pusha
call
jmp
movsl
xor
dec
daa
adc
inc
mov
mov
into
push
test
jne
pop
aad
jmp
jmp
jle
jns
pop
pop
xor
cmpsb
mov
into
lcall
xor
int
sub
cmp
mov
jp
pop
aad
pop
pop
push
add
jae
outsl
fistps
mov
out
jl,pt
jb
lea
cmpb
icebp
cmp
mov
fcompl
movsl
lcall
sub
jge
test
aad
adc
pop
jns
adc
push
inc
mov
subl
clc
sbb
jle
jg
xchg
fadd
insb
adc
bound
sbb
mov
sub
roll
mov
scas
cltd
xor
sqrtps
pushf
or
push
push
nop
rcrb
bound
popf
lock
cli
dec
add
popf
call
imul
mov
pop
imul
or
sbb
fldlg2
cltd
dec
testl
shlb
lret
mov
scas
cmpb
div
mov
jge
int
inc
mov
jbe
sbb
fs
and
xchg
repnz
aaa
or
push
sbb
popf
roll
es
leave
test
sub
inc
or
les
jmp
ret
test
int
dec
push
add
sub
scas
dec
scas
rorb
adc
jge
orl
in
sub
adc
sbb
cld
into
sbb
pop
data16
mov
pop
xchg
pop
fdivs
sti
gs
test
int3
sub
rcrb
mov
xchg
jmp
mov
movsb
imul
pop
mov
push
stos
sti
xchg
cmpxchg
fcomp
add
push
and
pop
sub
and
add
loopne
popa
fsubp
sub
or
stos
lret
cmc
xchg
les
jns
push
loopne
cmp
lcall
lahf
ret
adc
mov
push
loopne
xor
outsb
lfs
aad
push
sbb
mov
adc
xorl
mov
test
insb
xor
adc
add
jle
mov
cmpsl
inc
dec
add
idivl
lcall
std
into
or
jbe
imul
repnz
xor
imul
popf
insl
mov
inc
gs
imul
dec
pop
dec
cwtl
pop
mov
xchg
loope
xor
lea
push
add
aas
sub
aaa
mov
dec
ja
in
aad
push
xor
inc
mov
xchg
jae
sarl
mov
mov
and
dec
popf
jns
shlb
inc
mov
pop
stc
push
inc
adc
sbb
xor
cmpsb
and
in
and
inc
shl
sub
adc
insl
add
push
sub
mov
pop
enter
iret
mov
mov
popf
xor
clc
sub
mov
xchg
mov
cld
bound
pop
ret
pop
pop
or
add
xor
aaa
jb
stos
jb
jb
mov
pop
push
xor
mov
es
add
outsl
notb
adc
adc
adc
ja
adc
mov
add
jo
sub
sbb
and
sarb
sub
sti
out
std
xlat
cld
cmp
jae
dec
xor
lds
sub
loop
inc
mov
sbb
jp
dec
xchg
sub
roll
mov
mov
fidivl
and
cmc
nop
push
mov
add
cs
xchg
pop
pushf
push
out
roll
in
test
in
sti
mov
test
mov
mov
dec
jl
ret
daa
sbb
mov
shrl
xchg
dec
andl
sbb
sbb
pushf
dec
shlb
sub
aaa
fdivrs
aaa
inc
xchg
mov
orb
clc
lret
xchg
fs
leave
dec
testl
cmc
lahf
jp
sbb
sub
pop
sahf
add
mov
adc
mov
loopne
jg
mov
sub
lods
adc
sub
lahf
xchg
sub
add
std
insb
in
shrb
inc
int3
nop
pop
mov
stc
js
jnp
jo
dec
je
cmp
push
leave
mov
fwait
mov
or
leave
xchg
movsb
push
sub
rcrb
hlt
mul
icebp
add
inc
es
cmp
sbb
add
jecxz
or
and
mov
scas
push
pop
jge
fcom
aad
mov
lahf
pop
fsubs
mov
fisttpl
repnz
stos
dec
mov
mov
mov
and
out
mov
jle
sub
rclb
push
out
lock
pop
lods
jbe
mov
aas
aaa
mov
orb
sbb
outsl
out
lods
fmull
out
inc
test
scas
clc
adc
test
cmp
pop
push
xchg
in
jno
fmuls
addb
push
roll
inc
add
and
lret
or
push
pop
testl
fdivp
add
movsb
je
fwait
fs
out
ret
dec
nop
repz
shrb
cmp
fsubs
out
mov
ficoml
or
das
imul
rcrl
or
sarl
loope
clc
clc
mov
xchg
mov
push
add
aam
and
pop
rorl
iret
shrl
or
out
fnstsw
call
fstpt
je
lret
or
jg
adc
push
mov
cli
adc
pop
lods
push
outsb
gs
clc
lcall
mov
sti
gs
js
xchg
add
lea
inc
clc
mov
test
jnp
call
lods
js
pop
pop
xchg
add
aad
arpl
dec
push
pop
dec
mov
xor
lods
dec
mov
inc
jo
fcomi
in
test
or
cld
cmp
cld
insb
sti
adc
popf
out
ss
mov
adc
js
out
fisttps
movsb
dec
pop
fists
lods
lret
inc
dec
inc
ficoms
pcmpgtw
xlat
mov
xorl
inc
fisttps
or
push
pop
and
add
jno
fistps
pop
xchg
or
sub
mov
lret
push
sub
mov
jl
test
int3
fistl
test
loope
inc
fwait
mov
jae
xorl
fimuls
jae
mov
int3
popa
ds
orl
outsl
repz
xchg
loopne
add
and
mov
test
daa
cmp
cmp
mov
imul
enter
push
and
jp
out
cli
pop
jno
inc
fmul
and
sub
xchg
jecxz
cmp
cmp
scas
mov
xor
loope
and
push
and
mov
adc
xchg
roll
in
dec
js
insb
and
inc
xchg
fdivr
mov
mov
push
inc
mov
inc
mov
pop
mov
inc
mov
test
jbe
ffree
or
or
or
sahf
inc
in
divb
xchg
sub
mov
mov
push
nop
pusha
cmp
aaa
repz
in
and
inc
sbb
leave
sub
enter
test
ret
dec
xchg
ds
push
stos
es
sub
loope
mov
sub
cmp
add
sub
sbb
mov
fildll
loope
push
dec
jecxz
add
lret
lret
jbe
popf
les
add
or
lret
xor
out
or
sub
pushf
repnz
lcall
orb
leave
add
xlat
nop
and
push
or
push
jnp
iret
pop
pop
sub
mov
ret
lret
subb
leave
add
jbe
inc
inc
sbb
mov
ds
jbe
mov
arpl
mov
imul
mov
ret
je
mov
push
push
aad
ss
mull
sbb
jno
repz
sbb
add
dec
xchg
out
xchg
or
cmp
sub
dec
mov
jno
pop
inc
dec
or
adc
sbb
fs
inc
jge
fs
mov
xchg
or
in
and
xchg
mov
out
roll
xor
cwtl
push
jmp
jecxz
pushf
scas
xchg
movsb
push
in
leave
fld1
pop
and
leave
jp
js
test
or
adc
stc
mov
mov
fmuls
std
push
sub
mov
ret
sarl
jp
xchg
xor
add
int3
mov
xchg
dec
add
push
pop
pushf
lds
hlt
push
cmp
ja
aad
movsb
sarl
imul
mov
lds
bound
mov
lock
scas
cli
fwait
inc
and
xlat
fildll
adc
movsb
scas
divl
out
jne
enter
cmpsl
cs
inc
push
into
inc
ret
fildl
pop
in
pop
clc
jmp
cld
imul
popf
and
dec
lret
test
outsb
ret
or
aas
inc
mov
sbb
bound
sub
mov
xchg
lock
sbb
loopne
dec
mov
sbbl
inc
pop
out
cld
stos
out
in
divb
vphaddubw
push
dec
mov
insb
xor
out
xchg
dec
flds
sbbl
insb
add
push
cwtl
scas
jle
jb
cs
or
insb
repz
xchg
cmp
fwait
ret
xchg
add
repz
iret
outsl
mov
mov
call
popw
cmpsl
stos
mov
xlat
mov
mov
into
sarl
je
call
ret
ljmp
loop
ret
sub
mov
ret
push
fwait
dec
mov
mov
xchg
outsb
int3
insb
addb
gs
lret
fistps
js
lods
or
mov
imul
mov
mov
adc
mov
dec
pop
adc
mov
xor
inc
lods
popl
gs
std
icebp
vmovaps
jmp
push
out
imul
xchg
into
push
pop
bound
adc
mov
stos
xchg
mov
outsb
mov
inc
aaa
push
jb
push
out
cmpsb
test
mov
adc
dec
jne
sbb
fnsave
into
in
test
imul
sti
mov
int
inc
outsb
fbstp
add
lea
push
lret
add
add
and
pop
addr16
push
insb
mov
fbld
test
outsl
sarb
cmp
and
loop
push
add
test
and
push
jmp
push
call
xor
mov
sbb
rcrl
das
sbb
push
adc
xlat
adc
addb
sub
lea
xchg
jb
pop
ficoml
dec
or
cmpsl
jle
fmul
and
pop
inc
sbb
fsubl
hlt
adc
adc
int
roll
add
ret
dec
xor
jle
rcr
test
sbb
lods
push
pop
fs
repnz
incl
daa
push
jne
mov
and
lcall
rolb
fisttpl
stos
addr16
cmp
mov
and
xor
shlb
cmp
or
jg
sub
push
or
pop
inc
dec
xor
mov
lods
lret
arpl
add
rcll
and
hlt
scas
mov
addr16
inc
mov
ss
in
sub
push
push
xchg
and
mov
fsts
jnp
jl
mov
mov
pop
mov
sub
lock
je
push
push
icebp
test
cmpsl
adc
jmp
push
mov
fs
imul
jbe
sub
and
cmc
inc
pop
xor
pushf
dec
les
xchg
hlt
mov
addr16
mov
shr
adc
push
push
movsl
pop
mov
mov
pop
cmp
div
push
cmp
dec
lds
mov
push
mov
push
jp
inc
push
inc
push
pop
dec
test
test
jecxz
jl
cmc
hlt
jecxz
arpl
add
mov
add
mov
sbb
ret
rcrl
or
adc
cmp
mov
sti
in
test
push
mov
pop
inc
or
adc
jo
pusha
xchg
in
pop
mov
pop
mov
pop
xor
fildl
sbbl
pop
aaa
nop
push
ljmp
pusha
fmul
adc
cmpsb
fcmovb
in
fidivl
add
pop
xchg
fimuls
into
cli
pop
in
loop
aaa
aad
jmp
jb
mov
fwait
test
xchg
or
fwait
dec
cmp
mov
cwtl
ficoml
push
fldenv
mov
mov
lret
sahf
and
push
iret
aaa
push
sub
fmulp
movsb
test
insl
and
test
cmpsb
xchg
fimuls
mov
fstps
dec
pop
rorl
iret
xchg
inc
mov
dec
fcomps
mov
idiv
adc
add
or
pop
inc
push
rol
jns
leave
and
cmpsl
neg
insb
jbe
pop
stos
cmp
inc
jo
call
mov
push
jge
mov
jbe
in
pop
mov
sarb
dec
sbb
xor
mov
pushf
clc
cltd
in
xor
push
and
sub
mov
pop
nop
cmp
inc
stos
in
and
call
push
in
xchg
in
add
xor
xchg
repnz
jne
inc
loopne
into
into
mov
mov
add
stc
push
mov
mov
cmp
rcrl
stc
hlt
push
lahf
out
sub
out
bound
jo
hlt
add
mov
xchg
lock
sahf
push
cmp
lock
lret
rorl
int3
and
mov
mov
mov
rorb
dec
sahf
add
jae
daa
push
xor
mov
adc
push
mov
sub
in
out
pop
ds
outsb
mov
fwait
arpl
or
out
js
lret
adc
sub
fadds
push
dec
lcall
movsl
pop
imul
add
push
sbb
jb
fcomi
sti
jp
add
push
cmp
stc
fwait
je
lea
lods
pusha
outsb
int
daa
rcrb
xchg
mov
add
xchg
mov
es
sub
xor
xchg
cmp
cmc
sbb
pusha
and
in
sub
iret
pop
push
xchg
or
mov
stc
dec
and
pop
mov
cmc
fdivs
push
fs
in
push
push
cmc
pusha
jns
pushf
add
imull
pop
add
sbb
imul
sub
mov
into
inc
mov
mov
loope
notl
sbb
cmpsl
in
jmp
mov
or
cmpsl
popf
sbb
adc
fstpt
fisubs
inc
mov
pop
scas
inc
push
ret
test
xor
aas
lea
push
fwait
outsb
xchg
push
mov
mov
mov
aam
adc
mov
jae
in
cmp
movl
jne
cld
xor
js
xchg
ret
xor
sub
and
lcall
jge
fnstsw
and
imul
cmp
inc
aas
xchg
mov
stc
and
pop
iret
stos
mov
jp
inc
rcrb
mov
int
sbb
push
xchg
mov
inc
in
jmp
mov
pop
jl
ljmp
push
lds
out
inc
mov
cli
popf
add
sti
and
inc
leave
cmp
cmc
out
lock
sub
add
xor
xor
pop
sbb
pop
jle
adcb
dec
cmp
stc
sbb
sti
or
dec
mov
iret
dec
stos
mov
sub
or
ss
jecxz
xor
aas
jmp
repz
dec
sbb
add
jno
adc
xlat
data16
js
or
js
mov
pop
arpl
mov
sbb
adc
mov
fisubs
aad
addr16
fwait
hlt
xchg
adc
push
ja
inc
popa
movsl
btc
sarb
mov
pop
hlt
mov
xor
add
pop
cmp
ret
xchg
or
xchg
cli
jge
das
dec
imul
ljmp
xor
std
mov
inc
shlb
mov
repnz
popa
mov
out
jg
lret
lods
dec
pop
loopne
nop
ss
lcall
in
aaa
mov
dec
test
hlt
inc
fwait
xchg
sbb
add
sahf
sbb
mov
push
jns
add
pop
rolb
xchg
sbb
xor
xchg
ljmp
pushf
lcall
xchg
cli
mov
or
clc
mov
xor
mov
loope
out
mov
fildll
nop
es
push
fwait
stc
pusha
dec
inc
mov
xchg
xorl
shl
stos
stc
pop
sub
mov
jmp
sbb
test
push
xor
lods
add
cli
xchg
sbb
test
jg
xchg
dec
sbb
and
pop
inc
push
sbb
or
sub
imul
fwait
mov
in
mov
ret
sub
idivl
ret
push
aas
dec
mov
add
nop
arpl
inc
jge
jno
repz
mov
outsb
test
jno
or
adc
add
dec
mov
push
mov
shr
xchg
test
adc
scas
dec
inc
jp
xchg
negb
dec
lcall
lds
fildll
or
repz
enter
mov
xor
arpl
pop
inc
ret
rcrl
jnp
popf
inc
call
fists
push
xchg
sbb
popf
in
inc
stc
sbb
push
das
rcr
dec
sahf
cwtl
mov
xchg
jnp
mov
mov
jbe
cmc
sub
jno
inc
jmp
add
movsl
sbb
mov
stc
movsb
mov
inc
orl
jecxz
les
mov
je
fimuls
adc
adc
mov
jmp
cmpsl
cmp
push
push
cmp
push
stc
aas
inc
loopne
shrl
mov
fnstsw
sti
mov
out
addb
in
insl
mov
fisubs
es
push
pop
jnp
push
push
sub
xchg
push
dec
bound
dec
aaa
cmpsb
mov
cmp
lea
pop
mov
push
mov
lahf
jge
sbb
xchg
mov
sbb
aad
mov
pop
aad
lret
shl
out
or
push
outsb
sub
js
ss
pop
repz
inc
xchg
mov
in
and
inc
push
lahf
test
or
int
lret
pop
sbb
xchg
aam
pop
movsb
add
mov
push
push
cs
pop
adc
out
out
call
gs
subb
sub
add
lret
sub
leave
cli
sbb
ja
adc
ljmp
xchg
stc
mov
mov
movsl
or
ror
ja
dec
xchg
xchg
in
sarb
mov
je
push
dec
je
jne
inc
and
out
push
movsb
in
or
js
cmp
scas
push
add
repz
pop
shlb
in
sbb
xchg
inc
lcall
mov
push
ds
mov
adc
pop
les
test
loopne
inc
ret
jmp
jg
into
jl
xor
sbb
push
out
test
sbb
lock
xchg
adc
je
adc
lcall
push
mov
in
rclb
mov
mov
add
ljmp
lods
testl
dec
leave
jne
sub
inc
xchg
jg
lock
mov
jb
out
std
push
outsl
jb
mov
lock
popaw
loope
out
adc
clc
cmpsl
aad
push
sub
nop
inc
mov
push
test
bound
int3
jle
push
jo
lods
dec
cmp
lret
inc
cmpsl
mov
shrl
xchg
negb
lea
sbb
xchg
inc
or
repnz
sbb
pop
addr16
jg
and
sbb
add
cwtl
test
adc
pop
add
mov
sbb
mov
push
inc
cmpl
mov
lret
popf
sar
out
cmp
pop
mov
sub
cmp
xchg
and
int3
cmpsl
fistl
sub
notl
xor
sub
and
pop
je
cmp
mov
add
or
cltd
xchg
inc
sti
jns
jbe
mov
xor
dec
jb
xor
stos
push
lods
inc
aad
dec
sahf
xchg
out
and
pop
xorb
sahf
and
in
sarb
or
jmp
xchg
fmuls
push
icebp
lds
pop
repz
dec
pop
lahf
outsl
iret
cld
std
jne
xchg
dec
jae
mov
out
es
shll
mov
fisttpll
jecxz
imul
test
add
nop
jle
xchg
and
push
movsl
in
xchg
into
dec
inc
xor
or
cmp
dec
iret
rorl
add
sbb
lds
mov
lret
adc
jl
popa
dec
mov
add
lock
and
cs
xor
pop
inc
fstps
ret
dec
insl
ja
dec
aam
jge
dec
std
mov
adc
add
pusha
ljmp
mov
sub
adc
dec
inc
and
sub
xor
loope
cmp
inc
sbb
dec
ret
mov
pop
sub
push
lea
movsb
aad
sbb
cli
sub
mov
dec
jnp
pop
dec
vprotw
dec
rorl
push
xor
mov
xchg
rorl
fmuls
in
inc
add
icebp
fadd
jp
outsb
sub
mov
lods
hlt
in
jbe
sub
mov
sbb
aad
popa
dec
sub
inc
push
jp
nop
sbb
xor
xchg
pop
jnp
jns
mov
shll
je
cmp
push
out
pop
and
data16
shrb
aad
int
jmp
stc
iret
shl
mov
xor
in
cld
lret
fldenv
mov
adc
in
insl
jge
push
insb
dec
add
ret
push
pop
bound
adc
popa
daa
pop
jns
sbb
and
xchg
pop
mov
data16
rorb
fs
mov
push
test
inc
push
imul
xor
ljmp
std
mov
outsl
adc
mov
call
outsb
fldenv
push
cmc
lods
xchg
adc
cmpsl
mov
mov
mov
out
call
inc
push
sahf
fimull
flds
inc
and
je
push
cltd
jbe
sub
je
pushf
push
add
sub
and
mov
lret
mov
inc
mov
adc
aad
mov
out
mov
insl
dec
inc
cmpsl
or
mov
fcmovnb
imul
nop
jg
dec
popa
out
jp
lret
int
enter
sbb
mov
ret
popl
inc
pop
xor
imul
cli
push
xchg
in
dec
aad
sub
ret
xorl
mov
and
incl
insb
cltd
pop
push
mov
inc
out
in
push
cmc
shlb
fsubl
sub
mov
je
dec
jb
and
loopne
faddl
or
shll
addl
movsb
lods
mov
mov
sahf
in
xor
inc
jno
test
push
call
mov
and
out
xor
inc
mov
and
pop
cld
pushf
adcl
cld
cmp
dec
inc
pop
sbbl
test
fsubrl
add
cltd
pop
xchg
sbb
sbb
push
mov
inc
jb
ja
ja
rclb
enter
xor
inc
mov
fadds
loope
in
sub
movb
sbb
cmp
xchg
movb
inc
lods
add
or
pop
xor
rolb
mov
inc
and
pandn
shrl
in
les
filds
test
sub
mov
data16
jne
cmp
nop
sub
push
add
and
cltd
lret
inc
out
sarl
dec
lret
js
mov
and
pop
int3
xchg
test
test
int
push
ss
test
fdivl
inc
aam
call
in
push
inc
or
ret
je
sub
add
clts
rcll
imul
lods
int3
inc
lahf
pop
popf
or
and
mov
sub
push
stos
push
outsl
dec
in
cmp
inc
imul
xlat
fmull
cltd
sbb
add
mov
cli
add
or
test
xor
stos
jecxz
sub
push
dec
xorl
ljmp
mov
mov
cltd
sbb
push
ret
lcall
xchg
fucom
imul
jnp
stos
and
scas
fiaddl
dec
and
pop
xchg
aaa
iret
int3
ja
pop
sbb
imul
nop
enter
xor
xor
lds
jae
imul
lods
movsl
cld
xor
mov
fdivl
repz
outsb
cmp
mov
mov
and
cmp
roll
dec
mov
xor
pop
and
push
mov
lea
pop
fwait
data16
pop
das
add
lods
push
cmp
xor
js
bound
or
fdivrs
movsb
jp
popf
and
push
cwtl
test
mov
lret
mov
xlat
test
loopne
xchg
ret
movsl
sbb
popf
or
stos
lret
xlat
ret
lret
cmpsb
pop
jp
push
loop
push
mov
pcmpeqd
xchg
imul
add
int
pop
mov
repnz
fwait
jnp
jo
xor
mov
pop
add
iret
icebp
stc
shlb
rol
sub
lret
cmp
out
sub
or
scas
nop
xchg
mov
loop
inc
mov
lock
addl
inc
cwtl
push
pop
cmp
fistl
decl
pop
out
mov
popf
add
enter
push
inc
lds
fidivrl
mov
adc
dec
push
enter
out
mov
rcll
mov
loop
or
ljmp
push
jns
mov
rorb
xchg
and
gs
in
jmp
pop
pusha
inc
lods
out
cmp
xchg
pop
rep
or
imul
pop
sbb
dec
jg
fldl
dec
pop
mov
adc
dec
sub
movsb
inc
jg
sub
xor
inc
mov
inc
stos
aam
mov
push
scas
mov
enter
mov
call
gs
sub
loopne
xchg
loop
push
mov
adc
ficompl
jne
lods
outsl
imul
movsl
xchg
adc
jnp
add
icebp
xchg
movsb
and
shlw
pop
das
pop
pusha
iret
mov
test
stos
call
inc
fstl
pop
sub
test
adc
cli
mov
lahf
sahf
pushf
les
cltd
fwait
add
cmp
jle
jnp
sti
data16
pop
dec
scas
sarb
cmp
test
adc
stos
jo
imul
add
cs
pop
arpl
push
push
test
mov
or
leave
mov
in
add
cld
or
pop
fsubr
cwtl
and
sub
push
or
jecxz
cmpl
push
or
scas
jg
pop
popa
jmp
imul
outsl
stc
xlat
scas
push
sahf
into
cmp
xor
pop
or
xorb
dec
gs
in
sti
xchg
adc
mov
stc
popf
ret
pop
aaa
xchg
test
and
or
adc
push
and
mov
dec
out
or
or
rcrl
scas
jmp
adc
and
mov
cmp
fbstp
mov
push
cli
xor
dec
lret
adcl
pop
and
and
loope
inc
jg
fisubrl
or
insb
or
cwtl
stos
push
jl
sbb
mov
jne
test
pushfw
cmp
and
mov
sbb
or
cmp
mov
enter
js
test
pop
int3
push
mov
and
mov
imul
sarb
or
icebp
xchg
mov
jo
push
aaa
or
cmp
pop
daa
inc
inc
leave
mov
cmp
jb
adc
xor
cmp
adc
aam
xor
pop
cmpb
rcl
dec
lock
lahf
or
push
dec
or
mov
add
hlt
popl
mov
add
hlt
jne
pop
or
jecxz
enter
mov
push
aas
mov
daa
std
xchg
ret
das
and
inc
jecxz
pusha
lea
sub
mov
lret
xor
and
push
xor
daa
jle
cmp
pop
js
add
cmpsl
rol
pushf
jl
fcomps
mov
mov
outsl
adc
push
adc
stc
movsl
sbb
xchg
clc
testb
test
mov
popf
movsl
sbb
push
shrl
sarl
inc
addb
in
loop
xchg
call
and
jl
mov
push
mov
imul
pusha
lods
pop
aaa
or
xor
or
mov
add
sub
gs
sub
lock
int
push
mov
or
arpl
into
xchg
mov
call
data16
mov
adc
dec
jmp
in
cmpsl
or
or
pop
or
add
arpl
jp
out
adc
pushf
pop
dec
testl
jns
stos
je
xchg
or
jp
sbb
dec
jmp
int
mov
push
out
cmp
push
dec
cltd
xchg
ja
or
arpl
sbb
lock
outsl
sti
inc
lahf
aas
fnstsw
adc
jns
out
jmp
daa
stos
dec
xchg
lahf
loopne
mov
sbb
and
js
out
pop
ja
icebp
add
adc
pushf
adc
out
aad
ficompl
push
out
mov
pop
fwait
in
add
out
or
and
ja
push
rorb
add
daa
pop
push
subb
scas
xor
imul
and
inc
mov
mov
xchg
fmul
movsl
mov
lea
pand
push
xlat
std
inc
inc
add
loop
out
js
loopne
sbb
sub
fisubl
out
sub
lcall
popf
lods
into
loope
jge
inc
inc
mov
sub
or
pop
dec
jge
in
arpl
sbb
ljmp
adc
cmpsb
add
or
hlt
lret
cmc
mov
sub
scas
pushf
add
in
push
ficoms
mov
pop
insb
movb
lahf
pop
aam
ljmp
repz
mov
cltd
jle
and
fists
inc
mov
mov
aad
jmp
mov
mov
inc
mov
jne
cwtl
push
jmp
pop
pusha
loope
cmp
aam
pop
out
negl
icebp
ds
cmc
insl
loopne
lcall
clc
and
xchg
adc
push
dec
adc
xor
and
je
pop
mov
mov
xchg
lret
add
mov
jnp
lock
mov
jbe
xor
sbb
cwtl
sbb
ret
rcll
mov
xor
or
push
push
push
inc
mov
iret
movsb
outsl
xchg
inc
fisttpl
lock
scas
imull
dec
inc
or
push
mov
out
out
push
imul
cs
test
adc
in
sub
data16
movsl
dec
pop
jne
add
cmp
adc
nop
add
jnp
shl
cmc
add
mov
stc
add
or
lea
jle
mov
decl
hlt
cmpsb
mov
cmc
ss
and
lea
add
mov
lret
fisubrs
inc
or
sbb
and
repnz
mov
test
rcll
add
or
pop
pusha
rcl
dec
sbb
imul
stc
push
jecxz
outsb
fs
mov
add
xor
push
jmp
push
push
pop
or
jp
pop
mov
mov
popa
inc
aaa
xchg
loop
adc
inc
lret
pop
out
iret
outsl
mov
and
rcrl
adc
add
and
jl
mov
jnp
das
mov
cmp
mov
sbb
test
mov
pop
sbb
loop
xlat
jmp
xor
clc
xor
xchg
rcl
adc
cld
lods
sarl
adcb
xorb
sub
fwait
xchg
xchg
cli
mov
js
inc
xchg
push
pop
cmp
adc
push
add
jge
jmp
cmovp
hlt
sub
xchg
xor
dec
ja
push
xchg
sahf
repz
jmp
dec
cmp
fistps
shl
cmp
lret
out
ja
adc
mov
shlb
push
sbb
addr16
mov
jmp
pop
xchg
and
pop
push
mul
loop
xchg
mov
nop
dec
xchg
inc
jp
dec
and
push
ficoms
sbb
popa
movsl
xchg
mov
rclb
xchg
jbe
cmp
mov
push
lret
lods
popf
loope
jb
orb
xor
mov
dec
adc
mov
adc
fldl
or
rcr
xchg
jecxz
pop
mov
test
dec
mov
ret
loope
mov
flds
fadds
mov
mov
imul
xchg
outsb
jp
fcomps
test
push
test
or
xchg
sti
mov
sbb
das
lds
jo
jne
pop
mov
lret
lds
inc
push
pop
push
pop
sbb
mov
cmpl
cli
aas
mov
inc
xchg
cmovl
inc
jmp
mov
mov
leave
push
stc
bound
das
popa
mov
fiaddl
push
dec
adc
add
mov
mov
adc
rorl
stc
loopne
call
nop
push
push
addr16
nop
outsb
jb
xor
cmp
and
mov
push
pop
jae
sbbb
or
dec
lock
mov
cmpsl
dec
jnp
out
call
dec
test
lret
cmpsl
jnp
fnsave
jp
jae
fisubs
sub
inc
mov
cmpsl
ja
movl
cwtl
xchg
out
popa
outsl
mov
push
xor
in
ja
pop
outsb
jl
jbe
add
mov
and
xchg
mov
add
mov
mov
iret
std
dec
cmp
mov
je
pop
repnz
sbb
xchg
icebp
adc
ljmp
sahf
addl
popf
jnp
movsl
mov
stc
mov
add
mov
push
mov
sub
loope
dec
mov
divb
push
jbe
mov
inc
mov
mov
push
loop
and
data16
rorb
mov
adc
test
sbb
shrb
dec
jg
ljmp
nop
ds
jno
sub
adc
mov
out
iret
sub
in
roll
cltd
pop
mov
cmp
sub
outsb
mul
sub
iret
iret
jno
addr16
int
insb
xor
sub
repz
mov
pop
scas
push
sbb
addr16
jae
and
ret
outsl
test
jle
pusha
xchg
mov
movsl
imul
cmp
sti
push
cmp
xchg
adc
repz
sub
adc
pop
loope
fucomp
sbb
adc
pop
test
jnp
imul
sbb
in
mov
push
dec
xchg
cmp
rclb
jo
aaa
mov
clc
insl
pop
test
and
repz
fwait
lock
das
mov
jmp
or
inc
adc
bound
jno
ret
mov
jns
mov
mov
or
mov
jae
aad
xor
fstl
stc
pusha
bound
sbb
pop
add
dec
fucom
jmp
inc
mov
adc
mov
jns
jnp
notl
add
add
pop
dec
or
in
popl
data16
in
jno
into
lods
test
cld
or
stc
inc
mov
push
jge
lret
das
mov
mov
ss
movsb
push
cld
xor
aas
stos
popa
cmpsl
shll
stos
sbb
sub
fisubl
mov
xchg
testb
and
ljmp
popf
xchg
shlb
call
pop
jl
aad
mov
xchg
dec
aad
lea
repz
out
fldenv
dec
fldcw
pop
xor
xchg
loopne
loope
xchg
in
push
cmc
nop
cs
and
ret
mov
adc
dec
and
dec
sub
add
add
add
insb
or
sbb
adc
js
add
nop
pop
js
addr16
adcb
or
adc
and
add
cmp
pop
cld
sub
popa
push
imul
daa
inc
pop
cmp
cmp
inc
mov
adc
sbb
dec
mov
jecxz
or
movsb
pop
clc
push
pushf
psubusw
xor
cli
lahf
jmp
jle
adc
dec
iret
sub
cmpsl
scas
faddl
gs
or
inc
xchg
out
sti
jbe
pop
cmpsb
lds
lret
test
enter
xchg
pop
dec
mov
fmuls
or
mov
cmp
pop
jae
lods
sbb
stc
rol
es
sbb
aad
js
and
sub
lods
lret
or
lods
ret
je
sbb
hlt
movb
or
imul
subl
pop
sub
sbb
pop
rorl
stos
repz
scas
jecxz
mov
jge
sbb
pop
cld
mov
and
jbe
inc
in
xlat
adc
jne
dec
push
and
or
sub
aad
loopne
lahf
faddl
enter
in
and
fldl
dec
sarl
ret
pusha
jmp
sbb
mov
cli
add
into
xchg
push
int
pop
es
jo
or
pop
push
inc
inc
out
jbe
jp
das
pushaw
out
frstor
add
popa
js
mov
test
pop
in
cmp
and
add
xor
push
xchg
mov
xchg
aas
jle
fs
adc
fwait
out
call
inc
pop
xchg
fcoms
xchg
push
add
pop
aad
repnz
jae
or
idivb
in
imul
pop
cwtl
insl
mov
dec
xchg
xor
cmpsb
add
arpl
xchg
mov
push
jne
xchg
mov
ffreep
inc
data16
and
pop
sub
xor
int
leave
cltd
cltd
f2xm1
int3
ficompl
fdivr
pop
scas
or
fcomps
mov
mov
dec
stos
xor
stos
push
lds
adc
fstpt
add
mov
lods
jecxz
data16
int3
jmp
sahf
shrb
lock
cmpl
mov
xchg
cmp
in
rorb
sbb
inc
outsl
cli
loopne
sbbb
mov
test
and
dec
inc
push
lods
enter
js
test
in
out
stos
cwtl
out
fsubrs
or
or
out
out
gs
sahf
push
outsl
jnp
inc
xchg
lock
ja
aaa
push
cmp
push
cmp
jb
xchg
mov
ss
scas
jmp
ljmp
cmp
testl
sub
jg
das
lods
lret
add
push
je
xor
sub
cld
int3
out
dec
pop
mov
jge
insb
movsb
pop
mov
mov
ljmp
leave
cwtl
sbb
or
int3
xlat
divb
dec
sahf
xor
xchg
fadds
daa
pop
add
cmp
cmpsl
mov
je
in
adc
loope
lods
pop
aam
adc
outsl
incl
nop
inc
scas
adc
outsl
dec
bnd
push
cmp
les
sbbl
mov
lock
mov
lcall
jge
xchg
lahf
pop
pop
imul
out
outsb
adc
cmp
icebp
jl
xor
mov
sub
mov
arpl
push
and
xchg
std
xor
aad
mov
xor
mov
push
xor
push
pop
sub
xchg
pop
pop
les
int
mov
popa
xchg
aam
jmp
jle
xchg
loop
das
pop
sti
jae
jg
cmp
flds
scas
clc
test
cmp
cltd
int3
sbb
or
jge
aad
xchg
das
addr16
xor
mov
jae
nop
jmp
std
cmp
push
out
aas
lea
mov
dec
inc
fbstp
jae
xchg
addr16
out
insl
inc
pop
jo
adc
sbb
sbbl
inc
xchg
insb
lahf
push
in
jbe
xor
fs
mov
and
and
fdivs
mov
mov
fincstp
cmp
in
out
lods
inc
mov
stc
lock
roll
sub
jmp
mov
lret
mov
dec
adc
loop
push
out
pusha
sbb
in
and
adc
and
shrb
dec
mov
fistps
outsb
sub
push
iret
ret
in
lods
in
fs
sbb
mov
jl
mov
dec
stc
xor
adc
push
pushl
mov
or
incl
out
cmp
mov
and
cmp
stos
cmp
mov
sub
aas
cmp
fistpll
out
mov
int
aam
fwait
push
nop
xor
xchg
rcr
rep
sarb
popf
fcmovne
add
test
loop
lods
add
mov
push
and
sub
sbb
out
cs
xchg
dec
ljmp
xchg
cwtl
rcr
mov
inc
add
fmuls
hlt
cmp
jae,pt
in
inc
or
out
mov
movsl
inc
or
test
inc
ret
xchg
push
cmp
enter
in
add
cmp
jo
jecxz
fisubrs
jb
inc
pop
xor
clc
sti
mov
daa
mov
push
fists
addl
mov
push
je
cld
or
or
adc
ds
int
xchg
sub
lret
xchg
testb
and
push
mov
and
mov
mov
xchg
in
repz
and
lods
sbb
mov
push
roll
imul
lods
popf
mov
push
rsqrtps
lahf
add
lock
cmpsl
add
fstpl
lods
mov
out
cs
wbinvd
xchg
dec
dec
out
xchg
les
sbb
popf
or
repnz
jae
mov
stc
sti
leave
and
ljmp
ja
or
cli
cmp
ret
and
or
adc
fwait
pop
xor
jb
inc
add
adc
mov
pushf
pop
fimuls
rorb
sbb
hlt
xchg
in
dec
inc
pop
adc
or
sahf
adc
movsl
dec
xchg
push
xchg
and
stc
gs
jo
mov
loope
sbb
jmp
push
das
lds
cli
mov
dec
fsubrp
adc
pop
je
inc
adc
cli
mov
and
cmp
sub
outsl
stos
stc
jge
into
mov
jl
test
imul
js
in
out
sbb
push
fistpl
lods
pop
jge
pop
popf
pop
push
jmp
pop
es
jle
inc
movsl
dec
loope
aam
add
cmp
inc
rcl
mov
sarb
call
pop
pop
adc
and
movsl
popl
cmc
lods
inc
inc
scas
sbbb
orl
push
cld
xchg
imul
in
adc
or
push
stc
imul
das
mov
mov
push
add
xchg
adc
mov
sbb
sub
out
sbb
sbb
push
push
fdivrl
jp
shrl
sub
xchg
nop
inc
cmp
or
lods
and
cltd
int3
pop
mov
imul
enter
sub
xchg
std
cwtl
daa
repnz
mov
or
pop
imul
mov
xchg
pop
push
cmc
cmp
incl
cwtl
call
push
sub
pusha
mov
pop
push
out
add
jno
stos
pusha
mov
addb
xchg
icebp
fidivl
int
dec
push
adc
daa
mov
movsb
out
jne
pop
push
in
cwtl
stos
xor
ret
scas
pop
shll
push
ss
push
dec
sub
cld
shll
js
das
and
and
cmp
sahf
inc
sub
scas
xchg
dec
movsl
frstor
scas
sbb
jmp
dec
dec
out
int
push
inc
sbb
xchg
std
sbb
pop
out
xchg
push
stc
or
dec
bound
dec
scas
repnz
jnp
ret
js
les
xchg
loop
repnz
cli
mov
cli
aad
pushf
lahf
or
xchg
mov
xchg
nop
adc
push
add
pusha
sahf
mov
jp
jp
jmp
push
insl
and
pushw
test
into
outsb
mov
sbb
add
out
jmp
dec
mov
jnp
mov
and
andb
stos
xchg
push
ret
inc
add
sbb
aaa
stos
mov
inc
inc
in
jno
pop
ja
and
in
lea
lret
mov
lock
jo
xchg
int
push
sub
loopne
pop
aas
mov
mov
test
or
cmp
sbb
jnp
lcall
bound
ss
lods
rclb
cmp
lahf
ja
icebp
and
jne
out
sub
inc
push
sub
xchg
cmp
sti
out
and
loope
and
cmp
add
sub
jp
cmp
je
xchg
loopne
add
cwtl
jns
jg
mov
push
pop
movsb
cmp
imul
or
sub
pop
stc
mov
lods
xor
mov
xchg
jbe
adc
cmp
pusha
pop
imul
aas
push
or
gs
aas
call
xor
pop
fisubrs
cmpsb
ja
inc
popa
mov
movsl
mov
cmpsl
out
inc
jg
sbb
mull
insl
dec
sub
fdivs
dec
pusha
ficoml
cmpsb
jae
push
push
sub
imul
rol
jae
xchg
pop
jno
and
std
mov
xor
gs
sbb
cmc
dec
out
cmp
lcall
hlt
divb
movsl
sbb
push
lds
sar
in
mov
cltd
insb
test
rorl
cmc
add
ds
sbbb
rorb
scas
loopne
mov
gs
adc
or
inc
adc
mov
jge
fdivr
js
stos
jle
ljmp
cmpsl
or
xchg
mov
dec
jge
and
mov
mov
ds
xor
jp
stos
adc
bound
pop
xlat
lahf
mov
popl
or
int
add
sbbb
push
dec
les
jnp
ja
out
ljmp
inc
cmc
pop
ljmpw
ds
inc
cmp
or
js
sbb
mov
enter
loopne
xchg
xchg
addl
call
xor
push
xorb
test
or
and
std
cmpb
jne
jnp
xchg
add
sbb
push
mov
aad
cs
jb
pop
jl
daa
loop
push
pop
cmp
push
in
iret
add
mov
push
je
add
pop
test
pop
scas
aam
aad
pop
xor
xor
push
adc
popa
pop
lcall
ret
and
sahf
pop
outsb
bound
pop
decl
sahf
jb
xchg
sub
ds
jae
cmc
or
leave
push
jmp
push
or
stos
cmpsb
pusha
dec
cmc
and
jmp
push
ss
push
push
cmc
pop
jp
lcall
cs
int
movl
ljmp
int
cmp
xlat
xchg
mov
clc
push
push
mov
stos
xchg
pop
insb
outsl
xchg
cmp
mov
xor
pop
mov
cmp
sub
add
pusha
insl
popf
push
shll
inc
stos
jg
xor
bound
jle
scas
fimuls
icebp
sub
lock
dec
mov
pop
dec
loop
aaa
dec
pop
add
jg
int3
xchg
jns
movsl
sti
mov
push
icebp
mov
stos
pop
xlat
stos
jp
arpl
xchg
hlt
loopne
cmpsl
and
inc
dec
outsb
add
cmp
and
jmp
add
test
ret
outsb
mov
mov
hlt
lret
pop
shlb
loop
imul
inc
push
inc
nop
mov
and
jmp
pop
dec
div
sbb
sbb
push
mull
sbb
call
dec
mov
cmp
pop
jmp
xchg
inc
adc
mov
cmp
divl
mov
addb
cmp
test
mov
jecxz
mov
adc
xchg
fisttpll
ss
sub
adc
not
jns
clc
cli
pop
stos
mov
mov
bound
jl
mov
adc
data16
in
jecxz
in
xchg
in
test
out
and
cmp
ret
cmpsb
in
xchg
jno
add
clc
mov
sarl
test
and
jb
fmul
sbb
push
mov
sub
pushw
xor
pop
call
cmp
xor
popf
sbb
lods
jmp
pushf
and
cli
popa
mov
adc
loop
xlat
mov
les
sbb
stos
or
push
stc
test
cli
cs
push
xchg
rolb
jo
shlb
outsl
sbb
xchg
adc
int
inc
push
jae
in
cmpsb
lock
dec
add
pop
lea
fistpll
shl
cmp
xchg
shll
add
adcb
and
fnstsw
adc
cmpb
sbb
mov
pushf
fstl
rclb
push
lea
push
cli
arpl
std
mov
and
lret
ljmp
pop
sarl
dec
cld
cmp
int3
loope
sbb
pop
scas
imul
sub
aad
push
out
rorb
mov
ret
mov
ret
xchg
cmp
hlt
pop
xchg
fs
ja
dec
push
andl
xor
push
and
mov
lds
push
xorl
mov
int3
jne
ljmp
stos
mov
cmp
mov
leave
cmp
stos
cmp
and
sbb
xchg
jb
loop
lds
enter
stc
mov
movsb
add
lods
bound
jecxz
add
pop
test
or
mov
mov
rcl
enter
cmp
cmp
inc
pop
lock
sbbb
adc
or
push
shrl
sbb
scas
mov
and
mov
xchg
add
cmpsl
mov
dec
jne
pop
mov
int
cmp
inc
inc
nop
daa
pinsrw
mov
cli
or
mov
sub
cmp
call
enter
cli
fsubl
cltd
jmp
test
xchg
cmp
dec
andb
mov
test
jnp
outsb
outsb
lcall
pop
mov
enter
shr
sub
pop
push
outsb
push
push
xchg
pop
mov
nop
adc
jle
pop
inc
and
mov
cld
clc
mov
xchg
pusha
jmp
in
sub
adc
xchg
mov
lret
jno
flds
pop
aaa
jle
jnp
add
imul
incb
xor
jbe
jle
mov
repz
mov
jns
cmc
jle
fsubr
mov
js
add
popa
icebp
pmuludq
and
retw
icebp
subl
cmpl
aas
clc
lods
inc
xchg
adc
hlt
pop
pop
out
push
xchg
xor
push
xchg
mov
daa
insb
dec
ret
outsb
cmp
pop
adc
xchg
adc
outsb
fs
push
or
das
stos
jne
cmpsl
out
out
fadds
flds
pop
stc
sub
lds
clc
dec
xor
dec
ret
in
sti
mov
out
or
insl
das
mov
jecxz
orb
mov
repz
dec
and
adc
repz
sahf
mov
addr16
cli
out
repnz
sub
pop
out
dec
and
sti
loope
mov
pop
add
sahf
je
das
push
mov
adc
mov
xchg
xchg
ljmp
ja
mov
fwait
or
mov
mov
je
mov
mov
sbb
and
arpl
and
fstpl
cmp
xor
test
scas
cmc
sbb
pushf
push
movsb
jnp
cwtl
sub
jecxz
popa
mov
lock
sub
fst
outsb
icebp
repnz
scas
rorb
scas
jecxz
inc
in
adc
shlb
test
daa
xchg
scas
sbb
les
and
mov
sub
test
xchg
mov
pushf
jne
push
std
jnp
jmp
xchg
movsl
adc
sub
and
into
outsb
pop
inc
mov
mov
pop
jecxz
mov
das
cwtl
xchg
imul
xor
pop
pop
pop
es
or
mov
sbb
stc
into
mov
add
mov
or
iret
nop
mov
and
jo
aas
test
dec
ficoml
outsb
pop
sub
movsl
orl
inc
add
pop
lfs
popf
jmp
mov
mov
dec
jmp
popl
mov
cmp
lods
into
pushf
je
std
adc
push
pop
enter
lea
jne
divb
daa
mov
jns
add
add
sub
adc
dec
cmpsb
ss
sub
xchg
std
add
adc
ficoms
js
mov
fcoml
stos
add
mov
leave
test
adc
inc
fcom
push
sti
jge
notl
fs
fiaddl
ds
push
add
sbb
inc
stc
pusha
mov
push
cmp
jbe
sarl
sbbl
adc
sbb
in
int
mov
cmpsl
lcall
out
and
sti
int3
out
cmp
imul
dec
pop
push
cld
and
cmc
xchg
sub
cmp
xor
push
or
or
addr16
jbe
fwait
mov
push
push
pop
add
xlat
mov
arpl
and
xchg
fimull
xchg
push
xchg
push
and
pusha
sti
fdivr
int
push
xlat
loop
adc
inc
mov
rcll
lods
cwtl
in
sbb
lea
and
mov
cld
xor
mov
add
inc
sahf
fsubl
popf
dec
inc
push
popf
not
lods
mov
sbb
fucomi
jmp
mov
ret
pop
sbb
mov
fsubs
inc
adc
out
pop
mov
loopne
jmp
xor
push
and
xor
xchg
adc
cmp
cmpl
pop
scas
jecxz
fwait
in
movsb
hlt
loopne
nop
dec
jne
leave
pop
out
test
hlt
movsl
nop
jecxz
xchg
rcrl
sbb
push
push
add
mov
mov
adc
fwait
jle
sub
cmc
scas
stc
test
xchg
adc
adc
lock
push
push
cmp
adc
add
outsb
cmpsl
std
jb
xorl
inc
js
sub
mov
sbb
and
cltd
mov
pop
jl
mov
mov
cmpsb
jmp
rcll
sbb
lcall
js
sbb
pop
add
jecxz
sbbb
int
push
jb
adc
icebp
std
or
test
cs
or
sub
test
es
jae
pop
mov
rol
xchg
cmpsb
and
movsl
gs
rcrl
aas
fisubl
xchg
sub
jle
and
xchg
mov
lea
or
lea
stc
jae
negl
jae
pop
rcr
cmp
aam
xor
sbb
push
fnstsw
jns
dec
push
ds
dec
cltd
loop
das
incl
js
cmp
int
cmp
mov
jnp
addl
or
cli
mov
shrb
outsl
leave
push
lds
fadd
xchg
sahf
adc
push
add
or
push
add
scas
push
repz
fimuls
jo
je
loop
stos
aaa
into
sub
mov
addr16
dec
or
loope
mov
sbb
xlat
and
pop
subl
jo
add
scas
push
aas
mov
movsb
mov
cwtl
and
out
fdivrs
and
icebp
pusha
pusha
icebp
dec
mov
sbb
nop
push
adc
mov
xchg
mov
repz
mov
xchg
lods
pop
push
add
in
pop
mov
xchg
ret
mov
cltd
lcall
dec
pop
repz
fdivrl
rorb
sub
js
push
jo
mov
data16
repnz
push
js
pop
cmp
fildl
scas
cmpsl
es
push
clc
inc
enter
mov
cmp
jb
inc
or
icebp
jp
jmp
cmp
scas
push
pop
lods
je
cmp
sti
icebp
jns
mov
fcmovnb
inc
std
push
imul
arpl
mov
push
and
xor
data16
bound
shll
daa
pop
cwtl
jo
into
shl
mov
pushl
cmp
xor
mov
test
sub
jmp
loop
mov
cwtl
mov
jno
pop
insb
bound
push
sub
lock
es
xor
fldenv
xor
lret
cmp
mov
jbe
sbb
push
addr16
jp
pop
gs
inc
nop
ja
xor
inc
loopne
repz
push
or
loope
aaa
sti
movsl
hlt
xor
cmpsl
xchg
lret
adc
sbb
mov
idivl
push
stos
enter
decb
ret
cmpsb
out
jge
adc
mov
fcmovb
add
fstl
test
push
out
in
test
gs
inc
xor
das
stos
outsb
iret
inc
repz
jle
ss
jns
mov
cli
mov
mov
or
push
in
mov
cltd
cld
cmp
mov
xor
test
popa
ret
push
cwtl
xchg
xchg
das
jnp
push
inc
sbb
in
lock
lods
mov
mov
mov
xchg
push
push
xor
or
pop
jnp
pop
push
es
push
data16
out
mov
jg
xor
pop
dec
dec
jbe
adc
dec
xchg
cmc
sahf
or
jecxz
rcrb
sbb
xchg
mov
push
iret
jg
cs
push
mov
ss
lret
xchg
mov
pop
lea
mov
pop
push
push
ds
js
in
adc
adc
notb
lea
add
cmp
scas
mov
out
jae
adcl
push
inc
les
stos
shll
push
sarl
sub
sub
aad
ret
dec
or
pop
cmp
inc
jp
and
jle
fmulp
shrb
sub
gs
seta
fbld
popf
mov
mov
lock
mov
lods
lret
repz
adc
cmp
mov
rcll
dec
ljmp
clc
sbb
out
push
out
pop
mov
adc
and
and
xor
movsl
jge
int
mov
imull
imul
inc
xchg
ja
dec
push
lock
mov
shll
jmp
int3
add
push
in
or
enter
or
xchg
imul
dec
xor
dec
pop
aad
jge
inc
inc
scas
jno
inc
dec
mov
aaa
pop
hlt
cmpsb
or
mov
out
mov
jmp
sbb
popf
loop
sti
int
xor
in
test
sbb
icebp
notb
rolb
pop
dec
or
movsb
rcrb
xor
jns
sbb
movb
test
mov
loop
out
add
loop
test
repz
xlat
stos
stc
jge
mov
cmp
xchg
repz
arpl
es
sbb
adc
subb
jno
dec
xchg
cmp
push
test
mov
push
sub
mov
mov
push
mov
adc
push
fiadds
cmpsl
push
cmp
xor
je
pop
dec
hlt
popf
mov
dec
push
or
mov
andl
or
inc
or
repz
push
imul
imul
lea
adc
imul
sbb
add
mov
iret
lea
cmc
daa
and
mov
sub
nop
or
cmp
ss
or
cmp
out
pushf
adc
sub
and
mov
lods
rcrl
test
jno
adcl
in
stc
mov
stos
mov
mov
aad
out
pop
push
xlat
xor
in
out
adc
or
inc
push
out
ja
jecxz
dec
inc
shll
loop
sbb
push
pop
mov
and
icebp
lock
dec
adc
rorl
mov
fs
fidivrl
fs
pop
scas
in
sub
add
pusha
or
inc
jne
mov
lret
pop
mov
call
pop
xchg
shll
pop
aaa
imul
cmpsl
add
int3
adc
xor
cmc
out
xchg
lods
sbb
jge
sbb
loope
insl
fbld
insl
shrl
scas
xchg
mov
xchg
jle
jl
test
push
js
hlt
jmp
test
js,pn
movb
std
and
sarb
cmc
jecxz
dec
sub
and
mov
mov
fcomip
dec
int
lahf
std
pushf
loopne
or
mov
hlt
sbb
mov
ljmp
mov
sbbb
push
pop
pop
mov
xor
insb
arpl
iret
push
lahf
sbb
adc
dec
dec
mov
les
mov
add
and
in
stos
insb
dec
add
imull
pop
pushf
aad
fcompl
jle
xor
fdivrl
xor
add
inc
sbb
xchg
lds
pop
cli
rclb
popf
movsb
inc
add
cmpl
into
mov
cmp
mov
lea
imul
pop
adc
cmp
or
mov
mov
pop
lods
loopne
out
sti
aas
and
subb
cs
adcb
ljmp
sub
ljmp
push
or
add
popa
adcl
stos
or
jno
lea
nop
fsubrs
testl
mov
add
pop
push
push
int3
arpl
out
xchg
xor
jle
mov
cmp
mov
cltd
jbe
sbb
imul
mov
ret
test
jp
mov
stc
jecxz
sbb
lahf
pop
pop
push
inc
add
scas
or
lds
mov
mov
jge
sbb
mov
repz
popf
mov
sub
mov
cs
pop
cmp
mov
xchg
add
jbe
pop
adc
sti
lea
pusha
loopne
movsb
andl
decb
add
cli
mov
jo
rcl
aad
xchg
sbbb
xchg
push
popa
mov
rcll
rep
mov
fisttpl
jae
outsb
cmp
imul
or
mov
mov
outsw
mov
and
xor
das
push
sub
aas
xlat
test
or
lods
in
or
cltd
out
in
out
lahf
xchg
popa
add
repnz
push
inc
aam
inc
popa
jns
out
cmpsb
jp
and
mov
sbb
notl
mov
cmp
cmp
sub
mov
ljmp
xor
xchg
sbb
xchg
mov
out
add
pushf
adc
aas
aas
lcall
repnz
lds
push
mov
jnp
push
imul
jnp
cli
and
dec
xchg
lods
add
cmp
sub
lds
mov
push
mulb
mov
faddl
mov
inc
in
pop
cmp
pop
jne
out
jo
jmp
jo
push
fnstsw
jb
js
adc
cmp
daa
cmpsb
fs
pop
or
jl
sbb
jl
add
xchg
sbb
jl
mov
mov
movsl
jae
push
sub
xor
lea
pop
xlat
and
aad
add
mov
xor
cmp
iret
mov
fsub
out
add
xchg
mov
addr16
cmp
lods
push
cmpsb
cmp
lahf
add
lcall
cmp
or
js
pop
sub
add
and
mov
mov
pmaxsw
in
mov
add
shrl
addl
into
hlt
stos
int
sub
movsl
xor
aaa
pop
cmp
mov
mov
pop
xchg
out
jl
loopne
mov
dec
jnp
rcrb
arpl
lods
lret
in
mov
cmp
dec
sti
xor
scas
inc
xor
mov
and
push
and
rcrb
sub
insl
fldcw
loope
and
adc
fnstsw
xor
negl
cmp
xchg
ret
mov
outsb
imul
and
fs
adc
pop
loopne
or
push
subb
loop,pt
push
pop
lcall
pop
ror
jne
or
inc
lcall
andb
arpl
jbe
fnstcw
jo
jmp
pop
add
xchg
inc
mov
cmpsl
mov
imul
or
adc
dec
lods
cmc
jle
dec
cwtl
dec
cmp
add
pop
sub
push
cmp
push
jmp
push
enter
push
xchg
adc
sbb
sub
in
jb
das
pop
cmpsl
mov
cmc
daa
xchg
jle
jge
scas
mov
fmulp
rolw
jmp
gs
sbb
das
out
mov
sbb
dec
add
jae
fcompl
imul
mov
call
sub
mov
mov
mov
push
test
mov
jg
lret
jg
or
fidivs
ret
add
xlat
fadds
mov
mov
call
xchg
mov
inc
ret
negb
xchg
push
pop
push
je
mov
xchg
sub
inc
les
or
shlb
fidivs
inc
sarb
fwait
dec
ror
dec
jp
insb
or
or
cmpsl
sub
andb
mov
mov
dec
leave
popa
insl
lock
cmp
mov
and
jno
dec
jbe
dec
mov
xchg
push
sbb
fimull
cmp
test
mov
lods
xchg
and
hlt
lea
ror
xor
fidivrl
xchg
imul
mov
ljmp
repnz
mov
popa
add
dec
in
jne
push
cmpl
adc
sahf
and
pop
dec
mov
jnp
in
push
or
rolb
pop
sub
pusha
inc
jbe
or
jg
clc
fimuls
in
sbb
out
into
cld
or
cld
mov
aaa
outsl
mov
in
mov
aad
xchg
pop
inc
add
mov
cli
xor
fldenv
jne
popf
mov
ret
daa
ja
fildll
inc
out
and
imul
inc
fstp
jns
pop
dec
addr16
adc
es
jecxz
mov
xchg
mov
cmp
pushf
imul
sbb
fwait
pop
sub
rorb
cmp
sti
pop
icebp
dec
xchg
lock
xor
fmull
test
insb
xchg
loope
mov
inc
dec
repz
dec
sbbl
ja
xor
push
test
add
mov
icebp
outsb
dec
add
inc
add
xor
push
adc
mov
cli
xchg
xor
sbb
jb
test
std
in
xor
dec
pop
cmpsb
repnz
adc
push
jns
icebp
test
inc
inc
push
stos
mov
fimuls
std
mov
mov
outsl
sahf
mov
pop
mov
mov
icebp
sub
repnz
jnp
cld
dec
imul
xchg
je
divl
repz
mov
loope
xchg
in
jecxz
adc
out
sub
adc
push
fistps
rorl
mov
insb
fsubs
popf
fldcw
lds
inc
adc
ret
lcall
cmpsl
subl
movsl
int3
sar
jo
mov
outsl
int3
dec
cmp
add
and
dec
int3
out
call
xchg
pop
pusha
dec
push
xor
push
repz
lods
pop
lcall
insb
cmp
jae
std
ljmpw
jns
or
outsb
fs
inc
cmc
mov
cmp
xor
les
xchg
shrl
sti
mov
fstl
and
xchg
and
adc
outsl
cmp
push
in
xor
outsb
stos
daa
cmp
mov
mov
repnz
dec
inc
xchg
stos
out
dec
inc
out
rcr
cmp
test
sub
or
cmpsl
mov
test
push
popf
scas
cmp
sub
mov
inc
lret
sub
insb
add
in
jne
pop
add
adc
daa
or
adc
dec
pop
and
nop
dec
stos
mov
and
jg
add
adc
add
mov
pop
push
inc
push
lods
dec
sub
or
push
daa
xor
adc
add
test
mov
fisubs
or
call
push
xchg
xor
mov
xor
push
mov
add
ja
imulb
adc
add
aad
or
in
cmc
pop
add
and
push
xchg
inc
dec
popa
lret
aaa
das
pop
adc
adc
lods
inc
sarb
add
xchg
mov
mov
repz
pusha
push
cmc
test
dec
nop
lods
hlt
imull
fiaddl
out
scas
adc
cwtl
sub
jae
jbe
sub
sahf
fsts
lods
mov
fmuls
jl
push
mov
int
pop
pop
adcb
int3
shll
mov
fcoms
push
inc
pop
cmpsl
pusha
enter
mov
adc
sub
outsl
cmp
sub
insb
scas
push
les
or
adc
sub
jae
jae
sub
pop
loop
pop
mov
out
cmpsl
xor
cmp
add
dec
and
popa
into
mov
repnz
cmpsl
mov
lods
shlb
aad
xchg
scas
mov
sub
mov
and
lcall
std
je
cmp
gs
es
fisttpl
xchg
je
sub
insb
in
inc
addr16
jge
jmp
sub
xchg
insl
outsb
out
push
sarl
leave
cmc
sbb
in
pop
adc
jo
or
aam
lods
incl
inc
gs
or
and
push
xchg
hlt
jne
push
imul
fwait
add
push
cld
adc
rol
push
and
jmp
clc
popf
mov
push
xchg
jge
cmpsb
divl
mov
ljmp
xor
lods
pop
arpl
dec
inc
xchg
inc
out
pop
jl
std
adc
test
and
adc
lock
sbb
jmp
addl
out
inc
orl
movsl
and
cmpsb
pushf
mov
fbstp
mov
les
insl
jne
fmuls
sbb
sub
hlt
fdivrs
inc
btc
int3
pop
ja
adc
jl
pushf
lret
sub
xchg
mov
mov
popa
mov
out
push
and
jo
addl
add
sbb
stc
test
pop
push
insb
movsl
lods
push
stos
ljmp
sti
repnz
lock
gs
insl
sub
adc
inc
inc
fwait
std
orl
sub
or
rcl
stos
jle
pop
and
mov
sbb
stos
sbb
xchg
mov
loopne
sub
xor
loope
mov
jl
sbb
nop
insb
jbe
cli
sbb
add
pop
mov
cmpsb
adc
sub
fnsave
xor
int
mov
test
aam
ror
icebp
lret
lret
mov
jae
xchg
insl
test
cmp
sub
es
jl
or
cmp
scas
sbb
mov
nop
or
test
hlt
outsb
adc
mov
sbb
push
sbb
sbb
cmpsl
inc
push
push
inc
xchg
shlb
icebp
jp
subb
lea
arpl
xlat
fmuls
or
mov
ds
mov
add
and
adc
push
mov
mov
inc
test
mov
sbb
adcl
push
mov
sbb
push
mov
pop
mov
mov
cs
sbb
cmp
stos
jo
push
andb
ror
mov
and
popf
cmp
fwait
xchg
jbe
add
mov
cmp
or
jge
push
add
pop
scas
scas
cmc
jb
popf
mov
ds
mov
cltd
int
aaa
mov
xchg
mov
add
fldt
shll
lcall
addr16
in
mov
xor
pop
bound
pop
in
push
cli
mov
mov
pop
mov
pop
mov
push
mov
pop
in
or
push
cwtl
push
bound
mov
in
into
mov
pop
sbb
xor
cmp
pop
shrb
aas
sbb
outsl
pop
gs
fcmovne
lods
sub
ret
push
lock
fdiv
call
cltd
aas
repnz
xchg
inc
adc
adc
dec
loop
jae,pn
fdivl
push
xchg
aad
cmp
push
ret
into
jmp
insl
ja
push
aaa
jecxz
jno
out
arpl
andb
mov
sbb
ss
addr16
arpl
out
lock
test
mov
stc
out
add
scas
aad
mov
mov
adc
lret
es
mulb
jnp
mov
ljmp
mov
loope
cmp
and
cmpsb
jle
jns
xlat
lods
adc
aam
jnp
and
mov
out
outsb
dec
outsl
xabort
cmc
sub
xor
shlb
pop
testl
aam
push
sbb
and
mov
or
shlb
std
pop
mull
ficoml
inc
out
add
rcrl
mov
aam
mov
insl
sahf
test
push
add
jnp
mov
add
stos
push
loop
loopne
fwait
mov
xchg
sbb
jnp
sbb
aas
pop
cmp
mov
sbb
std
lock
jo
or
ljmp
gs
imul
pusha
lcall
or
out
cs
push
sbb
ret
rorl
out
out
imul
or
rcr
std
aaa
push
mov
cmp
js
aaa
out
sbb
ret
data16
or
shl
jge
pop
or
push
scas
in
adc
sbb
punpcklbw
ret
popf
mov
sbb
scas
or
pop
mov
fildll
cwtl
lret
mov
sbb
dec
lret
adc
xor
inc
jmp
mov
add
cmpsl
arpl
rolb
mov
jbe
sbb
rorl
mov
cmp
das
push
push
pop
pop
xchg
lret
wbinvd
push
mov
cmp
or
shll
fucomip
pop
clc
out
add
call
outsl
sub
cli
sub
xor
mov
ds
iret
xchg
pop
cmpb
stos
mov
push
add
rorl
inc
sub
mov
cmp
rclb
jl
ror
adc
sarb
mov
cmc
pop
std
jno
scas
lods
and
mov
jmp
mov
out
mov
xor
xor
into
fucomp
insl
loopne
inc
adc
push
push
int
int
push
push
xchg
sbb
pop
sbb
imul
mov
popa
cli
adc
sub
les
fdivp
scas
jge
mov
subl
subl
mov
cmp
adc
sub
push
in
mov
xlat
movsb
push
out
adc
pop
in
jns
dec
mov
out
xchg
dec
js
insb
sbbl
adc
xorb
xchg
adc
adc
xchg
addr16
testl
push
push
mov
sbb
hlt
cmpsl
add
testb
pop
sbb
aam
push
mov
pop
dec
int
insb
fwait
test
and
mov
push
orb
xlat
iret
add
lret
push
subb
and
or
mov
add
add
into
and
push
outsl
cmc
movsl
inc
cmp
or
push
fldt
out
dec
lcall
jo
sti
push
add
bound
call
lcall
orb
lods
pop
jl
dec
rolb
daa
mov
pop
jecxz
sbb
xchg
ja
pop
lds
mov
stc
icebp
mov
lods
stc
cltd
iret
hlt
test
mov
ret
inc
add
push
xor
repz
mov
push
cwtl
lret
arpl
dec
fcmovne
push
out
mov
pop
stos
mov
call
push
cmp
ljmp
push
into
cs
cmp
mov
inc
lods
adc
mov
cmp
jnp
lcall
loope
mov
lret
enter
cmp
fists
int
dec
and
and
sub
fstl
loope
into
aaa
xlat
cld
test
add
sbb
push
jp
pusha
cmpsl
mov
and
jne
mov
jne
out
and
xlat
rcr
movsl
jl
lret
jne
or
sbb
sub
fdivl
mov
fsubs
mov
xchg
fcmovnbe
in
jne
jb
in
xor
push
sub
mov
adc
jmp
out
adc
fldcw
imul
xor
fildl
popa
mov
lahf
xlat
mov
cmpsl
jmp
adc
mov
jo
xlat
jbe
aad
mov
lods
push
xchg
inc
imul
in
dec
add
xor
mov
cltd
aaa
fdivl
sub
jp
sub
test
add
push
or
mov
ret
sbb
xchg
clc
cwtl
xor
push
mov
outsl
in
adc
popa
jmp
into
jb
pop
lret
sub
lds
cmpsl
mov
inc
outsb
test
adcb
aaa
cmp
loope
ljmp
call
pop
out
stc
leave
add
pop
test
popa
add
push
jp
mov
stos
push
cmp
push
pusha
sar
int3
add
sub
cmp
and
sbbl
xchg
vpcmpeqw
out
maxps
addr16
stc
ror
std
icebp
xor
mov
jb
or
in
pop
jb
in
cmp
mov
mov
mov
pusha
pusha
and
push
fistpl
xchg
arpl
or
lahf
std
sub
cmp
xchg
int3
mov
mov
push
test
fisubs
cmp
bound
mov
notb
push
cld
mov
cmp
sahf
repnz
mov
inc
xor
add
mov
lret
lea
icebp
sti
xor
inc
and
je
mov
or
das
sub
dec
jecxz
sub
xlat
dec
jge
sub
mov
xchg
inc
lods
aaa
daa
fwait
test
leave
xor
loopne
mov
inc
adc
aad
push
xchg
sub
or
adc
adc
scas
ss
rclb
xor
jl
xchg
cmpsl
test
xchg
lds
pusha
xchg
jbe
or
pop
adc
push
sarb
xchg
push
ret
jl
std
mov
call
cmpsb
test
sahf
fldpi
sub
push
sub
dec
data16
hlt
fwait
xchg
push
pop
mov
in
jp
xor
mov
jo
js
push
mov
inc
xchg
dec
ds
int
mov
pop
int
xchg
nop
jp
cs
dec
pop
adc
movsb
cmp
sub
mov
ds
sub
insl
fs
fwait
aaa
cmpsl
jae
sub
mov
pop
jno
inc
inc
imul
mov
aaa
xor
jb
xor
mov
aad
mov
mov
cmpsl
mov
cmp
cmpsl
es
sbb
cmp
xchg
push
jne
sbb
insb
mov
aam
rcrl
adc
sbb
test
test
dec
popf
fsubrl
fxch
scas
loop
dec
cwtl
mov
call
fistpll
fcompl
repz
adc
bound
out
inc
cmovp
jg
test
test
sti
mov
add
xchg
rol
nop
loope
std
cmp
shl
or
push
jg
je
pop
dec
fidivl
mov
les
mov
adc
int
lahf
int
enter
loop
popf
ret
popf
repnz
pushf
sahf
lods
inc
cltd
mov
jo
loop
pop
cltd
mov
imul
lcall
popa
fadd
ds
push
mov
popa
inc
pop
push
lock
mov
rcrb
add
push
jae
mov
out
bound
or
mov
dec
ja
pop
rcll
negl
jns
mov
shl
sub
dec
repnz
scas
jbe
sbb
mov
and
mov
lds
xchg
addr16
xchg
das
lds
mov
push
ss
fwait
or
pop
cmp
mov
test
push
lret
std
sub
pop
jo
cmp
addb
test
pop
adc
ficoml
out
test
jne
lret
mov
xchg
into
inc
in
xchg
sub
cmp
mov
test
mov
in
pop
xchg
int
shr
sbb
fidivrl
icebp
loope
data16
and
xorl
aam
gs
das
adc
sar
push
xchg
cmpsl
test
push
jae
addb
pop
sub
imul
outsb
mov
mov
cmp
dec
inc
shrl
int
mov
dec
mov
cmpsb
cmp
scas
lahf
xchg
mov
add
add
test
js
inc
sbb
and
pop
out
push
sub
add
sub
cmp
xchg
mov
cld
aaa
das
add
test
rcll
into
shlb
xchg
xchg
movsb
push
xchg
pushf
cmp
arpl
lret
test
dec
pop
fsubl
subb
jle
mov
dec
leave
sbb
push
fistpl
dec
jnp
je
lahf
xor
lods
add
popa
sub
out
sbb
pcmpgtd
add
fs
cmc
out
out
clc
dec
mov
push
sbb
push
sbb
inc
shrb
inc
shr
dec
cmpsl
and
fwait
mov
cs
lcall
xchg
dec
jnp
xchg
or
stos
cmp
lock
fldt
lgs
test
mov
inc
mov
test
gs
call
movsb
pop
push
jp
mov
sbb
and
sbb
pop
xorl
sub
ljmp
fiaddl
jne
mov
inc
xchg
scas
fsubr
jg
xchg
fwait
divb
pusha
add
daa
mov
push
jnp
mull
data16
enter
and
ret
jae
jecxz
ret
inc
shrb
imul
jne
or
test
inc
sub
dec
push
xor
mov
and
jecxz
movb
lock
nop
pop
test
push
ret
adc
lea
cmp
add
push
pushf
pop
cmp
test
mov
stos
sbb
jae
fmul
dec
cmp
pop
ret
pop
enter
mov
or
xchg
ret
sbb
into
sbb
push
fsubl
jne
mov
jne
lea
xchg
cwtl
incl
cltd
sub
imul
mov
out
mov
inc
pop
dec
lods
fstp
pop
sti
test
xchg
aaa
jle
fimull
pcmpgtd
pop
shrl
dec
faddl
cmp
in
shrl
jo
aam
cmc
leave
rorl
ds
hlt
scas
and
ret
shr
clc
adc
fistpll
pop
ljmp
mov
sbb
inc
test
shll
xchg
jmp
lret
addr16
js
popa
jno
pushl
or
sub
lea
fisubs
mov
mov
push
jo
fisttps
dec
inc
push
out
and
es
jl
xchg
in
in
jb
sub
add
out
mov
mov
clc
jmp
mov
aam
push
out
jno
sbb
inc
jno
js
inc
dec
sub
add
andb
pop
cmp
ljmp
add
mov
divl
rolb
dec
cmpsb
push
orb
cmp
xor
fstps
pop
add
xchg
inc
mov
faddl
mov
lock
mov
aam
sub
mov
cmp
sbb
xor
jecxz
jmp
and
jmp
cli
out
add
mov
jne
mov
repz
mov
fs
int
jl
in
mov
push
mov
pop
into
ss
fsubrs
sub
fdiv
popa
ss
pop
mov
dec
sbbl
jmp
cmp
fwait
or
xor
je
cmp
adc
xchg
jge
sti
les
pusha
fs
data16
xchg
repnz
adc
enter
adc
pop
aam
xchg
cmp
lret
adc
daa
mul
inc
inc
inc
into
mov
push
stos
in
sbb
in
push
or
cmp
push
sub
or
mulb
fcoms
fistps
nop
push
js
fs
iret
sbb
pop
jb
cmc
daa
lea
cmpsl
movsl
jae
stc
adc
cs
repz
rcr
subb
cmp
mov
xchg
loope
std
ja
insl
xchg
inc
test
mov
or
hlt
and
ficompl
ljmp
shlb
out
sti
lds
decb
call
popf
push
ss
push
cmc
pusha
push
sbb
pop
jl
fsubrs
les
pop
stos
dec
mov
mov
movsl
cli
push
ja
insl
sbb
dec
push
mov
push
mov
xchg
push
cmp
fwait
stc
mov
xor
push
leave
cmp
xchg
cmpsl
xchg
lea
xchg
lcall
shrb
fisubrs
xor
xchg
rcl
mov
cmc
mov
clc
mov
mov
mov
repz
cmp
cmp
pop
lods
lret
adcb
lea
jns
cmp
gs
dec
xor
dec
mov
jmp
inc
iret
fnstenv
and
sub
data16
and
pop
cmp
imul
cmp
pop
mov
mov
sbb
stc
xchg
rorb
lock
mov
ficomps
jl
mov
mov
xor
iret
fidivs
loop
dec
pop
pop
push
sbb
mov
pop
cmpsl
sti
jg
mov
add
insb
and
jecxz
jg
sti
xor
jne
mov
mov
or
jne
sbb
inc
and
dec
add
test
xor
scas
jb
out
xchg
int3
jne
hlt
shlb
xchg
push
loope
das
adc
movsl
dec
lds
pop
jb
in
loop
inc
dec
jmp
inc
in
popf
push
fldl
sub
cmp
pop
mov
gs
inc
shlb
das
jge
imul
int
pop
shll
loopne
cmp
adc
fmuls
aad
adc
das
data16
lret
xchg
cs
dec
mov
test
cli
inc
lret
sbb
loop
xchg
bnd
mov
xchg
in
push
stos
rcrl
or
sbb
or
fildl
sbb
fsubs
cmp
cmp
in
mov
or
bound
xor
insb
or
call
sub
lock
pusha
cmp
xchg
fs
cmp
sbb
inc
inc
lds
js
jg
mov
add
or
cmc
pop
pushf
mov
rol
push
jo
mov
lcall
mov
and
roll
push
cmp
push
jecxz
mov
jg
dec
xor
push
push
xlat
jecxz
loop
mov
mov
int
push
cmp
add
dec
dec
mov
jmp
mov
inc
test
aad
arpl
and
sti
and
or
mov
add
shrb
xchg
cmc
pop
adcb
out
inc
fwait
loopne
into
loope
mov
push
mov
arpl
data16
push
or
sbb
xor
insl
adc
adc
push
fwait
adc
jo
cli
insb
adc
in
movsb
test
cmp
fidivl
testb
mov
cmp
leave
fstpl
flds
fs
mov
and
icebp
dec
adc
pop
movsb
loopne
fs
pusha
mov
insb
push
jp
test
xchg
adc
xchg
data16
data16
cmpsb
sarb
roll
inc
pop
xlat
mov
loopne
cmpsl
jmp
adc
lock
push
lock
pop
or
or
stos
arpl
or
pop
aaa
out
das
push
mov
push
push
lds
int3
xchg
ficompl
mov
stos
aad
or
dec
pop
icebp
aad
fisubrl
shl
lea
push
sbb
dec
scas
inc
popa
insl
lods
ret
mov
outsb
outsb
stos
loopne
ds
imul
ret
fsubl
sahf
clc
in
add
repz
add
lds
cli
adc
cmp
jecxz
dec
jo
push
orb
das
mov
ss
pop
mov
xor
nop
arpl
pushl
and
nop
mov
jp
adc
sbb
dec
ja
loope
push
cmc
dec
cmpsl
mov
iret
mov
iret
aad
push
mov
or
fistps
push
adc
lock
inc
rcrl
cmp
jle,pn
sbb
outsl
adcl
out
cmp
mov
jmp
pop
add
xchg
mov
gs
loop
hlt
add
jle
stos
fldl
push
insb
test
sarl
dec
jl
jnp
test
xchg
pop
adc
pop
call
pop
jl
xchg
pop
xor
ror
movsb
xchg
jae
iret
dec
push
inc
and
arpl
push
testl
inc
pushf
nop
jecxz
cmp
and
inc
xor
rorb
sbb
mov
or
and
dec
or
std
push
jecxz
jo
or
cmp
lret
xchg
insb
leave
lahf
adc
test
sub
imul
push
leave
cmp
mov
dec
sbb
jl
mov
sbb
lods
bound
xchg
push
idiv
repz
cmp
push
les
pop
lods
subb
sbb
fidivrs
cltd
imul
cmp
ret
dec
cmp
pop
xor
test
sub
mov
add
fnsave
or
mov
jb
mov
dec
mov
nop
out
sub
mov
cmp
mov
fwait
adc
xorb
sbb
mov
mov
xchg
sbb
or
sbb
sub
sahf
push
rclb
mov
and
adc
dec
cmp
fsts
sub
lahf
test
mov
pop
mov
xor
xchg
adc
sbb
ss
dec
and
dec
out
xchg
mov
out
js
and
nop
dec
addb
loopne
or
jmp
data16
dec
mov
sbb
into
out
int3
hlt
xlat
mov
call
frstor
inc
repnz
ja
cmp
jns
push
hlt
push
subb
add
pop
pop
subl
xchg
ds
adc
outsl
shll
push
cmp
shll
adc
ret
cmp
xorl
in
out
xlat
ds
fdivrs
xor
enter
ja
pop
lods
xchg
aad
les
sub
cmp
push
lcall
adc
xchg
bound
push
sbb
xchg
push
jmp
sub
cmc
sbb
icebp
push
mov
jmp
mov
mov
add
loopne
popa
mov
jno
sbb
subl
and
xchg
add
jle
and
dec
fsubrs
mov
das
fdivs
fisubrs
push
int
inc
cltd
ss
mov
idiv
das
and
fsubl
data16
xor
jo
jo
mov
stos
add
or
xor
rol
ja
ss
add
ret
jmp
ja
pop
and
jb
jp
and
aas
rcll
lret
pop
cmp
jns
stos
lcall
sbb
push
in
pop
into
push
push
repnz
push
cmp
aaa
lock
mov
push
inc
xor
add
or
push
and
dec
lcall
mov
dec
or
jge
push
aam
imul
dec
testb
cmc
mov
int
add
xor
or
cwtl
test
xchg
jmp
jmp
inc
out
shl
into
jne
out
cmc
cmp
cmp
and
fsubs
repnz
jo
xchg
mov
pushf
scas
mov
jge
jae
push
jge
pop
xchg
sti
in
add
cmpsb
fwait
dec
pop
ds
neg
pop
fldenv
lret
inc
jnp
jmp
sahf
repnz
lahf
mov
mov
inc
cmp
andb
adc
pop
jmp
cmp
popa
mov
mov
call
hlt
and
and
jge
insb
and
leave
fistps
imul
dec
dec
jo
and
pop
test
xor
shlb
mov
cld
call
mov
pop
pushf
je
daa
adc
mov
mov
xor
jecxz
arpl
sub
out
outsl
push
add
cmp
lret
cmpsb
pusha
or
ret
aas
jbe
mov
pop
jnp
dec
mov
xchg
shlb
adc
test
adc
es
inc
scas
out
xlat
subl
notb
or
mov
call
lret
sub
fsubrl
out
add
jmp
lea
scas
in
lahf
push
push
xchg
xchg
lret
jg
mov
xchg
pushf
or
jle
les
push
testl
xchg
push
mov
cld
jp
dec
cmp
fldl
pop
into
jle
mov
jbe
rcll
cmp
mov
cmp
frstor
xor
push
jmp
adc
imul
xor
mov
shlb
inc
mov
push
and
push
cwtl
test
xor
sarb
addr16
sub
in
xchg
ret
clc
or
in
mov
cmc
mov
jg
push
and
fists
popa
jmp
stc
popa
test
int3
inc
aad
je
lds
jbe
repnz
dec
roll
addb
xchg
lret
pop
or
int3
push
adc
xchg
push
adc
int
adc
pop
sbb
mov
xchg
test
orl
jge
pop
imul
nop
or
mov
adc
jae
cmp
addb
dec
adc
dec
ds
and
jmp
mov
jp
shr
hlt
inc
xor
and
adc
int
push
std
adc
cli
jg
stc
xor
in
sti
xchg
mov
jns
sahf
mov
mov
push
pop
scas
fisttps
inc
enter
int3
mov
cltd
mov
and
addl
cmp
outsl
dec
leave
gs
jnp
mov
push
imull
push
fcmovnb
iret
test
mov
and
fld
mov
mov
inc
xor
subb
aam
mov
orb
in
loop
ffreep
jbe
sub
mov
movsb
push
data16
orb
or
sbb
imul
mov
cmp
dec
es
push
sbb
ss
ss
jno
popf
js
cltd
mov
shrb
js
lea
cli
mov
stos
pop
test
push
inc
jecxz
and
push
adc
ss
cli
jecxz
adc
testl
jno
cmp
cmp
dec
xchg
stos
adc
inc
clc
movsl
fstps
hlt
push
addb
aam
dec
outsl
out
dec
sbb
mov
inc
shlb
test
adc
jg
jb
repnz
pop
fidivs
nop
stos
adc
test
test
dec
push
sbb
in
movsl
mov
jl
jnp
cli
mov
or
xchg
mov
shl
das
dec
xlat
mov
push
lods
int3
cli
mov
rolb
jbe
rol
aad
xlat
adc
jns
cmp
aam
and
ficoms
mov
cmp
push
pop
sbb
sub
data16
orb
adc
mov
fdivs
pop
push
scas
dec
mov
jl
imul
push
imul
enter
das
ljmp
xchg
test
push
mov
mov
mov
cmp
call
ss
mov
shll
cmp
imul
sub
sbb
or
push
push
sahf
or
jno
pop
divl
add
add
add
ja
fidivs
inc
aaa
testl
sbb
iret
pop
lcall
leave
outsl
xchg
add
inc
lret
pusha
dec
out
stos
xor
mov
das
mov
xor
cli
push
add
fdivr
jo
outsl
loope
cs
xchg
jle
mov
imul
fs
aam
lds
xor
push
ja
es
xor
xor
fnstsw
arpl
or
std
mov
dec
rorl
mov
pop
call
or
movsb
sbb
bound
push
cmp
fs
std
fdivrl
jle
pop
cmp
adc
pmullw
and
popf
repz
xchg
sub
xor
jns
adcl
ret
xlat
mov
ret
xor
shlb
add
in
ds
sub
mov
dec
inc
cmp
inc
cmc
out
adc
and
lock
dec
ljmp
push
cli
cmp
mov
enter
mov
into
shl
add
cli
sbb
push
jo
cltd
ret
jne
stos
adc
out
and
cmpsl
scas
lods
cmpsb
inc
push
fsts
xchg
rorb
and
divl
mov
jmp
sbb
xor
ret
pop
xorl
adc
lods
or
movsb
lret
cltd
xchg
and
xchg
js
sar
ljmp
pop
pop
daa
inc
sar
sub
mov
jbe
repz
push
scas
in
test
je
cld
cltd
dec
xchg
jbe
and
fnstsw
sub
jns
sub
jnp
inc
mov
or
fistps
mov
cmp
sub
cli
mov
cmp
dec
sbb
mov
xor
outsb
scas
sbb
add
jecxz
xor
sbb
push
xchg
mov
mov
xor
test
subl
stos
insb
lahf
and
ja
addr16
outsb
cmp
xchg
mov
inc
adc
cmp
cmp
sbb
lods
popf
push
pop
imul
inc
dec
filds
mov
out
adc
sbb
repnz
inc
mov
xchg
xchg
pop
jg
testl
es
bound
cltd
enter
cmc
or
sub
sub
push
mov
mov
and
mov
and
cmp
or
push
std
pop
push
subb
mov
add
mov
jb
lret
dec
in
shll
sub
jo
fisttps
enter
mov
outsl
mov
cli
mov
scas
ret
test
or
mov
repz
test
es
aas
mov
mov
hlt
rcrb
dec
jmp
lods
xor
mov
scas
lahf
adc
into
dec
pop
mov
cs
test
fwait
mov
movsb
and
add
mov
and
rclb
xor
inc
and
and
and
pusha
dec
cld
pop
test
jns
ficomps
xlat
popf
adc
add
lock
repnz
mov
fistpll
and
lret
jl
aas
repz
enter
and
je
jb
add
es
adc
pop
fxch
pop
inc
and
in
adc
je
clc
push
das
fimull
movsl
mov
dec
fs
movsl
enter
les
icebp
mov
mov
repnz
shlb
add
sub
sbb
aad
inc
sbb
das
aad
je
pop
inc
mov
xchg
clc
and
mov
in
mov
jbe
mov
xor
cmpsl
inc
aaa
scas
and
xchg
rcrl
mov
lret
push
xchg
adc
test
mov
xchg
movsl
push
jecxz
loop
xor
daa
rcll
xchg
sbb
sub
loope
lock
adc
movsb
out
push
xor
loop
pop
js
lock
ficomps
negl
add
leave
push
mov
ds
imull
adc
leave
insb
pop
addr16
lret
cmpl
sub
fcmovnbe
xchg
sub
aaa
arpl
mov
xchg
inc
das
cmp
sbb
xchg
pop
mov
jle
push
outsb
fldcw
je
ss
cmpsl
lock
or
popf
inc
adc
mov
jecxz
add
xor
int
gs
loopne
vcvtps2pd
mov
lret
sbb
ret
jns
and
into
bound
sub
push
into
ret
xchg
and
mov
fwait
and
add
daa
in
xchg
add
mov
icebp
loop
pop
push
fsubrs
cmp
or
xor
mov
and
jo
and
jecxz
push
clc
in
insl
dec
iret
iret
in
in
xor
push
fisttpl
xor
repnz
xchg
sbb
jbe
xchg
push
jno
mov
sbb
push
cmp
rcll
mov
jbe
dec
hlt
push
test
jge
inc
add
adc
out
andl
sbb
xchg
adc
in
push
jecxz
and
push
stos
fbld
jbe
mov
mov
shrb
add
mov
cmp
xor
xor
or
add
inc
out
mov
inc
pop
xchg
into
and
rorb
jp
xchg
cmpsl
rcrl
mov
xlat
fwait
call
insb
leave
xchg
mov
sub
jmp
repz
pop
push
sub
les
jno
inc
jnp
mov
pop
sbb
inc
mov
sbb
dec
repz
mov
xlat
add
pop
jecxz
sbb
sub
insl
adc
dec
lcall
add
mov
ss
cmpsb
inc
jecxz
adc
push
lahf
jp
fcomps
ret
addr16
cwtl
fcomps
inc
push
pushf
and
mov
stc
adc
lahf
lret
push
adcb
ror
or
jo
pusha
xlat
sub
dec
fimull
pop
sub
push
outsb
movl
or
push
mov
sbb
pop
push
les
outsl
int3
or
xor
mov
rolb
xchg
leave
fldt
push
push
insb
js
test
mov
push
insb
mov
test
cmp
outsl
fwait
mov
add
pop
mov
inc
bound
lret
adc
adc
mov
add
nop
imul
or
mov
fldt
hlt
cmp
iret
push
xchg
mov
int
jge
fcomps
lahf
sub
test
pushf
push
ljmp
mov
shll
sub
push
call
dec
push
es
xor
cmpsl
test
in
jge
and
daa
aam
test
sahf
or
xchg
sti
cmc
jmp
iret
push
pop
sbb
loop
stc
dec
gs
insl
ds
mov
sub
test
xchg
xlat
jae
shll
and
pop
adc
jo
aad
mov
loopne
inc
ret
xlat
lret
cmp
fstps
or
test
xchg
hlt
xor
dec
mov
fwait
ds
out
mov
jnp
jl,pn
pop
cmp
lret
int3
cmpsl
mov
mov
mov
dec
test
in
insb
fcmovbe
icebp
out
mov
rorb
pop
cmp
loop
je
dec
fistl
lea
pop
mov
testb
xchg
out
mov
aad
in
xchg
dec
inc
test
cmp
jecxz
fisttps
arpl
out
je
lock
push
mov
cmpsl
lea
push
or
notl
adc
pop
mov
xor
mov
ficoml
cmp
clc
jnp
fists
xchg
outsl
loop
ret
fdiv
cmp
roll
cmc
inc
jns
mov
repz
sub
xlat
popa
jl
pop
fcmovb
mov
testl
fs
scas
imul
or
repnz
loope
mov
and
cmp
ljmp
mov
or
loop
leave
mov
mov
sti
stos
iret
lock
in
cmc
aam
loop
jge
outsl
sub
fwait
sarl
lods
rcll
xchg
sarb
stc
push
dec
push
mov
dec
inc
call
pop
inc
dec
pop
xchg
popf
inc
xor
dec
mov
mov
cmp
lret
jb
fstl
mov
sarb
test
loopne
mov
push
jecxz
jge
popf
cmc
pop
cwtl
hlt
in
jb
fabs
int3
lahf
mov
push
out
mov
loopne
push
sbb
scas
stos
inc
lods
ret
idiv
push
sbb
stos
ret
mov
loopne
cmp
sarb
ret
or
clc
addb
mov
or
cmp
adc
jl
orl
jmp
xor
push
xchg
xchg
or
pop
ja
push
inc
jnp
cmovbe
mov
pushf
sub
cmp
popa
mov
add
xor
push
push
popf
in
add
mov
and
and
jnp
pop
aaa
pusha
notb
sbb
cwtl
rcrb
pop
and
rcrb
out
add
mov
mov
jae
fnsave
xchg
fistpll
and
lods
int
mov
cld
and
ds
arpl
fucomp
sbb
aam
popa
test
adc
enter
lcall
push
repz
mov
fwait
or
outsb
addr16
sub
jb
push
das
pop
xchg
dec
mov
xchg
and
cld
fimuls
mov
loop
scas
cmp
xor
das
xor
sahf
xor
mov
dec
inc
cmpsl
xchg
xchg
add
in
mov
sub
lea
push
inc
dec
pusha
rol
or
hlt
push
lock
push
mov
pop
mov
jbe
ret
stc
sarl
movsl
clc
xchg
fisubl
add
inc
mov
push
pop
sub
dec
int3
pop
cmp
pop
in
mov
stos
push
test
push
adc
sbb
sub
lods
cli
rcr
jno
or
fcoml
sub
test
dec
pop
nop
lcall
push
mov
and
jmp
pop
fidivrs
fbstp
inc
xchg
int3
cmp
adc
xor
out
xchg
shrl
jecxz
cmp
mov
arpl
jno
lock
xlat
stos
xchg
shl
fs
mov
loopne
popa
mov
sbb
insl
jle
lods
test
push
xchg
dec
lods
jb
xor
scas
repz
int
jno
inc
js
pusha
ret
sub
push
les
add
sbb
xor
xchg
push
bound
jae
cmp
in
les
jl
es
jbe
leave
jmp
fistl
inc
ja
int3
push
xchg
inc
and
pop
into
dec
sbb
fdivl
adc
mov
inc
sbb
mov
or
pusha
cmp
xchg
adc
shll
out
lods
sub
mov
push
add
dec
inc
cld
cmp
or
fstpl
jg
cwtl
pop
ja
adc
call
add
inc
jns
xor
sahf
icebp
test
mov
adc
pop
pop
js
or
add
push
pop
mov
pop
xor
push
push
jbe
lock
int3
or
xchg
andl
jl
repnz
sahf
es
pusha
cmp
sbb
jle
pop
sub
sbbb
cmp
stos
leave
adc
out
pop
xchg
inc
repnz
outsb
mov
and
mov
jmp
mov
cmpsb
fimuls
out
mov
or
repnz
cmp
xor
adc
jp
call
mov
iret
test
and
xor
jmp
fcomps
sub
mov
stos
pop
in
mov
xchg
mov
lret
mov
scas
inc
inc
or
pop
mov
in
and
xchg
mov
stos
sbbl
sub
pop
or
adc
scas
lcall
xchg
dec
mov
das
call
inc
xor
cmc
les
jnp
sbb
cmpl
call
mov
popa
rcr
mov
repnz
mov
clc
xor
dec
inc
mov
gs
xor
pop
mov
test
out
ljmp
add
or
sbb
jle
sahf
push
popf
mov
xor
push
mov
and
jb
out
inc
xor
test
out
mov
add
repz
add
movsl
push
rol
icebp
xor
dec
sub
pop
sbb
cmpsb
sub
popl
mov
or
idivl
cmp
push
pop
xchg
dec
sbb
cmp
mov
imul
sub
dec
addr16
dec
repnz
inc
jge
sbb
in
cmp
or
adc
cmp
imul
xchg
sbb
push
leave
gs
mov
push
inc
xchg
cld
sbb
cmpsl
push
push
shll
jle
or
cmp
in
outsl
jbe
inc
int3
fwait
adc
int
sbbb
bound
or
xor
fldln2
mov
cmpsl
aaa
xchg
mov
outsl
push
addr16
push
adc
inc
mov
das
add
movzbl
movsl
jnp
xlat
test
mov
mov
lock
inc
incb
sub
sub
push
je
xlat
dec
aad
or
movsb
xor
outsb
std
ja
cs
mov
jg
pop
mov
xchg
popf
fdivrs
jne
or
mov
loop
pop
loopne
hlt
jg
mov
outsb
xchg
mov
xor
mov
push
lods
dec
ds
ljmp
sbbb
int3
and
icebp
xchg
popf
jmp
in
xor
and
inc
pop
add
in
pop
sahf
aas
mov
sbb
add
push
dec
hlt
pop
mov
sub
dec
add
xchg
into
adc
xor
aas
div
inc
div
scas
jle
add
inc
jle
popf
mov
push
cmp
ficomps
and
imul
ret
inc
and
push
xor
xchg
jns
mov
push
adc
stos
lds
cmc
jnp
pushf
sbb
jmp
and
pushf
pop
pop
pop
fwait
xor
cwtl
rcrb
loop
insb
pop
xchg
dec
add
sub
test
xchg
lret
mov
out
mov
xor
sub
icebp
insb
clc
movsl
push
call
rcrb
pop
cmp
addr16
aas
xchg
add
sub
nop
inc
inc
stc
xchg
shlb
outsl
adc
pushf
pop
dec
fwait
ror
mov
pushw
add
jae
out
lea
adc
add
cmp
add
outsb
cmp
loop
xchg
dec
or
aam
jge
and
add
imul
and
daa
loope
out
fidivrl
fists
shll
xchg
xor
cmp
out
orb
adc
dec
cmovns
cld
jle
shll
sahf
test
adc
add
pop
xor
shlb
sbb
icebp
daa
pop
cmp
ret
test
sbb
clc
xchg
lret
jns
add
test
js
sbb
push
out
xchg
or
add
xor
push
lea
out
loopne
dec
aam
addb
sub
mov
or
mov
mov
sub
and
test
insl
mov
xchg
push
cld
je
push
rcll
out
ret
scas
je
ret
popf
ljmp
rcr
inc
xchg
jge
and
xchg
sarl
out
subb
push
push
mov
xchg
mov
mov
imul
dec
jp
cs
sub
icebp
ja
mov
adc
outsl
popf
stc
push
push
sbb
jmp
mov
mov
pop
ror
push
jno
je
jbe
jo
and
jnp
and
inc
push
lret
xor
arpl
jl
scas
aam
mov
xlat
fadd
push
test
xchg
sbb
push
outsl
xorl
bswap
sahf
pop
rcll
leave
sbb
push
dec
mov
and
outsl
push
push
out
les
out
dec
xchg
cmp
jns
mov
sbb
or
std
stos
js
pop
test
jmp
mov
fmull
jno
clc
xchg
xchg
push
xchg
stc
mov
lahf
add
cmc
pop
mov
or
jp
leave
stos
leave
out
out
ja
sbb
loope
or
lods
cmp
sbb
ljmp
fistps
out
push
lock
ret
mov
popl
mov
fmull
enter
push
insl
jb
lcall
xchg
xor
mov
jnp
cld
out
hlt
mov
cmp
flds
out
out
daa
pop
ret
inc
mov
xor
aas
mov
adc
or
adc
jae
pusha
add
je
jae
repnz
in
dec
cmp
jo
mov
cmp
push
cmp
es
xlat
lods
aad
or
cmpsl
dec
sti
test
adc
pop
ficoml
add
or
xor
and
pop
jge
sahf
xor
push
cmp
cmpl
rolb
push
adc
nop
mov
xor
sbb
lahf
jns
dec
push
outsb
adc
imul
xchg
jle
jns
repz
cs
xchg
es
popf
pop
loopne
das
data16
outsl
xchg
std
push
ljmp
sub
jge
pop
jmp
sbb
sti
fs
ja
shlb
pushf
enter
loope
lea
aas
adc
arpl
cmp
inc
mov
lods
cltd
push
lcall
out
xchg
push
jmp
sub
sub
loope
mov
mov
sti
pop
jl
fisttps
ror
push
outsl
sti
cmp
dec
and
add
jp
loope
adc
sbb
mov
cmp
rorb
andl
aaa
lock
gs
add
or
iret
mov
daa
sbb
hlt
or
push
out
jns
js
test
out
push
and
sbb
sub
xchg
dec
addb
mov
sbb
pavgb
dec
xor
ss
dec
and
lea
inc
push
addr16
push
cli
xor
dec
cmp
out
xchg
xor
xchg
mov
lods
lret
test
ljmp
adc
enter
out
cmp
pop
cmc
test
or
insl
loope
xchg
jb
xchg
movsl
dec
xchg
cli
scas
test
sbb
jge
std
ljmp
mov
inc
xlat
mov
cmpsl
jnp
xchg
sub
dec
adc
or
mov
mov
pop
dec
cmp
stos
mov
lods
les
push
test
sahf
sub
add
push
lock
cmc
ljmp
push
mov
jo
mov
inc
xchg
popa
xchg
jo
dec
dec
int
or
ds
mov
pop
fsubl
mov
mov
rcrl
imul
adc
jnp
shll
mov
push
add
inc
cmp
add
jb
rcrb
ftst
aad
int3
adc
mov
jge
in
scas
dec
jle
mov
mov
jmp
xchg
fs
cmp
arpl
lea
push
dec
orl
das
aad
jg
aas
sbb
aas
leave
push
shrl
cmp
out
xor
jmp
leave
push
into
nop
cmp
ss
out
int3
or
inc
cmp
frstor
jbe
sub
std
xchg
jb
jmp
repnz
dec
jns
sbb
pop
push
jmp
jmp
imul
test
hlt
jge
and
cmpsl
mov
loop
lds
xchg
mov
lea
dec
xorl
mov
cmp
jbe
sbb
mov
scas
mov
sbb
push
mov
push
test
fisubl
pushf
and
fisubs
sarb
inc
adc
and
das
and
mov
mov
lock
fs
mov
loop
push
arpl
not
mov
sbb
ss
inc
cmp
add
test
cmp
fiaddl
and
cmp
in
loop
jl
and
sbb
or
lret
ret
cmpsb
sahf
repnz
sub
in
adc
sbb
andb
mov
in
dec
cs
bound
aam
mov
sbb
lcall
xor
int3
in
push
jo
adc
dec
ror
and
adc
xor
ficoms
xchg
dec
imul
mov
test
add
add
adc
test
inc
dec
or
test
rcr
outsb
aaa
shrl
test
out
push
push
jle
jnp
add
sti
xchg
fists
xchg
ss
xor
xchg
es
mov
nop
loop
lret
imul
xor
add
stos
pop
or
inc
test
fcomp
pop
iret
jg
mov
je
ret
adc
dec
adc
mov
pop
shlb
push
or
sahf
outsb
sub
push
packsswb
dec
out
mov
xchg
sbb
and
xor
ret
or
add
mov
mov
fsubrl
jl
mov
pop
fimuls
sub
mov
xchg
xchg
cli
fadd
jp
sub
test
scas
dec
sub
movl
push
dec
imul
mov
lods
iret
les
mov
inc
pop
repnz
nop
aad
adc
push
loopne
xor
fwait
dec
push
das
test
dec
xchg
and
arpl
sti
jbe
lret
aas
daa
and
sti
out
ljmp
jo
inc
xor
xchg
mov
inc
mov
sbb
push
adc
push
jl
ds
cmp
icebp
add
roll
aad
or
cmp
inc
aad
push
jle
xchg
or
aad
fsubrl
or
cmp
cmp
idiv
mov
inc
pop
in
hlt
into
adc
pop
nop
push
dec
mov
sub
mov
ficomps
or
ret
inc
ret
imul
mov
jb
rcrb
cmp
int3
stos
loop
mov
mov
clc
pusha
repz
cmp
cmpsl
sbb
notl
jecxz
arpl
fmull
ds
repz
lods
cli
mov
test
js
push
xchg
imul
movsb
mov
in
out
dec
lea
cmp
xchg
fsubs
sub
lahf
mov
imul
inc
inc
fs
mov
sbb
push
cmovg
or
cmp
jmp
lret
xor
lret
ficoms
popl
xchg
sbb
lods
jns
pop
dec
add
push
leave
pop
sarl
sub
push
mov
inc
sub
imul
pop
dec
mov
push
sbb
jmp
cmp
dec
or
push
test
cltd
incl
sbb
loope
in
xchg
mov
test
sub
and
nop
ret
test
pop
imul
adcl
aas
sub
sbb
outsl
xchg
mov
or
ficomps
push
cmp
ds
adc
sbb
roll
shl
mov
inc
decb
test
mov
dec
cltd
jg
mov
inc
jge
or
dec
or
mov
add
pop
mov
xchg
adc
dec
adc
xorl
mov
mov
pushf
mov
stos
jg
cwtl
xchg
push
scas
ja
shlb
mov
test
fiaddl
pop
add
cs
dec
dec
cmp
and
mov
cs
xchg
mov
xchg
pusha
ss
jnp
cmpsl
push
mov
test
das
out
call
and
lock
and
ret
add
imul
jg
jns
pop
xor
xchg
cmp
sbb
mov
pushf
pop
cmp
jmp
stos
insb
mov
popf
jbe
or
push
addl
repz
out
in
xor
sub
jecxz
add
sbb
cli
mov
stos
fmulp
ret
xor
sarb
cmp
ja
pop
xor
mov
faddl
in
fwait
pop
outsb
mov
sub
push
sbb
rclb
cwtl
and
stc
repnz
loope
loopne
xor
loope
aas
mov
xchg
ja
mov
shll
and
add
jmp
scas
or
and
sub
mov
mov
iret
aas
or
dec
jl
jo
or
imul
pop
push
cmp
jp
sbb
repz
push
mov
mov
mov
loope
cmp
lds
or
sub
jecxz
out
dec
mov
add
loopne
jae
rolb
pop
sub
in
pop
jle
imul
cltd
add
icebp
and
inc
pusha
lock
fucomip
ficompl
into
mov
pop
or
daa
aam
in
jns
sub
or
adc
addr16
pusha
or
and
das
mov
jae
mov
fsubrl
cmp
mov
adcb
or
gs
dec
jge
testb
les
inc
xchg
call
mov
insl
or
and
sbb
test
in
xchg
mov
cs
inc
and
insb
jg
cli
mov
shl
imul
push
fisubl
push
sub
shrb
pop
outsl
cltd
movsb
add
inc
xchg
inc
ja
jl
xchg
fisubl
test
sub
call
xor
pop
inc
movsb
enter
andl
xchg
xor
jge
rorb
decl
arpl
rcrl
ja
lock
addb
add
scas
mov
and
xor
sbb
jp
call
in
dec
out
sarl
push
pop
mov
xchg
xor
loope
cmpl
pop
push
pop
loope
pop
mov
sbb
and
jne
adc
aad
test
test
cwtl
dec
outsb
pop
iret
les
test
mov
and
dec
addr16
push
cmp
add
sbb
push
imul
dec
fwait
aaa
push
sub
lods
inc
lcall
fnstenv
mov
cmp
xchg
pop
pop
jne
lea
sahf
push
out
sbb
cmp
sbb
mov
sub
ljmp
jb
das
aaa
push
or
add
jns
hlt
inc
and
insb
ret
and
dec
push
lea
mov
dec
sbb
xchg
mov
cmc
call
mov
cmp
cmp
xchg
add
jecxz
das
sub
mov
fnstsw
sbb
dec
add
sub
std
xlat
xchg
lret
add
xor
out
inc
sub
dec
sbb
lahf
test
xchg
inc
add
mov
fsts
cmpsl
xor
cmp
fwait
aam
or
xchg
rcl
sub
push
clc
aaa
or
dec
popa
test
jecxz
lret
mov
shl
mov
adc
cmpsb
pop
imul
sbb
loop
jns
mov
adc
popf
ret
sub
hlt
sbb
rcll
mov
cwtl
fcmovnb
jb
cmp
push
mov
repz
add
ljmp
inc
jno
lcall
mov
stc
test
lret
lds
jge
pop
mov
cwtl
imul
outsb
push
push
stos
repnz
or
jl
dec
or
and
push
aam
ret
sti
mov
insl
lods
mov
adc
push
dec
ret
mov
xchg
test
mov
sbb
in
or
rcrb
pop
inc
mov
jnp
in
sub
jmp
cmpsl
das
jnp
fdivs
andb
cs
adc
mov
jae
les
add
bound
lahf
add
sbb
mov
adc
pusha
cmp
push
lcall
jbe
cli
inc
or
mov
pushf
xchg
in
pop
pop
pop
out
outsb
pop
or
sbb
inc
xor
pop
and
mov
add
aad
inc
sahf
and
test
icebp
sbb
xor
inc
stos
xchg
add
push
iret
mov
dec
std
mov
fs
roll
daa
lods
fcomi
jae
sub
cltd
or
pusha
xor
sbb
out
and
push
in
xor
scas
push
dec
dec
cwtl
out
xor
movsl
ljmp
dec
aaa
xor
push
add
mov
and
pop
cmpsl
rcrl
xor
push
push
stos
popf
outsl
and
cmp
inc
rol
dec
push
pop
push
pop
int
add
mov
push
ret
push
push
mov
and
push
sub
pop
fimull
and
sub
cld
pop
push
dec
ljmp
and
jmp
xchg
lahf
jecxz
pop
sbb
push
mov
sub
mov
pusha
int
lret
adc
cli
lahf
mov
mov
imul
pop
mov
insl
fs
cmpsl
adc
pop
rcrb
pop
mov
mov
bound
jno
push
lcall
sub
mov
xor
pop
sarl
enter
jmp
dec
xor
mov
in
mov
jg
jg
dec
in
outsb
push
inc
xlat
sub
push
repz
jbe
mov
je
imul
cmpsl
lahf
pop
xchg
mov
jno
cmp
jb
arpl
cmp
xchg
xchg
sarb
xlat
loop
addr16
inc
sbbl
inc
pop
insl
cmpsl
hlt
shlb
imul
push
insl
sarl
push
adc
add
andl
js
popf
aam
lea
iret
rorb
adc
adc
ret
es
pushl
push
out
or
mov
ja
jle
xor
jg
xchg
push
jp
in
sbb
mov
dec
lods
jno
shll
repz
push
push
add
dec
xor
sbb
leave
sbb
jae
out
and
clc
adc
out
push
mov
jecxz
in
cmp
xor
inc
push
xor
in
dec
jmp
out
icebp
sub
sti
mov
lret
js,pn
fwait
subb
movsl
shrl
inc
sub
adc
xchg
hlt
jae
fmul
or
fs
fsubs
dec
jp
imul
gs
mov
and
cwtl
ds
mov
dec
dec
jge,pt
cmp
push
lcall
out
sbb
jne
loope
push
repnz
das
mov
lods
mov
jge
mov
fidivl
mov
gs
jle
push
or
jns
or
out
fcompp
adc
inc
gs
xchg
inc
pop
das
and
movsb
push
pop
scas
fcomi
push
lret
and
mov
das
adc
roll
push
data16
xlat
outsl
les
enter
mul
test
shrb
pusha
lret
cmp
xor
push
sub
dec
jg
notl
dec
pop
add
push
sub
jae
inc
stos
adc
add
lods
adc
insb
and
stos
les
xchg
or
pop
stc
int
mov
jl
sub
loop
push
test
cmp
lock
fwait
in
sbb
cld
repz
pop
push
push
sbb
jg
mov
ljmp
je
test
mov
mov
clc
xchg
jp
dec
xor
push
sub
out
lret
sbb
sub
dec
jle
int
in
dec
ret
ds
int
push
outsb
adc
jl
leave
hlt
jl
and
scas
sbb
ror
sub
int3
sub
stos
xlat
xchg
sbb
push
mov
cmp
sbb
jecxz
adc
cltd
or
mov
sbb
dec
ds
arpl
iret
mov
lock
les
cmp
and
cmc
adc
pop
stc
cmp
pop
jle
cltd
outsb
lods
sub
mov
mov
xchg
xchg
mov
test
dec
in
cmpsl
clc
mov
cwtl
cmp
mov
out
dec
push
les
in
loope
adc
ret
add
repz
pusha
std
icebp
mov
outsb
push
adc
add
nop
push
rclb
or
jg
mov
and
jno
sti
out
and
aad
ret
andb
divl
nop
sbb
movsb
movb
xchg
jns
sub
ret
rolb
in
add
out
imul
adcl
xchg
dec
rcl
sbb
mov
or
loop
stos
pushf
xchg
add
icebp
push
push
mov
mov
push
out
adc
aam
sub
adc
movsl
testb
sub
cli
rcrb
push
or
mov
jmp
outsb
add
mov
data16
fcom
mov
imul
push
dec
add
cmp
mov
mov
or
std
dec
repz
movsl
cltd
or
pusha
arpl
mov
cmc
nop
inc
gs
iret
nop
mov
ss
rorb
xchg
mov
mov
andl
jb
leave
in
dec
roll
mov
mov
xchg
pop
cmp
pop
outsb
test
repnz
sbb
sbb
jecxz
xchg
xchg
les
stc
lds
cmp
mov
mov
sbb
mulb
popf
insb
fidivrs
cmp
mov
xchg
adc
or
sub
repz
repz
out
ret
popa
rclb
pop
sahf
jns
xor
js
and
sbb
jns
dec
aam
or
xlat
or
imul
adc
inc
out
fdivr
dec
lods
jo
lods
repz
aad
adc
aaa
lret
fidivl
fnstsw
inc
popa
add
xchg
data16
xchg
cmp
fstpl
js
jae
jns
mov
add
sub
xchg
lods
popa
aas
adc
gs
pop
inc
push
mov
mov
sub
xor
dec
dec
div
leave
or
jno
cmpsb
testl
pop
dec
xlat
mov
scas
sub
outsl
push
jle
add
mov
mov
sub
sbb
add
inc
int3
sbb
fdivrs
pop
and
lods
dec
movsl
aaa
add
in
cmpsb
mov
jecxz
jmp
mov
mov
dec
push
pushf
mov
outsb
nop
out
in
sub
sbb
add
out
lods
mov
jb
lods
adc
jge
xchg
mov
jle
shll
adc
mov
xchg
and
pop
lret
dec
pop
dec
mov
xchg
sbb
test
je
inc
iret
mov
push
loope
lret
mov
sub
jmp
int
push
ljmp
inc
jne
out
cmp
test
pop
rcl
or
mov
mov
nop
cmp
mov
dec
inc
int
imul
dec
cmp
repnz
bnd
xor
aad
stos
sub
incl
inc
sub
mov
jp
adc
mov
fstpl
lcall
in
push
fimull
popf
faddp
movsb
subb
lods
test
fimuls
pop
jne
shll
dec
cmp
cmp
mov
rol
ret
dec
fidivrl
ret
dec
sbb
pop
sar
test
xchg
dec
sbbl
dec
fldt
scas
xlat
mov
and
push
je
jl
mov
pop
je
repnz
jb
clc
loop
xchg
push
push
int
jbe
mov
in
jl
push
push
imul
inc
into
ljmp
bts
sub
lds
inc
push
jle
aam
lods
cs
adc
pop
pusha
loope
and
movsl
adc
insb
icebp
mov
scas
leave
xor
out
cmpsl
in
inc
xchg
repnz
cmp
in
insb
lcall
mov
xor
sbb
lahf
loop
test
rorb
lahf
test
push
fadd
lods
jbe
jnp
xchg
inc
adc
add
rcr
and
push
xor
mov
jge
stc
pop
and
pop
fidivs
frstor
ja
sub
pop
mov
mov
sbb
mov
imul
dec
pushf
jecxz
cmp
mov
lea
mov
orb
adcl
pop
icebp
pop
cmp
dec
sub
das
lods
jbe
cmp
sbb
arpl
push
insb
mov
mov
push
outsl
jge
gs
das
nop
fs
repz
adc
mov
lock
cmp
scas
adc
pop
aas
pop
test
sub
scas
movsl
fcomip
daa
ds
mov
xchg
mov
cmp
test
scas
call
js
mov
sub
cwtl
nop
mov
push
pop
mov
xchg
xchg
mov
or
cwtl
cmpsb
sbb
dec
sub
jl
cmpsb
jg
orl
std
fadds
icebp
out
lcall
mov
sub
mov
pop
push
gs
addb
sti
jl
mov
push
out
or
popa
push
inc
rcrl
loopne
jl
push
jle
adc
movsb
lcall
and
adc
mov
xlat
iret
cs
aaa
out
push
mov
lea
movsl
clc
mov
mov
out
enter
mov
jmp
out
sub
inc
add
jnp
cmpsb
mov
clc
sbb
pop
outsb
aas
sbb
xchg
or
lret
adc
test
mov
mov
jl
testb
int3
imull
cmp
test
aam
jecxz
out
xlat
in
sti
push
loopne
scas
pusha
pop
insb
sbb
inc
add
mov
aad
push
sbb
aad
and
mov
add
outsl
mov
xor
dec
jg
aas
ljmp
into
lods
repnz
adc
ret
and
aam
out
out
aaa
jno
sbb
scas
mov
testb
fisttpl
mov
cmpsb
sub
mov
gs
sub
outsb
das
in
loope
push
mov
inc
out
out
adc
bound
lds
mov
xor
adc
pop
sbb
adc
mov
into
add
mov
mov
sub
fmul
or
sti
mov
call
push
aam
xorl
lock
aas
jecxz
pusha
or
popa
icebp
dec
stc
push
or
popf
scas
dec
call
fcmovbe
mov
out
jmp
xor
test
test
ficoml
inc
ret
es
inc
adc
enter
adc
aaa
repz
inc
pop
hlt
sub
lods
sub
int
outsb
and
inc
or
cwtl
push
sarb
popa
or
loop
dec
lcall
mov
add
adc
insl
sbb
push
icebp
repnz
lahf
and
loopne
xor
mov
test
arpl
lods
xor
cmc
mov
fsubl
in
add
out
in
pushf
sub
nop
bound
cwtl
filds
sub
ficomps
icebp
mov
call
arpl
dec
dec
repz
mov
jae
add
testl
fisttpl
sbb
out
mov
subb
scas
push
sub
addr16
stos
push
xor
adc
stc
aad
mov
mov
ret
or
mov
cmc
add
scas
push
or
adc
fildl
hlt
or
lcall
cmpsl
rol
jmp
inc
push
jg
leave
mov
mov
add
mov
xchg
outsl
lcall
mov
ja
test
xchg
shlb
scas
xor
or
mov
or
lds
stos
iret
mov
inc
xor
pop
sub
pop
iret
lret
xor
mov
inc
xor
sub
mov
mov
mov
or
add
mov
js
lock
dec
sub
pop
jg
cltd
cwtl
lcall
int3
dec
fs
pop
xchg
data16
sti
and
pushf
mov
xchg
outsb
dec
cmp
or
xchg
mov
lret
mov
cmp
inc
sarb
stos
iret
lret
inc
out
sti
sbb
inc
jno
rclb
ret
fists
cld
ret
xor
pop
inc
mov
cmp
dec
push
pop
js
cli
cmpsl
stos
inc
xchg
push
sbb
sarl
cli
add
jns
les
pop
stos
and
loop
jns
lds
cli
cmc
sarl
and
pop
lds
jg
jae
push
xchg
shll
dec
xchg
jo
pop
push
push
and
fs
mov
inc
shlb
cs
cmp
rcrb
cmp
addl
sbb
fisttpl
or
fmul
add
dec
loop
sub
ja
les
loop
mov
in
sub
es
sub
into
fdivrs
xchg
int3
push
add
sbb
mov
mov
ret
or
lods
push
or
cmc
movsl
loop
jecxz
lds
mov
cli
aas
bound
stos
and
mov
dec
movsb
icebp
dec
pop
mov
push
dec
loope
movsl
add
stos
pop
addr16
inc
dec
icebp
cmp
sub
inc
mov
mov
dec
int
and
test
les
pop
enter
scas
push
jle
pusha
ret
test
pop
push
jo
pop
sub
outsb
pop
ss
jle
out
mov
push
out
mov
xchg
fwait
cli
cli
jns
xor
xlat
addr16
jg
in
repz
and
scas
sbb
mov
xor
push
lcall
pop
shlb
jae
in
mov
cmp
ss
es
or
lods
fdivrs
outsb
test
js
js
fdivrs
mov
pop
stos
cmpsb
test
push
mov
xchg
mov
inc
fdivp
jbe
mov
loope
inc
jmp
mov
mov
xor
push
and
into
mov
dec
mov
sub
lret
adc
dec
fildll
jl
cmp
push
lock
dec
push
mov
add
cwtl
stos
inc
mulb
and
push
repnz
jne
push
popf
movsb
mov
lea
mov
aam
add
inc
dec
and
push
jae
ss
stc
mov
push
cmp
pop
xchg
aad
mov
mov
mov
inc
mov
out
cmp
addr16
lods
jne
lret
pop
pop
push
add
adc
imul
cmpsb
push
push
sti
mov
test
push
cmc
or
ret
test
pushf
decb
xchg
sub
enter
pusha
jns
icebp
jmp
or
lcall
inc
out
sbbl
inc
adc
push
mov
decl
mov
outsl
shr
fucom
cmpsb
mov
xchg
mov
faddl
or
mov
ljmp
jbe
aas
shr
sahf
xchg
subl
cmpsb
inc
cmp
xlat
rcrl
mov
xchg
pushf
sub
icebp
push
mov
push
jg
sub
dec
inc
lock
jmp
ret
ror
movsl
insb
or
inc
js
add
jmp
dec
push
mov
push
mov
dec
cmp
mov
inc
sub
mov
xor
scas
push
mov
adc
jae
mov
sbb
pop
int3
mov
lahf
jno
cmp
mov
shr
xorl
loope
mov
bound
pop
arpl
ljmp
je
sub
inc
mov
add
rcrl
or
nop
loopne
in
or
push
pop
fsubs
mov
int3
out
mov
mov
jne
in
cli
cli
jo
in
pop
push
js,pn
or
mov
mov
test
mov
cmp
aam
incb
cmp
ja
sbb
sbb
push
push
xor
and
cld
mov
xor
js
inc
jne
xor
pop
mov
aas
das
xchg
jnp
fstpt
xorl
jle
pop
out
jb
mov
call
or
push
lds
and
sbb
xchg
cld
les
dec
dec
mov
jne
dec
call
xlat
pop
push
dec
imul
sub
pop
lods
fs
mov
xchg
jl
jnp
or
mov
cmc
lcall
inc
aas
in
and
cmp
adc
adc
call
lods
cltd
jo
adc
ss
loopne
jne
cmp
movsl
inc
lret
push
jecxz
fisubl
or
xor
imul
mov
pop
jnp
inc
repz
mov
pop
sbb
out
int3
xor
pop
xsaves
mov
or
loopne
cwtl
push
add
outsl
adc
ret
sti
jo
test
jns
daa
fstps
push
js
dec
mov
cld
insb
mov
aas
inc
ljmp
adc
xchg
inc
in
pop
addb
fs
xchg
cwtl
jb
dec
lds
fldenv
fstpl
ja
xchg
sub
mov
das
jno
pop
lcall
loope
in
mov
xor
cld
push
iret
gs
adc
shr
sub
xchg
rolb
cwtl
pushf
sub
call
icebp
pop
add
mov
repnz
gs
sub
mov
push
lods
xchg
xchg
sub
jmp
add
jns
test
std
movsl
and
jae
call
out
jns
cwtl
daa
push
push
in
cld
and
jne
jb
cmpsl
lods
mov
cli
pusha
stc
call
mov
jae
mov
shr
in
js
push
pop
pushf
rorl
aad
icebp
divb
ud1
sahf
xchg
pop
mov
sahf
loop
test
mov
sbb
mov
mov
jae
lods
dec
fsubl
sbb
pop
xchg
sbb
lret
mov
mov
sti
and
orb
out
mov
or
add
cld
sarb
call
int3
dec
pop
addr16
xor
push
xor
shlb
push
aas
jne
adc
or
jns
push
xlat
cwtl
in
jp
add
fnstsw
xchg
jp
int3
xchg
and
lret
fidivrs
mov
and
and
in
clc
insl
adc
aaa
ds
subl
mov
sub
pusha
subb
gs
or
outsb
cmp
pop
mov
hlt
push
and
mov
sub
sub
mov
xchg
cld
sub
sbbl
hlt
dec
orb
xor
lret
cmp
cmpl
ror
gs
pop
mov
repz
loopne
fmuls
add
leave
test
sbb
filds
dec
mov
mov
dec
mov
lret
inc
lret
add
xchg
pop
into
lret
sbb
in
dec
mov
movsl
push
leave
repnz
and
inc
fwait
lahf
rolb
test
dec
adc
movl
insl
addr16
out
xchg
ret
and
adc
imulb
push
movsl
cmc
jmp
adc
ret
test
test
nop
test
sbb
pop
inc
scas
rclb
mov
loope
sahf
lret
xchg
and
jb
xor
jne
cmp
clc
inc
and
xor
xchg
ret
push
xor
fwait
sti
orb
mov
call
sbb
sti
xlat
xchg
jb
sub
cmp
jne
or
insb
outsl
ja
sahf
push
stos
mov
mov
popf
pop
sahf
pop
dec
cmp
xchg
sbb
adc
jecxz
or
and
and
popf
dec
and
lret
mov
mov
push
xor
inc
or
mov
sbb
das
sarl
fidivl
mov
and
shlb
add
xor
daa
lods
sub
mov
enter
fwait
lods
std
sti
pop
push
mov
je
cmp
mov
les
arpl
leave
sbb
pop
xor
fmuls
loope
arpl
mov
pusha
in
xor
jo
jb
pop
mov
shl
cmp
int3
dec
inc
sub
fwait
scas
dec
push
dec
decl
ja
push
pop
cmp
orl
test
fcomp
and
and
jns
aaa
sub
fcmovu
push
sti
decl
popf
outsb
dec
in
fcomip
mov
jbe
test
lock
and
pusha
xchg
scas
aam
outsl
dec
jnp
cmc
mov
arpl
push
push
sub
cli
dec
mov
add
or
jb
iret
dec
mov
out
cmp
sbb
mov
fs
inc
xor
cmp
or
sub
dec
and
cmp
pop
push
out
in
scas
xchg
pusha
xchg
xor
jecxz
jo
xchg
pop
stos
dec
mov
lret
int3
or
fstps
pop
inc
mov
mov
cmp
out
call
js
sub
lahf
cld
and
movsl
adc
sbb
add
and
push
adc
and
dec
jb
mov
icebp
pop
xchg
scas
cmp
in
dec
add
in
pop
pop
bound
and
out
jbe
mov
cmp
push
sbb
out
mov
add
xchg
xchg
call
or
fbld
cli
xchg
gs
pusha
cmp
fnstcw
sub
xchg
jl
sar
mov
ss
xrelease
xchg
push
stos
or
pop
mov
mov
push
cmp
std
sbb
mov
enter
xlat
test
sarl
lret
ret
mov
mov
sti
pop
dec
jle
mov
xor
ss
pop
add
and
out
insb
stos
mov
out
push
pop
ret
jb
xor
loope
lds
mov
mov
push
pop
rclb
cmc
push
and
cmp
xchg
push
mov
bound
fwait
ja
outsb
out
fs
add
aad
shlb
inc
bound
repnz
and
xor
mov
jecxz
push
pop
out
ss
push
cmovs
push
dec
ljmp
adc
je
adc
repz
and
or
sub
out
jg
and
cmp
mov
addr16
out
stos
adc
jmp
sbb
or
jne
adc
aas
jnp
sbb
rcrl
xchg
jecxz
xchg
push
daa
je
dec
add
movsl
sarl
push
adc
rcll
inc
jbe
lods
jle
popf
scas
pop
nop
mov
jl
jle
fs
and
or
pop
rcl
pop
mov
mov
lret
xchg
and
out
or
inc
jle
dec
jb
sahf
push
push
dec
imul
leave
out
or
in
mov
pop
push
adc
iret
mov
dec
inc
mov
or
in
sti
add
pop
pop
lods
pop
xor
mov
mov
cld
test
dec
shr
sub
out
pusha
mov
or
xchg
or
sub
cwtl
jp
or
call
test
sbb
test
shlb
sbb
jbe
in
das
in
insb
push
mov
loope
push
mov
sbb
data16
mov
sahf
fcompl
adc
jge
mov
in
ss
roll
mov
loopne
mov
fstpl
push
iret
xchg
mov
aas
in
sub
xor
test
dec
lea
aam
pop
mov
jns
dec
push
cwtl
inc
jmp
adc
xor
pushf
lret
fisttpl
leave
mov
nop
push
dec
inc
fimuls
imul
js
cltd
push
add
and
push
xor
movsb
in
and
adc
pop
cwtl
xlat
xchg
scas
clc
mov
xor
mov
imul
iret
flds
add
jnp
imul
xchg
xor
addr16
dec
adc
and
enter
nop/reserved
dec
lea
in
or
dec
jae
fsubp
sub
lods
mov
jb
pop
push
add
xlat
out
iret
icebp
xchg
dec
out
mov
je
repz
add
outsb
test
xor
cmpsb
sub
clc
pop
mov
lock
fadds
mov
lods
fnstenv
push
mov
push
and
call
jmp
aaa
std
aaa
cmp
push
fdivrl
test
dec
in
cmpsb
xlat
out
idiv
xchg
push
lahf
out
addl
int
popa
sbb
sti
dec
enter
mov
add
imul
or
xor
sub
andb
xchg
mov
push
test
jns
cmp
push
mov
jge
loopne
mov
in
ljmp
sub
xor
outsl
aaa
lods
add
push
roll
mov
insl
shlb
nop
pusha
cli
push
or
mov
dec
sti
mov
or
sarl
fistps
pop
dec
cwtl
dec
sbb
das
xchg
outsl
mov
jmp
sub
fidivl
hlt
mov
sahf
lcall
sbb
repz
xchg
xchg
mov
faddl
or
mov
push
or
inc
call
push
fcmovb
popf
sbb
std
fistpl
int3
pop
into
jle
jb
pop
push
dec
pop
push
das
lret
arpl
cmp
scas
mov
frstor
mov
neg
into
mov
cld
mov
push
pop
sub
rcrb
or
mov
dec
in
aad
test
fidivrs
sarl
xor
pushl
xor
add
loopne
pop
mov
sbb
loopne
pop
push
and
cmp
rcrb
add
test
mov
jbe
jne
das
pop
mov
mov
jns
adc
jb
arpl
std
jo
inc
lahf
push
add
pop
jno
andb
fadd
xor
iret
fisttps
fsts
outsb
ret
jne
int3
push
xor
inc
inc
and
mov
andl
shl
rcll
push
xor
movsl
movsb
subl
mov
or
pop
jns
or
push
xchg
cmc
mov
adc
and
cwtl
dec
sbb
cs
xor
mov
or
lret
inc
test
jg
ljmp
cmc
call
es
cmp
dec
mov
int
pop
test
aam
xor
pop
enter
ja
push
fwait
std
or
cltd
inc
stc
xchg
mov
mov
pop
scas
jmp
inc
call
push
dec
sub
orl
adc
adc
cmpsb
or
insb
cmpsl
mov
gs
hlt
scas
stos
imulb
das
inc
inc
js
loop
out
sbb
ja
mov
inc
mov
lahf
inc
jns
xchg
lret
push
jp
insl
jp
aam
mov
push
pushf
pop
xor
nop
add
loope
and
cmc
xchg
lods
repz
xlat
xor
mov
in
xor
or
loopne
aas
mov
shr
loop
test
popf
cmp
iret
mov
push
ret
push
int
sarb
xchg
outsb
mov
pop
jmp
xlat
sub
adc
adc
push
movsl
call
mov
mov
inc
enter
inc
add
and
inc
call
pop
pop
ret
cmc
or
jns
pusha
movsl
sub
in
or
xchg
cmpsl
insl
stos
mov
vmread
popa
cmpsl
popa
imul
stos
test
cs
cmpsb
mov
adc
jp
xor
mov
insl
xor
push
enter
aas
push
sub
lret
mov
and
outsb
popa
lret
jo
cmp
aas
jge
xor
cmp
fs
mov
aam
stos
enter
jmp
adc
or
rcrl
outsl
mov
inc
cli
xlat
xchg
push
lea
ljmp
lods
and
in
pop
sub
andb
xor
adc
sbb
and
mov
loop
mov
mov
std
sub
adc
or
inc
insl
dec
inc
push
mov
dec
hlt
cwtl
pop
repnz
aad
lret
int
adc
int3
ret
mov
in
daa
sbb
dec
call
jg
push
daa
xorl
pusha
pop
mov
out
pop
scas
pushf
in
jmp
dec
subl
adc
sti
jecxz
pop
pop
pop
adc
js
jne
jge
adc
mov
sbbl
and
mov
ds
adc
pop
mov
imul
cmp
mov
jne
xchg
pop
fists
ficomps
xlat
add
lods
fldenv
sub
out
mov
cmp
sbb
adc
cltd
in
or
fisubl
push
adc
jae
fstpl
add
mov
insb
arpl
ljmp
dec
ja
dec
dec
lods
out
pop
mov
dec
arpl
les
call
cld
mov
arpl
mov
mov
sub
dec
bound
mov
pop
loope
mov
jo
sbbl
daa
ficomps
cmp
out
jbe
out
int3
push
inc
pop
imul
test
cwtl
push
mov
mov
add
sahf
mov
mov
mov
jne
imul
inc
ja
push
pop
outsb
push
jmp
add
xor
subb
jg
xor
outsb
push
test
shll
and
inc
inc
psubusb
dec
push
mov
push
jns
stos
aaa
call
jl
xchg
mov
fwait
sub
clc
popf
jge
fpatan
xchg
inc
jmp
popf
mov
jle
pushl
sbb
std
decb
xchg
loope
popa
andb
into
dec
sub
mov
xchg
cmp
and
xchg
out
lret
dec
sub
leave
push
shll
out
shl
mov
pop
push
jbe
jp
jo
negb
sbb
in
jb
ds
jbe
adc
and
popf
pop
not
xor
clc
repz
push
fbstp
cmpsb
push
int
stc
or
and
xchg
xchg
push
ljmp
lock
adc
aam
jp
inc
or
or
jno
mov
movsb
dec
adc
push
xchg
push
cli
sub
pop
mov
cltd
stos
lods
test
mov
shll
inc
pop
inc
sub
insb
test
mov
pop
outsl
pop
insb
inc
adc
cmp
addr16
cltd
cmovb
cmpsl
add
lret
lahf
or
cli
lcall
cli
imul
lret
jo
sub
xor
and
jecxz
jecxz
lahf
push
scas
int3
lahf
xchg
sub
sbb
sub
push
xlat
scas
xchg
imul
or
aad
xchg
mov
mov
and
pusha
mov
or
mov
add
sahf
stos
jecxz
mov
cmp
fdivl
pop
stos
xlat
aas
xor
jb
ja
adc
mov
aas
les
fmul
mov
adc
mov
data16
or
add
pop
test
cmp
stos
orl
jno
fdivl
repz
gs
jl
jl
xor
jo
cli
shlb
push
mov
cmpsb
mov
scas
mov
sbb
lcall
sbb
mov
cmpsb
mov
sub
cmp
shl
inc
psubusb
inc
fstp
shr
test
adc
mov
cmp
test
mov
imul
or
jae
push
and
mov
jge
inc
adc
rcr
fadds
mov
rcl
les
jnp
sbb
or
xchg
adc
add
outsb
repz
imul
and
out
xchg
adc
pop
cltd
pop
lods
lods
pusha
nop
cmp
sbb
mov
pop
in
int
cmp
sub
cltd
jp
sub
push
add
sbb
je
add
popaw
pusha
loopne
pop
adc
cwtl
aad
popf
pop
jnp
dec
adc
adc
testl
add
xchg
fmuls
movsl
push
ljmp
pop
rcll
cmp
inc
dec
stos
add
dec
sub
fdivp
dec
jmp
mov
and
cmpb
ss
xchg
lret
ret
push
xchg
mov
mov
and
cld
xor
mov
xor
lds
imul
in
inc
lods
and
xchg
mov
push
in
jns
fnstcw
xchg
je
bound
je
inc
ljmp
in
mov
repz
pop
add
lods
add
dec
dec
inc
xchg
adc
dec
lret
and
stc
lea
cmpsb
mov
dec
ja
jmp
mov
lcall
out
insl
sbb
cmp
popa
mov
pop
pop
popa
sarl
or
negb
cmp
inc
and
inc
adc
fcomps
sbb
jmp
addb
mov
idivb
or
inc
bound
xchg
pop
dec
jae
and
and
ret
cmp
pop
test
out
inc
pop
push
sub
mov
aam
out
jae
imul
jp
iret
pop
push
lahf
dec
cmc
jmp
adc
push
mov
push
lret
push
dec
loopne
jns
hlt
cmp
aaa
push
repz
inc
mov
lcall
pop
mov
mov
adc
xor
bound
sbb
jno
jne
lods
sub
out
jmp
aaa
push
fisubrs
xchg
push
dec
jmp
jae
hlt
add
xchg
int
jle
sahf
jbe
arpl
in
jg
xor
aad
xor
ljmp
mov
aas
ret
lret
data16
outsl
xchg
cmp
xchg
ds
ret
sbb
xchg
fdivs
dec
rcl
mov
loopne
xor
lds
fs
push
xor
inc
popf
pop
cmp
ret
clc
nop
jne
push
out
xchg
mov
xchg
out
dec
jbe
outsl
imul
inc
js
sub
adc
fimull
enter
dec
testl
fldcw
sub
test
fistl
sub
sti
sub
inc
insb
sbb
or
cmp
fs
negb
or
mov
adc
jns
push
imul
mov
mov
jp
xchg
out
out
xchg
jl
sbb
push
fiadds
jnp
lea
xchg
mov
mov
fistps
mov
pop
stos
ljmp
leave
xchg
push
cmp
orb
ret
mov
leave
pop
lcall
or
ja
adc
nop
cmp
jp
mov
push
add
cmc
mov
xor
loope
roll
jg
xor
push
push
nop
xorl
aam
xchg
jae
loop
imul
fmuls
sub
lret
and
scas
pop
arpl
or
js
sub
xor
inc
cmp
or
in
add
test
negl
mov
movsb
adc
pop
pop
xor
loope
sbb
andl
pushf
inc
lret
imul
popf
and
imul
lods
xor
das
les
sbb
push
divb
pop
pop
in
jmp
cmp
sub
xlat
icebp
xor
cmp
outsb
jl
sbb
aam
and
movl
fimull
int
loop
xlat
and
mov
pop
stos
shl
ficoml
roll
inc
lods
xchg
adc
push
xlat
jge
fdivs
movsb
scas
mov
popa
jbe
adc
es
jg
cmp
sbb
push
jns
pop
std
rol
out
pop
and
push
and
dec
popa
mov
mov
sbb
mov
fisttps
and
inc
add
rcrb
test
and
and
jnp
aad
jnp
lds
adc
aaa
ljmp
push
cld
mov
mov
mov
js
or
jp
mov
inc
lods
push
cwtl
aam
dec
rcl
mov
lods
pop
and
int3
gs
push
fcmovnu
ret
inc
sti
je
insl
fsubs
inc
push
notl
mov
and
jmp
scas
inc
outsb
rorl
in
std
ffree
cmc
sbb
pusha
mov
mov
nop
les
sub
or
sbb
pop
jb
daa
cmpsl
and
hlt
out
movb
mov
ds
push
adc
sbb
mov
popf
lods
cmc
mov
xorl
cmc
lods
xor
xchg
ror
mov
jns
negb
mov
dec
adc
inc
xchg
fmuls
cmp
cmp
pop
mov
lock
pop
sarl
jb
pop
xchg
pop
faddp
and
or
ret
out
jge
adcb
xlat
add
scas
mov
out
pusha
xor
pop
out
xor
push
shll
fwait
xchg
movsb
hlt
cwtl
insl
aas
int3
and
sub
dec
les
ret
add
mov
lcall
push
pop
testl
mov
cmpsl
mov
pop
in
fsubrs
lahf
mov
idivb
xor
cmp
jecxz
or
pop
loope
xchg
cmpsb
push
js
mov
cmpsl
xor
call
jmp
sub
imul
sbb
cmp
xor
mul
nop
loop
bound
or
mov
xchg
mov
std
cmp
rcr
lret
rorb
sarl
nop
movsb
inc
sub
call
data16
dec
mov
rcrl
jl
adc
fdivl
mov
dec
cmp
out
ss
adc
add
pop
mov
idivb
jl
or
inc
hlt
sahf
in
mov
or
xchg
xchg
jge
lock
inc
pop
and
call
fcmovu
aam
or
mov
movsl
int
pop
jg
xchg
dec
clc
adc
movsl
or
jno
loope
dec
cwtl
int3
or
lret
imul
push
push
dec
gs
mov
into
push
shlb
adc
sti
psadbw
test
pop
cmpsl
push
lret
decb
les
jae
jbe
inc
mov
pop
lods
stos
daa
xchg
clc
adc
test
pop
add
mov
scas
sbb
pusha
pushf
call
push
sub
rorb
js
in
call
or
fadd
fwait
mov
es
jo
sti
push
in
and
les
insb
add
out
cmp
xchg
push
push
imul
in
test
inc
movsb
into
push
mov
in
sub
stc
sarb
icebp
or
sub
dec
push
adc
dec
jge
mov
outsb
mov
sbb
mov
fcomps
leave
sub
rol
mov
xor
push
aas
xchg
pop
sub
xchg
push
xchg
jecxz
add
jns
jge
ja
stc
test
psubd
mov
xor
dec
addr16
inc
mov
bound
aad
leave
push
cld
sbbl
imul
sahf
int3
add
sarl
inc
and
add
adc
sbb
fbld
dec
test
xlat
and
dec
sti
jl
and
in
pop
js
mov
sub
aam
cmp
jecxz
xlat
inc
cmpsl
stos
and
pushf
push
xor
imul
insb
mov
ljmp
pop
xchg
scas
lret
and
arpl
int
adc
mov
lret
mov
pushf
push
sub
test
jl
xchg
dec
pop
pop
div
mov
mov
sub
ret
push
movb
jnp
fsubl
jle
mov
bound
in
mov
mov
jns
cmpsl
inc
jno
push
xchg
rol
adc
fs
fxtract
call
movsl
sarb
xor
cmp
loop
jl
push
cmc
jmp
out
sub
scas
sar
mov
sahf
sub
out
or
shlb
add
imul
inc
movsb
mov
sbb
inc
in
xor
mov
fs
jns
leave
cltd
jl
out
out
xchg
add
divb
add
jmp
fmul
add
popf
pop
push
fisttps
les
mov
hlt
pop
loop
inc
cmp
cmpsl
std
sub
and
mov
loop
jb
mov
jne
pushf
mov
addr16
xchg
push
inc
cld
test
add
lcall
fmull
popa
test
cs
test
push
mov
mov
inc
je
subb
mov
cld
aam
into
sti
fidivs
xchg
ficoml
rcll
jecxz
test
icebp
jae
in
loopne
inc
and
lret
xor
mov
ret
or
sub
test
out
mulb
ror
add
pushf
insb
or
and
stos
in
outsl
repz
jg
add
lret
out
dec
outsb
int3
mov
dec
loope
aas
fwait
mov
dec
ss
push
in
aas
pop
in
dec
xchg
push
loop
sarb
mov
lret
jno
nop
int3
sub
add
dec
mov
imul
fwait
inc
sbb
jecxz
cmp
sahf
cmp
mov
mov
sub
sbb
dec
cs
jo
imul
push
inc
imul
sahf
add
setle
rcrb
push
lds
in
add
lods
loope
mov
cli
jne
in
mov
lea
sbbl
sub
push
test
push
push
ret
stos
sbbb
or
adc
ss
lret
xlat
stos
inc
call
pop
shl
sbb
lock
imul
dec
mov
inc
push
xor
and
inc
pop
jecxz
push
movsl
inc
mov
sub
xor
outsb
iret
test
inc
xor
add
mov
xchg
sbb
and
test
fwait
xchg
add
inc
rolb
cmp
imul
xchg
dec
jmp
pop
test
mov
mov
and
shll
or
mov
stos
add
xlat
mov
adc
xor
pop
inc
mov
mov
xchg
mov
xor
dec
mov
xchg
in
daa
inc
negb
jo
iret
into
jno
sbb
stos
xor
lcall
push
hlt
and
inc
in
scas
jecxz
or
daa
outsl
fiadds
jg
push
popf
inc
idivb
cmpsb
cs
xor
mov
out
push
sbb
jb
out
cmp
mov
in
insb
lret
inc
cmp
xor
dec
cmc
fistpll
cmp
cmc
inc
pop
push
mov
mov
adc
fsub
lods
shrl
lods
out
add
cwtl
mov
sti
xchg
aad
frstor
push
sbb
in
shrb
cmp
xlat
xor
sahf
and
pop
mov
stos
jle
or
ljmp
xchg
loope
add
inc
int3
nop
push
cli
ja
jno
and
jl
sarb
pop
cmpsl
add
cmc
shll
icebp
xlat
test
adc
imull
fcomp
rorb
mov
mov
nop
out
popf
ds
lcall
push
jno
inc
nop
aad
xchg
and
inc
mov
mov
push
mov
hlt
cmp
cld
fcmovne
inc
adc
mov
out
or
jge
mov
insl
jnp
loope
enter
loope
mov
mov
sub
stc
call
jle
mov
ficomps
pop
jne
ficomps
sbbl
mov
jo
test
jbe
cpuid
lcall
test
lods
xchg
mov
and
arpl
movsb
fstpt
std
push
ffree
lock
sub
pop
into
in
sbbb
adc
push
pop
push
in
mov
mov
and
dec
cli
add
nop
lock
push
jg
sbbl
lcall
mov
cmp
gs
loope
sahf
orb
stos
xchg
rcrl
dec
out
sbb
iret
inc
dec
xchg
mov
xorl
cs
loop
jbe
cli
pop
lds
movb
cmp
or
insb
or
sub
aam
push
jb
xlat
jns
imulb
mov
sub
sahf
fidivs
cmp
sub
aas
pusha
inc
mov
out
out
subl
out
popa
test
mov
lock
add
sarl
xchg
jg
and
in
lods
icebp
mov
cltd
add
outsl
mov
add
inc
cmp
in
lods
loope
pop
imul
pop
inc
mov
sbbb
mov
je
mov
or
aad
loope
jo
test
and
jb
add
loop
in
xor
insl
mov
mov
pop
test
dec
cmp
stos
adc
out
dec
sbb
test
pop
subl
adc
aaa
nop
in
cmp
out
pusha
lds
mov
rcr
mov
orb
xchg
lret
jle
gs
sahf
cmp
inc
add
xor
cmpsb
jle
pushl
sahf
cmc
lahf
dec
jmp
adc
jecxz
call
arpl
arpl
mov
subb
out
insb
lcall
mov
jg
orl
dec
xor
cs
push
push
push
cs
fiadds
imul
subb
pop
add
fisttpll
sbb
fwait
push
pusha
jae
push
test
pop
call
repz
xchg
dec
push
jg
test
xchg
enter
fcmovnbe
mov
jmp
jbe
xor
xchg
pushf
mov
mov
pop
push
push
mov
lahf
jno
mov
sbb
cmp
jno
xor
xor
cwtl
enter
xor
xor
push
adc
sbb
mov
shlw
push
arpl
push
js
fwait
mov
xchg
mov
mov
movsl
je
movntq
xchg
das
aas
aaa
dec
sbb
jb
pop
scas
lahf
jp
loop
fisttpll
push
pop
sti
jns
sub
add
movsl
nop
jmp
idiv
lea
mov
mov
inc
daa
and
loopne
repnz
repz
dec
pop
inc
push
inc
ljmp
shll
lahf
dec
mov
in
fcomi
lret
leave
cmp
jp
testl
push
sbb
fs
mov
cli
xor
cmp
insb
dec
inc
inc
jne
popa
mov
xor
mov
fildl
cld
leave
mov
aad
les
loopne
gs
xlat
jp
or
push
and
imul
jnp
nop
dec
fiadds
mov
lret
inc
push
pushf
inc
xchg
lea
pop
jnp
cmp
data16
xor
or
call
xchg
cmp
adc
pushf
sbb
dec
test
add
dec
mov
pop
cmpb
pop
iret
xchg
push
fwait
add
xchg
sbb
mov
sbb
out
loopne
and
test
lock
out
pop
adc
and
cmc
push
jmp
js
out
adc
shll
inc
pop
sbbl
outsl
xor
enter
pop
sub
int3
or
cmpsb
rcrb
mov
adc
negl
and
sbb
xchg
ffree
mov
lcall
stos
cmpsb
in
es
xchg
clc
data16
jnp
cwtl
push
out
mov
and
cmc
ss
ljmp
push
aam
push
and
xchg
cmp
xchg
gs
jg
cmp
fnsave
sti
mov
testb
cmp
lods
dec
mov
lods
push
mov
call
int
hlt
push
mov
data16
jmp
cld
mov
in
repnz
lcall
pop
adcb
push
mov
fcmovne
mov
dec
pop
in
repnz
cmp
dec
ja
test
cli
push
add
leave
sub
sub
inc
sub
in
roll
sub
jne
in
sbb
int
movsl
mov
add
jmp
outsb
jge
and
aam
pop
test
inc
pop
mov
mov
push
lods
lock
mov
aad
mov
lds
fdivrs
sbb
dec
rcll
enter
mov
cmp
jb
fldcw
and
test
repz
jne
es
or
adc
stos
sub
jno
cmp
notl
leave
inc
xchg
mov
push
repnz
mov
mov
cmpl
mov
shrl
roll
lea
and
lds
mov
xor
mov
nop
fcompl
push
xchg
insb
clc
insl
inc
adc
xchg
sub
pop
and
popf
mov
mov
mov
fcoml
cld
mov
rcl
sub
sti
dec
stc
dec
pop
push
mov
pop
and
jge
and
test
les
dec
cmp
mov
aaa
pop
xchg
push
lahf
in
jmp
mov
jmp
aas
mov
out
xor
cmp
sub
popf
int3
mov
dec
sub
movsl
addr16
sbb
sbb
jge
sub
cmp
and
popf
mov
adc
mov
sub
stc
or
rcll
pushf
ds
mov
push
push
mov
leave
adc
sub
jmp
xchg
add
lods
xchg
shll
xchg
adc
loope
pushf
insl
shrb
push
cmp
cmpsb
lea
dec
cmp
xchg
and
jne
xor
mov
adc
xor
jecxz
std
inc
jne
stos
mov
icebp
lds
shr
dec
add
test
mov
imul
xor
cmpsl
sub
int3
push
pop
mov
mov
mov
mov
dec
jbe
sub
fs
lahf
mov
ret
das
and
pop
xor
shrl
or
jo
pop
imulb
adcl
add
mov
push
jne
ljmp
je
rorb
mov
rclb
add
pushf
and
cmp
push
add
adc
pop
and
in
gs
out
aas
lret
jno
adc
cld
nop
lods
jp
fcomi
arpl
cmp
cmc
pop
push
jnp
clc
insb
sub
outsb
insl
xchg
or
enter
add
movsb
pop
xchg
les
sub
mov
fs
mov
jecxz
nop
hlt
cmpsl
enter
sbbb
movsl
sbb
outsb
cmp
push
enter
dec
ret
or
out
inc
mov
bound
inc
jnp
mov
pop
jb
sbb
jno
in
int
pop
in
loopnew
sbb
inc
add
mov
out
pusha
xorl
xor
add
sub
icebp
dec
or
loope
aas
xchg
shlb
and
repnz
push
inc
or
and
mov
repnz
mov
lds
and
ret
add
insb
in
aam
cmp
mov
out
push
lahf
xorb
mov
movsl
mov
sbb
sub
xor
je
aad
test
jecxz
push
je
loopne
lds
and
lods
and
fisubrs
and
cmp
mov
jnp
inc
in
std
mov
inc
bound
fldcw
sbb
arpl
pop
xchg
dec
testl
ds
jae
ficoms
test
nop
test
data16
iret
xchg
pop
pop
fists
inc
popf
dec
add
sub
shr
pusha
jb
dec
sub
iret
scas
mov
pop
hlt
fidivs
aas
mov
je
and
aaa
in
pop
inc
cmp
test
push
adc
insb
fsubp
ficompl
in
scas
push
or
xchg
add
hlt
jge
fs
int
cmc
fbld
fxam
inc
cmp
ss
mov
mov
inc
mov
sbb
mov
dec
jmp
mov
insl
fisttps
mov
test
adc
adc
icebp
xor
ljmp
jmp
loop
cwtl
hlt
pmaxub
shl
or
add
loope
xor
mov
cld
insb
insb
push
xor
and
imul
mov
je
cli
test
mov
ljmp
inc
mov
addr16
fistpll
hlt
adcb
sti
jbe
sbb
inc
mov
jle
movsl
ret
in
aas
push
cwtl
xor
adc
shlb
dec
lods
jg
or
stos
imull
push
int
lcall
pushf
aam
xchg
cld
sti
popa
or
fists
xchg
inc
imul
inc
nop
cli
xchg
and
adc
out
mov
repz
out
lret
div
inc
mov
adc
xor
mov
push
into
push
mov
ret
push
add
mov
lds
inc
and
xor
cmc
mov
sbb
ret
inc
bound
fstps
mov
lret
xor
lods
mov
jns
std
and
fldl
lods
mov
js
push
out
jnp
mov
jmp
fistpl
push
jp
das
aaa
scas
cmp
fdivrl
je
cmp
fisttps
sbb
nop
fadds
add
push
cwtl
xor
vpsrad
lock
mov
std
lods
pop
lret
arpl
jl
mov
jnp
imull
mov
adcl
mov
jecxz
xor
das
sahf
addr16
mov
lret
roll
std
jo
scas
ds
xor
adc
movsl
cwtl
xchg
mov
or
dec
divl
lret
mov
xchg
xor
cmpsb
rclb
ret
push
jge
jno
fnsave
mov
cli
pop
sub
aam
mov
popf
ljmp
scas
outsb
scas
out
nop
or
push
cmpsb
dec
mov
cmpsb
insl
nop
rorb
in
arpl
cli
leave
nop
sbb
mov
add
dec
jbe
adcl
sbb
data16
sarb
lcall
pop
lret
add
and
call
inc
outsl
jle
pop
sub
xchg
sub
cmpsl
das
inc
sbb
leave
lods
push
xor
or
out
andl
lea
jo
add
loop
jl
push
inc
or
sti
int3
subb
adc
mov
sti
xchg
push
jno
push
or
jno
sbb
nop
pop
jl
or
les
leave
cmp
aaa
or
lret
lret
mov
push
insb
sub
pop
data16
add
xor
add
xor
rcrl
sbb
cmpsb
add
leave
or
movsl
sti
pop
cs
dec
pushf
pop
push
test
sub
ret
xchg
xchg
jae
and
xchg
sbb
iret
into
ja
ja
inc
inc
pop
popf
and
popf
test
imul
add
mov
shll
jne
sbb
push
add
and
fidivs
test
mov
roll
outsl
xchg
or
pop
push
push
mov
xchg
ja
jge
js
inc
pop
and
add
push
pop
clc
mov
xor
sbb
cmc
sti
mov
movsl
je
sbb
int
inc
cmpsb
jg
xor
js
lcall
push
sub
push
scas
nop
sub
cmpsb
fldcw
pop
push
and
aad
sub
fcoms
xchg
fnsave
das
les
leave
movsl
or
xor
adc
add
add
mov
clc
daa
adc
sbb
or
xchg
aas
pop
mov
imul
xlat
sub
cmc
mov
mov
pusha
dec
mov
inc
leave
sbb
cli
daa
xchg
add
jecxz
xchg
lds
iret
iret
icebp
push
lods
in
movsb
push
gs
ret
add
and
popa
sahf
adc
or
scas
iret
out
call
fdivr
sbbl
movsb
mov
addr16
and
lahf
and
pop
nop
gs
inc
or
sbb
ds
dec
popf
movsb
and
cmpl
cmc
je
xchg
sub
cmpsl
inc
xchg
xlat
xor
lods
jne
leave
and
and
enter
dec
aam
jo
jge
int
loop
dec
mov
popf
popa
test
xchg
xchg
insb
mov
and
and
push
xchg
enter
cs
adc
inc
xchg
jo
inc
out
cwtl
aam
add
cltd
sub
adc
jge
in
inc
add
nop
ds
or
inc
jb
jbe
ror
loope
enter
sub
out
shll
and
orl
or
pop
mov
jl
cld
mov
clc
jae
shlb
or
imul
repnz
jg
inc
dec
mov
or
or
ds
lods
ljmp
and
pop
shl
or
xchg
adc
add
ljmp
and
xchg
jl
and
sub
sbb
adc
subb
mov
ret
xchg
mov
fiaddl
iret
mov
jmp
repnz
icebp
call
ljmp
jae
push
popf
mov
jb
mov
in
or
jge
sti
or
xor
scas
xor
xor
mov
adc
pop
and
sbb
add
jns
jne
iret
pushl
mov
lcall
or
inc
sub
jp
jmp
or
aas
outsb
sbb
popf
push
jbe
js
scas
dec
mov
repnz
adc
ficoml
push
fdivrp
js
fisubl
push
cmpsl
pop
dec
ret
mov
xlat
pushf
jg
and
rorl
subl
xor
test
dec
mov
leave
pop
pop
scas
xchg
push
and
enter
ret
sub
mov
sub
pop
or
imul
fsubr
push
xchg
inc
dec
fnsave
pop
and
mov
jb
repz
xlat
test
dec
loop
push
mov
out
rcrl
push
stc
xchg
movsb
loope
lret
cmc
and
aam
jns
loope
push
orb
cmp
loopne
mov
sti
jno
lcall
sub
mov
outsb
divb
add
push
dec
inc
cmp
mov
xor
div
loope
pop
xchg
pop
xchg
mov
das
jp
mov
filds
decl
push
sub
mov
dec
daa
pop
mov
es
addr16
sbb
int
aad
ds
push
iret
aam
push
push
mov
shlb
data16
test
test
imul
js
or
or
popf
shr
xchg
adc
or
xor
jnp
lcall
test
add
and
movsb
sub
imulb
daa
cmc
pop
scas
mov
push
aaa
pop
ret
sub
xorl
jo
test
mov
jmp
add
flds
nop
dec
pop
sbb
pop
and
cltd
add
and
rcrl
xchg
push
sti
mov
imul
xor
xor
lock
jo
lahf
push
flds
jp
mov
dec
cwtl
jg
cld
push
cmp
fs
mov
inc
xor
std
dec
add
jmp
xchg
add
add
js
in
adc
lds
push
cld
aas
push
pusha
push
jmp
iret
pop
sub
inc
mov
mov
and
cltd
imul
fldt
jle
in
and
mov
call
adc
cld
popa
xchg
in
mov
xor
jo
push
add
filds
lret
ja
xor
inc
int3
or
data16
xchg
repz
add
pusha
sub
dec
jg
mov
mov
dec
mov
mov
cmpl
sub
fs
push
mov
and
pop
cmpsb
out
daa
ljmp
int3
out
add
or
jno
xchg
hlt
mov
stc
dec
cli
and
dec
or
in
rorb
xchg
mov
push
push
and
pop
loopne
ret
sub
inc
xor
mov
stos
adc
sbb
xor
push
cld
cld
mov
insl
xlat
mov
ds
std
imul
cmp
mov
imul
push
sub
add
imul
pushf
lcall
or
arpl
gs
test
insb
frstor
inc
ds
add
aaa
test
mov
adcl
mov
jecxz
movzbl
mov
ficomps
ss
popf
dec
lea
ljmp
sbb
enter
scas
jae
into
mov
in
and
jecxz
pop
mov
mov
lcall
pop
cli
pop
xchg
jo
nop
and
adc
add
out
lock
in
stc
pop
int
sub
mov
sbb
push
xlat
addr16
jo
cmc
xor
push
cmpsl
cwtl
cltd
arpl
jp
stc
ja
popf
inc
sbb
adc
jg
mov
cmp
lcall
xchg
xchg
pusha
push
mov
test
sbb
jl
dec
xor
mov
mov
dec
ret
adc
icebp
push
out
xchg
and
push
iret
mov
inc
xor
pop
push
imul
mov
fimuls
mov
int3
pushf
jecxz
and
jns
mov
mov
sbb
cmpsb
pop
xor
lods
fs
lcall
jp
std
fists
mov
outsl
sub
mov
mov
mov
insb
in
mov
and
leave
pop
pop
cmpsb
fmul
lods
xchg
pop
js
mov
cld
movb
sbb
leave
insl
and
cmp
mov
cltd
mov
clc
or
lods
jb
movsl
push
lock
xchg
add
sti
clc
lcall
jae
aas
stc
jmp
xchg
cs
add
push
aam
add
and
mov
or
ja
sub
hlt
loop
repz
in
int
stos
mov
push
adc
cli
cli
mov
addl
loop
cmpl
daa
cmp
mov
imull
mov
mov
in
mov
push
lea
por
xchg
pop
cltd
inc
stos
xchg
popa
sub
inc
mov
lea
out
inc
push
lar
dec
fdivr
mov
cmp
call
xchg
shlb
imul
hlt
lahf
jg
imul
popa
cmp
dec
push
sbb
pushf
cmp
pop
xorb
push
add
lock
pop
mov
and
or
pusha
je
xlat
jnp
or
jo
inc
mov
cmp
pop
inc
js
lds
mov
jae
jo
adc
sbb
out
inc
pop
loop
jecxz
adc
cli
push
out
dec
cmc
mov
repz
add
lret
es
inc
mov
jmp
inc
les
pop
dec
mov
lcall
xchg
dec
sub
pop
sub
mov
shrb
push
add
sub
cmpb
int3
mov
pusha
jl
movsb
sub
and
xor
mov
aad
fsub
sbbb
shrb
jno
call
out
sbb
mov
out
sub
movsl
push
dec
cs
test
and
mov
xchg
dec
xchg
sbb
ficoml
sarl
int
inc
stos
fidivrs
shrb
decl
or
scas
xchg
jge
scas
lods
mov
faddp
inc
mov
mov
out
jnp
scas
cmp
fwait
sub
ljmp
xor
push
adc
js
push
repnz
jg
ret
sbbl
jg
jns
mov
push
jmp
sbb
into
cmp
sbb
push
les
jbe
arpl
mov
ja
cmp
fistl
cwtl
daa
mov
lods
add
push
adc
or
jbe
popf
sbb
ss
stos
mov
pop
fsubrl
loop
inc
fnstcw
stos
aam
leave
push
pop
lea
test
dec
xor
scas
out
movsb
push
fdiv
pop
jmp
xor
and
or
sbbl
mov
xor
push
pusha
push
iret
xchg
les
sahf
or
jl
mov
adc
inc
ret
pop
das
gs
inc
pop
stos
fisttps
mov
and
cli
sub
cld
cmp
ds
mov
cmp
out
shll
jns
jb
iret
and
es
cmpsb
movsl
jecxz
jecxz
sub
xor
add
cmpsl
imul
ret
call
js
mov
insl
mov
xchg
pop
pop
popf
pop
call
and
cld
cmp
mov
add
outsb
pop
xor
and
ds
lock
sbb
adc
idiv
repnz
pop
xchg
divl
adcl
xor
out
and
aas
sbb
nop
mov
lahf
rcrb
ds
dec
lcall
dec
fs
add
dec
mov
xor
lds
xchg
pop
mov
adc
sub
adc
push
in
sti
sti
mov
push
push
cmpsb
xchg
mov
rcrl
adc
add
mov
mov
test
cmp
fldenv
lock
jl
xor
dec
aas
jnp
jge
in
int
out
out
repnz
or
in
ret
adc
jae
pop
adc
popf
inc
js
mov
cli
pop
pop
fsubr
hlt
sub
dec
sti
lea
dec
jmp
insl
xchg
cmp
push
test
adc
jne
outsl
sbb
jp
xor
daa
mov
sub
sbb
mov
lcall
rcrb
cmpsb
dec
mov
in
rcll
xchg
jp
mov
xor
inc
mov
mov
and
mov
aad
pop
roll
fs
pushl
push
xor
xchg
add
push
fadd
sub
lock
ror
mov
xchg
cmp
lea
int3
inc
add
cmp
sub
clc
movsb
mov
xlat
out
ret
jle
call
je
or
jnp
mov
lods
or
lret
inc
add
pop
dec
popf
inc
aaa
sub
loopne
mov
xchg
and
lods
mov
test
insl
xlat
jno
mov
jbe
into
inc
push
cmp
shufps
jge
out
lret
les
adc
mov
test
outsl
fiaddl
adc
mov
mov
stos
lods
in
jmp
fsubs
outsb
sub
test
inc
add
data16
aad
fs
cmpsl
mov
sub
sbb
in
in
call
out
xchg
repz
pop
loope
pop
sbb
inc
insl
dec
daa
icebp
shrb
addr16
or
adc
movsl
rcrb
sub
ja
jbe
mov
xchg
mov
push
das
aas
aaa
xchg
adcb
or
and
mov
add
cmp
pop
jge
cltd
jl
lcall
aaa
jge
xchg
in
test
lds
adc
sbb
cwtl
gs
loope
mov
mov
loop
das
and
dec
mov
mov
and
adc
jne
sub
out
ss
sbb
mov
dec
lods
adc
push
sahf
jmp
cwtl
inc
clc
push
jge
add
mov
adc
xchg
jl
xlat
std
ljmp
test
incl
inc
pop
dec
sarl
hlt
mov
and
lods
das
xchg
mov
mov
cmpsb
ret
mov
mov
dec
mov
lock
loopne
adc
cmpsl
add
ret
mov
adc
out
test
xchg
mov
sub
das
fcmovu
mov
repz
lods
aam
bound
xchg
xchg
xchg
pop
jnp,pt
adcl
mov
sbb
pop
adc
fdivp
add
imul
push
jbe
push
mov
arpl
cltd
data16
and
mov
lock
dec
push
pop
mov
repnz
and
pop
hlt
inc
mov
dec
push
xchg
or
in
xchg
jns
or
daa
pop
ret
dec
mov
insl
and
popf
add
fsubrl
int
jb
pusha
jg
inc
jne
xchg
jmp
sbb
jecxz
lods
jp
or
sar
and
sbb
test
nop
into
sub
sbb
mov
popa
lret
inc
jecxz
loop
dec
sbb
sub
add
ds
std
add
cmp
es
jecxz
mov
int3
sahf
mov
add
mov
pusha
fs
ret
test
stos
gs
dec
mov
cmc
test
adc
scas
in
repnz
pop
jb
adc
shll
repz
dec
stos
pop
sub
mov
testb
test
neg
out
shrl
cmc
xor
pushf
fisubl
pop
pusha
std
mov
or
repnz
sub
inc
fwait
call
into
cmpsb
jo
sahf
pop
inc
push
mov
jle
and
or
jl
pop
inc
mov
inc
jae
sahf
inc
mov
inc
dec
daa
push
inc
push
jo
sahf
inc
adc
add
xlat
rorl
or
imul
imul
adc
mov
lock
push
int3
movsl
cs
xchg
enter
mov
roll
cmp
pop
cmp
int
sahf
outsl
mov
dec
movsb
jne
rolb
icebp
xor
dec
mov
faddp
call
dec
dec
pop
jl
ret
jecxz
push
popf
std
gs
aad
addr16
mov
arpl
sub
xor
jle
fbld
stos
add
aaa
lcall
or
add
and
xchg
jg
js
jmp
push
inc
fmull
xchg
or
sub
gs
mov
les
orb
mov
mov
adc
push
int
add
sub
mov
fcompl
xlat
or
lcallw
fistpl
fdivs
push
sbb
or
rcrb
push
push
and
mov
inc
lods
mov
clc
pop
push
pop
push
test
lods
xor
jnp
negl
sub
xor
mov
out
popf
clc
cmpsl
fnstsw
mov
stc
mov
inc
jmp
inc
test
xchg
jnp
leave
jg
sbb
inc
inc
imul
fisubl
jmp
mov
pop
ffreep
or
lods
and
clc
cmc
add
mov
loopne
scas
mov
mov
lds
mov
cltd
mov
in
adc
insl
loop
imul
int
pushf
sbb
aam
fidivrs
loop
or
insl
out
mov
adc
cmp
mov
shr
jns
jb
dec
push
pop
sti
inc
xor
adc
scas
lahf
pop
arpl
cwtl
repz
and
cmp
inc
cmp
pop
lds
leave
js
lods
cs
out
call
pop
pop
push
mov
mov
stos
lahf
fnstenv
and
inc
jnp
or
adc
outsb
aaa
data16
cmp
sub
imul
jb
repnz
icebp
mov
out
aam
mov
hlt
into
orb
nop
inc
in
xor
popa
cmc
add
adc
and
lret
je
xlat
mov
and
inc
sti
leave
push
cld
and
sub
sarb
sarb
jecxz
inc
hlt
xchg
push
insl
js
cmp
push
mov
adc
add
jno
jmp
mov
gs
jo
les
out
xchg
mov
mov
in
mov
jae
push
addb
xchg
cltd
test
pushf
rcll
mov
pop
cmpl
or
enter
out
lods
push
arpl
cli
mov
jne
mov
inc
test
incl
imul
inc
mov
in
lock
and
nop
shrb
cmp
pop
cmpsb
mov
jl
jno
aas
sbb
cld
loop
add
add
cli
lods
sbb
outsl
jle
fisubl
mov
xor
inc
iret
iret
push
xchg
cs
imul
filds
and
flds
mov
loopne
aas
adc
ljmp
dec
sub
jno
or
in
mov
in
sub
fidivs
dec
mov
fwait
les
fists
xchg
jae
out
inc
jns
negb
xchg
pop
loope
int3
push
cs
arpl
jg
lahf
insl
mov
in
sub
mov
adc
inc
sahf
pop
arpl
sbb
adc
xor
xchg
xchg
xor
sub
sar
add
mov
jg
adc
lea
out
mov
jo
je
add
lods
insb
xchg
or
push
movsl
std
pusha
push
dec
out
test
lods
call
push
lds
cwtl
aas
jb
fcomps
lea
or
frstor
ret
jmp
in
lods
repnz
ja
sub
aad
data16
dec
pop
pop
pop
dec
sahf
lahf
push
mov
lret
lret
jmp
push
jecxz
movsl
out
icebp
adc
add
aas
or
scas
xlat
aam
aad
stc
xor
pop
sbb
cmc
ds
clc
lcall
inc
fs
xor
mov
mov
shrb
inc
scas
adc
or
lcall
sub
jae
dec
stc
inc
test
clc
cmpsl
inc
mov
cmpl
and
cld
push
cmpsb
mov
or
out
cmp
je
adc
sti
sarl
add
jno
cmp
mov
jns
sub
cmp
adc
inc
loop
xchg
into
je
xchg
jnp
iret
outsb
push
popf
and
dec
movl
inc
ret
xchg
les
pop
xor
xchg
fimull
cmp
jmp
or
orb
add
mov
adc
jno
cmp
int3
push
inc
hlt
negb
cwtl
dec
lret
cmp
xor
shl
xor
push
hlt
outsl
addr16
pop
fisubrs
mov
stos
sub
xchg
cmp
mulb
jne
jne
xor
jge
cmp
jo
push
push
dec
mov
mov
mov
fldl2e
jle
xor
mov
add
movsl
and
and
pop
repz
dec
mov
xchg
lea
and
xchg
jnp
sub
fwait
mov
xchg
xchg
push
std
push
pop
ret
mov
xchg
or
stos
addb
xchg
adc
push
in
push
ret
sbb
inc
idivl
cmp
mov
repz
lea
stos
jle
jmp
or
mov
pop
test
scas
adc
call
das
sbb
xor
xor
dec
into
jo
imul
mov
mov
xchg
les
xor
jae
stos
mov
cwtl
mov
iret
dec
and
ljmp
inc
pusha
mov
gs
mov
lret
mov
push
xor
leave
add
mov
pop
adc
mov
popf
xchg
cmc
stc
jbe
jno
popl
add
xchg
popf
in
leave
xchg
mov
and
inc
sbb
call
jnp
in
cmc
xchg
imull
das
lods
push
pop
aad
push
pushf
outsb
cmp
popf
mov
cmpb
in
in
inc
pop
fwait
lea
xchg
pop
lret
xor
mov
cmpsl
divl
jecxz
int3
std
pushf
iret
lea
addb
sub
lahf
or
stos
negl
out
mov
movsb
jle
xchg
rcr
push
jecxz
and
push
jecxz
jmp
subl
sub
imul
inc
ret
mov
enter
hlt
ret
test
in
push
cmp
ss
fiadds
and
adc
popf
js
fwait
nop
mov
ss
pop
inc
xor
inc
push
js
pushl
push
xor
arpl
pushf
out
outsl
mov
dec
push
mov
ljmp
dec
xor
cmp
xchg
mov
dec
nop
inc
ret
clc
subb
into
push
sahf
lea
hlt
pminsw
sahf
and
rolb
and
addl
sahf
dec
lret
and
or
adc
loop
dec
sub
insl
aam
lcall
mov
jge
gs
adc
pop
sub
add
xor
push
sti
cs
mov
lret
ja,pt
adc
cmp
fbld
xor
push
pop
xor
mov
mov
jne
cmpsb
dec
adc
push
imul
pop
in
sub
cmp
pusha
mov
mov
pop
xchg
push
out
adc
pop
ljmp
fstpt
fdivrp
jbe
adc
push
loope
mov
frstor
xor
sbb
mov
lcall
push
test
loope
pop
inc
and
stc
pop
cmc
adc
andb
push
jns
test
fsubrs
out
inc
xor
mov
stc
mov
dec
je
shlb
stos
adc
test
mov
shll
nop
es
jecxz
rorl
adc
cmpsb
mov
gs
stos
sub
adc
bound
mov
mov
outsl
insb
adc
xor
mov
jne
mov
icebp
mov
dec
and
rorl
lahf
lods
xor
imul
xchg
mov
gs
add
roll
cmpsl
mov
ret
lock
inc
gs
movsb
cwtl
mov
std
mov
mov
push
fdiv
dec
jl
stc
xor
xor
inc
mov
data16
loopne
pop
jns
loop
std
lods
xor
cmp
pop
xchg
out
sarb
cmp
jl
mov
pusha
push
stos
jle
out
pop
add
flds
xchg
mov
cmp
push
and
pop
les
add
pop
mov
add
imul
fisubrs
or
stos
jo
sub
addr16
pop
cmpsl
cltd
pop
shll
ss
push
dec
jecxz
mov
inc
call
lds
sbb
outsb
push
rcll
push
and
rorb
pop
mov
jle
fbld
inc
push
out
jle
jmp
mov
mov
in
xchg
xor
shrb
pop
fsts
cltd
push
leave
out
dec
cwtl
ds
mov
out
mov
mov
lret
adc
add
loope
popa
das
xchg
fidivl
cmp
test
cmpsb
sbb
sbb
or
mov
cmpsb
imul
and
inc
fsubrl
daa
xchg
mov
cmp
aas
je
scas
les
add
cmpsb
pop
test
jbe
mov
lcall
mov
dec
sub
loop
movsl
jl
jge
pop
hlt
xlat
push
fwait
lods
aam
out
push
sbb
sub
out
pusha
fnstcw
sub
fs
add
add
test
std
aaa
fwait
cmpsl
adc
xchg
and
xor
push
fcompl
pop
and
jecxz
fiadds
cmc
or
pop
rol
mov
cld
insl
in
push
push
hlt
pushf
outsb
or
test
daa
jecxz,pn
mov
movsb
and
sub
fwait
pop
mov
in
idivl
fisttps
shld
push
inc
jmp
fwait
movsl
and
jle
icebp
mov
xor
xchg
pop
mov
shrl
push
push
aam
insl
das
jbe
mov
in
adc
sbb
aad
lock
out
jnp
mov
jbe
std
fiaddl
lock
fisubrs
lea
pushf
jmp
push
sub
daa
or
pop
lods
xor
lcall
imul
aad
pop
jbe
sbb
xchg
sbb
cld
push
xchg
xor
xor
pop
xchg
shl
subb
hlt
pushf
pop
repnz
inc
sub
flds
xchg
ss
push
xchg
adc
adc
cwtl
sbb
jne
lahf
dec
sub
xlat
mov
mov
in
fsubs
cmp
adc
mov
jp
sti
push
in
dec
mov
and
inc
imul
orl
ljmp
sahf
sbb
inc
into
repz
pop
clc
ror
out
mov
fisttpll
add
int
push
or
mov
push
dec
dec
push
test
mov
int3
in
in
pop
adc
xchg
subb
sub
sub
jge
mov
and
shlb
int3
rcrl
and
ja
ret
in
jno
inc
xorb
mov
shlb
aad
mov
push
addb
arpl
je
cmp
scas
shll
pop
inc
les
mov
xchg
add
pop
sub
cmpsb
sub
adc
arpl
mov
shlb
jle
ss
or
mov
sub
test
jecxz
mov
inc
loopne
inc
leave
push
push
out
inc
cmpsl
cmp
outsb
loopne
and
pop
idivb
mov
pop
out
push
ret
in
inc
dec
jns
loopne
scas
push
scas
xchg
test
stos
loope
lods
cmp
fnstsw
ret
jge
pop
jns
jl
or
ja
add
push
pop
mov
xchg
outsb
shrb
js
xchg
das
sub
mov
mov
dec
je
ret
jp
jg
dec
mov
push
cli
inc
sbb
mull
jo
gs
insl
xchg
mov
add
lods
adc
lret
cmp
mov
daa
and
add
andl
inc
jp,pn
adc
cld
sub
mov
lcall
xor
mov
js
jg
mov
dec
xchg
cmpl
xchg
in
push
jbe
dec
xor
xchg
pop
out
es
into
pusha
and
mov
inc
out
adc
push
sub
xchg
lcall
addr16
inc
jo
mov
mov
inc
kortestw
xor
add
clc
inc
add
bound
dec
mov
adc
repnz
cwtl
push
push
jp
push
mov
arpl
sbb
aad
mov
mov
test
testl
bound
decb
aad
fwait
or
jle
inc
jo
add
pop
out
outsl
and
pop
dec
movsb
repnz
aas
and
xchg
je
gs
sbb
or
add
push
bnd
push
mov
std
or
scas
or
add
movb
sbb
insb
jle
out
sti
adc
jne
sub
fimuls
out
mov
mov
sub
out
scas
sub
jbe
mov
dec
pusha
or
pop
je
cmp
inc
cmp
push
std
cmp
jmp
jl
adc
cld
inc
movsb
lds
fldenv
cli
out
adcl
lods
fsubrl
mov
stc
jge
fs
es
dec
xlat
mov
test
add
inc
icebp
cmp
jge
cmp
outsb
mov
pop
or
cmp
aaa
ljmp
popl
out
aaa
lcall
jnp
lcall
and
push
orb
mov
mov
rol
mov
jno
orb
imul
nop
les
jo
mov
mov
and
aad
add
mov
mov
pop
sarl
pop
jl
outsb
stos
dec
jle
repz
jp
je
scas
xor
or
dec
jge
push
das
fisubrs
pop
fcoms
sbb
adc
cmp
leave
pushf
cld
call
shrb
push
shll
std
aas
adcb
xchg
lods
std
clc
nop
mov
dec
jmp
adc
and
pop
jecxz
pop
and
add
mov
adc
pop
inc
adc
pop
ss
clc
cmp
shrb
pop
xor
or
cwtl
sbb
cmp
je
push
inc
imull
add
and
mov
cmp
mov
or
add
adc
fmull
sbb
ja
jo
out
pop
aas
out
mov
push
inc
xchg
iret
sub
xchg
dec
sub
imul
loop
xor
inc
add
outsb
pavgw
push
lret
stos
push
mov
mov
repnz
jle
mov
pop
inc
lea
adc
ljmp
imul
jg
sub
mov
xchg
mov
push
std
xor
pop
adc
sub
cltd
test
xchg
xor
pop
add
and
ja
pop
cli
adc
call
xorb
mov
dec
add
mov
fiaddl
out
test
daa
stos
and
xor
inc
subb
leave
xorl
pop
loop
add
ja
outsl
push
ss
jno
push
pusha
push
jmp
rcrl
adc
jns
jno
sub
fimull
mov
jb
sti
ret
lret
adc
std
mov
ljmp
and
scas
add
add
imul
loop
ret
inc
rol
and
lret
imul
sti
insl
push
fidivrs
mov
inc
mov
dec
and
vprotb
sarb
lcall
sbb
pop
mov
push
mov
les
and
lds
jb
and
sub
daa
push
test
mov
xchg
loopne
mov
or
mov
sbb
test
cmp
fwait
shll
cwtl
rcl
movsl
ljmp
rcl
psubw
or
or
addr16
cmpsb
xchg
jge
call
gs
cli
add
mov
ds
xchg
sbb
xor
adc
sub
cmc
push
inc
fistl
mov
sbb
cmpsb
fstpl
test
scas
mov
insb
fcmovbe
into
push
sbb
sbb
dec
xor
loop
or
mov
insl
jge
dec
fsubrl
shl
push
xor
adc
test
push
ret
ds
xchg
xchg
ds
push
adc
out
push
loop
pop
out
int
jecxz
cmp
leave
inc
cmpsl
insb
add
sub
leave
out
mov
pop
adc
add
mov
xchg
jno
mov
add
xchg
sbb
adc
jmp
xor
into
dec
gs
or
fcmovbe
cld
jb
rolb
xchg
imul
pop
scas
lea
pushf
cmp
pop
cmp
jg
pop
out
scas
dec
push
outsl
sahf
lcall
fninit
psubb
push
rcll
xchg
icebp
jns
push
andb
mov
out
fisubs
repz
mov
addl
popf
pushf
outsb
adc
inc
lcall
fisubs
sahf
scas
pop
jno
lcall
sbb
data16
mov
sub
and
xlat
in
divb
jp
mov
mov
or
shlb
pop
icebp
and
mov
push
es
xchg
dec
xchg
popf
add
push
xchg
aaa
adc
sahf
fistpl
pop
and
mov
sbb
dec
leave
outsl
pop
push
enter
movsl
cmp
or
cmpsl
cmp
pop
pop
popa
xchg
rorb
pop
mov
pop
lcall
mov
mov
pop
xchg
jmp
jmp
xor
add
movsb
fs
pushf
xorb
stc
and
xor
add
or
sub
mov
in
repnz
iret
stc
das
pop
mov
ret
inc
in
xor
xor
pop
sbb
ret
push
mov
push
mov
push
mov
jl
add
push
loopne
data16
pop
jo
cmpsl
mov
adc
scas
inc
cmpsl
aad
sbb
sub
jmp
xor
or
sub
pop
nop
and
and
jae
fwait
inc
scas
dec
fdivrl
xchg
push
sbb
and
in
arpl
jb
sbb
dec
inc
lret
and
sub
in
in
mov
repnz
rclb
sti
fisttpl
cmp
ds
inc
pop
mov
jl
jl
test
fs
fcmovb
inc
es
fdivrs
push
mov
in
cmc
sti
push
insl
clc
insb
add
lods
push
sti
testb
jecxz
out
int
push
pop
shr
xor
dec
inc
xchg
repnz
shrl
xchg
int3
repnz
fisubrs
xor
xor
xchg
outsb
sub
ret
adc
pmulhw
jp
stc
cld
cmp
push
imul
xor
ds
add
push
jg
cmpsl
mov
mov
jns
mov
mov
mov
addl
lock
ljmp
mov
dec
pop
mov
rclb
xchg
movsb
mov
scas
adc
aad
push
arpl
mov
jo
xlat
add
dec
add
hlt
mov
sbb
cmc
negl
mov
jnp
add
popf
pop
push
clc
inc
dec
push
fldt
cmp
icebp
outsl
jns
jp
insl
xchg
push
daa
je
movsl
push
loopne
icebp
inc
rolb
fwait
cmpsl
jecxz
inc
hlt
jecxz
dec
lcall
lods
push
cmp
aaa
add
xor
mov
xchg
add
adcl
psraw
sahf
mov
jecxz
sti
shll
call
test
xchg
jecxz
mov
psubq
stc
push
into
ljmp
add
sub
sti
je
cmp
dec
xchg
rolb
loopne
pop
add
lahf
fsubs
cmc
fdivp
cmpsl
outsb
and
lods
aaa
mov
in
in
jle
aaa
mov
jl
xor
ss
push
rcrb
cmpsb
mov
xchg
test
adc
ret
mov
test
xor
push
jg
bound
jp
jae
jecxz
jo
lea
and
push
add
cmpsl
add
roll
inc
int3
jmp
push
push
in
gs
xchg
xchg
cmp
push
cmp
popf
es
sub
adc
mov
jbe
repz
dec
insb
pushf
ret
jnp
xor
test
sub
mov
cmp
or
push
xchg
psraw
jns
add
lds
leave
cmp
out
pop
jge
inc
jnp
xchg
mov
mov
pop
adc
decl
and
push
pop
enter
add
xchg
or
into
dec
pop
fists
pop
dec
or
dec
sti
inc
es
pop
xlat
dec
inc
cmpsb
vorps
cmp
push
jg
jns
mov
inc
push
fildl
hlt
imul
insl
das
ds
repz
adc
mov
call
test
mov
stos
xor
stos
pop
add
int
pop
leave
mov
sbb
js
cli
icebp
adc
jp
push
mov
fsubs
push
xchg
mov
push
and
pusha
rorb
fcom
add
mov
cs
jb
clc
addb
cs
push
push
cli
jae
aam
pop
pop
jg
jae
outsb
adc
outsb
add
out
adc
fdivl
sti
add
call
cli
cmp
call
and
adc
sahf
push
rolb
cld
arpl
adc
cmpb
lcall
dec
fs
jae
outsb
sahf
insl
pop
fiaddl
dec
pusha
mov
add
test
shll
add
test
adc
into
mov
jae
mov
out
or
pop
in
inc
int3
rorb
adc
lock
inc
adc
stc
std
fimull
push
ret
testl
cmpsb
adc
mov
cmp
mov
shl
int
outsb
cmp
addr16
gs
test
outsl
lds
sbb
sbb
dec
cltd
mov
mov
addl
lcall
in
shll
xor
xor
push
xchg
inc
rcr
xchg
loopne
sub
pop
push
add
addl
out
scas
or
inc
and
inc
ret
jge
into
js
int
shll
xor
pop
popf
addr16
or
mov
lret
jg
jae
inc
pop
cmp
add
mov
mov
sub
sbb
mov
xlat
inc
decb
dec
inc
sub
or
mov
mov
lods
pushf
addr16
mov
xchg
pop
pop
sub
sub
jbe
es
sub
sbb
or
mov
push
enter
sub
aad
and
add
lea
rol
mov
movl
repnz
sbbb
sbb
stos
add
mov
out
xor
mov
pop
adc
adc
clc
out
in
fsubrp
daa
stos
cld
inc
jae
xor
pop
je
fs
repz
or
cmp
pop
test
jmp
in
and
jns
mov
lret
add
loope
outsl
and
imul
loopne
jns
jge
icebp
adc
jno
daa
pop
mov
mov
sbb
xchg
jecxz
cmp
cmpsl
mov
pmullw
jl
fdivs
mov
mov
pop
mov
jae
jmp
sbb
inc
pop
lds
jb
clc
mov
in
cwtl
call
dec
inc
inc
loope
sbb
lahf
add
dec
cmc
mov
icebp
or
mov
jmp
sahf
popf
push
scas
scas
hlt
xor
test
xor
xchg
push
sub
or
add
test
lret
xchg
fnsave
jnp
sbb
mov
jbe
lea
and
xor
cmp
cmp
mov
and
push
cmp
pop
in
mov
scas
das
cmp
xchg
cmpsl
aaa
mov
cli
outsb
dec
insb
push
lea
scas
in
je
jno
or
imul
mov
test
insl
xchg
out
call
jbe
out
jecxz
outsl
cmc
mov
xchg
daa
mov
xor
jmp
cwtl
fsubrl
ss
adcb
or
mov
outsb
aad
fidivl
into
lods
cmp
daa
iret
hlt
xchg
xor
aam
popf
pop
cmp
jmp
xchg
in
xchg
sub
lret
push
add
shll
jne
aaa
jns
fnstenv
fisubrl
mov
in
mov
inc
inc
fcoms
lret
inc
cmp
push
shlb
adc
dec
lods
or
imul
push
and
fdivrs
xchg
loope
inc
stos
adc
jb
stc
mov
mov
mov
sub
cmp
jl
lock
imul
xchg
add
cmp
pop
or
gs
or
bound
jb
jmp
cmp
mov
inc
push
mov
mov
outsb
mov
adc
cmp
cmp
xchg
pop
movsb
aaa
pop
push
mov
daa
popa
lcall
push
imul
cmp
rcl
dec
fildl
jp
loopne
dec
inc
push
push
push
inc
xchg
lret
push
and
xchg
push
push
push
gs
jle
add
pop
inc
fisttpl
loope
push
jmp
hlt
fsub
scas
push
cmp
fstpl
aam
fwait
xor
cmpsl
push
enter
addl
add
fildl
mov
push
loop
adc
addr16
repnz
fidivrl
aad
xor
arpl
in
movsl
cld
push
mov
lds
inc
sub
data16
xchg
jbe
fadd
add
adc
out
dec
rolb
mov
scas
push
cmp
imul
fwait
and
sub
jge
out
add
fnsave
daa
lds
in
xlat
pop
and
or
mov
inc
jb
jle
fsubp
lret
fsubp
cs
icebp
ficoms
xor
push
mov
sub
mov
push
jl
inc
xor
adc
cwtl
rclb
push
cmpsl
push
inc
stc
imul
lock
pop
arpl
sbb
stos
cmc
or
mov
aaa
filds
dec
loope
iret
insb
enter
mov
sub
loop
sub
inc
subb
call
scas
push
inc
rcll
xor
xor
pop
imul
mulb
sbb
or
inc
push
jne
loope
sub
repz
jg
sub
mov
adc
jmp
xchg
sub
xlat
out
inc
inc
movsb
aam
in
xchg
in
faddl
mov
push
cli
push
lock
jg
jmp
push
mov
pushw
push
aas
xchg
call
mov
jne
or
jae
mov
call
addr16
mov
lahf
lret
sbb
xchg
fnstcw
dec
adc
lahf
adc
gs
pusha
mov
dec
mov
push
cmp
mov
pop
sbb
cmpsl
aad
fsubr
xchg
or
cmp
lock
das
dec
and
dec
push
je
xor
cmp
pop
mov
ss
xor
dec
incl
out
xchg
push
icebp
cmpsl
inc
insl
shlb
ret
sarl
xor
enter
push
push
daa
cmp
icebp
inc
pop
jae
xchg
dec
dec
dec
mov
sbb
inc
andl
or
jp
loopne
shl
ret
sbb
xor
xchg
ret
xor
ja
fsts
roll
dec
shlb
push
jmp
sbb
bound
pop
push
decb
push
pop
sbb
fdivr
sub
fiaddl
das
test
sub
arpl
out
dec
and
in
icebp
push
les
adc
fcmovb
dec
add
or
jnp
jl
fcomps
push
out
inc
adc
xor
fnstsw
and
rclb
jo
ret
jo
out
negl
sub
adc
xchg
fdivrs
cmc
out
lds
rcll
xor
addr16
adc
subb
repnz
add
jnp
adc
cs
insb
cmp
loop
or
sti
add
inc
xor
rclb
pusha
sub
js
xor
negb
leave
das
int3
rolb
mov
mov
mov
lods
jb
pop
subb
mov
inc
inc
inc
or
inc
pop
into
dec
mov
aas
cs
sbb
imul
cmp
and
inc
push
jp
xchg
mov
aas
push
pop
repz
mov
mov
bound
sub
mov
mov
cmp
pusha
je
or
push
jno
jmp
sbb
dec
cmp
sbb
cmp
das
adc
xchg
mov
adc
scas
mov
pusha
or
or
imul
xchg
repz
xchg
cmpsb
push
pop
popl
pop
loopne
mov
add
mov
sti
mov
outsb
mov
xchg
or
xchg
leave
mov
popa
mov
or
rorb
and
lock
mov
lcall
test
js
movl
adc
out
cmpb
insb
mov
or
mov
stos
mov
sub
mov
neg
mov
and
pop
mov
or
mov
cmp
pop
adc
mov
jns
push
sub
fstps
pop
inc
les
es
xchg
int
aaa
lods
and
pop
outsl
mov
dec
ljmp
loopne
xchg
sbb
cli
cmp
cld
roll
xchg
sbb
insl
mov
mov
xchg
pop
inc
test
add
fsubs
std
cld
ficoms
and
mov
inc
stos
cmp
shrb
lea
cmp
inc
jae
hlt
adc
dec
nop
lock
mov
add
cltd
test
mov
enter
ss
push
iret
jo
scas
in
inc
add
and
repz
jecxz
cmp
xor
fisubrl
mov
push
xor
cmpsl
pop
lds
out
push
mov
pushf
fcmove
jmp
lahf
adc
je
jle
fistpll
roll
pop
dec
push
loope
mov
add
and
adc
adc
xchg
in
jne
pop
hlt
ljmp
loope
and
lock
inc
push
stos
in
hlt
pop
je
pop
cltd
sub
push
fwait
sti
imul
pop
or
xor
dec
aas
sbb
mov
sbb
in
int3
rolb
xor
inc
sarb
cltd
outsb
cmc
inc
sub
and
lods
pop
mov
lds
cmc
xchg
push
push
sbb
popf
adc
icebp
dec
je
mov
push
sub
out
xor
dec
ret
xchg
or
push
test
pop
pop
inc
or
aam
xor
ja
scas
mov
mov
jb
and
mov
lods
mov
pop
or
sbb
jle
mov
push
fildll
inc
dec
pop
sub
jmp
jns
cmc
push
xchg
bound
or
push
add
addb
push
dec
push
loop
inc
mov
rorb
add
cmp
pop
ja
sub
xchg
inc
push
pop
xchg
jo
outsl
or
jp
gs
and
in
pop
mov
je
movsb
ret
sub
fisttps
add
jbe
ja
daa
pop
add
divl
test
mov
imul
movsl
jg
dec
cmp
cmpsb
jnp
push
jmp
daa
push
fisubrs
xchg
call
or
mov
or
sbb
neg
js
jecxz
dec
mov
mov
xor
jb
je
xchg
inc
aam
shrl
dec
test
aad
fcoml
jno
es
repnz
dec
xor
testb
orl
mov
fwait
inc
pop
push
xlat
adc
push
into
cli
cltd
lcall
pop
enter
fwait
dec
xchg
daa
xchg
and
or
sub
lcall
mov
je
and
adcl
cltd
cmp
cmp
enter
sbb
in
pop
ret
dec
push
out
xor
div
or
int
fisubrs
repz
in
movsl
in
mov
pop
or
add
pop
xor
fstpt
adc
loop
xchg
sbb
imul
stos
imul
scas
mov
jle
imul
jg
lea
jge
sbb
pand
cmpsl
sbb
in
aaa
popf
icebp
push
push
adc
jecxz
adc
stos
sbb
ret
stos
lea
jae
outsb
mov
lret
lock
push
inc
push
and
test
or
mov
dec
sarb
movsl
sbb
adc
rcl
popl
fmuls
xchg
dec
adc
cmp
pop
jmp
outsl
sbb
mov
pop
mov
cltd
adc
jae
in
gs
cmpsl
cmp
test
lret
add
stos
aas
and
pop
loope
and
out
in
call
fcomps
aam
jno
das
enter
dec
jnp
mov
mov
repz
sahf
inc
pop
and
test
jno
xchg
fwait
mov
push
lea
jnp
pop
add
cmp
aam
pop
aas
rorl
pushf
push
test
mov
daa
push
push
das
hlt
rcll
sbb
int3
scas
push
mov
jl
lret
aas
push
sbb
addr16
xlat
rclb
xor
enter
dec
xor
ds
incl
stos
adc
dec
in
or
lret
pop
push
jmp
mov
push
push
xor
mov
jle
xchg
add
dec
ficoml
in
add
stc
xor
ja
push
jmp
mov
mov
lret
ljmp
jle
dec
xor
jno
mov
mov
jae
stos
ror
out
punpcklwd
mov
sbb
popf
fs
enter
int3
int3
dec
gs
sbb
jnp
addr16
push
xor
cmpsb
repnz
aaa
fs
push
aas
hlt
rolb
inc
sbb
mov
push
cmp
nop
js
cmp
jl
loopne
lea
ret
fninit
add
mov
xchg
xchg
mov
subl
inc
cwtl
or
mov
cmc
daa
mov
mov
pop
idivl
pop
icebp
pop
or
fwait
mov
hlt
int
and
es
fcomps
mov
mov
lcall
mov
pop
mov
dec
in
jmp
adc
gs
daa
lret
rcl
and
mov
fidivrl
cmp
mov
dec
xor
pop
int
xor
or
addr16
sbb
js
mov
lock
leave
hlt
bound
dec
int3
fs
imull
nop
jae
outsl
outsb
cmp
outsl
loope
push
pop
cmp
cmp
dec
add
dec
inc
leave
fdivrs
es
cmp
test
outsb
mov
mov
xlat
rcrl
movsl
or
cli
shll
sbb
out
xchg
bndldx
fnstcw
dec
cmp
aad
loopne
out
les
mov
pushf
mov
jne
inc
ret
popa
mov
push
popf
rorl
mov
sbb
cmpsl
cmpsl
cmp
push
push
sbb
ja
pop
nop
mov
xchg
imul
xchg
mov
xchg
cmp
repz
das
flds
repnz
ss
fidivrl
push
into
rcll
idivl
cli
lds
mov
xchg
dec
sbb
cmp
mov
or
pushf
popl
mov
pop
jno
sub
lret
test
aaa
cmc
popa
dec
hlt
sbb
mov
xchg
movsb
cld
movsl
mov
jne
jecxz
pushf
lahf
movsb
call
outsl
adc
xlat
jp
xchg
int
add
cmpsb
insb
sub
cmc
or
push
cmp
or
fidivl
mov
lret
dec
inc
jb
xor
pop
inc
mov
lock
lea
sbb
and
inc
xor
sti
or
mov
pop
and
lahf
mov
loope
loop
dec
movsl
or
xchg
fcmovnbe
and
adc
pushf
les
jae
mov
adc
lretw
or
cs
jecxz
dec
je
push
rclb
push
cwtl
leave
aad
rclb
hlt
divb
jecxz
pusha
gs
shlb
js
jecxz
xor
mov
add
ret
sub
cmpsl
cld
out
xor
mov
es
push
mov
test
aas
or
scas
xchg
scas
in
fsub
inc
pop
imul
xchg
mov
pop
add
addb
mov
ret
push
out
xor
inc
mov
fs
fcomi
bound
shrb
xlat
sub
popf
data16
mov
pop
daa
fs
adc
fisubs
push
outsl
pop
xlat
mov
popf
cld
cmpsl
daa
jnp
aaa
xor
add
call
xor
push
jbe
lods
mov
out
or
loopne
imul
daa
subb
mov
insb
mov
xchg
ret
jmp
subl
mov
dec
shll
xor
jns
jnp
xchg
mov
cwtl
and
mov
mov
stc
test
push
mov
es
in
movsb
lahf
cmpsl
sub
jg
pop
out
in
cli
mov
loopne
mov
mov
adc
lret
mov
and
dec
dec
std
adc
aaa
push
out
sbb
sub
adc
sti
mov
jg
mov
call
std
push
ret
rclb
lea
push
shll
arpl
cmpb
cmc
bound
lods
pop
pushf
mov
cmp
mov
adc
js
pop
ds
shl
int3
push
push
dec
xchg
xchg
scas
testb
cmpsb
stos
cmp
out
xchg
adc
xchg
rclb
ficoms
sub
in
jae
add
jae
add
iret
pop
aam
int
leave
bound
inc
add
mov
test
lcall
add
inc
hlt
hlt
push
lret
jns
xor
outsb
push
fimuls
std
loop
adc
hlt
addb
mov
cli
inc
push
cltd
jbe
shr
pop
cmp
push
pop
mov
xor
test
std
outsl
daa
pushf
sbb
jecxz
cmp
pop
test
or
movsb
testl
cmp
xchg
sub
and
lods
fmul
jnp
mov
hlt
jb
push
pop
cltd
push
sbb
je
mov
and
pop
loopne
xchg
inc
movsl
add
mov
jecxz
fcoms
cmpb
js
lods
mov
xchg
pushf
inc
icebp
jno
mov
inc
sbb
pop
insb
xor
xor
sub
ss
add
jb
jg
push
add
or
jae
xchg
jo
sahf
insb
pop
xor
and
stos
jg
and
jl
mov
jb
pop
cmp
rol
repz
fcom
mov
shll
loop
mov
xor
sbb
fcompl
in
sbb
adc
push
aam
flds
mov
jbe
cmp
pop
std
xor
adc
mov
fs
icebp
mov
in
xchg
mov
insb
imull
imul
xor
dec
push
cltd
rcll
pop
mov
mov
mov
mov
aam
fs
mov
xchg
pushf
ljmp
fisttpll
sub
cmp
push
xor
adc
paddusw
in
xchg
xor
fdivs
adc
or
jl
lahf
fs
dec
and
and
in
adc
push
insb
or
insl
test
push
push
loope
arpl
sar
es
mov
mov
pop
and
mov
push
pop
and
pop
jmp
scas
int3
jl
adcl
jg
gs
out
mov
and
jg
mov
shr
jecxz
iret
adc
js
mov
inc
sub
pop
xlat
aaa
fmull
fisttps
mov
lret
decb
cmp
pushf
mov
dec
in
xchg
stc
jb
test
xchg
das
jae
lock
cld
pop
push
outsb
mov
lods
push
xchg
imul
add
lret
out
and
jnp
int3
jp
or
pop
popf
mov
ss
aaa
sub
or
js
lds
pop
push
dec
dec
adc
and
stos
sub
in
dec
jge
mov
call
jb
cmovnp
or
aas
mov
sbb
adc
stc
or
outsl
mov
sbb
xor
bound
add
in
idivb
mov
outsl
pop
adc
adc
scas
aaa
in
imul
bswap
pop
jmp
sbb
jno
scas
mov
push
and
jne
pop
mov
cmpsb
sub
lds
sub
arpl
mov
pop
fiaddl
xchg
xor
loop
call
stc
lret
xchg
in
add
movb
or
jmp
pop
xchg
cs
sbb
aaa
addb
stos
jns
subb
cmpsl
sbb
or
pop
cmp
outsb
push
pop
cmp
int
cmpl
test
rcll
lret
subl
mov
in
mov
mov
sahf
dec
roll
adc
jns
sub
icebp
rcl
daa
fsubrs
test
mov
or
cltd
or
gs
into
inc
jecxz
adc
imul
xchg
scas
js
push
sbb
jp
or
cltd
fcmove
shlb
lds
cltd
out
pushf
daa
xor
dec
cs
ror
sarl
dec
xor
mov
push
xchg
data16
push
imul
jo
gs
and
mov
movsb
sub
add
cmp
mov
add
dec
loopne
push
sub
inc
mov
xchg
rorb
mov
pop
dec
es
mov
lret
inc
sub
and
out
in
push
mov
sbb
pop
xor
lods
aam
arpl
hlt
xchg
movsl
ja
imul
in
adcl
xchg
sub
imul
stos
ret
sbb
sti
das
pop
jns
loop
jp
inc
cmc
push
push
mov
ljmp
or
xlat
adc
mov
mov
jmp
mov
push
cltd
dec
outsb
test
dec
dec
int3
xchg
repnz
xor
fcomps
in
outsl
cwtl
mov
movsl
jne
xor
pusha
data16
or
xchg
jne
dec
xor
fsubs
pushf
add
push
jge
fs
or
fstpt
out
xor
aam
add
pop
jne
jmp
lret
fisubs
insl
pop
mov
je
pop
jg
popf
lds
ret
pop
mov
fsubl
rorl
mov
shll
pop
hlt
hlt
and
les
hlt
adc
ret
aas
mov
xchg
mov
aas
lret
adc
mov
aas
nop
xor
add
ds
mov
aam
movsl
mov
ret
scas
mov
int
sub
mov
pop
loopne
cmp
mov
jnp
in
rcll
inc
jge
mov
dec
cmc
push
out
test
mov
xchg
add
add
jecxz
sti
shll
sbb
gs
cmpsl
divl
jns
hlt
mov
or
pop
jecxz
imul
push
or
dec
in
jge
push
sub
pop
cmp
call
mov
aad
inc
jb
inc
add
popl
dec
xchg
xlat
jns
xchg
xchg
movsb
pop
inc
enter
std
movsl
add
ja
xchg
fisubl
loop
mov
pusha
jmp
movsl
jns
lahf
outsl
jae
mov
rclb
xchg
xlat
push
cmp
daa
jns
pop
das
sub
xchg
stos
mov
pop
mov
cmpsb
lret
das
fsubrs
in
pusha
ds
add
pop
mov
mov
and
in
les
dec
inc
cmp
lret
and
push
cmp
popa
push
loope
push
pop
fcompl
ljmp
into
xchg
jge
rol
xchg
lcall
inc
fs
pop
sbb
add
jo
loope
movd
cmp
push
inc
or
jns
aam
xchg
add
shrb
gs
fs
xor
insb
mov
popa
cs
mov
xchg
push
daa
pop
sbb
mov
mov
icebp
iret
xchg
cmp
ljmp
int3
cmp
mov
fnstenv
das
sub
lods
scas
outsb
xchg
mov
mov
aad
xchg
mov
and
xchg
add
jp
lahf
data16
aas
sbb
nop
ljmp
jp
or
pushf
scas
outsl
hlt
xorb
out
xchg
leave
popf
and
or
inc
sbb
stc
fistps
ljmp
xchg
sti
insb
or
inc
dec
es
jle
aam
scas
fnstsw
mov
stc
sub
addr16
sahf
sti
loope
pop
insb
cld
sysexit
imul
pop
mov
les
in
cmpsl
push
sbb
fidivrs
loopne
sbb
jge
xor
outsl
stc
data16
mov
pop
xchg
xchg
ja
mov
and
pop
jae
jg
mov
mov
arpl
dec
and
outsb
mov
adc
sub
mov
rol
es
sbb
in
xor
mov
int
adc
shr
imul
xor
xor
jl
cwtl
and
pop
cs
sub
insl
mov
jnp
outsl
aad
insl
inc
fldl
cmc
popf
push
out
scas
sbb
xchg
and
outsl
rcrb
push
add
test
leave
add
js
fistpl
xchg
jae
xchg
sub
sbb
mov
inc
pusha
jg
jg
push
fildl
pushf
lret
nop
shlb
push
sub
cmp
jge
imul
add
mov
into
fs
xor
cmpsb
lods
cmp
xchg
rolb
stos
mov
lock
inc
jnp
push
mov
or
fcoms
mov
aas
aam
loop
xor
adc
stos
mov
insl
or
mov
outsb
sub
xchg
jo
fwait
xor
push
mov
add
jge
cmp
jp
xor
mov
out
mov
cmp
cmp
adc
mov
pop
xor
push
pop
call
sub
mulb
pop
xchg
stos
ljmp
or
rcrl
insb
ljmp
pop
pop
mov
add
pop
cmp
fildl
popf
lcall
les
loope
repz
sbb
scas
adc
sub
inc
fisubs
xchg
mov
dec
inc
and
cli
jns
inc
daa
cmp
jg
mov
xchg
push
dec
int
xor
jge
popa
dec
imul
leave
in
outsb
pop
dec
or
nop
imulb
jne
dec
shlb
sub
jnp
add
shlb
lret
jl
cltd
or
adc
scas
adc
mov
jb
loop
call
mov
sbb
psubsb
push
in
xchg
enter
cld
cmp
ret
in
aaa
into
fnsave
out
in
or
xor
jge
push
xchg
adc
and
repnz
jnp
loop
push
leave
imul
cmpsl
inc
insb
fldcw
push
push
sub
fnstenv
js
push
xchg
daa
cmc
clc
dec
loopne
fldl
cmp
pop
push
fcmovbe
lock
daa
or
fs
mov
fistps
add
cmp
adc
dec
add
adc
mov
jno
push
clc
mov
adcb
sbb
andl
ret
sahf
movsl
cs
subl
shlb
push
stos
mov
sub
mov
rorb
mov
cmc
test
sub
adc
int
adc
out
xchg
pop
cltd
xchg
cmpsl
jg
sbb
cmpl
out
cvtps2pi
push
cwtl
xchg
fsubp
movsl
int3
aas
jns
jp
popf
out
mov
inc
inc
mov
push
loope
pop
add
test
mov
push
sbb
push
xor
or
addb
xchg
insb
fwait
stc
mov
cmc
mov
jno
lods
cmp
fnstenv
sbb
bound
adcb
faddl
rcll
inc
loop
cmp
adc
push
aad
sub
leave
das
mov
fs
mov
lahf
rorb
xchg
adc
jmp
ds
jno
push
inc
or
lret
jmp
movsb
push
sarb
sub
iret
mov
arpl
test
adc
in
sbb
and
test
xlat
xchg
pop
xlat
xchg
dec
call
lahf
sbbb
mov
imul
push
dec
nop
daa
jnp
mov
xor
outsl
inc
dec
add
lcall
mov
lahf
sbb
sub
inc
mov
push
sub
jle
cld
test
fwait
sub
push
std
mov
bnd
or
gs
and
sbb
mov
jecxz
shrl
int3
mov
enter
lds
or
and
pop
adc
movsl
adc
aad
jmp
pop
and
xchg
pop
bound
xchg
hlt
out
sbb
dec
xchg
mov
xchg
xor
adcb
fisttpll
movsb
inc
stc
or
inc
pop
out
push
dec
xchg
stos
sub
js
xorb
in
lds
lea
push
add
push
int
xchg
lret
push
jnp
test
jl
cmp
jmp
dec
sbb
cmp
fstpl
sub
xchg
xlat
cmp
or
inc
aam
call
js
jnp
popl
in
in
mov
fwait
mov
jns
cli
faddl
mov
in
sub
movd
pop
fidivrl
adc
ds
outsl
xor
sub
lods
ret
nop
test
mov
or
xor
mov
add
pop
stc
fstl
pop
bswap
pop
adc
jmp
sti
icebp
ss
inc
mov
mov
dec
pusha
nop
adc
imul
and
js
push
into
pusha
jg
insb
fisttpll
push
jb
mov
mov
pusha
cwtl
mov
dec
push
inc
out
or
cwtl
dec
push
cmp
test
movsl
jns
pop
and
and
fldcw
push
adc
or
jge
addr16
xchg
adc
or
push
push
mov
aam
and
sbb
jp
xchg
shl
nop
outsb
adc
nop
xchg
mov
shlb
fs
sub
lea
push
push
cmc
add
stos
inc
xor
stos
jg
and
jo
fs
xchg
scas
aaa
jb
xchg
or
lret
sbb
add
les
sbb
fdivrp
inc
shrb
dec
inc
imull
shr
int3
sbb
movsl
cltd
lcall
test
ret
pop
cltd
pop
mov
jns
cld
sbbl
ficoms
jg
mov
add
movsl
push
dec
xchg
or
std
mov
or
push
int
and
and
sbbl
lret
lds
pop
sub
mov
loope
movl
imul
gs
movsb
or
cmp
movb
adc
xchg
mov
push
jns
dec
iret
lcall
xchg
mov
cld
sbbl
pop
inc
popf
mov
mov
inc
enter
out
add
das
cmp
add
pop
push
push
lock
cmp
cmp
push
je
movsl
mov
negb
out
out
test
mov
or
cmpsb
push
orl
shrl
lods
pop
ror
mov
insl
xor
xor
dec
out
cmp
and
sbb
add
mov
sbb
bound
sahf
jl
pop
sub
shr
cmp
fidivrs
xlat
movsl
xchg
iret
icebp
push
cld
xor
popf
jmp
xchg
lahf
ret
mov
mov
xchg
jl
adc
rcl
stos
xchg
icebp
mov
mov
mov
add
push
jns
sbb
fcoml
ja
ds
xor
aas
jmp
filds
aas
cmp
in
push
imul
adcl
outsb
xchg
jnp
sbb
inc
mov
aaa
push
int
jge
test
hlt
jge
cmpsb
aaa
stos
add
ljmp
repz
imul
add
xchg
jp
jne
add
lock
pop
test
sbb
outsb
sbb
sbb
jg
std
push
pop
push
pushf
loop
hlt
sub
les
push
fs
sbb
pop
jo
jmp
movsb
fisubl
fisubs
out
mov
ret
cli
add
fstl
repz
lock
dec
cmp
jns
fld
and
mov
or
arpl
das
and
push
leave
mov
mov
xchg
and
cmp
or
aam
out
fmuls
cwtl
andl
out
or
pop
outsl
adc
jle
aas
inc
out
movsb
icebp
cmpl
push
and
xorb
pop
fcmovb
inc
aaa
arpl
movb
pop
xchg
inc
xlat
inc
adc
xchg
lcall
aam
fmull
addr16
clc
lret
mov
sbb
add
add
or
push
xor
pop
cld
dec
add
in
push
repz
loop
xor
push
cltd
out
fwait
pop
movsb
repz
and
adc
jnp
pop
imul
cmpsl
cs
push
inc
ret
xchg
or
mov
ret
or
mov
ljmp
iret
sti
insl
or
pop
subb
xchg
jb
lods
repnz
lcall
rcr
xchg
sbb
je
sahf
in
mov
pop
and
dec
jb
cmpsb
push
mov
stc
mov
xchg
add
and
mov
pop
lock
add
cs
out
xor
inc
sub
sub
fcmovb
xor
in
call
jmp
or
ret
sbb
inc
lahf
jp
mov
imul
lcall
mov
lea
les
jae
sbb
add
mov
nop
mov
push
iret
mov
repnz
mov
call
and
pusha
fcompl
cli
push
push
jbe
in
aam
inc
xor
loope
sbb
int3
mov
xor
add
mov
inc
shlb
add
push
dec
mov
lock
sbb
cmpsb
jl
dec
xor
mov
push
pop
stos
inc
inc
mov
mov
pop
cmc
push
push
je
cmpsl
sbb
lods
fcomip
stos
cmpsb
out
push
lea
xchg
sbb
fwait
imul
inc
in
ror
dec
iret
push
and
cmpb
dec
xchg
sbb
jmp
orl
push
or
sub
rolb
popa
push
sti
insb
bound
inc
jp
into
push
loopne
sub
or
imul
pushf
leave
out
xor
jp
mov
add
xchg
ror
lcall
sbb
rol
fmuls
aas
jl
sub
das
or
mov
dec
mov
ret
aas
inc
mov
jbe
push
xchg
scas
xchg
xchg
imul
pop
cmp
inc
jb
jbe
xor
notb
icebp
mov
xor
mov
add
inc
call
ret
out
cmp
pop
ror
adc
or
push
cli
stos
pop
xlat
jne
call
sbb
dec
pusha
ljmp
cmc
scas
mov
mov
mov
jo
inc
sub
aas
iret
data16
mov
and
sbb
pop
inc
shrb
mov
lret
jp
cmc
xlat
pop
jecxz
in
popf
cmc
rol
add
cld
cmp
jecxz
je
roll
lret
mov
test
insb
into
mov
cmc
sub
jecxz
push
iret
xor
ror
sub
enter
addr16
adc
lea
xchg
out
xchg
loop
ja
mov
mov
bound
pop
mov
sti
je
out
icebp
cld
pop
push
repz
dec
mov
movsl
inc
dec
out
and
mov
mov
or
lcall
ret
ret
dec
cli
popa
mov
test
jbe
mov
roll
aas
insb
fmuls
xlat
cltd
jb
lcall
jcxz
mov
sub
test
shrl
addr16
ficompl
pop
call
movsb
or
lods
dec
mov
insl
pop
add
cmp
fcmovbe
ret
in
sti
fxtract
hlt
mov
out
rclb
xorl
popf
cmpsb
adc
cmp
loopne
add
int3
in
inc
xchg
mov
or
ds
mov
push
cltd
cli
sub
xchg
mov
sbb
cmpsb
sub
int
xchg
fs
sarb
aas
nop
xchg
movsl
inc
call
xchg
push
dec
mov
jg
cwtl
ss
inc
dec
mov
mov
pop
dec
sub
stc
stc
xchg
pop
jne
dec
dec
pushf
lock
in
ja
jmp
mov
mov
or
aad
push
cmp
inc
mov
push
jg
mov
jle
xor
hlt
xchg
cmp
mov
push
imul
xor
push
xchg
clc
push
sub
jg
jbe
and
jg
outsb
shll
scas
xchg
rclb
adc
jle
cmp
pop
xlat
ret
sbb
loopne
mov
arpl
cmc
stos
cmp
out
pop
lret
mov
and
xchg
cmp
push
xor
sub
hlt
inc
xchg
sbb
sub
dec
ds
es
sti
inc
out
pop
adc
popa
xor
push
std
xchg
adc
fwait
adcl
shrl
and
cmc
and
cmp
sbb
ss
icebp
push
scas
fs
call
xchg
js
xchg
or
mov
xchg
dec
mov
mov
lret
mov
dec
mov
adc
jg
sbb
leave
cmc
or
push
fists
dec
es
lds
mov
or
jp
jge
fstl
fwait
and
cli
push
cmpb
mov
mulb
sub
add
xor
fs
pusha
aaa
add
insl
in
pusha
mov
mov
jmp
mov
data16
mov
gs
je
movsb
into
in
fisubrs
jnp
sahf
push
das
outsl
enter
int
cmc
mov
xor
sti
jecxz
iret
push
insl
lods
dec
push
out
jp
or
adc
fildl
fisubrl
xchg
sarl
inc
pushf
das
mov
imul
in
xor
psubsb
dec
adc
jle
add
dec
add
push
jb
mov
pop
fscale
adcb
sub
imul
mov
cmovno
add
pop
add
outsl
fildll
cmpsb
or
or
jp
dec
push
aad
out
pusha
cmp
clc
mov
adcb
mov
mov
cmp
inc
repnz
xchg
bound
call
adc
xchg
popf
push
mov
push
pop
and
cld
sti
push
mov
aad
popf
stc
and
cmp
push
mov
cmc
dec
push
mov
add
dec
jno
leave
insl
xchg
fidivrs
adc
loope
imul
xchg
or
xorb
jnp
mov
mov
push
sbb
sbb
inc
inc
int3
ret
stos
jle
xchg
dec
arpl
fsubrl
xchg
pop
inc
movsb
xor
adc
pop
mov
xor
shr
xor
or
or
pushf
repz
jmp
cld
dec
iret
cltd
dec
jl
rorl
leave
mov
mov
loope
in
ficoml
test
fidivs
and
lret
sbb
inc
cmp
into
cmc
adc
cli
ret
add
dec
inc
outsb
les
cmc
mov
fisubrs
jmp
xchg
iret
mov
jp
xchg
outsb
pop
adc
in
mov
loop
jae
sbb
pop
jno
dec
inc
out
xor
call
in
sub
adc
int3
pop
xor
subl
or
cltd
fbld
jle
push
dec
jae
sbb
mov
jbe
cmpl
or
dec
sub
sbb
call
mov
movsl
add
pop
enter
jg
sbb
dec
adc
or
fucomip
xchg
stc
insb
dec
call
out
pop
mov
pop
xor
loopne
out
and
xchg
insb
sbb
call
mov
mov
mov
das
dec
inc
in
mov
cli
fmulp
jmp
inc
lahf
loop
stos
in
and
sti
ljmp
or
push
and
jb
ss
std
xchg
sbb
fldcw
push
out
sbb
mov
xor
cmp
js
xchg
rol
cld
data16
sub
cwtl
hlt
in
pop
xor
add
add
les
imul
dec
xchg
cwtl
addr16
dec
cwtl
inc
imul
movsb
mov
push
test
cmp
jge
into
in
repz
jo
xor
lock
pop
int
jmp
es
xlat
jp
adc
ror
cmpb
pop
xchg
xchg
divl
dec
sbb
in
ljmp
je
pop
xchg
fcomps
or
sbb
bnd
xchg
lret
mov
bound
pop
aam
fmuls
mov
jno
sbb
adc
xor
gs
adc
cli
adc
adc
pop
mov
lock
lods
lahf
sbb
pop
shll
lahf
cmpsb
ss
mov
sub
fwait
pop
mov
cmp
test
dec
pop
fistps
adc
iret
loope
sub
add
inc
loopne
or
dec
dec
scas
jl
dec
arpl
inc
add
jge
sbb
or
jne
rorb
loope
sar
pusha
negb
in
mov
stos
mov
ja
mov
inc
xchg
iret
popf
fdivl
jno
push
adc
inc
xchg
fwait
cmc
mov
push
fldcw
in
adc
mov
leave
les
daa
enter
mov
loope
jle
mov
jns
lods
aam
stos
xchg
data16
lcall
adc
out
mov
sti
js
mov
fldl
psubd
rorl
sub
mov
pusha
push
xor
mov
mov
ret
aam
jge
aas
inc
mov
sysret
mov
push
repnz
jg
sbb
orl
fiaddl
aam
jbe
dec
and
fsts
insb
mov
loop
pop
sarb
ret
cmp
xor
push
mov
sbb
jl
cmp
out
and
outsl
movsb
mov
or
cs
pop
insl
lahf
repz
test
sub
mov
xchg
scas
popa
pop
adc
iret
clc
mov
dec
repz
push
push
push
stc
loopne
inc
fdivrs
ffreep
addr16
adc
test
movsl
jl
or
mov
push
mov
movsb
mov
aas
ljmp
std
or
daa
adc
mov
out
nop
int
es
pop
sub
xor
push
lea
fsubs
sub
push
mov
fdivrl
test
and
push
leave
cmp
push
jp
push
jg
imul
push
sahf
mov
repz
addb
push
jae
add
ret
ljmp
outsl
rcll
pop
mov
pop
mov
xchg
scas
sub
js
xchg
jle
mov
push
aam
add
out
aad
addr16
push
push
aam
mov
xchg
lds
jmp
cmp
mov
jb
adc
pop
cmpl
aas
repnz
jecxz
shrl
or
movsb
pop
mov
into
push
repnz
pop
addr16
stc
mov
push
pop
js
mov
push
add
xor
jp
and
cmp
out
xor
pop
cmp
lds
iret
add
insl
jne
mov
jbe
pop
das
add
jle
xchg
dec
xlat
imul
pop
test
or
loop
and
int3
sti
test
cmp
mov
in
sub
aaa
out
mov
out
jle
cwtl
push
pop
mov
cmp
mov
jp
movsb
xor
push
dec
or
mov
sub
repnz
lret
addr16
mov
rcll
mov
cmpsl
jns
jle
push
ret
xchg
movsl
sub
dec
adc
lock
lea
out
fnsave
jecxz
sbb
sub
loope
dec
testl
call
xlat
push
pop
jmp
insb
or
push
cmpsl
in
jmp
scas
mov
pop
insb
in
push
arpl
jnp
test
sub
jns
inc
pop
repnz
push
jb
jge
or
adc
sub
mov
or
sub
xchg
xchg
xor
in
fiadds
cmc
test
fs
shr
add
or
loope
dec
repnz
push
jp
sub
mov
pop
jne
cmc
jl
push
into
add
cmpl
cmc
add
cmp
mov
pop
and
sarb
repnz
or
test
stos
pop
frstor
int
test
or
fisubrs
mov
pusha
xor
jnp
push
push
pop
or
or
mov
pop
xor
mov
or
ja
stos
dec
fwait
push
jmp
es
pop
rorl
orb
iret
add
ss
sub
inc
dec
dec
stc
mov
repnz
mov
repnz
xor
mov
fsubs
jecxz
cmp
jno
ret
jo
or
and
add
lcall
jb
lods
fisubrl
push
cwtl
clc
ret
adc
cmp
daa
inc
sbb
outsb
loopne,pt
pop
rcrl
popa
or
shrb
and
jmp
cs
dec
lock
xchg
insl
sub
sahf
cmp
mov
dec
push
or
pop
clc
cmpl
fisubl
mov
and
mov
enter
mov
mov
sbbl
jge
xchg
ret
push
xchg
sub
stc
insb
shlb
movb
cs
jge
sbb
xchg
mov
jae
and
out
xchg
aad
mov
xor
add
pop
clc
push
xchg
rcll
mov
or
ficoms
jae
xor
push
addr16
sub
ds
xor
mov
xor
int
js
pop
inc
sub
arpl
sbb
insb
xchg
sub
lods
fidivs
imul
xchg
and
jmp
pop
sti
iret
in
pop
jl
aam
mov
roll
push
jne
pop
aad
sub
test
jl
aaa
cmp
adcb
in
push
stos
mov
push
outsb
lcall
out
sbb
inc
xchg
pop
mov
mov
xchg
and
pop
popf
sahf
mov
mov
cli
push
sub
nop
ja
sub
imul
loopne
mov
inc
les
add
push
or
call
mov
insb
dec
scas
aaa
sti
es
aas
jae
mov
mov
leave
add
fcoms
cwtl
push
outsb
jecxz
stos
jecxz
pop
and
das
add
push
mov
and
pop
out
xor
adc
or
leave
ret
aaa
pushf
int
inc
sbb
push
test
jb
mov
adc
mov
int3
test
jmp
jle
pop
mov
mov
popa
repz
push
mov
clc
sub
stos
mov
xchg
rcrb
pop
inc
fisttps
daa
push
inc
dec
cld
in
hlt
nop
out
jo
mov
cwtl
enter
into
sbb
ss
sub
inc
idivl
fs
and
stos
popa
lods
in
lods
inc
rcll
pop
out
nop
ljmp
jl
fucomp
mov
pusha
jecxz
xchg
push
xchg
mov
aas
and
jo
jae
mov
mov
inc
sti
mov
and
leave
inc
stos
fbld
out
int
pop
jno
sbb
adc
pop
dec
mov
addb
fisubs
das
shll
mov
cmpsb
push
out
sub
aam
xlat
loop
stos
dec
dec
aas
xchg
push
je
or
outsb
inc
sti
xchg
rcrl
divl
shl
outsb
pop
xor
cmp
fsubs
sub
dec
mov
jp
dec
push
pop
repz
dec
mov
fimuls
add
mov
sub
mov
iret
repnz
mov
mov
lahf
mov
mov
lods
cs
je
popa
mov
mov
xchg
cmp
mov
aas
pusha
sbb
decl
popa
sub
pop
sub
pushf
lock
xor
or
xor
xor
cmp
lods
ljmp
aad
insb
fwait
jo
lock
popa
and
mov
lds
dec
sub
xchg
xchg
cmp
dec
lahf
and
push
jmp
pop
mov
add
push
jmp
jg
mov
dec
stc
sti
pushf
mov
insl
iret
or
adc
sub
stos
jge
cltd
inc
inc
pusha
xchg
js
popa
push
out
scas
xor
dec
push
xor
mov
inc
arpl
stc
xchg
out
int3
mov
mov
jle
sbbb
or
xchg
mov
pop
lcall
loop
jg
in
enter
imul
stc
les
ret
cmp
adc
outsl
mov
in
aas
pop
loop
in
pop
pusha
or
in
lods
shr
xchg
xor
fs
jbe
push
lret
insb
or
mov
test
aaa
xchg
jge
push
inc
pop
inc
hlt
cmpsl
js
jmp
dec
cmp
jno
roll
adc
sti
mov
sbb
mov
and
mov
mov
push
push
clc
push
push
addl
push
xor
push
mov
mov
xchg
test
xchg
inc
dec
pop
out
adc
push
test
fs
add
je
cli
in
jle
mov
shll
jge
aas
ret
mov
cmp
or
mov
xor
dec
out
mov
in
pop
enter
icebp
adc
xchg
push
push
repz
inc
shrb
scas
sub
gs
ret
add
cmp
add
push
in
jns
lahf
and
pop
fsubrs
loopne
cmp
mov
mov
pop
pop
in
out
jmp
pushf
cmp
sbb
xor
dec
imul
cmc
test
lahf
lock
insl
jnp
aad
xchg
cmp
sarl
xlat
jp
lcall
dec
loope
enter
test
aas
dec
scas
es
ficoms
xorl
ja
stos
xor
jge
mov
notb
fldt
mov
or
sbb
dec
fisubs
shll
mov
idiv
aas
test
mov
shr
mov
push
mov
in
sbb
dec
and
testb
insb
addr16
das
icebp
mov
inc
stos
cmc
pop
mov
dec
xlat
stos
adc
lods
mov
or
dec
movsl
mov
out
or
sbb
aaa
jae
pop
mov
push
jbe
xchg
lcall
movsb
sub
js
xchg
pop
ljmp
or
xchg
push
ljmp
mov
cmpsb
daa
out
xchg
add
jo
xor
xor
push
inc
and
into
or
lods
cmp
cli
push
test
in
push
arpl
fcmovnb
mov
cmp
pop
cld
ficomps
inc
sub
in
data16
daa
xlat
cli
push
cltd
scas
sbb
xchg
add
push
xchg
es
adcl
daa
cwtl
sub
lods
cmp
adc
jb
xlat
sbb
jmp
iret
ljmp
repz
xchg
hlt
sub
xchg
or
pop
adc
pushf
sub
int
mov
shll
mov
pusha
adc
push
mov
faddl
inc
sahf
inc
out
adc
outsb
mov
lret
push
aad
lret
lods
ror
lret
pusha
test
imul
pop
push
rcll
add
lock
roll
cmp
sub
das
sub
jae
add
mov
xor
imul
push
jl
dec
sbb
jl
stos
or
and
push
xor
xchg
into
aad
out
test
out
mov
lea
push
mov
and
jns
push
xor
lcall
and
test
inc
jae
inc
fisubrl
mov
jo
jns
daa
mov
cli
cmp
push
jbe
and
aaa
push
xor
aam
data16
push
and
inc
loope
mov
pusha
sbbb
aaa
xchg
imul
dec
nop
mov
inc
in
decb
fsubl
fildll
xor
mov
inc
xchg
adc
add
lcall
int
out
jmp
or
outsb
sahf
push
mov
rclb
push
fs
and
cmp
neg
loope
xchg
add
mov
fwait
lahf
into
addr16
nop
jge
sbb
cmpsl
repz
xchg
add
popf
lds
arpl
pop
or
stos
push
add
xor
push
xor
pop
fcompl
pushf
mov
add
loope
stc
out
dec
les
sub
jmp
cmc
jmp
jle
test
mov
nop
inc
dec
fs
push
lods
jle
inc
mov
repz
inc
or
jmp
adc
aaa
adc
mov
popa
inc
ss
arpl
pop
mov
add
adc
mov
lods
jle
mov
enter
push
fistps
xor
outsb
mov
out
pusha
or
inc
lods
sbb
addr16
xchg
aaa
lret
clc
push
test
jle
jp
das
mov
sti
sbb
mov
scas
sti
mov
cmp
pop
inc
mov
sbb
inc
cli
daa
in
test
imul
or
jae
addr16
and
xchg
xlat
push
mov
jb
and
push
out
xor
inc
and
scas
stos
pushf
xchg
or
mov
sbb
lret
shrl
add
cs
mov
popa
fst
daa
mov
call
jmp
and
stos
or
iret
pop
fsubrl
les
pop
inc
mov
cltd
sbb
mov
std
and
fwait
data16
jle
ja
icebp
push
push
cli
movsb
mov
mov
sub
aas
test
out
inc
xlat
xchg
mov
fsts
mull
shrb
clc
xlat
lea
int3
or
xchg
push
sub
setl
fldl
cmp
cmp
int
inc
data16
and
jmp
mulb
loope
sub
mov
mov
imul
test
jg
push
push
rcrl
mov
fsubl
nop
or
mov
push
fwait
ljmp
pop
cltd
out
mov
push
or
mov
fs
dec
mov
add
loope
pusha
test
pop
cmp
imul
sbb
loope
inc
xchg
lods
xchg
pop
mov
lock
pushf
push
imul
pop
xor
aaa
in
or
inc
push
test
dec
cmp
imul
addr16
or
jo
mov
mov
mov
dec
addb
cmc
lcall
mov
cmp
sub
das
test
ljmp
ss
dec
or
lahf
jge
scas
push
or
in
add
in
scas
cmp
push
adc
or
hlt
les
inc
cmp
fs
popf
or
jge
xchg
mov
aam
adc
pop
imul
add
mov
sti
xchg
enter
pop
xlat
xchg
clc
push
stos
and
leave
insl
je
lahf
push
popf
sbb
mov
imul
mov
bound
pop
mov
inc
jne
jns
jmp
out
or
xchg
enter
inc
dec
arpl
xchg
or
jne
lods
push
daa
int3
add
loope
in
push
jns
fcoms
add
xchg
jns
in
and
xchg
adc
lret
pop
outsb
sbb
sub
pop
push
dec
inc
adc
fldt
adc
sbb
ds
cld
stos
movsl
out
outsl
xlat
ljmp
pop
cmpsb
pushf
sub
dec
jo
les
inc
pandn
lcall
in
push
repnz
movsb
mov
pop
mov
hlt
jg
adc
ror
mov
clc
int
inc
mov
mov
pop
push
push
lock
lret
push
xor
add
sbb
sbb
xor
shlb
repz
out
popf
lret
inc
push
leave
fisubrs
out
repz
cmpsl
or
jne
mov
push
clc
pop
dec
movsb
cmp
les
jecxz
mov
testl
das
xor
hlt
jne
loop
jne
xchg
jle
cmp
or
stos
xchg
movsb
cli
call
xor
ja
int3
popa
inc
fdivrs
add
ja
xchg
shll
adc
call
xchg
inc
mov
enter
jbe
jle
cmpsb
xor
jmp
imul
fprem1
test
pop
es
aad
and
aaa
iret
jno
cmp
push
iret
add
rorb
pop
pushf
cmp
cmp
cmp
idiv
insl
js
sbbl
pushf
pop
sti
cmp
add
mov
add
mov
jb
sti
push
jge
add
add
xor
lock
lods
push
aad
inc
fists
sub
pop
lock
pop
pop
mov
fstpt
call
into
ret
jbe
jne
cmp
jo
push
and
insl
pop
sub
add
mov
xor
cwtl
and
shlb
sarl
fsubl
jecxz
cmp
jecxz
es
push
xor
pop
in
cmpsl
and
push
stc
adc
dec
xchg
push
pop
dec
rcr
out
dec
sti
in
or
push
pop
icebp
mov
push
sbb
jo
addb
push
push
mov
mov
outsl
pop
add
jle
cmp
cwtl
push
movsl
stos
leave
dec
sub
sub
adc
out
adc
cmp
xchg
sbb
mov
push
mov
fldln2
mov
inc
mov
cmp
std
push
sub
roll
aas
jmp
cmp
pop
loope
lock
dec
int
lret
ds
jp
add
mov
bnd
cmp
dec
outsb
inc
sbb
or
jno
mov
dec
mov
shrl
sbb
xchg
leave
pop
les
jne
ljmp
cmp
iret
cs
dec
pop
rcll
adc
xor
jae
or
stc
call
mov
faddl
xchg
push
push
adc
xchg
orb
into
xor
sub
imul
std
jle
jae
cld
jno
mov
test
xor
or
lcall
mov
scas
xor
sub
int3
mov
int
shlb
mov
je
ljmp
sub
mov
xor
call
mov
add
ror
lods
sti
push
mov
fwait
aam
dec
add
xchg
add
or
jp
scas
mov
out
aaa
and
sub
mov
aam
dec
addr16
adc
orb
or
gs
daa
mov
pushf
ds
aas
ljmp
jg
scas
rcl
loopne
or
cmpsl
mov
scas
cmp
pop
cmpsb
lcall
inc
repnz
cmp
lods
jo
dec
sbb
sub
lock
stos
cmc
cmp
xchg
inc
test
movsb
cmp
xchg
out
ljmp
insl
cmp
mov
fisubs
cmp
stos
call
mov
sbbl
sub
cmp
push
xchg
scas
cltd
stos
js
xchg
mov
sarl
adc
lcall
decb
xor
mov
jne
dec
sbb
in
movsb
push
fidivs
fs
push
add
pop
lods
aam
jle
into
xor
insb
cmpsb
push
ss
popa
shlb
push
xchg
jnp
test
sub
lret
mov
mov
lcall
push
push
sbb
and
mov
mull
sub
cmp
testl
inc
adc
pop
fwait
sti
cmp
faddp
push
adc
fwait
imul
data16
clc
imul
ret
pop
xchg
mov
mov
dec
mov
pop
int3
dec
andl
sbb
mov
push
enter
in
pop
push
cmp
sbb
scas
fisttpll
fs
movsb
out
push
adc
cmp
mov
adcb
mov
sahf
mov
shr
mov
stos
mov
dec
push
inc
jl
lahf
sbb
jmp
add
jnp
xchg
inc
pushf
adcb
leave
loopne
sbb
inc
xchg
jge
fwait
mov
addr16
ljmp
inc
mov
sbb
ficomps
mov
lcall
inc
push
shrb
sub
ret
jnp
gs
pusha
rcrb
jmp
pop
pusha
cltd
aad
in
loope
cld
aas
sbb
lret
test
repnz
pushf
enter
repz
cmp
fucomi
es
lods
jno
inc
dec
pushl
jp
sbb
shrl
into
push
fstl
out
cmc
enter
xchg
roll
fisttpl
je
or
ret
decl
addr16
mov
hlt
in
pop
dec
test
adc
mov
xchg
jge
sub
in
sub
jb
sti
sub
addr16
inc
bound
insb
shrl
sub
mov
ljmp
loopne
push
das
fwait
and
aas
rcr
mov
adcb
clc
rcr
pop
jns
push
into
jo
cmp
mov
push
stos
dec
lea
sub
pop
stos
cmp
sahf
dec
ficomps
mov
or
push
sub
fmull
cmp
out
push
movsb
fisttpll
mov
push
jae
push
push
das
ja
pop
subb
adc
sub
adc
aad
adc
ss
je
or
mov
and
rorl
mov
stos
adc
dec
inc
sbb
and
cmp
dec
mov
dec
dec
mov
mov
push
popf
fwait
cmpsb
enter
fildl
leave
ror
pop
loope
add
push
mov
and
inc
pop
fucomip
jge
pop
jns
mov
shlb
scas
jne
in
pop
xchg
cs
repz
movsl
pop
adc
cltd
lods
mov
out
ja
loopne
cmp
pushf
pop
nop
rcrl
cs
hlt
jae
fwait
mov
fdivp
mov
pop
lret
popf
and
pop
sbb
popa
mov
xlat
imul
or
fs
xor
je
mov
push
leave
add
mul
icebp
jne
cmpsl
and
rorl
out
sbb
into
ss
in
mov
pop
mov
fnstsw
mov
xor
fst
dec
adc
pop
lcall
pop
inc
or
scas
in
xchg
movsb
test
push
or
imul
dec
mov
iret
pop
xor
shll
nop
imul
sub
shlb
mov
test
and
in
in
push
add
fwait
loope,pt
xor
loop
xlat
test
jmp
sub
xor
push
mov
push
enter
sbb
fldl
repz
mov
pop
arpl
cwtl
fldcw
fcmovnbe
xchg
mov
xchg
or
dec
movb
lods
xor
xor
stos
mov
ss
out
cmp
fistps
cmp
cmp
icebp
dec
ja
push
push
mov
andps
shlb
test
inc
sbb
ffree
and
div
pop
sub
push
les
push
cwtl
mov
shr
xchg
inc
sub
pop
rolb
aas
jle
sbb
xchg
addr16
add
add
ret
cmp
ret
call
stos
fwait
or
rclb
xchg
cmpsb
ljmp
orl
add
cld
shlb
jno
xchg
pop
xchg
fs
and
fsubrs
inc
in
dec
xchg
cmp
pop
push
arpl
pop
ljmp
shlb
or
mov
repnz
push
inc
sub
out
test
cmp
sub
lea
sub
addr16
int3
loopne
pop
loopne
or
inc
mov
sbb
inc
aas
jge
fneni(8087
push
leave
not
mov
fwait
mov
lock
push
repz
js
xchg
push
adc
inc
inc
out
push
jae
mov
dec
dec
add
xchg
pop
mov
and
or
xchg
repnz
cmovne
mov
dec
fstpl
inc
adc
lock
pop
enter
add
add
pop
cmp
test
or
lds
push
lea
ljmp
movsb
jo
call
push
sbb
inc
sti
ret
bound
imul
les
mov
divb
and
or
hlt
push
jp
push
sub
push
fdivs
out
xchg
and
mov
ds
int3
imul
pop
mov
mov
sbb
inc
fmull
dec
lret
jno
repnz
jge
push
xor
dec
inc
or
pop
daa
xchg
fisubl
sbb
inc
insl
testb
add
sahf
sub
mov
dec
cmp
xorl
aam
in
and
test
push
push
cltd
repz
pop
call
inc
or
or
imul
mov
mov
cmc
cld
jns
mov
mov
loop
int
add
popa
lds
pop
das
enter
popf
sbb
ljmp
cmpsb
ljmp
pop
adc
test
or
xchg
leave
pop
sti
xchg
icebp
mov
std
frstor
add
daa
xchg
cmp
lods
adc
dec
aam
add
insl
and
adc
xchg
stos
jo
mov
cmp
jo
mov
sbb
push
and
outsl
outsl
mov
or
xor
xor
fwait
pop
jbe
test
push
stos
lods
dec
ret
ret
inc
inc
mov
push
mov
fwait
sub
or
cmp
test
into
or
pop
les
ror
add
pop
inc
jecxz
mov
add
pop
sub
lret
adc
leave
mov
aam
jecxz
mov
jp
pop
out
fsubr
lcall
pop
pop
xchg
fisubrl
sub
mov
adc
orl
sub
dec
push
daa
adc
adc
cmp
fcomp
sub
jg
lods
inc
xor
fdivp
sbb
inc
lahf
repnz
scas
call
aaa
pop
adc
daa
xor
cmp
dec
fwait
cmp
adc
mov
lcall
mov
int3
cwtl
xchg
push
jb
add
movsl
mov
lret
jg
cmpsb
dec
inc
mov
adc
cltd
dec
fmul
outsb
sbb
sbb
inc
push
fwait
loopne
imul
je
jno
cld
jle
dec
sub
cmp
push
or
stc
sbb
test
cltd
ss
fisttpll
cmp
sarl
xchg
inc
js
sahf
in
mov
and
adc
mov
mov
push
jns
xchg
addr16
loope
mov
push
outsb
mov
fcmovne
rorb
mov
xchg
jmp
xor
lret
jmp
leave
dec
push
mov
lcall
popa
lock
dec
fsub
xchg
pusha
cmp
in
xchg
fimull
es
add
jo
inc
inc
xchg
in
adc
popa
fldenv
pop
lea
lock
and
loop
mov
cmpl
int3
inc
mov
xchg
movsb
scas
outsl
scas
pop
xchg
xor
dec
stos
push
outsb
mov
xchg
cmp
inc
cmp
lret
or
and
mov
mov
dec
addl
aas
or
mov
js
or
dec
mov
add
roll
sbbl
mov
jo
xchg
mov
incb
add
pop
pop
push
mov
cmp
mov
hlt
mov
mov
add
shr
push
mov
dec
fisttpl
sub
xchg
aaa
imulb
pop
in
popf
mov
add
insb
xchg
repz
xor
fsub
xchg
mov
jecxz
aam
sub
outsl
insl
lods
sbb
das
xor
sbb
notb
shll
mov
or
iret
pop
adc
addr16
sahf
outsl
sbb
stc
in
outsb
push
push
fildl
dec
xchg
fistl
test
xchg
ljmp
sbb
push
xchg
adc
adc
inc
jno
dec
inc
repnz
in
xor
testb
bound
loope
arpl
inc
mov
rcrb
cli
jno
xor
xchg
out
mov
lods
mov
pop
outsl
loopne
xor
mov
mov
repnz
or
fsubp
and
cld
cmp
sbb
push
sti
cmp
mov
addr16
rolb
dec
iret
inc
and
and
xor
outsb
xchg
pop
lea
inc
adc
xor
dec
lcall
adc
or
push
pop
or
icebp
fisttpll
fdiv
or
cmp
dec
ret
ret
inc
dec
fidivrs
lock
mov
mov
or
adc
popa
pop
cmpsl
cmp
aas
jg
sub
or
popf
call
cmp
jp
stos
scas
dec
sarb
cmp
dec
mov
les
loop
mov
and
ds
ficompl
xchg
sub
fnstenv
clc
mov
cmp
int3
shlb
in
dec
psubw
jae
add
mov
add
inc
movaps
push
pop
shlb
paddusb
loope
xor
adc
mov
mov
cli
ret
push
pop
jne
pop
test
push
mov
pusha
add
sahf
and
cmc
sub
dec
jecxz
std
sbb
sbb
sbb
jmp
jge
daa
gs
xchg
push
mov
cli
cs
mov
mov
xchg
stos
mov
in
xor
xchg
sbb
movswl
repnz
aad
add
mov
test
scas
dec
adc
lea
leave
mov
xchg
in
sub
xor
xchg
loope
pushf
mov
xchg
or
mov
mov
cmp
ret
jmp
in
xchg
mov
cmp
sbb
jg
inc
and
cmp
sbb
inc
xlat
xchg
jb
and
in
rorl
mov
fstps
insb
pushf
fiadds
aas
inc
or
out
and
push
sbb
push
sbb
pop
test
or
es
push
xchg
dec
mov
sbb
dec
adc
push
movsb
pop
mov
hlt
daa
adc
mov
xor
stos
push
jmp
aad
dec
int
fcompl
out
enter
xchg
pop
pop
sbb
out
aad
push
cltd
cltd
loopne
repz
mov
jne
xor
cmc
sub
cmp
lods
fsubrs
ficoms
lock
scas
stc
iret
pop
je
test
and
loop
add
or
jns
test
and
dec
divl
xchg
scas
idiv
mov
lret
sarb
loope
leave
in
js
mov
add
and
cmpsl
dec
xor
int
mov
adc
cmp
movsb
hlt
inc
xchg
stc
push
add
jmp
mov
call
push
mov
mov
sub
addl
ret
rcl
add
nop
inc
in
and
mov
add
fs
ja
xorl
sub
pop
stos
gs
aaa
sub
mov
and
mov
mov
cmp
cmpsb
pop
jmp
loop
das
jno
dec
xchg
pop
jnp
les
js
test
stos
hlt
mov
jne
inc
push
sub
fs
dec
test
dec
xor
mov
sbb
dec
mov
movl
pop
and
inc
cmpsb
out
mov
sub
mov
xchg
ret
loopne
in
push
dec
testb
or
push
mov
in
and
sbb
add
inc
mov
sbb
push
stos
push
add
iret
pop
add
adc
std
fs
ljmp
push
lock
xchg
jmp
xchg
sbb
xchg
cmp
inc
imul
sahf
lds
mov
and
mov
mov
cmpsb
ljmp
xor
mov
ret
and
aad
movsl
cli
sub
inc
cld
xor
xor
jb
fiadds
push
lahf
hlt
je
cmpsl
iret
test
push
in
lea
jbe
jg,pt
gs
and
jo
fisubs
sub
aad
cli
xchg
data16
out
test
inc
movsl
mov
ss
aam
lcall
test
movsb
inc
jno
loopne
add
pop
or
sub
mov
popf
mov
cmp
xchg
mov
pop
push
cmc
sub
jg
lods
addr16
outsb
mov
add
mov
fidivs
out
pushf
xchg
sbb
insb
dec
mov
lret
mov
ljmp
sbb
ror
test
sub
loopne
push
adc
mov
pop
jo
jg
mov
xchg
or
or
or
les
sub
mov
jb
insb
sub
dec
sub
mov
insl
or
pop
rcr
sysexit
mov
inc
xchg
or
aad
mov
fistpl
movsl
fildl
mov
mulb
loop
jp
inc
xchg
scas
aaa
xor
mov
and
das
insl
sarl
lret
inc
mov
in
xor
sbb
pop
cli
sbb
sbb
mov
lds
adc
and
push
adc
out
adc
inc
out
mov
test
movsl
sbb
cs
sub
mov
addr16
and
cmp
ljmp
dec
mov
push
hlt
repz
jecxz
adc
ljmp
shlb
jb
inc
shlb
fisubl
in
insl
negl
lret
andb
jecxz
movq
or
cmp
lods
fisttpll
adc
mov
xor
imul
repz
cmp
fucomip
pop
lahf
jb
in
in
sub
in
jmp
sti
ljmp
int3
std
insb
lcall
dec
add
xchg
aad
xchg
notb
cmp
js
and
pop
add
movl
push
dec
mov
jmp
sarl
repz
test
adc
jmp
ja
out
jb
xor
pop
in
or
dec
stos
cmc
shlb
xchg
xchg
mov
fistpll
inc
cltd
out
stos
scas
sub
pushf
jge
sarb
xor
mov
pop
fisttpll
jecxz
add
sub
lcall
in
adc
mulb
and
jnp
sbb
jne
xor
andb
sbb
punpckhdq
ss
or
aas
jae
adcl
jo
mov
xchg
add
cld
or
rorl
int3
in
adc
test
loop
or
or
aas
les
and
sbb
sub
and
adc
stos
outsl
sbb
jns
outsl
and
cmp
int3
add
jmp
pop
popf
out
xor
inc
scas
jmp
scas
movsb
mov
in
notb
dec
adc
push
lret
jbe
int
daa
add
testl
std
xchg
pushf
test
and
pop
cmp
push
imul
shrl
shlb
popf
push
mov
add
decb
add
mov
pusha
push
mov
xchg
lret
fwait
movsl
inc
loopne
mov
ret
orl
mov
push
movsl
mov
lock
push
and
mov
inc
outsl
scas
adc
mov
mov
js
add
push
jp
movsl
fcoms
and
aad
shll
scas
js
and
cmp
inc
and
sbb
rcll
ljmp
mov
add
shl
fsubs
rcr
sub
fprem1
ret
jb
lods
notl
mov
ret
fadd
je
lahf
mov
je
loop
push
sahf
roll
adc
sbb
or
stc
or
fwait
cli
xchg
mov
nop
push
dec
xor
test
or
scas
or
mov
lcall
dec
dec
lock
pop
je
fsubrl
mov
sub
int3
jg
fsubrl
aas
lods
pop
inc
mov
arpl
cmp
daa
push
push
ss
push
or
mov
mov
jmp
inc
mov
inc
push
push
and
jmp
jbe
aaa
fcoml
pop
mov
add
int3
out
add
mov
repz
negb
mov
push
jae
mov
roll
bound
fcmovnbe
push
sub
sub
mov
xchg
mov
mov
adc
cmp
mul
out
jle
aam
xor
decl
sti
xchg
cmpl
dec
sub
jl
loop
in
sbbl
jo
jmp
dec
jns
mov
icebp
xchg
jns
int3
arpl
pop
and
cmp
add
sbbb
jle
jmp
or
in
xor
add
sbb
xor
cwtl
out
add
call
and
rsqrtps
jo
inc
pop
mov
cmp
movsl
pushl
ljmp
pop
sub
inc
movsb
into
gs
incl
mov
out
stos
pop
loope
ja
pusha
adc
aad
lret
sub
movsb
sbb
sbb
add
adc
xchg
xor
push
push
push
in
push
xor
js
loope
inc
sub
aam
mov
push
in
fsubrs
addr16
aad
dec
sub
sub
sbb
jg
movsl
mov
mov
clc
inc
xchg
popa
loopne
ljmp
imul
fsubr
jl
inc
imul
xchg
jns
iret
jp
jmp
lahf
rcrl
ret
xlat
js
adc
mov
add
dec
in
cmp
cltd
aaa
aad
mov
movsb
addr16
stc
cmp
xchg
and
mov
lock
pop
gs
push
dec
adc
dec
cltd
mov
mov
add
call
out
rcr
fisubrl
dec
negb
or
pop
popa
or
insl
mov
in
adc
and
jle
adc
lods
or
dec
jle
lods
jp
mov
sub
push
pop
cmp
test
or
mov
hlt
mov
imul
and
into
mov
or
and
adc
cwtl
mov
insl
sar
mov
mov
jp
jne
data16
mov
pushf
ja
insb
mov
adc
cmp
mov
xchg
cmpsb
loopne
adc
push
stos
pusha
sub
ljmp
xchg
in
mov
jmp
xchg
xor
add
mov
and
cmp
xchg
sbb
mov
lea
add
mov
mov
sub
jg
out
dec
xor
divb
xchg
mov
jb
cmp
cmp
jbe
adc
push
mov
pop
leave
push
push
jns
sub
xchg
arpl
mov
bound
cmp
add
call
insl
dec
rorl
xchg
push
jne
add
jo
inc
inc
xchg
and
mov
lahf
xchg
mov
mov
jo
ja
mov
imul
push
push
lods
cld
or
dec
loop
add
data16
ficoms
add
pop
push
sbb
sub
pop
mov
xchg
jnp
js
push
and
test
fcoms
lock
pop
cld
mov
adcb
fs
leave
mov
or
adcb
enter
lcall
sbb
mov
test
add
pushf
pushf
scas
idivw
test
test
subl
xchg
or
and
sub
jmp
push
scas
jl
aam
js
inc
addr16
pop
cmpsl
in
cmp
mov
movsb
outsl
mov
jl
std
ja
std
adc
sub
inc
hlt
mov
and
outsb
xor
jnp
repnz
fisubl
ds
dec
icebp
inc
out
mov
insb
xchg
lods
sbb
mov
sbbl
jge
imul
addr16
xchg
mov
inc
fistpl
imul
lds
gs
cmpsb
mulb
mov
mov
and
dec
insb
dec
sub
cmp
sbb
inc
enter
cmp
xchg
mov
es
test
lods
call
and
js
sarb
cmp
shll
mov
pop
and
add
push
mov
push
push
in
mov
leave
pop
into
push
mov
and
mov
loope
inc
sbb
addr16
iret
jg
faddl
and
rcll
lret
imul
cmp
lret
xchg
lret
fldl
ja
jo
sub
pop
fimuls
jns
ss
push
dec
dec
pop
xlat
pop
call
test
cmp
and
mov
and
in
and
imul
movl
inc
adc
out
push
xor
push
cmp
jmp
jle
dec
je
jp
ljmp
into
mov
mov
rcrb
fstp
or
mov
aas
popa
pop
or
in
stos
fldcw
fldenv
orl
dec
mov
scas
outsb
mov
push
clc
movsl
mov
clc
movsl
ret
add
inc
sahf
xor
adc
and
lods
push
and
sub
insb
push
fsubl
fidivs
jns
cmp
pop
xchg
mov
imul
cmpsl
push
inc
idivl
repz
mov
xor
inc
sarl
out
mov
mov
add
repz
cmp
movsl
mov
imul
cmp
push
add
pop
mov
push
push
push
lahf
out
in
imul
push
imul
je
into
and
dec
out
and
add
add
ds
mov
repnz
jne
adc
sbb
pop
jl
sbb
sbb
and
mov
jne
xor
lods
inc
xchg
xchg
and
mov
add
push
mov
stos
and
dec
sub
imul
lds
adc
add
push
rcr
mov
add
xor
shrb
cld
inc
mov
js
xchg
jmp
mov
pop
stos
pushf
mov
jns
mov
jb
cwtl
push
jg
shl
xchg
adc
mov
push
dec
leave
push
cmp
fs
shll
mov
push
and
xlat
or
sbb
jbe
dec
orl
adc
into
imul
stos
xor
cmpsl
xor
icebp
pop
push
cwtl
mov
sbb
gs
test
fwait
sbb
sub
mov
out
and
mov
pop
or
add
imulb
cmp
cmc
cmp
lcall
lock
xor
inc
iret
sub
xchg
and
dec
pushl
jns
movsb
mov
add
fs
stos
ret
fstpl
pop
jae
ror
ljmp
lahf
mov
pop
push
dec
sbb
popa
data16
xchg
andl
ret
or
xchg
aas
fstpl
push
pop
sub
xchg
pop
cltd
dec
jmp
in
call
int
dec
mov
sbb
mov
adc
mov
sub
pop
in
repnz
fisubl
sbb
inc
nopl
pop
addb
jnp
and
lret
mov
scas
dec
cmp
filds
cmovnp
mov
mov
shrl
mov
mov
fnsetpm(287
or
push
add
sti
cld
cli
iret
push
add
aas
sub
mov
or
call
stos
adc
rcrl
mov
shlb
mov
jnp
stos
xchg
mov
test
test
cmp
bound
xor
std
and
and
adc
fidivs
data16
jle
xchg
hlt
imul
and
xchg
aam
xor
mov
in
jge
iret
inc
push
jmp
fs
ljmp
sub
call
sti
push
aam
in
sbb
mov
sub
push
xlat
mov
mov
cmp
aas
cld
push
pop
scas
movsb
cmp
repz
sub
mov
mov
cs
test
and
and
sarl
addr16
inc
xor
push
mov
adc
mov
testb
das
cmp
sar
ffree
and
cmp
pop
pop
sar
push
test
push
xor
js
xor
cltd
lds
stos
sbb
mov
aam
xlat
jp
les
ret
jne
cmp
dec
clc
arpl
push
pop
hlt
push
daa
adc
out
fmull
jecxz
roll
outsl
xchg
shrl
inc
orl
xchg
pop
nop
pop
loop
xchg
adc
xchg
or
pop
mov
negl
or
scas
test
daa
sahf
and
insb
mov
xchg
lods
cs
inc
pushf
lea
jns
pop
clc
js
scas
sub
sbb
sbb
mov
mov
loope
dec
sbb
adc
nop
mov
es
xchg
shl
and
dec
icebp
cmp
sbb
or
jge
adc
ss
mov
push
mov
adc
rolb
addr16
loope
cmp
mov
adc
jp
mov
int
push
add
das
push
cmp
push
inc
out
movsb
aad
cmpl
and
pop
dec
or
mov
ljmp
fidivl
mov
call
mov
xchg
push
sub
psubsw
xor
clc
lret
sbb
out
and
jge
pop
leave
xor
mov
sbb
int3
xorb
in
incl
sub
mov
dec
add
inc
adc
inc
and
sub
jb
push
rorb
push
add
lock
pop
add
jmp
inc
xlat
sub
call
stos
inc
ret
repnz
loope
repnz
ja
jp
imul
cmp
call
add
add
or
jns
dec
push
sub
shlw
stos
std
decb
xchg
daa
ja
mov
cld
int3
lret
push
inc
mov
scas
fstps
and
shl
popa
jo
push
pushf
xchg
fcmovnb
pushf
fdivl
lahf
inc
enter
xchg
hlt
jnp
sbbl
testl
shrl
xchg
mov
mov
mov
add
xor
pop
fcompl
inc
fdiv
adc
mov
inc
or
fs
mov
jge
xchg
or
push
xlat
cmpsl
rcl
cli
insl
cmc
jae
lea
insb
rclb
mov
in
and
cwtl
xchg
pop
out
mov
std
or
jmp
js
in
add
pop
adc
leave
flds
push
xlat
push
jg
jp
and
jns
mov
aaa
mov
xchg
gs
gs
mov
or
lods
mov
stc
cli
cmp
hlt
or
cwtl
out
dec
or
lcall
or
sub
dec
test
test
mov
cmp
int3
dec
hlt
inc
les
out
loop
imul
nop
add
cmp
sub
testl
in
adc
cmp
and
popa
sbb
repz
cmc
loop
mov
push
adc
repnz
lds
dec
jp
xor
xchg
in
sahf
push
jge
popa
out
sbb
cld
push
popa
xor
xchg
clc
mov
call
mov
dec
sub
popa
lea
pusha
fsubr
ret
testl
cmp
fsubr
sub
adc
xor
outsb
imul
repz
fidivrl
push
in
mov
inc
insl
adc
rorb
test
jl
pmulhw
xor
fistps
mov
cs
cmp
dec
subl
dec
adc
das
or
test
and
inc
inc
ds
sti
imul
int3
mov
int3
jo
jae
xchg
lock
movsb
jns
pop
cmpsl
xchg
xorl
stc
insl
inc
mov
je
and
cmp
lcall
or
repnz
gs
stc
in
jno
xchg
sbb
in
jo
mov
and
xchg
xchg
aam
cmp
adc
lret
aaa
inc
xchg
sub
jne
pop
add
cli
mov
sbb
ljmp
jmp
sarb
out
push
sysret
cmc
sub
rol
mov
inc
jns
daa
mov
jo
inc
pop
sbb
sbb
sbb
mov
mov
das
fmull
xor
popa
dec
mov
or
mov
jl
cld
jo
out
push
xchg
sbb
or
aad
out
pop
xadd
dec
imulb
xor
daa
cmc
leave
pop
movsl
adc
xchg
xchg
mov
test
xchg
push
or
imul
adc
cmc
in
sub
cmp
jecxz
popf
je
fldl
push
mov
std
pop
push
loope
jp
add
sbb
and
xor
or
cmc
xor
pop
popa
jle
push
sub
hlt
mov
cmpsl
jbe
js
pop
shlb
and
nop
fdivrl
cltd
popf
in
out
mov
dec
test
mov
sbb
sbb
hlt
jge
repz
mov
in
cmpsb
sub
push
insb
cs
fsubl
std
mov
fwait
jae
sbb
rcl
pop
out
mov
or
jbe
addr16
and
pop
jb
int
mov
in
fdivl
rcrl
jno
je
dec
xor
jl
adc
mov
clc
andb
xor
fiaddl
or
or
jns
sti
push
or
mov
imul
cltd
pop
lcall
sti
fmull
xor
cs
mov
lock
mov
xchg
rcr
sbb
and
das
pop
cmc
sbb
jmp
jle
or
dec
pop
test
ja
xor
repz
xchg
dec
adc
push
inc
sarl
dec
int3
std
or
notb
lret
out
in
mov
jbe
ret
add
mov
jo
inc
rol
add
adc
adc
jne
sbbl
mov
fisubl
mov
rol
shl
cmp
push
push
jno
mov
in
nop
cmp
xchg
outsl
mov
inc
push
mov
sub
mov
lea
add
scas
dec
out
mov
jp
or
test
in
sbb
add
loopne
xchg
fdivrs
aam
ja
sti
xchg
movsl
pop
inc
js
dec
fidivs
push
stos
lcall
in
ss
jae
cmpsl
loopne
xchg
shrb
je
xor
jl
adc
mov
or
jb
add
gs
shrl
and
movsb
popa
xchg
add
es
lock
aad
aaa
dec
inc
cmp
cld
lcall
test
test
in
fimuls
mov
mov
pop
and
lods
mov
xchg
sub
and
pop
hlt
hlt
imulb
dec
test
mov
add
test
aad
in
lods
xor
fnsave
scas
push
iret
inc
mov
mov
fists
inc
cli
gs
mov
xchg
js
or
mov
mov
mov
jne
push
mov
hlt
sub
sub
adc
arpl
pop
xchg
sub
pop
mov
dec
out
subb
push
mov
outsl
mov
ja
jl
nop
and
or
jge
mov
mov
neg
icebp
out
mov
sbb
mull
ret
or
push
popa
jae
fistl
add
xchg
ss
addb
out
pop
push
mov
ret
cmp
mov
push
jns
lea
cmp
hlt
mov
xor
or
or
and
cmp
out
mov
pop
stc
and
pushf
cld
adcl
fcoml
sub
dec
cld
push
cwtl
ficoml
xchg
mov
sarb
ud0
daa
lds
sbb
jns
pop
stos
xor
mov
dec
nop
lcall
das
popf
dec
mov
sbb
and
aam
xor
lock
cld
scas
sub
test
dec
cmp
enter
shrb
rclb
pop
call
push
push
data16
test
xchg
lods
xor
mov
cmp
jecxz
and
sarl
mov
sbb
cmp
ret
lea
bound
sub
andl
pop
movsl
jp
push
fst
cmp
cmpsl
jge
push
mov
test
jne
dec
addb
pop
jns
shr
lahf
push
fdivl
test
add
sbb
mov
xchg
jo
imul
mov
lods
xlat
push
or
ja
mov
jecxz
inc
stc
fldl
pop
and
mov
daa
add
mov
sbbl
sub
pop
xor
ljmp
fs
sahf
cmp
popf
test
mov
sub
xor
iret
cwtl
movsl
jecxz
nop
repz
lods
sbb
mov
inc
mov
xchg
mov
je
push
push
and
cmp
repz
adc
mov
mov
call
cmpsb
cmc
out
mov
add
sbb
cmp
scas
or
xor
xor
and
icebp
cmp
test
cwtl
cltd
cli
xor
ds
lret
ss
in
mov
jae
xor
and
popa
push
cmpsl
sti
aas
cmc
hlt
xlat
cltd
nop
xchg
pop
bound
lret
lret
in
or
add
aas
call
je
jecxz
in
adc
sbb
push
call
in
ja
add
and
lcall
pop
xchg
pop
sub
sti
pop
inc
call
or
out
addl
cmpsl
int
push
pop
cmc
aas
dec
test
or
fwait
sbb
sbb
nop
xchg
setae
push
mov
adc
aas
iret
lods
sbb
inc
inc
ret
cwtl
gs
fstps
sar
push
fsubl
mov
sub
jle
inc
push
cmp
iret
cli
mov
fcoml
insl
mov
popa
add
addr16
mov
lea
call
sbb
adc
cltd
outsl
cli
movsl
ret
or
les
sub
sub
ret
dec
push
xor
pop
add
fnsave
jge
xchg
mov
rolb
es
xchg
dec
jle
repz
sarb
push
popa
fneni(8087
xor
xor
xor
in
rcl
xchg
mov
xchg
inc
dec
div
mov
in
mov
sti
mov
fwait
mov
out
roll
sarb
pop
jno
jae
mov
fs
push
cmp
cmp
jns
shlb
mov
push
mov
fdivrs
sub
fcompl
cmc
rorb
lret
pop
cs
repnz
mov
bound
or
scas
pop
scas
jl
daa
aam
ss
jl
xor
push
cmpsl
jae
jge
and
fnstsw
scas
sub
fsubr
inc
inc
mov
daa
cmpl
pop
dec
dec
insb
or
adc
pop
loope
mov
push
jl
dec
icebp
pop
hlt
xchg
iret
bound
cmp
adc
or
daa
scas
push
push
sarb
lds
cmp
mov
repnz
xchg
pop
sub
cmp
xchg
sub
cmp
rcrl
xor
bound
stc
mov
pop
cmp
out
push
and
aas
sbbb
push
divl
and
hlt
or
and
push
mov
xor
lods
push
pushf
loopne
xor
pop
lret
jb
arpl
out
or
or
fnstenv
dec
stos
ja
out
outsb
cmp
mov
adc
and
movsl
popa
into
out
ficompl
outsb
je
loop
or
xor
int
adc
and
jae
imul
push
es
ret
cmp
not
cwtl
sbb
or
push
stc
stos
scas
dec
xchg
out
mov
loope
inc
pop
adc
adc
inc
cmc
int
dec
or
pop
andb
stos
lret
mov
and
scas
scas
clc
popf
lods
sahf
insb
loopne
push
mov
popa
inc
jno
jbe
bound
nop
cmp
sub
out
mov
popf
fisttpl
pop
add
aaa
jecxz
and
or
sbb
cmp
shlb
push
or
mov
fists
mov
or
jecxz
jns
jecxz
clc
adc
loop
xlat
rorl
lea
insl
adc
and
rclb
jmp
push
loope
inc
cs
or
popa
inc
into
jbe
push
push
xor
inc
adc
addl
mov
insl
iret
mov
ds
in
jbe
mov
ret
sbb
in
in
fwait
mov
incb
andb
xor
cmp
cmpsl
sub
test
xor
leave
pop
pop
and
lcall
fbstp
sub
add
dec
or
inc
add
repnz
mov
jbe
sbb
out
sahf
or
lea
sub
fwait
inc
mov
push
mov
leave
scas
mov
push
fcoms
sar
mov
in
mov
inc
adc
inc
adc
mov
xchg
std
pop
in
cmp
out
or
mov
jae
mov
and
pop
sarb
dec
xchg
clc
fcmovnbe
push
pop
js
dec
gs
sub
sub
inc
cmp
out
aaa
mov
jns
pop
movb
vsqrtss
push
xor
in
loope
in
cld
cld
jg
fs
cltd
shrl
pop
dec
mov
std
dec
popa
repnz
imulb
test
xchg
fwait
inc
fldl
mov
insb
mov
and
cmp
pop
lods
aad
call
or
mov
mov
push
sarl
push
movsl
or
xchg
rolb
inc
and
cld
mov
push
scas
das
sbbl
ja
arpl
or
sti
pop
xchg
adc
imul
adc
sahf
outsl
cmp
dec
inc
aad
daa
lods
xor
xchg
setnp
mulb
dec
mov
push
mov
iret
sub
push
test
sbb
add
lods
jecxz
iret
mov
pop
xchg
cli
stos
mov
mov
loopne
mov
jne
mov
push
sarb
stos
out
xorb
push
repz
loope
cs
daa
test
jmp
pusha
mov
sbb
adcl
and
mov
xor
popa
jp
daa
dec
ja
push
xor
jmp
inc
push
dec
das
xchg
dec
mov
aaa
inc
es
pusha
dec
sub
adc
lret
sub
cmp
xlat
lret
ret
sub
imul
or
push
cli
cltd
mov
stos
test
rorb
test
xchg
cmp
test
call
jae
jns
mov
pop
pop
cld
outsl
fisttps
insl
outsb
lea
test
lcall
stos
mov
adc
or
js
sub
xor
cmp
jl
push
push
int
or
mov
jb
add
loopne
cmpl
xor
xchg
dec
pop
mov
mov
push
adc
sbb
mov
push
out
xchg
push
inc
jnp
jmp
and
hlt
mov
add
xchg
movsl
mov
jbe
adc
lods
gs
test
inc
int3
sbb
daa
inc
xchg
xchg
sub
rcrl
jge
mov
adc
andl
lea
push
bound
sbb
pop
dec
clc
mov
xor
mov
scas
out
lret
xchg
cmp
jno
leave
pop
popf
lahf
outsb
dec
mov
jge
push
ret
add
mov
mov
jnp
ss
sar
sahf
mov
inc
mov
jmp
adc
inc
sbb
mov
mov
ret
ja
sub
xor
dec
push
sbb
pop
xchg
fs
xor
jp
mov
mov
inc
int3
sahf
loop
iretw
jnp
jns
mov
add
or
sbb
in
push
cmc
insl
push
sti
mov
mov
sbb
xchg
sbb
sub
aad
stos
cmp
pop
mov
dec
dec
and
and
ret
mov
or
rolb
cmp
out
mov
cmp
jo
jbe
mov
push
aaa
push
push
shl
js
lea
imul
cltd
mov
mov
jg
pop
jbe
mov
sub
sub
add
sbb
sbb
insb
inc
loope
lahf
in
mov
fildl
icebp
xlat
test
add
dec
out
and
call
xor
xchg
jb
sub
or
jp
push
pusha
cmp
lahf
test
mov
dec
loope
sbb
stos
ss
pop
test
push
pop
mov
and
es
incl
cmp
xchg
rorb
push
sbb
xchg
fsts
enter
fs
icebp
rcrl
mov
cs
xchg
mulb
scas
xlat
push
dec
ljmp
pop
mov
fs
adc
cltd
add
dec
jne
mov
pop
stos
arpl
pop
jg
pop
fnstenv
test
sahf
pop
sub
and
not
cmp
jb
ja
fcoml
or
xor
into
mov
pop
ret
xor
lock
dec
ljmp
jmp
xchg
adc
jl
xchg
inc
mov
sbb
cld
push
dec
inc
xor
repz
xchg
cmp
cmp
inc
loope
adc
rcr
pop
adc
mov
neg
lret
stos
add
insl
sti
xor
sub
test
in
lods
xchg
xlat
orl
insb
test
pop
dec
psrlw
bound
sar
shrb
add
inc
inc
push
jns
imul
adc
xchg
push
jge
stc
cmp
into
leave
pop
sub
pop
inc
cld
dec
aas
mov
insb
test
lret
das
mov
neg
and
add
insl
add
cmpsl
pop
shl
inc
popa
dec
test
or
mov
mov
icebp
push
loope
xor
in
cwtl
orl
sbbb
aaa
sbb
aaa
and
rol
in
lret
lods
mov
push
push
jo
inc
jg
cmc
int3
inc
cmpsb
jb
cltd
repz
mov
dec
mov
faddl
inc
in
repz
insl
jecxz
and
cs
clc
ret
pop
cmp
in
mov
pop
pop
cmp
mov
lret
and
jp
jo
lret
das
jle
or
jae
xchg
sbb
stos
rcrb
dec
std
add
outsb
cmpsl
jl
fldenv
outsl
pop
fidivs
aaa
fwait
hlt
cmpl
inc
ljmp
mov
fiaddl
cmp
sbb
ds
fwait
mov
insl
xor
rclb
shl
stc
adc
subl
jle
xor
das
push
iret
out
lock
testl
pushf
dec
push
rep
rcrb
xchg
rorl
enter
push
stos
stc
add
in
pusha
rcl
push
inc
push
loopne
push
mov
jbe
mov
or
mov
and
mov
mov
push
scas
loope
shlb
test
arpl
scas
fwait
inc
addr16
mov
ret
popf
inc
ret
arpl
mov
arpl
pop
insl
pop
push
daa
dec
pop
fs
orb
pop
icebp
and
pop
shlb
mov
pop
lods
push
leave
mov
test
or
add
arpl
mov
and
push
ror
idivb
xor
fildll
mov
mov
xor
add
iret
fldcw
push
push
fmuls
outsb
shl
inc
imul
sbb
in
or
mov
arpl
js
xchg
data16
shrb
inc
adc
jae
sarb
imul
mov
sbb
sub
pop
es
jne
lods
and
out
xor
movsb
mov
or
adc
jae
xchg
mov
cmp
leave
inc
addr16
mov
in
in
jmp
loop
cmp
xchg
loopne
icebp
dec
fisubrl
loope
push
mov
mov
stc
add
fcomi
addb
xchg
jne
jno
popf
je
pop
jp
insw
out
call
cmp
sub
jp
sahf
inc
xchg
fisttpll
loope
pop
pusha
sbb
pop
lahf
jns
ds
popa
addb
jmp
jno
addr16
sub
push
push
push
mov
and
sti
jns
mov
jle
jl
or
push
adc
fbld
add
out
push
enter
mov
cli
into
sti
lods
inc
and
dec
and
repz
cmp
movsl
jb
push
xor
pusha
cld
mov
mov
outsb
das
cmp
mov
push
ljmp
sub
add
je
mov
or
inc
sub
fildl
mov
push
and
shlb
movsb
adc
dec
pop
cld
pop
loope
adc
mov
mov
loopne
jo
xchg
testb
out
iret
inc
lret
fwait
lahf
nop
fldl
mov
add
in
push
push
icebp
pop
daa
andl
xor
fdivrs
mov
ret
pop
mov
push
fildl
jg
mov
dec
and
nop
adc
test
jns
movsb
push
sar
jg
xchg
rcr
pop
popf
inc
imul
push
loop
cmpsb
and
push
test
into
popf
movsb
pop
lahf
bnd
mov
gs
nopl
xor
out
adc
push
jg
jg
dec
les
lcall
mov
push
int
and
pop
jb
pushf
ja
lcall
jo
in
rcll
fs
mov
test
mov
sbb
add
addr16
sbb
push
fs
adcb
loope
aaa
cwtl
xchg
shl
ret
mov
mov
sahf
mov
rcl
clc
push
ss
outsb
fdivp
rcl
clc
aam
dec
ss
cmp
dec
frstor
pop
jle
mov
pop
js
or
sahf
push
dec
pop
xchg
mov
mov
xor
inc
mov
push
rcr
inc
aaa
mov
repnz
mov
xor
imul
enter
loope
imull
push
popa
ja
xlat
xchg
ljmp
repz
push
rol
mov
mov
dec
ja
xchg
adc
popa
sahf
sbb
xchg
adcb
out
and
xchg
add
pop
scas
sub
gs
add
in
xchg
sahf
aaa
es
lret
add
mov
and
lods
adc
pop
jnp
fs
stos
ss
jge
sahf
sub
xchg
addb
dec
jnp
fistpll
sub
les
jmp
add
adc
ljmp
jl
test
sub
clc
sahf
rcr
push
sub
xor
and
cmp
je
cmp
xchg
adc
mov
lds
adcb
adc
loopne
aad
xchg
fcmovbe
or
test
bound
stos
push
lock
mov
inc
loopne
fisubrs
add
lods
sub
sub
mov
sbb
pusha
adc
cli
jl
repnz
mov
hlt
clc
mov
insl
sbb
mov
rcll
int
push
push
dec
and
daa
imul
cmp
test
and
out
lods
ds
mov
mov
pop
shll
outsb
inc
and
fmuls
es
sub
je
ds
cmpl
jno
push
jecxz
fiaddl
jmp
out
push
sbb
fnstenv
ret
or
mov
cmp
fwait
clc
in
outsl
inc
xor
dec
mov
inc
dec
pop
ficoms
mov
sub
mov
and
lea
cld
dec
lock
int3
in
pop
repz
and
cmpsl
push
add
pushl
push
and
out
xchg
mov
xchg
mov
js
mov
popf
mov
add
mov
dec
lods
push
mov
cwtl
shlb
cmp
jo
pusha
pop
xor
jle
push
ljmp
or
sti
cmp
cltd
mov
mov
outsb
inc
mov
and
push
es
and
sbb
jae
loop
jbe
imul
mov
dec
jns
xadd
xor
in
xor
add
push
mov
push
sub
imulb
sub
jo
fwait
mov
rcrb
andb
jg
sub
push
jg
xor
xchg
out
pushf
pop
scas
jmp
std
dec
and
nop
xor
jle
jge
dec
add
add
xchg
xchg
dec
cmpsb
or
out
mov
mov
add
mov
mov
or
mov
or
jge
lock
mov
push
out
adc
adc
stos
stos
dec
inc
or
xchg
adc
push
push
leave
shlb
call
push
inc
inc
loop
ret
xlat
filds
xchg
cmp
add
mov
inc
push
mov
inc
call
pop
mov
adc
jmp
adc
fdivs
xor
insl
icebp
and
ja
sti
cmp
inc
push
pop
pop
test
or
dec
pop
or
jle
loop
xchg
jle
and
shll
popf
fnsave
sub
jmp
cmp
push
dec
dec
pop
fsubl
or
mov
sub
ret
mov
mov
adc
enter
lret
pop
in
movsb
xchg
sub
ss
cmp
cli
mov
and
test
fcoml
cld
sub
mov
orl
fidivrl
in
xor
std
outsb
jmp
add
fildl
sbb
lcall
jo
pop
mov
add
shlb
mov
test
xchg
cli
mov
add
lock
xchg
sbb
cmp
subl
rorb
icebp
les
fsts
inc
aas
push
popf
push
and
and
fcoms
xchg
aam
gs
xchg
and
loop
xlat
mov
loopne
lea
mov
mov
jecxz
jmp
xchg
pop
decb
jno
push
push
jnp
in
fnstsw
jo
pop
add
cmp
jecxz
bound
xchg
and
dec
sub
sub
jmp
lret
sbb
adc
xchg
hlt
addr16
int
push
lods
aaa
ds
sub
test
call
add
add
fnstenv
sbb
push
repz
xor
popa
push
stos
iret
inc
xor
or
roll
sub
rol
lret
movsb
or
subb
xchg
pop
fwait
xchg
push
movl
imul
in
int3
insl
fidivs
sbb
fwait
out
das
rcrb
fs
leave
fmull
mov
inc
mov
pushl
pop
subb
jle
incl
sbb
les
xor
sub
cmpsb
add
pop
mov
dec
cmp
out
xchg
loop
cwtl
pusha
add
inc
fidivs
push
pop
sub
push
lds
cs
xchg
cwtl
cwtl
sub
icebp
push
sub
and
push
scas
std
and
into
in
in
pop
in
dec
data16
pushf
sbb
dec
lahf
test
int3
flds
insl
orb
iret
fucomp
test
stos
cmpsb
aas
js
add
cwtl
test
pop
mov
dec
or
outsb
lea
push
mov
inc
mov
int3
pop
dec
pop
in
jns
popf
shl
scas
rcrl
adc
repz
or
mov
jecxz
jno
pop
iret
jle
in
repnz
fmull
andb
mov
and
fldenv
cmp
stos
int3
or
sub
dec
aas
int
gs
repz
repnz
iret
xchg
xchg
ret
adc
pusha
jae
cmc
sbb
fnstenv
push
adcb
ja
sub
sti
decb
dec
scas
xchg
repz
cmp
and
xor
fs
nop
cld
lds
xchg
push
mov
lret
cltd
jbe
push
mov
jecxz
xor
sbb
in
aas
dec
push
subl
adc
sbb
stos
test
cmp
aas
cwtl
loopne
dec
shrb
mov
and
cwtl
into
xchg
push
push
jbe
xchg
inc
inc
imul
popf
jge,pt
add
mov
outsb
dec
arpl
outsl
or
add
and
mov
loopne
mov
shll
fdivrs
cmc
imul
fildl
fildl
jno
xchg
sbb
add
cmc
stos
out
test
inc
insb
cmp
cmp
and
inc
xchg
imul
adc
jbe
mov
cmpsl
mov
dec
dec
add
xchg
pop
mov
jp
dec
jbe
jecxz
xchg
test
sbb
int3
mov
dec
enter
push
subl
mov
in
in
add
xchg
data16
fildll
mov
fxam
pop
cmp
pop
fisubrs
cmp
fistpl
mov
test
aam
adc
or
in
mov
mov
test
cmpsb
or
inc
aad
or
pop
addr16
sub
hlt
xchg
jecxz
jae
push
sbb
jae
xchg
fidivl
das
mov
sub
lods
push
xchg
add
bound
jno
sbb
movsb
leave
adc
das
fs
jb
daa
cltd
mov
ret
and
aad
neg
cmp
jecxz
out
xchg
xchg
es
dec
sbb
xor
inc
iret
scas
or
xchg
xor
mov
imul
or
leave
jp
sub
lods
mov
pusha
das
xor
xchg
gs
lods
pop
rorb
xchg
aad
pop
cmc
repz
out
push
xchg
xor
out
dec
dec
cwtl
jbe
out
mov
imul
mov
hlt
xchg
mov
cmp
ds
xor
fsts
add
push
sub
in
idivb
pop
ds
das
push
hlt
mov
fucomi
movsl
mov
ret
inc
sbb
pop
push
xchg
and
std
mov
int
jnp
xor
mov
iret
mov
lods
jns
dec
xor
fldcw
or
and
sub
mov
inc
loop
adc
inc
mov
in
sbb
jbe
popa
ss
pushl
sub
jnp
add
sub
incb
push
sbb
and
imul
push
push
icebp
mov
mov
cmp
xchg
mov
mov
or
outsl
leave
jno
add
mov
mov
push
lret
xchg
icebp
sarl
cmpsl
sbb
pop
lods
pop
mov
insl
popf
pop
adc
and
andl
dec
add
ficoml
cmp
stc
fdivs
movsl
daa
rorb
sbb
std
les
stos
std
xor
insb
lret
xor
fidivs
stos
jp
mov
inc
mov
movsb
shll
scas
arpl
data16
push
fdiv
or
test
mov
ror
wbinvd
xchg
cmp
dec
dec
sub
stc
ljmp
push
and
xchg
dec
subb
adc
mov
ret
jns
stc
out
inc
loop
ss
sbb
mov
arpl
mov
mov
mov
lods
int3
sub
fs
js
into
xor
sub
shld
xor
jae
ret
sbb
out
popf
inc
or
jae
rorb
sub
pusha
mov
mov
mov
adc
mov
iret
call
pop
push
or
dec
lods
pop
adc
or
std
rorl
in
pop
mov
pop
inc
dec
mov
in
jbe
ja
push
stos
mov
sbb
repz
in
push
lret
test
rol
adc
std
mov
xchg
sbb
hlt
int
into
inc
pop
movsb
pop
addr16
sahf
sbb
in
mov
in
pop
fwait
movsb
or
lea
push
enter
fisubrl
aad
push
sub
add
in
adc
mov
ficomps
rcl
dec
or
jg
mov
lret
mov
mov
sbb
cltd
mov
jbe
mov
jb
bound
aam
sub
rclb
pushf
insb
fsub
out
pop
push
sub
ja
jl
bound
std
sahf
sti
mov
popf
fimuls
bound
xchg
mov
sub
and
xchg
scas
sti
jmp
mov
and
mov
sbb
les
movsb
cmp
xchg
sub
pusha
sbb
sub
sub
cld
cmpb
or
ret
jge
jbe
mov
hlt
shr
mov
mov
sub
repz
ficoml
xor
cltd
out
xor
ja
cltd
icebp
and
jecxz
xchg
movsl
inc
mov
or
cli
test
daa
fwait
xchg
mov
or
push
test
out
adc
xchg
cwtl
mov
loope
add
test
jl
mov
xchg
inc
mov
jb
sbb
jae
imul
jb
dec
xor
mov
adc
jp
mov
call
mov
ja
xlat
test
or
inc
inc
movsb
loopne
pop
movsl
add
mov
inc
inc
jge
mov
adc
addr16
in
or
scas
aad
and
push
fxch
leave
add
pop
jge
pop
xor
clc
dec
cs
stc
add
inc
mov
ljmp
xchg
xchg
mov
fildl
and
aad
fldt
pop
mov
mul
xchg
outsl
cmp
aam
push
dec
or
inc
xlat
sbb
out
movsl
cltd
push
ret
jl
mov
sahf
push
daa
fstpt
mov
jmp
mov
cmp
movb
dec
push
inc
das
sbb
mov
ljmp
mov
in
rcrb
add
jns
mov
pop
mov
shrl
rorl
loope
mov
push
pop
addl
inc
jl
lcall
ror
pop
inc
and
inc
int
xor
loop
sarl
add
stos
into
mov
mov
inc
jp
lret
mov
shll
fistpl
imul
gs
inc
xchg
pop
xchg
jp
fdivl
jge
js
clc
cwtl
ret
test
fstpl
sbb
mov
pushf
subb
adc
add
addb
sbb
jnp
daa
lods
ret
nop
or
pop
adc
or
add
out
push
loopne
ds
jge
pop
fstl
dec
mov
rolb
mov
mov
imul
sahf
push
insl
outsl
insb
aaa
in
xchg
jp
aad
mov
push
insl
cmpsb
mov
jl
subl
imul
or
cwtl
pop
lea
sub
loopne
mov
das
enter
iret
sbb
pop
addr16
into
mov
jmp
lods
fldl
cld
inc
stc
cmpsl
mov
jmp
adc
xchg
ret
aam
mov
adcl
in
rol
sbb
fiaddl
add
xchg
movsb
adc
jnp
into
adc
cltd
mov
ja
pop
inc
popf
or
adc
add
imul
push
pop
jbe
stc
pop
stos
push
mov
clc
mov
xorl
sub
or
lahf
adc
xchg
lea
adc
das
hlt
mov
adc
lock
xchg
and
lock
or
adc
cmp
ds
push
fidivs
dec
and
cs
fiaddl
and
xchg
stos
insb
mov
out
add
shl
and
inc
push
dec
lods
mov
xor
sub
movsb
movsl
mov
dec
fwait
mov
push
cmp
aaa
dec
arpl
add
push
dec
lahf
out
test
mov
pop
xchg
ja
or
out
mov
push
mov
inc
int3
mov
pop
or
arpl
xchg
sub
adc
or
and
les
pop
pop
rorl
pop
sbb
xchg
out
out
push
out
xchg
xchg
ss
insl
sub
imul
stc
sub
xchg
fxam
frstor
cmpsl
pop
jmp
adc
lret
out
push
scas
jo
add
cli
push
cmc
scas
or
inc
notb
mov
mov
aad
and
iret
mov
addr16
push
ss
repz
insb
repz
or
and
xchg
mov
adc
movsl
stos
stos
insb
xor
mov
sbb
aam
add
enter
mov
mov
cmp
and
cmp
out
out
loopne
mov
out
dec
daa
scas
sti
es
fnstsw
push
cmp
xchg
arpl
in
mov
sub
ret
jbe
xchg
into
sub
sub
cmp
out
mov
adc
mov
or
insb
pop
dec
push
popf
popa
push
or
sbb
xchg
frstor
das
pusha
mov
jecxz
xlat
ja
es
jns
ret
popf
inc
mov
adc
mov
test
scas
in
push
outsb
mov
push
xchg
jo
in
sbb
jbe
rclb
xor
cmpsb
int
mov
fidivl
test
jg
hlt
aam
rclb
mov
outsb
mov
sbb
daa
fbld
or
shlb
cmp
pusha
popf
add
pushf
fdivs
xchg
fcmovne
mov
into
sbb
mov
ret
mov
and
lods
lods
push
mov
inc
push
jl
fistps
loop
lret
or
xchg
cmpsb
ss
inc
cmc
add
sbb
mov
inc
adc
lds
adc
jbe
add
mov
leave
ds
mov
push
pop
jp
jmp
dec
subl
lods
nop
inc
fildl
xchg
push
or
lods
xchg
lahf
sub
mov
cli
sub
fsubrl
cli
pop
imul
mov
dec
clc
hlt
dec
xor
arpl
in
mov
filds
inc
sub
adc
sbb
imul
inc
jp
xor
in
sbb
add
xchg
jo
push
cli
push
mov
dec
pop
cmp
test
mov
mov
sub
imul
int3
lds
ficoms
or
jno
loop
mov
icebp
les
inc
std
subb
out
pop
xchg
xchg
jne
pop
jle
push
sub
adc
lods
jns
ja
push
iret
adc
cmp
mov
jmp
dec
pop
jle,pn
inc
or
or
js
or
mov
inc
mov
xchg
popl
xchg
xor
stos
subl
mov
xor
cmp
les
std
inc
sub
jnp
add
xchg
mov
int3
pop
add
add
pop
aad
enter
out
test
int3
jae
and
jle
addr16
xlat
scas
je
sbb
add
jecxz
ljmp
and
lods
dec
gs
push
lds
cmpb
or
add
pop
add
decl
movsb
add
adc
mov
push
imul
pop
sarl
push
xchg
mov
sbb
lods
out
mov
mov
cmpsl
push
sarb
jle
jnp
enter
adcl
loop
xchg
cwtl
adc
scas
cmpsb
inc
inc
call
sbb
cmp
jmp
adc
xor
push
imull
rcrl
hlt
xchg
in
pop
daa
imul
jp
mov
cld
adcl
mov
rorl
push
pop
mov
shrb
adc
outsb
inc
xchg
cli
ja
cmp
fwait
add
jecxz
jns
popa
mov
es
ds
and
notb
fsubr
sbb
mov
call
dec
xchg
jp
enter
aas
call
fcoml
out
add
outsl
shr
pop
sahf
stos
mov
xchg
nop
enter
add
ss
push
repz
out
and
xchg
cmp
inc
repnz
scas
repz
push
xchg
xchg
mov
test
sbb
sub
repz
or
das
outsl
int
std
enter
sbb
je
cmp
jbe
mov
loopne
push
push
repz
pushf
dec
pop
lcall
push
push
div
rorb
xchg
aam
cmp
test
lods
push
sbb
inc
into
testb
pop
or
push
xchg
in
jo
jne
iret
testb
sub
test
loope
mov
out
out
out
cli
movsl
jecxz
xlat
inc
push
les
je
mov
inc
and
push
sti
mov
aam
in
inc
addr16
in
adc
adc
sub
mov
rcrb
js
repz
jmp
into
mov
in
or
push
or
fbstp
add
mov
or
mov
scas
loop
jmp
loopne
testb
xor
adc
dec
push
xchg
xor
ja
roll
jp
adc
out
std
pushf
mov
mov
pushf
cmp
mov
sub
mov
lods
mov
ljmp
jne
fstenv
mov
or
cmp
jne
movl
dec
pop
mov
das
mov
jp
incl
inc
andb
mov
inc
xor
cmp
ss
pop
mov
or
inc
ss
sbb
sbbb
dec
pop
pop
test
push
mov
push
lcall
add
or
or
mov
mov
push
adc
mov
clc
cmpl
out
cmc
movsl
test
psubw
lret
or
pop
or
mov
into
shlb
or
push
xchg
mov
mov
or
dec
adc
cmp
sub
mov
mov
or
test
xchg
pop
push
cli
aad
into
test
push
stos
dec
mov
in
and
mov
sub
adc
test
cmp
in
sbb
dec
mov
dec
or
out
addl
ja
mov
loopne
jo
out
pusha
adcl
sti
imul
data16
scas
repnz
bnd
mov
nop
mov
mov
mov
add
dec
pop
mov
jns
adc
leave
int3
dec
push
jne
mov
outsl
xchg
sarl
stc
cli
push
push
pop
jns
stos
jl
jae
insl
ss
push
mov
sbb
lds
out
inc
inc
dec
adc
sub
and
mov
xchg
flds
push
mov
jb
jmp
ljmp
int3
dec
mov
fdivrs
imul
ret
mov
adc
jl
or
stc
shll
les
mov
and
pop
adc
mov
mov
out
call
das
push
and
inc
test
fiaddl
add
lods
jle
test
outsl
pop
inc
lret
aas
inc
ret
xlat
gs
cmp
push
and
lea
dec
mov
mov
jge
jnp
lcall
push
lret
xchg
adc
ret
aad
mov
cli
lods
mov
cmpsb
jmp
das
sbb
sub
shr
jns
in
pop
mov
xor
ret
mov
xor
push
mov
movsb
inc
dec
loope
add
mov
sbb
sub
bound
pop
mov
push
sbb
inc
loopne
repz
ljmp
xorl
fstps
or
mov
mov
push
lcall
roll
dec
push
mov
jnp
fcomp
cmp
mov
push
mov
push
ret
stos
push
call
sbbl
pop
dec
out
aam
lcall
push
push
adc
bnd
and
inc
xor
xorl
test
pop
jl
inc
push
in
mov
mov
idiv
test
or
in
xorb
repnz
push
das
or
pop
loopne
pusha
and
jae
sbb
push
adc
or
hlt
lock
ret
mov
mov
sub
aas
add
xchg
and
pop
rcr
adc
sub
ficoml
jmp
jbe
push
jp
stc
popa
pushf
inc
jnp
mov
orl
stc
testb
repz
leave
and
sub
sbb
mov
lahf
popf
movsb
notb
imul
jb
mov
lods
xor
and
pop
add
mov
andb
ds
popl
lock
lds
mov
inc
or
daa
popa
or
cmc
test
xorb
das
push
adc
subl
out
dec
insb
xchg
ljmp
adc
sbb
pop
aad
cltd
out
bound
mov
dec
pop
rcrl
loope
es
pop
mov
inc
and
mov
and
inc
std
cmp
inc
jecxz
arpl
loope
add
jns
jnp
mov
sbb
repz
dec
or
and
mov
cli
dec
fmuls
cmp
xor
fcmovb
jnp
addr16
lock
adc
fstpl
dec
jnp
pop
xor
and
testb
int3
in
out
add
aam
das
mov
call
dec
fstps
shll
xor
int
and
xor
fidivrs
mov
mov
insl
fwait
sub
out
lret
xor
and
fistpl
sbb
sub
cmp
movsl
shll
cwtl
leave
push
push
jno
mov
cmpsl
test
int3
scas
repnz
sub
cmpsl
rolb
jmp
xchg
dec
jbe
push
stos
dec
cmc
pushl
std
jl
dec
or
mov
ljmp
cmp
inc
xchg
enter
push
pop
jmp
mov
mov
insl
pop
stos
leave
cmp
outsl
pop
testl
mov
shr
jno
pop
inc
repnz
jo
repnz
push
dec
gs
adc
cmc
lock
int3
push
sbb
mov
out
push
adc
xchg
mov
test
push
outsl
jle
icebp
out
repz
stos
lock
cmc
mov
push
jp
mov
push
jecxz
fdivs
lea
cltd
cs
insb
rcrb
scas
hlt
sbb
movb
add
data16
enter
xor
insl
ds
cmpsl
js
or
nop
and
xchg
adc
fistl
adc
mov
mov
mov
in
sub
shrl
sub
xchg
sub
inc
sbb
xchg
aad
inc
fadds
pop
int3
jmp
test
and
scas
and
pop
add
jecxz
sub
lock
fs
pusha
clc
into
add
mov
in
mov
ss
xor
dec
sub
lcall
addb
xchg
or
outsb
out
imul
shlb
xchg
push
or
cmp
dec
mov
orl
xchg
sub
int
cmp
addl
cmpsb
daa
xchg
jecxz
mov
loop
lret
adc
jg
lea
rcll
pop
pop
xchg
je,pt
push
xor
cmpsb
les
ljmp
lea
fsts
pop
mov
jns
leave
addr16
mov
add
or
jmp
idivl
outsl
sub
push
fisttpl
sub
mov
clc
mov
sbb
rorl
lret
xor
cld
daa
iret
rcl
add
inc
pop
loop
ljmp
xchg
adc
sub
pop
mov
hlt
fsubl
push
cltd
jb
xor
pop
subl
xor
pop
fsts
push
xchg
jae
cmp
or
sbb
fwait
std
daa
test
push
outsl
js
mulb
xchg
ljmp
gs
sbb
sbb
push
imul
cmpsl
add
dec
cmp
push
mov
fdiv
lea
inc
rcl
push
popa
add
push
and
mov
mov
dec
push
inc
fsubrl
add
push
insb
gs
inc
mov
pop
cmp
pop
push
cmpsb
out
fisubrl
add
ret
mov
jmp
sti
std
cltd
jmp
xchg
nop
inc
scas
or
dec
jb
xor
and
pusha
inc
stos
pusha
cmp
or
aas
cmp
mov
push
shlb
xor
xchg
fistpl
xchg
cmpsb
inc
pop
sub
cs
push
icebp
dec
and
loopne
jo
mov
xchg
xor
add
cmp
shlb
insl
sbb
out
xorb
mov
popa
push
std
out
testb
repz
xor
jns
les
ret
call
jbe
pop
ja
and
pop
int3
and
jno
adc
mov
push
push
or
jne
subl
fildl
cmp
sub
pusha
shr
andl
jl
jns
in
mov
repnz
imul
mov
sub
scas
pop
and
lahf
xchg
mov
dec
mov
movsb
mov
hlt
sub
jnp
sahf
bound
dec
xor
adc
adc
mov
dec
out
sbb
xchg
mov
divb
sub
push
pusha
mov
pop
pop
adc
stos
xchg
jo
dec
bound
jb
ret
ja
xlat
daa
add
data16
pushf
or
push
and
inc
cmpsb
jecxz
push
mov
sbb
jp
ss
mov
int
adc
cli
insl
lret
xchg
push
jo
inc
push
cltd
add
pop
iret
lret
push
xorl
loope
and
mov
outsl
mov
mov
push
and
cltd
ljmp
loope
mov
aaa
jp
sbb
adc
out
add
sahf
lcall
add
xchg
jge
add
test
inc
mov
ja
arpl
sbb
adc
xorb
pushl
push
scas
xor
mov
fisubrl
cmp
cmp
aam
xchg
notb
xlat
sub
int
inc
dec
ja
fsubl
fwait
into
push
subb
shll
xchg
mov
into
subl
aas
mov
repz
jmp
icebp
fisttps
pop
mov
in
mov
add
sar
pusha
cmp
fisubrs
std
sti
add
cli
sbb
ljmp
out
jge
fxch
outsb
lds
sbb
cmp
sarb
enter
jl
ss
jbe
add
js
xchg
lea
push
hlt
and
sub
icebp
dec
jp
mov
imul
mov
vpshaq
rolb
jle
leave
mov
lds
lret
icebp
fsubl
cmp
sbb
cmpsb
xor
push
pop
nop
les
push
rol
ds
cli
out
lfs
aaa
jecxz
pop
mov
popa
sub
test
or
in
fisttpl
mov
movsl
inc
mov
jle
xchg
lods
clc
or
cmp
cmc
cmp
jb
cmp
pop
pop
iret
mov
insl
or
add
aad
scas
andb
test
repnz
mov
sqrtps
insb
mov
cmc
sub
ss
arpl
das
ret
push
or
push
add
and
insl
pop
enter
sub
pop
or
and
loop
popa
test
in
xchg
sbb
sbb
xor
and
adc
dec
cmpsl
mov
jmp
mov
push
and
lret
flds
ljmp
sbb
stos
add
test
rorb
fdivr
push
stc
jmp
push
cmpsb
adc
dec
pop
mov
push
ss
lea
shlb
sub
aaa
leave
out
into
or
in
jg
jl
jne
dec
xor
pop
out
pop
mov
dec
cltd
sbb
xchg
sahf
or
xor
movsb
fcoms
stos
pop
mov
push
js
mov
sbb
lret
mov
mov
xchg
cmpsb
in
mov
outsb
jecxz
adc
mov
shll
push
frstor
fwait
push
cmp
pop
frstor
inc
add
inc
jb
dec
outsl
xchg
in
aas
loop
aad
popa
xorb
jmp
shrb
add
xchg
add
nop
mov
cli
imul
movsl
xor
mov
stc
adc
mov
int3
push
je
imul
aas
mov
jle
out
mov
or
adc
in
stos
cmp
leave
stc
in
popa
subl
test
cmp
mov
mov
out
fdivs
dec
ret
fwait
cmp
shl
loopne
mov
mov
dec
in
pop
pop
cmp
aas
leave
imul
xchg
test
leave
aad
lahf
jmp
push
popa
in
loopne
mov
outsb
les
mov
popf
out
sbb
add
push
adc
jbe
jl
das
sarb
imul
xor
outsb
lahf
push
hlt
or
mov
je
dec
mov
push
sbb
das
sbb
mov
jg
mov
cwtl
cmp
rcr
stos
sub
inc
out
std
or
adc
ds
sub
and
mov
mul
adc
pop
jmp
sarl
xchg
int3
pushf
repnz
adc
sti
mov
inc
mov
adc
mov
imul
enter
mov
inc
pop
jle
lahf
pop
mov
movsb
test
test
cli
sub
ljmp
test
shr
pop
pop
and
cwtl
popa
lods
in
push
out
imul
mov
inc
jp
bound
inc
jg
jbe
testb
std
mov
and
leave
push
push
out
fcomps
pop
sbb
scas
lock
in
xchg
sub
pop
sub
dec
repnz
repz
orb
mov
mov
sbb
imul
xor
int3
in
push
pop
addb
or
xchg
jne
mov
insb
jo
jne
jno
pop
inc
mov
mov
data16
iret
cmp
dec
inc
jne
in
stos
and
sub
xor
icebp
ret
and
roll
je
mov
scas
mov
lret
pop
xor
sub
jl
inc
xchg
andl
rcrb
and
scas
jecxz
dec
inc
inc
pop
pop
xchg
sub
add
push
mov
and
cmp
sub
mov
daa
push
lcall
mov
fisubl
ljmp
or
je
dec
cmp
sti
clc
popf
push
cli
push
outsl
jnp
or
inc
ja
cld
jns
pop
pop
push
add
push
lods
push
inc
pop
rorl
outsb
out
jmp
push
xchg
push
pop
mov
cmp
clc
iret
mov
mov
jmp
mov
pop
aas
push
ret
push
add
or
add
dec
loop
cmp
aad
mov
fcomps
out
gs
jmp
enter
sbb
and
insb
aad
clc
add
subl
shll
xor
jns
fcmovne
jns
and
lock
sahf
leave
in
mov
jg
pop
add
mov
std
push
mov
sub
xor
stos
jge
fldt
cmp
inc
xorl
cld
xchg
aas
push
aad
test
daa
and
xlat
xor
popl
lock
aad
lcall
adc
in
lcall
adc
incb
fistpl
jne
push
mov
xrelease
aaa
mov
insb
cbtw
sub
test
test
lock
dec
gs
jl
mov
btr
cmp
cmp
wbinvd
push
fimuls
std
clc
fistpl
sub
lea
shll
push
mov
daa
push
xchg
repnz
jnp
inc
pop
cmpsl
sbb
jecxz
enter
mov
mov
insl
ds
inc
push
testb
jl
or
stos
cmp
mov
xor
shrl
adc
dec
je
repz
pop
mov
cmp
stc
xor
push
mov
sahf
adc
xchg
jmp
out
cmpb
notb
push
aaa
mov
mov
xor
push
cmp
mov
stos
adc
stos
cmp
fnstenv
lret
xchg
lret
jg
pop
dec
sub
pop
adc
pop
mov
inc
cmc
inc
rcrl
inc
stos
mov
sbb
out
push
test
lahf
cwtl
mov
sahf
fdivrl
inc
repz
pop
pop
jns
pop
lea
cld
sbb
dec
nopl
pushf
les
ljmp
xlat
mov
push
scas
fistpl
mov
dec
shrb
jne
lock
pusha
pop
pop
inc
push
add
call
fwait
shrl
and
out
mov
push
ljmp
out
sbb
aaa
sbb
add
cli
and
aam
cmp
inc
loop
mov
jmp
mov
or
mov
mov
or
les
dec
xchg
mov
mov
or
push
pop
inc
and
mov
pusha
cld
cmp
dec
leave
sub
add
shlb
push
dec
push
popf
ds
out
ret
pop
aaa
arpl
insb
inc
mov
ja
cmp
daa
xor
dec
pop
add
jb
aam
xchg
data16
das
mov
push
cmp
adc
mov
mov
ret
leave
and
jmp
jle
cmp
ftst
sbb
fs
sub
hlt
fnstenv
sub
pop
nop
mov
sub
sub
cmp
fdivl
sbb
xchg
enter
mov
loopne
dec
or
daa
lods
mov
call
pop
fwait
imul
cli
daa
fs
adc
fwait
repz
jo
pop
pop
popf
mov
xor
sub
adc
roll
mov
daa
rcll
or
loop
xor
sub
dec
cmp
aas
mov
adc
int
test
mov
cltd
lret
sbb
std
pop
out
pop
insl
fcompl
scas
iret
xorb
aas
sti
pop
jp
addr16
push
pop
cld
into
out
xor
pop
mov
int3
adc
fwait
cmc
pop
iret
mov
outsl
xchg
xor
ret
push
push
pop
pop
fwait
pop
pop
sub
mov
cli
or
mov
mov
inc
iret
in
push
jp
rcll
mov
shrb
das
mov
loopne
dec
mov
int
je
insb
rcl
dec
fwait
jecxz
insb
adc
sub
fcompl
loope
faddl
psubb
hlt
cmpsb
xchg
popf
inc
pusha
xchg
mov
sub
or
clc
cld
xor
push
jmp
sbb
jns
adc
mov
enter
mov
xchg
insb
lds
pop
push
xchg
scas
imul
into
pop
jmp
jge
ss
xchg
inc
lea
pop
adc
push
jmp
add
ret
pop
sbb
rcrb
sti
mov
cmp
mov
jmp
mov
pop
pop
daa
jbe
jmp
lock
sub
clc
gs
lods
pop
jle
ljmp
add
push
mov
push
push
or
mov
sub
fadd
fldl
fisubrl
out
fcomip
xchg
mov
inc
shlb
sub
ja
xor
mov
pushf
mov
int3
push
sarl
scas
out
mov
dec
mov
data16
int3
xor
cwtl
pusha
sbb
xchg
jbe
or
lcall
pop
cmc
mov
and
cli
fwait
inc
test
fnsave
aam
in
nop
sahf
cmp
out
pushf
mov
sub
lcall
jno
roll
bound
jg
fiaddl
cmpb
lcall
movsb
pop
or
ljmp
or
jmp
ljmp
push
fisttpll
push
leave
mov
fdivl
fmulp
inc
rorl
pop
sti
cli
sub
js
rorb
add
int3
add
shrl
sbb
and
arpl
xorb
push
dec
mov
clc
sub
sbb
add
mov
js
rcrb
jl
mov
push
sbb
jmp
lret
outsl
xchg
rorl
xchg
ds
leave
call
inc
mov
xor
std
add
in
jle
cs
and
pop
push
es
imul
push
pop
insb
inc
pop
in
xor
jp
cld
dec
jns
aam
out
dec
or
shll
ss
jne
sar
sbb
push
mov
pusha
loope
dec
icebp
in
mov
stos
dec
faddp
js
mov
cmpsb
into
lock
sub
add
test
js
xchg
roll
pop
js
or
pushf
loopne
ds
or
mov
jne
mov
and
aaa
int3
add
fwait
jne
mov
inc
pop
jmp
mov
dec
and
xchg
push
clc
jecxz
push
lahf
addr16
cmpsl
fwait
xchg
jne
xor
shrb
mov
in
or
xchg
fwait
cmp
jge
jp
movsl
xor
adc
and
xor
dec
inc
sub
xchg
dec
inc
mov
xchg
mov
clc
jno
dec
jbe
mov
and
inc
fiadds
cmc
or
rolb
xorl
int
gs
push
popf
sub
xor
mov
push
pop
jbe
push
push
sub
cmp
mov
fidivrs
mov
scas
mov
test
push
daa
test
jg
pop
stos
mov
lea
pop
pop
lds
push
jbe
aam
add
jmp
loop
adc
adc
ds
xchg
mov
mov
clc
jbe
mov
jnp
test
xrelease
int3
add
push
movsb
jp
leave
out
and
out
test
and
mov
xlat
rclb
test
out
test
jno
js
lcall
jne
sbbl
dec
xor
hlt
rolb
push
pop
and
cmpsl
mov
xor
fiadds
inc
or
and
dec
jno
add
sarb
test
cwtl
test
rorb
or
sbb
sahf
jmp
jmp
call
and
xchg
xchg
dec
lea
push
cli
inc
test
xchg
fcomi
and
in
mov
pop
or
call
push
sti
and
mov
xor
ds
sub
push
repz
and
lods
jnp
mov
dec
mov
sarb
out
mov
mov
outsl
mov
repz
jmp
adc
gs
js
mov
pop
cmpsl
mov
cmp
cmpsl
or
pop
mov
cmp
mov
icebp
jns
mov
mov
fcoms
jg
or
push
inc
imul
es
int
into
add
pop
push
movsb
negl
jns
inc
mov
adc
in
and
inc
daa
call
cmp
clc
adc
sahf
mov
fnstenv
mov
std
imull
mov
pop
and
jecxz
or
push
pop
movsl
test
add
int3
pop
adc
shr
sbb
mov
push
pop
iret
mov
es
test
fwait
enter
add
dec
inc
jl
gs
rcl
mov
in
shll
sbb
xchg
xchg
jecxz
mov
add
das
xor
xor
xchg
jmp
or
ds
enter
jae
or
sub
add
jp
push
pusha
lcall
fcmovne
and
cmpsl
or
movsb
lret
pushf
stos
into
push
iret
adc
mov
movsb
adc
pop
mov
jle
fnstenv
sbb
out
mov
loopne
xlat
mov
adc
sub
pushl
push
movsl
add
jmp
push
push
pushw
jg
out
lcall
cmpsb
jb
es
lret
cmpsl
sub
fidivrs
jns
or
inc
adc
outsl
fwait
pop
push
add
ret
idivb
inc
es
and
and
cmp
loope
pop
imul
mov
jl
or
int
out
addr16
xor
inc
cld
adc
jbe
stos
mov
mov
mov
rcrl
addr16
dec
mov
jnp
mov
adc
xlat
mov
loope
rol
xorb
es
dec
mov
push
push
jno
add
sub
insb
movsl
clc
ss
fstpt
in
cmp
repz
insb
lret
lea
dec
inc
cmpsb
sbb
pop
sbb
and
pshufw
inc
fldcw
insb
inc
outsl
stos
orb
and
push
sbbb
xchg
jg
cmp
push
nop
push
jge
es
cmpsb
pusha
jb
loop
jg
out
push
inc
nop
push
xlat
mov
fs
loopne
cli
test
clc
es
jno
xchg
fs
add
and
outsl
add
jmp
push
cmp
cmp
mov
inc
xor
dec
mov
pop
aad
xlat
pop
jecxz
mov
incl
ja
outsb
sbb
xlat
cmpsl
icebp
cs
insb
or
add
mov
xchg
mov
or
mov
mov
imul
shr
ss
adc
imul
arpl
js
jb
xchg
fcmovnu
loopne
cwtl
pop
in
xor
popf
aad
inc
pop
adc
movsb
leave
adc
iret
gs
push
adc
rclb
sahf
jb
mov
imul
adc
pop
and
enter
xchg
mov
sbb
clc
jl
repz
shl
das
adc
cmc
inc
inc
clc
mov
adc
or
sbb
insb
xor
aad
hlt
daa
shl
mov
cmc
mov
sbb
insl
lret
cmp
pop
cmpb
mov
and
fwait
enter
sub
or
aas
xchg
out
test
xchg
roll
dec
xlat
sarl
arpl
popa
dec
insb
sub
inc
fwait
lret
push
xchg
cmpsb
or
in
addb
push
sarb
ret
xchg
lcall
fcoms
mov
testb
adc
aam
icebp
shrl
jecxz
xchg
cmp
mov
in
cmp
lret
mov
mov
lcall
hlt
out
rolb
out
daa
sbb
enter
movsl
push
ss
shll
mov
jo
mov
sub
dec
fidivl
dec
push
pusha
pop
popa
mov
stos
mov
mov
loope
aad
outsb
outsb
loope
int
dec
dec
jmp
xor
lcall
cmpsl
hlt
cmp
aas
push
jbe
dec
mov
stos
pushf
xchg
inc
call
mov
sub
sbb
mov
mov
pop
or
lods
pop
daa
mov
nop
push
jg
and
stos
mov
data16
outsl
sbb
in
pop
insb
mov
jecxz
xor
push
dec
aas
add
cltd
mov
insb
je
test
insl
push
movsl
das
icebp
push
je
scas
stos
aaa
and
jns
fwait
xor
mov
popa
repz
pusha
xchg
push
fidivs
data16
cmpsb
nop
lock
addr16
iret
jne
jne
mov
in
imul
imulb
repnz
fsub
xor
pop
shrl
cmc
mov
jae
test
dec
leave
outsb
or
pushf
mov
insl
xchg
pop
jl
inc
ficoml
aas
popa
mov
test
sub
cmpsl
ret
jge
push
out
repz
das
mov
add
idivl
xor
fildl
add
adc
xchg
jne
push
cmp
xchg
movsl
sbb
roll
iret
jmp
sub
mov
insb
popa
cwtl
in
in
popf
imul
add
out
jne
push
movsl
push
xchg
fistpll
fs
mov
iret
mov
popa
adc
stc
pop
pop
sbb
imul
or
lock
fs
std
dec
jnp
sbb
test
scas
outsl
mov
aaa
jb
mov
dec
sbbb
push
stos
daa
inc
mov
pushf
bnd
mov
jno
negb
pop
inc
ja
or
xor
jmp
rcr
cli
and
or
mov
cmp
add
testb
cs
lahf
mov
push
sub
xchg
pop
push
cli
jle
mov
add
jle
test
iret
mov
mov
jae
scas
insl
fadds
sbb
and
js
push
iret
mov
lahf
daa
addr16
xchg
push
lods
pushf
push
lcall
aam
add
xchg
jne
mov
jnp
fs
mov
repnz
rcl
testb
adc
ret
push
imul
push
shl
mov
js
jle
mov
repnz
rolb
mov
mov
nop
jmp
mov
xchg
divb
fs
jae
mov
cmc
imul
adc
mov
ja
test
dec
mov
out
mov
mov
dec
cmpl
repz
and
sub
and
cld
jne
loope
jp
enter
icebp
or
out
lock
iret
ss
or
rorb
orl
xchg
repz
ret
push
cli
jb
and
jbe
cli
sub
cmp
sbb
insb
fnstsw
jge
xchg
mov
dec
fildl
mov
inc
leave
pop
out
subl
add
loop
add
rorl
int3
mov
adc
lock
adc
mov
movl
and
cwtl
jns
icebp
push
push
cmp
jge
scas
cmp
dec
sbb
loopne
add
dec
xchg
inc
repz
mov
fidivrl
jmp
mov
jne
cs
icebp
jg
adc
mov
sbb
fs
fldt
lea
mov
push
xor
mov
aas
test
cmp
push
push
sbb
xlat
fcmovb
ret
frstor
mov
mov
leave
and
mov
sub
jmp
repnz
int3
inc
mov
shll
lahf
ljmp
jo
loope
movsb
bound
fwait
inc
cmp
pop
cltd
mov
fwait
int
dec
dec
les
rorb
jge
push
rcrl
lret
cmp
ret
and
sbb
ror
pop
cli
cwtl
cmpsb
and
pushf
jb
fwait
dec
inc
je
lret
sub
pop
cmc
jmp
mov
call
mov
popf
stos
mov
leave
or
lcall
in
fmull
add
mov
inc
push
xor
mov
adc
stos
call
fldenv
scas
push
loopne
sub
mov
fwait
pop
and
mov
push
jns
add
sti
mov
jg
std
dec
int
jae
aad
adc
mov
cmc
movsl
cmpl
sbb
mov
repnz
fcmovbe
xor
mov
xor
xchg
int3
test
mov
lret
mov
add
test
inc
mov
dec
lods
xlat
cld
sarb
daa
xor
jl
stos
push
push
mov
es
mov
add
jmp
stos
lds
lods
cmp
lods
lret
add
sbb
rolb
jae
ret
push
rcrl
dec
push
test
fisubl
in
movsb
pusha
push
cmp
cmc
push
or
add
ret
fsubrl
aas
pop
push
movsl
push
jmp
mov
mov
ja
out
inc
adc
xorl
sub
sub
out
jo
lahf
mov
mov
jnp
adc
or
pop
inc
xlat
hlt
mov
sub
push
jl
or
pop
dec
xchg
int3
pop
addr16
jecxz
xor
xchg
popf
cli
xchg
jle
sub
rclb
insl
dec
test
inc
call
cmp
adc
fidivs
ljmp
lds
insb
std
sbb
jae
out
ss
add
je
test
fcompl
clc
repnz
inc
cmc
sbb
mov
sbbb
shlb
add
out
lcall
in
jl
pop
xchg
cmp
mov
outsl
sbb
mov
dec
out
jp
scas
rcrl
adcb
adc
enter
and
ds
fcmovnbe
icebp
or
insb
mov
sbb
fadds
sub
adc
cmp
insl
scas
push
inc
inc
fidivrl
sbb
pop
std
sbb
jge
movsl
cli
cli
push
add
xchg
push
jp
jmp
jl
aad
dec
movsb
js
sbb
inc
xchg
dec
dec
push
mov
jae
inc
scas
pop
loop
jle
stos
mov
mov
mov
ljmp
xchg
sub
aas
jb
inc
sub
xor
test
xchg
and
icebp
mov
dec
cmpsl
pop
scas
lahf
cmpsl
fadds
sub
cmp
ljmp
in
insl
leave
in
adc
and
shlb
xchg
mov
mov
and
xchg
xchg
test
sbb
rorl
hlt
andb
pop
lods
imul
ret
jbe
mov
shll
fists
cmp
pop
movsb
mov
fnsave
mov
andl
jmp
test
addb
sti
sbb
ljmp
inc
push
cli
dec
scas
jns
sbb
mov
loope
pop
scas
cmp
ret
adcl
bound
lods
outsl
and
cmp
sbb
mov
cmpsb
inc
or
cmc
test
stos
push
cmp
xor
daa
aaa
cwtl
shrb
xchg
sarl
sub
xchg
xchg
pushf
jo
mov
dec
mov
jle
sub
dec
aam
mov
cli
push
imul
sbb
lock
and
lods
cwtl
sub
lock
pop
ss
add
push
xor
test
push
movsl
mov
pop
pop
loope
push
xchg
add
or
pusha
lahf
xor
mov
push
insl
loopne
insb
nop
pop
shrl
jge
movsl
cs
bound
gs
lret
outsl
bound
pushf
decl
push
sbb
das
mov
fcmove
aaa
or
push
or
int
or
add
ja
loop
push
mov
cmp
inc
cli
into
xor
pop
or
pop
xchg
in
js
jnp
and
adc
add
sbb
sbb
repnz
xor
mov
cmp
inc
push
xchg
aaa
mov
into
push
cmp
adc
jnp
sahf
jmp
gs
add
mov
clc
hlt
ja
fldenv
shlb
lock
pushf
rep
je
lcall
test
sar
jnp
mov
repz
rorl
add
stos
xchg
loopne
punpcklwd
icebp
gs
stos
std
jnp
dec
mov
out
inc
out
xchg
imul
leave
jp
outsb
sbb
and
lea
and
imul
decl
or
movsl
fwait
mov
jecxz
repnz
and
mov
notb
popf
cmp
inc
xchg
dec
jl
addl
mov
pop
pop
xchg
dec
push
movsb
adc
fidivrl
mov
adc
int3
jecxz
mov
fisubrs
sbb
mov
repz
xor
sbb
popa
ljmp
imul
out
pop
orb
and
lahf
inc
inc
in
repz
pop
mov
aad
nop
test
mov
push
xlat
dec
mov
jmp
decl
xorb
daa
scas
sub
or
gs
xchg
adc
jo
fnstcw
repz
xchg
jg
and
jecxz
adc
call
sub
sub
repnz
add
adc
fisttps
hlt
ja
jg
cmp
bound
inc
sbb
jo
movsb
stos
jle
or
fidivs
fsubrp
scas
lods
mov
hlt
inc
sbb
fstps
cmp
mov
jle
inc
es
mov
test
cmp
mov
mov
sub
xor
loop
xchg
xor
sub
push
and
sub
aaa
adc
cld
add
cmovnp
push
mov
mov
add
xchg
push
lea
inc
sbb
or
pop
mov
push
imul
sbb
pop
adc
sub
sub
cmp
add
nop
lahf
sahf
pop
jge
popl
xchg
mov
in
dec
mov
shrl
test
pop
cmp
rcr
insb
push
push
cmp
sti
mov
cmpsl
pop
in
dec
arpl
pop
mov
xchg
sbb
dec
movsl
sar
jne
pop
hlt
repnz
push
rolb
rclb
out
jmp
jmp
dec
sbb
xor
inc
sbb
jp
cmp
pop
mov
cmp
movsl
idiv
hlt
mov
bnd
jmp
jg
mov
mov
mov
mov
xlat
scas
push
daa
cmp
mov
arpl
mov
xor
xor
xor
jb
aaa
js
or
jmp
and
and
mov
adcl
lds
insl
push
imul
stos
dec
lret
in
ja
pop
cmc
xor
cwtl
jnp
cltd
data16
mov
sbb
movsb
or
cmp
xchg
pop
add
incl
jno
pop
loop
gs
out
cmpsl
xchg
sub
push
enter
lock
pop
sub
xchg
cs
push
rcrl
sub
inc
xlat
iret
mov
ret
inc
mov
or
cs
lahf
and
or
jg
mov
sub
pop
loop
ficomps
mov
jnp
mov
add
adc
leave
stos
mov
cmp
fcomps
xlat
fistps
mov
fstps
sub
xor
ret
scas
cld
push
adc
pop
arpl
ret
pop
aaa
ret
sbb
pushf
mov
scas
sbb
test
orb
jno
std
push
fisubs
push
pop
dec
push
and
sub
push
jnp
lods
jb
cmp
cmc
aam
lods
fadds
jg
push
mov
rcll
and
cmc
stc
pop
lahf
adc
ret
aas
and
out
sub
jbe
add
gs
mov
sbb
cmp
fsubr
sbb
xchg
push
mov
ret
cli
test
cld
sub
scas
sahf
mov
imull
add
fcoms
test
pop
or
into
add
js
outsl
negl
scas
xorl
incl
xor
add
dec
sbb
in
jnp
arpl
cltd
leave
repz
sbb
ds
jo
sbb
insb
fimull
pop
push
lret
shlb
push
data16
les
fisttps
jle
scas
mov
pop
popf
or
push
pop
pop
fldl
xchg
out
sti
mov
push
push
out
cli
xchg
leave
mov
hlt
cltd
in
mov
cmp
mov
outsb
fisubs
test
sbb
or
pushf
sahf
icebp
jle
cld
inc
clc
or
stos
cmpsb
jb
out
inc
or
into
cmp
out
psllq
cmp
xchg
pop
iret
dec
add
pop
jmp
inc
or
stos
adc
mov
pop
dec
rorb
inc
cwtl
outsb
sar
push
push
dec
pop
gs
test
and
test
dec
cmpsb
adc
test
pop
lods
and
xchg
outsb
pop
pop
loop
mov
mov
cmp
push
iret
roll
cltd
aaa
adc
sub
push
in
lea
mov
jns
clc
aas
xchg
clc
sti
ja
and
inc
out
aas
cmp
adc
out
xchg
aaa
lret
jp
std
ss
adc
adc
movsb
dec
mov
inc
push
pminsw
xchg
or
xor
ss
sahf
adc
mov
dec
mov
and
mov
jno
enter
sub
pushf
popa
add
xor
pop
aaa
push
pop
inc
cmpsl
fcompl
and
loop
ljmp
push
mov
out
fwait
test
int
lahf
mov
jge
and
add
lret
clc
fidivs
pop
adc
sub
arpl
jmp
push
das
and
clc
pop
lret
or
mov
push
scas
sahf
ret
push
pop
mov
popf
insl
push
jb
xor
es
ja
icebp
fimuls
cld
fldenv
pusha
out
clc
outsl
aam
dec
cmc
add
add
fcompl
fdivp
push
add
xor
jp
jae
jae
cmp
mov
inc
jle
mov
lcall
cld
pop
push
pop
push
roll
and
aas
jbe
movsb
push
decb
pop
or
adcb
dec
adc
mov
les
popa
cmp
loope
notb
shll
jbe
sbb
into
mov
mov
sti
lock
fsubl
push
cmc
mov
fistpl
and
push
lret
and
mov
jns
popf
push
cmp
or
xchg
sti
xor
fisttps
int
cli
in
mov
cs
xchg
sarl
xlat
fidivs
dec
mov
or
inc
test
and
outsl
sub
add
test
xchg
scas
sarl
mov
leave
repz
push
jl
jmp
fwait
jmp
les
sbb
imul
or
les
adc
xchg
testb
out
xchg
mov
push
fisttps
ljmp
lea
andb
fwait
lcall
dec
mov
jle
inc
fisttpl
cltd
fnsave
jnp
xchg
mov
test
fwait
clc
jmp
leave
loopne
fisubl
inc
cli
xchg
mov
gs
mov
fwait
aas
jecxz
fisubrs
daa
mov
mov
test
xor
xor
add
lea
pop
nop
cs
xor
lock
scas
push
adc
cwtl
into
push
movsl
cmp
jns
mov
out
icebp
pop
psllq
daa
mov
call
mov
jmp
mov
bnd
movsb
and
js
and
lahf
into
int3
jmp
test
xlat
pop
enter
sub
enter
xor
in
xchg
jmp
mov
loop
dec
ja
jmp
insb
dec
pop
jmp
scas
lret
stos
test
insl
scas
insl
dec
es
mov
dec
mov
sti
repz
jne
je
mov
movsl
movsb
inc
fsubr
lods
push
cmp
jbe
ret
ficoms
lea
ds
xlat
pushf
and
testb
push
adc
je
pusha
and
subb
aaa
xorl
stc
dec
pop
inc
push
cmp
repnz
mov
mov
jp
aas
push
sub
and
push
fidivl
nop
cs
cltd
lods
imul
das
jne
loop
pop
push
or
jl
xchg
xor
inc
mov
stos
mov
jg
hlt
mov
cltd
leave
dec
adc
scas
in
mov
into
aad
lret
std
cld
int3
xor
push
add
push
push
inc
xor
lahf
cltd
jecxz
rorl
push
and
jge
pop
add
cmp
call
repnz
and
dec
push
lea
cld
sub
in
xchg
jbe
cmp
sub
dec
pop
cmp
and
mov
mov
push
les
movl
xchg
or
fistps
dec
jg
xchg
jno,pn
fisttpll
lret
cld
push
int3
sti
cs
lods
mov
cmc
jp
sbb
mov
nop
or
sti
loop
push
xor
xchg
and
cmp
popf
xchg
pop
sti
mov
cmp
cmp
xchg
xchg
mov
push
shlb
daa
cmp
insl
scas
call
sbb
push
jae
jae
fbstp
aaa
in
test
cli
and
jae
sbb
jp
scas
push
fnstcw
push
jp
in
fstp
push
out
xchg
hlt
leave
daa
mov
dec
mov
mov
pusha
in
pop
inc
movsl
and
in
ret
pop
inc
daa
enter
inc
pop
fs
xor
hlt
jl
aaa
out
xchg
int
std
aaa
outsb
dec
lods
push
cmp
lea
adcl
out
adc
adc
pop
ret
or
decb
dec
dec
fstps
mov
jecxz
cmp
fidivl
adc
adc
xchg
mov
clc
ja
lahf
or
jae
test
idivb
fnstsw
or
mov
iret
pop
dec
push
xor
mov
or
mov
xor
daa
mov
sar
adc
std
stc
decl
loopne
pop
sub
out
jge
add
aad
test
into
pop
inc
adc
mov
mov
iret
fidivl
jns
xchg
or
fwait
pop
gs
jle
pushf
addr16
cmp
stos
xchg
pop
lds
jmp
cs
mov
test
iret
sbb
jle
fs
or
or
xor
insl
mov
mov
sub
imul
leave
push
test
adc
cmp
jg
jge
bound
imul
jmp
js
push
push
mov
sbb
sbb
loop
mov
mov
hlt
lods
pop
sub
push
pop
sub
bound
icebp
push
hlt
xor
call
cmc
subb
jbe
lock
sbb
cmc
jle
cld
imul
cld
das
mov
fisubs
popf
int
testl
adc
fldcw
and
mov
fildl
adc
pop
mov
add
xorb
in
mov
jno
mov
xor
leave
or
fildl
scas
iret
sbb
inc
cmp
fimuls
sub
inc
inc
jge
lret
jg
arpl
cmp
xchg
push
push
je
lcall
push
push
test
mov
adc
mov
mov
in
sub
sub
out
mov
or
scas
je
ljmp
test
dec
push
notl
out
jbe
mov
in
fs
sub
in
repz
xor
call
insb
lret
movsb
push
mov
daa
test
cmpsl
mov
fldl
jnp
icebp
movsl
fwait
cmp
push
cmp
push
sbb
std
cmpsb
mov
add
testb
jo
repnz
push
jecxz
jns
adc
pop
lock
push
icebp
mov
pop
test
sbb
stos
sub
data16
aaa
inc
xor
inc
lret
lahf
cmp
sbb
cmp
lahf
fstpt
sub
je
popa
std
lock
stos
or
push
mov
jp
arpl
dec
roll
push
arpl
jp
xchg
loop
popa
mov
or
loopne
clc
loop
das
lods
repnz
mov
jnp
jnp
or
or
add
or
xchg
cmpsl
pop
aas
icebp
sub
cmc
sbb
xor
sub
add
sbb
ja
xor
enter
cmp
sub
hlt
xchg
scas
iret
inc
cli
dec
push
les
push
int
mov
insb
fidivrl
pop
sub
push
and
pop
or
cmpsl
pop
lret
push
xchg
pop
test
pop
sub
mov
mov
xor
adc
ficompl
outsb
imul
xchg
xchg
xchg
fisttpll
addb
nop
insl
cmp
scas
mov
sbb
leave
fucomi
xor
jecxz
jb
leave
sbb
stos
dec
and
out
jns
dec
andl
jmp
cmp
fsub
jp
sahf
mov
adc
lock
inc
adc
xchg
and
mov
pop
mov
push
xchg
int
sub
xchg
push
adc
pusha
out
jmp
stc
pop
pop
xor
std
push
cmc
push
int
cmpsl
adc
out
dec
mov
pop
push
push
clc
push
mov
sbb
fwait
data16
pop
scas
add
dec
pop
bound
mov
rclb
ret
inc
inc
xchg
ret
pop
xchg
loope
lds
nop
int
jno
pop
movsl
popa
dec
and
dec
rorb
lds
dec
and
imul
inc
sbb
xchg
call
xor
mov
inc
ret
dec
xchg
mov
xor
sbb
cwtl
fs
test
aad
popf
adc
test
hlt
insl
sub
xor
adc
adc
ja
xor
sub
fadd
lock
lcall
mov
sbb
lods
repnz
push
mov
sti
xchg
and
adc
add
dec
aam
pop
notl
or
icebp
call
xchg
callw
out
cltd
and
data16
lcall
int3
and
cmpsl
sbb
lods
cs
je
gs
sahf
fcmovnu
cmp
jns
jne
mov
jg
push
cli
fwait
rorb
push
in
pop
not
shr
push
adc
ljmp
and
fdivrs
and
mov
aam
and
test
mov
jnp
nop
ret
push
and
mov
pop
and
xor
out
pop
enter
jmp
mov
pop
sbb
fiadds
mov
push
pop
int3
testl
jmp
xchg
mov
add
add
test
cld
pop
mov
pop
xchg
dec
aam
push
test
imul
sub
sbb
xchg
sub
mov
cmpsb
inc
arpl
sbb
in
inc
sbb
jno
filds
add
pop
loopne
lds
jns
ljmp
lock
popa
and
dec
mov
cs
les
in
pusha
iret
xor
sub
cmp
xor
setg
cmc
or
mov
repz
dec
adc
mov
pop
inc
int
sub
mov
sub
test
shlb
pop
leave
sahf
adc
xor
push
es
cmp
adc
xor
out
add
mov
call
push
adc
addr16
addb
cmpl
fdivrl
insl
dec
in
pop
ja
lret
test
out
add
sbb
bound
cli
sbb
mov
scas
dec
jb
mov
cmpsb
leave
sub
cld
mov
fldenv
icebp
lret
add
jns
or
cli
insb
sub
push
push
add
pop
jb
sub
pop
or
jnp
xor
dec
arpl
or
mov
cmp
das
cmp
aaa
les
jge
xchg
sub
cmpsl
pop
or
and
scas
inc
in
sub
rcrb
clc
xor
cs
lret
jp
sub
sbb
mov
cmp
lahf
rclb
in
fsubrs
mov
cmpsb
mov
cmpl
pop
push
push
cltd
cld
sub
xchg
jns
lods
repz
pop
es
fidivl
ret
mov
dec
mov
or
inc
xor
popa
bound
pop
fwait
sub
mov
sbb
in
test
stos
lcall
pop
movsb
adc
cmp
sub
pusha
sbb
jbe
and
lahf
ret
icebp
pop
sbb
dec
xchg
loope
cmp
in
jl
sahf
sar
xchg
xor
cmc
call
inc
mov
and
aaa
loopne
pop
push
adc
inc
and
js
sub
xchg
lock
jne
pop
outsl
pop
sbb
fmull
popa
lods
cli
and
out
or
and
iret
inc
xor
cmp
push
jno
ss
fabs
lods
fs
jb
sbb
inc
enter
push
sub
add
xchg
or
lcall
inc
cs
or
pop
mov
cwtl
sub
dec
xchg
dec
insb
daa
xlat
jb
pushf
cmovl
jbe
mov
mov
scas
ficoms
mov
leave
fmul
mov
push
ficoml
push
pop
nop
push
mov
adc
mov
iret
mov
jle
dec
dec
xchg
mov
mov
ja
popa
cmc
jecxz
and
inc
jp
add
xor
pop
imul
rcrb
ret
sub
stos
cmp
mov
inc
inc
dec
hlt
mov
cwtl
cwtl
imul
ss
sub
in
ds
dec
mov
adc
jo
mov
xchg
andb
out
inc
insl
adc
out
push
and
mov
xchg
push
in
addr16
inc
cmpsb
loope
cld
pushf
push
add
fstps
imul
dec
xlat
mov
push
out
xchg
ds
pop
cltd
xor
xor
pop
xchg
lret
data16
sub
xchg
int
pop
loope
jg
xor
fildl
jns
xor
mov
std
les
pop
jecxz
jl
popa
cmp
pop
jnp
pop
pop
inc
sahf
sbb
inc
test
pushf
clc
and
mov
push
sbb
jle
and
cmp
inc
mov
cmp
gs
sarl
popa
mov
mov
sub
hlt
mov
inc
cmp
jne
je
or
push
push
and
lcall
negb
sbb
sub
push
cmp
cmp
xchg
lock
ret
mov
push
xor
insb
mov
or
call
jl
fmuls
add
cwtl
push
mov
sbb
pop
adc
mov
cmp
mov
sub
inc
jae
mov
mov
icebp
outsl
cmp
je
inc
adc
dec
and
ljmp
xchg
mov
stos
fwait
adc
das
dec
addr16
lock
adc
dec
and
ja
fisubl
xchg
xchg
mov
cmpsb
sahf
pushf
fcomi
dec
mov
jns
jbe
scas
or
jge
sub
js
pop
in
test
jae
stos
xor
icebp
shll
inc
mov
inc
fiaddl
lock
repnz
mov
ds
inc
fiaddl
inc
test
lock
add
lret
push
lock
flds
and
movsb
push
je
dec
jo
cmp
add
or
test
fstl
add
mov
push
mov
mov
loop
int
inc
jo
movsl
or
cmc
sub
xchg
shll
stc
mov
leave
jle
xchg
call
ljmp
fwait
sbb
iret
xor
push
testl
nop
xor
sub
sub
imul
and
les
test
push
jne
inc
dec
in
pop
ret
in
popf
sub
subl
jg
leave
fldenv
out
mov
push
in
mov
sahf
adc
arpl
lcall
js
jb
out
daa
sti
outsb
sub
dec
or
sbb
mov
adc
mov
mov
mov
sub
jne
jle
sub
aam
cmp
mov
push
pmullw
sub
pushf
inc
jmp
fdivs
push
inc
push
data16
iret
xor
movsl
sub
sub
mov
sub
cmpsl
sbb
aaa
adc
mov
lret
repnz
scas
int
mov
add
cmp
scas
mov
sub
int3
lret
es
adc
cmp
push
push
pushf
inc
sbb
fdiv
and
fs
mov
les
pop
mov
and
cmpsb
xor
rclb
repz
xchg
jae
test
mov
jecxz
xchg
jmp
push
jo
inc
rcrl
and
push
mov
shrb
and
add
repz
imul
aaa
lcall
sub
and
sub
cmpsb
sti
sbb
add
mov
mov
std
inc
jecxz
out
insb
sub
test
out
cmpsl
movd
pop
push
addl
repz
ret
cmp
hlt
jg
cmp
push
mov
sbb
outsb
lahf
mov
cli
and
push
xchg
loop
pop
gs
roll
xor
fbstp
ja
push
pop
arpl
xor
pop
or
dec
lret
addr16
pop
pop
pop
fidivl
xchg
rorl
lret
inc
in
adc
and
mov
mov
mov
mov
xchg
jl
rep
mov
bound
and
test
adc
into
dec
adcb
xlat
cli
mov
push
stos
call
scas
ds
dec
jbe
dec
lcall
fisubrl
jno
xchg
xor
mov
cmp
dec
dec
adc
aaa
out
or
or
mov
jl
std
push
nop
pop
imul
call
scas
sub
mov
lock
xchg
xchg
xor
or
in
pop
cmp
test
dec
aam
and
repz
cltd
mov
gs
jae
inc
sbb
hlt
fmull
lods
mov
fdivr
data16
sub
lahf
popf
jb
loopne
inc
hlt
lret
pop
daa
adc
xchg
or
movsl
mov
popa
mov
stos
iret
comiss
scas
adc
xchg
push
mov
dec
insl
ret
xchg
mov
fnstenv
pop
pop
push
fimull
and
inc
jmp
iret
pop
mov
sub
mov
cmpsl
and
dec
or
pushf
int3
inc
add
and
xchg
jp
sub
inc
repnz
outsb
and
lret
pop
mov
pop
nop
xor
es
adc
outsl
sbb
lds
dec
loope
push
mov
inc
jge
jne
sub
ja
inc
inc
xor
jmp
sub
or
push
in
insl
ret
std
xchg
lds
fists
push
test
les
sub
fnsave
inc
imul
jnp
popf
fs
xchg
loope
imul
jp
pop
pop
sub
test
push
sub
mov
repnz
mov
fsubs
sbb
pop
cmp
in
ja
leave
nop
sbb
and
xor
ljmp
in
sahf
and
xor
in
cmc
jo
sbb
mov
mov
divb
cld
adc
xor
cli
enter
frstor
sarl
pop
rol
cmpsl
push
jmp
jmp
scas
inc
mov
mov
dec
repz
fsubs
aad
ljmp
bound
jns
inc
push
lods
cli
je
mov
sar
xor
xlat
clc
sub
test
out
sub
or
mov
mov
movsl
sti
push
push
push
pop
in
pop
jae
mov
ror
ja
sti
push
roll
xchg
fsub
mov
mov
sub
mov
rolb
sub
in
add
lea
adc
push
cmp
mulb
pop
test
repnz
and
xchg
pop
xor
cmp
lret
scas
push
repz
xor
aas
add
lahf
xchg
inc
dec
sub
pop
les
or
icebp
out
pop
jmp
jecxz
add
cmp
test
jge
sub
mov
mov
add
mov
fs
test
iret
aaa
pushf
pop
xchg
mov
cmp
jbe
std
mov
ret
out
ror
push
mov
add
push
decl
subl
mov
cmp
negl
mov
mov
sti
xlat
mov
inc
sub
jne
mov
jae
ss
pop
push
or
lock
dec
std
lret
test
mull
dec
lahf
in
xor
daa
hlt
mov
and
push
sub
jns
mov
jno
xchg
fidivs
sub
mov
cmc
ret
inc
push
push
inc
outsb
xorb
cli
mov
icebp
dec
in
js
xchg
out
pop
fprem
mov
popa
dec
sarb
sbb
bound
jmp
rolb
push
ljmp
jo
cmp
lret
pop
aaa
mov
stc
or
sbb
cmpsb
jmp
mov
inc
cltd
adc
aaa
imul
rolb
push
push
sti
mov
adc
mov
jae
ret
mov
pushf
das
daa
pop
fistpl
dec
mov
outsl
and
out
test
xor
cs
fs
cmc
movsl
adc
cmp
aad
in
jno
test
aad
daa
jecxz
inc
mov
inc
cwtl
rep
imul
lea
add
jg
xor
lea
rcrl
jmp
push
std
lcall
xchg
fs
pop
add
stos
fcoms
aad
loope
scas
xlat
in
outsl
pop
imul
aas
push
lcall
dec
mov
movsb
mov
mov
loopne
mov
mov
inc
push
dec
mov
imul
es
mov
test
adc
fidivrs
xor
jne
jge
xor
out
in
je
cli
jne
mov
out
jl
nop
rcll
inc
jmp
mov
and
xchg
mov
mov
sbb
mov
xchg
inc
mov
loope
jecxz
mov
outsl
jge
pop
cmp
dec
pushf
and
mov
adc
push
imul
dec
jnp,pt
outsl
pop
movsl
sub
push
jne
out
inc
push
fisttpll
nop
xor
push
shl
and
jnp
dec
inc
nop
add
cwtl
push
jp
mov
fcmovu
out
and
testl
loope
insl
push
push
pop
mov
jle
sbbl
pop
clc
fists
push
or
or
add
fstps
pop
and
dec
or
sbb
cmp
shlb
inc
or
jo
sub
mov
fs
stos
push
xor
out
dec
or
adc
imul
pop
cmp
pop
add
repz
bound
or
dec
jge
xor
adc
jmp
insb
xlat
mov
mov
repz
jl
repz
add
inc
xchg
in
stc
test
imul
cmp
mov
dec
mov
push
sub
sub
mov
push
int3
sub
bound
inc
cmp
cmp
mov
aas
rolw
or
xor
lods
cwtl
sub
sub
sbb
lret
ret
rcll
xchg
mov
xchg
jns
push
pop
mov
ja
xchg
sahf
pop
lods
pop
add
mov
outsl
lret
inc
scas
push
xchg
loope
popf
mov
xor
aas
mov
test
out
pop
adc
into
addps
dec
popf
and
mov
xlat
repnz
mov
packuswb
add
sbb
push
std
outsb
lret
pop
pop
jb
inc
mov
movb
ja
clc
ss
dec
pop
mov
flds
add
std
xor
sbb
arpl
adc
out
icebp
adc
leave
cld
xor
adc
enter
stc
cmp
data16
and
cltd
jle
xor
dec
mov
in
inc
mov
repz
jmp
lea
mov
outsb
push
xchg
sbb
xchg
add
cmp
sub
xchg
ss
pop
push
jno
lret
adc
dec
inc
push
dec
lds
sbbl
ret
fisubl
cmc
xchg
and
lahf
int3
aad
loope
rcrb
pushf
ss
jae
add
repnz
arpl
push
in
xchg
sub
mov
sbb
lock
jo
lret
pusha
sub
adc
rcrb
cld
pop
stos
mov
sbb
mov
xlat
sbb
pusha
and
test
sbb
sbb
xchg
hlt
ret
inc
aad
outsb
cmpsb
sbb
mov
dec
scas
in
js
adc
imul
in
stos
outsl
add
mov
lcall
jmp
adc
or
sti
mov
fcoms
gs
inc
push
sub
daa
mov
movsb
shll
or
dec
cmp
xor
out
mov
xchg
mov
jp
sub
jno
mov
hlt
cmp
pop
mov
lahf
mov
adc
shl
mov
mov
pop
imul
sbb
rolb
stos
jb
push
sbbb
stos
dec
jo
push
sarb
aad
mov
rorb
test
hlt
add
loopne
sbb
fisubl
out
mov
ja
xchg
jp
and
mov
jg
and
mov
xor
ljmp
lret
mov
pop
test
mov
jge
or
aad
adc
jbe
popl
or
aas
fimuls
in
dec
call
xchg
xor
cwtl
movsb
leave
rolb
nop
popa
mov
mov
mov
and
fistl
loope
pop
popa
pop
jmp
jbe
sbb
or
popf
ja
add
dec
out
rorb
cld
or
cwtl
xor
push
xchg
lcall
jo
inc
pop
xchg
xchg
adc
jo
mov
in
arpl
push
sahf
stos
inc
into
shrl
in
adc
pop
pop
lret
inc
pop
jb
cltd
xchg
das
es
jo
mov
mov
loopne
jb
inc
xchg
dec
cmpsl
jae
jle
mov
rcll
dec
xchg
rcll
or
cmp
mov
ja
sub
scas
sub
fldcw
aad
aaa
testl
in
xlat
lds
andl
sbb
inc
mov
cmp
ds
add
lock
js
xor
push
xchg
xor
inc
lods
testb
cltd
sub
push
dec
out
adc
cmc
lcall
adc
push
in
or
lock
hlt
fbld
ss
mov
pusha
inc
je
mov
sbb
mov
ds
xor
enter
clc
mov
andl
call
bound
into
imul
push
into
out
pop
cld
js
sbb
dec
mov
mov
stos
add
xor
test
dec
fisubl
or
push
mov
leave
pop
shll
iret
push
pop
movsb
push
and
pushf
ss
fs
sti
lods
ja
std
cs
xchg
jle
fld
inc
pusha
mov
adc
adc
cmc
lods
into
ret
mov
sbb
jge
dec
outsb
dec
pop
ret
or
xchg
cs
nop
adc
pushf
cmp
movsl
jp
pop
xchg
xor
mov
xchg
push
dec
xor
pop
add
lea
pop
sbb
lret
arpl
sub
stc
addl
jl
mov
mov
in
jno
dec
dec
sub
xchg
cld
mov
out
neg
xchg
loopne
fldt
push
sarb
sti
pop
and
das
mov
pop
dec
cli
aam
je
xor
shrb
fdivrl
shlb
jl
adc
leave
aaa
cmpsb
xor
pop
xor
fsubp
sbb
ss
fidivl
jge
int
sub
jo
xchg
cmp
xchg
push
push
shll
xchg
mov
stc
jge
stos
or
jp
lret
clc
push
lods
sub
sarb
jne
cmpsl
stos
dec
mov
xlat
and
aas
cs
mov
lahf
sub
mov
sbb
loopne
jns
movb
sub
in
fdivs
in
or
subl
adc
mov
nop
jg
xchg
push
adc
ja
jmp
pop
test
pop
mov
cmpb
ja
scas
mov
dec
sub
lahf
xchg
ljmp
xor
nop
jp
and
andl
xchg
mov
fmul
rcrb
lea
lock
or
cmp
mov
adc
ret
insl
rcll
mov
mov
subb
mov
pop
ss
cmp
push
mov
incl
adc
loopne
add
arpl
icebp
cmp
loope
add
jp
iret
addb
sti
movsl
adc
lahf
in
sbbl
mov
xchg
outsl
test
lds
sub
outsb
xor
lods
dec
stos
into
icebp
or
push
jle
and
or
ds
pop
xor
sub
cmpsb
movl
adc
dec
iret
lods
add
clc
xchg
inc
repz
cs
mov
nop
add
mov
stos
pop
je
pop
ja
fdivp
xor
mov
dec
mov
jb
lea
jo
push
outsl
shll
lock
icebp
les
mov
popf
dec
imul
ds
loop
pop
pusha
les
cmc
out
mov
lret
fidivl
dec
jb
testl
inc
mov
cltd
xor
pop
xor
push
dec
push
xchg
loope
pop
xor
into
push
mov
or
jae
addl
inc
outsl
out
or
jo
and
xor
rcrl
sahf
in
inc
xchg
cmp
fneni(8087
xchg
dec
shlb
dec
out
cltd
es
push
cmpsl
cmp
sub
enter
mov
push
dec
cmp
mov
div
dec
testb
push
leave
shlb
jg
cmp
bound
in
aaa
insb
pusha
xchg
push
das
sahf
sub
sub
rcll
mov
cltd
pop
inc
negb
imull
enter
gs
pushf
enter
daa
xchg
lods
inc
add
lods
imul
sub
push
mov
lret
rcl
fs
gs
lahf
pop
and
mov
xor
lahf
push
rclb
rcr
inc
leave
adc
jne
pusha
scas
pushf
pushf
xor
cwtl
neg
insb
imul
mov
cld
and
mov
jnp
aas
mov
out
jbe
cld
push
dec
imull
push
push
push
jnp
jnp
gs
mov
xchg
stc
add
mov
mov
pop
push
push
xor
aaa
mov
scas
jno
add
into
xchg
ds
push
out
fnstcw
jae
push
test
cwtl
sbbb
add
stc
cmp
insb
push
scas
in
mov
adc
pop
xchg
and
lahf
daa
jmp
cmc
call
in
scas
leave
aas
cmp
add
loop
in
out
or
adc
pop
xor
push
cs
fwait
movsl
ja
pop
rcll
jmp
js
sub
dec
xchg
testl
insl
jno
xlat
cwtl
ss
in
call
jae
adc
in
sbb
add
aam
lret
push
ja
mov
mov
mov
repz
inc
ds
mov
mov
inc
cld
or
and
dec
and
lcall
ja
jb
jg
lods
fisubs
iret
fiadds
jb
popf
cli
pop
loopne
sbb
test
dec
fwait
pop
push
jmp
sbb
or
mov
sbb
lret
shlb
inc
in
fs
jae
outsb
pop
out
jo
pop
pop
add
cmc
shl
movsl
sbb
mov
in
aam
sub
xchg
push
pop
test
out
jp
sub
xchg
stos
fisttps
jge
fsubr
pop
fidivs
sub
mov
push
mov
in
xor
inc
ds
sbb
es
cmp
dec
inc
lods
test
inc
push
iret
or
cmp
xor
mov
in
sub
loope
outsl
sub
std
jl
and
sbb
sub
inc
dec
adc
jecxz
and
and
arpl
lcall
sub
pop
into
cmpsb
mov
js
lcall
mov
hlt
jbe
gs
lock
xchg
in
mov
xchg
lcall
mov
xchg
xchg
cs
pop
loope
jg,pt
xchg
leave
insb
cmp
cmp
lret
inc
pop
add
jns
in
jne
adc
mov
out
mov
pop
add
aad
or
scas
mov
pop
call
ljmp
pop
and
fadds
push
lods
add
sub
insl
sbb
into
lcall
aas
or
xchg
sbb
mov
hlt
ljmp
mov
xchg
leave
cmp
gs
sbb
mov
loopne
ficoml
sub
popa
insl
cmp
cltd
int
mov
push
imul
dec
sahf
push
or
cmp
jg
push
inc
xchg
pusha
or
jno
insb
repnz
daa
jne
xor
orb
cmp
jmp
jmp
imull
mov
add
inc
or
jg
sub
iret
lahf
inc
jne
mov
mov
xchg
mov
pop
cld
arpl
pop
sub
inc
hlt
mov
add
stos
and
repnz
ljmp
lods
iret
ss
mov
push
add
iret
jns
dec
scas
loopne
jno
and
shrl
arpl
xchg
jle
xchg
hlt
xlat
addr16
mov
add
insb
sbb
mov
push
inc
lods
pusha
movsb
fstps
pop
sub
shrl
jns
cmp
push
jno
xor
xor
pop
push
xchg
bound
in
rcrl
cmp
jae
push
jge
xlat
mov
mov
pop
ja
mov
inc
test
mov
jno
mov
add
loop
or
and
sbb
cli
lcall
xchg
in
sahf
mov
fwait
inc
add
arpl
cli
cmpsb
cs
lods
pop
xchg
addr16
pop
icebp
sub
mov
icebp
inc
sti
or
push
fs
jmp
popa
jecxz
int
cld
lds
cld
negb
daa
adc
test
jb
lret
out
adc
push
sbb
repnz
mov
aas
out
pop
fsub
push
xor
jae
sub
ret
add
pop
cmpsl
inc
mov
and
xor
xchg
bound
or
xor
or
jo
call
dec
mov
jmp
mov
cmpsl
push
jnp
cmp
int3
dec
cmp
jo
test
dec
ret
in
jb
neg
mov
test
xchg
std
push
arpl
pop
dec
mov
loop
pop
sti
pop
shrb
mov
dec
ljmp
pop
dec
cmp
out
lods
fwait
in
jg
into
in
adc
cmp
mov
pusha
insl
or
nop
jns
sahf
sub
and
imul
sbbb
arpl
jnp
lret
push
pop
pop
or
out
cmpsl
jl
xchg
jl
cmp
or
add
mov
jno
pop
mov
movsb
dec
jae
mov
mov
and
xchg
or
jae
push
jne
out
shrb
ja
xlat
repnz
push
outsb
pushf
mov
push
scas
mov
cmp
int3
nop
movsl
sbb
or
dec
call
xor
fwait
and
ja,pt
ja
and
daa
lahf
mov
cmp
add
or
loopne
icebp
in
mov
mov
stos
sub
andl
xchg
jne
mov
pop
icebp
mulb
sub
insb
in
inc
lret
jmp
sti
dec
inc
imulb
add
dec
jg
sbb
cli
or
xchg
adc
adc
test
pop
pop
ljmp
loopne
movsl
or
fdivrl
dec
aad
bound
cmp
dec
sub
jg
test
int
lret
loope
inc
aad
or
lock
xchg
mov
ror
pop
pop
push
dec
mov
xor
fs
mov
es
sbb
cs
testb
pusha
movsl
iret
xchg
out
push
test
cmp
and
cmp
mov
xor
jb
imul
mov
pushf
out
aad
or
push
test
hlt
inc
lock
dec
pop
iret
xchg
mov
pop
push
in
sub
add
ret
in
enter
push
pop
aad
test
sub
mov
cmp
lcall
sub
cmp
mov
push
mov
in
adcl
fwait
mov
cli
ds
inc
xor
mov
cmc
fidivrs
mov
push
cmp
dec
mov
xor
jb
pop
std
incb
add
sbb
ficomps
cmp
inc
ljmp
jbe
adc
out
jle
aad
cs
add
stos
sbb
shlb
xchg
cmpsb
testl
sub
cltd
inc
or
call
cwtl
dec
sub
add
scas
adc
jns
sub
mov
xor
lcall
les
mov
fs
pop
test
cmc
mov
dec
add
dec
add
cmp
outsb
in
lret
jmp
addr16
sub
inc
dec
cltd
pop
lods
stos
and
cmp
add
stc
jns
pop
xchg
pop
scas
gs
enter
cmc
adc
pop
lock
sahf
push
pop
add
and
mov
cmc
cld
cld
mov
notb
push
loop
cltd
stos
pusha
repnz
sub
ds
in
mov
xlat
call
adc
push
repnz
repnz
sbb
test
pop
push
or
movsb
cmp
faddl
mov
jmp
mov
inc
xchg
xor
jmp
iret
stos
enter
inc
fistpl
aaa
sbb
cmp
int3
dec
mov
mov
shrd
push
fwait
xor
add
repnz
sbb
inc
pop
fbld
add
xchg
cmp
sahf
cmp
mov
pop
call
mov
sbb
int3
outsb
inc
cmp
push
push
ds
pop
inc
fcmovnu
xchg
add
inc
lahf
jnp
cmp
pop
push
push
mov
loope
data16
mov
test
cmc
inc
push
pop
shrb
push
push
pop
mov
loop
adc
leave
cmp
pushw
push
sbbb
leave
hlt
push
push
pop
add
and
into
lret
fs
add
push
xchg
stc
aad
bnd
aas
pusha
into
mov
out
xchg
repnz
sbb
xor
xlat
int
shlb
mov
pop
movsl
add
loope
adc
frstor
test
xchg
or
stc
fbstp
insl
scas
dec
jo
mov
or
out
sub
test
mov
mov
ret
ret
imul
xchg
and
mov
into
xchg
and
aad
adc
pop
jmp
das
movb
test
cltd
dec
test
xchg
jmp
movsl
mov
fdiv
shll
and
ljmp
cmc
pop
sub
jp
jmp
faddl
or
lods
sbb
jg
mov
ja
lahf
and
fs
int
in
in
icebp
cmpsb
push
pusha
push
jae
ljmp
or
fdivl
and
cmp
mov
shlb
lds
xlat
repnz
out
cs
leave
push
mov
pushf
out
mov
mov
leave
pop
mov
dec
icebp
in
jne
rep
in
iret
lahf
add
lods
imul
fdivrs
pop
push
sbb
inc
scas
pusha
insb
jl
xchg
ss
gs
or
rcr
aad
cmc
and
xor
lds
sahf
sbb
xor
mov
dec
int3
xor
or
cs
adc
pusha
xchg
dec
fbstp
repnz
inc
push
xchg
repnz
xchg
cmp
cmp
or
int
mov
sbb
rorb
mov
cmp
fs
jne
sub
lds
lds
ret
iret
stos
int
jbe
pop
mov
enter
aam
movsl
dec
cli
popa
ret
loope
push
out
dec
in
fs
iret
movsl
in
fisttpll
sbbb
shrb
mov
inc
mov
sub
sub
icebp
mov
cli
adc
mov
lahf
aaa
mov
fwait
pop
int
cli
imul
cmp
iret
push
pop
rcrb
popa
dec
in
dec
js
and
pop
cltd
push
jl
mov
xcrypt-ofb
cmpsl
out
pop
jns
decl
mov
outsb
jb
cmpsb
xchg
xor
in
push
out
loopne
scas
out
xchg
js
sbb
xchg
stc
mov
mov
filds
push
sub
mov
and
fidivl
fimull
movsl
xor
cltd
rcl
sbbb
pop
add
lods
jbe
ja
imul
sbbl
jg
pop
dec
out
cmp
push
and
lret
jae
mov
mov
adc
xor
push
inc
adc
and
loopne
cmpsb
mov
sub
and
js
ljmp
push
call
mov
sub
push
pusha
mov
push
mov
pop
lret
inc
sarb
inc
pop
test
lea
jo
add
pop
shlb
lock
mov
std
and
sbb
sbb
cwtl
sbb
sbb
inc
clc
cmp
mov
arpl
push
in
clc
mov
add
test
push
scas
daa
xor
movsb
int
or
shrl
push
add
in
jge
clc
subb
pop
stos
mov
xorb
sbb
shrl
test
mov
aaa
jecxz
cwtl
xchg
mov
fnstenv
dec
ds
inc
scas
lock
or
cmpsb
jle
add
outsl
js
push
movsl
and
iret
xor
adc
jns
xor
cli
dec
int
outsl
mov
mov
push
pop
out
cmp
adc
adc
or
sbb
sub
fwait
pusha
or
cmpsl
mov
add
call
inc
xchg
clc
jne,pt
push
fmuls
fldenv
icebp
orb
mov
divl
push
rcl
ret
enter
iret
xor
xchg
sti
out
jle
pop
or
mov
rcll
stos
push
lahf
dec
cmp
dec
xor
cwtl
mul
mull
add
push
xchg
out
jmp
sahf
mov
bound
dec
hlt
std
sbb
sbb
pop
out
adc
push
stos
jecxz
arpl
repnz
mov
or
dec
mov
jbe
icebp
cld
into
mov
testl
cmp
int
inc
jmp
mov
hlt
hlt
jno
push
lea
or
jge
adc
push
data16
daa
pop
or
xor
mov
pop
mov
ret
dec
cmp
popf
xor
mov
test
addr16
popf
sbb
mov
jle
xor
in
pop
mov
lods
hlt
mov
inc
out
xchg
rorl
sub
pusha
test
inc
fsubr
xchg
cmp
iret
cli
or
shll
aad
loopne
gs
xchg
insb
fucom
add
pop
inc
xchg
cmp
leave
push
fcoml
add
mov
int
in
wrmsr
push
test
adc
decb
cmpsb
shl
jecxz
add
lea
nop
add
popl
dec
jmp
pop
popa
sbb
inc
notb
pop
incl
and
sub
call
jmp
negb
and
sahf
cmp
mov
add
jne
push
jo
rorw
das
cld
or
xchg
jecxz
fisubrl
mov
add
pop
and
fldenv
scas
mov
daa
sbb
lcall
mul
lret
iret
lods
push
insl
jbe
shll
outsb
add
pop
xor
mov
rorl
popf
test
repz
xlat
xchg
movsb
mov
and
es
ret
pushf
ja
stos
imul
popf
and
leave
into
cld
shll
mov
xchg
imul
push
add
jb
in
push
mov
push
imulb
fmul
mov
leave
cmpsb
dec
testb
push
jno
clc
in
aam
dec
out
xor
pop
lcall
hlt
push
dec
add
xorb
es
cmpsl
out
pop
ror
outsl
lods
in
dec
inc
jo
pop
sub
fildl
ret
pop
mov
cmp
xchg
push
out
mov
pop
jle,pt
pusha
enter
inc
adc
add
push
jge
pop
popf
and
lock
mov
jno
xor
test
clc
push
mov
int
cltd
mov
mov
push
je
mov
xlat
and
dec
push
repz
mov
cld
ds
mov
gs
adc
sti
je
stos
pusha
cmp
and
lock
test
gs
jne
popa
dec
dec
pop
insb
dec
push
cwtl
cmp
insl
ds
int
out
jb
mov
inc
mov
pop
js
addb
sbbb
dec
mov
movsb
xor
movsb
pop
cmpsb
or
fcmovnb
mov
sbb
inc
loopne
inc
outsb
mov
cld
jns
jmp
lock
inc
sti
sub
and
add
lds
in
test
push
scas
repz
mov
sub
xor
xchg
or
lret
mov
rcrb
cmp
mov
mov
int3
cmp
repnz
sarb
mov
and
or
aad
inc
push
jo
dec
lret
adc
popf
test
and
fildll
sbb
pushf
or
in
push
ret
add
xor
mov
out
mov
sbb
inc
ret
out
leave
lret
fiaddl
imul
push
push
enter
rcl
jl
daa
add
cmpsl
stc
dec
stos
cmp
insb
inc
xor
outsl
mov
xchg
jb
jbe
adc
in
loopne
pop
sahf
movsl
ror
adc
inc
cmp
test
fisttpll
orl
addr16
or
inc
mov
lret
jae
xchg
or
notl
scas
add
pop
xchg
lds
fcompl
fldenv
loopne
leave
and
ret
rolb
negb
sub
cmpsb
dec
jns
test
daa
out
imul
cmc
xor
outsb
roll
out
push
divl
repz
inc
icebp
stc
push
or
js
inc
sub
xor
sub
push
dec
icebp
sbb
sub
mov
insl
push
adc
addb
xchg
add
pop
inc
add
repz
test
enter
loop
sub
sub
test
pop
cmp
push
mov
dec
scas
jbe
xor
das
aam
jns
dec
and
fwait
insb
lods
mov
sub
fcomps
pushl
loopne
daa
push
test
pop
adc
dec
mov
fstps
xchg
or
xchg
sahf
cmp
dec
lcall
cmpsb
enter
jp
sbb
icebp
in
cmp
mov
sub
lcall
ja
test
lods
push
xchg
adc
repnz
out
insl
mov
stc
xlat
ss
cli
xor
imul
cmpsl
repz
jp
pop
sub
ss
fsubrl
push
dec
adc
sub
xor
mov
add
inc
cmc
pusha
mov
je
sti
jnp
push
icebp
mov
sbb
lea
mov
pop
rorl
mov
jecxz
jmp
pop
inc
int3
ret
fdivr
and
dec
js
out
lcall
jmp
push
pop
xor
inc
xchg
jl
mov
std
dec
xchg
decb
call
jne
sbb
push
inc
xlat
outsb
test
mov
out
jmp
xor
sbb
pop
mov
mov
test
aas
xchg
adcb
mov
icebp
mov
sub
lea
lea
icebp
in
mov
xchg
sarb
sub
fsubrl
jmp
sbb
jb
mov
pushf
movb
jb
pop
mov
lret
cs
dec
jns
xchg
das
mov
xor
insb
jo
frstor
cmp
push
push
pop
xchg
inc
ret
sar
and
das
inc
sub
xchg
sub
in
movsl
pop
in
fistpl
push
fs
stc
lcall
or
arpl
fildl
and
orl
and
push
mov
int
mov
int3
inc
out
out
push
lret
mov
in
xlat
addr16
dec
mov
adc
enter
jge
lret
fists
mov
mov
daa
xchg
inc
inc
and
outsl
int
inc
iret
sbb
ret
xor
mov
xchg
repz
push
jo
inc
nop
dec
je
xchg
adc
inc
in
ret
ds
pop
call
outsb
ret
cli
or
js
hlt
test
repnz
xor
sbb
repnz
lods
xchg
jmp
sbb
rcrl
add
cmpsl
sub
mov
ficoms
lcall
inc
mov
mov
push
dec
mov
xor
jb
jnp
gs
xlat
xchg
pop
push
ja
xchg
jle
cmp
imul
es
jmp
in
sarb
jle
jge
pop
cmp
dec
ljmp
pop
xor
push
xchg
shld
outsb
mov
fs
stos
adc
les
dec
xor
mov
add
inc
test
adc
lods
lds
mull
dec
dec
adc
int
pop
std
mov
pop
cltd
aas
add
lea
mov
pop
or
mov
inc
stos
add
adc
push
fldcw
jnp
dec
stos
xlat
mov
fdivl
jg
in
inc
and
jmp
dec
shrl
ret
mov
imul
mov
mov
jns
inc
xchg
xor
mov
test
cld
mov
into
shrb
icebp
mov
mov
or
push
ret
rorb
popf
daa
movsb
adc
add
push
sti
outsb
addr16
popf
xlat
cli
lock
and
repnz
dec
shll
repz
pop
gs
cmp
xchg
movsb
sbbl
jecxz
scas
cmp
cmp
push
mov
cmp
in
inc
decb
cmp
sbb
mov
add
fcompl
enter
out
js
cmp
movsl
in
fbld
fdivl
dec
mull
js
pushf
and
ljmp
push
mov
cmp
rcr
sti
jae
fwait
jb
inc
push
add
mov
jecxz
movsl
rcr
sbb
mov
enter
into
mov
adc
inc
xchg
xor
pop
scas
sbb
xchg
dec
mov
mov
pop
fisubs
add
stc
shll
and
xor
test
jno
mov
loop
and
andb
popf
cmpsb
dec
sub
sbb
mov
xor
sub
test
and
jl
jae
cmp
imul
test
mov
cmpsl
stos
jbe
mov
inc
inc
aad
arpl
cwtd
cmp
pop
fistpll
pop
inc
pop
aam
ljmp
js
jl
sbb
sub
stos
and
cmp
arpl
add
mov
outsb
pop
inc
sub
push
mov
in
adc
mov
dec
cli
int
xchg
test
into
xor
jo
outsb
push
aam
ljmp
pusha
imul
xor
push
sub
mov
fdivr
sub
in
add
inc
push
es
mov
jmp
sahf
push
sti
xchg
lods
into
sub
bound
jg
loop
xor
nop
jecxz
aas
xor
add
adc
add
sbb
xlat
jecxz
aas
xchg
divl
add
fnsave
rorb
add
xchg
inc
shl
mov
push
int3
mov
adc
pop
in
mov
pop
int
pop
cmc
cli
imulb
adc
cmp
jecxz
outsb
xchg
iret
movsb
leave
std
sub
hlt
mov
std
xchg
jnp
push
or
aam
inc
pop
or
ja
arpl
mov
pushf
xchg
mov
sbb
ficoml
mov
inc
mov
dec
pop
add
sub
inc
dec
xchg
test
les
pop
shr
dec
jnp
dec
cwtl
insb
push
mov
mov
pop
dec
call
call
sub
xchg
cmp
cli
test
dec
sbb
aam
xchg
int
aam
mov
xor
dec
inc
cmp
fwait
sbb
adc
mov
ds
push
shll
fnstcw
shll
cmpsb
dec
aaa
lods
pop
xor
add
xor
cmpsl
pop
clc
and
popf
daa
inc
xor
xchg
mov
popa
mov
das
scas
inc
icebp
lsl
inc
mov
gs
jne
aas
fwait
sub
pop
add
mov
roll
cmp
or
pop
mov
call
push
xchg
and
jne
or
popf
mov
ret
or
cli
jnp
cld
call
loop
scas
mov
mov
dec
jg
inc
rorl
push
sbb
sub
decl
mov
data16
xchg
pop
sbb
dec
dec
arpl
ljmp
pop
mov
push
pushf
xchg
xchg
popa
cmp
imul
das
pop
scas
lret
aaa
jo
stos
test
adc
jle
je
inc
das
inc
and
scas
adc
or
enter
jp
push
xchg
clc
lock
cwtl
pop
pop
xor
mov
stos
xchg
mov
sub
xchg
jge
push
insl
add
lcall
jmp
adc
xor
setl
imul
imul
bound
push
fimuls
xchg
lahf
stos
jb
pop
dec
cwtl
fildl
test
add
xchg
or
push
cmp
cmp
adc
or
enter
fmuls
inc
imul
popa
sub
or
popa
movsl
andl
js
jae
movl
mov
leave
test
lods
scas
call
lock
enter
cmpl
sub
test
mov
and
cmpsl
scas
ja
pop
mov
lods
and
insl
pushf
sbb
xchg
dec
jb
sub
cs
lods
lret
mov
cmpsl
mov
rol
mov
dec
push
scas
pusha
push
mov
sbb
aas
lds
jno
sahf
cmp
mov
lret
fcomp
lret
or
mov
sub
sub
lds
mov
int
push
jbe
mov
sbb
jns
out
int
dec
jmp
add
aas
enter
pop
jnp
push
fimull
cmp
pop
loop
jae
lret
jbe
and
mov
fidivs
push
mov
and
mov
jl
iret
pop
pop
aaa
pop
test
inc
popf
dec
inc
xor
adc
test
mov
dec
fsts
dec
clc
inc
fiaddl
mov
icebp
imul
lds
jae
imul
mov
inc
cmp
popa
and
mov
inc
icebp
subb
lcall
outsb
gs
jmp
adc
aad
push
popa
or
mov
xchg
int3
jmp
add
jbe
jle
inc
or
shll
push
sbb
lock
pop
in
jae
sbb
push
rcrb
push
mov
inc
leave
or
sbb
aad
sub
push
pop
imul
std
or
fcoml
stc
xor
out
out
test
int
fmuls
lret
dec
out
mov
ss
stos
mov
cmpsl
sbb
dec
sbb
out
xor
bound
dec
sub
ss
scas
incl
xchg
jae
push
cltd
push
mov
inc
add
popf
rcll
xchg
movsl
mov
outsb
div
fldlg2
loop
int
movsb
add
sub
orb
out
bound
mov
pop
test
sbb
pop
jo
mov
dec
xlat
cmp
adc
pop
mov
adc
out
emms
loop
lret
enter
mov
inc
iret
fdivrs
lahf
daa
lahf
pop
inc
out
jmp
hlt
cwtl
adc
sub
push
jmp
outsl
jg
push
mov
mov
jnp
mov
xor
icebp
jp
dec
xor
cmp
sar
pop
add
mov
jno
mov
lret
in
arpl
xor
decb
add
stos
mov
loop
fcmovnu
lret
stos
fmull
jne
push
inc
jne
mov
hlt
sbb
adc
dec
xlat
iret
test
ret
test
or
pop
lcall
test
jbe
aas
imul
xor
je
sub
or
pushf
xor
jge
test
mov
pop
or
ss
call
xchg
out
pushf
xor
jg
xchg
test
xor
test
adc
sub
pop
mov
mov
inc
xor
fisubrl
xor
ljmp
mov
es
rcrb
aad
shlb
das
in
add
xchg
sbb
test
arpl
pop
jno
pop
outsb
adc
jno
in
push
cmp
test
cmp
arpl
and
or
int
lods
call
adc
pop
outsb
sub
xor
cld
sub
inc
fwait
mov
iret
jl
ss
ficompl
dec
inc
mov
xchg
mov
notb
and
icebp
cmp
and
push
xor
lahf
or
xchg
stos
and
stc
xor
jl,pt
movsb
or
dec
test
mov
sub
rorb
mov
lret
pop
loop
push
out
loop
adc
add
push
push
jge
cld
stc
pop
hlt
add
sub
icebp
inc
mov
loope
dec
pop
inc
shlb
add
fdiv
test
inc
fmull
sub
incb
push
jnp
xchg
sub
mov
cmp
sub
inc
pop
mov
mov
jnp
push
test
or
aaa
mov
dec
jae
push
cmp
adc
jecxz
jecxz
aad
adc
xchg
addl
xor
cmp
rcrl
and
mov
add
icebp
push
jle
mov
pop
or
aas
stos
push
das
xlat
dec
leave
mov
lcall
rcrb
sbb
inc
pop
jb
movsb
in
xorl
nop
sbb
xor
popf
stc
xor
sub
bound
push
addr16
fidivl
xchg
jb
xorl
mov
jl
scas
jns
dec
xchg
pop
imul
pusha
xchg
mov
repz
pop
mov
jecxz
leave
imul
jl
jp
jnp
hlt
mov
mov
dec
or
push
sbb
out
andl
mov
cmp
and
xchg
ss
push
pop
cmp
movsl
ss
xchg
in
pop
call
gs
sbb
pop
pop
add
dec
pushf
mov
test
mov
js
dec
push
or
xor
mov
jae
adc
lds
scas
gs
sbb
adc
xlat
adc
lock
icebp
bound
fists
movsb
add
xor
jge
sbb
roll
aad
sar
outsl
cmp
inc
loope
sbb
sbb
xchg
pop
xchg
cmc
movsl
mov
shlb
idivl
sysexit
int3
sub
push
sub
out
jno
add
sarl
adc
xchg
mov
iret
sahf
mov
add
rol
push
pop
sti
pusha
ret
jmp
daa
pusha
inc
das
je
jle
insb
inc
push
dec
movsl
or
movsl
test
sti
mov
and
sti
movsb
add
sbb
loop
cwtl
push
mov
or
push
es
sbbl
repz
push
stc
inc
push
cmc
cmp
aad
cmpsl
add
cli
push
sub
dec
add
js
mov
mov
notb
sub
cmp
mov
bound
cmp
andb
inc
pop
fnsave
sbb
stos
ret
rcll
shrl
dec
scas
jnp
dec
mov
add
lods
arpl
cmc
or
in
xor
cmc
imul
xchg
cld
stos
or
cmpsl
fistpll
cmp
cmp
ret
inc
insb
jbe
push
test
addl
inc
inc
rcrb
xlat
add
insl
jg
test
add
pop
inc
mov
cmpsl
in
xchg
cmpsl
mov
test
out
mov
rcl
jecxz
xor
xchg
sub
cmpsb
mov
fwait
imul
add
repz
inc
xor
jne
cmpsb
push
aaa
add
cmp
sbb
mov
test
xchg
jecxz
or
ror
push
xchg
jbe
fs
nop
in
shll
mov
sub
mov
jbe
enter
ret
inc
imul
scas
fnstcw
sub
mov
clc
roll
dec
and
ret
addr16
push
xchg
inc
data16
repnz
adc
xchg
cltd
ljmp
pop
lods
mov
jp
mov
jg
insl
movsl
lods
out
xor
lret
mov
rcrl
in
das
out
jbe
cmp
inc
ss
or
lcall
cmpsb
push
in
icebp
out
cli
lret
sub
cmp
aaa
mov
add
jb
inc
data16
js
in
jae
push
fsts
mov
and
inc
xor
testl
lcall
ffreep
shll
sbb
pushf
jb
and
pop
movsb
cld
fdivs
pop
repnz
stc
imul
cltd
dec
ret
xor
push
int
out
or
mov
test
fiaddl
mov
loopne
mov
sbb
push
adc
icebp
ficompl
lcall
xchg
out
sub
mov
adc
jge
hlt
bnd
test
test
aad
gs
rol
ja
cmp
or
sbb
dec
test
pop
subl
xorb
jg
insl
lcall
jl
cmp
clc
mov
lods
out
add
test
jp
insl
sbb
cwtl
mov
inc
mov
and
push
jmp
mov
jo
daa
sub
push
lods
xchg
sbb
test
js
or
test
aam
cmc
pop
sbb
or
xor
mov
mov
push
fdivrl
mov
and
sub
lods
and
jmp
and
pop
push
call
dec
mov
repz
push
adc
add
xchg
pop
lods
enter
jne
push
add
push
cmpsb
mov
xor
sbb
loope
fstpl
xchg
stos
cs
push
in
adc
outsb
cmp
jnp
mov
cwtl
out
cs
inc
xor
adc
lods
out
mov
pop
stos
sbb
jl
mov
sbb
mov
mov
cmp
out
lret
int
inc
adc
stc
xor
sbb
repz
mov
inc
in
cmp
jle
sbb
inc
leave
adc
inc
sbb
imul
fildl
test
sub
test
cmpsl
sbbb
jne
fbstp
daa
mov
imul
call
sbb
push
push
jge
insl
ficompl
in
and
jo
popa
jle
inc
or
int3
cmp
es
sub
roll
clc
mov
jnp
mov
xchg
enter
insb
repnz
add
imul
imul
lods
cmp
cld
jecxz
or
fdivrs
mov
push
xchg
scas
loop,pn
in
fdivrl
loopne
or
insb
mov
in
les
pop
popf
sti
jne
mov
cli
inc
cmc
aaa
pop
xor
imul
jnp
mov
mov
movsl
jmp
sub
mov
rol
xchg
xor
es
ret
mov
das
jbe
lahf
in
sub
scas
outsb
divb
sarl
mov
rcrb
scas
and
shll
sub
in
hlt
jbe
adc
fxch
sbbl
inc
jbe
and
pop
fwait
or
scas
pop
ss
push
aas
in
cmp
int3
jbe
pop
dec
inc
mov
movl
or
rcr
mov
test
movsb
frstor
fs
cmp
sahf
xchg
sub
adc
icebp
jbe
mov
cmp
shll
mov
jae
fcmovne
xor
mov
stc
dec
shlb
xorb
lods
mov
mov
pop
lds
inc
mov
or
fiadds
mov
loope
adc
pop
inc
xchg
sti
mov
mov
stos
jnp
sub
orl
stos
insl
test
push
lods
aas
sbb
push
adc
nop
xor
call
pop
fs
pop
push
xchg
out
rclb
lock
out
add
pushf
loop
inc
dec
mov
aam
out
ror
lea
popa
js
xchg
rcl
test
lea
pop
mov
jns
das
bound
cmc
mov
iret
hlt
mov
out
stos
pop
cld
inc
sbb
pop
lods
sti
mov
int3
je
test
pushl
cmpsl
out
sbb
icebp
gs
or
adc
imull
mov
mov
addl
pusha
nop
xchg
sub
mov
pop
je
loope
mov
cli
mul
rorl
and
scas
xor
or
push
xlat
and
pusha
inc
outsl
mov
push
and
ja
mov
pushf
jl
filds
ss
jnp
adc
xchg
xchg
jmp
and
mov
pop
pop
and
roll
jo
ds
sub
adc
enter
lods
ja
fisttps
sub
pop
add
pusha
jno,pn
dec
mov
mov
push
mov
and
push
jle
mov
lret
xchg
enter
test
sahf
fldl
aas
repz
xchg
and
incb
inc
mov
cli
push
test
or
jp
jae
data16
pop
insb
repz
xchg
ljmp
inc
mov
repz
mov
mov
or
neg
loopne
mov
xchg
jl
push
sti
add
repnz
dec
cwtl
movsl
dec
notl
dec
loopne
push
or
fldt
dec
aaa
jle
push
out
add
xchg
xchg
pop
sbb
jnp
mov
shl
push
fstps
push
jbe
testb
push
ljmp
xor
rol
adc
outsl
cltd
mov
sub
fstps
shlb
push
pop
pop
push
sub
andb
lock
ljmp
xlat
lcall
testl
inc
mov
and
jbe
dec
jecxz
fwait
ret
movsl
jecxz
xchg
addr16
pop
shll
mov
push
or
aaa
arpl
jbe
mov
test
sub
in
ljmp
imul
push
sub
movsb
clc
rol
shl
lea
pop
ds
jge
push
mov
rcrl
pop
mov
daa
mov
push
sbb
jecxz
jmp
fildll
mov
lret
xorb
push
lret
add
jae
addr16
adc
xchg
push
jmp
out
addb
test
hlt
shrb
bswap
into
jno
add
jle
add
jb
int
ret
xor
test
jbe
sbb
cmc
and
leave
add
push
mov
int
mov
xor
jno
or
sbb
inc
lods
inc
in
ds
rorl
dec
aam
pusha
add
jecxz
sub
dec
mov
mov
std
ret
xor
das
mov
sbb
rorl
sub
and
loop
icebp
sbb
mov
data16
xchg
decl
cmp
out
fmulp
jecxz
hlt
adc
jg
lahf
mov
cltd
sbb
inc
or
inc
mov
lods
lods
std
notl
xchg
dec
mov
pop
cmp
cmp
subb
je
adc
adc
test
mov
xor
negl
add
sbb
jne
dec
adc
lods
pop
xlat
mov
sub
sub
inc
mov
xchg
movsl
clc
xor
pop
imul
or
dec
aaa
fstps
or
mov
add
jnp
mov
mov
xor
subb
divb
push
stos
es
dec
add
or
negb
pop
leave
dec
sbb
cmpsl
scas
pop
pop
dec
dec
and
pop
jb
aad
out
xor
inc
fists
test
inc
repnz
sarb
lcall
jbe
ror
add
mov
scas
addb
ret
jb
out
jg
int3
push
xchg
pushl
mov
xchg
pop
pushf
movsb
lret
or
out
dec
test
cmp
cmc
test
dec
mov
pop
sub
cmpsl
xorl
and
lret
in
pop
or
loope
sbb
sahf
loopne
pop
push
test
and
push
int3
sbb
add
push
mov
rcrl
pop
fs
or
mov
nop
push
adc
dec
clc
cli
xchg
lock
xor
lret
clc
scas
ficompl
dec
push
data16
jo
lcall
addl
mov
lcall
movsl
fcmovne
fwait
inc
xor
lahf
sahf
adc
xlat
clc
mov
imul
int3
cmp
outsb
pop
sbb
ret
andl
xchg
repnz
pop
popf
mov
into
std
ret
lods
pushf
nop
mov
inc
sahf
push
sti
push
pop
loopne
dec
les
jnp
es
mov
xor
pop
out
or
aaa
xor
ret
pop
in
scas
addl
inc
cmp
mov
bound
int
fsubrl
dec
cmp
mov
loopne
lods
pusha
adc
aad
pop
lds
mov
xor
sbb
cmp
insb
push
cmp
ror
xchg
and
and
inc
jae
xchg
stc
cmp
cltd
push
or
inc
sub
js
cwtl
in
les
loop
testb
pop
xchg
mov
imul
and
in
mov
mull
enter
addr16
cmp
ljmp
out
ljmp
xchg
mov
pushf
push
lods
dec
lods
mov
xor
fld
std
mov
mov
inc
ja
adc
fimull
xchg
inc
and
sub
xor
or
daa
insb
mov
adc
outsl
mov
or
call
js
dec
mov
mov
xor
scas
imul
jmp
mov
lret
mov
shrl
and
fs
sub
mov
sbb
dec
cld
int3
push
out
xlat
scas
shr
dec
imul
pop
rclb
sbb
pop
cmp
adc
jge
adc
xor
int3
je
mov
push
mov
std
fincstp
mov
mov
mov
and
cmp
insb
adc
stc
mov
iret
ret
add
and
push
pushf
lock
inc
sti
cmp
sub
test
push
movsb
push
xor
xchg
mov
add
push
add
shlb
pop
stos
cmpsb
gs
pop
cwtl
aaa
repnz
xor
dec
mov
sub
mov
or
sbb
loop
out
fs
pop
aad
loope
enter
call
pop
dec
mov
xor
pushl
into
movsl
add
xor
sub
push
sbb
imulb
mov
addb
mov
xor
adc
lret
jo
lret
call
loope
jg
cli
addr16
std
and
cmp
aaa
mov
lods
leave
rorl
adc
push
int
xchg
jg
ret
fistl
sbb
fldl
pop
fistpll
outsl
add
lods
fwait
pop
sti
inc
inc
mov
and
dec
dec
movsb
and
rclb
mov
stos
mov
js
mov
inc
ds
cwtl
xchg
adc
push
lods
fistpl
push
add
xchg
or
mov
call
cli
dec
lret
xchg
outsb
mov
out
xor
mov
push
jmp
cmp
daa
push
xorl
fidivs
mov
dec
int
lds
jmp
mov
xchg
aam
subl
mov
xlat
pop
int3
xchg
cwtl
push
add
inc
addr16
dec
andl
pop
add
imulb
and
or
pop
movsl
xchg
dec
pop
push
xchg
lods
scas
xchg
mov
xchg
xor
mov
mov
sbb
in
lcall
push
xchg
pop
scas
outsb
jecxz
in
mov
aaa
stos
pop
pop
inc
cmc
gs
pop
inc
mov
mov
xchg
sahf
out
jo
mov
movsb
imul
jb
icebp
push
lds
pop
pushf
xor
sbb
cltd
fnsave
push
xchg
bound
dec
mov
jbe
and
bound
loopne
test
or
dec
movb
cwtl
das
xchg
inc
loope
pop
jmp
add
jne
lahf
and
xor
xchg
pushf
jne
mov
mov
xor
mov
jno
rcl
fcmovu
mov
jmp
sbb
sub
fst
test
sbb
rcrl
dec
adc
bound
sbb
jo
iret
mov
mov
ror
popa
ds
push
aaa
fmull
pop
xchg
push
mov
mov
mov
into
jge
xor
pop
fs
mov
or
es
fadds
aam
adc
xor
stc
xor
or
or
ja,pn
dec
int
lods
popa
fsub
cmp
push
xor
dec
in
adc
fsub
enter
adc
or
mov
and
mov
mov
cmp
aas
pop
and
cli
push
adc
xchg
call
adc
or
sub
loopne
dec
lods
jecxz
scas
hlt
in
lock
aas
imul
mov
or
stos
mov
adc
xorl
and
das
outsb
ljmp
mov
sbb
mov
and
movsb
or
out
mov
xchg
loope
insw
test
sub
sbb
push
and
ret
loope
loopne
nop
fucom
incb
jle
pop
cmp
fisttpll
add
and
pushf
xchg
xor
imul
ljmp
cmp
out
adc
stos
and
loopne
insl
dec
xchg
repnz
mov
pop
popf
cmp
arpl
fcoms
jne
inc
and
mov
sub
hlt
dec
sti
xorl
mov
pusha
mov
sub
mov
push
pop
cld
and
loopne
push
push
ljmp
mov
stos
mov
ret
pushf
insb
mov
loop
lea
and
lods
xchg
xchg
iret
xor
fs
les
pop
push
xchg
cmpsl
pop
mov
out
cmpsl
jo
cmp
lahf
insb
fwait
sub
push
ja
pop
xor
das
mov
mov
addr16
ja
aaa
jmp
push
inc
jcxz
imul
xchg
or
imull
aaa
sub
sub
sarl
jg
sub
mov
jg
and
aas
xchg
jge
gs
in
inc
aad
sbb
add
mov
stc
or
in
mov
or
push
mov
mov
pop
mov
clc
push
pop
mov
das
add
clc
test
push
mov
loopne
xor
jbe
loopne
cmp
xor
lock
adc
jo
mov
xor
std
mov
and
mov
fistl
js
xlat
gs
xlat
pop
mov
rol
sub
adc
loope
cmp
jne
inc
push
pop
inc
clc
testl
cmp
push
in
xorb
cmpsl
inc
mov
jge
and
pop
data16
shll
dec
dec
into
dec
roll
mov
push
jbe
fmuls
stos
add
mov
mov
jb
push
cwtl
mov
fildl
movl
stos
mov
xchg
std
mov
or
adc
and
pop
aam
fisubrs
or
cmp
cmp
gs
test
mov
cmpsl
cmpsb
mov
xchg
and
dec
xor
cwtl
xor
in
inc
hlt
ljmp
mov
adc
sbb
xor
aas
add
cmpsl
push
push
dec
mov
mov
out
sub
insb
pushf
jge
push
and
add
jle
fdivrp
dec
sahf
adc
aam
ret
mov
xlat
push
imul
dec
fldcw
xchg
add
sub
add
nop
fstps
daa
dec
aad
out
push
bound
mov
mov
cli
adc
lea
push
shlb
pop
ljmp
sahf
xchg
mov
aaa
sub
bound
inc
mov
mov
imul
repz
std
popa
push
mov
mov
cmpsb
hlt
xchg
es
add
ja
fwait
fs
cmp
add
cltd
xchg
shl
cmp
jmp
jnp
fs
mov
orl
shll
inc
mov
mov
jae
movsb
es
push
push
repz
push
lock
popa
mov
arpl
fwait
sub
repz
jmp
enter
jne
push
lods
loopne
xchg
xchg
ss
cwtl
imul
mov
pop
data16
repnz
call
cmp
mov
sbb
cmp
filds
aaa
cmp
sub
jne
jecxz
stc
push
mov
mov
xchg
fiadds
xchg
negl
fnstsw
ret
test
std
sub
lds
or
enter
pop
or
jge
or
repnz
mov
mov
and
push
in
mov
xchg
cmpsb
pop
mov
jne
cmpsl
cli
cwtl
and
jmp
repnz
or
xlat
aaa
repz
ret
dec
rorb
push
add
push
mov
pushf
pop
fadds
das
fldl
jge
dec
and
fidivrs
mov
mov
dec
out
xchg
inc
test
pushf
imul
jge
sbb
mov
dec
push
jo
lahf
pushf
stc
jo
daa
xor
shll
mov
sarb
xor
sub
sbbl
loope
insl
cwtl
ljmp
outsb
sub
popa
js
leave
mov
and
add
outsb
test
pusha
jp
pop
aad
cmp
ds
dec
sbb
jno
mov
sbb
dec
inc
inc
pusha
cmp
and
ds
popl
adc
mov
arpl
stos
and
xchg
mov
jnp
push
mov
in
sub
hlt
xchg
xchg
xor
inc
mov
push
out
inc
out
sub
adc
in
ret
sbbb
xor
jne
pop
or
dec
insl
insb
add
push
mov
xchg
stos
dec
xchg
jne
push
mov
data16
je
shlb
jne
bound
scas
insl
std
js
inc
rcll
add
out
cli
rep
imull
in
sbb
popa
hlt
inc
mov
pushf
sub
xchg
xchg
xchg
sbb
inc
pop
iret
xchg
inc
xchg
lods
xchg
stc
shrl
dec
mov
hlt
movsl
dec
fisubrs
add
push
or
mov
pop
movsl
adc
lahf
add
call
pushw
xor
sub
js
pushf
push
jle
cmp
and
or
mov
inc
dec
sub
daa
leave
adc
shrb
jecxz
fs
das
jmp
push
inc
mov
hlt
dec
hlt
lcall
sub
push
in
push
cmp
aam
or
sbb
clc
xor
subb
movsb
pushf
pop
fs
jge
push
xor
xchg
addr16
pop
stc
mov
xchg
adc
xchg
jle
jecxz
loopne
mov
sti
sub
mov
in
repz
cmp
adc
mov
mov
push
push
inc
sbb
test
ljmp
fmuls
add
or
fcomps
add
mov
insl
mov
push
fnop
fbstp
ljmp
lret
sbb
inc
out
fisubs
add
push
arpl
pop
fs
mov
pop
xchg
fidivs
sub
pop
mov
mov
mov
xor
nop
incl
jbe
xchg
adc
fs
nop
jbe
xor
adc
push
mov
or
xchg
push
add
cmp
mov
dec
pop
jge
sub
stos
mov
sbb
cmp
cltd
pop
mov
or
mov
mov
hlt
insl
sti
lods
ret
mov
repz
jecxz
outsb
ljmp
hlt
test
push
jmp
lods
sahf
nop
and
test
inc
push
pop
add
or
dec
xor
or
xchg
push
xor
lahf
cli
jb
aad
idivb
mov
push
push
pusha
xor
jg
rorb
jp
sbb
xchg
je
adcl
jnp
jl
push
dec
loope
xor
xor
ficoml
jl
adc
and
push
aad
mov
mov
imul
inc
movsb
xor
cwtl
mov
jo
repnz
cmp
or
aaa
repnz
pop
push
mov
iret
sub
add
sbb
ret
xor
pushf
jmp
movsb
pushf
mov
clc
dec
cmp
nop
xchg
in
js
or
lret
pop
mov
push
sbb
cmp
jge
movsb
or
in
mov
pop
clc
and
push
mov
push
std
xor
rolb
es
mov
ss
in
leave
test
inc
cltd
push
lret
push
dec
adc
jg
inc
jnp
cmp
outsl
andb
fists
xchg
inc
rol
and
xchg
jno
test
jecxz
xchg
mov
les
fsubs
adc
xlat
lods
dec
push
sbb
cmc
nop
enter
jns
add
add
es
int
sbb
lcall
repnz
add
and
lahf
aam
mov
sub
push
icebp
lret
jg
in
or
inc
dec
bound
ss
jecxz
mov
adc
dec
or
ljmp
test
mov
std
jle
fdivl
mov
les
ret
outsl
out
jb
out
stos
in
jecxz
outsl
rcr
test
gs
cmp
fcoms
mov
fimuls
imulb
ret
js
es
pop
mov
cli
sbb
mov
adc
insl
mov
and
ret
cmp
pop
scas
sbb
enter
cltd
sarb
iret
addr16
pop
inc
sbb
xchg
fidivs
fwait
and
add
in
sub
sub
add
push
insl
mov
int
sbb
fdivrl
ds
pusha
xchg
xchg
iret
pop
ret
cmp
je
push
outsb
cmpb
cmp
je
ja
jne
fdivrl
in
iret
or
inc
pop
push
in
js
out
sub
xchg
lea
jb
xchg
pushf
or
lret
fildll
dec
call
stc
mov
js
xchg
rcll
adc
and
xchg
out
add
sbb
lds
loop
int3
aas
shlb
arpl
shrl
push
cmpsl
sbb
fnstcw
popf
lret
ds
jae
fisubrs
xchg
mov
push
fstpl
lcall
add
aad
dec
mov
xchg
push
fwait
xchg
push
mov
pop
jge
inc
fdivrl
negl
lcall
cmp
dec
sub
pop
pop
jo
and
int3
int3
ficomps
push
out
iret
gs
loope
aad
dec
popa
daa
xchg
mov
arpl
sbb
add
pop
or
or
test
jno
mov
mov
aas
jno
in
mov
dec
outsl
jmp
xchg
sbb
fmuls
out
mov
and
test
insb
lea
cmp
mov
test
add
mov
sbb
icebp
pushf
icebp
into
or
mov
add
mov
cmp
and
inc
adc
pop
dec
and
sub
add
rcll
in
jbe
mov
inc
in
push
lret
icebp
push
mov
and
xchg
cld
popf
lcall
push
js
sub
jno
sti
mov
outsl
dec
loopne
push
push
and
nop
mov
push
sti
gs
mov
and
movsb
push
push
adc
jnp
das
mov
lsl
in
adc
jne
cs
pop
fs
gs
stos
adc
push
xor
fcompl
jns
mov
cmp
pop
sbb
lock
ljmp
mov
icebp
faddl
xorb
out
aas
lea
inc
sub
testl
sbb
dec
mov
inc
loop
enter
pop
mov
repnz
dec
sti
call
mov
inc
mov
sub
dec
or
adc
sub
mov
fbstp
je
orb
out
shll
addr16
movsl
or
add
mov
and
sub
sub
mov
sarb
jnp
ljmp
xchg
push
cwtl
mov
dec
mov
inc
in
cs
add
repnz
jnp
fbld
and
popf
push
pop
push
or
and
loop
leave
test
pop
popa
cmp
add
loop
ret
mov
ljmp
push
sub
das
cld
movsb
rorb
test
dec
pop
int3
jae
fcom
outsl
push
dec
pop
cmp
pop
dec
inc
jne
cmp
dec
mov
xchg
mov
add
add
and
es
xor
cmpb
loop
std
fistpll
mov
stos
enter
mov
sarl
sbb
cmc
and
jbe
pop
cmp
shl
lods
mov
xchg
inc
mov
jae
xor
jnp
add
orb
inc
mov
xor
insb
adc
push
add
movsb
call
call
xchg
das
sbb
in
loopne
and
repnz
aam
push
dec
pop
aam
dec
mov
mov
shl
in
mov
or
sbb
icebp
inc
fisubs
in
inc
fmuls
sarl
cli
mov
xchg
mov
test
sahf
in
mov
mov
or
push
mov
sub
xchg
mov
xor
add
or
ret
scas
out
imul
loop
cmp
arpl
pop
or
and
fstpl
test
push
xchg
test
xorl
sbb
dec
mov
test
cmpsb
cmp
das
mov
mov
mov
inc
cmp
jne
sub
lea
cmpsl
sbb
cmp
xchg
or
cs
xor
sbb
shrb
pushf
or
outsb
add
jno
out
test
sbb
je
cmc
pop
cmp
inc
imul
aas
dec
inc
test
nop
pop
mov
shrb
shlb
and
cmp
push
fcmovu
bnd
imul
cs
dec
repz
dec
push
push
loopne
lods
repnz
fsubr
vminss
sbb
pop
inc
push
cld
mov
mov
mov
daa
std
in
or
cltd
in
cmp
jbe
mov
cmp
fs
push
aad
pop
int3
cmp
or
push
or
xchg
cltd
inc
aam
inc
sti
pop
es
xorl
mov
in
js
ffree
jp
mov
or
test
pop
xchg
mov
inc
aad
aad
mov
loopne
xchg
inc
jl,pn
adc
adc
fsubs
mov
popf
mov
dec
jo
xchg
jno
jb
jno
mov
dec
addl
mov
cmp
pusha
sbb
mov
xchg
and
lret
jnp
arpl
fprem1
cmp
sahf
test
xor
insl
subl
push
repz
or
lods
jecxz
xchg
mov
jge
mov
hlt
mov
mov
add
ret
lret
adc
or
js
fldt
push
loope
xor
arpl
mov
stc
ljmp
mov
jae
in
add
mov
xchg
imul
fidivrl
arpl
cmp
insb
movsb
bnd
mov
mov
lcall
mov
sahf
sbb
sbb
pop
pop
sbb
test
cmc
inc
cmp
loopne
sti
mov
loopne
je
jl
mov
xor
sbb
sbb
pop
test
and
int3
mov
cmp
jne
js
xchg
fisttpl
in
fdiv
jmp
mov
jns
dec
aaa
pop
jg
hlt
lods
in
divb
loop
or
push
mov
je
cmp
mov
cmp
outsl
or
jmp
mov
dec
arpl
mov
add
mov
cld
bound
lea
cmpsb
sbb
adc
sub
add
lcall
aas
and
xor
sub
cmc
in
pop
popf
dec
mov
in
stos
jg
push
jne
push
push
movsb
mov
xor
sbb
adc
scas
mov
sbb
imul
or
push
jbe
sti
loop
int3
lcall
add
cmpsl
cmp
adc
leave
jmp
cs
sub
add
push
mov
sbb
push
loop
sub
adc
movsb
cld
jns
mov
movsb
jmp
pop
and
xor
ljmp
pop
mov
fwait
test
adc
movsb
pop
lods
jno
enter
cmc
andl
push
ds
jmp
lods
je
mov
and
je
leave
rol
adc
dec
dec
cmp
lret
outsl
dec
ja
loopne
adc
adc
sbb
cwtl
int3
lock
push
popf
fistpl
aas
stos
xor
cli
inc
mov
ret
aam
jmp
cltd
pushf
ljmp
or
sbb
popa
into
xlat
push
nop
pop
jle
stos
shll
cli
add
popa
idiv
sbb
push
mov
imul
or
jmp
xchg
sub
dec
leave
add
cmp
add
pop
xor
adc
jne
es
adc
pop
orl
cmpsb
cmp
add
xchg
and
imul
push
into
call
cld
pop
call
pop
gs
or
cli
mov
adc
ss
shlb
out
dec
adc
pop
xor
dec
cwtl
or
add
inc
cmp
icebp
add
sub
xchg
aas
adc
sbb
adc
bnd
push
pop
es
mov
ljmp
daa
xchg
scas
add
cmp
cmp
test
xor
mov
imul
mov
movsl
or
loopne
xchg
add
das
jns
sbb
push
pop
fcmovne
mov
lods
inc
gs
movsb
popa
sahf
jmp
mov
cmpsl
and
add
lds
mov
rclb
bts
xchg
sbb
sarb
je
outsb
adc
clc
adcl
popf
mov
push
loope
sub
xchg
xchg
sub
add
xor
xor
jo
gs
xor
das
test
mov
jecxz
out
andb
xchg
xor
mov
mov
mov
lea
pop
ds
adc
and
cmp
jle
jp
fiadds
arpl
lret
lcall
mov
pusha
rcrb
mov
mov
lds
push
sub
enter
les
andl
xor
jnp
repz
jnp
mov
push
mov
in
dec
xor
das
jo
jne
dec
dec
lcall
adc
and
inc
data16
ret
add
push
lret
jae
fsts
cmpsl
xor
jmp
dec
loope
lcall
inc
sub
int
inc
push
xor
cmp
rorl
enter
imul
inc
sahf
nop
jmp
lret
inc
dec
jne
mov
lcall
das
mov
cld
adc
int
sub
shll
push
xchg
leave
fdivr
bound
xor
xor
push
int
sti
jmp
adc
aaa
push
fldcw
mov
mov
insb
pop
and
jmp
cwtl
sbb
pop
or
ret
jb
stc
and
dec
push
fdivr
or
jno
push
or
mov
sbb
mov
scas
adc
das
lea
dec
leave
lahf
arpl
mov
cmp
xor
sub
pop
push
shr
in
inc
ss
pushf
dec
mov
or
mov
cmp
lods
stos
jae
pop
lock
mov
push
test
cmp
jnp
std
jbe
in
mov
jp
add
cmpb
mov
addb
mov
pop
fstpt
xchg
inc
cmpl
and
xchg
cmp
es
sbb
or
in
xchg
pop
shll
jbe
jb
cld
sbb
lret
in
jbe
mov
out
movsb
or
mov
pop
xchg
popf
xchg
inc
imul
out
cmp
adc
lcall
mov
lods
adc
pushf
cltd
xor
mov
mov
xchg
pop
mov
fsubrs
sub
call
adc
scas
mov
iret
lds
mov
imul
hlt
adc
mov
bound
daa
aad
mov
aaa
add
lahf
cmp
adc
daa
movsb
jecxz
imul
dec
test
in
push
fabs
or
test
pop
and
and
jge
xor
lret
out
gs
jb
or
xchg
inc
xor
popa
insb
lret
shufps
pop
hlt
in
adc
xchg
lret
imul
dec
and
jmp
gs
stos
ret
inc
push
mov
fisttpll
and
or
sbb
test
xchg
in
sub
clc
out
scas
ja
lds
fs
mov
and
mov
add
mov
xor
push
std
pop
dec
sti
xchg
cmp
fisttpll
cmp
adc
hlt
sbb
adc
ficoml
ja
inc
jmp
sub
sub
or
dec
iret
xor
sbb
pop
repnz
pop
push
xchg
jle
xchg
mov
mov
fdiv
dec
cmp
push
xor
fwait
sbb
sbb
xchg
lods
cmc
mov
add
scas
pop
ret
sbb
jns
and
push
adc
cmp
mov
mov
adc
imul
rcrl
fsub
lods
push
push
rol
xchg
das
push
or
lods
fs
insl
cld
cmp
mov
loope
push
inc
rolb
adcb
jg
and
add
pop
loop
lds
xor
rol
cltd
mov
std
sahf
mov
pop
imul
fimuls
fiadds
ljmp
or
into
fisubl
aaa
mov
push
xor
add
xchg
mov
out
push
push
dec
push
jl
roll
outsb
fdivr
loope
cmp
inc
nop
notb
adcb
insl
adc
mov
out
scas
xchg
int
lods
mov
fmull
hlt
cmp
gs
pushf
jno
ss
orb
inc
ss
pop
add
jae
ficoms
fcoms
out
push
ja
inc
dec
out
fdivrl
xor
mov
cmp
aam
dec
sahf
inc
mov
mov
nop
push
mov
cmp
xchg
in
mov
mov
pop
in
adc
xchg
push
mov
pusha
outsb
loop
sarl
inc
mov
mov
fisubrs
pop
jbe
pop
cli
lret
dec
push
lea
adc
stos
mov
pusha
cmpb
add
fdivrs
jmp
mov
je
fistl
jle
jmp
shrl
das
les
push
dec
inc
push
call
out
fldenv
pop
push
fcomps
in
sahf
or
mov
sbb
dec
movsl
lret
sub
pushf
sbb
mov
lret
mov
xchg
aad
ret
xchg
hlt
xchg
push
ss
fldcw
mov
mov
cli
dec
mov
adc
mov
repnz
ljmp
mov
sbbb
rep
outsl
pop
fstpl
mov
into
leave
cltd
mov
mov
je
dec
push
cmpsl
loope
dec
fstpl
sub
or
in
cmp
sub
out
mov
and
loope
rorl
push
lret
je
int
stc
arpl
faddl
fs
or
xchg
outsb
inc
popaw
scas
mov
stos
sbb
mov
add
inc
dec
cld
testb
xor
inc
std
cwtl
hlt
jno
push
jne
xchg
iret
imul
pusha
and
dec
data16
nop
cs
loope
lods
mov
dec
inc
fcmovnu
mov
xchg
cmp
push
clc
sub
push
cmpsl
adc
mov
add
outsb
ret
aas
jbe
and
sti
stc
mov
jl
and
imul
imulb
fimuls
mov
jo
je
in
fsubrl
adc
and
sbb
mov
push
nop
jo
mov
scas
insb
or
xor
xchg
cmp
xor
in
pop
pop
jmp
stos
imul
xorb
xchg
mov
or
or
jmp
subl
fcos
js
cmp
loope
rclb
je
orb
shll
push
lahf
ja
xorb
cmp
callw
sub
cmpl
cli
mov
lcall
das
aam
notl
ljmp
sahf
mov
and
test
push
jecxz
test
nop
sbb
dec
insb
jmp
xchg
cmpsl
gs
mov
sub
cmp
mov
sub
sbb
sub
push
push
lret
imul
test
cmp
jo
push
pop
ss
hlt
cmp
inc
push
imul
xchg
movsl
loope
not
fnsave
jmp
mov
out
dec
aas
mov
cmc
mov
out
fwait
pop
pop
ss
sti
dec
flds
shlb
dec
push
movsb
mov
scas
out
jae
sbb
stc
inc
xor
insb
dec
push
int
jmp
push
nop
sub
mov
in
js
std
lahf
push
shl
aam
jg
hlt
imul
mov
lods
stc
or
mov
pop
mov
sub
insb
sbb
xlat
sub
pop
dec
add
ljmp
sarb
sahf
mov
imul
pusha
scas
jae
cwtl
sbb
outsb
xchg
fsubrs
sbb
sub
out
pop
das
test
xor
xor
fadds
xacquire
leave
cltd
push
dec
jno
cmovb
inc
add
fyl2xp1
in
in
loop
les
popa
adc
addr16
sbb
sbb
add
rcll
mov
mov
or
fs
mov
andl
xchg
inc
sbb
cmp
enter
pop
sbb
imul
sub
lret
adc
mov
lods
xor
push
xchg
arpl
mov
push
push
mov
insl
sub
loopne
rclb
out
add
repnz
inc
es
sbb
andl
mov
mov
jno
cli
mov
push
fisubrl
sub
xor
push
mov
jecxz
cmpl
insb
jg
sbb
iret
pop
lcall
xchg
add
mov
fwait
adc
jo
cmc
ljmp
and
mov
lret
pop
mov
push
movsl
fnsave
clc
stc
rcr
leave
test
jo
out
cmp
pop
insl
lock
mov
inc
scas
leave
inc
push
pop
inc
das
mov
and
inc
push
sbb
sahf
sub
push
xor
cmp
xchg
jge
das
mov
fwait
cmp
out
push
idivb
inc
icebp
lcall
lret
aas
push
jg
repnz
pop
cld
or
xchg
pop
das
lock
xor
sbb
loopne
inc
and
lret
clc
adc
dec
add
pushw
test
push
stos
out
add
and
xchg
mov
push
push
dec
enter
adc
repnz
and
insl
cmp
jns
xlat
jl
mov
mov
in
js
loope
out
fisubrs
repz
mov
and
inc
scas
push
push
xor
lahf
idivb
pop
adc
cmp
cmp
stos
aaa
mov
not
popf
dec
xchg
mov
jle
stos
out
mov
and
test
stos
pop
fisttpl
and
jle
and
loope
mov
call
or
mov
push
subl
ss
sbb
or
and
ss
adc
data16
addr16
stc
or
or
in
scas
fldenv
add
nop
jnp
dec
ds
pop
adc
mov
xor
lock
aaa
push
sarl
sbb
insl
lcall
inc
sarl
cmp
dec
je
in
cmp
or
pop
ja
xor
das
ds
and
adc
xchg
xchg
mov
iret
mov
mov
pop
pop
pusha
push
sahf
aas
sub
lods
stos
fldt
test
out
xchg
cld
adc
data16
call
fs
les
cmp
mov
mov
pop
xchg
iret
test
and
in
idivb
push
or
sti
out
sbb
or
fcoms
movsb
cmp
cmp
add
mov
inc
xchg
lcall
scas
jg
and
pop
mov
pop
xor
mov
cli
pop
or
sbb
dec
xor
lods
lds
push
aad
jg
pop
loop
test
adc
mov
sbb
cmp
pusha
jns
or
lahf
xchg
stc
jg
xchg
sbb
xor
out
ljmp
mov
cmp
enter
mov
or
fisttpl
mov
jo
sahf
push
mov
add
fimuls
xor
mov
sub
xlat
out
addl
mov
lds
rclb
popf
sbb
push
cmp
mov
inc
arpl
push
inc
xor
in
pop
jb
mov
jg
imul
cld
test
stos
outsb
imul
daa
out
cmpsb
jmp
dec
jmp
aam
mov
pusha
jp
xchg
out
inc
push
fsts
stc
insl
movsb
mov
ljmp
dec
jno
sbb
test
shrl
cmp
pushl
cmp
mov
sub
in
or
fadds
add
mov
xchg
jmp
fs
xor
jecxz
pop
sahf
jl
or
mov
xorl
icebp
fwait
mov
push
mov
movsl
out
sbb
mov
std
lods
and
cmp
sub
sub
and
mov
mov
sub
sbb
ja
and
mov
lods
or
xorb
out
std
movsb
int
mov
or
xchg
pop
das
sbb
popa
or
arpl
inc
sahf
iret
movsl
jae
aas
iret
in
lret
rorl
dec
jp
mov
xchg
push
pop
mov
mov
addr16
test
jno
idivl
or
jo
out
lock
sbb
mov
dec
movsl
enter
sub
jns
test
ss
add
loopne
test
stos
fwait
add
addr16
mov
mov
mov
nop
lea
scas
mov
movsl
aas
rorl
and
sub
fists
sbb
adc
mov
loop
test
fdivrl
ljmp
adc
into
sbb
js
insl
into
cmp
fildl
add
sub
push
dec
popf
and
jg
mov
je
sbb
adc
stos
jmp
hlt
jb
mov
push
dec
xor
cli
cmc
nop
mov
mov
das
adc
add
ficompl
adc
ljmp
dec
jns
and
pop
sub
pop
xchg
mov
loop
ds
fcompl
mov
outsb
mov
pop
mov
cs
arpl
cmp
jle
enter
xchg
leave
imul
lcall
add
pop
stos
xchg
pop
cwtl
fstpl
roll
mov
push
bound
fidivrs
mov
adcb
popa
stc
imul
hlt
mov
jmp
jb
and
outsb
js
mov
cs
in
push
cs
sbb
xchg
out
xor
or
loopne
mov
fisubrl
mov
shr
lret
pushw
pop
cmpsl
mov
sbb
sbb
inc
fidivl
leave
fstl
push
and
imul
adc
stc
xor
push
scas
data16
and
in
shr
jle
cmpsl
in
ss
jp
xchg
or
insl
xor
sar
push
sbb
mov
fiadds
add
jb
sub
push
jmp
push
ja
stos
iret
xchg
lcall
in
cs
and
arpl
jnp
jg
sub
inc
dec
repnz
test
sahf
jp
orl
and
mov
movsb
add
lea
push
aam
and
outsl
mov
daa
sub
ljmp
addr16
sbb
and
test
mov
sbb
imulb
inc
pop
push
mov
dec
and
jg
repz
push
clc
mov
repnz
fidivl
incb
jmp
subb
movsl
xchg
out
test
out
movsb
push
jo
cmpsl
insl
inc
xor
pop
negb
lock
sti
push
fwait
sub
xchg
ret
ror
fildl
lahf
xor
xorl
lea
or
cwtl
mov
and
pop
adcl
outsb
cmp
jmp
fwait
test
cwtl
imul
scas
dec
xor
pop
daa
hlt
xchg
adc
es
cmp
test
mov
inc
mov
inc
insb
jl
push
dec
popf
cmpsb
ret
setns
fcmovnb
fcompl
lret
leave
push
jle
dec
sahf
mov
icebp
mov
mov
jno
sbb
aam
mov
xor
jne
xchg
or
xchg
test
jp
mov
imul
xor
xlat
sub
pop
ds
cmc
mov
mov
sub
arpl
jo
xor
push
fildll
jo
ret
push
cmovb
cmp
aas
inc
imulb
insl
mov
add
mov
test
sub
adc
jbe
inc
scas
jo
and
jle,pn
push
mov
or
aas
out
aas
inc
aaa
call
adc
leave
lods
and
into
rolb
xor
inc
adc
ds
cwtl
mov
fwait
jns
mov
iret
push
push
pop
nop
outsl
lret
pop
outsb
in
icebp
adc
fs
lret
mov
pop
xchg
xor
xor
insb
insb
cmc
xchg
std
cmp
sub
add
std
movsb
push
xchg
mov
adc
cmp
dec
rcrl
jb
sbb
loopne
enter
mov
mov
adc
xchg
xorl
jo
lret
cmpb
or
sbb
mov
push
sub
pop
clc
jns
add
xlat
and
push
stos
les
jb
mov
shlb
inc
sbb
js
divb
and
xor
adc
rcr
fimull
lods
adc
cmp
pop
mov
repz
push
out
lcall
pop
mov
aad
aad
negb
lcall
push
mov
test
imul
insb
add
test
cli
loop
mov
mov
cli
xchg
mov
or
mov
stos
add
cmp
test
test
imul
mov
mov
adc
pop
scas
jae
cmc
or
mov
xchg
fnstcw
aaa
sub
dec
js
jmp
cwtl
int
scas
xchg
mov
cld
xchg
mov
xor
call
mov
in
fnstenv
mov
mov
fs
xlat
xchg
add
cmp
add
push
add
pop
xchg
cmp
sarl
and
cwtl
daa
mov
aad
and
xchg
out
js
mov
stc
sbbl
cmpsl
pop
lods
out
dec
inc
xchg
loop
jne
mov
fwait
jbe
call
adc
mov
push
inc
jno
dec
dec
and
rcrb
mov
xor
in
in
adc
mov
es
mov
jnp
push
mov
call
mov
int
mov
stc
sub
fsubl
js
jmp
mov
push
sub
jnp
or
inc
mov
pop
out
push
adc
pop
add
jmp
movsb
enter
sbb
pop
stos
sbb
lret
push
ret
in
push
sub
stos
or
aam
movsl
in
sahf
mov
lds
sub
ret
dec
jle
pop
dec
inc
inc
popf
lret
lock
xorb
test
and
das
psrld
das
leave
mov
fs
inc
subl
pop
adc
ret
dec
dec
sar
stos
sarl
push
mov
lsl
ss
outsl
pusha
loop
mov
mov
jns
jne
push
ss
and
sbb
movsb
inc
jge
add
adc
sub
inc
rclb
dec
xchg
fwait
sbb
xor
insb
dec
loopne
adc
fdivr
mov
fdivs
lret
aam
push
lahf
xor
cmp
or
pop
push
push
dec
sub
xchg
sub
out
fdivr
pop
scas
fisubrs
adc
loop
ss
push
movb
sub
mov
aas
mov
cmpsl
xchg
clc
and
adc
xchg
out
xchg
mov
shlb
inc
mov
or
arpl
fsubrs
mov
rolb
push
inc
mov
xchg
loope
ss
mov
aam
add
pop
jo
inc
jo
sbb
lods
add
mov
pminub
test
dec
nop
jle
cmp
je
dec
insb
push
jl
xor
clc
mov
cmc
mov
jg
stos
leave
test
or
sbb
push
pop
adc
dec
je
adc
push
cmp
fdivl
daa
mov
lea
sub
mov
ret
sbb
daa
test
fistps
mov
test
dec
mov
mov
and
cmp
fs
pop
fsts
cmp
mov
add
inc
inc
xchg
in
push
into
dec
sub
gs
xor
sub
es
pop
and
insb
les
add
ss
sub
imulb
aas
sub
xor
in
mov
mov
xchg
adc
push
fs
das
in
jge
mov
movsb
sub
mov
lea
inc
xchg
lods
xchg
loope
sbb
dec
test
loop
sbb
mov
insl
enter
jne,pt
into
call
push
nop
loop
xchg
or
jo
dec
shlb
mov
add
sti
repnz
testl
cmc
daa
insl
xchg
sbb
xchg
mov
jge
and
cli
jmp
loope
jmp
xchg
xchg
pop
sbb
push
mov
outsb
adc
pop
adc
adc
test
mov
xchg
push
xchg
lret
push
andl
sub
sub
pop
subl
push
lea
stos
add
or
loope
sub
or
jb
out
das
and
mov
loope
sub
sbb
inc
mov
ret
cs
adc
sarb
add
js
addb
in
jae
mov
pop
sarl
jae
js
ret
mov
das
xchg
das
lock
pop
mov
add
addb
sbb
xchg
fcompl
xor
or
mov
pusha
xchg
sbb
shl
jg
int3
jmp
ljmp
jmp
scas
sarb
int
in
jmp
shlb
and
xchg
jb
mov
xchg
stc
ds
dec
push
push
mov
mov
cmp
pop
cmpsb
js
clc
mov
lods
pushf
popa
rolb
push
jmp
xchg
lret
lahf
and
pop
mov
mov
jge
es
cmpsb
push
adc
icebp
arpl
adc
pop
pushf
push
pextrw
mov
pop
iret
cs
in
dec
xchg
dec
pop
inc
sti
sbb
mov
pop
rolb
rcll
inc
cmp
mov
cld
int
cmp
add
pop
pop
mov
data16
sbb
jo
scas
and
orl
jb
push
xchg
inc
fs
adc
outsl
and
and
add
mov
sbb
pop
stos
jae
mov
push
cs
push
mov
sbb
push
imul
jmp
cmp
mov
outsl
adc
xor
cltd
cmc
ds
jbe
cmpsb
fwait
mov
ja
push
mov
dec
idiv
cmpsl
movsl
inc
xchg
jno
xchg
jge
loop
lret
int
mov
mov
sub
jae
cmp
test
jl
scas
dec
push
cmp
adc
push
sub
inc
xchg
shll
inc
hlt
je
outsl
stos
dec
out
adc
dec
loope
mov
mov
ret
cmpsl
into
inc
inc
pusha
das
or
scas
add
scas
cmpsb
dec
lret
es
xor
ja
cld
dec
cmp
mov
and
sahf
push
jecxz
arpl
fidivrs
das
lods
push
jecxz
jae
cmp
test
and
jge
inc
jl
aaa
fidivl
mov
out
inc
xchg
jbe
cltd
mov
jo
adc
fs
repz
dec
ret
ret
jns
insb
stos
push
popa
pushf
inc
pop
mov
adc
mov
mov
adc
popa
pushaw
andb
movsl
hlt
inc
push
inc
jp
pop
push
cmp
daa
lods
mov
mov
cmpsb
idivl
cltd
aad
movl
cmp
arpl
loop
jns
bound
stos
das
xchg
pop
mov
jae
mov
pop
cltd
mov
lea
enter
push
loop
mov
in
shr
fcompl
sbb
loopne
fbstp
cli
adc
cld
cmp
and
jnp
std
ret
sbb
add
daa
jmp
aam
adc
mov
cmc
sbb
ret
js
mov
inc
insb
lods
mov
xchg
jle
xor
adc
jmp
cmp
inc
repnz
or
jp
pusha
rclb
out
out
push
cmp
lock
imul
cmp
inc
xchg
mov
jg
pop
xchg
das
xchg
fstpt
xchg
lods
test
push
aad
lds
es
loopne
jp
insb
arpl
sub
xchg
jns
ret
mov
shr
push
add
test
shrl
dec
jp
mov
fisubl
pop
fwait
notb
dec
fs
pop
dec
xchg
popf
scas
fildl
push
sar
lea
in
sbbb
mov
das
sub
push
out
push
gs
repz
sub
dec
jno
push
or
pop
pop
fisubrl
cltd
mov
cwtl
adc
rolb
movl
push
rol
pusha
pop
fs
cmp
mov
hlt
test
es
or
xor
add
loop
les
fdivrs
fwait
and
xor
jo
pop
pop
push
sbb
ja
fisttpll
ja
and
lcall
cmp
mov
sbb
dec
and
cmp
add
cmp
pop
jmp
sub
push
call
or
xor
shll
in
pop
fs
shrd
dec
out
loopne
sub
pop
xchg
aaa
aaa
movsl
les
sub
ficomps
fwait
mov
out
mov
lds
outsl
aad
jo
push
jo
mov
inc
fwait
adc
add
aam
popa
sub
lcall
gs
xor
and
rcrb
mov
add
jne
insb
loop
and
dec
pcmpgtw
add
sbb
or
fdiv
ds
test
sbb
sub
ljmp
mov
out
or
das
out
imul
adc
add
ret
mov
inc
addr16
xchg
test
mov
pop
and
sbb
js
fildll
jmp
scas
push
pop
pop
aad
mov
or
ret
mov
test
dec
adc
out
xchg
mov
lods
xor
ret
fisttpl
scas
mov
es
xchg
and
test
cmp
lret
mov
jo
jg
xor
lods
jl
sahf
push
in
iret
jp
shl
jg
adc
sbb
mov
jmp
cmc
dec
movsl
sbb
cli
call
mov
sub
popw
sub
or
push
sub
adc
scas
loope
les
mov
repz
out
push
lret
mov
mov
jo
lock
inc
loope
jnp
ret
mov
hlt
lods
leave
mov
or
mov
das
cmpsb
inc
or
mov
mov
adc
mov
test
mov
arpl
in
pusha
mov
and
loopne
sub
repnz
fwait
ret
xchg
xchg
jle
mov
ret
in
adc
mov
ljmp
mov
fisttpl
fistpll
sti
negl
mov
push
into
rolb
insl
cmp
push
jge
mov
sub
pop
xchg
sbb
push
adc
push
adc
cmp
ds
or
rcrb
js
rcrl
xchg
repz
pop
cmovg
push
adc
push
add
jp
iret
mov
mov
push
inc
pop
pop
imul
mov
mov
pop
jbe
inc
sbbl
add
cmp
add
push
mov
addr16
xchg
sbbl
pop
mov
mov
jecxz
jge
dec
mov
jmp
mov
and
ljmp
mov
adc
add
int3
sub
jmp
or
or
mov
dec
mov
or
add
jg
sub
dec
push
bound
movsb
mov
mov
loop
test
cltd
icebp
or
dec
ret
xchg
add
shlb
or
fcmovb
das
dec
sahf
and
into
pop
adc
mov
insl
lcall
je
cmp
shl
das
ss
xorl
fidivrs
sbb
int
xor
inc
fmul
popa
test
sub
fcoml
lods
mov
cmp
es
jne
clc
pop
cmp
sbb
outsb
xorl
or
enter
and
push
pop
clc
jae
movsl
rclb
sub
das
call
sarl
cltd
adc
xchg
pop
mov
fidivs
addr16
lods
mov
fstpl
scas
divb
ja
sbb
data16
std
inc
push
jne
js
pop
cmp
subl
je
test
loopne
test
test
mov
xchg
sbb
fwait
mov
flds
sbb
out
fsubs
push
out
adc
stos
fucomi
fisubrs
mov
mov
int
push
cld
mov
das
mov
xlat
sbb
fimull
xchg
jecxz
aad
cmovle
jno
cmp
nop
cmp
push
insb
imulb
movsb
stos
pop
or
rcrb
mov
mov
xchg
fwait
aaa
sbb
test
ret
inc
lret
bound
rcrb
hlt
dec
shrl
jo
jecxz
movsb
or
jl
call
movsl
scas
rol
xchg
mov
xchg
xor
xchg
push
shlb
sub
inc
pop
and
jno
stos
add
sahf
cmp
fsubrs
xchg
push
loop
ret
xrelease
push
cs
adc
mov
mov
ret
loope
inc
add
decb
int
jno
dec
xlat
pushf
aaa
xor
jle
testl
inc
pop
repz
lahf
cmp
iret
repz
ficoml
nop
out
dec
inc
inc
inc
imul
xchg
mov
mov
andl
mov
jo
stc
jbe
jle
iret
enter
lds
add
inc
push
daa
fwait
rcll
out
icebp
mov
stc
sub
sbb
push
pop
enter
idivb
xchg
jno
fisttpll
push
adc
out
shrl
sbbl
or
addr16
mov
sbb
aam
popa
popa
fcmovbe
fwait
xchg
stos
popf
jbe
sbb
mov
in
cs
inc
dec
insl
enter
jle
and
int3
xor
and
movsl
cs
data16
sahf
mov
lahf
loopne
mov
fimuls
adc
lret
and
cmpsb
push
cmpsl
popf
ficompl
in
push
js
ds
lcall
out
lods
sbbb
adc
mov
mov
outsl
leave
jb
cltd
xor
xlat
call
icebp
push
fisubl
sub
lcall
clc
jo
mov
pop
push
push
aaa
sbb
cli
adc
dec
aaa
xchg
imul
mov
lods
xchg
fisubrs
rolb
rcrb
arpl
sub
in
fidivs
cmp
sbb
dec
stos
push
arpl
add
sar
lds
xchg
or
and
cmp
cld
cmpsl
aaa
scas
out
orl
movl
mov
test
sbb
jle
mov
xchg
bound
mov
data16
xor
xor
call
outsb
stc
enter
add
adc
inc
xor
shl
ljmp
and
shl
and
lea
inc
mov
sub
out
std
in
inc
jl
xorb
jns
xchg
iret
push
add
jg
popa
addr16
inc
mov
rorb
lret
xchg
mov
cmp
sar
push
inc
sub
adc
les
mov
cmp
pop
or
mov
outsb
push
cmpsl
orl
dec
push
cmc
dec
pop
add
dec
push
jns
pushf
xorb
xchg
or
popa
sbb
mov
lret
out
into
popf
inc
cmp
mov
add
mov
adc
or
adc
push
rcrb
cwtl
inc
enter
sbb
dec
mov
inc
rclb
push
bound
cmp
jp
or
mov
movsb
adc
out
movsb
aam
iret
loope
into
dec
aam
out
cmc
js
push
xchg
xor
mov
lds
loop
out
out
nop
pop
jb
mov
xchg
stc
mov
xchg
cld
adcb
and
dec
add
insl
add
jbe
inc
in
in
out
xchg
and
std
ljmp
insl
aas
and
lret
test
adc
hlt
loopne
fwait
lret
dec
cs
mov
mov
fisubrl
inc
dec
pop
ljmp
out
sub
stos
pop
adc
sub
aam
fimull
inc
xor
mov
lret
aaa
jae
js
jnp
insl
ret
jb
xchg
lahf
movsl
add
js
in
test
push
rclb
inc
dec
or
popl
jae
xchg
cmp
int
repnz
rorl
iret
dec
add
xchg
daa
scas
and
fiaddl
mov
inc
outsb
rcll
lcall
retw
lahf
add
cmp
adc
jp
neg
movsl
sbb
std
test
mov
add
loope
stos
dec
stos
mov
imul
xchg
push
push
mov
stc
pop
mov
add
mov
adcl
pop
dec
stos
and
xchg
cmp
inc
dec
jp
mov
cmc
ja
popa
push
outsb
xchg
scas
jl
out
mov
inc
xchg
loopne
jno
cmp
ja
fistpll
mov
cwtl
xchg
or
aaa
aad
xchg
xchg
int3
pusha
dec
jge
mov
xchg
pusha
aaa
testb
pop
xor
xlat
mov
mov
sbb
dec
pop
sub
mov
loop
mov
xchg
nop
nop
movsb
in
mov
pusha
cltd
add
shrl
pop
les
mov
xchg
dec
enter
mov
orl
mov
and
shl
xchg
fwait
push
or
aam
popa
mov
stos
dec
rorb
dec
in
sbb
fcompl
add
xor
push
mov
pop
andl
dec
sarb
sti
jl
pop
or
and
scas
pop
sarb
lret
pop
clc
lods
jno
mov
rcll
rcl
or
movsl
fisubrs
lods
jno
pop
inc
jecxz
test
ffreep
fldcw
cmp
subb
adc
jnp
xor
and
jl
xchg
xchg
sets
cmpsl
xchg
stos
or
adc
lock
fiadds
add
dec
jl
cmpsl
add
push
adc
scas
dec
push
push
xchg
aas
add
out
subl
dec
xor
sbb
ja
roll
lret
mov
mov
xor
int
mov
ja
cmp
jle
dec
add
stc
test
std
iret
or
faddl
fiadds
cmp
out
dec
les
jns
cmpsb
cmp
fcoml
fs
ds
cmp
xchg
pusha
lods
pop
dec
or
fs
pop
mov
dec
loope
in
add
imul
and
jns
xlat
sub
push
in
nop
inc
add
mov
mov
stos
ltr
out
and
jmp
mov
fbstp
sbb
ret
and
lea
shrl
fucomip
xor
decb
test
es
ja
fcmovne
inc
call
lods
rorb
aas
hlt
outsl
adc
mov
insb
fdivrs
int3
inc
hlt
fistps
fs
bound
jmp
sti
mov
data16
jb
add
xor
mov
jg
dec
dec
stos
xchg
mov
stos
out
add
fldcw
sub
push
cmp
push
ret
shrb
mov
out
add
adc
pop
jle
cs
mov
ljmp
loope
sbb
popf
outsb
add
cmpsl
push
jge
hlt
fnstsw
inc
mov
inc
dec
or
in
mov
adc
and
ret
pop
xlat
mov
pop
push
inc
fildl
add
xor
xorb
fidivrs
out
insb
mov
push
mov
notb
cltd
dec
dec
mov
xor
push
mov
int3
adc
fcompl
test
mov
mov
inc
dec
in
aad
jle
cmpsl
xlat
popa
and
inc
push
icebp
movq
add
inc
inc
sub
dec
sahf
mov
fisttpll
js
cmp
mov
cli
mov
inc
jbe
inc
mov
jmp
test
or
xor
push
xor
ja
scas
cmp
sub
cmpsb
lds
adc
jae
cmp
int
cltd
lcall
or
inc
sub
aad
into
xchg
clc
js
pop
xchg
sbb
out
insb
mov
jmp
shlb
sub
sbb
fcomps
mov
push
and
mov
cmp
lret
sbbl
mov
xor
popa
cld
lret
xor
add
jo
adc
pop
jb
imul
clc
hlt
xor
cmpsl
mov
cmp
sub
into
jmp
jb
hlt
out
retw
jge
stos
and
mov
push
add
pop
sub
shlb
jg
cmp
ror
ss
enter
in
insl
mov
xchg
push
pop
pop
das
add
cmp
push
push
cmp
sbb
and
sbb
insb
push
fdivl
mov
jle
sti
fldt
or
fs
lds
in
mov
insl
cmp
adc
sbb
into
cltd
mov
cmp
pop
stc
cmp
push
push
jb
mov
and
icebp
dec
dec
imul
xor
push
add
mov
mov
jnp
mov
pop
dec
cld
sub
cmp
jp
mov
mov
adc
mov
loop
jne
pusha
mov
xor
aaa
jmp
dec
xor
rol
lcall
lods
jge
call
pop
popa
imull
lods
xor
loope
sbb
jbe
ret
adcl
jle
popl
sub
pop
and
jae
mov
scas
es
adc
xchg
xchg
lods
adc
dec
adc
mov
or
ds
mov
dec
xor
mov
es
enter
in
xor
mov
repz
jmp
aad
dec
jb
mov
jb
out
push
cld
sub
inc
push
mov
sub
faddp
cmp
lret
ja
pushf
leave
cmpsb
pop
and
cld
mov
icebp
arpl
fmuls
fwait
or
in
mov
adcb
notl
divl
adc
cwtl
push
inc
inc
pop
add
scas
sahf
mov
mov
mov
popf
push
fidivrl
mov
fistl
aaa
jmp
sub
pop
stos
xchg
jmp
fmuls
inc
inc
xchg
mov
jnp
cmc
lcall
enter
iret
iret
xchg
jne
xor
lahf
mov
xor
cmpsb
pop
dec
test
mov
push
cmp
jno
xchg
xor
dec
adc
mov
cmp
cmp
sbb
repnz
test
adc
mov
sbb
nop
cmp
rorl
out
psubsw
pop
xor
push
int
stos
daa
mov
hlt
xchg
mov
xchg
inc
push
test
and
inc
pushf
ja
xchg
add
xor
ret
ret
les
inc
cwtl
cmp
scas
imul
xchg
cmp
dec
nop
jl
pop
push
dec
js
adc
popa
push
rolb
push
mov
fucomp
out
js
mov
ret
mov
add
mull
lcall
shl
xorl
stos
add
mov
mov
outsl
popf
insl
imul
ja
and
sahf
cltd
mov
cmp
loop
pusha
pusha
jbe
inc
xchg
push
xchg
repz
and
repnz
and
clc
in
xor
ficoml
xchg
xchg
mov
pop
xor
and
mov
in
inc
adc
add
mov
or
mov
stos
xchg
lret
cmp
call
inc
cmpl
cmpsl
pop
sbb
leave
mov
aas
sub
sbb
adc
aas
mov
outsb
jo
adc
out
in
push
fnop
jge
xchg
jae
enter
push
andl
xlat
and
and
push
mov
out
dec
mov
lds
in
jg
mov
stc
cmp
testb
add
negl
inc
dec
cmp
aaa
sahf
jne
mov
ds
fcomps
cmp
shrl
lods
jmp
imul
xor
xchg
and
add
sbb
arpl
test
pop
push
sub
adc
jl
jecxz
shlb
add
cli
lods
sbb
stos
adc
sbb
pop
clc
mov
push
pop
pop
movsb
stos
sbb
and
pop
js
popf
out
or
in
xchg
jnp
arpl
orb
cs
push
dec
push
mov
xchg
fwait
or
loope
cs
and
jae
leave
cmc
fdivl
dec
push
andl
and
or
shlb
dec
std
cmpsl
inc
lcall
adc
mov
adc
das
or
je
xchg
cmp
push
adc
xchg
and
enter
repz
mov
loopne
hlt
mov
push
test
std
sub
ret
inc
stos
mov
sub
dec
sub
cmp
jo
rcll
sbb
in
adc
loopne
loopne
cmp
stc
lahf
mov
ficompl
sbb
in
ja
sti
nop
cmp
roll
vshufps
shlb
and
push
sub
and
jns
ret
pop
push
adc
mov
xchg
mov
es
cld
and
xchg
push
and
nop
xor
movsl
add
mov
add
aaa
dec
adc
and
stos
insl
ret
sub
mov
mov
dec
cmc
and
or
inc
stc
xchg
pushf
and
out
dec
mov
pop
or
sbb
mov
xchg
cmp
jbe
and
imull
jle
arpl
or
inc
in
pushf
lret
dec
aas
sbb
test
jmp
xchg
popa
mov
mov
stc
movsb
cltd
in
enter
in
adc
hlt
dec
pop
jle
add
pop
xchg
add
shlb
cmp
pop
shlb
xor
mov
mov
add
mov
nop
jle
xchg
in
jnp
leave
andb
mov
movsl
mov
inc
push
xchg
push
xchg
ret
out
es
xchg
and
adc
ja
lret
gs
negb
and
jg
pop
xor
push
test
and
aam
inc
push
inc
mov
scas
mov
out
mov
push
cwtl
add
and
pop
popf
das
repz
adc
and
inc
test
xor
popa
aam
aaa
push
bswap
outsl
pop
fistpl
adc
inc
and
push
mov
and
mov
xor
mov
inc
add
arpl
cmpsl
stc
mull
mov
pop
pop
divb
and
movsl
movl
sub
sub
mov
icebp
sub
in
rcll
lods
adc
loopne
stos
pop
mov
test
popf
movl
push
xchg
ja
add
fisttpll
mov
mov
cmp
xchg
mov
push
in
loop
ljmp
cmpsl
std
sub
dec
insb
sub
ja
insb
scas
arpl
filds
adc
lea
cli
sbb
add
jnp
inc
jmp
mov
dec
xor
xor
cmp
or
arpl
mov
rcr
jns
sbb
push
sub
lock
inc
loopne
inc
push
cmp
or
andb
and
push
mov
div
cmp
mov
xchg
shll
mov
mov
or
mov
scas
loope
in
movsb
out
mov
cmp
or
out
mov
cmpsl
mov
data16
push
cmp
aas
mov
adc
add
mov
xor
int3
xchg
cmp
out
sbb
out
mov
adc
fcoml
add
jmp
xchg
and
mov
outsl
fs
sub
mov
cmpsb
or
pop
shr
stos
dec
aam
add
mov
stos
test
jne
pop
and
fstpt
movsl
adc
imul
xor
and
in
movsb
inc
movsl
sbb
dec
jecxz
or
popa
sub
clc
dec
jmp
bound
add
les
sbb
popf
jmp
and
adc
lret
jbe
movsb
xchg
sbb
adc
lods
imulb
popa
push
aaa
push
js
test
and
push
and
sbb
loopne
lock
sbb
xchg
addr16
imul
add
adc
daa
push
nop
cltd
cld
lret
pop
nop
lret
std
dec
mov
rorl
out
je
movb
cmp
push
dec
fnstenv
pop
sub
aad
scas
jns
pop
push
pop
xlat
inc
jbe
inc
push
jle
shr
cld
jecxz
insl
sarb
mov
in
fisttpl
add
cmp
loopne
cmc
inc
repnz
lods
data16
jns
pop
pop
cwtl
enter
pop
pop
das
int
cld
pop
jmp
sbb
insl
jl
jge
xchg
adc
cmc
xchg
sarl
scas
sarl
fdivl
lcall
imul
ja
adc
test
mov
out
pop
push
jle
inc
push
push
cld
cmp
mov
mov
aaa
into
flds
mov
std
xchg
orl
jmp
cmpsb
pushf
insb
outsb
add
ljmp
inc
int3
repnz
outsb
mov
clc
das
push
repnz
shll
cmp
fcom
dec
xchg
lcall
dec
sarb
push
jbe
mov
mov
mov
popf
jmp
dec
rcr
and
xchg
clc
es
cmpsb
mov
inc
jbe
mov
test
inc
aam
cmp
fldl
push
shrl
mov
sbb
and
lcall
mov
rcrb
add
fidivrl
dec
jmp
pop
mov
movsl
lahf
in
fildl
mov
adc
sti
aad
test
or
adc
fwait
pushf
dec
imul
imul
aam
imul
inc
pop
pop
mov
push
cwtl
lret
jl
dec
push
stc
and
aam
fidivrl
lahf
mov
mov
fnstsw
push
and
das
test
repnz
nop
push
roll
xor
add
lds
inc
cmp
sub
lret
scas
out
cmp
sub
inc
inc
rorb
loop
add
jbe
cmp
sbb
subl
mov
xchg
cmp
push
hlt
fs
lret
xor
pop
fnstsw
pop
jno
pop
xchg
cmpsb
mov
push
test
push
dec
xor
sub
sub
sbb
movsl
pushf
loope
or
and
aam
ret
mov
mull
mov
xchg
cs
dec
cmp
gs
test
mov
xchg
arpl
inc
cmp
stos
inc
insl
gs
div
in
mov
dec
mov
dec
jmp
push
in
mov
popa
shlb
outsl
dec
push
jnp
push
std
add
cmp
inc
or
or
sbb
subl
idivb
pop
and
dec
scas
dec
sub
rol
js
jl
imul
jbe
out
outsl
loope
jns
xchg
inc
cltd
inc
jge
pusha
or
cmp
add
sarb
rorl
sbb
lods
movsb
cmpsl
mov
fiaddl
iret
pop
pop
sub
inc
rcl
in
out
cli
xchg
outsl
cmp
adc
mov
pop
clc
out
dec
mov
clc
in
loope
sub
les
loopne
daa
cmp
cmp
push
loopne
and
popf
xor
push
pop
xchg
into
jle
add
pop
inc
cmp
mov
xor
int3
movsl
lcall
push
pop
sbb
imul
inc
sbbb
rorl
stos
mov
out
jno
and
arpl
xor
or
fnsave
mov
add
sbb
cmc
cmc
dec
cmp
inc
xlat
xchg
test
mov
adc
call
inc
push
xor
test
mov
aam
mov
pop
out
xlat
sub
ss
mov
lret
push
fs
rcr
stos
pushf
out
inc
jo
pop
ljmp
js
int3
inc
mov
cmp
shll
mov
add
xor
dec
inc
mov
imul
filds
stos
bnd
add
push
jecxz
cmpsl
cmp
loop
js
or
cmp
pop
lods
dec
cmp
cmp
cmp
mov
in
push
push
add
out
mov
jno
jg
in
add
mov
add
inc
xlat
pusha
mov
jno
out
popf
mov
jg
ret
addr16
sub
mov
xchg
jae
in
mov
mov
movsl
out
cmc
lds
aad
xchg
jo
inc
xor
movsl
sbb
rorl
hlt
stc
mov
ja
mov
push
xlat
stos
adc
mov
push
cmp
scas
les
mov
int3
jg
and
pop
pop
push
mov
nop
out
pusha
sbb
jbe
xchg
sbb
insb
pusha
lock
popl
and
mov
cltd
popf
mul
xchg
int
lods
insl
xchg
pop
adc
fucomip
sub
mov
ret
xchg
ret
or
push
sbb
jbe
xlat
cs
ret
pusha
push
mov
xor
xor
pop
xchg
pushf
cmp
mov
cmp
push
fs
and
add
sbb
fidivrs
stos
dec
cmpb
pop
jecxz
jnp
icebp
mov
data16
addb
in
lock
in
pop
mov
das
lea
aam
pop
jp
fs
shrb
repnz
xchg
call
add
sub
xchg
fmuls
add
or
xchg
adc
test
sbb
xchg
adc
cmpl
pushf
mov
xor
jle
or
out
xor
inc
mov
adc
and
lods
pop
xchg
jno
sub
pop
xchg
scas
push
adcb
dec
mov
cmp
xchg
xlat
adc
out
add
pop
lret
nop
pop
inc
mov
mov
mov
in
rcl
mov
fldl
xor
jge
lret
jae
xor
cmc
fucomp
je
jp
loop
jl
cmc
in
inc
jmp
sbb
nop
push
jae
cmp
stos
inc
test
push
jno
rolb
in
addr16
dec
inc
shrb
sbb
jo
push
cmp
jns
ljmp
dec
loopne
lods
mov
push
cmp
stc
andb
mov
movd
iret
and
loopne
shll
mov
aaa
xchg
fs
hlt
loopne
sbb
mov
xor
sarl
fwait
push
adc
xor
test
test
cmc
out
shl
jns
mov
xor
clc
scas
in
push
xor
std
mov
jo
xor
mov
data16
xor
dec
add
add
adc
inc
mov
xchg
loope
stc
cmc
sbb
loope
jo
in
clc
xor
sbb
clc
add
xor
push
push
inc
cmp
push
aam
jle
and
xchg
xor
jae
push
fcoml
pop
cmp
popf
push
in
je
leave
aad
sub
xchg
test
sbb
sub
enter
outsl
cmp
push
add
cwtl
cltd
xchg
or
aam
xor
int3
fisubrs
push
xchg
sbb
jne
cmp
and
push
out
out
fildll
push
sbb
or
sub
iret
jns
fcomp
jne
int
mov
dec
aaa
movb
mov
ret
dec
lods
stos
mov
movsl
loopne
inc
out
push
cmpsl
push
mov
addl
pop
push
push
jge
inc
shrd
sahf
adc
subb
cld
jmp
mov
cmp
lds
iret
push
out
std
mov
mov
xchg
fs
push
outsb
sub
data16
popa
push
aam
mov
xchg
jb
fldenv
fiaddl
cmp
jmp
adc
sbb
stos
stos
icebp
or
repnz
push
push
mov
jae
sub
mov
mov
push
or
arpl
mov
fistps
jge
inc
pusha
ja
inc
cmpsl
lock
adc
sbb
jmp
std
test
push
cmp
push
popf
ljmp
cld
or
mov
mov
mov
jl
dec
mov
movb
xor
ret
mov
and
inc
or
xor
jb
pop
sahf
mov
sbbb
test
push
cli
and
sbb
in
cmp
xchg
ja
push
mov
repz
or
pop
pop
std
dec
xor
sar
xchg
jp
cmp
jae
ret
or
dec
mov
xor
add
clc
cmp
jp
or
jb
or
das
mov
push
in
and
aad
xchg
mov
cmp
xorb
iret
sbb
sub
and
fcmove
shll
or
cld
jno
iret
aas
test
fistl
pop
xchg
leave
fucomip
into
adc
push
imul
negb
pushf
lock
mov
mov
sbb
ljmp
leave
inc
push
fdivl
mov
mov
sbb
push
xchg
iret
mov
jae
xchg
mov
push
adc
sti
pop
in
dec
jge
hlt
push
jo
shlb
jae
fiaddl
ds
int3
cmc
dec
inc
icebp
lds
mov
xchg
pop
xor
outsl
ret
scas
loop
shr
dec
xor
sub
mov
loop
pushf
jnp
ljmp
data16
out
xchg
xchg
pop
push
mov
pop
add
bound
ljmp
mov
cld
das
dec
lret
sub
in
out
adc
shrl
popf
fists
dec
jmp
popa
xchg
lods
xlat
mov
arpl
mov
stc
xor
aaa
inc
cmp
mov
fucomp
icebp
roll
fnstcw
jle
and
imul
and
xchg
pop
pop
lcall
mov
movsb
fwait
or
hlt
insl
or
enter
bound
fldcw
cmpsb
dec
pop
test
test
add
sarl
outsb
cmp
jmp
jne
dec
loop
pop
out
mov
ja
ss
loop
jnp
and
into
or
xor
xlat
dec
xor
dec
pushf
xlat
adc
cmpsb
sub
stos
stos
mov
mov
fucomi
push
jl
aam
xor
ds
fcomi
or
mov
es
mov
sbb
push
xchg
std
ss
jmp
mov
mov
xchg
mov
mov
js
mov
fnstcw
lds
jae
sub
cmpps
loope
hlt
es
push
adc
sub
and
out
xlat
mov
xor
dec
mov
pushf
and
cltd
pop
push
jle
in
or
xchg
inc
add
out
sub
packuswb
xor
mov
sbb
and
lods
or
cltd
xor
enter
icebp
jnp
cmpsl
les
pushf
sahf
jno
mov
xor
daa
scas
cmpb
cltd
sub
add
aas
and
cld
movsl
jl
inc
outsl
jbe
in
dec
leave
sti
int3
orb
add
outsb
int3
xchg
xchg
mov
sahf
fs
mov
movsb
cltd
or
push
test
shl
stos
test
in
nop
popf
pushl
in
nop
or
in
cmp
lret
push
jnp
rcrl
ljmp
in
shll
ss
xchg
xor
mov
cmp
out
insb
and
daa
adc
repz
testl
ret
jnp
and
popf
stos
dec
icebp
lcall
or
jo
ret
xor
dec
movl
sti
lahf
fidivs
subb
mov
popa
int3
inc
push
sbb
xor
adc
jb
jno
jno
sbb
in
xchg
movsl
dec
mov
bound
mov
mov
fs
sar
and
std
xchg
and
and
fsub
daa
in
dec
aaa
push
dec
push
inc
jne
xchg
pusha
mov
loopne
or
rcll
sub
mov
gs
aad
or
shlb
in
jbe
xor
adc
ja,pn
and
inc
xlat
out
inc
lret
aam
and
push
adc
icebp
cs
cli
and
mov
inc
push
sbb
and
xchg
aas
ja
into
loop
mov
inc
mov
sub
pop
jbe
cld
repnz
les
fiaddl
pop
push
adc
into
xchg
push
jmp
sub
sbb
das
xchg
jl
int
mov
cld
xor
mov
fstl
push
push
cld
scas
dec
cmpl
sub
add
push
pop
fistpll
inc
sbb
gs
push
sub
popa
sbb
pop
adcl
pop
jne
jge
test
test
testl
xor
push
je
pop
push
xchg
cld
inc
xchg
xchg
cmp
xchg
daa
out
sti
repnz
or
jae
xchg
xorb
aas
sahf
cmp
and
add
ljmp
cmpsl
hlt
fstpt
adc
stos
xchg
sbb
fsubr
imul
sub
orl
mov
mov
inc
mov
adc
stc
das
aaa
jbe
jecxz
cltd
dec
and
push
rclb
sub
dec
sbb
adc
sbb
ljmp
pop
jle
and
and
fisttpl
and
add
xor
bound
sub
mov
into
mov
and
fldl
adc
inc
mov
lret
loopne
mov
push
pop
pop
ljmp
mov
sbb
mov
sub
ss
scas
push
pop
stc
jecxz
cs
push
push
test
fildl
dec
out
jo
leave
roll
lods
inc
mov
fisubl
cmovl
push
pushf
push
pop
aaa
xor
icebp
pop
fcomip
aas
daa
sub
jecxz
adc
jp
sbb
jo
xchg
pcmpeqw
sub
fst
pop
leave
test
add
addl
xchg
xor
outsb
push
inc
cmp
jns
lret
adc
cmpsb
or
adc
cwtl
mov
daa
rorl
dec
add
sbb
sti
cmpsl
popf
ljmp
call
and
fwait
pop
jnp
jns
xor
pop
loopne
or
inc
mulb
and
out
aam
leave
mov
xor
fidivs
ja
or
outsb
sbb
test
movsl
xor
cltd
movsb
push
leave
push
jnp
fsts
sbb
jmp
add
arpl
popf
mov
pop
mov
and
inc
imul
shll
xor
scas
jne
and
movsb
cld
stc
adc
add
push
cmp
pop
lahf
mov
testl
outsb
sbb
adc
flds
sbb
xchg
fcoms
jno
mov
lds
sub
cwtl
dec
cmp
mov
bound
sub
and
push
pushf
push
data16
adc
imul
aaa
adc
sbb
cs
jmp
test
ret
push
pcmpeqb
or
push
pop
rorl
inc
jns
in
pusha
mov
test
mov
and
push
ret
fidivl
loop
lock
dec
pushw
int3
ljmp
push
cmpsl
xchg
mov
mov
ss
mov
mov
scas
popf
pop
ljmp
push
leave
dec
out
pop
test
or
jecxz
jg
pop
loop
sti
inc
adc
jae
inc
aad
orl
rcll
pop
imul
and
pop
in
aad
pop
scas
fnstsw
xor
stos
out
mov
mov
and
loop
push
push
sub
lcall
cld
push
xchg
cmp
out
rcll
aad
stos
std
jo
cmp
mov
add
push
sub
hlt
xlat
sub
pushf
rorl
pop
pop
bound
mov
out
movsl
js
clc
popa
mov
pop
push
icebp
or
xchg
sbb
outsb
rclb
jae
out
movsb
inc
mov
leave
cmp
int3
inc
adc
xchg
leave
add
inc
mov
fs
or
loope
js
mov
jb
pop
insl
push
push
sub
ljmp
push
std
cmc
sub
inc
and
xlat
xchg
ljmp
inc
sbb
or
loope
sub
mov
cmp
push
aad
sti
fnstenv
mov
gs
cmp
jmp
sbb
or
adc
pop
sbb
mov
mov
and
pop
push
jnp
lods
mov
aas
imul
jg
add
cmp
mov
push
sub
loop
leave
into
mov
add
stc
pop
test
xchg
popa
sbb
cld
pop
push
cld
mov
mov
cmc
inc
xchg
ss
push
pop
pop
cwtl
punpcklwd
sar
and
mov
or
xlat
cld
out
rorl
js
sub
sub
dec
push
lea
cld
or
jge
nop
fwait
add
mov
xchg
xor
jge,pn
int
stc
ficomps
rcll
aas
ret
or
scas
adc
xlat
icebp
add
xchg
sub
lods
aas
mov
sbb
dec
pop
ss
mov
cmpb
pop
mov
lock
popf
mov
pusha
stc
es
push
icebp
outsb
mov
mov
mov
jo
mov
adc
mov
aaa
scas
mov
orl
pop
inc
stos
lcall
pop
sub
ret
ds
jp
mov
jb
and
and
stos
adc
loope
xor
jle
mov
outsb
mov
xchg
out
mov
cmp
dec
and
xor
sub
xor
sahf
inc
int
mov
xor
cmp
jecxz
jecxz
out
shll
jb
pop
repnz
adc
xchg
aad
xchg
out
lahf
das
mov
cmp
adc
push
cmp
ret
insl
pop
scas
cs
lea
pop
leave
cmp
pop
jns
mov
dec
imull
sub
adc
or
add
arpl
rorl
mov
jne
movsb
push
aaa
int3
mov
inc
mov
jecxz
dec
movsb
stos
adcb
pop
add
lods
xchg
sub
inc
mov
mov
jle
call
loopne
mov
push
push
jbe
sub
imul
xor
xchg
sub
push
call
das
xchg
sbb
sahf
mov
xor
lock
jp
mov
mov
ss
lods
aam
es
outsl
cmc
in
ja
mov
lret
push
dec
int
xor
and
pop
mov
stos
cwtl
inc
and
add
popf
subb
or
hlt
gs
lods
mov
jecxz
add
ds
and
inc
xorb
and
dec
pop
pop
test
xor
inc
faddl
xchg
out
inc
test
or
imul
and
xchg
iret
dec
roll
test
sbb
xlat
lret
xchg
andl
and
dec
add
sbb
xchg
mov
pop
stos
insb
or
pop
adc
and
or
dec
sti
mov
mov
jge
cld
in
sbb
ljmp
std
data16
mov
add
in
pop
inc
cmp
cltd
rolb
insl
mov
pop
sbb
fldln2
mov
add
xchg
pop
push
lea
cmp
add
sub
xchg
jle
xor
pop
fimull
mov
add
xchg
jl
ret
test
push
cmpsb
jp
xor
in
push
iret
inc
sub
mov
pop
lcall
ret
cmpsb
pop
cwtl
cmp
mov
bound
and
in
inc
mov
jmp
lea
cmp
pop
and
mov
enter
adc
mov
fildl
and
sub
jle
fisttpll
shr
es
adc
xchg
jp
xchg
xor
jmp
push
jl
xchg
xor
pop
and
mov
push
into
xlat
jge
pop
inc
mov
icebp
cmp
cwtl
std
mov
adc
rcll
cmp
es
fs
enter
push
cmc
call
pop
fisttpl
xchg
lds
mov
cmp
imul
sbb
jae
outsb
cmpsb
call
pusha
jns
int
push
or
or
adc
jo
xchg
inc
loope
or
jle
enter
adc
int3
shll
jecxz
dec
pop
mov
push
fsubs
into
pop
scas
daa
rolb
mov
adc
fnstsw
push
pushf
sub
mov
xchg
inc
xchg
xchg
es
in
cmp
adc
and
ja
or
dec
fdivrs
jge
push
push
outsl
popf
mov
add
gs
sub
and
sub
mov
adc
jg
leave
inc
mov
sbb
es
sbb
out
adc
push
xor
mov
jns
add
sahf
dec
mov
push
jmp
xor
cmp
repnz
xchg
jg
cmp
inc
seta
bound
notl
adc
push
mov
enter
sbbb
movsb
add
mov
push
add
aas
sub
xchg
pop
iret
adc
mov
mov
mov
push
notl
ds
cmp
add
lcall
fwait
add
ljmp
cmc
test
scas
ret
lahf
lock
and
cmp
int
call
push
push
xor
adc
cmc
mov
adc
addr16
sahf
dec
inc
les
idivb
stos
pop
sub
push
ret
sub
fimull
cmp
shrl
daa
sub
lret
jno
mov
xor
jmp
or
into
mov
xor
adc
int3
sarb
je
push
dec
xor
xor
sub
inc
cltd
loop
shlb
dec
aaa
outsb
adc
inc
xlat
or
jecxz
add
jbe
rolb
leave
lods
loope
pop
ljmp
sahf
or
ljmp
jl
add
mov
xchg
push
sub
mov
ret
adc
or
mov
scas
sub
and
test
inc
cmp
jl
sbb
mov
int
mov
jp
jmp
mov
inc
add
mov
cli
add
or
and
repnz
add
sbbb
fldt
mov
mov
shlb
push
add
sub
mov
add
popf
in
shrl
rol
sahf
push
test
leave
repz
sarl
fwait
inc
or
int
mov
jae
cmc
push
sbb
loope
rorb
ja
push
add
or
adc
cs
cmp
pop
mov
cmp
mov
mov
jg
mov
js
test
mov
out
repz
imull
pop
mov
fldt
pop
xor
shrb
inc
adc
dec
fistpll
repz
mov
js
sub
dec
xor
fs
iret
daa
cmp
fisubrl
mov
push
push
add
in
outsl
add
or
and
popa
xchg
sbb
ljmp
add
xchg
xchg
repz
jno
ret
mov
mov
outsl
push
adc
adc
lock
mov
sahf
add
lock
push
pop
jbe
dec
mov
ja
gs
nop
cmpsl
into
int3
push
sbb
and
sysret
cld
lods
stos
in
pop
xchg
pop
jno
ja
je
fldt
inc
negl
xor
lods
cltd
mov
inc
adc
sub
pop
movsl
mov
pop
cmpsl
dec
das
adc
loop
mov
cwtl
shlb
mov
xor
sbb
cld
mov
push
push
aaa
pop
orl
mov
push
lea
sbbl
inc
in
aam
out
push
sahf
mov
loopne
fdivrs
arpl
xor
movsl
cmp
in
mov
arpl
gs
pop
shrb
pop
cmp
lods
andb
sbb
call
push
scas
shll
subb
jmp
dec
dec
rorb
sub
aam
adc
jl
sahf
mov
bound
loope
and
jl
jmp
mov
mov
jae
mov
negl
or
imul
xchg
clc
in
lea
fcmovbe
adc
inc
and
mov
les
loopne
push
and
and
fsub
add
shl
daa
in
mov
pop
mov
mov
rcrl
scas
xchg
cmp
ret
inc
in
xor
push
inc
mov
and
out
pop
fistl
pop
es
mov
pop
xorb
icebp
and
popa
orb
into
std
and
mov
sbb
or
or
in
mov
fisttpll
jge
lods
testl
popl
frstor
cmp
lea
or
or
adc
rclb
xor
rcrb
fs
out
pop
ja
icebp
clc
mov
call
mov
dec
bound
pop
jb
or
aad
cmpb
hlt
lret
rcr
js
xchg
mov
xchg
xchg
sbb
retw
inc
leave
ljmp
or
aaa
pavgb
mov
hlt
aaa
inc
jl
sub
sbb
repnz
ficoms
pop
out
ja
xor
jb
inc
test
outsb
pop
xchg
sbb
repz
add
mov
dec
rorl
mov
fstl
sarb
push
jmp
xchg
lret
xchg
loop
pop
in
ljmp
mov
jmp
push
add
xlat
mov
fisttpl
fxch
and
sub
mov
or
rorb
movhps
scas
adc
mov
push
rolb
jg
gs
divl
repz
mov
cwtl
movl
imul
mov
cmp
test
push
out
jecxz
push
push
loope
ret
test
out
push
ds
sub
and
mov
or
imul
sahf
ror
ja
adc
in
mov
dec
xor
xor
pusha
add
sbb
mov
jb
fmuls
dec
stos
fldt
in
in
enter
shrb
scas
dec
adc
rcrl
ret
mov
das
fcmovne
ficoms
push
outsl
mov
fdivl
cmp
dec
adc
std
mov
test
insl
lret
mov
jb
nopl
push
lahf
aaa
repz
insl
jmp
leave
xchg
stc
dec
xor
cwtl
enter
mov
mov
push
int3
aas
pop
xchg
fbstp
into
out
dec
cwtl
push
pop
out
add
sbb
out
push
iret
xor
fistps
xor
in
jb
adc
imul
jnp
cmpsl
mov
iret
mov
fisttpl
fdivrs
in
repz
sbb
mov
cmp
inc
outsl
roll
pop
mov
lock
ljmp
xor
scas
xchg
cmp
test
sbb
mulb
cmpsb
test
out
repnz
xchg
sub
and
push
mov
popf
mov
jb
and
xchg
adc
scas
cmc
dec
or
mov
fistpll
jbe
nop
pop
mov
cs
sarl
mov
outsl
jp
shr
cmpsb
rcrb
dec
aas
jl
fwait
aam
pushf
int
xor
sub
adc
lods
in
add
pop
add
mov
loope
inc
sahf
shr
cmp
push
xchg
lea
loope
jbe
dec
mov
sbb
ljmp
push
adc
mov
mov
and
sbb
pusha
pop
rcrl
aaa
or
iret
jbe
jecxz
push
pop
jmp
in
mov
scas
insl
sahf
in
xchg
imul
cs
xchg
pop
mov
repnz
loopne
sub
jg
int
stos
or
jp
push
dec
add
xor
sbb
test
xchg
sarb
push
aaa
dec
dec
ficoml
xchg
sbbb
pusha
or
int
pop
fiaddl
ret
in
imul
dec
and
mov
sub
jmp
imul
mov
js
xor
jmp
movb
pop
pop
sbb
mov
in
test
jno
je
and
cmp
jnp
test
aad
xor
daa
lret
push
pop
imul
sbb
xor
dec
or
test
sahf
inc
out
mov
lahf
jbe
push
out
movsb
jb
add
mov
call
sahf
pop
sbb
test
push
enter
sub
lods
push
inc
mov
faddl
dec
rclb
sub
mov
pushf
pop
jge
out
test
or
icebp
lds
cmp
fwait
call
inc
test
cmpsl
scas
fsin
push
or
scas
inc
arpl
xor
es
push
mov
in
fcoms
mov
call
cs
ljmp
fwait
dec
pusha
jns
gs
push
sbb
dec
scas
arpl
and
movsl
test
cmc
push
cwtl
or
repz
ds
cmp
jge
sbb
xchg
pop
in
or
enter
fidivrl
aam
lret
cmpsb
inc
mov
pop
xchg
pop
scas
das
gs
xlat
jmp
repnz
andl
inc
push
popf
dec
jle
and
in
sub
xchg
adc
mov
adc
jb
iret
cli
mov
out
iret
movsb
sbb
cltd
adc
sahf
gs
push
gs
cmp
add
test
adc
sub
xchg
adc
int
mov
dec
inc
into
repnz
pop
iret
cli
push
aas
decl
fs
mov
repz
jnp
mov
mov
inc
je
ficompl
fistpll
ljmp
mov
fldlg2
popf
xchg
push
jne
sub
mov
xor
loopne
cmp
pop
push
insb
pusha
adc
cmc
clc
mov
jl
push
mov
xchg
cmp
xchg
mov
jnp
movsl
shl
sub
adc
xchg
mov
jp
int
sbb
dec
rclb
fmul
push
xor
lods
pop
in
mov
fwait
mov
fnstcw
jno
je
shll
and
jns
jb
push
mov
add
imul
jne
test
sbb
pop
push
jns
jns
sub
lahf
iret
jbe
stc
pop
mov
inc
in
sub
fiaddl
and
mov
mov
or
subl
insl
mov
mov
jecxz
cld
rorl
fs
in
fdivrp
outsb
dec
loope
aad
xchg
fstl
dec
dec
dec
iret
cmp
jecxz
pushf
jge
cs
or
push
cwtl
rcll
jp
iret
push
adc
cmp
dec
sub
into
in
out
aaa
fidivl
popf
dec
mov
push
mov
sar
je
adc
insb
ss
dec
push
sbb
lret
add
andb
sbb
cmp
cli
test
xchg
inc
iret
repz
sub
lock
pushf
hlt
aaa
insl
lea
dec
movsb
mov
xchg
mov
inc
jo
lea
aaa
pop
pop
sarl
adc
xchg
mov
sub
test
imul
sar
mov
repnz
fsubrs
push
jo
ficomps
dec
stos
nop
adc
mov
daa
xor
add
mov
sub
jae
repnz
test
add
dec
push
cltd
sub
jb
sahf
imul
setnp
jl
enter
dec
push
push
lret
dec
in
aam
lret
insb
adc
dec
popa
xchg
pop
or
and
jnp
mov
sahf
sahf
fdivrs
in
jp
mov
into
leave
lret
push
fwait
ret
stos
cs
cmp
lret
pop
popf
mov
or
adc
aas
jle
repnz
mov
int
push
cmc
ffree
xchg
xchg
push
pop
dec
xlat
jns
stc
mov
inc
push
pop
jmp
inc
sbb
je
inc
xor
or
repnz
sahf
adc
cmc
shll
adc
int3
mov
and
int
cli
jb
jge
mov
dec
and
cmpsl
dec
mov
pop
pushf
testb
lock
outsb
xchg
sbb
enter
test
mov
push
pop
dec
scas
stos
pusha
cmpb
add
xchg
xlat
mov
sub
adc
enter
cmp
cmp
test
aad
mov
adc
iret
sub
sbb
or
inc
ret
cmp
jne
xchg
clc
dec
sbb
dec
lahf
cmp
ficoms
jmp
stos
mov
cmp
repz
mov
xchg
lret
shrl
jnp
mov
xchg
sbb
test
ja
or
dec
fisttpl
mov
out
and
out
stc
dec
loope
aas
push
cmc
out
mov
mov
mov
lea
cmp
aad
adc
jo
sub
push
or
sbb
stos
mov
push
xor
xchg
mov
nop
test
sbb
out
cli
ja
jle
je
shrb
push
shlb
lods
mov
faddl
shl
sub
scas
fnstsw
push
jae
jecxz
out
jnp
popf
out
pop
std
cmp
mov
pop
and
push
jle
fisubs
sub
hlt
dec
cmp
stos
adc
fmulp
stos
psrld
adc
xor
insl
xor
stc
and
jb
lea
les
outsl
ljmp
nop
outsl
jns
or
sub
call
jae
aas
jl
scas
jb,pn
lcall
mov
cmp
jmp
call
decb
sbb
test
jge
imul
movsb
mov
push
adc
push
rorb
mov
jle
leave
mov
mov
jmp
mov
mov
mov
push
inc
mov
dec
aam
movl
pushaw
mov
filds
in
daa
sahf
pop
sub
icebp
lods
cmp
pop
mov
mov
pop
fs
fwait
mov
stos
call
loope
scas
sbb
leave
pop
cmpsl
mov
xchg
icebp
lahf
out
ror
out
fstl
inc
or
clc
pop
xlat
outsb
dec
loope
test
std
cli
and
imul
xchg
out
and
mov
push
adc
clc
jecxz
rorl
inc
mov
mov
testl
xor
js
inc
xor
nop
mov
xchg
add
repnz
rorl
sarb
fwait
and
pop
cs
dec
xchg
imul
mov
leave
mov
mov
push
neg
jb
std
sub
jae
sti
jg
into
or
sbb
jle
loope
mov
add
cmp
out
inc
test
repnz
fadds
xchg
lods
mov
xchg
cmp
adc
pop
push
xor
sbb
out
cmp
sub
ret
push
or
mov
in
lret
and
jo
xchg
add
push
adc
sarl
push
lods
inc
cs
inc
decl
loopne
loope
inc
addr16
jp
mov
pop
ret
daa
pop
pop
jle
mov
js
shlb
push
xchg
imul
out
mov
and
add
repz
cli
movsb
pushf
rcr
scas
sub
andb
sbbl
mov
pop
call
mov
dec
fwait
pop
notl
cmpsl
stc
or
ss
cmpsb
pushl
ds
sub
lret
jge
pop
sbb
dec
pop
dec
and
inc
and
inc
ljmp
jo
adc
lds
lods
mov
jns
pop
push
test
vmwrite
xor
and
jne
push
int3
fistpll
pop
push
js
and
jg
xchg
xchg
push
ret
sti
sub
cmpsb
fbld
fwait
jne
cwtl
jno
int3
xlat
xor
loop
dec
or
or
leave
pop
in
jl
push
cltd
stos
mov
cmpsl
leave
fcom
sti
or
sbb
dec
cmpsl
xchg
or
out
into
or
movb
clc
pop
add
pop
iret
das
clc
xor
inc
lods
jo
dec
fisubrl
xor
frstor
dec
push
rcl
sbb
mov
add
nop
in
js
xchg
inc
xchg
sarl
jmp
sar
push
inc
cmpsb
lods
je
mov
dec
in
loop
mov
jecxz
lds
xchg
pop
dec
in
mov
out
out
mov
mov
ret
xchg
ds
jne
imul
jmp
pop
dec
xlat
sub
push
add
daa
sub
pushf
call
push
push
mov
jno
fsubrs
pushf
stos
jb
ja
out
in
mov
push
cmc
cmpsb
pop
pop
enter
add
cmp
fcompl
fdivr
jno
jg
xchg
hlt
enter
mov
repz
cmpsl
and
leave
pop
cmp
or
mov
fisubs
fnstenv
js
cmp
jge
mov
into
jne
mov
mov
jmp
pop
or
sti
sbb
jae
mov
out
imul
inc
ret
inc
cli
pop
enter
sub
adc
shl
aam
fs
hlt
pop
lods
repz
shr
lret
jecxz
data16
adc
xchg
cwtl
ds
sub
sub
daa
jno
sbb
aaa
pop
pop
aam
mov
sbb
mov
mov
lds
mov
push
sub
or
mov
shl
xchg
inc
or
push
push
fwait
cld
fwait
jp
cmp
push
movsl
adc
popa
mov
idivb
out
out
add
adc
rcrb
sbb
lcall
cmc
mov
test
push
pop
cmpsl
repnz
add
lahf
fcmovnu
imul
pop
mov
and
pop
cmpsb
gs
test
sbb
lcallw
push
int3
xor
xchg
cmp
push
xor
jle
and
ljmp
lock
mov
inc
fsubrs
paddq
xor
and
mov
push
inc
xchg
mov
int3
adc
cmc
movl
inc
jp
mov
mov
mov
mov
int3
lods
sub
test
inc
cwtl
cltd
or
push
ds
xchg
cld
sbb
push
in
rolb
outsb
test
repz
push
pop
jl
push
pop
adc
nop
jge
clc
loopne
adc
cltd
ret
mov
sub
jge
mov
fisubrs
insl
lods
mov
pop
pop
fisubs
andl
icebp
lods
jmp
lock
mov
mov
push
pop
sub
mov
xchg
shll
iret
out
shll
push
fsubrl
pop
cmpsl
mov
insl
shr
jb
or
test
je
mov
insl
push
lods
xor
dec
jno
int3
xor
mov
dec
into
stos
xor
push
jge
test
jns
testl
loope
cmp
pop
and
mov
add
mov
push
add
xor
scas
lcall
inc
std
sub
jo
sbb
ja
and
xor
adc
mov
sub
and
mov
je
imul
lcall
ficoml
repz
mov
je
mov
mov
fildl
sbb
sub
scas
xor
stos
in
xor
cmpb
imul
leave
pop
mov
push
jmp
lahf
clc
loop
rorl
dec
xchg
mov
and
pop
pop
or
mov
inc
fbstp
std
mov
mov
sub
mov
negl
mov
subl
mov
scas
jns
and
cmpsb
mov
loop
arpl
inc
cmpsb
jno
jge
and
and
pop
add
movsb
cmp
pop
movsb
hlt
ss
xor
cli
rolb
pusha
xchg
lret
adc
xchg
movsl
xlat
stc
pop
aaa
ljmp
call
fisttps
adc
inc
pop
push
or
push
iret
and
and
mov
inc
pusha
ret
inc
and
aam
mov
cmp
shll
xor
adcl
pop
ljmp
int
and
or
add
mov
lods
add
cmp
mov
divl
mov
lcall
out
mov
jb
pop
sub
pop
adc
pop
test
push
push
cmp
iret
or
scas
pop
test
decl
xchg
inc
and
int3
in
mov
rclb
pop
test
push
movsb
subb
in
popf
popa
ljmp
int
pop
out
fcomps
jno
mov
fstps
mov
test
mov
dec
clc
xchg
pop
and
out
out
lcall
xor
cmp
xor
dec
cld
mov
cmc
mov
icebp
jl
xchg
inc
sbb
jae,pt
push
shll
cmpsl
rorl
mov
dec
pop
and
cmc
push
dec
xchg
xchg
sbb
mov
je
pop
mov
jl
xchg
fcmovb
sub
push
jl
imul
push
and
fwait
mov
sbb
loope
mov
dec
dec
mov
xchg
cmpsb
leave
push
cmc
addr16
jl
inc
ret
hlt
mov
or
cmpb
addl
inc
adc
dec
sbb
push
jecxz
jo
loope
scas
adc
out
xor
bound
xchg
mov
leave
inc
mov
sbb
cmp
sar
fisttpl
jbe
out
xchg
pop
adc
jmp
call
jnp
je
ror
bound
clc
outsl
mov
mov
mov
adc
add
stc
and
inc
xor
sub
lds
repnz
sbb
cs
imul
enter
les
mov
adc
fsubrl
out
notb
mov
jae
xor
in
mov
aaa
xchg
cmp
jb
adc
mov
adc
mov
pop
mov
add
mov
mov
jl
lahf
lock
sub
ret
xor
add
enter
scas
popa
outsb
mov
fsts
inc
mov
cmc
pop
jb
cwtl
mov
cld
mov
sbb
not
push
cmc
add
inc
icebp
aam
js
xorl
enter
in
fsts
inc
mov
cmp
jl
lds
add
ret
push
mov
mov
lock
std
add
dec
mov
mov
cs
std
and
inc
iret
mov
cltd
jmp
add
jge
and
or
sub
ret
mov
ss
cli
mov
stc
lret
mov
adc
dec
lods
fimuls
mov
adc
insl
cmc
xchg
xchg
das
adc
test
dec
sub
cmp
cmc
out
std
in
xchg
into
xor
dec
scas
scas
popfw
xchg
lret
gs
and
pop
jno
push
mov
scas
add
mov
divl
push
loopne
add
xchg
faddp
popf
daa
cmp
xchg
inc
adc
pusha
mov
imul
push
lret
sahf
loopne
push
adcl
lea
mov
sbbl
push
lret
adc
xchg
inc
in
and
int3
cmp
cld
mov
repz
cmp
adc
mov
inc
stos
lods
stos
pop
sbb
sbb
xchg
inc
inc
mov
cmp
out
pop
mov
loop
mov
jns
adc
mov
pop
pop
mov
sbb
outsl
fisubs
mov
sub
ficompl
sub
mov
scas
pushf
xchg
push
and
jnp
ret
in
in
test
mov
cmp
mov
stc
add
into
pop
lcall
pop
push
pusha
ja
adc
pop
leave
push
pop
push
in
cmpb
mov
or
push
imul
fisttps
cmc
fists
sub
lods
adc
insb
scas
inc
or
lahf
sti
push
loop
add
arpl
sub
filds
pop
jmp
sahf
insl
cs
push
addr16
or
outsb
fcmovbe
dec
push
inc
mov
lods
mov
jge
or
xlat
hlt
je
in
out
sbb
xchg
jecxz
lahf
xchg
xchg
fnstsw
dec
stos
xchg
into
dec
jmp
pop
scas
test
lds
fildll
loope
popl
sub
mulb
ds
jg
pushf
add
and
sub
cltd
fcompl
jbe
or
pop
cmp
lea
adc
add
xor
dec
pop
xchg
sub
ficoms
xlat
mov
and
pushf
push
mov
xor
pop
pop
mulb
call
lock
adc
inc
sbb
sbb
jae
shlb
dec
mov
push
scas
test
mov
inc
xchg
pop
cmp
pop
insb
adc
jmp
cmpsl
jecxz
dec
adc
fwait
ds
pop
xchg
lods
pop
jecxz
cmp
mov
adc
movsb
and
xchg
ret
roll
pop
jbe
call
cmp
subb
jae
pop
dec
mov
push
pop
pop
gs
jg
mov
mov
stc
cmc
icebp
out
pop
daa
adc
dec
shlb
pop
faddl
sub
decb
xchg
subb
xchg
lcall
sub
or
dec
repz
lahf
ror
imul
testl
bound
jge
clc
pop
inc
sub
push
cmpsl
mov
xchg
idivl
out
adc
fnstsw
cmp
data16
and
test
icebp
sbb
or
out
and
mov
inc
add
sbb
or
call
xor
mov
dec
lahf
sub
fcoms
out
ss
add
lock
push
lds
loope
or
rcrl
popa
enter
inc
sub
mov
jb
ror
scas
or
or
mov
and
sub
and
outsb
mov
pop
cmpsb
cmp
orb
testb
mov
and
fidivs
push
je
fcoml
insl
inc
enter
jmp
jno
fcmovbe
dec
mov
xlat
repz
test
fisubs
pop
pop
sbb
dec
or
jo
dec
jmp
mov
das
movsb
popf
fwait
or
es
pop
fldl
outsb
mov
jmp
fistpl
sub
sub
ret
jnp
adc
xor
push
inc
pop
in
push
fdivs
xchg
ss
addr16
test
into
push
cmp
jne
inc
push
mov
mov
add
xchg
adc
or
rol
cltd
xchg
adc
mov
imul
pushf
fisttps
mov
cmpsb
loope
adc
and
pop
fidivs
popa
or
adc
movsl
jge
or
outsb
pop
sbb
inc
inc
mov
mov
sti
fnstcw
sbb
inc
loope
fs
daa
lea
stos
mov
dec
add
rolb
adc
inc
stc
or
dec
mov
jns
lea
jnp
inc
mov
xchg
mov
int3
shlb
lods
dec
stos
pop
stos
les
mov
in
jno
and
fists
mov
push
and
xor
add
int3
jne
hlt
adc
inc
add
push
lea
sub
cmpb
push
test
gs
cmc
daa
cltd
cwtl
xchg
mov
push
sub
in
sbb
or
xor
cwtl
or
inc
inc
sbb
cmp
pushf
mov
ret
mov
pop
imul
mov
jns
out
mov
cltd
bound
in
popa
mov
xchg
push
rcll
adc
mov
sti
jno
push
mov
mov
cltd
and
ficomps
dec
add
or
aas
or
xchg
xchg
in
in
and
mov
push
jb
test
sbb
or
test
rcr
loop
or
adc
inc
cmc
jp
test
js
dec
push
and
rolb
xor
dec
adc
mov
movsl
mov
mov
sub
in
xchg
arpl
push
repnz
inc
xchg
pop
inc
aad
jmp
inc
push
add
or
ret
aad
cmc
das
mov
jnp
dec
lahf
lahf
or
cmp
cltd
stos
xchg
adc
icebp
sbbl
mov
testl
lods
cmpsb
push
mov
test
stc
fstpt
jnp
mov
xor
shl
test
jge
xchg
sti
popl
jo
movsl
and
insb
mov
mov
pop
into
test
mov
es
push
sub
jb
push
das
shl
pop
iret
mov
push
sub
ror
les
inc
in
lds
pop
mov
aaa
inc
bound
pop
xor
pop
test
lock
repz
pop
mov
add
sbb
hlt
into
fxch
mov
cmc
inc
adc
insb
lret
dec
xchg
xor
mov
and
popf
ds
and
out
mov
loop
or
pushf
ret
inc
outsl
stc
and
jle
jbe
and
fisttps
shrl
and
push
or
adc
xor
scas
fldt
mov
mov
mov
out
rcrl
out
fsubl
adc
pusha
xchg
sbb
stos
add
bound
xor
sub
lods
adc
dec
dec
mov
sbbb
push
cmp
inc
cmpsl
das
comiss
add
jns
sub
fsts
adc
pop
cmp
clc
out
xor
aad
test
pop
scas
mov
dec
mov
add
dec
insl
fstpl
mov
mov
push
push
jo
lea
out
cmp
push
clc
jg
fnstenv
aas
loop
shlb
out
sub
out
jp
test
or
outsb
pop
test
mov
idivb
cmpsl
jbe
addb
clc
xor
ja
dec
lcall
push
jle
inc
jo
xchg
push
pop
or
or
xchg
rclb
sbb
movsb
push
icebp
divb
mov
enter
xor
adcl
dec
orl
pop
lea
xor
push
fwait
push
imul
inc
bound
inc
fdivl
push
gs
jb
xchg
test
xchg
xchg
imul
mul
imul
test
pop
xorb
psubw
cmp
out
shrb
inc
jmp
sub
in
mov
xor
test
xor
fptan
xchg
pop
jmp
sbb
movb
xchg
ss
les
popa
pop
xor
or
sti
out
lds
addb
adc
xor
sub
xor
fldl
in
cltd
lods
jo
xchg
jle
ret
jb
les
pop
ret
out
test
or
and
jne
repz
sub
out
subl
das
int3
addb
push
mov
or
rcrb
repnz
je
or
push
inc
enter
das
call
jle
out
sbb
cmp
pop
ja
and
add
fs
sub
and
mov
jno
and
pop
mov
add
jl
inc
std
gs
cwtl
xchg
pop
push
mov
imul
adc
xchg
adc
addr16
iret
idiv
sub
or
pop
lods
push
jmp
bound
data16
pop
imul
or
jae
aas
pop
fnstsw
imul
cmc
leave
pop
mov
pop
cmpsb
push
fistpll
test
xchg
lea
jbe
xor
icebp
lock
inc
pop
ror
push
jmp
gs
sub
stos
mov
imul
inc
ja
shrl
mov
ror
inc
sub
sub
fidivrs
cltd
jmp
out
and
test
shrl
mov
jb
pop
stos
and
jecxz
stos
xchg
dec
incb
pusha
or
cmpsb
jecxz
pop
inc
add
inc
dec
aaa
pop
push
xor
xchg
adc
das
insl
fs
add
xchg
cmp
in
vunpckhps
xchg
cmpsb
push
or
shlb
xlat
cmc
test
jb
or
mov
out
int3
pop
cli
jmp
in
lea
xchg
mov
mov
jge
inc
addb
mov
lahf
loopne
loop
loopne
jno
xor
mov
mov
push
lret
int3
lods
cld
adc
inc
cs
repz
test
enter
push
adc
mov
mov
decl
mov
jle
fldt
add
pop
sarb
lea
sub
jge
testb
pop
jecxz
cmp
and
mov
leave
pop
movzwl
xorb
cmp
rcl
fwait
and
jmp
clc
or
outsb
clc
xchg
push
xchg
in
sbb
rolb
mov
cmc
push
inc
pushf
dec
xchg
inc
cmp
popa
push
lcall
cmp
jnp
incl
add
je
mov
or
xor
clc
inc
push
jns
dec
dec
ds
jae
int
and
add
nop
pop
xchg
cmpsl
insl
lock
mov
dec
stos
dec
mov
loop
jle
xchg
inc
and
test
in
aam
xor
inc
jae
xor
or
in
push
scas
mov
sarl
arpl
mov
lret
sbb
aam
push
jns
in
xchg
inc
inc
push
and
pop
dec
pop
mov
aam
cmc
mov
mov
std
add
fwait
sbb
fiaddl
inc
inc
push
loopne
orl
add
inc
jno
jmp
mov
sti
outsl
pop
mov
out
jmp
outsb
popl
sbb
pop
mov
push
sub
and
mov
mov
in
out
push
sahf
addr16
mov
cld
in
or
sub
add
pushf
aas
cmp
push
fs
pcmpgtw
add
in
push
sahf
add
and
aaa
mov
scas
and
subb
xchg
lea
xchg
rorb
movsb
and
jl
inc
xchg
jne
dec
xor
xchg
adc
jb
imul
dec
mov
cmp
lock
lahf
dec
mov
sbb
imul
pop
popa
xor
out
pop
hlt
cmp
mov
out
in
jns
movsb
outsb
notl
pop
stos
inc
gs
addr16
mov
sbb
xor
pushf
mov
cld
stc
push
add
popf
adc
clc
cld
dec
fisttps
dec
and
stc
xor
sarb
repnz
jno
cmp
orl
addl
jne
xor
rcrl
xchg
add
dec
ss
loop
xor
sbb
cmp
out
jb
daa
lcall
push
enter
int3
inc
inc
pop
lea
mov
movsl
ffree
in
lods
dec
jp
mov
icebp
outsl
mov
out
pusha
cltd
loop
mov
xchg
popf
mov
ret
lret
in
mov
loop
cmpb
outsl
icebp
das
jno
cltd
hlt
loop
loopne
and
test
mov
loop
dec
push
into
sbb
shr
push
xor
insl
lock
dec
adc
cmpsb
mov
cli
jmp
imul
test
push
xchg
movsl
push
inc
repz
mov
idivl
sbb
jl
out
add
int
fdivrs
add
out
aaa
ret
inc
jmp
push
push
int3
pop
inc
fsubrp
lcall
les
std
mov
xchg
mov
pop
outsl
inc
inc
cmp
icebp
sbb
fadds
xchg
out
out
add
and
hlt
sub
and
aaa
xchg
jg
nop
mov
je
lods
lods
or
push
fcoms
addl
nop
pop
int
add
cmp
fists
divps
js
xor
push
jl
cmp
roll
int3
dec
insl
mov
jle
rolb
test
lock
lock
pop
mov
jb
in
mov
mov
movsl
cmp
adc
push
jae
cmp
dec
push
push
mov
push
sti
jl
or
xchg
sbb
out
or
sbb
xchg
fisubs
push
mov
mov
dec
xor
cli
push
movsl
jno
and
enter
dec
xchg
imul
lea
or
test
repz
sbb
mov
dec
stc
hlt
in
repnz
mov
inc
jbe
aad
and
and
scas
ficomps
mov
xlat
mov
xor
dec
test
mov
sbb
cld
mov
pop
sbb
push
add
jnp,pt
push
fcom
aas
fsubrl
jl
or
fsubl
ret
mov
and
fstp
dec
adc
pushf
mov
pop
dec
sahf
hlt
rclb
lcall
or
adc
fwait
test
divb
xchg
imul
push
adc
push
or
scas
cmpsb
shl
adc
sarl
xchg
mov
sub
fldenv
fidivrl
jecxz
std
sub
mov
mov
arpl
cmpsb
dec
popa
out
push
pop
rorb
das
in
cmp
in
repz
mov
shl
push
outsb
nop
lcall
push
and
jl
and
push
jo
cltd
and
adcl
cld
lock
loope
int3
mov
test
out
int
mov
js
test
and
push
data16
gs
push
or
push
lods
or
and
stc
adc
pop
test
lcall
or
fwait
loop
mov
das
mov
mov
pop
hlt
imul
rcll
xchg
jbe
mov
sti
fstpl
lahf
sub
and
pop
mov
push
and
sbb
jle
xlat
pop
bound
mov
mov
cmp
les
jbe
ja
mov
mov
cld
push
test
push
cmp
je
mov
dec
adc
push
cltd
dec
fs
jns
xor
jge
cmpsb
enter
lea
popa
mov
popa
mov
mov
push
dec
cmp
imull
ret
xor
dec
inc
xor
cwtl
rcrl
repz
xlat
pop
insl
ljmp
in
mov
mov
sub
clc
dec
es
push
mov
fs
pop
pop
leave
int3
fcomps
cmove
ljmp
dec
or
lret
mov
dec
sbb
repnz
xor
mov
fdivrp
pop
push
icebp
int
xlat
or
das
mov
xor
mov
lret
stos
xchg
pop
fwait
mov
adc
cwtl
and
and
dec
movsb
lds
xchg
pop
mov
fmuls
pop
mov
fcoml
int3
fwait
inc
fwait
push
adc
mov
inc
arpl
xor
xor
or
fidivrs
lret
inc
cmp
mov
hlt
ret
test
cmc
call
aas
cwtl
or
ds
jge
cmc
mov
cmc
jns
sti
sbb
push
call
fmul
or
out
xchg
add
fs
jns
jne
mov
in
cmp
ja
jns
test
ljmp
push
mov
fcmovu
test
push
jb
movsb
cmp
out
lods
or
jb
xchg
mov
mov
mov
pop
jp
sbb
xchg
std
xor
add
cmc
jb
lret
add
icebp
or
inc
sub
mov
or
jle
xlat
pop
adc
and
jge
push
and
out
pop
scas
fisttpl
lret
imul
out
sub
repz
rcrl
lcall
push
test
loop
cs
push
movsl
mov
dec
fldt
xchg
in
xchg
stos
out
inc
aas
adc
bound
cltd
dec
mov
adc
divl
inc
xchg
cmp
dec
sbb
xchg
sub
sbb
jae
push
test
xor
xchg
pop
loope
ret
sub
pop
es
pop
jecxz
and
pop
loope
cmpsl
jl
adc
sti
imul
jno
adc
mov
enter
scas
jmp
jns
into
jmp
loop
sahf
jp
fcompl
ret
sbb
jg
push
mov
lcall
lret
lret
mov
loope
mov
and
jmp
stc
leave
lods
out
lcall
and
jne
enter
inc
mov
pop
flds
or
fsub
add
lcall
mov
shrb
inc
sbb
cmpl
icebp
lret
loopne
xchg
add
push
jne
add
in
pop
clc
std
jle
clc
adc
xor
jl
repz
mov
cmpsb
out
repz
rorb
mov
or
push
jne
ret
popa
ret
movntps
popf
scas
test
xor
aaa
xor
call
jb
xor
xchg
pop
sub
iret
lds
fmul
cmpsb
sub
cmp
scas
data16
divb
js
pop
jae
xor
cmp
xor
fnstsw
jl
pop
fsubs
movl
adc
inc
pusha
jmp
jno
test
stc
adc
mov
or
push
jae
lods
or
aaa
scas
dec
jae
loop
jmp
or
fidivrl
test
xchg
into
cmp
push
pop
in
js
sbb
int3
mov
xchg
pop
ja
xchg
incl
jl
adc
fisubrs
and
scas
loope
jo
jae
push
mov
push
pop
and
sbb
in
cmpb
mov
ret
cmp
sar
ret
dec
movsb
cmp
inc
xlat
int3
mov
sub
movl
xchg
cmp
push
jnp
push
daa
into
push
jle
incl
mov
int3
in
rorl
mov
pop
pop
jns
clc
jmp
out
cld
add
out
sahf
adc
cmp
ret
notl
das
inc
or
testl
xchg
sub
test
ds
mov
adc
enter
int3
leave
cmp
and
inc
sub
jecxz
ret
cmpsb
xchg
xorb
imul
int
xchg
call
lds
mov
xlat
dec
xchg
sbb
cmp
sti
push
in
push
pop
jge
ss
jmp
fldenv
cmpsb
ss
push
jne
loopne
pop
xchg
cltd
jp
adcb
subb
ljmp
stos
stc
adc
pop
push
xor
jae
std
outsb
push
jle
imul
adcb
icebp
sub
mov
insb
pushf
mov
sub
pop
mov
mov
inc
stc
sbb
xor
sbbb
xchg
aam
push
jno
xchg
xchg
or
rcr
sub
or
stos
jno
rorl
add
mov
xchg
mov
pop
daa
in
ja
int3
xchg
call
cwtl
lret
mov
inc
imul
push
mov
enter
xchg
push
repz
mov
cs
arpl
fadds
xor
int3
ficomps
or
jb
push
pop
jp
xor
mov
mov
jnp
enter
sbb
movsl
mov
pop
mov
add
xor
cmp
inc
jno
add
loopne
cwtl
xchg
pop
sahf
fbld
mov
adc
mov
dec
adc
push
leave
shll
aad
mov
xor
mov
inc
lahf
sub
test
or
out
out
out
push
cmp
xor
pop
test
sub
sbb
mov
mov
inc
push
pop
push
decb
mov
cmpsl
test
data16
sbb
bound
call
cmp
test
bound
pop
out
mov
xor
leave
fwait
or
push
cmp
lock
xor
lret
xchg
in
stc
mov
lock
icebp
push
cmp
ljmp
pop
jne
inc
dec
lods
jecxz
jb
sbb
xchg
mov
xor
js
xchg
push
daa
outsl
mov
loopne
movsl
dec
fld
or
lods
mov
xchg
shr
mov
lahf
mov
mov
movsl
jno
cld
arpl
xchg
xchg
inc
fiaddl
jns
fwait
leave
clc
mov
mov
dec
mov
outsb
mov
addr16
adc
xchg
in
mov
cmp
dec
xchg
out
sarl
fistps
test
mov
xchg
orb
mov
lock
jle
scas
mov
cmp
ljmp
inc
mov
xchg
les
fs
test
leave
add
outsb
popa
fwait
enter
or
mov
add
add
test
sub
mov
mov
das
mov
frstor
xlat
aad
pop
repnz
jecxz
xchg
outsl
xor
push
mov
clc
push
rcl
sub
cmp
cmp
dec
xacquire
push
sbb
and
stos
fdivrl
push
push
and
test
sbb
and
mov
roll
aad
iret
dec
lcall
lahf
jae
and
mov
in
cmp
and
cmp
fldl
jecxz
test
or
or
mov
mov
sub
jmp
add
sbb
cmp
mov
out
idivb
popa
adc
cmpsb
stc
gs
je
jae
pushf
mov
push
jmp
xchg
ljmp
enter
aaa
jg
bound
jbe
push
jge
testl
mov
mov
xchg
mov
jbe
sbb
add
xchg
pop
cld
and
fwait
clc
test
add
mov
and
and
loopne
gs
and
adc
cs
adc
or
sbb
push
cmpsl
sahf
aas
lods
mov
push
rcll
inc
sub
or
scas
cmp
inc
movsb
loop
mov
xor
out
xlat
mov
repnz
outsb
in
lahf
xchg
cli
add
bound
lret
sbb
xor
sub
fwait
jge
ror
nop
sbb
mul
jb
xchg
andl
push
and
call
cmp
outsb
mov
into
ja
xorb
incb
mov
cmp
xchg
fucomi
jmp
push
ljmp
fwait
stos
jge
add
aam
mov
fsubrl
xchg
xchg
lods
or
arpl
data16
jg
js
inc
xchg
fwait
or
and
movl
cmpsl
jbe
int3
mov
jno
push
push
mov
jo
or
cmp
jmp
pusha
jge
and
notl
mov
cld
in
gs
inc
push
adcl
inc
mov
or
cmp
xchg
jne
arpl
dec
mov
push
lahf
inc
fcmovnbe
clc
cmpsl
dec
jle
cmp
adc
jne
fwait
jmp
ss
or
in
sub
loopne
js
jecxz
inc
roll
mov
cli
int3
xchg
jns
hlt
mov
and
xchg
in
mov
mov
mov
add
aad
int3
xchg
movsl
and
add
testl
outsb
mov
ret
imul
jne
orl
cwtl
rolb
mov
sbb
lds
ds
ds
mov
das
out
test
movsl
xorb
add
sbb
lcall
std
stc
movsl
sbb
inc
pop
mov
gs
jle
or
jl
frstor
fwait
cmp
push
cmp
dec
scas
mov
push
in
jbe
push
lds
mov
int3
scas
xchg
xchg
and
pop
stos
in
or
clc
hlt
xlat
and
aas
sahf
push
add
push
xchg
xchg
les
inc
sbb
pop
mov
jne
in
outsl
in
repz
aas
out
jl
push
out
jle
shrb
scas
int
jns
leave
orl
cmp
adc
faddp
pop
ret
stc
and
out
sbb
jb
and
or
nop
lahf
sub
and
std
cli
movsb
movsb
bound
mov
push
mov
mov
dec
gs
pushf
add
pop
rcl
popa
loope
outsl
cld
loopne
xor
xchg
mov
std
mov
jg
fwait
mov
mov
scas
inc
mov
cmpsb
rcrl
stos
rclb
jbe
orb
aas
int
imul
sub
cltd
popa
push
add
dec
test
jno
insb
test
push
loope
and
scas
cld
ficompl
mov
lea
dec
pusha
nop
shll
xor
xchg
pop
jb
sbb
pushf
xor
addr16
cwtl
subl
mov
popa
push
ret
rorb
sbb
ljmp
das
adc
call
mov
outsb
je
mov
xor
jo
or
mov
xchg
enter
mov
cmp
push
xchg
inc
sbb
jmp
cmp
test
cmp
les
and
stc
cs
stos
jne
xchg
mov
rorb
xchg
mov
inc
popf
push
cmp
sub
jbe
and
adc
idivl
or
pop
push
pop
mov
outsb
mov
push
push
inc
ds
cmc
js
add
clc
jo
mov
jmp
mov
cmc
enter
push
mov
mov
js
popf
fimuls
loop
inc
sbb
into
test
popa
and
xchg
sbb
sub
jmp
jns
insl
mov
adc
mov
lret
mov
sahf
xchg
test
stos
pop
je
iret
push
cmpl
movl
mov
push
mov
mov
imul
sub
aas
push
out
shrl
mov
int3
cld
rorb
orl
and
pop
int3
rcl
je
xor
pop
pop
or
fildll
sbb
ret
pop
lret
xor
xchg
fnstcw
aam
stc
cmp
call
jp
xchg
sbb
fwait
mov
mov
pop
pop
dec
sbb
pop
xchg
mov
add
out
ds
lret
fdivl
dec
dec
push
cmova
idivl
test
push
cmp
sbb
xor
and
push
xor
pop
pop
mov
pop
or
movups
lds
xchg
sbb
add
cld
cld
sahf
sti
sbb
mov
testb
shll
mov
mov
add
daa
aas
iret
adc
mov
mov
jg
jne
mov
out
popf
mov
dec
test
mov
lods
test
xor
xchg
push
adc
stos
nop
addr16
mov
rorl
add
add
push
pop
imul
fcmovne
adc
gs
lds
movsl
in
test
sub
adc
sub
adc
aas
outsl
mov
jge
mov
jge
mov
xchg
pop
andb
mov
pop
xor
out
jnp
sti
xchg
jl
xchg
inc
fisttps
jg
xor
movsb
xchg
push
fsubrl
ljmp
es
dec
sub
jmp
mov
add
stos
jne
scas
push
imul
shll
sbb
lods
mov
pop
sbb
jo
jnp
adc
insl
and
sub
jbe
sar
mov
test
fcoms
insb
inc
add
stc
mov
stos
pop
cmp
repnz
pop
outsl
das
lods
lcall
ret
outsl
mov
inc
xor
xor
mov
mov
xchg
shll
subl
out
and
out
cmpsb
rcrl
lea
cmp
lcall
mov
mov
imul
push
insb
data16
pop
cmp
and
test
xchg
dec
cli
out
std
fidivrs
cmc
push
vpaddusb
inc
mov
in
lcall
xchg
repz
adc
add
xchg
mov
xchg
mov
test
mov
dec
cmpl
pop
push
pop
jnp
call
rorl
jns
arpl
fwait
mov
jae
fisubs
popa
shlb
seta
data16
andb
inc
ss
xlat
dec
dec
mull
pop
testb
fwait
cli
aam
cmp
insb
push
test
jnp
repz
lret
dec
sub
adc
jo
popf
stos
cld
movsl
pop
ficoml
cmp
sbb
mov
test
imul
lret
mov
inc
dec
ret
jp
inc
or
imul
mov
arpl
ret
les
jecxz
xchg
mov
xor
push
xor
add
adc
aam
mov
push
out
cmp
sbb
mov
adc
movsl
cli
pop
xor
push
test
insb
pop
pop
pop
mov
jo
arpl
imul
mov
cwtl
stos
push
loopne
mov
adcl
fidivs
shl
test
ret
dec
pop
and
fwait
push
mov
fiaddl
jmp
inc
and
jg
and
xchg
js
xchg
or
movsb
or
pop
xchg
mov
xchg
jle
iret
jecxz
jnp
sub
imulb
adc
or
sbb
in
cmc
std
insb
mov
or
sub
xor
xchg
hlt
cmpsb
xor
movsl
mov
ljmp
pop
cmp
cli
popf
sbb
or
jmp
push
lcall
orl
or
mov
leave
sbb
mov
cwtl
dec
into
add
push
movsl
jge
stos
pop
insb
lods
cld
das
push
sub
test
rcl
ljmp
pop
jae
enter
xor
cld
inc
lods
test
sub
movsl
inc
pop
fstps
mov
repnz
orl
dec
pusha
or
sahf
cmp
nop
in
mov
dec
sub
mov
xchg
sub
aam
xchg
lret
jge
aad
arpl
jl
jns
adc
lret
gs
fdivrp
pop
ljmp
movsl
inc
sahf
ja
inc
popf
fs
out
dec
inc
iret
movsl
adc
insl
mov
clc
pushf
outsl
sbb
scas
insb
das
testb
sub
jp
mov
add
ds
dec
pop
push
fnstenv
adc
mov
in
cltd
dec
je
vmovsldup
test
ljmp
lahf
mov
xlat
add
les
jno
ljmp
push
sbb
call
adc
outsb
in
jnp
leave
stos
inc
mov
push
sbb
xor
mov
mov
dec
rcl
pop
dec
lods
cmpsl
scas
into
int3
xlat
fwait
xlat
jbe
je
pop
hlt
inc
lcall
pushf
fcomps
xchg
adc
cld
pop
push
popf
mov
xor
out
cmpsb
cmp
xchg
pop
fnsave
mov
pop
mov
lds
mov
cli
addr16
cmp
xor
add
cmpl
stos
mov
stos
pusha
lods
adcl
cmp
xor
rcrl
jle
ficompl
xor
into
jl
mov
mov
cmp
std
movsl
mov
add
js
mov
dec
stos
inc
rcrb
fisubrl
movb
notb
pusha
idivb
test
xchg
adc
dec
and
inc
cmpsb
in
dec
iret
adc
push
call
cmp
mov
loope
pusha
inc
xchg
jg
adc
cmp
ja
out
mov
mov
stc
leave
scas
mov
sub
pop
inc
push
mov
sbb
and
push
add
ja
jl
xor
sbb
adc
in
cmp
push
mov
cmp
mov
pop
cmp
std
adc
jle
and
push
pop
fiaddl
or
lret
ja
repz
jne
jns
xlat
mov
out
jae
dec
mov
rcrl
int3
xchg
loope
negb
insb
dec
sub
out
push
sub
mov
ss
shrb
arpl
jp
fs
roll
sub
mov
jge
gs
sbbl
cmpsb
lcall
xchg
pop
test
mov
xchg
pop
pop
into
mov
lea
js
data16
call
mov
dec
lret
or
xchg
push
or
inc
loop
outsb
cltd
dec
push
cmp
dec
sti
xchg
rcrb
pop
out
add
ret
imul
int
arpl
push
adc
rolb
cmp
and
sub
inc
mov
in
dec
dec
jle
int
push
in
mov
xchg
das
faddl
jno
pop
jl
shl
xor
loopne
mov
mov
sub
mov
cld
dec
sbb
cld
leave
aam
xchg
jne
stos
dec
cmp
in
mov
imul
mov
sub
shlb
mov
test
sbb
push
bound
xor
pop
mov
pop
adc
pop
popf
scas
sbb
xchg
push
inc
lcall
xor
mov
mov
push
mov
test
daa
push
inc
push
jo
sbb
lahf
stos
jl
xlat
insl
dec
xchg
ret
fcomi
dec
stos
subl
rcrl
mov
mov
mul
jae
data16
mov
sub
into
inc
push
mov
loop
cmc
int
sub
xchg
pop
sti
lods
or
fnsave
and
and
or
lcall
sbb
mov
aad
sub
xchg
dec
mov
mov
hlt
int3
ljmp
lcall
std
xor
pop
pop
orb
or
or
arpl
sbb
int
leave
mov
ljmp
jb
mov
add
sub
jno
std
dec
pop
icebp
cli
mov
mov
in
iret
icebp
out
cwtl
xor
int3
out
pop
jp
int
movsb
push
lds
cmp
xor
xor
arpl
test
xchg
je
in
pop
je
pop
push
mov
and
push
mov
adc
ds
arpl
lea
push
adc
into
out
aad
and
idivl
leave
push
dec
pop
mov
into
pop
cmp
dec
or
cmc
sbb
fistpll
fidivrs
xchg
inc
lea
aad
inc
out
and
fwait
pushf
mov
mov
add
jo
cmp
pop
es
and
or
ret
mov
cld
xchg
es
cmpsl
adc
rcrb
or
call
xor
out
inc
dec
shrl
testl
mov
popa
pop
pop
sbb
rcrl
pop
outsb
mov
or
push
cmp
loop
adc
popa
ret
ja
mov
or
mov
sarl
jle
incl
insb
pop
xor
push
in
mov
lock
mov
pop
shll
mov
adc
mov
lds
jb
out
repnz
or
ficomps
xor
add
insl
mov
inc
test
insl
fiadds
dec
cmpsb
cmp
xchg
lahf
xor
xchg
push
lret
stos
nop
cmpsb
pop
jns
pcmpeqd
lss
or
sub
stos
sbb
push
mov
push
mov
jnp
xchg
mov
sbb
add
jmp
movsb
jecxz
cmpsb
aas
je
mov
and
je
pop
inc
ds
nop
out
cltd
dec
xchg
test
mov
dec
add
xchg
push
xchg
xor
and
pop
pop
jne
paddd
sub
dec
movsb
setns
and
and
jnp
and
rcrl
xchg
mov
xchg
out
std
popf
sbb
sbb
mov
loope
cld
dec
jmp
popf
fstpt
mov
lock
test
lea
pop
push
push
jge
mov
dec
test
xor
mov
or
test
sub
and
inc
pop
dec
push
scas
in
cld
push
int
negl
mov
shlb
sbb
dec
sti
ljmp
lea
enter
arpl
pop
xchg
mov
sbb
arpl
or
sbb
push
add
andb
cmpsb
jecxz
mov
pop
adc
es
dec
outsl
cld
cmp
adc
shl
lahf
imul
inc
xchg
inc
enter
fs
loope
movq
xchg
inc
gs
decb
or
sbb
jb
dec
sub
bnd
pop
xor
adc
pop
je
pop
lahf
sub
dec
mov
aad
dec
xchg
stc
xor
rorl
pop
mov
add
xor
push
mov
and
sub
or
lock
jae
adc
pop
push
and
jnp
lcall
imul
push
pop
test
push
addr16
test
lret
inc
loop
cmpsb
xchg
mov
mov
inc
add
push
ss
jns
mov
dec
mov
loop
mov
aaa
sbb
push
ds
push
decl
dec
std
js
inc
and
add
and
iret
jle
inc
sub
test
xor
push
movsl
mov
mov
cltd
adc
es
aad
rcr
mov
mov
dec
push
inc
jbe
inc
or
xlat
jne
mov
imul
mov
inc
fisttps
test
pop
test
fildl
xor
ds
fnstsw
mov
add
fmul
dec
sarl
cmp
push
adc
adc
mov
mov
jo
sbb
pop
cs
filds
push
xchg
fcomp
pop
add
mov
sbb
rcrl
adc
shl
dec
dec
shlb
scas
aad
sbb
mov
out
xchg
inc
enter
mov
pop
mov
leave
shll
mov
adc
clc
and
push
xchg
rcl
lock
sbb
outsb
insl
out
pop
sub
xor
jnp
fidivl
add
xor
fstl
xor
andl
and
cli
clc
mov
repnz
jae
adc
adc
sub
mov
cmp
stos
lods
jecxz
jp
dec
fwait
push
sub
rclb
mov
sbb
aam
jecxz
out
rcrl
jbe
adc
pop
fwait
jne
jecxz
xor
xor
pushf
jbe
xchg
cwtl
popa
or
cmpsb
push
dec
dec
ret
push
shrl
out
fldcw
xchg
outsb
clc
push
dec
or
data16
mov
jns
ljmp
xchg
xchg
in
jecxz
lods
div
dec
xor
jnp
add
cmp
imul
sub
les
mov
push
inc
popaw
movsb
bnd
mov
pop
fwait
cwtl
xor
pop
arpl
addr16
mov
sbb
pop
mov
int3
jmp
aaa
cmpsl
push
push
mov
ds
sarb
ss
mov
dec
in
adcl
cs
fs
and
xchg
xchg
mov
xor
inc
mov
pushf
sub
aaa
pop
in
pushl
push
push
cmp
stos
xor
jg
jne
testl
bound
xor
ljmp
call
or
cmpsl
adc
addr16
jbe
in
jge
lods
ret
adc
scas
mov
jnp
addr16
push
add
and
cld
jo
rolb
jbe
rorl
int3
fsts
subb
cmp
test
mov
stc
mov
outsb
push
int3
popa
cmpl
jl
push
xchg
dec
lods
ret
cmpsl
lret
iret
mov
rolb
sahf
jno
xchg
loopne
inc
dec
out
sbb
and
xor
mov
dec
lock
mov
pop
jg
dec
pusha
add
mov
push
adc
xchg
out
mov
in
sbb
cmp
push
jl
mov
out
out
jo
and
sub
into
mov
mov
loopne
sar
and
push
push
icebp
mov
add
mov
shrb
out
jle
pusha
inc
subl
mov
int3
xor
leave
bswap
outsl
in
ljmp
filds
cwtl
add
jp
shrb
sarb
mov
jl
js
loope
cmp
stc
gs
cmp
ret
cmpsb
fs
adc
loopne
filds
xchg
mov
jecxz
out
fsubl
ret
out
lret
push
mov
negl
sti
shrb
mov
push
test
punpckhdq
bound
ja
dec
sbb
xor
pop
shlb
lock
data16
in
inc
imul
outsl
adc
lea
stos
jo
pushf
imul
fidivrs
js
call
das
push
and
enter
pushf
stos
mov
dec
cmc
aam
push
or
mov
sbb
lods
or
das
push
mov
sub
inc
mov
jbe
mov
dec
inc
gs
dec
fucomip
xchg
xlat
xchg
into
ss
imul
stc
mov
popa
and
fidivl
and
jp
test
push
jp
pop
inc
mov
dec
pop
xor
outsl
adc
int
jne
dec
ret
push
adc
rorb
iret
adc
int3
dec
jg
stos
cmp
pop
decl
mov
adc
add
leave
sbb
int
push
cmp
push
pushf
mov
stc
adc
cs
pop
je
lret
xor
mov
shll
xor
fistl
or
pop
ret
negl
cmp
cmpsl
sbb
inc
push
lret
jecxz
lcall
cli
adc
dec
fisubs
je
xor
inc
xchg
fnstsw
pushf
stc
mov
arpl
xchg
mov
jp
adc
test
cvtps2pd
mov
mov
pop
sti
cmp
sbb
and
adc
les
push
icebp
xor
aas
xchg
mov
stc
adc
xchg
pop
sbb
sbb
repz
iret
shrb
insb
into
popf
js
pop
cmpxchg8b
iret
or
mov
movsb
jl
rcll
imul
lret
mov
mov
inc
xchg
push
and
add
sbb
out
add
call
dec
in
mov
adc
xchg
jl
pop
jmp
push
jo
dec
aaa
test
inc
int
roll
xchg
std
push
stos
mov
mov
jnp
das
xchg
inc
repnz
mov
or
shl
out
mov
pop
stos
sub
or
loop
dec
mov
int3
jnp
stos
xchg
xor
int
jp
adc
jmp
sub
pop
or
cmp
push
push
inc
and
pop
cltd
sahf
lds
jg
mov
jbe
pop
es
aam
clc
cmpsl
sbb
das
ret
movsb
adc
dec
push
jg
sub
inc
fsubrl
jns
es
and
xor
arpl
fs
dec
imul
mov
iret
aad
xorl
add
jmp
sub
in
movsl
adc
push
cs
adc
insl
mov
ja
push
push
lds
leave
les
daa
daa
inc
jno
int
xorb
sub
pop
stc
xchg
and
add
sbb
test
in
inc
loope
ffree
mov
fistl
sub
lahf
addr16
aas
in
mov
xchg
mov
lcall
mov
xchg
cmc
stos
push
outsl
test
movsb
jg
pop
popf
cmp
ja
and
ret
faddp
cmp
or
in
push
mov
fisubs
pop
pop
out
fs
and
out
divb
jecxz
lock
or
pop
adc
jb
and
loop
xchg
das
or
adc
pushf
add
bound
test
out
dec
add
add
cmp
xor
sbb
pop
mov
insl
add
testl
mov
mov
push
adcb
inc
add
lock
aam
cld
mov
mov
jno
jbe
pushl
xor
fucomi
jg
andl
xchg
xchg
ret
sbb
sub
pop
bound
dec
sbb
in
mov
mov
dec
jle
scas
add
arpl
lods
into
dec
data16
aaa
xorb
shrb
xchg
insb
jae
sub
xchg
mov
xchg
jp,pn
jecxz
cltd
add
les
inc
cmp
icebp
jae
pop
adc
mov
mov
cmpsb
stos
cmp
dec
mov
insb
mov
mov
jmp
mov
and
add
loop
inc
scas
cwtl
and
or
hlt
lds
ret
call
ret
jae
mov
xor
mov
daa
cld
fwait
mov
adc
cmc
pop
hlt
sbb
push
jg
inc
cmp
add
icebp
cmc
fwait
pop
rcl
int3
sub
sub
out
int3
ror
add
sub
stos
mov
inc
xchg
jo
add
js
je
in
dec
les
jmp
sti
or
inc
fisubrl
mov
mov
dec
gs
jle,pt
push
cmpsb
int
and
or
mov
lea
pop
inc
mov
sub
divl
xchg
insl
mov
addb
loop
push
adc
lea
lret
adc
rcrb
mov
mov
cmpsl
dec
cwtl
rcll
inc
dec
lds
dec
mov
call
mov
icebp
push
xchg
lahf
cmpsl
mov
sub
test
arpl
nop
sub
cmc
outsl
ret
pop
fistpll
sahf
xchg
std
dec
rcrb
pop
fstpt
pop
mov
test
mov
xor
adc
rcl
int
push
and
xchg
stc
cmp
out
cld
imul
sahf
push
outsb
lods
adc
repnz
addr16
in
dec
mov
xor
das
mov
mov
push
int
repnz
lret
jbe
xor
lret
jmp
or
js
jmp
jle
push
add
gs
jo
icebp
jno
jnp
add
fistps
sti
xchg
jmp
mov
pop
cwtl
negl
push
add
inc
fildl
cmp
mov
xchg
shrb
imul
clc
lea
test
lock
push
dec
push
sbb
test
sub
xor
push
xchg
lahf
cmp
and
leave
arpl
mov
hlt
cmc
mov
adc
sbb
and
xchg
testb
cmp
mov
sti
pop
leave
aaa
or
push
cmpsl
xchg
push
mov
nop
loop
sbb
imul
aaa
fs
enter
into
aas
push
addr16
xorl
pop
mov
popa
adc
jecxz
idiv
pop
sahf
pop
mov
pop
js
mov
test
jmp
adc
xchg
mov
notb
and
mov
mov
test
mov
xor
enter
mov
xchg
sbb
in
lret
sub
ss
imul
int3
push
lcall
int3
out
mov
sahf
pushf
orl
shlb
cmpsl
inc
sbb
loope
out
dec
dec
cmp
adc
imulb
lods
inc
cld
lds
pusha
lcall
xchg
sbb
add
cmp
icebp
pop
clc
or
fidivs
jg
in
mov
jae
mov
fwait
dec
or
pop
js
shlb
inc
mov
sub
add
xchg
or
dec
mov
mov
adc
sbb
cltd
dec
repz
in
mov
pop
jmp
mov
cmpsl
push
mov
lahf
mov
pop
ds
sar
psraw
and
stos
insl
xor
dec
xchg
pop
add
jecxz
or
add
mov
mov
mov
ret
mov
pushf
mov
sbb
stos
mov
jae
lods
mov
push
out
pop
sbb
rclb
jns
nop
inc
popa
add
push
cwtl
leave
int
mov
out
xor
outsb
pop
or
rcl
test
pushl
arpl
idivb
xorb
and
mov
sub
enter
ja
mov
mov
sbb
or
or
ja
and
dec
sub
jp
data16
add
pmulhw
int3
jp
scas
aam
xor
imulb
mov
cmp
daa
pop
jmp
in
adc
shll
int
out
lock
push
cmp
shll
mulb
js
out
dec
jnp
sbb
inc
sahf
jmp
sbb
xchg
adc
sub
mov
pop
mov
mov
pop
out
scas
pop
test
inc
int
pop
decb
fstp
js
xchg
inc
inc
addl
cmp
in
lods
jnp
frstor
pop
arpl
jae
aaa
push
fs
mov
fmul
sahf
mov
push
or
imul
dec
push
ret
fs
or
ja
xor
fldenv
mov
test
shll
pop
pusha
cmp
clc
fidivl
xor
fstpt
lcall
xorl
outsl
shl
add
or
inc
cmp
sti
bound
sarl
add
loop
shl
lret
mov
int
mov
andl
push
adc
notl
imul
stos
push
mov
lods
repnz
dec
mov
sbb
mov
jne
cmp
push
shll
clc
call
test
cwtl
xor
and
pop
rcrl
pop
fisubl
pushf
out
je
out
or
pop
call
rcrl
and
movsb
or
aas
shrb
shrl
fisubs
loop
fdivrs
xchg
aaa
mov
fst
xchg
jnp
dec
cmp
loop
loop
ret
cs
add
jmp
mov
xchg
cmp
push
xor
loopne
ret
jb
shrb
jp
sub
cwtl
imul
cmp
pop
mov
mov
repnz
or
jg
sbb
in
mov
stos
push
adcb
jno
pushf
testl
mov
mov
stos
xchg
fwait
pop
hlt
sarl
outsb
add
add
arpl
dec
sub
mov
dec
cmpsl
rorl
imul
push
mov
lret
ret
mov
mov
push
mov
jnp
xchg
repz
dec
mov
jae
xor
mov
lcall
ret
sarl
xor
sub
mov
test
xchg
xchg
bound
pop
add
pop
ret
push
jne
adc
mov
and
pushf
test
add
rcrb
cltd
rcr
ljmp
test
cmpsl
dec
lahf
ret
pushf
push
out
pushl
and
rorl
mov
xchg
push
jo
outsb
fs
ja
mov
je
jg
xchg
jl
sbb
adc
dec
lea
mov
jae
push
add
ret
and
scas
push
jb
mov
loopne
xchg
mov
loope
lods
push
loop
mov
pop
int3
sbb
sahf
pop
xor
mov
mov
cmp
jo
fistps
lret
adc
sub
std
xchg
inc
loopne
xchg
shl
jo
or
jg
hlt
fcomps
stc
orb
cmp
dec
fimull
jo
test
pop
out
dec
sbb
sbb
sub
adc
adc
sti
scas
push
xchg
mov
pop
dec
xchg
adc
neg
mov
test
add
stos
ja
imul
jg
leave
arpl
pop
pop
nop
jnp
jecxz
dec
call
dec
outsl
jae
pop
mov
xchg
xchg
inc
xor
and
xorb
rorb
adc
es
pop
ret
fmuls
or
and
jge
mov
mov
rorb
dec
fstps
jae
inc
xchg
iret
jb
mov
ret
pop
mov
dec
mov
lods
test
and
push
fbstp
xor
push
push
mov
gs
mov
mov
mov
sbb
loopne
jb
pop
lds
cld
pop
insb
xlat
dec
loopne
sbb
cmpsl
rcrl
imul
jns
pushf
fildll
lock
dec
pop
imul
stc
ja
pop
cltd
sub
in
jmp
jle
pop
jp
add
pop
lahf
gs
call
inc
sti
out
pop
dec
cli
inc
or
rcrl
pop
cli
inc
add
adc
divl
push
fcomip
popf
dec
push
je
mov
sahf
or
lods
xchg
add
mov
ds
push
fidivrs
jo,pt
inc
push
lock
je
inc
lds
into
fsts
movsl
cmp
and
sti
ffree
mov
jge
dec
bound
sbb
stc
test
dec
int
mov
sub
data16
std
sbb
aam
ret
add
inc
out
lea
pusha
mov
cmp
clc
sbb
cmp
or
jle
fistl
nop
repnz
jno
movsl
mov
xor
xorb
int
pop
mov
int3
test
aam
xor
cli
mov
outsl
add
stc
bnd
fnstsw
or
decb
sub
mov
cmp
rorb
adc
out
cmp
xor
mov
xchg
ja,pn
mov
push
arpl
rorl
push
pop
aad
lea
orb
mov
stc
xchg
fstpt
arpl
es
in
inc
inc
mov
out
ljmp
or
dec
or
lds
shlb
hlt
dec
dec
icebp
jne
fmuls
jmp
mov
xchg
add
mov
xchg
lds
cmp
lock
fidivl
and
cmc
movsl
mov
mov
mov
leave
in
stos
push
loop
shll
inc
inc
cltd
adc
or
scas
shr
adc
leave
mov
dec
pop
adc
jo
lods
aam
test
xor
xchg
mov
jns
leave
stc
loop
dec
xchg
out
ficompl
ficomps
or
adc
rcll
ljmp
scas
adc
mov
dec
jns
pop
mov
rorb
pusha
out
push
inc
jns
add
or
jmp
mov
xchg
mov
cli
addr16
gs
add
add
xchg
bound
lret
and
mov
cmc
inc
aam
pop
fwait
pushf
lret
pop
addr16
pushf
shlb
movsb
push
pusha
add
dec
je
mov
sub
ficoms
jns
ds
cmc
push
cld
and
mov
jo
inc
mov
ret
xor
iret
hlt
jnp
mov
pop
sub
cs
lods
inc
fwait
lahf
lahf
push
sub
mov
imul
cmp
xor
mov
imul
fists
int3
and
test
icebp
test
jb
lcall
inc
inc
xchg
xchg
pop
mov
sbb
mov
or
mov
or
push
inc
xlat
and
mov
imul
test
movsb
cs
std
in
mov
pop
sbb
mov
repz
pop
sub
push
xor
shr
dec
push
std
in
cwtl
push
fcomi
mov
loope
push
jmp
mov
jae
ljmp
hlt
mov
jnp
mov
ret
mov
mov
out
gs
xlat
sub
sbb
fistps
insl
ss
inc
stos
orl
into
xor
adc
pop
fsubs
imul
imull
lret
mov
in
das
cmp
push
xor
je
mov
insl
cmp
sub
bound
lods
sbb
insl
sbb
pop
fidivl
testl
xchg
mov
or
push
pop
push
jecxz
aad
xchg
pusha
jne
outsl
hlt
ret
les
pop
pop
sbb
outsl
mov
push
pushl
sbb
mov
fisubrl
mov
fsubrp
fadds
xchg
adc
dec
push
repz
ljmp
mov
ret
xchg
sbb
lea
out
ds
repnz
sub
add
fstpt
imul
inc
ss
insl
leave
mov
lods
cmpsl
int3
xor
pop
xorl
pop
mov
mov
sub
pop
outsb
dec
sub
lahf
fadd
fmul
mov
fxch
mov
fadds
xlat
or
sbb
jb
leave
xor
int
cs
cmp
dec
repz
sbb
clc
pop
mov
cwtl
es
std
movsl
push
loopne
pushl
mov
outsl
cwtl
subb
push
push
push
imul
pop
nop
push
pop
or
add
loop
pop
jmp
mov
inc
mov
and
stc
out
dec
mov
dec
out
inc
and
or
push
lahf
cmp
xor
test
add
fldenv
cmp
push
adc
call
mov
movsl
mov
xlat
sub
mov
dec
xchg
andl
xchg
mov
adc
out
mov
mov
es
das
pop
mov
rorb
movsb
jl
mov
dec
adc
dec
cmpsl
shll
jmp
xor
loope
push
mov
jnp
sub
fs
push
sub
out
outsb
jge
nop
cmp
cmp
sub
jg
xor
xor
dec
xor
stos
sbb
in
inc
xchg
mov
insl
stos
or
dec
aad
fisubrl
or
shll
sahf
xchg
inc
adc
clc
cmpsb
outsl
xor
or
ret
fdivrs
bnd
dec
loop
sbbb
or
fmuls
mov
ret
mov
xchg
in
addr16
outsb
les
sbb
sbb
test
ljmp
mov
insb
sub
add
outsl
mov
dec
sbb
mov
outsl
sbb
loope
push
pop
xchg
aaa
sbb
dec
push
or
test
jnp
push
dec
cmp
mov
xor
mov
xchg
call
push
jne
mov
xor
popf
bswap
rorb
xlat
mov
lods
sub
outsl
inc
jle
frstor
mov
inc
test
gs
mov
stc
ds
xlat
sub
shrl
test
lret
jo
enter
outsb
pop
inc
lea
daa
jbe
push
pcmpgtw
into
pushf
int3
pop
aad
in
jae
push
mov
xor
mov
enter
or
jp
jb
outsb
mov
pop
push
push
inc
push
jl
bound
sbb
cmp
xor
outsl
mov
push
cli
jb
andl
test
fists
adc
int
xor
dec
sub
cmpsl
xor
xor
std
clc
in
loop
iret
xor
sub
sbb
lods
cmp
inc
mov
cmp
or
lods
mov
sbb
push
pop
add
xor
arpl
cmp
jmp
and
mov
push
push
js
fsubs
pushl
dec
mov
lahf
push
sub
imul
push
test
lret
sar
mov
mov
bound
xchg
adc
push
or
cmpsb
inc
pop
cmp
stc
cwtl
dec
imul
std
mov
jns
dec
mov
sbb
je
inc
cmp
std
lret
mov
or
inc
add
loop
ret
cmp
scas
mov
xor
lds
ljmp
movsl
or
test
out
jb
jne
ss
je
cmpsl
xchg
or
stos
lret
stos
ret
or
xchg
ret
popf
cli
rorl
jmp
pop
pop
mov
sbb
or
popf
sub
lods
add
pushf
nop
mov
dec
addb
repnz
in
daa
mov
and
mov
sub
stos
add
dec
mov
fidivrs
aaa
jne
cs
stos
adc
or
add
xchg
xlat
jns
sub
hlt
cmpsb
cmp
imul
femms
cmp
aam
cmp
addr16
add
dec
dec
pushf
mov
mov
test
push
jl
jb
sarb
or
mov
pop
movsl
loope
pop
repz
xchg
out
jno
sub
sbb
dec
and
jo
and
lret
inc
out
sti
test
inc
jnp
inc
rclb
dec
in
movsb
mov
and
sub
mov
adc
push
dec
hlt
ljmp
enter
jne
ret
dec
xor
xchg
xlat
pop
addr16
mov
mov
pop
adc
xchg
push
mov
dec
lods
ret
xchg
pop
adc
push
inc
jnp
cld
xor
xchg
mov
js
xchg
hlt
sti
xchg
dec
and
mov
dec
inc
in
mov
sub
pop
jns
shrb
mov
mov
jl
add
ret
pushl
add
mov
jmp
lahf
pop
mov
lret
push
fwait
push
out
mov
and
in
subb
lcall
int
aad
mov
cmp
mov
popf
push
fcomps
insl
dec
xor
shrd
or
paddsw
and
je
fnstenv
sbb
sub
jge
addr16
ret
dec
test
jle
aad
cmp
std
push
aaa
dec
adc
lcall
xchg
jns
inc
dec
inc
in
mov
jg
add
or
sub
cmp
ljmp
ljmp
addr16
add
into
imul
fisubrs
es
jno
adcl
pop
shlb
insl
xchg
in
add
inc
pop
shll
adc
jae
cmp
inc
add
les
sub
push
popa
mov
iret
dec
insb
adc
pop
dec
lret
mov
mov
jbe
pop
outsb
mov
aaa
addr16
or
sbbb
jb
xor
in
out
popf
or
les
popf
popa
inc
rcll
lods
pop
mov
test
jl
addr16
loop
sub
sub
sub
adc
movsl
nop
pcmpeqb
pusha
arpl
push
jo
and
mov
cmp
aaa
dec
xchg
addb
in
iret
call
aad
ret
sbbl
insb
push
movsl
jg,pn
je
dec
fidivl
int
add
jae
ret
sub
inc
je
mov
testl
inc
stc
nop
mov
lcall
outsb
inc
ljmp
mov
xor
fsubs
repnz
jle
test
push
das
pop
xor
repz
sbb
jnp
sub
mov
insb
cmpl
repz
jns
adc
ficoms
int
inc
mov
cmpsb
add
lret
push
xor
daa
fidivl
push
dec
repnz
shll
out
jg
lods
rorl
mov
sbb
arpl
es
jns
cmp
add
add
pop
or
cmpsb
js
push
movsb
push
insb
pop
int3
fwait
xchg
push
stc
mov
mov
mov
pop
mov
loop
mov
test
xor
mov
pop
and
outsl
cmp
ret
mov
jl
inc
push
jg
pop
xor
jg
enter
and
pop
ljmp
inc
lret
inc
test
ret
pusha
cmpsb
jne
push
dec
xchg
dec
aad
mov
push
notl
mov
sbb
cmpsb
lds
movl
outsb
fnsave
aaa
ds
push
ficompl
cltd
pop
scas
inc
stos
dec
iret
cwtl
push
bound
int3
xchg
add
fs
or
loope
mov
sbb
subl
or
rclb
stc
xor
and
repz
ds
xchg
fcoml
sbb
jb
out
and
mov
repz
or
lods
mov
xchg
cs
enter
clc
jns
imul
cmp
imul
cs
inc
int3
xor
pop
movsl
pop
shl
ljmp
insb
add
adc
mov
shl
das
enter
mov
push
stos
sbb
inc
mov
faddl
es
and
jge
aaa
jp
pop
aaa
xor
out
orl
es
pop
or
mov
lret
inc
imul
rcrb
sbb
jbe
test
fistpl
clc
push
loop
test
gs
imull
xchg
daa
jae
mov
mov
sub
data16
insb
dec
add
call
shll
jmp
mov
jno
jmp
dec
mov
push
ljmp
pop
test
inc
or
aaa
jnp
roll
cltd
mov
xor
jp
sbb
decb
add
xor
cmp
cmc
imul
or
sub
inc
xor
loopne
mov
xor
inc
mov
sbb
loopne
cs
ret
cld
cmp
clc
mov
inc
fiadds
test
std
mov
out
xchg
enter
xor
jle
mov
mov
lds
stc
out
jge
inc
dec
and
xor
icebp
mov
out
mov
sub
add
cltd
nop
data16
cmp
pop
lea
repz
sbb
ljmp
xchg
fbstp
int3
mov
add
adc
inc
mov
push
pop
lods
cmpsb
sbb
inc
pop
in
xor
xor
lds
imul
sti
mov
mov
addr16
lods
clc
int3
mov
or
lock
test
lock
jecxz
das
sub
inc
or
mov
loop
xchg
sub
and
dec
sub
lock
push
mov
into
loopne
jmp
jle
xchg
mov
sbb
push
lcall
movsb
xchg
stos
xchg
inc
jne
xor
dec
push
inc
loope
lret
xor
outsb
repnz
test
stc
inc
testl
cmp
dec
push
or
into
call
imul
jge
dec
iret
outsl
cmpb
les
out
cwtl
sbb
mov
mov
imul
fs
pop
int3
fbstp
mov
push
je
es
pop
movsl
and
cmc
xchg
jmp
inc
xor
push
mov
mov
or
pop
out
pop
sti
jp
push
xchg
mov
addb
cmp
mov
or
enter
pushf
cld
icebp
push
xchg
inc
testb
pushf
movl
icebp
les
add
sub
cmp
dec
mov
bswap
pop
xor
xchg
pusha
add
iret
addr16
incb
add
xchg
mov
jle
and
rorl
mov
add
push
xchg
push
sbb
jg
jne
xor
out
xor
nop
xlat
cmp
into
dec
je
cmp
enter
and
stos
add
xchg
or
fisubl
jns
cmpsb
cmp
jno
xor
mov
and
ljmp
cld
and
mov
inc
pop
add
leave
outsl
nop
mov
enter
loopne
addl
dec
or
jmp
outsb
and
adcb
leave
adc
addb
adc
mov
jle
orb
loop
xchg
out
lea
addr16
movsl
lds
jecxz
enter
sub
fadds
push
aaa
jb
inc
das
lods
std
inc
dec
inc
xchg
pop
sub
inc
sbb
das
jp
int
add
pop
cmp
adc
cmp
mov
jmp
ljmp
nop
stos
xor
movsl
pusha
out
jnp
stos
insb
mov
arpl
popf
cmp
cmp
cmp
xchg
frstor
sub
outsl
push
imul
int3
es
mov
leave
sub
xor
jne
or
adc
shrb
jle
fmul
mov
insb
stos
mov
push
iret
dec
xchg
pop
inc
pop
int3
inc
popf
sti
add
jns
ds
popa
xchg
fs
mov
mov
aad
lret
push
fmulp
sar
mov
cli
stc
sbb
cmp
sarl
sbb
inc
and
mov
jae
pop
jne
adc
sbb
popf
add
xchg
ret
mov
jnp
ljmp
sbb
dec
mov
aas
test
jae
or
rclb
lret
sub
or
cmp
fdiv
sub
repnz
mov
fisubrs
cmp
pop
imulb
mov
xor
push
xlat
pop
cmpsb
jo
sahf
movsl
push
or
and
fdivrs
adc
lds
aas
push
shlb
mov
adc
pop
mov
fcomip
sub
and
or
xor
push
add
and
inc
pop
scas
mov
outsl
xorb
add
cwtl
push
mov
imul
push
out
xor
movsb
adcl
xchg
mov
sub
cs
movsl
addr16
mov
mov
mulb
mov
cmp
cmp
arpl
cs
outsb
enter
mov
mov
in
mov
dec
aam
mov
stc
enter
or
cld
mov
push
mov
loope
mov
jo
mov
xchg
push
mov
mov
xchg
int
mov
aaa
cmp
addr16
inc
roll
movsl
aas
adc
add
out
xor
popa
loope
sahf
inc
cmc
cli
mov
shll
imul
push
xchg
pop
cwtl
out
inc
adc
jecxz
mov
add
aad
test
lret
push
test
sub
or
fnstcw
mov
iret
mov
inc
cli
pop
mov
ret
frstor
jbe
mov
push
mov
cmc
xor
dec
je
sbb
in
sub
pop
mov
imul
aam
push
sahf
jge
or
or
pop
mov
stos
clc
xlat
xlat
push
xlat
or
mov
out
inc
dec
shlb
inc
jns
fsubrp
sbb
mov
xchg
add
bound
aad
stos
fistpll
int
int3
or
jg
sbb
lds
sbb
add
mov
mov
arpl
fsubs
insl
ja
push
jecxz
cmp
lret
test
movsl
mov
aad
aad
lea
nop
mov
pop
xor
dec
xor
mov
sub
and
fistl
imul
cmp
jmp
jne
movsb
movsl
ret
sbb
sub
shl
leave
les
mov
daa
pop
push
js
call
mov
mov
sub
cwtl
lahf
imul
lds
or
clc
xchg
shrl
rcrb
xchg
and
pusha
sbb
mov
inc
pop
pop
pop
pop
mulb
in
xchg
iret
xchg
sbb
xchg
xor
pop
add
jmp
inc
addr16
leave
mov
inc
or
andl
mov
cmpsl
mov
mov
xor
fdivl
incb
test
and
scas
push
mov
inc
rcr
push
movl
mov
pop
push
cmp
shll
dec
mov
repnz
in
fildll
or
loope
dec
ficoml
loop
sti
insl
pop
es
xor
mov
push
xchg
shlb
lret
fisubrl
push
mov
push
adcb
adc
pop
inc
mov
add
insb
mov
ljmp
cmpsb
adc
scas
movsl
or
fwait
cmp
loop
push
fmul
xor
jge
and
stos
ljmp
adc
adc
sbb
ss
fldcw
loopne
cmp
in
loopne
repnz
pop
pop
test
pop
test
pop
mov
push
in
sbb
out
mov
dec
jp
or
xchg
xor
ss
movsl
jecxz
in
cmpsl
enter
fisttpll
and
subb
jno
aas
mov
clc
mov
rol
sbb
mov
jp
push
mov
shr
icebp
movsb
sbb
stos
xorb
push
sbb
mov
repz
push
sahf
or
mov
jmp
fimull
cmp
adc
dec
adc
add
aaa
push
mov
icebp
xchg
cld
mov
stos
out
sbb
scas
cmp
and
fnstsw
push
ret
jp
fucomip
dec
dec
add
mov
xor
test
push
add
mov
in
das
mov
ds
fsts
xchg
cmp
aaa
ror
data16
js
sbb
ja
mov
xor
pop
stos
sbb
or
adc
mov
jb
or
test
rolb
jg
push
jae
fstps
gs
js
mov
jae
inc
sub
pusha
mov
inc
repnz
bound
mov
fisubs
push
mov
rcl
jno
addr16
enter
add
dec
ret
mov
das
pop
pop
jl
mov
xadd
xor
jb
pop
mov
lret
aas
jne
ret
ja
sub
mov
test
inc
xchg
int
int3
jg
lods
push
push
push
notl
pop
stc
enter
ds
sarb
mov
stos
fcmovb
rcl
lods
lods
jno
jne
add
cwtl
jns
rcrl
pushf
mov
std
mov
push
ret
dec
and
call
lahf
pop
jmp
add
cmpl
cld
xchg
mov
and
call
push
cwtl
pop
sbb
and
cmp
cmpsw
inc
les
cmp
call
stos
ss
xchg
jb
jae
lods
jns
add
xor
pxor
int3
or
dec
test
out
sub
xchg
xchg
js
in
jnp
addr16
shll
not
jg
sub
add
js
popf
push
push
cmp
jae
lcall
out
imul
push
insl
hlt
xchg
test
das
fwait
mov
jno
ror
cltd
cmc
xchg
mov
js
mov
call
cmp
movsb
xchg
inc
stos
cmp
and
out
out
lret
mov
push
in
out
mov
xchg
sahf
push
mov
je
pop
dec
popf
add
xor
or
adc
lret
stos
xchg
inc
mov
mov
cmpsb
adc
jle
sub
mov
in
enter
add
std
imul
aaa
mov
xor
scas
xchg
sbb
shlb
cmp
push
jle
jns
push
movb
cmp
and
inc
daa
fisubs
sbb
jg
out
mov
inc
xor
scas
insl
or
sub
stc
pop
movsl
dec
aam
mov
inc
insl
test
add
sub
sbb
test
ror
sub
cmpsb
push
adc
pushf
mov
xchg
add
push
cmc
rcl
or
hlt
or
aad
repz
adc
test
test
pop
or
mov
add
cli
cmp
sti
jmp
mov
movsl
sahf
pop
mov
mov
repnz
jl
je
cmpsl
mov
movsb
adc
jp
sub
and
and
mov
push
mov
mov
mov
fisubrl
add
mov
fwait
lds
dec
pop
lcall
in
or
mov
cwtl
inc
xor
mov
jae
jecxz
lahf
pop
sub
jbe
jns
incl
jno
mov
dec
lcall
push
add
popf
pop
cmp
sbb
mov
xor
jp
in
mov
and
xor
movsl
cmpsl
mov
ret
lcall
sub
in
mov
jp
xor
push
add
loopne
push
cli
pop
aad
xchg
sbb
or
xorl
jo
pop
mov
cmp
mov
sub
xor
jns
dec
aam
outsl
mov
add
in
insl
mov
inc
adc
ret
ret
mov
sbb
inc
data16
add
pop
xchg
inc
or
pop
xchg
into
lahf
outsl
jne
iret
fisubrl
cmp
jb
mov
xchg
fisttps
xchg
mov
mov
fbld
imul
scas
test
in
sub
mov
call
sub
sub
insb
adc
data16
and
lret
cld
sub
inc
cs
and
xchg
inc
and
push
imulb
dec
int3
dec
mov
stos
sbb
rcl
loopne
ret
pop
fcomi
sbb
sbb
or
daa
inc
or
test
sub
mov
cli
and
addr16
cld
lcall
pop
aaa
jg
adc
ljmp
sti
mov
in
jmp
mov
cwtl
jg
sub
lahf
mov
adcl
mov
lea
jbe
xor
push
and
std
fwait
sub
test
subl
stc
mov
pop
loopne
sub
pop
pop
scas
mov
xor
mov
xchg
mov
sbb
inc
stos
outsb
jle
cltd
aam
mov
mov
in
xchg
mov
and
call
lret
add
rcr
cmpsl
jecxz
mov
sbb
push
cmp
ret
xor
cmc
or
xchg
pushf
sub
daa
ret
dec
cmp
loop
dec
lahf
test
idivb
jmp
ret
mov
cmpsb
xchg
add
or
insl
out
insb
fnstcw
mov
jmp
push
push
aas
xchg
out
aaa
lods
xchg
sahf
jecxz
xor
test
push
xor
pusha
jmp
add
mov
sub
mov
pop
xchg
cmp
bound
pop
or
push
mov
dec
sbb
xor
ret
rclb
shlb
out
sbb
inc
enter
jecxz
or
add
or
test
sub
sub
push
xor
lcall
cmp
in
dec
insb
arpl
aad
push
sti
fcomi
fs
dec
jne
cltd
jp
push
cmp
cmpsl
cmpsl
pcmpgtw
mov
xor
lret
cmpsl
jno
mov
dec
push
popa
out
es
push
ret
xchg
orl
pop
cmp
push
into
xchg
xchg
je
xor
mov
enter
movsb
lds
dec
loopne
inc
pop
das
arpl
xor
mov
lret
outsl
ret
xchg
dec
adcl
pop
lds
aad
push
ret
sub
xlat
mov
add
cltd
sbb
sbb
in
sti
jge
fwait
dec
aad
dec
mov
sbb
inc
mov
les
dec
push
jbe
loope
out
movsb
dec
push
ret
mov
mov
push
in
push
ljmp
loop
push
enter
cmpsb
adc
dec
ds
clc
inc
outsb
or
popf
test
sub
and
popf
or
icebp
daa
aad
jmpw
push
int3
jg
hlt
jb
outsb
stos
mov
je
and
pop
mov
sbb
getsec
lcall
or
xchg
shl
daa
shll
cmp
inc
aam
das
out
std
push
jns
sbb
jns
mov
sbb
repz
push
mov
lahf
sbb
xchg
icebp
insb
or
jle
adc
lcall
ss
popa
fadds
insl
and
inc
xor
sahf
insb
fstps
imull
dec
hlt
ja
notl
ret
int
xchg
mov
outsl
push
call
or
push
sub
pusha
push
and
scas
sahf
loop
cmc
sbb
ds
sub
call
pop
sbb
dec
xor
fstpt
jp
mov
fpatan
sbb
popa
mov
repnz
jo
jnp
out
xor
insb
xchg
mov
adc
jl
out
outsb
adcl
or
cli
test
jmp
mov
dec
push
lret
out
mov
dec
add
and
testl
and
dec
aam
dec
push
cmp
fstps
sub
mov
xchg
pop
fsts
push
loope
cmpl
mov
test
and
outsl
pop
jp
pop
jbe
fidivs
hlt
adc
pop
ja
lock
sbb
dec
mov
xor
popl
mov
aam
sar
ret
jmp
xchg
stc
imul
incb
das
shlb
mov
mul
popa
and
xchg
mov
push
push
xchg
sbb
pop
movsl
push
mov
sti
imul
push
imull
mov
and
pop
lret
cwtl
pop
sbb
inc
lret
int3
lret
fisubrl
mov
repnz
pop
orb
add
sbb
push
sbb
sub
test
shll
mov
cltd
fsubrl
fidivrl
mov
sti
clc
mov
xlat
rcrb
pop
adcl
test
lods
shrb
add
in
inc
inc
dec
out
lret
ljmp
mov
lods
outsl
sub
mov
paddb
shll
in
cmp
int
push
xchg
mov
insb
adc
lretw
jb
jge
shr
insb
sbb
movsb
out
pop
push
and
imul
dec
xor
in
cmp
jecxz
pop
jge
inc
roll
mov
cltd
cmp
jl
fmulp
cld
sti
xchg
mov
cmp
jne
in
repnz
fnstcw
hlt
addb
xor
jge
jecxz
dec
test
cmp
xor
jne
mov
cmp
fcmovu
sub
out
dec
sti
xchg
test
and
sub
imul
ficoml
lods
xchg
push
fisttps
push
ss
adc
aas
jmp
mov
arpl
jne
stos
popf
lods
mov
lds
sub
and
pusha
jle
jbe
push
jae
cmp
mov
mov
adc
lcall
rorl
test
xchg
jno
bnd
mov
ret
xchg
popa
pop
leave
pop
mov
test
adc
test
add
and
mov
push
push
movsl
sub
pop
add
sbb
mov
dec
dec
dec
andl
mov
dec
xchg
xor
mov
push
ret
test
test
fcmovb
mov
aam
sahf
cld
mov
outsb
jae
jno
std
fsub
or
sub
push
dec
xor
or
frstor
pop
jne
int3
pop
movsl
into
movsl
and
dec
add
sub
xchg
adcb
or
mov
out
fwait
add
xchg
sub
xorb
dec
fwait
repz
fsts
push
sbb
mov
or
pop
lcall
enter
inc
test
fdivrl
cmpsb
fs
mov
dec
incl
mov
scas
push
testl
fcoml
or
aam
in
scas
jno
pop
popa
pop
cmp
xor
xor
xchg
call
int
push
adc
add
and
jb
lcall
lods
pop
jp
xchg
sub
jge
push
fs
pop
movsb
push
push
xchg
mov
stos
sbb
mov
das
or
loope
loopne
je
inc
mov
lock
pop
insl
cltd
shlb
gs
sbb
rolb
in
push
mov
pop
inc
inc
js
add
mov
loopne
stos
inc
lods
fsubrl
cs
sbb
sub
inc
inc
mov
scas
andb
or
dec
xor
mov
sub
ss
cld
and
lock
or
outsl
movsb
inc
inc
scas
adcl
push
std
pushf
ds
mov
jl
push
mov
pop
xchg
inc
jecxz
cs
icebp
rcr
imul
pop
inc
cmp
and
shlb
sbb
or
fisttpll
jns
mov
lock
lahf
jle
mov
insl
pop
outsl
mov
xchg
ljmp
ljmp
adc
xlat
xor
adcl
ja
fs
jbe
mov
xor
inc
or
sub
jmp
add
andb
out
subb
pop
lock
sbb
out
roll
addr16
xchg
mov
cmp
push
int
popa
insl
loop
add
xor
jge
add
pop
pop
dec
cmp
adc
addr16
pop
sub
in
lahf
inc
mov
mov
clc
fidivrl
loope
dec
aam
sbb
notb
dec
cmpsb
push
mov
shr
jnp
push
and
inc
cld
mov
sbb
out
jge
xor
adc
inc
icebp
sbb
scas
aas
in
mov
gs
notl
lds
int3
insl
adcl
pop
add
inc
xchg
adcb
pop
out
filds
add
mov
rorb
dec
lret
sbb
call
mov
xchg
mov
bound
jns
popf
jbe
inc
pop
neg
fdivrs
test
push
mov
fs
dec
leave
fisttps
int
pop
mov
mov
push
in
mov
mov
test
pop
dec
negb
dec
outsl
mov
adc
sub
fs
stos
add
ficompl
test
movsl
aas
rcr
cmpsl
imul
and
mov
cmc
pop
mov
lock
pop
xchg
je
mov
rcrl
push
xchg
mov
ret
inc
mov
sbb
and
mov
cwtl
xchg
sub
stos
push
fs
aaa
outsl
lret
fists
cmp
add
pop
scas
adc
test
divb
inc
inc
fidivrs
mov
aas
mov
pop
cmp
je
mov
jp
in
push
cld
mov
add
ja
pop
lods
dec
mov
cltd
sbb
out
pop
insl
insb
cmc
pop
bnd
loopne
xchg
jle
sbbl
mov
test
into
lret
inc
dec
mov
adc
call
xor
fcmovb
cmp
lock
pop
add
lcall
mov
int
data16
jne
ljmp
cmp
push
out
mov
or
push
and
fbstp
mov
mov
push
inc
dec
sub
or
inc
outsb
sti
test
test
cmp
lret
ret
mov
pop
shll
sti
or
sarb
in
lcall
and
cmp
aas
add
cmpsl
aas
das
inc
adcb
in
mov
inc
mov
lcall
leave
cltd
mov
mov
sub
mov
lods
xor
testb
cmpsb
mov
test
fwait
dec
popf
jo
mov
lahf
mov
mov
repnz
xor
or
fstps
cmpsl
ss
and
dec
repz
nop
mov
jne
mov
movsl
mov
dec
adcb
hlt
shrb
repz
jp
leave
inc
shrb
in
mov
xor
jl
idivl
hlt
jbe
movsb
cmp
inc
loop
push
int
popa
roll
jae
xchg
and
pop
inc
aam
jl
inc
sbb
cwtl
dec
fnstsw
pop
bound
cwtl
xor
jbe
jne
dec
jmp
dec
aas
mov
cmc
sbb
fistpl
adc
ror
bound
xor
pslld
or
test
mov
std
ret
addr16
and
or
fsubl
adc
mov
dec
push
in
mov
push
xchg
mov
dec
les
lds
dec
into
add
fimuls
fcomps
js
mov
ja
pop
or
mov
orb
lret
push
adcl
orb
xchg
cmc
loopne
pop
jecxz
cwtl
or
js
pushf
ss
inc
mov
or
stos
or
jecxz
push
mov
scas
dec
xchg
inc
out
inc
cmp
sbb
jnp
in
mull
hlt
scas
stos
ds
inc
xor
aaa
inc
into
mov
fisubs
or
icebp
and
out
cmp
xchg
dec
ret
sti
lahf
insl
test
inc
sbb
push
ficomps
cwtl
fisubl
out
dec
sahf
iret
xlat
inc
fnstcw
push
pop
andb
clc
int
sub
fcomi
lret
cmp
cmp
call
xchg
rcr
enter
or
lds
pop
cmp
cs
jmp
cmp
rcrl
inc
divb
push
ja
cmpsl
in
add
pop
xchg
fdivrp
jl
or
push
xor
xchg
dec
cmp
mov
sub
pusha
test
xchg
stos
push
add
addr16
lock
jne
je
push
push
add
in
xchg
flds
test
sub
fidivs
xor
push
repnz
imul
adc
repnz
dec
push
push
cld
sub
inc
inc
push
pusha
and
add
sub
shld
push
leave
xchg
cmp
xchg
mov
adc
mov
in
test
push
mov
in
mov
cmp
ror
adc
or
xchg
iret
imul
imul
dec
mov
pop
clc
mov
in
bound
loope
in
test
hlt
mov
faddl
popf
sbb
add
bound
xor
popf
xor
std
outsb
cwtl
xchg
loope
ss
cmp
cmp
mov
lea
test
pop
js
pop
lock
and
outsb
pop
arpl
negb
cli
cmp
adc
dec
icebp
pop
insl
fmul
mov
pushf
cwtl
xlat
jbe
js
lock
mov
xor
mov
fwait
mov
pop
fadd
data16
push
or
lcall
push
repz
jge
xchg
enter
mov
cli
and
xchg
fcoml
outsl
mov
aaa
cmp
dec
fs
test
dec
adc
xchg
xor
cld
xlat
inc
lcall
xchg
push
cld
jg
aaa
jnp
xchg
jg
sbb
inc
mov
inc
aad
adc
xchg
sbb
mov
test
call
ja
pop
mov
push
andl
rolb
rcl
nop
repnz
enter
hlt
mov
stos
xchg
inc
and
mov
cli
adc
cmp
mov
cltd
test
rcr
pop
ljmp
cli
out
jnp
mov
sti
in
repz
imul
push
inc
or
out
pushf
mov
inc
sub
fistpll
push
and
jl
stc
mov
sbb
jo
xor
lods
jae
mov
and
pop
mov
xor
inc
rcrl
adc
or
add
xlat
xor
cmc
pop
sahf
mov
push
imul
cmpsb
stc
and
cwtl
push
neg
pop
scas
and
pop
orl
sbb
cli
xchg
roll
dec
cmp
pop
ds
cltd
lahf
ss
add
idiv
adc
pop
add
push
pop
roll
mov
mov
jae,pt
mov
stos
loope
jg
jno
and
adc
sbb
mov
jecxz
inc
and
fidivs
cld
js
ss
cli
jb
call
push
jge
xorl
jnp
call
nop
es
aam
inc
lods
push
out
push
iret
add
les
add
sub
xchg
xor
out
scas
push
imul
std
loop
cltd
or
mov
repz
or
insb
hlt
push
and
push
sbb
jb
dec
xchg
mov
les
ret
insl
sbbb
decl
pop
cmp
rcrl
cmpsl
xchg
xorb
or
adc
xor
cmc
shr
pop
lret
dec
mov
fisubrl
jle
or
jae
xchg
jb
mov
js
dec
pop
aas
cs
pop
fbld
xchg
fwait
add
mov
jle
adc
sub
fwait
pop
xchg
popa
cmp
adc
fwait
xor
aas
gs
das
out
cld
add
incl
pop
aam
arpl
pusha
add
and
or
sarb
das
les
mov
sbb
xchg
aas
out
xchg
cmp
jbe
sbb
lcall
je
cwtl
inc
add
sub
neg
push
iret
pop
frstor
mov
adc
int3
pop
test
fucomip
aaa
icebp
mov
mov
adc
adc
movsl
push
push
scas
push
ljmp
pusha
inc
mov
add
cmp
and
jne
jle
dec
pop
mov
notl
push
push
push
outsb
cltd
dec
push
push
add
mov
sub
cmpsl
and
adc
mov
fs
std
inc
scas
in
data16
add
mov
sub
push
es
jo
xchg
stos
cmc
clc
ds
es
push
dec
ret
jae
xor
adc
push
js
mov
stc
pop
cmc
adc
in
test
push
in
jmp
mov
push
mov
mov
mov
test
push
movsl
jne
dec
ficomps
dec
and
je
lahf
sub
inc
outsb
fldcw
lret
sbb
sbb
mov
fldt
xchg
dec
scas
xlat
xlat
jne
cli
rolb
int
xchg
sarl
pusha
inc
mov
into
mov
cwtl
push
jl
mov
fmul
ret
or
fmuls
sbb
fnsave
sbb
add
pop
nop
jno
or
lock
cmc
out
mov
and
scas
cmp
mov
push
jg
cltd
leave
push
or
ret
pop
out
test
mov
rcrb
ret
dec
dec
ss
mov
mov
ja
loop
aaa
mov
pop
xor
stos
movsb
es
mov
out
and
xor
sbb
cmc
mov
fstps
jmp
jp
test
mov
idivl
mov
cli
in
fistps
mov
aas
dec
mov
xor
inc
sbb
sbb
cmp
popa
xor
mov
mov
aam
sub
mov
cs
loopne
rolb
arpl
lret
decl
das
fwait
js
push
xor
xor
dec
xor
sbb
mov
fisttps
sbb
jp
int3
fnstsw
push
pop
sub
repz
dec
repz
xchg
int3
xchg
mov
test
or
sub
in
fisttpll
push
inc
fidivl
sbb
sarb
xor
dec
pushf
pushf
jmp
ret
pop
xchg
orl
les
nop
dec
shl
push
xor
or
aad
arpl
mov
shrl
cmp
adcl
pop
jne
pop
or
xchg
into
dec
stos
jl
add
roll
cmp
sub
shlb
mov
das
cmc
sbb
add
rcrl
mov
adc
push
inc
xorb
mov
dec
test
cs
or
loope
jp
fs
shll
mov
mov
es
inc
in
cmp
jecxz
bnd
jl
out
imul
and
ss
sub
xorb
xor
mov
popa
test
fdivs
es
popa
call
ds
icebp
lods
mov
popa
ljmp
adc
subb
push
push
jne
sub
cmp
in
hlt
pushf
pusha
mov
add
mov
pop
pop
flds
xchg
mov
inc
adc
jae
lahf
mov
pop
xchg
in
xor
dec
jno
cmpsb
jnp
mov
jns
lcall
cmp
xchg
ret
shrl
push
jnp
lds
mov
testb
lds
incl
shufps
cmc
icebp
mov
shll
push
push
cmp
lcall
aas
pop
mov
daa
push
sbb
flds
imul
in
dec
push
or
xlat
std
add
shl
lds
jne
outsb
add
stos
cmc
or
mov
nop
jle
xchg
add
bound
outsb
dec
mov
or
pop
inc
sbb
nop
mov
stc
pop
testl
or
inc
mov
push
cld
popf
adc
lret
push
push
arpl
lahf
pop
test
inc
mov
dec
add
jno
leave
mov
addr16
pop
ljmp
add
lcall
sahf
popf
mov
adc
pop
and
rcrb
shr
rolb
xchg
gs
pop
scas
imul
in
scas
push
sbb
loop
sub
pop
fcmovb
xor
movsb
mov
popa
push
mov
fs
mov
dec
in
mov
stos
gs
enter
shl
bound
pop
xchg
sbb
in
mov
cmc
cmp
test
xchg
jecxz
in
pop
xchg
test
or
mov
sub
jge
jae
xchg
mov
add
cltd
cmpl
xchg
popl
inc
lock
popf
xchg
aam
jb
ret
popf
mov
cmp
push
lret
lea
cmpl
add
enter
and
sub
loope
mov
mov
jbe
push
mov
sbb
mov
outsb
xchg
lcall
lret
inc
dec
cltd
or
les
mov
inc
aad
int
outsb
xchg
nop
pop
and
push
pop
mov
push
lea
xchg
sub
dec
les
push
pop
pop
mov
lea
mov
cmp
js
fcmove
imul
cmp
je
lcall
cltd
or
pusha
fists
sti
cmp
out
add
subb
aam
inc
xchg
sbb
pop
or
xchg
shrb
xor
xchg
lock
scas
call
dec
out
lahf
mov
movsb
mov
inc
lods
in
inc
cmpsl
mov
jb
or
push
je
out
dec
std
push
and
and
pop
jl
adc
or
sub
fstl
loope
xchg
jg
mov
hlt
lods
cmp
xchg
mov
cmp
pop
add
cmpsb
pop
mov
ds
lahf
sbb
das
ljmp
inc
add
jl
cmp
jae
repz
lea
cmp
inc
movsl
push
mov
or
jp
dec
cmpsb
movsb
mov
mov
push
in
sbb
rclb
out
imul
mov
mov
jnp
call
ds
lahf
cmc
sbb
mov
leave
mov
xor
dec
mov
jmp
testb
cmc
gs
shll
sub
sbb
xchg
in
sbb
pop
xor
cmp
ljmp
shr
insb
sti
aad
mov
jmp
bound
xchg
xchg
push
adc
jmp
add
sahf
icebp
cltd
out
jbe
xor
std
push
mov
int3
sbb
fwait
out
int3
pop
inc
enter
shl
neg
jmp
xchg
in
xor
cld
mov
loope
lahf
sub
rcl
or
popa
mov
xor
adc
push
ja
cmc
sbb
icebp
pop
dec
xor
pop
insb
outsb
jne
int
add
cld
pop
jbe
push
adc
xchg
pop
jmp
fs
xlat
inc
mov
sub
jne
sbb
insl
fsubl
ja
sbb
ljmp
jae
mov
out
andl
scas
xchg
mov
adc
insb
and
sbbb
inc
jge
cmp
or
shrb
inc
or
xchg
lea
fdiv
push
call
jb
fwait
pop
inc
mov
mov
sub
lods
loopne
rclb
ret
addr16
clc
stos
adc
cwtl
cmp
lock
ja
cmp
aam
mov
lods
aaa
in
imul
xor
sti
xor
lods
xchg
xchg
push
or
fldl
or
push
inc
lds
sti
adc
xor
or
xchg
jne
cwtl
inc
inc
lds
in
push
cltd
sub
popf
stos
sbbb
push
dec
je
pop
lds
stos
xchg
mov
fstpl
loopne
push
pop
out
lock
sbb
negb
loope
fstpl
jp
pop
lahf
xor
inc
iret
test
test
pop
adc
ljmp
mov
inc
fsubl
shlb
loopne
popa
cmc
push
mov
push
cmp
dec
incl
xor
fsubr
mov
xchg
mov
push
je
mov
std
sarb
js
faddl
imul
scas
xchg
sahf
push
leave
jge
sbb
dec
hlt
int
sbb
std
mov
adc
dec
lds
pop
xchg
jl
xorl
mov
fdivrl
sahf
jno
mov
mov
addb
add
push
mov
jmp
in
int
jbe
fs
out
ja
lret
adc
jne
clc
xor
std
inc
pop
jg
outsb
mov
nop
scas
push
add
sbb
and
ucomiss
pop
iret
sub
dec
pop
xchg
cmp
xchg
popa
ret
mov
repnz
xorb
mov
or
cmp
ret
outsb
jle
adc
in
add
mov
push
scas
loop
mov
lods
nop
sbb
mov
adc
movsl
dec
mov
in
cli
lock
push
inc
and
mov
cs
popf
ja
mov
and
fisubl
pop
pop
pop
mov
dec
sti
incb
xchg
rorl
xor
popw
sub
scas
inc
out
add
mov
ret
cwtl
sbbl
lea
dec
push
add
enter
clc
or
pop
aam
lret
repnz
fcomps
mov
inc
pushf
or
mov
jecxz
jno
sbb
xor
and
cli
roll
adc
and
cwtl
daa
pop
xlat
fs
es
mov
push
cmp
dec
popf
push
adc
add
pop
imul
or
mov
js
sti
movsb
mov
lock
mov
insb
aad
xor
aaa
cmp
pop
das
insl
fs
stos
sub
push
cmp
sub
popa
xor
popf
ja
xchg
jnp
inc
dec
in
ret
mulb
jmp
lahf
cmp
mov
push
repnz
jns
sahf
mov
and
arpl
clc
out
in
pop
lret
adc
iret
jge
addl
jae
sbb
cmp
dec
add
mov
and
leave
sbb
and
push
dec
pop
gs
loop
cmp
mov
push
emms
pop
lret
push
mov
out
sbb
xor
clc
jge
popf
push
sub
or
or
inc
outsb
ja
or
adc
rcll
lret
dec
push
pop
in
xchg
jle
xchg
out
adc
sub
jne
in
aam
or
lods
ficoms
push
cld
mov
add
xchg
leave
sub
push
xchg
je
insl
cmp
rcrl
fs
or
mov
sub
orl
loopne
fwait
cmp
add
sbbb
ljmp
sbb
push
addb
pop
fbstp
mov
mov
sbb
jo
add
adc
loope
aaa
cmpsl
loope
pop
push
enter
rol
pusha
addr16
cli
jge
dec
div
aas
xor
lcall
repz
lods
jmp
lahf
sub
cwtl
jns
lahf
xchg
test
lock
mov
adc
stos
icebp
jb
sbb
jno
push
data16
push
mov
test
mov
jns
push
push
test
xchg
stos
fadds
push
mov
clc
cltd
push
imull
sub
xor
pop
cmc
aam
shrl
mov
fisubrl
jmp
cld
sarb
negb
jbe
adc
adc
into
mov
pushf
mov
push
int
rolb
in
in
fsubl
or
inc
push
sub
push
fisubrs
adc
push
stos
sub
xor
mov
mov
mov
cmp
sub
mov
adcb
js
mov
or
dec
sbb
xor
xchg
unpckhps
lcall
loopne
repz
sub
jb
xor
rcr
insl
or
jmp
dec
jmp
pop
lahf
xchg
push
out
mov
and
xchg
in
stos
push
sbb
ret
daa
xlat
ror
cwtl
in
push
fisubl
pop
push
xchg
inc
inc
mov
sub
loope
xlat
pop
xchg
inc
jae
test
incl
push
ss
sub
mov
jnp
in
pop
adc
dec
enter
and
xchg
dec
ret
add
stos
jge
jno
dec
fs
int3
pop
mov
in
and
in
repnz
loop
rcll
ljmp
rol
jns
and
mov
loopne
int
adc
loope
push
scas
mov
add
pop
jecxz
jg
mov
add
pxor
lods
add
das
daa
mov
push
addr16
and
mov
mov
adc
inc
out
movb
je
jb
jb
mov
sbb
cmp
inc
xchg
dec
push
arpl
xchg
loop
sbb
outsb
icebp
jns
outsb
fs
leave
push
cmp
cmp
push
inc
mov
mov
mov
xor
mov
mov
imul
xor
cli
cmp
pop
cltd
mov
mov
imul
fs
push
test
sbb
int3
xchg
adc
mov
push
imul
xorl
popf
jecxz
mov
in
sub
popf
faddl
xor
ds
sbb
sbb
incb
xor
mov
cli
mov
out
inc
push
sysret
sub
inc
orl
xor
lahf
mov
mov
mov
lea
mov
shll
int
loopne
stos
cs
dec
ja
addr16
mov
lret
mov
xor
push
mov
inc
ficoml
fwait
out
jg
popf
xchg
sti
hlt
cmp
jmp
incl
pop
cltd
lds
leave
push
aaa
repnz
jmp
or
popa
and
and
in
les
push
ds
aad
mov
xor
cmp
xchg
ret
sar
pop
or
dec
ss
pushf
xchg
jns
push
adcb
xchg
int
xchg
movsb
enter
inc
lods
add
cmp
arpl
imul
popa
pop
cmp
clc
sbb
shlb
sub
mov
pop
sub
xchg
aaa
mov
lods
cmpsb
fstps
mov
les
aaa
mov
fldt
sbb
aas
push
or
shl
fcmovnbe
shl
adc
dec
xor
pmulhuw
sbb
lret
ss
push
pushf
mov
shr
pop
pusha
fnstcw
fyl2xp1
inc
repz
push
mov
repz
mov
or
imul
out
lret
sub
cwtl
fimuls
lret
mov
out
lods
push
dec
lock
cs
mov
and
jo
arpl
enter
mov
mov
mov
jne
movsb
xor
imul
and
clc
xchg
jo
xchg
mov
sub
xchg
dec
or
mov
hlt
mov
and
daa
stos
jbe
fiaddl
subb
pop
xorl
sti
mov
and
inc
and
pop
incl
cmpsl
inc
in
xlat
das
pop
adc
mov
clc
shlb
fists
xor
loop
sub
aaa
xchg
scas
hlt
inc
mov
in
xlat
push
or
xor
dec
out
push
js
sbb
shll
cmp
dec
call
test
sub
sub
sbb
xchg
jbe
and
and
cmp
mov
rcl
iret
xchg
sbb
jb
and
es
cwtl
pop
xor
cmp
pop
mov
xchg
push
and
pushf
lock
je
cmpb
fadd
mulb
fdivrs
add
repz
imul
pop
mov
in
jp
clc
jl
repz
sbb
xor
dec
out
dec
mov
cltd
cmp
sbb
xlat
xor
adc
or
iret
outsl
icebp
imul
adc
jns
add
das
xor
mov
in
add
dec
mov
pop
cld
cmp
push
jecxz
pop
cmp
cmp
or
adc
mov
into
xchg
scas
ret
lahf
add
lea
fdivrp
ds
add
push
cltd
aas
in
daa
dec
add
adc
push
call
sbb
or
ss
cmp
inc
jmp
mov
pop
sub
and
lret
lcall
int3
mov
outsl
cs
cmpsl
addr16
xchg
dec
lods
adc
jnp,pt
push
fcompl
pusha
in
add
mov
adc
rol
cmpsb
jp
fidivl
cmpsl
popa
or
jno
sbbl
push
pop
inc
and
in
pop
inc
ds
pop
cmpsl
mov
cmp
sahf
push
enter
inc
sbb
shrb
pop
mov
sbb
sbb
cmp
or
mov
dec
mov
adc
aad
bts
imul
mov
jbe
sti
ret
xchg
cmp
pop
pop
mov
add
mov
js
inc
mov
lods
adc
arpl
xor
pop
and
dec
addb
inc
jmp
repnz
add
add
adcb
mov
lods
or
movsl
sub
test
sub
jmp
sub
cli
mov
ss
inc
adc
popa
push
mull
lret
cmp
lock
jnp
repnz
inc
fnstcw
sub
pop
aam
jl
xor
repnz
sub
aad
jno
ret
sahf
shrb
dec
leave
or
cmp
cld
sar
inc
fcmovbe
ss
add
fcmovnb
lahf
imul
pusha
jae
bound
ja
or
cs
ljmp
sahf
int3
lahf
jge
mov
push
mov
insb
push
call
rcll
inc
add
movsb
inc
cmpsb
in
pusha
in
fcmovu
test
loopne
xchg
andl
pop
and
lret
int
lahf
cmp
jle
fstpl
arpl
mov
adc
adc
cltd
inc
jbe
fisttpll
pop
hlt
or
push
adc
das
mov
arpl
push
inc
sbb
inc
iret
cmp
jp
arpl
les
xchg
xchg
les
test
ficoms
out
fldt
jle
jmp
mov
and
jne
adc
mov
add
sbb
in
sbb
cmp
rcll
and
cs
insb
fidivrs
xor
mov
lods
and
mov
movsb
mov
daa
xchg
cmpl
lds
cmp
xor
mov
ror
jo
xor
out
xchg
lods
cli
mov
lcall
sub
mov
loop
mull
aad
cltd
jp
cs
inc
out
mov
sbb
mov
sbb
jp
jmp
mov
ja
iret
sbb
icebp
sbb
sub
xchg
loopne
sahf
cmp
clc
mov
inc
xchg
mov
mov
gs
das
loopne
xchg
jnp
pop
fucomi
xchg
popf
ficoms
inc
cmpsb
sbb
loopne
dec
ljmp
aam
cmp
mov
mov
adcl
jle
or
add
es
lods
scas
lods
sbb
decl
push
addl
push
in
sub
jb
cltd
sub
into
push
and
orb
mov
out
mov
jns
cmp
mov
pop
lcall
dec
lcall
cmp
rol
mov
imul
mov
testl
lcall
mov
mov
mov
scas
test
call
sarl
icebp
mov
inc
movsb
mov
ror
fisubrs
jecxz
xlat
jmp
inc
dec
out
sbb
xchg
out
pusha
jmp
lcall
or
fnstsw
mov
mov
fcomps
mov
mov
fs
or
add
lods
push
test
cmpsl
mov
xchg
push
lret
out
mov
jno
push
pusha
test
sbb
jg
inc
int3
adc
cmp
scas
inc
shr
jae
shrl
fsts
int
pop
movsl
stos
andb
sbb
movsb
or
insl
lds
push
arpl
push
xchg
test
icebp
ret
jns
xchg
inc
push
jbe
stos
or
stos
fisubrs
and
dec
cmp
popf
mov
xchg
push
fidivrl
rcrb
sub
inc
sub
test
fwait
add
hlt
mov
push
push
test
sub
negb
cltd
fnstenv
rorl
test
stc
jmp
mov
and
add
xchg
mov
cmp
xchg
sbb
je
into
out
cmp
data16
arpl
repnz
mov
or
add
jae
sarb
out
mov
in
add
push
rolb
sbb
push
nop
cli
add
aas
adc
aas
pop
inc
sub
inc
inc
and
mov
pop
add
pop
dec
jecxz
cs
fisttpl
scas
lcall
push
inc
inc
daa
test
rcll
mov
mov
inc
xor
fbstp
jle
int3
add
dec
sbb
and
pop
xchg
sbb
lds
jb
pop
xor
sbb
daa
ret
mov
cmpsb
xchg
movsl
pmulhw
test
add
mov
enter
fisubs
cld
adc
dec
aas
jno
aam
sbb
xchg
enter
imul
xchg
pop
add
add
test
jle
xor
pop
fnstsw
jg
aad
je
imul
xor
xchg
out
cmp
gs
insb
lret
cli
les
inc
repz
jl
jo
fwait
jecxz
dec
push
and
xlat
frstor
cmp
mov
dec
lret
mov
mov
dec
mov
cmp
and
push
jnp
push
iret
int
dec
clc
jmp
out
sub
xor
xchg
ljmp
mov
and
and
mov
add
ficomps
inc
jnp
lret
push
outsb
daa
add
jns
lahf
in
and
shrb
inc
cmp
fildl
add
mov
in
out
dec
xor
pusha
out
pop
fidivl
ss
jmp
push
flds
rclb
js
push
cltd
pop
or
jmp
xor
dec
aad
jge
mov
shlb
cmpsl
movsl
inc
hlt
orl
mov
ljmp
lea
imul
and
aas
pop
sti
mov
push
jo
jnp
arpl
testb
out
addr16
shlb
insl
jp
lcall
andb
mov
cmp
daa
repnz
jle
jb
xor
pusha
xor
xor
ds
int3
inc
push
jo
inc
divl
xlat
sbb
enter
mov
dec
lods
adc
mov
arpl
pop
insb
mulb
imul
mov
jae
mov
fs
dec
xchg
mull
mov
movsb
dec
ja
inc
movsl
and
loope
fwait
jl
lock
and
xor
add
inc
roll
mov
in
cmc
rorb
xchg
lea
addr16
nop
aad
cmp
and
stc
cmpsb
shrl
mov
xchg
xor
arpl
cli
shll
and
loopne
loope
repnz
adc
mov
jo
sbb
pop
addr16
mov
iret
adc
cmp
retw
lock
and
xchg
cmp
cwtl
jle
xchg
out
lods
mov
imul
mov
push
jle
leave
mov
cmp
jle
js
cmp
sub
or
loop
js
fistl
dec
or
hlt
adc
push
scas
or
aad
clc
jmp
out
insl
jle
test
out
inc
out
clc
sbb
pop
sbbl
test
xchg
mov
mov
jecxz
jge
jns
push
push
xlat
and
scas
in
test
lock
ja
insb
mov
mov
cmpsb
outsb
and
aaa
mov
mov
adc
jne
jno
insl
jp
cmpsb
jmp
adc
icebp
inc
or
scas
inc
les
add
sbb
inc
test
into
mov
push
sti
mov
sub
jo
push
movsb
movsb
push
sbb
mov
fst
pop
lea
aam
xor
movsl
jbe
push
mov
adc
fidivrs
xchg
adc
stos
pop
enter
repz
loopne
mov
outsb
aad
rcrl
lret
xor
shll
jbe
add
jns
dec
add
ret
push
int3
cmpsl
sbb
aaa
mov
adc
out
or
test
pop
sbb
pop
lahf
cwtl
call
pop
in
ror
pop
sbb
jl
pop
outsl
fldenv
jle
mov
test
mov
test
xchg
pop
xor
and
xor
xorl
jno
pop
mov
std
mov
dec
dec
mov
dec
or
adc
pop
push
int3
mov
dec
imul
lcall
dec
imul
cmc
pop
cmpsl
ret
test
mov
in
int3
prefetchwt1
or
or
dec
sub
pop
jns
inc
mov
xchg
push
sarl
sub
rol
push
add
sbb
mov
adc
pop
and
mov
rcrb
add
jg
js
xchg
and
push
xchg
int
fs
cmpsl
and
push
imul
xchg
jmp
push
push
jbe
jmp
sub
inc
mov
push
test
sub
rcl
outsl
dec
pop
jo
loopne
pop
cltd
sbb
outsl
pop
cmc
das
jge
addr16
xchg
lock
stos
cmp
pop
xchg
adc
test
shl
das
fwait
cwtl
or
jle
out
xchg
xchg
pop
dec
and
jg
push
data16
es
shl
mov
leave
repz
cmp
scas
cltd
cs
inc
xor
cmp
into
and
stos
rcrb
inc
xlat
sub
mov
fucomp
into
sub
inc
pop
or
mov
insl
scas
bound
pop
xchg
or
mov
mov
xchg
aaa
clc
inc
inc
and
je
jo
nop
or
xchg
push
inc
pop
cmovnp
test
adc
xchg
out
ja
inc
addr16
push
dec
mov
mov
inc
pop
imull
sbb
jo
sahf
cli
cbtw
enter
aaa
fisubrl
xor
out
in
roll
and
mov
test
mov
stos
aaa
dec
push
fcompl
gs
lret
dec
in
jge
mov
push
push
xchg
mov
outsl
or
and
aaa
jb
push
push
mov
pop
ret
frstor
adc
ret
movsl
outsb
setge
rcrl
lods
in
xchg
lret
xchg
sub
repnz
or
cmpsl
fdivp
ljmp
out
sbb
add
int3
sbb
push
mov
cmp
cmc
leave
pop
lods
popa
fimuls
sti
scas
inc
xorl
js
ss
lahf
jno
imul
pop
loopne
or
xor
jl
mov
or
in
cmp
mov
nop
lcall
mov
cli
ja
push
pusha
loop
mov
xchg
xchg
dec
sarb
mov
jo
fidivrl
aas
inc
jne
inc
int3
mov
addl
ret
out
dec
and
lahf
add
or
xchg
add
xor
sbb
decl
push
sahf
pop
pop
and
pop
inc
ljmp
adc
sub
pusha
rcl
mov
sbb
dec
lret
mov
pop
enter
nop
stos
in
mov
aam
out
mov
out
movsl
fwait
jbe
hlt
fadds
call
add
stos
dec
pop
daa
testl
mov
inc
adcb
push
push
jne
and
dec
mov
nop
lret
mov
test
xchg
popa
stc
adc
xorb
mov
les
lret
scas
cmp
xchg
cmp
ljmp
loope
xchg
out
sbb
call
adc
and
int
adc
scas
sbb
add
adc
mov
fstpl
jne
mov
jle
into
sti
cmpsl
negb
icebp
nop
jp
ljmp
popa
pop
mov
fcmovb
ss
xor
sahf
pop
ret
jge
mov
orl
sti
das
in
inc
add
mov
cmpsl
sti
sbb
sbb
roll
and
shll
pop
aas
push
pop
pop
mull
pop
out
mov
dec
jle
inc
jbe
inc
push
jne
data16
filds
outsb
mov
jecxz
xchg
sub
add
jae
cld
and
push
mov
jge
sbb
clc
aam
add
mov
mov
mov
xor
pop
pop
mov
sar
mov
cld
in
sbb
ja
xchg
orb
xchg
lahf
inc
add
pop
push
out
pop
lret
or
cmp
call
notb
add
mov
sub
outsl
cwtl
push
bound
jl
leave
mov
and
stos
mov
mov
scas
jle
fstpt
push
dec
mov
pop
adc
sub
call
adc
outsl
imulb
push
mov
arpl
outsb
xor
lahf
mov
jecxz
outsl
test
jbe
mov
cmp
shr
ljmp
cwtl
or
push
pop
lods
outsb
es
scas
push
sbb
cmp
adc
nop
pop
popf
xor
push
mov
cld
pusha
jno
fistl
jp
push
or
outsb
daa
mov
sbbl
repnz
fidivs
test
xchg
clc
stos
xchg
cmpsb
stos
shll
jmp
gs
popf
test
or
cmp
cli
jae
shr
cmp
lods
mov
jmp
es
adc
es
cltd
aad
in
sbb
sub
pushf
addl
and
jae
out
push
or
inc
push
inc
aam
mov
daa
or
jle
mov
lret
jmp
jns
and
sub
adc
sbb
cmp
xor
push
mov
lcall
sbb
push
imul
jp
out
inc
in
jp
jle
add
and
in
xchg
jns
ret
sub
and
mov
xchg
aaa
fsub
cmp
push
mov
bound
int
sbb
fistpll
add
mov
inc
mov
mov
dec
or
add
leave
cmp
xor
in
fadds
push
jle
cmp
mov
dec
inc
ss
xorb
inc
in
xchg
push
lds
push
add
xchg
push
data16
push
push
xchg
lods
pop
push
jae
cmp
push
or
add
pop
scas
cmp
push
adc
dec
xlat
fisubrl
mov
es
mov
stos
xor
jnp
jno
out
adc
lahf
call
and
jmp
not
xor
inc
mov
mov
hlt
jle
xor
push
or
xor
jge
iret
shl
adc
lcall
add
popf
cmp
fmull
jo
dec
pop
inc
and
xlat
add
in
test
rorb
xor
mov
mov
mov
lods
ret
push
xchg
and
ficoms
push
jae
test
push
js
jbe
inc
shll
shlb
jb
pop
adc
inc
cmp
mov
out
xchg
mov
jo
adc
aaa
xchg
sbb
bound
out
lods
push
je
sub
popa
test
rorl
aam
dec
das
cmpsb
sahf
mov
test
mov
fs
movsb
in
out
push
xchg
pop
ds
daa
pushf
mov
add
movsl
and
scas
inc
je
cmp
mov
imul
insl
enter
loop
cmp
and
mov
fcmovne
fcoms
leave
xlat
push
cmp
aam
xchg
dec
dec
mov
fdivrl
xor
cmp
jo
xlat
cmpsl
xchg
pusha
jbe
lods
cmp
out
sub
int
add
add
ret
push
xor
xchg
in
dec
pop
xchg
not
insl
xor
mov
stc
lods
loopne
fwait
cmp
pop
int3
aaa
popa
dec
ficoml
jns
jecxz
cmp
or
aad
xlat
lret
scas
xor
adc
aad
outsb
inc
lret
jae
cmp
sbb
mov
sahf
and
cmp
fs
das
clc
int
pop
xlat
sarb
jmp
leave
xor
sub
adc
adcb
cld
lods
jge
mov
or
rclb
in
test
pop
push
shlb
mov
orb
cli
lret
popl
scas
xor
jo
and
jae
jl
lds
jmp
xchg
mov
rorl
insl
decb
dec
sahf
mov
dec
cmp
dec
test
jl
aaa
addr16
movsb
mov
sub
or
movsl
lcall
ja
into
std
mov
sarl
cmp
sbb
stos
pushf
loop
add
les
iret
mov
sub
es
dec
xchg
loop
pop
mov
stos
or
out
pop
jmp
incl
pop
add
mov
pop
jg
ss
xchg
lods
lds
sub
call
adc
mov
stos
and
push
mov
rorl
mov
fmull
dec
and
fmuls
jecxz
add
aas
and
dec
pop
xchg
mov
adc
divl
and
aas
add
cmp
push
adc
mov
ret
shlb
gs
or
out
gs
out
inc
mov
cltd
in
mov
dec
pop
inc
xchg
imul
sub
das
mov
test
jp
daa
aas
aaa
sahf
cmp
push
orb
andb
xchg
cld
dec
sbb
into
lcall
lods
imul
fldcw
sbb
add
sti
push
xchg
dec
push
in
pop
sbb
mov
add
aam
data16
lock
jmp
push
roll
push
adc
into
mov
sahf
movsb
or
dec
subb
scas
arpl
pop
mov
xor
lcall
loop
mov
add
xchg
cld
ljmp
daa
inc
lock
add
js
mov
inc
std
mov
addb
or
sub
xchg
pop
mov
testb
int
mov
mov
or
xlat
jge
cli
add
outsl
iret
ss
inc
pop
gs
aaa
inc
mov
or
adc
jl
sub
mov
cmpsb
xchg
cmp
mov
stos
mov
xchg
lods
jbe
loopne
and
js
addr16
test
add
lea
imul
cmpsb
scas
add
pop
mov
and
movsl
popf
mov
out
xchg
jp,pn
test
out
and
push
ret
lea
push
repz
sub
pop
dec
std
add
in
cmc
bound
mov
jmp
lods
out
or
push
out
adc
arpl
imul
xchg
imul
mov
stc
xchg
aas
test
sub
sub
aas
sbb
popf
dec
dec
cmpsb
cmp
mov
mov
stos
icebp
xor
into
add
pop
mov
sub
push
std
aaa
jo
cltd
sub
sub
out
pop
lods
cmp
loopne
sbbb
pop
fisubs
inc
push
mov
loopne
enter
dec
jbe
inc
les
out
andb
out
push
mov
pop
insb
cwtl
fstps
pop
repz
cwtl
jl
sbb
movl
push
xchg
inc
mov
lods
dec
pop
arpl
adc
jo
mov
jmp
xor
fsubs
push
mov
sbb
into
fcoms
lds
pop
das
mov
test
jae
movsb
ret
fcomps
loop
xchg
shlb
adc
inc
add
dec
fmull
jp
cmc
sbb
xchg
mov
pop
leave
jge
loopne
sub
stos
mov
mov
cmp
mov
imul
ljmp
dec
cmp
inc
lock
jb
repnz
les
iret
dec
push
dec
pop
ret
ret
sbb
jo
inc
je
sbb
sahf
cmp
cmpsb
push
dec
cmp
mov
dec
push
fldl2e
xor
stos
insl
idiv
jbe
bound
xor
loope
repz
pop
adc
repnz
jbe
mov
mov
and
xor
sub
loopne
aad
and
fisttpl
loopne
sub
xchg
cmpsb
xlat
mov
mov
xchg
mov
xor
cmp
and
xor
fidivrs
ftst
mov
adc
cmc
jle
add
add
aam
in
out
push
and
daa
xchg
aad
out
pushf
sbb
scas
popaw
lcall
push
or
fsubl
pop
xor
dec
push
adc
fs
dec
jno
and
loope
shlb
push
lret
andl
leave
push
fwait
xchg
test
popa
test
push
movsb
jbe
aad
leave
xlat
lock
lea
or
xchg
cmp
sahf
hlt
scas
sbb
pop
lods
insb
fiaddl
addr16
cld
dec
add
outsl
cld
push
fdiv
mov
cmc
mov
mov
or
jecxz
popa
mov
das
pop
pop
lock
aam
cmp
je
pop
add
xor
dec
xchg
cwtl
xchg
push
inc
push
test
out
mov
mov
lock
in
cwtl
sub
and
icebp
imul
cmp
mov
push
dec
test
test
int
dec
bound
cmp
insl
loopne
pop
push
sbb
mov
fs
push
outsb
add
mov
push
je
fildll
std
inc
cmp
int3
inc
inc
setge
or
pop
mov
inc
cmp
inc
divl
xchg
dec
cmp
jl
cmp
lock
imul
cltd
jl
stos
mov
or
les
adc
lods
push
xlat
jecxz
and
movsl
mov
repz
adc
add
push
mov
repnz
je
jg
das
test
xchg
cmpsb
idivl
shl
jae
test
dec
leave
jns
push
jmp
fadds
push
ljmp
push
das
jg
nop
call
pop
les
in
xor
scas
sbb
jns
inc
inc
pop
or
mov
adcb
test
push
mov
cmp
cmp
add
and
mov
pop
leave
cmp
rorb
add
inc
mov
lds
cmp
sub
aam
repnz
xor
mov
pop
jl
inc
jno
jle
es
or
and
fdivp
cmpsb
add
in
ret
dec
sti
outsl
sti
cmp
iret
int3
and
or
inc
sbb
mov
pop
cmp
subl
idivl
rol
sti
sub
scas
dec
divps
subb
inc
sbb
loopne
das
jmp
sbb
dec
lods
cmp
ret
ss
lods
fs
push
xchg
scas
clc
push
fs
sti
mov
or
jns
adc
mov
add
test
enter
pop
xchg
dec
mov
pushl
sub
das
inc
aam
lahf
inc
dec
sbb
and
jg
or
scas
jo
bound
or
fsubrl
pop
push
and
xchg
jmp
mov
jo
jb
xlat
imul
jmp
and
outsb
dec
xchg
hlt
add
sbb
and
sti
imul
bound
ret
add
push
out
shrb
mov
loope
into
mov
xorl
dec
dec
arpl
cwtl
sub
or
cli
out
in
or
insl
or
xorb
sub
add
adc
lcall
ret
shrd
fldcw
push
push
and
add
inc
or
in
shlb
add
and
inc
fadd
shll
adc
ja
stos
cmp
jmp
mov
jle
fstps
das
mov
push
dec
fnstcw
push
mov
into
rcrl
imul
jl
inc
mov
pop
sbb
dec
repnz
je
mov
mov
dec
xchg
add
mov
ficoms
sub
sarl
and
imul
lock
push
xor
mov
out
xchg
ja
les
sbb
xchg
sub
xchg
jo
add
stc
push
movsl
jo
adc
lea
ja
mov
push
sbbl
push
sub
fnstsw
stos
test
sbb
mov
sbb
insb
rcrb
cmp
inc
xchg
cld
fistps
scas
pop
aam
push
mov
sub
or
jbe
push
fistpll
mov
inc
repnz
mov
add
cmp
mov
inc
sub
push
xlat
cwtl
fmull
pop
out
bound
aam
mov
loop
shlb
cmp
add
xchg
push
shll
repz
jb
cmp
jmp
mov
out
cmp
or
enter
jae
out
jae
push
adc
scas
push
dec
adc
xor
scas
jp
stos
adc
icebp
andb
mov
push
rcr
jmp
sub
or
clc
ret
sub
stos
adc
orl
outsb
lods
sub
pop
mov
loopne
xchg
xor
push
sbb
popa
in
js
push
jne
icebp
xchg
cmpsl
or
cmpsb
sti
jl
and
jno
rcrl
loop
int
loope
pop
aad
mov
and
data16
adc
xchg
push
xor
stos
cli
pop
dec
mov
mov
cmp
mov
fcompl
and
xlat
out
ss
pop
ret
ret
adc
pop
in
and
sub
xchg
push
push
dec
xor
repz
mov
push
adc
sub
add
enter
xchg
inc
pop
sub
das
int
inc
mov
data16
mov
and
loope
stc
cmp
pushl
inc
push
xchg
or
mov
mov
jo
pusha
mov
cmp
mov
scas
fwait
pusha
push
js
sub
pop
cmp
loope
cwtl
adc
shlb
jnp
cmpsb
and
mov
xor
out
icebp
jl
xchg
jbe
push
xor
lods
cmp
ret
cmp
stos
xor
das
movsb
outsb
and
sbb
es
inc
inc
into
sub
call
mov
pop
push
iret
jbe
enter
pusha
rolb
push
incb
xchg
adc
loop
nop
lret
scas
jp
cltd
ss
das
movsl
add
out
cltd
or
inc
or
sbbl
mov
push
insl
pop
pop
ret
jne
iret
xchg
xchg
inc
jo
and
js
dec
imul
push
nop
lret
push
rcrb
mov
imul
ficomps
cmpsb
push
lcall
daa
inc
stos
ss
mov
ror
sbb
jno
data16
popa
push
dec
mov
repnz
jp
sbb
sti
or
pushf
fucomp
outsl
jecxz
fstps
fidivs
inc
mov
int
xchg
iret
add
cmp
add
sub
leave
jns
outsl
out
fadds
or
adc
mov
cltd
aaa
lods
mov
or
pusha
cmc
aaa
xor
or
fisttpl
jb
out
adc
xor
sahf
mov
fwait
jns
push
sbb
mov
add
orb
and
mov
dec
and
pop
push
pop
cmc
dec
rcll
bound
movsb
xchg
push
les
rol
pop
push
push
pusha
mov
xchg
sbb
lods
jge
and
mov
mov
out
mov
lret
movb
and
dec
push
adc
pop
pop
mov
inc
mov
into
mov
mov
in
mov
loope
mov
aam
and
out
jb
loopne
pop
xchg
add
mov
dec
paddsb
mov
xor
idiv
or
xchg
adc
sub
cmp
xor
xchg
cld
inc
nop
or
or
and
adc
xor
jge
bsr
std
xchg
mov
adc
popa
push
rorl
sub
lcall
jmp
add
enter
loop
sbb
dec
mov
adc
outsb
mov
push
mov
mov
int
push
cmp
cmp
cmpsl
aam
repnz
call
das
adc
xchg
adc
mov
dec
xor
fdivl
cs
scas
mov
mov
movsl
xor
add
mov
movsb
push
ds
sbb
ret
hlt
push
push
and
adc
and
inc
lret
and
jae
ffreep
outsb
push
cmp
push
xchg
cmp
lahf
outsl
mov
lret
mov
ret
cwtl
add
insb
hlt
lds
jge
scas
xrelease
push
push
jge
stos
imul
pop
stc
cmc
jne
xor
lahf
sbb
imul
sbb
stos
adc
movl
lea
stos
inc
lea
lods
push
mov
mov
icebp
mov
test
add
and
mov
popf
add
lds
int3
js
repnz
pop
das
pushf
dec
inc
loope
in
and
xor
in
test
cld
mov
rcr
fstpl
xchg
das
stos
sbb
jne
or
loopne
aam
inc
adc
push
mov
xor
sub
shufps
jnp
pop
and
xor
pop
jp
inc
pop
lcall
sbb
sbb
std
push
les
sbb
cwtl
aad
xlat
pop
fdivr
out
inc
out
imul
fsubr
jp,pn
in
cmp
daa
pusha
sbb
out
pop
movsb
xor
sbb
pop
sbb
cmp
pop
lret
lea
pop
xor
leave
cmp
cltd
ret
or
add
rol
rcl
dec
and
inc
mov
lods
xor
insb
daa
mov
mov
or
push
sbb
je
stos
push
cmp
out
rcrb
or
cmpsb
in
cmp
xchg
adc
mov
into
jmp
les
jns
mov
cmpsl
mov
enter
dec
das
dec
iret
sti
fsubp
jl
mov
push
aaa
pop
fstps
sbb
daa
test
out
dec
rorl
mov
fdivp
cmp
push
cmp
push
sbb
mov
inc
push
ret
int3
stos
std
pop
rcl
aas
jg
in
clc
inc
or
sbb
xchg
out
xor
pop
scas
adc
pop
mov
inc
or
inc
pop
rol
fdivr
pop
sub
sbb
popf
stos
xchg
pop
inc
mov
or
imul
gs
inc
js
out
insb
jbe
lahf
out
adc
dec
js
shr
scas
roll
lahf
ds
push
cmp
lock
lret
push
adc
pop
neg
add
cltd
cmpsl
mov
xor
dec
mov
pusha
pushf
addr16
out
jmp
movsb
inc
fcom
jmp
cmp
hlt
out
push
out
out
or
inc
scas
lahf
outsb
push
loope
jns
or
stc
jle
scas
cld
mov
add
jne
dec
inc
lock
inc
hlt
cmc
cli
cmp
sarb
sar
sahf
add
ret
push
xor
sbb
mov
rorb
cltd
mov
xchg
push
fs
loopne
xchg
mov
fdivr
mov
aad
adcl
test
push
mov
and
and
push
loope
add
out
add
xchg
stc
xor
jecxz
dec
lock
mov
cld
sub
jae
inc
mov
dec
or
ljmp
lods
cltd
in
into
sbb
xchg
dec
dec
and
daa
cmp
dec
ljmp
add
pusha
pop
js
fisubrl
cmp
cmp
push
push
cmc
pop
pop
loope
jae
cmpsl
imul
jmp
testl
lock
inc
sub
mov
rclb
test
lahf
call
scas
lods
lea
daa
jne
mov
cwtl
cltd
xchg
or
mov
lret
in
sbb
sub
ds
adc
roll
push
xor
lahf
add
cmp
jmp
lcall
aad
stos
cld
iret
sub
std
cmp
shlb
push
shlb
ficomps
dec
xchg
leave
mov
sub
mov
fnstcw
cli
and
mov
enter
lock
add
or
mov
cld
ss
adc
hlt
scas
repz
fidivrl
pop
test
data16
mov
and
rol
mov
nop
xor
xchg
psubd
inc
ja
insb
out
outsl
push
call
call
iret
xor
push
icebp
iret
mov
jns
jmp
adc
or
pop
repz
call
sbb
push
jno
das
cmpsl
div
rcrb
pop
jnp
fildl
xor
pop
addr16
inc
mov
in
mov
xor
psraw
pusha
sti
adc
rcrl
inc
dec
sbb
aaa
mov
cmp
and
leave
daa
cmpsl
data16
mov
mov
adc
lret
test
fcoml
int
mov
jne
out
dec
in
add
pop
lods
scas
repnz
ds
popf
adc
test
mov
addr16
cli
mov
mov
push
movb
movsl
hlt
push
mov
jbe
scas
mov
xchg
aad
movl
add
dec
fcmove
jo
roll
fnstsw
lock
xor
cmp
hlt
mov
mov
test
sbb
test
popf
add
xor
jmp
add
pushf
push
lods
roll
xchg
leave
sbb
rcl
lock
lcall
shr
jmp
jl
sbb
xor
loop
stc
mov
push
ret
sub
cwtl
mov
mov
dec
pop
test
inc
test
lods
xchg
xor
xor
mov
jns
ds
out
sub
mov
mov
xorl
pushf
jns
scas
insl
or
jbe
in
test
repnz
arpl
movsb
rcll
fnstsw
cmp
xchg
mov
sub
incb
xlat
bound
aaa
sbb
add
mov
pop
ficompl
fcmovb
repz
push
mov
jbe
jnp
mov
ret
out
sti
in
cmpsl
subl
loope
dec
movsb
mov
das
aam
push
and
jmp
sub
out
dec
xchg
jge
inc
add
pop
jne
mov
js
adc
cmp
cmp
inc
js
add
out
cwtl
sbb
jmp
js
jae
clc
cmpsb
and
or
out
mov
test
pop
or
lock
push
loop
push
loope
out
dec
mov
mov
lret
and
arpl
inc
fldt
mov
shl
sbb
dec
data16
iret
mov
push
pop
nop
jo
ss
iret
aas
mov
testb
or
sbbb
testb
out
mov
lcall
shll
fisubrl
adc
push
sub
push
lods
iret
out
and
lahf
in
stc
mov
pop
lods
jle
adc
popa
imul
sbbb
iret
bound
mov
dec
mov
push
jge
cmp
jns
adcl
push
in
lods
stos
jecxz
sub
into
jbe
scas
xlat
scas
bound
lock
pop
and
pop
repnz
sahf
jno
mov
jp
jmp
pop
pop
out
mov
inc
int
rcll
jg
in
jg
push
out
push
stc
aas
aaa
negl
ja
jne
mulb
cmpl
js
mov
sbb
cmpsb
push
test
mov
mov
add
ljmp
push
fistpl
pop
movups
mov
pushf
movsb
jbe
push
xchg
push
inc
mov
pop
test
iret
das
pop
jl
push
push
mov
out
shrl
fs
popf
test
iret
sbb
jb
es
cmp
push
scas
and
imul
xchg
stos
stc
sti
sub
or
movsb
sub
xor
cli
jae
inc
or
jns
aaa
sahf
testl
pop
lcall
xchg
jecxz
mov
arpl
sub
gs
push
mov
mov
lret
xor
pminsw
or
fwait
ret
jns
in
in
int
pop
sahf
rorl
pushf
flds
shll
ss
mov
sub
loope
mov
nop
jns
mov
data16
cmpsl
fs
jo
into
xorl
fs
push
clc
xlat
into
cld
dec
add
incb
pop
sbbl
add
xchg
lods
mov
sahf
iretw
push
scas
mov
mov
add
sbb
cltd
int
cli
inc
mov
mov
scas
aad
inc
xchg
pop
out
lock
push
mov
lock
lret
into
jo
mov
sahf
jb
mov
mov
les
jmp
out
sub
sbbb
mov
jge
test
sub
sub
sub
pop
xor
add
scas
or
inc
sub
cs
out
and
mov
fstl
cmp
lret
and
es
and
sbb
repz
sti
aam
or
adc
and
mov
adc
sub
jecxz
ret
push
dec
jmp
add
out
xchg
clc
xor
lds
rorl
int
push
iret
in
cltd
inc
fisttps
cld
cmp
pop
adc
sub
adc
fwait
outsl
rorb
in
cmpsb
and
loopne
fists
test
call
mov
int3
jo
xor
test
push
xchg
jae
adc
in
cltd
nop
mov
mov
les
std
std
outsb
xor
popa
adc
and
ljmp
mov
call
int
push
mov
aas
in
adc
push
xchg
jge
sbb
rolb
scas
bound
sti
xchg
xor
xchg
ljmp
sti
sarb
adc
test
and
test
fisubrs
cmp
je
nop
sub
icebp
adc
push
fmuls
mov
cs
xchg
dec
xchg
rol
xchg
xchg
sbb
aam
jge
jle
sbb
sub
test
mov
sti
sti
clc
lods
and
aas
outsl
mov
mov
incl
cmpsb
fisubrs
rcrl
jl
inc
xchg
cmc
mov
push
pop
push
xor
test
cmp
push
xchg
daa
and
adc
adc
fwait
lock
fisubs
outsb
movb
add
and
sarl
mov
fildll
push
into
clc
xchg
pop
mov
cmpsl
rol
test
sub
xor
jge
jg
cmpl
mov
jmp
xchg
out
rclb
in
push
sub
sub
cmpsl
pop
jg
xchg
loope
mov
stc
mov
aas
mov
add
cs
push
mov
dec
mov
movsb
cwtl
mov
and
xorb
dec
in
inc
dec
out
mov
ret
cmpsb
loopne
add
sub
pop
icebp
sbbb
das
mov
rolb
or
mov
into
mov
adc
bound
ror
inc
dec
lret
sbb
add
mov
fistps
icebp
push
dec
cmovns
fisttps
xor
les
jg
shrb
inc
andl
stc
xchg
sbb
sub
aas
in
pusha
inc
lock
cltd
cmp
mov
mov
dec
dec
iret
jb,pn
loopne
ja
pop
in
jle
sahf
nop
mov
iret
cmp
insb
push
shl
pop
sti
jg
pop
fs
mov
popf
mov
cs
js
push
xchg
je
pop
adc
pxor
or
int
cmp
orb
pop
or
jne
cmp
lret
jg
jnp
arpl
int
aam
jecxz
and
mov
popf
mov
repnz
repnz
xorl
push
mov
insl
sti
jno
push
rcll
mov
mov
in
pop
icebp
mov
loope
repz
loopne
cwtl
adc
sub
lret
aaa
mov
mov
or
mov
mov
stos
das
mov
pop
test
mov
pop
iret
out
xchg
cli
popf
add
hlt
inc
xchg
mov
repz
mov
xchg
out
loop,pt
cmpb
jne
mov
rolb
imul
lahf
insl
jo
insb
push
ds
jnp
rclb
fiaddl
insl
mov
adc
fildl
mov
cmp
jle
scas
xor
in
lock
inc
jno
into
push
dec
pushf
xchg
sub
dec
inc
sahf
test
or
sarb
xchg
cmc
popf
mov
cs
sti
mov
cmpsb
inc
icebp
ret
mov
sahf
das
mov
pop
xchg
pop
mov
inc
jns
push
leave
sbb
dec
mov
loope,pn
xor
shlb
push
or
shlb
push
inc
jl
mov
push
cli
dec
mov
xchg
int3
mov
rcr
lea
and
jmp
fstpt
iret
sbb
xorb
mov
jb
inc
sbb
int
pop
arpl
mov
popf
aaa
inc
sub
aam
test
test
xor
jg
adc
mov
cmpsb
and
cmp
xchg
test
icebp
arpl
cld
cwtl
mov
mov
mov
subl
dec
mov
test
mov
test
outsl
in
add
and
fnstenv
clc
repz
lds
mov
or
loop
popf
aam
rolb
mov
pop
xor
mov
loop
dec
mov
and
not
jp
push
jnp
pop
neg
ret
imul
fs
jnp
mov
pop
les
xchg
arpl
fbstp
rol
les
mulb
cmc
cwtl
rcll
sbb
push
insb
xchg
pop
frstor
mov
adc
dec
cmpsl
inc
or
jnp
mov
ljmp
daa
pop
dec
mov
mov
dec
lods
sbb
outsb
sub
jnp
cmc
pop
jnp
push
js
pushaw
lds
inc
and
pop
mov
jno
cmpsb
push
sbbb
ljmp
sahf
out
cmpsl
jo
lcall
je
jne
scas
jl
jl
xor
popa
sbb
les
push
lods
cltd
hlt
inc
pop
pushf
cmc
shll
jne
hlt
pop
dec
jp
sub
cli
jmp
mov
aam
shll
sbb
inc
mov
dec
adc
mov
cltd
sahf
mov
mov
ljmp
xor
push
jne
mov
jno
mov
mov
shrd
dec
jo
lds
cmc
xchg
fnsave
xchg
mov
hlt
negl
mov
dec
jl
hlt
leave
adc
cltd
mov
jle
cmp
lock
mov
cmpsl
jmp
jnp
sti
dec
cwtl
out
cmp
stc
add
jmp
popf
or
scas
ficoml
push
insl
fisubs
cli
adc
sub
jae
mov
aad
addl
mov
fcomi
scas
cmp
in
mov
dec
xchg
lods
mov
repz
sub
push
sub
xor
notl
sbb
push
repnz
jle
pop
add
imul
imul
jo
or
adc
or
mov
mov
mov
add
repnz
je
add
mov
add
cmp
sbb
clc
push
ljmp
push
inc
imul
xchg
push
fcmovnu
pop
sahf
test
or
push
mov
add
sbb
dec
mov
inc
stos
insb
loopne
mov
lret
cmp
subl
in
orb
inc
addr16
fwait
repz
xchg
xor
loope
mov
cs
cwtl
mov
dec
popa
cmpsb
or
inc
frstor
imul
and
sbb
fdivrl
lcall
stos
das
xor
mov
mov
push
adc
mov
es
leave
daa
jg
mov
push
cltd
push
sbb
mov
or
mov
pop
mov
js
icebp
push
xchg
sub
jle
lahf
rclb
xchg
out
clc
jbe
xor
mov
movsb
pop
jge
ds
mov
dec
nop
xchg
jb
fdivrs
mov
test
mov
test
dec
sub
mov
sti
and
idivb
push
jne
stc
movsb
imul
push
ljmp
pop
sbb
pusha
push
sub
pop
test
shll
add
movsl
mov
add
data16
fwait
loop
nop
inc
and
jge
rorb
arpl
or
push
jbe
loopne
jp
push
adc
lret
jl
mov
movsb
push
call
cmp
mov
pop
and
push
and
xchg
and
dec
lods
loopne
clc
mov
or
lods
movsb
sbb
stos
aas
dec
mov
sub
addr16
add
push
out
pop
jnp
fsubp
mov
arpl
dec
push
cmp
into
lret
movsl
mov
sbb
rcrb
out
test
and
inc
int
dec
ret
dec
sub
mov
or
mov
ja
jne
push
ds
cmp
in
mov
enter
int3
lret
adc
cmc
adc
jb
sbb
adc
sbb
sbb
in
cmp
data16
or
in
nop
insb
push
ljmp
sub
xchg
out
push
lea
inc
jnp
jecxz
subl
mov
stos
cmp
add
lods
push
clc
stos
inc
cmc
push
sub
mov
cs
test
cli
rcrb
popf
lret
adc
shrb
rorb
xchg
xlat
add
insl
icebp
push
test
dec
and
aam
jg
fildl
aam
dec
pop
jno
dec
movsl
popa
mov
in
popf
inc
inc
push
jb
mov
xor
mov
fisttps
js
mov
cmp
inc
sbb
es
push
mov
mov
xor
movsb
inc
repz
insb
add
test
sbb
inc
fnsave
lret
lock
std
pop
jae
mov
out
adc
ljmp
out
inc
vmwrite
cwtl
and
cli
adc
imul
cltd
mov
sbb
orb
add
xchg
ds
hlt
mov
cmc
jae
pusha
push
cs
pop
xchg
add
jl
push
int
mov
cmp
stos
popf
or
cmpb
in
jg
adc
adc
jno
hlt
pop
push
add
jo
sub
xor
sbbl
cmp
cmpsl
sub
dec
rolb
aas
in
rcr
jae
ss
cmpsb
push
sbb
pop
lea
ss
inc
adc
push
loope
mov
movsb
cmp
mov
jle
push
add
push
das
mov
lcall
shll
fmuls
test
cmp
push
fbstp
enter
cs
decl
jbe
in
mov
icebp
push
addr16
iret
inc
push
sub
cmpsb
mov
adc
repnz
jg
dec
fstl
and
xchg
xor
hlt
stos
xor
int3
add
fistpl
dec
sub
mov
pop
pop
dec
call
leave
cmc
adc
sub
cmp
sbb
fwait
cmp
imul
fidivl
loopne
enter
push
lods
push
in
roll
cmc
insl
or
loope
arpl
imul
imul
repz
add
fistl
mov
push
xchg
cli
jecxz
add
cli
xchg
movsl
xor
loop
dec
test
popf
ja
mov
ja
mov
dec
push
testb
sub
and
xlat
push
mov
sbb
mov
jbe
dec
jmp
xchg
lret
add
movsl
scas
in
clc
sbbl
mov
arpl
lret
xchg
mov
sub
jbe
mov
or
imul
enter
dec
andl
inc
in
adc
icebp
fcomps
arpl
insb
and
cmpsl
daa
mov
aaa
aam
out
sarl
nop
ret
jecxz
iret
inc
clc
and
inc
cs
mov
out
ja
mov
sbb
mov
xlat
mov
loopne
adc
in
cmp
xchg
lods
sub
subb
cwtl
lds
pushf
insb
mov
stos
inc
ds
out
mov
xchg
imulb
inc
int3
mov
cmpsl
mov
pop
pusha
add
ljmp
scas
jnp
sbb
out
xchg
mov
dec
arpl
test
or
jne
or
lret
in
sti
or
adc
inc
fucomp
lods
mov
popa
mov
mov
mov
jle
out
jl
adc
pop
xchg
imul
cmp
cmpsb
push
mov
iret
aad
xor
fld
xor
insb
insb
loope
push
mov
push
push
pop
adc
and
jns
les
jp
xlat
ljmp
inc
lock
enter
cmp
add
jmp
adc
stos
outsl
sub
cld
hlt
shl
inc
or
or
jg
pop
fsub
mov
pusha
rol
fs
sbb
mov
jle
mov
loopne
mov
es
sub
shlb
jns
in
fmul
test
in
jmp
bound
add
aaa
and
insl
pushf
xor
mov
inc
push
fwait
inc
or
callw
daa
mov
cs
lods
mov
pop
inc
lds
or
aas
lcall
int
scas
test
jg
dec
rcrb
cmpsl
je
stos
add
in
inc
and
cmpl
jo
add
faddl
sti
ds
push
adc
lock
inc
adc
xchg
xchg
mov
dec
sarl
aaa
xor
les
loop
sub
popf
pop
adc
stc
mov
dec
sahf
leave
add
ljmp
lea
out
cmp
push
xchg
pop
cmpb
xchg
dec
pop
dec
lahf
or
sub
rorl
stos
js
jno
push
out
and
mov
xchg
gs
xor
and
xor
or
call
stc
pop
cltd
cmpsb
fs
mov
das
nop
nop
sub
out
mov
push
xor
mov
push
mov
adc
rorl
sub
xchg
dec
popa
xlat
psrlq
cmpsl
jb,pt
leave
dec
test
testl
jne
pop
andl
fucomp
mov
ret
mov
dec
cmc
ret
adc
je
movb
test
mov
cmpb
jne
lea
push
push
rorb
jp
mov
add
jle
xchg
add
xlat
insb
aaa
jge
adc
inc
scas
jg
lahf
mov
cmp
mov
fstpl
call
popa
and
mov
jl
popa
xchg
bound
cltd
cmpsb
cld
lods
push
push
insl
sub
dec
ss
jae
jbe
aam
push
addr16
ss
jnp
repnz
cmp
push
aad
dec
icebp
clc
inc
rcrl
pop
roll
aad
jle
sub
inc
lcall
sub
pop
test
cmp
out
jl
cmp
jno
xchg
test
testb
mov
ds
lahf
push
inc
into
rorl
xorb
out
sbb
mov
movsl
lea
nop
subl
push
dec
es
test
out
lahf
cmp
or
fs
xchg
ja
mov
and
js
sbb
and
div
cwtl
mov
adc
lods
or
pushf
mov
mov
mov
xchg
push
sbb
js
xor
inc
shl
fsubs
icebp
mov
das
cmc
test
push
pop
mov
mov
leave
cmp
fimuls
std
adc
xor
jno
divl
pop
cld
sarl
sti
xlat
pusha
mov
ss
cmp
into
mov
dec
outsl
or
sub
movsb
mov
xor
dec
jo
xor
inc
jecxz
insb
adc
in
adc
xchg
push
cmpsl
test
cmp
sahf
movsl
cmpsl
aad
adc
das
sti
sahf
pusha
jnp
aas
xor
mov
jecxz
dec
ss
xor
push
data16
out
sbb
jbe
movsl
mov
ljmp
aam
push
cltd
sub
or
outsb
icebp
adc
rcl
insl
imul
les
lods
add
sub
jae
loop
imul
lcall
lods
out
sbb
inc
sbbb
xchg
incl
push
pusha
jno
icebp
pop
inc
mov
xlat
sub
stos
mov
xor
dec
aaa
push
loope
imul
mov
jae
insb
sbb
stos
xchg
sbb
leave
and
movsl
and
mov
incb
or
jbe
mov
add
into
xchg
in
mull
cs
lds
outsb
pop
lret
shl
inc
sub
in
aaa
dec
pop
xchg
mov
and
mov
mov
jle
in
add
mov
sarl
rorb
cwtl
jns
jbe
jmp
cltd
add
jae
xchg
dec
fwait
push
pop
sbb
test
into
es
clc
xchg
sbb
add
inc
push
repnz
out
mov
out
aas
or
or
add
pop
push
int
xorl
pop
pop
jge
add
shlb
xchg
ljmp
and
inc
sahf
cwtl
leave
xor
mov
adc
insb
xor
xor
cmpsb
mov
mov
int
je
adc
push
das
out
xchg
dec
sbb
rcl
movb
lret
jne
fsubs
push
sub
adc
mov
push
lds
dec
stos
inc
into
mov
xorb
or
inc
adc
int3
push
scas
dec
push
xchg
xchg
cmp
dec
jb
popf
jg
rolb
jl
enter
xchg
fstpl
cmp
lods
bound
mov
adc
xchg
or
test
mov
add
inc
arpl
into
jecxz
xor
xor
pop
gs
test
pop
incl
mov
sahf
sbb
stc
ds
jge
cmp
pop
outsb
hlt
and
outsb
sub
popa
cmpsb
inc
and
xor
push
fdivrl
and
jecxz
hlt
xchg
jl
add
pushf
sbb
xchg
mov
test
int3
in
lret
push
pop
insl
or
ja
loop
inc
mov
jnp
sahf
aas
bound
dec
mov
in
lret
xchg
xchg
fiaddl
mov
jne
jb
mov
xor
cmpsb
cpuid
popf
fbld
imul
fwait
pop
or
je
jle
in
jmp
out
dec
fcomps
clc
add
push
pusha
bound
es
aaa
dec
into
push
lods
mov
lds
loope
cmp
pop
test
pop
mov
xchg
lods
xchg
dec
insb
in
lea
ja
inc
or
in
js
sub
cmp
call
orl
insb
jg
fs
scas
pop
call
nop
test
mov
inc
adc
cmp
jecxz
in
lcall
je
std
mov
js
fildll
cli
rcr
test
inc
xchg
js
dec
or
mov
mov
out
bound
into
xchg
fldcw
push
stc
jmp
fisubs
shlb
and
dec
subl
sub
pushf
mov
andl
pop
fildll
rcr
lods
int3
sub
push
test
xabort
sahf
dec
std
shlb
mov
jns
clc
pop
aas
pop
mov
int3
jae
hlt
out
in
push
fsubrl
enter
xor
xor
jle
in
sub
ljmp
ficoms
pushf
pusha
das
dec
dec
sbb
not
xor
gs
loope
dec
int3
cmp
cmp
outsb
pop
xchg
aad
movsl
mov
pusha
clc
ljmp
jge
test
ret
mov
cmp
idivb
jmp
jecxz
xor
xor
and
rcl
xchg
ss
aam
imul
mov
popa
xor
xchg
cmpsl
sbb
jnp
sub
inc
icebp
test
std
in
std
frstor
xchg
lock
insb
fisttpl
adc
adc
ret
std
push
in
imul
mov
cmpsl
ljmp
add
shl
cli
xchg
cli
add
cwtl
lods
dec
adc
aaa
adc
loope
rcrl
mov
or
dec
mov
and
push
test
mov
or
push
and
xchg
add
into
jae
mov
insb
ret
or
push
mov
sarl
mov
sbb
dec
int3
stos
mov
shll
ja
or
aas
add
dec
movsb
dec
outsb
push
fildll
scas
inc
or
aad
mov
mov
insb
test
imul
mov
push
pushf
mov
int3
xchg
insl
imul
mov
pop
dec
mov
cmc
aam
jo
xchg
jno
jmp
loope
fldl
or
lods
sbb
in
shrb
out
popw
rcr
inc
xchg
lahf
movsl
inc
imul
xchg
jp
iret
pop
or
shll
rcll
add
jno
and
lods
mov
push
js
xor
mov
addps
dec
repz
jp
mov
inc
adc
and
fstps
scas
es
pop
push
enter
arpl
xchg
in
xor
pop
mov
push
cld
mov
fisttpll
ja
jae
dec
jns
data16
movsl
inc
cmp
mov
int3
mov
mov
cmpsb
sub
fcompl
loopne
lock
dec
leave
push
ljmp
out
call
aas
adc
lret
fs
push
arpl
add
stc
aam
mov
and
fnsave
xor
xchg
cltd
and
fnstsw
ja
pop
inc
gs
mov
cmpsl
testl
pop
xchg
das
mov
lahf
xchg
dec
and
imulb
jge
std
in
mov
xchg
mov
pop
push
mov
not
jno
mov
scas
adc
cmp
je
enter
push
push
ljmp
mov
or
test
sbb
rclb
mov
popf
cmp
pop
popa
mov
int3
pop
movsb
push
lcall
adc
pop
mov
xchg
mov
pop
popa
sbb
mov
out
mov
xchg
arpl
push
sbb
out
hlt
popa
jbe
pop
mov
sub
sbb
testl
xchg
je
stc
mov
mov
sbb
fnstcw
shlb
aam
and
loop
xorb
sahf
outsl
int
push
and
xchg
ss
outsl
xor
gs
jmp
sti
scas
mov
fwait
es
les
sbb
ffree
negb
pop
pop
push
aam
cmpl
mov
fsub
arpl
shl
ficompl
jo
inc
loop
mov
sbb
push
inc
cmpsl
ljmp
in
push
popa
cltd
leave
fcoms
push
push
mov
les
mov
lock
aam
leave
jnp
movsl
pop
jg
aaa
scas
clc
aad
push
push
cltd
xlat
add
mov
imull
or
xchg
cmp
leave
xchg
add
inc
mov
and
jnp
lock
pop
sbb
sub
les
add
aaa
xchg
mulb
xor
pop
int3
sub
sbb
movsb
out
xor
adc
sahf
fists
jg
out
xchg
cli
jno
xor
pop
and
push
dec
lock
dec
daa
jl
in
jnp
pop
int3
adc
cwtl
scas
mov
ja
and
call
mov
mov
jp
pop
xor
int
adc
loop
out
cmp
cmp
and
in
mov
dec
cmp
jb
loope
push
xor
fwait
dec
in
clc
das
and
mov
cwtl
or
xor
xchg
lock
lods
cmc
iret
aad
mov
pusha
sub
aaa
nop
mov
mov
adc
pushf
in
xor
add
cmc
clc
test
push
mov
movsb
adc
scas
test
mov
xchg
add
mov
lds
scas
pop
test
cli
leave
mov
bound
loopne
repnz
mov
mov
nop
scas
fwait
jle
or
shlb
mov
inc
stos
and
or
das
stc
aaa
std
outsl
jo
cmp
ds
dec
push
adc
int
bound
repz
mov
jmp
inc
or
std
sub
out
aam
cwtl
push
sti
cmp
roll
movsb
nop
inc
iret
loopne
in
push
pop
push
fldt
jnp
stc
lods
lret
push
jno
out
inc
scas
xchg
enter
sbb
lcall
mov
pop
mov
sbb
jecxz
cltd
enter
push
cmpsb
xchg
repnz
outsb
jbe
or
adc
stos
cmc
lds
ja
jp
insb
jae
dec
lret
call
jle
cmp
fwait
and
or
xorb
sahf
push
inc
pop
scas
jb
jmp
push
jmp
dec
dec
push
std
clc
push
mov
sarb
push
repz
mov
sub
dec
aaa
push
dec
adc
push
pusha
movsb
faddl
cld
add
iret
jge
es
mov
cmp
mov
lret
push
or
pop
inc
imul
mov
sub
fucomp
pop
cmp
outsl
f2xm1
mov
pushf
imul
add
cld
dec
fcoml
push
adc
fwait
mov
jp
push
jbe
in
jb
or
aad
pop
xchg
out
fcoml
xchg
inc
inc
push
in
jns
push
sub
xor
out
pop
sahf
jne
inc
or
cwtl
jecxz
dec
mov
fidivs
fistpl
das
aaa
lea
sub
pop
sub
imul
mov
sbb
inc
inc
aas
dec
sahf
mov
xor
sub
dec
fdivrl
rorb
cmpl
aam
adc
imul
inc
add
xor
or
aas
out
sahf
fmul
movsb
scas
scas
push
sbbb
fildl
imul
inc
testl
ljmp
mov
call
in
ljmp
mov
orb
adc
fistl
mov
mov
es
aaa
cmp
sar
add
in
nop
jno
xchg
jmp
out
mov
jl
clc
dec
call
repz
push
add
jnp
push
mov
push
mov
xchg
adc
data16
out
push
xchg
lods
adc
mov
pop
push
or
mov
fld1
fimuls
pop
loop
cli
xchg
mov
and
aam
or
jmp
mov
or
push
jbe
add
mov
shrl
ljmp
push
daa
fbstp
ret
mov
jge
jns
call
mov
data16
mov
pop
inc
test
ret
xor
or
pop
cs
hlt
jle
aaa
loopne
into
add
sub
vunpcklps
mov
les
lret
or
jb
scas
pop
adc
cmc
push
push
or
mov
mov
sahf
das
add
aad
fldcw
negl
lret
push
jns
cmp
xchg
jmp
imul
pop
jo
mov
and
cmp
imul
int3
scas
push
ja
sti
shrb
mov
mov
fstpl
std
aaa
push
mov
test
jle
sbbb
inc
inc
push
nop
aad
pop
scas
jp
data16
cmp
mov
jecxz
pop
mov
das
xor
cmp
les
test
fwait
lods
cs
pop
lcall
loop
rcr
popa
jl
inc
lret
xor
arpl
fsubp
or
mov
mov
push
repz
and
xor
jno
cltd
ficomps
mov
adc
dec
mov
mov
and
pop
rclb
ss
mov
adc
jae
clc
push
xlat
cmp
jl
pop
and
jne
mov
push
hlt
inc
mov
xor
pop
dec
mov
inc
dec
sbb
dec
and
dec
dec
xchg
and
es
adc
pop
push
fcompl
mov
sub
push
mov
cmc
and
div
cmpsb
jge
sbbb
lret
adc
pop
fcmovne
add
sub
ds
pop
imul
cmp
ja
call
jo
jmp
pop
push
mov
jns
sub
imul
dec
cld
pushw
adc
daa
imul
idiv
mov
add
push
into
push
popa
cmpsb
xchg
out
xchg
mov
in
mulb
movb
out
dec
pop
jle
aaa
sti
cmp
mov
mov
enter
push
js
popa
mov
cmc
rcr
xchg
inc
xlat
pop
clc
ljmp
popf
in
ss
add
in
push
iret
lcall
sarb
xchg
mov
shll
fsubrl
pop
adc
adc
inc
add
push
xchg
daa
or
popf
jp
push
jl
add
in
sbb
adc
aaa
pop
fs
push
roll
cmp
mov
lahf
mov
and
stos
pop
push
pop
inc
xor
in
scas
andb
sbb
stos
mov
dec
bound
xor
adc
orl
mov
push
add
stos
outsb
mov
pop
xchg
sub
arpl
and
xchg
mov
or
pop
xchg
and
lcall
push
fwait
movsb
sahf
jecxz,pn
sub
into
push
cmc
cmp
je
xor
pop
inc
xchg
inc
shll
fstpt
cmp
sbb
call
out
or
outsb
dec
jl
ja
pop
mov
fdivrl
das
imul
sub
push
insb
loopne
cmp
add
lock
pop
les
mov
sbb
cmc
jle
int3
xchg
mov
xor
xchg
inc
jp
push
cli
ja
cmp
mov
arpl
repz
jbe
lret
xor
push
mov
sbb
sbb
push
movsb
push
mov
add
push
sub
loopne
or
rcl
imul
test
adc
adc
push
scas
cs
pop
xabort
jmp
fstps
outsb
call
mov
mov
cmpsl
imul
jae
punpckhdq
fisubl
ja
inc
xchg
popf
test
xlat
mov
inc
xchg
das
fists
daa
cmc
dec
and
es
jne
xor
test
pop
and
jmp
mov
mov
sub
mov
sbb
add
js
pusha
sbb
int
hlt
cltd
push
js
mov
scas
iret
sub
add
hlt
adc
fldenv
or
int
push
rorb
enter
fwait
sbb
sbbl
pusha
xchg
test
adc
lret
mov
fcoms
aas
jmp
cs
std
enter
push
cmpsb
or
ds
out
pop
mov
lret
pop
test
pop
push
cmc
sub
dec
dec
pop
sub
xchg
adc
cmc
ljmp
hlt
ss
and
in
aas
cmp
cwtl
mov
and
mov
pop
sahf
jge
cmpsl
in
fbstp
pop
stos
dec
clc
pop
inc
ss
insb
adc
out
mov
xlat
add
xor
xor
pushf
cltd
call
out
xchg
add
add
in
jae
or
or
leave
scas
and
pop
add
fisubs
or
mov
clc
mov
ja
jp
out
fcmovne
je
adc
into
cmpl
jp
xor
adc
repz
xor
jns
movhps
lret
dec
pop
xchg
stc
or
xchg
cmpsb
push
xor
aaa
je
in
push
js
lret
lods
and
adc
jbe
leave
stos
mov
or
push
mov
mov
adc
sbb
mov
or
xchg
mov
call
iret
push
mov
jae
loope
clc
add
lock
cmc
rorl
mov
dec
and
pop
add
jecxz
mov
pop
iret
jns
cmp
ds
cmp
or
sbb
sub
icebp
cmpsb
shlb
lds
mov
add
lods
subb
testb
dec
and
jecxz
or
add
into
or
idivl
sbb
and
mov
cld
mov
mov
imul
adc
shrl
fnstcw
xchg
inc
sub
prefetch
pop
es
sahf
test
pop
or
push
mov
cmpsb
mov
xchg
or
cmp
cmpsl
stos
out
push
into
rcr
stos
stos
cmpsb
cmpl
scas
inc
jae
mov
sub
cmp
sub
loope
inc
ret
mov
stc
int
sub
fnstsw
jb
and
outsl
lcall
push
jae
outsl
cmc
lock
xchg
mov
or
pop
mov
movsb
dec
push
pop
leave
mov
and
mov
sub
mov
xor
fisubs
push
aaa
scas
mov
fisubrs
xor
nop
lahf
xchg
inc
hlt
push
aaa
xchg
lds
mov
stc
nop
clc
mov
cwtl
sbb
push
fcomip
jg
mov
inc
mov
lods
cmp
mov
mov
pop
movsl
mov
pop
or
in
fldt
sub
rcll
mov
jg
int
sbb
jg
lods
sbb
sbbl
xchg
mov
jle
in
mov
mov
and
inc
ret
dec
add
ret
mov
jno
jne
jne
out
or
outsb
jae
xchg
mov
pop
add
pop
xchg
aam
jl
in
jl
jae
jne
sub
bsf
jo
push
lcall
pop
les
clc
dec
loope
in
push
dec
stos
mov
daa
and
jmp
imul
nop
push
fwait
push
dec
stc
push
orb
sub
inc
fcoml
push
mov
fstp
ret
push
clc
cwtl
push
fstpl
inc
stc
lret
mov
add
mov
mov
inc
mov
mov
js
sbb
dec
cwtl
xchg
mov
xchg
or
sub
mov
lods
mov
mov
lods
adc
in
mov
jp
or
loop
cwtl
adc
dec
push
jne
imul
push
ds
push
test
cmp
jp
mov
in
and
cli
mulb
or
jo
clc
push
cmpsb
js
sarl
adc
add
sbb
loope
xor
push
pop
inc
lods
jg
xlat
push
clc
add
out
add
push
scas
adc
sub
mov
imul
inc
push
bound
movsl
or
xchg
xor
sbb
push
xchg
pop
mov
lods
clc
test
dec
imul
sub
stos
cli
stos
and
xor
xchg
mov
pop
mov
xchg
xchg
sub
push
xor
imul
cmp
mov
push
jle
push
pop
popf
inc
jbe
bnd
fcoml
in
ss
call
jge
xor
jecxz
add
mov
js
pop
ljmp
in
imul
fidivs
mov
fwait
and
mov
in
cmp
mov
pop
insb
data16
out
cmpsb
neg
pop
push
popa
pop
fldcw
push
pop
hlt
mov
stos
jb
pop
repz
mov
fsubrs
jo
jne
enter
pop
and
sbb
mov
cmp
int3
or
dec
adc
in
inc
pop
les
add
cmp
ret
cmp
ss
lea
loopne
mov
cmp
add
iret
add
lds
ret
movsb
fsub
inc
jmp
or
inc
jecxz
xchg
mov
daa
shrb
adc
negb
inc
leave
add
add
mov
lcall
clc
fistpll
insl
inc
lcall
sbb
dec
mov
ds
aaa
mov
adc
rolb
cltd
mov
stos
sub
std
pop
xor
pop
push
pop
sub
xchg
iret
jge
inc
cmp
mov
pop
push
and
cli
or
mov
mov
test
dec
dec
jle
or
lods
sbb
aam
outsb
cli
cmp
inc
insb
sbb
add
aas
imul
push
jge
sub
sub
xchg
fsts
and
xchg
jg
add
sbb
fcmovbe
stos
add
jg
aaa
insb
sbb
add
mov
daa
je
ret
sahf
mulb
adc
cmpxchg
in
lret
mov
cli
push
cwtl
pop
xchg
push
mov
inc
add
inc
xchg
int
or
jnp
or
and
or
out
insl
cmp
out
nop
jo
mov
jae
adc
bound
int3
xchg
rcl
sbb
nop
out
lcall
add
jae
xor
cwtl
xchg
jle
sub
lret
jne
gs
loopne
sbb
xchg
inc
fistl
in
push
push
std
addr16
mov
aam
sbb
inc
cmpl
push
mov
cmp
xchg
push
cwtl
dec
out
sbb
movsb
mov
dec
fistpl
sub
inc
pusha
xlat
repnz
mov
mov
test
sub
sbb
call
cmp
in
jae
mov
push
add
pushf
adc
cltd
jns
inc
mov
mov
add
push
push
sub
out
lods
adc
leave
sub
pop
sbb
jb
jecxz
scas
push
rorl
test
push
push
leave
push
mov
scas
adc
cs
popf
insb
inc
sbb
sbb
lock
pop
add
scas
sbb
sahf
push
add
repz
mov
add
popa
add
cmp
das
or
xor
aas
pop
mov
cmp
mov
jle
pop
scas
push
enter
inc
fimull
cmp
pusha
stos
xlat
inc
push
ja
or
mov
call
and
mov
jb
fcmovne
pop
je,pn
add
and
mov
add
lret
dec
lcall
mov
fcomps
movsb
mov
ret
loop
std
popf
loopne
loop
js
inc
pop
out
fbstp
lea
outsl
iret
ret
xor
fisubs
sub
sub
popa
ss
cmp
mov
in
and
or
or
imulb
push
jp
cmpsl
cld
orb
fidivrl
adc
or
jns
add
sbb
jo
ljmp
push
cltd
jle
not
stos
pop
subl
pop
popa
fistpll
dec
out
clc
sub
and
mov
ljmp
jge
mov
pop
push
call
mov
sbb
cmp
mov
add
xor
cs
mov
daa
cmpsb
mov
pop
sub
mov
aad
jge
or
and
lock
das
pop
cmp
fcomps
cmp
dec
sub
scas
imulb
movsl
mov
rorl
repnz
and
stos
cmp
adc
lods
mov
arpl
pop
or
loope
icebp
pusha
cmp
mov
aad
in
and
iret
dec
call
push
in
inc
les
push
nop
and
push
lea
loope
and
dec
add
rcr
fs
xchg
in
jg
scas
popf
push
pop
imul
xchg
inc
out
push
test
ss
mov
cltd
and
jbe
inc
test
add
sbb
or
call
or
xor
mov
mov
mov
adc
pop
pop
ds
daa
cmp
jg
fdivrs
imul
movsl
xor
aad
loop
out
mov
add
aas
mov
sbb
sahf
jmp
cltd
mov
bound
adc
xor
loop
or
clc
sub
scas
jmp
outsb
dec
inc
sub
xchg
out
notl
sbbb
pop
inc
cmc
ficomps
mov
and
jecxz
out
mov
cmpsb
subl
rcll
adc
imul
inc
xorb
jle
dec
add
lret
push
push
imulb
pop
dec
adc
add
inc
movsb
xor
jge
fwait
dec
sbb
dec
scas
inc
fwait
sub
inc
pop
nop
cwtl
lods
mov
cli
and
dec
pop
in
ja
shll
dec
push
pop
scas
test
div
mov
mov
sbb
cwtl
jge
push
sub
cmpsl
sbb
cmc
ds
sub
sbb
rolb
stc
jbe
pop
mov
lods
popl
fstpt
mov
repz
inc
mov
pop
push
dec
cwtl
imul
imul
xchg
push
test
mov
xchg
test
push
mov
sbb
aad
pop
fcompl
pop
imul
shll
cmpsl
mov
mov
adc
mov
adc
pop
stos
xchg
add
xchg
cli
ljmp
rcr
repz
fimuls
pop
cmp
shl
cmp
sarb
xchg
push
lods
lds
cmp
fistpl
repz
mov
cwtl
inc
or
lock
cmpb
fwait
xor
and
pop
and
or
jle
and
fldt
ret
loopne
xlat
jnp
jl
les
cmp
clc
mov
push
js
gs
leave
ret
push
push
arpl
mov
ss
les
movsb
int
roll
ss
mov
xchg
xchg
xchg
inc
xchg
iret
jge
inc
insb
pop
xchg
push
mov
push
dec
in
inc
scas
scas
lods
xchg
jae
loop
js
outsl
sti
idivb
dec
pop
xchg
mov
hlt
xor
sti
mov
jl
pop
lea
sub
fdiv
fsts
outsl
mov
dec
sbb
jno
mov
stos
ja
add
popa
bound
mov
xor
lods
je
je
sub
addr16
jecxz
xchg
and
lret
aaa
call
pop
sub
pop
or
rolb
cltd
rcrb
cs
cwtl
sub
sbb
jb
jno
mov
adc
mov
adc
or
mov
sbb
jb
mov
mov
cmc
imul
sbb
test
in
cmp
dec
sub
stos
mov
pusha
sub
rcll
xor
fwait
mov
sbb
dec
movsb
outsl
sbb
mov
sbb
out
in
rcll
mov
xor
rcrl
mov
xchg
cwtl
jge
sbb
or
jmp
mov
bound
lods
push
inc
test
jnp
mov
cmpsb
lods
dec
push
je
gs
mov
sub
aas
divb
push
push
xchg
jo
xchg
pop
mov
push
push
cmp
test
push
pop
into
lods
lock
dec
sub
jl
imul
lahf
jecxz
cmp
loopne
and
mov
iret
jle
mov
fidivl
cs
test
push
in
inc
insl
or
mov
fdivrl
leave
pop
sub
test
hlt
enter
decb
mov
sahf
xorl
mov
push
push
jle
inc
mov
loopne
push
lock
popf
lret
mov
jns
or
pusha
jbe
adc
call
test
dec
adcb
int3
addr16
rcll
sbb
cmp
mov
push
clc
add
ds
inc
push
aaa
das
into
aaa
les
out
jg
stos
xor
xchg
xchg
int
out
lods
clc
in
and
stos
clc
jno
push
xor
in
fists
inc
adc
mov
adc
xchg
adc
outsb
xor
cmp
loopne
ljmp
in
sti
adc
imul
outsb
mov
jae
ret
xor
inc
data16
fstpt
lea
mov
mov
inc
and
cmp
or
bound
fdivrl
bound
xchg
push
sbb
pop
sbb
push
sbb
sbb
pop
call
inc
pop
add
jae
arpl
das
push
mov
mov
mov
sub
mov
jle
and
repnz
inc
xor
sbbb
sahf
or
call
cmp
or
mov
cmp
push
shlb
pop
mov
adc
movb
pusha
mov
mov
adc
test
and
dec
ret
adc
stc
fmuls
push
mov
sub
push
ficoml
lcall
inc
clc
jno
int3
sub
and
shrb
mov
push
pop
inc
outsb
adc
jg
dec
xchg
add
and
dec
pushf
jg
jae
push
outsb
pop
and
mov
push
insb
loope
mov
scas
lea
push
and
mov
iret
add
popa
push
outsl
dec
das
pushf
mov
cmp
call
sub
xchg
inc
mov
clc
int3
movsl
cmp
ljmp
mov
sub
push
mov
lds
jo
test
gs
arpl
xchg
jno
push
cwtl
mov
push
addr16
loope
or
mov
loope
andl
fbstp
movsb
xchg
test
pop
mov
cmp
aam
in
or
cmp
jge
xor
bound
fnstcw
xorl
dec
sub
ds
mov
cld
sbb
xchg
cli
mov
sub
push
loopne
stos
mov
push
push
lahf
fldcw
roll
add
jb
in
mov
leave
movswl
mov
xchg
mov
jb
les
jbe
xor
and
repnz
adc
sbb
jns
in
mov
icebp
aad
mov
clc
bound
out
lds
lds
out
aad
clc
mov
lods
outsl
xor
mov
stc
xlat
jno
xorl
adc
das
fnstcw
mov
jmp
xorb
sub
dec
xchg
cmp
repnz
enter
pop
dec
or
sarb
mov
and
sti
mov
fnstenv
out
iret
lret
ljmp
push
mov
xchg
test
in
repz
movsb
ja
xor
bound
mov
shlb
pop
dec
push
cltd
lea
pop
in
or
sbb
pop
or
mov
xorl
xor
mov
dec
pop
loopne
mov
inc
cmp
push
test
add
test
aam
out
movsb
lahf
add
mov
dec
adc
test
int3
rcrb
push
sub
fdivrl
push
jge
stc
stos
xor
nop
mov
fdivl
stos
dec
out
fwait
adc
popl
jo
push
daa
adc
sbb
mov
inc
pop
cmp
imul
cmc
sbb
es
cwtl
xchg
lods
adc
inc
cltd
out
push
jnp
mov
stc
repnz
int
cmpsl
popf
std
sbbb
ss
or
xor
inc
daa
loope
subps
cmp
push
scas
lock
rcrb
cmp
ret
sti
ret
sbb
dec
movsl
xlat
insb
loopne
ud0
ljmp
push
push
js
movsl
sub
push
out
xchg
ret
cwtl
jge
mov
jb
out
jmp
cmp
les
mov
push
lret
mov
shll
jmp
lret
dec
sub
lods
xor
jecxz
adc
jmp
jb
add
loop
add
dec
mov
movsl
dec
sub
mov
lcall
or
stos
xchg
dec
xor
or
pop
xchg
enter
xor
shr
sub
int3
xchg
divl
add
test
inc
ret
icebp
stos
pop
mov
push
mov
cmp
sbb
mov
les
xchg
mov
addr16
sbb
ret
pop
add
pop
mov
cmp
addr16
lret
add
cmp
xchg
cltd
cs
fdivrs
bound
push
sti
and
push
mov
jnp
push
and
rclb
push
mov
cwtl
cmp
cmp
sti
add
lds
mov
std
mov
stos
shr
jo
out
pop
pop
xchg
sub
jne
cmp
cmp
dec
ja
mov
xchg
push
das
inc
ret
ret
push
xor
mov
movsl
sbb
mov
sti
xor
xorb
shrl
push
sbb
mov
hlt
pop
les
pop
mov
stc
ret
dec
push
stos
lods
lea
pop
sub
xor
or
push
insl
or
mov
cmp
test
iret
jp
mov
inc
stc
cmp
dec
adc
shrl
sar
push
adc
cmp
ljmp
push
dec
outsb
cltd
rclb
sub
cmc
mov
sub
aam
mov
sub
push
sbb
push
call
sub
mov
insb
sbb
shll
ret
loope
jmp
cld
mov
in
mov
out
sbb
fsubl
jl
and
jo
push
fwait
cmpsl
sahf
cmpsl
sbb
dec
aaa
leave
ret
pop
repz
sub
adc
loopne
hlt
roll
std
push
test
stos
pop
pop
mov
ret
xchg
mov
test
pop
and
arpl
inc
adc
stos
icebp
bound
lahf
dec
test
hlt
outsl
xor
pop
rcr
add
es
pop
adcb
les
ds
add
add
push
clc
mov
xlat
dec
push
icebp
dec
jns
inc
lods
sbb
scas
xchg
mov
add
lcall
cmpsb
jp
enter
daa
out
push
les
ret
das
std
out
in
sub
pop
or
inc
mov
rorl
mov
xchg
into
aas
rorl
mov
icebp
test
sub
bnd
mov
mov
adc
fsubrp
and
pushf
mov
pop
jne
inc
mov
adc
incb
das
cmpsl
call
xor
xlat
pushl
push
mov
ret
push
fstps
mulb
jo
mov
and
shl
icebp
jmp
pusha
ficomps
test
data16
mov
pop
xchg
outsb
mov
clc
sub
repz
movsl
sysret
jae
xor
mov
enter
or
dec
loope
iret
add
mov
add
sbb
scas
icebp
pop
sub
jno
add
mov
inc
cmp
stos
sub
aas
sbb
mov
mov
pop
mov
pop
mov
test
mov
jo
fwait
sti
adc
xchg
into
push
lods
jae
lods
stos
jb
ja
inc
ret
jmp
xchg
insb
setb
das
mov
fwait
xor
loop
sbb
or
xor
mov
dec
push
push
or
jo
stos
loopne
push
iret
pop
jae
xchg
push
pusha
pusha
mov
loop
mov
in
pop
mov
std
das
sub
mov
push
mov
sbbl
ds
cmp
jle
inc
mov
xchg
loopne
adc
lret
hlt
insl
pop
repz
jno
lods
dec
pop
and
xchg
mov
out
test
jmp
dec
ss
mov
adc
xchg
and
fiaddl
out
cwtl
in
sti
imul
imul
adc
mov
push
adc
inc
mov
repz
pop
ljmp
in
in
inc
test
ret
pop
mov
mov
stos
imul
sub
jl
add
or
inc
call
mov
fistl
mov
xchg
repz
jo
cmp
xlat
test
pop
mov
mov
add
xor
fwait
mov
in
mov
xchg
loope
aam
loopne
pop
mov
mov
mov
sub
jp
add
mov
dec
pop
push
mov
pop
sub
lret
and
imul
gs
push
jne
mov
mov
push
cwtl
ja
sub
jne
add
in
lods
popa
or
fsubrl
lock
lahf
mov
pop
and
ljmp
push
pop
or
inc
mov
inc
outsl
pop
pusha
adc
mov
nop
aas
pop
mov
cmp
jbe
mov
out
roll
pusha
cwtl
cwtl
mov
xchg
scas
xchg
arpl
shrb
mov
mov
inc
loopne
int3
mov
pusha
xorl
push
mov
mov
loopne
xchg
adcb
mov
push
arpl
movsb
outsb
push
loop
or
cmp
mov
fwait
pop
mov
adc
daa
add
pop
call
or
xchg
mov
pop
cwtl
pop
ds
bound
mov
pushf
ljmp
sub
push
call
add
iret
push
xchg
lahf
cmp
fld
or
lods
movsb
inc
iret
aas
pop
xor
hlt
cld
cmp
and
sbb
stc
or
icebp
xor
jbe
push
test
dec
out
icebp
imul
xor
hlt
xchg
mov
shl
cs
test
repz
pop
sub
mov
lret
sbbl
cmp
sbb
and
lods
jb
pop
bound
inc
pushf
pop
into
insb
aam
pop
popa
out
inc
pop
mov
adcl
jne
lods
test
daa
mov
mov
ja
rorb
mov
roll
sahf
fsubl
mov
jns
aad
or
push
push
and
xchg
cmc
iret
enter
mov
int
push
scas
adc
mov
mov
lock
cmpsb
dec
mov
push
cmpsl
gs
and
jb
xor
out
movsb
out
js
pop
jo
lea
jmp
inc
test
jecxz
pop
inc
add
test
leave
mov
std
enter
ja
ljmp
loope
int
mov
addr16
test
jne
dec
sbb
sub
ds
pop
pushf
call
xchg
insb
and
pop
dec
lcall
sahf
insl
das
push
inc
jmp
mov
push
cmpl
daa
insb
imul
pop
pop
fwait
mov
mov
sbb
aaa
mov
adc
push
and
cmc
xchg
jno
mov
stc
mov
cltd
dec
and
adc
outsb
and
mov
gs
adc
cmp
enter
lahf
or
push
iret
adc
in
xor
enter
lcall
lods
jp
mov
and
cmpsb
fwait
adc
repnz
fs
bound
or
jno
mov
or
inc
adc
clc
mov
arpl
das
dec
jb
xchg
sti
jge
xor
mov
sbb
xchg
sub
or
aam
jbe
sbbb
jne
mov
hlt
pop
out
jecxz
push
sbb
push
fistpl
loop
fsubs
fimull
inc
xchg
int3
in
repnz
add
fisubrl
out
sbb
add
lds
rcll
mov
cs
out
enter
cmpsl
jo
pop
push
mov
icebp
cmpsb
adc
rcrl
fnstenv
cmpsb
adc
insb
jl
xchg
xchg
inc
pop
jns
popa
or
stos
jecxz
icebp
or
pop
test
clc
lret
es
loopne
inc
test
push
int
xor
or
dec
push
test
mov
mov
add
dec
movsb
pop
popa
push
or
xchg
jmp
dec
int
xor
loop
or
mull
int
stos
or
ret
xchg
cwtl
cmp
jmp
lods
fstl
sbb
mov
popa
push
cmp
and
mov
xchg
jmp
stos
mov
ja
inc
rcr
inc
cmp
jle
out
rcll
sub
jmp
call
into
jge
js
les
repnz
pop
lods
add
fcoms
hlt
xchg
pop
inc
xor
inc
addl
movb
ret
mov
mov
or
flds
data16
repz
and
inc
outsl
push
jns
fildl
lahf
pop
test
xchg
fisttps
sub
xor
cmp
xchg
push
fldl
xor
mov
les
jl
mov
and
loopne
std
loope
mov
ljmp
lret
ljmp
loopne
loope
push
cli
adc
out
mov
xor
out
push
movsl
cmp
push
mov
pop
jl
and
jno
adc
dec
cmp
out
cltd
pop
shl
lahf
pop
aaa
sbb
pop
dec
xchg
lret
mov
das
test
out
call
and
inc
xor
push
adc
nop
xchg
out
lods
aam
sahf
ss
xor
push
sahf
movsl
mov
sub
shlb
fadds
cmp
pop
push
divl
add
mov
lret
aad
xor
mov
pop
insb
sbb
leave
lods
and
add
mov
xchg
in
inc
push
dec
push
sub
xchg
xchg
stc
lds
push
scas
push
mov
lods
dec
mov
dec
daa
scas
incl
gs
push
jge
test
fdivr
push
ffreep
mov
leave
jle
inc
fs
test
lahf
mov
inc
fistpl
cmpsl
or
lret
jmp
sti
pusha
not
push
pusha
or
test
ds
mov
gs
xchg
or
jmp
into
adc
mov
and
push
repnz
insb
ljmp
outsb
cmc
je
les
insb
pop
fwait
insb
hlt
jbe
and
cli
mov
xchg
stc
cs
jo
fidivl
mov
popf
test
xchg
lea
adc
or
adc
lods
sbb
sti
ds
jg
arpl
cs
fs
cmp
insb
outsl
xor
aaa
lret
mov
sbb
push
pop
or
cli
xchg
push
inc
add
mov
daa
mov
iret
sti
aam
in
faddl
sub
mov
pop
jnp
bound
sahf
imull
add
ds
dec
xchg
adc
mov
and
and
movsb
cmp
jb
pop
aam
and
outsb
icebp
jl
jbe
pop
push
xchg
mov
lods
enter
repnz
subl
push
push
loopne
out
fwait
adc
outsl
dec
and
je
dec
add
inc
aam
int3
mov
cmp
data16
stos
cmp
insl
test
popf
cld
mov
lods
out
mov
push
dec
out
mov
lock
lea
xor
xchg
call
mov
push
pop
ds
loope
dec
fsts
and
cli
addl
test
mov
or
cmc
adc
rorb
daa
in
fldt
xorl
jnp
adc
shlb
dec
scas
and
enter
nop
push
stc
mov
pop
push
xchg
add
out
aas
push
sbb
frstor
pop
es
mov
sub
outsb
adc
cwtl
xchg
aaa
in
cmpsl
cmp
push
push
repnz
mov
push
scas
mov
sub
xchg
jae
scas
lock
add
movl
or
lret
mov
xor
cli
cmpb
ds
push
scas
mov
jge
mov
fwait
test
test
popa
sub
dec
jbe
test
mov
inc
cmp
push
out
dec
pop
xor
push
inc
cwtl
adc
lret
xchg
xor
adc
pop
lret
fstpt
test
clc
push
sub
add
xchg
jge
sbb
pop
ds
pop
cmp
popa
xor
xchg
add
movsb
adc
cmp
mov
xlat
cmc
xor
and
clc
mov
sbb
orb
mov
or
xchg
or
popa
aas
data16
int3
cwtl
lcall
sub
inc
leave
push
mov
mov
leave
lcall
add
sub
sbbl
push
sbb
push
mov
push
daa
out
sbb
sub
gs
ljmp
jnp
sub
loopne
mov
adc
adcb
pop
xor
push
std
pop
cmp
repz
jns
jge
xchg
and
push
ss
xor
lret
jp
ds
mov
pop
sub
leave
and
movsl
mov
xor
jmp
inc
aas
or
mov
jecxz
push
mov
test
mov
mov
lods
divb
push
mov
fcoms
pop
lea
adc
dec
stos
repnz
out
xor
mov
lret
push
pusha
push
add
jecxz
adc
sahf
shr
ret
adcl
popf
aam
xor
leave
andb
dec
and
add
test
por
movsb
mov
testl
andb
or
addr16
sti
pop
sub
cmc
das
ret
sub
pop
mov
rclb
push
arpl
xchg
ret
test
lods
push
into
in
jge
bound
dec
popf
dec
cmp
mov
loop
xor
sub
or
negb
mov
test
inc
enter
addr16
imul
fidivrs
rcr
mov
in
pop
outsb
xor
scas
mov
shrb
sub
aas
lods
sahf
jns
mov
dec
test
cmpsb
cld
add
xlat
push
mov
push
std
scas
inc
dec
cltd
fisttpl
or
push
mov
aam
popf
sbb
data16
fstpt
sub
out
add
push
push
jno
jg
shl
aas
mov
xchg
or
pop
rcll
leave
test
aad
cli
out
insb
mov
and
fldl
jns
inc
aaa
jmp
test
pop
dec
mov
mov
ja
sub
rcr
test
sbb
mov
idiv
adc
xor
enter
adc
push
push
pop
jl
aas
jl
xorl
out
inc
incb
xor
push
adc
dec
dec
jno
lds
xor
add
jecxz
xchg
or
sbb
xor
mov
mov
mov
sbbb
lods
mov
movsl
loop
ja
jmp
sub
or
test
adc
sbb
addb
jae
je
pop
add
insb
icebp
mov
add
xor
jge
iret
pop
es
pop
orb
and
xchg
popa
sbb
into
inc
outsl
insl
mov
pop
shll
and
data16
daa
das
xlat
jne
ss
out
adc
aam
sbb
or
leave
cmp
bound
loop
jno
bound
add
shrl
ljmp
mov
lcall
outsb
dec
inc
shll
xchg
cmp
mov
add
lcall
pop
iret
imulb
adc
adc
fbld
in
outsl
ss
dec
cld
pop
or
jb
mov
sub
or
insl
adc
cwtl
mov
out
push
std
xor
nop
or
mov
jle
cmc
cli
loop
mov
movsl
in
ficoms
and
mov
arpl
fmull
pusha
lods
out
roll
insl
mov
xlat
lea
test
dec
pop
mov
push
fsubl
ror
mov
push
sti
out
pop
daa
mov
filds
xor
outsb
mov
jns
out
fidivrl
jge
xor
fs
jbe
mov
xchg
sahf
dec
sbb
in
jecxz
pop
repz
sahf
mov
loopne
outsb
cmp
int
out
mov
loop
clc
popa
sbb
sbb
dec
inc
adcl
loopne
aam
movsl
cmpsl
ss
cmpsb
ds
imul
lahf
sbb
inc
mov
jp
popa
pop
or
cs
sbb
icebp
or
mov
push
enter
inc
xchg
xor
aad
scas
leave
je
lret
aad
jle
xor
popf
repz
aas
stos
push
scas
inc
jno
or
fbld
into
mov
sub
jne
push
fadd
aaa
faddl
inc
sub
je
aad
sub
xor
mov
in
mov
loop
xor
cmp
cs
out
push
shrb
cmp
jmp
dec
out
add
sahf
xchg
outsl
mov
push
outsb
call
addb
sti
sub
inc
test
sarl
jecxz
dec
pop
sarb
jl
mov
add
int3
lcall
push
test
add
mov
mov
pushf
cmp
cmp
xchg
inc
shll
movsl
xchg
mov
fimuls
test
dec
dec
inc
pop
push
mov
jne
sub
jnp
shlb
fidivs
enter
or
dec
repnz
ret
das
push
and
sbb
pop
ficoms
xor
mov
addr16
mov
push
faddl
pop
rcr
adcl
stos
and
outsl
les
lahf
push
xchg
out
cmp
cmpsl
scas
cmp
into
jae
mov
push
push
sbb
xor
fistl
xchg
inc
sar
push
leave
inc
add
cmpl
rorl
scas
pop
outsb
insb
push
repz
insl
xor
sbb
mov
dec
and
adcb
push
les
mov
push
gs
lds
pop
jo
fwait
subb
mov
sbb
test
sbb
and
mov
jmp
cmc
dec
testl
xchg
sbb
fcomip
ret
daa
add
lds
pop
rol
or
gs
cmp
sarb
lahf
cmp
sarl
test
lcall
sbb
repnz
mov
xorl
push
cmp
mov
arpl
jmp
pop
cmp
xor
xor
repnz
ds
sub
mov
sub
adc
dec
mov
in
daa
in
repnz
adc
xchg
adc
mov
push
pop
xor
mov
push
icebp
jl
push
adc
push
pop
movsb
jmp
adc
aas
mov
fadds
push
and
lock
dec
jle
inc
add
movsb
jg
ja
inc
loope
push
mov
fidivs
or
lcall
inc
arpl
add
shll
das
pushf
sub
push
dec
fstp
push
pop
neg
cmp
popf
nop
loope
cmc
or
jmp
add
movsb
xchg
xor
lods
bound
mov
dec
inc
dec
mov
shll
or
cmp
dec
push
lahf
pop
lea
mov
cwtl
mov
dec
mov
es
xchg
sbbl
mov
rolb
addr16
inc
int3
fs
int
pop
popf
inc
icebp
movsb
lods
mov
mov
hlt
mov
jbe
int
jl
cmp
ljmp
push
lahf
stc
jecxz
frstor
repz
xor
lret
add
jne
push
dec
or
xchg
adc
dec
or
flds
imulb
repnz
xlat
adc
xor
insl
xchg
rorl
int
cmp
push
popa
cltd
pop
xchg
or
push
fdivr
movsl
xor
mov
scas
cmp
mov
mov
ja
xchg
xor
lahf
sub
or
dec
pusha
or
push
stc
jb
mov
movb
lds
jp
and
loop
xchg
movsb
ljmp
leave
pop
mov
cmp
xor
popl
gs
pop
cltd
mov
out
jne
daa
shl
push
lcall
sub
nop
jo
adc
pop
or
lods
aam
jmp
mov
mov
mov
and
lret
add
jb
call
in
pop
shrb
shlb
pop
adc
pop
and
or
or
and
stc
scas
or
lahf
outsb
je
cld
mov
int3
fsubl
jecxz
add
pusha
dec
inc
pop
je
mov
aad
popf
icebp
arpl
push
push
jp
outsl
xor
jecxz
cmc
mov
inc
push
dec
mov
jmp
inc
repz
mov
stc
out
mov
mov
sbb
pop
pop
popf
notl
ss
dec
adc
mov
out
lds
movsl
fcmovnu
mov
cmp
lret
xor
mov
pusha
mov
loopne
cli
negb
sub
jns
test
xchg
les
loop
aaa
jnp
shrb
cmp
jnp
mov
into
lods
add
mov
push
imul
js
xchg
push
inc
jl
mov
mov
jns
mov
fistpll
mov
sbb
push
cmp
mov
call
mov
adc
into
pushf
or
or
shlb
and
adc
out
fs
mov
jmp
fldt
xchg
add
adc
lds
iret
add
shrl
add
fiaddl
inc
sbb
cmc
fwait
jbe
adc
cs
or
xchg
cmpsb
dec
lds
cmp
bnd
xchg
mov
scas
popf
aam
or
add
add
push
scas
popa
jmp
push
and
rol
pop
repz
loope
div
mov
movsb
or
or
les
je
mov
scas
movsb
shll
push
push
aaa
mov
call
xlat
push
repnz
jle
stos
mov
sub
sahf
jl
pop
xor
cmp
repz
in
dec
pop
lcall
in
lret
pop
lods
mov
or
add
mov
iret
xor
repnz
and
mov
icebp
and
jno
xor
jbe
sbb
nop
mov
inc
push
mov
in
je
test
je
jle
and
ss
xchg
and
pop
lea
mov
cltd
das
push
adc
cmp
in
mov
in
loopne
dec
xchg
repz
mov
les
dec
int
inc
mov
jbe
int
lret
andb
outsl
sbb
shlb
dec
popa
stos
sbb
push
dec
mov
mov
les
aam
adc
jae,pt
adc
push
das
scas
adc
sbb
ljmp
mov
fldenv
xlat
jno
loope
cltd
shll
pop
jl
adc
bnd
nop
xchg
pop
adc
rolb
imul
gs
lcall
mull
push
mov
mov
es
sub
pop
test
hlt
cli
out
aaa
aas
aam
and
cld
out
into
lret
lock
pop
gs
sbb
fsubs
mov
in
push
in
sahf
xchg
scas
sbb
cmp
and
sbb
pop
scas
pusha
cmp
push
jge
arpl
int
mov
jl
loopne
adc
outsl
ds
cmp
cmpsb
and
cmc
cmp
push
mov
shll
cmp
push
jmp
sub
xor
out
push
lea
add
cmpsl
jno
cwtl
mov
or
inc
adc
hlt
and
xchg
and
mov
cmpsb
insl
xchg
pop
pop
cltd
aas
jo
arpl
inc
in
cld
pop
jne
fldt
mov
add
mov
sbb
insb
ror
subl
lcall
xor
outsb
pop
mov
shll
lcall
mov
daa
pop
dec
aam
inc
add
aad
lods
and
pop
xchg
push
inc
jae
push
addr16
ljmp
push
stc
sbb
pop
mulb
push
cmp
test
dec
push
fs
add
fisttpll
pop
push
cmp
inc
jae
mov
aas
andl
in
das
in
out
fdivrp
insb
js
or
xlat
pushl
mov
iret
movsl
jnp
sub
adc
push
lea
iret
fmul
loop
cmp
das
mov
aaa
js
xor
outsl
jno
xchg
cld
add
lcall
cmp
adc
hlt
push
mov
mov
lock
mov
cs
xchg
shrl
lds
cmp
lret
frstor
add
sbb
lret
jo
hlt
fcoml
lret
push
sbb
shl
repz
lods
lods
mov
icebp
leave
push
ret
sar
sub
push
or
jbe
push
iret
adc
stc
push
dec
xor
sahf
in
adc
lret
and
xor
add
lods
ss
cld
jle
call
pop
push
and
lods
int
jne
clc
cltd
roll
aad
push
xor
add
popa
push
xchg
outsb
hlt
jmp
pop
popa
pop
adc
mov
ret
sub
scas
mov
ds
ficompl
das
movsl
inc
in
add
add
push
inc
leave
mov
mov
and
pop
adc
rcr
ret
mov
jmp
gs
cmp
mov
bound
fmull
pop
xlat
hlt
aaa
lret
in
fcomp
cltd
mov
jmpw
fwait
push
in
les
stc
es
adc
shlb
mov
mov
add
daa
push
int3
mov
xor
add
or
and
idiv
xchg
clc
push
icebp
shr
jle
xchg
cltd
push
std
int3
out
out
shl
out
xor
aaa
xlat
push
loop
ret
jl
test
sbb
aam
mov
jmp
fsubrl
sahf
push
add
hlt
stc
das
push
mov
fidivs
nop
jo
stos
inc
int
adcl
pop
pop
mov
fmuls
mov
adc
or
cmpsl
and
cmp
and
jmp
sbbl
ds
cmpb
inc
lds
sbb
pop
cwtl
push
mov
mov
dec
out
adc
and
test
sbb
push
or
clc
inc
push
mov
jb
fwait
scas
pop
lea
mov
add
xor
addr16
jl
fistpl
ss
int3
loop
inc
inc
inc
cmpl
jle
sub
inc
outsb
dec
mov
inc
xchg
test
and
or
jo
jl
loopew
mov
cmp
rorl
hlt
aas
pop
imul
push
scas
addb
or
pop
sub
popf
mov
loope
aad
push
jmp
shrd
mov
fcom
dec
pop
sub
add
add
rcr
scas
dec
sbb
lret
imul
inc
mov
hlt
lds
out
subb
cld
out
aaa
push
xchg
push
scas
pop
cs
outsl
add
inc
les
sub
sbb
push
mov
sbb
mov
and
mov
sbb
mov
dec
fistps
jp
hlt
mov
lcall
stos
aas
pop
jp
xor
in
pause
outsb
and
or
loopne
pop
jl
mov
fadd
or
std
inc
loopne
fiadds
clc
sub
fcoml
mul
fidivl
mov
scas
jge
inc
hlt
jne
imul
mov
inc
mov
pop
adc
mov
jnp
sbb
add
and
movsb
nop
ret
add
mov
int
cmpps
mov
out
inc
popa
sub
inc
mov
mov
add
push
popa
sbb
arpl
push
shr
icebp
lock
sub
add
call
and
loope
and
mov
xchg
shll
outsb
mov
or
push
out
inc
and
rolb
xchg
test
mov
and
mov
mov
xchg
iret
mov
sbb
call
subb
insl
jns
fs
in
push
mov
pop
repnz
dec
adc
mov
test
mov
jne
aad
sub
and
je
lcall
jb
iret
mov
mov
cmp
or
rol
adc
call
dec
pop
push
lahf
xor
xchg
call
fucomp
adc
xchg
cltd
adc
stos
movsl
mov
mov
push
xor
movsl
stc
cwtl
sub
outsb
out
mov
clc
out
push
push
lea
stos
xor
xor
add
sub
int3
xor
sub
or
xor
aad
into
add
cmp
and
out
add
out
leave
rorl
popa
aam
xorb
sub
into
jg
leave
sbb
xor
lods
rcrl
dec
movsb
cli
add
test
ret
mov
mov
lods
cld
int3
out
hlt
add
xor
rcrb
cmp
sbb
push
or
jne
push
pop
mov
cmpsl
sbbl
loope
test
add
pop
and
shlb
ret
outsl
jno
xor
out
scas
jecxz
push
divb
xchg
ficomps
mov
lret
push
or
dec
data16
in
inc
add
dec
jge
adc
loop
mov
subb
jecxz
sbb
rclb
stos
cmp
std
pop
cmp
adc
gs
sarl
lods
mov
inc
aaa
mov
lods
addr16
shll
in
jb
shl
pop
stos
iret
mov
cmpl
mov
cmp
in
jbe
js
mov
pop
pop
mov
pop
fs
and
jmp
inc
fisubrl
jp
es
test
ftst
push
pusha
xchg
inc
fimuls
pusha
jne
xor
sub
xor
mov
mov
mov
push
jno
imul
nop
push
imul
hlt
pop
sarl
pop
mov
pusha
cmp
dec
mov
and
xor
pop
mov
lock
adc
repz
js
dec
mov
xchg
and
inc
negl
dec
faddp
sub
fwait
in
and
shlb
inc
jmp
int3
lods
mov
mov
leave
clc
mov
rorl
cli
push
testl
cmp
jmp
xchg
cwtl
test
insb
dec
mov
push
movsl
ret
adc
dec
out
lock
mov
repz
mov
jbe
and
sti
sub
mov
push
sub
dec
xor
mov
and
je
cli
xor
sbb
inc
insb
cmp
lret
mov
xor
loop
cmp
lahf
mov
xlat
js
mov
mov
sub
lods
mov
sub
arpl
sbb
jmp
pop
daa
stos
movsb
mov
jecxz
cmpb
mov
dec
test
adc
jo
cltd
and
dec
mov
nop
jle
xchg
sbb
imul
pop
mov
les
shlb
testl
xor
fsubr
mov
jge
mov
loopne
int
xor
scas
rclb
dec
mov
je
ljmp
jmp
mov
das
pop
mov
push
cmc
xor
xor
add
scas
sub
add
or
lret
dec
xorb
mov
mov
sub
or
mov
jg
adc
pusha
pop
test
test
cmp
dec
sub
sarl
mov
mov
std
or
dec
pop
insl
scas
lret
jmp
imul
mov
pop
ss
ret
adc
loope
cmp
push
fcmovbe
ja
xor
loop
dec
out
lcall
daa
test
jae
in
leave
pop
enter
sub
pop
stc
mov
and
or
sub
loopne
mov
xchg
fadds
mov
pop
daa
and
inc
mov
mov
lock
adc
sti
xchg
or
out
xchg
xor
or
fisttpll
sbb
mov
in
mov
jl
push
repnz
std
or
adc
outsb
push
movl
pop
mov
adc
ret
xchg
or
mov
lods
hlt
fstpt
int
fidivs
jge
or
mov
fisubrl
push
pop
int3
mov
imul
mov
mov
in
cli
andl
daa
push
or
loopne
iret
popf
stc
aas
test
test
daa
mov
sub
and
jb
fnstsw
fcomps
stos
lcall
cmp
pop
sbb
pusha
xor
mov
ljmp
into
ljmp
insb
ljmp
cmc
into
jne
shlb
sti
popa
pop
ficoms
xor
test
mov
or
mov
push
jmp
mov
and
fcomps
mov
rcrl
mov
and
popf
cmp
push
push
xchg
or
pop
adc
xor
jmp
popf
js
jp
sbb
sbb
in
and
aad
in
clc
pop
fnsave
adc
arpl
sti
sbb
add
jg
outsl
test
add
iret
sub
jecxz
icebp
lds
insl
pop
dec
adc
fldenv
and
xchg
adc
sub
ljmp
jecxz
enter
xchg
rorb
inc
ja
mov
push
xor
fstp
or
jne
loope
mov
adc
adc
subb
in
loop
mov
mov
cmc
adc
jmp
outsb
push
orl
sar
or
int
push
xlat
jecxz
test
inc
cmpsb
xchg
jns
stos
mov
outsb
mov
jne
and
mov
in
in
sahf
xchg
cwtl
mov
push
xorb
xor
popa
pop
mov
lods
aad
mov
shll
sbb
adc
cmpsb
imul
pop
pop
out
jns
cmpl
and
add
cmc
daa
sub
push
add
ss
test
jecxz
imul
mov
sbb
inc
into
and
test
inc
mov
dec
fstps
bound
cltd
pop
fisubrs
in
and
jae
addb
repnz
movsb
pop
sbb
mov
xchg
sbb
insb
test
je,pn
cmpsl
out
xor
inc
cmpb
sub
dec
enter
in
adc
push
dec
mov
mov
mov
mov
xor
scas
movsl
dec
mov
popa
adc
mov
test
outsl
jne
cmp
fchs
hlt
bound
jb
outsb
pop
push
xor
rolb
lock
adc
dec
xchg
push
ds
add
sub
mov
xchg
je
lret
xchg
sarl
xacquire
dec
push
aaa
xor
push
mov
sub
mov
rcll
jle
shrl
in
mov
orl
nop
dec
lods
xchg
adc
jnp
mov
sbb
data16
xchg
addr16
mov
and
sbb
prefetcht0
lahf
sbb
shrd
jnp
mov
jmp
in
insb
icebp
pop
push
out
movsl
mov
sub
out
into
leave
fidivs
cltd
push
inc
les
fwait
or
push
andl
or
ss
fisubrs
and
in
mov
popa
stc
adc
sub
xchg
imul
pop
vpmulhuw
out
add
mov
gs
push
movsl
pop
cmp
sub
cmp
jo
fildll
hlt
pop
and
int3
push
xor
mov
mov
bound
bound
pop
divb
add
dec
test
cmp
mov
jne
xchg
sbb
gs
add
loope
scas
insb
pop
sahf
data16
xor
mov
sub
cmp
xor
cmp
add
jb
mov
lock
jle
out
je
insl
pop
dec
scas
jmp
mov
cmpb
clc
je
shl
outsl
stos
inc
outsl
jle
jo
out
mov
loop
adc
xchg
jnp
sbb
fcomp
xlat
inc
jno
fs
lret
stc
mov
cmpsl
fimull
cmp
push
and
daa
aad
ret
jg
push
insl
ret
jns
outsb
lock
xor
inc
popa
sbb
sbb
xchg
ljmp
inc
dec
xor
mov
icebp
aas
scas
or
pop
roll
cmp
push
push
dec
xchg
fs
popf
mov
mov
dec
jne
xor
mov
test
push
adc
test
xchg
mov
mov
test
or
lds
andnps
xlat
fldt
fstps
cmp
outsl
xlat
mov
sub
push
mov
add
mov
sub
push
sub
mov
dec
das
insb
mov
sbb
dec
loop
dec
mov
aam
jbe
pop
stos
popl
loopne
repnz
loopne
std
pop
pop
sub
ds
or
xor
mov
shlb
xchg
shrb
cli
je
mov
mov
sarl
push
sub
enter
sub
fsubs
popf
mov
mov
jle
notb
and
mov
fimull
out
mov
mov
sbbl
xchg
nop
pop
sbb
lock
mov
cmp
adc
adcl
sbb
jno
imul
jmp
pop
aad
sti
cmp
mov
sub
scas
scas
pop
xchg
adc
call
push
inc
les
lret
lret
loopne
or
mov
movsb
adc
cmp
scas
inc
jb
fldenv
in
ss
xchg
cmp
in
jp
inc
adc
fnsave
lods
add
sbb
inc
pop
mov
lods
pop
xchg
shrl
sub
jbe
dec
mov
fisubrs
add
push
add
xchg
pop
mov
cmp
fwait
fwait
adc
dec
les
stc
mov
or
mov
add
mov
das
xchg
out
mov
or
pushf
jle
psubusb
and
popf
and
xor
mov
jl
inc
shlb
pop
sub
jecxz
jbe
and
sarl
push
fistl
fsubrl
xchg
imul
negb
outsl
lret
rorb
xor
bound
movsl
jp
test
lret
outsl
sti
jmp
aas
sub
inc
pop
lret
push
mov
mov
repz
enter
pop
push
mov
out
call
jp
cmp
test
dec
cli
xchg
jne
orl
jne
cltd
jle
push
mov
xor
shrb
push
pop
insb
and
mov
hlt
into
mov
andb
lret
cmp
mov
aas
add
inc
fmuls
or
push
sub
fs
mov
or
fucomip
and
jp
lods
mov
push
or
jno
adcb
cmp
and
mov
xchg
jo
jl
add
cltd
push
mov
fstpl
or
das
xchg
cmp
mov
push
cmp
outsl
add
rolb
cld
fistpll
les
jbe
rorb
or
mov
ljmp
add
daa
sar
lret
sbb
add
sbb
es
mov
add
adc
dec
xor
jecxz
out
mov
lret
imul
and
popf
mov
push
xchg
cli
adc
leave
popf
xchg
jae
in
mov
adc
lret
pop
pop
add
ret
cmp
sbb
adc
sub
adc
mov
sub
dec
ret
test
sbb
les
ljmp
lods
add
loop
scas
sub
xchg
imul
fwait
sti
enter
shrb
or
adc
pop
scas
mov
loope
inc
in
and
bound
cmpsb
jns
dec
cmpsl
push
inc
pop
mov
int
les
and
sbb
jbe
add
mov
int3
mov
push
ret
adc
rcrb
xchg
insb
divb
mov
lods
cli
mov
mov
mov
mov
ret
bound
mov
push
or
mov
jb
pop
cmpl
out
mov
xorb
movsb
sahf
outsl
mov
sbb
mov
mov
jp
scas
mov
cmp
lods
xchg
and
xchg
dec
and
mov
lahf
repnz
cmpsb
sbb
je
lea
sahf
mov
lret
int
roll
push
jecxz
sbb
and
in
call
hlt
xchg
cmp
jge
push
xchg
fnstenv
push
jbe
pop
das
aas
fistpl
jne
movsb
call
sarl
out
ja
je
xor
mov
sbb
mov
bound
cmp
mulps
ds
adc
cmpsl
sub
mov
jno
mov
mov
clc
dec
and
mov
inc
pushl
cmp
mov
idivl
in
inc
jmp
in
jbe
jo
lods
in
push
add
cld
pushf
iret
mov
fildl
ficomps
push
rcrl
ss
out
xchg
mov
sbb
ret
and
les
xchg
mov
xor
in
into
jl
imul
pushf
mov
out
adc
mov
fs
in
dec
mov
scas
add
jmp
outsl
leave
pop
mov
mov
rcrb
inc
xchg
test
jno
xor
cmc
and
ljmp
mov
sbb
push
cwtl
cmpsl
and
dec
insb
lock
cmp
mov
cs
popa
jne
lods
cmp
push
test
jg
xchg
lea
xor
aad
out
das
scas
xor
es
nop
das
adc
push
lods
push
inc
sbb
mov
ds
loope
shrl
jb
rorl
mov
mov
dec
mov
loop
rcrl
cmp
out
cmpsb
pop
or
push
pusha
or
call
repnz
jmp
dec
add
or
lds
jne
mov
mov
mov
cmp
mov
orb
mov
js
xchg
scas
cmpsb
mov
lahf
dec
dec
add
sub
popf
xchg
adc
cmpb
and
cltd
cld
in
adc
push
adc
mov
pop
pop
sbb
pop
in
aas
mov
cmp
adc
scas
pop
or
iret
pop
pushf
pshufw
test
cmp
pop
cwtl
testl
jmp
std
dec
inc
inc
outsl
jb
frstor
testb
mov
popa
xchg
das
cmp
pop
out
enter
pop
cmpsb
mov
sbb
repnz
sub
fcomi
inc
mov
mov
pushf
jo
clc
addl
mov
inc
push
and
xchg
adc
push
pop
je
cmp
dec
fnsave
dec
daa
mov
loop
xor
pushf
jb
and
in
and
cmpsl
push
iret
scas
lcall
ret
std
xchg
movsb
nop
nop
push
je
lcall
mov
inc
sub
jle
js
jb
xor
mov
vmwrite
fadds
addl
mov
cmp
lods
test
jecxz
out
jo
ret
sub
xchg
inc
fistpl
aad
in
fnstsw
sahf
lods
mov
adc
test
filds
push
xor
dec
adc
sti
es
mov
ds
xchg
leave
addb
int
cld
sbb
outsl
sahf
dec
pop
icebp
jno
xchg
dec
adc
sahf
movsb
loopne
sbb
cmp
push
mov
push
dec
sbb
and
lret
pop
out
rolb
decb
rcrb
mov
dec
sbbl
and
cmp
push
jb
inc
xchg
sbb
pop
sarb
je
fsubs
std
mov
lret
aam
push
call
addr16
aaa
xchg
push
gs
mov
push
and
push
scas
insb
loop
call
and
pop
inc
gs
add
cltd
push
mov
jo
push
negb
sbb
lret
mov
imul
pop
jno
or
les
cmp
lea
dec
out
aas
mov
xor
aad
test
xchg
mov
ljmp
mulb
scas
out
dec
into
xor
sub
mov
sbb
sub
or
dec
pop
and
scas
add
leave
cltd
mov
mov
loope
inc
dec
in
andb
mov
jl
fisubrl
hlt
xor
jne
mov
cli
cmpsb
inc
jmp
mov
fildl
pop
pop
shrb
outsl
mov
sbb
push
imul
xchg
jecxz
mov
inc
hlt
jne
fisubs
or
jb
mov
inc
pslld
jmp
mov
loope
mov
adc
jbe
enter
jmp
insl
jnp
jo
sbb
or
pop
mov
cmp
cmp
cltd
mov
xor
cmp
cld
mov
jne
add
cmp
cmpsl
orb
in
ret
fucomi
mov
jne
jo
and
cli
cmp
add
mov
sbb
mov
leave
fmull
xor
sub
add
cmp
push
in
mov
addl
insb
xor
pop
aam
sub
leave
and
test
sahf
jmp
xlat
mov
sub
in
gs
lea
push
addr16
adc
mov
je
sbb
mov
daa
push
ja
mov
insb
lret
mov
sbb
aad
xchg
xor
loopne
pop
inc
or
lds
mov
std
es
lret
test
scas
lods
push
es
call
adc
repnz
movsb
adcb
shlb
and
notb
pop
fidivrl
mov
push
inc
jae
es
mov
and
shrl
mov
cmc
add
adc
jl
rcr
lret
fcmovbe
ljmp
dec
loope
popa
fldt
dec
adc
out
cmp
imul
dec
add
aam
jno
xor
or
sub
cmc
popa
scas
xchg
cwtl
cmp
loop
add
and
pop
daa
out
inc
dec
push
push
int3
push
fmull
dec
inc
insl
xchg
mov
call
and
cmp
test
inc
jne
jnp
mov
and
bound
lcall
or
fsubr
cmp
pusha
mov
push
fdiv
pcmpeqb
sub
pop
inc
pop
xchg
in
jo
pop
jne
cltd
ja
sbb
inc
jnp
outsl
mov
cmp
mov
xchg
push
scas
pop
sti
inc
out
push
push
aam
out
out
inc
pop
mov
cmp
clc
icebp
fld
nop
out
and
inc
mov
adc
cmpsl
fstps
cmp
xor
stos
loop
or
xor
mov
and
or
xchg
mov
loope
arpl
pop
test
mov
loope
xchg
std
movsl
ret
or
popf
inc
mov
stc
and
jbe
push
xchg
lods
sar
js
loopne
imul
mov
sbb
cmp
stos
inc
xchg
mov
fildll
jl
jb
jecxz
mov
inc
mov
jg
dec
fidivrs
mov
adc
xchg
mov
adc
pop
sbb
movsb
icebp
mov
shlb
or
in
out
mov
cmc
xchg
sub
mov
mov
rcl
sti
fcoms
inc
sar
jno
in
inc
cwtl
out
in
inc
loop
pop
pop
sub
or
lds
mov
loope
add
jb
mov
movsb
mov
sarl
leave
or
and
jb
je
fwait
add
out
mov
push
insb
repz
sbb
popf
stc
pop
popf
stc
jae
test
mov
pop
cmp
lds
cmc
and
adc
fistpll
dec
jge
pop
xor
xlat
int3
or
dec
add
pusha
jno
pop
sub
push
out
aad
sbb
fucomip
add
sub
xchg
push
lcall
faddp
mov
xorb
fld
mov
rcrb
sub
adc
pop
mov
or
cltd
cmpl
sbbb
jae
mov
ficoms
bound
into
push
jp
sub
jl
movb
fcmovne
out
lea
pop
mov
ds
aaa
adc
xchg
pop
mov
sti
pop
adc
ja
cmpsb
and
mov
jmp
pop
sub
in
shrb
adc
cmp
lret
adc
inc
jp
fsubr
out
pop
bsf
and
jg
xlat
insb
fs
ficoms
lock
out
cld
leave
test
test
into
push
lock
sahf
jbe
ljmp
dec
mov
cmpsb
xor
mov
js
repz
ret
pushf
mov
sahf
imul
xchg
faddp
push
mov
mov
push
or
cwtl
sub
cs
mov
sbb
push
outsl
insl
loopne
and
jnp
and
mov
jg
add
pop
clc
pop
out
or
stos
push
dec
dec
mov
mov
je
movl
pop
push
adc
idivb
shlb
clc
xor
sbb
bound
adc
sbb
xchg
lock
lods
in
clc
sar
dec
cli
fdiv
out
xchg
fsubl
xor
sub
cld
out
pop
sub
jbe
mov
lock
test
ja
dec
adc
hlt
push
cld
push
stos
jge
jle
mov
lods
clc
sti
xchg
sub
mov
xchg
or
rcll
mov
push
stc
push
lret
lret
push
sbb
imul
mov
test
test
or
mov
sub
xchg
jmp
sbb
ret
jnp
and
sar
xchg
mov
mov
sub
cmp
jb
pusha
push
addl
cmc
add
leave
iret
dec
dec
repz
push
jae
dec
sbb
inc
xor
sbb
mov
dec
push
fisubs
jle
and
cmp
aad
ja
mov
ret
bound
or
arpl
nop
adc
inc
xchg
xchg
scas
inc
jle
andl
push
test
sbb
lock
stos
mov
int3
sarl
leave
jns
or
cmpsl
test
js
int
xor
lods
mov
lock
sub
movsb
push
sarb
stos
fsubrs
movsl
jo
ficomps
enter
inc
cmpsl
cwtl
jle
ficompl
movsb
sbbl
loope
inc
mov
sub
insl
ds
pop
inc
inc
cmp
mov
cmp
adc
repz
and
jo
push
js
loope
test
jl
xchg
mov
cmp
cld
push
push
sub
popa
xchg
das
cmp
xor
sub
mov
add
mov
xchg
sarl
mov
lcall
cltd
aad
mov
cmovg
cltd
sbb
add
ds
mov
pop
jno
mov
sub
mov
sub
mov
shrl
sbb
pop
test
outsl
mov
es
loope
insb
jle
es
dec
push
or
scas
lcall
cld
sbb
fsubp
shrd
ja
iret
mov
ret
jge
gs
loope
mov
push
out
jg
in
lea
push
mov
jb
ret
daa
idivl
loop
jne
jmp
push
pop
push
into
push
enter
xsha256
cmpsb
nop
jnp
xchg
fisubl
add
mov
sbb
jle
jns
push
pop
sub
adc
sub
roll
inc
add
stos
dec
inc
dec
fwait
pushf
shrl
aad
pop
jmp
rsqrtps
inc
cmp
cmp
xchg
sub
push
cmp
stos
clc
jae
ljmp
repz
xchg
jb
fisubs
pop
jp
sbb
in
iret
add
ja
jbe
loopne
mov
pop
pop
das
or
adc
add
cltd
push
rol
out
push
and
out
mov
shr
in
xchg
and
fs
insl
cmp
adc
xor
shll
and
arpl
scas
je
ret
cmp
xor
and
test
ss
mov
cs
adc
jmp
shll
fidivs
dec
mov
hlt
les
sub
test
clc
mov
in
test
sahf
sarl
jae
repnz
and
lret
cltd
cmpl
aas
add
filds
cwtl
mov
fadds
adc
test
pusha
loope
xor
dec
inc
ja
inc
and
sub
fwait
je
mov
int3
shrl
into
pop
xchg
jle
mov
negl
xchg
mov
je
inc
mov
pop
shrl
in
icebp
mov
leave
sbb
movsb
lret
or
icebp
pushf
decl
sub
jnp
lcall
ja
inc
mov
jle
xchg
icebp
iret
cmp
jo
dec
mov
or
test
lret
jnp
mov
and
jbe
in
in
pop
or
jne
out
popf
inc
or
inc
pop
aaa
or
and
cmp
push
cltd
inc
sbb
leave
push
mov
popa
mov
pop
push
sbb
je
mov
mov
jg
lods
mov
cmpsb
xlat
sarb
gs
adc
outsb
and
inc
sub
in
add
push
hlt
cmp
mov
mov
push
leave
push
loope
lea
sub
aam
lea
sti
ss
outsl
jge
and
adc
decl
pop
xorb
xor
pop
add
cli
fpatan
xor
push
stos
sub
outsl
stc
xlat
jecxz
xchg
stos
fwait
int
inc
adc
jle
or
push
iret
fwait
lods
dec
popa
and
adc
mov
jbe
mov
mov
loop
mov
inc
cmp
pushf
jbe
mov
mov
inc
ret
cmp
push
jo
sub
cmp
std
lods
mov
pop
in
mov
sbb
cs
out
xchg
or
hlt
sti
hlt
xchg
out
push
or
mov
scas
sub
test
lds
enter
inc
pmaxub
jl
popf
sub
mov
addr16
jne
adc
rclb
in
mov
ds
hlt
jns
mov
dec
orl
jns
clc
bound
test
xor
or
xlat
insb
dec
jns
sub
cld
push
pop
xchg
cltd
sbb
jns
fmuls
movsl
ja
test
mov
shr
jne
xor
call
popl
inc
inc
test
sub
and
jl
jno
inc
in
int
lret
or
shrl
push
pop
ljmp
repz
ret
cmpsl
ret
jns
divl
je
stc
ret
pop
inc
cmpsb
fs
inc
or
mov
sbb
aas
not
jb
and
push
fstp
out
aaa
ds
ret
sbb
jl
jge
or
shlb
xchg
push
lcall
clc
xor
push
cwtl
mov
and
xchg
imul
xchg
pop
push
mov
sbb
lock
scas
jnp
stc
movsb
aad
imul
jbe
xor
add
dec
dec
in
shrb
out
mov
or
jl
leave
mov
mov
cmp
xor
inc
xchg
fldcw
push
mov
int
mov
fwait
sbb
rorb
jno
adc
ja
ror
or
ljmp
lahf
push
popf
lret
aam
enter
xor
or
pop
in
std
cltd
loope
call
jae
inc
and
roll
cmp
mov
push
cmp
repz
pop
sbb
dec
mov
inc
jne
jecxz
rcll
test
dec
or
aas
std
int3
and
adc
lahf
test
or
sbb
loop
lret
test
lret
leave
push
push
ret
outsb
movd
jbe
xor
dec
mov
jl
sbb
mov
push
sub
jmp
aad
sub
lret
fstl
jns
nop
cmp
scas
sti
test
mov
inc
sub
movsb
popf
push
scas
in
adc
lods
ret
inc
push
mov
mov
lcall
ret
jg
mov
jbe
inc
scas
add
mov
inc
xor
dec
daa
pop
sbb
mov
push
fstp
push
rep
xchg
push
aaa
xchg
push
jbe
pop
mov
test
js
dec
mov
nop
mov
adc
int3
jg
mov
inc
mov
adcl
clc
jo
xor
dec
fwait
sub
popf
add
and
addr16
fiadds
les
cmp
inc
pushf
mov
dec
jg
push
sub
ret
in
imul
xchg
movsl
insb
mov
xor
cwtl
cs
clc
insl
in
sti
paddusw
aaa
cs
xchg
aam
adc
nop
testb
mov
push
mov
in
xor
xlat
push
loopne
aad
push
sub
mov
push
xchg
adc
stos
test
hlt
xchg
cwtl
mov
or
sbb
nop
mov
ljmp
push
lods
mov
ret
sbbl
inc
mov
insl
lods
sub
prefetch
or
dec
incl
aas
fimuls
cmc
xchg
out
mov
imul
xchg
or
fisubrl
mov
jbe
popl
sub
add
int
out
adc
lcall
fwait
leave
imul
lret
jge
or
ffreep
test
packuswb
and
lret
mov
es
nop
lret
inc
mov
mov
sar
mov
pop
add
jbe
cmpsb
lahf
dec
in
dec
jb
out
mov
rorl
mov
das
mov
arpl
popf
mov
push
or
jae
in
inc
inc
mov
mov
test
daa
inc
mov
ljmp
pushf
mov
mov
jnp
fbstp
mov
mov
pushf
cmp
sbb
sbb
addr16
sbb
sub
bound
jae
shrl
dec
jne
pop
ret
dec
push
mov
cli
jecxz
xchg
sub
repnz
es
jae
jl
jge
xchg
dec
cli
dec
mov
pop
lods
push
xchg
adc
pushf
ror
add
cmp
xorl
enter
sbb
leave
outsl
movsl
sbb
ds
lret
xchg
xchg
inc
test
loope
sbb
mov
mov
lods
sti
push
test
lods
pop
sbb
mov
adc
inc
pusha
add
sub
lcall
dec
lock
fs
or
sbb
dec
pusha
cmc
test
add
or
shll
stos
out
int
stos
xchg
ss
pop
dec
mov
popa
inc
cmpxchg
leave
int
mov
pusha
loop
sarl
lea
arpl
jp
test
in
cmp
int
push
push
lret
cmp
aaa
cmp
dec
pop
or
push
ljmp
fildll
repnz
mov
pop
fmul
notl
pop
rcl
or
rolb
out
cmc
jp
adc
repnz
mov
xchg
dec
or
jge
jle
gs
aas
cwtl
shl
movsb
and
pop
in
xor
or
les
pop
mov
aas
cmp
push
es
pop
sbb
scas
pop
arpl
sub
and
add
imul
push
fwait
in
es
adc
pop
sub
out
addl
fstpt
ds
sbb
or
data16
mov
test
jbe
cmp
ds
or
mov
mov
xlat
jl
scas
xlat
pop
cmp
in
sbb
cli
fisubl
inc
stos
inc
dec
add
ljmp
xchg
jno
ja
leave
and
pushf
jnp
cli
mov
jno
jb
jns
fidivrs
aam
and
loope
mov
fisubs
and
hlt
pop
icebp
cli
mov
out
xchg
jns
mov
mov
or
mov
stos
push
pop
xor
dec
xlat
cltd
xor
mov
aaa
pop
mov
flds
es
sbb
adc
push
add
inc
sub
sti
stos
pusha
sub
ds
in
adc
lods
sbb
pop
sub
mov
aas
mov
dec
cmpsb
pushf
add
loopne
jae
add
pop
movsl
call
inc
jg
popa
inc
mov
push
cmpsl
and
test
ror
jg
adc
icebp
je
push
or
nop
add
lea
rcrl
bound
mov
loop
inc
imul
rorb
call
testb
ficoms
dec
jl
fcom
ja
test
fcoml
lea
push
sbb
cltd
sbb
cmp
push
push
mov
sub
subb
inc
subb
mov
in
pop
inc
push
dec
push
lahf
pusha
dec
add
jp
bound
cltd
pop
stos
mov
fdivl
dec
push
push
mov
xlat
cmp
lret
jmp
or
cmpsl
pushw
push
xchg
cmp
cmp
mov
mov
pop
dec
xor
shl
jae
cmpsl
mov
jne
lret
mov
movsl
or
cli
xor
clc
into
push
fsubr
iret
add
jbe
push
outsl
mov
lret
test
cmp
repz
or
stos
mov
inc
movsl
rol
jnp
lahf
sbb
out
xchg
ljmp
negl
adc
xchg
mov
pop
cld
inc
push
in
loope
pop
je
adc
push
insb
ret
insl
std
mov
pop
jae
movsl
dec
sbb
mov
out
stos
mov
mov
iret
mov
jmp
sub
dec
dec
mov
or
push
or
or
lods
divl
cltd
test
pusha
ljmp
test
inc
out
mov
and
mov
ror
xor
push
dec
aaa
jge
aam
pop
inc
ja
stc
add
mov
sahf
test
rep
pop
inc
push
je
and
mov
cmp
rorb
push
cmpsl
imul
dec
sbbb
shl
xchg
out
sbb
ljmp
inc
or
sbb
lret
je
fsubl
jo
in
test
push
add
dec
pusha
loop
bound
adc
jnp
popf
in
jl
adcl
jl
lret
adc
loope
ss
sub
push
mov
loopne
shrl
cld
shll
xlat
ljmp
std
rclb
pop
int
jne
jl
faddl
pop
mov
mov
enter
sbb
xchg
adc
outsb
xlat
stc
and
xor
int
inc
inc
mov
or
push
dec
test
dec
adc
sub
pop
cmpsb
fsts
add
pop
cmp
or
mov
movsl
cmpsl
aaa
jl
xchg
sub
inc
xor
sub
mov
mov
inc
ror
cmp
gs
cltd
mov
cmc
mov
ds
inc
adc
lds
daa
dec
inc
sbb
outsl
and
cmpsb
jle
pop
push
dec
cmc
movsl
das
imul
icebp
push
mov
sub
notb
xchg
jns
inc
aam
lcall
out
lahf
sub
sahf
or
lcall
movsl
adc
xchg
cmc
outsb
push
push
and
sub
imul
add
sub
pop
inc
push
add
lret
call
dec
pop
js
sbb
or
repz
push
adc
cmp
movnti
popa
inc
cmpsl
jecxz
xor
mov
mov
into
cwtl
fs
lock
pushf
xchg
notb
add
and
bswap
adc
push
xchg
and
es
cs
inc
xchg
xchg
mov
xor
add
jl
mov
test
sahf
into
push
rorl
mov
cmc
subb
sbb
push
dec
and
sbb
add
xchg
cmc
sub
fwait
cld
inc
add
les
les
add
pop
imul
out
push
jb
add
mull
push
pop
in
xchg
sti
cmp
pushf
push
mov
int3
inc
insb
cwtl
aam
imul
in
mov
stc
and
test
into
pop
nop
cmp
outsl
push
mov
xchg
mov
mov
clc
cld
movsl
mov
out
lret
out
push
shl
adc
pushf
rcrb
ret
xlat
pop
fs
int
or
xor
push
aam
jnp
popf
fwait
cmp
inc
add
in
cld
push
xchg
int3
and
cld
shlb
inc
cmpsl
daa
mov
and
icebp
sti
mov
jl
lds
push
mov
ds
adc
dec
jno
das
ficoms
out
jl
xor
sbb
mov
stc
or
jae
push
cmpsb
pop
sub
mov
mov
das
cmp
je
je
mov
dec
jo
push
cmp
and
shll
xor
dec
sbb
cltd
push
insb
push
dec
or
addr16
mov
cmp
xor
dec
lahf
sbb
out
inc
mov
sub
lret
jbe
inc
push
leave
jno
into
mov
les
xchg
ljmp
iret
fstps
les
xchg
hlt
xchg
in
xlat
test
cld
out
dec
and
ret
subb
or
sbb
xor
scas
or
aad
je
data16
jp
cmp
notl
dec
stos
adc
mov
mov
jae
loope
psrld
sbb
and
add
mov
jge
clc
repz
aad
lock
mov
fisttpl
hlt
sub
int
add
pop
xor
cmp
dec
add
js
ljmp
scas
out
and
inc
fs
addl
and
lock
sbb
and
inc
add
cmc
and
test
mov
adc
out
sub
in
fadd
dec
stos
xchg
or
xor
popa
std
push
pop
movsb
ljmp
mov
je
mov
mov
adc
pop
dec
iret
inc
out
pop
mov
mov
push
push
test
mov
mov
sarb
testb
mov
xchg
test
xchg
jmp
mov
push
mov
push
sbb
mov
into
out
and
pop
or
adc
cmpsb
clc
shr
push
ficomps
bound
inc
loop
jno
bound
sub
cmp
out
int3
sbb
imul
cmp
adc
or
frstor
inc
hlt
out
imul
into
jb
bound
out
fs
inc
popf
rcrb
mov
pop
and
mov
fisubrs
mov
mov
imul
adc
dec
jns
int3
jbe
nop
hlt
sbb
or
loop
add
mov
mov
cwtl
test
sbb
dec
aaa
aam
lods
sub
sub
or
sti
mov
or
push
xchg
shlb
jns
mov
jecxz
test
je
mov
fxch
ror
xor
movsl
push
sub
push
and
stos
pop
xor
xchg
fwait
clc
xchg
out
aaa
and
cmp
mov
inc
loope
mov
das
ret
xchg
icebp
push
xorb
int3
cld
les
es
aas
dec
sar
popf
out
bound
clts
xor
testb
std
jb
negb
cs
shrb
fmuls
into
or
loop
test
imul
outsl
cmpsb
jmp
int
jae
mov
mov
sub
aas
aaa
pop
idivl
mov
or
push
out
dec
sbbb
push
arpl
mov
repz
outsb
pop
inc
cwtl
nop
std
std
inc
test
mov
sbb
adcl
rcll
and
sti
out
shlb
xchg
mov
pop
cmpsl
inc
scas
cmp
sbb
pop
adc
mov
sahf
and
jne
pop
loopne
inc
lret
leave
cmpsb
popa
lret
xchg
icebp
xchg
dec
push
int
icebp
xchg
add
std
pop
aas
dec
test
scas
cmpsl
inc
out
test
hlt
pushf
add
dec
jae
cmp
or
adc
popa
or
mov
mov
cmpsb
add
push
lcall
ficoml
pushf
aam
in
icebp
jne
add
push
in
mov
mov
stos
leave
sbb
ss
insl
inc
std
mov
or
fstpl
push
jecxz
and
mov
sbb
das
mov
andb
push
aad
pop
jne
outsl
mov
mov
lods
inc
fsubrl
and
je
int3
sbbl
mov
adc
cmp
mov
mov
jb
pop
xchg
or
jg
xlat
mov
xchg
cld
xlat
pop
adc
cmpsl
cmpsb
adc
or
lock
movsl
fisttpll
xchg
cmp
inc
sub
push
insb
cld
push
cmp
adc
dec
add
out
fstpt
sbb
mov
and
leave
sbb
fs
mov
xor
dec
lods
lea
aas
lret
pop
pusha
daa
imul
sub
notb
lea
rol
mov
cmpsl
and
repz
mov
adc
orl
shll
or
out
adc
add
dec
sub
sbb
mov
fistl
fucomp
iret
mov
or
sub
neg
fcom
into
fwait
es
cmpsb
mov
push
out
jp
call
xor
jmp
cld
mov
push
cmp
xchg
or
les
pop
aas
mov
push
mov
aam
mov
test
mov
imul
into
or
pushf
test
sti
jp
insl
mov
add
mov
mov
mov
div
jmp
mov
xchg
sub
in
lock
jmp
in
call
enter
push
out
imul
insl
imul
xchg
pop
and
lods
repnz
fiadds
xor
pop
jae
xorl
xor
iret
imul
stos
dec
xchg
cmpsb
mov
rcrl
and
xor
sbb
add
gs
jo
into
jg
int3
or
xchg
pop
out
push
sub
xor
fistps
mov
adc
pop
xchg
es
push
dec
stc
xlat
imul
cmc
adc
subb
cmp
imul
ljmp
xor
add
loopne
pop
jae
fbld
or
push
ds
push
add
mov
add
pop
xor
enter
adc
ss
rorl
cmp
mov
and
pop
and
inc
jmp
push
add
sub
pop
repz
sbb
lds
rorl
xor
aaa
out
sub
cli
test
roll
ds
inc
insb
nop
rorl
ljmp
movsb
cmpsb
and
cmovo
lcall
cmp
sbb
adc
xor
xchg
mov
mov
add
nop
push
jle
jb
and
xchg
cmpsb
mov
push
sahf
cmc
dec
jb
jl
cmc
xor
insb
ficompl
stos
sbb
push
xchg
and
scas
add
mov
xor
lods
sti
cmp
insl
and
push
add
push
pusha
mov
insb
xor
mul
adc
xchg
xlat
inc
add
cwtl
dec
add
jle
jle
cmpsl
add
out
mov
insb
movsb
jp
xor
loope
xchg
enter
pop
pop
push
jl
pop
outsb
sub
hlt
mov
in
icebp
hlt
mov
adc
xor
flds
outsb
sbb
sub
fcomps
ret
sbb
add
and
push
lods
dec
fadds
stos
gs
dec
and
mov
push
ss
out
cwtl
push
cmpb
test
addr16
outsl
xor
adc
mov
iret
inc
sbb
pop
sub
or
in
fsubrs
es
lcall
sbb
daa
pop
pop
enter
leave
nop
sti
adc
mov
in
pop
mov
and
push
ffreep
and
ret
popa
mov
mov
mov
loope
sbb
jb
and
loope
push
inc
cmp
sbb
cltd
xchg
fs
dec
daa
cmp
inc
in
mov
lret
xchg
push
scas
sbb
push
xchg
aad
xchg
scas
dec
or
es
ljmp
popf
inc
or
xchg
xchg
data16
hlt
pushf
icebp
mull
add
xchg
sub
adc
enter
ret
mov
xchg
push
outsl
xchg
sub
xor
fcmovbe
push
imul
cltd
xchg
xchg
insl
nop
mov
or
mov
dec
out
pop
mov
pop
sub
jae
addr16
hlt
rcrl
arpl
repnz
pop
fyl2xp1
loope
test
inc
sbb
ret
sub
mov
jb
data16
jo
cwtl
ret
fmulp
das
repnz
addr16
cmp
inc
out
into
push
test
insl
push
push
jns
or
sbb
adc
pop
sbb
mov
jns
dec
dec
notl
pop
std
outsl
cmp
inc
jg
sbb
les
inc
jns
ret
xchg
xchg
decb
shrl
jmp
imul
add
xchg
mov
arpl
stc
iret
cmc
repnz
scas
xchg
ret
daa
fcmovnbe
jl
or
add
or
sub
or
scas
std
push
into
dec
pop
add
orl
fisubrl
orb
inc
mov
mov
inc
mov
movsl
jle
incl
jnp
inc
inc
aas
push
add
shrl
mov
jno
adc
iret
cmpsl
cmc
mov
adc
testl
push
outsl
mov
push
dec
out
inc
push
xlat
jmp
icebp
inc
sub
inc
add
clc
mov
pusha
inc
jge
sbb
adc
xrelease
inc
jno
fimuls
add
fs
test
pop
sub
lds
mov
jg
push
pop
aas
or
std
fdivs
jo
mov
sub
loopne
pop
add
lret
mov
dec
push
or
cmp
add
push
nop
dec
pop
sbb
das
addl
cmp
std
pushf
mov
jns
std
jne
pop
daa
xchg
mov
xchg
jl
jmp
jmp
pop
push
frstor
add
popa
les
movsl
mov
pop
je
pop
mov
in
push
push
add
out
sarl
xor
mov
pop
mov
popf
push
mov
xor
and
mov
sbb
inc
mov
negl
ret
jg
xor
xorb
aaa
mov
cwtl
jmp
pop
dec
push
pop
cmp
std
shlb
sbb
sbb
or
cmp
mov
sbb
aad
pop
jmp
push
scas
mov
mov
pop
movsl
movsb
mov
insl
dec
lea
ret
mov
mov
out
push
push
mov
mov
scas
insb
cmpsl
xor
sub
daa
dec
pop
mov
cmp
popf
stos
bound
insb
in
dec
push
inc
and
and
bound
sti
jmp
sbb
lcall
daa
sbb
push
dec
mov
pop
das
adc
ret
ss
mov
xchg
ja
push
and
fidivl
loop
leave
mov
fwait
mov
movsl
movsb
call
aam
sbb
xchg
jns
mov
add
popf
adc
cmp
fcmovu
cmp
stos
movsl
inc
push
sbb
jb
and
lods
mov
sahf
dec
cld
imul
jns
call
push
jecxz
rclb
jb
mov
jle
jp
adc
cli
cmp
ds
ret
sbb
lock
pop
cmc
jo
jge
sub
in
xor
fimuls
test
jl
inc
imul
gs
xchg
stos
xchg
insl
pop
inc
pop
dec
jne
nop
mov
scas
sti
push
sarl
xor
lret
inc
cmpb
out
fisttps
dec
push
stos
pop
je
repz
adc
data16
add
imul
pop
mov
or
push
js
fcomip
add
pop
jns
sbb
inc
sub
jnp
aas
and
inc
ret
push
xor
xchg
jae
dec
jo
shl
dec
adc
icebp
cmpsb
rolb
and
xchg
nop
sbbb
or
icebp
sbb
clc
stc
sub
add
ja
ficoml
fisttpll
das
cmc
test
adc
adc
cmp
mov
into
pop
pop
into
lahf
outsb
push
cwtl
mov
cmp
xor
std
int3
out
or
stos
cmpsl
mov
add
jne
fdivr
sbb
hlt
dec
enter
int
cli
loop
orb
ret
jae
xchg
push
mov
inc
cmovb
and
fwait
and
and
lcall
sbb
xchg
sub
fiadds
in
and
lock
cmc
jne
mov
or
xchg
pusha
push
roll
mov
lret
pop
jo
add
jge
sub
sub
jo
sahf
push
xchg
pop
jb
cmc
add
insl
scas
pop
into
movsb
cli
or
ja
dec
bound
dec
add
pusha
sbbb
fisubrl
negb
jmp
xchg
ftst
fnstsw
dec
or
shlb
jns
and
je
cmp
push
in
pop
mov
pop
into
shrl
sarb
inc
jo
cmpsl
jae
jg
add
loopne
adcb
call
mov
xchg
cmp
lods
in
cmc
andb
loopne
xchg
iret
repz
out
leave
mov
data16
pop
push
fisttpl
adcb
shlb
loope
les
jnp
shrb
pop
bound
xlat
adc
jge
je
sbb
fidivs
out
cmp
add
test
scas
repnz
hlt
push
push
loope
ss
icebp
pop
mov
cmpsb
test
inc
pop
sub
cmp
addr16
ficompl
rol
pop
je
cmp
xor
pop
push
or
je
ret
and
sbb
notb
mov
jge
pop
outsl
out
outsb
sbb
sub
cltd
pop
pop
pusha
test
lods
jbe
outsl
cld
pop
popf
lcall
out
push
in
cmpsb
repnz
add
cmp
mov
subb
pop
pop
jmp
call
int
jo
pusha
outsb
lea
mov
aad
inc
notb
lcall
mov
cmp
cmc
mov
pop
pop
in
test
aas
scas
jb
rcl
pop
test
xor
push
inc
cltd
add
dec
sub
mov
mov
into
xchg
popf
lea
fsubrp
mov
adc
xchg
push
aas
notb
xchg
mov
jno
xor
push
mov
fdivl
cmp
xchg
sbb
sti
insl
popa
sub
fwait
jg
outsl
into
jl
add
in
push
jl
jne
mov
cmp
mov
mov
push
movsl
inc
adc
int
in
cmp
ljmp
mov
add
add
xchg
mov
pop
mov
push
fisttpl
lods
add
mov
sub
or
bound
pop
cli
popa
in
pop
pushf
jg
jbe
out
mov
xchg
les
sti
sub
fadds
cld
and
std
sub
push
dec
jecxz
sub
cmp
mov
xor
clc
xchg
dec
fildl
push
mov
iret
addl
divb
call
pcmpeqd
int3
and
xor
cmp
in
fwait
pop
iret
xlat
ficoms
and
cli
mov
cld
es
hlt
daa
cltd
dec
dec
clc
popl
out
popf
pop
and
push
jmp
push
shlb
sbb
push
mov
jecxz
flds
sbb
push
int
mov
icebp
cwtl
jg
lods
jmp
pop
add
das
adcl
adc
mov
lret
push
pop
pop
push
and
mov
add
sbb
sub
inc
mov
orl
lret
fdiv
gs
sbb
es
mov
adc
icebp
xchg
inc
mov
ret
cwtl
sub
out
shl
jae
xor
sub
ds
imul
jnp
xor
mov
push
or
mov
adc
sub
push
scas
mov
andl
jmp
mov
mov
sbb
shlb
pop
push
pop
or
mov
aaa
loope
repnz
aas
incb
cmc
mov
xchg
pop
roll
cli
pop
js
mov
lret
loopne
xchg
mov
pop
xchg
cwtl
sbb
adc
or
outsl
les
dec
mov
push
inc
adcb
scas
lcall
movsl
cmpsb
enter
dec
dec
push
cmp
xchg
fs
fidivrs
loop
dec
iret
dec
ret
outsb
stc
bound
push
push
sbb
dec
push
inc
repz
outsl
and
cs
outsb
scas
icebp
cmp
pop
ljmp
fwait
das
xchg
test
sub
add
les
cmp
scas
dec
push
sbb
cmp
mov
and
nop
and
jmp
jae
dec
mov
mov
test
cmpb
cli
leave
andl
push
pop
and
jle
icebp
out
adc
mov
push
rolb
fimull
xor
add
cmpsb
push
stos
fsubr
clc
icebp
mov
scas
or
cmp
xor
jnp
repz
and
dec
ds
adc
out
fnstenv
xchg
jmp
jae
dec
xchg
lcall
out
mov
adc
cmpb
scas
sbb
xchg
notb
arpl
xchg
into
fdivr
stc
lock
sbb
mov
subl
adc
pop
imul
jmp
enter
push
sub
ss
and
aas
cltd
mov
movsl
push
out
popa
or
stc
cmpsb
insb
shlb
fidivrs
or
inc
sbb
cld
jnp
outsb
imul
dec
aam
mov
cmpsl
or
inc
ds
and
sti
mov
pushf
bound
xchg
out
mov
cwtl
in
and
inc
or
test
cmp
or
pop
mov
ds
iret
int
fimuls
jmp
lcall
cmp
cmp
add
rcrb
cmp
out
fadds
sbb
fiadds
inc
cld
movsl
pushf
stos
js
jmp
out
jae
sub
ja
xor
mov
pusha
and
iret
int
jb
and
rorb
fsts
or
xchg
ss
xchg
push
mov
fsubrl
dec
pop
mov
int3
lret
mov
imul
cmp
mov
mov
ds
pop
clc
mov
aam
ljmp
cmpsb
add
dec
stos
jb
lds
inc
sub
sbb
decl
xchg
retw
cmp
orl
jae
gs
mov
jmp
bound
fadd
sub
mov
int3
shll
xor
rorl
dec
rcll
test
push
dec
imul
rclb
lock
push
mov
fcmove
mov
sub
jp
dec
aaa
push
iret
in
in
scas
ret
out
outsb
sub
xor
xchg
sbb
rcl
xchg
sub
mov
mov
pop
cmp
jno
mov
ret
std
push
xor
daa
das
jl
dec
mov
sub
outsl
sti
xor
lds
enter
push
lock
jb
arpl
mov
ja
add
mov
xchg
cmp
out
mov
loopne
push
push
je
aad
push
sub
adc
cmpsb
fbstp
push
out
push
jno
bound
fimull
je
cmp
add
out
push
test
inc
mov
test
leave
movsb
mov
leave
scas
aaa
dec
sub
or
pop
cmp
repnz
out
sbb
push
scas
add
adc
fisubl
xchg
sahf
inc
movsl
addb
xor
xor
push
shlb
in
vminps
cmp
xor
test
mov
inc
aad
dec
and
fdivl
or
imul
jmp
mov
push
iret
stos
xchg
ljmp
inc
jnp
ret
sbb
jne
inc
fdecstp
jmp
pop
fbstp
mov
pop
dec
jmp
cwtl
push
xchg
sub
aas
adc
mov
movsl
jecxz
sbb
int
sbbl
dec
scas
sub
dec
cli
in
mov
jmp
hlt
sub
aam
and
int
stos
sarb
imul
std
push
in
idivb
cmp
mov
inc
repnz
popa
jge
pop
mov
inc
movsb
pop
mov
lcall
push
daa
leave
mov
push
adc
out
pop
out
cmc
push
cmp
push
cld
mov
dec
xlat
xor
push
je
mov
js
pop
ds
adc
inc
mov
jo
xor
inc
flds
dec
ffree
mov
jbe
popa
adc
inc
je
mov
repnz
out
iret
lret
stos
in
cmp
popf
lds
adc
xchg
pop
scas
mov
pop
lret
mov
sbb
xchg
dec
or
seto
jecxz
inc
aad
xchg
sbb
pop
pop
ret
pop
roll
mov
lret
pop
dec
cltd
jno
jle
cmp
push
fdivrl
xor
outsl
mov
loop
xchg
adc
xlat
lcall
ja
test
and
in
andl
loope
adc
sti
add
or
dec
sub
cmp
outsb
jl
cmpsl
push
inc
mov
pop
push
divb
adc
pop
clc
push
cld
ror
fnstenv
mov
add
movsb
enter
es
mov
sub
cmp
cltd
jmp
lock
cmp
pusha
jno
xchg
repnz
xchg
cld
sti
flds
in
lea
mov
jo
and
nop
jne
movsb
imul
adc
xchg
adc
imul
cmp
xor
or
mov
mov
sarl
push
pop
mov
push
es
icebp
adc
cmp
dec
call
je
icebp
xor
adcl
adc
aas
xchg
or
in
sub
imull
cmp
insb
arpl
and
inc
push
cmpsl
dec
or
add
sub
jmp
inc
in
loope
mov
mov
xor
scas
movsb
mov
stc
and
fstl
bound
push
xchg
stos
cmpl
int
lock
das
xor
sbb
xor
and
jge
xchg
cs
push
cmp
mov
jmp
cmpsb
push
sub
cli
sbb
adc
dec
mov
and
repz
iret
cwtl
stc
adc
stos
loopne
ljmp
and
xor
div
stos
stc
push
mov
out
pop
push
jb
push
xchg
or
rcrl
nop
add
dec
xchg
lret
xchg
in
xor
out
dec
pusha
shl
pop
mov
movsl
cmpsl
adc
lock
loopne
xchg
adc
cld
jecxz
je
mov
dec
in
loope
pop
jmp
dec
jl
jo
into
mul
sahf
cwtl
adc
push
mov
sahf
in
jecxz
sub
and
mov
std
dec
in
inc
rorb
xor
jecxz
fcmovu
test
inc
aam
sub
aas
push
jmp
aam
in
js
sub
adc
xor
dec
sbb
cs
lcall
repz
xor
iret
pop
rcrb
inc
stc
imul
ret
lds
aas
icebp
mov
movb
jl
rclb
mov
movsl
jg
push
jbe
dec
adc
daa
loop
add
divb
xor
fwait
xor
or
mov
xchg
sbb
shlb
lret
imul
repnz
imul
inc
push
addb
push
js
and
fsubrp
adc
outsb
flds
loop
fists
aad
enter
lds
xchg
into
push
jns
mov
mov
sbb
rclb
lcall
jae
and
aam
mov
out
mov
cmp
aas
loope
inc
add
fistpl
test
jecxz
imul
es
sti
dec
in
inc
aad
cmpsb
inc
clc
cs
icebp
into
jge
xor
inc
mov
mov
adcl
or
push
sub
lods
gs
sub
push
nop
pop
add
jo
hlt
cmp
xchg
adc
adcl
movsl
xor
pop
jp
xor
xchg
and
jns
sarl
sub
adc
pop
cld
pop
sub
sub
or
cmpsb
rcll
lret
dec
ljmp
mov
ret
xor
shlb
xchg
and
xchg
clc
pop
cli
jle
rcll
stc
out
and
pushf
jo
pop
cltd
sbb
mov
mov
xchg
flds
lea
ljmp
mov
fcmovu
sti
push
arpl
adc
shll
nop
push
and
nop
stos
cmpsl
movsl
jnp
pop
dec
inc
in
out
jmp
int3
adc
jnp
push
ljmp
inc
jo
es
dec
fildl
push
rcll
jle
rcrb
dec
adc
and
adc
jbe
xor
lcall
sbb
add
xor
loopne
pop
nop
jno
dec
imul
mov
iret
or
cmp
cmc
xchg
xor
mov
jns
out
test
pop
lret
andb
and
and
aad
data16
jnp
je
sub
pop
or
fidivrl
cmc
push
dec
jno
jg
mov
push
jmp
jge
stc
hlt
and
sbb
icebp
shrl
scas
add
inc
mov
push
mov
dec
icebp
push
decb
imul
mov
push
jmp
sbb
addr16
xchg
andb
sbb
pandn
dec
dec
add
cmp
int
jecxz
pop
add
loope
jne
dec
idiv
mov
lret
lock
iret
rcll
mov
fwait
inc
cmpl
mov
mov
cltd
inc
mov
mov
jecxz
sub
xchg
add
inc
sarb
cltd
push
jecxz
jecxz
inc
push
sub
mov
xchg
decl
dec
sahf
imul
ljmp
sarb
lock
das
je
and
movsb
sub
pop
xchg
out
jo
sub
push
sub
pop
xor
ss
xor
sub
jmp
mov
sub
xor
sbb
cmp
test
ret
fisttpll
lret
or
cltd
mov
xchg
and
mov
aas
bound
jl
xchg
cmp
xor
add
cmp
adc
pop
push
jnp
jmp
mov
xchg
xchg
fsubrs
into
pop
cvtpi2ps
movsb
fs
push
ss
das
mov
lret
insb
notl
adc
popa
cmp
cli
pusha
ja
mov
adc
das
push
push
push
cmc
ljmp
xor
push
cli
and
insb
mov
xchg
loopne
mov
in
add
mov
popa
stos
cmp
stc
mov
xchg
test
inc
fsubp
imul
pop
lea
push
and
call
mov
movsl
popa
sti
jb
ret
int3
pop
out
jle
loope
xchg
sub
inc
ss
ret
jne
daa
std
call
lcall
les
nop
sarb
xor
idiv
mov
test
mov
jns
repz
pop
or
mov
out
push
xor
test
mov
mov
inc
mov
dec
and
push
mov
xor
aad
add
push
rcl
sbb
jl
sbbl
xchg
inc
out
lods
in
js
lret
sub
push
adc
adc
movsb
xchg
or
xchg
xlat
jle
xchg
das
mov
out
out
jecxz
lods
data16
sub
pop
stos
jae
in
leave
adc
incl
pop
pop
mov
adc
insb
das
int
sbb
jo
push
cmp
inc
xchg
mov
dec
dec
and
fsubrl
imul
mov
fidivrs
sti
ror
aad
shlb
push
jg
dec
enter
mov
mov
push
mov
dec
dec
pop
mov
fwait
push
pop
ljmp
mov
cmp
cmpsw
sub
mov
mov
sub
push
inc
jns
fsubrs
add
hlt
cmp
cmp
movsb
addb
pop
mov
jnp
roll
inc
cmp
pop
dec
stc
xor
xchg
dec
fld
push
xchg
pushf
hlt
lock
add
aaa
mov
and
jmp
dec
sub
pop
sub
pop
xor
aas
jo
sti
lods
add
xor
sbb
pop
outsl
loop
inc
loope
sub
pop
in
fsubs
inc
icebp
out
xor
and
popf
pop
jle
push
push
jo
mov
push
dec
xlat
sub
jge
add
add
into
lcall
add
dec
test
lcall
cwtl
sub
cmpl
nop
sbb
inc
aam
and
xchg
cmp
push
inc
ljmp
xorl
add
mov
push
xlat
hlt
bound
push
pop
sub
sub
push
in
rcll
sbb
getsec
inc
xchg
push
xstore-rng
cmpsl
rol
xchg
adc
sar
outsl
iret
fisubrs
mov
push
test
dec
inc
lods
dec
or
and
dec
add
pop
inc
mov
sarb
ret
push
ss
mov
movsl
xchg
and
mov
push
dec
lock
mov
rorb
pop
pop
xchg
ss
sbb
fwait
call
inc
inc
or
and
pop
cltd
fldln2
aaa
sbb
sbb
push
mov
inc
cmp
xor
pop
push
lret
push
cs
imul
aad
movb
jo
movsl
ja
xchg
mov
std
incl
ret
sub
popa
arpl
scas
bsr
adc
sbb
dec
or
sahf
shlb
rolb
add
adc
loop
lods
call
sub
mov
pop
leave
inc
arpl
sbb
mov
lret
fisubrl
mov
mov
dec
test
outsl
pop
inc
mov
mov
and
ja
add
fmuls
aad
add
mov
lea
xchg
adc
mov
dec
sbb
scas
repnz
dec
sub
sub
adc
mov
das
test
mov
mov
scas
lea
ja
mov
movl
addl
cwtl
out
push
into
insl
and
push
xchg
jb
frstor
pop
hlt
and
orl
fwait
imul
mov
insl
cwtl
pop
jns
mov
and
movsl
shrl
iret
cmp
adc
mov
mov
xchg
and
iret
add
xor
mov
pop
pop
fsub
jno
pop
jge
xor
sbb
out
in
push
mov
add
pop
and
mov
insl
fnstcw
adc
or
mov
adc
ljmp
fs
ds
pop
mov
jnp
adc
cmpsl
fs
pop
out
cmp
xchg
adc
shrl
stc
aam
or
xchg
das
pop
fstl
idivl
jge
fistpl
jecxz
mov
sbb
mov
jge
mov
hlt
jns
test
mov
xchg
pop
mov
pop
fisttpll
inc
stos
ret
scas
fisttpll
or
mov
xchg
dec
sbb
xchg
out
xchg
xchg
inc
cmpsl
fidivl
mov
sysret
push
cs
popl
sbb
fsub
lahf
jp
jecxz
and
jge
je
mov
adc
push
cmp
stc
popf
inc
out
sbb
jle
inc
adc
push
pop
fimuls
cld
mov
sub
test
mov
push
adc
push
enter
cmpsb
int
lods
adc
or
cmc
ficoms
aam
inc
adc
rcrb
pop
and
jb
lock
pop
mov
push
negb
insl
cli
or
popf
push
mov
movb
adc
pop
es
sbb
push
dec
cld
in
jbe
jg
lods
std
xchg
fcomps
out
movsb
leave
adc
sbb
mov
dec
cmp
add
add
mov
addr16
dec
movsb
scas
into
xchg
hlt
or
repnz
mov
scas
adc
shl
iret
repnz
dec
mov
scas
push
or
test
mov
int3
mov
sahf
loope
pop
sub
jbe
aas
movsb
mov
cmp
ret
xor
int3
inc
imul
outsb
mov
jl
rcrl
mov
fldt
or
jo
jmp
cltd
sti
add
mov
and
test
push
inc
cmc
lea
cmp
pushfw
notl
mov
push
add
sub
mov
push
xor
pop
mov
icebp
clc
loopne
test
pop
or
addb
mov
push
aam
fs
idivl
mov
shll
in
ficomps
hlt
dec
xchg
lahf
rcl
mov
inc
sbb
inc
pop
stos
xor
loope
cli
dec
fwait
ja
aad
or
pop
in
pop
out
ja
daa
popa
or
adc
jne
hlt
jl
ss
lods
sub
xor
imul
sbb
iret
mov
mov
and
adc
inc
popf
xor
dec
insb
test
adc
fildl
push
mov
jne
insl
mov
cmc
adc
dec
cmp
fsubrp
sub
sbb
lret
xchg
or
and
mov
sbb
xor
mov
mov
mov
mov
jae
cmp
lret
aas
outsb
sbb
push
mov
fsub
sbb
push
add
mov
je
dec
xchg
mov
sbb
inc
sbb
insl
xlat
jno
cmp
push
xor
in
sub
es
adc
sarl
add
or
xchg
lret
sub
ss
in
into
mov
loopne
lods
push
sub
and
inc
out
popa
pusha
jmp
jge
sarl
sbb
pop
cmp
add
sbb
loopne
cmpsb
fwait
pop
sbb
test
xchg
pop
inc
adc
cmp
mov
fisubl
lahf
adc
lret
mov
nop
loop
mov
mov
les
cmp
ficompl
rcrb
lahf
into
aam
cmp
shll
sarb
fsubl
adc
push
or
push
adc
cmp
adc
je
pop
cltd
test
aad
inc
xchg
cltd
cmp
ljmp
jbe
inc
push
sub
aaa
repnz
add
mov
mov
call
mov
or
test
out
int
mov
shlb
daa
jg
mov
add
mov
popa
das
dec
sub
sahf
sub
or
push
add
iret
insb
shr
fidivrs
cli
pop
or
fs
icebp
js
ret
jl
out
pop
cwtl
test
xor
gs
rorl
lock
add
sbb
cmp
mov
adc
jb
adc
add
mov
xchg
mov
mov
pusha
jns
ja
test
jae
sub
sub
dec
pop
cwtl
mov
flds
testb
jmp
pop
daa
imul
sub
lods
dec
sbb
out
cmpsl
add
jns
cmpb
jp
add
or
dec
std
stc
cmp
testb
filds
adc
or
ss
push
loop
add
sbb
mov
mov
aad
addr16
or
jge
ss
adc
lods
fistl
test
lock
push
mov
xor
mov
mov
jns
xchg
fs
mov
xor
push
mov
dec
push
sarl
dec
sbb
xlat
cmp
add
inc
dec
hlt
mov
sub
fsubr
inc
sahf
mov
jbe
sbb
and
shll
mov
and
imul
dec
int3
or
test
in
inc
and
inc
das
repz
pop
mov
jg
fcoms
sbb
ficoms
into
jecxz
fwait
push
adc
int
jmp
xor
pushf
mul
pop
loope
cli
repnz
or
addr16
out
test
push
pop
push
push
push
jno
repnz
ss
or
sub
adc
negl
rorl
push
nop
je
push
aas
mov
call
jg
test
out
sub
mov
cmp
mov
push
mov
or
add
orl
jge
int
enter
sbb
lds
js
inc
push
dec
pop
inc
or
or
push
xor
cmc
test
and
adc
pop
sahf
and
sub
repnz
hlt
cmp
subb
or
cmc
int
or
or
sub
or
lds
lret
stc
dec
cmp
mov
sarb
jne
inc
lcall
shlb
push
dec
scas
xlat
adc
jnp
pop
jns
lret
cld
jg
mov
lret
movsb
push
xchg
sbb
mov
loop
dec
cwtl
mov
mov
cmp
pop
mov
inc
xor
jmp
jb
jns
stc
or
adc
fstpl
mov
mov
jge
fiaddl
jo
arpl
aas
popf
and
inc
cmc
sti
and
jge
jno
jecxz
test
mov
mov
in
push
inc
insb
mov
out
mov
cmp
mov
outsl
inc
pop
inc
sbb
nop
cmp
xchg
fsubrp
in
cmpsl
fldl
ret
cli
push
std
je
jbe
cld
xor
xor
xor
lret
subps
cmpb
adc
lds
repz
into
mov
fwait
sarb
dec
and
jmp
dec
stos
sub
pushf
pop
inc
cwtl
nop
aaa
sub
push
or
dec
xor
sbb
adc
pop
jle
mov
cmp
sub
lds
in
add
pop
in
jne
xchg
test
sub
out
test
jne
jbe
adc
jns
push
mov
jl
test
mov
mov
mov
lods
mov
inc
pop
inc
ror
or
stos
imul
adc
enter
orb
sbbl
cld
stos
jno
fstpl
fs
add
xlat
mov
adc
shlb
icebp
iret
imul
in
and
clc
dec
jmp
xchg
andl
xchg
mov
ja
push
push
movsl
fdivrl
jo
orl
or
add
ss
xor
out
fadds
mov
push
stos
dec
or
or
push
aaa
test
pop
inc
push
push
ljmp
stos
push
push
loope
in
mov
bound
lret
push
push
aam
mov
pop
jg
nop
cli
call
shrb
lods
outsb
test
jl
and
and
mov
xchg
mov
inc
jg
out
push
adc
in
push
mov
fdivl
fnsave
mov
sti
outsl
das
push
out
push
add
in
xchg
xchg
adc
jb
jp
or
add
int3
and
cmp
pop
sbb
cs
or
fxtract
loop
sbb
hlt
sub
test
push
push
hlt
divl
jecxz
sbb
inc
aas
mov
sahf
mov
pop
lods
pushl
shrl
sub
lds
and
dec
dec
push
mov
hlt
sub
pop
andl
mov
mov
jb
dec
cltd
adc
cwtl
cmp
mov
sub
or
ljmp
cli
scas
cwtl
in
xorb
mov
mov
pop
subl
negl
pop
in
adc
xor
insl
inc
test
daa
sbb
clc
push
pop
loop
enter
bound
ficompl
adc
lahf
outsb
cmp
push
sub
fimuls
jne
push
mov
adc
ficomps
hlt
jb
mov
add
or
fildll
jge
push
ficoms
xchg
mov
dec
ja
jne
dec
adc
test
das
add
dec
adc
push
das
push
cmp
xchg
sub
xor
jg
fmulp
dec
jp
addb
dec
loopne
sahf
test
addr16
lods
add
or
cmc
in
push
and
push
out
inc
xlat
sti
adcb
xchg
add
addr16
xor
push
out
push
mov
push
outsl
push
fimuls
mov
jno
shll
inc
push
sbb
cmp
push
outsl
pop
jp
jb
xchg
mov
jecxz
in
push
ljmp
add
and
jb
mov
inc
cmp
xor
mov
lods
inc
inc
int
sub
cmp
push
cmp
push
addr16
pop
loopne
jno
pop
jl
aad
adc
iret
repz
adc
lcall
lods
jg
push
loope
sbb
rcll
push
mov
push
imul
mov
dec
inc
xlat
sbb
xchg
cmc
mov
lret
icebp
push
xchg
lret
dec
mov
inc
jmp
loopne
add
push
xchg
sub
and
lahf
pop
mov
sbb
aam
sbb
out
mov
mov
adcb
and
inc
int
clc
mul
inc
pop
repnz
mov
xor
popf
bound
call
pop
pop
sub
dec
add
movsl
jo
les
pop
int
and
ret
mov
popa
loop
inc
mov
dec
nop
dec
lods
ret
xor
and
sub
andb
sub
cld
push
xchg
push
mov
add
xchg
mov
fistpll
outsb
test
inc
int
sbb
and
fmulp
cwtl
sub
inc
push
push
or
xor
dec
sbb
xor
push
cmp
pop
jae
push
xchg
es
mov
cmp
inc
pop
iretw
std
pop
in
sbb
adc
rcl
cmpsb
hlt
fldenv
es
xchg
pop
ficoms
pushf
pop
cs
jae
cmpsl
popa
or
mov
inc
clc
aaa
pop
out
pop
stc
pushf
mov
sahf
mov
or
sbb
addl
mov
sub
cmpsb
xor
test
xor
call
adc
add
sub
pop
cli
fstl
dec
xor
in
outsl
xchg
mov
stos
out
subb
jg
or
psubusw
push
lret
sti
sbb
fcmovnbe
out
pop
in
cmp
or
cmp
lds
sbb
ficompl
imul
mov
stc
lret
pop
jae
lds
dec
lret
lds
mov
mov
hlt
xor
cltd
sbb
lahf
jmp
int
fistpl
or
dec
popa
cltd
cmpsl
dec
rol
ret
inc
test
push
mov
shl
out
out
fcoms
jo
mov
sbb
iret
mov
add
xlat
lock
inc
std
dec
dec
lds
mov
das
inc
shll
or
dec
mov
lcall
pop
ja
xchg
mov
xor
into
mov
lods
stc
add
frstor
outsb
add
cmp
xor
fimuls
loope
push
lret
mov
invd
xchg
xor
fwait
lods
push
in
inc
pop
ljmp
rolb
sbb
stos
into
mov
and
inc
roll
lods
mov
add
push
test
rolb
cmp
gs
fucomi
fcomps
mov
repz
daa
out
xchg
sub
sahf
out
adc
ss
dec
and
adc
cmpsb
pop
adc
dec
inc
mov
mov
cmp
pop
inc
out
insl
movsb
insl
fdivrl
xchg
fstps
push
or
pop
pop
jne
cwtl
mov
push
xor
lock
cwtl
dec
mov
xlat
sbb
in
cmpsl
mov
add
inc
popa
mov
push
and
fsubrs
jne
mov
inc
push
sbb
mov
addb
mov
xchg
mov
and
out
xchg
div
xchg
popa
dec
xchg
int
push
mov
nop
rclb
xor
adc
xchg
fistl
jmp
pop
pop
lea
cmp
or
mov
inc
call
aad
and
fsubrl
bnd
adc
pop
dec
das
jecxz
test
int3
sbb
push
and
pushf
in
adcl
sbb
ds
repz
mov
push
test
ror
mov
mov
sbb
cltd
push
adc
jnp
lret
aad
dec
add
stos
mov
sbb
stos
mov
repz
inc
sbb
push
orl
mov
mov
add
cmp
xchg
into
std
adc
dec
inc
xor
xchg
push
hlt
lock
inc
aas
dec
xor
adc
or
mov
ja
adc
sbb
push
repnz
mov
mov
jns
aas
jno
les
lods
andl
cmc
lret
xor
mov
cmp
sbb
mov
sub
add
mov
xor
loope
ret
and
sbb
shlb
sub
dec
daa
lret
lods
lods
scas
sbb
adc
fisubs
dec
cmpsl
cmp
xor
ret
adc
test
jl
cmpsb
movb
out
push
sbb
xchg
push
aad
sub
xor
je
mov
insl
pushl
cmp
push
mov
xchg
add
in
mov
xor
lds
das
bound
pop
sbb
mov
enter
mov
fnsave
call
mov
sbb
dec
mov
sbb
xchg
jle
rol
ds
xchg
and
aad
push
inc
push
inc
cmpsb
pop
mov
pop
test
out
cwtl
push
mov
cltd
iret
popf
test
or
fcomps
dec
test
pop
cmc
jno
fld
sub
mov
mov
push
fistpl
or
sub
test
mov
sub
ret
push
scas
push
inc
arpl
loopne
fsubr
daa
jne
addr16
int3
pop
pop
xor
dec
inc
jl
push
imul
jl
lret
mov
jl
insb
or
std
fsubrs
std
aad
lcall
lret
jge
aam
mov
cli
fs
scas
fsts
dec
or
fs
adc
clc
adcb
data16
ljmp
sbb
fiaddl
jb
cmp
repnz
leave
ja
clc
jg
lret
add
inc
test
jnp
jns
xor
xor
dec
jo
xchg
xchg
shr
jns
aaa
sbb
popf
sti
sub
pop
xchg
fildl
in
je
jmp
loopne
cwtl
cld
or
xchg
jb
mov
mov
push
int
mov
movsb
idiv
and
push
cmpsb
mov
test
xor
sub
scas
xor
jno
mov
or
or
out
aaa
dec
jecxz
and
add
cmp
push
push
add
mov
loopne
mov
pop
aad
sbb
add
sbb
ficoms
cmp
sarb
push
popa
in
rcr
jbe
xlat
sbb
and
xchg
push
test
adc
mov
inc
xchg
mov
das
ret
insb
xchg
dec
aaa
mov
push
std
push
or
push
fldl
adc
and
pop
mov
leave
xchg
lods
jo
mov
pushf
repz
mov
jbe
lahf
pushf
sub
jno
and
adc
movsb
push
in
mov
lock
pop
sbb
sbb
icebp
inc
sub
cld
cld
adc
rcrl
fmuls
lret
jae
jbe
shlb
push
adc
xor
lds
aad
cmc
fildl
iret
lret
lea
shlb
sbb
aaa
cmpsb
dec
ss
lret
dec
mov
push
outsl
rorl
and
mov
or
inc
mov
mov
sarl
jmp
push
add
mov
sahf
push
cmp
mov
out
test
cld
mov
into
jne
ja
mov
repnz
rol
loop
push
cmp
sti
pop
fidivl
loopne
inc
out
mov
ljmp
lret
ja
sbb
aam
mov
inc
dec
aad
sub
xchg
pushf
pushf
sbb
test
sti
add
adc
rclb
jbe
inc
and
pop
mov
adc
fs
push
adc
cmpsb
cmp
lcall
sbb
or
cmp
xor
cli
push
lret
lock
cld
and
in
add
out
loope
adc
adc
cmpsl
inc
ljmp
outsl
psubb
int
subb
cmp
inc
xchg
pusha
call
sub
hlt
ds
cld
gs
mov
addr16
cmp
cwtl
cmp
hlt
add
sub
mov
pushf
mov
mov
lret
and
sub
dec
mov
stos
fnsave
xchg
leave
or
add
das
push
in
push
push
aam
scas
fstl
pop
dec
mov
les
pop
cmp
pusha
subb
push
aam
adc
test
addl
imul
xchg
adc
lret
rcrl
data16
xor
mov
dec
pop
jl
or
decl
jnp
mov
ret
ret
ret
inc
and
cs
dec
xchg
imul
popf
ret
sbb
xor
jnp
jnp
stos
jmp
mov
cltd
and
ror
sbb
add
loopne
clc
xor
popa
sbb
push
inc
xchg
mov
stos
mov
adc
iret
scas
aas
xchg
add
push
lock
adc
xor
jge
and
stos
and
or
stc
clc
outsl
dec
xchg
pop
dec
cmp
popf
or
add
inc
dec
cld
xor
jne
jnp
lock
repnz
mov
scas
cwtl
xchg
inc
pop
fildl
int3
pop
loopne
out
push
xchg
xchg
or
jmp
pop
lret
push
jae
movsb
mov
xor
mov
lret
and
aas
int
hlt
ja
sub
inc
iret
ds
mov
xor
incb
and
testl
and
sub
sbb
arpl
popa
in
jns
leave
and
sbb
out
jo
or
mov
push
insb
je
scas
ret
mov
xlat
test
sbb
les
mov
push
pop
lds
adc
pop
nop
xchg
jno
cmpsl
adcl
stos
in
adc
jle
enter
sub
lods
test
push
cltd
push
mov
or
mov
xor
imul
jno
insl
add
cmp
clc
fwait
jo
push
add
mov
adc
les
jo
test
mov
xor
pusha
js
inc
push
adc
pop
cmp
cmpb
sbb
das
cmp
sub
adcl
xor
iret
gs
cmp
shr
mov
loop
movsb
sub
push
xchg
shl
jae
cltd
xor
adc
fists
sub
pop
mov
ret
sbb
add
pop
xchg
or
mov
movsl
sbbb
sub
xchg
adc
nop
sub
std
xchg
test
jo
or
cmp
in
mov
dec
pop
sti
bound
test
inc
pop
mov
gs
dec
rorb
aad
lret
adc
adc
mov
pop
xor
test
push
mov
xchg
mov
pop
xchg
in
daa
pop
push
or
mov
in
push
push
sub
sbb
or
mov
sbb
cwtl
fisttpll
cld
jbe
outsl
loope
frstor
pop
fs
mov
clc
lods
insl
jo
mov
jbe
and
outsl
test
or
dec
ds
and
push
xchg
and
push
aam
pcmpgtb
lds
flds
mov
call
and
daa
shlb
inc
fst
add
pusha
add
adc
inc
pop
fnstcw
push
out
push
mov
pop
adc
jnp
popf
shrl
xlat
sub
in
pushl
pop
dec
mov
sub
fldl
mov
sbb
xor
pop
jb
ret
in
cmp
mov
cli
lods
mov
jno
das
jb
pop
adc
cmp
inc
popl
jns
cli
test
mov
and
xchg
flds
jle
xchg
dec
push
pop
pop
cmp
and
inc
or
or
and
xor
cmp
mov
js
mov
cmovnp
pop
lcall
mov
es
jecxz
std
outsb
pop
mov
cmpsl
xlat
stos
add
inc
fdivr
push
loopne
imul
mov
adc
jae
dec
sub
cmp
add
push
lock
push
ss
cmp
and
xchg
aaa
jo
mov
ret
mov
lods
push
mov
mov
add
mov
sbb
and
insb
cmc
incb
dec
cmpsb
addb
fcomip
adc
fmuls
inc
add
inc
jno
test
sub
mov
dec
pop
ret
adc
fisubrs
nop
loopne
inc
lds
mov
js
push
pop
pop
inc
push
imulb
cmp
jnp
xor
xchg
sti
mov
adc
leave
xorb
popf
mov
jb
mov
adc
icebp
adc
adc
jmp
mov
lds
stos
mov
push
icebp
pusha
stos
out
arpl
and
jl,pt
mov
and
enter
int3
adc
and
xlat
lods
xor
aam
xor
cmp
pop
pop
repnz
inc
ja
cmp
jbe
push
dec
rorb
pop
add
dec
xor
jmp
insb
in
inc
add
or
in
inc
loop
outsb
sub
cli
mov
push
push
add
push
xchg
fwait
inc
inc
mov
loop
fldcw
mov
std
into
mov
std
ret
push
jno
subl
push
cmp
shll
add
je
jmp
push
adc
insl
inc
imul
or
sbb
adc
pop
leave
andb
scas
xchg
fadds
gs
xor
stos
shll
test
lcall
inc
push
outsb
out
push
je
xor
sbb
and
xchg
sbb
fstps
movsb
jne
aaa
stc
xchg
jg
scas
movsb
adcl
jb
xchg
and
xchg
hlt
sub
dec
mov
shl
lcall
push
addr16
insb
mov
add
pop
add
dec
in
cmc
pushf
adc
jae
cmc
ss
bound
std
mov
test
jae
sti
push
jbe
xchg
or
repnz
fs
push
cmpsl
fcoml
fmul
test
push
cwtl
ret
out
mov
mov
jmp
data16
scas
clc
inc
pop
scas
xor
jo
mov
dec
adc
stos
mov
jae
sbb
jmp
inc
mov
jno
mov
mov
mov
scas
out
or
enter
push
sbbl
stos
sbb
sahf
ss
cmp
je
and
shlb
and
add
sub
xchg
fdivrl
int
push
gs
adc
sbb
xchg
xlat
mov
xor
sub
sbb
aaa
stc
lret
inc
add
ficoms
fs
push
scas
pop
sbb
mov
lods
mov
movntps
mov
test
loop
test
sbb
addr16
arpl
fildll
push
push
mov
pop
or
ljmp
sub
jnp
pushf
jg
xor
push
mov
popf
push
nop
loope
jecxz
out
and
add
lea
cltd
clc
sbb
into
fsubrl
pop
push
mov
xorl
aaa
pop
outsl
xor
push
rcrb
aam
push
jg
loop
pop
xchg
xchg
mov
push
movsl
dec
test
jmp
sti
mul
mov
leave
leave
push
lock
mov
int3
cmc
or
lds
sub
movsb
ss
lods
daa
add
sarb
adc
pop
xchg
mov
cmp
sbb
xchg
fwait
insl
mov
loope
decl
cltd
loop
pop
sbb
cmpsb
mov
clc
xchg
int
pop
sub
mov
pop
aas
popl
scas
mov
in
loop
sub
jge
push
lock
jbe
fistpl
or
add
pop
and
inc
imul
es
jmp
test
mov
pop
mov
xchg
mov
xchg
fsts
out
cltd
dec
cmp
jle
xchg
dec
mov
sub
adc
fists
loope
sub
jns
xchg
mov
loop
cmp
lods
dec
lods
rcrl
js
int
adc
adc
mov
repnz
xor
aam
in
pusha
rolb
mov
std
aad
imul
dec
mov
jns
jns
stc
cmp
inc
jg
lock
loopne
pop
cli
rcll
dec
clc
sbb
rcr
lahf
inc
pop
vucomisd
divl
push
jmp
add
cmp
rcrb
inc
cmp
lcall
or
cmpsb
jmp
sbb
push
mov
icebp
out
sarl
mov
jno
popa
mov
aaa
pop
out
adc
fnstcw
jmp
and
aam
adc
pop
mov
adc
lods
or
push
stos
js
push
sub
mov
in
addr16
dec
test
sub
daa
andb
repz
gs
add
adc
fistps
scas
dec
mov
mov
pop
arpl
inc
sub
adc
pop
scas
call
scas
lods
add
push
and
add
pop
sbb
pop
sbb
pop
mov
jmp
xlat
xor
es
idivl
adc
popf
scas
xor
inc
add
jo
int
adcb
mov
mov
and
or
les
lret
mov
or
pop
addr16
adc
add
fisubl
loope
into
sub
es
mov
popa
test
cltd
shl
jge
stos
jmp
xchg
mov
cmpsl
mov
iret
mov
mov
xchg
stos
test
jnp
fucomp
pop
ror
in
mov
int3
jnp
cwtl
pop
sbb
pop
sbb
push
shr
out
adc
or
adc
cmc
mov
pop
push
addr16
xor
in
push
push
inc
add
aad
mov
ret
mulb
pop
mov
push
inc
jbe
push
lret
test
jp
pop
sub
mov
outsl
fistpl
mov
adc
andl
inc
pop
mov
movsb
xchg
add
push
and
lock
stc
xchg
stos
xchg
mov
jnp
std
cs
push
dec
pop
lods
sarl
movsl
int
xchg
aaa
test
dec
and
dec
jno
dec
lods
rcrl
sbb
into
cli
cmp
fsub
adc
and
ret
loop
stc
movsb
call
movsb
jg
mov
insb
adcl
or
cmp
lahf
push
bound
push
jl
enter
sub
sub
dec
mov
lea
cmp
inc
xchg
lcall
aad
js
ljmp
xor
sub
cld
insb
xchg
repz
enter
or
test
xor
stc
addr16
test
dec
lret
sbb
add
sub
cli
jns
inc
or
dec
lods
mov
xchg
test
dec
push
xlat
mov
sub
rorl
xor
inc
xor
ljmp
xchg
out
xor
mov
test
ret
aam
rcr
lea
sub
insb
push
pop
in
mov
shr
negl
ljmp
push
movd
addl
inc
into
jle
rolb
lods
push
add
lds
ret
test
jg
test
pop
test
std
jbe
dec
dec
inc
scas
or
clc
bound
shlb
shrl
stos
shlb
rcrl
push
fs
lret
cmp
fnsave
and
popa
jne
xchg
jae
xlat
inc
out
jno
lods
shr
pop
loope
jp
jnp
add
xorl
sbb
stc
addr16
xor
sub
lcall
xor
and
inc
xchg
fidivrs
repnz
test
leave
and
jecxz
jge
insl
stos
xchg
enter
call
ds
fldl
sbb
test
inc
test
mov
pusha
dec
fsubl
mov
ret
inc
push
fnstsw
add
and
inc
mov
mov
cmpl
inc
clc
mov
loop
pop
push
cwtl
sbb
xchg
aas
push
inc
cmp
add
sbb
wbinvd
mov
cmp
mov
sub
movsl
inc
insl
mov
and
subps
sbb
dec
movsl
push
xor
or
mov
test
pop
mov
mov
dec
movsl
add
les
lock
add
stc
cwtl
mov
xchg
leave
fists
mov
jmp
addr16
mov
push
xchg
sub
mov
mov
xchg
mov
pusha
mov
pop
adc
dec
fsubl
pop
and
dec
sub
or
dec
ret
iret
mov
xchg
jg
pop
test
cld
adcb
mov
out
cwtl
scas
cmp
in
call
add
enter
jo
into
dec
test
sub
aas
test
cmp
icebp
mov
outsb
gs
pushf
dec
int
push
repz
lret
jnp
mov
and
mov
dec
xor
jno
sub
divl
push
lret
lcall
jmp
xchg
popa
cmpsl
outsl
xor
sub
fwait
data16
scas
test
dec
lret
and
ret
test
loopne
test
sbb
dec
sti
adc
and
fistpl
or
push
adc
add
adc
pop
sub
sub
imul
pusha
jno
or
pop
jg
dec
int
push
or
xchg
jl
mov
dec
inc
dec
dec
mov
pusha
imul
push
fiaddl
rep
pop
arpl
jg
popa
cmc
pop
pop
imul
xor
aad
mov
push
mov
data16
ret
mov
add
adc
jg
rcrb
xchg
jno
sub
fcomi
sub
aas
sbb
scas
push
lret
or
push
bnd
cmp
and
inc
inc
rcll
sub
mov
in
mov
sarl
addr16
adc
aam
addb
shll
mov
xchg
subb
lods
cmp
pop
mov
cld
add
mov
adc
inc
mov
loopne
rcl
adc
mov
mov
sub
fwait
adc
xchg
or
hlt
iret
test
jmp
cmp
lahf
lahf
scas
cmp
test
xor
cmc
mov
or
loop
dec
cmp
cmc
fwait
mov
outsl
movsb
test
jbe
or
cmp
es
xor
sub
orb
je
xchg
add
mov
gs
in
mov
add
sub
rorb
push
out
int3
dec
pop
adc
insl
mov
les
mov
mov
ret
iret
cmpl
sbb
push
or
rorb
ss
in
or
push
xor
xchg
aaa
lcall
xchg
lea
sahf
imul
icebp
ffreep
cmp
ficoml
imul
push
and
lret
bound
divl
call
cli
and
cltd
jns
dec
pop
mov
or
push
movl
pop
or
call
test
mov
and
add
fists
xor
mov
pop
cmp
repnz
in
mov
adc
adc
fwait
dec
mov
xlat
or
fildl
mov
push
cmp
push
jp
jge
daa
repz
icebp
jo
ret
mov
fwait
int3
in
jl
push
testl
dec
inc
adc
fwait
loope
in
je
popa
pop
jae
fs
xchg
mov
mov
jmp
stc
fucomip
inc
fwait
jno
pop
push
subb
sahf
rcll
call
scas
xchg
ja
movsl
lods
jecxz
jp
insl
movsb
add
std
adc
sbb
jl
push
shrl
cli
xorb
pushf
stc
setl
mov
mov
cmp
xchg
and
repnz
loop
pop
mov
int3
and
fucom
xor
fstl
xlat
push
jae
movb
push
jle
xor
test
add
out
hlt
jae
xchg
lods
adc
pusha
adc
pop
add
inc
xchg
cmpb
aam
repnz
inc
mov
mov
sub
sub
inc
or
and
in
xor
inc
push
dec
mov
or
je
dec
jb
dec
mov
mov
stos
fisubrs
xchg
imul
leave
leave
jg
cli
dec
sub
push
aaa
inc
and
mov
fdiv
fsubp
test
lcall
jmp
cli
stos
add
aaa
aaa
lcall
push
test
cli
pop
in
cwtl
popa
lahf
popf
lds
out
sub
stos
ss
lods
std
scas
hlt
and
orb
ds
add
ljmp
imul
out
xorl
daa
test
into
rorl
lcall
and
jbe
inc
hlt
xchg
xchg
push
les
xchg
adc
jb
leave
lcall
push
push
lret
jae
cmc
cs
or
add
aaa
cmp
or
outsb
or
popf
adc
out
out
popf
cmp
add
cmc
mov
xchg
jg
cmp
sbb
mov
ljmp
addr16
mov
fsubs
dec
xor
and
push
iret
rcr
mov
xorb
adc
jmp
inc
mov
jg
insb
inc
filds
sub
mov
jne
cmp
ret
inc
push
inc
and
sbbl
mov
pop
inc
dec
movsl
int3
dec
sbb
mov
ja
fidivs
imulb
fwait
pop
jae
xchg
push
repnz
insl
lret
testb
cli
xor
test
add
jb
cmpsl
dec
test
rorl
pop
sti
leave
lahf
pushf
push
fildl
sti
mov
push
fwait
or
jmp
ficoms
mov
push
icebp
out
in
push
cmp
pop
pop
xchg
stos
test
mov
push
loop
adc
sbb
cmp
cmp
data16
rolb
stc
add
out
sbb
jne
sub
inc
lock
dec
out
push
push
mov
mov
out
jp
or
push
fstpl
mov
int3
test
ss
sahf
shlb
movsl
lds
outsb
je
sbbb
rclb
int
gs
add
shll
daa
sub
shll
imul
mov
sahf
sahf
pop
pop
inc
mov
je
outsb
jne
push
mov
cmp
das
lods
leave
adc
cwtl
and
imul
xor
out
insb
sub
xchg
cltd
repz
ss
push
cmp
mov
sub
sahf
subl
dec
enter
add
and
stos
ds
insb
and
fsubrl
xchg
push
or
lea
pop
leave
imulw
adc
ss
stos
sub
dec
popa
inc
loopne
aaa
sbb
mov
cli
int
fsubrl
jg
test
add
pop
push
pop
jbe
cmpsl
cmpl
sbb
adc
sar
push
stos
jmp
and
or
popa
inc
inc
push
push
and
jbe
daa
test
push
aad
nop
pop
cld
sbb
insb
pop
jp
gs
mov
js
movsl
scas
mov
nop
insb
mov
lock
jo
xchg
pop
xchg
pop
in
jle
cmpsl
loopne
jo
push
jae
lret
mov
or
fwait
repnz
and
add
or
cli
imulb
mov
push
and
adc
faddl
pop
clc
xchg
dec
shlb
sub
xchg
sbb
xlat
js
int
push
mov
sbb
dec
inc
xchg
testl
xchg
js
fisttpll
ss
lea
jg
xchg
pushl
sub
cmp
and
push
cli
inc
mov
fmull
in
mov
xchg
fs
lods
shlb
or
sub
sbb
add
paddsw
fs
pop
push
cmp
int
jnp
in
bnd
dec
cmpsb
lret
xor
ja
out
movsl
and
cltd
cmp
and
mov
jg
inc
sub
outsb
mov
jle
dec
mov
je
push
and
sbb
bound
push
scas
out
cli
cmc
dec
push
add
fs
mov
adc
insl
in
cmp
bound
bound
into
dec
repz
cmp
or
pavgb
push
mov
sbb
adc
mov
dec
sarb
sti
ret
add
jmp
call
arpl
mov
sarl
gs
jge
mov
cs
leave
jno
fstpl
pop
pop
mov
rcrb
push
psadbw
xchg
xorl
ficoms
push
movsb
lea
call
push
into
stc
in
jo
insb
out
imul
pop
jmp
push
adc
hlt
mov
push
ficompl
inc
and
inc
push
push
lret
jo
jmp
xchg
rcl
idivb
negb
je
jg
rcll
cmp
das
lahf
mov
mov
leavew
fwait
test
xchg
pop
insl
push
rcl
aad
add
rolb
movsl
movsl
ja
aad
les
jnp
mov
cs
sub
in
loope
int
xchg
inc
push
cld
decl
repz
cmc
adc
pop
push
mov
add
cwtl
inc
jge
sahf
repnz
cmp
in
in
insb
shr
test
cmc
mov
cmp
adc
fnstcw
jecxz
repnz
clc
daa
and
and
pop
lahf
sbbl
hlt
xchg
loopne
inc
pushf
sbb
or
adc
pop
push
mov
into
icebp
mov
sub
push
cmp
sub
and
or
xchg
xchg
repz
shll
rcl
lret
dec
das
fmuls
pop
fisubrl
ja
imul
mov
fcmovu
cmp
shr
xchg
pushf
jae
shrb
pop
in
data16
les
inc
xor
pusha
adc
ds
je
movl
in
pop
mov
outsl
mov
int3
rol
add
sbb
jl
fwait
sub
mov
je
mov
outsl
add
popf
mov
pop
xchg
hlt
aad
decb
pop
pop
lea
lods
adcl
xchg
inc
inc
cmp
into
mov
rcr
aad
jg
mov
sbb
dec
loope
stc
xor
mov
xor
jbe
add
int3
jnp
pop
add
popf
daa
test
in
sti
inc
pop
shrl
insl
adc
iret
jge
cmp
andb
test
rorl
or
push
push
sub
jmp
lock
inc
arpl
arpl
mov
std
rcrl
jbe
out
fnstenv
jge
and
cmp
adc
xlat
rolb
out
sub
fstpt
outsl
inc
sbbb
orl
adc
out
jp
pop
hlt
push
push
addb
mov
inc
cld
hlt
xrelease
xor
cltd
cmp
sub
stos
iret
push
out
pop
inc
roll
cmc
mov
cmp
cmp
rclb
and
sub
pop
push
scas
mov
adc
ret
mov
je
rolb
bound
push
in
dec
or
and
push
xorb
insl
hlt
pop
repz
loop
xor
dec
xchg
sahf
int
std
popf
cmp
mull
out
add
push
cmp
ss
lahf
or
popf
cmpb
iret
mov
cmpsl
inc
adc
stc
mov
lret
xchg
std
les
call
inc
pop
add
mov
insb
pop
sub
mov
mov
and
jb
dec
les
cmp
ret
or
dec
xchg
cld
cmp
sub
repnz
in
test
loopne
addb
mov
fisubl
or
hlt
jae
movsl
scas
push
or
movb
and
cmpsl
mov
es
and
mov
mov
test
loop
je
xchg
adc
mov
inc
les
xchg
scas
cli
inc
jno
dec
jl
cmp
mov
sub
dec
push
adc
jbe
fs
test
lahf
ss
cs
jg
sbb
sub
push
xor
ret
and
enter
dec
shl
aam
mov
adc
and
out
enter
mov
sti
sbb
dec
xchg
shlb
cs
push
ffree
jo
fidivrs
stc
cmc
ljmp
or
imul
cmp
adc
inc
gs
ljmp
adc
daa
inc
gs
jecxz
xor
mov
rcrb
loopne
rclb
xchg
add
push
int3
jmp
lret
cmp
add
xchg
nop
sub
pop
lods
test
mov
xchg
xchg
pop
xchg
xchg
arpl
sub
xchg
xchg
xchg
repnz
loopne
xor
leave
cmc
loop
dec
push
jne
sub
jl
popf
dec
jg
xchg
sbb
movl
push
loop
xor
stos
add
or
sub
jmp
jmp
push
lahf
notl
sbb
dec
bound
push
mov
push
test
stos
pop
cwtl
leave
cltd
frstor
add
fcoml
sbb
pusha
push
mov
jnp
mov
adc
repnz
repnz
push
mov
ss
je
adc
push
mov
daa
xor
lahf
outsl
call
mov
sbb
and
mov
jne
cltd
daa
sbb
mov
sub
out
psrlw
loope
sub
fmull
add
push
lret
and
push
test
jg
and
lock
addl
sahf
mov
arpl
push
nop
pushf
xor
cs
and
cmpsb
es
les
mov
cmp
lds
leave
mov
out
gs
shrb
int
rclb
fcoms
and
mov
xor
sti
mov
xorl
jp
stos
and
jle
test
adc
jo
mov
xchg
lock
sbb
pushf
std
es
movsl
faddl
test
movsb
cmp
test
jae
andb
imul
sbbb
mov
pop
bnd
fiaddl
pop
xchg
outsb
fldt
in
push
into
sub
dec
or
and
fstpl
stos
cmp
sub
sbbb
cmpsl
and
sub
je
loopne
lods
pop
cwtl
dec
jo
and
jae
cld
scas
movsl
inc
mov
call
cmp
mov
sbb
jne
push
jae
mov
pop
lret
inc
shrl
jecxz
scas
pop
std
leave
or
mov
or
ljmp
mov
push
ret
aas
mov
aad
outsb
inc
mov
into
jnp
push
insl
lcall
fstps
and
lret
out
and
sub
or
cld
xchg
jl
ss
mov
pop
push
jae
mov
dec
cltd
mov
fisubrs
xor
push
xlat
mov
stos
sub
xor
repnz
mov
sbb
dec
mov
push
xlat
xchg
cmp
push
mov
into
mov
pop
test
iret
push
dec
lods
sub
stos
es
xor
jmp
in
adc
negb
cmpsb
leave
loopne
icebp
call
xor
ja
ljmp
and
aam
adc
adc
loopne
push
call
rorl
xchg
jl
or
xor
xor
aaa
and
ljmp
add
fwait
ds
mov
xor
mov
push
adc
add
or
inc
jg
loop
push
and
add
out
sbb
and
and
jo
mov
cmp
inc
jp
push
test
jbe
ljmp
dec
jo
movb
icebp
cmp
mov
nop
cwtl
cmc
pop
sbb
mov
out
sahf
sub
pop
cmp
pop
pop
mov
call
add
mov
mov
pusha
cmp
pushf
repnz
pushl
orb
and
out
ds
sbb
xor
cmp
ds
out
out
and
sbb
loopne
aad
fwait
cmp
nop
pop
or
and
movl
ss
lret
xchg
in
mov
jb
mov
test
sbb
lret
cs
jecxz
xchg
inc
adc
outsl
adc
or
aad
jne
icebp
pop
jmp
inc
pop
cmp
push
test
enter
jmp
push
repnz
jp
notb
or
add
pop
mov
and
shl
inc
faddl
xlat
shrb
push
int
lods
xor
or
fmuls
xor
push
aad
xor
data16
movsl
and
jbe
or
adc
sub
cmp
cmpsl
cs
lods
xorl
test
pop
xchg
cmp
dec
iret
and
or
cmp
jns
adc
pop
rorb
push
in
cmp
sbb
mov
loop
scas
lds
lock
aas
xchg
aaa
inc
int
out
fsubrl
or
and
sub
mov
lcall
mov
add
cld
loop
fdivs
stos
mov
bound
cs
bound
mov
pop
inc
add
dec
xchg
mov
in
adc
or
loop
hlt
lret
cs
xchg
cmp
mov
xchg
pop
loopne
stc
fcmovnu
sbb
pop
mov
dec
sti
dec
roll
cmpb
push
cld
movsl
push
sub
cmc
or
add
repz
outsl
lret
lret
xor
out
cmpsl
hlt
xlat
imul
rcl
mov
cld
jnp
imul
addr16
push
jge
dec
sbb
and
dec
loop
sub
enter
and
out
cs
test
mov
mov
xchg
stos
pushf
pop
push
cld
add
pop
decb
or
xchg
rcr
js
sbb
fsubrl
inc
xchg
cmp
lods
outsb
sbb
mov
fsubrs
mov
cmp
pop
or
or
inc
ret
fmull
jecxz
out
mov
xchg
sub
insb
stc
or
lods
push
add
pop
cmp
fsubrl
pusha
xchg
inc
fisttpl
rcll
loop
jle
inc
out
lea
mov
sub
or
xchg
add
mov
push
add
mov
lods
mov
sub
dec
xchg
sub
inc
sub
and
xchg
mov
sbb
jp
cld
outsb
movsb
fldcw
aas
lods
mov
xor
int
cmp
je
imulb
cmp
mov
pop
mov
pop
rolb
sbbb
cmp
and
mov
jg
dec
xchg
lods
ffree
cvtps2pd
fidivl
cmc
or
fwait
adc
arpl
adc
push
es
jnp
stc
cmpsb
cmp
repz
test
loopne
or
mov
scas
inc
pop
cltd
std
dec
fcoms
mov
dec
je
pop
or
mov
rclb
movsb
shrb
call
mov
sub
mov
jmp
or
fs
jo
fs
and
inc
cli
loope
jae
stos
pop
ficompl
jo
push
test
lcall
mov
nop
push
sti
sbb
outsb
jbe
cld
push
or
popf
sbb
dec
test
adc
or
pop
adc
test
ret
xor
mov
mov
hlt
mov
arpl
push
xchg
cmp
call
mov
sbbl
pop
pop
mov
fcomi
lods
popf
and
adc
mov
roll
gs
add
jno
out
pop
xchg
fisubrs
cmpsb
push
cwtl
xor
stos
mulb
xor
add
sbb
pushf
daa
aad
stc
fbstp
fsts
sub
mov
jns
pop
fidivrl
push
mov
xchg
icebp
out
push
push
add
outsb
mov
mov
insb
rcrl
repnz
icebp
jno
add
jo
mov
outsl
insl
add
loopne
sub
das
push
add
dec
xchg
adc
sub
jmp
and
lcall
fidivs
repz
mov
in
inc
sbb
mov
push
sbb
in
ficompl
and
xchg
fidivs
add
jmp
xor
mov
adc
xchg
jns
mov
mov
mov
dec
jnp
iret
and
sub
insb
xor
jmp
jae
shr
mov
mov
inc
push
imul
decl
pop
jb
scas
lret
ret
mov
mov
mov
inc
cltd
or
mov
cwtl
mov
adcb
in
cmp
xor
add
xchg
xchg
ljmp
das
lods
insl
orb
rcrb
cmc
or
mov
jnp
mov
movsb
nop
ficoms
sbb
or
popf
lret
jp
rcl
dec
out
adc
gs
shl
cli
cs
rclb
sbb
lret
or
xor
sbb
call
xor
xor
xchg
or
or
outsl
test
mov
pop
or
adc
xor
aad
push
pusha
ja
xor
shl
mov
lods
loopne
rolb
push
stos
xchg
cli
pop
jae
adc
mov
int3
ret
xchg
cmp
sahf
xchg
cmc
adc
fneni(8087
sub
lock
mov
das
and
loopne
xor
mov
add
add
cmp
cmpb
shrl
cmp
adc
inc
xchg
gs
xchg
xor
stc
xchg
clc
mov
mov
jmp
or
sub
inc
cli
adc
pop
int3
pop
clc
pop
fistps
cld
inc
ja
jae
dec
lock
mov
mov
inc
lock
push
push
jb
cltd
lods
outsl
clc
add
mov
push
in
jle
jecxz
cltd
pop
notl
cmp
push
enter
jecxz
test
repnz
mov
test
insb
loopne
lahf
lcall
jnp
mov
xor
cli
loop
push
clc
add
xchg
jmp
dec
mov
mov
pop
mov
js
mov
lcall
sbb
xchg
xchg
xor
and
and
setge
arpl
mov
and
cmp
cltd
ret
loopne
ljmp
add
ds
jmp
lret
xchg
idivb
and
ret
mov
lret
push
decl
aad
nop
adc
fsubl
add
lock
xchg
add
jbe
adc
push
insl
mulb
push
mov
xchg
jb
mov
sbb
out
ss
adc
mov
ljmp
iret
add
cmp
jne
into
jl
sbb
gs
xchg
cmpb
or
mov
cmp
dec
dec
cmp
in
mov
lds
jle
lret
jne
clc
pushf
scas
add
out
ja
lret
jecxz
outsb
dec
sbb
or
ret
insl
scas
call
movsb
pushf
xor
daa
push
xchg
and
cld
xchg
loop
std
scas
jne
sbb
jae
dec
into
sub
stos
sub
in
and
shll
mov
cli
mov
pop
lock
add
movsl
andl
lahf
pop
jno
in
sub
ds
pop
test
enter
mov
out
fmul
or
ljmp
lcall
or
mov
or
in
jns
lods
sub
scas
enter
xor
shr
add
pop
sub
add
pop
cmp
repnz
cmpsb
cmp
sub
sub
cmp
lret
inc
repnz
adc
mov
or
add
mov
shl
into
sahf
pop
inc
repnz
cmpsb
aam
enter
cld
call
inc
adc
aaa
jl
decb
sti
lret
push
sahf
add
inc
aad
insb
aad
push
out
imul
mov
daa
xchg
popf
ss
in
mov
mov
popa
adc
add
push
testb
mov
jno
cld
mov
or
in
cmp
add
sbb
out
xchg
js
outsb
ret
arpl
jecxz
mov
test
cs
jecxz
iret
xor
push
frstor
scas
loope
cmp
mov
or
imul
jmp
ret
insb
jo
mov
shrb
fldl
jno
movsl
mov
push
and
sbb
mov
push
ljmp
cmpsl
fcom
xchg
xchg
adc
in
inc
aam
mov
or
out
fistpl
push
pop
mov
and
bound
pop
scas
adc
cmp
adc
scas
fmul
sti
andl
leave
fisttps
repz
push
mov
xor
int3
mov
in
cmp
hlt
jo
xchg
push
leave
lods
cld
cli
sbb
inc
dec
insl
ret
movsl
mov
inc
cmp
pop
rolb
jne
pop
arpl
and
dec
daa
repnz
scas
les
clc
fdecstp
sub
jbe
mov
and
shll
js
mov
inc
cs
sub
outsb
xor
scas
add
ja
inc
sbb
pushf
cmp
jp
call
cwtl
fs
scas
sub
jne
lds
mov
xor
pop
pop
add
cmp
inc
sahf
aad
sub
loop
rclb
mov
std
sub
jns
test
adc
fsincos
jb
js
sub
adcl
mov
sahf
cmpsb
fsts
jnp
jo
ds
xor
mov
pop
inc
xchg
test
sub
xor
outsb
pusha
push
mov
sbb
sbb
ja
push
lock
pop
pop
xchg
xor
mov
test
loop
fwait
orl
ljmp
pop
push
jle
popf
insb
push
inc
std
pop
das
test
xor
jl
cmp
push
push
lea
js
mov
scas
push
stos
sbb
pop
pop
dec
xlat
pop
mov
inc
fldt
test
lahf
jns
stc
das
cmpsl
adc
shll
insb
arpl
daa
mov
enter
bound
xchg
lret
js
js
push
lock
cmp
and
sub
jl
xor
inc
adc
out
xor
imul
fs
dec
add
test
mov
xchg
insl
cmc
aas
xchg
orl
stos
mov
lcall
mov
pushf
mov
sub
scas
cwtl
inc
bndldx
push
fcompl
pop
pop
sbb
push
add
mov
push
xchg
jle
inc
test
fsubrs
lahf
push
and
in
push
jecxz
push
mov
inc
push
xchg
loope
shlb
sub
xorb
mov
dec
fmull
push
xor
xchg
cmpsb
sub
push
inc
xchg
int3
xchg
push
nop
push
push
bound
ss
stos
lret
stos
enter
out
fcoms
mov
icebp
push
pop
out
into
mov
pop
jg
and
add
cmp
call
notl
or
adc
enter
stos
xchg
mov
cs
orb
adc
sub
cmp
mov
mov
cmpl
icebp
insl
cmp
adc
orl
jp
sahf
outsb
mov
stc
mov
inc
hlt
stc
cmpsb
add
push
insb
call
xchg
test
out
ror
push
dec
pop
inc
pop
subl
sub
fdiv
fisubl
into
cmp
and
stos
fidivs
pop
icebp
cmpl
in
push
movsl
jno
mov
push
adc
popa
cld
nop
daa
sub
sbb
push
or
fidivrs
lret
inc
xor
pop
sbb
push
sub
shrl
sub
pop
push
pop
das
push
mov
lods
cmp
adc
out
sbbl
roll
insb
or
jae
pop
xchg
rcl
ret
rcrl
cmp
das
dec
mov
inc
pop
push
mov
int
cmp
lea
aad
pop
sbb
mov
leave
inc
bound
mov
xchg
jp
jbe
push
pop
push
flds
xchg
fnsave
xchg
fwait
loope
insb
xchg
aas
push
jp
pop
repz
sub
mov
inc
xor
test
ja
clc
pusha
dec
dec
iret
movsl
xor
ljmp
subl
mov
push
popa
jae
int3
insb
inc
dec
push
js
test
inc
pusha
in
mov
test
add
data16
jae
data16
jge
cltd
repnz
jmp
jb
shrb
and
int
testb
xchg
insb
add
outsl
or
fldl
cwtl
and
xor
jnp
or
repz
pop
repz
loopne
loop
xchg
push
and
push
xor
dec
sahf
dec
in
jbe
cmp
cmpsb
mov
cmp
dec
loope
cltd
pop
cmp
add
stos
push
or
add
in
outsb
jge
push
in
mov
and
ljmp
lahf
cmp
mov
xchg
cmp
mov
cmp
and
fcompl
mov
add
pop
mul
sbb
mov
mov
fists
nop
outsl
shl
or
jae
adc
mov
nop
sahf
and
push
push
jge
sbb
imul
cmpsl
pop
xchg
push
push
adc
mov
mov
sub
jne
mov
sbb
fwait
sbb
test
lods
icebp
arpl
ret
jnp
xchg
jns
shl
cmpsb
aas
push
xchg
cwtl
scas
lea
in
xchg
dec
pushf
lods
dec
adc
sbb
ret
inc
sbb
cld
fsub
arpl
ljmp
inc
cwtl
das
jo
gs
inc
shrb
in
xchg
cmp
lods
mov
mov
rorl
jmp
repz
ljmp
ss
xchg
scas
sbb
jae
cmp
popf
mov
push
or
andb
and
cmp
fcomps
mov
mov
sbb
push
js
int
ja
repnz
cld
popa
roll
in
std
ja
aam
sbb
jnp
shlb
and
mov
lret
push
sub
mov
int
cmp
dec
into
adc
adc
dec
adc
sahf
insl
or
les
inc
cwtl
outsb
arpl
cmpl
mov
insl
jne
sbb
shlb
cmp
pop
xor
test
or
mov
mov
sar
clc
xlat
aam
test
or
mov
and
enter
scas
in
movsb
arpl
cmp
les
sub
inc
and
push
xor
sub
lock
lcall
addb
xor
insl
imul
inc
insl
xor
addl
mov
jg
xchg
cmp
push
cmp
adc
jo
push
loopne
or
xor
mov
dec
jno
lahf
xlat
xor
dec
mov
inc
mov
adc
or
xor
lcall
sbb
mov
ret
das
insl
flds
stos
or
jb
lea
pusha
lods
cwtl
fdivrl
dec
shll
or
pop
dec
adc
jo
push
imul
test
xchg
and
ret
push
xchg
adc
pop
xor
test
orl
dec
repnz
sbb
push
sub
pop
mov
pop
inc
popa
aam
cmpsl
xchg
outsl
call
test
and
insb
iret
mov
sub
dec
or
xchg
jne
rcrl
cmp
push
mov
sbb
pop
mov
test
xor
inc
jmp
lcall
mov
ret
jo
push
xchg
aaa
jl
jo
dec
cmp
fcom
mov
js
adc
mov
in
daa
call
jne
pop
ss
cmp
loope
fsts
icebp
shlb
out
mov
popf
cmp
ss
xchg
lods
mov
pop
jnp
push
pop
shr
xor
scas
jno
mov
mov
dec
mov
inc
sbb
sbb
popf
push
insb
mov
adc
jo
mov
cwtl
xor
pop
and
dec
shr
outsb
jmp
popa
addb
inc
pop
push
sbb
outsl
cmp
das
xchg
adc
es
mov
adc
ja
mov
sbb
pop
dec
repz
les
xchg
mov
mov
xchg
or
sbb
popf
popf
cmp
push
aas
data16
pop
int
and
and
test
sbb
mov
lods
sbb
or
lret
dec
xchg
dec
dec
pop
sub
lods
mov
push
mov
inc
and
push
ljmp
jmp
dec
scas
repz
cmp
rcrb
nop
in
popf
or
fldt
lds
or
mov
movsl
mov
and
mov
test
data16
repnz
push
ret
dec
stos
iret
dec
cmpsb
xor
jecxz
mov
ret
outsb
dec
add
push
mov
jp
jns
or
mov
cmp
mov
and
imul
push
pushf
xchg
xchg
mov
and
xor
inc
stc
push
cmp
fucomip
push
icebp
mov
call
cs
loopne
pop
adc
jle
xor
adc
sub
andb
pushf
xorb
std
push
pusha
adc
outsl
leave
jp
popa
sub
sahf
sarl
imul
push
xlat
jg
or
and
or
pop
into
in
and
ja
aas
push
lds
in
pop
in
scas
in
mov
pop
rol
repnz
sbb
or
push
xchg
sub
ds
pop
int
insl
out
or
jp
aad
subl
mov
lds
aam
xlat
lock
dec
cltd
mov
test
adc
xor
push
push
adc
pop
add
es
inc
mov
adc
shll
xor
and
cmp
sar
fs
pushf
xor
fldt
push
mov
or
loopne
and
insb
rolb
pop
mov
test
lods
popa
mov
popf
push
push
orb
fsubs
pop
xor
mov
jno
jb
push
pop
imul
mov
xchg
xchg
scas
xor
adc
loope
dec
gs
movsb
sbb
cmc
out
mov
and
mov
out
popa
ljmp
fnsave
xor
das
mov
jecxz
fsub
cmp
mov
sti
out
lahf
int
popl
pop
inc
lcall
outsl
cmpsb
or
and
sbb
icebp
ljmp
loop
ja
fcoms
mov
ljmp
pop
cmpl
xchg
xor
addr16
cmp
fwait
lret
xor
sar
mov
inc
iret
mov
imul
cmpl
aam
aad
lret
repnz
jns
mov
mov
pop
push
call
inc
xchg
mov
mov
push
aam
ja
jb
jns
jnp
movsb
xor
inc
add
ds
rcr
repz
and
js
fmuls
fs
pop
aaa
lahf
insl
jle
rorl
fwait
xchg
aad
in
ret
mov
fistl
and
xchg
aaa
push
leave
push
xor
add
dec
rclb
adc
fldl
mov
stos
cmpsb
pusha
sbb
sub
movsl
stos
fmulp
std
pusha
jbe
scas
bound
ja
imul
adc
rcrb
sbb
insb
add
xchg
or
adc
scas
pop
fs
and
into
jne
and
push
and
pop
cmp
bound
jbe
jp
dec
popa
daa
gs
cmp
in
in
imulb
cwtl
xchg
in
testl
pop
add
scas
frstor
es
adc
dec
or
xchg
mov
dec
jne
jecxz
in
dec
xchg
xorl
mov
movsb
mov
jno
sbb
xchg
jg
mov
aam
push
xchg
jno
pushf
xor
je
mov
jbe
add
out
adc
adcl
in
pop
dec
push
jnp
movb
dec
fcomps
movsl
sub
cld
jae
push
in
gs
cmpsb
xchg
push
jo
lcall
adc
sbbb
or
jb
mov
arpl
cmpsl
movsb
stos
sbb
sub
call
ret
cmpsb
push
das
jno
mov
mov
inc
jecxz
lret
pushf
pop
mov
cld
dec
pop
clc
out
mov
iret
or
int
sub
repz
mov
frstor
mov
xchg
mov
mov
sbb
int
pop
les
sub
notb
and
in
pusha
sti
lods
ret
mov
lds
push
sub
sbb
push
xchg
xchg
in
sub
test
int
ss
sahf
iret
shrl
push
cli
imul
push
xchg
dec
int3
adc
jle
and
inc
xchg
sbb
mov
jmp
xor
clc
fadd
subl
pop
push
in
dec
in
mov
into
jb
jecxz
jno
fwait
dec
push
and
mov
popf
cmp
loopne
xor
mov
nop
scas
mov
pop
daa
mov
nop
in
sbb
mov
sub
pop
pop
les
mov
lea
test
test
iret
cmp
mov
pop
push
pop
cmp
in
and
pop
ss
sbb
aaa
pop
stos
xor
and
jns
and
dec
imul
xor
push
mov
adc
ja
xchg
xchg
ret
sub
lea
roll
roll
mov
xchg
sti
out
jb,pn
jae
mov
xor
push
push
dec
into
fcomi
adc
pop
out
adc
xchg
xor
cmpsl
sbb
cmp
add
hlt
mov
jmp
je
jbe
mov
in
push
js
pop
jb
sub
pop
fdivp
and
pop
sub
sbb
mov
push
rcl
cmp
popa
adc
popf
cmp
mov
leave
push
xlat
ja
mov
push
sbb
cld
mov
jne
jmp
out
mov
pop
sbb
push
cltd
out
test
gs
out
lods
pop
js
sub
scas
jno
push
dec
rol
in
andl
lock
das
insl
ret
bound
push
xor
xchg
mov
mov
popa
fcom
mov
sti
je
push
add
es
lds
cmp
aaa
cltd
mov
xchg
rcrl
fldl
mov
add
and
fistl
sub
xchg
xchg
sar
xorb
addl
enter
mov
xor
xor
out
xorb
movsl
in
push
stc
in
popf
push
adc
inc
imul
lret
pushf
pop
push
dec
dec
push
daa
cltd
mov
shlb
mov
and
cmpsb
call
stos
imul
sub
call
imull
add
sbb
adc
cltd
sbb
inc
cmpsl
outsb
xchg
pop
ret
xchg
rorl
out
sbb
iret
shll
push
xor
in
jae
insl
jp
cmp
inc
es
pop
sbb
test
cmp
inc
xor
cmp
popa
pop
scas
stos
cmp
xor
pop
xchg
lret
xchg
stos
jns
inc
sub
imul
xor
outsb
cmpsb
dec
pop
pop
jae
out
cmp
in
ret
sti
mov
shrl
and
and
insl
push
icebp
pop
js
push
add
in
pop
xchg
test
test
ds
and
ror
mov
lret
push
daa
xchg
in
es
xchg
jbe
in
jl
aas
sub
xchg
xchg
stos
sub
lods
adc
adc
push
cmp
inc
sub
xchg
inc
not
imul
xchg
or
xchg
jo
inc
inc
inc
addr16
stc
sub
shrb
ds
dec
fmuls
in
imul
test
das
test
repz
pop
lahf
sbb
jbe
cltd
and
lds
test
adc
and
push
lcall
add
lsl
je
and
sbb
add
pop
mov
insl
push
mov
cltd
sbb
clc
jecxz
test
adc
popa
int
loop
sti
out
and
repz
pop
pop
jae
and
lea
daa
fldcw
dec
das
xor
daa
jle
cltd
xor
das
pop
jge
leave
lods
or
push
xchg
push
mov
jp
dec
dec
in
mov
mov
ret
cmp
xchg
loop
cmpsb
jge
push
sub
or
cs
push
lcall
push
mov
ret
xchg
mov
lods
addb
mov
push
cmpsl
popa
xlat
inc
sub
pop
dec
mov
scas
int
loope
sbb
xorb
pop
vpaddw
into
mov
adc
push
stos
fmul
pop
loop
cltd
cmp
pop
aad
aas
mov
jo
xor
mov
sahf
cmp
cs
lret
outsb
lcall
ja
cmc
jg
aaa
in
adc
scas
cltd
adc
cwtl
and
test
xor
jg
aad
add
fldenv
dec
stc
in
cmpsb
xorl
xchg
lcall
out
mov
je
in
stos
popa
aad
mov
mov
int
mov
sti
push
lea
mov
lea
mov
insb
nop
aaa
jbe
test
and
sbb
xchg
inc
pop
add
push
jge
je
out
orl
jp
adc
scas
stos
test
in
cld
cmpsl
push
xor
push
jne
lret
hlt
fnsave
adc
mov
sub
sbb
imul
add
mov
jbe
mov
arpl
sbb
xor
jmp
in
pop
and
es
stos
xchg
rcrb
push
stc
and
pop
popa
cmp
mov
xchg
int3
in
and
loop
jnp
imul
aad
mov
xchg
or
lods
inc
mov
out
add
dec
adcl
fldt
mov
les
aaa
jo
push
push
out
xchg
inc
push
test
push
push
xor
and
movsl
fwait
lock
mov
data16
nop
and
bound
or
xchg
xor
jns
cld
push
fdivrs
popf
add
mov
aad
popl
sub
mov
loopne
test
stos
es
aaa
xor
inc
insl
jb
adc
dec
xor
mov
xor
and
clc
aaa
xchg
cmp
lcall
ret
jo
call
insb
inc
jecxz
pop
shrl
fbstp
add
mov
inc
movsb
inc
cmp
test
lock
repnz
add
jo
pop
data16
sbb
imul
je
push
fnstenv
pusha
cmp
or
mov
inc
xchg
jp
cmp
xor
or
pop
divl
in
mov
sbbl
adc
add
and
pop
test
sub
iret
inc
push
sub
js
sub
push
in
jge
xchg
and
dec
mov
inc
repz
xchg
cmpsl
sbb
push
sbb
and
cmc
pop
mov
mov
xchg
daa
stos
aas
imul
push
lods
in
es
imul
stos
sbb
jbe
je
hlt
fsubs
inc
mov
jo
iret
push
stos
outsb
xchg
lret
jmp
and
pop
iret
mov
inc
xchg
dec
mov
push
xchg
pop
pop
cltd
out
ss
iret
lea
mov
and
lock
outsl
cmc
sbb
ret
rcll
dec
sahf
clc
fcmovnu
pop
cmp
xor
enter
test
push
insb
cs
rorl
roll
push
imul
sti
mov
rclb
iret
adc
push
adc
scas
pushf
out
mov
push
ljmp
sub
xchg
jl
sub
dec
mov
rorb
es
loop
push
xchg
fs
push
xor
rcrl
mov
ret
xor
mov
fimull
push
pop
push
cmpsb
int
rorb
pop
pop
int3
add
and
xchg
pushf
popf
test
mov
pop
or
shr
jb
fsts
sub
cmc
inc
mov
pop
jae
fwait
popf
jns
mov
daa
or
aad
fcomps
bnd
scas
mov
cmpsl
cmp
sbb
fbld
push
repz
push
cmp
dec
sub
nop
pop
mov
pop
jbe
jns
xchg
repnz
or
pop
imul
sub
push
sbb
mov
imull
lret
push
out
or
adc
test
jmp
add
or
jg
lahf
dec
adc
xchg
arpl
jge
das
prefetch
sahf
adc
xorl
std
inc
cmp
jb
mov
cmpsb
push
mov
repz
call
es
stos
out
loop
dec
sahf
fs
mov
leave
cmc
inc
and
xchg
pusha
dec
icebp
fwait
shll
fnstsw
ss
enter
adc
xor
pusha
lds
ret
out
xor
mov
out
mov
insl
inc
arpl
mov
fisttpll
lods
push
enter
shl
jbe
out
push
mov
add
daa
xor
outsl
mov
orl
push
shll
rcrb
arpl
es
adc
mov
fcoms
ficoms
lock
and
sub
pop
pop
dec
jg
fs
clc
int3
mov
mov
jb
fldenv
mov
jg
pop
fstl
shrl
aas
mov
jne
dec
mov
xchg
popa
and
xor
inc
jae
out
push
pop
fcoml
mov
inc
dec
push
pop
cltd
stos
xchg
mov
adc
or
std
sub
fs
mov
fisttpll
mov
in
mov
mov
or
mov
sbb
dec
mov
push
ja
dec
insl
mov
lahf
jb
rcrl
xor
mov
ja
lcall
adc
test
push
cmp
mov
dec
les
mov
test
fs
pushf
rolb
sub
movsb
fwait
pop
mov
and
mov
stos
hlt
dec
mov
inc
and
mov
adc
mov
pop
jle
pop
imulb
adc
pop
shlb
clc
cmpsl
dec
es
add
sub
mov
jmp
scas
jge
in
sbb
fmull
mov
les
xlat
jns
cmp
pop
in
mov
dec
pop
cmp
ja
jmp
andb
mov
cltd
sbb
mov
lahf
cmc
scas
aas
out
idivl
mov
fwait
dec
stc
fdivr
xchg
push
loopne
xor
iret
addr16
mov
popf
repz
mov
cmp
mov
or
mov
pop
arpl
fs
sbb
test
sbb
xchg
xor
popf
out
pop
add
call
push
jle
mov
add
add
addl
sub
lods
es
cli
xchg
imul
sbb
dec
jl
push
pop
jle
pop
stc
je
add
inc
push
fisttpll
push
test
cld
rcrl
mov
or
push
pop
pusha
adc
movsb
sub
inc
sub
popf
fcoml
pop
jg,pn
popf
icebp
inc
cltd
inc
cmpsb
movnti
cs
xchg
mov
mov
aas
push
loopnew
xor
inc
cmp
fistl
in
jecxz
outsl
icebp
nop
lcall
mov
xor
jl
or
xor
xor
sub
push
add
or
loopne
js
gs
add
jb
jbe
fnstsw
iret
outsl
xor
mov
lcall
push
jae
and
and
clc
es
jmp
inc
ljmp
or
test
aad
sub
lahf
xor
ds
add
cmp
lret
stos
dec
push
mov
ss
and
nop
cmp
repz
xor
xchg
pop
push
mov
cmpsb
mov
arpl
imulb
sbb
or
adc
sbb
push
jl
add
fwait
mov
mov
je
mov
push
mov
int3
pop
dec
enter
and
lods
pop
test
inc
cmp
xor
ret
pusha
shll
cmc
mull
insl
jbe
dec
cmp
add
aad
push
out
fs
insl
pop
sbb
mov
pop
lret
pop
cmp
lcall
mov
insb
jge
bound
rcrl
sti
out
sbb
adc
jp
cmp
cmpsb
ret
cmp
push
lods
aad
mov
cmpsl
dec
loopne
fcomip
cs
push
shlb
and
jbe
mov
cmpsb
rorl
push
xchg
fsubr
sbb
dec
leave
push
jecxz
xchg
dec
lods
fwait
push
repnz
arpl
scas
and
inc
pushl
in
fwait
shlb
popa
nop
std
outsb
adc
push
ljmp
je
das
xor
sbb
push
dec
test
add
inc
cmp
or
lcall
fs
fwait
lods
add
dec
iret
mov
push
xor
dec
pop
lret
in
dec
jnp
sbb
inc
mov
lods
mov
adc
jle
pop
adcb
cmpsb
leave
xchg
mov
mov
sahf
addl
out
push
cmp
stc
cs
push
pop
mov
inc
fstl
jmp
pop
sahf
and
sbb
add
aaa
pop
or
mov
inc
pop
push
xchg
call
into
add
xchg
arpl
inc
and
loopne
cmc
je
inc
dec
mov
dec
flds
mov
add
sub
xor
pop
test
pop
popa
stos
mov
in
mov
push
dec
jb
xor
cs
movsl
mov
sub
add
es
pop
incb
xchg
jbe
adc
cmpsb
movsb
jle
aas
popa
add
clc
int
push
arpl
lret
xor
orb
repz
sbb
out
cs
push
fildll
shrl
and
stos
stos
repz
loope
xchg
xchg
ds
xchg
jl
dec
inc
mov
out
mov
mov
pop
or
inc
mov
orl
mov
push
push
cmpsl
mov
clc
mov
mov
nop
sub
dec
jns
add
add
cmp
and
push
repnz
jbe
shr
or
stos
sahf
xor
sbb
insl
pop
out
jo
daa
pop
push
scas
dec
lock
push
mov
cmp
mov
cmpsl
add
cmpsb
adc
negb
dec
dec
dec
outsb
mov
mov
push
leave
adc
xlat
mov
movsl
add
mov
pop
mov
pop
mov
mov
shl
cwtl
jl
adc
aad
fistl
movsb
jmp
leave
jecxz
lds
pop
hlt
inc
shr
aas
mov
xor
cmp
aas
in
in
or
or
daa
pusha
jmp
xor
xchg
push
inc
psubb
outsl
mov
cmp
cmc
push
adc
arpl
out
out
fcompl
sub
jo
jmp
sbb
daa
push
cmpsb
pop
and
in
stos
xor
adc
ss
mov
jmp
and
mov
xchg
loope
mov
loopne
xchg
aad
lahf
or
mov
inc
ja
iret
xor
mov
inc
pusha
mov
lods
stc
sub
xor
sarl
jnp
push
push
fdivrs
jecxz
jecxz
ljmp
sbb
xchg
sub
mov
push
test
loopne
jp
push
adc
nop
xchg
sbb
mov
and
sahf
add
scas
adc
out
push
je
pop
cmpsl
xchg
rolb
mov
mov
ret
sahf
leave
or
jbe
xchg
jl
adc
faddl
dec
or
xchg
mov
xor
mov
int
xchg
dec
cwtl
enter
push
shll
call
adc
insl
cmp
aad
push
dec
inc
sti
subl
sub
loopne
dec
out
jo
mov
add
pop
js
cmp
cli
in
jb
pushl
sub
jp
leave
add
xchg
cwtl
xchg
test
int
adc
lea
mov
xorb
les
jl
mov
pop
call
ret
in
xlat
out
cmpsl
sbb
sahf
in
mov
mov
pop
mov
jns
dec
sti
std
aaa
mov
push
and
mov
cmp
push
add
jae
imul
arpl
jle
mov
leave
pusha
mov
jle
and
fsubrl
cwtl
xor
xchg
icebp
lods
mov
dec
add
sarb
sub
adc
push
ret
sbb
sahf
push
mov
test
fldt
xchg
sti
or
push
ja
cmpsl
out
cltd
inc
lods
fadd
into
pop
scas
sub
jecxz
js
jp
ds
filds
add
or
adcl
add
adc
sub
fidivl
lea
jg
mov
ja
xor
cmpsb
nop
loope
xor
adc
jmp
lods
dec
scas
pop
mov
add
iret
or
jns
fimuls
xchg
aas
andb
jecxz
outsb
adc
fwait
in
shr
xchg
shr
loopne
shlb
in
or
xchg
inc
mov
mov
adc
incl
adc
mov
xor
ret
insb
jnp
or
sub
sarb
sahf
sub
xor
ret
jl
mov
in
sahf
mov
mov
ret
xor
dec
xor
xchg
mov
jp
dec
push
push
rcrl
int3
dec
xor
roll
mov
idivb
test
xlat
pop
push
rcl
aad
push
fwait
out
cmp
push
jle
push
dec
lods
test
xorl
xchg
cmpsb
mov
pusha
insb
xor
call
repnz
xor
pause
push
dec
push
pop
sub
cmp
mov
xchg
sarl
lret
mov
test
call
pop
jno
sub
ja
hlt
popa
sbb
ss
sub
mov
cld
xchg
mov
lods
imul
mov
adc
adcb
movsl
jle
daa
pop
inc
ljmp
jne
scas
push
mov
xor
aas
mov
xchg
lods
loope
and
jne
push
add
sbb
addr16
fistl
test
adc
pop
stos
into
add
ds
in
add
mov
and
push
push
push
push
add
pop
or
out
aad
jg,pt
mov
cli
ret
push
xor
aaa
lcall
jg
fs
shl
or
lahf
jnp
mov
sbb
int3
xchg
nop
test
outsl
jmp
or
pop
in
cmp
mov
punpckldq
mov
pop
sbb
pop
sub
jge
and
xor
cld
jns
lcall
sub
lcall
movsl
fisttps
xor
sbb
xchg
push
xor
mov
in
inc
stc
inc
pop
mov
fwait
loop
mov
stos
inc
vxorps
mov
cmp
and
rcll
dec
leave
jns
xchg
addb
test
rol
jno
out
lahf
lcall
les
jmp
inc
cmpb
ljmp
pop
rsm
leave
rep
je
cwtl
mov
cmp
nop
pop
jbe
cmpsb
push
popl
push
dec
mov
cmpsb
ds
das
nop
bound
lret
les
ret
pop
sbb
xchg
test
test
inc
jns
mov
ret
mov
xchg
jb
adc
jbe
fstpt
xchg
sti
jnp
pop
dec
dec
push
cli
sarl
jb
popa
jne
and
xchg
mov
fs
leave
or
mov
push
repnz
jb
sbb
pop
lods
lret
testb
xchg
ds
sbb
push
daa
daa
jo
loop
es
jge
cwtl
dec
jno
add
mov
xor
mov
outsb
add
push
mov
or
repnz
mov
and
xchg
sbb
and
hlt
ret
mov
mov
cld
add
les
dec
inc
mov
rcrl
movsb
leave
scas
testb
inc
cmp
jmp
add
push
fidivs
inc
push
fs
pusha
cmp
aaa
push
std
xor
mov
ficompl
add
orb
jbe
cli
clc
mov
in
jnp
push
insb
sub
addr16
lea
dec
jge
mov
popf
cmp
roll
jmp
or
mov
mull
divl
inc
imul
addr16
sbb
test
xchg
or
fnstcw
xchg
and
arpl
mov
xchg
nop
mov
push
jecxz
dec
jmp
mov
call
add
and
push
aaa
jl
fxch
xlat
repnz
mov
push
gs
push
pushf
in
mov
mov
sbb
sub
hlt
mov
divb
ds
in
cwtl
rcll
add
or
popa
insl
sbb
push
jle
adc
fldt
jb
push
jns
scas
int
xchg
sbb
xor
xor
leave
jl
fistl
ljmp
push
xchg
mov
push
scas
mov
ss
loope
mov
cmp
inc
addr16
loop
sub
nop
call
std
ret
dec
inc
fbstp
repz
pop
pop
fildl
roll
xchg
dec
jmp
lock
xchg
push
stos
xchg
cmp
mov
mov
std
cld
jecxz
pop
pop
and
icebp
sub
mov
movsl
fimull
push
mov
test
test
xlat
popa
jne
pop
xor
sbb
subl
and
xchg
movzwl
push
aas
dec
sahf
decb
stc
jle
cmpsl
sbbl
ss
cmpsb
inc
popl
sub
xchg
fidivrl
sub
adc
dec
ret
outsb
inc
sub
inc
cmp
repz
fistpll
and
insb
mov
adcb
mov
insl
cmp
cmp
add
cmp
pop
decb
push
inc
in
push
xorl
jl
mov
fsub
sub
adc
enter
add
int3
or
cmpsl
pop
jg
add
rorb
aam
hlt
or
test
mov
std
mov
mov
jle
ss
lcall
jb
and
iret
adcb
cld
movsl
add
push
mov
les
dec
mov
and
jg
or
fsts
lods
cmp
or
or
fsubrs
les
insb
dec
shll
shrl
inc
test
mov
fmuls
mov
cmp
inc
rol
das
addr16
mov
xorl
xor
arpl
and
addl
loope
push
adc
push
jp
jg
mov
cmp
adc
rolb
rorl
push
std
std
arpl
loope
js
out
pushf
xchg
adc
dec
cmpl
mov
push
mov
movsb
arpl
xor
nopl
xchg
sbb
scas
fcoml
fisttps
mov
popa
mov
mov
dec
push
pop
popl
loop
push
push
arpl
fisttps
xor
ja
pop
insb
sti
or
ljmp
repz
cmp
imul
jecxz
ret
cmp
pop
js
scas
or
sti
add
push
dec
cs
mov
mov
or
sbb
scas
pop
mov
stos
andb
push
pop
out
mov
data16
ret
lahf
out
mov
sub
mov
dec
sbb
cwtl
inc
jo
add
lock
popf
pop
mov
cli
jb
cmp
shr
fwait
popf
dec
dec
mov
fdivr
test
scas
lock
xor
ret
or
push
mov
sub
insb
pop
xor
sub
sbb
loopne
ljmp
sbb
xor
jg
movsb
xor
adc
leave
mov
mov
adc
lret
idivb
out
daa
lods
arpl
inc
mov
mull
leave
addr16
pop
or
loop
fbstp
stos
push
inc
pop
add
pusha
fs
cmp
scas
jne
cmp
lahf
cmp
xchg
call
cltd
mov
addr16
test
loopne
dec
rorb
jbe
jo
inc
pop
adc
addr16
push
push
stc
and
sbbl
or
add
push
mov
in
lods
inc
fdivl
cmc
sbb
test
dec
cli
out
sub
in
movsl
clc
imul
xchg
inc
bound
sbb
inc
add
orb
imulb
push
fdivs
push
fucom
lds
cmp
shll
fdivs
xor
leave
arpl
adc
int
sub
clc
mov
cwtl
push
pop
push
xor
jnp
jb
cli
imul
sti
add
es
xchg
pop
ljmp
inc
xchg
repz
xchg
clc
pop
sub
xchg
rolb
fsts
pop
cmp
xlat
movsl
or
push
mov
enter
cmp
rcrl
mov
mov
add
add
rcll
ret
inc
jmp
clc
adc
lods
push
setp
out
cwtl
mov
mov
pop
and
mov
pop
pop
jns
ret
popa
mov
mov
out
inc
mov
cmp
push
imul
jo
ja
push
aam
add
xchg
mov
setno
push
cmpl
inc
in
dec
cmp
mov
sahf
adc
push
lds
lahf
cmovnp
mov
sbb
shrl
mov
inc
dec
dec
mov
cltd
icebp
out
or
sbb
int3
push
loope
js
dec
stc
fs
cmpsb
add
jo
and
sub
or
mov
jb
sbb
jo
mov
pop
loopne
push
fists
xchg
adc
insl
js
shlb
xor
imul
push
xchg
push
cmp
dec
hlt
xchg
lods
std
call
push
std
jnp
insb
je
dec
fwait
loopne
and
mov
out
scas
aam
subl
fsubl
push
jecxz
ret
lcall
fmulp
popf
cs
cmp
data16
mov
pop
les
test
mov
sbb
stos
lock
ret
jne
xchg
in
scas
inc
jmp
mov
nop
insb
mov
das
in
cld
fldenv
lea
xchg
and
lods
xchg
out
xor
cmp
push
shrb
push
andb
pop
bound
cmpsb
or
not
cli
mov
push
sbb
push
inc
sbb
jecxz
icebp
mov
pop
inc
xlat
imul
add
inc
xlat
add
cwtl
paddd
dec
cmp
repz
cmp
jns
mov
out
dec
andl
mov
push
xchg
pop
inc
aad
cmpsb
icebp
in
lcall
pop
cmp
mov
add
push
adc
inc
xor
pop
pop
jns,pn
push
sbb
inc
rcrb
sub
inc
push
ja
lock
fld
mov
or
lret
inc
imul
scas
mov
cmp
push
fisttpll
xor
cmp
inc
xor
inc
jle
push
or
adc
sahf
mull
push
cmp
test
std
pushl
std
push
and
filds
xchg
in
mov
xchg
adc
iret
sbb
sub
test
xchg
stc
cmc
jecxz
clc
nop
cld
lea
lds
xchg
das
mov
add
repz
or
test
sti
fsubrs
jl
fs
and
fstpt
scas
inc
and
mov
and
xchg
outsl
mov
out
cs
std
cmp
dec
and
jmp
sbb
cltd
push
js
in
xor
addl
and
mov
push
push
push
push
pop
inc
cmp
mulb
xchg
scas
loopne
adc
mov
test
xor
std
lret
out
stos
popa
sub
lock
xor
call
mov
and
imul
or
adc
iret
mov
jge
mov
dec
and
cwtl
jne
xchg
push
clc
daa
cmpsl
dec
lds
push
pop
sub
outsb
push
lcall
hlt
or
shrb
push
outsb
add
mov
pusha
lahf
lcall
and
pop
jno
push
dec
ror
mov
or
hlt
stos
inc
pop
cwtl
sbb
push
repz
in
mov
aad
outsb
sub
mov
push
fmull
push
jb
stos
sub
clc
loopne
out
push
pusha
dec
scas
loope
lods
lret
mov
sub
mov
std
mov
in
das
mov
iret
xchg
dec
das
xor
cwtl
jne
push
xchg
or
xchg
test
sar
xor
test
in
cmpsl
sbb
cmove
out
push
mov
sbb
mov
loope
mov
jmp
xchg
adc
imul
add
push
inc
cmpsl
out
cmpb
inc
jp
fidivrs
inc
in
cmpsl
add
mov
inc
repz
sbb
mov
dec
ret
out
pop
xchg
jbe
dec
xorb
testl
pop
mov
lcall
in
aam
mov
adc
mov
pusha
shlb
sub
daa
jg
push
xor
cmp
adc
repz
fwait
sub
add
das
sub
pop
je
inc
stos
in
cli
and
sti
testl
push
loope
push
fistl
fidivl
aas
aas
mov
mov
pop
mov
xchg
ret
leave
dec
stos
mov
mov
adc
dec
mov
out
lds
cmp
add
pop
iret
or
pop
sub
lock
sarb
out
or
cwtl
xor
clc
data16
clc
aaa
or
mov
outsb
fdivs
inc
std
cld
in
jb
fs
sahf
or
pop
xchg
push
xchg
sti
ret
ret
aam
and
jecxz
call
and
dec
ljmp
aaa
adc
sub
ffree
std
xchg
dec
mov
pop
jp
arpl
cmp
mov
push
pop
outsl
andb
push
add
jl
rclb
stc
fcmovbe
or
mov
rorb
mov
popf
sti
mov
jg
movsl
lods
sub
sahf
xchg
xor
sub
out
shlb
jg
mov
sbb
pop
cmc
cs
jecxz
sub
mulb
cmp
mov
jo
cmpsl
xor
jle
ja
push
jo
push
leave
mov
mov
push
fdivrl
fnstsw
imulb
mov
mov
pop
ds
or
imul
jb
jo
push
and
sub
repnz
mov
sbb
loop
xor
or
mov
adc
adc
xor
pop
mov
test
add
cmp
add
push
movsb
mov
ljmp
imul
fs
push
jns
stc
xchg
cs
stc
out
ffree
mov
mov
dec
push
shrb
pop
into
fsubrs
mov
push
aaa
sub
sahf
rcll
cmp
xchg
adc
pop
adcl
jg
je
fnstcw
xor
dec
ds
fisttpl
xchg
pop
xchg
out
adc
pop
iret
lcall
or
test
mov
pop
sub
stos
mov
sbb
fadds
sub
cmp
xor
inc
mov
xchg
push
add
subl
cmpsb
test
jge
ret
and
xor
sbb
sbb
stc
out
insb
pop
test
pop
in
flds
push
imul
divb
jbe
xchg
cmp
mov
arpl
repz
cs
cwtl
xchg
mov
add
les
bound
xchg
xchg
xor
cmp
or
in
mov
enter
or
inc
imul
add
xor
sbb
adc
sbb
sbb
mov
mov
and
push
mov
pop
xor
jns
add
dec
inc
imul
test
mov
mov
inc
push
fs
adc
push
or
fadds
add
pop
pop
outsb
mov
inc
pop
inc
lcall
js
rcll
sub
lahf
push
pop
sbb
test
sub
push
shlb
jmp
iret
mov
shl
inc
loop
add
dec
xchg
insb
icebp
cli
cmpsb
and
xchg
stc
push
flds
les
or
inc
push
pusha
pop
aad
or
xchg
fwait
call
cli
mull
in
add
test
addr16
repz
rol
ds
ss
or
cwtl
xlat
mov
int3
int3
lret
xlat
repnz
imul
jmp
and
push
inc
int
and
cmpsb
cmpb
jmp
pushf
inc
pushf
xor
out
orl
pop
sti
xlat
xor
jnp
rclb
sbb
jno
dec
push
mov
insb
cs
cld
mov
xor
push
mov
enter
sbb
cld
fsubs
and
xchg
and
cmp
xor
repnz
cmp
loopne,pt
loop
ss
stc
fs
jp
pop
test
pop
insl
outsl
lods
cmp
loop
or
xchg
sub
pop
dec
adcl
cmp
sahf
adc
sub
push
test
inc
sbb
sbb
pop
scas
scas
adc
in
pusha
repnz
cmc
xor
jnp
or
aam
cld
loopne
pop
scas
out
cli
daa
mov
enter
xchg
jo
std
or
mov
or
dec
adc
xchg
js
mov
and
or
hlt
test
pop
int3
lahf
or
inc
xor
and
jmp
inc
stos
dec
ret
insl
add
daa
daa
sbb
mov
inc
or
and
lret
subb
jnp
jle
xchg
cmc
cld
and
add
lret
pusha
mov
xchg
rcll
push
jecxz
mov
shlb
xor
out
sti
mov
jmp
jp
push
out
loope
out
repnz
push
pop
popl
adc
mov
loop
pop
mov
sub
shl
add
fwait
adc
int3
or
stos
push
mov
loopne
movsb
pop
sub
inc
push
mov
lret
mov
mov
jno
pop
add
mov
mulb
cmc
popa
cmc
push
adc
shl
cli
dec
sbb
pop
ror
xchg
les
sub
movsl
repz
mov
popf
outsl
sbb
mov
inc
lods
pop
scas
add
int
loopne
xchg
les
and
popf
cmc
inc
lahf
and
jle
dec
imul
inc
rolb
jg
pop
ss
jns
inc
inc
sub
jmp
sahf
jg
fcmovbe
sub
icebp
ja
mov
test
insl
aaa
out
shll
popa
inc
dec
sbb
mulb
loopne
mov
dec
xchg
ss
jg
sbb
lret
ss
or
fbld
stc
mov
enter
es
push
jl
jmp
sti
pop
adc
loopne
mov
sbbl
loop
jo
pop
loop
dec
addl
pusha
sbb
sarl
mov
mov
add
insb
pop
sbb
mov
sbb
adc
insl
jp
decl
out
xchg
je
cmp
dec
adc
std
in
popa
cmc
sub
loopne
aaa
aaa
or
mov
out
daa
fdivr
inc
lods
cmp
inc
or
cmp
leave
ficomps
ljmp
lahf
jl
pop
dec
xchg
jns
xchg
and
sti
mov
iret
add
push
pushf
xchg
push
mov
and
jle
inc
add
mov
ja
stos
fcmovnb
sahf
fstps
adc
movsb
jb
xchg
ss
sahf
cmp
xor
cli
jns
pop
adc
int
fadds
rcrl
ret
js
ret
and
aas
mov
push
mov
mov
push
test
dec
shll
data16
cli
idiv
jl
clc
mov
fs
and
movsb
pop
bound
sbb
stos
sbb
sub
jmp
push
loopne
ret
adc
pop
or
repz
cmp
sub
sub
or
push
lods
enter
mov
clc
or
fs
add
outsb
out
mov
add
jns
sar
xor
shl
xchg
cmpsb
ret
inc
bound
scas
add
cmc
sti
push
arpl
dec
pop
xchg
sbb
mov
fiadds
mov
shll
cmpsb
je
es
test
push
outsb
pushf
mov
adc
imul
xchg
ficompl
or
cmp
xchg
orl
mov
pushf
inc
sbb
adcb
pop
xchg
xchg
dec
addr16
lcall
loopne
add
lret
movb
pop
cmp
mov
adc
cltd
inc
or
mov
push
push
sub
and
stc
xchg
int3
mov
pop
fs
fwait
int
inc
fmuls
sub
shufps
sahf
xor
mov
xor
stos
adc
or
jne
add
and
jns
xlat
into
sti
xchg
popw
push
pop
pop
stos
sbb
cmpsl
clc
test
imul
xor
imul
and
hlt
popf
xor
shrb
test
out
frstor
mov
push
cmp
push
xchg
mov
add
mov
xor
mov
or
jnp
xchg
jb
mov
clc
mov
jne
adc
imul
shll
xchg
xor
adcb
das
mov
outsb
xchg
outsl
rcr
clc
stos
shrb
sub
cmp
testl
ret
lret
cmp
stos
push
enter
xchg
je
std
lret
xor
pop
mov
mov
lds
stc
repz
mov
sbb
scas
push
mov
xor
add
jmp
lret
aad
push
mov
and
xchg
dec
test
push
add
adc
push
inc
scas
repnz
movsl
cmc
dec
cmc
testb
lcall
mov
push
jle
xchg
xchg
mov
push
ret
jne
pop
and
ret
mov
mov
andl
sbb
scas
cli
cld
and
loop
insb
popa
dec
insb
inc
sub
inc
loopne
daa
ret
mov
pop
push
call
cmp
mov
ds
iret
pop
insb
push
outsb
lds
inc
mov
cs
pushf
push
mov
push
int3
and
pop
adc
push
adc
or
dec
xor
mov
cltd
leave
fnstenv
movb
dec
pop
mov
lret
sub
popa
test
sbb
xlat
push
add
dec
adc
mov
idivl
cmp
cmp
add
ss
jo
or
xchg
iret
jge
jne
in
ja
pop
neg
add
inc
test
mov
xchg
jmp
imul
sbb
and
jecxz
or
es
jns
pop
push
imul
rcll
or
daa
pop
inc
idivb
mov
insl
inc
inc
movsb
mov
sub
in
mov
pop
sti
rorb
cmpsl
mov
test
inc
outsl
mov
lcall
aam
mov
rolb
das
div
mov
mov
inc
lea
jb
je
addr16
pop
addr16
pop
cmp
xchg
cmpsl
idivb
xchg
test
negb
sysexit
aam
test
jbe
inc
lcall
pop
mov
jne
incb
mov
mov
hlt
xor
fistps
in
fpatan
mov
mov
dec
dec
mov
mov
jbe
push
mov
rclb
mov
scas
movsb
pop
call
xor
repnz
pusha
gs
call
sub
les
in
xchg
or
cld
mov
ss
xor
andb
addr16
dec
push
popf
add
test
jae
adc
lcall
mov
ja
jle
xchg
cmp
push
mov
dec
mov
pushf
das
loop
lods
out
xor
and
add
repz
xor
pop
mov
lahf
adc
and
filds
insl
cld
movsl
addb
pop
push
or
or
mov
loop
test
inc
test
scas
mov
int3
cmpsl
fnstsw
push
adc
lock
xchg
pushf
and
add
ret
pop
or
pop
stos
push
pusha
mov
cmp
lahf
xchg
xor
inc
xchg
mov
push
out
pushf
mov
in
xor
insb
in
incb
push
ljmp
jmp
xor
pop
xchg
fbstp
push
iret
scas
dec
sbb
push
jae
mov
fs
neg
outsl
sarl
data16
rcr
bound
xor
jmp
fwait
sbb
adc
jo
call
push
mov
in
lock
mov
xor
ss
mov
cmp
cmp
js
idivl
fisubl
rorl
and
push
arpl
stc
jno
jge
jnp
jo
imul
jle
insl
pushf
ds
int3
fs
or
xor
mov
in
mov
cmpsb
mov
aam
push
push
push
or
add
jo
or
pop
mov
mov
lods
inc
xlat
bound
mov
mov
or
cmc
sti
aas
mov
pop
adc
daa
add
andl
mov
arpl
andb
test
lods
stos
cld
jnp
add
jne
lock
and
scas
mov
divb
iret
test
mov
mov
xchg
jo
fcoml
stos
aam
arpl
repz
sub
inc
jno
es
rorb
add
into
les
out
cwtl
clc
inc
nop
pop
and
in
and
xorl
js
int3
loop
sbb
inc
sbb
or
mov
pop
adc
inc
push
jbe
loop
ss
or
loopne
or
and
adc
push
mov
fwait
jmp
add
ja
sub
add
mulb
sbb
pop
inc
xchg
push
add
movsl
push
test
dec
ljmp
push
xor
sbb
mov
cmp
movsb
push
lret
movsl
push
ret
pop
or
or
sub
adc
cltd
adc
or
lea
sbb
add
jns
fdivrs
adc
xchg
adc
test
sti
xor
pop
mov
inc
loopne
repz
xchg
jne
cmp
sub
xchg
bound
shrb
add
out
and
dec
in
lret
mov
mov
inc
rcr
fstps
dec
jecxz
lods
stos
or
rcrb
cmpl
ucomiss
mov
jne
aam
sbb
and
int
mov
mov
fwait
clc
dec
mov
mov
jge
jae
lock
hlt
xlat
mov
sahf
adc
insb
jb
ss
shll
xchg
jno
cltd
xor
subb
shr
pop
outsb
inc
lods
lds
xchg
mov
mov
mov
bound
adc
iret
sub
inc
inc
mov
lds
fistl
dec
cli
insb
push
sub
adc
push
mov
cltd
pop
fdivl
adc
lss
cltd
dec
xchg
enter
cmp
or
dec
sub
enter
mov
fisubrs
pop
push
iret
sbbb
add
aas
xor
ficoml
dec
fidivs
push
dec
ret
in
add
cmp
clc
loope
mov
push
mov
sub
jecxz
jge
lcall
adc
imul
cwtl
dec
scas
xor
and
pop
push
popf
or
lods
imul
mov
lret
or
sbb
lret
ja
and
add
testb
pop
aas
scas
xchg
movsl
imul
pop
arpl
ret
adc
mov
sahf
dec
add
clc
xor
dec
ds
add
std
into
sbb
mov
test
jb
fs
repz
fs
cld
lretw
stc
aaa
test
in
xchg
cmp
test
call
pop
stc
adc
js
shlb
out
adc
cmpsb
adc
cmp
push
push
jb
and
sarb
sub
add
dec
xor
cmp
mov
mov
cmp
inc
xor
xchg
adc
movsl
pop
ljmp
pop
ret
fsubl
in
xor
in
in
ret
jecxz
add
outsl
ret
shrb
mov
mov
mov
sti
enter
insl
cwtl
or
enter
add
pusha
fcmovnb
push
cwtl
jo
xchg
mov
mov
xchg
inc
into
jae
call
into
dec
stos
negb
dec
insb
nop
leave
fistps
jno
sub
xor
mov
cmpsb
push
repnz
in
test
sbb
xchg
xchg
adc
xchg
sahf
pop
and
lea
sub
rol
push
stos
enter
adc
clc
adc
jecxz
jns
repnz
sbb
add
add
jb
sbb
iret
lea
lea
ret
cmp
stos
cmp
or
mov
xor
testb
xor
xchg
in
cwtl
xor
sbb
pusha
jle
inc
cltd
adc
sub
mov
xchg
dec
dec
xor
mov
pop
jg
insb
mov
into
jb
pop
mov
jns
stos
or
pop
mov
cmp
lea
pop
in
adc
add
es
test
mov
sbb
pop
push
js
mov
add
pop
das
ljmp
jp
repz
cs
sub
out
fdivrp
xor
enter
std
dec
daa
adc
rcrb
sub
push
aad
push
call
adc
aam
lahf
aad
cwtl
ja
lret
inc
in
pop
std
pop
outsb
pop
scas
shlb
in
mov
dec
push
test
sbb
les
jecxz
scas
push
testb
pop
mov
or
sbb
mov
out
das
mov
add
mov
lcall
inc
imul
cs
ficoms
mov
fdivs
test
inc
insl
xlat
dec
pop
inc
sbb
cmp
jne
in
jns
add
je
imul
stos
inc
jp
mov
jae
push
push
adc
mov
adc
data16
pop
das
roll
mov
cli
mov
inc
push
add
push
aad
das
insl
aaa
in
xor
subb
sbb
dec
push
gs
jge
pushf
andl
mov
ljmp
dec
scas
insl
dec
add
and
jecxz
push
sub
mov
inc
out
lret
sbb
sbb
jbe
cwtl
xchg
orl
ficoml
jns
sbb
fimuls
or
rcr
xor
mov
xchg
insb
mov
insb
sahf
sbb
scas
cmp
jmp
and
dec
pop
dec
push
xchg
pop
jmp
cs
sub
adc
test
fnstsw
insb
hlt
sbb
push
adc
cmpsl
adc
add
push
sbb
or
leave
cmpsl
sbb
test
pop
push
xchg
das
test
dec
ja
movsb
mov
mov
inc
dec
mov
ja
and
and
ja,pt
cld
lret
mov
push
call
cmp
xchg
aaa
xchg
sub
cmpsl
into
icebp
mov
int3
out
fadds
lret
pop
iret
sbb
into
dec
or
xchg
xchg
lahf
inc
imul
push
lahf
push
lcall
add
testl
call
cltd
or
add
loope
inc
push
add
mov
ja
insb
sti
pusha
cmpsb
inc
jge
or
mov
mov
and
inc
out
movsb
sub
push
xor
push
ret
push
bound
fs
add
xor
aaa
xchg
xchg
jns
xlat
mov
adcb
lods
int3
push
push
out
sub
fdivrs
mov
test
int3
fisttps
out
jecxz
sahf
dec
sbb
fcmove
push
imul
xor
and
jecxz
push
mov
xchg
movsb
sub
push
xchg
xchg
pushf
out
xorb
out
stos
pop
loopne
pop
shrb
cbtw
sub
call
xchg
jns
call
jb
movsb
pop
pop
std
sbb
imul
aad
inc
mov
cli
jbe
mov
pop
sbb
fldcw
lea
xor
push
loop
dec
fadds
jl
dec
test
sti
loop
cltd
pop
xor
lret
cli
pushf
call
jp
adc
xor
push
ret
shrl
dec
cmpsl
roll
dec
inc
jae
js
mov
fucomp
cs
sub
xor
pop
and
movsl
pop
pop
lds
cltd
les
mov
pop
dec
push
arpl
cltd
ds
jl
notb
data16
test
adc
sbb
sbb
fidivs
lds
test
lock
pop
xor
mov
inc
imul
jl
mov
pop
cmp
cmp
test
pop
push
push
fcoml
into
add
add
call
dec
mov
xor
cmp
or
and
out
pop
xor
mov
adc
divb
mov
push
cmp
or
mov
push
popf
dec
mov
cmpsl
xchg
sbb
lods
jne
cs
sbb
xor
cs
orl
out
ret
mov
add
loope
xchg
sbb
fidivl
loopne
mov
pop
mov
jae
arpl
sti
jge
inc
sahf
xchg
mov
mov
loop
xchg
lods
sbb
das
inc
add
pop
jg
fcomip
pushf
fldl
fsubs
mov
or
inc
cmc
je
xchg
sub
daa
mov
fstl
adc
fstpl
xchg
cmp
int
sbb
xor
add
outsb
stc
cmp
jnp
jecxz
call
testb
xorl
and
leave
fucomi
xchg
jns
sbb
repz
sub
adc
mov
push
cmp
sub
aaa
rcr
hlt
cmp
mov
pop
xchg
shl
bound
pop
mov
insl
ss
adc
xchg
sub
xor
dec
push
add
inc
ljmp
xchg
sahf
pop
sahf
cmc
adc
ljmp
out
orl
lret
mov
fcmovnu
mov
mov
fisttps
imul
sub
dec
mov
mov
xchg
cmpsl
and
xor
and
out
push
mov
push
rolb
jmp
std
sarb
shrb
adc
lea
ljmp
or
or
inc
pushl
lods
out
ret
push
testl
jnp
jnp
xor
dec
outsb
out
add
push
scas
dec
sub
out
shrb
and
mov
pop
cmp
push
leave
mov
int
js
inc
es
stos
fildl
inc
je
rcr
ss
div
fdivl
pop
out
ja
and
data16
sbb
sbb
inc
lods
pop
mov
hlt
push
test
test
pusha
sarl
xchg
cmp
iret
mov
xchg
and
sbb
ja
and
lret
or
and
cmp
out
and
fcomps
lahf
out
aas
xor
xchg
loop
add
xor
test
daa
or
or
mov
jb
hlt
adc
rorb
fisttpll
or
inc
push
jb
xor
js
pop
sbb
push
insl
jg
fdivs
jmp
cmp
or
in
lcall
jns
ret
or
jae
cs
inc
in
loopne
sub
or
fiadds
pop
push
xor
cmp
push
adc
andb
rcr
cltd
push
pushf
or
es
hlt
mov
bound
xchg
repz
mov
iret
mov
cmpsl
movsb
pusha
mov
mov
mov
cmp
shll
das
loop
rorl
lahf
sbb
ficomps
sbb
imul
push
jge
sbb
je
sub
push
mov
insb
adc
mov
mov
sahf
jecxz
insl
and
testb
fnstenv
fsubs
mov
pop
imul
aas
xchg
js
mov
mov
or
push
mov
shll
loope
mov
not
icebp
sbb
cmp
test
loop
in
cmp
out
je,pn
dec
out
shr
sub
lock
loope
xor
jge
or
test
mov
mov
jno
mov
dec
xor
lcall
out
xchg
inc
call
cmp
mov
lret
arpl
xchg
xchg
lret
jmp
loopne
push
aaa
dec
movsl
arpl
push
xor
adc
les
ljmp
jmp
mov
sarl
cmpsl
cmpsb
lea
push
adcb
cmp
movsl
test
dec
sub
jne
mov
add
pop
rcrb
adc
test
imul
dec
call
div
and
int
std
test
xchg
adc
xchg
mov
aad
inc
popf
and
out
pop
jo
lea
cmp
add
out
mov
lea
jmp
clc
pop
enter
push
scas
pop
out
subl
cltd
sub
dec
push
cld
adc
sbb
mov
jecxz
decb
sbb
jecxz
imul
lea
sbb
popf
sbb
dec
out
in
sub
cmp
jecxz
sti
pushl
test
or
xor
cs
lret
or
or
jp
jmp
jne
shll
push
pop
mov
movsb
mov
imul
xchg
loopne
movsb
pop
cmp
or
xchg
dec
push
clc
imull
mov
and
push
inc
pop
out
imul
push
aad
mov
mov
mov
movsb
xchg
mov
lock
fwait
inc
mov
scas
sub
sub
sub
sbb
mov
nop
out
dec
hlt
popf
jl
pushf
or
pop
setle
jns
adc
push
jo
jno
sub
mov
pop
call
adcl
or
mov
jnp
add
stos
jae
mov
test
sub
mov
iret
test
mov
cmp
orps
cmp
mov
clc
mov
cmp
test
lock
jbe
outsl
cmp
add
xchg
shll
mov
and
stos
or
mov
cmpsb
jb
push
cmc
stos
xchg
or
sbb
scas
adc
mov
repnz
adc
adc
popf
fistpl
outsb
or
inc
jp
scas
lcall
adc
mull
je
lea
gs
sahf
mov
pop
xchg
frstor
adc
sbb
orb
pop
mov
frstor
adc
sbbb
pop
inc
cmpsb
or
mov
bnd
dec
cltd
add
push
lds
dec
ds
mov
or
mov
xlat
or
or
leave
data16
sub
xchg
leave
cmpsl
mov
mov
xor
cmp
cmp
sbb
mov
hlt
xchg
push
mov
shlb
enter
adc
in
sbb
lret
out
jbe
push
aad
xchg
dec
mov
dec
cmp
cmp
jmp
sub
psubusb
testl
xchg
dec
adc
shrb
shr
xchg
jp
push
jno
les
inc
iret
fildll
mov
and
xor
inc
testl
imulb
xchg
jne
pop
mov
or
or
xchg
fs
dec
adc
inc
insb
push
aam
fs
jecxz
cs
jb
inc
or
jmp
mov
push
int
shlb
or
leave
and
jle
aas
jno
push
int
int3
pop
test
clc
aas
xchg
sub
or
lahf
stos
movsl
pop
stc
rorl
mov
cmp
mov
mov
xor
jg
xchg
ret
ss
sub
scas
xor
cld
cwtl
test
sub
scas
adc
or
cs
fmul
mov
mov
fstps
pop
fwait
or
rep
push
dec
cwtl
sbb
inc
and
cmp
fdiv
xchg
dec
jnp
push
xchg
pop
out
jmp
jbe
adc
int3
je
int3
js
js
adc
cmp
mov
arpl
lods
dec
fs
lahf
or
add
fldcw
icebp
and
xchg
xor
mov
lock
or
jp
popf
inc
sub
mov
cmpsb
xchg
mov
and
movsl
mov
frndint
push
out
xchg
cwtl
inc
icebp
sbb
movsb
mov
mov
xchg
ljmp
sub
aaa
dec
movl
inc
mov
xchg
xchg
in
in
jmp
xchg
imul
jae
sbb
mov
lret
xchg
jge
cli
xchg
pop
push
sub
mov
aaa
negb
aas
xchg
mov
inc
push
mov
in
das
addr16
pop
aas
outsl
imul
push
fildl
shl
pop
xchg
les
hlt
cs
or
insb
leave
aas
adc
jg
mov
es
xchg
test
pushf
imul
sbb
jle
rorb
jmp
sbb
insb
sbb
clc
jno
sub
out
dec
xchg
mov
pop
shll
mov
fmull
imul
xor
popa
pushf
push
push
lcall
aam
jno
push
dec
loopne
fnstcw
fmull
loop
sti
inc
iret
enter
in
mov
mov
cli
add
stc
cmpsb
adc
inc
andps
and
dec
dec
xor
fsubrs
lds
test
cmp
sbb
test
int3
rsqrtps
rol
or
ficoml
dec
jmp
push
lret
test
test
mov
or
push
mov
aas
insb
xor
sbb
xor
jp
push
mov
ret
sbb
inc
cmpsl
sbb
call
repz
ficompl
cmp
gs
flds
jmp
jle
fnstsw
xchg
fldt
in
fdivrl
in
and
or
sbbl
push
enter
out
ret
and
xor
xchg
xchg
jg
ret
test
ja
or
je
stos
iret
stc
loopne
int
adc
loope
sbb
dec
hlt
xchg
mov
movsl
fcoml
jb
idivb
push
or
jae
into
out
xchg
scas
mov
imul
lods
enter
inc
jge
test
movsl
dec
jmp
lcall
cltd
xor
mov
stc
in
into
xchg
cltd
adc
sub
fs
xchg
rcrb
fdivs
and
mov
cmp
xchg
or
mov
movsb
mov
push
in
dec
loop
fucomp
mov
cld
cltd
daa
rcll
ret
and
outsl
test
add
inc
sub
add
push
mov
pop
subb
leave
push
sub
loope
pop
push
and
test
fcoml
lahf
lock
push
or
sbb
imul
mov
lret
mov
pop
test
gs
shll
xor
lds
aas
cmp
sub
xor
inc
les
mov
and
das
out
fidivl
cmp
cmc
and
int3
mov
ret
pop
sbb
pop
ds
inc
rcrb
mov
rorl
clc
cmp
pop
test
cmc
stos
andb
and
pop
xchg
xchg
dec
stc
and
mov
es
pop
xchg
pop
lcall
pop
pushf
scas
mov
mov
sub
dec
xchg
and
dec
push
pop
mov
stos
inc
jno
inc
cmp
outsb
xchg
dec
push
mov
xor
ss
adc
cmc
daa
out
xchg
into
jne
inc
push
std
fnstenv
std
mov
push
outsl
hlt
adc
lahf
sbb
imul
lcall
mov
mov
and
and
fmulp
cli
push
push
mov
xchg
adc
mov
sti
sbb
inc
pushf
in
call
andl
or
rclb
or
filds
ftst
and
aaa
add
add
xchg
fistpl
mov
dec
jno
dec
jae
adc
int3
sub
mov
xor
adc
mov
jl
push
and
or
test
sbb
pop
mov
cmpsl
mov
sub
inc
pop
loopne
loope
inc
inc
fsubs
in
pop
add
sub
xchg
jmp
ss
shll
push
aam
jae
or
xlat
cmp
test
push
into
jg
inc
jge
mov
push
hlt
sub
xlat
cltd
sbb
mov
push
test
fisttpll
push
dec
leave
ficomps
insb
movsb
test
xor
into
outsb
add
jbe
faddl
inc
xchg
je
xor
fidivrs
jmp
xor
cmp
js
es
inc
xor
xchg
fldl
add
dec
insb
jbe
mov
fcmovbe
mov
jl
push
push
cwtl
add
outsb
inc
outsb
aad
xchg
jg
addr16
popf
test
add
int3
mov
mov
insb
push
push
scas
ret
out
cmp
scas
or
aam
mov
gs
ljmp
lret
push
xchg
cmp
out
test
cmpsb
cmp
pop
jge
pop
sarb
xchg
int3
or
repz
ja
nop
shrb
cld
push
push
and
mulb
cmp
repnz
dec
or
ds
subl
flds
jg
xchg
mov
sub
mov
mov
pop
and
les
mov
and
sar
repnz
inc
xchg
imul
addl
cmpsl
dec
icebp
cmpsb
ja
jmp
xchg
pushl
outsl
sub
fcomip
leave
sub
into
pop
dec
adc
xlat
sub
and
sahf
mov
cmp
jecxz
dec
aam
mov
dec
mov
mov
addr16
xchg
mov
in
mov
lods
sbb
imul
stos
int
in
dec
inc
into
mov
jecxz
test
jg
xchg
stos
and
or
jl
dec
addr16
dec
aam
into
stos
adc
ljmp
mov
push
jle
xor
adc
arpl
ja
cmp
inc
pop
sti
push
loope
fwait
aad
push
cmpsb
lods
adc
or
mov
cmp
shrb
dec
out
or
fnstcw
out
adc
cld
imul
xchg
jmp
jmp
xchg
pop
xchg
gs
xor
add
or
repnz
ljmp
jp
jo
mov
cmp
frstpm(287
or
cmpsl
adc
add
stos
push
imul
mov
xor
aas
test
push
rcrl
imul
sub
rcrb
push
or
int
cld
popf
lds
stc
mov
lods
in
mov
gs
inc
int3
pop
pusha
ss
addr16
lods
pminsw
insb
cli
and
xor
gs
cmp
jb
pop
pop
xor
js
adc
movsb
xchg
ds
ljmp
lret
or
sub
fdivrs
addr16
lea
lock
sbbb
push
popa
jl
repnz
repz
xchg
imul
cmpsl
daa
fwait
mov
in
testb
test
ja
sahf
lock
and
push
ret
or
data16
jbe
pop
cmpsl
nop
fdivs
push
lock
dec
xchg
jbe
xchg
push
pushf
push
je
sub
adc
repz
lock
dec
aam
test
das
push
leave
lret
lret
jmp
mull
in
pop
mov
push
cmp
cmpsb
push
sbb
and
lret
aad
ret
jmp
inc
mov
mov
dec
fstpl
sub
addr16
mov
jne
repnz
sti
xchg
mov
arpl
clc
sbb
pop
jnp
add
repz
lods
xor
xchg
dec
test
cmp
lds
adc
cwtl
mov
dec
sub
sbb
jbe
bound
ja
or
jmp
es
movsl
cmpl
test
xor
and
xchg
xchg
or
icebp
jl
outsb
sbb
mov
xchg
or
xor
or
pusha
pop
push
fistpll
fwait
lock
cmp
sub
ffree
outsb
pop
adc
loopne
add
jo
push
push
sti
ret
mov
pop
clc
stos
xor
mov
pop
cmp
lret
dec
xlat
sbbl
jle
inc
out
or
sbb
push
adc
pop
xchg
clc
sbb
jl
inc
xor
mov
stc
or
arpl
repz
imul
test
inc
mov
dec
xor
pop
clc
dec
push
jne
adc
loope
sbb
push
pusha
cmp
fwait
push
jae
or
and
sub
ljmp
push
push
mov
xor
inc
adc
xchg
jp
je
mov
jmp
and
or
in
les
xchg
adc
and
cmc
sbb
or
jecxz
dec
frstpm(287
push
call
push
sahf
movsb
aad
dec
push
push
push
jmp
push
dec
and
aam
push
push
xlat
push
xchg
mov
push
push
jp
mov
jns
dec
xrelease
ljmp
adcb
pusha
cmpl
mov
mov
ljmp
pusha
pop
sub
push
pushf
cmp
ret
in
mov
cmc
mov
and
mov
je
fistps
imul
jle
push
mov
cmpsb
inc
repz
sbb
mov
or
xor
sbb
sub
dec
pushf
in
pop
leave
jp
mov
call
add
in
adc
mov
dec
lods
stos
cltd
shll
rcr
push
xlat
in
jae
cmpsb
icebp
sub
lock
cmp
mov
cmc
or
mov
mov
das
mov
dec
data16
push
stos
nop
in
dec
int3
mov
dec
sbb
jb
scas
ljmp
pop
and
and
push
dec
adc
mov
adc
pop
inc
insb
out
clc
pop
out
xchg
popf
adc
push
mov
int
and
das
cltd
push
xchg
int3
dec
les
xor
jne
mov
shrl
jmp
mov
and
cmp
or
in
out
icebp
cwtl
iret
mov
lds
cmpl
pusha
jl
mov
fmul
xchg
xchg
in
pusha
push
mov
push
test
movsl
xchg
sub
xor
ret
dec
sub
jo
pop
nop
lret
and
repnz
les
sub
xor
mov
dec
outsl
jno
xor
repnz
ficomps
xchg
inc
sub
test
repnz
lcall
xlat
dec
hlt
fistpll
mov
pop
fisubl
sarb
mov
aaa
add
add
ds
xchg
fcoms
movsl
mov
push
dec
lods
cmpsl
dec
enter
or
inc
cmp
mov
push
mov
dec
icebp
mov
and
out
push
mov
xchg
dec
in
sbb
outsb
movsb
xchg
aad
pop
dec
jl
jl
ds
pop
sbb
inc
mov
es
outsb
popa
dec
xchg
xchg
lahf
cltd
loope
cld
fbld
je
sbbl
add
movsl
lret
test
icebp
dec
lods
or
cltd
sbb
popf
cmc
and
push
mov
sbb
dec
pop
and
dec
lods
jo
mov
jnp
in
cmp
mov
pushf
cld
mov
out
inc
inc
mov
insl
xchg
aaa
js
pop
hlt
pop
push
test
dec
in
out
or
push
dec
xorb
lods
inc
insb
push
faddl
jl
dec
or
enter
addl
lock
xor
adc
mov
popf
sub
iret
xchg
xchg
repz
stc
sub
xlat
sti
and
out
stos
pop
xchg
sbb
add
add
fimull
push
fcompl
dec
sub
mov
insb
push
out
mov
imul
cmpl
xlat
xor
mov
ret
fnstsw
jmp
and
jae
dec
pusha
faddp
push
sbb
sbb
rclb
mov
pop
jle
cs
daa
mov
out
daa
xchg
nop
pop
xor
or
jmp
jecxz
mov
pop
fcmovb
fwait
jne
shll
movsl
cltd
adc
cld
popa
mov
stc
push
mov
paddb
sbb
adc
sub
addr16
aam
rcrl
push
js
add
xlat
repnz
jmp
jecxz
and
outsb
and
ret
loop
xor
ficoml
scas
test
lea
data16
fimull
insb
add
addr16
jl
xor
int3
mov
lret
shll
test
ret
scas
jo
leave
lret
push
xor
push
stos
negb
push
ds
push
clc
fimull
xlat
sbb
mov
arpl
in
shlb
cmp
outsb
or
xor
xor
and
fwait
jp
pusha
jo
subl
cmp
xor
jbe
or
xchg
fcmovnbe
and
stos
fcmovu
ss
test
leave
fisubrl
sbb
aad
lods
std
cmpsb
push
mov
fs
dec
ret
adc
adc
pop
daa
ret
add
xchg
xor
rcll
or
jb
or
sbb
adc
movsl
in
jbe
adcl
jo
push
mov
mov
mov
cltd
sub
pop
imul
negb
mov
pushf
jle
cmp
test
dec
lret
fs
call
add
out
pop
fst
xor
and
sbb
xchg
movsb
mov
loope
rorb
mov
mov
sub
testb
dec
in
mov
jecxz
mov
ss
cmp
mov
insb
mov
pop
jmp
mov
mov
test
xor
adc
mov
enter
inc
add
xor
sti
pop
mov
in
mov
dec
cmp
sub
and
mov
out
mull
push
std
mov
icebp
mov
sbbl
or
scas
or
or
mov
sbb
cmp
add
stos
pop
test
in
jmp
in
imul
add
and
sbb
pop
push
shl
ficomps
in
outsl
lret
mov
inc
add
lret
lea
sbb
ljmp
sub
add
mov
mov
popf
js
rcl
cwtl
sbb
mov
push
cmpsl
fwait
sti
arpl
add
push
mov
rcl
lods
add
sub
xor
add
and
cmp
jl
leave
nop
adc
fwait
aas
adc
arpl
aad
jnp
cli
cli
sub
push
or
sub
xor
shrb
xor
sahf
std
iret
xchg
lds
inc
fistl
ret
out
pusha
mov
push
xchg
pop
sub
cli
lods
mov
xchg
jle
adcb
cld
mov
sub
ds
mov
mov
jecxz
push
fsubs
aam
pop
cmp
flds
ret
push
out
fists
fstl
das
shlb
inc
adc
dec
sub
dec
xchg
adc
push
xor
daa
ffree
dec
sbb
movsl
pusha
scas
or
sarb
sbb
insl
pop
push
pop
das
imul
cmpsb
fstl
add
hlt
xorl
aas
xor
rorl
psubusb
sub
dec
cwtl
repz
jmp
js
iret
mov
jp
add
leave
pop
push
test
movsl
mov
mov
dec
movsl
jle
test
push
sbb
aad
push
and
loope
leave
jo
cmc
rclb
in
xor
jp
dec
stos
lods
and
xchg
xlat
popa
xchg
sbb
pop
cmpsb
loopne
xchg
clc
inc
js
pop
xor
arpl
sbb
ficompl
jnp
fnstcw
jns
lods
lods
dec
daa
fwait
test
dec
clc
cmp
cld
sbb
add
mov
sarl
aaa
add
dec
mov
int3
add
or
sbb
paddb
push
pop
outsb
mov
loop
mov
call
pusha
iret
aaa
fsubrl
fdivs
iret
xlat
pop
jg
jne
lods
in
cld
sarl
sub
jae
sar
pop
dec
repz
lds
insb
mov
add
cmp
cmp
push
sub
jge
xor
sbb
add
cwtl
or
clc
inc
pop
mov
xchg
adc
or
sbb
inc
jbe
inc
xchg
clc
sbb
in
sbbb
movl
mov
pop
adc
fmul
loopne
mov
testl
scas
addr16
mov
mov
and
pop
sub
lahf
bnd
push
mov
arpl
out
adc
and
mov
mov
pusha
andb
xor
add
mov
nop
mov
mov
xchg
mov
mov
lock
pushf
shrb
test
xor
sbb
in
push
add
inc
fisubrs
jns
pop
inc
sahf
repz
pop
mov
mov
cwtl
bound
test
xchg
jecxz
xchg
sbb
push
popa
xor
sub
jmp
dec
sub
sub
shrl
xor
and
dec
js
stos
pusha
icebp
loopne
sub
push
mov
imul
andb
lcall
ret
andb
or
pop
adc
sub
cs
xchg
dec
and
sbb
imul
mov
icebp
adc
cmp
and
mov
jmp
jmp
clc
in
iret
xchg
mov
mov
sahf
stos
cmp
adc
mov
mov
xchg
pop
mov
repnz
dec
and
fwait
dec
js
xchg
fistpll
jecxz
loopne
and
xchg
push
movsl
mov
imul
add
je
cmp
mov
test
mov
sub
push
call
aam
push
add
stos
mov
xor
movsb
xor
repnz
js
pusha
pop
jo
fwait
rclb
scas
mov
movsl
xchg
jp
or
int3
push
aam
fstps
mov
xchg
jmp
sbb
mov
js
inc
dec
jl
mov
mov
aad
mov
mov
or
jmp
and
jg
sub
test
lods
mov
sbb
adc
fimuls
pop
mov
addl
rcrl
xchg
adc
mov
pop
adc
jbe
inc
leave
or
xlat
test
bound
jge
mov
loope
pop
pushf
inc
ds
int
mov
inc
jne
loopne
mov
jg
out
xchg
ss
lock
xor
inc
stc
ret
sub
hlt
adc
es
fcompl
movl
lods
dec
pop
shl
add
pusha
push
lcall
add
bound
cltd
lock
mov
movsb
mov
flds
dec
xor
mov
dec
pop
jp
cltd
mov
loopne
lahf
mov
pop
mov
mov
sub
inc
fisubl
cmpsl
jb
pop
mov
clc
xor
ljmp
dec
fsts
test
das
push
dec
bound
adc
mov
add
xor
and
repnz
fadds
fs
shlb
mov
or
jnp
mov
or
pop
cmp
lahf
sub
xor
inc
cld
es
xor
ror
clc
fisubrs
test
ret
cmp
es
daa
pop
addb
add
cmp
rcrl
out
cmp
mov
stc
filds
dec
fildl
lods
mov
xchg
xchg
xchg
or
fiadds
dec
mov
daa
sbb
mov
or
in
pop
mov
popf
push
sbb
or
push
aad
mov
push
imul
jg
lahf
in
sub
pop
pop
imul
fyl2xp1
xor
push
or
loopne
lahf
stos
or
mov
es
and
test
push
xlat
jmp
sbb
push
sub
push
jnp
sub
es
push
arpl
scas
xor
and
popf
jnp
int
mov
xchg
xchg
dec
ffreep
aad
jl
mov
fistps
jne
pop
inc
jle
mov
mov
or
shrl
push
daa
loope
std
mov
icebp
popa
cmp
in
jge
xchg
mov
xor
cld
lods
inc
mov
xor
mov
sbb
pusha
add
je
ss
idivl
xchg
jmp
test
fildll
ret
xchg
imul
mov
je
movsl
scas
mov
sub
dec
add
mov
pop
int
scas
cmpb
divl
jnp
cmp
and
inc
daa
filds
push
push
aad
out
jp
dec
inc
and
shrb
bound
aad
loop
or
repz
lcall
mov
cmc
mov
ficoml
cld
pop
in
dec
sub
sbb
aad
adc
add
dec
sub
imul
outsl
mov
adc
ror
outsl
mov
pop
push
andb
xor
or
ljmp
fcoml
push
xor
cmc
enter
mov
jb
aad
jle
ljmp
jle
test
dec
dec
xchg
in
inc
int3
sti
in
test
sbb
inc
rcrb
mov
and
mov
mov
push
sbb
mov
mov
fcompl
js
sub
insl
and
aaa
aas
les
dec
rcl
dec
in
mov
inc
jo
xchg
add
popf
test
shr
insl
nop
xor
punpckldq
cmp
xchg
andb
mov
mov
push
iret
fs
push
add
int3
jecxz
icebp
or
and
loop
inc
inc
push
jb
push
or
insl
mov
js
rorl
clc
pop
sub
xorb
pop
inc
mov
shll
or
inc
push
test
not
movsb
shll
cmp
incl
and
adc
dec
lahf
stc
fld
lods
ljmp
add
mov
popa
sbb
movsl
xchg
subb
arpl
jno
dec
or
data16
cmp
jl
shrb
and
xor
inc
jle
adc
std
outsb
jg
cmp
jle
sbb
popf
inc
test
lcall
push
dec
mov
jno
repz
xor
inc
inc
arpl
cmp
push
mov
push
adc
test
and
addr16
popa
push
mov
fs
jmp
pop
daa
icebp
bnd
mov
adc
addr16
xor
add
in
and
ljmp
pop
jae
fstpt
addr16
loop
shlb
fcompl
mov
mov
mov
lods
imul
mov
cmpsb
ljmp
cld
sar
dec
and
in
jmp
mov
jno
add
or
and
mov
pop
lods
xchg
mov
les
aam
lret
mov
xor
cmp
stc
test
jne
sub
and
push
ljmp
jle
jge
add
mov
jae
popa
sub
xadd
jo
jne
fisttpll
mov
imul
rol
xor
std
imul
cltd
jge
lahf
xchg
cwtl
cmp
imul
or
dec
fdivrs
jno
shrl
jg
sub
add
enter
out
sbb
scas
movb
std
mov
or
add
or
insb
inc
add
lcall
inc
pop
aas
int
pushf
in
pop
iret
es
jmp
mov
push
cmp
cld
xor
add
mov
popf
out
js
or
pop
dec
outsb
jl
cmc
adc
test
pop
roll
cmpb
sub
mov
bound
or
mov
xchg
pop
jg
hlt
nop
mov
xchg
in
in
sbb
add
pop
lcall
mov
jnp
xor
mov
mov
stos
pop
js
inc
mov
je
mov
push
xor
mov
mov
xor
dec
loop
push
cmpsb
arpl
lds
push
loope
bound
jmp
mov
push
dec
jmp
push
inc
lahf
out
jl
dec
out
insb
jmp
cmpsb
and
ret
sub
fisubrl
hlt
test
pop
inc
or
rcrb
fprem
gs
pop
add
repnz
xor
scas
aam
xorl
in
jo
mov
pop
push
mov
sahf
cmp
jl
imulb
sbb
jge
jb
int3
mov
xor
ljmp
ss
cmc
xor
arpl
int
push
dec
inc
xchg
mov
push
mov
and
rcrl
cmp
xor
cltd
aas
xor
sub
cmpsb
push
mov
or
sahf
in
loope
jno
in
mov
cld
in
icebp
cmpsb
cli
cvtps2pi
add
xlat
add
outsl
orl
cmp
sub
pop
lods
aad
and
or
pop
sub
push
adc
cmp
sub
sub
roll
jg
hlt
out
ret
push
xor
jmp
dec
inc
notl
test
push
jl
icebp
daa
push
scas
loopne
mov
in
dec
popa
cmp
mov
mov
into
push
call
inc
inc
add
mov
adc
scas
shl
push
repz
sub
xchg
int3
push
ret
xchg
sbb
out
sarl
cld
mov
lods
mov
nop
mov
mov
shr
inc
pop
jge
xorl
pop
dec
sub
mov
sbb
push
jno
mov
or
xchg
ljmp
cli
fisttps
xorl
scas
lret
xor
stos
jle,pn
movsb
mov
nop
aaa
or
xchg
aaa
adc
repnz
pop
js
dec
dec
cmp
push
fwait
mov
cli
or
out
adc
dec
xor
or
test
push
movsl
lcall
into
popa
es
jo
xor
push
outsb
leave
adc
stos
sub
xlat
gs
ljmp
int3
pop
and
fisubrs
mov
push
mov
push
and
mov
pop
mov
je
insb
jge
in
popf
sti
inc
in
mov
ss
cmp
scas
push
in
xchg
sbbb
test
push
xchg
or
les
mov
adc
push
insl
xor
insb
xchg
pusha
movntps
orb
pop
jno
iret
out
cmpsb
add
filds
and
jb
sub
pop
lds
fistpl
dec
aas
test
mov
int
xor
pop
dec
icebp
fists
push
cmp
sub
sub
fsub
pop
aad
add
mov
pop
add
mov
sub
and
jns
in
jp
adc
int
mov
aas
stos
xor
mov
or
sbb
lock
xor
sahf
xor
and
hlt
mov
aas
inc
pop
shl
fidivrs
mov
jl
mov
xchg
pop
push
daa
xor
popf
sub
aam
scas
fs
cmpb
fnsave
fstp
sbb
cli
ds
js
lock
pop
in
pop
addb
jae
sub
adc
pop
mov
mov
aad
jbe
mov
ficoms
push
mov
into
sbb
jo
std
data16
cmp
out
mov
les
adc
push
jmp
mov
inc
mov
rcr
fdivl
dec
jns
xor
jns
inc
inc
dec
mov
push
enter
adc
add
aam
mov
push
xor
jge
dec
and
aam
out
lcall
imul
outsb
adc
jne
outsb
mov
push
pop
lds
sub
fisubrs
push
movb
inc
mov
push
test
int
mov
lret
orl
nop
xor
imull
sub
xchg
lea
adc
fstpt
or
or
cltd
cmpsb
mov
xlat
jne
push
mov
mull
jbe
les
jle
xchg
mov
scas
mov
add
int
mov
call
movsl
in
out
lods
dec
xchg
pop
dec
ret
out
insl
out
xchg
push
fnstenv
and
pop
or
xchg
into
add
test
cmp
lret
fmull
lods
inc
sub
push
sbb
inc
xor
rol
inc
gs
xchg
add
into
hlt
lods
or
mov
and
mov
outsb
or
adc
jbe
dec
lea
js
or
frstor
repnz
mov
inc
aad
sub
and
mov
arpl
sub
jge
fmuls
stos
imul
adc
outsb
rcl
jg
test
test
adc
and
pop
or
jle
mov
enter
idivl
std
imul
gs
sub
pop
fadds
xor
mov
adc
jne
fstps
sub
pop
inc
shlb
jbe
insb
ss
hlt
movsb
pop
cmp
sub
sub
ficoms
inc
or
or
inc
dec
and
in
xlat
dec
jno
fidivl
mov
mov
hlt
cmpsb
out
jecxz
push
popf
inc
xchg
fldcw
pop
and
sub
pop
or
jecxz
cs
mov
lret
sub
hlt
and
xchg
and
and
aaa
xchg
add
out
adc
and
insb
jb
setg
roll
cltd
dec
sti
push
mov
push
cmp
pop
loop
inc
push
adc
xor
pushf
arpl
ret
std
shll
lret
add
add
xchg
in
sub
cld
in
lods
in
mov
leave
xchg
cmp
hlt
test
adc
je
jae
mov
flds
sbb
pop
cmp
fiaddl
movsb
pushf
add
popf
mov
fs
inc
or
das
shrb
out
movsl
sti
aaa
rcr
xchg
out
nop
adc
fxch
xlat
push
stc
gs
mov
mov
adc
jg
dec
out
leave
or
pop
mov
stc
dec
push
inc
mov
inc
imul
mov
lret
es
cli
rorb
cmp
out
inc
movsl
mov
loope
cmpsb
shl
or
enter
enter
hlt
fistpll
repnz
add
dec
fldenv
test
std
cli
and
push
pop
nop
mov
call
pop
pop
fnstcw
jecxz
test
cmp
xor
call
mov
mov
adc
dec
inc
lahf
mov
inc
lods
pop
hlt
cmp
inc
rorl
notb
pop
sub
enter
xor
add
push
cmp
ds
cmc
and
fistpl
cwtl
imul
jp
cmpb
ljmp
jmp
xchg
pop
add
xlat
mov
mov
pop
jne
inc
scas
incl
inc
repnz
in
jge
xchg
pushf
or
pop
cmp
sub
arpl
pop
cmp
ss
ret
push
fistps
in
arpl
or
xchg
andl
pop
mov
push
pushf
stc
idivl
hlt
dec
mov
aam
xor
cltd
mov
daa
adcl
inc
lea
push
jnp
mov
cltd
lahf
xchg
dec
je
dec
xor
xchg
hlt
fsubrl
and
insb
sub
bswap
mov
ljmp
and
cmp
ss
mov
or
inc
and
popa
je
push
arpl
mov
sbb
dec
push
mov
sub
inc
push
jbe
int
push
enter
add
int3
and
mov
xchg
cmpsb
and
cmc
loop
inc
jbe
inc
adc
je
jle
or
mov
mov
outsl
ss
negb
inc
decb
sub
push
mov
xchg
push
mov
or
jmp
pop
out
cltd
xchg
or
aaa
sbb
mov
pushf
lret
sbb
es
test
mul
loop
add
cmp
sbbl
leave
icebp
and
stos
sbb
inc
in
mov
sahf
lock
and
jecxz
clc
out
scas
xor
jne
jae
cltd
in
xchg
pop
into
inc
addr16
xchg
lret
inc
jb
idivb
lret
dec
fwait
stos
stc
dec
std
jle
ffreep
call
es
mov
loop
pop
mov
mov
clc
mov
jbe
gs
es
push
sbb
test
scas
jno
add
mov
je
fwait
push
mov
xorb
scas
xlat
aaa
int3
push
lods
xchg
or
pop
add
adc
cmp
xchg
cli
das
push
repz
dec
je
enter
add
lods
arpl
mov
ja
xor
inc
jle
lret
aad
outsl
pop
imul
ss
mov
fiaddl
jb
jge
push
lahf
xchg
xor
enter
shl
push
ret
xchg
out
mov
push
inc
jecxz
out
test
in
sub
int3
xor
lods
mov
mov
les
shlb
jle
ds
mov
and
cltd
lea
push
insb
mov
stos
mov
or
sbb
mov
call
push
mov
repz
jb
rolb
mov
mov
outsb
inc
jle
lcall
imulb
fwait
push
xchg
in
movsb
add
shrl
push
pop
enter
mov
stos
xchg
mov
or
outsb
jmp
aaa
push
or
push
cmp
insl
jl
push
out
xor
icebp
push
adc
jge
inc
push
sbb
adcb
dec
xchg
mov
jg
mov
cmp
dec
push
shl
mov
ljmp
add
jns
data16
inc
jne
adc
adc
mov
sbb
je
sbb
sbb
xlat
repnz
and
addb
pop
out
ja
es
sbb
pop
data16
pop
stos
dec
adc
ficomps
pop
add
lahf
add
jnp
loopne
sbb
mov
pusha
pop
nop
cmpsl
mov
pop
and
dec
sbb
pusha
push
inc
xor
pop
loop
cs
dec
mov
ds
arpl
or
pop
jg
xchg
inc
add
cltd
call
jle
inc
adc
jmp
mov
xor
mov
pop
or
push
inc
and
hlt
xchg
popf
fistpll
lret
ret
mov
movsb
rorl
aad
mov
out
test
cwtl
jae
push
icebp
cmpsl
mov
ds
insb
cmp
and
loopne
aas
pop
movsb
mov
adc
fsubl
lret
bound
arpl
mov
inc
push
aam
outsl
push
mov
loope
inc
shrl
sub
sarb
int
cmp
arpl
iret
push
jmp
xchg
or
xchg
int3
push
cmp
jmp
fs
mov
aaa
iret
imul
outsb
jge
mov
or
ret
loopne
pop
rorb
add
iret
ret
leave
push
jg
leave
lcall
mov
popf
mov
fsts
cmpsl
mov
add
fwait
jge
add
xor
jne
push
pop
jl
lods
push
cld
fwait
sub
xchg
fs
rcrl
fmulp
rcr
loopne
stos
cmp
or
fldt
test
sbb
or
cmp
ret
insb
mov
adc
lea
in
aaa
inc
jb
lods
mov
mov
es
jmp
lret
cld
or
enter
idivb
push
push
mov
jo
xchg
and
dec
cmp
sub
testb
inc
cld
movsb
ficoml
xor
jb
jb
jecxz
pop
add
arpl
loope
mov
addr16
shll
mov
maxps
mov
outsb
dec
fwait
pop
rcl
push
out
pushf
call
repz
pusha
cmp
in
mov
push
xor
mov
jnp
jg
jno
mov
call
lret
pop
xchg
add
into
pop
or
gs
nop
jne
mul
mov
xchg
push
scas
mov
push
jecxz
insb
sbb
adc
mov
xor
test
cmpsl
cltd
mov
addr16
mov
xor
jno
lret
out
lret
sbb
add
dec
aaa
or
push
and
lods
xchg
pop
rorb
cmp
sbb
aam
cmp
loopne
xchg
es
in
pop
jge
loope
out
mov
xchg
aas
jl
or
orb
inc
rolb
movsl
mov
loop
adc
jno
cmp
jp
jecxz
push
and
lock
add
inc
or
push
in
cld
les
fsubrs
pop
out
sbb
lret
pop
cmp
jnp
xor
fisubrl
jnp
and
leave
in
dec
pop
jns
ficomps
cmc
lods
mov
rol
and
test
or
add
sahf
sub
bound
xor
xchg
mov
lods
xlat
sbb
inc
adc
mov
loope
fcmovnb
out
jno
mov
pop
sbb
sbb
jae
mov
loopne
dec
test
rolb
sti
test
mov
jbe
add
xor
push
loopne
push
psubd
loop
mov
test
pop
adc
xchg
pop
ljmp
jne
fimuls
adc
pushf
pop
int
test
mov
mov
xor
inc
cmp
jnp
popa
stos
add
xchg
out
pop
test
pop
testl
out
pop
rcl
cmp
add
sub
mov
loope
loope
or
sbb
sub
cltd
ss
lods
mov
insb
pop
xor
inc
movsl
pop
nop
jbe
or
add
rcrl
in
in
popa
push
clc
imul
popa
addb
outsl
dec
shlb
dec
andl
mov
inc
rolb
sbb
xor
or
in
dec
fwait
lahf
or
testl
cmp
inc
stc
ror
mov
sbb
adc
sbb
pop
jmp
jo
addb
jnp
outsb
adc
pusha
push
push
dec
into
adc
jno
add
adc
xlat
and
and
dec
add
test
call
daa
mov
je
aam
add
jb
push
insb
sahf
jmp
push
lret
mov
dec
mov
or
ja
and
mov
icebp
pop
adc
xor
xchg
or
or
dec
xchg
pushf
cmpsl
adc
jnp
or
es
insb
loope
sub
lods
nop
ja
xchg
adc
pop
pop
subl
ror
aam
pop
outsl
mov
ja
ljmp
xor
roll
cli
lds
aad
xchg
insb
mov
fsubrp
sbb
pop
aad
rcrb
ficoml
cmpl
push
pop
imul
sahf
test
in
or
rcr
outsb
xchg
ds
in
into
test
data16
sub
xchg
int3
or
inc
push
add
in
popa
lret
push
insl
outsb
mov
jecxz
adc
inc
push
addr16
adc
and
pop
push
mov
pop
aaa
cmpsb
movsl
xchg
push
shl
sbb
lock
push
cmpsb
and
sbb
cmp
fistl
das
mov
stos
push
imul
inc
jl
bound
push
les
rcrb
lds
test
sbb
push
mov
loop
fldt
frstor
scas
daa
lds
jp
jmp
add
rcrb
adc
jmp
insl
jg
sbb
cmp
push
ljmp
mov
adc
jecxz
sbb
out
movsl
imul
inc
xchg
fstp
fmuls
out
cld
add
sub
iret
pop
or
lods
mov
mov
in
dec
dec
rcrl
push
sahf
rol
cwtl
jle
jno
and
sub
push
int
add
sub
mov
fwait
test
add
aaa
inc
in
cmp
push
jecxz
fcomp
addl
mov
add
lret
fldcw
jg
pop
xchg
mov
mov
outsl
xchg
leave
fcomip
ror
movsb
in
xchg
out
roll
adcl
jl
sub
out
pop
jl
mov
add
dec
scas
mov
jecxz
jb
mov
jp
mov
add
and
mov
insl
push
sub
push
test
dec
mov
jb
aas
adc
nop
sub
scas
fstps
push
mov
mov
adc
cmp
cmp
loope
enter
sub
loopne
dec
daa
es
mov
and
xchg
enter
mov
sub
cmp
lcall
inc
jp
cltd
test
fcomi
pop
lds
mov
cwtl
fadds
aam
jmp
cld
cmc
sbb
sub
adc
jle
jno
push
mov
and
mov
and
movsl
roll
cld
lret
fistl
je
leave
es
jbe
test
cmp
cld
repz
add
sub
push
and
insl
mov
adc
add
xor
push
lods
ret
not
fcomps
in
test
fsub
mov
pop
cmp
inc
pusha
mulb
mov
movsb
mov
mov
sub
xor
jb
push
mov
icebp
and
in
pusha
call
scas
mov
push
popf
addb
outsb
sbb
scas
jb
nop
andl
fwait
xchg
push
lods
xchg
cmc
pop
lock
xor
mov
test
fs
mov
sub
sub
inc
mov
leave
pop
jb
mov
jg
test
outsl
or
push
sub
fisubs
lds
xchg
pop
jg
and
shlb
jns
jo
push
xlat
arpl
cwtl
pushf
xchg
or
mov
xchg
add
jb
inc
loope
inc
xlat
xchg
rcrb
je
xor
add
scas
mov
shrl
fcomps
imul
xor
pusha
pop
out
test
faddl
jecxz
popf
shll
inc
cmpsl
pop
xchg
out
stos
ja
adc
mov
mov
xchg
scas
loope
push
mov
mov
jb
jmp
cmc
push
cli
dec
jo
popf
jns
pop
dec
test
mov
jmp
cmp
jmp
dec
enter
nop
jne
shll
inc
movsb
fwait
dec
push
add
insb
jl
test
xchg
push
mov
mov
adc
mov
dec
pushf
int3
movsb
mov
lret
insb
sbb
mov
pop
aad
test
bound
outsb
dec
out
in
fs
sbbb
add
cwtl
cmc
xchg
jb
out
test
push
pop
mov
xor
mov
outsb
pop
lret
insb
inc
adc
cmp
xchg
sub
stos
in
scas
scas
jbe
imulb
jle
lahf
mov
mov
bnd
sub
pop
adc
shlb
lds
loop
jne
aas
add
pop
sti
aas
adc
fcomip
test
push
fiaddl
sub
add
cmp
add
xor
lahf
mov
ret
pop
gs
pushf
adc
mov
js
cmpsb
orl
adc
jl
gs
jl
and
jmp
int
cmc
or
xchg
int
add
insl
movsl
jl
ds
ret
dec
imul
jecxz
rorl
lgs
add
inc
cmp
pop
sbb
pop
fdivs
pop
xchg
loopne
fimull
pop
fistps
sub
xchg
push
sub
sub
push
movsb
lea
mov
adc
dec
sub
dec
ja
shll
ss
cmpsl
shlb
xchg
add
xor
push
pop
pop
mov
jae
adc
and
aaa
and
jmp
outsl
xor
data16
and
adc
add
lds
into
orb
mov
xrelease
in
imul
shrb
lea
loope
fbstp
inc
or
mov
dec
pop
and
inc
mov
js
popa
pop
int
jnp
and
fdivrl
loopne
movsb
add
mov
fldenv
add
xor
scas
adc
fildll
xor
pop
loopne
xor
add
push
push
and
jp
aas
adc
inc
into
sbb
mov
cs
repz
push
push
rolb
test
sub
push
jae
adc
jg
loop
inc
fucomp
pop
movsb
mov
pusha
arpl
bound
in
scas
sub
and
out
sub
pop
ljmp
sbb
xor
pusha
mov
add
loopne
stos
cmp
fidivl
cltd
call
adc
bound
jg,pt
sub
enter
scas
jge
jbe
push
push
mov
mov
jbe
or
iret
dec
add
out
and
mov
insl
push
pushl
jns
jl
xor
mov
lods
jg
lea
rcr
dec
mov
nop
jbe
mov
dec
ds
adc
xchg
mov
lahf
pop
fs
add
cld
mov
sbb
bound
ja
jl
in
das
cli
sub
movsl
sbb
imul
pop
lds
jns
pop
fildll
push
repz
push
lahf
loopne
repnz
mov
ja
cmp
mov
stos
add
sub
sbb
dec
or
lcall
pop
ds
and
int3
sub
ds
mov
add
xchg
clc
mov
bound
add
inc
out
rolb
shrb
out
cmp
test
and
cmp
fisttps
sub
xchg
jbe
mov
filds
sti
stos
int3
addr16
inc
jmp
stos
arpl
in
or
add
data16
sub
scas
lret
ficoms
inc
std
mov
fldl
test
push
les
pushf
and
xor
cmp
jns
or
je
push
popf
mov
outsl
mov
jl
mov
fwait
or
dec
cmpsl
push
jp
lcall
mov
sbb
mov
popf
jbe
push
cmpsb
push
in
je
stos
push
popa
cmp
arpl
inc
xchg
add
pushf
xor
xchg
cmp
lret
imul
or
imul
cmpsb
jbe
loope
dec
sbb
push
or
cmp
add
cmp
dec
or
std
outsl
ret
lds
xor
cmpsb
pop
mov
jg
add
inc
insl
ljmp
loopne
and
jg
ss
adc
xchg
pusha
cmc
add
and
and
jl
add
inc
inc
rolb
cli
xor
cmpsb
or
or
pmuludq
ss
fcomp
xor
sbb
out
rcr
idivb
pop
push
incb
mov
pop
orl
jecxz
mov
les
loopne
es
shrl
cmp
cmpsb
sub
sbb
sub
push
fwait
pop
push
icebp
rorl
add
orb
repz
mov
xor
shll
cld
fisttpll
sarb
cwtl
insl
and
jecxz
leave
sub
jae
stos
adc
aas
mov
xor
ds
sarl
push
lds
cs
and
mov
lret
and
ljmp
leave
xchg
flds
bound
fisubl
inc
sbb
inc
ficompl
addr16
cmp
das
mov
push
data16
out
rorb
in
repz
add
adc
ds
xchg
sbb
addr16
cmp
imul
test
lahf
mov
mov
cmp
cmp
or
pop
xor
mov
sub
push
xchg
das
call
testb
or
adc
xchg
mov
add
mov
mov
pop
xchg
loop
mov
mov
data16
and
jnp
push
scas
adc
xchg
insl
cmp
mov
sbb
push
dec
roll
outsb
mov
dec
ss
push
lds
jne
mov
ret
jo
ret
jmp
adc
mov
and
fmuls
cltd
cmp
aam
jmp
sti
mov
mov
adc
aaa
sub
subl
lcall
fadds
call
pop
dec
sbb
mov
mov
cmp
ffreep
jbe
xchg
repnz
cmp
jne,pt
ljmp
cmpsb
dec
push
lods
mov
cmp
mov
movzwl
das
dec
mov
idivl
pop
sbb
mov
stos
pop
mov
pop
mov
call
mov
movsb
or
dec
xchg
pop
out
movsb
ret
ret
hlt
lret
in
pop
dec
xchg
ret
loopne
negl
xchg
je
stos
imul
mov
lret
sahf
movsb
lock
je
mov
and
cmp
jnp
fisubl
imul
daa
xchg
push
sub
icebp
sbb
mov
rcrl
sub
push
out
jp
aaa
pop
dec
dec
pop
jnp
jl
hlt
pop
rclb
dec
enter
pop
cmp
mov
jecxz
pop
mov
cmpsb
ss
pop
leave
stos
dec
xchg
leave
out
or
loop
pop
pop
dec
std
in
push
call
push
out
in
sub
cmp
or
mov
test
cwtl
xchg
ljmp
xor
fwait
push
dec
ss
push
ret
aas
fsubr
jmp
lahf
adc
push
in
rclb
rorb
sbb
popa
xor
minps
xchg
xor
pop
adc
cld
cmpsl
jle
mov
push
push
cld
testl
and
lods
hlt
mov
sbb
icebp
xor
loop
push
mov
ret
xor
fwait
jne
jno
mov
or
imul
je
lahf
rcll
gs
les
bound
mov
cld
enter
mov
pop
xor
add
cmpsb
aad
adc
add
test
enter
out
adc
in
sahf
stos
and
pop
dec
sbb
or
cmpsb
pop
rcll
insb
pop
and
lea
movntps
test
lret
pop
adc
pop
mov
cwtl
fldlg2
jmp
ljmp
xchg
cltd
loopne
jns
add
jo
cs
int
mov
test
shlb
inc
and
sarl
sarb
es
in
fidivrs
lock
or
imul
push
ffreep
loope
mov
stos
out
push
stos
aam
data16
imul
mov
or
loopne
aas
pop
mov
sub
pop
push
xlat
jg
dec
loope
insb
leave
sub
push
movsb
push
pop
outsl
pop
shrl
andnps
das
daa
std
sub
ret
in
dec
rcr
push
repz
xchg
jbe
add
pusha
scas
mov
stos
dec
mov
out
xor
xorl
out
mov
out
pop
push
enter
lods
sub
mov
pop
sub
decl
int
mov
fadd
subl
shrb
cmpsl
push
test
out
fadds
fisubl
xor
out
insl
xchg
inc
fidivrl
test
test
push
stos
cmp
xchg
mov
mov
or
mov
xchg
rcrl
shll
jb
outsb
pushf
popf
stc
ret
push
xor
into
xchg
push
jno
addr16
mov
mov
iret
mov
rolb
mov
stos
idiv
sarl
adc
loope
shrl
lahf
add
and
or
movsl
pop
movsl
shll
inc
or
fdivrl
cmpsl
dec
orl
xchg
loope
mov
mov
mov
lret
nop
scas
sub
mov
cmpsl
ror
cmc
lahf
aam
jo
cmp
push
mov
adc
pop
cltd
pop
pushf
jbe
push
dec
mov
cwtl
push
mov
lods
jge
add
jae
sti
sti
loop
rcrl
js
jae
loope
mov
xchg
ljmp
into
mov
mov
xchg
push
mov
popf
and
pandn
ja
scas
mov
sbbl
stos
popa
scas
xor
scas
arpl
shll
stos
ljmp
movsl
jecxz
dec
cwtl
or
adc
lcall
fsts
cltd
sub
inc
or
out
pop
js
inc
cs
pop
sub
repnz
cmpsl
fwait
or
cmc
pop
jno
les
xchg
or
jmp
js
inc
aas
pop
push
lret
pop
out
data16
add
aam
fsubp
mov
outsl
cld
cmp
insb
test
pop
cld
sbb
stos
aam
add
inc
sahf
push
bound
cmpb
xchg
pop
lds
mov
scas
into
into
in
jl
jl
notb
mov
inc
fnstenv
pop
sbb
es
add
push
cmpsl
xchg
out
inc
xchg
mov
sbb
sub
sbb
sub
ret
cs
int3
fistpl
adc
outsb
and
mov
orb
jne
in
aas
or
fdivrl
add
mov
test
cwtl
outsl
flds
add
cmp
sbb
cli
in
or
movb
ret
cmpb
jmp
push
xor
xchg
fistpll
mov
insb
lcall
aad
stc
sbb
mov
cmp
sti
rclb
int3
ljmp
arpl
mov
cli
sbb
rclb
mov
mov
and
xor
add
mov
mov
mov
addl
push
loopne
sbb
or
mov
push
movsl
popw
fnstcw
sbb
data16
call
dec
dec
dec
add
add
adc
push
inc
sub
sbb
outsl
cmp
pop
xchg
shll
mulb
rcr
ja
push
in
into
loopne
xor
adc
xor
aad
in
adc
sarl
dec
daa
adc
and
xlat
cmp
jbe
pop
call
jp
push
popa
dec
inc
xchg
jmp
adc
popa
lahf
cs
icebp
testl
fstp
fisubrl
in
sahf
pop
mov
cmp
test
add
leave
lret
xor
jae
add
pusha
mov
mov
add
pop
pop
xchg
adc
dec
cmpsb
add
fdivrs
testb
repnz
pop
jp
mov
js
and
push
lret
sahf
or
fwait
nop
cwtl
mov
aad
hlt
cli
xchg
stos
mov
push
inc
lds
stos
pop
cs
jmp
test
push
mov
push
in
mov
mov
cltd
stc
dec
mov
nop
jbe
es
xor
imul
iret
inc
and
push
jo
out
cmpsb
cmp
dec
sub
sub
inc
cmp
jns
mov
inc
loopne
lock
pop
push
adc
sbb
push
movzwl
shrb
inc
stos
push
mov
ret
push
jbe
dec
adc
xor
das
test
leave
inc
dec
sub
dec
push
dec
pop
out
cmp
xor
mov
inc
movsl
sbb
iret
or
jmp
hlt
inc
and
ja
mov
sbb
in
mov
pop
dec
ss
sbbl
sub
add
pop
js
lahf
popa
out
fildll
loopne
push
mov
cmc
sti
jo
dec
mov
mov
adc
add
jmp
ja
pop
mov
es
outsl
frstor
lock
jb
nop
andb
sbb
pop
sti
xchg
scas
test
out
cmp
jle
mov
outsb
mov
mov
test
std
loope
fisubs
or
mov
std
imul
stos
cmp
push
icebp
fs
xchg
lods
xlat
dec
test
jle
mov
insl
ja
and
mov
sub
fstl
xor
cwtl
sub
in
ror
sub
and
cmp
sbb
sbb
mov
pop
stos
cmp
adc
xor
movsl
sahf
pop
insb
push
loop
shrb
out
idivb
ret
hlt
and
and
sti
push
adc
fidivrs
fstpt
inc
push
mov
mov
cmp
test
fdivrp
je
mov
jmp
mov
mov
je
cmpsl
cmp
pop
jbe
xchg
jg
sahf
dec
mov
in
pop
push
aaa
out
cltd
enter
orb
nop
mov
outsl
nop
xchg
ret
push
mov
jecxz
jp
idivl
aad
add
jmp
mov
or
or
adc
mov
jge
push
xor
ja
test
mov
sahf
cmpsb
xchg
ror
sub
push
cld
mov
test
je
inc
lods
fidivrl
call
scas
xchg
cmp
mov
and
rcll
push
hlt
dec
jge
xchg
mov
cmpsl
out
push
sub
jp
loopne
ljmp
jne
shr
add
addr16
xchg
ret
roll
cmp
shl
jns
outsl
lret
aaa
test
cmp
push
or
int
mov
rcrl
pop
xor
lock
and
xsaves
cs
and
fxch
xchg
push
hlt
lcall
mov
mov
adc
incl
xchg
std
es
fimuls
inc
add
bound
and
xor
add
popf
pop
das
inc
call
adc
mov
lds
pop
dec
adc
daa
xchg
js
out
mov
jo
and
int3
lahf
mov
sbb
lock
sbb
xor
cmc
cmpl
aam
jnp
and
push
lods
mov
stc
adc
popa
mov
idivb
les
fsubrl
mov
xchg
mov
enter
jecxz
ret
xchg
das
lahf
add
in
push
leave
cvtdq2ps
in
loop
test
or
mov
insl
repz
notl
dec
sub
push
sbb
imul
cltd
push
xchg
pushf
pop
stc
aas
dec
jmp
les
cmpsl
faddl
daa
cmp
iret
adc
cli
jg
or
bound
enter
xor
sahf
jecxz
xchg
testb
data16
xchg
lret
and
lods
adcb
insl
and
sti
sbb
rolb
lret
iret
roll
pusha
mulb
arpl
or
rclb
hlt
pusha
adc
inc
cmc
filds
dec
or
push
sub
fnstenv
inc
sti
push
ret
xchg
jge
ljmp
popf
push
sahf
sbb
movsb
mov
cmp
mov
jae
xor
rcrb
bound
xlat
add
mov
mov
xlat
jl
js
pop
out
js
test
pop
cmp
mov
mov
out
and
inc
xchg
loop
lods
xor
iret
push
cmp
sbb
xor
mov
cmp
mov
js
out
pop
js
xchg
mov
mov
inc
xchg
call
mov
mov
sbb
popf
xor
mov
lods
jns
scas
mov
jbe
sub
sbb
mov
xchg
mov
cmp
push
inc
and
add
dec
mov
xor
out
in
sbb
push
mov
in
mov
push
cmp
cmpsl
scas
lea
xchg
subb
sbb
pop
and
xchg
mov
sub
aaa
repz
cmpsl
iret
mov
in
popf
arpl
rol
fdivp
repnz
pusha
push
lock
push
sub
or
mov
in
lcall
sbbb
movsb
rol
ret
push
jae
mov
push
into
aas
or
adc
test
sbb
sbb
mov
data16
incb
pop
sbb
divps
pop
sub
mov
testb
jmp
out
in
xor
dec
fsubl
popa
outsl
adcl
loopne
inc
insb
cmp
jle
stc
aaa
lcall
popf
mov
fdivs
add
jae
in
popa
fdivs
jp
fs
cmp
dec
push
pop
jg
pop
into
jae
cld
popf
rcll
aam
popl
std
mov
insl
or
lea
jb
and
sbb
or
lret
leave
xchg
sti
mov
call
shr
lcall
lcall
hlt
jo
pop
rcrb
fisubl
sub
testb
into
je
fdivr
subb
les
sub
loope
push
sub
ret
jecxz
dec
add
xchg
jns
dec
mov
out
mov
arpl
mov
mov
xor
jns
push
std
inc
or
push
add
rclb
std
adc
mov
mov
adc
or
pushf
xchg
lock
xor
popf
adc
cmp
fisubl
fwait
cmp
movsl
mov
add
addr16
inc
and
or
sbb
stos
out
ud2
addb
enter
and
test
adc
mov
scas
xor
std
imul
aaa
mov
imulb
setae
leavew
jae
mov
test
pop
in
out
pop
add
sbb
mov
aad
pop
test
pop
hlt
aas
cmp
pop
push
cs
mov
addr16
aaa
mov
pushf
mov
jg
sbb
mov
jo
add
aad
in
dec
mov
jp
cmp
pop
ljmp
mov
push
mov
push
cli
cmpsl
movsw
inc
dec
cmp
dec
leave
xchg
pop
pop
outsl
dec
into
mov
mov
cmp
mov
fsubrs
pop
mov
arpl
fnstsw
int3
dec
or
mov
sahf
shl
mov
ret
pop
ljmp
leave
sbb
mov
mov
pop
movsb
and
insl
mov
dec
lods
xchg
mov
fisubl
adc
test
push
repnz
cmpsb
push
mov
jle
xor
push
std
sti
lods
movq
imul
pushf
inc
sbb
lret
or
xor
push
sbb
xchg
fwait
push
mov
stos
push
shlb
nop
mov
jmp
push
scas
inc
pop
ret
mov
or
bound
push
gs
dec
pop
fidivs
in
scas
cwtl
push
dec
testl
pop
pop
ljmp
mov
lret
jecxz
sub
and
xor
fwait
mov
mov
insl
mov
arpl
stos
mov
fldt
scas
xor
adc
loop
pop
pop
rcrl
lcall
push
lock
and
mov
cmpsl
and
jno
push
das
push
sub
mov
nop
jge
stc
dec
or
test
sbb
imul
jp
or
or
xchg
cmpsl
lds
cmp
ss
imul
cmp
inc
dec
ret
jp
sbb
lods
jno
fwait
dec
adc
fisttpll
sbb
pop
test
out
arpl
loop
adc
mov
jo
mov
pushf
mov
in
int
pop
or
es
rorl
pop
pop
jae
stc
xchg
hlt
icebp
push
mov
mov
adc
mov
push
nop
push
outsl
aad
xchg
lods
mov
pop
adc
jl
ss
loopne
lods
push
sub
adcb
cmpsb
mov
xchg
jne
adc
shll
fistpl
mov
xor
mov
fnstenv
xchg
je
xor
cmp
push
sbb
int3
inc
pop
sub
add
dec
lds
dec
cs
fcmovnbe
sub
sbb
sbb
ja
sub
mov
rep
xlat
dec
imulb
xlat
mov
cmpsl
cmp
adc
push
les
pop
add
cmp
je
pushf
insl
and
xor
pop
icebp
sub
popa
mov
push
dec
mov
aad
sbb
mov
sub
lods
scas
inc
add
sub
ljmp
iret
les
mov
loope
test
in
sub
add
fs
mov
or
repz
mov
xchg
clc
scas
mov
fsts
xor
imul
lret
dec
icebp
xchg
ficoms
orb
ret
sbb
fdivrs
stc
mov
pop
jns
loop
sbb
pop
popa
outsb
add
xor
lds
sub
jl
cmp
sti
or
mov
pushf
mov
lods
jl
mov
cli
and
mov
cmp
shlb
or
sub
add
push
jecxz
adc
cs
jae
xor
iret
cmp
jmp
ja
adc
stos
addl
adc
iret
xchg
ljmp
pop
dec
xchg
imul
jg
cmp
ret
sub
hlt
mov
js
jle
dec
ss
sub
in
push
arpl
addr16
cmpl
jl
mov
cwtl
jmp
push
lods
push
pop
xor
mov
push
add
outsb
adc
pop
ds
xlat
dec
test
sbb
in
int
repz
fcomp
push
pop
jbe
icebp
dec
dec
cmp
pushl
stc
mov
mov
push
cmpsl
sarl
scas
repz
or
fistpl
fs
mov
les
mov
and
push
jb
dec
inc
jne
jmp
mov
cmp
xchg
icebp
dec
cmp
xor
repnz
adc
ja
lahf
lret
scas
popf
mov
lods
dec
push
enter
fdivs
imul
inc
cmp
sbb
or
dec
inc
pop
jbe
adc
call
imul
aad
fst
xchg
cmpsl
dec
mov
rcr
popa
jp
in
das
test
iret
push
mov
sbb
mov
xor
or
insb
mov
sub
jge
add
jl
cmp
dec
ss
insb
mov
test
insb
or
ficoml
mov
xor
mov
push
jg
sbb
std
xchg
loop
daa
std
lods
ret
xor
adc
pop
fnstcw
jnp
sbb
and
sub
ret
outsb
adc
gs
mov
ja
inc
jmp
or
ret
or
push
and
mov
inc
sbb
es
jae
add
pop
add
mov
sbb
push
push
xor
sbb
popf
test
jecxz
imul
jbe
mov
test
xchg
test
xor
lcall
inc
aam
adc
rcl
or
xchg
lods
cmp
cmpsl
jle
jp
repnz
repz
dec
add
cld
nop
loope
hlt
mov
andb
jmp
cmp
push
cmp
gs
imul
jo
shrb
mov
inc
push
inc
sub
aam
dec
cs
and
adc
adc
mov
sbb
mov
add
sub
sbb
sub
scas
pop
ret
xor
in
cmp
test
push
sbb
jb
inc
xor
inc
push
xlat
cwtl
arpl
jae
cmpsb
cmp
and
jnp
test
in
push
cltd
cli
mov
addr16
adc
inc
xchg
jae
dec
adc
pop
mov
out
jmp
nop
mov
cli
mov
inc
movsb
jae
mov
es
iret
pop
sbb
push
inc
mov
shl
enter
or
sub
inc
or
dec
in
hlt
or
je
insl
sbb
push
pop
pop
in
call
filds
sub
insb
xlat
pop
sbbl
pop
nop
in
insl
xor
jl
popf
push
lret
das
testl
inc
push
lret
sub
dec
mov
xor
mov
cmc
xlat
in
lret
xchg
arpl
dec
cli
in
cmc
movsb
outsl
leave
out
cmp
in
movsb
dec
sahf
dec
jle
pop
inc
jp
mov
rolb
mov
dec
jecxz
xchg
scas
jle
pop
mov
loop
add
adc
xchg
fcoml
jbe
ret
xor
pop
mov
push
xchg
cs
pop
outsl
fwait
inc
cmp
adc
xor
in
cmp
pop
stos
leave
or
dec
jo
or
ja
cmp
jecxz
aad
sub
sbb
xor
jne
mov
insl
in
test
dec
jnp
push
adc
icebp
incb
cmp
dec
add
xchg
jae
jno
fldenv
orb
shlb
xor
clc
lret
cld
lods
fstl
inc
cmp
xor
sbb
cmp
jl
popa
push
pushf
or
pushf
ds
insb
xor
xor
adc
jmp
xchg
xor
mov
lahf
or
gs
das
jl
sub
sub
cmp
insl
push
aad
lret
loopne
imul
jno
and
insl
pusha
sarl
cmc
sub
insl
sbb
cwtl
pop
jns
test
stc
pop
lea
dec
aad
sbb
pop
add
cmp
jl
into
jne
in
data16
cltd
pop
inc
mov
or
jns
flds
cmpsl
adc
inc
mov
add
ja
testl
push
and
mov
fidivl
mov
jmp
ss
mov
jle
clts
scas
orb
xor
test
es
xchg
mov
sbbl
into
sar
sub
enter
out
lcall
mov
inc
xrelease
dec
cmpsb
pop
sub
jns,pt
cmp
daa
mov
sar
ret
test
push
xchg
lds
mov
and
ljmp
mov
outsl
negb
inc
cmpsl
xor
mov
orl
aam
bound
in
jge
adc
dec
cmp
lods
cmc
lret
xorb
sbb
hlt
dec
lcall
sub
test
cmpsb
push
cmp
add
xchg
stc
push
mov
jle
sbb
xor
jb
adc
pusha
adc
scas
pop
rorl
mov
hlt
ljmp
fdivl
popf
aad
outsl
stos
rorl
xor
out
xor
loopne
outsl
add
pop
add
adc
scas
mov
cli
and
imul
jbe
or
add
arpl
jmp
popa
mov
dec
cmp
mov
cmpsb
mov
lcall
pushf
mov
cmpb
add
lret
sbb
sub
cmc
cmpsl
fidivrs
in
sbb
or
mov
and
and
insl
xchg
sar
sbb
imul
dec
adcb
ret
xchg
or
test
adc
pop
dec
sub
dec
outsb
or
mov
push
stos
and
jbe
dec
imul
push
sbb
pop
dec
cmc
shrb
repz
xchg
inc
xor
popf
loopne
xchg
inc
addr16
mov
mov
enter
and
faddl
pop
nop
push
sub
pop
inc
mov
in
jle
and
adc
js
adc
xchg
xchg
dec
mov
push
sub
inc
cli
mov
mov
cld
dec
inc
jb
add
and
xchg
pop
out
or
push
xchg
dec
jo
and
out
mov
mulb
lock
xlat
sub
outsl
inc
cmp
add
cmp
jnp
aas
nop
imul
xlat
dec
cwtl
test
xchg
ljmp
fmul
loop
inc
repnz
mov
lds
or
or
and
or
jb
xchg
jbe
push
imul
mov
leave
sub
adc
mov
cmp
inc
rcrb
mov
dec
fucom
and
mov
mov
movsl
push
and
shlb
out
enter
ljmp
sbb
lods
pop
hlt
cmp
pop
arpl
and
mov
popa
sub
mov
adc
test
out
js
mov
cmp
les
xchg
gs
mov
rorl
sbb
insl
sahf
or
mov
pop
dec
mov
js
ficomps
dec
movsb
dec
enter
xchg
test
pop
ljmp
sbb
sbb
mov
imul
shr
scas
inc
push
inc
popf
sub
test
dec
mov
sub
xchg
mov
cmp
jbe
je
lahf
pop
aas
fs
xor
les
mov
lods
insb
mov
push
adc
mov
sub
in
fisubs
xlat
out
loop
cmp
xchg
pop
push
xorl
and
xchg
jne
je
inc
sub
mov
mov
mull
aam
dec
lahf
xorl
push
cmp
push
arpl
add
pop
xor
loope
jecxz
dec
push
frstor
sbb
iret
in
scas
mov
cmp
xor
shlb
pop
stos
das
and
adc
rol
xchg
mov
mov
push
mov
lods
out
dec
inc
xchg
push
in
mov
clc
dec
pop
sbb
les
cmp
test
mov
sub
flds
pop
in
fstp
xchg
pop
mov
fidivs
sub
mov
out
adc
xor
mov
lods
push
call
jecxz
push
inc
xor
and
jne
sub
inc
movsb
jmp
or
xchg
gs
push
pxor
addr16
shrl
add
jmp
insb
aam
call
mov
add
or
cli
mov
xchg
loope
adc
jmp
mov
pushf
xor
das
xchg
cli
das
xchg
sbb
cmp
xchg
cmp
popa
in
ds
xchg
jmp
xchg
jnp
test
or
jns
movsb
frstor
in
cltd
rorb
int
rcll
ret
pop
aam
dec
mov
add
cmpsl
sbb
sub
push
lahf
cmpb
push
out
cmc
test
stos
push
cwtl
dec
mov
sbb
xchg
loopne
push
mov
pop
out
popf
sub
mov
pop
movsb
por
out
pop
rorb
cmp
gs
ret
mov
mov
jo
push
lods
adc
fidivl
inc
stos
jbe
mov
pusha
add
xor
sub
dec
push
or
sti
add
cltd
cmp
icebp
add
mov
adc
popf
push
in
fsubr
xor
fistpl
jge
dec
or
gs
movsl
dec
lods
mov
mov
insl
xor
mov
sbb
push
or
mov
shll
xchg
sbb
dec
in
loope
pop
cvtps2pd
dec
cmp
lds
xchg
scas
pop
inc
mov
incb
mov
out
shll
fldenv
add
jg
test
mov
inc
mov
jmp
clc
scas
jns
loop
pop
fucomp
mov
mov
inc
cmpsl
test
hlt
pop
mov
inc
mov
sub
inc
sbb
jp
mov
iret
and
repz
add
add
mov
xor
jp
mov
scas
nop
fs
xchg
jg
mov
cmp
insb
movsb
cmp
push
mov
pusha
dec
push
xor
das
mov
and
mov
cld
and
arpl
ljmp
sub
or
pop
test
js
jge
jae
jne
dec
test
add
sub
mov
xchg
or
sbb
mov
sub
adc
test
js
fidivrl
pop
fidivrs
push
jge
scas
xchg
cmp
mov
std
or
loope
inc
lds
mov
sbb
and
outsb
or
fldt
mov
ffree
sbb
scas
lret
lret
lea
stc
inc
fnsave
js
out
shlb
mov
or
das
in
sbb
pop
popa
out
cs
dec
inc
xlat
fildl
xchg
les
or
and
shlb
fdivrl
lds
loop
xchg
into
inc
insb
out
stc
xchg
jae
xlat
adc
fs
mov
lahf
mov
and
sub
push
daa
fisubl
jb
cwtl
ss
or
jne
or
ljmp
negl
icebp
jmp
addr16
mov
sar
repnz
and
lss
pop
pop
fnsave
mov
mov
sbb
test
ret
push
leave
jo
inc
jns
out
das
push
dec
dec
jmp
insl
inc
sub
insb
loopne
dec
out
hlt
fstpl
aas
mov
dec
dec
mov
iret
push
adc
xchg
test
jnp
xor
stos
push
or
or
jle
ljmp
jae
hlt
mov
scas
fcomp
sub
adc
sub
repz
negl
jnp
mov
cmc
cmp
stos
ljmp
pushf
scas
xchg
int
pop
adc
fimull
repnz
mov
out
push
sbbl
lods
test
sub
shl
std
lcall
fcomp
adc
dec
cmpsl
imulb
outsl
scas
ljmp
in
sub
jb
loope
sarl
sbb
mov
lea
pop
in
mov
xor
frstor
loopne
stos
sub
mov
push
test
out
xchg
aaa
movsb
stc
or
and
xchg
xchg
outsb
in
xor
or
cmpsb
jo
xlat
sbb
cli
addr16
push
fcmovnbe
mov
repnz
jle
stos
mov
pop
mov
rolb
pop
testb
iret
pop
fwait
pushf
or
mov
or
jecxz
fsubr
out
pushl
sbb
pushf
sub
cmp
repnz
pop
int3
popf
pop
fldenv
sub
outsl
or
mov
xor
rclb
frstor
lods
dec
push
push
call
xchg
sbb
jns
in
fsts
ljmp
cmp
out
sbb
cld
movsb
mov
push
mov
int
jns
inc
dec
adc
pushf
call
mov
cmp
xchg
dec
outsb
je
in
lret
fisubl
mov
xchg
cmp
mov
and
jmp
shrl
lock
push
sbb
adc
lea
xchg
xor
mov
pop
ja
xchg
and
in
lock
loop
push
insl
ss
dec
or
pusha
test
into
add
in
mov
push
js
sbb
movsb
mov
xchg
mov
push
scas
add
push
pop
inc
sub
cmpsb
jge
lea
adc
outsb
and
imulb
in
inc
leave
out
ljmp
out
andl
jge
pop
push
inc
cmpsl
ret
cmp
hlt
sahf
daa
cmc
adc
and
das
loopne
test
fcoml
sbb
sub
inc
jp
adc
rcll
cwtl
dec
push
and
insl
fucomp
aam
mov
inc
sarb
out
ja
scas
lret
jno
mov
aas
xchg
lahf
xchg
movsl
pop
mov
cs
fmuls
mov
cmp
mov
xor
out
int
push
jmp
adcb
aas
xlat
dec
fldenv
stos
ss
or
sub
lods
popf
jle
orl
pop
jnp
dec
cmp
jg
int
fisubs
or
mov
fldenv
adc
fdivrs
std
clc
fs
test
das
sub
mov
pop
mov
xchg
xchg
inc
repnz
leave
popf
mov
mov
cmp
fsubl
mov
xor
xor
int
mov
lret
xlat
mov
imul
dec
cmp
xchg
and
fwait
sub
ret
hlt
out
lock
outsb
orl
test
sub
xchg
add
mov
bound
jecxz
out
xchg
aam
xor
or
out
push
and
iret
add
ret
ja
xorb
sahf
clc
movsb
jbe
xchg
jae
xchg
rorl
test
je
push
and
int3
jl
into
aaa
sub
in
jns
sbb
fdivrs
aad
push
mov
xlat
cld
push
or
mov
or
js
push
push
lret
pop
ja
sti
lds
outsl
and
xlat
inc
push
inc
bound
or
or
adc
orl
xor
push
bound
cmp
adc
sbb
js
jns
cmpb
pop
jbe
add
outsl
or
ljmp
push
or
cmpsl
mov
pop
jle
mov
shrb
and
divb
mov
push
add
inc
mov
xchg
jmp
mov
mov
add
adc
cmp
adc
xor
mov
mov
cmc
add
dec
cmc
xchg
and
insb
push
jno
push
inc
pop
or
fcmovnbe
mov
lods
push
lods
imul
jle
ss
rcrb
mov
test
mov
jne
sub
mov
call
out
xchg
pop
mov
push
inc
mov
subb
sub
test
inc
dec
mov
jecxz
cmp
inc
xlat
es
cmpsl
mov
negl
ret
movsb
inc
push
dec
pusha
push
and
jl
pop
fisubrs
lods
pop
pop
movsb
mov
mov
shr
push
out
addr16
mov
repnz
dec
inc
and
sbb
pop
push
daa
pop
xchg
jbe
push
sti
cmp
popf
jmp
cmp
call
ret
add
cmpsl
add
inc
pop
jnp
mov
mov
pop
mov
xor
push
sub
mov
cmpsl
xorb
sub
adc
scas
popa
jp
xchg
xchg
pusha
mov
test
outsl
je
gs
inc
rcrb
repz
mov
xor
push
in
xchg
mov
rcrb
pop
add
pop
jmp
pop
mov
cmc
into
out
mov
mov
mov
movsl
in
aaa
cmp
mov
ljmp
jne
or
cmc
fdivrl
lret
inc
push
xchg
pop
popa
or
in
adc
xor
out
int
test
mov
push
sbb
fnstenv
xor
mov
sbb
js
sbb
or
push
jae
xchg
jno
mov
ja
fld
cmp
lds
add
inc
in
cli
add
int
fisubs
sub
fidivrl
mov
jne
xchg
into
add
nop
push
popl
add
mov
dec
lock
nop
addr16
and
pop
sub
lahf
jmp
jg
scas
inc
pop
dec
push
mov
add
sub
fidivrs
push
lcall
lea
add
and
insl
xlat
pop
outsl
sbbb
and
mov
jge
pop
and
mov
jae
dec
jmp
jmp
outsl
sbb
push
lock
push
add
lods
outsl
lds
sbb
push
out
cs
mov
jno
add
cmp
mov
mov
test
out
dec
sar
adc
fld
inc
inc
cmpsl
pop
fbstp
mov
inc
cli
xchg
arpl
out
inc
cltd
add
enter
in
fidivrs
cmp
cmp
imul
adc
or
out
fwait
test
rorl
dec
hlt
add
mov
xlat
fistl
jg
sub
inc
jecxz,pt
sub
pusha
sti
pop
push
imul
stc
mov
lea
jnp
neg
add
dec
pop
imul
dec
lret
popa
mov
outsb
pop
mov
mov
lds
dec
sbb
ffreep
push
cmp
mov
sub
lock
stos
add
sub
cltd
or
test
fistl
jns
add
push
iret
clc
fs
push
repz
aad
cwtl
sub
adc
leave
or
cmp
sub
dec
sbb
aam
and
scas
test
gs
daa
xor
and
in
dec
mov
stc
xor
stos
in
dec
lods
push
lods
mov
ret
push
repnz
repz
outsb
add
xchg
xchg
test
test
ret
bound
jb
scas
xchg
lret
jns
xchg
pop
pop
mov
cmp
lret
test
mov
mov
lock
fldenv
test
adc
test
shlb
lret
pop
adc
pop
mov
call
lds
inc
mov
xchg
daa
fimuls
loop
insl
push
lret
adcl
mov
mov
rcr
and
lcall
xchg
lcall
das
and
movsb
or
adc
divb
inc
dec
dec
inc
inc
popf
fistpl
mov
imul
lock
test
cmp
pusha
xor
jnp
popa
insb
mov
cs
test
dec
not
xlat
jle
mov
js
inc
rclb
pop
jno
dec
stos
stos
push
in
sbb
pop
push
push
into
xorl
mov
sahf
jns
lds
or
das
roll
push
inc
dec
or
scas
push
arpl
outsl
int3
xchg
xchg
scas
jns
inc
fwait
mov
and
scas
xorl
int3
js
cmp
add
aas
pop
dec
and
hlt
aam
loop
int3
packuswb
xchg
pop
and
inc
hlt
repnz
dec
mov
popa
jno
repnz
stos
cld
movsb
push
and
mov
sub
jnp
or
ret
out
pop
sbb
xor
xchg
adc
and
inc
inc
rcrl
or
das
push
inc
in
sub
rcr
lret
lds
adc
or
icebp
sub
scas
sbb
fdivs
jg
mov
fisttps
and
mov
mov
neg
dec
ljmp
imul
dec
pusha
rep
inc
fwait
mov
mov
mov
inc
push
pop
pop
mov
mov
out
jl
and
ja
shl
add
nop
push
fidivrs
into
or
pop
in
ljmp
push
subl
inc
stos
in
pushf
cmpsb
rolb
aas
pop
jb
insl
movsb
pop
div
in
sbb
outsl
pop
test
cmp
push
imul
int3
mov
mov
repz
sbb
sti
sub
subb
sub
push
mov
cmp
push
shl
xchg
jo
cltd
pop
filds
fwait
mov
adc
repz
xchg
test
xor
fisubrl
imul
cs
ret
cmp
xlat
in
xchg
dec
pop
xchg
mov
fsubrs
jge
jbe
lods
xchg
xchg
dec
cmp
dec
shrl
ret
out
sub
arpl
loop
cmp
movsb
sarb
push
dec
push
loope
inc
std
push
xor
cmp
in
and
scas
sub
mov
adc
arpl
sub
dec
push
dec
repz
in
jg
sub
add
cwtl
popa
mov
push
jle
pop
mov
push
hlt
enterw
int3
stc
fwait
jae
loope
xor
arpl
mov
sub
popa
jmp
mov
xor
dec
fldln2
aad
aaa
dec
pop
aas
jbe
aad
lcall
mov
fsubrs
setb
cmp
ret
icebp
ffreep
jp
js
cwtl
shld
sub
out
sbb
push
fdivrs
sti
jns
outsb
das
stc
into
lods
sub
mov
mov
pusha
adc
in
inc
pop
into
inc
xchg
mov
jge
jge
repz
cmp
mov
lret
mov
cmp
or
outsb
ljmp
fwait
dec
nop
sbb
mov
fldcw
jp
data16
xchg
mov
mov
xchg
js
inc
addr16
aas
outsl
mov
push
aaa
add
mov
cmpl
sub
das
push
cld
inc
pop
xor
aam
mov
mov
das
iret
add
hlt
xor
xor
push
repz
stc
movsl
hlt
bound
sub
pop
in
fwait
inc
mov
add
lock
insl
mov
push
or
iret
push
xor
push
into
mov
into
sbb
loopne
cltd
lret
jnp
pushf
and
out
out
lcall
pop
mov
das
add
push
push
int
dec
xchg
aad
or
or
lret
fidivrl
popf
out
cmp
jo
fists
jb
fiadds
and
idivb
jg
ficoms
jno
add
pop
out
enter
mov
dec
fiaddl
icebp
push
arpl
lds
dec
es
out
cmp
pop
hlt
scas
or
mov
fwait
xchg
adcl
pop
aam
mov
aaa
sarl
mov
mov
mov
mov
mov
aas
sub
xchg
jle
pop
inc
sub
or
push
outsb
inc
add
adc
rcll
jge
ret
stos
loop
lock
cmp
in
mov
push
int3
es
xchg
dec
cmpsl
jp
stc
les
outsl
inc
ror
in
sub
ret
sbb
or
cltd
pop
mov
ror
push
stos
jge
cmp
xor
mov
stc
stc
addr16
lret
sub
xchg
jcxz
js
jge
lock
imul
inc
mov
jns
lahf
mov
test
jns
or
iret
mov
pushf
cs
lods
cli
popf
fstl
and
rolb
call
loopne
lret
or
fistps
and
push
jge
cmp
xchg
xchg
int3
and
jmp
mov
iret
cmp
lds
cli
popa
mov
iret
out
loopne
daa
sbb
dec
inc
mov
sbb
adc
mov
scas
pusha
andl
popa
mov
adcl
jmp
cmp
imul
push
lods
imul
lret
das
jns
mov
and
cmp
es
enter
jns
xlat
and
mov
cmpsb
ret
fadds
cmp
cmpsl
mov
add
cs
push
sub
hlt
sub
xchg
adc
push
jbe
das
inc
mov
cmp
and
fwait
mov
or
addb
ljmp
mov
cld
jbe
and
pop
inc
jne
test
push
mov
mov
clc
movb
or
icebp
stos
cltd
mov
mov
pop
stos
aam
cmp
adc
addr16
jmp
mov
inc
subl
mov
cld
jl
shr
mov
ds
icebp
add
rclb
shlb
cli
inc
jno
lock
xchg
xor
push
sub
ljmp
dec
mov
sbb
adc
test
movl
sub
mov
inc
dec
lock
xchg
jmp
sbb
imul
cmpsl
mov
jne
cmp
lock
jno
mov
add
leave
push
dec
fcmove
dec
iret
cld
jle
adc
inc
push
dec
scas
in
cltd
out
insl
inc
mov
sbbb
jbe
or
xchg
stc
movsl
das
and
pusha
loopne
inc
jecxz
inc
cli
loope
loop
mov
push
mov
push
mov
pop
push
in
lahf
push
mov
data16
iret
mov
in
mov
and
pop
xchg
adc
repnz
popf
inc
jmp
push
or
sub
scas
aas
int
fwait
pop
mov
out
aas
pop
sbb
in
lret
int3
out
cmp
mov
xchg
in
shrb
add
ds
adc
xchg
push
stc
cmc
and
mov
add
xchg
imul
out
sub
fldcw
push
pusha
cmpsl
xor
out
inc
pop
imulb
stos
mov
jp
mov
iret
fdivr
loope
ret
or
and
popl
jecxz
arpl
sub
int
mov
ds
push
aaa
push
jno
xor
sbb
mov
jmp
jb
cs
mov
int
dec
out
jg
jmp
mov
test
mov
mov
push
add
sbb
push
mov
insl
mov
ja
lahf
testb
dec
cmpsb
jns
lcall
aaa
imul
test
gs
sahf
sbb
xor
add
fnsave
icebp
clc
mov
sahf
or
cmp
adc
fwait
sbbl
shrl
dec
fs
test
test
divl
dec
aas
mov
loopne
xor
clc
push
jle
cld
cmp
out
or
stos
push
fmull
cmpsl
jl
jae
mov
add
in
or
jnp
cmp
mov
xor
stc
insb
test
or
lods
jle
stos
mov
lods
add
and
push
popa
mov
je
aas
insb
pop
lods
inc
xor
sbb
sti
mov
sbb
push
dec
jb
sbb
jp
loopne
sbb
sbb
sti
testb
fwait
sbb
movsb
mov
dec
arpl
call
xchg
fbstp
sbb
aam
lret
mov
out
sti
jge
outsl
and
rclb
out
dec
mov
in
call
and
cmp
xor
mov
or
push
movsb
bound
jno
pop
cmp
fnstcw
cmp
push
or
cld
mov
imul
adc
incb
mulb
adc
xchg
mov
popf
pop
add
cmp
lcall
dec
inc
aam
repz
add
fst
dec
adc
add
rorb
fldt
jl
push
enter
adc
mov
push
popf
sub
call
into
out
cwtl
call
fidivl
push
lods
inc
pop
imul
pushf
cmc
ja
sub
jno
mov
movl
jle
outsb
mov
cmp
xchg
enter
mov
pop
ficomps
dec
or
cli
lret
and
sub
iret
lahf
inc
stos
or
fimuls
adc
mov
cmp
jmp
pop
push
fistps
in
jge
jl
jmp
outsb
jns
lods
enter
bound
test
xchg
jns
jo
sbb
stos
and
push
xchg
push
pop
in
inc
mov
pop
mov
in
or
xor
adc
test
xchg
inc
inc
sub
cmc
cmp
cmp
out
push
in
mov
or
insb
stc
lret
xchg
stc
or
xchg
push
inc
addr16
mov
sti
adc
fists
enter
add
je
lods
and
push
cmp
mov
inc
pushf
push
xchg
xchg
sub
mov
mov
push
cmpsl
ds
and
xchg
leave
movsl
jg
dec
and
enter
sub
sub
dec
int
fdivrs
dec
mov
mov
mov
cs
mov
xor
xlat
aaa
iret
sbbl
jge
fisubl
stc
pop
out
imul
enter
mov
mov
xlat
repz
push
out
movsl
mov
cmp
add
jnp,pn
cmpsb
shlb
ds
xchg
dec
pop
jmp
mov
out
leave
insl
cmp
stos
sub
sub
addr16
xchg
das
push
mov
std
das
andb
mov
cmp
imul
subb
stos
fwait
insl
mov
push
jg
or
add
xchg
stc
push
in
or
divl
add
dec
jg
insl
inc
sub
inc
adc
inc
add
data16
mov
aas
les
push
cmp
loopne
push
pop
and
lea
jecxz
or
cmp
outsb
in
pop
xor
jge
mov
cmc
xor
mov
addr16
pop
fs
xlat
or
mov
repz
mov
fprem1
addl
push
xlat
mov
std
sub
scas
pop
adc
popa
lahf
cmp
and
mov
popf
arpl
xchg
mov
xor
inc
aas
dec
sahf
js
aaa
cli
insb
fdivs
cmp
cs
hlt
add
jle
mov
jg
or
test
scas
mov
jae
out
cmp
and
push
inc
dec
loope
ret
and
xor
clc
push
sbb
xchg
cmc
cmpsl
imul
shrl
sub
mov
lret
mov
mov
cmpsl
sbb
lret
test
bound
pop
and
enter
inc
mov
jl
popa
rorb
in
or
mov
out
jno
xor
outsl
push
pop
repnz
dec
in
std
imul
push
pop
jle
mov
leave
test
sub
pop
add
in
dec
mov
fistpll
or
clc
fbstp
cmp
sbb
xor
imul
sbb
ret
mov
data16
or
xchg
push
sbb
shlb
ret
mov
xor
pop
mov
mov
popf
cli
push
jmp
jne
icebp
jge
dec
aad
inc
aaa
cmc
mov
iret
xchg
cld
dec
xor
fwait
pop
xor
mov
or
pop
les
adcl
add
nop
leave
lret
test
incl
das
js
mov
hlt
xor
int
sub
lock
lock
adc
dec
les
push
cs
ds
fisubl
mov
xchg
or
in
or
test
pop
lds
and
bound
dec
xchg
aam
int3
dec
and
xchg
fwait
sub
jecxz
mov
sub
sti
mov
dec
inc
ret
bound
sub
repnz
xlat
add
cmp
pop
add
cmc
or
mov
pop
mov
jne
xchg
in
inc
into
xchg
jmp
pop
sti
mov
xorl
jnp
test
xchg
inc
jns,pt
aas
jmp
loop
fldln2
cltd
and
leave
adc
aas
leave
rorl
push
test
and
js
pop
in
or
jbe
or
xor
dec
jns
lahf
cmp
inc
sbbb
test
cmp
lret
loop
push
stc
or
inc
xor
adc
push
cmp
mov
mov
dec
ds
mov
cli
add
add
mov
pop
lret
sbb
dec
lret
or
or
sub
push
cmp
mov
pop
aad
in
dec
lahf
push
mov
adc
scas
fnsave
jbe
mov
mov
add
mov
xorl
loope
inc
or
fwait
push
popf
in
ret
sub
negl
pop
rcll
xchg
test
cmpsl
dec
jp
imul
cltd
call
popa
adc
xor
les
in
lock
xchg
clc
sahf
mov
cmc
stc
outsl
sahf
call
stc
ret
xor
jo
ret
xchg
into
add
push
aad
test
clc
std
aad
add
mov
push
cmc
insb
lods
rcrl
or
mov
loope
cmp
mov
xor
xlat
lret
aad
scas
or
in
js
lret
mov
insb
das
add
dec
pop
sbb
push
mov
mov
sub
push
jg
push
push
call
mov
hlt
or
movb
jecxz
js
dec
jmp
mov
in
ret
rcr
aas
test
mov
cld
and
xchg
lds
mov
sbb
jae
mov
fdivrl
or
std
cmp
mull
xchg
mov
pop
mov
xor
shrl
sbb
es
dec
dec
or
push
pop
cmp
cs
jle
lcall
fdivs
pop
sti
repz
jecxz
ret
test
jl
stos
pop
sbb
xchg
xor
jecxz
and
mov
inc
mov
in
repnz
mov
aad
mov
mov
outsl
jecxz
scas
iret
loope
nop
arpl
out
mov
popa
popf
sbbl
mov
lea
mov
mov
cmpsb
scas
shl
cmp
pop
pop
dec
mov
scas
in
and
inc
jne
dec
push
xchg
fistpl
jo
call
sub
add
mov
negl
ss
daa
xlat
cld
rcrb
or
jns
mov
popf
mov
scas
negb
sbb
xor
out
xchg
pusha
push
mov
or
xchg
sub
adc
cld
sarl
out
jl
mov
gs
fs
cmp
into
shll
push
pusha
jo
mov
mov
jmp
iret
push
mov
sub
xchg
test
add
xor
je
xchg
xchg
cmp
xlat
adc
xchg
out
add
dec
jae
int3
mov
insb
in
test
xchg
dec
mov
loop
popf
ss
nop
je
sub
outsb
lods
adc
daa
cs
lods
ja
jg
sbb
sbb
and
mull
in
gs
dec
jne
mov
cmp
scas
pop
call
arpl
mov
leave
pop
into
push
inc
jecxz
jmp
ds
dec
or
pop
addr16
jle
mov
inc
mov
cwtl
ja
ljmp
dec
jl
push
xchg
mov
pop
cltd
roll
mov
add
lock
sahf
dec
mov
insb
dec
aad
mov
movsl
inc
iret
cmpsl
jmp
and
in
mov
popf
call
test
dec
dec
mov
imul
enter
or
iret
int
movsb
orb
cmpsl
dec
xor
enter
inc
jmp
add
out
pop
jp
jmp
roll
or
adc
mov
pop
adc
push
and
in
mov
fldcw
push
jp
mov
notl
jle
loopne
call
shll
aad
cmp
in
dec
fucomi
mov
sbb
loop
mov
lods
push
repnz
inc
lods
or
jmp
push
push
fnstenv
andb
mov
jns
fucomp
ljmp
repz
das
hlt
jp
xchg
and
jmp
inc
dec
mov
mov
scas
or
cmp
in
xorb
and
imul
clc
rcrl
inc
shl
ds
movsl
sbb
cs
xor
mov
ds
js
orl
xor
aad
jne
dec
pushf
xor
mov
xchg
mov
lock
in
jb
daa
addr16
mov
dec
xchg
cmp
sarl
and
jp
iret
adc
xchg
jno
dec
bound
sub
pop
adc
lret
rol
and
repz
and
aad
jge
shrb
xor
push
int
mov
movsb
nop
movsb
fstp
ss
and
xor
jo
cld
push
in
ss
mov
sahf
scas
xchg
cmp
push
fisubrs
nop
xchg
mov
or
dec
fs
sahf
fcmovnu
jge
rcrl
hlt
and
add
or
push
jnp
xchg
call
xchg
pop
sbb
test
into
es
js
lea
lea
inc
xchg
lds
mov
sub
hlt
aad
pop
mov
in
aam
loopne
inc
mov
dec
push
imul
mov
sbb
in
mov
jbe
mov
xchg
jg
lcall
sbb
lahf
jo
outsb
cmpsl
pop
rcrb
push
lods
or
loopne
jle
or
add
mov
xchg
ret
or
movsl
test
inc
dec
or
loopne
fcoms
push
sub
mov
dec
dec
push
xor
inc
js
or
fistpll
popa
sub
push
inc
xchg
fisubrl
and
cs
xchg
shlb
jno
mov
cs
jp
hlt
adc
xor
jb
addl
pop
dec
pushf
aaa
add
mov
dec
jo
or
xchg
divb
scas
xor
test
out
mov
push
sbb
cmc
lds
fistl
dec
add
jns
cmpsb
jb
nop
in
ljmp
xchg
arpl
and
sbb
sbb
or
gs
les
popa
cltd
hlt
adc
dec
xor
popf
sub
jae
push
xor
pushf
into
dec
mov
bound
xchg
hlt
bound
insl
ret
loope
xchg
in
or
pop
daa
stos
and
inc
in
movsl
or
outsb
sub
jae
pushfw
pop
mov
in
scas
sub
sahf
ret
mov
or
xor
outsb
mov
pop
sub
test
xchg
shll
imul
divl
movsl
cmp
and
and
and
adc
clc
mov
std
movsb
sbbl
test
mov
fsubl
sbb
cmpsl
xor
out
xchg
out
or
rcll
cltd
rorb
out
jns
stos
int
pop
inc
xchg
outsb
push
mov
pop
scas
and
inc
bnd
test
std
jge
mov
mov
clc
sub
shll
and
lods
mov
xor
sti
lods
inc
arpl
xor
test
xchg
mov
es
sbb
xor
js
sub
imul
jg
es
in
adc
gs
gs
enter
push
sub
mov
dec
push
scas
int3
repnz
add
sahf
fstpl
sbb
inc
stos
adc
cmc
cmp
unpcklps
mov
outsl
ret
pushf
push
or
cmp
repz
push
popf
cmp
lds
and
mov
jae
hlt
add
clc
sbb
sub
shlb
jne
xchg
inc
divl
shrl
mov
xlat
adc
loopne
lahf
adc
test
adc
sbb
imul
out
xor
push
jmp
vucomiss
loopne
inc
add
jp
push
cmc
jnp
mov
hlt
xor
in
mov
jae
lea
lock
dec
movsb
adc
dec
inc
add
mov
xchg
lea
ud0
inc
sbb
imull
mov
mov
cmp
test
xchg
adc
push
out
push
popa
int
jnp
adc
popf
pop
fs
mov
pusha
sbb
insl
arpl
fstps
adc
cmp
and
jecxz
and
sub
ss
pushf
pop
pop
ss
orb
fdivrl
and
xchg
pop
jg
or
mov
inc
sub
xlat
aas
xor
xchg
mov
jge
cmp
ja
mov
cwtl
lods
mov
push
cwtl
ss
adcl
jecxz
inc
push
fcompl
jge
mov
inc
cmp
outsl
inc
popf
sbb
dec
nop
sbbl
mov
xchg
psrad
scas
fs
sub
ficoml
neg
adc
test
lret
adc
jae
in
or
insb
sti
mov
jg
pop
dec
pusha
mov
inc
fmuls
dec
rcrl
popa
pop
cmp
jecxz
arpl
push
xchg
testb
or
cld
movsl
adc
lcall
cli
push
and
adc
movsl
inc
pop
xchg
pop
insb
mov
cmp
imul
stos
mov
jle
out
pushf
out
enter
add
xlat
gs
movsb
stos
cmpl
and
cmp
and
xor
add
rorl
or
lret
cmp
movsl
xor
dec
mov
pop
pop
loope
inc
xor
push
push
cmp
sub
add
mov
xor
add
scas
xor
hlt
cmpsl
cmp
push
lret
push
arpl
and
xchg
fldenv
cmp
pop
add
xchg
mov
dec
add
pop
cmp
pushf
sub
stc
jne
hlt
jnp
sub
mov
inc
dec
aaa
dec
mov
iret
dec
pop
dec
out
add
repz
lret
and
xor
not
adc
inc
insl
add
out
adc
cs
xchg
mov
or
mov
shr
lcall
mov
cmp
addr16
mov
jb
lea
jge
dec
orb
std
out
nop
mov
dec
inc
mov
cli
mov
enter
dec
cmpl
imul
or
arpl
sti
fiaddl
incb
add
out
or
cwtl
xchg
pop
sti
and
or
push
mov
faddl
and
push
mov
inc
cmp
push
mov
sub
pop
xlat
bound
pop
dec
pusha
aad
inc
push
add
dec
push
or
sbbb
out
push
adc
sub
mov
pushfw
sbb
and
cmc
sarb
sbb
test
jle
subl
add
divl
dec
int
inc
cmc
sbb
mov
ja
inc
inc
xor
pop
sub
push
gs
iret
fs
std
outsb
lds
mov
les
or
pop
mov
jge
data16
faddl
cmpsl
jmp
pop
aas
addr16
mov
test
and
or
mov
enter
ja
xchg
ret
push
andl
push
stc
inc
addl
inc
cmp
icebp
add
jb
mov
sub
sahf
lcall
ss
ficoms
jmp
insl
pop
push
mov
aaa
push
push
or
add
push
dec
bound
sbb
rcll
push
lret
in
subl
sub
out
les
inc
repnz
outsb
pop
repz
xor
je
adc
add
jno
shlb
sub
sub
dec
sbb
cmp
std
cld
ret
add
icebp
add
xorl
mov
pop
out
aaa
jb
jno
cmp
jp
cmp
fidivl
jl
jl
stos
mov
jnp
sahf
imulb
pop
mov
mov
les
cmp
jp
push
jmp
les
xor
rcrb
cmp
lods
addr16
scas
in
fs
int
fdivs
mov
sbb
mov
fwait
dec
mov
jg
out
mov
data16
ljmp
xchg
fcoml
sbb
std
ds
dec
rorb
xor
fsubl
incb
adc
xchg
sahf
lods
gs
test
cmp
jae
insl
out
lret
inc
iret
leave
dec
cmp
inc
enter
mov
leave
jecxz
fwait
xchg
dec
add
sbb
add
std
pusha
or
pop
insl
adc
mov
sarl
jge
lret
pushl
xlat
pop
push
sbb
roll
insl
inc
ljmp
and
or
loopne
push
lock
adc
sub
push
imul
jl
inc
into
ss
ret
arpl
push
test
repz
push
mov
mov
inc
imul
daa
mov
cmp
lret
dec
add
mov
cltd
add
cmp
movsb
jge
cmc
subb
xor
mov
dec
jg
and
mov
adc
add
or
pop
popf
xor
mov
sarb
pushf
mov
jae
scas
pop
lcall
push
mov
popa
in
nop
jge
daa
mov
fimuls
push
cs
es
subl
in
pop
test
or
lcall
loope
stc
and
lahf
xchg
lds
imul
outsb
daa
test
jns
xchg
mov
lods
andl
dec
ljmp
cmpsb
sbb
daa
xor
test
inc
and
aad
sub
push
push
push
in
call
add
mov
popa
jno
pop
cld
xor
and
mov
call
jnp
xchg
and
cwtl
jno
push
aaa
test
testl
mov
jbe
lds
dec
cmpsb
xor
out
xchg
push
lahf
push
aad
sub
pop
dec
cmp
pop
outsl
out
pop
mov
xchg
fiaddl
bound
lea
xorl
inc
dec
in
push
sahf
dec
inc
sub
outsl
ja
out
insl
ret
jne
xchg
mov
dec
mov
daa
out
enter
cmp
imul
test
push
ljmp
mov
sub
faddl
mov
shll
into
lds
sbb
shrl
mov
outsb
test
stos
setnp
rclb
or
cwtl
adc
inc
cmp
ljmp
repnz
mov
add
fldenv
cmp
add
stos
adc
outsb
lds
insb
lcall
push
sti
and
in
cwtl
cs
push
dec
insl
mov
fidivrl
mov
sub
dec
lods
add
mov
mov
pop
stos
daa
or
jo
cmpb
fildll
mov
subl
or
and
aam
aad
mulb
aas
aas
popf
aas
adc
dec
push
xor
push
and
fisubrs
inc
inc
and
lret
mov
mov
jbe
stc
aam
lcall
cmp
mov
aad
hlt
xchg
popf
push
movsb
cmp
jbe
pop
out
push
cmpsb
sub
add
fwait
add
push
push
cld
lock
xchg
cltd
jecxz
xlat
sub
mov
jge
mov
popf
loopne
loope
in
and
rcll
decl
mov
adc
rcrl
push
jl
mov
lea
ja
call
adc
and
mov
sbb
inc
mov
xor
xor
out
popa
inc
in
xor
jbe
lods
inc
lea
jb
jae
pop
enter
ret
adc
cmp
mov
loopne
fbstp
int3
cmp
adc
jg
push
sub
sbb
jne
int3
mov
mov
xor
adc
jle
pop
add
and
mov
aam
pop
hlt
outsw
mov
fmuls
outsl
mov
pop
adc
sub
fstpl
mov
scas
mov
cmpsl
mov
pusha
inc
es
mov
outsl
inc
sub
pop
and
cmpsb
push
mov
lds
pop
sbb
pop
jb
and
mov
pop
addl
mov
rcll
jno
jge
xor
cli
adc
sbb
push
xchg
jle
cmp
adc
push
mov
arpl
pop
mov
aam
fldl
push
mov
push
popa
icebp
fwait
shr
inc
imul
bound
sub
mov
mov
mull
push
cmp
sub
jb
dec
ljmp
mov
pop
fadds
stos
mov
or
stos
sub
ds
or
cli
aam
scas
xchg
push
jns
and
adc
in
jbe
cli
mov
hlt
xchg
adc
bound
fs
xchg
mov
xor
fcomip
das
stos
cmc
mov
pop
or
adc
gs
outsl
xstore-rng
cmpsl
add
pop
call
mov
das
inc
jge
in
mov
push
movsb
daa
jbe
bound
and
inc
push
cmp
popf
add
and
nop
call
push
test
push
mov
push
movsl
sbb
cltd
mov
fisubrs
mov
fwait
outsl
inc
call
sbb
or
in
mov
cmp
addr16
ret
pop
stc
into
jg
imul
cmp
out
orb
add
mov
lret
sub
xchg
and
dec
loope
dec
out
fstpl
dec
adc
fwait
cld
incb
das
mov
push
push
testl
jo
mov
shlb
addr16
jp
sub
xlat
adc
fiaddl
fmull
orl
push
lret
lods
mov
mov
xchg
add
mov
rorl
lods
cmpsb
outsl
push
repnz
insb
pop
test
pop
sub
push
fisttpll
neg
lcall
sub
and
adc
gs
ja
adc
lds
lret
cmp
inc
mov
xchg
in
outsl
mov
aam
inc
push
jo
inc
dec
rcl
iret
and
mov
sub
pusha
jb
data16
mov
cld
dec
mov
jns
pop
mov
jnp
nop
cli
and
in
clc
pop
shlb
lds
mov
or
and
adc
and
insb
cmp
mov
ljmp
cmp
xchg
cs
rolb
lods
jb
out
and
in
imul
rorb
repz
adc
jge
jne,pn
lock
add
jecxz
sbb
aad
xchg
and
mov
pop
inc
pop
scas
cmc
mov
ret
and
cltd
pop
add
dec
sub
fiaddl
dec
jne
cmp
sub
aad
subb
or
or
sbb
push
or
and
cmpsb
jl
sahf
in
mov
mov
adc
dec
inc
xchg
imul
or
push
sbb
mov
stos
testb
sbb
int
sbb
ror
ret
stc
out
mov
into
mov
popa
ljmp
jle
pop
jbe
mov
jp
cmpsb
ficoml
add
jl
sub
aad
fwait
adc
enter
rorb
mov
jmp
mov
cmp
pop
shlb
lea
push
pop
loopne
addr16
xlat
cmp
hlt
push
test
enter
popa
xor
xchg
jge
cmp
sub
or
stos
mov
inc
jo
sahf
xor
shll
stos
sub
repz
pop
jo
lcall
add
pop
sub
add
or
adc
lret
jnp
adc
pop
add
mov
jecxz
out
dec
sub
mov
cltd
int3
bound
iret
data16
mov
jl
lea
ret
dec
push
cmp
mov
lds
pop
inc
jno
inc
nop
jle
fldcw
fistpl
mov
push
sbb
sub
stc
mov
out
shl
sub
arpl
dec
test
ret
jge
or
cld
sbb
aam
cmp
jns
adcl
push
insb
es
pop
fldcw
jo
fdivs
mov
xchg
rcrl
repnz
jmp
pop
cli
hlt
mov
aam
push
or
out
xchg
fucomp
dec
jns
data16
adc
push
mov
or
xchg
jmp
dec
lcall
mov
jl
jp
mov
mov
and
test
or
push
scas
out
jge
jecxz
arpl
jne
sbb
dec
push
sbb
sub
cmp
mov
hlt
push
in
les
inc
adc
push
aaa
push
lods
add
popa
mov
sbb
sub
ret
jmp
add
scas
xchg
into
test
mov
push
out
loopne
lret
int
cwtl
popa
insl
or
aad
pop
mov
call
das
mov
daa
imull
iret
push
lock
mov
xor
loopne
push
loopne
xchg
lret
cwtl
shrl
inc
lahf
xchg
push
rcll
aaa
fs
imulb
or
inc
fxch
das
in
shl
mov
jo
lock
add
xor
lret
hlt
cmp
xor
cld
hlt
xchg
ss
jae
frstor
fcmovne
movsl
xor
mov
mov
xchg
cld
es
fstp
into
dec
inc
mov
add
repnz
sub
dec
pop
je
jb
cmp
or
pop
and
imul
xchg
xorb
out
lahf
cs
lret
mov
xor
cmpsw
dec
lahf
in
dec
fsubl
fidivrl
sbb
sub
adc
mov
ss
sbb
mov
negb
pop
cwtl
mov
flds
icebp
jle
dec
or
shll
orb
push
sar
test
push
popa
jns
adc
out
pop
cmp
jnp
jmp
add
out
scas
in
dec
ret
cli
push
pop
rcl
aad
xchg
out
cwtl
ret
xlat
xchg
add
scas
out
sti
push
xchg
or
sub
pop
mov
imul
cmpsb
aad
mov
jl
mov
movsb
rcl
outsb
sub
bound
test
scas
pop
and
pop
aad
and
cli
cs
xor
insb
in
frstor
bound
in
frstor
inc
adc
repnz
loopne
dec
mov
xchg
dec
xchg
loop
std
mov
mov
sub
out
pushf
aam
cmp
pop
popl
xchg
adc
xor
push
mov
mov
adc
jbe
push
mov
pusha
adc
mov
mov
mov
adc
cmp
mov
insb
fiaddl
out
adc
cli
fdivrs
mov
stc
add
std
inc
mov
insb
xchg
add
adc
pushf
xchg
jecxz
add
icebp
xchg
in
dec
mov
clc
leave
dec
dec
lret
xchg
sbb
xchg
lcall
cs
xchg
jecxz
movsl
sbb
mov
adc
xchg
mov
aaa
inc
push
and
repnz
mov
mov
cmp
int
adc
ror
movsb
popf
lds
pop
cmpsl
bound
add
mov
gs
ja
rolb
ss
sti
adc
cs
add
imul
std
inc
push
cmp
mov
sbb
jle
movsl
adc
or
orb
cmc
mov
out
mov
sbb
les
add
jle
adc
pop
mov
xchg
cwtl
mov
sub
sbb
mov
cmp
jle
inc
in
gs
lret
pop
push
mov
or
iret
and
mov
lret
inc
bound
hlt
clc
jbe
sub
mov
imul
xchg
pusha
mov
lods
adc
mov
mov
mov
outsl
dec
aad
push
pop
pushf
cwtl
xor
pop
ja
shrb
or
stos
sbb
cld
stos
jle
mov
movsb
jno
iret
push
sbb
jmp
iret
pop
xchg
ret
push
les
cmp
push
aad
pop
popf
jbe
mov
pushf
mov
adcb
stc
pop
inc
or
test
rsm
in
dec
scas
push
jbe
xor
in
sahf
movsw
leave
sbb
xchg
lods
sbb
fs
shlb
mov
push
out
jbe
xor
dec
pop
jmp
shr
stos
jp
dec
in
out
mov
xchg
test
xor
dec
sahf
push
fs
mov
xchg
mov
inc
mov
mov
inc
clc
xchg
jno
cmp
dec
jmp
pusha
or
lea
lods
adc
fsubrl
and
jb
popa
xchg
mov
push
sbb
rcr
bound
iret
aaa
jne
jle
adc
cmp
dec
sub
dec
repz
rclb
dec
shll
sbb
and
mov
xlat
les
cmp
and
inc
sub
jle
adc
adc
sub
int
loopne
sahf
xchg
dec
pop
lcall
bound
mov
or
fsubs
mov
adc
fs
jbe
push
das
jecxz
hlt
movsb
push
lret
shrb
pop
call
jo
pusha
lahf
sti
jae
xor
ret
mov
mov
jle
adc
lahf
fwait
adc
je
and
jno
pop
lret
pop
xchg
cmp
out
mov
sbb
cmp
fidivs
cmpsl
xchg
out
arpl
push
scas
dec
popl
loopne
push
in
divb
rorl
push
scas
pop
or
jno
in
pop
adc
push
jg
out
clc
loop
in
sub
repnz
or
leave
ss
jb
add
hlt
add
dec
mov
gs
bound
xor
jmp
and
mov
outsb
hlt
pushf
xlat
push
xchg
sete
pop
push
dec
popw
cs
cmp
jle
dec
into
cmpsb
fcomps
xchg
pop
xchg
adc
inc
add
cmp
push
loopne
imul
or
popf
jae
repnz
arpl
jp
aaa
sbb
sbb
orb
icebp
aam
mov
cmp
out
clc
ret
sbb
clc
ret
insl
test
inc
jns
cmp
aam
sub
repnz
mov
cmp
inc
pcmpgtb
fwait
xchg
push
sub
push
jle,pn
xchg
mov
cmpb
cmp
js
dec
negb
dec
jbe
mov
dec
mov
jo
fwait
push
inc
rcrl
pop
fdivrl
in
int3
xchg
call
and
lcall
lods
int3
outsl
mov
sbb
pop
cmp
rcrl
jns
fldl
adc
jecxz
jae
and
stc
and
popf
rcll
jo
testb
push
insb
sti
push
cld
dec
add
inc
pop
push
in
out
stc
test
mov
push
mov
hlt
out
xor
rorb
add
popa
notb
cld
test
adc
leave
sbb
pushf
dec
and
dec
mov
adc
adc
cmc
cli
xor
add
fdiv
lret
fwait
roll
xchg
pop
pop
mov
xor
mov
adc
das
ljmp
dec
jne
pop
push
push
push
jb
das
xchg
aaa
or
adc
aad
xlat
adc
inc
xor
add
stos
data16
rcl
adc
lret
xor
push
cmpsl
cmpsl
dec
lret
mov
outsb
lret
scas
fimuls
insl
mov
jb
sbbl
repz
stos
or
and
addr16
cltd
out
xchg
in
adc
inc
rcl
xor
jg
enter
jp
cmp
scas
in
add
jecxz
push
mov
fdivrl
das
jl
inc
aam
fwait
popa
inc
test
rorl
loopne
clc
push
int
xchg
push
test
test
pop
cmp
lea
loopne
shlb
mov
lahf
mov
add
pop
dec
iret
daa
pushf
mov
out
adc
into
xchg
mov
in
cmovns
cmpsb
ljmp
or
push
add
jno
or
mov
pop
ljmp
mov
test
cld
jp
ja
or
das
cltd
add
and
cmp
add
dec
jl
test
dec
ljmp
cmpsb
data16
lods
xor
pop
or
sahf
mov
sub
mov
lock
cli
pop
lea
mov
mov
push
shll
jl
or
mov
mov
adc
test
es
adc
or
jl
scas
jno
push
das
lahf
lret
jbe
inc
pusha
lret
mov
lcall
jl
shl
scas
dec
repnz
pop
xor
negl
adc
sub
lahf
mov
mov
int
push
adc
dec
xor
fsubs
mov
les
movsb
pop
out
mov
cltd
push
sub
and
ja
cltd
bound
repnz
jno
add
rcll
jae
push
test
push
cmp
pop
lret
mov
test
inc
out
push
in
xchg
mov
jne
and
dec
jmp
insb
sbb
push
push
add
fistpl
insb
loope
fwait
les
dec
jg
or
clc
stc
xchg
push
loop
insl
stos
inc
aas
fstpt
stc
enter
imul
push
es
pusha
mov
mov
lret
inc
xchg
lds
mov
lods
inc
fldenv
into
push
inc
dec
xor
lds
jp
mov
mov
out
out
or
bound
push
or
loope
aaa
jg
sub
cmp
in
mov
sub
outsb
xor
and
into
add
and
mov
push
cmp
jmp
pop
pop
outsl
jb
popa
in
dec
pop
xchg
pop
ljmp
push
mov
mulb
mov
mov
adc
lcall
inc
inc
mov
jl
xchg
test
lahf
pop
mov
xor
sti
add
rorl
rorl
pop
inc
addr16
ret
jg
xor
lcall
aas
lahf
mov
in
add
cld
in
das
sub
xor
in
cmp
pusha
pop
jg
dec
ljmp
adc
and
cmp
and
das
clc
push
or
stc
cltd
jmp
faddl
mov
mov
test
push
sti
sub
pop
mov
inc
fadds
push
aad
flds
push
mov
mov
sbb
and
loope
shl
aas
inc
fwait
test
popa
cmpsl
mov
fstl
pop
sub
idivb
pop
jnp
xor
fcomps
repz
repnz
hlt
sub
mov
aas
pop
add
jle
pushf
jns
or
pop
ljmp
and
int3
mov
movsb
rorb
xchg
jl
dec
push
mov
cltd
ret
pop
xlat
das
iret
jecxz
and
lcall
add
and
cmpsb
stos
pop
stos
cmc
jae
cmp
cmp
out
inc
push
outsb
sub
hlt
orl
ljmp
push
mov
test
sub
insb
inc
jno
aam
imul
dec
jne
jns
adcb
sbb
xchg
sbb
addl
mov
mov
push
cmp
ja
insl
cld
inc
xor
sbb
pop
push
sub
dec
out
cmc
sahf
jecxz
cmc
subb
pusha
mov
xchg
add
fcmovnu
imul
dec
mov
pop
inc
mov
imul
push
lret
adcb
lcall
xor
stos
fisubrl
xor
test
daa
add
cmp
and
lcall
jg
ret
jle
and
jg
shlb
cld
in
ror
push
ds
outsb
in
xchg
jno
pusha
xchg
mov
pop
mov
das
loop
cs
pop
cmp
mov
xchg
mov
add
push
das
aad
sti
inc
xchg
lahf
push
xlat
mov
push
mov
arpl
jo
test
lret
mov
mov
or
push
lea
xor
and
push
int3
and
aas
idiv
popa
popf
rcl
ja
aad
xorl
pop
ja
aad
push
cmpsl
inc
leave
rolb
fmuls
js
or
jp
jnp
push
je
xchg
adc
mov
jg
int
ja
pop
fisubs
enter
stos
jle
cmp
mov
fs
mov
push
sbb
lea
sub
jb,pn
js
adc
inc
mov
fs
pop
xchg
mov
nop
insb
iret
cltd
cmpsl
add
pop
leave
int
and
out
leave
mov
pop
pop
sbb
jne
or
pop
xchg
shll
xor
leave
test
pop
or
outsb
mov
pop
add
adc
test
sbb
dec
lret
mov
fstpt
pop
lret
mov
pop
outsl
sarb
mov
jg
enter
inc
addr16
lahf
mov
add
adc
mov
mov
adc
fistl
mov
test
push
and
test
and
mov
pop
ret
dec
cmp
mov
xchg
jmp
jmp
mov
sub
call
jl
sub
rorb
aam
in
jmp
je
fstl
inc
stc
fistps
jp
adc
cli
xor
push
sub
dec
jno
lock
mov
hlt
mov
inc
jp
mov
push
jnp
mov
ret
inc
call
mov
sub
or
lret
jmp
leave
and
out
jp
das
imul
and
xor
aad
or
sub
pop
arpl
mov
mov
push
jg
push
sbb
ss
sarl
jp
rcrb
clc
xor
jne
setnp
out
aas
push
outsb
jno
dec
ror
add
out
push
mov
sahf
int
les
lods
and
inc
mov
adc
lds
push
dec
pushf
sbb
inc
sbb
lret
orb
stc
lret
fldl2t
imul
dec
js
inc
out
lahf
cwtl
std
aaa
outsb
jnp
mov
mov
shrl
pop
and
lods
es
test
xor
mov
cmp
aas
fmuls
cli
dec
cwtl
and
jns
sbb
loop
xor
sub
pop
push
roll
mov
loop
cmp
dec
insb
sub
rorl
btr
and
lcall
and
jmp
nop
dec
int
call
mov
test
ljmp
xor
pop
cs
sub
pop
pushf
mov
in
data16
xor
sub
mov
stc
aam
xlat
lods
ljmp
inc
addr16
jbe
stos
pop
lcall
inc
std
inc
push
push
subb
mov
adcl
fwait
shrl
push
cli
adc
mov
repz
test
xlat
or
dec
addr16
ljmp
loopne
xchg
mov
cmc
ds
lea
inc
in
inc
imulb
jmp
xor
mov
dec
pop
outsb
out
push
push
fiadds
dec
fwait
push
aam
stos
push
andb
in
xchg
add
sbb
in
add
cmpsb
and
dec
insl
cmp
inc
out
loop
inc
movsl
xorl
sub
xorl
push
mov
iret
cmc
shll
inc
loope
push
mov
out
mov
inc
xchg
sbb
lahf
xchg
add
repnz
sbb
jp
out
jle
jle
stos
sub
mov
je
xchg
mov
sub
push
xchg
mov
addb
mulb
mov
sub
cs
int
add
data16
xchg
dec
add
fcmovnbe
mov
dec
aam
sub
sbb
shl
lahf
xlat
mov
sarb
push
inc
mov
loope
sbb
sbb
sbb
mov
adc
lock
leave
outsb
pop
xchg
stos
movsl
jbe
fcompl
adc
jmp
inc
adc
out
lahf
sub
cvtpi2ps
dec
sub
iret
cmpsb
xchg
mov
pop
shll
add
jno
lods
js
scas
scas
mull
adc
and
inc
mov
stc
pushl
push
mov
rcrb
inc
out
xor
xor
lret
jbe
cmpsl
outsl
rcrl
add
sarb
add
int3
imulb
sti
repz
mov
icebp
xchg
sub
fsubs
add
jnp
pop
pushf
sub
arpl
rorb
cmp
dec
rolb
adc
ss
sub
or
out
mov
mov
decb
dec
mov
and
jl
push
sub
push
addr16
loop
push
jmp
lock
inc
push
sbb
mov
je
adc
bound
dec
cmp
xchg
cmp
sbb
jae
or
inc
mov
iret
push
insb
test
lret
pop
add
dec
push
lcall
mov
dec
jno
add
and
dec
aad
xchg
add
es
adc
mov
aas
mov
add
xchg
in
fisubl
jmp
adc
stos
or
setbe
ljmp
or
fists
and
out
sti
nop
rclb
aam
movsl
jle
pop
mov
mov
pop
out
jle
int
cmp
das
loope
das
cs
dec
ljmp
jecxz
mov
or
inc
fidivl
jp
daa
adc
push
pop
clc
mov
mov
int
xor
adc
cmp
and
arpl
sbb
jmp
int
sub
ljmp
clc
pop
sub
add
inc
push
push
mov
mov
add
mov
and
add
xor
or
or
popa
pop
push
xchg
and
pop
cli
xor
daa
cmp
ja
popa
dec
aaa
adc
and
pop
inc
adc
in
aam
inc
int3
ret
dec
inc
or
lret
inc
popf
ljmp
push
dec
bound
test
pop
and
xchg
mov
in
jno
add
mov
ret
inc
enter
adc
in
sub
xlat
push
and
outsb
icebp
sbb
dec
fndisi(8087
pop
in
dec
imul
dec
das
repnz
sbb
mov
fistl
jmp
cltd
movsb
add
mov
mov
stos
push
test
push
fnstsw
cmpsb
inc
mov
roll
and
jl
aas
push
add
scas
sarb
or
pop
icebp
fcomps
inc
rorb
incb
lods
shlb
out
push
xchg
addr16
mov
sub
out
pop
push
cmp
cmp
bound
rclb
mov
add
lock
out
scas
push
stc
rol
jl
repnz
xchg
sarb
test
sub
es
sbb
or
pop
test
repz
cwtl
addr16
data16
and
aaa
sahf
fistps
push
mov
xor
pop
sbb
stos
js
sarb
out
aad
call
fstps
pop
sbb
jno
mov
and
cmp
adc
dec
out
mov
sub
pop
push
lret
and
in
cmp
inc
out
out
arpl
inc
pop
lods
pop
push
data16
and
mov
xchg
or
hlt
pop
sbb
popf
js
lods
sbb
jmp
mov
iret
popa
shl
lret
leave
fwait
shl
sub
pusha
xchg
aad
cmp
nop
movsb
icebp
dec
std
inc
loope
loop
push
push
mov
xor
int3
mov
mov
sbb
aam
push
push
addr16
dec
stos
ss
mov
mov
dec
loope
mov
mov
in
xchg
popa
mov
lds
dec
popf
stc
dec
fcompl
clc
insb
sahf
subl
nop
iret
xor
add
outsb
mov
xor
dec
cmp
es
mov
or
mov
lods
jp
ss
xchg
test
stos
sbb
add
sahf
out
add
ja
shll
sbb
mov
push
jg
out
scas
pusha
push
mov
push
sti
pop
add
push
mov
and
imull
jae
mov
stos
int3
mov
jb
push
mov
adc
lea
lock
dec
push
inc
and
mov
push
dec
jp
cmp
jp
push
pop
mov
xor
ret
jecxz
lods
js
mov
scas
es
push
stos
insb
push
mov
addb
int3
mov
pop
stc
cmp
dec
scas
cwtl
mov
test
dec
sub
sbb
xor
lret
fildl
pop
push
dec
push
inc
dec
jne
mov
mov
jecxz
in
mov
mov
jmp
gs
shll
jb
popf
jne
push
pop
orl
inc
mov
sbb
pop
pusha
pop
sub
pop
js
dec
adc
shl
push
and
insb
xchg
insb
int
loope
mov
cs
rorl
std
cmpsb
scas
sub
or
sbb
testb
add
mov
xlat
rcr
iret
xlat
sti
mov
jl
les
scas
cmp
mov
je
loop
adc
sub
xchg
sub
loope
mov
mov
mov
lcall
fdivrl
cli
es
mov
sbb
ja
movsl
insl
jno
jbe
mov
xor
mov
push
sti
add
xor
outsl
fimull
call
testb
pop
test
or
cld
dec
hlt
push
sbb
aaa
lcall
inc
pop
cmpsb
into
outsb
push
jge
lcall
and
scas
lcall
push
xchg
xchg
xchg
mov
jo
popf
add
and
mov
roll
imul
mov
mov
pusha
jns
add
out
lock
add
jb
xchg
or
push
dec
imul
outsb
pop
sahf
adc
pop
and
pop
mov
inc
add
mov
aad
mov
mov
jbe
scas
mov
and
lahf
sahf
cmp
clc
mov
pop
jge
ficomps
sub
shlb
hlt
ret
lods
mov
loop
push
and
jecxz
imul
jne
cwtl
leave
aam
and
push
jle
adc
ds
call
pop
aam
data16
add
lahf
repz
fcoms
lods
js
add
sahf
mov
sbb
leave
mov
je
cmp
repnz
jge
stos
inc
xchg
push
pop
ds
jmp
scas
and
pop
je
pop
xchg
cmp
cmpsb
lret
int
popf
push
pop
rcrl
mov
cmp
daa
shlb
outsl
push
dec
sub
lea
cmp
mov
stos
xchg
popf
mov
repnz
js
les
cmp
lahf
sahf
xchg
movsl
loope
shll
loopne
stos
add
mov
pusha
adc
fidivrl
pop
subb
sub
lds
les
add
push
xor
inc
out
js
data16
dec
leave
xor
fucomip
add
in
fists
jne
popf
xor
cmp
dec
sub
cmp
clc
loop
add
adc
out
push
out
xor
cmp
sbb
out
mov
jae
mov
inc
cmp
and
adc
iret
js
adc
fnstcw
jl
xlat
fadds
dec
mov
push
fwait
out
pop
aas
sar
cmp
jecxz
imul
mov
clc
stos
into
pop
sub
shlb
pop
dec
add
push
xor
jge
mov
loope
loop
out
mov
pop
dec
les
mov
call
lcall
mov
pop
in
ficompl
loopne
add
sub
pop
pop
in
push
fiaddl
lock
ja
insl
sbb
jecxz
xchg
sbb
mov
cmp
scas
push
push
add
out
shrl
ret
fiadds
jbe
lea
lock
in
lahf
repz
sub
outsb
pop
jbe
shlb
ja
jmp
jg
fwait
mov
pusha
outsb
cmp
xchg
adc
adc
adc
pop
mov
clc
lahf
rcr
push
mov
das
in
mov
fistpl
pusha
mov
pop
lret
subb
sbb
push
flds
push
mov
loopne
xchg
int
adc
stos
in
adc
mov
cltd
pop
mov
xchg
xchg
adc
into
bound
adc
lcall
mov
push
out
cmp
inc
loope
mov
push
cmpb
mov
movsb
sub
leave
pop
mov
adc
movsl
popf
cmp
ret
cmp
ret
sub
mov
push
hlt
enter
mov
push
push
mov
jb
xor
jo
andl
stc
subl
sahf
in
xchg
adc
sub
out
adc
vcvtsi2ssl
mov
dec
dec
dec
out
mov
xor
es
fcoml
outsb
or
pop
icebp
cltd
fcomp
add
jp
mov
orl
and
inc
outsl
paddusb
add
jle
ja
js
mov
std
add
jecxz
int
outsb
inc
fistps
cmp
xchg
push
das
cmpsl
sub
mul
insl
cmp
xchg
cltd
mov
test
push
pop
push
adc
dec
js
int3
and
andl
mov
clc
push
stc
cld
mov
mov
popa
vmwrite
ret
mov
outsl
adc
mov
sub
xlat
cs
out
out
dec
pushfw
dec
adc
sub
fst
mov
lret
jbe
cltd
cmp
mull
mov
adc
daa
push
mov
sahf
xor
mov
std
fisttpl
jmp
cmp
bound
mov
add
dec
jne
rclb
js
imul
sub
ds
aas
imul
call
stos
addr16
and
mov
inc
jbe
je
clc
sti
and
shll
out
inc
xchg
mov
push
mov
flds
adc
pop
dec
or
ljmp
ss
int3
in
imul
push
fs
mov
cmp
movsb
mov
pusha
and
arpl
test
cmc
loopne
xlat
mov
mov
mov
dec
outsb
mov
notl
or
jne
cmp
or
jp
xchg
in
pop
stos
mov
ljmp
cmp
pop
testl
inc
stos
aad
lahf
inc
lret
push
inc
adc
in
in
mov
loope
push
xor
mov
lret
mov
dec
mov
push
fcmove
or
mov
sub
pop
xchg
ret
push
jp
mov
push
sahf
sbb
sub
mov
arpl
pop
push
test
sub
rol
mov
or
dec
xor
pusha
mov
mov
add
pop
sub
jmp
js
dec
or
xor
mov
dec
iret
jmp
or
inc
or
cmp
pop
xor
notl
pop
add
nop
int3
mov
pop
or
inc
and
mov
adc
mov
test
or
xlat
jno
push
jbe
rcll
je
jmp
lea
mov
or
mov
les
pop
int3
adc
jecxz
popa
das
orb
pop
sbb
test
cmc
pop
pop
pop
rolb
push
pop
iret
in
mov
sub
pop
das
jbe
test
sarb
adc
mov
xor
fcom
scas
sbb
addr16
repz
aam
loop
aaa
loope
loope
subb
sbb
outsl
pop
enter
mov
sub
jge
lea
in
pop
cmc
xor
call
test
mov
xchg
sahf
jg
xchg
fsubs
cltd
lock
mov
loope
xchg
stos
pop
push
and
sbb
ss
push
lods
xchg
cmp
shll
lret
push
add
xchg
mov
xchg
clc
call
cmpl
mov
dec
fisttpll
add
jno
cmp
jns
add
imul
stos
adc
mov
fsubrl
jo
mov
jecxz
je
bound
xor
les
outsb
push
filds
xchg
lods
imul
push
imul
je
lcall
mov
adc
or
cmp
pushf
insb
and
pop
dec
adc
add
test
clc
xor
sub
add
repnz
jo
sbb
and
ja
in
jbe
push
mov
xchg
daa
pop
adc
inc
movl
loope
cli
lret
mov
cmp
xor
out
mov
cmp
incb
dec
sub
xchg
adc
jmp
fwait
cmpsl
adc
mov
mov
ljmp
cmc
pop
push
adc
cld
inc
push
ds
adc
sbb
leave
push
movsl
push
mov
lods
aas
arpl
call
pop
dec
pop
aas
mov
jns
xor
push
test
xor
fsubr
mov
fstpl
push
xor
mov
rcrb
mov
fsubrs
shrb
and
andl
pop
aas
push
mov
stos
mov
push
pop
pusha
xor
add
sti
jnp
icebp
or
rorl
shlb
dec
aam
sbb
lret
imul
xor
mov
pop
mov
dec
pop
insl
inc
xor
test
sti
mov
aam
std
mov
aad
sahf
sbb
jae
stos
out
cvtps2pi
or
jo
sbb
dec
out
iret
fcomi
jno
test
repnz
mov
add
std
push
mov
aas
mov
add
shl
jbe
out
xor
mov
jge
out
push
pop
lret
aaa
xchg
pop
dec
stos
cmp
bound
enter
jmp
adc
adc
or
jp
adc
add
test
push
test
out
adc
sbb
and
mov
addr16
fstp
dec
ljmp
push
jmp
inc
cwtl
scas
sbbb
dec
fs
les
mov
fdivl
sub
divb
fiaddl
sarl
daa
loop
sti
sbb
inc
xchg
stos
test
lcall
pop
sbb
leave
in
stos
repz
shrb
cli
jnp
je
push
and
jmp
mov
pop
cltd
notb
adc
pop
outsl
dec
out
or
or
je
cmp
sbb
xor
fcomip
sar
mov
aam
cli
test
leave
das
mov
push
or
cmp
sti
iret
js
std
adc
cltd
aad
mov
rcrb
clc
jg
mov
movsl
rcrb
jno
outsb
adc
getsec
jl
jg
scas
mov
pushf
fadd
jecxz
mov
sbb
adc
gs
movsl
mov
movsb
in
cltd
mov
cmpsb
jno
aam
sbb
loop
and
inc
and
cltd
xchg
or
ret
jecxz
into
and
and
movsb
sub
mov
cmp
loope
rolb
pop
xchg
aam
xor
bound
and
scas
out
in
lds
lcall
ss
add
movsl
dec
mov
repz
cld
xchg
imul
jmp
in
icebp
pop
inc
cmc
add
jnp
sbb
nop
fistps
mov
pusha
cmp
jb
fs
ljmp
adc
pop
and
pop
and
repz
jge
jp
jge
cmp
adc
xor
add
aam
outsb
xor
ficomps
cli
mov
imul
sbb
into
cmpsb
dec
std
xor
sti
fnsave
inc
sub
mov
cld
push
push
aam
jg
dec
sbb
jecxz
into
dec
jge
je
icebp
xlat
out
movsl
je
popf
add
dec
movsl
sub
repz
cli
xlat
ds
xor
sbb
mov
out
jbe
xchg
dec
mov
push
jno
loope
cmc
adc
sub
fisubrl
mov
movsl
dec
das
xchg
mov
adc
dec
test
pop
addr16
aad
and
sti
cwtl
mov
jecxz
push
test
sub
test
mov
jecxz
pop
js
mov
nop
fbstp
leave
jbe
push
js
cmpsb
pop
pop
lods
pop
xchg
dec
pop
adc
mov
ss
dec
fnstsw
mov
xchg
sbb
ret
adc
addr16
repnz
and
jmp
cmp
inc
sbbb
js
ja
adc
inc
ret
add
push
into
xchg
jle
mov
aaa
inc
sarb
aam
or
loopne
fwait
push
aas
or
adc
stc
test
sbb
test
dec
lds
inc
add
arpl
stos
je
inc
add
test
inc
inc
popf
shll
leave
pop
inc
mov
ss
aas
pop
or
cmpb
mov
xchg
adc
adc
out
pusha
sbb
adc
mov
or
push
pop
add
inc
or
push
fbld
pop
lcall
xchg
stos
sub
dec
repz
lahf
mov
xchg
clc
testb
movsl
jge
cmp
or
inc
inc
movsl
movsb
xor
inc
add
daa
mov
xchg
pop
mov
jl
aad
adc
repz
lret
mov
dec
fists
dec
lret
ficomps
mov
outsb
int3
stos
mov
std
push
pushf
sub
jge,pt
mov
xor
rcll
lret
ffree
fwait
inc
mov
adc
cmc
in
clc
data16
test
mov
ret
and
cs
mov
test
push
push
push
mov
adc
shll
pop
cwtl
adc
cmpsl
lods
insl
into
lahf
dec
push
cmp
addr16
mov
xor
dec
pop
repnz
inc
add
sbb
jmp
jge
mov
mov
dec
cltd
es
es
cmp
push
ljmp
pinsrw
mov
push
inc
aas
es
aas
stc
imul
out
lock
push
inc
repnz
orl
inc
xor
fsubl
sti
sbb
ja
add
pop
inc
test
aad
mov
mov
jge
adc
jp
and
mov
data16
ds
jge
push
imul
test
movsl
and
push
stc
les
aaa
xor
lcall
roll
and
mov
sub
mov
mov
aas
idivb
lret
lahf
pop
mov
lret
leave
cwtl
scas
arpl
sub
out
pushf
push
cwtl
sub
lret
in
fs
pushf
jno
sti
cmp
shrl
adc
inc
push
add
fists
stos
add
push
ljmp
pop
mov
jge
jmp
dec
loopne
add
xchg
jno
jns
in
bound
int3
jge
mov
mov
add
add
cwtl
loopne
xchg
movsb
lods
xor
rcr
leave
adc
cltd
or
rcl
pop
cmp
pop
lock
xor
jb
sbb
flds
or
xchg
test
pop
jle
int
xchg
mov
mov
add
cld
jle
icebp
xor
dec
add
add
lahf
imul
lock
pusha
lods
dec
mov
xorb
inc
out
int
dec
pusha
sub
jg
adc
mov
jp
xchg
mov
sbb
or
pusha
mov
iret
ficoml
shrl
shl
adc
fdivs
pop
add
pop
lods
sbb
sub
ret
nop
push
call
jno
inc
aas
push
xor
sub
imul
and
into
cmp
xchg
fisttpl
movsb
mov
and
xacquire
sub
jge
push
mov
jle
stc
out
testb
jnp
push
inc
mov
dec
mov
int3
xchg
daa
mov
xorb
mov
xor
lret
xchg
inc
icebp
inc
mov
fcompl
or
stos
shrl
mov
xchg
sahf
ja
jbe
jcxz
xchg
mov
pop
repnz
out
push
mov
lods
lea
flds
out
cmp
rcrb
mov
int3
cld
enter
adc
sti
ja
fstps
mov
pop
jae,pt
xchg
loope
hlt
mov
std
ja
clc
adcb
push
es
rcrb
add
sbb
adc
mov
dec
jns
xor
je
sub
mov
xchg
arpl
lcall
adc
pop
jl
fnstsw
test
jmp
movsb
cmp
add
xlat
pop
mov
xchg
pop
and
push
out
pusha
sarb
data16
dec
lods
jl
mov
insl
mov
pop
push
inc
push
or
dec
add
ror
aam
std
lret
mov
xchg
div
mov
and
clc
xor
xchg
mov
sub
push
outsb
adc
mov
jg
pop
xchg
sbb
mov
and
ret
insb
js
push
push
test
imul
fmull
push
test
jmp
pusha
adc
fisubs
push
mov
mov
ficoms
jmp
dec
pusha
aas
fistl
call
mov
incb
jp
and
push
cmp
lahf
mov
pop
xchg
pop
ds
or
mov
dec
cmpb
cmpb
out
and
les
leave
ds
inc
xchg
cmp
arpl
out
sbb
dec
les
repz
cmp
mov
and
dec
jp
jne
les
fisttpll
cs
repz
jne
sti
jbe
hlt
mov
and
jp
push
pop
test
mov
lods
push
gs
imul
add
out
jo
insb
dec
inc
lds
mov
stc
mov
das
cli
pop
lret
popa
pop
lcall
sbbl
ja
int3
mov
leave
icebp
push
push
push
aam
xchg
out
cmp
inc
fcomps
fidivrs
mov
pop
add
out
icebp
jp
jl
pop
lretw
push
and
fs
sahf
xor
push
pop
repnz
jmp
popf
lahf
test
stmxcsr
push
push
mov
leave
mov
dec
jmp
lahf
xchg
stos
outsb
push
outsb
insb
push
mov
lret
pop
loop
mov
mov
mov
xor
push
mov
adc
lahf
loopne
inc
in
mov
pop
ret
and
push
in
xchg
not
repz
xor
fadd
fs
test
enter
cmp
test
cmp
dec
xchg
stos
fdivrl
lock
xor
stos
repz
aaa
jmp
mov
mov
pusha
jo
cli
adc
cmp
fadds
dec
out
adc
std
ret
lods
xchg
pop
aaa
sub
scas
pusha
aaa
jge
hlt
mov
xchg
insb
push
adc
in
jns
xor
jae
push
movsl
sbb
pop
outsl
test
ret
out
inc
inc
gs
int3
jne
inc
cmp
push
sub
sbb
aad
fbld
call
dec
mov
sub
fcmovnb
sbb
xchg
or
xchg
pop
clc
std
cmp
add
cmp
into
jne
out
xchg
xchg
jle
cmpsb
push
mov
cmc
sub
int
mull
cmp
lahf
jno
jmp
mov
insl
jne
mov
sub
or
mov
and
addl
stc
orb
pop
cmp
mov
cmp
xor
add
mov
test
outsb
xor
cltd
mov
sbb
mov
pop
notb
xchg
xor
pop
sub
into
hlt
shl
mov
mov
repnz
mov
arpl
xchg
xor
clc
into
xchg
and
jae
jmp
cmp
mov
in
and
xor
aaa
xor
cmp
clc
lods
lret
xchg
xchg
aad
fnsave
adc
loope
mov
mov
add
loopne
push
xchg
mov
xchg
lods
testl
dec
and
add
fimull
xor
xchg
sbb
lret
stc
sbb
xchg
enter
rorb
push
adcl
mov
rorb
add
sbb
ror
adc
jp
scas
inc
jne
jl
jno
dec
stos
out
jo
sub
mov
dec
fisttpll
pop
jle
push
scas
in
or
mov
ret
or
cmp
ljmp
mov
inc
cmpsl
lods
enter
enter
cmp
jno
roll
pop
shl
sub
push
mov
sbb
pop
inc
dec
inc
add
js
fstpt
push
mov
mov
xchg
cmp
iret
push
push
inc
push
inc
xor
lahf
dec
sub
pop
in
out
ja
sub
in
roll
xlat
test
and
push
jno
jecxz
jmp
popa
mov
inc
mov
mov
sbb
std
xchg
cs
pop
fucomip
icebp
jmp
pushf
mov
mov
cmp
and
out
push
das
mov
ficoms
repz
lds
repz
and
dec
cltd
push
and
nop
jp
xchg
bound
int
sbb
mov
sarb
pop
push
mov
imul
lsl
mov
sub
mov
push
sub
jo
sub
lds
xchg
call
lds
sub
xchg
or
sbb
mov
out
imul
cmp
xor
insb
push
add
cmp
fildll
ljmp
dec
lret
or
in
int
adc
and
push
xlat
pop
imul
mov
sbb
repnz
movsb
sub
roll
int3
or
stos
repz
xor
fistps
and
push
jb
mov
out
inc
and
push
inc
lods
adc
enter
push
repnz
or
ja
jecxz
pusha
subb
sar
outsl
and
neg
ss
pop
dec
mov
fldl2t
insl
xor
adc
push
inc
adc
jo
cli
sbb
inc
cmp
leavew
sub
sub
sti
sbbl
mov
pop
in
inc
into
and
stc
jg
ja
lahf
and
mov
pusha
mov
cmp
testb
enter
jns
mov
inc
cltd
cmpsb
sti
xchg
sub
das
xchg
lret
cli
xchg
sub
adc
and
fistpl
sti
dec
ds
cmp
std
push
cmc
add
fs
pop
test
xchg
mov
pusha
movsb
adc
in
xor
nop
mov
inc
ret
sub
popf
int3
call
imul
dec
fmuls
cmp
lock
xor
cmpsl
add
and
mov
scas
mov
js
test
mov
cmpsl
mov
out
or
cwtl
lock
dec
out
jb
push
mov
outsb
sub
adc
adc
mov
loopne
bound
adc
and
sbb
and
cmpb
jns
jle
dec
rclb
sbb
std
sahf
jo
adc
stc
and
mov
es
jns
jbe
pop
xchg
push
xor
pop
dec
fsts
lods
push
push
mov
adc
and
jo
dec
in
jge
scas
fcompl
outsl
jo
ja
movsb
call
and
out
ret
sbb
add
sub
popa
pop
mov
sub
shrb
pop
or
stos
xchg
pop
lods
loopne
add
lods
cmp
dec
gs
jo
xor
rclb
cmp
sbb
dec
add
mulps
ds
dec
hlt
adc
mov
add
push
and
mov
iret
fs
mov
cmp
loope
pop
push
popf
xor
sbb
repnz
mov
pop
jmp
jge
jle
stos
hlt
stos
push
imul
pop
cwtl
push
xchg
gs
popa
jg
in
nop
icebp
adcl
ljmp
dec
pusha
js
jo
mov
jmp
stc
mov
dec
jl
sbb
cmp
push
fs
push
push
mov
sbb
idivl
mov
arpl
mov
cmp
iret
scas
cmpl
mov
or
loope
pop
inc
or
or
das
pop
stc
jnp
shll
jbe
dec
jbe
fisubrl
cli
clc
ret
test
pop
repnz
cmpsl
jb
jle
adc
sbb
test
sub
in
mov
inc
lea
push
enter
push
out
pop
data16
imul
lds
xchg
jl
mov
mov
icebp
xchg
xor
xchg
and
arpl
pushl
mov
jmp
shrb
xchg
shll
cmp
std
testl
out
hlt
or
lods
mov
mov
jo
dec
cmp
sbb
jae
adc
les
pop
jle
repz
aas
fisubl
add
ret
mov
shlb
pop
cmpsb
stc
push
imul
adc
mov
dec
and
rcrb
stos
jge
lcall
dec
bound
sahf
pop
mov
xor
lret
mov
pop
stos
test
out
mov
data16
inc
dec
push
shll
pop
sbb
sbb
insb
push
ret
mov
cltd
clc
inc
inc
jnp
push
jnp
data16
out
fidivrs
arpl
add
add
mov
dec
test
cmp
mov
adc
xchg
aas
xor
adc
mov
pop
inc
sub
dec
inc
ret
jp
aam
fstl
fiadds
test
mov
stc
arpl
test
aaa
stos
xchg
add
repz
mov
lods
ja
scas
aad
icebp
in
and
sbbb
sbb
ljmp
inc
sub
test
push
xchg
bound
mov
dec
std
jle
stos
pop
popf
out
sti
pop
loope
loopne
and
test
adc
jecxz
dec
mov
iret
sbb
das
adc
lock
cmp
cld
cltd
pop
call
inc
ret
stos
inc
adc
xchg
into
je
or
jbe
scas
jb
pop
repz
cmpsb
das
pop
popf
xor
in
inc
fidivs
adc
sar
adc
daa
daa
into
imul
cmp
jg
jl
inc
xor
cmpsb
les
pop
sbb
orb
xor
inc
cmpsb
xor
adc
addb
in
or
jl
mov
push
sar
xor
and
jae
inc
mov
push
pop
sub
fadds
lods
inc
adc
xchg
movsb
and
fiaddl
decl
or
ja
cmp
push
sarb
hlt
mov
mov
push
fadds
or
inc
push
sbb
pop
dec
imul
or
movsl
arpl
and
in
je
jbe
xchg
mov
pop
add
insb
cmpsb
fdivrl
or
xchg
sbbl
cmpsl
fwait
inc
insb
data16
dec
sub
pop
fwait
pop
sbb
imul
and
pop
add
insl
add
popf
push
les
pop
es
inc
or
stos
and
aaa
shrb
sbb
xchg
jg
imul
and
loope
pop
push
cwtl
stc
sub
shrl
dec
xor
fmuls
or
sbb
pop
sbbl
mov
shlb
movntps
lret
pop
push
cwtl
mov
je
push
mov
push
sbb
mov
out
sbb
icebp
test
fisubrs
adc
cmp
add
mov
mov
push
imul
fisubrs
aaa
dec
pusha
mov
cmpsb
xorb
adc
insb
mov
sub
dec
js
rcrb
test
das
push
push
add
lahf
stos
sub
into
cmp
add
pop
mov
enter
and
cmp
out
scas
jne
pop
leave
mov
push
stos
mov
jmp
push
or
xchg
xlat
dec
mov
lock
or
rcr
mov
pop
mov
cli
test
adc
adc
pop
cwtl
dec
mov
mov
ret
cmp
inc
repnz
xor
test
clc
xchg
aaa
ret
imul
mov
mov
lret
or
push
and
mov
push
les
or
jnp
sub
lahf
inc
lahf
scas
jno
fwait
outsl
enter
push
pop
pop
pop
fcompp
mov
jno
sub
xor
insl
cmp
and
jmp
insb
movsb
xor
and
or
jb
inc
dec
iret
sub
ss
jp
inc
push
fdivrp
push
dec
mov
shl
dec
loopne
push
insl
imul
stc
bound
bound
arpl
mov
cmpb
out
push
jcxz
adc
pushf
jo
je
cmp
test
pop
mov
insl
or
dec
lcall
sbb
jne
sub
sahf
out
popf
mulb
adc
sub
test
sub
out
movsb
or
in
mov
stos
rcll
dec
rorl
jnp
dec
xor
jg
cmpsl
sub
lcall
ja
jle
loopne
cmp
and
pop
xor
pop
nop
mov
jg
xchg
cmc
add
xor
mov
pop
and
mov
jb
out
call
sti
push
jbe
and
sbb
arpl
jle
sti
pop
ja
or
mov
pop
popa
fdiv
dec
dec
mov
cwtl
imul
mov
xlat
jle
xor
cmpsl
jae
fnstcw
js
push
pusha
sbb
pop
out
push
fcoms
lods
ss
enter
dec
int3
xor
fisubl
pop
cld
jns
inc
jp
stos
jb
push
je
xchg
mov
sarl
jae
and
scas
fsubs
push
sti
mov
push
ja
xor
das
sahf
ljmp
adc
push
jno
stc
mov
ret
fdivrl
jnp
sbb
xchg
or
shlb
insb
rorb
pop
jge,pt
cs
jne
cmp
xchg
popa
and
dec
lret
inc
push
pop
gs
int3
adc
stos
sbb
mov
hlt
xor
xor
cmp
shll
mov
push
rcl
xor
push
pop
jne
sbb
and
push
push
out
sbb
out
sarl
lods
mov
cmp
outsb
les
sub
fildl
add
mov
xorb
mov
xor
xlat
mov
and
rolb
gs
js
pop
test
stc
cmp
push
mov
cmp
es
xchg
loope
inc
cwtl
lcall
mov
repnz
cmc
xchg
cmp
pop
inc
dec
and
mov
cmp
test
dec
jnp
xor
fnstsw
mov
dec
jl
push
sbb
lds
inc
sub
cmpsl
cli
add
js
je
and
lock
fcoml
pop
jp
jno
mov
lret
jno
or
cmp
notb
int3
jo
iret
sub
push
xchg
mov
repz
dec
push
dec
jne
sbbl
mov
ds
jbe
insb
pop
aam
test
sti
divl
jne
mov
stos
pop
int
dec
cmp
out
jmp
sub
jp
xchg
mov
mov
insl
test
cs
das
test
add
sub
test
push
push
clc
repnz
bound
in
bound
lods
cmp
fidivrl
pop
mov
or
aas
and
sbb
dec
xchg
dec
addr16
rclb
sar
out
push
out
jne
push
push
sbb
push
push
sub
addb
xchg
pop
lds
into
popa
dec
sub
call
lods
pop
jle
and
stc
mov
mov
cmp
pop
jl
jae
pop
mov
dec
xchg
adc
jmp
aad
scas
and
sti
rcrb
jbe
or
xor
lds
adc
sbb
mov
pop
xchg
and
mov
fistps
mov
jnp
ret
dec
adc
ljmp
mov
or
mov
xchg
push
dec
inc
push
pop
mov
sub
or
sub
or
shrb
cmp
loop
pop
mov
je
cmpsl
scas
int3
cmp
scas
xchg
mov
xchg
lods
xchg
movsb
cli
sbb
push
icebp
pop
inc
lods
push
inc
mov
in
and
dec
nop
dec
mov
or
sbb
pop
es
mov
and
cs
imul
pop
hlt
adc
insl
sub
mov
cmp
shlb
mov
lods
insl
mov
lds
cwtl
xor
test
loopne
xor
in
pop
hlt
and
xor
fstl
jl
or
dec
repz
xor
xchg
sub
cmp
in
inc
lahf
call
and
mov
jae
mov
fisubs
out
aas
and
sub
xor
orb
jmp
fildll
sbb
dec
adc
sub
into
mov
mov
popa
mov
cmp
add
sub
jg
addl
pop
sbb
push
or
ret
into
cli
xchg
xchg
add
jle
cmp
mov
pop
inc
insb
pop
add
mov
push
repz
inc
push
mov
loopne
fs
add
stos
lods
push
idivb
pop
cmp
cmp
push
into
inc
xchg
push
lcall
push
repz
xlat
jns
dec
imulb
fmull
pop
cmp
ficompl
popa
ret
loope
jg
push
pop
adc
xchg
cmp
jns
movsb
dec
push
xchg
adc
mov
pushl
loopne
clc
lods
lcall
add
lods
fstps
xchg
mov
jo
rol
outsl
int
or
loopne
sub
pop
add
mov
hlt
cmc
rorl
out
push
mov
pop
fstpl
and
jno
cwtl
in
jmp
rolb
add
aad
pushf
pop
jge
fmuls
mov
push
sti
aad
jmp
and
pusha
xchg
push
jno
loop
cmp
jmp
push
pop
shlb
xor
ret
or
mov
sar
xor
ret
aad
andl
jp
mov
pop
je
popf
test
ret
and
xlat
mov
xor
push
js
adc
loop
push
icebp
push
int3
adc
lret
lods
cmp
push
xor
xchg
addr16
shll
movb
rorl
mov
inc
jl
xchg
add
sbb
add
mov
insl
stos
loopne
mov
imulb
lds
bound
inc
xor
xor
sub
arpl
pop
inc
sbb
sbb
or
and
push
imul
ja
lods
pop
or
shll
add
dec
jb
test
ret
and
jmp
sbb
adc
push
adc
out
repnz
jp
sbb
or
add
fnstenv
gs
adcl
jp
jne
hlt
jo
and
jno
cmp
jne
imul
sub
dec
aam
sub
mov
out
lret
push
scas
cmp
mov
mov
jae
sahf
xor
cmpsb
push
jb
add
stos
pop
add
jmp
cmp
jb
mov
push
or
push
jmp
int3
cmpsb
or
mov
int3
scas
cmpsl
mov
mov
popf
ljmp
pop
push
mov
pop
sbb
fcmovnbe
dec
pusha
push
jg
xchg
inc
push
cmp
dec
xor
add
cmc
inc
popa
cs
shl
mov
lods
shlb
add
test
out
jmp
xchg
xchg
ss
jns
aas
iret
aaa
lret
loopne
xchg
nop
push
cmp
dec
or
sub
jge
ljmp
mov
adc
stos
mov
into
or
push
fistpl
ja
movsb
imul
sub
and
ljmp
lret
pushf
aas
fiaddl
xchg
rolb
shll
outsl
inc
mov
ja
inc
jmp
daa
and
lcall
int3
inc
fwait
or
icebp
push
jbe
lea
pop
icebp
mov
je
mov
cmpsb
inc
ds
and
shll
or
push
and
fwait
ret
cs
call
or
dec
and
pop
push
addr16
add
jns
cmp
cmp
sbb
in
in
jo
pop
or
in
mov
xchg
dec
inc
orl
mov
pop
jecxz
add
pusha
xchg
and
dec
movsl
push
rcrl
dec
inc
cmpsl
stos
ss
sti
rorl
rorl
mov
hlt
lea
inc
clc
pop
inc
adc
push
mov
xor
xlat
rcl
stos
cmp
int
mov
lods
dec
sbb
cmpsb
loop
lcall
in
loop
test
and
loopne
and
inc
pop
or
push
jl
push
cmp
add
inc
sbb
xchg
dec
cli
pop
add
stc
fwait
add
pushf
packuswb
lcall
movsl
cmc
pop
pmuludq
push
hlt
and
pop
ret
lods
mov
adc
and
push
inc
jmp
fnstenv
out
pop
icebp
adc
jecxz
out
xchg
mov
sbbb
sbb
enter
repz
shlb
jne
or
orl
arpl
jmp
xor
mov
loopne
int
jno
or
rcll
and
and
add
push
xor
sbb
xor
psubusw
shrl
aas
add
mov
mov
dec
stos
xor
popa
adcb
xchg
mov
not
inc
cmpb
rcrb
psubsw
inc
mov
mov
int3
ljmp
pop
pushf
xor
std
add
fistps
call
stos
dec
push
test
insl
xchg
pop
sbb
repz
lret
mov
pop
mov
push
add
xor
sahf
testb
pop
lods
rol
shrb
xor
push
mov
loopne
cmc
pusha
mov
cbtw
das
call
push
or
push
movsl
lods
push
cli
cltd
mov
pop
cltd
push
xor
je
pop
push
ret
and
jp
int
insl
cmpsb
mov
in
stc
xor
xor
push
das
dec
rolb
or
rep
mov
jnp
lods
mov
lock
and
in
lods
xchg
cli
scas
mov
jnp
or
data16
sbb
pop
add
dec
mov
jnp
push
rcrb
sub
jbe
dec
movsl
insb
cltd
jne
inc
dec
enter
ret
lcall
add
adc
int3
repnz
adc
cmp
dec
push
pop
into
sub
fs
lret
iret
je
xor
in
pushf
inc
jge
bound
imul
je
addb
cmpsl
cmp
aas
nop
mov
and
dec
sti
cmp
stos
in
jnp
jle
bound
push
inc
sbb
xor
push
arpl
mov
stc
add
lods
push
lods
shll
jg
inc
pop
xor
add
push
shl
mov
xor
ljmp
rorb
push
jmp
loop
cld
jmp
daa
popf
push
loopne
inc
dec
and
fld
sti
scas
cmp
xchg
inc
popa
sti
sbb
mov
jb
and
adc
dec
and
mov
dec
xlat
mov
incb
add
sbb
push
fdivl
bound
add
test
mov
jnp
in
or
or
lahf
xchg
ss
mov
lahf
xchg
sbb
mov
rcrl
stos
data16
push
sbb
cmp
movsb
ret
in
xor
nop
cmp
out
jb
or
inc
mov
or
fdiv
test
cli
repz
dec
sub
in
sbb
jne
pop
jmp
shr
aaa
movsl
xchg
flds
movsl
push
fs
xor
mov
and
int
push
jb
dec
movsl
adc
lret
mov
jb
repz
mov
fwait
mov
sahf
xchg
repnz
jg
push
ret
popa
or
addr16
mov
stc
es
rorb
push
adc
and
icebp
pushf
cmp
mov
or
daa
lahf
xor
movsl
mov
pop
mov
fldt
dec
jg
jne
sbb
idiv
mov
pop
loopne
aaa
test
orl
jmp
jbe
cmc
imul
ja
sbb
add
in
shll
shrl
sub
adc
aas
sub
inc
and
pop
ret
fisttps
jl
pushf
ret
xchg
es
inc
add
add
jge
lret
sahf
scas
insl
scas
sub
sub
mov
cmc
cwtl
ja
inc
sbb
pop
mov
pop
push
xchg
scas
fs
popa
sub
mov
cld
and
dec
data16
sub
pop
jno
in
repnz
inc
cli
stos
push
push
pop
sahf
push
sbb
mov
aam
mov
std
inc
mov
mov
inc
cmpxchg8b
fwait
mov
rcll
pop
arpl
cmpsb
imull
pushf
inc
addr16
mov
cli
loop
push
mov
jecxz
sub
or
dec
addr16
jle
mov
ror
aad
decb
cmp
nop
pop
fiadds
testl
xchg
and
repz
clc
jo
sarb
fcoml
pop
pop
shl
push
xor
sub
xchg
or
xchg
xchg
shrb
pop
arpl
std
hlt
cmc
fs
aas
mov
mov
fdivs
xorb
lret
pop
insb
mov
dec
out
xor
pop
dec
test
call
cmpsb
sub
ljmp
in
adc
pop
gs
dec
pop
ljmp
inc
fwait
cmp
outsb
ret
inc
or
mov
pop
mov
cmp
mov
push
inc
xor
pop
xor
inc
adc
fcmove
push
out
test
mov
imul
xor
push
xor
test
daa
scas
dec
lods
pop
jle
xchg
push
in
xor
bound
cld
pop
sbb
or
or
pop
mov
lods
push
pop
movsb
subl
repz
movsl
dec
inc
adc
push
mov
mov
jnp
icebp
cmc
dec
mov
fstpl
push
popa
movsb
insl
and
in
mov
add
push
fs
gs
push
daa
xor
fists
movsl
lret
push
pop
jns
mov
fcoml
call
jne
sbb
aam
fs
outsb
pop
and
dec
fcompl
fnstsw
xor
loope
pushf
aam
push
movups
pop
inc
pop
inc
mov
mov
insl
xchg
push
jo
repz
pop
test
pop
or
jbe
addr16
loop
sbb
add
divl
push
movl
inc
mov
lret
mov
sahf
mov
pusha
movsl
mov
and
sti
adc
push
rep
mov
dec
ret
dec
mov
gs
xlat
pushf
xchg
sahf
or
inc
movsb
adc
divl
int
inc
push
gs
sbb
out
dec
xor
shll
aas
dec
push
fsubrs
sub
std
push
or
dec
sub
cmp
je
out
push
movsb
in
addr16
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
lock
pop
mov
outsl
call
mov
out
push
push
dec
dec
push
sub
pop
add
dec
push
cmp
aaa
std
or
das
inc
jle
add
sti
sub
mov
jp
adc
ret
adc
mov
mov
jle
test
push
pop
popf
and
out
or
cwtl
xor
add
std
mov
into
imul
mov
or
call
adc
test
xor
push
mov
cwtl
and
aaa
enter
cmpb
mov
in
mov
lea
mov
mov
xchg
int
stc
dec
shll
inc
xchg
xchg
fcompl
mov
frstor
sti
ret
fnsave
mov
inc
xlat
xchg
je
idiv
stc
movsb
imul
jo
aam
mov
ds
mov
jmp
sbb
in
push
aas
pushf
je
cld
or
icebp
pop
cmp
loope
sbb
push
sbb
jle
xor
xchg
push
clc
mov
je
jnp
mov
adc
mov
sub
fucomp
divb
sahf
jae
movl
push
mov
jb
or
pop
and
inc
ret
push
out
shlb
push
loopne
faddl
lret
ss
popf
repnz
out
dec
add
aam
mov
inc
or
dec
mov
inc
cli
sub
arpl
xchg
xchg
mov
sbb
mov
in
push
sbbl
or
fists
push
shr
mov
stos
fcomps
bound
dec
jnp
jg
inc
popa
in
xlat
sub
jo
pop
mov
xlat
cmp
ret
xchg
mov
xor
mov
add
jmp
xchg
xchg
xor
cmp
cmp
adc
add
in
ds
mov
in
in
mov
mov
in
mov
jecxz
and
sub
adc
push
sbb
out
hlt
jecxz
pop
mov
stos
repz
sbb
sub
aad
mov
addr16
adc
push
sub
mov
push
sbb
ss
cmp
xchg
lock
mov
cltd
cltd
and
mov
xchg
or
lods
fdivrl
nop
mov
lret
outsl
dec
jg
aam
mov
outsl
push
pop
test
repz
mov
outsb
aaa
mov
sub
nop
xchg
stc
and
cmp
jbe
insl
adc
sub
xor
call
sar
jnp
cmp
repz
arpl
mov
fsts
adc
mov
xlat
mov
mov
decb
js
sti
fcoml
mov
mov
pop
fldl
sub
sub
es
or
jbe
dec
sti
pushf
enter
pop
add
lcall
jle
arpl
xor
cs
sbb
mov
mov
out
dec
stos
adc
lret
loop
dec
sub
xchg
scas
stc
and
push
cmp
cmp
xor
push
mov
pop
dec
pop
lods
mov
dec
mov
and
dec
or
and
pushf
mov
mov
jecxz
cmp
cmp
imul
push
lock
adc
dec
fdivs
inc
push
lcall
enter
test
es
enter
clc
dec
mov
xchg
mov
cmp
mov
lcall
inc
and
cmp
cmp
or
imul
push
lret
pop
mov
cmc
or
xor
push
mov
sbb
and
or
stc
mov
sub
or
xlat
xchg
scas
sub
mov
push
sahf
aad
pop
outsl
cld
cmpsb
mov
push
std
cwtl
sti
sahf
dec
push
lods
je
stos
lods
and
xchg
adc
adc
popa
lahf
dec
ja
pop
add
idiv
pop
add
add
add
xchg
add
inc
xchg
popa
add
mov
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
mov
add
mov
