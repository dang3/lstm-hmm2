add
add
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
adc
add
sub
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
inc
add
pop
cmp
decl
push
adc
mov
add
mov
mov
add
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
mov
inc
add
cmp
jb
mov
mov
scas
lahf
adc
mov
and
mov
mov
add
jmp
inc
add
add
pop
mov
jb
mov
cmp
movsl
and
push
and
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
jge
inc
add
add
pusha
cmp
mov
mov
shl
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
movsl
incb
mov
mov
addl
adc
add
mov
add
cmp
pop
icebp
inc
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
and
inc
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
insl
sbb
add
inc
dec
jo
inc
push
sbb
jne
jmp
movzbl
lea
cmp
jb
mov
xchg
repnz
add
xchg
xor
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
adc
add
add
test
sbb
dec
and
push
or
jbe
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
push
cld
inc
add
mov
mov
mov
mov
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
lds
inc
add
sbb
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
xor
mov
xor
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
mov
inc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
jb
inc
add
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
jb
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
cmp
inc
add
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
or
inc
add
adc
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
adc
inc
add
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
pop
or
add
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
popa
add
test
adc
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
or
je
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
sub
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
or
aam
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
mov
inc
add
sbb
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
fstpt
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
add
in
add
out
roll
xchg
mov
add
test
lds
fildl
add
rolb
stos
shll
add
movsl
mov
xchg
add
add
lcall
pop
add
add
add
add
pop
mov
test
lcall
add
jmp
xchg
add
add
jbe
test
add
add
in
add
push
push
push
push
call
pop
push
xchg
testl
pop
push
pop
push
nop
cld
add
arpl
popa
out
add
add
pop
pop
add
mov
ja
add
push
add
nop
in
jno
add
push
pop
test
pop
outsl
add
jle
hlt
add
loopne
add
enter
clc
add
pop
movl
push
push
push
push
push
push
push
push
push
push
call
aam
add
add
cmp
add
add
out
lret
lcall
add
movsb
pushf
loope
pop
add
insb
add
add
xchg
pop
add
shlb
fcmovnu
stc
add
add
lods
add
pop
data16
xchg
add
jnp
in
test
fs
jmp
addr16
add
add
mov
sarl
mov
add
xlat
call
mov
lea
pop
popl
push
push
push
push
lea
push
lea
push
push
call
js
add
add
addl
add
add
stc
add
imul
jl
cld
addl
add
add
add
loope
lea
push
add
fucomip
add
nop
mov
out
xchg
add
mov
loopne
into
test
add
int3
mov
test
mov
add
add
add
ret
fiadds
add
add
add
push
mov
mov
popf
mov
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
call
push
add
fldl
add
in
insb
push
add
ljmp
imul
out
pop
jecxz
push
cbtw
les
add
loop
add
add
loopne
rolb
pushf
xchg
lahf
nop
je
add
add
add
call
iret
add
out
add
mov
add
add
iret
mov
call
fmull
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
pusha
mov
sahf
pop
insb
add
roll
pop
add
shrb
cltd
lock
aad
lcall
insb
add
out
add
add
jbe
fldt
pop
add
mov
add
add
mov
cmpsb
xchg
add
mov
mov
add
push
add
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
popa
pop
pop
add
jne
cli
add
jo
add
add
add
pop
add
call
leave
out
cmpsl
add
add
add
mov
add
jp
add
test
pushf
call
add
xchg
jbe
testb
repnz
mov
gs
jno
add
je
add
fisttpl
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
aad
add
add
enter
add
add
fildl
jecxz
nop
addr16
in
mov
data16
loop
pop
add
push
pop
std
jae
mov
cmc
in
add
stos
push
shr
add
hlt
fdivp
add
popf
fcomi
add
addr16
mov
pushf
xchg
jmp
add
jns
fcmovu
xchg
xchg
add
in
jno
aam
bound
pop
call
push
call
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
clc
int3
fildl
ja
push
xchg
mov
outsl
add
popa
add
add
lea
add
push
add
add
in
in
add
xchg
add
mov
out
in
add
in
add
add
xchg
add
add
subb
test
lods
add
lock
mov
add
add
sti
shl
jge
xchg
into
add
pop
add
fst
lods
mov
add
pop
jmp
ret
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
jnp
cmpsb
imul
pop
out
add
js
add
lret
add
mov
add
add
imul
push
add
add
add
jecxz
add
testl
pop
sahf
add
test
add
add
add
stos
mov
push
in
add
mov
lea
pop
mov
push
lea
push
push
call
add
mov
sahf
add
xchg
lret
lods
add
iret
mov
into
add
in
add
push
fwait
out
add
pusha
mov
adc
xchg
add
add
add
pop
imull
mov
add
add
add
enter
add
push
add
mov
je
jb
lods
out
add
add
or
mov
add
add
push
push
push
push
push
call
lcall
jne
add
mov
addb
fcompl
add
add
jb
mov
mov
add
add
add
cli
add
js
lret
lods
jne
add
fucomi
mov
out
fwait
movsb
mov
mov
fs
add
add
fwait
jnp
add
add
add
loop
jns
imul
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
lahf
add
iret
scas
cld
addb
pushf
add
sarb
mov
push
stc
add
xchg
xchg
addb
movsl
pop
cwtl
icebp
lods
stos
aam
add
outsl
pop
mov
mov
mov
add
enter
add
add
add
scas
sbb
add
addl
popa
add
add
lret
add
add
test
mov
lea
pop
mov
push
push
lea
push
push
push
call
jae
add
sub
add
fidivs
add
mov
xchg
lods
add
ljmp
mov
int3
sarl
add
sarb
lods
add
add
push
add
out
add
rcrb
negl
cld
push
mov
fisubrl
mov
mov
mov
rolb
ret
addr16
add
pop
add
data16
mov
bound
pop
xor
push
lea
push
push
lea
push
push
call
shll
xchg
add
add
add
sti
cmpsl
add
mov
lret
pop
xchg
add
add
add
mov
add
cmc
add
add
add
orl
add
int3
pop
add
xchg
add
xchg
add
movsb
lret
rorb
pop
add
push
push
call
add
add
test
mov
add
push
push
add
sarb
mov
mov
add
jmp
ljmp
popa
pop
add
add
xchg
xchg
add
js
add
ljmp
add
pop
std
shlb
mov
lret
nop
mov
add
xchg
fldl
jb
les
inc
in
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
je
add
push
mov
add
rolb
xchg
add
mov
jmp
add
gs
lods
add
push
jl
lods
lds
cld
push
mov
mov
mov
je
add
add
add
mov
test
xchg
push
test
push
mov
jmp
push
add
pop
call
mov
push
push
push
call
ficomps
add
add
add
jp
jne
add
add
pop
int3
mov
nop
mov
add
add
aam
js
jmp
movsb
add
xchg
add
mov
stos
add
jge
add
loopne
shll
data16
into
add
pop
push
clc
add
add
lock
mov
pop
pop
pop
push
mov
stc
jbe
sbb
fcmove
int
add
out
add
mov
jns
add
pop
xor
push
push
call
add
addr16
cli
jmp
add
imul
pop
pop
fistpl
mov
add
add
add
mov
sti
scas
xlat
test
add
std
add
jmp
pop
ficoml
sahf
clc
add
add
cltd
mov
call
popl
add
add
stos
add
mov
lea
pop
add
push
push
lea
push
and
add
rol
dec
xor
sub
sub
pop
add
lea
inc
pop
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
jle
jno
in
xchg
add
movsb
sti
xchg
lret
jl
int3
mov
gs
add
arpl
push
sahf
add
add
pop
xchg
into
mov
add
test
leave
lea
add
pushf
arpl
add
add
rolb
roll
add
add
xchg
les
jmp
pop
addr16
mov
add
lds
jnp
test
mov
lea
pop
pushl
push
push
push
push
lea
push
call
add
add
addb
add
push
in
fildl
add
xchg
add
mov
add
je
lcall
add
iret
mov
add
mulb
add
add
popf
mov
insb
cltd
cltd
movsb
xchg
add
add
scas
cld
add
mov
add
add
add
jb
add
add
in
add
pop
add
add
shr
mov
loopne
fwait
cwtl
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
mov
mov
icebp
add
imulb
out
add
add
add
add
add
mov
add
jmp
addb
cld
add
xchg
push
add
data16
add
lods
movsl
loop
jmp
add
into
add
pop
test
fstpl
mov
mov
icebp
jp
mov
mov
add
pop
mov
movl
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
cwtl
xchg
xchg
add
incb
fmul
stc
add
xchg
mov
push
mov
add
add
lcall
add
mov
flds
fsubs
jge
repnz
insb
add
add
into
add
add
int3
repnz
add
icebp
andb
repnz
add
add
pop
lea
push
push
push
push
lea
push
lea
push
call
fildl
mov
ja
add
mov
rclb
mov
int
mov
mov
add
add
addb
push
pop
jnp
std
call
add
add
imul
xchg
shl
add
add
hlt
lret
mov
add
push
je
les
add
mov
fldl
add
jo
add
mov
sti
add
loope
add
mov
lea
pop
pushl
pushl
call
push
push
push
call
jb
add
add
in
add
add
add
xlat
out
add
add
lods
mov
jecxz
pop
push
pop
lods
mov
add
add
add
sahf
pop
addr16
out
add
add
loope
test
add
xchg
enter
add
add
orl
add
add
cld
push
jne
aam
bound
pushl
pushl
push
push
push
lea
push
lea
push
call
out
js
add
shll
outsl
add
xchg
pop
neg
xchg
push
add
fcomps
pop
push
pop
fisubs
scas
cltd
out
mov
leave
mov
push
in
xlat
fs
je
add
mov
add
loope
mov
mov
add
mov
cmpsb
add
add
lods
test
cld
pop
gs
lods
movl
xchg
mov
add
add
pop
call
push
push
sub
sub
push
xor
add
not
lea
sub
pop
shr
pop
push
lea
push
push
push
call
add
add
xchg
mov
jmp
add
int
lahf
add
leave
add
nop
in
add
fisttps
add
add
jbe
sahf
ljmp
scas
add
jne
mov
add
mov
arpl
iret
mov
lret
add
add
aad
xchg
lcall
add
add
add
pop
pushl
call
push
push
lea
push
call
out
add
addb
add
mov
roll
fsubrl
xchg
lods
std
test
push
test
shrl
cld
stos
bound
add
xchg
test
mov
rcll
add
jmp
mov
jle
cmc
add
add
add
jo
mov
mov
ja
mov
in
mov
jno
mov
mov
lea
pop
push
push
push
ror
add
add
shl
push
or
inc
add
not
sub
sub
xor
sub
pop
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
int
add
loop
jmp
add
jecxz
ljmp
cmc
movb
add
jo
imul
test
add
outsl
mov
add
jge
push
add
add
jl
add
add
add
jecxz
add
fwait
add
add
arpl
imul
lods
cwtl
pop
pop
loop
cltd
add
ljmp
sti
add
pop
push
push
call
push
push
push
lea
push
push
push
lea
push
push
call
jecxz
test
mov
je
add
add
add
pop
pop
add
xchg
add
add
mov
in
popa
xchg
add
mov
ljmp
add
mov
lods
mov
mov
xchg
add
sar
repnz
mov
imul
add
fstpt
adcl
out
faddl
fmull
clc
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
push
out
add
jl
mov
out
clc
in
test
jb
cmpsb
fnstenv
lock
out
mov
add
addl
mov
add
aam
in
data16
jno
out
aad
add
shll
add
out
mov
add
cmpsb
add
xchg
add
gs
popf
push
into
std
mov
lea
pop
mov
push
push
call
mov
and
mov
enter
push
jno
mov
add
jl
fs
out
fildl
popa
out
push
add
insb
mov
test
arpl
clc
add
mov
xchg
jno
push
jmp
add
fcmovnu
add
arpl
cmc
add
push
jns
pop
add
jo
push
cmc
in
flds
popa
xchg
mov
mov
add
pop
add
add
add
push
push
push
call
test
mov
rcrl
mov
add
lret
add
add
stos
mov
aam
jnp
pusha
scas
fcompl
xchg
jns
add
add
pop
stos
mov
add
add
aad
jp
popf
mov
div
add
mov
add
insb
je
add
mov
scas
add
repnz
pop
mov
xor
push
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
shl
iret
clc
jno
mov
add
insb
add
jge
mov
test
fiaddl
add
add
add
jno
in
add
out
add
leave
jnp
add
jbe
jb
fisubrs
lcall
pop
add
add
add
add
icebp
add
lahf
push
add
hlt
lea
pop
add
push
mov
push
push
push
push
push
lea
push
push
push
push
push
call
push
push
lea
roll
filds
add
int3
out
add
jp
add
mov
test
add
add
std
outsl
lods
mov
cwtl
bound
push
testb
mov
add
incb
add
mov
add
add
lds
add
bound
xlat
popa
mov
imul
rcll
add
add
sti
in
imul
xchg
mov
lea
pop
xor
push
push
lea
push
call
ret
lds
jmp
int3
add
outsl
add
lret
movsl
mov
mov
mov
leave
test
add
add
int3
add
jne
add
add
xchg
push
add
fdivr
add
addr16
shr
pushf
lods
add
jl
jp
loop
push
add
add
in
add
add
pop
loopne
push
popf
mov
lea
pop
add
push
push
call
add
cld
add
add
add
jge
sti
std
cmc
add
cltd
cmpsb
out
add
pop
in
mov
add
movsl
in
roll
test
nop
mov
add
add
hlt
insb
add
add
pop
mov
add
add
add
add
xchg
stos
stos
add
mov
call
push
bound
fstl
jo
mov
dec
cmpsb
test
mov
lea
pop
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
sahf
jl
test
add
sar
int
cld
jae
xchg
jnp
idivl
fwait
xchg
add
add
mov
mov
add
add
add
xchg
mov
add
jbe
cmpsb
sahf
push
js
mov
add
add
rcr
jmp
nop
in
add
in
leave
fistpl
loope
add
add
add
add
add
pop
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lock
movsl
faddl
roll
imul
mov
add
xchg
add
add
aam
roll
test
mov
movsl
mov
pop
add
fnop
add
loopne
testl
lock
add
lea
stos
add
loope
add
add
lea
pop
xor
push
push
push
lea
push
lea
push
push
push
push
call
pusha
add
xchg
movl
lds
scas
add
int
pop
add
negl
mov
add
cmpsl
add
jns
add
add
add
loope
add
lahf
mov
add
out
mov
shl
in
jae
insb
scas
add
ret
movsl
add
pop
add
addb
hlt
lea
pop
add
push
push
call
orl
push
mov
push
hlt
add
rclb
jmp
mov
add
shr
mov
sti
stc
aam
mov
out
testb
loope
add
add
roll
add
in
mov
mov
lret
add
in
add
add
add
arpl
xchg
nop
mov
lea
pop
push
mov
push
push
push
push
push
lea
push
push
lea
push
call
out
test
mov
jbe
xchg
add
add
add
mov
add
add
in
test
add
add
fnstenv
add
fwait
pop
outsl
test
jnp
add
int3
jnp
add
xchg
add
pop
add
add
mov
fiadds
cmpsl
xchg
xchg
jge
add
rolb
cmpsl
pop
stc
mov
stos
sahf
icebp
lock
sbb
xor
push
push
push
lea
push
call
mov
xchg
mov
sti
add
add
rol
add
add
scas
pusha
popa
xchg
add
mov
outsl
scas
add
add
add
mov
hlt
not
cmpsl
in
imull
jle
enter
mov
pop
push
mov
add
jmp
rcl
out
insb
add
lahf
push
lcall
add
push
push
lea
push
push
push
lea
push
call
aad
xor
stc
pusha
pop
mov
add
jns
mov
cmc
fiaddl
add
jnp
add
add
out
mov
push
add
pop
fs
add
add
jnp
loop
fstl
add
out
add
pop
mov
rcl
pop
iret
add
add
cmpsl
add
add
mov
add
jmp
mov
lea
pop
sub
pop
rep
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
jmp
push
add
jnp
shlb
add
add
int
icebp
test
add
add
insb
push
adcb
jb
add
lret
imul
mov
add
pop
add
insb
push
add
xchg
shlb
cwtl
push
icebp
mov
add
mov
push
add
stos
add
mov
add
movsb
fabs
add
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lock
add
ror
mov
insb
popf
cli
fwait
add
cli
fcomp
add
add
mov
add
add
in
add
test
fildl
jne
stos
cli
pop
mov
out
add
pushaw
pop
iret
mov
add
push
jmp
add
sbbb
popa
add
hlt
mov
ret
add
roll
fisttps
pop
mov
add
add
push
push
push
push
push
push
lea
push
call
push
jne
lahf
add
movl
add
add
add
ret
repnz
xchg
xchg
jge
neg
stos
cmpsb
jecxz
enter
shrl
ja
add
add
sahf
add
js
add
loopne
movsl
icebp
pushf
lds
bound
pop
add
xchg
add
add
add
mov
jl
pop
movsb
add
add
add
stc
movb
add
mov
lea
pop
add
push
push
push
push
push
push
call
pusha
add
pop
add
popf
add
mov
roll
ret
add
add
lods
add
add
xchg
add
add
mov
jge
add
mov
mov
push
out
add
pop
push
add
jle
leave
add
add
add
out
cld
add
mov
add
add
add
sbb
inc
and
jno
push
push
push
push
lea
push
call
mov
loop
add
enter
add
add
mov
add
scas
ret
add
add
mov
xchg
lcall
pushf
add
rclb
aam
mov
sahf
cmpb
lds
add
lods
add
pusha
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
aam
add
xchg
add
lea
repnz
add
call
pop
in
add
add
add
add
add
jl
add
movsb
jle
cld
jae
jne
add
jl
add
add
add
add
aad
add
test
add
add
add
lret
add
rolb
pop
rcrb
mov
int3
lea
pop
mov
push
push
push
push
push
push
push
call
mov
std
pop
add
pusha
add
faddl
add
add
mov
add
add
addb
add
pushf
mov
xchg
add
add
out
add
add
jle
add
int
ret
stos
rol
add
add
test
jge
add
mov
add
add
xlat
movsl
add
xlat
lods
out
add
mov
sbb
or
push
push
push
push
push
push
call
mov
pop
add
add
add
jb
pop
lds
mov
mov
pop
in
sbbb
fildl
incb
add
add
add
jl
fiadds
xchg
add
rolb
add
add
sahf
sub
xchg
add
jnp
cmpl
add
push
xchg
add
sbb
les
lea
push
lea
push
lea
push
call
add
in
test
add
add
outsl
add
push
add
add
xlat
mov
into
jne
loope
add
icebp
lea
stc
add
filds
rolb
icebp
cli
mov
push
xchg
mov
arpl
add
cld
fbld
je
add
lock
add
add
adc
ret
push
push
call
add
stos
add
add
push
mov
jnp
roll
lods
add
add
cltd
push
pop
add
add
jnp
push
aad
pop
mov
add
stc
add
push
add
testb
stc
add
push
add
jp
add
std
push
add
in
mov
add
mov
lea
pop
mov
push
push
shl
shl
inc
push
and
add
shl
sub
not
sub
shl
add
add
inc
pop
xor
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
jno
jl
lret
add
push
mov
in
add
sbbb
not
sahf
ja
movsb
add
pop
mov
filds
pop
add
fldl
add
mov
js
sahf
mov
add
add
add
fs
add
xchg
add
xorl
addb
cmpsb
add
roll
add
mov
mov
lea
pop
pushl
push
push
push
lea
push
push
push
call
add
add
rol
add
add
faddl
leave
movsb
lods
jp
fsts
add
add
mov
fstps
add
add
les
loope
mov
add
jno
aam
add
lods
jne
push
add
loopne
pop
add
add
add
mov
out
mov
jnp
mov
add
nop
popf
add
pop
add
mulb
jl
out
add
add
add
pop
call
push
push
push
call
jb
pop
mov
incb
add
incb
xchg
arpl
push
arpl
int
pop
add
add
add
add
mov
mov
add
fstps
add
pushf
mov
call
jo
add
add
add
shr
add
push
add
pop
push
push
push
shr
add
xor
not
push
sub
add
shl
sub
pop
xor
pop
push
push
push
push
push
push
push
lea
push
call
hlt
pop
jno
add
add
add
add
mov
fcompl
mov
jo
fiaddl
add
add
mov
movsb
add
jnp
add
add
filds
fwait
mov
popf
out
je
pop
mov
roll
add
add
cld
enter
fisubl
pushf
add
lds
add
pop
add
add
add
add
mov
lea
pop
push
push
call
push
push
push
push
lea
push
lea
push
push
call
mov
outsl
mov
jbe
add
add
mov
add
mov
mov
into
icebp
incb
lds
add
orl
add
cli
add
cmpsl
int
xlat
movsb
push
add
jne
jne
ret
icebp
popa
adc
add
add
pop
jne
int
add
ljmp
add
add
push
hlt
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
scas
mov
bnd
jp
add
in
add
push
add
push
cmpsb
mov
add
mov
add
mov
pop
jo
xorl
add
add
add
test
ljmp
lea
addb
add
add
add
add
in
mov
pop
push
mov
push
lea
push
push
push
push
push
call
add
add
push
add
add
sahf
add
add
add
xchg
pop
push
add
add
add
add
movsb
lea
mov
jnp
clc
add
arpl
add
xlat
mov
popa
add
in
lock
lea
out
fdivs
ret
add
xchg
in
ja
add
movb
add
xchg
notb
push
outsl
popa
push
testb
add
cwtl
mov
data16
pop
in
lea
push
call
pushf
fwait
incb
cli
gs
add
testb
mov
mov
int3
xchg
add
leave
lds
add
add
add
loope
xchg
add
add
cld
add
mov
testl
movsb
sar
in
add
push
add
add
iret
addb
imul
roll
add
out
add
add
add
add
cld
imul
push
add
add
mov
lea
pop
add
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
enter
xchg
insb
add
roll
add
data16
hlt
add
fmulp
add
mov
lea
incb
add
add
mov
arpl
cmpsl
mov
pop
push
mov
lds
popf
fnstcw
repnz
add
in
mov
push
out
add
in
call
rorb
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
xlat
add
push
out
ljmp
sahf
mov
add
add
add
test
add
mov
add
pop
test
in
add
sarb
xchg
mov
cmpb
jne
add
mov
add
mov
mov
shlb
add
pop
xchg
lea
pop
xor
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
int3
add
cltd
add
jl
push
lahf
add
add
add
add
mov
hlt
out
add
ljmp
xchg
in
out
mov
add
mov
xchg
add
aad
add
xlat
mov
lea
add
fadds
add
add
rcrl
add
add
push
std
je
add
add
mov
cld
mov
mov
lea
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
add
push
mov
fsincos
add
rolb
lahf
lds
cwtl
ljmp
xchg
add
push
les
add
mov
outsl
in
data16
mov
push
add
cmpsb
fimull
add
popf
aam
xlat
mov
movl
out
add
mov
add
fldl
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
add
stos
xchg
mov
add
add
cmpsl
imul
mov
mov
add
add
outsl
add
push
in
add
pop
add
shll
xchg
sbbb
jmp
jae
xchg
test
bound
fs
aad
mov
ja
call
add
mov
add
jbe
add
jo
pushf
mov
lea
pop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
add
add
loop
add
add
add
add
jmp
pop
out
shrb
mov
lret
pop
push
add
iret
xorb
roll
add
add
orl
test
ja
add
jne
movsl
fidivs
ljmp
in
add
mov
and
inc
adc
adc
jno
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
jne
incb
add
in
lahf
add
jne
add
add
fisubs
scas
add
mov
add
add
jl
in
scas
add
add
add
xchg
add
pusha
mov
out
add
add
lcall
push
mov
roll
add
lea
gs
cmp
push
mov
mov
lea
pop
xor
push
lea
push
call
add
mov
push
mov
cld
stc
mov
add
add
push
add
add
add
add
orl
add
leave
xchg
push
add
stos
into
add
add
imul
lds
lods
lret
jmp
add
roll
movsl
mov
jle
mov
mov
add
xchg
loope
add
mov
add
add
mov
lea
pop
add
push
lea
push
push
push
call
cmpsl
imul
push
add
mov
popa
mov
fiadds
mov
call
add
add
mov
add
add
xchg
fwait
mov
xchg
add
xlat
add
lea
mov
lcall
mov
mov
pop
push
int
add
mov
add
add
add
addl
add
popl
add
mov
lea
pop
add
pop
push
push
push
push
push
push
call
divl
fidivrs
clc
pop
pop
add
add
xchg
aad
mov
into
cmpsl
mov
add
push
push
fstps
jmp
scas
mov
add
cmpsb
ret
add
outsl
stos
add
add
int
add
roll
xlat
test
mov
iret
add
in
sahf
int
lret
add
pop
mov
shr
push
bnd
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
testb
add
mov
add
stos
fadds
jo
lds
clc
lret
sti
enter
add
mov
push
add
add
pushf
leave
mov
mov
jl
add
add
add
mov
popa
add
fstps
hlt
add
cltd
bound
jb
jo
call
push
mov
jnp
add
add
lea
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
add
mov
pushf
xchg
mov
test
mov
int
add
add
add
mov
add
lds
mov
jnp
mov
out
xlat
lahf
in
add
sti
lret
add
fs
add
popf
add
icebp
rol
les
mov
outsl
pop
add
insb
add
add
test
arpl
add
add
lods
add
sti
mov
lea
pop
add
push
dec
shr
pop
rep
push
lea
push
lea
push
push
lea
push
push
call
pop
xchg
xchg
jne
add
out
add
mov
cmc
add
iret
popl
arpl
out
add
add
add
add
xchg
jb
enter
aad
add
xchg
mov
add
aam
in
sti
xchg
add
testl
add
out
push
lcall
jp
push
repnz
add
add
jns
imulb
xchg
add
cmpsl
cwtl
shll
mov
add
pop
mov
xor
push
shl
pop
or
je
mov
xor
push
push
push
push
push
call
ljmp
shrl
cmpsb
xchg
pop
test
repnz
pop
scas
push
clc
add
imul
add
jno
jecxz
add
in
add
fildl
enter
push
incb
arpl
int3
xchg
xchg
add
out
add
mov
in
add
outsl
lret
jbe
add
xlat
add
loop
stc
add
popf
jp
leave
out
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
add
cltd
mov
add
add
add
add
add
add
int3
add
add
jge
fisttpll
scas
fiadds
test
lds
mov
add
add
lds
push
add
add
xchg
bound
mov
pushf
aad
xchg
mov
add
jge
mov
pop
pop
mov
add
xchg
add
and
adc
push
lea
push
call
clc
cltd
out
xchg
add
add
add
xor
add
add
add
push
mov
jno
add
xchg
mov
add
addb
add
popl
test
jle
add
add
test
aam
add
add
add
mov
rolb
icebp
lahf
mov
add
lea
pop
add
push
lea
push
push
push
lea
push
push
push
call
add
xchg
scas
add
lock
hlt
add
add
add
jbe
insb
xbegin
jmp
fisubs
in
add
add
push
testb
jle
cltd
pop
jge
aam
test
out
mov
push
add
add
push
add
gs
jge
lret
lret
les
mov
pushf
lahf
push
hlt
add
add
arpl
pop
add
push
add
shr
shr
pop
add
push
sub
pop
push
push
rol
pop
mov
xor
add
push
push
push
push
call
add
mov
push
add
add
mov
jmp
mov
lea
add
test
fadds
je
add
add
jmp
add
aad
test
add
add
int3
add
mov
mov
mov
out
jl
mov
add
jp
add
lcall
adc
push
push
push
push
call
test
add
add
xchg
fstpl
addr16
mov
xchg
mov
rolb
add
jnp
add
mov
shll
mov
jmp
cltd
add
add
jnp
add
xchg
mov
add
mov
xchg
popl
add
pusha
mov
iret
popf
movb
cld
add
jmp
fiaddl
into
add
cwtl
fists
lea
pop
rep
mov
push
push
push
call
mov
add
add
popa
add
xchg
pop
rolb
outsl
add
add
jbe
add
add
add
in
aad
add
iret
mov
je
pop
add
add
mov
repnz
insb
add
into
int
push
jo
push
imul
data16
scas
mov
fcmovnbe
out
add
mov
lea
pop
xor
push
lea
push
lea
push
call
add
test
push
data16
movsb
testb
push
add
jns
sahf
mov
js
add
add
mov
add
add
add
add
add
shlb
sarl
add
add
mov
ror
push
cmpsb
add
fadds
push
icebp
add
add
test
jno
jbe
movsb
pop
test
or
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
add
mov
imul
add
stos
lods
negb
add
pop
add
rorb
roll
add
pop
add
bound
add
jle
mov
add
hlt
add
lods
add
add
jmp
cltd
add
ficompl
jno
js
mov
lcall
lea
pop
or
je
mov
add
push
lea
rol
shl
pop
add
rep
push
push
push
call
add
add
add
add
add
fstl
lods
add
fs
ret
mov
pop
filds
sahf
lods
xchg
jmp
mov
add
int3
mov
scas
add
lahf
xchg
xchg
add
add
out
add
out
mov
aad
add
jecxz
add
add
add
mov
add
xchg
add
test
lea
pop
pop
push
push
lea
push
or
inc
add
shl
xor
sub
add
pop
rol
rol
not
pop
push
push
push
call
add
add
add
add
rorl
add
fsubs
add
lds
call
mov
add
aad
add
add
mov
add
je
add
pop
aam
add
add
addl
add
lea
add
loop
jno
nop
jns
fs
add
add
add
or
pop
mov
mov
push
add
pop
mov
jmp
push
inc
ror
pop
push
push
push
push
call
ljmp
incb
push
aad
xchg
add
test
push
jns
mov
add
fcmove
popa
pusha
pusha
popf
fiadds
add
add
pop
mov
int
repnz
add
call
add
pop
push
add
jecxz
loopne
add
add
add
leave
stc
add
fadds
xchg
mov
add
call
cwtl
jae
add
add
fmull
in
push
push
lea
push
push
push
call
mov
jmp
loop
add
pop
flds
test
lds
add
rclb
add
add
mov
movb
mov
push
add
loope
add
add
add
pop
flds
adcb
add
jl
push
out
test
add
jle
add
fldl
ja
jp
rclb
add
les
hlt
add
pop
add
push
push
ror
shr
not
pop
push
push
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
in
add
cmpsb
stos
add
push
push
shrl
ljmp
hlt
pop
add
lret
pop
add
movsb
add
add
add
add
xchg
pop
xchg
nop
icebp
fisubrl
add
add
add
mov
push
ret
push
add
movl
addr16
add
mov
add
enter
insb
in
add
mov
enter
arpl
pop
mov
pop
pop
push
shr
pop
pop
pop
push
lea
push
lea
push
push
push
call
add
add
loopne
movsb
fiadds
lods
in
cmpsb
add
popw
xchg
test
cmc
scas
add
add
pop
add
add
push
repnz
test
popf
addr16
add
add
mov
mov
add
mov
add
gs
mov
insb
loop
data16
in
lea
cli
out
add
xchg
rcr
jbe
fs
mov
add
jns
mov
push
add
ret
xchg
pop
lahf
mov
int3
lea
pop
leave
ret
push
shr
shl
add
pop
push
mov
push
pop
add
push
ror
sub
pop
push
push
push
sub
not
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
into
cltd
gs
add
add
enter
std
incb
add
add
mov
xchg
add
xchg
add
jle
in
add
imul
add
mov
cld
cmc
add
mov
add
out
add
xchg
xchg
insb
add
mov
clc
fmull
jecxz
add
add
data16
lret
add
add
mov
lea
pop
movl
push
add
pop
addl
push
shr
dec
pop
test
je
mov
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
shr
add
fld
nop
mov
mov
mov
add
xchg
test
mov
bound
lcall
mov
add
ja
leave
add
popa
add
mov
add
add
add
xchg
fdivl
add
add
add
je
aad
xchg
add
in
xchg
mov
add
les
pop
pop
push
lea
push
push
call
mov
call
add
mov
add
iret
imulb
mov
mov
push
in
mov
fxch
mov
pop
call
add
test
add
insb
push
std
in
popa
sti
push
xchg
out
pop
push
sti
in
add
add
out
xchg
add
xchg
add
add
pop
add
add
add
add
pop
leave
push
push
push
call
add
aam
loopne
sar
insb
add
pop
test
insb
add
pop
int
lods
add
aad
add
add
mov
add
add
add
cli
mov
pop
add
scas
into
out
add
jns
xchg
add
aam
push
pop
add
cli
add
mov
lea
pop
ret
push
ror
shl
pop
push
mov
push
lea
push
push
lea
push
push
call
jnp
scas
add
add
flds
add
jb
out
roll
out
cmpsb
add
add
test
scas
add
addr16
add
in
add
mov
add
ja
add
arpl
out
add
mov
shrw
add
aam
loope
shl
mov
add
push
jmp
out
scas
xchg
lock
popl
aam
jno
mov
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
call
flds
add
add
add
mov
add
add
cmpsl
bound
add
stos
add
add
jecxz
jp
add
xchg
fwait
cwtl
pop
movsl
add
rolb
enter
test
mov
xchg
add
mov
add
push
add
stc
add
sti
add
add
push
enter
jle
add
outsl
fwait
loop
jbe
push
add
mov
lea
pop
push
push
push
add
pop
push
testl
addl
push
push
push
lea
push
push
lea
push
call
add
add
add
scas
in
adc
loop
add
mov
add
scas
cld
add
fiadds
fstps
jle
std
add
loopne
add
add
leave
int
mov
call
add
add
addb
add
push
add
stos
add
add
add
insb
hlt
add
lahf
imul
mov
lea
filds
mov
popa
sbb
add
pop
clc
mov
push
push
lea
push
push
push
push
call
popf
stos
fsubrs
movb
jnp
mov
rcrl
mov
add
popa
jle
rclb
pop
lods
add
add
test
fnstenv
push
mov
add
sti
in
int
add
add
add
jge
add
add
mov
add
push
jp
test
add
cwtl
push
add
shlb
push
jo
push
in
mov
mov
les
iret
mov
hlt
lea
pop
call
mov
pushl
push
not
sub
pop
push
push
dec
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
movsl
mov
popl
filds
add
add
jns
insb
jl
loopne
les
stos
add
push
imul
into
add
xchg
mov
mov
add
xchg
jae
add
cwtl
xchg
mov
mov
ja
pop
fucomip
push
pop
out
js
add
addr16
push
lahf
icebp
pop
xchg
add
lea
pop
call
push
lea
push
lea
push
push
push
call
add
fisubrs
out
add
in
movsb
out
popl
add
call
gs
lcall
add
mov
cwtl
add
mov
add
add
filds
mov
add
jae
into
testl
hlt
test
add
in
add
push
outsl
jnp
movl
cmpsl
xlat
ljmp
aam
bound
cmpl
jne
push
rol
ror
pop
pop
push
lea
push
push
push
push
call
into
push
jo
jmp
test
add
cltd
add
xchg
add
add
add
pop
jbe
push
add
mov
add
add
lods
movsb
cmpsl
add
in
jp
add
fs
mov
jp
test
mov
shll
add
add
push
add
add
mov
data16
add
adc
pop
push
ror
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jnp
add
add
add
xchg
bound
mov
add
std
aad
mov
scas
add
les
add
mov
lock
mov
mov
xchg
add
pop
jnp
jb
frstor
mov
add
add
fnsave
add
add
pushf
xchg
lock
stos
lods
add
xchg
push
enter
mov
arpl
pop
leave
push
shl
inc
pop
ret
push
rol
pop
push
mov
add
push
push
push
push
push
push
push
push
push
call
in
push
add
jns
clc
add
mov
fwait
add
bound
add
jecxz
aad
add
mov
mov
add
add
pop
test
add
add
add
lea
add
neg
loopne
imul
jb
shlb
add
add
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
push
jns
add
add
add
add
add
idiv
add
enter
jnp
add
data16
push
out
add
jl
xlat
add
add
add
add
imul
mov
mov
add
add
sbbl
add
mov
add
pop
push
push
sub
rol
pop
push
push
push
lea
push
push
push
lea
push
push
call
gs
add
fs
add
ret
add
add
mov
stos
movsl
mov
add
in
xchg
add
mov
add
bound
push
stos
add
nop
lret
add
enter
mov
jge
lret
mov
movsl
xchg
cltd
mov
add
mov
xchg
mov
rolb
add
in
test
lea
pop
movl
push
push
lea
push
push
lea
push
push
push
push
call
into
insb
add
add
addl
in
mov
loopne
icebp
std
add
add
add
testl
add
xchg
mov
in
add
jno
mov
mov
ljmp
pusha
add
add
add
push
mov
pop
in
jno
cltd
push
add
pop
addb
push
add
lea
pop
call
push
push
rol
add
pop
call
subl
cmpl
jne
push
inc
pop
pop
push
push
push
lea
push
push
call
add
fisubrs
add
insb
outsl
add
hlt
add
ret
mov
lods
fs
cmc
cli
addl
add
jl
add
jmp
out
pop
in
add
add
movsb
out
stos
xchg
scas
roll
out
mov
pop
addr16
movsl
test
mov
push
jmp
loope
add
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
lcall
add
lret
add
jae
loop
notl
fildll
add
int3
clc
test
add
mov
push
add
clc
mov
mov
mov
add
mov
add
add
mov
mov
pop
bound
mov
add
add
xchg
je
fbstp
xchg
pop
jge
add
add
test
ret
lea
pop
pop
leave
ret
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
jns
add
add
add
jmp
add
scas
std
mov
sti
add
rol
add
nop
add
mov
add
arpl
add
sub
add
lret
add
add
jbe
je
cld
clc
add
jle
fiaddl
mov
divl
lods
pusha
add
mov
lea
pop
push
mov
push
add
pop
add
push
shr
pop
push
push
lea
push
lea
push
lea
push
push
push
call
add
in
add
sahf
xorl
add
add
jb
add
add
jns
jbe
je
add
add
mov
faddl
add
jbe
out
mov
fisubl
in
add
add
xchg
enter
mov
add
cmpl
out
arpl
jle
add
jo
add
add
mov
add
je
movsl
orl
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
mov
andb
mov
add
adcb
mov
fucom
add
enter
add
movsl
add
add
les
add
jmp
mov
in
popa
jge
add
jae
mov
add
test
cmpsb
add
flds
add
push
add
add
leave
add
divb
add
scas
add
nop
fs
add
add
call
lea
pop
mov
lea
sub
push
rol
shl
rol
pop
mov
push
push
call
add
add
push
test
xchg
addl
add
mov
lcall
mov
bound
jecxz
jae
mov
fldl
stc
add
pusha
mov
gs
movsb
rolb
std
movsl
mov
in
add
and
add
add
add
add
mov
lea
pop
shr
add
push
push
push
push
lea
push
push
push
push
call
add
add
add
ljmp
fwait
mov
test
mov
mov
popl
hlt
pop
add
test
fsubrp
jmp
flds
add
mov
mov
mov
add
int3
add
mov
add
xlat
add
lea
cwtl
mov
enter
add
add
popf
test
add
jecxz
xchg
add
add
int3
lea
pop
mov
mov
push
ror
pop
add
push
shr
pop
add
push
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
pop
add
rol
add
aam
pushf
jl
mov
add
add
loop
incb
add
outsw
add
add
filds
mov
add
nop
add
cld
fwait
arpl
test
aam
testl
add
fnsave
mov
add
add
mov
lea
pop
mov
mov
cmp
jne
push
push
lea
push
lea
push
lea
push
call
xchg
add
mov
add
mov
nop
add
lret
movsb
jl
cltd
aad
les
mov
addr16
add
in
orl
lods
lret
xchg
pop
add
icebp
ret
jmp
add
fdivp
sti
mov
add
add
out
jecxz
add
add
pop
add
push
ja
hlt
leave
add
mov
lea
pop
cmp
jne
mov
push
lea
pop
movl
jmp
push
rol
shr
shl
sub
pop
mov
push
add
pop
mov
push
push
push
push
push
push
push
call
jge
add
lahf
jmp
aad
pop
test
cld
jns
test
pop
sahf
push
add
add
loopne
lret
addl
cld
jno
add
jns
add
add
mov
lcall
cld
add
add
insb
add
fistpll
add
iret
testb
cmpsb
add
add
rclb
jge
jae
add
pusha
sbb
sub
jne
mov
push
push
lea
push
push
push
push
push
call
add
jle
add
xlat
add
aam
shrl
add
loop
add
mov
flds
test
test
add
lahf
pusha
add
mov
jns
add
add
add
xchg
add
xlat
xchg
lock
out
add
mov
scas
imul
out
xchg
add
aam
add
je
add
int3
imul
mov
lea
pop
movl
push
inc
inc
pop
jmp
mov
mov
push
shr
not
pop
cmp
jne
push
sub
rol
pop
mov
movl
push
push
push
push
push
push
lea
push
push
push
call
sti
add
add
mov
mov
add
jge
add
add
out
adcb
add
out
add
add
add
addr16
add
pop
push
xchg
add
add
imul
ljmp
lret
lret
mov
add
stos
aam
mov
iret
push
sti
pusha
lret
out
mov
lea
pop
jmp
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
mov
lea
data16
lret
add
add
mov
jnp
mov
add
mov
fldl
addr16
add
int
mov
xchg
lea
pop
jbe
mov
mov
add
push
mov
test
pop
add
push
add
test
out
cmpsl
icebp
test
data16
cmpl
jne
push
push
push
push
push
call
out
shl
add
add
add
add
jo
mov
add
add
popa
mov
mov
jmp
mov
imul
sti
jmp
add
imul
add
add
sti
fiaddl
xchg
rcr
test
add
gs
loopne
add
mov
lahf
add
test
clc
add
test
jecxz
add
add
add
mov
lea
pop
mov
movl
jmp
push
push
push
push
lea
push
push
push
lea
push
call
add
push
mov
mov
lock
jl
xchg
add
mov
add
lods
stc
add
mov
mov
add
cmc
add
icebp
xchg
rolb
lods
add
pop
push
test
push
mov
add
add
mov
aam
insb
fdivrs
add
popa
add
enterw
mov
add
jb
jns
les
pushl
pop
push
pop
mov
mov
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
popf
roll
enter
addl
pushf
add
add
add
cld
add
add
push
nop
stc
add
add
mov
xchg
call
data16
add
andl
data16
add
jno
leave
add
add
jne
add
cmc
out
pushf
mov
lea
pop
mov
push
push
lea
shr
sub
push
and
add
sub
add
pop
rol
rol
sub
pop
push
sub
pop
push
call
cmpl
je
push
push
shr
shl
push
or
inc
add
xor
sub
not
add
lea
pop
not
lea
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
rolb
add
outsl
ljmp
add
scas
add
scas
call
xchg
out
mov
push
add
pop
pop
cld
xchg
add
mov
add
cli
add
fsubs
push
xchg
add
add
xchg
mov
stos
jns
stos
mov
push
int
jne
add
add
mov
lods
add
jnp
add
filds
cld
mov
lea
pop
push
push
inc
lea
pop
call
cmpl
je
push
push
xor
sub
rol
push
or
not
add
ror
sub
dec
pop
add
pop
push
not
rol
not
pop
push
call
cmpl
je
push
push
xor
dec
push
or
inc
add
sub
sub
sub
sub
add
shr
pop
rol
shl
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
cmpsl
mov
not
mov
add
test
ljmp
add
jns
imul
imul
rorb
jo
add
add
add
enter
ret
je
adc
add
pop
add
add
cli
in
sbb
aad
fcmovnu
jb
out
lcall
add
mov
lea
pop
push
call
push
ror
pop
cmpl
je
push
push
push
push
pop
add
ror
shl
sub
pop
rol
pop
push
push
push
push
call
add
mov
ljmp
add
popa
aam
add
fs
mov
add
out
push
subl
xlat
int3
imul
add
add
vcvttps2dq
mov
loop
cmpb
iret
add
add
loope
sahf
xlat
add
push
add
add
lcall
pop
jno
xchg
in
add
mov
fimuls
or
call
push
rol
pop
cmpl
je
push
push
shl
dec
push
sub
add
shr
inc
sub
sub
inc
pop
rol
pop
push
push
lea
xor
rol
pop
call
cmpl
je
push
push
sub
shl
xor
rol
push
or
not
add
ror
inc
ror
sub
sub
pop
not
not
sub
pop
push
push
push
lea
push
push
push
lea
push
call
xchg
roll
add
add
add
add
test
add
gs
add
aad
add
jp
xlat
rcrb
add
xchg
xchg
pop
add
insb
movl
cmpsb
mov
mull
mov
xchg
jle
aam
test
mov
jnp
push
imul
lea
pop
push
push
push
call
js
add
pushf
xchg
aam
movsl
test
add
mov
ljmp
pop
cmc
jp
mov
mov
mov
jle
call
add
std
mov
add
add
add
mov
add
mul
add
add
add
fistpll
add
push
nop
jecxz
test
add
add
lret
rcl
fisttps
pop
call
push
sub
shr
pop
cmpl
je
push
push
lea
dec
rol
rol
push
and
add
inc
xor
not
sub
not
lea
inc
pop
add
lea
add
add
pop
push
lea
shr
pop
push
call
cmpl
je
push
push
sub
push
xor
add
lea
add
sub
xor
rol
pop
lea
sub
pop
push
shr
dec
ror
sub
pop
push
call
cmpl
je
push
push
dec
inc
add
sub
push
push
pop
add
dec
shl
shl
sub
sub
not
sub
shr
ror
pop
shr
pop
push
add
xor
pop
push
push
push
call
jae
add
add
add
add
mov
add
add
mov
out
add
repnz
add
imul
push
movl
jp
xchg
popf
add
add
in
frstor
test
movsl
jl
mov
add
nop
mov
add
andb
pusha
or
sub
add
cmpl
je
push
push
xor
add
inc
push
or
inc
add
rol
add
sub
not
rol
pop
lea
lea
pop
push
add
dec
not
shl
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
call
faddl
add
add
mov
lods
lds
aam
add
add
in
mov
lret
mov
push
add
xlat
addl
lahf
mov
jge
mov
add
cltd
jge
ljmp
xchg
stos
jne
int
loop
pop
add
out
mov
ret
stos
add
add
clc
out
or
iret
add
add
fmull
aas
add
cmpl
je
push
push
rol
push
or
inc
add
add
not
sub
shr
shl
not
pop
shr
pop
push
lea
sub
pop
push
push
push
lea
push
push
call
jbe
mov
add
add
add
add
in
mov
nop
rolb
add
cwtl
add
loope
jecxz
add
add
add
xchg
add
icebp
push
add
add
add
add
add
lahf
xchg
scas
mov
jb
add
les
add
push
add
add
add
pop
mov
hlt
sti
xchg
push
lods
in
iret
orl
call
cmpl
je
push
push
not
push
sub
add
rol
shl
sub
lea
pop
rol
not
add
pop
push
rol
shl
shr
pop
push
push
ror
pop
call
cmpl
jne
push
push
lea
push
push
push
lea
push
call
xchg
lods
pushf
mov
add
add
enter
jge
arpl
jae
pop
add
pop
add
pop
jb
mov
add
add
add
in
mov
mov
arpl
add
subl
push
add
sbb
nop
add
popa
add
add
pop
sti
add
add
test
add
mov
loop
hlt
mov
lea
pop
mov
movl
jmp
push
push
lea
push
push
push
push
push
push
lea
push
call
jno
jo
outsl
add
jle
in
mov
add
sahf
mov
jbe
lret
jmp
iret
test
add
popf
jnp
andb
add
xchg
add
stc
add
xlat
in
xchg
cmpsl
add
add
sar
jns
jle
test
add
jns
add
scas
mov
add
mov
lea
pop
xor
pop
push
dec
shl
pop
pop
pop
push
push
push
push
push
push
push
call
fdivl
in
push
pop
add
push
add
push
sbb
add
fmul
add
push
mov
mov
jmp
int3
pushf
push
push
add
in
add
add
into
mov
cltd
mov
xchg
add
in
fiaddl
test
push
mov
out
add
cld
xchg
roll
add
mov
ret
add
add
mov
arpl
pop
leave
ret
push
push
push
push
push
push
push
lea
push
call
add
insb
test
mov
pushf
ja
mov
add
add
mov
pop
add
mov
in
add
jns
push
fs
push
add
fisubs
jnp
add
add
add
add
jmp
data16
mov
xchg
add
lcall
mov
add
jecxz
insb
lret
rcl
scas
int
gs
jle
add
mov
lea
pop
push
push
ror
pop
mov
push
rol
ror
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
stc
add
testb
push
mov
addl
add
sarl
addb
add
add
pop
add
jle
add
xchg
fisttps
fidivrl
cmp
add
pop
les
add
add
mov
into
add
lea
pop
cmpl
jne
push
push
sub
push
sub
add
sub
dec
shr
sub
shl
dec
sub
shl
pop
xor
pop
push
xor
rol
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
in
add
int
add
cwtl
fcmove
add
cltd
test
add
fcoml
cmpsl
add
shlb
jnp
cltd
xchg
vpxor
test
push
in
into
add
add
add
push
in
jmp
xchg
add
add
mov
insb
lret
add
add
add
pop
push
add
add
mov
in
movsb
add
add
add
insb
imul
aam
arpl
cltd
mov
lea
pop
call
push
xor
xor
pop
push
push
ror
dec
xor
pop
call
jmp
cmpl
je
push
lea
add
pop
cmpl
jne
push
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
hlt
jns
jno
jecxz
add
jno
pop
lods
add
loope
add
cmpsl
add
add
jne
lock
jmp
call
addl
add
mov
add
stos
nop
aam
add
mov
add
jb
pop
popf
pop
add
mov
add
sub
push
rol
pop
add
push
add
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
rol
add
mov
ljmp
add
subl
outsl
int3
add
add
fdivrl
add
add
mov
arpl
rclb
stc
iret
mov
mov
std
push
push
iret
arpl
clc
add
lds
popf
leave
pushf
push
std
orb
xchg
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
jmp
je
add
ljmp
add
int3
insb
add
add
add
negl
add
adcl
cld
add
xchg
jns
adcl
mov
add
jmp
add
pop
add
add
popf
stc
add
movsl
testl
xchg
add
jmp
add
data16
fldt
sub
leave
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
push
loope
fwait
xchg
add
add
mov
pushf
add
add
add
mov
add
add
rclb
add
into
add
mov
mov
movsb
add
stos
in
xchg
add
add
fs
pusha
test
stos
in
retw
in
add
mov
mov
add
add
add
mov
test
out
mov
lea
pop
add
ret
push
lea
lea
pop
jmp
push
push
lea
push
lea
push
call
nop
loopne
in
mov
je
mov
in
add
mov
add
add
add
repnz
add
popa
std
push
fistps
add
add
pop
pop
add
jnp
mov
pop
movsl
add
add
push
add
push
add
pop
add
add
mov
add
jnp
mov
popf
out
jmp
arpl
pop
cmpl
jne
push
push
sub
push
xor
add
sub
add
ror
xor
pop
shl
pop
push
add
add
shl
pop
pushl
call
push
push
push
call
je
add
test
mov
bnd
lds
add
add
mov
lock
ret
mov
add
pop
xchg
subl
add
add
add
testb
ja
test
shr
add
add
add
push
push
add
movsb
mov
add
test
lret
cmpl
data16
rclb
cmp
push
push
lea
push
push
push
push
push
call
pop
fisttps
push
stc
add
add
fwait
add
push
call
xchg
pop
add
stos
mov
add
add
mov
mov
jp
call
mov
pop
add
push
add
mov
push
mov
insb
push
pop
mov
mov
out
mov
lahf
flds
add
add
mov
lea
pop
jmp
cmpl
jne
push
lea
push
lea
push
push
push
push
push
push
call
push
push
std
iret
push
jge
mov
xchg
add
add
cmpsl
add
add
add
add
mov
add
xchg
xlat
je
mov
add
sti
data16
aam
fxtract
pop
pop
into
jmp
arpl
stos
add
add
pusha
test
cwtl
add
add
movb
mov
pop
cmpsl
add
add
add
jle
add
push
mov
mov
lea
pop
mov
push
shl
pop
mov
push
add
not
pop
call
push
lea
pop
push
push
push
rol
push
xor
add
xor
lea
ror
sub
sub
pop
xor
shl
not
pop
push
push
lea
push
push
push
push
push
push
call
movsl
int
imul
lcall
add
jl
pop
add
insb
push
add
lods
loopne
add
add
outsl
add
jae
fcompl
js
into
jb
jne
call
lahf
add
jbe
jo
push
shrb
add
add
rol
arpl
testl
add
mov
xchg
cli
add
fadds
add
add
cwtl
mov
lea
pop
pushl
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
loopne
add
call
test
add
add
neg
hlt
mov
add
loope
mov
jae
lcall
add
add
add
jmp
in
add
icebp
js
roll
pusha
mov
add
add
mov
add
mov
cmpsb
add
loope
std
loope
pop
pop
push
add
cmpsl
std
add
data16
xchg
and
add
movb
jmp
push
sub
rol
dec
lea
pop
call
push
push
shl
shr
add
push
or
inc
add
ror
ror
shl
sub
xor
rol
pop
dec
dec
shr
pop
pushl
push
ror
pop
call
call
push
push
add
push
sub
add
lea
not
sub
ror
shl
xor
pop
rol
pop
push
sub
rol
sub
pop
pushl
call
call
push
ror
ror
pop
lea
push
push
rol
push
push
pop
add
shr
inc
sub
pop
add
sub
pop
push
xor
shr
add
shr
pop
pushl
call
push
pop
push
push
rol
sub
sub
add
pop
call
push
push
shl
push
or
not
add
dec
lea
dec
sub
add
shr
ror
pop
shr
sub
shl
rol
pop
pushl
push
push
call
int3
ficomps
add
fwait
add
faddl
aad
add
incb
add
ljmp
add
in
add
hlt
jecxz
into
add
rcrb
test
fadds
add
jl
iret
loope
push
xlat
add
lods
mov
add
add
push
add
pop
mov
add
hlt
lea
pop
call
call
mov
push
push
push
sub
add
add
add
sub
not
shr
sub
sub
pop
sub
shr
lea
rol
pop
push
shl
pop
pushl
push
push
push
push
push
push
push
call
add
add
add
arpl
add
sahf
add
jns
into
mov
add
adcb
pop
lcall
add
mov
int3
jmp
push
mov
add
mov
cmpsl
pop
out
cmpsl
mov
pop
add
bnd
imul
rolb
into
add
add
js
add
les
cli
add
mov
fmull
daa
and
add
lea
push
push
push
push
push
call
add
push
scas
add
cmc
imul
loopne
xchg
add
arpl
in
add
out
mov
ja
jnp
fldl
stos
add
nop
push
add
add
fisubl
add
add
lahf
add
popf
add
fwait
nop
fbstp
cmc
cmpb
enter
add
mov
add
lods
test
xchg
add
mov
jnp
mov
mov
lea
pop
push
call
push
push
shr
push
push
pop
add
sub
sub
sub
pop
ror
pop
push
lea
push
call
push
stos
add
pop
jecxz
jle
jb
add
add
sahf
roll
rcrl
test
add
shrb
mov
add
adcb
aam
stos
add
imul
lret
add
add
add
in
add
test
jb
mov
push
in
rol
fwait
addl
mov
add
push
enter
scas
popa
add
add
add
mov
lea
pop
pushl
push
inc
inc
rol
pop
call
push
push
push
push
push
push
call
mov
mov
cmpsl
rcl
scas
add
fwait
add
add
sub
add
mov
add
pop
push
in
add
xchg
add
scas
add
add
cli
nop
jne
add
add
add
add
mov
pop
addl
stc
pop
enter
add
lea
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
cmpsl
add
push
loope
add
cmpsl
add
mov
add
add
add
add
add
icebp
cwtl
rcll
add
fcoml
jae
push
mov
add
jecxz
jno
rolb
sar
xchg
push
jbe
add
testl
fwait
js
jnp
rclb
add
jmp
add
jmp
add
push
clc
roll
into
out
push
and
pushl
push
push
push
lea
push
push
push
push
call
icebp
push
pop
jne
fiaddl
add
out
enter
add
cli
mov
lret
out
add
add
pusha
add
jge
push
add
flds
add
rcl
xchg
lahf
icebp
push
add
add
sahf
add
add
aam
pop
add
shll
in
loopne
mov
add
add
stos
mov
add
add
pop
add
pop
call
push
push
rol
shr
push
sub
add
add
sub
dec
dec
inc
shl
pop
add
sub
lea
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
shlb
gs
mov
roll
scas
addw
pop
mov
add
add
add
in
pop
push
add
lods
cld
ficompl
cmc
add
xchg
add
roll
sti
lcall
jnp
stos
arpl
add
xchg
push
xchg
add
ret
add
mov
leave
mov
mov
and
jne
call
push
push
shl
ror
not
sub
push
or
inc
add
add
not
sub
shl
pop
ror
shl
inc
pop
push
push
add
shl
lea
inc
push
xor
add
shl
lea
rol
xor
sub
sub
inc
pop
pop
push
add
sub
pop
call
pop
push
push
push
lea
push
push
call
fldl
add
movsl
pop
add
xchg
add
xchg
clc
icebp
loop
add
pop
add
orl
ftst
add
add
add
rolb
into
sti
iret
add
pop
fwait
call
xchg
cmpsl
call
mov
add
mov
mov
add
xchg
jno
fmull
jne
call
jmp
push
inc
inc
pop
call
push
push
not
push
or
inc
add
sub
lea
sub
sub
inc
pop
add
shl
pop
push
push
push
call
lea
add
icebp
add
incb
add
push
hlt
add
add
fwait
add
mov
add
xchg
add
stos
add
add
mov
pusha
add
cmpsb
add
push
add
sti
add
pop
add
add
fadds
add
divl
add
add
out
add
add
imul
test
add
int3
lea
pop
pushl
call
push
push
push
call
mov
push
add
add
xchg
cmpsl
add
cld
xchg
jae
add
testb
add
testl
pop
mov
imul
fiadds
xchg
xchg
mov
jmp
xchg
cwtl
push
jmp
add
add
mov
push
push
mov
mov
call
loopne
test
insb
mov
push
in
pop
mov
lea
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
cmc
add
mov
xchg
add
add
add
mov
mov
repnz
push
add
add
add
mov
add
popf
add
jl
add
add
jo
mov
add
imul
addb
add
imul
jno
add
popa
add
fwait
add
jle
cld
lea
pop
mov
lea
push
push
sub
push
and
add
ror
ror
shl
ror
sub
lea
add
not
pop
dec
dec
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
push
mov
add
mov
loopne
push
add
shl
add
int
fiadds
xchg
push
faddl
jle
add
stos
add
add
add
add
add
out
test
fstl
jno
enter
xchg
add
popf
std
mov
add
cld
jmp
jle
add
add
int3
call
push
fisttpl
pop
pushl
push
xor
pop
call
push
lea
push
push
lea
push
call
lcall
add
xchg
xlat
int3
mov
data16
pop
push
movl
add
rolb
leave
stos
add
xchg
xorb
pop
add
push
movb
add
popf
jnp
shlb
add
aad
mov
gs
lds
xorb
imul
test
xchg
arpl
out
xchg
add
push
add
cld
lea
pop
push
push
push
lea
push
lea
push
lea
push
call
popa
add
jl
mov
pop
jecxz
out
fldl
loop
scas
pop
push
add
jo
add
icebp
rcll
add
mov
fcmovnu
mov
repnz
add
jne
add
in
add
lea
add
add
add
jmp
in
jp
sarl
pop
add
pop
mov
lea
pop
call
push
push
lea
push
sub
add
add
rol
sub
add
shl
sub
sub
pop
shl
sub
not
not
pop
push
push
lea
push
lea
push
push
push
lea
push
call
pop
std
add
add
add
rorb
add
add
add
add
mov
add
movsl
add
add
mov
add
mov
add
pop
decb
loopne
add
add
cwtl
pusha
add
pushf
add
pop
add
add
filds
add
shlb
add
rcrb
add
add
mov
lea
pop
pushl
push
ror
ror
pop
call
push
push
push
lea
push
push
call
add
mov
xchg
in
mov
test
lea
add
jnp
add
add
pusha
sti
hlt
jne
add
roll
popl
aad
mov
mov
pop
lds
xchg
add
mov
xchg
add
sti
add
ficoml
jnp
add
data16
jns
add
ja
call
mov
add
jmp
mov
lea
pop
call
mov
push
sub
inc
dec
pop
lea
push
push
lea
push
or
not
add
not
xor
lea
sub
lea
pop
sub
lea
not
xor
pop
push
inc
pop
pushl
push
push
call
loopne
add
std
add
add
push
jmp
jbe
xchg
add
add
pusha
outsl
out
add
add
add
add
xchg
add
add
testw
add
movb
insb
mov
add
push
add
add
shll
test
add
mov
out
jnp
rcl
add
mov
lea
pop
call
push
shr
pop
lea
push
push
push
xor
pop
push
pushl
push
push
not
rol
sub
push
and
add
rol
sub
ror
pop
inc
add
pop
push
sub
sub
not
pop
push
call
push
push
sub
add
inc
push
or
not
add
shl
rol
sub
sub
pop
inc
shl
inc
pop
push
ror
pop
pushl
call
push
push
dec
inc
pop
call
push
push
sub
push
xor
add
add
add
sub
shr
sub
pop
lea
not
add
pop
push
push
push
push
call
test
subb
add
add
add
in
add
xchg
mov
add
add
xchg
popa
add
add
popa
fcomps
bound
arpl
mov
mov
mov
leave
add
loop
add
shr
add
add
arpl
in
add
add
add
jle
jge
mov
mov
add
lea
pop
pushl
push
push
lea
push
call
out
push
pusha
add
add
mov
out
add
add
add
add
pop
and
mov
mov
add
add
add
push
insb
fadds
jmp
add
cltd
cmpsb
lock
jle
push
add
add
xlat
mov
add
add
add
sti
test
mov
outsl
add
sti
mov
sarb
shl
add
add
jns
pop
mov
lea
pop
call
call
jmp
push
add
ror
dec
pop
pushl
push
push
push
push
push
push
push
call
into
xchg
leave
mov
add
xchg
scas
addr16
xlat
pop
jo
test
rol
add
faddl
add
xchg
call
add
js
std
add
add
add
add
jno
lahf
add
ljmp
add
ljmp
add
stc
nop
mov
jmp
jne
lods
mov
add
rol
out
cwtl
popa
ret
add
mov
lea
sbb
mov
push
push
push
push
push
push
push
lea
push
call
push
add
push
scas
lcall
fucomip
xchg
roll
add
imul
repnz
jb
test
idivb
int3
ljmp
push
jae
in
mov
push
popl
add
xchg
add
add
add
fs
pop
add
add
testb
add
movsb
pop
rcrl
jge
pusha
add
add
mov
aam
bound
pop
jmp
push
push
push
push
pop
add
rol
not
sub
rol
sub
shl
rol
pop
lea
pop
push
sub
pop
pushl
call
push
push
not
rol
pop
call
push
push
add
rol
shr
not
push
sub
add
sub
rol
dec
sub
sub
add
pop
xor
not
add
pop
push
rol
xor
pop
pushl
call
push
push
shl
pop
call
push
push
push
call
fiaddl
push
cli
loope
add
icebp
pop
add
mov
lcall
mov
into
stos
add
pop
pushf
stos
jecxz
movsb
mov
add
cmpsb
scas
lods
shrl
push
nop
int3
jbe
test
xchg
popf
test
xchg
jae
add
xchg
xchg
add
add
add
add
jbe
add
add
mov
adc
mov
lea
pop
leave
add
push
push
lea
push
push
push
push
push
push
lea
push
call
arpl
popf
add
addb
xchg
push
xchg
jb
cltd
add
mov
add
add
addb
mov
add
repnz
jb
add
add
add
push
add
add
loope
add
fiaddl
ret
imul
add
repnz
add
fadds
add
loope
add
mov
cmpsl
xchg
in
pop
jno
mov
int3
lea
pop
pop
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
mov
roll
cmc
push
add
jle
clc
mov
add
rorb
add
add
jp
cli
test
add
movsl
add
push
add
jo
hlt
add
jmp
pop
fnstsw
sahf
add
add
fmulp
add
fstpt
mov
pop
gs
add
add
xchg
add
add
int3
loopne
cmc
add
xchg
mov
leave
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
testl
cmc
fadds
iret
in
aam
test
call
mov
add
add
rolb
arpl
sti
push
scas
add
clc
in
out
add
jne
add
add
add
lea
mov
repnz
cli
add
jns
fs
les
push
add
jbe
add
add
add
addr16
in
add
pop
leave
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
pop
add
mov
add
stc
lea
add
add
mov
add
add
mov
xchg
jns
sahf
sbbb
add
add
fisubrs
aam
mov
add
rcr
mov
add
add
addl
add
mov
cmpsl
add
mov
add
mov
outsl
mov
lea
pop
add
ret
leave
push
push
push
push
call
mov
enter
imul
outsl
lods
push
in
movl
pop
add
mov
add
jge
mov
out
add
add
mov
add
add
xchg
mov
in
add
push
mov
pop
add
jmp
jecxz
add
jnp
ficoml
add
add
add
mov
lea
pop
ret
push
push
sub
xor
shr
xor
pop
mov
cmpl
jne
push
lea
push
lea
push
push
push
push
call
bound
add
in
int3
add
popa
nop
add
xchg
hlt
nop
mov
add
idivb
rolb
mov
add
enter
add
xchg
xchg
je
pusha
add
cltd
mov
mov
mov
rolb
mov
mov
mov
xchg
shll
mov
lock
pop
mov
jmp
mov
push
push
lea
push
push
push
push
call
arpl
add
add
hlt
push
jmp
add
add
pop
sar
pop
mov
stos
add
cwtl
mov
movsl
push
iret
add
stc
ret
mov
add
lret
data16
add
pusha
add
add
add
xlat
push
out
mov
add
mov
lea
pop
and
xor
xor
push
rol
lea
inc
pop
add
xor
push
lea
push
push
lea
push
push
call
mov
leave
add
push
add
add
push
add
add
out
int
mov
cmpsl
add
add
cltd
mul
test
add
add
ret
bound
add
cmc
lcall
les
add
add
add
data16
add
nop
push
movsl
jecxz
add
popa
adc
dec
sub
push
lea
rol
pop
jmp
push
push
push
lea
push
call
add
clc
lret
add
xchg
insb
cmpsl
lds
xchg
pop
shll
jmp
jle
pop
add
jae
repnz
in
fucomp
out
pop
data16
add
jge
mov
add
add
add
jns
add
lea
add
add
mov
add
popf
add
ja
add
cld
xchg
push
jle
mov
add
lea
pop
sub
pushl
push
push
push
push
push
push
push
push
push
call
add
stos
pusha
add
lock
push
cwtl
xchg
mov
add
add
add
scas
add
add
add
push
mov
push
mov
cmpsl
subb
add
add
lret
lods
jmp
test
addl
std
add
icebp
arpl
int
add
mov
mov
orl
lea
pop
pop
sub
cmp
jne
push
rol
rol
rol
pop
mov
push
push
push
push
lea
push
lea
push
call
add
jge
mov
popf
add
add
test
mov
mov
push
add
lods
pop
out
add
push
popa
popa
iret
orl
mov
add
add
mov
jp
cwtl
shrb
cmp
cmpsb
cli
add
mov
jl
mov
jae
add
mov
pop
lea
sub
mov
push
inc
shr
pop
shr
add
sub
push
push
lea
push
push
push
lea
push
call
cli
add
jb
mov
fdivl
test
sarb
add
jmp
int
add
pushf
mov
enter
lods
cld
fildl
lahf
out
out
push
arpl
push
mov
out
pop
add
addr16
aad
xchg
fsts
mov
je
add
add
fcoml
add
add
pop
outsl
jb
xchg
leave
xchg
aad
movl
sbb
xor
not
add
pop
shr
and
sub
push
add
xor
pop
cmp
jne
leave
ret
push
add
pop
push
mov
push
push
push
push
push
push
call
mov
jecxz
cmc
out
add
nop
mov
sti
add
in
movsl
add
roll
push
pop
push
xchg
add
leave
add
add
add
fwait
push
add
xchg
add
add
add
add
mov
pop
mov
add
add
jnp
jae
xor
std
add
add
add
mov
add
mov
sbb
cld
push
push
push
inc
shr
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
shlb
test
cld
add
add
pop
jnp
cmc
pop
add
add
jne
lahf
outsl
add
ja
jnp
movsl
leave
pop
mov
movl
push
hlt
mov
lcall
mov
cmpsl
add
add
mov
out
pusha
rolb
popf
add
add
push
orl
push
lea
push
push
push
push
push
call
ficompl
sti
fwait
xchg
push
mov
add
add
in
sbbl
add
jbe
xchg
add
cmpsb
lock
outsl
mov
add
fdivrl
fcmovne
mov
push
stos
add
aam
add
fimuls
bnd
movsl
add
add
push
jl
cltd
add
add
add
xchg
add
hlt
fstpt
and
pop
or
iret
sub
out
cmc
pop
lea
push
push
lea
push
push
lea
push
push
push
call
add
and
pop
pop
fdivr
pop
add
fcomp
xchg
fnstenv
add
clc
add
mov
aad
hlt
insb
add
add
rolb
add
add
cli
add
jmp
iret
add
add
mov
filds
add
xchg
leave
add
into
mov
ja
lea
cmpsl
add
sbb
sub
push
xor
pop
mov
shr
add
push
sub
sub
dec
shl
pop
mov
add
push
push
push
push
call
into
mov
subl
hlt
jge
lods
mov
add
jae
jno
add
negl
pop
roll
add
outsl
add
je
out
rolb
leave
mov
mov
add
mov
popa
add
add
push
idivb
push
lret
push
js
std
push
cmc
add
imul
add
add
cwtl
jns
movsl
add
pop
mov
push
dec
inc
shr
add
pop
add
push
shr
add
pop
xor
push
dec
inc
add
ror
pop
mov
push
add
rol
pop
and
call
push
push
push
lea
push
call
mov
mov
mov
add
mov
repnz
add
stos
fcmovu
lock
cmc
add
jl
add
add
pushf
cmc
push
push
mov
add
stos
add
pushf
cmc
cmc
add
add
xchg
movsl
add
pop
data16
mov
add
xchg
add
int3
mov
lea
pop
add
cmp
je
push
sub
not
pop
add
cmpl
jne
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
pop
enter
mov
add
add
rcr
popf
shll
mov
test
mov
lock
add
add
scas
jno
mov
jmp
add
jb
mov
out
fisubrl
int
outsl
push
lock
add
push
fdivs
mov
cld
cmpsl
pushf
mov
mov
lea
pop
xor
push
inc
pop
pop
pop
pop
push
sub
pop
pop
push
lea
shl
pop
pop
leave
ret
push
not
rol
pop
mov
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
sarb
mov
sti
jge
add
out
je
popa
stc
pop
add
pusha
add
add
mov
add
test
call
add
fsubrs
add
loope
add
cmpsb
jge
scas
push
std
add
add
add
add
add
sti
xchg
push
add
lock
fcmovnbe
testb
hlt
lea
pop
add
push
shr
pop
push
push
push
push
lea
push
push
call
aad
add
loopne
mov
lcall
mov
ljmp
add
addl
andb
add
shlb
lds
jae
add
add
add
test
faddl
movsl
testl
mov
add
sti
mov
in
add
movsl
add
pusha
adc
push
push
push
push
push
push
push
lea
push
push
call
add
mov
mov
lods
hlt
lods
shr
add
add
mov
lods
mov
fnstenv
mov
add
add
pop
pushf
mov
int3
add
add
outsl
mov
cli
mov
add
add
call
jle
mov
add
add
add
jp
mov
add
mov
lea
pop
pop
push
ror
add
pop
pop
push
push
push
lea
push
push
lea
push
push
call
push
add
mov
push
jb
mov
mov
out
jl
add
add
sbb
jne
add
pop
testl
rolb
add
ret
popf
jp
pop
popf
add
add
jecxz
sbbl
jecxz
std
add
add
add
add
pop
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
pop
xorb
add
pop
add
add
mov
in
mov
add
push
sti
cmc
lea
push
add
add
les
add
add
shl
jge
out
jmp
jl
sahf
add
fsubrl
rolb
add
enter
jecxz
in
mov
xchg
mov
and
push
call
push
shl
dec
not
xor
pop
xor
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
push
imul
mov
iret
in
mov
add
out
add
mov
xlat
add
add
test
add
lock
jmp
out
pop
add
imul
mov
insb
lcall
add
add
stos
js
popf
add
test
in
pushf
add
icebp
in
jmp
add
add
mov
lea
pop
pop
pop
push
inc
shr
pop
pop
push
lea
push
push
push
push
push
push
call
lea
je
jmp
jl
cmp
mov
loop
add
xchg
add
std
add
shll
shr
xorb
jno
aam
test
je
cltd
clc
add
add
scas
add
add
mov
mov
add
stc
iret
add
hlt
lea
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
rolb
js
xchg
in
je
add
push
add
mov
ja
add
add
out
add
mov
push
pop
add
add
lds
mov
ret
add
push
jno
add
push
fld1
add
jno
notb
add
add
movl
icebp
cmpsl
fcomp
in
add
add
jnp
pop
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
mov
fiaddl
in
add
lahf
add
add
sahf
add
arpl
add
fiadds
pushf
mov
jb
add
faddl
xchg
add
add
in
add
data16
out
hlt
mov
add
cmpsl
in
add
addl
push
nop
push
les
push
popf
lds
pushf
add
jle
rolb
jbe
add
add
pop
leave
ret
push
push
push
push
push
push
push
push
call
test
xchg
add
lahf
xchg
add
add
jle
add
push
popa
add
add
add
rolb
mov
jb
js
push
add
add
add
icebp
add
xchg
loopne
add
xchg
add
lahf
add
mov
cmpsl
mov
add
xchg
mov
lea
pop
mov
add
push
add
shr
sub
lea
pop
push
push
push
push
call
pop
add
loope
lcall
add
add
ljmp
imul
lock
push
add
hlt
shll
aam
add
cmpsl
add
ret
add
jo
add
add
mov
pop
roll
lods
lahf
lret
pop
add
nop
add
add
mov
mov
mov
add
push
mov
nop
add
xchg
jmp
out
add
sti
loope
fsubp
mov
cmpsb
out
cld
lea
pop
push
push
push
xor
xor
pop
push
push
inc
sub
add
pop
mov
push
lea
push
call
mov
mov
add
add
add
add
push
add
add
jecxz
pop
add
mov
add
pop
aam
out
les
add
add
add
mov
add
mov
jp
add
stos
add
jmp
mov
add
lock
add
add
add
popa
lea
cld
lea
pop
push
pop
lea
push
push
push
push
push
push
push
call
add
add
xchg
shlb
add
int3
mov
add
jp
fdecstp
divl
add
arpl
cmpsb
repnz
jnp
test
pushf
shll
add
js
push
test
add
test
loopne
add
movsl
pop
cmpsl
add
add
mov
add
add
mov
lea
pop
sub
push
xor
inc
ror
pop
mov
push
push
call
mov
mov
hlt
add
test
add
pop
sahf
in
add
add
add
sbbb
mov
jbe
add
roll
mov
cli
pusha
cltd
add
add
add
add
push
add
hlt
movb
pusha
cbtw
out
enter
sarb
fs
add
add
add
mov
lea
pop
shr
push
sub
inc
pop
add
push
sub
rol
rol
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
clc
jmp
mov
les
add
add
fiaddl
movsb
bound
loope
jmp
subb
add
add
add
jmp
in
xchg
faddl
pop
push
mov
add
rclb
stos
add
mov
add
in
add
mov
std
mov
add
xchg
add
int3
mov
lea
pop
add
pushl
push
push
push
call
test
add
insb
scas
test
push
movsl
xchg
jecxz
add
add
xchg
add
add
ret
add
push
jbe
xlat
cwtl
lds
mov
add
pop
mulb
add
add
add
add
mov
pop
add
add
cltd
mov
lea
pop
popl
mov
push
lea
sub
shl
pop
add
push
push
push
call
add
filds
in
cmpsb
add
xchg
js
cmpsb
jge
repnz
add
add
arpl
js
add
add
mov
jge
add
cmpsl
add
iret
outsl
int3
add
xchg
push
scas
popl
roll
mov
add
add
cmpsb
scas
incb
add
call
add
add
pop
xor
lea
mov
push
push
push
lea
push
push
push
call
faddl
mov
pop
add
pusha
iret
fiaddl
mov
movsb
std
scas
aad
ret
cwtl
add
mov
loop
add
lds
pop
mov
add
add
lret
or
add
add
pop
add
mov
add
add
cld
push
lea
add
push
mul
jno
add
loope
mov
lea
pop
add
xor
call
push
push
push
lea
push
push
push
push
call
jno
add
cmc
add
add
in
js
scas
js
add
push
imul
xchg
add
mov
xchg
je
out
pusha
add
add
jl
add
jbe
add
mov
sti
xchg
mov
jl
mov
mov
in
addl
mov
rolb
mov
addb
les
clc
pop
mov
add
add
mov
lea
pop
add
push
sub
ror
pop
nop
push
push
lea
push
push
push
call
fcompl
add
jns
mov
je
popf
add
add
add
push
xchg
mov
xlat
lock
clc
mov
jbe
nop
popa
push
cmc
add
enter
shrb
add
data16
cltd
mov
xchg
add
pop
lods
push
add
int3
out
add
add
xchg
test
test
arpl
nop
cmp
je
push
push
lea
push
push
push
push
push
push
push
call
sti
mov
add
fxch
add
mov
add
jnp
add
add
cmpsl
add
jl
add
add
jo
mov
cmpl
cmpsl
cld
js
add
add
mov
add
mov
jmp
jmp
push
add
jl
cmc
add
loopne
push
add
add
out
mov
subb
and
nop
push
ror
add
pop
nop
inc
nop
push
push
push
push
lea
push
push
call
add
cwtl
add
push
mov
add
add
add
mov
add
out
add
cmpsb
mov
add
call
jae
add
out
aad
pop
addl
add
pop
insb
add
add
cmc
fs
add
add
add
lahf
pop
mov
mov
lea
pop
nop
push
sub
pop
cmp
jb
push
push
lea
push
push
push
call
iret
call
cmpsl
out
add
add
add
add
xchg
aam
add
lods
fadds
pop
pop
add
imul
add
imul
ja
popf
fldcw
roll
flds
mov
popa
int3
push
mov
push
mov
test
add
add
std
fildll
jnp
in
add
jge
std
imul
add
bound
add
add
add
mov
lea
pop
xor
push
push
call
mov
add
add
add
into
mov
loope
jnp
add
repnz
int
stos
add
add
cli
jmp
add
add
add
leave
add
jle
fcmovu
jmp
testl
add
js
cld
mov
add
pop
shl
cmc
push
add
cmpl
int3
lea
pop
jmp
mov
push
lea
push
push
push
call
push
insb
stc
add
jae
cmp
jge
in
add
fs
cli
xchg
mov
roll
pop
push
loopne
mov
out
loope
addr16
add
add
add
fstpl
jae
add
lock
stos
add
sahf
insb
int3
nop
fiadds
iret
add
faddl
test
add
in
add
add
add
pop
lret
in
add
pop
add
push
push
push
push
push
lea
push
call
cmpb
cwtl
add
add
jbe
add
jno
cmc
lea
add
mov
push
out
cltd
add
bound
shr
idivb
fldt
xchg
enter
xlat
iret
pop
pop
add
push
lds
add
popf
add
jge
rol
shrl
movsb
mov
mov
lea
pop
movzwl
push
rol
ror
pop
mov
add
mov
push
push
call
add
test
test
scas
into
jnp
hlt
jbe
mov
add
ja
add
pop
add
data16
push
add
add
mov
loope
add
lods
add
add
data16
ja
add
in
add
add
js
push
add
add
loope
cwtl
add
xchg
loope
add
add
add
mov
lea
pop
xor
xor
shl
push
lea
rol
dec
inc
pop
xor
push
shl
pop
shl
xor
shl
push
push
push
lea
push
push
push
call
mov
add
add
mov
mov
push
mov
mov
add
mov
add
xor
aam
xchg
add
mov
mov
pushf
add
cmc
rorb
stc
add
cmpsl
xchg
cmpsb
repnz
add
push
add
add
add
add
add
fldenv
mov
lea
pop
xor
push
shr
lea
pop
mov
push
add
rol
shr
sub
pop
add
pop
push
dec
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
aam
add
xchg
out
test
js
mov
add
cltd
int3
jb
repnz
popl
andl
add
call
lods
add
mov
add
jns
add
add
push
lcall
add
fsubl
add
add
int
add
pop
cmpsb
mov
lea
pop
pop
pop
push
dec
pop
leave
push
inc
shr
lea
pop
ret
push
push
call
loope
add
test
scas
mov
add
shrb
into
add
in
add
loope
in
aad
mov
lea
mov
mov
adcb
add
lds
mov
lret
mov
testb
mov
jae
jns
lret
js
in
jge
mov
add
shlb
pop
add
pop
mov
fcoms
or
push
push
push
push
call
aam
add
add
add
mov
add
lds
fiaddl
test
add
pop
add
lret
add
pop
add
out
in
xchg
jb
pop
pop
add
add
pop
addl
add
stc
add
add
imul
sbb
xchg
xchg
bound
mov
mov
add
mov
bound
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
call
add
out
add
add
add
add
popf
add
add
pop
mov
jmp
add
add
add
push
add
mov
rcrb
outsl
int
add
mov
add
add
add
std
iret
int
fiadds
test
out
in
pop
add
out
jno
cld
lea
pop
push
push
rol
sub
pop
push
push
push
push
xor
xor
inc
pop
mov
push
not
shr
pop
mov
mov
push
lea
push
push
push
call
push
add
xchg
add
std
jecxz
shll
mov
jo
out
enter
add
mov
xchg
lock
lds
push
ficoml
int3
arpl
add
test
popl
push
aam
popf
add
mov
scas
add
data16
add
jbe
mov
jbe
push
add
add
add
adcl
cltd
aad
add
sar
add
mov
lea
pop
test
je
mov
push
push
call
add
fists
pop
push
add
loope
rorl
lea
rcrl
add
addb
xchg
fwait
add
jmp
add
test
lret
in
add
outsl
add
fwait
mov
fwait
pop
mov
mov
lret
imul
scas
lock
fstpl
loop
add
add
add
fmull
testb
ja
add
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
add
add
add
jo
icebp
add
js
mov
push
stos
in
mov
in
mov
hlt
cli
push
add
testl
add
mov
add
jbe
add
add
add
pop
add
add
mov
sahf
add
add
icebp
push
fdivr
add
add
add
mov
test
mov
lea
pop
mov
mov
inc
push
inc
rol
pop
cmp
je
test
je
push
push
lea
push
push
call
add
add
add
movsl
push
rorl
lods
lahf
imul
lret
mov
mov
add
add
add
ljmp
leave
mov
add
xchg
add
add
cld
popl
push
out
fwait
xchg
push
push
les
addl
add
sbbb
add
add
add
stos
aad
add
mov
lea
pop
mov
inc
cmp
je
push
shl
sub
pop
test
jne
xor
push
push
push
push
push
push
lea
push
push
call
pop
add
jle
add
add
add
add
ret
mov
jle
mov
icebp
fwait
jecxz
add
add
loopne
bound
xchg
jnp
add
aam
fwait
push
fadds
add
mov
add
mov
add
je
add
loope
addb
mov
in
negl
addl
mov
lea
pop
pop
pop
pop
push
shr
pop
pop
leave
push
shr
pop
ret
mov
push
add
pop
inc
cmp
jne
lea
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
push
add
xchg
testl
pop
push
in
flds
js
in
pop
push
cmpb
add
push
add
add
mov
push
jbe
hlt
add
add
add
loopne
add
jl
stos
add
add
add
sar
scas
add
mov
mov
add
int3
lea
pop
mov
push
pop
test
je
mov
push
lea
push
push
push
lea
push
call
add
add
cli
add
loop
add
lahf
push
jge
add
push
movl
popf
nop
mov
imul
add
add
add
add
imul
mov
push
add
ja
mov
hlt
adc
add
cli
popf
add
testl
add
add
mov
cltd
add
hlt
lea
pop
add
push
push
lea
push
push
push
lea
push
call
add
add
mov
add
add
addb
add
xchg
rcrl
mov
imul
add
icebp
add
loop
add
add
add
push
push
fiadds
mov
loope
arpl
add
add
jne
imul
pop
add
xchg
xchg
mov
test
push
add
add
mov
in
hlt
lea
pop
cmp
jne
mov
test
je
push
xor
pop
mov
push
ror
pop
add
push
lea
push
lea
push
push
push
lea
push
call
add
shll
popf
out
out
mov
push
mov
mov
add
add
ficomps
js
mov
into
add
add
push
mov
in
bound
add
mov
imul
movl
int
add
mov
push
pop
add
popf
mulb
mov
lea
pop
cmp
je
jmp
push
add
rol
pop
xor
pop
push
push
call
add
add
jp
mov
loope
pop
imul
push
rcl
add
add
push
ja
mov
add
add
outsl
pop
cmpsw
add
mov
add
int
test
add
arpl
insb
int3
add
mov
add
push
mov
out
add
add
add
cmc
add
mov
add
clc
add
pop
pop
push
sub
rol
xor
pop
pop
pop
leave
push
rol
shr
pop
ret
lea
push
push
push
call
add
add
movsb
hlt
add
shrb
mov
add
add
add
add
add
pop
in
fiadds
mov
gs
add
mov
cmpsl
add
add
add
scas
add
andl
add
roll
loopne
outsl
flds
mov
add
add
add
std
pushf
mov
lea
pop
pop
pop
pop
push
pop
pop
leave
push
dec
rol
add
pop
ret
mov
push
lea
push
call
add
jo
rcll
jb
mov
test
add
jbe
jno
add
add
gs
add
ja
pushf
in
xchg
lods
add
sahf
mov
add
fwait
add
fildl
mov
jp
test
aam
stc
rolb
icebp
pop
add
popa
add
pop
lcall
loop
add
imul
mov
mov
add
aam
bound
pop
pop
push
push
lea
push
push
push
push
call
add
pop
cld
les
gs
data16
roll
add
cmc
sti
add
add
popa
add
add
add
test
add
xchg
mov
xchg
add
data16
out
add
mov
add
mov
lret
mov
add
fcompl
int3
lea
pop
pop
push
lea
rol
rol
pop
pop
pop
leave
push
shr
not
pop
ret
rol
push
push
push
push
lea
push
call
out
add
add
pop
add
add
lcall
add
lahf
sti
mov
in
add
cld
out
add
mov
mov
add
add
add
jl
push
xchg
pop
add
add
lret
out
sti
pop
mov
add
leave
mov
jge
add
lahf
out
add
jns
add
fisubrs
adc
rol
push
lea
push
push
push
push
push
push
lea
push
push
push
call
jge
cmpsl
push
mov
jo
add
sti
fstpt
nop
add
pusha
xchg
out
push
test
les
fidivl
add
lahf
xchg
add
add
jns
lods
nop
fisubl
push
scas
xchg
mov
add
fwait
add
addr16
fadds
aam
add
mov
stos
add
mov
mov
lea
pop
xor
inc
cmpb
jne
push
dec
dec
shl
pop
ret
adc
and
outsl
and
out
jno
pop
and
outsb
and
sub
jno
ret
and
scas
and
push
and
mov
jno
push
cmp
adc
jno
add
add
adc
repz
xchg
outsb
adc
mov
inc
in
imul
dec
xor
fmuls
and
inc
fdivs
aaa
push
mov
dec
mov
xor
jne
in
pop
mov
cmp
xor
test
cmp
outsb
negl
arpl
ret
loop
loope
dec
loop
and
ds
mov
sub
aas
pop
xchg
outsl
pop
jnp
push
pop
cli
lret
push
lods
sub
ffreep
xchg
mov
fadds
jo
xchg
lods
movsl
lock
or
inc
addr16
mov
jo
sarl
into
push
and
test
xor
movsl
mov
je
cmp
mov
adc
mov
bound
popa
mov
call
sub
dec
pop
push
daa
imul
gs
fwait
or
or
stc
dec
cmp
and
jge
es
in
adc
in
pop
sti
call
push
cld
jns
xchg
inc
data16
cmp
jle
inc
lcall
push
jp
mov
fcmovnbe
and
lea
push
dec
sahf
lret
fdivs
xchg
pop
int3
cld
icebp
popa
dec
sbb
adc
mov
and
or
ljmp
dec
adc
sub
lock
sbb
repz
mov
idiv
lds
loope
pop
ds
jge
mov
inc
mov
push
and
sbb
insl
fwait
neg
jle
xor
sbb
aad
fsts
aad
adc
pop
inc
cmp
test
push
inc
and
test
stos
in
scas
lds
pop
push
dec
or
daa
jl
xchg
push
bnd
jnp
fldcw
ror
mov
outsb
lret
lahf
lcall
sahf
pop
insb
adcl
outsl
xor
xor
fmuls
cmp
add
aam
outsl
dec
dec
push
mov
cmp
jne
push
ficoms
xchg
out
push
cmp
or
into
push
push
iret
xlat
jo
inc
adc
aad
jb
int3
xor
xor
jle
movsb
daa
sub
xor
cli
iret
int
jnp
inc
add
mov
dec
sbb
sbb
leave
inc
lods
sub
syscall
cli
test
js
pop
fadd
jnp
loop
or
ret
fcomi
lcall
ljmp
cmc
pop
fcomp
test
pusha
cmp
xchg
std
xchg
add
inc
mov
lahf
mov
xchg
add
and
popa
adc
push
adc
pop
in
je
loope
mov
mov
outsl
or
jmp
mov
repnz
loope
push
add
rcrb
push
pop
cmp
lahf
fs
scas
mov
leave
dec
pushf
pop
pop
lret
int
movsb
sbb
xor
cltd
sub
push
xchg
icebp
and
push
in
hlt
pop
imul
ja
in
inc
insl
jno
cwtl
or
nop
insl
scas
data16
push
mov
lea
push
cltd
xchg
lods
fstpl
sti
xor
cmp
mov
insl
inc
stos
lods
sbb
fbld
bound
lret
sti
fidivl
lcall
xor
test
loope
aaa
cwtl
rcr
stos
pop
xor
orl
xchg
dec
jmp
add
repnz
push
push
dec
push
dec
aam
jne
xchg
push
lea
aaa
add
sub
inc
fistl
dec
and
adc
adc
pop
mov
int3
andb
jg
sub
pop
mov
sbb
inc
pop
aad
lods
add
fdivl
add
scas
mov
stos
mov
adc
pop
xchg
xchg
cmp
stos
jb
pop
bound
cld
inc
xchg
mov
or
jae
push
pop
add
fdivrp
fcoms
inc
fmulp
xchg
xor
fnstsw
aad
enter
mov
js
loope
dec
fwait
pop
xor
lock
ss
push
sbb
and
add
inc
xlat
add
xchg
push
inc
cmp
ja
push
add
decb
ficoml
lcall
das
lahf
ret
popf
xor
dec
popf
xchg
sbb
mov
mov
mov
inc
es
lods
jne
pop
adc
sub
xchg
mov
inc
outsl
add
add
pop
xchg
xchg
pop
mov
mov
divb
jno
inc
in
cmp
fadds
jp
lea
add
inc
shll
or
ljmp
pop
and
push
repnz
xor
fadd
mov
fs
addr16
pop
mov
push
call
pop
clc
js
mov
push
repz
jp
scas
icebp
push
sbb
outsl
cmp
inc
mov
push
or
fdivrs
sub
mov
sub
aam
lods
jle
jge
add
cmp
rolb
int
ljmp
outsb
dec
sub
fwait
scas
ficompl
xchg
mov
dec
adc
cwtl
or
cmp
ret
call
xchg
fdivl
out
sub
and
and
push
ljmp
ret
enter
jae
or
add
inc
call
push
pusha
outsb
aaa
lods
cmp
pop
iret
sub
jp
mov
orb
and
pop
loope
test
stos
lcall
adc
mov
les
test
cltd
lret
or
enter
outsl
jg
add
subl
int3
and
xchg
js
sbb
ror
cmp
dec
xlat
mov
loop
dec
push
int
push
inc
fwait
addr16
inc
sub
push
cmp
in
mov
pop
fimuls
mov
jno
popa
push
testb
aaa
jecxz
pop
mov
push
mov
aas
std
dec
mov
sbb
cmpsb
lcall
sbb
iret
es
sbb
lcall
hlt
outsb
push
dec
xor
xor
fxch
inc
cwtl
aaa
jb
dec
stos
hlt
dec
sbb
jno
shl
fcompl
jo
into
pop
popf
iret
das
aas
sbb
cs
add
cmp
nop
cmp
push
out
xlat
push
dec
fisttpll
fidivl
out
lcall
outsl
and
pop
pop
cmp
js
sahf
fs
push
in
arpl
rcll
repz
xchg
xor
lods
xlat
lcall
adc
xor
and
push
mov
mov
push
fsub
shr
inc
and
stos
loopne
aaa
shl
stos
loope
mov
mov
rcrb
insb
lcall
push
adc
xor
mov
lods
xchg
loopne
or
aam
mov
mov
pop
xor
movsl
insb
gs
xor
loop
sub
mov
or
dec
mov
pop
scas
xor
and
xor
push
and
fisubrs
pop
mov
xor
cmpsl
or
dec
inc
inc
mov
fmul
aas
mov
push
scas
xchg
xchg
sti
pop
stos
dec
pop
cmp
xor
adc
xchg
pop
stos
cmc
shr
mov
out
ret
mov
xchg
testb
pop
arpl
outsl
xchg
pushf
push
mov
sar
ds
ja
in
adc
inc
in
es
cmpsl
xchg
iret
enterw
cmp
or
xor
pop
hlt
filds
js
js
xchg
cwtl
jb
das
rclb
ret
das
outsb
popa
int3
xchg
int
mov
fdivl
int3
and
insl
rorb
pop
insl
jmp
or
ret
cs
mov
xchg
lahf
dec
xlat
imul
dec
dec
inc
outsb
loop
push
pop
jne
subb
adc
or
mov
add
daa
mov
jp
in
mov
mov
imul
clc
cltd
mov
sub
mov
call
and
mov
cltd
mov
cmp
stos
dec
and
jl
pop
xchg
mov
inc
mull
sbbl
mov
outsb
sub
mov
jl
and
and
rorb
cs
cs
xor
pushf
push
cmp
in
jg
or
pusha
fistl
je
cld
or
sub
in
mov
enter
mov
mov
lahf
roll
sub
ret
push
mov
push
sbb
in
ficoml
fcoml
loop
xor
push
scas
cmp
or
lea
or
inc
fld
adc
lret
movsl
dec
imul
push
lcall
xchg
lea
cld
jle
mov
insb
pop
add
outsb
test
pop
sbb
lods
repz
mov
pop
xchg
push
fisttpll
cltd
in
fldenv
xchg
cmc
sub
adc
and
mov
xchg
sub
adc
inc
cmp
scas
pushf
xor
fadds
xchg
inc
int3
xor
push
in
mov
popf
fisttpl
push
mov
xlat
jno
lock
adc
cld
enter
aas
fcompl
je
xor
inc
jp
in
pushf
cmpb
pop
add
add
hlt
mov
imul
cmp
jg
dec
aad
mov
inc
inc
das
inc
sbbl
inc
lret
movsb
cmp
sti
out
popa
or
test
imull
sbb
dec
push
mov
mov
sub
mov
test
sub
or
or
pushf
jp
xor
in
add
into
sti
fstps
pop
int3
addl
daa
add
dec
sti
pop
fnstenv
cmp
pop
cs
jne
push
nop
adc
push
in
addr16
jo
mov
push
mov
xchg
stos
sub
hlt
sub
fs
in
push
push
jge
ljmp
repz
xor
inc
cmp
lock
popf
rclb
mov
pop
and
daa
or
or
out
dec
mov
jae
mov
mov
mov
insl
cmp
sbb
pusha
pop
xor
loopne
jb
pop
sbb
fs
clc
outsl
int3
push
std
aad
cmp
cld
mov
bnd
imul
add
arpl
loope
cmpsb
aas
loope
cltd
out
mov
fldl
and
jle
lds
sahf
xlat
mov
aas
movsl
sbb
shlb
or
arpl
xor
enter
das
mov
fisttpl
pushf
xor
nop
mov
hlt
dec
outsb
pusha
push
or
jg
pop
scas
inc
iret
imul
ret
xor
cmp
test
inc
dec
les
iret
jecxz
add
das
fildll
js
push
lahf
xor
lock
call
out
fs
push
sahf
pop
aas
mov
lret
scas
dec
and
sti
jnp
ud1
call
dec
loopne
or
addr16
repz
inc
movsb
xchg
aam
sbb
dec
dec
test
je
out
imulb
cmp
lahf
dec
das
rcr
adc
sti
inc
mov
mov
inc
xor
jne
gs
scas
mov
jne
and
ret
enter
es
mov
pop
in
lret
push
pop
imul
sti
sbb
lcall
xchg
enter
dec
lcall
out
sub
jnp
cmp
xchg
mov
andb
and
lahf
jge
or
adc
and
repnz
testb
xorl
out
lods
xor
xchg
shrl
arpl
fists
sbb
rorl
pop
ja
jp
decb
mov
fildll
pop
and
mov
iret
push
sbb
js
fstp
sahf
xor
mov
inc
xchg
xchg
fcoml
orb
pop
sbb
push
movsl
out
jecxz
cmpl
push
js
and
icebp
cmp
push
mov
adc
aad
xchg
ljmp
pop
push
test
inc
shr
cld
inc
in
jnp
push
jnp
jb
push
cmp
push
mov
insl
std
idivl
jb
hlt
jge
dec
popa
pop
stos
orb
sub
dec
rcl
imul
push
movsl
inc
mov
xor
dec
push
repz
ror
mov
and
leave
aaa
cmp
xor
insl
out
jl
in
out
negb
shrb
loopne
repz
dec
xor
in
adcb
mov
and
test
out
out
repnz
testl
push
scas
mov
inc
push
sbb
push
xor
cmpsl
dec
lret
xor
int3
push
mov
inc
pop
push
dec
fdiv
in
add
movsl
sub
loopne
add
inc
pop
scas
xchg
call
push
in
adc
cmp
das
fcom
jb
int3
jp
arpl
data16
mov
cmp
push
cwtl
daa
lea
fs
ljmp
sahf
or
jp
and
sub
inc
sbb
add
nop
lret
xchg
test
out
outsb
pop
fisubrl
push
js
jno
clc
out
movsl
jle
and
pop
cmp
rol
lret
push
idivb
dec
imul
in
rclb
xor
bound
nop
push
push
scas
fidivs
sbb
notb
aam
mov
jecxz
cltd
loope
push
or
rol
mov
inc
mov
pop
jle
int3
in
push
dec
dec
or
pop
inc
lret
inc
and
or
arpl
lahf
adc
and
fs
test
scas
xchg
xchg
shlb
inc
adc
and
cli
out
popa
call
mov
mov
inc
jecxz
int
mov
fistl
mov
in
fucom
jl
dec
and
xor
xchg
pop
ljmp
inc
in
ljmp
sbb
push
adc
loop
mov
loop
test
orl
inc
pop
mov
pop
xchg
jl
mov
dec
sti
cs
out
aad
pushf
pop
int
movsl
fnstsw
aas
neg
mov
ret
into
jmp
in
js
imul
sub
inc
push
mov
lds
dec
out
cwtl
jno
xchg
ds
or
mov
dec
movl
es
hlt
loope
or
inc
cld
sarb
push
repnz
push
sub
lods
and
aam
cmpl
fdivp
shlb
stos
push
movsb
outsb
pusha
insb
mov
dec
xor
mov
aad
xchg
movsb
and
ds
mov
fldcw
jno
mov
js
in
mov
cmp
push
sarb
mov
shrl
out
mov
dec
imul
sar
inc
adc
push
jecxz
jge
pop
imul
push
adc
adc
push
pop
mov
cld
dec
in
fwait
daa
leave
out
sbb
int3
in
or
insb
mov
mov
mov
push
push
jns,pt
subl
cmp
popf
and
test
adc
xchg
mov
sub
cmp
jp
lods
leave
ss
movsb
jge
pop
scas
push
pop
jecxz
movb
int
aad
fcoml
mov
sub
mov
xchg
clc
inc
mov
loopne
pop
add
dec
mov
sahf
sub
and
or
sub
push
mov
bound
sub
mov
dec
scas
cs
push
or
addl
gs
inc
inc
std
pop
cwtl
flds
out
pop
cs
les
dec
out
mov
mov
dec
mov
mov
leave
mov
fwait
test
inc
lea
out
cli
stos
shrl
loope
or
xchg
mov
cwtl
or
mov
cmp
xor
mov
fs
mov
pop
add
fimull
mov
mov
test
push
enter
xchg
mov
fcoml
fistps
outsb
and
lock
mov
lret
in
inc
sub
pusha
sti
push
mov
mov
pop
aaa
popf
repz
das
movsl
mov
add
mov
cmp
cmp
inc
shl
cli
fcomi
dec
pushf
dec
stc
gs
or
sub
xlat
out
mov
mov
adcl
fistl
mov
fidivl
loop
js
jnp
and
lret
push
jecxz
rcrb
shrb
ret
mov
pop
mov
or
or
mov
xchg
push
movl
popa
dec
in
dec
lock
cmpsl
sbb
mov
push
das
mov
sub
dec
outsb
ret
wrmsr
mov
dec
outsb
loopne
lods
out
lods
push
adc
out
repz
stos
and
jg
adc
push
mov
mov
xchg
movsl
es
jle
or
inc
mov
cmp
aaa
mov
jge
dec
outsl
xlat
mov
jl
mov
mov
fiadds
test
out
push
sar
mov
cmp
js
outsb
cmpsl
sahf
fldcw
rcrl
pop
aad
loopne
clc
push
iret
aas
sbb
lock
sub
imul
push
and
nop
cs
xchg
cltd
scas
lds
sub
jl
lcall
movb
mov
lods
add
cwtl
xlat
stos
sbb
adc
in
repz
dec
popf
scas
popa
movmskps
hlt
mov
xchg
push
ljmp
in
lret
xchg
cmp
add
or
push
inc
ds
idivb
and
lds
jae
pop
mov
js
adc
or
aaa
mov
lock
outsb
aad
push
les
das
mov
adc
aaa
aad
call
add
scas
adc
push
xchg
test
gs
out
bound
xorl
test
rcrl
mov
frstor
rcr
scas
gs
out
cmp
or
out
xchg
sbb
bound
shrb
mov
test
dec
mov
jne
rcr
sbbl
cltd
mov
sbb
jecxz
jge
push
fadds
cmpsb
test
mov
inc
lea
pop
ja
cli
cmp
test
mov
ret
mov
movb
lods
adc
push
mov
imul
pop
push
pop
ret
arpl
test
data16
dec
lcall
insl
pop
icebp
adc
inc
push
jecxz
xchg
adc
push
mov
cmp
jns
cmp
jne
lret
sub
add
fidivrs
push
pop
insb
jbe
push
int3
pop
arpl
insb
sbb
pop
push
and
pushf
mov
xor
push
sub
loope
adc
loope
fildll
sbb
imul
adc
addr16
lret
jle
add
pop
movsb
repnz
or
mov
jbe
push
sbb
dec
int
sub
arpl
jo
mov
mov
gs
sbb
rolb
repnz
fldcw
movsb
or
sbb
das
in
cmpsb
enter
fwait
xchg
xor
jle
and
xor
cld
mov
adc
jbe
sbb
and
jo
cmp
dec
sbb
and
hlt
fisubl
vpsubusb
sub
xlat
lret
xor
add
lcall
push
cmpsb
test
lret
int3
jno
xchg
push
stos
test
xchg
cmp
fildll
jnp
out
push
mov
or
adc
in
lods
fisubs
add
adc
xor
icebp
sub
insl
dec
cmpsb
testl
lahf
mov
fisubs
fstpl
scas
adc
adc
mov
jnp
nop
pop
mov
fwait
hlt
out
sbb
inc
adc
jmp
add
cmpsb
bound
cmp
enter
stos
bound
shlb
pushf
sub
loope
inc
iret
mov
cmp
mov
jb
inc
pop
jno
mov
aad
xchg
imul
mov
pop
das
pop
inc
or
push
enter
dec
in
dec
shr
xchg
adc
out
aas
addb
or
mov
mov
repnz
pop
or
aam
das
sti
sub
icebp
inc
dec
cltd
test
and
push
orl
push
push
lret
add
jl
mov
xor
jg
je
sbb
jl
mov
es
mov
popa
mov
inc
mov
es
mov
xchg
sub
jne
push
es
in
sub
idivb
imul
fwait
stos
sub
mov
xchg
test
imul
cltd
sbb
dec
nop
dec
jle
js,pn
cmp
insb
paddw
xlat
popf
arpl
fistpll
mov
lods
mov
pushf
xlat
pop
in
call
xor
call
mov
xchg
leave
out
or
mov
rcl
lods
lods
sbb
jo
mov
pop
mov
insl
leave
jne
push
pop
xchg
andl
xchg
scas
daa
movsb
mov
sub
add
gs
pop
cltd
fs
in
sbb
add
lds
daa
repnz
jge
fstl
dec
xchg
cmp
mov
xchg
mov
testl
lahf
push
dec
push
push
fmuls
imul
jbe
sub
or
push
jge
jmp
sbb
addr16
mov
outsb
cli
mov
lods
out
call
das
xchg
xchg
das
js
cmp
lret
sbb
sbb
pop
jae
fildl
jecxz
cld
rolb
and
in
je
outsl
shl
ja
int3
pop
icebp
repnz
loopne
add
cli
add
mov
ja
pop
addr16
xchg
in
mov
sub
shlb
xchg
mov
push
call
aad
addr16
out
xchg
insb
xor
dec
sbbl
idivl
mov
leave
icebp
mov
mov
fdivrl
jle
aam
xor
add
mov
push
cmc
clc
test
insl
fidivs
orl
inc
jne
int
iret
jmp
mov
mov
mov
test
fcomp
lahf
pop
xor
das
pop
pop
clc
inc
gs
add
repz
rorb
inc
sub
ret
adc
loop
mov
jecxz
mov
xchg
pop
sub
popa
icebp
jae
pop
cmp
aad
int3
ret
fwait
mov
enter
xor
mov
fsubl
int3
sbb
or
scas
xchg
adcb
sahf
add
jno
out
pop
sbb
push
jecxz
inc
fistl
pop
mov
sti
icebp
mov
loop
sahf
xlat
loop
xchg
dec
sub
ss
push
mov
push
shlw
rorl
push
aas
das
nop
test
push
mov
pop
jg
or
das
or
cwtl
cltd
int
or
cmp
out
jg
cld
cmp
outsb
dec
jb
push
dec
sub
cmp
shll
xchg
pop
sbb
mov
inc
div
mov
inc
mov
lock
add
mov
sub
sub
push
pop
add
in
movsl
inc
inc
rolb
xchg
in
pop
or
in
pop
mov
out
mov
or
pop
out
fwait
aaa
ret
rcrl
cs
mov
cmc
or
mov
lahf
dec
add
mov
andl
xchg
mov
adc
push
fisttpl
adc
sub
or
shll
add
mov
loopne
mov
idivl
pop
and
jno
jle
push
cld
sub
loopne
fmul
test
jmp
mov
jo
mov
mov
popf
fdivrs
cmp
cpuid
fcomip
cmpsb
mov
xor
jno
scas
inc
test
or
cmp
pop
popf
xor
jnp
cmc
xchg
xor
in
pop
and
dec
jbe
movsb
jecxz
in
mov
aad
mov
pusha
cmp
cmp
sub
xlat
mov
sub
ret
mov
xor
pop
fbld
mov
mov
fcomps
xchg
jo
dec
xor
sbb
repnz
lock
inc
push
pop
andl
rorl
sahf
rclb
enter
mov
mov
mov
ret
xor
ss
das
in
rcl
mov
inc
or
aad
shll
inc
and
mov
je
mov
leave
insb
mov
inc
arpl
imul
jg
fldl
push
pushf
jmp
and
add
lods
adc
jmp
in
mov
push
mov
cmpb
xchg
fisubl
int3
clc
rcll
fyl2x
insb
push
ret
addr16
or
cli
jns
xor
std
jne
test
test
mov
jne
clc
stos
push
xor
xor
or
jae
les
fmulp
das
push
push
dec
dec
sbb
inc
push
test
clc
sahf
popa
fidivrs
adc
cmp
call
sub
and
aam
cmp
push
shrb
and
insl
adc
sbb
cwtl
mull
xor
dec
stc
jae
dec
out
sub
out
xchg
repz
xchg
pop
add
xor
out
inc
add
inc
lods
or
mov
inc
jns
or
cmpsb
mov
repz
movb
cwtl
add
fstpl
addr16
not
and
inc
jg
in
mov
pop
lcall
jecxz
jno
push
pushf
inc
sbb
xchg
mov
cltd
test
cs
insl
push
mov
cmp
and
adc
divps
lock
negb
out
daa
mov
add
pop
mov
cld
sahf
sub
mov
sub
jo
and
inc
arpl
mov
data16
add
dec
jge
mov
dec
dec
and
std
jg
stc
cmp
loop
mov
xabort
lock
clc
movsl
dec
adc
xchg
xor
pop
js,pn
mov
pop
pop
mov
test
ja
fnstenv
and
and
mov
pop
andb
test
out
jmp
pop
sbb
adc
or
push
pop
cltd
jg
sbb
aad
adc
pop
inc
or
sbb
popf
mov
xchg
in
stos
and
repz
sbb
addl
icebp
jl
and
popa
xor
or
js
lock
mov
je
sub
inc
cmp
lret
les
decb
test
xchg
repz
mov
xor
mov
push
mov
sbb
outsb
push
xchg
adc
ret
cli
movsb
or
add
arpl
out
imul
cmc
fldl
cmp
add
sub
lret
mov
jnp
stc
fs
dec
xchg
movsl
sbb
outsl
in
call
enter
fidivl
inc
aad
into
pop
xor
push
clc
lods
dec
mov
test
jle
rorl
pop
mov
mov
dec
cltd
cmpsb
lds
dec
push
xchg
lds
xchg
mov
and
sub
hlt
add
stos
pop
subl
cmpsb
aad
xlat
scas
jmp
loopne
insl
inc
repnz
data16
mov
push
ljmp
dec
sub
push
jns
mov
jge
lea
out
pushl
pop
pushf
aas
int
scas
pop
daa
cli
pop
xchg
lret
sub
pop
enter
cld
std
push
insl
call
fmuls
push
xor
adc
stos
ror
cs
dec
push
cmp
mov
mov
mov
ss
popf
push
in
xor
dec
popa
cwtl
push
in
jo
jecxz
push
lds
add
nop
mov
and
or
sbbl
mov
add
pop
sbb
xchg
mov
fstpt
mov
fisttps
push
popa
ret
xor
out
ror
pop
fistpl
dec
jle
or
movsb
inc
test
jne
xor
lods
std
pop
or
repz
and
pop
mov
adc
out
test
fwait
imul
pop
cmp
cli
add
ljmp
iret
stc
arpl
mov
out
mov
andb
dec
inc
movsl
cltd
jno
mov
test
les
mov
roll
sbb
mov
iret
mov
cmp
icebp
imulb
gs
std
dec
divb
movsb
push
mov
inc
scas
cvtps2pd
push
stc
mov
jb
jecxz
sbb
fdivs
mov
inc
sahf
push
int
movsb
cli
xlat
syscall
inc
push
mov
jg
pop
inc
jmp
jecxz
stos
jne
insl
fsubrl
dec
sbb
lock
sub
push
pop
sbb
inc
ret
mov
lods
aam
sbb
ret
addl
push
sbb
loop
inc
push
inc
or
mov
pop
jnp
adc
repnz
jae
pop
mov
subb
scas
cmp
sub
lea
lahf
and
mov
xchg
push
add
cmp
int
inc
shr
add
fstpt
sbb
and
repnz
or
rclb
lock
mov
push
test
sub
orl
mov
jle
sbbb
or
stc
imul
add
arpl
sub
test
mov
pop
stc
out
cmp
mov
cmp
push
dec
fwait
mov
imulb
push
inc
jnp
adc
repnz
dec
pop
js
adcl
mov
push
or
jle
cli
shll
incb
xchg
xchg
popa
ficomps
bound
fisttpll
stc
mov
vmaxpd
sar
sbb
imul
mov
enter
mov
daa
adc
movsl
push
fcompl
cli
add
push
xchg
xor
jmp
dec
xchg
pop
mov
aaa
inc
mov
cmp
pop
andnps
mov
mov
lods
stc
xor
subb
lret
inc
xchg
pop
pop
inc
cltd
and
pop
push
mov
daa
cmp
mov
jmp
inc
jmp
push
and
je
ljmp
icebp
xchg
sahf
mov
xchg
cmpsl
inc
dec
stos
xchg
inc
insl
mov
cmpb
mov
test
inc
cmpsl
les
xchg
push
call
jnp
mov
inc
out
dec
fcomi
dec
das
lret
mov
ret
bound
sbb
bound
inc
stos
fwait
sbb
enter
fldl
in
mov
cmpl
dec
xlat
inc
cs
pop
dec
repnz
xor
nop
dec
pop
mov
es
out
test
pop
daa
xor
divps
lea
hlt
dec
xlat
add
aad
pop
pop
mov
ja
cmp
xchg
mov
mov
cmc
jno
out
pop
jmp
out
cmpl
add
outsb
xchg
repnz
mov
adc
aam
xchg
push
sbb
mov
dec
jbe
in
inc
dec
push
push
aam
dec
jp
out
test
std
lret
inc
pop
push
pusha
stc
xor
lcall
mov
jg
sbb
cmc
mov
xchg
ret
fcoms
adc
filds
cli
mov
pop
rclb
push
cmp
mov
fs
adc
imul
imul
sub
fisttpll
ds
or
pop
imull
push
adc
xchg
cwtl
xchg
dec
pop
cmp
es
adc
in
sub
cmove
jo
aam
mov
or
divb
xchg
and
push
out
adc
xor
cmpsl
xor
fisttpl
pushf
rolb
or
pop
pop
outsb
imul
shrl
pusha
and
mov
or
dec
mov
pop
addr16
in
or
cmp
cwtl
dec
add
mov
insb
sub
cs
add
xor
push
push
std
int
jl
adc
iret
pusha
repz
lret
and
aam
pop
lock
test
out
jo
arpl
clc
mov
xchg
jmp
out
mov
arpl
mov
push
sub
ds
push
hlt
push
cmp
out
pop
xchg
jecxz
jne
or
pop
push
mov
daa
mov
jno
sbb
add
cmpb
outsl
sbb
inc
dec
lret
dec
and
cmpsl
xchg
cmp
leave
mov
and
add
neg
stos
js
push
pushf
and
outsb
fiaddl
lret
xchg
daa
pop
sarb
test
sub
sbb
pop
cli
xor
lcall
in
fisttpl
jb
outsl
frndint
subl
xor
std
int
xchg
xor
mov
lock
add
mov
loopne
cltd
les
jl
xor
add
insb
xchg
and
xchg
sbb
shl
fcoms
add
loope
xor
or
fistpl
cmp
aas
pop
pop
insl
faddl
daa
jae
push
jb
pop
cmpsb
mov
inc
push
xchg
xchg
in
cmp
lahf
xchg
cmp
ja
sarl
sahf
xchg
repz
inc
or
xchg
subb
pop
clc
in
inc
lcall
inc
adc
std
call
or
jge
out
pop
push
jnp
cmpsb
push
fdecstp
xchg
into
mov
xchg
mov
jecxz
outsb
sbb
lret
jg
roll
or
xchg
outsb
mov
push
cld
pusha
shlb
mov
cmp
cld
mov
cld
hlt
lcall
pusha
int
bound
and
inc
jno
inc
jo
push
mov
jns
add
sbb
int
cmp
or
imul
mov
gs
xchg
data16
aam
in
mov
jae
xchg
shlb
mov
jae
sub
and
scas
out
outsb
inc
and
lahf
call
jmp
repnz
xor
mov
ja
jb
repnz
stos
test
inc
add
in
lcall
call
out
aaa
rolb
sub
cmp
fldenv
adc
jb
iret
mov
push
sub
inc
fisubs
ds
sub
dec
in
dec
lret
jle
divb
ds
stos
andb
mov
loopne
inc
or
sub
fadds
test
in
js
aas
loopne
inc
push
clc
mov
aas
lret
xor
push
aas
es
sub
leave
dec
cwtl
fcmovnbe
push
lock
xchg
das
and
xor
xor
pusha
shr
stos
and
in
sbb
add
aas
adc
js
push
sar
mov
adc
xchg
imul
fists
fnsave
stos
lock
mov
mov
ss
mov
imul
popf
ror
pop
loope
loope
xor
cmp
jecxz
out
dec
mov
cwtl
ja
xchg
gs
and
ljmp
adc
in
call
mov
mov
dec
fbld
dec
jae
pop
ljmp
in
xchg
jb
jg
adc
push
gs
out
shrl
cwtl
inc
in
cmpb
add
in
fs
add
xchg
sbb
pop
icebp
inc
xor
jmp
lea
inc
mov
adc
cmp
bound
mov
dec
pop
pop
loop
pop
pop
mov
ret
loopne
sahf
cmpsl
cmc
out
adc
cld
pop
daa
jmp
stos
int3
mov
lcall
adc
mov
mov
pusha
xchg
sbb
sbb
xor
mov
mov
into
adc
lcall
jg
lret
mov
fadds
mov
mov
es
cltd
xor
mov
jno
pop
xchg
or
inc
repnz
xchg
mov
xchg
sbb
lock
xor
je
cltd
xor
lahf
or
divb
into
add
xor
adc
fstpl
jmp
push
push
ljmp
lahf
adc
mull
das
and
test
push
push
fcompl
fidivrl
mov
mov
and
dec
adc
inc
push
xchg
pusha
fisubrs
sub
xchg
dec
loopne
add
lahf
adc
lds
std
jo
mov
repnz
aam
lds
jmp
dec
inc
setl
pop
pushf
cwtl
data16
jbe
xchg
inc
mov
or
leave
push
pop
push
outsb
add
push
sarl
mov
loope
xchg
mov
or
xchg
push
faddl
or
daa
lods
jecxz
dec
and
test
sbb
mov
js
push
enter
mov
out
popf
inc
cmc
mov
and
xchg
imul
ret
xchg
sbb
fwait
imul
ljmp
dec
imul
lret
pusha
sub
int
mov
and
ret
aas
mov
dec
scas
cwtl
fistl
test
rcr
arpl
cmpsl
sbb
stos
imul
push
idivb
nop
adc
jg
ja
cmc
mov
cmp
cmc
xchg
fwait
xor
fnstenv
dec
adc
mov
dec
out
dec
lods
imul
dec
scas
nop
mov
punpcklwd
ja
ret
jb
xchg
mov
mov
jnp
or
push
sti
rcrl
cmp
out
cltd
xchg
sbb
jnp
neg
std
and
mov
inc
inc
test
leave
xchg
sbb
testl
mov
jnp
sub
loop
xchg
orl
inc
and
pop
xchg
fisttpl
fstpt
cltd
pop
test
sbb
push
stos
cmpsl
fstl
lock
cmp
icebp
pushf
adc
xchg
iret
mov
push
out
scas
inc
cwtl
or
data16
mov
fwait
cwtl
in
int
mov
jecxz
pushf
xlat
add
sbb
add
xor
jbe
sbb
jge
push
inc
mov
subb
cmp
jmp
pusha
mov
loop
loopne
and
jp
cwtl
push
inc
mov
cmc
int
add
mov
jae
jno
and
pop
push
sbb
mov
sahf
push
or
adc
orl
xor
mov
mov
add
pusha
in
stos
mov
addr16
scas
mov
imul
subl
popf
mov
sbb
mov
shlb
or
jae
or
in
out
outsl
dec
enter
scas
fwait
test
cmc
adc
push
test
addr16
push
in
adc
jno
push
jge
mov
out
sub
mov
cmp
dec
xor
ds
inc
subl
sub
inc
push
or
cmp
sti
int
xchg
cld
sub
testl
sub
or
lahf
test
jns
adcb
and
push
jmp
mov
and
adc
fcoml
sub
sub
xchg
mov
mov
jmp
push
push
mov
lret
fldt
movsl
leave
mov
imul
scas
std
insb
lods
jp
std
jb
shrb
out
dec
and
insl
push
push
sub
cmp
sahf
jb
js
arpl
xor
push
and
aas
or
test
lods
ret
add
dec
push
out
jmp
dec
adc
or
in
outsb
popa
ss
or
in
mov
test
sbb
leave
xchg
sti
daa
int3
jp
push
hlt
insb
fnstcw
jo
dec
jle
xchg
xor
jbe
and
out
lea
leave
xchg
sbb
test
push
js
out
xchg
mov
fbstp
and
iret
in
insb
inc
sbb
mov
arpl
arpl
jg
dec
pop
lret
cmp
out
popf
sub
stos
pop
push
repz
cmp
ret
pushf
dec
ficoml
iret
in
mov
and
outsl
xchg
clc
dec
pop
mov
sbb
nop
jns
stos
mov
pop
fcomp
popf
pop
mov
rolb
and
prefetch
daa
push
sub
mov
scas
cs
xor
enter
xchg
sub
mov
sub
loop
push
lea
mov
lock
rcrb
mov
lahf
insl
mov
fmul
jg
ret
je
add
push
sahf
test
into
fsubrl
cmp
enter
push
in
adc
jp
clc
pushl
sub
xor
dec
lret
jne
add
orl
cmp
int
inc
clc
pop
cmp
push
xchg
rclb
fisubrs
in
and
push
imul
aas
jle
dec
pop
mov
push
push
sbb
insb
lea
inc
adc
pop
js
jg
lds
subl
mov
sahf
lahf
sahf
pop
pop
cmpsb
dec
xchg
popf
mov
shl
push
idivb
and
lea
push
imul
sub
dec
dec
add
cpuid
jo
insl
lods
imul
jbe
dec
jo
das
cmc
fidivrs
aaa
add
div
call
insb
jns
jbe
push
sub
hlt
cmp
repz
sbbb
popf
lods
jo
pop
dec
addr16
cmp
mov
cmp
adc
lahf
ret
inc
adc
ljmp
push
leave
cltd
inc
into
push
mov
jp
daa
push
and
js
jecxz
test
mov
in
add
add
jae
jno
mov
mov
in
lods
aaa
mov
call
js
in
scas
std
mov
adc
stos
xchg
jl,pt
xor
xor
pop
insl
aam
and
xchg
push
xor
out
xlat
in
add
jmp
pop
inc
js
pusha
outsl
mov
mov
les
xchg
inc
movsb
jle
jae
pushf
cmp
jmp
sti
cmpsb
mov
clc
mov
rcl
jp
mov
pop
and
inc
je
outsl
jl
pop
cmp
pop
sub
sbb
test
test
xlat
imul
xor
cmp
jecxz
loopne
fbstp
sub
ficoml
xchg
push
mov
push
cli
cmp
xor
sub
dec
int
stc
cmp
xchg
inc
xchg
lret
dec
adc
or
cmp
outsb
xchg
ficomps
pushf
add
cwtl
shrb
aas
push
mov
subl
mov
cmp
fsts
ljmp
jne
sbb
in
and
rcll
push
repz
mov
inc
inc
sub
xchg
lods
mov
sub
pop
lret
fstpt
insl
pop
sub
add
insl
leave
or
push
xchg
adc
or
add
cwtl
dec
into
jecxz
cmp
test
mov
add
mov
pop
push
pop
mov
and
add
out
dec
jns
dec
hlt
push
mov
leave
fninit
int3
jp
mov
cld
push
inc
and
sarl
mov
shll
fadd
imul
out
mov
dec
repz
mov
push
mov
cmp
inc
push
in
clc
xchg
jge
jns
push
pop
cmp
pop
cs
mov
jae
sub
push
lds
outsb
fcmovb
pop
xchg
in
fadds
dec
dec
lahf
and
jl
cmp
mov
das
mov
xchg
xchg
mov
test
and
adc
into
inc
gs
and
adc
add
add
scas
fwait
bound
daa
dec
sub
fistpl
in
jbe
pushf
arpl
push
test
out
std
cld
fscale
cltd
jge
scas
mov
xorw
movsb
hlt
inc
pop
out
stc
sbb
and
jno
dec
cmp
fcoms
ljmp
icebp
xchg
pop
loop
sub
test
rclb
es
cld
outsl
insl
adc
jg
jnp
sub
outsl
sahf
pop
pop
cmp
sub
push
and
xchg
add
and
jno
push
insl
ja
add
lahf
roll
mov
imul
push
pushl
cltd
and
or
aas
or
adc
sub
and
outsl
mov
inc
jle
mov
imul
add
testb
imul
sbb
insb
or
dec
arpl
jb
mov
sahf
iret
fsubl
ror
fmul
mov
jmp
sahf
jecxz
lds
jl
add
xchg
aad
js
mov
lahf
aad
iret
cld
ret
and
roll
push
sbb
les
or
add
dec
jo
sbb
add
mov
push
xlat
or
cmp
divb
test
and
mov
mov
dec
lods
lret
loop
pop
rorb
test
stc
or
pop
sbb
arpl
cli
mov
inc
out
push
fwait
dec
imul
mov
popa
adc
out
call
add
lods
das
sub
les
xchg
mov
or
imul
lds
test
test
orb
or
push
pop
lds
fnstenv
mov
shlb
jl
arpl
addr16
fs
pop
push
cwtl
sub
fcompl
movsb
lods
aas
and
lods
notb
jb
or
inc
mov
stos
movsl
dec
sahf
jb
outsl
sub
call
mov
mov
cmpsl
inc
cld
fs
pop
inc
mov
mov
bound
ds
lds
hlt
insb
adc
adc
cmp
cmp
sub
sbb
or
punpcklbw
divb
mov
lahf
lahf
push
cmp
test
jnp
sub
insb
xor
fldl
stos
dec
ficomps
sbb
in
and
and
lods
ss
insb
pop
push
divl
lock
sub
pop
lret
mov
lret
lcall
mov
cmpsl
mov
stc
rcll
aas
lret
sub
jmp
inc
sbb
insl
cmc
call
pop
or
fdivr
and
aam
sbb
fs
aas
scas
fsub
mov
ljmp
add
mov
loope
scas
out
cli
loope
in
mov
add
xor
mov
test
jg
pop
add
fnstcw
lock
into
icebp
xchg
mov
jno
mov
mov
xchg
ss
lds
mov
out
mov
lret
cltd
pop
inc
mov
mov
or
cmc
dec
jmp
imul
std
pusha
cs
xchg
les
mov
aas
aas
pop
xlat
insb
jo
bound
cmpsl
xchg
jmp
lods
mov
adc
push
or
inc
int
sbb
dec
or
jmp
add
shll
rorl
mov
aas
aad
sub
das
add
mov
jecxz
add
stc
imul
push
or
mov
cmp
or
ret
fstl
aaa
mov
push
xchg
frstor
adc
cmpsb
lahf
movsl
jmp
cwtl
add
cmpsl
inc
cmpsb
cmpsl
sbb
sub
push
ret
xor
incl
jo
mov
mov
jne
int
adc
xor
inc
call
hlt
jne
dec
loop
push
sbb
mov
jnp
dec
xchg
pop
sub
jo
mov
sbb
pop
in
clc
loopne
or
pmulhw
aaa
or
lds
fstpl
imul
jbe
aad
in
lods
xor
mov
hlt
addr16
gs
scas
xor
push
popa
ja
mov
iret
repz
daa
pop
lea
inc
pop
jmp
and
rorb
mov
imul
jg
lea
je
gs
sub
push
adc
daa
mov
bound
sub
addl
call
adc
ficoms
hlt
or
scas
cmp
leave
movb
jne
iret
stc
test
add
repnz
jle
inc
inc
cmpsl
mov
bound
lea
lret
gs
pop
dec
stc
in
mov
stos
push
push
stos
cmp
and
jmp
pop
hlt
lret
fstl
mov
out
pop
into
ficompl
mov
jb
sub
cli
movsl
ljmp
pop
iret
xor
sbb
jmp
sub
pop
jmp
cmpsb
xor
mov
fisubs
movl
jp
adc
and
out
fimuls
mov
jmp
sub
addb
inc
ljmp
adc
stc
sahf
lret
orb
jae
mov
cmp
aam
clc
adc
movsl
dec
xchg
and
inc
push
in
dec
fmuls
pop
imul
jnp
push
jns
mov
loopne
test
mov
mov
sbb
or
jmp
mov
fwait
jbe
push
cmp
movsl
xchg
jnp
xor
neg
xchg
jp
jb
pop
pop
fcom
sub
or
cmpsb
sbb
stos
mov
loopne
xchg
movsl
pop
loop
js
inc
out
or
jno
mov
xchg
pop
std
push
std
push
cwtl
pushf
cltd
xor
adc
pop
sbb
clc
mov
add
mov
in
adc
popa
out
in
mov
test
inc
scas
jmp
sahf
dec
lods
hlt
loopne
push
bound
mov
jnp
mov
inc
mov
push
jg
pop
adc
or
aam
pushf
xchg
jnp
mov
push
pop
or
sarl
push
mov
adc
aam
xchg
dec
and
cmp
fs
jp
scas
push
das
sahf
imul
lea
mov
sub
adc
jbe
loope
test
sub
inc
cmpsb
xor
insl
jbe
pop
popa
pop
loop
out
ljmp
xchg
and
xlat
add
stc
adc
cmc
into
and
popa
pushf
xor
sti
call
dec
fs
ss
not
sub
dec
stos
jns
fistl
push
mov
mov
mov
push
inc
xchg
pop
js
pop
mov
cmp
push
xchg
add
loopne
imul
lods
inc
xor
scas
std
test
and
out
out
mov
call
jnp
int3
lahf
adc
sbb
in
lods
js,pn
cmp
mov
and
out
mov
adc
inc
popa
and
and
ss
push
inc
xor
les
xor
stc
in
movsl
mov
stos
sbb
sub
add
pop
lea
cmp
loopne
pusha
and
adc
scas
xor
int3
repnz
testb
push
mov
jae
adc
mov
in
cmp
cmp
mov
inc
lret
cmpsl
xchg
call
aad
mov
sbb
sub
dec
fisubs
adc
jne
jae
fsts
pop
fistpl
fdivs
mov
leave
cmp
insl
jmp
mov
loope
mov
out
push
mov
xchg
fwait
mov
xor
hlt
loop
movb
loopne
adc
push
scas
notl
mov
jle
inc
ss
cmc
and
mov
sbb
jge
sbb
call
enter
jns
push
pop
leave
sti
push
int
lret
sbb
mov
rcll
es
jecxz
aad
jge
jp
adc
ret
jo
jp
jmp
pushf
jb
and
pop
dec
rorl
cmp
pop
das
add
inc
scas
adc
xor
in
jae
jl
cmpsb
or
shr
out
inc
testb
xor
dec
subb
pop
sbb
cmp
cld
pop
sahf
adc
leave
data16
sti
adc
xor
insl
mov
jg
mov
and
ret
int3
rorb
nop
mov
scas
add
fstpl
call
repz
mov
rcll
push
pusha
and
inc
mov
test
pop
mov
cmp
xchg
clc
jns
cltd
sbb
std
pusha
test
in
add
xlat
adc
outsl
xor
dec
push
loopne
sub
push
mov
jmp
cmp
jae,pn
pop
add
jle
sub
pop
out
sub
rcll
int
je
jecxz
lods
mov
sub
push
sti
enter
stos
mov
jno
mov
sti
in
scas
lcall
inc
inc
pop
test
dec
mov
mov
scas
addr16
mov
ret
pop
das
into
lods
call
cmpsl
push
rcr
lahf
sub
jmp
iret
pusha
hlt
nop
adc
push
jp
mov
dec
fildll
loopne
pop
outsb
sbbl
xor
out
das
push
fldl
xchg
outsb
ret
mov
mov
jle
mov
sbb
lret
pop
out
inc
add
jmp
sub
ljmp
in
add
icebp
mov
xchg
fimull
in
lret
and
push
icebp
clc
cmc
jecxz
insb
push
jg
xchg
sub
mov
xor
push
xchg
push
negl
fs
arpl
loopne
cwtl
fidivrs
mov
push
push
insl
push
xor
pop
mov
dec
push
jg
mov
pusha
pop
ja
inc
adc
xor
cmc
push
gs
jg
mov
and
jmp
inc
fcomps
or
inc
mov
jnp
decb
rorb
fistpl
cmp
test
jns
and
arpl
mov
rol
mov
xchg
cld
ds
fcomps
outsl
xor
dec
ljmp
sub
mov
pop
cmpsb
movsl
dec
mov
mov
mov
stc
mov
xorl
gs
ror
outsb
pop
jecxz
andl
ss
out
mov
mov
movsb
arpl
and
pushl
mov
sub
and
daa
cmp
sub
and
pop
stc
nop
add
insb
rolb
pusha
lahf
or
pop
sbb
cli
mov
div
test
les
insl
decb
bound
add
push
fimull
push
pop
pop
int
xor
mov
pop
outsb
sub
xlat
and
js
lret
xchg
sbb
out
sbb
pop
inc
sbb
roll
shl
sbb
stos
pop
jno
push
outsl
lods
out
pop
rclb
and
idivl
mov
pop
or
sbb
movsl
pushf
lock
push
lods
mov
dec
inc
or
mov
call
sub
sbb
adc
push
push
cmpsb
test
jmp
xchg
adc
ja
pop
cltd
jno
sbb
jge
int3
enter
fs
push
jmp
lret
out
sub
inc
divl
and
stos
clc
mov
popa
repnz
iret
sti
scas
stos
push
pusha
jno
sub
loope
push
imul
cmp
xor
mov
sbb
aam
mov
mov
addr16
scas
shrl
ret
call
push
sub
clc
shrb
sbb
iret
pushf
mov
sbb
push
add
in
bnd
sahf
push
or
out
mov
dec
push
cmp
ljmp
inc
jecxz
add
out
cmp
ljmp
sub
jnp
cmp
icebp
ret
pop
sti
inc
ret
fs
imul
fmul
mov
imul
mov
sti
jae
pusha
and
cmp
test
mov
mov
cwtl
inc
nop
cmp
mov
mov
out
inc
fwait
xchg
mov
sbb
nop
ret
inc
add
add
cwtl
cmp
push
lret
inc
lock
push
mov
mov
push
subl
negl
mov
mov
inc
pusha
pop
test
addr16
xchg
icebp
cwtl
ss
ret
cwtl
xor
xor
ljmp
aaa
cmp
insb
mov
or
cmpsl
xor
fistl
sbb
add
jnp
loopne
ficomps
scas
out
xor
dec
call
jno
jnp
and
push
lret
sub
mov
jge
dec
sub
add
je
testb
repz
mov
mov
dec
push
cmpb
sub
cltd
mov
ljmp
popf
mov
mov
jl
addr16
cld
jle
loop
in
notb
repz
xchg
sub
iret
in
sbb
ja
ret
mov
pushf
mov
insl
outsb
jae
jns
ret
pop
sahf
inc
daa
mov
adc
mov
cmpsl
push
sub
xor
scas
and
call
sub
insb
insb
pusha
and
mov
shll
outsl
xchg
adcb
adc
ljmp
pop
push
push
sbb
add
shlb
push
add
out
mov
jns
pop
js
das
add
lret
scas
add
lcall
sub
jno
negb
add
mov
aam
cmp
call
mov
stos
inc
xor
das
and
outsb
mov
in
mov
mov
lock
es
imul
lcall
sbbl
pop
push
xor
mov
mov
add
jns
sbb
jle
push
out
leave
jl
mov
inc
ds
jge
and
imul
mov
data16
jo
dec
aaa
mov
push
inc
cmp
mov
cmp
repnz
insl
jecxz
add
jmp
das
sahf
sub
fs
mov
mov
mov
xchg
fwait
dec
mov
movsl
lods
ja
xchg
or
mov
shll
adc
cltd
adc
repz
or
outsb
push
mov
sub
adc
xadd
xchg
mov
xor
mov
lds
popa
out
inc
cltd
push
lods
outsb
xchg
xchg
mov
addl
dec
adc
cmp
movsb
inc
arpl
fsubs
mov
adc
pop
xchg
lods
fnstsw
hlt
jecxz
pmullw
pushf
ss
jle
ror
lret
xchg
dec
mov
adc
into
push
mov
cmp
aad
ss
add
mov
aas
mov
test
mov
xlat
or
dec
lods
rolb
fdecstp
out
or
hlt
insl
mov
test
and
aaa
xchg
test
sarl
jmp
pop
mov
pop
dec
lcall
inc
std
arpl
mov
jl
test
jbe
sbb
int3
movsb
dec
aad
sub
mov
arpl
mov
sbb
in
insb
clc
stos
sbbl
mov
xchg
mov
std
lods
jnp
mov
sti
mov
or
lahf
pop
add
mov
adcl
mov
nop
stc
adc
add
in
adc
add
push
pop
aam
xchg
push
notl
add
lds
iret
mov
xlat
clc
cmpb
dec
jns
cmp
shr
jno
call
das
out
sub
popf
jmp
add
lods
add
add
jge
out
stc
dec
mov
int
das
fdivl
pop
cmc
iret
adc
adc
les
mov
cmp
push
outsb
and
ret
in
pusha
pop
hlt
pop
gs
std
in
into
add
repz
fwait
dec
or
lds
movsl
sub
jbe
les
mov
testb
cmp
sub
mov
std
subb
in
mov
loope
push
add
or
jbe
dec
and
lods
loope
lods
sub
inc
pop
adc
fistpl
mov
stc
cli
cmc
pop
pop
dec
lods
xchg
add
std
pop
pop
mov
sub
xor
mov
mov
popa
xchg
adc
push
test
push
add
sbb
nop
dec
frstor
testb
sub
adcl
sub
int3
mov
inc
xor
push
dec
es
inc
xchg
or
xchg
shlb
stos
jecxz
push
add
sbbl
mov
icebp
lods
and
lret
int3
negl
jbe
sbb
pop
mov
aam
pop
imul
inc
pop
aaa
call
xchg
mov
or
cmc
fstpl
push
or
addr16
pop
lret
icebp
rep
cmp
incb
mov
inc
adc
fwait
cs
popa
xor
xchg
cmpsb
mov
repnz
cmpsb
mov
cmp
mov
leave
arpl
and
cmpsb
xor
test
test
stos
add
insl
sbb
gs
pusha
lcall
push
in
pusha
out
mov
fmulp
repz
std
adc
pop
je
cmpsb
aad
bound
lret
pop
pop
lods
mov
xchg
sbb
jno
add
movsb
lgs
push
xchg
adc
stos
cld
scas
pop
out
subb
fwait
adc
in
xchg
lods
lret
mov
sub
mov
inc
lcall
out
sbb
imul
cmp
jo
bound
ficomps
add
xor
xchg
test
cli
aas
add
enter
inc
jns
daa
mov
mov
push
addr16
push
pop
cmp
mov
xor
fisubl
mov
stc
lcall
scas
push
aam
insb
xor
sub
clc
ret
clc
pop
mov
xor
xor
js
mov
sub
leave
in
dec
inc
lcall
lock
inc
inc
repnz
or
mov
loop
and
xchg
orl
scas
lds
xor
cmpl
mov
push
inc
mov
mov
mov
test
sahf
insb
add
stos
mov
mov
aad
fldt
pop
mov
add
cs
imul
stc
imulb
and
and
xchg
out
pop
xchg
mov
pop
loop
pop
ljmp
push
mov
xor
lds
mov
mov
test
mov
xchg
inc
add
jl
sub
call
inc
imul
arpl
dec
rcll
int
dec
aad
dec
fucom
repz
addr16
cmpsb
xchg
inc
mov
cwtl
ja
ds
loopne
sbb
pop
sub
and
mov
icebp
leave
aam
mov
data16
inc
mov
cmc
push
mov
int
enter
sbb
jge
jle
dec
dec
dec
xchg
shr
adc
lock
xor
mov
xchg
push
push
sub
jb
cmp
out
fbstp
insb
int3
movsb
je
mov
repnz
addb
jle
xchg
hlt
mov
gs
int3
leave
jmp
movb
mov
sbb
movsb
aas
out
jmp
cmp
mov
nop
dec
ror
pop
movsb
inc
sub
pop
jecxz
test
jecxz
mov
imul
xchg
ds
push
in
lock
mov
xchg
pop
fadd
xchg
cs
mov
inc
sub
adc
ljmp
out
cmp
or
mov
mov
inc
icebp
push
xchg
je
push
pop
lock
das
push
xchg
mov
lods
mov
push
push
and
mov
inc
mov
mov
jge
xor
stos
or
gs
push
bound
and
jle
sti
les
movsl
or
pop
scas
cmpsb
hlt
ljmp
daa
std
add
adc
fsts
gs
pop
cmp
leave
in
dec
sarl
jno
daa
jae
mov
fwait
mov
dec
jle
aas
scas
xchg
pop
sub
jne
popa
xchg
adc
cmpsl
jne
cmp
outsl
dec
gs
mov
outsb
shrl
out
push
mov
pop
or
cmp
mov
fmul
das
addb
mov
mov
fiaddl
push
cmp
lods
sbb
push
mov
fwait
push
pusha
es
adc
stc
iret
mov
push
sub
adc
adc
push
lret
fcompl
test
outsb
pop
sbb
out
mov
lods
repnz
jge
xor
out
pop
sub
cltd
out
in
imul
test
push
xor
repnz
incl
and
scas
mov
aad
scas
push
pop
or
pusha
pop
sub
mov
pushf
inc
outsl
dec
ficoml
add
pop
test
mov
loopne
sbb
clc
or
idivb
push
inc
in
sub
inc
cli
cmp
cmp
lret
pop
into
stos
mov
jnp
dec
shll
cld
stc
add
push
cmp
cmp
mov
dec
shl
cmp
xlat
mov
xchg
loop
mov
dec
ja
rclb
push
cld
cmp
xchg
cmp
enter
ror
pop
fcompl
mov
icebp
mov
inc
pop
add
pop
push
adc
sbb
jno
sysenter
inc
sub
add
jb
loopne
mov
sub
mov
cmc
movsb
sti
or
into
mov
add
imul
lret
aam
mov
arpl
or
cmc
mov
dec
loop
and
jnp
scas
cmp
dec
les
test
sbb
pop
rorb
add
mov
imul
sti
test
cmp
repnz
inc
pop
aas
js
test
xchg
pop
push
icebp
jecxz
rclb
pop
xor
ljmp
int
pop
push
fwait
lds
jns
mov
inc
jmp
pop
dec
jp
fcmove
jmp
cmp
mov
cmp
fstps
cmp
int3
ds
loope
fwait
or
bound
or
into
add
cmp
test
jnp
out
cmpsb
cmp
das
xor
push
add
jl
cld
jo
lds
cmp
sbb
lock
mov
nop
push
dec
mov
lods
xchg
xchg
xor
sbb
dec
push
cli
test
lret
and
in
dec
mov
sbb
call
mov
mov
xchg
cmp
adc
subl
in
xor
imul
ljmp
pop
cmp
ljmp
fsubs
mov
pop
iret
flds
pop
push
mov
or
mov
lahf
xor
jl
rorb
xchg
push
mov
cmc
push
adc
mov
popa
stc
push
icebp
aad
mov
pop
pop
dec
jno
jae
ja
sbb
jmp
ds
mov
mov
ret
mov
mov
fs
or
xchg
jbe
shll
pop
pop
xrelease
adc
pushl
insl
icebp
push
lds
jae
pop
sub
ficompl
imul
ds
cmp
addb
cli
xor
imull
mov
xchg
mov
push
in
enter
popa
mov
hlt
mov
lcall
fisttps
dec
or
mov
cmp
ljmp
nop
jne
cmp
mov
jno
and
mov
mov
xchg
enter
ret
clc
loop
push
test
cmpl
aad
xor
fdivrs
es
iret
or
popf
mov
rcll
mov
insb
push
sarl
icebp
cmpb
or
jl
test
mov
nop
popf
xor
adcl
lcall
push
call
data16
push
jne
out
or
xchg
pop
mov
test
js
test
push
cmc
mov
or
jnp
mov
lret
dec
pusha
and
shr
in
cmp
push
loope
iret
fldt
shrb
test
cmp
xlat
clc
lahf
stc
dec
aad
mov
popf
xchg
mov
push
lret
push
mov
aam
ds
sub
jb
rcr
jae
fldcw
xor
jns
xlat
scas
inc
xchg
iret
sub
mov
mov
test
lcall
mov
mov
test
imulb
jg
sahf
movsl
mov
test
call
adc
mov
enter
and
pushf
pop
imul
faddl
cmpsl
mov
iret
push
cmp
and
add
xchg
subl
inc
or
mov
inc
mov
adc
stc
xor
sub
outsb
jle
pop
stos
test
mov
add
negl
mov
notb
xor
jns,pn
xchg
cs
mov
shrl
call
stc
xchg
xchg
push
and
cmp
aas
sbb
out
shll
sub
sbb
inc
aam
cmp
lock
loopne
roll
cmp
jge
xchg
add
mov
orl
xchg
or
add
js
push
shrl
mov
test
cmpsl
arpl
fimuls
repnz
xchg
jbe
xor
cmp
xchg
stc
popf
cltd
test
pop
lret
ja
inc
push
mov
jbe
scas
lahf
xor
jle
bnd
mov
out
out
mov
cli
dec
pop
adc
loopne
or
addr16
subb
cmpsl
cmp
fisubs
mulb
pop
into
divb
inc
scas
jg
mov
inc
sub
nop
jno
mov
fcoml
pop
adc
xor
mov
cmp
lea
lods
mov
add
jns
dec
push
in
xchg
xor
pop
ret
jno
sbb
push
out
push
sub
gs
out
sbb
inc
fcmovnu
jno
icebp
sbb
jle
cmp
lods
jb
mov
fdivs
push
add
lea
sub
loop
stos
jmp
inc
dec
or
cmc
adc
das
dec
adc
inc
jbe
push
push
aaa
mov
arpl
jl
pop
jae
out
pop
xchg
sub
out
xor
jecxz
out
mov
in
fmull
or
lods
enter
push
add
sub
dec
jmp
rcrb
fwait
lock
outsl
aam
sbb
rorb
mov
xchg
sti
sbb
subb
mov
push
xor
ret
fstpl
xchg
movsb
and
int
fwait
mov
inc
inc
lret
insb
sbb
cmp
stos
adc
loope
lds
or
inc
lock
pop
adc
mov
mov
lcall
cvtps2pi
lret
mov
out
clc
je
mov
sahf
lret
cmc
mov
sti
mov
pop
and
sarb
mov
pop
and
mov
divb
jno
fdiv
imul
rcll
in
sub
fistl
outsb
cld
loope
sub
lock
or
jecxz
lahf
adc
inc
jae
repz
and
xchg
cmp
mov
into
xchg
jp
nop
lods
pextrw
push
mov
mov
cs
cs
mov
add
pop
fs
test
sub
in
into
xor
gs
rcrb
out
enter
dec
mov
xor
and
jnp
or
push
mov
cmpsl
push
cmp
lods
mov
dec
mov
lcall
cld
ss
mov
loopne
jns
insl
inc
mov
lret
loope
fisubrl
test
jbe
and
insl
imul
and
cmp
push
adcl
fstpt
lahf
jo
push
or
sub
rcr
xor
test
ds
jle
aam
stos
lods
jp
int3
into
fnstsw
hlt
or
test
neg
sub
stos
jno
add
pop
xchg
mov
jge
adc
mov
xor
cmpl
sub
pop
adc
mov
aam
ljmp
and
pop
hlt
mov
xor
dec
push
adc
add
icebp
jl
push
rorl
inc
imul
call
mov
jmp
sbb
inc
ror
cmpsb
ret
nop
dec
lds
or
cmp
fs
sbb
dec
jmp
lock
mov
mov
daa
add
cltd
jo
shlb
iret
push
mov
xchg
jne
mov
sub
xor
loope
shr
xor
test
addl
mov
dec
mov
andl
scas
cmovge
pop
cltd
dec
int3
jae
int
and
jne
outsb
shlb
pop
ret
mov
xor
cmp
testb
push
adc
insb
loop
cmp
imul
lds
movsl
push
pop
lds
pop
test
cltd
ss
xor
mov
push
jae
cmp
or
ljmp
out
dec
pop
push
std
mov
xorl
pop
jp
mov
je
popf
into
cwtl
dec
cmpb
xor
cmpsl
or
mov
push
repz
fnstcw
enter
test
adc
cs
call
inc
mov
mov
push
mov
add
loopne
imul
movsl
je
push
cmpsb
and
or
sub
push
jns
imul
pop
divb
stos
jge
or
push
and
sbb
push
xchg
sub
rorb
dec
add
int
and
enter
cmp
mov
repz
fs
insl
psllq
sbb
xchg
imul
repnz
inc
xchg
and
mov
lods
pop
scas
add
or
sbb
mov
popl
xchg
sub
scas
push
dec
aaa
pop
add
stos
jno
rclb
mov
daa
cld
sahf
pop
and
pop
pop
mov
mov
jo
in
int3
inc
cmp
fcom
aam
cmpb
shll
gs
test
push
loop
insl
xchg
xchg
roll
sbb
mov
test
repnz
rorl
inc
or
aaa
fisttpll
in
adc
ds
inc
stc
icebp
xchg
push
and
arpl
push
adc
adcl
ja
psubb
ds
sbb
test
xchg
dec
mov
xchg
sbbb
lods
push
push
push
ss
add
into
stos
cltd
dec
ja
in
ss
jecxz
stc
fcmove
mov
mov
stos
inc
inc
cli
adc
aad
sahf
push
lock
or
repz
jecxz
xor
push
sahf
mov
ss
cmp
sbb
xor
stos
js
mov
fwait
mov
icebp
pop
faddl
int3
js
and
and
int3
ret
into
stos
sbb
decb
aaa
mov
mov
pop
mov
nopl
aam
shl
jnp
sar
out
mov
xchg
jecxz
mov
pop
sbb
dec
or
sbb
iret
imulb
jne
lock
mov
jns
nop
imul
mov
and
push
mov
loop
sbb
aas
jp
pop
shl
nop
div
inc
out
jecxz
shll
cs
inc
lahf
ja
or
or
xor
pop
add
loopne
inc
call
bound
cs
mov
fwait
test
push
jecxz
or
cs
aad
mov
movsl
ljmp
cli
push
push
lret
shll
daa
mul
and
cwtl
cmp
rorl
sbbl
ret
dec
xchg
pop
mov
test
adc
sub
xor
sub
repz
mov
or
popf
cli
and
cmpsb
mov
negl
mov
outsl
mov
jecxz
or
xor
pushf
js
push
test
push
test
mov
adc
sub
pop
fidivrs
rclb
hlt
leave
enter
xlat
inc
jp
test
add
or
push
subl
mov
jecxz
ja
push
scas
insl
popa
mov
je
xor
add
sbb
push
in
icebp
xchg
nop
nop
int
icebp
add
jns
stos
stos
mov
outsl
push
sub
xchg
jmp
movsl
mov
test
jecxz
push
add
mov
jo
or
repz
jns
mov
push
adc
outsb
mov
aad
mov
fsubl
jg
xchg
imul
pushf
pop
push
sub
xchg
out
dec
xor
xor
fdivr
int3
stos
add
outsl
adc
aas
jo
imul
fcom
cmpsb
loop
sub
jl
faddl
outsl
add
subb
je
out
scas
add
and
in
jl
adc
jg
xor
neg
and
lds
sbbl
cmp
pop
adcb
push
stc
pop
mov
imul
test
dec
cmp
or
sarl
jb
movw
add
xor
call
sbb
push
xor
sub
mov
and
sti
sbb
xor
loopne
push
push
cmp
mov
push
and
cmpsb
or
sbb
aas
inc
mov
pop
fwait
xlat
mov
push
dec
std
mov
mov
lds
test
addl
or
loope
enter
stos
xor
fs
js
call
popf
mov
jb
pop
pop
xorl
mov
xorl
mov
dec
xor
or
and
jge
xor
add
push
adc
stc
loope
and
jns
sbb
pushf
cltd
adc
cmp
decl
dec
xorb
push
ret
mov
orl
sub
inc
test
cli
fisubrl
int
inc
test
cmpsl
sbb
cmpsl
and
sub
adc
or
std
mov
les
pop
sub
xor
push
inc
imul
mov
jecxz
fdivr
jmp
jp
lea
mov
cmc
fisubrl
movsl
push
lock
fwait
repz
jg
dec
int3
je
push
shl
ret
and
repz
cmpsl
sub
fsts
iret
int3
insb
mov
int
sub
in
dec
push
and
scas
pushf
dec
cmp
and
ficompl
dec
loop
cmp
cmp
pusha
pusha
mov
js
scas
inc
cltd
scas
int3
jge
push
add
aam
sbb
outsb
jo
xor
adc
dec
dec
lds
push
sbb
inc
pop
stos
adc
in
repnz
pop
jge
push
push
in
jnp
pushl
loop
inc
enter
push
xchg
sub
adc
adc
or
add
repnz
aam
mov
inc
mov
xchg
outsb
mov
dec
adc
sub
push
aam
or
out
sti
pop
insl
in
ret
sub
cmp
jns
or
ljmp
and
dec
ja
insl
cmp
fistpl
ret
les
cmp
and
mov
dec
add
sbb
js
push
pop
out
mov
sbb
cmp
add
ficoml
dec
in
in
sbb
out
sub
aaa
and
daa
jno
call
add
jp
test
sbb
in
push
ss
dec
sub
jl
mov
in
push
add
aad
push
lods
inc
dec
stos
xchg
fildl
mov
fmull
dec
mov
dec
inc
push
insb
negl
sbb
lcall
fwait
jb
pop
and
mov
pop
or
fdivs
insl
das
mov
lock
sbb
cli
xchg
pop
jno
repz
ds
insb
popa
xor
add
adc
rorb
jb
push
cmp
fisubs
mov
icebp
jnp
sbb
test
inc
jo
pop
mov
push
movsl
jns
cmp
inc
sti
jle
xchg
popf
add
imul
pop
jae
arpl
cmp
arpl
sub
lahf
xchg
adc
movsb
arpl
push
push
push
out
mov
dec
jmp
mov
fisubrl
pop
imul
push
mov
dec
push
fisttpl
sbb
rorb
je
icebp
out
mov
inc
mov
shlb
rcrb
lret
ffreep
or
lret
jbe
cld
out
cs
fstpt
insb
and
popa
xor
xchg
aam
xchg
loopne
lahf
jno
pushf
xor
test
ret
sbb
cwtl
je
pop
mov
in
test
popa
aaa
popa
cli
repnz
or
or
push
lret
or
rcrl
pop
push
jno
std
ret
add
jle
cmp
inc
icebp
lcall
mov
scas
cmp
sbb
je
sti
aas
out
or
pop
scas
cmpsl
jp
add
inc
jge
push
push
dec
outsl
xlat
repnz
out
cmpsl
insl
into
aad
lods
notb
dec
fildl
lahf
dec
pushf
xchg
mov
mov
icebp
or
sahf
inc
cmc
sbb
add
lret
push
fimuls
xchg
or
aas
test
mov
in
ret
sub
mov
or
subb
js
adc
dec
add
loope
rcrb
and
pop
rcrl
mov
xchg
shr
push
loope
out
xor
insl
rorl
jg
out
arpl
sub
mov
loope
in
in
sbb
add
mov
push
xor
rorl
or
scas
cwtl
leave
sbb
lret
pop
push
aas
shrb
cmp
push
push
lods
mov
lahf
cmc
xchg
adc
cwtl
mov
sbbb
mov
lods
popf
std
les
lahf
aaa
mulb
pop
mov
push
xchg
cmp
xchg
mov
jne
or
clc
mov
out
lea
adc
leave
popa
or
push
adc
mov
ficompl
sbb
pop
ja
mov
xor
int3
sahf
inc
or
mov
mov
cmp
out
adc
cmp
add
popf
xchg
cs
mov
cli
mov
dec
and
mov
or
mov
push
test
xor
xchg
pop
push
inc
dec
pusha
lret
sahf
testb
push
mov
stc
jo
lea
sbb
enter
or
dec
push
add
jp
pop
jo
ds
fnsave
pop
cmpsb
sub
in
push
test
mov
jecxz
aas
outsb
hlt
fistpl
sub
aad
mov
stos
shlb
pop
pop
xor
rorl
add
xchg
and
sbb
cmpsb
jno
add
mov
inc
sub
in
test
and
mov
cmp
sbb
lock
notb
xchg
add
aaa
mov
cld
adc
dec
lods
or
test
mov
test
adc
fisubrs
jg
adc
xor
cwtl
out
xchg
push
lods
jns
mov
pop
sahf
popa
jne
pop
sbb
push
xorb
xor
jecxz
mov
push
push
mov
movsb
sbb
xchg
ja
mov
or
sub
movsl
mov
lret
in
cmpb
sbb
inc
mov
dec
shll
test
nop
addl
pop
and
cmpsl
jmp
sti
or
lock
or
xchg
sub
mov
or
out
and
mov
dec
sub
xchg
addl
repz
test
out
xchg
pop
enter
pushf
sbbl
mov
lcall
xchg
pop
sbb
sub
jbe
pop
mov
iret
pop
mov
loop
or
pop
cmp
lods
pop
lds
mov
ret
lcall
xchg
xchg
fmul
imul
dec
sbb
push
scas
sub
shrb
clc
jecxz
mov
sub
leave
fiaddl
cmp
mov
into
in
lcall
push
mov
mov
adc
pop
sbb
lret
xchg
leave
in
into
mov
mov
xor
dec
fmuls
add
aad
fsubrl
mov
leave
xchg
decb
xor
scas
imul
and
jnp
dec
jbe
mov
inc
out
loop
fcoml
cwtl
aam
aad
sbb
pop
fimull
lock
mov
pop
fdivl
inc
outsl
test
pop
fcmovnbe
push
xor
xor
std
or
pop
mov
sub
test
pop
lret
jo
sbb
push
push
rcrb
daa
aas
adc
lea
fldenv
fs
hlt
into
xchg
sbb
les
aam
into
cmpsb
iret
xchg
sub
xor
loopne
xchg
push
push
pop
jo
add
add
les
ja
fdivrs
fstpl
fstl
push
lret
cs
jl
sahf
repnz
cmp
addb
sub
mov
push
mov
sahf
adc
jge
or
popf
repnz
add
outsl
inc
cmpsb
sub
in
xchg
mov
jns
add
mov
mov
jle
sti
cmpl
cmp
aaa
movsl
inc
shlb
xchg
push
cld
adc
inc
dec
lret
sti
mov
xchg
inc
sub
pop
push
jns
cmp
in
int
dec
sbb
icebp
arpl
jo
cmove
jecxz
push
mov
cmc
clc
hlt
aad
inc
lcall
jbe
adc
ja
lea
das
sbb
and
cwtl
jne
sahf
mov
addr16
mov
idivb
add
cmpl
push
stc
push
mov
add
jg
cmpsl
push
cmpsb
mov
imul
and
push
in
fcomip
pop
ficomps
cltd
sub
clc
int
stos
pop
popa
and
xor
or
sub
scas
jns
xor
into
into
mov
int
jmp
add
xor
enter
sub
ljmp
lret
inc
dec
dec
mov
cmpsb
rcll
xchg
repz
cmc
aas
gs
mov
or
test
test
mov
sub
or
lcall
inc
and
xchg
jmp
mov
jns
jnp
shll
push
std
dec
loopne
adc
popa
test
aaa
mov
adc
mov
cmp
inc
sub
stos
ljmp
mov
scas
rcrb
mov
cld
xchg
mov
add
jne
xlat
sub
cli
inc
or
xchg
cltd
ss
xchg
inc
into
xchg
adc
sti
shll
hlt
out
subb
enter
jg
mov
pop
push
pushf
xchg
mov
dec
fisttps
or
into
add
ret
mov
dec
xlat
aad
sub
out
xchg
pop
push
ja
aas
imul
nopl
xchg
xchg
mov
cwtl
cltd
jle
mov
cmp
adc
mov
fwait
bound
test
dec
mov
iret
pusha
and
sub
jmp
ja
mov
dec
fadds
and
jno
fbstp
gs
pop
leave
jae
pop
rorb
test
or
sbb
xchg
aaa
cld
push
jbe
lcall
inc
mov
dec
jb
xchg
sub
adc
lea
mov
lods
cmp
xchg
ret
sbb
push
lret
test
movsl
xor
pop
outsb
or
push
ret
cmp
repz
adc
into
cwtl
xchg
mov
sbb
stos
sbb
lock
shlb
dec
adc
in
jge
hlt
dec
das
push
ret
jb
cmp
sti
dec
std
mov
pop
movsl
ret
daa
dec
lea
push
cmp
repnz
scas
das
add
ret
addr16
adc
jne
lea
dec
js
push
mov
iret
lods
imul
orl
popa
insb
popf
data16
js
jp
int3
inc
int3
out
pop
pop
les
movsl
divb
aas
aam
sahf
push
xor
push
xlat
sub
sbb
lods
mov
jecxz
pop
inc
pushw
xor
jne
fisubrs
scas
das
inc
insl
ljmp
push
call
dec
pushf
add
jae
iret
imul
bnd
and
add
pushf
adc
stc
cwtl
xor
inc
lret
sub
pop
or
pop
inc
or
jg
jnp
mov
les
adc
stos
pop
loop
cmp
inc
in
pop
movsl
dec
pop
add
jg
or
xchg
out
adc
outsb
iret
adc
insl
mov
jb
mov
dec
notl
ljmp
int3
jbe
xchg
test
mov
mov
aas
jns
std
push
mov
mov
push
fsubrp
inc
jae
lods
ret
popf
inc
inc
sub
sbb
sub
pop
xchg
dec
aam
stc
dec
xor
loopne
imul
xchg
cmp
jb
cmp
popa
inc
mov
and
leave
out
lahf
outsb
add
loopne
push
and
test
inc
int
je
gs
icebp
cli
lods
mov
insb
cltd
push
mov
jnp
cld
hlt
leave
and
and
cmp
inc
dec
add
add
push
addr16
loop
mov
popf
jo
lret
pop
das
jecxz
scas
insb
fnstsw
rclb
ror
jecxz
xchg
jno
lahf
jmp
xchg
mov
call
add
jmp
push
data16
out
inc
mov
int3
movsb
or
mov
call
adc
mov
inc
xor
pop
sbb
ljmp
cmpsb
mov
cltd
lds
push
cli
sti
les
jg
mov
rcll
arpl
xchg
aam
sub
or
add
das
xlat
jecxz
leave
cmc
movaps
add
and
sbb
inc
pop
fcoms
js
in
aaa
mov
xchg
mov
fwait
dec
dec
lds
stc
test
sbb
nop
daa
iret
push
and
jb
jns
insb
lea
into
or
mov
mov
push
cmp
mov
pop
daa
mov
movsl
scas
and
xchg
dec
jecxz
gs
add
je
add
insl
test
add
lret
adcb
fs
mov
in
jae
or
sub
push
mov
fucomip
inc
js
sbb
insb
sbb
das
lret
lret
repnz
test
inc
push
push
sub
push
dec
mov
mov
orl
sbb
divl
jno
sub
std
fsubr
mov
call
mov
outsl
mov
outsb
pop
outsb
xchg
iret
in
sbb
pushf
fwait
adc
rcr
mov
xchg
cld
arpl
push
inc
mov
insl
div
pop
and
or
cmpb
or
lock
mov
loope
lods
scas
dec
xor
addr16
lods
popf
das
enter
arpl
jae
arpl
lcall
in
js
push
rolb
cltd
adc
gs
cmpsb
push
dec
bound
cli
outsl
outsb
shrl
es
jo
inc
mov
mov
mov
sbb
pop
cmp
popl
adc
rcll
sti
pop
out
xchg
inc
adc
and
sbb
in
and
mov
loope
call
pop
lret
pushf
stos
sub
adc
out
mov
lahf
mov
js
clc
scas
add
dec
fs
outsl
test
test
jmp
or
lcall
push
imulb
mov
mov
mov
pop
into
out
dec
push
lods
in
xchg
stc
imul
lock
jnp
scas
cwtl
sarl
xchg
mov
push
fs
testl
in
xchg
dec
insb
data16
push
mov
sbb
fstps
xor
sbb
cmpb
xchg
into
gs
xchg
pop
push
das
fisttpll
add
cmpsl
loopne
dec
popa
xchg
rcrl
stc
inc
movsl
jp
stos
xchg
jp
jge
lahf
insb
or
mov
mov
mov
sub
ret
out
push
imulb
pop
movsl
rol
pop
jno
push
xchg
mov
jnp
aad
jb
jecxz
lret
cmp
repz
enter
lcall
cmc
jp
cmpb
jecxz
pop
test
adc
xor
push
push
mov
xchg
xor
cmp
cmp
mov
mov
pop
mov
rorl
cmp
leave
mov
xor
inc
out
sahf
push
pop
lcall
test
sbb
cmp
mov
pop
push
inc
in
pop
out
inc
nop
cmp
aam
test
lods
xor
xor
mov
mov
xchg
xchg
mov
sub
inc
sar
leave
fisubrl
mov
rcll
sbb
imul
stos
repnz
mov
ljmp
into
xchg
test
cli
in
push
xchg
sbb
std
es
or
in
in
sbb
pop
mov
mov
mov
lahf
or
outsl
add
fsts
dec
sbb
adc
clc
pushf
mov
mov
pop
shrb
push
cmc
add
or
cmp
jecxz
imul
xchg
adc
sahf
in
push
pop
cmp
jg
jecxz
fstps
cmp
or
popf
dec
repnz
stos
lods
sub
add
push
jmp
arpl
xchg
and
ljmp
jg
movntps
pop
and
push
mov
shlb
jmp
movsb
or
scas
xchg
gs
popa
add
pop
add
jl
inc
cld
cmpsl
mov
fistps
inc
xchg
fildll
jb
fstps
jne
arpl
popf
jno
jg
ds
inc
outsl
push
fwait
push
rcrb
cmp
dec
jno
imul
cmp
mov
push
mov
xor
xor
mov
loop
in
fisubs
in
push
decb
sbb
andb
ljmp
and
mov
popf
icebp
xlat
jmp
or
outsb
inc
roll
int3
orl
push
shrl
pop
ja
and
mov
fiaddl
dec
jns
lods
rcrl
idivb
loop
add
shr
mov
xor
push
les
xchg
mov
xlat
mov
dec
aad
pop
fcmovnb
out
inc
cmpsl
lret
std
daa
pop
cmp
dec
sbb
add
inc
jp
fimuls
mov
and
cmc
sub
sub
and
push
test
lea
sti
gs
sbb
leave
subb
mov
ss
or
xchg
add
call
es
mov
stos
loope
pop
jbe
mov
push
loopne
adc
fsubl
std
fcmovne
rcl
rcrl
xchg
pop
and
outsl
sub
lcall
out
cs
fmuls
das
mov
jae
adc
std
outsb
xchg
jne
pop
lea
adc
test
or
mov
sbb
mov
add
imull
dec
imul
pop
push
dec
mov
add
scas
pusha
push
and
push
xchg
xchg
mov
push
mov
lahf
or
cmc
jne
icebp
sub
loop
aam
inc
mov
add
test
push
mov
cmp
lds
inc
loopne
jg
dec
sub
xor
jle
fbstp
pop
stos
je
les
shl
push
mov
fs
xor
cmp
cwtl
push
insl
add
jle
jo
jp
outsb
cmpsl
pop
pop
dec
jl
jle
mov
xchg
jge
lea
xor
fcmovb
orb
adc
push
nop
sbb
push
test
push
inc
dec
lahf
test
test
out
jo
in
clc
pop
lahf
adc
or
jo
pop
negb
andl
imul
xorb
mov
jo
xor
cmp
mov
mov
mov
bound
or
pop
xchg
fsubr
sbb
jge
jle
mov
sti
mov
dec
iret
jae
daa
addr16
lods
push
push
mov
jns
nop
sub
sub
push
fs
mov
or
mov
dec
test
aam
adc
pushf
xor
mov
push
and
int
in
sub
bound
jl
fucomi
inc
shrl
dec
mov
out
inc
sub
cmp
in
adc
cs
dec
sbb
xchg
test
daa
mov
add
ds
fwait
test
in
aam
ffreep
adc
rcr
lds
sub
mov
jns
repz
adc
mov
push
loop
aas
xor
repz
popa
push
cmc
add
push
push
das
and
lret
dec
and
sahf
sahf
dec
loopne
cmp
jle
je
out
lock
mov
daa
mov
and
jae
movsl
je
movsb
or
loope
aaa
test
jb
xchg
or
mov
hlt
mov
fcomps
cmpsb
cltd
addr16
pop
mov
sub
or
das
xor
or
pop
mov
add
jg
pop
add
pusha
hlt
mov
dec
jne
aad
in
xchg
push
jp
sahf
dec
sbbl
mov
push
jp
xchg
dec
mov
lea
int3
int
hlt
xchg
hlt
outsb
dec
xor
cmp
loopne
shr
mov
pminub
or
adc
fbld
scas
outsl
push
cmc
add
sub
jno
pop
add
fisubs
mov
xor
xor
fwait
loopne
cmc
nop
adc
mov
stos
or
shlb
loop
aas
sbb
jo
nop
fiaddl
arpl
and
sbb
push
jge
movsl
gs
leave
push
xor
ja
aas
fs
mov
aad
push
push
cltd
stos
in
cwtl
mov
adc
or
shlb
mov
push
sbb
inc
outsb
xchg
jp
sub
rcll
je
popa
fs
push
dec
int
mov
int3
popf
xchg
dec
cli
nop
or
mov
fisubs
dec
adc
inc
out
lahf
inc
scas
dec
mov
ror
push
repnz
sbb
out
jl
mov
lods
pop
cmpsl
rcrw
out
cmp
jne
pop
aaa
pop
dec
out
xor
in
shrl
dec
rcrl
inc
mov
push
push
sbb
xor
mov
push
sub
sbb
jb
xor
jmp
sub
imulb
sub
mov
push
pop
sbb
push
fdivr
xor
push
imul
rorb
inc
fimull
cwtl
sub
dec
into
ret
bound
push
inc
adc
sub
jo
xor
rcl
test
rorl
loopne
cmp
add
push
lea
xchg
cli
or
cmp
loope
mov
mov
push
lret
inc
pop
aaa
popf
test
js
sub
xor
mov
mov
pop
incl
hlt
mov
xchg
add
popf
push
sbb
jg
cmpb
cmp
lret
xchg
cs
push
inc
cld
int3
adc
imul
cmp
sub
rcl
or
add
outsb
sub
jns
ljmp
mov
out
cmp
ret
shr
inc
push
incb
push
notb
inc
daa
inc
sub
fsubrl
or
and
in
pop
out
inc
xor
adc
mulb
pop
popf
add
jecxz
bound
sub
adc
xchg
or
mov
pop
fimull
in
aas
rol
dec
adc
lea
nop
adc
xor
mov
loop
sub
dec
stos
subb
pop
ja
mov
cmp
or
xorl
inc
cmp
lea
push
dec
and
inc
mov
ljmp
cmc
popf
idivb
pop
jp
stc
cmp
repnz
into
lret
mov
and
test
and
int3
out
xchg
or
pop
je
cmpsl
dec
jae
push
push
mov
push
add
movsb
jge
inc
loop
and
out
fs
outsl
sbb
sbb
ss
add
rcl
lret
jmp
data16
fmuls
or
dec
add
inc
enter
sbb
mov
cmp
gs
pop
addr16
cwtl
scas
mov
inc
ja
mov
mov
dec
fisttpll
insb
out
adcb
jg
je
lret
dec
xor
pop
xchg
or
add
lods
xlat
fbld
pop
pop
fwait
inc
pop
xor
push
adc
or
lods
cmc
or
jecxz
cmp
adc
nop
add
pop
and
cmp
pop
aas
iret
ret
stc
lcall
je
aam
cmp
loope
imul
push
jns
in
je
stos
jns
mov
clc
cli
sub
inc
inc
lahf
push
outsb
jmp
stc
out
xchg
sub
dec
into
push
dec
jp
inc
addb
adc
aad
dec
dec
cmpxchg
fiadds
push
enter
lock
popf
imul
push
orb
sub
inc
jl
pop
cmp
out
pushf
jb
imul
add
lea
cmp
xor
xchg
dec
in
mov
sub
int
and
dec
mov
inc
cld
push
cmp
xchg
repz
mov
adc
je
cltd
dec
test
nop
mov
loope
and
out
sahf
scas
inc
test
enter
mov
hlt
sub
jae
bound
and
jno
decl
lret
pop
and
or
and
sbb
jmp
cltd
jge
lahf
fucomp
pop
mov
pop
movsl
inc
shrb
ret
sub
loope
shl
fcmovu
adc
push
and
cmp
aam
push
loop
popl
and
cmp
arpl
jno
stos
xchg
das
inc
jbe
popa
push
inc
mov
pop
mov
add
bound
pop
iret
fistpll
pop
cwtl
pop
adc
adc
mov
or
sahf
lahf
shlb
mov
bound
cli
loop
adc
movsb
call
mov
mov
clc
fwait
clc
adc
adc
pusha
add
cmp
and
lds
jne
jno
add
insl
aam
hlt
ljmp
pop
ja
lds
pop
sub
sub
icebp
nop
push
mov
xor
adc
push
roll
out
adc
std
data16
push
fbld
js
ret
lods
or
test
mov
loope
push
imull
xlat
ss
jbe
and
jns
aam
sub
popl
imul
dec
pusha
test
push
pop
sub
out
fstps
mov
xchg
mov
and
sub
inc
lret
dec
or
imul
pop
mov
adcb
add
bound
rcrl
mov
in
ret
push
xlat
out
aaa
movsl
dec
xchg
jg
aad
int3
out
das
mov
push
cmc
pop
add
mov
or
ja
mov
xchg
mov
inc
repnz
arpl
dec
push
gs
pop
xor
je
mov
or
sbb
adc
sbb
int
cmp
cmp
push
mov
mov
mov
cmp
jmp
sub
fsubrl
cmpsl
dec
jmp
cmc
mov
xor
shlb
adc
orl
dec
jno
bound
imull
ficoms
xor
mov
add
sahf
inc
xchg
inc
xchg
shl
scas
aas
out
mov
mov
lock
cs
shlb
jg
xchg
push
push
rclb
std
inc
dec
add
movsl
test
add
xchg
or
pop
push
mov
pushf
mov
cwtl
sub
subl
jmp
aaa
xchg
sar
adc
mov
sti
push
and
add
ret
cli
fiaddl
cltd
mov
push
add
int
jo
xchg
jnp
out
push
xchg
lods
jo
mov
add
movsl
mov
roll
and
out
adc
cmp
iret
mov
mov
inc
sub
divl
fistpll
adc
std
jmp
daa
xchg
jp
jp
jl
sub
sub
cmpsl
clc
ljmp
push
test
out
data16
inc
ret
dec
jnp
mov
lods
mov
xchg
dec
mov
mov
lahf
jb
xor
sub
cmp
and
ror
roll
xor
movsb
xchg
fstpl
add
frstor
jmp
icebp
pop
mov
ja
add
in
rcr
pop
xchg
xchg
xor
sub
mov
cld
stc
bound
shll
jp
xorl
popa
dec
pop
jo
sarb
std
dec
sub
mov
inc
test
push
mov
ds
jp
dec
fwait
xor
loope,pn
cmp
insb
mov
ss
inc
mov
pushf
jae
jb
loopne
and
aam
or
push
scas
or
push
and
cmc
clc
inc
jg
cmp
and
test
decl
mov
fs
test
adc
lods
sub
mov
sub
xchg
lret
and
fnsave
dec
dec
cmp
inc
roll
xchg
fisubs
shll
jp
inc
and
xbegin
jge
dec
cmc
je
aam
cmpsb
add
cmp
rorb
push
pusha
cmp
mov
add
ljmp
pushf
sub
ret
sbb
fdivs
xor
mov
dec
add
jbe
imul
mov
cmp
mov
mov
push
xchg
in
pop
test
xchg
mov
insb
adcl
pop
add
xor
lret
sub
push
daa
inc
pop
xchg
dec
xor
jno
stos
jle
push
xchg
ret
rorl
loopne
mov
xor
movsb
pop
out
mov
mov
loope
int3
adc
adcl
jmp
jle
cmpsb
pop
pop
mov
out
loopne
inc
pop
mov
dec
shlb
scas
and
push
dec
repz
addr16
mov
or
mov
adc
cltd
fcoms
mov
pushf
fcmovbe
popf
arpl
fldcw
and
pop
icebp
add
stc
pushf
popa
adc
scas
add
jge
test
inc
sub
lahf
je
and
jo
mov
jo
pop
mov
cmp
int
hlt
repnz
pop
xchg
fidivrs
lret
mov
outsl
insl
dec
ret
cli
jnp
popf
cmp
dec
repnz
jbe
cmp
xchg
inc
ljmp
dec
xchg
push
arpl
jmp
cmp
xor
xorb
aas
scas
mov
jge
loopne
mov
mov
jno
mov
pop
rcrb
xor
cmp
ret
dec
mov
mov
fimuls
in
jge
cmpsb
pop
push
out
imul
dec
ficompl
ret
sub
dec
and
in
daa
test
ds
loopne
add
call
lea
and
dec
sub
dec
add
rclb
dec
dec
shrb
mov
jl
or
mov
and
cmc
dec
aad
test
ljmp
xchg
xchg
push
inc
add
das
push
sub
aaa
adc
jae
sti
sub
andl
xchg
sbb
roll
mov
ret
xchg
mov
mov
pop
and
sbb
jge
and
pop
lods
test
xchg
cwtl
pop
divl
jecxz
into
dec
js
sti
out
jle
jo
or
mov
fwait
xchg
test
les
repz
or
imull
sbb
xor
cltd
repnz
xor
mov
ret
stos
pop
rol
jg
cwtl
in
rcrl
push
adc
fstpl
mov
mov
or
addl
lret
iret
in
xor
sbbb
pop
aam
cltd
xchg
jno
mov
stos
sub
negb
fdiv
stos
out
add
dec
sbb
sbb
rclb
scas
inc
cmc
mov
enter
or
push
fstp
fldcw
sbb
test
add
mov
je
stc
mov
or
je
push
sub
pop
in
push
rcll
out
mov
inc
test
mov
inc
fidivl
int
test
push
xchg
les
and
and
inc
lock
ja
imul
add
sub
jbe
out
sbb
inc
sub
cmp
cmp
dec
sahf
inc
jne
mov
stos
inc
xor
lret
cmp
hlt
xchg
xor
add
lcall
mov
add
xchg
mull
cmpsl
sub
out
mov
sub
gs
pop
in
or
mov
xlat
scas
jmp
cs
outsl
mov
daa
dec
add
pop
mov
fsubrs
mov
mov
xchg
inc
in
inc
inc
or
jb
inc
cmpsb
inc
mov
jnp
xchg
pop
xchg
lret
cmpl
in
push
push
cmp
in
cwtl
outsb
dec
jns
push
lods
xor
scas
or
dec
xchg
andb
adc
leave
or
incl
fmull
pop
bound
js
in
sub
in
mov
xchg
push
mov
fdiv
adc
into
ret
stc
arpl
stos
fidivrs
sub
loopne
jne
hlt
scas
cs
notl
js
xor
cli
pop
pop
jne
lods
fbld
cmp
adc
mov
popa
fmuls
push
jle
repnz
or
fldenv
mov
out
sbb
mov
xor
pop
out
mov
insl
lods
pushf
dec
in
cmp
push
push
out
xchg
mov
jp
pop
cli
inc
mov
push
xchg
adc
sbbl
test
outsl
icebp
ds
sbb
enter
push
fistpl
outsl
xchg
inc
mov
xchg
mov
xchg
cmpsb
popa
add
push
lods
call
and
push
into
mov
mov
pop
sti
add
daa
test
xor
clc
dec
sub
mov
bound
mov
imul
xor
or
mov
mov
pop
pushf
repnz
test
in
int
add
mov
movsb
or
pop
cld
into
sub
rclb
sti
scas
repz
and
aaa
cmp
rorb
mov
inc
test
iret
inc
inc
lcall
call
pop
ret
xor
add
call
lock
adc
adc
clc
push
movsl
scas
test
pop
scas
sbb
cmp
movsb
push
xor
jp
inc
jg
aas
test
popa
adc
imul
fsubs
or
jecxz
add
jge
aas
mov
pop
jmp
out
shll
push
lea
cmp
mov
je
adc
add
sub
sub
fidivl
or
mov
sbb
xlat
mov
jle
in
push
outsb
aas
fimuls
sahf
pop
out
mov
fwait
xor
push
jp
push
out
dec
push
add
and
inc
outsl
ja
and
into
hlt
shlb
shrl
lahf
js
enter
or
repnz
sbb
nop
out
in
jmp
bound
jne
test
or
leave
nop
pop
out
sub
insb
shll
jb
mov
pop
popf
repz
mov
xchg
std
sub
fsubrl
subl
adc
push
adc
push
sbb
sti
pop
fbld
daa
mov
std
adc
adc
mov
inc
push
test
rcr
lods
cmp
ret
shlb
dec
pop
cs
cmpsb
bound
push
scas
xchg
jne
jb
pop
popf
adc
sti
mov
cld
jae
stos
es
fisubrs
push
inc
push
xor
jmp
repnz
xchg
pop
xor
push
inc
mov
outsb
sub
and
add
ret
popf
jmp
add
sbb
push
clc
push
cld
xlat
mov
mov
imul
cmpsl
scas
int
sub
mov
mov
test
push
fwait
mov
xchg
inc
or
sub
jecxz
mov
mov
out
mov
addr16
les
ret
in
subb
test
movsl
xor
lahf
lods
pop
inc
popf
jmp
les
and
divb
mov
or
mov
cltd
pusha
push
test
sub
and
push
jg
mov
inc
jp
pop
mov
lcall
lcall
sbb
xchg
leave
jp
push
push
jl
arpl
je
daa
cmp
sbb
sub
dec
cltd
mov
mov
in
ss
inc
icebp
mov
jecxz
fdivrl
cmp
flds
xchg
stos
pop
mov
and
int
lock
scas
js
mov
xchg
cmp
sub
sbb
sub
lret
xchg
jecxz
inc
sub
jmp
lret
fisttps
or
jnp
fcoml
daa
scas
xlat
xchg
lods
shll
add
ret
je
stc
push
pop
pop
imul
js
jae
mov
add
inc
movsb
cmp
lock
lahf
mov
mov
jae
fnstenv
pop
sbb
cmp
enter
aas
push
push
flds
add
adc
in
fstl
stos
ss
repz
push
push
fwait
xchg
in
cmp
arpl
mov
iret
cmp
push
xor
pop
mov
dec
dec
shrb
sarb
hlt
push
lods
xchg
push
cmpsb
sbb
test
mov
mull
mov
sub
clc
fcmovb
mov
je
cmp
adc
fnstenv
ss
es
pop
in
lock
fcoml
arpl
pop
sahf
data16
xchg
sub
fs
fistps
ja
mov
cmp
fildll
je
pop
fnstcw
dec
icebp
ret
mov
sbb
inc
adc
stc
mov
or
xchg
push
xchg
lret
jno
aam
loope
ljmp
sbb
out
pop
daa
insl
loop
daa
xorb
inc
mov
xor
movsb
bound
push
enterw
push
sbb
fucomi
pusha
adc
lods
out
sub
out
in
jg
mov
inc
mov
pop
sub
mov
add
push
jg
inc
xchg
test
in
loop
cmc
movsl
imul
loopne
mov
rol
test
sarb
push
push
or
sbb
adc
repz
mov
xchg
addr16
jle
or
add
std
scas
test
call
and
ljmp
js
pusha
in
rorb
mov
lret
rorl
test
sti
in
cwtl
sbb
dec
dec
mov
mov
cmc
adc
ljmp
sbb
and
rcll
mov
outsb
iret
sti
dec
jno
out
int
daa
es
pop
les
in
out
push
dec
pop
mov
outsb
inc
in
mov
cwtl
push
push
mov
mov
mov
aaa
xor
mov
inc
sub
pop
xchg
jo
mov
pop
xor
mov
add
push
xor
stos
rcrl
js
and
and
xchg
fwait
xor
push
ja
adc
fldl
xchg
mov
fisubrl
ss
imul
sub
outsl
std
ja
mov
pusha
mov
sub
cmpsl
sub
sub
pop
pop
pop
xor
rolb
jae
sti
push
sbb
or
cmp
sub
inc
addl
push
sub
mov
lock
mov
divb
sbb
jg
outsb
in
xorb
js
sub
std
mov
and
cmp
mov
xchg
dec
push
js
int3
add
ret
test
repz
push
sub
enter
adc
push
jnp
int
jns
adc
xchg
cmp
jb
imul
sub
ljmp
jg
daa
mov
xchg
dec
or
push
cmpsl
std
mov
inc
out
jne
insb
mov
xor
pop
add
adc
cmp
test
xlat
jl
das
aam
rorb
ds
push
mov
fnstcw
mov
push
inc
shl
or
fdivrs
jno
pop
loope
ss
jb
pop
fsubl
stos
add
cs
dec
jge
pavgw
pop
jg
xlat
mov
xor
jecxz
mov
jne,pn
lret
jp
inc
mov
push
into
int
pop
inc
push
xchg
sbb
das
cmovnp
mov
push
push
imul
out
jae
enter
add
inc
movzbl
cli
push
pop
add
icebp
mov
or
outsb
pop
ret
cmpsl
in
pop
flds
push
inc
mov
push
sbb
pushf
cltd
dec
subb
add
sub
mov
js
scas
mov
dec
xor
and
lods
in
test
cmpsb
mov
lock
divb
jae
imul
jne
fistl
ret
push
add
cmp
into
sub
sti
leave
and
sbb
push
fcoms
pop
imulb
add
sub
cmp
adc
xor
mov
out
pop
ljmp
call
mov
fsubs
adc
cld
cmc
loop
inc
dec
mov
push
fdivrl
and
aaa
hlt
sub
mov
shl
mov
js
rcrl
movsb
inc
xchg
iret
lock
inc
push
aas
jne
xchg
adc
fdivr
fs
mov
push
je
jbe
xor
mov
inc
test
pusha
repz
aad
mov
add
adc
testl
addr16
je
sub
sub
jle
cltd
push
and
fistps
scas
fwait
jl
sbb
lahf
add
mov
ljmp
fstpt
data16
int
cwtl
inc
insl
mov
gs
sbb
fs
ficompl
jnp
push
mov
inc
loop
cmpsl
aaa
adc
push
and
push
int3
or
or
lods
mov
pop
lods
pop
push
faddl
mov
add
push
push
adc
sbb
call
and
addr16
push
push
dec
aad
mov
pusha
lock
or
and
sbb
shll
ja
stos
xor
sbb
movsb
out
sarl
cmp
cltd
push
jge
adc
and
into
cmpsl
pop
daa
sub
outsb
mov
roll
leave
cli
out
dec
sub
xor
scas
ss
sub
cmpsl
pop
cmp
cmpsb
push
sub
icebp
or
cmovns
loop
dec
scas
fimull
pop
fdivs
int3
incl
cmpsl
loopne
dec
push
push
sub
mov
std
xlat
sub
lret
in
scas
inc
cmp
jge
std
inc
pop
scas
aas
inc
je
rcl
mov
decl
pop
aam
call
cwtl
aaa
push
mov
test
jns
xchg
imul
dec
int
and
out
fidivs
cli
out
or
les
pop
push
lcall
fisubrs
pushf
sbb
or
nop
push
fnstsw
push
nop
daa
cld
mov
in
inc
sahf
jecxz
roll
inc
xchg
ja
jp
pop
andl
or
in
iret
or
cmp
es
int
stos
push
mov
scas
push
xor
jecxz
scas
ja
stos
dec
mov
mov
cmp
shl
test
adc
ficompl
int
pop
out
call
dec
jbe
jns
out
lods
xor
dec
fwait
or
adc
sarb
loopw
in
fs
add
bound
mov
dec
cmpsb
repz
shlb
lret
cli
mov
loop
imulb
cmp
cmpsb
inc
xchg
leave
sub
inc
mov
sbb
data16
xchg
xchg
cmp
cwtl
movsb
push
imul
mov
repz
pushf
lock
sbb
fwait
mov
in
insl
outsl
inc
rorl
gs
aad
jne
dec
cld
mov
cmp
sti
clc
or
mov
leave
pop
in
out
ret
fcoml
lret
inc
add
and
lods
int3
lret
add
cmp
push
jns
cwtl
fnstcw
shl
adc
xor
adc
mov
rcrl
stc
xor
cld
clc
fs
adc
daa
dec
jnp
popf
xor
movsl
mov
or
scas
inc
lcall
xor
push
outsb
fiaddl
js
push
iret
or
scas
test
lods
push
sub
orb
aas
xor
inc
fisubrs
xor
pop
push
xchg
adc
pop
in
enter
popf
andb
mov
fisubrs
out
inc
jecxz
ljmp
fidivl
enter
cmp
aam
sbb
and
orl
pushf
sub
or
sub
jne
sub
jecxz
popa
das
rclb
testl
push
hlt
test
std
pop
les
mov
mov
xorb
lock
inc
mov
adc
xchg
call
dec
xchg
jl
rcrb
pop
sti
inc
out
call
dec
and
data16
ss
into
out
pop
push
hlt
sahf
mov
sbb
test
inc
pusha
inc
insb
inc
ficoml
or
pop
dec
fnstcw
sbb
sbb
sti
cmp
aam
dec
mov
xchg
inc
xchg
push
loopne
in
int3
sbb
in
bts
lock
xchg
xlat
or
jnp
mov
cmp
clc
and
jns
bound
out
mov
and
xor
push
jge
aas
and
or
pop
adc
out
pop
fwait
dec
mov
jecxz
test
movb
out
loopne
leave
out
arpl
and
cmpb
sub
dec
push
adc
test
and
mov
subl
and
outsb
popa
stc
leave
mov
pop
jo
div
dec
shlb
cmpsl
sub
xchg
sbb
adc
jbe
sbb
sbb
mov
pop
inc
inc
aam
push
aaa
pop
jp
fucomp
stc
lods
das
mov
and
add
iret
add
jl
add
sub
das
mov
inc
filds
test
ror
imul
inc
nop
fcomip
mov
inc
jo
xchg
xchg
dec
add
and
test
shr
adc
sbb
ds
mov
xchg
inc
aam
add
push
frstor
mov
pop
push
ljmp
xchg
mov
adc
cwtl
xchg
insl
out
cld
or
icebp
addr16
push
mov
mov
add
push
loop
cmp
and
push
mov
mov
out
push
inc
add
jae
mov
ret
out
pop
jg
ss
xchg
inc
push
adcl
inc
mov
pop
push
rorl
in
mov
mov
orb
inc
xchg
call
data16
mov
daa
cmpsb
cmpb
mov
fisubrs
jnp
inc
popf
repnz
xor
cli
lods
jge
xchg
fwait
or
aad
lea
ds
sbb
dec
dec
or
and
pop
inc
mov
mov
adc
xor
out
test
cmp
loop
jae
push
insl
cmp
adc
ljmp
mov
jae
add
dec
fbstp
jle
insb
jno
jne
mov
mov
and
xchg
add
push
fwait
lret
roll
test
jae
jno
jnp
inc
popf
imul
jo
xchg
xlat
in
repz
inc
out
aad
mov
test
and
inc
clc
ret
int
fmuls
dec
inc
jg
movsl
pop
int3
sub
xor
aaa
sbb
dec
cmp
fimuls
cld
test
insl
mov
js
xchg
xlat
adcb
call
lahf
leave
or
imul
xchg
sub
nop
das
das
dec
test
aas
adc
addr16
ret
mov
mov
or
arpl
mov
mov
mov
out
add
push
mov
cmp
jae
dec
hlt
pushf
in
pop
fs
clc
fwait
or
repnz
mov
cli
inc
mov
imul
jp
es
outsl
lds
shlb
push
dec
imul
dec
sbb
sub
inc
aad
fdivl
loopne
lods
div
stos
lret
call
jecxz
repnz
adc
lds
and
sbb
xor
aam
repnz
movsl
aad
dec
xchg
jl
loop
test
test
pop
add
rolb
rcrb
out
or
cmp
sub
fldcw
test
rcrl
cmc
movsl
xchg
add
aaa
xlat
mov
mov
sbb
shll
pop
mov
xchg
rorb
rdtsc
gs
push
movsb
mov
push
and
inc
xchg
sbb
mov
mov
fsubrl
or
or
push
pop
xor
cmp
mov
je
sub
jmp
je
imul
or
mov
int3
andb
pop
mov
fs
ljmp
hlt
dec
xor
ficompl
call
sbb
outsl
gs
out
push
popa
addr16
scas
jecxz
sbb
insb
enter
jb
test
sbb
mov
outsb
mov
add
sbb
cmpsl
and
movsb
mov
nop
out
or
pop
inc
mov
test
test
xchg
or
lods
xor
mov
fldt
leave
imul
subl
add
mov
sbb
stc
setae
loope
outsb
test
mov
or
lret
and
mov
sub
notl
jg
push
daa
and
push
or
arpl
xchg
jno
pop
mov
lret
fwait
enter
orb
mov
in
add
mov
scas
sub
in
ds
fcomps
movsl
dec
xchg
in
aas
mov
int3
pusha
sbb
inc
fimull
aas
fnstenv
imul
loop
push
fsubl
add
je
push
cmpb
std
shll
fwait
orl
ret
dec
inc
cmp
add
cmp
mov
rol
in
sub
call
jecxz
popf
mov
loope
jl
push
out
and
adc
xchg
int
adc
scas
mov
and
les
out
add
push
enter
in
adc
xchg
insl
push
cld
xor
xchg
fwait
cltd
les
jnp
mov
repz
mov
cltd
call
mov
nop
mov
inc
adc
insb
xor
sti
cmpsb
out
sbb
xchg
jmp
sub
add
repnz
hlt
cmovne
sbb
cld
js
adc
dec
sbb
sub
fcoms
jmp
xor
jl
xchg
pushf
jne
cwtl
xchg
inc
mov
enter
test
popa
mov
xor
jnp
test
data16
stos
lods
cltd
repz
cld
jns
in
fcomps
cmp
jge
das
popf
mov
loop
stos
xor
sbb
mov
inc
outsb
pop
cld
les
pop
push
loop
mov
xor
push
mov
cmpl
and
jnp
into
loopne
test
fimull
sub
test
aaa
and
or
push
pusha
cmp
pop
push
sbb
aam
pop
xor
test
and
pushw
imul
dec
pop
and
in
mov
mov
sbb
mov
lock
jnp
out
xlat
pushf
push
shlb
adc
push
mov
mov
ret
decb
mov
sti
xchg
or
ja
jno
cli
mov
call
insb
push
inc
pop
push
fisubl
push
mov
ds
dec
push
sbb
fmull
call
add
or
arpl
xor
and
pop
clc
into
and
xor
sbb
ds
and
repz
inc
aam
loope
or
cmpsb
push
jmp
jo
jnp
jmp
sub
ss
push
and
pop
mov
xchg
loop
and
jnp
stos
cmpsl
enter
adc
sbb
pop
and
pop
cmp
sub
pop
sbb
adc
sti
loop
outsb
js
lods
dec
shlb
push
inc
jle
xchg
sbb
testb
and
add
pop
and
and
push
fisubrl
sbb
mov
sub
ret
mov
xchg
cmp
fcmovu
mov
dec
popa
sti
xorb
or
addr16
daa
pop
cs
fldcw
rcrl
cmc
and
adc
sub
movsl
insl
in
pushf
mov
data16
mov
lods
and
cmp
push
mov
leave
push
mov
or
jb
in
movsb
jmp
sub
in
pop
ret
std
pop
jnp
mov
pop
fsubs
sbb
mov
call
clc
xchg
sbb
test
add
sarl
cli
cmc
je
dec
add
mov
iret
and
je
ret
xchg
sbb
add
sub
xor
dec
push
pop
push
fistpll
jge
pop
lret
dec
fcomp
enter
test
ret
pop
loopne
in
and
fbld
ja
lea
jmp
dec
mov
daa
lret
in
xchg
push
ret
imul
pop
fadds
xchg
xor
xor
mov
add
xlat
gs
pop
mov
push
ds
or
push
movsl
psllw
add
fistpll
sbb
dec
mov
movsl
sub
icebp
and
add
out
push
ss
std
int3
dec
lcall
sub
jle
nop
xor
mov
and
icebp
imul
pop
iret
movsb
pop
out
inc
insl
mov
ret
clc
pushf
xor
or
inc
int3
test
imul
mov
jecxz
sahf
cmp
cmp
ret
or
jp
xor
test
and
ljmp
mov
outsb
cmp
icebp
lock
add
das
push
inc
jns
sub
and
in
in
inc
repnz
xor
test
mov
pusha
xlat
addr16
xchg
dec
outsb
test
cmp
test
in
imul
add
adc
js
mov
fildll
out
cmc
stc
in
push
dec
ret
xor
add
push
aaa
xchg
or
dec
pop
scas
push
or
lods
leave
movsl
xchg
icebp
mov
sbb
sbb
cltd
push
fnsave
mov
mov
mov
nop
pop
mov
mov
and
scas
jmp
mov
test
pop
push
je
mov
or
rep
mov
or
ds
shlb
jg
pop
push
rcrl
into
push
push
xor
dec
sbb
dec
mov
test
and
mov
add
jl
cmpsl
test
push
lds
mov
push
iret
mov
push
or
out
pop
out
push
sub
cmp
cli
nop
fistl
or
test
xor
inc
mov
popa
mov
in
adcb
xchg
pop
jl
cmp
xchg
addr16
movsl
push
cltd
cmp
iret
cmc
xor
cmp
test
mov
adc
add
and
xor
mov
xlat
jmp
loop
xor
xor
jecxz
enter
xor
pop
jl
fsubs
jecxz
jbe
sub
je
xchg
aaa
lea
pop
dec
dec
inc
sbb
and
or
push
xor
xchg
data16
int3
out
in
push
mov
mov
mov
adc
out
fnstcw
cmp
mov
jle
incl
pushl
loop
outsb
xor
push
xor
inc
cmp
push
inc
pop
add
bound
popa
adc
mov
stos
and
or
jmp
dec
push
adc
push
or
loopne
add
pushf
xchg
push
insb
outsb
movsb
mov
outsb
pop
adc
fdivrp
xchg
or
inc
mov
mov
arpl
sub
pop
sub
adc
rol
and
inc
jae
cmp
pop
mov
adc
mov
in
lret
xchg
in
subl
enter
pop
mov
fdivrs
mov
or
pusha
ds
or
int3
sub
pop
pop
ret
iret
sub
or
jns
mov
stc
daa
or
pop
ret
icebp
in
sub
aam
lds
inc
push
cmpsb
adc
xchg
lods
mov
xchg
sub
ret
ret
jp
xchg
cwtl
cs
xchg
sub
or
lods
dec
cltd
stc
and
sbb
add
insl
pop
arpl
add
mov
movsb
outsb
fstpl
push
push
sarb
push
and
frstor
or
or
fisttpll
jp
xor
xlat
insb
push
stos
lcall
adc
add
sbb
mov
or
push
pop
icebp
dec
nop
push
inc
cmp
hlt
test
cli
jmp
aad
inc
loopne
scas
sub
leave
or
xor
mov
jg
or
arpl
xor
cs
jp
ret
pop
adc
jge
add
mov
mov
mov
rcrl
jge
out
std
mov
pop
ret
imul
aad
or
js
xchg
push
cmp
cmpsb
lods
loopne
fsubrp
in
mov
out
sahf
mulb
in
lock
sub
ret
jecxz
mov
loope
hlt
mov
idivl
push
in
int
adc
dec
ja
jmp
inc
sub
mov
outsb
mov
stos
inc
js
cmp
sbb
sbb
push
mov
sub
in
out
andl
add
xchg
cmpsb
inc
jecxz
imulb
fidivrs
scas
adc
push
xor
iret
aaa
fisubrl
loope
je
jl
call
incb
je
push
mov
sbb
sbb
dec
jne
mov
pushf
dec
cwtl
or
and
cld
ja
cmpsb
cli
jl
xchg
inc
push
jo
fcompl
clc
movsl
fiaddl
or
push
sti
sub
xor
addb
pop
inc
outsl
stc
stos
decl
mov
mov
fisttps
fwait
sub
pop
and
sub
lahf
aaa
xchg
xchg
scas
lods
jmp
xchg
inc
ret
cwtl
test
cmp
pop
and
mov
movsb
mov
pop
setb
fs
inc
jae
mov
push
mov
in
fwait
sub
cmp
jl
mov
inc
adc
cmpl
dec
sarl
int3
mov
das
and
outsb
fcoms
sbb
push
fnstenv
mov
jo
inc
fcmovb
mov
mov
xchg
sbb
dec
leave
inc
andl
sti
cmp
loop
shrb
stos
mov
inc
adc
xor
gs
jae
scas
pop
and
fstl
pop
je
xor
inc
or
ret
imul
repnz
push
pusha
ja
mov
cmpsl
mov
mov
iret
outsl
push
pop
ret
cs
or
pop
dec
mov
push
fstl
pop
jb
cmp
add
sbb
std
push
pop
pop
xchg
cmp
rcrb
jle
xor
test
pusha
out
adc
cmp
insb
mov
testb
fiadds
xchg
icebp
mov
sti
or
mov
std
mov
bound
iret
push
xor
out
aad
mov
scas
clc
stc
adc
out
test
mov
xor
aad
cmp
jmp
jmp
inc
data16
popa
call
fdivrs
daa
sbbl
xchg
in
pop
mull
loop
test
pop
push
lods
mov
popf
or
or
sub
lods
push
je
cmp
into
jle
jne
arpl
sub
xlat
add
mov
inc
outsb
pop
das
popa
loopne
dec
mov
movsb
or
pop
ss
mov
daa
push
sub
jmp
testl
mov
adc
mov
leave
xor
aam
ret
mov
push
ret
mov
aaa
stc
pop
add
xchg
jae
mov
mov
imul
outsl
outsl
icebp
pop
mov
aaa
cmpb
add
popa
addr16
cmc
scas
ds
out
xor
xchg
and
arpl
push
insb
call
gs
mov
inc
insl
shlb
adc
xor
popa
stos
int3
lret
mov
aad
xor
cwtl
add
lcall
sbb
dec
jg
je
in
aam
test
inc
xor
sub
cmp
pop
aad
jl
les
daa
dec
call
pop
cs
dec
pop
add
rcl
and
add
or
dec
cmpsb
faddl
loopne
gs
dec
add
insb
mov
cmp
mov
pop
addb
cmp
and
and
inc
es
jnp
and
push
das
adc
ret
iret
sbb
dec
push
ret
xor
insl
pop
stc
fadd
es
pop
or
jecxz
mov
adcl
leave
into
sbb
lar
mov
adc
sub
pop
out
rcrb
xor
push
jp
sub
cmc
ljmp
ret
adc
dec
int
out
lret
fimuls
mov
imul
rorl
and
pop
add
imul
gs
sub
sub
addr16
in
cmpsl
push
cld
fwait
enter
mov
js
fidivl
inc
imul
das
mov
mov
test
inc
pop
dec
popa
mov
sbb
cmp
sub
push
xor
repz
xor
lock
pop
xor
pop
js
pop
add
mov
or
data16
xchg
adc
jp
insl
mov
popf
in
cmp
xor
mov
das
movsl
and
mov
cmpsl
cmpsl
dec
mov
push
cs
repz
outsl
loope
xor
cmp
hlt
pop
pusha
dec
jp
and
fwait
jmp
mov
mov
repz
cs
ss
fsubl
mov
popa
es
movsl
mov
sbb
hlt
ret
test
adc
call
popf
jl
aad
mov
push
push
xchg
sahf
icebp
int3
xor
pop
push
inc
pop
aas
or
shrl
push
fdivl
mov
sub
outsb
les
sub
lods
mov
jns
scas
enter
sbb
push
push
stos
xchg
xor
mov
sbb
mov
into
loope
pop
xchg
icebp
scas
movsb
sbb
repnz
mov
pop
xchg
add
movsb
jns
xchg
fsubrs
repnz
stos
or
aad
dec
repz
mov
sbb
scas
jbe
lahf
sub
sub
lods
xchg
mov
jle
jae
movsl
jns
adc
jge
dec
in
mov
mov
mov
fs
fcoml
aam
xchg
and
cld
stc
jg
add
fidivl
xchg
lret
pop
scas
clc
pusha
fistpl
daa
fsts
dec
jle
mov
ljmp
sbb
scas
adc
ljmp
mov
mull
lret
jb
cmp
pop
sbb
mov
stc
js
push
mov
daa
push
pop
out
jle
bnd
jb
and
xor
push
inc
jg
ret
mov
cwtl
pushf
push
xor
pop
fs
add
jmp
mov
icebp
add
push
pop
fimull
jge
nop
cmp
xlat
inc
lods
mov
push
mov
pushf
xchg
lods
rolb
ret
mov
mov
inc
jae
mov
popa
into
in
call
or
test
mov
xchg
outsl
pop
xor
in
ffree
xor
fcmovb
xlat
cmpsb
lret
test
dec
clc
fs
stc
push
subb
push
cltd
dec
sub
int
int3
and
into
loop
dec
fsubl
adc
lea
ficomps
ss
fwait
lea
push
cwtl
lea
hlt
mov
lahf
mulb
xor
sub
iret
fsubl
push
addr16
enter
std
push
aam
cs
aas
imul
stos
add
xchg
out
and
inc
mov
cli
or
fdiv
cmc
and
push
dec
jne
mov
jle
pop
push
fisubrl
xlat
fcmove
shll
jp
jnp
mov
adc
idivl
nop
cmpsb
or
xchg
lret
dec
push
adc
bound
mov
popa
sarb
les
xchg
cmpsl
push
loope
xor
pop
cmp
mov
popa
push
cmp
lock
and
lds
pop
cli
jo
mov
mov
ret
or
or
xchg
pop
or
jno
push
insl
cmp
or
nop
cli
arpl
pusha
popf
loopne
aaa
fnsave
mov
pop
pop
in
ficoml
rorb
test
fnstenv
sub
lret
or
cltd
sub
cmp
add
frstor
inc
xor
add
int3
popa
and
pop
sbb
cmp
mov
cli
mov
adc
lds
fwait
mov
aas
xor
sub
shl
pop
sub
sbb
lahf
xchg
aas
jmp
add
jmp
adcl
pop
and
shlb
inc
sbb
mov
test
or
jp
stc
fsubrl
push
mov
shl
jmp
leave
fs
jo
xchg
enter
push
adc
shrl
pop
sub
mov
cltd
push
push
xchg
mov
sbb
popf
repnz
sbb
pop
xchg
lahf
inc
sub
fcmovnbe
xor
icebp
test
and
dec
cs
add
jb
ja
arpl
sar
sbb
int
sbb
inc
jle
shll
iret
repz
mov
imul
fs
ds
dec
out
xor
mov
outsb
sub
aaa
sub
arpl
adc
pop
mov
jmp
daa
aas
sahf
push
out
es
repnz
out
push
mov
add
push
mov
subb
rclb
adc
jae
xor
xor
jno
insl
lods
cmpsl
mov
ret
push
rolb
sbb
mov
push
adc
aaa
popf
inc
add
sub
mov
jo
xor
mov
dec
out
add
mov
sti
xchg
jno
fldcw
sbb
mov
hlt
movsl
repz
in
lret
inc
inc
subb
fldl
jno
test
std
push
in
cwtl
shr
mov
test
jns
pop
sbb
into
add
addr16
mov
aad
mov
mov
iret
inc
repnz
icebp
gs
jecxz
incb
aad
or
enter
cmp
nop
push
adc
cmp
mov
push
push
cli
hlt
mov
sub
bound
lret
pop
mov
xor
or
xor
pop
push
insb
in
xor
inc
nop
fwait
aas
push
adc
pushw
pusha
sbbb
fwait
cmp
inc
or
lods
sar
in
mov
jo
add
jns
enter
and
jno
dec
mov
pushw
movsb
mov
mov
fidivl
loopne
cmpsl
add
xlat
or
or
fisubrs
mov
mov
scas
rolb
das
sbb
lods
daa
push
jmp
rclb
rolb
mov
aam
dec
out
movsb
ss
in
addb
int3
jg
sbb
xchg
add
cmp
pop
mov
inc
jp
out
icebp
adc
out
int
mov
mov
sub
push
xor
out
push
test
pop
addb
fwait
xchg
cmp
mov
ds
movsw
cld
enter
push
jae
std
cmp
and
sub
movsl
xchg
push
test
dec
or
or
xchg
fsubl
add
push
jl
lret
push
wrmsr
movsl
xchg
test
jg
scas
xor
cmp
scas
test
arpl
sub
stc
push
cmpsl
adc
pop
mov
pop
add
mov
stos
loope
outsb
xor
popf
lods
imul
xor
js
xor
scas
push
jbe
pop
sbb
cmp
or
pop
shlb
pop
aas
cmp
mov
cmc
xchg
ss
cmp
sub
jno
iret
ret
fstpt
ds
xor
adc
js
sbb
ja
mov
dec
inc
xchg
xor
pop
dec
js
jle
fnstenv
jno
inc
bound
pop
inc
xchg
ret
pushf
cwtl
or
jo
or
push
push
aaa
and
mov
das
or
out
test
ret
inc
push
xor
inc
out
dec
adc
or
add
inc
push
int
push
mov
sbb
hlt
lods
in
leave
sbb
hlt
jno
mulb
mov
pop
dec
int3
orl
out
nop
mov
pop
inc
jno
mov
fsubrs
cmp
xchg
inc
mov
adcl
jle
faddl
inc
mov
stos
aam
dec
addl
xor
add
mov
fistpll
and
sahf
cli
xchg
pop
mov
mov
sub
rcll
push
xchg
push
sarl
aad
lcall
jge
imul
pop
xchg
movsl
mov
cmp
mov
out
std
sti
imull
enter
cmp
es
sbb
popf
movsl
fstps
mov
cmp
mov
xorl
rol
out
fistps
insl
aaa
adc
mov
dec
cltd
dec
flds
lea
sbb
push
mov
add
out
mov
rorl
adc
and
push
or
aam
insl
scas
cld
xchg
scas
int
and
std
add
ds
push
mov
pusha
stc
cmpsl
jbe
sbb
pop
mov
movsb
out
mov
icebp
loop
and
jmp
xchg
sbb
rcrb
cltd
lret
add
sub
xchg
pop
add
mov
jmp
pop
xor
jnp
xor
push
int
or
out
sbb
in
inc
clc
aam
movsb
les
hlt
jl
lea
mov
pop
int
jg
or
xchg
cmp
mov
ret
cmp
sti
shlb
cmp
div
in
mov
in
cmpl
roll
inc
xchg
inc
fs
push
pushf
pusha
mov
cmc
rcll
xchg
adc
pushf
cltd
out
cli
mov
push
cwtl
icebp
leave
das
xchg
and
mov
sbb
arpl
sbb
cmp
leave
dec
pop
inc
xor
mov
cwtl
pop
push
into
push
cmp
pop
cmp
jl
pop
adc
and
out
movsl
scas
stos
inc
repz
repz
add
ja
pop
xchg
aam
cmp
xchg
outsl
cmpsb
loopne
pushf
jo
lret
popa
cmc
add
call
xchg
mov
fmuls
pop
popa
fwait
loope
mov
mov
ret
out
das
fst
in
loopne
cmp
pop
adc
lcall
or
scas
or
jnp
add
iret
mov
aaa
mov
leave
fs
mov
adc
ss
mov
outsb
or
nop
xchg
int3
xchg
repz
cmp
rorb
rorb
gs
lods
outsl
testl
test
mov
xchg
hlt
cs
push
mov
adc
fiaddl
rcl
or
push
pop
rorl
ss
je
scas
mov
mov
mov
sbb
popa
xchg
jg
cwtl
lds
pop
lock
adc
lea
fnstcw
jp
ljmp
loop
sti
push
inc
cmp
mov
je
out
mov
inc
sar
push
inc
incl
push
divl
sbb
xchg
jbe
jg
lea
mov
loopne
mov
sbb
xchg
and
lret
sbb
sub
movsb
stc
pop
into
cmp
mov
jae
or
ja
popf
cmp
push
out
and
dec
inc
mov
push
adc
push
xlat
sbb
into
push
mov
psraw
icebp
xchg
dec
mov
lcall
nop
insl
in
popa
mov
mov
jnp
lds
je
dec
mov
std
adc
lock
aaa
shrl
push
mov
dec
push
xor
and
sub
repnz
jno
and
inc
push
add
hlt
inc
cmp
mov
je
jp
and
movsl
sbb
push
mov
out
sbb
aas
repnz
xchg
aaa
add
dec
cmp
hlt
jb
pop
xchg
inc
xchg
adc
into
pop
adc
add
out
movsl
pop
je
add
mov
nop
int3
push
lods
xor
cltd
adc
imul
into
mov
and
lret
jecxz
mov
or
aam
mov
cmpsl
adc
jb
mov
and
lcall
clc
fnsave
data16
cmp
loope
lock
jne
inc
movsb
jnp
enter
imul
inc
sbb
aad
ret
jo
add
imul
leave
xlat
adc
xor
aas
pop
xor
mov
push
sarb
adc
sti
mov
add
push
loope
jmp
dec
fildl
jo
ss
adc
and
pop
push
int
and
std
push
and
sub
out
lock
cmp
xor
xchg
xchg
mov
push
cmpsl
xchg
decb
mov
pop
scas
test
adc
in
jge
stos
movsb
test
inc
test
dec
cli
in
jo
call
cmp
pop
mov
or
enter
mov
mov
or
mov
dec
mov
cmp
in
and
jnp
add
jne
add
faddl
inc
mov
leave
dec
mov
jle
call
dec
pop
jnp
xor
jno
pushf
push
shll
push
out
mov
sub
enter
ret
je
loope
push
sub
pop
cld
nop
jmp
enter
leave
jb
and
xchg
and
gs
push
hlt
int
push
lret
test
push
icebp
sub
adc
das
or
in
jbe
adc
jo,pt
mov
jecxz
dec
pusha
hlt
sbb
pop
mov
xchg
or
cmpsb
rcll
and
pushf
scas
mov
in
xor
fsubrl
and
push
push
insl
js
ret
outsb
add
lret
fcomip
mov
movl
mov
pushf
add
jecxz
push
jge
cmc
jbe
test
jecxz
into
ss
sbb
sbb
sub
outsb
mov
cmc
adc
push
shl
iret
test
cs
je
jge
jg
mov
cwtl
repnz
sub
in
in
imul
and
cs
flds
out
push
jb
outsl
cmc
shll
mov
sub
xor
push
pop
addr16
imul
imul
ret
dec
adc
pop
push
aad
jg
and
sub
sub
ret
pusha
add
mov
push
insl
inc
xchg
push
je
mov
lret
ret
bound
and
jne
cmc
sbb
repz
das
jle
dec
xchg
arpl
mov
mov
fst
sahf
or
mov
mov
pop
ds
cmp
dec
imul
icebp
cmp
sub
sbbl
pop
repnz
mov
popf
gs
mov
cmp
dec
sti
and
mov
daa
or
mov
outsb
dec
cli
lret
in
jle
add
not
lea
scas
jl
mov
repz
and
mov
xchg
xlat
mov
int
mov
pop
mov
mov
outsb
adc
stos
and
sti
stc
fistpll
loope
xor
cmp
and
test
xchg
dec
in
xlat
ljmp
cld
ret
or
pop
cli
aas
push
out
sbb
jbe
jmp
xchg
cwtl
xor
sub
ret
push
test
xor
jg
mov
push
sbb
xchg
lahf
dec
push
std
adc
and
int
jecxz
sub
jecxz
rcrl
shrb
scas
push
pop
nop
sti
insb
call
pop
xchg
push
and
add
xchg
xor
jecxz
mov
or
loop
cmp
push
les
fbstp
aam
sub
aad
jo
test
or
pop
pop
pop
lret
dec
cmp
fiaddl
and
add
addr16
mov
clc
outsb
ss
aaa
arpl
repnz
mov
and
rcr
ret
pop
test
push
sub
sub
subl
mov
xor
pop
ret
pop
mov
rorl
jns
xchg
jbe
or
ds
aad
movsl
push
mov
sti
mov
mov
int
inc
dec
in
mov
jbe
xchg
fildl
adc
fimuls
cmp
mov
cmp
cli
jae
xchg
and
mov
out
lods
in
sbb
adc
loopne
cmp
insl
lods
adc
sahf
cmp
dec
js
mov
jle
or
xor
push
fcomp
insb
sub
adcl
inc
sbb
jb
push
and
aaa
push
jb
cwtl
dec
push
in
mov
push
nop
pushf
repz
dec
inc
aad
ret
dec
jno
and
mov
mov
ds
out
xlat
insl
mov
xchg
pop
fidivrl
cmc
mov
sub
mov
ss
je
adc
push
and
int3
xchg
lods
or
std
mov
inc
mov
dec
and
adcl
mov
mov
les
outsb
ret
popa
movsl
xchg
out
shll
cwtl
imul
jge
jne
ja
xor
mov
dec
bound
xor
mov
fnstcw
jge
test
xchg
jo
iret
lahf
sbb
mov
test
loope
or
notl
lret
jns
in
sbb
jmp
in
fdivl
sub
fdivl
cmpsl
cmp
mov
int3
adc
push
lds
xchg
arpl
mov
dec
aas
mov
into
rcrl
xchg
mov
xchg
jge
test
jne
cwtl
or
sbb
mov
fidivl
xor
idiv
xor
jnp
sub
xchg
and
sbb
sahf
mov
jle
jp
mov
dec
je
mov
cld
int
ret
stos
add
mov
fnstcw
push
sub
pop
xor
add
enter
and
adc
sub
inc
push
std
fsubr
sbb
ds
jmp
das
adc
cmpb
mov
iret
cmp
jno
xor
gs
cmp
cmp
cwtl
div
and
jg
outsb
pop
pop
inc
out
pcmpgtd
jns
nop
mov
push
add
sahf
and
enter
imul
inc
popf
push
pop
add
incb
scas
mov
shrb
loope
add
cmc
dec
cmpsl
and
scas
adcl
cwtl
ljmp
jb
jns
sbb
and
xchg
inc
adc
xchg
jbe
outsl
fwait
mov
xor
lods
dec
in
leave
add
or
sub
test
mov
cs
sub
lret
lock
or
sarb
ret
sar
dec
and
push
gs
test
lret
loope
and
cs
xchg
rolb
dec
inc
lret
jo
cmpsl
loop
mov
inc
fnstsw
jno
xor
jecxz
cmovne
adc
pop
dec
adc
or
pushf
pop
sub
aad
push
add
data16
int
sbb
sub
push
pop
inc
loopne
lods
jmp
cmp
xchg
ss
rolb
push
add
loop
add
xchg
es
push
mov
shrb
out
lret
std
iret
push
pop
je
mov
xchg
add
mov
lcall
out
adc
push
pop
cmp
mov
mov
mov
fucomi
data16
jo
fildll
outsl
lcall
mov
fsts
mov
mov
add
loopne
adc
jb
dec
js
loope
clc
ljmp
xchg
add
cmpsl
rcrl
repz
insb
mov
int3
add
lcall
mov
sub
sbb
roll
sub
jg
fsubrs
and
ror
out
rolb
addr16
fcompl
roll
fmuls
pop
sti
icebp
repz
sbb
in
and
sarb
test
sarb
push
mov
sarl
mov
call
mov
repnz
fnstenv
sub
lret
jbe
aam
addr16
xlat
mov
add
mov
inc
xchg
lods
ljmp
jecxz
fs
sub
decb
popa
dec
repnz
cld
mov
addr16
mov
das
sub
loop
fnsave
sbb
js
xlat
xchg
cmpsl
in
sbb
les
inc
adc
mov
push
in
inc
add
lcall
shrl
movsb
outsb
jmp
mov
cld
mov
in
ret
or
mov
mov
push
mov
jae
pushf
inc
and
ffree
adc
jmp
pop
cli
fs
shr
cs
mov
dec
fisubs
sarl
inc
in
shlb
inc
sti
mov
insb
mov
movsb
adc
imul
sub
js
ljmp
imul
gs
jle
lods
cmp
mov
cmpsl
sbb
push
stos
adc
cmpb
dec
jo
pop
and
xchg
inc
dec
push
cmp
mov
insb
pop
pop
js
dec
in
adc
scas
into
mov
pop
mov
lds
dec
scas
in
xchg
lds
outsb
into
fnstcw
mulb
popf
notb
fnsave
cwtl
ret
and
arpl
test
dec
repz
fs
pop
popl
or
cs
dec
es
aaa
add
rcll
shlb
adc
dec
imul
pop
jns
cld
xlat
cmp
dec
dec
xor
aam
sub
xor
push
in
in
push
es
cmp
mov
and
xchg
lds
out
xchg
sub
mov
movsb
call
es
cli
movsb
dec
mov
dec
icebp
imul
test
loop
loop
mov
lds
lea
cmp
in
jl
enter
in
sbb
addb
gs
jo
sbb
push
sbb
pop
popa
and
xor
pusha
jg
cwtl
outsl
loope
and
test
pop
cmp
push
loope
js
in
inc
rclb
mov
fstps
aas
pop
mov
nop
sbb
aas
movsb
into
fmulp
jnp
out
xor
push
or
xchg
mov
mov
mov
pop
inc
xchg
imul
cmp
sub
or
jmp
or
js
xlat
fstpl
cmp
cmp
mov
loop
jb
lret
sbb
push
or
lods
sbb
jp
push
mov
inc
lahf
push
scas
jno
add
mov
jne
sub
sub
jno
aas
cltd
pop
in
dec
into
adc
jp
clc
popa
dec
mov
int3
pusha
ljmp
pop
gs
leave
push
dec
dec
lret
push
loope
sti
sbb
and
push
xchg
mov
shrb
test
inc
enter
sub
jle
repz
xlat
push
add
adcl
fwait
ja
and
int
aas
xchg
mov
dec
sahf
orl
cmp
call
jae
xchg
outsl
repz
mov
pop
scas
cmp
xor
mov
sub
test
shlb
jbe
sub
inc
cmp
clc
add
addr16
mov
xchg
daa
insl
mov
xchg
xor
es
lock
inc
test
bnd
xchg
mov
insb
mov
int
mov
jl
adc
shl
cs
daa
cmp
movsl
lret
push
clc
mov
aas
mov
mov
push
sub
imull
cli
jle
xchg
jnp
test
jbe
mov
pop
cmpl
lret
mov
sbb
cmp
fs
shll
add
lock
pop
push
ret
scas
jnp
in
cmp
push
roll
shl
sub
inc
dec
je
and
jecxz
push
mov
xor
pop
outsl
or
negl
cs
push
push
sub
sub
mov
pop
sub
into
fcmovbe
jb
pop
add
lock
jns
inc
imul
cmc
mov
push
stc
cmp
or
lds
cmp
ret
pusha
in
jae
mov
jns
mov
push
bound
popf
adc
cwtl
or
cmp
or
nop
jecxz
andl
mov
dec
xor
into
iret
dec
sbb
xchg
cwtl
int
xor
and
neg
and
inc
jl
dec
push
push
xchg
xor
out
jnp
mov
cwtl
add
push
and
icebp
add
cmc
test
mov
xchg
mov
pop
sub
data16
pushl
stc
into
jno
jecxz
sbb
pop
xlat
outsb
push
mov
data16
inc
stc
or
cmp
into
jmp
inc
cltd
insb
dec
aaa
dec
and
hlt
mov
test
push
js
sbb
fs
call
xchg
inc
sahf
int
loop
xor
and
cmpsl
cwtl
in
xchg
mov
in
test
arpl
add
mov
jno
mov
fcomi
fstps
in
lcall
ret
jg
push
mov
incl
jns
les
cs
out
mov
jno
icebp
xor
repnz
mov
inc
das
inc
sub
xor
mov
scas
fldenv
jl
out
out
aad
fistpll
sbb
or
inc
push
xchg
sub
sbb
push
sbb
mov
and
lock
pop
push
lds
fs
inc
out
inc
adc
testl
dec
sub
sti
xabort
punpckhdq
add
push
sbb
pop
push
fmul
pop
out
scas
nop
jae
and
sarb
cmc
je
ret
or
xlat
inc
xor
call
sahf
push
test
mov
fldenv
xchg
jae
pop
aaa
icebp
fcomp
jmp
into
fsincos
daa
popf
jae
ret
loope
inc
xchg
lret
jb
sub
mov
xor
add
iret
mov
mov
xor
leave
adc
xor
mov
iret
aam
loope
daa
push
rol
cmp
xor
cmp
icebp
pop
movsb
sahf
xor
dec
xor
insb
nop
imul
jge
push
or
pop
flds
out
sub
push
cmp
in
or
sub
into
testl
adc
pop
xchg
pushf
xchg
jnp
pop
mov
pushf
sub
das
pop
dec
cmp
jnp
sub
shrl
popf
sub
pop
pop
xchg
inc
adc
mov
pop
mov
data16
mov
sbb
pop
sub
mul
pop
popa
jae
lods
xchg
jmp
inc
mov
adc
add
movsl
xlat
into
sar
sbb
mov
adc
xchg
neg
and
ds
sub
in
lret
stos
or
push
jmp
fs
cmp
pop
aas
bound
push
adc
pop
mov
lahf
mov
mov
insl
add
popa
fcoms
jns
sub
mov
ret
lds
scas
or
inc
push
ljmp
mov
dec
les
push
sar
xor
sbb
out
out
icebp
stos
push
jecxz
inc
sub
xor
inc
mov
enter
insb
or
pop
sub
adc
xchg
lea
dec
add
out
sub
rolb
mov
fdivs
shr
cmpsl
jmp
push
jno
mov
ljmp
or
dec
hlt
push
repnz
push
mov
mov
mov
sbb
pop
jg
dec
std
cmp
xchg
pop
xor
cmp
dec
or
push
mov
push
push
mov
out
shll
push
lods
jno
loope
xlat
daa
pusha
xchg
insb
xchg
mov
mov
mov
rcl
fwait
cltd
fstpl
xlat
sbb
jge
xchg
push
icebp
dec
add
lock
cli
jecxz
inc
in
inc
push
mov
rcrl
rcl
push
cmc
inc
adc
xor
or
hlt
loopne
sahf
daa
push
push
lahf
cmp
xchg
rcrb
push
cmp
ret
sub
lret
xor
mov
mov
shlb
push
mov
cmp
shll
cmpps
dec
push
cld
and
push
mov
sbb
mov
aaa
pop
xchg
flds
mov
movsl
aam
mov
es
into
push
add
jge
pop
xor
or
lahf
or
mov
mov
in
mov
mov
pop
mov
pusha
dec
cmp
mov
and
xchg
adc
imul
xchg
add
dec
lcall
sbb
sub
out
sahf
xor
movl
ret
scas
sub
stos
adc
inc
inc
sub
mov
and
test
push
sub
gs
cli
and
lds
int3
scas
mov
or
jb
add
mov
pushf
mov
stc
popa
adc
loope
add
stos
sub
lods
mov
and
xor
jb
inc
inc
loop
and
mov
mov
lods
or
rorl
and
sysexit
mov
aad
testb
andb
add
adc
and
mov
xchg
adc
push
iret
jnp
inc
cmp
push
xor
pop
ljmp
ja
add
sub
push
hlt
xchg
or
cmp
mov
test
jge
mov
icebp
and
lret
lret
mov
data16
pop
subl
mov
inc
int3
arpl
dec
popa
sub
dec
outsb
imul
dec
or
push
aaa
ret
adc
rolb
orb
mov
adc
test
mov
xchg
enter
mov
rclb
adc
insl
jne
and
mov
stos
test
les
cmc
cmp
test
repnz
or
rcrb
les
out
dec
fcoml
dec
aam
xor
xchg
aas
popa
call
pop
insl
and
sbb
shll
sbbb
sbb
lcall
aas
adc
mov
adc
dec
rcl
xchg
in
out
xchg
or
into
mov
jle
jne
les
mov
outsl
xchg
and
xchg
stc
or
xchg
outsl
in
int3
sub
fsubl
fnsave
dec
mov
shrb
ret
adc
jbe
fisttps
inc
jg
sahf
inc
arpl
inc
jge
jb
push
mov
lcall
ljmp
jnp
insl
outsl
xor
shll
pop
and
das
jl
pushf
mov
inc
je
xchg
scas
pop
popf
jp
addb
divl
es
andb
dec
popf
in
ret
lret
push
ret
mov
pop
mov
xchg
les
jns
insl
cld
pop
cmp
idiv
stos
int3
pop
adc
aas
jl
adc
lods
dec
adc
mov
mov
adcl
faddl
and
fsubl
or
mov
mov
xchg
in
adc
aam
cmpb
sbb
inc
jne
jns
jle
movl
popf
fnsave
cli
adc
das
mov
mov
xor
add
scas
or
mov
in
adc
outsb
jp
push
mov
int
add
rcll
cmp
mov
add
dec
adc
mov
push
daa
jo
add
frstor
xor
mov
clc
frstpm(287
insb
sbb
in
inc
pop
out
shrb
test
cltd
dec
test
pop
insl
and
pop
les
andl
imul
cmc
sub
cmpl
adc
sbb
or
nop
and
in
daa
gs
movsl
fwait
pusha
jb
out
lcall
int3
mov
fcmovbe
shll
and
aas
and
repnz
cmp
test
push
gs
out
mov
mov
mov
fucomip
push
add
lret
es
jo
or
or
test
js
mov
inc
nop
sub
pop
push
out
repz
pusha
jg
sti
inc
sbb
or
fs
pop
adc
cmpsl
push
test
bound
lods
xor
xor
loopne
dec
rcrl
inc
pop
mov
mov
ss
std
mov
fstps
fs
and
imul
or
xchg
mov
outsl
or
mov
pop
xor
sbb
movsb
dec
enter
dec
js
jecxz
push
fsubl
add
pop
outsb
clc
in
imul
mov
lahf
pop
xchg
adc
fisubrs
mov
pop
test
aam
daa
stos
call
pop
push
add
loope
xchg
xchg
cmp
shl
fs
lcall
notl
jmp
es
idivl
push
dec
mov
pop
mov
or
mov
iret
repz
ja
fwait
cmpb
push
lcall
push
add
cli
inc
xorl
loopne
push
ret
sub
mov
cwtl
stos
mov
inc
out
mov
sbb
xlat
nop
sbb
xchg
orb
scas
test
push
and
scas
nop
scas
sub
push
test
pushf
xor
fldcw
outsb
mov
scas
sub
mov
lods
cmpl
ss
lock
mov
outsl
dec
stos
insb
cltd
in
mov
mov
test
cs
mov
leave
data16
js
ret
cmpsl
lcall
jl
push
nop
jp
jo
mov
xor
push
dec
sub
dec
scas
ficomps
negb
cmp
mov
push
inc
mov
cmpsb
mov
jo
rcll
pop
and
lret
sbb
xor
testl
clc
cltd
inc
in
pop
adc
xchg
push
add
or
push
dec
sbb
bound
push
pop
push
outsb
mov
jp
ret
call
and
js
add
xlat
js
add
sbb
mov
stc
mov
pusha
inc
fcomps
in
dec
out
iret
mov
shl
jge
xor
ljmp
sti
scas
jmp
movsl
jns
je
mov
hlt
mov
add
clc
inc
rorl
adc
lret
nop
sbb
out
xchg
outsb
jecxz
xchg
sbb
stos
sub
std
mov
pop
dec
push
cmp
xor
gs
and
or
and
mov
cmp
stos
jbe
sbbl
das
cmp
mov
shll
sub
insl
nop
outsl
ja
and
jb
movsb
aad
stc
in
sub
ljmp
or
xor
ret
iret
mov
mov
cmpb
xlat
repz
cmpsb
pushaw
dec
adc
je
pop
hlt
xchg
sti
mov
mov
lods
js
xchg
fsubl
sar
cbtw
mov
js
stc
aam
jo
or
lret
sbbb
out
into
xchg
dec
sub
cmp
and
es
insb
cltd
dec
idivl
stos
out
mov
adc
inc
xchg
pop
in
lret
mov
ds
in
dec
and
push
xor
xor
xor
add
inc
fisttps
mov
popa
pushf
in
xor
and
xor
pop
push
pop
sbb
mov
fldl
outsb
or
or
push
cli
and
inc
and
pop
xor
insl
and
sub
mov
sub
and
aas
sbb
pop
into
dec
add
mov
bound
cwtl
shl
sbb
and
es
cmp
mov
xchg
popf
into
jp
xlat
mov
mov
xlat
push
rcr
pop
sbb
mov
jnp
loopne
iret
out
xchg
insb
rcll
hlt
outsl
dec
xchg
fwait
dec
ret
aad
or
rolb
and
and
mov
dec
unpcklps
pop
xchg
dec
loop
shll
xorb
xchg
adc
in
sub
xchg
mov
fs
mov
loop
mov
sub
filds
mov
mov
inc
sub
mov
or
leave
mov
jbe
mov
push
cwtl
testl
lcall
dec
push
xchg
fisubrl
jl
dec
pop
data16
dec
fists
fists
lret
mov
push
in
ret
sbb
ret
repz
inc
int3
enter
movsb
mov
nop
adc
addr16
pop
adc
mov
pop
xor
push
shll
mov
mov
pusha
pushf
mov
push
jge
xor
pop
adc
cld
lret
imul
mov
filds
lea
movsl
pop
test
adc
inc
jmp
cmp
xor
sbb
push
jmpw
cmp
aaa
jno
aaa
js
mov
test
jo
call
mov
lods
xchg
xor
ds
and
inc
push
add
pop
lods
leave
push
inc
stc
imul
xchg
shrb
xlat
or
dec
jecxz
xor
fldl
mov
in
pop
stc
xor
clc
and
adc
mov
das
clc
adc
and
stos
cmpsb
adc
repz
icebp
scas
add
or
push
iret
inc
pop
addr16
data16
add
dec
xchg
stc
push
sub
shll
int
aam
add
stos
cld
arpl
stos
cmpsb
inc
jns
xor
fisttpll
sub
popf
sbb
mov
dec
jne
mov
push
push
mov
mov
sub
xchg
aam
outsl
in
repz
add
out
jae
imul
movsl
inc
loope
lret
push
cmp
mov
jae
insl
aaa
jecxz
aas
in
jnp
scas
lds
test
jbe
add
icebp
xchg
imul
mov
push
sahf
mov
je
leave
dec
add
cmp
cmp
insl
pop
call
lret
jnp
cmc
mov
lea
das
out
and
sub
insl
or
dec
inc
pusha
cmp
loopne
mov
add
xor
call
mov
std
aaa
lret
pop
leave
xchg
xlat
pop
xchg
pop
lcall
repz
adc
xchg
div
jne
mov
fidivl
ljmp
stos
sbb
das
insl
mov
in
cmpsb
inc
and
shll
fmuls
rcl
les
std
loopne
cmp
lock
or
mov
pop
pop
pop
int3
repnz
fdiv
dec
das
inc
xor
mov
mov
push
imul
bound
gs
jae
jae
stos
in
test
xchg
bound
cmpsl
sub
sub
out
stos
xchg
dec
leave
add
pxor
int
clc
in
mov
lret
mov
icebp
push
jb
outsl
jmp
icebp
or
xchg
jmp
in
xor
andb
pop
lods
jno
rcrl
movsb
inc
lcall
loope
test
dec
pop
je
jbe
cmpsl
cwtl
bound
repz
addr16
mov
sbb
jb
daa
push
sbb
and
dec
jle
mov
sbb
out
dec
inc
sbb
aas
iret
ljmp
pop
mov
out
sbb
outsl
insl
sbb
sub
repnz
rolb
in
js
jns
inc
add
ret
xor
test
popa
and
push
in
orb
js
and
add
shlb
push
jbe
jnp
sbb
add
cmp
sbb
pop
add
shl
aaa
nop
and
or
sbb
inc
xchg
lahf
fildl
iret
in
je
xchg
mov
xor
ret
and
mov
shlb
movzwl
xorl
scas
shll
sub
and
fdivp
in
mov
push
int
ret
push
aad
nop
inc
sbb
subl
js
and
adc
cmpsl
mov
das
xchg
test
jp
mov
out
push
push
out
inc
push
dec
lock
fdivs
and
sbb
sbb
xor
iret
push
jbe
pushf
push
iret
dec
pushl
ficomps
stos
lods
fsts
mov
xor
cmc
in
aas
mov
sbb
scas
lret
and
or
xor
dec
lcall
imul
fadds
jge
test
es
repz
mov
and
mov
add
fmuls
cld
loopne
enter
je
cmp
lahf
add
ret
push
loope
fildl
pop
or
stc
paddsw
add
and
shlb
pop
sar
leave
jg
addr16
and
aaa
jl
mov
dec
call
insl
and
inc
mov
sub
loop
fucomp
sbb
es
xchg
fbstp
sbb
jl
addr16
imul
xchg
inc
sbb
dec
faddl
push
out
add
sahf
repnz
lcall
orb
daa
or
lret
cmp
mov
int
mov
add
repnz
add
lahf
dec
mov
adc
mov
mov
mov
cwtl
test
fsubs
mov
mov
cmc
cmp
scas
jmp
loop
hlt
sahf
and
std
decl
fxch
sub
test
jmp
mov
inc
sbb
loope
cs
testb
fdivrl
xchg
pop
nop
cmp
mov
jp
or
adc
in
xor
in
lret
jl
gs
mov
pop
push
inc
call
inc
jns
lods
je
adc
pop
sahf
loopne
xchg
mov
cmpsb
ja
mov
lahf
lock
pop
lcall
inc
fmuls
inc
ja
ss
inc
mov
mov
mov
xchg
punpcklbw
stos
sbb
ljmp
xchg
enter
out
fbstp
ss
sub
shr
ds
adcl
fcomps
daa
aas
adc
inc
in
cmc
or
push
mov
js
or
frstor
movzbl
mov
sub
lahf
inc
and
loopne
cmp
shlb
mov
cmp
dec
es
xor
mov
loope
lahf
scas
push
inc
mov
push
fdivrs
push
mov
sbb
cltd
inc
cmp
xor
cmp
adc
push
adc
push
add
imul
mov
xor
push
mov
mov
inc
std
hlt
loope
mov
lahf
fucomi
arpl
testl
mov
sbb
lds
pop
ja
lret
hlt
inc
jmp
pop
sbb
fmuls
jb
fucom
movsb
sbb
push
mov
lods
lahf
jge
or
cmpl
mov
mov
in
fs
cmp
add
fdivrp
mov
inc
addr16
gs
jp
inc
fsts
stos
rcrl
push
cmpl
cmp
insl
cmp
loop
sub
adc
mov
repnz
loop
mov
sahf
push
jle
dec
int3
adc
push
add
pusha
bound
mov
aad
add
sbb
mov
pop
scas
jg
leave
and
push
addr16
mov
pop
sub
mov
or
leave
mov
pop
sti
mov
push
cltd
xor
stos
pop
jl
mov
cmp
cmp
aad
daa
add
daa
and
mov
pop
rorl
adc
nop
cmp
pusha
add
adc
dec
and
push
inc
mov
mov
mov
daa
adc
shr
cwtl
xor
or
shl
dec
jno
subl
call
xchg
in
push
mov
clc
jbe
arpl
in
xor
int
mov
in
pop
fs
xor
sbb
bound
sbb
lods
push
adc
fidivl
inc
sub
dec
lds
pop
aam
adcb
aas
or
mov
mov
inc
sbb
insb
add
push
popf
inc
mov
cs
cmc
add
sub
add
or
std
push
mov
mov
and
adc
xchg
and
fsts
lock
jl
cmp
inc
fisubs
rcr
insb
into
stc
adc
mov
push
mull
ja
inc
stos
les
mov
sti
test
cmp
lahf
movsb
repz
and
pop
push
mov
xchg
pop
jge
lea
gs
xchg
and
mov
jg
push
test
dec
les
xlat
mov
aaa
repnz
mov
pop
aaa
or
and
adc
dec
and
int
jne
cli
and
xor
cmp
lcall
sub
mov
ds
and
imul
std
lds
sbb
xchg
adc
sub
push
cwtl
xchg
test
dec
mov
push
inc
shlb
call
hlt
mov
adc
inc
arpl
out
sbb
mov
cld
lea
ficoml
lods
inc
dec
mov
jg
jne
inc
cmc
lahf
mov
or
mov
cmp
mov
and
cmp
ret
or
mov
pop
or
sub
fbld
dec
ret
push
cmp
mov
cmp
adc
mov
ljmp
dec
sbb
add
cmc
sub
mov
inc
push
add
mov
cmp
pop
mov
and
fidivrs
out
mov
cmp
push
mov
inc
ja
fisubrl
ss
outsl
insb
pop
das
or
or
jno
jbe
push
cwtl
incl
fnstsw
cmpsb
inc
push
call
in
stos
inc
arpl
and
movsl
out
pushf
ljmp
mov
clc
push
jmp
mov
adc
outsb
pop
pop
ss
std
dec
mulb
xchg
mov
sub
cmc
shlb
out
sub
adc
or
push
cmp
out
movsl
loope
pop
or
push
fnsave
mov
jne
jp
rorb
cmp
dec
xchg
arpl
pop
ss
mov
sub
mov
cwtl
pop
or
outsb
addr16
jp
push
in
sti
xor
icebp
xor
adc
and
mov
push
add
fsubs
mov
xchg
fists
xor
scas
mov
out
aad
daa
fadd
mov
mov
mov
xlat
stc
mov
fs
mov
pop
inc
jg
test
repz
aas
xor
imul
inc
mov
loope
lds
add
cmpsb
mov
adc
jbe
clc
iret
xor
hlt
xchg
jo
das
dec
in
cmp
adc
push
fs
repz
sbb
jl
sub
jae
mov
aam
mov
pop
psrld
and
in
lret
mov
cli
sub
dec
cltd
stos
sub
add
pop
roll
rcll
int
dec
cmp
xor
inc
sub
mov
xchg
xor
add
pop
jmp
sbb
sub
test
test
repnz
dec
out
dec
push
mov
mov
mov
out
mov
xor
and
mov
xlat
pusha
ss
xor
mov
popf
pop
inc
pop
leave
push
and
aaa
fsub
shld
movsb
rcrb
lods
fs
popa
push
arpl
sub
call
or
mov
sbb
dec
scas
into
out
imul
jno
dec
sbb
fcmovb
sbb
aas
fmull
sbb
pop
call
int
sbb
pop
lret
stc
mov
sahf
push
jl
jb
xlat
xor
roll
int3
xor
dec
mov
sbb
pop
std
jne
xchg
cmovs
movsb
pop
lret
lods
add
in
or
xchg
push
andb
popf
out
bound
hlt
hlt
push
dec
insl
cmp
sub
inc
mov
or
js
mov
add
jmp
xor
xchg
mov
addr16
sub
mov
pop
fldl2e
hlt
mov
add
fstps
call
ja
ds
cmc
aaa
pusha
jl
xor
in
cld
inc
daa
push
stos
pop
add
popf
jo
gs
jae
mov
mov
add
mov
scas
fimull
mov
clc
and
sbb
lds
das
xchg
mov
adc
dec
in
or
fistps
mov
rorl
fstp
sub
pushfw
push
pop
les
or
ret
jge
sti
adc
dec
rorl
jp
add
outsb
jl
lret
xor
sub
jl
add
mov
inc
xlat
outsl
mov
fiaddl
cli
sub
jl
inc
nop
adc
mov
std
in
pop
sbb
mov
das
jns
out
nop
xor
or
je
and
and
xchg
mov
movl
lcall
icebp
iret
add
mov
popa
outsb
loop
fsubs
into
mov
or
or
jg
cmc
jns
ss
test
lret
and
jge
xchg
arpl
scas
cmp
test
outsl
add
xchg
adc
pushf
aam
xchg
mov
out
fcomi
pop
pop
vcvtps2dq
fcmovne
pop
or
pop
nop
mov
test
shlb
fidivrs
cmp
mov
out
iret
mov
loopne
subb
xor
inc
add
cld
mov
gs
popf
loopne
daa
pop
dec
mov
fs
psubusw
pop
dec
jge
adc
repz
mov
xchg
dec
fisttpll
outsb
pop
mov
shlb
adc
pop
rcrl
jnp
add
xchg
inc
cmpsb
fsts
jb
push
decl
ja
ror
ret
add
mov
cmp
cld
add
dec
aam
pop
imull
sub
xor
add
add
ficompl
add
sbb
dec
xor
out
mov
sbb
push
lcall
xor
push
mov
mov
lds
jno
push
cwtl
dec
icebp
lcall
mov
or
arpl
add
add
mov
or
xchg
sub
sbb
or
aad
push
pop
mov
inc
adc
jae
nop
inc
cmp
cmp
inc
push
dec
adc
sarl
sbb
loop
push
pop
lods
fdivrl
mov
subl
pushf
cmp
movl
dec
mov
xchg
cs
sbb
add
cmc
or
jl
addr16
lcall
xchg
lods
scas
fidivrl
mov
sbb
daa
and
lcall
aas
cmc
xchg
mov
sub
mov
aas
gs
testl
mov
bound
rcr
sti
xor
test
xor
or
movsb
cmpsb
out
or
clc
push
pop
or
rcl
leave
pop
pop
mov
push
rorb
xor
sub
call
insb
fwait
push
jbe
clc
std
cmp
imulb
adc
adc
insl
into
int3
mov
mov
mov
xor
mov
sub
nop
gs
push
cmp
test
cmp
xor
outsb
lcall
and
xor
and
clc
std
xchg
push
scas
jne
or
call
lcall
arpl
int3
mov
mov
or
dec
fadd
leave
or
or
iret
push
fwait
out
ret
xor
scas
out
cmp
test
sbb
inc
or
fstps
jl
rcll
loop
pop
andl
dec
in
es
xchg
repz
lods
xor
push
fxtract
jmp
or
dec
jae
repnz
or
cmp
pop
pop
push
mov
fcmovne
pop
inc
or
movsb
into
pushf
jns
fcoml
cmp
cwtl
imul
mov
mov
popa
aam
out
jne
pop
add
jg
lods
xsha1
cmpsb
lmsw
dec
pusha
stc
xchg
push
mov
push
adc
xchg
fsubrs
popa
or
mov
jge
hlt
mov
sub
push
xchg
test
xchg
imul
and
pushf
mov
mov
adc
mov
fsubrs
repnz
test
push
push
and
xor
xchg
dec
add
push
ret
cmpsl
add
jle
adc
lret
or
sti
dec
push
scas
pop
std
mov
sub
or
nop
pop
sub
rol
push
mov
gs
outsb
movsb
rol
lahf
imul
hlt
jbe
sti
xchg
in
sub
ficoms
repz
xor
and
shll
insl
xchg
mov
push
push
ds
mov
stos
lahf
xchg
xor
pushf
mov
shr
lcall
cmp
leave
inc
fisubrs
xor
int
and
movsl
mov
xor
in
cld
shrb
pop
add
adcl
ret
scas
clc
js
pop
testb
mov
jbe
imul
dec
daa
dec
in
xor
jne
add
add
xor
mov
add
aas
push
xchg
and
shlb
fstl
imul
jb
and
or
mov
aaa
xchg
inc
addr16
inc
mov
gs
mulb
shll
movsb
inc
imul
sub
xchg
or
push
lds
and
sub
call
fimuls
mov
dec
inc
or
or
mov
ds
hlt
xchg
pop
pop
jecxz
movb
stc
push
das
xor
mov
repnz
shlb
scas
jnp
lock
sahf
mov
inc
imul
fldcw
cmp
fld
daa
jp
decl
cmp
xor
pop
mov
enter
xor
xor
mov
and
mov
sahf
mov
fcoms
adc
mov
inc
dec
adc
dec
insb
jmp
dec
cmp
enter
popf
dec
cmc
push
popa
fisubrs
dec
pop
pushf
je
xor
shlb
stc
icebp
shrb
ror
loopne
dec
adc
sub
dec
popf
rclb
xor
imul
pop
mov
cmp
scas
cmp
xchg
xchg
aas
addr16
ja
sbb
jle
mov
mov
cltd
jge
push
repz
sbb
xor
lahf
mov
adc
add
out
xchg
out
xchg
int
ss
mov
cmp
cmp
pop
add
xchg
scas
sub
aas
imul
iret
cs
and
pop
add
stc
mov
pop
out
or
sub
cmp
lods
imul
push
mov
and
icebp
pop
stos
adc
fsubrp
jecxz
push
mov
out
adc
movsl
xchg
addr16
stos
addl
add
mov
push
sbb
mov
loope
inc
outsb
add
les
hlt
in
das
pop
cmpb
cmp
lret
aam
scas
xchg
lods
cmp
fidivrl
and
mov
nop
cltd
xchg
cltd
pop
and
or
mov
xor
xor
or
mov
xchg
dec
rorb
sub
xor
idivl
enter
mov
adc
and
cmpsb
cmc
jmp
pop
add
xchg
cmp
ficoms
push
ds
jne
data16
add
pop
mov
pop
cmpsb
mov
leave
sti
loope
jmp
sbb
jnp
jmp
clc
jbe
push
incb
sub
out
pop
mov
imul
repnz
jns
insl
scas
xor
inc
movsl
jp
ret
psrlw
iret
fadds
fistpl
jno
imul
les
inc
movsl
mov
xchg
cli
stc
les
leave
mov
xchg
xor
pop
add
mov
pushf
xchg
xchg
mov
repnz
cmp
ds
enter
fmull
mov
push
fucom
in
rcl
mov
int3
xor
cmp
push
std
test
mov
push
loop
xchg
sahf
xchg
adc
xor
mov
test
andl
es
imul
mov
sbb
mov
repnz
sbb
jno
xlat
movl
sbb
xchg
jmp
scas
add
or
and
fwait
jp
sub
cmpsb
cmp
jno
mov
negb
andb
pop
je
adc
dec
rcr
xchg
ret
jae
pop
scas
adc
cmc
sub
ret
std
sub
testl
jge
inc
mov
loop
xchg
mov
cmp
push
push
jecxz
outsl
cmp
lret
push
fscale
dec
push
push
mov
fstps
push
aaa
xor
xlat
mov
leave
mov
rol
negl
out
add
in
cmpsb
insb
jb
arpl
pop
out
andb
hlt
dec
push
shrb
xchg
xor
addb
mov
xor
xchg
xor
loop
push
xchg
cmp
add
or
jge
enter
int
or
lret
cltd
fwait
push
push
push
frstor
or
pop
scas
lds
test
pop
lods
jecxz
lahf
inc
sub
push
mov
mov
adc
xchg
jl
mov
jns
les
jl
fldcw
stc
adc
fwait
inc
mov
testb
xlat
or
dec
rcrl
mov
push
loopne
cmp
enter
jae
add
cvtps2pi
jmp
sub
sub
ret
jge
into
out
imul
add
std
jle
jle
out
xchg
ret
mov
xchg
scas
xchg
aaa
cmc
in
lea
or
pop
imul
xor
fnstenv
pop
mov
imul
pushf
cmpsb
sub
mov
pop
stc
in
repz
cld
cmp
mov
xor
xchg
pushf
in
pop
imul
popf
inc
cmpsb
out
mov
fiadds
fmul
pop
mov
xor
inc
jbe
sahf
xor
faddl
mov
cmc
lods
cmp
push
lock
mov
nop
jnp
decl
push
xchg
mov
jbe
cmpsb
aam
pushf
and
popa
cmp
adc
xor
sbb
and
es
scas
fldenv
jb
pop
and
mov
xchg
pop
and
inc
mov
xchg
xchg
mov
mov
loop
test
cmpsb
scas
cld
sub
stos
jmp
mov
movsb
dec
nop
sar
lods
mov
sbb
sbb
xor
adc
insb
and
sub
cmpsb
imul
rol
test
insb
fcompl
mov
gs
inc
cmp
sbb
and
ja
or
dec
xor
fildl
push
add
loopne
pop
push
shll
sarl
and
repnz
sub
shr
out
xor
movb
daa
dec
inc
xchg
cmc
in
mov
push
jb
push
ret
loopne
or
mov
aad
jb
call
pop
mov
mov
lret
sti
xor
inc
xchg
or
popf
shlb
jle
aam
fsubrs
xor
cmp
and
or
pop
adc
cmp
push
filds
mov
les
cmp
add
sub
sahf
cs
jmp
sahf
cmp
ret
imul
mov
and
cmc
lret
push
xchg
jge
lea
pop
sahf
add
mov
xchg
ret
inc
lods
gs
pop
scas
mov
ret
mov
scas
popa
adc
data16
dec
mov
mov
xchg
insb
cmp
insl
sub
and
rol
mov
scas
jno
xlat
dec
adcb
test
lods
mov
mov
adc
push
test
mov
and
xor
test
jbe
and
inc
xchg
sbb
ja
in
rorb
jne
mov
jb
jb
mov
inc
pop
and
rcrl
into
imul
jg
xchg
push
mov
xchg
xchg
jge
sbbl
dec
inc
sbb
cmp
lods
adc
add
popa
push
add
repnz
fcoml
mov
add
loop
jne
shll
mov
jmp
loopne
push
add
add
and
addr16
add
adc
dec
sub
jmp
add
cmpb
mov
lock
ud2
cmp
pop
lds
jcxz
xchg
and
jecxz
push
cltd
pop
mov
jbe
push
xchg
loope
fsts
in
inc
pop
mov
fwait
jmp
adc
cmpsb
cmp
add
aaa
outsl
dec
sub
inc
fld
push
stc
insb
in
xchg
loop
xor
stos
jge
dec
hlt
jnp
rcr
or
mov
push
rcrl
test
out
adc
popa
jne
and
mov
or
icebp
mov
cmp
ja
imul
fdivrs
mov
sbb
inc
in
sub
insl
xchg
push
shrl
fisttps
cli
or
sahf
movsb
js
adc
loope
inc
xor
call
cwtl
inc
pop
mov
into
jbe
inc
test
and
sub
fcmovu
xchg
mov
mov
mov
dec
xor
xor
roll
push
sahf
sahf
push
jb
addl
pop
or
ret
sarb
push
rcll
jbe
or
or
ret
xchg
bound
outsb
cmp
mov
ficompl
and
jae
repnz
mov
aas
sbb
dec
mov
mov
test
test
es
out
or
aam
int
sbb
inc
and
pop
or
ficoml
dec
jae
dec
jns
jp
xor
adc
xchg
insl
pop
popf
les
mov
ret
pop
ljmp
lret
in
iret
pop
stos
xchg
pop
pop
xor
cld
sub
ds
fwait
hlt
cmp
inc
mov
mov
cmp
cmp
dec
add
mov
mov
jbe
mov
iret
insb
lret
je
push
mov
mov
cmp
pushl
push
dec
dec
enter
mov
enter
or
ret
sub
pop
pop
xor
into
push
lea
adc
stos
jbe
pop
jnp
xor
push
sub
mov
pushl
filds
xchg
mov
movsb
loopne
inc
leave
scas
fadd
mov
push
xchg
int
add
stos
mov
jge
and
std
sahf
ud1
push
lahf
test
in
push
fwait
int
add
jne
jle
stc
jecxz
das
cltd
pop
fwait
push
addl
push
lods
fdivrs
xchg
push
pop
xchg
fbld
jle
fs
xchg
shlb
jns
jl
sbb
xlat
imulb
and
cmp
dec
and
dec
inc
enter
mov
jg
jb
xchg
lcall
insb
jge
jp
adc
dec
xor
push
hlt
scas
scas
jle
lods
loop
sbb
test
and
cmp
or
cmpsb
sbb
add
adc
or
cmp
jnp
add
fdivl
dec
fisttpl
js
mov
inc
ret
dec
jl
shrl
jb
repnz
test
mov
push
adc
sbb
dec
das
push
or
pop
cmp
fwait
hlt
sub
pop
xor
outsl
mov
mov
shl
imul
lcall
adc
aaa
cmp
xchg
push
fstpt
push
sbb
out
adc
cli
dec
aam
and
jmp
stos
jg
sub
mov
jae
lret
adc
sub
inc
pop
push
sti
jle
sub
sar
push
pop
mov
sub
arpl
sbb
sbb
mov
inc
push
out
push
shrl
or
loop
stos
xchg
sti
aas
stc
push
int
push
inc
mov
movsb
dec
mov
xchg
sbb
call
lock
add
stos
jle
push
mov
test
iret
stc
push
call
inc
test
cmp
pushf
arpl
test
xchg
add
dec
mov
xor
cmpsb
enter
sbb
mov
pop
cli
dec
mov
cltd
mov
jecxz
rorb
xchg
jne
mov
je
mov
xchg
pop
sub
xor
dec
sbb
hlt
dec
jae
xlat
ffree
mov
add
xchg
daa
mov
push
mov
jns
mov
notl
xlat
movsb
iret
mov
lret
aam
ret
lock
jge
aaa
sbb
dec
adcl
inc
fistpl
outsb
addr16
cwtl
add
jnp
mov
cld
and
fwait
cmp
add
popl
or
test
pop
mov
jg
dec
push
cmpb
dec
pop
jle
xchg
cli
dec
outsb
dec
jmp
and
mov
das
lds
inc
arpl
in
leave
inc
xchg
rcr
imul
sbb
test
or
out
jns
loope
lds
push
or
popa
aas
xor
xchg
cmpsb
call
stos
sbb
or
shr
movsl
xchg
sarl
or
dec
mov
sub
push
adc
xor
fbstp
cltd
jb
and
cmp
push
xchg
or
push
ljmp
stc
adc
push
sbb
enter
mov
andl
outsl
test
xchg
rcr
mov
icebp
jp
push
nop
mov
or
insb
clc
xor
mov
pop
repnz
test
jle
mov
fldenv
mov
ret
mov
add
xchg
aaa
sbb
or
inc
in
lahf
mov
push
mull
xor
je
mov
mov
and
test
xchg
cmp
lret
or
dec
dec
adc
xor
push
rcrb
scas
dec
iret
inc
test
stos
dec
mov
or
xor
cmpsb
jo
jbe
sub
add
mov
mov
js
pop
mov
in
pop
or
inc
mov
pop
dec
push
sbb
mov
lea
lcall
data16
dec
sub
add
jb
lret
outsl
adc
xor
push
add
xlat
mov
pop
cmpsl
lods
push
jecxz
inc
aas
pop
scas
lds
push
sbbl
lahf
pop
movsl
jne
imul
test
daa
jg
push
sahf
call
cli
pop
mov
mov
cmpsb
push
adc
sub
cmp
jno
jno
rcrb
pop
testb
pushf
push
iret
ss
das
jno
mov
inc
xlat
movsb
lret
mov
bnd
loop
movsb
xchg
ja
sbb
outsl
leave
sarl
cld
cwtl
ficompl
pushf
cmp
xlat
inc
lds
cmpsb
and
mov
dec
xlat
lret
cwtl
imulb
push
into
js
push
into
lea
jl
mov
pop
dec
sub
push
jmp
cli
and
add
seto
push
cmp
or
lcall
leave
mov
dec
xchg
add
loop
and
inc
leave
sub
push
pop
xor
and
push
xchg
and
pop
je
cmc
pusha
cmc
in
cli
sbb
add
mov
rol
jmp
aam
fidivl
cmp
jle
lea
out
pop
in
xchg
dec
lods
ret
pop
movsl
fwait
jae
divl
mov
cltd
add
push
sarl
out
insl
mov
insb
frndint
mov
jo
aas
sbb
jl
adc
jne
scas
icebp
push
ds
adc
movsl
mov
and
sar
mov
cmp
dec
repnz
int
cmp
add
cmpsl
sub
mov
stos
rcrl
push
sub
fisttpl
jle
popa
fs
mov
add
mov
xor
cld
mov
xchg
mov
jl
push
jge
dec
movsl
or
mov
aaa
mov
dec
insb
lods
div
scas
mov
test
cli
movsb
sbb
jae
fstps
lret
in
orl
fistpll
test
loop
mov
inc
xchg
in
ljmp
cmpl
rcrl
dec
xlat
call
ljmp
fimuls
dec
std
push
hlt
js
hlt
mov
push
clc
dec
dec
insl
jb
lcall
dec
xor
scas
sti
mov
mov
arpl
into
sbbl
push
ret
pop
or
pop
adc
scas
fildll
inc
ljmp
pop
pop
xor
arpl
sbb
mov
mov
ret
nop
xor
inc
leave
pop
sbbl
outsb
pop
addr16
cmpsl
or
pop
imul
push
sub
and
cmpsl
push
test
jge
jecxz
and
faddp
popa
push
push
pusha
rclb
ds
or
lods
pop
jb
push
imul
imul
mov
xchg
mov
adc
mov
adc
or
popa
std
sbb
push
xchg
and
mov
ror
jp
sti
mov
xor
cmpsb
sub
dec
dec
mov
and
jmp
or
inc
enter
shrl
push
jl
pop
les
repz
pop
jecxz
int
and
push
popa
add
out
fiadds
daa
xchg
test
dec
test
sbb
push
mov
movsb
rcll
add
ss
add
sub
jnp
ret
rcl
icebp
mov
and
stos
lret
dec
xlat
repnz
ret
inc
les
inc
fistpll
cmp
mov
xchg
lods
call
inc
jge
jecxz
insl
xchg
lret
pop
aam
adc
aas
popf
insl
and
ret
bound
add
and
jl
sar
cli
mov
add
inc
add
mov
add
call
mov
sbb
inc
insl
movsb
sbb
sbb
je
in
sbb
add
xor
pop
fnstcw
js
cmp
add
mov
sub
ds
adc
push
add
mov
repnz
mov
sbb
imul
paddsw
dec
rcll
fistpl
mov
movsb
or
cmp
dec
add
ficoms
ret
cmpsl
add
cltd
ret
inc
hlt
outsl
shlb
cld
mov
ret
mov
aad
xor
and
loope
mov
cmp
jmp
inc
mov
adc
scas
or
jle
sub
fisubs
inc
ja
loop
sbb
fistl
out
mov
cmp
movsl
les
cmpsl
push
push
leave
iret
std
sbb
mov
jae
out
cmpsl
dec
ss
cmp
mov
inc
fst
push
push
cmp
xchg
sti
lods
ror
movsl
fs
popa
loop
fwait
xor
jno
outsl
sub
mov
clc
pop
push
addr16
imul
in
add
sbb
cmp
pop
inc
pop
push
mov
mov
mov
sub
dec
add
pop
mov
test
inc
and
leave
lods
pushf
out
insl
mov
or
shll
push
xor
pop
notl
mov
dec
jle
add
adc
jmp
mov
inc
adc
xchg
xchg
repnz
pusha
mov
lcall
pop
dec
jle
ret
test
inc
pop
je
fdivl
pop
add
cmp
jecxz
mov
xchg
cmpsb
push
lret
in
rorb
dec
and
ret
mov
test
aam
mov
popf
push
aad
dec
adc
pop
mov
rcll
mov
adc
push
push
add
mov
jl
mov
loope
pop
or
out
xchg
jne
andl
pop
test
mov
dec
xlat
cmpsl
cli
or
mov
test
sub
dec
jge
and
in
adc
fdivl
sahf
leave
xlat
gs
not
xchg
xchg
mov
or
pushf
out
test
add
scas
mov
add
inc
and
dec
ret
pop
jl
sbb
lret
cmpsb
jb
sub
rcll
sti
xor
cs
cld
and
icebp
xchg
xchg
cli
push
push
cmp
pop
test
sub
std
add
xchg
xchg
inc
fidivrl
pop
in
inc
mov
popa
and
mov
xchg
aad
xchg
push
xor
test
cmp
call
aam
mov
xor
jg
mov
sub
inc
mov
dec
loop
mov
cwtl
lock
test
add
and
xor
clc
cmp
jg
rcll
dec
rorb
mov
or
lods
mov
ds
push
movsb
pusha
cmp
pushf
adc
mulb
jns
cs
adcl
test
fisubrs
in
push
std
aaa
push
sub
into
mov
daa
aad
lock
popl
sbb
test
lds
or
add
xor
inc
push
push
cmp
loopnew
or
shrb
out
sub
inc
rorl
lea
sbb
add
push
dec
stos
into
imul
jle
cld
out
mov
cmp
rorb
les
xor
lds
xchg
mov
cmpsl
mov
adc
xchg
dec
loop
pop
fstpt
add
jge
pop
and
xchg
xchg
ret
mov
or
inc
mov
shr
sbb
sub
sub
lahf
xchg
outsb
ja
add
lock
subb
imul
in
shr
and
fwait
sub
addl
cld
add
mov
sub
jns
fwait
gs
mov
leave
jnp
dec
xor
dec
test
js
sbb
push
sub
mov
inc
loope
scas
cmpsb
pop
arpl
loopne
cmpsl
mov
rcll
mov
mov
ret
pop
ja
cld
incl
mov
xor
adc
shrb
sbb
enter
inc
push
lods
fistpll
xlat
and
xchg
repnz
call
imul
cmpsb
and
sbb
add
xor
dec
ja
das
mov
mov
mov
popa
push
out
into
push
fildll
push
jmp
daa
push
insl
mov
cmp
push
jecxz
pop
cltd
xchg
aaa
jge
adc
inc
jecxz
int
jle
das
insb
cltd
push
sbb
roll
push
jmp
xchg
cltd
mov
movsb
mov
sahf
movsb
lock
xor
add
dec
mov
cltd
jmp
ret
lahf
mov
push
test
das
or
pushf
sahf
add
ret
mov
in
mov
fldenv
shll
sti
out
arpl
movsl
push
cmp
adc
sub
ja
lea
data16
pop
sub
mov
or
loope
rorb
mov
jno
mov
add
dec
std
mov
popf
jne
orl
push
sbb
loop
dec
fisubs
mov
fidivrs
cmp
lret
rcll
and
test
sbb
sub
pop
lret
daa
daa
fdivrs
inc
or
popa
fldpi
gs
mov
push
das
sbb
movsb
pusha
jl
orl
inc
dec
lahf
sub
hlt
ret
out
test
out
arpl
mov
cmp
mov
cld
xchg
ret
jecxz
pop
lods
sarl
mov
lds
inc
push
cmp
dec
cmp
aaa
ret
jle
jl
decl
inc
sbb
push
and
pop
add
jmp
call
cwtl
mov
rclb
pop
into
loopne
stos
adc
or
adc
int3
out
push
jo
push
clc
hlt
jl
std
add
cmc
mov
sub
movsl
cmc
mov
mov
ffree
dec
ss
in
xchg
mov
mov
out
pop
adc
stos
inc
jl
add
push
and
xchg
imul
adc
mov
mov
enter
enter
add
sti
pop
aam
jnp
add
mov
dec
inc
xchg
ljmp
sub
dec
xor
subl
mov
jns
test
cwtl
jp
push
fcmovne
cmc
fcompl
or
stos
mov
cld
cmp
pop
or
adcl
fsubl
data16
sbb
std
sbb
xchg
jp
sbb
aas
loope
pop
adc
stc
mov
in
loopne
leave
ss
push
ss
cmpsb
inc
jl
push
jecxz
scas
aas
out
or
orl
xor
push
push
push
jl,pn
ficomps
out
pop
test
push
pop
push
lcall
dec
adc
adc
fnstcw
loop
inc
xchg
movsb
stc
mov
pop
cli
xchg
inc
cmp
add
mull
add
cmp
popf
rorb
and
ja
xor
add
adc
ja
mov
adc
mov
mov
pop
inc
mov
and
dec
bnd
cmpsb
mov
stos
movsl
push
sbb
push
jns
pusha
mov
push
ffree
cwtl
outsl
bound
mov
jle
out
mov
xor
xchg
dec
push
pusha
jg
mov
dec
mov
shr
inc
inc
push
push
insl
and
lret
out
ljmp
add
push
and
or
mov
cmp
jb
push
leave
out
mov
outsb
dec
rcrl
mov
jns
pop
dec
and
pop
and
in
dec
xchg
inc
jmp
and
mov
repnz
or
or
dec
nop
loopne
xchg
cmpsb
cltd
or
pop
sbbl
add
sbb
pop
dec
inc
ja
repz
fcomp
lea
imul
mov
jg
mov
aam
ret
dec
cld
fsubs
hlt
fnop
daa
xor
shlb
aad
add
jae
dec
mov
movsb
xchg
push
fistpl
pop
jecxz
data16
sbb
xchg
xchg
jmp
sbb
cmc
mov
btr
xor
mov
aad
pushf
add
jecxz
adc
hlt
cmp
lret
in
scas
jl
and
jge
inc
dec
mov
sar
jne
es
daa
ficomps
call
stos
loope
pop
call
fldenv
repnz
pusha
push
pop
in
xor
dec
or
cmp
add
or
xchg
or
sub
sub
popf
inc
push
aam
adc
jecxz
pop
and
xor
xorl
xorl
pop
push
nop
pop
pushf
out
mov
pop
sbb
inc
inc
stos
outsl
pop
mov
dec
mov
arpl
mov
add
test
loop
in
sub
xor
pop
mov
andl
jne
outsl
cmc
orl
call
lahf
adc
inc
mov
push
out
test
das
jg
pop
xor
addr16
out
inc
pop
push
ficompl
aad
in
in
mov
int
addb
push
lcall
dec
iret
or
movsb
call
lcall
call
pop
shl
cli
inc
adc
data16
and
imul
jns
sbb
inc
in
xchg
mov
sbbl
subb
mov
pop
jae
add
cli
push
es
jbe
loop
mov
pop
cmpsb
or
inc
fimull
mov
lods
cmp
js
cmpsb
and
jl
repnz
loopne
je
aas
mov
cmpsl
lea
or
and
enter
pop
jg
add
sub
incb
push
rolb
dec
dec
jb
xchg
pop
sbb
shll
into
inc
scas
or
pop
mov
aam
lock
pop
add
out
mov
jne
jb
call
jmp
fbstp
lret
in
push
push
dec
fdivs
xlat
addb
lcall
xchg
pushf
js
fwait
adc
shl
repnz
cld
insb
push
mov
pop
jo
jne
adc
push
mov
adc
cmp
sub
dec
popa
push
mov
inc
mov
sub
xchg
adc
push
adc
bound
cmp
cld
mov
or
adc
out
data16
mov
inc
push
imul
inc
jp
cmpsb
push
add
movsl
repnz
fisubl
scas
test
dec
xchg
test
adc
and
cmp
and
popf
out
adc
mov
jae
inc
iret
push
mov
push
xchg
js
inc
lahf
add
out
aad
cmp
jp
dec
xchg
nop
sub
icebp
add
push
jmp
mov
mov
xchg
mov
sub
push
sti
inc
and
mov
xor
inc
mov
inc
mov
fisubrl
fsts
push
xchg
inc
push
jp
mov
sbb
xchg
not
call
scas
in
outsb
jns
into
lods
mov
inc
arpl
push
xor
mov
mov
lods
and
dec
divb
lahf
mov
orl
loop
lret
mov
fwait
jae
adc
mov
dec
mov
data16
gs
push
push
lret
std
lea
xor
jge
sbb
into
in
negl
add
xorl
repnz
repnz
mov
nop
dec
sbb
nop
scas
dec
addl
lcall
loope
jbe
imul
es
dec
dec
mov
addr16
sbb
adc
sbb
mov
les
fcmovbe
or
enter
pop
dec
mov
out
and
add
xor
ss
pop
addl
cmpsl
adc
sarl
push
shl
icebp
into
adcb
or
shll
jbe
inc
scas
inc
popf
iret
mov
insl
test
add
inc
push
scas
je
cmpsb
cltd
lret
adc
jno
lcall
adc
lock
pop
loope
test
pop
xchg
push
or
pop
jbe
fstl
sub
aad
pushf
mov
daa
loop
xchg
lods
cltd
int
out
add
out
cld
gs
push
xor
add
leave
pop
xchg
out
jmp
ja
push
inc
rcl
mov
jnp
pop
cmp
or
mov
jno
mov
sbb
jecxz
adc
fwait
mov
fidivrl
xor
mov
outsl
jp
leave
jno
popa
arpl
popa
les
std
enter
sub
adc
add
mov
sub
mov
in
lahf
mov
mov
mov
jb
test
pop
xlat
and
sahf
cmpsb
mov
xchg
sub
xchg
imul
jne
inc
push
adc
shrb
add
in
test
inc
push
or
dec
je
insl
pop
iret
push
dec
insb
lahf
jmp
fdivrs
mov
sbb
adc
pop
rorl
test
in
pushf
ficompl
or
aad
push
jae
mov
cmp
jge
std
push
mov
jle
test
mov
xchg
jl
movsb
imul
xor
adc
leave
push
in
mov
call
fstps
jge
js
cmpsl
and
inc
test
mov
lahf
push
xchg
rcr
sub
push
je
xchg
test
cmp
movb
mov
loopne
mov
mov
mov
and
jl
or
insb
cmpl
xchg
loope
js
cmp
or
push
addr16
div
mov
scas
adc
rcl
jne
sub
fucomip
jns
adc
fnsave
add
jbe
adc
sbb
mov
mov
pop
mov
push
cli
lock
call
in
aad
xor
mov
add
repz
mov
pop
movsl
ret
add
sbb
orb
and
addl
add
adc
iret
xchg
xorb
mov
test
pop
push
arpl
push
setle
mov
mov
hlt
push
pop
and
mov
jg
test
shll
xor
popa
jle
orb
dec
jle
movb
jo
jnp
cmpsb
rclb
shr
in
sub
lds
pushf
add
jo
bound
repz
sbb
xchg
jbe
pop
fs
adc
rol
or
dec
mov
rcl
adc
inc
es
into
mov
movsb
aam
jge
dec
in
mov
lret
adc
je
cltd
xchg
pop
in
xchg
xchg
in
mov
push
mov
jecxz
and
mov
inc
daa
xlat
lds
mov
push
pop
out
std
pushf
sub
mov
rcl
add
lret
jb
and
loopne
lods
mov
jns
inc
xor
sbb
and
jae
mov
cmp
std
xor
sub
movswl
mov
insl
pop
jo
or
jns
xchg
not
out
loop
cmc
inc
test
pusha
add
stc
movsb
pop
stos
mov
lahf
out
aaa
sbb
ja
lcall
pop
mov
incl
aas
mov
cs
sbb
push
out
subb
iret
mov
pushf
dec
iret
jl
movsl
mov
xor
push
inc
xchg
les
insb
xlat
shll
jmp
rorb
jmp
insl
cld
inc
xor
jecxz
sub
rcll
outsb
es
shl
test
adc
es
cli
ljmp
xlat
cmp
ss
dec
xor
cmpsl
data16
mov
adc
ret
adc
stos
cmp
mov
push
push
cmpsl
ret
dec
inc
jp
je
shrb
stos
loop
not
pop
shl
shrb
or
lds
fists
lock
nop
pop
subl
int3
xchg
loope
adc
das
lods
add
dec
sub
pop
ss
andl
es
mov
cmp
leave
stos
mov
insb
jo
ret
clc
sti
or
notb
inc
push
das
sbb
jp
or
lcall
push
lds
shr
mov
adc
and
adc
mov
push
sub
mov
arpl
mov
mov
mov
pushf
xchg
jmp
and
xchg
sbb
mov
popf
nop
cmc
sbb
dec
xor
inc
out
xchg
in
gs
aad
mov
jg
test
dec
xchg
inc
cmc
add
sbb
inc
adc
repnz
das
imul
pop
and
adc
into
ljmp
loop
in
or
mov
sar
push
jbe
pop
cld
fadd
or
lret
mov
sbb
pop
movb
cmp
push
shrb
inc
sti
push
xchg
scas
mov
pushf
mov
out
in
xlat
in
cmp
out
arpl
dec
andb
lret
imul
mov
pop
mov
stos
inc
inc
push
mov
mov
test
adc
and
mov
mov
ja
mov
or
mov
ret
mov
movsb
aas
dec
lock
pop
push
push
divl
xor
push
cwtl
inc
inc
xor
sub
arpl
pop
jbe
int3
daa
sub
int3
mov
or
adc
cmp
mov
cmp
jp
sub
test
lds
or
aas
lcall
pop
inc
jmp
call
mov
stos
mov
lcall
out
outsl
or
push
push
jo
stos
loope,pt
or
dec
jl
jge
dec
push
xchg
rcrb
and
push
int3
out
xchg
push
and
outsl
stc
js
lods
das
mov
dec
pop
in
mov
mov
movsl
mov
jns
inc
mov
imul
jp
icebp
jecxz
push
fistps
jbe
add
repnz
push
scas
imul
sbb
cmpsb
jmp
cld
pop
out
sbb
cmp
adc
push
mov
test
push
push
jnp
mov
push
mov
loop
sbb
sahf
pop
xor
mov
test
bound
stc
les
or
xor
lcall
movsl
stos
dec
mov
pop
mov
adc
ja
pop
andb
xor
adc
add
lret
fcmovne
sub
das
xchg
aaa
dec
mov
cs
imul
repnz
std
jbe
aad
inc
test
pushf
cmc
std
pop
insb
mov
xor
and
aad
sahf
lcall
mov
dec
xlat
sub
mov
testl
add
inc
sub
aas
jo
pop
test
ljmp
bound
add
and
mov
loope
int3
testl
mov
addl
aaa
mov
cmpsl
aaa
dec
lahf
lods
jge
in
and
add
scas
gs
pop
push
movsl
dec
push
inc
xor
ror
push
pop
clc
sbb
shll
dec
cmpsb
aaa
pop
cwtl
adcl
pop
testb
seto
and
dec
cli
clc
mov
rcrl
stos
jp
adc
and
pop
call
je
mov
test
addr16
fs
cwtl
push
dec
fwait
int3
test
xchg
xchg
aad
sahf
xor
in
cli
lods
jbe
pop
mov
mov
adc
adc
sbb
dec
popl
aaa
xchg
mov
push
xchg
jl
gs
and
mov
add
push
dec
sub
fidivrl
data16
add
mov
add
hlt
xchg
jbe
mov
fs
fldenv
cmp
inc
gs
into
mov
or
or
mov
stos
inc
cmc
push
loope
sbbb
adc
adc
or
pop
adc
aam
pop
loop
mov
loopne
push
mov
movsl
les
movsb
in
les
int
ja
aaa
stos
xor
inc
testb
mov
or
mov
inc
ds
test
leave
out
outsl
fstp
or
les
loope
pushf
leave
pusha
mov
and
clc
jmp
cmpl
or
xchg
arpl
pop
jae
mov
scas
mov
push
pop
sub
outsw
fcompl
push
icebp
rcll
or
mov
dec
pop
jmp
hlt
fldcw
insb
jno
xor
dec
inc
or
push
movsl
cmp
add
jl
bound
xchg
mov
iret
jne
lret
and
imul
jmp
in
insb
int
mov
and
mov
sub
push
gs
imul
mov
pushf
xor
add
push
push
in
scas
inc
jae
jb
clc
jle
push
mov
lcall
popw
aaa
dec
aad
push
dec
repz
ret
pop
or
or
sahf
push
mov
pop
jbe
add
popf
fimull
xchg
adc
in
ret
iret
iret
mov
lea
and
iret
fdivrs
push
insb
xorb
cmp
jmp
fcmove
cmp
add
mov
push
jb
mov
sub
inc
ljmp
mov
mov
xor
pop
sahf
cmc
cmp
jbe
mov
je
mov
jmp
setbe
jne
pop
xor
xor
mov
xchg
repnz
sub
roll
and
or
cmp
jp
stc
lods
pop
mov
mov
push
fs
push
bound
inc
pop
mov
inc
pop
sub
sbb
pop
loopne
cmp
imul
push
xchg
push
add
popa
ret
mov
lea
xchg
sbb
rcll
push
sbb
jp
imul
push
mov
xchg
push
lea
cmp
out
jbe
push
push
sub
cs
stc
jae
push
imul
xchg
cmp
aad
cmpsb
pop
cmp
test
outsl
cmp
lret
into
xchg
in
push
fstpt
adc
aam
fiadds
gs
dec
mov
push
inc
jmp
rcl
jg
sahf
add
pavgb
adc
push
pop
inc
dec
cmc
ljmp
hlt
loopnew
ds
push
mov
push
jb
nop
stc
insl
in
test
cmp
and
sub
xor
lahf
cmp
sbb
stos
aad
cmp
fnsave
add
cmpsb
shrb
pop
repnz
ljmp
test
xor
pop
lds
lea
pop
mov
inc
ss
dec
loope
push
mov
xor
pop
scas
shrb
inc
push
or
popf
mov
pop
sahf
lret
mov
sahf
fsubrl
iret
gs
or
and
sbbl
lea
iret
imul
loope
movsl
jecxz
mov
mov
mov
xchg
xchg
jo
adc
in
mov
fmull
mov
adc
push
sbb
das
mov
rol
ret
out
loopne
mov
dec
push
out
hlt
je
push
mov
mov
out
leave
mov
fs
or
insb
mov
or
pop
daa
popf
or
cmp
xor
fldcw
je
dec
lds
xchg
inc
xor
mov
and
mov
mov
mov
into
fisubs
movsb
add
jne
arpl
sbb
mov
mov
xor
mov
or
dec
push
mov
nop
mov
xor
orl
inc
jns
cld
inc
xor
mov
in
jae
sub
push
mov
sti
sub
cmpsb
xchg
jmp
push
sub
xor
mov
not
lds
dec
loopne
clc
mov
in
mov
scas
rorb
jp
push
addr16
mov
fstl
imul
push
cmp
dec
add
sub
xor
mov
push
pop
inc
pop
mov
xchg
adc
mov
adc
je
shl
lods
notl
xor
ret
sub
jb
std
jbe
mov
dec
ljmp
pop
pop
shrb
ret
nop
lret
adc
xchg
or
fldl
xor
and
inc
xchg
fidivrl
sub
adc
shll
add
jnp
and
popa
stos
adc
test
test
subb
loopne
push
addl
scas
push
xchg
pop
cltd
lods
fstp
sub
jns
or
xor
or
lea
sahf
jge
aam
adc
nop
push
lods
pop
mov
push
out
lret
sarl
mov
xchg
ret
xchg
cs
cld
mov
mov
push
das
mov
sti
nop
pushl
cmpsl
inc
sbb
imul
adc
xlat
xchg
adc
sahf
sbb
mov
sub
and
fisubrs
test
or
pop
sub
sub
or
or
push
orb
sbb
ret
pop
and
and
sub
rorb
xor
fwait
ss
mov
test
sbb
jge
sub
test
push
outsb
xchg
jmp
pop
sub
or
sub
and
cwtl
jo
nop
adc
je
ret
test
mov
sbb
inc
faddl
das
or
add
test
jl
cmp
inc
lahf
test
ss
shll
insb
adc
mov
ja
xchg
pop
loope
jmp
mov
xchg
out
xor
and
call
cmpsb
jae,pn
push
or
add
outsl
xchg
and
adc
cmc
mov
push
shl
add
push
and
xor
jne
sahf
movsl
scas
add
bound
add
mov
aad
cltd
inc
inc
mov
cmp
sbb
adc
out
leave
sbb
sub
push
pusha
ret
jecxz
jecxz
dec
jae
cmpl
mov
js
mov
jge
js
int
jns
icebp
inc
fwait
push
add
popa
repz
xlat
sbb
or
or
sarl
cwtl
std
add
jo
std
mov
dec
dec
orb
jge
and
inc
call
or
push
cli
push
add
and
lret
and
pop
adc
or
xchg
pop
bound
in
push
pop
arpl
mov
xor
and
cld
aaa
sahf
shr
add
mov
das
and
and
xchg
mov
or
adc
sahf
xor
pop
repz
jmp
lds
hlt
hlt
in
mov
loope
addb
lds
mov
rorl
xchg
add
sub
cmp
shrl
popf
sahf
out
loop
xor
push
sub
push
push
fs
and
test
cmp
in
mov
aaa
decb
jmp
mov
dec
ret
in
fs
imul
sbb
xor
repz
fs
in
mov
pushf
sbb
test
mov
gs
into
cs
out
enter
or
sbb
mov
xor
add
frstor
roll
aam
ret
adc
push
adc
xor
in
adc
mov
js
cld
mov
decb
add
mov
mov
stc
repnz
inc
test
outsl
mov
ret
push
push
push
daa
pop
aas
sbb
mov
mov
lret
mov
push
daa
mov
jne
sar
cmp
mov
push
fildll
jns
dec
and
aam
xchg
jae
inc
test
dec
xor
daa
addr16
loope
cmp
jge
outsb
mov
cmp
and
pop
rorb
iret
in
push
jl
icebp
mov
push
dec
jle
sbb
lahf
dec
mov
jp
pop
shl
or
fnstsw
sub
imul
sub
clc
cld
pop
and
fcompp
testl
pop
mov
repnz
mov
popa
and
aam
movb
repnz
xchg
add
lods
lret
imul
into
jb
mov
xchg
stos
lods
sub
sahf
and
dec
xchg
les
shrb
leave
enter
test
sbb
xchg
xor
scas
sub
imul
test
pop
mov
lcall
mov
pop
arpl
addr16
pop
push
xor
out
xchg
or
pop
cmp
jns
fdivrl
or
pop
icebp
push
jae
gs
leave
adc
and
in
ss
xchg
ljmp
dec
notb
adc
add
cmp
mov
adc
jmp
sbb
pushf
or
popf
sub
add
adc
ss
xchg
sbb
aaa
cmp
push
push
out
mov
ljmp
pop
push
jno
inc
dec
mov
movsl
add
movsb
lods
xor
cmpsb
xchg
sahf
pusha
lds
popf
pop
jle
mov
xchg
fs
dec
mov
addl
data16
sub
jno
in
sti
stos
push
call
sub
aad
daa
jmp
push
out
pop
pop
fsubrp
jno
out
cmp
lret
cmp
jb
daa
fsub
mov
pop
bound
xchg
xchg
mov
cmp
xor
mov
xor
loop
dec
mov
and
aam
jne
ret
shrb
dec
sub
push
xor
in
ret
inc
mul
mov
das
icebp
ss
xchg
imul
out
fidivrs
push
xchg
pop
xchg
inc
sbbb
subb
adc
fcompl
imul
mov
cmp
aas
xlat
in
aas
mov
loope
push
lret
mov
scas
push
insb
cmpsb
orl
popa
cli
imulb
add
mov
out
and
addr16
and
das
cmpsl
stos
scas
mov
icebp
cmpb
xchg
std
ficompl
les
jb
xchg
lock
push
cwtl
jae
and
inc
cwtl
inc
mov
repz
fsubrs
jb
xlat
cltd
mov
test
std
roll
dec
mov
jl
ja
and
mov
inc
xchg
outsl
mov
sub
inc
xor
adc
repnz
sub
mov
je
mov
gs
xor
jae
cmc
dec
xchg
repnz
adc
cmp
pusha
push
ja
xchg
dec
push
push
mov
test
call
xor
push
add
fs
jno
insl
mov
outsb
jg
notl
mull
test
into
ret
push
sbb
rorb
movsb
nop
mov
aad
out
xchg
xchg
jge
jae
mov
mov
cmpb
xorl
and
ss
xor
xlat
test
sub
loope
aas
ret
inc
ss
es
or
dec
jae
ficoms
cld
or
addr16
pop
inc
js
mov
dec
mov
sti
xchg
sbb
shl
hlt
xor
mov
jle
jae
iret
imul
mov
rolb
bound
stos
sbb
lret
lods
jmp
rcll
adc
inc
rdtsc
pop
rcrb
es
test
mov
out
andb
pop
xchg
pop
cmc
das
lcall
rcr
rcrb
jecxz
pop
sbb
outsl
push
xor
insb
rcl
movsl
icebp
rcll
push
arpl
mov
mov
add
popf
insb
mov
lret
xor
xchg
bound
sar
inc
mov
jbe
loope
std
imul
into
mov
pop
jo
data16
add
dec
push
insb
call
and
jne
sub
inc
push
nop
scas
imul
out
mov
mov
mov
mov
mov
lods
jo
push
popf
lods
mov
mov
push
test
adc
aad
sbb
dec
xchg
cwtl
or
xor
xlat
fimull
stc
imul
xor
repz
out
pop
lret
orb
mov
popa
rclb
xchg
std
dec
mov
inc
inc
add
xorb
js
push
ljmp
lea
hlt
xor
pop
sub
js
xor
fmull
and
pop
jl
pop
jmp
shll
dec
dec
int3
inc
movsl
mov
push
stc
push
adc
rcl
ss
adc
idivl
add
mov
movsl
dec
repnz
cmp
or
movsb
sub
lcall
lret
adc
cmp
sti
xor
cs
in
sub
fs
sub
or
push
mov
dec
bound
adc
push
rcll
ret
inc
movsb
fs
fsts
sub
jno
mov
jp
mov
enter
push
lods
jno
dec
sub
mov
repnz
rorb
loope
outsl
mov
mov
push
out
adc
add
loope
addr16
pop
push
pop
push
imul
scas
or
push
aad
inc
jno
adc
lods
dec
adc
nop
mov
ds
sahf
test
jl
in
ss
and
xchg
imull
push
pop
xor
lock
int
aaa
jmp
cmp
pop
push
in
xor
jmp
xchg
dec
sub
mov
rcl
sub
pop
loope
icebp
lds
enter
inc
int3
jge
in
mov
icebp
push
shll
jmp
shlb
cmp
lret
je
bound
mov
xchg
or
jne
shl
cmp
inc
out
inc
hlt
ss
jo
dec
cmpsb
lods
jmp
and
cmc
add
lods
std
mov
fistpl
addr16
pop
xor
pop
adc
push
xchg
loope
sub
push
mov
cltd
loop
repz
dec
mov
inc
sbb
fistpll
mov
mov
aas
pop
clc
jae
inc
imul
xor
sbb
push
and
aas
mov
inc
aaa
repnz
lods
adc
mov
ljmp
jno
sbb
loopnew
add
psrlw
add
jle
cli
int3
dec
ds
xchg
add
rclb
adc
mov
js
scas
jne
jle
jns
dec
mov
or
dec
pop
xor
pop
push
lcall
out
cmp
add
push
not
sbb
cmp
mov
adc
xchg
sbb
sbb
jmp
add
scas
xchg
roll
xchg
scas
mov
lea
dec
in
aaa
add
adc
aam
fdiv
lods
or
repz
int
fstp
push
or
adc
mov
popa
push
cld
jp
cli
stc
sub
lahf
cmp
dec
xor
sti
adc
cwtl
mov
mov
jmp
cmp
pop
aam
dec
mov
and
mov
imul
ds
mov
test
movsb
inc
shll
cmp
cmp
stc
scas
sar
and
and
jne
lret
xchg
cmpsb
adc
and
cmp
imull
ret
sbb
inc
ss
fcomps
mov
lret
mov
loop
xor
and
stos
jbe
jecxz
dec
ljmp
push
sub
adc
inc
add
fmuls
xchg
out
mov
das
mov
sub
int3
or
jecxz
sub
mov
pop
gs
mov
fidivrs
rcll
insl
jmp
dec
mov
push
shld
xchg
sahf
repz
xchg
outsl
shl
loop
movsb
int
jno
xor
mov
push
xchg
icebp
xor
std
out
or
push
xchg
test
mulb
push
xchg
jb
scas
loop
pop
daa
or
rcr
repz
cmp
jmp
and
xor
pop
mov
xchg
fisubrl
in
xchg
push
movsl
jl
dec
mov
jo
fdivrs
mov
add
repnz
cltd
das
es
push
insl
jge
jo
or
iret
cmpsb
jae
or
jg
cltd
xchg
push
outsl
jmp
dec
int
mov
inc
jne
sub
lods
pop
dec
icebp
fnstenv
cmp
jbe
into
mov
icebp
mov
cmp
sbb
lock
mov
fisubs
mov
fwait
mov
sbb
jp
ficoms
mov
pop
loope
je
mov
adc
pop
xchg
data16
xchg
insb
push
sbb
mov
popf
js
add
ljmp
add
pop
pop
sbb
fcomi
mov
imul
bound
f2xm1
xor
jnp
leave
cld
and
fbld
mov
lret
mov
les
cmp
je
lcall
aam
lcall
sar
add
mov
jns
cmpsl
xor
xrelease
jae
mov
dec
sub
in
arpl
xor
ja
scas
xchg
sbb
aaa
shl
repz
jno
mov
dec
sub
fnclex
pop
jbe
cmp
pop
mov
nop
cmp
mov
jg
push
adc
stc
cmpsl
ficoms
int
cwtl
aad
sub
iret
push
loopne
ds
adc
arpl
mov
jno
gs
push
ss
lea
xchg
sub
cmpsl
movsb
cwtl
mov
out
fcoml
jl
push
stos
insb
iret
mov
daa
dec
inc
cmp
sub
inc
enter
dec
int
cltd
cmpsl
arpl
fcompl
rclb
fstl
dec
ja
into
mov
divl
aam
ficoms
lahf
daa
sub
iret
aam
clc
pop
cmpl
mov
pop
out
mov
xchg
push
pop
mov
aam
xor
pop
inc
mov
or
ret
xlat
add
push
out
popf
pop
addl
imul
stos
je
int
push
sahf
push
or
popa
mov
ja
test
inc
in
mov
out
lds
dec
rorb
lret
nop
mov
mov
neg
test
mov
lret
mov
insb
call
dec
nop
adc
fadd
cmp
xor
adc
fnstsw
out
add
jl
xor
cli
arpl
push
or
imul
sarb
adc
insl
mov
stc
icebp
xorb
inc
aas
or
xchg
lret
and
and
addl
push
imul
xor
int
popa
push
outsl
dec
pop
insl
cmp
xor
mov
sbb
iret
pop
int
rcrb
xchg
pop
push
jecxz
jmp
gs
xor
push
pop
xchg
dec
push
clc
cmpsb
icebp
and
scas
popa
iret
fimull
push
out
test
mov
data16
es
sbb
pop
push
aaa
xor
sub
or
sub
adc
lods
sub
loop
lods
sbb
mov
outsl
pop
cli
divl
xlat
loope
outsb
pop
dec
sub
xor
iret
ss
aam
mov
inc
fwait
jp
sbb
dec
cwtl
lahf
fs
std
inc
out
pop
mov
shr
cmpsb
add
cmp
gs
clc
mov
jecxz
mov
shrl
inc
rorb
cwtl
pushf
lods
cs
mov
inc
lea
cmp
adc
dec
or
xor
lahf
sub
push
movsb
adc
js
aad
add
jmp
movsb
sbb
adc
or
mov
pop
pop
cmpb
bound
push
dec
mov
xchg
cltd
xchg
mov
jno
mov
out
pop
stos
pop
stc
add
dec
add
adc
lea
and
mov
fmul
xor
imul
mov
cld
push
add
mov
lret
out
sbb
orl
inc
push
xor
cwtl
and
xorb
enter
je
icebp
xlat
out
push
jo
das
mov
pop
jae
mov
adc
jge
jle
push
subl
xchg
or
pop
xor
das
fidivrl
push
xchg
sub
mov
push
or
or
jb
xchg
lcall
mov
scas
fildl
sbb
fwait
inc
testl
push
mov
xor
fbstp
push
adc
push
jbe
in
outsb
shlb
movsb
mov
je
pushf
xchg
mov
dec
pop
es
pusha
popf
nop
cmc
mov
jp
pushf
mov
or
jl
and
ret
mov
dec
mov
pop
xchg
lods
push
pop
cltd
loopne
sub
loopne
aaa
fldt
cmp
pushf
mov
call
mov
push
or
and
push
loop
mov
xlat
lods
adc
cmpsl
pop
xor
lea
negb
xlat
fldcw
inc
pop
jecxz
mov
adc
imul
adc
mov
fisubs
rcll
cltd
ds
icebp
sub
fsts
fdivl
bnd
dec
push
outsb
outsl
add
pop
jnp
inc
xchg
xchg
push
push
cli
pop
shlb
cmp
mov
inc
pop
push
jns
test
mov
push
mov
ds
adc
in
sbb
mov
cmpsb
inc
lret
int3
dec
ja
dec
test
mov
fnsave
int3
scas
ds
es
or
dec
inc
add
jbe
jge
rcr
in
cmc
movsb
jbe
jmp
ljmp
inc
or
scas
mov
mov
imul
xchg
push
and
sti
xor
push
loopne
into
fcompl
stc
hlt
lcall
or
movsl
loopne
es
xchg
leave
lahf
mov
ret
dec
jnp
push
pop
pop
cmp
or
jmp
loope
and
mov
dec
mov
test
sub
mov
xor
test
movsb
call
xor
scas
ficompl
mov
movsl
jle
xchg
inc
je
jge
xchg
mov
mov
scas
pop
inc
mov
dec
pop
push
adc
push
adc
mov
sub
jbe
add
inc
xor
and
leave
iret
fstps
repnz
inc
lcall
dec
jbe
in
mov
fbld
adc
xor
test
insl
jecxz
loope
push
xor
insl
pop
fidivrl
sarb
aaa
data16
cmovo
xchg
mov
cmpsb
xor
lods
jno
and
mov
bound
cltd
pop
pushf
iret
arpl
and
nop
out
cmc
ljmp
inc
ljmp
push
and
int
xchg
cmc
sbb
xchg
push
aad
cltd
lahf
scas
mov
xchg
rclb
loop
mov
jns
sarb
mov
dec
gs
xlat
xchg
mov
dec
inc
enter
sub
inc
or
jnp
mov
dec
pop
xor
fwait
cmp
mov
out
push
add
dec
jmp
mov
dec
push
fs
leave
push
mov
lret
push
or
push
mov
outsb
sbb
je
mov
daa
dec
int3
popf
lcall
out
data16
fimull
cmp
ret
addr16
ret
jbe
ljmp
push
and
cwtl
test
cs
mov
rcll
in
mov
lods
xchg
out
pop
mov
aas
push
scas
outsl
imul
mov
sbb
sbb
jae
sbb
inc
les
pop
aaa
mov
mov
adc
out
push
mov
sbb
inc
add
dec
shll
pusha
shrb
arpl
test
push
sahf
cmp
rcr
xor
sti
dec
pop
stos
add
add
mov
outsb
pop
adc
jecxz
mov
out
pop
out
scas
repz
aam
mov
inc
xor
icebp
mov
lods
fidivl
xchg
bound
push
xlat
push
cmc
mov
adc
or
lcall
mov
lret
push
js
outsl
in
mov
gs
sub
mov
mov
filds
adc
pop
xor
outsl
cld
mov
out
ss
test
jecxz
in
fxam
inc
icebp
decl
jae
add
adc
shrb
inc
jns
push
stc
cmp
movsl
or
dec
call
orl
mov
sahf
mov
dec
sbb
push
shll
sbb
lea
and
push
addr16
lahf
sbb
lods
push
loopnew
dec
iret
testl
arpl
out
push
mov
pop
or
cwtl
adc
fwait
mov
fidivl
sub
pop
mov
sbb
aaa
movsb
mov
jl
add
cwtl
lea
mov
roll
cmc
repnz
int
enter
jp
out
cmpsl
xchg
popf
stos
insb
and
int
jmp
pop
adc
or
outsb
pusha
and
add
jbe
xchg
nop
fdivp
mov
in
jecxz
xor
iret
mov
popa
or
lods
dec
jecxz
xor
push
xchg
adc
sbb
adc
sub
mov
test
mov
leave
test
cmp
mov
stos
ret
mov
sub
outsl
pop
pop
pop
sbbl
jbe
aad
cld
cltd
fs
sbb
push
int3
sbb
ja
inc
aaa
mov
bound
mov
data16
int
and
dec
mov
or
bound
mov
push
aad
jb
push
in
jae
cltd
mov
push
jne
stc
xchg
insl
or
mov
lcall
jno
add
add
imul
and
adc
mov
pop
dec
movsl
movsl
push
call
addr16
mov
mov
mov
pop
pusha
test
inc
push
pop
adc
inc
sbb
mov
adc
mov
popa
jl
mov
mov
cmpsb
mov
fbld
je
nop
jns
dec
pop
js
xlat
sub
dec
cmp
and
mov
sub
jbe
xlat
std
pushf
or
test
movsl
push
or
addr16
test
add
sbb
stc
repz
popf
outsl
xchg
adc
xchg
dec
mul
push
gs
and
outsb
inc
cmp
imul
pop
mov
test
jmp
push
int
outsl
mov
fidivrs
outsl
loopne
andl
hlt
xlat
popf
mov
xor
hlt
push
movsl
out
popa
pop
dec
and
into
les
fwait
hlt
pop
or
push
push
xor
imul
jecxz
dec
repz
and
lds
mov
insl
bound
leave
sbb
jo
int
mov
jbe
popa
std
push
jae
cmp
cmp
dec
xor
dec
mov
dec
into
imull
cltd
inc
xchg
or
xchg
cmc
ljmp
jno
decb
and
aam
mov
sub
xchg
repnz
mov
xchg
jecxz
popf
imul
mov
ja
aam
ret
push
jp
cmpsb
pop
xor
or
lret
jne
push
inc
sti
iret
adc
test
adc
and
xchg
sub
shlb
pop
daa
lahf
in
aaa
fidivs
out
pop
jle
fsubl
sahf
mov
jae
lods
adc
xchg
mov
test
rcrb
int
push
lret
mov
and
sub
dec
xchg
test
sar
pop
sbb
inc
jp
sbb
lock
jnp
sbb
outsb
mull
pop
mov
sahf
xchg
mov
and
push
icebp
jecxz
inc
push
test
push
mov
push
cmpsb
sub
in
repz
mov
mov
push
or
add
popf
bound
pop
push
fidivrs
test
dec
ret
or
push
mov
rorl
sbb
push
xor
jmp
add
cmp
xchg
iret
aad
cmc
or
pusha
mov
subl
jbe
adcl
pushl
repz
mov
lcall
jmp
es
cmp
push
insl
int
pop
lahf
movsb
dec
jbe
imul
xchg
or
arpl
adcb
xchg
push
loopne
or
mov
pop
mov
xchg
xor
mov
add
fldcw
ja
jne
test
fcmovnbe
sub
and
mov
adc
in
ret
or
pop
push
jl
sub
xchg
jle
movsb
aad
clc
stc
pop
or
aas
push
in
mov
mov
fdivrp
push
adc
add
jg
out
out
movsl
insb
ret
test
jmp
test
popf
in
pop
adcb
jae
decl
stos
dec
cmp
adc
mov
mov
rorb
sbb
pop
push
and
icebp
adc
mov
loope
mov
je
shl
cltd
ja
cmp
push
scas
lods
jmp
daa
pop
push
movsb
xchg
jne
fldenv
jecxz
gs
shrl
movsl
mov
aaa
sub
push
daa
sbb
enter
inc
mov
mov
mov
push
sbb
sbb
dec
mov
xor
cmpsb
movsl
gs
stc
or
pop
out
push
lret
lahf
sub
dec
int3
cmpsl
dec
in
push
mov
cmpsb
sub
dec
popf
mov
icebp
and
sbb
cmc
ja
dec
pushf
enter
test
mov
adc
push
push
dec
movsb
pop
iret
aad
pop
or
mov
lret
and
push
and
sub
xor
xchg
inc
stos
lods
xor
xor
ret
mov
lcall
pushf
jbe
push
mov
sbb
arpl
call
iret
lahf
gs
cmp
call
push
iret
add
and
fwait
mov
ljmp
inc
jg
and
es
mov
popf
xchg
add
out
push
dec
sub
mov
insl
pop
pop
mov
mov
sub
shll
xchg
loopne
dec
dec
incb
add
push
pop
test
cld
scas
mov
clc
cwtl
dec
and
jg
fwait
add
xchg
popf
cmp
sub
sub
test
inc
sbb
idivb
insl
dec
cld
xor
shlb
jmp
jmp
cli
repz
sbb
jb
cld
inc
add
jno
fwait
or
lods
mov
mov
test
mov
repnz
shl
out
xor
pop
stos
xor
xor
addl
sarb
jge
mov
mov
test
mov
loope
pop
cmp
cmp
roll
or
loop
and
add
enter
xchg
pop
cmp
mov
arpl
push
shll
xor
les
out
sbb
sub
roll
loopne
imul
push
push
add
inc
test
dec
pop
pop
jne
mov
fwait
mov
loopne
lea
push
push
add
test
shll
adc
lods
aad
inc
in
cmp
scas
sbb
scas
rorb
inc
sbb
cmpsb
and
inc
jo
call
dec
lods
fs
mov
and
sbb
push
outsl
mov
call
sub
jns
int
xchg
icebp
repnz
lock
add
add
jbe
xor
popf
mov
nop
jo
push
jnp
mov
shlb
test
out
xchg
fisubl
push
add
add
pop
push
xor
xchg
and
cmp
rcll
loop
or
push
add
inc
push
pop
xor
mov
inc
mov
mov
ja
fcmovnu
setae
cmpsb
outsb
cmp
ljmp
clc
push
addr16
sbb
aas
outsl
inc
and
fwait
hlt
lock
ds
das
jb
outsb
jp
pushl
xchg
xlat
push
test
mov
es
movsl
jle
pop
pop
dec
clc
loopne
dec
out
fsubrl
int3
mov
cmc
imul
lds
adc
loope
push
or
sub
pop
sbb
inc
xchg
out
pop
pop
repnz
adc
pop
adc
out
loope
xor
mov
add
mov
xchg
mov
mov
rol
cmp
xchg
pop
mov
lcall
cmp
mov
in
int3
das
push
jb
insb
jmp
sub
mov
in
movsl
inc
mov
das
push
mov
dec
xlat
aas
mov
shufps
or
pop
jbe
mov
xchg
cli
clc
mov
push
dec
xor
shll
imul
sarl
movsl
daa
xchg
cli
sahf
daa
sbb
jg
insl
fisttps
sub
sub
adc
mov
xor
insb
lds
push
gs
push
loop
ja
mov
stos
cmp
mov
push
insl
mov
icebp
popf
out
jnp
and
push
xor
and
adc
jb
push
mov
sbb
popa
in
lret
or
xlat
loopne
fcom
mov
push
mov
jmp
pop
pop
cld
in
xchg
push
push
mov
jno
adc
and
xor
push
pop
and
push
bound
sbbb
adc
movsl
pushl
in
dec
mov
dec
test
movsb
and
jne
add
pushf
in
fiaddl
cmp
in
cli
aaa
cmp
out
pusha
leave
in
imul
and
inc
adc
lcall
push
sbb
add
ret
pop
cltd
es
and
sahf
cmp
cmp
xchg
jge
cltd
adc
imul
pop
jge
xor
out
mov
es
xor
scas
cmpsl
cwtl
subl
popf
scas
cmp
push
jae
test
clc
dec
je
cld
mov
mov
push
mov
dec
lods
lret
out
popa
call
xchg
adc
add
sbb
pop
and
jno
inc
mov
xor
rcr
jge
int3
sub
sbb
adc
pop
in
mov
je
mov
cmpsb
test
jae
cld
adcb
mov
shrl
in
inc
std
mov
fldt
pop
fwait
adc
jns
pop
frstor
inc
mov
insb
std
jo
mov
std
stc
mov
sub
dec
test
cltd
cmovne
adc
iret
xchg
subl
sbb
in
ret
mov
or
push
imul
arpl
cltd
cmp
and
push
mov
mov
test
mov
test
inc
sub
nop
xor
cmp
cmpsl
mov
je
mov
pop
aaa
push
add
and
in
inc
dec
repz
adc
dec
in
pop
mov
or
xor
fisubrl
leave
push
arpl
cltd
inc
mov
sbb
shl
push
daa
into
stos
cmp
mov
adc
test
popl
lea
dec
add
xchg
sbb
mov
sbb
push
dec
add
daa
add
sbb
ret
push
cmc
imul
iret
ret
fisttpl
sbb
mov
mov
mov
test
daa
xchg
push
cmpsl
dec
fimull
loope
sbb
loop
sbb
imul
sub
mulb
push
sub
fmulp
mov
int
mov
add
or
movsb
pop
icebp
adc
fisttps
sarl
repnz
jnp
in
cwtl
and
cwtl
into
push
int
jae
in
clc
xor
sbb
lods
add
mov
mov
nop
nop
mov
rcrl
or
cmp
mov
call
popa
test
test
sahf
and
loope
mov
pop
int
sbb
mov
scas
int
pop
pop
jae
pop
movzwl
xchg
mov
aad
insb
jo
cld
cmc
push
or
scas
adc
jge
gs
dec
cli
rcr
jle
sbb
xchg
cmpl
mov
sti
cltd
mov
lds
repnz
movsb
pop
imul
and
mov
fldenv
jae
fistl
in
xchg
push
xchg
and
jbe
pusha
cmp
test
nop
adc
add
fwait
pop
int3
cmp
push
lcall
dec
xchg
js,pn
cltd
inc
test
nop
daa
jns
out
outsl
inc
fidivs
adc
and
cld
sbb
jmp
sbbl
jmp
fsubrp
and
bound
jae
push
xorl
aad
pop
mov
xor
imul
arpl
push
push
xor
sarl
out
rcrb
fstpl
sub
shl
out
test
xor
jno
fldenv
in
call
dec
jmp
shr
inc
in
pusha
push
mov
fcoml
enter
mov
dec
xchg
xchg
and
and
jne
push
cmp
das
in
fs
sbb
inc
and
data16
xor
div
insl
arpl
push
cltd
add
xchg
insb
mov
jge
popa
mov
cs
ret
clc
push
push
adc
in
lahf
cmp
push
mov
sub
roll
in
adc
imulb
push
adc
hlt
sub
inc
sbb
jle
mov
jb
mov
cmc
in
iret
mov
std
inc
lds
movsl
ss
mov
lahf
cld
lret
pop
and
or
mov
pop
jle
fsubl
pusha
int3
pop
push
adc
mov
and
inc
lret
insl
arpl
ljmp
jno
inc
mov
push
mov
aaa
mov
jp
addb
jge
cltd
sbb
jo
or
pusha
out
aam
outsl
cli
mov
ret
sub
jne
mov
stc
dec
dec
lds
sahf
pop
mov
rcrl
mov
inc
lods
push
dec
cmpsb
xchg
mov
dec
dec
outsl
js
add
pop
enter
test
stc
test
xchg
mov
xor
push
cli
movsb
mov
mov
or
sub
xchg
xchg
stos
arpl
ret
sti
mov
lock
sbb
mov
mov
pushf
add
dec
mov
mov
sbb
fs
into
inc
cmp
cli
cld
adc
mov
xor
cltd
ret
pop
shrb
mov
sbb
dec
inc
loopne
mov
push
insb
dec
out
or
mov
mov
inc
sahf
jne
lock
mov
in
sbb
ljmp
sbb
hlt
les
inc
push
inc
lods
or
movsb
inc
gs
mov
mov
cld
in
adc
addr16
jns
enter
jbe
mov
push
sbb
sub
repz
or
fistps
xor
sahf
mov
pop
mov
jge
sub
pusha
sarl
stos
shlb
stos
add
fmul
or
lcall
push
sub
imul
mov
loopne
jge
mov
mov
or
int
mov
pusha
scas
aam
dec
push
enter
pop
bound
mov
adc
mov
cmc
sbb
rolb
push
xor
cld
prefetch
or
punpckhdq
das
inc
movb
test
mov
pop
mov
out
int
cmc
jp
dec
dec
in
push
sub
das
shll
sub
movsb
test
add
cmpsb
andb
and
cltd
jp
pop
jns
lods
rorl
push
jnp
and
daa
and
jae
add
dec
adc
jbe
mov
std
mov
pop
aad
lea
push
and
cmp
addr16
pushf
xchg
xor
les
fcompl
shrl
push
out
xchg
sub
fisttpll
movsb
xchg
sbb
jns
jg
pop
out
pop
outsl
test
fdiv
adc
ret
lret
adc
je
adc
cmp
xchg
push
pop
add
push
nop
xchg
outsl
sti
dec
ret
sub
pushl
movsl
inc
xor
repnz
adc
lret
cmp
ret
je
xchg
cmpsb
fstl
addb
lret
jp
cmc
mov
dec
jmp
jbe
inc
roll
and
push
cmp
stc
pop
xlat
add
inc
sub
stos
pushf
in
movsl
add
mov
jle
sti
std
jecxz
test
jns
inc
insb
jno
lcall
inc
or
shll
mov
push
sbbl
push
inc
test
jbe
loopne
daa
mov
xchg
stc
adcl
xchg
push
xchg
pop
push
ret
int3
add
nop
out
icebp
sub
pop
loop
bound
testl
stc
fists
xor
pop
inc
xlat
test
cld
les
mov
add
bound
mov
sbb
xchg
lea
sub
fistl
sub
call
inc
push
xor
pop
pop
sarb
sbb
cmp
je
ss
xor
push
lock
and
in
jae
icebp
mulb
mov
and
shrb
push
aam
mov
mov
in
pop
out
gs
mov
daa
sbb
das
push
lea
or
xor
mov
repz
aas
pusha
incl
fiadds
push
rorl
or
hlt
adc
adc
mov
aam
jmp
and
mov
icebp
mov
push
push
jp
dec
ja
pop
ss
cmc
cmpsl
and
and
out
dec
dec
rclb
pop
push
mov
out
lcall
mov
pop
mov
aaa
mov
cld
dec
divw
loop
out
and
mov
xchg
stc
addr16
pop
shrl
cmp
or
mov
shlb
das
std
cmp
mov
mov
pop
mov
mov
insl
cld
test
mov
mov
sbb
out
daa
mov
fcmovnu
sbb
fwait
cmpsl
and
mov
mov
push
sbb
das
scas
jbe
sbb
jmp
jecxz
iret
fidivl
mov
repnz
test
jge
inc
cmp
out
push
cmpsb
mov
pop
and
xor
nop
scas
xchg
fptan
aad
outsb
loope
or
sahf
fcomps
in
mov
int3
and
mov
dec
int3
jmp
pushf
pop
inc
jbe
pop
add
mov
mov
data16
xor
repnz
and
sbbl
push
aad
movsl
adc
mov
xchg
repnz
push
nop
nop
rcll
cli
sbb
jle
rcrl
push
jbe
lcall
or
cs
outsl
cwtl
popf
xchg
mov
iret
int3
scas
cmpsb
subb
mov
inc
xor
pop
xchg
fcmovnbe
das
dec
ret
hlt
adc
pop
cmpl
pop
push
push
insl
inc
push
mov
xchg
in
icebp
mov
rcll
out
sbb
adc
mov
in
shl
enter
pop
sbb
cli
test
insl
enter
ljmp
sub
adc
sbb
push
jno
adc
mov
add
nop
cwtl
and
inc
mov
mov
cld
lods
jge
cmp
mov
imul
stc
call
ja
xchg
rolb
movsb
hlt
sub
sub
subl
movsl
xor
dec
pushl
jg
rcrl
jle
in
jno
cmp
in
add
push
push
int3
sahf
call
test
jp
daa
aas
pop
and
jl
push
add
xor
das
pop
ds
lahf
cs
mov
addr16
jb
xor
out
fscale
pop
or
test
shl
data16
xor
inc
add
fmul
outsl
test
int3
cmp
pop
fidivrs
iret
test
push
mov
xor
jl
mov
mov
iret
mov
fidivrs
adc
fwait
pop
sub
mov
inc
and
pop
inc
mov
das
ljmp
mov
movsl
xor
jle
shll
cli
mov
jmp
jge
push
push
xchg
ret
cwtl
fstl
mov
cmp
cmp
pop
and
and
stos
imul
cmp
pop
imul
sti
dec
popa
mov
mov
shlb
cli
mov
adc
or
cmpsb
cld
in
xor
push
xor
pop
jl
pop
push
dec
call
sahf
scas
sub
ficompl
out
outsb
rorl
mov
lods
js
cli
outsl
xchg
sbb
jne
pop
stc
add
push
jl
into
sub
cmp
imul
cmpsl
push
xlat
sub
pop
lock
add
sbb
push
push
sbb
movsl
dec
push
lods
xorl
icebp
es
sbb
xchg
orb
in
sub
test
outsb
cmpb
jecxz
ret
sub
cs
nop
mov
loop
adc
inc
in
dec
call
call
scas
in
jecxz
fdivr
in
mov
cmp
fprem
ss
lcall
lahf
and
xchg
add
mov
adc
sbb
js
xlat
popa
inc
pushf
xchg
or
cmp
outsl
pop
pusha
out
nop
int3
jne
jbe
nop
pusha
inc
sti
jo
lret
push
and
roll
jno
jle
test
adc
sbbb
sbb
or
inc
scas
andl
add
cli
push
pop
sub
jl
dec
xlat
mov
in
sarb
add
xor
jb
fisubl
adc
adc
sub
mov
lcall
imul
xchg
and
push
dec
fwait
cli
mov
and
adc
push
ficoms
inc
pop
inc
cld
mov
fwait
loop
std
add
push
mov
leave
mov
jmp
xchg
rol
sbb
adc
rcll
cmpsl
dec
xor
pop
bound
push
mov
add
push
add
dec
cmpb
sbb
xchg
or
xor
rcl
jg
scas
aaa
insb
mov
push
pop
mov
and
and
sbb
fistpll
adc
xchg
mov
mov
sub
xchg
mov
sub
testb
adc
rcl
mov
mov
cmp
push
shrb
xlat
jbe
jecxz
fnstenv
push
xchg
xchg
std
and
jmp
jns
scas
stc
push
popf
push
pop
add
mov
dec
mov
imul
and
movsb
push
mov
aam
std
pop
mov
jle
insl
add
cld
in
nop
sub
lahf
sub
add
inc
icebp
mov
mov
sub
sub
mov
ja
mov
out
mov
cmp
movhps
jae
fwait
scas
add
lods
fcomps
sbb
push
testl
fstl
loop
lret
aad
push
xchg
sbb
clc
outsb
or
ret
int3
insl
in
enter
rclb
pop
out
xchg
cmpsb
mov
dec
out
mov
fwait
or
and
xchg
test
cmpb
aad
gs
and
pop
sub
movsl
dec
inc
sti
cmp
in
jne
xchg
jle
and
rcrb
in
add
xor
gs
mov
mov
call
inc
das
mov
xchg
ret
push
push
jno
and
fisttps
cmp
push
inc
jns
inc
xchg
mov
je
adc
mov
sub
and
pushf
test
mov
movsl
jle
jg
sbb
mov
sahf
add
js
or
ret
lret
lds
fcompl
faddl
or
clc
sub
xchg
pop
xorl
jns
sahf
test
not
sti
enter
cmpsl
add
fdivl
fisubrs
pop
cmc
fidivl
jl
inc
xlat
js
and
ret
addb
xchg
outsl
out
sbbb
mov
fsubs
cmp
lock
std
push
inc
push
ss
xor
pop
adc
insl
decl
sahf
std
jl
jge
adc
dec
inc
loopne
jo
lds
push
ds
cmp
in
dec
fsubs
rcrl
icebp
push
scas
loop
inc
or
push
mov
imul
repnz
pushf
scas
mov
clc
das
xchg
icebp
in
xchg
pop
and
or
subl
iret
aas
mov
popl
ret
add
add
shlb
mov
xchg
dec
jp
int
push
pop
imul
mov
ds
shll
and
sti
adc
adc
lock
mov
ja
arpl
fiadds
in
xor
pop
sbb
xor
fwait
loop
sub
add
daa
or
cltd
and
xchg
nopl
sbb
stos
push
pop
mov
and
js
fwait
pop
pushf
rcrb
xor
insl
push
lods
dec
cmp
push
popa
jle
cwtl
mov
jl
data16
nop
xchg
dec
das
movsl
adc
pushf
xor
lret
test
mov
push
jge
lret
jge
lea
out
fwait
xchg
mov
lock
cmpsb
sub
fldcw
xor
mov
hlt
loopne
rcl
cmp
and
arpl
sub
cltd
fadd
dec
cmp
repz
movsb
cmp
and
push
pop
leave
push
out
push
jg
loopne
sbb
sub
out
lret
hlt
jne
shrb
mov
negb
stos
mov
imul
fldenv
mov
inc
addl
fildll
js
jne
insl
pushf
mov
in
inc
stos
pop
rolb
add
jne
in
mov
mov
and
or
jge
push
cmp
push
or
sti
sahf
lret
cli
and
jg
cmpsl
aas
cmpsl
and
rorl
aas
add
jae
pop
rol
pop
jp
mov
adc
cmp
mov
ja
test
call
adc
lods
outsl
sub
mov
add
or
cli
or
out
xor
cli
push
sbb
mov
lret
jl
int
add
in
mov
sarl
inc
adc
or
daa
lock
into
pop
jl
xchg
cmp
add
fildll
dec
int3
pop
loope
adc
cli
popl
push
sub
jns
jge
int3
jb
pop
stos
fs
push
aam
rcll
lods
movsb
mov
push
ret
jo
insb
in
cmp
ds
testl
cmpsl
in
or
add
lock
mov
int
and
aaa
sbb
pop
adc
push
cmp
lods
cmpsb
aaa
jg
jg
mov
mov
and
jle
xor
push
andl
pop
in
aam
fidivrs
es
cmp
xor
aaa
jp
clc
push
dec
cs
arpl
jno
jb
rcr
or
jno
sbb
fldenv
mov
stos
lahf
xchg
rorl
pop
shl
push
out
xchg
pop
sbbb
iret
inc
inc
mov
jmp
pop
mov
test
xchg
dec
sbb
dec
sahf
pushl
push
cli
jmp
push
sbb
mov
adcb
in
fbld
scas
shl
xor
add
stc
xchg
mov
xorl
leave
addr16
push
imul
mov
std
xor
mov
idiv
mov
dec
sbb
xor
cwtl
stos
stos
pop
mov
mov
dec
ficomps
xor
fadds
xor
decl
jg
adc
int3
insl
arpl
imul
cld
cmp
pop
inc
cmp
out
xor
icebp
movsl
aam
test
sub
xchg
mov
or
dec
lret
dec
xor
dec
pop
adc
xorb
aad
mov
insl
out
or
mov
sub
sub
scas
cmp
mov
push
add
adc
out
dec
adc
popl
ret
enter
xor
push
sub
ret
sub
testb
mov
add
out
xorb
movsb
popa
xchg
es
adc
mov
test
pop
push
sub
out
fadds
ljmp
and
stos
cmp
jno
sbb
inc
sub
mov
xchg
dec
mov
dec
push
mov
int
rcrl
cwtl
add
xchg
pushf
add
test
sbbl
sub
inc
and
ss
insb
jl
push
pop
cltd
push
outsl
shll
stc
fld
push
out
les
or
mov
and
fsts
test
inc
cmpsl
or
xor
mov
cltd
loope
outsb
cmp
insl
leave
jg
inc
xor
test
popa
ja
bound
sbb
adc
int
in
test
sub
pop
test
jae
sbb
sbb
sar
pop
dec
xor
jg
mov
mov
mov
pop
das
sub
das
push
sbb
test
mov
jae
mov
loop
arpl
dec
fsubr
xchg
inc
xchg
jmp
xchg
dec
imul
xchg
add
cmp
and
stc
mov
cld
call
clc
cmp
jg
pop
repz
hlt
xchg
sub
pop
add
repnz
sbb
xor
push
out
frstor
push
aad
addr16
sbb
inc
jae
push
ret
mov
rcrb
popf
das
inc
add
es
push
push
icebp
pop
roll
mov
fisubrl
dec
fmuls
call
aaa
repnz
daa
pop
inc
test
data16
mov
imul
jns
add
in
push
ds
xchg
int3
popa
fisttpl
gs
sub
std
fptan
stos
jmp
push
sub
xor
push
sbb
aam
and
pop
addr16
ror
xor
mulb
pusha
mov
sbb
inc
sbb
push
lcall
mov
inc
dec
push
loop
push
jns
or
inc
jg
jmp
ret
inc
ja
fidivrs
jge
and
sbb
push
lret
jb
lret
shlb
sub
in
sbb
xchg
xor
lods
scas
add
or
clc
pop
mov
leave
sub
mov
or
inc
negb
testl
call
dec
adc
xor
in
adc
pop
les
pop
jmp
mov
sbb
popa
mov
push
pop
inc
mov
push
fwait
mov
jecxz
std
xchg
cmp
out
lock
ja
pop
pop
xchg
je
mov
dec
dec
lock
call
in
in
dec
push
clc
adc
cmp
sti
jecxz
shrb
jnp
or
pop
dec
and
cmc
fnsave
add
dec
push
fistpll
inc
in
outsl
mov
fs
inc
cmp
add
insb
mov
into
push
sarl
jo
jge
xor
out
jae
cmp
sbbb
roll
jge
mov
sahf
rorl
fs
aam
lods
icebp
stos
sarl
shll
sub
xor
add
daa
cmp
mov
xchg
fwait
sub
xchg
mov
inc
test
and
pop
jne
mov
add
xor
int3
lcall
pop
sbb
push
sbb
cmc
jge
fcoml
adc
inc
out
xchg
ret
add
jmp
imul
stos
mov
jmp
imul
jns
cmp
insl
call
cmp
movsl
dec
repnz
mov
xchg
pop
hlt
out
cmp
iret
xchg
stos
adcl
push
in
dec
gs
push
mov
aas
into
cmpsb
jne
pop
pop
inc
adc
inc
mov
ds
popa
ret
fildll
dec
je
pop
cwtl
cwtl
dec
xchg
mov
gs
fsubl
add
push
dec
inc
out
fucomp
cmp
jb
or
aam
mov
shl
push
xor
xlat
andl
mov
inc
xor
xchg
dec
loopne
jmp
xor
ss
jl
cli
cmpsb
outsb
xor
in
push
repz
jnp
mov
nop
mov
jbe
leave
inc
pop
test
adc
pop
mov
mov
addr16
mov
sbb
sar
das
das
xor
xchg
inc
mov
inc
subl
testb
xchg
and
and
pusha
ljmp
addr16
lock
es
ja
push
psubusw
dec
push
out
sub
paddusb
cmp
xor
xchg
cmp
cmp
push
imul
addr16
mov
ds
fucomi
mov
sbb
xchg
test
iret
sti
cltd
out
inc
push
dec
xchg
sbb
rclb
mov
mov
fistpll
lods
xchg
xlat
push
cwtl
out
or
fs
es
push
sbb
dec
dec
popf
fcomip
aaa
add
sti
pop
aam
out
das
push
mov
adc
sbb
xor
inc
mov
ljmp
mov
shlb
js
fbstp
mov
jle
pushf
fcompl
cmp
jg
stos
js
stc
insb
test
dec
je
lret
pushf
xchg
lods
sub
les
and
lock
sbb
jbe
bound
adc
sub
push
bound
mov
xchg
mov
jne
add
push
test
mov
ljmp
pusha
push
test
fldt
inc
iret
pop
sarl
pop
clc
stc
jb
add
jg
lea
lcall
js
pop
fs
adc
dec
mov
out
jo
ret
adc
lock
push
push
cmp
add
ljmp
mov
cmpsl
aaa
push
jg
nop
mov
push
sbb
mov
ja
add
insb
aas
insb
jns
loopne
inc
sahf
jle
in
mov
sbb
xor
add
into
push
mov
rcrb
ds
es
movsl
push
ret
iret
ja
adc
cs
and
dec
xor
mov
and
push
add
shlb
sub
fs
cmc
fcmovu
cmp
jae
or
and
sub
fld
call
jns
pop
mov
aaa
inc
into
imul
mov
xor
jns
adc
hlt
push
inc
fbld
pop
sarl
sub
sti
xor
xchg
xor
jmp
negb
arpl
cmp
and
inc
std
ficoms
pop
shrb
fdivr
scas
fisubs
popa
insl
mov
jge
jp
addr16
sbb
lea
cmpsl
clc
add
ss
bound
adc
cld
add
out
popa
popa
popa
and
lods
cmp
mov
jg
aad
mov
push
dec
test
jl
insb
sbb
push
jp
aam
dec
jno
adc
adc
fstpl
leave
mov
cmp
popf
out
in
xchg
mov
xlat
sahf
imull
js
xor
mov
or
pop
fwait
lods
stc
xchg
pop
adc
mov
jge
mov
fcoms
aaa
inc
nop
test
pop
pop
mov
push
sub
mov
add
add
mov
std
sub
addr16
jmp
inc
push
ret
push
mov
sbb
jge
push
mov
mov
xchg
loope
mov
jp
fstps
adc
repnz
pusha
fwait
cmp
loopne
lods
scas
hlt
dec
adc
mov
xor
push
arpl
push
je
test
loop
stc
cmc
ja
test
push
mov
clc
rcrb
push
hlt
inc
inc
scas
repz
xchg
lods
cmp
rorb
mov
jg
cmp
arpl
arpl
add
adc
xor
sahf
xorb
inc
jge
xchg
lcall
adc
xchg
sti
pop
push
jecxz
jecxz
lea
cmpsb
lods
sub
xor
inc
jecxz
repnz
ljmp
test
in
std
popf
dec
xor
enter
push
scas
sarl
leave
inc
inc
xcrypt-ecb
cmpsl
push
xor
ret
mov
inc
push
mov
xorl
inc
or
scas
dec
adc
idiv
cmp
mov
aam
stc
orl
xor
lock
sub
sub
lods
cmc
jg
fldt
fadds
lret
fcom
xchg
mov
icebp
adc
imul
cltd
and
in
jmp
push
jp
sahf
mov
inc
fcomp
fmull
cmp
add
movsb
out
and
fidivs
cmpsb
dec
xchg
mov
cmpb
clc
mov
xchg
add
aaa
pop
jb
fcmovnb
lahf
aaa
adc
jnp
mov
jo
cmpsb
cwtl
cmp
xor
out
lds
mov
inc
fnstenv
int
adc
sub
loope
sub
lock
scas
mov
mov
outsb
imul
in
xchg
xchg
dec
sub
ljmp
jb
sbb
fsubrl
push
std
std
sub
pop
jne
xchg
mov
pop
mov
push
mov
ret
mov
test
mov
dec
sub
xchg
add
mov
inc
mov
adc
xlat
jnp
cmp
cmc
rol
pop
mov
adc
or
mov
lods
push
arpl
sbb
mov
xchg
int
lods
jl
test
sbb
std
lods
cmp
push
adc
mov
and
stos
insw
roll
or
imul
jge
fadds
outsb
adc
xchg
xchg
jne
sub
mov
in
push
push
lcall
es
add
out
inc
sub
sbb
adc
mov
loope
cwtl
popf
pusha
push
xor
fisubrl
addr16
pop
data16
pop
xor
adc
sbbb
fs
fcomps
pop
pop
jle
push
ret
aad
push
iret
fistps
call
push
mov
aaa
dec
mov
ret
std
test
sahf
sub
xor
lret
xor
sub
ret
mov
ja
insl
jne
clc
inc
xchg
cmp
fildl
bound
cmpsl
mov
pop
addr16
dec
cmp
fcmovb
in
mov
mov
loope
mov
inc
xor
mov
adc
add
xchg
mov
pop
leave
adc
xor
dec
cli
cmp
push
loope
repz
movsl
sbb
mov
inc
xchg
aas
in
pop
call
xor
pop
sub
ljmp
xchg
push
push
test
push
pop
lea
loopne
xchg
mov
mov
mov
add
aam
push
sub
sahf
fidivl
clc
rcrl
xchg
stos
imul
nop
mov
xor
add
test
mov
inc
add
sahf
xlat
rorb
inc
fldcw
sbb
psubw
mov
pop
cli
add
jb
sub
pop
xorb
fwait
sbb
cltd
and
push
outsb
cmp
xor
sbb
push
addl
gs
xchg
xchg
shl
and
fcoml
leave
mov
ljmp
in
lret
ja
inc
or
lret
adc
rcl
mov
mov
ja
fdivrl
add
inc
in
aad
xchg
sahf
push
sarb
inc
rorb
rcrb
pop
orb
rep
or
push
sub
arpl
andl
pop
cmp
pop
hlt
negb
push
addr16
or
repnz
cmp
mov
aad
and
addr16
imul
and
movsb
in
inc
test
xchg
jmp
sbb
jb
jae
mov
into
call
mov
mov
and
fistps
and
sub
cld
outsl
pop
cltd
aad
push
data16
das
add
or
fs
test
cmpsb
pop
xor
pop
dec
xchg
aas
in
int3
repz
push
hlt
rcrl
push
and
mov
into
xlat
cmp
or
mov
jno
xchg
sub
jecxz
cmp
or
ds
out
mov
sub
cmpsb
mov
jb
movsb
loope
jecxz
imul
mov
pusha
ret
mov
sahf
adc
bound
inc
neg
mov
lods
negl
cmp
and
sub
in
hlt
sbb
cmpb
push
push
fcmovnu
sbb
test
jbe
orb
loopne
enter
inc
add
loopne
cmp
cmp
jecxz
pusha
mov
neg
xchg
xchg
imul
data16
pop
fcmovnbe
popf
xchg
cmp
sahf
jecxz
xor
xor
clc
loop
mov
jae
push
sbb
pop
inc
and
fldenv
add
cmp
in
stc
lret
lret
push
jge
push
push
enter
fists
insb
aas
ljmp
cltd
int3
xlat
push
cli
jb
imul
or
inc
add
add
inc
cwtl
les
scas
jb
shl
xor
dec
divl
test
loope
add
mov
jmp
out
sub
fisubrs
cmpsb
mov
dec
cmc
jae
or
mov
lahf
xor
sbb
iret
cmp
jae
add
pop
and
pop
daa
cmc
fmul
or
fwait
mov
push
sub
js
prefetchwt1
pop
lds
test
or
mov
push
gs
ljmp
leave
es
fsubs
mov
fsts
jg
sbb
arpl
inc
fstp
cmc
mov
rcll
mov
push
mov
mov
mov
je
in
scas
dec
mov
pop
mov
fsubrs
jle
cs
sahf
ja
jmp
scas
test
shlb
pop
pop
fstpt
notb
or
mov
inc
xchg
test
shl
xchg
cmp
fstl
sbb
notb
stos
in
sbb
push
bnd
and
jnp
outsb
mov
fdivrl
and
cmp
loope
jp
in
stc
repnz
or
cmp
pop
sub
cmp
int
push
loop
sub
pusha
dec
add
shrl
mov
and
and
mov
addl
stos
mov
lret
imulb
mov
mov
mov
ljmp
test
lret
mov
pop
sbb
lods
push
mov
inc
push
dec
fidivl
aaa
cli
xor
fidivrs
xor
fbstp
shrl
sbb
rcrl
mov
nop
packsswb
lock
inc
sub
add
jg
test
jecxz
lret
repz
push
or
cmp
xchg
test
imul
jno
or
sub
leave
out
mov
dec
addr16
inc
hlt
add
jns
mov
loope
aam
out
cld
repz
cs
cmp
mov
ret
mov
test
inc
imul
mov
mov
push
hlt
xor
in
dec
jo
int
and
sbb
cwtl
negb
push
mov
mov
inc
cmpsl
ljmp
pop
jle
mov
adc
mov
les
adc
jl
mov
pop
cmpsl
lea
and
pop
or
addb
cmp
fidivs
xor
sarb
outsb
sub
cmp
cmp
repnz
sbb
xor
cmp
divl
adc
jne
mov
gs
dec
xor
cld
ss
push
adc
mov
jns
jbe
icebp
out
scas
lret
and
sub
and
cli
xchg
js
push
aaa
popl
push
mov
pop
mov
pop
mov
lcall
leave
mov
dec
lea
stos
sbb
mov
in
test
add
dec
test
jp
lcall
hlt
ljmp
pop
and
cmp
lcall
push
push
mov
call
jae
into
adc
and
mov
mov
xchg
or
leave
std
das
test
inc
inc
add
jle
sbb
mov
and
cmc
fcoml
std
pop
pop
bound
push
fdivp
pop
add
mov
and
push
stos
push
pop
out
mov
add
xchg
into
repz
mov
add
jp
movsb
cmp
or
nop
insl
adc
sub
jae
sti
pop
mov
es
or
jmp
outsl
ds
push
dec
repnz
pop
add
aad
mov
hlt
cmp
aam
or
xor
push
push
rol
cmc
clc
and
fbld
push
idivb
mov
out
mov
jae
sbb
jae
push
fs
sbb
and
imul
das
mov
popf
push
jmp
jge
sub
cmpsb
lds
cmc
push
enter
push
mov
and
ja
push
das
mov
jecxz
popa
mov
minps
inc
mov
stos
sbb
cmp
mov
sub
pop
add
fisubs
xlat
pop
jns
mov
out
stos
cld
add
mov
out
pop
push
cmp
hlt
ss
sub
push
loope
dec
jbe
aad
or
loopne
add
adc
mov
jne
outsb
sahf
push
rolb
adc
inc
jge
jecxz
insl
xchg
sbb
xor
add
mov
fildll
adc
dec
sbb
inc
leave
cmp
lock
in
ret
bound
and
es
aaa
xor
xchg
scas
cmc
pop
xor
pop
ficompl
sub
in
cmp
cmp
and
and
idivl
cs
pop
loop
inc
aad
ret
enter
in
lret
fiadds
mov
jae
stc
cmp
ja
jle
mov
aad
js
cwtl
push
mov
bndldx
mov
stos
adcb
fs
cmp
pop
and
or
or
push
adc
icebp
out
shl
inc
mov
iret
nop
lcall
mov
jecxz
xchg
and
out
int
jg
jne
add
jne
scas
xchg
std
push
cli
push
push
inc
dec
cmpsl
jge
cltd
out
clc
sbb
loop
cwtl
aas
arpl
jo
mov
idiv
push
mov
in
js
in
push
push
cmpsb
les
pop
mov
popa
and
or
ficompl
les
loop
imul
xchg
pop
jo
rcrl
fdivl
test
jl
sahf
sbb
ss
mov
jge
pop
inc
cltd
repnz
outsb
push
jge
les
pusha
in
cmp
dec
fisubs
movsl
cmp
push
fists
ss
mov
test
cli
sbb
mov
fnstenv
stos
lcall
mov
cmp
fstps
jnp
hlt
out
xchg
cmpsl
cmc
jbe
fsubrs
cld
fists
sbbl
in
sti
in
mov
outsl
cmp
sub
sbb
lods
enter
cmpsb
add
pusha
xchg
adc
mov
movsl
loop
adc
jmp
jmp
movsb
ss
mov
mov
mov
add
jno
mov
adcl
rclb
mov
mov
jl
xor
push
jbe
and
movsl
out
mov
aam
std
mov
jb
and
pop
ljmp
mov
jne
and
lret
jle
clc
mov
cld
xchg
or
or
insl
test
pop
dec
in
mov
add
nop
int3
ja
mov
add
sub
and
out
lahf
inc
movsb
mov
ret
jns
xchg
fbld
orl
lock
pop
add
hlt
mov
inc
mov
loopne
outsl
xor
jg
in
arpl
sbb
dec
mov
xchg
jns
sub
das
shrl
and
mov
xchg
adc
sub
push
icebp
hlt
leave
jp
nop
or
dec
dec
ss
sbb
jp
sbb
sub
mov
fstps
jae
sub
leave
push
shlb
jp
push
push
cmp
movsl
sbb
push
sub
mov
mov
adc
or
adc
dec
adc
lcall
repnz
adc
stos
shrl
lods
or
fwait
jne
icebp
sbb
in
popa
rorb
arpl
mov
test
test
sbb
or
notl
fisubl
adc
loope,pt
insl
and
jno
add
jecxz
push
mov
add
movsl
dec
rcrb
loop
push
shll
shrb
shr
clc
std
sbb
fistl
add
call
or
mov
mov
adc
negl
cld
xlat
cld
daa
mov
out
jns
jl
aaa
pop
add
dec
pusha
fs
adc
jne
pusha
icebp
adc
jp
dec
or
jecxz
cmpsb
or
sub
and
les
mov
add
xchg
inc
fiaddl
xchg
sub
sbb
int
pop
orl
cmc
pop
sbb
iret
mov
dec
stos
popl
inc
xlat
dec
fwait
push
jnp
mov
inc
pop
push
xor
inc
adcl
sbb
lcall
push
mov
inc
mov
or
xchg
jnp
ret
or
addb
inc
addr16
aam
and
dec
or
push
outsb
aaa
inc
int
cmp
dec
pop
bound
pop
mov
sarb
sbb
bound
xor
lret
and
cmp
je
je
test
addb
call
jno
dec
cs
inc
scas
lcall
mov
mov
xchg
dec
je
mov
jmp
xchg
stos
mov
filds
sub
loopne
mov
in
out
insb
pop
cwtl
cmp
into
mov
push
push
test
stos
xor
cmpsl
leave
sbb
fcomip
mov
xchg
sub
addr16
mov
or
out
cmp
add
repz
dec
add
sbb
pop
xor
push
cmpsl
xor
lret
ss
and
and
popf
icebp
jmp
jge
mov
push
and
test
dec
imul
scas
jmp
or
scas
cwtl
mov
std
lds
push
mov
jl
pushf
add
dec
mov
loop
mov
not
daa
pop
popa
pushf
adc
insb
aaa
lods
pop
sbb
adc
sub
mulb
ret
jmp
shlb
xlat
je
cmc
int
jge
xorb
sbbl
test
or
mov
imul
in
add
out
and
push
cmpsl
fwait
pushf
add
mov
rcll
insb
cmpsb
jge
or
int
lret
insl
lcall
and
pop
je
movsb
ljmp
push
add
mov
push
mov
xor
aaa
popa
cmp
aam
fcmovnb
or
pop
inc
pop
lahf
cmp
jge
fnstsw
push
inc
jecxz
dec
mov
leave
aaa
dec
xchg
jle
out
roll
pop
pushf
outsb
adc
out
notb
jnp
add
xchg
leave
outsb
mov
in
or
adc
cmpsl
ret
mov
mov
mov
and
lahf
ja
scas
mov
adc
arpl
das
adc
mov
mov
std
gs
aas
popf
imul
adc
fisubs
js
jg
das
scas
and
mov
cli
jno
cmpxchg
rol
movsb
test
mov
lcall
jo
pop
mov
lds
cmpsl
pop
push
sub
aas
shr
mov
cmp
ja
hlt
or
fwait
addr16
ret
dec
sub
adc
int3
mov
in
lds
mov
inc
lock
pop
imul
mov
or
repz
outsl
jb
sub
in
xchg
push
idivl
sbb
pop
dec
fistpl
dec
jg
xchg
or
mov
pop
mov
test
push
cmp
mov
xor
cltd
cld
dec
mov
outsl
dec
xor
adc
rcr
insb
push
pop
jge
jb
cmp
fsubp
popf
cs
imul
ss
xchg
cli
pop
pop
repz
dec
add
into
dec
sub
out
ds
xor
jge
push
pop
xchg
dec
movsb
insb
gs
fimuls
mov
or
mov
xlat
lods
ds
adc
inc
les
push
pop
pop
test
cmpsl
dec
rcpps
fisttps
and
mov
sub
cmp
out
mov
push
pop
sbb
and
xchg
loop
movsb
push
outsl
test
lds
aas
or
cmpsl
or
lahf
sbb
sti
adc
mov
pop
je
popa
inc
fmull
jmp
jp
sub
cs
jnp
sbb
es
push
jp
and
mov
jp
jnp
dec
in
jne
rolb
in
mov
mov
test
out
popa
mov
roll
pop
add
adc
xchg
mov
lds
dec
in
cmc
xchg
gs
sbb
cmp
testb
push
psllw
aas
xor
icebp
pushf
xlat
push
cmp
xchg
cmp
clc
inc
mov
sub
sub
pop
std
xor
sbb
jnp
or
fidivs
sbb
dec
je
imul
cltd
jle
lock
movsl
imul
add
mov
and
std
add
sub
xchg
xor
jo
aas
xchg
hlt
dec
rcrl
stos
inc
inc
or
sti
out
fimull
pop
ds
cld
cmp
out
hlt
sbb
loope
lock
stc
sbb
sub
push
subl
xor
lock
xchg
xchg
push
lds
jbe
mov
ds
mov
pusha
sbb
stc
adc
xchg
test
mov
xor
rorb
cmp
mov
lods
dec
in
mov
and
fsubr
cmpsl
icebp
rep
pop
test
cmpsb
mov
cmp
adc
icebp
fcomps
sarl
arpl
popf
xor
jp
sbb
push
shlb
ja
add
jmp
dec
test
into
in
out
stc
repnz
adc
repz
push
mov
je
and
xorb
or
mov
push
mov
xor
lret
sbb
sub
rol
push
pushf
jecxz
js
repz
add
psrlq
xor
aaa
cmp
push
ss
jmp
add
stc
clc
push
xchg
movsb
add
push
ret
push
inc
sti
mov
sti
mov
fistl
mov
int3
sub
lret
mov
xchg
or
inc
sbb
xor
loope
xor
stos
out
push
jge
fdivl
sbb
pop
inc
xchg
cmp
xor
aas
mov
lret
inc
jmp
stos
pushf
mov
test
jge
inc
xchg
jae
outsb
or
dec
xchg
adc
jg
and
mov
inc
or
or
cmp
xchg
mov
xor
mov
jne
in
mov
js
stos
stos
pop
xchg
push
fs
sbb
repnz
pop
push
imulb
jp
js
or
mov
int3
xchg
add
sub
sub
outsl
pop
mov
push
and
sarl
adc
mov
mov
sub
dec
push
mov
add
fidivrs
sub
add
mov
stos
pusha
faddp
xchg
jecxz
stos
dec
or
add
dec
mov
jbe
lahf
into
dec
mov
js
cwtl
pop
mov
lods
inc
xorb
jecxz
or
lret
divb
arpl
cmp
cwtl
ja
dec
adc
and
iret
pop
andl
xor
ret
xor
or
dec
push
clc
sub
aas
and
jg
fs
xor
js
lret
in
dec
sub
xchg
add
gs
push
std
push
sub
fdivrl
in
test
inc
push
shl
mov
fst
push
push
jns
inc
arpl
push
mov
xchg
dec
mov
inc
pop
hlt
inc
xchg
xor
pop
fsubrs
sub
popa
dec
fs
out
inc
es
aam
xchg
testb
mov
jg
scas
or
and
cltd
adc
mov
fildl
jns
lret
push
ror
scas
icebp
mov
into
scas
pop
std
je
imul
cmpsb
mov
test
xchg
addr16
push
add
adc
out
loop
dec
mov
rcl
stos
dec
or
or
push
push
bound
adc
lret
out
leave
test
testb
xlat
push
xor
pushf
repz
cmpsl
add
inc
mov
and
push
pop
aad
jge
flds
push
lret
aas
xchg
div
xor
xor
mov
dec
sti
int
mov
stc
sarl
lahf
pushf
xlat
movsl
out
and
xchg
or
fdivrl
data16
pop
sub
sub
and
and
dec
pop
cmpsl
xchg
pusha
push
ljmp
shl
lods
loopne
or
jbe
sub
mov
sbb
mov
pop
filds
fmul
or
fsubs
ja
push
ficomps
stos
sarl
bound
mov
je
rorb
mov
cwtl
sbb
pop
mov
iret
test
lea
dec
iret
cmp
in
mov
ljmp
sub
mov
push
jne
jbe
int3
dec
psubw
add
sbb
mov
add
xor
data16
test
or
aam
cmpsb
idiv
daa
aas
push
movsl
pop
fs
mov
loop
incl
es
mov
jbe
pop
lcall
xchg
dec
in
jmp
sbb
xor
sbb
pop
adc
in
or
sub
jl
cld
out
sahf
mov
fists
into
cmpsb
mov
xor
fnsave
fstpl
insl
movsl
test
pop
cmpsb
and
test
pop
dec
daa
or
lret
xlat
sbb
xor
xchg
out
cmpl
mull
jmp
xor
pop
dec
jle
dec
hlt
int3
out
mov
sarb
cmp
mov
push
cs
in
into
ja
lds
inc
mov
cmp
je,pt
push
add
push
lods
cmp
scas
icebp
push
jns
push
repz
out
push
popf
ret
mov
fimuls
push
mov
out
mov
sbb
fdivrs
xor
push
fbstp
mov
jecxz
cli
xchg
mov
inc
icebp
sub
xchg
xchg
jo
std
pop
adc
iret
dec
nop
fidivs
ja
fiadds
lcall
add
pop
jno
pop
rep
push
inc
fadds
addl
pop
sti
sub
pop
loop
cld
or
inc
aad
insl
loopne
cmp
push
sarb
cld
jb
and
pop
cmp
into
pop
jp
dec
add
jecxz
lahf
lods
out
cmp
mov
subl
cmp
imul
xor
jecxz
jl
jne
repz
lret
jae
daa
into
jle
add
lods
mull
sub
xchg
negb
pop
pop
push
mov
push
es
inc
leave
push
mov
pop
mov
mov
ret
cmp
sbb
push
cltd
mov
adc
loopne
adc
aam
cld
aam
and
test
icebp
mov
inc
mov
adc
xchg
pop
in
ret
push
sbb
pop
jmp
arpl
jp
inc
xor
pop
cmp
jmp
or
out
outsl
inc
js
dec
push
inc
fists
aad
push
xchg
aad
dec
loopne
scas
jle
xchg
fcmovnu
aas
int
mov
jg
stos
jg
data16
shlb
pushf
and
dec
jne
sarb
push
pop
and
sub
mov
es
shlb
sub
bound
cld
mov
out
insb
mov
jne
cmpl
add
mulb
xchg
mov
sti
mov
dec
insb
ds
xchg
cwtl
rclb
imul
out
pop
xchg
in
adc
mov
xor
ficoml
sub
inc
xchg
push
rolb
push
push
std
outsl
data16
loopne
sub
sbb
popf
daa
mov
mov
js
cmpsb
jne
mov
adc
es
pop
pop
call
pop
lcall
mov
stos
clc
lcall
pushf
sbb
andl
insl
adc
ja
stos
mov
outsb
dec
and
add
and
jb
ror
inc
push
fistpl
xor
mov
mov
out
add
mov
pcmpeqb
dec
insb
scas
add
repz
mov
mov
lret
inc
ret
cmc
xor
jns
scas
in
aaa
jp
fimull
mov
int3
fwait
cmp
xorl
add
add
jecxz
sbb
imul
movsl
loope
pop
inc
and
cltd
xchg
xor
push
cmp
xchg
jg
inc
testb
mov
xchg
jle
jg
mov
add
add
sbb
mov
inc
xor
push
sub
fsubrs
add
cmp
pop
lahf
mov
das
adc
das
leave
or
jecxz
adc
dec
push
out
in
sbb
and
add
cltd
out
inc
sar
mov
lret
imul
cmc
test
and
movsb
fmulp
xchg
mov
jl
movsl
pop
dec
fimuls
repz
sbb
bound
adc
lds
pusha
dec
ficoms
or
adc
xchg
sti
gs
mov
fidivrs
stos
mov
aam
push
jle
add
cmpsb
sbb
xchg
dec
arpl
lcall
mov
sbb
xlat
daa
xor
mov
pop
or
inc
pop
sti
pop
loope
negl
pop
mov
aaa
mov
xlat
mov
fs
aas
testw
adc
jg
xor
adc
aad
dec
or
xchg
pop
cmp
xor
adc
fildll
repnz
jne
mov
scas
mov
fadd
jne
sarl
sbb
adc
insb
cmp
aaa
push
rclb
outsb
jno
and
or
sub
pop
pushf
clc
scas
jge
outsl
sbb
mov
mov
pop
xor
push
rclb
mov
jno
pop
push
mov
sbbl
sahf
push
jo
mov
dec
fcompl
and
jmp
push
sub
sbb
sub
lahf
inc
sarb
test
cwtl
in
vpshuflw
je
cwtl
inc
movsb
jg
sub
sub
out
and
call
add
sbb
int
cmp
and
lahf
stos
cmp
or
push
cmp
cmp
stos
stos
fiadds
cmp
or
mov
test
fidivrs
out
loopne
adc
or
lret
xchg
or
shlb
jg
and
andb
les
cmp
jo
dec
sub
jns
bound
lret
movsb
adc
jb
fcmove
inc
mov
pop
out
push
xchg
cmp
adc
dec
inc
jns
inc
inc
pushf
dec
push
lock
pushf
bound
or
sub
lret
arpl
rcl
cld
sub
js
movsl
inc
mov
adc
lcall
addr16
pop
daa
cmc
jmp
cmp
mov
mov
fcompl
mov
cmpsl
xor
rol
inc
or
sbb
rorb
xchg
cmc
in
mov
das
mov
or
insl
je
jl
adc
adc
mov
adc
add
call
nop
out
stos
and
es
das
movsb
inc
pop
pop
loopew
cmp
push
ja
inc
push
pop
mov
sub
sbb
hlt
and
inc
add
mov
shl
call
mov
sbb
aam
pop
xchg
mov
sbb
and
jecxz
pop
lock
lret
xchg
sub
aad
lds
jne
bound
fdivp
jecxz
cmp
dec
test
push
arpl
les
je
es
fistpl
pop
pop
mov
mov
xchg
or
mov
mov
cld
push
sub
mov
dec
inc
out
push
sbb
dec
xchg
dec
mov
xchg
shll
pushf
std
cmp
sbb
xlat
or
sbb
sbb
mov
jo
popa
sbb
dec
mov
sub
mov
lret
ret
jo
movsl
rcrl
and
add
cld
cwtl
adc
pushw
cltd
jg
sbb
test
rclb
mov
mov
out
popf
xor
jb
enter
push
cltd
inc
mov
pusha
mov
ror
cmp
ret
mov
mov
sub
mov
mov
loope
sbb
dec
mov
jmp
stos
or
pop
je
pop
and
xor
mov
fnstsw
dec
jmp
ret
lret
push
into
cld
out
push
testb
repz
xlat
jnp
mov
stos
inc
adc
jnp
les
jne
fists
xor
inc
mov
jb
add
cs
dec
add
mov
cli
fstpt
cmp
mov
mov
iret
xchg
in
sti
mov
daa
lret
mov
test
or
inc
fsubs
mov
push
sbb
dec
and
movsl
cwtl
adc
dec
rcll
inc
add
int3
imul
cmp
aad
test
popf
mov
cmp
arpl
mov
out
sbb
aam
pop
mov
cmc
lods
xor
imul
clc
mov
or
and
jp
rcrb
aas
outsl
inc
enter
jns
movsb
rcll
shl
sbb
and
pop
jo
mov
rorl
push
dec
iret
sub
icebp
xchg
mov
inc
stos
les
mov
mov
out
les
pop
sbb
addr16
test
repnz
es
stos
jecxz
cmp
fcompl
jp
xor
xor
faddl
xchg
sub
jg
ja
hlt
xor
aam
lss
hlt
movsb
sbb
jns
bound
call
scas
fimuls
test
outsl
outsb
inc
ja
push
scas
jp
stc
lret
dec
cmpb
in
insl
cli
fsubr
shl
fstl
pop
loopne
dec
cmp
fistl
inc
fs
cmp
jl
sub
jg
mov
pop
or
test
pop
cmpl
js
aas
ds
adc
inc
insl
push
dec
add
push
lret
mov
xchg
sbb
jns
jo
enter
cmp
mov
aad
xchg
push
jno
mov
aad
je
lret
mov
inc
cmp
loop
es
mov
or
sbb
js
cli
fcomp
adc
mov
xor
ret
cli
fwait
daa
push
scas
cmp
pushf
and
pop
das
xor
fiadds
outsl
hlt
lret
popf
dec
and
push
ja
fwait
jmp
xor
loope
push
xor
outsl
add
imul
das
xorb
inc
daa
xchg
xor
jmp
or
iret
fsubrs
sbb
in
push
mov
sbb
mov
sub
cmp
outsl
fcom
sbb
cltd
in
push
das
adc
add
add
xchg
ja
and
xchg
das
push
out
ss
jbe
pavgb
ss
je
icebp
pop
pusha
sub
mov
inc
mov
mov
xchg
outsb
adc
push
inc
push
and
xor
jae
push
inc
stos
das
jge
clc
or
jnp
movsb
ret
cwtl
pushf
sbb
test
clc
and
fidivl
push
mov
gs
mov
dec
hlt
mov
inc
dec
sbb
mov
cwtl
shll
gs
stos
repz
repnz
aam
lcall
cld
cs
sti
into
shlb
mov
dec
sbb
jns
out
mov
insb
and
out
mov
mov
jmp
clc
pop
addr16
cmp
mov
in
dec
sahf
and
mov
cmp
in
and
lret
inc
popf
aas
enter
mov
imul
roll
jmp
fidivrl
mov
jp
int
add
pusha
xchg
das
pop
pop
shl
dec
jae
xor
xchg
mov
xchg
idivl
mov
imul
or
dec
add
fistpl
andb
adc
cld
cmc
cs
aas
push
sbb
popa
mov
imul
cli
jge
mov
sti
fdivrs
pop
cmp
push
xchg
daa
or
mov
pop
adc
xor
mov
xchg
push
scas
in
sub
pop
ret
and
fistpll
je
daa
ds
and
pop
mov
jp
sbb
daa
ficompl
xchg
add
lods
xlat
ret
pop
adc
shll
pop
insl
leave
jmp
pop
push
push
jno
adc
leave
arpl
mov
sub
ucomiss
mov
subl
scas
hlt
mov
dec
inc
out
movsl
aas
xchg
pop
adc
cmp
xor
jno
sti
sbb
ja
inc
inc
mov
mov
jns
mov
sbb
fisttpll
rcr
das
push
jle
adc
scas
adc
into
and
jge
and
nop
loopne
pop
push
lret
jp
ja
jno
mov
dec
sbb
sub
stc
stos
shll
dec
call
inc
dec
adcl
fidivrl
xchg
hlt
loope
scas
imul
or
pop
add
lock
lcall
push
pop
mov
push
mov
xchg
das
loopne
je
scas
aad
push
movsl
js
fsub
aad
shr
pop
jns
rep
mov
fistl
add
cmp
mov
lods
fsts
movsl
push
push
aas
xlat
mov
lods
in
pop
fwait
js
xchg
dec
sahf
xor
xchg
cld
jle
hlt
cmp
or
ljmp
adc
jge
and
shrb
jmp
insl
addl
movsl
dec
sbb
iret
sbb
push
cli
mov
mov
jb
adc
rclb
aaa
loope
scas
xchg
mov
lcall
and
mov
movsl
push
sub
add
jne
fs
roll
adc
sar
out
push
enter
bound
orl
test
pop
sub
addr16
and
fadd
dec
popf
jp,pn
push
call
adc
aad
outsb
in
lret
push
std
mov
shl
aas
insb
push
pop
adc
insl
or
add
out
popa
loopne
and
mov
into
ds
cmp
push
or
mov
jnp
inc
in
incb
sub
adc
test
pop
mov
dec
push
xchg
es
pop
adc
ljmp
cltd
sub
fs
pusha
sub
pop
cmp
sub
sbb
sub
mov
adc
adc
ja
int3
shrl
mov
cmpsb
sbb
adc
jne
jns
decb
and
rcll
mov
lock
dec
loope
cmp
movups
pop
ja
pop
call
and
dec
lods
enter
pop
add
mov
and
popf
ljmp
loopne
or
xchg
popa
adc
lds
cli
jg
lods
inc
xchg
mov
sub
loop
nop
jl
bound
out
repnz
lea
mov
push
cmpsb
mov
cmp
mov
push
mov
mov
xchg
and
and
movsb
mov
out
jbe
pop
fs
sub
add
xchg
call
fwait
push
jmp
cmp
mov
lock
ss
xor
pop
mov
xor
push
pop
jmp
sbb
push
out
add
or
jg
mov
jbe
mov
add
out
repz
jle
ret
jp
in
lods
out
xchg
push
shl
mov
lret
pushf
pop
xor
xor
xchg
xchg
hlt
popf
out
jge
sub
stos
xchg
cmpsl
jo
movq
ret
imul
movsl
pushf
inc
rcrb
mov
cmp
popf
cmc
fistpll
dec
jne
cmp
push
in
mov
mov
pop
sub
sub
std
shrl
dec
lds
scas
dec
push
cmp
movsl
add
ljmp
lret
fucomp
sub
pop
dec
dec
jecxz
divl
movsb
push
cwtl
mov
xchg
andb
add
sbb
repz
mov
and
out
add
out
mov
arpl
lea
jns
or
jbe
mov
in
mov
inc
dec
cmp
mov
or
addr16
out
daa
adc
push
add
cmp
mov
adc
mov
mov
test
dec
shll
sub
xchg
jo
rcr
popa
jl
mov
adc
punpckhdq
jo
pop
cli
mov
test
pop
adc
xchg
pop
das
sahf
and
inc
insl
lds
cmp
xchg
outsb
in
mov
and
push
arpl
sbb
add
jb
lock
sub
xchg
arpl
jecxz
loope
push
fwait
mov
push
rcr
cmc
or
adc
xchg
dec
mov
es
lret
out
imull
sbb
scas
lods
lret
popf
sahf
cmp
xchg
pop
mov
in
dec
and
mov
or
add
pop
dec
insl
add
ljmp
imul
jg
mov
push
mov
and
push
cmp
push
and
test
dec
jle
testb
inc
mov
and
push
dec
ja
add
pop
mov
cmc
leave
pop
xchg
shlb
les
sbb
mov
push
jp
aad
xor
jg
rorl
xlat
pushf
xor
mov
popa
dec
cmpsb
repz
cmp
push
icebp
sbb
or
ds
cwtl
xchg
ret
mov
jmp
adc
push
hlt
mov
mov
push
test
insb
ret
pop
jge
push
mov
outsl
jne
jmp
cmc
lahf
push
mov
mov
xchg
fdivs
movzbl
in
mov
or
mov
out
test
pop
outsb
mov
xchg
enter
lret
and
cs
ficoml
jl
aad
mov
es
push
ds
push
stos
pop
cltd
or
arpl
lea
add
das
and
in
sahf
fmull
das
xlat
dec
or
outsb
cmp
xchg
mov
popf
ljmp
cmp
gs
fdivr
sub
in
pop
arpl
sub
adc
mov
hlt
fnstcw
out
insb
cmpsb
cmp
std
fcmovnu
loopne
lcall
push
and
xchg
inc
cmc
push
mov
cli
inc
jle
outsl
or
add
sub
testb
add
dec
hlt
xor
movsl
loope
sub
sub
idivl
test
vmwrite
mov
pop
lods
add
aas
xlat
out
lds
xchg
cmp
test
shlb
xor
stos
push
sti
cli
outsl
je
mov
fistl
enter
and
cmpb
inc
lcall
xchg
dec
jb
adc
lds
mov
cmpsl
xor
push
push
mov
repz
pop
js
sub
in
fisttpll
sub
pop
fcmovne
pop
orb
outsl
shlb
pop
out
andl
ljmp
pop
push
stos
add
sbb
dec
xor
dec
and
jo
sbb
iret
adc
jo
mov
repz
jno
sub
inc
ljmp
fwait
inc
sub
or
pusha
nop
mov
mov
xor
lods
inc
push
sub
sub
mov
testb
mov
adc
sbb
in
fwait
adc
movsb
gs
loopne
sbb
outsl
mov
jle
jbe
sti
orl
lods
or
sbb
loope
inc
xchg
or
adc
dec
out
xor
and
mov
fldl
andb
cltd
dec
mov
dec
mov
cmp
popa
test
mov
ljmp
movsb
jno
pop
ja
and
add
dec
mov
cltd
rcll
cmpsb
sbb
js
sub
jg
cmpsl
popf
xchg
enter
jb
out
test
aaa
add
pop
iret
push
push
sti
notl
xor
mov
fisubl
push
push
push
pop
and
leave
data16
and
pause
fbld
orl
pushf
je
lret
sbb
dec
jg
scas
adc
inc
sub
mov
mov
aam
push
incl
mov
jbe
add
pop
push
dec
daa
or
cs
xchg
aad
xor
pop
cmp
arpl
nop
jl
inc
and
cmp
imul
dec
sub
and
add
rcrl
enter
mov
cmpsl
imul
cmp
dec
push
cmp
aam
aam
mov
dec
pop
fadds
icebp
scas
popa
lea
lock
sub
std
xchg
jbe
iret
mov
xor
mov
push
rcl
fs
and
mov
scas
hlt
mov
iret
mov
std
fdivrl
fisubrs
jle
push
inc
xchg
sub
fwait
pop
jae
inc
ss
aam
sbb
dec
cmp
add
notb
jp
dec
loope
xchg
cmp
and
cmp
out
aaa
adc
push
inc
jp
mov
push
pop
movsl
lds
inc
mov
cmc
and
xchg
add
add
pusha
mov
push
ja
cmp
xorb
cli
ret
mov
and
mov
push
aam
push
je
sub
dec
cmp
fnstenv
out
ss
inc
mov
push
shlb
ret
pop
cmp
lret
andl
and
mov
addb
xor
jo
mov
pop
aad
das
sub
in
adc
inc
imul
sbb
gs
lods
ljmp
sbb
dec
lods
adc
in
jecxz
out
data16
dec
insl
push
cmp
cmp
and
cmp
lea
fstp
cmc
xor
fdivrl
pushf
test
push
jno
cmp
inc
stos
in
stos
loop
movsl
in
jo
add
add
or
mov
stos
sbb
cmc
xchg
push
ja
xor
sub
push
iret
repnz
jp
jg
jae
dec
push
add
push
cld
sbb
cltd
sub
mov
mov
cmp
aam
push
jb
out
push
xchg
loop
jecxz
cmp
mov
mov
mov
test
adcb
inc
adc
pusha
pusha
outsb
sbb
pop
xchg
mov
stos
mov
movsb
xor
pop
cwtl
repz
popa
je
xor
fsub
inc
mov
popa
mov
outsl
and
xlat
jns
js
dec
cltd
adc
push
iret
push
mov
aam
repz
cmp
sahf
rol
pop
adc
std
loop
xchg
shlb
ret
jmp
inc
hlt
scas
mov
mov
cltd
aad
inc
jae
or
and
dec
loopne
insb
cmp
jle
xchg
sub
add
jnp
movl
loop
call
enter
lahf
cld
mov
xchg
mov
cmpsl
dec
sub
test
sar
lock
out
sahf
adc
out
aam
movsl
stc
stc
out
xlat
out
stos
dec
sbb
inc
sub
repnz
mov
xchg
mov
lcall
mov
cs
lret
iret
inc
lret
sub
jns
cmpsb
push
repz
inc
mov
or
adc
loopne
jge
jmp
adc
adc
inc
jp
mov
je
mov
xchg
cmpsl
cltd
mov
cmpsl
jno
jns
out
adc
out
mov
sti
popf
jb
js
stos
xor
jge
test
mov
push
fbld
mov
out
inc
std
ret
cmp
add
sbb
push
mov
jecxz
xchg
xchg
ret
mov
or
inc
rorb
sub
cmpsb
jns
rorl
or
aad
stos
and
inc
ds
andb
mov
xchg
inc
adc
repz
pop
cmp
into
inc
mov
sarb
cs
adc
repz
loop
or
jecxz
pop
mov
outsl
popf
int
mov
cld
dec
cmpsl
pop
xor
mov
imulb
lea
rclb
sub
loope
bound
mov
lahf
mov
mulb
mov
mov
mov
or
mov
sahf
int3
jmp
mov
jg
mov
mov
lret
cmp
fsubs
std
sub
inc
mov
stos
mov
aad
lret
andl
das
mov
xchg
mov
dec
pop
lea
xchg
jae
xchg
mov
jns
pop
pop
lcall
dec
stos
jae
fstl
loop
sbb
add
add
lods
std
or
out
dec
add
pop
and
lock
pop
lahf
mov
aaa
pop
xchg
sbbl
dec
sahf
mov
inc
jle
xorb
icebp
test
lea
pop
dec
loopne
adc
cli
xor
xchg
xor
test
mov
roll
push
pushf
aam
inc
insb
sbb
xor
jle
xchg
in
or
inc
sub
jae
push
inc
movb
pop
fwait
hlt
inc
subl
mov
lea
iret
adc
pop
cmc
cmpsb
xchg
les
or
xchg
push
stos
das
mov
sbb
inc
or
inc
cmp
pop
adc
out
negl
pop
and
movsl
xorb
sarl
xor
imul
pop
jp
push
pop
xchg
outsl
cmpsl
lcall
loop
push
mov
and
pushf
inc
sub
mov
inc
cmp
jmp
push
or
fcoml
nop
push
mov
sub
stos
out
in
jns
outsl
aam
scas
test
arpl
out
and
paddsb
jns
add
cmp
sub
xor
daa
push
xor
lds
inc
je
notl
dec
mov
testb
popa
mov
xlat
bound
inc
stc
mov
adc
xor
sub
jno
xchg
dec
mov
outsb
jnp
daa
mov
mov
dec
popf
imul
cld
std
jnp
sbb
fisubl
repz
clc
test
nop
push
aad
sbb
mov
add
arpl
sahf
repnz
jno
cmpsb
paddb
fildl
test
iret
cld
je
test
int3
lods
int
push
xor
test
jne
cmp
inc
out
inc
mov
xchg
dec
leave
aad
pop
mov
push
inc
inc
xchg
movsb
and
jmp
je
push
and
jecxz
jne
cld
push
sbb
int3
cmp
mov
xchg
out
lahf
lea
sub
mov
mov
jb
xor
out
xchg
mov
or
gs
pop
fisttpll
inc
incb
cmpsb
sbb
cmp
out
lret
loop
add
fmul
loop
push
dec
xor
pop
jmp
mov
mov
sub
add
push
pop
shlb
push
mov
cmp
xor
out
and
popa
or
ficompl
subl
rcrb
pop
and
sbb
inc
stos
inc
sub
es
mov
mov
stc
sbb
iret
xor
repz
pushf
into
mov
xor
sbb
cmpsb
xor
mov
push
sbb
ss
push
inc
dec
dec
mov
push
popa
lret
rcr
fcoml
adc
adc
repz
rcl
loop
jecxz
sahf
cmp
xor
ficompl
xor
dec
clc
push
xchg
adc
sahf
push
cmp
dec
cmp
cmpsb
aaa
mov
xchg
stos
push
or
sub
aad
push
adc
fldt
jae
adc
bound
push
push
mov
pop
and
lods
push
data16
fstps
dec
xor
mov
cs
and
dec
add
clc
mov
repz
cmpsb
sbb
push
outsb
mov
xchg
lahf
xchg
cmpl
mov
orb
mov
xchg
fcomps
or
mov
adc
and
movsb
mov
cmp
cmc
fcoml
add
ficoml
enter
jae
stos
dec
mov
cmp
pop
jle
cmp
stc
add
xchg
push
fstpt
mov
mov
cmpsl
cmpl
int
iret
jne
jb
adc
cwtl
loop
je
icebp
sub
gs
sbb
cmp
cmpsb
or
sbb
xor
xor
cmp
xchg
xorl
or
xchg
int
mov
rcrl
pop
adc
fistpll
cmp
and
xlat
pop
push
loope
ds
or
pop
es
mov
and
idivl
mov
imul
cmp
lret
pop
push
jecxz
inc
lret
pop
popf
cmp
mov
fwait
push
dec
daa
xchg
pop
jns
sub
inc
mov
cs
mov
rcll
xor
and
jl
xor
push
pushl
jg
insb
arpl
in
inc
cmp
orl
xchg
xor
sbb
push
xchg
and
push
pop
bound
xor
out
adc
cmp
adc
loopne
pop
sbb
push
cli
and
stos
imull
mov
adc
arpl
jp
or
enter
les
mov
fwait
ret
fmul
cmp
cli
mov
xchg
pop
sarb
adc
scas
mov
les
inc
sbb
mov
mov
adc
scas
repnz
fdivrs
mov
in
test
hlt
bound
xchg
mov
jbe
pop
ja
add
jge
scas
addr16
dec
lock
mov
cmpsl
outsl
mov
jbe
leave
pop
xchg
cmp
xor
imul
xor
cmpsb
scas
pusha
fistps
adc
icebp
dec
xchg
das
push
inc
test
mov
mov
cmp
mov
and
pop
out
and
push
lahf
sarb
adc
les
ror
and
cmp
aad
xor
xor
ljmp
sub
cmc
pop
popf
pop
pusha
test
add
loop
jno
out
stc
shrl
loopne
negb
rolb
pusha
lds
sub
xchg
pop
into
int
out
jnp
and
jge
sub
lret
adc
jecxz
int
inc
lea
mov
sub
loope
dec
mov
dec
mov
shll
nop
mov
loopne
push
xor
rcrb
scas
pop
fwait
cmc
xchg
mov
pop
mov
jle
mov
inc
outsb
xchg
mov
sbb
cld
fimull
stos
out
pop
jecxz
js
pushl
leave
pusha
fdivrs
jp
fidivrl
sub
leave
aam
lret
dec
inc
or
ficoml
mov
jo
push
and
jecxz
push
insl
loope
cmp
imul
or
push
xchg
out
inc
pop
push
xchg
cmp
lock
rorb
and
xor
rol
mov
mov
scas
or
mov
popw
out
mov
pop
add
push
ljmp
stos
xchg
hlt
mov
mov
sti
jbe
repnz
push
std
fistl
inc
lahf
sub
add
stc
cmc
pop
mov
idivb
jns
add
cmp
loopne
xor
stos
dec
std
fadds
mov
fbld
negb
mov
mov
push
add
and
or
jp
hlt
or
xor
inc
leave
cwtl
scas
cwtl
imul
cld
hlt
or
pop
mov
idivl
cwtl
scas
cmpsl
lds
repnz
and
call
clc
stos
outsb
jns
sub
imul
notb
ret
adc
pop
pusha
dec
push
and
stc
aam
dec
mov
jbe
dec
aad
or
mov
adc
addl
jb
pusha
imul
insl
push
xor
fiaddl
lret
add
jno
pop
dec
jb
mov
pop
xor
dec
add
in
push
mov
add
xorl
sbb
shlb
imul
xchg
ror
add
add
orb
dec
adc
fwait
push
jbe
or
pop
push
and
pop
xor
rolb
jno
addr16
rcrb
xchg
xor
inc
lea
incb
cmpsl
hlt
js
xchg
rcl
and
cmpsl
cmp
pop
ja
lock
lods
mov
in
rcl
push
mov
add
scas
bnd
in
dec
icebp
std
mov
jbe
mov
xchg
es
test
fbstp
ret
push
mov
je
cmpsl
adc
mov
lods
cwtl
pop
and
jg
xchg
push
xchg
enter
pop
jae
lods
dec
nop
int
add
pop
adc
dec
ljmp
leave
jae
scas
or
adc
xchg
leave
jmp
pop
jo
in
lock
stos
sbb
iret
hlt
adc
pop
or
cld
inc
cwtl
lods
and
cld
jno
push
push
push
cwtl
jg
mov
mov
out
lcall
flds
dec
and
shlb
mov
dec
loop
imul
dec
dec
sbbl
leave
out
ret
xor
sub
mov
lret
push
dec
stos
out
int3
mov
int3
jbe
mov
jp
std
out
bound
push
inc
dec
jp
sub
loopne
and
mov
enter
add
scas
cs
or
hlt
sbb
ret
adc
inc
jno
jno
mov
inc
xor
push
insl
repnz
jmp
cli
test
cli
mov
add
mov
lds
std
xor
cmpsl
adc
mov
xchg
mov
dec
push
mov
stc
lea
push
sub
sbbb
lahf
into
inc
sbb
outsb
sub
fcmovnb
mov
sti
mov
or
insb
xlat
and
pop
add
cmpsl
arpl
ds
add
jne
lahf
mov
mov
xchg
lods
or
add
push
stos
sti
ret
mov
or
mov
xchg
mov
sbb
pop
or
js
scas
push
fstpl
pop
push
push
and
add
sub
fldcw
cltd
add
xor
outsl
push
popa
jmp
push
add
xchg
je
mov
lret
inc
test
leave
xor
and
mov
adc
inc
sub
icebp
stc
xor
cltd
push
push
mov
push
xor
iret
add
mov
lret
adc
jmp
and
repz
pop
test
sub
test
fst
and
push
mov
adc
pop
xchg
xchg
gs
hlt
push
inc
jb
outsl
inc
mov
push
in
mov
sar
adc
sbb
jae
jne
popa
fwait
cs
in
mov
push
pop
lock
fistl
xor
jae
icebp
repz
sub
pushf
ljmp
and
cld
add
fucom
lahf
dec
push
dec
imul
dec
jmp
add
cmp
out
std
pop
mov
inc
adc
or
xchg
and
fiaddl
test
or
sbb
sub
imul
sbb
lods
adc
jo
cmp
scas
cmp
ljmp
xor
andb
lret
cmp
ljmp
adc
dec
xor
popf
loope
inc
data16
push
mov
jmp
call
sub
out
sbb
jp
jg
dec
adc
fistl
jnp
scas
or
adc
pop
mov
jnp
jb
cmpsl
xchg
out
mov
ja
sbb
sub
mov
xchg
push
popf
lods
jmp
fldenv
ficomps
loope
jl
sahf
xor
nop
jle
sub
push
mov
xor
cmpsl
movsb
fistl
xchg
mov
rolb
push
jg
mov
sbbb
jns
movsb
lea
inc
loop
lahf
xchg
mov
xchg
into
imul
inc
xor
cmp
lds
or
adc
gs
lds
fldenv
decb
add
out
loope
gs
cmp
popa
in
push
nop
xchg
sti
sub
test
fnstsw
imul
inc
cmp
jb
and
push
lahf
sub
or
mov
mov
imul
movsl
xor
adc
add
cmpsb
fidivs
fcomp
adc
add
mov
add
jo
insb
mov
imul
jge
ja
subl
fdivrl
lods
and
pushf
pop
inc
cld
mov
push
das
stos
add
lret
outsl
pop
jp
mov
xor
xor
pop
call
and
cwtl
outsb
mov
loop
ret
lret
int3
cmp
mov
test
sbb
mov
das
scas
int3
adc
push
pop
mov
addl
jne
in
pushf
fstps
adc
xchg
ret
fnstenv
xor
movsl
jne
inc
cli
pop
fimull
xchg
or
push
cmpsl
mov
mov
cmp
fstl
lret
push
outsb
xor
pop
shll
in
sbb
shlb
movsl
or
ljmp
cs
fwait
test
ss
ret
xor
and
cmp
xor
inc
mov
push
jbe
pop
iret
jne
cmp
lcall
nop
int
movsl
fildll
hlt
cmpsl
pop
dec
lahf
mov
jl
cltd
fsubl
out
aad
stos
mov
push
push
ret
add
jmp
lock
bound
fs
clc
stc
cmp
lret
mov
and
pmovmskb
loope
sti
nop
and
ljmp
dec
sarl
and
push
mov
push
push
cltd
lods
sub
dec
call
iret
jl
dec
or
sbb
sbb
cmp
loope
sub
fidivs
cli
pop
leave
xor
sbb
sbb
loope
and
lahf
lret
cs
xor
lds
push
sbb
roll
jge
in
sub
loope
ss
fmull
sbb
sub
pop
jbe
push
dec
push
outsb
add
mov
fisubl
es
xlat
mov
pop
stos
sbb
lahf
pop
test
test
xchg
push
cs
xchg
or
cmp
mov
mov
repnz
scas
fidivrs
sub
rolb
xor
push
insb
lock
sub
sub
push
push
jge
fcoms
fiaddl
insb
mov
mov
scas
dec
lret
add
jno
cld
sbb
int
and
mov
xor
das
mov
fstpt
sbb
inc
ja
and
pop
test
ss
aas
cs
inc
cmp
inc
xor
xchg
adc
add
add
and
into
cmp
enter
dec
iret
aaa
test
mov
scas
push
cmp
stos
mov
js
xchg
pop
jp
inc
cmpsb
fisubrl
pop
leave
hlt
cs
faddl
nop
iret
mov
dec
push
mov
fstl
adc
pop
pop
inc
sub
das
push
xchg
jo
mov
loop
sbbl
jns
arpl
sub
push
xor
pop
inc
add
lea
cmp
fstpt
aas
rcr
sub
fbld
push
xlat
pop
insb
xchg
dec
jmp
pop
xchg
lahf
insl
mov
or
lcall
jg
sbb
mov
lods
pusha
test
ret
xor
stos
dec
mov
je
sbb
jecxz
mov
xor
mov
js
leave
pop
inc
loopne
sub
mov
imul
in
jge
lods
shll
and
fwait
jl
adc
pushf
jne
popf
lods
icebp
call
cmc
jmp
adc
mov
jle
cld
xor
aas
sbb
inc
insl
push
dec
loope
dec
adc
push
xor
jae
mov
cmc
cmp
add
lret
das
in
sbb
jl
inc
jecxz
popf
push
jmp
call
xchg
xchg
xor
inc
pop
das
lcall
jecxz
in
stc
add
lret
mov
pop
loop
xchg
lock
or
mov
aas
jg
out
push
pop
push
mov
jb
add
xor
mov
xor
adcb
das
jne
mov
fldl
sub
insl
outsb
inc
pop
scas
sbb
cvttps2pi
pushf
cmp
call
pop
insb
sbb
loope
test
shll
daa
jno
out
lret
and
fwait
or
fstps
outsb
pop
lcall
testl
pop
test
xchg
fbld
js
in
pop
push
xchg
insl
shll
loop
mov
pop
mov
fimull
lret
mov
and
cwtl
imul
xchg
in
leave
cmp
mov
cld
pop
imul
ss
adc
pop
mov
push
cmp
xor
je
lret
push
pop
sub
sti
arpl
test
mull
inc
xchg
push
and
fnstcw
push
inc
sub
nop
test
mov
dec
jg
testb
test
mov
es
cld
adc
fildl
add
loop
or
or
std
mov
pop
and
adc
nop
dec
jge
pop
lock
lods
inc
insb
dec
or
jne
int3
cld
js
xor
je
mov
lcall
or
je
add
lods
jo
test
hlt
dec
cmp
daa
jmp
jge,pn
sbb
mov
mov
in
pushf
fiadds
rcl
sarb
or
lahf
jmp
jns
fucomi
inc
lea
mov
push
or
in
xchg
push
popf
inc
shlb
dec
adc
push
shr
push
lret
xchg
push
fisubrl
arpl
das
mov
gs
rcrb
add
sti
lahf
sub
pop
dec
sub
jbe
xor
popf
in
cs
in
test
aad
mov
fnstenv
outsb
bound
sub
mov
pop
mov
leave
sahf
xchg
mov
lods
into
add
and
test
inc
leave
scas
dec
dec
inc
lcall
cmp
jecxz
in
lock
cmp
mov
aad
inc
mov
daa
std
mov
je
outsb
popf
lods
scas
sarb
dec
xchg
sub
test
and
rclb
adc
mov
fsubrl
push
jecxz
gs
mov
icebp
lret
in
je
pop
pop
cmp
adc
push
test
xchg
xor
inc
je
add
inc
sti
push
ret
sbb
cs
cmp
gs
outsl
push
insb
push
cltd
sub
ror
sub
lea
out
sub
in
gs
mov
and
loop
pop
jb
scas
dec
mov
mov
jne
pop
in
mov
mov
aam
pusha
or
lock
lret
mov
ficompl
inc
inc
jnp
int
jle
mov
mov
xchg
jo
adc
sbb
insb
sub
add
push
jae
mov
fsts
les
movsl
pusha
mov
lods
push
push
jbe
test
cmpsl
sub
sub
outsl
nop
mov
xlat
lds
or
xlat
aam
gs
jge
sbb
lods
sar
andl
dec
cmp
cmovs
aaa
or
dec
push
jae
lcall
fmull
sahf
fbstp
xlat
fistl
pusha
popf
jo
loope
or
addr16
out
mov
or
push
ror
sub
xor
push
sbb
pop
mov
addb
xchg
fs
adc
sub
in
movsb
xchg
pop
pop
xchg
xor
or
sub
jmp
cwtl
pushf
mov
pop
int3
xor
adc
cmpl
mov
nop
mov
data16
hlt
inc
xchg
rcrl
das
cli
out
dec
pop
mov
adc
sub
adc
pop
ret
push
dec
out
xchg
add
pop
sub
inc
clc
mov
js
jle
sub
shll
push
insl
xchg
fistl
dec
xor
dec
mov
xor
sti
mov
jo
testl
dec
dec
shlb
mov
mov
push
sub
push
mov
mov
out
xchg
xchg
or
add
imul
sarl
and
cmp
pusha
sub
sbb
push
push
and
repnz
rcr
popf
mov
into
scas
cmp
push
xor
insl
sub
ss
adc
and
das
stc
lahf
int
outsb
xor
sub
cmpsl
push
and
movsl
das
cmp
dec
pop
sub
add
inc
mov
into
mov
cmp
mov
ret
xchg
or
test
adc
ret
mov
or
xchg
in
adc
test
test
lret
or
daa
mov
aad
jecxz
xchg
cmp
shr
sarl
jmp
mov
movsb
shlb
and
mov
add
stc
mov
dec
movsb
add
inc
ljmp
jmp
mov
push
push
sbb
shlb
arpl
xor
mov
xchg
fistps
jl
pop
lods
jo
push
sub
xchg
mov
sarl
call
cmp
xor
push
mov
cmp
sbb
add
movsb
pop
sbbb
xchg
inc
sbb
pop
xor
dec
ds
mov
mov
xchg
rcrb
es
ss
das
mov
mov
xor
cmp
cltd
negl
adc
dec
test
pop
cltd
mov
jp
jne
lds
add
loop
ss
and
shll
xor
jmp
sub
dec
push
stos
test
and
aas
inc
sahf
rcll
aas
fistpl
mov
negl
mov
sbb
sbb
jge
sarb
rolb
in
lcall
mov
mov
cs
hlt
xchg
sbb
and
jmp
adc
cltd
aaa
ficompl
lret
mov
xor
mov
lcall
pop
lahf
add
lret
or
test
dec
jecxz
arpl
in
jnp
decb
jo
scas
lahf
mov
xchg
movsb
dec
jnp
push
push
and
cmpsb
dec
stos
es
xor
adc
inc
lock
adc
insb
sub
push
pop
shrb
imul
push
call
adc
and
lidtl
mov
lcall
push
stos
lods
bound
push
popa
inc
xchg
jle
add
mov
mov
mov
xchg
int
ret
adc
test
lret
aam
cs
in
dec
push
xchg
stc
bnd
jmp
dec
gs
mov
iret
in
scas
lcall
in
int3
inc
and
clc
adc
bnd
jns
arpl
in
in
xor
js
into
and
jmp
gs
lds
or
jnp
mov
testb
sbb
or
test
pushl
mov
adc
xor
cmp
pop
sub
lcall
sub
iret
test
cmp
dec
jns
or
in
fwait
inc
mov
jne
pusha
test
fdiv
jmp
lock
mov
lahf
fildl
add
ljmp
shrl
push
das
fisubrs
adc
loop
das
or
lea
cmpsb
lea
sti
mov
xlat
in
je
fstpl
mov
pop
fwait
and
nop
rcll
test
xchg
push
fsub
subb
andl
rorl
xchg
leave
test
xor
push
orl
xchg
mov
addr16
mov
adc
fsubs
fimuls
mov
cmp
rorb
inc
lods
in
sbb
xchg
inc
ljmp
adc
daa
mov
movsb
rclb
bound
mov
mov
sub
cwtl
fwait
daa
jae
and
addr16
addl
test
imul
in
jne
sbb
dec
cli
push
lcall
aas
sub
shlb
and
lds
pop
andb
stc
mov
mov
sub
addb
cmpsl
popf
rorl
xchg
sbb
cmp
xlat
adc
iret
jmp
xchg
mov
insb
push
setle
jecxz
adc
aam
cs
stos
push
push
mov
xor
inc
dec
mov
add
movsb
mov
subb
clc
sub
pop
cmpl
lods
and
jg
sbb
dec
pcmpgtb
into
dec
pop
ds
fstps
lea
je
push
push
mov
inc
or
inc
aaa
lahf
and
inc
sbb
mov
fcmovne
sub
mov
mov
lahf
cltd
pushf
mov
into
mov
aad
add
stos
shlb
lods
punpckhbw
add
test
outsb
pop
mov
fcoms
in
sbb
out
std
mov
and
mov
orb
xchg
in
lahf
jno
add
stos
idivb
jbe
xchg
add
movsb
sbb
aaa
jmp
xchg
xor
or
mov
cmp
idivl
stos
imul
jns
push
jge
je
pop
mov
xchg
pop
stos
clc
lods
add
sbb
out
sub
mov
lds
and
xor
inc
fists
cltd
or
shlb
and
js
stc
movsb
pushf
addr16
fdivs
sbb
xor
adc
sub
pusha
xchg
and
push
arpl
adc
sub
lock
mov
jl
roll
scas
rcr
xchg
ret
or
jle
ficoms
pop
in
ja
ret
cmp
inc
sbb
jge
sbb
jns
xchg
mov
imul
xor
stos
and
repz
push
xchg
push
pop
dec
in
pushl
or
cmp
rcrb
int
addl
and
add
aad
mov
xchg
test
insl
insb
sbb
rorb
enter
xchg
adc
out
push
es
push
sbb
lock
jnp
xchg
pop
lods
jae
sub
dec
popf
lock
xchg
movsb
in
insb
in
hlt
int3
iret
das
sbb
mov
lcall
add
push
lcall
sbb
stos
jmp
dec
add
cmp
pusha
xor
mov
or
nop
testl
hlt
iret
mov
std
fxch
cwtl
mov
push
xchg
rcrb
or
rcrb
sbb
mov
enter
shlb
adc
stc
cmp
jp
cmpsb
push
pop
add
icebp
lahf
movsb
sbbl
sub
mov
mov
cltd
mov
mov
push
push
jne
add
push
inc
dec
dec
mov
mov
sub
and
or
sbb
and
addr16
je
jl
push
cmpsl
mov
cmp
dec
cmp
mov
data16
js
movsl
dec
and
pop
subl
add
inc
dec
movsl
fcmovu
in
test
lahf
repz
jb
loope
frstor
enter
loopne
push
jnp
lahf
decb
xlat
cmp
arpl
iret
aam
inc
jnp
inc
pop
in
lock
bound
js
jg
xor
int3
xchg
and
cmpsb
mov
outsl
cwtl
ret
mov
pusha
add
push
lock
mov
push
sub
in
push
out
pop
lcall
ljmp
lret
cmp
popa
sbb
fwait
push
adc
pop
imul
pop
xchg
sti
mov
add
xor
push
jmp
clc
aas
or
punpcklwd
xchg
jle
stos
add
subb
inc
push
movb
aad
xchg
jno
mov
or
mov
mov
jecxz
adc
sbb
or
sub
xor
call
and
hlt
in
cmc
cmc
stos
inc
jle
div
adcl
jne
lcall
mov
mov
aaa
les
out
add
adc
xor
push
adc
mov
out
and
in
adc
and
push
cmp
movsl
pop
out
daa
lock
das
js
fbstp
cmpsl
adc
add
shll
fisubrl
aaa
nop
mov
lods
xchg
rcll
mov
cmp
loop
inc
insb
or
lods
mov
add
or
pop
adcb
inc
xchg
aaa
add
jmp
lret
xchg
ds
adc
dec
jmp
lds
aas
fldcw
test
sahf
sahf
mov
xchg
mov
pop
inc
loope
mov
rcrl
inc
movsb
shl
shlb
push
mov
pop
es
jg
lock
mov
dec
mov
pop
jbe
mov
dec
or
cmp
test
imulb
jae
inc
adc
leave
imul
and
push
sbb
imul
mov
sub
adc
rolb
sahf
jg
in
inc
sub
lcall
adc
inc
sti
lds
int3
pop
or
xor
lret
mov
mov
pop
ret
and
imul
in
adc
jmp
push
xchg
pop
mov
cmp
and
and
dec
jb
movsb
mov
lret
jns
mov
push
or
xchg
fldl
add
cli
push
xor
imul
pop
jle
addr16
mov
mov
push
cpuid
pushf
mov
sti
and
mov
mov
scas
decb
push
pop
notl
dec
push
pusha
xor
mov
push
sbb
daa
dec
cmpsl
rcrb
in
jge
jns
ficoms
pusha
sbb
imul
pop
mov
ja
push
jecxz
enter
andl
fsub
popa
mov
popa
imul
loop
add
add
ss
pusha
insl
jne
inc
jle
and
test
cmp
mov
inc
xor
ja
add
xor
pop
xor
es
ficoml
insb
jns
jecxz
lahf
cwtl
cltd
cmp
xor
jge
shl
test
mov
mov
loop
gs
out
cmp
push
orl
arpl
cli
lock
and
sbb
insb
enter
jns
mov
push
fmul
adc
or
ficompl
test
leave
adc
xor
mov
cmpl
jnp
fbstp
mov
jbe
cltd
push
cmc
cmpsl
or
push
add
jg
loop
imul
into
mov
xchg
or
jb
shr
insl
push
shll
out
push
lcall
cmpsb
mov
rcrl
inc
sbb
lock
repz
sub
clc
inc
in
fucomip
jge
push
shll
repnz
pop
push
push
push
sar
rolb
shrb
mov
push
int3
addr16
and
pop
jmp
mov
pop
mov
push
xor
pop
mov
or
mov
data16
dec
push
movsb
dec
sub
adc
out
pop
mov
xchg
je
cmp
xchg
sti
or
xchg
dec
pcmpgtd
pop
test
xchg
dec
cmp
push
bound
fldz
sbb
imul
ret
add
xor
dec
popa
aas
push
fsub
stos
mov
mov
xchg
cwtl
fisubs
shlb
mov
insb
mov
pusha
test
sahf
popf
and
mov
xchg
pop
cmpsb
xchg
mov
test
mov
xchg
scas
gs
sbb
imul
sbb
mov
pop
xlat
xchg
rclb
cld
ret
cmp
pusha
js
in
std
xchg
cld
inc
or
pop
out
pop
bound
xchg
push
push
mov
mov
scas
push
aaa
cli
pop
push
cmpl
clc
mov
adc
add
loope
ds
dec
mov
xlat
test
cltd
test
pop
out
cmc
push
and
push
jno
mov
daa
or
add
lea
push
inc
dec
mov
cli
add
pop
loop
jns
cmp
sbb
and
adcl
in
daa
data16
fmull
sub
sbb
xor
hlt
adc
std
mov
sar
mov
icebp
or
cmp
repnz
loope
inc
sub
mov
test
fistl
inc
or
and
leave
aas
mov
ret
or
add
mov
addr16
xor
loop
nop
hlt
fimull
loopne
mov
into
les
icebp
outsb
or
xchg
insl
and
xchg
xchg
lret
out
mov
iret
insl
andb
cmpsl
mov
jge
inc
mov
pop
and
enter
mov
lahf
or
loopne
add
fsts
pushf
xchg
ficoml
in
pmaxsw
fildl
push
cmp
sbb
cmp
mov
incb
inc
mov
cwtl
cmp
sub
iret
xchg
testl
mov
in
loopne
addl
sbb
cmc
ljmp
ljmp
jmp
pop
or
push
dec
out
xor
cmc
jle
mov
scas
sbb
push
int
lea
aad
push
mov
adc
and
cmc
notb
fdivrs
add
lock
cmp
cmpsb
cmp
shrl
lock
dec
std
mov
imul
and
adc
add
mov
sarw
inc
rol
movsl
negb
jo
jne
popa
mov
jge
xchg
sbb
imul
test
fwait
inc
pop
loopne
int3
into
lcall
lds
jb
mov
fildll
inc
sahf
jnp
adc
icebp
dec
pop
jo
add
fnsave
sti
pop
in
jno
movsb
aas
push
mov
adc
sbb
rorb
in
popa
or
test
movsl
fs
aas
cwtl
add
jae
into
xchg
int
or
movsl
in
js
mov
leave
cmp
repz
push
test
push
adc
nop
out
add
mov
mov
test
lcall
pop
jo
pop
sbb
dec
mov
fcomps
push
mov
das
pushl
mov
stos
mov
insl
fsubs
pop
mov
pop
insb
jle
cmpb
sub
xchg
mov
or
test
out
mov
ja
in
jp
sbb
gs
cmc
fcomi
mov
std
inc
cltd
fstl
pop
jl
pop
mov
mov
les
iret
dec
xchg
idiv
not
adc
add
rclb
in
mov
mov
sti
xlat
mov
xor
xchg
shrl
in
imul
call
mov
inc
imul
add
xlat
call
push
ja
sahf
insl
imul
pop
cli
out
cld
out
dec
js
sbb
pop
jno
int
mov
jle
adc
into
into
cwtl
outsl
je
fisttps
xchg
imul
mov
ret
add
dec
sbb
jo
xor
fdivs
mov
shl
push
pusha
je
and
sbb
out
dec
or
push
jle
or
bound
mov
sbb
hlt
sbb
mov
bound
sub
jb
mov
jle
js
add
std
sub
sub
adc
push
mov
jo
aaa
xor
stos
sub
jg
loopne
sub
adc
das
cli
and
or
mov
stos
sub
lods
mov
cwtl
xchg
inc
push
inc
xorl
sub
arpl
lock
aad
cld
mov
iret
pop
and
int3
rclb
push
subb
push
das
sahf
cmpsl
icebp
addr16
cmp
mov
jae
rorb
xlat
test
add
sar
or
mov
or
add
clc
out
dec
lds
inc
mov
cld
push
and
and
add
inc
mov
jle
scas
aam
pop
outsb
lcall
scas
jo
sti
fsubrl
dec
pop
inc
add
adc
addl
test
inc
mov
lret
jmp
int
mov
jmp
sahf
sub
loopne
mov
jmp
or
lret
dec
pop
ljmp
cwtl
jb
pop
sbb
data16
sub
stos
ret
jns
mov
ficompl
push
aas
rclb
dec
and
add
and
fidivrl
pop
sbb
add
or
lret
jle
xchg
das
adc
fidivrl
jbe
subb
push
fadds
xchg
daa
iret
xchg
mov
in
adc
sbb
cmpsl
mov
mov
flds
into
cld
adc
jns
sbb
jb
or
cmpsb
test
loopne
and
sub
jg
inc
cs
lods
scas
mov
call
mov
insb
ljmp
mov
into
ret
or
xchg
mov
sbb
jo
arpl
fidivl
mov
and
mov
xor
ljmp
ret
mov
sbb
inc
cmp
icebp
dec
cmp
mov
arpl
sbb
out
jbe
mov
push
pop
in
mov
mov
out
jb
inc
fcmovne
xchg
jecxz
sbb
lret
cli
mov
xchg
xor
dec
cld
jb
sub
push
jge
inc
sbb
stos
or
aas
sbb
cmc
inc
cwtl
incb
inc
lea
push
movsl
cli
mov
dec
jmp
leave
and
dec
pop
and
pop
and
sahf
push
push
xchg
and
addl
cmpsl
cwtl
mov
loopne
inc
mov
xor
adc
jg
mov
add
ret
aaa
outsl
js
lahf
out
jp
mov
imul
sbb
cmp
leave
shrb
rol
jae
jl
fadd
push
xabort
fdivs
aam
cli
adc
fldt
rcr
mov
data16
cld
imull
mov
cmp
pop
test
ret
pop
mov
mov
mov
pusha
rolb
test
and
xor
test
sbb
mov
mov
adc
fdivrs
mov
mov
add
sub
mov
inc
xadd
fisubs
xchg
xchg
ljmp
test
imul
mov
mov
pushf
add
lret
xor
lods
cwtl
sahf
into
out
xor
negl
insb
jo
dec
sbb
inc
cmpsl
mov
xchg
or
stos
push
movsb
mov
mov
cld
icebp
jns
ss
and
add
add
add
aad
and
mov
adc
dec
mov
xor
xchg
inc
jns
and
arpl
add
popf
adc
jl
fnsave
pop
xchg
ds
mov
mov
and
cmp
iret
out
jle
mov
adc
mov
jnp
lcall
pop
pop
rorb
sbb
arpl
push
mov
ret
lea
das
push
push
fidivrl
sbb
mov
mov
cwtl
pop
cmp
sbb
shr
dec
mov
pop
xchg
xchg
sahf
jb
aaa
jae
jmp
pop
push
dec
mov
repnz
sar
in
pop
hlt
xchg
jne
mov
in
mov
mov
pusha
push
adc
xor
in
sahf
repnz
fucomip
sub
mov
sub
int3
add
leave
pop
jge
sbb
fcompl
inc
sbb
xlat
xchg
dec
orl
xchg
adc
add
leave
mov
mov
push
sbb
sub
int
or
cmp
jg
cmp
jg
xor
jle
pusha
mov
sarl
leave
pop
cmp
in
test
add
jno
or
cld
xor
rolb
je
mov
addr16
mov
jne
test
iret
lret
or
insl
push
arpl
jge
xchg
or
stos
bound
dec
and
sahf
cmp
into
cmpsb
std
mov
aad
fldl
call
dec
and
outsl
pop
adc
or
lods
ds
cs
loopne
vsubps
negl
push
shl
jae
daa
lcall
lods
cmpsb
inc
push
xchg
cmp
clc
dec
nop
sahf
out
icebp
scas
lods
leave
repz
std
adc
mov
jmp
sbb
and
jo
lret
ret
inc
cltd
or
enter
stos
orl
adc
cltd
sbb
mov
add
scas
repz
repnz
jg
test
fimull
fiaddl
into
jmp
mov
js
lret
or
arpl
fs
sub
cwtl
sub
out
cmp
adc
ljmp
and
push
push
add
outsb
imul
mov
das
jmp
xor
stos
popa
pushf
sbb
pop
dec
xlat
ljmp
pop
or
push
push
cmp
daa
or
aas
decb
pop
and
daa
dec
push
jecxz
pop
sbb
js
negl
fistpll
jecxz
cmpb
mov
fsubs
or
cmc
js
push
push
push
insl
inc
add
bound
sbb
fdivrs
cmp
dec
xchg
repnz
jnp
cmp
testb
jg
xchg
xor
push
sarb
push
push
mov
rorl
or
mov
test
push
leave
fwait
jecxz
sbb
cs
outsb
push
rclb
mov
call
dec
dec
mov
popa
pop
xor
and
outsl
cmp
inc
call
fstl
and
cmp
add
shrb
mov
inc
icebp
shrb
loope
divl
neg
mov
dec
notb
pop
xchg
test
xchg
jge
fnsave
jnp
xchg
xor
cmp
mov
mov
cwtl
lea
imul
lret
xor
sbb
cmp
dec
sub
jp
xorb
pop
sbb
repnz
mov
sti
inc
insb
lods
aaa
sub
push
add
in
xor
sti
push
adc
dec
jp
inc
xchg
cmp
dec
jecxz
frstor
mov
cltd
jb
pop
addr16
out
pop
iret
inc
leave
add
mov
rcr
adc
sub
jnp
fs
inc
jnp
jle
push
ud0
adc
cmp
in
and
dec
popa
push
add
sub
std
addr16
sub
jo
push
in
xchg
sub
push
ss
in
lret
push
clc
cmp
inc
fs
lock
in
add
xchg
push
nop
and
mov
xchg
movb
subb
bound
rcll
imul
or
lods
cmp
inc
jg
inc
cld
aam
scas
or
sub
inc
or
fstps
xorb
int3
and
scas
lcall
or
je
xchg
ficomps
fld
inc
clc
outsl
movsl
sub
in
aad
cli
jnp
adc
sahf
mov
ljmp
sub
sub
mov
pop
jno
clc
mov
into
pop
insl
rorb
inc
test
imul
inc
add
xchg
icebp
xlat
sub
pop
popl
data16
xchg
cmp
pop
push
loope
gs
pop
lds
pop
mov
jg
rclb
inc
aam
jne
pushf
mov
xchg
fsubs
cmpsb
enter
lea
fildl
js
and
dec
lods
dec
sub
fs
push
mov
fcoms
repz
mov
ret
fstps
xlat
ja
or
push
pop
dec
enter
test
sub
cmp
adcl
sti
add
or
cmp
leave
and
cmp
in
sbbl
lret
movsl
adc
dec
push
dec
sub
test
sub
inc
aaa
xor
inc
sahf
mov
push
dec
cmp
andps
push
outsb
sbb
push
xchg
mov
outsl
or
in
fisttpll
pop
dec
inc
add
daa
out
and
loope
scas
mov
mov
jnp
movsb
fdivr
xchg
jmp
mov
fldl
clc
iret
aad
mov
leave
and
add
dec
add
mov
dec
add
xor
fdivs
dec
mov
dec
mov
xor
xor
adc
jae
xchg
ret
fnstenv
sub
addr16
repz
pop
shrl
add
jb
mov
int3
popf
dec
call
dec
pop
faddl
pop
sbb
std
pop
lods
pop
icebp
mov
dec
jns
rcr
icebp
pop
gs
orb
sub
sbbb
mov
nop
arpl
and
ljmp
movsb
or
mov
sub
in
icebp
ds
pusha
cmp
movsl
dec
mov
inc
add
pop
lea
gs
and
fsubl
pop
ds
test
cmc
imul
xchg
sbb
je
adc
inc
mov
xchg
je
rcll
nop
inc
jo
pop
or
scas
xchg
ds
pusha
inc
insb
lahf
jb
xchg
xchg
rolb
xchg
int
fimull
call
jnp
in
push
adc
xchg
cmpsb
cmp
int3
repnz
aad
and
sbb
or
leave
sub
add
sub
in
sub
push
xchg
mov
dec
movsl
js
and
or
loope
or
out
pushf
adc
roll
clc
mov
je
js
pop
rcl
or
cmc
lahf
mov
testb
push
and
xchg
ficoml
inc
dec
int
arpl
xlat
mov
sti
inc
inc
jae
data16
es
dec
sbb
lds
mov
outsb
stos
mov
xchg
shll
jae
sub
insl
sbb
hlt
add
pop
xchg
jle
xchg
popf
or
mov
sub
jg
dec
sbbl
es
mov
aaa
jnp
pop
popa
lret
add
bound
shll
adc
push
rorb
lea
fadds
aam
push
push
dec
sbb
cmp
cmc
sahf
mov
pop
xchg
int3
imul
mov
push
xchg
sub
sub
mov
push
mov
pop
mov
fcoml
mov
sub
xchg
aad
push
std
mov
fisubs
or
test
outsl
ret
data16
push
into
mov
pop
cmp
test
jnp
ret
mov
jg
mov
je
stc
mov
inc
enter
jns
and
dec
int
pop
lock
push
lea
dec
rclb
cld
sub
jl
inc
xchg
cmpsb
adc
int3
add
ror
and
adc
mov
mov
enter
mov
inc
loopne
sti
push
int
push
stc
lret
in
xor
test
adc
sbb
rcl
pop
lahf
inc
pop
mov
out
fucomi
dec
mov
fucomip
push
adc
mov
xor
not
pop
pop
dec
and
cmc
aaa
jo
imul
lock
repz
sbbl
jno
insb
xchg
mulb
sahf
loop
mov
inc
adc
cmp
and
outsb
mov
ret
sub
cmp
jp
cs
aad
jae
leave
sti
stc
hlt
add
sub
xorl
testb
sub
jb
or
and
dec
roll
adcl
shll
push
hlt
xchg
aas
mov
push
inc
jg
lods
sub
fbld
enter
gs
adc
flds
sbb
cmp
mov
jbe
lret
popa
cmc
add
ret
jl
push
add
sti
adc
jmp
test
xchg
icebp
ss
popa
fisubrl
and
js
lahf
cmpsl
sahf
inc
out
aad
jecxz
inc
repnz
in
arpl
xchg
es
jbe
mov
cmp
decl
adc
jmp
jae
dec
insl
xchg
mov
ds
xchg
dec
xchg
out
xor
jno
sbb
dec
push
push
lock
test
pop
movsl
adc
call
mov
xor
cmp
test
insl
mov
mov
ret
sbb
ret
jmp
sub
aaa
pop
lret
in
lcall
xor
shrb
repnz
outsl
fsubr
popf
xchg
imul
bound
sahf
test
xlat
aam
rep
pop
ret
push
nop
out
hlt
movsb
and
push
mov
dec
dec
and
nop
sub
pop
inc
sbb
mov
std
jl
stos
dec
push
inc
mov
aaa
sbb
addb
cli
aaa
dec
scas
cs
daa
cmc
sub
sub
movsl
cmp
insb
xor
imul
mov
mov
in
div
popf
lods
xor
data16
cli
cs
fwait
nop
mov
daa
mov
xor
add
jne
push
lea
out
push
out
jb,pn
adc
jmp
in
gs
pop
int3
js
aaa
and
inc
pushf
or
and
mov
out
leave
lcall
jecxz
jno
cltd
sbb
adc
fimull
xlat
add
mov
push
insl
add
dec
inc
pop
call
iret
add
mov
add
insl
clc
xor
push
test
sub
mov
es
ss
mov
lcall
xchg
pop
jb
fbld
fucomip
push
sti
push
je
aaa
pop
adcl
es
push
cmp
ret
xlat
jle
jne
xor
xchg
mov
psrlq
icebp
adc
icebp
fidivl
mov
and
enter
insl
sti
dec
mov
ret
dec
adc
imul
xor
insl
in
push
cmp
cld
mov
shrl
enter
xorl
jecxz
inc
mov
mov
fiaddl
je
push
sti
jg
mov
and
test
je
or
arpl
inc
add
shlb
add
adc
and
flds
aaa
xor
hlt
fmuls
in
inc
int3
push
leave
out
mov
test
int3
mov
jbe
and
pushf
mov
xchg
das
sub
out
mov
fwait
or
lock
cmp
inc
push
fadd
add
fisttps
fs
mov
sub
rcl
leave
lret
les
push
dec
movl
cmp
movsl
scas
push
js
inc
push
xchg
push
xchg
rolb
adc
ljmp
aaa
and
jo
loope
push
or
outsb
jo
dec
inc
cmpsb
popf
sarb
xchg
imul
dec
mov
jbe
pop
xchg
jns
mov
outsl
sti
xor
data16
cmp
or
aas
xchg
push
rorl
pop
adc
lahf
jl
adc
insb
adc
test
out
xor
or
cmpsl
fstpt
push
inc
mov
cmp
cli
je
je
xlat
pop
xacquire
scas
xor
scas
xor
sub
mov
add
lds
cmp
movsl
lea
test
adc
fcomps
xchg
cmp
and
push
sbb
jns
adc
mov
aaa
in
aad
outsb
fiadds
and
rorb
mov
and
mov
fcomps
inc
stos
mov
fsts
jns
xor
popa
fcmovnu
xchg
or
push
cltd
sub
popa
out
stos
sub
dec
cmc
test
rolb
bnd
jae
popa
outsl
mull
mov
pushl
xchg
push
repz
pop
nopl
shlb
mov
shlb
and
push
add
mov
mov
or
into
or
lcall
mov
add
xchg
push
loop
insb
cld
fcomi
sbb
or
lret
out
pusha
mov
sub
ds
cmp
out
adc
inc
add
mov
vpavgw
shlb
repnz
cmp
lods
jl
cmp
pushf
mov
jg
movsl
and
popa
xor
xlat
repz
call
push
sub
mov
xor
sbb
mov
mull
jmp
bound
jg
adc
add
shr
dec
pop
dec
cmp
push
cmpsb
ret
out
push
xchg
xchg
xor
fxtract
clc
cld
bound
je
pusha
loop
add
jp
leave
sbb
cmp
cmp
cmpsb
leave
xor
xchg
mov
testb
adc
dec
pop
movsl
adc
ds
movsl
jno
or
adc
push
jae
or
in
data16
enter
cltd
std
notb
mov
xlat
inc
pop
aas
and
call
out
nop
jle
aas
mov
push
lea
cmp
mov
dec
cmp
and
rolb
push
xor
test
adc
dec
xor
std
jb
lds
cs
push
mov
pop
popa
imul
mov
andl
outsb
int
leave
sbb
jp
test
js
dec
add
mov
cli
lret
adc
in
outsb
mov
and
pusha
push
add
push
lcall
mov
jb,pt
call
mov
out
idiv
cld
or
push
cmp
mov
imul
loopne
mov
arpl
in
inc
push
cmc
test
mov
jno
sub
inc
sbbb
popf
mov
mov
dec
ret
testb
jmp
es
lods
xchg
push
adc
ljmp
xor
ret
cmp
jmp
lret
dec
lods
inc
and
jmp
stos
imull
xor
icebp
fcoml
sbb
jne
sub
push
xor
pusha
xchg
mov
nop
jl
inc
and
aad
js
sbb
or
and
lcall
jg
or
mov
sub
dec
test
lock
pop
bound
lret
pop
sub
scas
inc
xor
out
daa
xchg
ret
dec
xor
clc
xorb
add
popf
adc
cmpsl
pop
stc
aam
pop
and
pushf
movsb
repz
add
movsb
add
pop
js
cmc
in
rorb
xchg
sub
mov
mov
mov
popa
dec
cmpsl
stos
into
dec
mov
dec
sbb
fidivrl
mov
push
jbe
mov
push
lea
jbe
lahf
mov
into
sbb
insl
or
repz
ds
dec
bound
ja
mov
mov
add
jns
cmc
sub
ret
mov
push
cmp
gs
xor
aas
icebp
jnp
pop
mov
cmp
dec
ror
mov
divb
adc
sub
stos
dec
daa
mov
fcompl
mov
mov
dec
xchg
leave
stc
sti
dec
jo
sahf
push
cmp
jecxz
sub
mov
jmp
push
data16
xor
int
pop
lock
scas
rclb
pop
or
mov
xor
dec
sahf
mov
jo
xchg
sbb
push
jno
push
add
cwtl
mov
enter
iret
jge
add
es
and
iret
sbb
mov
call
jb
mov
ja
pop
adc
movsb
fwait
aam
negb
stc
cmp
popf
aas
addr16
arpl
push
pop
pop
aaa
dec
and
cmp
jae
xor
add
outsl
aaa
xchg
sbb
les
lret
test
stos
cmp
lret
pop
mov
stos
inc
inc
loope
cwtl
xorb
xchg
jg
adc
jae
enter
mov
jp
jmp
push
sar
inc
andb
insb
outsl
in
sbb
xchg
pop
mov
hlt
jbe
addr16
int3
sar
cmpsl
sub
imul
inc
call
jne
mov
dec
call
cs
arpl
dec
pop
sbb
test
dec
sahf
adc
dec
mov
cmp
pushf
adc
mov
fsubp
and
xor
inc
sbb
cwtl
stc
or
mov
popa
mov
mov
out
lahf
stos
inc
jno
in
fnstenv
inc
pop
push
in
inc
aad
shufps
lods
nop
add
loopne
push
subb
or
test
scas
cli
mull
bound
loop
adc
and
push
sbb
push
cmp
imul
pop
cmpsl
mov
xor
clc
push
pushf
lods
sub
ss
and
dec
pop
mov
jne
push
mov
mov
stos
sahf
loop
inc
aaa
xor
insl
fidivs
sbb
imul
outsl
mov
pop
jo
iret
jno
cld
insl
push
fldcw
gs
jnp
lock
push
adc
inc
sbb
dec
cmpsl
xlat
ja
xorl
rolb
ret
sahf
and
adc
mov
jno
outsb
and
movsb
xor
stos
xor
xor
icebp
mov
repnz
inc
test
lods
sti
jbe
xlat
add
jmp
jg
test
mov
inc
cmpsl
rcll
pop
lods
cmc
sbb
sbb
sub
cmc
movsb
ret
arpl
loopne
movsl
shl
lock
notb
fdivl
das
imul
adc
pop
leave
fsubs
cld
loope
push
aas
fistps
ljmp
add
dec
fisubl
adc
cmp
adc
aas
ficoms
not
mov
into
mov
or
ret
sti
imulb
mov
lods
ds
pop
xchg
shll
aas
cmp
or
vprotd
dec
mov
cltd
mov
dec
add
adc
cmp
fadds
subl
add
dec
push
fcmovnb
loopne
iret
lcall
shll
loope
imul
jnp
pop
jg
enter
mov
fcompl
popa
sub
mov
adc
pop
bound
cmc
sbb
lret
xchg
jb
mov
push
xchg
jle
pop
out
add
inc
imul
jae
pop
cmp
ja
mov
mov
mov
push
jl
jnp
in
stos
mov
test
je
rcll
sbb
cmc
scas
sarl
stc
add
pop
sbb
idivl
fldl
mov
xor
xchg
adc
inc
aad
loope
popf
lods
sub
icebp
add
fldt
or
js
aam
lock
dec
mov
outsl
cld
les
ret
xchg
xor
pop
leave
pop
xorb
pop
mov
mov
lahf
xchg
es
ret
cs
push
xchg
xor
pop
pop
sub
add
test
sahf
fs
icebp
mov
fistps
cmc
pop
push
iret
stos
repnz
insl
jae
scas
std
sbb
sti
mov
out
xor
je
pop
or
stos
xchg
jnp
js
pop
push
jnp
mov
inc
mov
lahf
mov
ljmp
shrl
dec
cmp
mov
inc
js
fwait
mov
and
jl
add
or
jae
ljmp
lea
addr16
sbb
lahf
pop
mov
push
xchg
xlat
push
inc
lods
aaa
lret
inc
mov
aad
pushf
push
adc
xor
hlt
mov
mov
sbb
pop
xor
jp
stos
pop
jno
jp
sbb
mov
cmpl
pop
gs
mov
iret
movsl
mov
frstor
sbb
xchg
cmp
stc
test
addb
and
jns
mov
push
adc
mov
inc
jmp
icebp
rorl
stc
or
mov
mov
mov
ss
add
insb
adc
jmp
imul
jmp
jo
and
cli
cmp
inc
push
sarb
pop
inc
js
inc
insb
sub
jns
and
xchg
mov
icebp
aas
mov
sti
cs
jg
cmp
daa
jmp
xchg
adc
imul
xlat
out
xor
into
jp
push
push
les
adc
gs
xchg
fdivrl
xchg
sub
enter
mov
fidivrs
int
jle
dec
adc
sub
jecxz
imul
xchg
xchg
out
jecxz
pop
sub
loope
icebp
mov
mov
and
dec
sbb
mov
js
xor
add
add
imul
inc
in
jmp
fidivs
test
adc
push
addr16
mov
enter
test
pop
push
sub
negl
xchg
test
jmp
add
pop
xchg
nop
adc
scas
int3
shll
pop
ret
out
andl
and
dec
mov
fbstp
dec
movsl
pusha
outsb
adc
xchg
int
dec
das
pop
or
fcmovu
shrl
aas
js
mov
outsl
lea
add
clc
fwait
mov
mov
cmp
xchg
rcr
aad
fptan
inc
or
mov
mov
jne
dec
insl
jnp
mov
hlt
lahf
aaa
ffree
jle
sub
cmp
aad
dec
adc
or
pushf
pusha
sub
mov
stc
pop
cmp
fists
aas
ret
and
push
push
fcomip
jmp
leave
test
inc
inc
mov
dec
movsb
gs
loope
cmpsb
mov
pop
pop
mov
fldl
adc
jnp
fidivs
shlb
inc
sub
repz
adc
sbb
xchg
ss
test
negb
sub
adc
jae
pop
lret
push
inc
push
mov
out
cld
and
xchg
lret
pop
out
inc
es
in
mov
inc
jne
xor
or
jno
xchg
jo
push
test
jp
ss
cmp
pop
lods
or
push
rolb
in
adc
je
lahf
push
test
ret
xor
xor
orl
imul
js
sub
sbb
outsb
mov
enter
mulb
rorl
jno
cmp
adc
popa
adc
test
scas
hlt
mov
sub
ret
cmp
fcompl
insl
mov
jbe
mov
xadd
xor
incb
cld
shl
out
sub
aam
aam
insl
leave
hlt
or
cmpl
mov
mov
adc
loope
mov
cwtl
mov
data16
inc
rcrb
xor
xor
ds
cmp
mov
add
push
sub
push
lret
adc
or
and
es
inc
mov
daa
mov
jnp
lods
adc
in
add
nop
in
xchg
jecxz
cmp
mov
sbb
mov
jbe
orb
ret
cmp
subb
mov
xchg
or
xor
lcall
sub
mov
push
jg
roll
jb
cmpsl
lahf
mov
adc
ret
pop
xchg
hlt
xor
push
sub
rorb
sub
leave
xchg
push
call
hlt
add
popa
outsl
mov
lods
xchg
jge
ja
pop
in
push
repnz
je
xchg
pop
or
pop
jbe
mov
mov
push
out
cmp
lahf
dec
rcrl
xor
push
and
stc
je
leave
scas
outsl
inc
fbstp
repnz
jp
inc
push
dec
mov
sbb
fisubl
pusha
add
cmp
xchg
xchg
or
test
das
mov
in
dec
mov
jbe
outsb
fnsave
aad
pop
xor
ss
imulb
push
out
xchg
imul
test
jbe
mov
jb
push
or
mov
sahf
iret
adc
and
cmc
cmp
and
xchg
lcall
jp
push
shll
andl
data16
xchg
xor
fadds
ss
cmp
sub
sub
xor
xchg
pop
ret
mov
or
lret
gs
dec
addb
push
outsl
aad
add
mov
jbe
lds
inc
repz
popa
pop
int
bound
stos
jle
pop
pop
loope
mov
add
leave
mov
inc
enter
sub
in
jmp
nop
pop
mulps
js
les
mov
rol
sbb
test
out
cmp
int
movsl
and
fcmove
and
push
xor
shrb
mov
add
inc
and
lret
inc
dec
fdivs
mov
mov
mov
aas
test
xor
sti
sahf
xchg
daa
push
dec
cmp
jmp
or
mov
aad
lods
cli
fidivl
shll
filds
pop
jne
mov
jle
out
daa
mov
sti
and
mov
test
jbe
mov
pop
mov
mov
clc
mov
imul
std
xor
movsl
mov
inc
adc
xchg
pop
loopne
out
dec
and
loope
repnz
cmp
test
add
jmp
xchg
pop
aaa
inc
lcall
xor
cld
pop
dec
out
cmp
pushf
fs
jae
loope
mov
pop
ds
lock
sub
aam
insb
fisubl
ljmp
dec
pop
jmp
mov
nop
out
dec
sbb
aas
stos
mov
ja
cmpsb
cmp
or
loop
mov
cmpsl
cli
rcr
xor
mov
in
cmp
adc
cmp
or
mov
imul
mov
push
ds
fwait
movsb
cmpsl
pop
sbb
sahf
xchg
jnp
movsb
shll
hlt
test
add
jns
lahf
nop
sbb
inc
jnp
push
ret
sbb
push
pop
stc
sub
shr
sbb
sub
cmp
sub
idivb
push
mov
ret
mov
stc
es
das
inc
jle
xchg
push
mov
leave
std
push
loope
out
cmpsl
dec
mov
mov
mov
in
cmp
mov
mov
les
insl
mov
shl
jo
xor
xchg
sub
std
and
es
in
dec
stos
popa
pop
daa
jl
pop
inc
cli
leave
pop
cmpsb
iret
dec
rcll
jecxz
fwait
xchg
test
push
into
aas
lods
bound
cmp
clc
out
push
ret
sub
cmpsl
sbb
inc
cli
mov
xchg
inc
and
iret
repnz
dec
push
aad
movsb
sub
test
scas
adc
jns
dec
fwait
pop
dec
add
and
xchg
lcall
xchg
push
test
adc
outsb
lods
mov
push
sbb
mov
out
iret
test
jmp
sti
rcll
incb
icebp
jo
js
sbb
cmp
jl
sbb
lods
xchg
xchg
call
xor
andb
js
ljmp
lea
xchg
mov
out
ss
bound
mov
scas
sub
icebp
mov
push
andb
xchg
test
push
and
xchg
mov
popa
aas
clc
xorb
xor
adc
sub
cmpsb
xor
or
mov
into
out
mov
jb
xchg
add
scas
std
decb
mov
mov
xor
xchg
fimull
loope
lret
mov
imul
jo
pop
clc
mov
imul
fistpll
inc
xchg
pop
adc
mov
push
pop
and
stc
lcall
push
sub
movups
loopne
jg
and
inc
dec
add
xlat
ficomps
mov
dec
dec
pop
cmp
sub
ret
sti
stos
xor
daa
sub
sahf
out
shrl
jo
lahf
jecxz
inc
out
mov
fisubrl
nop
divl
iret
ja
imul
mov
loopne
sbbb
and
pop
pmullw
or
aad
push
dec
nop
fbstp
js
inc
in
fldl
jecxz
and
cmpxchg
pusha
xchg
in
and
ret
nop
sub
hlt
mov
fs
in
mov
cmp
mov
jecxz
fstps
sub
fwait
sbb
add
xchg
ret
loope
test
pop
das
test
imul
mov
loop
test
or
push
mov
cli
dec
ficoms
mov
loope
push
pop
fs
jns
push
inc
adc
xchg
push
outsl
pop
xor
xor
and
aaa
fucom
mov
repnz
xchg
and
sub
or
jno
mov
int3
test
cmp
les
mov
shrb
out
add
jb
inc
jl
mov
jecxz
inc
sarl
nop
inc
leave
inc
mov
ret
js
mov
es
mov
fnstcw
mov
fcomps
test
jae
pop
cmp
call
std
mov
popa
fcoms
push
lea
cmp
bound
ja
scas
aam
pop
pop
or
push
adc
sbb
push
std
pushf
pop
call
outsl
mov
inc
cmp
add
repz
add
xor
sub
cmp
push
jle
xor
cmp
adc
test
leave
push
ret
push
cmp
cmp
test
xchg
push
cmc
pop
mov
cmp
mov
or
inc
lcall
pop
push
mov
inc
lcall
dec
clc
lods
xchg
jmp
xor
in
xlat
xlat
or
into
jbe
int
jge
out
xor
sbbb
fs
cmp
dec
fdivp
outsl
mov
or
cld
arpl
rcl
ds
cmp
jbe
push
cmc
sbb
and
sbb
mov
pop
outsl
mov
add
aaa
xchg
jns
into
lds
sub
cmpsl
mov
adc
repnz
cmpsl
lds
sbb
sub
jne
sub
sub
or
mov
cld
repnz
hlt
ret
mov
jb
cltd
bound
sub
fbld
mov
push
inc
out
rolb
mov
pop
cmp
dec
test
or
jbe
es
imul
mov
stos
test
inc
push
leave
gs
std
xchg
inc
adc
fisubrl
lea
jl
enter
popa
push
mov
cmpsb
lock
dec
sbb
dec
jbe
gs
enter
insb
add
pop
movsl
adc
mov
ret
lds
pop
lret
xchg
bound
mov
out
je
inc
push
pop
add
add
dec
adc
sahf
mov
mov
iret
cmpsb
enter
cltd
adc
xor
fadds
insl
jl
xor
mov
jecxz
push
and
xor
fwait
adc
or
jno
mov
or
xchg
popf
imul
inc
sub
inc
or
inc
mov
and
pop
push
pop
loope
hlt
outsl
sub
leave
mov
xor
inc
jnp
sahf
out
fidivrl
jle
aam
pop
loop
aad
les
add
fwait
sbb
and
or
mov
mov
sbb
fsubrp
cmp
mov
inc
or
mov
xor
pop
rolb
sub
cmpsb
aad
outsl
mov
pusha
push
jp
mov
cmp
push
outsb
repz
or
bound
mov
sbb
test
fldt
xchg
bound
enter
push
int
and
fisubrl
inc
test
imull
nop
inc
ret
divb
in
mov
or
clc
int3
lret
add
mov
lock
insb
rcrb
adc
jns
scas
add
lahf
aad
adc
add
mov
rolb
adc
push
jp
pop
mov
xor
jo
mov
mov
orl
pop
and
int
movb
jns
and
out
or
mov
in
mov
test
push
xchg
mov
xchg
in
dec
ret
lock
stc
pop
movsl
mov
xor
mov
inc
push
int3
repnz
adc
mulb
inc
xor
subl
xchg
shlb
push
das
jmp
pusha
lods
and
jbe
adc
and
jae
mov
push
repnz
xor
jge
jle
fs
int3
push
inc
pop
dec
add
and
pop
pop
xor
pop
inc
pop
test
mov
add
push
jg
jne
lcall
inc
add
xor
mov
mov
decl
enter
cmp
cmp
sub
fmulp
or
jge
add
orl
mov
xor
cli
call
aam
jecxz
inc
ret
or
or
or
ficomps
lods
add
ret
int3
jno
outsl
je
inc
loopne
int
jo
sbb
pop
pop
fwait
jle
arpl
out
fcomp
pop
adc
fisttpll
fnstcw
lods
inc
ret
scas
mov
icebp
mov
jle
lahf
lret
outsl
and
mov
nopl
sub
mov
aaa
lcall
sbb
jle
lds
je
mov
jle
aad
pop
add
test
jmp
add
loop
push
sub
or
test
pop
inc
jo
sbb
call
sbb
mov
or
lods
xchg
xor
pause
cwtl
pop
lods
jg
xchg
mov
aas
orl
pop
jb
test
stos
hlt
sub
xchg
mov
subb
and
mov
mov
mov
mov
pop
mov
call
sti
in
lock
mov
int
test
loop
mov
out
add
ss
mov
push
or
add
lods
popa
aas
out
insl
xor
pop
out
pop
je
mov
ret
std
or
es
out
in
xchg
jae
sar
fildl
add
pop
fdivr
dec
loop
push
mov
jecxz
leave
push
scas
push
dec
mov
cmp
sbb
xchg
sub
pop
or
xchg
shlb
jnp
arpl
add
lahf
ds
in
ljmp
push
jb
add
sbb
in
and
fiaddl
fmuls
add
loop
sbb
repnz
das
and
jg
call
subl
adc
pop
and
cmp
inc
or
mov
dec
mov
xchg
mov
lahf
out
mov
sub
fs
pusha
mov
dec
in
loopne
jno
fildll
inc
push
ja
cmc
into
mov
adc
scas
or
mov
das
mov
mov
arpl
sbb
xchg
cmpl
pushf
inc
int
push
fldcw
cmc
pop
fcompl
push
mov
and
dec
pop
jo
or
fnsave
into
jns
mov
cmpsl
pop
mov
mov
out
stos
sub
pop
jge
out
and
and
pop
dec
dec
push
repnz
mov
js
aas
mul
push
mov
sahf
subl
xchg
shl
xchg
push
leave
push
nop
andb
push
lcall
jne
arpl
shr
leave
imul
adc
aas
and
sbb
mov
mov
addr16
rolb
ljmp
add
popa
pop
or
aaa
test
dec
sbb
mov
shrb
pop
mov
push
jle
lds
shrb
xchg
sub
sub
push
sub
mov
and
push
js
and
mov
in
ret
rorl
mov
sbb
aam
inc
jmp
mov
xor
scas
clc
xchg
fdivrl
inc
je
xor
dec
mov
xchg
leave
sub
inc
dec
cli
mov
and
push
psubusw
sub
and
inc
ret
mov
cmp
int
cmp
jno
fcom
cmc
dec
xor
and
lods
imull
cltd
pop
scas
dec
frstor
jne
xchg
mov
jno
mov
pop
fcompl
mov
dec
dec
push
mov
dec
xchg
es
nop
mov
or
mov
inc
lods
pushf
jns
outsl
push
push
fcoml
pop
and
pop
xor
dec
adc
stos
mov
mov
fbld
pop
pop
cmpsb
push
mov
cmp
cmpsb
sbb
cmp
xor
mov
gs
push
dec
cli
or
add
fiaddl
fs
dec
ja
xlat
mov
das
add
and
cmp
sub
or
fwait
movsb
dec
mov
fmul
mov
cwtl
lods
pop
push
push
cwtl
sub
movhps
aaa
add
lahf
cs
shll
add
or
fldcw
int3
arpl
mov
jmp
xchg
and
push
and
pop
lea
mov
rol
mov
cmp
dec
sub
pop
clc
in
aad
sub
xor
dec
loop
add
sub
sbb
jnp
and
in
sub
fs
and
testl
fsubs
call
mov
push
shll
xchg
lods
inc
test
mov
xchg
jne
add
into
xor
out
mov
pop
pop
pop
inc
add
loopne
mov
inc
push
xchg
mov
push
test
loop
nop
jne
pop
or
lods
xor
lret
push
mov
loopnew
push
pop
mov
xchg
or
jp
mov
jo
xor
lock
adc
jbe
mov
sub
mov
inc
sub
outsb
inc
adcl
adc
xchg
testb
lds
xor
and
mov
mov
lds
pusha
fdivrl
sahf
xchg
mov
andb
add
js
sarb
add
in
or
insl
std
mov
cmp
jae
mov
sub
cmp
dec
fimull
mov
push
push
push
lds
js
test
jne
in
insl
cmp
and
push
mov
or
mov
pop
pop
jae
mov
jns
int
dec
mov
cli
xor
inc
test
mov
data16
ja
xchg
arpl
jb
in
nop
cmpsl
push
inc
sti
dec
xchg
sbb
aam
aad
insb
fsqrt
adc
or
ja
adc
stos
fildl
xchg
jns
pusha
xor
xorl
es
push
imul
fisttpl
mov
shlb
xorl
cmp
shll
sti
popf
push
xchg
push
dec
lret
pop
pop
push
jno
fldt
outsb
push
add
push
stos
stos
daa
dec
push
xor
push
flds
jmp
mov
xchg
cmc
pop
stos
inc
in
mov
fcoms
adc
ds
orl
neg
jne
lcall
pop
ds
ret
cmp
fbld
pop
pop
dec
add
notl
shl
adc
aam
pushf
cmp
test
orb
ss
push
test
xchg
mov
dec
cltd
out
add
xchg
in
rcr
add
movsl
stc
mov
repz
xor
push
loopne
dec
int
lret
xlat
enter
out
xchg
popf
call
stos
stos
or
clc
jg
imul
mov
xor
jns
out
aaa
ja
inc
gs
fsubrl
flds
lcall
dec
cwtl
push
cmp
sbb
scas
xchg
sti
mov
adcl
insb
out
jnp
pusha
ret
lahf
push
test
cmp
push
or
mov
fcmovnbe
cmpsl
pop
add
jae
xchg
cwtl
sti
mov
mulb
repnz
cmp
test
push
scas
pop
clc
ror
addr16
jo
in
mov
cs
popf
adc
ret
mov
add
adc
and
mov
fidivrl
daa
push
rcr
stos
and
repz
push
add
and
out
pop
add
xchg
imul
mov
jnp
mov
cmpsl
lock
jb
push
push
pop
xchg
ljmp
xor
popf
fistps
pop
push
testl
fstl
clc
dec
data16
testb
adc
insl
int
inc
and
sar
mov
cs
inc
sub
push
pop
lret
ja
sub
sub
lea
xchg
cmpsl
add
sub
or
xorb
call
jp
nop
adc
and
lods
pop
negb
mov
push
inc
mov
sub
stos
call
out
push
int
ret
shrl
loop
sti
testb
fdivrp
je
in
mov
inc
out
shlb
dec
xor
dec
xor
sbbb
rolb
gs
jge
mov
data16
std
push
and
mov
nop
cmc
add
pop
add
cmp
outsb
cs
or
push
mov
and
daa
cmpsl
jl
int
xor
adc
outsl
insb
push
mov
pop
sbb
andl
lret
out
xor
popa
xor
out
push
mov
lds
stc
xchg
dec
cmpsb
in
ja
ja
mov
data16
sub
fistl
cli
negl
imul
push
ret
mov
and
fcmovnu
mov
adc
pop
mov
ss
cmp
add
lcall
lcall
jne
push
pusha
xchg
push
dec
and
insb
test
dec
mov
fdivrl
loope
loopne
aad
mov
stc
neg
adc
sub
cmp
fcoml
outsb
lea
and
andl
fidivl
or
pushf
or
pop
popf
stos
mov
xor
mov
mov
aaa
xor
test
out
aam
dec
insb
push
dec
pop
stc
fldl2t
mov
fistpll
lock
cwtl
mov
sbb
add
mov
push
test
movb
mov
dec
stos
fs
xor
imul
sub
fstpl
ret
clc
sub
jnp
mov
jae
std
movsl
xchg
add
dec
sbb
jl
or
out
adc
imul
pop
in
daa
mov
fwait
jnp
aaa
or
cmp
mov
dec
cmpsl
in
lret
rol
mov
test
dec
stc
out
and
dec
test
xchg
jbe
repnz
and
push
pop
jmp
jbe
out
shl
lds
loop
movsb
and
cmpsl
call
lods
cmc
mov
mov
cmp
mov
dec
add
sub
outsb
cwtl
aas
nop
push
sub
jmp
daa
mov
and
push
cmp
cmc
pop
call
inc
cmp
push
ret
pop
push
or
inc
stc
or
xchg
fmuls
jge
pop
add
incb
aad
mov
mov
cli
mov
inc
adcb
adc
inc
cmc
push
stos
sub
jle
inc
and
in
enter
rcrl
sub
outsl
mov
mov
fstpt
pusha
cmpsb
jecxz
dec
dec
and
gs
mov
out
push
addr16
sub
negb
and
cwtl
adc
jne
lods
test
xchg
js
and
xor
or
cmp
jns
or
push
fstpl
cmp
xor
stos
insl
jnp
jns
xchg
cld
orb
inc
addr16
and
pop
sbb
or
inc
rclb
pop
sbb
mov
push
cmp
sub
jl
aaa
mov
pop
sbb
movsb
mov
dec
daa
rcrb
ret
in
sbb
mov
cmp
outsl
inc
int
dec
arpl
ja
and
leave
clc
jnp
push
mov
adc
addb
jmp
lea
push
or
or
fiaddl
ss
ljmp
dec
call
bound
xchg
pusha
scas
mov
dec
mov
push
mov
fdivrl
fldcw
fmuls
imul
repz
fnstenv
insb
mov
push
cmp
popf
inc
imul
adc
cwtl
mov
lahf
cmp
hlt
movsl
xor
insb
mov
jns
jns
xor
repz
je
xchg
push
and
lea
dec
lahf
pop
gs
std
and
cmp
and
pop
xor
loopne
pop
test
stc
gs
dec
popf
hlt
out
inc
push
insl
xor
aaa
jp
out
sub
icebp
pop
test
adc
movsl
ja
jmp
pop
cmp
inc
lret
jnp
push
xchg
pop
mov
aam
mov
mov
cmp
pop
add
fnstenv
test
add
andl
ja
test
or
dec
cwtl
scas
mov
xchg
and
divb
fisttpl
push
shll
imul
and
adc
push
xchg
lcall
or
jmp
popa
mov
or
jbe
aas
or
repnz
movsb
jns
mov
mov
addr16
jmpw
inc
xchg
push
mov
test
xlat
xor
mov
outsl
test
ljmp
jecxz
sbb
test
xchg
xor
rcl
insb
ret
sbb
adc
or
inc
das
pop
xchg
cmc
jns
int3
sbb
xchg
ja
pop
dec
cmp
xor
cmp
jne
sub
mov
xchg
mov
std
jbe
xlat
js
imul
mov
pop
xlat
mov
pop
mov
jg
scas
jp
xor
push
jp
cmovge
push
iret
icebp
sbbb
out
adc
jne
subl
mov
xchg
cmpsb
enter
or
loope
repnz
sub
pusha
or
push
dec
sub
lods
push
ret
enter
inc
imul
outsl
addr16
idivl
push
lahf
dec
das
rcrb
xor
mov
pop
fiadds
sub
pop
inc
cmpb
adc
add
psrlq
outsb
insl
sti
sbb
cld
and
or
mov
lods
pop
xchg
movsb
and
ljmp
mov
pushf
xor
xchg
out
jecxz
mov
mulb
mov
lahf
cltd
ja
cmp
xor
inc
inc
aad
inc
dec
jno
and
in
push
lcall
ficompl
mov
ja
xchg
jle
mov
mov
rclb
wbinvd
inc
jmp
faddl
hlt
or
repnz
mov
mov
sbb
adc
lret
mov
jne
into
aas
push
xchg
push
add
mov
arpl
js
imul
inc
lahf
out
ss
popf
icebp
cmc
call
cmp
pop
jp
cmp
xchg
shr
jnp
loopne
xor
mov
pop
pop
push
cmp
cmpl
mov
insb
ss
or
adc
mov
pop
cmp
rolb
push
rorl
and
shrb
cmpsl
sbb
pop
push
sub
andl
mov
mov
popf
sbb
xchg
mov
hlt
xchg
pop
pop
pop
jbe
mov
xchg
inc
dec
out
cs
pop
inc
out
test
mov
jbe
sbb
in
mov
sub
incb
sahf
jb
xchg
add
pop
xchg
jecxz
xor
cmp
roll
sub
xor
lock
jecxz
or
das
or
mov
pusha
sbb
mov
cmp
js
lods
push
jmp
mov
lahf
push
mov
pop
push
sbb
jne
mov
pop
xor
shrb
adc
ret
adc
mov
push
fucomp
rcrb
push
add
sub
push
and
sbbl
or
push
pop
loop
dec
mov
pushf
xor
pop
insl
add
jg
xchg
sub
fisttpll
addb
sbb
gs
pop
dec
cli
adc
sbb
sub
mov
add
lds
push
xchg
or
add
pop
sbb
jge
lods
mov
popa
rcrb
sbb
push
addb
lcall
cmp
shrl
mov
insl
jne
xchg
jmp
bound
loop
ret
cld
lret
sbb
mov
popa
jge
or
rcl
gs
push
sub
lahf
hlt
outsb
cld
lret
dec
addr16
mov
stos
pop
stc
js
clc
push
jnp
mov
addr16
cld
aam
push
fucom
push
dec
jbe
mov
xchg
sub
icebp
xchg
push
add
leave
mov
aas
jb
jae
imul
xor
hlt
push
rcll
mov
sbb
inc
popa
ds
jae
add
mov
fbstp
int
loop,pt
inc
mov
mov
les
lods
fmul
pop
cmp
insb
xchg
std
stos
repnz
lods
fadds
inc
mov
add
loopne
bnd
lock
shlb
push
push
mov
xchg
rcll
or
jne
aad
dec
sbb
in
popa
xchg
stc
popa
rep
cmp
outsb
cmc
jo
lods
mov
mov
cmp
imul
mov
rorl
cmp
jl
mov
pop
cs
fstl
fcoml
jg
push
inc
loop
popa
sbbb
jmpw
push
sub
pop
sub
xor
iret
mov
adc
clc
outsl
pop
leave
outsb
out
mov
stos
cmpsl
and
adc
add
ret
add
aad
cmp
pop
out
cmp
or
inc
inc
arpl
int
jg
sub
aad
mov
jno
pop
sub
push
inc
cs
in
out
dec
hlt
ss
pop
adc
pop
scas
jo
and
pop
ror
sub
xor
mov
outsl
mov
mov
test
or
inc
xchg
adc
mov
adc
sbb
xor
cld
dec
rol
jnp
or
cmp
jae
fwait
or
rcl
and
mov
mov
dec
fcoms
aas
mov
outsl
lahf
mov
cmc
mov
icebp
mov
xchg
jle
xchg
pushl
jnp
jbe
pop
inc
pop
jmp
call
outsl
fisubrs
das
sub
sub
or
inc
out
aam
mov
aam
xlat
xor
pop
fmul
jg
and
into
cmpsb
cmp
shll
cmp
cmpsb
jae
int3
jle
pop
pop
mov
idivl
loope
xchg
or
sub
cmpsl
scas
jmp
inc
adc
cmp
fstl
ss
cmp
jns
mov
jbe
psrlq
dec
popf
mov
push
inc
pop
mov
xchg
dec
js
test
push
xchg
xchg
test
stos
push
aaa
into
pop
mov
daa
clc
pop
pop
push
fxch
pop
cs
in
push
mov
sbb
mov
mov
insb
movsl
inc
push
sarl
xor
lock
mov
sub
xor
leave
push
outsb
jo
mov
add
repz
clc
insb
and
or
dec
jnp
inc
stos
xchg
sub
jo
jg
jmp
arpl
data16
lods
cmpsb
test
lods
insl
jecxz
xor
xor
lret
or
mov
or
pop
or
sbb
inc
sbbb
xor
mov
or
add
xchg
xchg
mov
das
enter
fcoms
outsl
or
push
arpl
call
jmp
cltd
test
cmpsl
in
js
sbb
fs
test
ljmp
push
xchg
jns
outsb
mov
dec
adcl
mov
mov
aam
inc
sahf
add
int
push
mov
stos
push
sub
cltd
add
jne
imul
sub
sub
rcll
rcll
rolb
hlt
imul
sub
mov
inc
cmpsl
adc
xchg
push
jp
or
jmp
inc
hlt
bound
rol
push
dec
inc
imul
xor
or
xor
mov
movsl
pop
or
sbb
shr
and
rolb
adc
add
std
out
popf
mov
cltd
mov
sarb
add
xchg
ror
fwait
fwait
nop
int3
pusha
lret
dec
sub
loop
test
adc
notb
mov
add
cmp
mov
mov
andb
xchg
pusha
mov
pop
xor
out
nop
fptan
mov
mov
pusha
inc
icebp
aaa
mov
mov
lcall
out
sbb
test
scas
das
and
sub
lret
mov
inc
xchg
mov
mov
imul
mov
push
aam
lcall
cmp
imulb
sbb
cmpsb
mov
and
dec
pusha
xchg
sar
add
xchg
pusha
add
or
cltd
and
push
pop
js
lock
dec
xor
or
daa
imul
cs
jne
adc
imulb
and
push
sbb
call
inc
testb
xchg
xor
cltd
push
aad
int
in
add
lret
lcall
sub
out
call
push
pop
dec
pop
xchg
jnp
pop
add
sbb
sar
add
push
cmp
test
jne
xor
in
mov
movsb
into
jecxz
adc
shrb
ror
pushf
push
outsb
pop
movsl
cmp
lea
pop
pop
pop
mov
sub
mov
call
mov
and
mov
xlat
pop
pusha
es
mov
jge
mov
imul
aas
cmp
bsr
xor
stos
mov
mov
pop
je
rcrb
pop
pop
adc
out
imul
fs
stc
out
pop
sbb
sub
in
inc
shlb
sahf
lret
cmp
arpl
jg
xchg
sub
repz
repz
cltd
dec
lods
pop
pop
mov
loope
adc
inc
lret
fisubrl
orl
sbb
test
push
fisttpll
jns
inc
inc
pop
daa
je
faddl
lods
mov
fcomip
push
mov
loope
mov
fisubl
loopne
jno
pop
test
addr16
pop
mov
xor
repz
xchg
test
or
pop
movsb
sub
or
adc
dec
dec
mov
xchg
dec
or
push
push
adc
mov
mov
out
outsl
shr
push
shll
int3
add
mov
mov
adc
cmc
div
dec
xchg
test
lret
shll
push
mov
repnz
call
bound
push
xchg
sbb
adc
out
lret
jae
das
hlt
pop
xchg
aaa
push
ret
outsl
movsl
cltd
pop
cmc
cwtl
and
inc
dec
bound
xchg
incb
xor
sarb
adc
inc
pushf
mov
xor
arpl
aam
leave
jmp
icebp
xor
or
stc
mov
mov
mov
push
xor
rorl
rorb
sub
inc
imul
cmp
jmp
out
sub
aas
mov
into
dec
loope
repz
xchg
lcall
enter
cs
mov
je
mov
int
imul
lahf
xchg
jne
ljmp
stos
repnz
movsl
fwait
icebp
push
mov
adc
pushl
in
sub
or
mov
icebp
push
das
inc
pop
popa
xchg
xchg
sbb
xchg
enter
dec
or
cwtl
mov
loop
sbb
cmp
xchg
and
cli
cs
mov
sub
push
push
lods
pop
outsb
jge
adc
nop
adc
add
mov
and
mov
sbb
out
xor
rcr
pop
xchg
cld
push
mov
out
or
pop
stos
push
repz
add
xchg
leave
dec
sbb
push
pusha
add
sbbb
fistpll
imul
dec
lahf
lret
lods
fnclex
mov
into
sub
or
adc
in
pop
add
lea
cwtl
pop
mov
fldt
jno
dec
pop
mov
lret
mov
test
inc
repz
cmpsl
and
jmp
sti
pop
push
mov
cmp
xchg
xor
mov
mov
adc
js
xor
in
lods
push
bound
sub
mov
ret
pop
mov
lods
sti
add
insl
imul
mov
push
inc
pop
loopne
sbb
mov
jmp
push
jmp
or
ret
jo
test
ret
nop
mov
lods
imul
inc
push
pop
sahf
sbb
jae
in
pop
notb
insb
ret
cmp
pop
adcl
mov
and
call
es
dec
inc
mov
fcom
xchg
ret
stc
enter
jbe
sub
adc
sub
xor
int3
xor
pop
sub
lock
sub
dec
out
mov
cmp
fsts
pop
mov
lret
mov
pop
das
pop
cmpsl
cmc
daa
js
mov
enter
xor
dec
dec
adc
repz
adc
pop
jmp
sub
inc
test
jl
fwait
mov
mov
mov
lret
and
popf
stos
jl
mov
and
rol
mov
pop
int3
clc
lcall
fistpl
data16
dec
xchg
fsubrl
mov
mov
add
or
jg
leave
fsubrs
test
or
mov
pop
cmp
adc
bts
stc
cmp
jp
pop
cmc
fists
push
cmp
enter
sbb
sbb
repz
ficoms
aaa
ss
sub
mov
push
in
scas
mov
and
popf
das
and
jno
xor
cmp
adc
into
inc
pop
movsl
xchg
loopne
or
bnd
nop
mov
insb
dec
imul
cmc
sbb
push
xchg
xor
pop
fistpl
push
xchg
sbb
fld
fwait
adc
mov
mov
mov
mov
cmp
xor
pop
cld
and
mov
fmull
jmp
ljmp
cmp
pushf
shrl
push
and
mov
add
xchg
add
out
or
mov
jbe
sbb
sbb
and
xor
push
cmp
xchg
lahf
mov
inc
lea
jp
sub
into
or
add
mov
mov
add
aas
rol
adc
stc
add
push
mov
push
imul
adc
leave
xchg
dec
sahf
popf
lea
int
shlb
inc
or
add
ja
addr16
adc
add
pop
cmpsl
pop
cs
mov
clc
cmp
loope
dec
cltd
bound
push
jno
cmc
sbb
out
int3
cmp
inc
aaa
fisubl
bound
cmc
jnp
mov
cwtl
or
movsb
cmp
sbb
push
push
jmp
adc
jno
sub
push
xor
or
stos
xchg
xchg
sbb
mov
int
sarl
xlat
or
xor
xor
add
in
mov
sub
mov
loopne
lods
test
subl
flds
sub
dec
inc
adcb
and
je
std
or
lds
movsb
dec
mov
cmpsb
ja
sarl
mov
push
xchg
test
imul
fcmovnb
in
dec
gs
enter
clc
or
and
jae
adcb
popf
add
pop
push
daa
outsl
stos
or
dec
inc
movsb
mov
mov
add
loopne
inc
mov
jo
jns
sti
xorb
lahf
push
cmc
scas
shrl
add
mov
scas
out
nop
mov
jmp
scas
cmc
mov
xchg
stos
mov
xor
and
outsb
inc
cwtl
inc
stc
mov
orb
and
jbe
fdivrl
pop
adc
mov
push
sbb
enter
xchg
dec
divb
mov
popl
jno
dec
add
lea
adc
aad
mov
mov
push
adc
sbb
xchg
mov
aas
jg
inc
xlat
stc
fisubrl
insb
sub
jo
movl
mov
jns
push
mov
icebp
cli
pop
mov
jo
daa
jge
push
cmp
mov
xor
incl
jle
pop
mov
mov
and
call
inc
mov
scas
lea
jns
ds
fidivrs
ljmp
push
cmp
mov
test
add
scas
mov
std
inc
enter
shrb
or
mov
pushf
aas
dec
push
fdivrl
mov
lods
setle
sbb
xor
mov
lea
push
mov
xchg
inc
cmp
in
inc
add
and
xchg
fmulp
test
rcll
insb
lds
mov
int3
test
cltd
push
mov
lock
cmp
push
test
sahf
lea
lods
and
pop
push
stos
jno
sbb
mov
jmp
leave
cs
pop
xchg
roll
adc
jo
lock
pop
or
push
mulb
std
dec
movsb
xor
xchg
loopne
repz
jo
xchg
mov
or
or
fistps
in
mov
jnp
dec
pop
adc
fimuls
pop
adc
scas
shll
fwait
neg
outsb
inc
testb
inc
adc
fisubrs
into
jns
lret
mov
jge
loope
xchg
adc
sbb
sub
xchg
lcall
push
les
sub
jno
ret
jmp
ljmp
iret
hlt
cld
cmpsb
xor
cmp
lcall
or
sub
sub
or
pop
cmc
test
inc
jnp
or
mov
imul
xchg
xchg
xor
push
mov
inc
into
das
mov
push
and
jno
cmp
add
push
int
pop
mov
std
into
outsb
inc
movsl
popf
fsub
jno
subb
loope
mov
mov
mov
imul
mov
push
push
fcoms
mov
in
sub
pop
mov
daa
cmpsl
mov
mov
or
mov
mov
mov
pop
out
or
jno
push
in
popf
pop
xchg
pusha
or
aad
xchg
jbe
add
sub
sub
test
xor
cwtl
fisttps
les
cli
shrd
xor
test
stc
sahf
aaa
scas
mov
and
pop
shlb
or
mov
stos
xchg
xor
nop
out
pop
dec
test
sti
sub
adc
mov
dec
lock
gs
jmp
jl
incb
shll
push
ja
mov
push
lods
inc
dec
mov
jbe
fsub
cmp
jp
loop
adc
adc
scas
icebp
cld
popf
xchg
adc
dec
enter
add
lret
icebp
pop
mov
sub
sbb
dec
loope
add
pop
ds
dec
jle
mov
mov
push
xor
arpl
sbb
faddl
add
xor
lea
stos
sbb
push
xchg
rclb
