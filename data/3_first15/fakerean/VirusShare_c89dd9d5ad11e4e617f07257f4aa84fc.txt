sbb
add
mov
xchg
fdivrl
lods
in
aas
inc
lret
fdivrl
and
sbb
test
and
mov
pop
int3
jmp
xor
gs
loopne
out
insl
popa
or
cwtl
outsb
jae
jo
popa
scas
fidivrl
mov
ja
inc
jbe
daa
sbb
mov
pop
mov
mov
cmpsb
loope
aaa
cmp
fildl
xlat
dec
hlt
or
pop
push
addl
mov
adc
push
xor
iret
enter
ret
mov
cmp
test
pop
jl
jb
cld
add
mov
adc
push
mov
fcmovbe
push
loope
pop
andl
jp
sub
push
shll
mov
sub
jae
lods
in
stc
xor
sub
and
lods
aam
outsl
addr16
shlb
xchg
into
mov
out
mov
dec
imul
fstl
mov
push
ds
bound
arpl
jge
add
lret
in
cmp
into
xchg
pop
insl
test
or
mov
adc
pop
jnp
pop
out
shlb
lcall
dec
pop
or
je
add
dec
mov
idivb
mov
sub
dec
push
inc
mov
icebp
in
mov
cmp
add
into
or
mov
xor
bound
mov
fmuls
aad
fstl
nop
fstpl
lods
stc
mov
hlt
stos
push
adc
insl
cmp
cmpb
add
fldenv
push
lea
daa
popf
mov
dec
sbb
push
sub
mov
and
jmp
push
loope
nop
out
xchg
jle
shl
ret
mov
jbe
xchg
iret
addr16
negb
push
popa
in
adc
in
mov
mov
and
sbb
dec
add
adc
mov
insb
dec
push
add
clc
dec
xchg
dec
pop
mov
enter
hlt
xchg
inc
in
cmpsb
hlt
pop
sub
sub
cmp
dec
stc
jno
cvtps2pi
pop
cmpsb
inc
xchg
cwtl
daa
gs
mov
test
stos
in
mov
out
sbb
sub
mov
inc
loop
dec
jmp
gs
mov
cmc
std
mov
mov
stos
daa
inc
lds
cli
pusha
mov
sub
push
cmp
cmp
cmp
mov
push
mov
jne
mov
outsl
inc
mov
adc
pop
daa
insb
adc
mov
mov
rcll
lea
inc
push
stc
ficompl
ror
add
lret
sub
sub
cmp
add
inc
mov
jle
jnp
fwait
in
or
and
inc
and
cltd
loope
inc
cmp
or
into
xchg
sbb
int3
test
jns
jno
jae
or
daa
xor
dec
fs
hlt
mov
mov
xchg
or
js
lret
add
fsubr
std
mov
jl
fimuls
inc
icebp
clc
or
push
xor
data16
push
mov
lds
adc
popf
andb
in
out
xor
fidivl
mov
mov
xor
fdivl
movsl
xchg
xchg
xchg
cmp
out
in
fscale
lret
sbb
xchg
cmpsb
push
adc
and
imul
dec
sbb
xchg
adc
addr16
mov
lahf
dec
push
std
mov
inc
pop
in
mov
into
fistpll
pop
jle
sub
or
imul
les
insl
xchg
jp
fcoml
sub
push
mov
mov
addr16
jmp
xlat
gs
jns
xchg
scas
arpl
sarl
mov
or
push
insb
sub
pop
add
mov
pop
mov
and
loop
dec
mov
sbbb
or
lea
pop
adc
mov
popl
add
movsl
dec
fs
xchg
lock
lret
es
gs
lods
jns
push
dec
add
xchg
push
xor
jo
fwait
imul
push
push
xor
lea
jl
mov
leave
aaa
mov
mov
das
repz
inc
jle
lret
ret
aaa
inc
xchg
fdivrl
xorb
js
add
push
pop
aad
pop
xchg
rol
or
lret
push
cmpsl
stos
aaa
ret
icebp
cmp
mov
sub
sub
mov
scas
lret
out
int
pop
bound
mov
pop
jmp
adc
pop
stos
test
dec
popa
xor
divl
push
cmc
sub
lock
popa
pushf
mov
jge
sbb
mov
cmp
icebp
mov
xchg
mov
xor
dec
fnsave
and
add
jl
xchg
cmp
adc
bound
pop
cmp
scas
inc
inc
test
enter
pop
mov
fs
xor
adc
data16
fdiv
lods
lock
jp
jae
out
into
rol
push
testb
nop
sbb
xor
lret
addr16
mov
adc
dec
inc
mov
jns
xor
mov
fmul
aaa
or
adc
leave
outsb
movsl
or
jb
insl
pop
icebp
sbb
out
sbb
mov
mov
cltd
sub
jae
jg
xor
mov
decb
push
adc
divps
cmp
fnstsw
cwtl
pop
arpl
or
cmp
and
xchg
aas
cmp
jae
push
lcall
dec
add
xor
sarb
xchg
jecxz
jo
in
lcall
test
lods
or
mov
adc
push
out
nop
lods
and
cld
lret
pushl
fdivrl
dec
imul
pushf
adc
orl
ret
scas
into
pop
ja
jb
xor
fwait
loope
in
fidivl
and
add
sbb
mov
aas
shll
sbb
mov
sbb
push
icebp
lods
loopw
mov
push
dec
test
pusha
fs
cld
mov
aad
xor
mov
fsubs
xchg
mov
mov
cmp
gs
movsl
shl
mov
movsb
movsl
or
pop
enter
jl
lods
cmp
jmp
ljmp
dec
sbb
sbb
pop
movsb
mov
inc
adc
bound
mov
add
xor
movsl
fidivrl
mov
xor
pop
je
fbld
or
lds
fimuls
mov
and
outsb
push
cmp
add
ljmp
dec
lea
scas
outsl
jp
xchg
sub
push
jnp
movsb
push
lahf
and
inc
jo
js
lahf
inc
or
xchg
lods
pop
scas
fsub
inc
dec
bound
or
fcompl
test
pusha
or
int3
push
loope
jl
cmp
mov
loope
and
mov
push
arpl
in
or
jae
xor
aaa
jb
in
nop
aad
and
pop
sbb
xor
inc
pop
jbe
cmp
dec
add
inc
pop
stos
add
pop
cmp
xor
daa
lods
sbb
adc
bound
stos
cmp
mov
insb
cld
cmpsl
rol
ret
sub
lcall
push
jb
clc
jb
adc
cmp
xor
mov
mov
inc
aad
cmp
pushf
imulb
jle
mov
shll
loopne
lods
jmp
inc
cmp
stc
scas
sahf
cwtl
xchg
les
cmovnp
shlb
cmc
sub
add
xor
rolb
sahf
es
aam
push
rcll
inc
mov
sbb
fidivl
ret
inc
xor
xchg
pop
ja
and
push
xchg
add
cmp
sar
dec
mov
pushf
bound
xchg
push
dec
sub
jae
scas
jle
fmul
cmp
lods
mov
ja
repnz
xlat
push
dec
jp
repz
push
ljmp
mov
fwait
ret
pop
push
mov
pop
ljmp
mov
or
mov
fs
sub
pop
cwtl
popl
mov
xchg
into
mov
cmpl
in
sbb
aad
movsb
mov
mov
cmc
jle
xor
lret
push
sti
pop
sbbl
leave
cmp
xchg
loope
and
xchg
sub
sbb
in
dec
stos
aam
jo
cmp
cmp
das
gs
sti
clc
repz
cmc
bound
mov
ret
xor
addr16
and
xchg
movsl
jecxz
or
or
ss
or
pop
addr16
lea
pop
push
in
nop
and
jle
arpl
jo
adc
jns
dec
push
lahf
xchg
dec
mov
sub
scas
lock
enter
enter
xchg
cmp
sub
sub
rclb
fcomi
adc
dec
icebp
stos
cmp
loopne
pushl
outsb
push
ret
and
pop
repnz
mov
push
mov
sbb
ja
leave
xchg
xchg
ficomps
lods
xor
dec
fldl
repnz
negl
cs
mov
inc
mov
xchg
dec
jp
icebp
ficoms
adc
jo
xchg
cwtl
xor
das
xchg
mov
stos
xchg
mov
xor
subb
push
das
mov
lcall
in
sarl
push
decl
fsubs
push
mov
fadds
imul
lcall
ljmp
and
lret
aad
loop
and
cmpsb
aad
testl
inc
mov
sub
cmp
pop
test
jmp
sbb
dec
adc
aaa
pop
mov
sub
cmp
int
or
fidivs
addl
mov
cmp
das
jbe
repnz
in
fsubs
ds
mov
mov
jnp
mov
jle
mov
push
and
imul
dec
je
out
push
cs
shl
mov
insl
arpl
lods
cwtl
in
mov
dec
or
movsb
xchg
mov
outsb
jne
scas
aas
mov
inc
inc
dec
pusha
shl
inc
or
shrb
sub
sub
aaa
cmp
movq
push
lock
xchg
cld
in
adc
mov
push
mov
push
sbb
dec
mov
scas
js
pop
test
mov
pop
and
mov
mov
adc
cmc
cwtl
pusha
mov
out
sub
loope
or
leave
jp
sbb
nop
movsl
push
mov
lret
gs
fnstenv
push
cli
mov
jo
add
or
dec
sbb
sahf
add
shlb
dec
gs
xorl
mov
mov
sub
ds
lahf
mov
dec
in
popa
in
mov
ret
cmc
xor
es
out
test
out
movsb
xchg
dec
fimuls
fs
sahf
aad
in
dec
mov
lcall
popf
jo
das
dec
pop
or
jg
ds
pop
mov
fcmovnu
push
xor
adc
rorl
in
mov
xchg
pop
jmp
or
mov
popa
mov
pop
rorl
scas
cld
fwait
sub
ljmp
lsl
inc
fldl
jne
rorb
imul
jns
rolb
js
sub
sbb
lock
pop
popf
dec
push
sub
xchg
xchg
movsb
and
adc
adc
iret
imulb
cmc
mov
jb
push
stos
lods
xor
aas
xor
push
cwtl
movsb
cmpsb
shr
jb
fbld
dec
or
pop
jge
bound
imul
enter
sbb
mov
adc
jbe
repnz
cld
movswl
mov
les
inc
push
pop
movsl
mov
addr16
pusha
movsl
imul
and
leave
xchg
addb
lcall
mov
int
xor
push
cmc
mov
adc
pushf
cld
scas
adc
cmp
push
out
into
ss
or
aad
inc
dec
out
outsb
mov
out
lahf
cli
push
cmp
xchg
imul
pop
push
je
dec
xor
sbb
or
scas
mov
aas
add
ret
mov
sahf
sbb
mov
mov
insl
pop
aad
adc
arpl
xor
jmp
mov
lods
inc
jmp
pop
mov
sub
in
jnp
or
dec
xchg
in
repnz
mov
pusha
aaa
mov
xchg
pop
mov
push
xlat
add
js
add
rorb
mov
mov
imul
adc
and
daa
testb
sub
mov
adc
fcompl
insb
mov
movsb
add
cmp
xor
ljmp
nop
mov
fidivl
in
xchg
add
testl
into
scas
jmp
add
sbb
insb
popf
cmpsb
push
xor
inc
out
test
jge
adc
jl
inc
mov
cmp
sbbl
jmp
push
sbb
fcomps
fcoms
inc
inc
mov
shl
adc
mov
mov
lret
rcll
out
mov
fwait
test
dec
out
je
or
xor
fisubrs
add
cmpsl
dec
clc
sub
inc
mov
or
cmpsb
dec
outsl
out
vmwrite
stc
jecxz
ss
arpl
mov
movsl
hlt
mov
orl
adc
push
imul
push
cmp
pop
fcomps
rcrl
pop
hlt
cmpsl
cs
vpaddw
push
lods
sbb
pop
cmp
icebp
push
out
xchg
push
xlat
push
movsb
jmp
mov
stos
sub
in
std
and
fdivrs
xor
leave
fldenv
or
aaa
js
ds
dec
add
pop
in
rcrl
push
push
leave
int
repz
sub
jne
xchg
mov
push
lea
adc
jne
jae
ret
loop
fwait
sbb
popa
test
mov
and
mov
sti
push
xchg
rcrl
cmp
cmp
addb
daa
out
sti
push
jb
push
xor
mov
nop
pusha
cmp
mov
aad
pop
fs
js
cltd
shll
inc
xor
and
jnp
test
movsb
je
imul
mov
movsb
xor
andl
sbb
movb
fwait
ja
jo
sahf
aas
xor
loope
xchg
xchg
mov
in
lea
sbbl
cmpsl
loope
and
lret
jmp
or
cmpsb
add
scas
adc
gs
fs
lret
or
incl
jge
mov
xorl
cmpsl
call
add
mov
cli
neg
dec
xchg
add
sti
adc
dec
inc
add
negb
addr16
dec
and
mov
ljmp
rorb
cwtl
sub
mov
roll
pop
hlt
and
mov
mov
inc
jno
xor
fcmovnbe
cmp
or
filds
lea
lods
fisubrl
loope
sbb
pop
insb
push
js
out
fcompl
or
icebp
mov
adc
popf
jg
dec
dec
ljmp
aam
cmp
int3
rclb
mov
xchg
cmc
test
adc
push
mov
sbb
ljmp
mov
shll
pushf
test
mov
shr
jo
daa
faddl
dec
xchg
pop
sub
mov
jge
mov
pop
cltd
jg
and
dec
iret
jns
sbb
cmp
jnp
outsb
call
stc
dec
lret
or
mov
push
jno
sub
xchg
ds
sbb
mov
int
imul
xor
xchg
ret
icebp
stos
cld
pop
sub
dec
xor
testb
inc
pop
arpl
jo
xor
add
bound
xchg
xor
mov
arpl
bound
push
lds
das
cmc
pop
dec
cmp
jp
cltd
cmp
les
lock
aam
mov
xor
xchg
das
jl
imul
cmp
daa
mov
rorb
pop
mov
les
leave
stc
mov
xchg
sarl
jb
jl
mov
or
inc
stos
xchg
repz
mov
push
fnsave
popf
sub
repnz
aad
push
mov
jl
jmp
pop
jp
mov
ja
and
lock
mov
ja
nop
mov
ja
fwait
or
gs
cmp
imul
decl
pushf
or
cmpsl
xor
ret
pop
sbb
testl
les
xchg
add
push
mov
mov
movsl
or
icebp
or
mov
sbb
iret
xor
daa
out
pop
jle
xor
dec
call
mov
inc
loopw
repz
cwtl
pop
pop
dec
notb
pop
lret
imul
loop
lret
hlt
xchg
std
imul
mov
dec
cwtl
enter
mov
sub
xchg
fldl
sbb
mov
pusha
mov
cmp
xor
mov
sub
aam
lret
mov
imul
jp
sar
sub
push
pusha
jmp
adc
push
inc
cmp
cld
push
jae
cli
pop
lock
inc
jle
les
mov
inc
sub
or
inc
mov
jle
mov
dec
adcb
leave
gs
cltd
stos
xor
push
cltd
mov
add
das
push
jge
out
sbb
xchg
cmp
fisttpll
mov
or
int3
xor
jmp
pop
sub
lcall
aam
sarl
in
imul
jb
frstor
push
mov
jo
lret
aaa
lea
inc
pop
inc
imul
test
jg
sub
mov
adc
or
mov
push
rclb
imulb
mov
pop
jns
arpl
in
lahf
flds
adc
cld
insl
sti
xor
pop
outsb
in
cs
mov
int
dec
idivl
enter
add
lret
cltd
in
and
inc
das
clc
push
push
mov
jmp
add
mov
push
jmp
inc
jne
mov
adc
int3
aad
push
fmul
idivl
fisttpl
mov
in
popa
mov
in
arpl
cmp
fs
aaa
cmc
xlat
int3
daa
lret
in
sbb
add
test
mov
ja
or
out
push
cmpb
xchg
lds
or
xor
bswap
les
ja
add
fidivrl
push
pop
push
sbb
sbb
add
les
pop
mov
lods
ret
xchg
add
scas
sahf
push
push
mov
notl
xchg
mov
cmp
movsl
iret
call
or
mov
loop
add
pop
gs
jge
pop
add
push
xchg
xor
sarl
push
sub
mov
je
sbb
cmp
mov
pop
dec
mov
movsb
sub
repz
ds
stos
aad
add
jle
or
sbb
xchg
dec
cli
arpl
cmp
notb
push
daa
mov
xor
mov
cmpsb
int
bound
jmp
jg
lcall
mov
stc
jle
inc
nop
ret
jno
orb
jne
mul
and
jmp
out
xchg
test
lock
notb
pusha
or
adcl
scas
inc
pop
pop
divb
pop
dec
popa
push
lcall
sub
jo
scas
push
sbb
sbb
mov
in
int
cmp
loope
movsb
pop
stos
insb
push
mov
loopne
sbb
mov
xchg
fnstcw
pusha
or
jbe
out
pop
mov
jmp
idivb
add
lea
icebp
xor
int3
iret
les
pop
cmp
and
xchg
dec
sahf
enter
fucomp
xchg
out
and
xchg
stos
insl
sbb
nop
xchg
sbb
and
stc
jno
or
insb
repnz
ret
pop
pushw
sbb
shl
xor
sub
sbb
aas
ss
xor
cmpsb
xlat
sub
sti
out
fdivl
jae
shrl
shrb
or
leave
lods
enter
inc
gs
and
mov
mov
je
mov
sbb
bound
lock
mov
aad
insl
scas
les
xlat
aad
mov
push
test
inc
sbb
jns
inc
pushl
xor
lods
pop
adc
xchg
iret
add
push
and
or
data16
lea
jo
add
mov
and
dec
xchg
dec
cmp
bound
mov
pushf
jo
in
xor
test
out
add
adc
add
fcompl
cmp
stc
or
jle
push
sub
popa
pop
repnz
dec
mov
inc
std
dec
mov
pop
adc
xor
inc
xor
add
cli
pop
out
lcall
cmp
es
test
mov
fdivl
std
cmp
fisttps
les
es
or
call
out
outsb
xor
xlat
jmp
movsb
push
imul
outsb
push
push
or
dec
inc
dec
pop
mov
mov
fcmovne
pop
inc
jb
cmpsb
loop
dec
jns
in
push
cmpsb
ja
xchg
mov
adc
in
loope
fdivrl
outsb
cmpsl
out
popl
xchg
inc
add
inc
je
push
outsl
test
popa
pop
outsb
push
fisttpll
mov
or
xchg
in
adc
pusha
xchg
leave
scas
insb
xor
lret
push
mov
push
jne
mov
aas
push
jmp
bound
xchg
jl
pusha
pushf
push
sbb
popa
pop
jp
xchg
inc
enter
in
cltd
into
adc
add
push
sub
sti
fmull
adc
inc
cmp
or
add
mov
daa
mov
aam
xor
aam
clc
add
addl
xchg
mov
adc
popf
loope
or
mov
and
lea
cltd
cmp
or
cmp
adc
pop
loopew
sahf
mov
das
arpl
pop
int
xchg
mov
sbb
inc
jge,pt
inc
jl
xchg
or
xchg
dec
out
mov
jno
mov
inc
push
out
jl
test
adc
mov
addb
cmp
and
sub
out
popf
test
push
dec
cvtpi2ps
outsb
jb
addr16
push
jle
xchg
ss
lahf
push
mov
fadds
mov
lods
xor
lcall
call
mov
cmp
leave
testl
sbb
cmp
mov
aas
imul
cmp
add
sub
push
mov
xchg
adc
push
xor
push
lahf
xchg
loop
push
fs
cmp
inc
add
sbb
xor
mov
iret
add
adc
add
stos
ret
inc
gs
repz
pop
stos
test
sar
cmp
adc
pop
mov
scas
data16
jg
int
ficomps
mov
add
adc
movaps
sbb
add
inc
pop
cmp
shl
xchg
lods
add
cmp
in
sarb
cmp
cld
fcmovnbe
jno
test
cli
rcll
dec
and
xchg
addl
mov
sbb
outsb
dec
movsl
inc
pushf
jp
pop
or
shlb
mov
pop
sub
mov
in
inc
add
mov
fs
push
in
rolb
sub
andb
inc
mov
mov
mov
xlat
dec
adc
js
test
sbb
inc
jbe
push
pop
pop
jge
push
ds
and
pushf
mov
mov
jmp
push
cmpsl
push
pop
divb
mov
mov
sub
mov
sarl
leave
mov
mov
mov
ljmp
sub
pop
mov
je
lahf
dec
test
or
sub
fidivrl
mov
stc
mov
jecxz
lret
and
lret
mov
or
ret
repnz
mov
add
jl
loope
fsts
and
nop
push
mov
test
xchg
sti
jno
mov
scas
cmp
mov
jmp
lret
adc
jmp
clc
dec
nop
sub
and
sbb
jbe
aam
out
movsb
scas
xchg
dec
aad
ljmp
pushf
fdivs
test
lds
dec
mov
cmp
movsl
add
xchg
cmp
aaa
cmp
xor
je
mov
insb
inc
inc
pop
outsb
dec
add
pop
xchg
add
mov
or
mov
iret
mov
insl
rolb
mov
aam
jp
testl
addr16
add
adc
inc
mov
imul
imul
cmpsb
xlat
push
mov
lds
fisubrs
adc
push
or
cmpsl
cmp
jp
pop
pop
cltd
cmp
repz
pushf
and
inc
or
jo
jns
cli
or
adc
xchg
aaa
xor
or
xchg
mov
cs
data16
test
add
and
xor
xor
ljmp
add
push
das
aas
lods
and
lahf
hlt
mov
dec
cmp
out
add
arpl
mov
and
loope
cld
fimull
add
sub
cmpsl
adc
jne
jp
data16
dec
into
mov
repnz
call
int3
lods
fcmovnbe
scas
xchg
roll
adc
iret
sbb
pushf
jg
add
aad
lds
jnp
enter
std
pop
mov
inc
into
sahf
neg
add
fisttpl
jns
ret
pop
sbb
adc
add
shrl
dec
sbb
pop
pop
mov
stos
add
data16
aam
mov
push
mov
adc
ja
in
xchg
aad
test
into
push
or
xor
mov
pop
inc
mov
jae
jno
jecxz
lds
jbe
mov
fdivp
sub
push
fiadds
jnp
jb
cs
jl
aaa
mov
inc
jg
scas
lods
jnp
sbb
mov
test
imul
mov
ret
arpl
filds
pop
dec
push
shll
inc
aam
xchg
pushf
mov
notb
pop
scas
pop
aad
cwtl
cs
inc
jns
jb
jns
push
fsubrp
mov
jb
data16
int
in
es
frstor
push
or
int3
cmp
sbb
cld
sahf
fmul
imul
add
outsl
push
lods
mov
mov
jne
pop
xor
sbb
test
mov
call
jmp
fstp
divb
aaa
fstpl
add
mov
adc
es
ds
and
and
jl
adc
ds
stc
fidivl
mov
pop
movsb
movsl
ljmp
jmp
adc
jecxz
inc
inc
add
insb
push
fadds
xchg
dec
sub
dec
push
bound
or
mov
inc
mov
das
aad
xorb
mov
jnp
stc
xor
in
insb
xchg
in
insb
in
xor
int3
in
scas
mov
adc
add
shll
xchg
mov
add
pop
shll
and
and
notl
mov
cltd
sahf
inc
xor
mov
adc
mov
inc
xchg
leave
fimull
dec
das
stos
ljmp
pop
sbb
ffreep
lcall
dec
mov
mov
sub
bound
pop
lcall
and
and
jle
arpl
dec
mov
mov
in
into
ds
ret
aad
adcl
xor
inc
xor
lods
ret
movsb
push
lcall
and
pop
fadds
out
sbb
jp
andl
popa
in
xor
sbb
jp
das
movl
repz
mov
mov
xchg
adc
imul
icebp
test
cmpsb
sbb
les
push
ss
xor
ret
sbb
xorb
shlb
dec
sahf
enter
jae
rorb
add
pop
pop
jp
loop
stos
test
es
daa
out
mov
daa
mov
adc
mov
js
test
mov
out
inc
add
cmpb
sar
xchg
out
push
fprem
jp
jge
les
push
push
adc
scas
cltd
inc
ret
dec
push
mov
into
adc
ljmp
je
xchg
imul
sbb
pop
jge
lods
scas
clc
xchg
xchg
outsb
push
or
ret
pop
inc
xchg
mov
icebp
fcompl
or
aaa
roll
cmp
adc
outsb
jno
inc
mov
jbe
push
mov
sar
pop
mov
xor
call
inc
mov
lret
lahf
dec
sbb
loop
lock
pushl
das
dec
lahf
dec
ds
pop
inc
iret
adc
inc
mov
adc
out
testb
add
cmpsl
jbe
jmp
cwtl
mov
cmp
fadds
or
in
sahf
out
sbbl
cmp
jne
loopne
mov
cwtl
ds
shrl
push
mov
fcomps
lea
inc
shld
mov
out
aas
cmp
xchg
test
mov
inc
xor
xchg
jmp
sub
gs
imul
or
adc
mov
insb
push
leave
mov
enter
stc
imul
insb
in
mov
and
les
push
cmp
stos
dec
cmpsl
jmp
mov
sahf
bound
test
imul
mov
jne
scas
idivb
subl
aam
or
and
push
xchg
sub
mov
inc
sub
inc
cmp
les
push
fbstp
adcl
sub
cs
sbb
mov
sub
repnz
mov
ja
jge
cmpsb
and
imul
mov
and
hlt
aas
xor
rcl
and
push
outsb
js
pop
imul
lea
fs
mov
enter
jbe
out
mov
fwait
and
sbb
call
int
or
in
insl
jno
jns
adc
mov
pop
adc
cmp
add
dec
fiadds
xor
dec
push
sbb
adc
hlt
or
fbstp
popa
adc
call
stc
lcall
mov
cwtl
lods
outsl
xor
cmp
cwtl
enter
sbb
aaa
inc
jp
scas
imul
lods
cmp
mov
out
orl
sub
and
xchg
inc
icebp
dec
dec
lock
outsl
jbe
aad
shl
xchg
out
movsl
mov
pop
mov
jnp
movsb
push
mov
push
sub
or
jae
fdivr
sub
pop
add
outsl
cmp
divl
inc
mov
cmp
adc
ret
shlb
mov
movsb
xor
push
jb
mov
mov
ds
push
mov
cmp
out
loopne
push
mov
pushf
sbb
or
rclb
push
aas
and
inc
dec
push
cs
xchg
push
sbb
mov
addr16
adc
jno
cmpl
xchg
and
sbb
mov
leave
dec
cld
mov
fwait
sarb
push
mov
pop
fs
aas
dec
push
and
jmp
push
popf
gs
add
sub
or
cmp
ja
cltd
es
jmp
ret
nop
pop
lods
inc
lds
add
mov
sub
sarl
xchg
int
cmc
leave
test
insl
int3
xchg
sbb
adc
sarl
ss
sti
int
pusha
js
sbb
inc
movsl
xchg
inc
add
loope
mov
cmpsb
push
pop
icebp
or
lret
sbb
aaa
daa
stos
scas
dec
int
and
inc
stc
or
pop
repnz
cmp
jmp
pop
mov
jnp
and
ret
enter
cmc
fwait
int
scas
adc
jle
test
test
in
dec
and
into
daa
jmp
jbe
inc
push
adc
inc
ret
in
add
bound
cltd
dec
lds
mov
repnz
adc
or
dec
jg
xorb
icebp
neg
movsb
add
out
xchg
mov
stc
aas
cmp
xorl
mov
imul
pop
loopne,pt
pop
sub
mov
xor
ret
mov
add
xchg
jb
out
ljmp
sahf
repz
fisttps
inc
aad
and
jle
jne
pop
adc
lods
inc
inc
push
mov
sub
or
fwait
sahf
cmp
xchg
jae
pop
fistpll
sub
shrl
outsb
xor
xor
lret
mov
mov
pop
pop
mov
mov
fisubl
ret
cmc
inc
das
sbb
mov
add
jmp
xchg
xorb
movsb
aam
dec
out
dec
lahf
cmp
rolb
jo
sbb
aad
inc
jb
arpl
lods
pop
adc
dec
call
aaa
dec
and
xchg
push
sub
scas
push
out
push
ss
adc
jnp
loope
pop
jmp
pop
hlt
out
rcrl
cmp
ds
add
ja
hlt
fsubr
les
sarl
sbb
and
stos
push
fistl
dec
repnz
lahf
jp
or
add
inc
cmpsb
jo
jmp
pop
nop
pushf
das
add
and
push
cltd
arpl
rolb
std
mov
sub
out
inc
push
pop
jb
sub
and
jge
sub
lods
jno
cli
repnz
test
jb
or
jae
adc
loop
mulb
add
inc
push
mov
cmc
out
cmpsl
insb
sbb
xchg
xchg
es
loope
into
xor
push
mov
pusha
mov
stc
jns
push
jae
cmp
data16
rolb
lahf
icebp
add
pop
mov
jl
psubsw
sub
push
test
jle
xorl
inc
cmp
aas
or
scas
icebp
movsl
xchg
xor
cmp
enter
dec
imul
imul
cli
negl
stos
push
fimuls
push
cmp
loop
ljmp
push
dec
cmpl
hlt
fisttpl
dec
nop
out
mov
fstps
scas
imul
in
bound
or
lea
adc
mov
dec
pop
and
sbb
mov
jg
sbb
push
cmp
and
ss
pop
adc
repnz
faddl
adc
mov
lret
orb
or
ficoms
test
add
fisubrl
mov
sub
imul
and
aad
jns
adc
cmp
movsl
jne
mov
inc
aas
out
inc
fwait
or
es
mov
push
mov
hlt
sbb
shll
dec
outsl
push
inc
cmovno
in
sbb
loop
jno
es
or
ret
inc
faddl
adc
mov
repnz
orl
fdivr
int
pop
mov
pop
in
adc
leave
xor
push
add
cmp
inc
push
or
jns
cmp
jae
mov
inc
mov
test
jmp
cmpsl
dec
lahf
dec
mov
jno
loope
cmp
jecxz
sbb
pop
push
icebp
sub
and
pop
mov
pop
ret
shr
int3
sub
jo
popf
xchg
loopne
lret
mov
adc
lods
test
fisubl
aad
stos
xor
mov
sahf
lods
enter
mov
je
jbe
push
or
repz
les
fsubrs
and
jl
nop
and
cmp
add
popa
and
iret
out
repnz
lea
mov
inc
push
or
fdivrs
pusha
sysexit
xor
loop
pop
push
mov
stos
lret
sar
mov
inc
push
icebp
or
inc
fs
imulb
scas
mov
mov
adcl
pop
pop
test
lods
push
test
xchg
pop
sbb
cltd
addb
xchg
ret
pop
mov
into
test
fbstp
fsubr
lods
and
mov
mov
es
mov
iret
sahf
out
or
sti
stos
sbb
repnz
adc
data16
lret
push
out
stc
mov
cmpsb
push
mov
sub
inc
xchg
push
pop
jae
and
leave
fidivl
fs
leave
fcomp
cmpsb
mov
and
add
jmp
cmpsl
cmp
push
xor
push
mov
lds
shlb
inc
pop
lret
cmp
xchg
movsb
out
dec
mov
pop
xchg
push
es
stos
mov
xchg
ds
jle
mov
push
dec
scas
jnp
mov
test
and
sbb
ja
gs
les
adc
jo
inc
dec
add
inc
fs
mov
sub
into
daa
mov
ja
outsl
sub
outsl
xchg
fwait
xor
int3
mov
xor
push
pop
and
mov
std
call
push
jp
adc
fcoms
mov
fmull
dec
xchg
xchg
xor
fs
jno
icebp
test
rcrb
push
out
ss
adc
addr16
ds
xchg
mov
std
loope
ret
mov
mov
insb
mov
inc
in
roll
stos
lods
xchg
iret
sbb
and
mov
cmp
aas
sub
and
je
pop
fisttpl
cmp
shl
loop
cwtl
dec
lret
mov
rcll
imul
xor
inc
add
fdivp
mov
scas
int
ret
xor
int3
fsubl
xchg
sub
mov
sbb
ret
sbb
xchg
add
inc
fcomi
into
pushf
mov
pop
out
sbb
jnp
sti
sbb
mov
lods
ficoml
leave
ds
cmp
add
pop
adc
cmp
adc
jmp
scas
jmp
je
push
jbe
push
add
adc
mov
and
inc
dec
xchg
mov
fnstenv
inc
or
int
std
sbbb
stos
pop
mov
dec
sbb
fcomip
xchg
cmc
aad
mull
cmpsb
jb
pop
mov
rcrl
push
sbb
lods
xor
gs
push
mov
imul
sbb
lods
test
jle
jne
sbb
lods
fs
dec
insb
andl
xorb
sub
lods
mov
mov
mov
pop
test
xchg
insb
je
cmp
int3
or
adc
jae
sub
xchg
iret
jg
rorb
popfw
out
adc
mov
push
sbb
clc
sarb
pop
sbb
fisubl
jge
mov
push
xchg
lahf
int3
push
mov
mov
mov
sti
in
mov
inc
mov
fdivl
push
adc
jno
ret
cmpsb
cmp
sub
or
in
leave
xorl
repnz
push
sahf
int3
inc
push
daa
adc
lret
call
inc
adc
ret
shlb
cli
scas
jbe
xor
mov
add
hlt
nop
ds
dec
cli
sti
in
sub
das
je
cwtl
cmpsl
pop
lock
js
ficoml
xor
cmp
mov
iret
sbb
sarb
mov
mov
std
jae
dec
cmpsb
in
or
out
adc
lret
aam
nop
mov
dec
fstpt
out
mov
loope
hlt
add
notl
inc
add
leave
cmpb
sbb
jp
jecxz
mov
sti
mov
jl
aas
mov
popa
push
subl
loopne
adc
mov
dec
push
iret
shrb
pop
inc
lods
fidivl
enter
jo
adc
mov
push
test
jle
sub
inc
clc
cmp
jne
idiv
in
sub
add
adc
add
mov
or
mov
mov
nop
xor
push
sub
and
pop
bound
mov
push
fsubr
ss
decb
cwtl
cmp
pop
loope
xchg
mov
repz
movsb
push
sahf
inc
push
mov
mov
xor
flds
bnd
nop
pop
mov
fldl2e
mov
push
and
cmovno
jbe
lds
inc
rclb
sarl
pop
xchg
sub
lds
pop
xor
add
inc
lret
int
aad
mov
cmpsb
xchg
mov
push
add
imul
add
adc
fwait
jo
sahf
sbb
jp
repz
shlb
push
aas
mov
push
imulb
or
nop
push
add
xchg
and
dec
pop
fs
xchg
dec
gs
lahf
pop
cvtdq2ps
test
enter
hlt
clc
xor
mov
adc
pop
and
sub
push
imul
inc
xchg
in
mov
addr16
jl
jmp
loope
push
iret
xor
xor
sub
adc
xchg
push
mov
aad
fisubrs
mov
out
xchg
adc
outsl
or
jbe
cmp
inc
push
in
sub
test
jp
jmp
or
mov
adc
mov
xor
das
popa
push
sbb
or
jae
cli
mov
jle
rclb
and
push
test
insb
push
stos
dec
mov
and
int3
inc
pop
fs
xchg
sub
jne
cmpl
out
jns
mov
cmp
fs
jne
pusha
cmp
pop
cmp
or
mov
test
aaa
call
mov
sub
mov
mov
adc
lret
add
out
xor
jnp
scas
and
cmp
in
mov
adc
xchg
inc
ss
add
pop
popf
push
sub
mov
aaa
fidivrs
cmp
pop
repnz
cli
pop
adc
ljmp
cmpsb
sub
stos
ret
jge
cmp
dec
push
mov
ljmp
mov
mov
loope
push
in
or
mov
subl
pop
sbb
sbb
mov
dec
mov
out
mov
mov
and
mov
lahf
add
pop
fsubr
push
push
psrlw
and
jmp
int3
into
sub
jge
xor
cwtl
fucomp
stc
cmp
andl
push
repz
inc
shrl
imul
aad
in
mov
mov
xchg
mov
dec
and
fidivrl
clc
ret
pop
add
and
or
icebp
addr16
cli
inc
mov
lods
dec
scas
out
adc
or
in
add
ficoms
mov
jl
imulb
imul
icebp
dec
add
mov
int3
or
lods
fnstsw
push
leave
das
out
js
add
ss
cmp
adc
sti
pop
les
ror
xchg
sub
sbb
mov
int3
loope
icebp
rcll
pop
and
or
inc
or
jns
pop
mov
pop
pushf
and
push
popa
les
add
mov
adc
mov
addr16
jno
stos
mov
xor
fxch
outsl
cmp
lds
inc
mov
ja
int3
movsb
push
mov
xor
clc
arpl
and
out
cld
daa
js
aam
dec
xorb
xlat
jg
popa
lcall
sub
rcr
inc
in
xor
dec
ret
inc
imul
stos
js
inc
jl
test
leave
mov
out
sar
add
in
int3
inc
mov
inc
mov
sbb
sub
cld
cmp
inc
dec
sbb
mov
or
jge
aaa
add
xor
jle
das
mov
icebp
je
aad
fiaddl
push
rorl
pop
adc
mov
sbb
lds
mov
xchg
aad
push
gs
icebp
sub
mov
sub
notb
and
andb
pop
and
xor
and
lcall
inc
fsts
mov
mov
mov
out
out
sarl
xchg
mov
lret
fs
sbb
adc
ret
test
mov
in
dec
jo
mov
ss
es
mov
xor
jg
nop
push
xchg
push
and
in
clc
sahf
pop
repnz
mov
mov
mov
leave
jge
pop
mov
inc
popf
subl
xor
jmp
sub
xor
or
and
inc
pop
lods
push
flds
inc
popf
test
sub
add
dec
fsubrs
and
nop
dec
dec
cmp
out
inc
sub
leave
and
rcrl
mull
fstl
xor
sbb
xchg
orb
pop
je
pop
dec
cld
rolb
pusha
out
sbb
mov
lods
push
sti
es
sub
ret
push
faddl
xor
lods
in
fdiv
subl
scas
and
sub
sbb
xchg
repnz
and
push
cmp
add
dec
push
add
fnstcw
out
add
in
stos
add
cltd
cmp
imul
pop
add
cld
fbstp
divb
cmp
ss
mov
addb
add
sub
mov
bound
enter
push
jp
nop
or
insb
xchg
clc
dec
xchg
cmpsl
xor
lea
rcll
adc
or
xchg
pop
repz
stc
out
adc
out
testl
movsb
lret
jbe
and
cmp
inc
test
cmp
sub
dec
push
call
mov
icebp
push
push
xchg
test
shlb
gs
rclb
stos
cmp
fildl
and
push
sub
faddl
add
mov
mov
cmpsb
in
jecxz
adc
pop
sub
cs
mov
cmp
lret
fs
xchg
fucom
inc
inc
insb
xlat
pop
mov
jnp
aam
lea
arpl
cmp
pop
aas
jb
pop
adc
cmp
push
movsb
xor
sbb
rorl
test
mov
mov
or
rcll
inc
pop
sub
mov
push
jge
call
je
cli
enter
cli
repz
and
inc
sahf
xchg
sub
sub
sar
pop
pop
inc
push
dec
fmull
add
xchg
inc
enter
xchg
sub
adc
mov
xor
mov
fwait
xlat
pushf
or
aam
pop
test
push
sbb
lods
ficompl
sti
jb
mov
scas
xchg
dec
lods
jb
out
sbbb
sbb
xor
add
pop
in
push
or
lret
ret
inc
bound
inc
test
rorb
vucomisd
iret
mov
daa
mov
fs
mov
icebp
jg
jae
into
mov
mov
and
jg
into
test
xor
mov
mov
leave
ret
lret
lret
pop
test
arpl
mov
add
scas
xchg
jecxz
mov
cwtl
pop
mov
cmp
xchg
mov
mov
add
call
andb
jl
cmp
lret
pop
out
xchg
repnz
sbb
in
pop
shl
insl
add
jge
mov
jns
mov
mov
test
adc
add
divl
sub
push
ss
mov
in
add
jbe
enter
addr16
mov
out
in
push
or
add
lret
insl
leave
cmpsb
jb
push
in
push
sbbl
cmp
pop
lahf
ds
fldt
dec
inc
adc
outsb
xchg
lret
push
cmp
jnp,pn
test
fcmovnb
loop
sbb
shll
out
cmp
fwait
mov
pop
push
xor
mov
mov
sbb
push
jno
mov
inc
inc
out
push
cli
xchg
in
movl
xor
loop
xor
stc
imul
dec
movsl
or
add
or
insl
pushf
jmp
movsb
mov
repnz
mov
mov
pushf
mov
cmpsb
stc
xchg
add
jbe
daa
mov
fcoml
jge
rcll
cmpsb
sbb
cltd
dec
xchg
jb
ret
out
add
ss
xchg
jae
mov
cli
or
cmp
fldt
inc
std
fbstp
aad
jnp
test
out
jns
sub
add
cmp
cwtl
sub
repz
ljmp
mov
push
into
mov
les
imul
cwtl
ja
inc
pop
test
out
dec
push
out
aad
inc
ret
in
int3
addl
add
jne
lock
and
lea
push
pop
mov
imull
fsubl
es
xor
stos
aam
iret
lret
popf
and
inc
into
shll
push
xchg
rcr
mov
inc
mov
aas
repnz
push
sarb
ss
jp
push
push
xchg
mov
cmp
mov
repnz
test
sub
outsl
jp
ds
mov
jg
mov
mov
scas
push
aaa
mov
lock
dec
or
ds
jle
and
test
stos
xchg
call
aaa
add
add
imul
mov
dec
cmpb
mov
clc
sub
inc
pop
aam
push
fmull
jmp
test
adc
cli
subb
sub
ficomps
pop
or
icebp
shll
xchg
sbb
add
shll
dec
stos
pop
gs
jns
fwait
testb
in
jo
and
xor
sbb
jbe
into
add
fwait
cwtl
arpl
sbb
call
mov
fs
push
test
int3
popa
stos
push
sub
test
testl
jne
imul
xlat
daa
fdivr
mov
jmp
jl
cmp
sub
dec
push
cltd
inc
jmp
sbb
lods
push
mov
loope
stos
in
add
mov
add
xor
pusha
int
or
mov
xchg
adc
in
mov
pop
push
xchg
das
stc
ljmp
xchg
or
cwtl
jecxz
sbb
jnp
mov
cmc
stos
adc
clc
imul
lret
push
insl
hlt
inc
xchg
push
adc
cmpsl
add
add
movsb
leave
jg
ret
loop
popa
sub
dec
xchg
adc
push
int3
outsl
call
int3
mov
test
fisubs
fcomps
cmp
faddp
or
jbe
inc
in
fiadds
adc
push
ss
ss
insb
mov
shrl
cltd
mov
xor
xor
or
mov
ds
mov
lcall
sbb
in
push
rclb
gs
pop
neg
iret
fmul
movsb
pop
les
xchg
into
jne
pop
in
sbb
inc
dec
enter
orb
mov
mov
loope
mov
sbb
pop
sub
dec
xchg
test
setne
cs
int
push
mov
mov
shrl
aad
sarl
jp
outsl
fcmovnb
in
ds
scas
mov
int
aad
fisubl
ss
dec
aaa
lcall
fiaddl
xlat
mov
leave
cmpsl
xchg
cmc
and
ret
outsl
mov
jne
addb
mov
ret
and
xchg
out
stos
mov
mov
mul
sbb
dec
pop
data16
push
mov
inc
cmpsb
xor
clc
or
lods
add
cmc
inc
pop
xor
fsubrl
arpl
lods
stos
outsl
inc
mov
add
test
mov
js
mov
rorb
dec
and
xor
fisubs
add
jnp
mov
pop
ret
xor
push
dec
fs
jmp
int3
adc
adc
dec
lret
add
sbb
loope
push
in
clc
dec
mov
adc
scas
sahf
ret
push
js
scas
not
iret
lea
lds
mov
orl
ja
lock
pop
sbb
hlt
xchg
pop
out
int
pop
adc
and
pop
jno
mov
jle
loop
cltd
add
clc
jmp
xchg
ljmp
mov
dec
xor
repz
jl
pop
sti
add
mov
sbb
xchg
jmp
mov
xlat
inc
dec
mov
mov
xchg
jno
add
and
pusha
dec
push
mov
cltd
mov
int
dec
and
mov
dec
aas
push
aaa
sbbl
adcb
push
imul
push
mov
add
lds
adc
add
jmp
jae
ds
rorb
dec
lea
jno
pop
jbe,pt
and
xchg
sbb
pop
and
adc
shl
lea
nop
cmp
in
sar
ficoms
mov
test
pusha
repnz
pop
fistpl
jnp
add
popl
cld
sub
dec
mov
mov
push
jecxz
lods
dec
dec
std
imul
in
xchg
pop
loop
mov
fcomps
mov
adc
jae
popa
imul
into
pushf
int3
inc
or
xor
insl
jecxz
cltd
xor
ljmp
push
mov
mov
mov
subb
pop
xchg
sub
rorl
add
adc
dec
inc
jecxz
mov
mov
mov
les
mov
scas
push
sub
stc
sub
scas
pop
lods
cli
incb
int3
fsubs
sbb
xor
mov
pop
jo
and
mov
aad
ffree
clc
fsubl
js
pop
lcall
mov
mov
mov
inc
jle
xor
ljmp
or
stos
jns
or
and
push
xchg
rorb
hlt
dec
aas
jns
xchg
out
lahf
out
add
shl
bound
xor
fcoml
shufps
inc
ret
or
insl
push
popa
push
sub
dec
xchg
ret
in
imull
mov
or
mov
int
dec
pop
mov
mov
cmp
adc
loopne
push
in
adc
xchg
cmp
xchg
adc
fnstcw
sarl
fcomps
and
mov
dec
sbb
rclb
mov
fwait
lods
movsb
sub
mov
add
pusha
dec
loopne
mov
mov
sahf
mov
mov
das
sbb
xor
insb
testl
icebp
xor
or
push
fisubs
inc
out
test
imul
fiaddl
notb
mov
cmc
dec
test
mov
mov
add
adcl
sysenter
or
xor
or
shll
outsb
gs
stos
frstor
fcompl
push
jnp
mov
xchg
push
pushf
mov
insl
jmp
mov
inc
and
xchg
rcrl
xor
cmp
or
push
push
insb
dec
mov
iret
cmp
mov
outsb
mov
ret
pop
or
insl
movsb
push
hlt
daa
inc
lret
mov
fwait
dec
mov
add
xor
jns
pushf
pcmpeqw
push
dec
jne
lret
cmp
in
imul
mov
cmpsl
sti
xlat
nop
push
pushf
pop
push
sbb
stos
test
pop
inc
push
or
lock
lods
sbb
pusha
jne
test
or
mov
adc
fcoms
mov
xchg
mov
add
cli
ficoml
mov
jno
in
lret
rolb
dec
and
sub
jle
push
inc
shll
cmpsb
movsb
adc
fs
aas
loope
inc
cwtl
pusha
shr
shrl
int
xchg
daa
adc
repnz
test
rorb
inc
mov
mov
adcl
add
int3
mov
inc
xor
das
stos
xchg
test
out
shll
xor
iret
outsl
das
mov
addb
icebp
mov
insb
jne
jp
or
addr16
ret
cmpsb
jge
nop
subb
xor
lds
stos
jmp
inc
and
and
mov
xchg
mov
outsb
adc
pop
sbb
pop
pop
jge
je
aas
cmp
xchg
int3
xchg
test
movsb
sub
fldcw
mov
int3
gs
testb
xor
xchg
clc
roll
inc
pop
cmp
fs
dec
or
movsb
lds
loop
mov
sbb
ficoms
pusha
rclb
add
or
xchg
lods
xor
xchg
pop
sbb
xchg
add
mov
bound
xchg
dec
jae
inc
add
xchg
inc
les
rcrb
je
adcl
or
xor
xorl
fsubr
cmp
inc
cmp
lahf
xchg
in
add
mov
xor
xchg
or
sub
cmp
iret
or
inc
mov
mov
xchg
sbb
pinsrw
insl
mov
sti
mov
mov
sub
push
push
ja
ja
sahf
cmp
jmp
cmc
dec
push
jo
push
pusha
xchg
xor
stc
mov
std
or
sbb
jl
mov
ret
imul
mov
and
xchg
das
mov
out
adc
pop
out
fs
dec
repnz
add
xorb
inc
insl
outsb
repz
js
jl
adc
add
mov
pop
push
ds
sti
pop
push
dec
inc
cmpsl
mov
mov
loop
pop
jno
repnz
adc
jg
push
jg
mov
movsl
jmp
lret
add
lds
adc
scas
mov
inc
ss
sbb
and
xchg
test
cmp
sub
cmp
js
pop
cmp
pop
jecxz
xor
fistps
or
fmuls
loopne
inc
mov
jbe
xchg
in
popa
mov
in
icebp
repnz
fcoms
cmp
out
out
rcll
dec
inc
addr16
dec
add
jecxz
inc
ds
imul
mov
gs
ljmp
push
push
sbb
adc
jg
into
fiaddl
pop
mov
stos
mov
mov
mov
pop
and
outsb
mov
push
mov
mov
pop
out
daa
and
stos
pop
xor
pop
in
xor
loopne
repz
inc
ror
sbb
sub
or
andl
adc
xor
test
xchg
clc
test
jp
xor
mov
sub
jnp
int
xor
ficoms
or
lods
and
mov
dec
aad
gs
rclb
dec
in
es
in
ss
imul
mov
addl
adc
negl
jne
test
and
pop
mov
imul
jno
sbb
dec
xchg
xorb
dec
jp
xchg
mov
xchg
sarb
enter
loopne
rcrb
mov
push
loope
cld
dec
stos
das
dec
mov
test
mov
rcrl
xor
test
xchg
mov
inc
xchg
push
hlt
mov
fcoms
mov
dec
inc
adcl
in
xchg
popf
inc
adc
pop
sti
pop
add
push
sti
pushf
xlat
inc
add
lods
or
and
sbb
in
aas
cli
les
pop
scas
jmp
icebp
xchg
xchg
add
test
push
cmp
pusha
mov
imul
cld
fstps
lret
jb
mov
std
clc
inc
jno
mov
loopne
jle
sbb
das
pusha
or
flds
mov
lods
pop
sub
push
dec
mov
and
daa
dec
std
inc
sub
fs
in
into
daa
push
mov
sbb
lods
jbe
xchg
iret
fcom
pushf
loop
icebp
ret
stc
mov
insl
mov
pop
aad
cmp
mov
and
pop
jae
idivl
jo
push
jmp
pop
mov
addb
call
push
mul
popa
leave
movsb
jle
scas
add
pop
sub
sub
jg
mov
or
popf
or
incl
ret
cwtl
xor
movsb
push
addl
enter
xchg
xlat
sahf
fidivl
adcl
push
pushf
or
pop
nop
icebp
pop
frstor
mov
je
insb
negl
aaa
clc
scas
cmpl
mov
xchg
jge
scas
push
adc
fxch
add
lret
in
push
mov
add
add
shl
adc
adc
inc
mov
lcall
pop
lea
mov
mov
hlt
dec
roll
fdiv
test
jnp
dec
mov
push
stos
add
stos
mov
xorb
sub
sub
nop
or
add
push
jmp
jne
jns
push
mov
mov
dec
pop
or
push
dec
test
aas
ja
mov
xchg
cmp
aaa
aas
push
cmp
mov
cmp
inc
and
aad
mov
cmp
hlt
cmp
mov
and
cmp
fdivp
push
xor
adc
push
adc
ds
inc
fildll
out
das
xchg
jbe
fnsave
int
lods
jmp
cmpsb
divb
dec
clc
push
fnsave
push
or
lahf
pop
loopne
out
xor
add
mov
xor
andb
sub
ss
inc
imul
fs
pop
adc
push
mov
in
push
and
loopne
in
xor
lcall
fisttps
and
dec
sahf
jge
pop
fidivrl
ret
cmpsb
inc
mov
cmp
jno
popl
sub
inc
test
ja
divl
sbbb
js
test
out
out
xor
dec
add
or
and
inc
cmpsl
ljmp
inc
xor
or
hlt
out
sahf
cwtl
push
in
cmpsb
pushf
lods
xchg
jmp
push
int
nop
fwait
jmp
pusha
lds
fistpll
stc
movsb
jbe
cmpsl
push
les
shll
pop
push
aaa
mov
or
divb
mov
test
sarl
adcl
movsl
adc
dec
sbb
outsb
adc
clc
lcall
pop
es
cltd
push
or
lret
insl
add
mov
dec
push
out
xlat
ficompl
fists
dec
xor
insl
lea
jp
xor
mov
add
add
inc
xor
jnp
sub
cmpsl
aas
aas
add
fiadds
push
adc
fidivl
fstpt
add
or
data16
pop
stos
bound
jg
lds
frstor
push
hlt
ds
jp
aas
jo
pusha
cmp
imul
sahf
mov
mov
repz
adc
nop
xchg
sbb
xor
in
mov
push
adc
das
mov
pop
flds
loop
xlat
cmp
sarl
jae
and
cmp
jb
mov
inc
fiaddl
mov
mov
rcr
xchg
adc
fcomps
mov
mov
orb
hlt
test
and
test
or
mov
adc
jo
das
cmp
xchg
mov
out
xchg
jmp
insb
sbb
mov
mov
mov
movsl
in
cmp
cmc
sbb
faddl
sbb
movsl
mov
jo
sti
sarb
out
pop
push
subb
lret
es
dec
add
pop
lret
sti
jnp
orb
adc
stos
push
js
fmull
adc
mov
sbb
dec
pop
pop
xor
or
mov
stc
pusha
mulb
add
mov
into
mov
mov
fsubs
xchg
add
mov
mov
add
in
fdivrs
cwtl
xorb
xchg
mov
or
loop
jb
pop
dec
rorb
cltd
aam
xor
xor
sahf
cltd
xchg
orb
xchg
pop
lret
jnp
stos
aaa
mov
dec
test
adc
mov
imul
fsubl
or
nop
adc
push
fst
sbb
imul
push
nop
in
incb
in
clc
jl
stc
dec
pop
mov
jnp
mov
mov
jp
test
cmp
mov
fsubrl
fdivp
popf
cltd
inc
mov
push
xchg
pop
rcl
push
stos
das
and
outsb
je
dec
lods
jge
jo
testl
fwait
cs
das
xor
pop
mov
sub
pop
mull
sahf
inc
inc
cmpsl
in
lret
ss
outsb
xor
and
dec
cld
int3
push
cmp
mov
xlat
clc
out
push
mov
cmp
xchg
mov
insb
dec
mov
std
int
mov
push
jl
cltd
fidivrl
daa
shll
xchg
je
pop
jns
imul
push
subb
in
fwait
pushw
inc
mov
bnd
xchg
jne
lods
leave
pop
leave
dec
push
lea
dec
add
movsl
jmp
inc
sbb
std
repnz
scas
xor
mov
mov
fsubr
push
mov
xchg
pop
in
outsl
aad
xor
xlat
addr16
test
push
clc
jmp
fs
sbb
mov
idivl
repz
out
ss
jl
dec
rol
sbb
daa
inc
sub
aad
popf
cmp
in
repz
sub
adc
cmp
arpl
or
das
mov
cmp
repz
xchg
aam
test
aad
daa
loopne
or
in
dec
sti
dec
addl
addr16
lret
lcall
and
fidivrs
pop
jne
out
sub
xor
push
in
ret
scas
dec
dec
inc
arpl
sbb
lock
pop
push
adc
mov
add
mov
aam
test
pop
pop
test
lret
repz
sub
xchg
or
lds
sub
filds
test
aaa
sbb
push
mov
cmpsl
pop
jo
rcrb
dec
and
in
dec
fidivl
mov
inc
push
mov
sub
mov
mov
testb
inc
cmpsb
cmp
sbb
cmp
test
enter
adc
in
mov
mov
push
jmp
sub
jne
popa
sub
mov
mov
xor
jmp
mov
push
adc
sbb
ficoms
mov
jl
imul
pop
fldl
xor
repnz
or
cmpsb
and
mov
repnz
mov
or
mov
loope
jae
sbb
cld
dec
arpl
dec
aam
adcb
rol
stos
inc
mov
push
fcoml
test
xor
push
push
xchg
push
enter
iret
pop
push
shrl
pushf
insl
popf
and
push
outsb
pop
dec
inc
movhlps
sub
icebp
cmc
sub
leave
test
xchg
or
int3
cmp
mov
das
pop
cs
or
mov
push
lcall
enter
adc
enter
cli
test
scas
push
xor
fcoml
out
and
rcll
pop
ja
dec
xlat
clc
pop
mov
push
lds
stos
push
xchg
std
in
popa
adc
mov
cmp
mov
pop
inc
sub
add
aaa
adc
mov
mov
or
lods
mov
stos
mov
jnp
clc
and
and
das
daa
mov
mov
jno
scas
outsl
adc
pop
sub
clc
inc
pop
mov
pop
push
aaa
mov
rorb
mov
add
jecxz
iret
inc
mov
fbld
imul
inc
divl
sub
icebp
pop
mov
lret
pop
mov
call
xor
sbb
das
loop
sub
fisttpl
mov
out
jge
mov
mov
cld
inc
mov
add
mov
pop
mov
mov
cli
add
fsubs
xchg
xchg
daa
mov
xchg
jg
aam
stos
out
out
xchg
mov
cmp
imul
add
out
jno
shll
jp
iret
sub
in
xchg
adc
adc
sar
outsl
fnstenv
inc
popf
test
dec
dec
or
push
scas
jl
lock
adc
mov
outsb
jecxz
mov
lret
js
scas
cmp
sbb
ret
shrl
fbstp
loopne
andl
cmp
hlt
add
sbb
mov
in
shrb
xchg
cmp
ja
or
mov
push
dec
pop
inc
sbb
push
jne
pushf
push
int
push
movsb
fildl
dec
sub
sbb
fisttpll
dec
in
or
sbb
jmp
mov
pop
push
add
push
pop
mov
mov
or
xor
jo
mov
mov
rclb
ljmp
pop
mov
lret
add
sti
imul
fistpll
lods
pop
bound
inc
mov
sub
sti
xor
mov
jae
icebp
xchg
cmc
sti
jecxz
fnstenv
int
jl
add
lcall
cld
sub
movups
mov
xchg
sbbb
lds
push
inc
adc
push
jb
inc
mov
sbb
jecxz
mov
popf
mov
inc
jmp
pushf
mov
enter
in
pop
loop
inc
lret
mov
jle
clc
inc
stos
mov
mov
jne
sbb
fisttps
into
mov
pop
loope
lock
pop
cmpsl
sbb
sbb
clc
insb
pop
insl
push
ss
orb
cli
push
cltd
cwtl
pop
outsb
or
test
jae
ljmp
cwtl
inc
dec
daa
cmp
lahf
mov
ljmp
ficomps
lds
cmp
int3
repz
push
loop
daa
mov
shrl
mov
cmp
mov
stc
insb
push
cmpsb
fstps
sub
decb
mov
lds
mov
cmp
cmp
movsl
mov
mov
pusha
imul
dec
lahf
fldenv
lcall
popf
gs
dec
mov
movsl
mov
inc
pop
pusha
inc
jl
iret
shrl
mov
arpl
insb
pusha
mov
mov
dec
xchg
leave
dec
mulb
and
sub
mov
mov
and
and
aaa
movsb
sbb
fsubs
pop
add
push
mov
jp
lea
mov
movsb
xor
fisttpl
add
lock
jp
jnp
int
sub
push
inc
stos
and
addr16
adc
sub
scas
stos
enter
popf
cmpsb
lret
push
push
jbe
sbb
hlt
bound
cmp
fnstsw
clc
xor
iret
das
pop
jnp
or
mov
cs
mov
mul
dec
xlat
push
in
jns
xchg
dec
sbb
movsl
out
xchg
and
pop
icebp
out
fists
mov
lcall
sbb
test
xchg
movsl
mov
daa
pop
mov
stc
fisttps
ret
or
xor
out
mov
add
jnp
dec
pop
cs
xchg
test
addr16
ja
in
add
inc
fsubp
mov
cld
lock
stos
and
ficompl
lahf
aam
cmp
jo
dec
filds
inc
rcll
je
cmpl
jo
pop
sub
loop
daa
es
sbbl
mov
icebp
loopne
jecxz
cmc
in
mov
push
dec
xchg
test
shll
pop
push
jp
mov
push
fldcw
and
push
or
repnz
in
in
cmp
and
inc
adc
mov
adc
cs
inc
jmp
mov
hlt
filds
jge
and
fildl
push
mov
add
push
lods
mov
xor
pop
push
sbb
rolb
add
xchg
push
das
mov
mov
rcll
cmpsl
lods
mov
mov
rorl
icebp
cmp
pop
pop
mov
pop
push
cmp
sub
xlat
adc
pop
repz
mov
push
sbb
das
inc
add
push
adc
sub
sub
xchg
mov
and
movsl
mov
dec
in
rcl
mov
data16
hlt
jbe
inc
ds
mov
in
pop
mov
pop
std
rep
out
fidivrl
scas
cmp
xchg
xlat
sbb
xchg
popf
push
sbb
pop
lret
adcb
or
push
repz
imul
nop
andl
out
mov
push
in
repz
jb
or
cmp
adc
sbb
jmp
js
div
insl
test
lret
pop
ljmp
int3
stos
ret
pop
dec
and
call
mov
mov
outsl
adc
ljmp
push
dec
pop
jle
fwait
leave
in
jbe
cmp
scas
cmp
into
fsub
lods
arpl
sub
andb
or
sbb
insb
adc
je
fists
xor
fidivrl
xchg
sub
ljmp
or
fmull
jle
roll
cmpsb
adc
xor
adc
rcll
mulb
pop
outsb
and
sahf
cmp
imul
sbb
jo
insl
dec
jo
cli
dec
mov
cld
and
into
mov
fbld
mov
adc
je
cmpsl
jno
add
and
jp
lahf
pop
mov
rcrb
push
clc
inc
xchg
mov
cwtl
out
cmp
repnz
sbb
sti
mov
xchg
ss
adc
xor
pop
data16
and
imul
sti
icebp
aad
data16
sbb
jle
xchg
je
push
fmul
and
sbb
psrlw
pop
jg
aas
ret
scas
jl
lods
sbb
stos
ret
mov
xchg
sub
sbb
imulb
push
add
test
sbb
sbb
xchg
and
cld
and
icebp
scas
xlat
and
das
fs
jae
add
push
pop
and
mov
pop
mov
repz
repnz
mov
enter
stos
cmc
inc
popf
test
int
jle
lahf
sbb
in
jp
or
xchg
pop
jmp
movsl
jns
loop
das
inc
lods
std
shlb
daa
das
dec
push
push
lods
add
lods
adc
test
lcall
sbb
dec
mov
data16
outsb
test
mov
pop
dec
call
inc
push
push
test
xchg
xor
outsb
sub
test
jmp
dec
hlt
sub
js
inc
aad
push
and
cmp
imul
mulb
sub
inc
scas
or
popa
fisubrs
xor
stc
sub
push
adc
cmp
add
adc
mov
gs
pop
dec
jmp
xchg
mov
jg
shrl
adc
notb
and
out
lds
xlat
pop
mov
out
xlat
mov
jb
movsl
movsb
pop
out
int3
rcrb
mov
lea
xchg
adc
push
xchg
pop
in
xchg
cmp
xor
js
fcoml
cmp
lret
mov
pop
xlat
out
dec
jg
cmp
jecxz
pop
sub
xchg
loop
les
or
mov
nop
les
mov
jecxz
dec
rorb
je
push
push
xor
cli
pushf
cmpsb
jns
push
aas
or
jecxz
mov
mov
adc
out
and
rclb
stos
aas
add
mov
or
adc
cli
push
dec
aam
push
mov
cmp
mov
imulb
sub
insb
sbb
inc
jmp
inc
dec
fsubs
fdivs
mov
or
jo
sbb
in
jb
inc
push
add
ret
test
loop
mov
faddl
lods
pop
addr16
add
cmp
call
test
or
mov
sub
push
decb
xor
ds
ret
icebp
pop
jle
loop
std
adc
rcrl
xlat
int
add
jne
cli
lret
int3
lea
cpuid
es
daa
addr16
mull
stc
inc
lds
or
mov
mov
xchg
and
addr16
pop
repnz
rclb
mov
push
adc
push
imul
es
cmp
or
sbb
mov
lods
inc
subb
mov
jno
movsb
sub
adc
mov
mov
cltd
mov
mov
jecxz
mov
adc
xchg
jbe
loop
popa
jp
lret
call
inc
shlb
cmp
mov
ds
popa
inc
and
dec
clc
adc
ds
fdivs
dec
icebp
movsb
stc
lds
push
xor
or
lods
js
movsl
mov
ss
cld
mov
sub
dec
in
out
subb
add
aam
and
sub
movsb
sub
cltd
mov
fistpll
pushf
in
and
out
pop
mov
fsubrl
cmp
or
cmpsb
out
lcall
loop
mov
add
mov
ffree
outsb
popf
pushf
pop
lods
jne
xchg
sarl
xor
cmp
mov
arpl
push
push
pop
jmp
call
xor
or
mov
mov
shl
clc
xorl
inc
lods
cld
jne
mov
dec
pop
jbe
enter
sbb
stos
or
int
mov
xchg
fwait
sbb
rol
push
out
pusha
test
cltd
out
lock
dec
les
pop
lods
push
outsb
test
mov
or
pop
insl
mov
lahf
add
shrl
adc
jnp
dec
xchg
call
test
dec
mov
test
fbld
mov
out
ljmp
icebp
jl
ljmp
call
in
aas
mov
jne
sub
mov
lret
mov
xchg
pop
icebp
arpl
jg
stc
in
add
sbb
ror
add
test
in
and
popa
sbb
sahf
lea
pop
mov
push
fdivl
mov
inc
pop
jnp
mov
sti
cwtl
mov
das
enterw
sub
push
mov
lcall
adc
or
or
scas
lock
fidivrl
daa
in
ret
cmc
addb
cmp
mov
test
fstl
push
int3
adc
jnp
test
cmp
jbe
sbb
orl
aaa
sbb
sti
push
adc
push
gs
mov
int
rcr
mov
into
pop
icebp
fmull
stos
pop
dec
xor
push
scas
and
push
push
pop
stos
adc
stos
pushl
stc
adc
xchg
repnz
ljmp
cmp
add
jne
cld
add
sahf
shrb
sbb
jp
xor
cmp
sti
fldl
adc
cmp
out
dec
adc
lods
test
mov
mov
in
xchg
pop
jp
enter
ja
sbb
rol
bound
js
lds
lods
inc
fsin
mov
mov
mov
ss
mov
xor
out
sub
ret
ret
test
cmp
cmp
insb
push
pop
xor
or
test
xchg
mov
idivb
das
ss
pop
bound
je
pop
insb
mov
std
fchs
sub
mov
or
int
int3
je
fiadds
mov
aaa
out
dec
aaa
fwait
ret
in
lret
mov
adc
mov
jl
enter
xchg
in
xor
cli
xor
out
inc
pusha
rcrl
or
call
aaa
jge
inc
lahf
stos
sub
add
mov
add
push
rorb
xchg
push
mov
punpcklwd
ds
addr16
movsl
mov
fcomip
fiaddl
pop
negl
into
scas
sbb
std
incl
inc
rol
icebp
stc
xor
outsl
xor
clc
fs
xor
sbb
les
out
mov
xlat
mov
pop
icebp
mov
clc
loopne
js
jecxz
nop
ret
dec
push
movsl
ja
js
fstpt
js
outsb
fidivrs
or
aaa
xchg
negl
das
mov
pop
add
xor
lea
push
cs
idivb
repnz
xor
loop
jle
fabs
mov
popf
sahf
lahf
outsb
int3
xor
inc
mov
fldl
popa
dec
sub
mov
scas
es
inc
dec
xor
sbb
dec
cli
imull
scas
pop
mov
pop
cmp
es
push
pop
inc
xor
cltd
sbb
das
sub
push
cltd
ja
hlt
mov
xor
cwtl
enter
cs
add
add
push
das
dec
loop
sbb
or
lahf
ja
mov
rcr
lea
xor
iret
and
repnz
mov
push
sub
fwait
mov
jo
scas
sbb
pusha
push
test
lahf
sbb
cli
xchg
inc
sarl
arpl
mov
mov
mov
sarl
xor
cmp
aad
dec
adc
mov
lods
jge
pmuludq
or
sub
push
jge
mov
and
mov
lcall
insl
das
and
pop
sbb
iret
lods
pop
int
loope
xchg
nop
sub
imul
mov
dec
pop
jmp
iret
jg
mov
push
cltd
in
or
cmp
repz
in
sti
je
pop
pop
push
jbe
push
fsubrl
imul
lcall
leave
mov
xor
xchg
ret
add
das
test
dec
adc
insl
lds
fisttps
inc
or
jge
xorb
jb
xor
lret
sub
cmpsb
and
jnp
and
shrl
stos
stos
ja
bound
pop
mov
arpl
and
jb
sbb
mov
stos
dec
sahf
iret
rclb
sbb
cmpsb
lods
addr16
test
sub
jne
push
cmpsb
pop
movsb
clc
cmp
cmp
loopne
mov
sahf
ja
hlt
xor
mov
xor
adc
lcall
nop
in
xor
adc
sbb
jns
jge
rorb
sub
fwait
mov
mov
mov
dec
jae
pop
xchg
mov
mov
cmp
out
cmp
push
sub
out
dec
xor
ret
and
bswap
pop
in
mov
or
mov
xchg
cmp
pcmpgtw
js
loop
sbb
and
out
lods
fs
xchg
xchg
pushf
psllq
push
sub
xor
fcoms
insl
aas
sbb
push
sbb
int
jo
iret
cltd
inc
mov
movsb
es
loope
sub
push
daa
add
or
clc
cs
out
push
fistl
ret
sbb
fisttpll
lahf
or
cmp
fisubs
lcall
repnz
and
mov
sahf
shll
insb
pop
jno
rcl
ja
shrl
xor
sub
pop
cltd
in
jl
push
ret
push
fs
aas
mov
mov
scas
xchg
fdiv
xchg
out
jae
pusha
mov
mov
pop
aam
pop
add
lods
sub
inc
sbb
das
out
jmp
sub
cmc
cwtl
xchg
jo
adc
hlt
mov
mov
test
loop
sub
cmp
pop
pop
xorb
lds
mov
adc
test
icebp
jmp
xor
nop
stos
and
mov
xchg
jno
lock
pop
mov
mov
fs
incl
inc
sbb
add
mov
test
jbe
inc
inc
push
mov
insb
adc
add
push
fs
jmp
iret
das
outsb
push
movsl
dec
es
insb
or
xor
adc
sahf
pusha
pushf
xor
jns
dec
arpl
add
cmp
xor
cmpsb
xor
popa
scas
out
lods
sbbl
cmpb
mov
arpl
rcll
jnp
xchg
fcompl
fdivrp
cmpsb
mov
push
mov
call
ret
jp
arpl
dec
or
xchg
cltd
jecxz
dec
xor
mov
xchg
mov
or
and
mov
daa
movsb
lahf
xchg
lret
lock
cmp
mov
mov
adc
sarb
pop
jo
mov
and
stc
sub
mov
inc
dec
shlb
jp
cltd
push
ds
pop
insb
ret
jnp
push
lcall
mov
es
loop
stos
aam
lods
insl
push
mov
iret
sti
int3
int3
jbe
sub
adc
xchg
js
and
cwtl
cmpsl
test
rol
mov
call
dec
call
mov
scas
push
push
cmpsl
fnstsw
js
mov
inc
xchg
xor
jle
lods
sbb
xchg
lahf
stos
fdivrp
jp
hlt
mov
jnp
cmpsl
xchg
loopne
rorl
or
out
outsl
add
mov
sti
mov
addb
sbb
shr
and
adc
call
loope
dec
xor
xor
inc
xchg
in
inc
mov
add
cmpsb
sbb
adc
cmpb
stos
fldln2
incb
adc
mov
std
stos
mov
mov
stos
and
mov
mov
stc
outsb
xchg
or
fcomps
nop
out
into
je
cld
sub
sahf
jne
mov
rol
cmpsl
jae
movsb
ret
mov
out
pop
inc
lret
adc
ret
aad
in
dec
lret
ds
jne
fwait
lods
and
and
xor
inc
lcall
inc
movsl
xor
cwtl
imul
add
mov
jecxz
insl
icebp
and
jmp
and
scas
leave
add
or
and
mov
stos
out
popa
icebp
hlt
int
inc
inc
ja
jns
and
push
jnp
les
cltd
jge
or
and
inc
jno
insb
cmp
lock
clc
out
push
test
mov
fmuls
adc
cld
ja
pop
data16
mov
lcall
push
fs
jecxz
cld
sarl
sub
insb
and
bound
lds
and
insb
sub
in
mov
js
stos
adcl
dec
dec
das
pop
jmp
pop
cmp
lcall
jbe
push
dec
sub
mov
mov
sbb
fwait
daa
mov
int3
cld
and
cltd
test
imul
lahf
clc
subl
jae
andl
in
out
jo
jmp
rol
fsub
lret
fs
jno
bound
aad
inc
mov
popa
push
pop
inc
pop
out
test
fildll
inc
cmpsb
out
push
dec
hlt
es
push
and
sub
je
inc
mov
mov
sbb
mov
cmp
xor
hlt
jle
cltd
out
ds
repz
sbb
xor
fs
jne
bound
icebp
mov
pop
mov
je
ljmp
test
or
fidivs
mov
jecxz
leave
test
decb
fistpll
sbb
inc
das
cmp
mov
divl
cli
sar
push
int
add
mov
sbb
mov
mov
jle
xchg
bound
dec
sbb
mov
rcrb
loopne
or
cmp
xchg
mov
movsl
cwtl
jmp
fnsave
push
std
push
dec
mov
dec
popf
mov
fldenv
inc
add
add
daa
scas
inc
ss
testl
mov
push
dec
jne
pushf
lret
jp
fwait
or
jo
add
std
or
rolb
int
pop
add
mov
sbb
cmpsl
stos
mov
popa
lock
sbb
and
mov
lods
dec
dec
pop
arpl
jb
and
add
pop
in
aaa
icebp
into
fidivs
cli
or
jae
jb
pop
sbb
lds
mov
pop
xor
jne
xor
sti
push
xlat
or
adc
sub
sbb
mov
pushf
inc
push
imul
bswap
mov
ficoml
dec
loop
fsts
rolb
push
icebp
stos
and
mov
flds
in
ret
stc
inc
popf
jl
jno
or
dec
sub
xor
add
push
add
mov
insb
repnz
mov
jbe
push
rclb
add
mov
add
les
dec
sub
insb
dec
push
pop
jl
andb
ret
inc
mov
mov
imul
mov
lcall
test
in
movsb
shrb
and
push
cmpsl
sti
mov
mov
lods
mov
sbb
inc
dec
pop
nop
mov
les
pop
xchg
push
xchg
fsubr
cmpsb
push
popa
and
fdivs
inc
cmp
pop
jne
imul
out
rcrl
sub
sarl
movsb
or
sbb
mov
in
cmp
shrb
mov
adc
inc
jg
jno
xchg
mov
aad
enter
pop
and
fwait
pushf
mov
pop
iret
jbe
into
mov
pushf
lret
insl
call
pop
add
cwtl
add
pop
pop
lods
jmp
jb
ljmp
icebp
in
shlb
cs
jmp
xor
test
popa
cltd
stos
xchg
jnp
xor
call
mov
sbb
daa
call
test
scas
in
sub
aad
stos
fs
jge
push
fisubrs
mov
xlat
push
fs
ffree
out
cmp
sub
mov
mov
xor
or
sbb
lret
es
sub
out
mov
jmp
adc
lahf
fnstsw
cmp
xchg
out
xor
sbb
and
je
std
cld
subl
pop
xchg
nop
xchg
mov
dec
cmp
and
mov
xchg
cmp
mov
mov
sar
out
out
iret
loopne
ret
mov
fistl
std
add
jle
int3
add
dec
mov
test
sub
loop
adc
lds
insl
or
mov
lock
outsb
testl
fcom
push
pop
sbb
ljmp
sbb
lret
adc
xchg
int
nop
es
test
sbb
and
inc
sub
fistps
mov
jmp
movsb
es
daa
pop
nop
xchg
loop
or
pop
adc
sub
sti
cmpsb
into
mov
pop
adc
jno
xchg
int
addr16
adcl
sar
sarl
mov
dec
lahf
cmp
pop
flds
pop
mov
int3
arpl
das
or
mov
lods
dec
jne,pt
adc
xchg
cmp
pop
or
in
in
ja
xchg
jbe
js
push
mov
push
mov
cmc
mov
xchg
or
jmp
push
push
xchg
sbb
mov
inc
sbb
mov
sub
pushf
mov
mov
fidivrl
mov
adcb
mov
push
lods
out
cmpsl
cmp
mov
mov
imul
sahf
movsb
dec
push
sub
les
ja
or
sarb
int3
dec
jbe
mov
jg
mov
and
sbb
ret
nop
lea
nop
sub
inc
insl
pop
jae
and
and
sbb
push
mov
add
data16
stc
xchg
xchg
mov
or
xchg
fs
sub
sub
cmpsl
test
cmp
push
lahf
cwtl
stc
inc
pop
pusha
test
cmc
mov
pop
cmp
xchg
repnz
fstpl
fwait
stos
gs
rcrl
out
shrl
imul
pop
lahf
aas
lock
adc
cmp
inc
hlt
sub
iret
dec
imul
test
sub
jns
stos
inc
sbb
push
imul
dec
punpckhdq
ja
loope
push
cs
jp
pop
fwait
and
inc
shl
aas
or
lods
jb
mov
adc
sub
xlat
adc
xchg
inc
dec
cli
stc
out
repnz
insb
pushf
aad
cmp
mov
insb
loope
addr16
sub
bound
aaa
daa
sahf
fimuls
inc
js
cmp
lods
xchg
jne
or
or
pop
push
repz
stc
push
stos
lahf
add
mov
and
out
mov
insl
clc
mov
push
cld
or
and
rol
loop
cmpb
jmp
push
xchg
cwtl
mov
lret
gs
pop
roll
lds
push
int3
add
push
xor
cmpsl
pop
xlat
sbb
mov
rcll
stos
xor
dec
mov
sub
mov
and
sbb
in
jle
fwait
dec
push
mov
fucomp
mov
push
push
rol
sub
adc
ret
sbb
and
push
push
out
int
gs
push
andb
pop
pop
lods
fdivr
adc
insb
fwait
sbb
enter
mulb
iret
xor
cltd
jg
inc
shrb
sbb
fstpl
loopne
pop
stos
scas
aam
xlat
push
fucomp
pop
iret
mov
ljmp
or
fbstp
jp
add
aas
push
in
inc
and
cmp
mov
lret
in
adc
xor
and
test
push
adc
inc
sbb
sbb
cmp
into
mov
dec
mov
ss
cmp
daa
mov
jp
orl
sub
pop
cmpsb
mov
inc
mov
fsubs
xchg
mov
jecxz
xor
shlb
js
pop
arpl
adc
cwtl
sbb
adc
pusha
add
and
cltd
jne
bswap
or
cwtl
movb
je
push
stc
pop
jecxz
nop
sub
ds
xchg
cmpsl
imul
sub
xchg
adc
fs
xor
jg
sub
test
lds
dec
mov
inc
sbb
mov
and
cmpsb
xchg
cltd
in
ret
mov
cld
mov
mov
jns
xchg
outsb
mov
jo
loopne
inc
push
dec
xchg
pop
jbe
mov
mov
cmpsl
lret
nop
pop
leave
scas
inc
push
mov
adc
xchg
sbb
pop
shll
lcall
xchg
dec
and
test
loopne
or
jbe
mov
rolb
fwait
lahf
and
in
cmc
into
xchg
pop
imul
divl
dec
dec
data16
lods
mov
icebp
push
outsb
cld
bound
insl
mov
outsb
or
xor
inc
jno
xchg
ds
inc
pusha
mov
pushf
jmp
subl
lahf
ret
gs
divl
out
adc
lret
and
or
mov
mov
push
daa
insl
cmp
out
pop
sarl
repnz
pop
aam
dec
sbb
sbb
add
add
test
out
adc
stos
sbb
mov
rol
insb
jecxz
adc
or
rcrb
fidivrl
jae
not
push
inc
inc
push
and
adc
rolb
push
idiv
pop
mov
xor
mov
mov
adc
ficoml
xchg
push
scas
and
pop
lret
pop
xorl
inc
pop
clc
inc
sub
rcrl
fnsave
sub
das
pop
out
jno
sbbb
xchg
add
rorl
ja
fstps
js
jns
fucomp
adc
mov
xor
dec
push
mov
cmpsl
and
mov
je
repnz
mov
add
jb
or
decl
sub
cli
adc
loopne
push
inc
scas
sub
mov
mov
cmpsl
xor
out
nop
sub
loop
pop
pushf
adc
clc
cmp
pop
das
jo
xor
sbb
call
pop
aad
xor
xchg
test
mov
loope
out
sarb
mov
loope
adc
cmp
xchg
enter
out
ds
hlt
dec
les
push
mov
scas
iret
imul
sbb
stos
pop
push
mov
inc
xchg
lcall
subl
sub
sub
mov
into
fldenv
adc
sub
and
dec
lret
cmp
cmpsb
sub
xor
xlat
or
out
popa
adc
mov
iret
les
cltd
lock
add
insb
and
stc
mov
xchg
inc
loopne
mov
and
test
aas
mov
push
pop
mov
jnp
bound
ret
push
clts
mov
xchg
test
or
mov
outsl
jne
arpl
jp
ficompl
mov
cmpsl
cli
fimull
loopne
cmp
lods
mov
add
flds
mov
xchg
pusha
mov
add
lea
mov
or
adc
pop
test
shlb
add
gs
mov
leave
push
cmpsl
sub
jns
jne
push
dec
and
popa
jnp
inc
lret
mov
into
je
mov
icebp
lcall
sub
or
pop
mov
mov
rcll
incl
mov
push
sbb
fs
pop
mov
sbb
sbb
int3
mov
cwtl
mov
repnz
lea
in
adc
aam
cmp
sub
push
das
xlat
mov
lcall
push
nop
pusha
scas
les
in
sbb
xor
fsubrl
xor
jmp
add
addps
push
sbb
mov
fisttps
inc
jg
inc
mov
ss
pop
xchg
mov
sub
cmp
test
arpl
pop
test
and
jg
jbe
insb
je
pop
outsb
inc
test
je
jecxz
js
sbb
mov
addl
lods
shlb
sub
jbe
add
cmp
outsl
xchg
xor
repz
sahf
rcll
xchg
sub
cmp
and
daa
cmp
inc
in
in
sub
cmpsl
fistpll
ds
adc
repnz
insl
nop
adc
cmc
imul
push
fadd
adc
jp
jg
pop
gs
mov
cmp
add
roll
inc
popa
mov
aad
push
popa
push
aas
iret
in
mov
or
jl
cmp
push
fdivs
sub
sub
outsb
push
out
adc
test
mov
inc
and
in
mov
inc
lds
sub
fdivrl
xor
test
out
nop
mov
cmp
add
clc
jle
cs
inc
fiadds
sub
mov
dec
lods
das
icebp
out
mov
mov
aaa
popa
popf
dec
xchg
push
inc
loopne
andl
sub
push
jle
pop
ret
and
loop
scas
pop
aas
mov
inc
pop
push
sub
outsl
data16
stos
pop
dec
into
jmp
cmp
in
leave
mov
mov
xchg
inc
ss
xchg
in
notb
add
loopne
lahf
pusha
mov
mov
pop
insl
loopne
shrl
push
add
mov
ljmp
push
sbb
xor
jne
dec
xchg
jnp
fists
into
inc
arpl
mov
push
lcall
jo
jmp
repnz
movsb
xchg
dec
rorl
and
int
dec
dec
clc
add
mov
bound
or
mov
rcl
dec
inc
or
push
mov
and
stos
jecxz
inc
jnp
das
jnp
sub
and
iret
sti
jmp
mov
jp
inc
sub
dec
jbe
ds
xor
xchg
repz
mov
or
cmp
and
movsb
fdivl
add
aam
lods
and
inc
arpl
repnz
and
jecxz
hlt
flds
xor
xchg
xchg
sbbb
js
fsts
gs
xor
sbb
out
jo
lods
pop
repz
jg
inc
add
das
xor
ljmp
iret
mov
mov
push
mov
int3
xchg
xchg
inc
movsb
mov
jle
jbe
mov
lret
int3
mov
psllq
push
je
jbe
jno
pop
shlb
sub
or
jnp
xchg
cltd
pushf
gs
je
movsb
or
and
lcall
mov
es
roll
mov
adc
jp
mov
dec
js
outsb
pop
and
push
rcr
and
fs
cmpsb
mov
inc
push
push
jno
jge
filds
test
dec
leave
xor
adc
addr16
mov
mov
mov
sbb
mov
aam
or
cli
shrb
and
in
inc
sub
iret
mov
mov
int3
adc
scas
jns
mov
scas
add
aam
movsl
pop
pushf
inc
xchg
in
in
dec
test
imull
push
jbe
push
jno
stos
pop
mov
std
mov
jmp
into
sbb
scas
or
addr16
xor
xchg
fdivs
lock
sbb
ret
test
dec
sarl
es
or
stos
cmp
jmp
addl
mov
in
add
arpl
ficoml
call
test
cmp
jmp
fs
out
testl
jmp
inc
dec
xchg
cmp
sbb
add
mov
xchg
add
dec
jne
rcll
imul
pusha
push
sub
outsl
out
insl
pop
push
add
xor
or
std
jnp
push
pop
mov
es
loopne
mov
jb
aam
xchg
das
fbld
movsb
shlb
clc
lods
imul
pop
mov
jbe
sub
ret
xor
or
daa
add
mov
cltd
pop
dec
bound
in
jmp
jge
lret
fwait
and
lea
clc
sub
inc
and
push
dec
flds
pop
pop
jbe
clc
pop
call
mov
fnstcw
repnz
xor
fisttpl
push
int3
adc
fistpl
cmc
aad
pop
leave
loop
and
adc
lock
and
shll
insb
add
jb
xchg
call
mov
and
sahf
fwait
mov
fsubl
repnz
out
sbb
stc
dec
test
stc
cmp
add
pop
pop
out
lods
pop
imul
lods
daa
subl
inc
mov
cmpxchg
cli
loope
xchg
outsl
or
mov
push
mov
insl
xor
add
cmp
push
enter
negb
lods
inc
pop
and
in
in
cmp
call
mov
shr
push
adc
scas
mov
push
fnstsw
xor
mov
out
inc
bound
test
outsb
dec
call
lods
dec
push
push
jg
and
imul
mov
and
shrl
and
push
inc
enter
xchg
lret
fstl
xor
push
mov
mov
imul
loop
sub
and
jg
push
or
push
idivb
dec
cli
stos
popa
lods
repz
cmpsl
fcompl
aam
xchg
test
mov
dec
leave
cmp
rcll
pusha
mov
adc
or
push
rolb
or
push
pop
sbb
or
loope
xchg
cmp
std
mov
daa
or
push
movsb
test
insl
dec
lahf
inc
adc
jo
inc
lods
int
sbb
popa
into
inc
jmp
popa
and
adc
mov
clc
pop
mov
sub
rorb
or
lret
fnstsw
imul
inc
movsl
or
ret
out
cltd
pop
ss
mov
je
lea
ljmp
fucom
xchg
pop
sbb
adc
jbe
add
iret
inc
lret
ja
sbbw
mov
mov
adcb
data16
scas
jo
sti
fsubrs
aas
push
jle
cmp
clc
imul
mov
fcoms
add
xchg
push
xchg
xor
in
and
cmp
aas
lds
lret
sub
jae
into
or
scas
ret
std
and
inc
lret
insb
sbb
shrl
jp
in
mov
fdivs
ficoml
daa
je
add
out
inc
xor
add
xchg
outsl
xor
inc
sub
into
fcom
sub
adc
dec
in
push
or
into
cmpsl
jmp
sub
pop
fisttps
bound
fiadds
movsb
jl
fs
and
je,pn
mov
fildl
ss
pop
rcr
lods
pop
lods
out
jmp
inc
sub
leave
inc
cmp
and
test
int3
cmp
mov
push
incl
sbbb
inc
int3
jbe
in
pusha
clc
imul
sbb
std
push
dec
push
pop
jae
inc
std
in
iret
int3
icebp
lcall
and
movsl
pop
dec
and
aaa
lahf
ret
faddl
fdivrl
lds
stc
and
jge
xchg
in
stos
xchg
dec
adc
insb
push
rol
lret
mov
fcmovnb
out
or
rcr
popf
test
test
shlb
movsb
daa
lea
fadds
pop
jno
incl
or
in
fildl
in
jle
lret
jno
or
adc
add
testb
lods
jb
pop
mov
inc
sub
jecxz
les
mov
inc
movsb
pop
pop
sbb
add
pop
and
and
sbb
xor
int
mov
xor
xchg
xchg
hlt
sbb
es
popf
aad
gs
insb
xchg
xor
inc
add
das
into
std
cmpsl
int3
rorl
out
and
mov
inc
and
std
inc
cmpsl
pop
sahf
cmp
rclb
outsl
enter
std
ja
fsubl
lret
aam
int3
cmp
pop
aaa
ja
adc
bound
int3
or
cmpsb
pop
xchg
or
sbbb
and
xchg
push
or
aas
fstl
push
jl
test
enter
cmp
jno
push
sub
testl
gs
outsb
pop
popa
fnstenv
lret
mov
mov
mov
dec
call
fisubrl
adc
mov
enter
sbb
mov
pop
mov
cmp
lcall
imul
repz
jl
mov
ret
mov
dec
movsl
lock
insl
fiaddl
xor
cld
fwait
push
loope
dec
pop
ret
inc
popf
xchg
jmp
jne
add
inc
loope
orl
nop
xchg
cmc
leave
in
inc
stos
jecxz
mov
jg
xor
lahf
sbb
push
cmp
xor
flds
jbe
loop
adc
int3
div
gs
mov
cmp
clc
sbb
jle
clc
mov
push
cmp
xor
imul
imul
lahf
mov
mov
out
shrl
push
ljmp
ljmp
mov
xchg
lock
sbb
dec
mov
loop
jmp
fisubrs
sbbb
xchg
call
insb
pop
adc
insb
jp
adc
je
dec
into
repnz
and
or
jb
mov
sub
mov
test
sbb
dec
repnz
or
and
jno
test
xchg
dec
sbb
pop
pushf
xor
gs
je
and
jne
test
add
xor
xor
pop
lea
or
test
mov
push
jbe
into
push
cmpsl
stc
jno
add
pop
jo
popf
scas
mov
mov
andnps
addr16
pextrw
jge
testb
addr16
ljmp
inc
xchg
nop
mov
or
mov
pop
inc
push
jecxz
mov
outsl
mov
lcall
jne
jae
es
ret
sub
or
push
mov
sbb
push
mov
and
scas
lret
mov
jg
loopne
dec
movsb
lods
imul
and
push
xchg
dec
push
xor
pop
imul
cmpsb
mov
mov
ret
mov
mov
sbb
adcl
iret
sbb
gs
loop
jmp
ljmp
enter
mov
adc
iret
inc
int
adc
push
into
in
std
daa
mov
fwait
mov
repz
imul
sub
rorb
jmp
add
testl
sbb
lret
or
mov
outsb
incb
pop
dec
in
js
xor
insb
mov
sub
pop
inc
stos
int
adcl
sti
fildl
in
lock
test
sbb
call
out
mov
insl
pop
cmc
and
fnsave
and
mov
mov
add
mov
push
jmp
cmp
mov
jne
lock
frstor
das
sub
movsb
mov
popa
fwait
leave
adc
fisubrl
cmp
mulb
jmp
cmpl
push
je
icebp
std
stc
nop
mov
enter
sub
movsb
jae
lret
xchg
push
test
adc
fstpl
mov
mov
pop
fs
pop
out
sub
fwait
sub
xchg
or
sub
push
sub
xor
ror
xorl
int3
cmc
lea
lret
sahf
call
ja
std
out
dec
lods
mov
jno
dec
sbb
call
ror
jl
mov
push
push
sahf
sysexit
stos
inc
dec
jns
jns
jne
or
cmpsb
out
add
push
mov
fcoms
stc
mov
ss
jo
push
mov
and
jl
popf
dec
add
or
sbb
test
jbe
jo
and
nop
xlat
pop
fwait
inc
sar
mov
dec
imul
enter
mov
outsb
push
out
cmp
cmc
aam
in
push
cmp
rcl
popa
dec
in
sbb
gs
clc
push
push
xlat
mov
jp
cmp
call
addr16
mov
inc
test
inc
mov
push
bound
movsb
push
push
adc
out
cmpsl
cs
push
mov
orl
mov
cwtl
shlb
pushf
pop
adcl
loop
fcoml
out
xor
cmp
inc
dec
jp
shlb
call
test
cmp
lcall
add
out
adc
sub
rolb
xchg
fbld
sbb
jne
dec
lret
aas
pop
xor
arpl
ljmp
jb
pushf
imul
adc
arpl
or
sbb
cmp
ss
xchg
lahf
push
and
cmpsl
jno
cmpsl
out
jnp
lods
insb
ja
out
out
xor
xchg
cwtl
adc
stos
add
in
adc
ficoml
in
out
cmp
lods
adc
inc
pop
xorl
xor
cmpsl
fldl
out
out
xchg
outsl
jmp
movsl
cmp
gs
cmc
mov
icebp
or
fcoms
lods
out
insb
movsl
pop
test
movl
in
mov
fbstp
sbb
adc
add
or
mov
ret
movsl
sbb
inc
add
clc
sbb
neg
lods
ret
fnstenv
add
dec
cmp
xchg
lds
cmp
jge
mov
adc
and
test
stos
xor
in
mov
lods
adc
aaa
sbb
loopne
xchg
mov
daa
mov
subl
stos
divl
test
push
sub
and
sbbb
dec
cld
insb
hlt
and
cli
ds
jecxz
cmp
mov
sbb
dec
jge
mov
mov
stos
lret
jbe
push
dec
jg
es
sub
pop
testl
repz
addr16
sbb
test
and
mov
lds
fbstp
shrb
adc
int
scas
mov
jmp
aaa
loopne
push
repnz
test
cmp
sub
leave
out
in
push
scas
xchg
inc
loope
sbb
jb
gs
push
xchg
or
or
lods
mov
adc
test
pop
add
mov
out
cmpsl
lret
sub
jmp
jl
mov
jae
stc
mov
mov
sub
mov
cmp
inc
or
add
nop
inc
mov
xchg
and
inc
dec
int3
ret
loopne
loopne
shll
aaa
movsb
push
or
cmp
jp
icebp
mov
mov
fbld
shl
mov
rorl
mov
arpl
sbb
inc
xchg
arpl
mov
aas
notl
push
dec
or
roll
fmuls
push
and
fmuls
dec
daa
jmp
mov
add
nop
das
jge
pushf
dec
ljmp
jmp
push
pop
movsl
sub
add
inc
js
out
es
adc
inc
cmp
push
dec
out
out
cs
push
bound
fisttpll
pop
mov
stc
out
add
push
mov
movsb
mov
push
out
pop
fsts
pop
mov
aad
push
fidivrs
imul
jmp
into
pushf
bound
xorb
cmp
jp
mov
mov
push
lods
shlb
arpl
cmp
cli
sub
jns
testb
into
and
rolb
out
ljmp
outsl
xor
mov
xor
loop
pop
mov
push
aad
mov
fsubrl
jne
lea
lret
xchg
adc
cmp
xchg
imul
out
out
shrb
in
out
pusha
lcall
nop
std
jl
fmulp
xor
cmp
into
mov
test
ds
dec
lret
fwait
or
adc
aaa
idivl
fsqrt
pop
outsb
xor
inc
xor
jecxz
ljmp
mov
fistpll
mov
pop
ret
loop
insl
push
nop
addr16
call
cmc
out
mov
movsl
adc
shrb
leave
dec
dec
xor
fs
pop
inc
mov
ljmp
xchg
lret
movsl
mov
push
adc
sbb
sub
sub
movl
iret
daa
adc
xchg
pop
mov
cmp
ja
inc
aad
icebp
mov
dec
jnp
in
push
add
je
flds
les
out
push
insb
push
cmp
jecxz
sbb
andb
jbe
xchg
add
mov
mov
into
or
mov
lahf
mov
in
fcmovne
setno
aaa
sub
push
push
jb
data16
lahf
cmp
pop
fwait
add
push
scas
lock
adc
test
ffreep
sub
xchg
dec
push
adc
fucomi
and
push
in
test
xor
xchg
cltd
adc
clc
xor
sbb
pop
fisttpl
pop
cmp
jne
aam
mov
repz
mov
mov
pop
adc
daa
add
inc
cld
js
push
inc
dec
xor
mov
daa
jnp
jne
mov
repnz
lods
fsubrl
or
xor
mov
push
push
cli
sub
pop
and
pop
imul
adc
lcall
daa
push
push
dec
pushf
sub
into
xchg
sahf
arpl
lret
pop
add
ja
stos
repnz
cmpsb
inc
enter
sbb
pop
test
fdivrl
ja
rorb
cwtl
test
std
cli
xchg
sub
movsb
inc
xor
mov
cmp
into
data16
dec
mov
fistl
repz
mov
xlat
cmpsb
cltd
in
aas
xchg
push
sbb
ljmp
mov
arpl
cld
add
shrl
fsubs
mov
bound
imul
mov
jae
adc
scas
add
jae
pop
aad
xor
push
fstpl
mov
push
mov
cmpsb
inc
pop
inc
mov
inc
sbb
inc
cmp
in
fs
mov
push
inc
pop
cmpsb
mov
sub
or
fadds
movsb
push
cmp
xlat
xchg
scas
shrb
jnp
jmp
pop
test
or
cmpsl
xchg
adc
out
lock
mov
or
test
loopne
rcll
push
sub
push
ret
pop
loope
mov
aaa
ss
aad
cli
mov
aas
out
icebp
and
pop
sbb
arpl
push
mov
push
iret
nop
sbb
fwait
sbb
stos
insl
repnz
or
sub
mov
pushf
and
pop
cmp
or
psubd
xchg
inc
into
in
std
xorb
icebp
push
lods
imul
sbbl
shl
mov
mov
sbb
push
lret
lds
das
pop
imul
jp
adc
and
std
pop
loopne
sub
ljmp
add
in
mov
push
inc
mov
sti
mov
xchg
and
pop
in
enter
mov
pop
fisubl
jg
cwtl
dec
leave
pusha
mov
add
push
mov
repz
jecxz
push
cmpsl
fnsave
push
add
fldt
fdiv
ret
rorl
sub
push
push
movsb
std
popa
adc
pusha
add
push
js
imul
add
in
orb
pop
ficoms
fstl
sub
dec
pop
decl
in
sub
test
xor
jnp
cmp
mov
mov
or
fiaddl
jecxz
sbbl
mov
mov
pop
push
cmc
loop
sub
mov
stos
mov
jl
popa
cmp
aam
push
lds
lahf
jge
ret
inc
mov
loop
test
pop
movsl
aad
sahf
push
cwtl
add
ret
fs
xchg
push
fisubl
std
sbbl
clc
mov
loopne
fwait
add
add
sbb
inc
stos
jnp
in
mov
nop
push
xlat
mov
popf
cmp
cmp
push
cwtl
fnsave
mov
push
pusha
xchg
push
xchg
pop
cmp
in
push
mov
cmp
xorl
notl
or
push
fistps
jle
sub
or
shl
mov
mov
pop
add
mov
mov
popf
inc
push
cmp
out
mov
movsb
mov
push
jg
scas
xor
cmpb
pop
gs
inc
lret
pop
pop
stos
sub
cltd
or
dec
jno
mov
or
rolb
gs
movsl
jo
dec
xchg
sbb
mov
pop
enter
gs
sub
popl
js
in
jle
xchg
imul
fidivrl
inc
xchg
pop
push
in
std
test
adc
cmp
fildll
out
jmp
ss
test
lret
jge
pop
sbb
cs
adc
jecxz
jecxz
cli
js
repz
ja
sti
cli
fwait
pop
adc
cmpsl
test
test
mov
pop
aad
xchg
mul
mov
loopne
xchg
mov
clc
or
mulb
cmpsl
adc
ja
loop
xchg
outsl
dec
mov
stos
mov
jo
stos
mov
xor
outsl
in
push
test
pop
dec
xor
mov
int
and
cmp
in
icebp
push
jecxz
test
mov
loope
jecxz
ficoml
xor
scas
lods
jg
adc
and
fs
xchg
push
sub
ret
inc
ret
ds
jne
or
add
xor
es
and
mov
and
cwtl
dec
jae
adc
clc
adc
out
inc
inc
je
lret
mov
ljmp
inc
add
shr
inc
xchg
lret
popa
sbb
xchg
rcrl
cs
insl
and
add
pop
pop
cmp
in
adc
aam
mov
mov
sbb
lds
lods
int3
cwtl
test
mov
xor
mov
scas
test
or
cmp
orl
imul
cmp
outsb
jbe
gs
js
pop
inc
ds
ss
jp
outsl
inc
int3
or
jnp
cmc
int
sarb
add
pop
sub
push
xor
imul
stos
jbe
inc
roll
mov
jae
xor
dec
or
lret
sbb
scas
jg
fnstenv
adc
leave
pusha
mov
jo
or
jo
adc
rcr
iret
add
scas
test
fadds
aaa
jl
or
jl,pn
das
fists
mov
push
fwait
push
aam
xorl
ss
mov
fcos
pop
adc
loop
lds
mov
inc
cmp
lods
cmpl
call
into
cmp
out
push
adc
das
push
iret
nop
cmc
scas
inc
fldln2
jmp
jns
mov
in
ja
push
shll
push
mov
cmpsb
mov
or
mov
jae
imul
je
mov
push
jmp
lods
jae
cmp
sub
fidivs
or
cmpsl
and
inc
xor
das
fmuls
pop
outsl
movsl
inc
into
jge
stc
mov
and
test
into
hlt
push
pop
dec
mov
pop
cmp
pop
loope
insb
ret
shlb
cs
scas
mulb
aas
dec
arpl
repz
dec
fs
xchg
pop
inc
push
dec
mov
xchg
aas
mov
cmc
adc
jae
xor
pop
loope
xor
rcr
or
test
inc
popa
mul
shl
in
mov
inc
pusha
xlat
dec
and
clc
xchg
scas
pop
lock
lahf
inc
insl
mov
cmp
xchg
fs
or
push
pop
and
pop
scas
out
sub
push
pop
dec
adc
loopne
mov
and
lock
sbb
inc
stos
lods
shlb
mov
out
test
push
xchg
lock
int
insb
pushl
jnp
gs
xor
xor
insb
das
cmp
pushf
pop
inc
dec
movsl
les
das
idivb
std
mov
sbb
inc
sbb
loop
cmpsl
or
shlb
sti
int3
mov
hlt
cmp
fisubs
int3
mov
sbb
jp
aam
fists
cmp
popf
divb
lea
xor
in
cmpsl
push
ja
mov
jecxz
xchg
fstl
and
xor
out
mov
dec
jmp
ljmp
movsb
add
sub
mov
and
cmp
mov
jo
cmp
or
fdiv
outsl
push
je
dec
dec
in
int3
loop
ficoml
push
les
push
ret
lds
inc
add
out
stc
mov
add
daa
sbb
test
cmove
andb
pop
xchg
mov
aad
out
xor
mov
xchg
mov
scas
dec
jae
mov
xchg
inc
sar
dec
lea
xchg
sub
add
std
mov
les
jp
push
sbbl
sub
bnd
outsl
loope
jecxz
aaa
mov
call
add
pop
sarb
adc
push
push
daa
push
arpl
out
out
pop
dec
xchg
mov
shlb
sbb
popw
or
je
lock
push
pop
mov
rclb
std
imul
jle
std
or
sarb
sub
ja
ret
mov
fsubr
dec
dec
and
jle
pusha
jge
sti
add
push
rclb
dec
addl
fs
out
sbb
sub
add
pop
dec
pop
or
aam
mov
pusha
sub
dec
mov
mov
sub
cmp
test
inc
or
aam
in
and
call
sub
ret
jle
xchg
sub
fisubrs
shrb
xchg
jmp
sub
xor
out
add
imul
icebp
cmp
sub
aad
dec
jmp
loop
jae
iret
stos
xor
stc
std
fidivrs
mov
imul
gs
pushf
jns
inc
mov
sub
push
pop
jae
or
adc
cli
in
push
testb
movsl
outsb
dec
xor
push
pop
xchg
subb
xchg
popa
mov
in
in
and
xor
stc
orl
cmp
nop
les
pushf
int3
add
push
notb
xchg
repnz
fwait
gs
jg
test
fstl
into
stos
fdivr
jge
sub
int
scas
mov
adc
mov
mov
ret
xor
test
pop
fisubrs
fists
pop
push
sbb
fistps
enter
mov
cmp
sub
mov
mov
js
ret
and
pop
aaa
cmp
pushl
out
pop
dec
mov
vmwrite
inc
test
mov
inc
dec
mov
inc
lret
lock
in
add
incb
mov
xor
std
jl
push
push
lods
mov
or
rol
add
cmp
sub
xchg
sbb
push
pop
iret
adc
dec
pop
lcall
lea
nopl
mov
sbb
sbb
nop
into
test
mov
add
inc
rcrb
mov
xchg
mov
hlt
and
and
pusha
jp
in
stc
mov
cmp
jb
dec
dec
pop
jns
ss
test
mov
dec
gs
xchg
shrb
ds
mov
mov
jle
popf
leave
add
inc
or
pop
push
pusha
dec
ja
enter
movsb
mov
xchg
test
movsl
cmp
ds
shl
in
push
data16
or
shlb
xchg
dec
jp
mov
arpl
rorl
sub
inc
xchg
aam
in
insl
fwait
mulb
xchg
push
xor
jbe
dec
jbe
xchg
stos
nop
mov
fdivr
cmp
out
ficoms
test
lahf
test
add
jb,pt
rol
push
mov
mov
add
mov
pop
or
push
mov
push
icebp
fwait
inc
outsl
aas
sbbl
dec
xchg
xor
push
or
jp
lcall
inc
adc
pop
push
adc
shrb
rorl
mov
cmp
fisttps
icebp
outsb
xor
jnp
cmpl
in
jnp
stc
daa
add
xor
enter
loope
add
add
ds
inc
mov
ds
mov
inc
loopne
mov
cmp
xchg
or
in
stos
xlat
insb
pop
jno
pop
jg
or
addr16
add
test
scas
inc
into
pusha
out
and
jecxz
xor
push
pop
mov
in
pusha
dec
mov
inc
fisttpl
test
aas
mov
imull
rcrl
sbb
cs
test
and
in
cmp
push
inc
ja
icebp
cwtl
ja
dec
lret
shll
icebp
insb
out
popa
mov
cltd
lret
ja
ret
push
std
lock
fnsave
xor
rcrb
sub
or
add
mov
push
out
cmpsb
int
jns
and
dec
adc
lock
movsl
cmp
inc
push
xchg
xchg
popf
sub
mov
pop
ficomps
loope
ja
sub
stos
fimuls
push
loop
xlat
outsl
xor
ret
sbb
jae
jae
add
cmp
or
xchg
dec
ja
les
mov
lods
xchg
cmpl
pusha
dec
mov
xchg
clc
int3
mov
adc
pop
out
out
inc
adc
and
addr16
xor
imul
mov
loop
fs
inc
sbb
mov
sub
jae
pop
shl
aaa
daa
aad
add
xchg
adc
idivb
in
sub
pop
and
ret
mov
push
pop
inc
adc
ja
xchg
push
sbbl
pop
loope
inc
jno
jle
out
push
cmpl
xor
loope
sub
mov
es
aad
jge
pop
stos
mov
dec
mov
ljmp
cltd
push
and
repnz
xor
xchg
jnp
inc
xor
push
or
movsb
push
cld
out
loope
loop
cltd
cs
mov
push
mov
inc
in
popf
lea
outsl
sbb
jae
push
out
xor
aad
push
xor
scas
pop
inc
leave
cmp
arpl
bndldx
push
push
fcomps
pop
stos
inc
enter
jo
imull
mov
dec
mov
sbb
inc
cmp
mov
sub
loop
shlb
ret
xchg
lock
aam
and
pop
ja
jno
add
out
sbb
pop
int
in
mov
xchg
js
dec
scas
sti
gs
adc
sub
aad
sbb
sub
cmpsl
jnp
fidivl
shlb
jmp
jl
or
stos
ja
xlat
cltd
addr16
mov
iret
mov
fcompl
inc
arpl
ficoml
cmp
dec
ret
ss
movsl
faddp
mov
mov
sub
les
fsubrp
mov
mov
push
sarl
daa
sbb
sbb
adc
fwait
into
jmp
xchg
pop
xchg
pop
fadds
mov
adc
pop
jge
mov
shrb
fsubl
mov
decb
jge
and
pop
rol
and
push
mov
ss
and
stos
mov
push
out
lds
adc
lds
pop
xchg
xor
or
xlat
out
add
mov
inc
cmp
sti
jbe
push
rcl
xchg
mov
pop
nop
and
push
inc
fidivs
and
mov
sbb
xchg
pop
fwait
pushf
repz
dec
cmpsl
mov
xor
add
cmpsb
lcall
push
sbb
aad
rcrb
pop
dec
inc
push
cld
rcll
xor
add
mov
lret
pop
xor
cmp
fldcw
in
pop
orl
adc
push
add
push
cmpsb
sahf
sbb
dec
and
jno
sbb
aas
mov
cmpsl
sahf
aas
jae
sub
call
pop
adc
insb
jp
push
rorb
cmpsb
je
je
pop
xchg
das
inc
ja
in
sub
cmp
roll
jnp
xchg
and
pop
adc
mov
inc
daa
pop
lods
xor
test
nop
fucomi
pop
jmp
in
cmp
stos
popa
negl
imul
or
sarb
and
or
mov
dec
add
mov
mov
mov
ljmp
daa
clc
andl
xor
adc
jae
repz
mov
stos
sub
imul
jnp
mov
movsl
mov
xor
cmp
pop
popl
lcall
xorb
in
or
pop
cltd
addr16
mov
xor
out
xor
stos
test
movsb
fldt
jno
push
xchg
or
in
xchg
cmpsl
sti
insl
mov
push
push
imul
lahf
mov
idivl
dec
pop
outsb
or
inc
inc
xchg
mov
mov
mov
insb
sbb
push
jmp
std
shr
mov
lea
stos
jl
cmpb
sarl
pop
mov
rorb
test
arpl
cmpsl
add
out
jne
ljmp
lods
jnp
xchg
jo
adc
pop
pop
daa
mov
pushf
sarl
sub
sbb
fstpt
xchg
dec
or
xor
add
fwait
shll
add
call
sbb
mov
bound
push
or
out
ror
push
mov
test
cmp
add
pusha
mov
sub
and
sbb
fldcw
xor
sub
cli
sti
clc
rcr
mov
aas
test
hlt
shr
orb
add
jbe
lods
jecxz
push
or
sbbb
push
push
xor
and
mov
lock
lds
outsl
jle
mov
ret
arpl
mov
movsb
dec
jge
test
ljmp
pop
mov
cltd
jmp
test
je
xor
das
sbb
add
xorl
icebp
xor
add
jp
jge
sahf
lea
pop
adc
xchg
add
xor
int
bound
stos
andl
jne
or
cs
adc
pop
out
and
jae
dec
jmp
inc
or
jmp
dec
and
repnz
mov
in
jp
das
dec
arpl
adc
adc
mov
negl
cmp
fisttpll
outsb
in
mov
dec
push
shl
jo
sub
call
and
mov
mov
in
insb
inc
jb
mov
sbb
add
add
cs
insb
and
fidivs
out
cmp
mov
adc
mov
or
inc
xor
sbb
push
idivb
out
add
xor
fsubrs
orb
gs
adcl
add
sbb
and
fisubrl
cltd
imul
movsb
cmpsb
adc
test
in
jb
dec
fwait
enter
mov
sbb
stc
cmpsb
pop
push
repnz
inc
cmc
jmp
ja
xor
leave
in
or
in
loop
inc
das
pop
aaa
bound
scas
pop
sub
mull
sub
arpl
jmp
movsb
dec
mov
mov
fildl
cmpsb
mov
test
fdivl
divl
lahf
xchg
inc
les
adc
rcrl
inc
cli
testb
mov
fcmovnbe
adc
out
out
and
push
or
jle
jb
push
xor
in
mov
or
pop
imul
repz
sub
fstpt
mov
rcl
es
and
mov
mov
hlt
dec
lea
jno
lea
sti
inc
fxch
pop
testl
shll
push
mov
movsb
sub
xor
xlat
popf
loopne
stos
and
and
fcmovnb
push
aaa
mov
pusha
sbb
push
or
lgdtl
add
lods
shl
mov
movsl
lods
inc
lods
inc
popf
jl
jo
ljmp
adcl
jae
loope
jg
sub
and
sti
addr16
mov
inc
inc
mov
dec
ja
fwait
push
add
adc
cmp
dec
xchg
call
dec
mov
cmp
mov
add
pop
or
test
mov
and
out
push
and
imul
repnz
inc
cmp
loop
lods
lds
pop
aam
jno
mov
sub
xor
pushf
in
sub
in
mov
pop
pop
pop
cmp
shl
enter
cld
stos
ret
ljmp
mov
jmp
mov
xor
sub
imul
jl
dec
mov
test
push
out
sbb
xorl
dec
pop
cmp
mov
into
insb
xor
pop
mov
out
outsl
sub
int
jnp
pop
sbb
cmp
aam
movsb
inc
jmp
sbb
adc
or
xor
test
mov
push
cld
pop
sbb
xchg
test
xor
cmp
xor
pop
mov
fwait
cmp
or
movsl
xor
inc
mov
fidivl
test
aaa
push
or
lcall
xchg
mov
mov
pushf
popa
dec
gs
adc
test
sbb
iret
push
jae
pusha
mov
xor
and
jle
jecxz
sub
and
test
mov
test
push
loop
dec
pop
js
sahf
inc
jns
nop
sbb
push
lret
enter
and
mov
or
shrl
movsb
jo
cltd
mov
mov
clc
cmc
in
inc
mov
lea
mov
outsl
jo
test
jmp
jge
bound
mov
fmull
insb
jo
mov
or
xor
rep
insb
pop
gs
dec
mov
mov
outsl
aas
in
hlt
sti
pusha
bound
imul
lods
mov
sub
cmp
inc
lret
jle
xchg
or
ret
lods
cli
mov
in
test
dec
fsubr
fwait
popa
cmp
movsb
fcmove
xor
js
mov
pop
stc
mov
jns
mov
dec
in
test
lods
je
aad
mov
jbe
pop
lock
jae
ds
pop
in
in
cmp
rcrb
and
push
stos
sbb
and
adc
leave
mov
testb
pushf
cmp
sbb
cltd
fsubp
add
inc
std
push
stos
subb
sub
int3
sub
repz
mov
movsb
sarb
jg
out
cltd
jp
sub
jo
enter
and
or
mov
pop
mov
jg
mov
cmpsl
mov
addb
or
mov
in
mov
out
fcompp
jge
data16
cs
subl
int
xor
movsl
pop
fwait
push
out
mov
xchg
jmp
sti
mov
xor
jb
shrb
or
ret
popa
xchg
xlat
jge
sbb
xor
fnstsw
das
push
adc
and
xlat
test
cmc
rep
adc
mov
repz
xor
cltd
insl
or
push
inc
sub
xor
sbb
xchg
push
cmpsl
rcl
and
jo
or
sub
xchg
and
cmpsb
mov
aaa
repnz
pop
dec
xchg
int3
in
cmpsl
cmp
xor
push
fsubrs
mov
lret
mov
or
jns
jnp
inc
mov
cltd
xor
mov
or
inc
fldcw
mov
pop
xchg
adc
dec
mov
dec
or
stos
mov
shlb
lods
push
push
push
and
xchg
fadds
add
fldl
lahf
jno
lahf
xor
xchg
add
fsub
push
mov
nop
mov
cltd
dec
ror
rcrl
jnp
mov
dec
push
loopne
insb
mov
repnz
mov
aam
dec
xor
xor
adc
fidivrl
dec
mov
aaa
jbe
fucomip
imul
loop
mov
lea
scas
jbe
jnp
outsl
dec
cmpsb
fs
and
lret
outsb
nop
adc
xchg
mov
imul
test
inc
and
scas
pop
shl
xor
lock
loopne
pop
jmp
in
jl
xlat
mov
movsl
cli
xchg
and
xor
fwait
mov
and
shl
hlt
pop
jnp
lret
jmp
in
or
adc
jno
jecxz
and
ds
cmp
out
push
out
lea
iret
sarb
fs
ficomps
bound
out
and
fcoml
test
sarb
adc
addl
mov
mov
dec
xchg
adc
or
lea
test
mov
int3
subb
ja
dec
rcrb
sbb
cmp
jecxz
pop
sbbl
dec
insl
leave
inc
add
addr16
ljmp
and
loope
dec
bound
adcl
and
in
inc
xor
push
mov
mov
inc
popf
hlt
scas
rcl
cmp
cmp
sti
xchg
sbb
jns
aam
add
test
jb
adc
repnz
lret
lods
imul
mov
cmc
add
push
mov
enter
dec
test
pusha
vmwrite
add
and
xchg
fsubrl
enter
iret
ret
ja
fidivs
mov
jns
js
sbb
insb
sarb
push
rcr
pop
jmp
and
fcompl
hlt
roll
repz
jbe
jb
pop
addl
inc
mov
in
fucomp
int3
and
sbbl
popf
shll
mov
aad
jnp
fs
test
inc
je
lahf
pop
and
push
data16
lods
or
push
dec
xlat
shll
jecxz
pop
repz
jno
sub
jmp
mov
fisubrs
or
lea
imul
jmp
daa
out
je
jl
or
inc
in
mov
cmc
imul
fstpt
adc
cmp
cmp
xchg
pop
jno
cs
and
dec
imul
out
sub
and
loop
mov
shl
mov
fwait
lahf
cmc
fidivl
cmpsl
scas
jb
jno
lea
sar
xor
inc
mov
in
push
push
je
ja
xor
jb
out
push
push
xor
push
loope
std
and
cmpsl
lret
xchg
inc
xorl
and
cwtl
push
lods
lahf
sahf
ret
mov
dec
jp
mov
popf
in
jl
movsb
xchg
mov
scas
fldt
mull
and
jmp
es
out
cli
in
hlt
scas
repz
adc
loopne
dec
xor
movsb
adc
bound
push
bound
imul
fcomps
dec
daa
pop
pusha
mov
clc
jo
int
adc
cmp
repz
push
adc
roll
jle
das
out
xor
aaa
ror
cmpb
inc
test
cwtl
rcrb
fdivrl
sub
lock
in
mov
jl
bound
add
orb
fadd
ljmp
push
add
and
pop
or
jae
icebp
addr16
sub
pop
sti
add
push
stos
mov
inc
stc
out
int
gs
push
mov
clc
fisubrl
divb
test
sub
mov
and
insl
add
fs
scas
das
mov
xchg
cmp
in
fistpll
mov
pop
xchg
aad
cs
jmp
xor
shll
inc
push
cmpsl
cmp
xchg
imul
mov
dec
adc
xchg
ds
rorb
int
inc
sar
mov
sbb
lea
pusha
inc
mov
test
sbb
jno
scas
inc
adc
mov
sub
loope
jecxz
lret
xor
test
cmp
rcrb
bound
lds
addr16
sbb
jl
cmp
jle
cld
cwtl
jge
fmull
cwtl
std
cmpsb
movb
and
out
shll
sbb
clc
or
add
push
outsl
mov
lock
pushf
push
testl
mov
sti
jbe
aas
mov
cs
mov
or
test
add
pop
sub
xchg
mov
adc
xchg
or
out
jo
sbb
in
int
inc
cld
cmp
repz
sub
mov
ja
push
pop
cmpsl
cs
imul
xchg
mov
adc
xchg
bound
dec
sbb
fbld
inc
jns
stos
iret
jmp
push
sub
enter
aad
pop
push
add
sbb
je
cld
pop
push
add
scas
xchg
jl
adc
insb
ljmp
ret
fwait
mov
shl
xchg
sub
std
sub
push
sub
sub
mov
push
mov
pop
cmp
dec
loop
cmp
jle
mov
mov
fst
jno
adc
movsb
outsl
mov
cmpsl
cmp
outsb
insl
add
or
loopne
jo
hlt
inc
int3
pop
and
xchg
or
inc
push
or
add
pusha
jmp
in
clc
stc
and
stos
push
idivl
incb
dec
inc
cmp
xchg
scas
out
shlb
adc
xor
pop
data16
sub
addr16
mov
and
xlat
and
and
add
add
in
mov
mov
cld
popf
cmp
shlb
mov
pop
cmp
pop
out
testl
pusha
add
lods
sub
xlat
dec
push
mov
enter
aas
mov
mov
js
inc
adc
pop
adc
sti
js
and
or
adc
xor
pop
jg
cmc
sbb
decl
popf
lret
fstps
push
call
pushf
cmpsl
roll
mov
jmp
push
mov
mov
mov
enter
sub
and
mov
sbb
inc
push
arpl
clc
jg
cld
jl
pop
inc
cmp
in
aaa
lds
lods
push
je
jb
push
mov
mov
mov
or
push
ror
push
mov
jmp
addr16
pop
xchg
cs
push
push
xor
pop
rorb
add
cmp
shrb
xlat
leave
push
cmpsb
mov
stc
sub
sahf
add
mov
stos
mov
or
adc
lcall
jbe
mov
dec
pop
add
jnp
xchg
popa
rcl
bound
xchg
xor
pop
lods
mov
dec
or
aam
cmp
fbstp
mov
ret
test
push
out
sbb
jg
lods
out
cmp
in
adc
mov
or
inc
jg
cmp
rcll
sbb
mov
push
fmuls
lock
cltd
div
rcl
and
fwait
mov
pop
gs
je
loop
xor
jo
and
xor
icebp
sub
int
clc
push
fs
or
stos
mov
mul
fsubrs
in
jp
mov
cld
inc
mov
lds
imul
lcallw
mov
sbb
cmp
into
dec
sahf
fcmovnbe
and
mov
loope
out
mov
sbb
icebp
in
sahf
xchg
jo
xor
fs
jae
gs
dec
fdivs
dec
jecxz
cmp
movsl
loopne
jecxz
add
iret
imul
mov
mov
sub
pop
add
gs
pushf
push
je
pop
scas
ret
cli
cwtl
arpl
fldln2
xchg
mov
mov
sub
outsl
aam
mov
push
pop
ja
push
mov
les
lock
subl
mov
adc
sub
call
dec
in
and
std
push
leave
cmp
aas
and
and
xchg
addr16
out
arpl
repnz
or
xor
shlb
lock
arpl
sbb
lods
arpl
push
cwtl
nop
jge
jl
sbb
push
push
adc
inc
dec
jne
loop
fisttpl
mov
xor
int
inc
add
sub
push
pop
cmp
int
popf
scas
pop
cmp
xor
xchg
jne
mov
and
in
pop
icebp
inc
mov
imul
mov
pop
mov
int
push
cli
mov
cmp
push
mov
push
dec
add
inc
or
xchg
ret
push
inc
jb
mov
sbb
mov
in
stos
ja
popa
mov
adcb
ss
js
test
out
les
ret
popa
pop
out
sub
and
cmc
cli
mov
cmp
pop
or
sbb
mov
xchg
xchg
xchg
hlt
mov
jle
fcmove
and
push
mov
adc
scas
push
cltd
insb
sub
es
sbb
negl
sti
pop
test
fldlg2
pop
lret
and
push
xchg
xlat
imul
push
push
mov
lret
out
shll
sbb
inc
push
lcall
imul
add
out
add
ja
pop
and
mov
cltd
xchg
enter
aad
loop
js
push
cmc
and
rclb
xor
js
pop
sahf
in
mov
xor
xchg
sbb
ljmp
pop
shll
mov
push
stc
fs
push
and
iret
cmpsl
push
out
mov
push
rorl
mov
mov
test
sbb
or
bound
nop
rorb
insb
mov
sub
push
and
inc
mov
dec
ss
lret
xchg
and
mov
jb
bound
cmp
pop
andl
stos
cs
repnz
imul
lods
popa
out
jecxz
push
imul
call
or
cmp
fildll
mov
sbbl
xchg
add
xor
ret
clc
aam
jns
add
jo
aas
mov
xorl
movsl
push
xor
test
jl
test
aas
mov
dec
icebp
aaa
push
add
pop
mov
mov
adc
push
repnz
popa
sub
cmp
mov
dec
push
call
push
or
pushf
push
scas
test
hlt
les
ljmp
pop
sub
xchg
pop
shll
fildll
sbb
popa
push
adc
add
and
cwtl
cwtl
dec
daa
in
inc
test
scas
pop
cmpsb
jecxz
lds
imul
jns
mov
jae
es
pop
mov
add
gs
in
imul
cltd
push
push
filds
push
aam
push
in
jmp
sub
add
loope
and
leave
adc
xor
lods
xor
and
repz
pop
xor
jae
adc
lock
dec
adc
mov
arpl
push
loope
fistps
and
jmp
pop
loope
push
or
adc
cltd
xor
les
lock
jo
xchg
sub
test
inc
adc
add
push
mov
mov
dec
xchg
andb
push
push
xchg
cmpsl
pop
mov
mov
aam
sub
pop
loopne
cmc
add
add
mov
adc
int3
stos
insb
repz
imul
jae
add
sub
inc
or
out
adcb
sbb
push
test
sbbl
insl
jo
andl
adc
fistps
imul
xchg
mov
dec
push
int
in
sub
xchg
cmp
in
add
adc
cld
lret
out
push
lea
loopne
and
addr16
cmp
cs
xor
push
int
enter
in
and
addr16
dec
dec
mov
or
jno
jb
iret
aam
out
sub
cmp
pop
xor
pop
or
shrb
sbb
insl
add
adc
cld
adc
stos
jmp
mov
test
or
add
add
xor
sub
cld
xor
xorb
pop
push
push
xchg
mov
cmp
jp
pop
adc
out
pop
or
js
sub
sub
mov
inc
dec
ljmp
arpl
fbstp
icebp
mov
jne
or
add
movsb
sub
inc
mov
pop
out
pop
sbb
adc
xor
and
into
xor
mull
jecxz
xchg
xor
lahf
rclb
xchg
std
in
scas
notb
pusha
in
jno
ljmp
mov
aad
call
lret
or
pop
sub
std
push
push
jmp
call
scas
xor
pop
cmp
imul
in
pop
outsl
nop
jne
pop
aas
mov
adc
leave
rcll
xchg
sahf
sahf
sbb
stos
or
cmp
jmp
push
inc
cltd
dec
jp
clc
call
pop
jnp
pop
out
into
popf
lret
pop
xchg
movsb
jl
pop
mov
stos
lds
and
mov
call
push
cmp
js
cmp
pop
lock
fdivs
pusha
cltd
int3
inc
iret
ljmp
dec
fs
xor
xchg
scas
mov
fwait
sarb
roll
cmp
mov
push
sbb
dec
js
inc
sbb
adcb
rol
nop
dec
in
push
imul
or
mov
xor
movl
add
pop
ret
xchg
bound
xchg
add
sbb
test
stc
mov
sub
jmp
sub
jb
mov
shll
xchg
mov
shl
fstpl
loop
inc
mov
pop
dec
push
scas
mov
hlt
pop
fcoms
jo
mov
jae
mov
jle
mov
rcrl
fidivl
dec
jne
pop
fsubs
aad
or
xor
outsl
mov
int
xchg
popa
cli
jnp
xchg
imul
mov
movd
insl
pop
mov
dec
inc
push
adc
out
shl
pop
mov
jmp
in
icebp
xorb
mov
mov
adcl
push
mov
pusha
dec
dec
add
stos
icebp
sub
stos
in
cmp
or
outsb
cld
insb
ficoml
or
fnstsw
mov
negl
sbb
pop
adc
inc
xorl
or
jno
loope
pinsrw
pop
test
dec
addr16
lahf
ss
cmpsb
in
jne
sti
mov
ficompl
jp
aad
std
fs
popa
lods
or
jecxz
dec
lahf
aas
mov
aas
jo
ljmp
popa
popa
cs
pop
rdpmc
in
jne
aaa
sbb
enter
adc
xchg
cmpsl
les
outsl
mov
fisubl
jl
add
mov
add
or
sub
gs
repz
pop
or
and
lds
inc
fdivrs
jne
adc
shrl
out
or
inc
jp
les
jmp
insl
leave
and
sub
jb
vorps
push
sub
dec
jae
xchg
aas
jae
pop
or
sar
sbb
inc
xor
mov
orb
loope
push
cwtl
jo
repnz
jnp
ja
popf
or
and
sbb
sub
fs
sbb
inc
mov
addr16
xor
jne
cmp
xor
mov
push
out
fwait
in
movups
subb
mov
fxtract
icebp
jbe
or
repnz
sahf
cmp
and
sub
cld
loopne
cmp
mov
dec
cmp
test
sub
pusha
icebp
ret
hlt
je
aas
addr16
cmp
dec
lock
xor
sbb
sub
push
sub
popf
xchg
and
pop
shll
jno
in
shll
ret
inc
daa
mov
aaa
imull
movsb
rorl
and
pusha
mov
mov
into
popa
jecxz
add
xlat
pop
gs
adc
or
inc
movsb
mov
ror
and
adcb
ds
subl
dec
xchg
bound
xlat
xchg
mov
jle
test
push
cmp
shl
fildl
mov
lea
mov
mov
fildll
loopne
fs
adc
pop
sbbl
dec
addr16
or
mov
pop
pop
push
in
pop
fdivr
int
fildll
inc
movsl
adc
or
xor
insl
adc
pop
dec
arpl
cmp
mov
jmp
subb
test
push
or
and
je
lock
std
and
in
movsb
in
dec
imul
outsl
jmp
out
dec
cwtl
sub
push
movb
inc
rcr
cmc
iret
call
clc
add
cli
je
test
xchg
lret
repz
repnz
xor
shlb
lea
fistl
and
push
push
mov
ds
testl
sub
adc
scas
dec
cmpb
dec
dec
in
push
mov
push
ds
cld
fs
rcr
test
loop
nop
or
adc
pop
mov
out
dec
cli
mov
into
scas
and
ficomps
sahf
and
cs
sbb
push
aam
gs
mov
pop
int3
negb
scas
iret
pusha
ss
mov
cmc
rcr
lock
ret
xchg
out
push
nop
push
cmp
aas
push
jge
shll
xor
inc
xor
scas
sub
imulb
inc
pop
mov
roll
out
inc
movsb
popf
push
in
outsl
mov
or
sbb
arpl
jbe
push
int3
das
sbb
ds
push
push
or
aas
hlt
fwait
dec
inc
int3
and
jno
adc
mov
xchg
leave
adc
fsts
sub
daa
xchg
cs
lret
outsl
rcr
dec
jp
or
add
fmull
icebp
pop
xchg
xchg
cmp
loop
jmp
movsl
cmp
cli
subl
xchg
paddw
mov
mov
push
and
pop
xor
lret
mov
orl
inc
push
ret
mov
into
jnp
sub
mov
push
daa
sub
xlat
mov
xchg
xchg
scas
movsl
fmulp
adc
and
neg
mov
lahf
push
divb
dec
lock
daa
cmpsb
ror
jb
negb
adc
push
cli
jle
mov
or
std
push
loopne
dec
aad
lock
lea
cltd
or
cmp
mov
dec
out
shll
incl
leave
adc
stos
mov
xchg
repnz
negl
and
fs
fisttpll
xchg
jbe
xchg
aas
lock
stos
mov
insb
push
or
js
sub
into
pop
data16
imul
cmp
loop
cmp
mov
mov
push
jg
or
cmp
jno
aam
popa
dec
movsb
push
sbb
pusha
mov
test
or
out
mov
dec
out
push
push
pushf
jae
dec
sbb
mov
pop
and
loop
or
aas
adc
inc
dec
xchg
scas
jo
out
lahf
pop
hlt
pop
xor
jmp
adc
mov
adc
adc
lahf
in
push
add
sbb
int
or
sahf
negb
sub
add
adc
imul
and
jns
or
jb
outsl
test
push
aas
lods
es
lcall
je
adc
adc
std
push
es
mov
push
test
insb
mov
movsb
add
push
subb
stos
pop
inc
sarb
or
mov
movsb
fdivl
sub
out
test
jb
sarb
sbb
jo
push
xlat
cmpl
cmp
or
xor
pusha
cltd
sbb
adc
shl
mov
fistpll
popf
addr16
inc
sbb
movsl
pop
imul
pop
mov
pop
rcr
inc
mov
das
jo
add
adc
pushl
shll
xor
mov
es
push
lahf
outsb
mov
push
push
inc
rclb
js
pop
sbb
pop
dec
push
xchg
push
jns
cli
popa
mov
sub
mov
scas
dec
stos
pop
hlt
xlat
lcall
xor
test
xor
shrb
sub
test
mov
and
into
and
pandn
icebp
jb
test
clc
add
jmp
xor
xorl
lods
push
inc
and
call
jae
dec
stos
loope
sar
push
dec
stos
xlat
dec
js
push
inc
mov
fmull
das
xor
push
in
mov
out
lock
nop
shlb
in
test
jbe
divps
lret
jno
movsb
cmp
mov
push
ucomiss
xchg
xor
jg
out
mov
pop
mov
gs
out
xchg
cwtl
outsb
out
or
mov
insb
jg
enter
addb
dec
or
jbe
pop
fsubp
scas
rolb
movsl
mov
sbb
push
sub
rorl
out
lahf
repz
decl
fcomp
loop
sarl
hlt
pop
dec
scas
clc
xor
mov
scas
xchg
adc
or
pusha
pop
mov
mov
inc
and
nop
add
mov
or
out
enter
rolb
js
jl
inc
lea
and
mov
sbb
pop
cltd
cmp
outsl
loopne
mov
pop
xor
dec
inc
pop
nop
dec
xor
fiaddl
or
les
bound
in
sbb
mov
jmp
dec
xor
or
lret
or
cmc
jle
daa
pushf
pop
out
lret
shrb
hlt
sbb
add
mov
arpl
xchg
inc
ja
fimull
popf
inc
inc
leave
fistpll
mov
call
lock
push
mov
dec
test
mov
loopne
cmp
cmpsb
es
jecxz
lret
fsub
aad
stos
mov
sub
mov
jbe
test
push
and
sub
leave
and
out
mov
imul
and
aam
shlb
fsubs
xchg
lods
hlt
dec
mov
lret
cmp
fstps
inc
into
test
dec
rolb
das
pop
jl
cmc
xchg
int
out
jle
movsb
mov
movsl
roll
add
sub
lds
fstp
mov
mov
aaa
imul
xor
mov
in
cmpsb
xchg
and
dec
sti
and
ljmp
rcrl
push
lds
into
imul
mov
dec
cld
leave
and
and
mov
nop
mov
or
loopne
shrl
out
or
imul
or
push
bound
push
mov
dec
ret
xor
cld
fsub
fmuls
rcrl
testb
add
js
sahf
xchg
jnp
stc
fstp
cli
outsb
adc
into
xchg
and
pusha
add
loope
and
es
pop
sti
ror
mov
lahf
les
mov
cmp
or
jmp
jl
adc
pop
mov
mov
jecxz
lods
adc
fsubs
and
xchg
lahf
jno
xchg
ss
jo
scas
cmp
aaa
xlat
push
pop
in
cli
ret
xchg
mov
sub
sbb
sbb
lcall
mov
add
adc
mov
push
pop
fstpl
loop
xor
je
popa
add
cmp
aas
mov
pop
or
inc
mov
lea
leave
scas
pusha
shll
ds
cmp
cmp
inc
fstpt
cmpsb
push
and
and
clc
xchg
jle
ljmp
jle
int
ss
xchg
xchg
je
leave
cs
arpl
jae
mov
cmp
std
add
mov
pop
data16
gs
jp
xlat
nop
roll
icebp
mov
imul
push
push
adc
cwtl
popf
aad
sarl
push
cmpsw
pop
cmp
inc
jg
jl
mov
xorl
xor
xchg
xchg
push
shl
fdivrl
inc
into
mov
lcall
fsub
in
mov
out
mov
pop
fsubr
push
mov
cli
clc
jge
cmp
pop
lcall
cli
dec
daa
xchg
push
mov
push
leave
sbb
add
ljmp
xchg
dec
movsb
imul
pop
xchg
pop
imull
in
addr16
je
pop
sub
jg
outsb
adc
int3
xchg
es
inc
adc
fisubrl
pop
xchg
pop
outsb
pusha
push
test
jmp
into
jmp
hlt
jne
pop
sbb
inc
cld
inc
jnp
inc
push
mov
ror
jle
push
mov
cltd
cmp
pop
fwait
mov
cli
xor
mull
imul
ret
mov
jnp
mov
mov
mov
clc
xchg
push
out
js
cmc
fsts
sbb
pushf
and
jle
dec
add
orl
inc
fldl
sbb
out
enter
mov
add
loopne
pop
mov
jl
dec
out
add
dec
mov
push
cs
arpl
mov
push
testl
pusha
das
test
lds
mov
mov
dec
push
add
or
sbb
rol
mov
xor
and
out
fcoms
xchg
adc
ds
cmp
pop
and
jae
shll
sbbb
mov
movsl
mov
mov
addr16
add
xchg
sub
inc
mov
insl
jmp
dec
ret
cmpsb
xchg
push
loopne
int3
cltd
and
sub
arpl
xchg
adc
aas
cmp
sbb
and
dec
ss
loop
cli
add
jp
mov
cltd
jge
dec
push
xor
insb
call
xchg
aaa
fdivp
xchg
rcrb
xchg
pop
sahf
clc
mov
jo
dec
sbb
nop
scas
movsb
sbbb
pop
outsb
pop
jge
ret
dec
sbb
push
jne
scas
mov
ret
pop
push
jl
pop
ret
into
inc
mov
dec
and
ret
imul
mov
aad
out
xchg
stos
mov
mov
inc
add
adc
enter
lret
ret
xchg
push
adc
mov
or
add
mov
xlat
pop
outsb
jl
inc
jb
ret
fnsave
mov
mov
inc
add
xchg
jo
aaa
popf
bound
rcrb
and
jg
insl
int3
or
lcall
loop
into
iret
stos
xchg
pop
call
add
mov
mov
inc
mov
je
sti
fwait
xchg
lea
xor
ss
push
inc
in
lcall
cld
rcrl
fisttpll
cmc
push
add
jne
lock
test
push
sbb
pusha
insb
adc
mov
xor
mov
or
pop
adc
sub
push
cmp
jle
rolb
push
jnp
mov
dec
and
ror
in
add
or
outsb
pop
mov
inc
ds
subb
rol
stos
jg
mov
mov
jl
jno
inc
rorl
add
mov
adc
adc
popa
dec
lods
cltd
mov
pop
fstpl
fisttpl
test
icebp
xor
jecxz
cltd
mov
in
adc
hlt
popf
inc
pop
mov
jo
xchg
lret
sbb
test
mov
stos
fldt
jecxz
adc
insb
lret
jg
repnz
and
insl
movsl
mov
xor
arpl
les
dec
and
pop
mov
dec
xor
fwait
nop
adc
outsb
mov
add
jae
rcrb
fadds
out
fiadds
jge
cmpsl
sub
cs
sbb
xor
cwtl
sahf
test
dec
xchg
scas
adc
or
add
jmp
add
data16
ja
outsb
push
or
aaa
sahf
inc
add
sub
das
pop
repz
sub
int
push
gs
out
mov
mov
push
jno
add
lock
pushf
ljmp
mov
ljmp
jnp
xchg
clc
stos
scas
mov
aas
cmp
in
mov
cltd
aam
out
bound
in
or
and
mov
pop
dec
adc
add
in
lcall
enter
jae
cmp
stos
fdivrl
roll
les
ret
and
iret
jne
mov
lock
sub
je
bound
sub
and
lock
push
jne
xchg
andb
test
or
int3
sub
cmpsb
cmpsb
mov
dec
hlt
or
push
pop
test
jo
addb
lock
push
adc
scas
dec
cltd
cmp
dec
in
push
pop
mov
fimull
testb
xchg
xchg
leave
faddl
das
shrb
inc
jmp
lret
xchg
mov
xor
in
jmp
rol
xchg
bound
mov
push
sahf
ja
mov
or
jns
aas
fdivl
sub
in
sbb
sub
jl
dec
xor
lock
jo
pop
pop
cld
mov
xchg
push
sub
and
lods
and
leave
aad
js
rcl
movsl
inc
push
mov
not
flds
insb
mov
mov
fstpl
xrelease
cmc
aad
fwait
lahf
push
pop
mov
ss
xchg
push
in
jae
pusha
mov
dec
mov
xor
lock
inc
outsl
inc
mov
pop
jecxz
xchg
pop
ror
leave
mov
sbb
sub
mov
lahf
fstl
dec
cmp
mov
and
cmp
shrb
es
pop
add
rorl
into
xor
cmpsb
loope
xchg
dec
loope
pop
fidivl
mov
push
adc
inc
loope
push
push
cmp
cmp
xchg
in
or
dec
cltd
nop
cmp
add
je
xchg
nop
mov
nop
xor
jbe
arpl
mov
mov
ja
pop
xchg
jae
adc
lcall
cs
fldcw
stc
mov
cmp
and
jecxz
sti
and
inc
mov
popa
shr
mov
test
sbb
out
ss
loop
xchg
cmp
int3
in
sub
in
movl
push
xchg
mov
das
enter
fwait
and
sti
subl
jp
push
pop
sub
mov
sbb
fldl
xchg
xchg
fldenv
subl
mov
push
aaa
pop
mov
push
xchg
lea
mov
or
mov
pushf
insl
mov
dec
loopne
ljmp
sub
push
std
pusha
lock
pop
push
lock
push
rcl
out
in
cwtl
sub
test
mov
pop
jne
pop
inc
fucomip
adc
dec
lods
xchg
sub
popf
mov
es
ljmp
xchg
test
mov
jne
test
sti
fildll
lret
mov
jp
movsb
call
iret
jbe
cmpsb
dec
pop
mov
les
stos
xchg
das
xor
mov
pop
nop
cwtl
mov
fwait
push
shrl
adc
daa
sub
lock
cmp
cmpsb
stos
push
push
loopne
xchg
out
push
fldcw
xor
xchg
sub
popf
pop
and
scas
sbb
mov
jecxz
dec
cmpsl
sub
and
stos
xchg
leave
or
mov
cs
cmpsl
cltd
sbb
jno
sbb
lret
sub
mov
movsl
jg
mov
fnsave
or
aad
mov
js
sub
dec
push
test
sub
stc
and
push
aaa
sbb
shl
or
scas
or
xor
movb
nop
jp
and
dec
inc
and
shll
add
loop
cwtl
jbe
in
and
ds
xchg
stos
jle
call
or
and
jo
iret
arpl
ja
cwtl
movsb
ja
adc
mov
nop
fbld
test
dec
add
jb
xor
insl
add
fs
mov
push
jg
adcl
test
sbb
mov
or
pop
insl
or
fmulp
mov
clc
fstl
arpl
sbb
mov
enter
lcall
cmp
mov
loope
adc
mov
push
lret
fnstsw
jae
lcall
adc
lret
sub
jp
imul
popa
sub
fcoml
test
dec
xchg
adc
rcr
xor
push
sub
sbb
or
mov
imul
loopne
sub
xchg
push
sbb
sbb
sub
sbb
jmp
mov
in
inc
mov
jecxz
pop
cmpsl
fsubrl
add
into
lret
sbb
js
cmc
push
lahf
ret
fsubl
adc
xchg
aas
outsl
mov
adc
mov
aad
jb
jmp
cli
dec
inc
mov
jne
or
iret
out
xchg
das
cmp
arpl
or
pushl
or
pop
clc
or
push
sbb
enter
jb
cld
cmp
sbb
daa
enter
push
test
sbb
push
in
xchg
mov
scas
cmp
or
and
jecxz
pushf
je
lret
sub
xlat
jbe
imul
das
push
sarb
xchg
arpl
pop
pop
fidivrs
loope
push
add
push
xchg
out
push
xor
aaa
cmp
cmp
sahf
mov
cltd
aaa
adc
mov
in
jge
popa
idiv
scas
jecxz
test
sbb
ror
addr16
cmp
sti
pusha
lock
scas
inc
hlt
aad
mov
fisubrl
mov
stos
scas
pop
into
fwait
xchg
jns
fnstenv
push
push
sarb
inc
nop
cmp
xchg
and
lea
inc
stc
mov
sbb
inc
inc
shr
pop
cs
loopne
cmp
into
das
adc
test
mov
pop
enter
sahf
inc
pushf
mov
push
jo
popf
xchg
cmp
sub
pop
pop
stos
pop
sbb
inc
cwtl
lock
mov
or
out
pop
mov
push
push
or
shr
jae
pop
lods
cli
subl
in
or
lcall
test
loope
or
insb
and
pop
dec
aas
add
cmc
add
lea
xor
sbb
js
sbb
pusha
loopne
cmpsl
jb
out
or
mov
scas
aaa
out
in
mov
test
mov
imul
adc
dec
stos
inc
pop
cmc
outsl
inc
icebp
pop
repz
enter
scas
aad
call
es
add
aas
mov
cmpb
mov
les
clc
xchg
insb
xchg
clc
pmaxub
das
mov
pop
dec
dec
js
mov
insl
xchg
xchg
icebp
adc
jle
negl
push
shrb
xor
fstpt
cmc
lahf
dec
xchg
shr
xor
xor
test
iret
jp
aaa
out
push
or
iret
ljmp
inc
xorl
loop
xchg
test
hlt
pusha
inc
inc
lods
in
add
mov
mov
fistpl
add
xor
incb
or
test
movsb
sahf
in
shl
fbld
mov
or
mulw
out
inc
shr
add
out
idivb
inc
fsts
lock
mull
stc
out
in
pusha
bound
shl
popf
sahf
sbb
ficoms
lock
das
and
test
pop
and
jns
xor
outsl
or
int3
push
xor
sbb
add
idiv
sub
shlb
faddl
test
sbb
push
push
and
jg
daa
cwtl
sub
pusha
adc
xchg
pop
sahf
jb
push
pop
leave
push
hlt
jge
and
sub
pop
mov
dec
out
sbb
xlat
push
imul
dec
push
cwtl
cmp
add
xor
cmp
mov
push
jno
jg
jecxz
test
cmp
leave
in
dec
call
loope
mov
in
sbb
pop
jo
mov
test
ret
xor
push
lock
jb
jmp
ds
test
rclb
dec
xor
sbb
xchg
xchg
dec
addr16
cmpsl
adc
lcall
cmc
aaa
outsb
and
out
dec
dec
jo
xchg
jne
push
jbe
push
std
cmp
mov
enter
movsb
imul
sub
pusha
sub
pop
or
mov
aam
cli
ss
add
fldcw
mov
pop
sahf
cmp
loop
ror
push
cmp
cmp
std
add
daa
ret
ret
xchg
jl
lret
pop
push
and
and
mov
xchg
stos
mov
or
sbb
xor
cmpsb
xchg
mov
xchg
and
imul
push
mov
jecxz
adc
mov
xchg
jg
adc
jb
in
cmpsl
mov
out
xchg
push
xchg
fcoms
pop
fstpt
popf
rorb
sub
mov
lods
jbe
push
ja
mov
lahf
dec
popf
inc
xor
inc
imul
sbb
cmp
scas
cmp
out
dec
addl
pop
adc
jg
repnz
or
inc
sbb
or
push
jbe
mov
std
leave
pop
xchg
fistl
clc
inc
or
mov
lret
and
cmpsb
adc
decl
mov
lcall
cmc
loopne
stc
add
xor
jns
add
shll
sarl
negl
pop
cmp
popa
mov
fsubrp
add
pop
pushf
imul
fmull
adc
mov
addr16
mov
iret
repz
xchg
mov
icebp
add
xchg
fidivrs
sbb
das
adc
data16
jo
mov
xchg
pushf
push
lds
popf
adc
xchg
sbbb
incl
fiadds
into
daa
xlat
repnz
lock
jnp
je,pn
int
xchg
sbb
push
xor
les
sub
xlat
sub
loope
movsl
hlt
add
in
mov
jb
cmp
repz
ja
jmp
xor
je
outsl
cmp
push
loopne
es
aaa
into
and
mov
std
test
mov
pop
dec
inc
aad
ja
mov
mov
adc
jns
mov
ficompl
subb
sar
sarl
jae
mov
stc
ret
outsl
aam
jb
js
popa
jp
nop
mov
sarl
xorl
pop
push
es
andl
sbb
and
sahf
push
adc
dec
mov
fbld
test
xchg
jnp
cmp
cld
into
data16
add
mov
lock
mov
jae
add
jns
sar
pusha
dec
dec
cmp
adc
push
aad
rolb
stos
or
in
jmp
or
arpl
shll
inc
addl
sbb
inc
push
push
into
sbb
mov
xchg
js
mov
loope
inc
pop
jmp
fdivrl
lcall
pop
lahf
cs
adcl
jg
in
inc
cltd
or
mov
xbegin
dec
adc
mov
xor
xchg
je
sub
cld
popa
mov
scas
sti
les
mov
inc
test
push
addl
addr16
stos
mov
adc
rcrb
jmp
ret
jge
adc
test
sub
push
jne
loope
pop
mov
xchg
cmovo
mov
ret
clc
mov
rol
lret
pop
clc
sbb
adcl
push
sub
lcall
xchg
cmp
xchg
push
pop
pusha
push
lret
mov
jg
cmp
xchg
or
icebp
add
pop
sbb
jg
cmp
jl
outsl
mov
outsl
stos
hlt
mov
push
and
leave
push
xlat
or
sbbb
hlt
dec
jmp
aad
dec
loopne
push
xor
adc
mov
jg
push
push
mov
pusha
sbb
pop
and
lods
orb
setnp
cwtl
lock
and
inc
xchg
addl
aas
iret
inc
add
test
stos
stc
adc
xchg
lret
das
xor
aam
cltd
adcl
and
add
orl
inc
ret
insl
fcmove
xchg
hlt
out
jo
add
cmp
xchg
mov
pop
inc
jp
rcr
fists
mov
mov
in
loop
bound
adc
xlat
insl
add
mov
sbb
enter
add
jg
enter
loop
ret
add
mov
iret
push
lods
sub
aaa
mov
int3
lret
mov
mov
xchg
out
lea
pop
pop
mov
jbe
jg
push
xchg
shlb
cmp
mov
ljmp
jmp
push
scas
das
and
mov
shr
jmp
je
dec
mov
test
sbb
jl
add
aas
cmp
adc
sbb
scas
pop
dec
xchg
push
xchg
mov
aaa
outsl
and
dec
pop
and
mov
inc
ljmp
int
loop
cmp
inc
push
loop
pop
and
sahf
jae
nop
or
shrb
jl
les
hlt
cli
jmp
cmc
insb
push
rolb
call
push
fldln2
imulb
add
mov
into
insl
mov
push
and
xor
jne
cmovae
pop
lahf
loope
bound
sub
xchg
jecxz
icebp
pop
or
iret
xlat
dec
mov
pop
sbb
mov
sbb
push
out
mov
iret
out
das
pop
push
cmp
aas
aaa
mov
dec
inc
fsts
loop
cmp
jp
inc
xchg
sbb
idivb
arpl
aam
shrl
cmc
imul
mov
xor
inc
mov
aas
subl
sbb
js
imul
and
fbld
das
loope
lods
push
subl
jl
test
push
cli
and
mov
ja
cmc
mov
lods
pop
aas
lahf
mov
loopne
inc
aam
jno
outsb
jl
dec
fdivr
and
orl
aas
in
loope
out
popa
mov
sbb
out
mov
aaa
outsl
mov
xchg
test
nop
cli
pop
inc
stc
repnz
xchg
pop
cmp
xchg
cmp
out
ss
mov
push
int3
adc
aad
shlb
mov
fbstp
in
cli
imul
out
int3
addr16
xchg
jg
aad
aam
lea
fidivrl
dec
js
fldenv
push
pushf
fistps
cltd
adc
cmp
inc
mov
cmpsl
call
mov
mov
es
mov
mov
dec
insb
jecxz
test
push
jo
push
jecxz
popa
lcall
je
jmp
fsubrl
lds
data16
mov
ljmp
jae
sub
add
jno
xchg
ficoml
cmpsb
mov
mov
stos
repz
and
dec
cwtl
inc
push
clc
and
out
or
hlt
push
mull
xor
icebp
lods
pop
pushl
in
imul
or
cli
bswap
adc
addr16
stc
sub
mov
ret
adc
jae
cmc
mov
sarb
fsubs
pop
cli
xchg
ljmp
jg
lret
in
ja
mov
jmp
sub
cltd
lods
in
mov
and
push
cld
xchg
faddp
and
ret
lock
mov
jp
lods
shlb
xor
ret
or
xchg
in
leave
sbb
inc
mov
jne
test
jecxz
mov
enter
mov
jne
stc
mov
sbb
xchg
mov
aas
mov
sbb
out
pop
lds
inc
push
jmp
push
cs
sbb
inc
xchg
fnstenv
sub
je
popa
test
or
xchg
or
test
jl
imul
insb
cld
and
into
jbe
xor
push
xor
adc
decb
and
lcall
lds
test
fs
dec
or
call
lds
cmpsl
xor
jae
add
add
punpckhbw
mov
inc
xor
dec
push
in
jb
mov
jle
mov
test
ds
shl
dec
scas
lret
sbb
scas
dec
mov
cwtl
adc
sbb
xchg
cwtl
scas
jbe
sbb
sbb
add
adc
or
xchg
cli
mov
xchg
test
std
lea
fistl
adc
lds
or
ja
fs
dec
sar
outsl
push
or
ja
ret
adc
jne
jbe
cmp
dec
add
loopne
insb
mov
xor
insb
cmpsb
lret
mov
sbb
sub
mov
xor
leave
clc
std
mov
mov
imul
cmp
jp
cvtps2pi
or
hlt
retw
sahf
add
fdivrp
inc
test
ja
loop
cwtl
nop
cwtl
mov
ds
cwtl
jmp
bnd
mov
push
cmpsb
cli
insl
jae
lahf
mov
test
mulb
cmp
cmp
add
sarb
cmp
fistpll
push
fdivs
mov
cmp
mov
stc
pushf
sub
fldt
mov
mov
enter
xchg
loop
fidivl
test
test
iret
aaa
dec
push
sbb
mov
dec
and
subl
stos
lea
imul
or
testl
or
xchg
cmpsl
lret
repnz
outsl
fwait
pusha
out
test
push
inc
daa
mov
out
and
sti
adc
out
sahf
test
rorl
sahf
lea
subb
inc
shll
mov
lret
repz
addr16
imul
shrb
ljmp
out
out
or
mov
ret
lret
movsb
cmpsl
jge
dec
push
enter
imulb
mov
mov
mov
ret
hlt
or
jmp
fsubs
fimuls
jg
push
insb
mov
call
pop
inc
je
xchg
cmp
in
inc
mov
cmpsl
xlat
push
pop
clc
or
imul
or
xchg
adc
lods
shr
xchg
js
inc
mov
in
out
or
jbe
test
outsl
addr16
repnz
testl
andl
das
adc
repz
lcall
jecxz
hlt
filds
jg
xchg
cmp
xor
aas
push
xchg
out
jmp
mov
int
in
cmp
inc
loop
test
enter
jb
mov
cmp
and
sbb
cli
lcall
movsl
decb
push
sti
mov
testl
shl
shll
popf
sbb
andl
mov
stos
rcl
dec
mov
fs
mov
stos
mov
fwait
pop
xor
mov
out
test
adc
sbb
sub
in
loopne
mov
vmovups
lahf
or
push
xchg
sbb
popf
scas
xchg
jno
xor
lods
dec
les
mov
and
or
loopne
int3
or
sahf
dec
jge
stos
addl
push
inc
iret
add
iret
aam
aam
jmp
popa
adc
dec
or
int3
inc
cmp
mov
xchg
dec
and
xchg
idivb
das
fs
in
rcl
adc
mov
daa
xor
xor
in
iret
mov
inc
lods
inc
stos
mov
lock
xchg
mov
xchg
push
out
hlt
mov
nop
fwait
jbe
sub
xchg
test
and
jb
notb
sbb
cli
stos
xchg
aam
jle
push
mov
jmp
adc
sbb
ror
ss
pop
sbbl
push
aaa
dec
cmp
push
pop
push
cmp
push
jns
pushf
adc
cltd
xchg
clc
inc
cld
rcll
and
mov
xorl
push
push
repnz
gs
inc
out
jb
mov
sbb
mov
or
loope
mov
sbb
sti
in
cmp
bound
jae
cmp
cld
ret
in
xchg
stos
les
nop
scas
mov
pop
sub
push
in
push
xchg
out
fcoms
sub
xchg
mov
sbb
pop
push
sbbb
pop
dec
out
jo
into
cwtl
aaa
dec
mov
push
mov
add
rolb
inc
in
test
add
js
dec
testl
xchg
lret
add
fstpt
lock
ljmp
cli
mov
insb
lcall
or
popf
sub
sub
out
repnz
inc
xchg
icebp
out
or
ljmp
enter
xchg
cltd
mov
inc
xlat
aaa
icebp
mov
mov
cli
xor
push
mov
gs
jl
mov
ds
dec
out
xor
cmp
sbb
push
adc
cmpsl
ja
lret
cltd
repnz
stos
repnz
arpl
iretw
mov
sarl
loopne
mulb
into
sbb
sbb
add
xlat
into
xchg
sti
xchg
lret
and
addb
lods
pop
push
or
outsb
das
pop
push
xchg
ja
and
jbe
cmpl
std
bound
out
jne
add
jge
mov
movsl
out
cmp
pushw
push
mov
bound
cmp
jecxz
xchg
xlat
adc
enter
enter
adc
push
out
add
mov
xchg
push
popf
xchg
mov
xchg
fimull
push
repz
test
and
mov
repz
push
stc
jo
mov
add
fwait
cld
jno
dec
fwait
xor
mov
gs
ja
iret
adc
sub
jl
hlt
jecxz
aad
inc
cmp
mov
jns
ljmp
sub
imul
xchg
push
fnsave
sub
lahf
cmp
cltd
jno
add
push
imul
add
in
adc
add
adc
push
push
push
xchg
jmp
into
loop
cmpsl
jns
movsl
push
or
fiadds
xor
into
add
mov
cli
xchg
push
or
xchg
and
test
mov
call
mov
sahf
lods
out
and
mov
sbb
push
sub
roll
push
cs
mulb
sbbl
cmc
mov
and
sbb
xchg
xchg
pushf
shlb
jnp
push
cmp
js
hlt
aas
fxch
jl
mov
sar
sub
in
pop
push
mov
xlat
cmp
pop
fcmovnb
ja
or
in
mov
or
cmp
jmp
cld
pushf
rcll
mov
pop
aam
adc
pusha
test
inc
out
adc
addl
add
push
push
push
sub
adc
jne
gs
jmp
xchg
ss
jns
add
pop
cmp
imul
or
xor
bound
cwtl
pop
push
jnp
xor
sbb
pop
fdivs
roll
lock
mov
fbstp
add
ret
or
add
cmp
popf
sbb
out
and
popa
add
test
add
in
xchg
data16
push
dec
dec
movsl
sbb
push
shll
pop
jae
pop
xchg
mov
mov
add
jge
imul
jo
mov
cli
loop
jb
push
jb
push
push
mov
sbb
bound
mov
pop
cmp
insb
add
xchg
stos
push
push
inc
iret
je
jnp
push
inc
inc
mov
stos
ljmp
push
lock
cli
sahf
inc
loop
xor
adc
or
in
mov
mov
lar
xchg
mov
cmp
rorl
inc
enter
lret
arpl
pop
mov
sub
aas
add
inc
xchg
fs
push
aaa
lret
ret
movl
mov
hlt
shl
stos
aam
imul
push
mov
xchg
and
scas
lods
sbb
sbb
aam
push
fbstp
jne
jmp
adc
mov
push
inc
inc
int3
push
jno
adc
stos
push
adc
sbb
js
sub
into
test
sub
in
jle
call
cmp
aas
cmp
fdiv
add
mov
loop
pop
add
xor
inc
ds
cmp
mov
sub
sub
testl
xor
lcall
dec
andl
in
pop
cmc
cmp
insl
cmp
aam
stc
das
cmp
cld
test
daa
js
xor
imul
or
or
lods
sbb
jne
shl
jg
pop
pop
mov
daa
cmc
push
ficompl
push
and
dec
push
push
xchg
aaa
notb
shll
aas
jnp
js
dec
test
dec
mov
sub
into
out
mov
cmp
out
mov
add
mov
fstl
jl
push
test
shlb
pop
jle
and
pusha
idivl
sub
aad
rorl
sub
pop
addr16
mov
loop
fbld
xchg
fwait
ljmp
bound
in
push
out
rorb
adc
pop
inc
sub
xchg
sub
jecxz
es
pushf
cmpsb
ret
cmp
mov
imulb
mov
mov
or
sbb
sbb
mov
enter
sub
rorl
sub
jns
in
push
mov
pushf
sub
pop
push
aad
xchg
mov
int
lds
add
insb
xor
out
inc
in
xchg
arpl
xchg
mov
mov
push
pop
in
popa
push
inc
sub
rcrl
add
sbb
popa
out
mov
push
out
push
pop
mov
pop
movsb
mov
pop
mov
mov
dec
jno
es
mov
rcrl
jge
gs
and
rcrb
jge
addr16
push
movl
dec
xor
sub
sbb
iret
leave
lahf
lods
inc
in
jno
jl
loope
mov
enter
movsl
cli
inc
stos
fidivs
outsl
outsb
bound
jae
out
fcoml
sub
insb
scas
stc
mov
pop
stos
das
mov
lret
pop
jmp
xor
ljmp
xchg
js
out
sub
xchg
xor
cmc
push
popf
xor
loop
adc
scas
fnstcw
aaa
xor
dec
push
rorl
jecxz
jge
mov
inc
and
sbb
fs
iret
paddq
dec
insb
and
mov
add
add
xor
add
outsl
mov
pop
sub
mov
lcall
sub
push
sbb
sub
pushf
insl
addl
loop
sbb
ja
add
dec
pop
sbb
xchg
aad
inc
ljmp
and
arpl
jne
pop
adc
push
adc
mov
push
pop
out
in
mov
pop
das
xor
jo
adc
test
sub
lret
push
or
and
test
js
in
ret
mov
outsl
lds
ljmp
cmpsb
push
jb
repnz
pop
inc
mov
and
pop
and
pop
jg
cmp
es
or
std
movl
daa
jo
pop
pop
subl
cmp
xchg
ja
test
loopne
push
xchg
out
xor
lret
rcrl
or
cmp
stc
testl
xor
dec
incb
icebp
or
jnp
pop
add
adc
loope
jb
jge
call
es
jl
mov
push
iret
out
mov
cmpsb
sbb
test
mov
out
mov
xor
testl
push
xchg
sbb
pop
test
dec
aaa
push
aaa
mov
data16
sbb
addr16
pop
imul
mov
insl
or
push
rcl
out
stos
xor
aad
jp
adc
sub
or
rclb
or
sub
or
jge
push
mov
shrb
movsl
mov
pop
test
lock
testl
mov
sbb
push
cld
jne
or
ds
lods
xor
push
je
jge
lods
in
addr16
mov
out
inc
push
jae
jle
xchg
xorl
mov
repz
cld
bound
sbb
fs
or
xor
mov
pop
das
nop
adc
dec
insl
adc
pop
xor
push
clc
or
sbb
and
mov
loopne
lret
xor
hlt
outsb
push
adc
inc
pushl
lcall
cmp
pop
pushl
fcmovnu
imul
sahf
aas
mov
cmc
dec
cwtl
dec
shlb
jns
pop
rcll
sbb
mov
jl
jmp
sub
mov
fisubrs
inc
ja
xchg
jbe
aas
lret
repnz
test
cmp
lock
insb
mov
xchg
add
pop
scas
in
xchg
popa
pop
jne
bound
loope
sub
pusha
mov
bound
nop
and
dec
xor
push
xchg
xchg
adc
out
roll
and
xor
clc
sahf
jp
and
xchg
lock
jmp
sbb
jp
sub
xchg
sarb
aas
xor
movsl
pop
adc
lret
popa
frstor
fbld
dec
pop
popa
or
or
rclb
ffree
pop
jae
xchg
push
mov
mov
ja
cld
sub
shlb
pop
pop
jne
mov
hlt
sub
daa
adc
hlt
push
lret
les
ja,pn
pop
or
out
adc
stos
mov
rorl
test
jns
xor
jns
imul
scas
movsl
lds
cmp
shrl
adc
mov
call
dec
icebp
lret
imul
pop
bound
pop
cmp
sub
jl
sbb
mov
rclb
add
mov
pop
ficompl
mov
push
dec
ud1
iret
and
fiaddl
shll
in
or
mov
loopne
fnsave
and
xor
lods
push
cmp
mov
cwtl
pop
fadd
adc
sahf
sbb
lock
jecxz
cmc
out
mov
inc
pop
adc
and
mov
imul
ret
push
loope
ffree
dec
loope
mov
scas
jmp
cmpsl
movsb
repz
sbb
sti
rorb
inc
xchg
inc
inc
fildll
xchg
add
aad
mov
addb
pop
sub
icebp
mov
and
pop
imul
jns
gs
sub
pop
jl
mov
push
pop
mov
xchg
inc
push
mov
fisubs
mov
dec
cmp
xchg
mov
mov
bound
lock
mov
out
dec
sarl
popf
jnp
lret
push
pop
mov
and
push
int
leave
fistpl
mov
hlt
cmpsl
fnstcw
pop
mov
andl
jg
sahf
pop
sub
faddl
xor
in
rcr
js
dec
mov
cmp
cli
addr16
jno
scas
pop
jg
pop
inc
mov
pop
mov
int3
fwait
test
xor
fnstenv
cmpsb
stos
pusha
cmpsl
xchg
jb
lods
arpl
cs
sub
pop
in
push
adc
cmp
or
mov
int3
xchg
sbb
sbb
int
add
mov
mov
int3
in
add
outsl
mov
push
jns
xlat
or
cmp
jo
fcoml
mov
clc
fcmovnb
outsl
dec
cwtl
jae
negb
out
outsl
xchg
lods
cmp
push
and
xorb
jmp
fsubs
cld
int3
and
movsl
cmp
xchg
add
or
fnstsw
call
push
testl
push
loop
leave
cld
and
mov
fs
fldenv
push
push
xchg
push
sbb
sbb
lds
push
fmull
fidivrl
push
outsl
inc
out
dec
gs
or
in
mov
cli
push
add
pop
aas
mov
scas
cltd
sub
jmp
shll
xlat
pop
cmc
xchg
fdivl
and
jecxz
mov
ds
adc
subb
enter
js
imul
jecxz
rcl
xor
and
movb
dec
call
test
test
xchg
pop
ja
addps
pop
setne
sub
sarb
jge
popf
into
inc
jo
stc
inc
mov
mov
pop
aas
mov
scas
xor
stos
jno
cmpsl
pop
subl
sub
push
mov
dec
pop
into
xchg
and
in
push
lock
xor
or
stos
aam
and
mov
enter
mov
fnstcw
inc
and
and
in
push
popl
clc
mov
mov
in
push
sub
add
xchg
xlat
dec
enter
insl
test
addr16
and
lcall
push
xchg
pop
lock
out
jb
imul
jp
popf
mov
cmp
add
mov
fisttpl
nop
lahf
push
mov
out
cmp
fmulp
and
sbb
dec
jb
dec
loop
jg
aad
pusha
decb
push
or
es
fildll
xor
sub
add
cmp
dec
rorb
or
xor
fdivrs
pop
mov
pop
loop
test
out
cmp
mov
aaa
les
add
xor
jbe
or
rcrb
cmp
sub
sub
mov
push
int
mov
or
mov
push
pop
popf
cli
xchg
andb
adc
orl
adc
fcomip
lahf
lea
inc
mov
lods
cmpsb
inc
pop
out
movsl
adc
add
dec
insb
and
sbbl
push
push
jae
pop
incb
xchg
lret
das
dec
adc
jo
ret
dec
ret
repnz
aas
pop
aaa
fldt
or
jo
lcall
data16
cmp
test
andb
rolb
adc
inc
add
mov
aad
out
fucom
rol
in
fsubr
push
sahf
inc
insl
xchg
mov
and
xor
sbb
fsubrl
int3
es
mov
repnz
sub
icebp
cmp
mov
mov
sarl
dec
push
jp
xor
add
sub
xchg
inc
jl
pop
sbb
sbb
fnstsw
inc
dec
or
dec
dec
stos
jns
xchg
icebp
ljmp
jns
fstl
xchg
ret
fistl
call
out
mov
push
push
stos
jecxz
aad
insb
jae
sbb
mov
jno
cli
sti
adc
xchg
ret
xchg
adc
jl
xor
push
out
push
pop
mov
std
fwait
push
sbb
gs
inc
notb
xchg
xabort
ljmp
jle
and
jl
add
pushl
and
imul
fwait
lret
dec
dec
mov
mov
dec
adc
insl
pop
mov
leave
sahf
stos
mov
adc
in
xchg
mov
mov
xchg
inc
mov
in
stos
jp
cmp
xchg
jmp
sarb
pop
add
sub
fsubrl
in
push
add
cmp
je
mov
and
cmp
data16
fiadds
cltd
ret
inc
mov
xchg
pop
jmp
xchg
xor
cld
pop
out
mov
sub
xchg
stos
xchg
pop
fisubs
sahf
outsl
adc
pop
sbb
in
lret
rorl
lahf
icebp
sahf
jg
xchg
add
rorl
mov
mov
sub
xor
out
addr16
mov
out
cmpsb
insl
cmp
and
testb
lods
add
inc
pop
sahf
pop
ds
mov
scas
fnstenv
sbbb
divb
dec
sub
mov
push
inc
mov
adc
in
outsl
jns
push
dec
add
fcoms
scas
ds
sbb
push
and
out
xor
pop
pop
dec
mov
mov
jae
mov
xor
popf
jno
imul
dec
cli
bound
adc
or
jo
inc
sbb
mov
xor
stc
enter
sub
push
jg
adc
lcall
fmull
and
cltd
cmpb
mov
mov
fsub
rorb
cmpsb
mov
add
fmuls
imul
sub
loopne
mov
jecxz
cmp
add
add
clc
outsb
pop
push
sub
orb
and
jno
push
pop
cmpsb
push
dec
adc
pop
js
and
mov
inc
add
mov
int
pop
xchg
push
jle
fildl
pusha
out
fildll
xchg
xor
inc
jp
inc
pop
push
and
filds
std
jae
int
adc
mov
mov
push
shl
sub
push
mov
gs
fmull
stos
mov
fists
movsb
inc
sbb
adc
flds
push
movsl
ja
or
adc
cmp
jge
in
push
sbb
dec
cmpl
pushf
mov
cmp
xor
iret
mov
xlat
jne
fldcw
jmp
mov
sbb
dec
add
cmp
out
pop
ja
aas
xor
xchg
sahf
repz
rcl
iret
mov
lcall
lods
cmp
sub
mov
lock
dec
std
movsb
vmaxps
jp
ljmp
mulb
xlat
cmp
xchg
jecxz
xor
push
mov
jl
leave
icebp
lcall
mov
add
add
jl
enter
loope
out
push
sub
gs
jae
jge
jecxz
les
jle
jle
push
scas
jno
scas
pop
pop
clc
cmp
xorb
pop
mov
push
and
icebp
inc
xchg
cmp
js
int
ret
test
push
icebp
adc
scas
fistl
jmp
xor
cli
fimuls
iret
out
insl
andb
cmp
pop
mov
movsl
pop
mov
push
pop
mov
push
call
scas
and
xchg
mov
push
sahf
lret
mov
andl
sub
sbb
fisubrs
out
lret
xlat
inc
lock
loopne
and
push
outsl
lods
icebp
cld
daa
mov
sbb
in
sbb
cmp
mov
out
sub
test
in
mov
dec
xor
out
sbb
mov
popf
adc
jne
push
fisttps
dec
fmull
fsubl
xor
pop
test
mov
scas
shrl
push
add
push
xchg
sbb
jnp
cmpsb
jne
testb
xchg
add
das
mov
jae
in
push
adc
mov
mov
cmpsl
lock
int
enter
adc
enter
pop
cli
mov
leave
jno
and
lret
cld
cmp
adc
inc
call
dec
mov
jle
loopne
imul
pop
sbb
or
or
outsb
insb
xor
arpl
in
out
in
dec
dec
rorl
mov
or
push
lods
fisubrs
popa
pop
sub
lahf
push
ret
in
mov
mov
fmul
mov
cltd
mov
dec
shl
int3
gs
loopne
xor
lods
or
in
fabs
loopne
sbb
xchg
inc
icebp
or
je
imul
addr16
and
mov
sbb
rorb
lahf
cmp
mov
xchg
sbb
jg
xlat
push
or
mov
dec
imul
fstl
stc
pop
sub
gs
mov
lret
cmp
inc
cmp
ds
xor
test
notb
cmp
pushf
adc
out
sub
repnz
js
and
and
aad
int3
jl
cmp
aam
out
aad
decb
or
das
jno
in
dec
sub
mov
fcmovnbe
sbb
pop
mov
lcall
sub
mov
push
fstps
pop
fwait
jmp
xor
inc
push
aam
push
repz
andb
mov
js
dec
inc
into
enter
and
and
mov
jecxz
jb
inc
xchg
sbb
les
inc
cltd
scas
ljmp
push
movsb
and
ljmp
fstpt
call
mov
paddusb
or
inc
mov
sub
inc
stos
fs
pop
sub
movsb
mov
sub
mov
dec
push
jp
push
mov
imul
and
push
daa
out
cmp
xchg
je
xor
cmc
out
iret
jmp
sbb
icebp
call
arpl
xor
push
mov
cs
outsb
adc
cmpsb
loopne
adc
popf
fcomi
popf
cmp
pop
ds
adc
xor
insb
jmp
es
jecxz
mov
push
and
jae
popf
mov
jae
lea
dec
sub
push
lods
adc
push
fimull
scas
fs
popf
xchg
call
fidivl
push
or
lods
test
dec
jae
xchg
xor
mov
jg
outsl
pop
or
mov
les
xchg
pop
mov
xchg
xchg
adc
ds
xor
or
pop
xchg
ss
cmc
mov
jp
jg
outsb
pop
xchg
pop
pop
movsb
mov
ds
shll
sbb
or
int
xchg
and
aaa
push
and
dec
nop
mov
iret
lock
cmp
and
insl
ja
and
sarl
adc
popf
leave
inc
mov
inc
inc
aas
cltd
icebp
xchg
sar
or
or
sub
hlt
pop
das
inc
xchg
test
sub
pop
add
push
std
or
pop
inc
into
daa
or
jecxz
call
test
and
and
cmp
out
je
mov
ds
xchg
pop
es
mov
out
or
lds
push
or
imul
mov
mov
hlt
push
add
fisttpl
cmpsb
cmpsl
add
loopne
dec
sub
sahf
gs
movsb
add
xor
sbb
mov
sar
push
mov
fcomps
in
adc
sbb
pushf
adc
outsb
jne
ds
sub
pop
mov
xchg
dec
out
jae
std
inc
cs
fwait
xorb
add
insb
fcomi
sbb
int3
and
ljmp
imul
aas
dec
aaa
daa
jp
add
out
or
std
xchg
push
je
add
sub
imul
pop
fbld
repz
and
clc
mov
and
adc
scas
out
xor
scas
mov
pop
stos
fwait
mov
add
pop
pop
cmp
inc
test
out
or
xchg
pop
test
cld
divl
sbb
cmp
jl
call
jb
push
jge
xor
cmp
jae
and
mov
or
in
shrb
in
dec
mov
lods
cmc
clc
lret
mov
mov
out
outsb
add
push
or
dec
mov
ja
and
in
lahf
loope
in
adc
out
pusha
leave
popa
stos
pop
push
dec
gs
mov
xor
xchg
cmp
mov
scas
inc
sbb
leave
mov
mov
stos
or
jae
jmp
cmpsb
dec
jnp
cli
ds
mov
push
jecxz
ja
push
adc
and
mov
sbb
mov
mov
sahf
xor
mov
lret
sbb
enter
andb
sub
sub
xor
movsb
js
mov
sbb
cmp
and
cmp
push
mov
scas
xchg
rolb
xchg
dec
pop
fwait
and
shrl
lock
in
cmp
test
xor
pop
xchg
jbe
adc
mov
ja
mov
cmpsl
mov
fstpl
inc
orb
bound
xor
stos
mov
jns
or
outsb
and
adc
leave
fildl
ficoml
or
mov
xor
outsl
pop
pop
stos
and
mov
mov
xor
pop
sbb
xor
cmp
in
jl
sbb
adc
ljmp
or
xor
int3
lcall
or
jle
adc
cmc
imul
sbb
mov
shll
repnz
mov
insb
jnp
cli
icebp
or
push
dec
faddp
std
test
mov
in
dec
mov
lahf
add
pop
jns
jmp
cld
repnz
xor
js
aam
mov
mov
mov
xchg
enter
and
and
inc
hlt
jmp
sti
test
fcoms
or
sbb
inc
mov
lret
aaa
mov
dec
repz
loope
xor
pusha
dec
orb
pushf
pop
adc
jmp
call
sbb
xor
xor
xor
and
fs
lds
clc
push
mov
jg
or
mov
sub
sahf
ljmp
add
ret
mov
pop
pop
adc
xchg
xchg
fwait
pop
insl
pop
jne
popa
popa
inc
xor
loopne
repz
nop
repz
fldenv
ljmp
popa
es
push
cmp
fwait
ja
xchg
int
cmp
std
shlb
out
inc
cmp
les
sub
fdivl
aas
lods
jecxz
add
pop
sub
pop
mov
inc
sub
mov
leave
push
mov
adc
xchg
fwait
in
stc
add
je
mov
cs
pop
push
lods
sbb
sbb
repnz
aaa
mov
or
sub
repnz
dec
jecxz
sub
sub
sub
daa
mov
pop
and
cltd
xchg
xchg
push
dec
icebp
inc
lods
ss
nop
imul
sahf
sbb
sbb
call
scas
jl
sub
pop
push
push
das
or
pop
andb
and
mov
shl
outsb
dec
popf
fisubl
sarb
mov
jmp
fdiv
mov
popa
push
and
xchg
and
mov
lock
lcall
inc
pop
xor
aam
enter
arpl
ljmp
shll
mov
cmpsb
cmp
jp
and
addr16
mov
addl
mov
scas
cld
fidivs
inc
push
nop
xchg
out
xor
inc
jno
push
int3
in
sar
push
mov
fidivl
pop
mov
inc
dec
pop
stos
lods
clc
outsb
mov
lods
cmp
test
mov
andl
test
frstor
lret
stos
push
insl
sub
inc
xchg
mov
clc
xchg
cwtl
adc
lret
add
push
lret
pop
xorb
dec
dec
aaa
fcoml
icebp
sbb
std
ss
adc
fcompl
divl
push
adc
push
dec
gs
lock
xchg
popa
jbe
in
fistl
pop
ret
ja
sarb
xchg
into
sub
lahf
es
pop
pop
adc
mov
xchg
sub
aad
cmc
xchg
outsb
data16
xor
mov
bound
and
cwtl
test
in
sub
jg
pop
fwait
loope
adc
outsb
push
icebp
pop
mov
test
fwait
sbbb
add
cmpsl
sbb
data16
arpl
lods
mov
popf
les
outsl
ja
subl
or
mov
push
movsb
push
mov
imull
mov
mov
fiaddl
inc
push
jae
pop
xchg
mov
sub
sub
pop
push
leave
rcrb
out
es
ficoml
mov
sbb
jne
mov
xchg
jns
lret
xchg
repnz
movsb
mov
adc
sub
jo
gs
dec
dec
fucomip
gs
add
mov
mov
call
push
repz
scas
inc
xorl
push
xchg
das
mov
lret
in
shll
push
push
in
sbb
repnz
iret
adc
push
movsb
ret
jnp
mov
dec
xorb
out
into
outsl
sbb
or
fwait
out
mov
cmp
mov
add
jl
xorb
or
cld
stos
and
sub
sub
sub
nop
stc
mov
adc
loop
xor
fcmove
arpl
dec
mov
jmp
ret
repnz
sbb
lds
fwait
arpl
cltd
ficoml
adc
lcall
add
addl
adc
int3
dec
loopne
dec
cmpl
cmp
xchg
bound
push
inc
dec
inc
sub
nop
in
rclb
fdivrs
mov
cmp
pop
jnp
dec
loope
stc
aaa
das
jp
dec
lods
sub
fisttpll
dec
js
out
roll
in
out
ret
mov
add
fsts
repz
ja
pop
mov
in
mov
push
cmpsl
fmul
imul
dec
das
mov
js
cltd
jo
leave
or
mov
mov
jo
in
pushaw
lock
sbb
sahf
mov
pushf
mov
sbb
adcl
xchg
bsr
jnp
dec
add
subl
ss
xchg
addr16
add
adcb
inc
mov
fs
int
push
cmpsl
lds
xchg
lock
mov
mov
add
out
inc
test
fldl
inc
dec
inc
sbb
sub
fnstcw
fs
add
cltd
pop
addl
stos
call
loop
lock
sbb
dec
cld
mov
je
xor
sub
insl
test
mov
xchg
cmp
push
movsl
mov
add
adc
xor
add
fsubl
push
les
insl
dec
jmp
daa
sub
mov
imul
imul
mov
pop
mov
imul
or
out
push
pop
in
in
xchg
adc
pop
ljmp
lds
imul
xor
test
push
cld
ret
cmp
rolb
xchg
mov
out
xor
lea
jbe
cmpsb
ret
daa
sahf
daa
xchg
out
les
mov
scas
jge
lock
std
jge
fs
push
mov
mov
cmp
imul
sbb
cltd
andb
mov
mov
and
push
push
mov
mull
jo
fdivl
hlt
inc
mov
loop
cmp
aam
or
loop
xchg
dec
sub
lods
inc
sub
ja
lret
and
sbb
fwait
outsb
mov
cwtl
jns
push
push
and
aad
jp
jecxz
addb
lea
popa
stos
or
mov
nop
mov
cmpsl
sahf
cltd
gs
int3
add
sti
lock
scas
sub
jne
cmpb
adc
mov
pop
mov
mov
cli
loop
mov
sub
mov
cs
pushf
sub
push
lock
mov
testb
ljmp
push
enter
xchg
in
pushf
xor
in
imul
push
mov
xor
aas
cmp
dec
mov
xor
inc
xor
xchg
scas
int3
pop
inc
mov
mov
mov
nop
or
sbb
ja
cld
test
cwtl
xchg
fstpl
movsb
in
xor
push
emms
lcall
stos
sub
test
in
or
mov
add
mov
shl
add
ds
pop
adc
fcoms
pop
xchg
add
out
push
icebp
outsb
insl
inc
mov
push
imul
push
cli
test
mov
cmpsb
out
call
pop
jle
pushf
xchg
nop
faddl
repz
sub
pop
popf
lock
push
mov
push
xor
pop
dec
sbb
xchg
ss
pushl
sub
shll
outsb
movsl
mov
fnstcw
fidivs
out
cmpsl
lock
mov
movsl
mov
dec
popf
xchg
xor
adcb
ror
or
fdivl
out
in
imul
stos
add
jge
pop
jle
in
pop
insl
test
add
sub
lcall
dec
fisttpll
inc
jb
push
dec
aad
cmp
into
adc
fisttps
dec
cmp
test
in
dec
mov
shl
xor
loopne
inc
movsl
mov
insb
insb
push
dec
int3
iret
xor
mov
pop
cmp
loop
sbb
or
in
aam
in
test
inc
fcomi
cmp
scas
push
mov
addl
imul
xor
sbb
stc
xchg
inc
inc
adc
push
mov
xchg
bound
test
mov
sbb
inc
inc
test
movsl
sarl
ret
xor
stos
mov
mov
fistps
pop
xor
or
daa
movsb
mov
jae
loope
icebp
stos
sti
and
rcrb
xchg
sub
cmp
xchg
cmp
out
and
push
inc
repz
test
or
dec
icebp
mov
or
sub
mov
idivb
rolb
fidivs
nop
mov
mov
mulb
in
or
xor
pop
pushf
pop
dec
stos
stos
add
pusha
xor
and
jl
js
shlb
sbb
push
jnp
call
xchg
xor
inc
lock
jmp
sarb
std
sbb
sarl
dec
fistpl
sub
sub
popf
xor
cld
xor
xchg
out
xchg
popa
pusha
add
mov
mov
ja
adc
mov
gs
inc
cs
icebp
mov
adcl
fwait
lahf
mov
jg
or
add
inc
push
and
pop
addr16
dec
cmp
push
sbb
test
test
das
shl
jb
ljmp
xor
sub
repz
dec
cli
mov
adc
and
mov
daa
bound
sbb
test
mov
sub
scas
in
lret
jno
add
lods
cmp
icebp
adc
shl
sub
xor
in
inc
and
xchg
loope
lea
mov
ss
movsl
push
add
les
clc
andl
mov
les
mov
es
xchg
inc
inc
lock
fisttpll
pop
sub
cs
mov
test
js
add
call
inc
cwtl
pop
mov
and
test
out
mov
imul
sbb
shl
push
outsl
jle
jl
xchg
aad
jmp
les
mov
lret
aas
lret
and
pop
add
push
jp
jecxz
and
inc
fcomip
jbe
lcall
xor
sub
loope
imul
movsl
jb
aam
out
mov
sti
push
popa
test
cmp
lret
aas
test
mov
addb
inc
ljmp
les
xchg
mov
sbb
fbld
divl
out
xchg
std
dec
mov
adc
movl
lock
fidivl
call
adc
test
out
jb
aas
fsubr
xor
push
mov
and
lcall
repz
inc
cli
sbb
cmp
add
mov
nop
mov
sub
sub
icebp
inc
cmp
push
call
imul
stos
lahf
cmp
sbb
adc
ss
xlat
jmp
xchg
das
cmp
xor
add
test
jg
loopne
iret
mov
cmp
clc
xor
cmpsl
or
mov
popa
lcall
sbb
repz
mov
pushf
jecxz
and
outsb
imul
mov
cmpl
inc
mov
movb
dec
mov
popf
and
sub
inc
mov
or
mov
adc
dec
sub
sub
fidivl
jg
mov
sub
xor
dec
ljmp
loop
jne
push
push
wrmsr
push
adc
aad
add
subb
movsl
and
xchg
out
add
lock
xor
push
call
bound
sub
jbe
fnsave
lea
ljmp
lea
out
mov
add
out
xchg
mov
pop
rolb
inc
mov
cmp
out
lcall
pop
lods
in
sub
mov
and
je
cs
cltd
incl
cmc
les
push
xchg
jns
pop
add
xor
jg
arpl
inc
add
movsl
xor
add
scas
mov
scas
adc
les
jns
insl
test
and
jle
sub
dec
addr16
pop
sahf
in
xchg
enter
mov
into
cmp
jmp
sahf
ret
mov
es
es
dec
dec
mov
lahf
cwtl
dec
enter
adc
mov
or
rcr
cmpsl
cmpsb
mov
sbbb
out
shll
inc
push
pop
into
addb
enter
mov
xorb
adc
repnz
push
push
xor
hlt
push
aad
popa
ret
loope
push
push
adc
sahf
ja
or
out
loopne
aam
jge
cs
clc
inc
xchg
cmp
inc
push
cmpsb
dec
ficoml
mov
sbb
stos
dec
dec
and
outsl
pushf
adc
cmp
lods
push
subb
and
cmpsb
or
dec
mov
hlt
xchg
mulb
cmp
xchg
sub
inc
mov
cmp
jnp
in
jo
inc
adc
je
das
jge
cmp
ret
lret
imul
pop
sub
and
lods
nop
or
adc
xchg
lahf
cli
insb
add
sahf
inc
lahf
xor
lods
out
xchg
je
push
popl
jp
dec
fistps
aam
push
or
je
int3
xor
mov
mov
xlat
dec
into
ja
xor
pusha
jecxz
add
test
push
mov
xor
xchg
mov
add
call
test
jge
jp
fdivs
jle
ret
aad
pop
pop
test
pop
mov
rorl
inc
sarl
in
mov
in
adc
jbe
pop
mov
xchg
cmpsl
mov
fwait
mov
test
test
lds
movsl
test
movsb
sbb
imul
pop
popa
mov
scas
cmp
pusha
stc
mov
popf
sub
jae
inc
bound
xchg
ja
in
enter
sub
adc
fs
mov
stc
insb
xor
cmpsb
pop
ja
pop
xchg
pop
cltd
out
mov
push
push
dec
xlat
add
iret
inc
xor
mov
andb
addl
xor
incl
dec
lds
nop
jle
loope
add
popf
mov
sbb
aas
enter
ds
loopne
add
add
inc
shlb
jge
mov
fmuls
scas
cmp
sbb
mov
ror
outsb
int
rorl
popf
push
cli
mov
adc
mov
push
xor
arpl
dec
repnz
push
mov
inc
pop
sub
mov
arpl
andb
loope
test
and
in
ljmp
jae
test
mov
decl
push
jecxz
and
sbb
icebp
add
test
das
xor
xchg
out
xor
or
test
aaa
rcr
cmp
add
filds
inc
out
in
sbb
sub
and
sahf
arpl
or
pop
sub
xorl
into
adc
add
push
aam
jo
out
daa
cmp
subb
lea
pop
and
lret
mov
lret
mov
and
adc
inc
jbe
lret
in
inc
pop
mov
jg
imul
pop
mov
int3
push
mov
idivb
addl
mov
out
push
xchg
cmpsl
xchg
push
ret
into
xchg
jmp
mov
mov
push
fisttpll
mov
testb
push
lret
add
insl
call
rorl
imul
in
and
cli
stc
in
dec
dec
icebp
jg
push
xchg
mov
add
jnp
outsl
les
lret
call
or
jecxz
imul
jo
shll
inc
dec
xchg
xor
fsubrs
call
mov
sub
cmpb
push
clc
sub
push
bound
sub
fists
xchg
push
pop
push
gs
outsl
ficompl
lret
outsb
lods
xorl
and
jmp
xchg
imul
inc
rclb
fdivrs
pop
orl
or
bt
cmp
sbb
sti
and
lret
xchg
out
mov
adcb
dec
push
adc
std
inc
fsubrp
hlt
rcrl
xchg
push
push
xor
rcl
cmpsb
pop
mul
fdivrs
push
das
mov
mov
and
push
mov
mov
je
xor
cld
into
fidivrs
jae
mov
jnp
jg
jo
das
mov
sahf
mov
je
jmp
or
std
mov
sti
nop
mov
movsl
push
and
jle
shlb
scas
test
data16
lret
cmpsb
call
cmp
cs
enter
mov
or
rcrl
leave
lret
mov
outsl
movsl
sbb
stos
ds
jle
inc
es
sub
fcomp
mov
loop
xchg
dec
loope
cld
stc
arpl
in
stos
inc
mul
cs
popf
ret
and
imul
inc
mov
sbb
add
inc
jmp
frstor
loopne
stos
push
lock
mov
mov
bound
test
outsb
pop
ljmp
inc
in
cmp
sub
aaa
pop
fdivs
mov
sbb
add
xlat
sbb
sub
fidivrl
lock
loope
stos
lcall
inc
adc
addr16
xor
and
xchg
or
lahf
cld
mov
stos
pcmpeqb
sub
jne
pavgb
loopne
and
ljmp
loope
add
add
push
inc
in
xchg
add
xchg
mov
mov
and
adc
mov
xorb
cld
loopne
fucom
dec
push
jl
or
sbb
sti
jl
mov
jnp
mov
aas
sbb
je
arpl
out
or
inc
nop
jne
mov
jnp
push
add
mov
push
jns
xor
pop
cltd
cs
mov
test
fstps
imul
repz
xor
out
push
test
mov
movsb
jecxz
mov
out
movsb
fiaddl
cmpsl
mov
or
sub
add
pop
push
push
scas
mov
inc
inc
into
leave
out
into
in
aad
and
add
lcall
sarb
pop
ss
cmc
mov
and
dec
inc
popa
outsl
aas
jo
imul
inc
adc
mov
cmp
mov
not
cmpb
mov
cmpsl
repnz
popf
js
and
shll
lods
and
insl
push
or
jmp
cmp
mov
or
jmp
mov
adc
dec
cmpsb
pop
push
cmc
push
loop
mov
add
divl
sub
add
inc
cmp
or
sub
add
push
cmp
pushw
pop
cs
jmp
and
test
dec
lret
mov
sub
stos
add
mov
adc
push
fildl
mov
ljmp
jl
outsl
out
jle
jno
int3
subb
shrb
fimull
popf
stos
jne
xor
dec
push
sti
sbb
jge
xlat
inc
outsl
iret
and
adc
fimull
cmc
out
les
popf
test
dec
sub
xchg
jb
mov
jns
je
pop
inc
push
js
cld
adc
or
popa
cltd
test
ljmp
test
and
int3
jmp
ret
xchg
pop
or
jo
xchg
sbb
push
int3
test
jnp
add
scas
lea
sub
xor
push
sub
mov
lds
adc
or
lret
ret
or
mov
nop
lcall
lods
les
int3
jl
ficoms
adc
sub
push
xchg
loope
mov
jl
cmp
mov
pop
pop
xor
sbbl
push
xchg
xor
js
mov
push
xchg
pop
add
xor
add
add
testl
andb
adc
mov
add
into
jmp
inc
int3
pop
adc
std
lret
xor
pop
jb
loope
mov
mov
push
add
sahf
imul
mov
jnp
add
xor
les
xor
mov
adc
jl
cmp
out
adc
sub
aam
mov
fcmovne
movsl
push
sbb
repz
icebp
aaa
out
ss
cmp
das
mov
popf
mov
stos
adc
push
xchg
cli
xchg
and
sub
jl
jbe
and
int
xchg
push
adc
inc
and
out
ss
ret
inc
jnp
scas
dec
sbb
cmp
adc
mov
fcoml
cmovs
out
outsb
or
xchg
add
sti
or
inc
data16
scas
pop
jbe
stos
xor
shr
test
loope
setg
xor
jge
mov
add
rol
add
add
mov
arpl
and
shll
je
aas
cmp
ss
into
outsl
mov
or
push
fs
jge
or
shlb
pop
push
xor
push
cmc
jnp
sub
aas
call
je
fldcw
cmp
pop
mov
adc
stos
pop
dec
call
les
hlt
mov
gs
pop
cli
or
inc
test
ffree
lds
sahf
cmpsl
dec
cmpsl
shll
sub
js
push
addr16
inc
push
fsubrl
xor
roll
shr
pop
push
divb
jo
sbb
or
push
test
es
add
in
lcall
pop
cs
xchg
mov
aam
call
mov
mov
fists
out
lahf
jecxz
pop
lock
into
dec
jg
in
pop
filds
push
rorl
push
imul
lahf
leave
loope
mov
lds
cmp
lahf
jno
dec
cmpsl
daa
pop
cmp
movsl
mov
fnsave
fs
paddb
stc
pop
outsl
jnp
lock
and
mov
or
mov
xchg
pushf
mov
mov
scas
dec
scas
in
clc
dec
sbb
or
mov
outsl
mov
cli
fisttps
into
sub
mov
into
into
push
test
sub
push
test
popa
testb
add
mov
and
lahf
fcmovne
faddl
dec
les
add
xchg
loopne
jle
sbb
xchg
push
aas
inc
arpl
leave
mov
dec
enter
jae
scas
jb
cmp
pop
and
mov
sbb
outsb
pushf
jg
sti
or
and
ljmp
cmpsb
stc
mov
mov
mov
xchg
das
movsb
cmp
into
push
mov
mov
out
sub
sub
lahf
pshufw
inc
cmp
push
mov
jmp
outsb
pop
lahf
pop
sahf
sbb
test
cmp
aaa
lock
movsb
rcl
cmovb
ss
repnz
push
and
jno
stc
lret
inc
cld
mov
shlb
dec
idivb
adc
ficompl
and
cs
les
ss
or
xor
xchg
fwait
xor
loopne
jne
adc
dec
fwait
sbb
ljmp
inc
rclb
and
sbb
addl
fistpll
adc
out
loop
test
popf
fmull
icebp
out
dec
mov
and
push
xlat
xor
ret
ret
in
lds
sahf
mov
aaa
mov
add
sbb
sti
xchg
push
or
push
adc
push
xor
cmp
add
mov
fnsave
lcall
hlt
int3
dec
imul
jmp
adcb
and
mov
cltd
in
imul
fsub
icebp
testb
adc
stos
push
adc
test
fcoml
jns
xchg
mov
sub
lea
cmp
push
mov
nop
mov
cmp
stc
ret
adc
jne
icebp
rclb
faddl
jb
mov
cmpsb
pop
pop
int3
add
scas
jmp
push
repz
cli
test
sub
scas
cs
dec
and
gs
mov
mov
mov
and
mov
xchg
mov
fsubrl
mov
or
xlat
pop
insb
fbstp
orb
xchg
addr16
sbb
incl
repz
or
or
add
out
stos
xor
add
popa
add
push
dec
dec
test
xchg
sbb
mov
loop
mov
data16
lahf
jnp
push
add
sbb
das
pop
aad
pop
stos
pop
das
push
das
push
pop
pop
xchg
jo
mov
orb
scas
sbb
pop
pusha
pop
or
and
mov
es
pop
xor
adcb
out
jmp
mov
xor
inc
mov
dec
shl
pop
push
push
sub
pop
cmc
ror
mov
jae
push
daa
pop
mov
jno
pusha
inc
mov
mov
scas
sbb
sbb
jl
fiaddl
bound
or
mov
jns
or
pop
mov
in
aad
mov
inc
iret
jne
pop
inc
xchg
sub
pop
sbb
outsb
outsl
fists
call
popa
cltd
sub
not
sbbb
pop
fdivs
sub
xorl
imul
mov
mov
lods
loope
and
add
addr16
pavgw
jmp
cli
cmpsb
shrl
push
mov
dec
cmp
adcl
test
adc
pusha
stos
movb
add
add
js
or
int
ret
movsb
mov
mov
sbb
ljmpw
stos
push
pop
sbb
dec
sub
jl
cmp
jge
xchg
sub
sub
xor
aaa
scas
imul
jo
mov
stc
loope
and
push
je
int
shlb
fstps
icebp
push
lret
rcrl
pop
fstpt
push
int
pop
cmc
pop
inc
inc
mov
out
pop
pop
mov
lahf
insl
es
insb
in
movsl
ljmp
daa
cwtl
fcom
xor
sub
sub
jnp
jne
and
inc
inc
dec
aaa
insl
out
pop
push
xor
or
cld
jl
cmp
mov
xor
nop
cmp
dec
popf
or
inc
mov
mov
repnz
movsb
add
mov
or
loope
clc
in
inc
pop
add
mov
jecxz
sbb
mov
leave
fs
jle
or
xorl
xchg
in
out
imul
test
xor
inc
jne
mov
mov
mov
fisubrs
push
pop
sbb
std
ja
arpl
out
mov
push
ret
dec
into
add
clc
and
lcall
inc
add
or
mov
xchg
test
mov
ficomps
pop
and
xor
mov
fildll
mov
inc
mov
and
and
add
test
jnp
and
xlat
pushf
xchg
push
test
sti
sahf
pop
gs
pop
push
ret
mov
jmp
xchg
add
out
push
fstp
mov
xchg
outsl
out
sbb
mov
push
lcall
call
pop
mov
xchg
mov
or
push
mov
movsl
aam
in
loopne
ds
stos
xchg
mov
pop
cmpb
sub
inc
xchg
inc
inc
or
ja
adc
in
jecxz
stc
cmp
push
dec
mov
xchg
adc
sbb
or
in
shrl
xchg
mov
loopne
mov
cmp
pop
test
mul
mulb
jg
and
jne
psubsw
adc
sub
int
sub
icebp
cli
dec
cmpsl
sub
jo
out
shlb
and
and
ljmp
stos
enter
in
mov
jge
fistl
add
test
or
pushl
sub
or
test
xor
sub
sbb
mov
dec
add
dec
lea
add
inc
iret
mov
dec
sub
push
bound
xchg
sbb
stos
cmc
pushf
popl
insw
sbb
xchg
push
cmp
dec
push
lods
loopne
ror
rorl
sub
and
push
push
notb
insb
jmp
mov
dec
xchg
pop
push
jbe
adc
dec
imul
lcall
faddp
sub
sub
je
sbb
fisubrs
dec
scas
add
mov
xchg
or
jne
int
push
insb
daa
or
jns
call
pushf
jb
int
jbe
push
mov
sub
nop
mov
not
jo
mov
push
mov
repz
stos
sbb
into
outsb
dec
into
cltd
in
jp
mov
push
mov
and
mov
add
pop
mov
int
repz
xchg
jmp
movsb
mulb
xchg
ret
leave
mov
leave
fs
mov
jne
push
cmc
loope
shrl
sarl
test
dec
xchg
mov
jnp
mov
xor
inc
adc
sub
mov
outsl
pushf
sub
in
push
sbb
mov
jae
popf
pop
xchg
in
outsb
insl
popa
lar
mov
jnp
mov
pop
or
mov
sbb
outsb
or
mov
ret
int3
mov
xor
dec
ljmp
jno
in
into
dec
jle
js
mov
daa
jae
xor
dec
pop
add
aas
lods
mov
and
mov
push
cwtl
adc
clc
int
mov
lods
lds
dec
jl
ds
adc
jg
pushf
add
mov
xchg
mov
scas
sahf
sbb
or
cli
cltd
adc
mov
fsubrs
xor
cmc
in
mov
cmc
out
in
dec
fsubrp
mov
sbb
dec
int3
lods
xchg
int3
inc
es
and
or
les
cld
push
ss
fnsave
push
ljmp
outsl
mov
mov
jmp
inc
xchg
ret
dec
faddl
hlt
fwait
sbb
les
std
test
mov
test
leave
mov
mov
cli
add
add
jbe
shll
sarl
add
jp
movsb
push
ja
add
push
ljmp
pop
in
push
dec
jp
jl
mov
dec
push
push
notl
fs
dec
mull
outsb
das
adc
push
stos
mov
pop
clc
lcall
mov
push
pop
inc
rorl
or
mov
xchg
clc
lret
mov
scas
test
out
mov
aam
lea
mov
inc
dec
cmc
lret
shrb
imull
loopne
sbb
pushf
push
aam
lret
popa
adc
fildl
imul
fcomps
jl
loope
fsubl
pop
mov
dec
cmp
fstl
and
test
daa
push
xor
stc
sub
inc
xchg
out
xlat
lret
mov
ja
stos
push
push
and
mov
or
push
mov
lods
sub
cmc
xor
jecxz
notb
mov
shrl
dec
fnstsw
sbb
pop
sub
jb
je
push
ror
jo
xor
jbe
fsubl
andl
xor
mov
mov
rorl
push
mov
pop
push
sbb
jl
icebp
sbb
mov
mov
push
pop
mov
insl
lret
outsl
lods
or
shll
cmp
jecxz
push
sbb
in
or
or
pushf
stos
dec
mov
pusha
pop
push
sbb
xchg
push
xor
pop
scas
xorl
jle
fs
fs
pop
mov
pop
loop
cmovs
cmp
aaa
nop
pop
mov
jae
popa
inc
arpl
popa
in
dec
jge
popa
mov
mov
cmp
in
mov
into
jge
jnp
divb
jl
mov
or
repz
pushf
ret
fcoms
test
lea
pusha
add
inc
mov
fmull
rol
add
push
stos
jecxz
rclb
sbb
or
loopne
push
aad
out
push
add
insl
push
arpl
in
loop
in
pop
mov
lock
and
or
clc
or
mov
cltd
je
test
out
push
pushf
adc
fucom
and
pop
cmp
xchg
jmp
nop
cmp
mov
jecxz
incl
nop
sbb
inc
insb
icebp
fidivrs
test
xor
inc
xor
fwait
lret
loope
mov
push
add
xchg
stc
push
mov
or
fists
fcmovnbe
pop
adc
pushf
jmp
and
lret
jnp
mov
enter
nop
loop,pn
aaa
mull
dec
loop
lea
movsl
pusha
mov
cs
rolb
scas
ror
outsb
mov
jge
int
xor
jge
lret
gs
mov
and
pop
mov
pop
aas
jbe
lret
outsl
add
cld
inc
push
mov
lahf
daa
cld
vmovaps
pop
sbb
push
inc
mov
repz
jmp
xchg
add
in
dec
and
mov
sbb
fdivrl
out
ret
fnstcw
bound
dec
mov
xchg
lea
or
adc
test
push
mov
mov
ret
sub
mov
jb
loopne
lret
xchg
mov
fucomip
jecxz
inc
rorl
cld
jno
xor
dec
jne
hlt
inc
mov
mov
inc
fnstcw
cmp
add
ss
lds
repz
cmc
dec
lods
cs
addr16
cmp
sub
ret
mov
addb
lahf
dec
mov
sub
test
cli
das
inc
dec
adc
arpl
lahf
xor
out
scas
sbb
daa
outsb
lods
add
jmp
cld
xor
add
sbb
jp
mov
repz
js
ret
addl
jbe
hlt
dec
gs
andl
mov
mov
scas
push
jns
fnstsw
pop
pop
push
jecxz
jge
push
push
and
sub
add
scas
cwtl
enter
repz
mov
jo
pop
cmp
lahf
in
pop
pushw
aad
lcall
mov
sub
pop
cwtl
xchg
mov
sbb
dec
shll
in
sbb
hlt
adc
fmull
pusha
push
insl
adcl
jg
mov
and
jle
push
fcoml
dec
lret
fcoms
adc
ss
xor
push
out
jl
or
xor
rcr
test
leave
and
inc
imul
mov
dec
mov
sbb
fwait
push
jne
add
aas
jbe
sarl
dec
inc
jmp
arpl
sbb
push
cmp
or
lahf
stc
xlat
push
sub
cmc
sbb
dec
aaa
sub
mov
inc
movl
lret
pop
shl
dec
out
adc
xchg
mov
scas
bound
push
adc
daa
mov
mov
shll
test
fs
jbe
hlt
jo
mov
add
xor
mov
sti
daa
nop
clc
mov
jb
lea
fdivrs
int3
inc
out
mov
push
test
lret
and
out
lods
add
mov
and
daa
fsubrs
lods
pop
push
scas
pop
mov
pop
mov
xor
cmpsb
cli
cwtl
in
scas
and
int
mov
xchg
xchg
movsl
and
repnz
ret
mov
ss
mov
sub
dec
xchg
fcmove
and
push
test
cmpsb
sbbb
mov
adc
ret
js
frstor
inc
outsb
jne
cmp
enter
popa
dec
arpl
sbb
mov
mov
pop
std
loopne
xlat
mov
push
gs
and
adc
xchg
insb
test
int
aad
insl
ljmp
and
add
mov
mov
cmpsb
inc
lods
xchg
or
out
nop
sbb
orb
pop
clc
js
test
out
lods
insb
rcrb
ljmp
lea
jge
sbb
mov
or
sub
fwait
pop
mov
xchg
jae
mov
add
ja
push
sbb
es
xor
sbb
fstp
and
or
fcoml
adc
aas
inc
fbstp
iret
cwtl
cmp
lods
idivb
imul
pop
mov
push
clc
add
mov
testl
leave
lds
movsb
fldcw
add
roll
shll
push
sub
popf
ficomps
jmp
jle
cld
mov
addb
lock
mov
pop
hlt
mov
je
xor
adc
xchg
mov
rcrb
and
mov
stos
movsl
aas
je
pop
cmpl
push
adc
mov
lods
mov
dec
push
fsubs
push
add
mov
push
and
mov
bound
pushf
mov
cltd
mov
into
fs
pop
popf
push
mov
or
xchg
jg
cmpl
mov
or
xchg
lds
cs
dec
out
or
add
jae
or
sub
jnp
enter
xchg
cld
filds
cmp
xlat
or
mov
fdivs
adc
pop
frstor
cltd
xchg
addr16
mov
add
shlw
mov
and
sub
xor
nop
mov
cltd
cwtl
push
mov
les
test
xchg
push
and
xor
nop
cmpb
dec
sub
cmp
testl
insl
push
pop
sub
shlb
sbb
out
lret
jle
arpl
insb
sub
jnp
jne
rcrb
bound
mov
push
or
std
push
rolb
out
in
mov
xchg
arpl
fldl
das
das
mov
jl
outsl
fcmovbe
xchg
out
cli
sarl
ja
jecxz
mov
xor
ret
xchg
sub
jmp
sub
add
aam
mov
sahf
and
cmpsb
aaa
sbb
mov
push
adc
fsubs
lea
lods
push
adc
cld
insl
mov
je
push
mov
mov
adc
mov
out
shlb
into
or
xor
cld
fwait
arpl
sbb
and
int
daa
std
lret
adc
cwtl
pop
or
in
in
ds
sub
cmp
xchg
out
inc
test
mov
push
and
orl
ds
inc
sar
stos
add
in
sub
movsl
push
adc
dec
inc
aad
imul
xor
inc
int3
pop
les
xchg
leave
mov
in
xor
or
inc
adc
js
pop
out
clc
pop
cltd
das
mov
mov
pop
cmp
data16
cmpsl
repz
sbb
stos
add
in
aaa
rorb
fadds
sbb
stc
je
sub
cmp
mov
and
xchg
and
pop
xchg
jp
cltd
mov
dec
lret
into
orl
sub
inc
inc
add
sub
xor
cmp
jns
jno
xchg
jae
nop
ss
adc
push
jno
mov
jae
loopne
ja
push
in
push
leave
imul
mov
mov
xchg
xchg
lods
mov
dec
call
or
rclb
repnz
xchg
pop
pop
xor
sub
ljmp
lcall
out
jle
aam
cmovp
loop
or
dec
test
out
sbb
inc
mov
cld
and
pop
inc
inc
enter
jbe
push
enter
cs
xchg
mov
ja
cmpsb
mov
enter
lods
clc
vunpckhps
cld
mov
mov
scas
sbb
int
inc
test
arpl
pop
int
dec
lret
or
leave
cmpsb
sbb
inc
push
push
subl
inc
inc
mov
sub
dec
xchg
unpckhps
in
movups
scas
sbb
sub
push
or
pop
loop
push
mov
mov
leave
in
out
sbb
adc
pop
outsb
js
shrl
sbb
lahf
aas
inc
push
aam
mov
mov
xor
sahf
lret
push
gs
test
cmpsb
jo
das
sbb
stc
mov
mov
stos
jp
add
mov
fsubrl
jmp
pop
cmp
in
add
add
dec
aad
aaa
xchg
xchg
xchg
mov
sbb
lcall
cmp
push
pop
mov
pop
adc
fidivrl
jno
and
lret
cmp
jmp
test
xchg
in
mov
loop
movsl
add
push
adc
lock
adc
xchg
into
sbb
adc
ljmp
loope
lods
sahf
hlt
addr16
cli
push
mov
adc
mov
jg
jae
mov
xchg
mov
and
xlat
jnp
xchg
and
mov
sub
add
jns
mov
imul
loope
out
int
xor
sbb
pop
inc
push
inc
test
fisubl
pop
ja
and
mov
dec
out
aas
imul
inc
mov
subl
je
out
sahf
je
int
lock
xchg
mov
cs
jno
mov
jb
dec
pop
or
out
push
ds
test
push
sbbb
inc
jo
or
push
or
inc
mov
xor
jl
in
out
lret
stc
loopne
pop
sbb
scas
pop
adc
mov
fs
mov
jg
jl
pop
adc
rcll
std
loopne
out
insb
aad
testb
jg
or
jae
push
cmp
test
pop
dec
pop
add
fimuls
out
je
loop
push
cli
lds
sbb
popa
sub
setb
push
and
or
enter
cs
xchg
clc
mull
cmpsl
mov
shrl
sbb
lods
data16
in
xchg
out
mov
pushf
xchg
mov
and
rcrb
test
lds
xor
out
shrl
push
rorb
dec
js
inc
push
cwtl
xchg
pop
inc
jge
loop
fs
fucomp
fs
dec
in
in
dec
in
dec
popa
repz
cmp
xchg
lcall
addr16
dec
in
mov
dec
push
aam
nop
mov
pusha
sbb
ja
mov
es
fistpll
and
into
push
arpl
arpl
cli
push
xor
orb
dec
mov
fs
hlt
mov
lcall
mov
js,pt
pop
dec
mov
push
jle
aam
sbb
insb
lahf
std
dec
rcl
scas
stos
mov
dec
cmp
mov
or
addb
cmc
insl
xorb
adc
orb
sub
or
mov
ds
sbb
sbb
cmc
xor
mov
xorb
add
cmp
outsl
pop
adc
lds
fmuls
or
pushf
sahf
out
pop
sub
jnp
dec
xchg
push
stos
dec
jecxz
std
imul
aas
aaa
xorb
fimull
out
and
cmp
jecxz
and
pop
sub
mov
xlat
pop
xor
test
cmp
cmpb
mov
mov
fwait
mov
fsubrs
les
mov
jle
and
push
cmp
movsl
dec
pop
je
add
add
test
cmpsb
pop
push
push
jge
mov
aad
lds
pop
ja
dec
sbb
pop
mov
dec
jl
push
lds
or
pop
mov
arpl
popa
fstl
pop
mov
lds
add
add
sarl
dec
and
dec
aas
sub
cwtl
imul
push
and
mov
stos
add
mov
dec
pop
dec
loope
stos
jmp
or
adc
add
mov
pop
mov
inc
daa
sub
push
sub
push
repnz
loopne
push
sbb
mov
or
jle
stos
dec
mov
fcomps
mov
mov
adc
ja
arpl
das
mov
int
add
sbb
pop
fcompl
fcoms
push
pop
gs
xchg
jne
shll
xor
addr16
repnz
clc
add
sub
xchg
mov
or
fsubs
cmp
insb
and
ss
lahf
inc
fcmove
mov
inc
notb
xor
loop
test
xchg
cwtl
dec
push
add
arpl
imul
xchg
mov
ss
pop
loope
nop
lods
xchg
das
hlt
popf
push
xchg
rclb
sbb
bound
ficomps
push
cmp
popa
cmp
jg
xor
call
pop
daa
adc
xchg
and
js
push
sti
sti
cmp
pop
lret
mov
pop
ficoms
adc
lahf
icebp
jl
in
mov
stos
pop
ds
fiaddl
mov
mov
lahf
jg
sub
clc
pop
or
out
fsubr
into
push
and
int3
sub
fldt
mov
aas
mov
and
ret
cwtl
lds
je
popa
pop
fidivl
cmp
mov
subl
jbe
rcrb
data16
jo
inc
movsb
shll
test
jge
inc
pop
lcall
out
inc
cli
xor
cmp
mov
scas
jp
jecxz
pop
adc
cmc
jo
mov
cld
pushf
repnz
in
mov
leave
int
lock
lds
not
lahf
push
lea
jo
push
or
lcall
mov
lret
xchg
pushf
gs
data16
call
xchg
jno
mov
cmpsb
push
lret
shll
aaa
xor
or
test
adc
inc
out
mov
scas
aam
sub
sbb
cmp
scas
pop
icebp
dec
xor
rcrb
bound
daa
adc
dec
outsb
mov
mov
mov
mov
out
mov
inc
pop
sahf
jae
jecxz
sub
mov
pop
cwtl
lret
and
sub
out
add
inc
sub
mov
scas
int
xchg
ljmp
push
outsl
fadd
sub
inc
popl
jo
push
cmp
mov
mov
inc
or
lods
test
add
lret
pushf
outsl
ss
or
aam
xor
je
and
movsb
decl
inc
jmp
lds
pop
sbb
les
clc
loopne
xlat
mov
and
xor
and
xor
add
sbb
sbb
dec
xchg
ds
push
out
sbb
inc
out
movsl
pop
test
push
inc
addr16
notb
popf
xor
enter
and
jmp
sub
ja
nopl
adc
mov
fwait
mov
or
mov
xor
push
testb
sti
repnz
pop
mov
int
cmp
push
repz
repnz
addr16
mov
lcall
test
pushf
inc
jnp
addr16
mov
sarb
out
adc
out
add
cmpsl
addr16
jg
fildll
in
and
cwtl
pusha
cs
lea
xchg
cld
shrb
lret
loop
repz
push
xor
lea
jno
fwait
les
xchg
rolb
mov
mov
or
les
push
xchg
adc
xchg
daa
cwtl
add
repnz
je
repnz
sbb
aad
pop
and
add
cltd
imul
mov
inc
out
mov
pop
dec
push
out
push
inc
push
aam
adc
and
insl
aas
idiv
or
adc
mov
aaa
mov
push
xor
or
sub
lock
push
pop
push
mov
bound
repz
jnp
mov
int3
jae
jmp
and
rcll
out
and
cltd
cltd
or
divl
xor
cmpsl
imul
es
add
in
push
adc
mov
fwait
inc
mov
cmc
or
inc
cli
nop
mov
sub
clc
sub
insb
shlb
xor
arpl
add
cli
subl
out
mov
cmp
xor
dec
cmp
push
and
adc
and
pop
loop
aad
out
jns
test
push
cmpsl
pop
outsl
mov
out
cli
or
dec
sub
sbb
cld
cltd
in
addl
js
mov
sub
das
cmpsl
ds
cmpsb
cmp
and
repz
ljmp
bound
movsb
fadds
inc
and
je
push
mov
lea
and
imul
or
mov
lcall
out
addb
xchg
stos
or
and
push
inc
adcb
mov
je
mov
into
push
or
pop
test
push
push
enter
sbb
gs
iret
sub
mov
ja
fistl
xor
mov
roll
push
add
std
sbb
cltd
push
sbb
push
daa
push
jno
jae
xor
pop
mov
inc
insb
out
pop
adc
push
jp
das
out
aam
movsb
leave
add
jecxz
push
ds
add
fnstsw
repnz
or
ret
mov
inc
pop
sti
lods
or
pop
lods
hlt
pusha
jae
cmp
movsb
push
adc
repz
and
in
cld
jno
cltd
adc
cmpsb
jg
adc
pop
jno
xchg
hlt
addr16
iret
pop
stos
and
pop
and
xor
sub
sbb
xchg
push
scas
mov
ficoms
fisubl
addr16
fildl
cltd
dec
frstor
outsl
mov
jb
ja
and
adc
mov
cmpl
in
jb
aad
mov
and
les
jecxz
and
xchg
fadds
sbb
jmp
xchg
jne
mov
cmp
add
ds
imul
lret
push
push
jp
cltd
out
orb
nop
mov
daa
hlt
add
mov
cmpsb
add
daa
js
pop
inc
lods
pop
xchg
icebp
mov
jno
cmpsb
and
cmp
lcall
and
xchg
jno
inc
pop
or
jle
xchg
mov
and
dec
movsb
rol
decb
add
adc
mov
movsl
mov
sbb
sahf
gs
ret
xchg
mov
int3
pusha
lahf
sub
pusha
xor
adc
mov
jnp
popf
shlb
push
je
dec
cmp
aas
repz
scas
data16
outsl
dec
inc
shlb
jo
int
fdivr
fwait
dec
sbb
dec
or
jo
jl
jbe
inc
loop
stos
xchg
xchg
fcomps
pop
mov
cmp
andl
pop
stc
jge
lods
jl
imull
or
dec
sbb
fucomp
aas
dec
sbb
dec
or
cmp
es
cmpsl
or
push
dec
xchg
jecxz
jle
flds
inc
mov
fisttps
inc
mov
xchg
push
shrb
cmp
add
cmpsl
xchg
add
sbb
sahf
mov
insl
mov
aaa
int3
out
dec
dec
push
xchg
fs
loopne
sti
shr
std
das
adc
notb
pop
add
out
das
jle
nop
cld
add
jo
or
dec
mov
add
fmull
and
out
arpl
sbb
dec
in
ljmp
iret
fcompl
fildl
loope
add
xchg
sub
hlt
xchg
jae
lds
mov
lods
rol
punpckhbw
jno
ja
jp
jae
imul
aas
and
sbb
xchg
and
sarb
lcall
ret
pop
xchg
and
cmp
hlt
add
push
nop
cwtl
mov
int3
ret
mov
pop
pop
dec
xchg
sbb
mov
or
sbb
repz
movsb
scas
mov
or
and
ret
loopne
das
jo
fcoms
mov
mov
stos
sub
idivl
fldt
scas
out
aas
scas
lahf
jmp
or
xor
icebp
push
loopne
ljmp
sbb
push
mov
push
aad
int3
lret
mov
lret
and
aad
inc
loop
mov
arpl
mov
lcall
lcall
jmp
movsb
and
mov
clc
nop
mov
jbe
push
push
and
push
adc
jmp
ja
pop
lcall
stc
mov
je
xchg
addr16
fwait
aas
add
mov
pop
ficompl
push
sub
xlat
fldl
in
cmp
push
adc
loope
cli
cmp
mov
sbb
pop
sti
mov
in
pushf
mov
sbb
fwait
fs
adc
sub
pop
adc
fisubrl
adcl
xchg
adc
push
mov
add
fisttps
jl
aaa
testb
pop
jnp
sbb
sbb
push
adc
fwait
push
dec
inc
mov
sbb
mov
cmp
jbe
bound
outsl
call
push
and
mov
popa
loope
mov
imul
lret
xlat
aad
fdivl
repz
daa
xchg
fidivrs
push
repnz
lods
fbstp
add
inc
lock
adc
in
xor
inc
scas
inc
rorb
imul
mov
fstpl
pop
loop
insb
add
and
and
cmpsb
arpl
mov
ret
addl
cmp
mov
adc
sbb
dec
stos
mov
stc
xchg
mov
loopne
cltd
inc
sub
push
mov
push
lret
pusha
sub
popf
testl
pop
lcall
stc
xchg
xlat
addr16
dec
cmp
mov
inc
ljmp
dec
std
xchg
out
add
sub
imul
push
ds
pop
rcrb
cs
adc
nop
and
call
scas
inc
jge
pop
lret
movsb
rcl
fisubrl
push
push
in
mov
pop
jb
hlt
loopne
and
out
dec
repnz
cmp
sbb
cmpb
cmp
inc
dec
rol
lret
sbb
adc
loopne
mov
iret
push
mov
mov
mov
loop
leave
inc
out
sub
cmpsb
xchg
lret
js
fstpt
xor
sbb
sbb
sbb
frstor
or
mov
scas
out
push
rorl
in
gs
shl
je
cmp
or
les
fsts
sub
pop
xchg
jns
loopne
mov
enter
movsl
fldenv
test
ljmp
test
push
mov
lods
cld
andl
jae
ljmp
xor
outsb
fsts
dec
jmp
in
ret
inc
int3
lahf
mov
mov
add
int
inc
call
cmp
imull
lods
and
xor
sub
mov
dec
adc
lea
mov
ljmp
insl
pop
insl
jbe
xlat
mov
imul
lret
int3
jecxz
aad
daa
push
jae
enter
cltd
in
movsl
cmp
mov
sahf
mov
cmp
xchg
rcrb
fisubl
mov
xchg
jge
add
cwtl
jp
xchg
test
outsb
xor
mov
push
mov
iret
fstl
dec
mov
lret
xchg
les
js
sbb
stos
das
mov
pop
xchg
sub
pop
mov
mov
inc
xchg
push
testb
add
xchg
inc
out
jle
sbb
ljmp
loop
inc
ds
sbb
jecxz
int3
hlt
fwait
sbb
adc
nop
fnsave
test
adcl
jg
mov
clc
out
add
cmp
cmpsl
mov
mov
jnp
aam
pop
push
stos
mov
xchg
ret
pop
sahf
mov
mov
mov
mov
mov
call
jae
cwtl
das
fdivrp
mov
jp
sub
mov
inc
fidivrl
pop
sahf
adc
test
test
lret
jmp
cmp
das
cmp
jg
ds
in
data16
ret
jg
push
or
sub
cs
in
fs
cmp
adc
push
enter
cmp
rorb
cmp
and
jns
or
inc
fidivl
sbbl
int
fwait
mov
iret
sbb
fdivs
adc
enter
cmp
sbb
sti
cmp
or
pushf
imul
scas
lods
lds
or
test
jns
cmpsb
rorl
addr16
pmovmskb
mov
in
enter
cmpsl
xchg
in
jmp
lahf
mov
or
inc
and
pop
mov
out
dec
stos
dec
sahf
fisubrs
stos
push
repz
jno
jl
mov
pop
fsts
roll
lret
mov
test
jo
jns
xchg
mov
mov
icebp
pushl
jo
inc
jle
fcoml
scas
jp
mov
sub
cmp
mov
mov
jmp
inc
dec
jo
add
pop
fs
or
out
ja
les
nop
and
push
pop
dec
xor
sub
mov
fcmovne
xor
comiss
lea
popf
jne
cmpsl
pop
mov
cltd
dec
clc
dec
jge
bnd
pop
mov
adc
out
jmp
push
lds
and
ss
push
div
xorb
ret
and
dec
mov
das
shll
sub
adc
cmpsb
lret
mov
jns
xchg
pop
lcall
mov
ret
rcrl
shrl
loop
and
lods
mov
inc
ret
fisubs
movsb
clc
das
mov
pusha
cmp
scas
test
xlat
or
sbb
pop
sbb
inc
nop
mov
mov
or
mov
fcoms
pop
je
xchg
mov
jnp
mov
xchg
add
scas
bound
dec
and
push
jecxz
dec
sbb
xlat
scas
insl
fwait
mov
outsl
cmpb
jb
cmp
sbb
push
fistpll
int
dec
inc
rclb
mov
cmpps
pop
pop
push
mov
sbb
and
mov
pop
pop
fs
push
insb
into
mov
jmp
xor
mov
test
loopne
js
pop
ret
stc
mov
jb
mov
test
xchg
in
loope
pop
je
mov
mov
lcall
cmp
dec
movsb
into
pop
dec
cltd
or
xchg
stos
push
int3
lods
pop
xchg
xchg
pop
cmpsb
pop
add
xchg
adc
call
xlat
jecxz
ds
into
add
and
mov
pop
mov
test
push
out
and
aas
xor
mov
outsb
cli
lods
or
loop
in
dec
jnp
pushf
xlat
aas
sbb
dec
mov
xchg
inc
test
mov
test
adc
imul
movsl
lods
rclb
fmull
sub
inc
and
int3
dec
add
dec
mov
addr16
mov
sub
clc
mov
cmp
push
and
movsl
inc
inc
and
popa
jb
ffree
and
insb
pop
ds
xchg
int
bnd
xchg
out
xor
mov
sub
mov
mov
std
gs
jge
sub
fnstsw
xchg
lret
cmpsb
out
ret
pop
ds
dec
das
cltd
inc
mov
pop
jg
jle
jecxz
movsb
dec
inc
inc
stos
shl
insb
outsb
pop
fcoml
xlat
dec
mov
rorl
lret
push
outsl
subb
shll
das
xchg
xor
aam
push
mov
add
jbe
out
outsl
sbb
das
aaa
jbe
shl
bnd
in
into
lret
add
xchg
jne
push
inc
pop
add
gs
xchg
sub
icebp
cmp
xor
jnp
jmp
aad
gs
insb
int
lret
and
cwtl
adc
sarl
pop
shll
jbe
jne
mov
dec
sahf
call
cmc
xchg
jg
repnz
hlt
dec
and
jne
lret
stc
and
xchg
or
stc
push
aaa
out
and
jnp
sbb
sub
popa
into
jae
add
mov
cmp
in
push
pop
mov
or
cmp
sti
xor
adc
pop
xchg
mov
iret
push
and
xor
test
sbb
jge
sbb
mov
sbb
fisubl
push
sbbl
pop
push
jp
cli
cmp
inc
repz
lcall
scas
das
mov
test
sub
xor
imul
push
fsubr
mov
fmull
sub
mov
jnp
addb
fsubrl
push
stc
pop
fidivrs
andb
xchg
mov
xlat
xchg
lahf
mov
push
mov
jno
mov
pop
dec
cmp
mov
push
and
sbb
cwtl
or
subl
xchg
inc
popa
out
je
mov
push
gs
fisttpll
in
notb
or
adc
cmp
push
mov
loopew
aaa
add
mov
or
das
mov
nop
pop
lcall
repnz
pop
jnp
add
ljmp
out
lds
mov
xchg
mov
lock
rcll
mov
loop
mov
xor
xor
adc
loope
inc
cmc
mov
adc
adc
or
fsubrl
call
jno
sahf
lods
dec
jmp
and
cmp
subb
pop
cmp
cs
jle
test
arpl
lahf
out
leave
pushf
out
push
cwtl
xchg
mov
xor
xchg
aas
das
xchg
out
xchg
pop
outsl
push
fbld
daa
pop
mov
inc
clc
popf
mov
cmp
mov
loop
outsl
ss
out
jp
pop
or
dec
push
scas
ja
mov
pop
lods
push
push
and
push
imul
into
sbb
cmp
in
jge
cmpsb
mov
mov
in
lret
xor
lcall
jmp
sti
cli
ror
mov
cwtl
or
cmp
push
push
pop
add
inc
push
cmp
jns
sbb
stos
mov
cmp
imul
mov
pushf
out
mov
enter
adc
add
faddl
mov
dec
je
mov
xlat
sub
mov
inc
mov
sub
jno
xchg
mov
test
ret
mov
sar
jg
iret
xchg
inc
jo
mov
mov
jp
adc
xor
or
ds
bound
shrl
pop
sub
into
inc
adc
pop
lods
andl
or
aas
test
dec
sbb
mov
lock
xor
mov
icebp
jnp
repnz
mov
mulb
dec
dec
jno
push
imul
sbb
outsb
in
adc
shufps
cmp
aaa
jns
push
arpl
cli
push
jnp
inc
repnz
sbb
add
xchg
movsl
push
push
in
inc
js
in
iret
mov
sbb
dec
popf
push
test
divl
xchg
mov
xchg
push
xor
mov
repz
outsl
mov
fsubl
pop
pushf
xchg
sbb
cmp
inc
sbb
add
movsl
mov
addr16
loopne
imul
in
dec
add
repz
stos
xor
adc
js
dec
push
xor
push
and
mov
push
jecxz
arpl
cmp
jg
mov
pop
xchg
ud2
adc
pop
xorl
out
ss
sub
gs
je
repnz
pushf
xlat
pop
jmp
dec
test
bound
ljmp
cwtl
dec
jae
dec
in
xchg
push
das
sbb
mov
lock
push
nop
sbb
mov
pop
jo
clc
sub
jnp
push
into
outsl
int3
xor
adc
shll
and
xor
outsb
test
jb
cld
dec
ds
jecxz
xchg
jbe
sbb
mov
aas
outsl
pop
mov
jge
mov
add
les
cltd
inc
gs
xor
orl
lret
roll
addr16
sbb
cmpsl
nop
add
xlat
in
jge
popa
push
insl
rcl
and
out
int
notl
pop
jo
out
mov
dec
inc
jnp
adc
cmp
testb
inc
xlat
das
dec
in
pop
xor
push
and
insl
cmp
idiv
and
xlat
test
test
cmpb
loop
dec
mov
loop
cmp
xor
out
mov
pop
pop
pop
inc
mov
xchg
repnz
inc
loop
dec
outsl
xchg
sub
dec
jae
lods
test
lcall
shl
mov
fisubrs
push
inc
pop
xchg
sahf
test
mov
sbb
call
pusha
loope
cwtl
arpl
sub
enter
ret
pop
je
lea
pushf
xchg
jb
pop
ljmp
fildll
adc
scas
inc
mov
subb
sub
les
xor
cltd
ret
cmpb
adc
xlat
mov
push
add
add
mov
jg
inc
sub
mov
test
lods
mov
mov
xor
xchg
fdivrs
inc
insl
out
loope
sub
cli
fwait
push
mov
fstpl
push
test
aad
and
cmp
xor
cltd
das
and
imul
ljmp
inc
mov
mov
jp
dec
xchg
es
popf
add
mov
bound
test
push
mov
push
scas
adc
daa
cmp
or
pop
adc
cld
les
push
sbbl
cs
jp
pop
xor
jne
pop
add
imul
inc
ret
ret
cld
xor
pop
test
int
xor
movsl
xor
rcll
mov
jge
adc
stos
fs
jnp
mov
fs
xor
shl
jl
aam
fwait
loope
scas
cltd
jle
mov
add
imul
jmp
stos
iret
cwtl
rcrl
or
push
ficoms
and
pop
add
push
cs
push
mov
loop
push
insb
out
add
stos
mov
xchg
repnz
jge
dec
lahf
stos
and
mov
call
pop
jmp
cmp
sbb
dec
icebp
mov
rcll
sahf
fcmovnbe
popf
lods
loope
or
mov
outsb
pop
push
add
rcll
daa
aad
arpl
nop
test
xchg
pushaw
xor
ret
mov
or
jecxz
adc
outsb
enter
add
mov
or
addr16
mov
sbb
mov
or
ret
inc
dec
shll
pop
xchg
xchg
push
or
jo
jle
hlt
sub
cmp
pop
dec
xchg
xchg
cmc
pop
into
dec
negb
inc
push
outsl
outsl
adc
dec
dec
jnp
or
int3
inc
or
ljmp
and
sar
adcb
adc
shrl
push
mov
inc
pop
adc
cmc
rcl
pop
into
cmc
mov
repnz
xor
or
scas
std
jae
cmp
mov
rcrl
lea
movsb
repz
mov
cmp
ja
iret
repnz
mov
insl
leave
loope
jae
leave
jns
lods
sbb
cmp
push
and
add
push
repnz
ret
ret
cmpsb
shlb
mov
xor
pop
cmpsb
pop
lret
ret
pop
adc
pop
cwtl
rcrl
adc
test
inc
pop
es
into
inc
mov
mov
dec
lret
jle
out
mov
test
jle
sbb
dec
or
and
pop
adc
daa
pop
lret
jne
fwait
mov
jo
jae
or
pop
in
scas
fcomi
in
push
adc
mov
in
ficompl
aaa
xorb
repnz
xchg
aam
mov
in
add
pushf
add
push
and
aas
sub
jno
mov
rol
cmc
imul
loope
sahf
lds
add
push
pop
pusha
sub
and
gs
mov
push
and
icebp
lahf
je
test
push
jge
sahf
mov
xchg
dec
cmpl
mul
inc
mov
push
push
imul
jne
xchg
inc
repz
mov
in
or
pusha
jmp
ja
jmp
xor
or
xor
loope
jo
inc
jmp
adc
loopne
jmp
loope
inc
in
inc
scas
mov
cmp
mov
pop
push
pop
and
shll
mov
nop
lret
test
xorb
inc
repz
inc
and
lock
out
pop
repnz
or
aaa
jno
mov
orl
sub
push
fistpl
lcall
or
add
sbb
mov
sbb
add
mov
cld
mov
dec
and
es
xchg
xchg
je
stos
lret
ret
xor
vxorps
fistl
bound
inc
das
in
in
adc
pop
aam
pop
adc
xor
pop
xchg
out
lahf
daa
es
or
jge
cmp
cmp
pop
call
outsb
iret
push
mov
jb
sbb
mov
jge
cmp
inc
insl
in
or
push
sbb
pop
mov
sbb
xchg
int
xchg
push
dec
ja
jnp
pop
std
fnstcw
pop
pop
xor
icebp
xlat
xor
imul
icebp
push
push
mov
aam
pop
push
jge
jb
dec
gs
iret
divps
in
inc
mov
jns
loope
hlt
dec
cmpsl
movl
dec
fs
jno
inc
divb
pop
out
jp
arpl
push
sbb
divb
pop
sbb
cltd
fmuls
daa
add
loop
lret
insb
sbb
pavgw
or
sbb
daa
dec
adcl
cmc
testl
dec
out
add
sahf
hlt
lcall
pop
ss
mov
cmp
inc
pop
sarl
mov
cmp
mov
aas
ja
mov
mov
ss
rclb
js
out
sub
ds
cmp
lcall
addb
ror
and
pop
ret
dec
jge
or
add
imul
mov
dec
xchg
push
rclb
dec
add
fucomip
nop
sti
cmc
adc
imul
orl
push
jae
or
jnp
mov
stc
or
xchg
inc
sarl
loop
loop
adc
push
imul
mov
loopne
js
pop
iret
mov
repnz
jnp
repz
mov
jl
loopne
mov
and
xor
adc
push
sti
sbbl
and
sbb
pop
xchg
out
jbe
rorl
les
mov
xor
sbb
push
nop
daa
adc
jle
pop
xor
xchg
or
decb
push
mov
dec
fisttpll
xlat
mov
scas
dec
fstpl
pusha
sti
push
lods
pop
mov
add
push
mov
mov
cmp
inc
into
repnz
dec
xchg
jmp
dec
cmp
outsl
sub
mov
xor
mov
dec
dec
addl
mov
jo
cmpsl
orl
inc
rcrl
mov
stc
std
popf
xlat
pop
adc
rclb
jnp
jmp
test
shrl
add
inc
aaa
pop
push
push
xchg
dec
xor
imul
loop
arpl
adc
push
pop
cmc
int
adcb
xchg
shll
mov
aad
mov
jb
xchg
mov
cmovns
aaa
add
pop
js
adc
cli
dec
cs
enter
inc
bound
imul
fwait
idiv
push
movsb
lcall
cltd
jecxz
stos
dec
cmp
mov
movsb
inc
lretw
jg
jo
pushf
in
mov
jp
jecxz
lods
mov
sub
push
mov
xorl
push
xor
xor
scas
jle
mov
inc
xchg
outsl
call
jmp
sub
or
hlt
out
fbld
sbb
sbb
test
lods
pusha
and
int3
push
sbb
push
cltd
cmp
jae
inc
roll
filds
adc
sub
icebp
inc
cmp
xchg
mov
enter
inc
mov
loop
mov
iret
int
call
lods
and
sub
fstpl
pmullw
or
outsl
sub
es
fwait
push
hlt
cmc
inc
add
mov
or
jno
xchg
addb
mov
mov
sahf
or
or
sub
movsb
lock
and
mov
adc
jno
jne
out
push
test
mov
shrl
sti
in
mov
leave
scas
and
push
lahf
mov
pop
xlat
and
rol
pop
and
repnz
xorb
pop
add
pop
mov
mov
sbb
mov
xchg
xchg
pop
popf
shlb
and
inc
push
les
andb
mov
inc
pop
pop
jne
mov
adc
pop
sub
enter
lea
pushf
out
cmc
mov
insb
es
inc
pop
jmp
pop
das
in
xchg
mov
loop
not
push
movsl
out
pop
dec
or
mov
mov
pop
pop
cmp
or
cmp
es
jl
mov
mov
jb
pop
out
jp
les
add
addr16
sub
enter
xchg
shr
call
push
pop
iret
rcrb
mov
int
cmpsl
mov
inc
mov
push
cwtl
cmp
hlt
push
outsb
sbbl
insb
mov
cmp
mov
push
dec
stos
mov
pop
incl
xchg
pop
les
incb
xlat
mov
mov
mov
xchg
xor
pop
cmp
test
inc
add
lcall
mov
cmpsb
das
sub
test
cmp
lock
ss
add
std
lret
sub
ds
cmp
sub
mov
mov
negb
xor
jl
sbb
and
and
mov
dec
xor
outsl
xor
pop
mov
add
les
sbb
inc
cmp
mov
mov
scas
push
cmc
pop
mov
call
ljmp
rep
xchg
movsb
rcll
lock
lcall
pop
mov
xchg
mov
loop
mov
icebp
sub
xor
dec
pop
adcl
ja
pop
mov
cli
adc
sahf
jge
int
lret
mov
fcoml
aas
das
mov
sahf
mov
cmp
dec
cld
adc
add
inc
mov
pop
arpl
jno
sbb
scas
loopne
cmp
adc
mov
movd
pusha
mov
je
rolb
enter
nop
mov
roll
mov
fisubs
cmpsb
sbb
xor
push
js
enter
xor
or
pusha
pop
stos
fldl2t
mov
adc
iret
je
cmp
movsb
lods
jb
fistl
les
mov
ljmp
xlat
call
scas
jge
add
jns
stos
fbld
mov
xor
dec
ja
pop
ficoms
popf
gs
arpl
movsb
inc
movsl
push
shrb
scas
sbb
dec
incl
testb
rcr
scas
in
mov
movl
inc
adc
add
out
push
add
xchg
pop
or
icebp
ss
aaa
cmovns
cmp
fldl
push
shlb
add
icebp
test
hlt
mov
pop
out
mov
test
pop
int3
mov
push
sbb
push
push
xlat
movsl
call
jecxz
adc
movsl
rclb
ror
sar
insb
mov
sbb
jmp
lahf
jb
push
pop
xor
ret
int3
adc
add
vpsubusb
pop
mov
cltd
outsl
scas
pop
inc
clc
sbb
cmc
sub
jb
pushf
push
lea
test
push
nop
repz
imul
dec
out
push
or
mov
insb
sub
sub
scas
loopne
pop
mov
stos
or
cmpsl
or
xchg
push
mov
xchg
lods
ret
pop
jge
sbb
xchg
addl
xchg
fsubrl
dec
int
clc
inc
pop
clc
sbb
cmp
lods
pop
push
sti
xchg
add
push
icebp
les
mov
ret
or
mov
sub
push
sub
sub
es
inc
dec
push
mov
out
outsb
mov
shll
cmp
dec
dec
movd
dec
imul
inc
add
mov
mov
leave
in
hlt
nop
popf
xchg
fidivrl
mov
rcrb
adc
lds
dec
orb
or
mov
mov
int
push
stc
enter
adc
insb
mov
fwait
mov
mov
push
jno
mov
lods
inc
out
adc
jl
nop
das
stos
mov
mov
mov
cwtl
int3
cmpl
daa
inc
lret
xor
es
imul
insb
test
sub
cmpsl
int3
outsl
cmpsb
enter
jge
jge
pop
sub
inc
pusha
scas
mov
mov
loop
insb
push
stc
jo
into
cli
mov
pop
xchg
outsl
ret
xchg
in
movsb
sbb
mov
shrl
fisubrs
jle
lods
mov
inc
sti
cwtl
cld
sarl
das
mov
push
xchg
fistps
subl
xlat
sub
es
mov
sahf
mov
xor
fstl
sbb
sbb
cmp
sub
pushf
mov
mov
inc
pop
repz
push
jp
fimuls
aas
cmp
pop
adc
ret
xor
xchg
cmp
push
jb
mov
cli
adc
imul
jl
adc
insb
adc
bound
test
mov
imul
pop
jp
fcoml
dec
sub
pop
insl
inc
bound
mov
out
mov
arpl
pop
push
iret
and
mov
dec
adc
pop
fidivs
imul
adc
pop
sub
fcoml
inc
mov
sbb
in
addr16
push
push
adc
test
stc
jmp
lret
push
imull
xor
dec
aam
lcall
loop
dec
dec
push
pusha
shl
lahf
sub
jb
mov
and
daa
in
xabort
pusha
pop
insb
add
inc
jp
iret
fstpl
push
cmp
xchg
enter
andb
push
pop
in
pop
stos
xchg
lahf
cmc
lods
scas
out
stos
or
stc
mov
imul
sbb
add
add
and
fdivrl
cld
xchg
mov
xchg
lret
stos
dec
sbb
inc
mov
push
and
xchg
int
cmpsl
or
push
ss
test
dec
jo
cmp
shlb
ja
fs
push
sbb
cltd
jb
lcall
int3
lock
push
cmp
pop
icebp
test
mov
add
fistl
mov
js
inc
fidivs
mov
jl
add
xchg
pusha
stc
mov
push
stos
xor
add
mov
dec
adc
fs
adc
jl
mov
mul
mov
sahf
sub
stos
sub
lea
pop
aam
and
shrb
xor
stc
and
mov
xchg
push
movsb
movsl
insb
mov
inc
mov
cmp
cmc
or
or
mov
xor
push
cwtl
out
jg
dec
out
add
sbb
pop
ror
dec
ds
rcrl
mov
pop
jmp
xor
pop
iret
movsl
ds
mov
icebp
loope
mov
js
add
or
sbb
nop
call
hlt
cmp
xor
mov
pusha
add
pusha
dec
push
xor
loopne
jmp
push
lds
xchg
stos
add
mov
cmc
sbb
pop
cmp
sbb
addl
shll
roll
repnz
inc
test
fstl
rcll
adc
mov
addr16
mov
pop
ds
adc
js
inc
jns
orb
mov
sbb
push
cmp
fdivs
fldcw
sarb
mov
test
fcompl
add
ret
sbb
mov
inc
sub
outsl
hlt
xor
push
cmpsl
add
sub
pop
js
mov
cmpsb
cmpsl
je
jnp
mov
mov
sub
mov
rcrb
pop
dec
fcmovne
enter
inc
out
sub
sub
mov
push
cmp
call
lahf
push
inc
lret
adc
in
ret
xor
lahf
rolb
ljmp
sub
and
cmp
pop
shlb
gs
loope
js
dec
loop
jbe
stos
jmp
outsl
mov
cltd
inc
xor
out
scas
pop
cmp
mov
jnp
jmp
mov
fs
xor
jae
hlt
mov
lods
int3
cmp
jp
xchg
xchg
nop
and
sub
in
test
jecxz
xor
cwtl
jmp
pusha
jecxz
aad
sti
cli
adc
fsubrs
jnp
fcomps
in
adc
aas
cmpsl
push
jne
adc
adc
flds
lds
jbe
push
jmp
push
push
roll
pop
sbb
mov
pop
pop
add
mov
test
push
dec
jae
mov
add
das
fidivrl
movsl
push
pop
mov
xchg
add
sti
jno
mov
mul
inc
push
icebp
shll
sbb
shl
mov
sub
mov
mov
cmp
mov
out
xor
popf
pop
mov
xor
das
lods
jg
sbb
dec
inc
dec
ret
jecxz
mov
stos
je
iret
pusha
jne
push
loopne
fldcw
imul
int
enter
mov
je
mov
clc
js
sbb
pop
mov
mov
fmuls
pop
cmc
cmp
jno
xchg
sbb
in
cli
popf
int3
jecxz
test
js
push
call
cmc
imul
fxtract
push
jmp
add
pop
pop
inc
cltd
iret
and
scas
sahf
or
movsl
shlb
lods
std
test
xor
movups
mov
mov
xchg
push
sub
or
paddusw
or
push
test
enter
cmpsb
jnp
push
and
int
sub
sbb
xchg
mov
xor
jb
ret
and
push
repnz
and
insb
jmp
sbb
out
inc
sbb
mov
daa
jp
out
cli
xor
mov
push
insb
push
sub
jmp
incb
jp
mov
push
xchg
push
sub
cmp
cmp
add
outsb
repz
mov
ss
pop
or
xor
fwait
andb
add
jo
out
dec
hlt
mov
fstpl
cmp
pop
xchg
adc
jne
loope
add
frstor
fisttps
jo
inc
call
fldl
adc
adc
cs
stc
cmpsl
cld
out
xor
sub
test
and
pop
adc
adc
push
popf
xchg
ds
inc
pop
insb
push
mul
and
pop
mov
mov
cmp
add
mov
xchg
mov
lahf
cli
loope
mov
rorl
out
pop
push
jb
sub
ljmp
adc
cld
loop
xchg
add
mov
js
push
inc
add
mov
sarl
fldl
imul
inc
scas
fs
mov
mov
popf
popa
lea
inc
jne
popf
dec
xchg
repnz
jg
nop
pusha
cs
add
mov
imul
or
andl
add
lock
xor
mov
xchg
push
xor
iret
sahf
dec
mov
cmp
push
jmp
xchg
adc
pushf
cmpsb
mov
int3
mov
adc
inc
es
pop
ret
push
sbb
in
mov
fcoms
icebp
xor
pop
push
jb
hlt
xor
jb
data16
clc
fisubs
push
mov
cwtl
sub
out
add
sub
clc
jae
cmp
outsl
push
rcll
out
cwtl
call
sbb
inc
in
pop
sbb
xchg
mov
jge
pop
sbb
scas
shrl
mov
cmp
cmp
loope
ret
fists
dec
push
mov
daa
icebp
mov
lods
inc
notb
sbb
in
or
clc
lret
call
into
or
push
xor
mov
js
push
rcll
pop
lock
cmp
and
and
sarb
lods
push
inc
pop
ljmp
dec
cmp
dec
sub
xor
and
js
cmp
adc
mov
ret
xor
dec
out
push
push
rorl
and
cmp
sbbl
nop
stos
cmc
jle
ss
in
dec
rolb
mov
jae
inc
dec
cld
sub
ja
jae
mov
xor
mov
jl
das
pushf
out
enter
pop
add
inc
aas
push
popl
insb
jb
in
mov
shll
rorb
and
mov
repz
loope
out
jg
mov
cmp
mov
jae
leave
and
and
out
fistl
adc
cmp
pop
insb
gs
movsl
xor
mov
add
jg
and
push
dec
cmpsb
cmp
test
rcl
jecxz
in
popf
es
jo
xchg
les
xchg
fldenv
cmp
or
pop
pop
add
mov
xchg
mov
adc
pop
jg
mov
cltd
ja
sub
sbb
xchg
rolb
mov
and
int3
dec
jne
push
inc
jle
enter
in
call
push
mov
inc
repnz
dec
dec
scas
xor
mov
sahf
mov
sti
ss
mov
push
ret
mov
mov
mov
inc
adc
add
aas
test
jne
and
roll
jmp
add
jo
ljmp
jecxz
sub
mov
mov
iret
mov
inc
mov
movsb
mov
sbb
xor
lock
or
hlt
pop
inc
xchg
enter
popl
mov
cmp
add
or
pop
mov
fs
jp
addr16
sbb
repz
or
xchg
xor
stos
xchg
enter
popa
rorl
sub
movsl
adc
in
sarl
mov
das
sbb
sbb
pop
mov
inc
and
jns
daa
cmc
in
cli
fstl
int
jo
xchg
mov
into
adc
xor
addb
xchg
mov
enter
dec
loopne
sahf
daa
xor
lods
jl
repz
data16
mov
int
pop
jo
sti
mov
sbb
push
fistpl
dec
stc
pop
mov
mov
in
cmpsb
xchg
cld
repz
mov
adcl
xchg
mov
dec
out
fldt
add
rcrb
repnz
sub
and
cmc
daa
dec
adc
mov
data16
and
mov
push
dec
call
sub
test
mov
or
fwait
mov
es
test
mov
and
and
popa
shl
sbb
addr16
inc
mov
xlat
mov
jnp
inc
fistpll
jl
xchg
mov
stc
adc
dec
mov
test
insb
lret
mov
sbb
dec
mov
jg
push
clc
movsb
sbb
inc
cmp
in
add
or
out
insl
rcll
add
mov
and
sbb
test
mov
jg
mov
add
push
call
dec
arpl
ds
push
mov
pshufw
cld
outsb
mov
push
in
ljmp
cld
pop
pop
push
dec
lcall
faddl
add
sarb
jmp
xchg
inc
aas
xchg
sbb
adc
push
int3
add
dec
cmpsb
mov
popa
or
ret
leave
mov
dec
sbb
pop
lret
sbb
or
pop
or
ret
pop
outsl
sbb
test
pop
xchg
sub
push
sbb
cli
in
xchg
jecxz
sar
sub
sbb
test
and
in
movsl
out
iret
mov
into
sbbl
scas
jne
pop
jle
pop
mov
cs
orb
imul
addl
jnp
lods
pusha
cmc
jp
mov
loop
stc
fdivl
push
xchg
sub
dec
xchg
mov
mov
and
xor
xchg
jne
and
mov
xor
xchg
push
sub
push
mov
rcrl
scas
sbb
dec
add
xchg
jle
xor
xchg
loop
cmp
cmp
jae
cs
jp
push
lret
xchg
jl
in
mov
cmpsb
adcb
cmp
shlb
fcmove
ficoms
in
push
std
xorps
sub
insl
pop
dec
and
xchg
pusha
push
in
roll
loope
idivl
nop
test
inc
pushf
and
mov
lret
fsub
jb
ds
adc
out
inc
stos
mov
fwait
mov
mov
cmpsb
xchg
mov
and
jbe
inc
and
sub
push
dec
inc
fs
nop
shrb
shrl
int3
imul
scas
push
push
inc
sub
shl
mov
push
adc
and
push
adc
stos
or
enter
roll
xlat
jl
mov
shlb
add
daa
push
mov
inc
and
pop
in
dec
jbe
push
sub
les
fucomp
cmp
addb
sti
ret
data16
cmp
lods
imul
repz
sbb
ret
mov
push
mov
jbe
mov
jno
fnsave
push
rcrl
out
and
ret
and
xchg
jnp
xor
icebp
adc
push
pop
cwtl
stos
xchg
xchg
ja
and
cmpsl
std
inc
in
call
mov
xor
int3
mov
icebp
int
cmc
faddp
cmp
adc
xor
push
aam
jecxz
sub
jp
fs
daa
jb
xchg
and
dec
es
ds
add
pop
mov
iret
loope
sub
jmp
jbe
add
inc
push
inc
mov
pop
fwait
sub
mov
das
and
fwait
mov
sbb
push
hlt
add
add
das
pop
or
sbb
jmp
push
mov
ret
out
sub
jo
xor
insb
pop
dec
sub
push
push
push
mov
mov
lret
jmp
mov
mov
xor
sub
xor
cmp
outsb
stos
leave
mov
xchg
xor
or
inc
jle
insl
xor
andl
lods
dec
lods
je
jo
rcll
iret
sbb
test
sub
xlat
into
jmp
and
push
jecxz
mov
pop
cmp
push
mov
call
pop
outsb
inc
adc
pop
sbb
sub
adcb
cltd
mov
sahf
add
sbb
into
lods
stc
mov
lods
arpl
xor
cmc
dec
daa
dec
jnp
mov
add
icebp
mov
in
arpl
cmpsb
icebp
jae
mov
in
lods
xchg
scas
out
xchg
or
push
push
jae
xor
daa
jle
pushf
cmc
sbb
sbb
jae
sbb
push
shr
push
and
xor
aaa
pusha
jl
dec
fdivs
pushf
in
or
push
cmp
cmp
mov
mov
sbb
mov
push
pop
into
test
mov
andl
xchg
or
mov
out
arpl
movsl
das
incb
dec
push
in
sarb
sti
push
outsl
and
jno
pop
sbb
xor
jg
cmp
push
leave
imul
test
jmp
xlat
stos
not
ljmp
xor
iret
sbb
xchg
ja
es
cmp
jg
or
jnp
lret
out
mov
lea
hlt
insl
jge
repnz
add
push
leave
fiadds
lret
iret
orb
add
jb
xchg
cli
stos
insb
xchg
scas
pop
dec
cli
dec
xchg
lea
imul
in
out
add
lea
jns
clc
jl
jp
imul
shrl
int3
sbb
stos
rorl
fwait
jb
arpl
jle
xlat
add
jg
fdivrs
xchg
jne
xchg
or
sbb
mov
in
cmp
cltd
xchg
inc
mov
sub
sbb
andl
jns
testb
jecxz
mov
sub
xchg
lret
jnp
sbb
inc
pusha
mov
fidivrs
and
insl
int
loop
ss
jnp
js
fldenv
aam
std
rcrl
xchg
es
dec
and
push
mov
fucomip
or
in
xchg
leave
cmp
add
andb
adc
jb
call
mov
aas
adcb
stos
jmp
fwait
sbb
inc
subb
jo
mov
pusha
jb
int
fildll
mov
test
and
outsl
js
cmpsb
enter
or
lahf
inc
add
xor
dec
push
mov
pop
mov
repnz
sub
dec
in
cld
addl
cmp
lret
icebp
lahf
insb
jmp
inc
xor
push
outsb
pop
pop
dec
in
or
xchg
mov
stos
cmpsb
cmp
push
sub
and
arpl
sahf
cmpsl
pushf
push
push
xor
call
mov
pusha
inc
outsb
sub
adc
cmc
xchg
push
inc
pop
xchg
ret
mov
lret
pop
repz
std
stos
aad
inc
add
fistpll
ja
int3
jecxz
mulb
add
pop
cmp
mov
mov
aad
imull
pop
xchg
cmp
es
fsubrs
test
xchg
push
icebp
pop
add
pop
insl
sahf
es
xchg
jne
cltd
sub
pusha
out
call
push
out
aad
stos
ficompl
aaa
les
jnp
lds
insl
out
js
mov
mov
or
subl
jecxz
jns
arpl
rorl
shr
and
mov
jge
push
lret
dec
jns
hlt
xor
sbb
fcomps
out
inc
mov
insb
jl
sbb
adc
aad
jmp
cld
gs
pushf
mov
enter
cmp
inc
movsb
push
test
mov
xchg
vsubss
cs
lds
aam
pop
push
adcb
and
aam
dec
sbb
sub
cli
push
popa
je
inc
pop
aaa
shrb
lcall
push
cmp
rcrl
dec
dec
mov
xchg
shrl
sbb
cmp
jbe
mov
movsb
mov
outsl
cmp
sub
arpl
das
jg
dec
xchg
xchg
push
or
cmp
insl
add
push
jp
lods
test
jg
inc
pop
adc
fs
jg
add
adc
xchg
sub
jle
outsl
int3
add
fcomi
div
in
stc
cmp
sub
sub
cltd
std
shll
cs
cmp
cld
sbb
lock
sbb
mov
dec
adc
dec
sub
aas
cmp
shlb
mov
popf
test
sub
push
xchg
sub
jg
or
sub
pushf
push
pop
inc
in
loop
mov
adc
push
mov
add
fcompl
and
arpl
aad
rcrl
dec
jp
mov
mov
cmp
rcll
push
mov
sub
mov
int3
pop
test
mov
int3
cmpsb
test
add
loop
jmp
mov
jns
daa
sahf
dec
test
aam
pop
jecxz
jge
rcrb
clc
es
and
xor
pop
mov
cmp
cltd
xor
cmpsb
add
test
outsl
aas
sub
sbb
xchg
sahf
or
adcb
lahf
jns
out
mov
into
test
rcll
and
lock
jmp
xlat
stc
int
pop
nop
and
dec
adc
push
xor
icebp
cmc
jge
jnp
sbb
rorl
stos
call
jg
inc
dec
dec
scas
mov
push
dec
push
imul
scas
test
mov
shll
push
or
adc
xor
adc
inc
add
mov
inc
pop
test
push
sub
cltd
dec
fwait
add
push
rol
adc
std
sbb
movsb
orb
sbb
push
mov
out
mov
rol
aas
sbb
enter
loope
sbb
adc
idivb
push
jae
lcall
in
xchg
fucomip
xor
or
ja
sti
mov
push
movl
pushf
mov
dec
in
lret
xchg
divb
sti
sub
cs
out
scas
bound
ret
xrelease
jns
xchg
insb
popf
stc
sbb
mov
popf
sub
mulb
lods
sub
mov
int3
push
es
call
andl
mov
lods
out
sbb
pop
cwtl
inc
sub
or
daa
dec
bound
jg
jge
push
push
add
rorl
cmp
add
xchg
es
push
ret
lds
negl
aam
fadds
pushf
inc
repz
mov
stos
ds
fs
jmp
and
sbb
push
adc
ss
sub
push
push
inc
pop
enter
pop
notb
in
fimuls
add
or
lcall
jo
ficompl
mov
fbld
insl
add
xchg
shrb
and
addr16
cmpsb
xor
sbb
jbe
sbb
notl
jns
mov
inc
and
jle
jl
ret
jge
test
sub
movsl
dec
pop
dec
pop
or
jle
xchg
imul
pop
mov
jmp
daa
stos
sbb
les
dec
cmp
cwtl
sbb
jge
lea
push
ret
and
add
cmp
test
jmp
or
mov
sbb
mov
and
mov
movb
outsl
in
ljmp
dec
ss
lds
popf
cwtl
popfw
dec
out
cld
icebp
movsl
sub
pop
into
or
add
mov
setno
mov
xor
mov
and
arpl
mov
add
in
outsb
dec
test
ljmp
cld
out
jle
in
divl
cmp
dec
cmp
sti
mov
sub
add
jb
jo
and
cli
xlat
leave
outsb
push
popf
fnstcw
inc
jg
inc
jg
push
and
jp
mov
mov
xchg
mov
sub
add
push
test
and
or
adc
ror
fildll
outsl
jp
add
mov
inc
xor
lods
jae
leave
gs
and
inc
out
pop
lret
jmp
sub
mov
dec
dec
or
cwtl
mov
sbb
sub
sub
adc
lds
inc
sti
push
aad
insl
out
lahf
ljmp
in
pop
data16
testl
std
push
ret
cmp
insb
inc
mov
test
mov
stc
mov
insb
lock
inc
pop
mov
cli
pop
cmp
adc
pop
jmp
jmp
inc
cwtl
sbb
in
in
mov
mov
or
hlt
cwtl
ljmp
xchg
dec
mov
mov
mov
add
xchg
fs
add
imul
addr16
into
fbstp
jmp
out
fmull
push
mov
jo
xchg
fnstsw
push
icebp
jp
sub
xchg
push
mov
mov
xchg
inc
loopne
or
push
aas
mov
popa
sbb
js
pop
lods
call
pop
ja
aad
ja
in
addl
sub
mov
pop
sbb
shr
in
cmp
daa
jge
and
shl
and
sbb
nop
or
push
rolb
incl
leave
sbb
add
scas
jecxz
add
mov
pop
or
pop
pop
test
inc
jl
mov
out
adc
ret
jno
sbb
jp
and
pushl
xchg
sbb
mov
je
xchg
dec
sbb
neg
push
test
cli
and
add
bound
adcl
pop
fidivs
cmp
mov
out
cmp
jno
xchg
scas
addl
arpl
sbb
fdivl
cmpsl
or
or
xlat
subb
aam
pop
mov
add
into
jle
xor
ja
adc
mov
fidivl
mov
mov
test
inc
mov
lahf
in
mov
xchg
imul
ret
push
or
clc
jne
or
outsl
or
fsubr
pop
sbb
pop
incb
xchg
mov
pop
scas
scas
and
inc
negl
cld
push
in
ljmp
pop
fldenv
adc
imul
rorb
and
in
cs
scas
das
or
xchg
push
test
imul
aam
lcall
movsb
fwait
xor
xchg
mov
push
and
sbb
fwait
push
sbb
pushf
xchg
fimull
bound
maskmovq
notl
fidivl
inc
pop
fwait
in
scas
fnstenv
hlt
jne
cs
mov
rcl
and
adc
test
es
shlb
pop
ret
push
in
and
sub
pusha
jge
mov
pop
push
sub
sbb
out
mov
xchg
mov
and
adc
push
push
jg
or
mov
adc
loop
pop
scas
repz
cmp
and
jno
fnsave
dec
ret
mov
pop
dec
dec
inc
jle
xchg
cmc
xchg
and
and
add
cs
add
cmpsl
andb
mov
cwtl
jbe
pusha
jmp
and
push
mov
test
sub
popa
lods
jg
insl
cltd
sahf
and
sbb
mov
xor
pop
sbb
push
gs
dec
shl
aam
idiv
in
cwtl
add
jecxz
sbb
and
add
adc
jle
nop
adc
mov
jl
or
xor
rolb
int
sti
jmp
and
sub
or
test
sub
repnz
cmp
ret
js
inc
sbb
iret
aam
daa
mov
movsb
fmull
jle
jnp
add
mov
and
mov
xchg
jne
lock
add
xor
testb
jae
and
int3
in
ja
test
leave
mov
add
stos
xchg
mov
dec
daa
push
jns
jle
pop
loop
jge
push
scas
mov
or
mulb
divl
mov
jg
sbb
orb
ss
pop
cmp
cmp
ret
inc
mov
mov
in
stos
pop
fcmovnb
xlat
scas
xchg
jmp
fldenv
xchg
adc
js
enter
stos
push
and
addr16
push
int
sub
cmp
inc
cmp
push
and
int
jae
or
dec
inc
or
xchg
out
rclb
mov
fdivs
ja
lock
jge
arpl
mov
mov
add
xchg
loope
int
addb
scas
sub
mov
sub
leave
mov
jno
ss
sbb
iret
mov
mov
out
in
and
lret
sbb
lea
repnz
sar
pop
pop
int3
xor
in
ret
ljmp
mov
or
movsb
pusha
and
and
xchg
xlat
pushf
mov
cmp
scas
mov
pop
popl
fistpll
call
xchg
pop
sbb
xchg
sarl
and
std
stos
sub
inc
int3
testl
push
push
xor
dec
jmp
clc
pop
cmp
jno
push
lock
push
jne
push
jae
pop
sbb
mov
rcl
adc
push
mov
adc
sbb
iret
int3
sub
ss
shll
out
adc
or
andl
sub
xchg
test
mov
xchg
cmc
xor
lahf
and
mov
pusha
cmp
mov
pop
adc
in
jo
inc
imul
stos
dec
ffreep
push
cmpsl
mov
clc
jb
push
mov
ss
cmpsl
jo
call
loop
mov
fdivs
fcmovne
xchg
push
enter
add
imul
mov
pop
sub
int3
je
xchg
dec
stos
rolb
dec
and
xor
inc
shll
test
inc
out
mov
cmp
sbb
sub
mov
icebp
jnp
adc
inc
cmc
sub
jecxz
mov
xlat
nop
scas
add
adc
mov
mov
mov
jge
out
inc
push
xchg
ss
adc
cmpsl
nop
cmpsl
push
cmpsl
sahf
mov
fldenv
jne
jl
fldenv
add
or
jo
mov
scas
ficoms
adc
push
hlt
push
mov
inc
repz
mov
mov
sbb
in
shlb
or
jmp
es
repnz
pop
inc
popf
dec
call
das
scas
xor
mov
inc
pop
cmp
call
adc
dec
jnp
pop
pop
nop
jo
adc
inc
outsb
xor
loope
jns
adc
stc
push
andb
dec
jle
jns
insl
mov
fsubrs
cmp
inc
add
aad
mov
inc
inc
data16
jnp
sbb
adc
mov
outsb
insl
sti
test
icebp
mov
addr16
popa
lret
pop
xchg
in
cli
out
and
mov
xchg
pop
enter
fcomps
sti
jnp
int3
loope
mov
arpl
jno
dec
lea
scas
push
sub
jecxz
je
sbb
or
inc
mov
pushf
lcall
push
mov
sti
sbb
test
shl
mov
inc
xchg
lahf
imul
xor
insb
dec
popa
sub
cwtl
stc
mov
in
xchg
and
jb
dec
mov
mov
outsl
sub
dec
pusha
sti
scas
repnz
arpl
push
cwtl
imul
testb
jl
adc
aaa
std
lret
inc
inc
leave
mov
xchg
in
fcmovb
dec
xchg
dec
and
inc
or
cmp
js,pt
in
push
into
and
pusha
lds
popa
lret
push
inc
or
xchg
stos
lahf
ja
dec
or
aam
push
push
push
in
out
mov
cmp
int
mov
nop
fisubl
jbe
cmc
mov
je
icebp
lret
pop
jae
mov
dec
dec
cmpsl
out
and
jbe
xorb
popa
and
hlt
lcall
or
mov
mov
cli
negl
cltd
cli
outsl
and
shrl
mov
mov
or
adc
fmuls
push
mov
xchg
cmp
dec
shlb
jmp
mov
test
ss
sub
mov
jge
jne
mov
orl
dec
sti
loope
push
jne
xchg
insb
roll
hlt
and
aad
push
dec
or
sub
aas
xor
aad
cmpsb
sub
idivb
repnz
dec
jbe
mov
aad
iret
mov
pop
mov
aam
int3
sahf
xor
data16
frstor
std
mov
mov
testl
mov
fadds
negl
repz
adc
bnd
inc
clc
hlt
mov
ds
loope
mov
bound
sbb
or
ret
and
cs
mov
push
popa
aaa
jo
popa
jecxz
gs
ljmp
fnstsw
shll
mov
adc
jecxz
jne
test
imul
cmc
or
mov
mov
add
xchg
mov
mov
sub
cltd
add
lods
mov
mov
add
mov
push
pop
test
insb
inc
adc
clc
jecxz
cmpsb
inc
or
push
dec
lods
sbb
movzwl
pop
jnp
out
std
adc
sbb
push
xor
mov
add
stos
inc
jnp
je
fcoms
stos
add
cmpsl
pop
roll
add
lcall
test
pop
lock
insl
call
inc
pop
xorb
fidivrs
loopne
pop
loope
and
push
shlb
lret
dec
and
test
mov
imul
jns
enter
mov
lcall
test
push
dec
movsb
push
mov
or
adc
test
push
xchg
xchg
shr
in
push
in
jmp
sbb
jne
xchg
out
jbe
and
imul
jmp
loopne
iret
push
int
push
or
rclb
stos
test
sti
jo
dec
data16
add
push
es
push
lock
inc
icebp
mov
xor
xor
mov
jge
and
scas
or
push
nop
shlb
mov
insb
testl
dec
lret
xor
xchg
hlt
mov
cmpsl
push
xor
into
xor
add
inc
out
push
je
adc
and
mov
lods
add
pop
sbb
mov
test
mov
push
popf
daa
out
jnp
sbb
push
ja
nopl
test
pop
ret
popa
jg
sub
shrl
mov
fists
popf
mov
fsts
sahf
xor
inc
leave
add
xlat
jno
push
aaa
popa
inc
imul
add
cmpl
scas
dec
adc
mov
inc
pop
mov
cmp
test
mov
call
push
mov
push
aam
or
into
jg
inc
pop
or
pop
repz
lods
jge
add
mov
icebp
xor
int3
call
mov
stos
or
add
int
and
out
loop
je
imul
mov
sti
daa
repz
and
xchg
mov
call
inc
cmp
out
fcomps
test
add
dec
sbb
sub
aam
jmp
cld
insb
icebp
insb
out
mov
stos
fwait
cmp
jmp
mov
xchg
cmp
cld
jb
dec
test
mov
aam
andb
jg
push
aas
hlt
mov
in
push
out
mov
and
sub
mov
sub
mov
sti
nop
les
ljmp
or
xor
adc
jns
in
jae
outsb
sar
mov
dec
adc
inc
jnp
aam
incl
cmp
pushf
mov
xchg
shlb
xorl
je
push
jmp
mov
shrl
outsb
punpckhdq
lods
cmpsl
movsb
or
dec
or
roll
mov
std
dec
lret
ss
jmp
stos
pop
nop
and
pusha
and
add
jnp
inc
or
jns
pop
or
mov
cmpsb
jae
lea
hlt
idivl
repz
jno
or
inc
sahf
movsl
arpl
shll
sarb
push
sbb
jb
xor
js
adcl
jp
notb
adcl
add
or
insb
out
ja
aam
sub
test
pusha
sub
aaa
test
or
mov
fwait
add
ljmp
xchg
dec
mov
mov
push
shlb
lea
xlat
fstpl
aad
icebp
cmp
jae
xchg
xchg
mov
cmp
inc
lods
jnp
mov
pop
outsl
out
call
loope
mov
loope
subl
push
xchg
outsl
adc
pushf
call
sbb
pop
lcall
or
call
cltd
lret
mov
lods
pop
dec
xor
sbb
clc
mov
cmp
mov
or
mov
insb
imul
cmpsl
cli
cmpsl
out
or
inc
sub
lods
les
out
mov
cmp
repnz
or
aas
nop
or
gs
inc
and
daa
fnstenv
mov
lea
jo
jle
fistpll
test
stos
pop
mov
popa
movsb
pop
lock
xor
add
rcrl
push
jns
push
xor
shll
outsb
bound
adc
andb
cmp
lods
dec
cmp
jp
sbb
ss
xchg
shld
xorl
and
add
dec
or
insl
ja
cs
mov
stos
jp
movsl
divl
push
sbb
dec
mov
pop
inc
sbb
xor
fbstp
or
stos
sub
and
sub
ror
jbe
xchg
sub
add
out
jle
sub
call
outsb
int
gs
inc
pop
and
xchg
pop
sub
push
xchg
sub
xchg
rorb
ja
inc
fwait
push
lahf
ja
mov
or
movsb
or
sub
inc
out
and
pop
jmp
das
mov
pop
pop
dec
and
dec
cmp
jbe
cmpb
test
addr16
push
add
rclb
add
sbb
lods
fwait
adc
ret
fstpt
mov
movsb
sub
push
ret
add
iret
testl
lea
cmp
insl
in
into
out
lds
push
mov
pop
fdivr
lret
popa
mov
out
xor
or
jnp
mov
inc
push
sbb
repnz
aaa
add
rorl
cmpsl
mov
sbb
clc
gs
clc
loop
cmpsb
in
dec
out
jmp
push
cmpsb
mov
mov
pop
jne
sub
fadd
cmp
push
mov
push
or
lret
pop
jae
pop
repz
sbb
inc
js
xor
xor
dec
sahf
stos
outsl
mov
aad
adc
jecxz
ss
adc
and
xchg
popa
inc
fwait
push
jne
push
xchg
pop
arpl
aam
sbbl
mov
inc
mov
and
add
stos
xchg
mov
mov
dec
xchg
in
dec
push
jb
ja
push
pop
cli
cmc
inc
push
dec
sarl
jb
sbb
xchg
adc
stos
and
xor
pop
sub
sbb
insl
mov
add
fcom
addr16
out
and
es
cmpsb
enter
dec
xchg
aaa
jne
jo
fisubrs
les
xchg
sbbb
adc
inc
mov
pop
jmp
fstpl
fldl
push
lds
mov
jno
cmp
int3
pop
int
push
push
mov
fildll
les
mov
repz
shl
sub
sahf
testl
inc
and
faddl
pushf
fcomps
das
sub
or
lods
pop
dec
push
mov
pop
shl
lods
push
mov
dec
pop
sahf
inc
sbb
hlt
and
cmc
cli
mov
pop
add
enter
mov
and
push
add
bound
adc
xor
pop
or
mov
mov
hlt
xlat
jne
and
inc
pusha
mov
mov
outsl
test
xchg
pop
adc
clc
add
pop
data16
test
test
aaa
mov
pop
jg
push
pop
data16
loop
mov
cmp
xor
lods
into
cmpb
insl
sub
test
cmp
and
sub
jp
sbb
sbb
arpl
out
pop
lds
jmp
ds
cld
push
or
lods
aad
mov
outsb
dec
sbb
ss
pop
cmc
fmuls
dec
pop
loope
sub
mov
fsubrs
hlt
xchg
call
fists
popf
fsubrl
mov
popf
iret
test
pop
arpl
cmpsl
cmpsl
add
lcall
adc
cmpsb
mov
popf
adc
adc
sbbl
dec
lods
dec
lret
aaa
popf
fisubs
into
mov
mov
icebp
xchg
lahf
mov
pushw
imul
pop
xor
push
loop
mov
mov
dec
jns
xchg
movsb
or
jno
cs
pop
int3
and
dec
mov
xor
hlt
icebp
dec
inc
ret
es
gs
sub
pop
adc
push
in
xchg
daa
repnz
mov
sub
lods
aam
fsts
pop
xchg
sub
xchg
sti
lock
imul
mov
mov
and
push
lret
adc
lock
mov
mov
dec
pop
inc
sti
or
pop
cmc
hlt
fisubrl
add
cwtl
cld
pop
movsw
out
test
fldenv
cmp
inc
and
ja
pop
push
cltd
loopne
enter
dec
std
jge
rol
jg
ljmp
push
cmpsb
data16
ret
outsb
push
push
dec
sar
and
mov
lret
mov
adc
lret
adc
gs
cbtw
mov
nop
pop
xor
mov
sti
roll
in
movsl
adc
mov
mov
fisubl
and
mov
adc
fs
mov
push
jno
push
jmp
test
add
addr16
enter
rcrb
notb
bound
mov
jbe
lcall
jne
movsl
frstor
jmp
repz
jnp
stos
loop
loopne
stos
and
clc
cld
push
cs
jl
or
dec
fisubrs
push
push
subb
add
inc
dec
in
or
xor
shlb
pop
repnz
mov
inc
mov
loop
mov
cmpl
jmp
cmc
imul
lods
jmp
pushf
inc
and
cmp
adc
cltd
and
mov
or
inc
jns
xor
cmp
pop
dec
in
fsubs
xor
cmp
pop
xchg
xor
loope
int
lahf
loope
and
jle
push
loop
xorb
sti
sbb
in
out
jo
out
sbb
push
lret
mov
add
cld
sti
andl
or
add
xchg
sub
adc
jb
xchg
test
pop
sbbb
loop
xchg
lds
sbbb
mov
daa
mov
nop
jge
pop
ret
mov
and
mov
push
add
xor
adc
stc
push
dec
push
dec
into
pop
sub
stc
arpl
mov
dec
int
insl
xchg
popa
push
cmpsb
push
testl
or
add
arpl
mov
xor
call
shll
inc
or
adc
and
out
sahf
ljmp
jno
adc
mov
jl
xchg
mov
xchg
inc
inc
xor
push
push
and
in
out
inc
adc
mov
lods
cltd
sbbl
out
jge
std
shrl
push
mov
stos
mov
jl
lahf
push
cli
andb
mov
pop
arpl
push
das
rcrl
mov
sbb
into
ret
cmp
lock
add
xchg
iret
add
push
adc
in
xchg
in
and
sub
push
sub
mov
jbe
icebp
or
popa
pushf
sbb
mov
dec
test
dec
cmp
jge
loope
js
or
movsb
sub
jb
dec
out
mov
lds
adc
cs
push
pop
xchg
mov
sbb
negl
mov
jge
lcall
fs
pop
mov
sbb
cmp
cld
fnstcw
in
cmp
add
jo
mov
mov
adcl
jb
inc
jnp
xchg
xlat
andb
rcll
sti
mov
dec
pop
dec
sub
out
repz
andl
ret
lret
test
in
add
lret
inc
aad
decb
mov
stos
xor
lret
insb
dec
shll
loopne
inc
cld
stos
int
push
push
add
inc
je
xor
insb
shl
or
inc
or
rorb
mov
cmpsb
cmp
icebp
jnp
out
pop
pop
movsb
into
sbb
ja
cli
add
push
mov
rol
jmp
and
leave
mov
add
test
mov
sbb
jbe
inc
pushf
sbb
fsubs
mov
arpl
mov
stc
mov
cld
ret
test
cltd
pushl
sahf
sub
bound
aaa
sbb
xor
enter
xor
lods
aam
scas
mov
mov
ljmp
test
js
sahf
outsl
adc
lahf
imul
dec
inc
je
push
sti
repnz
test
lcall
mov
push
hlt
mov
movsw
lds
out
fwait
mov
jbe
aaa
nop
mov
cltd
dec
out
adc
xor
lret
out
xchg
mov
and
ret
jne
mov
mov
pop
inc
jns
mov
jp
lret
in
imul
xchg
mov
push
mov
jbe
xlat
jns
mov
fwait
in
adc
cmpsb
xchg
or
or
and
push
repnz
stc
pop
jle
cmp
pop
es
push
push
push
dec
inc
imul
sub
lahf
adc
sub
insb
imul
lahf
mov
pop
and
insl
adc
es
mov
pop
shlb
into
sbb
xchg
shl
jg
inc
stc
dec
jge
or
fcoms
adc
mov
movsb
or
and
xchg
or
fwait
add
int
lods
jle
cmp
mov
das
add
sub
iret
out
jns
clc
jns
inc
cmp
ja
clc
stos
bound
dec
lahf
cmp
cwtl
scas
push
aas
pop
mov
fiadds
ficoms
mov
aad
lods
shrb
in
sub
in
stc
fwait
out
mov
cmpsl
push
aaa
cmc
sub
or
dec
cmp
or
arpl
mov
faddl
arpl
mov
xlat
push
push
in
fs
cs
ljmp
jecxz
int3
in
adc
dec
jmp
jge
sbb
fmull
out
icebp
xor
pop
sbb
jns
mov
imul
lods
rcrb
cwtl
dec
xchg
cmc
je
shrl
sbb
cmp
ficompl
push
in
xlat
ja
xor
cmp
push
repnz
add
stc
or
mov
sbbb
push
roll
hlt
lret
outsb
inc
xor
mov
cmp
add
jecxz
pop
sbb
shr
dec
hlt
sub
dec
sub
sbb
jb
and
scas
ss
xchg
arpl
sub
sahf
repz
pop
xchg
mov
fnsave
call
push
add
jmp
es
mov
into
xchg
dec
mov
int3
stc
xchg
idivb
stc
out
sub
mov
cmp
into
mov
xchg
cmp
jl
sub
into
jne
xchg
mov
test
cmp
mov
fdivr
and
or
cmp
ss
inc
mov
dec
xchg
inc
mov
sbb
insb
call
sbb
popf
out
out
into
or
or
mov
pop
test
rcr
js
and
sbb
add
inc
cltd
stos
aam
arpl
add
out
and
add
sarb
adcb
cmpsl
mov
mov
cmp
jg
cmpl
int3
sbb
mov
sub
jno
adc
js
dec
xor
mov
and
out
movsb
bound
xor
testb
push
inc
outsb
cltd
xchg
lret
out
jmp
add
adc
jge
jns
addr16
cmp
mov
sbbb
and
or
pop
mov
xchg
insl
insb
inc
jecxz
imul
jne
inc
bound
xchg
dec
xchg
push
cmp
sbb
subl
pop
lret
out
add
dec
test
lret
mov
push
jbe
addl
es
cmc
icebp
push
inc
push
sub
lds
mov
mov
or
imul
mov
push
inc
sub
inc
mov
popf
ret
in
enter
cmp
mov
in
cmp
push
insl
push
fs
adc
fisttpl
sbb
or
cli
xor
add
mov
repnz
jnp
xchg
test
pop
pop
mov
mov
clc
pop
ds
jo
pop
and
std
mov
or
sub
aam
jmp
sub
dec
pop
je
mov
push
int
or
jecxz
inc
mov
sbb
mov
jge
and
adc
and
sbb
filds
cltd
imul
inc
sbb
pop
jp
sub
ficompl
push
push
dec
xchg
xchg
sbb
and
lcall
sub
ret
adc
dec
shrl
jmp
out
imul
push
dec
outsb
call
adc
jmp
cmp
xor
lock
outsb
push
inc
push
pusha
and
test
popa
mov
aaa
test
push
or
in
pop
mov
iret
or
pop
or
outsl
mov
sbb
and
add
rcr
dec
sbb
adc
imul
pusha
sub
xchg
lret
xor
scas
cmp
loop
fnstsw
or
mov
or
xchg
test
jbe
sbb
and
lock
jbe
fdivl
push
imul
push
pusha
cld
popl
mov
shl
icebp
nop
inc
jns
repnz
push
sub
hlt
lahf
adc
test
jne
sbb
popf
pushf
mov
pop
jl
inc
and
push
jmp
jae
pop
je
add
jmp
inc
sar
adc
sub
cmp
insb
add
sub
cmp
testb
loopne
insb
fsubrl
push
jnp
xchg
and
out
stos
leave
sbb
popf
jp
add
ljmp
std
mov
fldenv
gs
gs
cwtl
pop
mov
int3
or
insb
es
lret
test
movb
lds
mov
push
inc
jecxz
xchg
sti
push
cld
ljmp
pusha
test
jb
fdivrl
imul
jb
out
push
fndisi(8087
fdivp
scas
push
pusha
je
push
inc
xor
jp
xor
push
aas
out
dec
cmc
sbb
lret
add
sbb
sbb
xchg
dec
cwtl
fdivrl
xor
iret
test
int
mov
cli
dec
mov
lret
mov
daa
out
xor
fimull
mov
pop
insb
pop
dec
pop
add
push
in
push
rclb
push
repnz
sub
adc
jg
xchg
or
xchg
push
jnp
and
adc
sbb
and
inc
mov
fidivrl
int3
lods
mov
adc
push
fcomip
dec
pop
icebp
xchg
pop
rcll
push
inc
les
adc
arpl
js
sbb
mov
popf
mov
mov
aas
mov
std
ret
or
push
insb
lret
jo
ficompl
in
fsin
fmulp
xor
out
nop
cmp
cmp
push
test
in
lock
mov
jmp
sti
mov
push
scas
jae
jb
sbb
and
sub
mov
sub
inc
hlt
cmpsl
jno
je
mov
add
inc
pushf
ret
pushl
scas
xchg
aaa
and
lcall
xor
mov
inc
jmp
sbbb
lds
lcall
inc
mov
cmpb
pop
xchg
push
mov
loopne
jnp
push
xchg
lods
ja
xor
out
rcrb
outsl
hlt
push
gs
lea
dec
lahf
lea
sub
cmp
inc
xchg
cmp
in
mov
lods
mov
sbb
dec
mov
push
jbe
mov
aas
cmpsb
outsb
add
or
fmulp
lahf
lahf
cmp
ja
sbb
xlat
lret
aad
cmp
cld
inc
sub
repz
repnz
push
inc
outsb
sbb
mov
mov
and
das
or
aam
sbb
testb
aad
cmp
and
test
sbb
pusha
ret
cwtl
mov
mov
std
mov
sahf
jns
int
xlat
push
aam
pop
sarb
or
xor
arpl
into
ljmp
xor
xchg
pop
jns
sub
stos
pop
push
sbb
cmp
or
xchg
jae
pop
push
mov
cld
sub
loope
je
shll
adc
adc
arpl
cmpsl
xchg
inc
pop
and
in
xchg
adc
fs
test
adc
jo
pusha
iret
jbe
arpl
sahf
in
imul
mov
sbb
sub
push
popf
int3
adc
enter
ja
fisubrs
push
addr16
ds
pop
fs
outsb
add
idivl
in
rcll
and
decb
add
adc
jns
pop
mov
add
and
xchg
jmp
ds
scas
scas
push
add
es
xor
jg
jmp
mov
cmc
shl
or
mov
jbe
jae
dec
ficomps
mov
ret
stc
add
cltd
divb
inc
xchg
mov
popa
sbb
cmc
aam
loope
cmp
sub
stos
cmp
mov
sbb
lret
mov
pop
cwtl
cmp
add
dec
jl
mov
xor
add
dec
jmp
mov
xchg
cltd
xor
cmp
inc
dec
mov
cmpsl
push
loopne
arpl
lods
jle
bound
add
cli
cmpsl
adcb
daa
outsl
mov
sub
sti
dec
dec
dec
push
jae
pop
mov
cmpsl
fisttps
xchg
mov
cwtl
push
jmp
je
insl
mov
jmp
xchg
out
adc
jmp
mov
sbb
insb
outsl
imul
pop
lea
xor
or
dec
js
outsl
decl
fdivs
shll
sarb
sbb
in
xchg
outsl
push
pop
stos
je
das
dec
xor
mov
xchg
or
push
outsl
lods
jmp
sbb
cmpsl
clc
mov
jp
push
push
adcb
sbb
inc
and
cmp
mov
decl
aaa
cmc
xor
int3
adc
inc
jnp
adcl
std
mov
push
ret
mov
or
sub
inc
add
pop
fdivr
jg
jmp
iret
xor
icebp
lea
fldl
jl
jl
mov
jne
mov
dec
mull
xrelease
in
mov
lret
dec
in
lea
imul
mov
mov
dec
mov
push
or
xchg
mov
stos
mov
dec
loope
mov
aam
jp
lret
leave
mov
sub
in
push
jnp
inc
or
loope
pushf
and
sar
subb
fcoms
sub
cmp
pop
popa
sahf
cmp
enter
shrl
push
adc
xchg
outsl
dec
aaa
int3
mov
outsb
sub
jae
push
add
int3
sub
dec
rcll
xchg
pusha
xor
imul
fnsave
imul
xchg
push
je
xchg
mov
in
cltd
addl
xor
lods
bound
and
cltd
popa
in
mov
xor
adc
repz
xchg
mov
xchg
cwtl
mov
jmp
adc
mov
and
xchg
mov
adc
scas
add
push
jnp
pop
mov
test
loopne
lds
adc
xchg
aam
ret
nop
pop
mov
xchg
inc
pusha
xor
sbb
js
bound
dec
mov
ret
mov
sub
nop
push
jae
insb
dec
lcall
dec
stos
mov
fisttpl
int3
fst
outsb
or
mov
sbb
mov
add
sbb
cmc
fisttpl
lods
fadd
test
sub
adc
sub
sti
mov
push
cmpsl
addr16
loop
add
mov
add
jmp
push
lcall
push
test
dec
dec
jle
mov
in
inc
jle
nop
pop
int
xor
loopne
inc
mov
mov
les
add
pop
hlt
jecxz
and
fwait
inc
pop
test
or
pop
cwtl
mulb
in
out
or
sbb
push
cmp
subb
arpl
or
test
adc
repz
dec
sbb
add
mov
cltd
sub
mov
jbe
shrb
rorb
movsb
jmp
or
adc
idivl
push
jp
xlat
pop
pop
mov
popa
mov
dec
iret
xchg
push
adc
out
dec
mov
cmp
xor
dec
mov
sub
push
lds
repnz
push
int
arpl
inc
scas
scas
jecxz
and
jne
or
push
outsl
xor
xchg
sbb
jmp
mov
push
mov
push
lret
mov
mov
lahf
cmp
cmp
push
mulb
sti
lahf
sbb
mov
ljmp
shlb
outsb
mov
lods
push
in
xchg
pop
and
mov
push
mov
arpl
test
ret
pusha
in
cli
cmp
fdivs
mov
and
repnz
push
fisttpll
dec
popf
inc
pop
xchg
icebp
shrb
and
xchg
out
daa
dec
jl
rolb
stc
cmp
add
mov
add
orl
jmp
stc
fldt
mov
lret
xchg
loope
sbb
mov
lea
popl
jecxz
add
lret
sahf
inc
in
fiaddl
adc
or
cs
outsl
jge
mov
xchg
les
dec
inc
fbstp
jb
adc
inc
cwtl
pushf
inc
sub
cmpsl
je
and
add
push
pop
mov
cwtl
aam
cmc
ret
inc
xlat
xchg
xchg
ja
push
enter
test
in
jns
jl
jg
cmp
jb,pn
push
ret
mov
mov
rclb
repz
lcall
out
push
iret
mov
addr16
or
push
mov
xacquire
test
es
mov
stos
dec
movsb
nop
push
scas
repz
sahf
jbe
cli
push
mov
add
scas
pop
fldt
or
sar
test
jmp
add
xor
fldcw
aad
push
stc
stos
dec
mov
mov
dec
loop
xor
adc
rolb
pop
adc
pop
push
popa
popf
aaa
push
xchg
popf
fmuls
xor
js
adc
dec
call
sti
or
and
into
push
inc
movsb
cmpsl
xor
cmpl
jno
scas
add
mov
cltd
aad
test
sbb
xchg
rcll
mov
outsl
pop
dec
push
and
test
aaa
aam
inc
popf
or
movsb
push
lods
out
xchg
xlat
mov
fcoms
jge
xorb
adc
cmp
popa
in
and
addr16
nop
mov
js
add
inc
sahf
cmp
shll
push
pop
adc
outsl
stos
sub
dec
or
fildl
shl
mov
pop
ljmp
mov
fldt
popfw
add
les
dec
or
cwtl
lock
mov
pop
fisubl
test
cmp
ds
mov
inc
out
imul
mov
fcoms
rorl
xchg
mov
xor
dec
daa
push
xor
and
xor
inc
movsb
icebp
sbb
lea
movsl
cltd
rolb
adc
imul
pushf
fsubl
push
mov
mov
mov
add
ljmp
xchg
sbb
and
hlt
xchg
mov
clc
jl
jle
xor
enter
push
pushf
lret
add
imul
mov
jae
mov
int3
mov
jge
add
mov
jbe
dec
ficompl
mov
mov
dec
add
inc
and
sti
cmp
ficoms
fiaddl
mov
inc
inc
in
repz
jl
int3
cmpsl
aaa
ret
iret
int
test
movsl
cmpsl
addr16
or
cs
adc
fidivrl
mov
addr16
push
arpl
cmpsl
lock
xor
mov
xchg
mov
divb
fsubrs
xor
cltd
sub
ficomps
add
nop
call
test
test
ljmp
sub
scas
in
sub
out
xor
inc
movsl
subb
imul
mov
sysret
fistpl
call
mov
pushf
push
mov
shll
jp
xor
push
pop
cmp
pop
stos
sub
mov
jle
mov
jae
insb
sarl
dec
lock
sub
jno
jnp
and
adc
and
outsb
idivl
loop
add
je
test
or
or
lock
push
nop
xchg
sbb
shl
fcos
popf
test
lods
jmp
pop
adc
cld
movsb
push
mov
out
pop
mov
aas
cmp
lock
xchg
loopne
mov
jne
dec
scas
icebp
sti
outsl
insb
push
paddb
iret
aaa
scas
dec
into
fld
inc
mov
xor
dec
push
xchg
sbb
pop
inc
pop
les
sbb
jg
sbb
cmp
shrb
out
mov
test
lcall
call
dec
mov
andnps
sahf
in
cs
popf
pushf
jns
aam
and
movsl
mov
cmc
sahf
push
fcmovne
pop
add
andb
outsl
pop
dec
or
fldenv
add
ds
lods
pop
das
xor
cmp
daa
dec
rorl
xchg
in
sbb
sbb
or
rcll
mov
lahf
jo
dec
fsubr
adc
daa
mov
push
pop
stos
out
cwtl
jbe
or
outsl
cltd
sub
notb
mov
dec
mov
ja
push
outsb
xor
lds
int
test
subl
cmp
pop
stos
pop
shlb
jl
sub
add
xchg
dec
sti
jmp
sahf
cltd
fwait
mov
jl
scas
jae
outsl
loope
jne
sub
fisubs
leave
enter
xchg
jl
add
sbb
enter
lods
insl
mov
pop
mov
xchg
push
sub
adc
ljmp
out
pushf
sbb
or
test
sub
push
clc
les
push
stos
cltd
cmc
fst
inc
in
fnstcw
push
lods
stos
jnp
jecxz
imul
jnp
cmp
dec
mov
aaa
adc
out
daa
mov
enter
stos
cmc
aaa
xchg
lods
lds
sar
mov
jge
xlat
inc
movsb
into
pop
call
mov
aam
dec
cmpsl
in
jg
nop
or
xor
and
mov
mov
xor
cltd
mov
cli
rcrb
lahf
cs
leave
hlt
mov
xchg
xor
ficompl
rolb
fimuls
insl
sub
fsubrs
ja
or
lea
in
add
ds
out
dec
sahf
cmc
sar
dec
mov
sub
jle
mov
push
arpl
push
adc
or
sub
leave
in
movsl
pop
push
jp
stos
adc
lods
adc
cmp
or
adc
leave
lods
aas
lcall
cmp
adc
cmpl
pop
and
test
test
arpl
cs
add
xchg
add
ss
mov
ret
or
push
mov
addr16
hlt
fdiv
test
sbb
adc
lcall
fisttps
adc
xor
lcall
rclb
cmp
adc
sub
sarb
jns
mov
or
je
and
loope
xor
stos
ja
mov
loopne
pop
lret
xchg
and
xor
mov
lret
cmpsl
das
in
call
push
ret
clc
pusha
xchg
jbe
jmp
clc
push
or
fsubrl
fdiv
mov
ja
sub
push
leave
mov
mov
mov
lods
pop
fidivrl
rcr
jle
ljmp
stc
repz
pop
negl
lea
mov
int3
mov
dec
jbe
repz
pushf
rorb
xor
xchg
xchg
pop
or
inc
cld
xchg
sbb
js
in
inc
sub
pavgb
stos
pusha
mov
mov
inc
das
pop
lcall
mov
pop
fbld
xor
bound
scas
int
xchg
out
aaa
ret
lds
out
xor
dec
push
push
in
stos
jnp
or
cmpsb
or
scas
lea
fcomip
mov
test
roll
sbb
in
lret
sbb
inc
mov
sub
scas
das
aaa
clc
dec
hlt
mov
fisubl
xor
cmp
pop
inc
das
sub
adc
popl
es
fs
repnz
jb
daa
xor
lret
mov
xor
mov
mov
fldz
inc
inc
mov
insb
sub
insb
std
and
loope
cmp
dec
sbb
and
add
xor
or
sub
in
hlt
sub
inc
jl
xor
sti
pop
fmull
pop
test
jae
mov
imul
popf
arpl
cmpl
pop
xchg
xor
cs
aas
outsl
push
lcall
inc
mov
jg
cld
sbb
sarb
xor
and
nop
pop
ja
loop
dec
cmp
sub
xor
out
popf
adc
js
push
movsl
les
sub
stc
aam
daa
out
pop
subl
scas
cmp
jbe
cmpsl
push
jecxz
pushf
push
int
or
push
or
and
or
jl
shlb
jbe
sub
cld
lds
xchg
mov
data16
sub
mov
cld
xchg
js
jmp
pop
and
rol
outsb
xchg
or
jg
bound
aam
rclb
push
js
loopne
jb
jg
or
imul
scas
push
sbb
dec
add
aam
aam
scas
fwait
rclb
add
lods
imul
pop
jmp
cltd
inc
ret
test
imull
fistps
xor
xor
push
mov
jo
in
and
rcl
nop
cmpl
pusha
push
shrb
adc
adc
jb
inc
push
hlt
cmp
es
fwait
ds
testb
jb
xchg
iret
test
lock
cmp
and
cmpsl
cmp
fwait
push
repnz
xor
push
fldenv
fdivl
ret
mov
test
es
adc
lea
mov
push
dec
and
mov
lods
lret
xchg
cmpsb
sbb
push
mov
lret
pop
orl
mov
fnsave
push
outsb
loopne
scas
xor
sub
mov
rcll
adc
ss
xor
or
arpl
fsubs
cmp
notb
xor
dec
int
pop
int3
dec
add
ss
lods
xor
add
cmp
popf
jmp
mov
repz
jg
and
cmc
jmp
dec
cmp
fidivs
test
cmpsl
orl
addr16
mov
mov
inc
mov
pop
mov
jge
push
and
inc
and
std
sti
test
pop
cmp
and
stos
mov
pusha
mov
loopne
flds
lods
ljmp
sarl
mov
mov
out
shll
lret
mov
in
jnp
push
js
sahf
adc
pop
xor
cmc
dec
sub
out
xchg
imul
push
mov
or
mov
adcl
or
aam
ficomps
lcall
sti
jb
cmpsb
shrl
cwtl
add
inc
and
mull
or
push
stos
sub
ja
lret
push
test
adc
movsb
dec
xchg
sbb
in
jbe
sbb
inc
out
insb
cmp
pop
xor
test
push
imul
scas
mov
fcoms
repnz
std
stos
cmp
inc
test
add
call
pop
stos
lds
xchg
inc
bound
xlat
ja
dec
pop
mov
cmpsl
lea
pop
in
mov
adcb
dec
push
sbb
or
jne
stos
xchg
nop
mov
push
push
inc
int
mov
sub
test
je
push
inc
inc
scas
sub
lcall
sub
inc
sbb
int3
jge
pusha
cmp
aaa
cmp
lock
mov
pushf
pushf
pop
repz
sbb
cs
js
cmpsl
iret
mov
arpl
leave
sub
in
in
loope
jnp
out
imul
xor
xchg
pop
xlat
das
rcr
inc
push
pop
fcmovnb
push
jle
clc
sti
lret
jae
rcl
sar
les
mov
and
shrb
mov
dec
sbb
inc
das
jmp
pop
jecxz
adc
sti
xchg
std
and
jmp
mov
lock
mov
jne
dec
inc
out
dec
push
push
repz
in
xchg
sbb
aad
repz
push
jge
jmp
sbb
ja
cltd
das
and
cli
or
and
xor
sbbb
ja
sub
jo
push
lods
jge
push
lahf
adc
jecxz
cltd
fwait
mov
lcall
dec
sbb
scas
inc
mov
jne
pop
ss
mov
mov
jo
sbb
jmp
daa
mov
js
lock
mov
test
fsubs
push
push
loope
jo
out
stos
stos
out
and
cwtl
lock
jae
jge
xchg
jbe
jg
test
inc
lods
sahf
push
cmp
cmpsl
ds
add
pop
aam
jnp
lods
stc
sbb
push
fcmovnb
into
adc
lods
out
sbb
xchg
and
push
movsl
cld
inc
jl
lock
mov
cmc
std
out
jno
in
push
out
mov
in
push
jp
cmp
out
hlt
ret
mov
gs
orb
mov
mov
jb
mov
aam
je
push
pop
cwtl
cmp
push
es
mov
jecxz
mov
jbe
loop
sbb
dec
jmp
imul
inc
push
adc
xchg
push
pop
jae
xchg
mov
cmpsl
add
add
aas
daa
adc
xchg
lods
push
xchg
fs
mov
fwait
inc
fists
pop
jle
mov
or
in
out
cmp
sbb
in
rep
sub
mov
cmpsb
fmuls
and
jle
lret
and
fcompl
mov
mov
in
mov
sbb
cltd
mov
inc
test
test
aad
mov
sti
xchg
jle
clc
adc
mov
test
sbbl
dec
inc
aas
pop
dec
xchg
add
pop
jae
and
mov
stc
ret
sarb
int3
or
pop
dec
rorl
iret
pop
mov
lret
pop
leave
mov
out
lds
push
shlb
cs
pop
jge
lahf
jae
jp
dec
call
ja
jmp
dec
and
movsb
jne
jmp
mov
xlat
cltd
push
jmp
lods
enter
lcall
xchg
and
jno
xchg
mov
cmp
mov
mov
push
repnz
and
adc
pop
jge
xor
pop
movsb
adcl
fdivl
mov
jno
stos
mov
test
test
adcl
in
mov
xlat
ljmp
imul
or
shll
lret
mov
je
pop
stos
add
pop
sub
cmpsb
addr16
mov
andb
lret
enter
mov
aas
fisttpll
xor
lret
jecxz
cmp
mov
loopne
jae
xor
std
sarl
loop
cmp
cmp
int3
xchg
leave
pop
pop
mov
lds
mov
outsl
jb,pn
and
pop
sub
xchg
inc
shrb
xchg
scas
lods
sbb
int
cltd
arpl
ret
dec
sub
mov
imul
dec
sub
and
and
mov
mov
fsubrp
pop
insl
cmp
sub
push
xchg
sub
popa
call
push
xor
aas
inc
popa
xchg
xchg
and
dec
mov
div
cmpl
add
adc
into
clc
in
mov
pushf
cmpsb
mov
incb
int3
aas
out
test
pop
popa
mov
xor
aas
stc
sub
adc
dec
adc
jne
mov
js
and
adc
xchg
fdivrs
por
jg
je
jl
fistl
lds
xor
or
sbb
rep
aad
cltd
lods
lret
cs
xor
repz
inc
cmpl
mov
es
dec
fcomip
stos
leave
and
cmp
ljmp
xchg
lcall
mov
fadds
ljmp
mov
sub
test
push
icebp
fisubs
mov
test
xor
and
test
frstor
dec
test
scas
call
shlb
push
cmc
cs
pop
movsb
xchg
insl
xor
fcoml
and
or
adc
pop
loopne
cmp
ret
lock
nop
pop
add
or
adc
inc
sub
lds
inc
inc
mov
add
movq
and
dec
aas
cwtl
movl
cmp
movsl
fst
cmp
das
lods
mov
insb
adc
mov
js
pop
and
pop
xchg
insl
jo
pop
mov
icebp
jecxz
push
xchg
cld
stos
movsl
popf
and
inc
sbb
stos
mov
jle
fimull
mov
sub
xchg
mov
mov
cltd
fwait
inc
pop
aas
hlt
stos
leave
je
adcb
movsl
cmpsb
push
scas
pushf
mov
pop
les
bound
lods
mov
adc
lret
hlt
sub
adc
xchg
mov
or
push
in
pop
mov
outsl
push
je
mov
push
hlt
test
jno
or
pop
pushf
shll
repnz
inc
fwait
ret
inc
sahf
cs
pushf
inc
jbe
ret
and
mov
scas
in
push
push
fdivr
xchg
test
faddl
add
scas
test
mov
jge
sbb
sub
cmp
insl
leave
xchg
jns
sarb
subb
mov
sarl
in
andb
mov
pop
mov
insl
push
sbb
cmp
add
adc
test
les
dec
and
xchg
xor
sbb
sbb
inc
mov
pushf
mov
sahf
mov
je
or
orl
xchg
sarl
dec
mov
aas
mov
or
iret
adc
jg
fwait
inc
dec
js
arpl
repnz
pop
xlat
dec
dec
adc
lds
shrb
imul
repnz
aad
faddl
leave
push
jl
cltd
fwait
cmp
fsubrl
pop
jg
sbb
out
std
push
push
xchg
pop
push
hlt
inc
dec
pop
jno
jb
cmpsb
pop
mov
and
mov
enter
outsl
dec
or
int
sbb
inc
xchg
notb
ljmp
shrl
repz
je
or
ficomps
aad
mov
dec
mov
jmp
cmp
sbb
jae
pop
push
sbb
test
and
dec
mov
movsl
notb
test
jge
fcmovnb
adc
mov
xlat
fs
andb
cmpsb
insb
dec
fsubr
in
sub
push
push
push
cwtl
mov
out
sti
test
mov
mov
iret
mov
imul
mov
sbb
cmp
pop
or
jg
sbb
jo
xlat
inc
aad
xorl
adc
inc
cmp
adc
int
mov
xchg
aad
cld
xor
pop
pop
dec
insl
and
cli
imul
out
sbb
mov
lds
fcompl
add
mov
mov
cmc
dec
je
ljmp
ds
mov
addb
sbb
xchg
pop
mov
or
into
pop
bound
leave
rcr
mov
out
hlt
cmp
out
and
shrb
xlat
or
jae
pusha
xchg
addps
nop
fistl
mov
mov
cmp
out
cli
mov
iret
inc
mov
imul
adc
xchg
adc
daa
call
inc
xchg
dec
andl
in
cli
mov
dec
or
inc
and
loopne
dec
or
and
in
daa
push
arpl
lcall
scas
das
push
mov
cmp
cmp
sbb
inc
out
jmp
dec
mov
sub
push
cmp
adc
hlt
mov
es
cmc
mov
mov
add
xchg
inc
push
es
push
out
and
push
sub
movsl
cmp
lods
mov
aas
clc
ljmp
js
sahf
sub
pop
outsl
lds
in
mov
loope
std
adc
test
ret
shll
pop
loopne
sbb
adc
xchg
popf
idivl
pop
enter
fimuls
lods
xor
dec
cli
jge
popl
cld
jb
je
pop
cmc
mov
shlb
push
xchg
insl
je
sti
dec
mov
imull
push
and
adc
mov
lret
push
push
adc
int3
divl
enter
adc
fcmovnb
cwtl
loopne
jecxz,pt
xor
mov
jno
insb
sarb
xlat
ljmp
inc
jne
fs
mov
sbb
in
xor
push
test
ljmp
pop
inc
adc
mov
add
dec
cmp
cli
in
negl
repz
sti
jmp
imul
lret
mov
jo
sbb
mov
push
pop
sti
in
xchg
sbb
ficoml
and
outsl
out
sbb
out
rolb
xchg
cwtl
inc
arpl
in
add
xchg
add
cmp
scas
mov
inc
adcl
xchg
popa
cmp
push
repnz
dec
mov
add
or
fdivrl
push
aad
mov
xor
dec
repnz
movsl
movl
test
movsb
outsl
cmc
jbe
stos
dec
push
sub
sbb
cmc
pop
dec
imul
mov
xchg
push
mov
or
inc
and
out
dec
lret
dec
xchg
push
clc
inc
std
xor
xchg
std
inc
cmp
cmp
push
add
push
pusha
sub
cmp
jp
cmp
mov
xlat
jb
lods
inc
dec
les
xchg
stos
out
xchg
mov
mov
fistps
mov
icebp
add
cmp
xlat
sti
dec
daa
jle
rcrl
or
inc
cmp
pop
int3
push
test
leave
int
xchg
mov
adc
adc
dec
mov
testb
fdivl
adc
xchg
xor
push
cwtl
out
push
aad
test
pop
xor
pop
movaps
in
or
insb
scas
lods
mov
or
addb
dec
push
in
ja
ja
sbb
aaa
inc
cmpl
dec
fistps
rolb
push
push
and
scas
mov
xchg
sub
jno
xchg
adcb
test
outsb
push
pop
push
fdivrl
loop
rorl
fisubs
inc
jne
mov
sbb
xchg
and
in
mov
xchg
popa
cmp
xchg
mov
out
push
cltd
push
dec
adc
cmp
fnsave
mov
fs
ja
jb
pop
mov
mov
enter
pushf
mov
fmul
sub
leave
inc
jbe
mov
mov
dec
xchg
out
push
jnp
in
and
test
pop
out
jge
ljmp
fnstenv
adc
outsb
adc
xcrypt-ctr
cmpsl
push
adc
mov
xorl
jecxz
daa
insl
sbb
xchg
vpcmpeqw
das
loop
gs
mov
test
cltd
jmp
sbb
std
mov
sub
mov
xchg
xor
push
fwait
iret
push
mov
xor
jg
mov
stos
sbb
fwait
jmp
push
sbb
mov
jne
jle
xor
pop
inc
xor
ret
push
jne
test
test
fmuls
pushf
inc
pandn
mov
ficoml
mov
inc
push
add
cmp
mov
add
inc
aam
jmp
data16
ficomps
mov
xchg
pop
dec
lret
mov
mov
push
cs
mov
cmpsb
push
adc
xchg
fs
pop
xchg
adcb
ljmp
sub
clc
xchg
or
add
and
ds
out
mov
mov
out
jne
jbe
lret
jbe
mov
daa
ret
mov
hlt
cmp
mov
aaa
in
hlt
dec
loope
inc
movb
fcmovb
sahf
in
lret
push
bswap
filds
sbb
adcb
push
out
arpl
sbb
jns
daa
dec
xor
jb
mov
lret
sbb
adc
cmp
dec
into
xchg
std
adc
inc
push
test
loopne
mov
pop
sahf
aam
movsb
mov
mov
into
mov
push
les
pushf
cwtl
nop
and
adc
scas
inc
jo
mov
pop
lcall
jecxz,pn
mov
dec
pop
inc
je
mov
iret
lea
lret
aaa
mov
out
popf
lahf
cmpsl
cmp
sbb
jae
into
pushf
inc
out
sahf
lret
test
fs
loope
icebp
ja
cmp
cltd
xor
mov
push
nop
fimull
adcb
dec
inc
outsb
pop
leave
adc
mov
or
jo
sub
mov
mov
cmpsl
adc
or
add
or
addr16
jge
jno
pop
int3
ljmp
sub
sbb
jg
lds
out
movsb
push
xchg
fadd
add
jnp
xchg
adc
enter
mov
jge
dec
fldcw
dec
popa
fadd
mov
outsl
stos
insb
les
pop
pop
jno
inc
sbb
lcall
in
jecxz
push
jp
cltd
iret
mov
cmp
xchg
fsubrl
adc
mov
repz
mov
mov
push
cmp
lcall
xchg
stos
fcomps
pop
mov
xchg
inc
popa
mov
xchg
hlt
stos
xor
push
pop
xchg
xor
rcrb
mov
fld
mov
and
jl
and
mov
lcall
mov
arpl
mov
enter
push
and
gs
mov
sub
push
sbb
push
es
std
cmpsb
xor
pop
adc
movsl
repnz
adc
aam
cmp
mov
xchg
cmp
loop
enter
dec
cli
sbb
xchg
jae
mov
repnz
pop
shll
subb
mov
shll
aas
add
or
add
jnp
cld
jns
gs
mov
out
mov
imul
dec
push
mov
and
mov
cld
jbe
sar
jecxz
add
jmp
push
mov
cmp
push
stos
addl
aaa
mov
pop
loope
into
xor
in
lods
jmp
xor
out
cwtl
cmp
into
in
leave
inc
loopne
popa
add
sub
nop
ret
aas
and
mov
addr16
daa
lods
scas
sbb
xor
dec
mov
xchg
xchg
dec
test
test
xchg
js
stc
shll
jl
ljmp
dec
cmp
sbbb
leave
cmpsb
add
sarb
pop
ds
jo
mov
cmp
stc
fistl
inc
popa
mov
stos
popf
inc
push
fs
icebp
insb
jmp
das
test
insl
stc
or
cwtl
mov
stc
and
imul
xor
aam
mov
call
add
cld
xor
rcl
jge
lret
cmp
cmp
cs
push
loop
cmpsb
jl
into
sbb
sub
out
lcall
aaa
add
or
ds
mov
test
and
loope
and
adc
or
lds
jg
sbb
mov
pop
sti
ljmp
mov
daa
and
or
sbb
push
add
out
in
sahf
push
push
cs
xor
push
fwait
out
jmp
inc
push
jge
mov
cmp
xor
inc
mov
loopne
or
repz
aas
xchg
jno
popa
mov
outsl
dec
mov
dec
dec
test
xor
imul
add
or
sub
lods
aam
test
add
jge
mov
mov
in
jp
jl
xlat
xor
pop
and
dec
xor
das
scas
cmc
push
sahf
call
mov
shr
adc
pop
jo
mov
aas
mov
push
add
push
cmp
inc
sahf
adc
mov
call
jae
inc
in
xchg
js
mov
xchg
cmp
inc
xor
cltd
mov
inc
call
mov
inc
jl
mov
int
das
and
cmpsl
mov
push
sbb
in
pushf
das
dec
enter
jp
clc
icebp
cmpsb
std
push
fdiv
in
jg
icebp
and
mov
add
push
adc
xor
adc
xor
push
xchg
aad
ss
gs
push
mov
ret
and
sub
mov
nop
stos
sbb
sbb
adc
sub
sub
mov
and
lret
pop
data16
push
xor
rolb
daa
out
dec
aaa
nop
fldt
add
adcb
pop
add
js
int
popa
popa
mov
dec
mov
nop
sbb
xchg
adc
jne
dec
aas
fimull
stos
adc
mov
in
dec
cs
subl
mov
test
lock
sbb
add
lods
dec
fidivl
mov
das
out
stc
mov
adc
jmp
pop
hlt
dec
sarl
xor
mov
stos
mov
cmp
mov
sbb
jnp
cmp
mov
mov
aam
addr16
and
sub
add
adc
or
arpl
adc
sbb
jnp
mov
and
jbe
xchg
cmp
cwtl
inc
adc
dec
xor
icebp
jl
xlat
sbb
sbb
cltd
mov
mov
and
mov
push
cli
dec
out
jae
inc
scas
daa
cmp
mov
lea
mov
mov
orb
cltd
pop
mov
add
add
out
push
and
gs
and
mov
inc
shlb
test
mov
adc
push
push
xchg
repz
shl
ds
or
add
stos
fwait
push
cwtl
lds
inc
in
imul
jno
push
sahf
inc
xchg
fildll
jbe
inc
mov
cltd
dec
add
mov
dec
pop
adc
mov
inc
in
dec
pop
mov
movsb
call
sbbb
icebp
pop
adc
jmp
mov
mov
xchg
or
adc
sbb
pop
test
jl
mov
dec
xorb
in
mull
cmpsb
or
int3
int3
jle
fwait
mov
jnp
mov
jnp
lds
icebp
loopne
adc
rorl
out
xor
push
dec
aas
imull
scas
fsubs
push
insl
fldcw
mov
lods
pop
dec
out
pop
adc
add
inc
jnp
rorl
or
mov
shlb
cmp
inc
repnz
lcall
inc
cmp
repz
sar
xchg
es
jle
mov
ret
daa
out
sub
inc
notl
ljmp
and
xchg
sub
or
xor
adc
xor
popa
xchg
mov
ds
mov
stos
adc
out
out
cmp
mov
lods
pop
pop
inc
sti
je
rcrl
mov
mov
adc
mov
inc
outsl
inc
cmp
enter
dec
and
cmp
jnp
cmp
add
and
sub
es
push
cld
inc
cmc
xchg
xor
lret
insb
in
sti
loope
mov
sbb
test
cmp
ret
dec
and
cltd
pop
mov
pop
jae
fcoms
sub
fwait
stc
jb
lahf
imul
loop
jp
lds
out
insl
mov
dec
jl
clc
jae
pop
int3
pop
push
loope
jecxz
pop
mov
lcall
mov
lods
movsb
mov
fistps
dec
cli
jb
les
add
and
xchg
adc
pop
push
lcall
xchg
mov
adc
inc
push
cmp
mov
repz
arpl
iret
pusha
lret
aaa
or
pop
xor
mov
mov
jg
fimuls
mov
mov
sahf
mov
lea
movsb
and
mov
test
mov
pop
aam
ljmp
repnz
mov
lods
inc
mov
xchg
adc
movsl
test
loop
dec
adc
mov
loopne
lahf
adc
dec
pop
cmpsb
mov
and
and
sti
mov
dec
int3
sub
pop
ss
notb
xchg
or
data16
shlb
pusha
inc
das
fdivl
test
push
inc
sub
lahf
sbb
clc
jmp
push
stos
aam
push
insb
and
movsl
mov
mov
xchg
jnp
cmpsl
mov
dec
xadd
stc
and
pop
int
cltd
lahf
mov
fisubs
or
mov
lcall
xchg
mov
int
cmp
orb
out
aam
insb
adc
daa
cmp
outsl
cmp
pushf
gs
adc
jg
popa
dec
stos
sbb
cmpsb
loopne
rcrl
pop
andb
jge
jae
incb
out
fwait
imul
shlb
dec
push
outsl
insb
cli
fld1
dec
pop
out
xor
sahf
shl
sti
fistpl
dec
push
in
fcmovnbe
pop
cs
aad
clc
lahf
mov
jne
iret
pop
rcl
sti
outsl
mov
fildl
or
lds
and
scas
lods
sub
stc
jb
lcall
imul
xor
sub
add
jnp
clc
dec
ds
cltd
popf
aas
icebp
aas
popa
pop
inc
je
jl
mov
leave
cmc
push
lret
aaa
push
push
adc
outsl
test
or
mov
add
stc
mov
xchg
jmp
adc
loop
sub
push
mov
xorb
push
hlt
out
and
or
sar
adc
cld
repnz
mov
roll
fiadds
inc
inc
scas
scas
jmp
mov
sti
imul
pop
out
push
cmp
insb
cmc
dec
nop
clc
icebp
cmp
xchg
imul
push
in
push
psubsw
lods
movsl
inc
lcall
test
sahf
cmp
adc
jb
mov
test
sbb
mov
pop
loopne
das
adc
test
sub
add
mov
movsb
inc
cmc
sbb
jno
pop
cmpsl
out
aas
imul
pop
out
sti
push
cmp
int
jecxz
dec
mov
sub
mov
push
cmp
push
jle
pop
push
sbb
adc
movsl
icebp
leave
pop
jbe
imul
imul
out
in
inc
mov
pushf
add
jle
cltd
mov
pusha
or
xor
out
aam
insb
hlt
ds
xchg
movsb
cmp
movntps
xchg
sub
leave
lcall
mov
pop
gs
rcl
push
push
dec
test
bound
sub
test
mov
adc
fstps
fidivl
js
and
xlat
xchg
xchg
add
adc
sub
mov
insl
xchg
pop
mov
and
and
pop
lret
sahf
pop
test
mov
mov
or
pop
jo
mov
jno
push
outsb
repz
je
iret
in
icebp
xchg
and
pop
push
push
scas
addb
jmp
cmp
scas
mov
push
enter
mov
inc
js
mov
xlat
in
push
imul
cli
lea
dec
push
xchg
push
mov
xlat
dec
out
sub
aad
mov
sbb
mov
or
sbb
fs
pop
inc
mov
out
arpl
cmpsb
in
inc
mov
fnstenv
shrb
mov
out
cmp
aad
lret
inc
clc
fidivrl
or
aas
lcall
fcmovb
pop
out
incb
rclb
std
data16
mov
popa
pop
or
adc
and
sti
xchg
push
inc
shll
imul
addr16
into
mov
push
popf
fmull
mov
rcl
movsl
fdivs
dec
jne
mov
pop
nop
test
add
add
cmpsl
pop
dec
aad
fsubrl
and
jp
aaa
ficoml
pop
cmp
mov
sub
add
popl
pop
dec
inc
insl
cmp
testb
lret
fstpt
add
ret
jg
or
fildll
lea
pop
lea
ljmp
dec
imul
adc
shrl
inc
pushf
aas
shr
mov
hlt
test
inc
pop
and
aad
sub
call
jg
in
mov
sub
xchg
and
and
clc
cmp
or
scas
or
rclb
dec
jmp
outsl
and
jp
sbb
sahf
cmp
ss
mov
out
stos
arpl
es
cs
imul
lea
out
lock
add
push
outsl
test
pop
push
out
in
es
add
sub
aas
add
xchg
outsb
pshufw
jmp
repnz
dec
movsl
divl
pusha
inc
push
cmpsl
xchg
push
mov
fidivrl
js
mov
insb
outsb
pop
xor
mov
stos
int3
daa
jle
ljmp
and
xor
and
xchg
addl
dec
lret
xor
sbb
inc
push
test
cli
ret
cmpsl
push
push
add
rcl
or
and
jle
jno,pt
sbb
cld
clts
test
pop
test
mov
icebp
movsb
negl
ret
fdivrl
cmp
xor
mov
std
pop
jle
in
incl
ljmp
inc
and
call
pop
or
ret
sbb
and
xchg
jle
sub
les
cmp
into
xchg
imul
es
adc
dec
jmp
cmpsb
pop
adc
pop
jge
push
std
stc
push
xor
xchg
movl
push
sbb
mov
out
jbe
sbb
mov
aad
push
sub
pusha
scas
in
jnp
stc
inc
shll
sub
mov
fs
push
xchg
push
in
repz
in
dec
adc
cmp
xchg
or
lock
sbb
sub
fidivs
stos
je
mov
popa
bt
dec
jg
jl
flds
jne
cwtl
mov
pushf
mov
mov
add
nop
mov
adc
adc
mov
mov
repz
cmp
jmp
scas
dec
mov
push
push
adc
pop
les
sub
xor
ljmp
mov
pop
push
insb
add
and
int3
repnz
inc
rcrl
nop
or
xchg
into
push
shll
xor
pop
xchg
mov
out
addb
repz
and
cs
stc
xor
pop
shr
lahf
iret
mov
pop
push
int
orb
lods
add
outsl
push
and
push
dec
adc
arpl
aas
cmp
pop
ss
jmp
call
sbb
shrl
fwait
rorb
add
fstl
std
ret
and
ss
push
je
ret
add
push
dec
push
mov
pop
in
push
xchg
iret
icebp
inc
mov
fisttpl
iret
xchg
add
dec
or
cltd
sub
insb
out
fistpll
outsl
inc
jbe
pop
sbb
fsubrs
divb
jns
or
xchg
push
adc
cld
subl
mov
loope
out
sub
lea
aaa
xor
lahf
adc
gs
je
xchg
mov
movsl
movb
jmp
and
popf
cmpsl
cmc
or
movsb
and
sub
adc
and
mov
arpl
mov
sti
lret
cmp
mov
xchg
sub
mov
xchg
mov
pop
xchg
das
cmp
pop
push
fisubrs
pusha
add
movsb
jmp
gs
jmp
out
iret
cmp
jb
js
and
jo
xchg
pushf
gs
sbb
popf
fnstsw
mov
lahf
imul
jne
inc
lods
divl
pop
cli
ror
mov
mov
adc
jnp
sbb
pop
arpl
mov
mov
jnp
dec
ret
test
jge
jae
testl
cmp
test
inc
push
enter
bnd
mov
fucomip
idivl
and
cmc
sub
jns
movsb
ror
cmpsb
add
xchg
mov
push
jno
out
pushf
mov
test
mov
shrb
test
mov
outsb
or
in
orl
xchg
xchg
dec
rcrl
arpl
in
rclb
jecxz
or
sahf
stc
sub
lock
imul
pop
jae
pop
xchg
add
fdivs
push
scas
lods
scas
jne
add
idivl
sbb
bound
pop
inc
jmp
lock
sub
inc
insb
shr
adc
sub
mov
in
pop
dec
xor
mov
out
dec
outsl
ljmp
jg
stos
xchg
inc
inc
inc
fwait
push
icebp
xchg
leave
test
xor
mov
lahf
adc
cmp
or
scas
stos
push
pop
icebp
jp
fisubl
shlb
mov
add
pop
sub
das
jmp
fnsave
adc
xor
xor
xor
mov
jmp
ljmp
dec
cmp
mov
aam
dec
fsincos
out
loop
adc
ffree
inc
jb
fcmovbe
sub
mov
push
xor
flds
loopne
stc
sbbl
mov
iret
pusha
mov
mov
add
aad
add
repz
ja
test
sbb
dec
leave
cmpsb
or
out
out
leave
dec
lods
jp
jmp
jmp
loopne
xchg
jne
test
mov
outsl
outsb
pop
or
push
dec
insl
rorb
xor
imul
dec
xlat
sub
lcall
xlat
xchg
cltd
das
lret
mov
push
mov
pop
out
out
jnp
sbb
cld
mov
mov
cmc
mov
outsb
mov
pop
flds
ret
lods
adcl
xchg
inc
add
push
lcallw
in
add
das
aam
test
loopne
xchg
inc
mov
lods
mov
cmc
or
int
adc
push
sbb
aaa
std
popf
xchg
sti
mov
test
les
movsb
das
stos
xchg
scas
dec
push
push
jne
bound
shrl
testl
cld
je
lds
push
push
xlat
and
pop
cs
mov
mov
jae
cmp
movsl
andl
ret
push
push
int
mov
aaa
add
mov
mov
jle
push
lcall
inc
stos
loopne
fisubl
push
rcll
clc
ds
imul
add
xor
xchg
enter
jo
dec
cmc
mov
add
pop
mov
sub
sub
shr
and
xor
ds
jb
arpl
mov
iret
imul
cli
scas
ja
ds
out
mov
imul
adc
xor
call
fldt
mov
push
std
in
cmp
mov
mov
inc
xchg
cwtl
out
mov
mov
pop
lock
xchg
xchg
jle
out
cwtl
mov
jmp
xor
cld
dec
lods
lock
loopne
cli
imul
cmp
sbb
dec
sub
stos
or
push
cld
push
inc
mov
mov
inc
sbb
int
push
push
pop
mov
pop
test
ror
je
scas
andb
jmp
cwtl
mov
cld
fsub
fnstenv
sub
enter
es
sbb
jmp
jmp
repz
xchg
pop
sub
add
roll
inc
lods
sub
stc
mov
xorb
sbb
lret
std
add
inc
fwait
sarb
mov
push
fs
lods
sti
xor
xor
inc
mov
cmpsb
mov
mov
push
mov
jo
repz
cwtl
aad
fisubrl
and
adc
cs
in
lret
push
inc
cmp
pusha
orb
and
in
out
adc
iret
jmp
lret
jno
adc
add
inc
jb
sbb
cli
sub
pushf
xchg
add
jns
xchg
cld
dec
jnp
testb
sahf
andb
cmp
xchg
out
out
adc
dec
pop
or
mov
jbe
fidivl
mov
fmull
fdivl
das
pop
cmovg
mov
inc
mov
or
sub
int
cld
mov
sub
mov
mov
xchg
cli
neg
dec
pop
xchg
xor
loope
cmp
and
jle
push
fcoms
add
mov
nop
fdiv
lock
xchg
addr16
stos
js
dec
stos
jmp
lcall
pop
push
sbbl
leave
gs
test
mov
stos
sbb
lds
repz
shlb
sar
in
in
mov
fdivrp
inc
mov
gs
or
adc
sahf
jns
test
shlb
cs
test
cltd
sub
push
lock
jge
jno
dec
jp
ret
mov
scas
add
dec
dec
sti
scas
addb
mov
scas
addl
in
dec
popf
jecxz
push
arpl
es
pmullw
nop
xchg
sbb
cmp
stc
ret
jns
xchg
inc
rcll
scas
dec
outsb
xor
xchg
pop
insl
cmc
cld
daa
faddl
jno
push
enter
leave
adc
add
mov
movsl
clc
inc
push
mov
pop
daa
push
xchg
pop
es
cmp
cmp
ds
out
push
jg
mov
popa
xor
jb
add
jge
sbb
sbb
les
fimull
scas
or
push
mov
add
sub
fmul
jo
xor
jo
mov
fstl
rcrb
mov
popa
pop
vpsrlw
sub
sbb
jmp
jb
mov
outsl
mov
xor
cli
je
cmpsl
push
jmp
sub
pop
lods
in
xor
ds
or
push
sbbl
stos
fstpt
or
adc
xor
mov
xchg
std
xchg
jne
mov
adc
pop
ljmp
sub
stos
out
adc
stc
incb
ret
stc
adc
dec
or
hlt
int3
loopne
test
jne
pushf
inc
dec
jo
jbe
imul
dec
incb
or
xchg
bswap
testl
int
pop
out
inc
xchg
sbb
popl
or
mov
aas
jge
lcall
ficomps
cmp
in
stc
jno
mov
mov
pop
cmpb
movsb
fiadds
jmp
and
ret
mov
cltd
mul
pop
lea
xor
push
mov
int3
adc
inc
sub
bnd
pop
pop
cmpsb
stc
insb
lods
out
out
mov
jl
arpl
lret
xor
outsb
ja
inc
mov
cli
ret
push
mov
lea
mov
sbb
fimuls
pop
cs
lcall
je
flds
pusha
mov
xorb
dec
jne
ret
mov
pop
sahf
xchg
push
arpl
jg
add
shlb
dec
mov
imul
mov
ret
mov
fsubrs
mov
mov
jb
pop
pop
mov
stos
pop
enter
clc
mov
adc
dec
decl
ljmp
inc
sub
cli
inc
rorl
add
cmc
movl
sbb
dec
push
in
push
cli
pop
mov
xor
mov
jo
pop
mov
je
pop
test
inc
push
jae
xchg
fimull
int
inc
lods
pop
and
jbe
jbe
mov
push
outsl
mov
cmpb
push
jnp
gs
mov
xchg
jle
ret
and
push
cmp
xchg
bnd
cmp
sbb
and
scas
insl
xchg
pushf
jno
sub
xchg
dec
clc
test
cmp
clc
repnz
push
hlt
hlt
gs
push
orl
add
jp
sub
in
push
stos
cmp
jns
push
and
subb
dec
clc
xchg
loope
jbe
mov
stos
std
jb
mov
xlat
jae
in
and
leave
cli
daa
push
pop
pop
fdivl
std
pop
rcr
js
jne
dec
out
xchg
xchg
out
jmp
lds
pop
inc
pop
into
sub
in
lret
or
pop
fs
cs
stos
clc
stc
ljmp
repz
xlat
cmp
loop
mov
addr16
nop
mov
xlat
ss
adc
pushf
mov
push
sub
mov
cmc
mov
stos
mulb
xor
mov
stos
add
inc
mov
xchg
faddl
dec
add
dec
sbb
fsubrl
mov
jnp
mov
subl
in
jbe
mov
dec
test
js
sbb
xor
xchg
icebp
es
jne
into
lcall
xchg
and
add
fs
lods
pop
shll
arpl
mov
jmp
jb
jnp
daa
xchg
or
in
mov
les
adc
cli
and
xchg
testl
mov
lret
push
push
and
mov
dec
ss
in
fmull
cmp
inc
cmp
iret
mov
out
lcall
outsb
test
dec
repnz
mov
nop
adc
mov
adc
into
daa
mov
push
lret
dec
adc
les
sahf
mov
fwait
mov
cltd
mov
xchg
mov
js
dec
subl
popa
cmp
xor
cmp
in
fwait
mov
and
das
adc
stc
lods
jbe
cmpsb
dec
aaa
push
adc
xor
nop
aad
orl
jle
adc
mov
in
adc
jbe
pop
xchg
int
lret
push
push
out
jmp
mov
jge
push
xchg
imul
loopne
push
ret
shr
lock
xchg
cmp
in
xor
and
inc
add
add
adc
pop
mov
outsl
mov
leave
cmp
adc
lods
xchg
sbb
dec
mov
adc
bound
xchg
in
cmp
fsubl
fcompl
inc
mov
mov
mov
or
mov
xchg
in
lods
sahf
jmp
fsubrl
into
add
sub
mov
jbe
lahf
xchg
loopne
out
out
ficoms
and
scas
dec
and
gs
test
lock
ret
mov
movsl
cmpsl
lock
lds
adc
push
fisttps
inc
fwait
sub
inc
or
pusha
fwait
cwtl
imul
push
push
ds
stos
sub
rcrl
shll
ret
lds
ret
inc
nop
mov
cld
notl
fcoml
jecxz
push
xchg
inc
hlt
in
xor
xchg
neg
fs
and
mov
js
mov
movsb
rolb
and
mov
jb
or
mov
inc
adc
add
adc
imull
outsl
dec
jno
or
sti
add
rorb
test
std
mov
mov
sbbl
lcall
xor
mov
enter
jnp
ljmp
orl
xor
sahf
sbbb
jmp
mov
or
push
pop
stos
out
cmp
test
jb
loope
add
dec
mov
lahf
xchg
cmp
inc
mov
sbb
in
cmp
ja
pop
lea
in
fnsave
jle
scas
shll
rol
cmp
and
subb
push
pop
fdivr
and
xchg
sbb
ljmp
andl
enter
sub
lahf
mulb
jg
pop
imulb
sub
lret
inc
loop
fstpl
pop
push
jge
pop
xor
jg
add
leave
xchg
mov
jnp
fstpt
stc
cmp
mov
mov
xlat
xor
cmpl
clc
rorl
cmp
xor
and
sub
mov
outsb
jo
adc
dec
dec
jns
cmp
push
push
fstl
sub
lods
push
out
fsubrs
dec
or
scas
xchg
jmp
dec
mov
aad
pop
sub
jmp
adc
cmp
xchg
sahf
daa
push
cmpsb
jbe
xchg
cld
lret
pushf
cmp
lds
jp
shll
push
sub
insb
mov
xchg
or
pop
imul
clc
mov
idivl
std
mov
mov
xchg
xchg
in
lcall
enter
popa
adc
push
ljmp
xchg
or
jp,pt
movaps
push
add
cmp
insb
popa
xor
lds
and
subl
popf
inc
cmp
into
jmp
stos
xor
sub
mov
inc
mov
dec
inc
inc
or
fwait
sub
cld
xchg
push
repnz
jae
fwait
cmp
bswap
test
jecxz
jbe
sbb
cwtl
enter
pop
xchg
xor
dec
hlt
into
jmp
pop
jb
jp
das
dec
push
mov
pop
xchg
fsub
pop
lret
popf
or
js
mov
sub
popf
stc
mov
in
jge
adc
mov
out
jge
xlat
mov
sti
xor
sbb
cmp
sbb
mov
int3
enter
ds
pop
dec
pop
mov
in
mov
jae
cmpsl
jbe
xchg
mov
popf
mov
aad
sbb
xchg
clc
orl
nop
pop
dec
xor
xor
jne
adc
out
shlb
sbbb
and
dec
outsl
cmp
rcrb
aam
lods
or
dec
mov
dec
cwtl
jo
in
mov
xor
ds
bound
idiv
inc
sarb
adc
pop
pop
and
mov
popf
xor
or
loopne
push
adcb
sbb
fs
js
mov
jno
jmp
in
mov
and
inc
sbb
imul
loopne
scas
dec
mov
pop
jo
xchg
cli
push
and
xchg
stos
test
out
mov
xchg
les
popl
lods
aad
xchg
out
lret
xchg
jbe
push
mov
push
test
push
mov
cmp
jne
cwtl
sub
mov
pop
int
jge
cltd
mov
xor
out
or
mov
push
inc
mov
shlb
pop
arpl
lds
out
mov
repnz
cmc
inc
adc
adc
jns
lock
out
stos
insb
ds
daa
cmpsl
mov
lret
aas
cmpsl
jns
ja
ror
jo
pusha
xchg
push
dec
dec
dec
mov
faddl
and
xor
inc
jp
in
stos
pop
inc
xacquire
jmp
arpl
lret
out
dec
in
sub
inc
popf
imul
notl
pop
pop
shrb
xlat
clc
pop
xchg
movsl
loope
outsl
aam
dec
ja
cmp
inc
mov
jb
xor
mov
dec
inc
mov
push
fisubs
lods
xchg
mov
outsb
nop
jno
jp
test
ret
add
add
xchg
xchg
lods
aaa
inc
inc
test
repz
dec
jl
js
andl
pop
fstcw
sub
cmc
repnz
jbe
xchg
jno
insl
push
xor
adc
xor
mov
push
and
push
push
out
and
mulb
xor
aaa
lock
adc
lret
sbb
hlt
insl
into
arpl
pop
hlt
les
call
push
icebp
sub
mov
lahf
inc
das
mov
clc
lods
xchg
jle
jge
sub
pop
cmp
repnz
nop
lea
fimuls
or
test
dec
fsubrs
js
add
repz
or
daa
stos
lret
gs
cmp
test
pop
sub
sahf
shrl
movsl
push
and
ret
icebp
loope
push
ds
cmp
push
andb
sub
in
mov
mov
sti
mov
sub
arpl
and
data16
psllw
in
stos
pop
sbb
or
xor
mov
push
sarl
jle
mov
fsubrs
mov
jg
lods
pop
scas
inc
ds
mov
scas
rcr
icebp
adc
or
push
push
jmp
shl
push
cmpsl
outsl
add
imul
add
clc
mov
mov
mov
cld
adcb
and
pusha
xchg
xor
sbb
dec
push
icebp
pushf
mov
cld
xchg
and
pop
test
push
sahf
mov
mov
rcll
ljmp
inc
out
sbb
xchg
dec
lcall
adc
push
shrl
mov
xchg
mov
mov
dec
sub
cmc
push
dec
sub
sbb
je
outsb
inc
lods
test
pop
xor
rcll
les
jecxz
and
sbb
lret
mov
and
repz
xor
ljmp
cmp
jl
mov
jmp
clc
shlb
dec
mov
sub
jns,pt
sub
stos
jnp
jbe
dec
and
insl
gs
insb
sub
xchg
pop
mov
pop
xchg
xor
icebp
mov
icebp
iret
cmp
push
xor
adc
dec
pop
scas
je
subb
imul
push
mov
adc
movsb
pop
jge
lods
mov
and
loop
fisubrs
push
mov
and
in
mov
imul
movsb
jl
xor
inc
aam
xchg
mov
fs
loopne
mov
lcall
push
sbb
lret
sarl
jno
cmpsl
xchg
or
fsubrl
shll
test
push
dec
mov
jns
push
mov
je,pn
push
insl
mov
adc
out
jbe
repz
sub
popf
mov
test
nop
or
fimuls
sbb
push
js
test
imul
cltd
jo
cmpsl
cld
test
std
stc
adc
out
add
lock
test
pop
mov
out
push
lods
mov
inc
aas
cmpsl
mov
jg
test
ss
xlat
test
dec
aad
xchg
cwtl
aad
insb
nop
pusha
jl
lahf
dec
imul
iret
and
or
test
mov
das
mov
icebp
arpl
mov
sbb
dec
je
jo
sbb
jmp
mov
out
or
dec
jbe
dec
nop
or
add
movsl
pushf
or
dec
dec
sbb
and
cmpb
pop
pop
stos
push
inc
pop
and
xchg
dec
shll
js
repz
adc
push
std
adc
jp
add
mov
fstps
mov
in
dec
outsb
push
ljmp
in
inc
std
int3
cltd
pop
jns
scas
out
int
mov
nop
das
in
push
xchg
test
and
incb
dec
jae
shlb
mov
jne
add
xchg
or
cmp
fstps
xchg
push
push
lret
xor
movb
jge
out
shl
cmc
mov
andb
sbb
lret
xchg
pop
jae
adc
fdivl
shlb
sbb
lret
aas
add
mov
inc
or
sub
mov
push
jns
and
out
push
shrb
movsb
mov
inc
push
testb
pop
xor
repnz
cli
mov
clc
pop
xor
mov
subb
or
mov
mov
sub
mov
stc
mov
nop
in
out
mov
icebp
mov
inc
dec
xchg
jns
cmp
lea
mov
std
mov
mov
pop
dec
mov
sti
mov
sbb
cmpsl
outsl
popa
push
jg
cmp
movsb
sub
and
inc
mov
mov
movsl
lret
sub
jns
xchg
mov
jb
loope
notl
clc
fnsave
inc
ds
dec
in
insb
jo
pop
lds
xlat
shlb
jbe
orb
in
mov
pop
cmpsb
int
scas
sbb
dec
imul
sub
add
push
mov
cmp
add
cmp
dec
xorb
pop
mov
das
in
mov
sbb
fcoms
jmp
push
sbb
or
pop
cmc
xchg
add
pop
in
loop
cmpsl
fmuls
int3
lods
addr16
cmpsb
outsb
push
sbb
mov
addl
push
rcl
bound
inc
fidivs
xor
mov
loopne
fldl
lods
cmp
adc
call
cmp
rcrl
inc
adc
addr16
and
mov
push
pop
jmp
lods
inc
push
push
popa
hlt
adc
pop
adc
cmpsl
jg
add
test
pop
xor
add
inc
fsubs
xchg
inc
outsb
decl
dec
das
shrl
ljmp
cwtl
or
rorb
mov
add
xchg
jnp
xadd
iret
mov
shl
lret
clc
sub
lcall
xchg
rcr
mov
repnz
xchg
fimuls
push
dec
adc
ret
int3
xor
les
fwait
lret
dec
les
dec
insb
pop
jnp
adc
sub
div
mov
mov
xchg
in
jl
push
data16
mov
aas
movsb
pop
cmp
mov
jmp
add
fstps
jmp
mov
mov
mov
mov
daa
mov
push
mov
xor
aad
pop
int3
and
jno
push
cmp
test
jbe
mov
mov
inc
test
or
push
das
repz
jmp
jmp
in
cmpsb
dec
dec
or
add
mov
pop
mov
jle
dec
movsl
and
dec
push
xor
arpl
xlat
push
or
mov
jge
into
jo
adc
mov
lea
ljmp
movsl
sub
push
int
nop
gs
push
pop
mov
mov
test
in
xchg
xor
decb
mov
jns
in
mov
mov
scas
dec
cmp
ljmp
cs
mov
shr
mov
ret
adc
popf
lea
in
mov
outsb
mov
sbb
movsb
fsubl
and
fs
inc
cmpsl
fimuls
xor
popl
lods
mov
fidivrs
mov
or
dec
dec
jle
sbb
cwtl
mov
cmp
andl
adc
je
outsb
jl
test
ja
cwtl
std
lds
inc
xor
cli
xor
pushf
mov
mov
nop
xor
mov
out
mov
xor
or
cmpsl
fucom
adc
push
or
scas
jmp
out
fcoms
xor
adcb
das
movsb
add
out
ds
mov
push
ja
inc
dec
int
xchg
and
out
jo
fstpl
popf
mov
lods
adc
push
sti
imul
imul
push
lds
mov
daa
mov
adc
adc
xchg
in
ja
enter
shlb
or
inc
jo
mov
lret
xchg
or
mov
iret
xchg
sub
and
das
mov
mov
inc
imul
inc
xchg
dec
lds
xor
or
leave
loop
xlat
addr16
inc
out
movsl
xchg
xchg
jle
mov
dec
xchg
nop
xchg
cmp
icebp
xchg
pop
fucomp
std
mov
ret
daa
in
add
mov
shr
mov
clc
sbb
inc
mov
and
inc
faddl
stos
dec
out
sbb
push
mov
pop
test
inc
xor
out
push
int
lods
adc
pop
mov
dec
ret
pop
stos
fs
sbb
dec
lret
pushf
or
xchg
xchg
sub
stos
lods
fs
dec
std
inc
shlb
or
das
jl
imul
or
insl
insb
inc
pop
pushf
xchg
fwait
les
push
test
cmp
jmp
xor
xchg
loopne
jecxz
enter
aad
mov
adc
add
jbe
mov
scas
add
push
pop
pusha
pop
xchg
dec
sar
notl
mov
push
or
push
imul
xchg
imul
shll
xor
pushf
inc
andl
or
add
dec
ja
inc
ss
pop
dec
js
fists
sbb
lods
fs
push
mov
cmpb
xlat
jmp
and
fdiv
lods
hlt
cmpsl
add
mov
xor
inc
rcrl
daa
divb
xchg
cmp
in
lret
push
cmc
loopne
cmp
arpl
dec
std
jmp
sub
add
int3
push
fldenv
jbe
nop
dec
jge
jae
xlat
ret
cmpsb
xchg
hlt
subl
inc
orl
pop
sub
mov
add
pop
dec
add
insl
push
leave
mov
cmp
sbb
stos
sbb
cmpsl
in
mov
pop
cmpl
pop
jo
xchg
into
cwtl
inc
fldl
or
movsb
mov
aad
sbb
sub
ds
lcall
dec
andl
or
jns
imul
dec
push
xchg
push
sbb
dec
aam
mov
and
jns
mov
in
mov
pop
es
loop
inc
popf
adc
out
data16
gs
jbe
lock
imul
xchg
pop
cmpsb
mov
mov
lods
arpl
mov
mov
mov
mov
gs
lock
in
rorb
dec
push
fimull
popa
shll
in
mov
call
cmpsl
mov
fstp
rcrl
call
and
test
pop
xchg
jmp
mov
filds
fwait
adc
lea
fdivrl
xor
xchg
out
inc
or
dec
arpl
pop
mov
add
repnz
cwtl
xor
ret
jecxz
addr16
sbb
cli
je
mov
inc
sub
sti
into
repz
fwait
dec
movsl
js
inc
lahf
jbe
sub
mov
shl
xor
popa
and
jae
xorb
je,pn
jo
mov
xor
mov
push
dec
or
xor
cwtl
adc
jae
pushl
mov
gs
addr16
sbb
push
or
inc
xchg
mov
outsb
imul
pop
pop
in
jbe
movsb
xchg
push
or
loope
sbb
jl
les
decl
adc
pushf
add
and
ret
hlt
sub
std
inc
ret
loope
arpl
cmp
mov
cwtl
add
rolb
movsb
add
pop
pop
div
ja
pop
jl
neg
push
inc
cmc
maxps
or
rcr
insl
pop
jno
mov
push
or
lcall
movsb
jb
clc
rcrl
cmp
sbb
mov
stos
push
cwtl
adcb
xchg
mov
fsubrs
lahf
stos
jb
dec
and
pusha
daa
mov
psrad
xor
and
or
jns
cs
jg
inc
jae
repz
aad
pop
mov
adc
jle
fisttps
pushf
clc
out
xor
arpl
pusha
or
jo
lods
fwait
jg
mov
add
jp
stc
pop
mov
sub
sub
adc
add
add
jne
jo
lods
test
insb
dec
mov
or
mov
jmp
das
pop
fdivr
or
cmp
push
mov
cmpsb
call
sahf
arpl
or
xchg
mov
leave
icebp
jnp
mov
mov
ljmp
mov
cmp
jnp
mov
xor
push
sahf
adcb
sub
ror
scas
sbb
sbb
xchg
int
mov
adcb
sub
je
nop
add
xor
pop
xchg
fiadds
mov
cmp
pusha
xchg
mov
pop
mov
ljmp
adcb
vmovd
scas
lea
push
fldcw
pop
xor
add
adc
mov
or
sbb
mov
popf
push
xchg
push
push
push
hlt
loope
test
cmp
adc
mov
cmpl
mov
ds
insb
cwtl
bnd
dec
mov
jns,pt
test
xchg
dec
popa
push
xchg
mov
stos
enter
repz
sti
icebp
mov
add
test
dec
dec
push
idiv
orl
sub
aaa
subl
mov
inc
mov
xchg
pop
push
popf
pusha
aam
ret
inc
mov
mov
adc
loopne
adc
cs
mov
ja
xchg
into
push
mov
dec
mov
xor
pop
push
pushf
jbe
jg
loopew
cltd
adc
scas
cmp
mov
fcomps
push
mov
xchg
mov
mov
insl
mov
or
ss
sub
enter
into
push
testb
jle
sti
xchg
jo
sub
fs
adc
testl
ljmp
stos
add
add
or
fsubrs
movsb
inc
dec
and
and
repnz
push
and
int3
inc
sbb
xor
dec
or
pop
sub
push
aas
das
mov
push
lock
mov
divl
filds
daa
dec
into
dec
testb
lret
push
xor
push
lret
fbld
mov
mov
pop
and
lcall
add
jecxz
cmc
mov
sarl
std
into
movsl
jl
cmc
popf
cmp
scas
out
cs
ds
add
and
es
fdivl
jmp
mov
arpl
jno,pn
cmpsl
cmp
out
push
or
or
jg
sbbl
jmp
cmpsb
in
adc
lcall
add
push
pop
cmp
add
imul
xchg
jmp
fdivl
add
cwtl
add
dec
ffree
pop
fadds
es
cmpb
and
add
sbb
mov
mov
mov
loope
cwtl
stc
sbb
repnz
loope
imul
call
xchg
fdivrs
pushl
or
scas
and
pop
mov
clc
je
aad
ret
sub
mov
adc
adc
sub
pop
rorl
sbb
xor
xor
add
ss
jg
inc
dec
inc
sbb
repnz
clc
pop
push
jg
arpl
xor
jns
test
jmp
mov
push
subl
loop
scas
inc
jb
adc
dec
adc
outsb
aaa
mov
mov
sbb
and
inc
sarl
xchg
cmpsl
adc
clc
and
testl
jle
fnstcw
inc
loop
out
pushf
icebp
scas
inc
mov
dec
cld
fucomi
pop
pop
mov
sti
xchg
dec
mov
lea
movzwl
push
jo
jecxz,pt
je
push
es
jle
cmp
into
lea
lea
aad
or
jae
mov
jns
pop
inc
sbb
icebp
sub
xor
jne
fsubrs
ds
and
hlt
jno
test
mov
xchg
sub
dec
enter
out
xchg
int
dec
cmpsl
cmp
inc
pop
scas
shr
fcompl
sub
rol
aam
pop
jbe
fwait
subl
mov
dec
or
testb
push
adc
inc
jge
shr
icebp
out
pusha
inc
int
into
shll
outsl
mov
add
dec
inc
and
xchg
js
lock
push
xlat
addr16
or
or
cmc
xlat
cmp
push
ss
push
insl
mov
aad
inc
push
pop
addb
jp
call
sarl
sbb
xchg
in
cmpsb
jne
mov
dec
inc
jmp
pop
fistpll
daa
jae
push
lods
and
jl
cmp
sbb
ds
jb
sub
mov
ficoml
loope
notb
cmpsl
jp
nop
mov
repz
jp
stc
in
push
fwait
mov
or
das
enter
mov
xchg
pop
loope
stos
popf
movsb
int
lock
dec
or
stc
shlb
fidivs
mov
stc
sbb
cltd
mov
cmp
jl
mov
add
cmp
in
scas
gs
lods
push
cmp
adc
inc
cwtl
ret
push
fistl
xor
push
push
mulb
outsb
rcrl
addl
push
notl
cmp
int3
mov
dec
push
jp
or
dec
add
scas
jnp
neg
lods
cmp
popf
outsl
add
dec
or
and
loop
int3
addr16
aaa
xorb
and
mov
scas
push
or
mov
jl
or
mov
sahf
jnp
jnp
ret
adc
sbb
add
cli
push
adc
cld
mov
sbb
cwtl
int3
or
jp
call
adc
adc
mov
cli
stos
mov
and
cld
jnp
pop
jb
enter
popf
or
dec
js
stos
lods
std
mov
mov
push
les
add
sub
andb
hlt
cmp
test
sbb
loop
mov
or
xchg
mov
aam
mov
mov
adc
mov
sub
inc
cli
xchg
mov
sarb
fwait
pop
mov
mov
adc
aaa
cmp
bound
frstor
push
scas
std
loopne
shlb
xor
add
subl
loop
xchg
jae
mov
adc
popa
jno
aad
mov
adc
lahf
jle
aas
ss
jnp
jb
sub
lahf
xlat
cwtl
push
xchg
xchg
mov
sbb
out
scas
enter
or
lods
cmp
pushf
sti
or
outsb
xchg
stc
mov
repnz
cmp
lea
cmc
pop
push
mov
fistl
xchg
mov
fidivs
jmp
cmp
push
and
js
sbb
stc
outsb
cmp
adc
sbb
inc
fxam
xchg
and
test
testb
test
sub
std
ret
push
or
into
filds
stc
xchg
pop
inc
pop
xlat
add
lahf
js
cmp
inc
iret
in
lret
hlt
xchg
mov
fdivl
les
pop
pop
push
fsubp
xor
daa
xchg
inc
and
mov
lods
sarb
mov
pop
arpl
rcr
movsb
jno
mov
mov
scas
lea
push
es
test
in
jnp
pop
ret
ja
jmp
fdivl
adc
je
mov
adc
jnp
push
xor
cld
enter
loope
cltd
cmpsl
and
sbb
or
sbb
cmp
adc
mov
lods
lret
add
fisttpl
das
das
xor
nop
shlb
sub
fwait
popa
mov
inc
dec
scas
clc
adc
or
les
xor
aad
and
push
loopew
aad
or
sub
flds
jae
enterw
repnz
mov
adc
addr16
lret
roll
push
test
std
orb
push
cmpsb
push
stc
idiv
mov
pop
xor
mov
sub
cmp
into
push
enter
xchg
cmp
cmp
mov
popf
bts
push
xor
xchg
in
js
pop
ja
pop
mov
jo
nop
andl
xchg
popf
sub
xor
std
fucomip
cli
and
adc
cmpsl
das
int3
jmp
js
cmp
and
leave
inc
or
ja
or
ja
lcall
rclb
icebp
xor
pop
or
jno
cwtl
data16
dec
mov
or
stc
shrl
sub
stos
cltd
push
jb
mov
adc
xor
cmp
jle
mov
cmp
mov
aam
add
testl
mov
ljmp
adc
push
sub
test
pop
cmc
cmp
jmp
movsb
pop
je
adc
loope
decl
out
lret
dec
push
xor
test
mov
push
insb
jns
loope
insl
jo
pop
push
and
mov
imul
addr16
fwait
sub
xchg
cwtl
pusha
mov
push
int3
mov
cmc
dec
popl
mov
arpl
lea
orl
rorl
jl
cli
fs
mov
mov
repnz
xchg
into
out
test
mov
xchg
out
call
add
jmp
add
iret
aam
add
int
lea
pop
or
cmp
jg
or
dec
es
popw
fldpi
pop
xchg
mov
ret
pop
out
sub
hlt
sub
in
xchg
shr
or
pop
cmp
stos
mov
repz
add
cmp
pop
and
jg
mov
dec
xchg
jns
add
out
lret
sub
lock
mov
sbb
js
out
cmc
sahf
xchg
int
mull
iret
lods
call
inc
faddp
je
add
jae
aaa
test
xor
mov
mov
fcmovbe
jno
jl
mov
repz
push
adc
inc
cmc
daa
cwtl
das
mov
fldenv
test
fldcw
fistps
popf
lea
aam
repz
add
scas
adc
add
in
fwait
pop
cmp
lea
inc
gs
xorb
mov
dec
gs
jge
insl
ja
shr
push
movsl
aam
sbb
arpl
dec
insb
and
mov
mov
add
aas
int3
lcall
or
and
hlt
inc
or
xchg
sub
inc
xor
mov
jle
pop
call
mov
out
add
add
repz
inc
xchg
jge
movsl
sbb
jecxz
and
inc
cmp
xor
pop
jbe
jg
mov
dec
adc
icebp
cmc
cli
fldl
in
add
js
xor
pop
iret
xchg
dec
and
inc
push
and
dec
sbb
mov
push
jbe
add
in
add
mov
mov
mov
popa
sarl
xchg
mov
jae
adcb
jmp
enter
mov
stos
cwtl
mov
je
call
outsl
movsl
cmc
fcmovbe
dec
ja
push
jl
dec
sti
add
or
aas
pop
mov
inc
and
push
add
xor
aad
lods
mov
popf
inc
aaa
add
mov
lods
jo
out
mov
mov
add
shll
dec
mov
out
imul
lret
pop
enter
sub
inc
mov
inc
jmp
or
pop
jae
call
outsl
sbb
mov
aas
xor
xchg
cmpsb
nop
jb
in
sbb
adc
ret
ret
lahf
or
mov
je
mov
xor
jl
enter
mov
push
mov
push
cmp
sbb
flds
call
mov
push
repnz
lret
fnstcw
and
cmpsl
xor
xchg
xor
incb
scas
loop
sti
aas
cmpsl
mov
popa
rcrl
out
shll
push
sar
add
or
lods
ffreep
imul
or
pusha
inc
adc
std
mov
mov
xor
mov
lret
add
jb
mov
in
push
cmc
lret
leave
loopne
cld
and
xor
js
cmp
pop
int3
in
pusha
push
dec
pop
inc
add
mov
lods
pop
mov
pop
icebp
mov
mov
add
loope
inc
inc
add
cli
inc
dec
insl
mov
test
add
mov
push
dec
in
inc
push
in
mov
mov
lods
mov
lahf
rcll
cli
nop
in
push
mov
sbb
cmpsl
jns
cmpsl
insl
pop
js
push
movsb
fldt
cmpsb
mov
sub
hlt
cmc
dec
sub
cmp
fstpl
and
jp
sbb
inc
mov
dec
ret
addr16
scas
rorl
jg
shl
push
fidivrs
adc
dec
cmp
dec
push
push
push
fwait
call
or
sbb
les
movsb
dec
gs
pop
movsb
pop
leave
pop
outsl
shrl
push
aaa
or
out
test
jns
pop
mov
out
movsl
sbb
mov
fists
dec
mov
inc
cmp
stc
sbb
popf
jp
dec
inc
inc
fistps
in
cmpsl
arpl
in
pop
fidivs
cli
xor
out
xor
fadds
and
leave
jne
call
xor
cmp
mov
sub
repz
xor
movsl
cmp
inc
test
repnz
xchg
push
test
movsb
mov
and
dec
mov
mov
insb
and
dec
ss
mov
mov
and
adc
mov
testl
sbb
cmpsl
xor
or
pushf
jmp
loope
inc
xor
ja
or
push
lcall
push
stc
cmp
adc
cmpsl
xchg
mov
insl
adc
xchg
inc
ds
push
lock
push
xor
xor
mov
xchg
mov
shll
adc
shll
ss
repnz
js
inc
es
inc
mov
or
mov
xor
pop
jb
lock
imul
test
popa
jae
inc
mov
xor
nop
fldcw
sub
dec
enter
pop
insl
mov
dec
adc
pop
adc
imul
or
or
ret
insl
stos
push
arpl
pop
stc
shl
pop
stos
add
test
pop
xchg
cmpl
cmp
cs
sbb
mov
fs
sar
jno
mov
repnz
inc
nop
dec
jns
leave
and
or
jmp
fcoms
mov
imul
cmp
mov
cli
jno
mov
imul
sub
xor
ljmp
dec
ret
sub
dec
out
pop
xor
mov
jmp
inc
jge
sbb
cltd
and
fwait
call
pop
and
iret
pop
mov
dec
push
lahf
pop
mov
and
stc
stos
cmp
imulb
mov
test
shll
pop
insb
mov
jae
in
lock
or
push
push
scas
adc
call
int
xchg
push
stos
testl
push
ret
aas
aas
jns
int
sbb
mov
pop
test
add
pop
pop
push
ds
sub
mov
xor
loopne
or
lahf
push
aam
pcmpeqb
dec
fistpl
test
adc
inc
loopne
mov
andb
mov
repz
movsb
insb
adc
inc
das
lcall
call
mov
faddl
mov
xchg
jmp
mov
and
jae
pop
or
cs
scas
push
inc
adc
imul
pop
and
xchg
std
sbb
dec
dec
dec
cmc
dec
mov
mov
push
aad
out
dec
dec
pop
mov
mov
rcr
ret
sub
sub
jp
sub
test
xchg
push
mov
rcr
mov
dec
fwait
out
sahf
sbb
jne
jne
adc
sbb
mov
in
scas
out
xchg
xchg
fmull
fwait
rorl
jmp
xor
out
dec
int
jae
int3
adc
aam
dec
xor
mov
push
dec
mov
popa
bound
xchg
xchg
xor
outsl
and
add
xchg
dec
push
and
cld
and
pop
and
cmc
test
and
push
daa
mov
mov
mov
xor
lea
loop
hlt
movmskps
imul
push
mov
xchg
inc
rorl
stos
mov
jbe
sbb
fidivl
sbb
dec
adc
leave
sbb
cmp
xor
jns
cmp
ljmp
sbb
es
jmp
push
clc
in
movsb
push
stos
push
in
pop
fdivrs
hlt
fiadds
push
js
scas
adc
sbb
xchg
push
sub
aaa
data16
or
sbb
mov
mov
mov
push
jo
sub
ss
push
aam
xchg
aam
cmpsl
pop
mov
in
and
fisttpl
fwait
mov
sbb
cmp
lahf
inc
dec
pop
push
jbe
lods
mov
sbb
mov
inc
mov
xor
xchg
jo
lret
and
mull
sahf
pop
jmp
jl
push
lahf
es
inc
push
xor
gs
xchg
mov
dec
xor
in
lods
out
inc
fmull
pop
clc
lea
rcrl
rcrl
popf
pop
add
or
push
cmp
dec
adc
in
mov
loop
lds
mov
stos
sbb
mov
ljmp
int
cwtl
ret
scas
cmp
add
sub
push
cmp
sub
and
cmp
cmpsl
ds
subl
hlt
cmp
cmc
push
mov
cmc
sbb
inc
vmulpd
inc
xchg
je
std
pop
sarb
aas
imul
insb
int3
rcr
and
test
inc
jnp
cmp
xchg
repz
mov
pop
jecxz
pop
stc
call
jp
in
cli
ljmp
pop
inc
sub
pop
aaa
roll
test
pop
push
mov
and
daa
inc
mov
or
dec
sub
xchg
movsl
mov
sub
add
mov
xchg
push
in
push
xchg
and
je
cltd
test
push
dec
push
pop
leave
test
xchg
out
push
insl
xor
and
cmp
jecxz
cli
adc
cmp
push
movsl
dec
cmp
sbb
insb
test
outsb
cmp
mov
jne
scas
into
cmp
notb
push
mov
ss
arpl
dec
bound
inc
inc
shll
add
popa
shrb
movsb
push
xor
shll
and
mov
pop
ja
stos
and
add
mov
push
or
inc
daa
hlt
adc
pop
scas
aas
inc
add
fldenv
ret
jno
push
inc
lcall
push
xchg
repnz
pop
xchg
pop
pop
je
mov
add
jo
xor
ja
repnz
inc
push
sbb
mov
out
ljmp
fiaddl
xchg
ffree
fs
in
ljmp
ljmp
cmp
mov
fists
in
jp
xchg
xchg
sub
stos
out
xchg
les
pop
arpl
in
mov
dec
cltd
rcrb
mov
hlt
jg
cmp
jg
fidivrl
adc
lods
shll
sbb
mov
push
push
adc
or
cltd
mov
mov
loopne
jno
push
or
movsb
xor
inc
enter
add
in
int3
orb
xchg
rep
push
push
lret
mov
out
adcb
pop
dec
cmpsb
sub
sbb
mov
fadds
push
mov
add
sbb
jp
shlb
xor
cltd
cmp
jp
fisttpll
push
mov
cmp
mov
les
mov
xor
jg
aad
into
vmread
push
ss
je
xchg
sbb
xchg
xlat
cmpsb
in
inc
sbb
push
and
sub
in
dec
cmp
cmova
jno
jb
mov
or
movsb
daa
mov
arpl
sti
out
cmc
jg
add
lcall
adc
leave
xchg
sbbb
mov
mov
ret
fisubrl
aas
incb
mov
mov
or
pop
push
push
or
pop
loope
leave
sbb
and
subl
add
mov
jecxz
sbb
stos
pop
ja
or
sbb
cmp
sub
and
cmp
cltd
pop
test
ljmp
inc
cmp
shr
andl
cmp
sub
ljmp
ja
fdivl
push
mov
test
fs
std
imul
rorl
inc
sbb
sbb
adcl
pushf
dec
dec
notb
jmp
and
mov
out
int3
jno
push
sub
imul
ja
xchg
xor
in
dec
in
and
mov
dec
movsb
xlat
popf
int
pop
lcall
out
mov
lods
lods
add
bswap
or
cmp
stos
adc
and
xchg
xchg
dec
popf
fs
xchg
jle
cmpsl
sti
cs
and
outsb
outsl
cmp
mov
push
loopne
int3
jne
rorl
mov
lock
or
out
rclb
pop
js
std
scas
movsl
into
dec
or
ret
pop
inc
add
inc
adc
into
lods
aam
sahf
inc
pop
push
cmp
in
clc
mov
out
dec
cmc
imul
repnz
jae
addr16
mov
les
inc
out
cmp
xor
dec
stos
xchg
fldl2e
aaa
test
pushf
loope
aad
cmp
xor
leave
shll
es
int
add
and
jmp
sub
push
sub
jge
push
dec
xchg
mov
fisubl
xlat
or
cmp
icebp
scas
arpl
push
cmp
mov
ror
or
jmp
fstpt
das
je
adc
iret
inc
jecxz
insb
sbb
pop
loop
test
cwtl
outsb
loope
and
push
sub
push
inc
sahf
test
lods
and
flds
out
mov
push
or
bnd
loop
repz
fcmovnb
frstpm(287
xchg
hlt
fstpt
dec
lcall
loope
jne
or
fcoml
movsb
or
xchg
jge
das
ds
and
xor
adc
mov
mov
pop
sahf
push
add
inc
dec
xchg
es
inc
pop
inc
add
cmpsl
pusha
dec
test
out
jmp
pop
stos
dec
cltd
mov
cld
mov
orb
test
xchg
int3
shlb
sbb
cmpsl
cmp
add
clc
mov
xor
std
daa
and
scas
and
ret
movsl
pop
xor
imul
mov
mov
xor
jmp
test
sub
push
iret
mov
adc
mov
scas
jp
lods
aad
mov
sahf
push
cmc
mov
pusha
cmpsb
addr16
imul
ss
xchg
scas
sbb
xchg
test
sub
lods
dec
add
sbb
out
aad
shrb
or
pop
xchg
jecxz
imul
mov
or
jb
jns
dec
enter
xor
popa
loopne
or
pop
in
push
mov
and
xor
adc
out
decl
setge
negl
bound
roll
in
in
jnp
aad
xor
paddsb
leave
ret
ss
mov
mov
es
push
push
jl
xchg
sahf
test
andb
mov
xor
loop
jp
add
mov
test
adc
cmp
aas
fsubrl
outsl
xchg
push
jp
sahf
test
dec
pop
cmp
out
test
mov
fdivp
push
push
xor
dec
cld
xor
in
loop
xchg
cmp
mov
adc
jl
mov
pop
pop
and
lcall
dec
inc
sbb
mov
add
pop
mull
enter
movsb
pushf
xchg
mov
inc
xchg
sub
jns
push
mov
daa
mov
mov
push
movsb
cwtl
jb
jnp
dec
and
xchg
ljmp
je
pop
and
adc
gs
test
push
mov
xor
call
ds
cmpsb
mov
cwtl
xchg
fildl
pop
inc
mov
into
mov
ljmp
ret
adc
push
cmp
hlt
hlt
cmpsl
sbb
inc
in
push
sbb
mov
cmp
push
mov
roll
push
sub
cmp
and
mov
xor
fisttps
aam
sbb
out
mull
roll
inc
loopne
adc
jns
jno
call
mov
cmp
orl
push
mov
icebp
int3
sahf
sti
pop
pop
in
stos
pop
mov
aam
test
or
sbb
ds
dec
jns
and
rol
mov
icebp
lds
ret
cmp
test
aam
sbb
dec
push
in
xchg
lock
adc
mov
cmpsb
popa
in
push
mov
pop
mov
gs
add
xchg
mov
or
mov
leave
push
jo
or
xchg
ret
sbb
arpl
adc
das
cmp
je
jg
cli
add
test
daa
push
fsubrl
popa
cmpsb
dec
cmp
testb
ret
dec
rorb
fwait
add
lea
daa
xlat
mov
scas
sub
xchg
lret
fdivl
push
loopne
aas
push
ret
decl
push
fistpll
fists
mov
push
jecxz
jnp
test
lods
ds
das
mov
cmp
mov
mov
loope
lods
adc
jl
jb
push
rorl
inc
xor
inc
test
mov
mov
push
cmp
mov
repz
adc
das
nop
je
ja
lods
fwait
sub
adc
adc
jle
movsl
out
mov
loop
pop
out
je
lods
ja
pop
decl
or
in
in
fnstsw
xchg
or
or
mov
jl
insl
xlat
xchg
mov
xor
pop
aaa
add
hlt
repz
mov
mov
jg
jnp
movsb
or
sbb
or
or
nop
push
pop
aad
inc
push
and
mov
adc
mov
int3
cli
iret
xor
fisubl
scas
sbb
iret
ss
mov
jns
or
in
or
dec
inc
adc
les
sub
mov
sbb
and
add
cld
mov
f2xm1
insl
pop
enter
loop
in
mov
stc
pushf
movsb
xchg
cli
repnz
les
les
add
mov
dec
mov
rcl
adc
in
test
fwait
adc
sti
rclw
xchg
cli
and
xchg
push
mov
mov
int
and
sub
popa
pop
lret
in
jb
movl
sahf
adc
push
cli
scas
scas
jecxz
ja
ljmp
jecxz
inc
and
mov
adc
adc
push
push
lcall
push
pusha
xchg
cltd
jo
sahf
ja
sub
enter
sub
lcall
ret
pop
pop
inc
inc
test
inc
icebp
scas
mov
cmp
hlt
push
and
add
push
movsb
and
and
jl
mov
mov
addl
sbb
jb
movsb
outsb
pop
dec
jns
fwait
xor
xchg
sti
lock
cs
jo
mov
push
jae
pop
clc
sbb
lds
ret
sarb
add
stos
gs
sub
test
mov
shll
sar
aad
adc
sub
popf
inc
out
je
fmull
cli
sub
mov
into
fbstp
fdivrp
aad
mov
lds
mov
xchg
push
pop
and
aad
pop
mov
leave
mov
aam
js
fstp
fmul
lock
cmp
xor
lods
rcrb
xchg
pop
mov
push
sub
mov
sbb
loop
sub
ljmp
notl
add
inc
cmp
loop
imul
pop
inc
pop
pop
inc
js
decb
fs
pop
pop
icebp
cmpb
out
scas
cmp
orl
sbb
pop
notb
sahf
popa
imul
mov
sbb
sub
loop
cmp
fadd
dec
pop
xchg
repnz
cwtl
shlb
dec
push
jg
xchg
sub
shll
mov
sub
rcll
or
fsubrs
repnz
inc
test
imul
insb
mov
int
or
cltd
jmp
xchg
sbb
shll
loope
out
pop
pop
dec
enter
pslld
cwtl
jmp
andb
xchg
dec
addr16
test
dec
pop
aas
and
sbbb
mov
ret
sti
sub
je
or
mov
mov
push
ret
xchg
rcl
dec
jp
subl
mov
push
int
add
cld
lret
pusha
loop
or
inc
mov
sahf
adc
xchg
pop
inc
into
incb
lcall
adc
iret
mov
popa
push
mov
loop
sar
inc
pop
xor
and
pop
xchg
shll
cli
xchg
cmpsl
jg
adc
xchg
xchg
jecxz
enter
xchg
mov
aaa
popf
insb
imull
daa
jmp
or
or
pop
fbstp
imul
js
push
ljmp
js
movsl
and
mov
ret
in
pop
push
fidivs
inc
stos
xchg
fucomp
jno
xor
movsl
es
aam
stos
addr16
inc
mov
push
mov
mov
out
cli
xchg
jns
sub
mov
test
popf
mov
mov
dec
imul
jb
aad
jecxz
push
test
dec
pop
les
ja
or
push
push
inc
dec
mov
or
or
adcl
inc
and
mov
movsb
fldt
daa
mulb
mov
inc
icebp
add
push
das
call
xor
sub
jge
sub
jae
pop
xor
std
push
mov
xor
jne
xchg
xchg
jge
sub
cmpsb
inc
lods
scas
xchg
inc
out
sub
jmp
jno
jo
insb
cmpsl
sbb
mov
lret
push
xchg
pop
add
in
jg
or
dec
aas
or
xor
ljmp
inc
sub
jl
call
aaa
pop
iret
push
cli
pop
xchg
push
xchg
shll
dec
repz
cwtl
test
mov
std
rep
inc
cmpb
pop
xor
leave
imul
call
add
inc
inc
adc
sahf
cmp
jnp
mov
rcrl
jo
lahf
or
add
push
push
mov
bound
fnstsw
pop
sbbb
in
inc
lcall
lock
in
shrb
xchg
adc
orl
xor
jb
add
push
divl
xchg
mov
mov
mov
and
or
inc
xor
jns
test
add
test
jle
add
pushf
movsl
and
mov
js
push
lds
imul
stos
cmp
xchg
sbb
mov
idivl
aad
mov
xchg
mov
mov
adc
in
and
loopne
lcall
repnz
aad
mov
xor
or
push
sub
or
xlat
aam
in
jecxz
jmp
xorb
lods
dec
js
sarb
dec
xor
sahf
ret
mov
sub
mov
sub
fwait
out
adc
in
jecxz
xlat
cltd
xor
js
and
loop
cmpsb
outsb
aas
or
pop
push
je
stos
push
cmpsb
add
mov
sti
out
imul
sbb
mov
out
sbb
scas
sub
aaa
mov
mov
mov
or
es
dec
sbb
mov
enter
subb
mov
dec
mov
sub
pushf
rcl
push
daa
sub
xchg
jae
out
les
sbb
loope
lock
adcl
dec
cmpsb
lods
mov
andb
ficoms
cwtl
push
adc
fcmovnu
scas
mov
aaa
jl
rolb
jns
das
in
mov
or
stos
sub
and
and
sub
mov
add
bound
xchg
test
stos
sub
pop
shlb
jnp
into
cmc
add
in
mov
mov
mov
je
scas
das
or
mov
sub
push
sub
and
ret
sub
mov
cmpsb
jp
mov
lds
adc
mov
mov
mov
sbb
mov
lret
loope
xchg
arpl
add
addr16
jo
pop
and
add
sub
sti
push
loop
pop
inc
cltd
mov
or
inc
adc
xchg
mov
std
bound
outsl
ret
mov
xor
or
test
or
inc
lea
push
push
mov
mov
jno
sarb
out
mov
cli
fs
cmp
dec
imulb
ds
jbe
sub
dec
pop
dec
push
xor
aaa
shrl
push
or
jno
das
jne
push
mov
out
mov
and
loope
pusha
dec
inc
adc
push
fcmovb
sub
and
push
xchg
sbb
in
lock
inc
cltd
and
xchg
xchg
int
pusha
je
inc
lcall
and
aas
adc
dec
xor
das
cmc
std
js
mov
outsl
ja
pop
add
mov
add
and
cmpl
imul
cld
test
cmpsb
add
xchg
jbe
and
xchg
rol
out
inc
mov
inc
inc
movsl
movsl
dec
lret
fbstp
ror
xchg
xchg
lds
popf
pop
stc
icebp
rolb
je
dec
or
add
pop
repnz
daa
adc
cmp
popa
out
dec
xor
dec
outsl
mov
lcall
je
popa
movsl
pop
les
sbb
cmp
lods
test
mov
inc
xchg
outsb
ja
xchg
inc
bound
cld
jmp
test
int3
push
pusha
in
adc
mov
popf
std
mov
loop
dec
out
daa
mov
daa
imul
fs
fwait
dec
sub
sbb
call
dec
inc
jne
int3
pop
push
bound
shl
ja
daa
adc
iret
sub
loopne
xchg
add
mov
cmp
clc
push
pushf
mov
int
push
sbb
xor
mov
orb
jbe
pop
adc
insl
mov
pop
imul
cmp
js
je
cld
out
faddp
add
das
iret
inc
mov
xor
lea
push
adc
sbb
jnp
ret
push
shlb
mov
pop
xchg
cmp
mov
insl
lock
sub
shlb
std
cmp
in
lea
dec
push
jge
mov
push
mov
jmp
subl
push
sub
je
fcomp
pop
pop
pop
rcrl
sub
cmpsb
mov
push
xchg
imul
clc
mov
loop
fwait
push
sub
xchg
test
mov
aad
hlt
mov
add
into
adc
sub
cli
jns
mov
dec
push
das
add
icebp
mov
mov
mov
add
outsl
loop
incb
insb
sbb
popa
jb
jl
and
ljmp
and
cmp
sub
jo
inc
push
mov
add
mov
push
addr16
lock
dec
xchg
inc
pop
fwait
xchg
mov
in
dec
movsb
pop
and
pop
push
push
ficompl
imul
popl
sbb
cmp
or
sub
nop
mov
xor
mov
cmc
cmc
lods
pop
test
xor
push
adc
sahf
xchg
shlb
adc
std
jns
sahf
jns
sbb
aas
loope
in
mov
jb
lds
stos
push
enter
loope
cld
adc
into
jne
test
test
ja
roll
call
clts
push
mov
mulb
js
mov
ret
xchg
lret
mov
lret
cmp
in
sub
enter
lcall
int
mov
adc
sub
jb
and
xor
je
push
adc
mov
and
add
aas
dec
loop
imul
iret
xor
ret
mov
aaa
mov
movsb
inc
xor
insb
xor
fdivrl
inc
xorb
pop
out
fistpll
inc
sbb
mov
pop
lret
out
mov
clc
out
pop
clc
lret
in
lret
call
gs
in
mov
fsubs
bnd
aam
shrb
mov
aas
or
or
xchg
addl
imul
cmp
push
clc
cmp
in
mov
rcl
or
adc
in
test
rcl
xchg
mov
ret
popa
adc
jbe
aas
mov
cmp
push
xchg
mov
scas
mov
dec
adc
mov
cmpb
add
cmp
cmc
out
pushf
pop
mov
adcb
fiaddl
sub
inc
icebp
rol
leave
cwtl
or
pop
mov
mov
adc
cmc
pop
fiadds
mov
xchg
test
insb
hlt
ds
or
jb
shl
xchg
mov
fs
stos
sub
testl
dec
lds
sub
ret
cmp
loope
xor
scas
enter
inc
mov
insb
sbb
mov
dec
mov
fs
movsl
and
je
insl
int
jns
fstps
enter
jno
out
insw
xacquire
fwait
stos
and
scas
dec
shlb
test
add
aaa
loop
inc
rorl
loopne
ds
mov
dec
rcrl
pop
inc
jbe
movsl
fidivl
stc
jp
add
pushf
adcl
push
jl
dec
in
rcll
sub
lcall
adc
negb
and
or
xor
lods
cltd
mov
outsb
fsubrl
pop
and
push
jecxz
push
loope
pop
int
clc
sahf
lods
es
bound
loope
stos
lahf
outsl
in
in
imul
xor
dec
sub
push
mov
mov
or
pop
pusha
sti
xchg
xchg
jo
sub
fcmovne
scas
int3
mov
stos
lds
inc
addr16
mov
lods
test
sbb
popf
and
in
dec
adc
add
mov
inc
cmp
insb
and
dec
and
inc
stc
cld
push
pusha
adc
cmp
leave
xchg
jo
ret
mov
bswap
adc
ret
sbb
into
scas
mov
add
clc
xchg
mov
in
test
int3
pop
pop
clc
nop
xchg
pop
pop
out
subb
sarb
loop
push
mov
inc
fsubl
ficomps
aad
mov
daa
movsl
sahf
pop
mov
ret
divl
enter
push
js
pop
test
adc
andl
and
pop
popf
or
push
movsb
xchg
addr16
insb
js
mov
and
movsl
test
nop
inc
or
mov
ds
and
inc
sub
mov
shl
mov
xchg
test
pop
mov
xchg
scas
call
lods
ret
xchg
xchg
sub
testl
and
cmp
add
sub
out
stos
fimull
push
daa
jae
pop
jge
out
or
push
fisttpl
js
mov
dec
aam
lods
mov
cmp
movsb
push
ja
jbe
xchg
pop
cltd
adc
into
lahf
jae
jo
sbb
roll
sub
aas
sahf
inc
movsb
mov
enter
incb
cld
sub
mov
inc
pop
fwait
aad
je
lds
es
mov
mov
lret
data16
xchg
insb
push
add
js
jb
fwait
lods
into
mov
dec
pushf
fdivrl
mov
or
sub
adc
in
test
jno
lahf
sub
inc
pop
aas
sub
and
add
adc
loopne
gs
in
cmp
inc
add
jmp
inc
outsb
jecxz
push
jbe
inc
iret
bound
mov
cmpsb
jo
dec
lock
popf
aad
cmp
rolb
inc
push
mov
lods
dec
fdivrs
mov
xchg
fnstcw
cld
cmp
in
jmp
daa
pop
in
inc
mov
or
xchg
cmpsl
lds
mov
lods
out
cmpl
cmp
adc
sbb
pop
out
into
scas
int
test
sbb
dec
and
cmp
mov
in
jle
mov
nop
mov
arpl
pushf
roll
jae
sar
sti
mov
sti
inc
outsb
and
hlt
loop
pusha
sub
pop
enter
int3
cmp
icebp
mov
imul
adc
xor
or
sbb
pop
or
push
mov
cmp
sti
cli
xchg
loop
and
out
pop
xchg
push
cmp
push
pop
scas
inc
cmpl
nop
lock
rolb
hlt
pop
xchg
mov
cmp
cltd
fsubl
add
mov
and
jno
jmp
push
andl
in
push
cmc
push
mov
lret
inc
je
push
xchg
cmp
push
nop
mov
mov
push
inc
mov
inc
cmp
enter
out
fs
xlat
call
adc
sub
ja
xchg
sub
adc
hlt
cltd
mov
jmpw
or
sub
add
pusha
push
aaa
loopne
daa
icebp
xchg
add
lods
adc
push
nop
cmp
insl
mov
loop
in
xor
test
ficompl
mov
out
jo
cmp
bound
cmp
xchg
push
sbb
jp
xchg
cmpsb
loopne
fnstcw
in
pushf
xchg
sbb
push
lret
pop
mov
std
cmpsl
adc
std
dec
pop
push
fldcw
push
sbb
outsb
inc
dec
call
pop
dec
xor
das
add
out
sub
nop
cmp
xchg
outsb
faddp
inc
and
out
xorb
mov
add
loop
je
ja
sarl
inc
cmp
push
dec
adc
push
mov
xor
jae
sbbl
je
push
pop
popf
or
mov
fstpl
adc
mov
jo
pop
daa
aaa
sbb
adc
push
lock
das
mov
imul
or
adc
jno
add
scas
out
xchg
lods
xor
mov
sub
stos
lfence
mov
push
aaa
mov
jnp
mov
test
leave
mov
cmp
inc
daa
inc
jno
push
int3
inc
pop
push
mull
sbb
xor
cmp
xor
xor
mov
push
xchg
sbb
dec
add
pop
fisubrl
adc
mov
mov
out
and
divl
call
push
add
add
sbb
adc
data16
jle
aaa
mov
pop
xchg
xchg
in
mov
fs
enter
ss
bound
mov
xchg
dec
and
sub
movlps
jb
jbe
iret
mov
jo
xorb
enter
cmp
loopne
inc
pop
jmp
xchg
sbb
dec
mov
xchg
add
lock
pop
mov
pop
cs
mov
inc
mov
aam
fldt
aas
ljmp
cmp
lahf
mov
lcall
sbb
cs
outsl
movsb
fidivs
mov
insl
das
btc
add
or
jnp
push
lret
or
repz
ja
push
int
mov
push
popa
push
xor
outsl
iret
jmp
push
nop
andb
xchg
roll
movsb
push
popa
out
in
aas
cmp
mov
fadd
inc
loope
dec
xor
push
dec
test
pop
xor
ret
pop
jo
out
jb
xlat
stos
mov
cmp
xlat
jo
scas
mov
ret
sbb
push
stos
lods
mov
pusha
push
lcall
ret
testb
jl
adc
adc
call
jge
cmp
sbb
lea
outsb
scas
les
pushl
or
shrl
adc
inc
inc
les
pusha
adc
hlt
lcall
and
jmp
mov
mov
add
std
gs
mov
fadds
fneni(8087
jecxz
popf
pushf
jb
ljmp
imul
shl
mov
hlt
lea
and
xlat
mov
mov
fs
push
or
ljmp
push
ljmp
fistl
push
or
lods
addr16
add
and
mov
and
push
mov
shl
cmc
addr16
push
hlt
in
and
add
fnstcw
push
outsl
nop
fs
popf
cli
nop
jo
xor
add
sub
aam
mov
call
dec
mov
add
aas
ret
mov
pop
xchg
or
decb
jb
in
shrl
add
push
xchg
movsl
nop
iret
ds
push
sub
dec
jmp
pop
stos
xor
cs
jne
test
cmpsl
loope
dec
xchg
or
pusha
push
popf
aas
jle
lods
xchg
jns
dec
mov
xchg
popf
xchg
outsb
and
jne
xor
cld
or
fsubr
jge
cld
cmp
fstl
mov
sbb
sub
push
addr16
mov
sarb
mov
xor
gs
test
mov
mov
lcall
sbb
adc
loop
mov
adc
jge
xchg
shll
dec
sub
cld
shlb
out
aam
fsts
mov
aas
push
shrb
mov
push
jmp
xchg
mov
sub
mov
out
incb
sahf
jge
push
cli
cmp
jne
or
aam
fildll
cli
ds
sahf
fmul
push
sub
inc
in
je
mov
test
popa
or
dec
movsl
mov
and
in
xor
xchg
dec
ret
lock
dec
xor
loope
and
mov
inc
shll
lods
loope
or
pop
xchg
in
add
into
dec
bound
pop
mov
adc
and
jle
cmp
dec
rcr
push
inc
fnsave
enter
inc
shlb
cmp
mov
mov
or
nop
add
and
imul
and
add
mov
ret
xor
outsl
inc
xchg
cmp
mov
push
add
or
and
fs
or
push
add
fbld
lds
sub
pop
pop
jne
xor
fidivl
xchg
add
pop
insl
xchg
loopne
adc
lds
ficomps
jne
mov
inc
jae
jns
push
pop
into
mov
adc
mov
stos
mov
int3
das
stos
pop
sub
test
pop
iret
xor
cmp
aas
push
mov
in
lcall
negl
comiss
sub
loop
pop
test
loope
test
cmp
in
ss
fcoms
push
aad
cmp
sbb
ss
add
out
and
mov
sti
cltd
cwtl
mov
adc
pop
lds
pop
and
andl
or
arpl
sbb
sub
iret
shll
push
sarb
pop
aas
and
int
sub
jb
inc
pop
jg
sbb
outsl
psllq
xchg
aad
popf
shrb
dec
inc
outsb
fmull
add
jle
and
mov
out
popa
mov
nop
insb
xchg
push
out
xchg
mov
adc
loopne
enter
cli
and
leave
int3
cli
sbb
push
test
mov
add
imul
dec
xor
xor
idivb
inc
and
repnz
sti
mov
inc
push
mov
les
hlt
jae
insb
mov
adc
mov
icebp
mov
jb
testl
adc
push
push
shl
ret
xor
add
imul
jge
aam
cmc
dec
pop
ljmp
stc
divl
pop
and
inc
push
outsb
or
jmp
cmpsb
test
in
sbbb
inc
adc
adc
xor
pushf
aad
mov
push
movsb
iret
movsb
mov
jne
ret
xor
or
nop
lds
lods
cmp
test
push
inc
push
ljmp
dec
lock
xor
inc
enter
fcmovne
clc
repnz
inc
fwait
xlat
pop
sbb
push
outsb
js
fsubr
int
cltd
pop
cmp
movsl
jg
pusha
jle
ljmp
ud2
clc
daa
and
repnz
in
imul
in
or
xchg
fisubrl
repz
pop
dec
add
rcrl
and
add
aam
popf
in
or
loop
in
int
xchg
aaa
adc
lret
push
inc
int3
dec
inc
sbb
xor
imul
loopne
push
push
insb
jb
or
jg
pop
cmpsb
adc
add
je
cmp
lcall
jl
fcmovne
adc
adc
mov
sbb
mov
pmullw
sbb
repnz
cmp
lods
pop
xchg
ss
repnz
call
scas
mov
and
rolb
mov
js
es
stos
int
seta
lock
aaa
add
je
push
pop
pop
sbb
xchg
inc
cmp
imul
pop
inc
sub
jge
aam
fmul
mov
bound
sti
xor
mov
mov
mov
or
mov
mov
jle
push
dec
sbb
jecxz
in
in
lcall
es
int3
fwait
adc
js
ss
add
jl
add
mov
jmp
add
jg
shlb
std
xchg
xchg
fcoms
das
mov
xlat
mov
cmpsl
add
iret
lods
push
pushf
insl
adc
sub
sub
sbb
pop
into
sbb
adc
add
andl
jecxz
xor
push
add
fnstenv
dec
push
int3
ja
mov
dec
into
maxps
xlat
mov
fsubrl
ja
fidivs
sbb
dec
mov
mov
test
punpckhbw
jae
adc
test
fdivp
pop
mov
outsl
push
cld
pop
pop
popf
fdivs
sti
sahf
cltd
adc
jp
jb
mov
push
std
mov
je
lods
add
mov
imul
sub
imul
jmp
xor
inc
daa
sahf
scas
stos
in
fstpl
xor
ja
mov
cli
jne
push
gs
and
xor
jne
xchg
mov
jns
push
shll
xchg
stc
xchg
call
pop
dec
ret
psllw
test
xchg
cmpsl
nop
xchg
into
mov
cmp
addr16
rcrl
mov
cwtl
adc
sub
mov
fwait
int
fsubrs
inc
movsl
sbb
pop
adc
mov
fs
cmp
out
in
mov
push
fdivrs
mov
or
fmuls
pop
dec
push
mov
add
xor
in
xchg
jno
mov
ja
adc
lods
cmc
xchg
and
test
pop
dec
xor
add
xor
mov
movsb
xchg
add
mov
loope
lahf
cmp
sbb
ja
dec
mov
adcl
test
dec
push
mov
inc
cmp
xchg
ljmp
test
xchg
movsl
into
push
stos
or
xor
jmp
add
repz
out
fisubl
notl
aam
dec
incb
data16
lret
sbb
inc
fwait
inc
aaa
push
dec
pop
cmp
jle
adc
cs
dec
fmuls
stos
sub
dec
jno
lcall
push
mov
clc
or
hlt
jnp
push
repz
cmp
mov
out
ljmp
imul
jle
jb
and
dec
das
dec
pop
sbb
adcb
and
jge
adcl
scas
in
xor
roll
scas
sub
or
mov
pop
mov
insb
loop
pop
test
jmp
fsubrl
movsb
xchg
adc
sbb
mov
push
hlt
out
xchg
test
ljmp
inc
scas
mov
mov
mov
push
fisubrs
fcmovbe
cmpsl
ljmp
push
mov
sub
shll
scas
xor
and
loop
sahf
sbb
pop
call
mov
mov
cmpsb
ss
cld
clc
mov
jg
ja
ja
cmpsb
arpl
and
push
sti
sub
bound
mov
pusha
push
xchg
mov
pop
mov
das
and
inc
jb
aam
imul
stc
mov
lea
cltd
mov
cmp
in
in
out
shrl
dec
addr16
pop
push
je
sti
enter
jnp
sbb
loope
push
dec
mov
pop
gs
and
enter
add
cmp
and
sub
mov
lahf
arpl
or
sbb
mov
mov
test
and
jmp
mov
insb
xchg
push
cmp
cmc
jns
cs
xchg
scas
dec
in
xor
dec
push
inc
orl
subb
es
in
xchg
adc
scas
and
jbe
mov
mov
aaa
loopne
scas
xlat
cwtl
inc
pusha
movsb
jb
inc
ljmp
mov
add
mov
xchg
push
repnz
jg
and
arpl
pop
int3
ds
or
notb
jae
jo
sub
int3
les
cmpsl
jg
shlb
jb
and
fnstsw
dec
sbb
scas
push
movsb
or
xchg
xor
or
sub
jmp
mov
ss
mov
mov
dec
inc
ljmp
das
std
fs
movsb
les
sbb
cmpsl
popf
stos
cmp
pop
nop
roll
xchg
or
mov
orl
push
mov
mov
loopne
xor
jl
repz
test
dec
jno
jns
inc
pop
xchg
dec
je
push
inc
sub
and
cmp
ljmp
int
push
testl
inc
std
dec
push
pcmpeqd
out
cli
adc
enter
lods
mov
or
mov
xlat
xor
in
adc
jmp
sub
dec
fbld
mov
lret
or
cwtl
dec
mov
mov
stc
ret
test
stos
or
sub
sbb
stc
movsl
adc
bound
or
test
adc
push
lods
push
fsubrl
adc
bound
out
cs
xchg
or
test
xchg
inc
mov
dec
lock
pop
sbb
jl
in
mov
iret
push
rcrb
pop
icebp
fwait
and
shlb
mov
adc
mov
dec
push
mov
leave
test
jg
jle
jg
mov
lock
out
mov
cmc
test
stc
cvtdq2ps
stos
enter
jne
leave
add
mov
into
leave
adc
cmpsl
call
mov
cltd
xor
scas
in
cmpsl
test
push
daa
aas
btc
fisubs
in
inc
jge
adc
push
and
adc
fmull
push
xchg
mov
fstp
cwtl
sahf
inc
pop
lret
sbb
dec
jl
ljmp
mov
cmp
push
nop
mov
mov
je
ss
cmpsl
movsl
push
pop
fimuls
mov
push
in
ljmp
addr16
or
mov
and
or
push
xchg
mov
pushf
inc
imul
shrl
sti
sbb
xor
jmp
and
pop
jg
adc
mov
dec
push
mov
in
loope
jmp
pop
pop
mov
lods
mov
cmp
push
xor
repnz
or
adc
push
lahf
mov
mov
fisttpl
sbb
or
fsubrs
enter
andl
xchg
dec
cld
xchg
ret
notb
adc
cmp
shrb
jecxz
adc
dec
insl
pushf
fstl
cld
es
xlat
jecxz
mov
bound
xchg
sbb
xor
pop
push
test
or
cmp
dec
enter
je
pop
jbe
add
add
and
mov
jg
loop
fdiv
mov
pusha
and
insl
negl
ja
and
dec
mov
push
xchg
jp
add
lahf
mov
inc
mov
and
cmc
cmp
pop
lds
or
sub
test
or
mov
nop
mov
in
pop
pop
es
in
or
dec
int
jbe
movsl
or
out
inc
cmpsl
mov
inc
icebp
pop
das
mov
mov
cmp
mov
cmp
push
sarl
push
clc
ljmp
pop
cmp
pop
fisubs
clc
ja
xchg
jne
out
xchg
repnz
xlat
imul
jae
popa
sahf
popf
movsb
out
sbb
dec
mov
sub
push
test
mov
in
sahf
add
and
rorl
in
js
mov
and
add
add
add
dec
es
mov
add
xor
mov
insb
cmp
fcomip
into
shrb
shlb
daa
cmpsl
rcrl
outsb
mov
scas
jno
pop
dec
incl
rol
jo
cmpsl
and
lret
dec
sbb
xchg
fdivrp
out
jl
dec
add
lock
bound
lock
lds
xor
mov
or
ret
push
or
loopne
int3
sub
cwtl
push
cmp
lock
mov
movsb
add
loop
aas
cmpsb
sbb
ja
stos
and
out
push
jae
in
jno
jp
rcll
mov
ss
nop
lock
ljmp
dec
enter
mov
adc
divb
test
ja
xchg
sub
adc
pop
xchg
sahf
hlt
movsb
xchg
sarl
into
cmpsl
loop
lcall
xor
pushf
xchg
inc
cmp
jae
jns
push
lret
pushf
push
jmp
mov
arpl
jge
in
aam
cli
mov
pusha
or
push
push
fincstp
jl
cltd
mov
mov
pop
ret
pusha
or
mov
out
aas
cli
rorl
sub
int3
sar
icebp
stos
iret
cmp
rcrl
addr16
inc
jmp
mov
cld
cmp
jne
push
mov
xchg
push
ljmp
or
and
push
inc
adc
sub
push
mov
cmc
or
and
mov
icebp
and
shlb
gs
pop
mov
movsl
imul
pop
loopne
orl
adc
cmpsl
dec
cmpl
data16
mov
jne
cmp
loope
sbb
rol
dec
mov
fwait
mov
mov
mov
clc
outsl
mov
cwtl
or
inc
cmpl
scas
cmc
pop
jg
loopne
push
jmp
sub
cmpsb
push
pop
xchg
negl
cmp
pop
mov
iret
shrl
aam
add
xchg
insb
pop
idivb
mov
push
ret
daa
mov
sbb
outsl
movsl
lahf
ret
push
sub
xchg
xchg
pop
popf
clc
sub
cmp
hlt
pop
jl
lock
pop
pop
or
repz
jle
mov
sub
pushf
mov
sbb
mov
jne
out
sahf
ljmp
mov
mulb
cmpb
push
mov
fisubl
jns
cmp
scas
xchg
cltd
ret
movsl
movsl
mov
mov
xchg
sub
js
movsl
cli
cs
rorl
mov
loope
mov
cli
nop
or
inc
ljmp
xchg
or
xchg
lea
in
loopne
mov
out
or
int
xchg
inc
xor
mov
inc
xor
push
xlat
and
and
outsl
pop
cwtl
icebp
js
repz
dec
loope
cli
loop
iret
stos
negl
cwtl
mov
adc
mov
fisubrs
in
inc
bound
jmp
push
sub
aad
int3
add
sbb
cmpsl
mov
push
sub
sub
out
pop
xchg
sub
mov
or
and
cmp
lahf
shll
and
call
fldcw
push
jae
cwtl
iret
lcall
test
inc
repz
in
outsb
mov
and
sub
lahf
fstl
xchg
in
add
jae
push
fcmovnb
ret
loope
cmpsb
xchg
dec
or
mov
repnz
cltd
xor
fldenv
push
cwtl
mov
xor
addr16
push
aas
clc
ljmp
subl
pusha
mov
or
mov
cmp
sbb
lods
push
pop
mov
xor
mov
divb
out
ljmp
nop
rcrb
jnp
push
push
inc
stc
andb
xchg
mov
push
jae
fsubrs
inc
cmp
jae
cmp
fistps
aad
lcall
add
xor
cmp
cmp
mov
push
in
pushf
scas
aad
dec
push
inc
addr16
ds
les
xlat
enter
enter
dec
aaa
push
nop
sbb
mov
xor
push
outsl
out
sbb
test
jl
mov
rcll
mov
mov
ds
in
icebp
push
push
and
out
cwtl
loopne
sahf
pop
jge
scas
cs
fidivs
push
lcall
cmp
or
int3
mov
mov
push
loope
or
cld
xor
xor
jo
outsb
mov
mov
pushf
pop
out
sub
add
xor
sbb
dec
scas
ss
and
sti
cwtl
movsl
adc
cmpb
test
sbb
jae
repz
ret
call
iret
lret
push
movsb
push
cmp
clc
mov
jno
enter
xor
mov
sbb
sub
lds
lods
sbb
inc
inc
dec
mov
and
test
mov
jno
jl
mov
shll
les
inc
jmp
movsl
inc
add
hlt
push
mov
scas
popa
ja
jecxz
inc
movsl
and
jns
sbb
push
push
push
in
xchg
out
cwtl
push
popa
inc
nop
sahf
xlat
popf
arpl
cmpsb
jnp
xchg
imul
cmpsl
outsb
aam
leave
mov
or
push
dec
repz
mov
jle
or
and
mov
add
cmc
int
cmpsl
jnp
mov
int
xchg
cmp
inc
pop
mov
jno
sub
mull
push
xchg
jecxz
dec
je
fcompl
bound
sub
lret
out
lods
xchg
mov
imul
int3
ret
inc
push
cmp
and
mov
cli
rcrl
hlt
dec
push
or
jnp
pop
sbb
sahf
sub
int
fstps
ljmp
push
dec
call
add
mull
jmp
adc
xchg
jmp
test
movsb
mov
movsb
dec
jns
dec
dec
pop
or
stos
fidivrl
mov
push
inc
adc
xlat
sub
mov
insl
add
or
jo
cmp
cli
leave
add
mov
cmovno
loope
and
cmc
push
shrl
dec
rcrb
cmp
lret
push
jne
ret
mov
inc
rorl
mov
fistps
push
addr16
movsb
pop
outsl
mov
push
cmp
adc
push
inc
lods
clc
push
pop
ss
or
mov
leave
pop
lahf
ss
xchg
mov
inc
push
testw
cli
cmc
and
das
test
inc
mov
pop
fcoms
fs
jmp
pop
adc
pop
adc
inc
gs
in
lret
xor
xchg
inc
dec
out
in
adc
jns
insl
loopne
inc
sahf
mov
mov
mov
and
jns
adc
flds
push
cs
add
mov
pop
sub
mov
cmp
push
mov
icebp
push
add
in
mov
in
loope
cld
insb
dec
addr16
push
fsubr
inc
lods
faddp
push
xor
mov
leave
scas
cmpsb
and
pop
ja
cwtl
cmp
notl
sti
out
stc
dec
sahf
lds
mov
out
es
out
add
dec
push
add
ss
jle
push
and
push
jmp
dec
insb
test
and
push
push
aas
stc
xor
mov
xor
int
xor
insb
xor
xor
xor
movsb
lds
jmp
sbb
xor
jecxz
mov
aad
jno
mov
loop
cmp
pop
mov
std
jg
ja
xrelease
arpl
pop
dec
cmp
lock
stos
mov
push
push
leave
repz
imul
test
mov
mov
xor
cltd
stc
sub
and
shrl
lock
scas
mov
push
stos
std
cltd
cmp
xor
adc
cld
sub
fstpl
stos
mov
xor
cmc
xchg
outsl
xor
test
inc
test
add
stc
rorb
mov
es
out
push
xor
pop
cmpsl
fdivs
and
cmp
mov
sar
mov
cld
push
scas
add
bound
lret
push
jne
sub
test
push
inc
jb
cmp
stos
in
push
shlb
ds
xor
jno
pushf
daa
test
cltd
jnp
adc
mov
cmp
insb
lahf
xchg
push
sbb
addr16
jmp
or
cmpl
add
xchg
sti
out
xchg
imulb
jl
add
repnz
and
push
in
cmp
je
insb
jp
adc
lods
addr16
push
leave
in
mov
mov
dec
repnz
and
jl
ds
iret
dec
fcmovnu
scas
aaa
aam
xor
les
subb
aam
jne
mov
and
cs
pop
insb
xor
stos
adc
and
cld
or
xor
fwait
and
jb
push
jge
mov
mov
inc
lahf
xchg
movsb
add
xor
jecxz
repz
enter
dec
call
and
xchg
imul
pop
jmp
es
add
js
shll
add
sub
cmc
dec
inc
jmp
in
or
push
adc
pop
mov
shrl
dec
pop
or
data16
ja
fdivs
sub
cmc
dec
in
fidivl
jecxz
add
lret
xchg
pop
test
mov
scas
pop
cmp
push
mov
add
pop
les
push
std
xorb
jns
xor
xor
fucom
xchg
popa
cltd
outsb
ret
xchg
inc
push
rcll
jne
and
adc
clc
sub
es
mov
jp
xchg
call
push
xor
mov
sub
sbb
fistpl
pop
cmpsb
mov
outsl
push
ficompl
in
xchg
and
test
push
xchg
xchg
test
imul
fldl
movsl
mov
inc
imulb
adc
popa
push
jecxz
mov
repnz
pop
dec
push
push
aam
cltd
fsts
pop
adc
xor
mov
loope
aaa
sub
inc
pop
popf
sub
mov
sub
lret
pop
fnstenv
lods
adc
cmp
test
mov
adc
xchg
push
mov
push
sbb
dec
inc
pop
lcall
adc
xor
test
fwait
mov
sbb
xchg
lock
out
in
mov
lods
cmpsl
outsl
push
jle
repnz
and
jno
xor
fwait
mov
imul
sbb
push
xor
dec
out
bound
pop
leave
rorb
push
lods
add
sahf
mov
and
sahf
pop
sahf
fldl
scas
pop
mov
int3
in
and
xchg
mov
mov
lret
in
jmp
mov
mov
faddp
mov
inc
popf
in
fs
jmp
cmp
bound
cmp
mov
xchg
pop
out
mov
repz
shrl
inc
fcmove
daa
push
adc
sub
add
popf
jg
adc
jmp
je
inc
aas
nop
cmp
push
inc
inc
popa
push
icebp
test
out
adc
or
ret
movsl
adc
fidivl
popl
sbb
in
push
dec
mov
jbe
popf
sahf
jle
popa
clc
cmc
cmpsl
sub
das
incl
dec
inc
clc
xchg
cmp
sahf
adc
das
dec
imul
lods
cli
xor
dec
int3
stc
add
xchg
jg
push
subl
repz
pop
inc
test
mov
and
push
jns
jl
les
mov
loop
sub
mov
mov
loope
push
lret
mov
call
and
sub
jl
pop
mov
cmp
dec
jbe
shrl
outsb
push
inc
sbb
push
scas
daa
mov
xchg
loope
or
addr16
push
and
ficompl
mov
pop
dec
push
mov
xlat
and
in
stos
sub
adc
jo
loope
mov
fiadds
aam
aaa
gs
stos
add
xlat
lahf
cmp
jno
lds
mov
adc
aaa
leave
cmp
adc
xor
mov
and
or
rcr
loopne
jge
mov
add
push
sub
jle
cltd
push
out
adc
fs
xchg
mov
push
adc
lods
jecxz
add
push
cmpsl
aas
push
pop
arpl
stc
cmpsb
xchg
outsl
and
roll
push
pop
xchg
lcall
xor
arpl
ss
repnz
popf
inc
and
scas
xchg
push
sti
sub
inc
addr16
dec
ret
lahf
mov
orb
int
mov
jg
xor
fisubs
roll
stc
add
aam
hlt
mov
rcr
outsb
pop
cmp
pop
pop
std
popa
es
pop
das
add
pop
stc
xlat
int3
xor
andl
insl
jb
push
out
int
cmpsb
xor
js
push
mov
add
gs
push
xchg
dec
mov
fs
fadds
cwtl
push
push
add
mov
adc
les
sbb
mov
xchg
imul
xor
loopne
cmpsb
push
pop
cmp
int3
ljmp
pusha
or
cwtl
popa
mov
scas
sub
loope
pop
mov
pusha
xchg
pop
push
repnz
and
scas
outsl
lds
sbb
mov
dec
xchg
sbb
shrb
sti
in
in
iret
adc
ljmp
ljmp
add
cltd
cld
add
xchg
repz
xor
les
leave
mov
push
lea
jns
sub
mov
pop
movsl
push
out
movsl
ljmp
and
adc
jne
aas
or
das
aas
jae
xchg
les
adc
les
jne
adc
cwtl
pusha
sub
jae
cmp
shrd
mov
dec
cmp
sbb
xchg
sbb
popa
cli
mov
cltd
stc
sbb
inc
pop
inc
jno
mov
xor
push
movsl
xlat
jbe
popa
call
lretw
aaa
cld
mov
cmp
push
mov
int3
fistps
ret
bound
mov
mov
dec
es
adc
aad
push
mov
pop
push
outsl
in
xor
fstl
add
dec
xor
ret
es
pop
rcll
int
xchg
fildll
call
xlat
stos
or
lcall
add
stc
mov
xchg
sbb
addr16
ss
movsl
out
int
xchg
mov
lds
jmp
addr16
jecxz
repnz
aas
testl
mov
ret
cmc
rorb
xchg
pop
divb
mov
jnp
xor
lock
mov
mov
addr16
mov
lcall
test
outsl
ds
fs
mov
add
jg
fucomip
adcb
aaa
or
mov
inc
dec
sub
sbb
fbld
stos
lret
rorl
in
lods
fcmovne
bound
add
add
sbbl
sbb
mov
bswap
movsl
sbb
loope
je
pop
sub
stos
ja
outsb
aam
arpl
xchg
nop
jp
dec
pop
inc
jmp
xchg
lret
mov
adc
mov
out
mov
add
ja
inc
jge
mov
jns
jl
sbb
xor
rcrl
cmpl
pop
xchg
loopne
cmp
jp
movsb
and
mov
mov
lahf
adc
iret
push
leave
cwtl
fsub
jae,pt
ja
test
lods
xchg
pop
shl
test
cmp
cli
movsl
push
and
js
and
cmpsl
mov
add
testl
and
sbb
int
inc
subl
pop
xor
xchg
push
xchg
or
jns
sahf
jae
mov
cmpsl
fsubs
xchg
shll
int
push
adc
xchg
inc
arpl
nop
out
lcall
je
jp
shlb
and
out
jge
cs
jno
jns
xchg
pop
imul
adc
adcl
fxch
sbb
popa
add
mov
arpl
cmpb
adc
mov
fidivrl
mov
add
daa
xchg
fcomp
leave
sbb
lods
xchg
lods
test
push
cltd
xchg
int3
push
js
sahf
cltd
pusha
aam
sahf
movsl
sub
jb
jp
inc
test
aam
add
test
cmpsl
cmp
pop
dec
and
add
int
push
mov
mov
xor
cltd
mov
xchg
dec
mov
fmull
out
adc
mov
out
or
movsb
cwtl
pop
pop
in
insb
mov
pop
mov
pop
and
repnz
les
call
push
addr16
fimuls
push
xchg
insl
cmp
push
adc
mov
in
jae
fwait
mov
or
cmp
clc
lock
inc
or
mov
cli
aaa
insl
xchg
mov
mov
sub
xor
pushf
or
insb
test
jae
rclb
jnp
inc
jo
pop
sbb
test
dec
test
cmc
lahf
jge
xor
loope
mov
popa
jb
jb
testb
and
hlt
and
test
add
lcall
fsubr
pop
mov
sti
add
insl
ret
sbb
mov
or
xor
sub
dec
jb
push
ds
ljmp
inc
or
loop
ficoml
test
mov
sub
xchg
add
xlat
mov
dec
fadds
nop
test
sbb
in
movl
enter
repz
sub
repz
out
bnd
cld
jne
sub
sbb
outsl
daa
sbb
mov
xlat
add
add
xchg
lds
pop
cmpl
pop
sbb
insl
in
sbb
push
shr
add
pop
jle
push
xchg
cld
xchg
daa
jae
lock
pop
push
cmpsb
adc
jp
xor
stos
xor
sub
js
notl
cltd
jb
arpl
cmp
lahf
xchg
mov
and
sbb
pop
xchg
popf
pop
loop
mov
xor
imul
rorl
xchg
fs
mov
xor
jnp
mov
cs
add
adcl
fldenv
call
jb
dec
inc
test
cmpsl
mov
jbe
lea
pushf
clc
mov
mov
es
inc
es
nop
sbb
inc
push
dec
sahf
sub
xchg
inc
ds
dec
pop
pop
sbb
mov
jecxz
aam
mov
jno
adc
xor
inc
sahf
ja
es
lret
enter
fdivr
add
scas
clc
divl
pop
das
add
out
std
add
mov
aas
insl
icebp
xchg
cltd
push
push
ret
nop
cmpsb
cmp
dec
sbb
jbe
loopne
add
mov
cmpsl
mov
inc
sti
pop
inc
test
repnz
add
pop
cmp
xor
sub
or
outsb
pop
dec
jmp
std
icebp
cwtl
dec
dec
pop
scas
cmc
cmpsl
cmpl
popf
dec
enter
xchg
aaa
cmp
shr
mov
les
imul
pusha
mov
subb
jge
fildll
lret
dec
hlt
shrb
je
data16
shr
filds
roll
and
cmp
aam
test
push
imul
jmp
push
in
mov
xchg
mov
in
cwtl
jno
dec
nop
das
push
push
int3
push
mull
xchg
gs
int3
dec
mov
mov
xchg
inc
sbb
and
das
push
jo
test
sub
call
popf
jge
gs
jnp
jne
dec
int3
jmp
fwait
jo
enter
test
sarb
jno
test
pop
push
pop
xchg
aaa
rolb
repz
dec
mov
mov
dec
mov
mov
mov
iret
ljmp
add
inc
repz
add
shlb
dec
mov
push
jp
dec
push
lods
nopl
stos
cwtl
and
and
mov
fnstsw
xor
pop
gs
imul
sbb
stos
fdivr
jno
out
inc
sub
cmpsl
pop
stos
cltd
and
xor
jo
pop
out
das
mov
loopne
cwtl
and
lea
stc
mov
pminsw
daa
xor
mov
pushf
aaa
adc
add
in
lret
push
jnp
mov
aad
jge
inc
fwait
in
sub
mov
imul
jns
sub
lds
mov
or
sysenter
mov
and
insb
sbb
push
bound
pop
fidivl
xor
jmp
dec
pop
popa
pop
pop
loopne
mov
stos
add
outsb
into
sti
cmp
mov
int3
movsb
push
in
adc
test
sbbl
xchg
cltd
push
adc
popf
push
dec
jecxz
icebp
mov
jmp
shl
or
out
sub
movsl
add
push
test
xor
fcoml
outsl
pusha
pop
inc
or
jl
test
add
test
xor
xchg
pop
lea
mov
sub
adc
mov
clc
and
xor
addr16
lret
sub
cmp
aad
sbb
fstps
inc
jl
xorb
and
cmp
fisubrs
push
adc
sarl
add
jge
stos
shl
push
or
mov
outsb
mov
div
fdivs
pop
test
out
xchg
mov
fs
adc
jle
stos
dec
xchg
mov
and
mov
jg
cmp
fstpt
mov
jmp
mov
data16
hlt
push
mov
sub
mov
shll
jmp
mov
cmp
pop
ja
ss
repz
mov
cmpsl
push
fnsave
and
mov
sbb
arpl
mov
dec
fldl
test
mov
pop
cmp
jecxz
int3
sbb
iret
cli
push
cwtl
movsl
ds
xlat
jecxz
jge
dec
loope
les
sbb
loope
xor
and
mov
cli
jle
addl
cmpsb
arpl
and
pop
mov
lods
je
xchg
test
add
fnstenv
add
jl
sub
xchg
add
cld
fildl
test
enter
inc
pop
cmp
or
mov
jecxz
int
sbbb
sahf
dec
mov
mull
sbb
out
or
mov
in
jp
inc
xor
xor
ffree
push
jp
repz
push
shlb
jecxz
sub
xor
pop
push
repnz
loopne
aas
aas
repz
inc
mov
orl
mov
adcb
jne
push
loope
jl
nop
push
mov
loope
enter
cmp
adc
mov
addl
adc
sbb
mov
dec
decl
fistpl
out
or
mov
lock
sub
ja
add
aas
adc
rorb
push
mov
xchg
jo
out
jl
jge
mov
mov
xor
scas
lds
cmp
out
and
test
sub
outsl
in
xchg
or
out
nop
bound
xor
sub
arpl
ret
fisubl
cltd
sub
out
out
cwtl
fnstsw
mov
mov
shll
lods
sbb
lret
cmpsb
scas
insl
testb
sbbb
pavgw
ficomps
out
and
ss
pop
mov
add
sbb
mov
lea
call
cmp
es
mov
push
lret
xchg
into
lock
pop
mov
xor
cltd
leave
jne
movsl
jge
cmpsl
xchg
fidivs
in
jge
cwtl
push
xchg
mov
fisubrs
cmp
pop
dec
or
movsl
xor
adc
push
jae
dec
cmpsb
push
daa
sub
cld
addr16
hlt
aas
popa
inc
or
jb
mov
lret
add
movl
gs
add
fcompl
sub
std
lea
lods
push
gs
dec
mov
cmp
jbe
subb
dec
pusha
sbb
adc
mov
lahf
lret
sub
xor
push
sub
scas
aas
mov
mov
mov
enter
cmp
ja
mov
inc
in
cltd
xor
jb
add
out
cmp
mov
pop
mov
ror
or
repz
cli
dec
cmp
xchg
ja
cmpsb
gs
imulb
sbbb
cmpsl
dec
notb
or
enter
gs
call
dec
xchg
and
or
pop
jle
sub
push
lock
cmp
fdivs
or
fildl
jmp
hlt
adc
mov
and
and
mov
fmuls
pop
mov
jbe
test
lea
xchg
jmp
sbb
shll
fwait
ds
lret
adc
dec
sbb
fstl
test
push
push
lret
rol
xor
test
mov
sub
aam
sub
push
test
sub
clc
push
dec
in
mov
lret
inc
mov
imul
jo
mov
loope
sar
cmp
xchg
into
shll
and
rclb
sbb
xchg
repnz
or
std
jge
fldl
pop
mov
imul
out
scas
jmp
xchg
pop
push
into
inc
add
cltd
popa
fistpll
sarb
addr16
repz
mov
subb
inc
sti
inc
lods
sbb
subl
jno
mov
xchg
dec
out
mov
imul
ja
out
iret
fadds
pop
sbb
shrl
push
mov
mov
jmp
jmp
aas
lods
adc
adc
pop
push
shl
scas
inc
jbe
js
je
cmp
mov
icebp
cmc
inc
add
stos
jb
int3
popf
out
adc
repnz
inc
add
int3
ret
adc
and
popa
les
in
clc
cmp
dec
ja
aam
inc
add
mov
adc
movsl
rorb
sbb
ss
cmp
inc
out
in
lds
xor
pop
test
jle
mov
and
mov
dec
dec
add
mov
sbb
lods
bound
insl
mov
inc
mov
push
dec
sbb
and
mov
int3
loopne
outsl
mov
bound
add
dec
adc
pop
and
xorb
adc
outsb
test
add
pop
repz
mov
mov
cs
cli
ret
and
xchg
sti
sub
js
pop
xchg
xchg
ret
into
push
shll
stos
pop
dec
cmp
xor
std
sub
ret
pop
pop
jl
in
icebp
jmp
testb
sbb
daa
in
sbb
jo
sbb
xor
pop
imul
jnp
inc
cli
sbb
cwtl
mov
pop
mov
mov
iret
sbb
int3
xor
pusha
js
montmul
cmpsb
add
test
xor
pop
lock
or
cltd
mov
sub
xor
pushf
sarb
jns
add
or
push
scas
loop,pn
mov
push
es
loope
sbb
test
sbb
out
dec
insb
cwtl
and
jae
xchg
xlat
or
in
jmp
insb
pop
jne
shlb
jecxz
add
loopne
cmp
lcall
mov
mov
fdivrs
loope
jg
sub
mov
out
mov
xor
sbb
adc
sti
fisttps
or
mov
test
mov
inc
mov
js
outsb
leave
cmp
or
movsb
in
add
faddl
mov
add
pushf
aas
icebp
pop
aad
mov
pop
and
or
or
and
jb
cmp
aaa
inc
cmp
xchg
loopne
roll
xchg
push
mov
xor
push
fldenv
and
cmp
rdtsc
jo
xlat
xor
insl
leave
outsb
sahf
jmp
sti
addr16
shlb
cmp
jge
inc
sub
push
pusha
enter
inc
and
cmovno
aaa
pop
jnp
and
fcomps
jmp
sbb
call
dec
cmp
imul
fwait
data16
je
int3
dec
les
stos
sbb
cmp
mov
hlt
clc
stc
and
mov
out
outsl
sahf
cwtl
popa
stos
push
adc
sbb
cltd
fcompl
ret
push
add
mov
leave
pop
mov
add
or
clc
mov
imul
xor
pushf
sbb
add
push
insl
sub
pop
lret
aaa
shl
movsl
add
cs
incb
movsb
js
and
and
xor
enter
jmp
mov
js
sahf
jge
lock
jnp
jmp
shll
xor
aam
adc
xchg
orb
dec
jg
jb
inc
lret
mov
adc
scas
cmc
xchg
cmp
xchg
je
push
cwtl
cwtl
mov
sub
lock
jmp
xor
pusha
mov
xchg
pop
lret
nop
xlat
scas
push
dec
mov
bound
mov
cmp
in
cltd
popa
or
mov
loop
adc
mov
push
hlt
sbb
sbb
ljmp
das
and
xor
mov
jp
mov
shll
cld
jl
mov
mov
mov
dec
test
push
lahf
stos
adc
fsubl
xor
lods
call
push
add
and
mov
insl
loop
sub
clc
repz
jno
inc
dec
or
mov
out
fwait
decb
lds
or
out
inc
cld
xchg
or
out
cli
xchg
lret
imul
dec
scas
pop
xchg
mov
and
xchg
xchg
int3
cmpsb
pop
sub
mov
imul
and
fs
jb
fisubl
lds
mov
sub
inc
push
add
inc
mov
subl
jle
nop
add
sub
mov
and
xchg
out
in
mov
comiss
imul
pop
aaa
mov
shr
add
iret
push
mov
lret
dec
inc
and
sub
scas
dec
out
push
daa
dec
xor
xchg
outsb
out
fmulp
pushf
xor
lds
push
sbb
fisttps
push
lock
inc
lahf
jb
mov
pop
pop
shl
insl
and
mov
xchg
xor
addr16
aas
cmp
adc
sub
pop
push
xor
ljmp
cltd
mov
nop
jmp
andl
xchg
out
clc
push
sti
jns
cmc
je
jp
inc
pop
cmp
push
push
repz
push
sarl
clc
jg
xchg
stc
insl
push
pop
stos
addr16
popf
je
mov
fildl
inc
mov
and
dec
pop
mov
mov
mov
xchg
or
add
jne
and
insb
lods
arpl
xchg
lret
adc
pushf
loop
test
jno
pop
lahf
or
and
jg
push
call
icebp
call
lcall
jb
sbb
std
dec
mov
pop
dec
aad
sub
inc
jp
inc
pop
jns
movsb
lock
push
dec
aam
cmp
sub
stos
inc
or
or
fmuls
leave
xchg
mov
or
mov
pop
mov
data16
xchg
in
xor
insb
push
dec
clc
push
inc
call
sub
jg
aad
cmp
mov
dec
xchg
inc
jae
iret
dec
sub
push
fisubs
lock
xchg
ss
shl
add
lea
insb
subl
pop
out
cmp
sbb
mov
mov
cmpsb
stos
cmp
cmp
push
push
arpl
out
sbb
jge
jnp
pop
in
pop
sahf
pop
and
xor
shlb
mov
or
std
mov
sub
bswap
das
hlt
fs
lods
sahf
std
pop
pop
dec
inc
mov
add
movsb
rcll
stos
jge
mov
fwait
bound
or
out
imul
in
push
lret
and
negb
push
push
adc
sub
xchg
rolb
repz
imul
mov
lds
mov
hlt
mov
sub
es
fistps
enter
jl
cld
aad
sarb
jmp
mov
or
adc
pop
imul
addr16
push
sbb
pop
inc
lcall
in
inc
mulb
test
xchg
ss
jns
insb
xchg
sar
pop
outsb
add
xchg
js
mov
popf
push
mov
jnp
das
push
pop
inc
les
arpl
shlb
mov
inc
push
jg
sub
push
mov
add
jo
lret
inc
lcall
sar
aas
rcll
adc
pop
cmp
pop
bound
mov
adc
sub
or
in
pop
jmp
and
pop
sti
mov
hlt
inc
and
jecxz
mov
cld
stc
adc
push
cmp
mov
push
cli
into
pusha
outsl
sbb
shrl
out
fimull
mov
loope
sub
or
dec
sahf
in
icebp
sarl
xchg
mov
adc
addb
mov
sti
imul
nop
jmp
cmp
pop
and
sbb
jl
out
xchg
mov
mov
ja
scas
push
sbb
mov
std
ret
mov
cmp
out
mov
das
and
xor
out
shl
xor
add
sbb
xor
xchg
jle
sti
mov
mov
fadd
ret
and
mov
popa
movsb
rcrl
mov
cmp
cmc
maskmovq
testl
packuswb
mov
mov
mov
xor
fidivl
sub
sbb
stos
aad
out
stc
stos
lret
nop
iret
sarb
mov
push
mov
daa
stos
jae
xchg
add
pop
fldcw
inc
pop
pop
pop
ficompl
rcrb
xchg
jb
arpl
stos
jg
hlt
daa
xchg
cld
dec
xchg
jnp
in
mov
lahf
aad
pushf
push
xchg
mov
lret
jle
sahf
addr16
xchg
adc
or
push
cmp
jmp
insl
nop
gs
mov
sbb
bound
fstps
cs
mov
push
xor
je
mov
in
je
adc
jb
jno
stc
outsl
aad
sar
insb
pop
push
cmpsl
dec
fmuls
sahf
int
cs
adc
idiv
sub
and
rclb
xor
outsl
adc
dec
push
hlt
iret
cmp
popf
leave
jge
nop
and
test
je
mov
cwtl
inc
pop
outsb
push
shl
mov
mov
in
jb
cwtl
xor
mov
test
push
and
add
mov
lret
mov
mov
insl
jle
repz
xchg
jecxz
xlat
mov
test
xchg
xchg
pop
inc
mov
stc
mov
xchg
ljmp
dec
imul
in
sub
inc
mov
es
test
mov
ss
sbb
out
xlat
ffreep
lea
movsl
sbb
add
push
xchg
in
mov
lret
cmp
shll
repnz
out
jae
xor
hlt
mov
cli
sub
push
test
or
mov
mov
sub
rcr
and
imulb
mov
fisubrs
push
cmp
ljmp
popa
data16
in
xor
xchg
mov
inc
je
sbb
ret
repz
adc
xchg
arpl
push
int3
test
negl
push
pusha
pop
pop
mov
xor
enter
imulb
xchg
inc
clc
xchg
sub
test
test
mov
lret
push
test
add
jecxz
sahf
lea
leave
jecxz
adc
fmuls
iret
fidivs
lahf
sbb
pusha
mov
mov
xchg
call
ljmp
sbbl
push
or
jge
rcr
dec
push
aaa
loope
jne
movsl
sbb
test
sbb
pushf
push
fcoml
mov
push
adc
pop
addr16
leave
notb
repnz
cmp
sahf
pop
jg
flds
in
aam
sub
out
xchg
push
adc
outsb
outsl
or
adc
fisttpll
gs
repz
stos
cmp
shlb
mov
add
sbb
mov
sbb
in
lock
pop
mov
inc
add
out
ret
pop
jbe
popa
dec
add
mov
shrl
je
inc
push
xchg
popf
iret
adc
cwtl
sub
frstor
stc
hlt
cwtl
daa
sahf
cmp
fiadds
jp
test
adc
xor
mov
sti
and
cmpsl
aaa
fistps
mov
ljmp
cmpsl
fcmove
hlt
repnz
icebp
jno
mov
dec
js
mov
mov
dec
iret
sahf
in
dec
ret
pushf
cmp
inc
mov
jge
in
inc
xchg
mov
insb
sub
cmp
movzwl
adc
int3
jecxz
sbb
stc
push
sbb
push
mov
inc
in
movsl
mov
adc
mov
call
sub
cwtl
mov
jp
call
aas
push
dec
and
rcr
in
xchg
sub
cltd
mov
or
and
pop
jne
sahf
and
or
mov
mov
mov
lcall
xchg
sti
jmp
std
mov
fsubr
jns
scas
ja
ficoms
outsl
cli
fiadds
stos
mov
pusha
push
arpl
adc
sahf
or
orb
xor
shll
aas
sbb
sub
divb
jp
and
mov
add
xchg
inc
or
push
ja
leave
mov
fdivr
add
cs
dec
das
jno
lret
inc
addr16
mov
jl
inc
inc
fcomi
mov
or
dec
push
pop
mov
bound
push
shlb
cmpsb
jle
mov
sbb
mov
and
lods
mov
push
rclb
inc
sbb
xchg
pop
or
and
push
pop
insb
es
sbb
sbb
lods
or
xchg
movsl
dec
pop
out
lahf
shlb
ja
cmp
dec
xor
punpcklwd
and
and
push
rorl
out
pop
mov
inc
adc
add
adc
fdivs
test
jg
hlt
test
push
cmp
in
fsubrp
xor
dec
lret
mov
es
mov
lds
and
sbb
cmpsl
adc
lret
popf
call
subb
add
in
fwait
lea
mov
aas
je
push
movsb
xlat
sahf
jo
add
shll
mov
lods
cmp
dec
sbb
test
iret
orl
lcall
inc
in
fidivl
lods
popf
or
and
xlat
adc
mov
mov
ror
scas
jno
xor
ret
xchg
cmp
shrl
push
movsb
fisubl
fwait
mov
mov
inc
aam
stos
test
cltd
xchg
push
pusha
nop
mov
rclb
dec
xchg
repz
fimull
mov
cmp
xor
lock
hlt
sub
cs
insb
cld
mov
in
inc
sahf
dec
adc
nop
cs
jns
rorb
ret
mov
sarl
adc
lcall
jge
loope
test
pop
jle
or
test
push
cli
lods
test
out
push
aam
gs
pxor
lcall
nop
cmp
sbb
repnz
pop
jae
dec
xlat
repnz
sub
aas
mov
adc
and
fisubrs
jle,pn
pop
bound
mov
daa
addr16
int3
imul
push
push
and
add
lret
in
cmpsl
aaa
and
sub
cmp
mov
sbb
ret
jg
xchg
xor
xchg
mov
lds
mov
or
fidivrs
adc
clc
push
sbb
cmp
sbb
addr16
pmulhw
or
nop
stos
xchg
fcoms
mov
or
mov
push
addr16
movsb
push
bound
fcomps
aas
mov
and
test
sahf
jbe
pop
dec
inc
loopew
bnd
ds
mov
push
mov
or
mov
lds
sahf
ja
imul
mov
enter
int
loope
pop
xchg
out
bswap
addl
incl
shl
push
mov
push
fwait
sub
ja
pop
mov
dec
loop
outsl
add
leave
sub
adc
fnstenv
xchg
leave
outsb
subl
dec
cs
clc
xchg
pushf
call
imul
jns
dec
out
and
sub
jno
mov
pop
or
inc
lret
ret
mov
sar
sahf
cs
lods
mov
arpl
ret
mov
sub
repz
in
cwtl
add
or
repz
jg
and
cmp
push
or
jmp
aad
pop
nop
pop
adc
or
rolb
shl
dec
pop
add
and
xchg
or
aad
rolb
and
sbb
cmc
jae
mov
cmp
mov
jle
cwtl
mov
and
fnstenv
fisttpl
or
les
fldl
pop
js
inc
out
out
divb
adc
pusha
push
cmp
fildl
cmc
inc
js
leave
mov
add
adc
cmp
and
jmp
xor
add
xor
sbb
pop
mov
mov
movb
and
sti
inc
sbb
fcomps
dec
adc
cmpsl
sub
jmp
inc
adc
jnp
aas
test
icebp
jo
movsl
stos
jg
cmpsb
rorl
or
je
cmp
adc
cwtl
adc
xor
outsb
add
setl
hlt
lcall
clc
int3
adc
mov
mov
pop
fidivrs
fisttps
pop
addb
adc
jp
repnz
mov
test
pushf
fwait
bound
test
lods
push
out
mov
push
clc
jo
addl
xor
je
jbe
cltd
add
mov
and
dec
loope
fistpl
or
push
les
mov
int3
mov
mov
add
dec
mov
int3
aaa
or
call
movsb
push
clc
jg
ds
icebp
mov
sub
shll
cmp
lock
jp
add
mov
js
or
loop
mov
popl
cmpb
fwait
leave
mov
xor
aas
mov
sbb
add
int
mov
sub
popf
xor
jbe
out
test
pop
cmp
std
push
mov
ret
mov
or
fisttpl
inc
movb
sbb
fadds
sbbl
mov
push
in
sbb
ret
cmp
ret
je
mov
sub
cmpsl
cmp
jnp
cmpsb
orb
cli
pop
jle
lea
test
and
scas
lea
enter
cmpsb
leave
dec
rcrl
xor
adc
scas
cwtl
icebp
cs
mov
bound
push
mov
pop
test
test
shlb
sub
shrl
inc
dec
test
hlt
xchg
xchg
insl
pop
pop
scas
sub
frstor
outsb
stc
mov
testl
fldt
sbb
nop
mov
mov
sarl
out
mov
pop
adc
cmp
sub
push
jns
int
icebp
pop
mov
or
sub
outsl
hlt
or
cs
push
pop
mov
orb
push
adc
insl
mov
scas
adc
int3
insb
push
movsw
and
loopne
inc
sti
int3
cmp
cmp
lret
add
aas
ret
xchg
punpckhwd
or
int3
push
subb
ja
push
aam
jecxz
mov
arpl
mov
or
dec
dec
adc
mov
mov
pop
sbb
mov
sbb
int3
dec
sbb
inc
outsb
dec
test
adc
ds
pop
jmp
mov
adc
clc
jge
dec
repnz
jecxz
mov
inc
bnd
inc
xchg
or
lods
gs
scas
out
push
rclb
dec
insb
inc
pop
pop
sbb
enter
push
inc
mov
lods
and
aaa
sub
sarl
fimuls
loopne
xorb
mov
in
inc
or
add
cmp
out
cmp
inc
xchg
addr16
xor
and
or
imul
rcl
ret
add
in
dec
call
dec
inc
xlat
in
cmp
mov
ret
shll
not
or
aam
xor
dec
mov
push
adc
gs
and
xor
and
mov
push
lods
mov
cmp
cmp
or
xor
mov
pop
sbb
cmp
pusha
adc
nop
std
sbbl
sub
xor
lahf
sub
cmp
xor
imulb
jle
xlat
ljmp
adc
xor
mov
push
sbb
in
fwait
push
in
push
std
mov
jns
scas
fnsave
xchg
rcr
dec
inc
jbe
adc
ret
arpl
aam
mov
fists
dec
popa
dec
push
je
mov
xchg
xchg
popa
mov
test
jb
popf
jnp
jne
out
sub
xchg
adc
pop
add
sbb
shll
ffreep
add
insl
sub
and
pop
mov
dec
inc
rolb
sub
mov
adc
cmp
movb
pusha
das
sarl
inc
adc
xchg
les
out
fadds
mov
pop
aad
dec
loopne
mov
outsl
jmp
push
ss
pop
adcb
adc
sub
inc
ljmp
shlb
inc
and
dec
or
mov
jecxz
mov
push
fmull
stos
mov
fdivrs
push
pop
ss
mov
popf
popf
xchg
data16
sbb
cmpsl
pop
and
sar
sub
cmp
inc
jl
push
jne
jb
stos
mov
sub
lds
push
scas
ja
push
push
or
rcll
jg
adc
mov
in
sbb
push
push
xchg
mov
daa
clc
nop
ret
push
insl
fcoml
xchg
icebp
pop
xchg
mov
popf
mov
cmp
mov
call
movsl
pop
push
cmp
call
out
push
pop
xchg
sub
movsb
jle
sub
rcrl
std
and
cmpsb
jmp
cmpsb
movsl
rcll
rclb
sbb
faddl
sbb
dec
add
cwtl
and
inc
shrl
jp
inc
xor
pushl
popa
fildl
sub
movsb
test
xlat
or
cmp
out
pop
mov
sbb
mov
mov
mov
pop
iret
jle
fnsave
mov
xchg
in
mov
mov
mov
jmp
sub
dec
lret
mov
and
pop
les
inc
ret
lcall
frstor
inc
pop
jb
cs
fisubl
popf
xor
cmpsb
jnp
cmp
jae
bound
movsb
aaa
les
cmpsb
ljmp
and
dec
lds
jle
pop
mov
imul
lret
sbb
repnz
in
int3
dec
dec
cwtl
mov
jp
test
lods
sbb
jbe
push
arpl
rcll
lahf
push
mov
jbe
push
jae
cmp
test
loopne
mov
inc
mov
pop
dec
xchg
xchg
mov
es
push
nop
stos
fcmovnbe
xor
arpl
dec
addr16
pop
aas
xchg
ljmp
arpl
popa
xchg
daa
cltd
stc
adc
leave
ss
pop
popf
in
xchg
sbb
das
aad
xchg
jnp
xchg
mov
mov
out
lret
push
lahf
ds
enter
ja
adc
add
inc
test
sbb
lret
xor
pop
and
imul
pop
mov
adc
hlt
mov
pop
jb
and
add
les
mov
push
repz
mov
ret
mov
testb
rorb
mov
or
dec
xor
bound
sbb
loope
mov
not
push
decb
xor
idivl
data16
int
repz
addl
sbb
push
xlat
xchg
xchg
aam
push
xor
jp
div
mov
les
push
or
or
adc
iret
sbb
in
mov
enter
xor
adc
repnz
jo
mov
xchg
push
adc
inc
outsl
pop
xor
and
adc
bound
or
sub
dec
sti
sub
adc
cmp
inc
out
sbb
cld
xor
jg
insb
rcl
fistpl
pop
xchg
cmp
cld
cmp
negb
scas
mov
repnz
xchg
outsb
lock
clc
jp
test
in
and
bound
pop
aas
push
jbe
shll
in
shlb
push
ret
push
imul
mov
outsl
test
subb
add
int
pop
mov
sbb
xchg
shl
mov
jb
xor
mov
mov
lods
mov
pop
jo
and
xchg
and
repnz
xor
mov
add
inc
fnstsw
mov
repz
adcb
repz
addr16
or
mov
and
sbb
in
or
ds
lret
enter
imul
js
and
test
out
cmp
dec
ret
pop
add
xchg
mov
inc
fwait
scas
sar
sub
sti
mov
mov
and
movsl
inc
push
push
and
cmp
test
sub
pop
mov
or
mulb
xor
push
mov
jne
jo
cmc
loopne
xor
scas
sbb
out
mov
aas
enter
nop
fsubrl
aaa
jecxz
sub
push
push
and
ret
fs
cld
mov
sbb
sar
dec
lcall
or
or
sub
push
mov
out
jnp
mov
sub
lahf
cmp
or
loope
sub
adc
xchg
or
or
sub
push
pop
jo
out
add
xorb
add
mov
cmc
jns
xor
das
jle
inc
or
ret
push
fcoml
loop
das
les
lret
xchg
inc
arpl
ss
jmp
and
inc
fdivp
call
call
movsb
movsb
int
sbb
lahf
lahf
ficompl
xchg
insl
jecxz
movsl
cmpsl
pusha
lds
dec
inc
loop
arpl
hlt
jo
or
int3
std
fmulp
mov
jecxz
addr16
fwait
add
and
pop
jmp
mov
loop
xlat
and
xchg
inc
jmp
fdivrs
test
imul
pop
aaa
dec
lret
cmp
ret
cld
es
cld
outsb
lock
testl
fcom
dec
int
pop
xor
pushf
mov
pop
pop
push
jle
outsb
in
push
lods
mov
and
lret
stos
pop
icebp
dec
mov
pusha
mov
arpl
lods
cmp
xchg
push
stos
push
jno
push
jl
mov
out
lock
out
insl
loope
fstps
daa
data16
add
scas
jo
push
add
sti
dec
jl
sbb
repnz
ds
adc
test
ja
dec
jnp
pushf
push
adc
jl
dec
mov
stos
mov
adc
lock
mov
cs
les
xchg
and
out
xchg
movl
add
hlt
aas
inc
scas
cmp
and
sbb
aad
adc
push
jmp
fistpll
in
push
adc
test
int3
loopne
cmp
xchg
push
clc
inc
out
pop
pop
aam
movsl
cwtl
adc
pop
xchg
push
adc
arpl
mov
jle
cmp
sub
inc
jne
jmp
inc
add
daa
and
push
fisttpll
aad
bound
cmp
rorb
pop
insb
loope
test
jecxz
pop
nop
ljmp
test
xchg
das
ret
cmp
fsubrp
test
xor
sub
cmpsl
testl
outsl
movsl
push
push
push
lret
test
dec
cli
mov
push
movsl
orl
jo
push
divl
rep
mov
test
and
outsb
fmull
and
mov
or
shr
jno
scas
cmovo
subb
adc
mov
cld
push
loope
movsb
sbb
jne
fbld
inc
add
pop
adc
inc
cs
push
mov
sbb
data16
inc
sub
xor
sub
jl
inc
push
jge
adc
jnp
mov
je
push
pop
jmp
in
fucomip
xchg
mov
aas
fs
dec
sbb
xor
imul
cmc
addl
add
fldenv
jns
std
jmp
and
sbb
in
ja
sbb
jg
arpl
jge
xchg
bnd
mov
jge
xchg
lcall
add
add
addr16
jno
test
les
add
cmpsl
roll
mov
out
sub
sbb
loopne
mov
mov
vmread
int3
mov
xlat
jno
imul
fldl
sti
push
xor
xor
arpl
mov
jecxz
jne
addb
ds
adc
mov
rclb
insb
sub
test
xor
lret
dec
loope
inc
mov
rol
rcll
dec
aad
rorb
and
mov
cmp
jo
xor
iret
addr16
mov
shll
mov
leave
push
jmp
jge
or
bound
cmp
cmp
mov
jo
aam
push
inc
xor
cmp
inc
test
movsl
ret
js
inc
xchg
jns
cwtl
add
es
out
xor
jno
xlat
mov
push
push
dec
xchg
out
and
fistl
cltd
stos
loopne
jg
push
notb
xchg
jge
int3
add
lock
mov
xchg
cmp
mov
addb
subb
dec
inc
add
push
dec
xchg
sbb
test
in
xchg
aam
mov
pop
mov
mov
add
gs
cli
inc
and
or
aaa
sbb
sbb
out
inc
daa
mov
fcmovb
daa
out
sub
xchg
adc
or
flds
call
dec
loop
xchg
xor
xor
mov
movsb
dec
ds
jne
sar
pop
gs
jo
xchg
je
decb
jnp
pop
fldl
cmpb
sub
loope
int3
out
xor
in
mov
pusha
adc
mov
jl
push
pop
int
or
into
insl
outsl
sti
repnz
outsb
add
test
dec
push
push
jmp
stos
jnp
xor
out
push
jmp
ret
in
dec
mov
mov
imul
mov
cld
ret
or
dec
daa
sbb
jle
cmp
mov
xchg
mov
movsb
cmp
rcl
cmp
fs
or
and
push
arpl
lret
lcall
shr
inc
loopne
and
gs
dec
jae
sbb
lret
movsb
bound
or
lock
push
stos
cs
jnp
cmp
adc
daa
fucom
mov
xchg
repz
sbb
loope
lcall
aaa
xor
or
sub
and
int
test
repz
fistps
push
cmp
ja
xchg
adc
sbb
imul
xchg
push
lahf
push
jne
in
sarb
lds
out
mov
dec
or
enter
xchg
js
test
bound
mov
jge
push
push
mul
je
imul
sub
lcall
push
mov
int3
jp
add
enter
daa
cli
repnz
cmp
cmp
mov
add
std
push
bound
loopne
das
fcmovbe
inc
mov
ljmp
add
mov
dec
cmp
push
pop
add
mov
pop
daa
jp
cmp
xor
sub
jne
leave
mov
das
jg
push
and
xor
jae
inc
scas
rolb
dec
outsl
gs
andl
pop
in
sub
rclb
jnp
jo
fcompl
push
and
or
lods
mov
jae
movsb
xchg
leave
and
or
cmpsb
inc
popa
push
push
in
add
pop
or
ja
inc
and
insl
pop
jb
in
xchg
dec
jns
inc
jns
fstpt
lock
or
push
adc
cmp
icebp
pop
jp
repz
inc
cmp
push
fadds
xor
push
in
jmp
ds
clc
insb
push
push
ds
mov
xchg
mov
fldt
jle
ficompl
dec
pushfw
loopne
rcl
je
push
inc
adc
fisubrl
cmpps
int3
cwtl
fdivl
pushf
mov
xlat
jge
icebp
xlat
mov
sub
jae
add
mov
fwait
into
xor
xchg
aad
clc
shrl
fdivs
mov
stc
shrl
sbb
movsb
repnz
cwtl
hlt
bound
xchg
xchg
lahf
clc
xor
sarb
hlt
mov
mov
lods
push
mov
aaa
or
orl
pusha
test
cmp
push
popf
push
scas
add
inc
dec
test
pop
mov
mov
movsl
lock
ret
dec
and
sti
push
xchg
outsl
testl
sbb
mov
lahf
pop
sbb
xchg
push
gs
pop
jbe
inc
hlt
je
rol
push
mov
cwtl
push
in
sbb
jg
fnstsw
fs
fsubrs
insb
mov
push
sbb
xchg
in
mov
xor
mov
and
dec
js
mov
lcall
adc
or
loope
pop
adc
sti
sub
mov
scas
jmp
pop
mov
jno
into
xor
xchg
cmpsb
sbbl
or
xor
addr16
cli
test
test
pop
lahf
adc
push
ret
lods
or
mov
cltd
mov
xlat
mov
out
lret
rorb
fs
pop
xchg
mov
push
sub
xchg
and
jl
daa
cmpsb
arpl
pop
stos
cmp
hlt
sub
mov
daa
out
cmp
popf
pop
imul
mov
and
test
in
push
pop
das
sbb
enter
xor
out
pushf
inc
shl
jge
outsl
or
or
sbb
xor
and
out
clc
or
imul
push
jp
movb
pop
jmp
stos
loop
mov
sbb
lods
mov
mov
xchg
into
jbe
or
jg
daa
lret
incl
aam
inc
stos
cs
inc
or
leave
mov
addr16
out
nop
arpl
or
xlat
adc
sahf
cmp
in
jge
fcmovnu
xchg
add
or
cmp
test
cli
or
or
xor
fmul
mov
icebp
movsl
push
sub
jno
test
lret
scas
jecxz
lahf
mov
int
cltd
xchg
pop
cmp
inc
pushf
jae
mov
mov
movsl
mov
mov
decl
scas
push
icebp
or
pop
xor
inc
ljmp
scas
mov
arpl
jmp
into
enter
fnstsw
push
ret
xor
jl
dec
aad
hlt
imul
add
aas
inc
pop
das
sbb
movsl
ds
sub
or
pop
add
pop
faddl
sub
sbb
imull
xor
fisttps
sbb
mov
dec
testl
cltd
push
ljmp
or
mov
mov
jne
in
cwtl
jg
adc
movsl
jecxz
push
scas
cmp
notb
xor
fdiv
jecxz
cmpsl
mov
js
lods
pop
lods
adc
jecxz
movsb
incl
lahf
adc
fsts
fcoml
test
cltd
bound
popf
mov
add
inc
push
sub
cmp
testl
fnstcw
push
andb
fidivl
testl
js
pop
push
pop
push
jae
fs
add
aam
adc
loop
or
pop
shrb
fs
outsb
cltd
adc
fisubrl
sub
shrl
xchg
clc
ss
popa
pop
jp
mov
jg
daa
ret
and
dec
decl
test
mov
lahf
pop
mov
pop
sub
adc
stos
xor
lret
inc
sub
loop
popf
jle
mov
push
jp
movsb
mov
adc
cli
leave
push
call
inc
test
loop
add
and
and
int3
sub
repnz
pop
xchg
add
out
add
push
mov
rorl
sub
arpl
adc
ss
lret
arpl
in
lret
cwtl
lea
xlat
dec
cmp
push
lret
sahf
dec
dec
stc
and
in
cmpl
adc
fsubrl
jg
data16
nop
call
pop
cmpsl
or
pop
inc
shlb
ljmp
ret
into
push
and
lea
inc
pop
fs
leave
mov
leave
clc
pop
out
mov
out
fidivrs
scas
aam
dec
lods
mov
add
pop
mov
inc
sbb
mov
repnz
jns
mov
adc
cmp
clc
mov
mov
inc
add
dec
or
jne
dec
push
jb
fwait
fs
daa
mov
or
push
cli
js
mov
xchg
add
test
insl
out
jne
sti
mov
xor
lea
pop
push
or
imul
sub
and
inc
sbb
in
add
push
add
movsb
mov
les
fisubrs
xlat
xchg
push
sahf
or
call
xor
sub
mov
push
out
arpl
cmpsb
test
push
idivb
pop
sahf
into
mov
inc
das
into
imul
xor
std
dec
xor
js
xchg
mov
sarb
inc
test
cmp
movsb
stc
dec
iret
jl
lods
icebp
scas
inc
pop
sub
cli
test
ljmp
bound
push
cwtl
nop
nop
cli
pop
add
outsl
out
cmp
hlt
lds
sub
gs
ljmp
in
xor
dec
mov
inc
or
or
js
mov
mov
je
test
sub
cltd
popf
xchg
aad
lods
push
push
push
mov
xchg
mov
dec
sbb
jbe
pop
shrb
inc
divb
scas
cmp
xor
cs
out
arpl
bnd
push
xor
push
dec
push
movsl
mov
std
push
into
jne
push
lock
jno
into
sub
pop
int3
mov
cmp
loop
cmpl
rol
stos
das
push
jns
xchg
hlt
jbe
cmp
adcb
fdivr
mov
pusha
rcrl
sar
lcall
or
xorl
shl
test
cmpsb
adc
sub
lea
mov
mov
jge
cmpsl
dec
or
add
je
push
dec
xor
data16
sti
mov
fs
push
inc
psrlq
mov
lock
ds
jl
adc
mov
push
jae
enter
add
je
or
dec
popf
jle
sub
cmp
shl
cmpb
mov
neg
testl
jns
and
bound
leave
sbb
stos
scas
mov
cmpb
adc
stos
xor
scas
iret
test
bound
mov
cltd
pop
dec
add
das
pop
outsl
pushf
xor
cmp
lods
mov
mov
loopne
mov
jbe
sbb
clc
popw
jg
mov
adc
inc
aas
in
or
addr16
stc
add
mov
xchg
out
lret
mov
jge
pop
xchg
inc
mov
aad
pop
repnz
mov
repnz
or
xor
sub
adc
inc
addr16
scas
movsb
and
mov
dec
int
jns
xchg
lods
outsl
popa
aaa
sti
lret
nop
std
pop
clc
test
cmp
adc
jne
pop
pop
jbe
jecxz
mov
fiadds
inc
dec
dec
and
fbstp
fidivrs
addr16
or
fs
fistps
jl
and
mov
push
xchg
jae
xchg
insb
cmp
repnz
pop
pop
daa
mov
ficoms
js
sbb
pushf
sbb
cs
cmpsb
in
in
cmp
inc
cmp
bound
mov
mov
pusha
sbb
or
add
and
push
adc
loop
lcall
dec
or
repz
bound
scas
imul
add
ds
push
test
jmp
outsb
pop
mov
cmpsb
mov
sahf
les
in
and
shlb
push
fcmovbe
mov
fbld
lock
xchg
mov
movsl
das
aam
sub
xchg
and
or
xor
dec
push
rorb
fsubs
das
jecxz
clc
mov
inc
lock
or
in
xor
loopne
daa
gs
xchg
hlt
inc
mov
cs
mov
std
sub
xchg
vmwrite
add
push
xchg
in
mov
iret
nop
push
movsb
jns
gs
cs
and
mov
adc
in
push
cmpsl
adc
lahf
lods
loop
cmpsb
stos
aad
sarl
in
test
cltd
repnz
fcoml
shrl
push
int
out
rorb
xor
push
ss
fs
and
fnstsw
mov
pop
dec
add
les
cmp
in
jp
mov
insb
ljmp
sub
arpl
jno
out
iret
cld
mov
shrb
popa
xor
push
jmp
pop
or
negl
mov
dec
jg
dec
insb
pop
in
ret
jno
fbld
leave
icebp
fldcw
push
mov
loopne
mov
sub
or
movb
mov
lret
js
sbb
xchg
mov
mov
outsb
mov
xor
outsb
loop
loopne
rcr
dec
or
mov
cltd
das
iret
xchg
mov
push
inc
sbb
dec
jecxz
mov
jp
push
pop
movsl
in
addr16
xor
sbb
jns
or
clc
xor
leave
out
adc
notb
fidivl
jae
sub
mov
and
ljmp
xchg
add
mov
cltd
mov
int
mov
test
cmpsb
fcoml
call
dec
xchg
repnz
mov
leave
fs
test
sahf
jbe
dec
repz
mov
xchg
add
jmp
push
mov
sbb
jg
xchg
icebp
fsubrl
lods
or
popa
cmp
pop
sbb
stos
fidivrs
pop
lcall
sbb
or
jae
sbb
xor
nop
shrl
loop
fdivrl
sub
pushl
pusha
std
add
leave
push
add
cmpsb
sbb
or
hlt
arpl
mov
sbb
ja
mov
or
inc
mov
pushf
leave
int3
data16
imul
cmp
inc
lret
jmp
pop
jno
mov
movsb
test
xor
jno
imul
push
mov
pop
push
jg
aas
sbb
add
jo
fadds
pop
dec
inc
jae
xlat
cld
cwtl
push
lcall
cmp
mov
aaa
adc
imul
sbb
pop
test
sub
cmp
fnsave
dec
fadds
gs
gs
sub
lret
ret
lea
cs
lock
in
sub
inc
insl
sub
push
push
jg
int
movups
inc
cmp
jne
fdivrs
movzwl
fnstcw
gs
sti
add
pop
fdiv
cmp
cmp
in
dec
inc
fcompp
out
je
in
outsl
lret
or
mov
push
pop
sbb
cmpl
aam
jge
push
xor
xchg
or
inc
nop
mov
mov
xor
shlb
fwait
outsl
pop
mov
jle
add
lds
sbbl
jb
enter
imul
mov
addr16
imul
sbb
mov
out
sbbb
push
push
bound
xor
jp
xor
xor
rcll
fs
test
and
push
mov
sarb
dec
mov
mov
adc
mov
inc
fmul
imul
hlt
fwait
data16
lds
lods
icebp
out
adc
jg
mov
push
push
movd
mov
mov
loop
sbb
fucomi
mov
scas
mov
adc
dec
cli
add
ja
dec
jbe
push
push
lret
mov
stos
push
mov
fbstp
cltd
jge
stc
fisubs
into
mov
aad
mov
xchg
in
sub
lods
mull
loope
aas
sub
xor
sti
sub
sub
jle
clc
sbb
sti
or
lods
mov
int
sub
xor
jno
sar
sbb
jg
mov
je
ret
imul
cli
mov
push
push
rolb
fstpl
push
mov
jl
mov
xchg
mov
dec
mov
mov
adc
outsl
aaa
jmp
cmpsb
pop
aam
cmp
mov
rcr
or
mov
mov
hlt
mov
jl
push
xchg
orb
push
adc
dec
fs
xchg
push
xchg
lahf
cld
js
jae
cwtl
cmpsb
jp
shlb
sub
js
mov
mov
jo
hlt
adc
cmpsl
push
cmp
in
outsb
jp
pop
jbe
xchg
cmp
fdivp
dec
mov
inc
adc
pop
mov
data16
jmp
mov
mov
dec
mov
xchg
add
loopne
sbb
adc
pop
xchg
lods
dec
pusha
jo
xchg
mov
xor
xchg
xchg
mov
lret
aaa
xchg
enter
sbb
mov
xchg
xor
lea
sub
mov
aam
adc
in
out
sbb
sub
jno
cmp
add
cmpsl
cmp
xchg
adc
mov
test
addr16
clc
xchg
insl
push
imul
mov
aas
xchg
int3
xchg
adc
jno
test
or
ds
or
mov
lcall
test
lret
icebp
test
cmpsl
xor
mov
mov
call
jbe
mov
jnp
loop
and
inc
xchg
outsl
adc
enter
imul
hlt
lods
in
cltd
in
arpl
push
dec
push
outsb
lcall
nop
fcmove
aaa
mov
pop
push
clc
cwtl
aad
jmp
dec
jbe
xchg
lods
cmp
mov
shl
and
clc
adc
sub
pusha
inc
cmpb
mov
and
bswap
xchg
les
jne
jmp
aaa
cmp
and
or
adc
in
subb
fbstp
das
push
mov
movsb
or
bound
push
into
ficompl
or
test
jno
int
inc
xchg
inc
jbe
dec
push
inc
push
in
lods
pop
adc
mov
mov
mov
movsb
inc
jg
mov
mov
int3
cld
jecxz
cmpsl
add
mov
cmpsb
negl
sub
not
inc
fmulp
pop
sub
inc
mov
adc
xor
xor
popa
sub
xor
ror
inc
push
mov
cmp
push
aaa
push
sub
inc
sbb
daa
test
cs
adc
test
jle
dec
movsl
dec
push
mov
push
add
mov
lods
sbb
push
fldcw
aaa
jae
sub
ja
jmp
mov
sbb
mov
or
xlat
xchg
cmp
inc
mov
and
sub
in
cmp
mul
xor
sub
mov
stos
arpl
rclb
les
pop
push
ds
cmpb
jns
cmp
hlt
jns
mov
ljmp
mov
divl
fnstenv
aaa
mov
sub
stos
sbb
ljmp
mov
int3
and
mov
hlt
mov
add
inc
cld
pop
repz
or
cmp
push
dec
mov
mov
xchg
pop
test
ret
in
movsl
outsl
xor
jge
push
gs
roll
mov
push
outsl
je
shll
clc
lret
pop
loopne
pop
mov
jp
cmpsb
or
lahf
iret
push
xchg
decb
jmp
loopne
data16
enter
mov
mov
inc
push
ret
pop
inc
icebp
inc
insb
lds
aad
sarb
and
js
inc
mov
pop
add
daa
das
cmpl
sub
jle
xor
mov
cmp
popa
mov
ret
pop
sub
jbe
and
pushl
ja
js
ljmp
mov
hlt
ja
xor
xor
clc
jg
sbb
cltd
sbb
addr16
mov
cmpl
shll
mov
cwtd
cmpsb
adc
mov
test
inc
and
add
add
pop
sbb
sar
aas
inc
xor
stc
mov
or
movsb
out
pop
daa
jns
fstpt
xchg
cmp
push
xchg
xor
add
or
jmp
inc
mov
leave
out
sub
andl
test
call
cmp
andb
mov
into
cmp
cwtl
mov
cld
push
mov
out
jmp
and
das
imul
inc
test
lods
mov
leave
pop
ds
add
aam
nop
mov
mov
push
mov
ret
push
cli
xchg
jg
dec
dec
add
shll
lret
or
sub
and
fs
pop
out
cmpsl
or
push
jge
push
shll
adcl
and
sbb
mov
lret
test
xchg
jno
mov
mov
stc
inc
xchg
test
int3
stos
ja
fildl
and
hlt
jecxz
and
xchg
sbb
les
idivb
lods
repnz
in
inc
or
sbb
mov
jns
shll
bound
iret
into
fs
mov
and
mov
mov
dec
cld
push
or
pop
mov
aas
inc
and
add
lcall
lods
xchg
mov
inc
mov
adc
icebp
xor
xchg
sbb
cs
push
jae
sub
mov
les
mov
sub
stos
or
ss
out
pop
test
and
jecxz
adc
push
mov
sbb
cmc
sub
sbb
inc
xor
ljmp
push
lahf
add
out
in
lods
add
push
mov
push
in
neg
or
adc
inc
cmp
nop
sub
shr
ffree
addr16
in
mov
and
xchg
jns
pop
mov
cmp
mov
cmp
push
mov
jmp
cld
xchg
xor
jl
les
sti
or
xor
pop
inc
inc
mov
push
outsb
rcr
cmp
mov
dec
testb
lret
push
mov
sti
stos
xor
lret
adc
pushf
rcrl
out
mov
pushf
cld
imul
andl
aam
dec
psadbw
lret
imul
test
mov
mov
xchg
out
insl
addr16
movsl
sbb
jno
rcll
sub
shlb
cmpsb
iret
push
inc
cs
sbb
jl
int
xchg
push
adc
scas
das
jbe
je
int3
lods
fisubs
clc
cmp
inc
test
fildl
or
repnz
sbb
mov
sub
mov
addr16
dec
sbb
cmp
xor
and
lahf
inc
sahf
jbe
pop
aas
mov
mov
lahf
rclb
loopne
call
lcall
adc
adcl
out
out
add
mov
nop
cmpsb
daa
add
jge
notl
jl
dec
add
int
cmp
decl
inc
add
call
dec
jne
ds
call
nop
sub
std
scas
push
aam
push
push
sbb
out
loope
mov
add
insb
enter
sbbb
cmpsb
fistps
jae
dec
aas
mov
in
adc
mov
adc
mov
sti
pop
gs
in
sbb
repz
jle
cmc
std
fdivrs
rcr
and
inc
insl
inc
mov
adc
cmpsb
inc
std
jnp
shlb
sbb
out
add
adc
repz
shrw
mov
pop
xor
mov
inc
pop
into
mov
ret
push
jmp
mov
das
jmp
xlat
jae
test
int
movsb
lret
dec
cmpsl
dec
out
sbb
ja
imul
push
and
cs
outsb
enter
push
pop
jp
sub
xchg
inc
cmp
ljmp
call
loop
ljmp
movsl
ffreep
adc
push
fcomip
push
push
inc
cs
cs
icebp
sub
jl
jbe
out
int3
add
ret
or
push
pop
pop
pop
xchg
or
pop
inc
lds
aas
jmp
movsl
les
xlat
lods
or
arpl
jmp
push
and
push
sbb
jns
popf
or
ret
ljmp
outsb
repz
sbb
push
rcl
and
xchg
sbbb
clc
sti
aas
lahf
pop
pop
or
ds
inc
aaa
jl,pt
push
cld
sub
in
testl
out
xchg
std
lock
push
cmp
mov
in
mov
or
push
and
xor
and
pop
xchg
rclb
pop
jecxz
les
loopne
inc
and
dec
leave
mov
mov
icebp
sbb
xor
jg
mov
call
or
dec
push
sbb
and
or
xchg
jns
inc
mov
pop
push
inc
mov
push
in
scas
pop
or
jle
mov
push
bound
mov
rclb
loopne
dec
call
mov
sbb
jno
stos
loopne
es
roll
jmp
add
mov
and
xorl
out
frstor
hlt
mov
repz
dec
addb
dec
push
cs
mov
imul
pop
mov
dec
adc
sbb
outsb
xor
xchg
mov
test
shlb
pop
stos
movsl
je
lcall
push
fcompl
pushf
ficoml
mov
popf
int3
cmpsb
jae
pop
test
push
jae
cltd
mov
lahf
fwait
out
push
pop
add
in
jl
xchg
adc
cmp
fwait
add
push
aas
fisttpll
jbe
insw
sub
pop
mov
stos
addr16
jp
xchg
not
mov
fiaddl
dec
ds
mov
adc
test
enter
mov
mov
pop
dec
or
cltd
pop
adc
in
jo
xchg
loopne
out
cwtl
cltd
ret
pop
or
or
aam
or
push
inc
mov
sbb
stc
call
mov
adc
xchg
es
mov
dec
xchg
enter
test
dec
das
out
cltd
mov
inc
add
mov
nopl
dec
push
cs
or
jne
sahf
lods
push
xchg
xchg
or
dec
mov
pop
push
xor
sub
ljmp
dec
decl
roll
sarb
into
or
xlat
push
imul
dec
addb
adc
push
or
loope
dec
or
inc
push
mov
scas
adc
gs
mov
mov
cmpsl
stc
inc
negb
arpl
push
pop
stc
dec
rcrb
rdmsr
adc
outsl
icebp
imulb
add
jbe
jg
xchg
fwait
stos
push
int
push
inc
xchg
enter
mov
pop
cs
xchg
popa
cmpsb
dec
enter
rcrb
mov
arpl
mov
scas
add
in
cmp
xchg
jmp
lcall
pop
aad
jo
inc
stc
mov
sub
jns
leave
leave
mov
mov
fdivr
repnz
mov
popf
push
cmp
into
dec
or
hlt
jae
rorl
mov
gs
mov
or
cli
es
dec
mov
jo
int
in
lcall
xor
in
stos
shrl
nop
sarb
daa
jle
and
sahf
daa
shll
rorb
push
adc
add
sbb
add
sub
mov
scas
mov
sbb
inc
call
stos
push
mov
sub
sub
rcrb
dec
add
inc
add
das
setne
sahf
scas
cmp
jnp
sbb
stos
jae
mov
mov
movsb
mov
pop
and
add
pop
xorl
insb
sbb
aad
aas
pop
sahf
cmp
mov
push
mov
cmc
xor
mov
out
adc
jp
mov
nop
push
es
out
or
cmp
je
adc
add
add
jnp
inc
mov
je
jecxz
push
pop
mov
mov
sti
jnp
dec
pop
arpl
imul
roll
jae
lret
scas
and
jecxz
and
inc
sarb
stc
loop
cmp
mov
mov
mov
out
add
out
sti
push
je
mov
mov
lock
xchg
mov
adc
mov
xor
dec
xchg
ficompl
in
cs
arpl
pop
cmpl
shr
and
dec
or
and
outsl
adc
cmpsb
xor
insb
das
ror
popa
jg
and
int3
adc
js
dec
stos
pop
jno
sub
dec
outsl
push
xchg
inc
xor
adc
jge
repz
sub
ljmp
xchg
sub
pop
nop
sbb
hlt
xchg
cld
push
inc
clc
ss
shll
movsl
testb
push
inc
cmp
repnz
cld
mov
lea
and
pop
cmp
xchg
imul
and
jnp
fildl
xchg
push
inc
pusha
mov
dec
test
ss
push
dec
fcom
subl
push
and
dec
and
scas
or
pop
rcrl
xor
mov
push
jmp
xor
mov
lret
popa
cmp
and
nop
outsb
inc
icebp
xchg
jge
xchg
fiaddl
lea
jge
and
in
inc
add
fs
jns
cmpsl
dec
and
nop
inc
inc
xor
xchg
push
pop
ljmp
fnsave
or
subb
std
sub
mov
and
mov
mov
movsb
adc
dec
sub
sbb
jno
pop
lods
cltd
jp
mov
jb
pop
xchg
inc
sbb
das
lds
test
xlat
inc
sub
sub
or
add
cmp
int
into
es
and
xchg
lds
pop
mov
inc
test
out
pop
pop
insl
mov
xor
add
xchg
xor
xchg
jnp
fwait
ja
pop
movsb
icebp
jl
js,pt
mov
test
sbb
adc
sbb
stos
jbe
sbb
xor
ficoml
xor
shrl
and
add
les
pusha
add
sarb
dec
xor
and
fidivrl
xchg
in
xchg
mov
xchg
push
in
std
mov
sbb
lods
mov
mov
sarb
scas
and
loope
adc
mov
faddl
xlat
xchg
icebp
xlat
subb
xlat
cmpsb
inc
insb
in
and
fsts
push
popf
in
lock
pop
mov
adc
jnp
adc
stos
sub
dec
xor
mov
fwait
xchg
dec
inc
sbb
sbb
sbb
mov
iret
out
jmp
aam
fidivrs
push
inc
jmp
les
icebp
jnp
mov
mov
addr16
jge
test
insb
orl
mov
jp
xchg
aad
push
mov
mov
push
cmp
cld
inc
rcll
jle
push
jecxz
repnz
test
test
lods
push
jecxz
fbld
aaa
lret
cmp
fsubp
out
gs
xchg
out
scas
jnp
adc
dec
push
jnp
scas
loop
outsl
pop
mov
and
jp
xlat
adcl
les
das
push
pop
mov
cmp
test
and
dec
push
cltd
hlt
fdivrl
mov
inc
faddl
mov
gs
or
sub
std
lret
mov
scas
sub
sbb
leave
rcl
fistps
imul
test
shll
js
imul
mov
rcrl
lcall
push
push
shll
clc
pop
call
push
xchg
aam
clc
mov
movsb
push
xchg
xor
mov
dec
dec
divl
test
dec
mov
sarl
aam
lods
nop
cmp
int3
ss
pushf
cmp
jg
pop
and
into
xchg
sub
xor
outsb
scas
jmp
xor
ret
ret
xchg
ja
xchg
shlb
rcrb
in
stos
pop
mov
sbb
xlat
in
pop
mov
xorb
adc
out
pop
jmp
mov
xor
and
or
rcll
in
cmpsb
jp
test
andb
mov
fldenv
mov
test
sbb
rclb
xchg
push
jecxz
add
loope
pop
gs
mov
xor
dec
cmpsb
test
scas
fwait
jge
and
bound
out
sub
mov
and
push
mov
sbb
inc
ds
fcmovnbe
aam
aaa
push
pop
push
outsl
dec
jecxz
cmp
and
pop
das
ds
adc
cmp
inc
mov
bound
test
xchg
scas
out
xchg
scas
mov
dec
divl
mov
push
clc
mov
pushf
sar
rorb
dec
mov
mov
mov
push
jge
xor
mov
mov
and
sub
into
pop
setg
cmp
xchg
js
lret
add
leave
xor
in
adc
jg
and
and
push
xor
imul
jo
stos
btr
add
and
inc
jnp
pop
adc
push
cwtl
push
clc
pop
repnz
cmp
bound
inc
ja
dec
stos
popa
mov
rorl
dec
and
mov
add
mull
idiv
into
xor
outsb
add
adcl
dec
cmp
lea
or
je
outsb
and
sub
ljmp
lods
xchg
in
xor
fisubl
push
mov
sub
pop
dec
mov
mov
int3
mov
into
adc
push
mov
inc
mov
scas
loope
xor
sub
inc
xchg
xchg
jae
cmp
enter
lea
mov
insb
sub
xchg
mov
sbb
pop
ss
aas
jne
add
out
popf
xchg
fstl
xor
rorl
inc
cmc
call
mov
movsl
rorb
pop
xor
rorl
fnstcw
mov
cmp
clc
dec
dec
lods
lahf
int
or
leave
xchg
jae
ljmp
popa
lds
fadds
call
inc
test
js
cmp
or
inc
scas
pop
notl
mov
roll
pop
push
xchg
mov
sbb
push
adc
push
ds
repz
js
inc
push
push
sub
mov
jbe
xor
enter
fsub
jmp
dec
mov
cmp
mov
lds
aad
fidivrl
adc
cld
ljmp
xor
sub
ljmp
ret
ud1
adc
ljmp
pop
xlat
test
pop
mov
popf
gs
pop
or
jmp
pop
stos
add
lock
imul
int3
or
mul
pop
sbb
and
jp
cwtl
pop
sub
cmp
data16
icebp
push
add
pop
ds
adc
lahf
stos
cmp
push
add
sbb
add
mov
out
subb
pop
xchg
jnp
push
ds
sahf
lods
iret
mov
aas
inc
lds
sub
cltd
pop
cmpsl
loop
insl
into
or
loop
into
mov
add
in
leave
shrb
aad
jle
std
pushf
out
mull
fwait
xchg
imul
cmp
or
dec
stc
jg
xchg
imull
testl
mov
or
pop
jecxz
and
leave
mov
sbb
lahf
std
and
orb
push
or
pop
ret
jmp
inc
arpl
pop
lds
push
gs
int3
aad
xor
xchg
iret
aas
shll
daa
xor
ss
hlt
pop
iret
stc
imul
stos
inc
add
mov
data16
pushf
push
sarb
rorl
loop
loop
gs
inc
hlt
aam
rcrl
in
psraw
inc
xor
cmp
mov
add
cmpsl
dec
int
jl
push
mov
cmpsb
loop
mov
or
testl
push
xor
sar
add
push
and
mov
mov
cmp
push
or
ljmp
pop
aas
rolb
adc
rcl
xorl
in
ss
int3
mov
or
jnp
lcall
faddl
clc
inc
or
mov
pop
mov
and
xchg
into
loopne
pop
dec
call
test
fwait
sbb
and
mov
pop
pop
fs
push
and
call
iret
hlt
inc
xlat
xchg
push
jle
les
loope
sbb
cmp
adc
cmp
pop
dec
cmpb
sti
aaa
mov
fistl
enter
push
mov
insb
pop
ds
fldenv
push
add
or
aad
btsl
cs
movsl
adc
enter
push
cli
xlat
push
scas
sbb
push
test
xchg
lds
jle
push
fnstenv
pop
popf
adc
aaa
xchg
push
cltd
add
imul
stos
popf
and
adc
sbb
sbb
mov
xchg
mov
daa
mov
outsb
sub
pushl
loopne
icebp
outsl
ret
sbbl
in
scas
sub
mov
xchg
dec
fdivs
xchg
loope
mov
in
dec
test
int
xchg
cli
mov
or
arpl
in
or
push
repnz
inc
nop
xchg
xchg
mov
jmp
out
cli
cld
icebp
dec
xor
shll
pop
cmp
pop
lds
aas
fistpl
jnp
or
inc
dec
pop
and
mov
add
sub
popa
pop
and
mov
push
repz
xchg
and
loopne
inc
subl
cmp
pop
call
lret
lds
jo
decb
leave
sbbb
inc
mov
ret
or
shll
lods
aad
movsl
es
inc
sbb
xor
divl
in
lcall
in
mov
daa
dec
jg
pmulhuw
leave
xchg
inc
push
cmp
loopne
or
adc
mov
rorb
dec
pop
and
inc
sbb
inc
xchg
loope
sahf
nop
mov
xlat
sub
or
xchg
xchg
mov
sub
ret
push
aaa
lea
bound
out
in
jl
dec
mov
inc
inc
jbe
adc
mov
fsubrs
xchg
mov
cmp
movsb
outsb
add
adc
out
xor
call
test
jns
das
pop
dec
rol
iret
mov
inc
xor
adc
cltd
mov
lahf
ljmp
lods
xchg
push
lcall
or
xor
push
mov
repz
out
cmp
ret
aaa
add
jne
xchg
fs
movsl
outsl
lret
in
stos
je
lods
cmp
fisubrl
sarl
ret
lods
or
sub
imul
imul
insl
sbbb
out
mov
lret
flds
fs
rcrl
ret
push
cmp
cltd
mov
pop
dec
pop
push
clc
loopne
jo
js
popf
fisubl
push
ljmp
imul
rcrl
adc
lret
cld
test
lret
cmp
fnstsw
lock
sbb
xor
cld
aam
sub
mov
mov
mov
mov
adc
lahf
cmp
or
jp
iret
ljmp
mov
mov
and
dec
pop
outsl
cmp
jle
sbb
lea
dec
jmp
mov
push
mov
fdivp
or
jl
movsl
xchg
fidivrs
jno
int3
ds
push
sti
shlb
push
push
xchg
pushf
and
add
pop
jbe
sahf
push
jge
in
mov
mov
sbb
or
scas
xor
pusha
data16
cmp
dec
xor
push
stos
push
mov
mov
test
enter
add
ds
mov
push
pushf
add
incb
and
ficoml
cli
xchg
add
in
sbb
cmp
pop
loopne
or
jbe
js
inc
pop
push
fidivl
sbb
jns
faddl
sti
and
addl
sub
ljmp
dec
fidivl
jecxz
push
rol
sub
ret
addr16
movsb
cli
outsb
mov
pop
and
sbb
ds
cmp
jae
hlt
lret
cmp
inc
xor
test
in
jl
push
inc
pop
mov
icebp
insb
jnp
lods
sti
xchg
mov
std
pop
pop
jnp
out
faddl
enter
adcb
mov
and
cmp
sarl
or
add
cltd
dec
sub
mov
nop
jnp
inc
pop
cmc
and
movb
push
and
sub
jo
loop
mov
xlat
in
fwait
lods
xchg
xchg
lret
adc
addb
scas
out
jecxz
out
jp
lea
in
and
data16
std
lcall
push
loope
hlt
icebp
jno
mov
ret
and
stc
shl
mov
adc
mov
loopne
cli
jg
cmp
dec
shll
pop
jbe
jecxz
dec
bound
adc
arpl
sahf
lcall
push
add
outsb
pop
or
dec
sub
inc
mov
sub
je
bound
jbe
rcl
mov
adc
rclb
movsb
fldenv
pop
repz
inc
jle
jl
in
wrmsr
add
jle
fisttpll
fcmovb
out
pop
jno
xor
test
stos
pop
cmc
dec
imul
sarl
loopne
sarl
sbb
into
lds
xchg
cwtd
outsl
sti
out
inc
push
lcall
push
in
cld
call
sub
inc
and
pop
add
xchg
rclb
pop
lods
jmp
ficompl
aam
jb
lock
loope
push
mov
jne
ss
or
push
mov
push
ret
jbe
lea
pop
mov
mov
out
push
mov
sub
loopne
mov
xchg
push
sarw
and
xchg
cmp
mov
aaa
push
pop
repz
fimull
stos
loopne
iret
and
stc
push
wrmsr
push
pushf
ja
push
cmp
mov
push
daa
outsb
scas
pop
mov
add
mov
vpackuswb
xchg
int3
jns
repz
mov
repnz
jl
ror
into
sarb
shl
adc
dec
mov
test
or
xchg
pop
dec
ror
push
push
mov
inc
mov
out
adc
popa
test
pop
repz
push
push
leave
xchg
sbb
scas
fs
cmp
push
cmpsb
jne
dec
test
xchg
test
inc
into
mov
pop
lds
insb
ja
mov
jg
jne
ja
insb
bound
or
repz
mov
test
pandn
xor
and
aad
aaa
xchg
jo
mov
jne
mov
xor
inc
mov
pop
push
inc
sbb
sub
mov
inc
lods
mov
out
or
add
sub
xor
pop
mov
adc
jb
std
dec
pop
adc
xchg
jmp
gs
xchg
outsl
or
pop
mov
pop
adc
or
ja,pt
mov
push
dec
dec
push
adc
test
clc
aam
ret
daa
out
mov
imul
stos
aad
sbb
push
and
dec
inc
leave
sarl
shrl
mov
jg
sub
stos
and
sub
push
imul
hlt
mov
scas
fiadds
int3
cmpsl
adc
jg
daa
addr16
add
push
xor
int3
jecxz
xor
sarl
push
and
jnp
mov
push
insb
mov
lods
imul
imul
add
pop
repnz
mov
lods
imul
push
lcall
stos
lods
test
stos
or
lret
pop
mov
mov
in
popf
andb
add
jbe
mov
mov
clc
xchg
sar
push
inc
sbb
int
jl
adc
sbb
mov
in
inc
clc
outsb
jmp
lret
repnz
adcb
imul
lret
sahf
pop
pusha
je
xchg
popf
mov
sub
int3
aam
cmp
or
loop
test
jb
pop
je
out
nop
lods
test
cmpsl
jno
add
mov
mov
out
pushf
adc
push
test
dec
jp
jne
dec
dec
int3
fwait
adc
mov
xlat
out
hlt
rcrl
bound
mov
and
lds
loop
rcrl
pop
dec
aas
sbb
fists
dec
scas
jb
add
mov
decb
push
push
adc
adcb
jbe
dec
lcall
mov
adc
addb
aas
mov
pop
or
mov
jmp
arpl
jp
aaa
in
jns
fs
scas
iret
stc
pop
and
mov
push
xor
cmp
loope
outsb
mov
lock
and
jb
loop
lods
test
add
lahf
lret
xor
outsb
in
pop
in
mov
or
stc
mov
nop
cmp
mov
cmp
stc
out
outsl
mov
je
and
sbb
xchg
stos
fisubrl
movsl
and
and
pushf
or
outsl
fstpl
xor
leave
dec
sub
xchg
jecxz
ss
adc
or
add
fists
mov
add
sahf
shrb
xor
lret
ror
sbbb
bound
jb
loop
pop
mov
sub
insb
add
jns
mov
outsb
xchg
mov
cmp
push
add
fsubp
xor
insl
mov
stos
das
mov
shlb
movsl
out
nop
fildll
mov
test
int
push
xor
jg
nop
mov
jge
sbb
dec
nop
fidivrl
xor
fisubrs
mov
rorb
test
and
add
add
stc
out
xor
jge
or
push
push
leave
dec
out
icebp
icebp
outsl
or
popf
pop
int
fsubrs
das
adc
and
jo
cltd
ret
dec
mov
xchg
pop
cwtl
fstps
loop
fsubrp
push
ss
sub
or
cmc
ficoms
rcl
pop
add
jae
adc
adc
mov
aad
cmc
push
sbb
or
dec
mov
mov
xchg
repnz
xchg
enter
xlat
inc
and
icebp
lock
fcoml
inc
xor
mov
xor
push
js
call
cmpsb
mov
shll
mov
in
jns
incl
les
or
mov
inc
insb
adc
test
ja
cmp
rolb
mov
xchg
xor
fldl
imul
jmp
inc
mov
jb
push
mov
repnz
adc
cltd
test
dec
adc
push
repz
jmp
call
pop
mov
xlat
jmp
or
jecxz
dec
cmp
loopne
mov
mov
cli
sbb
stos
int
repnz
or
les
enter
dec
lahf
aas
pop
cmp
ljmp
push
mov
jns
jecxz
sbb
jbe
popf
sahf
sbb
dec
or
sbb
dec
adc
pop
lret
daa
inc
xor
mov
addl
pop
movsb
mov
fucomip
xchg
movsb
xchg
cwtl
inc
pop
loop
sarl
loope
scas
lds
or
aas
out
out
jecxz
repnz
popf
in
push
repnz
shll
xchg
add
lock
ffree
js
push
xor
rclb
add
xor
inc
mov
arpl
cli
mov
inc
adc
imul
mov
scas
sub
into
or
dec
mov
rorb
sbb
dec
pop
pop
push
fmull
sbbl
cmp
jbe
dec
mov
lret
push
inc
or
jg
scas
in
stos
sbb
js
mov
adc
lods
xchg
leave
fldt
sub
mov
lods
cld
les
sti
xchg
cmp
cmp
rorl
jne
push
and
fistl
adcl
shll
cld
jo
pushf
popf
cmp
fldenv
xchg
pop
inc
cwtl
fidivrl
orl
jmp
loope
aad
popa
sbb
dec
sbb
pop
and
sub
cwtl
xor
or
sub
shll
sub
sbb
mov
ds
les
cltd
aad
dec
shll
iret
jp
push
mov
push
clc
lret
add
push
and
sbb
incl
and
mov
mov
bound
loopne
mov
cmp
push
repnz
rcl
frstor
xor
and
mov
jl
push
stos
pop
mov
adc
shld
loopne
pop
test
inc
and
dec
xchg
xor
nop
adc
lods
js
add
sbb
cwtl
sub
jg
xchg
cli
adc
movsl
icebp
aam
xchg
je
out
ss
mov
sbb
lret
dec
test
clc
inc
popa
mov
fdivl
push
adc
scas
lret
xor
sahf
pop
sub
int
cmpsl
and
data16
xchg
mov
jp
pop
cmp
rorb
inc
xor
loopne
imul
dec
repz
inc
and
adc
mov
pop
clc
cmc
mov
in
cmc
sbb
insl
xchg
nop
dec
mov
cwtl
insl
cltd
mov
xchg
push
mov
test
push
popf
cmp
mov
adc
jle
jp
popf
faddl
xor
leave
or
mov
das
jo
cmp
adc
fsubrl
movsl
jmp
sbb
xchg
lods
inc
mov
xor
scas
or
adc
mov
jmp
fsubs
mov
pop
xor
add
or
nop
push
repnz
popa
mov
or
pop
or
and
scas
adc
inc
test
in
dec
or
inc
dec
push
xchg
scas
shlb
loope
jno
dec
fwait
lods
sar
mov
ja
pop
mov
xor
mov
sbb
cmp
xor
or
sub
sub
or
cmp
inc
jecxz
sub
rol
test
mov
and
xor
jl
add
pusha
loop
sub
sti
mov
add
add
jns
out
pop
add
icebp
mov
sarl
mov
lret
out
sarb
adc
pushf
lods
stc
xchg
mov
mov
pushf
es
test
add
push
fmuls
aas
pusha
std
lcall
pop
and
icebp
ja
idiv
in
mov
xor
faddl
std
cmp
push
push
hlt
add
movsl
jg
fsubp
cmc
dec
and
fldt
dec
ja
xchg
sbb
outsb
pop
loope
hlt
jns
pop
jnp
lds
and
mov
rorb
bound
push
dec
into
push
das
addr16
mov
inc
daa
icebp
mov
push
push
jbe
arpl
arpl
faddl
insb
mov
test
mov
outsl
dec
sarb
std
mov
dec
pop
fistpll
push
lret
xchg
xor
sbb
jo
inc
movsb
mov
mov
fsin
push
jne
inc
in
outsl
mov
in
or
fdivrp
mov
cwtl
add
jge
aaa
inc
and
out
inc
mov
xchg
les
mov
push
adc
jle
orl
add
gs
dec
push
daa
fs
lds
and
icebp
in
jno
into
jp
cmp
fadds
push
mov
gs
mov
xchg
sub
shl
adc
sbb
jbe
psllw
push
out
inc
ds
int
cli
bound
es
sub
mov
ret
int
sbb
inc
or
sarl
dec
lock
cmp
sub
sbb
or
inc
fdivs
xorps
mov
inc
cmp
xor
nop
mov
ja
andb
push
push
gs
test
and
pop
fildll
orb
jl
iret
adcl
test
xor
insl
bound
fimuls
dec
rcl
out
sbb
movsl
scas
shlb
pop
dec
pop
sbb
xor
lahf
test
push
pusha
cmpl
fldt
push
out
mov
into
adc
call
pop
jnp
addl
rorl
add
ret
dec
mov
lcall
xchg
rcrb
fs
push
adc
adc
add
jb
leave
nop
cmpsb
xor
insb
and
shll
xor
dec
cmp
filds
adc
sbb
mov
and
idivl
add
xchg
testl
ljmp
dec
xchg
pop
scas
cltd
mov
add
dec
adcl
sbb
jmp
pop
mov
loope
jmp
fs
in
dec
mov
stos
mov
add
cmpsb
nop
ds
leave
imul
repz
stos
lods
cmp
xchg
mov
das
inc
cwtl
pop
in
pop
in
sbb
call
jl
sahf
mov
insl
cmp
add
loope
mov
mov
int3
fidivrs
shrb
sub
mov
pop
adc
mov
sub
inc
cs
rcl
mov
xor
and
pop
mov
mov
loopne
cwtl
push
sahf
into
sbb
loop
cmp
lcall
xchg
cmp
shr
jle
xchg
leave
outsl
jmp
push
fwait
or
cmp
add
or
sub
and
adc
mov
pop
add
stc
sbb
imul
aaa
mov
xor
fildl
sub
mov
out
push
pop
mov
inc
and
fcmovnb
xlat
adc
mov
adc
clts
and
and
pushf
orl
mov
cmp
fnstenv
jmp
dec
jno
xchg
pop
or
pop
push
sub
loopne
sub
cmp
push
aad
adc
mov
gs
push
popf
or
testl
enter
adc
xchg
in
in
mov
lahf
push
mov
popf
push
idiv
nop
das
in
sbb
cmpsl
leave
mov
shl
or
aad
xchg
mov
dec
push
add
idivb
add
push
sub
inc
push
xor
popl
xchg
inc
cltd
movb
sub
test
pop
jo
dec
dec
es
cmp
push
mov
leave
in
daa
cli
xchg
sub
mov
sub
cmp
push
popf
adc
fs
loopne
das
call
in
sbb
nop
aaa
xor
sbb
sub
ljmp
or
loop
in
push
cmp
mov
test
adc
int
adc
mov
jp
xchg
rclb
jnp
xorl
and
scas
mov
cmp
push
in
fs
dec
outsl
jle
pop
jne
or
sbb
and
ljmp
sbb
dec
xchg
ret
loope
stos
xor
cmp
cmc
xor
sub
push
inc
jbe
mull
cmp
mov
movsl
cmp
push
jno
pop
arpl
cmpsl
sbb
shlb
push
das
push
cmpb
pop
mov
inc
cmp
enter
inc
jg
xchg
mov
mov
fcompl
sti
mov
aaa
ja
sbb
iret
cwtl
fldlg2
das
xchg
je
in
mov
repnz
dec
dec
dec
xor
dec
repz
test
jb
mov
dec
lea
js
and
pop
in
and
addl
into
enter
ss
sub
fsubp
xchg
jns
mov
push
inc
sub
xchg
daa
addr16
cmpsl
xchg
mov
js
hlt
mov
call
sbb
jecxz
repz
sbb
cwtl
rorb
dec
jp
enter
fnsave
popl
push
lahf
das
xchg
outsb
add
inc
mov
jle
fisubs
add
out
rcrl
pop
mov
aam
shll
imul
pushf
and
sbb
pop
xchg
lret
sub
cmc
jg
lret
jmp
cld
repz
shll
push
cmpsb
decl
adc
jno
cmp
cmpsb
leave
mov
mov
int
push
gs
incl
jmp
imul
iret
loop
roll
cmc
clc
repnz
dec
jbe
push
jno
sub
and
dec
in
out
cmp
sbb
cltd
rcr
dec
sub
mov
push
push
and
sub
cmp
add
mov
lods
and
mov
or
mov
pop
data16
rcll
cmpsl
push
pop
sub
xchg
iret
pop
test
popa
imul
stos
mov
add
push
push
inc
aas
loope
test
xor
rclb
punpcklwd
shll
addr16
loopne
pusha
out
nop
adc
pusha
outsb
es
xchg
notl
pushf
push
mov
dec
push
add
sub
mov
xchg
xlat
lahf
xchg
mov
xchg
cwtl
rolb
test
cmp
or
rcl
rcrl
pushf
popf
mov
test
imul
pop
mov
push
mov
jl
addr16
and
dec
pop
stos
notl
insl
leave
cmp
pop
push
push
sub
jbe
in
aam
ss
cli
adc
xor
xchg
pop
push
repz
out
imul
scas
ss
or
push
ret
sbb
or
and
xor
arpl
pusha
lds
lahf
es
out
and
jns
pop
lods
lcall
push
push
xchg
or
mov
imul
roll
shlb
gs
mov
arpl
xor
adc
out
or
push
xor
arpl
lods
imul
push
pusha
jb
mov
xor
int3
movsb
rcll
pop
incl
mov
cltd
xor
cmpsl
xchg
cld
sub
mov
xchg
xchg
cs
xchg
repnz
dec
mov
cmp
arpl
ret
mov
mov
dec
jmp
xchg
adc
je
fstpt
in
cmpsb
cmp
sbb
mov
popl
aam
push
notl
jg
pusha
out
and
cld
imul
movsl
lcall
dec
int3
pop
mov
insl
int
shlb
sbb
in
movsl
sub
inc
ficompl
sbb
sub
xlat
mov
mov
mov
mov
fsubrl
lock
cmpsb
xor
and
fcomps
test
push
mov
mov
arpl
iret
push
xchg
xchg
add
jp
and
test
insb
enter
jbe
push
inc
mov
adc
f2xm1
dec
mov
decl
sub
push
fisttpl
sub
lock
test
mov
dec
sub
cmp
xchg
ljmp
fstl
and
test
shlb
cmp
pop
dec
and
or
pop
jns
sub
sti
lock
cmp
rcr
pop
push
in
and
sub
or
pop
fdivr
inc
jo
push
push
lahf
mov
or
pop
add
cs
imul
lods
int
out
das
cmp
xchg
bound
cld
loopne
inc
pop
jg
jb
mov
pop
outsb
dec
loop
jle
inc
clc
scas
inc
xchg
push
inc
or
push
out
cltd
inc
jl
cmp
xor
test
inc
dec
andb
dec
mov
mov
les
std
pop
sahf
fsubp
loope
pop
arpl
test
in
std
mov
sbb
scas
popf
adc
fcmovbe
negb
insl
cmc
in
mov
mov
daa
dec
rcrl
push
adc
enter
pop
jg
or
fldl
xor
inc
jmp
hlt
mov
int3
mov
es
bound
aam
es
test
inc
jb
cmc
and
iret
mov
dec
or
adc
xchg
inc
insb
into
pop
pop
adc
fbstp
out
mov
push
sbb
xchg
mov
ljmp
mov
popf
and
sbb
cmpsl
daa
rcll
dec
faddl
rolb
dec
cli
pop
mov
jl
js
fstpt
ret
loop
test
icebp
and
call
test
jl
add
incb
movb
sub
into
or
es
dec
fs
dec
in
xor
shrb
movsb
sub
cmp
push
fs
mov
and
pop
or
xchg
mov
movl
push
xchg
lods
mov
pop
xchg
fsubrp
lods
movsl
pop
cmp
addl
push
jg
pop
or
out
loopne
stc
sbbb
loopne
cmp
test
adc
imul
add
pop
data16
jnp
dec
loopne
test
jge
int3
repnz
insb
add
stos
in
jl
into
in
xor
adc
dec
pop
mov
movsl
aas
nop
jmp
out
das
mov
movsl
dec
imul
or
jb
mov
in
popf
iret
adcb
insl
imul
jae
sti
jle
addr16
push
fdivrl
jb
jle
push
outsl
fldcw
pop
out
sub
lods
jecxz
inc
mov
call
cmpsb
cmpsl
lcall
or
vmovaps
jns
pop
mov
lods
xor
bound
cmp
and
mov
inc
dec
mov
xchg
cmpsb
stc
add
scas
daa
sbb
std
ljmp
inc
rorb
jp
jl
call
cmp
or
xlat
and
xchg
imul
xor
add
lea
inc
mov
push
lds
filds
pop
mov
arpl
sbb
popa
popa
loopne
fs
jmp
mov
push
xor
mov
aaa
sti
fcmovnu
ret
sub
or
mov
rcrl
filds
or
bnd
and
sbb
aad
xchg
test
push
push
push
call
xchg
stos
add
pop
sbb
push
jg
push
inc
mov
mov
push
loopne
cmp
push
xor
cwtl
pop
dec
inc
sbb
sub
int
lret
adc
inc
andl
jb,pn
xchg
mov
loopne
dec
or
mov
lahf
mov
mov
add
ljmp
int
ret
sbb
jecxz
int
inc
int3
lahf
inc
in
xor
sti
jp
sarb
jle
or
aam
mov
jne
roll
and
push
dec
scas
jg
add
int
xor
cld
pop
fistl
inc
dec
ret
jge
jo
aas
sub
push
scas
leave
sbb
clc
add
enter
test
aas
or
xchg
dec
das
test
fdiv
idivb
adc
cmp
sbbb
mov
adcl
mov
je
bound
sbb
cmp
mov
push
mov
sbb
push
and
cmp
sub
push
mov
jns
mov
imul
push
dec
cltd
pop
sbb
ss
jns
push
lcallw
popf
cmc
ds
rcr
scas
sbb
clc
mov
jae
ret
scas
shlb
rcl
cltd
xor
pop
lock
es
pop
pop
xlat
rclb
mov
insb
loope
fwait
xchg
jl
cmp
mov
es
sub
clc
fnstenv
jg
int
pop
in
adcb
les
sbb
push
movsb
adcl
xor
pushf
lcall
fsubl
mov
loop
clc
cs
jmp
data16
push
popl
xor
mov
test
arpl
sti
mov
mov
xlat
mov
push
ljmp
jo
mov
sbb
jmp
adc
jns
popf
sbb
xchg
addr16
stc
add
adc
jbe
sarb
clc
sbb
or
fsubrl
flds
mov
lret
mov
push
xchg
je
mov
cmp
lahf
mov
les
repnz
xchg
pop
and
mov
aad
ljmp
jg
jno
or
adc
add
pusha
out
sbb
test
lods
xchg
xor
jnp
iret
pop
mov
inc
mov
daa
and
pop
leave
inc
jmp
mov
cli
mov
push
mov
xchg
sbbl
shlb
mov
cltd
inc
movb
dec
mov
daa
or
push
xchg
jl
pusha
lcall
mov
xchg
scas
leave
mov
scas
or
cwtl
or
dec
pop
ss
ljmp
sbb
jbe
lret
or
jno
jo
add
push
mov
bound
jmp
xlat
sub
cwtl
fldl
sbb
scas
ret
scas
lock
adcb
inc
and
fisttpll
idivb
xor
daa
pop
jecxz
insb
lods
sub
add
adc
push
movsl
arpl
cs
inc
test
stos
jge
jne
mov
es
mov
aad
inc
xchg
pusha
fcmove
clc
or
dec
adc
mov
lea
sub
rcrl
xor
stc
jo
pushf
int3
and
sub
pop
jle
aad
dec
inc
mov
inc
add
loop
jp
sub
inc
ds
aam
sub
scas
add
inc
xchg
dec
bound
or
adc
push
jb
or
xchg
push
orb
inc
insl
lods
xchg
push
nop
lea
mov
jb
dec
enter
pop
sub
outsl
loopne
sub
mov
lods
loopne
mov
in
mov
lret
insl
cmp
mov
push
xchg
shrl
pop
xchg
cmpl
xchg
into
cmp
stos
or
xor
fwait
or
loope
movsl
jb
inc
mov
fwait
aaa
cmp
aas
ss
into
dec
insl
lods
imul
roll
sub
cmpsl
arpl
ljmp
leave
xchg
ja
mov
xlat
subb
insb
cmp
in
push
jmp
fsubrs
pop
mov
pusha
div
pop
sub
xchg
mov
gs
cmp
int3
push
fmuls
fimuls
pushf
enter
jne
in
pop
aad
dec
xchg
and
dec
sub
lea
in
and
lea
stos
push
fldl
les
int
pop
sub
lcall
add
in
dec
inc
shrl
jbe
imul
fwait
jo
xchg
sbb
push
test
lret
jne
adc
pop
mov
fidivl
inc
cmp
jno
loopne
faddl
arpl
test
std
fldenv
dec
cltd
xor
push
stos
jae
jo
idivl
dec
cmp
cld
mov
sbb
dec
out
pop
es
jp
mov
rorl
pop
stc
rolb
ljmp
hlt
push
cmp
sub
cmpsb
fstl
cmpsl
mov
or
je
movsl
loope
mov
rcll
cs
mov
pop
push
into
pusha
cli
rclb
pop
mov
jno
xor
mov
test
xchg
shlb
outsl
int
mov
fs
mov
nop
neg
mov
mov
jg
add
fwait
adc
stos
jge
in
popf
inc
jns
retw
hlt
mov
jg
push
bound
adc
jnp
shll
sahf
movsl
push
cmpsl
mov
add
stos
lods
push
fdivp
xlat
xor
rcl
push
fadds
in
jge
push
aaa
inc
add
mov
xor
mov
cld
cltd
lret
xchg
bound
das
fs
add
inc
js
fwait
inc
inc
leave
out
iret
clc
xchg
jae
mov
or
inc
and
jnp
pop
cmpb
pushf
push
mov
mov
into
scas
jo
xor
cmpsl
shrb
rcrl
xchg
jp
xchg
das
sub
or
sbb
pop
lahf
dec
xor
and
nop
pop
lret
test
out
pop
aam
fwait
push
add
or
cmpsl
dec
stos
jbe
push
test
push
inc
cs
pop
inc
dec
xchg
push
leave
fcompl
xor
inc
mov
into
imul
pop
push
roll
mov
out
mov
jbe
mov
enter
xorb
jle
pop
or
jbe
rorl
jg
int3
dec
in
dec
pop
dec
xchg
add
cli
shll
fisttps
lret
je
dec
filds
cmp
mov
jmp
imul
stos
jne
and
sbb
rorb
nop
aaa
and
movsb
mov
popf
push
or
add
test
jo
xchg
cmc
adc
mov
addr16
shlb
mov
and
ds
dec
loopne
lret
cmp
xchg
movsl
and
pop
lds
add
jl
mov
add
dec
loopne
sub
mov
or
xor
mov
sub
nop
sub
repnz
sahf
cmpsl
push
mov
jmp
loope
mov
mov
jnp
dec
ficomps
or
dec
ss
push
cmpsl
or
int
cltd
pushl
scas
push
push
in
fidivl
enter
sbb
insb
adc
lcall
stc
cli
pop
lock
mov
sbb
movsl
adc
adc
sub
ret
lcall
inc
inc
mov
mov
sbb
mov
mov
push
mov
adc
push
xor
sbb
es
or
jl
xchg
ljmp
outsb
shll
mov
mov
scas
popf
ljmp
leave
add
stos
push
and
leave
js
loope
and
je
adc
mov
es
cmovb
pop
stos
stc
pop
ljmp
js
cmc
pop
or
outsl
xchg
arpl
inc
ret
repz
mov
adc
pusha
jnp
mov
adc
xor
cli
fcompl
inc
testb
sbb
popf
push
dec
mov
add
adc
rolb
out
bsr
pop
fsubr
aam
push
imul
sub
xchg
and
xlat
push
sub
adc
shlb
mov
adc
call
xor
inc
adc
inc
clc
in
cmpsl
sbb
jno
fistpl
stos
call
stc
inc
arpl
mov
xchg
or
cmp
push
test
fstp
pop
ret
int
mov
enter
cwtl
int
sub
mov
clc
scas
xchg
mov
mov
leave
dec
inc
cltd
pop
in
div
insl
dec
dec
outsl
push
pop
fisubl
cltd
das
xor
scas
mov
push
pop
cmpsb
das
mov
mov
pop
mov
iret
push
leave
push
mov
jl
insb
dec
lcall
mov
neg
shrl
push
mov
mov
data16
adcl
inc
pusha
add
xchg
lods
ds
prefetch
or
imul
dec
mov
scas
sbb
sub
mov
push
pop
xor
hlt
inc
xor
inc
inc
outsl
arpl
mulb
jnp
dec
jge
out
xor
ret
xor
add
add
sbb
dec
imul
mov
aas
test
lods
ljmp
out
jno
aam
ss
inc
cmp
sbb
or
pop
movsl
and
sub
shll
lahf
jno
mov
inc
je
ficoml
sahf
cmc
setns
test
or
fcmovnu
sub
into
xorb
or
jbe
sbb
pop
mov
scas
pop
arpl
fst
icebp
iret
add
out
adc
popa
fwait
sbb
in
cmp
push
mov
inc
ret
dec
adc
popf
xor
push
cmp
mov
sub
pop
mov
inc
xchg
fnstsw
repnz
data16
hlt
ja
out
les
pop
popf
sti
push
rcr
mov
inc
stos
and
mov
pop
pop
mov
or
in
xorl
inc
xchg
dec
fnstenv
subb
fldt
das
shl
push
sahf
cs
rclb
and
adc
xor
jo
push
xchg
jg
push
mov
fucomip
mov
addr16
xchg
jmp
push
stc
cwtl
lods
mov
repnz
in
jno
cli
or
loope
xchg
orb
mov
add
cmp
ret
dec
rcr
xchg
adc
mov
push
or
out
push
jle
je
fdivl
loope
cmp
ret
test
mov
inc
rcr
cmp
dec
movsb
rcll
adc
mov
jne
xchg
pop
mul
cmp
xor
ret
push
popa
jbe
adc
jle
jbe
mov
cmp
xchg
ljmp
cmp
ss
inc
aaa
std
in
xchg
stos
push
cmp
pop
xchg
shll
pop
sub
sbb
jns
movsb
pop
hlt
loopne
pop
adc
out
mov
sub
scas
fwait
aaa
adc
nop
rcrl
repnz
aam
sub
pop
or
jl
xlat
xchg
sbb
sbb
jmp
in
mov
inc
mov
sbb
mov
xorl
out
emms
adc
dec
mov
int
and
fimull
sbbb
xchg
mov
dec
fidivrl
jecxz
jl
fs
pop
push
dec
pop
xchg
iret
jnp
inc
jge
enter
xchg
push
or
shr
stos
add
aaa
movsl
sti
imul
es
sub
push
push
mov
jg
lock
fbld
cs
stc
inc
mov
xchg
outsl
dec
jmp
nop
push
clc
sbb
dec
subl
pop
xor
add
js
imul
clc
pop
fwait
popf
addr16
lea
xchg
cwtl
cmc
inc
pop
jg
push
std
xchg
sub
dec
xor
rorb
cmpl
jno
jne
jae
dec
cmp
fsubrl
loop
pop
xor
pop
inc
fwait
and
arpl
rcrb
fs
aas
cmp
cmp
aam
xor
andl
or
mov
das
call
mov
mov
stc
xor
adc
jb
and
daa
mov
sbb
stos
mov
sub
stos
cmpb
xchg
mov
sub
xor
mov
clc
and
xchg
mov
rcrl
test
repnz
push
mov
hlt
mov
push
xchg
mov
inc
movsl
mov
push
ja
not
pop
in
push
push
mov
cmpsb
test
scas
adc
out
mov
fdivrl
or
cmpsb
les
imul
insb
jge
jp
jge
inc
scas
push
xor
repz
jp
add
cmpsb
or
jbe
mov
push
rorl
sbb
xor
out
dec
or
test
jmp
mov
subb
jle
xor
repnz
test
pop
sbbl
lock
sub
repz
pushf
popl
xor
or
shlb
enter
mov
xchg
rol
jb
pop
mov
subl
and
aaa
jg
int3
pop
cmpl
jb
mov
mov
sub
push
mov
mov
rcrb
or
or
sti
pop
push
outsl
add
jl
add
adc
cmp
repz
jne
scas
sbb
xor
stos
add
aad
dec
sbb
mov
mov
jg
mov
adc
ss
inc
imul
mov
lods
or
mov
je
leave
push
dec
adc
ret
add
jns
push
jae
cmp
mov
push
leave
dec
mov
mov
sbb
mov
lcall
inc
aad
push
or
or
mov
outsl
cmp
into
xor
frndint
pusha
stos
xor
fcmovnb
adc
adc
inc
inc
jmp
or
cmp
xchg
in
scas
xchg
xor
pop
xor
inc
sbb
fwait
aam
clc
jecxz
aad
popf
pop
mov
cwtl
sbb
dec
pop
cmp
or
push
gs
mov
xor
lahf
xor
dec
call
lods
imul
or
add
jg
addr16
enter
inc
jbe
insl
push
sub
pop
nop
out
pop
and
push
jmp
dec
lret
iret
push
mov
and
push
push
pop
sbb
and
popa
and
or
pop
sbb
jns
push
inc
scas
in
cs
out
pop
jl
cmp
das
ret
adc
mov
idivb
mov
mov
imull
sub
push
mov
lcall
int
jb
int
in
mov
test
mov
andb
out
cltd
sarb
popl
push
push
or
mov
xor
inc
cmc
cmp
sub
fdiv
sarl
insb
ret
cmp
test
mov
cmp
xchg
scas
emms
jno
xchg
sbb
ss
fstl
sbb
adc
cli
add
fwait
je
sti
into
ret
in
add
sbb
cmpsl
mov
mov
daa
add
push
adc
daa
lcall
lods
adc
push
stc
rcrl
shll
ret
push
mov
inc
jnp
mov
cs
test
pop
add
sbb
rep
sar
dec
jae
add
xor
cltd
adc
and
pop
outsl
mov
mov
lods
sbb
loopne
mov
in
fisubs
dec
push
or
out
jne
movsl
es
adc
mov
push
ret
mov
inc
xchg
aam
andl
mov
lea
popf
cld
adc
mov
pop
cli
arpl
lret
xor
pop
test
test
ret
sub
cmpsl
mov
jl
int3
es
pop
and
mov
pop
std
outsb
or
out
call
and
and
mov
sti
sar
xchg
xor
fidivrs
lea
xor
push
xchg
or
aam
bound
xchg
or
dec
hlt
push
push
fwait
mov
mov
xchg
inc
pop
add
adc
xlat
and
xchg
pop
pop
dec
icebp
pop
cwtl
cmc
mov
das
or
and
sbb
mov
inc
sbb
popl
mov
mov
call
icebp
dec
pusha
fs
cmpl
push
shll
dec
add
popa
mov
and
and
cmp
or
sbb
rcrl
cmp
gs
cmp
cli
adc
cmpsb
mov
xchg
stos
jns
hlt
adc
repz
pop
mov
sbb
or
imul
cmpsb
fs
fistpll
sbb
inc
repz
xor
cltd
cmp
push
fmull
mov
rclb
jl
mov
repz
cmp
jle
scas
fnsave
cmpsb
and
cmp
cwtl
dec
outsl
call
push
and
mov
insb
xor
mov
sarb
je
mov
cmp
outsl
jmp
and
stos
ljmp
sar
mov
outsl
pop
shrl
inc
cmc
jl
or
out
adc
out
mov
jo
and
scas
inc
dec
movsb
and
lret
cmp
dec
and
sar
fs
test
cmp
imul
andl
adc
and
ss
push
daa
fidivrs
fwait
push
cmp
push
mov
lds
jbe
mov
mov
iret
inc
aam
inc
aad
xchg
adc
dec
flds
adc
in
mov
negl
push
int
in
jp
lahf
and
int
pop
cmp
fiadds
cld
pop
push
in
cmpsl
dec
and
jl
aaa
pop
mov
mov
xchg
cmp
mov
and
fwait
and
cmpsb
jb
movsb
push
iret
fimull
sbb
pop
xchg
pop
mov
movsl
loopne
push
inc
and
test
mov
insl
out
pop
fcomp
xor
sub
test
pop
mov
cli
fsts
aas
pushf
dec
std
pusha
push
jl
js
push
lret
pop
push
ds
push
leave
es
enter
adcl
jns
shlb
xchg
mov
pop
stc
pop
stc
push
mov
test
popf
cs
aas
lds
ret
jne
or
mov
std
bound
mov
mov
loop
xor
std
jmp
mov
pop
xchg
idiv
cmpb
xor
shlb
mov
or
and
mov
push
pop
mov
add
xchg
outsb
adc
pushf
arpl
adc
loope
cwtl
insb
das
jmp
cmp
push
pop
jo
insb
pop
cmp
jb
sub
sub
mov
aad
or
call
cmp
divb
cmc
stos
pop
stos
scas
cmp
repnz
mov
mov
fsubrs
popa
xchg
pop
or
cmp
cmp
sbb
scas
mov
xor
mov
and
sub
sub
ss
sbb
push
mov
or
mov
in
add
adc
sub
xor
shl
jb
mov
negl
push
and
icebp
les
divl
je
pushf
mov
xor
inc
dec
aad
shll
aaa
das
stc
test
or
cld
sbb
sbb
stc
cmpsl
adc
mov
sarl
xlat
mov
mov
fists
pop
popf
adc
xor
cmp
test
in
outsl
push
mov
xchg
sub
hlt
loop
or
jmp
or
sbb
cmp
cmp
lret
mov
out
rcr
adc
xor
push
mov
xlat
xor
repnz
pop
insb
pop
push
pop
or
xchg
or
sub
adc
ja
lret
stos
ror
pop
dec
pop
adc
pop
xchg
xchg
addb
int3
cs
cwtl
jmp
xlat
mov
incl
xchg
iret
mov
pop
mov
out
nop
pop
cltd
cmp
stos
inc
iret
or
sbb
cmp
inc
lock
out
jb
push
add
cmpsb
add
lret
jmp
jb
and
je
es
push
xchg
jae
stc
mov
jae
dec
outsl
xlat
in
nop
adc
insb
add
jl
rorb
push
adc
popa
into
cmp
sbb
jecxz
sbb
fwait
xchg
mov
in
xchg
lock
cmpsl
pop
dec
xchg
dec
mov
xchg
imul
push
or
stos
inc
and
ss
inc
jmp
int
pop
imul
test
out
nop
js
xor
mov
sbb
xchg
hlt
dec
jge
jo
jns
repnz
les
mov
fcmovb
dec
sbb
lret
jo
inc
sbb
xchg
mov
aas
in
outsl
and
mov
aaa
and
or
fcmovnu
pop
sbb
jge
ret
push
fdivrl
ret
push
inc
test
lods
pop
push
test
negl
or
inc
dec
stc
cld
daa
push
push
outsb
insl
out
xor
sahf
sbb
push
in
je
xchg
lret
sbb
andb
xor
jnp
jbe
push
push
aam
jne
enter
js
mov
lahf
inc
inc
mov
out
hlt
sbb
jb
scas
lods
les
pop
sub
push
movsl
repnz
inc
ror
xor
adc
fnsetpm(287
mov
shl
mov
lds
ret
cltd
jnp
loope
shll
stos
mov
clc
dec
inc
test
aaa
sub
push
dec
andl
fwait
aam
into
jl
adc
sbb
pop
add
lret
mov
push
lds
cmpsl
pop
mov
inc
mov
add
in
adc
test
mov
inc
bound
ret
mov
jecxz
decl
out
fwait
hlt
scas
dec
enter
inc
xchg
std
mov
inc
mov
and
sub
xor
push
push
mov
and
shlb
cli
mov
push
add
mov
mov
repz
or
and
sti
cmp
loope
mov
mov
mov
sahf
sub
lea
mov
jae
inc
pop
sahf
jmp
pusha
mov
scas
lea
dec
test
dec
pop
into
js
scas
dec
out
push
cmpsb
lret
das
mov
rcll
sub
jb
mov
cmp
or
cmp
push
pop
mov
cmc
or
fstps
shrb
or
das
test
les
dec
test
lods
xchg
cmp
inc
repz
or
stos
mov
or
inc
mov
lods
push
enter
test
xor
fsubrl
mov
xchg
mov
pop
push
lret
hlt
sub
popa
sub
pop
insb
repz
mov
push
jo
xor
jg
enter
loope
dec
push
enter
xchg
aad
int
adc
roll
fwait
fs
add
jge
cmp
loope
xor
rcll
jae
loop
xor
xor
sub
add
sbb
push
enter
cs
adc
shl
or
arpl
mov
scas
addr16
daa
in
stc
push
loop
jnp
insb
pop
mov
cltd
sub
inc
pop
lock
rolb
rcrl
ljmp
add
jg
adc
lds
outsb
stos
push
imul
or
adc
outsb
aad
aam
movsb
cld
xlat
push
scas
push
mov
xor
test
push
mov
mov
push
or
inc
imulb
ret
inc
pop
das
push
mov
mov
or
cmp
lcall
adcb
cltd
int3
out
popa
jns
jae
scas
mov
sahf
mov
xchg
lret
aas
pop
dec
cmp
sbb
arpl
pushf
sub
fadds
pop
xchg
loop
ret
jle
arpl
push
rclb
mov
nop
sbbl
daa
arpl
mov
fiaddl
dec
push
lret
ficoms
mov
pop
adc
push
and
mov
pop
sbb
mov
jge
sub
xchg
fs
cmc
cmc
sbbb
and
stos
std
popa
cmp
jmp
std
movsl
xor
mov
jae
dec
hlt
sbb
inc
loopne
xchg
movsb
cmpsl
out
repz
xchg
push
push
scas
xorl
insl
mov
add
pop
sar
iret
add
sub
inc
sbb
popa
mov
mov
loop
and
cmp
clc
pop
fisttpll
cmpsb
arpl
pop
sbb
testb
dec
sub
jae
pop
pop
lods
xor
pop
or
cmp
push
dec
push
cs
add
cmp
sti
std
dec
mov
or
cmpsl
jo
inc
insb
mov
push
mov
ja
mov
add
sub
fimull
fstl
repnz
push
sub
mov
dec
sbb
xchg
loop
jge
add
inc
cltd
jo
cmpsl
xlat
dec
add
push
addl
sub
ret
and
adc
adc
and
dec
pop
mov
sub
or
push
cmp
and
outsb
in
scas
shr
les
mov
mov
xchg
xor
push
push
ds
shr
rorl
adc
testb
push
sarb
dec
inc
xchg
adcb
push
cwtl
jmp
xor
cmp
inc
cmp
dec
cmp
stos
pop
mov
test
jno
shrb
adc
pop
push
xchg
lods
lock
arpl
sbb
negb
sbb
sub
or
adc
stc
sarb
rorl
ret
cmp
fstpl
mov
push
xor
call
mov
sbb
sbb
adc
inc
lahf
retw
jp
or
jbe
cmc
sub
sbb
sub
test
cmp
push
mov
out
mov
lcall
cld
js
mov
fsub
out
arpl
ret
jg
add
xchg
aas
push
mov
cmpb
daa
or
pop
int3
sbb
cltd
scas
dec
out
adc
repnz
jle
cltd
in
sub
sbb
ljmp
insl
pushf
mov
in
in
mov
xchg
insb
enter
pusha
mov
pop
pop
or
cmpsb
jg
pop
sarl
iret
aam
push
cmc
jb
adc
inc
inc
in
and
mov
inc
cmp
mov
push
sarl
insb
ror
es
jb
jle
mov
gs
call
shrl
stos
out
mov
in
xchg
sarb
out
inc
js
jmp
call
mov
loop
adc
fbld
sbb
adc
call
dec
addl
push
pop
push
les
ficoml
and
cmp
scas
mov
scas
sbb
fsubrs
cwtl
ret
fisubrl
lea
xor
dec
jg
jno
cld
data16
lcall
add
mov
pop
cmp
mov
inc
push
jae
pusha
sub
cmpl
sbb
pop
mov
in
dec
shll
scas
push
arpl
les
cltd
ss
aaa
cs
ja
mov
lds
mov
mov
mov
sub
sti
mov
inc
dec
and
xor
cmp
adc
sbbb
pop
jp
enter
fistpll
sbb
xchg
pop
call
leave
inc
jne
xchg
sbb
hlt
subb
imul
enter
add
mov
fs
mov
sarb
sbb
cmp
imul
mov
lods
sbb
dec
push
mov
fnstcw
mov
push
orl
or
cmpb
adc
sti
cli
dec
mov
cmp
or
add
gs
fsts
mov
or
fcoml
int
inc
xchg
jno
pop
adc
pop
inc
push
and
pop
call
mov
pop
adc
aad
incb
insb
push
inc
jnp
orl
sbb
aas
fcomps
test
pop
stos
mov
xor
push
sti
push
sub
jne
and
lock
or
rorl
inc
or
xchg
adc
xchg
fnstenv
int
add
dec
jnp
fcmovne
pop
dec
cli
push
xchg
jecxz
pop
xlat
push
aad
push
orl
push
mov
ret
inc
repnz
scas
mov
test
lods
sub
dec
mov
push
mov
mov
out
xchg
mov
inc
icebp
jecxz
mov
clc
mov
xor
dec
arpl
xchg
inc
pusha
daa
sub
add
and
ljmp
mov
dec
decl
xor
scas
jle
cwtl
das
aad
orl
and
mov
mov
mov
lock
ljmp
mov
insb
sbb
aad
mov
mov
pop
xlat
in
xchg
add
jno
add
and
imul
push
les
popa
cmpb
imul
imul
popa
stos
leave
jmp
pop
fs
stos
lock
and
lods
call
lret
insl
xor
pusha
push
movl
fsubrs
ljmp
outsl
jno
dec
push
mov
xchg
movsl
pop
outsl
pop
xchg
in
push
xlat
mov
and
es
dec
ficoms
cmp
inc
adc
xchg
lcall
mov
inc
mov
add
idivl
mov
mov
add
jge
mulb
fistpll
test
sbb
jae
and
inc
jge
shlb
or
ret
push
ds
pushl
lret
dec
stos
xor
call
shl
mov
inc
enter
rol
fwait
rcrb
ret
and
jns
or
pop
jb
repnz
scas
or
jno
mov
jp
xchg
int
mov
push
cld
cmpl
jecxz
sbb
aad
repnz
dec
pop
gs
inc
or
aad
push
mov
add
mov
jns
pop
cwtl
inc
pop
mov
mov
data16
cltd
sbb
ss
call
or
add
rcrl
cltd
leave
mov
add
cmc
mov
dec
pop
out
mov
inc
mov
jo
jo
dec
sub
add
clc
pusha
outsl
repnz
or
pop
inc
or
xchg
sub
sub
mov
repnz
mov
mov
das
clc
mov
imul
and
negl
add
repz
xchg
xor
push
ret
mov
dec
xchg
cmp
and
rorb
std
dec
aad
notb
xadd
aad
xor
loopne
jmp
fnstsw
and
mov
sub
iret
sbb
jp
les
adc
jns
mov
outsl
sbb
push
cld
sbb
test
hlt
adc
adc
push
loope
loope
test
inc
dec
mov
shr
sub
jns
in
fwait
push
dec
add
or
xor
out
push
mulb
les
dec
or
push
sub
test
cltd
jo
ret
cmp
lock
hlt
test
jnp
push
repnz
jmp
js
std
aaa
xchg
sub
imul
or
lret
add
inc
push
icebp
outsl
nop
lods
jge
scas
bound
push
icebp
sbb
or
push
xchg
stos
test
les
dec
fnstcw
jp
mov
push
ja
cld
stos
sbb
call
fsub
push
sbb
push
ret
sbb
fcoms
cli
push
sarb
or
aad
dec
pop
in
push
push
fsubrp
inc
mov
mov
inc
scas
xchg
adc
jb
xchg
cmp
out
loope
test
dec
ret
fcoms
fisubs
popa
jne
mov
int3
cmp
test
and
mulsd
sarb
pop
psrlq
test
cld
pop
in
int3
ficoml
mov
xchg
cmp
xor
xchg
sbb
and
add
xchg
addr16
push
les
outsb
xor
jmp
jbe
sbbb
mov
or
ja
daa
mov
cmp
pop
or
ficompl
mov
aam
pop
mov
and
dec
insl
push
and
aam
cmp
or
jae
jle
jp
lret
std
mov
add
xor
sarl
into
inc
imul
jbe
mov
push
mov
mov
cmpsl
pop
stc
push
clc
add
mov
or
cld
xlat
dec
pop
hlt
rorl
int
xchg
push
pop
out
pop
test
inc
dec
cltd
sub
addr16
enter
fildl
jle
xor
je
mov
jge
das
sbb
jo
pusha
add
adcb
mov
arpl
sarl
adc
sub
push
add
int
jg
and
rorl
pop
dec
xchg
push
mov
sub
push
movsb
popa
rcll
mov
jecxz
jl
sub
adc
sbb
out
sbb
push
sub
mov
mov
loop
add
fadds
jecxz
mov
rdtsc
jmp
push
test
cmp
and
daa
ret
nop
out
inc
xor
lods
jle
mov
jo
movsl
test
pop
or
jns
rcr
xchg
test
inc
test
adcb
sub
ret
jb
out
outsb
dec
ja
nop
mov
jns
sub
lea
roll
push
sbb
jecxz
push
fisttps
leave
sub
mov
dec
pop
dec
sbb
sbb
cwtl
out
popf
add
xchg
push
and
cmp
add
adc
inc
or
and
xchg
mov
gs
fucomi
test
in
and
mov
arpl
scas
and
push
rcl
push
lods
sbb
dec
xchg
push
into
into
ljmp
shl
mov
pop
push
clc
cmp
mov
add
mov
dec
sub
jp
mov
gs
rclb
mov
ja
cmpsb
jge
adc
cmpsb
andb
filds
push
sub
push
jg
fwait
xchg
sti
jg
icebp
adc
addr16
mov
mov
mov
add
mov
lret
pop
add
xchg
or
stos
xchg
data16
scas
and
sahf
jbe
xchg
cld
mov
fs
out
push
cmp
sahf
push
dec
iret
adc
adc
dec
call
dec
and
shrl
lret
and
rclb
add
push
or
in
jle
in
nop
cmp
jecxz
and
das
pop
out
ss
imul
dec
mov
icebp
pop
adc
add
lret
push
sbb
and
sarb
rcl
outsb
xor
adc
push
hlt
andl
shrb
mov
and
cs
push
push
int3
ret
and
mov
inc
mov
push
imul
sub
push
fwait
pop
ljmp
push
and
mov
add
mov
dec
or
ja
xlat
inc
xor
and
pushf
aam
add
dec
xor
out
jmp
sahf
mov
fstl
add
pop
jle
mov
rcrl
inc
mov
pop
mov
push
pop
in
pop
daa
mov
pop
xchg
iret
or
mov
mov
movsl
imul
xor
push
aaa
xor
mov
dec
cli
icebp
push
mov
outsl
cltd
mov
addr16
cmpsb
mov
push
lcall
insl
mov
mov
nop
add
jg
or
roll
sbb
jmp
jecxz
sub
cltd
pop
popf
bound
mov
stc
ds
mov
repnz
mov
pop
leave
out
cmp
repnz
mov
popa
enter
or
jbe
imul
inc
pop
cmp
sbb
insb
dec
dec
mov
in
lcall
mov
lock
push
dec
popa
mov
jl
dec
test
clc
dec
add
lock
stc
stc
sbb
xchg
out
push
sbb
jno
cli
or
push
dec
add
movsl
das
mov
xor
pop
inc
lods
sbb
lea
mov
xchg
shlb
jb
out
push
data16
loope
das
add
fs
arpl
enter
push
adc
lock
ds
pop
mov
jbe
outsl
adc
cmc
sti
fsubr
testb
shrl
std
cmp
gs
xor
jecxz
sub
xchg
sub
aaa
adc
div
push
popa
adc
ja
jmp
jg
cmpsb
push
shrl
imul
xorb
int3
int
leave
insl
dec
jg
jg,pt
movsl
clc
xchg
call
or
in
dec
wrmsr
jae
or
mov
in
jb
test
loope
loop
push
mov
add
daa
mov
mov
ret
sub
lahf
outsl
xorl
push
in
jae
xchg
push
xor
mov
dec
imul
pop
push
decl
arpl
sub
dec
adc
push
cmpsl
ljmp
imul
xor
in
fs
jmp
sbbl
dec
jnp
outsb
jae
int
movb
sub
lds
insb
imul
inc
push
xchg
jl
hlt
mov
pop
lds
in
mov
xor
add
sbb
shrl
popf
inc
fstpl
dec
mov
cs
mov
notl
gs
push
xchg
jmp
jnp
lock
push
aad
icebp
out
pop
xlat
lods
popa
pushf
xchg
inc
in
pop
in
dec
ja
insb
xchg
loop
and
adc
xchg
fmul
add
cmp
add
mov
pop
sbb
push
int3
jge
jp
pusha
popa
push
and
mov
inc
out
popa
aad
insl
adc
xchg
adc
or
dec
pop
stos
and
dec
jnp
hlt
jmp
das
ret
inc
and
bound
pminub
aas
mov
or
mov
cli
jns
mov
mov
fcmovnb
es
shl
pop
xchg
or
lods
cli
cltd
jge
rorb
daa
imul
jnp
jp
test
icebp
xor
cmp
adc
and
mov
sub
daa
call
dec
adcb
and
imul
jmp
jge
or
jb
cmp
repnz
jb
jp
cwtl
push
clc
push
lds
sbb
sbb
das
int3
rolb
xor
imull
pop
jae
std
loop
sub
lcall
lret
daa
add
push
pop
pop
and
dec
std
inc
sub
push
pushf
push
jecxz
in
push
mov
xchg
xchg
or
dec
cmc
xor
repz
add
gs
sub
jb
mov
bound
cmp
cmovnp
add
shl
xor
stc
xchg
xor
sbb
and
lea
int
gs
jl
adc
mov
mov
movaps
push
mov
leave
int
mov
test
push
mov
xor
movsl
enter
in
adc
push
or
fistpll
pop
sub
or
lret
fadd
std
xor
push
lock
adc
fs
bound
rcrl
test
test
mov
and
add
xchg
out
push
fcomi
mov
test
daa
cmp
jp
jg
inc
fwait
es
and
ja
xchg
push
insl
pop
movsl
scas
addb
mov
xchg
or
rcrl
lcall
dec
leave
sub
insb
push
dec
lcall
push
lahf
and
xchg
xor
pop
lea
testl
in
stc
xchg
dec
xor
inc
and
inc
xor
sub
and
dec
int3
or
arpl
xlat
push
mov
into
out
addb
push
mov
mov
stos
mov
mov
cmp
push
adc
fmuls
sbb
xchg
call
popa
pop
pop
mov
xchg
mov
jmp
lock
dec
push
adc
fimuls
mov
lock
sbb
insb
sarl
into
mov
adc
pushl
push
hlt
testb
inc
jbe
push
popf
pop
jbe
jp
xchg
add
popf
rcll
test
push
lahf
fs
adc
pop
mov
xor
mov
nop
xor
push
pop
stos
push
push
call
jmp
push
shll
leave
movsb
aaa
lock
outsb
arpl
lahf
arpl
xchg
je
fldt
push
xor
inc
into
cmp
dec
hlt
ljmp
stc
insb
push
xlat
or
adc
outsb
int3
mov
or
cmp
enter
fistl
mov
add
jmp
ret
popa
mov
loopne
mov
jo
fisubrl
dec
mov
test
lahf
fisubl
dec
aam
or
add
je
jg
or
xchg
daa
pop
adc
scas
scas
outsl
repnz
shrb
loopne
iret
stos
mov
push
sub
push
sbb
fs
cmpsb
adcb
xchg
imul
test
sub
es
frstor
xor
push
xor
int3
dec
cld
insl
add
call
inc
and
in
mov
cmp
adc
aam
sbb
mov
cmp
cmp
sbb
test
test
mov
add
lret
adc
pop
xchg
adcl
xchg
mov
repz
pop
fcmovnu
and
push
daa
fistpl
movsl
or
and
test
aad
fsub
sahf
push
hlt
or
ds
fdivl
cbtw
or
pop
and
frstor
sbb
ljmp
into
mov
popa
xor
mov
imul
cmp
dec
adc
imul
sbb
add
xchg
sbb
xchg
jnp
sbb
or
sbb
daa
add
dec
outsb
fldcw
orb
xchg
shlb
popa
movsb
ffreep
mov
mov
push
and
loop
xchg
pop
addr16
jae
into
pop
mov
insl
ds
clc
outsb
and
es
in
jle
cmp
rcll
dec
push
lods
cmp
add
adc
mov
clc
or
icebp
mov
out
or
or
data16
pop
jg
lods
in
nop
shlb
push
xor
sbb
jns
cmp
sub
andl
fucomi
pop
cmp
scas
stc
cmpsl
fistpll
mov
pop
out
push
mov
sahf
ja
nop
out
xchg
loopne
pop
pop
repz
xor
insb
std
mov
cmp
icebp
mov
pop
ss
xchg
sbbb
dec
cmp
test
addr16
pop
arpl
test
adc
adc
jne
orb
cmp
or
adc
mov
xchg
outsb
scas
fsts
pop
cmp
sub
and
flds
mov
or
sbb
xor
stos
pop
pop
cmc
dec
mov
in
mov
pop
push
adc
insl
stos
das
jne
and
aam
mov
and
xor
movsb
cltd
xor
and
push
js
dec
mov
lahf
and
lods
mov
inc
push
cmp
data16
xorl
in
mov
inc
adc
test
cwtl
movsb
pop
aad
dec
mov
movsb
jl
mov
stc
cltd
jne
sbb
sbbb
dec
lds
and
mov
pop
add
fists
cmp
push
sub
and
ret
mov
push
dec
in
aas
pop
jae
jge
das
adc
enter
and
dec
dec
or
jge
sbb
sbb
sub
add
insl
mov
lods
cmp
push
lret
jns
aad
jp
pop
dec
in
rcll
add
dec
add
inc
cmp
cmpsl
mov
divb
cmp
push
sbb
sahf
xor
ds
jae
adc
sub
aas
dec
arpl
sbb
and
subl
jne
nop
negl
mov
leave
aam
lods
jb
pop
mov
xor
add
add
xor
lea
cmc
outsl
popf
leave
je
pop
les
mov
xchg
dec
stos
ds
xor
in
xchg
sub
jge
pop
sbb
mov
mov
sub
popf
clc
pop
mov
sub
out
jl
mov
push
mov
mov
inc
lods
xchg
xchg
adc
mov
sbb
mov
scas
sub
add
icebp
test
sub
xor
mov
test
or
dec
dec
leave
dec
jae
fmulp
outsb
xchg
adc
rclb
sarb
lahf
popa
xor
xchg
push
outsl
fdivp
dec
shlb
sub
push
arpl
mov
sub
stos
pusha
je
push
xchg
jmp
cwtl
movsl
pop
xor
mov
add
ret
adc
fldcw
jmp
xchg
sub
and
rorl
push
repz
or
push
icebp
or
les
pop
nop
sbb
stos
mov
pop
or
push
ficompl
fbstp
add
and
and
pop
mov
ja
bound
shlb
pusha
add
xchg
push
push
fnstenv
or
lods
add
or
imul
and
sub
stos
jecxz
testl
inc
stos
aad
and
mov
mov
out
test
inc
ret
mov
pop
and
sub
sub
dec
jle
or
in
out
add
jp
into
lahf
popa
jae
and
cmp
sbb
xchg
pushf
push
js
out
jnp
cmp
fwait
xchg
push
xchg
mov
stos
xchg
ret
mov
dec
or
dec
rclb
inc
inc
xchg
or
push
pusha
xor
mov
push
cld
inc
mov
les
dec
mov
cmpb
in
syscall
pop
movsb
mov
mov
lods
popf
fbstp
pop
pop
scas
sbb
imul
cmp
push
sar
scas
fdivr
adc
mov
jle
rolb
lret
mov
xor
fdivrs
cmpb
lock
mov
ljmp
inc
fidivl
dec
out
in
insb
inc
stc
test
mov
jle
jnp
lods
dec
pop
fdivrp
cmpsb
stos
mov
adc
adc
push
xchg
mov
xchg
jl
inc
xchg
shll
mov
lds
aad
jnp
repz
or
cld
ret
lods
jecxz,pn
dec
xor
jge
pop
push
cmpsb
mov
push
jle
pop
repz
pusha
mov
in
les
jno
fbstp
outsb
push
stos
fisubrs
insl
ljmp
pop
xor
std
adc
sti
mov
mov
inc
pop
imul
push
inc
js
pop
aas
cmp
rorl
pop
inc
pop
dec
enter
xor
add
in
outsl
lods
sbbb
pushf
mov
cmp
iret
mov
or
push
or
lods
and
aad
ret
push
in
mov
pop
mov
fnstenv
cmp
xchg
or
jne
push
or
in
xchg
cwtl
mov
sub
jmp
in
ret
sub
jno
aam
mov
add
xchg
insl
scas
cwtl
dec
shlb
testb
movsl
jle
inc
push
cmp
mov
xchg
xor
mov
out
jnp
inc
leave
mov
mov
pop
cld
or
mov
mov
xor
pop
call
fs
lods
inc
aad
dec
jp
jb
insb
mov
push
leave
test
inc
pop
mov
dec
jno
stos
idiv
into
movsb
ja
jle
dec
push
sti
mov
mov
insl
jl
mov
fcom
sbb
adc
movl
push
add
dec
pop
pop
scas
in
sub
cld
cmp
add
cmp
and
jnp
cli
lcall
clc
add
xchg
push
xchg
or
jns
jge
clc
cli
pushf
fstp
lock
mov
add
out
jnp
push
mov
pop
inc
popf
dec
addb
jne
ss
imul
mov
fistpll
aad
pop
out
or
daa
shl
shrl
xor
cld
dec
cmp
andb
hlt
lcall
lret
push
add
scas
push
dec
mov
and
fisubs
js
jge
jbe
pop
out
cli
enter
insb
stos
mov
dec
push
lods
adc
fwait
jo
loope
jbe
cmp
inc
and
call
cmc
cmpsb
mov
clc
add
aad
call
xchg
push
mov
adc
push
jb
dec
rclb
bound
mov
ret
jbe
pop
push
test
aam
push
mov
nop
aad
cmp
movsb
mov
mov
outsl
adc
pop
into
je
sbb
pop
xchg
jl
mov
mov
push
in
std
adc
repnz
mov
cmpsl
mov
movsb
mov
jns
lods
in
cmc
inc
roll
ret
add
stos
or
ret
loop
xor
mov
ljmp
or
lahf
test
out
push
data16
cld
repz
dec
pop
sbb
ljmp
adc
loopne
loope
aad
mov
add
jo
xor
adc
dec
scas
lock
mov
mov
xor
xchg
sti
call
and
cmpsb
add
cs
loope
and
dec
xchg
rcr
jns
mov
pusha
jbe
cmp
xchg
or
aaa
pop
mov
sub
xchg
mov
dec
cltd
pushf
loope
push
xlat
push
dec
inc
iret
sar
mov
popa
xchg
in
insb
cmpsb
or
or
mov
or
in
push
loope
xor
add
mov
gs
xor
adc
loop
js
and
fisttpll
jg
loop
dec
dec
rclb
mov
in
or
jae
mov
mov
mov
mov
xchg
jns
mov
mov
enter
mov
push
mov
xor
mov
sub
lcall
inc
inc
cmpsb
stos
cltd
cmpsb
inc
shll
loop
fsubr
pop
aas
out
mov
gs
cmp
mov
shll
icebp
lea
mov
adc
es
inc
aas
cmp
jle
inc
sbb
data16
mov
mov
cmp
or
mov
sub
mov
lret
jno
orb
cld
addr16
push
pop
sub
jne
lret
add
scas
push
pop
xchg
push
inc
inc
mov
fisubrl
test
mov
sti
inc
std
adc
je
icebp
lods
loop
test
cltd
mov
ja
in
sarl
std
jmp
jge
xchg
cmp
cwtl
hlt
xchg
xor
popa
xor
data16
and
enter
jbe
movsb
push
pop
mov
out
add
sbb
popf
mov
push
js
ds
sysenter
add
ret
jle
pusha
sbb
cmp
insb
aad
xor
adc
mov
sarl
aas
mov
push
outsb
ja
xchg
push
xchg
int3
stc
fadds
repnz
pop
pop
lods
inc
pop
jns
mov
cld
or
jnp
fs
push
mov
and
xchg
cmp
mov
add
jns
push
pop
pop
push
fcoms
in
mov
push
sub
inc
icebp
popl
js
push
jecxz
fdivrs
dec
or
jg
pop
rcll
arpl
sbb
sub
js
iret
fidivs
pop
outsl
push
xlat
inc
xchg
mov
iret
cmp
loopne
lds
inc
add
mov
movsb
xchg
pop
cmp
lods
aaa
das
sbb
fwait
lret
xchg
xor
add
hlt
xchg
and
cmp
jmp
dec
int3
xor
in
shl
mov
lods
jbe
enter
pop
lods
movsl
aad
jns
lahf
inc
pop
push
adc
sti
add
push
mov
inc
scas
fsubrs
ret
imul
ljmp
mov
lock
sbb
xor
and
into
add
lcall
loop
mov
je
sub
out
mov
push
std
fstpt
insl
ficoms
je
jno
push
popl
dec
pop
push
jecxz
and
mov
or
xor
cwtl
test
sub
mov
jns
test
mov
sbb
pop
cmp
movsl
pop
fstpl
dec
mov
xchg
xor
stc
ljmp
sbb
push
push
xor
sub
and
xchg
or
dec
fcoml
inc
mov
jg
fs
arpl
cmp
cmpsl
push
xchg
out
xchg
loope
dec
mov
pop
outsl
mov
mov
insb
mov
inc
sbb
mov
sub
jge
xor
pusha
ret
xor
sub
jle
cmc
jecxz
loop
addb
mov
mov
fsubr
imul
sbb
mov
jns
push
enter
jo
mov
ds
xchg
nop
fisttpll
push
aaa
aad
daa
popf
cmp
mov
or
mov
xchg
test
xchg
fsubrl
in
push
cld
mov
push
or
or
xor
ret
mov
lcall
mov
add
xor
adc
cld
and
aam
outsb
dec
pop
sbb
cmp
dec
imul
mov
or
xor
mov
adc
push
add
inc
inc
shlb
ret
addr16
stc
shlb
pop
outsl
sub
xor
popa
test
or
mov
xor
out
repnz
pop
loop
cwtl
mov
stos
push
cld
dec
adc
jb
hlt
or
push
insb
inc
out
sbbb
daa
mov
jp
cs
out
jne
mov
int3
jne
fmuls
repz
in
sti
ja
int
lcall
ss
lds
and
mov
daa
in
ret
push
shll
push
leave
aam
and
scas
dec
test
inc
std
dec
fstl
cmp
jo
loopnew
fs
pop
stos
push
jb
mov
jbe
lock
mov
adc
pop
scas
add
adc
xchg
or
sub
push
jecxz
rcr
mov
rclb
adc
add
imul
mov
mov
or
imul
dec
jns
xchg
mov
jle
pushf
cmp
jnp
out
fcoml
or
rolb
fstps
mov
mov
ret
hlt
outsb
sbb
pushf
sub
popa
jb
inc
pop
dec
push
popa
inc
pop
push
ja
sub
dec
ss
fmul
xchg
fnstenv
dec
scas
data16
xchg
aad
jp
shll
cmp
cmpb
jge
sbb
inc
rcrl
xchg
ds
mov
jnp
and
pop
pop
jp
ja,pt
cmp
xchg
aas
sbb
dec
mov
push
add
int
add
jb
push
sti
jno
mov
xor
cltd
insl
jg
out
mov
jle
iret
mov
sahf
push
sbb
out
insl
mov
or
dec
pop
mov
stc
insl
cltd
cmp
jl
sub
fistpll
dec
cmpsb
outsl
scas
fistpl
sbb
mov
fidivs
notl
test
dec
es
push
add
bound
pop
xor
jne
pop
es
mov
nop
sub
clc
sub
in
push
call
loope
jp
pop
adc
jmp
int3
gs
sub
aas
mov
adc
mov
fnstsw
pop
insb
rolb
mov
lea
mov
ds
adc
push
test
cmp
jge
movsl
push
pop
lock
adcb
lret
xchg
lcall
stc
add
insb
lcall
and
cmovnp
adc
fsubrs
pop
jecxz
dec
sub
xchg
sub
repz
and
lods
cltd
in
fildll
popa
and
lret
cmpb
jmp
icebp
mov
loope
into
mov
dec
iret
push
or
sub
movl
test
fisubs
repnz
fisttpl
inc
mov
jle
cld
rorb
je
adc
or
mov
loopne
and
ret
mov
es
gs
xor
cmp
insl
rol
adc
ja
fnsave
stos
leave
sub
pop
xor
sti
pop
pop
adc
add
sar
pushf
adc
scas
push
pop
mov
xor
repnz
out
sti
rorl
test
xadd
rcr
xor
aaa
pop
aad
insb
cld
push
shl
movsl
hlt
jne
push
dec
xchg
rclb
arpl
popf
adc
sub
sbb
jbe
xchg
add
push
cmpsb
push
icebp
push
and
push
pusha
push
repnz
dec
jl
lret
cld
mov
dec
xor
or
ror
or
cmp
pop
enter
jmp
inc
arpl
xchg
dec
hlt
pusha
icebp
loope
pop
add
loop
stos
lods
xor
pushf
pop
add
enter
xor
cmp
es
push
or
std
pop
sub
inc
je
fs
aaa
cmp
stos
cmpsb
sub
push
popf
mov
and
insb
cmp
or
pop
add
cmp
mov
or
enter
mov
cld
lds
cmc
ds
stos
add
lds
xchg
cs
pop
clc
pop
sub
sbb
pop
fstps
inc
loopne
push
lea
push
insb
push
inc
sub
mov
iret
and
int3
cmpsb
sbb
or
push
cwtl
jge
and
push
push
or
repnz
add
mov
inc
xchg
insl
sub
sub
fcoml
push
xchg
fcmovbe
nop
addr16
sar
and
or
sub
push
pusha
mov
inc
notb
ljmp
jnp
cld
push
push
in
sub
pop
ds
call
outsb
movsb
shrl
add
call
call
hlt
popa
lock
lea
test
ficoml
mov
sahf
loope
mov
cmp
jle
add
mul
and
or
roll
in
cltd
out
cli
ljmp
xchg
sbb
mov
jecxz
sbb
dec
sahf
enter
add
shr
xchg
jns
loope
js
pop
outsl
sub
insb
pop
cmpsb
fbstp
imull
ds
pop
daa
fistpll
cwtl
daa
cmp
fldt
stos
inc
push
jbe
pop
push
rol
dec
stos
mov
leave
sub
popa
mov
iret
xchg
test
xchg
icebp
jo
cmp
push
cltd
scas
sub
push
push
inc
outsb
jns
test
stc
lcall
mov
lds
lock
pop
out
cmp
scas
push
xlat
cmp
adc
sub
pop
in
les
add
cs
in
inc
add
xchg
out
lock
jmp
inc
out
sahf
and
pushf
push
add
mov
mov
in
jmp
ficoms
fiadds
cmpsb
cmpl
fisttps
jle
outsl
mov
stos
int3
dec
out
lret
dec
xor
fnsave
scas
cwtl
pop
xor
mov
scas
push
mov
inc
or
xchg
cltd
das
jb
jo
fsubrs
jb
push
sbb
jl
nop
cmp
daa
inc
dec
mov
sub
mov
cmp
jb
jl
pop
fmull
pop
js
insl
sub
xchg
inc
cmp
sub
jno
xorl
dec
fldenv
jmp
nop
popf
stos
les
and
cmp
jae
dec
ss
fildl
adc
and
add
aas
add
fwait
xor
adcb
xchg
push
aas
xorb
stos
lods
enter
mov
insb
pop
cmp
adc
sbb
iret
in
dec
xor
popf
adc
or
enter
cmpsb
cld
stos
adc
sub
scas
adc
adc
int
mov
mov
fnstcw
lahf
loope
orps
clc
inc
sbb
xchg
in
inc
fldcw
pop
mov
fwait
int
js
add
cs
pop
addr16
sbb
dec
outsl
xor
xor
lods
sbb
inc
xchg
dec
int3
fcoms
sub
inc
and
fwait
xchg
push
insb
sub
xchg
mov
in
pop
cwtl
add
fstpl
mov
pusha
pop
lret
sbb
adc
or
xor
inc
sahf
jbe
cmp
out
popa
cld
loop
mov
sub
dec
aam
and
adc
and
inc
cmc
push
jecxz
sarb
xchg
add
pop
sub
xor
les
and
jmp
or
hlt
and
out
aad
fiadds
enter
and
sbb
pop
xchg
aad
mull
movsb
lret
js
stc
mov
inc
cmp
movsb
sub
mov
repnz
lods
jp
scas
push
xchg
popa
dec
call
xorl
notb
into
pushf
mov
xchg
xorb
int
lret
xchg
cmp
push
lock
int3
popf
pop
cmp
test
pusha
out
mov
in
adc
push
mov
rcll
jnp
mov
pop
add
pushf
mov
pop
mov
sub
bts
pop
sbb
mov
cld
hlt
adc
cwtl
jb
scas
adc
pop
mov
scas
daa
jae
sub
jns
cs
inc
add
sub
outsb
out
jnp
mov
push
jbe
and
push
mov
sub
ljmp
jo
data16
xchg
dec
pop
inc
enter
lock
inc
or
jns
lods
mov
out
adc
cmpsl
stos
int3
push
add
cwtl
hlt
inc
cmpsl
jl
xchg
ret
xchg
mov
out
xorl
mov
adc
cwtl
mov
push
jecxz
shr
aaa
inc
adc
test
mov
jp
out
lahf
cmp
xor
lods
loope
ljmp
pop
sti
stos
sub
test
arpl
cld
xchg
mov
inc
jnp
mov
mov
outsb
or
inc
sarb
and
fidivrl
call
and
jg
es
dec
outsb
leave
fs
pop
xchg
scas
pop
xchg
cmp
xchg
or
fistpl
ljmp
mov
aad
push
sub
loope
push
std
rorb
add
fildl
xchg
pop
scas
xchg
cmpsl
ljmp
in
mov
insl
mov
insl
aas
jb
ret
jo
dec
push
jb
push
jb
jecxz
inc
lods
dec
cltd
sar
ss
mov
out
mov
xor
adc
or
cld
jl
je
test
ja
lods
pop
xchg
jecxz
xor
lods
mov
push
adc
lret
xchg
mov
out
push
dec
pop
daa
enter
addb
rcrb
xchg
fwait
loopne
out
mov
pop
xchg
jbe
fisubl
arpl
insb
push
sbb
sub
push
dec
sahf
fnstenv
add
sub
mov
push
pop
mov
and
mov
push
cmp
dec
popf
ss
sub
andb
stos
shl
imul
adc
xchg
fsub
sar
jecxz
cmp
push
cld
mov
mov
add
in
outsl
sbb
push
push
inc
xor
add
out
cmp
pop
movsb
lea
ja
outsb
inc
adc
mov
inc
mov
das
inc
pop
into
scas
fsubrl
or
xchg
and
sti
push
or
adc
icebp
aam
out
xor
pusha
scas
ud1
and
dec
or
cmp
lret
or
sbb
sbb
daa
jp
fwait
push
and
adc
sub
mov
aam
sbb
leave
add
lock
inc
push
inc
sbb
or
mov
dec
xor
inc
sub
scas
mov
add
add
mov
outsl
jno
pop
jp
jg
cmc
arpl
fnsave
dec
xor
icebp
cltd
cmp
cmp
or
cmp
pop
imul
test
pop
mov
inc
je
je
in
pop
jbe
int3
sar
mov
bound
dec
mov
jo
jns
inc
outsl
dec
pushf
in
test
pop
imul
mov
gs
mov
add
push
lret
mov
scas
jp
add
clc
adc
mov
stos
pop
sti
mov
mov
cwtl
sti
push
jbe
imul
xchg
ljmp
mov
adc
jecxz
and
sarl
pop
and
pop
push
sbb
aam
fs
mov
adc
push
je
ficoml
inc
ds
ds
mov
mov
add
xchg
clc
mov
add
or
out
ds
loope
inc
movsb
or
lds
jae
lods
pop
mov
negl
mov
pop
loope
dec
fldln2
sahf
sarl
pop
ja
mov
sbb
pop
dec
in
sbb
and
jne
lret
mov
xor
or
xor
push
and
xor
dec
mov
inc
lods
dec
sbbl
aam
mov
adc
and
cmc
call
cmp
push
scas
cmp
and
jle
sub
mov
test
jle
addb
mov
mov
pop
cmp
and
call
xor
fidivl
and
sub
or
fisubrl
push
call
popf
and
clc
mov
test
jo
rclb
enter
movsl
xchg
pop
in
pop
dec
sahf
popf
cmp
inc
inc
sub
add
mov
fstpt
test
lret
test
clc
push
inc
imul
add
bnd
inc
les
xlat
pusha
push
xchg
and
in
repz
out
jno
ja
or
mov
and
movsb
leave
in
cli
mov
and
mov
das
push
repz
loop
ret
jg
push
cmpsl
daa
loopne
aas
fs
dec
ret
cld
leave
call
repz
fcmovne
mov
loope
xlat
bnd
fidivrs
gs
mov
inc
stos
cmpsb
popf
not
adc
mov
mov
leave
mov
leave
push
not
or
std
jl
clc
pushf
fnstenv
add
gs
jp
and
cmp
test
arpl
ret
pushf
xor
inc
mov
aam
lret
sarl
cmc
inc
mov
mov
test
repz
pop
out
and
cltd
int3
popf
je
les
dec
in
inc
xchg
scas
gs
aad
push
scas
or
jo
daa
fbstp
mov
xchg
lret
cmp
cmp
mov
clc
jns
outsb
and
or
push
and
mov
sub
lods
jle
frstor
fidivs
inc
mov
fcmovbe
mov
and
mov
add
ds
test
das
jecxz
sbb
jo
shll
jg
mov
mov
outsl
dec
lds
rorb
xor
or
xor
push
into
xchg
mov
pop
xlat
hlt
rorb
shl
mov
orl
cwtl
ror
dec
inc
cmp
sub
sti
mov
mov
inc
outsb
add
sub
dec
int3
fsubs
idivl
imul
dec
dec
pop
adcb
pop
je
pop
popf
js
pop
inc
add
stos
and
js
mov
or
repnz
add
jmp
sti
xchg
sub
dec
inc
push
mov
mov
fmulp
pop
popl
mov
insl
int3
rorl
push
arpl
mov
adc
gs
push
ficompl
or
addr16
fistpll
bound
jo
pop
and
pop
pop
jns
loope
inc
sub
fsubrp
jbe
pusha
je
ja
aam
mov
or
icebp
xor
mov
imul
dec
jbe
xor
jbe
mov
dec
fxch
fwait
int
mov
fisubrl
add
sub
test
fucomip
inc
add
lock
push
cmp
imul
pop
fdivrs
xor
jge
mov
and
lahf
fisubrl
xchg
xchg
fisubrl
jecxz
or
aam
mov
or
xchg
insb
adc
jne
mov
mov
out
or
cmp
rep
ret
pop
or
dec
ljmp
fdivr
mov
sub
sbb
and
jbe
ljmp
mov
clc
adc
out
jge
mov
bound
ret
pop
inc
xor
jae
fs
adc
dec
mov
add
xchg
ficomps
stos
ffree
sub
xor
int
insb
inc
scas
push
clc
dec
outsl
adc
or
jle
scas
and
dec
enter
std
inc
inc
outsl
xor
sub
cmp
sbb
mov
xlat
out
call
mov
ljmp
push
cmp
or
iret
arpl
xchg
maxps
cli
test
stos
xchg
loopne
push
sbb
pop
movsb
cld
pusha
lret
dec
loopne
lods
sub
mov
xor
in
clc
mov
mov
push
mov
je
add
loope
push
cmp
fsubrp
icebp
iret
icebp
add
fwait
outsl
sub
fdivr
or
inc
xor
fstpt
mov
mov
add
icebp
clc
repnz
dec
stc
orb
sub
stc
sub
inc
dec
out
jl
mov
mov
loope
xlat
pop
test
mov
popl
inc
xchg
push
test
in
jecxz
gs
nop
repz
pusha
div
in
jecxz
lret
test
mov
dec
cmc
jge
xchg
hlt
mov
dec
jg
xchg
enter
xchg
mov
cmp
psrld
lea
outsb
lods
pop
clc
jmp
dec
jbe
je
pop
bound
push
int3
xchg
xchg
dec
xchg
notl
add
xchg
sbb
test
sbb
lods
add
xchg
sbb
stos
rorl
mov
mov
test
nop
repz
in
clc
dec
or
sahf
insb
adc
shlb
notl
cmp
sti
mov
xor
or
mov
hlt
mov
jbe
sub
and
int
shl
lret
nop
mov
cwtl
inc
push
out
ja
call
mov
dec
leave
pusha
bound
pop
outsl
ret
inc
mov
jp
dec
sbb
iret
jl
or
add
popa
mov
frstor
imul
fmuls
or
mov
dec
outsl
mov
cmpb
ja
roll
or
cmp
sti
stos
pushf
push
mov
enter
add
pop
rolb
pushf
mov
dec
mov
mov
or
lret
aas
jno
dec
mov
jnp
dec
jnp
jle
loope
push
xchg
mov
pusha
aad
sub
call
mov
jno
int
push
out
push
mov
nop
shlb
jl
lret
std
lret
in
pop
sub
mov
mov
xor
je
adc
and
mov
and
lea
push
mov
inc
xchg
push
inc
adc
lods
sbb
dec
in
fildl
jmp
into
repnz
and
xchg
add
adc
jnp
sti
fists
mov
movsb
add
aam
inc
pop
dec
jne
mov
cmpsl
cli
loopne
imul
aas
shlb
loope
xor
and
sub
in
inc
mov
sbb
cs
dec
cli
mov
daa
push
cmp
sbb
sub
cmp
pop
mov
push
mov
mov
pop
or
pop
mov
bound
mov
sub
sbb
enter
out
sbb
push
jno
sbb
mov
into
les
sarb
das
jl
xor
mov
out
and
jp
ror
sbb
pop
imul
sub
inc
js
xchg
lret
add
cmp
fwait
bound
mov
pcmpgtw
xchg
repnz
adc
mov
cmp
push
ret
xchg
push
rorl
das
outsb
or
sub
es
pop
rcr
pop
shlb
insb
xor
sub
inc
dec
lret
or
push
popa
fucomi
aam
sahf
xor
ret
xor
inc
push
sbb
add
or
mov
jbe,pn
in
push
or
jmp
movsl
aad
xchg
out
or
jo
divl
sbb
loop
fwait
jge
ss
xor
fnstenv
rolb
in
mov
lds
pop
cmpsl
fistps
lcall
inc
cmp
cs
cmp
aaa
int
ds
icebp
sbbb
add
add
lahf
adc
jle
sbb
xchg
mov
push
je
test
inc
cs
aaa
sbb
push
jmp
rcrl
push
push
sahf
adc
mov
xor
notl
data16
aaa
mov
outsb
mov
bound
adc
fs
movsl
cltd
add
aaa
pusha
je
test
out
adc
or
push
mov
mov
aad
shrl
aad
cmp
adc
fstpt
mov
ja
sub
or
xorl
iret
ror
movsl
cmp
jmp
xchg
and
mov
mov
aas
push
roll
and
negl
pop
adc
loope
or
loope
adc
in
dec
sbb
repnz
xorl
imull
into
sbb
xlat
push
dec
icebp
lds
scas
push
pop
je
arpl
xor
mov
inc
or
js
add
mov
or
lock
lret
push
jne
push
loop
add
push
or
cmp
mulb
mov
xorb
push
lock
aaa
adc
rclb
mov
jmp
pushf
pop
sbb
dec
mov
jg
rcll
or
fldt
jno
cmpsb
inc
mov
adc
outsb
mov
out
out
push
icebp
xor
cmc
movsl
and
in
enter
aam
stos
jge
jecxz
jl
add
test
adc
pop
pushf
pusha
adc
add
adc
int3
adc
mov
jecxz
outsb
loopne
mov
jl
sub
mov
push
jp
jae
daa
pop
inc
lret
xchg
cmc
push
jle
mov
mov
cmpsl
loope
or
mov
sub
pop
cmp
mov
out
cmp
and
loop
mov
adc
dec
sti
xchg
aaa
or
xor
sahf
push
inc
lahf
les
or
pop
nop
and
mov
mov
fldenv
les
dec
cmpsb
fbstp
test
inc
lcall
lret
jmp
das
cld
in
mov
add
xchg
movsl
mov
mov
push
push
dec
jno
hlt
jb
xchg
movsl
sbb
sub
mov
out
mov
fs
or
lahf
and
or
cmp
pop
jecxz
push
cli
dec
jae
lcall
ljmp
shlb
aaa
movsl
out
mov
xchg
jno
lret
adc
out
std
xchg
inc
push
push
sub
xor
mov
in
insb
incb
push
lds
dec
or
orps
mov
lea
adc
mov
aas
outsb
add
cmpb
movsl
or
in
and
test
into
pop
movsl
imul
sub
popf
adc
dec
xlat
ret
cs
pop
loop
jge
and
cld
dec
jbe
pop
adc
frstpm(287
pop
jb
loop
cmpsl
cmpsb
es
daa
dec
rclb
js
push
out
idivl
xchg
jae
dec
das
or
mov
outsl
dec
add
imul
jne
ds
cmp
ja
nop
dec
aas
mov
fcoml
call
scas
arpl
mulb
lods
mov
inc
push
sub
lods
ds
jmp
addr16
sbb
fucomip
pushf
arpl
jl
addr16
add
xchg
leave
push
cwtl
xor
add
lret
push
inc
jne
xchg
xchg
add
loope
repnz
sbb
imul
pop
aam
push
loopne
inc
loop
addl
cltd
icebp
std
test
xchg
shll
fisttps
addr16
xor
jb
xor
add
and
js
mov
call
cmpsl
mov
mov
mov
les
aam
lods
dec
xor
mov
push
adc
in
lods
inc
popa
mov
pop
popf
mov
arpl
shl
or
mov
icebp
lods
repnz
jecxz
xor
inc
mov
loop
push
add
imul
repnz
mov
mov
jmp
mov
xlat
xlat
mov
cmc
test
aas
test
xlat
insl
js
jno
push
adc
mov
rol
lea
int
sahf
test
and
mov
cmp
inc
cmp
inc
cmp
ja
ss
imul
pop
lods
outsl
sbb
push
pop
mov
cltd
sbb
cmp
pop
xchg
xchg
addr16
or
mov
frstor
xor
xchg
add
pop
xor
jns
jecxz
pusha
in
inc
dec
cmc
adc
inc
jp
inc
test
xchg
arpl
test
rorb
push
mov
cmp
add
push
fstps
push
push
movsb
fsubr
inc
inc
test
inc
cmpb
xor
inc
jo
inc
push
dec
sbb
ljmp
jns
jno
cld
daa
jae
add
xlat
js
hlt
test
push
mov
xor
enter
jg
js
es
sbb
jecxz
jg
adc
push
or
int3
lret
mov
rcll
push
adc
push
push
fiaddl
insb
pop
xor
fdivrl
std
jmp
cli
outsl
mov
pop
dec
mov
inc
out
int
push
sub
inc
lahf
push
adc
icebp
scas
pusha
inc
jne
dec
cltd
inc
jmp
repz
addr16
inc
jge
jge
or
or
cmp
cli
xchg
push
inc
ret
mov
or
sub
hlt
sti
xor
push
repz
scas
inc
push
push
cwtl
fwait
hlt
sub
dec
pop
ret
mov
mov
pop
push
std
or
xor
push
mov
or
add
dec
mov
scas
stos
and
mov
xchg
adc
inc
dec
push
dec
or
cmpsb
or
mov
stc
enter
fcmovb
int3
orl
mov
out
add
mov
out
popa
gs
jmp
adc
ret
sbb
pop
mov
lods
ljmp
icebp
insl
push
pop
pop
fsubrs
stc
jo
mov
sub
mov
jmp
icebp
pop
jp
mov
and
lahf
jae
fnstenv
lods
jno
and
push
and
dec
xor
jns
jno
adc
and
leave
pop
test
aam
sbb
filds
rcr
ret
jmp
fwait
out
jg
pop
push
adc
in
test
hlt
rcr
cmp
in
xchg
mov
ja
xchg
jl
repnz
outsl
xor
mov
sub
ja
movsl
out
outsb
imul
aad
dec
sarb
adc
adc
imul
and
dec
dec
pop
sti
adc
jecxz
jo
loopne
or
scas
inc
or
aas
sub
ret
or
rol
jge
mov
lods
push
mov
ja
sub
mov
stos
mov
mov
xor
sbb
insb
mov
cmp
mov
sub
push
fcmovne
xor
sub
rclb
in
push
jmp
cli
aam
pusha
jp
sub
push
xchg
popf
sub
jae
jae
push
dec
jl
rclb
jl
pop
je
mov
pop
sbb
cmp
out
sub
push
sub
inc
rorb
fwait
mov
jbe
shl
jnp
mov
inc
xchg
inc
inc
and
jle
inc
scas
aam
push
or
int
pop
arpl
xchg
pusha
mov
push
pop
movsl
lret
jl
mov
rclb
inc
popf
dec
icebp
repnz
mov
push
js
into
push
stos
and
xor
mov
cmp
bound
ljmp
in
mov
cmc
xchg
or
add
shrb
pop
pop
out
rolb
popf
aam
xchg
in
out
pop
jno
adc
es
xlat
popf
dec
lret
add
add
pop
jl
sbb
sub
xchg
rclb
cmp
sbb
repz
jle
into
dec
pop
ja
das
leave
sbb
pushf
and
push
jl
jmp
stc
test
addr16
or
enter
lret
xchg
sbb
pop
fmul
cmp
fistpll
lea
mov
fistpl
pop
cmp
sti
icebp
mov
dec
les
push
loop
xlat
enter
int3
fistps
out
mov
icebp
rol
out
mov
pop
les
inc
adc
adc
mov
inc
popl
nop
sti
jge
ret
sub
jns
das
cli
or
cltd
mov
xchg
mov
mov
xchg
orl
xor
lock
rorl
jecxz
jno
pop
data16
sub
lahf
xor
loop
lds
les
xor
data16
or
sub
mov
sub
pushf
mov
sbb
loopne
inc
pushf
dec
int
sub
fstpl
dec
mov
sbb
xchg
lahf
push
bndldx
xchg
mov
stos
aaa
andl
scas
in
jp
xlat
dec
shrl
push
mov
sbb
mov
test
mov
loop
xor
outsb
cli
sub
outsb
xor
aaa
imul
lods
and
and
stos
mov
inc
mov
repnz
jnp
xchg
sbb
popf
lea
mov
or
inc
xchg
pop
xlat
fldz
inc
push
dec
xchg
and
and
aas
and
push
aam
ror
mov
pop
xor
jno
or
std
rcll
mov
rol
cmp
xor
sub
push
jecxz
adcb
rcrb
mov
sahf
push
or
das
push
pop
xor
stos
aam
push
test
mov
loopne
mov
and
in
jmp
add
sbb
push
lea
jae
cmpsb
mov
sbb
xor
clc
push
mov
repnz
push
decl
jne
aaa
mov
outsb
add
add
rcll
mov
mov
mov
xchg
add
test
sub
push
mov
mov
mov
xor
jns
int3
push
sub
ret
sub
das
mov
or
std
push
adc
mov
xchg
cmpsb
xor
jno
imul
jmp
std
xchg
cmp
imul
cs
dec
fs
adc
sbb
pop
loopne
jp
addl
xor
jp
xchg
add
outsb
add
les
jbe
fsts
mov
mov
and
sub
and
push
dec
push
push
add
sub
sub
mov
mov
mov
icebp
cltd
dec
dec
out
daa
int
fcmovnu
push
aaa
inc
jge
xchg
hlt
pop
or
jmp
aam
dec
aam
in
hlt
push
sbb
idivb
sbb
pop
aad
dec
dec
outsl
mulb
sub
xchg
fisubs
add
dec
pop
arpl
cmp
sti
ret
sbb
das
pop
push
sub
pop
adc
pop
pop
xchg
mov
lea
hlt
enter
jns
loopne
imul
jg
cwtl
fistpl
mov
mov
scas
dec
jne
fcmovnb
jae
cmp
movsb
xor
das
jae
fs
xor
xchg
out
out
pop
or
mov
dec
and
sub
test
repz
mov
or
mov
rcrb
in
mov
add
push
aaa
pop
cmp
sbb
cli
xchg
shrl
jmp
mov
mov
imul
sub
sub
push
cmp
xor
pop
pop
js
divb
jae
add
dec
mov
cmc
xchg
shrl
fwait
or
cmpsl
jp
das
lods
jns
add
lret
or
mov
scas
cmc
ss
aas
out
je
push
and
push
popa
rorl
inc
out
lods
es
adc
push
in
fistl
adc
gs
mov
lods
lret
xchg
mov
bound
out
repz
and
pop
dec
mov
add
fucomp
push
sbb
inc
sarb
cmove
outsb
and
dec
pop
icebp
cwtl
test
add
jmp
lods
inc
mov
jl
and
and
jb
repnz
aaa
sub
pop
xchg
pop
aas
xchg
test
fbld
cli
mov
mov
xor
pop
fdiv
call
in
and
mov
ret
jno
clts
pop
fdivrl
or
lock
jno
or
imul
outsl
mov
test
fbld
ljmp
jge
dec
add
add
xor
cmpsl
mov
and
push
mov
sbb
mov
xor
xor
sub
adc
and
jecxz
adc
jp
push
outsl
in
and
sub
shrb
lret
dec
sahf
cmp
mov
pusha
shlb
repz
mov
xchg
sti
frstor
push
orb
arpl
add
jnp
in
stos
inc
insl
xchg
dec
fsubrs
call
fdivs
sti
or
mov
aaa
cmp
push
push
xor
clc
pop
out
xchg
mov
pusha
orl
lret
std
xchg
flds
ret
fistl
jne
xchg
cmp
add
js
les
and
lock
cltd
adc
ja
cli
inc
xchg
jmp
fdivrp
rorl
movsl
cmp
mov
sti
pop
les
imul
xor
ret
mov
dec
cli
fldenv
clc
mov
repnz
push
aam
sarl
xchg
jg
fstps
repnz
hlt
cs
adc
mov
sbb
xchg
jp
loopne
dec
in
jae,pt
and
pop
test
sub
push
xchg
mov
enter
cltd
mov
orl
fdiv
sbb
mov
xorl
xlat
enter
les
pop
lea
sub
es
xor
rcr
nop
adc
cld
inc
scas
mov
imul
cmp
orl
ja
cmp
add
jg
mov
in
and
shrb
lds
push
jno
jno
mov
test
inc
push
dec
into
repz
mov
xchg
pushf
in
lock
ret
nop
cltd
cwtl
std
imul
mov
addr16
fsubs
scas
jns
cltd
pop
adc
mov
xchg
das
adc
add
fwait
inc
inc
cmpsl
dec
orl
push
push
data16
arpl
in
stos
cmp
jmp
andl
mov
adc
pop
mov
loop
lahf
pop
pop
sbb
jle
mov
scas
xor
or
cmpsb
mov
dec
mov
sub
mov
test
test
jne
push
sbb
dec
pusha
movsb
hlt
and
mov
push
cltd
mov
xchg
mov
cmp
pushf
adc
lds
pop
jb
int
stos
ret
adc
pusha
adcb
inc
push
cmpsb
xor
mov
popf
xor
fs
loop
sarl
jnp
rolb
xor
sub
cmp
pop
loop
gs
lahf
rcll
xor
fisubrs
jo
int3
sti
add
push
cmp
jg
inc
push
push
push
xchg
addr16
pusha
dec
push
insl
jle
xor
inc
pushf
mov
mov
push
pop
pop
testl
dec
out
ret
test
unpcklps
add
jae
dec
faddl
and
dec
loope
test
loop
push
cmp
call
les
mov
lret
cltd
popa
cmovbe
sti
dec
dec
mov
cmp
dec
sbb
out
stc
and
push
dec
aam
push
shl
fidivs
or
cmp
dec
jns
gs
data16
jecxz
jge
fisubl
jnp
add
lahf
cld
ficoml
scas
cmp
testb
rolb
daa
or
bound
or
sbb
imul
xor
add
sbb
fwait
mov
sti
fs
inc
ret
insb
cmp
faddl
imul
nop
into
mov
inc
push
sbb
fsubrs
sti
xchg
pusha
enter
out
and
sti
add
js
push
mov
jb
cltd
cmp
adc
jp
inc
jg
sbb
nop
sub
push
jb
clc
cltd
mov
push
cmp
xor
push
stos
fldenv
test
rcrl
push
roll
inc
jne
xchg
jg
das
loope
cmp
pop
adc
in
mov
adc
and
repnz
sbbl
test
push
hlt
lahf
mov
adc
and
sub
add
inc
fistpll
mov
pop
mov
mov
add
lds
or
icebp
add
fiaddl
sbb
jle
adc
mov
mov
mov
add
popf
pop
rorl
int3
fnstenv
push
cmp
sbb
iret
dec
in
xorl
sahf
ret
dec
mov
jg
and
fbld
sbb
popa
sbb
mov
ljmp
dec
mov
je
mov
loop
adc
and
cltd
or
or
out
adc
mov
sub
sub
in
inc
inc
nop
dec
dec
dec
pusha
lret
sbb
xor
jns
leave
jb
enter
outsl
dec
and
into
fmul
pop
fistpl
stos
std
add
cs
dec
cmp
push
fwait
shrb
push
inc
mov
ss
mov
jae
mov
jae
mov
mov
js
andl
push
adc
mov
es
mov
pop
loopne
xor
mov
sbb
and
aad
pop
adc
push
adc
mov
dec
insl
sub
mov
sahf
adc
pop
cli
aaa
loop
mov
xchg
into
sbb
cld
aaa
lcall
jne
mov
sub
push
outsb
outsl
pop
sub
sti
xchg
aaa
repnz
lods
xor
insb
mov
rcrb
add
imul
test
frstor
adc
sub
mov
out
cmp
or
xchg
scas
xchg
push
test
sti
clc
cmp
or
push
mov
and
jo
loop
cmpsb
push
and
mov
jp
xchg
cmp
mov
add
jge
push
sbb
or
lds
into
mov
and
std
add
inc
daa
and
sbb
xchg
lahf
leave
sar
je
adcb
push
ds
mov
loopne
in
lcall
arpl
inc
nop
mov
cmp
les
loop
cld
xchg
in
ret
inc
and
ret
or
xlat
insl
repz
addl
dec
pop
jl
mov
xor
pop
addr16
pushf
inc
mov
imul
es
xor
pushf
push
movsb
hlt
sub
dec
pop
mov
dec
or
jle
adc
jecxz
sbb
or
pop
xor
fidivrl
repz
jmp
lcall
xor
xor
dec
in
or
negb
out
mov
in
mov
lahf
aad
out
sbb
stos
and
out
cmp
mov
test
imul
fildll
test
cmp
adcb
pop
test
std
ss
les
repnz
lods
jmp
pcmpgtb
push
mov
cmp
xchg
lds
and
jns
jl
sbb
rcl
ss
jae
dec
cltd
es
mov
or
dec
pushf
jbe
push
dec
xor
mov
xchg
jb
dec
jp
aaa
push
ret
dec
ljmp
stos
aam
or
or
movd
push
inc
add
pop
les
xchg
xchg
fidivl
stc
gs
sub
cmpsl
mov
xchg
pusha
shll
movb
cli
daa
jl
nop
mov
push
dec
mov
fsubr
mov
pop
ss
cli
pusha
rclb
sub
sti
hlt
pushf
mov
stos
fsubrp
hlt
outsl
es
ret
lds
in
ds
test
lahf
cld
mov
add
or
rclb
ds
or
ror
in
adc
sbb
jp
jle
pop
rolb
je
cmpsl
push
sbb
mov
mov
popa
js
imulb
push
inc
aaa
jp
movsb
mov
rclb
das
int3
adc
ljmp
cltd
jns
cwtl
jb
je
jge
orb
push
inc
fwait
push
fldt
push
int
orb
xor
mov
xlat
sub
ss
push
and
out
not
test
fimull
xchg
xor
jp
or
push
ret
ffree
add
xchg
imul
test
xor
dec
mov
bound
xor
imul
out
out
test
int3
imul
shrb
inc
jecxz
jg
mov
pusha
dec
inc
jne
cmp
jp
lock
mov
dec
pop
icebp
jo
adc
sub
mov
xor
leave
jl
fwait
nop
repnz
in
stc
aaa
adc
ret
loope,pn
call
les
adc
and
lahf
pop
fdivr
mov
xchg
xchg
push
dec
cmc
xor
inc
mov
sahf
jmp
adc
lods
and
inc
push
push
adc
push
in
popa
xchg
adc
adc
mov
scas
jbe
add
mov
sbb
and
imul
popf
mov
or
fildl
push
xchg
clc
lahf
cmp
cmp
icebp
cmp
or
sub
adcl
jge
cmp
push
popa
add
push
mov
add
daa
dec
jl
test
lret
add
pop
inc
outsb
out
scas
out
mov
sbb
sub
pushf
sahf
sbb
or
test
inc
add
xor
xor
scas
xor
mov
mov
ret
mov
inc
mov
dec
dec
xchg
push
testb
push
sub
push
sub
pop
push
jno
inc
mov
mov
aam
push
in
out
ja
and
inc
xchg
movb
dec
cmp
pushf
and
dec
adc
das
je
lds
and
dec
sbb
push
dec
and
cltd
subb
xor
jnp
shlb
test
lods
xchg
icebp
push
dec
cmp
jo
xlat
xor
mov
jmp
fwait
jns
js
inc
jno
or
sbbl
mov
pushf
pop
pop
in
test
and
mov
aam
sbb
sbb
pop
pushl
jnp
inc
mov
std
jns
pop
mov
xor
mov
hlt
popf
cld
pop
cmp
adc
js
icebp
aas
call
jnp
jl
aas
js
add
dec
icebp
pop
nop
jmp
into
and
out
push
sbb
mov
lahf
or
pop
loope
pop
mov
xchg
addl
enter
pop
dec
mov
cmp
xlat
push
cwtl
lret
in
mov
push
out
mov
aad
dec
and
int
lret
es
les
jge
jae
mov
and
pop
adc
adc
bound
adc
mov
jl
mov
xchg
push
ljmp
jae
jg
push
scas
pop
hlt
add
popf
ljmp
add
sub
mov
repnz
mov
clc
cmp
xor
cmpsb
adc
jl
es
imul
jmp
popa
js
aaa
xchg
jne
cld
test
dec
sahf
test
push
push
mov
in
repnz
mov
xor
xchg
sub
popa
gs
mov
ret
aaa
or
sub
cmpsb
xor
pop
jbe
xchg
andb
or
xor
mov
add
fsubr
leave
clc
push
pop
cli
les
push
mov
inc
sbbb
push
mov
enter
xchg
pop
inc
popf
push
jbe
cli
sbb
lret
inc
dec
fdivl
subb
cmpsl
xor
mov
mov
out
fists
test
mul
xchg
jne
ret
lea
lret
fwait
aad
xor
jns
ljmp
fisttpll
sbb
xlat
fsubrp
shl
and
pusha
jmpw
test
push
and
neg
lock
lock
jo
adc
enter
pushf
mov
repz
or
repz
mov
push
ret
cwtl
dec
push
test
rcl
rcr
xor
ljmp
xchg
insb
xchg
mov
push
incl
mov
mov
cwtl
and
dec
add
outsl
mov
add
xor
bound
push
cmp
loope
pop
cld
pop
clc
xchg
adc
jnp
mov
and
nop
test
outsl
xor
repnz
cs
and
mov
das
idivb
mov
test
out
orl
insl
clc
pop
and
lret
lret
push
pushf
out
movsb
mov
pushf
clc
sub
out
icebp
pop
lods
ljmp
jnp
ds
sbb
jno
pop
aam
mov
cmpb
fs
mov
dec
jne
cld
outsl
add
pusha
xor
lds
sbb
pop
push
add
jl
or
stc
enter
adc
push
add
fisubrs
mov
int
scas
adc
cs
test
test
jbe
mov
ljmp
push
inc
jae
rclb
mov
gs
push
in
pop
data16
jg
in
inc
or
gs
es
xor
aad
pop
jle
je
ss
mov
sub
fcoml
addr16
push
mov
jg
aaa
sub
jg
inc
jns
pop
ficoml
pop
xor
and
jae
pop
xchg
jae
mov
xlat
mov
mov
sti
jo
push
xor
dec
fcmovbe
mov
ljmp
or
in
sub
pop
test
dec
test
mov
test
aaa
sub
mov
int3
bound
inc
leave
loopne
cmp
sarb
pop
sub
repz
ds
pusha
andl
mov
lea
fisttpl
aas
pop
mov
jmp
mov
fldcw
sahf
mov
sbb
lret
push
push
loopne
mov
lea
out
enter
cltd
hlt
popa
ljmp
stos
cmp
lock
dec
shll
dec
scas
mov
mov
or
mov
push
scas
stos
pop
adc
cli
xchg
mov
nop
xchg
xor
cmp
push
push
es
push
sub
ret
pop
pop
sbb
aaa
jmp
mov
push
and
jae
jns
jns
lods
dec
fbld
push
inc
push
das
aaa
add
cmp
cmp
lods
or
loopne
xor
mov
notl
jbe
iret
xchg
movsb
test
sub
das
daa
mov
aas
xlat
lret
mov
jns
pop
test
insb
fildl
xor
add
imulb
jmp
js
mov
push
cmp
sarb
or
mov
leave
xor
outsb
subb
movaps
push
bound
lods
jmp
inc
fstl
hlt
and
cli
mov
mul
mov
in
ret
sub
jnp
dec
push
pop
push
and
inc
subb
outsb
js
inc
nop
int3
lret
cld
mov
or
xor
shlb
sub
adc
into
pop
das
mov
ret
cmp
xlat
push
xchg
ljmp
and
mov
popa
insb
decl
dec
in
add
sub
xor
inc
add
jne
xchg
fs
ficoms
xchg
sub
jns
cmpsb
adc
or
out
push
sbb
cmc
push
jbe
das
aaa
mov
mov
push
in
rcr
leave
call
ds
popa
roll
mov
jp
xchg
dec
pop
mov
leave
cld
sbb
gs
decl
mov
dec
insb
lret
push
cmp
adc
xor
ficomps
lea
movsb
add
std
ret
or
je
jmp
repnz
scas
fprem
imul
and
iret
in
mov
in
leave
lret
mov
jno
mov
xor
add
push
mov
pop
rol
test
adc
sub
fiadds
mov
subb
jge
fnsave
adc
insl
push
pop
outsb
cmp
lods
nop
movsl
hlt
push
out
jne
mov
xchg
inc
mov
pop
stos
bound
pop
sub
rorl
add
dec
sbb
adc
mov
dec
jns
in
repnz
jo
push
shll
scas
lret
push
stc
mov
mov
pop
std
out
xlat
test
pop
imul
sbb
std
jno
div
and
dec
in
or
dec
or
rcrl
push
add
xchg
lods
stos
loop
add
mov
dec
mov
adc
cmp
les
mov
push
add
xchg
scas
fldcw
mov
mov
sub
cmp
insb
push
lea
push
inc
test
gs
and
pusha
or
pusha
sub
add
cs
jg
sbb
add
repnz
test
or
les
loopne
xlat
jmp
xor
shll
cli
adc
cpuid
arpl
jecxz
mov
mov
aas
sarb
mov
xchg
in
or
mov
inc
sahf
testb
cmpsb
mov
mov
out
add
ss
shrl
sti
xchg
es
mov
fdivrl
mov
jnp
sub
jbe
ret
lea
push
sub
icebp
and
popa
add
out
xor
aaa
add
inc
push
jle
repz
fistpll
data16
insl
push
adc
mov
fsub
xlat
stos
ja
jae
repz
cwtl
xchg
cmpsb
mov
xchg
sbb
add
mov
sub
push
mov
movsl
xchg
add
stc
nop
mov
inc
push
xchg
lcall
arpl
fisubrl
pushfw
inc
mov
inc
lret
and
lret
jle
leave
push
mov
imul
iret
adcl
mov
fldl
jmp
enter
mov
test
xor
pop
cli
mov
mov
subb
mov
pushf
pop
xor
xchg
jb
jae
xor
push
xlat
fisubs
int3
pusha
dec
fistl
pop
in
lahf
in
mov
cmpsb
sbb
mov
pop
arpl
cmp
jae
jg
adc
repnz
popf
dec
dec
mov
xor
add
mov
push
std
inc
fnsave
int3
pop
jne
fs
jbe
sub
addr16
sub
stos
rclb
popf
movsb
arpl
jae
hlt
xchg
sub
or
xor
imul
xor
xchg
daa
inc
or
out
cmp
movsb
add
mov
mov
dec
dec
mov
xchg
add
fcomip
push
xor
push
arpl
out
shr
cmp
mov
mov
push
mov
dec
adc
adc
aad
jecxz
pop
adc
sbbl
or
mov
aad
out
lock
inc
test
insb
xor
repnz
icebp
dec
and
jbe
mov
jecxz,pn
adc
pop
mov
sbb
scas
movsl
std
insb
imul
and
jmp
fwait
lods
fsts
test
mov
mov
jmp
jp
stc
and
hlt
mov
lret
cmp
cltd
fsubs
jecxz
xlat
push
in
mov
xchg
insl
mov
xor
push
inc
pop
lret
or
mov
xchg
dec
mov
inc
xchg
lahf
mov
stc
lret
xlat
pushf
jecxz
jle
nop
pop
in
cmpsl
adc
imul
sub
add
mov
sub
in
cmp
push
rolb
xor
hlt
dec
notl
loop
imulb
lret
fbstp
add
icebp
push
inc
cmpsl
ret
imul
pop
fsubrs
fwait
pop
mov
jno
or
mov
int
cmp
aam
xor
shr
cmpsl
inc
adc
loope
push
stos
cwtl
out
shrb
test
aad
daa
mov
lret
fcoml
mov
pop
mov
adc
cmp
add
imulb
or
cmp
pop
test
stos
out
test
add
rorl
inc
mov
sti
dec
divl
and
mov
inc
mov
ss
sbb
lock
adc
adc
movsb
dec
mov
push
in
ret
outsl
test
add
cld
sbb
xor
leave
sub
loopne
fmul
sbb
jnp
adc
mov
out
or
test
push
mov
loopne
std
xor
jp
xchg
sarl
lods
roll
sbb
loopne
popf
sbb
pop
test
inc
scas
dec
pop
mov
mov
pop
cltd
shrl
mov
das
fdivl
outsb
leave
push
pop
mov
add
in
int
pop
dec
scas
mov
fsubr
mov
outsl
sub
inc
insl
push
sbb
pusha
insb
nop
in
adc
or
xor
and
pop
insl
outsb
stos
dec
in
es
mov
int3
pop
or
test
mov
jmp
mov
xchg
mov
test
sbb
sar
pop
iret
bound
jo
push
dec
jge
xorl
xchg
xor
cs
mov
dec
mov
sbb
sub
mov
xlat
push
or
xor
out
sub
call
jmp
jle
nop
jmp
or
cmpsl
shl
or
sbb
cmp
ljmp
fs
out
out
adc
sub
std
pusha
popf
xlat
xchg
pop
scas
xchg
jb
imul
sbb
outsl
push
jbe
stos
js
aad
and
and
mov
inc
and
cld
push
mov
psrlq
aas
cmp
jns
sub
xchg
test
fmull
inc
mov
jg
inc
fwait
stos
sub
sbb
mov
insl
mov
clc
mov
out
insl
fdivs
xor
jne
sub
or
loopne
ljmp
sahf
cmp
daa
xchg
mov
cmpsb
idivl
push
sbb
mov
push
ret
stos
jae
inc
mov
ljmp
pop
pop
jmp
mov
adc
dec
jno
push
inc
sbb
push
adc
mov
outsb
pop
and
xor
inc
push
push
or
sbb
cmp
lods
push
jg
and
mov
rcll
mov
jge
dec
pusha
enter
jae
repnz
arpl
push
xor
cmp
xchg
jg
out
ficoml
inc
shrl
xchg
push
out
inc
pop
xchg
cmpsl
in
cmpsb
mov
test
cmpsb
xchg
negl
in
add
add
shl
daa
sbb
iret
lret
loope
ss
imul
clc
ljmp
cld
stos
sbb
loop
jmp
out
inc
inc
fisubrl
inc
mov
adc
xor
dec
pop
aas
stos
pushf
pextrw
adc
cmc
cwtl
pop
xchg
testb
jo
lods
sub
dec
insl
mov
xor
popa
adc
xor
aad
ds
shlb
aam
pop
ja
mov
std
push
lods
daa
test
pop
sbb
inc
mov
or
jbe
gs
movsb
jne
es
xchg
lds
push
icebp
cli
dec
adcl
rcl
int3
fld
sub
and
nop
aam
notb
push
and
or
or
jmp
mov
mov
mov
xor
lea
nop
sub
jo,pt
int
dec
push
pop
jb
add
test
mov
mov
cmp
popf
pushf
push
sbb
out
dec
icebp
cmc
push
sub
inc
ss
leave
test
and
popa
js
sub
adc
outsb
mov
xor
xor
adc
pop
sti
fistpll
xor
jo
daa
pop
sub
psllw
push
rcr
dec
xor
mov
pop
inc
cmp
xlat
push
cwtl
leave
mov
xchg
test
sub
loopne
sbb
fsubp
stos
jg
cmpsb
mov
mov
ds
inc
and
popf
inc
add
mov
pop
pushl
cmp
dec
sbb
dec
loopne
aam
mov
mov
and
push
mov
jg
ljmp
daa
mov
pop
sub
push
in
scas
inc
mov
mov
lods
jns
pop
lahf
hlt
std
pop
aad
insb
pop
daa
lea
dec
inc
dec
aas
dec
iret
pop
jns
mov
test
cwtl
jae
int
dec
fldcw
mov
fadd
fcomps
pop
sbb
fwait
sarl
lahf
xor
aaa
adc
sub
xchg
pop
or
push
call
insl
mov
pop
jne
push
jmp
push
popf
out
mov
iret
mov
push
pushl
es
dec
std
loope
xchg
add
jnp
andl
shl
stos
nop
xchg
inc
imul
cmp
and
lods
inc
jle
jmp
int
or
sub
dec
negb
mov
popa
xchg
fcomp
lcall
scas
fisubs
gs
hlt
lahf
sbb
and
lret
rcpps
cmpsl
mov
push
incl
movsb
pop
push
xor
ret
mov
jne
in
pop
rclb
mov
mov
stc
jle
push
mov
in
push
shrl
adc
lods
imul
dec
ljmp
xchg
xchg
dec
mov
cltd
mov
or
lahf
pop
pop
pushf
push
fidivs
lods
not
jmp
and
mov
cmc
sti
or
iret
mov
fimull
popf
ja
inc
je
std
inc
std
pop
ficoml
mov
mov
aad
iret
mov
adc
or
inc
cmp
fimull
xor
repnz
mov
int3
xchg
lret
popa
sub
arpl
add
fcmovu
ljmp
int3
leave
xchg
repz
lea
xlat
fdivrl
pop
push
push
sbb
lcall
jle
fistl
shlb
iret
dec
pop
sahf
pop
jecxz
xlat
lahf
popl
lahf
pop
inc
lods
dec
dec
push
sbb
scas
clc
aam
inc
pop
xor
sbb
sarl
mov
jge
mov
dec
inc
mov
mov
inc
jecxz
addr16
inc
lods
jae
xchg
jno
adc
pop
sbb
pop
in
scas
ror
jecxz
enter
ss
test
pop
and
in
jns
pop
adcl
and
loopne
lods
mov
xchg
lods
shl
jo
xchg
sbb
mov
out
inc
enter
movsl
cltd
bnd
cld
andb
mov
xchg
adc
jno
cltd
and
loope
aaa
sub
stc
lret
and
int
stos
js
xchg
adc
insl
icebp
fstps
and
gs
jns
add
xchg
xor
test
xor
insb
lret
pop
push
jne
movsl
stos
hlt
push
sub
ret
imul
jecxz
mov
call
addr16
add
add
xor
xchg
jb
mov
jg
mov
addr16
fucomip
cld
jle
sbb
mov
cmp
out
fildll
sub
cmpsl
mov
hlt
jnp
inc
xor
adcl
test
aad
xchg
push
out
adc
dec
or
jno,pn
jo
sub
out
sbb
iret
fwait
jge
mov
mov
out
inc
int
cmc
push
repz
mov
sbb
sbb
pushf
mov
dec
or
cwtl
jns
sbb
inc
test
and
push
shl
lds
fstpt
mov
mov
nop
icebp
call
push
popa
push
in
adc
stos
adc
lock
mov
xor
stos
jmp
loopne
loope
lock
push
ret
out
arpl
lock
pop
xchg
into
jge
jo
rcll
dec
inc
scas
xchg
pop
mov
add
or
inc
sbb
mov
aas
iret
pop
xor
inc
std
shl
movsl
mov
imul
or
and
mov
clc
push
push
addb
dec
mov
and
jae
sub
and
fnsave
jb
fadds
adc
adcl
mulb
int
loop
insb
pop
call
mov
pushl
fcomp
cmp
or
mov
and
lds
notl
aas
add
test
cmp
push
jmp
xchg
xor
add
scas
xlat
rorb
stos
dec
push
and
clc
add
xchg
mov
push
pop
add
bound
add
jo
or
add
xor
cmc
adc
test
flds
stos
mov
or
lea
iret
adc
sub
or
dec
pop
mov
test
fs
sub
cmc
mov
jge
aad
hlt
mov
mov
pop
cs
jmp
cwtl
fldt
jnp
mov
inc
sub
pop
mov
sahf
insb
test
sbb
lds
xchg
cld
aaa
out
xchg
mov
or
or
pushl
faddl
push
std
iret
orb
xor
cmp
fmull
mov
add
fwait
jb
insl
rorb
adc
inc
fstpl
xchg
pop
pop
stc
inc
bound
scas
pop
mov
ja
inc
imul
test
push
jno
test
scas
push
xchg
mull
popl
mov
cmc
popf
pop
loope
add
rclb
xchg
push
leave
out
adc
add
pop
xchg
lret
mov
clc
and
icebp
mov
dec
cs
mov
mov
repnz
mov
xchg
xor
mov
or
mov
pop
stc
loopne
clc
add
lea
lahf
pop
mov
call
imul
sub
lods
mov
jns
push
push
xchg
add
inc
pop
dec
xlat
xchg
mov
inc
xchg
outsl
ficomps
jg
adc
pop
jecxz
push
xchg
xchg
jmp
mov
xchg
jno
fwait
aad
pop
ljmp
xchg
ret
call
push
ret
scas
xchg
in
sub
xchg
jg
pop
outsl
push
sub
or
nop
shlb
pop
jg
xchg
push
outsb
jo
mov
sbb
mov
dec
ret
push
xor
aad
jns
or
jp
jle
outsb
adc
inc
ljmp
arpl
cltd
inc
xchg
je
push
push
cmp
pop
popf
lret
ret
repnz
mov
cmp
add
jb
int3
pop
push
fwait
and
repz
push
lds
je
pop
dec
add
andb
repnz
adc
dec
loope
jg
cwtl
xchg
add
cli
mov
jle
adc
mov
mov
insb
push
ja
and
mul
mov
xor
sub
outsb
push
mov
sahf
sbb
jge
data16
insl
clc
cwtl
addr16
pop
inc
addr16
int
push
leave
xor
imul
jae
add
and
pusha
dec
mov
xchg
push
sub
cli
imul
sahf
dec
add
mov
cmp
call
pop
add
pop
sub
sub
outsb
and
and
fs
lods
mov
sti
cmpsl
mov
jae
inc
sarb
jne
lahf
imul
xchg
add
push
dec
loopne
lea
mov
in
xchg
xchg
test
ret
pop
test
add
sbb
mov
dec
dec
pop
cmpsl
mov
lret
xchg
sub
out
in
jle
mov
call
mov
jp
sbb
mov
lods
or
mov
xchg
pop
mov
mov
cmp
rcr
and
xchg
or
sub
push
add
add
adc
test
aam
int
stos
mov
jbe
lods
dec
int
xchg
add
rclb
sub
orb
je
jns
dec
outsb
or
sarb
and
adc
imul
mov
sbb
in
adc
cmp
in
cmp
and
ja
push
or
fldl
in
pop
push
lock
dec
jne
adc
fdiv
cmp
adc
push
xchg
popa
jg
add
lea
in
mov
pop
xor
mov
lock
into
xor
jmp
mov
xchg
hlt
daa
xchg
ja
push
mov
xorb
adc
test
push
shlb
xchg
insb
clc
test
sbb
hlt
xchg
xor
test
rcll
jnp
daa
sub
add
mov
mov
inc
outsw
fnsave
mov
jg
fcmove
stos
std
inc
and
push
out
push
sarb
xlat
fimuls
or
movsb
xchg
xchg
push
mov
cmc
dec
pusha
xor
mov
rolb
dec
inc
dec
xchg
cmpsb
adc
in
aaa
cld
and
xchg
lock
xchg
mov
gs
lret
xor
lret
dec
pusha
lds
and
push
cmpsb
int
mov
push
dec
cmpl
mov
hlt
fists
dec
aaa
inc
testl
push
push
out
xchg
movb
push
push
imul
xor
imul
jp
inc
or
imul
push
add
cmpsl
cmp
mov
jge
fucomp
dec
inc
mov
add
pop
sub
jg
mov
mov
mov
aas
mov
int
xor
sahf
in
inc
sub
stos
xor
push
xor
gs
mov
arpl
sub
out
out
lcall
dec
sbb
mov
sub
adc
jns
cwtl
jp
jp
or
leave
outsb
jae
int
aad
push
add
sbb
sti
push
mov
or
lcall
es
mov
mov
insl
dec
jo
jnp
test
mov
pop
adc
jl
mov
or
insl
aas
adc
jb
pop
punpcklwd
add
out
or
mov
jge
xchg
adc
pusha
das
sahf
pop
mov
jb
sub
in
mov
push
ds
fildll
mov
insl
pop
addr16
bound
push
out
movsl
mov
std
inc
sbb
fisttpll
mov
mov
xchg
nop
sahf
test
cld
jnp
test
mov
sub
lds
mov
xor
test
sub
cli
orb
test
sbb
mov
xchg
sub
mov
adc
sbb
jb
push
jnp
sub
repnz
lock
cmpsb
outsl
cli
xor
xor
imul
jmp
dec
dec
lret
lods
stos
cmpsl
iret
dec
out
add
iret
mov
aad
ret
imul
inc
xchg
dec
mov
ret
movsl
mov
mov
add
insb
push
xor
rorl
inc
scas
fcompp
lods
dec
pusha
mov
je
ret
rcll
mov
shrb
aas
pop
enter
dec
xchg
adc
pushf
add
or
in
scas
imul
test
cmp
dec
xchg
ret
cltd
inc
sbb
and
pop
pop
fwait
stos
push
adc
test
xchg
fiadds
pop
cs
mov
jecxz
icebp
lods
jno
in
popa
daa
std
inc
cmp
jmp
lcall
mov
clc
js
imul
push
cmp
inc
jno
inc
es
and
out
mov
fwait
js
insb
jg
or
movsb
mov
dec
or
pop
shr
sub
or
mov
scas
xchg
aam
jge
jne
sti
lret
and
mov
pop
leave
mov
mov
cld
dec
rorb
pop
lcall
mov
pop
fcmovnbe
or
xor
adcb
add
mov
out
push
fisubs
rolb
dec
andl
and
jg
das
dec
stos
fcoml
pop
adc
in
daa
mov
ret
push
hlt
mov
repnz
cmp
add
enter
jp
bound
iret
jle
cmp
rclb
pop
jbe
dec
jecxz
mov
mov
xchg
adc
int3
or
jmp
int
push
inc
popf
jl
push
push
js
bound
mov
fwait
mov
mov
in
fimuls
xchg
or
jp
daa
inc
cmovo
jo
mov
mov
dec
mov
pop
add
jle
mov
xchg
lock
popa
adc
iret
inc
mov
inc
inc
mov
xor
in
jno
ret
popf
dec
icebp
imul
push
xchg
jae
into
pop
stos
ds
in
test
and
push
xor
push
xchg
repz
popf
sub
mov
jae
shrb
cmp
or
mov
fildl
int
pop
mov
call
mov
mov
mov
and
arpl
mov
pmovmskb
shrl
cli
pop
pop
aam
in
roll
lods
push
dec
push
jecxz
inc
sahf
lods
sbb
jnp
shl
fdivs
mov
jge
daa
inc
and
and
aam
stos
mov
inc
pop
das
mov
push
xchg
mov
dec
int
mov
push
test
and
imul
sbb
loope
je
dec
pusha
jno
stos
or
adc
dec
xor
xor
mov
cmpsl
push
sbbl
mov
jns
xchg
incl
mov
push
mov
fistpl
decl
cmp
mov
xor
out
int
cltd
sti
insl
ss
mov
mov
pop
mov
shll
xlat
int
cmp
dec
stos
lret
adc
sbb
sub
sar
cmp
fistpl
imul
movsb
aas
in
cld
add
pop
dec
push
dec
jle
les
xor
fisttpl
xor
icebp
jle
cmpsl
fildll
sub
cli
ljmp
daa
in
cmp
and
jns
insb
sub
add
push
inc
inc
out
jp
inc
or
sarb
hlt
test
sbb
inc
icebp
sbb
movl
dec
jb
fadd
dec
push
jmp
fwait
adc
jae
push
dec
sub
pop
push
push
cmp
pop
clc
inc
div
fdivrs
sbb
xchg
addb
loop
shlb
lcall
or
or
mov
add
stos
test
test
cltd
add
inc
ds
add
out
adc
and
sub
cmp
pop
fwait
sbb
xor
aam
incl
loop
mov
ljmp
iret
lds
lcall
faddl
rcr
add
mov
jbe
xchg
inc
push
imul
xor
jbe
cli
movsb
xchg
jnp
dec
and
xor
mov
iret
rep
pusha
adc
or
inc
sbb
and
mov
sbb
int
fiaddl
push
mov
rcr
mov
xor
test
je
xor
xorl
mov
cmp
lods
jb
xor
std
scas
dec
aam
aam
movsb
add
ljmp
stos
fwait
cld
or
test
mov
fs
mov
pop
mov
repz
jb
mov
jb
sub
loop
inc
fwait
push
inc
pop
mov
movsl
xchg
outsb
cmp
mov
popl
scas
adc
das
mov
mov
loop
cmp
mov
sbb
pusha
lods
mov
push
inc
lock
cmp
mov
sbb
or
jns
push
fdivs
in
xchg
fs
in
loop
dec
pop
loopne
loop
bound
cmp
mov
mov
add
aaa
lods
xor
mov
dec
mov
sbbb
orb
sarb
pop
and
leave
cld
jae
jbe
gs
xchg
xchg
loop
add
xchg
push
pusha
sub
xchg
xchg
jnp
and
xchg
jbe
lret
fs
cmp
mov
or
push
xchg
inc
incl
inc
mov
popa
push
in
aaa
je
lahf
iret
inc
add
repnz
push
adc
or
out
repnz
pop
cli
pop
insb
lret
mov
xchg
mov
xor
pusha
dec
and
gs
in
decl
mov
clc
out
xor
sbb
push
ss
int3
sbb
mov
addr16
inc
movsl
scas
lea
inc
pop
int
pop
inc
je
imul
insl
jmp
psrlw
adc
in
xchg
jmp
es
dec
test
xor
jae
dec
sahf
ficoms
out
icebp
mov
mov
leave
insl
mov
dec
test
jmp
int3
test
imul
push
add
loope
leave
push
mov
jbe
or
inc
xchg
xor
aad
push
nop
sub
and
movsb
sti
repz
jno
cli
add
jmp
cltd
int
lods
push
movsl
pop
loop
sti
sub
cmp
jmp
sub
xchg
push
inc
or
lock
sub
sub
pushf
mov
repz
dec
push
xchg
push
mov
mov
shr
outsl
mov
das
in
mov
ds
imull
lret
pop
adcb
cmp
cmp
test
pusha
stos
and
imul
pop
lea
popa
mov
adc
push
dec
mov
into
int
test
arpl
data16
mov
andl
sbb
add
test
and
mov
sub
inc
lret
daa
mov
cmc
jmp
int3
jle
xchg
sbbb
shll
sbb
dec
roll
or
jno
test
cltd
mov
std
lock
gs
cld
adc
pushf
sbb
fadds
push
lahf
bound
out
enter
subl
sti
or
shlb
popa
pushf
ljmp
xor
mov
loopne
outsl
daa
repnz
cld
jns
inc
aas
xchg
loope
pop
push
pop
lret
and
mov
test
das
hlt
pop
in
or
lcall
inc
pop
shrl
dec
xchg
or
rolb
das
and
subl
test
out
pop
fcoml
ja
movsl
mov
cmp
jmp
rcrl
je
das
jns
sbb
pop
xchg
pop
pop
in
add
push
mov
or
cwtl
sarl
gs
mov
xor
outsl
call
dec
pushl
sar
div
push
js
clc
inc
cwtl
aaa
insl
sub
lods
mov
sbb
cli
push
shlb
sub
pop
add
cmpsb
sub
daa
inc
lock
lock
xlat
sbb
stc
cmp
adc
xlat
and
leave
iret
jnp
inc
pusha
es
adc
mov
xchg
and
pop
addb
aaa
push
mov
mov
dec
or
lret
outsl
mov
add
push
in
pop
jns
iret
hlt
lahf
push
inc
sbbb
test
mov
jo
pop
or
test
dec
aas
push
lds
mov
iret
daa
in
cmp
rorb
inc
lcall
mov
jbe
das
in
cltd
and
lods
jns
fucomi
jae
ds
xchg
sbb
mov
test
aam
push
sub
mov
or
out
mov
push
add
fisttps
jno
std
je
imul
and
out
and
icebp
xchg
jbe
jl
xchg
int3
cmp
movsl
cmp
push
xor
push
std
shrb
aas
insb
cmp
fldl
rorl
mov
adc
aas
push
jg
es
and
sti
dec
jbe
ljmp
sbbl
and
daa
adc
rcll
mov
cmp
bound
andb
inc
adc
mov
mov
out
jbe
outsl
mov
loop
lcall
mov
mov
cwtl
add
pop
xchg
cmp
cmp
call
cmp
hlt
je
mov
in
push
loopne
in
push
cltd
addb
pop
jl
out
xchg
lcall
outsl
adc
jmp
in
shll
pop
shl
cmp
jmp
push
fcmovnbe
pop
stos
dec
cltd
ss
lock
fisttps
mov
andl
ja
jnp
dec
cmp
push
mov
cmp
das
lcall
mov
xor
das
xor
pop
fnstenv
sbb
jno
mov
insl
mov
sub
les
dec
mov
jo
dec
cmp
cwtl
stos
mov
pop
xchg
stc
scas
push
xchg
pop
test
cmpsl
iret
xor
dec
test
mov
hlt
inc
test
scas
mov
sub
data16
push
mov
enter
lods
cwtl
xchg
pusha
in
insb
lahf
dec
pop
lods
movsl
mov
aad
cmc
shll
aaa
push
cmc
push
xor
xchg
inc
push
sbb
daa
cmp
inc
mov
cmp
cmpl
test
inc
test
iret
movsl
lds
mov
push
cmpsb
iret
cmp
or
insl
sub
fld
es
dec
loope
mov
adcb
addb
adc
mov
jl
jle
or
lret
mov
mov
mov
ljmp
pop
sub
or
xor
sahf
lret
das
mov
ficoms
pop
pop
and
ds
pop
jnp
sub
jmp
jbe
lahf
fnstsw
out
mov
add
dec
std
add
shl
mov
or
or
sbb
movsl
xchg
and
rclb
mov
add
or
dec
push
or
xchg
sahf
cmp
out
and
mov
stc
lahf
inc
in
add
jno
add
adc
xor
adc
sbb
fldt
cmp
inc
popa
mov
testb
inc
stc
push
mov
sub
xchg
sbb
sub
mov
pop
pop
ret
daa
mov
push
jo
dec
sti
imul
or
movsl
pushf
fxch
mov
je
cli
inc
inc
inc
sahf
fwait
in
dec
nop
jmp
jge
mov
push
mov
daa
push
sub
rolb
xor
aam
out
mov
data16
fucomip
mov
xor
shrb
data16
pop
fistps
lods
in
cld
adc
sub
cmp
add
mov
mov
or
rcrb
inc
inc
xchg
fwait
es
imul
sub
test
jecxz
cmp
cltd
push
addr16
frstor
sbb
or
xor
inc
std
mov
mov
fidivl
ljmp
sub
ret
ret
pop
pop
ja
push
jg
add
and
fcmovu
out
subb
shrb
inc
je
stc
cmp
iret
lods
lock
es
push
jns
mov
xchg
lret
mov
push
lahf
jae
stos
out
mov
pop
fsubrs
sub
inc
sbb
stc
dec
pop
call
popa
push
iret
fcmovu
loopne
adc
or
int
mov
dec
loope
subl
stc
adcl
inc
and
loop
or
aad
adc
je
jp
sbb
das
sbb
imul
inc
mov
out
cmp
push
push
jge
rcll
lods
idivb
enter
loopne
dec
mov
in
pop
cmc
fsubr
out
jle
mov
pop
jmp
xchg
mov
cld
adc
xchg
mov
jmp
mov
in
outsl
lahf
dec
cmp
mov
enter
pop
mov
movsb
cli
loop
push
icebp
addr16
movsl
xadd
icebp
push
or
mov
test
in
and
imul
dec
push
rcr
inc
inc
jnp
movsl
pop
daa
cmp
call
mov
repz
mov
jp
cld
dec
popa
adc
xor
mov
test
inc
xor
sbb
pop
mov
pop
sti
roll
lock
shll
js
mov
add
call
fisttps
sarb
fldt
aam
push
sub
cmpsl
popf
imul
lret
mov
add
dec
ljmp
push
or
imul
shrl
int
int3
cs
fs
imul
mov
ss
pop
test
adc
xorb
ret
add
je
mov
daa
push
insl
inc
pushf
test
push
outsl
mov
jmp
in
jnp
push
add
imul
adcb
xorb
jge
mov
or
mov
push
add
daa
pusha
xor
jecxz
mulb
xor
je
sub
nop
mov
xchg
dec
xchg
pop
jbe
mov
push
inc
cmp
push
daa
xchg
shr
stc
cmp
mov
dec
cld
sub
adc
mov
and
cmp
in
cmp
int3
add
or
orl
inc
js
mov
mov
sbb
mov
cmpl
in
lcall
jecxz
movsb
cs
addr16
lds
cmpsl
lea
mov
add
stos
pop
in
lea
dec
std
sbb
jg
jno
pop
fsubrs
xor
popf
mov
sbb
mov
bound
das
push
loopne
sbb
cmp
xor
inc
cmc
xchg
ret
pushf
mov
push
jp
xlat
and
repnz
scas
sbb
add
hlt
aad
or
push
adc
insb
and
and
ja
inc
pop
sar
test
sahf
sbbl
aam
mov
pop
mov
jne
orb
sbb
pop
je
fwait
pop
ja
cmpsb
rol
push
mov
and
out
jnp
inc
adc
cvttps2pi
xchg
mov
inc
scas
stc
aaa
fdivrp
adc
repnz
inc
mov
stos
in
mov
and
pop
outsl
lahf
cld
das
test
pusha
add
and
loope
orb
lods
out
sub
sbb
iret
ret
loop
xchg
shl
mov
jmp
inc
jmp
out
adc
push
sarb
ds
xchg
xchg
insl
mov
mov
push
lds
cmp
mov
sar
xor
stc
fwait
inc
mov
ss
pop
into
into
in
setns
inc
cmp
pushf
mov
and
mov
ss
and
push
test
jge
insb
and
mov
sbb
pop
lea
jecxz
hlt
lcall
mov
lret
add
shlb
push
mov
cmp
lret
cli
ljmp
xchg
pand
iret
push
mov
loop
xchg
in
cltd
scas
jae
lods
adc
dec
adc
cmp
ror
xchg
xor
cmp
jbe
cmp
xor
movsl
call
push
inc
ja
xor
mov
ja
pop
iret
adc
sahf
fwait
pop
mov
fiadds
push
and
sbb
js
outsb
mov
ja
mov
andb
in
xlat
fwait
jb
in
or
sbb
dec
xor
push
cwtl
cmp
push
mov
addr16
data16
xchg
cmpsb
cmpsl
out
jb
push
xor
js
daa
xlat
sahf
push
imul
inc
es
stos
xchg
je
lock
or
sub
popa
stc
mov
mov
incl
rcrl
rcr
sub
std
int
rcrb
cs
scas
addl
mov
pop
xchg
jnp
cs
sbb
xor
fidivs
scas
mov
in
js
push
mov
fisubs
fwait
aad
sub
add
sti
das
ret
pushf
xchg
hlt
cmp
and
push
neg
jb
pop
shr
jle
xor
pop
dec
fldcw
mov
js
sub
shl
cmp
sbb
sahf
mov
push
nop
pop
ret
pop
sub
pop
lock
add
sahf
lahf
adcb
in
pop
je
mov
pop
addr16
sbb
jno
arpl
hlt
popf
xor
rcll
mov
mov
pop
push
into
xor
ret
jge
popl
out
or
add
and
inc
insl
lds
popa
sub
mov
in
mov
aas
fdiv
lret
call
jnp
pop
shlb
iret
inc
and
or
jp
rcrl
fdivs
mov
pop
loopne
data16
nop
jle
push
and
das
clc
mov
jg
icebp
adc
cwtl
pop
loope
sub
add
mov
nop
fists
lods
imul
bound
gs
ret
popa
loopne
mov
scas
in
push
mov
jnp
mov
daa
insb
js
pop
inc
pop
push
xchg
nop
xchg
cmp
clc
pop
inc
pop
jmp
push
jns
and
xchg
dec
sub
in
lea
lock
aad
push
xor
popa
or
shlb
scas
lea
rclb
jbe
clc
mov
adc
fnstenv
jne
aam
mov
jge
lods
lds
pop
push
cmp
jmp
fwait
aas
and
nop
pop
mov
inc
lods
or
xor
mov
ja
or
or
imul
mov
aam
push
push
adc
je
and
jns
jg
pop
jns
aad
mov
mov
pop
shlb
adc
mov
sub
xchg
xor
cmp
rol
mov
aas
ret
sub
loope,pn
in
add
pop
imul
mov
push
push
xchg
ret
sub
js
mov
xor
sub
jmp
scas
mov
inc
push
nop
pop
insl
test
xchg
dec
pop
xor
adc
fwait
jge
andl
loop
sub
sarl
iret
rorb
daa
lds
lds
xor
out
sahf
inc
xor
insl
adc
and
mov
bound
fnstenv
je
cmovns
jmp
adc
dec
pop
loop
pop
mov
cmp
add
cmpsl
xor
ret
sub
mov
fisubrs
stos
mov
fcmove
inc
cwtl
orb
mov
mov
or
mov
push
imul
and
fcmovnb
repz
sub
in
aam
jle
cmpl
dec
daa
sahf
lods
data16
xchg
mov
subb
xor
iret
std
test
mov
cwtl
push
push
cwtl
jg
inc
fcmovu
repz
push
in
adc
jp
fs
popa
cmp
push
ljmp
sbb
test
adc
cmp
dec
add
shlb
ret
push
pop
mov
push
mov
mov
sbb
mov
mov
leave
or
mov
xor
jno
insl
add
mov
and
ja
rcrl
pop
inc
out
xor
lds
pop
or
pop
bound
mov
inc
xlat
mov
sub
and
cli
xor
or
out
xchg
enter
push
lds
mov
and
pop
pop
outsl
cs
jae
add
dec
fildl
pop
scas
pushf
out
dec
sbb
cmp
push
testl
incl
lods
idivl
dec
dec
insb
pop
and
and
std
insl
filds
les
or
popf
mov
fisubrs
dec
lret
mov
test
repnz
lock
sub
adc
push
xor
loop
add
scas
lods
ucomiss
les
stc
xor
adc
loop
das
shll
xchg
and
roll
sub
scas
dec
mov
sub
inc
shrl
out
shll
lock
divl
test
xchg
mov
out
scas
adc
into
movsl
loope
imul
add
jnp
adc
and
mov
add
sub
dec
mov
add
jae
lea
movsb
popf
incl
subb
sub
push
faddl
xor
cmp
add
mov
pop
out
mov
sub
ja
push
xchg
pop
orl
and
call
push
lahf
mov
cmp
andb
jne
into
call
pop
aas
inc
je
add
xor
test
ud0
adc
rcrb
lock
out
ds
fsubrs
sbb
popf
cmc
arpl
cmpsb
lret
sbb
mov
mov
xchg
pop
imul
dec
sbb
iret
dec
movsl
subb
or
shl
scas
cmpsb
jl
inc
jb
out
xchg
cmpb
test
inc
xchg
hlt
ss
xchg
adc
cli
mov
jne
sbb
add
inc
lcall
dec
in
stos
pop
and
xchg
xor
xor
xor
jo
cmpb
sub
enter
scas
fcomi
push
pop
cmp
mov
jg
insl
push
inc
push
pushf
stos
adc
mov
fbld
inc
push
repz
es
mov
pop
cmp
pop
inc
sti
mov
jb
jecxz
popa
and
aam
cltd
and
xchg
fmuls
push
adc
outsl
add
std
mov
and
std
mov
xor
cmp
hlt
cmp
push
loop
xchg
mov
mov
lret
fisubrl
iret
insb
xchg
popf
dec
mov
cld
leave
test
sbb
inc
push
jae
test
mov
cmpb
subl
insl
fisttps
sbb
inc
push
dec
and
mov
in
xchg
sub
cmp
jmp
jmp
stos
mov
push
mov
xorl
xchg
mov
aam
jle
jecxz
movsl
jns
mulb
outsl
push
imul
sub
sub
ror
les
fmul
gs
pop
or
sahf
lea
adc
jbe
mov
sbb
adc
mov
daa
jle
mov
jecxz
push
push
nop
mov
cld
clc
push
sbb
je
add
dec
jg
sub
scas
push
lahf
mov
sub
inc
xchg
xor
ss
or
push
js
xor
lods
add
add
pop
gs
stos
sbb
repnz
dec
das
out
imul
inc
xchg
mov
stc
imul
mov
add
jne
out
pushf
mov
les
and
int
pop
cltd
dec
subl
mov
push
les
and
and
divb
or
mov
add
int3
sarb
mov
jb
aas
sub
daa
mov
bound
xor
insl
mov
imul
inc
mov
lods
out
mov
popa
mov
mov
and
loop
jns
sti
push
mov
add
and
cmp
pop
sbb
in
sub
aas
xor
aam
stos
sti
push
and
jnp
in
popa
test
loopne
movsl
ja
add
sbb
push
xchg
aam
fsubrl
in
jae
clc
outsb
xor
popa
xchg
xor
add
jns
push
in
jne
xchg
ret
adc
add
cmpsl
imull
cli
bound
add
xchg
imul
push
shl
mov
xchg
cltd
fcmovb
fiadds
jmp
lret
ljmp
and
sub
subb
sbb
mov
dec
lock
fidivs
leave
mov
jp
dec
sti
and
daa
mov
xchg
mov
xchg
xor
adc
adc
cltd
addr16
iret
pop
cmp
adc
inc
pop
mov
pop
iret
bound
lea
aaa
dec
jmp
fisubrl
aam
inc
add
cld
xlat
push
xor
pop
mov
cmpsl
sbb
dec
pop
mov
popa
xor
cmpsb
mov
flds
pop
or
xchg
cmpsl
and
and
xor
dec
pop
lret
jnp
lds
int
add
cltd
lret
movsl
lahf
mov
xchg
lods
push
xor
adc
movsb
sti
aam
and
mov
mov
jecxz
adc
fcoms
cltd
or
stc
dec
callw
test
fisttps
nop
out
incl
push
jno
xchg
pop
lret
addr16
test
xchg
sub
jne
insb
popf
push
cmp
adc
xchg
mov
ja
sarb
out
mov
stc
rorl
mov
cmp
pop
movsl
pusha
push
ss
xchg
mov
add
dec
clc
mov
sub
or
jbe
aad
jno
movsl
push
push
out
push
jg
pop
decl
sbb
sbb
mov
fadds
addr16
test
push
mov
inc
pop
aad
inc
push
cmp
xor
fisubrl
jg
pop
lods
inc
push
cmp
and
cmovg
imulb
in
sahf
aam
mov
gs
mov
jg
in
fcomps
xor
jne
mov
dec
test
repnz
or
push
pop
adc
mov
sub
xchg
push
pop
shll
fisubs
lock
cmp
pop
sub
scas
cmp
out
orb
lock
js
mov
dec
jnp
imul
cmp
dec
popf
out
xor
mov
pop
je
iret
mov
sbb
movsb
pop
xor
xlat
mov
adc
or
push
sub
inc
push
notl
lds
loopne
pop
into
jle
cmpsb
xor
sub
cltd
mov
repnz
jns
ret
sarb
pop
add
push
mov
xchg
xor
jecxz
xchg
jmp
sbb
cmp
jns
add
xchg
xchg
jge
mov
jae
scas
scas
jp
mov
in
scas
jo
aad
and
and
and
int
subl
outsb
aaa
repz
xor
popf
jno
fwait
add
push
repz
insl
test
jne
pop
stos
fidivrl
aaa
sbb
inc
dec
jecxz
mov
lods
add
push
cmp
pop
sub
ljmp
mov
aam
popa
mov
cmc
and
lret
jnp
mov
adcb
data16
mov
adc
inc
pop
lahf
in
pop
push
pushf
push
popa
adc
rolb
pop
adc
jmp
mov
aad
jo
daa
aam
pop
lods
xchg
ja
or
pop
add
mov
cmp
stos
scas
push
adc
xchg
adcl
pop
jno
push
into
mov
stos
out
or
imul
jle
sbb
rorb
or
shll
push
ss
mov
std
xchg
mov
pop
outsb
mov
std
adc
push
lods
mov
xchg
add
dec
add
xor
iret
ja
cmc
movsb
sahf
cmp
pcmpeqw
aam
ss
in
pop
les
add
cs
mov
mov
rep
inc
sbb
fildl
push
add
mov
jo
xchg
ja
mov
push
scas
xorl
outsl
mov
mov
push
cmp
mov
sub
xchg
push
movsl
into
mov
popf
pop
and
xchg
cmpsb
sub
push
testl
xchg
shll
push
pop
roll
dec
jne
sbb
hlt
cmp
std
mov
repz
stc
gs
pop
xchg
push
jl
add
mov
sub
cmpsb
mov
popa
jecxz
mov
insb
jbe
daa
xlat
call
xchg
cltd
into
pop
jl,pn
or
push
pop
sbb
outsb
or
mov
repz
sbb
lea
rorl
scas
inc
sbb
add
xor
cmp
loope
pop
jns
int
lods
pop
lds
mov
fbstp
cld
and
and
jl
dec
push
add
mov
xor
or
ror
insl
mov
and
gs
mov
lcall
movzbl
pop
das
call
std
jae
fdivrp
sbbl
ret
add
jl
add
into
ljmp
sbb
and
push
mov
dec
cli
fmull
jne
xor
mov
push
sub
lea
mov
inc
mov
out
pop
scas
inc
sbb
das
insl
mov
ss
aad
jle
sbb
jb,pn
push
xchg
int
push
es
fdivs
clc
push
jns
ja
aad
lahf
std
cld
in
aad
rcrl
pop
fisubrs
lcall
push
fmull
or
xor
std
test
or
add
jns
cmp
ficomps
mov
or
pop
mov
pop
cmp
xchg
adc
loop
lcall
jge
and
cmp
mov
mov
outsb
push
mov
push
loop
ficoml
cmpsb
je
pop
inc
test
xchg
mov
repz
add
jmp
adcl
int
push
test
scas
add
sub
imul
sub
jge
loope
cmp
fisttpl
repz
fucompp
stos
xor
cmp
pushf
mov
movsb
add
jg
aas
movsb
in
push
dec
adc
icebp
out
stos
jo
negl
pop
push
inc
mov
sbb
adc
mov
aad
dec
bound
fdivl
movlps
in
jp
clc
icebp
adcb
lret
shlb
stos
lret
xchg
mov
int
data16
sarb
jmp
sbb
xor
push
or
leave
jecxz
xchg
push
sarb
or
add
mov
jge
pop
dec
test
outsl
pop
in
push
push
jb
push
and
xchg
flds
push
sub
gs
mov
sti
cld
inc
pop
mov
mov
mov
aam
lods
or
shll
mov
out
push
dec
or
popf
movb
stos
lea
jns
ret
push
scas
movsb
popa
pop
adc
jo
xor
test
sahf
arpl
rolb
mov
or
lahf
ret
mov
xor
insb
add
xchg
cltd
iret
leave
adc
mov
lcall
in
or
mov
sbb
imul
out
mov
or
loope
pop
lds
jb
fstpt
les
cmp
mov
dec
aam
test
cmp
cmp
lahf
dec
mov
and
roll
mov
lods
xchg
and
daa
ret
push
or
push
inc
fcomps
mov
add
jg
sahf
adc
jle
lods
dec
lea
xor
pop
out
out
mov
push
enter
xchg
inc
pop
add
mov
js
cmpl
mov
mov
data16
cmp
push
xor
push
cmpsl
leave
mov
js
mov
adcl
xchg
sbb
pop
insl
sbb
loopne
xor
jo
lds
adc
jg
ret
aas
ja
dec
jns
xchg
xchg
cmp
xor
test
popl
xor
or
jg
pop
push
fnstcw
sbb
stc
ret
call
jnp
idivl
std
test
xchg
jmp
aaa
test
or
add
inc
sti
lods
or
and
pop
add
stc
fld1
ja
inc
dec
fldt
lcall
stos
aaa
imul
mov
gs
pinsrw
lahf
pop
jp
ror
push
xchg
mov
addr16
and
pusha
mov
inc
cld
add
sbb
arpl
jnp
dec
push
pop
pop
dec
sahf
or
repnz
in
into
jle
imul
cltd
sub
sub
xchg
ret
pusha
or
and
ret
lock
cmp
dec
push
jp
mov
xchg
xchg
add
and
cltd
in
shrb
pop
xor
cmpsb
rcrb
inc
in
nop
cmp
aas
sti
cmpsl
pop
gs
ja
cmc
sub
or
cmpsb
sti
and
test
popa
push
aad
scas
mov
rcrb
or
or
std
sbbb
and
xor
into
outsl
das
sub
mov
jp
xchg
movl
js
aaa
gs
push
jmp
cmp
sbb
mov
cwtl
stos
sbb
push
pop
mov
sub
jp
das
inc
adc
movsl
push
movsb
lods
pop
jae
jmp
add
pop
and
mov
out
pushf
sub
incb
inc
movsb
inc
xchg
xlat
pop
and
dec
stos
jno
mov
push
imul
insl
mov
push
fists
loope
sub
pop
pop
mov
dec
lret
cmp
add
lock
xchg
jmp
mov
pop
mov
gs
and
sbb
ss
ja
cld
and
in
lods
cmpsb
mov
add
push
push
test
mov
push
sub
idiv
mov
test
pushf
shrl
loope
ja
xchg
lahf
fwait
gs
or
mov
ds
outsb
dec
insl
mov
popf
out
inc
or
es
cmp
and
xchg
push
aas
aam
js
cmp
rclb
ja
mov
mov
sbb
xor
push
inc
pop
mov
arpl
dec
mov
sub
stc
cmp
dec
pusha
mov
ret
mov
inc
stos
cmp
test
sar
mov
rorl
inc
fdivs
pop
inc
icebp
xchg
push
shrl
or
movsl
adc
cs
iret
stos
das
mov
cltd
jo
push
shr
loope
add
enter
mov
pop
push
sub
scas
adc
shl
je
mov
pop
test
lds
incb
jae
das
repnz
push
or
xchg
push
mov
mov
fadds
pusha
xor
clc
xchg
imul
imul
xchg
cld
dec
repz
ljmp
out
xadd
lods
cmp
imul
jmp
mov
pop
inc
aas
lea
imul
leave
and
loope
fildl
icebp
out
insb
jns
shll
adc
loop
adc
xor
mov
hlt
andb
xchg
loopne
lret
fldl
ds
arpl
cwtl
sbb
cmpb
test
inc
or
dec
adc
fnstcw
inc
or
xchg
cmpsl
lret
jge
and
dec
cmp
loop
sbb
aam
xorl
push
std
add
adc
xchg
jmp
repz
mov
lcall
outsl
das
std
insb
push
lahf
adc
dec
je
das
fisttpll
sahf
adc
es
imul
loop
jmp
inc
pop
jecxz
js
inc
inc
xchg
pop
jo
outsl
push
add
add
xchg
popaw
cmp
fidivrs
call
shll
pop
and
sahf
sbbb
inc
ljmp
cltd
js
sub
out
cld
mov
or
popf
or
sbb
lds
mov
repnz
fwait
sub
mov
adc
ret
inc
insl
ja
or
scas
xor
lret
mov
xchg
push
pop
mov
lock
repz
cmpsl
xchg
add
jo
inc
outsl
out
jo
adc
dec
lcall
outsb
jo
sbb
jne
xor
push
xor
mov
test
mov
cwtl
dec
cmp
les
frstor
xchg
bound
sbb
pushf
adc
inc
pop
mov
jg
mov
lock
mov
sbb
insb
sbb
jno
inc
and
icebp
cwtl
cmc
sub
iret
in
scas
addr16
and
jp
int3
sub
das
adc
dec
push
pop
ret
and
loop
rclb
dec
jp
mov
jle
aad
fwait
mov
cltd
es
cmp
insl
popf
pop
push
sbb
iret
push
jg
cmp
pop
cmc
out
pop
cmc
pop
ficomps
rcrl
xchg
or
cmp
jnp
pop
pop
les
jnp
push
inc
cld
es
mov
out
or
push
insl
fs
xor
push
inc
push
repnz
cmp
pop
or
add
jae
lcall
and
adc
mov
ja
pop
popf
xor
mov
mov
dec
xor
dec
and
mov
lcall
pushf
daa
or
decl
or
and
loop
inc
orb
inc
negl
push
fld
xchg
sbb
mov
inc
jo
enter
mov
lahf
xor
and
aam
fwait
push
cmpsl
mov
mov
mov
out
jo
xchg
dec
hlt
pop
jno
int
fwait
stos
ja
repz
adc
imul
aad
jmp
addr16
arpl
sbb
arpl
sub
xchg
stos
insb
pop
rclb
out
push
test
cmpsl
pop
adc
sbb
mov
mov
popf
cmp
sbbb
outsl
fisubs
outsl
adc
or
push
pop
pushf
ret
push
add
jle
sbb
repz
mov
cwtl
xorb
lret
dec
or
push
scas
movl
adc
loop
cmpsl
cmp
pop
pusha
add
pop
mov
mov
jmp
fildll
jl
push
repz
ret
loopne
push
repz
and
gs
lea
xbegin
xor
cltd
fnstcw
fs
inc
jle
cmp
das
sub
test
in
enter
mov
aaa
cli
and
jbe
imul
xor
mov
filds
mov
jmp
mov
gs
into
mov
in
push
sbb
jno
incb
dec
shll
stos
sbb
mov
mov
sub
lahf
movsl
test
mov
and
push
cmp
popa
sub
fnstsw
add
mov
sbb
cwtl
std
punpckhdq
cld
mov
pop
mov
pop
add
ja
and
lock
iret
xorl
xchg
mov
push
mov
pop
leave
sub
sub
in
xor
pop
fadds
dec
in
outsl
sbb
mov
cs
scas
sub
sbb
push
mov
insb
aam
xlat
push
into
cmp
jg
mov
sub
jecxz
cmc
push
lcall
cs
jle,pt
and
addl
push
popf
push
xor
xchg
push
addr16
push
inc
sbb
pop
loop
inc
outsl
fsubs
cmpsl
stos
fiadds
push
cli
or
cs
sbb
daa
adc
xchg
mov
lock
cmp
sbb
xchg
gs
jle
sub
xchg
jl
mov
pop
addr16
pop
adc
orl
adc
mov
xor
pop
dec
sbb
dec
sbb
or
scas
push
sub
jno
mov
clc
dec
les
jp
idivl
shll
sub
mov
pop
adc
cmp
xor
repnz
pusha
mov
lret
xchg
sbb
or
aas
jg
clc
inc
push
jae
cmp
ficoms
xor
scas
ds
ss
rcrl
mov
dec
mov
adc
sbb
xchg
mov
test
sarl
jae
loope
adc
inc
loope
mov
popa
icebp
outsb
add
mov
aas
out
mov
sub
ret
xchg
xor
xchg
mov
jnp
call
xchg
repnz
inc
dec
pop
mov
cmc
xor
sub
cmp
xchg
sbb
arpl
pushfw
pop
or
mov
mov
inc
or
cmp
mov
ficomps
shrl
mov
mov
pop
mov
cmp
call
mov
mov
repnz
jb
or
mov
lock
mov
sbbb
test
mov
fs
jns
mov
repnz
mov
pushf
outsl
pop
mov
mov
pop
lret
mov
push
movsb
leave
ret
add
loopne
cli
pop
sti
ret
hlt
subl
xor
or
clc
test
push
or
bound
mov
sub
leave
mov
iret
sub
mov
jmp
dec
push
pop
mov
sub
mov
add
cmc
xchg
jbe
push
mov
call
cmp
xchg
mov
in
xchg
xchg
pop
lods
enter
xor
push
ret
add
scas
pop
mov
imul
idivb
adc
aaa
out
fs
jbe
push
jmp
adc
pop
in
add
dec
xchg
push
fs
push
cli
outsl
fisubrs
lods
fisttps
xchg
ja
test
push
lock
sub
adcb
ljmp
xlat
mov
add
add
mov
mov
scas
in
inc
sub
inc
push
mov
das
pusha
sbb
xlat
cs
lahf
or
leave
shrb
lds
cmp
outsl
ss
xchg
dec
aas
rcrb
xchg
test
lods
addr16
jmp
mov
loop
pop
into
std
sbbl
rol
add
adc
int3
push
icebp
cmp
dec
pusha
adc
dec
inc
icebp
adc
push
je
xchg
sti
pusha
mov
fcmovu
add
xor
push
and
gs
inc
ret
fwait
add
mov
aam
push
call
stos
jl
movsb
sub
sub
scas
pop
and
xor
out
push
iret
sbb
xchg
jo
add
pop
mull
and
add
pop
mov
jo
sti
fcmovne
out
cmc
loop
sub
loope
iret
push
or
movl
aad
xchg
test
dec
rorl
in
cmc
sti
dec
loopne
lods
adc
push
pop
rorl
imul
ljmp
or
iret
xchg
cli
ss
push
inc
push
adc
cli
pop
imulb
rorl
mov
loop
dec
push
ja
fwait
or
ret
scas
or
inc
insb
inc
xchg
push
xor
incb
push
add
cwtl
pop
pop
fistps
sub
and
jl
or
sub
jp
ss
pop
jg
adc
mov
mov
mov
pop
pop
xlat
movsb
hlt
inc
out
shll
dec
mov
xlat
dec
decb
xor
sbb
jmp
aas
mov
xor
mov
movsb
lods
mov
cmpsl
mov
iret
mov
add
cld
jg
push
jg
or
push
cs
adc
inc
mov
xchg
mov
xor
imul
cwtl
icebp
fistps
sub
push
or
inc
add
jge
stos
shl
fs
clc
sbb
jae
insl
lret
sar
mov
dec
insl
dec
loop
dec
jb,pt
scas
insl
mov
sub
push
add
imul
jnp
sbb
sbb
ljmp
out
or
cmpsb
mov
cmpsb
and
xchg
cmp
loope
mov
fdivrl
popa
mov
sub
inc
rcrb
loop
andl
dec
hlt
aas
movsl
rclb
push
data16
sti
imul
cwtl
sbb
push
loope
mov
mov
push
out
mov
cmp
pop
ret
or
cmpl
cmc
push
je
in
add
jmp
sbb
sub
frstor
aam
and
movsl
out
mov
mov
scas
insl
mov
or
push
jl
test
inc
push
push
ret
stc
jl
mov
stos
mov
lret
xchg
mov
enter
out
or
sub
cmc
mov
inc
loopne
adc
popl
xchg
test
lret
enter
pop
imul
push
cmp
cmc
iret
ljmp
xorb
out
xor
mov
and
inc
sub
out
inc
sub
popa
stc
jmp
hlt
imul
ja
sahf
sub
mov
fwait
sbb
movsl
pop
ss
je
lret
mov
in
or
repz
subb
mov
cmp
xchg
repnz
rorl
dec
jbe
adcb
pusha
sar
call
outsl
movsl
fwait
push
loopne
jg
pop
pushf
or
jns
aad
aad
cmp
inc
push
sbb
mov
cld
icebp
pop
mov
xchg
xor
xor
jnp
js
dec
ret
movsl
loope
jne
xchg
mov
jp
aam
mov
or
inc
sub
add
aad
inc
das
decl
jb
cltd
clc
sbb
pop
mov
and
xchg
daa
fsubs
push
inc
negl
rolb
and
insl
into
sub
lret
adc
push
pop
dec
pusha
pop
in
sbbb
inc
cmpsb
push
jns
leave
loopne
jo
or
stc
js
and
jge
les
xchg
sub
mov
ljmp
shrb
mov
cmp
jns
xchg
imul
out
push
xchg
adc
fucomi
cwtl
je
out
stos
leave
mov
cli
insb
loope
xchg
ret
sbb
cmp
sub
lds
xor
in
ds
adc
xlat
out
icebp
ret
or
mov
mov
mov
mov
xchg
out
push
xchg
rol
fninit
adc
insl
ret
xchg
aas
jmp
ret
xchg
xchg
in
ja
stc
add
jno
and
loopne
popf
popf
inc
scas
out
push
mov
leave
outsw
adc
lret
ljmp
xchg
pop
sub
in
fbstp
decb
stc
push
jo
add
shlb
push
xchg
lds
jns
addr16
xor
out
test
data16
out
mov
xor
xchg
dec
jg
addb
enter
push
sti
popa
test
data16
test
jae
xor
add
push
and
mov
fs
jae
fcoml
pop
nop
mov
call
mov
sub
mov
mov
inc
je
push
and
push
repnz
bnd
jo
adc
jp
fmull
es
mov
jns
mov
int
or
pop
xor
fwait
enter
shll
cld
outsb
popf
or
rcrb
ss
stos
pop
sub
pop
push
dec
or
xor
or
loop
hlt
gs
mov
mul
ja
add
fsubrl
fwait
test
scas
pop
pop
lea
push
je
and
inc
push
daa
fimuls
call
mov
push
fcomps
ret
clc
cli
mov
pop
mov
cmc
popa
fstps
mov
dec
sub
imul
jo
pop
add
hlt
roll
inc
xor
aaa
and
pop
mov
cmp
and
jns
rclb
rcrb
fs
subb
add
push
mov
lahf
cwtl
jns
aam
mov
stos
lock
mov
push
test
mov
mov
xchg
xchg
adc
test
inc
pusha
cmpsl
inc
and
cmpsb
addr16
ja
bound
jge
or
or
pop
mov
jnp
xchg
push
dec
jecxz
pop
lock
rclb
pop
icebp
nop
fnstenv
inc
rolb
pusha
stos
mov
cmp
add
and
push
popa
push
push
aad
outsb
test
in
icebp
dec
daa
mov
dec
xchg
jns
mov
dec
inc
sub
sbb
jle
das
mov
adcb
sahf
inc
dec
cmp
out
data16
fidivl
repz
push
cmp
jge
fs
sbb
sub
xchg
inc
mov
and
lcall
xchg
insl
and
pop
and
cwtl
and
cmp
push
adc
adc
in
test
rcrl
dec
xchg
dec
xchg
push
aas
mov
test
dec
jge
mov
sbb
sub
jle
pop
scas
and
xchg
lds
cmp
outsb
sbb
cld
pop
cmp
sub
add
mov
mov
inc
stc
data16
in
jae
adc
cwtl
mov
mov
repnz
jno
xchg
add
xchg
shlb
pop
lea
pusha
add
pop
data16
push
out
jmp
popf
repz
movsl
push
lods
sub
pop
outsl
add
lods
stc
pushf
fiaddl
mov
aas
mov
into
mov
movsl
mov
lock
push
hlt
insb
loope
cltd
loopne
jno
repz
nop
inc
xchg
imul
pop
lret
mulb
push
ss
xor
add
adc
sub
dec
popf
out
imul
fsubrl
add
mov
or
in
lahf
pop
sbbb
and
fwait
pushf
aam
sbb
add
and
inc
sbb
or
popl
mov
scas
fdivrs
int
js
cmp
bound
in
enter
xor
dec
mov
jo
inc
mov
sbb
and
rolb
xchg
fildl
stos
fcoms
je
lock
notb
repnz
insl
sbb
js
clc
divb
movsb
jmp
incl
gs
jl
xor
fildll
ljmp
ss
iret
dec
jbe
mov
out
rol
inc
in
std
push
pusha
aaa
in
aad
xor
repnz
test
mov
out
sub
sahf
dec
xchg
lods
jle
or
sbb
repz
mov
ficomps
scas
dec
rorl
inc
call
xor
ret
sbb
out
cmpsl
imul
cmp
pop
test
mov
pop
fidivrl
pop
cld
inc
daa
add
mov
cltd
add
nop
loop
and
push
mov
loope
es
push
icebp
in
leave
pop
xlat
jnp
mov
xlat
push
stos
adc
movsb
jnp
jmp
xchg
cli
test
bound
push
rorb
xchg
clc
jge
aaa
add
icebp
inc
mov
mov
dec
adc
pop
inc
mov
loop
lods
adc
xchg
sub
loopne
and
push
push
das
pushf
sbb
imul
adc
mov
jno
nop
ja
loop
or
fstpl
fisttpll
add
jmp
fadds
add
vmovmskpd
inc
mov
iret
cs
inc
mov
mov
mov
into
scas
sbb
lahf
mov
test
lock
ret
lahf
loopne
scas
imul
movb
xchg
mov
mov
imul
testl
out
clc
mov
mov
cmp
clc
imul
cmc
inc
pop
and
out
push
dec
mov
gs
inc
ja
in
and
roll
out
test
addb
adcl
stos
adc
push
jbe
lods
and
sarl
mov
push
jae
xchg
shlb
jecxz
clc
int3
aaa
jg
js
inc
xchg
movsb
fwait
lret
outsb
das
lcall
add
cmp
add
roll
sub
jle
pop
fcompl
sbbb
cltd
rolb
sub
fdivl
xchg
push
int3
out
and
or
xchg
sbb
push
lcall
out
sub
out
mov
ljmp
pop
xor
cmpsb
xor
arpl
repz
push
mov
lea
xor
mov
pop
shrb
mov
leave
sub
sti
scas
sbb
xchg
pop
xchg
loope
pop
nop
pusha
adc
rcl
lea
jmp
in
clc
lods
movlps
jp
lret
or
fisubl
les
gs
or
addr16
addl
mov
inc
dec
fimuls
add
movsl
mov
stos
mov
aaa
int3
dec
cs
sub
fisttps
dec
lds
lret
or
scas
and
subb
sub
pop
mov
push
mov
pop
dec
arpl
pop
or
fildl
out
pop
lret
mov
in
mov
dec
shlb
sarb
push
daa
sbb
loope
in
dec
xor
fldcw
aaa
mov
cwtl
and
xchg
and
push
sbb
cmpsb
adc
test
aaa
out
lret
mov
ret
pop
lret
adc
xchg
enter
dec
pop
adcl
mov
int3
add
sub
sub
add
scas
mov
mov
test
jg
iret
xchg
int
enter
add
mov
sub
fldt
push
add
dec
jmp
push
push
scas
repz
cwtl
loope
push
mov
and
fwait
leave
idiv
sahf
pop
ds
idivl
ja
mov
and
jbe
push
out
ds
mov
pop
scas
dec
out
mov
mov
repnz
bound
fwait
xor
xchg
push
mov
lods
in
mov
add
jmp
cmc
cmp
fildl
movsl
incl
stc
bound
sub
sub
mov
or
imul
mov
aaa
sti
dec
repz
cmp
in
ret
cli
xchg
cltd
dec
xchg
lret
popa
cmpsb
sbb
cs
adc
adcb
jne
movsb
aam
incl
or
cmpsl
cmpsb
clc
pop
fsub
in
inc
mov
fsubl
lock
mov
bsr
cltd
sbb
lret
les
inc
popa
shlb
lcall
cmp
ja
mov
sbb
dec
daa
xchg
cltd
into
sbb
xchg
fstpt
cltd
jne
push
mov
xchg
out
out
sbbb
xor
cwtl
gs
rcl
es
xor
mov
jno
xor
sbb
aad
sbb
mov
push
outsl
cmpsl
xchg
cmp
lret
fmuls
and
push
lea
inc
insl
and
and
in
movsl
add
mov
pop
add
mov
mov
jmp
pop
mov
push
cmp
jne
sbb
sub
fcompl
mov
dec
ja
pop
mov
popf
mov
push
inc
mov
fxch
leave
into
shlb
pop
xor
rorb
pop
out
aam
inc
cmc
outsb
mov
ud0
nop
push
and
aaa
dec
and
pop
jae
sbb
mov
mov
sub
lods
fwait
and
add
pop
mov
xchg
xchg
mov
mov
pop
test
in
jbe
xorl
das
cmpsl
call
pop
aam
add
scas
push
sbb
gs
mov
jns
lods
jg
mov
iret
sbb
jbe
inc
outsl
cwtl
pop
push
jp
inc
sahf
popf
lahf
out
adc
mov
les
xchg
out
in
cmp
push
sbb
mov
mov
mov
sahf
sub
in
sarb
pop
repz
lods
pop
in
in
and
cmovne
lret
pop
insl
mov
and
and
lods
loope
mov
or
dec
loop
or
inc
inc
cmpsb
adc
cltd
aas
jns
mov
push
mov
xor
aad
mov
push
add
mov
es
fisttpll
mov
es
bound
std
push
jg
loope
filds
andl
jp
lods
bndldx
loop
mov
stos
divl
sbb
push
mov
cli
mov
aas
ds
adc
lods
adc
clc
xor
scas
mov
and
and
and
jno
jp
popf
mov
fldcw
scas
fstl
pop
add
std
push
cmpl
movsl
in
mov
lock
cmpb
lcall
andb
add
mov
pop
out
push
mov
lahf
lahf
popf
sbb
addl
fisubrl
loopne
movsb
push
add
or
lods
sub
pushf
fs
push
cli
sbb
outsb
xchg
outsl
loop
inc
jmp
mov
xor
add
inc
cmp
inc
repnz
sub
push
gs
cmp
xor
dec
test
xor
xlat
mov
les
xchg
cli
sub
cmpsb
and
jae
inc
mov
pop
repnz
or
mov
call
cmpsb
or
fldcw
ljmp
pop
mov
push
and
sub
aas
mov
shrb
lcall
imul
sub
dec
sub
cmp
cmc
sbb
imul
mov
lret
lods
es
mov
lds
add
popf
push
jp
jecxz
mov
rorl
mov
and
lret
dec
test
push
push
repz
rolb
sbb
dec
push
shlb
divb
fstpt
or
mov
xor
sahf
mov
mov
sbb
cmpsl
mov
xchg
test
imul
or
dec
push
fsubl
mov
xchg
and
iret
inc
aas
popf
std
test
pop
sarl
dec
hlt
into
sti
loop
and
fcomps
cmpsl
sahf
add
add
repz
sub
daa
gs
repnz
xchg
sti
sahf
test
lret
out
or
into
add
ss
icebp
adc
inc
sbb
cmpl
and
fwait
ss
mov
call
pop
ss
lock
scas
inc
lret
aas
and
comiss
pushw
cmp
jge
ss
sbb
enter
das
jp
imul
inc
lahf
bound
aad
inc
aam
or
aas
jmp
mov
mov
adc
sub
pop
iret
jp
inc
iret
jmp
outsb
inc
add
adc
sub
aam
jnp
dec
sbb
or
ret
ficompl
and
rcrl
test
cmp
rolb
test
push
and
and
mov
push
bound
testb
inc
push
mov
cmp
xor
push
ret
pop
mov
pop
in
arpl
adc
lcall
mov
roll
das
fistl
and
push
jbe
mov
add
cltd
lret
pusha
loop
push
sub
cltd
or
scas
push
sbb
adc
lock
loope
jl
sbb
frstor
lea
adc
mov
leave
add
iret
add
sub
mov
int3
dec
stc
lret
mov
cwtl
xor
pop
pop
sub
sbb
sub
jne
mov
push
xchg
sbb
bound
xchg
mov
lea
and
and
ffreep
ss
cmpsl
and
fstpt
jnp
xor
add
out
or
add
mov
dec
lret
pop
adc
popf
fldl
loope
pop
cltd
and
cmp
in
pop
mov
das
imul
pop
inc
nop
adc
push
aam
dec
leave
mov
bound
popa
loope
xchg
in
addr16
clc
daa
rcrb
das
bnd
and
cmp
jns
jbe
adc
xor
sbb
xchg
outsl
or
in
jne
mov
inc
mov
icebp
cmp
inc
cmp
push
sub
pop
rcl
movsb
mov
mov
repz
popa
sub
fldenv
xchg
negb
stc
and
jno
cmpsl
cmp
cmp
jbe
loopne
cmp
nop
push
fs
and
aaa
xchg
cmc
jg
xor
arpl
jl
pop
add
in
jl
fidivs
fnsave
push
insl
xor
ljmp
or
jbe
jle
ret
pop
mov
lcall
or
mov
ss
call
int3
fwait
add
outsb
xor
outsb
out
ja
in
sbb
test
sbb
add
adc
cmp
addl
xchg
sub
pusha
and
jbe
xchg
ftst
test
jae
pop
shrl
sbb
mov
decb
movsb
and
test
jae
sub
add
pop
add
push
stos
mov
lea
adc
dec
push
adc
lods
cmp
mov
mov
push
outsb
inc
jnp
adcb
dec
mov
or
inc
hlt
cmp
ss
sbb
add
test
aaa
iret
or
inc
popw
mov
sarb
ret
xchg
fcom
shll
sahf
inc
sti
or
mov
testl
stos
mov
loope
in
xor
pop
dec
fimuls
js
xor
scas
pop
ds
mov
jle
jns
sbb
xor
mov
push
cmpl
inc
xchg
bound
pop
sbb
movsl
jns
test
sbb
pushf
xchg
data16
pop
mov
int3
in
sub
int3
int
inc
imul
fisttpl
bound
lret
lahf
loop
cmpsb
mov
dec
lcall
adc
jge
pushf
dec
dec
dec
cmpsb
jns
mov
or
shrb
push
shrl
or
inc
mov
jge
sti
sarl
adc
outsl
cmp
lret
stc
and
push
pop
popa
neg
mov
cmp
out
sub
mov
repz
xchg
mov
roll
insb
push
shll
pop
push
cmpsb
jg
imul
and
gs
adc
ret
stos
leave
mov
and
les
aam
aad
xchg
aas
xchg
push
insl
aaa
incb
outsl
js
xchg
popa
adc
loop
adc
loope,pt
jp
div
ret
pop
fsubrl
call
ficomps
mov
or
mov
stos
idiv
int3
nop
sub
fstl
cli
sti
pop
ljmp
and
std
popa
movsb
adc
mov
sbbl
jge
cmp
adc
push
repnz
xchg
pusha
je
out
rorb
mov
pop
mov
hlt
icebp
ja
sub
xor
mov
vmovapd
inc
test
pushf
adc
jg
lret
jbe
add
xor
mov
or
sub
cmp
into
xchg
adc
mov
fcoml
iret
mov
test
dec
sbb
xchg
dec
loop
sbb
mov
inc
jne
icebp
pop
ret
stos
cltd
aad
repz
scas
and
cli
xchg
enter
dec
or
sbb
push
cmp
rcl
pop
cli
and
sahf
shl
mov
movsb
jg
lahf
add
jo
ljmp
orl
addr16
and
inc
sbb
aaa
adc
andl
aad
imul
fiadds
mov
cmp
lcall
ljmp
or
sub
add
aam
test
pop
mov
into
mov
xor
push
mov
mov
mov
fs
add
hlt
iret
scas
bnd
movsb
in
lcall
xlat
out
call
out
jb
mov
pop
xchg
pusha
outsl
call
enter
push
pop
cli
loope
pop
push
pop
add
inc
aaa
pop
movsb
jae
in
sub
dec
mov
push
dec
aas
addr16
pushf
cli
in
push
dec
mov
xchg
mulb
mov
xor
jnp
xorb
pushf
movsb
jae
out
repz
out
test
fildl
int3
cmp
fnstsw
cmp
or
loopne
mov
out
inc
movsb
dec
outsl
lock
mov
aad
jno
jge
xchg
push
mov
inc
fldl
adc
xchg
les
fbstp
loopne
test
dec
and
js
mov
or
lret
mov
and
inc
inc
xor
insl
iret
movsl
sbb
xor
xchg
pop
sti
ficoml
setbe
dec
mov
cmp
xchg
sahf
and
rcrl
loop
popf
xor
pushf
cmp
out
orb
mov
fldl
adc
cmpl
mov
sbb
lahf
mov
or
mov
cwtl
mov
push
push
sbb
pop
out
in
xchg
cwtl
sub
int
in
rep
dec
sahf
loopne
and
lds
cmpsb
xor
pusha
xchg
xor
jmp
xchg
fs
jb
clc
mov
push
sub
xchg
scas
fistps
cmp
shl
inc
jmp
sub
dec
fidivl
mov
xchg
arpl
push
mov
inc
out
and
cli
pop
iret
dec
adc
or
fildll
sbb
test
lret
aas
mov
mov
pop
sarl
xchg
fisttpll
rcll
pcmpeqd
inc
inc
sub
fidivrl
cmp
jne
adc
push
pop
adc
test
in
cmp
cmp
push
sarb
inc
push
xor
jmp
xchg
stc
ja
jmp
mov
sbb
inc
iret
in
daa
fistpll
xchg
js
cld
nop
add
iret
lret
in
stos
mov
paddb
daa
lahf
sub
xor
pop
push
xchg
add
sub
pop
push
xchg
and
dec
dec
mov
jp
xchg
mov
and
insl
push
in
adc
cmpsl
mov
es
loop
adc
mov
lcall
adc
pop
mov
lods
js
shl
mov
or
je
bnd
jno
mov
lods
mov
mov
out
sub
push
fildl
mov
pop
mov
adc
adc
stos
mov
adc
jno
into
jae
add
leave
ror
push
adc
call
pop
cmpsb
jecxz
cwtl
mov
insb
loop
mov
arpl
mov
aad
or
es
dec
sbb
dec
mov
ret
sahf
jg
xor
nop
cld
mov
in
inc
xchg
xchg
xlat
sub
pop
iret
mov
nop
sub
lahf
jne
mov
xlat
dec
push
ljmp
inc
lods
push
cmp
aam
and
imul
rorb
cmp
shrb
hlt
fmull
fs
fbld
xchg
lahf
mov
mov
xchg
mov
xor
sub
lret
add
movsb
mov
adc
mov
fmuls
out
lods
lds
nop
cmp
dec
mov
aad
fsubl
arpl
mov
cmp
mov
sbb
push
clc
repz
std
imul
mov
and
sbb
popa
and
xchg
sub
das
into
pop
mov
popf
sub
pop
leave
dec
xchg
addb
inc
inc
movb
fdivrl
adc
cmpl
pop
sbb
mov
lret
inc
or
lret
bound
jne
stos
jb
inc
cmp
imulb
dec
scas
jp
sub
pushf
popf
data16
fwait
xchg
pop
dec
jbe
push
push
int3
hlt
insl
mov
mov
lds
xchg
push
dec
pop
jns
xchg
push
lcall
lcall
dec
fidivl
dec
test
ja
fdivl
sarl
cmp
xor
inc
jge
jbe
jb
repnz
push
adc
dec
jns
lods
movsb
inc
mov
sbb
mov
out
aad
shrb
push
cmp
cltd
imul
mov
les
adc
jne
aaa
xchg
cmp
mov
mov
cltd
mov
test
je
insb
inc
xchg
xor
jns
in
lret
pop
mov
mov
push
scas
and
jns
shrl
rcrb
sub
ss
dec
cmp
out
and
movsb
adcb
dec
jl
mov
mov
adc
adc
ficomps
test
arpl
movsb
ret
and
mov
repnz
pop
out
push
add
mov
cmpsl
xor
push
out
xchg
cvtps2pi
mov
sub
add
aaa
mov
leave
xchg
push
inc
pushf
xchg
loop
and
dec
cltd
in
or
or
data16
cmpsl
mov
std
sbb
outsl
jno
lods
jl
popf
into
inc
cmp
out
in
aaa
sub
cmpb
das
mov
sbb
add
pop
nop
daa
arpl
and
lcall
push
mov
adc
div
fcomps
mov
aam
xchg
inc
push
movsl
push
je
push
int3
fistpl
or
xchg
xorb
lea
cmc
inc
sbb
inc
push
loope
lock
pop
fists
push
test
push
jbe
jne
inc
test
xchg
and
gs
fdivl
lods
xchg
pop
hlt
mov
sub
push
and
lcall
pop
int3
xor
jbe
xor
bound
jle
cltd
cmp
lahf
scas
push
push
lret
nop
psubusw
out
rcl
cltd
nop
mull
jp
xchg
outsl
and
bnd
ror
dec
hlt
addl
into
sub
cmp
clc
xor
ljmp
pop
andb
xor
inc
xchg
fs
negl
in
fmull
adcl
int3
pusha
loop
xor
rcrl
mov
icebp
out
sbb
mov
out
sub
pop
pop
pop
mov
lds
mov
adc
insl
incl
cwtl
mov
fxch
push
inc
pop
sub
movsb
cmp
lock
xchg
movsl
add
cmp
loop
mov
dec
jecxz
clc
in
inc
fiaddl
add
call
push
mov
xchg
je
inc
adc
outsl
mov
fsubr
cmp
mov
cmovge
jecxz
xlat
push
loopne
pop
cmp
jl
jmp
orl
stc
mov
xlat
pop
pop
test
sbb
dec
in
addb
xchg
shl
push
lods
and
aas
mov
clc
mov
add
in
test
shll
pop
push
jecxz
inc
xchg
pop
int3
jb
sub
les
lcall
pop
xchg
xchg
xchg
and
jle
jb
mov
mov
mov
aaa
pusha
call
fisubl
mov
mov
cs
rcrb
nop
arpl
sub
xchg
mov
push
and
jns
nop
test
mov
je
or
adc
dec
and
sbb
scas
push
adc
mov
inc
pop
fiaddl
add
pop
rorl
push
mov
dec
aad
icebp
or
pushf
push
jg
ss
xchg
sub
inc
mov
daa
pop
jo
dec
mov
test
js
popa
loop
inc
imul
mov
cmpb
out
aam
adc
pusha
popf
repz
test
cmc
in
xchg
icebp
cmp
adc
int
fcoml
push
add
and
xchg
repz
cmc
mov
cmp
mov
xlat
xchg
insb
repnz
inc
adc
and
or
lods
imul
xchg
and
xlat
mov
mov
cld
in
bound
mov
mov
xchg
push
stos
ja
mov
xchg
mov
add
pop
xchg
addr16
ds
sti
fwait
xchg
jns
cld
mov
je
push
dec
push
loope
leave
jecxz
xchg
lock
scas
adc
adc
push
push
and
add
mov
push
and
xchg
cli
popa
fiaddl
cmp
jp
jp
and
loop
or
icebp
and
and
cmp
jg
cmp
jmp
test
jmp
cwtl
or
push
sbb
cmp
adc
aas
jbe
mov
and
cmp
jmp
mov
xchg
dec
push
rcrb
gs
sub
lret
in
popa
les
mov
imul
das
mov
bound
xlat
xchg
mov
lods
jl
jg
mov
rcr
mov
rorb
and
bnd
into
pop
aad
and
cmpsl
std
arpl
bound
pop
jno
shll
mov
andl
ret
leave
push
sahf
stos
sub
or
adc
mov
ja
adc
adc
sbb
mov
es
lds
sarl
mov
data16
call
std
les
inc
idivl
movsb
jbe
cmp
mov
jbe
int
dec
fmul
sbb
cmp
and
ja
pop
cs
inc
jo
sbb
xlat
jmp
or
cmpb
es
iret
jb
loope
bnd
mov
inc
sti
insl
cmpsb
or
or
inc
jg
adcb
mov
inc
sbb
stos
fucomip
scas
jge
loope
sub
adc
mov
sarb
or
mov
xor
inc
rolb
movsl
filds
shll
xchg
cmpsl
cmpsb
push
icebp
in
mov
xchg
xor
enter
or
mov
loop
dec
xor
lods
cmp
xchg
cli
addr16
mov
mov
dec
or
dec
daa
jmp
sti
or
mov
mov
jge
in
mov
fcomip
lret
loop
lods
cmovb
dec
pop
popf
out
sub
inc
xor
or
and
loopne
in
out
sub
sbb
rolb
sbb
scas
or
mov
neg
je
jmp
jbe
xchg
scas
mov
pop
push
je
out
loope
adc
aam
scas
fdivrp
cmpsl
and
or
dec
sbb
in
shlb
jmp
inc
xor
ret
add
aaa
test
stos
mov
jp
push
std
push
push
pop
add
adc
dec
dec
mov
or
imul
aas
xor
xor
pusha
sbb
lock
cmpsb
les
aad
mov
add
pusha
sarw
mov
lods
lock
out
push
push
lods
and
or
pop
push
sarb
lcall
addr16
std
test
fisubl
mov
pushf
popf
and
mov
and
pop
lret
pop
cmp
or
cmp
pop
dec
xchg
and
leave
stos
fstpt
cmpsl
scas
adcl
rolb
add
adc
jb
rolb
and
adc
sbb
loopne
in
ret
add
or
xchg
or
aad
push
fs
mov
loope
aad
fsub
mov
iret
clc
push
adc
ret
shr
aam
mov
cmpsl
fs
or
sub
adc
mov
sub
call
dec
in
clc
mov
mov
es
cwtl
or
clc
mov
mov
mov
test
fcmovnb
sarb
adc
pusha
fyl2xp1
lods
sub
fidivs
sbb
iret
cmpsl
data16
loope
jmp
imul
out
dec
mov
pop
jbe
and
sub
stos
inc
pop
add
or
cmp
mov
or
imul
or
cmc
test
int
orb
pushl
cld
jbe
fdivrl
in
sbb
pop
mov
repnz
cmp
dec
push
jmp
add
daa
pusha
push
mov
and
cld
pop
sti
lret
test
sub
aad
movsb
fwait
aam
in
stos
or
xchg
pop
push
xor
imull
roll
add
mov
pop
shll
adc
mov
cmpsl
jecxz
push
enter
ret
or
cmpsl
pop
je
inc
clc
push
pop
cld
idivl
add
dec
mov
daa
mov
mov
out
sub
jb
push
test
movl
mov
data16
jo
loop
out
sub
fnstsw
movsl
or
stos
mov
inc
sub
sub
cld
mov
in
enter
or
mov
inc
push
xchg
and
push
bound
push
pop
fiadds
mov
cltd
xchg
addr16
ss
add
fstps
xchg
and
insl
in
out
jno
imul
mov
dec
inc
cmp
pop
imul
cmp
sub
jg
je
sub
xchg
stos
mov
cmc
rcrl
das
push
mov
dec
cmc
movsl
jg
pop
add
fadd
adc
cld
push
icebp
lea
in
lock
and
xchg
cltd
loopne
cmp
out
stos
xchg
inc
jno
cmp
pop
lret
into
xchg
dec
push
mov
vmread
iret
push
push
or
lret
cmpsb
lods
push
jge
lods
jns
repz
mov
jecxz
pop
outsb
imul
xorl
dec
es
sub
std
sbb
mov
outsb
push
push
repnz
iret
adc
cli
push
divl
js
les
cmc
test
sbb
loop
movaps
scas
and
and
inc
or
rorb
adc
pop
sbb
jb
sbb
mov
adcl
jmp
mov
fldenv
mov
mov
cmpsl
movsb
andl
sbb
fisttpll
idivb
es
iret
aad
rolb
int
sbb
popf
adcb
jg
mov
push
sbb
shlb
mov
add
into
jno
sbb
out
sub
mov
jns
jp
inc
pop
push
pop
in
adc
pop
push
and
mov
dec
call
xchg
push
jl
aad
cmpsl
imul
rclb
pop
jle
and
push
mov
adc
lea
lds
xchg
iret
push
xlat
pop
pop
mov
cld
xchg
or
lock
js
push
enter
test
xor
sbb
test
js
inc
out
imul
mov
lods
ret
in
inc
fistps
sbb
and
mov
in
mov
sub
pop
pop
ret
dec
insl
fisttpl
or
pop
mov
add
jb
adc
nop
lret
popf
or
loope
popa
xor
adc
movsl
fidivs
mov
mov
dec
addr16
jae
loopne
xchg
lahf
and
iret
jb
sub
cmpsl
jae
rcrl
xchg
in
ljmp
cltd
push
ljmp
movsb
pop
pop
in
arpl
push
lcall
fstpl
xchg
out
jl
mov
inc
pop
sbb
hlt
mov
sbb
xchg
cs
mov
xlat
aad
xchg
dec
cli
loop
in
aad
fwait
mov
lret
mov
cs
mov
jbe
pushf
adc
fsubr
jp
jae
cmp
out
cmp
add
call
jae
jmp
sub
mov
or
fcomip
pop
pop
jnp
dec
sub
cmpsl
cli
aam
add
adc
std
sbb
mov
add
iret
jbe
pop
dec
inc
jge
xor
rolb
movsl
jo
movsl
mov
insb
or
addr16
xchg
insb
scas
int
int3
mov
cli
inc
push
popa
xlat
ljmp
movb
adc
cmc
rorb
pop
dec
fwait
gs
insb
ja
jmp
jne
mov
cmp
mov
or
fs
cmp
sub
ret
out
dec
add
cmp
pop
fwait
nop
ljmp
xchg
push
mov
mul
fxch
adc
xchg
rcrb
into
js
pop
mov
hlt
adc
dec
testb
mov
out
lcall
mov
and
cmpsl
inc
jle
pop
gs
mov
xchg
imul
movsl
sub
js
in
jl
sub
sub
insb
xor
aas
cmp
sub
test
sbb
int
int3
xchg
cmp
lret
sub
sub
clc
mov
bound
cs
fisubs
in
cmp
inc
or
pushf
xor
out
sbb
int
lds
test
sbb
lret
add
push
popf
outsl
mov
jmp
cld
ja
popf
pop
sbb
mov
mov
enter
js
inc
in
iret
icebp
dec
push
and
mov
adc
hlt
jae
js
je
stos
int
pushf
cmp
mov
test
stos
movb
negl
adc
enter
xchg
fxch
fs
test
push
cmp
jo
data16
xchg
sub
push
and
or
push
and
ret
or
pop
and
and
mov
add
sub
xchg
lock
jp
jle
sahf
mov
cmpsb
int
pop
mov
cmp
cmpsb
clc
andb
fs
adc
loopne
push
mov
pop
cmp
and
cwtl
aaa
xchg
stc
pop
cwtl
pop
hlt
loope
push
insl
movsl
mov
mov
mov
cltd
inc
sbb
pushf
lcall
pop
push
adc
push
repnz
cmc
adc
jbe
js
and
pop
dec
mov
sbb
pop
bnd
mov
cwtl
mov
fwait
xor
test
push
xchg
insb
jno
icebp
mov
cli
cmp
dec
leave
mov
mov
orb
ret
cmp
add
js
in
mov
test
or
xchg
lea
sbb
cld
pusha
ret
cmp
push
add
movl
adc
enter
cwtl
sbb
push
test
adc
mov
push
add
sbb
sbbl
loope
xor
test
fs
or
mov
dec
adc
cmp
xlat
jp
iret
push
or
in
cwtl
xchg
push
nop
push
es
les
cld
and
cmp
pusha
xor
rorl
out
add
ds
cmpsb
or
sbbb
cmpsb
pop
or
pop
arpl
mov
ja
je
aad
ss
add
bound
fwait
inc
xchg
add
imul
xchg
nop
or
loopne
inc
mov
jle
ja
jbe
jb
mov
repz
adc
inc
repnz
sbb
mov
xor
jae
lahf
push
xchg
dec
sub
mov
cmp
loopne
jmp
push
movsl
adc
in
roll
into
stc
sub
cmp
out
add
test
in
mov
jbe
sub
out
inc
push
push
cwtl
stos
lcall
push
test
aam
mov
icebp
add
mov
mov
cmp
les
mov
mov
int
hlt
aam
push
gs
pop
dec
shl
es
out
and
push
inc
popa
or
push
dec
inc
mov
aad
int
dec
add
jne
mov
pop
nop
into
dec
dec
shrb
push
dec
iret
loopne
push
cmpsl
xorb
mov
or
les
lahf
sarl
lock
sbb
cmc
test
pop
adc
dec
dec
dec
aam
inc
add
pop
mov
repz
sub
sarb
cmp
pop
lea
sub
fwait
repnz
push
ja
std
add
out
mov
push
adc
pushf
xor
xor
jnp
mov
xchg
pop
push
iret
fmul
adc
push
xor
inc
xor
mov
add
push
sbb
cmp
adc
fwait
test
cmp
fisttps
mov
aad
lret
stos
or
or
dec
call
adc
mov
loop
cmp
fsubl
rcrl
add
into
cmp
mov
add
sarl
mov
pop
add
out
andl
cmp
adc
adc
iret
mov
rcll
adc
ss
pop
lods
xor
sbb
lahf
sub
faddp
or
push
push
jno
rcrb
loop
sbb
pusha
dec
enter
lahf
das
iret
mov
or
out
sbb
inc
mov
mov
mov
xor
mov
xor
sub
cs
es
xchg
ret
sbb
fldenv
mov
rorb
divl
inc
call
pop
or
stos
movsb
test
add
lret
xchg
sbb
lcall
movsb
rcl
fwait
sub
mov
pop
add
fwait
enter
ljmp
add
cmp
pop
and
enter
je
mov
mov
icebp
sbb
shlb
and
cli
iret
dec
add
fildll
push
dec
stc
pop
xchg
out
test
jae
xor
push
or
and
jp
leave
push
je
sub
call
push
push
sbb
xlat
stc
and
sub
iret
cwtl
je
bound
sub
mov
jnp
sahf
mov
imul
out
out
mov
sbb
imul
in
hlt
jnp
mov
inc
sbb
push
dec
push
and
jns
in
xchg
xor
adc
dec
and
aam
int
push
subb
pop
data16
push
fstps
outsl
inc
in
pop
or
and
mov
loope
sub
and
lods
push
cwtl
jmp
imul
es
pusha
xor
nop
mov
roll
jno
lret
mov
repnz
pop
enter
out
testb
adc
dec
pop
es
pop
xchg
push
sbb
xchg
daa
inc
jmp
addr16
inc
lea
repz
fnstenv
ret
or
pop
push
sbb
mov
outsl
fsubrs
sbb
repz
dec
popa
ss
and
cmp
pop
lea
icebp
mov
roll
loop
or
cltd
sti
repnz
fwait
inc
lock
aas
int3
cwtl
adc
outsb
insl
arpl
mov
xchg
cmp
je
into
xchg
pop
dec
aas
sbb
stos
iret
jne
xchg
and
repnz
stos
dec
lahf
mov
mov
cmp
cmp
imul
adc
mov
or
cmc
out
mov
add
lret
cli
test
fisttps
push
popa
inc
pop
lret
mov
rcll
cmp
sbb
adcb
mov
rcl
or
push
inc
dec
repnz
in
lds
push
add
sub
dec
dec
sub
cmp
int
out
mov
xor
push
sahf
outsl
push
xchg
popf
shlb
sub
nop
out
sub
lods
lods
lret
or
mov
dec
xchg
lea
cmpsb
nop
push
out
in
mov
aad
insl
mov
rorb
cld
pop
jo
test
or
jle
inc
ret
cmp
rcll
addr16
pop
mov
xchg
ja
lock
mov
xchg
pop
pushf
push
pushf
cmp
mov
dec
xor
pop
pop
sub
mov
fbstp
xor
lds
sti
jg
movsb
ds
fst
imul
stos
loopne
fwait
test
jb
shlb
add
jnp
xchg
sub
cmpsb
popa
push
dec
mov
inc
cmp
lds
fisttpl
cmp
movsb
dec
das
mov
sysenter
or
lods
dec
sbb
jnp
mov
push
sub
mov
mov
lret
cld
cwtl
mov
mov
mov
inc
cld
in
sti
hlt
jle
sbb
and
fisttpll
mov
imul
test
jae
shlb
jl
xlat
jne
pop
mov
cmp
and
ds
inc
inc
jnp
out
push
sub
mov
stos
push
fdivl
iret
xor
add
cltd
xor
cld
jne
xchg
or
inc
sub
or
mov
dec
lock
jbe
jecxz
lret
and
cld
push
cli
cmc
bound
ficomps
mov
inc
out
mov
test
adc
vmovaps
pop
adc
jp
mov
inc
adcl
in
adc
xor
inc
cmp
imul
mov
or
xchg
fcoms
rdmsr
sti
arpl
xchg
out
pop
sub
popa
ja
les
xchg
fwait
jl
iret
out
pop
les
sub
and
pop
lahf
cli
iret
loopne
aas
push
jmp
jno
jl
pop
mov
push
aad
mov
and
test
fs
xchg
sbb
push
jmp
push
and
pushf
pop
dec
aam
jecxz
or
dec
mov
push
and
mov
push
outsl
adc
adc
push
shl
cli
shlb
jge
xchg
divb
inc
roll
dec
ret
jae
fbstp
jns
aam
ret
inc
mov
pop
call
push
fstl
divl
jg
inc
sbb
insl
movsb
push
and
pop
adc
es
inc
jl
and
xchg
cmpsb
mov
xchg
ds
lock
xor
fwait
mov
ja
hlt
sahf
dec
pop
in
jnp
adc
sahf
rcrl
push
pusha
icebp
into
test
sbb
sub
ljmp
pop
lcall
stos
pop
aas
je
push
in
pop
outsl
xchg
push
pop
xchg
roll
dec
in
or
call
push
add
and
fisubl
jmp
xchg
cmp
mov
pop
push
mov
cmp
mov
and
xchg
popf
push
cmpsb
jmp
sahf
mov
and
and
sarl
xchg
ljmp
push
sbb
cltd
cld
mov
imul
insl
xchg
add
pop
dec
in
imul
xchg
mov
xchg
mov
stos
jbe
cmp
adc
sbb
add
pop
inc
xchg
dec
js
pusha
xor
roll
loopne
push
fwait
push
inc
mov
cs
mov
push
push
xchg
andl
test
cmc
push
cmp
sbb
cmc
or
and
je
push
xor
xchg
movsb
adcb
xor
iret
lods
sti
sub
xor
xor
inc
ljmp
data16
jmp
movsb
push
pop
dec
pop
cmp
fisttps
arpl
cmp
push
mov
in
pushf
cmpsl
cli
loope
movsb
push
xchg
jbe
mov
stos
add
mov
imul
sbb
mov
aaa
ret
mov
fisubrl
mov
out
xchg
aaa
popa
mov
mov
rorb
lret
add
sbb
scas
adc
or
inc
dec
inc
dec
jae
rcll
das
xor
jne
cmpsb
orl
or
fsubl
adc
imul
xchg
sub
add
mov
daa
ss
sub
adc
pop
in
cltd
jae
xlat
jmp
fcoml
aaa
xor
outsl
xor
dec
je
bound
aas
call
lods
jmp
jmp
dec
or
dec
inc
fs
aas
aad
jmp
addl
clc
inc
dec
or
inc
adc
scas
push
sbb
outsl
xchg
sbb
dec
add
adc
sti
sti
xchg
sub
aas
sub
cmp
push
icebp
scas
pop
test
mov
add
jle
adc
mov
sbb
jb
cmp
inc
into
loope
sub
dec
mov
stos
mov
pop
xchg
jns
push
je
ss
push
xor
xor
leave
fimuls
xchg
xchg
cmp
or
les
popf
sarl
test
xchg
repnz
inc
clc
and
lods
xor
out
pop
jae
bnd
cmp
iret
lea
pop
inc
cmp
xlat
fstl
adc
lods
loop
mov
call
add
or
adc
or
push
mov
rclb
sub
or
mov
ret
xor
repnz
cs
mov
jecxz
sub
call
repnz
scas
cmpsb
jno
stc
mov
mov
pop
rorb
aas
xchg
push
repnz
pop
push
sbb
shlb
and
test
cs
pop
and
inc
ficomps
xlat
cmp
les
out
aas
loop
xchg
push
push
pop
ret
scas
mov
xor
mov
std
inc
xchg
lods
es
sbb
push
out
lcall
cmpsb
xchg
fildl
bound
mov
adc
int
enter
shlb
les
and
or
inc
adc
data16
jl
pushl
dec
dec
fisttpl
push
and
pop
and
js
add
loop
or
xchg
rolb
adc
xlat
scas
mov
fs
ja
pop
data16
es
fisttpl
mov
orb
mov
arpl
push
mov
lret
fdivs
or
sbb
mov
xchg
adc
inc
jg
xchg
xchg
call
mov
cmp
fs
out
test
lahf
test
jge
add
pop
or
add
aad
rorb
xchg
out
sbb
movsl
jmp
xchg
cld
sbb
arpl
lds
bound
lret
ljmp
adc
xor
jno
dec
push
hlt
sahf
push
pop
ds
fdivl
cwtl
int3
cmp
mov
xor
imul
addr16
push
iret
orb
data16
repnz
mov
bound
fdivrl
or
xchg
ficomps
dec
loope
push
jnp
nop
shlb
jb
lret
push
inc
pop
xlat
mov
mov
sbb
mov
test
xchg
ljmp
dec
lds
repz
fmull
hlt
out
addl
ljmp
mov
mov
mov
dec
fimuls
mov
xor
and
out
ret
xorb
sbb
pop
xor
outsl
pop
repz
xchg
push
cmp
adc
mov
mov
aam
pusha
in
xchg
sbb
xorl
mov
add
outsl
ljmp
daa
pop
push
push
test
outsb
negb
jbe
jge
mov
add
sahf
xor
add
ret
sbb
mov
leave
xlat
shlb
pop
ror
cli
or
or
fdivl
scas
fmul
dec
ja
mov
and
js
cmpsl
call
and
push
test
imull
or
jmp
lea
inc
cltd
jle
scas
insb
cmp
in
repnz
cmpxchg
cmpb
stos
or
je
xchg
je
cmc
sahf
and
dec
repnz
insb
xor
in
pop
ja
push
int
xchg
dec
push
decl
test
fnstenv
sbb
pushf
stc
or
xchg
mov
orl
das
cmp
cli
jno
push
add
dec
sbb
and
sarl
movsl
not
arpl
popa
lret
test
or
es
insl
or
mov
dec
push
stos
xchg
add
dec
loop
call
adc
push
popa
test
lods
lahf
testl
dec
test
jge
je
fbstp
push
lods
inc
sbb
adc
dec
fsub
sbb
ja
and
mov
cld
out
fistpll
sbb
sti
pop
lods
xor
inc
adc
adc
cmp
outsl
sbb
push
loopne
scas
add
push
shll
shlb
ljmp
ljmp
loope
cwtl
lret
aaa
ss
enter
xchg
pop
mov
cmp
adc
jnp
fmuls
or
inc
cwtl
jge
insl
lea
cmp
mov
inc
pop
inc
and
imul
cmp
clc
push
cmp
mov
cltd
scas
push
cld
pusha
push
push
testl
insb
cmp
lea
icebp
lds
daa
lock
maxps
xor
add
outsb
in
dec
shlb
loopne
jbe
test
sbb
insb
fdivp
push
stc
mov
and
adc
sbb
xor
loop
inc
xchg
pop
mov
push
movsl
in
jl
dec
jmp
into
repnz
xchg
push
lods
sub
jne
add
rcl
push
mov
dec
aam
pop
rcll
mov
cld
loopne
rcr
je
fisttpll
hlt
jnp
sbb
cmp
cltd
sti
xor
mov
add
jnp
mov
xchg
arpl
xor
pop
andl
cmpsl
cmp
icebp
sub
dec
sbb
stc
sbb
xchg
xor
xchg
imul
push
out
mov
imul
sbb
push
inc
imul
push
mov
out
aaa
cmp
sbb
jns
adc
dec
jne
aaa
mov
sub
mov
jg
mov
cmp
insb
cmc
sub
iret
test
cmc
xchg
lock
mov
sahf
lods
jae
ds
iret
or
sbb
dec
pop
or
movsl
mov
into
and
jle
es
cwtl
sub
pop
shll
inc
outsb
lods
cmp
dec
jl
fbld
mov
lock
jnp
lea
iret
sub
enter
mov
dec
in
pop
adc
es
or
ss
mov
pop
mov
dec
pop
cltd
cmp
iret
in
movsl
enter
fsubl
sub
dec
lods
cmpsb
test
cmp
lret
int
dec
test
jp
or
xlat
fnstsw
push
sub
sub
mov
push
loope
mov
pop
push
ss
xor
jecxz
ficompl
jnp
mov
fdivr
pop
jle
push
pop
xor
cltd
dec
enter
rorl
jmp
ret
cmp
sub
fs
xchg
shlb
push
insb
add
dec
pusha
ja
and
xor
jecxz
sub
jecxz
cmp
jl
xchg
sti
rcrl
push
mov
cmp
add
add
iret
inc
dec
shl
cmp
pusha
stc
mov
xchg
sahf
and
push
add
ret
cmp
ds
loopne
sub
jno
cld
pop
out
out
cmp
scas
mov
mov
cltd
inc
jne
jns
gs
and
insl
fwait
shlb
dec
cmp
jne
inc
loopne
out
nop
enter
pushf
lods
jno
pusha
lods
das
icebp
xchg
xchg
mov
xor
sar
jne
adc
mov
push
aaa
cmpsl
adc
jae
inc
movsb
fsubs
sbb
adc
movsb
insl
fistps
fldl
incb
mov
mov
negb
fnstenv
mov
adc
movsl
repz
dec
lods
lcall
jns
mov
mov
addr16
mov
sbb
rorl
xor
ds
mov
pop
addb
orl
mov
mov
dec
jge
xchg
mov
sub
lea
mov
out
aaa
xchg
js
pop
inc
ja
scas
push
ds
adc
cltd
ud2
lret
mov
ret
inc
mov
out
popf
insb
dec
adc
fistpll
inc
xor
sbb
test
fildl
xchg
dec
andb
dec
ret
and
leave
stc
xchg
xchg
mov
aaa
cmc
dec
sbb
jne
cs
and
xor
shll
and
xor
mov
repnz
fmull
mov
sbb
inc
nop
ret
inc
in
leave
cmp
sti
add
add
fnstenv
mov
mov
fwait
arpl
push
jbe
addb
xorb
dec
pusha
inc
imul
outsb
cmp
push
mov
aam
jno
leave
das
pop
cmp
insl
jge
xchg
mov
sub
push
pushf
test
jp
sbb
or
adc
test
fs
shlb
mov
push
cmpsb
or
xchg
das
mov
xchg
xor
pop
mov
push
sahf
inc
add
cmpsb
aaa
std
in
out
test
movsl
lcall
cmpsb
negb
js
pop
rcl
mov
out
cmp
or
lret
or
mov
cltd
lds
cmp
mov
jp
ficompl
std
mov
sahf
dec
dec
mov
test
mov
xchg
add
jae
pop
add
test
xor
inc
lds
cmp
cmp
loop
int
jns
les
loopne
pop
ljmp
sbb
or
inc
rcr
daa
sbb
loope
sbb
xor
in
xor
mov
int
shll
movsb
mov
rclb
jg
ja
mov
cs
inc
cmp
roll
je
rol
pop
mov
mov
cmp
sub
outsl
aaa
enter
mov
add
mov
lahf
das
mov
push
pop
fsubrl
orl
cmp
popa
repnz
enter
cmp
or
mov
ret
mov
or
mov
enter
inc
pop
jb
sub
test
test
push
mov
call
jne
pusha
cmpsl
cltd
pop
rcrb
and
push
push
enter
gs
push
cmp
sub
shll
mov
ss
push
mov
leave
sbb
sub
sar
mov
lret
scas
xor
rorb
imul
xor
shlb
jbe
mov
aad
push
adc
orl
icebp
mov
and
daa
iret
lret
and
mov
adc
bound
jge
xlat
imul
in
loopne
lcall
mov
mov
movsb
add
add
xor
mov
sbb
sbbl
ss
out
push
jbe
push
pop
ret
stc
push
cli
rcrl
dec
add
push
dec
xlat
repnz
mov
fs
push
mov
xchg
cs
outsb
aaa
push
inc
cmpsb
adc
push
mov
lock
or
mov
fldenv
mov
xchg
or
movsl
mov
cltd
inc
or
mov
mov
leave
jl
adc
xor
xchg
lods
out
js
lods
repnz
xchg
repz
jge
and
mov
mov
out
pop
dec
push
movsl
mov
pop
pop
mov
mov
cli
shll
lods
lahf
mov
lret
xchg
ds
subl
sbb
loope
loop
add
sahf
adc
ret
imul
jae
mov
adc
cmp
loopne
jle
push
mov
jp
js
push
ret
daa
fucomip
shrb
dec
xchg
jno
jecxz
or
push
push
inc
lods
aas
into
shrb
jl
pop
shll
lahf
test
pop
push
cmp
imul
in
xchg
sbb
arpl
fmuls
into
shrl
add
outsl
mov
sub
and
pop
mov
sub
or
aaa
or
sbb
aaa
hlt
jb
jae
fcom
adc
xchg
dec
lret
dec
fnstsw
jecxz
mov
movsb
std
popf
adc
psrad
sarb
jp
clc
inc
and
and
mov
xor
aas
sub
in
imul
push
add
add
pop
pop
cmpsb
push
xchg
inc
cmp
pop
adc
out
push
dec
pop
push
fsubrs
mov
inc
lcall
mov
pop
stc
adc
mov
jbe
fildll
out
pop
mov
ljmp
js
clc
cmp
jne
js
mov
in
movsl
inc
jl
fidivl
ss
lret
xchg
cs
push
push
jmp
rcll
lret
adc
and
cs
xchg
add
shl
out
pop
es
lcall
js
cmpb
out
pop
pop
jecxz
stc
inc
inc
sarl
push
xor
dec
push
insb
jmp
jle
mov
sbb
cmc
mov
gs
cmc
mov
push
inc
xor
mov
jmp
lods
fstpt
cmp
xchg
dec
xor
out
arpl
arpl
or
inc
jecxz
xchg
xchg
or
mov
bound
push
unpcklps
into
adc
pop
fldenv
lcall
jbe
mov
or
xchg
mov
movsl
daa
push
scas
pop
mov
sub
add
scas
loop
out
pusha
repz
mov
sub
xchg
dec
xlat
std
stos
inc
jecxz
aam
mov
pavgw
push
lcall
repz
cltd
loope
xchg
lcall
stos
adc
mov
cmpsb
cmp
xor
test
xchg
sbb
xor
xor
sub
mov
rolb
fistl
ret
dec
inc
or
lods
and
test
out
sbb
out
inc
in
mov
xlat
add
and
inc
jg
dec
xchg
jg
pop
inc
push
and
arpl
hlt
fstp
xlat
xor
xchg
inc
cmpsl
and
addl
lds
xor
bound
shrb
xchg
or
dec
sub
jno
sub
and
cmp
outsl
push
bound
ret
test
sbbb
add
lods
jg
test
pop
or
xor
fcoms
adc
pushf
out
push
ja
xchg
pop
jae
cwtl
pop
pop
fwait
xor
mov
mov
inc
lock
dec
int
neg
jecxz
fnstcw
add
and
movsl
or
dec
push
xor
xchg
mov
pop
mov
xor
jecxz
subb
arpl
shll
mov
xor
push
and
je
add
jnp
scas
dec
and
pop
nop
or
mov
mov
sub
insb
dec
ficompl
add
xchg
mov
push
sub
icebp
jmp
fmuls
aaa
add
or
pop
popf
fsubp
mov
out
lds
mov
dec
jae,pt
inc
mov
mov
mov
pop
sub
cmp
ss
sbb
mov
mov
loopne
fwait
icebp
and
adc
pop
mov
pop
dec
lret
lods
addb
xor
xchg
test
dec
jo
mov
mov
sbb
sbb
das
adc
push
movsb
jle
ja
lret
mov
inc
xlat
or
cmp
out
adc
jl
mov
and
je
mov
mov
pop
rcr
stc
ror
movsl
mov
xchg
pop
pop
inc
sti
push
iret
sub
xchg
repnz
mov
out
popf
in
dec
inc
and
push
mov
xor
mov
movsl
js
sub
ret
mov
cmp
xchg
ljmp
mov
popa
je
sub
out
xor
mov
adc
sbb
jo
cs
cmpsb
push
sub
mov
jae
stc
and
sub
cltd
ds
es
outsb
fsubs
std
mov
sub
repz
fucomip
sub
fwait
sub
sti
or
adcl
mov
mov
xor
addr16
cmp
adc
rcrb
outsb
xor
aaa
adc
jecxz
xor
iret
lcall
sbb
les
and
shll
jecxz
icebp
xchg
addr16
call
mov
pop
jns
adc
mov
dec
mov
cli
stos
inc
mov
sti
add
fdivs
push
cs
fs
decb
out
or
sub
je
pop
cmp
insb
pop
imul
cmp
dec
push
xchg
popa
xor
clc
addr16
out
pop
fwait
xchg
hlt
xchg
mov
and
adc
outsl
push
sbb
mov
test
rcrl
cmp
jb
mov
mov
mov
mov
imul
lret
push
mov
mov
ss
sub
fs
stos
adc
scas
jmp
sbb
pop
gs
test
movsl
stos
movsl
cmp
inc
aas
test
pop
cmp
rorl
pop
fdivl
xchg
cmpsl
mov
popf
aad
flds
jb
test
add
ljmp
lahf
rcr
repnz
fisttpl
adc
add
adc
push
int3
mov
push
mov
cmp
clc
add
daa
loop
mov
inc
cmp
out
leave
ds
add
cwtl
cmp
cmpsb
mov
idivb
call
pop
mov
xchg
or
jmp
inc
push
push
stc
dec
push
dec
lods
bound
pop
mov
adc
adc
sbb
add
in
shlb
push
stos
ss
popf
pop
pop
das
fdiv
push
mov
push
add
pusha
je
orb
push
mov
inc
shrl
xchg
dec
push
and
pop
rcrl
inc
gs
sahf
stos
xor
aad
rolb
adc
sub
test
jbe
xchg
sub
imul
xchg
call
sti
ds
mov
test
icebp
std
and
cld
dec
leave
cltd
jno
xor
mov
jne
xor
call
jo
shll
xchg
pop
int
cmpsb
jmp
aam
push
fbld
and
jae
stos
stc
repnz
or
pop
imul
andl
cltd
xchg
je
adc
dec
test
mov
lods
decl
sahf
inc
fs
in
cmp
jnp
push
lods
nop
xchg
daa
adc
push
hlt
xchg
fsubs
pop
sbb
sbb
leave
mov
dec
decb
or
mov
shll
dec
adc
filds
icebp
cmp
fnsetpm(287
mov
add
lds
sahf
mov
leave
pop
dec
xchg
jnp
out
out
pusha
jbe
push
icebp
daa
cwtl
cmpsb
shll
cmp
outsb
mov
mov
mov
call
pop
out
or
inc
stos
xchg
jecxz
jne
dec
cmpsb
aam
and
jmp
or
push
xor
jg
inc
sbb
lahf
pop
repnz
jae
xor
dec
test
rcr
push
out
sub
xchg
clc
bnd
push
lahf
fiaddl
jmp
sbb
xchg
insb
das
test
push
ss
dec
and
jnp
in
jo
iret
cmp
aad
xor
mov
fmuls
lcall
hlt
mov
inc
push
fmuls
fisubrl
test
pop
pop
xor
pusha
mov
push
lahf
cmp
adc
divl
dec
or
and
clc
das
mov
pop
pop
mov
pop
mov
cmp
es
dec
into
jg
and
clc
adc
mov
and
enter
inc
adc
ja
mov
pusha
adc
cmp
rcll
roll
test
stos
xchg
adc
addr16
lods
push
sbb
or
in
pop
or
in
mov
inc
mov
int
ret
cli
jne
in
or
outsb
add
fdivs
stos
pop
in
push
fisttpl
xchg
mov
cmpb
mov
arpl
fisubs
jbe
mov
adc
scas
repz
in
pop
icebp
cmp
inc
push
pushf
lret
xor
sub
test
dec
pushl
jle
cmpsb
jge
push
mov
xchg
xchg
and
mov
and
lahf
shl
xor
lfs
xlat
stos
adc
jae
clc
sbb
pop
xor
and
xchg
sub
and
ljmp
mov
inc
add
push
in
pop
sahf
in
rolb
mov
incl
call
scas
pop
xor
dec
push
jl
ja
mov
jge
into
movl
cmp
negl
in
add
bnd
insb
sbb
shlb
aam
jg
adc
adc
fdivrs
and
mov
jge
aad
fwait
push
into
outsl
dec
sbb
push
dec
push
andb
mov
adcl
or
imul
enter
inc
movsl
mov
mov
sub
lret
leave
xor
es
xchg
cmc
mov
inc
xchg
outsb
push
call
mov
sbbb
repz
loop
mov
and
iret
push
mov
add
lahf
scas
pop
mov
ljmp
incb
and
adc
leave
pop
cltd
mov
mov
out
sub
xor
inc
out
fs
adc
pop
movsb
or
add
pop
mov
pushf
jns
sbb
xor
push
xchg
xchg
dec
stc
stc
and
sbb
loopne
das
sarl
add
out
adc
xchg
mov
inc
xor
pop
push
shll
dec
ljmp
xchg
aaa
das
xor
jle
addb
add
pinsrw
pop
sbb
daa
call
and
adc
lods
cmc
jge
inc
stc
ljmp
es
bound
xchg
add
xor
sbb
pop
fcmovnb
push
shlb
aaa
clc
mov
fcmovnu
cltd
inc
inc
mov
or
call
lea
and
xchg
jnp
mov
scas
mov
add
out
stc
and
call
jecxz
xchg
sahf
rorb
pop
stos
mov
mov
call
je
mov
shlb
xchg
scas
lock
lods
in
inc
popa
sbb
test
movsl
push
sub
rcl
pop
mov
xor
aaa
je
dec
les
mov
cmpsl
jnp
pop
pop
sub
sbb
inc
cmp
fs
dec
jle
hlt
std
jmp
inc
shrb
ds
inc
pop
ret
ret
shlb
mov
out
sbb
outsl
mov
and
mov
scas
mov
pop
dec
ds
adc
in
leave
shlb
insl
mov
lea
mov
rclb
shl
scas
jo
ja
out
cmp
xor
fs
add
fldcw
jge
cmp
add
pop
xor
mov
out
dec
aaa
dec
pop
pop
pop
js
test
test
pop
add
popa
leave
out
jg
and
dec
ret
push
sub
xor
inc
in
dec
fincstp
cwtl
pop
sub
dec
fistl
xor
cmp
pusha
or
jge
dec
sbb
cli
push
gs
jg
lahf
xor
xchg
lods
mov
jno
mov
scas
fsubrs
mov
sub
mov
cld
dec
ljmp
jmp
adc
rcrl
push
lahf
subb
sub
sbb
insb
mov
mov
andb
jle
xor
scas
in
xchg
je
rcrl
and
mov
or
loop
mov
mov
mov
push
mov
js
daa
push
leave
jne
sub
daa
imul
or
jo
fsts
gs
xchg
mov
xor
inc
test
scas
mov
gs
fsubrp
jae
sub
or
or
pop
enter
pop
sub
cwtl
inc
mov
sahf
jle
int3
aaa
fbld
fwait
lock
mov
filds
dec
int
add
test
or
jmp
mov
inc
roll
ret
pushf
lea
leave
inc
sub
add
sbb
push
in
stos
cmp
adc
ljmp
push
sbb
icebp
stos
scas
jae
mov
repz
stos
mov
jmp
lods
fldenv
adc
loop
pop
std
inc
and
lock
pusha
fcmovnb
and
and
gs
mov
jecxz
mov
test
push
jns
fwait
shlb
add
inc
aas
dec
ret
enter
cmp
pop
and
out
clc
pop
xor
or
movsb
add
push
and
mov
pop
lock
jle
push
lahf
sarb
and
mov
pop
push
pop
inc
outsb
lahf
fisubrl
fmul
jnp
xchg
jg
cmp
out
dec
cwtl
mov
pop
ret
call
fucom
sbb
xor
pop
std
sub
loop
xor
cli
and
add
inc
cwtl
inc
repz
cwtl
jbe
mov
mov
inc
jno
and
lret
mov
jns
popa
fbstp
add
xchg
inc
mov
add
lea
xchg
out
pop
stos
mov
jnp
stos
or
jne
repz
idivl
jo
leave
jl
jne
or
add
pop
out
pop
inc
xor
int
hlt
cmc
adc
test
mov
outsl
loope
cmc
ja
dec
test
dec
in
mov
pop
fcomp
cmpsb
jo
jmp
adc
scas
mov
xchg
fs
and
bound
cli
xchg
jne
add
test
lds
adc
xor
pop
fwait
lret
pop
cmp
fdivl
call
int3
addb
les
xchg
xor
cmpsb
stc
gs
push
push
and
ss
pop
icebp
jp
repz
pop
cld
xlat
pop
lret
adc
imul
les
push
aaa
adc
mov
push
pop
mov
adc
cmp
and
cli
push
jns
xor
mov
add
dec
mov
les
jle
adc
and
ds
icebp
cwtl
in
jp
aas
mov
lahf
rclb
stc
iret
bound
imul
loope
nop
pop
jb
inc
leave
xchg
sti
mov
cmp
or
out
out
ss
mov
xchg
pop
cwtl
cld
push
clc
mov
stc
sbb
xor
ss
cmc
lods
fs
cmp
cmp
cmp
add
int
push
cmp
adc
loopne
adc
add
push
add
fsts
jns
dec
and
dec
pop
std
jmp
push
dec
test
dec
jmp
dec
loopne
inc
cmc
aad
xchg
dec
daa
in
push
pushf
scas
inc
sub
pcmpeqw
ja
popf
out
test
push
roll
std
sbb
mov
lods
mov
pop
sbb
out
cmp
dec
mov
xor
mov
popa
mov
aaa
mov
xlat
outsb
dec
rorl
or
lods
outsl
movsb
push
fucom
dec
int3
xor
sub
xchg
pop
inc
mov
cmp
int3
popf
xor
pop
and
fnsave
ret
in
imul
xchg
dec
mov
lods
sub
cmc
jmp
pop
movsb
xchg
pushf
sahf
pop
sub
incb
int3
xchg
lcall
sub
jnp
insb
fs
pop
sbb
dec
test
cmpsb
loop
inc
jge
jecxz
sbb
mov
cld
push
mov
sub
clc
iret
mov
xlat
cwtl
pop
enter
rcl
add
cli
pop
lock
js
sti
imul
cmc
std
mov
insl
push
shrb
cmp
push
idivb
jb
mov
cmpsl
shrl
cmpsb
lock
loope
add
mov
out
pextrw
pop
sbb
xor
test
ret
pop
sbb
cli
insl
mov
aaa
sbb
mov
pop
mov
test
jns
dec
mov
das
fs
aas
or
dec
out
pop
cld
or
xchg
fcoms
sbb
mov
dec
cmpsb
mov
mov
sti
push
dec
mov
add
add
popa
iret
adc
aas
cmp
mov
add
pop
push
xor
lret
inc
jmp
popf
sub
clc
sbb
ror
loope
icebp
fs
fwait
int
sti
test
inc
adc
addr16
cltd
sbb
cmp
push
stos
or
sbb
fists
cmp
and
cltd
or
out
push
les
cmpsb
ja
pushf
jecxz
cs
mov
pusha
add
ja
loop
and
nop
mov
repz
and
adc
sti
stos
mov
mov
enter
loopne
add
aaa
mov
repz
xor
test
mov
add
sub
mov
add
call
xor
mov
mov
dec
jp
insb
in
hlt
scas
xor
add
xchg
pop
arpl
mov
fistps
leave
jmp
inc
adc
sbb
mov
pop
cs
mov
or
ljmp
pop
sbb
pushf
sbb
mov
xorl
mov
mov
mov
sbb
call
sahf
xor
push
push
icebp
scas
aam
sbb
pop
push
mov
cmpsb
lcall
add
add
lahf
mov
adcb
stos
cmp
dec
xor
insl
out
sub
in
cld
stos
and
pop
int3
outsl
rcr
dec
js
push
jmp
mov
lods
outsb
or
test
mov
fisttps
and
mov
cmp
movsb
mov
out
jnp
scas
push
sbb
mov
cmp
dec
ljmp
and
movsb
repz
sub
aaa
xor
dec
sbb
insb
push
dec
shrl
or
xchg
jo
lock
sub
movsb
add
dec
and
push
sbb
add
mov
adc
orl
scas
outsl
pop
mov
inc
aas
jne
cmpsb
cmp
aad
sbb
gs
cmp
cmp
add
push
js
fwait
xor
mov
in
and
stos
cltd
push
aas
pop
cs
jae
in
pop
fs
loop
daa
mov
mov
xchg
sub
cltd
mov
shlb
arpl
aas
test
add
sub
jns
pop
push
test
mov
fisttps
or
lods
loop
cmpb
inc
mov
push
jmp
lods
std
adc
push
mov
pop
sbb
leave
cli
adc
push
cmpsl
shlb
in
int
xchg
xor
pop
dec
push
jecxz
stc
add
cmp
cwtl
mov
movsb
cmp
fnsave
xchg
mov
xchg
jecxz
jbe
fistpl
xchg
lea
into
insb
iret
ret
dec
inc
xor
int3
mov
mov
mov
pop
inc
mov
es
icebp
iret
mov
mov
push
je
fdivrs
shlb
je
add
jo
sbb
rcrl
and
fwait
jnp
jbe
imul
pop
xchg
jns
int3
frstor
jno
add
xor
and
shrb
jle
adc
mov
jge
and
mov
jne
xchg
ds
and
cmc
jnp
or
std
movsl
xchg
and
daa
xchg
out
int3
jb
mov
sub
pop
mov
lcall
push
xchg
pop
stos
nop
or
sbb
push
sbb
adc
sub
fwait
or
pop
shlb
pop
inc
cmpsb
jb
pop
pop
jbe
dec
xchg
mov
stos
fwait
pop
cli
push
mov
cmp
push
add
or
mov
add
popf
outsb
mov
add
jo
in
jnp
inc
push
lods
or
mov
adc
xchg
bound
das
ja
ja
xchg
inc
outsl
cli
push
ret
pop
lods
imul
enter
or
ljmp
and
adcl
inc
popf
jns
and
and
mov
outsl
loope
lret
push
adc
loop
sub
mov
inc
mov
xchg
push
jl
mov
mov
cwtl
test
mov
sbb
add
fdivrp
pop
aad
insb
fwait
and
mov
push
out
mov
mov
add
mov
sub
sub
mov
cltd
add
push
lock
rorl
xchg
lahf
jge
xchg
mov
push
and
sub
mov
cmc
pop
scas
xchg
dec
jae
mov
mov
pop
xchg
dec
or
arpl
sti
sub
jno
jecxz
pop
rcll
test
cmp
andps
in
jno
or
push
push
stc
mov
ds
xor
into
test
dec
shlb
sub
jg
js
inc
out
pop
out
test
sub
cmp
test
shrb
xchg
sub
fwait
repnz
js
sub
and
or
mov
push
sub
mov
mov
in
test
xchg
push
push
sbb
notl
out
sahf
mov
xlat
movsb
addr16
lods
je
lods
cmp
fisubs
mov
cmp
push
arpl
fdivr
or
inc
iret
and
cmpb
imul
inc
test
shr
je
ret
cmp
sbb
das
cwtl
xor
rcll
push
xlat
nop
mov
subb
scas
fwait
insl
in
xorb
xor
sub
popf
dec
movsb
cmp
adc
int3
jae
in
mov
or
hlt
ja
lock
fnstcw
sub
mov
incb
jbe
cmpsb
inc
fisubrl
mov
ljmp
negl
cmp
mov
push
inc
mov
nop
cmp
pushf
xchg
sub
jp
add
out
out
mov
ja
adc
and
mov
fnstsw
jmp
scas
add
mov
mov
outsb
leave
xor
xlat
and
fidivrl
sbb
loop
rcr
in
cli
jecxz
mov
xchg
adc
test
add
mov
cmpsl
adc
ret
mov
fisubs
stos
int
sbb
pop
repnz
jnp
ja
pop
push
dec
std
cmp
sbb
pop
sub
sub
mov
inc
pop
jns
push
push
shl
lock
mov
rcr
pop
add
inc
popf
xor
notl
adc
fildll
icebp
push
dec
pop
sbb
mov
lods
cs
mov
add
inc
mov
inc
outsl
movsb
movsl
rcll
dec
add
xchg
fdivs
jmp
mov
xor
xor
and
push
popa
xorb
ret
or
sub
mov
dec
aam
stos
dec
pop
xchg
xor
inc
push
fbld
inc
insl
push
add
clc
push
shrl
stos
test
std
in
loopne
sub
mov
mov
mov
ja
jb,pn
fcompl
add
dec
sub
fisubrs
add
mov
xchg
mov
sub
inc
push
test
fldl
mov
push
xchg
clc
bound
aad
or
movsb
cwtl
mov
xchg
adc
xor
add
pusha
mov
ja
xchg
sub
jle
or
sti
or
sti
ret
pop
imul
movntq
mov
dec
int
insl
pop
jp
test
sub
ret
xlat
pop
adc
cmpsl
sbb
pop
add
adc
lcall
push
testl
mov
out
fwait
add
mov
call
xlat
and
scas
mov
push
dec
adc
jae
dec
push
mov
and
dec
dec
add
mov
or
hlt
scas
fs
adc
xor
dec
testl
jecxz
push
pop
and
stc
es
xor
mov
add
faddl
inc
jg
dec
jmp
xchg
sahf
push
dec
shrl
jp
jb
and
inc
inc
add
add
lea
cltd
mov
push
push
mov
cltd
xor
sbb
mov
xor
cmp
fldl
scas
pusha
out
and
pop
enter
cli
shl
std
imul
adc
push
jnp
push
shl
adc
mov
scas
outsl
or
mov
jns
xchg
icebp
addr16
mov
lods
pop
jge
into
jle
insb
mov
push
sub
cmpb
cmc
lea
test
mov
test
fwait
aam
dec
ret
bound
cmp
sbb
jbe
and
add
mov
leave
std
pop
pusha
fstps
jnp
push
sub
int
test
pinsrw
popa
cmpsb
sub
inc
sti
hlt
je
inc
cmp
push
mov
dec
push
push
dec
cmp
xor
iret
popf
inc
das
sbb
ss
sub
popa
fcmovnb
cmp
orb
push
jmp
push
adc
mov
pusha
adc
das
mov
jmp
imul
and
xchg
mov
enter
sub
js
addl
je
out
xchg
push
pop
int3
cmpsb
push
jmp
sbb
loope
xor
stc
pop
pop
mov
sahf
lcall
imul
out
or
inc
daa
mov
mov
out
adc
arpl
icebp
xor
or
sub
outsb
or
testb
xchg
pop
sub
out
mov
or
pop
out
insl
xchg
adc
and
dec
rclb
add
lea
jmp
sub
cmp
test
jp
jl
loope
inc
js
dec
xor
adc
xchg
aad
in
add
sti
jle
in
mov
rorl
inc
stos
test
imul
gs
add
push
loop
and
cmc
cmp
aam
cmpsl
repz
xchg
dec
loope
lods
cmp
and
aaa
and
sub
movsl
sub
in
rorl
mov
fildll
push
push
hlt
jle
jo
xor
stos
bound
inc
inc
popf
add
mov
pop
xor
ljmp
pop
lret
mov
sarb
xlat
inc
xor
lods
test
dec
adc
adc
xor
add
mov
sar
out
imul
add
mov
push
clc
pop
je
fstl
xchg
loope
dec
push
das
call
adc
sarl
mov
and
inc
dec
or
mov
xchg
mov
fsubs
pop
cmpsb
in
and
sbb
and
mov
je
and
inc
push
or
pop
push
adc
std
mov
test
pop
stos
xorl
test
mov
cmp
pop
out
pop
inc
cld
mov
xchg
imul
mov
shll
pop
and
dec
out
popa
fcmovnbe
out
mov
push
dec
cmp
ja
cs
fmuls
jg
mov
imul
adc
das
lret
aam
jae
fyl2x
or
inc
lret
cmp
mov
not
icebp
jbe
jecxz
pop
iret
mov
in
stc
jge
sbb
cmp
fsubrs
mov
push
testl
rorb
pop
ds
pop
dec
dec
adc
int3
and
pop
rorb
mov
lahf
repz
jne
dec
in
adc
inc
fwait
and
fdivl
push
nop
xchg
hlt
add
push
pushl
mov
shr
cltd
fstpl
stos
adc
bound
push
lea
ficoml
push
xor
inc
xchg
fwait
and
ja
cmp
shl
xchg
out
sbb
cli
mov
jo
xor
mov
sbb
cmp
sbb
push
mov
in
aaa
lret
mov
arpl
dec
mov
je
push
sarl
cmc
add
xor
nop
add
and
pop
dec
psrlq
jns
outsl
or
aad
xor
cmpsl
xchg
cs
dec
jae
cmp
jns
hlt
ljmp
pop
add
imul
mov
jle
in
jae
inc
pop
mov
aas
aas
inc
or
push
push
fnstcw
cmp
stc
push
loope
add
pop
jmp
stc
and
jb
push
pop
jecxz
xchg
test
into
ds
mov
cli
ljmp
hlt
out
decb
mov
cmp
and
and
ss
jp
adc
adc
adc
xor
push
jae
jne
dec
adc
xlat
repnz
jnp
inc
inc
ss
aas
loope
and
sub
icebp
shlb
call
cmc
and
add
cs
aam
sub
add
mov
add
mov
adc
ret
icebp
int
mov
aam
sbb
jle
in
and
dec
cmp
js
mulb
sbb
test
jbe
jne
adc
in
mov
push
add
mov
jno
inc
leave
out
fcompl
adc
and
inc
push
mov
jnp
and
mov
fwait
mov
int3
gs
jl
sbb
dec
stos
push
xor
sbb
mov
inc
mov
inc
out
movsb
jno
pusha
call
js
sub
mov
sbb
push
stos
xchg
es
insl
daa
in
push
faddl
sbb
push
cmpl
in
sbb
es
pop
dec
push
mov
test
and
test
xchg
int3
pop
sub
das
in
icebp
lahf
stc
and
push
inc
lock
inc
adc
sti
aad
and
clc
sbb
dec
ds
add
xor
cmpsl
pop
aas
loop
cs
ss
lret
loopne
cld
int3
or
shll
test
pop
xor
mov
lcall
outsb
std
and
mov
xchg
mov
pop
leave
loopne
std
scas
cmp
movsb
fistpl
test
test
fcompl
mov
stos
dec
sbb
lea
div
inc
pushf
leave
stc
add
sbb
daa
jmp
in
call
clc
xchg
scas
cmp
shl
dec
std
lret
icebp
mov
jae
pop
sahf
aas
adc
jbe
cmp
std
clc
aas
dec
mov
clc
ja
int
add
mov
lcall
clc
cmpsl
jge
mov
push
xor
out
lock
scas
sbb
outsl
add
push
dec
add
dec
inc
xchg
push
jmp
inc
into
outsl
xchg
loop
inc
addr16
and
add
dec
or
test
sub
fidivrl
jmp
out
cmc
adc
movsl
iret
enter
ss
fistpll
das
pop
jne
jno
into
cmp
iret
jp
and
mov
arpl
js
xor
enter
rorb
mov
out
rclb
js
pop
inc
cltd
out
jp
sub
pusha
jmp
push
adc
test
xchg
pop
cmp
pop
jno
inc
std
mov
jnp
shll
fists
int
mov
int3
cli
cmpsb
jae
push
int
pop
jecxz
xchg
jo
push
cwtl
pop
lahf
insb
fcmovnb
inc
jmp
mov
roll
das
aas
repnz
popf
out
xchg
mov
lds
test
or
fistpl
xor
sahf
ret
push
dec
mov
out
imul
insl
push
cmp
push
mov
outsb
andl
js
sahf
jmp
lahf
cmpsl
push
jae
cltd
pushf
test
mov
sbb
imul
or
cmp
shrl
mov
gs
data16
mov
or
jbe
sub
fwait
mov
push
and
push
es
aam
pop
das
and
mov
push
sbb
aas
pop
mov
pop
bound
cmpsl
mov
adcl
inc
adc
inc
inc
dec
pop
adc
daa
arpl
jp
xor
dec
leave
lock
fisubl
add
icebp
jbe
cmp
pop
movsl
rorb
cmpsl
aaa
push
negl
jecxz
sub
fstpt
shl
push
ror
idiv
sub
sub
cld
xor
sbb
loop
lahf
add
cmp
adc
push
test
pop
pusha
icebp
lret
lea
scas
repnz
rclb
dec
lret
lret
pop
loopne
sbb
shll
inc
ljmp
sahf
rolb
ficoml
std
pop
mov
aaa
sub
cmp
pop
jnp
dec
mov
sub
pop
or
xchg
xor
movsl
adc
fistpll
mov
adc
pop
or
test
push
loopne
jp
cmpsb
sub
cmp
mov
or
push
or
clc
icebp
push
sbb
imul
adcl
xor
insb
pop
cmp
shrb
pop
inc
scas
icebp
hlt
pusha
daa
cmpsb
pop
jns
mov
pop
test
xchg
xor
fwait
mov
loope
push
cmp
push
cmpsb
nop
add
and
jne
jecxz
push
xlat
mov
mov
adc
je
xchg
cmp
ljmp
push
lods
addr16
mov
or
push
xchg
sub
enter
jecxz
add
mov
xor
leave
jbe
or
inc
jae
test
repz
pushf
mov
js
ror
lods
sub
add
addr16
pusha
fs
bound
or
loope
mov
xor
out
cs
testl
jl
aam
pop
aam
scas
pop
pop
iret
lock
push
leave
push
stc
pop
in
ret
push
adc
icebp
xchg
gs
cld
and
push
or
or
lret
lods
adc
pop
mov
ds
gs
add
fistpll
mov
aas
mov
ds
scas
push
xchg
and
ret
ja
outsb
pusha
insl
pop
inc
mov
jecxz
fwait
push
inc
sahf
add
mov
mov
xchg
push
xchg
in
iret
add
and
xchg
jmp
dec
mov
add
cltd
movsl
icebp
lret
mov
and
pushl
dec
fldenv
ficomps
lret
sbb
jo
sarl
loopne
xchg
repz
ds
icebp
mov
repz
xchg
mov
xchg
mov
dec
enter
inc
leave
cmp
mov
enter
test
xchg
adc
push
mov
mov
sbb
xor
pop
push
lds
jg
cmp
dec
sub
lcall
xor
or
lds
mov
push
out
push
out
loopne
mov
mov
pop
cmc
push
sbb
in
arpl
popa
es
fmull
xor
iret
movsb
mov
inc
push
push
lds
and
in
mov
sub
and
sbb
xchg
sbb
adc
out
into
sbb
mov
sub
dec
sub
sbb
inc
dec
mov
jp
leave
clc
enter
mov
mov
repz
mov
fbld
bnd
add
in
aaa
ficomps
dec
and
cmp
inc
fmull
bound
bound
iret
loop,pt
cmpsl
add
fidivl
adc
mov
push
fsubp
in
xchg
mov
out
inc
es
pushf
mov
mov
mov
push
lret
gs
jge
mov
push
in
mov
xor
sti
or
or
imul
pop
mov
dec
push
sbb
or
pop
pushf
push
jb
pop
dec
jb
push
shr
adc
mov
mov
mov
lods
jno
test
scas
stos
in
xchg
test
pop
cmp
lods
popf
mov
adc
in
mov
mov
test
jmp
pmulhw
cmp
jmp
jmp
pop
inc
lock
mov
hlt
into
or
push
test
fimuls
push
or
fstl
mov
mov
jae
movsl
push
inc
sbb
and
ds
and
andl
fadd
sub
sub
mov
add
sub
adcb
out
lret
sbb
mov
aad
ffree
hlt
add
mov
and
push
jl
jb
cmc
mov
jge
push
adc
sbb
jmp
pop
mov
sbb
enter
lret
loopne
subb
into
sub
jae
call
int
aas
push
xchg
es
jmp
jno,pn
test
xchg
ss
sysexit
incb
and
ds
push
pushf
xor
ret
or
jns
pop
mov
lcall
and
xor
xchg
cmovle
jno
lds
jg
cs
sahf
pusha
sub
out
pusha
test
pop
mov
and
leave
rorb
xchg
fisubs
cli
cs
test
es
mov
dec
jl
xchg
dec
sub
jge
mov
jg
jmp
inc
sbb
dec
sub
mov
dec
dec
inc
data16
into
jecxz
push
push
jp
fcoml
push
and
arpl
inc
nop
cmpsl
add
dec
orb
in
addb
push
xchg
jecxz
loopne
orb
xlat
imul
push
leave
cmpsb
ljmp
outsb
and
jae
mov
lods
sarb
pop
into
jbe
sub
and
push
imul
dec
push
mov
lods
scas
jge
cmp
cwtl
push
pop
loop
mov
call
ret
mov
add
inc
jo
pop
es
rcll
cwtl
scas
shrb
and
adc
sti
inc
int3
addb
and
jne
out
jno
scas
mov
push
dec
push
jg
aam
pop
in
hlt
pop
cwtl
cmp
inc
mov
mov
xchg
scas
pusha
outsl
cmpsl
fmull
sbb
ret
in
out
loopne
js
outsl
outsb
mov
orl
andl
into
mov
mov
aas
and
rcrb
arpl
adc
arpl
cs
pop
in
xchg
ret
outsb
push
and
sbb
ljmp
popl
sahf
in
adcl
repnz
mov
fs
and
jbe
lods
jo
pop
outsl
insl
inc
std
cmp
rclb
cmp
shlb
icebp
test
ret
rcll
iret
lret
dec
mov
shll
sbb
push
pop
adc
dec
push
mov
in
push
addr16
scas
ret
clc
aas
and
out
jmp
es
sub
mov
or
push
rclb
pop
push
aaa
aaa
setae
outsb
cmpb
mov
dec
call
pop
xlat
nop
roll
rcrl
ds
notb
bound
fidivrs
xchg
push
fmuls
xchg
mov
push
or
dec
rclb
jp
pop
loopne
jecxz
cli
xchg
xor
inc
es
outsl
addl
jle
or
xchg
jecxz
mov
pop
pop
xchg
ds
inc
gs
inc
jp
push
xor
add
out
add
and
cmc
enter
pop
push
fidivs
dec
stos
push
js
jecxz
mov
jge
push
cltd
out
jnp
lret
xchg
xor
loop
loope
mov
jecxz
xchg
push
pop
mov
movsb
sbb
cld
test
add
xchg
mov
gs
ret
jo
xchg
push
cmp
icebp
sbb
scas
dec
loop
push
mov
lds
mov
enter
adc
cltd
inc
scas
fcoml
or
lcall
and
cmp
out
xchg
in
sbb
jge
inc
pop
aam
xlat
std
movsl
jb
movb
fistl
daa
mul
or
add
idiv
das
add
in
cmp
ja
xor
adc
inc
loope
cli
mov
xor
sbb
pop
inc
jmp
xchg
dec
out
ret
jl
test
ds
fistpll
in
and
pop
in
sar
or
cmp
stos
sbb
popf
js
arpl
xor
cmp
cmp
adc
adc
sub
dec
xor
inc
push
pop
int3
or
and
notl
mov
dec
and
in
and
nop
push
mulb
enter
jle
or
or
pop
data16
jmp
sbb
in
mov
cmc
es
out
dec
inc
in
cmp
sbb
jge
sub
inc
pop
fcos
mov
and
inc
movsl
shrl
popa
test
cmpsl
add
lds
mov
mov
add
hlt
outsl
mov
mov
cmp
xor
je
pop
cltd
js
movsl
xchg
loop
in
mov
dec
pop
xor
rcl
outsb
arpl
pop
mov
movsl
loope
lock
cmp
mov
mov
inc
call
add
mov
jb
push
mov
loope
sbb
out
fs
xor
jp
or
icebp
mov
outsl
in
mov
sar
scas
cmp
jbe
insb
aam
imul
imulb
add
xchg
and
data16
adc
faddl
rclb
add
inc
loopne
ljmp
test
lret
int
fistpll
push
mov
nop
xor
test
xchg
cmpsl
je
lahf
mov
add
or
lcall
test
fsubrl
xor
cli
leave
dec
cld
jns
and
loope
or
ret
jl
pop
in
jl
hlt
mov
cmc
fwait
loopne
scas
mov
rorl
lret
test
mov
add
call
test
xchg
clc
je
cld
cmp
and
lds
and
adc
mulb
xor
push
dec
xor
xchg
rcrb
cmp
fsubrl
or
cmp
xchg
and
adc
jno
jecxz
adc
inc
pop
test
mov
lock
cmp
dec
mov
xchg
push
pusha
clc
mov
jbe
pop
in
push
ljmp
ficoml
popf
popf
push
or
aad
data16
scas
lods
adc
sub
cmpb
mov
imul
lcall
mov
add
shlb
icebp
pop
mov
xor
stos
mov
clc
and
lcall
icebp
and
jle
jnp
rcrb
lcall
xor
dec
out
xchg
arpl
test
cmp
ret
cmp
jo
in
jl
fisttpl
test
test
popf
dec
fcompl
jno
xchg
add
push
sti
js
call
mov
xchg
inc
test
cmp
cmp
sub
lret
and
push
add
ret
lret
test
stc
enter
dec
dec
sbb
mov
xchg
xor
loopne
and
les
jge
and
psrlw
pop
sub
ss
subb
out
outsb
sbb
ss
scas
das
xlat
fwait
mov
sbb
mov
mov
mov
pushf
ret
push
xor
cwtl
push
mov
push
fstl
mov
iret
jne
nop
je
mov
int3
lods
cmp
cmp
jne
sbb
push
call
cmpsl
push
pop
mov
repz
leave
lds
xchg
ret
inc
xor
out
push
ss
pop
stos
aaa
inc
push
shr
incb
mov
and
xchg
pop
xor
and
sub
jb
xor
pusha
push
test
sub
std
xor
push
xor
sahf
in
or
mov
movsb
std
scas
scas
ljmp
outsl
fs
test
inc
mov
fcmovnb
outsl
inc
out
movsl
adc
jnp
popf
and
aaa
in
push
jp
inc
popa
adc
cmp
nop
cmp
lahf
cmpsl
add
pop
imulb
outsb
jl
jmp
js
xor
fcmovnb
jmp
ljmp
nop
iret
cld
jne
cmp
add
out
mov
sub
sbb
pop
push
cs
repz
adcl
mov
mov
cmp
fsubrl
test
outsb
insl
jle
les
cmpsb
xor
pushf
jnp
jbe
lea
jo
sub
ss
stos
imul
inc
fldln2
repz
lds
inc
ret
lods
leave
imul
xor
cmpsb
pop
sbb
int3
dec
xor
sub
inc
pusha
jmp
aaa
loop
shlb
daa
test
push
dec
test
mov
call
cmp
test
clc
nop
out
sub
mov
dec
fwait
in
cmp
int
ss
xchg
sbbb
outsb
pop
or
hlt
push
outsl
mov
movsb
je
les
icebp
adc
sub
jns
mov
mov
dec
mov
xor
mov
mov
filds
lods
loope
xor
outsl
sub
out
mov
movsb
addr16
push
stos
add
xor
insl
pop
cld
test
jnp
push
jp
das
ds
sti
aad
mov
jno
pop
ror
mov
mov
add
jno
rol
jge
aaa
aaa
cld
jns
lods
or
inc
or
jmp
lret
mov
mov
addr16
xchg
shrl
ror
pop
cmpsb
inc
pop
mov
and
and
fsub
inc
das
cmp
jmp
and
jg
mov
cmpsb
mov
inc
lret
mov
sbb
arpl
clc
push
jne
dec
xchg
pop
mov
movsb
pushf
adc
mov
cmp
fnstsw
add
sti
mov
jno
cmp
mov
in
ss
pop
in
add
mov
jle
dec
push
mov
pop
negb
pop
std
jmp
cwtl
cmp
pop
adc
and
dec
mov
fidivs
mov
push
push
and
lret
movsl
ficoml
lods
jle
lret
xchg
mov
test
aas
or
nop
jns
cmc
pop
mov
jmp
pop
dec
fisubrs
call
adc
pop
sub
subl
subl
pop
arpl
shrl
mov
mov
push
stos
cs
fistpl
pushf
shlb
addr16
and
je
sbb
data16
outsl
jne
xlat
mov
mov
loop
lods
andb
adc
sub
jne
add
xchg
pop
data16
or
jle
pop
mov
add
mov
cmpsb
outsb
pushf
xor
mov
scas
aas
sarl
pushf
cmp
jp
test
scas
push
push
scas
jns
sub
aad
xchg
imull
xor
sbb
adc
or
xchg
in
mov
stos
loop
mov
data16
cmp
bswap
dec
mov
mov
xchg
pop
pop
mov
and
movsl
mov
cmp
or
call
aad
hlt
in
sbb
or
cwtl
repnz
fsts
aaa
ss
in
cmp
mov
and
scas
sub
jmp
dec
cmp
jle
push
stos
or
adc
mov
outsb
lret
sbb
call
pop
jge
ss
mov
out
mov
pushf
sbb
test
sarb
dec
pop
fsubs
std
mov
test
repz
adc
adc
cmpsl
mov
push
pop
stos
sarl
loopne
sti
arpl
jmp
and
jg
inc
mov
out
into
xchg
adc
inc
ret
lods
push
cli
sbb
xchg
inc
lods
add
shr
ljmp
pushf
aas
inc
jb
add
push
or
cmc
lahf
fwait
daa
lret
jecxz
loope
hlt
or
je
mov
mov
cmp
pusha
movq
stos
lea
xorl
xchg
add
outsl
mov
addl
inc
lods
xchg
bound
or
xlat
lock
nop
xor
sub
and
xor
dec
sbb
mov
cmp
or
lock
inc
inc
in
dec
jno
xor
fadds
mov
dec
imul
rcrl
add
test
mov
xor
call
stc
das
pop
stc
mov
repnz
sub
aas
xorb
cmp
pop
out
lret
push
or
mov
ss
fucomp
insb
cmpb
ljmp
sbb
loopne
pop
lock
jmp
or
and
sbb
dec
xchg
bound
outsl
dec
stos
mov
jnp
sub
ja
hlt
jo
xor
sahf
leave
cmp
cmc
scas
jne
mov
shrb
jo
jg
fidivrs
popa
int3
adc
pop
pop
xor
cltd
idivl
dec
inc
inc
or
add
cld
ja
inc
and
sahf
push
cwtl
rclb
ficoms
or
adc
jne
jbe
pop
dec
ds
xchg
and
sarb
icebp
loope
mov
dec
push
ja
cmp
or
rorb
mov
jb
or
sbb
loope
mov
sub
test
or
xor
adc
or
push
call
jg
pop
cld
push
movsl
sub
mov
fstl
and
lock
std
enter
lcall
cmp
ret
mov
mov
negb
fistpl
or
ja
or
inc
daa
inc
loopne
lock
push
xchg
xchg
das
jbe
aam
push
push
dec
lret
data16
fwait
mov
ljmp
mov
or
adc
cmp
addb
imul
mov
pop
and
test
jmp
jmp
jl
sahf
test
fstpt
fld
fldt
cmp
or
movsb
clc
or
out
jg
jecxz
lods
sbb
cmp
push
xchg
jmp
sbb
sbb
add
xor
lcall
pop
inc
fnsave
sub
xor
inc
mov
cwtl
std
out
cmp
clc
add
inc
in
hlt
scas
xchg
cvtps2pi
inc
sub
stos
outsb
mov
loope
adc
repz
or
lcall
sub
and
enter
addr16
and
fwait
sahf
inc
push
cmp
xchg
data16
in
pop
lahf
rclb
test
outsl
lea
or
sub
pop
sub
ss
icebp
icebp
mov
cs
mov
cwtl
adc
lods
pop
les
int3
xor
adc
rol
mov
jns
rorb
mov
push
sarb
mov
mov
mov
iret
cmc
adc
jno
mov
movsb
pushf
insb
repz
sbb
addr16
jns
sub
cmp
int3
test
ret
xchg
add
jns,pt
lock
cmp
rolb
sbb
pop
dec
xchg
lret
mov
clc
das
push
push
je
inc
iret
xchg
xor
rorb
xorb
leave
mov
jae
push
test
jo
or
mov
xchg
sbb
push
addb
rolb
sub
sbb
cmp
pop
xchg
pop
popa
shll
dec
push
cmpsl
cmpsl
sub
push
mov
fbstp
fst
sbbl
int
sub
std
test
cmp
aam
je
pop
shll
add
filds
push
sub
js
addr16
dec
mov
jmp
mov
or
bound
cmpsb
pushl
out
and
xor
rorb
inc
and
xchg
push
push
push
pop
cmpsb
inc
cld
jecxz
sub
lea
les
ret
inc
mov
pop
push
push
xchg
adc
and
and
pop
imul
adc
mov
pushf
nop
xor
lahf
call
into
movsl
enter
out
sub
mov
push
aad
test
and
imul
and
popa
stc
scas
jo
mov
or
std
pop
aad
or
push
cmp
loop
dec
inc
add
bsr
fs
popa
xchg
ret
cmp
sbb
or
or
aaa
ds
stos
jno
movsl
ret
cmpsb
dec
push
push
sbb
push
dec
push
cmp
jnp
rcl
inc
fldt
insl
ret
mov
std
mull
out
pusha
xchg
mov
scas
adcl
test
or
xorl
dec
loopne
outsb
inc
stc
lock
cmp
repnz
jne
cmp
cmc
mov
dec
fcomps
cwtl
xor
flds
dec
pop
push
mov
push
loop
test
aad
loopne
sahf
mov
out
jae
mov
test
push
ja
ja
mov
das
clc
sarb
pop
dec
cmp
cmc
inc
or
mov
inc
cmp
xchg
jne
jns
pop
xchg
enter
cmpsb
aad
xchg
pop
arpl
push
enter
jmp
jbe
jnp
pop
dec
inc
into
lret
cwtl
adcl
xlat
cmc
xchg
add
mov
aad
jo
jmp
adc
push
in
les
pop
decb
leave
mov
nop
movsl
mov
testl
movsb
je
and
jl
inc
or
or
sbb
pop
lods
pop
nop
es
jecxz
inc
adc
daa
out
leave
push
jmp
add
pop
mov
and
leave
test
push
sbb
test
inc
sahf
or
cwtl
xorb
dec
subl
sbb
andb
in
aam
imul
ds
outsb
pop
xchg
mov
fistpl
sub
inc
sbb
aas
and
pop
bound
aas
push
cmp
loop
out
leave
adc
sub
in
push
xchg
push
xor
dec
push
push
add
sub
outsl
xchg
outsb
inc
push
push
mul
or
cltd
fsts
pushl
lods
pop
mov
nop
push
out
xchg
pop
jl
leave
mov
or
int
aad
xchg
mov
push
push
inc
xchg
mov
mov
mov
or
or
stos
testl
and
div
mov
fisttpll
sub
hlt
dec
sub
lea
xor
xor
icebp
jg
fs
lret
inc
mov
xor
and
or
fadds
xor
mov
cs
mov
fwait
adc
int
cmp
inc
aam
mov
subb
push
shrl
inc
push
xor
pop
and
xor
pop
pop
fildll
xor
in
mov
cmp
mov
sub
and
pop
sub
sub
enter
adcl
push
adc
dec
xchg
lock
mov
push
mov
jo
sbb
bound
jns
divb
iret
pushf
jno
je
popf
inc
outsl
adc
roll
loope
xor
mov
sub
adc
cmp
and
in
hlt
les
mov
jecxz
inc
outsl
dec
jno
out
les
xchg
push
in
sbb
sub
ja
mov
and
add
test
imul
xchg
add
pop
pop
or
mov
push
push
cmovno
outsl
out
fisttpll
inc
push
cmp
mov
fmuls
bound
test
arpl
bound
fstl
andl
ja
cmp
and
fucom
cli
ret
fldt
mov
sub
sbb
dec
and
inc
jno
fistpll
mov
ss
pop
negb
out
out
xor
aas
fdivrp
push
test
xor
ret
leave
sbb
ret
mov
idivb
inc
ja
rcrb
ja
jecxz
adc
cmpsl
ljmp
dec
fdivrl
xlat
inc
jno
stos
stc
subb
push
or
pushf
push
and
sub
mov
andl
push
jae
fisttps
std
cmp
sbb
or
dec
xchg
orb
adc
ja
sub
out
loopne
and
fsubrl
push
aaa
jne
xchg
push
test
cs
mov
jns
adc
xor
sbb
je
inc
mov
lods
mov
fsubl
outsb
dec
xchg
out
cmp
pop
adc
cltd
mov
push
dec
jle
mov
fiadds
add
ret
fidivl
push
lods
inc
adc
push
outsl
pop
xchg
imul
sub
xlat
or
out
cmpsb
push
cmp
xchg
push
sub
jne
ss
hlt
out
jbe
shrb
test
inc
fsubrs
lods
out
xlat
push
mov
popf
test
add
dec
xlat
movsl
out
dec
add
or
cmp
imul
and
scas
imul
ds
push
sti
mov
xchg
sbbl
fnstcw
cmpl
ja
pop
cmpsl
lahf
xor
xchg
xor
jecxz
sahf
call
pop
adc
out
insl
or
xchg
in
int
pop
pop
dec
jp
jae
inc
hlt
scas
pop
fdiv
inc
and
dec
aas
daa
shrl
jge
rol
pop
cmp
push
xlat
mov
and
mov
lea
jne
bound
xchg
into
mov
pop
jbe
cmpsl
out
fisubrs
add
aam
fmull
add
sbb
mov
mov
sahf
and
outsl
pop
inc
mov
mov
insl
add
into
sbb
arpl
push
or
cwtl
jbe
pop
aas
rorl
dec
lods
jo
cmp
cli
aas
arpl
iret
xor
stos
add
mov
ret
in
mov
mov
test
cs
jg
dec
lcall
cs
add
adc
xchg
and
pop
lahf
test
gs
sub
xor
jg
mov
dec
and
lret
dec
cmp
and
jns
xor
lock
stos
stos
inc
hlt
jle
rcr
push
fnsave
adcl
test
jecxz
in
pop
jno
lcall
adc
nop
cwtl
test
leave
fistpl
lods
inc
sub
mov
and
xchg
out
mov
popa
jbe
lcall
test
inc
lea
in
dec
sbb
dec
dec
ds
dec
cmc
sbbl
cmpsb
adc
mov
lods
lea
inc
add
in
mov
enter
jnp
push
hlt
divb
adc
pushf
push
mov
fdivp
outsb
add
fsubrl
pop
mov
pop
jno
fwait
shll
inc
add
ss
pop
dec
sbb
loope
xor
add
mov
adc
stos
imul
ret
pusha
repz
icebp
inc
cld
pop
bound
lahf
scas
hlt
lea
push
add
or
inc
push
push
push
mov
mul
jp
mov
mov
cmp
shlb
gs
adcl
lahf
cs
xlat
adc
outsb
arpl
sub
aam
loopne
push
push
in
push
into
daa
or
jecxz
cmp
out
pop
pop
inc
test
dec
pop
scas
lcall
sub
xor
xor
fmull
mov
or
test
repz
enter
mov
inc
sarb
add
and
dec
inc
rorb
aaa
mov
loopne
jnp
adc
push
outsl
aas
aas
add
cmpsl
push
fsubrl
push
insb
sbb
push
rcll
and
cltd
sub
dec
mov
fcomps
jbe
sarb
mov
xchg
pusha
mov
lea
mov
fidivrl
loopnew
lea
push
lret
mov
xchg
or
jmp
inc
imulb
dec
test
pop
or
gs
mov
in
sahf
sbb
aam
cli
inc
inc
mov
mov
stos
add
jmp
or
cmp
add
pushf
scas
mov
xchg
sub
js
inc
sbb
push
jbe
mov
jno
jbe
out
sbb
sbb
loope
aas
movsb
and
cmp
mov
jb
mov
xchg
xor
inc
pop
mov
xor
cmp
ja
sti
popa
cmp
jp
push
xchg
call
mov
mov
arpl
sbb
stos
out
mov
outsb
jae
adc
stos
mov
cli
mov
mov
xor
jle
inc
jecxz
cmpb
int
cmpsl
push
data16
aas
xor
test
pop
cmp
cmp
push
icebp
rolb
fwait
xor
sub
cmp
bnd
sti
sub
insl
xchg
loopne
mov
mov
lea
test
iret
push
mov
adc
sbb
dec
jle
pop
sbb
xchg
mov
jmp
je
mov
aad
call
insb
js
push
fstps
cmp
adc
fs
leave
shufps
js
das
push
sbb
mov
loopne
test
aad
jecxz
inc
fwait
sub
aam
mov
jge
xchg
jae
cld
and
sti
outsb
ror
repnz
rep
notb
xchg
es
test
or
xorl
mov
iret
out
add
int
and
dec
insb
in
repnz
shrb
cmp
mov
movsl
jge
sub
lahf
int
sub
in
jp
mov
imul
xchg
mov
jl
test
cltd
mov
dec
jl
jnp
jmp
push
xchg
das
sar
lret
lcall
insl
cs
xchg
and
adc
xlat
test
cmp
mov
push
mov
pop
lods
jmp
mov
aaa
push
xorb
cmp
adc
mov
shrb
fstl
fidivrs
outsb
jae
inc
sub
fsubrs
jbe
lret
push
adc
xchg
sub
dec
jns
xchg
jmp
sbb
mov
xor
repnz
cwtl
sbb
leave
outsl
or
iret
xor
test
cmpsb
fwait
mov
xchg
lock
lock
cmp
stos
mov
cmpl
pop
xchg
mov
mov
fs
lea
loope
xchg
xor
loop
imul
movsl
mov
xor
mov
push
jle
jo
or
das
fucomp
repz
dec
iret
insl
xchg
mov
pop
inc
cmp
mov
iret
inc
pop
pop
jnp
mov
lahf
cmpsb
xor
int
mov
dec
pop
mov
mov
mov
xor
xchg
jl
jl
repz
add
jl
lret
scas
push
fistps
adc
pop
jae
addr16
sbb
mov
scas
js
dec
ljmp
cmp
push
xchg
ficompl
scas
push
mov
sbb
imul
test
dec
push
sbb
lods
mov
subb
mov
bnd
js
pop
push
and
mov
sub
inc
xor
lcall
nop
and
pusha
loop
enter
mov
add
js
lahf
xor
jmp
fs
ficoml
testb
mov
and
call
mov
jae
decb
nop
pop
mov
sti
push
jno
out
fistpl
je
mov
xchg
fwait
xor
mov
sub
mov
out
sub
mov
jnp
xlat
lods
inc
mov
scas
sub
stos
fsubrl
mov
and
mov
sub
dec
mov
aaa
mov
add
lcall
std
cli
rorl
inc
stos
test
je
mov
in
ss
ss
mov
cld
or
adc
cmpsl
addr16
fsubl
push
sub
addb
arpl
xor
mov
ds
or
decb
mov
mov
mov
iret
hlt
sahf
insb
mov
dec
cwtl
test
xchg
rcll
add
xchg
mov
pop
cmc
xchg
cwtl
xchg
jo
mov
test
mov
dec
jle
test
daa
jmp
mov
and
push
dec
or
setle
push
pop
arpl
xor
jbe
xchg
xchg
loope
xchg
in
push
dec
repnz
out
mov
xchg
loopne
push
add
mov
stos
iret
cld
test
sbb
fs
pop
add
pop
pop
push
inc
inc
fidivl
jo
data16
mov
or
lods
push
int
sbb
mov
sbbl
cmpl
sub
add
sbb
jle
pop
cmpsb
clc
enter
lret
cmpsl
aas
adc
lods
std
call
icebp
hlt
in
stc
xor
fwait
pop
dec
push
test
outsl
aad
cmp
lret
mov
mov
mov
mov
inc
cmp
fstpt
mov
sub
push
cwtl
int
sub
mov
or
movl
xor
mov
leave
sub
mov
push
mov
jge
jge
cmpsl
mov
mov
int
lock
or
cltd
add
int
push
or
js
sub
rol
xor
inc
pop
push
scas
sub
out
mov
lea
add
mov
ljmp
out
mov
call
fcoml
or
push
inc
imul
or
and
cmp
mov
inc
ret
push
xchg
out
dec
add
xchg
loope
out
fildl
scas
adcl
dec
ds
inc
popf
shlb
push
jp
leave
gs
jns
jl
imul
loop
sbb
push
xchg
or
in
subb
roll
pop
cmp
sbb
cmpsl
lods
jp
push
out
mov
popl
jmp
and
push
lods
dec
stos
sbb
call
fldl
dec
jl
pushf
fstps
loop
ror
push
sub
pop
fcomip
sbb
adc
dec
mov
fwait
or
cmpsl
push
push
inc
sbb
and
or
push
and
icebp
jne
test
xchg
jle
dec
jmp
and
lea
movsl
cmpsb
sub
pop
mov
les
scas
xchg
jo
cli
xchg
sbb
aad
cld
add
test
mov
mov
mov
ficoms
arpl
mov
fwait
xchg
and
and
ljmp
js
adcl
push
test
pusha
pop
je
sbb
push
cltd
pop
movsb
xchg
fdivs
js
jecxz
movsl
std
pop
sahf
sub
or
adc
pop
stc
clc
xchg
jnp
sub
push
jno
notb
out
in
scas
pop
push
jo
pop
pop
adc
shll
ds
xlat
add
jbe
daa
or
divl
aam
xor
jmp
inc
insl
bnd
xchg
push
imul
test
sbb
mov
xchg
adc
insl
jae
lods
xchg
jmp
mov
or
mov
dec
insl
pop
mov
xor
scas
push
push
out
jle
push
add
adc
loope
imul
insb
outsb
push
xchg
add
cmp
xchg
divl
gs
jp
cmc
outsl
dec
gs
andl
shlb
sub
in
subl
mov
xchg
incb
adc
jg
push
pop
or
loopne
adc
pop
cmp
pop
out
pop
les
pop
or
push
pusha
test
shlb
scas
shr
das
or
pop
dec
repz
imul
xchg
lret
mov
test
mov
ja
ficompl
in
pop
cmpsl
sub
outsb
add
pop
dec
jne
jl
cwtl
sahf
movl
jmp
cmp
xor
dec
jmp
ficoml
xchg
pop
xor
pop
shlb
adc
cmpsl
pop
sarl
shrb
pop
int
fnstsw
lods
ljmp
sbb
loopne
es
lcall
cmp
popf
dec
push
pop
inc
enter
dec
jae,pt
xchg
inc
test
outsl
sar
cs
pop
sub
sbb
iret
pop
dec
scas
mov
mov
mov
scas
sarb
dec
mov
aad
or
lods
mov
push
jbe
bnd
mov
out
js
jp
pop
fs
enter
mov
out
mov
int3
cltd
ss
push
mov
notl
lods
outsb
sahf
cmc
call
pop
xlat
repnz
jo
jo
cmp
mov
dec
adc
shll
inc
fstpt
insl
dec
xchg
cltd
mov
mov
cmpsl
into
aad
push
jb
jb
cmp
sarb
fisttps
lea
jb
or
or
jns
sub
pusha
sub
xchg
std
push
xchg
cmp
xchg
jge
adc
sub
fdiv
cmp
mov
dec
xchg
pushf
int
mov
fildll
incb
push
mov
cmovnp
cmp
adc
xor
push
frstor
mov
loope
mov
mov
jae
jb
daa
pusha
in
repnz
mov
into
rorl
cli
mov
add
sub
sbb
clc
xchg
outsb
repz
mov
and
xchg
fwait
push
and
cs
imul
lea
jae
jnp
into
and
mov
adc
sub
leave
movsl
inc
mov
loop
idivw
mov
loope
cmp
xor
fsts
mov
push
sbb
sbb
hlt
dec
sbb
sbb
sti
sbb
pop
or
test
aas
and
rcrb
test
mov
lret
mov
mov
pop
fnsave
sahf
jl
lret
or
stos
adc
ret
aam
push
cmp
adc
sbb
imul
mov
add
push
pop
ffreep
add
sub
dec
pop
je
push
jg
jnp
jb
hlt
jecxz
jl
insl
sub
test
add
movsb
leave
lea
add
xchg
pop
sub
xchg
int3
mov
insb
inc
dec
out
insb
dec
imul
scas
mov
or
cmp
cli
inc
outsl
push
inc
or
sbbb
shlb
lret
mov
loop
cmpsb
nop
cmp
jbe
enter
fs
adc
mov
cmp
mov
or
mov
scas
insb
push
lods
and
push
jb
xchg
jb
popa
pop
or
push
mov
addb
icebp
lods
movsb
pop
lret
cmp
pop
jno
cmpsl
andb
es
and
mov
sub
je
xchg
mov
pop
test
and
lcall
dec
je
jb
jp
mov
addr16
shlb
mov
adc
mov
jne
adcl
xchg
add
adc
jb
fs
mov
dec
andb
icebp
xchg
imul
mov
pop
cmp
lods
and
pop
insb
repnz
addr16
loope
adc
in
inc
cmp
mov
stos
mov
jecxz
ds
xchg
scas
test
push
sti
sbb
cmpsb
lods
sub
loope
xchg
mov
hlt
addr16
in
dec
lahf
cld
aas
mov
mov
mov
mov
sbb
adc
enter
xor
push
fstpt
aas
pusha
dec
and
outsl
cmp
add
mov
shll
lret
cmp
sbb
sarb
pop
outsl
or
fimuls
outsl
cli
inc
in
mov
push
mov
pop
imul
cmpl
lods
ret
pop
push
fwait
xchg
outsl
js
js
lcall
jecxz
push
stc
js
adc
mov
pop
lods
xor
inc
dec
push
icebp
jge
in
push
push
in
aam
xchg
push
movsl
adc
mov
lods
lahf
dec
pop
icebp
jg
lods
fstl
push
mov
add
sub
push
xor
xlat
mov
lret
repnz
jae,pt
sbb
scas
in
cs
loopne
aam
cmpsb
movl
lods
clc
mov
in
inc
leave
cmp
inc
pop
adc
lret
out
popa
xchg
test
rorl
outsb
adc
inc
insl
stos
push
sarl
jns
movsb
push
xchg
sub
fnstsw
in
mov
fists
push
dec
scas
push
stos
sbb
lods
repnz
jnp
dec
fdivl
pop
jmp
popf
clc
add
xchg
add
push
in
fists
sbb
addl
mov
shl
jne
xchg
inc
jp
pop
jmp
jl
arpl
lock
adc
and
or
add
pop
xor
loopne
fidivrl
push
fwait
push
pop
popf
cwtl
sarl
ret
test
and
sbb
push
dec
lahf
push
hlt
cmp
inc
in
mov
xchg
stos
es
out
inc
dec
pop
jmp
shlb
leave
inc
mov
adc
pop
inc
jmp
mov
fcom
ficomps
add
lcall
push
xchg
xchg
jecxz
mov
mov
aam
add
mov
cltd
sub
add
sbb
cli
les
mov
xchg
mov
leave
aam
ljmp
loopne
mov
imul
popa
mov
push
lock
in
pop
lahf
dec
daa
cld
ficoms
mov
jnp
std
mov
jge
mov
mov
data16
test
fists
mov
int3
add
cmc
add
cltd
add
jmp
add
stc
call
push
pusha
test
int
jae
das
pop
xlat
pop
shl
nop
aad
dec
and
jne
sahf
loope
push
popf
or
xor
inc
rol
in
mov
inc
mov
nop
jecxz
pop
ficompl
andnps
cli
push
inc
jne
mov
mov
or
inc
mov
xor
jns
lret
loop
lods
mov
loop
ds
scas
jle
movsb
mov
jb
mov
or
andb
mov
repz
repnz
ret
cmp
fucomp
out
aaa
pop
sub
cmp
stos
xchg
es
cli
cs
mov
shl
pop
unpckhps
out
scas
lcall
and
cmpsb
push
movsl
push
out
cmpsb
loope
cs
adc
mov
sbb
loopne
lret
xchg
cli
jnp
lea
enter
xchg
rcrb
sbb
inc
aam
scas
or
mov
sti
pushw
fcoml
xor
subb
aaa
jmp
aam
mov
sbb
mov
in
mov
int
lret
xchg
sahf
lds
ficoml
dec
inc
sbb
jbe
cmc
cmp
sarl
leave
int
inc
xor
movsl
jg
in
mov
xor
shrl
in
mov
fadd
aam
cmp
push
push
push
dec
mov
sbb
loopne
inc
mov
imul
icebp
cmp
jbe
mov
mov
insl
xchg
das
sub
ficompl
adc
pop
jo
pop
scas
pop
xchg
add
mov
jmp
les
push
fiaddl
mov
push
pop
sarb
imul
fstpt
jl
decl
pop
add
daa
pop
jnp
inc
mov
inc
dec
add
mov
icebp
jo
leave
inc
sbb
mov
jecxz
jl
and
mov
and
xchg
inc
orb
cmp
adcl
jo
dec
adc
ficompl
lar
xchg
sub
xor
fcoms
mov
dec
outsl
testb
ljmp
js
popf
out
sbbl
mov
or
cwtl
xchg
mov
jno
add
addl
jmp
hlt
and
jmp
push
xor
lods
pop
loope
and
das
mov
aam
pop
add
lahf
sbb
int3
sbb
in
and
sbb
xchg
int3
cmp
cltd
and
cmp
jmp
roll
xchg
test
test
insb
loopne
orl
test
dec
cld
aas
push
mov
test
stos
gs
dec
lea
sbb
shll
pop
adc
pushf
dec
mov
sub
stos
shll
xchg
dec
addr16
push
test
fld
jle
shll
sub
xlat
jae
mov
stos
arpl
loop
fcoms
outsl
icebp
insl
fdivs
leave
and
cltd
test
or
and
iret
dec
pop
pop
loop
in
movsb
lods
add
jmp
insl
mov
pop
bnd
jl
scas
int
insl
sub
push
loope
sub
inc
mov
roll
sbb
adc
das
jecxz
aam
movsl
fnstenv
sarl
jne
cmpsb
stc
xchg
xchg
adc
sbb
les
loope
loop
cwtl
mov
sahf
and
popa
sarl
and
or
jo
adc
add
es
push
loop
test
jb
aam
pop
gs
dec
repnz
sub
pushf
xor
push
cli
and
mov
add
cmpsb
lods
sub
jns
stos
push
mov
mov
pop
rcrl
pop
cmp
clc
insb
jge
mov
xor
push
jo
mov
or
dec
lods
inc
push
or
fldt
pop
mov
push
xchg
int
insb
sarb
dec
jecxz
dec
inc
or
cli
test
pushf
mov
repnz
jae
pop
rorb
xchg
aas
adc
mov
repnz
fcoml
mov
sti
cmpsb
arpl
inc
stc
fldt
push
test
xor
dec
jno
add
test
jb
ja
push
mov
into
lods
das
fcoml
ret
dec
les
add
xchg
movzwl
push
mov
loop
adc
ljmp
out
jb
fs
fidivrl
xchg
and
inc
lea
add
std
testl
les
sub
std
test
iret
sub
ja
push
xchg
push
pop
sbb
jne
cmpsb
loop
dec
lea
xorl
mov
je
cmpsl
out
or
fs
sbb
xlat
mov
loop
pop
mov
mov
pop
mov
cmc
sub
mov
and
adc
scas
bound
aam
xor
mov
mov
movsl
cmp
sub
mov
sub
jmp
lds
stc
mov
fidivrl
addr16
out
pop
add
push
mov
push
mov
dec
es
sbb
or
cmp
int3
jg
adc
stc
xor
and
adcb
out
fsubrs
push
ret
roll
adc
xchg
add
lock
mov
mov
mov
cmp
out
decl
rclb
fistpl
das
jg
jle
sbb
jle
inc
and
movsl
sub
mov
add
das
int
inc
cmp
jle
fs
mov
dec
mov
ret
into
push
call
in
cmp
loop
xor
cmpsb
cltd
mov
pop
pop
mov
sti
fs
xor
push
call
mov
inc
xor
xor
fisubrl
sub
push
mov
cmpxchg
lock
inc
arpl
inc
cwtl
pop
or
dec
jp
inc
popa
xor
xchg
shll
outsl
or
xor
mov
xor
xor
cmp
iret
xlat
sub
add
pop
adc
sub
mov
in
sti
inc
dec
flds
mov
xor
push
inc
adc
aam
jo
test
mov
adcl
ret
mov
xchg
add
int
sbb
cmp
mov
mov
and
cli
mov
sub
lock
cmpsl
or
xchg
xor
ljmp
or
dec
and
and
push
lods
cmp
mov
or
andb
jo
push
dec
xchg
ljmp
add
inc
mov
and
push
dec
cmp
dec
pop
sbb
mov
cli
add
int
fwait
pop
mov
jbe
or
insb
xchg
mov
mov
dec
test
outsb
jns
jns
xchg
ja
fnsave
and
mov
out
lcall
lods
cmp
push
xchg
or
cmc
add
dec
jb
sub
fadd
add
ss
les
pop
add
cmpsl
inc
popf
xor
pandn
or
xchg
cmp
jno
dec
stos
mov
xor
mov
mov
sub
bound
pop
inc
mov
hlt
ret
cmp
stc
test
insl
mov
scas
adc
jbe
or
stos
adc
pushl
mov
mov
lret
cmpsb
loop
ljmp
inc
jl
sub
adcl
sbb
inc
aam
int3
dec
adc
push
mov
mov
and
jge
sub
or
das
int3
ljmp
lret
xchg
jecxz
lods
pop
ret
sahf
inc
push
mov
mov
cli
jp
les
test
pop
mov
xor
push
inc
mov
das
adc
jg
mov
pop
and
pushf
pop
mov
lods
fwait
cmp
mov
push
scas
hlt
decl
jnp
popf
popa
adc
das
xchg
inc
ret
jl
out
and
sub
inc
or
jle
jne
popa
pop
adc
into
mov
mov
out
pop
push
testb
movsb
sub
dec
mov
pushf
lea
scas
pop
xor
jg
pop
leave
adc
mov
sti
mov
pop
xchg
les
push
ds
movsb
sahf
push
sbbb
cmp
pop
add
xor
xchg
lahf
in
dec
dec
into
pop
stc
decl
outsl
push
jno
push
ret
push
xchg
pop
push
mov
popf
data16
xlat
cmp
or
cmp
dec
mov
inc
stc
push
sbb
xor
dec
mov
es
and
xor
sbb
sbb
mov
sti
and
inc
int3
mov
dec
lahf
cs
or
loop
rol
movsl
pop
shll
pop
jl
ficoml
call
add
addr16
and
jmp
ret
mov
popf
dec
sbb
stc
xor
sbb
iret
inc
push
leave
mov
test
mov
movsl
pushf
fmul
fcmovnu
lea
cmp
push
ret
movsl
cwtl
icebp
hlt
gs
insb
cmp
mov
pop
and
dec
adc
cltd
or
pop
dec
jmp
add
icebp
subl
xor
fstpt
xor
cmp
and
mov
nop
mov
jp
mulb
mov
jae
or
mov
jg
bound
loop
sub
mov
push
mov
inc
sub
fdivs
push
ljmp
loop
mov
call
stos
dec
jg
repnz
loop
sti
pop
enter
addr16
inc
and
lret
jb
out
icebp
int
add
pop
dec
enter
je
pop
scas
stc
adc
pop
pop
dec
pop
stos
mov
adc
jmp
shr
pop
push
popf
faddp
push
imul
jg
cmpsl
dec
xchg
inc
or
int3
mov
mov
and
pop
arpl
sub
les
push
popf
aam
push
cmpsb
xlat
xor
insl
push
mov
pop
imul
pusha
stc
out
pop
dec
cmp
sbb
pushf
inc
clc
dec
into
jl
dec
in
out
movsb
xor
xor
push
call
sbb
dec
pop
mov
fs
imul
xchg
inc
fisubl
sbb
test
push
mov
adc
lds
cmp
add
sub
in
push
bound
rclb
xor
hlt
xchg
cld
jmp
push
mov
pusha
inc
xlat
test
cmpb
inc
add
xchg
push
outsb
xor
add
sbb
xor
les
or
cmc
shr
cmp
xchg
pop
mov
xor
cmc
mov
negl
inc
leave
popf
out
and
shll
pushf
cli
lret
fsubr
lea
scas
shrl
dec
cmpsb
ret
lds
insb
adc
cmp
add
dec
scas
xor
mov
gs
mov
pop
xor
push
or
ss
aas
mov
xchg
fildl
mov
roll
out
cmp
fwait
sbb
lds
xchg
xchg
xlat
imul
dec
pushf
pusha
push
ljmp
sub
pop
mov
push
out
test
out
mov
stc
mov
test
aad
pushf
jae
jae
dec
scas
cmpsb
mov
or
mov
inc
jecxz
negb
iret
mov
dec
cmc
stc
xlat
cli
lods
cmc
push
imul
mov
int3
jmp
pop
xchg
rclb
fnstenv
imul
push
insl
adc
shlb
das
sub
xchg
xchg
mov
frstor
mov
lahf
mov
jno
loop
inc
sbb
push
or
mov
fisubl
pop
loopne
pop
mov
dec
fwait
bound
sub
xchg
lea
ret
enter
xchg
pop
fsubrl
cmp
push
cmp
inc
popf
inc
sub
stos
jle
pop
ja
adc
scas
xor
fs
rorl
iret
xchg
dec
add
adc
repz
jp
lret
xchg
sbb
mov
sbb
cmpsl
adc
iret
inc
cs
ret
xor
mov
xchg
fst
dec
pushf
cli
outsb
or
lret
cmp
xor
mov
cmp
and
lret
mov
jbe
pop
mov
xchg
lea
cmpl
xchg
inc
nop
push
outsb
aad
jno
arpl
xor
push
fstpt
inc
stos
lret
insb
xchg
cmp
movsl
ja
popa
xchg
mov
dec
add
into
fsts
scas
sub
fidivrl
mov
mov
fs
or
shrb
pop
jo
inc
pop
cli
dec
adc
add
dec
les
out
xlat
push
pop
pop
cld
rclb
dec
std
add
test
outsl
fcom
nop
pop
dec
int
adc
cmpsl
xor
or
mov
dec
icebp
fistl
xchg
mov
aas
or
xor
push
sti
mov
test
stc
addb
cltd
inc
jbe
sbb
inc
mov
lock
mov
inc
repz
cld
xor
jne
pop
dec
mov
popf
loope
sub
inc
clc
pop
lea
or
fisttpll
fsubl
dec
sub
cmpb
ss
push
jae
out
push
mov
call
stos
cmp
jne
dec
ds
shrb
or
fstpl
xchg
nop
out
iret
pop
dec
test
mov
out
adc
loope
push
std
sub
mov
cmpsl
adc
andl
lahf
sub
lods
mov
clc
data16
cmp
push
lret
push
xlat
frstor
pop
pop
add
xchg
imul
xchg
jno
xorl
inc
push
cmp
or
jl
pop
stos
out
roll
sub
fistpl
out
pusha
push
pop
stos
loop
jecxz
cmp
addr16
ficompl
std
lcall
push
mov
cmp
and
aad
testl
cmpsb
inc
cs
pop
mov
loope
iret
jae
fdivrs
aaa
fdivl
fistpll
and
push
mov
out
push
rorb
xor
pop
jmp
loope
inc
stc
pop
enter
pusha
rol
pushf
loope
rclb
jnp
or
jo
xchg
faddl
aad
adc
mov
push
stos
lock
mov
std
pop
dec
dec
out
je
xor
es
std
xor
push
inc
mov
outsl
push
push
ret
in
sbbb
ds
push
or
jmp
out
inc
dec
call
addr16
jae
jp
stos
nop
lret
movzwl
push
int
push
jbe
push
data16
cpuid
cmp
leave
push
cmp
adc
jge
sarl
dec
pushf
jge
test
jnp
je
divl
inc
sub
sbb
xor
push
lods
jno
dec
or
rcrl
xor
cmc
inc
cld
aam
sbb
and
cld
inc
dec
cmp
pop
pusha
dec
or
aaa
cwtl
in
cltd
gs
sub
push
dec
xor
dec
lods
insl
lret
cmp
add
add
push
and
jle
pop
dec
lods
arpl
inc
adc
pushf
pop
mov
shlb
clc
jno
jno
dec
loop
mov
xchg
fsubrs
mov
or
popa
adc
cmp
shrl
pop
leave
adc
pop
fcompl
sub
xsaveopt
nop
ljmp
sub
xor
mov
lahf
mov
and
xlat
push
movsl
xorb
and
jns
push
sarl
sbb
pusha
mov
jb
push
cmp
dec
xor
push
imul
ret
adc
jl
cwtl
push
out
jns
pushf
jle
mov
mov
dec
adc
mov
cmp
cmp
jp
insl
loop
fadds
lret
std
adc
xchg
pop
cmc
jecxz
pop
out
mov
lods
xlat
xchg
cmp
scas
ret
shll
idivb
cmp
inc
arpl
cmp
adc
push
mov
fs
sub
out
mov
repz
fwait
aam
ljmp
stos
callw
inc
nop
add
mov
shll
and
or
bound
sub
cmp
fidivrs
pop
aas
pusha
sbb
cltd
jb
or
adc
and
push
and
mov
pop
out
ficoms
push
add
test
cmp
fidivs
push
xchg
icebp
movsb
enter
pop
loop
cmp
mov
jge
movsl
repnz
dec
bound
sbb
aad
mov
scas
or
out
adc
cli
add
repz
mov
aaa
loope
jge
testl
fisubs
push
ss
or
mov
je
pusha
sub
sbb
sbb
orb
inc
out
pop
inc
hlt
aas
cmp
xor
lahf
or
push
pushf
xlat
push
cmp
sti
adc
jle
aaa
jnp
ret
mov
fimull
inc
sbb
neg
add
sub
jg
or
js
mov
push
bnd
mov
loop
mov
jg
stos
cmp
sub
mov
dec
xor
leave
fs
lahf
ficoml
pop
and
pop
xchg
jl
mov
fsubl
es
mov
cltd
int
inc
nop
leave
mov
lds
mov
xor
mov
les
sbb
pop
int3
gs
jne
cmp
adc
mov
loope
insb
addl
movl
adc
repnz
aaa
je
push
je
cs
es
sbb
xchg
stos
dec
jns
jmp
pop
fnstsw
icebp
in
loop
mov
call
pop
std
pop
mov
fcmovnbe
adc
int3
mov
adc
mov
add
cmp
adc
cmp
pop
push
pop
movsb
lcall
lahf
insl
test
pop
std
lods
cmc
hlt
and
bound
push
sub
icebp
mov
icebp
push
addl
out
or
xchg
imul
adc
push
clc
jg
mov
sub
sbb
insb
jnp
fs
icebp
popa
xchg
pop
xchg
pop
add
and
push
dec
call
pop
mov
outsl
inc
sub
cwtl
lods
fnstcw
fs
push
gs
mov
add
popa
cltd
iret
xchg
popl
aaa
push
sub
or
pushf
mov
mov
pop
lcall
pop
popa
ljmp
and
fwait
xchg
lods
neg
shl
in
rol
stos
jbe
imul
sbb
push
aaa
lcall
sarb
pop
or
sbb
mov
mov
mov
xchg
gs
lahf
mov
gs
or
cmpsl
js
push
inc
sbb
jb
arpl
sub
lcall
sbb
cmpsl
add
scas
sbb
mov
in
cltd
cmp
xlat
adc
and
mov
jp
cmpsb
sti
test
push
rcll
and
bound
jbe
jle
xchg
add
aam
or
jbe
sbb
test
sahf
mov
in
insb
imull
fisttps
add
cmc
clc
jnp
repnz
xor
or
stc
stos
lea
test
bound
or
xlat
aaa
cmc
mov
daa
sbb
mov
xor
xchg
lahf
call
or
push
pop
les
rorl
in
xor
and
mov
into
out
xor
ja
xchg
cmp
sbb
movsb
xchg
add
out
shl
mov
dec
or
rorb
sbb
jne
mov
divl
mov
cli
mov
or
inc
jg
cmpsl
hlt
daa
dec
jnp
shrl
dec
lods
pop
dec
push
pop
dec
rcrl
or
sbb
add
mov
xchg
mov
xor
stc
sub
cwtl
mov
pop
push
add
sbb
mov
xor
daa
fcmovb
mov
cli
xchg
out
data16
pop
adc
xor
or
sbb
fcoms
sahf
dec
jge
pop
sub
xor
mov
xchg
fmuls
add
jge
cli
push
mov
jg
test
fisttpl
cmp
cmp
sbbb
mov
aad
out
mov
lds
jp
dec
and
scas
push
fwait
xchg
test
ljmp
insb
divb
jae
cmp
xor
pop
xor
cmpsb
or
push
or
inc
cltd
inc
popf
pop
add
inc
jp
push
pop
or
mov
inc
out
test
mov
rclb
jge
push
jo
int3
pop
adc
pop
fwait
shl
push
dec
pop
pop
rcrl
js
dec
add
add
and
pop
in
out
mov
jle
inc
mov
and
and
jecxz
subb
shl
rol
pushf
adc
fcompl
push
cs
xchg
out
cmpsl
sub
mov
and
xchg
jae
insb
bound
ljmp
xchg
mov
orl
mov
mov
negb
call
fdivp
mov
pop
mov
pop
inc
movsb
mov
imul
mov
and
fdivrl
push
loope
rcll
jg
cmp
daa
cmp
mov
xor
dec
je
test
cmp
jae
pop
inc
inc
push
cmc
das
mov
mov
pop
jne
mov
and
xchg
dec
lret
jo
jge
pushf
call
ret
push
pop
pusha
lret
test
lahf
push
clc
dec
or
push
cmpsl
adc
and
dec
xchg
int
cmpl
andl
in
mov
cli
into
lods
daa
mov
cmpsl
jmp
rol
out
popf
or
lock
popa
push
mov
pop
sbb
lcall
out
repz
pop
push
dec
aam
or
movsb
add
mov
clc
lock
cmp
xchg
sbb
rcl
shrb
pop
mov
cltd
imul
int3
pop
push
popf
pushf
outsb
dec
inc
inc
ss
push
lock
out
daa
imul
mov
dec
jle
inc
mov
scas
push
sub
je
and
stos
mov
subb
push
lcall
enter
test
and
loopne
out
and
aaa
dec
scas
xchg
xchg
rcll
inc
push
rorl
aam
cmp
nop
push
test
call
inc
insl
dec
mov
cmp
mov
push
xchg
int3
sub
ds
daa
fstl
aam
cmp
or
pop
icebp
lods
fwait
hlt
and
mov
adc
sub
les
in
outsl
js
clc
in
jg
cmp
in
aad
arpl
pop
sbb
xchg
inc
stos
shl
or
inc
mov
lds
or
and
sub
jg
push
xor
stos
pushl
and
push
inc
mov
bound
mov
mov
pop
lcall
mov
sbb
int3
test
sub
mov
or
ljmp
fldenv
jmp
lods
sahf
lock
push
hlt
push
jle
mov
jb
fisubl
sahf
gs
mov
out
gs
dec
cmp
pop
sbb
nop
repnz
aas
jmp
dec
inc
ss
icebp
add
stos
xor
shll
scas
xchg
inc
inc
out
xchg
adc
push
call
lret
add
stc
sbb
nop
cmpl
mov
cli
add
sbb
adc
sarb
fidivrs
iret
push
cld
outsb
mov
lret
add
call
xor
xchg
ret
add
xchg
dec
popa
loop
add
call
sbbl
gs
popa
add
jmp
mov
insb
dec
sub
mov
pop
scas
xchg
repnz
mov
test
adc
mov
and
cmpb
aam
inc
mov
call
movsl
fcmove
aad
mov
pop
stos
xor
xor
xchg
or
xlat
push
adc
std
mov
xchg
lock
xor
test
lods
les
dec
push
jecxz
pop
int3
gs
pop
test
push
je
lds
adc
cld
ret
out
fadds
mov
inc
enter
decl
inc
or
stc
and
push
adc
push
int3
push
inc
jmp
adc
pop
cwtl
aad
popa
fistl
pop
push
and
in
in
mul
push
xor
addr16
pop
mov
pop
sbb
or
int
pop
fmull
mov
in
jle
cmp
dec
pop
xchg
xchg
out
push
lods
pop
xor
jecxz
xor
and
aaa
pop
test
dec
jecxz
sub
xchg
dec
aaa
sub
in
and
call
loope
inc
push
xor
pop
push
pop
sar
xchg
sbb
and
stos
int
sbb
mov
pop
mov
sahf
xchg
xchg
lret
test
mov
push
jle
sub
dec
add
pop
fcoms
jg
das
in
pushf
jp
outsl
mov
setge
pop
adc
mov
scas
or
fsts
xor
lock
mov
scas
push
jo
jmp
xchg
xchg
dec
or
addr16
cmp
xor
lds
inc
test
mov
fs
xchg
jl
and
jge
imul
js
sbb
pop
pop
mov
cld
dec
lods
sti
pop
loop
icebp
push
mov
jno
mov
inc
and
inc
hlt
test
sbb
enter
xchg
jnp
adc
loop
ret
decl
out
jmp
pop
mov
xor
imul
outsb
and
movsb
sub
mov
out
push
jl
push
sub
xchg
and
jnp
sbb
inc
mov
lock
je
cmp
movb
xor
dec
rol
mov
mov
dec
lods
push
decl
pop
mov
call
mov
movsb
test
lock
outsl
es
test
and
jmp
fildl
lods
push
test
int3
repz
mov
aam
inc
xchg
adc
adc
lret
lea
mov
fdivl
jg
test
mov
aam
arpl
add
imul
test
mov
subl
jle
sub
mov
xchg
repz
ss
iret
scas
pop
in
orb
out
test
sub
int3
add
mov
sub
xchg
adc
inc
adc
mov
test
mov
adc
xor
leave
loopne
xor
andl
fcmovnbe
xor
cld
popa
add
add
sti
dec
ret
das
idivb
sti
outsb
fneni(8087
sub
cmp
or
repnz
inc
sbb
insb
mov
fwait
rcll
insb
aam
jo
cmp
adcb
push
or
iret
push
fiaddl
jb
leave
hlt
xor
fnstsw
pop
leave
int3
jnp
sub
or
mov
xchg
jl
dec
fstl
push
mov
test
imul
pop
insb
sbb
or
leave
mov
jg
dec
xor
fistpl
xchg
out
pop
lret
in
mov
sbb
mov
push
inc
xor
movl
xchg
add
sbb
add
repz
ja
test
incl
fistl
mov
scas
lods
int3
adc
stc
jo
adc
jle
mov
popa
aad
ja
adc
hlt
pop
pop
stos
es
xlat
pop
divl
mov
xor
outsl
in
cmp
jle
lds
fwait
insb
adc
jg
sbb
gs
cmp
lcall
nop
xor
aad
jge
pop
sbb
mov
sub
pop
push
mov
mov
inc
lds
pop
fxch
movsl
aam
std
jp
leave
mov
loopne
imul
aam
jns
ja
fistpll
push
add
xchg
imul
outsl
test
test
or
cmpsb
adc
daa
push
dec
mov
pusha
shlb
mov
jmp
inc
jne
mov
lods
pop
loopne
and
fisubs
add
fcom
adc
mov
je
insb
cmpsl
jg
callw
mov
movsl
les
clts
pop
push
fldt
test
mov
test
push
dec
inc
test
push
sub
outsb
xchg
jle
fnstcw
sub
adc
mov
cmp
out
inc
mov
inc
jecxz
and
pop
stos
mov
adc
xorb
mov
mov
scas
negl
repz
push
push
sbb
push
jmp
cwtl
enter
test
lahf
cmpsb
test
xor
xor
jb
outsl
mov
in
insb
sbb
dec
popf
sbb
das
or
mov
stos
fbld
cmp
adc
inc
jl
cltd
sbb
mov
mov
jbe
ljmp
popa
addr16
cmp
adc
push
idivl
sub
xchg
shlb
mov
cmp
cmc
add
test
fildll
inc
lret
lods
adc
clc
mov
es
adc
out
push
es
popfw
dec
iret
daa
daa
xchg
jns
cld
stc
pop
cltd
add
and
loope
popl
sbb
jbe
scas
xor
sbbl
movsl
into
jo
loopne
les
dec
pop
js
loopne
xchg
mov
repnz
dec
xor
stc
and
fadds
out
dec
sbbb
mov
ds
pop
flds
inc
mov
or
push
enter
mov
cld
jo
cmp
test
cmp
aam
cmp
arpl
cs
push
popf
and
and
mov
das
idivl
mov
pop
mov
loopne
or
or
mov
test
popa
add
sub
jnp
adc
push
sub
mov
adc
jns
adc
dec
push
push
pop
jnp
adc
push
dec
in
aas
mov
inc
in
out
push
mov
fistl
sti
stos
lea
imul
sbb
mov
repnz
mov
aaa
mov
fs
in
jecxz
mov
mov
push
into
pop
xchg
pop
jae
mov
jge
insl
lock
inc
push
jo
mov
mov
call
pop
xor
inc
bound
in
inc
out
mov
mov
mov
mov
or
xor
sub
push
inc
and
loop
inc
push
loope
push
xchg
mov
mov
push
arpl
sbb
mov
and
or
add
sbb
out
mov
mov
jno
add
icebp
ljmp
scas
jbe
mov
inc
lea
xchg
pop
in
mov
xchg
call
aas
xor
fisubrs
and
pop
pop
mov
add
xor
in
insl
and
jle
and
loopne
imul
sbb
and
xor
lock
cmpsl
inc
xor
inc
adc
pop
sti
jb
inc
mov
mov
sub
aas
mov
cmp
or
push
mov
xchg
jp
push
sub
call
jg
loope
mov
cld
ja
dec
and
jp
add
aad
mov
outsl
out
xchg
or
and
sbb
test
mov
cmp
mov
pop
mov
fdivrs
push
jl
sbb
inc
test
push
sub
mov
mov
mov
jb
add
mov
add
sbb
call
mov
and
popa
jbe
jb
add
push
push
push
shrb
lret
sub
scas
mov
pop
cmpsb
rcrb
movsl
fidivrs
frndint
stc
mov
stos
inc
pushf
fmuls
mov
pop
or
mov
sti
pop
ljmp
ja
and
adc
mov
xchg
sbb
iret
pop
mov
faddl
or
and
adc
cmp
pop
addr16
popf
mov
roll
jnp
mov
fsubrs
add
dec
ret
adc
push
sub
mov
aas
bound
sarl
cmp
xor
pop
add
jae
xchg
cli
stos
lods
or
sbb
cld
out
push
push
sahf
loopne
fbld
push
cs
and
imul
sbb
int
pusha
dec
dec
data16
cmp
popl
jg
mov
mov
sub
loop
mov
xchg
test
movsb
and
mov
push
inc
imul
jle
adc
mov
rorb
or
loope
outsl
adc
jbe
xlat
sbb
or
int
cmp
jae
int3
or
in
inc
cmpsb
mov
imul
movsb
mov
xchg
xchg
xchg
daa
push
pop
push
and
add
add
fimuls
mov
pop
jne
lea
sub
mov
out
es
icebp
sbb
js
aaa
inc
inc
push
pushf
push
push
int3
cs
push
adc
xor
inc
push
and
xchg
fisubrs
hlt
xor
repnz
jp
push
stos
les
xorb
sub
dec
cs
push
stos
dec
sbb
pushf
pop
aad
or
lahf
iret
sbb
xor
mov
adc
sbb
cltd
mov
in
adc
pop
shll
mov
pop
inc
in
cmp
xor
jl
js
xlat
inc
pop
sbb
and
inc
xor
out
int3
inc
ljmp
out
lret
xlat
mov
cmp
xchg
cmpsb
xchg
movsb
addl
xor
gs
iret
aad
dec
cmp
push
mov
adc
int3
inc
mov
push
outsl
std
mov
in
cmp
cltd
and
test
push
mov
mov
call
xchg
adc
or
sbb
mov
pushf
aam
lcall
out
les
iret
orb
iret
lret
dec
xchg
add
push
push
xchg
mov
test
sbb
ss
hlt
add
testb
mov
arpl
push
imul
lret
or
mov
aam
and
or
adc
fisttpll
push
push
dec
add
test
loop
jle
fucomp
data16
push
cld
and
sbb
ficompl
ljmp
push
js
cmc
sbb
dec
sub
jle
in
xlat
pop
js
cltd
std
setne
fcomps
mov
mov
movsl
sbb
test
fimuls
lret
je
icebp
ja
cmpb
push
imul
mov
jno
pop
push
iret
jle
pop
pop
mov
lock
test
sarl
ss
test
adc
adc
in
inc
jnp
push
jns
repnz
repz
adc
adcl
or
pop
mov
inc
mov
sbb
jmp
jp
shl
pop
cmp
jp
outsl
mov
dec
cmp
aad
mov
aaa
pop
mov
movsl
lret
sbb
fmulp
fld1
fdivrs
push
dec
call
movsb
lcall
int3
pop
jl
push
ss
lcall
jle
pop
mov
mov
mov
jge,pt
loope
and
clc
push
popa
hlt
fimull
inc
mov
dec
sbb
dec
daa
mov
push
lods
js
insl
pop
fwait
inc
pop
push
mov
dec
jns
dec
jg
mov
lahf
add
mov
movsb
push
fisttpl
pop
jae
dec
and
aaa
sub
in
inc
insl
pop
pop
aad
xchg
cltd
mov
fdivs
inc
mov
hlt
pop
pop
add
loopne
testb
shll
push
jo
ficoml
repnz
ds
mov
repz
packssdw
pop
fdivrl
pop
test
pop
mov
sub
popa
clc
loopne
mov
pop
jg
lock
xchg
out
pop
sbb
mov
fldcw
imul
iret
adc
jge
pop
cmpsb
mov
imul
xor
push
jae
icebp
mov
pushf
mov
out
and
iret
out
push
test
data16
adc
mov
stos
pop
jbe
mov
lea
adcb
cmp
mov
inc
out
sarl
xor
xchg
or
xor
inc
mov
aam
dec
add
mov
mov
mov
cmp
lret
sub
jmp
xor
add
mov
dec
xor
inc
loopne
add
xchg
test
aas
jp
cmp
push
fst
sbb
mov
aam
push
ror
push
dec
clc
mov
jo
enter
stos
xlat
inc
repz
out
sub
lret
aam
xchg
push
punpcklbw
push
outsb
inc
test
hlt
call
cltd
dec
testl
in
ss
or
cmp
sub
int
mov
push
pop
hlt
sti
rcl
dec
lds
fbstp
lahf
int
fdivrl
mov
push
mov
test
mov
scas
scas
repz
out
repz
repz
jo
repz
imul
mov
cltd
mov
sbb
pop
loopne
scas
scas
inc
andb
dec
xlat
pop
cmp
movsb
mov
xchg
aam
xor
sub
push
cmpsb
popa
cmpsb
js
and
aad
fsub
and
jmp
sub
iret
sbb
or
cmpsl
out
int3
jmp
add
out
rorl
fldenv
call
inc
pop
inc
adc
mov
mov
xchg
outsb
out
lock
iret
fs
cmc
mov
mov
fmulp
xchg
mov
and
xlat
in
cmp
not
push
inc
mov
add
rcll
std
aas
lcall
cmp
stos
scas
int
xchg
jl
pusha
mov
out
mov
out
push
pushf
fwait
adc
xchg
mov
arpl
cmp
mov
dec
test
push
mov
cmp
jne
sub
in
add
shlb
mov
jmp
xchg
xchg
popf
add
pop
lock
pop
cmc
insb
sub
lock
mov
negl
std
push
sbb
adc
adc
mov
push
arpl
test
xchg
xlat
fstps
rol
lods
jo
push
sar
cwtl
dec
daa
dec
test
jbe
test
mov
sahf
add
ret
je
xor
xlat
int
xchg
fldcw
and
cmp
fcoms
dec
xchg
pop
jne
repz
cmc
test
or
jg
in
pop
jno
inc
adc
into
cli
cmp
div
sbb
shll
out
mov
xlat
adc
or
fcmovnbe
ss
fndisi(8087
mov
clc
pop
cwtl
repnz
addr16
mov
iret
jns
pop
adc
xchg
xchg
mov
vmovaps
add
add
out
fistl
sbb
cmp
dec
push
adc
mov
xchg
mov
inc
xchg
mov
ret
mov
flds
or
push
cmp
mov
adc
add
inc
jnp
xor
xor
xor
adc
into
pop
pop
xor
je
or
add
scas
mov
ret
mov
test
ret
stos
leave
movsb
dec
outsb
mov
mov
xlat
jge
xlat
push
imul
int
dec
jmp
fbld
or
daa
ja
andb
cmpsb
cmp
roll
hlt
das
lds
add
add
out
mov
push
xchg
jbe
add
inc
outsb
mov
dec
xchg
movsl
xor
ja
scas
lcall
sbbb
adc
fisttpll
cmc
outsl
and
dec
push
test
popw
rcll
pop
ja
mov
and
in
push
pop
shrb
lret
mov
aad
mov
cmpsb
je
imul
inc
lea
cmp
stos
adc
nop
sbb
fsubs
or
sub
loope
inc
lds
push
and
hlt
imul
cmc
shrl
cmp
aam
jne
sbb
xchg
sub
in
insb
stos
jg
shl
shlb
dec
and
and
inc
or
inc
pop
or
xor
mov
int3
add
mov
mov
rcrb
daa
adc
adc
pop
orps
aaa
add
inc
mov
sub
imulb
addr16
repz
pop
pushf
mov
insb
or
sub
or
test
push
push
push
or
sbb
jbe
cmp
lock
add
add
pop
int
sarb
jmp
mov
das
dec
xchg
jb
js
icebp
add
faddl
adc
daa
or
jmp
cmp
pop
push
dec
add
pop
pop
scas
inc
outsb
mov
icebp
hlt
inc
bound
jo
and
mov
lea
aas
jmp
push
jl
aas
push
sbbl
jecxz
push
pop
sub
push
xchg
rcrb
jb
cmp
ljmp
leave
mov
inc
mov
fwait
hlt
xor
add
addl
inc
mov
ja
scas
and
mov
mov
outsb
push
dec
xor
xcrypt-ofb
cmpsl
insb
add
daa
xor
scas
std
xchg
fucomip
push
imul
and
jbe
mov
pop
popa
cs
in
sbb
lcall
mov
xlat
xchg
mov
pop
nop
add
movsb
in
dec
xor
inc
mov
mov
xchg
mov
sub
jne
adc
popa
cmp
add
cmp
scas
test
fstps
mov
xchg
int
pop
sub
jg
sbb
mov
jp
loope
mov
push
xchg
mov
les
das
mov
arpl
inc
cmpsb
bound
push
push
inc
inc
divl
push
cmpsb
pop
mov
faddp
mov
in
sbb
lock
xor
call
xchg
add
xchg
pop
in
or
bound
or
imul
fs
iret
inc
inc
jg
jp
dec
outsl
sub
int3
mov
cmp
dec
stos
xchg
ja
movsl
das
sub
mov
frstor
fiaddl
dec
mov
jp
inc
mov
jne
out
sbb
mov
aaa
xchg
mov
jnp
fcoml
dec
idivb
or
mov
xor
test
adc
push
icebp
inc
pop
jecxz
ljmp
adc
or
adc
test
loopew
mov
inc
mov
cmp
push
mov
lds
int3
filds
dec
sub
sahf
movsl
add
es
jbe
push
or
aad
lods
mov
add
adc
sub
cmp
pushf
sbb
add
and
rorb
add
sbb
adc
clc
jnp
icebp
cld
xor
mov
aaa
in
lcall
sub
mov
cmpsl
cmpsl
out
imul
test
cmp
add
pop
jge
jl,pt
hlt
mov
cmpsl
xchg
or
aad
ja
fdivrl
or
popf
fnstsw
xor
int3
jecxz
insb
jne
cmp
push
or
insb
out
outsb
scas
test
sbb
xor
fwait
ss
push
dec
inc
insl
aas
imul
je
mov
xlat
adc
sub
pushf
xchg
lcall
sub
or
jge
jge
cmp
aam
negl
sbb
xor
pop
jns
sub
cmc
test
xor
orl
or
fisttpll
or
addl
repz
test
int3
pop
jbe
push
inc
xor
sbb
ds
test
xor
adc
mov
shl
pop
lahf
lret
inc
push
lods
imulb
cli
outsl
mov
and
jmp
adc
jl
pop
mov
xchg
mov
sbb
fucomi
pop
pop
jge
fs
push
stos
adc
push
lods
movsb
mov
dec
js
mov
clc
jmp
in
pop
mov
jae
cmp
es
jl
rclb
mov
push
aad
les
xchg
clc
popa
sub
pop
adc
dec
stos
repnz
sbb
fiaddl
out
test
or
orl
mov
and
fimull
jns
push
or
sub
xor
cmp
clc
clc
rcll
pop
jecxz
cmpl
cli
sahf
push
mov
or
test
fdivrl
in
iret
mov
dec
mov
rcr
sub
dec
icebp
push
jbe
xor
mov
test
mov
cmpsb
imul
add
icebp
and
pop
or
fimuls
jbe
nop
outsl
fs
imul
push
xchg
int
out
mov
insb
or
adc
hlt
stc
jbe
add
jg
out
ljmp
test
in
jp
cs
push
mov
lret
inc
fistps
xchg
xchg
daa
jmp
xchg
stc
bound
ss
push
jns
xchg
adc
sti
in
mov
stos
das
and
insl
js
lea
or
daa
pop
sbb
fldt
push
pop
or
insl
repz
mov
bound
pop
and
xor
rcll
iret
xchg
add
mov
seto
clc
sub
cmovbe
cmp
arpl
inc
dec
xchg
faddl
adc
clc
lods
gs
ret
sub
ljmp
and
sub
out
push
xor
mov
shll
xlat
xor
mov
add
dec
add
pop
jp
cmp
imul
mov
mov
arpl
sub
test
dec
imul
ret
dec
jl
fldz
fmul
ret
popa
test
fnstcw
push
mov
or
mov
dec
out
insb
mov
shlb
out
inc
ret
mov
mov
incl
stos
add
xor
mov
mov
mov
decb
jg
xor
jmp
aad
std
js
adc
push
xlat
add
lds
fadd
cmpsl
daa
cmc
movsl
std
scas
out
sarl
xchg
xchg
and
mov
dec
movsb
les
scas
mov
mov
idiv
imul
mov
daa
lock
testl
inc
pop
arpl
sbb
cmp
push
sbbb
insl
gs
frstor
mov
pop
add
push
popl
mov
inc
rorb
pop
or
lahf
lea
pop
decl
in
hlt
sub
jnp
sbb
arpl
jp
jg
mov
adc
loopne
fstl
jl
jb
sub
sbb
stos
into
outsl
pop
mov
jl
and
fistpll
dec
dec
neg
pop
repz
out
cmp
sbb
outsl
jp
ss
hlt
mov
hlt
or
and
sub
mov
iret
je
add
jmp
pop
mov
sub
movl
cmp
jb
adc
sbb
and
jmp
pop
out
iret
insb
inc
pop
jae
shlb
jo
pop
out
lods
dec
xchg
fstl
or
lcall
push
test
mov
sbb
sbb
and
jae
in
mov
mov
call
test
push
push
in
or
and
jl
inc
ret
push
dec
pusha
jp
add
in
jmp
or
adc
push
lods
xchg
scas
pop
add
fisubl
sub
mulb
das
push
ja
xlat
lcall
cmpsl
cmpsb
xor
iret
int
xchg
jp
lret
rcll
inc
clc
imul
call
cmp
push
stos
not
das
add
gs
pusha
cmpsb
sbb
repz
iret
dec
and
mov
or
inc
inc
mov
add
cmp
pop
add
int3
push
idiv
mov
adc
and
pop
inc
arpl
pop
push
sbb
imul
add
mov
and
std
movsb
out
cmp
and
xor
adc
mov
inc
cmpsl
lods
add
push
mov
faddl
pop
mov
sub
xchg
jnp
testl
mov
outsb
inc
scas
sahf
jge
and
popf
dec
test
insl
xor
inc
or
adc
aam
jnp
in
xchg
ja
xor
std
mov
jg
fs
mov
nop
cmp
leave
ljmp
dec
imul
push
xchg
pop
les
imul
fwait
pop
movsb
fnstcw
movsb
call
inc
std
sub
xor
mov
jno
xor
inc
dec
push
fsubl
mov
es
loopne
dec
mov
daa
mov
jnp
mov
inc
lock
adc
cmpsb
gs
dec
out
push
pusha
jmp
mov
inc
pop
sub
xrelease
pop
inc
dec
enter
sub
xor
or
stos
jb
notb
mov
and
cmp
sbb
aad
jp
jo
push
mov
adc
fisubrl
mov
mov
stc
jle
adcl
loope
push
int3
test
or
pop
flds
cli
movl
mov
pushl
jmp
out
dec
ss
sub
mov
mull
fsubrs
xchg
jb
gs
cmpsb
lahf
movsb
mov
movsl
iret
pop
push
lret
pop
fstps
jnp
stc
aas
mov
repz
jb
jnp
xorb
mov
dec
xor
aaa
mov
aam
repnz
int
mov
test
cmp
js
lods
dec
pushf
clc
xchg
jno
fsts
add
mov
and
int
lds
sub
mov
mov
pop
push
aaa
inc
lcall
or
mov
pop
scas
pop
popf
adc
jnp
jno
adc
data16
pop
andb
pop
cmpsb
aad
movsl
and
jge
inc
or
popa
int3
push
popa
test
push
fidivl
jp
xorb
loop,pn
cmp
pop
push
sub
jmp
add
in
sbb
test
out
sbb
lods
jp
sbb
ja
imul
and
pop
loopne
push
push
jb
loopne
lret
pusha
push
lahf
clc
mov
dec
sub
sbb
cmp
adcl
aaa
jb
adc
adc
lret
push
fdivr
mov
push
outsl
icebp
loop
jmp
cmpsl
sbb
lret
cmp
and
jmp
mov
sbb
jb
jecxz
cmp
fadds
stos
ja
repz
pop
fildll
push
test
jb
cli
xchg
negb
sub
adc
arpl
and
ljmp
mov
rol
mov
push
movsl
mov
xor
incb
or
jg
cmp
push
push
sub
popa
popa
inc
dec
stos
mov
int
sar
arpl
push
loop
jb
lcall
xchg
bound
add
movsb
xor
insb
cltd
pop
fcmove
push
mov
js
out
dec
adc
mov
mov
sar
pop
test
sti
mov
cmpb
and
cs
mov
xchg
or
lods
mov
dec
adc
data16
jl
inc
sbb
in
pusha
xchg
push
aad
pop
or
test
fnsave
lcall
jns
mov
lret
out
lcall
outsb
lahf
je
incb
clc
jmp
lods
mov
scas
push
jle
jge
xor
in
cmp
pop
rol
or
out
scas
xor
rcr
mov
cmp
push
dec
fstpl
push
jno
sub
fwait
decb
jne
inc
stos
jo
sub
pushf
xchg
jne
ret
fucomip
and
int
add
jl
sub
inc
cmp
cltd
mov
shl
pop
xor
jae
js
inc
push
movb
in
jne
mov
and
sbb
jle
and
and
mov
xor
add
jno
and
push
pop
lcall
cmpsl
sbb
iret
lods
sub
icebp
mov
adc
lods
pop
add
dec
sti
ds
and
ljmp
es
inc
jmp
and
repnz
mov
into
add
dec
aaa
mov
bound
ret
sti
data16
loope
cmp
aas
mov
jp
sub
xchg
mov
add
movsb
sub
push
pushf
mov
sbb
xchg
int3
dec
enter
out
rolb
arpl
sub
add
xor
call
dec
mov
aam
fsincos
pop
int3
aas
les
mov
lahf
mov
dec
rclb
fs
mov
sub
ret
and
lea
ret
es
pop
cmp
in
fldenv
push
lahf
and
lods
jae
jns
and
movsl
sahf
or
loopne
les
jmp
jge
jmp
xor
and
sbbl
pusha
mov
out
push
repnz
pop
xchg
push
popf
dec
xor
es
push
xor
and
xor
push
fs
fildll
add
lock
div
and
push
add
jge
mov
hlt
sti
out
sub
sub
out
mov
in
mov
add
sub
popf
sar
subl
pop
mov
mov
sahf
xor
lea
mov
sub
cmp
inc
incl
jb
xcrypt-cfb
cmpsl
cmpsb
in
pop
jnp
xchg
pop
imul
or
dec
es
loope
dec
enter
outsl
ficoml
mov
push
or
popf
mov
cmpl
and
mov
je
lds
gs
scas
jg
ja
ss
les
dec
out
jmp
push
lock
mov
mov
adc
push
call
out
int
outsl
js
jbe
sub
cmpsb
sub
mov
sub
mov
jge
repz
in
add
xor
mov
mov
popf
inc
ret
pop
sub
sbb
cmpsl
lcall
jae
sub
stos
mov
mov
sbb
aaa
scas
jle
dec
ficoml
popf
das
cltd
and
and
insl
add
loope
std
cmpsl
clc
mov
shlb
je
scas
push
dec
mov
xchg
sub
insl
sub
xlat
pop
clc
outsl
negb
outsb
pop
nop
push
out
gs
jbe
ss
aam
idiv
scas
cmp
gs
ret
adc
sbb
fsub
push
xor
dec
enter
fisttps
xor
adc
lock
outsb
mov
cmp
sbb
mov
xor
das
mov
iret
rcll
movsb
or
mov
lcall
mov
pop
js
cmpsb
xchg
dec
aad
das
stos
jle
outsl
dec
xlat
xor
sbb
jecxz
ret
mov
repnz
aaa
movsl
call
loop
imul
lds
pop
sub
and
sub
in
dec
movsl
mov
xchg
mov
and
mov
fs
push
add
push
int3
in
mov
outsb
insl
test
decb
adc
push
stc
jg
mov
cmp
adc
mov
jge
mov
dec
scas
inc
pop
outsl
dec
xchg
jmp
cli
pusha
gs
add
imul
push
mov
call
sub
lods
mov
xchg
jnp
cld
out
ljmp
pop
cld
and
fdiv
push
mov
pop
pop
mov
mov
test
hlt
pop
push
imul
lds
mov
pop
push
or
sbb
mov
and
js
roll
cs
adc
push
idivb
add
std
add
jg
inc
jno
outsb
jb
shr
loopne
dec
out
sbb
cwtl
gs
subl
jbe
orl
testl
jmp
loope
sbb
jns
adc
imul
insl
notb
xchg
shl
out
sarl
aas
fwait
mov
push
popf
dec
and
adc
adc
stos
outsb
sbb
test
les
and
fimuls
pop
xor
sub
stos
add
scas
xchg
cmp
and
hlt
adc
arpl
dec
sbb
repz
cmc
pop
aaa
mov
or
xor
xchg
loopne
movsb
sub
sub
lcall
push
repnz
test
lcall
es
pushl
sbb
push
push
das
sub
jecxz
mov
pop
push
fcmovne
pop
inc
ficompl
sti
jge
cwtl
sub
sbb
scas
icebp
lods
hlt
and
inc
xchg
loop
inc
cli
outsl
mov
shlb
aas
aad
dec
xor
es
cmp
sbb
fldcw
lods
xor
and
fwait
aas
lods
sbb
and
ja
sbb
jns
pop
cmc
cld
enter
popl
push
ss
stos
sub
push
sub
jnp
mov
lock
push
popa
mov
insl
les
xor
cli
fs
adc
jo
into
sub
pop
or
mov
mov
sahf
pop
cmp
push
xchg
sbb
hlt
dec
xchg
shrb
adc
sbb
mov
and
mov
mov
jb
sub
bound
xor
inc
out
test
enter
negb
cs
dec
jo
lcall
mov
cmp
jbe
sahf
mov
hlt
dec
pop
int
call
jno
or
sub
sub
mov
icebp
or
icebp
cmp
adc
mov
cmp
sub
adcb
pop
popa
or
es
cs
mov
fwait
and
inc
sub
imul
push
subb
arpl
popa
lods
xchg
sub
mov
hlt
jecxz
dec
adc
or
xchg
sbbb
imul
or
xchg
jne
pop
pop
push
sbb
sub
fiaddl
mov
fstpl
mov
push
dec
mov
pop
dec
lcall
mov
fiaddl
mov
popf
hlt
sub
ret
mov
xlat
adc
jmp
or
mov
mov
out
in
fcoml
mul
les
dec
fs
test
cltd
jo
js
mov
clc
cmp
jg
gs
adc
push
cmp
in
xor
xchg
push
or
cmp
nop
pop
dec
sub
xchg
loop
scas
ds
mov
mov
out
jl
stc
sahf
les
xor
sbb
in
inc
mov
cld
inc
outsb
sbb
xchg
inc
mov
lcall
int3
scas
adc
cmp
xor
push
adc
data16
inc
and
inc
mov
cmp
inc
leave
in
push
pop
out
sbb
jmp
adc
fwait
sbb
add
loopne
arpl
mov
xchg
xor
fs
in
and
pop
aam
sti
sub
lods
adc
push
cmpsl
jae
push
xor
mov
sbb
fmulp
in
jns
ss
and
push
jge
shl
int3
fsubl
in
mov
jae
popa
loope
sbb
xchg
sub
mov
sbb
out
sarb
dec
mov
les
pop
adc
pop
inc
adc
cld
js
inc
je
sub
aas
jb
mov
sub
cmc
dec
sub
fwait
sbb
aaa
icebp
xor
andb
xor
int3
mov
inc
push
cltd
jge
scas
fs
fdivl
out
insl
pop
jl
int3
das
or
jbe
and
out
adc
in
inc
arpl
sub
scas
aas
lods
test
insb
dec
movsl
ja
add
cmpsl
or
inc
sbbb
divl
scas
push
jne
int3
mov
sub
dec
shll
inc
aam
test
and
iret
push
push
test
test
jmp
mov
loop
repnz
xchg
mov
mov
cmp
test
dec
int3
stos
sbb
fdivp
mov
je
int3
test
pop
das
repz
pop
ret
repnz
clc
cmpsl
push
jns
xchg
in
cmp
mov
leave
push
ljmp
push
push
cmp
lcall
adc
pop
pop
cmp
flds
inc
adc
lock
lods
cwtl
rclb
mov
sahf
push
or
clc
pop
jae
stc
cltd
cwtl
dec
xchg
iret
cmpsl
negl
out
and
mov
ret
sub
cmp
nop
xor
cmp
test
sub
push
sbb
mov
inc
xlat
xchg
arpl
dec
out
inc
jbe
bound
or
add
jne
stos
or
outsb
fwait
imul
ret
fistpl
mov
or
mov
sbb
xchg
jbe
aam
sbb
dec
pop
jp
pushf
cmp
imul
lds
popl
insl
xchg
cli
movl
adc
in
xchg
or
stc
scas
pusha
out
inc
ds
mov
sbb
les
aad
dec
idivl
aam
jnp
in
push
faddl
cmp
in
les
sub
jno
into
je
out
push
int
inc
xor
dec
bound
add
pusha
loop
ret
inc
dec
inc
pop
cmp
fbstp
push
scas
sbb
adc
mov
mov
sbb
xchg
jle
in
lea
pop
out
inc
mov
lret
mov
inc
adc
mov
add
shrb
jno
imul
sbb
or
cmp
inc
inc
xor
adc
adc
jg
sbb
dec
sub
cmpsl
sbb
push
sub
aaa
leave
test
sbb
xchg
int
gs
jmp
jbe
jo
jno
js
pushl
sub
mov
fldenv
pop
cmp
jp
gs
mov
jle
ror
mov
pop
icebp
scas
pop
jno
adc
mov
and
test
int3
loope
dec
sbb
test
xchg
sub
dec
inc
mov
jno
ja
mov
push
mov
cmp
test
sbb
mov
sub
push
xor
in
out
decb
shrb
loope
jnp
das
testl
ja
in
movsb
stc
xlat
xchg
jae
call
fs
fs
sbb
ja
rcl
pop
push
dec
dec
cli
lret
stos
xchg
dec
rcr
and
in
in
xor
inc
jecxz
mov
enter
mov
dec
repnz
shl
test
ljmp
cmpsl
loope
xchg
es
call
enter
cltd
mov
sbb
sbb
imul
repnz
push
jns
mov
dec
or
std
dec
or
xor
inc
dec
lods
lods
ja
cmp
insl
mov
fwait
inc
mov
xchg
mov
xchg
mov
js
mov
adc
push
inc
push
loope
jle
mov
lods
fsubs
and
in
cmpb
jo
xchg
push
mov
cmp
inc
or
dec
jp
fisttpl
lcall
or
fistpl
mov
dec
shl
jmp
repz
xchg
jle
adc
mov
mov
sub
sub
ss
shr
dec
inc
outsl
xchg
aaa
jo
mov
push
pop
ret
sbbl
xchg
mov
cltd
cmpsl
sub
sub
sbb
sahf
pop
push
dec
mov
add
add
jne
fs
dec
mov
xchg
std
jg
sahf
jg
bound
pop
or
push
lea
aas
mov
lcall
jmp
fwait
repnz
scas
fadd
mov
loop
jmp
leave
test
mov
aas
cmp
cs
ret
test
xchg
loopne
mov
addb
dec
lret
sbb
xor
dec
mov
xor
cmpsb
sub
iret
cmp
xchg
adc
in
adc
or
das
jp
mov
mov
ss
rorl
sub
es
arpl
cmp
xchg
xorb
jge
mov
jmp
sbb
pushf
jno
mov
es
inc
scas
add
pop
pop
cmpl
fld
xor
push
sti
std
mov
out
sub
test
fdivrp
test
cld
or
pop
mov
pushf
jne
or
cmc
xchg
add
bnd
icebp
mov
dec
and
add
xchg
xchg
adc
lods
jge
popf
xchg
mov
bound
mov
jmp
ud2
out
sub
mov
pop
add
mov
inc
in
jp
dec
sbb
ss
mov
lea
movsl
out
push
mov
xor
mov
mov
and
pop
add
sbb
dec
mov
cmp
pop
arpl
inc
xchg
mov
pop
fidivs
es
adc
clc
enter
mov
je
and
dec
and
jns
shll
sub
xor
not
insl
mov
loope
xchg
jmp
push
xor
cmp
enter
lods
repnz
mov
enter
fbld
loop
mov
mov
jge
mov
mov
das
lock
lahf
mov
cmpb
and
pop
repz
enter
jmp
or
leave
movsb
cmp
into
and
iret
aaa
and
cltd
loope
jp
lret
push
std
pushf
mov
stos
je
int
jo
mov
rorb
and
sbb
nop
mov
dec
push
and
add
movsb
mov
sub
aad
scas
and
pop
ret
int
add
inc
lock
and
sti
sbb
xchg
pop
jb
add
out
or
xor
idivb
iret
push
aas
sbb
lcall
decl
push
scas
xchg
jp
decl
dec
mov
fwait
mov
iret
xchg
les
sbbl
xlat
dec
popf
lock
push
mov
jbe
cmp
add
mov
pop
xchg
fs
idivl
shlb
loope
xchg
inc
call
js,pt
xor
enter
std
ja
push
loope
ret
mov
add
pop
dec
adc
shll
aas
xor
jp
enter
adc
lcall
adc
pop
cmp
mov
in
sub
mov
pop
push
aad
mov
loop
xchg
dec
sbb
sub
pop
inc
and
cmp
inc
sub
pop
adc
push
or
sbb
fwait
jne
sahf
mov
sbb
test
outsl
xor
pop
movsl
shr
icebp
bt
popa
int3
or
js
jne
adc
jo
rcrb
adc
mov
push
mov
jae
jns
dec
xchg
cmpsl
fcomi
sbb
sbbb
or
scas
orl
fcmovu
aad
xor
enter
mov
push
pop
scas
test
mov
pop
and
cli
into
mov
push
pop
jo
test
into
xchg
inc
in
push
lds
cmp
jnp
in
inc
xor
movb
push
in
in
or
gs
or
xchg
filds
fwait
addr16
pop
jge
push
and
repz
imul
adc
fldenv
sub
inc
call
addr16
mov
stos
ss
mov
add
add
push
repnz
or
push
and
and
adc
pop
push
adc
insb
push
lock
movsl
lcall
fwait
cmp
dec
lahf
nop
aaa
aas
mov
and
or
inc
mov
decl
call
inc
pop
adc
loopne
pop
sbb
mov
push
xor
dec
out
pop
stos
jb
repz
iret
mov
mov
xchg
cmp
scas
js
leave
inc
add
andl
std
cmpsl
mov
outsb
lea
jo
int3
fiadds
pop
enter
xchg
into
push
pop
jo
movsb
fildll
cmpl
shrl
sub
xchg
jle
imul
rolb
imul
sbb
out
into
fimull
fidivrl
gs
mov
imul
arpl
movsl
popa
xchg
xor
sub
sbb
scas
outsl
jle
ret
pop
jnp,pn
and
lea
stos
xor
mov
pop
aas
sbb
xor
andl
inc
lret
gs
bound
jg
fstpt
rcll
enter
mov
outsl
jno
repz
shl
iret
push
pop
push
cmp
imull
jle
dec
push
dec
pushf
pop
mov
xchg
repz
mov
sbb
xchg
fistps
and
shl
xor
stos
push
dec
mov
sub
pop
mov
and
cmovb
pop
cld
iret
cmp
mov
ss
and
mov
imul
xchg
inc
sti
loopne
lock
lods
repz
fcmovnb
xor
pop
gs
cmpsl
pop
fldl2e
xor
sbb
or
ret
roll
int3
mov
shr
mov
push
cld
aad
fbstp
shlb
out
jbe
divb
jb
adc
das
loop
repnz
add
imul
rcll
daa
addr16
cmpsl
test
or
dec
ljmp
loopne
popl
or
jbe
xchg
popf
sub
mov
loopne
adc
int
mov
ja
dec
jnp
mov
stos
dec
cmc
sbb
inc
adc
xchg
test
mov
pushf
daa
pusha
aad
adc
imul
ja
and
push
pop
mov
insb
lret
sti
jne
xor
sahf
sysenter
fdivl
pop
leave
push
loope
imul
lret
ss
mov
notb
mov
scas
insb
das
pop
dec
mov
pop
arpl
and
imul
cmpsb
cmp
sub
lret
inc
imul
push
lods
movb
das
adc
lds
shrl
enter
out
pop
jp
cltd
pop
pop
push
imul
sbb
ss
sbb
jl
cmp
add
lcall
xchg
mov
pop
and
sub
nop
dec
jb
xor
jns
pop
cmp
and
cmp
fsubrl
popa
iret
out
mov
mov
mov
loopne
into
dec
xchg
das
sbb
rcll
adc
in
adc
sbb
dec
mov
cmp
mov
xchg
scas
movsl
pop
adc
outsb
ret
addl
daa
push
cmpsl
stc
cmp
mov
lret
daa
mov
cmp
cmpb
cmp
push
xor
insb
lret
sbb
sub
jl
xor
inc
andl
and
push
cltd
and
dec
push
repnz
repz
push
dec
adc
lds
adc
fnstsw
cmp
push
rolb
push
pop
mov
adc
lcall
dec
jl
mov
push
mov
xchg
push
inc
add
jb
andb
insl
pop
loope
cmp
pop
mov
loop
sub
or
lock
dec
inc
xor
adc
out
or
sub
xor
mov
jle
inc
mov
or
lock
xor
jp
rcrl
jbe
add
cwtl
and
bound
mov
xchg
je
jae
test
fistpll
xchg
insb
ret
sarb
out
mov
loope
cmpsl
and
xor
mov
pop
add
loop
sti
nop
xchg
jge
pop
dec
jmp
fisubrs
das
inc
cmp
adc
sarl
test
lods
fisttpll
jnp
subl
cmp
sub
xchg
cmc
test
test
lds
cmp
inc
outsl
pop
sub
jmp
sub
jo
dec
push
mov
sbb
loope
out
xor
incl
or
dec
inc
scas
gs
mov
popa
mov
xor
aad
out
sbb
inc
mov
mov
out
push
and
int3
out
sbb
xor
adc
mov
mov
mov
pop
adcb
mov
cli
scas
inc
xchg
stc
mov
xchg
cld
mov
push
inc
jno
stos
inc
aad
scas
repnz
adc
sbb
sub
sbb
stc
out
sub
pop
imul
popa
jg
pop
add
popf
into
cmpsl
or
imul
stos
das
ds
test
sbb
jg
scas
mov
push
mov
or
or
adc
mov
mov
xchg
dec
fsts
sub
loop
or
movsl
fmul
mov
es
dec
ret
aad
enter
arpl
jo
push
stos
xor
jecxz
cmpsl
in
ret
mov
insl
gs
dec
icebp
push
aaa
jbe
mov
pop
mov
fdivrl
icebp
xchg
clc
dec
lods
and
or
js
outsl
js
cmp
int
movaps
xor
shl
je
gs
and
fidivs
mov
jle
or
adc
lret
push
call
push
loopne
fwait
int
pop
lahf
gs
mov
aas
xchg
push
sub
xchg
mov
iret
icebp
jb
fisttpll
jbe
jo
mov
pop
push
jmp
int
xor
in
mov
arpl
sbb
jge
repnz
cli
add
and
dec
iret
pop
jmp
push
clc
int
iret
repz
sbb
in
pop
or
pushf
cmp
push
faddp
je
mov
lcall
mov
pop
jne
into
cmp
mov
rorl
pop
sti
js
pop
and
and
cltd
adc
test
xor
hlt
mull
push
ficoms
enter
sub
mov
ficompl
les
call
incl
and
lahf
lcall
sub
jne
orb
call
cmpsb
pop
and
add
out
sbb
xor
or
jl
hlt
mov
xor
xor
xchg
lea
out
xor
insb
pop
outsb
fcomps
push
jge
cmpl
sbb
adc
adc
in
jg
je
imul
pop
shlb
fadds
nop
pusha
repnz
dec
daa
pop
jp
add
xor
xchg
daa
loopne
ret
mov
mov
cmp
outsl
cld
lret
lret
pusha
cmp
pop
mov
aad
jo
jno
lcall
add
sbb
stos
fbld
cs
lock
push
push
push
outsl
push
mov
stc
popf
mov
outsl
ret
mov
repnz
negl
xlat
push
je
xor
std
cld
jns
fstl
mov
test
jbe
in
pop
mov
mov
mov
cmpsb
les
call
fsubrl
push
xchg
jno
je
movsl
xchg
outsl
fnstenv
inc
int3
fsubl
test
fildl
or
mov
imul
aaa
fdivr
inc
jae
xchg
push
xchg
setno
movsl
lret
cltd
mov
push
mov
nop
sbb
sbb
xor
lret
aam
jb
jge
pop
jns
sbb
jg
test
jo
mov
or
jl
mov
sub
and
xor
pop
push
push
hlt
rol
idivb
insl
push
movsb
jg
or
and
sbb
push
xchg
fwait
pop
pop
or
adc
test
xor
popa
neg
rcrl
push
push
pop
mov
test
test
dec
mov
mov
hlt
jb
jne
dec
mov
int3
jno
xor
push
idivb
test
scas
imull
loop
adc
rcll
dec
jbe
pushf
jo
mov
and
leavew
jmp
std
push
call
push
test
add
arpl
dec
xchg
in
push
imul
movsb
int3
mov
xor
aam
cmp
jp
jg
enter
std
xor
or
clc
cvtpi2ps
and
or
or
inc
dec
push
add
movsb
imul
xchg
adc
ret
lds
outsl
mov
xchg
add
xchg
push
dec
xchg
bound
fistl
pop
lods
mov
into
adc
mov
inc
insl
cs
faddl
push
mov
dec
sbb
mov
xchg
pusha
les
js
cmp
aad
adc
or
in
mov
sbb
sub
sub
dec
mov
popa
lcall
xor
jne
cli
or
dec
lock
push
sbb
testl
ljmp
push
mov
pop
sub
cmpsb
sti
jnp
push
mov
adc
lret
add
inc
push
inc
rcll
push
imul
cwtl
adc
es
push
sbb
mov
gs
shll
and
bound
cmpb
cmp
cmpsb
cld
enter
xchg
sbb
adc
sbb
aas
insl
sbb
hlt
std
clc
arpl
ljmp
jo
testb
cld
and
pop
jae
push
leave
scas
scas
cld
insb
dec
mov
shlb
xchg
push
lock
sub
pop
mov
dec
and
stos
pusha
je
mov
inc
out
jbe
sahf
pop
insb
out
je
push
das
push
sub
or
shrl
and
leave
sti
clc
test
stc
and
jne
lcall
xchg
xchg
mov
push
sbb
pop
js
jecxz
cltd
sti
adc
lret
repz
out
stos
ja
xor
lret
sbb
dec
jl
fisubrl
or
lret
mov
cmp
mov
xchg
pop
or
lahf
shrl
nop
dec
fwait
cmp
mov
cltd
sbb
out
pop
sub
filds
mov
jo
in
cld
pop
sbb
cli
dec
call
cmp
add
and
test
sub
pop
jno
lock
insl
fadd
dec
xor
jb
xlat
cmp
aam
hlt
xor
fdivrl
or
and
bound
mov
repnz
iret
repnz
popf
imul
push
dec
push
pop
andl
loope
shlb
mov
out
xchg
in
xor
pusha
out
jle
in
jmp
mov
pop
frstor
dec
in
stos
mov
loope
jnp
pop
xchg
push
pop
jecxz
fsubrs
jmp
insb
movsl
cmc
sub
push
mov
cmpxchg
pop
mov
repz
push
fdivr
pop
lahf
ficoml
es
dec
cwtl
mov
mov
lods
xor
out
add
sub
lods
popf
push
cmp
divl
bound
pop
fiaddl
loope
fimuls
test
out
mov
mov
cmc
popl
sbb
loopne
cmp
sub
xchg
mov
std
push
cmp
cmp
cmp
and
push
loopne
or
idivb
rcr
std
lea
xchg
pop
inc
int3
adc
loope
inc
shl
jo
scas
decb
and
cmp
jmp
shrl
lods
std
push
enter
mov
inc
movsb
out
daa
pop
fxch
mov
cmp
jbe
jbe
xor
inc
insb
shlb
jmp
out
scas
loope
out
fisubrs
lret
add
xchg
mov
push
xchg
or
xor
imul
mov
jecxz
cmp
sub
les
xor
cmpxchg
lahf
enter
pop
dec
std
stc
sbb
dec
sbb
jl
nop
dec
mov
lods
cmp
push
fwait
pop
ret
cmc
mov
inc
lahf
das
div
pusha
pushf
cmp
xchg
xor
ret
pop
roll
inc
mov
sub
clc
cmpsb
mov
insl
inc
rcrb
pop
lcall
pop
stos
aam
dec
sbb
mov
inc
out
aas
fidivs
pusha
or
test
std
jae
mov
mov
and
sbb
and
inc
pop
add
xor
xchg
out
push
daa
daa
inc
jae
movsb
sbb
adc
sub
cli
lret
hlt
jo
imul
stc
mul
push
and
push
pop
nop
daa
sbb
movsl
int3
fidivs
xor
push
sbb
cmp
mov
jg
sti
xchg
ja
cwtl
in
mov
sahf
and
aad
adc
std
jmp
les
cmp
scas
jle
movsl
leave
addl
dec
or
dec
jecxz
mov
cmc
js
daa
sbb
push
mov
mov
sbb
gs
cmp
ret
ja
cmp
lods
inc
scas
jnp
mov
xchg
or
mov
in
or
mov
fsubrl
jne
cmp
inc
test
lds
call
loop
lahf
xchg
adc
bound
bound
notl
jne
push
inc
outsl
xor
bound
fcmovnbe
fdivl
into
pop
cwtl
repnz
or
inc
mov
pop
into
sbb
mov
push
or
jmp
mov
dec
dec
aas
sbb
orl
std
sub
mov
inc
into
aam
mov
sub
aad
mov
inc
pop
jbe
mov
insb
nop
aad
pop
orw
mull
fistpll
push
xor
cmp
std
shl
lds
or
ljmp
dec
inc
ds
xor
mov
or
add
jle
outsb
sti
or
repz
cmp
cmp
adc
adc
aas
pop
inc
push
jae
decb
xchg
xor
jg
mov
inc
cmpsb
dec
out
push
in
shll
jb
and
sahf
int
jle
or
sbb
rcrl
clc
adc
fistpl
push
jp
add
mov
popf
mov
adcb
xor
jo
dec
addb
mov
sti
stos
mov
dec
inc
pop
sub
dec
pushw
rcrb
sbb
xchg
outsl
xchg
or
sub
gs
mov
lret
dec
push
das
lcall
stos
lods
rcll
push
adc
xchg
cmpsl
add
out
mov
cmp
mov
pushf
in
call
test
push
xchg
xchg
in
stos
ja
lods
dec
add
cmovae
adcl
das
bound
call
xchg
stos
add
movsl
hlt
inc
push
int3
and
fidivs
pop
shrl
jnp,pt
cmp
dec
pusha
push
sbb
xchg
roll
pop
and
or
mov
ja
test
adc
or
rclb
addb
xchg
bound
stos
fwait
xchg
add
cwtl
sub
cmp
ljmp
and
loopne
push
inc
mov
repz
imul
push
rep
jmp
enter
or
adc
inc
cmpsl
push
xchg
ds
and
lret
mov
cs
push
lods
imul
test
gs
push
js
es
iret
adc
pop
popa
outsl
push
adc
insl
movsl
cltd
scas
movlps
xor
pop
cli
les
int
out
aaa
cwtl
scas
sbb
adc
rolb
fs
sbb
in
das
loopne
mov
in
sbb
jae
imul
xor
int3
xchg
pop
pop
jp
add
mov
mov
in
xor
lret
mov
mov
cmp
daa
fcmovnu
aas
pop
jl
pop
dec
in
ja
incb
mov
cmp
push
sub
push
repz
int
stc
mov
repnz
dec
or
mov
pop
pop
xlat
cmp
ja
mov
loopne
test
sti
sbb
mov
cmpsb
cwtl
mov
or
adc
xor
clc
in
push
pop
sti
inc
lods
dec
test
dec
inc
push
mov
pop
mov
add
fsubrs
sub
add
cld
pinsrw
push
adc
jbe
sahf
mov
bound
xchg
mov
xchg
mov
mov
xor
or
mov
leave
push
xor
les
fwait
fwait
sti
outsb
testl
stos
push
mov
les
fdiv
repnz
lods
xor
push
mov
int
hlt
mov
arpl
bound
loopne
xchg
enter
inc
xor
push
push
neg
or
out
cmp
jge
push
lret
dec
add
mov
std
imull
pop
mov
mov
xchg
cmp
jle
jns
cmp
jge
add
gs
frstor
outsb
jne
mov
jp
hlt
ja
call
rcl
jbe
mov
mov
mov
dec
insb
dec
in
mov
cmc
fs
repz
cld
cld
or
add
pop
adcl
jns
add
mov
mov
jns
and
mov
mov
fwait
popa
lcall
xor
xor
imulb
jb
push
mov
repnz
in
pop
bound
aaa
jnp
cmp
mov
push
das
push
into
int
jbe
daa
mov
and
or
push
mov
stos
push
inc
push
xchg
int
xor
or
jno
int
dec
das
dec
cmc
mov
lret
add
fisubrs
xchg
add
mov
cmp
mov
xchg
mov
mov
pusha
call
mov
jecxz
ret
cmp
mov
adc
repnz
daa
sbb
xor
arpl
sbbb
cmpsw
in
adc
pop
into
mov
add
out
mov
mov
jnp
pop
fs
push
and
and
inc
int
push
test
add
int3
into
loope
pop
repnz
or
jmp
rol
popf
enter
ret
push
or
das
sbb
or
lds
push
divl
push
ljmp
popa
dec
fbld
fidivrl
das
and
dec
sbb
dec
push
push
sbb
xchg
sti
loopne
aaa
in
dec
insb
mov
lds
test
push
or
cmp
sub
cmp
aad
sub
sub
inc
test
mov
xchg
push
iret
outsl
cmp
inc
out
lea
cmpsl
test
icebp
cmp
mov
lcall
cmp
xor
inc
in
scas
push
cld
pushf
push
aad
sbb
out
jns
sti
cmpsb
jmp
call
dec
mov
stc
repnz
dec
or
pop
or
jmp
jg
fstl
mov
mov
lds
insb
cmpsl
dec
orl
pop
sbb
ret
sub
push
pop
int
jb
pop
lock
ret
push
xchg
dec
aad
lods
imul
call
xchg
add
push
or
add
insl
ret
stc
int3
and
and
add
cmp
cmp
clc
sbb
push
stos
pop
test
rclb
fnsetpm(287
out
and
cmp
adc
call
int
cmp
push
jmp
jae
aaa
jge
in
addb
jecxz
paddusw
mov
xchg
test
dec
aad
ds
jmp
cmp
loope
pop
jle
dec
pop
popf
arpl
sahf
pop
xor
push
adc
incl
stc
jns
mov
cmp
sbb
inc
bound
mov
outsl
popa
jnp
adc
mov
push
test
jp
divb
xor
mov
mov
mov
xchg
jae
dec
inc
stc
jns
pop
orl
mov
ljmp
test
cmp
add
in
mov
xchg
pop
imul
inc
xchg
lahf
mov
xor
mov
fnstenv
pop
cltd
pusha
lds
iret
push
sbb
dec
sub
jno
add
std
mov
into
pop
mov
cmpsb
xchg
lock
add
shrl
out
inc
daa
stos
mov
mov
orb
arpl
mov
lock
ret
adc
xor
iret
lods
xrelease
clc
aaa
jns
add
cmp
aaa
js
pop
sbb
out
mov
jle
pusha
inc
xchg
aam
mov
mov
adcb
xor
fstpl
das
add
lret
insb
ret
pusha
cmp
and
call
jne
push
cmp
adc
mov
jecxz
pop
push
out
test
mov
mov
mov
mov
pop
jmp
jbe
shll
shlb
scas
sbb
mov
push
out
insb
adc
inc
in
lcall
add
out
outsb
arpl
dec
pop
bnd
pusha
hlt
les
iret
rolb
jl
lea
lahf
notb
test
dec
inc
pop
in
add
adc
and
std
leave
xchg
bound
push
cmp
and
imul
xchg
xor
push
cwtl
cmpsb
and
mov
movsb
cmp
outsl
test
xor
aaa
xor
add
int3
out
push
out
pop
aam
cmpsl
or
or
daa
push
out
stc
loopne
mov
mov
mov
cmp
subl
push
jbe
or
inc
and
aaa
insl
mov
fisttpll
lods
fwait
outsb
mov
mov
jo
lcall
js
les
leave
push
imull
mov
inc
ja
xchg
adc
inc
je
push
movsb
sahf
or
xor
or
iret
xor
test
mov
xor
inc
sbb
or
adc
fisubs
in
sbb
cmp
dec
pop
mov
pop
ljmp
pop
sub
or
jp
push
add
xchg
shll
f2xm1
stc
mov
push
dec
out
push
push
sbb
movsb
jl
addb
cmp
cmpb
jg
cld
and
cmp
mov
inc
mov
jmp
jmp
jns
jp
sub
cmp
sahf
imul
arpl
pop
shl
dec
mov
xor
es
cmp
mov
call
pop
sbb
addr16
pop
cs
mov
xchg
aaa
push
sbb
push
add
sub
rcrb
lock
push
push
cld
in
jo
add
paddusw
inc
lahf
xor
inc
clc
stc
pop
jb
das
mov
pop
loopne
fmuls
jne
or
push
dec
xchg
leave
adc
jle
add
les
sbbb
loopne
lahf
lods
cmp
or
push
aam
gs
stos
and
cmp
inc
jl
imul
pop
xchg
push
loop
mov
xchg
into
stos
aas
jmp
bound
mov
fdivs
push
jne
xchg
arpl
mov
stos
loopne
jge
inc
cwtl
mov
inc
ud2
or
stc
cmp
enter
bound
popf
ret
fcoml
mov
jno
mov
lret
testl
jl
popf
iret
daa
dec
mov
sar
jle
cmp
jae
int
or
jecxz
pop
pop
and
icebp
pop
push
lret
sbb
shrb
xchg
stc
inc
pop
hlt
cmpsb
push
push
push
sub
out
in
or
rolb
pop
mov
mov
enter
dec
jmp
sub
adc
aas
rorl
push
pop
pop
or
pop
dec
pop
fadds
lret
dec
and
test
iret
mov
les
dec
xlat
add
fildll
fcom
adc
xchg
jecxz
loope
sbb
and
push
sbb
das
add
imul
push
les
ja
das
or
testb
add
test
shl
mov
and
add
aad
pop
es
enter
lret
daa
inc
fld1
ret
add
cmp
jo
inc
xchg
push
jge
insb
jnp
adc
loop
push
mov
stos
sarb
clc
adc
add
popa
cltd
lret
adc
pop
push
insb
dec
jbe
xchg
adc
add
js
inc
les
push
aam
je
push
lods
mov
mov
fwait
call
jo
mov
add
std
lds
lcall
cmpsl
fmull
int
addr16
in
add
lods
inc
cmp
mov
stos
dec
stos
sbb
mov
out
inc
ss
mov
dec
xor
fldt
and
clc
iret
jp
dec
add
adc
push
mov
jge
pushf
aad
sti
and
sub
inc
mov
pop
xor
jns
and
mov
daa
jae
inc
sub
mov
pop
adc
push
add
aad
pop
leave
cmp
and
stos
and
fwait
push
and
rcrb
dec
das
lea
stos
or
daa
adc
imul
adc
and
es
dec
outsb
lods
add
es
adc
xor
imul
pop
sahf
repnz
arpl
pop
fbstp
imul
jbe
insl
pop
inc
fdivrs
xchg
push
adc
dec
jne
nop
aaa
dec
lds
mov
inc
cs
dec
daa
test
in
mov
hlt
inc
push
ret
adcb
mov
add
add
dec
jb
outsb
scas
clc
xor
pop
aam
jae
jb
movsl
cltd
rolb
pushf
sub
cmp
sub
sahf
adc
cmp
aad
push
or
xor
sbb
xchg
dec
fcomps
xchg
repnz
inc
xchg
call
lods
jp
lahf
dec
xor
loopne
lcall
ficoms
ret
andb
dec
stos
xor
pop
cmpsb
addl
sbb
mov
lahf
xchg
add
dec
pop
fxch
hlt
adc
xchg
xor
mov
lods
stc
ror
push
mov
int
add
jne
pop
in
rsqrtps
lea
enter
test
push
adc
mov
mov
mov
mov
xor
cmpsb
leave
and
pop
in
data16
push
or
aaa
pop
sbb
cli
sbb
push
mov
dec
cmp
lods
repz
fs
scas
enter
in
imul
lret
sbb
sti
cwtl
inc
in
stos
pushf
mov
sbb
imul
xor
inc
mull
or
mov
ds
lcall
jl
fucom
negb
adc
je
jg
ret
mov
icebp
and
iret
add
outsb
jnp
ret
and
repz
insl
sahf
adc
mov
adc
int
sahf
aam
aad
jmp
outsl
ret
int3
or
xchg
out
push
dec
in
aaa
clc
out
xchg
ficompl
dec
shl
mov
repz
push
sti
fistps
mov
cmp
mov
mov
pop
dec
lods
jae
stos
out
mov
ljmp
and
lea
negl
pop
xor
xchg
mov
sbb
push
mov
movsb
pop
pop
inc
xor
in
push
rorb
aas
js
xchg
pop
in
mov
mov
imul
push
add
add
aas
test
add
daa
repnz
jo
push
lahf
cmp
xor
clc
cli
mov
jmp
push
mov
sbb
adc
hlt
mov
and
iret
mov
pop
push
sbb
push
cmp
push
ljmp
jmp
fsubr
xor
sti
test
and
jmp
fnstenv
mov
setns
xor
mov
adc
lea
inc
lea
repnz
mov
cld
sbb
adc
mov
out
stc
leave
fwait
das
cld
lret
loopne
push
aam
stc
push
inc
xchg
out
cli
mov
aaa
in
or
push
rcrb
adc
repnz
int
sbb
les
mov
stc
mov
jne
sub
push
sub
push
fs
ss
les
mov
mov
dec
dec
lret
imul
ret
cld
sbb
movsb
mov
fldl
icebp
jmp
mov
aad
arpl
fsts
cmp
pushf
rorb
cmp
stc
jl
jae
test
notl
sub
shl
data16
and
mov
cmp
std
xchg
mov
xor
loop
push
jmp
lcall
or
dec
jmp
jecxz
sbb
or
mov
pop
jmp
dec
or
mov
sbb
add
push
xor
and
pushf
pusha
push
cltd
xchg
mov
nop
mov
sub
in
jns
lret
lea
or
fimull
push
and
cli
sbb
mov
pop
jbe
pop
dec
add
pop
push
int3
and
jb
cmpsb
xchg
cwtl
leave
adc
jne
mov
mulb
and
pusha
hlt
mov
lahf
xor
inc
or
dec
mov
loopne
test
inc
pop
adc
pop
sub
test
fldt
or
test
cmpb
scas
inc
les
lds
and
fisttpl
mov
xchg
ja
in
dec
cmpsl
shrl
movsl
xorl
xchg
dec
ficomps
sub
ud0
mov
sbb
fsubp
mov
push
push
jne
dec
inc
cwtl
jmp
imul
pushf
mov
fdiv
pop
inc
mov
or
mov
inc
cmp
call
push
mov
sti
dec
pop
inc
in
dec
add
mov
icebp
xor
jb
adc
outsb
and
iret
mov
scas
push
int3
mov
push
pop
outsb
movsb
stos
jl
nop
dec
outsl
fmulp
push
and
fdivs
xchg
sbb
jle
xor
js
stos
lahf
out
mov
pop
or
popf
adc
cmc
and
insl
ror
pop
or
scas
leave
dec
sub
mov
mov
aaa
xor
add
ret
repnz
add
or
add
mov
insl
sbb
xchg
jmp
mulb
inc
stos
sbb
fs
std
icebp
adc
fldt
push
mov
xchg
mov
push
test
and
aam
fcomip
int
mov
xchg
int3
cli
push
push
mov
out
sbb
mov
fmull
push
add
lret
aam
xchg
lret
inc
std
sub
pop
inc
mov
addl
movsb
jne
xchg
pop
inc
imul
int
loopne
scas
ficompl
xchg
push
mov
xlat
xchg
lods
in
movsb
pop
and
cmpl
mov
test
mov
jns
mov
js
xor
in
xchg
cmp
shlb
cmc
idivl
icebp
dec
adc
aas
ret
sbb
lahf
sub
jl
or
loope
push
mov
aaa
shll
mull
rcll
test
faddl
in
pop
das
shlb
rolb
dec
sub
inc
es
mov
bound
daa
repnz
pop
es
dec
out
pop
nop
das
in
mov
not
fisubs
push
pushf
push
mov
pop
mov
pushf
or
mov
in
inc
sbb
xor
fildll
rcl
jne
jmp
aad
push
and
and
mov
cli
lret
repnz
lcall
inc
aas
shrl
add
mov
sti
cltd
arpl
sbb
enter
inc
adc
je
add
inc
mov
inc
in
incl
sbb
inc
aad
push
imul
and
sbb
call
rcl
cmpb
xor
cmp
pop
adc
icebp
adc
dec
mov
pop
sbb
fidivl
cmp
push
pop
mov
push
adc
gs
inc
mov
push
sub
mov
dec
imul
add
shll
fucom
dec
lahf
cltd
and
sti
sub
or
ficompl
pop
xor
es
mov
repz
and
add
adc
add
add
jecxz
int
test
js
popf
rolb
arpl
cmp
push
pop
out
pop
cld
jae
sahf
cwtl
xchg
dec
stc
sbb
inc
push
insb
jle
push
mov
je
adc
mov
lock
inc
lret
adc
mov
jl
fsubrl
test
sbb
out
ja
inc
jge
and
dec
xor
mov
hlt
jo
mov
sbb
inc
aam
lods
test
loopne
pop
and
jne
xchg
mov
mov
fdivrs
testb
jns
mov
sub
push
test
adc
dec
mov
shll
and
jnp
cld
sub
mov
push
pusha
mov
jecxz
repz
jns
sbb
sbb
inc
adc
stos
jo
test
das
cmp
add
jno
jae
lods
icebp
and
ja
xor
add
outsb
movsb
icebp
insl
jae
daa
scas
lods
push
in
ret
popa
sub
xchg
ret
xor
jle
pop
xor
or
adc
stos
mov
scas
pop
dec
pop
mov
push
push
mov
or
fs
xadd
rolb
mov
lret
adc
insl
dec
arpl
mov
lds
jmp
jo
hlt
xor
jnp
out
mov
ffree
ljmp
int
push
fdivrs
pop
ljmp
pop
sarb
inc
std
repnz
mov
adcl
loope
aad
stos
fdivrs
pop
jae
aad
and
movsl
popa
add
and
fsubl
sbb
inc
pop
insl
push
test
push
mov
sbb
ja
xor
shll
adc
cld
data16
dec
mov
fiaddl
les
pusha
inc
or
jecxz
les
ss
out
in
sub
mov
or
rcrl
sub
std
jl
lods
out
pop
scas
xchg
cmpsl
cmp
insl
ljmp
sub
in
inc
shlb
jo
push
inc
and
fstp
jl
cltd
push
sbb
jnp
cmc
mov
movsbl
test
stc
imull
sub
pushf
push
mov
sbb
adc
jecxz
ret
dec
xchg
pushf
dec
jle
enter
cmp
pop
dec
lea
icebp
inc
jl
push
mov
loopne
in
repz
inc
cld
xchg
or
rorb
bnd
sub
rorb
cld
xchg
lods
inc
pop
jecxz
dec
cmp
test
xchg
push
jmp
cs
fsubp
je
scas
sti
out
scas
sbb
cmp
xor
jle
sbb
into
addr16
jns
push
xchg
mov
std
lahf
jno
and
loop
pop
div
dec
xor
or
mov
in
mov
loope
ljmp
loope
nop
sbb
addr16
aad
test
test
or
lahf
clc
imul
cmp
hlt
dec
testb
mov
pop
and
lret
ret
xor
sarl
outsl
jmp
imul
mov
inc
stc
fbld
cli
adc
xchg
dec
lods
hlt
dec
lret
or
inc
jle
sub
fidivrl
jge
jbe
cmpsb
mov
sbb
neg
or
sbb
ror
subb
in
cmp
add
out
pop
adc
mov
outsb
and
shl
cltd
dec
movsb
rcl
xchg
sub
mov
stos
mov
push
jbe
lahf
xchg
insb
xor
jno
pop
pop
fxch
aam
adc
repnz
shl
js
and
jp
ds
and
adc
mov
loopne
push
dec
imul
insl
leave
imul
rclb
jo
rcrb
in
int
xchg
cmpsl
cmp
gs
and
orl
aad
repz
hlt
pop
jge
add
cs
and
pop
xor
ret
decb
imul
pop
fcmovnu
lahf
or
repnz
xchg
or
aaa
sub
loop
rcrb
and
leave
adc
fnstenv
imul
dec
in
sub
xor
sbbl
fdivl
pop
and
fcoms
jecxz
add
adc
mov
xor
mov
or
fistps
push
mov
push
ret
repnz
and
out
ret
enter
sub
mov
and
fidivs
push
addr16
test
in
call
sbb
jo
out
lahf
push
int
cmc
push
aas
roll
loop
and
sub
mov
dec
xor
cmpsb
insb
mov
jne
repz
xorb
add
xor
push
jne
push
dec
push
loope
loope
mov
cld
mov
push
dec
and
push
push
fisubs
push
iret
arpl
pop
push
lds
cmc
jmp
inc
sub
ljmp
jne
inc
pop
sti
lea
fwait
icebp
push
int
stc
sarl
push
leave
shl
jbe
dec
add
es
mov
pushf
jle
int
cmp
es
lods
cmp
nop
sub
jne
ror
dec
ljmp
jl
add
imul
xchg
sbb
adcb
xchg
leave
push
cmpsb
test
sbb
int3
fdivrs
pop
jo
ret
data16
adc
lret
jo
imul
int
push
mov
lret
jg,pt
push
ja
xchg
scas
add
aas
cmp
sbb
push
or
or
ljmp
xchg
mov
sub
fisubrs
gs
mov
es
mov
mov
call
dec
jne
cmpl
cmp
std
call
leave
fisttps
jae
leave
loope
or
sarb
push
cmp
cmpsl
add
mov
fs
aaa
push
push
mov
dec
sbb
sbb
jp
and
xor
sbb
xor
pop
push
jo
stos
test
pop
das
lret
rcl
jns
xchg
test
pop
dec
das
cmpsl
sbb
jecxz
fwait
dec
or
jge
leave
xchg
out
je
sti
xchg
and
pop
fimull
jl
les
shll
pop
les
mov
push
mov
imul
sbb
inc
sub
in
ds
sbb
fstl
or
int
in
mov
add
push
and
imul
or
pop
xchg
frstor
jns
pop
xor
jmp
mov
dec
jecxz
dec
lea
fadd
addb
icebp
add
or
push
int3
dec
std
ret
jbe
cmp
je
jbe
sbb
in
lahf
fcomps
fidivl
mov
sub
fidivrl
and
lods
push
test
add
gs
cmpsl
daa
pushf
jge
sub
sbb
inc
sar
lret
push
hlt
insb
notb
in
xchg
gs
jnp
cmp
lret
dec
out
and
cltd
shll
push
and
dec
jns
jne
es
orl
xchg
push
aaa
outsb
and
sub
push
dec
lahf
sahf
into
pop
notb
push
sub
outsl
inc
pop
lahf
inc
std
insl
sbb
daa
pop
mov
repz
sbb
pop
push
xchg
loope
mov
xor
je
or
lahf
and
aas
mov
xchg
aaa
and
ss
or
sub
arpl
add
and
mov
fidivrl
adc
cmpb
call
dec
mov
adc
das
xor
hlt
pop
pop
mov
xor
lcall
loop
jae
push
dec
mov
adc
push
mov
pop
and
pop
loope
nop
push
pop
dec
stos
add
mov
jbe
int3
adc
pushl
dec
sub
icebp
rcll
outsb
mov
sbb
mov
and
gs
sahf
fidivl
in
jo
nop
mov
test
cld
iret
xor
cs
dec
jae
push
lret
mov
cmpsl
lahf
inc
ljmp
cmc
mov
fcomps
in
out
iret
je
stos
popl
cmp
and
inc
and
mov
icebp
push
addr16
pop
or
inc
lock
cmp
sahf
into
pusha
mov
adc
lret
push
mov
cmpsb
gs
sub
xor
xor
or
xchg
mov
std
sarb
jnp
je
sbb
xchg
jle
aam
cld
mov
fidivs
outsb
push
xchg
jecxz
adcb
push
push
push
dec
dec
mov
and
mov
repnz
push
pop
test
lcall
ret
arpl
mov
pop
lock
xor
push
push
push
inc
pusha
inc
sub
loop
add
inc
pop
dec
pop
gs
sub
xchg
or
fimull
leave
cltd
push
inc
xor
cmp
xchg
idivl
in
cltd
sti
bound
jne
mov
ds
pop
scas
mov
rcrb
ds
and
repz
fsubl
mov
xor
push
xchg
adc
test
pushf
enter
mov
ja
push
popa
mov
js
push
pop
ss
jle
testl
adc
pop
xchg
ret
push
lods
dec
fwait
stc
fidivs
sub
and
xchg
sbb
cs
jbe
xchg
jmp
decb
test
adcb
lret
in
rorb
inc
mov
je
fdivs
dec
sub
adc
stc
outsb
push
add
add
movsb
inc
out
or
and
test
dec
mov
in
push
jmp
lret
mov
out
fisubrl
jge
fcmovu
add
add
dec
cmp
adc
mov
aam
enter
xor
xlat
testb
inc
gs
dec
pop
ljmp
andl
mov
lahf
mov
dec
xchg
btc
lds
xchg
or
pop
lds
lock
push
repnz
int3
pop
push
or
cmpsl
mov
outsl
pop
in
xor
sub
jbe
push
sbb
adc
push
in
inc
jmp
adc
lahf
ret
lods
outsl
mov
inc
inc
ja
ret
into
ja
mov
add
mov
fistps
lea
movsl
inc
std
mov
or
mov
xchg
shl
or
or
mov
mov
leave
popa
lods
mov
lds
jge
jb
dec
int3
push
inc
sub
imul
mov
lret
hlt
scas
les
fimuls
rcll
jmp
sub
stos
cmp
or
jo
mov
inc
jne
sbb
ljmp
pushf
mov
mov
inc
cltd
add
lds
jecxz
cld
testl
rolb
cwtl
lds
das
test
cld
sbb
cmp
loopne
push
fsubs
push
cltd
cwtl
sbb
push
push
outsb
out
xor
js
adcl
outsb
es
jmp
in
insb
stc
pop
push
mov
add
jb
add
cmp
jne
dec
imul
pop
mov
mov
nop
popf
out
mov
jns
mov
testl
les
add
repz
je
pop
mov
nop
pushl
icebp
cmp
dec
ss
jmp
mov
in
in
dec
dec
adc
fidivs
sub
xchg
fstl
iret
imul
ljmp
mov
xchg
test
out
jno
fwait
insb
pop
sarl
mov
inc
sbb
sbb
jns
std
imul
jb
popf
out
leave
jbe
adc
add
and
mov
mov
pop
sbb
push
dec
cltd
mov
pop
dec
adc
inc
je
mov
jecxz
loopne
and
rcr
mov
add
fidivrs
add
je
jg
jnp
mov
loopne
movsl
mov
xor
sti
push
mov
jns
pop
push
pop
push
shrl
outsb
cmp
insb
push
cwtl
lea
and
xor
mov
adc
das
inc
xchg
xor
or
sbb
pushf
jne
roll
mov
adc
je
and
mov
ja
adc
pop
mov
fs
or
or
test
ds
popa
mov
ror
add
inc
ficomps
dec
in
out
hlt
pop
push
popf
add
out
shlb
mov
lds
mov
mov
icebp
loop
ret
stos
inc
jg
aam
mov
fcmovnu
cmpsl
in
leave
jo
jle
jo
and
mov
or
cs
xor
cwtl
sbb
icebp
mov
cmp
xchg
and
cmpl
sbb
gs
mov
insb
cmp
cmpsb
or
and
push
mov
mov
fisubl
xchg
mov
ja
adc
inc
jp
xor
mov
popa
loope
pop
jbe
xchg
or
clc
cmpsl
movd
rol
aas
mov
sub
ret
push
lods
scas
popa
jg
sub
insb
es
shl
jno
idivb
sub
fidivl
jne
popa
mov
jg
arpl
repnz
jecxz
mov
rolb
jmp
cltd
popf
ret
test
jnp
mov
fsts
xor
sbb
mov
pusha
std
pop
and
dec
inc
shl
int
mov
into
or
in
dec
and
scas
sub
xchg
inc
jge
sbbl
or
rclb
popl
adcl
sti
imul
xchg
fistps
pop
mov
test
inc
push
or
nop
push
ret
mov
scas
cmc
outsl
dec
sbb
out
arpl
ljmp
das
xchg
adc
stc
mov
pusha
subb
fisubl
jmp
xor
insb
cmp
cmc
out
insl
jne
aad
stc
xlat
push
repz
call
mov
dec
iret
ja
push
sub
jbe
sub
in
adc
dec
add
fucom
sbb
sub
je
pop
mov
shll
out
rcrb
cmp
push
xchg
adc
xchg
out
jg
push
push
lea
add
pop
lds
lcall
xchg
add
imul
and
sbb
sub
out
push
mov
xchg
dec
enter
xchg
sahf
sbb
xchg
dec
lret
dec
mov
add
pop
mov
cli
xchg
jle
adc
xor
loope
test
pushf
addr16
mov
rcr
jnp
jnp
sbb
cmc
loope
ja
push
fdivrs
frstor
inc
mov
test
pop
xchg
lea
dec
mov
scas
mov
adc
xchg
cmp
int
movsb
loope
loop
sbbl
jb
pop
cwtl
mov
bound
stos
pop
push
inc
ss
sub
insl
cs
shlb
mov
cmpsl
lret
inc
xchg
fsts
push
jle
cmp
ja
jge
call
and
cmp
mov
int3
pop
nop
imul
sti
jnp
mov
ss
adc
outsb
pop
je
push
push
jl
xlat
insl
jno
iret
pop
sbb
xor
sub
sub
lea
cs
pop
or
cmp
jae
mov
adc
es
int
pop
aas
sahf
js
pop
cltd
popa
xchg
cmp
or
sbb
test
dec
cs
inc
ret
xor
pop
xchg
decl
mov
jmp
inc
aad
sbb
enter
aad
pop
sbb
sbb
xor
ja
lahf
ret
out
outsb
xlat
add
xchg
xchg
xor
xchg
mov
pop
push
fistps
mov
sbb
in
lods
test
je
sarl
jno
rcll
and
mov
adc
jle
jnp
cmp
and
inc
insb
dec
aam
andl
xchg
loopne
iret
push
push
push
fcmovu
adc
pop
sub
jb
push
mov
mov
addr16
std
dec
popa
cltd
cmc
push
mov
sub
cmp
sbb
pop
fisttps
xchg
xchg
mov
dec
cmp
or
mov
add
push
insl
xchg
mov
repnz
pop
fistl
lods
insl
pop
iret
xchg
hlt
and
int
jecxz
test
addr16
or
es
test
dec
push
scas
stos
sbb
stos
mov
es
sub
std
imul
push
data16
in
jo
cmp
push
insb
xor
sbb
in
mov
scas
loop
pop
cmp
hlt
push
cli
aad
fwait
pop
in
jle
dec
sbb
js
sbb
scas
mov
filds
or
jo
cld
loope
jne
xchg
mov
add
cmpsl
inc
sbb
inc
cmp
aas
bound
mov
cmpsl
pop
jecxz
or
push
test
scas
clc
pop
mulb
pop
jae
pop
jl
jb
mov
add
cwtl
jno
mov
xchg
cld
popf
pop
add
or
cltd
mov
xor
ds
dec
jo
sbb
stos
push
hlt
xor
inc
lods
daa
pop
fistl
in
movsl
fmuls
arpl
movsl
mov
push
jo
xchg
cmp
pop
mov
sbb
ret
inc
xchg
dec
push
inc
das
pushf
fbld
push
mov
mov
stos
fwait
and
sbb
cmpsl
mov
test
or
jnp
mov
cli
mov
adc
lea
enter
sbb
mov
adc
mov
aas
xchg
lds
xor
scas
jmp
or
out
addr16
shlb
xchg
sbb
cmpsl
loop
mov
sub
sbb
xlat
pushf
add
and
ljmp
mov
mov
bound
pop
cmp
push
mov
mov
leave
test
mov
inc
arpl
mov
sarb
jne
pop
xchg
pop
dec
pop
insl
xchg
cmp
dec
imull
cmp
rclw
in
repnz
adc
arpl
xchg
jnp
xchg
inc
push
in
adc
mov
icebp
stos
and
bound
fwait
inc
fildl
add
push
shrb
lret
ja
movsl
xchg
test
adc
xor
sbb
sbb
xor
sbb
push
mov
insb
enter
int
sbb
mov
faddl
mov
into
cmpl
lcall
and
shll
lcall
xchg
mov
dec
ds
imul
inc
cmpb
stos
imul
mov
ljmp
aad
push
jno
pop
sbb
dec
lcall
ja
jle
out
sbb
xor
pop
rclb
leave
xchg
out
inc
jnp
out
popa
xlat
movsb
sub
cmpsb
jb
int3
xor
xchg
sub
sub
pop
test
pop
sub
push
scas
mov
mov
popa
les
cltd
adc
push
inc
inc
dec
mov
pop
ds
or
roll
adc
push
xor
imul
add
mulb
or
pop
or
or
test
mov
andb
xor
jnp
mov
aaa
sbb
in
ja
inc
mov
sub
mov
out
jmp
push
inc
mov
jno
jb
cmpl
je
shlb
aad
mov
xor
les
pop
lods
scas
cltd
fs
pop
mov
cmp
in
sub
jno
lcall
and
inc
add
cmp
inc
outsl
mov
lods
mov
inc
inc
mov
pop
jb
test
int3
jle
sbb
inc
into
push
xlat
jne
add
jb,pn
mov
imul
nop
dec
clc
lcall
push
jmp
cmp
jmp
cmp
adc
push
dec
jp
pop
xor
fisttps
mov
shlb
in
inc
scas
arpl
pop
lret
cmc
xor
js
in
cmp
mov
or
aaa
sti
outsb
out
jg
xchg
pop
loopw
or
dec
mov
jb
inc
sbb
out
je
std
jo
gs
data16
int
outsl
cmpsb
lds
fsubrl
sbb
jp
decl
dec
jnp
rcll
fxam
insb
mov
lods
movb
push
jne
pop
mov
xchg
mov
jmp
test
push
repnz
or
push
sub
lods
in
setne
pop
inc
mov
shl
addr16
mov
cmpsb
iret
pop
dec
pop
jp
mov
or
hlt
out
jecxz
in
je
push
fs
lret
inc
lods
fistl
mov
popf
fistpl
fldenv
inc
mov
ret
les
je
push
out
addr16
popa
pop
jbe
cmp
xchg
xchg
std
adc
add
push
mov
xchg
push
push
push
push
sbbl
sub
xor
cwtl
pop
cltd
jo
sbb
popa
inc
and
out
jmp
push
in
daa
or
and
dec
dec
push
aad
arpl
scas
lds
adc
inc
push
xacquire
push
sub
aad
mov
ljmp
mov
lods
sub
iret
adc
repz
imul
mov
test
cmp
in
and
inc
mov
clc
adc
jo
popf
pusha
cmp
push
in
xor
ret
mov
xchg
adc
mov
pop
or
xor
jp
cs
pop
mov
mov
stos
repz
ds
pop
jmp
add
jg
add
push
popf
psubq
jo
lock
mov
lret
xor
icebp
repnz
sub
push
mov
inc
xchg
testl
pop
ret
xchg
sub
dec
insl
pop
sti
js
int3
mov
insl
add
scas
lock
dec
and
push
fcomps
cmp
ljmp
mulb
aaa
testl
cs
push
clc
nop
fildll
icebp
cmpsl
pop
aad
sbb
sub
jl
jg
popl
aam
out
das
dec
test
stc
dec
cmc
adc
mov
jo
loop
mov
push
clc
clc
and
mov
push
xor
and
dec
sbb
loop
cmpsb
mov
inc
jnp
fnstenv
jo
adc
lods
pop
inc
pop
in
xlat
mov
loope
push
cs
outsb
cmp
rorl
imul
ret
fnstsw
mov
xlat
ss
adc
cmc
mov
or
push
aad
and
pop
jno
push
into
pop
inc
sub
xlat
jle
cmpsb
ficomps
mov
scas
or
jle
enter
inc
adc
aas
cmp
inc
pop
lret
sbb
add
int3
push
lea
pop
or
andb
sti
dec
scas
push
add
xchg
das
mov
cld
dec
pop
imul
push
add
and
mov
arpl
call
aad
mov
jg
add
or
xchg
nop
and
test
gs
and
inc
mov
fistpl
aas
jge
cmpsl
mov
sbbl
pop
cmpsb
push
ds
inc
and
in
inc
in
cmpsl
insb
lret
mov
inc
pop
loope
fsubrl
or
xor
out
xchg
movsb
and
int3
out
cmpsb
testl
ljmp
jne
repz
sub
fdivl
iret
loopne
or
inc
and
cmp
sub
cmp
xor
mov
stc
pop
dec
mov
cmp
sahf
or
repnz
imul
fisttpll
in
mov
mov
mov
push
adc
sub
sub
dec
dec
jge
data16
mov
adc
inc
testl
test
dec
jp
jl
sub
jge
fbld
lods
pop
push
xor
cmp
xchg
sub
mov
shl
decb
cld
add
mov
xchg
aad
iret
push
inc
add
mov
sbb
xchg
in
js
loope
and
scas
int3
sbb
negb
imul
jmp
jns
or
jmp
sub
xlat
cmp
sti
ja
mov
mov
push
inc
stos
icebp
pop
dec
mov
clc
das
cmp
push
mov
enter
push
xorl
push
aas
popf
imul
pop
repnz
gs
cmc
dec
loope
movsb
inc
test
xor
arpl
push
add
loop
nop
or
jp
leave
push
mov
js
inc
stos
ljmp
and
xchg
call
jp
subl
mov
idivl
cmpsb
jle
dec
or
push
cltd
test
rcrl
mov
ret
pusha
push
push
xchg
adc
jl
call
lods
push
enter
ret
lds
dec
loop
fsub
push
jbe
add
mov
and
push
sub
inc
repz
fwait
pop
aas
popf
inc
lods
adc
cld
adc
xor
in
mov
popf
stos
mov
mov
into
jne
mov
in
add
or
xchg
lcall
out
jle
ret
dec
ja
pop
popf
outsb
jge
add
jp
loop
inc
pop
cmp
mov
addr16
fisttpl
test
inc
pop
hlt
test
push
int3
in
in
arpl
jae
sub
ljmp
lret
fs
test
out
test
pop
or
js
sbb
mov
mov
fwait
mov
xor
sahf
out
and
mov
jnp
in
xorb
lods
test
lret
push
jmp
mov
cmp
add
inc
mov
test
and
imulb
lock
mov
xor
inc
test
pop
popa
dec
or
jg
pop
mov
push
sub
ljmp
pop
in
and
fcoms
dec
dec
xor
dec
push
orb
test
hlt
frstor
data16
movsb
jp
xor
pop
jp
in
and
lds
xchg
sbb
imul
into
jno
scas
shrb
imul
test
popa
aam
inc
jne
ret
mov
scas
push
out
inc
mov
test
inc
cmpsb
daa
mov
outsb
adc
repnz
add
xchg
enter
sub
aaa
push
cmp
jae
out
adc
sub
or
les
pop
test
mov
pusha
push
mov
xor
and
mov
and
cmpsb
xchg
cld
notl
mov
xlat
sbb
arpl
lcall
scas
push
pop
adc
repz
jo
jl
dec
stos
pushf
add
push
aam
xchg
shll
xchg
inc
pop
daa
dec
xchg
sbb
cmp
insb
ss
jge
xchg
jmp
cmpsb
mov
aas
aaa
outsl
mov
mov
lret
adc
rclb
imul
aad
lods
add
dec
jp
push
cmpsb
inc
mull
sub
mov
std
aad
pushf
jns
push
ljmp
jl
add
movsl
jnp
mov
in
ret
ret
sbbb
mov
out
in
fs
push
outsl
sahf
icebp
dec
pop
icebp
ret
cwtl
mov
and
push
notb
ja
xchg
sub
mov
popf
dec
cmp
add
inc
stc
jno
xor
hlt
mov
out
pop
or
or
sbb
outsl
sahf
dec
daa
inc
push
imul
mov
std
xchg
adc
push
add
lods
stos
shrb
inc
sbb
jne
mov
add
enter
xchg
mov
dec
xchg
mov
movsl
jmp
adc
lcall
ds
add
pop
aas
pop
sahf
outsl
sbb
jp
or
push
sub
xchg
call
aas
or
pop
inc
pop
into
xchg
and
daa
cmc
in
jp
fucomip
pop
icebp
sbb
add
out
pusha
pop
addr16
mov
std
mov
pop
test
mov
mov
xlat
xchg
and
stc
sub
lds
jne
lret
cld
jno
shlb
and
and
mov
jnp
sbb
mov
popf
lds
mov
loope
sub
daa
pop
daa
shlb
shr
stos
cltd
es
cmp
jp
add
scas
jle
sbb
sarl
sbb
dec
adc
sti
jp
xchg
jne
cwtl
fstl
cmp
push
mov
mov
insb
addr16
imul
fisubl
and
pop
mov
fs
sub
aas
cmpsb
ss
mov
jno
xor
add
or
sub
mov
in
fdivl
rcr
fwait
divl
loop
scas
add
xor
cltd
mov
fdivl
pushl
adc
push
popf
mov
xor
ljmp
inc
dec
pop
je
rcr
jae
orb
mov
into
sub
pusha
jl
cmp
test
cmp
outsb
rol
adc
adc
rcr
mov
xchg
in
push
pop
jmp
std
add
call
jns
sub
pop
fbld
jmp
imul
and
jo
outsl
pop
mov
mov
push
cwtl
nop
out
jle
lret
shlb
ffree
xor
sub
mov
jle
lea
cli
dec
dec
addr16
inc
and
js
sbb
mov
aad
fwait
push
mov
mov
mov
xlat
pop
pop
push
lcall
and
jl
adc
popa
pop
xchg
xchg
and
adc
mov
popa
and
jmp
les
fs
or
mov
xor
lret
push
aad
lea
push
andb
fdivl
mov
sbb
mov
shlb
sbb
sub
cli
std
fidivrl
dec
jmp
xchg
dec
mov
lea
and
or
inc
hlt
pop
adc
mov
jnp
outsb
andl
jne
ljmp
lea
in
shll
stc
les
add
sub
std
cli
jecxz
fadds
in
scas
pop
fs
sbb
aaa
cmp
fistl
mov
mov
rorl
jle
popf
jecxz
and
jge
mov
jns
mov
jle
movsl
pop
out
aaa
mov
cltd
fidivrl
add
loopne
cmc
mov
xchg
icebp
pop
nop
mov
sub
pop
js
jb
adc
pop
push
add
sub
xor
aas
ss
jno
int
mov
mov
test
mov
clc
jns
jb
sub
push
int3
in
movsb
setb
fnstcw
mov
push
dec
jge
ja
or
pop
repnz
sub
jne
cld
inc
cmp
and
jg
arpl
lods
xchg
ret
jle
xchg
testb
rorl
cmc
mov
stos
icebp
dec
je
ret
addr16
or
inc
leave
dec
sahf
rcrb
aad
pop
scas
lcall
iret
pop
xchg
xchg
dec
mov
jne
pop
pop
xor
faddl
add
cmp
push
enter
cmp
or
sub
xchg
dec
and
movsl
stos
mov
icebp
inc
stos
xchg
jle
add
or
cmp
jb
dec
lock
das
mov
xlat
xchg
cmpsb
lea
lock
pop
add
xchg
sbb
cmp
iret
popa
shrb
xlat
push
int
xor
fsub
popa
cmp
push
movsl
mov
adc
ret
rcrl
fisttpll
daa
outsl
js
push
vmovhpd
int3
sub
dec
test
clc
ja
in
xor
movsl
push
gs
push
jg
pop
dec
shlb
data16
push
sub
jo
repz
call
jae
inc
and
or
dec
repnz
orb
aad
xchg
mov
adc
pusha
mov
leave
cli
and
scas
dec
pop
add
ret
xchg
mov
push
cmpsl
aas
iret
sbbl
cmp
and
negl
xchg
out
xchg
shrb
mov
loopne
ljmp
fistl
sub
lods
pop
js
jnp
xchg
mov
inc
mov
xor
es
cmc
cwtl
ret
push
mov
lret
icebp
test
mull
test
arpl
stos
out
sub
jp
mov
mov
cmp
and
je
into
aas
test
mov
mov
jae
sub
rcr
xchg
sub
lret
cmc
mov
sahf
orl
pop
fwait
jbe
int
cs
pop
inc
int3
pushf
std
adc
test
aad
xchg
shrb
sub
mov
int
daa
sbb
fdivrs
push
push
and
lcall
adc
push
sub
leave
pop
pop
and
cmp
shll
jns
inc
inc
push
and
sub
cli
push
add
mov
push
imul
push
les
mov
movsb
inc
or
sbb
xchg
dec
in
daa
xchg
xchg
push
movsb
adc
movsb
cmp
les
sahf
add
xadd
fldt
xchg
loop
repz
int
pop
dec
push
cmpsb
dec
pop
cmpsl
repz
mov
loopne
pop
sarb
daa
dec
repnz
pop
out
add
scas
sub
insb
test
push
jle
subl
xor
repnz
or
mov
in
sahf
mov
pop
in
mov
inc
es
mov
cld
and
sub
xor
adc
jl
xchg
cmpsb
daa
lret
jl
stc
xchg
stos
pop
pop
pop
fwait
adc
mov
sub
sub
pop
lods
sub
mov
bound
adc
inc
dec
mov
movsl
xchg
jns
push
xchg
jnp
sahf
sub
mov
sub
and
inc
sub
lahf
xchg
jle
test
or
or
xor
pop
dec
scas
lea
adc
rcr
add
add
jmp
fwait
sub
add
fs
insl
aas
jp
jbe
aad
fisubrl
lcall
xor
adc
hlt
mov
cmp
sub
jnp
leave
je
sbb
or
sahf
icebp
aad
adcl
int
movsb
data16
mov
shlb
cs
xlat
mov
test
lahf
std
jp
mov
mov
test
shl
sbb
mov
ret
mov
ljmp
or
mov
cltd
imul
mov
inc
push
inc
cwtl
sbb
mov
stos
pop
and
test
ds
mov
inc
push
lcall
xor
iret
icebp
shrl
xor
out
fs
dec
psrlw
mov
mov
ret
mov
mov
jmp
sbb
test
pop
je
jmp
mov
sbb
sbb
adc
imul
inc
adc
les
fcmovu
mov
pushf
fwait
aas
ret
jmp
pop
imulb
jnp
sbb
aaa
sbb
rcrb
aas
mov
adc
mov
bnd
int3
mov
sbb
repz
jne
xorl
inc
cmp
cld
sub
dec
dec
mov
pop
ret
rolb
daa
out
sub
loop
out
insb
jge
and
push
xor
push
mov
fimull
fidivrs
in
or
or
bound
lret
aam
inc
sti
xchg
orl
push
cmpps
push
xchg
sbb
xchg
ja
jmp
adc
imul
lret
fcomps
push
sbb
mov
adc
xor
mov
mov
aaa
adcl
fisubl
pop
xor
jge
int3
sub
icebp
movsl
xchg
mov
out
cmpsl
in
dec
jl
cmpsb
dec
push
fwait
jl
imul
sbb
ret
and
push
mov
sub
adc
cmovg
aad
mov
dec
mov
jmp
cmp
lock
push
xchg
fstl
mov
sub
clc
mov
fimuls
mov
jne
mov
jbe
pop
fnstsw
jge
dec
inc
jp
aam
ss
pop
clc
arpl
sbb
sbbb
pop
enter
xor
iret
xchg
fsubrl
scas
mov
push
sbb
dec
imul
xlat
jno
bound
inc
popl
ds
push
les
push
addr16
adc
mov
mov
sub
clc
xchg
mov
cmp
sub
fidivs
testb
pop
xchg
sub
xchg
and
fwait
dec
stos
dec
xchg
add
dec
sbb
iret
mov
lds
mov
xor
adc
repz
xchg
popf
icebp
jmp
mov
call
les
pop
pusha
jb
dec
divb
imul
xor
xchg
sbb
iret
cmpsb
push
stos
sbb
std
inc
cmpsl
mov
cmp
mov
mov
mov
cmp
sbb
jb
mov
loop
repz
ficomps
jmp
add
es
jo
stos
cmpsl
out
cmp
repnz
dec
cmpsl
arpl
fcoml
shrl
popf
call
cmp
pop
mov
imull
dec
push
lcall
or
das
imul
and
cwtl
sbb
sti
mov
jb
push
test
and
ljmp
adc
xor
cmp
int
jae
lret
xchg
fwait
orb
mov
movsl
and
and
leave
jnp
adc
xor
add
aam
jb
lock
xor
repz
xor
add
xor
lds
test
push
call
sar
add
ret
lds
pop
mov
inc
mov
xor
dec
mov
fstpl
jle
sub
iret
or
sbb
dec
pop
dec
lods
mov
mov
in
inc
dec
sarb
adc
jmp
inc
push
sub
lahf
shlb
pop
andb
add
add
aad
push
sbb
xchg
push
adc
data16
pop
inc
dec
mov
sahf
jo
mov
mov
mov
pop
and
out
aas
push
mov
push
idivb
jmp
in
dec
adc
jge
xchg
jno
jnp
icebp
sub
and
fmull
push
in
add
and
jmp
sub
data16
xchg
jns
out
xchg
jg
jne
or
lahf
jb
lods
daa
push
lret
mov
push
mov
sbb
js
scas
push
xchg
pop
testb
js
mov
in
push
dec
add
xor
call
std
pop
lret
push
jle
add
cmp
cmp
movsl
faddl
rolb
jo
leave
add
sub
les
mov
adc
sub
test
mov
xor
sbb
lods
arpl
in
loop
pop
nop
gs
pop
movsl
icebp
dec
js
sbb
mov
and
icebp
imul
pop
fsub
rdmsr
or
or
in
popa
shll
test
mov
inc
loopne
dec
add
mov
or
mov
push
in
xor
pushf
mov
pop
or
adc
add
inc
xor
cmpsb
xor
jbe
dec
sbb
inc
sub
xchg
mov
outsb
dec
shll
mov
popf
jae
sahf
and
es
cld
and
insb
js
insl
mov
mov
add
sub
pop
cmpsb
iret
dec
mov
xchg
jne
or
fisubl
popf
out
jl
xchg
dec
dec
mov
add
int
mov
loop
xchg
mov
mov
jae
fdivs
lea
fdivr
jb
dec
jno
cmp
mov
cmp
loopne
cltd
data16
repz
std
xorl
lret
push
mov
mov
out
push
dec
or
mov
push
fs
mov
in
fstp
shlb
push
mov
cmc
sub
fcmove
mov
xor
push
rolb
sbb
sbb
xor
mov
pop
jg
out
rcrb
add
sbb
mov
movsb
aam
cmc
add
pop
out
push
aas
jns
enter
inc
mull
nop
iret
nop
loope
aas
jge
sbb
pop
std
popa
xchg
ret
outsb
cmp
jbe
sub
lea
jno
loop
pop
inc
fbstp
jmp
jmp
adc
jo
out
add
adc
popa
in
push
daa
xor
add
push
mov
imul
lret
xchg
cwtl
divl
repz
xchg
xlat
pop
push
lret
push
pop
shrb
ficoms
cwtl
lret
pop
jo
les
fidivs
cmp
jge
fdiv
xor
call
popa
push
jl
test
test
cmp
add
cmpps
and
and
push
jbe
and
lods
cs
pop
daa
cmp
int
push
lcall
out
mov
jb
or
dec
cmp
out
insb
mov
and
divb
lret
mov
jp
mov
lret
add
js
mov
adc
mov
jns
add
or
jne
ffreep
mov
nop
adc
in
jp
cmp
fidivs
and
mov
dec
test
mulb
lea
adc
mov
enter
mulb
aam
cld
shll
call
xor
cs
clc
shl
mulb
or
fidivrl
jbe
imul
testb
loop
movsl
mov
bound
mov
xlat
mov
xor
sbb
pop
push
mov
or
or
aad
mov
cld
mov
add
fs
cli
stc
and
nop
pushf
aaa
addr16
jle
sub
shrb
xchg
jno
bound
mov
dec
sti
call
push
inc
adc
ret
fiadds
stos
ljmp
mov
fsts
arpl
xchg
jne
and
lods
inc
mov
out
cld
add
js
adc
push
stc
fldenv
dec
or
je
ret
cli
xorb
or
rol
cmc
cs
in
jg
inc
xlat
or
ret
push
push
aas
adc
inc
sbb
pop
in
cmp
loopne
push
lret
jae
mov
pop
test
jl
or
xor
and
cmp
xor
popa
xor
sbb
push
xchg
or
sti
out
test
dec
std
jg
and
sbb
adc
jnp
mov
loop
data16
bound
sub
dec
add
push
in
dec
data16
cmp
lahf
inc
pop
mov
inc
aam
insl
das
lods
lahf
pop
dec
xchg
xchg
lods
outsb
mov
sub
js
cli
roll
and
pop
ljmp
sub
hlt
test
lock
pushf
cs
sbb
mov
pop
xchg
push
mov
dec
adc
lret
mov
fs
inc
jecxz
add
test
insl
cmp
sbb
cmp
jmp
lret
andb
pop
cltd
mov
cli
js
into
pop
cmp
out
in
outsb
xor
jnp
and
test
stc
cld
iret
insb
lret
in
fldt
xor
push
adc
jg
cmp
or
sbb
aad
mov
mov
sti
add
mov
pushf
movsl
pop
jge
mov
mov
jnp
mov
cmpsl
addr16
cs
std
out
jmp
cld
sbb
mov
iret
or
out
mov
movsb
std
mov
rcrl
cwtl
in
sbb
or
xor
add
sub
jne
bound
cmp
cs
adc
and
xchg
pop
or
je
jne
addr16
das
lods
adc
push
pop
add
xchg
fdivrl
loope
pop
out
lea
xor
cmp
pop
inc
cli
sbb
dec
enter
and
adc
push
xchg
imul
ja
cmp
inc
xor
loop
ja
sbb
lods
and
xor
inc
mov
cltd
xchg
setle
jl
incl
bsf
shll
xor
scas
imul
push
xchg
pop
jmp
inc
negb
int
inc
dec
push
push
bound
mov
push
arpl
inc
xor
enter
mov
inc
roll
pop
jae
pusha
jne
ret
lds
orl
inc
repz
in
inc
push
and
dec
out
test
sarb
xlat
sahf
bound
xchg
test
cltd
push
cmp
adc
xchg
dec
ds
inc
out
imul
fs
mov
testl
jecxz
and
fistpll
and
or
jo
rcrl
sbb
and
pop
stos
and
xchg
mov
dec
push
push
pusha
adc
push
sub
dec
mov
mov
fadds
cmpsl
fdivp
stos
pusha
ja
xorl
ret
xor
movsb
xchg
into
pop
jns
stos
add
fistps
pop
int3
test
dec
pop
bound
push
xor
and
nop
ja
lret
cmp
mov
jmp
mov
adc
movsl
cmp
push
xchg
xor
test
in
inc
inc
je
sub
cmc
popa
popa
mov
pop
stos
lcall
lods
cmp
lahf
stc
mov
pop
negb
add
xor
cmp
lcall
stos
cmp
nop
inc
jle
push
movsb
mov
fld1
pop
mov
mov
outsb
fildl
mov
push
lds
jmp
inc
movsb
sbb
lcall
mov
rcr
add
cmp
mov
pop
lret
pop
mov
xor
test
rorl
mov
mov
enter
jno
add
push
and
popa
loope
xchg
mov
adc
mov
cmpsl
jnp
inc
out
sub
add
cld
pushf
xchg
xchg
les
loop
test
jg
call
testb
xchg
dec
or
jle
call
mov
mov
push
xor
push
insl
pop
inc
jl
loop
aaa
fisttpll
lret
dec
int3
lods
int3
xor
test
xor
fwait
sbb
imul
push
dec
and
in
dec
sbb
push
xor
xor
scas
scas
push
out
sbb
add
dec
out
out
sub
or
lods
daa
push
adc
test
pmulhw
adc
sbb
lret
lds
push
jbe
cmp
stc
mull
jmp
mov
fistl
jo
jg
addl
gs
dec
xchg
addr16
mov
aad
xchg
lahf
in
push
das
ljmp
and
inc
sbbl
or
iret
dec
bound
ss
or
mov
loopne
push
pop
jl
mov
lods
mov
mov
push
call
popf
cmpsl
aad
dec
jg
mov
pop
popf
movsb
lcall
loop
jecxz
ljmp
pop
push
pop
or
jnp
inc
dec
mov
add
adc
inc
inc
adc
mov
sbb
dec
jl
xor
cmp
aad
xchg
in
ja
rcr
aaa
daa
int
add
mov
clc
adc
mov
dec
insl
pushl
adc
nop
jno
mov
inc
cli
imulb
cmp
cmp
cld
jecxz
push
push
sub
or
xchg
fsts
adc
pop
jle
cltd
cmc
hlt
rcll
icebp
xchg
cmpsl
cmp
push
out
lock
inc
aam
sbb
movsb
mov
dec
and
scas
fnsave
out
mov
sub
lds
fsubs
int3
sbbb
push
test
cli
lods
icebp
scas
sbb
bound
mov
in
push
xchg
or
xor
add
push
pop
dec
push
push
mov
stos
imull
adc
call
popa
rolb
cld
add
imul
popf
es
pop
cli
xor
sub
mov
cli
mov
insb
dec
icebp
in
jne
pop
jb
jo
mov
xor
dec
hlt
inc
ret
mov
stc
jecxz
fcoml
dec
mov
cmpsb
add
or
ljmp
pop
leave
gs
sbb
imul
mov
mov
aad
xor
out
pop
mov
rorb
push
in
sub
mov
insb
mov
imul
lret
adc
repz
clc
push
add
in
push
lea
scas
mov
inc
outsl
jp
jae
xadd
loopne
lret
jbe
imul
scas
cltd
into
iret
jne
sbb
inc
mov
push
fcomip
jmp
push
testl
xor
and
sbb
lea
ret
fstl
mov
mov
cmpsb
mov
gs
adc
push
pop
gs
clc
lret
lcall
jnp
push
or
test
frstor
mov
cmpsl
fwait
pop
scas
sbb
pop
push
les
xchg
mov
movsl
in
inc
test
mov
and
jns
xor
mov
popl
ss
test
cltd
popf
jl
jno
mov
out
sbb
ds
pop
inc
pop
shll
sub
sbb
scas
popa
xchg
faddl
mov
addr16
fstpl
jne
fs
addr16
xchg
push
xlat
out
mov
bound
aaa
mov
jl
fs
cmp
iret
xor
mov
scas
mul
movsl
xchg
xlat
dec
xchg
inc
int3
mov
cmp
cwtl
inc
ffree
add
cmpsl
rclb
ss
cwtl
lea
leave
ljmp
mov
pop
mov
scas
fsubr
into
es
add
test
lcall
and
out
fisttps
adc
xchg
out
sbb
sub
mov
mov
repz
push
cmp
ljmp
and
inc
lea
in
lea
addr16
div
xchg
cmpsl
mov
shlb
cwtl
and
sti
int3
and
dec
jae
add
push
je
out
in
jl
test
xchg
dec
add
and
and
std
push
ret
loop
pop
out
sti
inc
push
cmpsl
xchg
aas
cld
popf
iret
dec
and
and
mov
inc
xchg
and
mov
push
jb
popa
sub
js
cwtl
dec
mov
dec
jle
outsb
in
cmp
ja
cs
and
xor
inc
decl
enter
dec
pop
popf
mov
mov
dec
inc
mov
les
js
mov
scas
inc
inc
push
xor
pusha
outsb
xor
inc
fwait
stos
aad
xor
inc
add
jns
push
adc
add
add
mov
cltd
pop
gs
fbld
pusha
sti
sbb
sbb
sbb
inc
sub
jno
add
das
ret
inc
shll
cmp
push
cmpsb
and
movsl
cli
sbbb
cltd
xor
inc
test
mov
adc
mov
test
movsl
mov
leave
add
out
test
jmp
in
and
std
fisttps
ret
jb
or
loopne
jnp
jae
mov
repnz
imul
inc
aam
xor
loopne
and
test
loopne
loop
and
popf
std
pop
mov
les
and
bnd
pushf
hlt
jae
mov
mov
cmp
mov
rclb
loope
mov
mov
adc
xchg
adc
sbb
adc
xor
dec
xchg
mov
fwait
dec
mov
dec
or
roll
or
loope
xchg
cmp
or
dec
jb
enter
inc
push
shr
mov
push
pop
mov
flds
subl
call
xchg
int
xchg
xchg
cmp
pop
sub
push
pop
cli
iret
sbb
int3
mov
pop
push
sub
xchg
xor
movsb
or
pop
xor
sbb
enter
mov
outsb
pop
fwait
ret
lods
cmp
popa
mov
inc
test
rcrb
cld
je
and
xchg
mov
sti
jg
ljmp
push
scas
mov
sar
dec
sub
or
lcall
inc
cmp
aad
xchg
roll
jmp
adc
adc
adc
shl
in
pop
jp
sbb
cli
int
push
cmp
cmp
xor
push
addb
cmpb
inc
lods
lea
sbb
mov
or
js
and
mov
das
pop
movsl
les
cmp
push
mov
and
jno
and
mov
pop
push
rolb
dec
jne
aaa
pop
int
pop
add
arpl
push
mov
pop
cld
or
dec
cmpsl
mov
xor
and
dec
ret
outsl
inc
mov
push
out
adc
pop
decb
js
fnsave
sti
imul
push
mov
stc
jle
mov
and
lds
clc
jge
sub
xchg
add
xor
rol
push
fsubp
mov
push
out
push
clc
bound
lea
sti
mov
push
fwait
adc
mov
xchg
mov
lods
out
jns
cmp
add
mov
fwait
dec
sbbb
mov
daa
stc
arpl
xchg
shrb
xchg
cmp
stos
fcoms
loopne
xor
adc
imul
aaa
push
fists
enter
aaa
add
add
dec
or
popl
xchg
xor
jl
subb
lods
mov
pop
into
adc
aad
sbb
rcrl
cs
xor
adc
fildll
sbb
mov
fcomps
jns
lret
fldcw
push
mov
dec
scas
cli
imull
lcall
in
frstor
add
sbb
push
pop
or
adc
rorl
aam
in
cmpl
xchg
out
or
testl
int
dec
popf
or
add
and
outsl
push
sti
rolb
jo
loopne
inc
or
pop
test
jne
mov
mov
mov
push
outsb
mov
cwtl
inc
les
mov
insl
or
fisubs
push
mov
add
jbe
in
pop
gs
xchg
in
mov
pushl
xorl
arpl
das
js
fdivrp
mov
sbb
jg
out
lds
sarl
imul
mov
xlat
cmp
les
imulb
nop
orl
dec
mov
xor
aaa
jno
cmc
lods
inc
push
jg
xor
xor
pusha
adc
mov
inc
pushf
sar
mov
movsb
cmpsb
sbb
sub
sahf
xchg
repz
mov
mov
push
pop
jg
xor
xor
jg
iret
mov
pusha
lock
fsubs
push
mov
in
int3
or
push
pusha
sarl
pop
mov
xor
popl
mov
sbb
mov
jo
or
scas
icebp
imul
arpl
xchg
xor
pop
hlt
adc
xor
xor
jns
dec
cs
jl
adc
lret
push
ja
mov
pop
test
pop
pop
scas
push
jns
hlt
fnstenv
sbb
fcom
pop
repz
call
mov
shlb
adc
inc
jne
sub
test
dec
xor
dec
inc
repz
movsb
inc
icebp
jo
out
push
jns,pt
cmp
add
cmp
lret
sarl
mov
cmp
jae
dec
jno
dec
xor
aaa
cmpsl
into
jl
out
imull
lock
ret
test
out
hlt
sbb
lock
jmp
mov
repz
pop
repz
jb
fisttpll
movsb
fs
mov
push
pop
push
dec
push
movsl
dec
leave
bswap
dec
jmp
dec
mov
mov
jns
cmp
out
insb
pop
sbb
xchg
sub
ret
hlt
les
mov
daa
push
andl
dec
push
xchg
mov
leave
add
fimull
pop
sarl
rcl
das
mov
mov
and
jne
sbb
xor
punpckhdq
fucomip
inc
cld
enter
imul
loop
lods
sub
push
inc
das
xchg
in
push
cmc
scas
add
sbb
in
data16
sbb
fsubs
jp
imul
jns
mov
pop
pusha
add
adc
cmpsb
cmpsl
ljmp
iret
loop
jmp
and
xchg
xchg
je
push
cltd
out
adc
inc
es
data16
push
mov
movsl
mov
inc
repnz
sbb
dec
addl
enter
arpl
jp
adc
mov
ja
cmp
sbb
jecxz
push
mov
into
sbb
jge
out
adc
dec
das
popa
mov
cmp
inc
push
scas
jmp
xor
dec
imul
push
cmpsl
or
cmpb
mov
mov
clc
push
push
hlt
sub
cmp
aam
push
lds
or
cmp
push
ss
mov
out
aas
scas
mov
insb
xor
xchg
jb
xor
mov
cld
sbb
push
jb
enter
adc
sarl
ret
outsl
cmp
cmp
xchg
call
mov
aam
xchg
jb
ret
lds
ja
push
and
aam
dec
incl
jns
cs
arpl
push
mov
inc
adc
sbb
movsb
mov
jmp
add
sbb
test
push
push
jbe
inc
cmc
lret
mov
addr16
cmp
and
out
rclb
lods
shlb
jmp
pop
mov
inc
mov
lds
cmp
jp
adc
mov
mov
out
fidivl
sar
add
inc
jmp
es
cmc
mov
adc
or
popf
xor
aaa
popf
or
sub
xchg
xchg
ja
sub
mov
or
ds
es
adc
cmpsb
mov
movsb
cld
dec
sub
xlat
int3
xchg
sub
mov
and
std
out
dec
sub
inc
movsl
mov
adc
pop
enter
xchg
repz
mov
sub
sbbb
test
cmp
test
sti
xor
mov
lahf
clc
loop
sub
aam
inc
sub
aas
xchg
and
in
in
jae
btr
xchg
or
int3
push
cwtl
negl
cmp
adc
ja
mov
xlat
pop
sbb
pop
push
and
or
sub
test
mov
dec
fildl
repz
rcrb
cmp
pop
mov
inc
xchg
pop
mov
fdivr
int3
mov
mov
push
sub
fmul
mov
aas
xor
and
lret
xchg
sub
lahf
pop
or
ja
ret
je
cs
stos
add
pop
pop
mov
cmpsl
popa
sbb
adc
shr
popf
int
aam
adc
mov
outsb
mov
xchg
and
pop
pop
in
outsb
jns
sub
shl
stos
std
shll
incb
jb
stc
fdivs
dec
cmpsl
fsubl
jg
and
aad
push
or
scas
cmc
inc
popl
mov
adc
jnp
dec
pop
pop
dec
hlt
add
jnp
data16
sbb
sbb
add
dec
adc
rcrl
adc
stc
mov
popf
ss
xchg
je
jmp
popf
or
lods
add
xchg
fstpl
sub
dec
lahf
pop
pop
fsubl
dec
jg
cmpl
sub
imul
mov
jns
rcl
sbb
mov
fisubrl
dec
xchg
push
pop
hlt
shll
loope
std
and
and
enter
pop
inc
inc
pushf
adc
or
dec
lea
dec
dec
test
clc
int
test
adc
cmp
sbb
test
pop
cmpsb
cld
sub
dec
push
pop
in
sub
xchg
jnp
cmpb
fmul
xchg
das
ret
into
stc
fmull
dec
push
jns
xchg
sbbl
mov
lcall
fadds
sbb
out
cmp
aam
pop
xchg
sti
sub
movsl
push
imul
inc
jge
dec
int
out
mov
sub
insl
dec
arpl
mov
add
or
ja
scas
push
subb
clc
pop
adc
aas
and
fs
cmpsl
push
pop
lods
mov
insl
pusha
pop
cs
loopne
out
movsl
fndisi(8087
in
outsb
clc
aam
imul
mov
push
adc
orl
imulb
sbb
or
lcall
ret
lcall
xor
ds
dec
insl
xor
lea
rolb
negb
cwtl
pusha
mov
sub
cmp
add
shlb
push
mov
daa
inc
mov
mov
or
dec
mov
mov
pop
out
out
cmp
and
imul
stc
jg
es
cmp
outsb
ss
sbb
xchg
dec
jg
dec
xchg
popf
mov
movl
xlat
fs
out
ret
mov
clc
mov
test
cs
xchg
je
xchg
pop
fistl
pop
dec
sub
pop
xor
jmp
popa
inc
std
shlb
xchg
sbb
cli
xor
mov
adc
lods
adc
scas
movsb
or
sub
sbb
cmp
orl
and
dec
pushf
loopne
popf
xchg
and
push
fists
out
es
adc
xchg
and
adc
roll
jno
mov
inc
es
or
frstor
outsb
pop
aad
ret
sub
mov
cmp
arpl
jnp
inc
cmp
or
pop
adc
pop
mov
repz
cmpsl
lods
xchg
xor
pusha
sbb
mov
or
cmpsb
or
jae
aam
andl
stos
cld
mov
test
pop
out
xlat
sub
dec
imul
mov
xor
xor
inc
adc
lea
inc
fwait
iret
mov
push
push
loope
loopne
inc
jne
push
pusha
pop
jg
sbb
rolb
test
pusha
sub
inc
ret
or
push
punpckhwd
insl
or
movsl
gs
xchg
jnp
mov
dec
mov
xor
aam
dec
aaa
cld
cmpsl
in
push
ret
cmpsl
test
stc
or
out
mov
dec
bound
mov
adc
inc
pusha
sub
out
call
into
mov
std
stos
mov
aam
lods
mov
movsl
jle
add
add
lds
pushf
fwait
repz
jbe
push
jl
push
push
xor
test
jbe
repnz
xchg
dec
lods
add
adc
lods
adc
aas
aas
loop
push
mov
cmp
mov
mov
jno
cmp
outsb
lock
call
push
push
pop
xchg
mov
shll
mov
inc
test
mov
add
cmc
sbb
out
xchg
dec
pop
insb
stos
ret
dec
pop
push
jo
adc
sub
insb
pop
cmpsl
mov
adc
ljmp
ret
adc
popa
cmc
cld
mov
sbb
cmp
mov
xchg
ret
lods
xor
rcl
add
push
cmp
movsl
or
out
cmp
push
xchg
ss
shll
pop
pop
push
jbe
fcompl
fsubrl
lret
test
orl
and
je
dec
pop
cmp
popa
ljmp
dec
cmp
or
ds
mov
movsb
add
mov
mov
rcl
mov
cli
xchg
loope
mov
dec
jmp
xchg
cld
fwait
xchg
sahf
mov
add
fsubl
sbb
in
fxch
fnstcw
out
mov
lahf
notb
fs
xchg
out
push
cmpsb
shrl
sub
rcll
mov
jecxz
loope
mov
dec
addr16
jge
sbbb
lods
xor
mov
mov
aas
rcll
inc
mov
cld
scas
jle
loop
inc
inc
lret
push
movsl
aam
mov
or
iret
and
fldcw
int
push
setl
pop
pop
inc
out
dec
sbb
push
fidivs
jne
adc
out
lret
mov
mov
dec
shl
cmp
mov
mov
mov
push
mov
dec
sub
enter
mov
sbb
adc
pop
pop
xor
adc
mov
addb
jecxz
sub
xor
adc
mov
fwait
push
mov
jp
es
mov
fcmovb
jmp
jg
les
fs
mov
jbe
jmp
pop
lcall
cmc
xchg
or
mov
pusha
ret
ss
ss
mov
scas
fwait
rcl
rolb
out
and
icebp
in
mov
lahf
daa
out
and
dec
xchg
sbb
test
outsl
cmp
jae
fdivl
and
mov
scas
sub
sbb
rol
dec
ficompl
fidivrs
test
mov
dec
outsl
clc
mov
enter
test
xchg
insb
mov
sbb
xchg
cli
fisubrs
in
jmp
jne
sbb
cltd
xor
shrb
xor
pop
and
ja
imul
mov
inc
dec
outsb
idiv
push
lret
aam
cmc
or
jecxz
jns
fbld
add
adc
loopne
pushf
xor
je
sahf
andl
xchg
xor
fwait
dec
jno
jge
stc
adc
arpl
scas
pop
xchg
or
decl
xor
test
add
mov
je
repz
and
sub
cmp
pop
mov
retw
fldenv
adc
icebp
mov
mov
int
cmp
int
pop
bound
nop
dec
inc
shl
sub
and
shll
decb
xor
iret
sub
daa
ret
jbe
sub
frstor
jns
mov
cmp
adc
dec
ljmp
and
dec
push
fnsave
rcl
not
fidivs
nop
fsubr
scas
fisttpll
sub
das
lods
jmp
roll
adc
fcmovb
adc
or
pop
push
hlt
lcall
adc
sub
adc
fs
mov
fadd
sub
dec
inc
cld
les
dec
or
xor
lea
mov
xchg
inc
push
movsl
in
loope
rclb
jbe
xchg
lea
sbb
sub
mov
cmp
or
into
test
lret
lahf
lcall
inc
movsb
divl
jl
sarl
jg
test
sbb
cmp
mov
ja
daa
movsl
mov
js
or
cmpsb
ljmp
xor
pop
push
adc
xchg
rcrb
xchg
sub
scas
ja
cltd
les
out
hlt
cmp
icebp
push
adc
xor
cmp
xor
icebp
jb
xor
sub
mov
cmpsl
push
xchg
jmp
inc
in
fdivrp
jg
cs
test
lock
shrb
jo
inc
cmpsl
add
add
rolb
push
int
mov
lods
push
sti
mov
dec
and
dec
xlat
mov
push
xchg
add
cmp
mov
test
cmp
popf
mov
xchg
pop
stos
inc
fidivrs
and
lret
cmc
push
and
popa
loope
daa
sub
mov
ficomps
shlb
fmuls
lret
es
xchg
xor
mov
and
lock
ljmp
fdivr
xchg
xorb
xor
ljmp
fwait
repnz
repz
mov
es
repnz
adc
fnop
test
fcmovnbe
into
mov
push
ja
push
das
repnz
test
mov
out
xchg
add
clc
jg
adc
rcrb
enter
into
mov
mov
bndstx
out
lret
lock
push
fcoml
rclb
jmp
lret
hlt
dec
jecxz
jmp
fs
out
loop
dec
shr
test
push
pop
dec
fsubrl
lds
xor
idivb
int
ror
push
adc
cwtl
lcall
mov
mov
mov
test
mov
and
sub
sub
sbb
mov
lea
mov
pusha
sub
aad
cmp
mov
bound
xor
rcll
push
out
iret
inc
aaa
cmp
arpl
pusha
xor
mov
cmp
sbb
in
push
jp
mov
pop
pop
inc
pop
decl
jl
mov
mov
adc
dec
out
addb
stc
mov
fidivs
mov
test
lcall
jne
ja
in
jnp
xor
insb
sub
push
sub
fnstsw
add
inc
pop
jl
push
divb
adc
sub
leave
cltd
or
cld
mov
testb
pop
pop
loope
imul
inc
insb
or
adc
jnp
addr16
sbb
dec
mov
inc
dec
cs
add
push
popf
sub
lret
sub
dec
lods
outsb
add
pop
dec
hlt
rdmsr
in
ret
dec
sbb
adc
popf
dec
cwtl
add
and
sub
xor
sub
sub
rep
repnz
xor
stos
cltd
sub
jmp
pop
cmpsl
imul
out
fnstenv
pop
pand
in
aaa
mov
mov
pusha
cltd
adc
ret
aas
loopne
mov
insl
mov
jne
in
and
imul
movsb
push
add
mov
lret
jmp
arpl
mov
dec
mov
sbb
js
int
test
sbb
popf
fnstcw
loope
mov
stos
fbstp
dec
adc
cmp
or
inc
movsb
push
data16
in
enter
movsl
ficoml
jg
inc
aam
loopne
jbe
cli
je
fs
sbb
mov
add
in
xor
std
add
mov
sub
or
xchg
dec
repz
negl
ret
cmp
movsl
call
mov
sbb
je
mull
mov
in
roll
es
xchg
dec
adc
test
xor
es
add
jle
mov
xchg
imul
mov
repnz
mov
or
je
cmc
mov
xlat
repz
mov
cli
sbb
fisubl
popa
rcll
cwtl
nop
push
pop
loopne
jb
or
add
xchg
shl
insl
in
sbb
mov
repnz
jno
or
xlat
sub
test
and
mov
aas
dec
jmp
xchg
xchg
pop
test
add
mov
mov
inc
leave
and
dec
xor
leave
mov
mov
add
push
imul
pop
push
xlat
cmp
sub
enter
mov
mov
and
mulb
negb
repnz
push
or
aam
in
mov
into
mov
insb
mov
scas
xchg
aas
fnsave
loopne
cmpsl
fs
xchg
push
stos
sub
mov
lahf
ljmp
inc
iret
inc
inc
or
aad
cwtl
mov
jge
bound
mov
cmpsb
shlb
mov
lcall
push
jp
cwtl
inc
out
add
cmp
into
fcompl
in
mov
jne
lahf
jbe
dec
sbb
xchg
lea
pusha
mov
xor
mov
mov
cmp
incl
jl
push
adc
shll
cmp
imul
std
adc
sub
sbb
jb
jnp
mov
jnp
sarb
xor
in
jne
in
stos
and
enter
iret
hlt
loope
gs
xor
jl
jno
and
movsl
out
pop
xchg
out
xchg
int
cmpsb
jmp
test
inc
and
pop
call
shrb
mov
push
dec
mov
int
dec
or
or
in
mov
sub
sbb
hlt
cmpsb
pop
dec
je
in
mov
repz
int
mov
jae
add
xor
pop
pop
jmp
sarb
push
pushf
dec
jl
sbb
dec
push
ret
in
out
and
add
xorb
sbb
lods
aad
cmp
mov
ret
scas
test
ds
sub
add
les
jge
pop
inc
nop
add
andl
daa
ret
add
xorb
add
inc
fcomp
stos
testl
push
decb
xor
adc
dec
jbe
jle
dec
mov
jge
les
into
scas
addr16
add
lods
ret
add
fmuls
xchg
mov
xchg
cld
add
mov
mov
cwtl
daa
cmp
cmp
mov
inc
icebp
imul
mov
push
adc
jns
mov
mov
test
sub
add
repnz
add
sub
adc
out
ds
daa
cs
or
jmp
icebp
aas
stos
dec
xchg
xlat
sub
into
dec
jns
test
mov
or
std
adc
int
add
sub
bound
sbb
inc
dec
jae
mov
xlat
jge
ret
test
mov
jne
mov
push
push
xchg
sbb
shlb
es
shr
cltd
adc
loope
or
cmp
pop
jmp
add
aaa
shl
pushf
lods
dec
xor
lock
lock
push
lret
and
xchg
mov
xchg
mov
xor
pmullw
mov
jae
sbb
add
stc
das
hlt
pop
jb
ss
push
sahf
jg
and
ja
pop
clc
xchg
aam
bound
pop
iret
sbb
rolb
mov
push
shll
sbb
or
int
xchg
push
insb
into
mov
scas
fcmovnb
lods
aaa
sbb
push
mov
xor
mov
push
pop
int
je
leave
mov
mov
adc
int
daa
into
pop
inc
es
sbbb
pop
mov
push
dec
cmp
loope
or
js
lods
pusha
sub
int
repz
push
xor
movsl
sbb
cmp
add
cmp
jl
jl
dec
lcall
dec
jmp
notb
pusha
lods
fs
dec
outsl
call
dec
cmp
shlb
xchg
sbb
add
xor
and
jp
jb
mov
test
cmp
xchg
int3
cwtl
jbe
pop
xor
inc
dec
cmpsl
mov
mov
hlt
std
stc
jmp
mov
mov
add
lods
add
pop
ret
aam
stos
mov
pop
popf
adc
ficoml
dec
inc
or
or
pop
add
fs
add
or
mov
jb
andl
out
lock
sahf
pop
int
xor
push
stc
lods
pop
xor
add
cmp
pushl
xchg
mov
scas
xor
mov
ss
push
fdiv
mov
push
mov
flds
pop
cmpsl
and
and
mov
push
fstl
faddl
push
mov
add
xor
jns
mov
and
outsb
or
pcmpeqd
push
insl
pop
lcall
movsl
push
cs
mov
test
nop
and
adc
jecxz
pop
pop
pop
data16
jp
in
in
lods
jae
cmp
jns
loope
and
xor
push
mov
call
cmp
push
and
fcmovu
dec
push
addr16
xor
jbe
mov
sbb
movsl
jbe
push
test
add
imul
rol
pop
sub
mov
rcll
lcall
fstps
nop
rorb
fs
movsl
xchg
int3
dec
jne
call
rorl
fbstp
nop
mov
sub
arpl
imul
mull
aad
not
push
hlt
xor
fistl
sbb
leave
cmp
icebp
cli
xor
pop
div
cwtl
ret
fdivrs
andl
fcmovnb
lods
dec
icebp
inc
jle
inc
insb
adcl
adc
fs
add
lock
xor
and
loopne
jp
sbb
stos
adc
jle
adc
or
daa
inc
push
fisubl
fs
outsl
add
pop
or
adc
fbstp
lcall
xor
add
jg
pusha
push
xchg
repz
call
sub
pop
mov
xchg
imul
rcrl
jnp
mov
or
add
mov
jl
sub
jae
test
jno
shrb
inc
aad
out
push
and
shll
out
ret
add
pop
inc
mov
sbb
dec
fstl
fimull
in
sub
xchg
out
sub
dec
scas
xchg
sahf
or
mov
imul
nop
sub
test
xlat
call
inc
mov
lock
in
pop
cmc
adc
inc
mov
je
xchg
or
mov
andl
ds
lret
mov
dec
dec
gs
mov
fsubs
hlt
cmpsl
mov
jecxz
fwait
sarb
ds
mov
mov
fmull
and
jmp
mov
dec
aas
scas
xchg
push
fsubl
gs
jo
or
lahf
xchg
pop
xor
repz
cltd
sub
insb
dec
ss
decl
xchg
enter
xor
push
or
mov
cwtl
scas
inc
sub
mov
jecxz
bound
arpl
sarl
lea
int
out
repnz
outsb
sbb
loope
jmp
popf
repnz
jae
or
fsubs
add
adc
mull
jae
leave
lret
mov
clc
bound
stos
imul
xchg
or
push
xchg
push
fidivl
push
leave
jmp
and
cmp
pop
pop
pusha
das
and
cli
mov
push
sbb
inc
xlat
in
or
adc
rcrl
adc
imul
inc
add
out
sahf
mov
popf
xchg
or
jecxz
bound
push
popa
lods
jecxz
rolb
cmp
push
icebp
sbb
icebp
mov
or
xor
out
rolb
sbb
enter
hlt
mov
sbb
dec
fsubs
jmp
popl
pop
out
enter
xchg
jecxz
xchg
mov
in
imul
or
mov
cwtl
iret
leave
push
data16
imulb
rcl
fwait
imul
scas
jecxz
xchg
adc
dec
jle
shlb
xchg
xchg
and
loop
or
push
dec
mov
sbb
xchg
lods
pop
dec
xchg
addr16
add
test
mov
mov
lret
scas
or
cmpb
mov
jb
adc
enter
jmp
cmp
sub
add
addr16
jmp
adc
in
mov
push
xor
mov
out
dec
outsl
pop
dec
pop
jae
leave
push
enter
push
lock
sub
out
mov
addr16
jl
imul
ss
pop
repnz
or
mov
popf
jge
pop
cltd
jbe
pop
mov
cmpl
pop
pop
xchg
and
or
fstpt
xchg
cmp
add
jo
adc
sub
add
nop
scas
cmp
adc
shr
sub
xchg
shld
call
sub
or
hlt
out
daa
push
outsb
pop
ss
lret
push
mov
std
aaa
imul
add
fistpll
cmp
lcall
shll
es
add
cmp
xchg
daa
sbb
fldenv
dec
fwait
shrb
fscale
pop
and
xchg
pusha
pop
sti
and
test
inc
cmp
inc
or
lock
insl
stc
xor
pushf
adc
sbb
aad
cmp
dec
lds
popa
push
jae
adc
mov
fs
inc
mov
mov
repz
xlat
pop
xor
xchg
pop
mov
andl
outsl
insl
popf
fcoml
lds
cli
sbb
cmpsb
add
and
fst
cmpsl
jge
xor
xor
xchg
imul
cmpb
lret
pop
mov
stos
sub
and
xchg
sub
arpl
adc
fstpl
subl
test
ja
xor
push
lock
mov
push
xlat
popf
in
dec
jl
fnstcw
push
pop
scas
outsb
popa
ret
jnp
xor
sbb
ret
cs
fwait
adc
sbb
pusha
push
pushf
inc
rcll
mov
dec
pop
and
js
push
xchg
in
scas
mov
xchg
jg
hlt
sti
iret
je
add
mov
loopne
jb
push
incb
ficomps
xchg
xchg
fsubrl
ja
cmp
bound
push
xor
mov
lea
pop
dec
fcoml
shll
push
jbe,pn
add
push
sbb
dec
mov
and
push
mov
insl
daa
adc
mov
cmp
cli
movsb
addr16
and
orl
cmp
jecxz
enter
scas
cmpsb
xor
loopne
mov
jnp
test
movsl
pop
repz
test
mov
add
push
stos
arpl
jb
dec
push
gs
add
popf
out
adc
out
mov
je
mov
int
or
rep
data16
aam
mov
and
std
add
pop
jno
stos
cmpxchg
pop
and
push
scas
les
pop
push
out
lcall
js
icebp
sbb
push
push
mov
inc
test
les
rcl
les
sbb
test
loop
lahf
pop
imul
push
and
mov
dec
xchg
xchg
or
ss
data16
xchg
mov
inc
fsubrs
repz
adc
xchg
jbe
fstps
xor
leave
and
test
in
inc
cmc
and
dec
mov
jb
loopne
mov
mov
adc
jns
or
aaa
pop
mov
aam
incb
in
push
xor
rcll
sti
add
pop
shll
sbb
and
mov
ja
shll
pop
and
gs
add
push
popa
into
push
lods
sub
dec
scas
mov
cmpl
xchg
int3
lcall
or
incb
push
cmp
inc
dec
cmp
aam
lret
fadds
iret
push
dec
mov
movsb
dec
inc
cmpsb
push
or
out
loop
incb
xchg
inc
inc
mov
nop
loopne
ja
and
je
push
loopne
mov
and
jb
push
insb
fcompl
add
stos
adc
and
or
stc
shll
pop
movsb
les
xchg
push
dec
pop
push
mov
jae
mov
gs
aad
rorl
pop
inc
cmp
cli
jne
addr16
push
mov
in
sahf
xor
cmp
jmp
loope
mov
inc
xor
xor
enter
mov
shrl
call
mov
xchg
fcoml
cmp
shrb
mov
out
dec
repz
clc
push
and
or
xor
into
xchg
xchg
aam
std
dec
aaa
cmpsl
stos
xchg
mov
pusha
jmp
xor
iret
decb
sahf
mov
sub
faddl
dec
dec
push
push
pop
dec
fistps
mov
jmp
fs
adc
sbb
cld
stos
jg
inc
pop
push
pop
mov
aaa
dec
sub
xchg
je
xor
ret
imul
mov
fisttpl
call
or
int
ficoml
leave
sbb
mov
sub
mov
imul
xchg
sarb
inc
fst
or
add
leave
leave
mov
push
pop
lret
push
loopne
out
cs
jbe
pop
pop
mov
xchg
scas
jle
repz
inc
scas
mov
sbb
mov
mov
insb
dec
hlt
mov
jmp
outsw
jo
xchg
xor
fs
adc
push
dec
ss
dec
mov
adc
pop
sbb
mov
lahf
dec
jno
push
sbb
jle
xor
inc
es
cmp
gs
outsb
repz
fstpl
pop
adc
push
mov
lds
sti
add
jno
stos
data16
mov
dec
add
sub
push
adc
inc
test
add
test
cli
movl
cmpsl
add
adc
inc
mov
xchg
nop
into
dec
cmp
test
in
test
and
xor
add
aas
idiv
cld
mov
mov
les
mov
das
fmuls
mov
mov
cmp
push
xor
idivb
enter
data16
addr16
xchg
xor
xchg
push
mov
sbb
in
fldcw
adc
stos
les
mov
cmp
cmp
pop
jno
sbb
pop
lahf
mov
iret
add
mov
js
jo
scas
loop
ret
scas
stc
insl
cs
lahf
shll
push
out
sbb
add
shlb
int
outsl
aam
lock
cltd
cmpsb
mov
push
fwait
sbb
dec
push
inc
dec
and
mov
sbb
repnz
fidivrs
mov
jle
and
repnz
add
iret
add
dec
repz
into
pop
out
loop
jmp
mov
pop
jb
loopne
loopne
pushf
mov
test
out
xor
nop
popf
aas
sbb
or
stos
sahf
movsb
adc
add
loop
loope
stc
das
push
stc
inc
mov
add
jae
movsl
int
cmp
cmc
jnp
mov
les
into
mov
in
xor
test
mov
push
bound
das
nop
jge
jnp
mov
cmp
xor
pop
pop
sub
fistps
sbb
mov
push
push
adc
and
fscale
jae
divb
cmpsl
dec
fldenv
addr16
cltd
pop
std
outsb
testb
xchg
dec
jne
int
pop
xor
pop
cmpsb
lcall
enter
jmp
jmp
jmp
or
test
push
sar
xchg
or
and
mov
cmp
or
jo
mov
jecxz
repz
xchg
cltd
dec
xor
or
sbb
pop
inc
fstps
pop
push
pop
adc
fwait
lahf
cmp
out
push
push
mov
ret
lock
lds
push
push
lcall
repz
push
mov
xchg
call
jb
mov
int3
pop
stos
fnstcw
lods
xchg
mov
jl
cmp
rcrb
mov
xor
cli
leave
movsb
push
jb
ficoms
ja
bound
sub
movsl
loope
inc
push
jae
cld
daa
inc
dec
sbbl
xchg
push
pop
mov
or
divb
mov
gs
loope
mov
mov
mov
jns
jno
mov
imul
xor
push
gs
xchg
cmp
notb
sub
fwait
jmp
lahf
and
cmp
shl
or
sub
xor
mov
dec
imul
aaa
lock
dec
rolb
ret
rcr
dec
fcmovnbe
lcall
xor
push
push
mov
pop
mov
hlt
mov
and
ret
repz
cmp
jnp
push
xlat
sbb
out
movsb
push
and
aad
jne
or
aas
out
fcomps
das
mov
sub
into
pop
dec
xlat
fstps
sahf
ds
mov
jecxz
ficoms
int
dec
adc
adc
inc
inc
mov
mov
movsb
imul
add
fwait
lea
negb
jno
sub
in
jbe
pop
fmuls
xchg
sbb
ficomps
sub
lods
fs
lods
ds
arpl
insl
fwait
pop
into
addr16
fldt
push
xchg
sub
mov
jp
mov
out
push
in
jb
mov
push
sarl
ss
jge
pop
xchg
pop
and
fildl
out
jno
pop
or
cs
mov
and
dec
jnp
pop
clc
mov
out
sub
nop
or
push
sub
push
dec
sahf
xchg
loopne
pop
xor
ret
cmp
dec
jle
mov
clc
lds
cld
iret
fiadds
push
lds
popf
xor
popa
js
or
xchg
mov
out
into
jmp
xor
or
shll
cmp
test
cltd
imull
call
test
in
push
cmp
jecxz
adc
cli
pop
lret
lret
into
inc
rcl
xchg
iret
addr16
pop
cli
cs
fs
sbb
mov
and
sahf
sbb
or
xor
out
sti
orb
dec
mov
mov
mov
xor
adc
inc
ds
add
fildll
repnz
pop
jns
mov
into
fidivs
lret
pop
or
out
clc
mov
lea
xchg
jnp
dec
pop
ja
jl
out
cmpsl
sti
sbb
stos
rclb
insb
jbe
jl
mov
inc
pop
xchg
stos
adc
scas
fwait
xchg
cmp
fnsave
out
sbb
outsb
jge
and
call
pop
jg
dec
arpl
sbb
hlt
je
fiadds
das
add
sub
dec
dec
adc
jmp
mov
and
lret
pop
cmp
je
push
pop
movsb
icebp
push
pop
outsl
mov
mov
lcall
pushf
in
movsb
sub
cmp
mov
pop
cwtl
xor
lret
xchg
scas
flds
ffreep
lret
fcompl
add
stos
inc
sbb
movsl
xchg
loopne
pop
pop
push
jmp
or
adc
xchg
cltd
adc
lock
std
setge
push
push
in
sti
cmp
jle
ss
sti
mov
shll
stos
cmp
mov
and
loope
add
add
dec
inc
fldenv
mov
mov
pop
icebp
mov
andl
pop
je
mov
mov
push
leave
push
push
into
and
lds
fmuls
cli
in
jne
or
fistps
jmp
enter
mov
mov
adc
fsubs
rdtsc
xchg
jns
add
test
mov
mov
sbb
push
sub
sub
cmc
mov
push
loopne
in
xor
sbb
adc
pop
or
into
sbb
popf
mov
pop
fistpl
jp
in
test
outsb
xchg
dec
fcoml
cld
sub
inc
cmpsb
bound
mov
jle
sbb
xchg
jg
mov
xchg
loop
notl
push
push
xchg
mov
iret
inc
lret
or
fsubp
xor
jb
testl
and
fadds
dec
lock
rorl
adc
lock
in
xchg
enter
rcl
and
fwait
jmp
mov
nop
cmpb
pop
pop
ficomps
lods
mov
ljmp
xchg
mov
mov
or
jp
int
mov
and
mov
stc
push
daa
cli
jo
rcrb
jg
iret
clc
jbe
outsb
mov
dec
sbb
data16
xchg
pop
cmp
or
lcall
daa
mov
pop
mov
mov
ret
js
stc
adc
xchg
enter
adc
pop
cmp
js
or
fmuls
inc
or
cli
push
jle
into
push
fiaddl
jle
xlat
test
ljmp
and
inc
push
in
ss
rolb
add
aam
lds
jmp
ds
add
inc
mov
inc
mov
jge
push
adc
sub
pop
dec
insb
fs
sbb
and
mov
dec
cltd
adc
fdivp
adc
clc
cli
xchg
lods
ss
mov
jno
cmpsb
mov
int3
lret
cmp
fwait
addr16
out
stos
in
mov
sti
movsl
dec
mov
lret
mov
mov
mov
pop
cmp
jecxz
ds
ds
imul
pop
sbb
stos
stos
in
jecxz
xor
test
aaa
sbb
pop
cld
push
xor
push
adc
ja
sahf
xlat
inc
mov
lret
xchg
sbb
pop
or
pushf
out
mov
lahf
je
lock
fnstenv
fmull
jl
xchg
mov
jb
push
xchg
lods
into
push
pop
or
mov
fs
sub
xor
cmpb
xchg
les
enter
jno
andl
push
inc
mov
dec
lcall
pop
fidivl
ljmp
xor
jb
add
adc
test
aad
loop
fdivrp
xchg
cmp
movsl
add
jno
pop
pop
add
int3
stc
push
xorb
test
lds
sub
data16
mov
movsl
jmp
cmp
jge
add
push
stos
push
leave
inc
repz
push
lds
pop
cld
pop
repnz
stc
shlb
cmp
daa
push
adc
xor
sbb
lds
pop
adc
fimull
imul
lret
stos
out
mov
ret
mov
ja
mov
adc
outsb
cmc
cld
mov
out
dec
mov
cs
cmp
nop
clc
iret
pop
movsl
ror
or
and
push
mov
fldl
out
jmp
mov
ds
adc
not
and
sbb
mov
sbb
sti
icebp
loopne
dec
add
jp
mov
into
mov
int
xchg
or
in
sbb
or
dec
pop
or
imul
lcall
fs
push
inc
scas
mov
cmc
mov
mov
sbb
xchg
or
lea
fisubrl
fildll
inc
or
rcll
clc
lds
adc
inc
shlb
in
sbb
inc
push
cs
shll
sbb
push
or
popf
popa
rolb
add
push
movsl
mov
ljmp
xor
jo
out
mov
sti
bound
cwtl
mov
subl
jno
pop
pushf
pop
ja
lret
nop
cmpsl
flds
xor
les
outsl
mov
je
test
mov
mov
sbb
jae
call
adc
test
fsubr
and
inc
lcall
dec
jns
stc
bound
fnstenv
jo
add
xor
push
loop
outsl
xchg
mov
sub
lock
das
into
pop
push
into
jg
add
jae
lahf
aaa
inc
stc
shlb
stos
mov
icebp
jl
mov
inc
sub
fcoml
pop
mov
inc
push
into
mov
aam
mov
test
xor
inc
into
shll
cmp
shll
and
xchg
cmpsb
jle
in
shlb
cmpsb
and
fcmovu
push
xchg
sarb
cld
mov
enter
sbb
inc
mov
sbb
mov
adc
jnp
xchg
aaa
push
lea
xchg
mov
int3
lret
mov
stos
sbb
add
hlt
jecxz
mov
or
popa
push
lret
jecxz
loop
fdivrs
fwait
or
test
fs
jae
pop
mov
popa
aam
daa
cmc
loopne
push
dec
jb
outsl
mov
mov
xor
sub
stc
mov
push
sbb
push
cmc
adc
jp
xchg
push
jecxz
mov
push
test
mov
cmpsl
dec
push
inc
mov
and
popa
shll
es
stos
cmp
lret
and
fs
push
inc
fcmovnb
aas
dec
pop
fdivr
adc
xchg
mov
js
popw
sub
mov
bound
xchg
outsl
subl
cmp
push
cmp
xlat
xchg
push
inc
mov
mov
daa
je
mov
je
jo
lods
mov
mov
lea
inc
idivb
lea
jmp
shll
ret
mov
mov
adc
push
xchg
mull
stc
jns
iret
xor
imull
hlt
int
stos
adc
cli
imul
adc
inc
add
adc
outsl
out
ja
repnz
rdmsr
jg
pusha
bound
inc
addr16
jne
into
xchg
jno
ret
hlt
fidivrl
or
inc
mov
inc
mov
popa
and
mov
data16
dec
bound
jge
jmp
cmp
jns
inc
je
shr
fsubp
sub
enter
mov
mov
dec
leave
lret
mov
ljmp
cmp
xchg
int
mov
lcall
scas
iret
inc
imul
sub
daa
dec
test
and
jno
sarl
mov
leave
push
xor
fdivs
xchg
je
pop
and
inc
int
mov
sub
adc
and
mov
sar
xchg
mov
sub
xchg
sahf
movsb
mov
out
xor
repnz
xor
pop
xchg
popa
lahf
push
mov
test
ljmp
lret
mov
fstpt
hlt
call
pusha
inc
je
add
add
aaa
and
cmc
mov
arpl
sub
and
mov
aas
pop
ss
xchg
cwtl
xchg
jbe
mov
or
mov
jle
xchg
add
push
aad
or
xchg
push
rorb
jl
sub
adc
loope
mov
cld
out
cwtl
sbb
add
cld
or
out
ret
jmp
mov
rcrl
mov
lods
jo
movsl
addb
jbe
pop
mov
adc
movsb
inc
xor
fs
jb
xchg
mov
fnsave
xchg
out
xor
pop
xor
xchg
out
or
push
mov
enter
ret
sub
inc
pop
stos
jno
push
dec
mov
xor
popa
int
int3
dec
pop
inc
scas
popa
je
cmpsl
pop
pop
imul
xchg
fistl
das
sub
fists
int
ficomps
cld
push
loop
mov
jcxz
test
sbb
push
js
push
push
js
xor
fwait
icebp
mov
pop
loop
cmp
call
orb
outsb
or
mov
test
xor
jbe
cmp
dec
jae
test
cmc
aaa
repnz
ror
repz
pop
sarl
xchg
push
mov
aaa
sahf
xchg
in
negl
xor
xchg
mov
into
lcall
imulb
xor
inc
xor
es
inc
test
sahf
loopne
push
loopew
cmpb
xchg
inc
xchg
xchg
add
mov
xchg
cmp
jl
in
pop
popf
aas
pusha
ret
addr16
pushf
fbld
repnz
sarb
dec
out
xchg
cmpsb
in
jns
adc
mov
fwait
push
hlt
cld
and
repnz
lock
mov
inc
xor
jp
lods
add
adc
mov
mov
cmc
mov
pop
inc
push
xchg
int
std
mov
xchg
jae
cmpsb
icebp
fs
lods
mov
pop
gs
mov
movsl
jmp
cmpsl
arpl
imul
mov
into
inc
mov
xchg
cltd
push
inc
mov
jne
pop
lret
push
cltd
adc
sbb
mov
cli
jns
mov
ret
xchg
add
rolb
jle
xor
iret
in
ljmp
or
into
pop
xor
mov
sbb
dec
dec
pop
xchg
sahf
xlat
pop
lret
outsl
lcall
insl
repnz
mov
ret
aam
out
mov
mov
mov
call
out
mov
bound
pop
jg,pt
mov
add
and
cs
mov
out
mov
pushf
ret
push
cmp
mov
dec
xchg
cli
dec
arpl
pop
enter
pop
pushf
xchg
pop
mov
cmp
pop
mov
int
scas
dec
pop
fldl
int3
sub
ss
ret
add
daa
mov
pop
jb
inc
in
adc
mov
test
jp
in
jmp
ja
call
mov
inc
cld
std
add
lods
jb
popa
stos
inc
daa
fdivrl
sbb
or
dec
sub
xchg
inc
mov
jns
mov
aas
test
mov
sbb
adc
aaa
test
sbb
xor
hlt
inc
in
jno
lahf
insb
push
xlat
aam
push
int3
stos
stos
popa
arpl
sub
es
lcall
add
pop
dec
outsb
xchg
dec
xchg
bound
mov
dec
push
xchg
pop
push
mov
movsb
outsb
mov
adc
aaa
add
movsb
clc
pop
inc
ja
sub
in
lahf
sbb
roll
popf
inc
cltd
xor
cmc
mov
sbb
ds
movsl
push
ret
jae
cmpb
mov
sbb
sub
or
imul
dec
outsb
cmpsb
das
xchg
shll
std
cli
xchg
cmp
leave
jo
faddl
mov
or
rolb
sub
pop
aam
mov
mov
fs
cmc
mov
cmp
pop
jp
mov
hlt
mov
inc
insl
jg
dec
ds
negb
xchg
fsubl
mov
lds
jp
mov
push
cltd
mov
outsl
popf
shr
in
outsl
dec
lret
mov
cmpl
inc
es
movsb
out
imul
jle
test
sbb
sub
inc
jg
cmpsl
mov
lret
dec
mov
push
arpl
inc
mov
out
imull
mov
jne
mov
mov
out
push
dec
dec
add
dec
ret
sub
sbb
lret
shrl
push
fmull
or
lea
xchg
ds
std
xchg
xor
divb
movsb
fdivrs
push
push
dec
push
add
xor
jo
jmp
mov
in
insb
xchg
je
cmp
icebp
imul
xchg
imul
out
frstor
jae
xchg
inc
ss
bound
sub
cld
enter
aaa
repnz
out
or
fisttpll
add
jne
lods
adcl
bound
or
jecxz
aaa
iret
add
mov
js
es
js
cmpb
out
dec
cltd
xor
lret
cmpsb
mov
out
mov
das
sbb
pusha
mov
xor
adc
adc
cltd
mov
push
pop
adc
fsubrs
aaa
mov
aam
push
xor
mov
popa
dec
fiaddl
into
mov
adc
jle
pop
inc
pop
int
lods
inc
add
mov
jg
push
xor
and
mov
or
into
inc
outsl
add
aam
add
hlt
imul
ss
pop
loope
gs
jl
mov
push
lods
lret
es
test
jbe
cmp
mov
mov
test
es
and
int3
pop
cmp
movsb
xchg
movsb
push
and
push
and
lods
mov
push
xor
and
loopne
push
sti
mov
inc
in
cmp
mov
or
test
shll
lods
inc
dec
mov
aad
out
sub
mov
cs
xchg
mov
movsl
das
add
mov
test
in
enter
sti
or
sbb
push
arpl
data16
nop
sbb
hlt
lods
sbb
pop
or
inc
andb
js
or
sub
mov
and
dec
push
or
push
fisubrl
add
push
sub
jge
les
jg
punpckhbw
xor
lock
orb
lds
mov
pop
jge
fstpl
lods
cmp
push
addr16
outsb
sub
call
fisubl
sti
roll
sbb
xchg
data16
loop
sti
data16
cmp
stos
mov
sub
and
jle
dec
xor
and
or
or
pop
inc
pop
cltd
and
cmp
aaa
movsb
and
mov
xlat
fdivr
pop
fwait
aaa
out
jmp
mov
xchg
inc
fcomp
xlat
pop
mov
sbb
push
cwtl
adc
sub
sbbl
jmp
dec
sahf
pop
lcall
adc
lret
sbb
movsl
into
adcb
popf
push
fcmovu
xchg
ret
enter
mov
xor
fisubrs
inc
lock
stos
cmp
in
cmc
dec
in
adc
inc
xchg
je
sub
sahf
add
push
and
aad
xchg
data16
imul
mov
bound
pop
jmp
fcomps
imul
stos
push
xchg
lret
lea
shrb
xchg
lret
loopne
jae
fsubs
mov
inc
inc
mov
pop
out
fdivrs
mov
jbe
jmp
out
jns
push
cli
orb
push
out
rcrl
hlt
add
fadd
adc
rorl
decb
push
mov
cwtl
cmp
fwait
add
leave
std
into
pop
add
push
fldcw
scas
ret
clc
adc
dec
jle
sahf
add
sbb
sub
sbb
add
cmc
push
cmpsl
sti
cmp
mov
testb
xchg
jl
push
imul
inc
mov
dec
dec
push
cmc
inc
pop
push
or
in
shll
sbb
xchg
mov
xchg
cmp
imul
add
mov
add
testb
sub
insl
or
pop
push
fsub
pop
and
stc
or
mov
mov
push
sub
das
xchg
xchg
pop
xlat
cmp
lcall
sbb
mov
or
cs
and
test
ljmp
in
jmp
xchg
int
iret
adc
mov
ds
jl
mull
popf
push
or
sub
and
std
aaa
cmp
jl
fidivl
jo
cli
add
inc
fld1
aaa
popa
mov
js
xchg
jns
sbbl
mov
rolb
add
int3
out
sbb
mov
aas
jmp
adc
lret
inc
mov
xchg
xchg
je
and
int3
test
mov
and
xchg
rcrl
divl
mov
imul
mov
cmp
jmp
outsl
ror
xor
xor
sub
push
lea
cmc
mov
push
mov
push
or
adc
fs
xchg
movsl
mov
lods
jl
lods
lods
je
jnp
mov
ja
and
and
pusha
and
enter
stos
push
push
cltd
in
aad
sarl
mov
inc
cmp
jg
xor
or
in
mov
es
sti
ss
and
shlb
adc
add
mov
cmp
sub
mov
adc
dec
inc
mov
sbb
adc
inc
out
mov
or
insb
push
xchg
or
adc
dec
fnsave
mov
lahf
mov
inc
xor
push
adc
movsl
rcl
push
gs
sbb
stos
xchg
push
add
push
add
mov
mov
jbe
in
faddp
bound
and
mov
sub
pop
mov
loopne
mov
cs
add
jns
or
push
mov
pop
jnp
xlat
lret
dec
movl
xchg
cmpsb
pop
rol
leave
daa
mov
dec
shlb
mov
xchg
sbb
dec
jp
and
pop
test
pop
les
arpl
addr16
test
scas
sahf
dec
cli
xchg
sub
call
push
mov
dec
and
in
inc
out
nop
test
push
push
les
jp
and
dec
dec
push
add
sti
push
add
daa
loope
test
call
push
in
ret
cmp
cmpsb
mov
jno
or
daa
cwtl
popf
popf
mov
jg
sub
test
fs
xchg
cmc
mov
popa
pop
into
xchg
mov
xchg
mov
jl
dec
ret
or
iret
push
jbe
mov
pop
lret
mov
movsb
movsl
popa
imul
jg
lea
lcall
lahf
jl
add
push
push
inc
push
divl
stc
or
pop
mov
and
lock
aad
push
or
xor
ret
icebp
pop
pop
icebp
repz
sbb
and
mov
mov
pop
or
xchg
lcall
fs
insl
int
jmp
jae
les
sub
push
ret
test
lcall
insl
imul
sub
fcoml
and
test
cmp
mov
outsl
bnd
adc
repz
pop
add
jae
xor
lea
push
rcrl
addr16
push
repnz
pop
movsl
inc
mov
pop
int
pusha
dec
sti
xchg
mov
nop
mov
xchg
popl
daa
cmpl
in
and
dec
push
push
pop
pop
hlt
into
sbb
popf
and
arpl
das
mov
xchg
sub
pop
jbe
dec
loop
out
in
xchg
ss
sub
jbe
aaa
test
out
push
test
sbb
sti
pop
xor
ds
pop
xchg
dec
mov
shl
and
pusha
push
dec
mov
movsl
cmp
xchg
sbb
repz
js
inc
cmp
stos
inc
leave
dec
das
sub
scas
adcb
shlb
arpl
aad
popa
pop
test
adc
movl
push
xor
xlat
fwait
mov
and
das
mov
test
lds
sub
pop
test
and
mov
mov
pop
xor
pop
fldlg2
pop
jmp
push
repnz
leave
movsl
loop
pop
rol
pop
loop
push
or
and
outsl
enter
jg
sbb
sbbb
in
or
scas
push
mov
adc
sbb
inc
test
repnz
cmp
inc
push
push
add
xor
jge
test
das
xor
fsubl
fisttpll
mov
jae
ror
outsl
cltd
push
repz
add
jnp
xor
or
cmpsb
mov
movsl
sbb
orb
loope
xorb
std
lea
test
call
fcoms
adcl
cmp
mov
push
out
jecxz
xorl
cmp
pop
pop
imul
push
js
shrl
push
loopne
push
push
fists
scas
dec
js
cmpsl
stc
aaa
pop
pop
mov
idivb
subb
and
or
pop
inc
mov
mov
cwtl
jmp
xor
lcall
mov
cmp
cwtl
jae
divl
sarl
and
mov
loopne
sub
leave
mov
jnp
out
bound
push
xor
je
mov
push
ss
dec
fcoms
popf
cs
test
sub
cmpsb
cmpsb
fiaddl
mov
cmp
lret
sbb
xchg
jns
add
js
std
sub
sbb
cli
popf
pop
hlt
mov
les
cli
mov
xchg
mov
mov
sub
mov
push
dec
mov
adc
pusha
adc
jg
pop
out
dec
dec
mov
test
xchg
adc
lods
mov
jge
xchg
fwait
scas
or
test
jns
aam
xor
cmp
loop
lret
outsl
push
insb
xchg
push
loope
mov
push
ds
popf
cltd
mov
movsl
mov
jnp
xor
stos
push
inc
outsl
lahf
push
in
into
pop
cvtps2pi
test
loope
sub
mov
push
mov
push
sbb
movsb
jg
aaa
pop
imul
imul
or
notl
dec
daa
sbb
insb
inc
dec
sar
mov
outsl
ljmp
std
jo
mov
das
push
daa
mov
stc
pop
xchg
xchg
dec
ret
xchg
jl
scas
rcr
sbb
test
cmpsb
ljmp
pop
push
mov
clc
or
aam
push
or
pusha
xchg
cltd
call
jmp
pop
outsl
and
movsb
cmp
add
dec
pop
pusha
xor
into
movswl
hlt
cwtl
cmp
int
xchg
mov
ljmp
lret
cli
xchg
mov
fnstcw
jmp
jne
or
jl
ljmp
mov
mov
inc
cmc
jmp
jmp
outsl
aad
shr
add
dec
aam
ljmp
push
push
insb
movsl
push
test
xchg
mov
mov
xchg
mov
sbb
xchg
mov
arpl
rcll
loopne,pn
xchg
jo
repz
sbb
idivl
jmp
adc
sub
jp
fadd
and
icebp
cwtl
repz
cld
lcall
add
int3
scas
insl
add
adc
xor
leave
ds
pmullw
fucomip
fists
pop
mov
adc
ret
lock
add
lds
shlb
pop
pop
push
xor
mov
xchg
inc
cmc
mov
std
sbb
sbb
inc
cmp
mov
lods
insb
cltd
mov
push
jae
mov
testl
cltd
pop
mov
ja
adc
insb
pop
pusha
enter
mov
shl
adc
or
pop
dec
jns
inc
fsubs
push
sub
xchg
fisttps
cmp
out
push
fsubrs
and
push
and
enter
sub
add
outsl
leave
add
jp
jle
xor
test
or
push
ss
cwtl
loope
incb
mov
test
push
pop
mov
call
mov
mov
int3
out
leave
int3
fiadds
int3
repnz
outsb
xchg
cltd
int3
sahf
cltd
mov
add
inc
out
sub
dec
push
sub
jge
mov
mov
mov
or
or
out
sbb
cvttps2pi
je
mov
rclb
cmp
cmpsl
imul
push
dec
out
cmc
xchg
ja
ja
fbstp
and
sbb
jae
mov
xchg
sub
mov
sub
jno
iret
outsl
notl
inc
pop
mov
pusha
fistpll
jnp
xchg
ds
sahf
dec
imul
fsubr
xchg
and
in
imul
insl
sub
popa
inc
pop
lods
lahf
cmp
xor
xor
das
out
and
call
pusha
test
lods
add
fdivrl
repnz
test
outsb
int3
rcll
in
xor
mov
sti
cmpsl
mov
sub
addl
jbe
test
push
mov
adc
mov
push
iret
inc
int
cmpsb
fdivrl
das
jle
ret
hlt
in
lcall
and
xor
cld
cld
cmpsb
fmull
scas
jae
add
xchg
push
int
loopne
lret
adc
ret
pop
add
das
add
mov
repz
ret
jns
or
cmp
test
push
sub
mov
mov
add
push
cwtl
push
mov
pop
mull
dec
add
mov
sub
sarb
iret
mov
rcl
cs
push
add
jbe
xor
cs
loopne
xor
idivl
adc
inc
xor
stos
adc
push
mov
and
lret
add
sbb
mov
jae,pn
mov
ljmp
cmp
mov
cmp
dec
enter
jp
xor
xchg
sbb
add
sbb
lcall
jae
jo
and
subb
xchg
cmovo
out
push
mov
xchg
aaa
add
push
outsb
stc
push
sub
mov
clc
int3
and
sub
lods
xchg
cmp
or
mov
mov
pushf
out
out
dec
ds
adc
xchg
cmp
push
xor
test
out
push
mov
xor
mov
push
mov
lcall
mov
ror
dec
jecxz
test
aam
dec
or
sub
push
fidivl
dec
cltd
ja
das
dec
pop
xchg
cmp
test
cmpsb
daa
cmpsb
dec
pop
nop
mov
icebp
sbb
dec
orb
mov
dec
shlb
mov
cltd
cmc
xchg
clc
sub
lea
test
call
das
pop
dec
fcompp
sbb
sub
and
pop
jge
or
je
ret
mov
js
push
les
mov
lret
inc
call
push
mov
fnstsw
push
rep
push
jg
icebp
lods
and
cmpsl
decl
inc
fnclex
insl
cli
fxch
add
pop
pop
jno
adc
add
or
and
jmp
jno
sahf
clc
scas
jbe
or
jmp
and
and
xchg
jp
sub
push
jp
into
mov
jnp
mov
adc
dec
mov
push
ret
push
pop
xchg
daa
or
push
xlat
stos
xchg
xor
outsb
mov
xor
bound
daa
fdivs
pop
icebp
xor
adc
arpl
hlt
insl
mov
add
int3
cmp
inc
pop
xchg
jns
popa
push
roll
push
cmp
lret
adc
dec
jle
pop
mov
lcall
dec
sub
sbb
lock
imul
outsl
lods
out
mov
and
incl
push
les
mov
addl
ds
and
sbb
popa
aam
out
dec
outsb
inc
icebp
test
lods
sbbl
add
or
je
filds
push
adc
js
and
mov
pop
mov
jno
cli
xchg
add
jecxz
jp
scas
xchg
adc
xor
push
mov
jecxz
sbb
enter
pop
sbbb
mov
push
xor
inc
mov
mov
aaa
push
xor
out
mov
nop
pop
adc
sub
ljmp
jns
imul
sbbb
inc
gs
cltd
out
pop
jle
mov
repz
mov
aad
jne
sbb
out
jle
mov
lcall
and
mov
pop
inc
lcall
xor
or
in
testl
in
addr16
shlb
imul
dec
push
adc
mov
xor
pop
fdivs
scas
or
mov
sahf
inc
sarb
in
arpl
dec
xor
mov
out
mov
out
or
fcmovu
aaa
mov
sub
or
loope
ficoms
pusha
das
movsl
enter
jo
lcall
lret
mov
nop
daa
sbb
pop
inc
push
movsl
add
mov
loopne
lahf
push
pop
jmp
dec
adc
pushf
and
cwtl
add
js
cmpb
in
sbb
mov
aad
pushl
int3
adc
rorl
subl
fcmovu
sbb
cmp
mov
cmpb
jbe
pop
sub
leave
ds
and
dec
rol
xor
enter
call
int3
test
cmp
and
fs
and
mov
into
or
push
push
pop
dec
xchg
outsl
jo
add
in
pop
iret
mov
mov
push
lahf
loope
cs
push
sbb
sti
in
pusha
aaa
js
outsb
jg
inc
sahf
rorl
xor
movsl
rclb
lcall
dec
inc
xor
loope
pop
sbb
fidivrs
movsl
pushf
mov
in
inc
add
test
jecxz
adc
and
loope
jl
jno
nop
test
repz
pop
lods
dec
adc
jl
push
clc
hlt
adc
daa
or
dec
pushf
lcall
clc
out
sub
xor
in
xchg
pusha
imull
jle
cwtl
adcl
sub
dec
js
cwtl
mov
jmp
aas
inc
pop
mov
push
fwait
fs
or
movsb
add
scas
clc
mov
xchg
ds
inc
mov
cli
jg
das
test
into
imul
stos
dec
in
inc
lcall
fildl
cbtw
test
cli
sub
xchg
and
mov
pop
out
or
cmp
cmpsl
mov
negb
rorl
in
ljmp
test
nop
outsl
out
aam
lret
sarl
imul
or
cli
push
movsl
fldt
mov
pop
xor
jns
mov
xor
xchg
sub
push
mov
pop
push
loopne
clc
into
loope
gs
data16
mov
mov
ss
hlt
sbb
pusha
cmp
or
xor
sub
inc
add
loop
xor
sbbl
ljmp
jmp
mov
aad
push
inc
jns,pt
aas
xchg
xchg
mov
sti
dec
and
jmp
mov
mov
hlt
cmp
daa
out
sub
sbb
sti
adc
in
jno
mov
scas
push
loopne
les
ss
inc
pop
fbld
pusha
dec
xor
inc
or
or
and
xchg
int3
popa
fcompl
push
in
repnz
cmp
cli
in
fs
verw
adc
add
and
sti
int3
pusha
std
mov
imul
xor
mov
pop
mov
sbb
pop
loop
addr16
cmpsl
aaa
mov
pop
fiaddl
xchg
jg
dec
add
jno
mov
lahf
mov
or
sub
aaa
hlt
mov
outsb
xchg
bound
popa
stos
ret
jg
lock
mov
sbb
das
scas
gs
mov
jae
adc
mov
sbb
inc
sbbl
flds
stos
fs
adc
out
in
mov
leave
cmc
insl
jge
jg
faddl
bnd
push
aad
test
add
test
aaa
scas
cmp
movsl
pop
lcall
daa
sub
dec
pop
adc
pop
fcmovnbe
xor
cld
jb
dec
shll
cmp
adc
outsb
mov
testb
hlt
inc
out
lret
xor
dec
mov
push
je
adc
sbb
or
in
outsl
push
outsl
xorb
movsb
fmull
xor
lret
es
cmp
inc
lcall
leave
cmp
mov
sti
mov
push
sbb
jbe
xchg
cmp
jae
aas
push
enter
imul
in
repnz
lret
inc
add
fsts
cmp
mov
mov
std
lea
add
sub
adc
ret
outsb
push
xor
jp
sbb
fs
mov
mov
sub
jp
loopne
int
aam
mov
dec
in
push
in
popa
arpl
test
mov
sub
pop
in
inc
notb
mov
repz
stc
mov
push
xchg
movsl
mov
leave
pop
bound
pop
push
mov
daa
push
mov
call
mov
adc
pop
lahf
stos
inc
add
jne
lret
sub
enter
add
adc
lret
sub
jnp
push
mov
sahf
out
mov
mov
aad
xchg
cli
movsb
cmp
adc
jne
pop
insl
hlt
jle
push
lods
ja
lock
push
aaa
push
dec
and
xchg
popf
gs
rcl
add
pushf
sbb
sarl
into
dec
and
test
mov
cwtl
push
dec
mov
js
add
sbb
shll
fiaddl
add
clc
push
mov
xor
mov
jmp
push
out
xor
pop
jle
mov
hlt
bound
popa
std
ficoms
mov
inc
mov
loopne
sbb
xchg
xor
std
stos
je
fs
fiadds
jns
icebp
in
iret
ljmp
xchg
test
in
mov
arpl
jns
repnz
adc
lds
push
pop
sahf
push
movsl
pop
mov
inc
out
bswap
mov
xlat
sbb
jecxz
cltd
jno
fs
out
jmp
pop
test
dec
pop
mov
aad
lock
test
jle
enter
adc
lret
mov
jns
cmp
jecxz
xor
stos
push
xchg
hlt
cmp
int3
sbb
aad
mov
rcl
mov
jne
mov
test
frstor
jns
xor
aaa
sub
and
and
xor
call
adc
daa
mov
or
mov
repz
jb
jbe
cmp
push
jnp
pop
scas
lods
or
icebp
mov
ror
idivl
scas
test
xchg
data16
xor
mov
pshufw
icebp
ja
xor
dec
es
popa
push
pop
lods
insl
inc
mov
dec
imul
mov
aas
leave
cmp
push
mov
mull
mov
sbb
add
jns
cmpsl
inc
jp
and
lret
shll
and
xchg
cld
xor
and
xorl
cmp
cld
cmp
pop
fs
or
scas
or
mov
mov
fisttpll
add
adc
mov
jp
mov
xlat
xchg
sbb
mov
shlb
jnp
in
in
add
insb
lds
cwtl
inc
add
cltd
mov
or
insl
pop
fwait
mov
sub
test
andb
in
das
xor
push
sub
pop
push
push
or
cli
add
jg
dec
mov
sub
dec
add
and
inc
movsl
add
aas
inc
pop
dec
jl
out
lahf
cmp
cltd
xor
jae
cwtl
mov
mov
push
in
ret
adc
imul
push
adc
gs
fdivrs
lods
dec
ss
or
cmp
lret
push
cmp
sbb
andb
fstpl
int3
iret
enter
adc
inc
adc
xchg
bound
lcall
mov
fstpl
out
sti
xchg
outsl
ret
lods
mov
enter
loopne
fnsave
imul
jnp
in
repnz
repz
push
mov
push
out
mov
xor
adc
iret
sbb
dec
popf
inc
adc
dec
adc
inc
imul
mov
mov
pop
std
sub
xchg
mov
and
and
lods
jb
addr16
lods
mov
mov
dec
test
push
mov
imul
enter
dec
test
push
lret
xor
dec
xor
pop
mov
loopne
xor
push
jg
lock
pop
or
xlat
jmp
jns
and
aad
data16
push
cmc
xchg
xchg
adc
repz
xor
sub
std
mov
xchg
xor
dec
pop
leave
xchg
imul
scas
mov
pop
push
and
fistpl
push
dec
pop
or
fcoml
or
push
lods
out
insl
ds
fadds
sub
outsb
xor
jl
mov
mov
push
mov
leave
aam
pop
sub
repz
mov
cmp
xor
sahf
enter
mov
sbb
rclb
push
xor
stos
js
clc
jno
aaa
dec
adcl
sub
mov
pop
jge
fsqrt
inc
mov
dec
test
jmp
cli
lock
rorl
sbb
movsl
add
or
cmp
lcall
lahf
pop
cmp
xor
cmp
lret
aaa
push
sub
xor
pop
push
jb
xchg
xchg
push
mov
xchg
out
imul
cmpsl
test
sub
imul
pop
lea
test
std
lret
lock
pop
mov
dec
sub
add
or
scas
stc
jp
xchg
add
push
jg
iret
fwait
inc
xchg
aam
ret
xchg
mov
pop
sub
lods
rorb
mov
pop
sbb
dec
out
push
mov
out
pushf
push
jg
out
mov
dec
imul
sbb
mov
push
mov
push
cld
adc
and
fisubs
and
cltd
test
stos
mov
dec
out
sub
cmpb
jmp
or
addb
push
xchg
imul
sbb
and
jo
mov
cmpsb
pop
ljmp
mov
enter
aaa
push
adc
std
pop
fadds
ror
pop
xchg
mov
in
adcl
fistpl
test
ljmp
popf
mov
in
sbb
pop
mov
cmpsb
in
or
adcb
dec
stc
in
jo
mov
push
push
xchg
fidivrl
repnz
jbe
aad
mov
sbb
mov
lahf
popa
xchg
lar
jmp
mov
subb
and
push
cmp
mov
mov
sbb
add
or
jmp
cs
dec
inc
mov
iret
sbb
push
mov
pop
sbbb
mov
scas
les
mov
rcrl
lret
sub
pop
or
sub
imul
loopne
xchg
into
xor
aaa
mov
pop
jo
sub
scas
dec
bound
or
or
xor
inc
xchg
pusha
adc
or
lahf
ret
popl
test
ja
jp
mov
xchg
icebp
xor
and
pushl
adc
jae
jno
mov
aaa
jecxz
cmp
jecxz
mov
aad
adc
adc
jmp
sub
pop
mov
test
add
sahf
pop
mov
mov
add
into
sbb
in
insb
inc
lahf
xor
fcompl
add
cmp
pop
loope
and
or
mov
into
or
mov
sub
mov
scas
jne
mov
repz
xor
mov
push
aaa
push
xor
push
shrb
cwtl
std
xchg
sbb
pop
inc
fidivrl
stc
push
cwtl
fldl
fiaddl
imul
sbb
push
lcall
stos
push
clc
jne
iret
ljmp
iret
mov
cmc
mov
fdivp
adcb
mov
xchg
movsl
xorl
sahf
push
data16
mov
dec
fcom
jno
or
mov
mov
lock
pusha
add
sub
in
popa
out
cmp
ret
ljmp
adc
insb
adc
inc
sbb
adc
xchg
adc
rcll
int3
jae
int3
jecxz
xor
add
add
mov
fiaddl
aas
cmp
pop
pop
loop
jne
mov
decl
dec
je
and
daa
insl
sub
and
xor
jmp
cmc
mov
scas
aas
pushf
xor
mov
push
xor
dec
arpl
xlat
rcll
pop
cmp
lahf
out
std
pop
mov
cmpsl
and
int
dec
fildll
stos
push
jg
pop
mov
bound
dec
push
cmpl
inc
inc
mov
xorb
lret
enter
mul
add
xchg
inc
mov
fs
add
mov
dec
imul
push
sub
or
les
pop
pop
sbb
loope
popa
cmp
fsubr
and
jns
xchg
and
sbb
adc
lcall
pop
add
shlb
fwait
aad
arpl
pop
fdivrl
iret
lret
cmpsb
movsl
inc
jg
xor
jmp
lods
in
jg
repnz
mov
sub
enter
lods
loopne
cmpsl
mov
mov
sbb
movsl
aad
repnz
aad
and
mov
lods
and
xchg
adc
pop
mov
cmpsl
cmp
cltd
pop
pop
push
or
inc
cmp
nop
rolb
pop
orb
mov
fildl
add
aam
mov
inc
push
out
mov
jge
call
mov
push
sub
inc
std
add
cmp
in
movsl
out
xchg
push
mov
cwtl
out
push
lcall
push
and
insl
jmp
icebp
sub
inc
sub
int
ss
cmp
xor
jnp
cmp
push
aaa
add
lret
popf
jnp
imul
jecxz
das
iret
decb
mov
push
outsl
lret
fidivrs
mov
mov
fidivrs
mov
dec
mov
test
xor
dec
sti
bound
and
push
or
lods
lock
in
adc
loopne
mov
sbb
test
push
adc
pop
or
pop
rorl
mov
aad
xchg
scas
jae
sbb
jmp
lods
sahf
movsb
jl
mov
sbb
inc
push
xchg
mov
push
push
dec
imul
scas
arpl
cmpsb
shll
jae
and
mov
mov
andb
or
jb
stc
adc
mov
pushf
addb
add
xor
dec
mov
fists
mul
test
mov
adc
and
push
or
mov
sbb
mov
imul
out
lock
pop
mov
sub
push
gs
fdivrs
xor
xor
xchg
sub
xor
jo
repnz
or
test
jle
dec
fs
or
xorl
xchg
sub
jmp
es
adc
xor
adcb
adc
cmp
sbb
jmp
push
cmc
aam
sarb
adc
jb
jg
add
push
mov
adc
xlat
jecxz
js
add
clc
xor
jmp
and
and
push
sbb
pop
lods
push
fxch
sahf
in
push
inc
fs
repz
sti
sbb
cs
mov
xlat
lock
push
sbb
sub
outsb
sub
mov
push
fwait
mov
mov
sub
or
fdivr
xchg
cltd
ja
sbb
or
mov
xor
xchg
fstl
fstpl
shll
jnp
insb
lods
outsb
push
mov
cmpsl
test
loope
arpl
pusha
rclb
lea
push
jge
mov
scas
mov
jo
scas
gs
mov
imul
push
adc
lret
lret
stos
pushf
sarl
xchg
jae
push
into
in
jne
arpl
mov
enter
lea
fdivrl
jge
jl
fildl
pop
xor
insl
int3
int3
xchg
xor
pop
insb
imul
orb
fwait
lcall
pop
mov
or
jge
and
stos
gs
dec
popa
in
in
orl
mov
jp
out
rorl
leave
sbb
or
sub
inc
arpl
mov
mov
cmp
enter
add
adc
mov
lock
int
sbb
sub
mov
cli
stc
sahf
arpl
out
stos
mov
push
sub
xchg
jb
lds
leave
sbb
mov
cld
mov
mov
pop
std
cld
lahf
dec
sbb
rolb
cmp
fdivr
xor
cli
ret
loopne
pop
test
test
aad
subl
xlat
mov
stc
xchg
push
xchg
lcall
stc
pop
cmp
add
xchg
xor
jmp
fistpl
std
xchg
loop
mov
out
call
pop
sbb
add
add
or
std
xor
lods
mov
xchg
pusha
insl
jg
hlt
fisubl
popf
mov
iret
mov
push
pop
cmp
icebp
aas
mov
sahf
adc
fcomps
and
je
push
inc
mov
enter
jmp
rorb
cld
jne
inc
pusha
jnp
fadds
push
test
mov
shrl
adc
pop
pop
sub
push
jns
iret
repnz
testb
pop
jno
lds
adc
dec
loopne
dec
rep
and
push
inc
jae
in
sub
cmp
orl
mov
xchg
divl
loop
flds
pop
outsb
aaa
jmp
xchg
pop
mov
fldcw
lods
clc
ret
mov
cmpsb
cmp
jmp
xchg
testl
inc
xlat
push
sti
pushf
mov
add
movsb
sbb
sub
in
inc
add
stos
inc
sbb
test
in
int
ret
out
mov
or
lret
jb
dec
xlat
push
ljmp
inc
inc
push
rcl
mov
jns
test
adcl
or
cmpsb
out
jle
into
cmp
cmp
mov
push
cmp
loopne
sub
jbe
jb
push
shll
xchg
cmp
pop
pop
push
jle
sub
clc
divb
in
mov
push
test
xchg
hlt
je
out
xchg
insb
pop
inc
movsl
or
push
je
das
and
xor
sbb
cmc
pop
es
or
push
stos
xchg
test
mov
push
cmp
in
inc
lock
xchg
test
andb
push
sub
sar
push
xchg
xchg
popa
mov
shrl
sbb
jae
les
ss
adc
mov
out
cli
xor
jbe
jge
scas
pop
push
jno
enter
dec
sbb
push
rolb
pusha
jns
sub
push
or
mov
out
stc
add
mov
jbe
jo
sbb
hlt
fwait
cmp
js
xchg
push
or
and
cmc
mov
jg
dec
scas
ljmp
or
fstps
fistpll
loopne
test
dec
cmp
dec
dec
test
divl
push
lds
fs
fistps
outsb
out
cmp
and
push
pop
ljmp
insl
movsl
and
iret
insb
dec
jno
jb
lods
pop
sub
ss
lcall
mov
sub
and
in
mov
sbb
cli
xchg
clc
jmp
int3
ret
stos
xchg
and
and
pop
jae,pn
mov
and
outsl
icebp
xchg
xchg
test
pushl
movsb
out
nop
mov
enter
cs
popf
add
or
data16
loop
sbb
orb
jbe
pop
out
xchg
dec
shlb
loope
int
mov
mov
jge,pt
push
movsl
mov
movsb
lods
fstp
push
push
sbb
std
or
jae
adc
clc
mov
shlb
ja
psrld
cwtl
fidivrl
les
jno
push
movsb
jbe
test
test
sub
in
scas
add
arpl
adc
and
bound
ljmp
loop
and
jge
loopne
icebp
pop
or
jo
sbb
or
into
mov
jl
xchg
sub
mov
jo
lret
gs
lahf
mov
cli
and
mov
mov
icebp
sub
or
testl
mov
cmp
xor
add
cld
ficoml
push
cs
sbbb
into
inc
push
xchg
leave
cmpsb
lods
adc
pop
gs
or
jmp
imul
test
sbb
dec
aas
mov
mov
dec
add
jbe
add
stos
jns
inc
mov
cmp
mov
pop
out
bound
mov
lods
xchg
rorl
cli
lret
sub
icebp
push
inc
fldcw
outsb
dec
into
aam
cmpsl
inc
mov
xchg
outsb
push
mov
ljmp
mov
mov
int3
mov
lahf
mov
sbb
jg
ljmp
push
mov
jb
cltd
fsubrl
aam
or
repnz
das
jp
sbb
xorb
cltd
push
in
imul
pop
sbb
jns
mov
xchg
mov
shl
dec
imul
mov
ljmp
repz
mov
or
push
adc
xlat
and
out
inc
cld
sysenter
push
mov
aas
addb
jne
add
sbb
popa
ret
dec
aad
and
add
lea
out
jle
cmp
enter
rcrl
push
push
inc
imul
or
in
cmp
dec
mov
test
cmp
xor
mov
dec
and
pop
xchg
inc
sub
test
xor
jo
inc
or
dec
add
aaa
andl
jo
insl
sbbb
mov
or
sbb
mulb
sub
daa
test
and
mov
cmp
icebp
dec
ficomps
enter
and
lea
out
out
inc
push
dec
into
lock
push
adc
adc
mov
sbb
int3
call
mov
push
jnp
fisttpl
and
nop
pop
and
popa
inc
xchg
jbe
mov
imul
mov
push
fs
fucomp
fbstp
xor
add
js
stc
dec
fs
sti
pop
out
adc
pop
stos
leave
sbb
ja
jbe
es
ret
mov
or
dec
mul
into
dec
cs
fdivr
ds
dec
in
add
jb
sub
movsb
pextrw
sbb
pop
test
cmp
push
mov
xchg
dec
div
repnz
inc
push
and
jb
inc
cmp
cmpsl
cltd
push
sahf
aam
leave
ret
push
test
xor
cmc
and
aam
js
inc
jnp
cmp
jg
gs
jmp
sbb
push
jae
or
jo
lcall
cmp
sar
lret
xchg
cmp
insb
repnz
addr16
jecxz
andb
push
das
sbb
fldenv
and
cmpsl
in
nop
dec
xchg
cs
push
int3
jnp
cmp
repz
mov
mov
notb
addr16
aaa
xor
mov
and
es
jl
jo
or
and
sarb
jno
mov
sahf
lret
push
inc
iret
fs
push
cmp
xor
mov
pop
pop
xchg
xor
js
push
xor
mov
jp
mov
jp
pop
cli
call
fdivrl
aaa
pop
pop
inc
push
dec
mov
sbb
and
xchg
nop
andb
adc
nop
dec
add
add
pop
mov
aaa
xor
mov
icebp
lods
pop
xchg
sub
insl
xchg
in
mov
mov
addr16
mov
scas
aas
les
jle
nop
xchg
aas
mov
outsb
pop
dec
inc
int
mov
add
mov
inc
loope
mov
jno
mov
out
cmpsl
xchg
add
adc
pop
xchg
test
or
pop
test
xchg
cmc
int
cmc
cwtl
add
lods
pop
fsubr
dec
call
mov
scas
jmp
sar
mov
push
fadds
mov
std
pop
fldenv
mov
rol
xchg
jb
add
mov
aad
js
lds
mov
movsb
mov
cmc
xor
rclb
pop
mov
out
and
stc
imul
push
shll
popa
jecxz
sti
stos
scas
jl
mov
adc
or
ljmp
stos
pop
enter
in
add
rcrb
add
jp
leave
jb
aas
push
js
aam
mov
flds
loopne
outsl
mov
push
cmp
subb
sahf
loope
scas
sub
adc
adc
add
lods
sub
add
rcl
mov
mov
mov
add
xchg
sahf
adc
ret
inc
cmp
xor
daa
frstor
lcall
call
xchg
rclb
movsl
test
xchg
mov
adc
cmp
dec
cmpsb
enter
jae
jmp
xchg
mov
jae
inc
scas
pop
cmpl
scas
pushf
sbb
inc
mov
movsl
scas
cmpsl
dec
cmp
sub
inc
pop
arpl
mov
lea
lret
push
in
incb
pop
xchg
jmp
jmp
loope
shrl
in
push
cmpsb
xor
inc
dec
pop
insb
arpl
leave
ret
popa
add
fcomps
lcall
dec
incl
cmp
add
xor
cmp
ret
or
jge
sbb
or
pop
sub
test
mov
add
pop
fistl
mov
and
pop
add
xor
dec
push
adc
mov
lea
dec
jmp
mov
into
cld
sahf
lods
inc
adc
pop
xchg
sti
out
fidivrs
jg
mov
repz
mov
mov
mov
jnp
or
out
xchg
mov
mov
js
insl
lods
addr16
mov
inc
sub
idivb
aas
addb
jle
fsubrl
and
dec
shrl
sub
adc
repz
pop
push
sub
cmp
lea
dec
adcb
pop
mov
mov
jae
push
mov
lea
in
popf
sub
push
sbb
or
jl
test
add
popa
adc
fcmovnb
mov
sti
cwtl
pushf
sub
lea
xchg
mov
xchg
test
cwtl
push
and
arpl
cli
pop
xchg
shl
mov
add
out
dec
adc
adc
je
in
push
leave
xchg
fisttpl
jmp
loopne
pushf
popf
addr16
and
fidivs
cltd
inc
ja
cmp
jp
push
in
ret
cs
lods
nop
mov
lea
lods
push
push
pop
or
imul
pushl
ret
xlat
dec
les
sti
mov
out
push
lea
jnp
lock
cmp
or
sbb
mov
dec
push
rcll
int3
subb
jmp
lods
stos
mov
ljmp
jge
fldcw
addr16
pop
adc
cltd
and
shll
inc
in
xchg
push
adc
int3
xchg
adc
out
pop
cltd
loope
daa
pusha
xchg
mul
into
mov
push
mov
xor
stc
js
rcrl
mov
cmp
repz
jecxz
mov
cmp
test
mov
testb
stos
sti
adc
cmp
fstps
cltd
insb
mov
aam
scas
jmp
data16
adc
movsl
add
mov
data16
loopne
hlt
or
pcmpgtd
adc
mov
shrb
hlt
push
dec
stos
stos
movsb
sub
int
pop
push
mov
push
push
mov
stc
mov
setne
inc
jle
and
mov
mov
mov
mov
andl
imul
xor
push
pop
es
cwtl
mov
shr
jbe
stc
iret
pop
push
fcmovnbe
aaa
inc
cs
shrl
bound
mov
pop
scas
inc
or
stos
mov
lods
shrb
arpl
mov
push
scas
sti
or
aas
xchg
idivb
dec
shl
pushf
sbb
push
jbe
cmp
and
cwtl
out
cli
dec
inc
out
leave
shl
mov
mov
fldt
ds
inc
mov
pop
mov
add
cltd
xchg
mov
aas
push
xor
divl
cs
or
xchg
scas
es
lea
jmp
call
mov
aad
push
lods
or
insl
movsl
into
xchg
xor
fbld
push
fbstp
mov
push
loope
sbb
mov
bound
fdivs
pop
icebp
mov
pop
cmpb
scas
ret
inc
add
pushw
jbe
mov
pop
mov
int3
xchg
inc
rcl
sub
lret
inc
jp
xlat
mov
mov
xchg
push
fistps
loop
push
lcall
adc
mov
popa
jae,pn
push
xchg
xorl
adc
cmpsb
sub
xlat
ficoml
and
push
jmp
cmpsb
inc
fisttpl
xor
and
inc
cmovno
mov
dec
mov
lods
cmp
mov
in
adc
aad
sbb
dec
arpl
adc
in
scas
leave
scas
xor
jg
cmp
test
nop
push
xchg
jl
xchg
or
pop
dec
add
hlt
ljmp
jmp
mov
fucom
shl
adc
xor
sub
icebp
test
add
clc
je
fst
popa
pushf
stos
adc
int3
pmaxsw
iret
addl
jae
or
stos
xorb
mov
jnp
sub
mov
insl
mov
ss
int
lret
ret
fs
dec
into
js
repnz
adc
lcall
test
inc
add
add
pop
pop
jo
ror
and
sbb
sarl
dec
push
mov
push
insb
das
bound
cmp
movsl
addr16
sub
adc
mov
mov
inc
out
lret
scas
pop
push
adc
fs
add
inc
out
pop
and
lock
lods
loopne
or
dec
push
push
fadds
fnstsw
push
add
pop
pop
stos
dec
cmp
push
daa
aas
inc
mov
out
sub
outsb
ljmp
sbb
and
push
sub
push
sub
nop
xor
mov
scas
cmp
pusha
jno
lret
es
adc
ljmp
lahf
imul
jno
stos
sub
les
sbb
out
andps
aas
es
test
insl
es
popf
cmp
push
mov
xchg
cltd
out
jecxz
sub
xchg
mov
push
or
mov
dec
mov
push
aas
sbb
icebp
insb
mov
push
outsb
inc
pop
lea
xor
jne
sbb
jae
push
out
pop
mov
mov
inc
jmp
sbb
out
jecxz
inc
cltd
lods
xchg
cmpsl
mov
and
or
gs
insl
call
jb
push
lret
std
mov
lret
ljmp
jecxz
push
jl
mov
fcompl
pop
lods
sarb
cli
push
cmp
ss
cmpsb
push
into
mov
movsl
or
outsb
and
in
inc
pop
xchg
sub
or
jns
push
repnz
rorl
ds
push
adc
movsl
mov
inc
xor
or
into
je
cli
shrl
adc
or
shr
cmp
adc
jle
loopne
xlat
pop
movsl
and
movl
pop
out
add
fs
and
adc
pop
adc
or
inc
lahf
loopne
stos
jl
lret
call
pushf
out
inc
cld
ja
mov
pushf
mov
inc
pop
arpl
push
jnp
sub
test
cli
mov
inc
cmp
stos
cmp
jp
push
les
push
xor
mov
in
sbb
xchg
mov
testl
sub
or
arpl
jge
dec
loope
xchg
dec
or
outsb
cld
pushf
xchg
pop
int3
mov
dec
arpl
addr16
cld
les
jb
lds
aaa
xor
jl
or
shrb
fdivrs
or
lcall
push
add
mov
insb
xchg
pop
push
push
and
mov
lcall
lods
aas
out
adc
jp
mov
repz
sti
jnp
jecxz
mov
mov
mov
outsl
cmp
pop
mov
pop
jp
or
cmp
mov
je
mov
add
and
sbb
mov
mov
xor
pop
es
cmp
shll
push
iret
dec
pop
lahf
lock
inc
or
ds
aad
add
cmp
mov
in
sub
fimuls
lret
stos
pop
adc
adc
repnz
or
mov
leave
jae
ficomps
cs
and
sub
mov
test
aam
inc
rclb
out
jge
loope
cli
cwtl
popf
sub
ret
pop
scas
mov
mov
cld
loopne
out
mov
xorb
or
jp
jge
and
mov
or
faddl
aam
xor
filds
gs
ds
jae
inc
mov
xor
jo
stc
cmp
push
sub
sbb
xor
mov
jecxz
out
jmp
or
out
jb
mov
mov
jns
cmpsb
mov
pop
sub
push
sub
imul
push
icebp
mov
cwtl
cmp
mov
dec
add
sub
push
aam
jge
cmp
mov
push
mov
insl
mov
movsl
mov
dec
mov
pop
mov
data16
dec
cmp
mov
mov
sbb
outsl
xchg
xor
test
pop
dec
rolb
test
and
dec
xchg
push
and
jmp
jle
adc
xchg
mov
and
add
adc
jo
test
mov
es
lock
out
mov
pop
pop
adc
adc
popl
scas
outsb
popf
mov
xacquire
lcall
js
lods
loope
lods
xor
outsl
inc
js
mul
dec
loop
mov
push
jle
andb
scas
je
mov
int3
into
cmp
int
mov
out
pop
xor
xchg
inc
and
ret
dec
dec
cmc
iret
and
push
jecxz
push
mov
aad
ftst
dec
xor
lret
xor
je
add
xchg
xchg
add
ja
sub
shlb
scas
inc
cli
adc
gs
movsl
or
and
sbb
inc
jg
stos
test
cli
fcompl
push
xchg
cltd
adcl
pop
or
or
add
stos
xor
enter
jle
xchg
lods
sbb
repnz
mov
test
repnz
or
pop
mov
push
fisubrs
mov
cwtl
js
dec
scas
out
out
nop
lods
cmc
repz
jl
rcll
sbb
and
fisttpl
ljmp
sub
jo
in
hlt
pop
ljmp
je
mov
shll
pushf
movsl
enter
inc
xor
push
fdivrl
repz
std
xchg
lahf
cmp
fists
movsb
push
jmp
rorl
jno
jo
xor
jmp
and
mov
sbb
dec
stc
adc
sub
push
push
lds
lret
rcrb
pop
or
inc
hlt
aaa
loopne
and
xlat
fsubrl
movsl
sbb
rorb
divl
cs
mov
outsb
repz
pop
data16
dec
push
sub
out
dec
adcl
sbb
xchg
jl
xor
xlat
inc
jecxz
mov
stos
fs
in
inc
daa
push
adc
dec
sbb
in
repnz
cmc
out
sbb
pop
mov
cmp
stc
push
stc
mov
addr16
mov
inc
jmp
dec
in
jp
addr16
and
or
jle
mov
sub
addr16
fiadds
cmpsl
inc
frstor
mov
mov
fisubs
pop
mov
mov
xor
fnsave
cmp
xor
sti
cmc
add
push
das
inc
insb
dec
and
jbe
icebp
mov
mov
sub
rcrl
cmp
ret
push
inc
cli
push
and
int
sbb
jnp
add
or
push
adc
mov
ret
out
pusha
and
je
ficomps
clc
fwait
addr16
jne
ret
sub
nop
inc
dec
xor
mov
sti
leave
fidivrs
xorl
cltd
insb
sbb
and
pushf
insb
mov
mov
fbstp
push
jp
xchg
inc
add
out
xor
imul
dec
adc
lahf
sub
aam
cltd
and
lea
dec
leave
leave
outsb
push
movsl
xchg
or
jbe
mov
mov
cltd
mov
imul
cmp
pop
xchg
adc
ljmp
mov
dec
sub
and
jl
add
inc
hlt
ret
xchg
negl
jo
xchg
xchg
mov
pop
mov
jle
push
mov
clc
cmp
sbb
stos
dec
sti
or
out
push
and
fucom
sti
dec
fldcw
cli
fsub
xor
das
mov
and
aaa
repnz
adc
adc
mov
or
xchg
cmp
sub
lret
jo,pt
jb
cltd
fwait
das
fsts
mov
in
cmp
cwtl
sub
cmc
gs
push
cmp
mov
clc
push
pop
add
sub
imul
xor
cltd
es
loope
pop
mov
incl
test
xor
je
cmp
inc
jbe
cld
push
dec
jle
arpl
cmp
add
cwtl
lahf
pop
and
mov
xor
das
push
cmp
xchg
xchg
es
push
outsl
inc
adc
lods
roll
and
cmovne
int
mov
push
lret
test
add
mov
sahf
fwait
cmpsb
cmpsb
or
movsl
cmp
dec
mov
or
mov
mov
push
test
pusha
pop
jns
lahf
scas
jmp
push
add
jnp
add
dec
sbb
fdivrs
push
pop
sti
testl
je
dec
icebp
add
add
shll
dec
adc
mov
jecxz
fmuls
xchg
or
add
sti
out
jb
mov
adc
repz
sub
jne
or
es
cmpl
test
ret
into
mov
push
jg
jbe
movsl
push
lahf
lret
loopne
out
sub
in
repnz
push
xor
lea
inc
adc
inc
sbb
int3
push
push
shll
ror
in
ficoml
inc
aam
loope
in
and
test
movsl
jecxz
xor
add
and
push
inc
push
cmp
xchg
imul
jo
sti
mov
pop
and
insl
dec
dec
sub
stc
dec
mov
sbbl
cli
inc
aad
jb
dec
xor
mov
and
xchg
and
mov
rorb
push
jns
lock
idiv
cli
mov
dec
mov
mov
fmull
movsl
pop
add
and
pushl
mov
xchg
out
jge
insb
pusha
dec
icebp
xchg
mov
adc
jg
mov
or
fcomps
mov
cmp
pop
fs
adc
jne
push
sub
or
sti
scas
xchg
ss
mov
push
std
lea
test
sub
pop
mov
push
jno
mov
cld
lods
inc
cmp
xor
dec
cltd
sti
movsb
js
push
adc
adc
fiadds
incl
dec
sub
jo
sub
adc
enter
xchg
lret
jecxz
out
push
insb
xchg
lret
and
hlt
adc
mov
cmp
pop
cmpb
cmp
popa
mov
sbb
adc
dec
cmp
mov
mov
repnz
sbbb
cmp
dec
movd
testl
icebp
lods
add
sub
dec
jbe
mov
sub
push
push
nop
in
cltd
in
cmp
push
xor
ds
lods
cs
ret
dec
int
push
cmp
mov
dec
xchg
shlb
xchg
clc
xor
in
pop
out
cmp
xchg
test
adc
xor
pushl
fs
out
add
adc
aam
sbb
je
and
sbb
adc
push
sbb
sbbl
cmp
nop
shrb
inc
sarb
mov
inc
bound
inc
and
mov
das
xlat
repnz
mov
jo
mov
enter
mov
push
xchg
test
pop
pusha
cmp
jle
sbb
jge
mov
jmp
fdivs
inc
add
movsl
and
sbb
sbb
jnp
popf
out
roll
mov
mov
jb
jle
push
mov
jae
dec
pop
push
mov
je
lret
lret
lock
stos
insl
test
xor
aas
out
icebp
mov
cwtl
rclb
sbb
repz
shrb
adc
dec
test
xor
int
jmp
pop
sub
in
pop
mov
insb
cmp
not
repnz
enter
and
iret
pusha
pop
rcll
xor
sub
mov
mov
jp
xor
in
xor
push
test
sahf
add
mov
or
aas
and
xor
jae
mov
dec
dec
sti
insb
and
adc
in
inc
cmpl
dec
sbb
lods
test
sbb
fwait
inc
adc
test
inc
xor
mov
sti
test
cltd
movsb
sbb
adc
js
jne
ss
loope
in
pushf
ret
loope
pushf
or
dec
dec
decb
sti
sub
mov
inc
out
ja
aas
scas
daa
outsl
mov
pop
int3
mov
add
addr16
jno
push
out
and
iret
lds
divl
int
jbe
fnstenv
aas
jnp
repnz
sbb
xor
mov
stc
fcoml
add
jo
adc
adc
daa
call
push
pop
repnz
daa
or
pusha
pop
sbbb
jp
xchg
shll
dec
dec
add
jg
sbb
aam
aam
popa
adc
pop
rclb
sub
adcb
aad
push
mov
jge
sub
pop
cmpl
xchg
xchg
pop
mov
popa
add
mov
aaa
jp
xor
lahf
cmp
outsl
mov
cmp
fbstp
jg
cmp
jno
les
pop
popa
jp
popf
int
aas
inc
dec
imul
push
call
je
dec
movsl
mov
fcom
aaa
jns
mov
test
push
xchg
jmp
aam
lea
aas
jns
stc
in
xchg
cmc
push
push
bound
lahf
arpl
or
jae
in
loopne
xchg
mov
rcll
lret
mov
hlt
or
insb
hlt
mov
mov
push
cld
dec
push
cli
pushf
sub
mov
push
mov
mov
xlat
pop
mov
pop
clc
jmp
mov
add
aam
outsb
pop
push
xchg
xor
cmpsb
iret
or
push
adc
xorl
sbbb
push
enter
xchg
push
cmpsb
xchg
out
xor
lock
scas
dec
repnz
stos
jnp
add
inc
ja
dec
outsl
mov
lret
iret
xchg
jecxz
je
pop
sbb
mov
adc
mov
dec
inc
jle
and
mov
loop
out
popa
es
nop
ret
hlt
pop
sbb
pop
fdiv
push
add
sub
stc
mov
lock
shll
in
outsl
mov
sbb
or
push
sub
pop
stos
das
pop
std
je
in
aad
push
xchg
lods
xchg
mov
cmp
sbbl
xchg
data16
data16
je
jg
lahf
xor
jmp
xchg
insl
inc
jp
mov
pop
cmp
out
or
shll
testl
pop
arpl
cmp
and
cmc
mov
xchg
xchg
stc
lock
dec
sub
pop
mov
int
xchg
stc
lock
insl
add
or
add
fldcw
fsubrl
fxch
xchg
sbb
mov
aas
push
sub
in
out
mov
xchg
cmp
mov
push
loope
out
jp
xchg
data16
les
aas
mov
add
jp
jne
sub
inc
test
dec
cli
inc
pop
cmp
mov
mov
rcr
mov
jb
aad
dec
adc
mul
and
sbb
popa
dec
and
sub
push
mov
in
jmp
sbb
lcall
mov
xor
push
and
pop
aas
and
call
fldenv
fnstenv
fistl
adc
inc
sahf
inc
lods
imul
fisubs
adc
cld
inc
jle
hlt
imul
ret
push
push
hlt
xchg
shr
adc
mov
test
bswap
xchg
pusha
js
aad
pop
cltd
xchg
mov
push
fcoml
mov
adcl
cs
in
out
xor
add
pop
lock
stos
add
mov
cmpsb
cmp
fstps
sub
sub
xchg
jp
jbe
jae
fisubl
add
in
or
dec
rcl
je
mov
test
or
mov
cmp
sub
shr
sub
xchg
leave
jecxz
cmpsl
fmulp
mov
xchg
dec
add
pop
mov
cmc
sub
roll
pop
mov
stos
mov
and
sub
lea
inc
cltd
mov
in
xchg
adcl
movsb
ret
push
incl
dec
mov
jae
fidivrs
mov
add
and
jge
mov
test
dec
mov
add
jns
dec
ja
int
cld
push
mov
movsl
fdiv
and
je
out
push
ret
xor
push
xor
call
push
cmp
adc
mov
or
mov
or
or
mov
test
lret
sub
cmp
add
loopne
mov
fldt
cmp
xor
xor
shrl
js
adc
je
jle
subl
mov
rclb
inc
sbb
push
dec
loope
mov
in
in
cmp
in
je
cld
test
ret
mov
push
jp
rorb
hlt
mov
push
sub
lret
jbe
bound
mov
out
imul
sti
or
jmp
or
dec
addr16
stos
cs
leave
jge
add
jno,pn
stos
jecxz
imul
push
push
mov
xchg
mov
fcoms
js
add
ret
stc
dec
bound
mov
push
xchg
lret
das
sub
imul
ret
xchg
xchg
cs
lods
push
sbb
xchg
clc
xchg
cmp
dec
xchg
pusha
sbb
mov
xchg
das
xchg
dec
cmpsl
add
adc
push
ret
fcom
lcall
out
andb
fsubs
adcb
jns
cwtl
nop
imul
mov
movsb
dec
fcoml
mov
push
iret
jbe
jnp
jp
testb
cmp
jns
in
mov
add
cmc
fisttpll
dec
xchg
and
rcr
insl
push
int
imulb
sbb
mov
andb
loopne
mov
and
fisubl
outsl
call
cmpsb
stos
popf
add
lock
and
cld
scas
fucompp
pop
stc
pop
repnz
mov
ljmp
or
add
loop
insl
dec
mov
jl
add
add
xchg
dec
sbb
add
test
int3
jge
and
cmpsl
mov
or
lods
in
fimuls
jmp
aaa
in
cli
mov
or
data16
lods
dec
inc
mov
mov
push
jmp
mov
test
mov
jge
mov
sub
inc
mov
xchg
pop
subb
int
mov
mov
sub
ficompl
in
ret
es
dec
mov
shll
sub
loop
sbb
add
call
imul
in
inc
hlt
push
sbb
orl
aaa
or
jnp
xchg
roll
arpl
mov
jns
movsl
cmp
arpl
sbb
or
mov
mov
mov
pop
mov
mov
ret
stos
or
xor
push
stos
push
adc
cmp
mov
mov
jnp
aad
and
adc
pop
sub
in
fcoml
leave
sub
dec
mov
int3
imul
lret
inc
pop
sbb
inc
aaa
cmp
inc
and
shlb
push
mov
out
divl
aaa
jo
add
inc
or
jnp
loope
inc
dec
lds
pop
lcall
and
push
je
js
add
mov
filds
pushf
jnp
or
mov
ficoml
out
xor
pop
xchg
and
adc
scas
jbe
xchg
nop
jecxz
cmp
mov
orb
cmc
add
push
and
push
mov
sbb
sarb
mov
mov
adc
lret
and
test
test
pop
push
fidivrs
sbbl
ret
mov
mov
dec
lea
sbb
frstor
cs
imul
dec
cmp
cmovae
inc
jle
test
dec
rolb
bound
push
cmpsb
into
dec
idivb
xor
mov
lret
pop
popf
push
fiadds
pop
popf
out
dec
or
fdivrs
adc
cmp
xor
arpl
xchg
and
jbe
stos
mov
outsb
sbb
inc
jmp
decb
aaa
pop
fldcw
xlat
xchg
test
loop
fsubrl
mov
pop
mov
pop
pop
mov
out
add
jg
js
aas
jb
fsubrl
pusha
aas
mov
and
xchg
cmpsl
mov
popa
adc
rcll
inc
leave
sub
fld
cli
fildl
cs
js
cmp
imul
scas
movsb
and
and
repnz
xor
mov
ja
jbe
fistpl
in
pop
or
scas
outsb
mov
jbe
rorb
cmp
fdivrs
pop
add
sub
mov
ret
mov
cmp
mov
lret
pop
mov
pop
push
push
test
testl
aas
das
jmp
rep
out
jl
pop
lret
dec
pop
inc
xlat
xchg
aad
outsb
push
lock
stos
xchg
loopne
aad
daa
jnp
mov
xor
cmpsb
pop
cmc
jge
clc
push
call
shlb
out
ja
jmp
mov
push
out
stc
add
mov
inc
insl
shll
leave
mov
xchg
sub
xor
mov
dec
jbe
lahf
call
mov
mov
out
ljmp
icebp
mov
clc
scas
pop
inc
sbb
dec
jg
pop
ficoml
add
lock
add
sbb
leave
outsl
and
insl
pop
mov
cmp
test
fstpt
in
test
mov
aaa
xor
lods
test
testl
mov
cmpsl
xor
cmp
dec
orb
mov
iret
sbb
cld
pop
enter
leave
xor
cmc
dec
xchg
fsubl
scas
inc
inc
out
fldcw
push
push
mov
addr16
bound
and
sub
inc
pop
mov
movsl
fucomi
out
mov
push
push
add
nop
pop
or
scas
sahf
rclb
loope
shll
loopne
pushf
fsubrl
inc
jmp
mov
rolb
lea
fstpl
jbe
test
cmp
into
pop
push
inc
scas
push
cmp
mulb
loop
mov
fwait
sbb
cmp
loopne
sbb
jb
loopne
mov
pop
stc
data16
cmp
shl
dec
ds
dec
dec
inc
out
push
sub
in
add
aad
add
andb
lahf
xor
mov
fxch
or
cld
fwait
jns
pop
inc
adc
clc
fdivl
add
dec
dec
push
cltd
push
sub
dec
xchg
fisttpll
lods
push
inc
adc
sub
mov
enter
xchg
push
imul
and
mov
jne
pop
sahf
and
not
and
pop
dec
push
add
cmpsb
adcl
push
out
jns
pop
and
mov
push
mov
clc
mov
push
sbb
and
dec
loope
push
outsl
bound
and
sbb
bound
push
in
sarl
sahf
mov
aam
imull
cld
rclb
xor
and
push
dec
lret
cli
std
xor
lock
adc
hlt
call
adc
imul
mov
jecxz
pop
ss
cmp
cmp
pop
loopne
pop
les
dec
outsb
iret
enter
sbb
shrb
dec
rorl
outsl
call
or
sbb
lcall
imul
and
jle
inc
push
in
lock
aam
mov
pop
mov
pop
push
mov
mov
jns
mov
dec
lods
cs
bound
inc
cli
orl
push
lods
mov
xchg
mov
insb
mov
popa
cmp
pop
ficoms
push
sbb
push
dec
xchg
mov
jnp
mov
nop
cmp
out
cmp
in
jg
or
and
adc
in
adc
pop
outsb
and
data16
jmp
or
push
lcall
insb
xor
dec
jg
sbb
dec
outsb
testb
adc
sbb
pop
mov
push
sbbb
pop
arpl
sti
fdivl
add
mov
ds
inc
lock
xchg
push
mov
test
push
push
adc
xchg
jle
insl
fidivrs
inc
sbbl
leave
out
and
testb
cmpsb
mov
mov
mov
sbb
mov
or
lods
and
arpl
imul
mov
mov
xor
decl
fistpll
pop
scas
mov
xor
mov
rcrb
adc
push
sbb
int3
orb
jmp
add
xchg
pop
inc
dec
push
sbb
jl
sbb
bnd
popf
lret
sbb
xchg
mov
test
mov
pop
ret
and
jl
and
in
sub
sub
outsl
and
ffreep
fnsave
sub
lret
dec
int3
rorb
call
mov
test
sub
jmp
jo
sbbb
repz
xchg
psubsw
add
jecxz
cmpsl
adc
mov
mov
sbb
clc
icebp
leave
jae
mov
sbb
or
scas
add
mov
cmc
dec
push
pushf
xor
mov
jp
rolb
cmp
rorb
push
imul
hlt
lock
popf
scas
das
popa
push
add
cltd
std
jmp
sub
xchg
std
push
mov
jnp
fsts
mov
jne
mov
cli
lock
mov
mov
scas
jo
pop
sub
inc
sub
idivl
and
shll
jp
xor
mulb
xchg
xor
rorl
add
dec
xor
stos
insb
fmull
cwtl
test
pop
sub
xchg
in
sbb
push
inc
outsl
icebp
leave
adc
push
xchg
inc
sub
xchg
insb
les
mov
push
es
sbb
in
and
mov
mov
fs
push
inc
mov
xchg
push
repnz
xor
inc
imulw
mov
sahf
dec
icebp
test
pusha
jae
xchg
pop
jl
adc
mov
and
scas
shl
mov
bound
adc
mov
jo
aaa
pop
hlt
mov
lock
mov
push
cltd
jnp
jb
pop
dec
rorl
sti
mov
insl
lret
mov
outsl
iret
mov
push
mov
pop
cli
mov
cmp
push
pop
jmp
xchg
popa
sarl
adc
aad
mov
inc
mov
inc
dec
pop
xchg
pop
adc
mov
mov
insl
or
stos
mov
xorps
bound
popa
pop
iret
sbb
mov
sahf
cmp
scas
mov
sbb
push
daa
sbb
add
jo
mov
push
gs
movaps
dec
aaa
test
dec
pop
je
pop
mov
sbb
imul
cld
jmp
inc
lret
dec
pop
mov
jb
daa
out
fs
xchg
daa
mov
xchg
mov
or
and
shrl
pop
scas
cmp
lds
jle
mov
stos
ljmp
xor
dec
cmp
insb
ds
outsl
cmpsl
jp
sbb
xchg
push
data16
mov
adcl
fadd
or
adc
push
push
mov
and
test
loope
xchg
mov
daa
add
xchg
lret
xor
scas
hlt
push
sbb
arpl
out
and
leave
movsb
mov
adc
fsubl
inc
or
mov
and
inc
out
pop
mov
lea
leave
jbe
outsl
int
test
cltd
fdiv
clc
cmp
incb
imul
imul
pusha
mov
insb
mov
hlt
push
push
or
loop
das
loopne
xchg
mov
jp
dec
pop
sub
shll
cmp
adc
sbb
mov
add
adc
or
push
mov
mov
push
push
les
mov
mov
shl
jo
sbbb
sub
into
sub
in
sub
in
mov
pop
mov
cmpsl
mov
pop
ja
and
cmp
repnz
popf
or
in
stc
movsb
inc
fildl
lahf
in
pop
sub
jge
data16
xor
das
stc
push
xchg
or
rolb
dec
repnz
out
aas
lea
push
sub
dec
pop
repz
push
pop
movsl
ror
or
inc
shll
adc
enter
dec
arpl
add
mov
push
stos
insl
mov
pop
pop
test
sbbb
mov
sarb
inc
adc
pushw
popa
push
test
sub
cmp
fwait
ret
inc
fidivl
imul
xchg
jno
int
pop
sbb
jno
sarl
inc
mov
ffreep
or
fmul
aaa
lea
fwait
aaa
fidivl
inc
inc
outsl
fildll
xor
inc
lret
out
dec
mov
jge
out
xor
mov
adc
loope
dec
add
xorl
sub
out
cmpsl
mov
push
in
iret
mov
enter
push
dec
jp
push
sub
push
sbb
jnp
cmp
jno
lret
dec
data16
test
xchg
push
insb
out
je
jo
sub
push
cmp
cmp
repz
mov
inc
mov
mov
iret
xchg
pop
lcall
mov
in
movsl
and
movb
xor
fildll
mov
xchg
mov
mov
imul
rcl
shl
ret
loope
imul
xchg
lret
sbb
adcb
dec
and
pop
cmp
push
lods
out
add
ficoms
dec
icebp
lcall
mov
jae
lsl
push
mov
cmpb
out
rcll
std
sub
add
cli
cmp
mov
mov
sub
pushf
loopne
clc
xchg
push
push
mov
fmuls
dec
jbe
push
dec
inc
mov
xor
and
jg
les
and
cmp
mov
push
lret
insb
mov
cmp
sti
repz
shll
mov
sub
pop
mov
lret
loopne
into
ret
xor
inc
lret
cmp
xchg
dec
mov
fstps
roll
lock
imul
pop
cmpsl
aad
sahf
rorb
scas
xchg
jg
pop
in
mov
push
cmc
bnd
dec
dec
pop
dec
xor
stc
fnsave
lret
out
or
pop
mov
outsl
and
and
mov
and
push
xchg
es
pop
lods
loopne
mov
call
clc
jg
push
jmp
in
sub
testb
mov
shlb
push
call
inc
rcrb
dec
sbb
push
sti
lcall
inc
jge
jo
sub
xor
movsl
xor
into
test
fucomp
xor
mov
testb
fs
jne
popa
aas
push
cmpsl
mov
xor
loop
lret
jbe
mov
or
aas
fwait
and
push
xor
jmp
repnz
cld
mov
mov
pop
leave
flds
cmpsb
or
mov
xchg
jo
xor
mov
lret
or
push
add
mov
mov
mov
inc
cmp
add
jnp
xor
icebp
nop
cmp
in
xchg
or
cmc
aam
add
stos
lret
xor
add
mov
sub
pop
dec
icebp
xor
xchg
mov
lret
add
js
sub
aam
lods
or
lahf
pop
mov
shlb
cli
jo
and
filds
leave
push
xchg
jp
in
push
push
cmp
cs
pushf
fnstsw
daa
in
jbe
xchg
cmc
dec
mov
mov
and
outsb
fisubs
cmpb
cmp
aaa
push
inc
add
cmc
enter
test
xor
rcll
shl
loop
pop
jmp
hlt
mov
cmpl
aad
lock
jmp
mov
mov
arpl
add
mov
sub
pop
or
xchg
jo
xor
xor
sub
popf
lock
jbe
add
xchg
mov
push
xor
ret
dec
cmpsl
lods
sti
lds
or
imul
jl
add
jge
push
cwtl
out
and
ljmp
and
mov
pop
push
cmp
inc
imul
jb
ss
add
movsl
xor
sbb
push
xchg
dec
cmpsb
or
sub
enter
sbb
mov
cmpsl
dec
fwait
leave
divl
js
sbb
or
lcall
cmp
add
jo
std
mov
or
dec
test
orl
push
bound
fs
enter
faddl
pop
cmp
ret
jbe
call
dec
jp
enter
cwtl
lcall
sub
orb
xlat
div
cmpb
jp
outsl
or
popfw
cmp
xchg
or
ljmp
sub
rcll
out
xchg
pop
nop
mov
sbb
stc
test
mov
inc
sarb
clc
mov
xchg
mov
and
jns
lcall
js
mov
sbb
divb
xor
mov
out
and
fldenv
test
push
leave
jg
and
cwtl
xor
in
xchg
mov
cltd
int3
hlt
imul
mov
sub
pop
sbb
cs
mov
jbe
sbb
rcl
cmp
add
sarl
js
lods
push
into
imul
sub
and
fstpl
adc
imul
aad
push
and
mov
cs
mov
mov
outsl
insl
sbb
in
jnp
push
pop
dec
call
jge
subl
push
movb
nop
test
mov
lcall
xlat
push
xor
lcall
dec
pop
xor
leave
pop
out
inc
ret
xchg
rol
out
mov
adc
js
mov
pusha
push
pop
and
cwtl
mov
or
push
call
pop
dec
out
mov
dec
in
lock
lods
or
pop
push
mov
popf
and
jae
mov
sbbb
call
imul
pop
sti
xchg
jmp
inc
dec
stos
jne
adc
push
mov
scas
xchg
xor
cmc
and
scas
test
int
push
ss
or
jnp
sub
or
cmpsl
aad
dec
inc
inc
push
or
dec
cld
movsb
shll
add
jo
and
push
call
add
dec
jno
sub
xor
add
mov
xchg
in
mov
stos
ljmp
adc
inc
jle
and
pop
fldcw
add
sub
daa
push
sub
jl
sub
push
or
cmp
add
adc
mov
lahf
outsb
std
mov
add
ror
ds
mov
xchg
xor
xor
mov
jmp
pop
cwtl
jne
jmp
mov
mov
pop
pop
data16
add
mov
ja
out
ds
pop
cmp
lea
dec
dec
jne
mov
pop
dec
push
inc
out
jmp
sub
cwtl
push
sub
mov
test
mov
mov
sub
push
mov
and
or
adc
mov
fsubrp
jle
icebp
xlat
dec
or
or
loopne
mov
mov
pop
inc
in
bound
je
cmpsl
out
bound
adc
rcrl
mov
idivb
lods
int
jecxz
jbe
cltd
xor
not
aaa
out
mov
inc
pop
out
enter
jne
dec
inc
pop
jo
lds
mov
les
iret
sbb
cltd
fmuls
addb
mov
push
xor
out
insl
gs
mov
pop
aas
insl
fmulp
ljmp
repz
adc
jge
push
xor
mov
mov
sub
mov
push
inc
insl
dec
fstl
fwait
mov
xor
or
lcall
nop
rcrl
ljmp
jge
into
mov
pusha
mov
or
xchg
cmp
fdivrs
sbb
add
imul
cmp
jl
mov
xor
cmp
dec
push
mov
and
test
jnp
jae
sub
cld
sbb
xchg
fisttpl
dec
lcall
or
fsts
pop
mov
sbb
pusha
das
push
jmp
cwtl
push
pusha
scas
mov
clc
aam
jp
sub
scas
mov
insl
stos
inc
push
das
stos
sarl
cmp
push
inc
das
jno
es
imul
jmp
cmc
std
jecxz
sbb
adc
pop
into
lods
jl
in
aad
push
out
pop
add
xlat
and
loopne
cmc
adc
adc
mov
out
pop
scas
and
fwait
jae
push
dec
sbb
scas
add
jg
and
insl
out
mov
fwait
clc
call
mov
xor
jl
out
mov
mov
lahf
inc
jmp
aam
sub
enter
cwtl
lds
cmc
ja
movl
cld
inc
sub
sub
add
in
and
ret
add
push
push
sub
push
lea
int
jo
push
adc
cmp
js
push
sbb
xor
cmc
sub
xor
push
mov
sbb
push
cmc
xor
or
and
or
fwait
stc
cmc
dec
push
mov
icebp
mov
movsb
inc
imul
xlat
out
nop
fstl
inc
lods
bound
jo
outsb
mov
hlt
jge
inc
mov
ja
add
mov
mov
push
add
or
inc
test
push
in
ljmp
leave
xchg
cmp
popa
mov
in
push
mov
jl
mov
xrelease
push
add
arpl
jp
pop
sub
push
movsl
mov
scas
shlb
aam
cmpsl
or
push
adc
in
cmp
out
arpl
sbb
cmp
and
sub
sahf
lods
cmp
xchg
and
addb
sub
call
rcrl
inc
sub
ss
dec
lret
movsl
xor
sub
sarl
scas
push
xchg
jns
cld
fmulp
shll
jae
inc
push
lret
pop
fisubrl
adc
test
test
pop
pop
pop
inc
out
daa
and
ret
in
lods
movsl
std
fcomps
in
movsb
lret
cmp
jnp
sub
add
adc
pusha
pushf
dec
lock
mov
jg
cmc
xchg
push
cli
gs
push
iret
jecxz
or
jmp
inc
inc
iret
lcall
aas
mull
adc
cmp
gs
push
and
ljmp
pop
mov
addr16
aas
ds
pop
movsb
jb
cmpsb
aaa
pop
xor
je
pop
out
adc
std
ffree
push
mov
jmp
and
sub
aad
inc
xor
adc
sahf
push
mov
test
xchg
push
negb
or
dec
pusha
loop
push
lret
test
xor
cltd
int3
pop
push
xor
and
sub
es
dec
lods
jno
arpl
in
push
inc
and
nop
addb
fdivr
xchg
int3
jo
loope
movb
sub
arpl
xchg
fisttpl
pusha
sbb
imul
cmc
aad
and
sbb
mov
dec
cli
ja
jae
mov
xor
add
mov
or
shl
or
jmp
int
sahf
mov
xlat
add
or
jge
ds
dec
sub
cwtl
adc
in
aaa
cltd
faddp
xlat
sub
mov
push
xor
popa
in
cmp
std
cmc
xchg
into
dec
dec
addr16
lods
sbb
xor
ret
mov
jle
xchg
mov
jl
cmp
inc
adc
daa
mov
cmp
mov
xlat
mov
hlt
xchg
shlb
sbb
pop
lods
imul
xor
ss
mov
and
adc
mov
pop
mov
inc
xor
out
mov
mov
push
lock
sub
aam
dec
pop
inc
jno
lcall
lods
mov
or
inc
stc
mov
jns
repz
mov
mov
mov
adc
pop
push
xor
push
sub
jne
repz
adc
mov
dec
jb
and
lods
dec
xchg
je
pop
and
mov
aaa
inc
insl
stc
faddl
xor
and
stos
mov
mov
cltd
test
pop
jg
ss
jo
pop
in
cltd
sbb
lcall
cmp
cmp
adc
inc
movsb
fiaddl
ljmp
adc
dec
and
out
push
mov
idiv
xchg
lcall
add
hlt
lahf
cltd
fbstp
jge
push
xchg
or
shlb
or
dec
sub
fiaddl
divb
inc
idiv
mov
adc
insb
cld
mov
xchg
shlb
cld
cld
or
pop
mov
inc
mov
mov
cld
dec
or
lods
jle
lcall
daa
iret
enter
ljmp
dec
shlb
loope
fcoms
lods
dec
sub
dec
or
repnz
dec
adc
clc
sbb
push
fs
into
in
mov
push
xchg
dec
xchg
repz
xor
out
daa
pop
aad
and
js
cltd
adc
es
xor
ret
sub
mov
jle
jbe
in
scas
fs
jecxz
loope
mov
pushf
mov
cld
aad
mov
adc
inc
aam
ret
and
mov
pop
cs
das
push
adcl
cli
push
out
push
stos
cmp
mov
lea
cmp
leave
imul
iret
mov
clc
dec
rclb
out
addr16
cmp
xchg
xor
dec
cli
push
pop
insl
pop
popf
pushf
js
icebp
nop
pop
aam
and
adc
lock
mov
dec
in
adc
inc
shrl
aad
lock
out
daa
pop
cltd
test
sbb
mov
adc
push
imul
mov
orb
idivl
dec
addl
popf
insb
jno
jecxz
mov
das
js
jmp
or
jmp
xchg
push
ss
pop
mov
jmp
rolb
gs
fsubrl
lods
xchg
mov
dec
mov
lahf
imul
or
and
fwait
xchg
scas
push
into
jecxz
xor
loope
test
mov
stos
cs
mov
jb
mov
and
test
mov
cs
lret
xchg
push
cmp
ss
inc
add
xor
shl
xor
fsubs
cmpsl
ljmp
sbb
xchg
mov
and
aad
out
fsubrl
cmp
lret
xor
outsb
inc
or
mov
outsl
cltd
sub
popa
lds
jmp
jns
subl
sub
fldcw
xor
lret
push
pop
sbb
jmp
push
jno
pop
xchg
ret
mov
lret
sbbb
sub
cltd
cmp
adc
adc
lcall
lock
mov
mov
popf
jns
and
and
fildl
in
sbb
cmpsl
jp
push
inc
orl
jle
sti
rcrl
ja
adc
or
cmp
ljmp
dec
adc
fidivs
fnstcw
ds
sub
pushf
bound
sub
lods
daa
lahf
and
or
cmpsb
xchg
dec
jae
int3
cltd
shr
jmp
jnp
mov
jne
loop
cmp
call
xlat
mov
sub
test
jno
sbb
inc
cmpsl
nop
push
adcb
or
xlat
push
std
cli
jp
gs
clc
mov
mov
cmp
pop
xlat
stos
add
fwait
mov
and
cmovns
mov
cmp
jp
cwtd
jmp
shlb
adc
idivb
dec
pop
aaa
add
xlat
jg
inc
xlat
sar
scas
dec
frstor
push
je
or
pop
popa
js
inc
adc
popf
pusha
cmp
push
inc
inc
out
jp
inc
lock
faddl
cmp
leave
fiaddl
jle
inc
imul
add
rcr
rcr
mov
sbb
xlat
inc
repnz
inc
subl
and
lcall
jge
xor
jmp
cmpsl
pop
faddl
sbb
jmp
xchg
cmp
jbe
cltd
loope
int3
adcl
popf
loop
lock
cmp
imul
sbb
and
clc
movsb
jns
stc
shl
push
and
jb
rolb
ljmp
outsl
cmp
jne
repz
stos
fsubl
pop
cmpsb
mov
xchg
in
jne
fwait
cmp
jmp
add
pop
movsb
jbe
pop
cmp
add
clc
push
dec
sub
pushf
push
push
push
in
sarb
les
in
pusha
xchg
push
pushf
xor
leave
cmpsb
outsl
add
orb
sbb
inc
addb
lea
sbb
aaa
sti
test
lret
mov
outsl
mov
popf
push
inc
fildll
shll
pusha
sti
aas
mov
mov
add
jge
sarb
daa
enter
dec
fcmovu
xchg
jo
lahf
cwtl
jno
insb
push
je
in
cmpsb
mov
outsl
xchg
cmc
test
dec
mov
mov
jo
fs
and
mov
pop
inc
xor
sub
add
scas
out
addr16
shlb
jno
fs
dec
push
dec
mov
xor
adc
sbb
es
mov
fidivrl
repz
enter
dec
mov
jp
pop
pusha
mov
mov
mov
add
subb
inc
cmp
inc
aam
ret
cld
jecxz
xchg
orb
push
fsts
lea
or
cltd
icebp
pop
sub
lret
das
sahf
je
push
je
xor
mov
fs
inc
bnd
ja
sarb
sarl
ja
push
mov
rcrl
jo
or
mov
push
cmp
and
mov
lcall
jg
dec
movsb
mov
jle
add
insl
addb
xchg
dec
mov
out
test
cmp
ja
dec
fwait
fwait
or
xor
test
jae
rol
adc
fwait
lods
testl
ljmpw
push
mov
cmp
pop
adc
div
lock
sbb
pop
shl
mov
pop
loop
fcompl
dec
test
cmp
xchg
insl
fisttpll
sbb
loope
ds
lret
repnz
fsubl
add
and
ljmp
xchg
mov
dec
das
loopew
test
cmp
ret
lret
imul
dec
sbb
subl
xchg
add
inc
cmpsl
lret
ret
test
pop
push
dec
sahf
jle
ja
loope
push
xorb
in
jb
test
imul
or
ljmp
in
sbb
notb
leave
and
in
aas
xchg
cmpsb
js
pop
adc
loope
cmc
inc
and
inc
add
inc
pop
inc
aas
inc
ss
sbbl
ret
jo
or
out
icebp
add
fs
hlt
rclb
insb
xor
shlb
sbb
loope
xchg
out
mov
sti
adc
cli
in
xor
sahf
or
inc
cs
xor
gs
push
pop
daa
inc
pop
mov
push
xchg
push
inc
gs
xorl
push
mov
pop
or
sub
push
test
mov
negl
into
xchg
add
sub
push
jmp
cmp
test
lcall
dec
cld
outsl
in
adc
add
test
dec
cltd
js
mov
sub
in
ret
push
xchg
cmpb
repz
les
add
mov
sbb
xlat
jle
loopne
add
xchg
inc
aam
adc
dec
xchg
fdivp
clc
je
xor
xchg
push
add
jge
lret
mov
xor
setge
shl
in
loopne
xor
pop
jp
xor
js
sbb
xor
xor
jecxz
out
push
mov
xchg
sahf
inc
ja
int3
and
push
and
xor
jg
js
mov
xlat
cmp
repz
xchg
jg
push
adc
leave
mov
jle
xchg
lret
mov
push
das
and
jmp
xor
fcomps
push
push
cmp
mov
adc
ficoms
cld
cmpsl
imul
or
mov
cli
adc
sub
jnp
loop
in
adc
into
dec
mov
insb
outsb
cmpb
jbe
mov
ret
jl
ljmp
lods
in
cmp
jae
pop
cmp
idivl
outsb
xchg
push
mov
mov
and
adc
and
js
data16
cmpsl
iret
dec
fnstenv
push
xchg
sub
loopne
cmp
xor
pop
and
mov
rclb
and
push
cld
es
lcall
xchg
mov
and
iret
out
dec
std
std
arpl
cmp
addb
leave
in
sub
in
push
cwtl
rcr
scas
dec
out
int
jecxz
int3
rdmsr
lcall
xchg
repnz
sub
pop
and
aad
inc
imul
ljmp
lds
jg
pop
push
sbb
cmpsb
mov
push
daa
pop
movsl
fdivp
mov
lea
xchg
repnz
fldcw
inc
jg
adcl
mov
jb
push
fdivr
out
jecxz
mov
data16
imull
ret
inc
in
pop
push
popf
or
xor
jp
aad
jecxz
rol
std
leave
les
jb
cltd
pusha
sahf
aam
xchg
stos
or
in
push
sbb
dec
cmc
mov
call
fchs
inc
mov
lahf
arpl
xor
mov
call
cmp
add
std
dec
sub
add
mov
ds
pop
mov
stc
stc
jns
outsb
dec
fcomps
pop
lds
bound
mov
mov
out
push
pop
add
or
movsl
mov
jns
lods
cmp
sbb
bnd
push
cmp
test
push
fxch
pushf
aas
fstp
out
jns
inc
cli
lcall
daa
out
ret
shlb
add
aas
notb
xor
mov
sbb
dec
sub
push
test
xchg
pusha
dec
fsubs
push
mov
inc
or
movsl
mov
sub
add
cmc
mov
inc
in
pop
fdiv
dec
dec
aad
sbb
xlat
mov
adc
add
fcompl
in
ret
decl
ret
rol
jne
or
movsl
xor
in
aaa
xchg
sbb
add
aas
mov
iret
arpl
repz
jne
jle
fsubrl
fwait
xchg
pop
mov
enter
mov
pop
aam
sbb
notl
cmp
adc
test
enter
cmp
add
add
mov
jecxz
dec
dec
test
out
push
jl
jno
push
xor
stc
cmpsb
rorl
add
cli
jo
push
lods
pop
add
dec
push
xchg
or
xchg
fwait
pop
std
mov
pop
jo
cmp
fidivrl
insb
arpl
and
mov
int3
fs
ss
or
sub
hlt
or
stos
arpl
ljmp
jbe
clc
dec
in
mov
popf
subl
dec
in
shrb
pop
outsb
lret
notl
fldcw
lret
jns
aas
std
filds
mov
icebp
push
movsb
mov
test
cli
xchg
xorb
pop
pusha
and
mov
pop
dec
jne
dec
gs
xor
jb
in
jle
inc
int
sub
cmp
jb
sbb
mov
shr
inc
sub
push
and
and
jmp
jbe
sub
mov
cmp
lods
addl
mov
scas
outsl
sbb
dec
adc
loop
pop
rcrb
push
idivb
mov
mov
jae
adc
dec
fnstsw
and
notb
inc
mov
mov
cld
sti
out
mov
jmp
sarl
in
adc
mov
mov
inc
shl
xchg
je
inc
cmp
faddl
loope
pop
push
mov
and
xchg
pop
fcomps
mov
cmpsl
fwait
push
xor
sbb
jmp
sbb
and
out
mov
lds
push
jo
xor
fs
ljmp
pop
pop
sbb
test
in
popa
rcrb
in
sahf
xchg
mov
push
mov
xchg
add
xor
mov
mov
pop
push
xchg
and
jae
insl
mov
add
popf
daa
mov
mov
or
call
xchg
lahf
cmp
or
mov
mov
mov
test
ljmp
or
push
mov
jno
fidivrl
inc
adc
out
add
pop
pushf
push
stos
xchg
add
pop
fidivl
and
ret
mov
lret
notrack
loop
jno
hlt
outsl
mov
in
daa
push
xchg
movsl
pop
sbb
and
or
sub
mov
bound
dec
sub
jmp
or
call
or
jnp
xlat
or
imul
repnz
out
loop
pop
sbb
ret
flds
lock
inc
call
adcl
inc
arpl
dec
sbb
inc
jbe
adc
add
push
cmc
shl
pop
in
push
les
adc
lods
sbb
daa
jl
mov
xchg
into
lock
out
fiaddl
xchg
sbb
repnz
sti
cmc
es
pop
xchg
mov
out
xorl
ljmp
lcall
cmpsl
jo
ljmp
jp
cli
pop
ret
cmpsl
push
xchg
inc
or
mov
push
sub
dec
adc
mov
out
aad
xchg
ret
inc
mov
fwait
xor
std
cmp
popa
test
insb
lock
popfw
jnp
push
int3
fsubs
and
mov
pop
test
and
fmuls
inc
jl
aaa
mov
pop
add
mov
out
ret
add
dec
movsl
xchg
pop
in
scas
mov
dec
insb
dec
test
rcll
movsl
fcmove
mov
outsl
add
add
push
loop
and
push
popf
pop
jns
repnz
xor
lahf
cmpsl
leave
subb
pushf
push
lock
loopne
ljmp
ja
sub
dec
mov
ret
fsubr
enter
adc
outsb
loopne
lods
sub
movsb
mov
xor
lret
stos
ret
pop
fistpll
and
mov
pop
lock
aaa
or
loope
jecxz
cmp
or
rclb
inc
mov
push
push
cmp
xchg
call
lret
not
and
test
push
dec
xor
std
pop
mov
inc
jno
pop
outsb
adc
xor
dec
xor
les
test
lahf
push
ret
cmc
sbb
inc
call
loopne
adcl
scas
inc
loopne
sbb
insb
call
or
lock
in
stos
and
call
daa
cs
add
in
fwait
adc
cmp
dec
sbb
pop
icebp
and
mov
mov
ficoml
scas
sbb
pop
mov
mov
jl
cltd
jne
imul
add
cmp
and
lret
in
vmovdqu
clc
pop
mov
iret
cmpl
cmpsb
mov
xor
cltd
mov
xor
cmp
clc
gs
jnp
jns
sahf
fisttpll
movsb
movsl
xchg
test
sbb
xor
test
in
adc
xchg
sti
fistps
outsb
stc
xchg
lods
enter
mov
popa
or
or
and
push
sbb
adc
jne
sub
scas
lret
or
out
scas
and
cmp
fsts
lahf
push
lret
xchg
mov
adc
jmp
mov
ret
shlb
mov
sbbl
ror
and
jmp
out
adcb
inc
adc
jmp
push
lahf
lods
add
pop
into
jl
scas
mov
mov
pusha
fldt
push
test
xchg
cmp
lds
lcall
fdivrl
daa
and
sub
cmp
sbb
insb
and
loope
dec
lcall
jno
xlat
outsl
loop
into
dec
dec
jecxz
jae
ljmp
pop
in
jmp
out
xor
pop
daa
lret
xchg
cmpl
xchg
mov
into
mov
sbb
lds
scas
cli
push
pop
adc
fsubrs
test
or
sub
dec
and
sub
lret
mov
iret
xor
xchg
jge
mov
jnp
stos
inc
mov
jge
cmpsl
adc
inc
and
pop
rcll
or
daa
ss
ljmp
push
push
out
adcl
jo
inc
out
xchg
mov
test
xor
xor
adc
inc
mov
cld
leave
push
aas
pop
out
inc
mov
jp
popa
call
sbb
sub
lods
push
mov
xchg
sbb
add
xor
ljmp
pop
dec
loopne
cmc
mov
in
jno
xor
lods
or
add
mov
into
pop
mov
push
test
adc
enter
xor
nop
lret
arpl
lods
scas
jmp
cmp
and
aad
or
xchg
daa
stc
loop
push
jne
dec
add
and
lahf
cli
test
cmp
push
add
pop
dec
dec
mov
xchg
imul
mov
cltd
push
int
jmp
loopne
popf
cmp
xor
pop
add
ret
dec
icebp
loope
not
push
cli
mov
ds
lea
out
add
movsl
mov
ds
movsb
push
insb
sbb
into
cmpsb
push
push
sbb
movntps
aad
sbb
lock
add
fsubl
mov
xchg
cltd
js
out
dec
outsl
pop
lret
mov
andb
psubusw
psllq
push
cmc
rorl
xor
into
aad
lcall
inc
jns
jg
cmp
decl
in
mov
jmp
imul
push
jne
test
arpl
and
jns
mov
inc
and
fstpl
inc
mov
push
es
push
sub
mov
lahf
xor
je
addr16
es
or
and
cmc
push
pop
in
in
dec
xor
aam
test
adc
pop
out
aaa
out
xchg
pop
das
cmp
push
pop
sti
adc
push
outsl
sbb
fwait
adc
push
adc
clc
jns
xlat
sbb
lahf
sub
inc
cld
mov
and
xorb
stos
sub
loope
mov
or
test
adcl
and
test
push
inc
repnz
fistpl
cmpsb
mov
pop
adc
jge
add
loope
adc
push
fiadds
jle
pop
into
sub
pop
xchg
sti
jle
cmp
repnz
lcall
in
dec
fldl
xchg
imul
xor
mov
lcall
jo
cmp
pop
pop
shll
loope
mov
data16
fisttpll
rorl
and
lahf
out
gs
ret
pop
or
out
ja
add
js
xor
xchg
dec
and
loopne
les
lds
lea
stos
imull
mov
jnp
jg
ljmp
test
adc
loopne
popa
mov
xor
das
dec
jno
pop
sub
fistpl
mov
add
sbb
fldcw
pop
addr16
ja
jg
mov
add
jns
add
cmp
clc
lret
jns
movsl
outsl
bnd
jmp
mov
arpl
or
out
push
out
xlat
scas
pop
pushf
mov
or
insl
loope
dec
fwait
xchg
jno
sub
ret
hlt
sub
push
mov
sti
mov
adc
popf
stos
out
lret
sub
iret
js
xor
push
sbb
fsubrl
pop
clc
test
inc
test
inc
mov
fwait
loop
inc
xchg
je
sub
insl
pop
lcall
sbb
inc
repz
xor
mov
arpl
add
data16
pusha
insl
mov
pop
inc
mov
and
mov
lods
and
inc
push
pop
loopne
stos
mov
jne
and
inc
push
cmp
mov
ficoms
and
dec
fimuls
and
fmuls
mov
mov
rcrl
fldenv
pusha
aas
rorl
addb
leave
inc
sbb
bound
testb
or
xchg
cs
adc
cmp
and
ja
std
or
push
xor
dec
jle
fisttps
push
loopne
xor
dec
dec
cmpsl
ljmp
and
or
mov
fidivrs
cmp
adc
lret
dec
imul
jo
int
in
mov
aaa
mov
icebp
mov
notl
push
rcrb
inc
cmpsl
clc
mov
push
or
in
cs
push
inc
mov
movsb
rcrb
loope
out
jne
leave
mov
scas
dec
mov
inc
pop
sti
xor
sbb
insl
xchg
mov
int3
repz
lahf
fldl
pop
out
nop
nop
cmpsb
outsl
or
xor
jge
inc
xchg
or
or
dec
sub
lods
jns
add
xchg
xor
repnz
outsb
cmp
inc
and
jmp
aad
jbe
pop
mov
out
sbb
mov
movsb
fwait
lcall
es
push
inc
iret
push
aaa
lock
jb
sbb
subl
pop
and
inc
pop
mov
fnsave
popa
mov
je
aam
sbb
adc
and
jae
decl
jg
mov
sub
dec
jns
push
scas
es
mov
xor
orl
imulb
test
jb
leave
mov
push
mov
adc
out
lret
ret
jge
into
sub
xchg
pusha
test
icebp
sti
in
lock
addr16
pop
call
ss
cmpsb
mov
lret
cmp
imul
and
sbb
fcmovnb
inc
xchg
call
pop
pop
je
cmp
add
aad
sbbb
adc
inc
xchg
dec
sbb
movsb
ljmp
push
dec
imul
lahf
out
mov
cmp
pop
aam
sub
mov
pop
fcomp
push
pusha
adc
sti
mov
inc
cld
push
dec
ret
pop
push
sbb
mov
lock
pop
mov
rcll
test
sbb
addr16
out
push
mov
ja
xor
pop
adc
mov
test
dec
jae
das
addr16
popf
andl
inc
cmp
shll
pop
and
fs
pop
inc
in
jge
div
arpl
hlt
ja
pop
dec
out
loope
pop
inc
repz
test
mov
push
mov
repz
rclb
cmp
jnp
mov
ficompl
movsl
iret
icebp
aad
cwtl
mov
mov
jge
iret
mov
and
out
sub
pop
add
pop
or
inc
daa
push
stos
fcomi
pop
xlat
into
idiv
jbe
push
mov
addl
mov
adc
in
mov
sub
es
jle
mov
dec
out
cmp
repnz
mov
lods
inc
xor
cmpsb
insb
xchg
imul
mov
xor
lcall
or
xchg
mov
test
xlat
out
adc
imul
jb
mov
push
sbb
mov
and
mov
sub
or
sub
xchg
cmp
mov
inc
cmp
inc
insb
pushf
std
inc
pop
jne
or
cwtl
cld
dec
iret
fildl
out
inc
call
aad
adc
cmp
cmp
icebp
test
icebp
lret
push
or
fadd
loope
mov
add
into
inc
mov
leave
not
add
adc
je
or
xchg
jmp
movsb
ljmp
test
add
movsl
mov
cmp
jp
cld
jge
mov
lret
xor
and
mov
fnsave
fs
out
adc
outsb
inc
sbb
dec
xchg
not
test
dec
rolb
movsb
mov
xor
xor
cltd
in
jno
lds
jecxz
cmp
retw
adc
push
mov
ds
outsb
or
cmpsl
stos
cmp
leave
or
jo
arpl
xlat
push
xchg
or
pop
movsb
push
repnz
lods
ret
xchg
sbbb
dec
dec
lods
add
rol
les
jge
jmp
stos
add
movsl
jl
push
pop
jbe
mov
sbb
jne
inc
cld
pop
pop
dec
cld
es
ss
jno
xchg
hlt
cmovae
aas
in
sbb
cmp
popl
jl
and
stc
pusha
mov
xchg
cmpsl
or
dec
std
jns
fdiv
sbb
jecxz
and
scas
jae
leave
mov
mov
sbb
inc
aaa
iret
sub
shrl
xchg
dec
jmp
call
cmp
cltd
sti
adc
mov
mov
add
sub
test
jbe
jae
out
das
shlb
loopne
mov
clc
popa
pop
xchg
push
repnz
and
add
outsl
push
and
inc
cwtl
or
jmp
clc
push
orb
int
scas
lock
push
inc
pop
push
jb
xchg
adc
scas
mov
dec
adc
outsl
xchg
out
xchg
test
dec
mov
sub
dec
or
les
add
push
dec
and
add
add
ret
scas
mov
repz
xchg
sbb
cmp
xor
sbb
dec
fs
push
les
imul
fcmovb
jge
mov
into
cwtl
mov
js
mov
leave
and
mov
mov
sti
fildl
cmpsb
mov
cmc
pop
outsl
hlt
pop
sbb
sbbb
mov
mov
or
mov
pop
xchg
mov
sbb
jg
inc
ficoml
int
push
imul
dec
stos
pop
pop
pop
sub
mov
dec
popa
jnp
jge
mov
mov
shlb
dec
xor
inc
inc
rcll
imul
lods
push
cmp
cmp
setns
insl
adc
pushf
sub
cmp
cmp
aad
arpl
or
mov
pop
mov
cmpsl
movsl
in
jb
mov
or
jns
in
inc
inc
or
stc
pop
ret
jecxz
dec
xor
cmp
sbb
mov
in
dec
xor
or
ss
ret
popf
lcall
out
mov
pushf
adc
gs
in
mov
cmp
mov
rcll
into
in
out
popf
daa
mov
ja
cmp
fsubs
xchg
pop
dec
cmp
sarb
push
and
xchg
lcall
or
mov
jge
cmp
sub
ror
xor
mov
ljmp
mov
ret
cmc
pop
cs
popa
adc
daa
fsubl
inc
mov
iret
scas
jno
ret
dec
jne
cs
or
hlt
xchg
je
fcmovnu
xchg
rolb
and
inc
jg
inc
mov
xchg
leave
mov
xlat
pop
xchg
xlat
add
push
mov
push
dec
cli
add
clc
adc
dec
int
imul
mov
mov
mov
lock
movsb
lods
inc
int3
sarb
xchg
orl
adc
xchg
pop
imul
lret
aam
fistps
je,pn
std
jae
movsb
add
add
cmp
sub
mov
rol
cmp
dec
shll
test
cli
pop
lret
cmp
or
jecxz
or
push
jp
bound
stos
push
popa
or
insl
mov
adc
inc
aam
scas
fdiv
aam
cwtl
lret
testl
jns
nop
sub
mov
popl
gs
mulb
pop
std
lcall
insl
xor
dec
rcrl
push
mov
fsubrl
xor
adc
dec
mov
push
call
adc
mov
les
outsl
push
mov
ret
cltd
enter
dec
jmp
jnp
pop
add
fsubrl
es
fisttpl
or
sbb
dec
push
add
xor
mov
arpl
cli
loop
xorb
inc
pushf
in
add
sub
xor
ret
int3
push
push
push
sbb
and
xchg
jmp
andb
jno
sahf
fwait
imul
dec
adc
pop
dec
gs
sub
mov
aaa
sub
mov
push
xor
pop
xchg
dec
dec
lret
push
stos
addr16
pop
into
test
cmc
ret
dec
mov
gs
imul
sahf
pop
add
mov
stc
imul
push
jp
and
and
xor
mov
cmc
repz
adc
outsb
sub
inc
dec
lds
mov
mov
dec
scas
das
mov
test
mov
sbb
ret
cmc
outsl
out
cmp
sarb
mov
push
es
mov
adc
xor
out
mov
dec
add
imul
fs
sbb
flds
loope
xorb
jmp
mov
mov
aaa
clc
sbb
rcll
std
gs
adc
mov
enter
jp
jo
add
loop
add
jne
mov
enter
test
cmpsb
cltd
es
rcll
and
sbb
cs
mov
movsb
aad
and
inc
in
pushl
notl
ret
stos
stos
mov
mov
adc
popf
sar
addr16
outsb
mov
mov
xchg
fnstcw
shrb
push
in
push
movsl
mov
movsb
leave
mov
xor
and
mov
outsl
ljmp
push
fists
outsb
xchg
pop
pop
and
and
aam
lods
push
pop
lds
cs
xor
xchg
ret
shlb
sbb
inc
pop
and
mov
nop
flds
fstpl
mov
lahf
inc
ja
add
and
jno
add
pusha
fimuls
ret
sbb
enter
mov
fs
nop
shlb
xchg
mov
adc
fimull
call
adc
dec
sarl
data16
int3
aas
loope
jb
jb
outsl
xorl
and
adc
in
inc
mov
aaa
jno
cmp
int
add
leave
cmp
idivl
test
cmp
inc
dec
pushl
sbb
cld
inc
and
dec
ret
loop
lock
ds
adc
mov
xor
std
outsl
jne
mov
aam
dec
inc
add
test
sti
inc
imul
int
rcll
add
repnz
mov
shlb
and
fdivrs
jl
orb
fs
ja
dec
pop
ja
es
lcall
and
int3
xor
xchg
mov
add
pusha
leave
lret
add
pop
cmp
aaa
or
dec
lret
ljmp
dec
lcall
cmc
or
add
add
sub
inc
inc
out
xor
jecxz
enter
stc
imul
jle
int
shll
shlb
jp
add
dec
in
push
or
sub
jecxz
popf
ja
fdivl
pop
cltd
sub
sbb
movsb
or
inc
pop
aas
int
mov
sbb
lock
mov
xor
adc
insb
movsl
or
sbb
outsb
int3
lods
cmp
jp
cmp
les
mov
loopne
mov
jo
adc
push
push
mov
adc
fisubl
push
cmp
movsl
xchg
add
inc
orl
sub
icebp
jp
les
xchg
stc
test
inc
cmp
aaa
leave
lds
stos
int
inc
inc
pop
pop
filds
xor
lahf
and
ljmp
out
lods
cmp
xchg
xchg
cmp
mov
in
adc
aam
bound
add
ret
movsl
jne
xor
aad
cltd
xchg
clc
xor
inc
adcb
fcomps
stos
mov
pop
pop
test
mov
sub
xchg
loop
push
adc
hlt
les
stc
pusha
in
std
loopne
sbb
pop
dec
iret
mov
popf
push
cli
jnp
pop
sbb
or
dec
sbb
sub
sub
cmc
and
es
hlt
add
daa
lret
dec
push
sub
xor
dec
add
add
mov
xor
jae
in
or
jb
mov
scas
sub
sbb
dec
imul
movsb
mov
scas
lahf
imul
es
mov
lret
push
sbb
xchg
jp
mov
add
mov
push
sbb
test
fdivrs
push
pop
push
or
xlat
jae
adc
lock
fnstcw
cmc
mov
fisttpl
shll
ret
test
push
outsb
adc
add
mov
lret
mov
sbb
mov
out
xor
loope
jbe
call
pop
call
mov
inc
out
and
fistl
mov
mov
jle
dec
pop
fisubrl
mov
jno
sbb
test
jecxz
pop
fstpt
in
cmp
mov
push
sub
mov
arpl
cmpsl
mov
es
pop
pop
lcallw
dec
push
loope
ret
mov
jbe
ror
cmpsl
test
fcomps
inc
xchg
call
arpl
pop
movsb
dec
loop
stc
rclb
cmpb
fcomi
movsb
rorb
inc
negl
push
inc
arpl
mov
rolb
stos
mov
clc
lock
xchg
xor
jno
lret
ja
pushf
xchg
mov
cwtl
mov
das
push
fidivl
mov
push
int3
mov
pop
mov
insl
repnz
test
cltd
pop
sahf
cli
lds
outsb
frndint
repz
xchg
outsb
sbb
dec
xchg
or
pushf
imul
shrl
xor
repz
add
cwtl
std
movl
insb
jb
or
push
jg
fwait
inc
cmp
inc
scas
lcall
icebp
popf
inc
xchg
push
xchg
mov
cmpsl
xchg
leave
xchg
lds
adc
lods
rclb
xor
mov
pop
fists
push
push
outsl
cmc
fists
mov
xchg
pop
scas
mov
cmp
or
cmpsb
std
mov
xor
enter
repnz
and
mov
adc
call
aam
popa
mov
adc
lcall
xchg
xorl
cmp
in
pusha
sbb
adc
add
xor
add
mov
subb
cmp
xchg
jne
les
push
jle
mov
js
xorb
jbe
dec
cmp
and
rol
jb
and
sbb
dec
orl
das
pop
out
pushf
cmpsl
test
jp
mov
loope
xlat
push
mov
aam
cmp
add
xchg
sahf
int
sahf
ret
aas
dec
xchg
dec
je
xchg
or
repz
and
inc
push
lea
out
andl
std
xchg
int
popa
inc
out
add
aam
scas
dec
cli
jns
insb
fsubl
xchg
adc
sbb
bound
mov
cli
lahf
mov
mov
xor
mov
loopne
rcl
movsb
adc
add
jge
cmp
pushf
lods
xchg
dec
aad
cwtl
in
ljmp
lock
cmp
add
inc
mov
insl
sub
jl
int3
cmp
orl
pop
push
jl
pop
loopne
add
mov
mov
loope
leave
inc
test
xchg
pusha
nop
jecxz
in
or
add
movsb
mov
push
xchg
xchg
pop
shl
mov
mov
xor
jecxz
insb
aam
adc
stos
test
pop
shl
insl
ret
movsb
enter
ss
push
jne
add
movsl
das
aas
dec
fists
push
mov
scas
out
pop
out
sbb
je
push
int3
push
js
xlat
add
ljmp
adc
cmpsb
mov
jmp
icebp
xchg
pushf
mov
sti
mov
inc
dec
adc
mov
sub
adc
and
ret
repnz
xor
sbb
mov
into
adc
jmp
sub
and
jbe
daa
cld
mul
fisubrl
pop
add
cmpsb
xchg
add
xchg
aad
xchg
mov
cmpsb
cmp
mov
xchg
cmp
adc
inc
jmp
rcr
arpl
int3
fdivrs
push
nop
aas
mov
lcall
sti
xchg
inc
xchg
cmp
ja
lods
nop
add
cmp
setno
in
xchg
add
fsubrl
popa
pop
inc
jp
mov
mov
pop
loope
clc
ljmp
dec
push
inc
xchg
cmp
cli
push
cmp
jb
mov
adc
push
jne
and
fsubl
shrb
or
sub
fidivrl
xor
add
and
mov
mov
jno
int3
xor
add
sbb
pop
mov
inc
stc
lcall
aam
sub
shll
xchg
dec
pop
std
jecxz
inc
fucomi
sbb
nop
mov
je
ficomps
fcomp
mov
mov
inc
and
cmp
inc
sub
cltd
lret
mov
les
ret
inc
lcall
mov
sub
mov
mov
repz
xchg
loope
mov
xor
fildll
jo
out
mov
mov
and
xchg
inc
xchg
pusha
mov
fisttpll
ljmp
mov
lods
inc
dec
mov
clc
pop
jnp
jle
sbb
xor
mov
enter
mulb
xchg
jp
jne
sbb
or
iret
and
mov
leave
fs
cmpsb
mov
in
fdiv
mov
cmpsl
adc
clc
add
arpl
test
dec
mov
cli
out
pop
js
jg
mov
inc
xchg
fst
sbb
dec
sbb
test
fcomip
jg
jno
test
sub
and
pop
mov
pop
jae
cmp
mov
rolb
xlat
add
or
pop
xchg
cli
idivb
mov
aad
loopne
lods
hlt
rdtsc
loope
fst
je
mov
jns
sbb
out
inc
push
cltd
imul
adc
pop
xchg
xor
int
mov
inc
jle
mov
inc
gs
mov
xlat
std
cmp
or
sbbl
xor
mov
lods
sbb
cmp
jge
pushf
and
xor
loopne
pusha
mov
cmp
hlt
outsb
xor
lods
push
adc
inc
addr16
movsb
hlt
or
xchg
jno
dec
push
and
shl
ror
sub
sbb
jae
ljmp
mov
xchg
xlat
or
das
pop
pop
lods
sbb
mov
sub
xor
inc
sahf
xlat
movsb
outsb
cmp
insl
arpl
inc
mov
stos
jno
add
popf
stos
sub
repnz
mov
loop
data16
and
inc
into
rcll
iret
xor
ja
dec
sbb
and
frstor
dec
das
mov
cli
push
mov
jmp
repnz
into
scas
orb
push
xchg
xor
or
pop
ja
cli
xchg
push
movsb
pop
xchg
fidivrl
mov
pop
add
nop
rcll
loop
cmp
sbb
mov
in
cmp
xchg
sbb
mov
movsb
stos
fisubrs
rorb
and
ja
loopne
cmpsb
mov
cmp
pop
inc
sbb
pusha
shlb
popa
push
inc
pop
fwait
xchg
or
into
insb
cs
lret
imul
daa
sbb
inc
in
stc
pop
pop
or
ja
dec
mov
xor
int
xor
inc
sub
insl
in
mov
mov
mov
xchg
push
inc
cmpsl
sti
push
ficomps
mov
imul
mov
mov
inc
xchg
cmp
enter
adc
mov
lds
fdiv
jle
shl
adc
mov
jae
push
iret
ret
les
pop
ljmp
fsubs
movsl
mov
sbb
dec
popf
fwait
lock
mov
cmpl
mov
and
out
popa
mov
mov
insb
test
in
int
mov
aad
xchg
cmp
or
mov
mov
and
jmp
loope
sbb
sar
dec
inc
inc
inc
cmpsl
cld
cmpsb
jne
dec
xor
xor
scas
adc
stc
dec
testl
imul
adc
fistpll
insl
aas
inc
movsb
fidivs
xchg
mov
cmp
stc
fwait
mov
xorl
aam
scas
mov
push
cltd
or
jl
adcl
imul
sahf
call
xchg
lret
fwait
xor
pop
out
sbbb
adcl
movsb
ret
push
mov
adc
fldcw
std
jecxz
lea
pop
mov
xchg
pusha
stc
push
stos
int
mov
pop
and
push
jmp
or
sub
pop
inc
test
xor
imul
mov
xchg
push
pop
cmp
icebp
mov
pop
xchg
aaa
jp
loope
fisubs
jo
ret
xchg
mov
cmpsl
pop
mov
mov
mov
lret
loope
push
fsubl
call
sub
sub
mov
decl
loopne
cmpl
mov
ficoml
push
jg
inc
xor
cmp
dec
xchg
add
hlt
lods
inc
jmp
adc
dec
mov
data16
adc
adc
pop
mov
mov
imul
andl
or
out
jmp
loopne
cmpb
cmp
aaa
or
pop
clc
inc
fcmovb
mov
popf
loopne
ss
cmp
xchg
movsb
lea
and
insb
sahf
xchg
js
inc
aam
scas
cmc
xchg
dec
xor
xor
fninit
cmc
or
mov
sbb
sbb
loope
insb
xchg
cmpsb
pop
movsb
mov
hlt
test
subl
cmp
cmc
mulb
enter
cmp
adc
aad
or
pusha
sub
int3
div
push
adcl
sbb
ds
ret
hlt
xchg
scas
int
sub
mov
inc
scas
xlat
neg
shl
test
outsl
add
pushf
cltd
and
adc
inc
test
fldcw
aaa
gs
mov
or
mov
mov
movsl
ja
in
sub
push
cmp
xchg
jnp
add
or
xor
lret
push
push
arpl
dec
in
push
jb
fldl
or
xchg
popa
push
push
lret
in
push
js
int
mov
cmp
add
sbb
pop
test
adc
mov
imul
mov
dec
dec
sar
ret
in
xchg
jp
adc
je
test
push
pop
sbb
mov
stc
add
mov
pusha
movsl
xor
push
mov
mov
xchg
jno
push
mov
pop
rclb
fcoml
daa
outsl
adc
je
jb
lret
mov
test
ljmp
push
test
add
mov
nop
cwtl
add
jbe
inc
ror
outsb
test
shrb
lods
mov
pop
aas
and
loop
or
mov
ret
fisubl
dec
jge
daa
mov
or
xor
jo
jmp
mov
and
adc
add
dec
lahf
dec
adc
xor
aad
and
nop
call
rclb
jg
push
in
call
ret
fnstsw
ja
jns
push
sbb
xchg
testl
ds
jbe
ror
dec
rcrl
inc
inc
ret
and
arpl
mov
jecxz
arpl
bound
insb
sub
cli
pop
cli
fdivl
sub
out
xor
mov
cmp
icebp
adc
cmp
pop
pop
mov
nop
xchg
jno
pushf
xlat
jbe
push
sahf
repnz
int
or
into
rcl
adc
adc
lret
shlb
inc
subb
in
lds
and
pop
push
test
cmpsb
xchg
shlb
push
cmc
je
cmpsl
ret
sti
pop
push
xchg
mov
lods
jno
stos
dec
push
roll
or
push
pop
push
jo
adc
jns
lods
in
bound
xchg
dec
sub
or
loop
scas
pop
sahf
ljmp
int3
popa
ss
jge
aam
add
and
and
jecxz
jb
aam
ljmp
fnstsw
div
cmp
add
adc
push
pop
in
movsl
dec
inc
leave
mov
sbb
pop
test
std
push
push
xchg
imul
popf
outsb
nop
insl
mov
roll
add
cwtl
sti
pop
andl
xchg
inc
leave
or
mov
pop
imul
and
fimuls
rcrl
iret
xlat
inc
hlt
adc
sub
int
stos
test
jle
sub
roll
sub
repnz
rcll
int3
adc
pop
adcl
lcall
mov
rcll
repz
ja
jp
aam
push
cmp
mov
mov
and
inc
adc
out
mov
pop
out
in
push
dec
dec
test
push
aam
gs
lahf
mov
fld
jns
nop
fsubrs
adc
hlt
aas
sub
adc
jnp
stos
mov
rep
adc
movsl
xchg
inc
adc
leave
aam
movsl
jb
outsl
xchg
pusha
mov
loopne,pt
inc
jp
dec
nop
adc
push
pushf
aaa
leave
add
xchg
movhps
and
jl
xchg
mov
mov
cmpsb
outsb
adc
jp
arpl
imull
inc
pop
cltd
dec
sbb
adc
pop
cmpsl
pop
addr16
pusha
loope
insb
rcll
idivl
xchg
sub
push
pop
stc
push
and
mov
fcomps
push
push
push
ret
sahf
mov
xchg
cld
xchg
sub
adc
hlt
arpl
push
and
inc
stos
jne
lret
xchg
test
or
push
pop
mov
in
stos
cmp
out
mov
sub
xchg
lock
xor
es
pop
pushf
pop
xchg
add
mov
repz
outsl
dec
sub
aad
sbb
ror
dec
pause
xor
jae
ja
fcomps
rcrl
stc
xchg
sub
fisttpl
mov
jne
dec
cmp
daa
cmp
in
mov
mov
outsl
test
cmp
jge
pop
fidivs
test
data16
fisubs
aam
add
pop
pop
lock
adc
popf
imulb
jae
pop
add
dec
pop
lds
mov
inc
div
sbb
add
push
jo
cld
int
jp
jge
ss
aas
jb
mov
pop
scas
add
mov
jecxz
xchg
dec
sarl
push
pop
stos
fildll
gs
imul
mov
xchg
push
mov
mov
sub
movsb
xor
dec
push
into
inc
mov
push
out
or
ret
aaa
adc
outsl
xchg
add
push
adc
pop
pusha
lea
pop
imul
popf
icebp
dec
scas
lock
in
push
aad
mov
les
or
fs
ss
lcall
sbb
out
xchg
mov
enter
pop
pop
sub
sahf
gs
adc
and
fwait
or
mov
addl
inc
js
repz
mov
sub
out
insb
fimuls
sub
fdivrs
inc
cmpsb
jg
out
jae
xchg
or
into
mov
pop
cmpl
notl
popa
addr16
sub
add
bound
xor
repnz
cli
add
or
add
push
mov
xorb
cmpsb
inc
mov
fidivl
jmp
sub
dec
cld
lds
jb
in
in
inc
xchg
xor
repnz
pop
sbb
push
cmc
pop
testl
jmp
fstps
les
cli
adcl
mov
sahf
inc
outsb
push
jo
mov
pop
subl
xor
xor
out
movsl
fucom
add
mov
mov
leave
and
xchg
add
push
fstps
addr16
scas
imul
outsl
dec
popf
xor
push
mov
sub
ds
icebp
addr16
fdivr
ja
xor
push
mov
inc
out
jne
test
jg
aam
in
int3
lods
jmp
lods
iret
cmp
sub
and
sub
xchg
add
push
pop
ss
xor
loope
inc
xor
xor
sbb
or
and
hlt
cmp
dec
inc
mov
pop
xchg
adc
outsl
adc
push
inc
or
shlw
pop
xchg
pop
push
orb
movsl
add
std
jge
std
imull
xor
test
sbb
jge
adcl
mov
dec
movsl
sub
pop
hlt
sbb
ljmp
xor
int
mov
repz
lahf
clc
jo
adc
aad
push
popa
fildll
ret
cmp
imul
popa
je
hlt
orb
cs
leave
xchg
data16
hlt
or
push
mov
dec
push
mov
mov
xor
leave
mov
mov
xchg
pop
test
mov
jmp
cwtl
lock
mov
shll
push
pop
mov
aas
jno
or
arpl
adc
jb
add
sar
push
test
jae
sbb
andl
iret
movq
push
adc
lret
insb
jno
or
mov
imul
fpatan
aam
pop
leave
into
testl
data16
jnp
jno
push
cmp
push
ret
xchg
pushl
or
mov
jnp
loop
sub
sub
cli
add
cmp
cmpsb
test
fadds
icebp
add
gs
cmp
fnsave
jge
loop
xor
cmpsb
int
icebp
pop
pop
push
mov
adc
or
xchg
mov
jp
jle
inc
sarb
bound
dec
sbb
testb
push
outsl
insl
fstps
data16
add
stos
insb
pop
mov
sbb
jo
mov
pop
out
lret
inc
pop
mov
in
test
sub
and
loope
inc
adc
xchg
xchg
popf
mov
xchg
jno
mov
cmp
fidivs
mov
pop
outsb
test
push
mov
pop
loopne
movsb
sti
jne
lock
call
shlb
inc
mov
lret
movsb
and
xchg
dec
nop
lret
adc
jg
test
xorb
pushf
int3
divl
push
xor
movsl
fdivs
mov
lcall
pop
add
ja
add
inc
xchg
mov
mov
aaa
inc
xor
in
pop
inc
mov
cmp
loope
test
sub
inc
cmp
shrb
arpl
xchg
cmc
arpl
inc
add
popl
push
iret
dec
jp
in
mov
xchg
test
popf
lds
out
mov
cmp
push
sbb
push
sbb
mov
cmp
pop
mov
cmp
xchg
adc
lcall
mov
out
lock
ljmp
sub
mov
dec
add
adc
das
inc
jmp
inc
xor
xor
inc
mov
mov
les
fisubrs
loopne
xlat
inc
mov
jnp
jnp
loop
fisubs
dec
cmpsb
sub
mov
jne
sub
lahf
adc
dec
popa
adc
mov
rcll
es
lret
jno
fucomp
pop
add
pusha
push
imul
imul
xchg
ljmp
pop
jge
mov
mov
pop
jnp
cld
inc
popf
xor
or
sub
ret
std
dec
mov
fwait
test
xchg
ljmp
mov
xlat
adc
aad
pop
or
je
jle
sbb
pushl
clc
push
cmp
and
pop
stos
lods
test
je
xor
mov
jp
jo
and
loop
dec
les
shll
imul
push
cmp
xchg
das
dec
jmp
mov
imul
mov
rorl
xchg
cmp
fcoml
xor
stc
cmp
mov
sub
or
jmp
addr16
in
sbb
pop
cltd
mov
aaa
adc
sbb
stos
mov
mov
test
pusha
inc
scas
xor
push
icebp
mov
push
jle
mov
mov
into
ds
or
shl
mov
jno
out
je
xchg
icebp
ds
mov
cli
cmp
jb
mov
lahf
cmpsb
mov
jle
insb
mov
mov
cmpsl
and
jle
je
adc
pop
cmp
cli
cmp
push
inc
xchg
xor
lds
int3
xor
cmpsl
leave
call
dec
lret
faddl
push
add
mov
cwtl
mov
mov
xor
clc
inc
inc
or
pushf
inc
rolb
negb
sti
aam
push
pop
push
or
ret
mov
stc
in
out
addr16
stc
inc
xchg
sbb
xchg
mov
xlat
mov
xchg
nop
fwait
mov
cmp
adc
jns
adc
sbb
xor
jne
repz
xor
xchg
adc
icebp
add
dec
add
pop
and
jp
int
insb
sar
shlb
xchg
push
sbb
subl
enter
jle
cltd
ljmp
lret
ficomps
outsl
mov
mov
enter
arpl
ret
push
jle
cld
pop
push
push
push
cs
jmp
arpl
lds
and
xor
xor
call
por
loopne
adc
pop
push
jbe
incb
pop
fwait
mov
fcomps
decl
dec
psubw
xor
les
cmpsl
in
xor
sti
daa
jne
fsub
xchg
icebp
jmp
xchg
inc
xlat
xor
add
mov
pop
idivb
out
adc
lret
xor
adc
jp
cltd
jnp
rcll
scas
cmp
cli
lods
inc
lret
mov
ja
icebp
mov
pop
int
dec
cmc
loope
ss
xor
dec
dec
jb
lock
cmc
inc
test
xlat
dec
je
lea
cmp
rorb
fcmovnbe
cmpsb
xchg
push
dec
pop
adc
fs
sub
ljmp
and
xchg
fs
loope
dec
mov
inc
rcrl
notl
cld
inc
dec
into
jnp,pt
mov
test
ja
sahf
cmpps
push
mov
sub
mov
ljmp
gs
subl
insl
sub
std
dec
push
push
mov
cmp
testl
cmp
push
mov
stos
loop
push
jge
mov
mov
cmpsl
scas
mov
pop
jnp
pop
es
dec
inc
scas
add
or
rorb
scas
fimuls
push
or
push
out
lods
and
cmp
mov
test
imull
mov
sbb
cs
stos
in
inc
mov
mov
stos
bnd
push
bound
push
cmp
fsubrs
sbb
jecxz
pop
mov
insb
xchg
loop
fwait
and
pushf
pop
scas
pop
dec
out
clc
cmp
lcall
rcl
add
cld
add
xor
movsb
in
bound
dec
stos
das
hlt
xor
testb
jg
insl
mov
mov
pop
xor
cmp
mov
mov
fdivrl
or
pop
icebp
inc
imull
and
push
test
xchg
addr16
sbb
fadds
sbb
rol
test
mov
push
int3
push
std
mov
push
repz
stos
cmp
movsb
xchg
jno
test
in
mov
insl
int
cmp
dec
jns
outsb
xchg
or
sub
out
add
inc
lahf
sbb
jns
push
push
push
push
mov
mov
dec
push
insl
push
subl
pop
lret
imul
push
dec
fisttpll
push
xchg
fistpl
pusha
out
jg
xchg
sbb
jb
daa
xor
dec
leave
and
inc
gs
fdivr
daa
fbld
sub
mov
cltd
test
je
enter
add
dec
dec
test
push
lea
adc
lds
adc
je
out
push
leave
jo
adc
bound
out
sbb
xchg
lock
fcoml
pop
jno
rolb
js
leave
iret
cmpl
jnp
sbb
mov
mov
jecxz
cmpsb
or
or
cwtl
imul
push
out
xchg
xchg
adc
loope
and
or
dec
outsb
jbe
sbb
dec
int3
in
test
pop
insl
add
movl
pop
icebp
sahf
mov
xchg
loop
and
out
and
sbb
push
out
cmc
clc
jecxz
sbbb
shl
rclb
jbe
pushw
push
and
mov
xchg
jo
test
ss
jle
pusha
es
cmp
jno,pt
sub
xchg
lods
lock
ja
pushf
jle
mov
mov
inc
jge
test
mov
lret
push
cltd
lea
mov
mulb
mov
notb
inc
add
push
outsl
mov
int3
mov
inc
push
add
push
jg
and
cld
fstenv
movsb
clc
and
sbbb
cmc
rcrb
addr16
push
jmp
mov
imul
push
pop
test
push
mov
adc
cld
out
ljmp
xchg
xchg
adc
add
mov
dec
pushf
in
add
aam
add
loop
mov
push
jp
sbb
fwait
add
aam
adc
dec
sahf
test
shlb
scas
xchg
data16
mov
inc
daa
popa
jmp
stos
sub
in
pop
xchg
xor
out
fistpll
mov
into
and
cmpsb
push
push
nop
add
and
add
fwait
jns
cmp
push
and
sbbb
pop
push
sbb
cltd
bound
bound
sub
or
mov
cmc
stc
xlat
sbb
mov
mov
stos
lahf
lock
es
lret
dec
loope
fwait
cmpsb
std
out
or
aaa
xchg
popa
or
sbb
rclb
imul
psrlq
push
int
cmpl
jb
and
xchg
xchg
jo
je
shlb
sub
jge
test
es
xchg
insl
dec
jae
lcall
popa
movsl
cmp
jle
inc
cmp
out
lds
inc
outsb
mov
mov
push
addl
mov
sbb
icebp
sub
rcrb
das
ja
lock
aaa
xchg
loope
mov
dec
icebp
cmp
icebp
sahf
fistps
or
fidivrs
shr
cmp
negb
mov
inc
pcmpgtw
js
jmp
adc
xchg
push
adc
xchg
lea
dec
inc
lock
sarl
dec
cmp
dec
repnz
xor
sbb
and
mov
sbb
xchg
les
scas
pop
mov
in
sarb
out
mov
or
mov
cli
pop
cmovo
sub
or
cmp
sbb
cmp
enter
jbe
ds
aad
push
jmp
les
cli
popa
lret
lret
or
popa
mov
push
sub
sub
cmp
ds
mov
jp
ss
and
fistps
andl
repz
push
cmp
pop
sbb
sbb
scas
xor
rcrl
push
mov
out
ja
adc
and
mov
out
leave
aas
aad
dec
or
sbb
pushl
jecxz
push
shr
mov
outsb
or
sub
clc
outsl
insb
insl
ljmp
es
test
loopne
jnp
sarl
lahf
adc
je
pop
dec
dec
dec
fwait
xlat
dec
jl
jmp
sahf
js
xchg
dec
dec
mov
popf
cld
call
mov
mov
add
pop
test
add
bound
pop
and
iret
fdivs
jb
stos
pop
mov
pop
ret
pushf
mov
sub
pop
and
cs
lret
pop
adc
lods
inc
push
xchg
xchg
int
mov
xchg
dec
push
ja
inc
pop
push
loope
repnz
or
mov
xor
mov
out
pop
mov
mov
adc
out
repz
and
mov
xor
stos
xchg
leave
inc
sbb
jle
mov
fbld
into
movsl
dec
scas
arpl
mov
arpl
and
ss
icebp
push
lret
and
add
repz
loope
roll
fwait
mov
jl
in
or
stc
ret
js
pop
jl
clc
adc
xchg
popa
mov
xor
imull
adc
cmpsl
jae
out
je
mov
dec
adcl
add
and
ljmp
mov
cmpsl
sbb
or
adcl
fldl
out
sahf
sahf
pop
sub
es
add
mov
lret
or
fsub
ret
std
fwait
push
jmp
adc
sub
je
or
fildll
call
push
out
ljmp
not
adcb
les
sub
sbb
clc
aam
and
cmp
mov
fs
add
pop
rcr
add
jmp
or
dec
mov
in
sbb
cmp
adc
mov
mov
add
mov
imul
push
mov
cs
aad
mov
inc
adc
shll
jno
mov
adc
test
add
imul
test
dec
adc
jge
scas
inc
adc
mov
xor
imul
add
sbb
ficoms
cld
fdivrl
push
shlb
cmp
or
add
add
add
or
or
sbb
mov
bswap
push
mov
in
sub
push
ret
lret
out
pop
sbb
ret
jge
pop
enter
and
mul
outsb
jmp
mov
ljmp
mov
stc
stos
out
push
int3
dec
les
jle
xor
mov
pop
test
xchg
pop
lret
push
daa
rcrl
push
jns
cmp
leave
sub
mov
push
sbb
pop
rcrb
roll
imul
test
test
in
int
loopne
in
insl
pop
or
push
setns
insl
jl
xlat
mov
mov
mov
fwait
and
xchg
lcall
in
or
mov
jmp
bound
test
rorb
or
scas
js
or
adc
xor
push
cmp
orl
popf
rorl
daa
adc
out
dec
popf
dec
outsb
imul
fisubl
into
mul
gs
cmp
in
pusha
aam
out
cmpb
in
xor
jecxz
ss
or
pop
pop
xor
inc
outsl
push
mov
pushf
pop
loop
sub
jnp
and
push
cmp
adc
add
cmp
add
inc
aad
mov
and
sbb
xlat
jns
xorb
push
ljmp
xor
dec
xchg
fstps
xor
inc
mov
push
dec
xchg
inc
js
jge
or
sub
daa
repnz
mov
pusha
xor
sub
or
push
jle
jnp
xor
push
jb
mov
cld
xchg
push
sub
sub
stos
add
and
add
mov
das
jge
out
push
ljmp
dec
mov
cmc
jl
lea
pop
cmp
cld
lret
push
or
jl
and
aam
push
das
push
nop
scas
xlat
mov
adc
push
cmp
mov
ret
aaa
leave
push
daa
xchg
les
add
dec
mov
ljmp
lock
in
imul
pop
lods
mov
stc
cmp
inc
dec
scas
lahf
or
stos
push
dec
pop
inc
mov
xor
xor
dec
repz
sbb
and
clc
in
insb
mov
sub
sbb
dec
iret
cmpsb
andl
je
mov
ds
stc
cmp
fs
pusha
lds
or
sbb
inc
mov
sub
icebp
adcb
fadds
ja
shll
jo
fsubr
daa
in
pushf
in
mov
push
mov
scas
pop
mov
pop
repz
loopne
imul
jne
jnp
mov
cwtl
jne
inc
mov
ss
popa
or
inc
cmc
sti
cmp
sub
dec
push
in
and
sbb
pop
or
repz
pop
mov
fdivs
aaa
fsubrs
test
mov
sub
xchg
sbb
decb
mov
mov
mov
jle
inc
in
inc
jge
rcll
pop
rorb
dec
cmp
sbb
mov
jo
divb
mov
jns
dec
nop
or
jp
xchg
xchg
cld
roll
dec
mov
pop
mov
fstps
aad
movsl
mov
pop
add
pusha
insb
mov
jg
rcrb
loop
jo
pop
or
dec
mov
fxch
outsl
in
jp
or
adc
iret
ss
fprem
movd
mov
test
in
sub
in
sub
int
ljmp
std
dec
adc
lods
cld
mov
ja
outsl
mov
and
xor
dec
xorl
add
or
mov
ret
jge
push
repnz
movsb
in
mov
jo
cwtl
mov
xor
push
inc
cltd
xlat
and
xor
pop
sub
inc
jnp
push
xor
inc
into
xor
push
push
mov
and
cmp
pushw
out
xchg
movsb
pop
or
pop
pop
sar
aad
cwtl
and
ret
inc
aam
rolb
pop
jno
fneni(8087
out
pop
ror
bound
mov
adc
sbb
ret
push
shrl
add
jmp
mov
int
inc
sbb
hlt
mov
adc
lock
inc
sbb
pop
xchg
jnp
xor
sub
pop
inc
dec
or
adc
in
xor
dec
imul
adc
push
stos
test
sbb
cmp
xor
stos
and
jecxz
xor
cli
and
enter
aas
fwait
push
mov
shlb
in
fildl
push
int3
std
int3
test
movb
push
in
pop
xor
sbb
xlat
stos
jbe
push
xchg
mov
stc
sbb
push
loop
or
scas
adc
inc
xchg
xchg
loope
stos
iret
fs
frstor
cmp
sub
mov
push
ret
cmp
int
nop
xchg
js
adc
mov
jne
push
gs
andl
xor
adc
mov
stos
xchg
xor
sbb
mov
orb
push
icebp
outsb
push
les
fbld
ss
sub
imul
mov
loop
sub
jg
add
shr
int3
lret
ss
add
vpunpckhwd
dec
mov
mov
lahf
cmpsl
ss
mov
push
in
inc
cs
inc
xor
cmc
gs
xchg
nopl
dec
jns
mov
int3
inc
jnp
cwtl
lods
fdivr
out
xorps
mov
imul
mov
dec
fidivl
lret
daa
hlt
int
call
sbb
or
push
int3
cmp
and
jmp
addr16
cwtl
cmpsl
mov
lods
jbe
mov
shrl
cmp
xchg
jle
outsb
inc
lcall
es
push
fcompl
push
add
loopne
push
clc
and
inc
inc
rcrb
cmp
cli
or
aam
mov
cmpsl
and
push
push
sbb
push
fwait
adcb
lret
mov
bound
pop
and
push
stos
pop
pop
pop
in
bound
outsb
sub
mov
xor
add
sub
ds
jp
mov
fmuls
out
outsl
cmp
ret
lret
cmp
xor
aam
add
add
idivl
or
out
jp
arpl
lea
inc
mov
sti
scas
icebp
lahf
dec
insl
fbstp
add
jns
es
mov
inc
adc
aam
lret
xor
jl
insb
xchg
negb
rorl
dec
jne
mov
mov
push
insl
sbb
test
sti
mov
out
cmpl
test
mov
mov
add
mov
adc
test
sbb
jbe
nop
mov
xor
mov
ja
add
jne
pop
add
push
or
out
and
cwtl
pop
pop
push
mov
pop
in
jl
in
pop
loop
jno
fnstsw
add
inc
std
enter
or
pop
jb
xchg
push
inc
sbb
movsl
xor
xchg
cmp
sbb
shlb
xchg
xchg
adc
arpl
jno
pop
or
xor
out
or
jmp
repnz
sbb
js
jnp
push
sbb
mov
mov
push
push
cmp
fldl
push
xor
lods
das
mov
and
push
es
inc
xor
stos
lahf
arpl
mov
adc
and
push
add
mov
mov
jns
inc
adc
pusha
sub
dec
ret
dec
fwait
add
movsb
mov
mov
and
or
sub
or
add
hlt
int
arpl
dec
mov
jmp
das
enter
pushf
jecxz
js
stos
test
aas
jg
fs
iret
mov
lcall
add
mov
mov
dec
push
and
dec
aaa
jl
mov
mov
in
ljmp
clc
push
pop
mov
fs
xor
test
dec
loope
ljmp
cs
int
test
data16
or
scas
xor
push
lea
orl
out
push
mov
pop
ds
mov
aam
in
ds
jns
jg
push
cld
mov
fistl
aas
arpl
adc
pop
mov
aad
call
mov
dec
inc
push
mov
mov
mov
lods
add
arpl
and
stc
call
lds
hlt
xor
jmp
or
movsl
cmp
pop
fadd
inc
mov
mov
fwait
add
and
cmp
dec
bound
in
enter
scas
pop
les
fisubl
pop
xor
adc
es
leave
and
or
lods
adc
out
shll
pop
sahf
int
jno
popf
mov
inc
sbb
sbb
ja
dec
std
and
clc
adc
pop
and
lods
lcall
aas
jno
sub
push
xchg
add
jl
add
xor
stc
push
xchg
cmpsl
sbb
cmp
fisubrs
inc
fsubrl
outsb
arpl
and
in
cmp
dec
leave
lods
push
pop
and
pop
int3
lock
push
roll
ret
inc
enter
pop
sbb
dec
cmp
pop
das
pop
aam
stc
add
xor
add
sub
adc
movsb
lcall
mov
cmpsl
mov
xchg
sbb
scas
stc
add
adc
pop
pusha
xchg
aas
repnz
mov
pop
movsb
popa
rcrb
jo
daa
leave
push
inc
lcall
push
push
or
pop
jge
mov
jns
loope
mov
xchg
adc
or
and
xor
mov
cs
inc
loope
daa
cli
pop
bound
pmullw
shll
sbb
sub
adc
xor
cmpsl
jle
jmp
mov
mov
or
jle
cwtl
ja
jns
mov
ret
cltd
jl
nop
xchg
in
xor
popf
sub
ror
mov
jle
sub
xchg
push
int
call
inc
pop
mov
sub
cmc
push
pushf
stc
mov
push
adc
out
mov
sub
int
in
or
cld
fidivrs
xchg
cwtl
and
inc
dec
arpl
mov
daa
nop
add
ret
stos
flds
lock
push
add
rcrb
xor
popf
mov
push
aaa
dec
iret
jp
shll
sbb
push
cmp
roll
dec
imul
ja
insb
push
maskmovq
jno
outsl
push
push
pop
adc
fs
mov
je
das
ret
pop
cmp
lods
movb
add
in
xor
xchg
sub
out
sub
lods
mov
inc
mov
mov
jecxz
loopne
jle
xlat
sbb
sti
sub
cmp
add
dec
pop
inc
mov
inc
mov
xchg
mov
add
cmp
xor
mov
fiadds
sahf
sbb
and
idivl
jbe
out
repz
repnz
and
sbb
sub
dec
mov
into
repz
xor
into
pop
ljmp
enter
outsl
xorl
stos
pop
adc
push
into
mov
scas
add
mov
sarl
dec
sbb
ja
or
popf
cli
dec
xorb
clc
push
and
mov
sub
in
mov
sbb
hlt
fstpl
add
setg
in
test
xor
jns
mov
sbb
push
push
push
notb
add
test
jb
push
xlat
or
pop
lods
out
dec
incl
es
xchg
jl
mov
adc
jl
shrb
pusha
mov
aam
int
scas
and
out
pop
rclb
jo
cmpsl
cmp
push
jecxz
mov
jns
jbe
int
cmp
jle
stc
xor
pop
add
dec
cmpsb
mov
mov
pop
js
das
dec
push
das
adc
dec
imulb
mov
fs
dec
xchg
jmp
pop
mov
imulb
in
int3
dec
scas
pop
jl
jbe
lahf
movsb
and
jg
out
pop
and
mov
or
push
mov
add
fisttps
xchg
and
jno
push
stos
sbb
shll
pop
ljmp
mov
xchg
dec
test
sbb
pop
add
dec
dec
popa
into
jo
imul
jmp
pop
aas
jbe
enter
hlt
das
pop
inc
mov
imul
popf
jae
fwait
pop
in
lret
addr16
mov
sbb
or
xchg
outsb
add
jl
repnz
insb
adc
mulb
insb
leave
aas
jbe
loopne
sti
insl
popa
cmpsb
mov
push
pop
fdivp
loopne
mov
pusha
dec
pushf
test
loop
repnz
repnz
ljmp
adc
add
xor
idivl
xchg
sub
lcall
adc
adc
shrb
in
filds
mov
inc
mov
arpl
je
imul
fidivrl
imul
mov
mov
xchg
in
loop
arpl
push
data16
adc
aad
adc
pop
push
mov
cmpsl
nop
jl
push
jns
cwtl
xchg
sbb
stc
or
xorb
aas
outsl
int3
in
pop
cli
xor
lock
sahf
xor
imul
dec
je
fnstenv
inc
push
dec
enter
mov
sbb
cwtl
mov
lahf
add
mov
pushf
in
popa
stc
jae
and
gs
loop
iret
movsl
jns
fsubl
xchg
addb
dec
mov
mov
and
sbb
pop
cmp
movsb
dec
inc
into
xchg
decb
iret
enter
xchg
and
cwtl
or
mov
enter
stos
nop
outsl
adc
aas
add
push
xchg
scas
hlt
xchg
jle
stos
add
cmp
cmp
test
dec
inc
jns
push
shl
lods
insb
icebp
pop
xlat
mov
inc
adc
inc
mov
dec
es
lods
cltd
sbb
sub
sub
xor
adc
and
pop
add
inc
sahf
xchg
das
mov
cmp
inc
loop
add
xor
out
xchg
ss
sbb
add
popf
cmpl
call
outsb
ss
movsl
dec
xchg
xor
mov
fstpt
inc
gs
fnstenv
out
and
test
xor
hlt
mov
stos
sub
xchg
mov
push
fdivp
loop
inc
sahf
jne
sbb
push
sub
pop
push
out
hlt
addr16
pusha
xchg
xchg
and
dec
xor
and
and
sub
rorl
sbbl
gs
or
sub
mov
leave
repnz
sbb
stos
push
outsl
adc
lcall
sar
cmp
push
imul
leave
xchg
mov
pop
and
mov
lcall
int
lea
dec
sarl
leave
push
mov
ds
mov
or
pop
xor
mov
test
popfw
cmp
inc
add
adc
mov
jne
test
lea
popa
les
rcll
xorl
xchg
or
pop
xchg
sbb
clc
ficoml
lcall
aam
hlt
jnp
lret
sub
inc
mov
test
call
popa
fimull
rcll
fnsave
push
xchg
fnstsw
add
push
in
mulb
popf
mov
sbbl
push
mov
pop
cmp
sub
pop
inc
xchg
lods
jo
dec
push
and
and
arpl
lret
scas
cld
or
inc
jns
or
xlat
stc
aad
aaa
fwait
inc
jbe
loope
sub
cmp
scas
gs
pop
sub
adc
insl
push
jmp
inc
jns,pn
dec
jle
jecxz
test
shrb
aam
daa
adc
add
dec
pmullw
test
cmc
sub
mov
inc
mov
push
add
dec
push
clc
stc
ss
insl
shrl
lods
leave
xor
mov
push
fsubrs
test
jo
and
repz
cmpsb
mov
lcall
mov
aad
sbb
test
ss
xor
addr16
lds
sbb
sarl
sbb
jae
or
push
addr16
sar
int3
clc
and
imul
or
test
int
hlt
push
pop
fnstenv
ss
adc
dec
cwtl
xchg
add
adc
pop
cs
scas
adc
xor
imul
cli
adc
sub
pop
xor
sbb
jmp
sub
fsubs
shll
dec
sub
adc
push
test
xchg
xchg
lahf
and
ja
cs
xchg
sbb
and
push
jle
fldcw
fsubrs
jge
or
xchg
jl
neg
lock
inc
mov
pusha
jns
push
orb
mov
sbb
mov
jbe
inc
or
pusha
mov
lods
jmp
stos
aam
andb
inc
je
and
cltd
pop
subb
faddl
enter
dec
jb
push
jge
pop
mov
rcr
lret
sub
nop
xor
push
or
sub
adc
sbb
pop
test
pmulhw
sub
push
or
out
icebp
int
jo
cli
jae
testl
sbb
les
jle
jbe
sbb
mov
lea
mov
test
cld
jbe
mov
les
adc
dec
hlt
and
pop
mov
cs
mov
or
xchg
nop
shll
outsb
in
jecxz
sub
adcb
jns
add
cmp
rorb
lds
jb
repz
ret
enter
into
mov
das
mov
and
or
pop
lahf
sbb
enter
jno
bound
push
sbb
in
fwait
insl
aas
fisubrl
and
xor
test
sbb
mov
call
sub
addr16
cs
je
mov
leave
aam
sbb
mov
decl
clc
xchg
push
pop
movsb
mov
or
or
push
ret
pop
and
roll
std
in
jne
cwtl
dec
and
js
pop
addb
insb
mov
insl
xchg
jle
pop
push
adc
adc
ja
loope
xchg
icebp
ret
lcall
or
mov
xchg
popf
leave
or
popl
jno
fs
adc
test
or
test
outsl
icebp
dec
std
test
push
je
aaa
movsb
or
or
jbe
fwait
iret
mov
push
cltd
movb
testb
or
cmc
scas
lock
cmp
clc
jmp
je
jbe
xchg
fldenv
pop
jns
jns
out
popa
fmull
xor
mov
stos
aaa
test
mov
je
sahf
int
jo
scas
xor
lods
sub
or
or
cmp
out
call
mov
jp
add
inc
or
cmpsl
rorl
jmp
leave
loopne
call
lock
inc
fadds
and
std
jge
pop
pop
sub
shlb
push
xor
outsb
mov
dec
dec
andl
pop
pop
popa
lahf
push
adc
cltd
fbld
fists
movsl
cmp
repz
shlb
mov
dec
rcll
fistps
cmpsl
mov
dec
sub
test
xchg
xchg
hlt
sub
sub
push
pop
stos
inc
or
cwtl
and
lea
insb
aaa
dec
rclb
push
lea
dec
gs
mov
xor
lock
xor
xor
or
pop
jmp
cs
ret
inc
test
and
stos
jbe
outsb
mov
sbb
in
inc
sarl
mov
test
cmp
aad
cltd
and
stc
pop
outsb
jle
addb
mov
push
pop
xchg
dec
pop
cli
dec
es
mov
leave
push
mov
lret
into
push
push
not
sbb
push
add
adc
jae
xchg
lcall
scas
loope
mov
pushf
inc
aas
insl
cwtl
std
iret
push
rorb
sti
adc
xor
push
mov
js
xchg
enter
test
mov
out
jge
cmp
test
dec
fsubrl
add
and
insl
push
aad
int3
adc
push
cltd
pop
ljmp
shrb
hlt
leave
jbe
jo
adc
sub
cmp
push
xor
mov
inc
sbbl
notb
stos
ret
add
fildll
sbb
dec
mov
arpl
rcll
inc
push
fists
or
dec
xchg
mov
ja
cmpsb
into
in
mov
popf
push
dec
sbb
stos
pop
add
jne
icebp
pop
roll
sub
cmpsb
or
iret
push
and
shl
sahf
stc
movsb
fstl
mov
push
and
jns
pusha
rcr
jno
cmp
clc
aaa
fbstp
sti
mov
jmp
add
xchg
lds
cmc
inc
pop
mov
out
inc
sbb
add
mov
xchg
push
mov
gs
mov
dec
pop
cmp
test
lods
push
lret
bound
mov
mov
ret
popf
in
mov
and
call
jg
jns
lea
cli
scas
call
dec
dec
test
jmp
xchg
and
imul
dec
cmp
push
adc
dec
pop
imulb
dec
mov
mov
test
xchg
jge
out
inc
mov
jo
inc
and
insb
ja
xchg
add
ljmp
jne
jnp
ret
jae
mov
xchg
dec
aad
push
xchg
jnp
adc
xchg
jno
insl
pop
out
xchg
icebp
int3
xor
or
mulb
in
push
pop
fcoml
call
pop
mov
jns
shll
jl
and
repnz
jns
mov
ret
cli
lret
cmp
out
clc
push
mov
xchg
and
xor
xor
stos
in
dec
ret
jnp
and
stc
mov
fwait
xchg
test
mov
jae
lret
jns
cld
insl
or
adc
pop
add
jno
and
in
inc
jmp
dec
cmc
int3
gs
ret
leave
jl
xchg
aam
dec
ds
nop
ja
jns
jecxz
test
xor
jp
aam
sbbl
ret
mov
ret
mov
icebp
or
dec
fwait
leave
pop
test
inc
sbb
pop
dec
fwait
les
insl
sbb
in
nop
lds
icebp
xchg
xchg
pop
scas
fidivrs
inc
stos
les
loopne
ret
push
scas
and
fs
test
clc
shll
int
lds
cmc
jecxz
sub
popa
jne
adc
sub
dec
xor
out
enter
xor
inc
stos
and
jg
scas
dec
movsb
std
mov
insb
mov
inc
mov
mov
fiadds
mov
inc
dec
iret
jge
adc
pop
shrb
mov
ret
nop
in
pop
sbb
mov
add
loopne
stos
in
pop
mov
xor
sub
push
imul
push
sub
push
jns
cmp
out
fidivrl
mov
stos
jne
imul
shlb
bound
sarl
je
pushl
imulb
fs
mov
or
dec
xor
dec
xchg
inc
pop
fistpll
popf
pop
xor
vpsubq
std
dec
enter
cmp
xchg
jnp
sbb
pop
add
or
shlb
lea
shrb
loope
push
lock
push
mov
pop
fwait
pop
outsl
pop
popf
imul
repz
adc
add
mov
iret
in
push
add
sub
repz
sub
aad
xchg
mov
add
std
and
fisubrl
lahf
iret
dec
int3
xchg
lahf
jns
in
jge
popa
push
pop
pop
dec
adc
xchg
xchg
or
cmpsl
add
imul
cltd
or
or
cmpsl
add
in
ret
jmp
and
cli
or
cmp
sub
imul
clc
pop
decl
inc
icebp
add
arpl
cmp
push
xor
out
inc
cltd
pop
enter
test
addr16
inc
std
adc
mov
clc
cli
pushf
push
xchg
and
sub
call
lret
inc
bound
lcall
insb
pop
pop
xor
mov
mov
dec
aad
testb
pop
test
add
cmp
test
mov
pop
ret
repz
pushf
int3
pop
mov
cmpsb
adc
inc
out
roll
sub
xchg
enter
xor
add
mov
out
jne
add
mov
xor
pop
mov
insl
daa
enter
cmp
idiv
pop
inc
cmc
int
xor
mov
cli
shl
sbb
rol
add
push
outsl
loope
or
cmp
cmp
leave
inc
xor
std
push
repz
in
aas
mov
imul
sub
testb
jnp
adc
mov
dec
in
sarl
cltd
pop
or
bound
insl
adc
movb
cmp
adc
push
cmpsb
jno
outsb
xchg
rcrb
mov
inc
movsl
leave
mov
jno
and
loope
ret
jns
jno
leave
mov
shrl
jo
popf
sub
bound
lahf
fwait
loop
sub
pop
add
inc
sub
dec
insl
cld
hlt
push
push
stc
cmp
or
shll
test
add
aaa
ret
or
push
mov
icebp
mov
loope
push
pop
xchg
ja
add
lret
shl
pop
std
cmp
sbb
out
cmp
cmp
rcll
js
jno
adc
mov
daa
push
xchg
adc
xchg
mov
add
jmp
mov
loop
xchg
jno
rcll
mov
inc
sbb
movsb
les
add
mov
dec
stc
inc
push
adc
lcall
cmpsl
jmp
shrb
sub
popa
adc
lock
adc
in
insb
dec
xor
mov
and
stos
dec
pop
push
adc
jo
shll
std
data16
xor
inc
into
xchg
gs
inc
dec
xchg
iret
int
data16
subb
pop
aaa
and
insl
test
hlt
stos
sbb
test
sbb
add
jmp
jb
rcrb
and
sub
or
jmp
in
and
mov
dec
andb
sub
insl
push
mov
sub
push
stos
jo
outsb
or
adc
mov
sbb
pop
daa
sti
dec
add
fimuls
leave
add
mov
dec
jl
mov
mov
sbb
std
lds
out
aaa
cmpsb
popf
sarl
cs
jg
cld
repnz
lahf
shll
mov
jmp
lea
stos
loope
scas
pop
inc
mov
and
leave
shl
mov
mov
or
jl
test
dec
negl
leave
and
in
int3
cmp
aam
jg
fstl
sub
loopne
mov
pop
es
fsubrs
mov
and
lret
lret
loope
faddl
jge
ljmp
pop
gs
and
adc
mov
iretw
les
xor
iret
sahf
jno
stos
out
xchg
aas
adc
scas
movsl
test
les
fsubrs
and
jle
xor
daa
pop
adcl
sub
and
xor
mov
loopne
xor
rcrl
mov
inc
movsb
cmp
imul
addr16
push
rcrl
repnz
cmpsl
lahf
adc
xchg
cltd
add
test
xchg
rclb
scas
ficompl
xchg
arpl
mov
or
inc
arpl
jg
movsb
push
imulb
push
outsl
cltd
jbe
outsb
test
repnz
jbe
dec
xchg
out
ret
cmp
arpl
xchg
jle
ljmp
les
xchg
scas
sbbb
test
sbb
mov
cmp
mov
mov
cmc
jl
repnz
into
int3
add
and
and
stc
sub
add
fnstsw
out
mul
inc
jg
sbb
pop
icebp
sbb
mov
cli
mulb
inc
cli
xchg
fiadds
pop
sbb
lea
cmp
xor
mov
or
and
or
dec
mov
repz
dec
icebp
cwtl
inc
je
ja
lret
aaa
push
mov
or
xchg
lock
jnp
add
push
mov
mov
cmp
add
fldt
or
jnp
sbb
lds
cmp
mov
aad
push
mov
popf
or
cli
subl
sub
pop
testb
fldcw
cmpsb
pop
cltd
jbe
add
iret
int
test
push
adc
inc
push
stos
jmp
inc
loopne
mov
js
adc
jae
mov
cmp
xlat
lea
data16
mov
adc
adc
sub
jns
ficompl
icebp
cli
repnz
into
mov
shll
cmp
imul
ss
or
sarb
sbb
sbb
dec
jg
std
push
jnp
or
mov
std
pop
cwtl
mov
movsl
cmp
or
enter
pushl
test
dec
addr16
aaa
cs
mov
add
enter
mov
ret
aas
xchg
scas
sahf
rcl
popa
push
push
add
or
xchg
jmp
cmp
shrl
loope
out
pop
call
aam
scas
jae
out
jmp
arpl
jbe
loope
rcll
loope
movsb
loope
test
fsts
fstps
ret
into
iret
lods
leave
adc
addb
or
push
and
mov
xor
cmp
mov
or
jl
fsts
xchg
stc
sub
enter
mov
xor
insl
push
aam
push
xor
rcll
and
mov
lods
pushl
jl
addr16
xchg
js
mov
cld
inc
xchg
cmp
andb
mov
adc
ret
dec
shrb
ljmp
divl
outsl
push
and
jnp
fidivrl
pop
and
mov
adcl
sbb
rcrb
push
dec
sti
pop
decl
mov
mov
out
push
outsb
cmpsb
xor
pop
xchg
add
push
aas
sub
int3
subb
ja
dec
out
insl
xlat
mov
jecxz
mov
notb
cmc
dec
dec
dec
popa
sbb
sub
push
je
sub
pop
scas
jbe
add
popa
fprem
test
mov
lea
mov
loopne
mov
in
and
sub
dec
inc
icebp
pop
cmp
lods
daa
outsb
les
push
jo
adc
clc
xchg
add
dec
repz
pop
jno
fwait
orl
rolb
adc
std
cmpsl
or
or
mov
in
ret
jnp
clc
mov
setg
outsb
sti
lods
cld
out
dec
mov
nop
loopne
dec
fistpl
icebp
fisttpll
sbb
out
insb
xchg
inc
or
outsb
sbb
jne
push
or
sahf
xor
add
add
bound
inc
enter
lds
and
inc
sub
sbb
adc
xchg
test
jae
sbb
pop
aad
les
je
xchg
out
mov
push
iret
in
dec
add
pop
xchg
nop
and
and
ret
xchg
adc
xchg
sub
mov
setno
pop
mov
xchg
xor
sub
jb
rolb
imul
cwtl
inc
addb
jmp
mov
sti
mov
ljmp
icebp
cmp
mov
out
cmc
push
lret
std
dec
test
push
into
pop
cwtl
add
mov
fwait
lock
push
dec
in
pop
rcrl
push
or
or
enter
push
push
jnp
jne
lods
fldenv
pusha
dec
push
loopne
lret
arpl
loop
sub
jmp
mov
push
jmp
movq
jns
cmpsl
or
rcll
ret
push
sub
std
push
fistpll
sbb
lahf
push
movd
sti
int
jb
pushl
mov
cmp
inc
xor
mov
loopne
mov
and
cmpsb
push
jb
mov
icebp
and
imulb
cmc
xor
fisubrl
out
movsl
push
and
xchg
out
cmp
mov
jbe
jbe
icebp
dec
popf
and
cmp
push
mov
inc
insb
sub
mov
xor
fwait
cmpsl
push
dec
andb
mov
enter
sbb
mov
inc
cwtl
mov
sbb
mov
test
and
insl
sbb
imulb
pop
fisttps
and
loope
push
pop
mov
dec
xor
sub
jmp
insw
cmp
cmp
lds
out
add
xchg
or
enter
inc
push
adc
pop
addl
cmp
sbbb
rcrl
dec
sub
ret
pop
nop
xor
lods
lret
pop
adc
add
pop
push
mov
loopne
das
in
and
jecxz
xchg
inc
ljmp
inc
ret
loop
dec
dec
xchg
ds
mov
xor
scas
jbe
and
push
adcl
test
cmp
dec
mov
xor
test
jecxz
pusha
sub
and
sbb
cmp
arpl
push
xchg
inc
mov
clc
pusha
mov
mov
loopne
mov
arpl
sub
dec
dec
lds
scas
les
xor
sub
inc
inc
adc
sbb
xchg
jae
mov
inc
test
dec
adc
in
xor
push
cli
inc
cmp
outsl
add
mov
enter
hlt
js
pop
push
js
in
mov
mov
adc
stos
jne
and
cli
lret
jg
icebp
xchg
inc
imul
jge
in
stos
aam
push
movsl
xor
daa
fldt
cmp
leave
mov
stos
lock
lcall
push
and
jle
push
adc
cwtl
jge
imul
inc
int
shrl
ja
scas
repnz
loop
inc
adc
mov
mov
shrb
out
cmpsb
mov
ja
in
mov
push
mov
movl
lods
cmp
ret
call
cli
outsl
ds
pop
test
dec
ja
cmpsl
adc
mov
std
addr16
sub
sti
xor
movsb
or
inc
in
jno
adc
or
test
sbbb
adc
xor
sub
icebp
push
addl
loope
sahf
and
clc
xor
cmp
popa
mov
inc
shrl
movsb
fsubs
decl
push
cwtl
xchg
jle
dec
gs
in
or
jns
jg
dec
dec
andl
lcall
inc
popf
mov
dec
stos
or
adc
mov
pop
pop
xor
and
dec
cltd
popa
or
addl
sub
inc
mov
mov
adc
mov
movsl
insl
idivl
sub
mov
pop
mov
rcll
pop
sbb
sbb
mov
push
push
leave
ret
ljmp
mov
test
inc
push
out
lds
js
cli
pop
inc
mov
fwait
xorb
xchg
loop
pop
add
mov
adc
sub
ss
sarl
filds
js
mov
insl
dec
and
daa
xorl
mov
cmpb
and
scas
xor
mov
or
sbb
ds
insl
mov
stc
mov
jp
sub
int
sbb
test
jb
pop
out
pop
inc
xchg
je
cmp
out
cmc
and
mov
dec
push
sub
fmul
cmp
sbb
inc
je
sahf
icebp
shl
lea
imul
and
icebp
pushf
mov
jne
movsl
inc
xchg
push
xchg
cwtl
in
pop
shl
loopne
in
sub
and
stos
push
sbb
aas
mov
adc
cld
mov
scas
inc
pop
pushf
popf
mov
push
ljmp
mov
pushf
adc
loop
sbb
mov
mov
pop
fimull
stc
repnz
inc
lret
xor
testb
or
ficompl
pop
sbb
lock
repz
lcall
test
les
addr16
pop
dec
popf
pushf
add
enter
jnp
lahf
add
push
call
mov
sub
or
das
adc
jb
cli
cmp
sahf
pop
jns
loopne
sbb
mov
repz
add
push
enter
mov
pushf
sub
mov
cmpsb
out
pop
leave
sti
mov
inc
xchg
adc
icebp
clc
sbb
mov
jb
jl
es
push
jno
pop
mov
cmc
inc
and
push
or
jne
adc
sub
cmp
inc
pop
jl
jnp
dec
xchg
scas
push
outsl
jno
out
fst
les
inc
inc
mov
mov
int3
sbb
push
fs
jns
mov
xchg
rcrl
loope
pop
gs
adc
xchg
pushf
jge
adc
and
aaa
xlat
sub
sbb
ljmp
sbb
gs
inc
ret
int
pop
and
adc
enter
adc
sub
ds
sbb
mov
or
jp
out
int
adc
add
pop
jle
fcomp
divb
mov
xchg
xor
xor
int3
cmp
loope
jecxz
decl
jmp
movsl
je
in
sub
pop
stc
jecxz
repnz
jae
fs
mov
mov
adc
inc
mov
rolb
out
jae
push
hlt
fisubrl
mov
push
sbb
lret
sub
bound
call
pop
mov
and
pop
int
repnz
pop
leave
mov
mov
rcll
push
fdiv
xor
add
mov
sbb
ljmp
and
pusha
rcrb
dec
hlt
mov
bnd
mov
mov
pop
int3
inc
cmp
mov
vphaddwd
imul
sub
ret
jge
lahf
cwtl
inc
inc
cli
dec
outsb
nop
jne
xchg
jmp
mov
inc
sbb
add
hlt
pop
sub
in
das
repnz
or
and
pop
inc
inc
fcomip
int
loope
out
jbe
xchg
mov
jne
pop
test
jg
pop
movsl
inc
push
gs
nop
icebp
in
push
push
xor
adc
mov
mov
popfw
orl
aad
mov
stos
inc
xchg
add
mov
test
es
js
dec
dec
fdivs
push
mov
push
mov
loope
adc
popf
movsb
repz
leave
xchg
mov
or
test
incl
icebp
lret
xchg
cmpsl
inc
lret
add
push
std
ljmp
sti
xchg
leave
pop
popf
in
je
sbb
inc
clc
xor
out
pop
or
adc
mov
into
loope
adc
test
adc
out
daa
hlt
cmp
sub
scas
cmp
aam
mov
and
xchg
jbe
pop
test
add
insb
test
pop
add
dec
sub
mov
js
in
test
test
xor
adc
psubsw
pop
inc
mov
mov
and
push
cmpsl
jmp
aas
dec
fimull
adc
das
cmpsl
jp
xor
xor
sahf
sub
pop
push
sub
sbb
call
hlt
imul
pop
clc
sti
imul
mov
fwait
adc
fistps
adc
pop
cmp
fxch
lods
popf
repz
iret
sbb
sub
ret
xchg
test
sub
mov
jp
test
roll
ret
jmp
pop
pop
fdivl
lods
or
mov
in
fsubrs
jecxz
add
jne
in
lods
push
testl
lods
fwait
pop
jae
aad
cli
nop
xchg
call
adc
into
xor
jg
mov
push
inc
pop
dec
orl
sub
mov
or
mov
rcr
jge
push
xlat
mov
and
int
and
adc
xchg
lock
dec
test
jno
adc
cltd
loopne
inc
jl
inc
xor
aam
pop
jns
xchg
cmp
repnz
std
sub
dec
push
out
fstps
mov
outsl
adc
add
dec
push
insl
mov
cmp
cld
inc
stc
lahf
stos
ret
and
adc
js
mov
or
pusha
mov
sub
and
inc
mov
pop
dec
test
or
arpl
stos
inc
or
adc
stos
push
std
xor
nop
xchg
adc
nop
lods
fnstenv
sti
insl
test
cmp
shlb
mov
aad
daa
int3
gs
inc
sub
dec
outsl
mov
aad
mov
insb
mov
stos
xor
les
xchg
aaa
les
shrb
int
daa
add
test
sub
rcl
sarb
addr16
pusha
outsl
jnp
xor
jmp
jbe
xchg
sbb
dec
or
mov
adc
sub
pop
inc
jg
mov
add
mov
cmp
add
or
cmpsl
inc
pop
sub
mov
jnp
jno
in
jo,pn
add
sbb
inc
or
cmp
xor
arpl
and
movsb
inc
jecxz
mov
push
mov
out
or
pop
xchg
mov
add
xor
fucomp
or
cmpsb
cs
mov
dec
sti
sub
js
leave
mov
cmpsl
push
imul
pop
or
mov
or
bound
xor
mov
mov
cmpsb
xchg
fsub
cmp
jge
sub
arpl
xlat
xor
mov
pop
mov
call
rclb
pop
or
pop
and
pop
dec
jp
test
lea
or
dec
add
jne
jl
jnp
mov
in
inc
out
mov
stc
cmc
mov
fisubs
add
cli
adc
dec
sub
inc
xchg
fcomi
rcr
sbb
lds
in
test
cmp
fsubrs
cmp
mov
fadds
mov
mov
cmp
iret
mov
inc
mov
jl
inc
cli
std
sub
jl
cli
les
xchg
sbb
inc
jp
mov
and
call
mov
loopne
lahf
dec
iret
icebp
dec
aaa
fmull
popl
aam
lret
jecxz
xchg
mov
cmp
scas
and
mov
into
add
fisubrs
mov
gs
in
shl
push
jne
sbb
popa
inc
pop
xor
test
pop
stos
shlb
aam
push
push
div
pop
stos
push
lea
sub
addb
cltd
cli
mov
push
aam
mov
inc
js
add
bound
push
enter
push
mov
lds
sub
aaa
outsb
cmp
jns
mov
in
add
call
test
out
mov
mov
test
dec
insl
cmp
xor
mov
pop
bound
ds
imul
aas
and
cmp
mov
nop
jo
iret
test
testl
xchg
mov
std
fadds
sbb
roll
enter
cmc
scas
mov
cwtl
shlb
shl
push
popl
fsub
xor
and
fisttps
aas
jecxz
scas
dec
push
mov
cs
ljmp
xor
int3
lahf
dec
push
xor
pop
mov
outsb
mov
fcoms
shlb
lods
adc
and
push
or
pop
cmp
pop
cmc
scas
cmp
sbb
xchg
iret
add
sub
dec
adc
jecxz
xchg
push
jge
cmpl
xlat
push
mov
jmp
pop
xchg
mov
add
dec
out
add
fdivrl
sub
lret
mov
inc
in
add
cld
roll
cmp
dec
filds
dec
test
mov
xchg
and
push
xor
fimuls
loope
and
lock
shlb
mov
scas
scas
adc
mov
or
add
sbb
sqrtps
sub
fcmovbe
dec
add
or
push
sbb
pop
pop
imul
xlat
xchg
notb
pop
outsb
push
add
mov
in
shl
dec
in
ds
cmp
xor
roll
loopne
jge
aad
add
cs
loop
cmp
add
mov
pop
xor
sbb
lock
lods
int
jns
andb
nop
adc
adc
add
fisubs
nop
fcoml
inc
mov
hlt
int3
lret
lods
imul
sbb
push
sub
ljmp
in
dec
pop
aaa
loop
add
fimull
fsubp
ss
aas
mov
mov
add
outsl
and
jne
pop
jmp
mov
push
adc
xchg
pop
adc
test
mov
cmp
lods
insb
sbb
inc
add
imul
fcmovb
or
xor
jnp
xchg
std
inc
jne
mov
and
dec
fildll
mov
mov
sub
lcall
roll
jle
sbb
xchg
aad
jl
xchg
xor
ss
mov
inc
and
out
loope
xor
push
lds
fucomi
sar
pop
pusha
pop
jnp
inc
outsl
cmpsb
mov
cmc
add
hlt
ja
int
inc
mov
mov
out
out
mov
pop
loope
adc
ja
or
cmp
sub
testb
xorl
dec
in
sbb
cmp
or
popa
test
and
frndint
add
xor
shl
cmp
ficomps
lret
xlat
dec
popf
faddl
jmp
xchg
das
inc
push
push
push
jle
pop
repz
inc
add
lret
test
mov
dec
movsb
icebp
push
cmc
bound
jae
lret
jno
jbe
ljmp
mov
in
fiadds
jmp
insb
pushf
or
jbe
or
insl
test
int3
setbe
ss
fdiv
cmp
or
sti
push
sub
push
xchg
or
cmp
pop
push
xor
add
push
sbb
scas
lret
ficomps
sub
leave
xchg
leave
cli
addr16
push
mov
ret
int3
clc
sbb
mov
mov
xchg
sbb
test
cmpsl
pop
insb
sub
pop
adc
and
repnz
cmp
xorb
aas
mov
mov
jne
jle
xchg
lret
scas
arpl
movsl
push
test
xchg
mov
jne
imul
push
mov
rcrb
cltd
or
push
mov
and
push
rcrb
andl
test
dec
negl
loop
mov
or
pushf
adc
mov
insb
pop
std
inc
push
lods
arpl
out
outsb
push
in
inc
push
mov
jne
aam
cmp
pop
sbb
jbe
test
mov
fisubl
cltd
mov
ret
clc
fwait
jle
jno
pop
daa
cwtl
in
pusha
cwtl
loop
or
daa
jl
sti
xor
repnz
or
cli
js
mov
rolb
repnz
jae
cli
pushl
test
shl
inc
call
repz
mul
into
or
mov
outsb
pushf
dec
cmp
pop
push
adc
pop
in
sub
dec
or
adc
xchg
call
pop
xor
idivb
lock
ret
inc
mov
mov
add
movsl
adc
jns
jg
mov
pop
push
out
cwtl
push
mov
sub
fs
stos
push
mov
xor
loope
mov
stos
insl
jne
mov
jge
push
jae
sub
into
adc
test
push
cld
inc
arpl
inc
pop
mov
mov
xor
mov
icebp
hlt
mov
scas
rcll
adc
icebp
add
aad
push
andl
aam
sub
or
ja
mov
in
xchg
enter
nop
sbb
ret
mov
sub
loop
push
pop
pop
mov
mov
cmpb
outsl
mov
adcb
das
jecxz
jae
iret
push
ds
dec
jecxz
es
sbb
xchg
push
add
add
xor
mov
fidivs
mov
pop
adc
dec
sbb
repz
push
sub
out
cli
fs
les
ja
mov
call
vpsrld
iret
pop
inc
adc
lds
loop
and
loopne
sub
and
lret
ds
aam
movl
lock
pop
mov
fistpll
cmp
sbbb
test
enter
shll
cmp
mov
pop
ss
dec
and
ja
inc
arpl
stc
inc
movsl
mov
das
xlat
aam
push
fsubr
outsl
sub
xor
mov
xchg
scas
xor
cmp
bound
ss
pusha
mov
adc
pop
shll
push
add
xchg
outsl
jg
push
xor
inc
imul
pushf
jge
fdivs
aas
add
in
adc
js
xchg
mov
xor
addr16
jae
cltd
mov
cmp
std
clc
stos
adc
insl
mov
xchg
pop
sti
fstpt
or
aas
pusha
in
mov
lods
and
aam
out
cltd
pop
xchg
andb
insl
pop
test
frstor
jnp
adc
lret
cli
mov
xor
sbb
sbb
mov
es
aam
pushf
arpl
loope
jo
sub
xor
sti
ja
ds
xor
enter
mov
scas
xchg
dec
or
pop
inc
jle
jno
sub
jbe
outsl
push
mov
jge
xor
repz
fistpll
inc
shll
fcomi
lcall
popa
lret
xor
push
insb
or
shrb
pop
push
or
popf
repnz
dec
lahf
scas
out
loope
js
sbb
pop
sbb
jno
xlat
icebp
jge
pop
js
loope
xchg
mov
cs
shr
in
adc
mov
add
sub
dec
les
add
dec
stos
inc
ret
cmp
pop
movsb
cmc
test
cmpsb
xor
or
xchg
ja
or
in
aaa
adc
fsubs
lahf
loope
gs
mov
mov
lcall
add
mov
insl
out
out
mov
cltd
jb
sbb
sbb
mov
lods
inc
inc
movb
ds
jg
in
int
adc
fstl
xor
aad
mov
mov
das
daa
imul
and
adcl
push
sbb
adc
mov
inc
mov
jmp
mov
dec
fisttpll
enter
hlt
loope
jp
pusha
mov
mulb
push
idivb
outsb
mov
mov
pusha
pop
sub
add
lods
push
in
lock
aad
sbb
sub
sub
mov
in
stc
decl
ss
loope
lahf
inc
int3
push
xor
out
and
add
rorl
test
inc
dec
gs
mov
push
push
cmpsl
mov
xor
xlat
ds
pusha
sbb
jo
cmp
mov
outsl
dec
cld
add
lcall
mov
sbb
xchg
fsubp
pop
mov
jl
push
or
daa
gs
sti
xlat
xor
xchg
shrb
add
mov
sub
sbb
in
cmp
subl
ja
test
es
pop
cwtl
jo
or
stos
or
out
aad
fstps
dec
aam
mov
mov
adc
sub
cmpsl
mov
push
xchg
and
mov
sbb
clc
adc
lcall
jmp
repz
hlt
pushf
std
mov
inc
xor
movl
mov
cld
inc
push
and
cld
jp
hlt
inc
int
add
xchg
jns
push
insb
sub
jae
xor
pop
add
adc
xor
mov
xchg
outsb
dec
dec
lcall
lds
movsl
sub
mov
cs
sbb
insb
mov
lea
cmc
xor
stos
add
or
stos
leave
xchg
adc
add
mov
aad
in
sub
pop
push
stos
cmpl
scas
and
mov
pop
loop
aas
cmp
xor
out
adc
out
cmpb
imul
cwtl
mov
xchg
sub
fcomps
mov
mov
inc
pop
cmp
sub
sahf
pop
lock
adcb
or
xor
into
idivb
repz
push
jns
orb
cmp
fwait
inc
adc
mov
jp
repnz
imul
add
pop
pop
imul
sbb
les
loope
ljmp
sbb
dec
leave
decl
push
arpl
lcall
stos
add
movsb
out
test
mov
rorb
arpl
gs
cmc
lods
dec
imul
pusha
cwtl
sub
sub
cmp
loop
outsb
cmp
mov
xor
push
jno
bound
sub
les
cmp
cmp
aaa
clc
imul
fstl
shll
adc
xor
jo
cmp
push
push
jmp
dec
in
or
pop
fwait
push
aaa
or
outsb
les
add
pop
xor
adc
fildll
xchg
cmpsl
adc
cmp
mov
sti
push
out
enter
mov
mov
and
loope
push
out
pushl
ljmp
jecxz
or
xchg
js
shll
jmp
inc
pusha
push
push
scas
dec
bound
pop
ljmp
scas
testl
mov
cld
out
dec
jae
loope
ljmp
insb
xchg
lret
je
push
sub
decb
lods
pop
adc
fsubl
in
ret
adc
jmp
outsb
cli
fbstp
mov
out
leave
adc
mov
xchg
repnz
mov
cmp
jne
pushf
or
add
cltd
adc
cmpsb
ret
inc
ficompl
inc
inc
sarl
cmpl
insb
mov
pop
rorb
adc
xor
or
loop
xchg
inc
test
pop
nop
jnp
dec
outsl
lods
add
jmp
xchg
push
out
dec
xor
and
cmc
icebp
add
adc
pop
xor
push
jp
adc
pop
cmp
push
out
data16
daa
add
xchg
ljmp
push
push
iret
mov
ret
sub
fildll
and
aam
rorb
xlat
sti
adc
xor
test
cmpsb
shl
lcall
adc
mov
les
std
repz
pop
int3
and
cmp
xor
inc
jne
pop
call
repz
adc
enter
adc
stos
mov
dec
ds
out
testl
xchg
out
into
ljmp
push
dec
xorl
sub
ret
dec
xchg
cmpsb
mov
mov
lcall
mov
push
loope
shll
cld
jmp
pushl
mov
xor
add
mov
outsb
cltd
rcr
dec
cmp
inc
or
rol
les
xchg
sbb
icebp
pop
lahf
cmp
lea
daa
repz
mov
add
xchg
out
or
fnstenv
loop
in
push
repz
stc
xor
xchg
push
xchg
and
push
aam
push
and
adc
or
inc
icebp
cmpsl
mov
jecxz
test
les
clc
mov
push
cmp
movsl
mov
sub
dec
int3
jae
pop
fmuls
clc
test
lds
stos
sub
sbb
stos
xor
or
inc
mov
nop
jbe
mov
test
sub
and
xor
rcrb
cld
cmp
xorl
inc
xchg
mov
pop
pop
and
lahf
cmpsb
cmp
out
leave
inc
lret
lret
or
xchg
popf
enter
or
push
mov
fcoml
and
jp
xor
cmpsb
or
loopne
call
add
mov
jbe
ja
jge
and
arpl
xchg
in
sti
jl
jl
dec
enter
xchg
xchg
xchg
pop
push
mov
push
sub
xor
mov
mov
push
ljmp
cwtl
mov
fucomi
sub
sub
pop
sub
roll
mov
aaa
mov
and
xchg
xchg
mov
xorb
xlat
lods
lods
stos
sti
pop
mov
jb
sbb
outsb
add
mov
dec
js
and
adc
cmc
cs
addr16
cmp
mov
in
xor
shll
stos
xchg
push
test
pusha
seto
popa
pusha
mov
xchg
cmpsb
mov
mov
pop
adc
insl
push
mov
mov
in
faddl
jl
and
mov
push
mov
sbb
dec
xor
mov
cmp
mov
or
pop
mov
xor
inc
sbb
shlb
adcb
sbbb
int
mov
push
sbb
repz
jge
cld
adc
in
shlb
shrb
sbb
inc
jne
mov
int
jmp
jo
adc
shrb
pushf
cmc
lret
sar
popa
jnp
or
sbb
aam
pushf
ja
or
jecxz
fucomip
movsl
fdivl
aam
pop
fisttpl
xor
cld
mov
aaa
movsb
js
and
push
push
mov
cwtl
repnz
push
js
shrb
pop
inc
and
xchg
push
fisttpl
call
daa
fimull
jl
push
push
mov
out
pop
fisubrl
cmp
bound
mov
cmpsb
jle
lcall
lods
pushl
clc
inc
xchg
aas
pop
jge
test
push
mov
stos
loope
stc
fwait
sarb
and
subl
stc
pop
paddw
rcrl
mov
subb
pusha
sub
mov
mov
icebp
sub
mov
mov
in
mov
int
xchg
shlb
jle
flds
dec
ret
cmp
test
fimull
mov
loop
data16
mov
ljmp
pop
ret
imul
sbb
pop
dec
repz
mov
test
push
mov
cltd
cmp
jecxz
insl
mov
insb
pushf
test
lret
test
int
sub
pop
cli
sub
xor
mov
add
cmp
dec
sbb
in
pop
cmp
js
push
shll
out
and
lret
enter
mov
dec
adc
mov
sahf
imul
push
cmp
xchg
lret
movsb
sbb
icebp
ss
aas
hlt
adc
fnsave
loopne
addb
dec
pop
and
cli
xor
popa
xchg
dec
imull
sbb
push
popa
data16
cli
lret
push
and
aam
orb
jp
cmpsb
push
popf
hlt
ja
in
push
mov
xor
adc
mov
or
mov
std
push
test
sbbb
dec
in
jl
jg
lret
mov
jo
shll
pop
dec
dec
mov
cmpsb
repnz
inc
aas
loopne
sarw
adc
jecxz
sub
out
aam
jmp
cld
push
jg
nop
imul
mov
ja
enter
mov
movsb
mov
or
addr16
and
cs
push
xlat
adc
hlt
cmc
cmp
push
mov
add
outsl
cmc
inc
jge
stc
insl
push
js
or
out
in
pop
mov
sti
ja
jle
icebp
addr16
out
push
insb
jmp
mov
cmpsb
and
fwait
jne
lods
or
adc
cmp
or
movsb
dec
add
jne
pop
sub
mov
ja
mov
orl
cli
push
mov
mov
rcr
jae
movsl
pop
push
test
xchg
popf
test
push
lds
fwait
in
stc
aad
mov
push
mov
faddl
adc
dec
cmp
xchg
ficompl
sahf
dec
popa
push
arpl
push
inc
inc
popf
sub
jl
push
int
add
cmp
lods
cmp
scas
lods
out
ds
adc
ss
leave
sarl
or
jmp
lret
and
push
insl
adc
inc
mov
fstpt
mov
mov
mov
pop
fs
jge
fcmovnu
adc
ret
jp
jmp
into
cmp
push
mov
pop
cltd
inc
test
inc
scas
pop
adc
adc
xor
mov
mov
clc
stos
cmp
jecxz
xchg
lahf
xor
das
loop
mov
call
and
mov
scas
xchg
scas
adc
addr16
cmpsb
in
ss
sti
repnz
sub
gs
lret
push
fldt
add
aaa
mov
cltd
adcb
pushf
xchg
cmc
movsl
mov
aam
adc
ja
mov
cmp
call
sbb
enter
sbb
cmp
insb
push
daa
test
test
adc
js
and
movsb
into
sar
xchg
sbb
imull
dec
dec
pop
outsl
adc
movsb
xchg
aam
sub
notl
adc
cmp
dec
ret
inc
fbstp
arpl
sbbb
popl
int3
ja
loop
mov
mov
mov
or
gs
out
ja
sub
sbb
push
fs
inc
mov
in
rol
mov
int
cld
lods
jae
cltd
sbb
or
and
xor
mov
call
pop
leave
pop
and
xchg
cmp
or
mov
sub
out
push
test
movsb
in
movsl
and
cmc
pop
mov
pop
sub
inc
in
mov
push
dec
mov
sarl
and
addl
lret
scas
sub
ss
dec
sub
loop
enter
dec
push
adc
sbb
jmp
arpl
jae
scas
inc
sbb
addr16
xor
xchg
imul
call
lock
out
out
push
dec
xchg
arpl
pushf
xchg
push
test
inc
cmp
adc
outsl
xor
aas
push
adc
xchg
or
nop
xchg
push
out
xor
ljmp
mov
jl
xchg
cmc
lcall
out
pop
jl
pop
add
mov
and
cmpl
adcl
out
mov
add
lock
and
cli
int
imul
popf
sub
sbb
outsl
daa
out
cmc
aad
test
or
mov
jmp
ja
mov
jnp
jne
sbb
and
outsl
mov
insb
cmpb
jge
pop
mov
mov
aas
cmp
push
jp
mov
xlat
into
leave
fcomip
adc
mov
jbe
cmp
inc
mov
mov
popf
push
fs
sbb
xchg
add
leave
adc
mov
inc
test
sahf
sbb
mov
mov
mov
shrb
jge
cmp
sahf
mov
aad
sbb
shrl
cwtl
pushf
jne
inc
fsubrp
loopne
gs
add
mov
sub
mov
pushf
cltd
fnsave
movl
cmpsb
dec
jb
push
dec
ja
scas
ljmp
in
call
mov
mov
jmp
fldenv
push
faddl
into
xchg
sub
jno
add
push
rcrb
dec
jmp
in
clc
out
in
xchg
xor
mov
mov
xchg
pop
xchg
pop
scas
pop
mov
cmp
cld
das
inc
cltd
fnstenv
and
clc
movsl
mov
fbld
adc
pop
xor
repz
das
mov
addb
xor
pop
ds
or
sbb
adc
lret
or
dec
inc
mov
jg
push
xor
jnp
xchg
int3
add
jb
adc
jp
or
ret
movsb
out
call
inc
lea
enter
daa
loope
sbb
and
mov
sub
sub
out
and
or
testl
adc
sbb
jmp
out
pop
leave
in
roll
sub
inc
cmp
out
fldenv
cmc
dec
fisubl
adc
add
jns
xor
push
or
push
jae
add
sbb
sub
mov
or
ljmp
jbe
bound
in
cwtl
in
push
cli
leave
iret
cmovg
mov
xor
and
or
and
sbb
pop
out
xchg
or
xor
cmpsl
jl
cmp
jne
or
cmpsb
or
xchg
sbb
roll
inc
xchg
add
mov
cs
sarb
jae
pop
pop
decl
inc
fisubl
cli
push
or
ret
inc
sub
bound
or
orl
pop
outsb
dec
aam
aad
pushf
test
and
dec
arpl
xchg
xchg
mulb
cli
imul
sahf
aas
xchg
sbb
mov
push
mov
jo
mov
xor
xchg
add
jl
fdivl
mov
out
push
jne
cmp
sub
int
sub
inc
cs
jae
mov
sbb
xchg
mov
imul
push
mov
pop
jae
mov
adc
sahf
cmpl
fdivrs
aas
filds
pop
dec
hlt
inc
test
xchg
call
fcoml
daa
dec
push
scas
cli
cmp
cmpsl
pop
or
push
fiadds
pop
xor
fs
not
je
out
jns
xor
pop
call
mov
sahf
jns
xchg
pop
rorl
fbstp
das
cmc
sarb
xor
test
pop
setp
es
pop
push
js
cli
xor
shll
push
fidivrl
cmpsl
cmpsl
aam
and
or
mov
lcall
call
inc
sbbl
addr16
add
stc
dec
test
sbb
stc
or
aaa
pop
mov
mov
mov
out
daa
mov
cwtl
scas
ret
ja
mov
fisubrl
into
xchg
push
pop
testb
iret
or
sarb
daa
or
ja
in
jae
adc
idiv
and
pop
push
jnp
jmp
ret
jecxz
adc
ljmp
dec
int3
mov
out
cwtl
dec
mov
cmp
lahf
mov
scas
rcll
xchg
jns
cmpsl
jmp
mov
xorl
and
sub
cld
mov
lods
insb
jns
push
ficoms
push
js
mov
add
ljmp
mov
jg
sbb
add
aaa
or
mov
or
stc
or
mov
mov
mov
cmpsb
push
lret
loopne
insl
loop
das
roll
outsl
lods
and
pop
jno
mov
xchg
cld
neg
and
cwtl
mov
mov
lcall
mov
push
mov
lcall
pop
cli
mov
jne
popf
gs
push
sbbb
mov
imul
xor
icebp
lds
mov
mov
in
out
and
cmpsl
arpl
push
push
pop
ror
out
adc
or
cltd
mov
and
adc
jnp
and
adc
test
sbb
adc
dec
jb
and
jb
cli
mov
mov
xchg
or
pop
and
push
test
xor
gs
popf
jp
js
or
fldcw
fldcw
lret
aas
jne
aam
dec
adc
lods
shlb
ret
lea
or
fs
or
leave
sbb
adc
sbb
es
push
pop
faddl
mov
inc
add
pop
hlt
fwait
sbb
lcall
pop
xor
out
mov
imul
into
xchg
add
cmp
out
xchg
sbb
icebp
test
fcomi
xor
iret
mov
jge
inc
int3
into
dec
add
inc
scas
bound
sbb
aad
int
or
or
stos
jno
mov
lock
jg
ds
mov
xadd
cmp
push
rclb
rcll
cwtl
push
fistpl
xor
aam
pop
das
dec
data16
movsl
in
ret
loope
jmp
mov
lds
int
inc
jae
and
xor
aam
add
pop
mov
and
movsb
pop
shll
and
and
scas
fs
pop
inc
push
das
cmp
cltd
js
into
sbb
repz
mov
fisubrl
lret
pop
dec
jb
xor
mov
fucomp
adc
loop
scas
shll
fldt
or
xor
push
nop
inc
pop
and
out
push
ret
mov
inc
iret
jns
stos
or
loop
sub
sub
cmp
mov
jb
xchg
push
mov
pop
outsl
pushf
jl
lds
out
icebp
rcl
ror
test
ficomps
cmp
adc
das
ds
ljmp
jmp
shrl
mov
cmc
stos
jg
addr16
lcall
fldl
jmp
clc
adc
cmp
inc
jp
stos
push
jp
aaa
push
in
andl
add
xchg
mov
idivl
test
push
gs
sub
and
mov
loopne
adc
orb
mov
mov
pop
outsl
dec
jo
aam
mov
jb
hlt
test
pop
push
pop
mov
jo
repz
add
cwtl
je
daa
push
xor
dec
mov
pop
and
test
pop
pop
add
jno
stos
mov
or
into
ljmp
xor
xorl
xor
pop
cmpsl
fnstenv
and
inc
cmp
stos
jmp
imul
pop
rolb
aaa
gs
sbb
mov
lock
out
sbbb
loop
or
dec
mov
pop
aam
cs
sub
mov
xchg
mov
lahf
fs
mov
add
cmp
aam
icebp
out
call
sbb
lods
jmp
cs
cltd
insb
mov
sub
push
fildll
lahf
jl
mov
dec
mov
push
jns
push
xchg
lock
pop
movsl
stos
adc
gs
fs
pop
mov
jecxz
xor
lods
push
cwtl
fcom
pop
adc
data16
jns
pop
mov
popa
es
insl
repz
out
cmc
std
out
push
movsl
icebp
lahf
scas
outsb
data16
lods
mov
sub
sbb
cltd
and
in
fwait
pop
rcl
add
adc
pop
push
scas
idiv
inc
cmp
sbb
cmp
lods
adc
insl
fsubp
aad
push
mov
xor
popa
inc
mov
test
outsl
xchg
xchg
jns
nop
rsm
stos
pop
lock
inc
or
dec
jns
fcom
imul
ja
loopne
cmpsl
add
outsb
xchg
mov
adc
mov
push
mov
push
push
cli
sub
push
dec
lds
pop
jp
jecxz
roll
dec
das
out
sbb
imul
or
mov
lea
idivb
into
mov
sahf
add
in
mov
sahf
xchg
mov
fdivrp
test
dec
adc
shl
cmpl
pop
sub
loop
lds
dec
push
out
xchg
mov
xlat
pusha
mov
es
pop
jl
xor
jmp
or
negl
add
cmp
mov
inc
gs
xchg
jo
test
push
repnz
jg
in
sub
sbb
or
mov
mov
out
sbb
shlb
jge
dec
jae
mov
clc
es
cmp
xchg
mov
mov
out
pop
cwtl
test
pusha
mov
aas
jae
adc
xlat
sbb
mov
lds
mov
sub
loope
sbb
aas
fbld
out
mov
mov
sbb
add
pop
dec
iret
or
dec
lret
xchg
or
inc
mulb
mov
into
lret
add
cmp
mov
aad
leave
dec
dec
aam
mov
sahf
js
sbb
lods
mov
or
cs
imul
mov
lcall
or
shll
mov
adc
adc
into
ljmp
arpl
cmp
das
flds
sti
divb
fsubrl
jnp
ja
dec
mov
shlb
andb
ljmp
adc
pushf
pop
bound
daa
shrl
mov
repz
xchg
cmp
shll
gs
fs
inc
loopne,pn
push
or
lock
dec
cld
inc
inc
mov
shlb
mov
js
outsb
popa
jo
and
pop
shr
fwait
sbb
mov
dec
shrb
in
icebp
pop
rcll
cld
add
lcall
inc
mov
outsl
mov
addr16
dec
bound
sbb
idivl
xlat
insb
and
pop
ret
and
ja
push
cmp
and
dec
or
jg
lds
inc
inc
jns
push
xchg
dec
mov
xor
fdivl
pusha
inc
in
fistpll
or
repnz
inc
pop
lahf
inc
repnz
and
idiv
test
push
push
data16
dec
or
mov
out
orb
sub
push
xchg
mov
xchg
in
cmp
leave
jnp
jl
into
push
pop
jp
jmp
shll
test
adc
adc
dec
ret
ror
popf
inc
jno
or
mov
out
sbb
test
push
data16
cmp
das
add
clc
jecxz
add
out
scas
xchg
lea
pop
and
cmp
sub
xorb
dec
inc
inc
mov
add
cli
cmp
xor
add
mov
cwtl
jge
jl
jae
xchg
jge
fcoml
cwtl
push
adc
fwait
jg
mov
or
push
cld
hlt
fstpl
pushf
icebp
cwtl
sbb
sbb
xchg
sti
stos
gs
and
shlb
clc
lret
repnz
mov
inc
push
jbe
insb
mov
push
cmp
push
ret
add
fisubrs
iret
push
lahf
js
aad
movsl
dec
inc
or
test
cmp
je
ds
dec
fsubr
inc
mov
adc
dec
xchg
add
insl
adcb
mov
push
bnd
decl
ficoml
ja
xorb
sub
and
fs
jmp
aas
xor
sti
pop
idivl
xchg
decb
pop
sti
adc
push
sub
inc
cmpl
das
cmp
hlt
adc
in
lods
pusha
mov
mov
fisubrs
or
movsb
dec
add
test
add
and
sbb
imul
adc
jno
dec
xchg
add
xchg
xchg
dec
pop
inc
dec
jno
sahf
mov
pushf
push
jbe
lret
dec
cmc
in
cld
pop
ret
popf
in
xchg
sbb
repz
loop
sbb
and
popf
orb
push
and
push
dec
push
or
int
pop
push
jge
and
xchg
cmp
xchg
repnz
sahf
lods
fistl
add
outsb
xchg
popa
ja
js
pop
inc
fnstenv
flds
in
movsb
outsb
sub
jecxz
in
clc
lods
es
aam
scas
mov
mov
pop
mov
xchg
xchg
movsl
popf
sti
iret
mov
sahf
xchg
adc
mov
mov
cld
cwtl
and
xor
jno
hlt
add
sub
test
pop
dec
and
repz
rcll
xchg
push
out
out
lcall
mov
aas
dec
out
mov
and
or
divb
push
iret
push
xchg
cmp
dec
sarb
hlt
and
mov
mov
xchg
push
jl
rolb
mov
cld
mov
aam
rcrl
sarl
nop
inc
or
movsb
cmc
mov
inc
sti
pop
xor
test
sub
ja
xor
mov
add
jae
repz
mov
test
jbe
sbb
push
mov
xor
jbe
cs
jnp
add
cltd
adc
dec
sbb
and
loope
inc
lret
xlat
mov
out
std
jecxz
outsb
mov
lods
xor
sub
out
cmpsb
hlt
flds
stos
insl
bnd
xchg
pushf
sub
out
std
mov
or
add
dec
insl
in
les
inc
push
and
cwtl
das
push
pusha
lcall
insl
in
push
bound
daa
movb
xor
mov
in
xor
push
sub
cmp
fmuls
sbb
test
sahf
mov
lods
imul
xor
inc
loop
jmp
fidivl
cmp
add
cwtl
adc
pop
mov
out
push
dec
push
cs
mov
mov
cmp
mov
inc
out
dec
sub
jae
lea
push
imul
jp
mov
pop
stos
outsb
inc
dec
pop
pop
cmp
xchg
leave
mov
adc
push
les
jg
dec
cmc
inc
clc
repnz
mov
xor
fadds
aaa
test
test
or
imul
mov
sti
into
add
xchg
aas
repnz
add
jb
xlat
pushf
cmp
push
mov
sbb
jo
or
push
mov
out
jecxz
mov
add
shl
movl
test
pop
movsl
test
xchg
xor
sub
inc
addr16
sub
adc
or
dec
mov
cmpsb
mov
xorb
movsl
js
add
push
addr16
xor
imul
cmp
int3
test
xor
test
test
aaa
out
jo
cmp
jle
mov
xor
jo
mov
add
jmp
inc
lods
mov
xchg
dec
sub
sar
cmpsb
or
fdivrl
add
push
sub
push
cli
dec
jno
xchg
xor
mov
jp
rolb
mov
je
cltd
sbb
or
pop
or
stos
jb
ds
fists
fcoms
cld
xchg
push
sbb
mov
ret
roll
xlat
xchg
jne
bound
outsb
sbb
inc
addb
daa
ljmp
dec
mov
dec
arpl
jb
mov
jns
scas
mov
cmp
mov
addr16
lock
cld
push
nop
cmp
cwtl
or
dec
rorl
mov
jmp
sbb
lea
clc
add
test
mov
aaa
enter
lods
fidivs
push
data16
fs
idivb
or
mov
and
int3
and
movsb
mov
int3
add
popf
ss
hlt
cli
insl
sub
mov
rcl
cmpsl
pop
scas
jle
pop
mov
xor
mov
lods
cmp
ja
pop
xor
add
lods
fwait
cmp
aas
lea
cmpsl
add
adc
into
mov
stos
rcrb
jmp
lods
leave
daa
mov
scas
fmul
aad
hlt
sti
cld
push
out
cmpsl
out
aas
xor
sbb
aaa
aaa
lods
inc
imul
out
adc
ds
inc
gs
cli
xchg
aad
shlb
xchg
jb
jne
insb
in
fstl
inc
cmp
or
cmp
sahf
pop
sbb
cmp
in
push
or
movsl
scas
fcomip
fwait
inc
gs
ss
jae
cmp
adc
fistpl
cmp
stos
ljmp
cwtl
fidivl
fstl
dec
out
orl
std
outsl
cmc
insl
push
cmp
mov
dec
in
out
pop
push
mov
gs
in
cmp
pop
les
addb
lea
scas
push
jmp
dec
add
ja
lea
pop
in
push
or
mov
mov
movsl
mov
pop
xor
cltd
fisttpll
ficoms
and
mov
dec
dec
push
arpl
pop
std
movb
addr16
ret
adc
lods
cmp
or
mov
jecxz
sysret
loop
stc
xchg
test
cld
xor
xor
movsl
pop
pop
and
les
jb
shrb
pop
mov
mov
adc
or
jns
mov
outsb
mov
imull
cmc
test
or
ret
xchg
sub
daa
int3
cmp
lea
xor
mov
mov
dec
pop
xor
xchg
lds
pop
mov
cmp
mov
data16
sarb
loop
jg
icebp
add
add
lret
test
mov
jb
jae
lret
ficompl
ret
sbb
mov
sub
sarb
lret
cmovs
sub
icebp
in
mov
mov
lcall
push
test
dec
iret
int3
cs
out
lea
push
push
insl
dec
pusha
test
stos
dec
cmpl
ret
xor
insb
jb
movzwl
lds
and
jb
cmpb
lret
mov
nop
jb
push
lcall
adcb
push
inc
push
rolb
movsb
bound
jp
cmp
sbb
push
cmpsb
out
jo
scas
sbb
movsl
pop
push
xchg
push
lahf
xchg
into
mov
sbb
inc
loop
stos
cwtl
sbb
adc
cmp
jns
cmpsl
outsb
jo
jmp
inc
clc
push
xchg
mov
mov
jle
mov
out
subb
jge
xor
mov
mov
mov
pop
cmp
add
cwtl
inc
cmp
dec
call
sub
xchg
jnp,pt
inc
pusha
mov
adc
outsb
xchg
rorb
push
daa
paddusb
pushf
outsb
jno
aad
dec
popf
and
stc
in
ror
xor
push
xchg
mov
icebp
and
test
cmp
stos
xchg
lcall
into
std
jbe
cmp
lea
adc
push
or
jle
inc
loopne
sti
mov
sbb
mov
xlat
xchg
xor
movsl
inc
mov
stc
jno
repz
mov
fmuls
in
or
sub
cmp
test
mov
pop
mov
adc
adc
mov
imul
gs
mov
shrl
pop
mov
fstpt
lock
cmp
nop
mov
mov
pop
cltd
pop
adc
jno,pt
xor
insb
loop
push
repz
jns
cmpsb
mov
insb
push
adc
movl
add
xchg
stc
inc
cltd
pop
xchg
sub
jl
lahf
cwtl
cmpsb
fisubs
data16
sbbl
in
cld
xor
mov
popf
fsubrp
jns
push
push
pop
or
xchg
rclb
pop
outsb
mov
xchg
movsb
ret
shl
xor
push
lea
lret
xchg
and
addb
mov
xchg
orl
xor
sahf
mov
xlat
jo
pop
sbb
mov
sbb
push
out
pop
xchg
rorb
call
popa
ljmp
addb
adc
jmp
mov
pop
mov
jg
jge
mov
adc
jle
mov
xor
dec
mov
pop
sub
adc
jmp
es
xor
inc
dec
dec
mov
add
aas
lods
mov
mov
xchg
ud0
fstpt
inc
pop
add
fstl
push
adc
sub
mov
mov
or
test
enter
sti
dec
adc
xchg
iret
aas
enter
sbb
sub
jno
add
stos
outsb
inc
xchg
jp
stos
rcrl
xor
hlt
add
mov
loop
mov
lret
cmpsl
adc
sub
push
call
icebp
shl
or
das
mov
aas
jbe
mov
stos
mov
lds
std
mov
pop
pop
lret
dec
test
mov
sbb
jge
rcr
lock
inc
fists
cmp
js
imul
mov
in
xor
push
ret
dec
out
jno
insb
dec
daa
repz
lods
pop
sahf
imul
orl
fs
cmc
xor
jle
xor
xchg
jge
xchg
adc
les
pop
in
test
sub
in
pop
fs
push
test
aaa
xlat
push
aaa
push
ss
inc
loop
sub
sub
xchg
std
dec
adc
cmpsl
mov
cmpsb
add
insb
and
cwtl
fbstp
xchg
call
and
fcomp
cmpb
sahf
xchg
pop
lret
loope
cli
push
js
out
adc
pop
adc
loope
mov
push
fcoms
out
nop
pop
test
cltd
sbb
mov
xlat
jae
arpl
mov
dec
xor
in
pusha
aaa
inc
xor
jne
ret
rcl
mov
fidivl
inc
nop
dec
inc
add
mov
subl
adc
mov
movsl
inc
mov
jae
dec
fildll
movb
xchg
in
data16
cmpsl
dec
test
int3
mov
icebp
mov
jecxz
add
nop
test
imul
cwtl
cmpsl
jecxz
rolb
mov
inc
xlat
nop
fadds
jno
fs
cmpb
pushf
dec
movl
jl
jb
push
mov
ja
int3
aaa
adc
xorb
negl
movsl
nop
outsb
lods
out
push
adc
ffreep
or
mov
or
ret
cld
mov
jmp
neg
add
sbbl
sbb
test
and
and
cmp
sub
jb
sahf
dec
mov
cmp
fwait
lds
push
imul
cmc
sbb
or
push
mov
jo
ljmp
and
out
aaa
xchg
push
jb
inc
sti
mov
dec
test
inc
jg
xor
jno
sub
fisubrl
pop
jno
cmp
push
call
int
add
sbb
jmp
mov
or
rcrb
pushw
ret
inc
dec
lods
jecxz
rolb
ds
push
pushl
arpl
mov
mov
xchg
aam
cli
mov
push
popa
outsl
in
or
stos
imul
sbb
dec
stos
popf
mov
jb
jo
in
jecxz
test
int3
push
ja,pn
stc
sti
xchg
push
xchg
inc
test
arpl
mov
dec
adc
pop
rcrb
sub
dec
repnz
test
sub
sub
adc
inc
pop
mov
jp
lock
pop
inc
insb
or
jmp
clc
push
imul
int
xor
rolb
lea
pop
inc
cld
pop
adc
clc
xor
add
lds
mov
cltd
das
cli
es
push
mov
loopne
jp
push
loop
sahf
out
scas
leave
push
je
divb
rorb
and
mov
cmpsb
fnstcw
xchg
lea
push
sbb
and
add
pushf
pushf
mov
add
lcall
in
add
mov
jp
inc
mov
mov
cmpsl
push
or
mov
rolb
jnp
xor
push
cltd
or
mov
and
adc
cli
mov
add
push
sbb
mov
lcall
mov
cmp
mov
cwtl
in
and
push
daa
testb
dec
jecxz,pn
push
orb
outsb
test
daa
outsl
sarb
push
pop
rorl
mov
out
push
push
add
jae
xorl
and
pop
mov
repz
jg
stc
push
mov
int3
repz
test
jo
or
in
push
loopne
test
xchg
mov
mov
repz
or
sbb
div
mov
or
pop
daa
or
ret
mov
sbb
inc
inc
mov
jmp
mov
cmp
pop
ds
fidivrs
test
lods
inc
jns
rolb
sub
fwait
jae
mov
inc
icebp
adc
roll
pop
jnp
inc
mov
aas
add
dec
dec
enter
mov
adc
or
inc
jne
mov
mov
adc
roll
daa
inc
outsb
adc
mov
mov
xchg
jmp
jg
insl
fcompl
sub
add
push
clc
sti
cmp
and
push
inc
mov
shrb
repnz
and
adc
movsb
xchg
testl
test
movsl
pop
xor
repnz
es
add
cmp
cmp
filds
mov
ja
arpl
loop
jle,pn
pop
idiv
imul
xchg
jae
ret
stc
cmpsb
or
popa
mov
out
cmpb
sbb
pop
jg
add
and
cmp
mov
int3
movsl
aas
test
push
flds
iret
mov
dec
stos
sub
stos
shufps
out
stc
imul
out
fists
add
add
adc
jo
inc
cs
mov
lock
jle
xchg
xor
xor
mov
push
insl
and
xchg
add
hlt
mov
sub
std
cmp
xchg
add
jno
mov
cmp
xor
loopne
cmp
sahf
ret
lds
adc
fnstenv
aam
ss
adc
divl
les
aas
lcall
adc
in
or
adc
sbbb
cwtl
mov
cmpsl
shrl
imul
add
int3
pop
imulb
fstps
adcb
cmp
push
and
cmpsb
xchg
stc
pop
push
out
das
imull
jl,pn
push
pop
mov
cmp
xchg
push
aaa
clc
test
mov
int3
cmp
cmp
dec
jmp
mov
or
xor
out
nop
dec
mov
pop
add
outsb
out
inc
mov
push
xchg
dec
lret
cmpsb
lcall
test
daa
jl
pop
add
mov
outsl
loopne
add
add
xchg
mov
xchg
pop
bound
xchg
shll
sub
mov
shlb
inc
bound
sub
scas
sarb
test
dec
xor
inc
jmp
xor
sub
push
test
mov
or
leave
sub
and
into
fstl
testl
jge
popa
gs
cmp
repz
inc
mov
test
mov
cs
mov
pusha
jns
sbb
push
cmpsl
xor
xor
popf
aam
push
pop
push
push
xchg
add
fmull
adc
js
cmp
dec
outsl
iret
pushaw
mov
in
xlat
dec
pusha
orb
ss
lcall
leave
jle
or
scas
or
sbb
lret
sbb
and
ljmp
xchg
adc
lret
sub
out
leave
xor
push
int
shl
or
stc
xchg
ja
or
lahf
xchg
or
cmc
inc
lea
cs
les
xchg
pop
xchg
stc
push
pop
jl
sbb
jle
sub
mov
and
cmp
loopne
sti
out
and
ds
jbe
aas
mov
fcmovnu
mov
inc
das
dec
dec
sar
mov
push
and
xchg
inc
stos
jl
setl
mov
stc
mov
movsl
adc
push
add
jae
or
push
sahf
inc
lock
pop
pop
mov
cmp
inc
jp
jnp
ljmp
std
jecxz
bound
iret
dec
imul
lcall
sbbl
sub
mov
pusha
in
iret
mov
pop
pop
push
cmpsl
jmp
pop
dec
sbb
push
rolb
inc
add
pop
mov
sti
cwtl
adc
push
xchg
mov
mov
and
rcrl
fwait
insl
arpl
stos
mov
jl
pop
out
inc
mov
pop
xor
jl
movl
sub
sub
and
sbb
test
das
cmp
test
and
sbb
mov
jmp
dec
call
mov
mov
jg
sub
insl
scas
sbb
cwtl
in
xor
add
enter
decb
jle
xor
pop
fldt
ss
pop
inc
mov
insl
lds
mov
sub
push
sahf
test
aaa
fadds
sbb
push
subb
fnstcw
adc
aaa
adc
addr16
fbstp
std
push
pop
out
in
pop
pop
test
adc
stc
jle
aad
cmp
add
mov
das
sub
sub
lret
adc
int3
jo
xchg
mov
sub
leave
or
xor
jp
test
pop
sti
mov
aad
addr16
pop
cwtl
add
adc
mov
clc
cs
fst
lea
mul
cmp
leave
stc
insl
adc
push
std
sbb
cltd
scas
sub
adc
sbb
add
adc
or
cmp
adc
jle
and
fmuls
orb
movsl
lret
daa
cwtl
loopne
and
lcall
ret
cmp
imulb
and
or
test
sahf
pop
mov
push
fmuls
int3
popa
out
outsb
mov
movsl
daa
cmp
notl
jno
leave
sbb
add
clc
stos
jno
lea
data16
test
out
push
adc
add
mov
fcoms
dec
scas
mov
lods
xor
and
mov
jmp
xchg
iret
push
jge
fwait
xor
test
jg
pop
pop
sub
mov
pop
or
les
jbe
int
xor
adc
lret
and
mov
sbb
jb
sub
sub
ljmp
cwtl
fists
cmp
int3
shlb
xchg
and
sbb
ds
jnp
mov
pop
and
int
or
mov
push
lret
and
call
icebp
test
cmp
adc
movsl
dec
add
adc
std
push
jno
xchg
adc
cmp
ret
cmpsl
andl
dec
data16
mov
adcb
js
pop
outsl
shll
fcomps
push
adc
pop
daa
jmp
test
loope
push
cltd
decb
hlt
add
add
dec
int3
pop
xor
sub
pop
push
cmc
xchg
dec
cmpsl
cmp
sbb
sbb
and
sub
inc
addr16
xor
popf
rclb
sti
mov
and
inc
push
test
mov
into
jo
mov
xor
push
mov
jne
jae
testb
pusha
xchg
sbb
push
cmpsb
pop
jae
les
stc
xor
sbb
mov
sbb
or
shll
leavew
fstps
jae
xlat
inc
sub
mov
cmp
sbb
daa
fldt
inc
adc
push
mov
mov
mov
lret
sub
int3
mov
mov
mov
sbb
pop
mov
adc
fstl
adc
pop
clc
cld
cmp
or
ss
out
pop
mov
clc
xchg
out
dec
cmp
mov
mov
addr16
cmp
cmc
cmc
iret
test
jne
pop
scas
or
add
xchg
fwait
stos
inc
scas
cmpb
gs
mov
and
aam
test
in
outsb
inc
and
and
or
sub
push
or
addb
xchg
hlt
add
ret
in
ret
or
mov
xor
dec
hlt
lret
outsl
pushf
sub
push
je
push
out
cs
jle
mov
push
loop
sub
pop
stc
ds
xor
sbb
adc
ss
or
call
enter
test
xor
jno
xchg
mov
cmp
xchg
inc
shl
cmp
cwtl
loope
push
lock
stc
xor
pop
arpl
leave
mov
xchg
dec
int3
rcll
mov
push
xchg
jl
enter
shrl
push
scas
and
out
mov
and
shl
add
sbb
pop
xchg
sti
mov
push
orb
sub
cmc
in
ret
cmp
arpl
add
cmp
mov
adc
sub
and
fadds
aaa
mov
inc
mov
mov
pop
mov
and
in
fstl
test
aad
jns
je
mov
js
pop
xor
adcl
loope
adc
in
xchg
cmpsl
aam
mov
popf
daa
adc
jno
in
mov
sbb
lea
push
pop
int3
out
sbb
pop
pop
and
outsb
xor
add
dec
jno
xchg
js
xchg
xor
inc
inc
jecxz
pop
xchg
jne
push
in
mov
sub
push
mov
icebp
or
xor
mov
iret
movsb
push
mov
mov
mov
test
jecxz
xor
lahf
add
sti
outsl
mov
lret
inc
rorl
into
aas
hlt
aaa
int
pop
dec
add
jo
loopne
imul
insl
scas
mov
loopne
enter
enter
sarb
or
mov
push
orl
add
sub
dec
sub
jno
push
lods
xor
inc
jbe
adc
add
add
enter
jmp
xor
dec
sbb
jno
sbb
out
or
sahf
adc
and
mov
lret
popa
push
dec
sub
or
in
leave
dec
mov
add
fidivl
inc
xchg
ficoms
add
popa
push
sbb
and
mov
adc
jecxz
mov
and
push
ljmp
push
std
push
pop
movsb
rcr
cltd
inc
sbb
adc
push
and
daa
popf
ret
stos
fildl
popf
das
cmpb
xor
push
mov
popf
rclb
cmp
testb
sbbb
xorb
push
sbb
jae
les
sub
push
sbb
jg
xchg
scas
push
push
or
mulb
call
jns
xchg
add
dec
movsl
fbld
mov
cwtl
jge
add
add
push
fiaddl
aaa
xor
fcoml
fsubr
idiv
jae
and
xchg
and
mov
mov
loop
cli
mov
std
das
ja
repnz
testl
xor
push
ret
out
lahf
notl
aad
mov
mov
dec
cs
push
sbb
add
test
xor
inc
dec
popf
xor
cs
add
push
mov
or
arpl
aad
cwtl
and
cmp
cmp
push
pop
xchg
insb
jge
mov
lcall
xchg
sarb
dec
movsl
icebp
dec
test
cvtdq2ps
mov
stos
fcoml
dec
pop
and
mov
lds
jne
sub
mov
pop
inc
mov
mov
push
xchg
lret
add
xchg
dec
repnz
das
lods
rcll
xchg
pop
jmp
push
dec
daa
aam
push
inc
mov
sub
cmp
lods
scas
and
xchg
repnz
fdivs
mov
lahf
sbb
or
lods
sbb
push
mov
cld
aaa
and
jae
mov
scas
scas
dec
int
or
pusha
scas
fisubs
xchg
cmp
lret
gs
jno
jns
xor
cmp
mov
jo
movsb
stos
xor
icebp
mov
cmp
cltd
xchg
arpl
jbe
insl
mov
fcomps
int3
dec
insl
aas
les
insb
test
addr16
mov
rcrb
stc
jnp
stos
movb
mov
clc
adc
cmc
fwait
call
xor
cli
dec
movsb
imul
pop
xor
xchg
sub
or
xchg
dec
inc
and
sub
pop
or
movsb
jecxz
icebp
adc
sbb
insl
movsl
jmp
lcall
iret
xor
mov
jno
das
iret
fcomp
pushf
sub
mov
fs
mov
inc
cmp
dec
pop
loopne
or
mov
cmp
lret
pop
insl
sbb
mov
jb
loope
adc
cs
sub
push
mull
out
nop
sub
sub
imul
ficomps
dec
data16
mov
aam
fcmovb
xchg
jbe
adc
lahf
xchg
cmp
adc
pop
lds
push
in
mov
adc
and
jno
mov
outsl
mov
fsubrl
es
xchg
mov
dec
cmc
cmp
daa
xor
xorl
mov
aaa
cmpsl
repz
adc
enter
xchg
pop
fmull
add
popa
sbb
dec
mov
push
into
cmp
add
and
rorb
negl
in
jns
dec
mov
cmpsl
sub
cmp
pop
inc
mov
iret
repnz
neg
dec
int3
adc
or
idivb
dec
iret
popa
and
mov
lock
jle
or
mov
add
loope
loope
sub
push
and
mov
push
daa
test
iret
test
push
ljmp
ja
ss
push
mov
stc
pusha
mov
mov
lea
gs
add
nop
dec
push
jb
pop
jno
cmc
or
xor
or
shll
push
push
icebp
jecxz
or
inc
mov
fidivs
dec
push
sub
pushf
sub
in
pop
mov
repz
scas
jno
mov
shll
dec
xchg
or
mov
inc
mov
and
xchg
pop
cmpsb
add
outsl
fmuls
sarl
dec
sbb
daa
mov
outsl
push
mov
sub
sub
or
ret
push
push
xor
push
cwtl
mov
mov
into
inc
xchg
shrl
push
push
aad
inc
push
pop
rcr
lods
fwait
xchg
ret
add
sub
sbb
inc
add
cmp
add
outsb
xor
xchg
orl
sub
mov
jle
clc
icebp
mov
mov
lahf
push
test
and
mov
push
out
enter
mov
sti
add
cmp
hlt
addb
jbe
lods
add
mov
sub
pop
adc
and
mov
jle
rolb
jmp
mov
or
pop
push
test
push
dec
mov
xlat
sbb
add
pushf
sbb
lahf
pushf
cmpsb
jne
xchg
sti
or
mov
inc
out
cli
ss
in
sub
maxps
xchg
test
xchg
aas
or
xor
pop
call
dec
ds
call
in
sub
dec
cmp
mov
popf
cmp
xchg
jo
outsb
subb
lret
add
jp
scas
jg
push
sarl
rolb
cli
rclb
ja
cmc
dec
or
pop
inc
cmp
xlat
cwtl
fs
push
imul
push
xchg
enter
sbb
cmp
les
jge
fstl
xor
or
add
add
mov
xchg
sarl
xor
aaa
and
sbb
push
pop
mov
loop
pop
stos
leave
shrb
aaa
rorl
xor
out
mov
out
andl
arpl
mov
popa
sub
jmp
pop
fildll
loope
sub
inc
inc
push
ss
and
pop
adc
or
les
jae
mov
hlt
or
or
punpcklbw
movsb
int3
lcall
jno
test
sub
dec
push
ret
out
loope
jge
sahf
xchg
imul
lret
and
in
aam
jl
je
cmc
int
or
les
add
jo
in
iret
lock
or
js
xor
jge
arpl
push
pop
lahf
sbb
push
int3
in
movsb
ret
adc
pusha
filds
or
push
adc
andl
cmp
call
loope
lods
xchg
push
pop
mov
pushf
or
jle
push
lea
mov
jo
jno
push
pop
mov
in
pop
xchg
jnp
mov
fnstsw
jg
fisubs
outsb
sbb
stc
lock
ret
jl
loop
adc
subb
ficoms
cmp
pop
out
dec
add
push
and
inc
push
pop
add
jg
adc
fistpl
nop
in
jmp
in
lahf
orl
imul
cmp
push
loop
push
cmpl
or
movsb
scas
aam
imul
inc
sub
aad
sbb
jb
mov
push
fbstp
lock
xchg
or
cli
cmp
jno
dec
hlt
repnz
test
mov
mov
mov
mov
lock
and
push
lds
test
sahf
xchg
push
out
lods
lcall
dec
mov
cmc
lea
aas
fists
cmp
mov
faddp
fisubrs
icebp
jbe
scas
dec
std
insb
mov
dec
or
pop
pop
scas
hlt
filds
jmp
cmove
stos
je
push
xchg
mov
sbb
fwait
mov
mov
or
repnz
int
subb
in
movsl
push
pop
cwtl
xchg
stc
push
pushf
lea
jns
and
test
cmpsb
arpl
adc
jmp
jmp
faddp
fdivr
jnp
js
mov
add
repnz
adc
sbb
lea
push
cli
mov
out
iret
jmp
cmp
and
addr16
cmc
mov
dec
inc
sub
pop
mov
cmp
mov
push
insb
adc
or
in
xor
dec
inc
hlt
pusha
push
call
push
jnp
adc
lret
xor
adc
jecxz
dec
xor
imul
dec
sbb
add
cmp
in
dec
dec
cmp
adcl
jp
imul
das
or
sub
mov
or
mov
or
cld
mov
jne
fcoms
cmpsb
and
jge
rcrb
daa
pop
andb
jbe
and
scas
loopne
mov
dec
scas
test
adc
fisubrl
pop
add
mov
pop
mov
shr
clc
hlt
aam
ss
jno
push
sahf
mov
loop
sbb
div
ja
stc
fsub
divl
loope
pop
out
dec
fldt
popf
imul
dec
addr16
les
leavew
outsl
jle
pop
rclb
adc
sub
and
mov
mov
and
xlat
sbb
add
popa
dec
in
xchg
mov
lods
aaa
and
mov
pop
xchg
sub
mov
fs
cbtw
cmpb
mov
cmp
jae
call
sarl
shl
or
push
in
mov
arpl
jno
dec
and
sbb
mov
mov
cmp
dec
out
stc
xchg
dec
ljmp
rorb
cmpb
lods
jbe
lock
jmp
pop
das
jecxz
inc
sar
or
sub
pop
xchg
sar
mov
push
and
pop
sub
adc
fs
mov
jge
lahf
jge
imul
mov
ja
mov
pop
sub
roll
test
test
pop
mov
sub
daa
lret
jbe
es
imul
je
cmp
mov
out
jno
lock
xchg
push
pop
das
ds
push
leave
sbb
lods
cmpsl
mov
popf
and
dec
imul
mov
movsb
inc
js
stc
and
shlb
hlt
addb
cmpsb
mov
and
adc
popf
sbb
jl
xchg
push
jnp
daa
loopne
pop
adc
add
and
push
mov
jge
stos
mov
int3
sti
add
adc
dec
lret
popf
adc
inc
imul
insb
outsl
iret
lret
push
cli
sub
xchg
cli
push
insb
dec
adc
movsl
popa
jae
cmp
repz
fmul
daa
movsb
in
int
out
push
add
xchg
jmp
pop
hlt
bound
sbb
sub
rcrl
lds
cmp
hlt
das
jge
decl
pop
out
pop
out
adc
add
or
clc
insl
xchg
test
mov
jecxz
addr16
inc
lahf
cmc
inc
sar
push
pop
ss
sub
stos
lcall
mov
xchg
lcall
pop
xchg
popa
add
movsb
pop
sbb
leave
xchg
stc
dec
negb
ss
sarb
sub
jge
call
dec
or
lea
cmp
mov
adc
fisubrl
or
nop
ljmp
jo
xchg
js
dec
lods
add
negl
xor
cmc
fnstcw
cmp
jns
out
insb
mov
cltd
mov
ja
paddsb
pop
lds
dec
push
xchg
call
nop
xor
sub
test
pop
dec
scas
add
cld
popf
and
fisubs
add
pop
jno
pop
xchg
mov
shlb
xchg
gs
imul
hlt
jge
ret
call
dec
test
shrl
dec
daa
cltd
xchg
sub
cmp
popa
lcall
fidivrl
cmp
cld
fnstcw
loopne
cld
xchg
push
xor
out
push
repz
dec
daa
inc
inc
mov
pop
imul
lea
sbb
loop
test
cltd
mov
sti
push
notl
push
in
sbbl
jmp
rcr
jmp
in
sti
add
addr16
or
inc
xor
fs
hlt
test
loop
dec
jae
mov
iret
in
xchg
pop
ficompl
mov
pushf
sahf
call
scas
mov
rcrb
outsl
lret
ljmp
cmp
mov
adc
fwait
jo
and
xor
inc
test
add
push
inc
push
sub
and
sbb
push
pop
nop
sub
mov
stc
test
addr16
int3
out
dec
sub
stc
mov
std
hlt
xchg
scas
and
pop
pop
dec
or
fimuls
aad
fmul
repnz
lea
xor
mov
lret
mov
loope
dec
push
es
stos
js
lods
pop
pop
cmpsb
iret
mov
orl
je
jbe
mov
testb
out
aaa
push
xchg
ljmp
sbbl
or
xchg
pop
mov
mov
mov
add
cvttps2pi
pusha
ret
jo
out
sahf
sarb
sbbl
into
cmp
aaa
insl
lods
mov
cld
mov
bound
sub
rclb
sti
inc
lret
adc
int3
out
adc
outsb
fistl
out
lock
outsb
add
xchg
imul
dec
pop
fmul
sbb
cmpsl
cmp
sbb
push
mov
jecxz
pop
outsb
icebp
out
mov
std
fs
arpl
jno
adc
outsb
cli
out
and
sbb
test
outsb
pop
sbb
xchg
insb
jbe
xchg
inc
fstps
in
ja
orb
lcall
jnp
js
mov
jle
cmp
mov
sbbl
and
dec
lock
add
in
xchg
jae
rcr
add
mov
fisubrl
cli
pop
xchg
add
out
repnz
sub
inc
mov
out
mov
mov
mov
xchg
sub
inc
xchg
mov
leave
xor
push
cwtl
xchg
push
pushf
cmp
pop
jbe
add
mov
jmp
sbb
mov
mov
lods
cwtl
stos
or
mov
xchg
inc
scas
xchg
jns
add
sarb
xchg
insl
mov
or
xor
test
lods
dec
orl
jbe
sti
jne
lret
in
add
push
fimuls
xchg
ds
sub
xchg
sub
jp
roll
jb
ficoml
cmp
jg
xor
mov
inc
add
out
dec
call
mov
lods
and
test
orl
loope
cmp
outsl
cmp
pop
ud2
push
lock
ds
in
ret
addb
sbb
shrl
xor
or
lea
inc
idivl
bound
xchg
mov
mov
jo
lcall
rcl
stc
add
pop
xor
sbb
imul
mov
mov
mov
jns
xchg
dec
arpl
dec
js
cmpsl
and
test
push
xor
adc
xchg
shr
lahf
lret
js
jns
pop
daa
in
jns
jl
pop
xchg
xchg
mov
lock
ret
mov
ret
adc
xchg
ret
pop
int3
xchg
cs
lret
loope
in
outsl
cwtd
push
pop
xor
jecxz
loope
lret
repz
pop
cmpsl
lock
xlat
jg
testl
inc
lds
jno
cwtl
pop
dec
and
push
bound
jmp
loope
seto
add
jnp
inc
push
inc
inc
xor
cli
adcb
int
fcoms
nop
rcll
repnz
mov
cmc
jle
imul
ret
fs
pop
adc
out
inc
mov
lcall
jo
mov
andb
jbe
int3
xor
xchg
mov
sub
add
xor
inc
pop
cmp
pusha
insl
mov
cmp
jbe
sbb
push
mov
stc
xor
das
or
push
in
xchg
sub
jp
inc
and
outsl
and
repz
xchg
xor
adc
lcall
leave
mov
testl
adc
sbb
dec
loope
dec
sub
testb
adc
mov
xor
xchg
lock
sbb
lods
loop
arpl
lods
lret
pop
mov
in
add
and
sbb
xchg
add
stos
test
fidivrl
or
cmp
jmp
cli
and
jle
sub
ss
repnz
cmp
pop
dec
xchg
jle
imul
lahf
imul
fcoms
inc
mov
sbb
jp
divl
push
imul
loope
cld
fdivrl
adc
call
mov
adc
repnz
xor
inc
xchg
xchg
scas
add
loopne
lret
cmp
fwait
push
imul
sub
xor
fs
jbe
test
iret
daa
inc
and
in
inc
lods
in
xchg
repnz
mov
repnz
data16
jnp
rorb
rol
sub
sub
add
lahf
cmp
rorl
xchg
sti
mov
shl
cmp
insl
mov
test
jmp
adc
adcb
stos
jp
dec
incb
cwtl
popf
ret
hlt
xlat
mov
andl
dec
fs
sub
xlat
lcall
sbb
daa
es
dec
add
jp
outsl
dec
or
mov
clc
jg
js
pop
mov
fcom
in
stos
shr
iret
cmc
lods
shrl
lods
scas
sbb
andl
inc
movsl
adc
xchg
in
loope
repz
cld
iret
pop
scas
mov
int
jp
andb
lods
pop
lret
add
aaa
ds
dec
scas
in
inc
popa
das
pop
shl
jbe
sbb
mov
pop
hlt
mov
imul
notb
jo
ljmp
arpl
in
out
cmpsb
mov
sub
and
pop
repnz
or
push
or
sbb
or
push
pusha
incl
sbb
sti
mov
ss
mov
jmp
xchg
lcall
dec
dec
pop
push
test
push
push
push
adc
mov
testl
sbb
add
mov
push
rorb
fcompl
jb
int
int3
xrelease
sbb
cwtl
push
push
dec
add
push
push
mov
bound
mov
sbb
jecxz
push
xor
outsb
dec
push
jmp
mov
popa
insb
adc
scas
pop
fstpl
lock
insb
dec
pop
cli
pop
xor
jbe
push
lret
mov
xchg
sar
ret
sub
out
xor
mov
inc
sbb
or
inc
add
mov
rol
es
and
jo
pop
pusha
fdivrs
in
leave
pusha
icebp
xor
pop
or
dec
iret
lods
pop
xchg
and
fs
xchg
imul
cmpsl
xchg
mov
xchg
fidivl
mov
push
mov
dec
js
jno
cmc
mov
call
cmp
lea
xor
out
jo
into
fwait
mov
test
adc
les
mov
mov
popf
je
jnp
gs
test
sbb
mov
scas
test
fstl
push
xchg
pop
push
in
sub
cmp
ret
fwait
sbb
jmp
adc
aaa
into
into
push
mov
xor
mov
pop
ss
add
mov
shlb
push
addr16
test
pop
push
mov
lods
mov
adc
int
cltd
je
call
adc
or
inc
ja
movsb
pop
xchg
add
imul
push
xchg
std
mov
mov
pop
pushf
cld
daa
ret
xor
inc
mov
data16
sub
xlat
jle
bound
mov
cltd
lret
xchg
add
cmp
ds
outsb
inc
mov
inc
std
js
call
rolb
bound
loop
cmp
jmp
mov
jo
rolb
sub
fsts
adc
test
nop
fs
stc
and
pop
int
sarl
or
loope
jo
xchg
push
jb
xor
stos
mov
or
and
enter
and
pop
lret
ss
mov
movsl
xor
lret
push
mov
add
pop
repz
xchg
gs
enter
ss
inc
and
pop
sub
jno
mov
dec
jle
push
inc
in
rcl
stos
inc
pop
mov
stos
lods
xlat
and
cmp
push
lods
cmp
stos
xor
or
jno
cmp
cmp
mov
inc
or
data16
out
pop
mov
cmp
aad
inc
fstpt
mov
shrl
scas
stos
xor
sub
mov
pop
lea
xor
aaa
xor
insl
pop
dec
pop
adc
shll
sti
pop
orl
cld
inc
adc
adc
sub
notb
shlb
xor
cwtl
aad
nop
inc
fs
hlt
leave
sbb
es
out
mov
rcr
cltd
cmp
xlat
mov
mov
sarl
cmpsl
cmp
jg
sbb
leave
adc
std
out
shlb
jnp
repnz
jo
xor
push
insl
sahf
pop
dec
rcrb
lods
cs
fmul
dec
clc
cmc
fsubl
xor
decb
clc
iret
inc
out
fistps
push
add
les
pop
movsl
and
scas
xchg
gs
das
adc
jecxz
jns
andl
rcrl
mov
in
inc
push
cmp
cmp
movsl
jno
dec
sub
jno
or
icebp
mov
lds
leave
mov
sub
movsb
jnp
negl
and
mov
xor
xchg
push
push
push
mov
pop
sub
clc
es
dec
or
daa
adc
mov
mov
sub
mov
sub
stc
push
sbb
xlat
outsb
push
pop
mov
cltd
push
cli
decl
out
ss
mov
add
repz
mov
and
xchg
xchg
mov
xor
out
pushf
mov
in
mov
movq
divl
sub
and
dec
inc
mov
and
mov
inc
mov
test
add
lods
sub
add
jne
sarl
xchg
lahf
out
adc
add
ja
push
mov
mov
and
adc
mov
mov
xchg
nop
xor
bound
mov
dec
push
add
pop
push
sti
add
pop
mov
out
loop
fdivrl
push
lret
mov
cmp
push
lds
push
pop
inc
mov
xor
xchg
adc
cli
push
pop
insb
jb
cwtl
mov
adc
jp
andl
and
enter
popf
sbb
ss
add
sub
mov
pop
test
packsswb
clc
scas
jo
std
fwait
jg
out
addr16
mov
filds
jecxz
inc
cld
or
sub
or
cmp
xor
mov
add
mov
sbb
add
notrack
mov
das
std
orl
adc
cltd
pop
data16
popf
xchg
adc
dec
bound
inc
xor
push
or
testb
data16
pop
mov
cmp
inc
add
cltd
mov
icebp
and
pop
xchg
pop
mov
mov
and
mov
lret
js
rorb
mov
pusha
inc
jmp
pop
fabs
data16
ja
xchg
pop
sub
out
repnz
sub
enter
scas
sbb
lahf
jmp
inc
inc
or
jbe
xor
test
mov
mov
xchg
fs
insb
adc
cmp
mov
aas
inc
into
rorb
test
pop
adc
ds
xorb
xchg
sti
and
clc
hlt
cmp
repz
stos
pop
rcll
jno
mov
fidivl
in
or
and
cvtpi2ps
pop
mov
shll
add
and
sub
popa
or
test
call
xor
in
aam
add
dec
ret
sbb
sub
js
adc
pushl
negl
outsl
xchg
add
mov
imul
cwtl
adc
cmp
jecxz
cld
in
movsb
into
scas
leave
jmp
or
fst
inc
sti
loop
add
lret
int3
in
jbe
xorl
lds
inc
je
test
sbb
test
xor
add
hlt
fs
icebp
cltd
imul
sbb
sbb
gs
push
ja
and
fsts
cs
xchg
shl
xor
xchg
or
lret
inc
sbb
aaa
aas
enter
inc
lds
cmpsl
fcmovnbe
cmp
add
sub
test
adc
stos
pop
xchg
in
repnz
xchg
shll
add
stos
cli
dec
out
mov
iret
loop
xor
mov
xor
push
pop
jg,pt
cmp
pop
inc
xor
outsl
popa
sub
repnz
pop
or
mov
jb
push
or
mov
shlb
cmp
lcall
outsl
aas
pop
pop
mov
mov
out
daa
push
arpl
dec
jnp
jp
push
repnz
mov
add
jne
mov
jl
es
insl
sub
pcmpeqw
mov
cmp
aas
xchg
cmp
xchg
xchg
cmp
mov
push
dec
icebp
imul
cs
fs
stc
and
fistpl
dec
out
sub
imul
push
js
mov
outsl
dec
cmp
add
lock
lods
pop
cmpsb
inc
pop
ljmp
add
push
cmp
sti
inc
inc
cmp
cmpl
andl
fs
dec
das
inc
mov
movsl
adcl
xchg
mov
add
std
loopne
jmp
ds
jnp
jae
ret
jno
xchg
pop
ja
and
ss
add
sub
mov
das
add
bound
imull
divl
ret
es
or
jnp
xchg
in
dec
xor
iret
sbb
shr
jno
in
and
out
push
inc
jmp
cltd
mov
clc
xchg
into
fs
repnz
popf
sub
insb
mov
aas
push
fcomps
adc
test
fs
push
shlb
std
call
sbb
dec
inc
pop
pop
xor
mov
cmp
shll
sti
push
add
and
xchg
mov
ret
sbb
cli
xlat
inc
lock
cmp
repnz
pop
fsubrl
imul
ja
pop
sbb
mov
and
ja
jo
jo
jecxz
fisubs
jp
jge
push
jb
repnz
cs
mov
sub
xor
mov
push
cmp
jmp
cmpsb
sub
sub
movsl
push
push
inc
pop
aaa
dec
negl
subb
xor
push
add
repz
iret
pop
xchg
adc
in
dec
fistps
pushf
or
outsb
xchg
jnp
aam
mov
mov
xchg
cld
aas
adc
out
imul
jo
push
dec
dec
inc
stos
jmp
push
and
xor
xor
xchg
decl
jo
push
jl
adc
dec
jb
pop
jecxz
cmpsb
out
and
enter
inc
and
loope
mov
mov
lret
xchg
stc
cmp
adc
xor
in
insb
jae
sbb
lret
mov
jns
xchg
add
lahf
outsl
pop
sbb
cli
sbb
dec
xor
loopne
jp
mov
adc
ret
pop
das
cltd
pop
and
sti
cld
arpl
mov
gs
inc
mov
cmp
xor
pop
sub
push
xchg
imul
ret
inc
clc
inc
jge
mov
out
cld
jge
mov
cmp
cltd
movl
push
push
ds
jle
mov
pusha
jne
insl
xor
dec
out
pop
adcb
ret
in
mov
sbb
xor
push
mov
out
mov
sbb
je
cmp
call
xchg
pop
dec
xlat
or
arpl
sbb
add
scas
js
inc
out
dec
mov
sbb
dec
out
sbb
or
cmp
shll
addr16
pop
dec
jl
dec
mov
rep
add
sbb
or
or
mov
xor
imul
movsb
das
das
add
pop
out
mov
mov
mov
cmp
mov
int
jecxz
fdivs
jg
cwtl
push
jl
cmp
mov
push
hlt
pop
int3
add
add
ds
aas
jo
stos
or
xchg
out
js
outsb
cwtl
mov
or
dec
inc
shrb
mov
mov
xor
insb
xchg
add
ljmp
daa
sub
pusha
xchg
repz
movsl
xchg
repz
jb
cmp
sidtl
mov
icebp
cmp
xchg
ljmp
jae
out
push
jl
inc
fidivrl
xchg
into
sahf
push
es
jp
in
mov
and
adc
and
fldcw
mov
push
cs
pusha
aaa
xchg
lods
adc
mov
sbb
mov
inc
push
loope
fs
sbb
lock
loopne
aas
or
fsts
cmp
inc
pop
xlat
mov
xchg
lcall
mov
push
mov
nop
lds
mov
dec
sub
mov
insb
cmp
inc
push
pop
pop
data16
push
jle
stos
mov
cmp
mov
add
je
fnsave
mov
pop
jbe
or
and
inc
lea
fcoml
jne
dec
inc
repz
loopne
xchg
sbb
sub
jle
mov
dec
test
les
subb
pop
jo,pt
jnp
dec
xchg
cltd
shll
fidivl
mov
pusha
negl
bound
insb
addr16
push
mov
mov
ret
mov
mov
or
data16
xchg
mov
add
cmp
popa
xlat
push
lods
pop
aaa
lahf
fmuls
hlt
test
xor
xor
int3
jl
filds
mov
inc
jge
pop
jno
lcall
mov
push
pop
repz
push
push
stos
test
shll
ja
imulb
das
lahf
mov
ds
or
dec
xchg
inc
mov
test
and
pop
mov
lods
cmpps
vpaddb
xor
mov
leave
fsubp
inc
xchg
or
pop
test
aas
insb
std
leave
xor
pop
fdivrs
mov
mov
cmc
xchg
xorb
xchg
xchg
jne
popf
jp
sub
movsb
xorl
add
push
push
scas
and
inc
adc
inc
hlt
fsubs
stos
mov
stos
xchg
test
jl
outsl
or
fidivrs
dec
push
in
fidivrs
or
push
jmp
mov
jge
div
std
dec
jb,pn
inc
mov
dec
fidivrl
mov
arpl
mov
add
pop
bound
dec
repz
data16
adc
clc
cmpsl
and
sahf
int3
fwait
cltd
pop
bnd
lret
dec
jbe
insb
std
adc
cmpl
push
jge
movsb
cmp
in
imul
adc
movsb
xlat
inc
adc
cmp
fadd
das
js
push
cmp
popf
jp
loope
mov
pop
int
mov
pop
xchg
jle
pop
jnp
sub
int
jecxz
cmp
jno
fs
xor
push
inc
or
jg
scas
aas
mov
jnp
les
sbb
add
and
mov
push
inc
rcrb
stos
shr
mov
push
and
bound
mov
cmp
es
sub
add
dec
icebp
je
addr16
das
fiaddl
pop
inc
add
inc
popf
ja
cmp
mov
enter
nop
adc
sub
into
in
out
xor
pop
shrl
mov
pop
push
fsubrs
out
in
dec
ret
in
mov
popa
cwtl
test
pop
sbb
mov
jle
jp
jg
clc
lods
jnp
add
loopne
pop
fbld
and
daa
jns
lret
mov
mov
repz
xchg
out
push
ror
jnp
jl
sti
xor
jbe
pop
dec
push
sub
xlat
es
fisttpl
movsb
jo
jbe,pn
mov
mov
es
aam
adc
jp
loope
mov
ror
fldenv
addr16
xchg
mov
test
rorb
pop
push
lds
mov
pop
pop
mov
leave
dec
mov
loop
mov
jp
pop
adc
or
add
adc
dec
pop
jg
dec
pop
push
pop
push
push
lods
ds
and
loope
sbb
or
in
test
pop
out
pop
pop
pushf
mov
jecxz
ss
test
cmp
xor
jno
and
pop
xchg
cmc
pop
or
lock
insb
nop
sbb
xchg
pushl
cltd
sbb
daa
dec
or
push
ret
lds
adc
pop
scas
mov
ret
adc
repnz
pusha
and
dec
jmp
xor
popf
inc
cmp
sub
loope
faddl
adc
push
mov
mov
push
adc
dec
mov
cmp
je
std
jge
cmp
jbe
leave
ret
or
adc
and
and
jne
push
movsl
xor
jg
xor
call
sub
ljmp
outsb
ja
outsl
dec
mov
nop
mov
or
dec
mov
mov
andb
lahf
push
dec
aaa
bnd
jo
insl
push
jp
xor
or
mov
cli
pop
outsb
insb
cmpsb
clc
cltd
out
jnp
sbb
push
ja
pop
push
inc
cmp
call
gs
sub
mov
das
data16
lea
addr16
sub
sub
mov
icebp
arpl
cmp
daa
rclb
mov
xchg
inc
cmpsb
out
xlat
push
pop
inc
outsl
dec
les
cmp
pop
sahf
xchg
into
cmp
xor
mov
lods
or
and
jg
shlb
ret
and
xor
adc
fcmovb
lret
ss
pushf
mov
jmp
xchg
mov
add
sub
push
cmc
fmuls
mov
lret
ret
dec
aad
mov
cli
leave
mov
push
fs
fnstenv
mov
adc
mov
pop
testb
jae
dec
push
scas
insb
pop
sub
adc
xchg
rcll
movl
scas
mov
sahf
mov
mov
repz
mov
in
scas
mov
sti
mov
or
and
mov
push
lea
out
mov
mov
pop
mov
sbb
jnp
jle
in
pop
mov
pop
fldl
pop
fisttpll
adc
xchg
out
loopne
lahf
imul
ret
sbb
xlat
lret
data16
mov
push
inc
jmp
out
xchg
in
lock
inc
insl
shrl
mov
pop
jbe
cmp
mov
rcr
divl
xor
outsl
lcall
adc
insl
sub
dec
insb
xchg
adc
sub
xor
lea
push
lcall
popf
jmp
adc
shrb
sbb
jo
xchg
xor
mov
sbb
push
add
mov
push
ficomps
push
ret
or
lret
jnp
outsb
int
outsl
cmp
pop
adc
jnp
psubb
xor
jno
into
jle
fidivl
jo
fcmove
pop
mov
ss
and
sahf
jnp
aam
add
aas
xor
pushf
push
mov
imul
jne
cmpsb
imul
add
ds
lds
imulb
in
ss
pop
pusha
cmpsb
mov
out
mov
into
add
fbstp
adc
das
loopne
or
xchg
cmpsl
mov
push
jne
fdivs
es
fmul
pop
in
test
loopne
mov
aas
leave
mov
cmp
test
pop
sahf
arpl
add
loopne
subb
fwait
insl
stos
lods
sti
jp
add
or
mov
xchg
sub
sub
cmp
push
inc
int3
fistl
mov
inc
adc
mov
cmpl
and
push
or
popf
cmp
in
out
test
sbb
daa
sub
dec
inc
cwtl
mov
stos
js
lods
loopne
mov
push
call
lods
lods
xor
sbb
push
pextrw
sbb
sbb
push
push
inc
call
sub
push
popa
sbb
push
dec
jmp
in
fsubrs
mov
cltd
adc
out
push
mov
shl
cmpsl
adc
push
mov
cld
iret
or
push
das
aaa
adc
or
xchg
fcmovbe
popf
push
test
xchg
cli
aaa
jae
iret
cmpsb
cli
outsb
sarl
ja
xchg
adc
stos
sti
mov
adc
adc
incb
lret
ss
aaa
mov
sub
xlat
sub
ret
test
das
push
imul
cmp
jg
lret
mov
ds
dec
mov
pusha
dec
mov
dec
scas
js
hlt
or
addr16
mov
dec
mov
out
inc
ret
decb
mov
imul
loope,pn
xor
and
std
fs
sbb
rcl
test
sbb
push
jnp
shrb
pop
mov
in
sbb
test
ds
mov
or
mov
das
adc
sbb
ds
inc
jbe
xor
sarb
cmpsl
push
mov
xchg
mov
and
testl
nop
xchg
cwtl
aaa
inc
ds
cmp
jbe
dec
lods
ds
xor
std
jmp
pop
lahf
pop
stos
test
bound
jb
inc
int3
cmc
inc
cli
int3
cmpsl
dec
loop
test
dec
jo
and
pop
dec
mov
pop
mov
sti
lret
mov
mov
aaa
push
jmp
push
adc
mov
add
bound
mov
inc
cmc
test
jno
in
inc
mov
mov
add
push
into
ljmp
test
inc
xchg
jae
aam
mov
inc
sahf
outsb
out
cmp
sub
in
lods
fnstsw
jno
mov
test
aaa
std
jmp
outsb
pop
push
shrl
out
movsb
out
stos
imul
xchg
pop
or
shrl
inc
xorl
mov
cmc
adc
inc
and
adc
or
pop
pop
dec
inc
inc
fs
mov
js
xchg
xor
fxch
stos
xchg
daa
std
xor
xchg
dec
cli
push
mov
pop
inc
aam
xchg
mov
ja
cmc
loopne
aad
call
or
jae
inc
pop
push
cld
mov
ja
inc
xor
adc
xchg
jb
pop
aaa
sbb
jbe
mov
mov
jmp
or
sbb
aam
movsb
adc
dec
cli
pop
dec
ret
xor
jbe
lcall
mov
and
adc
icebp
sbbb
cli
dec
cmc
cmp
mov
cmp
pop
scas
out
pop
call
push
in
in
xorb
rcrl
fldenv
stos
mov
test
in
push
cmp
lret
mov
movsb
test
sub
cwtl
clc
pop
pop
dec
cmc
aas
in
sbb
cmpsl
leave
popa
inc
fadd
mov
daa
int3
orb
sbb
fimull
inc
push
pushf
out
imul
out
jp
loope
aas
xchg
imul
adcb
mov
int3
test
pop
jae
pushf
mov
lods
jbe
xchg
adc
lds
add
sbb
push
push
push
mov
adc
and
and
adc
inc
mov
xchg
dec
jnp
out
push
outsb
out
jbe
add
stc
push
shll
push
fcompl
loop
fwait
or
std
divl
cmc
imul
popf
out
and
sub
xor
dec
and
mov
xchg
xor
jp
pop
insb
in
xchg
ret
mov
sbb
jge
daa
fs
xchg
les
clc
je
jp
dec
js
mov
or
xchg
mov
cmp
jle
ss
jecxz
jne
sbb
mov
add
push
andl
inc
push
jb
out
cltd
incb
and
dec
push
insb
stc
mov
pcmpeqb
clc
jl
pop
fistpll
dec
lods
mov
hlt
push
cld
dec
jp
pop
fnstsw
or
cmp
cmpsl
pop
jnp
out
bsr
js
dec
sub
daa
clc
aam
out
jns
cmp
fldt
aam
xchg
cld
add
adc
push
into
ds
das
sahf
xchg
mov
aam
sbb
faddl
aam
adc
pop
xchg
add
ret
jbe
add
ret
jecxz
cmpsb
int
out
dec
scas
leave
loopne
inc
fnstenv
shll
jp
mov
push
int3
test
push
data16
push
test
push
test
in
hlt
mov
jg
adc
stos
xor
adc
ja
jne
test
jg
push
repnz
cmpl
dec
adc
pusha
dec
sbb
insb
loop
cmp
outsl
push
inc
fstp
in
lret
out
fstl
ret
gs
cmpsb
add
imul
outsb
aaa
rcr
jne
add
mov
stos
loopne
adc
mov
je
push
ja
xchg
push
insl
sbb
pop
adc
bound
push
cli
jmp
mov
leave
xorl
jge
inc
imul
cs
lahf
jecxz
push
fcoml
xchg
stos
xchg
scas
sub
adc
or
sub
push
pushl
pop
sbb
mov
mov
push
hlt
movsb
mov
jne
les
jno
mov
push
outsb
pop
sub
std
ret
mov
inc
jecxz
push
fistps
ds
xor
lods
test
xorl
mov
mov
jbe
mov
int3
lahf
xor
sbb
jae
xchg
bound
dec
pop
mov
mov
shl
mov
mov
mov
in
xorb
push
ljmp
push
fstpt
pop
inc
clc
add
lret
mov
testl
cli
rcr
stos
sub
push
repz
aam
push
cmp
add
push
dec
jmp
lcall
cmp
leave
notl
out
mov
sub
xlat
test
iret
in
fdivp
sti
sub
in
jecxz
fcomi
in
fisttpl
int3
xchg
jmp
push
cld
pop
mov
clc
push
testb
mov
movsb
aaa
test
jmp
mov
cwtl
xchg
std
ret
or
shl
pusha
mov
jg
and
lcall
and
jmp
mov
pop
push
lret
pop
mov
outsb
nop
adcl
call
xchg
or
mov
or
xchg
mov
jmp
mov
sbb
daa
mov
jg
and
leave
repz
hlt
fistpl
mov
out
cmp
mov
outsl
mov
data16
fnstenv
daa
shll
repnz
xor
mov
sbb
lcall
pop
push
leave
add
in
daa
ss
inc
mov
ficompl
dec
les
cs
jns
sbb
rol
cmp
push
mov
sub
enter
scas
mov
add
adc
std
fsubs
aad
fimuls
andb
xchg
rclb
push
sbb
lahf
ret
cs
pop
call
sbb
loopne
stos
add
adcb
pop
push
xor
inc
arpl
fiaddl
push
ss
in
out
sbb
and
sub
scas
mov
jge
adc
pop
or
je
push
add
jl
insl
fldl
cld
out
jnp
pop
rcrl
and
dec
sbb
mov
mov
outsb
pop
mov
or
inc
dec
out
mov
adcb
push
cs
ss
clc
movsl
test
dec
loope
adc
mov
test
mov
xchg
push
fwait
popa
rorb
inc
out
mov
lock
add
mov
lahf
add
sub
xchg
xchg
lods
stc
pushf
mov
out
sbb
out
or
and
mov
xor
or
ja
xchg
subl
sub
ret
push
dec
insl
dec
and
inc
push
push
es
mov
pop
mov
push
push
je
ljmp
lods
xchg
pop
add
mov
xor
cwtl
xchg
test
mov
test
loopne
jle
lea
or
daa
dec
xchg
addr16
nop
cmp
cltd
sbb
shll
fdivr
pusha
lds
fs
hlt
mov
pop
cld
inc
fadds
cmpsl
sti
mov
jae
pushf
nop
sub
out
lds
test
sarl
imull
nop
je
pop
clc
sub
jg
in
sbb
fs
add
mov
mov
out
jne
ret
rep
adc
cmp
stos
test
push
jl
xchg
and
rolb
push
cmpb
fcoms
popf
jb
in
mov
inc
scas
xchg
xchg
cmp
xor
dec
andb
insb
scas
and
mov
aam
movb
or
xor
jo
cmp
subb
add
jmp
mov
cmp
sub
mov
loope
dec
push
xchg
sti
into
pop
mov
dec
fdivl
pop
mov
std
xor
jmp
inc
sub
inc
test
mov
lret
sub
je
and
fwait
lahf
xchg
mov
aad
lock
mov
mov
mov
lock
icebp
cmpsl
dec
xor
add
xor
cmp
push
push
dec
and
rcll
imul
xor
add
inc
lods
dec
dec
int3
nop
insb
int
pop
mov
sbb
pop
test
pop
jns
ret
fs
sub
jb
push
mov
adc
popl
mov
xor
xchg
repnz
sub
and
cmpsl
mov
imul
pushf
jmp
mov
je
mov
cmp
sti
jnp
sti
adc
add
lret
das
or
repz
stc
and
pop
xor
pop
or
inc
add
pop
sbb
sbb
out
arpl
pop
fnstsw
mov
mov
xor
lahf
sub
mov
hlt
cmpsl
xor
and
popf
adc
push
mov
sub
rclb
and
pushf
push
loop
and
scas
jp
inc
or
add
leave
scas
dec
jb
mov
and
pusha
adc
cmpsb
scas
jne
adc
maskmovq
testl
aad
clc
hlt
les
enter
ret
pop
ja
nop
mov
ret
mov
and
mov
cmc
or
and
jmp
scas
mov
cld
or
xchg
popf
sub
xor
push
int
pop
negb
movsl
mov
stos
add
fsubrl
inc
and
es
inc
fistpl
add
movsb
scas
stos
sbb
cmp
sbb
nop
fidivs
mov
add
mov
insl
arpl
loop
push
xor
sbb
loop
sahf
xor
push
in
sub
push
arpl
cmpsl
jb
dec
pop
mov
sahf
icebp
ljmp
aam
or
push
jae
adc
ljmp
les
and
xchg
dec
hlt
scas
mov
push
mov
xchg
and
jmp
xchg
pop
loope
inc
adc
rol
sti
insl
xchg
int
mov
shlb
aam
fwait
out
subb
fistpll
std
inc
cld
sub
or
inc
cltd
loopne
int3
pop
and
or
subl
int
dec
sub
cwtl
add
xor
push
xchg
adc
cs
mov
outsl
leave
sub
push
adc
mov
ret
jb
lock
pusha
add
call
mov
cmpsl
sub
ret
sub
fidivl
ror
popa
fsts
dec
fstpt
into
call
lds
mov
sbbb
cmp
xchg
leave
pop
or
dec
and
mov
fs
adc
mov
inc
lods
jno
or
fiadds
lods
pushf
outsl
cwtl
imul
data16
cmp
push
dec
jmp
rclb
dec
addb
jo
lock
jl
inc
les
repz
outsb
add
sub
fcoms
shll
call
xor
adc
lds
icebp
and
sbb
jl
dec
es
stos
jg
das
mov
jnp
imul
push
push
std
orb
setg
sbb
push
push
inc
xor
xchg
or
add
or
and
std
add
mov
inc
pop
insl
sti
inc
imul
imul
int
add
repz
sar
scas
or
pop
and
inc
js
push
push
xchg
cmp
and
cmp
iret
ja
xchg
scas
hlt
rcll
loopne
jl
cmp
pop
jmp
mov
out
aas
int
mov
lcall
jne
lds
xlat
pop
add
and
cmp
mov
pop
test
pushf
jle
cmp
fpatan
inc
outsl
out
les
pop
dec
fstpt
jmp
nop
ss
lret
ret
movsb
pushf
js
into
mov
test
aam
fcmovnbe
sub
enter
or
lods
cmp
cmp
clc
std
mov
mov
sub
sbbl
das
clc
cld
out
cli
push
test
add
aas
fwait
sarb
or
shrl
aaa
ds
sahf
lahf
add
outsl
mov
rcrl
cmpsl
jge
stos
imul
mov
fidivs
into
test
dec
out
cmp
lods
call
popa
mov
add
add
mov
push
xchg
icebp
inc
stc
sbb
push
in
inc
sub
jg
roll
in
addb
testb
sbb
inc
jo
mov
fisubs
cmp
ret
pushf
adc
popa
mov
cmp
scas
ror
adc
in
adc
mov
cli
stc
pop
clc
mov
dec
shll
push
xchg
cwtl
mov
lea
xchg
stc
mov
fcomps
sti
cs
fwait
xor
fists
cmovp
lods
xor
dec
test
and
lahf
cs
mov
leave
int3
mov
cli
fdivrl
add
pop
lret
sahf
push
or
lea
movsb
imul
jle
data16
cmc
sub
stc
sub
adc
leave
mov
lods
enter
addr16
xor
cli
pop
icebp
xlat
mov
out
in
sub
and
std
mov
xchg
jmp
or
fadd
js
clc
mov
std
nop
push
jae
fdivs
hlt
cmp
jle
pop
mov
adc
dec
rorb
add
aam
mov
inc
push
popa
lret
ficoml
mov
cmp
lods
xchg
mov
sub
imul
nop
pop
cs
out
pop
dec
xor
pop
mov
sbb
fistpl
aas
pcmpeqw
movl
fidivrl
call
iret
das
mov
ficoml
rcrb
jae
in
ret
sbb
mov
push
lock
shll
xchg
or
pushf
cmp
movsb
add
push
adcb
or
in
mov
lahf
imul
sbb
or
mov
gs
add
pushf
bound
jg
cmp
jp
hlt
pop
arpl
sub
nop
cs
mov
aad
mov
mov
sbb
imul
inc
into
ljmp
inc
stc
push
mov
imul
cmp
notb
in
xor
inc
mov
push
pop
mov
ret
inc
fsubrl
push
sub
add
dec
fistpl
aam
adc
push
pusha
jne
jae
mov
cmp
sbb
lock
mov
dec
adc
sbb
je
inc
fcomps
push
mov
sbb
pop
pop
inc
popa
push
cmp
push
std
mov
pop
xchg
sbb
lahf
jno
sahf
clc
add
insb
fwait
mov
daa
xchg
mov
jle
ds
cwtl
icebp
popf
rcrl
mov
aam
push
mov
je
mov
daa
lcall
insl
push
mov
outsb
andb
ret
stos
inc
ret
xchg
pop
lods
sbb
pushf
repz
mov
scas
movsl
adc
adc
fiadds
ror
pop
sbb
dec
sub
negl
bound
xchg
cmp
push
sub
jecxz,pt
cmpsl
test
adc
aam
in
aam
pusha
mov
ror
dec
cltd
fisttpll
and
lods
es
push
aad
mov
mov
pusha
xor
arpl
jecxz
pop
ds
jnp
mov
or
ficomps
mov
pop
push
fadd
leave
fstpl
mov
push
or
cmc
xchg
pop
stc
push
xchg
stos
push
test
push
xor
adc
mov
adc
and
in
ja
subl
add
inc
out
mov
push
mov
fbstp
aam
pop
test
jne
or
inc
sub
jns
push
stos
cmp
cmpw
adc
xchg
rcrb
dec
sub
add
pop
dec
jle
cmp
out
call
add
js,pn
das
enter
mov
jmp
xchg
fidivrs
cmpsl
imul
aaa
jmp
rol
std
sbb
lret
mov
mov
ret
jbe
jo
adc
pop
je
aaa
inc
pop
mov
xchg
pop
xchg
int
ret
adc
mov
enter
lea
in
or
push
out
dec
mov
xor
imul
pop
inc
mov
adc
fisubrl
lcall
or
cmp
orb
pop
or
in
pop
jo
jnp
pop
dec
into
sahf
fnstcw
sbb
sub
out
in
sbb
sbb
add
in
jp
jl
mov
aas
push
adc
or
mov
lods
xor
rorl
inc
pop
cmp
daa
pop
adc
test
sub
dec
repz
jno
pushf
mov
dec
pop
mov
imul
stos
jo
lcall
stc
xchg
sbb
push
daa
mov
inc
or
mov
inc
ds
jns
sbb
mov
nop
or
cltd
std
dec
es
rcrb
clc
jmp
pop
movsb
sub
sbb
cmp
mov
xchg
mov
jno
movaps
andl
or
sub
fdivrl
push
arpl
xchg
adc
nop
aad
lret
push
jg
cmpl
insl
or
lock
mov
push
inc
jp
mov
stos
sub
sub
adc
add
in
and
sbb
mov
lahf
push
cmp
jmp
ja
sub
fsts
inc
push
jl
rolb
out
cltd
fnstcw
xchg
out
xlat
pop
je
clc
jg
jbe
jns
rclb
stos
jb
loope
aaa
push
sub
cmpb
pushf
sti
stos
aad
or
pop
aam
xchg
xchg
rolb
mov
adc
add
fstpl
cmp
pushf
push
xchg
cli
add
dec
mov
jns
and
ljmp
mov
and
mov
scas
mov
cmp
mov
jns,pt
cmp
and
adc
pop
jle
mov
lds
pop
mov
pushf
into
xchg
test
jne
dec
mov
loop
push
jo
xchg
inc
ljmp
outsb
int
sbb
jge
in
adc
rorl
and
adc
cmp
cmp
push
add
mov
inc
scas
mov
inc
or
dec
xchg
shl
and
andb
lods
push
jmp
xor
mov
sub
jno
sub
or
dec
iret
sarb
fists
jp
imul
inc
sub
scas
shll
add
in
repnz
and
fisubs
cmp
push
fldt
imul
fstl
bound
call
popf
or
int3
jno
into
xchg
mov
nop
fwait
stos
jmp
daa
shrb
inc
inc
aaa
jge
enter
pop
int3
xor
stos
or
and
pop
xchg
sbb
movsl
mov
into
loopne
jle
sub
out
ss
xchg
cli
in
cmp
jae
xlat
imul
leave
int
cmp
sbb
mov
xchg
xor
inc
cmp
sbbb
or
or
out
je
xchg
mov
icebp
loopne
and
test
sub
mov
sub
pop
mov
jmp
add
inc
leave
xchg
into
push
xchg
dec
adc
inc
lods
out
repz
cmpl
cmpb
inc
inc
mov
mov
mov
push
xor
enter
push
dec
xchg
ja
xor
or
pushf
das
inc
push
fisubl
or
arpl
push
sti
loope
sub
add
xchg
movsl
jle
aas
adc
push
adc
adc
ss
icebp
cmpsb
jns
xchg
int3
out
push
lcall
and
pop
xchg
and
pop
sarb
pop
testl
push
xchg
xor
cmp
mov
jo
inc
daa
out
dec
xchg
fsubl
icebp
push
mov
loop
jno
mov
sar
test
daa
sbb
mov
inc
mov
push
inc
in
xlat
les
or
addr16
xor
insl
cmc
pop
mov
xchg
jae
push
movsb
mov
lret
mov
in
out
sub
push
movl
cmp
xchg
out
cltd
inc
pop
insb
mov
sbb
inc
add
jmp
dec
clc
lcall
adc
shr
push
jg
push
or
cltd
inc
cs
cmp
test
test
je
push
push
pop
jo
adc
dec
in
xchg
mov
push
and
frstor
sbb
adcl
loop
mov
roll
in
es
lret
enter
xchg
lahf
ljmp
scas
jb
or
jle
mov
jp
jg
ljmp
test
adc
pusha
mov
mov
adc
movsl
ficompl
insb
push
pop
data16
dec
in
rcl
mov
jge
xor
sahf
daa
sahf
lods
dec
les
enter
xor
xor
push
ss
push
jl
fwait
jmp
adc
sarl
int
and
jbe
fdivp
mov
push
mov
jbe
sub
mov
call
cmp
mulb
out
mov
adc
mov
jnp
rcrb
mov
lea
popl
out
mov
cmpsb
ja
cmp
xor
dec
rcr
int3
mov
cmp
lcall
jno
insb
cld
sub
faddp
cmp
movb
pop
fiaddl
xor
movsl
cmpsb
jg
loope
cmp
push
inc
and
cwtl
mov
test
mov
mov
lea
arpl
or
lcall
pop
xchg
mov
and
int3
push
xchg
sbb
sbb
stos
icebp
lods
pop
stc
xor
dec
or
push
cmpsb
cwtl
ja
xor
sbb
jmp
sti
mov
ss
mov
cmp
nop
sub
fs
mov
cltd
nop
nop
pop
iret
cmc
mov
fdivl
lock
inc
mov
jb
stos
cmp
and
add
aas
mov
xor
dec
ss
sub
xchg
orb
enter
out
xchg
or
mov
outsl
fidivl
jo
scas
in
inc
sbb
outsb
mov
push
cmp
repz
jp
lods
xor
add
roll
jb
push
sbb
xor
mov
push
adc
ja
xchg
push
lret
nop
xchg
pop
into
add
popa
jns
push
ja
xor
xchg
push
cli
out
xor
jp
movsl
or
lret
aam
inc
fprem1
or
mov
cld
xor
pop
movsb
ficompl
xor
daa
pusha
jnp
aam
outsl
popf
adc
mov
add
push
in
lock
and
mov
xor
lret
outsl
pop
add
das
rcl
xor
or
cmpsl
sub
je
cmp
sbb
mov
sbb
dec
xlat
and
adc
inc
cmp
cmpsl
sbb
pop
sub
lretw
cmpsl
jmp
ja
and
es
lods
mov
jecxz
out
and
pushf
sbb
fstpl
dec
lahf
imul
jl
div
sub
pusha
ja
mov
push
sbb
or
mov
cs
leave
or
test
fwait
mov
jo
xor
or
mov
dec
out
sarb
cmp
mov
adc
repz
aas
jns
mov
aad
rol
mov
pop
pop
lret
pop
xor
pusha
sbb
inc
sub
jg
inc
xchg
xor
std
pop
push
xorl
add
sub
lcall
inc
push
scas
es
rcll
test
and
mov
aas
mov
lahf
ret
jb
shrb
pop
push
cmpsb
out
movsb
dec
fmul
lret
lcall
bound
jle
lret
adc
pop
xchg
jo
pop
out
mov
insb
dec
dec
dec
and
jb
movsb
incl
adc
xchg
stos
ja
fisubrs
cmp
or
aam
add
rol
cmp
mov
cs
out
ret
paddw
addr16
jp
push
cwtl
lds
pop
adc
push
mov
pop
sub
xchg
dec
sbb
sub
cmp
in
xchg
push
mov
addr16
jmp
push
jl
adc
psrlw
in
cli
sbb
jns
jns
fnstcw
mov
test
aaa
add
lahf
push
sub
sbbl
xor
add
int3
mov
cmpsb
movsb
push
push
sbb
add
lahf
xchg
pop
ret
adc
mov
xchg
push
je
mov
add
inc
cmp
push
popl
cmp
pop
fcomip
push
test
jle
test
cmp
mov
xchg
push
adc
lcall
push
pop
sarb
mov
add
mov
or
xlat
pusha
mov
mov
test
push
aad
fcompl
sub
pop
cltd
pushf
mov
xchg
or
dec
dec
add
inc
and
nop
call
arpl
outsl
iret
push
fs
and
scas
sbb
push
jecxz
ljmp
pop
into
pop
push
mov
mov
mov
lds
jmp
movsb
xchg
rcl
mov
test
pop
jl
jl
add
in
lods
hlt
insb
jne
ds
dec
aam
lahf
sub
push
fnsetpm(287
mov
push
aas
xchg
jle
adc
rolb
inc
cli
sar
xorb
movsl
out
xchg
int
ds
mov
and
iret
stc
out
jg
xor
clc
negb
mov
push
or
insb
scas
xchg
call
sub
mov
push
sub
and
mov
push
adc
jp
test
jl
bound
pushl
jno
adc
fisttpl
mov
mov
xor
test
cmp
dec
addr16
clc
loop
decb
outsl
sub
pop
imul
fistpll
push
cmp
ret
fildll
data16
add
bound
fs
repz
js
adc
lock
push
mov
test
cmpsl
sbb
xchg
mov
daa
fmull
add
imul
cmp
pop
leave
lahf
add
in
mov
mov
arpl
test
call
aam
inc
sbb
mov
mov
stos
out
data16
hlt
lcall
jb
ss
pusha
divb
ds
mull
hlt
xchg
clc
ljmp
sub
jp
popf
push
and
js
int
adcl
mov
mov
push
xchg
inc
jmp
pop
xchg
xchg
mov
aaa
xor
sbb
jg
sbb
inc
movsl
pop
vmaxsd
fucomp
fcoml
mov
mov
out
arpl
lds
lret
cmp
cltd
mov
sub
jno
mov
jg
insb
add
xor
call
jbe
xor
cli
mov
and
int3
orl
and
push
mov
pop
nop
sub
addr16
imul
xorl
out
pmulhuw
das
movsb
push
fcmovb
and
push
pop
xchg
add
sbb
xor
popf
lods
frstors
and
xor
adcb
xor
mov
ljmp
cmp
xchg
or
enter
fwait
mov
loopne
and
stc
sti
dec
add
mov
push
ds
sbb
and
adc
in
les
mov
insl
mov
xor
adc
popf
jge
pushf
clc
shl
adc
pop
enter
mov
lret
es
in
test
test
push
pop
inc
test
dec
mov
in
inc
dec
lods
fcompl
lods
ds
jle
push
nop
stc
scas
push
mov
nop
call
fdivr
test
daa
and
and
and
xor
pop
dec
rclb
je
fsubrs
add
sbb
pop
xchg
mov
gs
iret
jmp
push
and
xchg
stos
lahf
test
sbb
loop
stos
notl
idivb
xor
xor
fstp
inc
iret
cli
lret
mov
mov
jb
mov
and
das
lea
cmpsb
jp
lret
cmpsl
mov
jecxz
adc
mov
mov
cltd
cld
cwtl
and
jae
mov
pop
hlt
fucom
into
sbb
jg
jge
insl
lret
and
adc
pop
mov
xchg
jno
adc
mov
loopne
das
cld
xor
xor
xor
push
mov
mov
mov
inc
out
jae
xor
fwait
mov
sbb
cmpsb
push
or
jns
enter
dec
and
int
and
cwtl
fimuls
popa
adc
sbb
pushf
sub
adcb
inc
rcrl
fldenv
push
idivl
mov
or
cmp
pop
and
xor
or
sub
jge
mulb
cmpb
add
or
scas
adc
sbb
subb
push
or
xchg
roll
hlt
dec
add
test
call
mov
stc
cwtl
dec
imul
jg
invd
cmp
filds
cwtl
jecxz
mov
jb
push
mov
stos
repz
stos
sbb
push
dec
dec
stos
adc
xor
mov
ljmp
call
jmp
push
cld
icebp
sub
lcall
ja
fnstenv
mov
outsb
mov
mov
mov
pop
dec
jmp
cmc
push
in
js
dec
cwtl
jne
and
jl
movsb
or
jb
outsb
leave
push
cltd
cmp
iret
dec
add
je
pop
xor
fcmovbe
lods
xchg
sbb
inc
dec
mov
andb
scas
push
or
ret
cmc
lods
push
stos
xor
cmp
js
test
notl
outsb
and
jae
lahf
cmp
dec
lea
jbe
pshufw
xor
mov
jnp
ljmp
pop
xor
xor
dec
vunpckhps
imul
pop
jge
and
movsb
dec
cs
test
add
inc
imul
mov
dec
pusha
push
pop
xor
or
adc
loop
inc
sbb
stos
push
sbb
fistl
and
mov
push
fistps
out
shll
es
add
fists
lds
lret
push
add
sti
sbbb
xchg
sbbb
cmpsb
aam
test
push
stc
mov
mov
in
push
mov
and
leave
incl
ja
lret
lcall
or
dec
aam
cwtl
shlb
cmp
xor
mov
or
inc
mov
mov
mov
jg
cmc
and
dec
push
sbb
lock
test
jg
into
xor
pusha
cwtl
pusha
cld
inc
mov
and
add
xchg
xchg
mov
jnp
jno
cmpl
xor
into
ret
inc
fucom
and
inc
mov
push
jns
fcmovb
ret
cwtl
jp
add
loope
push
andl
inc
push
loop
pop
in
repz
enter
jo
into
in
xchg
mov
push
mov
aam
mov
sahf
xor
cli
rcll
adc
lret
mov
in
add
cli
sub
das
jb
pop
xor
push
adc
push
mov
jg
sbb
jp
inc
inc
cmp
scas
xor
sbb
mulb
stc
mov
inc
sbb
sbb
out
or
pushl
mov
jge
mov
cmp
scas
add
sub
sbb
add
lods
inc
xchg
xchg
stos
cmpsb
aas
add
nop
insb
mov
sub
xchg
cmpxchg
push
inc
mov
xchg
test
lret
sahf
inc
das
fists
das
aaa
adc
mov
gs
push
pop
and
rolb
ret
ret
mov
mov
and
ss
sub
adc
sub
add
dec
scas
sbb
adc
popa
or
mov
mov
cli
data16
mov
push
cmp
adc
mov
push
cmp
xor
aas
or
xchg
lcallw
cli
cmp
scas
dec
cmp
push
add
les
lcall
pop
pop
loope
sti
aad
jo
in
subb
mov
inc
sbb
imul
js
mov
int3
mov
fists
inc
xor
pop
invd
xor
jnp
sahf
test
fdivrs
xchg
push
jp,pt
mov
cli
mov
sbb
push
inc
inc
dec
xchg
imul
test
mov
int3
xchg
out
sub
add
mov
sbb
js
dec
or
xor
cmp
clc
jb
push
mov
dec
add
inc
enter
movsb
xor
jp
push
out
ss
out
xlat
and
dec
mov
dec
dec
mov
push
fcomps
out
movsl
push
cmc
mov
mov
fiaddl
cli
jecxz
push
xor
add
aas
push
mov
push
popa
sub
orb
jnp
les
out
test
mov
mov
cmpsl
add
jmp
and
sbb
nop
cltd
repnz
sub
and
sub
cltd
cmc
mulb
hlt
jle
cmc
les
xor
push
shlb
sub
pop
into
push
les
mov
call
bound
push
xor
in
pop
jb
out
jbe
int3
icebp
leave
xchg
movsl
push
std
xlat
pop
mov
rcr
mov
pop
adc
stos
iret
and
cld
xor
push
cs
xchg
sub
movsl
arpl
imulb
and
pop
in
fwait
mov
xor
sbb
int3
test
xor
adcl
stos
or
icebp
xorb
adc
data16
adc
jo
sbb
xor
or
clc
jns
ret
fs
pushf
shlb
js
cli
int
cmpsb
hlt
push
ss
add
push
hlt
fsubr
cmp
shlb
fwait
fadd
lods
cli
jp
outsb
mov
cs
mov
jp
xor
loope
es
dec
pop
mov
leave
stos
jmp
add
xor
dec
repnz
lea
dec
or
ja
or
aas
imul
jg
enter
mov
imul
jmp
mov
das
repnz
faddp
push
mov
mov
scas
ss
daa
push
push
mov
and
mov
prefetchwt1
adc
mov
repnz
mov
ret
popa
and
iret
sahf
ret
loopne
aam
sbb
arpl
popf
adc
data16
and
enter
inc
and
lods
push
mov
mov
push
sbb
jbe
mov
xchg
aam
scas
xchg
idivl
mov
hlt
pusha
adc
inc
xorl
loopne
cmp
test
mov
mov
test
addb
inc
ss
mov
sub
leave
ret
inc
and
push
push
rolb
lods
mov
rcll
add
mov
jbe
mov
int
xchg
pusha
mov
inc
fadds
mov
shrl
push
lock
and
sbb
fcompl
rorb
sbb
cld
adc
lcall
jle
sbb
jecxz
icebp
dec
or
out
add
in
add
cmc
inc
shlb
cwtl
xor
sbb
cmpsl
pop
cmp
pop
xor
cld
fstpl
xor
push
les
ss
out
imul
clc
jg
mov
mov
and
in
leave
fadds
jg
fistl
jae,pt
fstpt
divb
lds
clc
iret
paddd
inc
jnp
push
xchg
movsl
mov
mov
stos
xchg
fs
push
mov
cltd
aas
ljmp
int
addr16
jge
sub
xchg
inc
mov
jecxz
movsl
or
add
in
mov
xlat
sub
lret
push
or
mov
push
idivb
and
call
sahf
inc
sbb
bound
jnp
mov
jne
stc
pop
ret
mov
sbb
loop
nop
in
js
ja
add
add
out
cmp
aaa
pop
mov
popf
or
shrb
test
sbb
and
repz
hlt
movsl
pop
push
cmc
movsb
add
xor
sarl
ret
sub
or
pop
in
cmp
sbb
and
xor
daa
pop
mov
leave
adcb
adc
enter
pop
jo
adc
movsl
jecxz
jl
loope
inc
cld
test
mov
scas
xor
inc
push
add
sub
outsb
mov
rolb
lods
aam
int3
jg
lret
mov
addr16
push
in
inc
dec
inc
adc
mov
inc
jno
mov
sub
adc
xchg
outsl
daa
mov
cmpsl
xchg
pop
jl
stos
fwait
and
xlat
sbb
pop
sbb
pop
outsl
movsb
push
fnstenv
mov
push
es
std
out
adc
jge
sbb
sbbb
cld
pop
xor
lods
test
enter
test
sbbb
inc
add
xchg
xor
inc
testb
and
push
mov
push
imul
dec
lods
push
sub
mov
ret
lahf
push
stos
das
scas
les
xor
mov
mov
mov
lods
push
lahf
jp
push
outsl
mov
mov
mov
int3
inc
mov
xchg
out
and
sub
pop
xchg
sahf
xor
not
xchg
cwtl
inc
pushf
stos
stc
cs
call
xchg
and
dec
mov
shrb
std
inc
inc
cmp
aaa
call
sub
test
shll
fistpll
pop
cmc
fs
lea
adc
and
mov
popa
leave
mov
mov
int
dec
inc
loopne
jmp
sub
pop
sub
fnsave
dec
es
and
adcb
lret
es
dec
sbb
inc
and
outsb
sbb
push
mov
lahf
rcll
imul
push
ss
popa
inc
daa
lods
push
inc
inc
pop
repnz
cmp
sub
xor
xor
mov
and
dec
ss
xchg
adc
fcmove
xor
call
jb
pusha
loope
movsb
and
xchg
sahf
shll
push
ret
rol
sub
sarb
pop
loop
pop
stos
pop
jb
xor
xor
pop
movsl
stos
mov
repnz
cmp
pop
aaa
lcall
insl
int
int
pop
adc
lods
scas
ja
imulb
leave
mov
jnp
lret
jbe
sub
mov
scas
nop
nop
push
ljmp
js
movsl
sbb
icebp
xor
sbb
sub
ror
jmp
shrl
or
fistpll
orl
jmp
lock
aas
inc
push
cltd
ret
in
pushf
push
lcall
dec
or
inc
xchg
movsl
mov
out
jnp
pop
mov
mov
push
dec
mov
into
jecxz
add
lods
jne
lahf
enter
stos
fucomp
dec
flds
sub
sbb
sub
aaa
jmp
cmp
mov
ret
addr16
out
mov
adc
adc
je
sbb
or
xlat
inc
jmp
dec
mov
out
lods
sbb
cmp
push
fwait
xchg
pusha
imul
repz
cmc
add
gs
ret
sbb
fistpll
orl
mov
sbb
push
push
push
push
into
push
jb
bound
iret
sbb
or
inc
movsb
xchg
mov
adc
mov
sbb
cld
fimull
xchg
clc
cmc
fldl
hlt
adc
mov
es
addr16
shrb
dec
push
insl
or
inc
xchg
mov
mov
mov
or
mov
add
inc
sub
scas
in
pushf
dec
cmp
or
jnp
sub
jno
shrb
sbb
bound
outsb
push
mov
pop
sub
cmp
adc
pop
inc
or
mov
rcrl
call
and
xchg
sub
pushf
push
adc
in
or
lock
movsb
xchg
xchg
sub
ljmp
dec
pop
daa
repnz
add
or
cmpsl
mov
loopne
fisttpll
cmp
xor
xchg
sbb
lock
add
jecxz
push
sbb
rorl
scas
mov
mov
sbb
mov
xchg
xchg
lods
push
sbb
sub
jl
dec
dec
std
jbe
mov
in
aaa
jns
test
xor
jno
inc
daa
inc
mov
clc
je
xor
ret
xor
push
and
loop
cld
or
daa
dec
push
xchg
ljmp
ret
dec
fucomi
jne
push
jl
fldt
cmpsb
pop
mov
adc
int
mov
fstpl
add
in
stos
mov
push
inc
call
push
cmp
xor
add
insl
pop
cmp
mov
or
jecxz
lods
adc
sbb
sti
and
in
clc
popa
mov
fwait
xchg
leave
inc
pushf
jmp
mov
out
push
jo
aad
sbb
sub
dec
push
in
in
jmp
mov
sub
repz
dec
cmp
adc
test
sub
or
dec
cwtl
mov
data16
je
loope
ret
lret
sub
out
xchg
insl
xor
insl
pop
xor
lock
mov
fstpt
inc
aam
cmpb
sti
cmpl
inc
mov
sub
int
xor
pusha
lcall
iret
pop
mov
xchg
repnz
stos
cmpsb
mov
pop
es
lds
addl
lods
sahf
loope
xchg
outsl
and
lret
jnp
add
adcb
stos
jge
push
testl
rcr
icebp
les
enter
gs
scas
insb
sub
outsb
out
mov
pop
xlat
xchg
insb
mov
popf
xchg
adc
scas
test
mov
push
push
and
pop
jg
pop
jne
loop
cmp
mov
clc
movsb
ljmp
sbb
stos
enter
dec
add
mov
pop
xchg
dec
jb
or
and
jg
pushl
mov
outsb
adc
loopne
inc
test
mov
and
js
notl
shlb
mov
push
je
push
fdivl
cwtl
jmp
push
mov
loopne
in
imul
fmull
adc
fstpt
sub
je
fwait
inc
inc
stc
lahf
lret
xchg
sub
cmp
add
mov
or
dec
push
xlat
mov
push
push
dec
sbb
pop
mov
mov
jp
pop
inc
sbb
xchg
addr16
mov
test
cmp
inc
pop
aad
loope
ror
xchg
insl
icebp
fidivrl
fsts
xchg
loopne
ret
cmc
shl
pusha
dec
and
test
rorl
pop
or
xchg
sahf
sub
pop
mov
cmp
stos
cmp
add
xor
aad
loope
and
leave
xchg
shll
pop
cmp
idivb
ret
and
iret
add
std
fsubs
mov
cmp
hlt
jo
adc
std
jae
and
adc
loopne
loopne
decb
fadds
out
data16
int3
mov
adc
mov
icebp
jnp
sub
push
add
dec
cltd
cli
jne
or
rorl
xchg
mov
fbstp
pop
out
orl
mov
sub
cmp
movsl
daa
xor
or
add
in
stos
push
or
mov
mov
pushf
movsb
test
jns
xchg
add
lahf
bound
jae
out
stc
lret
imul
repnz
idivl
clc
or
jne
hlt
adc
mov
insl
mov
mov
pop
mov
movsb
stos
inc
jp
popa
pop
fdivrs
dec
pop
repnz
push
and
mov
outsl
in
cs
into
je
fcmovb
push
cmp
ds
mov
adc
aam
and
cmp
pop
sbb
cmc
xchg
push
jae
pop
cmp
or
push
adc
push
adc
stos
mov
outsl
lret
rsm
outsb
push
daa
rcl
ja
fstps
outsb
daa
and
cli
mov
inc
out
out
push
sub
cld
mov
lock
xlat
cmp
call
mov
adc
fnstcw
nop
std
sub
push
dec
ja
out
pop
leave
xchg
ret
arpl
out
aam
wrmsr
push
std
leave
push
int
cmp
aaa
std
es
ja
or
mov
ja
jg
pop
movsl
xchg
rol
std
cmp
outsl
mov
dec
lcall
jecxz
mov
repnz
xorb
adc
cmp
sbb
popf
pop
and
movsl
mov
loopne
dec
stos
mull
inc
or
je
fucom
je
mov
pop
les
out
or
test
in
stc
inc
insb
lahf
pop
fldcw
mov
in
cld
adcl
ss
nop
cmp
or
es
sti
mov
adc
test
ret
and
mov
sbb
addr16
pop
and
sti
pop
and
pusha
or
pop
push
mov
into
push
shr
dec
jns
push
jmp
ljmp
jo
adc
scas
mov
loopne
dec
lds
add
dec
sub
fisubl
push
or
insl
fdiv
std
icebp
cmpsl
push
pop
mov
shlb
sbb
mov
push
pop
pop
push
xor
imul
cli
pop
ret
push
aam
pop
mov
out
mov
xorl
xor
push
cli
push
lock
iret
adc
outsl
icebp
add
arpl
sub
mov
sbb
out
ja
imul
jl
push
pop
and
cmp
in
sbb
xchg
outsb
ret
mov
insb
repz
loopne
inc
jp
sbbl
cwtl
cli
jp
ret
fisttpll
add
loop
stos
xchg
push
or
repnz
jnp
ljmp
aas
aam
mov
jb
aad
dec
jbe
aam
test
rol
jae
cmc
rcrb
out
mov
out
push
mov
sbb
inc
xor
adc
or
popf
jno
js
sbb
pop
std
lret
fs
imul
into
push
mov
imul
test
jl
adc
lcall
sbb
jg
repnz
stos
shr
adc
into
adc
shrl
mov
iret
add
dec
xlat
loope
or
xchg
insl
or
ja
mov
mov
mov
out
sub
jge
xchg
repz
mov
mov
imul
xor
mov
imul
aas
sbb
or
les
push
push
mov
fimuls
sbb
inc
and
in
and
sbb
and
jg
mov
dec
jle
push
inc
mov
lds
jnp
add
mov
icebp
jmp
fisubs
insb
sbb
test
mov
gs
inc
inc
lock
mov
push
fisubl
mov
mov
jns
popa
icebp
js
xor
or
cmp
add
int3
stc
lahf
bound
idivl
out
jp
xorl
bound
dec
mov
jp
fildl
fists
incl
mov
add
mov
imull
fdivr
jo
xchg
and
cmp
sub
fimull
fbld
mov
outsb
outsb
rclb
jb
mov
mov
aaa
test
or
clc
add
push
jg
pusha
xchg
shll
test
enter
mov
outsb
mov
stc
xchg
jmp
inc
test
cld
test
cld
push
js
pushf
out
lods
mov
cmc
xlat
cmp
pushf
out
sbb
and
xor
dec
mull
inc
decl
xor
dec
aaa
or
push
shlb
mov
mov
push
leave
test
in
test
xorb
mov
pop
frstor
std
lea
xor
sub
rcr
xchg
cmp
push
push
lahf
pop
popa
jae
adc
lret
xchg
hlt
cmp
shl
data16
stos
ss
cld
mov
testl
iret
pop
stos
out
inc
jne
je
hlt
add
sbb
enter
loopne
movsb
jne
push
and
jno
lret
push
jno
mov
sbb
dec
pusha
sub
cltd
jp
xchg
inc
bound
rol
mov
or
clc
push
push
xchg
popf
or
adc
in
push
cmc
out
lcall
js
aam
adc
outsb
or
mov
mov
sbb
pop
lock
bound
test
ss
adc
sub
dec
stc
mov
and
fcoml
or
inc
mov
addr16
xor
lahf
mov
and
pop
cwtl
push
sbb
cmp
cmpsl
or
enter
jecxz
scas
jns
aam
pop
test
idivl
movsb
dec
popa
xor
fildll
inc
lret
aam
or
push
inc
xor
jb
adc
andl
sbbb
in
inc
xchg
mov
loop
std
push
rcrl
mov
push
pusha
subb
stc
dec
data16
inc
xchg
mov
ds
dec
out
test
rcr
fwait
xchg
sahf
xchg
and
pop
nop
int3
aad
fcmovb
pop
lods
pusha
cs
xor
and
cmpsb
arpl
dec
lods
adc
out
shl
sub
sub
xchg
push
int
xchg
in
scas
mov
mov
inc
loop
fcomip
aad
jle
loope
mov
pop
cmp
iret
xchg
outsl
push
xchg
rcrb
push
adc
js
cli
mov
cltd
push
and
js
mov
adc
aas
and
mov
in
mov
leave
pop
lahf
push
in
popf
loope
xchg
scas
aad
mov
adc
mov
in
xchg
mov
mov
scas
divl
subl
mov
cli
push
mov
fwait
in
adcl
xchg
enter
test
mov
pop
adc
inc
movsb
cmp
stos
test
fldcw
xor
pushl
and
ror
data16
out
dec
mov
lods
mov
cmp
adc
dec
xor
cmp
xor
mov
push
jns
inc
pop
icebp
pop
stc
sub
dec
lds
insl
inc
xor
movntq
mov
mulb
fwait
pop
cld
cmp
imul
loop
cmp
outsb
lds
xor
cmc
jle
in
mov
lods
mov
sub
ss
and
mov
sub
lds
in
cmpsl
rorl
xor
adc
push
sub
movl
test
xchg
mov
mov
and
push
mov
cmc
mov
mov
xchg
stc
test
and
push
pop
lret
jl
push
and
xchg
inc
inc
jb
inc
push
notb
lahf
ret
jb
cli
aam
xor
cltd
push
lds
mov
xor
filds
xchg
add
cmc
lea
or
in
push
call
mov
mov
std
fsubrl
adc
stos
movsb
daa
cmpsb
fimuls
add
ror
inc
mov
je
sbb
adc
sub
inc
insb
or
push
mov
cmp
mov
sbb
or
inc
push
shlb
adc
cmpsb
mov
imul
sub
xchg
call
aaa
ljmp
shll
push
jge
lret
mov
movsb
fcomps
and
mov
xor
fldt
cwtl
or
inc
dec
mov
int
sub
rcrb
lds
and
mov
cmp
push
lock
add
push
adc
clc
mov
pushf
xchg
xchg
paddq
or
dec
adc
push
pop
js
into
xchg
sbb
and
sub
xchg
daa
jp
fbstp
push
pop
std
js
movsb
push
repnz
ret
sub
sti
mov
push
sbb
ja
mov
or
fisttpll
inc
ljmp
sti
push
arpl
mov
or
dec
jecxz
mov
cmp
insl
arpl
mov
aas
jmp
or
inc
push
orb
and
cmpb
ja
sarb
cld
daa
cltd
shl
xchg
ffree
dec
push
mov
or
and
add
arpl
add
fldenv
fstps
push
adc
lret
nop
or
cwtl
xchg
adc
jno
mov
loop
sbb
aaa
cmc
xor
lret
adc
clc
dec
sub
cli
cwtl
push
je
and
mov
xor
cmp
lock
js
cltd
adc
out
or
test
dec
mov
sbbb
push
adc
repnz
dec
shll
jne
aam
cmpl
addr16
fiadds
pop
loope
xor
pusha
or
and
lahf
test
or
xor
and
jbe
mov
icebp
repz
pop
mov
in
push
add
cmp
lea
sbb
out
test
je
or
loopne
or
rolb
sub
or
and
mov
outsb
push
dec
xor
jnp
xlat
addr16
jns
subl
xor
pop
push
cmp
lcall
int3
mov
pop
mov
cmpsb
popa
and
push
in
test
addr16
mov
mov
xchg
inc
repz
stos
adc
lods
cmp
ja
and
cmp
mov
ret
push
call
adc
rcrb
nop
adc
mov
dec
lea
add
mov
push
mov
mov
test
jg
mov
imulb
mov
dec
ljmp
push
and
int
sub
ds
test
sbb
push
cmp
add
faddl
std
mov
aas
fwait
movsb
cmp
mov
adc
scas
dec
adc
fsubr
sbb
sti
aam
in
es
sub
arpl
add
cmpsl
lds
lret
dec
testb
stos
inc
and
pop
xchg
add
mov
stos
out
lds
mov
imulb
push
inc
push
mov
aam
jb
push
mov
cmp
xor
out
divb
sub
aam
pop
testb
xchg
xor
fldt
int3
cmpl
adc
and
popf
xor
jno
push
cltd
pop
stc
iret
nop
mov
or
sbb
push
or
ds
lea
gs
pop
mov
sbb
inc
cmp
outsl
rol
lods
sti
in
pop
les
push
cmp
cmp
dec
cmpsb
inc
xor
fists
dec
cmp
imul
mov
pop
jecxz
add
jle
jle
xchg
fstpt
rcr
dec
and
jne
adc
mov
and
loop
out
gs
int
in
xor
rep
jge
mov
fs
iret
mov
mov
fidivrl
mov
sbb
adc
jecxz
fnstenv
xorb
add
mov
adc
inc
loop
push
cmp
jns
mov
insl
cmp
pop
shll
mov
xchg
inc
es
addr16
in
and
es
leave
lock
xor
mov
mov
pop
mov
xchg
jl
add
fs
cli
pushf
call
add
jno
add
das
leave
mov
mov
push
jne
dec
mov
xchg
adc
jb
add
cmc
sbb
int3
in
ss
fucom
sbb
sbb
lcall
andb
aad
loop
sar
mov
popf
mov
fs
or
in
enter
fadd
xor
xor
std
dec
cmpl
xlat
mov
imul
and
dec
add
fcomi
lods
adc
das
sti
jmp
sbb
inc
add
dec
popa
pause
icebp
fwait
mov
adc
jmp
mov
add
inc
pushf
add
cmp
aam
pop
push
adc
xor
add
inc
movb
push
aaa
call
ror
mov
push
sub
jl
outsb
testb
mov
mov
test
jnp
adc
dec
cmp
mov
mov
mov
shlb
xlat
js
mov
add
push
arpl
mov
mov
mov
add
adc
mull
dec
aam
xchg
or
or
cld
js
cs
stos
stos
or
cld
xor
adc
in
dec
and
cmpsb
scas
lods
or
fnstcw
daa
inc
mov
leave
mov
dec
add
iret
cmp
js
add
sahf
mov
xchg
adc
enter
leave
cmpb
mov
enter
mov
add
subl
mov
rcll
mov
jb
pop
cmp
int3
test
hlt
cmc
jns
cli
dec
mov
rorb
in
and
dec
cmp
cmp
or
rcrl
out
or
mov
mov
movsb
jns
lret
ret
mov
mov
sti
test
pop
dec
leave
rcrb
inc
adc
jecxz
inc
inc
call
and
pop
dec
sbb
mov
fistpll
repnz
or
rcrl
out
mov
jmp
add
movsl
mov
out
inc
pop
push
fsts
aad
add
push
pop
mov
pop
iret
mov
adc
nop
cmpsl
stc
stos
inc
aaa
push
xor
xor
js
imul
lds
je
push
enter
aas
or
pop
adc
ficoms
inc
fistpll
icebp
sbb
js
mov
add
jp
mov
lahf
sbb
push
add
cmp
pushf
mov
and
or
cmp
xor
mov
icebp
clc
fsubr
testb
pop
je
cmp
je
or
cli
test
in
popa
dec
pop
push
or
pushf
cmpsb
sbb
pop
ds
push
mov
jb
imul
push
xor
add
jg
loopne
mov
fdivrs
dec
or
push
mov
add
icebp
or
dec
xchg
pop
inc
aam
andl
movb
and
das
icebp
das
fildl
daa
aaa
cs
mov
fwait
xchg
mov
jb
sub
enter
mov
cmp
mov
popa
into
aas
add
cwtl
jae
push
out
jae
sbb
inc
in
cmp
adc
leave
cmp
jmp
cs
lods
push
mov
test
in
nopl
in
fildll
mov
sbb
test
sahf
sub
dec
push
mov
ljmp
push
adc
push
mov
pusha
fld
insb
addr16
pop
out
cwtl
cmpb
shl
mov
inc
loop
push
insb
mov
or
adc
in
sub
stos
mov
push
mov
cmc
inc
rcrl
jae
dec
mov
sbb
xchg
and
outsb
cmp
add
and
or
push
mov
xchg
push
cmp
sbb
inc
clc
mov
or
push
int3
iret
test
jno
or
lcall
xor
addl
xchg
adc
fdivrs
pushf
xor
loop
pop
xor
mov
add
fstps
loop
movsb
stos
mov
out
sbb
xor
je
jle
sbb
lret
mov
mov
mov
and
lcallw
mov
jae
jp
pop
xchg
and
sbb
leave
fwait
loop
out
cmc
push
push
loope
fldcw
jle
sub
ds
push
cltd
jge
pop
mov
loop
inc
leave
outsl
loope
testb
inc
scas
push
inc
fimuls
je
fildll
idivl
repz
insl
mov
call
rclb
mov
addr16
cmp
dec
pushf
inc
inc
lods
lret
cmp
and
popa
push
dec
and
sbb
pusha
xor
mov
sub
hlt
jmp
lret
push
sub
test
enter
sbb
mov
xor
insl
adc
jb
mov
jg
fcomip
dec
add
std
jae
repz
je
fists
xor
lret
call
ss
lahf
mov
adc
scas
cmc
ror
sbb
dec
mov
lahf
test
mov
fmull
sub
push
jg
aaa
insl
mov
xchg
jnp
mov
jb
sbb
and
sbb
mov
je
xor
mov
daa
fwait
cmp
jp
push
mov
pop
sti
lds
addb
sub
push
sub
lret
and
bound
scas
push
jb,pt
mov
mov
and
lahf
or
xchg
mov
inc
ret
rcrb
adc
xchg
xor
leave
div
bound
xlat
push
push
sbb
xor
sbb
jne
sbb
pop
fs
aad
icebp
divl
push
mov
sbb
je
into
sub
lea
in
fcmovb
in
xorl
repz
mov
lcall
push
imul
nop
or
and
lods
and
imul
adc
jnp
fidivrl
repnz
arpl
cmp
aas
jo
shll
stos
pop
jno
mov
push
pop
fstpl
sti
cmp
adc
jns
sbb
lods
add
jno
clc
lds
mov
addr16
out
xlat
or
sbb
aas
push
cmovbe
mov
in
outsl
sti
sti
lahf
mov
sub
iret
pop
sbb
or
lcall
fs
pop
dec
test
into
pop
icebp
and
inc
js
es
pop
out
rorl
push
stos
mov
mov
add
pop
lods
out
add
sub
cld
loopne
dec
lcall
sbb
dec
mov
pop
dec
aas
outsb
in
loopne
out
movsl
mov
call
rolb
inc
add
fwait
mov
ret
test
dec
jp
fstps
mov
popl
push
ja
ret
pop
add
imul
push
mov
std
cmc
add
jmp
sub
mov
imul
test
aam
add
cmc
ds
dec
inc
fs
adc
ljmp
mov
jmp
mov
mov
and
xchg
scas
aad
cs
lret
adc
add
rorl
push
mov
adc
sbb
loope
and
lcall
icebp
xchg
lds
or
mov
lea
imul
cld
jmp
jae
data16
orl
xchg
pop
push
mov
lock
insb
int3
push
fstpt
add
adc
fs
gs
nop
ret
aaa
scas
mov
hlt
mov
loop
cmpsl
sub
movsb
sbb
jle
mov
inc
fwait
lods
inc
gs
data16
lea
jne
jp
inc
loope
mov
sub
or
ljmp
inc
arpl
shlb
adc
movsb
mov
sub
shrl
insb
popa
lods
xor
fcom
int
incl
xchg
xchg
jge
sub
hlt
xchg
mov
shrl
cli
test
mov
adc
push
test
cmpsl
cmp
mov
in
incl
xchg
mov
cmp
jle
daa
in
jns
inc
cmp
pop
xchg
and
push
test
lods
loopne
pop
out
mov
mov
jae
or
xchg
push
lcall
add
aas
mov
lahf
cs
cmp
ret
push
movsb
adc
or
sahf
jge
std
sub
mov
sbb
pop
inc
xchg
dec
lahf
and
fadds
call
test
mov
jno
lahf
mov
sub
mov
xor
mov
cmp
aaa
mov
jle
aam
shl
cmp
lods
jb
sub
xor
stos
fisubl
aad
inc
and
pop
shlb
pop
in
dec
pop
add
dec
pusha
xor
adc
mov
repz
scas
xor
insb
mov
jg
loop
jne
add
mov
cmc
inc
in
div
inc
push
fbld
clc
dec
sbbl
imul
pop
xchg
jb
pop
lods
fisubs
pusha
cld
sar
cltd
iret
or
dec
xor
cmpsl
sbb
in
mov
inc
push
push
mov
sub
std
rolb
inc
cld
int
int3
adc
mov
fwait
lret
les
into
mov
cmp
fcmovnbe
fsqrt
fisubs
inc
add
cmp
shll
ljmp
push
inc
sti
bound
das
adc
cld
pop
inc
sbb
cwtl
ja
daa
jns
int3
cmp
mov
sub
xchg
inc
ss
and
ja
out
mov
mov
repz
jle
sub
out
cmp
std
pusha
add
and
push
lods
jae
dec
and
lahf
add
pop
add
jle
add
lods
filds
adc
fisubs
cli
inc
mov
push
xor
add
inc
mov
movsl
inc
mov
into
sbb
out
mov
stos
rclw
dec
pop
hlt
xchg
mov
dec
or
mov
xor
sarb
add
hlt
lret
or
enter
sbb
pop
scas
cli
js
push
movsb
add
xor
add
xchg
mov
aaa
mov
out
jmp
dec
scas
dec
std
sti
into
addl
fistl
hlt
pushf
xchg
iret
into
ljmp
mov
ja
jecxz
leave
cltd
loop
popa
sahf
sbb
dec
mov
icebp
inc
loop
jnp
push
loopne
push
ret
out
mov
fisubrs
in
adc
sbb
mov
js
sub
ret
or
or
and
push
imul
jge
lods
into
incb
xchg
xor
ja
mov
filds
xor
fistl
and
and
shll
decl
jno
push
ja
sub
mov
cmp
dec
mov
ds
fwait
sub
cli
fdivs
bound
stos
adc
push
cmc
into
xlat
les
sub
cmpb
in
cmp
mov
jp
neg
mov
inc
nop
fs
sub
xchg
in
sub
add
scas
lcall
or
push
out
xor
inc
stos
mov
push
inc
cmp
jbe
add
iret
push
out
icebp
test
mov
push
push
sbb
xor
sbb
imul
jp
decb
and
pop
mov
push
pop
ss
mov
scas
adc
adc
popl
ficompl
scas
and
imul
add
stc
ljmp
sarb
xor
sub
jbe
mov
mov
insb
roll
adcl
daa
and
mov
out
jns
mov
add
mov
push
shlb
jns
inc
fcoms
jl
aam
jnp
aas
cli
sub
sbb
jne
in
inc
leave
ret
in
mov
movsl
loop
ljmp
push
jmp
pop
push
nop
mov
lret
sub
and
adc
insl
xchg
cmp
and
loop
jecxz
mov
mov
shlb
push
xor
jmp
in
sub
fimull
or
stos
cmpsb
jg
xor
outsb
ss
sti
mov
ss
mov
push
fisttpl
jp
add
fs
dec
push
inc
sarb
mov
mov
mov
iret
je
adc
mov
xor
add
add
sbb
mov
je
mov
xlat
inc
out
mov
pop
inc
es
xchg
adc
test
cmp
scas
cmp
call
repnz
repz
add
test
xorl
into
in
or
ret
in
or
leave
cmp
jbe
push
pop
jno
or
in
pop
data16
pop
inc
loope
lret
add
jecxz
sarl
xor
mov
mov
mov
mov
mov
in
sbb
and
int3
in
fmul
into
adc
or
push
or
jmp
les
add
or
pop
xchg
mov
rcll
shrb
and
mov
pop
mov
or
ret
in
outsb
mov
js
cmpsb
movd
das
leave
xor
mov
dec
idiv
and
jae
fstps
arpl
mov
pusha
xor
and
repz
sbb
jmp
dec
and
lods
lea
ljmp
push
ljmp
cmp
test
dec
pop
stos
pop
cli
call
jmp
sbb
inc
cmp
pop
cmp
clc
addr16
cltd
inc
leave
xor
mov
rcll
push
cltd
mov
daa
shrl
push
int
and
cmp
jle
arpl
sub
mov
lcall
int
sub
inc
subb
les
inc
ja
pop
add
lods
and
es
cmovp
aas
xor
pop
cmp
call
test
cmpsb
out
daa
cmp
sub
cmpsb
or
push
loope
mov
jg
or
inc
mov
cmp
lahf
dec
pushf
mov
in
cli
loopne
psubb
mov
filds
mov
cmpsb
mov
ds
fnsave
inc
mov
aam
js
jecxz
hlt
cmpsb
scas
mov
mov
mov
xlat
or
sbb
hlt
aas
cwtl
xchg
je
dec
mov
pop
aaa
pop
je
out
out
test
xchg
and
cmc
into
jnp
push
add
mov
icebp
cld
mov
cli
pop
jbe
int
or
pop
movsl
push
xor
cwtl
orb
xchg
mov
inc
adc
push
lcall
sbb
outsb
in
ja
in
mov
in
and
pop
sarl
pop
in
scas
and
aaa
jp
cmc
aas
jnp
aaa
mov
lea
notl
repz
push
push
mov
push
repnz
xor
rcll
imul
orb
data16
cltd
dec
call
jae
push
rclb
stos
push
dec
outsb
scas
das
jmp
aaa
aad
xchg
jle
lcall
pop
nop
adc
lea
es
sub
scas
sbb
lock
repz
xchg
out
dec
pusha
insb
jl
and
clc
pusha
jo
mov
ja
push
imul
out
pusha
movb
addr16
push
pop
popa
pop
dec
mov
xor
scas
stos
loope
cmp
dec
cmp
int3
jmp
sub
sar
aam
push
lret
movsb
aaa
fwait
push
lcall
push
inc
sbb
jbe
or
lcall
or
mov
add
test
ja
adc
scas
push
mov
pop
out
scas
in
sahf
inc
sbb
push
daa
and
bound
inc
jecxz
pop
fwait
test
scas
arpl
pop
pop
pop
notb
inc
pop
je
xchg
ret
inc
mov
jg
out
mov
mov
pop
xchg
repnz
push
ret
dec
lock
rcrl
and
inc
scas
mov
adc
adc
xor
xor
xor
inc
lock
cmpsb
and
push
ret
in
xchg
repnz
in
fcoml
or
mov
xchg
in
imul
outsl
les
push
mov
je
scas
inc
mov
xor
mov
nop
or
outsl
clc
test
outsb
push
sub
push
insl
mov
ficomps
push
into
xor
rcll
aad
mov
mov
and
pop
xor
aam
loope
das
mov
je
or
mov
sar
call
pop
lahf
pusha
push
scas
mov
ja
leave
cmc
outsl
mov
and
mov
xor
scas
xchg
dec
mov
shl
xorl
mov
in
xlat
xor
insl
lods
fwait
adc
add
xchg
mov
push
insb
jp
nop
arpl
mov
push
sub
faddl
push
cmc
cmp
cli
shrl
cmp
mov
xor
fadds
into
push
xchg
jnp
int
in
out
fisubl
adc
push
inc
jbe
js
les
or
add
lret
jbe
daa
andl
ret
pop
add
and
hlt
jl
xor
jbe
sbb
dec
xor
jp
out
mov
sub
xor
jb
scas
xchg
sbb
nop
roll
inc
mov
push
in
pop
pop
shrl
jecxz
and
xchg
je
lcall
mov
mov
inc
ret
mov
mov
adc
push
das
notb
cltd
mov
jno
sub
or
mov
jg
in
sub
pop
or
call
popf
push
lods
adc
call
push
pop
mov
inc
cs
xchg
pop
mov
adc
sbb
shrb
inc
push
dec
sbb
jle
repz
xchg
and
xchg
mov
outsb
iret
imul
sahf
cmp
fisubrl
rorb
inc
xor
enter
nop
and
gs
push
xchg
push
or
mov
dec
xchg
arpl
aad
jb
les
mov
pushf
cmpsb
mov
dec
stc
imull
xchg
mov
rclb
xchg
loopne
movsb
sbb
scas
cmp
ljmp
xchg
mov
pop
aas
mov
test
and
cmp
repz
push
jp
lcall
jmp
sbb
xchg
or
sub
add
out
mull
into
test
lahf
inc
out
aam
cmp
pop
push
dec
or
cmp
sbb
loope
or
xchg
adc
and
int3
inc
xchg
sub
lret
iret
cltd
cltd
mov
cmp
jno
sbb
push
lcall
push
sbb
pop
pop
jmp
xchg
rcrl
xor
lcall
in
addr16
enter
xchg
or
idivb
repnz
pop
pop
movl
ja
mov
pop
pusha
xchg
pop
mov
fsubrl
ljmp
lods
sub
mov
mov
inc
xor
test
int3
pusha
mov
rcrb
inc
out
xor
shrl
std
in
shrb
ret
int
push
sbb
mov
mov
rolb
xchg
imul
insb
jge
lods
add
jb
in
stos
jae
push
roll
shl
mov
hlt
movsl
rolb
fld
cld
lcall
lods
das
and
popa
add
adc
jbe
sbbb
in
or
mov
sbb
sbb
mov
and
movsl
js
pop
mov
jo
and
imul
add
test
outsl
cli
lea
push
fcomps
outsl
sub
xchg
lea
jne
add
neg
push
sbb
sti
add
test
xchg
sahf
outsl
clc
inc
jmp
mov
mov
mov
orb
push
xor
movsb
cli
lods
pop
mov
cmp
ss
imul
sti
cltd
shlb
or
push
sarl
insl
test
pushf
inc
popa
and
inc
pushf
cs
push
out
ss
cmp
mov
out
int
mov
push
sbb
mov
push
add
ja
pop
cs
shrl
cltd
adc
xor
es
mov
push
xchg
stc
addb
shrb
aam
loop
rorb
insb
pop
cwtl
loopne
sbbl
mov
mov
addb
inc
outsb
mov
cmp
jecxz
rorb
and
cmp
ffree
enter
outsb
je
shll
pop
xor
shrb
sbb
pop
mov
and
es
cs
ret
rolb
jno
xchg
int
cmp
loop
lahf
cmp
insl
scas
dec
add
sub
fstpl
xchg
fcmovne
lcall
mov
adc
pop
dec
js
arpl
in
pop
mov
fnstcw
pusha
lods
pushf
mov
cltd
jbe
mov
fistl
pop
push
pop
test
jae
push
xor
xchg
cmp
mov
in
xchg
shl
mov
sbb
shlb
jo
bound
sub
lahf
and
ljmp
jle
inc
mov
dec
jnp
shlb
add
test
sti
ret
jnp
sub
cld
jbe
inc
cltd
add
pop
mov
aaa
jns
leave
popa
sub
out
push
add
mov
xor
jmp
xlat
mov
adc
mov
aam
dec
jmp
sbb
cmc
pop
add
ds
and
pop
cmp
test
mov
push
sub
loopne
leave
adc
and
mov
aam
rclb
adc
clc
std
mov
jp
or
xchg
cmpsl
lods
lea
fdiv
fdivrl
js
je
mov
pusha
popa
ja
dec
enter
inc
js
jb
mov
shlb
pop
adc
sub
and
adc
insl
fwait
cmpsb
mov
push
stos
jno
mov
xor
dec
popa
push
mov
in
push
mov
pop
bound
divl
jnp
and
xor
sahf
mov
cs
jl
out
dec
sub
lcall
sub
out
jmp
and
jo
ret
mov
sbb
mov
fistpll
insb
das
je
ret
sbb
xor
pop
xor
mov
jg
fisttpl
mov
sbb
ret
mov
iret
pop
orb
int3
mov
jmp
imul
sub
andl
arpl
enter
testb
in
subb
sbb
add
or
xchg
adc
jle
lods
test
int3
repnz
cld
adc
mov
inc
ror
mov
pop
inc
rcrl
adcb
mov
pop
rcll
sbb
mov
push
or
aad
mov
or
sub
xor
jl
loopne
sub
mov
mov
pop
pextrw
pop
pop
ficoml
adc
out
push
test
cmpsb
inc
xor
jae
popf
out
js
outsb
sub
loopne
imul
fstp
addr16
mov
sbb
arpl
fisubrs
mov
outsb
mov
popa
or
mov
lret
popl
pop
in
or
mulb
shr
rcl
jno
dec
dec
jne
push
pop
mov
sub
lods
sete
or
int
pop
inc
mov
jl
add
lcall
xchg
jbe
mov
xchg
hlt
fnstcw
ljmp
ljmp
loopne
push
out
xor
fcmovne
add
xor
add
rcrb
mov
mov
push
and
jb
clc
repz
xor
loop
incb
cmp
adc
jbe
sub
adcl
test
mov
sti
mov
mov
add
out
mov
jecxz
mov
in
inc
lcall
add
add
ret
push
popa
mov
or
ret
loop
push
popa
enter
jne
pop
sahf
jge
xlat
inc
daa
add
out
pop
inc
outsl
xchg
lret
cmp
ljmp
stos
xchg
jmp
or
mov
mov
ds
mov
push
mov
add
pop
inc
dec
fistpll
mov
lods
mov
gs
dec
sbb
mov
lahf
mov
or
pop
std
das
dec
adc
inc
cmpsb
lret
mov
test
inc
aaa
pop
fidivl
cmpsb
in
jae
pop
xor
nop
push
inc
insl
and
aam
xor
inc
lret
rcll
mov
xchg
mov
mov
adc
fnstenv
sti
outsb
adc
inc
js
inc
js
out
lcall
jns
fwait
cwtl
les
mov
mov
cs
pop
jp
mov
adc
out
inc
scas
or
imul
jne
loope
dec
int3
push
mov
inc
dec
dec
cmpsl
ret
iret
loope
dec
movsb
hlt
xor
lcall
and
lods
inc
sbb
and
inc
sbb
lds
add
xchg
flds
inc
in
jns
ss
cmp
pop
add
or
push
push
mov
in
and
inc
lret
les
jne
push
repnz
out
rcll
inc
pop
mov
mov
xor
xchg
jb
rcr
dec
mov
je
out
cmp
add
mov
bound
fucompp
aam
pop
cmp
mov
stos
xor
lcall
pop
std
mov
xorb
sub
js
mov
ret
dec
imul
cs
sbb
ljmp
lods
sbb
xchg
xor
lret
jns
jbe
push
pushf
insb
movsb
in
pop
xchg
sbb
in
movsb
or
xor
xchg
fldenv
dec
stos
out
andb
mov
insl
dec
mov
cmpsl
lret
sbb
add
and
xchg
cmp
and
sbbl
xor
pop
jmp
jo
call
lods
data16
shrl
or
pop
sub
stos
ljmp
push
or
leave
adc
addl
push
sbb
aas
stc
xchg
fmull
pushf
cltd
jbe
xor
xlat
xchg
jl
and
jo
je
xchg
loope
inc
fnsave
pop
daa
pop
movsl
and
int
cld
sbb
push
mov
cli
mov
rep
aam
test
cmp
fiaddl
in
add
popa
sbb
test
mov
lods
in
inc
mov
and
add
in
jb
lahf
repnz
sub
mov
push
mov
sbb
pop
sub
sub
dec
lret
adc
lret
js
adc
data16
sub
aaa
out
rclb
lds
hlt
stos
pop
mov
dec
inc
jbe
aas
movsb
hlt
aad
cmp
inc
or
pushf
leave
imul
sub
push
popa
out
std
insl
loope
push
js
lds
icebp
jmp
mov
xor
add
addl
std
loop
push
push
jmp
iret
push
and
sbb
or
ret
add
adc
pop
shll
lret
scas
mov
mov
sub
lock
in
test
ret
in
mov
shl
cmc
incl
ret
ret
sbb
mov
outsl
jle
jecxz
lret
adc
xchg
mov
lods
jno
xor
ds
xor
cmp
push
pop
sub
adc
xor
xchg
lret
mov
in
xor
shll
stos
sub
cltd
out
mov
xchg
lcall
jg
xchg
mov
std
xchg
adc
dec
mov
gs
popa
clc
adc
mov
add
fucom
sbb
adc
out
jb
dec
aaa
adc
rorb
pop
mov
xlat
jns
ds
nop
fwait
cmp
mov
shl
and
sbb
adc
push
mov
mov
in
xchg
push
bound
repnz
mov
pushf
repz
in
sbbl
push
mov
mov
movsl
mov
into
fsubs
xchg
mov
and
mov
mov
sbbb
jo
lock
add
dec
outsb
idivb
out
push
repz
std
add
pop
adc
out
popf
inc
jecxz
ret
das
ret
jns
lea
lds
mov
popl
inc
ds
dec
sbb
leave
fs
sti
lcall
pop
movsb
mov
sbb
push
xor
test
xchg
pop
nop
repz
pop
stos
sbb
mov
fildl
mov
data16
jle
jmp
push
dec
jl
and
xor
jg
sahf
lock
adc
push
xorl
sub
push
mov
shrb
dec
sub
add
js
sub
dec
popf
int
pop
ficoml
mov
push
ret
cmpsw
pop
testb
mov
ljmp
jle
xor
mov
push
add
mov
popf
xchg
loop
mov
sbb
nop
mov
enter
fwait
adc
xor
xchg
dec
in
jmp
dec
xchg
out
or
test
dec
cmp
xlat
push
rcll
data16
and
push
mov
lds
jecxz
dec
or
adc
je
in
psrlq
out
out
aas
inc
movsl
inc
test
xchg
push
push
cmp
idivw
jp
icebp
dec
sbb
push
gs
adc
add
sub
aad
outsl
pop
xchg
loop
cli
movsl
sub
das
in
add
or
mov
mov
pusha
repz
or
add
fcomp
mov
push
push
pop
xor
paddw
fwait
push
popa
dec
cmp
shll
mov
mov
cmp
cli
movsb
test
push
add
xor
dec
push
jp
xor
je
subl
pop
or
inc
loopne
les
addr16
dec
in
jne
sahf
jmp
and
and
testb
in
mov
dec
mov
mov
dec
xchg
cltd
std
push
mov
adc
xor
jmp
les
pop
adcl
in
mov
stos
test
popf
and
imul
sahf
xor
xchg
lret
add
iret
pop
dec
out
xor
in
cli
push
fsubrl
xor
bound
scas
lret
in
mov
test
gs
fistps
popa
ljmp
cld
pop
mov
dec
daa
inc
scas
push
rcll
sbb
int3
push
insb
mov
arpl
jle
pop
and
add
in
or
push
cmp
mov
loopne
or
sahf
inc
mov
jg
xchg
shlb
mov
movsb
out
lods
pop
nop
pop
fldt
repnz
mov
jl
mov
mov
outsl
xchg
and
outsl
testl
hlt
stos
mov
aas
ja
insb
aam
xlat
jb
ficoms
mov
inc
subl
xchg
lods
loopne
fiaddl
cmpsb
xchg
aas
inc
int3
leave
add
xchg
add
xor
or
inc
sub
inc
call
sbb
mov
adc
inc
cmp
daa
bound
fbstp
aam
xchg
add
adc
lcall
in
lretw
sahf
repz
rolb
mov
pop
and
imul
lea
dec
jne
add
pushf
pop
fsubp
xchg
mov
pop
shlb
inc
jb
lods
in
jmp
or
sub
call
loop
xor
rcrl
in
xchg
aas
dec
pop
aam
push
sahf
lods
rcll
xchg
xchg
fcoml
xor
mov
mov
out
icebp
push
cltd
dec
mov
jb
jae
push
movsb
mov
adcb
test
mov
int3
mov
sbb
dec
fwait
mov
dec
cmp
mov
cmp
pusha
push
push
pause
dec
sub
in
outsb
mov
inc
and
jmp
xor
lea
scas
ret
ds
repnz
jl
push
dec
inc
and
pushf
notl
sbb
mov
jno
ja
pushf
lret
dec
int3
dec
inc
bound
pop
adc
loope
add
pop
daa
mov
ret
mov
push
notb
mov
ss
aam
movsl
out
sub
test
imulb
in
outsb
lods
dec
insb
test
inc
sbb
push
dec
andb
scas
jl
enter
insl
sahf
mov
fs
iret
loopne
ljmp
add
or
pop
dec
jae
cmpsl
pop
rcrl
dec
fdivl
mov
sahf
xchg
repz
add
stos
stos
gs
pop
mov
mov
out
stos
sbb
cs
or
mov
jns
cmp
into
pop
out
test
jae
push
inc
mov
push
xor
loopne
mov
inc
cmp
jb
push
enter
mov
push
jne
cli
or
push
hlt
mov
imul
xchg
movsl
scas
lods
cltd
pop
pushf
dec
mov
les
sarl
lods
scas
outsl
lret
gs
push
pop
div
ror
bound
fxch
adc
push
lcall
or
pop
pop
iret
outsl
push
movsl
imul
popf
arpl
mov
shll
fincstp
mov
pop
push
repz
sbb
dec
lds
movsb
add
out
adc
add
or
sbb
int
fdiv
aad
add
fwait
and
mov
push
mov
clc
cmp
pop
fdivs
mov
gs
xor
int
sub
icebp
stos
lret
pop
mov
lahf
push
inc
loopne
mov
sbb
into
out
lods
mov
xchg
jae
mov
insb
xlat
sti
icebp
not
or
sbb
aas
jmp
in
fimuls
dec
shlb
dec
push
fisttps
ss
bound
out
xor
bound
push
loope
test
dec
pop
mov
fwait
iret
mov
rcrb
rcrb
addr16
les
movl
insb
adc
jns
xor
in
inc
push
in
ja
xchg
dec
jne
call
mov
in
fnstsw
mull
add
cltd
sbb
cmpsb
cmp
push
xor
sarl
aam
sub
fisttpl
pusha
clc
ljmp
movsb
push
test
ds
movsl
js
je
inc
mov
cs
jo
dec
shll
enter
xorb
andb
das
popa
fs
push
jecxz
dec
aam
cmp
cmpsb
repnz
sub
int3
jp
clc
insl
in
mov
lods
std
jae
imulb
dec
ljmp
daa
dec
mov
xor
cld
xchg
cs
or
pop
cmp
xorb
cld
in
shlb
xchg
ficoml
icebp
inc
dec
add
dec
pushf
push
cmpsl
lahf
std
xchg
xor
fdivrl
gs
in
sarb
lret
xchg
add
fisubs
std
sbb
cmp
aad
mov
push
mov
push
mov
mov
mov
mov
inc
lods
mov
inc
and
aam
imul
xchg
sub
sbb
mov
fdivrs
insb
adc
in
das
inc
int3
pusha
sub
stc
nop
scas
sbb
jg
xchg
xor
cmp
push
push
dec
inc
loope
xchg
sahf
xlat
loop
mov
in
push
addl
mov
mov
aaa
push
mov
fistpll
jbe
jbe
mov
loop
dec
sub
jno
xor
push
push
rcr
fidivrl
shll
jl
mov
push
jnp
dec
mov
lea
sub
sbb
lret
pop
mov
call
stos
xchg
inc
in
cmp
sub
dec
inc
dec
loopne
xchg
icebp
je
or
lret
pushf
dec
test
pop
ficomps
out
out
faddl
lret
scas
add
out
gs
fmul
add
iret
fisubl
movsl
repz
addr16
cld
sarl
mov
fstl
xor
ja
fildll
gs
in
insl
mov
movsl
push
xor
adc
in
rorl
xor
in
xlat
jg
mov
mov
jecxz
mov
mov
lahf
insb
jmp
arpl
std
jge
mov
pop
dec
jl
inc
negb
enter
sub
add
add
and
xor
xlat
jne
adc
out
add
xchg
vmwrite
sbb
adc
jbe
or
cs
movl
fisubl
xchg
loope
mov
cwtl
mov
mov
mov
cmp
jp
jno
inc
data16
pusha
xchg
cmp
lods
or
imul
pusha
jno
jp
cmpsb
mov
cmp
push
popa
imul
and
adcb
dec
sbb
shlb
data16
ds
es
jb
aaa
push
mov
pop
xor
lock
mov
js
sub
adc
rolb
pop
cmpsb
pop
sub
pop
dec
sbb
ljmp
push
dec
scas
add
notl
adc
push
add
push
and
sbb
ror
loope
cld
cmpsl
sub
aaa
add
cld
push
pusha
lods
push
xchg
incl
icebp
pop
hlt
adc
clc
stc
sti
mov
mov
pop
mov
je
mov
xchg
arpl
aas
xor
push
cld
ficoms
movsl
in
incb
cwtl
leave
xchg
into
mov
xchg
xor
test
iret
out
pop
push
cmp
push
rcrl
inc
sub
pushf
out
leave
stc
xchg
jo
push
pop
pop
jb
and
jp
mov
jmp
pop
or
adc
mov
cmpsl
jmp
ret
cmp
test
sub
sarl
xor
mov
pusha
xor
or
stc
fcmovnbe
xor
sysexit
pop
fistpl
pushf
ficompl
mov
xchg
shrb
inc
int
mov
dec
loop
iret
mov
jle
mov
cmpsb
leave
push
jp
lea
mov
mov
ja
jne
dec
jmp
test
sarb
push
add
and
lgs
cwtl
or
test
stos
mov
cmp
insl
into
pusha
out
xchg
sub
jl
adc
xor
dec
push
or
pop
jecxz
out
sbb
mull
in
sub
sti
daa
fucomi
adc
shlb
mov
push
popa
xor
mov
mov
fmuls
inc
mov
popa
push
mov
adcl
mov
jbe
cli
jo
das
push
add
addl
gs
add
xchg
sti
mov
dec
cmpsb
aad
push
out
sub
bound
mov
outsl
mov
daa
faddp
and
fmul
scas
xor
sub
pop
pushf
sahf
movsl
xor
test
out
dec
push
pop
inc
in
xchg
ds
shr
sbb
jae
pop
and
incl
mov
aad
fsubr
shll
adc
cmp
bound
leave
rcrl
fs
jae
dec
imul
mov
test
xchg
mov
cmpsb
dec
adc
cmp
inc
ficoml
mov
test
mov
inc
xorl
dec
push
lock
pop
loope
mov
mov
hlt
cltd
test
push
lea
test
push
pop
fisubrl
pop
jns
adc
push
or
inc
push
stc
jbe
mov
cwtl
out
rorb
cmp
pop
insb
xchg
cmp
das
mov
aad
or
popf
cmp
sbb
sarb
das
add
ja
subb
lahf
xchg
lret
sti
or
outsb
push
xchg
call
repz
sbb
repz
scas
cmpsl
cmpxchg
ja
fcmove
sbb
push
lods
fisubs
pop
pop
out
mov
stos
jl
int3
and
sub
subl
mov
inc
daa
lods
call
enter
aam
push
xchg
in
sbb
or
out
into
pop
popf
shll
mov
jg
xchg
jae
push
fcoms
inc
out
cmpb
lds
cmp
dec
inc
or
push
imul
jae
in
nop
add
push
sbb
dec
or
jb
test
jb
sahf
in
push
cmpsl
movsb
nop
sti
and
rcrl
imul
loop
call
es
inc
pop
clc
les
popa
ljmp
icebp
popl
loope
cmp
push
scas
push
and
push
lods
adc
in
mov
scas
sub
imul
jp,pn
mov
lea
scas
ror
inc
push
pusha
movsb
sbb
outsl
into
sub
jp
xchg
neg
push
sbb
loope
xchg
mov
adcb
popa
pop
ret
push
int3
scas
loopne
rolb
mov
inc
jae
popa
test
popa
cmp
dec
pop
mov
inc
dec
adc
aaa
idivl
lds
loopne
add
movsl
mov
jp
ror
push
mov
ss
add
xor
bnd
push
or
in
push
mov
xlat
mov
leave
xor
insl
or
pop
fs
xchg
cmp
repnz
fwait
das
fcoms
push
lods
cltd
inc
mov
test
sub
xchg
dec
mov
shrb
andl
shrb
adc
mov
test
sbb
jmp
mov
adc
add
sub
dec
test
fdivrl
mov
sbb
out
lods
shll
fldcw
sbbl
pop
xchg
xchg
fwait
call
cmp
std
ss
negl
jne
test
lret
xor
sbb
repz
sub
sbbb
stc
mov
das
test
lcall
idiv
xchg
repz
cwtl
adc
outsl
push
rolb
mov
js
mov
ss
or
je
movzbl
out
cwtl
rorb
mov
les
popf
push
cmc
add
xchg
mov
push
and
mov
stos
jo
imul
jno
stos
dec
popf
in
xchg
dec
xchg
lods
xchg
fwait
imul
push
mov
push
movzwl
adc
mov
xorb
xchg
stos
cmp
cmp
ret
movsb
std
popa
cmp
stc
iret
sbb
xchg
fs
test
pop
popf
outsb
and
ds
push
or
add
andb
inc
addb
pop
push
cld
push
addr16
jnp
into
jo
push
cmp
orb
rdmsr
or
pushf
sahf
sub
xchg
insl
fsubrl
daa
jno
cmc
ret
mov
cmp
sub
or
aad
hlt
arpl
shll
jbe
loopne
inc
lea
add
adc
out
cmp
outsb
mov
add
repnz
pushf
jno
mov
xchg
pop
imul
inc
call
ljmp
hlt
sub
push
pop
int
adc
jns
in
inc
iret
mov
cmpl
push
pop
xor
dec
in
mov
or
lock
mov
push
mov
cwtl
inc
sbb
ja
movsb
fstps
jbe
aas
xor
and
push
mov
js
jp
movsb
mov
pop
or
mov
dec
xchg
addr16
mulb
nop
or
notb
shlb
xor
stos
cwtl
pop
pop
mov
testl
jo
pushf
add
ljmp
dec
lods
lds
pop
dec
cmp
inc
add
add
clc
cmp
inc
ficoms
bound
mov
dec
loopne
lret
cltd
xchg
mov
int3
stos
sub
popf
adcb
imul
scas
cmp
sub
add
push
and
inc
ljmp
shl
ret
das
loope
jno
mov
push
iret
mov
xchg
pop
jbe
jg
pop
pop
lcall
and
push
sub
sub
mov
or
add
cmp
push
cli
clc
push
add
sahf
push
push
ret
xchg
imul
testl
or
jns
lahf
lock
or
xchg
test
scas
xor
mov
xorl
pop
sbb
lock
xchg
inc
jmp
add
mov
and
sbb
loop
outsb
dec
insl
pop
lret
hlt
add
xchg
je
pop
push
add
xchg
xor
dec
jae
es
sbb
fsubs
icebp
mov
xor
lea
mov
push
and
lods
push
dec
xor
jge
push
lds
in
jge
and
es
push
enter
pusha
pop
xchg
nop
sub
jae
jbe
mov
stc
bnd
int3
dec
sarl
lock
fldenv
in
jg
cwtl
cmp
inc
push
scas
adc
or
pop
nop
push
mov
test
fidivrl
in
sbb
out
aaa
popf
jp
mov
lock
or
add
cltd
in
ljmp
dec
ss
xchg
pop
loope
pop
testb
mov
inc
fidivl
adc
arpl
mov
dec
push
in
add
xchg
test
je
clc
in
push
aad
mov
imulb
cmp
or
adc
cld
cmp
cmp
add
mov
aas
push
xchg
push
fimuls
bound
xchg
lock
jbe
out
mov
mov
dec
sub
shrb
add
pusha
arpl
mov
mov
shl
or
adc
xchg
mov
mov
or
jns
cld
lods
les
or
aaa
outsl
dec
xchg
jo
add
xchg
or
adc
push
lea
mov
xlat
repz
push
cwtl
ss
and
jbe
out
in
dec
stos
test
lret
pushf
jmp
out
ret
int
leave
cmpsl
add
lcall
bound
sbb
sbb
mov
xchg
sub
adc
imul
cld
or
sub
fisubrl
pop
push
or
dec
push
jbe
lahf
lret
cmp
xorb
stos
sti
cltd
ret
aam
or
jmp
out
in
mov
or
mov
xchg
push
flds
movsl
ret
pop
popa
popa
jae
push
and
and
pop
mov
mov
sbb
cmp
outsb
aaa
add
imul
mov
int3
and
pop
inc
lret
std
mov
lods
adc
jp
out
xchg
xchg
inc
bound
cld
push
pop
test
xor
push
insb
es
add
sbb
loope
mov
sub
in
cmp
dec
mov
xchg
les
cmc
pop
sbb
jae
jg
xchg
test
pop
inc
lds
test
je
sub
repnz
sub
jge
cmc
sbb
or
bound
shlb
jle
mov
stos
negl
cmp
mov
movsb
gs
repz
mov
or
out
cmp
and
fstpl
jns
mov
or
aad
aas
imulb
sub
jbe
ficoms
push
mov
jnp
shll
mov
pop
pop
and
or
and
data16
mov
mov
in
cmpsb
adc
movsb
mov
outsb
dec
lcall
xchg
popf
int3
and
int
xor
sub
aad
shlb
pop
in
sbb
nop
adc
sbb
outsb
jl
push
cwtl
fwait
popf
ljmp
push
lahf
mov
sti
xor
cwtl
fwait
data16
xor
sbb
push
cmp
lret
xchg
dec
jno
arpl
mov
lcall
adc
mov
mov
lret
ja
mov
xchg
shlb
shll
int
dec
mov
movsb
push
push
icebp
mov
int3
aas
lods
push
data16
mov
pop
movsb
push
fs
add
movsl
imul
push
scas
push
leave
lret
cltd
lahf
mov
int3
stos
mov
cld
icebp
mov
mov
lock
cli
sub
daa
shrb
loope
femms
mov
dec
lock
mov
jbe
mov
scas
repz
jno
lea
sbb
add
mov
popa
outsb
movsl
mov
ror
cs
dec
es
jecxz
or
ret
pop
in
int3
mov
ret
xlat
dec
mov
pop
sub
rcrl
emms
add
ret
mov
and
mov
stos
pop
inc
insb
pop
loope
and
mov
in
ret
push
mov
sahf
clc
adc
nop
js
arpl
push
add
test
xor
lahf
dec
add
das
sub
cmpsl
lods
pop
ss
adc
add
and
ret
in
xadd
xor
outsl
sbbl
ljmp
jno
cld
aam
in
dec
std
or
mov
add
cmpsb
movsb
mov
jae
lret
test
cmp
pop
xchg
mov
mov
loop
or
negb
add
adc
adc
sbb
inc
xor
cmp
push
mov
fs
mov
jno
test
out
pop
popa
int
cmp
pusha
xchg
mov
mov
push
int
lds
jno
jle
leave
rclb
mov
lahf
les
xor
jae
adc
pop
jl
xor
mov
jnp
push
adc
sub
popf
ret
add
xchg
fldenv
rorl
xchg
ret
ds
je
rcll
sahf
fstl
gs
mov
pop
mov
adc
add
push
or
jns
pushf
inc
stos
test
pop
push
push
push
jle
adc
and
xor
xchg
fs
mov
je
sbb
sbb
popf
arpl
inc
push
xor
repnz
ret
adc
adc
jge
lods
adc
sbb
icebp
gs
repz
sbb
pop
out
and
into
mov
mov
ror
cld
and
in
dec
filds
shll
pop
fsubl
repz
jmp
clc
fistl
add
call
adc
jecxz
ret
std
mov
scas
xor
aad
xor
mov
outsl
repz
or
pop
pop
xchg
xor
cli
and
lret
neg
mov
mov
enter
xchg
out
sub
out
pop
jbe
dec
and
dec
pop
mov
filds
das
dec
shll
inc
cld
xor
mov
bound
ljmp
shl
or
sti
and
dec
ret
call
adc
movsb
lret
or
push
negl
mov
call
push
mov
popa
add
aaa
out
jl
imul
mov
mov
jb
push
divb
out
das
loop
lahf
mov
jae
es
neg
pop
int3
xchg
les
out
fdivs
xor
in
and
cmp
jle
filds
pop
fsts
mov
mov
test
mov
lcall
mov
mov
or
imul
loopne
lock
ficomps
cld
addr16
mov
out
mov
fcoms
lcall
mov
test
les
lods
push
fldcw
xchg
insb
lahf
les
sub
nop
sbb
clc
lahf
gs
dec
jno
inc
arpl
jbe
push
cmp
push
std
mov
and
push
adc
rolb
adc
jg
xor
xor
sub
mov
inc
jnp
xchg
mov
stos
xor
fsubrs
push
and
icebp
shl
in
push
imul
icebp
cmp
fldl
mov
push
rorl
mov
incl
std
outsl
icebp
xchg
push
filds
iret
jno
add
adc
loopne
xlat
mov
pop
push
aaa
jb
xor
sub
xchg
shl
cmp
ljmp
loopne
in
push
xchg
ret
push
mov
cmp
movsl
mov
jmp
orl
adc
cmp
jmp
in
cmp
add
xor
arpl
push
repz
inc
cmp
jle
mov
mov
sahf
xlat
aas
sbb
push
mov
addl
fisubrs
ss
ret
cltd
test
loope
das
insb
push
dec
test
cmp
jb
lods
bnd
pop
repz
sub
stos
dec
scas
jp
imul
dec
scas
shr
cld
push
cmpb
lcall
mov
push
sub
fnsave
incb
pusha
imul
sbbl
mov
and
sarb
outsb
mov
or
adc
xor
pop
fcoms
xchg
movsl
cmpsl
pop
mov
dec
loopne
fdivrl
sbb
cmc
cmp
test
adc
and
aas
movsl
fs
push
cmpsl
fwait
inc
icebp
push
popf
popa
lcall
mov
jg
xor
pop
mov
push
frstor
push
or
dec
jno
insb
imul
push
pop
stos
mov
xchg
les
lcall
bound
xchg
dec
mov
fdivrs
push
fldt
sti
push
push
jnp
cmpsb
lahf
test
lea
loopne
inc
sahf
mov
outsl
imul
aas
ret
lock
hlt
dec
mov
add
dec
test
dec
push
test
aam
sbb
cld
xor
xchg
add
jo
xchg
out
pop
and
mov
call
shl
cmp
in
jle
mov
inc
aaa
sub
pushf
push
and
les
or
orb
push
jmpw
or
and
sarb
dec
fcmovu
test
adc
or
sub
cmp
push
out
imul
sub
insb
jp
push
cmpsl
jae
xchg
dec
or
pop
shlb
or
and
add
shll
popf
mov
mov
ret
sbbl
lea
bound
xor
jno
data16
int3
xlat
imul
inc
call
mov
test
push
xchg
adc
add
jp
sbb
push
adc
dec
pushf
pop
mov
loopne
or
adc
sub
xchg
divb
ror
adc
dec
dec
jno
orl
out
pop
and
mov
fiadds
sub
mov
fs
int3
shr
es
mov
test
inc
rorb
add
sbb
pop
and
in
cltd
push
xorb
adc
jl
mov
sub
push
fistpl
inc
ficomps
notb
out
das
mov
xchg
dec
sub
fnsave
xchg
scas
andb
mov
dec
iret
mov
shl
mov
dec
jnp
push
dec
sahf
lock
sbb
push
ds
rcrl
lcall
xchg
shl
fwait
in
mov
xchg
sbb
iret
clc
leave
jbe
out
lock
pop
pop
hlt
ss
sbb
nop
xchg
aad
inc
adc
rep
xor
mov
dec
fwait
loope
lcall
into
fldcw
test
ds
adc
inc
inc
sbb
addl
enter
fs
mov
jle
movsb
cmp
sti
jp
mov
push
out
imul
call
scas
xorb
decb
xor
aaa
int3
mov
xor
fs
cmpsl
stos
mov
shll
jecxz
lock
xor
cmpsl
push
xlat
mov
mov
ficompl
lods
jle
cmp
call
sbb
adc
xor
out
mov
push
pop
in
cmp
xor
jo
lods
sub
outsl
js
mov
imul
sub
and
jmp
lods
push
mov
in
icebp
add
mov
cmp
xor
std
lret
adc
or
sar
mov
push
aam
jne
push
mov
push
jp
data16
imul
cmpsb
pop
in
pusha
xor
and
adc
mov
push
arpl
mov
das
fidivrs
ja
mov
aam
jns
mov
push
sarb
mov
push
or
lcall
pushf
in
mov
xchg
out
aam
jg
popa
int
test
sub
inc
sub
loope
mov
iret
mov
filds
jb
nop
xor
lret
jmp
add
jns
faddl
lds
aad
mov
mov
adcl
xchg
jb
sbb
data16
mov
xor
dec
mov
mov
adc
sub
je
repz
or
fldt
clc
mov
scas
mov
pop
sub
sub
mov
in
push
dec
movsb
js
xor
insl
dec
jns
pop
leave
dec
lods
icebp
add
add
xor
sti
scas
or
jnp
xchg
adc
jg
mov
push
mov
lods
and
mov
mov
xor
xlat
imul
neg
mov
xorl
lcall
iret
dec
and
imul
fistl
pop
and
lret
ds
xchg
lret
add
mov
push
and
enter
sub
in
mov
mov
mov
aaa
insl
jmp
shlb
out
inc
in
adc
or
mov
cmpl
mov
leave
test
or
xor
adc
dec
push
orb
das
jbe
cmp
push
imul
push
mov
pop
leave
sbb
push
pop
mov
loop
cli
dec
jns
and
lahf
lahf
clc
mov
loop
cwtl
icebp
or
cmpl
orb
dec
xchg
cmpl
inc
aam
mov
mov
mov
gs
sbb
test
clc
int
push
push
mov
dec
cli
fiaddl
adc
rclb
cli
mov
jecxz
jg
sub
or
mov
outsb
push
ret
orb
xor
xchg
jmp
daa
sub
cwtl
xchg
int
bound
jge
add
push
gs
iret
mov
sub
add
ret
jae
out
mov
movsl
pop
xor
xor
pop
pop
mov
icebp
fdivr
xchg
lods
xor
loopne
fld
cli
pshufw
pop
lock
pop
imul
cld
jns
ret
lret
mov
je
jae
aad
pop
vcvtps2dq
mov
push
jnp
test
pop
dec
out
lret
inc
fmul
shrb
jge
push
jnp
movsl
jge
jb
sub
push
fnstcw
mov
sub
pop
test
push
data16
pusha
xor
cmc
fisubl
jecxz
cmp
mul
mov
inc
push
imul
out
ds
out
lcall
sub
or
jbe
push
sbb
fwait
push
inc
xor
out
cmp
in
icebp
retw
lods
pop
ror
mov
insl
mov
add
push
sub
inc
jbe
mov
mov
in
sub
into
push
xchg
jle
mov
jp
pop
fldcw
popf
mov
mov
mov
shrb
jge
jbe
das
lds
mov
adc
shlb
sbb
push
dec
incl
adc
adc
mov
sbb
jp
les
ss
add
xor
lods
lds
fsqrt
psllw
xchg
test
leave
mov
es
stos
out
jl
push
xlat
es
lods
mov
or
pop
popf
jmp
dec
cmp
lret
jle
ljmp
dec
mov
fst
test
and
fcompl
cmp
test
mov
std
pop
mov
aad
aaa
outsl
pop
cltd
into
test
sub
pop
fstpl
out
out
inc
sub
mov
dec
xchg
add
iret
out
aad
fnsave
pop
stc
popf
stos
lods
scas
rclb
pop
push
sub
stos
enter
adc
mov
xchg
test
jne
test
jno
sub
add
popf
out
fdivp
mov
in
lcall
jbe
imulb
lea
and
mov
ret
dec
sub
mov
add
cmpsl
inc
pop
lea
pusha
inc
movsb
lret
pop
inc
stos
dec
imul
push
ja
cmpsb
hlt
lret
xchg
fwait
gs
push
lock
ljmp
cmpl
add
push
out
dec
sub
mov
sub
xchg
jmp
mov
sbb
movsb
loop
add
pop
aaa
popf
int
stos
dec
sub
xor
insb
xorb
arpl
test
cmp
cmpsb
jle
adc
xchg
decl
mov
mov
pop
sbb
push
add
add
lds
fnsave
and
out
je
shlb
adc
jnp
or
das
imul
cmpsb
mov
xor
pop
pop
inc
fistps
jmp
sbb
test
lcall
push
jmp
and
loope
xor
dec
mov
rcrb
xor
mov
xchg
inc
leave
outsl
mov
arpl
mov
mov
popa
and
mov
inc
xchg
cmc
cwtl
cmc
sub
jnp
push
cmp
and
arpl
ds
in
les
push
xor
lcall
fldl
in
scas
ret
arpl
pushf
pushf
icebp
subl
dec
dec
xlat
addr16
in
pop
sbb
xor
ret
pop
data16
out
mov
mov
jae
and
xchg
dec
scas
and
imull
sahf
inc
pop
pusha
call
rcrl
cwtl
repnz
cltd
loop
out
push
and
sahf
sbb
dec
xchg
imul
gs
addb
mov
dec
mov
loopne
xchg
sti
inc
pop
add
mov
or
mov
mov
rol
jecxz
xchg
lfs
mov
sbb
mov
repz
mov
bound
jae
push
ljmp
mov
xor
pop
mov
rorl
pushf
test
clc
adc
xchg
sbb
adc
lock
loope
arpl
out
xchg
dec
aaa
sahf
xchg
ret
fildl
dec
pop
push
pop
mov
add
jb
popa
insb
out
call
invd
pop
xor
mulb
hlt
push
add
jge
std
push
add
push
cltd
icebp
sarl
jge
jge
loope
mov
mov
stos
cmpsb
jp
test
js
fisttpll
mov
dec
jbe
inc
xchg
loopne
push
mov
stos
mulb
shll
push
mov
mov
mov
dec
dec
cmp
push
sahf
push
repnz
roll
mov
dec
xchg
mov
adc
sbb
cmp
sbb
in
stc
xor
push
push
mov
call
sub
mov
mov
dec
mov
jle
dec
ds
adc
shr
repnz
inc
xchg
sbb
add
addr16
dec
sti
mov
fdivrl
cmp
loope
test
lock
mov
cld
and
in
mov
lret
and
test
pop
inc
sahf
xchg
pop
push
test
jg
shlb
addr16
push
pop
mov
mov
push
leave
dec
fstps
lcall
dec
dec
mov
mov
out
sbb
popa
xchg
inc
mov
stc
icebp
inc
mov
sbb
je
push
jnp
lods
inc
and
out
fwait
pop
mov
sub
mull
hlt
jae
notb
iret
pop
sbb
mov
clc
in
pushf
shlb
sbb
movsb
xchg
outsb
inc
ljmp
shl
dec
push
xchg
sti
or
shll
in
loope
fsub
adc
dec
mov
clc
ror
pop
test
pop
pop
enter
movsl
shr
sub
add
jno
push
cs
mov
shlb
mov
sbb
jb
mov
or
test
sti
push
mov
xchg
dec
sti
mov
ljmp
or
inc
lea
arpl
xlat
fmull
jle
in
dec
xchg
stos
mov
in
mov
mov
flds
or
icebp
sarl
push
mov
enter
mov
mov
je
adc
or
sbb
dec
ljmp
loopne
mov
mov
in
add
pop
adc
xchg
test
fs
cmp
loope
jmp
adc
repnz
mov
stos
xchg
add
pop
lock
xchg
push
cwtl
inc
inc
test
leave
push
jl
jecxz
sti
xchg
push
jb
fs
push
adc
pushl
add
pop
inc
xchg
jno
jmp
or
aad
pop
xchg
or
lret
test
jo
pop
int
outsb
push
dec
fstl
xchg
fmulp
sbb
out
and
or
add
das
adc
sbb
dec
jge
fsubp
pop
pop
outsl
call
pop
mov
iret
adc
fisubl
leave
push
sub
and
mov
pop
sbb
imul
jecxz
movsb
mov
lock
fs
out
ljmp
or
inc
inc
and
int
test
add
mov
and
add
add
xor
lcall
push
out
loope
xchg
sbb
mov
pop
or
cwtl
or
push
icebp
orb
adc
mov
jecxz
ds
xor
and
push
xchg
cs
out
mov
push
xor
lcall
outsl
xchg
pop
jmp
repnz
in
bound
sub
cli
daa
cltd
repnz
xchg
mov
addr16
outsb
pop
ficompl
cmp
cs
xchg
mov
xor
xchg
and
sbb
sub
push
testb
sbb
mov
je
pop
cmp
orl
stc
aam
add
out
adc
adc
pusha
daa
dec
je
sub
arpl
cmpsl
xchg
out
lods
mov
xchg
jmp
xchg
add
inc
pop
nop
push
test
jne
push
ds
stos
dec
xchg
out
mov
jbe
or
push
ss
hlt
fstl
jne
jnp
adc
cmp
int3
jbe
outsb
cmp
cmp
lods
mov
jne
mov
jo
fnstenv
jg
or
loopne
ret
pop
cmpsl
cmp
sub
int
xchg
sbb
inc
int3
andb
loopne
or
or
ret
xchg
or
fldenv
mov
stos
test
mov
dec
adc
push
loopne
outsb
inc
pop
enter
jg
orl
pop
xchg
and
fstl
fst
mov
jp
out
jge
mov
mov
leave
sti
xor
xor
push
outsb
ljmp
and
cwtl
lret
adcb
sarl
sub
pop
push
and
insl
cld
stos
sub
mov
pop
nop
movsl
or
push
cmp
movsb
pop
and
adc
dec
jb
xor
repz
xchg
jecxz
rolb
add
jle
mov
lret
fnsave
ds
loop
je
and
xor
idivl
mov
pushf
xor
push
xor
push
ja
mov
xor
pop
lods
lret
jp
pop
data16
ret
jl
stc
pushl
dec
lahf
popa
adcb
sub
pop
stos
lret
incl
daa
or
rcll
call
pop
mov
mov
daa
fcmovb
fnsave
pop
popf
sbb
add
das
xor
push
sub
xchg
sub
fisubrl
lcall
les
repz
push
ret
icebp
insl
xchg
clc
sub
subl
imulb
adc
inc
push
pop
push
dec
in
sahf
add
loope
aad
xor
aaa
xorb
cwtl
mov
out
dec
in
ja
add
fbld
sahf
out
cld
or
mov
push
pusha
leave
fimull
sub
mov
adc
dec
call
cmp
rorb
popf
imul
mov
dec
mov
push
imul
sub
jp
out
mov
mov
insb
dec
sub
xchg
mov
imul
jp
js
in
pop
mov
sub
push
fistl
dec
cs
sub
sub
add
xchg
mov
mov
out
lock
sbb
jl
imulb
xchg
adc
add
daa
inc
loope
jb
cwtl
loop
sbb
cmc
mov
dec
mov
adc
xchg
out
pop
push
dec
sbb
or
push
xchg
adc
outsb
lret
cmpsl
jae
fdivrl
push
push
push
add
je
add
mov
and
data16
pushf
imul
push
pop
mov
mov
inc
inc
cmp
pop
test
imul
push
mov
test
aad
pop
cmp
mov
mov
and
lea
repnz
jo
jle
lahf
pop
popa
loopne
cmp
adc
add
dec
in
add
test
insl
mov
mov
xchg
outsl
mov
and
cmpsb
add
lahf
xchg
mov
push
cltd
mov
jmp
mov
xor
addr16
mov
xchg
pushf
mov
in
stc
je
xor
push
and
pop
cmpsb
inc
stos
mov
xchg
lea
or
test
pop
jo
push
imul
xchg
pusha
mov
pusha
pop
jl
enter
sub
dec
lahf
sbb
jne
xchg
scas
xchg
popf
mov
and
mov
mov
daa
add
cmpsl
pop
pusha
cmpsb
mov
and
iret
mov
ds
stos
data16
or
pop
mov
enter
jo
push
addps
mov
out
andl
and
pop
popa
xchg
flds
push
js
dec
ret
xchg
int3
mov
shr
mov
jnp
jnp
inc
push
arpl
mov
push
scas
xor
mov
js
mov
out
dec
int
in
cwtl
inc
imul
add
xchg
iret
mov
inc
mov
fnsave
ljmp
fcoml
and
stc
jnp
fs
loopne
push
es
push
cwtl
or
sub
mov
mov
or
in
dec
pop
cmp
sub
lcall
xor
in
lahf
aad
mov
sbb
icebp
stos
sub
mov
int
adc
lods
pop
ds
sub
add
xchg
mov
sub
daa
pop
cmpsb
xlat
call
es
and
mov
lods
push
jmp
test
push
lret
out
inc
xorl
cmpsb
jae
lds
enter
add
add
aas
jno
mov
insl
jb
mov
xchg
lret
jo
imul
ret
mov
fsubs
push
ret
out
cltd
mov
mov
xchg
jge
push
mov
pop
sub
imull
xchg
push
and
xor
inc
sbb
sbb
les
jnp
fcomi
cwtl
dec
pusha
cmpsb
aam
and
jbe
adc
xchg
inc
sub
dec
ljmp
sub
inc
xlat
bound
adc
orl
mov
jle
pop
sbb
xchg
mov
insl
ss
rep
fwait
mov
fidivrl
imul
mov
mov
int3
inc
mov
cmpsb
jg
mov
pop
loop
sbb
das
xchg
shrl
push
sbb
lods
inc
mov
push
mov
nop
test
insb
bound
movsl
xchg
jo
jns
pop
int3
es
fcomip
test
es
jl
pop
cmc
pop
mov
add
fbld
mov
call
add
loopne
loop
jg
push
in
dec
push
ret
mov
sti
inc
mov
test
rol
jne
sub
daa
scas
or
out
push
out
cmp
mov
aad
jne
pop
sbb
aam
loope
push
and
pusha
mov
in
mov
les
mov
clc
sarb
xlat
dec
jb
inc
pushf
mov
xor
std
shrb
xchg
cltd
push
outsl
fildl
mov
push
pop
sub
mov
dec
jno
les
imul
test
mov
or
fwait
and
cld
or
inc
dec
nop
ss
mov
mov
clc
mov
loopne
mov
test
add
sbb
or
push
or
push
in
pop
fsub
or
ret
test
fs
pop
xchg
and
mov
pop
mov
fistl
outsb
es
inc
shr
adcl
lahf
mov
jae
mov
sar
jns
test
cmpb
pop
lret
fnsave
inc
pop
dec
ror
iret
add
aam
jle
cmp
xor
inc
ljmp
int3
ljmp
incb
repz
inc
add
jo
xor
push
pushf
xorb
xchg
adc
inc
push
pusha
cwtl
lcall
mov
xor
jnp
adc
jo
and
mov
dec
arpl
xchg
or
adc
sub
inc
adc
pop
mov
pop
xchg
and
subl
flds
movsl
outsl
scas
ds
sub
push
mov
cmp
jl
into
in
dec
mov
add
test
bound
sbb
repnz
mov
insl
test
sbb
js
inc
or
xchg
mov
mov
cld
push
das
xchg
rorl
aas
add
mov
and
cmp
les
pop
pop
push
and
mov
mov
xlat
push
pop
pushf
divb
out
test
rclb
and
inc
pop
sbb
out
or
test
loope
in
outsl
les
in
sbb
dec
sahf
aad
in
jns
jge
pop
les
or
addr16
clc
sub
sub
fildll
add
mov
ficompl
popf
fsubr
pop
inc
pushl
inc
or
test
adc
add
aad
loopne
add
lcall
push
in
js
in
insb
and
push
int3
pop
jecxz
andb
test
jne
ficomps
fs
les
lcall
lea
fisubrs
or
or
in
jnp
ljmp
aaa
inc
das
cltd
add
add
out
pop
cmp
and
dec
sahf
test
lcall
out
std
movsl
jmp
mov
xchg
cmp
jg
les
add
sub
pop
jns
inc
adc
or
inc
cltd
popa
jns
or
fidivl
testl
hlt
cli
fiadds
stos
xchg
popa
adc
adc
jne
ja
jle
sub
cmp
jecxz
mov
xor
jle
dec
clc
fwait
adc
fistpl
dec
lods
fisttps
imul
xchg
inc
cmpsb
adc
sbb
adc
mov
jp
push
shr
je
pushf
test
inc
mov
jge
push
mov
ja
mov
cmp
outsb
jmp
push
xchg
js
mov
fs
lcall
xchg
fwait
pand
push
xchg
lret
cmpb
adc
and
scas
mov
pusha
shrb
lods
imul
mov
inc
push
or
or
lret
nop
cmp
js
mov
ret
imul
pop
xchg
push
dec
movb
fadds
inc
sub
and
pusha
fcoml
out
or
mov
js
mov
adc
pop
pop
lret
xchg
inc
pop
inc
ret
pop
in
pop
scas
and
mov
jae
xchg
je
dec
push
popf
mov
movsb
dec
pop
jae
ret
mov
insb
pushf
sub
leave
sbb
or
movsb
inc
lret
test
pop
popa
fisttps
push
inc
pop
aam
xlat
push
arpl
push
mulb
or
sahf
mov
adc
mov
ja
fucom
gs
clc
jle
aad
sbb
jp
pushf
loope
inc
mov
mov
lret
pop
adc
jbe
lahf
ror
jg
ss
ficoml
jge
mov
cltd
xchg
mov
jle
cmc
jle
xchg
and
cmp
mov
mov
xor
pop
push
jmp
out
sbb
movsb
mov
mov
fwait
cs
fdivrl
in
add
add
or
lea
xchg
sbb
insl
iret
fstl
inc
imul
in
cmpsb
in
sub
dec
divl
cmp
push
pop
cmp
mov
aad
es
jae
push
dec
xchg
adc
imul
lahf
mov
das
stos
cmpsb
jne
arpl
sub
mov
mov
xchg
mov
xchg
in
push
cmp
fcoms
mov
ljmp
mov
push
repz
xor
pop
stc
xchg
outsb
sbb
rcll
int
and
sub
int3
and
divb
mov
roll
mov
bound
test
out
xchg
pop
int
pop
pop
xchg
scas
pusha
loop
out
ljmp
ficoml
sub
rcrl
cmp
push
pushf
and
jae
mov
push
sub
sbb
mov
or
lahf
repz
jo
scas
cmp
scas
jo
out
movaps
lcall
xchg
test
loop
add
sti
add
arpl
xchg
add
dec
push
push
mov
xor
mov
and
cmp
js
or
sub
addr16
int3
sti
adcl
xor
cmp
je
pop
mov
add
jo
lret
xor
into
or
push
xchg
pop
dec
js
mov
push
and
out
lea
enter
andl
dec
fildl
xor
popf
outsb
push
xchg
setg
mov
xchg
dec
mov
out
mov
push
xchg
stos
dec
ficomps
push
fimull
repz
int
pusha
dec
pop
mov
cmc
and
adc
and
popa
xchg
fildl
cmovl
bnd
mov
push
ficoml
push
fcomp
mov
mov
sub
test
into
outsl
lahf
pop
psubb
fiaddl
xorl
lock
jno
hlt
pop
movsl
push
lods
add
or
jb
sahf
jmp
or
mov
inc
js
mov
mov
xor
test
xchg
pop
xchg
lahf
outsl
push
cmpsl
and
xchg
aad
mov
fcoml
sub
stc
jge
mov
scas
mov
cmpsb
mov
mov
mov
push
dec
mov
xor
or
iret
sbb
ficoml
jo
pop
pop
lea
scas
add
push
dec
mov
pop
test
iret
decl
arpl
popa
adc
push
jae
xchg
fwait
sarb
mov
jb
mov
fcompl
sub
testl
push
outsb
xchg
xchg
push
sbb
jb
pop
divb
push
scas
or
sub
loopne
mov
add
mov
lods
pusha
ds
cmc
leave
daa
xor
out
dec
enter
ret
cmp
jmp
mov
push
movb
add
std
movb
jmp
outsl
sub
test
fwait
pushf
pop
movsb
mov
jb
loopne
sub
jmp
and
movsb
adc
gs
inc
sbb
push
push
cmp
dec
pusha
sbb
into
aam
adc
and
cmpb
sub
xor
adc
addr16
rorl
cmpsb
insb
jae
fisubl
hlt
xchg
and
ret
jle
or
jecxz
jle
push
sbb
inc
cld
pusha
jae
ja
imul
divl
repnz
loop
pop
lods
mov
addr16
jnp
fiadds
inc
dec
mov
jg
xchg
and
addr16
xor
and
mov
in
jnp
sub
cli
jnp
ja
mov
jno
push
out
lea
aaa
cs
push
jbe
mov
push
sbb
or
in
sub
jns
cmp
fiaddl
sbb
inc
test
push
xchg
inc
mov
jno
clc
pop
js
push
mov
sub
jle
out
inc
xor
fistps
add
lret
mov
mov
dec
mov
push
das
jmp
adc
bound
not
lret
mov
shl
enter
cmp
mov
mov
mov
and
js
mov
jecxz
mov
xchg
out
sbb
xor
test
fnstsw
jne
lahf
scas
cld
jl
out
xchg
cli
pop
mov
inc
int
je
jp
std
ljmp
fdivs
xor
dec
negl
lock
dec
xchg
jnp
pop
xchg
aaa
lea
in
movsl
js
mov
xor
jmp
adc
mov
xor
loope
vandps
mov
dec
xlat
xor
andb
rorl
lret
and
mov
rorb
cmp
mov
dec
fwait
mov
loope
sub
jge
push
adc
push
aas
test
dec
gs
mov
and
push
or
dec
aam
mov
mov
shll
and
cli
loop
xor
add
insb
lock
jl
in
pop
adc
jns
mov
lcall
xor
test
and
pop
sub
ljmp
xor
insb
shl
jb
jae
fcmovnbe
insb
sbb
mov
sti
and
stos
cmp
dec
fidivrl
xchg
add
sbb
daa
push
popf
out
xor
jp
jle
in
shlb
nop
lock
or
fidivs
loope
cmp
adc
xchg
lods
scas
mov
mov
jecxz
xor
shll
stos
ja
mov
lret
cli
test
imul
pop
ret
push
jo
dec
add
cmp
and
aas
inc
leave
fmull
repz
xchg
xlat
popf
out
mov
dec
lret
dec
xchg
mov
xchg
mov
mov
pop
ret
mov
and
cmp
jp
popa
jae
adc
jno
xor
push
call
cmpsb
lcall
inc
nop
nop
mov
and
data16
jb
rsm
xor
nop
adc
fldt
hlt
add
push
into
push
cmpsb
sbb
and
push
je
enter
sbb
or
inc
mov
repz
mov
jge
insl
xchg
xchg
add
pop
jp
mov
and
movsl
mov
lods
cmp
mov
and
lcall
xchg
sub
mov
hlt
dec
test
pop
cld
outsl
jae
arpl
xor
aad
outsl
dec
outsl
mov
mov
xchg
cmpsl
add
frstor
popa
cmpsl
mov
xchg
pop
or
xchg
xchg
punpckhwd
sbb
dec
pop
push
mov
pop
jae
xchg
xchg
push
andl
sub
jb
xor
xchg
xchg
dec
loope
leave
popa
mov
mov
mov
int3
in
mov
or
mov
in
out
mov
inc
and
lret
add
pusha
imul
out
cltd
aam
xchg
jo
lret
imul
fbld
xchg
test
add
insb
out
rcrl
inc
jmp
cltd
iret
inc
js
pusha
inc
mov
test
fdivl
cs
jbe
inc
bound
shld
xchg
out
dec
repz
pop
frstor
aad
xchg
stos
rcr
sub
sub
les
pop
adc
mov
mov
ljmp
mov
mov
xor
cli
gs
or
movsb
pop
lahf
xorl
in
mov
lret
fdivl
xchg
out
sub
rclb
leave
insl
inc
ret
xchg
scas
jl
sub
ja
mov
or
cmpsb
fisttps
sub
lcall
fdivs
sub
or
dec
mov
lcall
push
mov
sbb
stc
cmp
pushf
rcr
inc
dec
std
into
or
loopne
mov
xchg
mov
in
push
fstl
aaa
sbb
clc
stos
xchg
cs
push
xchg
jae
imul
roll
test
lahf
repz
subb
aaa
std
roll
stos
push
cli
icebp
in
int3
incb
pop
mov
std
out
scas
adc
jno
xor
mov
push
lods
sbb
cmpsb
or
hlt
xchg
imul
test
mov
aaa
mov
jne
push
push
popf
mov
jnp
mov
je
pop
or
mov
popf
mov
hlt
mov
repnz
pop
les
pop
xchg
cwtl
lret
push
and
push
fildll
push
call
jbe
sbb
mov
lock
out
enter
lret
inc
and
jns
aam
out
adc
jge
or
sbb
dec
dec
jp
in
imul
mov
pop
xchg
icebp
xor
cmp
and
pop
pop
sahf
jo
mov
xlat
aad
fstpt
inc
fisubs
fs
mov
sbb
sbb
pop
push
mov
lock
inc
clc
lock
mov
mov
cmpb
cmpb
push
ret
cmpb
pop
cwtl
clc
mov
pusha
arpl
pusha
lods
aaa
leave
pop
ret
ja
sbb
add
push
movsl
pop
mov
mov
int
pop
sarl
adc
xchg
fcmovnbe
out
and
out
aad
jecxz
jmp
pop
data16
jp
xchg
push
daa
hlt
xor
bound
popf
lods
xchg
test
sub
or
fs
sbb
incl
out
fadds
xor
mov
and
aaa
push
pop
pop
ja
sahf
inc
xor
out
lret
dec
aad
ret
iret
lret
jno
ret
loopne
ljmp
fsts
adc
loope
xchg
int
inc
sbb
cwtl
fdivrs
ds
bswap
int3
mov
inc
inc
cld
lds
out
dec
xchg
loopne
lds
xorl
mov
fsubs
pop
insb
rclb
nop
pusha
call
pop
pushf
pop
test
cmp
dec
cmc
ljmp
fwait
fwait
mov
mov
arpl
sub
sub
leave
test
push
mov
fstl
arpl
leave
in
hlt
int
sahf
mov
cmc
pop
pop
ficoml
andl
cmc
mov
jno
add
outsl
pop
jb
ljmp
lea
sub
push
xchg
mov
mov
je
and
test
xchg
ja
mov
pop
and
stos
aaa
pop
movsb
mov
cmp
mov
into
jb
xor
clc
gs
inc
jl
dec
enter
add
sub
xor
add
mov
jg
and
xchg
adc
xor
daa
adc
lahf
ljmp
inc
ror
pop
sbb
dec
test
cmp
mov
dec
std
add
addb
xchg
pop
ja
lret
mov
push
dec
mov
push
out
out
hlt
sub
xor
mov
mov
mov
xchg
cmpsl
gs
xchg
cmc
mov
je
xor
mov
xchg
dec
jp
push
push
in
mov
xchg
push
sub
cwtl
repnz
fcoms
in
pop
pop
xor
test
cmp
test
dec
sub
repnz
add
sub
dec
std
sub
icebp
iretw
sub
es
xchg
mov
fwait
mov
add
or
ljmp
or
add
loope
xor
add
add
ret
mov
mov
je
add
jno
adc
in
mov
sbb
jmp
sbb
decb
pop
add
jnp
sbb
lods
push
ja
ret
mov
call
popf
pushf
cwtl
sub
vmread
lods
xchg
adc
push
fstp
sti
xchg
rcrb
mov
mov
and
rorb
pop
aaa
adc
cmp
push
leave
mov
or
je
rclb
push
dec
outsb
into
adc
sarb
mov
rclb
jmp
xchg
cli
sar
cmpsb
jmp
imull
inc
lret
sub
xor
fdiv
out
les
mov
dec
jmp
mov
mov
sbb
lret
lret
cs
cmp
leave
adc
popw
xchg
scas
rol
test
cmp
inc
fidivrs
cs
dec
fsubs
mull
jo
cmp
and
xchg
outsl
sbb
das
ret
xchg
imul
outsb
mov
sub
add
aaa
popa
mov
xor
movsb
push
xor
cli
mov
adc
inc
inc
div
inc
andl
pop
push
cld
mov
fstl
call
or
loop
and
xchg
rol
pop
arpl
mov
aam
lret
fimull
pop
mov
cmp
leave
mov
fcompl
xchg
sub
push
rcr
or
push
adc
mov
dec
cli
push
pop
aam
mov
in
xor
lods
gs
sbb
xor
push
pop
xor
int3
inc
cmp
dec
sbb
loop
decb
push
sbb
adc
mov
inc
push
mov
test
cmp
js
ret
push
fstpt
mov
lods
in
sti
cmpsb
dec
mov
add
mov
mov
dec
or
mov
scas
or
add
leave
das
daa
out
fcmove
pop
pop
mov
add
nop
shl
sub
test
sti
test
cmp
sub
and
xchg
add
fists
clc
bound
cmp
je
mov
jno
adc
sbb
addr16
mov
lods
mov
dec
popa
mov
loop
lahf
xchg
push
aam
jp
cmpsb
mov
mov
insb
popf
je
outsl
dec
scas
shrl
xor
setb
sbb
test
loope
mov
aaa
cs
xchg
add
hlt
adc
add
shlb
pop
lret
push
addb
cmp
enter
dec
bound
jbe
gs
push
shll
jl
loope
adc
repz
sbb
mov
mov
cmpl
enter
stc
sbb
push
add
repz
int
fadd
test
pop
jmp
push
mov
sbb
sub
lods
adc
mov
jp
jbe
inc
inc
leave
and
out
push
jne
sbb
imul
adc
inc
mov
sbb
dec
push
into
or
fs
jns
inc
mov
adc
or
ds
mov
sbb
dec
fwait
divl
repz
stos
cmp
je
or
in
fisubrs
jge
sub
mov
aad
int
xlat
pop
push
adc
pop
test
ds
or
repnz
loopne
mov
jg
push
in
push
sbb
fwait
push
cmp
loopne
jne
add
xorb
xor
test
fisttps
jne
and
push
std
mov
pop
addl
fldenv
in
aas
out
mov
mov
adc
orl
fwait
cmp
pusha
fdivrs
jns
in
cs
inc
int3
les
add
jp
roll
pop
sarl
sub
les
jno
stos
lahf
mov
sub
pop
scas
icebp
adc
aas
push
fisubrs
jae
bound
hlt
rcrb
bnd
out
dec
arpl
xchg
push
sbb
ficomps
sti
adc
cmp
ljmp
dec
xchg
xlat
data16
or
jmp
int3
push
mov
cmp
push
xor
cwtl
ficompl
ret
mov
rcl
testl
adc
jns
lea
mov
or
and
out
subl
ficomps
mov
movsl
add
fisubrs
int3
cmp
pop
sub
nop
nop
mov
dec
std
shl
daa
cmp
arpl
mov
test
pusha
push
jg
sbbb
pop
sub
pop
jbe
jle
jmp
test
jp
or
pop
mov
popa
movsl
push
cwtl
cmc
xchg
ret
movl
insb
popf
js
mov
mov
aaa
lcall
mov
mov
xchg
jne
xor
jno
xchg
inc
pop
inc
loop
loope
mov
mov
rcl
in
xchg
mov
cmp
inc
pop
mov
jl
add
pop
cmp
dec
jg
std
insb
and
aas
add
loope
mov
repz
ret
jp
gs
cmpsb
xor
mov
push
pop
push
test
pop
push
xor
insl
cmp
push
popa
push
or
mov
cmp
mov
mov
aad
das
js
pop
push
or
sub
pop
jecxz
push
mov
mov
lods
and
dec
jns
imul
pusha
inc
movmskps
sarl
xchg
inc
sti
fidivrl
fmuls
test
sbb
jecxz
notb
lcall
mov
inc
int
adc
add
jns
in
fwait
xor
hlt
leave
inc
and
rcrl
jno
mov
jle
mov
aam
xchg
gs
mov
mov
stc
sbb
xchg
push
sbb
jle
aas
cltd
xor
or
mov
popa
movb
cmpsb
addr16
clc
pop
sub
gs
cld
add
out
fdivrp
clc
pop
fidivrl
mov
repz
jl
add
xor
mov
inc
das
lods
mov
pop
xchg
lea
jle
shr
pop
mov
insb
icebp
push
mov
movsb
divps
sub
jne
xchg
pop
dec
aas
sbb
sbb
adc
cmp
add
cld
and
stc
addr16
mov
aad
xchg
cmp
and
ret
mov
das
nop
jp
fmuls
xor
fimuls
mov
lcall
dec
inc
enter
mov
leave
mov
xorb
popf
sub
adc
fadds
ja
mov
adc
lock
js
mov
inc
pop
scas
add
shll
xor
jp
lcall
pop
out
fsts
hlt
mov
in
fistl
push
push
mov
pusha
loopne
ljmp
scas
sbb
adc
jmp
cwtl
mov
sarb
nop
mov
sarb
stos
cmpsb
ret
fs
push
sub
stos
pushf
jmp
mov
sbb
pop
lea
pop
push
mov
xlat
ret
outsl
mov
or
nop
pop
adc
lock
xchg
ret
in
sbb
pop
cmp
loop
mov
pushf
dec
xchg
dec
add
mov
adc
clc
scas
and
dec
pop
outsb
addb
fcmovb
cmp
adc
mov
cmc
ret
add
jns
shlb
fiadds
jb
push
subb
call
jmp
addb
dec
jnp
pop
push
stos
je
adc
push
cmp
and
repz
dec
outsb
sar
jno
cmp
add
rolb
stos
lods
jns
jmp
stos
repnz
pusha
packuswb
mov
pushf
lret
inc
and
push
jb
pop
and
xchg
adc
mov
cld
lret
or
jns
mov
data16
sbb
adc
repz
popa
push
add
gs
hlt
movsb
adc
or
pop
sbb
sahf
loopne
fstps
popf
in
arpl
jne
jb
add
pop
cmp
add
cmpsl
push
inc
pop
mov
fisttpll
jl
int3
test
inc
pop
pushf
into
xchg
ljmp
xor
movsl
fwait
xchg
push
fstl
jg
push
add
mov
cltd
mov
lock
inc
inc
cmpsb
sbb
push
jge
mov
xor
fldpi
push
inc
arpl
mov
cld
push
add
dec
in
mov
xchg
data16
dec
lret
rclb
das
cmp
xchg
push
loope,pt
xor
repz
inc
sti
inc
push
pop
push
and
cli
repz
fcomps
scas
int
loop
ja
mov
out
jmp
sbb
jg
push
jle
jmp
mov
jbe
test
je
adc
inc
mov
xchg
sarb
lods
cs
pushf
fmuls
push
scas
lea
sub
adc
add
mov
push
out
sbb
sbb
test
sbb
test
stc
xor
mov
cmp
int3
imul
or
fs
cltd
dec
test
mov
sub
xor
push
or
push
les
stos
add
fsubl
mov
xor
inc
aas
mov
fimuls
por
shll
cmpsb
mull
repnz
imul
dec
mov
popf
push
mov
pop
xlat
and
xor
insl
mov
jecxz
pop
add
push
lods
push
cmpsb
leave
cltd
push
jae
out
jg
movsb
sarl
ret
pushl
pusha
inc
dec
cmc
roll
ret
in
call
iret
and
lahf
push
jecxz,pn
or
jae
mov
jecxz
inc
nop
push
lea
or
stos
push
pushf
fdiv
add
loopne
jg
mov
dec
sub
dec
aaa
sbb
lea
js
pop
pop
dec
mov
test
cmpsb
push
fidivl
addr16
imul
incl
outsl
jo
shlb
or
aaa
sbb
pusha
addr16
insl
pusha
inc
mov
push
pop
cmp
fmull
xor
adcl
sub
js
pshufw
xor
cmpb
sahf
xchg
cmc
sbbb
pop
cmp
inc
sbb
mov
ss
pop
lock
fistps
sub
mulb
loop
addr16
inc
int3
inc
inc
push
in
mov
test
fstpl
popf
mov
mov
cmc
mov
inc
mov
jae
push
cmp
push
or
std
inc
inc
outsl
dec
cmp
pop
mov
nop
push
or
and
scas
xchg
in
add
shll
sbb
es
and
in
pop
fbstp
icebp
push
das
std
inc
push
jp
ja
jp
or
cwtl
xchg
stc
inc
mov
pop
sub
add
or
out
xor
in
cmpsb
cmp
jbe
push
stos
sahf
std
imull
scas
push
or
mov
fs
cli
in
dec
loop
test
int
fstpl
push
lret
pop
mov
add
push
xor
flds
mov
arpl
sti
xchg
insl
xor
push
movsb
shld
dec
inc
xchg
scas
es
and
mov
iret
ja
mov
les
in
adc
pop
data16
je
lods
les
wrmsr
inc
or
divb
jmp
lods
insl
fists
mov
mov
pop
and
ja
and
rcl
das
or
add
mov
sub
int3
aaa
mov
or
and
enter
adc
insb
xor
push
movsl
pop
scas
sub
aas
scas
mov
pop
popf
jmp
sub
or
push
add
mov
xor
add
repz
negl
inc
xor
es
mov
mov
stc
mov
push
enter
pop
rclb
movsl
orl
adc
jb
inc
xchg
imul
mov
insl
repnz
mov
into
enter
loopne
xor
ljmp
int
outsl
loop
xchg
xor
popa
xchg
test
sar
jg
pop
je
int
pop
xor
lahf
xlat
sbb
push
adc
pop
outsb
inc
call
dec
lds
mov
inc
sub
inc
dec
loopne
pushf
fdivrs
push
mov
mov
mov
push
and
sub
imul
leave
add
hlt
push
push
sub
out
mov
fs
mov
push
push
mov
lcall
and
insl
mov
sub
les
inc
out
movsb
repz
or
loopne
out
push
jnp
mov
sbb
aad
not
jnp
out
repnz
sbb
popf
lea
clc
dec
sub
add
movsb
pop
test
int
in
loop
inc
mov
mov
jle
repz
mov
inc
ret
dec
jno
lret
pop
xorl
jecxz
scas
lods
mov
xchg
xor
jge
icebp
testb
add
imul
add
or
jo
in
stos
sbb
mov
or
add
and
cmp
push
loop
and
push
lahf
sahf
lahf
pop
cmpl
inc
shrl
cli
nop
cwtl
sub
daa
xor
sub
fwait
add
inc
or
jno
jecxz
inc
daa
mov
mov
pop
movsl
push
lock
push
xor
xor
test
adc
xchg
clc
data16
xchg
aas
scas
lcall
pushf
rep
xchg
leave
lods
dec
and
cs
lds
js
jnp
int3
push
js
lret
mov
out
iret
fstpl
repnz
sbb
lahf
jo
xor
cmp
jg
mov
ret
ret
cmpsl
dec
cwtl
pop
and
fucom
sub
jae
pop
iret
into
scas
test
call
int
mov
or
jmp
mov
cmp
adc
iret
imul
imul
subl
lock
fs
ja
xchg
jbe
jecxz
dec
fwait
mov
pop
std
mov
adcb
adc
inc
jl
stc
sarl
ljmp
xor
and
movsb
jle
insb
fld
lds
dec
mov
aaa
jne
adc
jno
inc
mov
popf
mov
mov
aam
mov
jae
nop
mov
je
sub
sbb
pop
loop
outsb
cmp
mov
or
fdivrs
mov
add
es
pop
aad
in
push
or
es
fdivp
fstpl
push
fs
mov
mov
jl
xchg
orb
dec
sub
push
test
and
dec
cmp
push
fistpl
bound
js
ds
xchg
out
lret
out
mov
xor
mov
jecxz
jmp
dec
mov
jmp
mov
mov
repnz
in
sbb
pop
insb
bound
loop
call
add
cwtl
push
dec
inc
inc
stos
les
mov
adc
jl
add
movsl
jno
dec
dec
mov
lock
sahf
sub
pop
scas
xor
addl
xchg
mov
repnz
in
push
sbb
jl
sbb
add
je
cwtl
rorb
add
sti
sbb
loop
push
xor
stos
cmp
lds
bound
mov
insb
cmp
std
ja
dec
cmp
mov
in
push
jl
dec
push
adc
inc
int3
fnstsw
inc
jle
test
sahf
mov
adc
adc
sbb
mov
jge
addr16
notb
xchg
outsl
xchg
enter
out
sub
sbb
pop
mov
xchg
mov
aad
mov
sbb
sahf
pop
pop
xor
xor
mov
pushw
add
daa
and
mov
mov
stos
repz
or
mov
xchg
add
push
das
negb
iret
pop
lcall
add
push
mov
and
mov
arpl
scas
lret
lods
imul
jo
xchg
lret
dec
mov
pop
out
movsb
jns
jp
out
outsl
add
decl
sub
xchg
hlt
repz
lea
in
fdivl
fldt
loop
rcrl
and
pop
stos
dec
js
sub
xor
jb
fs
sub
and
pushf
xchg
aaa
inc
js
mov
jae
fstl
push
xchg
jp
cmc
add
and
lods
cmp
out
sub
lods
daa
push
shl
mov
jle
setns
jne
and
and
jbe
gs
lcall
sbb
push
dec
cmp
es
push
int3
sbb
xchg
lds
push
sahf
cmpsl
loop
cltd
pop
lcall
dec
adc
or
cmpsb
adc
add
loop
jp
xor
jns
out
jg
push
mov
dec
notb
jl
bound
xlat
pop
sbb
lea
add
jp
lock
lods
mov
add
dec
fimull
aaa
je
aaa
ljmp
bound
dec
mov
and
sahf
scas
xor
xchg
repnz
cmpsb
sbb
das
std
cmp
jp
aaa
sub
jecxz
pop
out
lret
dec
aas
inc
mov
movsl
inc
shrb
rcrl
outsb
xor
push
into
daa
lods
push
jno
sbb
pop
pop
sub
push
rclb
cmp
das
mov
cs
add
pop
sti
pop
leave
mov
lret
fisubl
mov
mov
loop
sub
sub
mov
dec
xchg
mov
addr16
cmp
jae
cli
divl
mov
gs
scas
int3
cld
mov
xchg
imul
rolb
popa
ror
in
ret
ret
xlat
mov
push
je
shll
pop
mov
mov
popa
leave
ret
movsl
test
dec
xorb
mov
in
call
rorb
mov
cmc
loop
enter
lea
push
jne
fnsave
out
xchg
shlb
xor
jl
fwait
add
and
leave
adc
mov
andl
fsubl
mov
jg
jp
add
dec
pop
cmc
test
in
lret
cmpsb
stos
je
inc
shrb
inc
mov
add
dec
sbb
arpl
in
rolb
shlb
push
xlat
movsb
or
xchg
sub
xor
xchg
popf
xchg
out
dec
pop
outsb
enter
into
aaa
subb
test
ficomps
dec
test
or
lds
xor
adc
gs
mov
addr16
cltd
ret
mov
pop
negl
pop
aaa
lods
inc
mov
je
les
mov
jbe
repz
sarb
stc
test
rcll
dec
inc
mov
lds
sets
jp
clc
pop
fcmovne
sub
das
popa
adc
push
push
imul
cmpsb
xor
sti
push
mov
iret
mov
movaps
add
xchg
ret
sarl
movsb
bound
adc
lret
pop
and
mov
jmp
sbb
xor
lods
cmp
in
leave
mov
pusha
inc
outsl
mov
pop
mov
lret
test
stc
ljmp
pop
test
mov
push
daa
out
adc
sbb
clc
push
movsb
xchg
test
xor
xor
nop
or
ja
stos
push
repnz
cltd
dec
insl
pop
pop
into
and
into
shll
dec
int3
rorb
pop
repz
test
in
mov
dec
repnz
outsb
lea
andb
cmpsl
adc
xchg
out
je
xor
jo
mov
pop
fs
js
cmp
jp
in
pop
pop
es
test
add
and
inc
pop
ficoms
test
jae
mov
pop
mov
inc
subb
enter
scas
sarl
mov
ficompl
push
jecxz
sbb
les
push
cmp
mov
pop
and
in
fisttps
mov
setp
into
mov
sar
xchg
mov
adc
mov
mov
fistpl
add
movsl
sub
jg
dec
test
shl
adc
imul
js
negl
add
mov
mov
push
int
mov
jo
in
mov
lods
or
movsl
fs
aaa
cmp
adc
add
jnp
mov
sahf
das
rolb
sub
push
sbb
push
les
dec
adc
mov
mov
cmp
push
out
out
into
push
mov
das
mov
mov
incl
iret
pop
pushf
adc
xor
cli
imul
mull
push
mov
outsb
push
inc
das
pop
jp
bound
aas
adc
adc
push
lret
sti
push
imul
push
iret
xchg
push
sub
push
fsubrl
les
jp
bnd
insb
or
push
xor
xchg
cmp
int
push
aad
dec
pop
sbb
dec
movsl
jno
insl
fdiv
push
rcrl
push
inc
out
jmp
jb
addr16
jae
sub
adc
test
push
shr
mov
clc
insl
cmp
xchg
sarl
dec
xor
in
pop
inc
mov
pushf
cmp
xchg
ret
stc
sbb
inc
enter
mov
xor
pop
xchg
cli
xchg
add
lret
dec
cltd
dec
mov
sub
aam
mov
dec
cmp
adc
aas
mov
add
testl
movl
inc
cmp
xor
cmp
mov
in
sar
shlb
movsb
nop
xchg
out
insb
divb
scas
sahf
stos
pop
ljmp
jno
in
les
dec
mov
mov
dec
enter
aas
and
aam
xchg
dec
cmp
nop
or
inc
filds
out
xlat
call
in
out
add
or
sbb
push
addr16
sbb
aas
dec
sti
loop
outsl
out
pop
jns
lahf
pop
test
cli
mov
or
leave
outsl
into
jns
sub
push
mov
clc
xor
int3
and
jo
les
mov
xchg
inc
xlat
xchg
iret
xor
xchg
sahf
push
sub
lock
and
stos
and
nop
out
stos
add
mov
bound
mov
cli
jo
pop
sti
sub
in
out
loope
jo
mov
arpl
push
popf
fnstsw
mov
inc
in
repz
push
lds
push
fs
rcl
aas
loopne
fcom
or
pop
push
sub
ror
add
int
push
bnd
test
fiaddl
in
mov
adc
lods
cli
out
adc
mov
cwtl
xor
add
movsb
mov
mov
cltd
rcl
adc
jg
push
nop
push
jl
popa
sbb
jno
out
dec
mov
sbb
inc
cmp
jns
xchg
push
mov
jle
stos
aaa
xchg
fistpll
gs
es
push
xchg
push
int
cmp
xchg
loopne
sub
lret
es
ja
clc
aam
les
pop
loope
insb
dec
lods
push
adc
fwait
jle
mov
inc
mov
mov
inc
sub
mov
lretw
adc
out
js
les
pop
out
cmp
xor
movnti
and
mov
xchg
sbb
and
ss
sub
jne
sbb
js
sub
mov
sub
jb
and
mov
leave
push
cmpsb
aam
cmp
inc
jp
and
push
xor
outsl
sub
fimull
or
ss
cltd
sti
inc
mov
loope
jp
dec
jl
aas
sub
mov
test
pop
xchg
scas
add
cmp
mov
mov
jne
mov
push
loopne
je
pop
adc
scas
adc
mov
int
cmc
in
std
popf
out
push
aam
or
test
stos
pop
popf
inc
or
lret
xchg
xchg
sbb
fs
adc
pop
cs
es
jle
gs
xor
in
mov
cmp
sti
movsb
cmpsb
fmuls
dec
aad
leave
adc
icebp
push
enter
mov
pop
mov
jne
sbb
add
push
sub
sbb
rcll
nop
dec
ds
lea
psrlw
out
subl
push
add
repz
inc
adc
outsl
add
xchg
popa
sbb
jae
std
jo
dec
pop
leave
fnsave
inc
repnz
sub
lcall
bound
push
push
aam
jns
sbb
cld
pop
mov
faddl
scas
test
sti
push
scas
aam
cli
mov
fisttpl
add
push
dec
sbbl
add
ja
cmp
scas
inc
leave
and
std
ret
mov
pop
add
xchg
xchg
jg
nop
out
subb
andl
stc
inc
xor
fistps
pop
and
push
sub
or
push
push
cmpsl
cmp
int
rorb
add
pop
cmpl
sub
cmp
fildll
rcrb
jl
aaa
mov
xlat
mov
sbb
or
mov
fdivrl
fwait
jmp
push
mov
test
cmc
lds
and
push
pusha
pop
or
fildll
repnz
or
push
push
ret
daa
sbb
call
test
xchg
inc
and
mov
sub
pop
movsl
push
sub
sub
sub
mov
cmc
adc
clc
lcall
movsb
sti
jnp
rclb
out
mov
leave
data16
mov
test
lods
leave
pusha
jl
xor
and
cltd
push
repnz
mov
lret
lods
pusha
fcomi
jmp
sub
adc
add
aaa
rcrb
and
shll
or
fcompl
sub
sbb
inc
pop
and
push
push
fcompl
pop
and
jo
cmp
adc
add
push
sub
enter
jne
inc
testl
jne
xchg
lcall
xor
repz
stos
add
mov
sub
mov
rcrb
push
sub
dec
and
mov
lea
icebp
ret
mov
mov
int
xlat
aam
and
loop
jg
pop
ret
pushf
mov
addr16
lret
out
out
mov
fcomp
dec
mov
pusha
into
jp
js
lahf
cmp
clc
popf
sbb
std
jbe
hlt
loopne,pt
inc
and
fistpll
jb
cmp
clc
lret
loopne
cwtl
popf
lret
mov
popf
xchg
and
xor
cmp
add
cs
lds
cmc
mov
stos
add
in
rcll
lsl
sub
fmull
gs
pop
xor
dec
push
jno
mov
lock
or
dec
inc
xor
rolb
push
mov
es
dec
cltd
fsubp
mov
sti
mov
jnp
icebp
jbe
or
rorb
sbb
data16
icebp
push
shl
xchg
out
iret
xchg
dec
cli
gs
cmpsb
push
mov
divb
ljmp
lret
inc
mov
inc
inc
adc
push
popa
sbb
ret
push
int
rcr
ficoml
or
and
cwtl
or
dec
xlat
loopne
mov
insb
add
inc
stos
ja
test
scas
repz
xor
in
popl
adc
andb
xorl
stos
pop
or
fs
or
cmp
add
fldenv
adc
mov
mov
stc
xor
ret
push
jnp
pop
aad
pop
mov
in
int3
sub
push
sbb
mov
jno
outsl
in
add
addl
int3
enter
push
adc
inc
leave
enter
inc
add
and
dec
jo
sti
fldenv
cvtps2pd
xor
out
dec
inc
xor
push
test
clc
push
pop
rorb
cli
fwait
mov
fcomi
and
lret
in
inc
data16
cmp
mov
addr16
xchg
sbb
lret
xor
jle
mov
mov
jno
jge
push
mov
cmp
aaa
popf
cmp
hlt
jg
cld
out
arpl
push
aaa
sarl
ss
cwtl
xchg
mov
insl
cltd
mov
sbb
xchg
jns
ja
xchg
push
pop
jmp
test
inc
mov
xlat
dec
hlt
fwait
js
cltd
in
mov
cmp
and
xchg
sbb
lret
xchg
sub
inc
clc
jnp
sbb
fadds
add
pop
int
psllw
js
sub
cmc
ret
push
mov
xor
xchg
pop
pop
sbb
mov
incb
push
test
sbb
push
out
add
cmc
rcrb
mov
or
and
or
mov
jae
inc
lahf
inc
fwait
cs
gs
data16
jns,pn
jmp
clc
and
sbb
lahf
xchg
icebp
add
and
mov
or
pop
pop
or
cmp
or
pop
inc
movsl
data16
and
xor
andb
je
xor
push
sbb
xor
into
mov
loopne
ja
xchg
je
add
cmpsl
xchg
push
insb
dec
push
lret
sahf
mov
xlat
bnd
mov
adc
xchg
sbb
fwait
mov
inc
in
stos
push
mov
jg
lea
xchg
lahf
add
mov
sub
fcmove
movsb
or
in
jge
mull
in
push
mov
pop
xchg
cmp
outsl
add
add
in
xchg
inc
lahf
mov
sbb
out
xor
orb
push
gs
mov
and
sub
mov
lret
xor
lds
inc
aaa
or
mov
test
mov
xorb
cltd
mov
xor
dec
stos
dec
xchg
aam
aam
outsb
rcrb
cmp
lret
movsl
int
inc
iret
or
and
lret
mov
mov
ret
sbb
pop
push
clc
fdivrl
mov
add
mov
cwtl
sub
imul
xor
xlat
inc
insb
sarl
pop
movsb
xchg
rcrb
std
repz
sti
aad
lret
jmp
or
aam
adc
test
jmp
add
dec
stos
xchg
data16
aas
push
adc
cmc
loop
ljmp
in
insb
mov
push
shll
xor
fcoml
sub
mov
sbb
lcall
rolb
mov
sub
ljmp
or
add
xchg
sti
mov
les
and
xor
cmc
sub
fs
fidivl
sarb
jl
sahf
dec
outsl
lahf
fwait
sub
sbb
adc
or
mov
push
shrl
int3
icebp
into
ljmp
arpl
push
dec
scas
addr16
mov
fs
add
mov
mov
mov
sahf
ror
xchg
ret
int3
cltd
repz
push
mov
adc
cld
xchg
notb
mov
and
mov
and
cltd
dec
xor
jle
mov
and
outsl
lods
out
lcall
dec
out
mov
push
stos
dec
push
mov
es
shr
dec
jbe
fcmovnu
inc
mov
push
or
mov
pop
loopne
adc
sbb
or
add
jp
adc
clc
movsb
lea
inc
inc
pushl
push
and
data16
arpl
cmpxchg
fs
pop
cmp
daa
mov
sbb
inc
push
loope
jae
push
xor
and
push
popf
mov
stc
adc
dec
push
cltd
les
lahf
pop
sbb
aad
mov
jecxz
mov
push
sbb
das
push
lods
jns
inc
xchg
aad
lds
fwait
mov
xor
cmc
pop
sbb
fcoms
jne
icebp
or
adc
fisttpl
cmp
aam
sbbb
insb
imul
jge,pn
sbb
and
xor
sbb
inc
movsb
dec
mov
test
add
imul
loope
xor
inc
ljmpw
movsb
mov
lret
movsl
sbb
jnp
movsl
fidivl
add
in
sub
lret
mov
popa
sub
out
decl
lret
or
cmp
xor
cmpsl
ret
pop
dec
sbb
push
push
xor
jbe
jle
fs
enter
outsl
imul
lods
aaa
add
lcall
shrl
rcl
dec
addr16
mov
push
jg
cmpsl
xchg
dec
cmp
icebp
xchg
dec
iret
xor
jo
mov
out
lcall
push
stc
stos
or
pusha
pop
jmp
cltd
and
mov
cmc
daa
push
jecxz
mov
push
inc
clc
jg
push
dec
cli
in
movsb
leave
dec
jg
xor
divb
imulb
dec
xor
addr16
js
push
push
cs
push
into
in
inc
push
pop
cwtl
xchg
test
ficompl
push
fsts
sub
xor
inc
adc
sub
push
or
mov
fldcw
mov
mov
dec
lock
dec
outsl
sbb
incl
mov
sbb
dec
lock
sti
ljmp
bnd
enter
test
or
movsl
arpl
ret
pushf
dec
lea
push
clc
sub
and
inc
or
xchg
add
sub
jnp
or
inc
lahf
push
lock
xchg
and
inc
mov
jp
daa
push
data16
std
shlb
fwait
mov
pushf
xchg
data16
xlat
movsb
std
push
int
push
inc
sub
gs
cmpsb
sub
fdiv
stc
imul
xchg
xor
les
call
ss
nop
mov
arpl
fwait
sbb
sub
cli
mov
push
insl
dec
inc
popa
lret
das
push
loop
cmpsb
data16
add
mov
aas
lahf
pop
pop
jecxz
loop
in
dec
dec
cli
and
es
mov
lahf
jle
ret
add
jne
test
popf
pop
xlat
push
pop
push
imul
mov
cmpsb
inc
subl
cmp
call
ss
ss
imulb
rorb
xor
jae
test
stos
test
sub
scas
push
or
adc
mov
mov
ficomps
add
aas
pusha
aam
and
inc
ja
xor
aaa
sub
stos
stos
mov
xchg
idivl
and
pop
sbb
cwtl
jp
sbbl
sub
pusha
xchg
inc
jle
rclb
dec
daa
mov
xchg
mov
push
add
jecxz
xchg
int3
repnz
in
popa
jne
or
cmp
popf
lods
and
mov
inc
and
sub
popa
cld
jnp
inc
insl
xchg
sti
mov
fnstcw
sub
sub
hlt
push
pushf
pop
cli
add
scas
adc
sahf
stos
jg
mov
dec
jo
pusha
mov
mov
daa
xor
or
xchg
into
mov
push
inc
add
popa
repz
iret
adc
nop
push
inc
or
push
add
mov
cmpsl
mov
or
and
sbb
cld
or
cli
ss
pop
arpl
xchg
push
adc
fistps
adc
pop
ds
push
rcll
rcl
ret
movsb
fldt
mul
adc
or
arpl
test
xor
cmpsl
push
push
mov
addr16
adc
pusha
nop
push
inc
push
cwtl
mov
addr16
mov
lods
jg
imul
sar
roll
xlat
push
daa
call
mov
fwait
mov
adc
clc
cmp
push
fs
jmp
cwtl
movsb
out
shlb
lods
lret
out
or
add
lods
lcall
mov
movzwl
and
mov
cmpsb
nop
sarl
mov
sarb
mov
jle
inc
pop
nop
fsubr
add
cmp
jg
inc
adc
xchg
jbe
cmpsb
int3
je
dec
loope
hlt
jmp
jae
cld
jmp
nop
fldenv
jge
or
mov
adc
sub
xchg
or
cmp
push
addl
inc
adc
mov
movsb
dec
test
dec
insl
mov
mov
rorl
je
pop
lret
or
popa
inc
dec
fisubrs
sahf
cmc
je
jae
add
lret
rcrl
xor
xor
dec
jno
cmc
je
mov
fwait
movsb
mov
adcb
das
push
and
lret
cwtl
dec
imul
dec
push
aaa
movsb
outsl
push
outsb
pop
popa
or
sbb
or
out
mov
jno
in
adc
sarl
test
mov
in
push
xor
fbstp
imulb
sbb
test
adc
out
out
jmp
movl
std
dec
add
or
dec
out
xor
inc
stc
lods
mov
in
or
mov
sub
rorl
fwait
adc
call
mov
xchg
or
sti
xchg
inc
out
sub
outsb
mov
sub
adc
mov
or
bswap
xor
je
sbb
dec
sbbb
test
cwtl
lock
js
ljmp
lret
mov
and
cmp
adc
cmp
repz
out
pusha
dec
jg
je
push
ja
push
cld
int3
fisubrl
iret
mov
test
fs
pusha
sub
fists
push
lock
fmull
lods
outsl
cmp
sahf
outsb
add
inc
mov
adc
mov
push
out
shr
sbbb
push
fcoml
sarb
test
into
xchg
nop
pop
aaa
pusha
aas
sub
cmp
push
adc
jbe
pop
mov
inc
mov
lahf
test
lret
xchg
jnp
inc
lret
movsl
das
push
popa
inc
sarl
sub
or
jecxz
add
test
mov
movsl
fimull
imul
sub
test
push
out
push
ss
push
or
fistpll
test
mov
xor
or
loopne
je
jp
mov
movsb
loop
lret
jl
mov
pop
popl
daa
arpl
cld
out
sar
fs
xor
pop
mov
cmp
jo
rorl
or
clc
jno
jo
cmp
or
stos
in
jae
lock
mov
mov
cmpsl
mov
stos
cmp
int3
adc
or
add
mov
sub
add
mov
xor
jae
or
pop
dec
outsl
je
cmp
cmp
cld
cmp
sub
pop
mov
mov
les
adcl
xchg
in
jmp
xchg
sahf
xlat
add
mov
or
scas
push
push
jl
xchg
and
bound
xchg
cmp
inc
add
and
clc
in
in
xchg
int
jno
mov
dec
jno
sbb
cmp
in
and
adc
xlat
out
or
lea
xor
jbe
aas
adc
mov
daa
jge
pop
shr
cwtl
jp
cmp
enter
mov
adc
iret
pop
jg
jmp
mov
cltd
lods
adc
ss
or
ret
dec
movsb
test
or
jge
cmp
hlt
add
inc
sbb
push
and
movsl
jmp
dec
arpl
aam
pop
lea
cmc
lds
adc
test
mov
loopne
lcall
sarb
pushf
hlt
out
arpl
fsubrl
adc
and
fwait
xor
add
cltd
inc
clc
xchg
sub
mov
arpl
cmpsl
mov
cmp
out
test
adc
jl
push
xlat
fnstsw
scas
sbb
add
xchg
aad
dec
or
dec
mov
mov
rclb
pop
outsb
mov
push
cmp
addl
mov
xor
dec
dec
sub
adc
and
cld
mov
les
xchg
daa
cwtl
xchg
dec
inc
sub
xchg
fists
and
popa
xor
mov
mov
mov
sahf
imul
cmp
sarl
inc
insl
cmpsl
mov
lea
jecxz
outsb
test
push
in
dec
pop
aam
push
xor
in
dec
xor
mov
fdivl
lods
mov
outsb
stc
aam
jne
jge
xor
add
push
mov
sub
and
fucomi
das
xorb
xor
adc
aad
notl
mov
in
and
mov
stc
mov
sub
add
adc
push
add
pop
xchg
shr
jnp
sbb
jp
out
inc
out
push
and
imul
xchg
aam
pop
loope
sti
test
inc
and
lock
cmp
fbld
add
adc
or
xchg
ret
or
cmpsb
iret
inc
pop
xor
aad
nop
jo
inc
sub
scas
and
push
push
and
jne
lds
push
push
push
int3
and
xchg
cmp
popa
push
in
lahf
fstpl
and
popa
arpl
fsubrl
fstps
pop
adc
cmp
lods
ret
imul
sub
cs
pushf
shrb
jg
cs
ds
inc
pop
jmp
inc
icebp
jnp
cmp
xorl
movsb
fcompl
mov
pop
cmp
out
aam
and
clc
jnp
rorl
mov
push
or
cwtl
add
pop
sbb
xor
cmp
mov
fucom
arpl
sarb
sbb
mov
push
dec
in
xchg
mov
insl
ljmp
and
lret
movsb
hlt
push
add
bswap
mov
ret
sub
mov
xor
dec
adc
inc
jb
push
cs
rorb
mov
icebp
inc
rorb
lret
enter
and
jno
jnp
inc
repnz
pop
ss
or
xchg
mov
sarl
rolb
and
ja
sbb
dec
cmpsb
xor
and
adc
dec
or
aas
addr16
sbb
insl
test
and
adc
addl
in
sbb
les
es
mov
insb
fists
lea
lods
adc
mov
cld
lods
pop
add
lahf
pusha
rol
push
mov
sbb
xchg
push
sbb
dec
sbbb
in
pop
das
inc
scas
mov
mov
ja
and
dec
cmc
jmp
jmp
cltd
inc
inc
movsl
cmp
lcall
xor
mov
push
or
sbb
add
aaa
shll
push
imul
fidivs
fcomps
lahf
sbb
mov
and
xchg
sbb
mov
ret
adc
shrl
std
jb
in
in
inc
pop
push
mov
fwait
jo
aam
jp
fwait
mov
icebp
out
call
imulb
sub
shll
jecxz
add
sbbb
jb
cwtl
iret
sahf
mov
popf
push
popa
add
xchg
push
jg
xchg
cmp
cmp
xor
sbb
bts
and
cs
adc
sbb
out
inc
jl
push
inc
xlat
fisubrs
sbb
sti
push
ljmp
push
dec
sbb
sti
sub
ds
int
movsb
and
stc
inc
mov
addr16
fidivrs
stc
rcl
stos
pop
push
lock
enter
test
fstps
movsl
cld
scas
cmp
xchg
fldenv
or
inc
pop
push
hlt
pop
xchg
pop
dec
clc
lcall
cli
mov
cld
aaa
push
mov
js
adc
xchg
sahf
bound
fcoml
ljmp
pop
popa
lds
push
add
ja
inc
nop
mov
sbb
into
test
insl
insb
je
sub
cmp
jno
adc
xor
jns
mov
cmpl
popa
imul
mov
adc
pop
ss
pop
fstpl
or
inc
enter
idivb
cli
mov
sub
sub
sub
ja
mov
push
subb
jne
or
and
ja
js
cmpsb
rolb
repz
sbb
enter
lds
out
or
sub
jecxz
stc
shlb
mov
xlat
ret
adc
pop
insb
mov
sub
jno
lods
mulb
mov
cmp
out
xor
out
and
push
dec
jmp
popa
addr16
shlb
fstpl
movq
push
loopne
sbb
jmp
push
cmp
xchg
sbb
add
mov
loopne
enter
pop
ljmp
lods
jge
jb
sbb
repnz
inc
aad
sti
cmp
out
call
dec
out
sub
hlt
add
call
clc
aas
addl
out
sahf
sub
int3
push
test
aas
lock
insl
aas
filds
and
xchg
lret
xor
push
xchg
fidivrs
push
sub
test
imul
jecxz
jle
mov
mov
mov
pop
and
or
dec
insl
jns
shl
shlb
daa
xor
xor
mov
jb
scas
adc
mov
sti
mov
inc
xchg
idiv
or
add
sub
mov
repnz
cwtl
xchg
aaa
ss
mov
cltd
push
add
add
mov
or
dec
push
test
jbe
hlt
mov
in
addr16
rorb
je
or
mov
inc
mov
dec
popf
ret
xchg
test
in
inc
jno
repz
and
outsb
rolb
xorl
jo
leave
test
push
loop
sahf
shlb
push
je
sub
sbb
fadd
mov
leave
push
leave
es
inc
push
xor
in
lcall
mov
sbb
sbb
aaa
out
add
repz
popf
mov
mov
mov
mov
fdivrp
into
or
adc
xchg
push
stos
movsl
sbb
adc
or
insl
out
aam
mov
sub
adc
cwtl
clc
push
xchg
mov
dec
mov
mov
es
outsb
add
inc
arpl
push
inc
sahf
push
nop
adc
std
push
mov
adc
stc
addr16
mov
cmp
sbb
jg
int3
scas
mov
mov
inc
and
fidivrs
lcall
xchg
cmp
and
out
popa
pusha
adc
dec
inc
outsl
pop
fstps
cli
pop
pop
and
adc
ret
jne
sub
mov
jo
lods
ja
jnp
rcrb
mov
jns
push
ds
lock
add
inc
pop
xor
loop
and
movsb
mulb
fnsave
sarl
ds
jle
cmp
shll
mov
push
stos
enter
imul
pop
sbb
inc
lcall
mov
cmp
int
std
dec
out
jmp
adc
int3
add
cmp
push
pop
xchg
in
negb
mov
in
jnp
add
rol
cmp
xchg
imul
sub
or
adc
lret
and
xor
lock
mul
les
cmp
jbe
fsubrs
adc
xchg
xor
test
sub
fucomi
mov
push
insb
out
inc
lds
rol
mov
ja
outsb
sti
jg
mov
xor
xor
in
mov
xor
pushf
push
xchg
lock
push
mov
mov
push
xchg
pop
dec
or
jecxz
pop
mov
xor
lea
xchg
xor
mov
mov
push
jge
push
out
xor
mov
jl
out
push
scas
andb
fwait
pop
inc
mov
or
or
and
adc
leave
js
jmp
dec
or
mov
bound
mov
add
or
stc
mov
mov
xchg
add
sub
in
adc
jnp
xor
pop
xchg
cs
pop
dec
xchg
enter
jns
xchg
push
xlat
add
mov
mov
popf
out
loopne
or
push
insl
fidivs
pop
ljmp
xor
xchg
mov
pop
add
and
adc
xor
gs
dec
dec
rorb
sbb
pop
jnp
mov
jmp
pop
inc
rcrl
ficoml
popa
js
add
push
or
lret
and
mov
adc
enter
orb
fld
subb
out
push
dec
add
pop
push
aad
fwait
and
pop
out
cmp
xor
lods
iret
lret
into
cmp
adc
ss
test
dec
in
xchg
test
pop
inc
into
shll
ret
xor
xchg
scas
aaa
scas
xchg
mov
cmp
inc
icebp
in
sub
es
pop
inc
movsb
cmp
mov
mov
xchg
sub
sub
sub
das
sbb
arpl
rcrb
push
test
push
xor
or
jo
adc
mov
scas
xchg
or
js
mov
xor
pop
fildll
add
hlt
cmpsb
shl
sbbb
fs
mov
cmp
gs
and
pop
sub
aam
adc
sbb
popf
jne
sbb
jge
clc
pushf
mov
jle
mov
in
fbld
mov
dec
pop
inc
jl
mov
sbbl
and
sub
repnz
es
in
add
jns
sti
jb
cmp
loop
rcrb
lahf
xor
pop
add
rcll
mov
sbb
popa
or
xor
or
sbb
mov
push
enter
fiaddl
mov
int
mov
test
jle
pushf
cmp
in
jne
or
mov
jo
fsts
popf
jne
jp
mov
jp
lahf
jbe
cld
in
cmc
cld
mov
fisubrs
cmpsb
mov
shr
notl
cmp
mov
pop
inc
mov
movsl
cmp
rorl
jne
and
mov
sbb
sbb
mov
adc
fwait
mov
rclb
fbstp
inc
xor
pop
or
xor
cmovp
mov
fcoms
or
in
mov
rol
pop
pop
or
je
xchg
cli
dec
shl
mov
and
mov
sbb
pop
xchg
xor
xchg
pop
subb
mov
imul
xchg
cwtl
sub
jge
ss
lods
ljmp
mov
out
lret
inc
pushf
jl
sar
sbbl
das
stos
sub
rcrb
lods
adc
xor
push
inc
jecxz
ja
ljmp
jnp
jnp
lea
push
push
xchg
dec
jecxz
mov
cwtl
pop
nop
bswap
jmp
mov
xlat
out
mov
mov
mov
shrl
adc
repz
lret
out
sti
sti
es
mov
out
mov
push
sbb
jns
mov
dec
mov
popa
jmp
aaa
fiaddl
movsl
lea
mov
xor
xorl
inc
push
mov
xor
inc
xor
sub
loope
ljmp
push
xlat
cmpsb
push
lahf
cs
cli
sub
aas
je
jbe
arpl
mov
dec
shl
fdivs
push
lret
push
jno
mov
popa
cltd
pusha
pop
das
pusha
mov
lds
int
test
andb
scas
mov
and
xchg
or
mov
lods
outsl
test
pop
xchg
jae
stos
xchg
xor
cmp
pop
mov
pop
xor
pop
mov
mov
xchg
sub
jae
and
pop
aad
out
push
or
pop
sub
or
sbb
fs
ficoml
sbb
cmp
ljmp
sbb
xor
push
lods
xchg
mov
shl
mov
jae
and
mov
sbb
jmp
imul
test
and
jp
mov
or
jnp
popa
inc
or
jno
mov
mov
sbb
popf
in
mov
mov
dec
jle
leave
frstor
cmpsl
push
pushfw
stos
lds
dec
cmpl
pop
sbb
dec
jl
add
inc
adc
lret
sub
insb
adc
inc
iret
fnstenv
mov
cmpsl
ljmp
pop
mov
sub
das
ljmp
mov
dec
popa
lods
push
inc
in
sahf
or
call
stos
mov
ret
icebp
or
push
stos
lods
sub
push
call
mov
jge
lahf
add
and
sahf
and
and
testb
jne
cmp
mov
movsb
inc
lret
xchg
sbb
dec
jmp
out
push
sub
inc
shrl
xor
ret
fimuls
pop
in
adc
das
scas
xor
gs
xchg
jp
decb
xchg
jl
inc
push
inc
cmp
cmpb
movsl
xchg
jnp
mov
add
cmpsb
cmp
insl
mov
xchg
sub
push
pop
mov
fstps
and
mov
sub
in
mov
hlt
mov
add
add
xchg
pop
pop
pop
mov
cmp
sbb
pop
jg
repnz
cltd
mov
ds
xchg
out
les
lahf
sub
push
popf
cmp
stc
or
push
fdivrl
mov
add
aaa
mov
and
add
test
enter
mov
inc
jns
call
push
fs
pop
dec
push
dec
dec
cmp
out
cld
xchg
call
dec
sub
scas
mov
int
out
stos
and
aas
jecxz
stos
or
fists
int
mov
pushl
pop
sub
je
cmovge
mov
iret
push
stos
cld
inc
xchg
loope
push
scas
jmp
fidivrs
jle
jmp
mov
lods
and
xchg
add
insb
and
or
pusha
sbb
mov
popa
fnsave
adc
xchg
fcoms
repnz
inc
mov
pop
data16
xor
js
out
fimuls
and
iret
mov
mov
xor
mov
popf
ljmp
mov
in
lds
or
stos
pushf
xchg
mov
mov
aas
roll
and
mov
jne
push
pop
xor
mov
pushf
jbe
mov
and
fs
ret
out
mov
mov
xor
mov
jge
pusha
or
sub
lahf
int3
push
or
jbe
popf
out
loopne
jle
in
xor
loope
and
ret
inc
repz
pop
pusha
popa
mov
cmp
fsts
aas
or
xor
mov
or
and
jle
imul
addr16
jb
outsl
fadds
mov
out
clc
pop
stc
adc
or
lods
repz
call
add
lahf
movsb
pop
clc
sbb
dec
push
add
sbb
stos
jae
pusha
sahf
fsub
pop
push
adc
inc
sbb
dec
sub
test
stos
inc
scas
or
sub
idivl
inc
out
or
add
push
dec
dec
dec
lret
lea
sub
std
push
mov
lods
imul
mov
push
mov
or
xchg
push
fstl
cmpsb
imul
xor
jge
fucomip
xchg
and
cli
jno
cmp
ret
call
jae
aam
dec
jecxz
out
jge
jp
scas
fdivrl
xor
inc
fldl2t
cmpsl
js
fsubrs
sarb
add
mov
sbb
add
and
sbb
mov
push
cmpb
cld
mov
dec
cmpsb
notb
inc
pusha
xor
mov
roll
ja
and
jne
inc
incl
xor
popf
cmp
sarb
mov
lret
into
cmpsb
adc
in
jbe
addb
cmc
sub
ljmp
into
mov
pop
jno
xchg
or
jle
mov
xor
mov
mov
mov
shrb
lock
scas
insl
push
sbb
sub
es
iret
jne
or
pusha
pop
enter
jp
out
scas
faddp
scas
bound
inc
gs
lret
aaa
stos
add
adc
push
in
ficoml
outsb
cmp
lock
leave
imul
ret
sub
out
fcmovu
xchg
inc
into
jl
dec
das
add
or
stos
or
jp
jo
pop
push
cmp
pusha
or
dec
xor
or
push
or
dec
xchg
or
mov
dec
jle
xlat
pop
int
sbb
ds
lret
out
cwtl
sbb
push
jge
adc
sub
add
mov
mov
icebp
jne
inc
and
test
shlb
add
cld
ja
adc
push
mov
mov
je
push
aaa
arpl
adc
test
int
imul
cmpb
leave
stos
sbb
pop
dec
jmp
sbb
push
into
xchg
push
ficompl
stos
fwait
push
test
ficompl
shlb
rcrb
add
add
cmp
outsl
flds
and
leave
dec
cmp
js
sbb
popf
nop
mov
outsb
mov
test
mov
pop
stos
incb
sub
in
jo
idivl
imul
out
xchg
mov
pop
mov
xchg
lods
xor
outsl
xorl
pushf
jno
jp
int
ret
adc
add
mov
add
push
call
ja
mov
imul
cwtl
pop
push
enter
in
int3
jg,pt
insb
arpl
lret
cli
inc
fwait
insl
pop
jae
in
loop
xchg
xor
sub
pop
insl
mov
xor
xor
jl
or
mov
mov
or
jl
and
mov
into
int
pop
clc
neg
mov
push
ljmp
sar
clc
and
aaa
imul
xchg
mov
mov
lock
imul
cltd
pop
rcrl
cmp
and
fmuls
outsl
cmp
and
dec
dec
fisubrl
js
push
lcall
push
enter
xor
cltd
sbb
aas
enter
inc
xor
pop
pop
mov
nopl
jp
cmp
xchg
icebp
stc
xor
or
xlat
cmp
and
xchg
jl
dec
or
xchg
imul
in
pushf
jp
or
sbb
lret
push
jg
loope
stos
xor
mov
xchg
push
or
dec
int
shl
call
xchg
cmp
sbb
pop
lods
inc
mov
scas
imul
mov
stc
repnz
jg
xchg
je
mov
fidivrs
push
aas
dec
pop
addr16
jne
cmp
lods
leave
sbb
pop
mov
icebp
aaa
mov
sub
insb
dec
ret
mov
gs
push
rorl
inc
outsb
sbb
xor
in
or
and
je
dec
orl
neg
push
mov
movsb
js
jne
sbb
ljmp
adc
mov
xchg
pop
aad
dec
xchg
xchg
sbb
movb
dec
sbb
cs
add
adc
ss
jnp
call
xchg
adc
and
push
mov
pop
or
mov
movsl
loop
or
jmp
cwtl
mov
lea
xor
mov
dec
test
add
lock
incl
in
lds
add
lods
outsb
hlt
lahf
pop
lret
dec
xchg
movsl
rcrb
mov
cli
or
movsb
xchg
xchg
stos
cwtl
sbb
fisttpll
nop
sbb
repnz
rorl
idivb
aad
in
and
sub
dec
cmp
push
mov
pop
inc
lea
add
and
pop
insl
iret
dec
push
in
insl
int3
movsb
cmc
push
inc
loope
and
adc
xchg
dec
dec
into
aaa
rol
xor
jle
out
fdiv
xchg
dec
ret
jge
fldcw
dec
mov
roll
leave
inc
bound
sub
push
push
nop
test
mov
popf
dec
xor
les
push
repz
xchg
stos
pop
inc
jb
dec
pop
or
adc
mov
and
jge
mov
stos
ret
std
jecxz
fdivrs
imul
sbb
jl
cmp
jbe
js
inc
add
mov
lock
das
push
iret
aaa
jb
push
mov
adc
sbb
int
dec
xorl
scas
push
mov
or
ds
push
ret
imul
jge
movsl
push
imul
inc
iret
xchg
add
imul
pushf
and
push
cmc
lock
test
adc
call
popa
or
pop
pop
jbe
pop
daa
imul
sub
pop
mov
dec
jmp
ret
xchg
or
fistps
dec
add
lods
jnp
dec
pop
mov
sub
or
loop
cmp
testl
dec
in
fwait
ja
aam
je
ds
rcrb
and
xor
push
dec
or
adc
scas
jns
pop
or
scas
lret
inc
cs
js
mov
aam
dec
call
lods
in
lods
loop
add
jp
xor
bound
inc
pop
fisubl
push
sbb
xchg
inc
dec
dec
jbe
fwait
inc
adc
dec
sbb
adc
xor
orb
sbbl
cmp
add
into
lds
sbb
int3
out
mov
add
sub
xchg
lret
mov
loopne
push
out
cmp
jbe
shll
test
shll
leave
pop
decl
lock
inc
add
cmpsl
imul
pusha
push
in
adc
or
push
stos
mov
test
movsb
cmp
js
and
pop
inc
jno
sub
sbb
push
push
leave
movsb
andl
xchg
inc
lock
fneni(8087
cli
push
andb
ds
mov
inc
mov
mov
or
add
mov
or
imul
ficoml
movsb
les
push
push
pop
les
jl
xchg
cltd
sbb
hlt
js
test
xchg
outsl
ja
mov
in
fmul
incb
inc
jb
mov
aam
xor
mov
inc
dec
inc
leave
push
pop
shrb
pushf
bnd
mov
out
jnp
mov
or
repnz
sbb
pushf
push
lods
sbb
mov
push
mov
lods
jmp
jp
pushl
mov
cmp
mov
mov
mov
pusha
push
mov
call
push
inc
pop
adc
fisttpl
push
dec
imul
xchg
sbb
mov
mov
push
fs
lock
xchg
movsb
xadd
mov
imul
push
mov
out
fisttpll
lret
mov
stos
rclb
dec
dec
in
lahf
addr16
inc
shlb
add
data16
adc
sbb
cmp
sub
sahf
and
or
in
arpl
mov
xlat
or
pop
lods
ljmp
dec
push
notl
data16
and
ja
nop
je
rcr
repnz
mov
in
jp
cmp
mov
rcrl
sub
xchg
imul
push
add
dec
pusha
jl
add
pusha
outsl
or
pusha
mov
xor
and
rcll
mov
adc
add
or
xlat
data16
and
xchg
sbb
test
mov
sbb
lods
scas
loope
sbb
addr16
and
push
loopne
imul
lret
push
mov
stc
das
out
sahf
inc
mov
xlat
pop
push
or
int3
add
in
mov
sbb
mov
pop
xor
adc
cmp
jle
and
addl
iret
int
mov
notl
adcl
mov
fbld
lea
xchg
xor
or
test
dec
mov
outsl
out
sbb
pop
scas
pop
loopne
sbb
pop
add
popf
and
push
xchg
popa
sbb
cmp
cmc
xchg
sub
jmp
mul
mov
movsl
or
addr16
mov
mov
pop
add
lret
xor
push
lcall
push
arpl
jp
push
dec
mov
fidivl
or
leave
jbe
fmul
sub
mov
cmp
mov
pop
decb
or
insb
in
mov
fisttps
sub
mov
das
dec
aas
in
js
add
test
adc
jno
and
push
enter
sub
test
lods
sub
or
mov
or
int
clc
dec
xor
mov
pushf
test
add
sub
stos
ljmp
xor
mov
push
fs
aaa
mov
push
int3
xchg
fistpl
xorb
cmp
lea
mov
sbb
imull
push
jb
xor
shrb
cmp
pop
aad
mov
lret
add
das
cs
mov
je
or
push
in
jmp
mov
incb
cs
cltd
fwait
lods
sahf
lea
add
cli
xchg
pop
jb
sub
dec
movsb
push
jp
je
mov
mov
lds
movq
cmp
ljmp
add
mov
pop
xor
call
xchg
insl
pop
inc
adc
jnp
mov
jbe
xor
loop
loope
push
in
cmpsb
fbld
pop
xchg
lods
push
shll
movsl
fistps
or
xchg
push
mov
mov
lcall
jns
xor
push
cltd
adc
mov
sub
jae
test
mov
mov
push
jecxz
or
pop
mull
sbb
out
mov
repnz
and
inc
push
loope
xor
jmp
mov
mov
or
js
movsl
paddd
cmpsl
shrb
jo
stos
push
aas
mov
stos
mov
repnz
xchg
lret
sub
sahf
xchg
jb
movsl
in
testl
inc
mov
hlt
repnz
into
call
iret
imul
adc
lret
sbb
adc
outsb
lock
cmp
nop
bound
inc
lods
adc
repz
outsl
push
shll
add
pop
pop
rcrb
xchg
or
cli
mov
dec
add
pop
iret
or
push
and
loop
fwait
sub
ret
pop
rcpps
mov
sahf
inc
or
jg
jb
push
mov
cmp
test
pop
push
imul
sti
push
test
outsl
adc
inc
xor
lea
mov
scas
scas
mov
in
bound
movsb
aam
xor
pushf
jp
push
mov
aad
mov
sti
nop
and
ja
ret
iret
cmp
push
out
jbe
xor
es
int3
cli
jnp
sbb
rcr
cli
push
les
jno
pcmpeqb
stos
pop
addb
mov
imul
in
testl
rcrb
mov
test
or
or
jo
adc
daa
adc
mov
sbb
fisttps
pop
ja
paddq
adcl
pop
fstpt
or
mov
loope
das
or
data16
dec
sbb
mov
sub
das
xor
repnz
adc
mov
das
ret
adc
or
xchg
adc
lods
adc
dec
call
xor
push
fidivs
mov
xchg
inc
pushf
and
stos
int
enter
mov
lods
push
sbbb
mov
cs
and
and
add
pop
stc
js
push
jmp
out
lcall
fmulp
sub
dec
mov
addr16
add
std
test
push
and
stos
std
daa
fucomi
pop
cmp
in
inc
jp
test
ljmp
inc
cmp
and
aam
sub
rcrb
inc
or
pop
or
pop
lods
or
roll
or
inc
stos
in
mov
stos
sarl
in
fisubs
aas
xchg
ss
jl
cs
ret
iret
xor
ret
cli
clc
sahf
scas
cmp
push
xor
or
mov
sub
xchg
sbb
fwait
test
sbb
incb
cmp
aas
pop
xor
enter
out
int
jae
jo
mov
es
adc
lea
inc
sarb
outsl
call
jl
push
jae
pop
adc
stc
cmp
shll
fnstenv
adc
jo
clc
lods
mov
push
lret
and
mov
dec
xor
mov
mov
jmp
pop
cld
push
xchg
leave
mov
lds
in
clc
mov
lea
stc
je
loope
inc
add
lcall
and
subl
mov
adc
mov
stos
je
xchg
out
mov
xrelease
les
and
sub
rorb
insl
std
push
fistpl
adc
sbb
pop
clc
cmp
cmpsb
je
xor
pop
jecxz
cmp
js
adc
inc
imul
loope
fwait
ds
sub
pop
xor
xor
enter
adc
loop
cld
adc
add
test
mov
ret
out
das
sub
sub
aas
push
push
jp
stos
pop
jno
inc
lea
in
in
psubd
arpl
daa
out
pop
inc
or
ljmp
out
sub
jl
popf
xor
out
ret
ret
pop
sub
and
xor
ljmp
mov
and
cmp
xchg
dec
dec
mov
cld
sbb
cmp
sub
xor
loopne
lods
mov
lods
dec
mov
test
jecxz
adc
mov
aam
rorb
jle
pop
mov
call
icebp
xchg
add
rcrb
mov
or
push
sub
adc
jl
jp
addb
push
adc
dec
pop
add
out
xor
cmp
int3
add
sbb
sbb
daa
dec
cltd
or
jae
mov
jge
daa
and
mov
ds
repnz
add
jnp
jbe
popf
dec
mov
jge
ficompl
xor
pop
sub
inc
insb
leave
rol
adc
inc
sub
jnp
arpl
jg
fs
std
dec
mov
inc
pop
add
xchg
mov
cwtl
out
icebp
and
movsl
cmc
lods
push
int
data16
pop
xchg
out
cmp
xchg
orb
or
sahf
and
or
ret
jae
cmp
leave
cmp
fistpll
xor
mov
add
adc
mov
test
adc
iret
or
jmp
push
sti
xchg
xchg
mov
sub
movsb
cld
adcl
xchg
pop
add
imul
sub
or
xor
rcrl
punpckhbw
push
xchg
sbb
ret
xlat
xor
dec
cmc
inc
rcrl
xchg
rcll
aam
ss
add
fdivr
sahf
das
add
xchg
push
aam
or
xor
mov
fiadds
test
repz
js
out
cmpsl
es
jb
subb
lock
leave
and
shrb
movb
sbb
insl
jae
es
fdivr
push
push
pushf
movntq
jle
xchg
hlt
adc
jp
lahf
mov
pop
jmp
imul
and
scas
xlat
int
lea
add
mov
dec
inc
movsb
xchg
popa
pop
inc
loope
cmp
xchg
add
sbb
or
lcall
mov
and
mov
cltd
adc
jge
js
dec
pop
inc
pop
mov
push
sub
cli
mov
popf
add
and
fimull
outsb
test
mov
out
jl
cmp
cmp
xchg
mov
ret
mov
pop
dec
out
cwtl
xchg
cmp
and
aaa
pushf
dec
inc
adc
adc
cld
cld
add
adc
scas
cwtl
ss
sbb
ret
jl
lea
int3
jge
pop
mov
cmp
lds
rorl
pop
mov
cld
add
jnp
adc
dec
popa
jmp
clc
pop
arpl
fstpl
out
addr16
aas
push
xchg
dec
cmp
es
xchg
jo
js
fsubr
mov
outsl
repnz
add
popf
mov
pop
rol
xchg
push
fwait
mov
mov
mov
imul
cltd
or
jge
push
sbb
push
hlt
jmp
mov
sub
adc
mov
xchg
test
movsb
in
pop
mov
ss
mov
add
adc
lods
pushf
aas
pop
push
cld
mov
mov
rcrb
cmp
lret
aas
mov
aad
push
mov
andl
mov
adc
gs
add
xor
cwtl
or
push
pop
add
mov
shll
pop
je
lods
pop
sbb
aad
addr16
xor
and
mov
jp
test
movsl
sahf
jnp
inc
cmp
push
xchg
sub
sti
or
in
jne
int
add
fistl
imul
mov
or
mov
jl
popf
cmpsl
fsts
decl
out
shr
enter
rcrb
out
cmp
xchg
sub
push
shlb
sub
push
adc
push
loope
jb
in
push
push
icebp
flds
push
and
xchg
inc
mov
xor
int
icebp
sub
push
mov
mov
icebp
out
int3
out
or
sub
mov
mov
mov
xchg
in
push
out
fidivrl
inc
pop
mov
cmpsb
test
push
repnz
nop
mov
outsl
mov
jg
fnstcw
pop
mov
js
or
roll
rcll
cmp
and
fdivrs
loop
xchg
ficoms
xor
or
or
mov
ja
repnz
in
jo
jbe
or
mov
dec
push
xchg
sub
xor
arpl
pop
shll
cltd
add
push
inc
jl
bound
mov
and
inc
mov
shr
push
outsb
mov
dec
lods
es
lods
and
xchg
add
mov
outsb
lds
inc
inc
jle
test
inc
xor
mov
sbb
push
and
and
push
lret
fiadds
repz
fwait
or
in
sbb
dec
shll
fwait
mov
xchg
cld
sbb
pmaxsw
push
dec
sub
jbe
cmp
pop
or
pop
or
lcall
push
std
pop
push
xor
and
nop
stc
mov
mov
lret
orl
xor
cltd
jo
jo
fwait
mov
pop
cmp
cmpsb
imul
std
adc
push
cmp
pop
xor
push
mov
sbb
sub
into
inc
outsb
lahf
push
mov
push
pop
pop
enter
mov
fiaddl
cmp
fsts
rolb
mov
sub
nop
loopne
inc
dec
pusha
add
push
cmp
sub
adc
push
aad
mov
jno
or
fs
repnz
inc
add
mov
js
mov
pushf
cmp
cmpb
jp
xchg
cmp
mov
mov
stos
and
adc
ret
inc
pop
imul
and
cwtl
cmp
ret
and
sbb
test
push
fwait
adc
pushf
cmp
push
clc
adc
fisubs
data16
xchg
outsl
pop
jle
gs
nop
icebp
inc
outsl
test
pop
inc
and
lret
lahf
xchg
outsb
cld
lret
mov
xchg
imul
mov
xchg
stos
scas
adc
xchg
mov
adc
hlt
xchg
mov
sbb
xchg
fsts
inc
inc
xchg
sbb
ret
xchg
lret
les
pop
lahf
inc
xor
jbe
jecxz
and
xor
push
sahf
sbb
lds
scas
pop
sbb
jecxz
fs
jne
arpl
inc
or
mov
xchg
inc
jecxz
in
dec
jno
in
fcoms
push
sbb
inc
pop
in
or
dec
pop
movsb
jb
test
push
dec
ret
xor
in
iret
mov
and
cs
call
push
jecxz
pop
add
je
cltd
ds
aaa
xchg
fdiv
jmp
jnp
loope
ljmp
jne
jo
xchg
in
push
mov
inc
inc
les
mov
dec
bound
sub
jnp
mov
mov
mov
sub
sbb
or
repnz
pushf
cmp
mov
mov
inc
es
cmp
loop
add
dec
sahf
xchg
lea
inc
pop
and
mov
inc
fisubl
lock
fidivs
fmull
mov
pop
xchg
test
subb
popf
mov
jecxz
in
cmp
mov
inc
add
aaa
pop
mov
mov
and
in
cmp
inc
stos
out
fldl
fdivr
sbb
dec
xorl
adc
add
jg
push
pop
or
jns
bound
cmpb
pop
cmp
xor
inc
fadds
mov
test
mov
repnz
es
push
mov
mov
mov
add
lret
or
testb
movsb
add
negb
sbb
fdivr
call
inc
add
popf
nop
jae
out
shl
pop
loop
mov
addr16
in
in
popa
sub
stos
cli
fcomip
mov
pop
cmp
pop
mov
push
jle
cmovae
xchg
rcrb
sub
leave
adc
fs
adc
pop
push
loope
iret
adc
cmp
pop
rol
push
jle
mov
addl
fwait
test
fwait
jae
and
cmpsl
jo
add
jno
idivb
lea
ret
cmc
lret
dec
aas
pop
dec
dec
cmp
cmp
andb
mov
fistpll
or
adc
or
add
das
fidivl
xchg
xacquire
lods
pop
jp
add
popa
filds
jo
and
mov
adc
aam
cli
ds
sub
daa
fnstenv
ret
imul
xchg
mov
loop
data16
adc
or
or
mov
sub
fs
jns
faddl
add
add
js
mov
in
mov
cmc
cwtl
pop
imul
dec
loope,pn
ja
fwait
jbe
fsub
jg
lods
mov
punpckhbw
mov
cmp
mov
lahf
js
jo
and
negb
sbb
pop
add
pusha
cmc
notl
pop
test
mov
clc
ret
pop
aam
stos
lods
jnp
lea
jbe
jmp
pop
pop
call
cmp
fldl
pop
cmp
jmp
xor
sub
xchg
repnz
pop
mov
cmp
mov
push
movl
mov
loope
adc
addr16
insl
inc
jbe
push
stos
setnp
iret
adc
mov
and
int
pop
add
stos
repz
push
add
sahf
call
push
in
adc
jnp
fistl
in
jg
cmpsl
test
mov
lock
bound
sbb
sbb
xchg
lret
pop
xchg
adc
push
loope
mov
jae
inc
inc
sub
out
cmp
push
aaa
pop
or
sbb
sbb
aas
popa
cs
mov
xchg
dec
xchg
fldenv
adc
push
test
add
fidivl
and
mov
xchg
les
jmp
pop
pop
hlt
inc
addl
dec
adc
push
sub
stos
es
mov
mov
mov
jns
xor
out
push
stc
cmp
in
push
test
gs
jnp
pop
sbb
mov
sbb
in
jmp
mov
mov
add
mov
sub
sub
xchg
pushl
int3
push
fcom
cmpsl
stc
pop
xchg
fdivrl
les
movsl
sub
aas
lahf
and
mov
mov
lahf
adc
mov
mov
stos
lods
push
adc
pop
enter
jae
dec
jne
iret
mov
or
pop
pop
sbb
aas
push
into
sti
pop
pop
mov
std
sahf
iret
imulb
xchg
int
sbb
pop
cmp
cmp
insl
mov
jmp
into
sbb
cmp
sbb
sub
mov
aam
push
popf
add
sbb
push
mov
mov
scas
mov
mov
xchg
outsl
lea
lods
les
and
or
mov
pop
jle
and
xor
mov
or
xchg
mov
js
cltd
push
pop
movsl
iret
inc
add
xchg
or
or
in
xchg
aam
jmp
cmp
push
inc
das
sub
pop
shll
xchg
add
js
out
mov
nop
loope
mov
std
jl
aaa
call
out
cmp
icebp
pop
mov
inc
test
adc
dec
test
pop
cs
gs
or
inc
out
xor
insl
push
stos
lret
push
mov
mov
repnz
icebp
sub
or
xchg
loop
nop
test
stos
cmpsl
pop
pop
pop
cmp
subl
int3
xchg
or
imul
add
inc
mov
jae
inc
cmp
insb
pushf
inc
sbb
daa
ret
dec
arpl
enter
jbe
cmpsl
sub
cmp
aam
jecxz
dec
xchg
add
inc
cmp
mov
jp
sub
adc
and
iret
cmp
repz
cltd
sarb
or
sub
iret
aad
jae
or
sti
pop
les
movsb
das
out
jbe
mov
mov
jge
stos
hlt
xor
sbb
or
xchg
mov
mov
into
scas
cmp
xor
jle
push
and
sub
jbe
in
mov
cmp
mov
es
cltd
je
sub
or
arpl
xlat
cli
mov
mov
mov
xchg
pushf
push
imul
popf
stos
enter
scas
loope
arpl
jo
mov
sub
shlb
xor
xlat
insl
xchg
push
js
shrl
outsl
push
and
mov
jmp
sub
aam
cmpb
insl
addb
pop
insl
adc
fst
sahf
mov
and
fcomi
jg
sbb
cmp
addr16
sahf
ret
jecxz
mov
sub
and
jg
lods
rcr
popf
jbe
pop
and
mov
insb
mov
ja
xor
fucomip
inc
mov
or
sub
sub
add
mov
sbb
jmp
repnz
pop
adc
xchg
lock
out
push
sub
xor
enter
jge
cmpsb
hlt
jbe
out
shrl
dec
cmp
loope
rcrb
mov
pusha
xchg
vdivss
div
jp
dec
lock
rcrl
ljmp
call
pop
mov
js
sar
std
out
xchg
cmpsl
sarb
sbb
outsl
mov
push
movsb
mov
fs
dec
cwtl
sbb
mov
xor
mov
test
lds
sub
push
fiaddl
sbb
cmp
xor
rcr
imul
pmaddwd
scas
shl
hlt
lds
inc
inc
outsl
shrl
inc
jl
movsl
pop
xor
sub
sub
and
jp
js
dec
push
xor
int3
stos
jle
arpl
nop
into
insb
jb
add
dec
adc
mov
ret
push
push
mov
imul
popf
out
dec
dec
movsl
xchg
and
movsb
xor
sub
adc
out
fnstsw
add
or
pushf
inc
fcomip
mov
xchg
lcall
mov
loop
into
or
sbb
pop
inc
mov
adc
push
cli
aam
jecxz
mov
jns
in
imul
jo
push
test
sub
adc
cmp
mov
aas
mov
pop
jge
xor
lret
adcb
and
cmpsl
scas
cmpsb
dec
stos
inc
and
mov
sahf
and
sbb
pop
xor
mov
jbe
push
mov
mov
xor
add
push
dec
mov
fs
js
lods
lods
mov
pop
adc
imul
aad
dec
sbbb
and
les
sbb
cmpl
and
add
outsl
jo
dec
mov
dec
ds
sbb
in
add
mov
out
jl
mov
insb
adc
jmp
sahf
sub
or
push
cld
mov
cmp
inc
stc
sbb
jmp
jb
cld
mov
mov
adc
aas
leave
mov
rolb
dec
scas
fcmovne
or
inc
sub
jb
cmp
push
sbb
jae
jle
fnsave
mov
jne
hlt
ds
ja
adc
ret
scas
dec
and
cmovle
push
push
jno
adc
xchg
shlb
cmp
rol
xor
popa
cmp
sahf
fidivl
push
mov
or
adcl
popf
mov
stos
imul
push
mov
sub
push
jmp
dec
cmp
insb
sub
mov
imul
fs
ss
scas
cmp
add
jge
inc
sahf
and
push
add
jl
cmp
in
std
rsqrtps
arpl
loop
sub
mov
pusha
or
cwtl
push
mov
xor
adc
pop
push
or
cwtl
cmp
jmp
push
inc
sub
aaa
mov
stc
pop
mov
cmp
dec
jmp
arpl
dec
loope
ds
sbb
test
mov
leave
push
aam
clc
lea
xlat
iret
movsl
int
das
mov
out
cmp
insb
lahf
fldt
mov
lret
jp
outsl
mov
bound
psubsw
mov
jbe
xorl
inc
adc
sti
aaa
xor
cmp
cmpsl
nop
xor
movsb
or
xor
and
sub
mov
push
call
pushf
aad
add
loopne
das
push
sahf
fbld
arpl
ret
es
or
mov
lods
es
mov
dec
or
mov
fwait
sbb
mov
jle
lods
inc
mov
push
es
jb
mov
and
les
mov
push
and
repz
dec
cmp
jmp
cmp
imul
loopne
icebp
leave
adc
inc
or
outsb
lods
push
xchg
mov
loop
cmpsb
cltd
sbb
jnp
mov
andl
jg
jo
xchg
addl
jg
cli
dec
mov
or
lret
xchg
xchg
call
mov
adc
push
mov
push
xor
pop
jg
jbe
cmpsl
mov
insb
incb
sub
adc
hlt
jne
imul
pop
hlt
jle
cli
pop
popf
outsl
scas
iret
addl
fsubs
hlt
and
cmp
jg
jmp
lcall
jns
sub
cmpl
add
cmp
add
sub
inc
sbb
int
outsb
leave
int3
jne
sbb
lock
mov
jecxz
enter
stc
cmpsb
cld
repnz
add
movsl
sbb
js
lods
pop
ds
xchg
call
leave
pop
jmp
std
mov
pop
fsubrs
rcrb
stc
jl
and
movsl
test
fmull
jmp
push
loope
daa
js
xchg
mov
loope
mov
push
out
jp
pusha
pop
xchg
incl
jb
push
push
and
nop
cmpsb
les
push
stos
pop
ss
inc
mov
imull
in
test
or
cli
pop
mov
jbe
jns
aad
mov
repnz
mov
push
bound
jno
mov
mov
adc
out
pop
xor
aas
mov
mov
imul
xorb
pop
xorps
loope
jb
out
add
into
imul
adc
adc
in
pop
inc
mov
jp,pt
rorb
in
das
xchg
jnp
mov
in
and
cmp
sahf
jp
popa
or
aad
aas
jne
lret
xor
scas
aas
bound
sbb
outsl
xchg
shl
mov
jne
mov
in
or
idivl
xchg
push
sbb
cmpb
mov
in
or
movsl
xchg
jmp
int
pop
lock
jle
fnstsw
pop
xchg
sbb
adc
dec
adc
fs
gs
and
xor
mov
pop
xchg
xor
pop
cli
xor
pusha
dec
test
pop
inc
sti
lahf
mov
mov
sbb
test
sub
adc
xlat
sub
je
jnp
jmp
inc
xchg
loopne
movsb
mov
test
and
leave
sti
jmp
mov
leave
das
aad
and
jmp
bnd
std
scas
pop
dec
fstps
xchg
xchg
out
sbb
mov
xor
jecxz
outsl
and
push
push
shll
jle
xor
insl
arpl
fyl2x
leave
adc
bound
stos
sbb
ds
mov
jl
ja
xor
inc
push
fwait
inc
jle,pt
xor
push
sbb
jo
sub
bound
add
stos
scas
stos
pop
xchg
jns
xchg
mov
and
mov
aad
dec
and
inc
nop
push
xchg
std
in
lds
add
je
js
cmp
data16
das
outsl
mov
pop
inc
mov
test
test
bnd
fwait
cmp
or
pop
xchg
out
loope
mov
jo
addr16
dec
cmp
mov
fcoml
arpl
or
cmp
les
inc
into
rol
and
jl
xlat
sarl
xchg
jmp
sub
pop
and
jb
push
jb
or
push
bound
div
fdivl
sub
pop
aas
and
dec
or
add
pop
lock
lea
iret
ds
mov
aas
sbb
jle
mov
push
inc
bound
xor
push
mov
cmp
mov
mov
daa
mov
inc
dec
daa
sub
jo
dec
outsl
aad
rcrl
and
jae
nop
push
movsb
jb
jmp
xchg
aam
je
dec
out
icebp
add
mov
fimuls
adc
pop
mov
push
mov
pop
shl
push
in
shlb
and
mov
adc
push
addb
cmpl
insb
inc
insl
ss
or
je
jns
xorb
les
mov
cld
adc
roll
cmp
cmpl
cmp
xchg
push
aad
jne
push
dec
and
sub
xor
push
jecxz
add
lahf
aam
jle
inc
fidivrs
data16
pop
mov
xlat
lea
pop
add
push
in
add
cmc
lock
mov
and
out
mov
scas
xchg
insl
sbb
xchg
pop
rcrb
dec
jo
adc
xchg
js
sbb
outsb
inc
push
xchg
jb
iret
or
jae
lret
inc
aad
test
fnstcw
sarl
adcl
jno
push
shl
sbb
mov
std
mov
pop
cli
inc
fcmovnu
popf
xchg
lahf
ja
ja
mov
mulb
xchg
mov
pop
popa
leave
mov
fstp
cmp
sbb
and
push
adc
sbb
add
sarb
pop
pop
loop
cmc
mov
mov
notl
push
mov
mov
fisttpll
push
dec
mov
cltd
enter
fistps
adc
jge
rcr
cmpl
or
sbb
xchg
inc
inc
push
or
push
and
fwait
popa
mov
stos
xor
lds
and
mov
out
insb
pop
mov
mov
fs
dec
shlb
and
lea
test
mov
imul
jl
jle
xchg
add
jle
movsl
into
mov
outsb
rorb
cmpsl
jp
inc
mov
popf
mov
ret
push
mov
dec
adc
jecxz
sbb
clc
cmpsl
mov
and
insl
aad
out
lds
xchg
pushf
adc
nop
adc
cwtl
pop
and
fsub
orl
out
dec
rorl
test
pop
dec
incb
test
test
es
in
cmc
es
or
jg
adc
push
nop
jb
inc
pop
xor
rolb
mov
lock
mov
push
in
fld
pop
push
add
xchg
add
test
stc
jbe
lret
mov
mov
iret
jmp
xchg
mov
sbb
or
inc
xchg
mov
or
dec
mov
add
mov
scas
xchg
cmpsl
inc
test
sub
sub
cwtl
mov
or
stc
nop
xchg
and
call
push
popa
pop
dec
inc
mov
pop
out
nop
sbb
subl
push
movsl
stos
dec
adc
dec
jmp
cmc
sub
loop
add
shll
xor
nop
cmc
jae
inc
mov
out
dec
push
std
jle
mov
insl
lahf
mov
pop
filds
sti
xchg
out
in
cmpsl
jp
cld
adc
aas
xchg
mov
test
adc
hlt
test
mov
rorl
nop
push
rorl
adc
imul
movsl
or
jbe
mov
mov
and
inc
std
pop
pop
jbe
push
and
cmovle
xchg
dec
push
jle
jmp
adc
add
aaa
enter
inc
int
push
sub
and
xchg
pop
adc
loope
cltd
push
sar
psllw
lock
popf
dec
int
loopne
push
cmc
mov
mov
adc
push
or
xor
cmpsb
or
shl
inc
iret
faddl
add
lahf
movsb
scas
ljmp
shll
notb
mov
dec
lods
rcr
and
mov
fisubl
push
sbb
lea
jl
mov
inc
mov
jle
jo
into
mov
mov
adc
lock
icebp
push
mov
scas
jmp
sub
jne
push
cmp
loope
arpl
pusha
adc
add
fcmovnu
ds
mov
sub
add
popa
cmp
pop
sub
cmp
subb
fmuls
mov
pop
sub
shlb
dec
pop
and
adc
cwtl
cmc
aaa
xor
ret
incl
in
push
lods
or
and
inc
cs
leave
jns
in
xchg
nop
lods
into
jmp
test
leave
xchg
lahf
and
ficoms
aad
mov
pop
mov
rorl
mov
lods
and
xchg
icebp
aaa
sbb
mov
les
xchg
pop
push
push
movsl
jnp
mov
jle
fcoms
xor
pop
into
cwtl
dec
scas
jae
fdivp
sub
outsl
lret
xchg
dec
in
pop
bound
pop
pop
ror
mov
cmc
addr16
decl
cmp
sub
jecxz
xor
add
dec
fcompl
mov
or
ret
or
and
push
xor
mov
or
pop
movsl
bound
dec
fdivrl
mov
frstor
loope
sub
jg
sub
inc
mov
inc
lock
arpl
hlt
xor
jbe
and
jecxz
out
sub
xlat
add
mov
mov
mov
and
imul
mov
std
lcall
mov
xor
xchg
mov
sub
imul
int3
pop
test
adc
xchg
bound
adc
pop
jl
pushf
lret
iret
int3
ja
int
mov
or
dec
mov
dec
mov
and
lahf
adc
pop
jne
je
outsb
dec
insb
cmp
xchg
mov
jns
pop
mov
stos
jb
out
pop
sub
inc
rorl
sbb
xchg
leave
xchg
test
sbbb
dec
dec
mov
mov
test
sarl
jge
shll
pop
mov
or
add
sahf
imul
test
ljmp
add
aaa
sahf
mov
movsl
pop
shrb
mov
and
jmp
sbb
and
and
sub
dec
fwait
jmp
dec
out
repz
sqrtps
or
inc
fwait
sbbl
rcr
imul
pushf
std
repnz
js
addr16
inc
into
inc
xchg
adc
push
push
test
je
fistl
shrb
xchg
jbe
movl
xchg
enter
enter
sti
in
mov
add
push
shl
ljmp
jae
and
or
sar
aam
and
adc
jnp
adc
jo
test
add
leave
popa
push
popf
addr16
fdivl
cltd
sub
mov
movsb
sub
js
and
lea
fxch
jl
mov
out
jo
and
jno
mov
pusha
repz
xor
ret
adc
push
cmc
lret
addr16
sahf
pop
rcrl
pop
bound
stos
leave
mov
out
lods
adc
pop
and
dec
mov
stos
shll
mov
xchg
dec
pop
shrb
dec
repnz
mov
ljmp
loop
sti
lea
adcb
js
pushf
ljmp
pop
icebp
jle
mov
adc
aas
dec
out
push
and
push
add
fbld
lret
add
xchg
jge
sub
lock
adc
in
and
ja
aas
leave
push
ficoms
dec
ja
insb
sub
inc
jmp
aas
hlt
push
inc
push
in
vmovhps
mov
out
pop
decb
jo
dec
or
lods
out
xchg
jb
sub
and
inc
and
xor
xor
adc
inc
xor
xor
scas
movsb
jl
fstps
add
xlat
add
cmpsb
cmp
cld
push
add
mov
loopne
mov
mull
out
rcr
push
ja
lock
pop
pop
adc
dec
jge
jmp
lret
mov
repz
xlat
ljmp
lcall
imul
jmp
mov
mov
push
mov
loop
loopne
outsb
jg
in
and
sarb
mov
fmuls
mov
test
cmpb
shlb
xor
dec
mov
imul
pusha
sbb
pop
sub
enter
test
ss
testl
push
dec
mov
out
jbe
jne
test
loopne
xchg
shrb
mov
mov
out
xchg
shll
sti
sub
pop
push
push
inc
js
shrl
loop
out
mov
pop
push
ss
lret
in
dec
cli
sti
xchg
sbb
mov
xchg
push
cmp
add
adc
aad
rcrb
popa
ds
lcall
rcrl
jp
mov
xor
out
dec
cmp
lret
add
mov
and
into
in
ret
ds
add
test
pop
sbb
fs
lret
xchg
loop
sbb
xor
dec
push
cmp
push
addr16
cmpsb
add
dec
jae
jge
lods
and
mov
inc
stos
lcall
out
call
add
dec
sub
imul
leave
mov
sub
notb
xchg
pop
int
out
adc
scas
jns
lea
push
hlt
sub
add
lret
and
or
imul
inc
pop
inc
push
mov
mov
push
push
iret
push
ret
inc
sbb
nop
stos
jae
mov
in
xchg
lea
xchg
test
shrb
scas
mov
mov
pop
and
mov
js
or
inc
imul
fs
pop
push
jb
sbb
cmpsb
pop
mov
mov
imul
dec
mov
inc
push
mov
mov
sub
iret
dec
sahf
lret
sarb
mov
mov
in
rclb
or
stc
mov
and
jp
jle
fiaddl
iret
mov
popa
lret
inc
xor
xchg
das
pusha
cmpl
in
cmp
insb
out
pop
in
push
enter
scas
mov
inc
mov
repnz
pop
subl
daa
sti
aaa
jge,pt
jnp
cmp
xchg
adc
in
push
xchg
repz
notb
and
jae
xchg
mov
adc
or
cmp
testb
jle
jp
push
cs
int3
enter
test
lock
cmp
ror
bound
out
push
js
xchg
nop
jmp
test
mov
sub
popa
rcrb
rolb
or
addr16
rclb
repz
mov
test
lods
pop
cmpb
sub
je
pushf
or
rcl
xor
ss
cmp
lret
sbb
xchg
inc
pop
test
mov
out
je
mov
int
push
data16
jae
xor
push
sub
pop
rcrb
mov
push
and
or
std
mov
sub
sub
int3
mov
fwait
pushf
test
and
fsubr
sbb
and
add
fwait
push
xor
mov
out
scas
test
pop
inc
push
clc
adc
shlb
aas
insb
xor
mov
fidivl
cmp
jmp
push
lahf
sub
xlat
or
mov
inc
imul
cltd
stos
ss
pop
jl
inc
push
sbb
test
adc
fldenv
test
sub
dec
cmpsb
jmp
leave
arpl
lods
mov
scas
xor
mov
add
out
jnp
and
pop
mov
pushf
push
add
cld
sub
sbb
test
ret
xor
daa
pushf
fstp
outsl
cmpl
cmp
xor
sub
xor
jnp
movsb
ljmp
sti
int3
fs
add
and
xor
sbb
jb
push
scas
pusha
test
sbb
mov
xor
jbe
mov
mov
lea
xor
fbstp
int3
sahf
add
mov
jbe
idivb
xorl
inc
or
loop
ds
dec
mov
rol
pushf
push
add
add
loope
sbb
inc
shlb
imul
mov
lcall
sub
mov
std
aaa
fcomp
repz
adc
add
mov
push
lock
jge
jecxz
xchg
rcll
stos
push
aad
or
and
sub
xchg
ds
bound
or
push
and
xchg
push
jo
and
pop
pop
xchg
mov
popf
int
mov
lahf
push
sti
enter
repz
std
cmp
sti
movsb
icebp
std
dec
imul
shll
xchg
cmpsl
mov
push
shr
mov
cld
mov
jo
jnp
arpl
loop
xchg
inc
not
out
mov
dec
lds
jb
insl
sbb
js
addr16
cmp
aad
data16
in
stos
es
test
popf
push
ljmp
loope
idiv
mov
fs
and
js
enter
or
and
loope
fbstp
adcl
pushf
and
xchg
dec
or
add
xor
xchg
test
xor
out
mov
jp
enter
mov
sub
shll
call
pop
jmp
fidivs
arpl
inc
scas
fists
sti
push
jp
repz
push
les
xor
data16
jo
jmp
jmp
scas
in
mov
pop
mov
shlb
xchg
push
adc
inc
mov
int
ds
ljmp
sbb
insb
sbb
pop
in
clc
das
xchg
std
js
xlat
in
lods
add
and
andl
js
aas
mov
negl
fiadds
and
into
mov
or
aad
dec
repz
movsl
adc
sbb
mov
enter
subb
mov
mov
mov
movl
cmpsl
rolb
int3
rorb
jg
cmc
out
shrl
add
in
imul
push
aad
js
add
mov
jecxz
lahf
aaa
push
cmp
mov
shlb
jnp
cmc
mov
ficomps
out
xor
enter
aad
and
cltd
aam
out
mov
dec
leave
faddl
mov
je
push
mov
jo
rorl
fcoml
pop
loop
ja
orb
and
sub
iret
pop
insb
xchg
add
fdivrl
mov
fnsave
pushf
fmull
into
xlat
scas
aad
outsb
xor
aam
loope
test
push
es
cmc
xchg
xchg
ds
push
ret
mov
sbb
adc
lods
loop
push
adc
sub
and
jb
inc
jae
es
push
jecxz
repnz
mov
cmp
arpl
add
pop
cmp
fucompp
mov
mov
ret
aaa
sbb
pop
inc
mov
and
dec
movsb
jmp
or
jp
mov
paddw
movsl
repnz
xor
push
xchg
mov
aam
mov
popf
loopne
addb
out
xchg
sub
fmull
call
in
mov
lret
pop
sbb
ss
adcb
xor
jne
addr16
mov
mov
jo
add
sub
xchg
and
mov
cmp
sti
scas
dec
mov
sub
fs
movsb
mov
rorl
push
shll
pop
mov
aam
hlt
cli
ret
cmp
sub
xor
mov
test
mov
push
sub
hlt
dec
jl
xlat
pop
adc
jge
clc
push
cwtl
dec
fstpt
ljmp
xor
outsb
cmpsb
std
cli
dec
sub
push
loopne
jbe
mov
cli
fildl
pop
push
test
sub
pusha
mov
xor
pop
lock
mov
mov
mov
lea
jle
dec
mov
push
jno
loope
arpl
add
jo
inc
jge
jne
xor
enter
addr16
mov
leave
in
in
xor
fldt
mov
movsb
sub
push
push
mov
add
repnz
xor
aaa
and
mov
push
mov
dec
jmp
adc
fmuls
cmc
gs
fisubrs
aad
fcmovb
inc
push
stos
lods
xchg
clc
ds
rcl
popa
cmp
sub
xchg
sub
sub
push
sub
test
and
out
mov
loope
loope
lea
mov
xchg
or
xor
sbb
jl
pop
xchg
enter
mulb
addl
fidivrl
add
addr16
jns
icebp
sbb
test
push
sarb
pop
jle
xchg
xchg
add
jge
or
pop
jae
mov
inc
mov
sbb
arpl
mov
xor
insb
aad
jmp
rcl
add
and
movsb
sub
ret
aas
mov
mov
lret
or
fildll
stos
push
fisubrs
das
dec
add
mov
xchg
dec
fldl
add
int3
or
add
lds
dec
ljmp
stos
push
xor
and
ret
jmp
in
fsts
adc
and
xor
inc
int
sbb
pop
sbb
push
and
rcrl
addr16
push
dec
loopne
aas
inc
cmp
fmul
jl
daa
pop
or
push
fidivl
fildl
aas
in
stc
arpl
pop
fsubrl
inc
out
test
fbld
mov
jle
das
lods
xchg
sbb
daa
and
adc
add
pop
pop
psubd
adc
imul
fs
mov
ficoms
lods
inc
loopne
les
fs
push
push
icebp
pop
inc
inc
int
popl
in
fistps
add
cmp
insl
fmull
pop
scas
dec
rcll
lret
aas
lahf
fildl
mov
sub
fmuls
mov
repz
lods
jnp
out
shrl
mov
int
repnz
mov
pop
loope
xor
mov
or
push
xchg
sarb
or
stos
add
jb
leave
push
out
xchg
jo
sbb
mov
jno
jnp
test
jle
lahf
in
mov
lret
sbb
cmpb
aas
sahf
ds
mov
pop
adc
pushf
and
jnp
subb
pushf
inc
andl
sahf
repz
dec
lret
adc
mov
mov
jmp
push
mov
inc
xchg
ja
int3
ja
sbbb
mov
pop
push
fwait
in
call
cmp
decb
repz
mov
mov
mov
or
sub
fstpt
fsubl
shld
dec
cmc
sbb
std
cmp
lock
mov
cmp
int
mov
aad
sbb
mov
sbbl
mov
xchg
jle
les
sbb
std
mov
aam
ret
sbb
iret
nop
ret
or
mov
dec
push
ret
push
std
adc
jne
movsb
jle
leave
call
ja
daa
insb
push
sbb
dec
cmp
dec
icebp
mov
loopne
cli
and
jns
xor
scas
jo
pushf
sub
cmpsb
fistps
xchg
sahf
sub
ds
testl
popa
inc
adc
xchg
lods
shlb
arpl
js
lret
xchg
xlat
pop
push
das
adc
sub
jle
adc
js
jnp
adc
add
pop
push
and
lods
ljmp
adc
aaa
mov
mov
cs
cmpsl
add
dec
cs
pusha
mov
mov
mov
gs
jb
lea
xchg
push
sub
mov
inc
jge
xor
icebp
jnp
jbe
mov
pop
into
dec
movsb
pusha
or
fimull
out
in
int3
cmpsl
into
test
insl
das
xchg
scas
add
inc
push
cmpsb
pop
xor
jge
jl
shrl
mov
mov
dec
mov
xor
les
push
add
sbb
daa
enter
pop
les
mov
not
shr
xchg
notl
rorl
inc
xchg
inc
xorb
stos
mov
rolb
loopne
imul
or
les
adc
sti
inc
push
push
repnz
movsb
mov
js
mov
stc
or
leave
or
ljmp
jnp
ss
cmp
and
jb
xor
mov
and
and
mov
add
andb
sub
cli
push
repnz
das
xlat
mov
test
inc
fs
cmp
das
mov
mov
jne
sub
mov
mov
fs
das
aad
push
xchg
shll
xchg
xor
sahf
rorb
mov
pop
fstpt
test
xor
jg
les
das
add
inc
ljmp
push
adc
inc
js
xchg
iret
cmc
xchg
pop
inc
mov
mov
addl
inc
cmp
daa
push
stos
pop
aas
sbb
outsl
insb
mov
inc
loop
mov
stc
int
ror
out
out
mov
in
pop
sub
mov
scas
movsl
rolb
lret
cwtl
pop
ljmp
pop
mov
imul
xchg
jo
sti
stc
pop
pop
sti
sub
dec
push
clc
adc
push
lret
rolb
in
sahf
cmpb
sub
add
test
jge
xchg
es
cmp
imul
fdivl
sarl
jns
sar
jle
sub
cmp
xlat
mov
into
rolb
and
rorl
push
xor
push
xchg
add
jmp
aas
cmp
inc
daa
mov
add
dec
nop
sbb
cwtl
aaa
stos
scas
out
sub
adc
xchg
clc
ret
mov
or
dec
push
mov
mov
outsb
cmp
xchg
stc
add
mov
push
ret
adc
mov
call
jbe
dec
jecxz
fs
mov
imul
imul
decl
mov
jns
mov
clc
es
jo
call
push
mov
mov
or
cmp
sbbb
repz
push
scas
les
mov
mov
dec
aaa
dec
and
int3
fisttpl
mov
adc
cs
test
popa
adc
movsl
loopne
shr
sbb
xor
fldt
or
sub
popf
js
dec
add
pop
ljmp
ds
test
shrb
adc
cmpsb
and
or
insl
sub
xchg
sbb
adc
subb
mull
lods
push
std
insb
xchg
xchg
outsl
cmp
pop
test
cld
imul
lods
sarl
test
push
add
pop
ja
push
mov
movsl
dec
je
arpl
in
arpl
or
lcall
scas
inc
dec
mov
add
icebp
inc
pop
pop
cmp
jns
loopne
sub
mov
add
cltd
cwtl
mov
or
fisubs
pop
jns
cmp
fstps
lret
test
inc
jno
inc
push
inc
clc
cwtl
lock
mov
rorb
repz
mov
push
push
lea
ljmp
cmpsl
jae
xor
fdivrs
popa
aam
add
or
cmp
push
data16
clc
jecxz
std
and
and
mov
inc
sub
fcomip
out
aam
inc
mov
movsb
mov
lock
imul
test
push
out
aas
or
xor
and
mov
xor
pop
stos
lods
pusha
lret
sahf
sub
push
fucom
imul
ret
sbb
cmp
pop
inc
cwtl
push
fimuls
pop
pop
and
xchg
daa
and
not
dec
mov
and
dec
dec
rol
sbb
ljmp
xor
sbb
cmc
outsb
nop
int
negl
and
adc
or
push
xlat
pop
mov
mov
insl
lock
sub
imul
loop
pop
adc
jbe
data16
jmp
gs
adc
or
and
jmp
cmc
mov
loope
add
inc
add
xor
stos
mov
outsb
lret
pop
lret
movsb
xchg
dec
push
inc
lcall
ss
pusha
push
add
mov
pop
es
cmp
cli
nop
inc
inc
jecxz
push
jbe
add
jp
repnz
loope
mov
outsb
cmp
loopne
xor
inc
adc
jne
mov
cmp
sarb
jge
jno
stos
scas
add
aaa
movsb
jecxz
xchg
add
les
lods
lods
aam
mov
test
lods
xchg
and
out
mov
mov
mov
imul
bnd
push
mov
scas
sub
insl
push
adc
mov
mov
dec
inc
cmc
add
test
jne
test
mov
inc
aas
stos
xlat
dec
add
pop
or
das
mov
mov
and
imul
push
ljmp
sub
push
test
clc
jg
ret
mov
mov
rorb
sub
clc
lods
sbb
ss
mov
sarb
loope
shlb
fnstcw
and
fcoml
in
xchg
cmc
push
add
shrl
add
adcb
addr16
lahf
cld
cmpsb
jmp
fimuls
rcr
lods
sbb
mul
pusha
fildll
mov
cwtl
gs
and
mov
push
sti
jbe
outsl
add
xchg
lret
daa
filds
jmp
cltd
xor
inc
mov
mov
cmp
cmpsl
test
in
jg
cmpsl
add
mov
rclb
push
xor
roll
pusha
out
in
mov
loope
outsl
mov
je
mov
aaa
sbb
xchg
adc
sbb
push
rcr
cmp
sti
mov
pusha
sbb
xchg
fbstp
push
or
lahf
mov
repnz
xlat
scas
cmp
test
pop
pushf
dec
dec
jbe
fildl
pusha
aad
shll
xchg
insl
rcll
lods
xor
fs
mov
out
loope
pop
enter
jae
push
cwtl
hlt
pop
pop
xchg
push
repz
mov
clc
out
add
and
iret
lret
js
push
push
nop
hlt
add
insb
push
mov
nop
inc
xchg
leave
imul
andb
mov
inc
mov
dec
mov
cmpsl
ljmp
or
in
test
std
and
dec
cmp
out
sub
push
movsl
pop
jecxz
and
rclb
rcr
in
cmp
int3
adc
or
dec
pop
pop
xchg
movsb
cmove
sub
sbb
outsb
mov
filds
sbb
mov
inc
stos
or
daa
test
lods
inc
rcl
mov
stos
mov
pop
fs
mov
les
lea
mov
mov
add
inc
repnz
call
lods
sub
movsb
fnstsw
loope
xor
aad
cltd
and
ss
sti
imul
insb
cld
jb
add
iret
pusha
negb
xchg
pop
in
sub
aaa
jne
test
arpl
xor
fs
add
mov
repz
adc
adc
out
push
inc
dec
loop
push
add
add
movsb
pop
jb
rorb
pop
adc
es
fdivrl
es
push
jno
iret
adc
push
xor
inc
add
dec
mov
xchg
inc
test
rcrb
cmp
push
adc
in
adcb
sbbb
in
je
insb
cwtl
sbb
cmp
scas
cli
popf
outsb
aaa
scas
pop
xor
ficompl
lcall
xlat
mov
pop
sub
jge
repnz
sti
in
fistl
ja
insb
leave
xchg
adc
sub
cmpsl
sbb
dec
jecxz
pop
dec
pop
sub
push
push
inc
sub
push
dec
add
fcomp
xor
xor
mulb
pushf
lea
pop
xchg
fiadds
add
dec
lcall
call
xor
adc
jmp
jbe
push
cs
scas
bound
inc
or
sar
mov
lret
add
dec
mov
idivl
jno
sub
push
mov
cmp
push
frstor
stos
addr16
add
mov
pop
pop
xchg
sbb
fs
pop
mov
stos
cli
enter
or
arpl
jb
and
cli
jns
sahf
xchg
into
adc
sub
sbb
adc
cltd
cmp
aas
adcb
cmpsl
roll
pop
enter
push
mull
lds
or
and
iret
push
cwtl
and
outsb
cmp
mov
sub
sarb
loopne
pop
xchg
cltd
test
jge
mov
lret
ret
aam
sti
in
jecxz
popf
push
ficompl
int
loopne
aas
pop
int
xchg
imul
icebp
mov
fdiv
add
mov
dec
out
add
icebp
xchg
jmp
sbbb
lahf
int
call
xchg
and
into
pop
cld
out
mov
into
jo
cmp
insl
out
adc
cmp
sbb
out
or
unpckhps
or
fldl
xor
faddl
push
fldcw
dec
in
add
pusha
fimull
pop
and
mov
and
je
and
sbb
jecxz
cltd
dec
aas
stos
ss
rcll
leave
and
in
jbe
loop
arpl
jecxz
arpl
fmull
or
out
aas
dec
xor
sbb
pop
ret
rcl
stc
add
test
or
fcmovbe
out
popf
sub
pop
scas
mov
pop
sub
mov
popf
xor
jle
jae
jns
mov
add
fs
sarb
sbb
loopne
mov
imul
imul
push
divb
repz
cld
add
leave
aam
xchg
push
push
pushf
pop
dec
jp
push
adc
insb
ss
xor
imul
in
xchg
das
and
push
mov
add
mov
cs
or
jg
call
fmull
xor
cmpsb
push
dec
mov
andl
jnp
and
cmp
or
sbb
js
ret
xor
cld
mov
inc
inc
or
ds
fists
imul
xor
sub
push
xor
arpl
sub
mov
push
add
or
aam
sub
add
and
ja
or
push
test
xchg
ds
lods
inc
jge
sbb
mov
fld1
sti
rcrl
ficomps
scas
js
dec
push
push
and
popf
pmulhw
js
jmp
out
outsl
push
sub
push
jb
sbb
test
ja
mov
shrl
test
movsb
xchg
aad
jno
pop
fistpl
jb
outsb
out
cmp
test
ja
sbbl
xor
dec
iret
mov
xor
mov
clc
pop
push
scas
inc
lock
lret
dec
arpl
xor
dec
in
in
jge
adc
das
xor
cmp
addr16
and
hlt
and
cmc
pusha
lods
dec
or
push
mov
xor
loopne
into
push
imulb
test
push
jmp
push
mov
pop
mov
xchg
loope
mov
adcb
xchg
inc
and
add
lea
ret
mov
adcl
mov
pop
test
jns
lds
jb
out
fst
clc
lea
pop
mov
popf
add
or
pop
xor
or
push
mov
fidivrl
jno
cwtl
or
cmp
mov
cli
pusha
jecxz
add
cld
stc
mov
mov
fisttpl
or
jp
into
mov
rolb
mov
aas
call
sbb
pop
mov
push
jmp
data16
mov
into
test
ja
mov
js,pt
mov
cmp
fldenv
xor
inc
sub
and
pop
adcl
push
movsb
add
ljmp
xor
add
leave
inc
movsl
adc
pop
cld
andl
sbb
sbb
xchg
ja
mov
fdivrp
dec
imul
mov
push
call
jge
test
ret
mov
popa
mov
xor
xchg
add
ficoms
sub
jno
fistpl
inc
adc
out
cmpl
push
and
xor
jns
pop
fwait
das
push
ror
arpl
sub
clc
fwait
dec
sbb
add
push
mov
insb
and
push
ss
popa
in
cmpsl
xor
ret
push
lods
aad
mov
mov
lea
sbb
push
ljmp
mov
test
mov
stc
mov
jg
addr16
jns
adc
sub
repz
cmp
pop
imul
jns
in
jmp
jge
lea
adc
pop
inc
pushf
jp
out
icebp
push
ss
add
add
cs
add
pop
fcompl
jp
fbld
pop
sbb
sub
adc
ljmp
lock
bound
in
sub
mov
sti
sub
or
shll
shl
aam
pushf
clc
imul
inc
out
mov
inc
mov
gs
adc
mov
jecxz
clc
cmp
adc
xchg
out
jge
mov
xor
popa
scas
decb
cmc
sbb
and
out
pop
or
andb
xchg
notb
pop
fs
fimuls
ss
jle
sub
mov
push
mov
xchg
mov
mov
repnz
dec
out
lock
adc
loopne
push
add
fs
or
sub
loope
dec
ds
daa
lcall
enter
jecxz
movsl
pusha
repz
xor
es
mov
sahf
push
mov
push
push
sarl
shll
jo
mov
scas
gs
test
out
inc
int
cmp
test
inc
daa
add
mov
cld
shufps
dec
xor
inc
and
sub
mov
ljmp
movsb
sub
rcll
repz
lahf
and
mov
les
lcall
into
mov
push
push
sbb
insb
jne
xchg
aam
mov
mov
pmullw
mov
inc
scas
idivb
push
xchg
and
and
xchg
dec
jo
shll
movsl
mov
int
test
xchg
out
sub
mov
mov
bnd
dec
mov
pop
movsb
in
cmc
je
adc
dec
mov
fsubrl
scas
jbe
es
scas
shrl
push
pop
cmp
inc
cs
aam
sar
xchg
test
cmp
add
mov
jne
xor
mov
sbb
mov
pop
iret
dec
push
iret
outsb
imul
adc
fimull
mov
sub
movsl
stos
cmp
fistl
rclb
cmp
mov
push
popa
cmp
ret
pop
imull
cmp
int3
fwait
jl
ret
pusha
loope
and
mov
call
outsb
stos
shll
out
mov
pop
jecxz
add
mov
push
push
pop
stos
xlat
mov
mov
movsb
cmc
dec
shrl
cmpsl
sub
pop
shll
int
arpl
aad
mov
shrl
mov
cltd
js
jb,pn
call
les
enter
inc
xor
fwait
mov
jmp
lret
scas
mov
sub
mov
cwtl
jle
subl
mov
jns
insl
pop
inc
into
out
cmp
orb
inc
mov
sbb
idivl
mov
sub
lods
ljmp
aad
or
mov
xchg
pop
jnp
lods
inc
add
dec
scas
sbb
loope
iret
xor
pop
mov
sahf
and
jl
test
pop
pop
sbb
mov
movb
push
pusha
daa
scas
test
incb
dec
fsubs
mov
fisttpll
or
cmp
cltd
popa
int
js
sub
mov
cmp
cli
fucomi
and
mov
je
cld
jl
ss
dec
mov
or
add
jge
repz
cli
fisubrl
cmp
data16
mov
mov
adc
jns
int
out
cmp
ficomps
outsb
push
popf
imul
push
rclb
insl
lret
mov
pop
jle
aaa
or
lods
and
add
fidivrl
adc
sti
cmp
fdivs
jmp
ret
scas
sub
xchg
push
xor
dec
fidivrs
mov
ljmp
push
add
aam
mov
sahf
jae
mov
or
cmp
stos
mov
sti
ret
jmp
rorl
iret
cli
mov
xchg
out
addr16
iret
fsubrp
scas
leave
jnp
sbb
xor
mov
je
jl
adc
insl
ss
dec
nop
lods
dec
mov
push
or
xlat
jo
push
call
cli
int3
movsb
cmp
sbb
lahf
sbb
repnz
insb
imul
xorb
test
fldl
nop
cmpsl
sub
in
mov
push
cmpsb
xchg
sub
sti
stos
fildl
inc
lret
jmp
xor
addr16
mov
fwait
jge
dec
cmpsb
jbe
shrb
in
sub
sub
mov
in
jl
inc
add
mov
add
xchg
sub
add
cmp
xchg
xor
adc
xchg
les
and
dec
es
clc
sarb
hlt
dec
test
lods
data16
stc
mov
test
push
push
add
rolb
sbb
stos
call
sbb
push
shl
iret
adc
leave
fwait
add
inc
xlat
arpl
ljmp
jnp
mov
xor
cmc
inc
in
lods
or
sbb
dec
mov
insl
push
push
jb
mov
test
dec
or
enter
pop
push
or
mov
shlb
sub
xchg
adc
inc
adc
lock
mov
mov
sbb
sbb
pop
jmp
es
push
ds
test
xor
pop
arpl
fsubrs
push
lock
mov
xor
cwtl
pop
outsb
or
test
les
pop
cld
cmp
imul
insb
pushf
xchg
cmp
xor
mov
popf
xchg
gs
cmpsb
pop
cli
adc
lahf
loopne
in
xchg
sbb
jle
pop
shrb
iret
leave
push
int
into
xchg
pushf
sub
mov
pop
sub
leave
nop
mov
out
mov
jo
jle
and
icebp
dec
xor
das
pop
mov
adc
sbb
mov
fnstenv
xchg
mov
std
lret
adc
shl
arpl
jns
ss
aas
ds
sbb
pop
mov
leave
imul
add
bound
adc
mov
decl
movsl
add
jne
push
cmp
cmp
cmp
inc
xlat
dec
xchg
sub
push
sub
rclb
add
jle
iret
sbb
cmc
pop
xchg
mov
les
sbb
add
stos
addr16
lods
orb
lcall
inc
pop
cltd
scas
pop
jbe
add
inc
lock
lea
xor
push
movsl
nop
lods
dec
push
rcr
outsb
ret
test
sbb
mov
or
push
mov
add
adc
and
testb
lock
push
and
int
or
cli
mov
sahf
in
fistpll
aam
insb
cli
add
or
rolb
mov
shr
adc
data16
inc
and
sbb
inc
or
les
mov
cmp
cmp
inc
dec
fsts
mov
sub
jnp
mov
dec
int3
dec
add
inc
pop
imul
mov
in
xchg
push
es
push
fucom
icebp
inc
or
testb
jb
shr
aas
ret
sub
cmp
test
mov
mov
popl
or
mov
cli
push
sub
and
test
mov
mov
outsl
shll
adc
stc
mov
xchg
cs
cmp
cltd
push
pushw
or
inc
mov
push
sub
mov
sbb
jg
xchg
xor
ja
mov
ds
out
cmp
icebp
test
lods
ss
rorl
pop
filds
imul
lahf
sub
jbe
rcll
stos
inc
out
aam
jb
xor
mov
addr16
dec
mov
fdivrp
hlt
add
mov
cmp
push
push
test
jo
popf
shlb
sbb
inc
mov
repz
testb
ja
pop
cmpsb
test
fldenv
inc
pop
xchg
jge
pusha
push
sub
shrb
adc
sub
dec
movl
mov
xchg
adc
add
sbb
jmp
or
cmc
in
ja
cmpsb
pop
push
pop
xor
pop
and
js
fwait
push
dec
pop
xor
cld
xchg
andl
sub
mov
in
adcl
or
in
daa
ja
pavgw
and
sarb
inc
adc
incb
lret
out
pop
cmp
out
popf
fmul
jb
add
stos
pop
mov
xor
mov
dec
scas
add
cmp
mov
icebp
pop
mov
cs
push
adcb
sub
outsl
addr16
mov
gs
sbb
pop
cs
mov
mov
push
pop
or
ja
xor
pop
jle
sbb
cmc
mov
mov
icebp
insb
aaa
or
repnz
loopne
adc
jb
push
mov
push
add
xor
ret
jp
outsl
jbe
push
cmp
xor
jns
pinsrw
pop
jg
fcmovne
jle
pop
mov
mov
rcrb
add
or
mov
stc
push
into
hlt
mov
callw
pushf
mov
mov
sub
or
pop
shll
test
ret
lcall
mov
mov
call
push
stc
adcb
dec
pop
in
cmp
nop
jmp
jns
push
je
mov
lahf
scas
lret
jl
mov
cmp
push
addb
sahf
xchg
mov
pop
subb
mov
jbe
add
fimuls
inc
push
imul
cmp
aam
add
xlat
dec
arpl
jns
adc
shrl
mov
pop
aam
push
jl
dec
aaa
pop
push
aaa
enter
je
mov
xchg
sbb
inc
mov
ret
das
mov
adc
jbe
aam
dec
sub
inc
push
cli
jp
inc
sub
call
lea
adc
bound
addr16
cmp
mov
insl
cmp
faddl
les
roll
cld
sbb
fiaddl
adc
mov
pop
mov
test
jecxz
decl
or
popa
clc
mov
loope
dec
hlt
xor
sarb
xchg
or
imul
incl
iret
clc
daa
test
call
mov
vmovdqu
loopne
sub
fs
mov
enter
xchg
inc
out
fisubs
enter
pushf
jnp
jo
ljmp
xchg
pop
or
stc
push
xchg
aad
sti
insb
inc
push
sbb
lret
jb
inc
movsb
ss
outsl
sbb
mov
sbb
jl
mov
ret
pop
pop
std
addr16
sti
push
shl
xorb
inc
pop
aam
movsb
inc
stos
xchg
jl
mov
mov
and
mov
ss
and
lods
aam
mov
jo
pop
push
dec
inc
pop
bound
stos
push
dec
or
inc
cwtl
cld
pop
push
test
mov
and
test
out
fsubrp
daa
inc
mov
ret
les
stos
sbb
hlt
or
jae
cmp
push
loope
sbb
hlt
inc
jbe
ss
jo
push
mov
mov
mov
pushf
mov
adcb
stos
xorl
or
dec
mov
adc
leave
out
popa
mov
adc
cmp
xchg
leave
iret
jno
lock
mov
sbbb
pop
xchg
push
pop
pusha
js
in
es
xorl
dec
mov
cli
test
cwtl
movsl
push
gs
aad
mov
add
sbb
in
xor
xlat
xchg
sti
ror
push
xor
add
out
add
lcall
cmpsl
fidivrl
int3
and
inc
repz
cmc
sbb
xchg
sbb
mov
ss
cmp
dec
and
outsl
mov
dec
and
adc
sbb
fsubrl
sbb
xchg
es
sub
in
sub
mov
popa
push
jmp
jg
dec
jno
mov
ret
std
push
xchg
call
or
lds
sahf
xchg
lods
push
stos
mov
js
scas
popa
aaa
test
dec
lds
cs
sbb
xchg
cld
into
pop
sub
jo
mov
or
mov
xorl
sahf
loope
push
mov
inc
subb
lock
jg
je
arpl
in
mov
sub
xor
pop
xchg
fcom
lock
lret
jo
adc
pusha
shl
jno
ds
or
test
add
out
fs
aaa
scas
inc
mov
icebp
xchg
mov
popf
cmp
imul
std
js
inc
cmp
repz
out
pcmpgtw
mov
sbb
js
andl
inc
lods
mov
jge
or
imul
sub
jg
pusha
cmp
xchg
or
jge
fwait
add
jmp
jmp
movb
les
add
pop
scas
movsb
xchg
leave
mov
push
mov
or
adc
stc
jb
sub
pop
rcrl
les
mov
in
pop
call
clc
or
aas
add
jp
adc
push
pop
cmp
repnz
xorb
cmp
mull
jbe
push
xchg
call
mov
leave
push
xor
pop
sub
jmp
inc
push
pop
out
mov
filds
xor
test
sbb
xchg
push
sbb
out
cli
and
outsl
test
adc
popa
or
cmp
and
dec
mov
loope
fs
mov
call
scas
push
mov
push
xchg
je
mov
xor
xor
mov
loope
push
into
sarl
ret
out
push
sbb
jl
xlat
or
aad
and
test
imul
outsb
lea
sbb
rep
in
xor
inc
adc
adc
mov
in
xchg
shlb
fcomp
add
mov
xchg
xchg
scas
cmpsb
arpl
jg
sbb
and
xchg
gs
xchg
loop
sbb
inc
mov
push
cmp
xor
out
add
cmpsl
push
cwtl
dec
xchg
inc
ss
test
xchg
movsl
push
jg
mov
stc
dec
jg
xchg
jne
shlb
dec
cwtl
and
call
cmc
add
fistps
xor
cwtl
shll
mov
aas
ljmp
pop
mov
mov
mov
popa
mov
push
cmp
lret
lcall
xchg
adc
xchg
out
or
push
xor
xlat
jl
in
xor
sub
xor
out
ja
cmpsb
mov
push
adc
lds
push
repnz
bound
xchg
pop
loop
in
pop
push
pop
aam
adc
push
lock
mov
pop
pop
mov
add
scas
pop
mov
pop
lock
jb
add
jmp
lret
sub
mov
popf
int3
push
pushf
jns
loop,pt
adc
jle
pushf
gs
lds
inc
fildll
jae
push
dec
stos
unpckhps
push
mov
mov
lods
jo
decb
fimull
and
xor
xlat
mov
dec
inc
mov
inc
sbb
imul
mov
add
mov
outsl
ficompl
push
aam
or
js
xor
mov
leave
test
xor
pop
pop
je
aad
aas
gs
push
cmc
dec
rcl
inc
xchg
in
mov
add
pop
or
cmpsl
mov
imul
movsb
mov
int
adcl
out
push
mov
jl
out
jbe
insb
dec
lcall
cld
incb
fcoml
add
out
push
out
push
inc
mov
sbb
mov
testl
daa
and
xlat
movsl
sbb
pop
pushf
ja
inc
call
fldl
adc
jl
jmp
push
popa
xor
test
dec
imull
sbb
gs
xchg
mov
js
fisubl
pop
test
shl
push
mov
popf
xchg
xchg
mov
jae
xor
push
push
inc
rol
data16
and
mov
ljmp
jmp
ljmp
xchg
popf
fisubl
jo
rcrl
xchg
jp
shlb
arpl
flds
stos
movsb
inc
or
shll
dec
popf
loope
shlb
push
mov
sub
push
jmp
adc
cmpsb
imul
jno
fildll
aas
inc
push
pop
jp
dec
xchg
test
sbb
out
lret
xchg
dec
pop
push
fcoms
sbb
cmpb
shrb
jns
mov
pop
loopne
push
pop
loope
sub
dec
aaa
sarb
sub
out
push
push
lods
jg
jl
out
ds
mov
dec
pop
cmp
fs
movsl
in
insb
flds
and
nop
in
bound
mov
mov
xchg
pop
mov
mov
arpl
je
sbb
nop
inc
push
add
in
leave
aas
pop
jae
scas
stc
outsl
lock
movsl
ja
push
inc
jnp
add
add
es
mov
movl
jnp
mov
mov
cld
dec
repnz
jnp
or
lret
push
mov
add
pop
test
fs
inc
fucomip
dec
dec
cmp
stos
xchg
fyl2xp1
push
imul
mov
hlt
ss
inc
push
mov
jbe
das
out
testl
pop
call
adc
sbb
jl
jae
in
inc
lahf
sbb
inc
les
sahf
or
mov
jecxz
xchg
add
push
sub
jl
scas
out
cwtl
pop
call
inc
fisubl
loop
cmp
push
adc
je
rol
pushf
adc
insl
cmp
inc
ds
int3
ss
pop
addr16
jge
pop
loopne
adc
adc
into
xchg
jne
mov
ficoml
xor
and
outsl
jo
mov
aaa
pop
shll
cwtl
xchg
pop
lahf
jmp
jp
in
loope
adc
in
add
ret
fwait
mov
and
je
lcall
pop
popf
insb
push
outsb
mov
jbe
movsb
ljmp
push
std
inc
xchg
stc
cmpsb
and
add
add
aaa
xchg
push
test
sarb
sub
pop
mov
rcrl
sbb
testb
fstps
in
sbb
nop
xlat
mov
push
fdivl
add
inc
repz
adc
sti
mov
outsl
insb
add
shl
adc
jae
adc
jecxz
jb
or
sahf
repnz
push
test
popf
adc
je
pop
jg
dec
push
pop
mov
in
rclb
xchg
xchg
jle
repnz
dec
sbb
mov
or
sarb
jo
fwait
fwait
loope
scas
inc
ret
inc
cmp
mov
add
mov
jmp
cli
mov
mov
mov
daa
add
jmp
sti
pushf
pop
dec
pop
inc
int3
xor
cltd
dec
and
mulb
push
pop
and
insb
inc
mul
or
pop
sbb
mov
hlt
scas
insb
inc
mov
push
sbb
jg
popf
int
lret
pop
xchg
fldt
push
jecxz
pop
sbb
sbb
inc
std
xchg
sahf
mov
repz
jp
outsb
cmp
cmp
cmp
into
repnz
lret
in
inc
sbb
lcall
js
cmp
orb
sbb
push
daa
pop
mov
cs
xchg
inc
cli
pshufw
in
rorb
stc
outsb
jno
sbb
dec
lahf
adc
and
scas
dec
mov
dec
push
cmp
out
adc
mov
lods
call
scas
xchg
outsb
into
mov
mov
outsl
sub
ds
mov
movb
scas
push
ss
sti
push
adc
cmp
repnz
sti
jp
sar
ret
imul
cmc
jl
popa
mov
lea
outsl
mov
cmp
clc
push
or
mov
pusha
dec
rdmsr
loope
adc
sbb
pop
cmp
lods
jge
sbb
sbb
push
add
sub
bswap
in
inc
and
aas
lock
out
pop
pusha
in
fcomi
stos
idivb
xlat
dec
xchg
mov
es
mov
pop
push
inc
jae
xchg
jge
lret
pop
ss
popf
stos
pop
cmp
ret
sbb
push
xchg
or
or
loope
inc
in
xchg
mov
pop
cli
in
jmp
in
xchg
pop
js
push
repz
das
filds
cmp
jge
mov
dec
push
or
fiadds
and
add
arpl
and
rcrl
aaa
adc
dec
mov
pop
and
cmp
mov
dec
sub
add
test
xchg
mov
adc
cmp
or
mov
cwtl
sahf
dec
sbb
sub
stos
bound
nop
std
je
sti
jecxz
sahf
call
push
mov
shl
inc
es
pop
aaa
fiaddl
sub
jno
cmp
or
lods
ffreep
movsl
sub
cltd
fcompl
fucomp
mov
inc
and
fdivrl
mov
mov
pop
add
xor
xor
nop
mov
ss
sbb
or
sti
adc
jno
push
or
pop
ss
test
mov
int3
push
addr16
and
and
shr
aad
mov
stos
out
pop
dec
cmp
dec
jns
and
std
pop
sub
cmpsl
fdivl
jp
dec
jl
shrb
std
pop
push
mov
fsubl
add
adc
lahf
xchg
insl
lret
or
or
icebp
sub
std
pushf
jge
mov
jb
in
icebp
lret
lahf
test
xchg
mov
test
pop
aad
lret
fsubl
adc
mov
out
pop
cs
repz
int
xor
fmul
test
jns
andb
mov
lds
mov
sub
stos
sub
jns
dec
lea
scas
adc
ret
pop
push
fidivrs
shll
jecxz
fwait
ss
mov
lret
popf
mov
es
test
and
test
in
cmp
and
aaa
fsts
test
stos
xchg
push
shll
push
movsb
dec
xor
inc
jnp
loope
sahf
push
les
inc
add
ja
pop
inc
fistps
mov
mov
ds
or
int
movsl
dec
pop
mov
mov
js
mov
inc
insl
dec
or
arpl
lds
clc
jp
test
scas
lods
xchg
sar
addb
mov
rcrb
roll
jmp
in
mov
sub
ja
pop
loop
aaa
xor
fbld
cmp
cmpsl
mov
rcr
add
sti
mov
sbb
sub
fmulp
in
fistps
loopne
in
inc
ljmp
dec
nop
loope
insb
cld
pop
mov
paddsb
sbb
ret
jno
pop
mov
xchg
jp
dec
jne
and
sbb
inc
dec
push
xor
sbb
lea
mov
lock
ljmp
gs
push
xchg
inc
fld
es
mov
adc
std
test
loopne
cli
mov
movb
pop
mov
out
mov
lret
stos
imul
sbb
test
jg
sub
and
dec
in
cld
or
in
test
sbbl
ss
mov
cli
xchg
jecxz
cmp
push
and
xchg
pop
gs
ljmp
pop
or
dec
lods
mov
bound
lock
mov
pop
cmp
xor
or
pusha
out
decb
popa
std
cmp
xchg
push
sbb
xchg
scas
jge
pop
adc
fisubrl
sub
andl
call
sub
push
jne
daa
cmp
inc
inc
pop
add
int3
imul
xor
sub
leave
ret
rcrl
push
mov
xor
sub
repz
aad
add
in
lock
xor
js
and
add
dec
ret
lock
cmp
repz
call
inc
push
jl
adc
sbb
test
push
shlb
cmpsl
xchg
ret
sub
out
push
inc
pusha
sbbb
pop
jp
aas
push
or
push
fwait
xor
inc
out
and
push
int3
lock
fwait
sub
lds
add
mov
add
cld
mov
fstpt
push
shrl
dec
mov
enter
sub
dec
dec
lcall
sub
pop
jae
dec
sbb
dec
dec
adc
adc
xchg
pop
scas
jl,pn
mov
inc
aad
sbb
sarb
mov
jg
inc
cmp
out
cmc
mov
add
cmp
and
les
mov
stos
sub
into
out
jg
mov
imul
popa
xchg
sbb
jb
jg
insl
dec
stos
cmp
je
fwait
jb
enter
jno
sbb
aas
les
pushf
fcompl
popf
test
xlat
leave
or
call
push
mov
ror
cmc
push
xchg
dec
pop
ljmp
popf
mov
mov
pop
cmc
pop
sbb
and
cmpsb
sub
ffree
dec
xor
push
sbb
imul
push
adc
add
lret
in
add
fs
call
mov
lcall
push
aad
mov
insl
lock
sub
jmp
xchg
pop
sbb
cmpsl
add
inc
scas
testl
sbb
xchg
je
out
push
cwtl
mov
pop
insb
push
add
inc
insb
jmp
aad
movsl
pop
ds
mov
ror
dec
loop
out
packsswb
jl
test
xchg
mov
je
mov
movsl
bound
mov
inc
in
lods
push
pop
pop
push
mov
push
inc
xchg
adc
loop
adc
push
push
sub
rorl
or
loop
jno
aad
lods
sub
jb
sub
addr16
test
movsb
cmp
loopne
bound
push
out
push
pop
call
xor
add
fists
jl
mov
stc
pop
adc
imul
fsubs
push
je
aad
nop
push
das
mov
pop
insb
adc
push
mov
fcmovnb
imul
dec
xchg
leave
mov
mov
and
aas
ret
fisubrl
popa
stos
lea
fs
outsl
inc
push
fidivrl
cld
sbb
fs
adc
lods
or
out
mov
adcl
push
scas
out
sbb
ds
inc
xchg
in
xor
and
ret
and
popa
mov
nop
test
shll
bsf
lahf
dec
inc
jle
aad
daa
dec
insb
outsl
andl
xor
ret
lock
xor
adc
aad
xchg
aad
fs
scas
icebp
mov
push
divb
xlat
pop
jns
ds
lahf
mov
inc
mov
ret
ljmp
insl
or
push
push
sub
ja
jecxz
outsl
daa
cmpsb
inc
or
push
lds
fdivl
adc
dec
and
xchg
cwtl
sahf
jae
loopne
cli
push
push
sarb
xorb
adc
inc
adc
inc
adc
sbb
adc
mov
adc
cwtl
mov
subb
in
sbbb
loope
jno
mov
bound
mov
jle
imul
cmpsb
jp
cmp
pop
lcall
pop
arpl
andl
lret
es
repz
fisttpl
mov
inc
mov
xchg
aas
scas
dec
xchg
cmp
out
add
dec
stc
cmp
dec
scas
insb
cmp
jns
jle
inc
arpl
or
add
mov
or
popa
loop
shlb
out
adc
sub
ljmp
sbb
add
rolb
inc
and
iret
xchg
mov
push
fwait
jg
cmp
in
or
aad
stc
jno
fiaddl
mov
dec
aam
sarl
sar
push
pop
sbb
xchg
dec
xchg
sub
push
adc
test
mov
icebp
js
mov
inc
andb
and
cli
mov
shr
fcompl
aaa
outsb
xor
mov
and
push
pop
fists
fs
cltd
add
shrl
or
mov
aaa
sbb
adc
mov
or
xchg
out
lods
popfw
or
jo
es
dec
sar
dec
out
lret
push
xchg
inc
and
inc
inc
fs
into
jmp
or
les
hlt
cmpsl
pop
mov
push
lods
in
adc
jp
xchg
mov
xor
mov
push
lahf
cmp
push
lds
cmpsl
stc
xor
jge
mov
mov
mov
repz
mov
dec
ljmp
jmp
push
aaa
dec
ja
shrb
leave
and
xor
js
add
mov
punpckhdq
roll
jnp
stc
sbb
sti
pop
lret
out
cmp
outsb
jmp
fwait
sub
xchg
mov
dec
cwtl
sbb
xor
bound
loope
lahf
mov
add
aaa
or
js
xchg
sarb
shl
movsl
sbb
cld
repnz
hlt
and
addr16
jo
mov
jecxz
fcmovne
ret
into
into
ret
in
fnstenv
ds
mov
ss
and
inc
cltd
xor
jle
adc
xchg
sbb
add
repz
sbb
xor
inc
mov
ret
dec
inc
push
lret
popf
or
or
push
inc
je
and
mov
stos
cmpsb
add
dec
gs
dec
daa
mov
data16
and
xor
andl
les
addr16
jl
pop
test
mov
and
cltd
push
xor
jne
xor
mov
or
in
pop
mov
adc
xchg
test
sub
lahf
push
mov
dec
daa
add
mov
push
jnp
test
rep
cwtl
sub
repz
pop
mov
neg
outsb
adc
shr
shll
incl
mov
lret
rcrb
pop
xchg
in
shl
xlat
int3
into
xlat
sub
lcall
out
int3
sub
dec
movsl
es
and
inc
es
xchg
pop
arpl
es
std
lret
xor
xor
jecxz
jne
mov
aam
xchg
repnz
loopne
ljmp
test
xor
fisubl
jmp
cli
xchg
in
ja
inc
popf
mov
addl
jae
adc
inc
outsb
test
into
cmc
pop
push
outsb
adc
dec
cmp
push
push
jne
xor
fs
filds
imul
rorl
mov
fsubl
pusha
cmp
inc
mov
add
je
jg
int
dec
pop
call
mov
sbb
mov
lahf
sub
mov
cld
aaa
push
mov
adc
pop
sub
push
mulb
jmp
push
mov
sbb
shl
mov
fs
mov
imul
aam
sbb
out
mov
sub
lock
jae
mov
cmc
mov
js
pop
inc
jmp
movl
lcall
in
xor
dec
icebp
icebp
sub
fcmovnbe
and
movsb
jecxz
outsl
sub
dec
xchg
pop
loopne
lret
cmp
ljmp
inc
or
fcomps
sub
scas
shlb
cs
imul
or
and
push
add
jp
jle
das
or
xlat
pop
pop
and
mov
dec
sbb
pusha
lods
out
mov
pop
sub
xor
std
push
mov
or
dec
xchg
jae
les
mov
pushf
pop
xor
jecxz
xor
sub
orl
sarb
mov
xchg
fcmovb
dec
scas
popa
xchg
scas
sub
ss
aaa
mov
or
ret
popa
jae
movsb
sbb
scas
sbb
fucomp
sbb
and
mov
scas
decb
push
push
push
adc
fcmovnu
mov
cli
out
jb
inc
push
lcall
or
addr16
xor
jmp
cmp
je
test
mov
outsl
sub
push
sub
xlat
call
inc
jb
pusha
cwtl
ret
push
movsl
sbb
pop
movsb
pop
cmp
adc
xchg
out
divb
push
fidivl
xchg
hlt
dec
aam
xchg
pop
aam
dec
es
es
repnz
sbb
daa
fdiv
lahf
call
test
cmp
dec
les
jns
daa
add
jmp
jl
push
pop
sub
cld
subb
sbb
and
fadds
scas
and
aad
pushf
jg
push
push
mov
lods
idiv
xor
sub
and
sahf
mov
lcall
and
pop
repnz
xor
outsb
adc
js
push
dec
bound
cld
in
dec
lret
and
pop
rcrl
and
add
stos
stos
lret
xchg
nop
sbb
jnp
shlb
fisttpl
outsl
fwait
inc
loopne
repnz
pop
fldcw
xchg
jae
sbbb
xchg
xchg
inc
popf
in
adc
mov
mov
mov
cmpb
shll
and
push
or
in
in
mov
dec
shrl
aam
inc
jne
pop
fbld
nop
push
std
scas
jecxz
test
push
in
or
in
mov
mov
and
pop
inc
arpl
xor
das
popf
jmp
fimuls
shlb
js
xor
push
push
xchg
inc
and
idivb
sbb
xor
mov
cli
inc
stc
inc
push
jb
push
fdivl
adc
aam
movsl
std
cwtl
leave
and
push
jns
gs
hlt
adc
pop
cld
adc
adc
fs
or
jbe
ljmp
inc
les
mov
lahf
push
fisubrs
fistpll
mov
mov
and
call
push
pop
xor
ljmp
jno
pushfw
insb
sti
in
popa
cmpsb
test
inc
lods
std
and
push
addb
xor
icebp
mov
lods
mov
push
xchg
insb
pop
pop
aaa
fs
mov
outsl
inc
or
jno
enter
imul
popa
shr
pop
insb
push
sub
xchg
lcall
imul
jle
aas
xchg
push
movsl
mov
pop
aad
es
jl
loope
ja
mov
jmp
jecxz
pop
test
aaa
adc
push
std
pop
cmpsb
scas
mov
imul
clc
add
out
and
adc
inc
aad
je
mov
mov
dec
xor
mov
insl
pop
fstps
push
adc
test
testb
inc
mov
popf
fldenv
fcmovnbe
test
jecxz
push
cs
fdivl
and
mov
punpcklwd
adc
into
subl
jae
sub
push
mov
cmp
ds
or
pop
mov
insl
xchg
lds
push
push
mov
or
ret
adc
es
pop
lahf
and
xchg
xchg
mov
cmpsw
push
imul
fs
mov
iret
and
imul
sbb
loop
and
sti
cwtl
mov
add
jo
sub
aaa
jnp
jnp
and
out
shr
pop
mov
xor
mov
xchg
movsl
je
ror
sub
xchg
adc
mov
stos
mov
subb
inc
sub
push
xchg
test
mov
pop
jae
pop
cli
arpl
movsl
jle
ret
jmp
fs
enter
loopne
cmc
sbb
into
into
outsb
sbb
aaa
mov
and
add
mov
into
adc
mov
out
mov
inc
int3
sbb
call
std
fisubrs
xchg
into
push
or
or
insb
jae
fdivrs
push
out
jge
adc
scas
jb
dec
push
dec
xchg
mov
xor
mov
adc
adc
cmp
mov
add
inc
icebp
jnp,pn
mov
bound
arpl
loop
mov
inc
cltd
stos
shrb
xor
je
cld
ret
push
leave
xor
jle
cmp
out
xchg
popa
test
dec
adc
loope
jno
add
push
mov
mov
dec
cmpsb
or
jb
inc
push
sti
aaa
imul
test
add
xchg
pop
fstpl
test
arpl
cltd
inc
push
inc
xchg
test
pop
pusha
jecxz
pop
pop
test
and
lods
test
cmpsb
sarl
mov
lahf
jge
cltd
bound
adc
jb
sub
jne
sub
pop
mov
out
mov
ja
ds
stos
sbb
out
mov
pop
popf
xchg
cmp
dec
add
xor
cmp
inc
lods
cs
jno
or
cmc
jmp
paddsb
mov
add
cmp
and
data16
pop
xor
int
test
clc
call
fwait
mov
sti
stos
mov
aad
add
insb
sub
sub
pop
mov
scas
cmc
clc
jl
mov
in
push
cli
cltd
lahf
in
cmp
aas
mov
in
pop
jbe
sbb
jecxz
dec
xor
xor
mov
dec
arpl
aaa
mov
sub
cmpsb
dec
daa
push
mov
ror
outsb
cmc
or
cmc
push
add
jae
iret
adc
jno
and
push
repnz
int
fbstp
and
jno
dec
arpl
dec
xchg
lcall
fmull
xor
lea
cld
push
shrb
pop
cmc
sbb
adc
mov
jbe
mulb
rcrb
pop
cld
aas
aad
out
jmp
insb
dec
ss
pop
lods
sub
loop
lea
cmpsl
cmpsl
enter
nop
xchg
lods
gs
lds
std
inc
inc
jp
inc
pop
nop
out
adc
cmpsb
mov
mov
push
pusha
cs
int3
pop
int3
sbb
in
mov
fsubrl
fcomps
int3
scas
rcr
cltd
push
mov
hlt
push
in
fwait
out
pop
or
cmp
and
pop
add
xchg
mov
imul
les
popa
movsl
sbb
inc
imul
jne
mov
pop
testb
sub
shll
lea
mov
add
stos
inc
dec
loope
pop
shlb
clc
out
roll
out
in
nop
mov
jmp
pusha
pop
sub
mov
adc
movsl
stos
std
jmp
push
leave
movsb
es
ss
icebp
mov
sbb
daa
jge
shr
rol
inc
dec
rep
icebp
mov
imul
dec
sub
push
sub
jns
mov
fwait
icebp
xchg
inc
imul
loopne
pop
in
push
push
cmp
cmp
cmp
rolb
jmp
add
push
push
and
jbe
in
add
adcl
jns
cld
inc
lret
jae
bound
insb
jbe
cmp
icebp
jl
pop
idivb
jl
popa
add
shll
sar
and
popf
or
inc
xchg
inc
pop
ljmp
lret
out
mov
mov
cs
decl
ret
cmc
add
popl
mov
sahf
sbb
dec
dec
push
icebp
scas
add
dec
inc
mov
sbb
mov
outsl
inc
inc
aad
xor
pop
push
push
movsl
jns
or
lret
cld
adc
orl
jmp
or
andl
insb
xchg
loopne
je
dec
mov
in
shr
repz
or
stos
push
xor
into
xchg
roll
test
mull
push
and
mov
pop
xchg
sub
call
adc
jns
loopne
pop
pushf
loop
jecxz
push
lret
int3
ffreep
imul
pushf
sbb
out
nop
shl
scas
frstor
mov
sbb
lea
or
adc
xlat
cmp
inc
sub
pusha
jbe
dec
inc
mov
xor
mov
icebp
lret
dec
cmpsb
sbb
fs
pusha
mov
inc
jle
xchg
mov
xchg
inc
cmovnp
lcall
popa
stos
je
lret
or
insl
mov
loopne
mov
mov
sbb
and
adc
pop
push
ja
out
in
jmp
xchg
xchg
out
xchg
das
and
push
mov
js
mov
dec
cmpsb
stos
sub
xchg
iret
aad
dec
and
fwait
inc
sbb
std
test
testl
sbb
push
xchg
daa
aad
cmc
jle
popf
push
jecxz
pop
add
mov
rcrl
subb
daa
pop
cld
lcall
pop
jae
or
jns
push
jle
pusha
push
sbb
jl
popl
jge
add
mov
stc
xchg
js
ss
in
push
dec
sti
sbb
icebp
adc
inc
loop
adcb
pop
iret
repnz
nop
not
je
out
mov
fldz
lds
add
cmp
cmp
out
outsb
lods
into
fisttpll
in
scas
add
adc
mov
repnz
mov
mov
xchg
lcall
cmpsb
cli
mov
pop
xchg
push
jb
call
gs
sbb
jns
cmp
in
mov
mov
sub
cmp
add
ljmp
inc
enter
in
mov
mov
lahf
sbb
fnstcw
inc
repz
dec
jp
ret
add
shlb
mov
push
inc
add
and
pop
rclb
inc
mov
call
add
out
push
int3
inc
xlat
push
add
dec
addr16
add
and
adc
pushf
daa
dec
out
insb
push
sahf
scas
aam
ds
xchg
mov
ja
push
lret
add
mov
movsl
mov
clc
lret
push
ds
mov
mov
sarl
sub
inc
insl
out
push
jecxz
push
aam
pusha
dec
pop
sti
inc
imul
cltd
dec
mov
jne
aam
mov
and
cltd
and
or
loop
fnsave
adc
icebp
adc
jns
scas
jo
mov
inc
sarb
xchg
addr16
and
iret
int3
mov
addr16
and
pop
dec
cmpsl
inc
stc
out
out
or
movsl
js
sub
test
test
jge
mov
rol
mov
lahf
loop
pop
adc
pop
mov
icebp
inc
arpl
out
int
push
mov
mov
int
scas
mov
adc
lea
sbb
cmc
cmc
gs
jmp
pop
or
aad
stos
jae
inc
mov
dec
inc
jbe
pop
mov
jns
pop
jle
ja
out
test
das
iret
in
xlat
sub
test
shlw
lahf
xor
inc
push
push
ljmp
jb
and
dec
sub
ret
add
test
je
and
mov
pop
insl
xchg
inc
jns
adc
sub
imul
popa
out
add
pop
fldcw
adc
sbb
cmp
mov
lret
cmp
repz
sbb
dec
and
and
pushf
and
xor
or
xchg
in
xchg
mov
and
roll
jmp
jl
jae
pop
mov
pminub
test
fmuls
mov
dec
repnz
jbe
mov
pop
add
jae
jae
mov
push
and
sub
or
push
sbb
or
and
xchg
aas
mov
data16
stos
sbb
cmpb
push
or
xor
call
push
jmp
xchg
sub
scas
loopne
mov
xchg
cli
xchg
sbb
jae
mov
mov
fdivrs
or
mov
jne
mov
ljmp
sbb
ret
dec
loop
loope
test
shl
jle
or
out
iret
and
jbe
fucomi
in
dec
das
inc
fistpl
dec
dec
and
pop
xor
mov
inc
cmp
mov
in
or
dec
dec
sar
popl
jle
movsl
movsl
out
mov
cmp
or
jp
shrb
lods
cmp
pop
lahf
je
ja
xor
jecxz
xor
stos
into
in
cmp
lcall
xor
scas
sub
popa
mov
cli
adc
xchg
jle
or
xor
lcall
push
pop
mov
mov
add
sub
cmp
or
xchg
mov
leave
fidivrl
or
call
cmp
arpl
fistl
adc
notl
push
and
lods
adc
scas
and
out
or
js
cmp
add
fnstenv
outsl
cmp
in
xchg
ljmp
jmp
mov
ljmp
pop
cmp
xor
aad
shll
and
and
leave
xor
insb
jno
ljmp
fwait
add
and
xor
mov
or
pop
lods
movsl
sbb
mov
lret
sbb
jae
sub
mov
loope
out
jecxz
loopne
out
mov
ljmp
jecxz
sti
and
and
jecxz
insb
jg
cli
stos
int3
outsl
mov
push
pop
in
cmc
jge
dec
jecxz
inc
lahf
push
mul
nop
xchg
iret
sbb
dec
mov
scas
aad
jmp
out
xor
cmp
call
dec
or
cltd
and
cmp
inc
jmp
fcomi
stos
push
or
imul
enter
push
fistpll
xchg
loopne
insl
das
pop
mov
mov
push
insl
sbb
xchg
push
outsl
dec
aam
subb
jmp
xor
sbb
xchg
add
pop
jl
arpl
in
and
dec
sub
call
and
pop
rcll
sub
xchg
mov
push
aas
or
fnstcw
mov
popf
fcmove
mov
and
fcoms
mov
dec
or
inc
push
cmp
movsl
movsb
mov
and
daa
gs
jmp
fildl
popa
cmp
mov
push
or
jo
ret
icebp
test
mov
fildl
xchg
push
sub
inc
out
and
sbb
or
imul
jns
jp
adc
mov
xchg
dec
js
dec
rcll
dec
std
sub
mov
mov
lock
hlt
loop
jb
mov
icebp
jl
movsl
sbb
inc
adc
in
aaa
movsb
sbb
xchg
enter
outsb
adcl
pop
lcall
inc
jle
adc
sti
test
pop
std
inc
push
in
add
or
mov
mov
shrb
xorl
hlt
dec
fs
faddp
sub
mov
incl
push
shlb
faddl
repz
pushf
push
jp
dec
mov
mov
mov
repnz
add
data16
mov
xchg
fucomip
out
adc
in
mov
lock
xchg
mov
jg
push
add
mov
sti
cld
dec
mov
roll
or
cli
push
pop
xor
push
xchg
pop
sub
sub
cmp
push
out
fbld
sub
sbb
icebp
pusha
jle
fsts
call
jno
add
ljmp
xchg
xor
aam
xchg
jb
push
out
or
inc
rcrw
popa
popf
sbb
xchg
xlat
out
pop
cmp
jge
jb
jnp
sbb
pop
fadd
sub
lds
sub
jns
and
popf
xchg
xchg
repz
xor
jnp
loope,pt
movl
xlat
mov
jg
mov
push
sbb
sub
fisttps
jae
jne
mov
imul
dec
xchg
decl
mov
xlat
push
adc
in
sub
mov
dec
mov
repz
arpl
dec
jne
jnp
mov
pop
mov
or
imul
xchg
jg
sbb
cmp
push
pop
sub
push
outsl
icebp
ja
mov
jmp
pop
push
in
adc
sbb
ficoms
mov
and
adc
inc
dec
sti
enter
dec
out
sub
mov
dec
cli
mov
test
cs
mov
fisttps
mov
aas
sahf
imul
int
lahf
jg
loope
adcb
outsb
mov
inc
cmp
xor
aam
int
out
mov
js
jbe
or
jb
out
call
sti
andl
sbb
pop
fstpt
stos
xorb
lds
adc
movsl
adcl
movsl
stos
push
xchg
add
mov
lret
aam
or
mov
cmp
int
pop
pop
and
mov
lock
or
xchg
rolb
jmp
or
aas
push
insb
imul
jmp
out
adc
mov
sti
scas
clc
xchg
xlat
in
in
adc
roll
xchg
call
loopne
push
repz
inc
push
push
pop
mov
imul
lods
add
fstps
pop
pop
cmpsb
xchg
lret
cmp
lcall
hlt
sub
xlat
nop
lret
test
jecxz
negb
ja
cmp
sbb
dec
sub
mov
scas
or
orb
jno
repz
addr16
push
fdivrl
jmp
aam
cli
rorb
or
out
enter
cmpsb
pop
sub
test
aas
mov
lret
push
jae
lahf
push
jp
enter
outsb
adc
sbb
js
cmp
insl
fimuls
pop
shrl
sbb
xlat
shrl
lds
in
sahf
loop
arpl
xor
mov
xchg
push
imul
cmc
sbb
fs
mov
or
scas
fwait
adc
dec
out
icebp
cltd
and
icebp
int
push
fadds
dec
add
lods
dec
pop
addr16
std
dec
in
in
in
pop
mov
jne
jp
cltd
inc
push
sub
dec
in
push
insl
xor
pop
sub
or
cli
mov
in
lea
out
ret
sub
adc
out
xchg
or
jl
mov
push
xor
hlt
inc
jecxz
jno
xor
xchg
pop
movsl
lahf
jo
or
insl
icebp
push
les
shl
pusha
inc
hlt
inc
out
pop
out
push
testb
out
cmp
and
insb
xchg
test
xchg
movsb
popf
inc
add
les
lcall
je
xlat
loope
sbb
std
ljmp
xorb
ss
push
xchg
cmp
add
fistps
std
cld
fdivp
ret
add
push
inc
jnp
test
xor
js
fwait
jg
jnp
push
test
or
insl
sbb
dec
mov
inc
cmp
dec
outsl
ficoms
rol
jmp
addr16
mov
and
cmpsl
jmp
mov
loopne
movsl
sbb
aaa
pop
inc
xrelease
jg
mov
call
xchg
add
ret
adc
scas
outsb
push
movsl
xor
rcl
out
out
inc
cmp
fwait
scas
and
sub
push
jp
push
scas
cmp
cli
sbbb
xor
test
js
sbb
test
dec
gs
jb
ret
ret
push
les
jp
js
ret
aad
pop
mov
push
out
pushl
ret
pop
cmc
lods
sbb
mov
addr16
into
jmp
inc
mov
jne
cmpsl
mov
sub
cmp
dec
adc
subb
xchg
push
push
lret
mov
fdivrp
push
aad
ror
mov
test
pop
das
pop
xor
push
aaa
nop
sub
push
pop
lods
insl
lods
mov
and
mov
addr16
loop
xor
sbb
and
dec
loop
adc
pop
clc
cli
pushf
xchg
xchg
dec
fisubrs
out
mov
inc
out
int
fcmovnb
and
jbe
cli
aaa
add
mov
mov
mov
mov
pop
mov
addl
pop
or
movsb
adc
sub
add
jb
outsb
inc
popf
and
cmp
mov
cmp
nop
add
inc
xor
sbb
out
es
and
icebp
xor
cmp
pop
mov
jcxz
add
sbb
repnz
jge
mov
into
dec
jmp
xchg
idivb
inc
mov
addr16
dec
jbe
mov
sbb
mov
lcall
add
push
cs
pop
pop
cli
repnz
pop
call
jne
cwtl
or
push
mov
inc
push
int3
jle
jl
in
imul
in
ret
or
mov
add
fmul
dec
jnp
xor
mov
sub
rolb
icebp
push
jns
outsb
das
out
aas
imul
mov
ds
mov
pop
out
sti
dec
xchg
pop
cwtl
popf
sti
mov
push
sbb
adc
sbb
or
inc
push
jo
mov
and
xchg
sub
jecxz
ljmp
dec
loopne
inc
or
lcall
decb
pusha
mov
cmp
clc
mov
mov
adc
outsl
mov
add
std
insl
xchg
lods
imul
and
adcb
mov
xchg
in
shr
fistpll
xchg
sbb
ljmp
sarb
xor
mov
test
xor
loopne
insl
lods
xor
arpl
lods
in
cli
and
insl
lahf
sahf
xor
sahf
pop
adc
outsl
jecxz
sbb
lods
mov
inc
out
mov
pop
fildll
mov
jnp
imul
inc
imul
fildl
push
in
mov
cmp
cwtl
mov
sahf
adc
mov
dec
shlb
mov
test
int3
mov
add
xchg
pushf
lahf
lock
nop
mov
or
dec
lods
sbbl
xor
loopne
xchg
rorl
sub
mov
rcl
push
cmp
out
icebp
xchg
out
stc
and
ljmp
push
or
into
jmp
xor
rorl
shll
out
aam
xor
mov
adc
aaa
imul
xchg
ficoms
sbb
xor
pop
lret
lds
cmp
pop
dec
push
test
pop
cmpsl
movsb
cmpsb
lock
ret
sub
aas
dec
or
pop
adc
out
mov
movsb
jl
cltd
push
loope
aad
push
jae
fwait
push
gs
enter
pop
lret
inc
pop
xchg
inc
push
aad
xchg
or
lock
pop
push
push
jmp
movsl
cmpl
jle
dec
adc
mov
test
data16
xchg
cmc
add
sti
lret
mov
popl
mov
loopne
popa
ret
xor
dec
sarl
fidivl
add
sub
inc
mov
and
call
sub
sub
and
xor
lods
xor
dec
inc
mov
mov
or
add
inc
mov
cmpsb
jae
add
xchg
outsb
cltd
and
fidivs
idivb
lock
imul
xor
stos
lahf
push
sahf
repz
lret
sub
jp
lods
jb
orl
call
mov
add
gs
inc
pop
lods
les
inc
or
hlt
xor
rcl
and
and
inc
mov
mov
rcll
pop
lock
sub
icebp
jb
adc
adc
xchg
mov
xchg
mov
mov
xchg
cmpsb
in
push
fwait
sub
inc
hlt
into
dec
xorl
inc
insb
insb
popa
fwait
pop
ret
fbld
pop
dec
mov
out
ds
and
xor
pop
jns
sbb
dec
and
mov
leave
ljmp
dec
std
repnz
sub
push
push
sbb
mov
mov
jno
bound
dec
cli
jae
int3
jl
leave
inc
sbb
mov
fs
lahf
push
sti
js
aam
xchg
adcl
js
loope
jns
nop
lcall
test
cmc
pop
aad
lahf
or
push
dec
jg
push
cwtl
jecxz
push
xor
inc
xchg
add
ljmp
add
fcmove
mov
and
xchg
inc
xchg
fidivl
or
pop
or
push
cmp
push
gs
mov
push
add
jae
fucom
fmul
and
push
daa
loope
xor
or
inc
fmull
or
imul
insl
push
push
lods
andb
ret
frndint
and
ja
int
mov
push
cmpsb
cmc
stos
xchg
in
outsl
xchg
cld
enter
pop
jg
lods
int
xorb
push
loope
pop
jg
fisubrl
pop
fisubl
cwtl
int3
push
fcmove
pop
ss
aaa
xlat
inc
xor
cmpl
adcb
xchg
out
dec
dec
xor
icebp
std
bound
ret
loope
push
push
imul
filds
cmp
imul
and
inc
lahf
repz
out
xchg
xchg
adc
dec
je
xor
cltd
int
sbb
lcall
cmp
ficompl
jb
scas
cmpsl
les
push
scas
clc
mov
sbb
sub
xor
jmp
push
rcl
add
mov
loopne
movsb
xchg
add
mov
mov
push
shrb
lcall
popa
es
shr
ss
loop
xorb
dec
out
stos
test
cmp
cmp
jae
fdivr
mov
insl
mov
call
js
adc
mov
mov
mov
gs
orl
inc
cmpsb
mov
addr16
loope
mov
xchg
test
andb
sbb
pop
push
cli
mov
ret
out
sub
ljmp
fisttps
mov
dec
loopne
jl
xor
loope
test
pop
lds
movsl
mov
outsl
jae
jmp
inc
mov
or
push
cs
inc
jmp
xlat
cltd
je
imul
and
lcall
rclb
or
andb
cmp
sbb
stos
cmpxchg
fwait
mov
or
out
daa
lods
cmp
dec
xchg
mov
aaa
mov
insb
jbe
lahf
shlb
pop
leave
test
aad
cld
pusha
inc
mov
jnp
fisubrs
cli
xchg
jl
or
or
mov
adc
inc
push
pop
imul
add
xchg
or
xchg
sub
or
jge
push
lret
ja
testl
lds
cwtl
mov
cmp
out
lods
or
in
insb
ss
jmp
mov
push
xchg
push
arpl
pop
inc
sub
pop
xchg
lods
pop
lahf
inc
leave
cmpsl
adc
inc
add
lea
cwtl
jle
push
sub
gs
jmp
imul
xor
lock
es
jo
mov
mov
jns
out
scas
popa
in
repnz
in
push
scas
notl
xor
sbb
js
sbb
int
rcrb
jns
mov
jp
int
push
inc
add
xor
rorl
cwtl
mov
or
dec
push
int3
sbb
mov
mov
xor
xchg
aam
lret
mov
jge
rorb
push
sarb
scas
loope
fbstp
inc
out
testb
cld
jne
xchg
and
in
jg
sete
cs
jp
imul
mov
xor
cmp
and
testb
mov
cmp
lea
mov
push
dec
mov
pop
int3
out
movsl
aaa
cmpsl
call
popa
sub
scas
or
dec
jo
ds
jae,pt
fldt
popa
pop
je
scas
cmpsl
cmpsb
inc
loopne
mov
dec
and
cld
andl
jne
jecxz
push
inc
push
and
inc
jl
in
lock
in
imul
xchg
mov
adc
rcrb
cmc
outsb
pop
mov
xchg
xor
mov
ss
mov
jl
stc
mov
faddl
out
jge
leave
cltd
fdivs
fiaddl
jle
imul
stos
cmpsb
inc
push
xorl
and
xor
clc
jb
nop
add
pop
xlat
rol
or
jns
or
sub
orb
mov
adc
adc
and
mov
jge
mov
orl
js
and
pushl
call
or
mov
jns
bound
out
sub
loope
inc
insb
icebp
in
cmp
xchg
jbe
push
or
into
pop
mov
repnz
test
pop
jnp
mov
icebp
mov
fwait
loop
loopne
mov
sbbb
mov
or
dec
out
data16
inc
and
push
push
sub
ja
inc
pop
jecxz
pushf
push
cltd
push
out
ss
sbb
jno
xor
pop
add
push
fs
mov
pusha
ljmp
leave
je
sar
addr16
or
mov
stc
aam
ror
bound
sub
cltd
rcl
dec
adc
pop
iret
add
mov
sub
lret
fadds
fldcw
out
cmp
int3
and
dec
in
cmp
cli
mov
xchg
cs
xchg
mov
loope
testl
jae
add
xchg
xor
loop
popa
jp
and
and
movsl
mov
daa
jecxz
xchg
std
bound
add
repz
sub
pop
inc
int
test
or
push
lret
and
arpl
mov
dec
cmp
js
xchg
sar
mov
cmpsb
icebp
insl
mov
jl
jg
cmp
push
out
mov
sarl
mov
daa
cltd
cmp
scas
fdivrs
stc
shrb
mov
dec
sub
mov
xchg
sbb
cmp
add
subb
sahf
mov
mov
insl
clc
popa
shlb
es
sub
imul
pop
test
stos
pop
in
pop
push
mov
aam
sub
fnstsw
and
clc
out
test
lcall
out
push
jne
movsl
jl
mov
jl
inc
fwait
sub
inc
cli
sbb
cmp
push
inc
cltd
out
push
addb
fildll
mov
andb
lods
and
jns
jle
pop
dec
fldl
pop
add
arpl
mov
mov
sbb
andl
out
imul
add
out
stos
push
je
imul
mov
addb
clc
cmpb
mov
mov
sub
mov
sbb
outsb
cmp
out
sbb
or
sbb
shlb
sbb
lahf
je
and
mov
mov
fcomp
hlt
sbb
add
xor
sbb
inc
sbb
mov
rcrb
sbb
addr16
call
out
add
xchg
xchg
adc
cltd
inc
int
loope
xchg
pop
lahf
mov
cmp
jp
pop
mov
or
jl
pop
mov
mov
pop
mov
jo
xchg
rcll
mov
mov
fwait
pop
stos
out
stc
lahf
sti
into
add
cmp
rorb
das
leave
and
fstpl
jl
dec
mov
insb
jge
lcall
pop
dec
mov
cmp
fucomip
jnp
adc
dec
fsqrt
int3
jno
pop
add
sbb
push
sub
sub
das
push
push
loope
jp
pop
xlat
in
not
pop
sbb
sbb
pop
mov
cltd
xor
rcl
popf
test
add
dec
mov
xor
sbb
shl
dec
in
repnz
mov
mov
push
or
jecxz
mov
repz
cmpsb
sbb
xchg
aad
xor
lods
insl
fsubs
xlat
clc
inc
ret
cmpsb
cmp
add
jge
xchg
pop
decb
jmp
les
cmpsb
pop
or
dec
cmp
mov
sbb
fdivr
jo
fucom
shr
xor
xor
mov
inc
sub
pop
mov
lret
mov
sub
push
pop
bound
mov
push
xor
pop
mov
push
cmp
pop
fwait
loop
and
shrl
mulb
mov
shl
fwait
notb
in
mov
jp
movsl
call
stos
cli
test
xor
fisttpll
sbb
dec
push
and
ja
push
adc
dec
arpl
lods
cmpsb
andl
or
pop
xchg
mov
push
sahf
cmc
pusha
xor
and
sbb
cmp
add
mov
in
pop
test
xchg
lock
and
sbb
lock
mov
insl
sub
mov
sub
ljmp
fbstp
nop
repz
shll
ljmp
aaa
rolb
push
mov
outsb
push
fucomp
pop
cli
jb
and
js
daa
out
lock
inc
sar
lret
mov
js
add
sub
stos
shlb
std
mov
fbld
imul
mov
rorl
mov
mov
addb
dec
loope
and
fwait
jae
inc
ljmp
mov
repnz
and
inc
or
xor
aam
mov
xchg
mov
adcb
call
inc
mov
xchg
ret
nop
stc
daa
jnp
in
test
mov
sub
aam
dec
outsb
or
mov
hlt
xlat
sub
pop
loope
out
js
dec
subb
jmp
pop
push
test
jmp
push
icebp
dec
loopne
cmp
pop
test
das
mov
mov
cmp
pop
sarl
ss
paddusw
jns
lods
add
push
jle
ss
sub
movsl
test
dec
pop
adc
test
cmp
jns
daa
cltd
or
inc
fistps
xor
mov
add
mov
clc
cmp
repz
stc
sbb
jne
jg
int
outsb
scas
jecxz
loopne
stos
and
lcall
fiadds
mov
dec
into
scas
dec
and
mov
inc
lahf
pop
pop
andl
nop
cmp
lcall
out
ja
arpl
mov
cmp
or
sub
test
and
xchg
xchg
sub
daa
and
or
push
hlt
or
cs
mov
or
cmp
fwait
cwtl
ss
lea
imul
add
sub
and
xchg
ret
xchg
data16
mov
mov
sub
add
das
xor
repz
stos
int
sbb
loope
adc
iret
test
lods
call
lods
cmp
sbb
sbb
mov
mov
adc
adc
dec
icebp
scas
jecxz
popf
and
jg
pminub
filds
pop
mov
xchg
pusha
out
in
dec
sub
cmpsl
dec
in
xchg
fadd
fs
shll
das
mov
pushf
fwait
int
cld
push
push
jp
mov
jmp
loop
or
mov
mov
rcrb
mov
lock
cld
or
sub
sub
jmp
lret
jl
cwtl
insl
xchg
popl
fisubrs
loopne
int3
sbb
xor
mov
pusha
jbe
mov
mov
sbb
dec
sbb
dec
jmp
enter
in
adc
pop
stos
movl
lret
sbb
rorl
addb
sbb
shrl
test
jno
sarl
mov
mov
xchg
lahf
or
jp
aam
scas
popf
xor
fnstcw
dec
xor
push
or
inc
mov
mov
push
adcb
pop
pop
rorl
popa
jo
int3
movsl
inc
dec
inc
and
ss
fwait
push
cmp
xchg
lahf
ret
cli
push
jbe
xor
xlat
mov
shrb
lea
xchg
in
sbb
loopne
mov
push
shrb
in
sbb
sub
push
and
xchg
int3
mov
mov
cmpsb
mov
andb
hlt
int
subl
jbe
mov
xchg
lods
inc
sahf
sub
adc
push
nop
xchg
adc
scas
mov
popf
imul
sbb
cmp
sbb
add
jne
mov
repz
inc
mov
sbb
xchg
jmp
dec
mov
stc
pop
andb
pop
add
or
xor
les
inc
push
xlat
cmp
mov
clc
out
shrb
mov
jmp
nop
lahf
sbb
push
xchg
lea
and
jecxz
adc
xor
add
in
mov
clc
pop
les
jne
push
lahf
jmp
leave
aam
inc
or
jg
push
cmp
in
add
cmp
int3
jbe
dec
push
inc
fists
imul
aaa
inc
jge
andl
sbb
nop
push
cli
out
loop
int
cmpsb
fstl
push
jmp
ret
ret
imul
cmpsl
xor
adc
jle
pop
hlt
dec
push
and
dec
les
gs
inc
mov
sbb
push
mov
sub
inc
mov
push
lock
jmp
push
stc
in
sub
lods
test
cmp
addr16
jb
push
insb
enter
xor
lret
and
and
mov
cmp
lock
into
faddl
jp
mulb
test
jo
and
jge
mov
in
mov
fnstcw
pop
daa
mov
push
aad
xchg
add
adc
sti
and
dec
cmp
test
sarl
negl
leave
repnz
add
pushf
pusha
push
aaa
or
repz
jle
fnstcw
andb
push
xor
inc
push
sahf
fisttps
repnz
pop
xor
fstpl
xchg
pop
cmp
out
orl
jbe
dec
movb
inc
or
ljmp
xchg
or
out
jmp
add
mov
sbb
xchg
jb
fwait
call
pushf
adc
push
mov
das
jecxz
jne
xchg
lret
pop
mov
fs
bound
xchg
xor
lods
int
jae
int
jno
nop
sub
sub
movb
stos
sarl
sbb
rol
cmpsb
or
ss
data16
ret
fldl
or
sbb
push
cmp
aas
pop
pop
xchg
je
in
xchg
icebp
mov
das
gs
clc
data16
fldl
bound
jp
popf
mov
lret
repz
in
xlat
outsl
push
cmp
and
in
or
mov
bound
cmpsl
dec
movsl
jne
aam
in
daa
aad
dec
mov
xchg
sbb
mov
push
outsl
mov
jp
jg
loop
add
mov
pop
push
sbb
mov
rcll
popa
es
mov
out
jmpw
and
jl
sub
add
testb
mov
jno
adc
sub
int
cmp
add
ret
add
popf
dec
stc
xchg
adc
jb
ret
inc
ja
ss
inc
add
push
pop
mov
mov
test
faddl
lds
or
xor
mulb
ret
adc
push
je
test
jns
mov
shll
xor
xchg
ss
sub
test
adc
add
loopne
sub
fcoms
cmp
ret
cmp
leave
lcall
lods
dec
and
xchg
sub
jp
mov
inc
mov
ret
jp
daa
sbbb
pop
in
xchg
pop
xchg
mov
pop
fwait
dec
decb
clc
jecxz
xchg
insb
add
sbb
adc
cmp
inc
xor
leave
ljmp
inc
test
inc
xor
inc
adc
jno
mov
shll
hlt
mov
mov
xchg
int
push
cwtl
mov
push
mov
jne
xor
push
gs
inc
repz
push
in
loop
adc
insl
mov
sbbb
dec
mov
std
sbb
fs
inc
rorb
fdivp
xlat
jge
test
mov
mov
lret
cmc
aad
and
or
pusha
mov
push
fists
in
push
ljmp
and
pop
imul
push
pop
xor
in
inc
into
pop
and
inc
push
sbb
mov
mov
add
filds
call
mov
mov
int3
aad
inc
push
dec
dec
lret
shll
push
xor
mov
sub
repnz
inc
cmp
jmp
add
inc
cs
mov
stc
add
dec
xor
cld
push
push
inc
pop
push
movsb
pop
cmpsb
je
icebp
push
mov
cmc
sub
jns
jle
xlat
sahf
xchg
pop
aaa
sbb
dec
xlat
cmp
stc
imul
add
adc
mov
popf
mov
pop
sahf
push
ss
or
fimuls
sub
dec
xor
sub
fisttps
or
dec
dec
mov
adc
lock
xchg
mov
cwtl
aad
std
sub
lahf
mov
cmp
or
xorl
mov
jg
push
xchg
jp
xchg
loop
jg
mov
movsl
loop
push
jbe
pop
add
push
and
clc
rolb
sbb
cmc
ja
and
xlat
pop
arpl
jb
mov
push
enter
daa
in
cmp
shll
sub
pop
dec
push
mov
mov
adc
inc
pop
jp
inc
and
fstp
jmp
mov
fsubl
jge
dec
sub
aam
in
xor
mov
xor
sbb
hlt
cmp
cmp
push
sbb
lret
fmuls
jae
jne
inc
xchg
popf
jno
and
dec
xchg
inc
gs
das
fwait
jo
and
enter
nop
sub
sti
scas
shr
add
xor
repz
lds
clc
inc
cld
lea
add
jmp
and
lock
mov
enter
aam
call
xor
pop
mov
cmpsb
into
lcall
mov
xchg
fcomps
jle
outsb
stos
mov
pop
push
pusha
xor
jp
test
in
sbb
fisubs
cmpsl
jbe
add
dec
or
das
sbb
lret
push
inc
test
jns
movb
iret
sbb
push
pop
pop
not
sub
loopne
add
pop
xchg
lret
and
lea
add
shll
jecxz
out
and
gs
imul
xchg
jno
xchg
in
mov
fwait
mov
push
sub
jno
dec
jg
sub
addr16
sbb
inc
cmp
movsb
lods
mov
mov
mov
jge
push
push
jbe
xchg
jo
leave
outsb
int
in
lock
add
jns
add
enter
bound
or
sahf
xchg
addl
aad
mov
jno
jnp
mov
sub
call
lods
cltd
jae
stc
xor
add
nop
dec
aam
call
repnz
cmpsb
mov
cs
cmc
sbb
nop
cmpl
in
push
call
lahf
pop
mov
or
adc
add
cld
mov
sbb
mov
enter
scas
movsb
lahf
rorb
push
xchg
or
or
pop
in
sbb
mov
sbb
and
and
out
imull
negl
lods
or
shrb
xor
xor
jae
mov
in
lds
adc
out
hlt
cwtl
test
fsts
mov
lret
rclb
lea
stos
repz
movsl
sbb
dec
xchg
sub
push
adc
test
pop
fwait
idivl
mov
jle
in
inc
xchg
mov
out
xchg
lods
pop
leave
imull
mov
sbb
mov
in
jecxz
mov
out
xor
lcall
xor
add
push
cmpsl
cs
sbb
aam
in
fcoml
jle
sti
jle
in
enter
or
mov
mov
push
cli
jle
jae
test
dec
fs
cltd
cli
ljmp
loopne
or
mov
push
jge
mov
sbbl
pop
ret
fsubs
in
mov
testl
adc
mov
sub
dec
adc
shlb
rorl
sbb
fimuls
mov
push
adc
aad
sbb
test
movsl
mov
fs
loop
mov
inc
adc
xor
mov
insl
neg
inc
rorl
fcompl
mov
cmp
adc
std
call
mov
scas
xor
mov
arpl
rclb
cmpsb
push
mov
int
in
cli
cmp
imul
dec
inc
or
pop
xchg
arpl
sub
leave
sbb
push
insl
pop
adc
xlat
jg
add
insb
jb
pop
sti
jle
iret
pop
or
mov
push
movsb
sbb
add
cmp
pop
rolb
imul
je
int3
test
jns
cmp
mov
iret
pop
out
loop
pop
shll
sbb
push
lea
bound
xchg
lods
in
jl
arpl
jb
adc
dec
cli
scas
les
fwait
sub
push
mov
dec
and
ds
bound
jmp
lds
dec
dec
cs
cmp
inc
shl
std
mov
mov
mov
fidivl
sti
mov
cmpsl
ds
lret
sub
lea
std
mov
mov
fidivl
dec
scas
rep
cli
xor
out
sbb
mov
xor
pop
xchg
mov
out
je
stos
adc
mov
ja
in
movsl
jbe
jne
push
and
imull
jnp
cmp
push
std
int3
nop
std
and
mov
xchg
lock
loope
push
movb
fdivs
out
push
outsl
pop
push
imul
ljmp
push
jnp
nop
jae
dec
lret
mov
sbb
ret
xor
or
aad
icebp
subb
sub
push
clc
and
and
lods
mov
leave
sub
call
jns
mov
clc
or
pop
add
jae
dec
test
sub
jmp
iret
inc
push
xor
aad
pop
mov
mov
push
xchg
mov
mov
adc
xor
lret
pushf
dec
aam
test
xchg
in
mov
loop
lock
outsl
push
xlat
mov
scas
jns
mov
mov
push
mov
mov
xchg
fcompl
adcb
ffreep
and
popa
loop
movsl
mov
sbb
insb
xor
sub
iret
daa
mov
negl
scas
shl
lret
and
inc
sub
ljmp
mov
orl
in
xlat
sti
xchg
mov
and
push
cmc
and
add
pop
sti
or
icebp
sbb
push
cmp
pavgw
in
into
or
xchg
adc
adc
dec
jl
mov
hlt
inc
jmp
enter
sub
cmp
mov
push
xchg
stos
dec
ss
push
in
sub
pop
mov
call
mov
jne
data16
movsl
stc
outsl
ja
shrb
jl
imul
pop
fildll
dec
add
xchg
pop
xlat
or
scas
jmp
dec
add
fwait
mov
je
sbb
out
ret
arpl
mov
or
xlat
mov
xchg
addr16
inc
push
jmp
fisubl
xor
or
sub
in
lds
in
adc
xlat
dec
jnp
push
jnp
dec
push
cmp
sti
shrl
push
add
add
mov
sub
pop
xchg
xchg
cmc
mov
mov
cltd
js
out
loope
jmp
addl
mov
mov
imul
dec
in
and
lea
pushf
pop
cltd
bound
mov
xchg
fidivl
cmp
imul
subb
dec
jg
pop
pmullw
ror
lret
in
insl
add
aad
outsb
sbbb
popa
fstpl
je
test
mov
popf
loop
pop
push
and
lahf
dec
cwtl
imul
add
xchg
xor
cld
mov
loope
pop
or
movb
sbb
subb
sub
ss
jne
iret
jae
ret
aas
fneni(8087
xchg
push
mov
out
sub
pop
sub
mov
add
cvtdq2ps
xchg
repz
pop
aaa
cmpsl
push
aaa
add
pop
push
movsb
push
repz
mov
mov
xchg
repz
add
mov
test
pushf
lret
les
stos
je
jns
inc
mov
cmc
jg
jg
jle
out
jns
dec
push
inc
repnz
jno
pop
mov
out
push
insb
mov
mov
movsl
jnp
cmp
xorl
fisttps
jmp
cmp
ret
dec
jb
shll
fcomp
lock
loopne
hlt
je
scas
jge
mov
pop
lret
popw
js
dec
insb
stos
ja
push
mov
push
popf
sarb
aas
mov
or
lret
mov
test
inc
adc
xchg
mov
inc
adc
dec
mov
cmpsb
and
fldcw
mov
sub
subl
sub
mov
sub
jp
ror
push
mov
sbb
in
ss
sbb
cld
clc
es
mov
out
pop
enter
xor
ss
movsb
add
xchg
jno
lods
iret
into
push
dec
mov
lahf
cmc
sbb
pop
rcrb
push
shr
add
push
push
test
pop
pop
mov
or
js
dec
decl
test
sub
faddl
jmp
xor
pop
andb
push
bound
sti
push
lods
mov
aas
lock
push
add
adc
xor
daa
mov
or
mov
loope
sbb
mov
sbb
std
lods
nop
jg
sub
sbb
int3
outsl
pop
add
fs
add
out
test
movsl
jg
sbb
xchg
cmpl
add
jb
pop
jecxz
dec
nop
lods
cmp
inc
iret
andb
or
mov
adc
inc
dec
cmp
sub
sub
sbb
in
jbe
add
ds
mov
enter
push
xor
out
mov
sahf
pop
dec
and
and
add
cwtl
fwait
pop
outsl
xchg
scas
lods
aam
test
je
add
inc
xchg
adc
add
popa
roll
imul
movsb
sub
xlat
sub
jne
xchg
or
imul
cmpsl
jecxz
in
pushf
adc
out
cmpsb
divb
out
jmp
fidivrs
aas
pushf
mov
mov
pushf
lret
mov
pop
lcall
xorb
aaa
movsb
mov
xor
in
pop
cmpsl
lea
push
dec
push
jmp
in
mov
pop
popf
mov
je
lahf
and
movsb
mov
or
outsb
int3
add
mov
in
andl
imul
ja
jmp
and
in
iret
cmp
dec
inc
xchg
lods
mov
mov
xchg
enter
adc
fs
sub
add
sbb
push
pop
bound
and
das
dec
imul
pop
and
fcmovnu
push
xchg
test
roll
or
xor
fldt
inc
jle
xchg
xor
mov
adc
push
mov
cmp
dec
inc
dec
xor
aam
das
inc
dec
test
adc
inc
lds
into
clc
lea
mov
pop
arpl
and
sarb
test
jg
inc
ds
jb
popf
pop
jo
nop
das
insb
xlat
sbb
cmpb
dec
outsb
cmp
adc
xchg
mov
push
xchg
pop
fldt
sbb
and
js
mov
mov
scas
pushf
test
ror
je
cmc
cli
stos
mov
popf
js
leave
icebp
ss
aas
addr16
push
cmpsb
jns
mov
nop
mov
test
cwtl
test
das
mov
fsubl
leave
push
sbb
pop
in
sbb
inc
data16
dec
data16
fwait
lods
fwait
sub
add
ret
jns
dec
xor
nop
popf
pusha
mov
loop
nop
pop
mov
cmc
dec
arpl
adc
add
fstpl
add
jl
inc
adc
jmp
jo
idivb
jbe
aas
sbb
repz
movsl
sbb
shr
push
adc
push
mov
lret
imul
hlt
cli
mov
hlt
xor
sub
aam
cmp
shll
fsubl
imul
or
std
stos
mov
sub
mov
int
sbb
mov
sbb
cmp
das
dec
scas
xchg
dec
jp
jmp
test
jbe
pop
int
arpl
hlt
rorl
mov
fadds
push
jmp
out
cmpsb
cmp
add
nop
imul
test
in
sub
lods
in
jne
xor
and
adc
ds
jge
notb
arpl
scas
mov
pusha
cmc
dec
xor
jnp
xchg
lea
into
push
or
aaa
push
mov
xchg
push
insb
sbb
push
push
loop
arpl
das
dec
mov
lds
mov
gs
shlb
pop
outsb
pusha
out
loope
jl
mov
jl
adc
nop
sahf
pop
adcb
test
sub
jg
push
movsl
mov
stc
popa
cmpsb
inc
repnz
jae
mov
mov
pop
nop
push
sub
mov
addr16
mov
aas
fldt
lds
and
sub
jne
data16
adc
stos
cmc
fisttpl
sub
lahf
jb
mov
test
xor
xchg
jecxz
cmp
or
mov
sbb
sub
pop
pop
pop
cltd
push
pop
ficompl
aad
adc
mov
movsl
fidivl
out
lcall
add
loop
and
repz
and
lret
fistpll
in
add
mov
lds
sbb
jae
iret
stos
xchg
mov
sub
out
push
in
push
hlt
mov
mov
add
ret
outsl
xchg
xchg
cmp
push
ficomps
fstpl
fidivl
push
lahf
push
negl
adc
test
lea
mov
jecxz
push
outsb
push
out
scas
jnp
in
in
not
pop
and
mov
add
mov
xorb
jo
cwtl
xor
lds
mov
xchg
popa
mov
je
mov
adc
xor
inc
xor
or
movsb
pop
jo
jge
mulps
mov
mov
popa
add
int
pop
fld
and
fwait
repz
add
inc
ret
fmull
icebp
insl
into
aam
mov
loop
or
jno
pop
cmpb
adcl
add
jo
lret
xchg
pop
or
pop
jle
jnp
push
mov
lahf
out
and
mov
fistps
and
lahf
xchg
jecxz
lods
test
mov
push
aad
inc
aaa
jo
loop
sub
shrb
test
daa
push
clc
les
mov
das
cmpsb
add
testb
inc
jl
mov
movsb
imul
mov
jg
popf
cmp
decb
fs
pop
into
jns
loopne
and
mov
iret
aam
fidivrs
add
or
das
jecxz
xor
adc
out
pop
mov
push
hlt
add
dec
cmp
test
mov
and
mov
xor
xchg
or
pop
stc
xor
dec
je,pn
mov
push
adc
lea
sbb
je
or
cmp
adc
shlb
lods
pop
push
add
sub
and
fstpl
loope
adc
mov
jmp
or
or
cmpl
jne
mov
aaa
scas
vsubsd
out
fisubl
jmp
mov
mov
cmp
lea
negb
xor
xor
sbb
pop
cmc
mov
jo
fists
and
push
fs
cmp
das
lahf
xor
icebp
pop
testl
scas
push
adc
cmp
adc
add
cmpb
cs
bnd
push
lods
and
bound
je
les
loop
mov
call
clc
pop
and
mov
cmp
pop
inc
aas
xor
loopne
sub
jno
sbb
mov
ret
aad
push
stos
jne
jbe
jo
cmp
inc
sub
fmuls
ficomps
pusha
ficomps
dec
sub
adc
sub
add
xchg
xchg
pop
bound
jb
mov
mov
push
and
lcall
pop
ljmp
movsl
adc
scas
es
mov
pop
inc
sub
sub
in
cltd
ljmp
dec
outsb
repz
xchg
cli
je
ficoms
cmp
mov
sbb
xorl
sbb
rcrl
adc
arpl
lret
ds
adc
jecxz
inc
or
flds
dec
ret
mov
pop
sbb
inc
cmp
sub
push
xchg
sub
scas
rcll
and
cmp
aam
and
lret
xor
bound
sbb
xchg
stc
xchg
mov
mov
adc
popa
jns
cwtl
test
dec
sti
inc
outsb
jno
add
mov
cmp
add
incl
dec
das
push
mov
adc
lock
sahf
add
cmp
clc
rorl
and
sub
xchg
sbb
nop
mov
add
jg
adc
cwtl
add
mov
pop
cmpsb
mov
pop
jmp
ja
adc
cs
into
into
sbb
ror
out
lods
pop
adc
fstpt
rcrl
push
iret
push
mov
push
sub
fsts
icebp
ficoml
rclb
into
jecxz
loope
cmp
add
pop
pop
addr16
push
xor
adc
testl
das
cwtl
xor
adc
mov
xchg
mov
inc
mov
push
pop
ljmp
and
out
and
cmovns
cmp
cmpsl
push
xchg
aad
nop
incb
pop
mov
sub
call
pop
pop
jo
lds
repz
push
lods
sbbb
jge
fcomp
push
mov
cmpsb
rcll
jo
mov
jecxz
push
mov
ja
orl
pushf
loopne
push
imul
enter
shr
cltd
stos
push
scas
mov
lock
xchg
movsl
push
add
cmp
xchg
lret
cmpsb
mov
and
cmpsb
jbe
dec
mov
mov
mov
pusha
cmp
inc
xchg
cmpsb
loopne
jle
nop
in
adc
xor
push
std
add
xchg
sbb
loopne
stos
clc
add
pusha
sub
sub
push
dec
scas
and
adc
inc
andps
inc
outsb
pop
rcrl
mov
jo
sbb
mov
xchg
push
mov
movsl
push
rolb
hlt
out
dec
fimuls
int3
aam
and
in
push
xlat
mov
outsl
in
arpl
nop
xchg
sub
adc
insl
mov
mov
stc
shr
mov
xor
roll
shlb
pop
or
stos
sub
mov
pop
aaa
les
mov
fldcw
adc
push
test
jae
push
adc
sub
movsl
int3
js
mov
shlb
fdivrl
add
mov
add
fcmovnu
push
cltd
repz
fldl
hlt
push
notl
mov
pop
add
jle
or
sub
sub
and
mov
sarl
psubb
pop
iret
sldt
sub
mov
adc
popl
int
lods
cmp
mov
loopne
or
rorl
les
iret
je
inc
pop
xchg
js
mov
movsl
repz
adc
mov
and
push
stos
inc
or
les
sub
jbe
push
sub
out
fidivrl
sbb
loop
mov
das
adc
adc
movsb
les
dec
xchg
into
xchg
pop
inc
jl
mov
sbb
mov
dec
fildl
push
lcall
pop
mov
mov
pushf
sbb
decl
or
inc
xlat
sub
sahf
and
fnsave
push
aad
enter
mov
dec
or
ja
fsubrl
ja
xchg
inc
dec
or
stos
xor
or
clc
ja
cwtl
sti
jle
jmp
outsb
bound
cmpsl
add
cmpsb
jge
cmp
adc
dec
sub
ret
into
jmp
jmp
mov
sbb
mov
mov
lock
xchg
cmp
mov
lods
int3
cltd
jae
xorb
push
pop
stos
xchg
cli
outsl
mov
jmp
mov
data16
sarl
push
sbb
scas
sub
into
sahf
fldenv
test
popa
roll
mov
jle
jmp
xchg
cmc
loop
sub
inc
jecxz
bound
insb
xor
test
xchg
sub
insb
les
xchg
sti
pop
jbe
mov
insl
stos
ds
mov
and
inc
jge
adc
and
mov
cmp
imul
jge
aad
xor
pop
aas
rolb
jns
jbe
inc
jmp
pop
sub
fwait
into
mov
cs
leave
jae
adc
or
mov
test
lock
add
and
shll
inc
addb
jo
mov
push
add
cltd
popf
js
adc
aaa
fbld
jle
lcall
jp
stc
mov
add
fcmovb
outsb
inc
loopne
and
jl
push
out
test
lods
xchg
insb
ja
fidivrs
xchg
add
jl
fimuls
mov
stc
insl
repnz
imul
and
test
sti
lret
mov
int
scas
dec
aas
test
dec
mov
int
out
push
test
loopne
add
es
xor
cmpsb
inc
aam
fs
xor
sub
iret
shr
dec
out
push
test
push
fsts
addl
pop
loopne
movsl
xlat
int
clc
xorb
jne
or
sahf
jnp
movsb
pop
rcpps
sub
push
fbstp
aad
jecxz
mov
adc
add
addr16
adc
mov
adc
andb
mov
pop
leave
jg
xor
fs
movsl
inc
mov
movsb
mov
cmp
xor
ret
and
out
push
and
dec
cmp
sar
iret
xchg
pop
lock
insl
xchg
cld
pusha
sub
push
jle
ret
mov
cltd
sub
cmp
mov
imul
dec
adc
pop
dec
jno
mov
inc
mov
pop
movl
inc
addl
push
push
out
xorl
pop
repz
aaa
xor
inc
cmpsl
dec
sbbl
sbb
icebp
icebp
inc
dec
pop
xchg
sahf
sbb
push
mov
faddl
mov
add
icebp
xor
adc
adc
sti
mov
xor
push
xchg
call
xor
cmp
testl
mov
ficompl
push
sub
xor
dec
jecxz
xchg
pop
jnp
push
lcall
addr16
rcrl
mov
jb
loopne
mov
cmc
jecxz
ja
dec
mov
mov
push
jge
out
sub
popf
push
arpl
testb
into
pop
lcall
push
fists
push
into
mov
xlat
std
push
insb
sbb
rolb
sub
fldt
sahf
shl
mov
and
clc
outsb
aaa
cld
js
js
popa
add
movsl
cli
and
cltd
insb
enter
scas
repnz
push
pop
in
inc
roll
enter
shlb
mov
pop
mov
dec
ljmp
cmpsb
inc
in
dec
mov
jp
cwtl
cmpsb
push
mov
xlat
test
or
jo
loopne
push
xor
push
iret
xchg
push
je
outsl
mov
add
cmp
std
push
dec
fdiv
test
add
mov
cs
pop
or
loope
shl
xlat
inc
data16
dec
data16
mov
add
mov
fcmovnu
fists
aam
jb
or
dec
mov
pop
fstps
or
mov
cmp
push
sbb
adc
clc
out
mov
cli
sarb
cltd
adc
out
jge
aas
sbb
mov
scas
stc
dec
clc
xchg
fisubl
pusha
adc
mov
mov
loop
add
xor
mov
repz
fwait
scas
outsl
and
ror
push
pop
call
pop
enter
pop
cmp
mov
mov
xchg
push
mov
outsl
jge
or
jo
roll
and
jbe
push
jns
push
cld
enter
fldcw
push
pop
push
push
enter
jmp
jl
sbb
mov
ss
pop
dec
xchg
or
cs
les
pop
dec
aad
das
xlat
imul
xlat
jae
and
adc
cmp
cwtl
gs
mov
test
mov
test
sbb
into
decb
pushf
sub
sbb
adc
out
mov
insb
in
xor
sbb
ljmp
addb
or
pop
adc
mov
or
or
sub
cmc
daa
xorb
mov
aam
leave
js
lea
dec
cltd
scas
fistpl
xchg
outsl
arpl
push
in
inc
aad
js
addb
ljmp
lods
lret
mov
ja
popa
pop
sbb
jns
pop
add
out
push
jae
sbb
jne
outsb
test
cmp
mov
add
or
lret
pusha
movsl
inc
mov
rcrl
mul
clc
push
sahf
jb
cld
or
cltd
push
dec
push
push
add
lret
xor
sub
je
mov
aam
xchg
ds
movsl
pop
je
mov
mov
addr16
xchg
stc
fsubl
les
xchg
or
fldt
movsl
pop
mov
fs
push
lds
jg
mov
pop
jo
pusha
movb
scas
push
movsb
add
mov
stc
icebp
std
jecxz
pop
movsl
or
lds
fidivl
test
adc
test
out
repz
mov
xorb
mov
fldenv
test
cs
bound
rcll
mov
aad
mov
in
rcrl
pop
stos
call
jno
mov
add
push
out
and
leave
mov
clc
cmp
movsb
out
dec
movsl
icebp
push
int3
cmp
out
lahf
and
lds
xor
stos
imul
mov
sbbb
scas
jle
add
cli
and
mov
test
in
pop
sbbb
roll
pop
aas
pop
push
sti
fisubrs
int3
jle
jae
insb
jo
cld
or
inc
mov
addr16
jecxz
lcall
mov
or
mov
or
jl
jge
jmp
xor
popf
push
sub
loop
xchg
add
out
and
enter
jle
push
inc
adcl
sub
mov
popa
jl
jg
pushf
lock
jbe
pop
jno
daa
lretw
cli
decl
lods
or
jbe
mov
mov
and
lret
inc
jg
repnz
push
repz
les
xor
arpl
adc
fstpl
stos
rorl
arpl
push
push
and
adcl
cmp
inc
orb
test
or
sub
out
mov
pushf
push
gs
ljmp
ret
mov
mov
aaa
dec
insb
sub
xlat
loop
jl
xchg
ss
mov
loope
inc
daa
dec
pushf
cmpsl
pop
mov
andl
rcll
cmp
push
pushf
int3
hlt
fmuls
jecxz
mov
out
jb
mov
andl
in
jb
lcall
test
in
in
dec
push
jns
int3
push
fidivrl
mov
sub
loop
in
pop
xchg
and
push
mov
jb
sub
lock
ucomiss
incl
mov
ret
fs
jae
test
dec
insb
pop
std
sub
add
inc
mov
sbb
pop
push
loopne
xchg
test
sbbb
inc
cwtl
mov
rolb
mov
mov
lods
adc
cmp
push
dec
mov
jmp
into
cmc
loope
out
cmp
pop
fs
mov
ret
rorb
and
dec
sub
add
jns
outsl
les
sbb
int
cld
push
inc
sub
or
mov
es
and
inc
xchg
je
cmpsb
pop
jne
sbb
cld
mov
lods
pusha
or
lods
shll
or
adc
das
and
mov
pop
mov
or
jp
ret
rolb
push
xchg
popa
inc
incl
in
cmpsl
xchg
insb
jno
fisubl
enter
lcall
pop
xchg
xchg
and
imul
mov
sub
mov
aad
pop
mov
cmp
jmp
push
mov
mov
push
mov
in
pushw
pop
cli
cmp
xchg
jg
sbb
and
ds
jnp
into
mov
add
jecxz
popf
out
fadds
enter
aam
aaa
sahf
mov
jb
jecxz
sbb
adc
sbb
push
das
in
ljmp
imul
into
ja
mov
fidivl
mov
jno
xor
ljmp
sub
pop
mov
ljmp
sub
and
fisttpl
dec
xchg
push
push
jne
sbbb
add
add
aaa
test
mov
dec
mov
sub
push
leave
push
mov
imul
jae
cmp
pop
test
jmp
add
mov
enter
aaa
xor
inc
data16
or
jp
mov
inc
mov
jmp
out
sti
add
sahf
mov
int3
xchg
pop
xchg
push
mov
outsl
inc
mov
arpl
sub
xchg
sbb
cwtl
imul
outsb
insl
sub
fwait
stos
icebp
pop
pusha
sub
push
lock
lock
xor
std
jl,pt
add
es
icebp
pmaxub
idivl
aad
mov
pop
jno
mov
cmpsl
call
dec
adc
pop
outsl
in
and
xor
cmovb
push
inc
lcall
mov
add
xor
mov
dec
adc
dec
es
cmpsl
push
xor
movsl
mov
sub
pop
dec
mov
xor
inc
sahf
cli
scas
and
adc
enter
push
push
in
mov
bound
mov
or
fcmove
ret
add
mov
cli
daa
adc
int3
sub
pop
jb
lcall
and
jae
pop
enter
addr16
jbe
inc
jnp
jno
aad
mov
fistps
add
jno
jns
sbb
movsb
mov
mov
pop
push
cmpsb
push
push
or
cld
dec
cmp
test
cmp
jge
fwait
dec
xchg
bsr
sti
je
mov
add
ss
fisttpl
inc
push
addr16
push
in
push
flds
sub
hlt
cmp
inc
js
jo
int
xchg
pushf
pop
and
xor
mov
xchg
fildll
jns
pop
or
jp
pop
pop
jne
mov
inc
and
xchg
xchg
dec
adc
lods
jnp
out
sbb
aad
daa
cmpsl
cmp
je
or
push
lar
jno
clc
ret
jne
cli
sub
sub
rclb
scas
movsb
and
mov
mov
in
push
divb
push
or
pusha
add
sbb
inc
sahf
les
sub
mov
pop
lcall
xlat
out
leave
cwtl
add
icebp
or
mov
jbe
mov
jl
jg
add
xchg
scas
mov
mov
jl
jns
cmp
jae
js
jecxz
dec
cmp
lds
fldt
leave
jae
loopne
cmpb
mov
hlt
pop
and
cli
mov
lahf
sbb
pop
sahf
mov
xor
std
pop
andl
ret
in
daa
aam
in
pop
jle
lret
dec
je
in
in
mov
pop
popf
xchg
sub
jmp
jp
xor
jns
es
xchg
mov
jp
cwtl
inc
cwtl
je
pop
out
pandn
popa
jo
add
jmp
movl
repz
mov
repnz
mov
aaa
or
xchg
and
sar
xchg
test
xchg
or
xchg
test
dec
mov
mov
xchg
pinsrw
cmp
jle
stos
rol
dec
ss
inc
mov
cmp
fs
imul
fdivrl
icebp
pushf
cmp
mov
out
ja
xor
mov
xchg
xchg
imul
push
fdiv
pushf
sahf
leave
mov
cs
je
out
xchg
cwtl
ss
iret
cmc
cmp
xchg
es
mov
mov
ret
sub
out
movsl
add
cwtl
lret
jno
int
or
xor
sub
push
sbb
rolb
pop
xchg
and
in
or
push
mov
ja
shll
push
dec
mov
cld
mov
xchg
mov
push
fcoml
push
lret
xor
mov
mov
add
cmp
pop
pop
sti
adc
call
test
mov
movsb
leave
pop
xchg
outsb
rol
fcoms
jb
dec
mov
in
sbb
mov
xlat
ja
aas
fwait
out
cli
pop
aaa
or
push
test
push
push
cmp
xor
jp
xor
sub
push
cld
addr16
out
mov
or
lock
rcll
mov
mov
or
add
push
ja
filds
pop
ja
cmpsl
mov
loopne
out
fistps
inc
dec
inc
outsb
cmp
sarb
movsb
lods
stos
cmpsb
bnd
sbb
pushf
rcll
scas
mov
push
imul
xor
jp
aaa
pushf
mov
pop
dec
leave
popl
loop
fisubl
jp
fwait
stc
fucomp
js
push
jo
std
hlt
lahf
jmp
jp,pn
neg
push
xor
mov
pop
mov
cmc
mov
movsb
mov
sbb
mov
sahf
mov
repnz
lcall
pop
fsubs
andb
test
mov
dec
iret
pop
cwtl
mov
or
lods
and
sub
scas
push
inc
jo
js
xor
sahf
out
test
add
and
push
push
sbb
sbb
cld
sbb
adc
test
cmpsl
int
mov
xchg
daa
repnz
test
insl
ss
in
jmp
aad
jge
adc
cmc
outsb
pop
pop
and
xchg
push
sbb
insb
jo
lret
push
das
jle
daa
sub
mov
add
dec
mov
das
push
sahf
test
cmp
call
fsubrs
or
adc
gs
mov
and
xor
pop
jg
leave
mov
push
pop
mov
stos
sub
sbb
push
movsb
sub
in
cltd
cmp
insb
out
jne
addr16
sub
mov
mov
lret
xchg
fs
xor
ljmp
and
aas
mov
dec
mov
scas
iret
dec
in
test
adc
das
mov
hlt
sub
cmp
adc
icebp
leave
pop
out
jb
sbb
and
and
push
mov
or
ret
sbb
xchg
nop
pop
bound
mov
ljmp
pop
mov
shlb
nop
out
cmp
and
sbb
xor
pop
cwtl
repnz
add
loope
cltd
sbb
das
fldl
add
ret
scas
imul
andl
or
lahf
movsb
push
mov
fisubl
cs
or
lret
dec
xor
jb
mov
imul
dec
mov
stos
dec
mov
dec
lods
arpl
jne
in
mov
dec
sbb
adc
lods
sbb
cli
stos
fiadds
sub
sbb
xor
jns
mov
enter
add
adc
pop
sbb
mov
dec
sti
add
push
sbb
xchg
mov
xchg
mov
mov
or
ret
js
mov
lret
mov
push
xchg
mov
out
movsl
xchg
outsb
xchg
or
int
out
pop
insl
or
outsl
jnp
dec
imul
ss
shlb
sbb
lret
jecxz
ja
ret
push
cmpsl
inc
pop
xchg
sbb
push
movsb
and
xorl
cmp
mov
dec
push
and
rcll
js
add
in
fcompl
sub
mov
out
fidivl
data16
arpl
cmp
ret
mov
mov
push
ret
adc
sub
cmp
sub
gs
mull
and
push
push
mov
bound
das
aam
sub
xchg
lret
stos
divb
imul
push
in
icebp
mov
push
loope
inc
push
ljmp
dec
and
and
js
push
outsb
jp
sub
shll
lret
mov
cmpsl
in
inc
push
jnp
fxtract
cmp
mov
adc
cmc
imul
leave
adc
xor
in
pop
push
cmp
aas
test
out
adc
lods
push
dec
js
out
push
xor
loop
or
add
into
mov
jnp
iret
sbb
add
or
test
addb
pop
mov
or
hlt
fisttpll
mov
xchg
jbe
lret
rorb
shlb
or
mov
insb
add
jle
cmpsb
fsts
jmp
and
loop
and
push
rclb
fimuls
scas
nop
jnp
cmp
jo
les
push
andb
int3
jecxz
movsb
mov
ja
jae
scas
cwtl
cmp
jle
adc
push
mov
lahf
xchg
push
ljmp
cmpsl
ss
pand
mov
hlt
pop
sub
jl
shlb
cltd
mov
cmp
mov
jns
inc
dec
dec
daa
bound
leave
in
enter
push
add
jae
add
andb
cld
push
jmp
sub
jg
shlb
cmpsb
adc
sbb
pop
out
or
shrb
test
or
je
adcl
and
aad
scas
bnd
pop
lahf
pop
ss
fucomip
scas
xchg
mov
adc
pop
psrad
cmp
push
aaa
scas
aas
test
nop
push
inc
fdivs
jg
loopne
jbe
mov
aas
pop
sub
dec
cmp
repnz
imul
test
jns
jl
cmpsb
daa
dec
ja
jle
jmp
jns
push
subl
push
ja
ja
fistpl
imul
jge
movb
pop
loopne
add
push
incl
xchg
ficompl
push
mov
cmp
mov
das
mov
fdivrp
lock
mov
pop
sub
nop
add
rolb
movntq
out
push
stos
pop
leave
mov
pop
sbb
insl
int
scas
ss
adc
frndint
inc
leave
std
ss
jae
aam
enter
test
mov
xchg
inc
pop
push
insb
mov
sbb
call
imulb
sub
dec
xchg
and
in
ljmp
mov
in
xor
loope
icebp
test
and
push
cli
push
sbb
cmp
inc
imul
packsswb
mov
addr16
or
pop
xchg
mov
sbb
xchg
add
rclb
into
cmp
and
mov
outsl
push
cmc
jge
push
add
or
hlt
pop
add
and
inc
repnz
jl
cs
pop
sub
mov
cld
xsaves
insb
cmpsb
mov
loopne
inc
inc
lcall
stc
jo
lods
jecxz
clc
jle
das
sti
or
jnp
xchg
sbb
mov
mov
iret
pop
mov
sub
jmp
lods
lock
and
mov
bound
and
mov
and
int3
orb
adc
cmp
jge
mov
add
nop
fsubp
rolb
cmp
ret
mov
aad
rorl
outsl
mov
cmp
in
pop
mov
int
ret
inc
cmp
in
fdivr
jle
or
lret
fsts
shlb
loop
xchg
xor
push
ret
push
repnz
loop
lahf
lahf
sub
in
shl
adcb
outsb
jle
inc
add
movsl
and
in
or
add
dec
cmp
cmp
dec
sub
cmp
mov
pushf
xchg
cmc
xchg
jns
inc
push
gs
push
xchg
mov
pop
pop
aaa
jecxz
mov
cmp
mov
mov
sub
ljmp
pop
outsl
dec
ss
sahf
pop
ss
cmpb
call
das
mov
in
iret
sub
and
sub
clc
cmpsl
mov
pop
pop
cmp
vphadduwd
gs
rorl
add
test
icebp
jnp
and
push
inc
int3
xor
mov
add
mov
icebp
aas
mov
cmp
jmp
insl
repnz
xor
mov
jmp
scas
je
in
push
loop
add
icebp
add
xchg
pop
js
jle
rcll
sahf
mov
repz
repnz
sub
add
lea
loopne
popa
inc
iret
popa
cltd
jb
je
cmp
int3
sbb
test
xor
and
je
pop
punpckhdq
jo
sbb
jmp
adc
mov
push
ret
dec
xor
dec
std
cld
shlb
repnz
insb
and
ret
jo
ja
test
test
faddl
inc
ret
mov
pop
xor
add
xor
xchg
scas
lcall
into
call
cltd
cmpsl
orb
and
jmp
insl
hlt
mov
inc
test
fldt
dec
jle
or
push
testb
rcl
lds
sti
dec
pop
cwtl
and
ja
add
ret
mov
sti
sti
outsb
pop
inc
add
gs
ficompl
mov
jl
jne
or
pop
nop
fists
ret
mov
mov
inc
push
out
cwtl
nop
push
test
sbb
lock
test
hlt
push
incb
push
enter
push
in
xchg
call
enter
sbb
lods
ss
push
rorb
mov
cmpxchg
repz
and
xchg
jne
ja
mulb
rorl
jle
mov
cmc
cmpsl
jne
cmp
into
sbb
mov
in
lds
fmuls
enter
xor
jle
fsubs
insl
aad
fcoml
xchg
mov
fcmovb
iret
mov
mov
dec
jno
sahf
jmp
jns
cmp
add
mov
andl
dec
add
xchg
out
dec
fmuls
rorl
mov
es
inc
scas
cmpb
mov
inc
loop
imull
xchg
faddp
sar
roll
mov
mov
repnz
rcll
pop
popf
pop
in
mov
ja
jge
xor
decl
jle
call
test
push
pop
inc
btc
xchg
call
outsb
out
pop
cs
es
mov
cmp
icebp
aam
push
out
pop
loopne
inc
rorl
xchg
jg
sbb
lods
sub
imul
stos
adc
fsubl
and
push
dec
xor
jae
jg
or
outsl
std
cmp
out
insb
pop
movsl
lock
mov
adc
adc
pusha
sub
cmpsl
xorb
mov
insl
int3
add
jb
push
aas
fisubl
jge
jge
push
out
lret
jne
xchg
push
mov
rclb
sub
xor
out
push
fisubs
fldcw
cltd
and
fwait
shll
and
or
inc
rcll
pop
cmpsb
mov
arpl
lret
jecxz
adc
or
xchg
test
pop
fwait
jno
mov
lock
pop
mov
or
inc
dec
fsubrl
or
out
clc
clc
mov
je
sahf
lea
push
pop
lock
je
xor
xor
add
lods
pop
mov
nop
push
lea
and
aaa
xor
push
adc
lret
subl
mov
jno
and
loop
dec
loop
imul
cmp
mov
xchg
testb
movsb
pop
es
push
movsl
lcall
ss
ret
adc
cmp
addr16
jae
sbb
aam
mov
lret
roll
mov
push
outsl
mov
repz
test
test
xchg
push
sub
add
adc
in
mov
add
mov
sbb
and
enter
sbb
and
dec
movsl
les
pop
mov
push
out
mov
inc
inc
xchg
mulb
jbe
mov
test
jbe
out
out
es
or
bound
ljmp
pusha
xchg
xchg
push
aaa
or
sub
add
cmp
repz
mov
xchg
sub
mov
sub
sub
insl
int
xor
cs
inc
outsb
hlt
test
je
pop
std
sub
in
pushf
loopne
and
mov
inc
in
rcrb
lahf
aas
dec
ss
stc
cmp
sar
les
in
outsl
out
jecxz
mov
pop
insb
fs
mov
push
pop
inc
shl
nop
sub
sbb
pop
push
mov
xorb
sub
imul
lds
mov
ss
pop
sub
fcoms
setbe
fdivl
push
rclb
test
stos
addr16
mov
cmp
inc
pop
xor
hlt
xchg
push
pop
push
loope
ja
repz
mov
jnp
push
xor
in
xchg
imul
inc
test
inc
lret
fnstcw
enter
xor
out
out
out
ja
mov
inc
inc
pop
fdivr
out
dec
pop
inc
in
pop
fstps
and
pop
sbb
loopne
icebp
inc
and
cmpsb
push
xchg
hlt
fbld
inc
nop
adc
enter
fs
mov
jecxz
adc
pop
dec
inc
aaa
testb
and
fmull
into
dec
push
es
popf
inc
or
cmp
pop
gs
addr16
pop
fwait
xchg
push
imul
mov
sarl
cwtl
pop
hlt
adc
in
jne
pop
mov
jns
inc
subl
jg
sbb
push
cld
stc
and
vunpcklps
pop
push
test
pusha
and
in
dec
inc
xchg
mov
dec
xor
aam
fcoml
mov
out
push
push
xor
push
popf
push
ja
push
and
stos
cmp
repnz
ss
loopne
aam
cmp
sbbb
data16
xchg
das
mov
xchg
add
pop
cmp
and
les
xchg
inc
call
pop
xor
pop
xchg
and
add
add
icebp
pop
cli
xchg
sbb
out
add
enter
rorl
fnstsw
lcall
repnz
sbb
mov
je
sbb
xorb
xor
and
xchg
pop
pop
stos
rdpmc
aam
jbe
sbb
xor
lock
push
setnp
shr
mov
sub
call
test
filds
push
sub
orb
pop
push
je
mov
jge
or
pop
sahf
dec
pusha
cmc
test
aam
ds
jnp
jg
lods
rcrb
mov
ss
sbb
enter
shlb
stos
shl
test
mov
sbb
sub
adc
pushf
adc
push
adc
hlt
xchg
arpl
lods
stc
repnz
scas
sbb
and
mov
in
add
add
packuswb
repnz
xchg
sub
leave
ja
jno
and
push
roll
xor
mov
dec
in
or
jg
shlb
and
xor
inc
and
cs
mov
hlt
sbb
jp
lahf
fs
xchg
pop
rorl
mov
lcall
and
int
mov
jno
and
jb
jb
inc
out
mov
sbb
push
mov
popa
outsb
jae
pushl
mov
popf
dec
mov
fs
test
nop
jbe
jmp
and
dec
push
mov
in
sub
push
sahf
loopew
xchg
and
xchg
inc
mov
mov
stc
gs
idivb
push
aaa
pop
and
cwtl
loopne
movsb
mov
cmp
hlt
cmp
xor
cmp
and
pop
xorl
arpl
test
mov
scas
inc
ret
das
fiaddl
add
cmp
stos
mov
sub
add
inc
mov
ficoms
ja
das
mov
in
mov
push
mov
or
pop
sub
loope
insl
pop
jge
jnp
jmp
ja
cmp
ret
sti
divb
iret
in
nop
sbb
out
fcmovb
dec
in
test
icebp
jae
leave
mov
inc
in
xlat
add
inc
dec
dec
mov
iret
pop
sbb
mov
adc
mov
adc
sub
int3
loopne
fcoml
in
movsl
inc
and
aad
mov
pop
xchg
popf
in
divl
sti
cli
addr16
pop
push
movsb
mov
lcall
ret
mov
add
lds
je
xor
shrb
mov
mov
and
inc
scas
cli
push
lea
push
sti
pop
test
gs
in
adc
lret
fadds
in
fbld
repnz
scas
popf
xchg
xchg
xchg
push
jecxz
rcrb
push
fsts
js
push
mov
sbb
xor
scas
adc
mov
pop
adc
scas
mov
mov
mov
mov
das
cwtl
inc
insb
push
xchg
dec
imul
xor
jle
stos
jnp
clc
sbb
jnp
xor
pushf
push
in
cltd
xchg
ficompl
or
xor
in
cltd
add
movsl
cmc
in
and
mov
dec
lods
lcall
sbb
xor
mov
push
iret
nop
lcall
out
cmp
or
fisttpl
cmpsl
stc
cmp
mov
leave
popa
cmpsb
mov
sub
sahf
fs
roll
pushf
mov
imul
leave
lock
add
movsb
pop
mov
and
les
xchg
gs
jmp
dec
adc
mov
lret
inc
stos
push
push
dec
cmpsb
mov
addl
ja
call
and
imulb
cmp
outsl
pop
sbb
insb
andb
mov
ficompl
xor
stos
aaa
lods
aad
dec
fs
out
or
cltd
aaa
in
std
test
xchg
test
xchg
xchg
es
mov
rcrb
out
repnz
insl
ljmp
fs
test
insb
pop
ret
je
stos
pop
sub
jo
cmc
fstl
out
pusha
imul
ret
cmpsb
repz
xchg
pop
dec
inc
mov
sub
std
in
loope
icebp
xchg
out
int
hlt
in
rorb
loop
sbb
add
cmc
cmc
jbe
add
xlat
mov
push
lcall
mov
xor
push
push
jge
in
inc
adc
push
push
jb
pop
sahf
mov
test
out
ds
pop
into
jmp
sbbb
in
out
addl
pop
and
jecxz,pn
arpl
ret
jno
mov
test
stos
push
push
jno
cld
push
loopne
jnp
pushf
in
jb
cmpsb
mov
pop
mov
jecxz
pop
add
pop
pop
or
dec
clc
mov
or
mov
int3
add
sub
test
out
add
mov
notb
rorl
fimuls
into
push
idivb
sarb
sub
cmpsl
decl
scas
lea
fmull
jae
stc
das
push
add
es
xchg
insl
push
jne
ja
mov
shlb
test
add
ja
xchg
cld
push
mov
das
xchg
fcmovnbe
cmp
loope
test
sub
xlat
xchg
jge
cs
rsm
test
aad
loop
jge
push
mov
xchg
aaa
cmpb
dec
repz
es
or
cwtl
inc
cs
and
pop
ja
aad
mov
scas
sbb
scas
imul
in
or
or
cmp
lds
xor
rcl
jae
xchg
push
aas
xchg
xor
push
fistpll
fwait
inc
lods
aad
or
loope
mov
mov
or
test
pop
gs
scas
dec
add
pop
cmpsb
mov
repz
daa
or
lret
loope
add
arpl
push
mov
mov
popa
aam
jle
pushf
iret
sbb
aaa
fs
push
pop
inc
adcb
dec
mov
jp
hlt
fcoml
stos
call
cmp
xor
inc
iret
jecxz
loopne
push
iret
in
add
jp
popf
xchg
xor
xor
pop
and
loopne
add
add
cmp
ss
sbb
push
mov
xchg
fidivl
sub
cmp
add
inc
dec
xchg
js
mov
iret
jg
cltd
mov
xor
js
repnz
or
push
out
fcompl
repz
enter
stos
xchg
mov
sub
push
idivb
jl
arpl
les
adc
cmpsb
jne
mov
dec
pushf
jne
or
mov
add
stc
dec
and
pop
adc
cmp
push
and
repnz
lcall
fwait
jns
mov
adc
cmc
xchg
sti
cmc
mov
sbb
rorb
or
mov
mov
add
mov
int
sub
and
xchg
push
aaa
scas
mov
ret
out
add
shlb
mov
jb
pop
jmp
xchg
fistl
and
aam
out
pop
push
stos
lret
mov
in
push
mov
imul
and
mov
mov
cmc
cs
dec
pop
add
jmp
out
std
vcvttpd2qq
ja
scas
repz
cmc
add
ret
add
pushf
rcrb
into
mov
mov
mov
xchg
mov
cmpsl
lods
dec
sbb
roll
cmc
inc
movsb
pusha
push
lock
cmp
shlb
xchg
mov
sbb
pop
adc
xor
xor
repnz
jg
imul
lahf
push
fsts
add
xor
stc
add
aaa
popa
addr16
adc
cmp
andb
leave
jnp
lret
movsl
sub
lahf
dec
mov
icebp
outsl
insb
inc
jl
add
xor
jne
pop
mov
jnp
and
cmpsl
ret
imul
cmp
sbb
jmp
je
outsb
push
mov
movsb
dec
pop
popf
push
and
xchg
mov
loopne
add
arpl
jae
dec
mov
mov
mov
push
loope
xchg
movsb
mov
sbb
pop
and
jp
push
ficoml
xchg
ja
leave
hlt
icebp
mov
mov
adc
xchg
lret
mov
mov
mov
scas
jl
xchg
jnp
sbb
sbb
mov
insl
xchg
and
arpl
leave
sub
dec
or
fmul
fnstenv
pop
pushf
and
std
sub
and
sbbl
xchg
pop
mov
arpl
gs
mov
ds
popa
cwtl
cmpsb
xchg
lds
clc
insl
fsts
mov
push
jp
cld
xchg
pusha
cld
adc
xchg
addr16
xor
add
cmp
fistpl
leave
jl
test
shlb
mov
inc
adcb
jp
shrb
loope
cmp
scas
xor
add
into
cmp
inc
arpl
lods
or
inc
data16
and
add
cs
inc
lret
xlat
loop
mov
imulb
jnp
xor
shll
outsb
stc
ret
push
shl
out
add
ficompl
xlat
xor
mov
cmc
ret
or
push
orb
lahf
inc
pop
xlat
sub
test
dec
imul
push
sti
mov
jbe
mov
loop
and
pusha
push
adc
ja
aaa
loopne
sub
mov
xchg
xor
pop
inc
inc
dec
push
sub
nop
cwtl
lcall
fs
xchg
insl
mov
imul
pop
arpl
in
jb
es
mov
sub
jg
pushf
jl
fucomi
lock
rcl
push
adc
data16
aaa
inc
sub
out
add
mov
pop
int
nop
js
jno
rorl
clc
sub
inc
dec
test
sub
mov
rcrl
fsts
iret
mov
ror
jne
xor
mov
aam
or
xchg
push
sub
mov
mov
decb
lea
repnz
mov
ljmp
aad
fstpt
mov
fbstp
aas
clc
cld
sub
out
dec
shl
icebp
and
cmp
xchg
or
mov
cmc
stos
or
cli
inc
mov
xchg
and
adc
fucomp
inc
mov
bound
and
out
sub
pusha
jmp
and
inc
test
aas
xchg
int
mov
rcr
sahf
inc
in
add
addr16
icebp
pop
out
jo
mov
mov
pop
lahf
repz
sar
notb
ss
mov
xor
xchg
dec
pop
mov
fsubr
and
xchg
call
imul
cmp
sbb
inc
enter
pop
sub
add
sti
scas
jmp
or
cmp
test
stos
shlb
inc
jae
rcll
mov
push
roll
jp
cmp
lock
pusha
dec
sbb
push
mov
andl
bound
or
pop
dec
cmp
mov
and
out
bnd
or
lret
add
sbb
aam
shlb
cmp
data16
pushf
scas
pop
int3
pop
dec
sub
jecxz
pop
lods
push
and
sbb
mov
jae
jbe
inc
cmc
pop
movd
cmpsl
xor
lcall
cmp
xchg
push
enter
mov
pop
push
dec
aaa
mov
out
fstp
push
dec
gs
gs
dec
ret
lret
fstpt
faddl
je
mov
stos
in
sahf
or
into
adc
ret
xlat
jae
loop
mov
clc
xlat
push
lea
rcrl
and
lahf
sub
stos
cmp
js
aad
cltd
lret
inc
jmp
and
dec
call
xor
scas
cmpsb
in
inc
aas
orb
mov
xor
add
push
inc
dec
xchg
sub
mov
and
adc
inc
push
and
daa
cmp
in
xchg
sub
fcomi
dec
lahf
sub
rclb
je
movsb
dec
push
pop
jbe
fcoml
jg
mov
fdivrl
xchg
push
push
mov
test
insl
out
arpl
jmp
mov
ss
data16
loopne
lret
mov
mov
mov
insb
mov
aaa
pop
jae
fs
lea
mov
mov
lret
sub
cmp
jns
jle
dec
inc
lret
incl
jnp
ret
movsl
adc
sub
rcll
arpl
cmc
mov
outsb
mov
jae
dec
outsb
jne
mov
bound
jmp
mov
fists
inc
xchg
movsl
fs
das
aam
fdiv
cmp
ror
cmc
movsl
das
xchg
sbb
mov
xor
push
cmpsb
insl
repnz
push
faddl
push
xchg
jae
notb
shl
mov
jnp
sub
scas
pmullw
push
xor
fsts
ficoml
xchg
fcmovb
scas
mov
cld
les
std
fcoml
mov
adc
adc
sub
pop
push
cwtl
and
adc
lea
pushw
repz
mov
and
cld
std
movsb
push
sti
xor
mov
inc
stc
mov
mov
add
sbb
int3
sbb
pop
out
sbb
fidivrl
mov
mov
mov
test
das
je
add
inc
dec
push
pusha
mov
idivb
lea
cld
gs
stc
clc
popf
xor
xchg
jo
jecxz
sub
icebp
dec
mov
mov
repz
fistpl
mov
mov
inc
lcall
fcomps
xor
inc
addr16
adc
pushf
sub
push
pop
sub
mov
cmc
icebp
in
and
filds
push
in
sub
adc
fiadds
fadds
rorl
popf
xlat
xor
sub
js
fwait
ror
jg
enter
orl
fnstcw
adc
aas
push
repz
and
mov
repnz
imul
aaa
inc
ja
add
xchg
mov
aas
mov
lahf
aas
loope
mov
jbe
stos
fidivs
test
cmp
lods
adc
jge
sar
movsl
pop
push
rclb
xchg
loop
shlb
lret
mov
jno
imul
pop
insl
adc
push
jp
dec
test
loope
pop
dec
xor
ret
xchg
jecxz
inc
push
int
test
dec
scas
pusha
push
jmp
mov
jp
pusha
fwait
mul
dec
dec
in
xor
and
mov
sbb
andb
xchg
mov
les
scas
popl
push
hlt
inc
ficompl
repnz
repz
pop
movsl
daa
xchg
stos
or
popf
out
adc
add
jg
mov
filds
fdivl
sbb
js
xlat
xchg
xor
iret
mov
mov
iret
mov
or
je
pop
leave
test
add
push
imul
pop
shlb
xor
and
mov
xor
fmuls
dec
push
add
clc
out
mov
je
inc
into
scas
bound
sbb
mov
lds
bound
aad
add
jne
cmpsb
icebp
lcall
mov
mov
dec
lock
adc
dec
dec
das
jge
lods
adc
xor
jb
jmp
mov
fbstp
outsl
mov
or
dec
xor
xchg
in
and
icebp
sahf
sbb
aas
jp
xchg
mov
out
aaa
mov
mov
inc
bound
mov
mov
lret
jo
insl
jnp
xor
push
mov
add
dec
jl
cwtl
xor
pop
pop
scas
cwtl
push
jecxz
xchg
mov
aad
add
inc
jle
add
in
fstl
pusha
cwtl
mov
out
push
and
int3
dec
pop
test
frstor
jae,pn
mov
les
inc
mov
loop
cmp
cmc
sti
or
jmp
mov
int3
jnp
or
out
pop
in
xchg
adc
mov
mov
scas
cwtl
add
inc
rcl
les
push
ficoms
loop
nop
out
shll
add
dec
test
cmp
ljmp
insb
adc
movsb
or
mov
push
fidivrs
add
cli
shr
mov
das
andl
in
idivl
mov
fmuls
pop
loopne
add
std
mov
std
mov
and
mov
popa
add
pusha
stc
ret
jnp
push
stos
mov
jbe
and
fimull
int
or
inc
adc
xchg
lret
or
test
add
nop
jle
daa
or
xchg
scas
in
cmpsb
mov
insl
stos
sbb
fisttps
cmc
adc
shlb
imul
xor
pop
push
mov
out
sub
lret
pusha
outsl
jl
popf
enter
inc
adc
cmpsl
pop
lret
sub
xchg
pop
xor
mov
lahf
cmovs
in
mov
jno
pop
or
lods
pop
movsb
mov
xchg
cmp
call
push
fidivl
push
aad
add
add
or
mov
rclb
arpl
jns
inc
xor
scas
pop
sbbl
inc
xchg
pop
and
outsl
cmp
pop
sbb
push
fsubl
test
sbb
or
ds
adc
out
inc
jo
dec
dec
ret
sbb
test
popf
push
mov
sbb
testb
cmpsb
sbb
cmc
filds
xor
pop
das
xor
ss
inc
call
xchg
pop
addr16
push
pop
mov
cmc
xor
mov
and
sbb
xor
mov
dec
sbb
mov
mov
scas
ds
sarl
jg
cmpb
imul
leave
inc
in
lcall
add
aam
hlt
push
test
fidivrl
dec
pop
cmp
fwait
aaa
and
jge
jl
mov
jnp
cmp
mov
jg
mov
mov
out
jo
in
scas
and
mov
and
outsl
dec
sbb
test
pop
mov
mov
outsb
jle
inc
adcl
aaa
add
add
mov
xor
sarl
orl
jne
cld
aas
into
pop
push
inc
jnp
mov
movsb
dec
mov
sbb
mov
inc
in
dec
xchg
fcoml
ljmp
mov
not
clc
gs
cmp
dec
mov
cmp
lret
fdivrl
push
mov
setge
jae
adc
push
or
push
xor
mov
dec
sbb
repnz
test
in
jge
adc
imulb
and
aam
ja
sbb
mov
into
ss
mov
xchg
outsb
aas
dec
cmc
sbb
sahf
push
dec
xor
xchg
push
dec
jno
dec
loop
push
dec
inc
add
xchg
dec
pop
or
push
bound
je
xor
in
lds
xchg
push
add
pusha
adc
andl
jo
jne
stos
jl
popf
cmp
push
inc
jle
out
ja
out
mov
mov
lret
mov
out
shrl
fcoms
test
jbe
lret
adcb
fnstsw
xchg
nop
xchg
enter
adc
nop
jmp
fidivs
xor
mov
out
or
imul
dec
pop
dec
cltd
xor
inc
pop
push
mov
mov
cmpsl
test
xchg
pop
add
sbb
xlat
out
daa
xor
mov
nop
add
insb
pop
ja
xor
adc
sbb
mov
dec
jle
movsl
xor
pop
push
adc
jp
sub
xchg
mov
scas
push
imul
cltd
add
stc
jno
or
jae
sub
sub
cmp
mov
mov
dec
sbb
stos
imulb
jmp
pop
add
mov
mov
sahf
jnp
jns
cmpb
jg
out
test
adc
mov
sbbl
arpl
filds
mov
std
sar
into
sub
sbb
lock
iret
and
mov
mov
jl
cli
movaps
into
sbbb
or
daa
out
adc
clc
adc
addr16
mov
in
sbb
pusha
pop
mov
mov
push
cwtl
leave
adc
sub
sahf
cmpsb
mov
popa
or
push
xchg
test
dec
fcomps
fistl
in
mov
jge
nop
daa
js
cwtl
ja
pop
cmp
popf
popl
rorl
outsb
and
ljmp
cwtl
sub
mov
jb
sub
xchg
sbb
adc
lds
nop
cmp
inc
hlt
sbbb
ret
addr16
push
pop
add
rolb
push
inc
imulb
repz
insb
push
push
pusha
pop
ljmp
aas
adc
test
lret
inc
and
xchg
add
jnp
mov
push
loop
dec
ss
lea
int
jle
enter
lods
sarb
push
fldenv
dec
xlat
lahf
dec
stos
rcr
imul
jl
jp
sti
test
inc
jno
rcrl
fsts
push
jg
call
mov
call
je
cmp
inc
mov
inc
xchg
ret
push
push
xor
ficoml
insl
subb
test
inc
xchg
fs
mov
jns
inc
gs
add
fsubp
fdivrl
pop
imul
xor
insl
test
in
dec
and
repnz
aam
mov
xor
jns
inc
shrl
adc
addb
dec
xlat
cwtl
dec
and
addr16
add
mov
movsb
push
dec
jno
sbb
gs
fsubs
flds
js
mov
adc
pushf
pop
pop
mov
cmp
int3
cmc
ja
push
adc
sti
mov
clc
push
stos
jmp
xor
jp
imul
js
call
adcb
daa
jle
adc
inc
nop
je
cmp
enter
out
movsb
cmp
cli
push
mov
in
lahf
pop
or
mov
test
fidivl
add
arpl
cwtl
fwait
sub
pop
push
je
dec
inc
mov
test
arpl
cld
je
add
sbb
cld
jge
imul
loop
push
clc
sti
arpl
cmpl
insl
mov
add
shlb
mov
dec
and
cltd
test
inc
push
push
cs
adc
cmp
mov
ss
xchg
add
mov
jle
inc
mov
out
and
mov
cvtsd2ss
int
mov
imul
rolb
scas
in
fists
out
push
ljmp
inc
popf
ret
daa
ficompl
cwtl
dec
fidivs
sti
jmp
pop
rol
rolb
inc
pop
push
dec
jne
call
shrl
jmp
test
fsubrl
xor
add
xor
pop
adc
sti
pushf
shll
push
and
mov
das
or
iret
outsl
insb
into
mov
mov
push
or
imul
in
mov
sti
sbb
cmpsl
mov
imul
outsb
jecxz
mov
scas
adc
insl
inc
test
sti
jns
mov
shlb
lahf
jnp
test
in
and
cmp
xlat
popa
test
enter
cmpsb
add
js
repnz
ljmp
xchg
sub
idivb
and
repz
inc
jg
mov
pusha
xchg
insl
ja
test
adc
pop
sbb
push
add
movsl
mov
les
and
lcall
gs
jns
js
jo
dec
popf
icebp
insl
int
nop
cltd
sub
dec
jbe
nop
loopne
jmp
inc
lahf
add
imul
xor
push
add
adc
inc
add
sub
divb
bound
psubd
stos
test
subb
outsl
sub
insl
addr16
out
adcb
sti
mov
sub
dec
lock
pop
sar
mov
ficompl
mov
sarl
xchg
test
xchg
mov
or
mov
push
loop
mov
ljmp
pop
test
lret
pop
sbb
sub
imul
sub
sbb
fistpll
xlat
and
rcr
punpckhdq
dec
jmp
lods
ret
test
mov
dec
push
insl
stos
clc
in
fisubl
push
xor
add
sbb
xor
xor
mov
or
mov
push
mov
cltd
stos
jl
clc
in
leave
out
push
mov
fwait
mov
pop
imul
fs
jge
and
pop
and
mov
xor
pop
jnp
mov
add
xor
mov
xchg
stos
inc
sahf
and
xlat
mov
pop
xor
push
cmp
inc
fdivl
out
inc
sub
mov
jge
lods
outsl
pop
jp
pusha
xor
rep
mov
mulb
jno
sbb
out
daa
adc
cli
dec
push
xor
incl
sbb
fcmovb
decb
add
std
scas
fbld
shll
ljmp
cmpsl
ss
cmpsl
jno
repz
insl
or
hlt
pusha
orl
mov
sub
or
mov
lahf
xchg
lret
xchg
call
cmp
and
dec
lahf
idivl
call
icebp
leave
xchg
loope
adc
jb
add
dec
and
adc
test
xchg
cmp
imul
into
into
test
add
mov
into
mov
fwait
inc
mov
idiv
ret
test
and
mov
mov
sbb
fwait
lea
test
xchg
lods
inc
xchg
es
dec
push
insl
sub
sbb
jns
inc
push
pop
inc
testb
lds
xor
sub
or
mov
adc
bound
lock
dec
mov
adc
add
outsb
push
mov
mov
mov
testb
adc
inc
rcrl
push
xor
xor
pop
pop
test
lcall
adc
sbb
mov
fs
adc
js
jle
nop
shll
adc
arpl
test
rcrb
sub
cmp
rorb
mov
xlat
ss
jo
xor
or
dec
sbb
fmuls
sub
rol
js
jmp
cmp
lret
fmuls
inc
mov
inc
sbb
pop
fistps
ret
xor
outsl
and
test
pop
inc
or
sti
push
xor
or
test
es
pause
jnp
sbb
lret
outsb
shr
pop
dec
aam
icebp
jp
pop
jne
xor
std
mov
lret
pop
aad
cmpsl
add
push
ljmp
loope
jmp
sti
das
mov
mov
scas
push
aas
subl
jno
jnp
push
js
inc
xor
sub
mov
pop
mov
push
lock
movsb
bound
ljmp
xchg
dec
ficomps
xchg
rorb
jno
push
mov
loop
rcr
jle
enter
loope
pop
cmp
jmp
inc
dec
dec
es
xor
vsqrtss
inc
xor
pop
stos
pop
push
fiaddl
loope
or
mov
pop
xchg
push
add
mov
insb
hlt
sub
push
cmc
out
sub
gs
sbb
adc
test
push
mov
test
loopne
rorl
adc
adc
mov
fnsave
clc
dec
mov
cld
test
lods
shrb
add
cwtl
push
mov
leave
popf
popf
and
andl
and
xor
lret
in
push
mov
mov
cmpsb
std
push
adcl
adcb
add
repz
push
add
jns
xchg
icebp
or
and
pushf
loop
out
mov
dec
jmp
lea
cs
pop
add
dec
into
das
cmp
jle
dec
repnz
pop
aam
jmp
imul
or
inc
arpl
loopne
test
es
orl
sub
movsb
dec
leave
ret
js
call
std
fwait
pop
sub
push
inc
out
loop
or
jb
push
inc
negl
xor
push
mov
je
daa
push
test
or
movsb
add
mov
jne
dec
or
adcl
out
xchg
cmp
in
lods
xchg
movsb
insl
cmc
stos
xor
test
push
mov
mov
inc
dec
je
shlb
fildll
enter
shlb
adc
inc
dec
xor
jle
jne
xchg
cmp
pusha
aad
subl
cld
push
add
enter
test
addl
xchg
sbb
cwtl
xchg
jae
aad
aas
les
jg
pop
xor
loop
xchg
pop
push
mov
push
iret
cmp
xor
xor
add
outsl
test
mov
dec
aad
pop
icebp
inc
in
lods
push
loope
inc
cmpsb
scas
jge
mov
lretw
jno
xchg
sbb
bound
mov
rolb
push
roll
sub
xchg
daa
inc
into
test
mov
in
data16
push
xchg
mov
mov
pop
stos
mov
sahf
std
xor
loopne
in
add
jecxz
xchg
cmc
fnstenv
movsl
and
jg
pop
cmp
xchg
and
hlt
or
mov
sub
mov
xchg
push
jl
syscall
push
xchg
aaa
arpl
movsb
push
insl
ss
in
jne
fistpl
pop
push
xchg
push
pop
and
sub
lock
inc
jecxz
inc
or
jg
sub
popf
adc
mov
mov
mov
pop
pop
or
repz
div
mov
jnp
stc
mov
jl
push
imul
sub
xchg
test
in
popa
in
or
inc
roll
pop
sbb
fstps
out
arpl
scas
out
or
lods
pop
sbb
movsl
xchg
or
xor
sbb
dec
scas
mov
je
mov
imul
inc
ja
lock
pusha
cmp
insl
push
lcall
sub
fidivl
int3
pop
ja
pop
or
hlt
out
or
mov
jp
cmpsb
jle
and
divb
push
negl
test
sbb
push
js
push
ljmp
inc
cmp
insl
mov
or
add
std
sbb
sub
dec
cmp
xchg
subps
dec
sub
xchg
fidivrs
ss
or
jmp
call
mov
aam
fstpt
push
cltd
cmpsl
outsl
sti
fstl
lcall
push
jno
in
xor
push
ficomps
sub
sbb
call
ljmp
jmp
xor
aam
and
cmp
lods
dec
inc
in
mov
andl
fsubrs
lcall
je
out
insl
sub
xorl
jae
mov
sub
xchg
mov
mov
fiadds
adc
and
cmp
and
stc
jl
xchg
cmp
adc
out
stc
mov
mov
jne
cmp
stos
mov
fldcw
cwtl
mov
and
popl
xchg
xchg
cmpsl
fwait
int
add
cli
loope
jmp
lahf
ds
daa
or
rclb
sbb
push
bound
adc
loopne
xor
ret
ret
pop
sbb
lock
xchg
jl
cmc
xchg
stc
xchg
sbb
sub
in
dec
les
adc
xchg
xor
dec
outsl
sbb
jle
cmpsl
mov
sar
nop
fs
cmc
insb
push
jmp
aaa
ljmp
cmpsb
repnz
push
cmp
das
mov
xchg
mov
les
xchg
sub
movsb
rorl
mov
shrb
inc
ds
dec
or
ljmp
insb
dec
lds
cmp
popa
dec
test
sbb
pop
cmp
adc
and
cld
lock
mov
into
xor
cmpb
cmp
sbb
push
or
jno
push
dec
pop
maskmovq
testl
repnz
and
push
inc
push
lret
or
scas
push
ljmp
shr
daa
mov
mov
faddp
sub
adc
or
cwtl
or
pushf
sbb
movsl
pop
psubd
bound
addl
jp
inc
jge
add
push
fwait
mov
pop
or
lret
jne
xchg
xor
jp
mov
sub
push
push
dec
clc
pop
mov
mov
lcall
push
int
dec
movsb
in
bound
lds
leave
fnstenv
mov
hlt
fcmove
xchg
dec
mov
cmp
xorl
mov
insl
fiaddl
sbbl
mov
add
xor
pop
mov
jns
scas
lcall
sbb
xor
lcall
insl
mov
gs
jp
add
jle
xor
ret
and
adc
cs
std
gs
sbb
push
inc
daa
adc
xchg
xor
fs
cmpsb
repnz
inc
cld
pusha
and
xor
push
cmp
mov
sbb
mov
repnz
sbb
sbb
stos
xor
or
add
aaa
adc
or
pop
or
test
repnz
repz
and
sahf
pop
pop
mov
jl
call
popf
mov
movsb
inc
add
inc
je
aad
aas
or
fildl
mov
cmp
pop
jge
adc
lods
stos
loopne
mov
dec
stos
pop
std
scas
movsl
lods
push
scas
mov
orl
js
cmp
and
mov
pusha
fsts
sub
or
or
xchg
fsubl
outsb
jbe
dec
scas
ds
aam
inc
mov
outsl
and
sbb
sbb
push
jb
mov
test
mov
mov
push
rcr
cmp
sbb
inc
push
xchg
addb
mov
adc
lock
decb
fs
int3
sarl
insl
sub
jne
clc
or
int
outsl
fwait
xchg
xor
mov
mov
imul
sub
mov
xor
push
lea
call
pop
dec
cld
loopne
jg
popf
cld
cmpsb
cli
int
jge
testb
adc
mov
jae
dec
aam
pusha
pop
cmp
test
and
loopne
jecxz
mov
outsl
nop
fbstp
push
int
inc
xor
lea
mov
pop
popa
daa
cmpb
sbbb
fs
fsubp
adc
adc
outsl
jne
mov
dec
adc
sbb
or
jl
jbe
pop
sbb
mov
fdivs
or
sub
and
test
cli
mov
test
sti
dec
cmp
xor
insb
and
mov
les
popf
pop
iret
jne
mov
mov
lds
movsl
dec
hlt
jnp
xchg
push
or
fmull
cmpsl
mov
stos
xor
cli
pushf
int
xchg
xchg
rorb
adc
in
daa
jno
notb
fmull
fwait
int
inc
or
arpl
aam
jns
ja
shll
cmc
into
dec
xchg
pop
fstl
rcrl
sbb
dec
xor
push
dec
sub
cwtl
shll
iret
loope
lods
add
pop
gs
sbb
mov
dec
iret
es
add
and
scas
inc
push
lds
xor
push
lods
add
lret
test
pop
fmuls
mov
inc
cmp
mov
js
xor
ret
jle
pop
jl
cmpsl
sub
gs
in
xchg
ja
jge
mov
je
idivb
int3
pop
cmp
scas
lods
repz
and
stc
sahf
inc
imul
sarb
fnstcw
cmp
or
test
ds
pop
ret
sbb
imul
mov
testl
xchg
insb
push
je
add
jns
adc
cmp
mov
adc
lea
in
inc
jns
mulb
push
daa
fldcw
loopne
ja
out
or
les
adc
or
cmc
pop
or
inc
into
bound
sti
sahf
fsts
pop
dec
push
in
push
aad
sub
cmc
jle
xchg
lock
addb
jnp
xor
out
add
add
fsubs
stos
cs
ds
adc
ja
fimull
movsl
mov
adc
fidivs
jecxz
jb
fs
push
lret
movsb
lcall
mov
aam
repnz
mov
aad
cmc
nop
jl
call
fisubrs
mov
frstor
in
push
bound
aas
shrb
pop
cmp
nop
lds
call
mov
das
and
repz
add
push
mov
dec
ror
sbb
cmp
nop
and
sahf
negb
sbb
xor
or
pop
jmp
lahf
cltd
pop
inc
mov
frstor
jae
mov
dec
xorb
inc
lret
jmp
xchg
iret
cmp
clc
sub
xorb
jne
xor
or
fisttpl
xchg
loop,pn
xchg
stos
sbb
imul
test
popa
js
call
stc
or
cmpsb
sub
fldt
mov
leave
rcrl
xor
sub
daa
jecxz
inc
repnz
pop
mov
mov
add
adcb
dec
mov
leave
mov
sahf
rorl
xor
jmp
sbb
sbb
mov
jne
sbbl
xchg
mov
mov
aas
pop
xchg
fildl
int
lahf
or
stos
andl
ret
insb
arpl
mov
pop
orb
ss
cmp
jns
or
pop
inc
or
jl
push
enter
das
mov
shll
loop
dec
jbe
jle
and
push
into
jmp
cli
mov
push
add
cmp
mov
aad
xchg
das
inc
in
dec
out
data16
lea
add
mov
push
pushf
gs
movsb
outsb
lret
mov
cmc
mov
lods
bound
dec
pop
push
fxtract
imul
stos
cltd
mov
mov
jecxz
dec
xchg
inc
dec
pusha
mov
cmp
subb
cmc
std
pop
mov
daa
test
pop
cmp
std
jo
out
scas
lods
into
aaa
ss
xor
cs
mov
ljmp
inc
or
insb
xchg
addr16
adc
sbb
lret
rclb
and
mov
test
mov
arpl
movsl
pop
gs
ffreep
lret
es
push
push
shlb
lds
jns
mov
pop
enter
lods
movsl
mov
push
int3
rclb
mov
xor
dec
dec
in
lret
in
fsubrl
sub
inc
cli
ja
and
xchg
add
adc
add
mov
fbld
popw
icebp
xchg
push
cmp
pop
out
xor
jno
mov
xor
jae
xchg
or
fcoml
xchg
scas
imul
push
push
pop
imul
loopne
jmp
lahf
testl
int3
mov
mov
fcmovbe
aad
mov
sti
mov
dec
or
test
in
sub
jmp
leave
push
xchg
jmp
push
subb
jnp
mov
loope
dec
inc
jne
fdivrs
sahf
jg
nop
je
outsl
or
cmc
imul
push
jecxz
cmp
leave
cmpl
or
xchg
sbb
iret
dec
fdivl
cmp
test
scas
pop
nop
pop
ret
adc
leave
xor
fs
push
mov
shll
pop
insl
add
in
jp
xorl
pop
dec
cld
cmp
std
push
les
gs
movsb
pop
out
adc
xor
shr
xchg
lods
xchg
dec
push
sbb
pop
enter
inc
or
clc
test
or
cmpsb
mov
jmp
dec
adc
cmp
push
jp
sub
mov
push
test
dec
xor
mov
call
shrb
or
inc
shrl
jmp
mov
inc
lods
into
mov
cli
mov
cmp
das
mov
test
out
add
mov
enter
cwtl
sbb
push
sub
sub
push
jbe
das
xchg
mov
aam
sub
push
push
xor
insl
jp
cltd
xor
sub
push
inc
mov
or
add
popf
loop
push
fwait
cltd
pop
loop
pop
stc
shrl
cwtl
cwtl
daa
insb
ja
sub
fnsave
gs
int
fcom
sbb
arpl
jecxz
xor
pop
dec
ret
outsl
lret
add
pushf
aas
push
push
sub
fsubrl
and
setb
inc
jb
sbb
divl
aaa
mov
push
mov
sti
mov
push
neg
sbb
addr16
cmp
mov
pop
pusha
dec
movsb
shll
xor
mov
inc
and
mov
xchg
dec
loope
fcomps
pop
scas
adc
jae
inc
push
bound
xchg
cmc
popf
jns
stos
xlat
mov
push
push
sbb
mov
push
daa
clc
in
xlat
pop
sbb
std
jb
stos
mov
mov
jmp
dec
jmp
xchg
movsl
xor
repnz
cmp
mov
push
in
xchg
jp
xchg
sbb
mov
pop
fstpl
mov
insl
pop
fsubrl
inc
sbb
pushf
mov
jnp
mov
aam
loop
mov
imul
push
xchg
mov
cs
mov
icebp
repnz
push
jle
icebp
or
aam
xor
testb
dec
or
mov
cmp
dec
mov
sub
push
clc
ficoml
mov
hlt
sub
mov
jns
dec
push
pop
jae
lock
mov
jmp
outsl
mov
add
cmp
cmpsb
cmp
adc
jns
mov
cmp
lock
dec
mov
fcoml
stos
jnp
mov
push
out
out
push
fs
cld
movsl
scas
and
fsubs
xor
popa
ret
mov
cwtl
jle
sbb
pop
adc
add
dec
scas
sbb
jae
dec
cmpsl
mov
sbb
cmp
in
mov
jne
or
lahf
testb
pop
xchg
aaa
stc
cmp
scas
mov
mov
jl
mov
pop
test
fcoml
add
out
dec
ret
mov
and
inc
push
mov
xor
hlt
idivb
jle
popf
bound
push
mov
fisubrl
cwtl
jae
mov
push
mov
adc
imul
push
fbld
pop
loopne
jmp
xchg
inc
repnz
clc
mov
sub
popa
cld
cmc
dec
push
xlat
xor
daa
push
insl
stc
dec
cmc
ss
xor
int
push
mov
mov
pop
sar
sbb
cmc
mov
push
nop
fldl
pop
sub
adcb
and
push
sbb
mov
in
enter
xor
in
dec
les
jg
xchg
jns
outsb
mov
hlt
imul
inc
aam
mov
int
sahf
push
dec
sub
int3
sbb
xchg
mov
scas
jne
idivb
pop
push
scas
push
jno
mov
xor
pop
addr16
jae
push
pop
push
imul
and
out
ss
movsl
sahf
xchg
sti
push
jns
mov
and
test
addb
pop
repnz
lds
pop
jno
add
pop
gs
add
jnp
idivb
sti
jmp
xchg
jg
mov
inc
pop
ja
add
or
ret
push
jne
xchg
daa
or
push
scas
add
in
xor
mov
sbb
out
ljmp
lds
movsb
mov
xchg
push
xlat
rolb
std
pop
popf
xchg
cmp
and
and
mov
inc
sub
rcrb
dec
ss
xchg
test
scas
sub
repz
outsl
es
mov
xor
leave
mov
cmp
cld
or
jo
aaa
jecxz
data16
cs
inc
shll
out
adc
or
pushl
dec
or
mov
pop
out
imul
jecxz
loopne
rcr
scas
mov
adc
lds
cwtl
and
sbb
push
push
jle
push
push
jae
fs
and
add
pop
xchg
adc
dec
push
pop
fistps
mov
xchg
cmp
imul
stc
ds
cmpsb
mov
and
iret
pop
imul
fwait
push
ja
ss
sub
jecxz
sub
pop
lcall
gs
xor
flds
ret
jno
or
mov
add
out
pop
pop
repz
add
ja
aaa
scas
push
rol
add
cmp
insl
es
xchg
in
xchg
pop
push
add
pusha
testb
ret
mov
or
cmp
xor
ja
xlat
mov
jb
sbb
idiv
data16
jne
mov
movsl
jg
push
xor
leave
adc
mov
repnz
adc
aas
xor
hlt
ja
je
sbb
lods
inc
ret
out
cmpsl
lods
decl
jne
jl
cmpsl
mov
or
cld
push
mov
cltd
push
shrl
nop
mov
in
inc
jg
ljmp
lea
add
addr16
outsl
je
fmulp
lea
push
nop
jge
jmp
repz
movsb
sti
sbb
and
jne
dec
adc
je
xchg
pop
xchg
sbb
out
mov
push
loope
mov
sbb
mov
scas
xor
pop
ret
cmc
pushf
cmpsb
ss
lret
shr
stc
cmc
pop
icebp
lock
icebp
ss
xor
lea
push
lret
fcoms
shr
clc
arpl
pop
mov
or
insb
lret
out
xchg
and
xchg
mov
je
pop
lcall
lods
sbb
fs
pusha
add
mov
adc
xchg
aas
dec
outsl
cs
fcmove
mov
mov
rorb
add
cwtl
ds
xchg
and
in
push
test
in
inc
nop
insb
mov
lahf
repz
xor
cmp
jno
lock
cmp
lret
js
sub
inc
jl
mov
jecxz
test
push
push
aam
mov
mov
cmp
xor
les
jecxz
lcall
jbe
js
in
or
iret
sar
pop
inc
jae
out
xchg
mov
mov
jp
inc
mov
jno
fdivrl
into
cmp
rorb
mov
pop
and
mov
into
pop
xor
jno
aaa
sahf
xchg
test
out
dec
ss
xchg
mov
out
pop
dec
ss
pop
and
into
xor
stos
push
sbb
lcall
lods
inc
pop
cmc
adc
push
jp
jmp
fdivrl
or
call
jno
add
lcall
mov
stos
aaa
rorl
dec
jnp
xchg
outsl
push
stc
in
adc
cs
mov
es
pop
xchg
mov
xchg
cmp
lods
int
fstl
jecxz
and
xchg
out
clc
insl
out
jno
xor
push
fdivrs
add
stc
call
xor
mov
scas
mov
mov
xor
test
mull
mov
xchg
sti
aam
scas
cmp
push
loope
push
jne
ds
jae
js
mov
addr16
mov
jl,pn
sbbl
cmpsl
jge
cmp
cmp
jno
inc
adc
adc
jbe
addr16
push
cmp
clc
aad
adc
test
fcmove
sub
adc
sbb
and
sub
mov
fstps
sbb
fstpl
mov
adc
sbb
loopne
xor
xor
sub
inc
sub
data16
pop
test
adc
repz
mov
mov
pop
xor
andl
shlb
insl
xchg
ja
mov
sub
push
mov
mov
lahf
pop
rorl
mov
dec
pop
jle
inc
mov
in
out
and
mov
xchg
or
mov
cwtl
push
push
push
add
adc
dec
and
mov
fistpll
into
sub
inc
insl
xor
inc
jp
daa
mov
movsl
adc
cmp
shll
and
out
test
and
jae
add
shl
jmp
fstps
dec
in
inc
xor
push
mov
jg
dec
mov
cld
push
fs
fiaddl
mov
pop
mov
cmpsb
jmp
shl
or
push
jns
adc
call
out
push
jecxz
in
jb
fcomip
sub
jns
jne
out
xchg
mov
iret
mov
cmp
loope
into
xchg
and
ficoml
jb
icebp
out
shrl
inc
lcall
mov
jl
popa
mov
out
cmpsb
mov
iret
mov
mov
test
shll
fwait
test
lock
or
fisubs
dec
and
mov
int3
ljmp
test
sub
jge
cmp
jb
in
jecxz
sub
lret
ficompl
adc
lods
xchg
out
sbb
stc
shrl
dec
adc
pusha
pop
mov
sbb
pushl
xor
cmp
jg
lods
xchg
sbb
jl
push
mov
or
add
add
push
lock
bound
dec
inc
cmp
int3
pop
adc
shrl
xchg
dec
div
dec
pop
push
fbld
mov
lock
es
mov
or
xchg
inc
inc
sbb
test
push
mov
mov
repz
mov
xor
adc
mov
inc
or
popf
jmp
jmp
xchg
sub
xchg
sahf
sbb
sub
enter
cld
out
pop
pop
add
cwtl
ret
sub
bound
or
enter
mov
jle
jecxz
sub
dec
js
cmc
mov
and
test
dec
imul
test
jno
dec
popa
shlb
mov
add
mov
loop
rorb
and
adc
jp
aad
mov
mov
adcl
push
jl
inc
jmp
xchg
dec
pop
or
xchg
mov
lret
test
pop
je
pushf
daa
out
sub
xor
imul
int3
pop
xchg
or
loope
mov
mov
adcl
sub
add
cmc
scas
outsb
add
stos
inc
pop
decl
sub
jae
push
ret
push
add
xchg
aad
mov
sub
mov
aas
js
shl
roll
sub
xor
xor
push
fidivs
mov
and
aam
sub
mov
les
scas
sub
cmc
leave
cli
insb
and
xlat
pop
inc
pop
and
sti
dec
add
jno
xor
mov
sbbb
xchg
and
insl
mov
imul
push
mov
pop
cmp
int3
sub
or
cmpsl
inc
call
repnz
std
and
jp
mov
sub
pop
push
pushl
mov
push
inc
mov
dec
insl
push
and
sub
cmpsl
hlt
dec
mov
mov
ljmp
mov
xchg
pushf
dec
jbe
lds
mov
lds
stos
clc
lods
fimuls
cld
call
push
stc
xchg
mov
xor
in
fistps
xchg
test
test
cmp
push
sbb
adc
fiaddl
sub
shll
aad
mov
mov
push
adc
mov
test
test
lret
mov
xor
adc
aam
mov
inc
mov
mov
sbbb
scas
push
pop
or
shlb
pop
inc
test
xor
stos
adc
clc
js
loop
fildll
cmp
cli
ficomps
or
push
xchg
imul
clc
loop
out
push
test
cmp
dec
jg
xchg
cmp
push
jo
pop
clc
xchg
or
xor
pop
mov
ljmp
in
pop
sbb
inc
jl
push
or
les
cmp
lods
add
out
inc
popf
cmp
xlat
rorb
xchg
aad
add
ja
jle
daa
xchg
mov
cmpsl
fstpl
lds
cmp
sbb
aas
xchg
js
cmp
mov
insl
or
cmp
push
movsl
mov
sub
xor
std
sub
inc
pop
in
mov
pop
add
push
popa
std
std
andl
and
xchg
jnp
lods
out
sarb
arpl
test
mov
test
jo
jg
lret
jmp
mov
clc
leave
repz
push
xchg
fmul
es
in
jmp
decb
jns
mov
mov
push
jecxz
and
pop
jecxz
std
push
and
repnz
mov
repnz
push
lods
test
push
xchg
dec
lret
mov
movsb
mov
pop
outsb
or
notb
dec
xor
in
inc
jae
add
jo
out
sub
add
into
push
mov
fisttpl
cbtw
fcomi
stos
repnz
test
adc
mov
dec
fstpl
fsubrs
mov
leave
inc
xor
and
push
adc
movsb
repz
addb
rolb
repnz
mov
rorb
fdivs
sarl
fiadds
inc
add
fwait
sbb
icebp
cwtl
and
xor
sbb
adc
dec
sbb
xchg
adc
dec
mov
out
dec
or
stos
hlt
loopne
bound
clc
bound
mov
mov
test
mov
jne
sbb
stos
outsb
arpl
movsl
mov
cmp
mov
pop
add
or
lret
fidivrl
adc
mov
daa
repz
mov
mov
in
mov
push
add
lds
xchg
aam
insb
dec
pop
ljmp
jmp
push
repnz
inc
divl
loope
and
ficompl
lock
sub
sbb
nop
mov
fs
or
sahf
pop
sahf
jge
lock
outsl
mov
pusha
mov
mov
adc
mov
lds
mov
push
bound
lock
mov
outsb
mov
sbb
adc
xchg
dec
shrb
ljmp
mov
in
jg
lea
jge
movsb
insl
adc
or
sub
jmp
xchg
fwait
xchg
mov
jg
xchg
mov
sub
xor
fdivrl
mov
mov
or
test
mov
fs
ljmp
pop
call
iret
dec
mov
and
test
xchg
lahf
mov
lahf
sbb
mov
cld
or
or
negl
cmp
in
dec
insb
lock
testl
and
or
fisubs
scas
dec
jns
shll
cwtl
aam
and
mov
repnz
mov
sub
movsb
jb
les
pop
movsb
shlb
pop
orb
movsl
jb
sub
pop
pusha
add
stos
fs
adc
mov
push
es
loope
pop
cmpsl
mov
add
inc
cmp
loop
je
popa
xor
cmpsb
pop
pop
popa
cs
in
push
xor
fwait
es
cltd
mul
je
fisubrl
hlt
xchg
test
xor
out
sbb
sub
push
push
xlat
gs
fidivs
push
adc
and
lret
sub
loope
sub
cmp
sti
lret
dec
cmp
scas
jecxz
dec
shll
dec
sub
ficoms
mov
adc
xchg
scas
lcall
xchg
or
mov
xchg
mov
ret
adc
sbb
iret
push
cmpb
leave
mov
pushf
mov
mov
into
cld
sub
sarb
loope
mov
rol
sub
pop
sarl
fwait
data16
test
jl
inc
and
adc
jmp
negl
inc
movsb
sbbb
xchg
and
jnp
xorl
test
mov
loopne
pop
into
inc
lahf
sub
xchg
push
pop
pop
cs
inc
push
pop
mov
push
mov
mov
test
test
xor
js
lret
or
push
push
or
pop
movsb
ljmp
xlat
into
mov
aaa
les
inc
sub
mov
push
pusha
sub
cmp
xchg
mov
mov
stos
inc
pusha
ljmp
cmp
scas
sub
cmpsb
or
out
or
or
rclb
dec
js
ljmp
xchg
bound
cmp
sbbb
sub
loope
xor
add
enter
addr16
push
neg
in
test
xchg
aad
pushf
pop
aaa
adc
jno
xchg
loop
mov
xchg
jecxz
popf
lcall
fcmove
ljmp
mov
rolb
inc
jne
mov
scas
add
dec
mov
cmp
inc
scas
das
inc
int3
inc
push
movsb
lahf
pop
adc
stc
aaa
jo
negb
xchg
cmpsl
push
fwait
or
dec
pop
das
mov
repz
jno
lret
mov
clc
pop
clc
aad
popf
aam
das
jb
mov
adc
and
pop
jmp
mov
add
decl
mov
lods
cmc
andb
out
jmp
js
imulb
jae
xor
pop
dec
scas
xor
and
cwtl
adcl
clc
clc
xchg
rcrl
sahf
inc
mov
xchg
mov
xchg
or
xor
xchg
jae
push
das
cmovae
push
mov
adc
outsl
or
ds
loopne
fistpl
fbstp
inc
clc
and
dec
pop
dec
iret
inc
pop
or
jg
in
xchg
xor
cmp
test
push
and
gs
inc
xchg
pop
push
outsl
shlb
int3
xchg
adc
std
xchg
jp
mov
cmp
cmp
jle
jp
fiadds
sub
jecxz
aaa
call
pop
inc
inc
cmp
push
dec
xchg
mov
dec
fisttps
sbb
or
jg
fcomp
dec
pop
int
jae
push
dec
fmull
mov
scas
push
mov
xchg
push
ret
xchg
imul
ror
xor
xchg
outsl
inc
xor
lahf
xchg
add
hlt
inc
inc
imul
dec
aad
into
mov
mov
push
stos
call
push
fdivrs
int3
loop
mov
enter
xlat
mov
test
inc
aaa
xchg
push
pop
stos
jecxz
sbb
push
or
push
cmp
ja
mov
mov
outsl
in
insl
lods
fadd
mov
orb
loopne
cmpsl
js
cmp
imul
or
scas
add
pop
xchg
mov
mov
jle
inc
es
rorb
push
xchg
xchg
inc
insb
repnz
inc
or
sub
test
test
mov
fchs
cmp
fsubrl
jg
enter
xchg
dec
sahf
cli
push
lods
inc
adc
cmp
hlt
jl
sahf
std
mov
pop
pop
jo
imul
sbb
cmp
cmp
les
mov
out
and
inc
mov
push
je
outsl
outsb
xchg
arpl
xchg
lods
rcl
aas
inc
inc
in
pop
mov
div
dec
cwtl
scas
mov
out
add
inc
scas
xor
sub
dec
mov
cmp
and
adc
cmp
pop
pop
cmpsb
testl
test
ficompl
and
mov
add
outsb
dec
dec
dec
sbb
xor
xchg
adc
pop
gs
mov
js
push
out
movsl
xor
sub
cmp
push
mov
inc
xor
sub
aad
and
mov
push
insl
mov
shlb
mov
jp
jg
aad
arpl
sub
sbb
xchg
lock
xor
movsl
mov
sbb
dec
jl
push
push
mov
inc
xor
xchg
pop
inc
sub
subl
in
insl
push
test
add
outsb
out
dec
and
push
scas
out
mov
inc
sti
inc
adc
loope
test
inc
sarb
cs
pop
jno
mov
scas
iret
stos
clc
cmp
loop
mov
push
xor
jbe
adc
add
push
or
jb
xor
jno
icebp
ret
hlt
cmpsl
mov
insl
mov
cs
mov
das
sti
sub
mov
mov
aas
push
add
jp
idivl
imul
mov
scas
xlat
dec
inc
pop
lret
outsl
daa
inc
dec
cmp
hlt
cmp
out
aas
push
cmpsb
sbb
imul
or
sub
inc
xor
inc
fisubl
andl
jmp
push
shlb
and
push
out
das
or
enter
pop
inc
pop
clc
pop
adc
sbb
xlat
mov
data16
call
insl
xchg
adc
add
imul
stos
sub
and
gs
jbe
xchg
jnp
aam
test
cmp
insl
cmp
je
inc
cmp
pop
es
in
push
sub
stc
lcall
int
and
dec
js
icebp
pop
cmp
cld
mov
sub
mov
sti
add
lcall
add
pop
dec
mov
xor
movsl
cmp
lds
lods
sbb
mov
mov
inc
aaa
cmp
push
aas
xchg
sahf
pop
in
cmpb
cmc
js
mov
xor
rol
lahf
ret
jne
dec
nop
out
fsub
and
push
dec
jo
xor
and
mov
or
cmp
insb
loopne
popf
call
in
push
hlt
data16
sub
mov
sub
popa
dec
or
mov
inc
arpl
test
push
ja
insl
shlb
mov
xor
outsb
mov
mov
hlt
inc
into
push
repnz
out
fwait
dec
dec
in
sub
sub
xchg
cmpl
insb
xchg
js
xchg
sub
mov
xchg
scas
adc
dec
cmpsl
mov
call
enter
sbb
in
xchg
mov
inc
shl
fistpll
sub
inc
jecxz
ja
lods
pop
add
lcall
daa
jmp
lcall
mov
mov
icebp
enter
sbb
mov
adc
ret
ret
imul
dec
inc
loope
mov
dec
dec
arpl
and
fwait
sahf
jb
sub
fsub
lcall
mov
daa
jns
xchg
mov
or
pop
ja
jmp
and
cmpsl
fwait
out
mov
push
sub
ds
cmp
pop
xchg
jmp
mov
push
mov
in
dec
movsl
xchg
andb
jl
xchg
add
or
sbb
loopne
sbb
cmp
test
adc
loope
cmp
pop
or
lods
rorl
sub
jecxz
scas
xchg
fnstcw
xor
sahf
dec
sub
movsb
jp
mov
sbb
shlb
xchg
mov
iret
dec
movsb
jnp
les
inc
xchg
jmp
call
dec
pop
push
xchg
stc
les
cmp
pusha
imull
cmpl
sbb
cmp
ret
or
mov
sahf
enter
ror
movsl
and
scas
cmc
iret
add
xchg
clc
push
bound
js
imul
lcall
cmp
repz
test
shll
xchg
xor
jnp
cwtl
arpl
xor
stos
sbb
insl
and
jl
mov
dec
int3
sub
and
outsb
sub
mov
movsl
lahf
lock
mov
mov
mov
push
mov
negb
jp
mov
add
in
mov
pushf
or
bound
cs
fbstp
sbb
cwtl
jo
mov
add
cld
repnz
dec
test
mov
popa
adc
cltd
and
mov
lea
cmp
insb
cmp
ret
int3
push
mov
inc
push
lea
movsl
fidivrs
lock
roll
jns
fwait
push
dec
sti
aas
adc
jae
mov
pop
out
or
push
es
iret
in
negb
aad
and
pop
ja
popf
ds
pop
arpl
test
ja
pop
mov
push
xchg
cmp
jb
jle
add
fimull
out
mov
dec
push
pusha
sbb
jb
push
cmp
adc
mov
add
mov
ja
add
out
clc
arpl
mov
jle
aas
mov
add
incb
flds
fbstp
xor
stos
mov
push
pop
int
mov
movsl
out
ja
sub
pop
xchg
stos
mov
or
std
and
addr16
scas
fcoms
pop
stc
inc
dec
aam
es
pop
jp
orl
daa
loop
leave
mov
push
push
cmp
testb
and
lcall
sbb
cmp
mov
into
push
pop
push
xchg
pop
fsubrs
fnstenv
and
mov
lods
data16
rcl
insl
orl
ret
ret
jo
insb
jae
int3
push
add
insb
ja
sbbb
push
in
in
arpl
sub
ljmp
xchg
pop
push
push
dec
jns
or
popa
jg
push
repnz
pop
lahf
adc
sub
jno
stos
mov
cwtl
lret
mov
dec
xchg
dec
cmp
rolb
jns
or
arpl
out
xor
and
stos
fwait
dec
push
out
pop
stos
fwait
enter
xchg
mov
dec
push
pushf
push
test
add
iret
test
iret
fscale
loopne
imul
cmp
mov
adc
mov
xor
pusha
sbb
leave
mov
inc
movsl
sbb
jne
and
repnz
xor
push
mov
add
repz
shlb
mov
jge
lret
xchg
enter
loopne
cld
setp
and
adcl
jmp
xchg
stos
scas
mov
cld
ljmp
repnz
xchg
js
cwtl
and
jns
mov
push
or
sbb
outsb
enter
rcll
movsb
daa
inc
mov
sbb
jno
pop
or
stc
lret
std
fwait
sub
faddp
or
out
rclb
rcll
push
mov
scas
push
and
cmpsb
add
out
loopne
sarb
flds
fisubl
dec
inc
cmpsl
stos
rolb
mov
xchg
mov
test
jns
out
es
pop
orb
cmp
and
leave
ficoml
push
mov
or
push
loopne
leave
sub
je
shll
in
add
pop
fisubrs
mov
sahf
cmp
into
push
and
imul
jae
mov
stos
imul
pop
inc
hlt
cmpsb
out
adc
dec
imul
sar
cs
sar
pop
jne
leave
adc
cs
lods
jo
subl
push
int3
cld
add
cmp
or
mov
leave
xchg
xor
mov
fs
push
rclb
ret
and
fwait
sbb
and
jae
jo
rol
jne
cmpsl
mov
adc
arpl
and
mov
idiv
jl
movl
xchg
cmp
ja
lods
cli
xchg
mov
or
add
xor
mov
xor
mov
push
ret
mov
jnp
pop
xor
mov
stos
fmuls
test
ror
adc
packuswb
pop
into
adc
sbb
mov
aam
outsb
dec
aas
loopne
mov
scas
jecxz
std
lret
out
jne
add
out
sbb
mov
std
arpl
cltd
xchg
xchg
and
sub
jns
bnd
cs
dec
lcall
dec
and
add
cmp
jne
push
stos
sbb
push
fistpl
es
add
pop
and
sahf
pop
dec
loopne
push
pop
test
inc
sub
inc
in
iret
push
pop
mov
add
cmp
xor
xchg
imulb
js
xchg
or
cli
aas
dec
ds
adc
jecxz
xor
int3
sub
addr16
stos
gs
xor
fsubrp
int
fldl
leave
scas
cmpsl
iret
adc
dec
push
sbb
pop
dec
ds
pop
xor
adc
xchg
insl
mov
adc
and
jo
lret
add
divl
xchg
jno
adc
dec
inc
es
rclb
inc
sub
pushf
outsb
loop
ret
icebp
out
loop
pop
negb
xchg
mov
and
pop
addb
mov
daa
or
dec
arpl
pop
lcall
jp
mov
push
push
and
insb
or
mov
cmpb
shrb
fmuls
aaa
push
aam
insl
sub
ljmp
dec
adc
inc
js
jb
arpl
cmp
push
mov
lret
leave
ss
mov
popa
push
cs
xchg
mov
xchg
stos
add
enter
lret
fisubrs
cltd
orb
aam
jmp
xchg
out
cmpb
lret
jne
insl
imul
sbb
ja
cmp
dec
xchg
jo
mov
push
mov
sbb
rorb
adc
xchg
mov
dec
lret
lods
sub
xor
xor
dec
pusha
push
scas
xlat
inc
lods
xchg
push
fsubrs
adc
xchg
add
bound
mov
dec
pop
inc
or
shl
sub
movsl
mov
jne
xchg
fcomps
fidivl
push
arpl
aaa
test
cmp
dec
dec
push
int
add
and
push
imul
sahf
xlat
out
adc
mov
jbe
movsl
leave
das
push
stc
nopl
cltd
stos
faddp
pusha
das
and
sahf
mov
popa
or
mov
add
mov
movsl
out
adcb
aaa
int3
pop
adcb
rclb
xchg
in
je
loop
sub
xor
sbb
lahf
sub
cmpsb
add
adc
pop
aad
shlb
mov
aaa
pop
fwait
cmp
call
ror
out
sbb
scas
in
sub
sahf
add
jl
lods
leave
mov
sbb
pop
mov
lods
mov
sub
cmpsl
push
idivl
cmp
popa
xor
pop
push
xor
jg
push
and
in
cltd
jecxz
loopne
ret
std
cmpsl
stos
repnz
pop
mov
pushf
mov
dec
enter
ss
rolb
into
add
mov
nop
xchg
push
xor
loope
out
xor
addr16
in
push
es
nop
push
and
mov
jmp
jae,pt
cmp
push
xchg
pop
inc
scas
xchg
mov
xchg
jp
adc
in
sub
xchg
cli
jns
xor
jbe
mov
loopne
mov
push
jmp
inc
aas
iret
andl
mov
fsubl
imul
xchg
mov
mov
frstor
mov
in
data16
mov
cld
jp
adc
dec
push
das
fstpl
push
gs
sub
or
imul
pop
lea
xchg
jnp
cmp
xlat
cwtl
in
cwtl
addr16
cmp
sti
push
in
je
in
stc
adc
outsb
dec
es
jb
loopne
pop
xchg
or
mov
mov
and
sbb
add
mov
cmp
mov
jns
jmp
mov
in
xor
mov
or
sti
add
int
cwtl
nop
sarl
xor
pop
loopne
addl
cmp
incb
and
popa
aas
add
adc
outsb
aas
cld
fistpll
mov
adc
inc
dec
in
cmp
xor
cmp
daa
mov
andb
cwtl
inc
test
adc
aaa
in
fldcw
and
fsubp
sub
aam
aam
xchg
stc
pop
push
bound
stos
mov
popf
adc
subl
sub
inc
mov
in
addr16
pop
and
push
jne
xchg
dec
daa
out
jns
sub
inc
pop
xchg
stc
adc
aaa
cmp
lods
clc
pop
jae
bswap
push
cmpl
sub
out
test
aas
mov
out
stc
ret
pop
mov
daa
loopne
lcall
jle
and
ljmp
out
shl
xor
outsb
inc
lock
mov
sahf
jnp
mov
in
adc
xor
in
imul
daa
popa
aas
aaa
test
xchg
add
and
test
movsl
clc
push
scas
xor
inc
hlt
aad
push
pop
push
add
pop
cltd
and
xchg
xor
sbbb
pushl
sub
and
sub
clc
mov
cmc
faddp
cwtl
xor
icebp
mov
rolb
ret
mov
into
push
shlb
push
jae
pop
ss
push
cmpsb
mov
test
and
sub
inc
loopne
imul
sbb
sbb
jle
inc
clc
outsb
push
xchg
stos
cs
lret
push
repz
jp
outsl
call
xchg
insl
out
mov
loope
aad
loopne
rcrb
setle
jecxz
jnp
fwait
and
lea
js
dec
fldcw
lret
jmp
mov
push
out
in
fcomps
jge,pt
adc
aaa
inc
cli
dec
scas
stc
xor
popf
mov
in
pop
jl
mov
mov
scas
pop
das
aad
ror
or
jle
test
and
fcompl
sbb
add
mov
mov
pop
mov
mov
out
call
jb
ret
jmp
dec
and
or
jns
jl
mov
jno
inc
scas
dec
sbb
or
mov
adc
xchg
aad
adc
repnz
lds
int3
pushf
je
sub
out
xchg
std
das
stc
insl
sub
push
push
mov
shrb
test
inc
lcall
push
lock
mov
pop
sbb
insb
cmp
rcl
imul
pop
pop
and
mov
mov
andl
cmp
xchg
adc
xlat
movsl
lahf
xor
mov
lds
xchg
xor
cld
xor
pop
leave
daa
cs
sub
mov
stos
pop
lea
sbb
xchg
cmpsl
pop
lret
dec
push
into
movsl
sbb
notl
push
cmc
xchg
in
int
ret
xchg
cmpsb
rorl
dec
xor
adcl
adc
repz
sysexit
insb
xchg
pop
adc
ret
les
shll
push
mov
pop
ljmp
faddl
aaa
lea
scas
daa
xor
xchg
fs
sub
jmp
in
mov
aaa
mov
int
mov
pop
leave
addl
pusha
ja
sahf
add
mov
in
push
add
push
dec
jne
or
mov
mov
add
jne
add
inc
int
andb
lds
jl
loope
push
push
dec
cmp
dec
stc
jb
lods
loope
popa
mov
js
stc
mov
pushf
xchg
test
sahf
push
xchg
pusha
cltd
mov
push
scas
pop
mov
test
xorl
mov
mov
imul
jno
fistpl
cmp
fs
scas
jns
mov
imul
aam
cmp
pop
cmp
mov
aas
aas
or
sbb
shll
pop
imul
cs
mov
push
pop
sbb
ja
les
push
jge
outsb
mov
inc
add
rolb
lea
lds
and
cmp
mov
ja
sub
or
pop
iret
or
mov
xchg
or
pushf
jbe
pop
pop
fcompl
or
in
mov
push
push
addr16
loop
movsl
in
inc
sub
aam
jns
and
iret
xchg
in
or
xor
scas
sbb
movb
pop
sbb
cmpsl
lds
enter
and
fdivrs
sarb
cmpsb
pop
lcall
in
arpl
das
sub
stc
sbb
add
dec
add
dec
pop
andb
adc
into
test
nop
shrb
inc
aam
mov
out
mov
fnstsw
pusha
mov
add
cld
jns
pop
in
xlat
outsb
in
ss
fbstp
imul
jns
sub
in
jae
jecxz
sub
and
jl
ljmp
cmp
ja
sahf
push
testb
dec
lds
push
cs
jle
jmp
into
xchg
mov
je
ljmp
dec
es
ljmp
dec
sahf
ret
cltd
dec
les
jae
xchg
jle
mov
lahf
stos
sbb
orl
aas
lods
imulb
adc
arpl
sub
clc
cmc
add
stc
loope
jmp
dec
lods
or
xor
mov
sbb
fsubs
out
out
adc
hlt
test
int3
mov
and
cwtl
add
push
pusha
loop
push
stc
movsl
cmp
jbe
in
sbb
xchg
mov
lods
sbb
mov
fisubrs
fcomps
data16
lods
rcr
xor
push
aas
mov
mov
inc
mul
ret
call
and
test
ja
cmp
sti
push
sbb
mov
and
icebp
cmp
dec
jae
dec
dec
mov
decb
out
ljmp
lret
cmp
push
mov
pop
xor
aaa
jno
test
add
and
sarl
les
jns
out
mov
jecxz
cmp
sub
arpl
pop
loop
andb
movsb
pop
inc
lea
mov
lods
xchg
fistpll
sahf
mov
std
pop
cmp
clc
push
mov
sub
jae
std
fistps
sti
loope
pop
mov
add
adc
inc
stos
xchg
out
pusha
bound
negl
enter
cli
je
mov
loop
xchg
gs
and
xlat
sub
pusha
popa
or
lea
pop
xchg
jmp
imull
pop
cmp
int3
test
push
rcrl
push
xchg
and
aas
jb
les
rcr
xchg
incb
fwait
sub
add
xchg
loopne
mov
inc
mov
xchg
jo
jne
int
outsb
xchg
inc
mov
leave
fistl
xchg
mov
out
enter
sub
xchg
stos
cli
pop
push
xchg
mov
fwait
iret
sbb
dec
insl
jmp
outsb
in
adc
xlat
dec
fidivrs
sbb
cmp
sub
mov
push
pop
mov
dec
xchg
mov
daa
lods
or
iret
shrb
rcl
in
movl
stos
xor
clc
ficoml
push
aaa
push
icebp
enter
xor
mov
out
outsb
mov
jle
call
int3
ret
jae
add
fbld
xchg
or
xlat
mov
es
insb
dec
notb
hlt
sahf
pushl
push
push
pop
xor
ret
cs
in
mov
inc
xchg
dec
stc
xor
test
xor
stos
or
pushf
movsb
mov
popa
mov
jnp
jmp
mov
cmc
nop
aam
push
adc
mov
shr
add
lcall
or
daa
jnp
fbstp
lods
jecxz
jecxz
dec
ljmp
imul
stc
add
pop
dec
xchg
jle
jle
pop
clc
loopne
push
pop
ds
aaa
xchg
pop
je
mov
fwait
mov
outsb
stos
stos
sub
hlt
mov
jnp
mov
pop
push
add
in
mov
ja
sbb
ds
popa
mov
mov
fbstp
roll
stos
fwait
aaa
pop
and
mov
sbb
inc
fldl
cmp
sbb
cmpsb
leave
mov
adc
xchg
adc
xchg
mov
cmp
push
lcall
pop
push
sti
jns
mov
cld
aad
mov
inc
and
fsts
std
inc
cmp
fwait
aam
xchg
jno
clc
stos
pop
xor
loope
cmp
xor
xchg
push
arpl
mov
inc
lahf
clc
outsl
dec
xchg
pop
mov
jne
and
dec
ss
adc
mov
inc
subl
imul
push
insl
pop
pop
add
mov
sub
jl
test
and
sub
add
cmp
outsl
jae
out
sub
in
mov
cmpsb
dec
push
adc
insl
jae
outsb
out
nop
adc
push
jo
data16
or
sbb
mov
mov
in
jmp
or
inc
movsb
int3
jnp
pushf
jns
dec
add
push
dec
enter
stos
das
pop
dec
pop
mov
stos
loopne
fildl
mov
imul
adc
outsb
out
ret
inc
in
jo
sbb
inc
and
lea
bound
pusha
std
xchg
mov
dec
or
iret
repnz
loop
scas
imul
inc
outsl
mov
and
mov
ret
fildll
in
into
xchg
push
push
push
jge
scas
mov
adc
cmp
iret
shlb
imul
insl
and
mov
inc
fcomi
xchg
or
sbb
mov
sti
adc
cli
xchg
cmpsl
orl
adc
dec
cmpsl
ds
cs
bound
jae
sub
or
mov
ret
call
into
je
into
jne
hlt
and
pushf
and
or
fnstenv
dec
js
notl
mov
lods
push
inc
inc
xchg
pop
cmc
mov
dec
mov
sti
xor
loope
and
inc
stos
loop
fstpt
pop
sbb
iret
push
dec
int
stos
popf
loop
mov
ss
into
insl
or
jb
stc
lds
idiv
into
das
jmp
ljmp
lcall
jnp
xor
sbbl
dec
mov
js
mov
out
popf
pusha
lcall
push
jbe
sbb
jns
mov
lds
xor
outsb
jg
outsl
lret
insb
jns
mov
mov
add
mov
repz
push
cmp
cmp
je
push
enter
sbb
lods
test
xchg
xor
push
cmp
adc
pop
mov
mov
lods
adc
aad
call
or
mov
inc
stos
cmpsl
fists
dec
inc
repnz
mov
pop
mov
mov
stc
inc
shrb
push
sbb
push
lret
xchg
rorb
mov
int
xchg
out
mov
rcl
mov
jp
sub
push
sub
mov
or
and
out
or
test
cmp
insl
sub
jp
xchg
lock
call
cmpsb
push
cmpsb
xor
in
mov
pop
pop
scas
in
push
scas
mov
out
mov
xchg
sbb
push
inc
out
add
lret
sub
sub
sub
mov
mov
mov
test
jp
xchg
cmp
ljmp
push
in
pushl
sbb
xchg
xchg
mov
shll
mov
inc
jge
divl
and
pop
out
sbb
js
dec
imul
ljmp
leave
cli
fwait
stc
sub
inc
icebp
cld
shl
push
inc
jl
jg
lock
mov
ljmp
cwtl
xor
bound
bound
loope
push
cmc
sub
sub
pop
xchg
jecxz
or
cmp
cwtl
filds
rorl
cltd
and
xchg
aam
pop
xchg
mov
jne
dec
and
ds
inc
data16
sub
xchg
popa
or
mov
rolb
out
aam
and
loopne
test
or
pop
pop
adc
loop
jge
ds
jbe
push
add
std
xor
or
jns
mov
pop
lea
stos
adcb
cmp
or
aam
mov
push
mov
mov
lcall
dec
cs
aas
cli
mov
aaa
jmp
inc
and
jnp
mov
rcl
push
aas
ljmp
jbe
ret
xor
mov
cltd
sub
pop
adc
jp
inc
insl
mov
add
fdivrs
ljmp
cmpsb
xchg
imul
sub
loopne
in
lret
xchg
or
insb
jo
and
sbb
out
fdivr
rolb
stos
outsb
adc
pop
xor
loopne
out
mov
sbb
xadd
dec
mov
or
mov
js
fucom
test
jge
cmp
fsts
call
adc
push
jo
or
mov
cmp
jne
jbe
lahf
les
aaa
pop
inc
cmpsl
mov
sbb
pop
and
je
int3
arpl
mov
ficomps
fldcw
sbbl
sbb
loop
stc
lret
stos
pop
out
xchg
jle
adc
dec
add
adc
loopne
cmp
inc
add
sub
jmp
rcr
test
sbbl
out
fldl
pop
push
pop
fdivrs
fisttpl
sahf
mov
or
xchg
movsl
repz
fs
add
cld
sbb
pop
into
scas
mov
nop
fwait
push
push
xor
lea
push
negl
test
std
pop
cmp
jp
cmpsl
cmp
data16
adc
fldt
lret
mov
cs
stos
mov
adc
mull
xchg
adc
lret
outsl
cmc
fiaddl
mov
jge
cmp
lods
out
stos
fidivrs
lret
repz
aam
jle
fwait
pusha
mov
jo
mov
les
test
cs
jmp
jnp
mov
arpl
popa
jg
jns
lret
cli
mov
rcrl
mov
mov
sub
sub
jp
mov
stc
adc
mov
pop
les
xor
cmp
mov
loop
shrb
es
loop
dec
dec
dec
lret
ret
xchg
mov
cmc
adc
mov
push
and
fmul
je
or
lcall
jo
aas
fisubrl
ss
mov
hlt
outsl
stos
cmpl
test
int
inc
jns
push
push
stc
hlt
lea
mov
fldl
out
adc
jnp
sub
sbb
pop
ja
int3
jno
bound
icebp
xchg
fiadds
xor
in
out
mov
mov
jne
xchg
dec
xlat
jns
mov
test
dec
sbb
insb
and
mul
jb
jnp
je
push
mov
loop
es
imull
mov
iret
je
sub
push
fxch
cmp
dec
push
stos
popa
cmpsl
lea
popl
push
std
aas
pop
pop
fwait
sbb
xor
push
pop
pop
push
jnp
rclb
xchg
gs
jo
nop
nop
idivl
mov
dec
call
data16
inc
cltd
mov
mov
arpl
popf
out
dec
test
jnp
rcr
lcall
dec
xlat
xor
inc
fsubrs
nop
fiadds
call
add
inc
jmp
jae
enter
lds
out
or
cmp
xor
fs
pop
aas
pop
pop
jb
js
mov
or
mov
fbstp
out
dec
push
sbb
xlat
cmp
in
mov
gs
movsb
jg
lea
nop
lods
data16
sbb
dec
mov
cmp
inc
gs
inc
push
jl
push
push
pushf
outsb
push
jbe
mov
stos
dec
les
lret
insl
cmpsb
imul
test
les
out
dec
out
mov
push
stos
shlb
push
test
dec
jnp
and
xor
and
mov
cld
xchg
xchg
lods
out
add
dec
int
popa
xchg
fimuls
in
rcrl
aam
add
dec
scas
fnstenv
add
xchg
adcl
and
push
add
ret
mov
outsb
out
xor
and
inc
ret
int3
loope
xchg
repnz
cltd
jmp
push
decb
xchg
cs
push
push
cli
test
pop
ds
jge
jae
push
test
dec
xorb
sbb
jnp
xor
jmp
xor
sbb
xchg
sbb
test
and
inc
mov
push
bound
mov
adc
es
inc
lea
mov
sbb
ficomps
fcomps
clc
cmp
cwtl
pop
mov
aam
sub
push
mov
adc
test
rcll
loopne
xor
adc
push
adc
leave
adc
sbb
insw
add
xor
stos
ret
xor
adc
cwtl
scas
sub
push
push
mov
pop
scas
push
pop
mov
xchg
fdivrl
mov
mov
jl
fisubrl
cmp
cmp
enter
sub
fistl
jge
lea
sbb
sub
ljmp
movsb
xchg
fcompl
xor
add
call
sbb
fwait
push
data16
and
sti
mov
pop
inc
lea
cmpsb
mov
lret
ds
arpl
idiv
mov
bound
xchg
jg
mov
sahf
in
xchg
das
dec
jmp
add
aaa
jl
jnp
mov
jbe
orb
cli
lea
or
jne
lcall
xlat
cwtl
push
mov
dec
xor
pop
cli
ror
pop
enter
loopne
loop
loop
fwait
xor
es
pop
enter
loopne
inc
mov
or
jle
lds
ret
and
mov
lock
cmp
ret
stos
adcl
popf
xor
xchg
lds
and
cli
sub
xor
test
cwtl
and
repnz
shl
clc
xchg
int
push
lods
xor
repz
jns
push
out
inc
mull
xchg
adc
test
push
in
loop
mov
dec
cmp
stos
jmp
lods
inc
adc
cmp
lret
insl
hlt
sub
aas
out
adc
pop
les
es
jg
scas
xchg
cmp
adc
cs
hlt
xchg
ljmp
pop
sbb
cmpl
mov
dec
imul
cmp
xor
jo
std
inc
pop
sbb
mov
insl
pop
pop
jb
mov
sbb
or
lret
push
xchg
pop
jg
rcrl
iret
fidivrl
xor
adc
mov
push
lods
inc
rclb
sub
in
xchg
lock
mov
arpl
loopne
jno
data16
loope
lahf
add
sarl
mov
pop
test
cmp
cmp
jecxz
aam
push
sbb
inc
out
ja
fldcw
dec
add
jb
jg
ret
jnp
and
jge
gs
push
rolb
and
outsb
sbb
adc
das
lock
in
mov
adc
call
into
fnstcw
jg
sbb
cmp
aas
ljmp
sbb
or
push
cwtl
addl
mov
and
es
daa
jnp
sbbl
mov
adc
bound
orb
push
in
mov
push
mov
pusha
cmp
jnp
and
ss
mov
sub
xchg
lock
clc
jns
adc
inc
ja
and
ljmp
jmp
xchg
dec
sub
dec
imul
jnp
xor
pop
add
add
hlt
dec
dec
fcompl
lahf
ds
rorw
int3
mov
fistpll
xchg
jecxz
mov
ret
movsl
ficoms
mov
pop
push
std
sub
fdivs
cmp
mov
roll
test
mov
popf
mov
jno
cld
clc
cld
push
xchg
bound
lds
jl
sbb
xor
xor
inc
out
fisttpll
adc
push
imul
lret
fxch
imul
lcall
and
das
xchg
add
inc
adc
mov
adc
xchg
mov
sbb
adc
aas
cld
and
inc
mov
jmp
clc
adc
jns
mov
pop
in
xchg
lea
je
div
mov
rolb
in
shlb
jmp
jmp
lahf
ret
jg
xchg
mov
push
push
sbb
pcmpeqw
scas
imul
xlat
adc
arpl
movsl
bound
outsl
jae
jae
sub
jbe
in
outsl
mov
call
mov
dec
sbb
scas
jbe
jo
push
rol
jle
fdivrp
adc
sahf
xchg
inc
sbb
lods
xchg
daa
pusha
xor
lea
adc
cmp
xor
add
inc
add
pop
std
insl
into
into
and
lds
gs
loop
mov
les
fs
and
inc
inc
xchg
shll
stc
rorb
movb
lods
add
mov
fs
sbb
xchg
movsl
lods
sbb
mov
test
fstl
xchg
pop
jge
jge
aad
into
sbb
pop
ret
xor
adc
add
popa
sbb
fisttpll
out
pushf
je
add
pushf
jbe
int3
pop
jo
or
or
mov
and
adc
das
cld
sbb
xor
in
test
jae
das
in
adc
or
sbb
xchg
push
arpl
daa
mov
jmp
sub
cmp
cmp
lret
add
aad
and
cmp
cmp
and
xchg
sbb
int3
jno
jecxz
loop
insb
cwtl
sbb
and
stc
dec
sbbb
cs
scas
aam
popa
sti
xor
xchg
fsubrl
xor
inc
nop
pop
xor
sub
orb
adc
rcl
xchg
sti
gs
or
jg
xor
mov
pop
rorb
adc
push
in
xorb
fcoms
xchg
insb
jl
and
jmp
sub
add
cmp
cmp
int3
sbb
outsb
dec
inc
scas
xchg
add
inc
jmp
andl
shlb
loopne
sbb
pop
mov
jl
push
cmpsb
fsubrs
and
pop
or
fsubs
pop
in
xor
repz
scas
cmp
sub
adc
fwait
add
adc
scas
lods
and
sbbb
imul
std
idivb
sub
cmc
js
sbb
cmp
pop
subl
and
inc
stos
pop
cli
lock
add
data16
xchg
aaa
popl
es
mov
inc
mov
call
dec
push
inc
jne
mov
mov
cmp
cli
push
scas
push
jne
and
sub
mov
inc
filds
mov
jns
xor
and
pop
cmp
shl
cmp
jge
xor
adc
jmp
mov
push
dec
cmp
sub
lret
sub
dec
movsl
mov
out
add
xchg
xor
and
sub
dec
or
faddl
cmpb
in
ret
mov
stc
arpl
push
mov
mov
jbe
xor
sbb
dec
dec
aam
rorb
push
sbb
subl
inc
paddb
cmp
sbb
mov
fmul
fwait
xor
jg
leave
and
mov
lods
jne
mov
add
int3
mov
fisttpl
into
mov
sbb
stc
hlt
fdiv
xor
rclb
imul
pop
mov
gs
filds
cmpsl
lods
fcomp
int
inc
iret
mov
or
movsl
inc
jg
cli
lret
lret
mov
mov
out
adc
pop
mov
xchg
push
loop
push
dec
cmpsb
sbb
not
hlt
inc
notl
shrl
or
icebp
cmpl
mov
jmp
fcompl
lods
test
push
addl
mov
adc
in
xchg
outsl
mov
popf
dec
jg
xor
lahf
mov
fdivrl
pop
jmp
stos
sub
jg
outsl
pop
bound
loopne
xchg
mov
nop
ret
in
xlat
jle
fiadds
and
idivl
call
mov
addr16
cs
or
stos
bound
aaa
sbb
lock
mov
push
daa
jecxz
xlat
lret
scas
sub
jnp
cmp
test
mov
mov
xchg
push
addr16
movsb
popf
and
inc
fcmove
test
mov
xchg
mov
loope
popl
imul
test
or
mov
nop
mov
pusha
and
aas
mov
pop
xorb
test
out
pop
xor
rolb
test
dec
loope
rorl
cmc
int3
and
in
ret
xchg
mov
sbb
outsl
icebp
fstp
jb
daa
inc
inc
insb
push
cmp
xor
add
pop
sti
push
test
stc
push
mov
je
outsl
xchg
push
lods
test
xorl
inc
shrl
loopne
sete
mov
push
jg
add
daa
in
jae
push
inc
mov
test
jo
or
stos
lock
ja
cli
stos
mov
push
pop
in
mov
pop
adc
lret
sbb
dec
fistpl
and
fstpl
xlat
jmp
test
daa
test
push
pop
xor
outsl
test
lock
int3
fmull
arpl
xchg
in
test
addr16
jge
shlb
adc
cmpb
sub
stc
jp
mov
or
sub
bswap
or
or
sub
out
pop
pop
add
cwtl
loopne
call
lret
ljmp
xchg
and
push
adc
int3
mov
rcll
push
pop
jae
int3
sub
stc
adc
push
and
notb
nop
sbb
pop
test
lcall
bt
inc
sub
xor
sub
xchg
dec
fldt
les
cmpsb
dec
jmp
or
aam
pop
repz
sarb
jp
fdivrs
out
sarb
or
loopne
cmp
xor
pop
push
mov
or
mov
hlt
lret
ficompl
fistpl
mov
test
nop
jo
cmp
mov
pop
adc
push
xor
or
icebp
jg
mulb
push
outsb
dec
mov
add
lods
cld
fstps
imul
icebp
add
lea
pushf
rcrl
and
mov
lock
mov
dec
inc
lret
clc
pop
aaa
lahf
or
pusha
dec
or
mov
out
inc
inc
fisttps
enter
push
mov
xor
jb
or
pop
add
push
xchg
pop
xor
sbb
int3
pop
mov
dec
inc
cli
cmpsb
fcomps
movsb
cli
loope
in
imulb
pop
fisttpl
pop
ss
fs
loop
push
inc
js
jno
out
xchg
lods
and
xchg
fistl
dec
inc
sar
ror
das
or
and
sbb
lret
cmp
fcomps
mov
xor
shl
loopne
sbb
fsubp
add
inc
push
je
jmp
xchg
ret
daa
lods
sarl
aad
pop
sarb
lds
adc
enter
lods
inc
pop
xchg
lret
xchg
mov
push
dec
imul
rclb
getsec
push
repz
stos
inc
es
xchg
xorl
mov
push
stc
add
push
pop
xabort
stc
push
pop
out
mov
sub
push
ret
or
out
das
rcl
jno
js
push
mov
inc
sbb
or
arpl
stos
push
test
adc
nop
stc
mov
sbb
xchg
cwtl
xchg
int
mov
lods
mov
mov
sub
lea
and
lods
lods
ret
or
sub
jbe
fstpl
mov
or
sub
pop
mov
in
push
aaa
mov
jne
in
or
inc
loope
repz
pop
jae
dec
shr
sti
inc
lock
sub
ja
pop
xchg
idivl
loop
out
add
out
sub
push
dec
and
ficomps
pop
aaa
sub
add
stos
push
mov
in
dec
std
jnp
xor
mov
mov
cwtl
jcxz
inc
add
pop
mov
sub
rcrb
bound
mov
and
in
xchg
mov
jle
or
imul
repz
mov
and
push
push
cmp
pop
cmpsb
les
mov
fdivr
addr16
enter
cwtl
pusha
inc
jbe
and
mov
inc
or
mov
and
cmc
movsl
dec
faddp
lods
js
inc
les
mov
movl
xor
push
mov
dec
xor
or
cmpsb
cwtl
ficomps
jae
test
push
pop
sahf
mov
push
in
cmp
lods
sbb
inc
rcrl
and
mov
inc
and
cltd
mov
or
pop
pop
xchg
movsl
in
mov
pop
stos
ret
jae
xchg
insb
xor
clc
andl
shlb
and
mov
xlat
mov
xchg
iret
aas
jg
mov
add
or
or
xor
aaa
hlt
in
std
add
cmp
sub
mov
bound
adc
pop
dec
sbb
rorb
push
cld
jl
inc
mov
rorl
mov
int3
mov
int3
notl
dec
xchg
push
push
call
push
mov
xor
enter
mov
fwait
jno
in
std
aaa
push
inc
pushf
hlt
cld
dec
push
stc
scas
add
jbe
in
mov
lret
or
push
mov
js
inc
aaa
push
pop
mov
adcl
add
inc
les
shrl
cmp
xchg
xchg
push
xchg
cmp
and
jb
sbb
adc
hlt
jne
and
push
shll
notb
mov
pushf
pmaxub
sub
xchg
mov
in
test
es
stos
dec
mov
pusha
sbb
clc
scas
sbb
in
mov
cmpsl
push
das
add
ss
mov
pop
shlb
icebp
iret
mov
cld
nop
sbb
cmp
cmp
insl
jo
mov
xrelease
mov
subl
js
dec
into
out
sub
mov
jae
int3
sub
popf
ss
add
imul
aaa
jbe
pop
js
mov
cmpsb
bound
out
mov
cli
cltd
das
into
push
gs
and
pop
in
inc
fsubrs
scas
push
enter
stos
in
inc
or
clc
pop
adc
sbb
arpl
cmp
sbb
xor
push
test
inc
rcr
rcl
clc
add
lahf
fdivrl
push
sbb
dec
add
imul
cmp
inc
xor
adc
jns
pop
fwait
jae
insl
loopne
push
sub
out
jb
add
push
fld
jbe
mov
push
jmp
ficoms
jmp
mov
pop
mov
cwtl
xor
out
xchg
imul
shlb
mov
pop
adc
cmp
push
jae
add
jmp
mov
sbb
out
push
cmp
inc
push
mov
sbb
daa
mov
xchg
dec
stos
out
vpaddsw
push
in
pop
cwtl
rolb
int3
pop
xchg
mov
aaa
cmpsl
inc
jmp
dec
lret
inc
mov
jle
dec
fadds
iret
inc
lds
mov
sub
aam
das
jne
aad
mov
push
inc
sub
adc
mov
addr16
jmp
aaa
mov
test
es
gs
xchg
pop
pop
add
sbb
mov
jne
aad
and
inc
sub
lock
xchg
sub
cmp
xchg
pop
jo
push
fsubrl
xchg
pop
xchg
jo
aaa
and
stc
jp
fisttps
sbb
push
cltd
adc
xchg
adc
outsb
xchg
fdivs
rcrl
loopne
ljmp
fildll
pop
jo
or
mov
adc
push
ds
mov
mov
xor
in
xchg
push
ja
stc
sbb
data16
adc
scas
push
ss
inc
pop
out
fsubrs
ljmp
mov
cmp
pop
jmp
push
gs
sbb
stc
stos
sub
fcompl
jno
jmp
es
outsl
aaa
or
lods
push
xchg
aad
xchg
mov
lret
mov
movb
jl
in
cwtl
cli
pop
fstps
xchg
mov
das
jl
aad
test
mov
xchg
jns
mov
enter
push
test
add
aad
prefetch
or
test
jo
je
mov
jle
jp
loop
jge
cli
in
mov
jle
mov
adc
repz
cmp
adc
add
fbstp
inc
xchg
sbb
mov
mov
hlt
leave
xchg
jl
in
stos
ror
and
dec
es
loop
mov
lea
adc
in
out
sti
outsl
pop
push
mov
sub
dec
inc
or
in
into
or
sbb
and
jae
mov
scas
jae
add
repnz
scas
xchg
aaa
int
mov
scas
dec
push
test
test
jecxz
fwait
dec
cs
aam
sarl
or
je
xor
mov
cltd
inc
mov
aaa
xchg
insl
jmp
gs
scas
push
call
cmp
jbe
or
fdivrs
add
popa
call
dec
inc
sub
out
into
sub
mov
mov
sbb
adc
addr16
mov
sahf
and
subb
pushf
adc
mov
cmpsl
out
stc
out
jns
mov
fwait
mov
sub
sbbb
add
and
rcrl
mov
mov
dec
jo
outsl
cmp
orl
pusha
ja
jmp
xchg
mov
fisubrl
or
xchg
dec
sbb
mov
loopne
in
loopne
roll
ss
mov
sbb
add
xor
xor
das
sub
sahf
pop
rclb
cmp
pop
or
divl
addr16
add
cmp
fisttpl
insb
test
pushf
push
sahf
les
jbe
fdivs
orb
or
mov
pop
xchg
jno
xchg
test
ret
push
punpckldq
mov
mov
pop
dec
xchg
rclb
push
pop
pop
aaa
out
xchg
jno
jp
jle
inc
bnd
div
ret
ss
sti
xor
sbb
mov
xor
dec
pop
inc
insl
or
mov
lock
sbb
sub
pop
in
lahf
mov
clc
add
bound
lods
fisttpl
jl
sbb
xchg
leave
lret
fwait
mov
icebp
lea
mov
sub
dec
adc
stos
or
inc
xor
insl
ret
mov
dec
nop
call
inc
jns
pop
xor
pop
dec
notl
mov
clc
and
lock
mov
int
out
add
lock
pop
cmp
int3
es
lcall
sti
push
movb
sub
sahf
shll
jno
inc
xor
jl
lods
lods
mov
inc
dec
or
sub
mov
jo
inc
scas
loopne
sub
inc
fwait
push
push
sti
xor
mov
out
sub
push
xor
stos
or
inc
cmpl
dec
pop
cmpsb
dec
pop
add
adcb
and
and
outsb
dec
fadd
pop
push
scas
leave
mov
testl
scas
push
and
jo,pt
cmp
adc
je
mov
push
pop
shlb
fwait
es
mov
jecxz
stc
cmp
lods
pop
sbb
push
sub
lods
shll
xchg
xchg
cmp
jno
mov
test
clc
jl
aas
jg
sbb
push
sub
out
ret
dec
sbb
jmp
andb
sub
sub
nop
mov
fisubl
adc
sub
sub
add
jmp
xchg
icebp
sub
pop
dec
pusha
xchg
push
dec
xchg
out
pop
xchg
call
mov
sbb
adc
xchg
sbb
test
pop
inc
testb
fcompl
mov
lret
int
movsl
add
leave
repz
dec
xchg
sti
jmp
sub
mov
fst
cmp
jae
addr16
cmp
mov
fidivrs
cmp
and
stos
es
hlt
add
mov
cmp
mov
inc
data16
adc
cmp
iret
jno
lret
outsb
mov
pusha
mov
lret
outsb
xchg
cmpsb
sub
test
push
inc
in
and
mov
mov
add
int3
out
dec
push
pop
adc
jl
cli
add
pop
push
js
repnz
test
movb
sbbb
mov
lea
les
add
jecxz
jg
jo
jnp
data16
mov
pop
pop
pop
or
in
jmp
jecxz
rcrb
stos
and
mov
xchg
push
pop
sbb
fimuls
cmp
cltd
jmp
lahf
jmp
rcll
sti
xor
hlt
fildl
dec
popf
cs
adc
dec
pop
fadds
idivl
int
stos
dec
mov
dec
xchg
movsb
lcall
mov
lret
imul
enter
or
mov
out
in
push
xchg
lret
iret
icebp
div
sub
mov
pop
insl
nop
fstps
lds
cwtl
test
scas
inc
sahf
pop
mov
or
ret
pop
leave
dec
ljmp
mov
pusha
mov
adc
jbe
dec
mov
xor
sub
daa
repz
out
test
pop
pop
pop
push
rolb
popf
add
mov
adc
push
push
dec
jle
fstpt
sbb
xchg
push
and
xchg
pop
sti
fldl
and
sub
fsubs
and
test
jg
rcrb
fs
cmc
lods
sar
add
daa
les
push
int3
push
and
sub
adc
les
fsubs
int3
and
mov
fadd
mov
in
cmc
lds
ss
je
sbb
jl
mov
loope
test
faddl
add
adc
test
jns
out
sub
dec
std
out
adc
push
mov
in
popa
or
mov
jne
dec
mov
jl
jb
jo
out
lahf
mov
push
pop
pushf
jne
imul
push
pop
dec
xchg
xchg
add
ds
cli
push
outsl
pop
hlt
popf
inc
outsl
sbb
sbb
out
sbb
or
xlat
pusha
lahf
jecxz
xchg
jle
scas
xor
std
in
and
fucomip
mov
push
add
sub
add
xchg
icebp
imul
mov
mov
in
mov
ljmp
fwait
idiv
shrb
repz
xor
lods
lret
dec
cld
jle
mov
xchg
fwait
adc
jb
pop
xchg
or
scas
mov
ss
divb
mov
mov
and
fldcw
jge
cmc
pop
popa
inc
arpl
stos
push
aad
push
jl
lods
adc
jg
push
sbb
loop
mov
or
push
bound
pushf
lahf
fwait
scas
jecxz
je
into
mov
lods
ds
ret
inc
cmpsl
dec
aaa
or
pop
or
xchg
push
push
shl
je
push
cmp
sub
push
mov
sub
aam
call
push
add
adc
into
pop
in
pop
insl
lods
jo
bts
mov
hlt
xlat
or
xchg
pop
ret
out
out
aam
push
ds
orl
loopne
xchg
outsl
mov
inc
fadd
jecxz
pop
int
push
inc
cmpsl
int
sbb
mov
jbe
mov
xor
dec
data16
add
sub
nop
enter
pop
addb
jge
cmpsl
sub
aad
sbb
mov
push
xchg
subb
xchg
addr16
pop
cwtl
aaa
mov
dec
push
out
arpl
jae
sub
stos
push
shlb
xchg
and
lods
enter
mov
loop
clc
dec
push
push
xor
nop
ss
int
mov
fwait
movsl
jle
std
shl
mov
imul
int3
lret
js
mov
sub
hlt
hlt
mov
pop
and
inc
ret
out
outsb
in
ret
push
sbb
inc
sbb
imul
daa
push
sbb
mov
xchg
sbb
fs
or
jmp
stos
sahf
repz
aas
sbb
sbb
hlt
lea
cwtl
xor
jl
movsb
mov
mov
jb
or
loope
cltd
push
dec
outsb
push
aam
add
sub
cmp
ja
das
shr
cmp
lret
movl
lret
xchg
call
enter
sahf
std
mov
cmp
jg
dec
mov
mov
and
or
inc
lods
into
mov
nop
add
int
mov
daa
daa
call
int
push
js
adc
adc
xchg
iret
stc
sub
rcl
sub
jg,pt
add
sub
jbe
movsl
adc
sub
and
sub
cmp
gs
jg
in
ror
adc
stc
shlb
divb
iret
xor
mov
popf
mov
add
mov
jns
inc
jle
dec
in
or
repnz
xchg
movsl
lods
inc
loop
je
dec
daa
adc
and
inc
adc
rcr
scas
ljmp
add
aaa
inc
add
in
movsl
xchg
fsts
arpl
xchg
cli
scas
repnz
xlat
mov
lcall
pop
xchg
test
adc
sbb
fs
std
dec
mov
push
xchg
cld
out
das
in
fldenv
fisubrl
mov
sbb
jmp
jmp
add
mov
jo
jno
xchg
shl
adcb
aas
pop
mov
ficoml
sub
pop
push
jecxz
and
into
ret
lods
std
dec
lds
xchg
loop
cmp
pop
out
shrl
int
or
mov
arpl
lock
aad
nop
lret
jmp
pop
push
push
xchg
imul
adc
mov
mov
iret
stos
xor
ja
jns
sti
mov
int3
adc
lret
dec
filds
mov
imul
imul
sbb
sbb
xor
or
jl
aaa
adc
cmc
loop
and
arpl
mov
push
and
inc
sarl
loope
jne
pop
and
adc
es
mov
or
aam
sbb
fdivr
test
push
iret
or
cmp
ss
mov
sbbb
sub
fidivl
push
out
test
lods
sbb
test
repz
and
pop
out
xchg
cmpsl
add
mov
mov
xchg
pop
int3
mov
sub
mov
pop
or
push
rep
jl
dec
jle
ljmp
dec
xor
xor
or
in
iret
mov
movsb
xchg
pop
mov
mov
mov
mov
inc
xchg
into
mov
mov
dec
sbb
sbb
rcr
mov
into
push
or
int3
mov
and
add
stc
sub
xchg
mov
aaa
cmp
out
pushf
jl
pop
xchg
int
xchg
aaa
push
out
pop
mov
inc
inc
mov
dec
cmp
pop
sub
mov
mov
fdivp
data16
aaa
mov
pop
jmp
ret
arpl
mull
xchg
or
xchg
fsubrs
fistps
cli
rcll
mov
imul
js
nop
mov
dec
jb
pop
push
in
addr16
fs
and
jecxz
out
push
js
pop
cld
adc
inc
test
in
push
inc
sbb
sbb
sti
mov
insl
lods
mov
mov
outsb
in
adc
clc
and
push
pop
mov
push
pop
aaa
fidivrl
js
outsl
je
xor
mov
sbb
movsb
lcall
mov
out
mov
stos
aas
into
xchg
mov
hlt
or
mov
int3
movb
dec
adc
sbb
mov
jno
int3
testb
cmc
jge
dec
int
andb
repz
xchg
pop
popa
ss
pop
xchg
mov
fs
not
es
dec
pop
mov
js
push
cmp
mov
inc
mov
cmpsl
orb
xchg
sub
xchg
mov
daa
scas
test
pushf
jo
jne
lods
and
xor
sbb
sahf
mov
jle
pushf
lock
out
ds
push
mov
es
aam
pop
and
xlat
xchg
out
cmc
mov
scas
add
enter
xchg
es
add
cltd
popa
mov
cmp
push
mov
sub
decl
cld
sub
add
or
js
xchg
stos
jl
addr16
stc
lahf
pop
add
cmp
jns
imul
enter
roll
adc
ds
xchg
lods
mov
sti
mov
cmp
jle
stos
xor
jmp
sub
jne
mov
sub
ret
dec
xor
xchg
mov
fwait
cmpsl
adc
clc
or
add
mov
loopne
dec
adc
lret
adc
cwtl
test
mov
xchg
test
sbb
enter
dec
scas
lods
fldt
cmp
or
add
adc
mov
lret
addr16
cmp
cmpsb
mov
pop
mov
mov
push
test
mov
lret
xchg
mov
out
in
sbb
str
lcall
dec
mov
out
jl
fidivs
hlt
outsl
pop
push
sbb
fstl
das
and
bound
push
adc
cmp
mov
add
sub
pop
shlb
in
xlat
dec
xlat
jecxz
add
dec
adc
sbb
pop
sbb
dec
call
leave
sahf
mov
fistl
and
or
les
mov
pop
sar
data16
xchg
scas
out
mov
mov
mov
aaa
ss
push
mov
or
arpl
jl
or
enter
inc
test
fisttpl
push
daa
push
inc
loop
dec
rolb
jbe
and
pop
dec
adc
mov
fdiv
push
mov
enter
and
shll
pop
inc
pop
cmp
jne
mov
pop
jnp
fs
jbe
or
ss
cmp
lock
fisttpl
xor
js
aad
mov
orb
dec
pop
xor
subb
mov
mov
test
adc
jno
movb
sbb
jmp
sbb
test
hlt
mov
fldl
mov
mov
mov
stos
loope
sub
iret
loop
popa
sti
jl
fisubrs
push
and
lods
adc
stos
mov
lret
lods
xchg
jecxz
dec
push
in
mov
fcoml
dec
jmp
xor
popa
mov
pop
cli
adc
pop
inc
sbb
das
repnz
es
mov
arpl
ret
or
pop
rcrb
popf
cwtl
nop
sbb
lods
idivb
repnz
jns
mov
std
outsl
shrl
mov
cli
push
push
clc
xor
adc
ja
adc
add
fs
add
fucomi
std
ret
add
pop
repnz
xchg
jmp
mov
cmp
jae
std
daa
pop
or
lds
xchg
or
or
dec
adc
xorl
lret
pushf
inc
jbe
enter
push
cltd
cwtl
je
and
inc
mov
push
testb
cmpsl
mov
rcrl
insl
jns
mov
fs
mov
inc
jns
popa
test
sbb
xor
pop
sti
lods
sub
sbb
xchg
cld
aas
sti
mov
jl
pop
inc
in
pop
pop
and
xor
ss
shrb
xor
out
and
xor
repz
adc
inc
dec
fs
jns
and
out
std
popf
mov
cmp
mov
in
sub
or
inc
mov
mov
sahf
cmp
dec
mov
jbe
sbb
out
mov
push
sbbb
sbb
or
jbe
push
fists
add
mov
or
xor
and
cld
or
outsl
cmpsb
int3
xchg
or
sub
cmp
xchg
adc
and
mov
adc
and
sub
decl
lods
sub
pop
and
ret
xor
pop
shrl
fcmove
in
mov
pushf
xor
lahf
test
fsubrs
cmp
lock
xchg
in
add
mov
dec
loop
mov
ret
xchg
cmp
inc
mov
test
out
or
mov
xchg
lods
enter
sub
adc
rorl
xchg
test
cmp
push
jno
iret
mov
cmp
pop
roll
stc
roll
in
mov
hlt
sub
imull
lods
xor
and
int3
jecxz
es
or
clc
adc
incb
jg
inc
ret
xor
jg
dec
mov
lret
ds
fwait
repnz
stc
stos
xor
jb
or
mov
iret
fadd
cmp
push
xor
lea
aaa
dec
sub
jl
and
push
xchg
xchg
sub
in
jbe
and
mov
dec
cmc
inc
add
jge
xlat
icebp
aam
arpl
lret
fwait
push
lcall
jne
ss
ds
mov
clc
stos
jmp
jb
sbb
jl
sbb
sbb
or
add
mov
std
or
jo
das
dec
jmp
pop
jecxz
icebp
cmp
sarb
jnp
aad
cmpsl
dec
xor
outsb
and
out
int
fcomp
xor
mov
add
mov
or
aad
xor
sub
rorb
hlt
mov
add
pop
loopne
cs
cs
mov
es
xchg
int
xchg
aaa
cltd
lret
and
ret
out
lret
pop
mov
pop
or
movsl
cmc
rcll
movsb
push
sub
fldcw
mov
std
sbb
sti
aaa
jo
add
pop
stos
adc
sbb
xor
xlat
jecxz
xor
inc
jecxz
sbb
movsb
rolb
stos
jo
pusha
bound
or
jp
push
movsb
mov
push
cmc
test
subl
imul
mov
mov
adc
scas
jns
insl
mov
xchg
and
cmp
mov
and
mov
add
iret
aad
pop
mov
jae
jmp
dec
lods
ss
jge
arpl
or
xchg
nop
lcall
in
mov
clc
aaa
adc
cmp
popf
push
jl
and
xor
lods
ja
xchg
sbb
pop
pop
and
or
mov
rcrb
cmp
scas
clc
xchg
in
inc
pusha
sub
insl
stos
mov
mov
mov
and
mov
sbb
jg
test
mov
jl
imul
lock
mov
decl
fcoms
fnsave
and
jle
jns
icebp
outsb
stos
dec
pop
mov
jno
adc
dec
push
sti
notl
xchg
aaa
xchg
add
gs
jecxz
ss
adc
scas
xlat
adc
enter
aad
jecxz
daa
push
sub
lcall
xor
in
les
aas
stos
jns
dec
add
mov
push
pop
ja
mov
loope
cli
in
xchg
inc
mov
mov
hlt
cmpsb
mov
pop
shrl
ret
movsb
fiaddl
push
cmp
add
out
js
movsb
aad
int
or
adc
in
das
inc
ret
sahf
mov
and
jl
ljmp
pop
sahf
jne
arpl
jne
xchg
and
scas
in
and
scas
jle
push
rcrb
sub
fisubs
cltd
fcompl
xchg
lds
pop
add
in
push
icebp
xor
fstpl
lock
out
mov
mov
icebp
push
loope
bound
gs
call
add
cmpsl
cmp
cli
mov
les
gs
sub
mov
test
pushf
in
jle
fwait
daa
lahf
push
fisubs
fmul
test
xor
fisubs
fcmovnbe
adc
call
push
jmp
movl
sub
notb
xor
or
shrl
jno
pop
xor
dec
fldt
pop
sub
pop
or
jge
pop
jg
mov
mov
stos
and
fwait
cmp
jnp
fidivl
and
push
cmpsb
scas
daa
lcall
cld
mov
xor
ljmp
sub
xor
mov
rorl
in
leave
ss
cmp
aad
xchg
dec
cmp
sbb
arpl
mov
hlt
int3
cmp
fdivr
pop
mov
pop
ret
xchg
jo
xchg
mov
push
addr16
sub
sti
dec
mov
lcall
cmp
fldcw
movsb
jg
push
cwtl
inc
popa
ficoml
push
data16
test
dec
loop
pop
dec
pop
add
and
xchg
jle
enter
sahf
xchg
in
clc
dec
aas
movsl
xchg
adc
and
sub
fimull
cwtl
sbb
xchg
mov
pop
in
push
cmp
inc
mov
jge
int3
mov
inc
pop
leave
mov
pop
and
enter
adc
or
push
jge
xchg
cmp
cmpsb
aam
push
das
mov
adc
and
and
sar
push
lret
pop
stos
dec
in
mov
jp
push
xor
push
dec
cmp
xor
popf
mov
add
dec
loopne
in
es
mov
adc
push
lcall
repnz
or
imul
add
cmp
mov
xchg
mov
mov
fwait
movsb
ficompl
xor
and
mov
pop
iret
pop
fcmove
ds
fisubs
movl
imul
hlt
repz
rcll
mov
sbb
mov
leave
pop
cmc
loopne
lods
testl
and
or
mov
sub
cmp
fwait
test
movsb
pop
jne
push
inc
adc
scas
cmpb
stos
rcrb
adc
xor
inc
jmp
out
test
jge
sub
lcall
scas
fisttps
fcompl
ja
insl
xchg
faddl
jns
insb
insl
shlb
jp
popf
in
dec
sbb
inc
mov
inc
jb
test
xchg
das
inc
dec
adc
mov
xor
aaa
gs
mov
fsubs
mov
mov
mov
jmp
xlat
hlt
sub
xor
lret
or
pusha
xchg
and
popa
or
add
cmp
jge
mov
cmp
dec
push
mov
cld
push
rorb
xor
jle
xor
inc
inc
sub
fsubr
cmpsl
mov
pusha
movsb
adc
ret
and
or
adc
fisttpll
adc
notl
fidivl
in
pop
hlt
pop
sub
call
jno
ds
cli
jne
inc
jg
jae
dec
add
xchg
push
aam
lock
jp
jnp
insb
pop
sbb
mov
out
ret
pop
pusha
stos
addl
dec
mov
leave
sub
insb
test
pop
movsb
shlb
icebp
pop
or
dec
xlat
ljmp
xchg
in
jmp
pop
ficomps
mov
fidivrl
cmp
sbb
mov
rclb
cmp
xchg
sbb
insl
test
in
inc
inc
imul
sub
sbb
xchg
push
xor
jae
jge
sti
jecxz
mov
js
lahf
jl
add
cltd
pop
dec
jge
xor
mov
xchg
dec
inc
and
xchg
push
pop
inc
mov
jmp
test
mov
aas
fmull
nop
jmp
push
in
fwait
mov
in
repnz
fimull
xchg
cwtl
fisttps
mov
mov
jp
nop
scas
xchg
lods
shrb
leave
mov
add
adc
lods
js
mov
test
cmc
stc
out
add
inc
leave
lods
xor
add
sub
and
mov
xchg
sahf
hlt
faddl
cmp
pop
xor
sub
ds
jp
rorl
cmpsl
sar
mov
std
dec
xlat
xorl
pop
into
push
out
std
pop
push
mov
jo
mov
adc
mov
pop
lds
sbb
pusha
clc
pop
dec
adc
cmp
arpl
xchg
sbb
xor
fs
cmpsb
lea
lcall
jno
dec
test
dec
gs
ss
aad
fldenv
fsubrp
ret
xor
lcall
jecxz
jnp
jge
shl
cmp
fldl
ljmp
daa
fmul
push
push
xor
insb
mov
test
insl
out
jmp
sub
cmpsl
dec
xchg
add
adc
call
jo
sub
mov
push
adc
subl
sub
fsubl
stc
adc
mov
adc
pop
shrd
dec
jb
jns
pop
dec
aam
stc
outsl
sub
xor
or
fcmove
jge
rsqrtps
jae
cmp
push
pop
in
enter
fldenv
rclb
cli
das
or
add
or
mov
scas
cmpsb
pop
or
out
dec
add
jb
negl
adc
xlat
call
orl
lods
sub
add
jecxz
mov
jmp
movsb
dec
test
idiv
inc
fs
mov
xor
rolb
scas
sbb
xor
jl
loope
jno
nop
test
push
js
sbb
mov
and
mov
cwtl
sbb
pop
sub
adc
ljmp
mov
test
pusha
cli
or
das
hlt
inc
outsb
and
iret
jns
or
pop
aad
jp
sbb
shrb
iret
lock
movsb
sub
pop
popa
mov
shll
mov
xor
mov
push
pop
fsubr
idivb
jle
rcll
xchg
add
int3
cmpsb
xchg
into
stc
aas
stos
test
dec
cmp
nop
jbe
push
jnp
ret
ss
adc
mov
int3
arpl
mov
xchg
ret
cltd
sbb
adcb
push
popf
pop
inc
adc
aam
inc
outsb
pop
sub
mov
mov
out
adc
pop
jmp
inc
stos
das
nop
sub
mov
loope
dec
in
adc
fsubrs
xor
mov
xchg
outsl
into
sbb
xor
mov
mov
fnstsw
sbb
movsb
or
jns
adc
jno
push
jns
xchg
nop
cmp
jo
aam
out
push
fimuls
push
insb
mov
or
popf
adc
fs
sub
add
cmp
fwait
fwait
jmp
mov
out
xchg
jae
ret
fs
scas
cmpsl
lahf
jb
shlb
stc
cmpsb
hlt
test
flds
cmc
fists
not
popf
sbb
movsb
out
loopne
inc
shlb
mov
dec
pop
xchg
push
or
cmp
mov
sbb
lret
imul
or
enter
push
jae
or
or
test
or
sbb
xchg
popa
lahf
movsb
nop
ljmp
insl
mov
iret
jne
add
mov
mov
xor
jo
movb
call
movsb
movsb
xlat
sbb
cmp
addl
cld
fildl
pop
xor
cmp
lds
xchg
gs
xchg
aad
lock
pop
test
int
xor
pop
adc
pop
adc
cs
mov
sub
test
pop
sub
xchg
inc
prefetch
or
add
inc
dec
jae
pop
enter
xor
mov
push
mov
rcll
imul
leave
mov
push
mov
sbb
popa
cmpsb
add
jbe
shr
test
sahf
mov
mov
mov
cli
sbb
sbb
mov
loopne
ret
loop
cmc
roll
in
lods
inc
xor
aad
addr16
shlb
mov
mov
pop
xchg
mov
mov
xlat
cmpsb
cmp
fmull
sbb
das
fnstenv
rorb
stos
xchg
mov
xchg
les
fisubs
adc
add
fsubp
push
mov
ds
in
test
cltd
jnp
xorl
mov
inc
js
pop
addr16
lods
xchg
movb
xchg
mov
inc
push
sbb
push
dec
pusha
add
dec
add
jmp
sbb
and
mov
pushf
cmpl
stc
mov
push
cmp
fwait
stc
jmp
in
fdivs
xchg
xor
push
test
cli
or
add
adc
insb
mov
jg
repz
dec
dec
cli
sahf
adc
fildll
fiaddl
int
sbb
and
ret
out
mov
mul
shrl
popa
or
dec
jecxz
out
pop
sbb
fstl
scas
jb
ds
sub
lret
mov
test
sbb
add
push
dec
mov
jp
and
mov
jmp
cmp
sbb
sub
mov
push
xchg
or
cmpl
mov
mov
lds
pushf
fnstenv
dec
and
jmp
repz
push
je,pt
inc
jno
add
cmc
pushw
pusha
xor
push
cmpsl
aaa
xchg
ljmp
popa
arpl
les
sbb
iret
sub
aas
dec
mov
mov
imul
icebp
or
mov
and
mov
mov
push
xor
cs
cld
popa
in
fldl
ja
pop
mov
add
push
mov
lahf
inc
inc
sub
fisubrs
jl
mov
stc
daa
dec
jne
adc
sbb
mov
push
pop
inc
mov
add
jns
roll
bnd
mov
add
jmp
into
movsl
repnz
push
push
loope
inc
add
cltd
jp
stos
cmpsb
xor
cli
pop
adc
sbb
scas
int3
sbb
cmp
test
or
ret
xchg
pop
es
test
mov
adc
imul
xor
xchg
stos
lea
xor
xor
dec
clc
jb
loope
mov
mov
je
lods
pop
enter
push
lcall
jp
outsb
mov
fcmovb
cmp
scas
dec
push
lea
call
mov
pop
fsubr
mov
pop
lret
hlt
sub
push
add
and
dec
enter
loop
jo
add
movsl
cmp
stos
insb
jns
xor
insb
adc
mov
mul
test
xchg
sbb
sbb
in
rcl
test
shlb
into
or
lcall
pop
shll
hlt
jbe
jns
out
cmp
push
and
jns
xchg
jbe
xor
push
mov
loopne
xchg
and
push
jmp
mov
add
xor
test
in
idiv
fstl
pop
cmc
daa
xlat
out
push
lahf
roll
cmpl
aad
je
mov
push
out
adc
cmp
movsl
fadd
sub
pop
sti
test
cmp
add
lds
or
and
push
hlt
int3
xor
dec
dec
out
outsl
test
jle
mov
fs
mov
aam
ret
fmull
ret
xchg
sub
xor
inc
scas
in
xor
imulb
or
jge
mov
adc
adcl
loop
mov
xlat
cli
mov
cmp
pop
loope
cmp
dec
mov
jp
ljmp
leave
pop
pop
dec
dec
pop
or
push
or
mov
adc
mov
je
ljmp
frstor
pop
jnp
mov
mov
dec
jnp
out
mov
or
fcmovbe
call
cmpl
stc
push
lds
test
adc
sub
jp
push
mov
pop
adcl
mov
mov
sbb
imul
test
mov
adc
add
addr16
inc
xlat
mov
mov
lret
pop
adc
mov
cmp
push
jp
mov
add
mov
cmp
iret
daa
lds
fcoms
inc
push
ds
inc
repz
pop
inc
fimuls
repnz
push
push
jns
push
sub
adcl
bound
popa
hlt
pop
in
adcb
test
cmp
cld
sbb
inc
mov
mov
imulb
push
stc
test
popf
outsb
push
adc
pushf
std
stos
adc
pushf
test
inc
movsl
cmpsl
dec
push
scas
and
dec
ds
pop
pop
aas
lds
push
call
repnz
xor
or
cmp
lods
or
xor
scas
mov
pop
xchg
fstpl
xchg
es
cmp
pop
push
xchg
out
xlat
out
and
and
loop
push
pop
das
sbb
mov
ja
jmp
jmp
xchg
mov
inc
dec
mov
loopne
movsl
aas
fwait
jne
adc
cmp
lea
out
sbb
insb
dec
clc
mov
cltd
xchg
or
sbb
rcll
lret
cld
lods
je
outsb
push
or
add
popa
xchg
jbe
xchg
shlb
pop
outsb
inc
jo
mov
push
sub
test
pop
stos
mov
mov
leave
mov
std
bound
test
dec
ret
mov
mov
out
push
enter
scas
ret
mov
insl
loop
mov
ret
add
jbe
xor
or
ret
xlat
stc
outsl
sbb
popl
lahf
push
pop
cmp
cmp
push
jnp
cmp
lret
cmc
in
mov
ljmp
add
insb
addr16
icebp
mov
into
fildll
inc
enter
ljmp
pop
clc
stos
xchg
mov
ljmp
mov
sub
mov
fs
ja
sub
mov
mov
mov
test
xor
aas
fwait
scas
push
or
repnz
and
insl
jmp
mov
fucom
pop
je
xor
daa
xchg
push
dec
imul
pop
mov
sahf
loopne
addr16
jp
xor
and
sub
mov
bound
insl
cmpsl
lahf
lods
xchg
test
fwait
pushf
xlat
repnz
in
popf
cmc
adc
ret
push
cmp
xor
or
cs
xchg
outsl
and
pusha
jne
lret
xchg
jne
xlat
mov
inc
dec
fnstenv
adc
fildll
stos
sbbl
into
andb
cmp
outsb
and
pop
mov
adc
dec
fsub
lret
dec
out
push
popa
mov
mov
jo
pop
movl
lret
lcall
cmp
lods
adc
scas
out
pushf
imul
or
adc
inc
ja
mov
push
sbb
adc
pop
addr16
std
insb
rcll
ficoms
mov
sub
push
aas
js
mov
add
loop
aaa
adc
leave
outsl
jne
dec
clc
cmp
imul
mov
pusha
mov
arpl
dec
outsb
lahf
xchg
mov
push
mov
cmp
pushf
lcall
repz
add
icebp
push
jns
jle
lods
push
inc
push
inc
shr
stc
inc
repz
jnp
push
lret
jnp
mov
hlt
push
insb
sub
in
sbb
jo
xor
fcomps
mov
ja
or
call
add
inc
mov
push
iret
mov
inc
lds
inc
push
and
pop
les
andb
jno
push
int
mov
dec
jle
jns
mov
add
xor
pop
test
pop
mov
in
js
andl
ljmp
mov
insb
pusha
pop
mov
mov
pop
movsl
pop
shlb
cs
sbb
adc
incl
jecxz
in
aam
adc
jnp
test
imul
mov
rcrl
xchg
push
fsub
loop
mov
cmp
out
pop
shlb
sbb
sbb
into
ljmp
xchg
push
aas
inc
mov
or
pop
ss
jne
pop
test
loop
adc
and
pop
dec
add
push
lcall
lea
sub
and
push
pushf
cmp
popa
lahf
leave
imul
xchg
lret
test
nop
adc
pop
jl
test
push
cmpb
imul
fnstcw
adc
sub
es
xchg
inc
lea
jno
cmpsl
ret
incl
xor
call
loopne
test
adc
stos
mov
sbb
repnz
fstps
incl
jne
hlt
int3
mov
push
inc
or
and
les
xchg
jnp
scas
loopne
pop
xor
xchg
or
roll
nop
pop
xor
mov
add
gs
mov
push
clc
adc
movsb
or
cmp
fiadds
imul
lock
push
int3
idivl
jnp
data16
inc
jmp
leave
inc
enter
cs
cmp
mov
add
incb
push
push
rolb
pop
sbb
sub
lea
pop
or
loop
lcall
inc
mov
mov
popl
int
xorb
aam
sbb
inc
dec
adc
aad
and
scas
jno
mov
js
pop
inc
addb
flds
sbb
punpckhwd
or
xchg
xchg
scas
lret
imul
xor
cmp
mull
sbb
xchg
or
mov
adc
mov
mov
in
iret
mov
sub
sub
inc
in
mov
dec
xor
mov
cmp
ds
les
bound
sbb
ja
or
lea
add
fwait
pop
out
and
cmp
push
xchg
std
frstor
add
inc
loope
lret
shll
add
outsb
imul
xor
in
mov
add
push
inc
jge
jle
lret
mov
popf
dec
lods
lret
pop
jmp
xor
adc
in
cli
call
lods
xchg
mov
stc
cwtl
mov
cmp
or
sub
xor
pop
icebp
fs
xchg
push
cmp
hlt
inc
push
arpl
jbe
scas
out
sbb
std
in
sub
adc
push
dec
flds
mov
mov
popf
cmp
sub
sahf
pop
mov
mov
inc
test
out
cmp
add
scas
jb
adc
jno
sbb
xchg
dec
cmp
stc
hlt
adc
movsb
pushf
out
dec
fcom
orl
xchg
clc
inc
test
jle
sbb
shlb
adc
aas
subb
cmp
push
fsubr
xchg
fwait
inc
xor
pop
adc
push
pop
xchg
mov
out
sbb
jmp
pushf
push
aad
int3
jae
xor
inc
scas
mov
fldl
xchg
jge
orb
push
sub
push
pop
je
sbb
mov
leave
sbb
jne
cmp
adcb
jb
mov
clc
xorl
cld
nop
out
lret
imul
xor
push
jo
mov
mov
push
jns
cmp
mov
popa
sbb
std
or
xor
xor
mov
cmpsl
add
fnsave
fsubl
jle
ret
jne
dec
push
adc
movsl
daa
lcall
push
cmp
aam
mov
movsb
xchg
or
ss
int3
sbb
xchg
mov
sbb
mov
mov
jne
popf
stc
push
cmp
sbb
pop
mov
cmp
jmp
inc
cmpsl
mov
xor
cmpsb
clc
incl
test
or
sbb
xchg
je
pop
jp
loop
std
mov
add
add
or
push
rclb
imul
jp
loopne
mov
sbb
popf
xchg
jne
cmpsl
push
sbb
leave
jnp
test
enter
ss
sub
cmp
adc
incb
in
in
mov
mull
add
cmpsb
in
mov
mov
lcall
add
sub
cmc
fwait
xchg
lcall
out
sbb
or
sti
inc
sbb
cli
fadd
adc
or
aam
push
scas
bound
les
sbb
aaa
lods
fisubrs
or
inc
lods
jne
je
add
push
pushw
mov
xchg
daa
pushf
mov
pop
and
add
cltd
lahf
outsl
sbb
lcall
test
pop
pop
clc
pushf
jae
adc
push
int
jmp
sbbb
inc
mov
loop
je
push
jb
cmp
pop
rcrl
pop
aas
mov
aam
mov
push
shlb
jmp
push
fstpl
push
jns
cmovp
dec
sub
movsb
mov
sub
xchg
das
ficompl
push
inc
xor
cmp
lea
hlt
push
jno
push
or
mov
inc
fcmovnu
ret
lcall
popa
jns
mov
xchg
lods
les
push
mov
outsb
sbb
add
jb
and
dec
pop
inc
insb
cmpsl
add
inc
inc
sbbb
mov
out
mov
mov
adc
jecxz
push
repz
and
icebp
mov
and
jmp
push
and
out
sub
sub
fnstcw
mov
icebp
movsl
sarl
inc
data16
jb
sub
repz
iret
cmp
push
mov
not
and
mov
fs
sub
pop
sbb
lods
inc
push
lea
scas
repz
mov
pushf
bound
sbb
jle
fdivrl
cmp
dec
les
jb
cmpsl
inc
xlat
sbb
add
sub
jmp
stc
js
pop
dec
xor
sub
scas
shll
lds
pop
popf
movsl
filds
mov
out
scas
lcall
loopne
xor
pop
lods
jp
lods
jl
mov
xor
sub
xor
orb
jbe
mov
inc
es
sbb
inc
adc
out
cltd
stc
cld
mov
push
mov
add
cmp
pushf
or
add
hlt
adc
scas
mov
pop
pop
aam
rorb
pop
cmp
mov
into
inc
mov
xchg
add
adc
pop
xor
xor
test
iret
addr16
xchg
in
test
loop
xchg
lahf
dec
stc
in
pop
stc
adc
jmp
lods
push
add
movsb
repnz
lcall
stos
lods
fcoms
cmc
out
ljmp
and
idivb
sti
and
mov
pop
push
gs
shl
push
cmp
xchg
es
outsb
inc
push
push
movlhps
cmp
std
add
or
mov
add
mov
lock
push
or
aaa
xor
ss
add
testb
or
bound
lcall
and
mov
das
fsubp
sar
jbe
pop
pop
push
and
jp
sahf
xor
outsl
push
fwait
push
sub
mov
mov
iret
popa
test
adc
nop
mov
lods
jecxz
iret
fwait
sub
fimuls
cli
rcrl
cmp
stos
std
push
dec
insl
aaa
pop
sub
xor
mov
cmpb
and
les
out
mov
push
mov
gs
fmul
lret
test
movsl
nop
into
inc
jg
push
pop
mov
in
cwtl
jbe
in
mov
movsb
rorl
mov
jo
add
pushf
and
in
ja
mov
dec
and
call
shll
in
push
fisubs
loop
sub
out
fbstp
mov
sarb
bound
xor
andl
dec
xchg
cmp
dec
cwtl
cmp
mov
out
sarb
fidivrl
leave
js
aas
testb
jb
iret
ret
push
push
mov
lret
stos
fstpt
sbb
loop
xorb
loopew
jge
ret
test
xlat
push
leave
mov
push
add
push
inc
clc
push
ffree
adc
stos
sbb
mov
stos
gs
ret
mov
jbe
cmp
bound
and
sub
and
data16
push
aas
sub
pushf
insl
pusha
mov
ficomps
pusha
mov
adc
roll
push
jmp
sahf
xor
push
ss
inc
add
cmpsb
mov
mov
sub
mov
adc
push
addr16
loope
test
push
rcrb
and
scas
sbb
lea
jle
mov
pop
xor
leave
jmp
inc
cmp
pop
std
roll
lahf
in
pop
and
lahf
mov
mov
cmp
xchg
call
mov
sti
push
mov
out
xchg
aas
pop
mov
arpl
cmpsl
testl
jb
enter
xchg
fsubrl
lahf
out
rcrl
xchg
in
mov
insl
and
lock
cmp
in
jbe
and
stos
push
decb
dec
movsb
cmpsl
pop
pop
scas
lods
es
or
xor
aas
sbb
mov
inc
pop
dec
mov
mov
jne
insl
inc
xchg
jle
xchg
mov
xchg
jle
and
sub
adc
dec
filds
pop
sbb
sub
cmp
add
and
or
xor
xor
jl
push
aam
cmpsl
push
cwtl
movsb
or
push
cld
and
mov
test
cmpsb
mov
mov
mov
lcall
sbb
mov
ljmp
sbb
jp
mov
mov
mov
jle
mov
mov
outsl
push
mov
pop
jl
mov
sbb
xchg
cwtl
aam
in
sub
push
enter
aas
ret
sbb
js
insl
outsb
shlb
xor
add
add
in
xchg
lret
scas
jecxz
or
ja
mov
mov
dec
or
mov
jmp
mov
mov
mov
xchg
cmp
push
push
and
stc
adc
or
xchg
xchg
jno
cmc
add
cmp
lods
mov
test
out
push
andb
xchg
pop
fprem
insl
test
or
fdivrl
inc
aas
pop
adc
pushf
scas
cmp
out
icebp
js
adc
roll
daa
test
add
ja
dec
decb
rolb
scas
popf
or
data16
pop
popf
popa
mov
cmpsb
adc
movsb
sti
ret
daa
pop
inc
sub
jle
out
out
cmp
mov
imul
aad
aaa
hlt
mov
imul
pop
cs
pop
test
and
aas
sbb
dec
inc
sti
inc
fmuls
cmp
add
or
les
ret
mov
aad
aam
dec
add
arpl
ss
jge
dec
mov
mov
data16
pop
mov
adc
jle
push
jge
dec
or
loopne
mov
call
mov
inc
ljmp
in
gs
pop
movsb
stc
sbb
cld
hlt
paddusw
lds
shlb
fisubrl
xchg
int
jg
imul
and
cwtl
imul
push
out
sbb
ficomps
test
and
enter
or
cli
mov
repz
jo
mov
sbb
addb
pop
push
xchg
testb
adc
je
sahf
jne
xchg
in
out
dec
sub
xor
fcoml
loope
adc
test
push
jle
mov
daa
or
xchg
cmp
sbb
dec
jg
aas
push
insb
pop
xchg
jno
xchg
je
cmp
xchg
inc
jnp
xor
jge
scas
xor
sti
insb
pop
dec
cmp
ja
mov
fwait
push
cmpsb
test
sub
int3
inc
test
and
mov
in
icebp
loop
pushf
pop
dec
sbb
in
sub
push
int
lcall
fsubr
incl
push
cmp
jg
leave
sti
mov
push
mov
cld
cmc
lret
jp
mov
adc
ss
mov
jns
mov
cmp
add
ljmp
add
sbb
andb
cli
push
pusha
push
outsl
xor
cmp
or
push
imul
cmpb
mov
pop
mov
lea
setb
jno
iret
mov
xchg
cmc
xor
inc
xchg
lcall
into
dec
cli
jne
and
imul
push
addr16
leave
lock
pop
faddp
sbb
sbb
xchg
pop
sbb
mov
loop
mov
or
push
jecxz
pop
loope
aas
jb
inc
mov
rolb
jmp
jne
jae
and
adc
je
in
and
les
test
insl
into
push
stos
inc
jae
or
xchg
fnstsw
icebp
fstl
std
and
and
xchg
ret
or
sbb
lock
dec
in
push
push
shld
mov
imul
mov
jecxz
mov
addl
lahf
and
fiadds
inc
fst
jl
jns
gs
pushf
mov
in
mov
rorl
movsb
or
mov
cmpsl
mov
sahf
lret
aad
dec
popa
push
cs
mov
inc
arpl
hlt
cmp
push
mov
jge
adc
enter
xor
mov
pop
push
dec
cmc
and
and
push
sbb
loop
pop
popf
adc
sbb
jae
and
pop
mov
sub
sahf
cmp
inc
cmp
shlb
cs
cwtl
inc
movsb
pop
call
xor
xor
or
xor
sbb
cwtl
push
fnstsw
push
lcall
test
pop
and
orl
mov
sahf
xor
dec
int
int
test
push
or
mov
xor
xchg
add
stc
fstpl
pushl
jnp
cmp
call
ret
adc
in
inc
push
mov
xchg
xchg
cmp
fucom
int
hlt
add
and
hlt
jno
adc
fcmovne
pop
or
lahf
sti
enter
int
cmpsl
mov
inc
int
insb
pop
and
mov
inc
shll
adcl
das
mov
mov
mov
cmp
pop
jno
arpl
rcrb
int3
sub
mov
xor
pop
iret
adc
sub
out
xchg
cld
pop
pushf
icebp
push
loope
cli
imul
pop
xor
push
cmp
sbb
ja
cmpsl
int3
pop
lods
add
jb
scas
pushf
jle
sub
mov
dec
scas
ror
insb
cmp
loope
aas
pop
jp
enter
cmp
sbb
stos
sub
mov
mov
mov
or
stc
repz
push
mov
cli
lea
jne
sub
gs
push
sub
jp
sub
xchg
push
add
call
jo
imul
jmp
scas
mov
inc
clc
int3
insb
icebp
jecxz
sub
jne
sub
mov
mov
popa
aam
pop
and
pop
aad
xchg
cmp
inc
ret
cmp
jns
popa
mov
lea
stos
jl
pop
adc
mov
cmp
xor
sub
cmpsl
loope
and
scas
movsb
push
adc
dec
jbe
dec
pop
sbb
daa
movsl
lret
lahf
xchg
push
jnp
pop
lods
dec
mov
not
mov
cmp
dec
or
or
xor
outsl
xor
lret
push
add
jmp
xlat
stos
pop
in
dec
sub
mov
roll
push
je
mov
jbe
out
or
jg
push
int3
in
int
dec
pop
or
push
stc
push
test
mov
orb
sbbl
dec
or
out
popa
leave
aaa
pushf
pusha
int3
je
scas
mov
and
push
movsb
shll
lods
pop
xor
int3
cmp
jecxz
add
dec
arpl
add
ljmp
pop
cmp
in
out
stos
dec
jl
sbb
out
jb
js
sbb
jne
fs
aad
push
dec
es
testl
xchg
popa
scas
stc
ret
pusha
xor
and
cli
jl
sbb
adc
jb
insb
mov
pop
push
or
cmc
in
cld
gs
xor
cs
xchg
mov
pop
ret
mov
mov
mov
xor
fmull
inc
imul
hlt
movsl
fcomps
leave
insb
or
or
lock
div
sbbb
xchg
jo
mov
gs
inc
movsb
sti
sub
rcrb
int3
rcrb
sub
pop
and
jmp
pop
lods
lret
test
sbb
jae
add
mov
jecxz
inc
or
add
mov
mov
gs
negl
inc
inc
sbb
jne
mov
jb
sbbl
xor
cmp
loope
adc
xchg
insl
fstps
cs
outsb
xor
sbb
xor
or
pop
mul
sbb
pop
mov
aam
and
jo
outsb
leave
aam
addb
popl
hlt
ja
xor
sbb
dec
je,pn
cmp
cmp
mov
jnp
push
xchg
jg
dec
cmp
dec
jecxz
and
pushf
in
enter
nop
xchg
aas
out
xchg
ja
push
or
cmp
jb
arpl
mov
add
add
push
ljmp
cli
adc
cmp
inc
call
loopne
adc
adc
adc
pop
push
dec
lahf
nop
in
test
jne
sbb
mov
sub
test
mov
daa
xchg
pop
mov
enter
imul
add
movsb
mov
test
xchg
sub
fistpll
jmp
inc
jge
lret
mov
pushf
mov
mov
push
xor
mov
incl
in
mov
sub
scas
adcl
pop
mov
andb
sbbb
test
mov
rol
out
sub
dec
imul
movsl
xor
lds
mov
xchg
sub
mov
fstpt
cs
inc
cmpsb
fcomp
movsb
xchg
sub
or
lret
dec
and
pop
mov
lahf
jns
maxps
fstpt
imul
popa
cltd
sub
jnp
pushf
pop
add
stos
in
roll
pop
es
outsb
mov
into
mov
cmp
sbb
push
pop
call
lods
cmp
mov
fs
xor
xor
fistps
inc
jae
aas
fstps
imul
mov
subl
push
les
enter
std
ficompl
fisttps
iret
or
jecxz
adc
pusha
sbb
fidivs
and
fdiv
mov
rorl
fwait
out
mov
dec
imul
mov
sub
add
mov
sbb
lea
cli
sarb
loope
loopne
mov
mov
pop
testl
or
nop
jmp
fstpt
rorl
in
inc
lods
sbb
lret
shl
cld
jecxz
fwait
pop
movsb
dec
sub
shr
popa
repnz
in
outsl
jmp
aam
sub
arpl
add
int
mov
arpl
xor
pop
imul
out
add
xchg
in
filds
cmp
push
inc
into
xchg
into
jo
aaa
in
in
xchg
adc
adc
insb
or
popf
or
cmp
lcall
xchg
cld
popf
or
xor
mov
xchg
pop
adc
movsl
lods
int
xor
dec
push
popf
jge
jne
cmpb
mov
add
cmp
test
gs
push
jne
repnz
out
cli
scas
lds
or
stc
dec
fsubs
shr
mov
stos
sub
or
mov
mov
call
repz
nop
adc
aas
xor
add
stc
nop
xchg
jge
pop
xlat
push
dec
stos
xchg
push
outsb
fisttpll
xchg
lods
stc
pop
movsb
ljmp
cmpsl
xor
xor
cmp
and
jo
push
popa
sbb
addr16
add
loop
mov
sahf
jmp
cmp
cmp
inc
insb
cld
jp
pop
sub
jge
repz
rorl
mov
sub
mov
in
fucomp
pop
lcall
int
cmp
stos
push
pop
push
testl
adc
jp
out
data16
lea
mov
jnp
out
push
cmc
ja
idivl
bound
xchg
call
push
arpl
int3
fs
xor
xchg
ret
iret
adc
mov
dec
dec
rcrb
dec
lret
or
mov
xor
mov
cmove
xchg
push
mov
push
imul
mov
andl
mov
push
insb
lret
sbb
and
pusha
jo
icebp
or
pop
cld
scas
add
negb
in
pop
sub
inc
sahf
push
insl
int
xor
cwtl
fsubrp
jbe
ss
lret
push
daa
int3
shll
mov
cmp
jg
aas
inc
mov
ret
imul
ljmp
je
inc
mov
sub
pop
and
xchg
rclb
push
mov
xchg
icebp
and
je
call
cmpsl
insb
sahf
jbe
inc
flds
mov
in
insl
daa
fdivrl
push
outsl
scas
ljmp
jge
cmpsl
pop
pusha
scas
mov
and
jne
jo
mov
push
scas
mov
aaa
lods
es
rol
ret
aam
jne
xor
pop
add
push
mov
inc
mov
adc
and
mov
sbb
sbb
or
fmuls
dec
fdivl
mov
sahf
xchg
mov
mov
xor
and
cld
cld
mov
cld
adc
jmp
aad
pop
xchg
push
sbb
and
mov
lods
imul
cmc
test
out
push
fcomps
sub
test
sub
dec
imul
push
push
lea
push
jmp
sarl
aam
ja
cmp
jg
mov
sub
es
sbb
adc
in
dec
test
xlat
pop
les
jbe
into
xor
and
ja
pop
xor
imul
es
xor
add
fnstsw
push
jl
and
hlt
sub
sti
push
dec
hlt
movsl
sbb
lock
push
or
add
push
adc
jg
mov
repz
pusha
aas
loopne
daa
push
fstp
es
aaa
lret
push
aad
sti
adc
mov
jae
xor
mov
and
adc
add
imul
dec
push
pop
test
xchg
mov
xlat
sub
arpl
js
lods
test
lret
fwait
lods
rcll
cmpsl
rorl
repz
gs
or
inc
xchg
push
fdivrl
add
dec
inc
es
daa
xor
nop
dec
fstl
push
inc
aas
cld
int3
xlat
jg
sbb
sbb
mov
cmp
jnp
mov
mov
cmp
pop
jno
mov
lods
mov
mov
and
inc
divb
in
sub
mov
mov
lret
xor
jg
aam
mov
sub
lahf
pop
imulb
cld
jmp
iret
adc
push
jns
push
push
into
pop
and
xlat
outsb
aas
imul
orl
iret
pop
inc
lret
cmp
test
xlat
push
ficoms
test
mov
int
adc
loop
sub
int3
inc
adc
rcr
push
cmp
xor
dec
mov
or
sub
push
fdivs
jle
mov
push
rorb
shr
lret
jae
mov
leave
outsb
or
or
sbb
xchg
xor
push
cmp
rol
sub
in
push
ds
push
mov
mov
ss
pop
pop
jbe
jle
stos
jp
hlt
inc
int3
mov
add
or
jb
inc
push
insl
es
pop
pushf
add
jb
inc
sahf
pop
cli
cld
add
xchg
xchg
sbb
icebp
xchg
test
hlt
test
lcall
es
xor
decl
push
inc
lahf
dec
cmp
xchg
or
fstl
pop
addl
mov
pop
add
sub
mov
out
sar
or
dec
icebp
lock
addb
sti
dec
mov
and
pop
sbb
loope
shrb
dec
fisubrs
dec
sub
fstpl
jecxz
sahf
aas
pop
lds
enter
sub
mov
xchg
scas
bound
pop
dec
ss
jge
xchg
jg
push
das
cld
andl
add
dec
aad
std
inc
inc
lods
pop
sub
cs
xor
int
dec
out
mov
pop
sbb
insl
push
loopne
or
jb
cmp
repnz
push
adc
jns
pop
subb
sbb
mov
aaa
pop
or
xchg
out
imul
mov
lods
sub
lds
mov
and
xchg
test
push
loope
cs
pusha
sti
cmpl
aas
popa
shrb
xchg
cmp
adc
popf
xchg
sub
orl
sub
mov
xor
fisubrl
aaa
jecxz
mov
les
add
ljmp
call
gs
inc
mov
ss
add
mov
in
shrb
add
movsl
loope
xchg
or
dec
fcompl
jne
mov
repnz
inc
pop
inc
fnsave
mov
movsb
movsb
or
jnp
or
loop
lods
popf
cwtl
jg
add
notb
mov
lret
pop
aad
test
sti
movsl
shlb
dec
aam
out
lds
jo
adc
mov
push
jecxz
imul
and
ficomps
pop
cmp
mov
cld
shlb
in
into
mov
lods
sbb
mov
or
mov
xchg
call
fwait
int3
test
jnp
decb
cmp
out
dec
xchg
mov
movsl
enter
stos
mov
xchg
push
je
sbb
scas
pop
arpl
pusha
cmp
test
mov
xchg
pop
sbb
iret
inc
push
xchg
shlb
mov
fwait
sbb
ss
sub
insb
fldt
mov
ljmp
cmp
das
icebp
lods
adc
pop
dec
hlt
lret
sub
jb
mov
cmp
xor
aas
and
adc
repz
fidivl
xchg
add
insb
loop
adc
ficoms
sub
xor
mov
jo
mov
jle
cmpsl
scas
pop
dec
popf
lods
pop
xchg
loope
aad
sbb
fidivs
ror
test
incl
outsb
xchg
sbb
jl
adc
stc
sub
das
jg
cld
int3
ja
mull
rcrb
mov
push
mov
and
aas
push
pop
pop
mov
pop
sbb
loop
and
and
fisubl
sbb
fsubs
ret
es
xor
mov
push
push
addb
jae
fbstp
sbb
out
je
mov
xchg
push
int3
andb
ja
xchg
add
sub
out
int3
and
dec
xchg
pop
lods
fbstp
adc
and
iret
mov
mov
inc
adc
and
adc
or
into
mov
and
sbb
mov
int3
insb
pop
cmpsb
outsb
data16
xor
jecxz
pop
dec
push
pop
stos
sti
sarl
dec
loop
into
lock
mov
mov
adc
mov
mov
loope
xor
lock
xchg
cmpsl
ds
xor
add
mov
pop
imul
push
fucomi
stos
sbb
and
ror
icebp
sbb
xchg
xor
jmp
jo
jmp
in
clc
nop
out
jo
std
add
sub
test
int3
mov
mov
adc
xchg
xor
mov
push
cld
sub
jnp
ret
out
mov
inc
int
out
enter
mov
inc
mov
aaa
jb
pop
insl
mov
push
ja
push
fs
xor
xchg
lcall
lret
lahf
lods
cmp
cmp
xlat
fstp
gs
xlat
movb
arpl
xchg
fisubs
loope
outsb
xor
fisubs
mov
movsb
scas
ficoms
mov
push
inc
idivb
int3
xchg
mov
sbb
mov
icebp
scas
je
add
mov
dec
es
mov
mov
pop
loop
imul
repz
jmp
ret
popf
pushf
jne
daa
aaa
mov
pop
pusha
pop
pop
stos
rolb
push
popa
mov
sbb
mov
cmpsl
ds
ja
cmpsb
clc
jno
adc
cmp
jbe
int
gs
mov
xlat
bound
push
xor
sub
mov
test
daa
loopne
aas
shrl
xchg
pop
fiaddl
ret
and
mov
add
add
sub
out
ret
ss
push
mov
enter
scas
pop
or
push
insb
or
out
mov
test
test
push
pop
sub
sbb
out
inc
cld
jg
test
sbb
jb
sbb
mov
mov
sub
and
ret
push
repnz
movsb
mov
adc
adc
sahf
jg
mov
je
test
data16
cmpsb
shlb
push
jmp
loopne
and
mov
push
pop
leave
dec
sbb
or
cmp
push
cli
pop
sarb
mov
sbb
loope
jmp
lret
mov
insb
stc
xchg
and
push
adc
or
xor
test
pop
std
scas
int3
adc
aad
ds
push
in
push
sahf
xchg
push
add
pop
ljmp
cmp
das
lds
or
jne
sub
sub
add
inc
std
push
loop
stos
add
fidivl
ror
mov
mov
inc
sbb
outsb
sub
inc
test
mov
pop
mov
icebp
dec
lock
stos
mov
xlat
mov
xchg
enter
or
jns
push
std
push
jne
push
inc
or
sub
aam
es
ja
repz
pop
inc
dec
add
es
adc
sbb
sahf
cltd
adc
sahf
cmp
sub
lock
fnstsw
fucomip
or
int3
mov
mov
cmp
cltd
jmp
add
dec
sbb
push
xchg
inc
inc
push
fiaddl
sub
and
cmp
in
and
dec
in
call
jnp
mov
fiadds
stos
shl
les
or
js
inc
shlb
push
adc
xor
jo
shll
cmc
clc
dec
test
jb
pop
xchg
add
lds
cwtl
int3
and
adc
push
jge
push
test
dec
add
adc
inc
xor
inc
mov
clc
ljmp
fsubr
cwtl
ja
xor
scas
mov
aad
xor
fwait
push
shll
xor
dec
sbb
or
je
ds
rorb
jbe
imulb
or
lret
add
in
add
jae
cmpsb
arpl
inc
lret
aad
jb
pushf
push
fistl
xchg
rorl
call
pushf
sahf
pop
sbb
mov
cmp
sbb
out
mul
fidivs
mov
cmpsl
ret
imull
fnstcw
pop
aad
out
les
inc
xor
mov
mov
sub
das
cmpsb
popf
stos
push
dec
test
cmp
gs
add
jno
mov
repnz
push
int
iret
fwait
xchg
addl
stos
lock
sahf
cmpsl
sbb
jl
sbb
das
inc
pop
stc
jbe
adc
fnstcw
xchg
pop
fdivrs
jo
mov
out
insb
loopne
stos
sub
lock
rcrb
or
inc
xor
sub
dec
jb
sbb
pmaxsw
or
rclb
arpl
incb
mov
cmp
sbbl
xchg
push
daa
mov
xchg
cmp
adc
jb
mov
add
inc
xchg
cmp
lods
jo
jns
mov
mov
sbb
add
adc
mov
nop
mov
stc
fimull
or
out
jne
faddl
ljmp
pop
pop
push
push
pop
dec
subb
jae
jnp
and
xchg
pop
pop
mov
sbb
sub
and
adcb
fwait
xor
lret
jp
adc
adc
sbb
jmp
xchg
rolb
mov
lret
lock
mov
imul
sbb
arpl
inc
push
xchg
ss
or
lcall
dec
push
fs
nop
or
test
mov
testl
xchg
dec
inc
xchg
and
stos
sub
movsl
jp
sub
mov
push
push
xor
dec
imul
insl
insl
in
cmpsb
dec
clc
adc
push
push
mov
mov
dec
push
loope
bound
jno
inc
mov
sbb
sbb
das
xchg
imul
mov
xor
mov
cmc
mov
cmp
add
push
jno
jp
mov
add
xor
pushf
jp
mov
xchg
std
inc
xchg
das
roll
vsqrtsd
mov
xchg
or
iret
cs
mov
push
jmp
and
lods
xchg
cmp
mov
push
push
aas
daa
xor
xchg
jg
mov
rcll
repnz
out
dec
icebp
mov
sbb
mov
cmp
rcll
mov
mov
adc
es
mov
adc
fimull
mov
decb
push
clc
data16
lahf
jb
jmp
adc
and
mov
int3
stos
sub
push
pop
shlb
ret
mov
int3
or
adc
movsb
fisttpll
pop
cmp
push
xchg
cmp
imull
push
ret
add
mov
sbb
push
dec
and
mov
jo
mov
rcrl
push
or
fldenv
lods
xchg
jg
push
insl
mov
push
and
inc
int3
xor
cli
inc
clc
in
cs
jbe
and
sti
stos
inc
inc
jge
pop
sbb
mov
mov
xorb
rorb
movsb
and
dec
ja,pn
push
pop
jmp
cli
push
adc
in
out
and
pushf
adc
xchg
mulb
daa
pop
xor
aam
dec
mov
fwait
lock
gs
aas
dec
inc
push
bound
loop
int
jb
pusha
loop
push
mov
sahf
mov
cmp
icebp
shrb
mov
cmpsl
lret
out
push
fs
mov
xorb
andl
mov
and
shlb
dec
lds
dec
mov
fimuls
loop
or
and
movsb
cmp
negl
lods
imull
dec
push
imul
in
mov
xchg
scas
lcall
adc
loope
add
jle
mov
data16
or
mov
lret
dec
popa
aaa
daa
sti
push
ljmp
push
decb
imul
enter
pop
loop
shlb
out
dec
xchg
mov
dec
xchg
mov
sub
mov
stos
loopne
jmp
pushf
and
icebp
out
insl
pop
bound
popf
mov
lcall
mov
sbb
stos
xor
xchg
fisttpll
adcl
fsubs
push
mov
and
leave
fbstp
push
and
add
outsb
outsl
mov
mov
or
jecxz
fdecstp
loopne
movsl
popa
hlt
cmpsb
bound
adc
iret
iret
and
shl
jl
outsl
movsl
daa
sbb
sbb
ret
outsl
jmp
idivb
sub
and
invlpg
mov
push
mov
test
leave
inc
adc
iret
adc
cmp
stos
adc
mov
sub
vpmovdb
rolb
xor
pop
cli
mov
loope
mov
xchg
sbb
push
mov
mov
add
je
jge
dec
sbb
jmp
xchg
mov
movsb
jmp
arpl
xchg
test
xor
jne
cmovne
dec
inc
xor
mov
js
lahf
cmp
mov
mov
stc
mov
mov
stc
jae
out
inc
dec
or
inc
scas
xchg
pop
dec
jp
inc
roll
sahf
or
and
lret
daa
jle
test
loop
mull
and
out
cs
adc
adc
lds
cmc
bound
and
jb
xchg
arpl
loope
fs
push
and
roll
xchg
adc
sti
call
jl
popa
add
cld
sub
fisubs
mov
mov
mov
and
cmp
loopne
in
cld
mov
out
ss
push
mov
sub
xchg
xchg
movsl
inc
add
sti
mov
lret
leave
adc
xor
dec
dec
adc
and
outsl
add
jg
and
sbb
stos
sub
mov
sarl
fiaddl
xchg
into
sahf
lret
jp
adc
inc
sahf
push
and
adc
mov
fcomps
mov
mov
inc
aam
loop
adc
xchg
movsl
outsb
imul
insb
xchg
arpl
jmp
movsb
xchg
mov
repnz
aaa
ss
inc
test
mov
aam
repnz
inc
test
popa
xchg
mov
mov
mov
push
in
mov
xchg
xchg
fcom
fidivrl
es
cmpsb
and
leave
inc
pushw
sbb
ficompl
and
test
pop
movsb
out
fcmovb
stos
fisttpll
push
in
test
adc
inc
mov
popa
daa
mov
jmp
lret
mov
dec
mov
jmp
sbb
jle
sub
fwait
dec
push
jne
loope
pop
dec
imul
ror
inc
and
andb
adc
mov
rclb
mov
pop
and
jnp
or
nop
fadds
inc
popf
stc
dec
mov
mov
cmp
adc
iret
cmp
sbb
cmpsl
xchg
out
inc
sbb
fldcw
lret
inc
mov
sub
fbld
and
sbb
cwtl
out
int
movsb
cld
arpl
mov
push
dec
pop
inc
or
dec
jnp
jg
dec
imul
push
adc
push
fistl
lcall
out
xor
js
jne
inc
pop
in
mov
jg
or
bnd
jnp
mov
adc
mov
sbb
mov
sub
dec
mov
ret
jns
inc
repz
mov
add
hlt
into
mov
add
mov
mov
cmpsb
push
bound
test
jno
sub
int
mov
inc
jnp
movsb
push
pop
pusha
loopne
je
mov
dec
lret
push
mov
lret
jae
xor
adc
cwtl
jp,pt
add
loop
dec
and
hlt
push
mov
or
add
call
pop
pop
cmpsl
push
ret
and
pop
mov
pop
mov
inc
sbb
cmp
xor
lret
xor
adc
xor
cld
sub
mov
ret
mov
mov
out
stos
push
inc
gs
hlt
lahf
lds
sbb
mov
mov
sarl
pop
je
push
sub
iret
adc
and
bound
dec
cwtl
lock
push
and
daa
movsl
popf
adc
fcoms
push
pop
shl
repnz
xor
push
and
cmp
pop
in
in
rolb
pop
mov
jae
xor
negl
mov
movsb
dec
adc
mov
pop
fmull
dec
push
insl
adc
js
jmp
lret
mov
and
sub
pushf
into
inc
push
adc
int3
jb
test
data16
lcall
test
mov
add
add
imul
xor
jbe
dec
mov
mov
test
sahf
roll
sub
mov
inc
mov
ret
int3
pop
dec
inc
adc
pop
outsb
adc
popf
xchg
les
loopne
popf
pushf
mov
sbb
in
outsb
sub
jmp
pop
daa
loop
fdivrs
lret
insb
test
mov
adcb
or
pop
fs
cli
jge
iret
test
js
bound
push
cmc
pop
xor
sub
in
es
clc
testb
test
xchg
ja
cmp
adc
insl
sub
lcall
enter
inc
cld
cmp
shlb
fidivrl
jecxz,pt
imul
sub
out
jg
dec
push
mov
aam
sbb
cli
inc
cmp
fstpt
stos
aas
xor
lods
jl
adc
out
fadd
es
cmp
aad
mov
jo
cwtl
add
or
push
sbb
out
jo
add
sbb
clc
jo
adc
movsl
nop
jne
sbb
push
push
sahf
jo
cltd
or
lods
ret
xchg
and
push
pop
gs
out
enter
xchg
clc
stc
into
out
out
mov
out
xchg
fwait
js
push
jp
dec
mov
out
and
ja
push
cmp
push
outsl
jns
xchg
int
jae
xchg
mov
fwait
mov
adc
cmp
mov
pusha
jge
lock
insb
sbb
pop
adc
or
lret
lds
rcll
pop
jle
je
test
repnz
hlt
outsl
sbb
movsb
mov
loop
dec
pop
mov
mov
hlt
push
push
cmp
loopne
mov
aam
sbb
sbb
adc
sbb
sub
movsb
fwait
roll
xor
mov
loope
pop
imul
rep
rep
xchg
jno
adc
icebp
and
jl
dec
addr16
mov
inc
fistl
dec
imul
daa
xchg
popa
cmp
cmpsb
sub
push
bound
jmp
inc
jno
inc
bound
mov
mov
sub
imul
push
push
aad
jg
mov
repnz
pop
bnd
int
sub
ljmp
roll
mov
cmp
dec
je
fdivrl
fistps
push
outsl
aad
fwait
sbb
xor
xchg
sahf
fsub
int3
rep
outsl
add
jp
test
jp
bound
xor
and
mov
loope
mov
cmc
stc
jne
sti
aad
imul
pop
in
mov
aas
mov
push
js
hlt
pop
xchg
xor
or
leave
xor
imul
dec
into
jl
cmp
or
aaa
loop
pop
cmp
add
lahf
stos
add
mov
dec
mov
push
outsl
call
call
fs
inc
les
xchg
fldt
insl
out
jl
ret
mov
inc
aam
jmp
sub
ret
xorl
popf
ret
jecxz
push
outsb
push
push
lods
ds
dec
adc
pop
sahf
test
cmp
mov
xchg
fstpl
xor
mov
outsl
mov
add
test
pop
in
xchg
mov
ss
shlb
xchg
sub
mov
ljmp
xchg
icebp
xor
sub
shr
add
sub
pushf
add
dec
icebp
into
cmp
push
dec
popa
mov
lret
cwtl
adc
inc
sub
xchg
js
popa
rcll
pushw
or
lcall
jnp
mov
adc
roll
jg
adc
and
xchg
adc
pushf
xlat
jo
dec
adc
pop
popa
or
and
imul
xchg
test
or
cld
pop
or
lahf
mov
ljmp
ljmp
adc
stc
insb
or
lods
pop
orb
out
mov
mov
jnp
mov
adcl
dec
push
xchg
fstps
xor
xor
push
fninit
stc
in
xor
popa
add
dec
clc
mov
psadbw
sbb
lret
enter
imul
je
push
in
vcomisd
icebp
push
dec
pop
repz
xchg
xchg
pop
or
aam
test
sub
adc
and
les
jp
divb
int3
dec
call
cmp
cmpsl
jbe
sbb
jne
sbb
mov
shrb
cmp
iret
sub
addr16
scas
or
adc
jge
and
bound
sbb
enter
aad
sbbb
dec
cmc
in
mov
lret
fs
mov
jl
cmp
jno
sbb
addr16
sub
je
fs
xchg
cmp
sub
lret
inc
xorl
push
imul
xor
jno
je
mov
in
cmp
lea
cmpsl
in
imul
mov
mov
ret
push
enter
loope
test
in
dec
mov
movntps
pop
ds
in
cli
lahf
dec
jnp
pop
test
fdivs
roll
add
adc
ret
mov
mov
out
hlt
xlat
idivb
cmp
pop
dec
adc
cmpsb
lahf
arpl
shlb
and
loop
fldenv
pop
pop
dec
xlat
xchg
sbb
add
daa
or
loop
inc
stos
movsb
cwtl
jmp
jmp
shr
cmpsl
mov
arpl
pop
stc
int3
loope
pop
outsl
stos
and
sbb
xchg
xor
cwtl
insb
call
ret
mov
xor
lds
test
add
cltd
lea
xchg
xchg
ret
add
ret
pop
and
test
out
xchg
in
push
xor
xchg
lea
xor
mov
imul
push
or
mov
cmc
add
popa
inc
jno
cmp
fnsave
push
cmpsl
or
pop
clc
out
fadds
fs
sbb
xor
dec
push
cmp
mov
lds
sbbl
movsb
mov
inc
mov
mov
adc
cmc
xchg
mov
add
std
sahf
pop
out
jecxz
das
ljmp
lock
sbb
nop
lods
sub
lret
push
bound
inc
pusha
rorl
and
mov
dec
clc
cld
sub
sbb
adc
pop
mov
fists
xchg
pop
xchg
cmpsl
lret
ret
sub
xor
and
push
pop
mov
xchg
lods
stc
inc
sub
lods
imul
or
in
and
loop
loopne
pop
arpl
aaa
fidivs
aad
daa
jno
sub
xor
pop
sbb
rclb
daa
faddl
call
das
cmpsb
jne
pushf
mov
sbb
in
arpl
je,pn
loopne
jne
and
cmc
and
ret
mov
dec
call
sbb
push
xchg
jne
int
scas
xchg
sub
adc
xlat
pusha
mov
movsb
inc
rorb
inc
test
in
cmp
out
adcl
inc
inc
xchg
mov
pop
mov
adc
mov
add
test
or
call
or
inc
fdivrs
or
ss
pop
mov
jp
inc
pop
add
cmp
cmpsl
pushf
add
mov
add
mov
push
cmp
and
std
pop
test
dec
hlt
aaa
fwait
call
jl
jae
in
push
leave
push
inc
add
fldenv
mov
pop
cs
repnz
sbb
mov
lret
cmp
pop
imul
arpl
clc
and
cmpsb
fimull
mov
mov
jmp
push
sbb
and
mov
xchg
cld
sar
push
outsb
inc
cmp
arpl
xchg
ret
sub
les
lods
std
call
or
aaa
inc
fwait
pop
jge
jp
xor
fiadds
shrl
repnz
adc
push
shl
pop
sahf
push
sub
jmp
cmpsl
nop
lods
and
in
into
pop
test
or
and
pop
lret
pop
jmp
out
shrl
jo
mov
outsl
sub
int3
hlt
jno
sub
notl
rol
xor
jb
push
scas
loop
cmp
orl
jns
cli
push
std
push
outsl
sub
pushf
and
sbb
push
subb
insl
inc
roll
cmpl
add
inc
jo
test
daa
mov
repnz
mov
push
xor
lock
or
addr16
pop
jl
in
jmp
out
sti
sbb
int3
cwtl
mov
loopne
loop
xor
enter
xchg
int3
mov
cmovs
xchg
xchg
mov
loopne
js
dec
cmp
cs
stc
mov
xor
ja
in
out
inc
xchg
sub
push
dec
popf
sbb
and
mov
cmpsb
je
sub
cmp
xchg
enter
dec
aad
mov
lods
push
ret
mov
icebp
pop
mov
cmp
aad
js
repnz
and
jp
sti
mov
ss
pop
clc
ja
sub
jp
pop
push
lret
inc
mov
ret
aaa
or
mov
fwait
push
inc
fdivl
xor
jae
std
jg
int3
rorl
cmpsb
mov
or
push
and
orb
or
sbb
sahf
inc
mov
addb
xor
inc
sbb
jnp
add
dec
sar
add
popf
scas
test
pop
add
hlt
shrb
xchg
nop
cwtl
jnp
add
jmp
xchg
arpl
jmp
dec
loop
addr16
sbb
or
xchg
decl
adc
or
in
mov
add
cmp
or
int3
or
leave
testb
add
sbb
insb
mov
or
stos
sbb
popl
sub
fidivrs
inc
ret
outsb
push
xorb
xchg
mov
and
loop
test
sub
ret
std
arpl
faddl
lahf
xchg
fcompl
repz
pop
mov
cmp
in
out
mov
xchg
pop
jb
adc
jge
scas
orb
mov
out
cwtl
scas
sbb
pop
sub
sbb
lret
jmp
mov
cmp
rorl
test
cmp
push
mov
push
push
inc
lods
int
pop
leave
test
out
js
loop
pop
xor
je
icebp
fildll
test
inc
add
mov
iret
ja
xchg
mov
gs
aad
scas
dec
and
ja
mov
dec
xor
push
xchg
rorl
mov
es
inc
in
lahf
and
fbstp
lock
sub
add
daa
cld
lds
jecxz
cmp
push
pusha
mov
xchg
lods
inc
lahf
add
sub
fstpt
in
cmp
lds
jmp
xor
xor
inc
push
cs
cmpsl
adc
pop
aas
dec
pop
mov
pop
inc
push
push
lds
test
mov
jae
cmpsl
jge
mov
out
mov
pop
movsl
cwtl
pop
jmp
xor
sub
or
pop
mov
scas
mov
xchg
xchg
cmp
test
cmc
popf
inc
in
or
loopne
add
xchg
mov
andl
insb
call
loope
movl
or
in
sub
sahf
test
add
mov
enter
cltd
add
jnp
out
loop
jl
je
sub
sub
xor
push
in
insl
mov
jge
xchg
lods
inc
push
cld
shl
ret
dec
xchg
push
mov
fistpll
iret
lcall
out
adc
xchg
stos
or
lods
sbb
sub
daa
ss
cli
lods
pop
lret
shrb
imul
mov
int3
in
pop
mov
xchg
or
xchg
out
mov
xchg
out
shl
mov
push
arpl
lcall
mov
and
xor
jne
xorl
add
loope
push
xchg
leave
into
lahf
add
out
or
mov
jmp
insb
ficoms
jo
testb
in
or
ljmp
mov
mov
in
lret
sub
mov
jle
cmp
ds
dec
cmp
push
cmc
ret
fsub
mov
and
je
imul
lret
mov
cmpl
cli
rcrl
loopne
sub
pushf
sahf
and
mov
xlat
dec
xor
out
sti
inc
icebp
imul
sub
lods
xor
sbb
mov
fs
pusha
add
mov
jmp
jo
das
mov
mov
repnz
xor
cwtl
push
cs
xchg
or
test
loope
test
bound
fsubrp
push
mov
or
mov
pushf
pop
dec
sbb
pop
mov
adc
push
push
lods
stc
pushf
repz
add
jle
inc
xacquire
shrb
pop
sub
mov
and
jmp
xchg
inc
adc
xchg
mov
cmp
test
leave
aam
mov
outsl
lcall
dec
fdivr
dec
pop
cli
xor
sbb
inc
or
jno
insb
and
dec
mov
jb
push
outsl
push
adc
adc
xchg
sbb
stos
nop
nop
dec
inc
jp
or
add
xor
sar
dec
ss
dec
js
fwait
in
into
addr16
jg
sbb
outsl
outsb
mov
test
lret
xchg
dec
adc
cld
stos
shlb
pop
cmp
fldl
outsb
push
dec
xchg
and
insb
xor
ss
jle
sbb
mov
enter
mov
dec
push
xchg
call
outsb
ds
je
aad
cld
xor
xchg
xor
mov
adc
xchg
inc
jne
sub
negb
arpl
jge
mov
push
or
or
subl
pop
into
pop
pop
imul
cmp
fbld
xchg
ljmp
ret
cmp
pop
shll
xchg
pop
popa
mov
cmp
gs
fs
mov
dec
pop
cmp
mov
cmpsl
cmp
aad
mov
stos
push
ds
loopne
add
inc
push
test
add
jb
pop
inc
sbb
aad
cli
and
adc
sbb
mov
xor
ss
cmp
cmp
aaa
fldl
or
push
mov
pop
xchg
mov
mov
add
scas
mov
fwait
mov
adc
movsl
in
test
xchg
push
xchg
add
arpl
pop
and
aad
mov
or
iret
jp
xchg
fwait
stos
in
inc
jge
jo
int3
sbb
cmpsl
inc
pop
pop
int
jge
shll
adc
xchg
and
fiadds
clc
jmp
rclb
cmp
fsubs
cmp
stos
int3
add
mov
cmc
in
dec
or
cmp
test
ss
in
dec
mov
and
adc
mov
mov
cmpsb
lahf
cmc
push
and
js
mov
or
paddusw
imul
test
fdivrs
std
adc
cs
dec
or
mov
mov
icebp
arpl
imul
and
push
xchg
xor
add
cmp
hlt
insl
pop
pop
mov
jnp
sbb
int
jbe
xor
js
dec
sbb
hlt
iret
and
sti
push
adc
jge
mov
test
lock
arpl
adc
or
in
dec
cmc
dec
xchg
ja
push
lcall
scas
cld
sti
inc
ficoms
jnp
xchg
mov
daa
mov
les
adc
popf
and
in
pop
sbb
loopne
add
xchg
pop
popf
imul
cwtl
or
jle
sahf
jge
shll
xchg
push
cld
xor
movsb
stc
das
addr16
inc
stos
push
xchg
adc
mov
out
cmp
push
mov
xchg
xchg
push
pop
andb
dec
je
lds
mov
dec
popa
sbb
lahf
pop
sub
in
adc
and
andb
pop
and
mov
andb
lahf
cmp
pushf
sbb
inc
jae,pt
dec
mov
jnp
jbe
in
fwait
pop
loop
test
test
or
lds
or
add
je
ss
outsl
shlb
lock
add
out
mov
lods
sub
lock
pop
dec
lods
mov
jns
xchg
mov
inc
test
xor
ficompl
call
dec
in
cmp
mov
or
jmp
pop
xlat
push
movsl
adc
mov
sub
shll
sub
jo
in
cmc
mov
iret
mov
cmc
xchg
es
xor
movsb
ds
push
inc
push
cmp
jecxz
sbb
adc
int3
rcll
sti
test
or
inc
lods
inc
test
pop
sar
leave
fsubr
cmpb
jecxz
imul
loopne
sub
orl
mov
aad
xor
cmp
pop
mull
jno
test
call
fcomp
cmpsb
sub
mov
cld
rol
mov
push
jae,pt
mov
lods
adc
rorb
adc
in
push
xor
mov
xchg
ja
js
xor
pop
testl
js
out
xchg
pop
lds
pop
repz
lret
sti
loopne
push
adc
ja
fiaddl
mov
ret
pop
arpl
pusha
ds
iret
ds
pusha
xchg
lds
mov
xlat
stos
addr16
lods
jle
lds
pop
sub
sbb
xchg
insb
sub
sbb
test
mov
rol
jo
or
xorb
adc
xor
sub
sbb
ljmp
sbb
cwtl
cmp
test
dec
mov
adc
cmp
mov
mov
mov
sahf
adc
call
cmp
rcrb
in
push
xchg
xchg
mov
jnp
test
push
push
es
xlat
popf
mov
faddp
dec
jb
jbe
xchg
mov
pop
and
or
mov
in
test
notl
leave
or
and
sbb
shlb
int
popf
arpl
pop
mov
sahf
negb
ficompl
pop
ret
testb
lods
les
lds
cmp
fistpl
imulb
xchg
mov
outsl
cmp
pop
pop
mov
push
out
into
or
aam
adc
sti
icebp
aas
ss
inc
pop
addr16
xchg
push
mov
int
loop
leave
push
test
in
or
inc
lret
jmp
fnsave
and
lret
aas
ss
bnd
and
sti
or
mov
notb
push
popf
movsl
stos
mov
or
imul
push
and
repz
out
mov
les
orb
ret
in
in
addb
cmp
jge
and
popa
in
inc
stos
idivl
loope
push
data16
aaa
cmp
test
push
cld
add
add
pop
hlt
push
push
loopne
xchg
outsb
jnp
sbb
call
lret
add
pop
xor
mov
push
cmp
fs
mov
icebp
sub
jl
jmp
lret
imul
inc
clc
xor
dec
xchg
jmp
xchg
les
inc
cwtl
pop
pop
jo
movsb
push
aad
sbb
fcomp
inc
cmp
xlat
sub
dec
sbb
dec
daa
sub
xor
rep
out
inc
ljmp
rsm
mov
push
cmp
sbb
divl
test
cmp
pop
cmp
adc
sbbb
fistpl
loope
mov
adc
pushf
shrb
add
cmp
std
js
pop
arpl
sbb
sub
ds
sbb
into
mov
fiadds
int3
or
adc
push
lret
xor
push
lret
dec
and
jmp
test
rol
aam
dec
jle
lods
out
loopne
repz
test
fstps
sti
and
adc
movl
pop
adc
dec
sub
rcr
ret
and
jae
lret
pop
repz
imul
addr16
dec
mov
mov
in
jl
fsubs
xchg
and
repz
aam
ret
hlt
std
js
outsb
fdivrs
adc
mov
es
adc
xor
popw
arpl
add
inc
sbb
mov
adc
lds
test
jae
inc
push
cmpsb
fistpll
popa
xchg
cli
js
xor
jp
dec
add
cmp
pop
loopne
xchg
push
mov
pop
insl
loopne
stos
pop
andb
scas
incb
mov
push
daa
sahf
lock
mov
xchg
mov
jg
les
vorps
repz
push
pop
xlat
mov
decl
addb
mov
xor
test
mov
mov
mov
pop
lahf
xor
xor
call
mov
or
bound
mov
popf
pushf
pop
sbb
dec
sbb
jbe
mov
push
cltd
sbb
movsl
cs
jnp
rolb
testb
imul
arpl
push
insl
es
push
int
stc
clc
lret
mov
xchg
sti
jns
das
lea
lcall
pop
fwait
inc
fs
pop
pop
mov
into
adc
dec
mulb
out
xorl
in
sub
push
clc
test
cmp
pushf
add
insl
add
dec
test
mov
dec
das
push
sti
testb
jge
shlb
mov
test
mov
or
mov
scas
mov
mov
dec
jge
cmp
in
clc
lock
or
cmpsl
lds
inc
push
popa
xchg
test
cmp
adc
vcvtpd2dq
aam
inc
push
lea
dec
sbb
cmpsl
imul
dec
push
scas
in
and
or
jbe
sbb
lret
jbe
xchg
adc
mov
push
fwait
cmp
xor
repz
insb
ficompl
shlb
test
mov
dec
mov
insl
rclb
lea
xchg
test
jmp
fmull
outsb
daa
insb
std
inc
stos
inc
lret
icebp
jle
sub
lea
jae
in
jnp
aam
pop
out
add
outsl
inc
mov
xor
jmp
out
and
aam
js
dec
icebp
dec
add
es
jns
scas
jns
xor
insb
aaa
and
mov
or
int3
mov
inc
mov
repnz
jle
push
out
shrb
mov
imul
sbb
hlt
test
out
adc
gs
nop
and
ret
and
cmc
pop
mov
mov
xor
js
loope
pop
movsl
ja
dec
fadds
iret
std
out
xlat
cmp
jne
sti
adc
int3
dec
pop
xorb
ret
mov
aas
sub
cmp
mov
das
js
jg
sbb
pop
ss
popf
cmc
push
rorb
scas
dec
sub
test
pop
and
adc
mov
mov
xchg
cmpsb
mov
sbb
xrelease
push
pushf
mov
popa
test
mov
ljmp
in
lds
faddp
andl
push
arpl
push
ds
push
xor
mov
xchg
mov
inc
mov
cmp
adc
xchg
push
and
add
in
mov
push
pushl
jne
ss
lea
pop
xor
pop
jecxz
jbe
adc
mov
stc
jno
hlt
push
aaa
mov
cmpsl
ret
dec
mov
mov
in
lahf
adc
shrb
lds
jb
insb
clc
imul
pop
add
fsubs
outsb
pop
out
sub
xchg
mov
fidivl
int
cmp
cmpsb
lock
imul
mov
or
xor
xchg
and
mov
sub
push
pop
dec
popl
push
fimuls
andb
psrad
cmpsb
push
lds
inc
mov
je
sub
mov
scas
aas
lea
inc
push
pop
fildl
pop
mov
sub
push
push
es
mov
mov
enter
jge
xorb
out
pop
jp
scas
mov
repnz
stos
pop
je
dec
pop
pop
mov
js
in
mov
int3
dec
mov
sub
mov
dec
repnz
out
jp
jg
jns
sbb
cmp
leave
leave
mov
sub
dec
jl
cmp
scas
dec
or
mov
ds
movb
repz
std
adc
das
aad
jo
xor
ja
imul
xor
jo
mov
shlb
js
movsl
insb
push
sub
mov
jecxz
push
push
outsb
mov
xchg
jae
cmp
mov
rorb
cmpsb
jecxz
enter
jnp
xchg
push
xchg
fldenv
insb
push
sub
shlb
xlat
pop
adc
inc
mov
inc
add
mov
cmpsb
movsl
push
shrl
mov
sbb
pop
pusha
lods
fidivs
push
xchg
push
or
cmpsl
sti
pop
das
mov
and
mov
je
in
mov
into
mov
and
out
ret
test
pop
push
xchg
outsb
cmp
push
mov
dec
push
mov
shlb
xor
adc
insl
fwait
cli
mov
cltd
jnp
jns
xlat
in
int
les
scas
pop
lret
les
or
addb
mov
xchg
shll
daa
not
add
es
popa
mov
adc
pop
push
xchg
out
call
outsb
add
inc
inc
ja
lret
fwait
scas
adc
decb
rorl
test
pop
xor
fmull
push
gs
sub
mov
pop
dec
sbb
test
sbb
int3
dec
adc
lahf
pop
fwait
cmpsb
mov
and
push
imull
mov
inc
popl
mov
sbb
sbb
and
mov
scas
jno
mov
xor
pop
jno
and
xchg
outsb
push
jbe
cmp
pop
xchg
pop
into
mov
dec
pop
push
mov
pop
pop
sub
xchg
dec
push
xorl
xchg
xchg
hlt
insb
xor
call
mov
ja
inc
rorb
pop
loopne
pop
and
scas
pushf
mov
push
mov
insb
mov
mov
xchg
mov
mov
fdivr
sbb
movsb
sub
in
cmpsb
mov
xor
xchg
jle
cmpsl
pusha
adc
push
wbinvd
test
and
std
or
adc
stc
xchg
dec
int3
xchg
sub
dec
stos
out
mov
jecxz
sub
jmp
fsubrl
pop
cmp
or
xchg
popa
xor
roll
inc
add
stos
push
stos
popf
mov
aaa
xchg
pushf
push
jmp
add
sub
cmp
pmuludq
lods
cmp
mov
mov
mov
rcrl
out
add
mov
stos
dec
cmpb
dec
push
dec
jp
pusha
sbb
in
jbe
lret
push
movsl
cs
add
imul
cmp
stos
add
insb
imull
jg
jmp
std
es
out
sti
dec
stc
push
test
lods
es
addl
inc
call
rcrb
out
pop
sbb
js
add
lods
test
push
repz
xchg
outsl
ja
loopne
jns
and
or
nop
lcall
jbe
into
aaa
lock
aas
arpl
hlt
lss
or
shlb
cli
lcall
adc
cmpsl
xor
and
scas
cmp
push
pop
mov
cltd
dec
inc
loope
popa
pop
jnp
jbe
in
add
aad
cmpsb
xchg
pushf
jp
dec
repnz
jnp
ss
mov
mov
shl
inc
mov
xchg
fsubrs
sub
repnz
sub
or
inc
adc
mov
push
in
enter
shl
test
out
mov
and
push
les
cmp
ljmp
outsl
dec
mov
loop
je
push
pop
punpckhbw
dec
ret
iret
int
jbe
fstl
add
inc
out
jmp
icebp
daa
mov
pop
xchg
ret
xor
loop
sub
roll
stos
add
push
roll
push
sub
cmp
adc
inc
push
add
sbb
adc
repnz
jbe
xchg
nop
das
dec
popf
lds
jg
imul
les
or
jecxz
and
jae
and
jmp
aam
add
mov
in
repnz
scas
lods
gs
sub
and
hlt
cmp
mov
dec
push
dec
jns
mov
pop
jns
mov
in
push
dec
imul
out
test
ljmp
out
out
jmp
jbe
pop
jg
pop
mov
cmpsl
jae
xor
lcall
sub
pop
mov
xor
pusha
cwtl
pop
mov
push
je
pop
cltd
and
cmp
movsl
fsubl
xor
lock
mov
sahf
pop
and
fistpl
jl
and
pop
cmp
lea
popf
incb
cmp
push
cltd
adc
ret
mov
adc
je
adcb
mov
ds
cld
mov
or
push
push
jle
push
stos
test
push
or
mov
es
clc
ljmp
push
shlb
sti
ficoms
cmp
lret
pop
clc
daa
add
sbb
push
sbb
test
push
rcrl
fidivrs
daa
out
or
popa
out
or
gs
cli
pop
add
adc
adc
pusha
cld
lret
shll
clc
jo
cmpsb
popw
adc
xchg
popa
pushf
sbb
xchg
lods
lds
or
arpl
lahf
outsl
fdivrs
mov
mov
lds
pushf
push
ret
xchg
push
jbe
xor
movsl
mov
test
pop
cmpsl
jg
out
mov
push
jae
iret
add
jecxz
add
dec
out
lock
adc
mov
jge,pn
cmpsl
mov
jl
sbb
xchg
ss
mov
test
xchg
test
negb
push
repz
enter
sbb
xchg
jne
fistl
int3
add
jae
sub
push
cmc
int3
fwait
cmp
lahf
sbb
cmp
and
out
xor
je
clc
mov
nop
dec
adc
lahf
fistpll
fwait
pop
inc
push
xchg
loopne
jno
lods
and
sarl
data16
shl
stc
jmp
jg
adc
inc
arpl
push
je
mov
adc
adc
sarb
cmp
into
adc
ret
ja
mov
sub
and
mov
hlt
rol
test
insb
dec
insl
aad
xchg
mov
lcall
ds
pushf
jg
daa
popf
xchg
xchg
xchg
push
add
or
enter
xor
cmp
add
pop
pop
adc
adc
enter
push
fwait
scas
clc
sbb
mov
lea
rcl
mov
aas
nop
sbb
scas
scas
inc
pop
dec
sarl
jnp
xlat
inc
je
add
inc
pop
movsl
mov
movsl
sub
push
mov
clc
push
sub
jne
test
gs
lcall
jecxz
es
mov
lret
scas
sub
loope
xchg
std
out
test
xor
mov
sbb
add
out
lods
in
xor
mov
xchg
push
sub
movsl
ret
xor
sahf
xchg
jns
call
aas
xor
daa
leave
or
lcall
mov
xchg
in
out
push
mov
dec
imul
std
sbb
cltd
lods
xor
out
leave
push
inc
popf
movsl
aas
mov
aad
fwait
sbb
mov
adcb
push
into
lret
hlt
daa
pop
push
test
inc
or
outsb
dec
push
xchg
pop
lret
lcall
xchg
lea
pop
notl
add
imul
shrb
ja
mov
push
mov
and
mov
fmull
adc
popl
icebp
and
or
jns
adc
mov
cmpsl
andl
sbb
scas
dec
jnp
mov
stos
mov
rol
scas
rol
cmpsb
pusha
push
sub
mov
addr16
fmull
sub
cltd
jns
jns
adc
popf
mov
aad
jb
mov
movsl
insb
add
jl
loope
push
push
and
in
mov
pop
xor
test
cmp
rcrl
int3
in
cmp
xchg
lods
je
or
push
cmp
stos
mov
in
xor
loope
pop
mov
lcall
adc
cli
fxch
out
inc
mov
mov
in
pop
clc
imul
push
imul
stos
je
scas
mov
inc
sub
or
je
outsb
lods
cmp
adc
xor
test
fdivr
test
andb
lods
fucom
mov
mov
mov
sub
test
mov
ja
push
jno
into
mov
pop
pop
leave
jo
into
in
pop
lcall
sbb
pop
roll
sbb
nop
movsl
mov
je
orl
mov
es
xchg
pop
inc
pop
test
negb
sbb
test
mov
add
daa
fistpl
add
push
test
loopne
push
shlb
or
mov
leave
push
sti
pop
cmp
roll
add
std
cmp
insl
rolb
insl
sar
dec
stos
adc
xchg
xor
fmuls
aam
movsl
jno
dec
sbb
into
mov
add
inc
in
xchg
mov
sbb
mov
xor
inc
add
shlb
mov
sbb
mov
ljmp
das
out
in
jmp
pop
jmp
push
ret
mov
es
hlt
mov
ret
jnp
adc
cmp
hlt
shll
popl
int
pop
cmp
std
imul
outsb
dec
dec
pop
popa
sub
adc
lret
jmp
into
cmp
inc
test
clc
and
xor
in
dec
mov
les
iret
adc
mov
push
mov
and
ds
mov
xor
ficomps
lods
insl
loop
cs
std
sbb
mov
sbb
out
adc
push
cmp
pop
js
ret
sub
in
in
sbb
mov
imul
loop
repnz
pop
pop
mov
xor
jle
call
dec
enter
sbb
xorb
dec
out
test
lods
push
repz
lahf
push
call
shrl
mov
pop
scas
mov
dec
inc
push
lcall
loopne
cwtl
adc
pushf
sub
adc
adc
sahf
outsb
daa
gs
cmp
and
pop
addl
sub
push
jne
jle
xor
test
cmc
stos
std
adc
push
mov
jo
mov
inc
jg
mov
flds
xor
pop
mov
dec
pop
mov
sbb
aas
imulb
ljmp
imul
jp
mov
xchg
stos
das
aad
push
adc
ljmp
jnp
test
push
lock
leave
stos
cmp
dec
ss
sub
in
pop
mov
fnsave
and
sbb
sbbl
mov
mov
jnp
sahf
jmp
cmp
outsb
pop
mov
cmpsl
js
cwtl
mov
fidivrl
push
xchg
pusha
adc
arpl
mov
and
sbb
adc
push
or
jge,pn
jb
mov
cmp
sti
dec
scas
bound
or
xchg
push
std
cmp
cmp
notb
aas
xlat
and
orb
daa
inc
out
hlt
leave
adc
rcrl
es
int3
pop
nop
pop
divb
xchg
cmp
xor
stc
and
daa
pop
jns
jno
pop
jbe
es
repnz
jg
ss
mov
push
push
xchg
ja
lahf
adc
scas
aaa
decl
shr
push
sti
cmp
mov
in
push
outsb
sbb
push
inc
sti
repz
fstl
jns
les
mov
ds
mov
push
push
cmc
adc
mov
cmpsl
push
inc
int3
or
inc
outsl
and
imulb
or
loop
mov
jmp
subb
and
mov
add
jmp
repz
inc
loope
js
dec
jb
dec
je
in
and
fwait
dec
push
jge
fcoml
cmp
in
iret
fcompl
imul
sbb
inc
divb
inc
jmp
subl
enter
push
insl
lock
lcall
adc
or
cwtl
testl
mov
andl
sub
pop
dec
or
and
arpl
test
loope
leave
push
bound
ljmp
mov
cmp
jmp
jnp
mov
and
arpl
mov
sbb
mov
adc
and
mov
inc
dec
jmp
mov
test
mov
movsl
pop
or
es
pop
mov
xchg
inc
loope
mov
and
les
push
pop
ja
inc
sub
std
roll
enter
jnp
xlat
pop
or
mov
push
inc
and
xchg
or
rcrl
addl
adc
insw
test
stos
imul
mov
jns
push
xor
les
lods
movsb
fnsave
js
add
int3
insb
pop
imul
lock
add
or
push
cmp
adc
pusha
je
fmull
xlat
xorb
sub
aaa
ss
shrb
dec
sbb
mov
arpl
and
mov
lahf
std
inc
icebp
inc
jle
lods
jnp
jg
lcall
pusha
jb
mov
in
mov
hlt
leave
push
xchg
add
orl
insb
repnz
rorb
rorl
out
enter
sbb
push
jno
jb
fsubrs
add
loop
fxch
add
scas
inc
sbb
push
mov
sub
std
xlat
mov
fsincos
out
sahf
mov
or
mov
les
mov
push
test
adc
add
pop
add
and
movsl
shll
outsl
jle
inc
push
mov
mov
sahf
adc
pop
sub
jae
loope
pop
mov
mov
je
shlb
rcrl
mov
sti
and
lea
adc
icebp
stc
push
es
mov
arpl
mov
lcall
jl
test
xor
inc
repz
clc
ss
fildl
xchg
std
jno
mov
push
xchg
pop
mov
fwait
lock
ds
cmpxchg
popa
mov
inc
jno
dec
sbbb
inc
sbb
jae
fldcw
jp
jnp
leave
and
incb
cmp
insb
insb
inc
lods
daa
xchg
aas
cmpsb
push
movl
test
xor
cmpsl
and
addr16
mov
lret
lea
push
and
cmp
xchg
inc
popa
data16
psrld
pop
sub
push
or
lods
call
rol
sub
xchg
repnz
mov
ds
repz
out
cmp
fsubrl
dec
adc
jns
cli
push
std
add
push
cld
loope
addr16
jae
fwait
clc
xchg
mov
ljmp
rorb
inc
lret
nop
repnz
or
xor
cli
cltd
in
pop
mov
cmpsl
leave
mov
pushf
loopne
fdivr
xor
mov
mov
mov
xlat
lahf
and
jne
outsl
popf
mov
rcr
clc
shl
popf
lods
xor
inc
cmp
xor
xchg
push
xor
ds
mov
jmp
sub
mov
adcl
out
fcoms
pushf
stc
xor
pusha
fidivs
aad
xchg
cmpsb
xlat
xchg
mov
not
jge
ds
aam
xor
push
call
cmp
add
mov
push
dec
dec
dec
mov
out
scas
pop
mov
stos
xchg
in
cmp
outsb
test
fsubrs
cs
pop
jnp
movsl
ljmp
xor
mov
testb
std
cmc
sar
or
idivb
inc
jnp
mov
add
mov
icebp
lcall
or
jnp
jnp
mov
add
mov
shll
fimull
push
js
sub
stos
sahf
mov
xor
ja
push
jae
pop
mov
sub
test
hlt
out
std
iret
andl
fwait
and
dec
arpl
or
or
fwait
es
jp
xor
mov
pop
ret
sbb
pop
cld
push
jmp
mov
pop
mov
flds
dec
roll
pop
add
xor
cmp
dec
popf
arpl
mov
or
ret
or
stc
lret
jmp
mov
stos
aaa
inc
out
sarl
jge
ja
xorb
das
ror
orb
hlt
inc
mov
pop
outsl
lea
cs
jb
cld
xchg
jmp
icebp
js
push
jae
fisubrs
dec
repnz
push
cmp
jmp
cmc
xchg
jl
sub
sbb
adc
push
fstpt
sub
xor
dec
xor
and
mov
dec
xorb
std
je
and
xchg
call
mov
fwait
pusha
js
lds
notb
aas
dec
sarl
cmpl
jle
mov
loop
or
jne
lret
in
cld
nop
inc
out
arpl
fwait
mov
test
push
aaa
pop
push
jl
mov
js
lret
shrl
dec
jmp
pop
aad
jno
xor
imul
icebp
xor
or
adc
out
xchg
jle
push
andb
sbb
cmp
stos
mov
sub
cmc
imul
push
out
fmul
sub
movsl
push
stc
xlat
movsl
pop
sbb
notl
push
test
and
addr16
push
insb
movsb
fists
out
lods
testb
ror
pop
in
das
add
ficoml
lock
push
push
dec
mov
mov
add
push
test
popf
xlat
in
xchg
stc
and
add
mov
je
cmpsb
push
mov
popa
pop
push
imul
incb
mov
hlt
in
les
inc
mov
movsl
test
lods
dec
js
sbb
lods
test
hlt
sahf
dec
popa
pop
inc
scas
inc
stos
mov
gs
pusha
dec
jbe
or
cmp
in
shll
cmp
jmp
je
pop
mov
and
cmp
jnp
enter
lock
repz
aam
shr
pop
pop
jae
jns
mov
fsubs
cmp
mov
into
jb
insb
fwait
lods
fbstp
scas
in
pop
lods
mov
rclb
jge
cmp
and
jle
mov
jle,pt
int
inc
xchg
imul
adc
sbb
cld
fs
test
push
test
xor
adc
pop
daa
pop
repz
and
jge
je
ljmp
sbb
fistpll
mov
shll
jg
mov
lds
dec
or
or
add
jmp
add
mov
ret
lock
xorl
fmuls
mov
mov
fstl
add
xor
es
notl
shlb
add
pop
mov
mov
sub
cmp
jecxz
pushf
lods
fstpl
xor
test
jle
sub
jne
mov
cmp
test
cmp
xchg
dec
and
mov
push
pop
mov
das
loop
fs
test
add
push
enter
mov
lret
xchg
adc
and
xor
xchg
adc
pop
mov
push
push
dec
jg
cmp
mov
daa
push
or
scas
add
push
cmp
aad
or
sbb
aad
xor
scas
and
xlat
stos
and
pop
cltd
hlt
sub
cld
cli
and
sarl
test
mov
adc
js
adc
int
cmpb
imulb
adc
pop
mov
cmp
mov
xchg
pop
dec
ja
and
in
sarl
int3
fmulp
dec
add
fcmovnu
cltd
mov
adc
inc
jecxz
xor
ret
dec
in
sbb
loope
call
std
lret
xchg
imul
xor
sbb
and
xor
loopne
imul
jno
dec
mov
push
xchg
sarb
push
ds
xor
ds
call
fsts
out
ret
mov
scas
setge
mov
es
mov
test
and
cmp
cld
sub
fdivs
jmp
popa
jns
push
in
popa
orl
fnstcw
dec
and
push
adc
roll
and
popa
dec
or
lods
cwtl
cmp
push
decl
shll
testb
push
lods
in
sahf
mov
sub
or
inc
xlat
imul
or
mov
ljmp
sbb
inc
repnz
out
ss
scas
fs
push
fsts
dec
std
mov
or
test
bound
mov
lcall
aas
add
out
cld
sbb
dec
mov
cmp
xchg
fisttps
xchg
cmp
icebp
lret
and
aam
mov
ds
push
repnz
xlat
xor
ja
pop
scas
pop
sbb
adc
mov
xchg
aas
xor
and
add
dec
inc
pop
sbb
iret
mov
es
pop
pop
fdivl
mov
data16
leave
push
jg
cwtl
lock
or
pop
jnp
cmpsl
xchg
cwtl
jae
es
pop
stc
ret
cmp
and
rcrb
aam
icebp
mov
repz
dec
bound
mov
call
pop
mov
fcomip
add
and
lock
mov
sti
adcb
xchg
sbb
pushf
push
pop
adc
inc
repnz
pop
movsb
dec
push
inc
and
or
dec
int3
shlb
pop
jbe
jae
inc
in
sbb
std
mov
lret
sub
adc
xor
in
push
fisubs
incl
jge
xchg
scas
or
xor
sub
push
rorb
and
push
out
stc
out
imul
movsb
add
mov
cld
js
pop
lds
aad
and
lcall
xor
lcall
sub
pushf
xor
push
mov
or
adc
cmp
sbb
aad
mov
mov
push
mov
inc
scas
jecxz
or
cmp
int
out
xor
clc
xchg
gs
and
adc
mov
jl
ss
sub
scas
das
jl
mov
fmuls
aad
pop
xor
test
dec
jmp
ret
xchg
int
test
xchg
cmp
test
out
cmpsb
pushf
call
int
test
sbbl
xchg
xor
pop
shlb
sbb
add
mov
fwait
or
mov
mov
jecxz
lds
ret
pop
imul
dec
jno
mov
inc
test
cmpsl
leave
push
or
or
xlat
add
fcmovnb
sub
pop
movsb
js
sbb
mov
fcmovbe
cmpsl
inc
mov
pop
fistpl
call
dec
cmp
and
sbb
popf
shll
negl
test
nop
mov
lret
jbe
dec
js
xchg
push
inc
gs
idiv
ja
out
das
int3
mov
cmp
pop
sar
adc
movsb
into
les
push
mov
mov
inc
pusha
xchg
jg
jnp
cmp
xor
mov
clc
add
cmpsl
sbb
sahf
cmpsb
dec
sahf
add
gs
adc
int3
jns
cmp
scas
or
sbbl
popa
mov
scas
inc
jmp
test
jne
jo
ds
icebp
rcrb
out
outsb
in
jns
std
push
sbb
xchg
daa
add
lcall
in
addl
movsb
fidivrs
xchg
add
add
mov
mov
mov
jae
mov
mov
int3
jo
packuswb
mov
mov
movsb
bound
inc
sbb
out
sub
cli
or
lds
enter
jo
cmp
inc
outsl
pusha
xchg
lods
arpl
cmp
gs
or
or
dec
and
jnp
fdivl
ljmp
aam
pushf
verw
in
mov
lcall
jmp
imul
faddp
in
subl
sbb
dec
mov
pushf
sub
pop
xchg
pop
sbb
push
call
in
push
jo
aaa
sbb
lea
and
adc
loope
jns
sbb
or
xor
cmp
push
test
cli
mov
and
inc
cmp
ja
dec
pop
add
js
loope
test
jne
mov
mov
pop
jno
cwtl
lods
test
sbb
cltd
cmpsl
mov
loopne
sahf
cmpsb
in
sarb
xor
xrelease
push
insb
stc
push
out
cmp
mov
mov
inc
sub
adc
and
std
and
push
shlb
pop
lcall
lods
mov
popa
jns
bound
sarb
xchg
pop
dec
insl
cmp
fmull
adc
dec
into
xor
pop
pop
clc
fsubrl
or
adc
out
sbb
xlat
push
xchg
inc
mull
movsl
out
es
sahf
ds
sub
xchg
push
repnz
add
sub
lret
mov
fldt
jno
cwtl
cmp
fwait
leave
and
mov
or
aas
shll
cwtl
sbb
jmp
cwtl
sub
les
sub
add
jb
imul
aam
cmp
and
stos
addr16
push
popa
cmp
jmp
clc
sub
jge
imul
dec
mov
ret
arpl
cmc
fnstcw
js
cs
adc
orb
cld
mov
sub
fisubs
cli
xchg
std
pop
cli
jnp
aad
cmp
xchg
jmp
or
aas
das
cmp
xchg
scas
insb
push
popa
mov
rcrb
std
stos
push
scas
pop
or
loope
adc
mov
aaa
stos
inc
aam
arpl
pop
dec
ljmp
xchg
jbe
add
imul
or
std
mov
mov
or
jmp
fwait
and
and
xlat
lret
stos
push
sub
jecxz
mov
lret
mull
pop
loope
testb
pop
and
push
dec
adc
push
in
mov
aad
in
out
or
jl
jb
inc
add
sti
push
jnp
dec
in
fisttpl
adc
popf
arpl
dec
pop
mov
out
lahf
in
addl
inc
addl
stos
dec
rcl
loope
mov
inc
in
das
std
jae
addl
xchg
sbb
clc
push
jb
xchg
cld
sti
jns
and
nop
test
ljmp
mov
mov
push
bswap
cs
fists
add
or
jecxz
xchg
mov
mov
iret
leave
sub
mov
test
jnp
dec
and
mov
mov
jecxz
mov
out
and
fldt
cli
out
jecxz
aam
pop
sbbb
adc
or
add
push
sub
cmp
add
sahf
imul
aad
mov
add
push
vpacksswb
dec
xor
inc
cmp
mov
lds
mov
into
fisubl
movsb
inc
shll
inc
mov
jp
lret
push
push
mov
cltd
jp
mov
nop
pushf
pop
xor
and
push
cwtl
dec
in
sub
ljmp
mov
callw
push
and
xchg
push
or
xor
xchg
into
mov
pop
jns
lret
outsb
outsb
mov
dec
int
scas
insb
sbb
dec
fistpll
or
xor
sub
cs
jp
in
dec
push
add
aam
xchg
imul
jne
insb
jg
icebp
shlb
std
sub
dec
rorl
cmc
int
add
insl
adc
mov
stos
scas
adc
gs
xchg
and
test
xlat
loope
aaa
pop
cwtl
lret
icebp
mov
rcll
xor
dec
push
mov
xchg
bound
pop
sahf
std
inc
fcomps
cli
popa
pop
ret
cmp
inc
scas
jmp
xchg
aam
mov
loopne
lret
lods
outsl
xchg
push
imul
data16
jg
xchg
or
das
aam
mov
inc
cwtl
or
or
add
gs
rolb
add
mov
jo
xchg
jnp
std
push
jb
mov
push
pop
mov
test
sbbl
shll
sub
lock
push
stc
aam
inc
rcrl
cmpsl
sub
enter
inc
mov
aaa
and
jp
mov
pop
mov
xor
aam
shrb
std
into
mov
inc
xor
out
xlat
fidivrs
fisubrl
bndstx
xor
pop
ljmp
pop
add
js
in
or
sub
xor
inc
jmp
fildll
push
rcll
mov
push
lods
pop
sub
pop
cmp
add
sbb
sahf
fwait
in
jb
sub
dec
mov
lods
ja
into
iret
outsb
andb
push
xlat
movsb
pushf
cmc
les
jne
jl
ss
xor
cmp
and
mov
sahf
push
daa
daa
loopne
and
push
add
xchg
dec
mov
jb
orl
xchg
insb
dec
mov
or
add
inc
xchg
mov
insl
call
lea
xchg
mov
mov
lds
stc
fwait
lret
xchg
into
repz
test
sub
fwait
xchg
sbb
adc
imul
push
repnz
mov
add
fcoms
cli
cwtl
pushf
xor
sbb
add
pop
mov
jbe
aam
xchg
and
mov
flds
pop
inc
stos
push
cmp
out
dec
jge
ds
mov
xchg
inc
imul
mov
pop
xchg
push
add
dec
xchg
xor
mov
sbb
out
jb
lahf
pop
lods
mov
ret
jecxz
push
mov
jp
or
ljmp
nop
xor
loope
lret
pusha
mov
cs
fimull
insb
pop
fisubrs
addr16
dec
das
xchg
adc
rcrl
mov
sub
and
movsb
xchg
and
les
subl
int3
test
cwtl
iret
sub
ja
scas
mov
inc
dec
inc
pop
ficompl
aam
cmp
jg
add
test
inc
out
mov
ss
shll
aam
test
jmp
push
ds
mov
out
dec
loopne
push
lods
lock
js
jmp
bound
repz
ret
test
pop
ret
aaa
xchg
shrl
cwtl
xchg
repz
push
adc
cmp
call
pop
call
repz
fimull
jae
lods
popf
inc
push
pop
push
xor
stos
dec
mov
push
addb
xchg
pusha
dec
mov
sahf
xchg
lods
push
or
mov
lret
lods
mov
enter
jbe
xor
xchg
mov
pop
sbb
shlb
jmp
clc
mov
xor
inc
xchg
cmpsl
test
pop
xchg
ja
dec
stos
lret
test
ljmp
mov
cmc
insb
xor
jbe
jle
jo
sbb
jae
cmp
adc
pop
jb
cmpsl
sub
out
jle
imul
jbe
or
shlb
ret
insl
sub
enter
popw
mov
mov
shlb
ret
lods
dec
dec
sub
and
fucomi
int3
orl
pop
sar
jno
cs
mov
insb
or
sub
bound
popa
outsl
push
pop
inc
add
xchg
leave
clc
aad
pushf
cld
push
testl
xor
add
jmp
pop
xchg
repz
mov
xchg
in
test
stc
mov
lahf
inc
mov
lock
pop
xchg
pusha
mov
into
jno
pop
or
or
mov
xchg
out
iret
xorb
scas
mov
lahf
sbb
mov
hlt
rolb
das
adc
lds
or
fcoml
push
psubw
cmp
sbb
pushf
xchg
mov
inc
clc
movsl
dec
xor
adc
psadbw
fs
mov
fwait
push
xor
test
xchg
lret
add
inc
aad
or
loopne
addr16
std
inc
jge
sbb
fisubrs
movsb
cmp
jns
sub
ja
cmp
cmp
mov
rorl
notb
mov
cs
inc
push
notb
out
sub
jno
add
in
pop
adc
push
inc
pop
mov
fst
or
dec
popf
or
pop
pusha
repz
sar
cmp
divb
imul
ljmp
jbe
pop
std
setl
push
mov
into
addl
fidivrl
xor
jmp
add
jno
ljmp
xor
xchg
push
mov
xchg
push
fadds
or
xchg
loope
addr16
bswap
sbb
ss
mov
clc
push
xchg
push
pop
jbe
push
std
imul
ljmp
call
jns
rcrl
into
stos
sti
mov
decb
fstps
jnp
xor
xchg
cltd
ljmp
mov
pop
mov
in
dec
lods
mov
icebp
or
inc
adc
push
mov
fcompl
cmpsl
mov
push
add
into
enter
dec
in
xorl
dec
adc
repz
jb,pt
stos
out
jecxz
cmp
jb
lds
push
jbe
je
push
clc
cmc
daa
adc
pop
int
test
decb
pop
out
test
ret
ror
fsubl
call
scas
scas
xor
jo
mov
aas
fdivs
aaa
arpl
inc
jp
mov
into
push
xchg
inc
test
add
cmp
and
sub
cmp
adc
fdivs
stc
adc
pop
xchg
aad
enter
and
jge
testb
add
not
loop
cwtl
mov
aad
add
push
xor
sbb
xchg
mov
daa
jne
sarb
sub
adcl
mov
jle,pn
cmp
mov
add
xorb
jle
mov
addb
rclb
jge
sub
and
sar
jo
adc
push
test
loope
mov
repnz
arpl
icebp
mov
xor
ljmp
pop
daa
fldenv
outsb
cmp
mov
inc
sbb
xchg
mov
jnp
loop
jmp
flds
pop
icebp
sub
adc
lods
xorl
sbb
adc
lock
add
and
rol
cwtl
cwtl
xor
cmpb
pop
in
xor
outsl
mov
push
fnstcw
lret
mov
push
jle
or
mov
jp
cmp
cmp
xor
mov
push
leave
adc
dec
gs
and
xor
add
bound
mov
pop
fstps
enter
mov
sub
ljmp
dec
jg
adc
lret
jnp
xchg
clc
and
das
mov
scas
nop
jne
push
in
hlt
mov
inc
loop
ret
leave
mov
add
or
xchg
ror
dec
sarb
inc
dec
cmc
decl
mov
mov
jne
mull
loope
push
out
mov
xor
dec
pop
sarl
rorl
mov
shrl
mov
sahf
cmc
loope
fistps
in
ds
sub
das
mov
leave
add
mov
cli
xchg
push
ljmp
mov
xlat
jns
jle
fisubs
mov
or
adc
test
pop
cli
ja
je
loopne
xor
bound
movsb
dec
sbb
aaa
push
xchg
clc
lahf
inc
sub
cs
mov
sbb
xor
test
test
sub
jmp
movb
sub
hlt
loopne
lock
mov
xor
mov
adc
nop
into
hlt
xor
xchg
mov
imul
pop
xchg
dec
dec
and
adc
imul
fdivrs
cmpsb
call
xor
pop
inc
cmp
add
cmp
jb
dec
mov
jae
lock
outsb
jno
incb
sbb
push
std
sub
cli
adc
ret
hlt
add
jle
test
sar
sbb
xchg
insl
dec
jns
pop
sub
adc
stos
jg
std
ljmp
int3
xor
bound
bnd
out
adc
push
test
xchg
push
lret
jp
aam
roll
cmpsl
mov
and
or
or
ret
mov
xchg
stos
out
push
inc
pushf
sub
xor
add
rcr
bound
in
push
aad
dec
pop
fs
mov
stc
std
in
mulb
aam
mov
dec
mov
jle
dec
nop
cmpsb
xchg
rcll
call
and
add
fnstenv
sub
je
dec
mov
std
cs
movsb
sbb
lret
add
mov
mov
cltd
jmp
fwait
daa
mov
jnp
stos
loope
jae
mov
add
push
sub
test
in
ret
jne
fsubrs
or
or
push
rsqrtps
xor
pusha
push
sbb
fsub
pop
test
mov
add
popf
cltd
loopne
mov
lea
loop
sub
roll
ret
push
dec
clc
ss
sbb
lods
jns
pandn
push
in
sbb
sub
add
xor
xor
jb
movsl
push
ljmp
cmp
mov
jl
xchg
mov
lock
mov
cmp
xchg
mov
fwait
sahf
enter
aas
mov
icebp
jae
add
pop
ror
stos
mov
sbbb
cmp
stos
jbe
mov
setae
test
mov
pop
xchg
out
xchg
push
movsb
sbb
mov
fimuls
or
cmpsl
arpl
push
or
imul
mov
fwait
push
mov
subl
xor
enter
pop
jle
jns
adc
jp
add
idivl
in
push
lea
pop
aam
inc
negl
push
lret
leave
mov
es
mov
mov
jae
dec
xchg
lock
es
sbb
test
shlb
mov
pop
mov
inc
fstps
xchg
inc
lahf
in
mov
xor
jl
push
push
mov
cld
mov
lds
adc
cmpsb
xor
dec
xor
adc
xchg
push
cmp
jae
stc
lea
pop
or
cld
mov
shll
cmp
ja
add
icebp
add
xor
cmp
popf
aas
push
ss
out
inc
xchg
popa
push
mov
sub
xorl
lret
jbe
dec
test
cmp
sub
js
xchg
xorl
out
inc
jp
jmp
xchg
fimull
sbb
outsb
jp
pop
mov
mov
push
or
ret
clc
aas
push
xor
mov
xchg
adc
lds
test
jp
imul
push
cmp
aam
xchg
ret
xchg
lahf
in
movsb
mov
fisubl
jge
mov
or
dec
rolb
push
or
dec
pop
pop
cmp
pusha
jg
bnd
push
repnz
inc
idivl
adc
test
jbe
ja
push
xor
dec
jo
pop
pop
and
push
jae
add
lds
push
xchg
in
adc
rcrl
fistpll
xchg
fmuls
sub
add
cwtl
inc
movsl
push
or
into
jle
xchg
les
and
sbb
push
add
pop
in
mov
mov
pop
sub
mov
fdivrl
pop
jmp
cli
test
mov
stc
lods
and
lret
mov
jecxz
notl
sub
mov
sti
int3
pop
xlat
loope
lods
mov
push
inc
jle
stos
cld
insl
cmpsl
xchg
ss
montmul
cmpsb
cmp
add
fdivrl
jo
xor
repnz
push
push
push
or
dec
outsl
sti
icebp
mov
dec
jecxz
and
jl
push
add
cli
scas
xor
pop
adcb
cmpsb
pop
push
prefetch
push
push
push
pop
pop
sub
andb
stos
test
sbb
mov
fs
sbb
xchg
mov
mov
add
cwtl
ss
iret
fistps
xor
jl
cmp
mov
cltd
es
loope
push
jne
or
or
loope
add
outsb
loop
loope
rclb
aad
sub
out
imul
adc
ja
jnp
and
dec
push
je
loope
jb
daa
pop
mov
call
and
xchg
fisttps
pop
mov
popf
je
xchg
push
mov
and
fisttpll
fisubrl
out
mov
cli
fcoml
gs
and
jge
xchg
adc
fcomip
lds
mov
lock
push
push
or
clc
shl
je
xchg
jecxz
cmp
loopne
iret
sub
mov
mov
fmul
aaa
out
or
mov
inc
ficomps
pop
notb
fstpt
shlb
dec
mov
outsl
imul
mov
gs
mov
mov
popa
test
inc
mov
enter
nop
sub
adc
inc
fistpll
fucomip
icebp
inc
cltd
loop
fcoml
int3
adc
inc
mov
sub
and
nop
shlb
fiaddl
scas
stos
inc
icebp
repnz
icebp
js
push
or
xchg
ja
dec
dec
leave
push
cmpsb
xchg
scas
fistpl
sub
test
sub
and
mov
xlat
jb
fs
or
mov
mov
lret
insb
cmp
or
adc
and
inc
adc
push
lds
nop
ss
cmp
sub
mov
stc
xor
add
jge
cs
xlat
in
mov
ret
fistpll
std
mov
fstpl
popf
std
xchg
loopne
test
fs
xor
fmulp
pushf
mov
or
cmpsb
jns
xchg
pop
mov
arpl
movsl
mov
or
xchg
mov
inc
cmp
dec
dec
in
scas
out
mov
int3
aam
cmpsb
sbb
nop
mov
jg
pop
mov
addb
push
jb
and
adc
pop
mov
inc
mov
aam
fsts
lds
loope
lods
test
xchg
push
rcrb
fnstcw
jo
fildll
test
xchg
and
mov
mulb
add
andl
ss
xor
in
sub
cmpsb
jnp
xchg
fcomps
jnp
push
and
mov
xor
xchg
popf
jnp
bound
cld
push
jne
mulb
fs
xchg
test
shl
mov
mov
push
mov
bnd
pusha
lcall
mov
sbb
push
idiv
jo
cmp
cmpsb
negl
leave
jecxz
sub
dec
push
mov
sub
sbb
cmp
mov
pushf
xor
arpl
in
pushf
pop
push
mov
out
pushf
mov
add
mov
filds
popa
mov
dec
stc
mov
daa
lea
aam
or
dec
jne
idivb
ja
lcall
in
not
or
cld
adc
jle
jge
shlb
and
ss
rcr
das
sub
mov
cli
je
cld
xor
insb
push
dec
mov
push
adc
scas
sarb
loope
nop
fsubrl
mov
or
xor
sub
pop
cli
pop
cltd
and
fld
loopne
lret
sub
stos
xchg
pusha
mov
dec
bnd
dec
leave
fidivrs
cmp
push
hlt
push
cwtl
pop
cmp
das
fidivrl
test
gs
or
mov
negl
xchg
sbb
faddp
movsl
and
leave
cmpsb
xor
clc
sub
cmp
mov
cmp
sahf
in
sub
repz
cld
push
sub
push
add
and
decl
cmp
mov
inc
fcmovu
pusha
aad
outsb
rcrb
mov
cmp
mov
dec
ror
jmp
das
mov
xchg
in
faddl
push
jbe
pop
jns
cmpsb
xchg
xchg
pop
sarb
dec
out
xor
cmp
and
mov
jbe
inc
jp
xorl
or
test
sub
pushf
push
repz
or
inc
xlat
ds
out
xchg
mov
lock
push
pushf
rolb
fisubrl
push
xchg
ss
add
mov
test
push
push
testl
or
xor
cmp
rorl
pop
stos
mov
push
int
jae
mov
push
push
sahf
dec
scas
and
and
push
sbb
in
imul
xchg
sbb
in
sbb
pop
add
jb
pop
cwtl
pop
mov
les
xor
mov
inc
lret
push
int
fs
out
pusha
push
push
push
mov
cmpsl
xor
loope
out
add
xchg
int
sub
sbb
popf
adc
add
xor
fsubr
sbb
adc
push
inc
pop
shlb
xchg
xchg
out
add
push
push
push
test
mov
mov
sub
mov
inc
and
lods
mov
insb
je
cmp
call
jae
sti
scas
shl
jns
lock
loop
adc
call
mov
push
fnstenv
sbb
pop
out
jns
push
mov
mov
or
push
sbb
inc
cmpsl
inc
out
rolb
leave
pop
push
push
or
pop
sub
and
aaa
pop
fmull
shll
aaa
fcmovb
xor
scas
add
mov
call
pusha
mov
frstor
rcrb
pop
xchg
cmp
les
mov
ja
push
sbb
jmp
stos
ret
add
repnz
shr
dec
sub
xor
mov
push
jae
adc
lds
outsl
mov
mov
jno
ljmp
push
xor
lods
mov
xor
repz
movlps
cmc
mov
push
stos
lods
pop
mov
and
les
jns
pop
xchg
addl
mov
and
hlt
sbb
or
jl
inc
in
dec
addr16
cmp
in
jl
mov
xor
ja
push
sub
int
into
fidivrl
lods
jnp
mov
mov
out
fisubl
fincstp
jge
imul
inc
pop
xchg
cmpsb
push
inc
mov
push
lea
mov
lock
jae
pop
mov
aad
cmp
int
push
lds
or
rcrb
inc
addr16
fs
push
std
and
dec
lahf
and
mov
test
ljmp
inc
js
jge
inc
inc
outsb
mulb
movsb
push
xor
out
cmc
insb
out
frstor
inc
test
push
pop
push
fcmove
inc
jl
cmpsl
xchg
stc
jb
sub
imul
scas
xor
inc
and
stos
in
mov
test
lret
sub
cli
sbbl
mov
addr16
add
mov
pusha
mov
pop
inc
popf
and
subl
dec
repz
out
cmp
xchg
mov
ds
mov
push
lret
push
clc
pop
jae
js
jne
jg
ljmp
lret
xor
int
mov
and
shr
push
xlat
out
fwait
or
lods
adc
sbb
and
jmp
movsb
jg
jnp
test
jge
mov
jo
cmp
bound
jae
push
mov
int
mov
pop
add
sub
fldl
xor
lods
fs
lock
test
mov
addr16
inc
sarb
in
leave
fildl
pop
jp
or
and
mov
adcb
shlb
mov
jno
ret
mov
and
cwtl
xor
sbb
mov
xchg
and
dec
outsb
outsb
xor
insl
inc
add
popa
or
xlat
mov
fucomp
inc
jge
sbb
xor
mov
cli
add
das
cmc
addr16
pop
add
aad
or
in
pop
ret
ret
nop
mov
xchg
test
xor
test
inc
cmpsl
outsb
push
scas
jnp
hlt
xor
popa
rorb
idivb
mov
loope
xchg
cmp
addl
aam
sti
std
mov
inc
pop
sub
pop
push
imul
xchg
shrb
aas
rclb
and
fsubp
idivl
outsl
mov
in
imul
adc
adc
mov
xchg
loopne
cli
sub
pop
sub
fistpll
inc
ljmp
inc
arpl
xchg
in
pop
jmp
lahf
sub
add
icebp
jae,pn
push
pushf
not
mov
cli
ja
push
adc
out
pop
jb
jg
sar
daa
xor
mov
jp
outsl
cs
lcall
mov
sub
add
push
jne
xor
lods
jg
mov
roll
pop
in
lret
add
push
leave
dec
push
pop
inc
mov
lcall
sub
mov
stc
mov
mov
and
mov
pop
cmp
push
xor
dec
or
xor
imul
sub
mov
shlb
dec
rclb
mov
repnz
push
pop
pop
sbb
jo
ds
test
fnstsw
out
sub
cltd
in
cmp
sbb
addr16
divb
cmp
or
popa
mov
sarl
cwtl
leave
das
test
sti
push
test
fdivr
fildll
mov
cmc
mov
jecxz
push
sbb
push
push
mov
pop
or
add
es
aaa
arpl
mov
inc
aas
push
filds
aaa
mov
mov
add
cwtl
imul
lock
pop
mov
jbe
push
gs
adc
xchg
mov
inc
dec
xor
mov
jae
lret
mov
in
mov
cmp
int3
fdivrs
push
mov
cwtl
mov
and
daa
icebp
out
mov
xchg
jmp
aas
pop
scas
fmuls
push
cmpsl
insb
rolb
ja
inc
imul
call
mov
mov
adcl
jo
fmull
push
ss
stos
xor
lock
aas
fldcw
inc
imul
push
cmp
icebp
xchg
cmpsb
xor
xlat
jo
cmpsb
lcall
dec
pushf
push
adc
ss
hlt
dec
test
add
in
push
mov
fmuls
push
testb
js
mov
das
pop
sbb
in
mov
out
std
sti
fwait
push
nop
push
ja
and
sub
unpckhps
and
lret
rol
ds
test
xchg
daa
mov
iret
popa
or
ja
push
pop
fwait
adc
aad
rcrl
addr16
push
xor
icebp
mov
lods
jle
inc
push
push
sbb
mov
out
sub
mov
dec
rol
add
add
int
mov
mov
test
ret
subl
mov
inc
out
popl
jmp
mov
test
jg
decb
push
test
ret
test
pop
das
mov
cs
inc
xlat
je
dec
cltd
loop
or
cld
inc
loope
push
and
cltd
movsb
mov
aas
loop
sti
cmp
ss
sbb
pop
push
sub
dec
hlt
jp
outsb
adc
push
sbb
das
mov
push
lds
xchg
int
push
mov
add
outsl
jno
dec
sbb
ror
mov
cmp
pop
and
icebp
push
adc
leave
xor
out
mov
xor
fnstsw
nop
ds
adc
scas
clc
testl
loop
adc
adc
jmp
imul
fmuls
push
cmpsb
mov
xor
aam
dec
repnz
sub
mov
outsb
ljmp
sbb
cmc
push
test
std
mov
xor
popl
push
xchg
mov
ljmp
icebp
incl
cmpsb
shlb
leave
outsb
dec
push
sbbl
inc
into
jae
jne
inc
push
push
jmp
pop
sbb
sbb
icebp
imul
dec
xchg
popa
lods
mov
adc
mov
lret
cmp
scas
mov
rclb
cmp
pusha
pop
ljmp
mov
mov
inc
and
cld
xor
sbb
jb
inc
and
testl
scas
pusha
adc
mov
popf
mov
aas
mov
movsb
out
movsl
xchg
jne
jo
rorl
sbb
out
loop
or
xchg
outsb
pop
jo
das
push
inc
pop
test
inc
dec
arpl
lcall
dec
mov
fmulp
pop
outsl
sbbl
orb
repnz
pop
shll
in
sub
sahf
imul
pop
mov
push
xor
push
inc
hlt
xchg
jp
ds
pop
cmp
jno
sub
rorb
cmp
mov
out
aam
scas
iret
xchg
pop
xchg
imul
pushf
mull
or
lock
mov
repnz
mov
in
jnp
mov
push
shrl
jl
jg
inc
arpl
mov
mov
aam
jmp
sbb
popf
xchg
push
das
fsub
enter
scas
push
movsb
mov
ljmp
outsb
jae
test
or
mov
push
push
mov
shll
inc
sbb
dec
call
loope
js
sub
pop
mov
in
scas
jno
jns
push
or
mov
xchg
fcmovbe
and
pop
lock
pop
push
cmpb
xchg
sub
xorl
dec
adc
iret
push
cmp
lock
sbb
or
out
push
push
je
jle
xchg
das
leave
stos
insl
dec
in
or
mov
imul
sahf
out
mov
cmc
jl
jns
ret
jmp
pop
shll
insl
cltd
push
js
loope
jo
jl
xchg
test
loop
xorb
iret
test
cmp
xchg
sbb
dec
fnstenv
jmp
push
jecxz
or
lods
mov
stc
data16
jecxz
mov
rcll
fwait
inc
ds
push
rcrb
out
icebp
inc
sub
iret
leave
in
nop
mov
pop
les
push
loope
push
movsl
push
loop
fbstp
mov
cmp
inc
inc
mov
xchg
push
dec
cld
dec
out
fbld
jbe
inc
ljmp
sbb
pushl
out
xor
mov
dec
int3
shl
addb
adc
rep
inc
jmp
mov
inc
dec
mov
pop
cmp
repnz
or
mov
jmp
pop
test
xchg
push
push
xor
cld
dec
mov
cwtl
scas
adc
or
mov
in
jne
int3
dec
cmc
mov
dec
divb
fsubl
es
sbb
mov
stos
aaa
dec
mov
push
inc
sbb
sbb
xchg
and
aas
inc
outsb
jmp
push
push
cli
sbb
mov
outsb
jno
cmp
pop
jmp
push
ljmp
lahf
cmp
lods
dec
leave
xor
shl
nop
aas
mov
pop
lock
mov
rclb
sub
xor
ret
out
dec
add
rcll
sub
fnsave
nop
popf
aas
push
jge
pop
or
and
js
in
lods
in
mov
js
retw
add
insl
int3
adc
push
iret
int3
mov
pop
stc
inc
mov
jnp
dec
mov
push
push
insb
and
inc
daa
pop
js
inc
repz
mov
jle
inc
aad
xlat
das
xchg
mov
pop
incb
dec
repz
les
testb
xchg
bound
dec
je
outsl
sub
and
inc
adc
mov
pop
dec
push
mov
mov
pop
rep
data16
xchg
inc
rcrb
dec
jle
xor
popf
movsl
cmpl
push
insl
gs
ss
mov
jbe
dec
jmp
leave
and
leave
mov
es
inc
inc
out
xchg
popa
cwtl
paddusb
and
repz
pushf
ljmp
xor
and
mov
out
xchg
mov
push
push
insl
mov
adc
stc
inc
cmc
adc
idiv
gs
das
mov
mov
fldenv
add
into
or
pushw
mov
das
mov
pop
repnz
cwtl
arpl
sbb
inc
ds
dec
cmpsl
sahf
sub
push
lret
repz
push
mov
pop
inc
fisttps
inc
cmc
in
stc
loop
arpl
inc
jg
pop
push
ss
ds
lods
cwtl
pop
mov
dec
sbb
fs
push
pop
or
add
ljmp
inc
mov
pop
mov
fiaddl
es
inc
popf
pop
sub
jnp
push
dec
cmpsl
pop
scas
fldl
push
pop
mov
daa
or
pop
fwait
mov
sbb
mov
insb
xchg
cmpb
ror
jns
lret
pop
pop
nop
lret
jbe
outsb
jmp
out
imul
fisubrs
cmc
fisubs
je
enter
int
aad
insl
or
mov
ror
subl
cmp
cltd
mov
dec
fsubrs
inc
lea
mov
int
jge
in
in
xchg
and
nop
pop
jmp
cwtl
ds
leave
and
xor
shr
inc
sub
sub
dec
sti
outsb
adc
add
out
cmp
test
sarb
daa
and
sbb
mov
cmc
mov
xchg
xchg
adc
imul
orb
cltd
or
xor
pop
add
mov
ficoml
mov
ficomps
mov
sub
mov
and
outsl
jnp
sbbl
add
cmp
faddl
rorb
ficomps
movsb
fwait
or
jp
nop
stos
aas
aaa
dec
rcrb
arpl
mov
mov
mov
add
imul
aad
mov
mov
ja
cmpsl
xchg
jl
dec
cwtl
jno
sub
mov
push
sarl
ljmp
push
pop
xor
or
repz
clc
mov
js
jbe
sbb
xchg
leave
outsl
in
out
out
pop
lret
push
pop
jno
test
data16
sti
mov
test
fs
push
ljmp
jne
push
add
add
cmpsl
add
pop
fcmovb
jns
in
test
dec
push
loop
inc
ret
xchg
pop
or
cwtl
mov
aad
insb
jle
sbb
adc
and
jne
cwtl
jg
fsubs
xchg
inc
lahf
xchg
in
mov
out
jnp
pop
jns
or
dec
ss
mov
jb
test
mov
xchg
jmp
push
xor
cmp
fdivs
je
push
dec
mull
push
push
xchg
jno
outsb
bound
lret
mov
fnstcw
jbe
and
xor
imul
fs
testl
xor
das
jno
push
or
adc
and
jg
pop
or
outsb
and
repnz
dec
push
dec
rorb
push
sbb
cmp
pop
or
jns
mov
add
ss
cld
std
jge
aas
inc
xor
and
popf
pop
repnz
xor
movsl
je
mov
pop
jne
xchg
cmp
inc
sub
sbb
lret
inc
jmp
sub
adc
sbb
into
int
sbb
add
mov
pop
fbstp
lea
cli
cli
ja
mov
push
xchg
push
lret
sahf
push
jnp
ljmp
cld
push
sbb
pop
mov
and
jbe
out
xchg
cld
cmpsl
pop
xchg
mov
rorl
mov
fstpt
stos
cmpsb
notl
lret
pop
movsl
pop
pushf
push
daa
pop
jecxz
outsb
sbb
fs
daa
movb
int
je
bound
dec
jecxz
fdivs
subb
push
mov
mov
push
in
repz
jne
jle
aaa
pop
mul
loopne
xchg
outsl
or
mov
xlat
mov
enter
push
in
out
xchg
arpl
aaa
mov
mov
pop
sub
cmpsl
shrb
lods
pop
imul
das
or
sbb
in
xor
outsb
push
mov
add
popa
rcl
mov
mov
dec
push
movsl
xor
out
mov
mov
push
inc
mov
and
or
outsl
add
ret
pop
pop
orb
sbb
cmp
jnp
push
lock
lea
scas
rolb
cmp
dec
xchg
lods
mov
xor
ficompl
fmuls
lock
iret
mov
xchg
js
outsb
jo
stc
jp
stos
pop
dec
sahf
jns
jp
mov
int
mov
aaa
xchg
fs
js
add
and
or
div
pop
fs
das
sahf
cmp
jbe
cmc
repz
ret
sub
imull
pop
loope
push
jb
cmp
std
call
adc
movsl
je
pop
loop
stos
adc
mov
and
into
in
cwtl
fisttpll
fstps
loop
loope
fdivrs
ja
leave
movsl
cld
xor
les
leave
sbb
repnz
or
or
jl
int3
call
or
cmpsl
jecxz
inc
pop
xchg
sbb
dec
or
dec
cmpsb
xlat
mov
cwtl
fcmovnb
xor
inc
sti
xor
sub
mov
cmp
ret
inc
pop
mov
pop
xchg
and
dec
mov
mov
loopne
adc
int
shlb
adc
jmp
dec
sub
jnp
fistl
loope
add
or
pusha
mov
fisubrs
pop
jne
mov
out
add
das
divl
ljmp
push
fsub
mov
mov
dec
mov
jmp
xchg
jg
pop
nop
cld
mov
add
jmp
data16
insl
call
inc
mov
lods
xchg
mov
out
and
fstl
in
cmc
jecxz
out
pop
insl
cmp
cltd
dec
popa
mov
shl
or
mov
pop
clc
inc
dec
addr16
cmpb
jo
cmpsb
stos
dec
adc
sahf
dec
mov
mov
fldcw
negl
out
or
inc
add
sbb
push
push
in
shrb
shlb
mov
stc
movsb
clc
fbld
inc
mov
repnz
mov
add
fisttpl
leave
stos
jg
rolb
test
jno
pop
cld
lahf
mov
out
jae
push
push
or
in
dec
lret
cwtl
cmp
sbb
imul
sarb
in
inc
fisubl
xor
dec
pop
cld
fld
gs
out
pushf
pop
popf
lock
fsubrl
cmp
dec
je
out
add
jecxz
in
and
mov
into
loop
xchg
jns
mov
sbb
das
adc
call
loop
andl
mov
testb
adc
test
pop
xchg
push
stos
jae
sbb
clc
push
jge
jae
mov
mov
inc
cld
test
xor
scas
scas
sub
rorl
repz
in
xchg
push
pop
filds
or
push
sub
jns
or
inc
pushf
insb
sub
adc
cmpsl
sbb
pinsrw
shrl
scas
xor
out
jbe
js
aad
mov
stos
ficoml
xchg
in
pop
pushf
push
sbb
imulb
aas
lret
pop
sbb
push
mov
xor
lret
lods
aaa
mov
rcll
pop
fs
call
push
mov
mulb
xor
lds
fimull
mov
fxch
xchg
pop
loop
jle
insl
jb
fldcw
jecxz
aam
lret
test
cmpsb
rcr
sbbb
loop
outsl
add
insl
pop
pop
lock
int
das
aam
cmp
push
push
bound
scas
lcall
push
je
lea
lock
cmp
or
mov
mov
push
dec
sti
pop
arpl
les
jnp,pt
dec
sbb
xchg
cmpl
test
addr16
adc
mov
xchg
cmpsb
cmp
mov
bound
mov
add
xor
mov
xor
cmc
es
fcom
adc
icebp
push
rcrl
xor
fildl
shlb
fadds
inc
and
fwait
inc
out
test
inc
pop
mov
dec
jl
adc
sbb
icebp
jle
push
in
outsl
and
mov
xor
mov
rcll
fs
add
repnz
ja
jle
jo
ret
add
inc
xor
jl
es
lret
adc
xor
adc
jbe
clc
test
int
sub
adc
fisttpl
mov
xchg
push
xlat
pop
cld
out
lods
in
sub
adc
inc
pushf
dec
fistpl
jecxz
mov
ret
cmpl
jns
adc
mov
fs
stos
push
mov
jl
lock
test
jmp
outsb
out
repnz
std
jnp
mov
scas
xchg
jo
insl
dec
popf
push
fisttps
shl
es
xchg
dec
es
mov
or
fdivrp
pop
scas
rclb
test
hlt
xsave
mov
mov
push
dec
mov
mov
mov
call
mov
mov
inc
cmp
cs
pop
or
xchg
sub
sarb
cwtl
icebp
mov
push
repz
jae
inc
repnz
mov
iret
push
xor
adc
lds
rorl
stos
jae
sub
rolb
adc
add
pushf
cltd
std
test
jecxz
fimull
mov
movsl
mov
loopne
mov
xchg
pop
xlat
hlt
inc
mov
xor
dec
add
sub
sbb
mov
insl
enter
js
jl
add
add
sbb
push
in
sub
dec
adc
lcall
mov
pusha
ret
xchg
cmp
scas
les
jmp
push
cltd
mov
jmp
ss
sbb
xchg
nop
into
leave
pushf
movsb
arpl
mov
mov
jecxz
push
add
mov
int3
jbe
or
insb
mov
sbb
xor
stos
movsb
xchg
test
push
test
insl
or
movsb
pop
addr16
frstor
dec
pushf
cs
in
dec
mov
fists
xchg
fimull
sbb
notl
bound
sahf
inc
sbb
mov
jo
arpl
jo
sti
leave
arpl
mov
gs
pushf
ja
pop
pop
pop
dec
sbb
mov
adc
leave
shr
ds
out
push
or
mov
mov
push
addb
push
inc
push
add
loope
scas
sti
test
mov
push
frstor
and
ficoms
cmpsl
or
gs
shll
sbb
cli
inc
jb
lahf
sbb
aaa
fdivs
and
sti
pop
push
repnz
lods
insb
loopne
fwait
push
int
mov
xor
add
fs
loop
in
into
xchg
dec
mov
loop
and
xchg
push
sub
repz
xchg
xor
pop
enter
iret
cs
scas
clc
nop
add
cmp
push
lock
test
mov
sarb
push
ds
pop
inc
adc
test
shlb
daa
ljmp
jle
mov
pushf
sbb
repz
jg
push
shr
mov
inc
inc
jo
rcll
rclb
les
aaa
mov
mov
scas
mov
into
dec
xchg
outsl
adc
jne
push
xor
in
cmpsl
mov
ror
mov
xchg
pop
and
lret
sub
inc
mov
bound
ss
and
js
xchg
sub
cltd
or
xor
loope
and
push
es
pop
push
pop
sub
and
xor
jae
js
lret
push
aas
nop
test
xor
cs
cli
stos
je
inc
mov
and
mov
pop
sub
cmp
xlat
mov
inc
and
dec
insl
push
sub
add
sub
and
leave
jmp
xor
jp
das
and
add
push
pop
jne
addr16
lahf
out
imul
or
adc
xchg
js
ror
or
push
lret
inc
mov
or
das
inc
out
outsb
je
cmpsl
fwait
push
aas
jno
addr16
add
fdivs
rclb
jmp
xor
jecxz
repnz
sub
push
in
push
frstor
and
adcb
lret
insb
inc
mov
push
scas
movl
mov
mov
or
in
add
or
dec
test
ret
test
stc
inc
xorb
push
out
addr16
cmp
nop
jae
inc
or
mov
loop
xchg
sbb
aaa
lret
lret
adc
mov
adc
and
jnp
imull
fdivs
in
jns
lea
insl
stos
pop
jecxz
loope
cmpb
inc
push
add
pop
jge
jmp
pop
fs
outsl
push
jp
cmp
xchg
sbb
rcrb
imul
or
mov
scas
iret
sub
insl
inc
add
in
and
mov
and
out
add
sbb
cwtl
inc
adcb
aad
scas
push
or
jo
mov
push
cmp
push
add
cmp
mov
iret
ljmp
push
jge
test
pop
rcl
outsl
frstor
jns
lret
push
mov
jecxz
les
repnz
shll
aad
test
and
xor
adc
ret
int3
mov
mov
pop
repnz
xchg
jns
test
push
sbb
xchg
push
or
xchg
out
stos
cmp
xor
cmpb
sub
repnz
and
xchg
cltd
outsl
pop
movsl
mov
fists
xlat
out
dec
mov
adc
pop
lahf
sub
sbb
call
lcall
popa
xor
ret
cmpsl
push
add
adc
adc
ljmp
or
enter
or
add
mov
int
and
inc
mov
pop
fisttpl
and
fldln2
pop
fisttpll
and
mov
xor
paddusw
mov
clc
ja
sbb
xor
xchg
inc
sbb
scas
popf
loop
sbb
jge
jo
faddl
mov
push
xor
xor
push
mov
int3
jns
add
mov
xchg
sbb
repnz
jl
xor
gs
xchg
cmp
shrb
fdivl
mov
pop
scas
mov
mov
in
inc
mov
sub
icebp
es
test
fdivl
je
add
add
cmp
and
frstor
add
or
sub
xchg
test
out
dec
scas
sti
push
fiaddl
inc
clc
push
das
mov
or
insl
pop
inc
push
shrl
paddd
ds
push
pop
lahf
mov
popf
xchg
aam
sbb
out
cmp
out
lods
sbb
cmp
cmp
jne,pt
sbb
adc
lds
call
inc
xchg
cmpsb
jne
sub
cmp
mov
sbb
in
mov
rcl
inc
aam
mov
sub
mov
movsb
xor
or
out
xor
fwait
xor
mov
repnz
inc
and
push
incb
sub
dec
shrd
mov
inc
je
stos
mov
push
add
lret
and
insl
mov
xchg
sub
mov
add
push
push
out
in
xor
mov
sahf
sbb
jne
jg
repnz
hlt
rolb
lcall
inc
add
sub
and
lods
int
ljmp
add
mov
gs
xchg
lods
jg
inc
movb
mov
and
mov
bound
xor
lds
pop
ds
pop
inc
inc
mov
jnp
inc
insl
pop
out
in
mov
and
int
inc
inc
or
or
adc
shrb
stc
icebp
or
dec
rorl
ss
cld
subl
xor
jge
add
cli
mov
lods
sub
jbe
push
lret
inc
cmpsl
xchg
fistpll
repnz
mov
xchg
mov
mov
and
decl
loop
jb
test
call
adc
js
mov
push
rcr
jle
hlt
xchg
jg
sub
call
jnp
js
or
cmp
cmp
cmp
ret
push
mov
mov
das
insb
out
push
push
adc
pop
shlb
jl
cmp
inc
rcll
sbb
sbb
cmp
dec
outsb
dec
ret
insl
pushf
imul
jbe
in
or
dec
inc
jo
fistpll
mov
xchg
sbb
into
jecxz
mov
and
cmpsb
jmp
add
xchg
call
shrl
or
jns
shlb
scas
adc
js
sti
call
dec
fsubrs
rcr
pop
push
aad
cltd
push
sub
aad
and
add
call
iret
stc
fisttpl
or
fwait
rorl
test
in
push
xor
mov
hlt
mov
jp
in
sbb
pop
notb
adc
adc
das
test
pop
flds
ret
xorl
cmpsl
inc
and
add
jb
push
stos
and
cmpsb
pushf
ja
cmp
das
sub
lea
and
push
outsb
into
and
das
mov
fisubs
or
fcmovb
dec
in
push
fistpll
sbb
sub
loope
flds
fcoms
or
insl
sbb
daa
mov
mov
pop
vmovshdup
mov
jb
call
cmc
leave
jae
xor
push
js
jg
divb
xchg
mov
push
cs
pushf
xor
mov
lret
or
imul
fidivl
scas
jnp
pop
cmp
bound
mov
xor
in
add
mov
data16
aaa
mov
scas
adc
insb
rol
push
lods
sub
push
xor
push
movsl
jo
xchg
add
jmp
dec
xchg
cltd
inc
jno
cmp
call
es
icebp
ljmp
cmp
ret
jl
loop
pusha
jmp
into
test
xlat
cmp
ret
xchg
xorl
sbb
mov
stc
cmp
jle
pop
sahf
nop
dec
js
cld
or
mov
cmc
int3
ret
sbb
sbb
rcl
or
mov
push
and
popf
mov
clc
cmp
and
adc
arpl
pop
mov
push
mov
cmp
add
iret
mov
call
xchg
cmp
and
fisttpl
xchg
repnz
mov
xlat
roll
loopne
stos
fwait
mov
pop
sub
pop
sub
hlt
test
sub
xchg
fisubrs
das
mov
imul
fdivl
data16
mov
loopne
push
xcrypt-cbc
cmpsl
xchg
pop
push
fdivr
pop
push
mov
mov
in
jo
inc
push
add
loope
out
fldl
cmp
mov
fucomp
push
mov
stos
pop
push
int3
sbb
test
in
roll
aaa
jl
fistpl
stos
gs
mov
pop
jmp
xchg
popl
push
popf
adc
gs
mov
xor
pushf
fdivrs
lock
out
push
fmull
inc
inc
add
mov
inc
lcall
cli
mov
ljmp
or
test
sub
cmp
pop
or
inc
push
dec
sub
cmp
cmp
in
jmp
cmp
mov
and
mov
pushl
jbe
cmpsl
mov
jno
add
dec
in
cmpsl
inc
nop
push
lock
insl
test
addr16
mov
jecxz
cld
psrad
sarl
dec
push
stos
sub
mov
xchg
jae
addl
mov
adc
cld
xchg
push
test
xor
push
cltd
lods
popa
mov
push
pop
xor
jecxz
mov
adc
ret
pop
pop
sbb
and
jb
add
mov
nop
out
mov
arpl
jge
push
out
jmp
fcmovbe
clc
in
addl
inc
xor
push
jge
std
adc
xchg
xor
lahf
xor
jnp
lds
int3
cmc
lcall
inc
jb
popf
push
outsb
push
aam
dec
and
icebp
repnz
pop
mov
xchg
repz
outsl
or
dec
jge
fildl
or
aad
repnz
gs
jns
movsb
add
or
cld
outsb
sbb
in
mov
add
mov
inc
stc
int
lcall
and
cmc
rcrb
sub
pop
cltd
jge
les
test
xor
pushw
pusha
push
stc
aas
ljmp
jmp
aas
ret
lock
out
call
inc
test
das
mov
fnstenv
inc
pop
in
push
push
mov
mov
adc
xchg
inc
loope
aad
mov
jnp
adc
mov
outsb
push
imul
mov
sbb
inc
call
scas
aas
js
ret
movsl
sbb
mov
in
cli
mov
nop
in
push
test
in
add
and
cmp
into
mov
add
xchg
leave
and
pop
push
jmp
mov
mov
iret
ds
loopne
mov
xor
cltd
jge
aaa
mov
sti
xor
testl
or
dec
lcall
ret
je
cmpl
mov
xor
jecxz
lret
sub
mov
in
rol
sahf
dec
mov
xor
out
dec
push
lcall
xlat
or
cmp
addb
sbb
fcmovb
push
add
stc
inc
cltd
dec
dec
shll
sub
xlat
mov
cmc
stos
add
inc
repz
cmp
pushf
push
ret
pop
mov
push
ja
lea
sahf
outsb
mov
out
sarb
in
xchg
lahf
aam
mov
push
xchg
inc
cmp
mov
xchg
sbb
or
pop
add
pusha
popf
ds
push
or
xor
pop
outsb
testl
and
cmp
imul
enter
lret
mov
out
loope
xor
adc
sub
mov
xor
jae
xchg
outsl
cmc
sub
and
mov
sub
xor
pop
cwtl
push
repnz
cltd
jl
sbb
sets
enter
int
xchg
mov
xor
ret
test
test
add
ja
stc
mov
daa
and
popa
dec
pop
push
imull
aas
adc
js
mov
xchg
jo
inc
sbb
jmp
ret
stos
lea
mov
aam
xchg
aad
daa
push
ljmp
sub
leave
repnz
lock
mov
and
mov
das
loop
mov
int
push
mov
testb
rcll
mov
hlt
enter
or
dec
outsl
ret
adc
cmp
ret
jo
sbb
adc
xor
call
push
xor
dec
add
or
push
pop
mov
jp
iretw
orl
xchg
push
fcomps
pop
fcompl
lods
add
jno
stos
sub
cmp
fs
aaa
xor
jno
pop
insl
outsl
sbb
and
test
mov
lods
aas
xchg
inc
push
mov
mov
inc
ss
sbb
xchg
and
or
shlb
cmp
dec
stos
pop
push
mov
and
mov
in
shlb
mov
imull
fidivs
cmp
pop
xlat
cmp
inc
in
xorb
incl
lods
jnp
push
sbb
fwait
icebp
lds
push
lret
imul
xchg
out
mov
cmpsb
orl
lds
pop
cld
push
dec
mov
cmc
cli
or
dec
popa
je
xchg
inc
cld
mov
out
add
jne
sbb
aad
sub
and
adc
push
in
and
or
mov
vpmacssww
pop
icebp
adc
insl
push
or
add
mov
mov
popf
loopne
js
cmc
js
mov
mov
and
xor
in
xor
push
lret
adc
lods
mov
mull
jnp
push
mov
push
pushf
inc
in
xchg
dec
and
sub
mov
add
out
sub
cmp
in
push
mov
cmc
out
dec
mov
dec
fdivs
pop
test
xor
xor
pusha
sub
jae
dec
push
test
or
lea
loope
in
inc
dec
cmp
in
pusha
clc
insl
mov
or
or
lock
jle
test
and
adc
daa
xchg
cwtl
or
incl
sbb
push
lods
cmpsl
inc
push
pop
leave
hlt
nop
outsl
pop
mov
sbb
test
sahf
xchg
jge
icebp
adc
mov
jnp
iret
add
mov
mov
xchg
addr16
dec
dec
scas
out
insl
je
mov
mov
jns
xor
jbe
imul
push
cmpsb
shrb
cli
movsl
push
sti
jne
pop
inc
push
xor
mov
mov
xor
mov
add
aas
jmp
iret
mov
pop
jae
popf
test
stos
or
popf
aam
push
mov
jle
popf
lcall
jno
cmpsl
xchg
xchg
push
cld
daa
xchg
jbe
adc
and
sbb
fisubrl
inc
shrb
fildl
insb
scas
xor
arpl
cli
incb
add
insl
mov
jl
fldcw
or
out
cmp
push
jae
sub
inc
daa
inc
in
dec
ljmp
xor
outsl
pop
add
daa
in
pop
cmp
out
pop
xchg
mov
popf
loopne
add
leave
mov
and
or
enter
mov
cs
pop
cwtl
pop
iret
iret
lock
inc
fidivrl
mov
xor
nop
pusha
mov
sub
adc
sbb
pop
sub
push
pusha
dec
jp
outsb
decl
repz
mov
inc
pop
addr16
mov
xchg
pop
and
into
ror
xchg
xchg
inc
mov
adc
mov
fmull
outsb
push
shlb
xor
dec
and
xor
and
shrb
cmp
stos
add
fwait
ja
iret
jno
addr16
movsl
test
and
repz
std
xchg
popf
ds
cmpsb
lds
sbb
jb
aaa
sub
cmp
mov
mov
mov
lcall
fs
cmp
sbb
cmp
jns
ds
sub
arpl
in
and
jbe
inc
xchg
mov
mov
push
faddl
jge
bound
pop
imul
push
int3
scas
xchg
sbb
or
insb
int
xlat
fidivrs
mov
div
xor
sub
cmpsb
pop
shl
xchg
inc
mov
sbb
xor
sbb
outsl
lahf
mov
or
pushl
mov
cs
dec
or
sbb
dec
or
insl
adc
pshufw
mov
cli
pop
sub
sub
rcll
outsb
adc
mov
shr
cwtl
pushf
addr16
pop
sub
jecxz
mov
or
pop
cltd
sbb
das
sbb
xchg
mov
add
inc
rcr
mov
mov
inc
imulb
jnp
cmp
cltd
lret
jp
test
inc
xchg
sub
push
mov
mov
aad
ja
pushf
nop
ljmp
repz
sahf
cmp
push
cmp
daa
mov
push
enter
fisubl
test
gs
lds
jnp
ljmp
fwait
scas
cltd
mov
jmp
leave
mov
mov
test
cld
pop
int
mov
cmpsb
pop
xchg
inc
stc
int3
xor
sbb
lret
out
adc
fcom
dec
mov
xchg
cmc
push
icebp
lahf
fwait
or
mov
xor
xlat
mov
stc
xor
and
fisttpl
pop
xchg
scas
xchg
ret
adc
nop
gs
cmp
mov
jl
adc
push
repnz
ret
jno
mov
rorl
jge
xchg
iret
xor
and
popf
nop
popf
xor
cld
sti
repnz
push
sbb
jae
push
shrl
inc
mov
push
jae
add
ljmp
cmp
sbb
sbb
inc
sub
repnz
mov
hlt
popa
mov
or
xchg
and
rcrl
jne
fs
cli
jg
out
add
xor
mov
and
das
aad
lods
jo
mov
xor
push
or
and
int
sti
cmpsb
adc
outsl
cmp
xchg
push
push
in
xor
inc
xlat
jecxz
ret
push
cmp
jg
jno
jmp
mov
frstor
adc
shl
sbb
adc
push
adc
and
mov
movsl
inc
mov
xchg
cmp
insl
and
mov
mov
fists
iret
xor
imul
dec
cmp
lods
or
mov
addr16
or
adcb
xor
cltd
inc
mov
sarb
cltd
sahf
cmp
or
xor
daa
pop
sub
popa
cli
push
nop
pop
in
popf
lahf
addr16
jl
js
pop
inc
mov
mov
lret
pop
test
dec
in
push
shl
sub
sysret
into
aas
test
cltd
jb
shlb
xor
adc
xorb
and
stc
mov
out
mov
jns
pop
sbb
lea
ss
imul
addr16
xchg
xchg
into
cmp
lds
loopne
cmc
mov
cltd
loop
repnz
and
add
repnz
add
mov
mov
pop
xchg
pusha
dec
shl
cmp
add
mov
fs
dec
lods
xchg
adc
sbb
cmp
xchg
je
stos
mov
in
jle
outsb
bound
imul
ret
stc
pop
rclb
cmpsb
shl
and
nop
test
push
and
mov
push
stc
jl
push
lock
addr16
ss
and
dec
xchg
mov
clc
cmpsb
jo
add
sub
push
jo
sbb
aas
iret
int3
mov
cmp
add
or
xchg
mov
rcrl
xchg
jno
or
mov
mov
movsb
rol
or
dec
xor
out
mov
xor
push
mov
push
mov
paddd
mov
aam
adc
adc
dec
nop
ret
cmp
shll
xchg
xchg
repnz
fisubs
mov
adc
xchg
in
push
ret
xchg
sbb
push
mov
scas
mov
aaa
ret
je
pop
pop
and
ret
outsb
inc
xor
add
add
mov
xchg
adc
mov
aaa
cmp
add
or
pop
mov
adc
sarb
iret
xchg
aas
dec
test
push
jae
add
loope
fwait
cltd
mov
lea
insb
mov
add
fildl
loope
add
in
and
jge
mov
jae
jmp
leave
mov
xchg
xor
xchg
pusha
dec
pop
loop
push
jbe
sbb
push
adc
lcall
sbb
dec
insl
xlat
sub
data16
repz
xchg
jecxz
lea
pop
and
insl
andb
adc
pop
jae
mov
or
push
mov
test
aas
notb
xchg
xorl
cmovge
icebp
fisttpl
sbb
sbb
jecxz
fdivrs
xor
xchg
inc
xor
push
stos
pop
cmp
js
push
dec
adc
in
jmp
add
xchg
lods
fldt
roll
sub
loopne
jecxz
pusha
rclb
aam
and
mov
aad
pop
out
pop
movsb
jae
fiadds
js
aaa
inc
js
pop
fwait
shl
jmp
and
mov
enter
leave
cld
jmp
or
in
jg
mov
dec
cmpsl
js
ret
scas
xchg
jae
mov
mov
in
add
xor
imul
loopne
enter
clc
mov
push
xor
dec
bound
mov
lret
sub
int3
mov
mov
iret
jb
les
inc
addr16
pop
loopne
fwait
es
add
inc
xor
jne
mov
punpcklwd
mov
xchg
mov
subb
movsb
adc
push
cmc
xor
lea
clc
frstor
mov
je
rclb
ret
je
xor
test
pop
pushf
outsb
sub
cli
loop
xor
push
mov
sub
dec
mov
dec
sti
xor
cli
sbb
sub
adc
daa
sub
mov
repnz
int
lods
push
or
inc
push
pop
xchg
fsubl
imul
ret
pop
mov
sahf
out
enter
sbb
inc
adc
add
mov
push
dec
add
ja
sub
and
int3
inc
lret
or
stc
xchg
scas
les
cmpsb
dec
mov
push
movsl
adc
out
iret
aas
pop
sbb
sbb
dec
mov
hlt
pop
mov
mov
icebp
test
stc
in
sbb
push
cs
mov
jns
loop
cmp
hlt
fiadds
or
lds
inc
divb
aas
ror
loopne
in
sbb
pushf
and
stos
mov
cmp
arpl
ja
imul
scas
mov
jmp
pop
xlat
sahf
sbb
ljmp
pop
sub
and
lahf
ss
lcall
clc
scas
inc
pop
mov
sbb
xchg
pushf
dec
sbb
incb
mov
mov
daa
push
andb
xor
mov
addr16
or
jo
rorb
jle
fadd
push
xlat
jl
repz
shr
cmp
xor
inc
fcoml
mov
inc
pop
cltd
repz
pop
data16
jae
xlat
xchg
int
and
int3
and
std
cli
jge
fildl
pop
push
xchg
pop
addb
inc
mov
dec
lods
fimuls
repnz
jge
adc
icebp
std
add
xchg
push
push
sub
nop
movsb
mov
dec
and
cs
test
ds
sbbl
mov
jbe
lret
push
mov
mov
repnz
fsts
gs
lret
add
faddl
adc
sub
stos
test
arpl
ret
jne
sbb
mov
iret
cmp
pop
test
loopne
pop
and
mov
data16
jle
in
mov
mov
dec
iret
es
int
or
in
mov
fwait
call
dec
iret
xchg
repnz
sub
repz
jno
or
cmp
pop
and
pop
add
les
mov
dec
arpl
add
jnp
jge
jecxz
lret
jmp
repnz
sbb
inc
cmp
mov
jae
mov
jle
push
pop
xchg
cwtl
pop
jmp
gs
and
jns
shrl
mov
add
cmp
clc
push
test
lds
decl
add
mov
xor
dec
inc
popf
adc
and
sub
call
sbb
add
imul
mov
fbld
sbb
fisubrl
xor
movsb
adc
lcall
push
mov
xlat
mov
mov
ljmp
fs
push
xchg
fs
sub
in
mov
adc
pushf
icebp
jnp
push
std
dec
das
lock
or
cmpsl
sarl
mov
jge
icebp
test
sbb
lods
sub
fiadds
out
out
icebp
jno
mov
mov
xchg
int
xchg
cld
out
sbb
fcmovnu
andb
or
insb
push
dec
jo
and
imul
push
xor
xor
sahf
loopne
or
jne
scas
lea
iret
insl
scas
in
enter
subl
movsb
mov
jmp
icebp
xor
test
inc
les
out
pop
int3
ret
pop
leave
stc
dec
mov
adc
pop
sti
test
jo
rol
ljmp
std
js
jl
cmpsb
and
roll
cmp
outsl
popf
cmpsl
fcompl
mov
sti
xchg
fucompp
rcll
inc
imul
inc
es
mov
data16
push
sub
sub
and
xchg
out
pop
cli
inc
sub
inc
je
push
mov
cli
pop
in
cld
adc
data16
jg
cwtd
call
jge
jb
mov
mov
out
inc
jmp
push
cld
test
outsb
inc
icebp
addr16
push
ror
scas
popa
jo
mov
rol
popa
call
out
sub
lds
adc
mov
cwtl
sbb
ficoms
inc
roll
mov
lock
pusha
adc
insl
xor
inc
test
mov
cmp
xor
pop
call
jbe
pop
test
mov
lret
sub
loope
sub
sti
cmp
jb
jne
pop
daa
add
push
loope
rcrb
data16
daa
call
loope
xor
push
mov
mov
daa
jne
scas
popa
in
fisubrl
or
or
hlt
sbb
sub
movaps
cltd
mov
jmp
push
cmp
and
mov
and
bound
push
stc
mov
cmp
lahf
lret
dec
fdivrs
pop
add
push
out
adc
xlat
shrl
aad
jns
jmp
daa
js
movb
popa
dec
loop
sub
lcall
leave
jbe
xor
int
pop
mov
xor
fsubs
out
loope
in
sti
inc
mov
aad
clc
pusha
fnstsw
int3
into
adc
stc
push
jb
jne
ret
adc
pushw
pop
outsl
stos
ret
mov
pop
mov
repz
adc
mov
mov
push
push
lea
sti
mov
xor
mov
out
fcmovb
cmp
stos
mov
or
jl
ds
loop
fnstsw
cmp
test
loope
pop
insb
xchg
mov
mov
js
lret
out
mov
and
inc
hlt
dec
inc
stos
gs
xor
loop
jle
mov
pop
hlt
dec
pop
dec
mov
xchg
xchg
insb
ret
std
test
mov
push
jnp
imul
les
ds
and
lds
mov
xor
sbb
leave
hlt
gs
push
lock
fbstp
adcl
fwait
jge
insl
ret
outsb
mov
idivl
xchg
pop
stos
or
inc
push
in
mov
xchg
pushf
repz
dec
or
xor
sub
xchg
push
and
and
xor
adc
les
add
mov
roll
jno
or
sub
and
sbb
adc
fiadds
jle
cmp
inc
int
sub
loop
xlat
jns
loopnew
xor
aad
icebp
push
mov
add
jns
inc
in
dec
call
adc
dec
push
adc
cs
inc
mov
aad
sbb
gs
cwtl
int3
ds
push
dec
mov
dec
jbe
outsb
repnz
iret
sarl
dec
or
scas
mov
lahf
mov
out
dec
lods
push
dec
outsb
rcll
sub
and
scas
mov
lret
dec
jnp
dec
nop
and
loop
mov
enter
inc
aad
cmp
roll
insl
movsb
or
mov
bound
lods
sahf
rcrb
inc
clc
rep
xchg
test
push
js
xor
orl
dec
pusha
pop
push
push
leave
addl
iret
call
push
dec
cli
int
xor
and
mov
jp
mov
fstl
fwait
cmp
dec
jb
push
xchg
fwait
mov
rol
aas
fsts
js
loopne
push
mov
sbb
scas
cmpsb
stos
jg
cmp
and
ss
ret
jmp
fisttps
test
lock
popa
adc
push
sarl
sar
mov
xor
sub
lock
ljmp
mov
pop
je
jno
or
sbb
jl
addr16
mov
push
sbb
imul
sub
negb
fwait
nop
out
leave
xchg
add
lcall
jne
sub
pop
sbb
xor
mov
xchg
xorb
fnstenv
cwtl
add
dec
xchg
ret
inc
sbb
stos
in
mov
lds
loope
shrb
jno
mov
xchg
aas
ret
lret
mov
sahf
and
movsl
in
adc
aam
cld
mov
negb
mov
add
adc
nop
scas
je
pop
frstor
scas
add
movsb
icebp
xor
cmpl
je
mov
mov
mov
sbb
ret
sti
xlat
dec
cmp
mov
inc
stc
ljmp
leave
clc
mov
cmpl
xchg
test
dec
aad
sbb
sbb
loope
push
cmc
fdivrl
xchg
fadd
inc
xor
sbb
push
xor
pop
mov
push
pop
mov
lcall
and
mov
out
ss
mov
or
cmpsl
and
push
adc
sbb
cmp
loopne
ficompl
loopne
dec
mov
add
stc
outsb
pushf
roll
sbb
and
sbbl
idivl
aas
jle
or
mov
xchg
mov
hlt
pop
ret
loop
js
insb
shlb
scas
inc
xchg
xor
sub
and
mov
jae
or
cmpsl
or
idiv
dec
sti
test
aad
push
push
pop
sub
enter
jb
push
jge
mov
adc
jg
bound
mov
inc
inc
fidivs
js
jg
lods
add
or
incb
xchg
xor
stos
bound
pop
xchg
dec
aaa
xlat
aas
dec
add
movsl
pop
int
outsb
push
cmpsb
jmp
jp
fwait
mov
jne
fsubl
pop
jecxz
pushf
cmpsl
pushf
cli
aaa
mov
fcmove
fidivrs
int
mov
mov
xor
in
add
sub
dec
sub
jmp
adcl
sbb
inc
test
testb
rol
inc
sub
sub
lds
mov
mov
mov
fdivr
adc
fsubl
sub
add
mov
es
cmpsb
and
add
dec
repz
pusha
or
sahf
sub
push
movsb
jne
pop
or
rcrb
sub
scas
nop
sbb
aaa
adc
stc
fnstenv
push
in
test
sbb
jae
mov
or
and
insb
dec
ds
pop
stos
in
push
shlb
or
or
xor
pop
aad
imul
jmp
mov
iret
push
inc
fldl
add
pushf
stc
add
push
aad
xor
add
incb
xor
stos
test
stos
subb
push
mov
cwtl
cmc
outsb
movsb
add
movsl
fs
data16
mov
aam
sub
lret
out
test
cmp
push
xor
xchg
jo
jb
cmp
jnp
sbb
xor
stos
fadds
insb
mov
aas
add
stos
pop
outsb
adc
sbb
scas
fistl
push
dec
stos
dec
fidivs
inc
call
xchg
or
in
add
xor
cmp
mov
add
cmp
mov
pop
aad
cmp
cltd
xchg
dec
filds
bound
cmp
mov
sub
sub
shrb
sbb
inc
jg
adc
add
jmp
jl
mov
xchg
pop
mov
mov
cwtl
daa
addr16
outsl
inc
iret
test
in
rol
ret
cmpsl
mov
push
mov
dec
movsb
push
in
inc
subl
dec
fistps
inc
add
test
shlb
pop
lret
dec
cmp
outsb
cmp
push
jb
mov
in
addr16
andb
xchg
out
fmuls
cs
push
ud2
jp
sub
jecxz
idiv
mov
movsb
jns
or
fsqrt
xchg
fdivr
daa
xchg
adc
xchg
push
icebp
cld
and
cmp
nop
mov
sbb
pop
daa
jge
pop
push
pop
push
jnp
dec
pop
fstps
fists
adc
pop
popa
insl
push
jg
sti
or
or
pop
lock
pop
aam
fdivrp
adc
in
std
pop
push
cmp
lahf
or
cmp
enter
dec
stc
movsb
jae
pop
and
stc
jle
test
adc
enter
pop
add
outsl
call
mov
cmpsb
fldl2e
push
adc
dec
lahf
loop
icebp
enter
testl
xor
inc
mov
xchg
and
movsb
push
inc
lcall
out
xchg
xor
cmp
fistl
js
xchg
dec
push
mov
or
sub
lcall
jns
stc
mov
jo
rcrb
shll
inc
or
cmp
iret
ss
sbb
add
out
adc
mov
aam
sub
aad
mov
stos
cmpsl
xchg
push
lods
xchg
mov
loop
inc
clc
cmp
jne
or
cltd
lahf
xchg
xchg
mov
and
aam
pop
push
jno
repz
andl
addr16
mov
add
fiadds
jnp
jmp
mov
das
jnp
out
ret
mov
jmp
or
push
fnstcw
fdivl
cmpsl
ret
mov
popa
subl
pusha
inc
xor
rcr
repnz
lods
cmp
je
pop
lods
or
int3
xor
adc
jg
lock
outsl
arpl
cmp
pop
pshufw
add
pop
icebp
add
icebp
push
ja
in
and
and
pop
push
js
mov
jg
lods
out
inc
push
xlat
aad
hlt
sub
pop
jb
mov
arpl
dec
popf
jns
cmpsl
jae
cmc
pushf
out
lret
jmp
lcall
in
ds
dec
pushf
jae
add
add
push
jb
leave
lock
inc
adc
aad
dec
stos
in
lcall
inc
ficoml
xor
pop
daa
out
xchg
push
scas
sti
sbb
dec
imul
xor
jecxz
jns
fnstsw
insb
and
out
xor
or
xor
add
outsl
mov
subl
lods
aaa
ret
dec
inc
int3
lea
loopne
adc
ja
loop
mov
adc
adc
xchg
lods
fstps
rorl
lock
test
insl
lahf
int3
in
inc
addr16
movb
movsl
dec
ss
sar
stos
in
aad
js
ljmp
pop
mov
outsl
sub
jmp
repz
inc
jmp
in
mov
or
mov
aaa
lock
std
les
mov
and
add
mov
xchg
clc
lahf
sub
jge
mov
je
sahf
sbb
pushf
cmpsb
dec
test
cmp
call
lea
inc
adc
daa
pop
push
cli
push
stos
push
std
xchg
aad
mov
mov
fisttps
iret
call
xchg
out
jae
in
leave
mov
lock
add
dec
mov
mov
mov
pop
pop
nop
es
jecxz
or
pop
int3
insb
ficoms
pop
je
mov
cld
ja
sbb
cwtl
leave
jg
sub
jecxz
or
or
jle
xorl
xchg
mov
aas
je
dec
test
negl
add
and
xor
pushf
cmc
or
dec
leave
test
sub
flds
cmpb
jne
in
cmp
sub
xchg
leave
adc
push
dec
les
loope
rol
jno
xchg
xorb
fisttpll
xchg
sub
sbb
mov
test
mov
aam
ret
aad
or
pop
imull
jnp
jno
sub
test
and
cmc
adc
inc
into
das
imul
sub
into
push
rcrl
cmpsb
xor
mov
inc
popf
mov
mov
jmp
pushf
cmp
mov
dec
push
insl
cmp
jnp
cwtl
adc
in
push
and
lock
mov
push
mov
mov
divb
jmp
sbb
inc
ja
push
lahf
ja
movsb
xchg
repnz
xchg
cmp
repz
gs
xchg
push
pop
push
pop
je
sahf
mov
jmp
jo
aas
negb
std
fimuls
outsb
into
insb
fistps
mov
jbe
adc
or
stos
xchg
mov
pop
out
cld
testb
xchg
je
pushf
cmp
or
jno
ret
pushf
adc
ljmp
mov
dec
ja
or
inc
mov
out
mov
orb
inc
fisttps
inc
cs
stc
mov
dec
cmp
mov
mov
cmp
adc
mov
inc
or
and
xor
repz
xor
mov
cmc
mull
cs
adc
incb
int3
popf
adc
xor
xchg
daa
xchg
icebp
pop
jns
sbb
clc
sub
cmp
mov
mov
imull
hlt
stc
cmp
and
rolb
stos
or
ret
daa
aad
ljmp
sahf
lds
cli
cmp
imul
cmc
gs
shll
sbb
aam
xchg
mov
cltd
outsl
shlb
cmp
jp
gs
mov
mov
aas
and
jle
in
jo
sti
lock
in
inc
cmp
and
ja
xchg
adc
test
push
movsl
pusha
or
fistpll
sub
fucomip
adc
pop
xchg
cli
clc
ss
jl
xor
inc
sbb
cmpsl
pop
inc
mov
sub
roll
mov
sub
pop
arpl
addr16
cmp
sti
xchg
mov
pusha
inc
push
push
cmpsl
xorb
and
mov
in
fcom
sub
movsl
push
repz
cmpsb
push
dec
arpl
mov
or
nop
fsubs
icebp
mov
call
add
in
dec
sub
stos
or
cmp
push
fstp
or
inc
cmpsb
icebp
test
sahf
imull
and
push
sub
cmpl
xor
shll
push
push
sbb
sub
push
pop
mov
pop
push
stos
mov
repnz
mov
loop
fists
aad
fsubp
sbb
push
aas
jp
sbb
xchg
cs
rorb
xchg
push
adc
push
mov
mov
or
test
test
mov
mov
divb
sbb
xchg
subb
add
adcb
cmp
cmpb
es
xlat
or
repnz
sarl
imul
mov
fdiv
and
ds
lock
into
xor
sbb
adc
mov
jb
inc
mov
lds
imul
pusha
or
push
fnstsw
adc
sbb
aaa
mov
dec
ss
ja
adc
das
aas
and
adcb
dec
adc
mov
test
push
jbe
mov
push
inc
push
lahf
adc
out
mov
outsl
mov
pop
lods
mov
imul
movsl
in
arpl
and
out
iret
ret
lds
mov
mov
leave
dec
xor
cmp
push
inc
pop
leave
adc
ds
pop
vunpckhps
xchg
repnz
add
pop
mov
pop
decl
inc
loopne
enter
add
mov
push
add
out
ss
cwtl
mov
popl
jge
repnz
js
jb
sub
into
xor
rolb
inc
dec
shrb
call
fsubs
cltd
cs
xor
popf
dec
cmp
dec
and
adc
or
cmp
xchg
jbe
cmpsl
out
test
push
mov
jge
jno
mov
test
out
rolb
sbb
xchg
adc
inc
repz
stc
pop
andb
in
xchg
mov
mov
in
sahf
sbb
clc
scas
mov
mov
or
fcmovu
mov
and
es
test
dec
pop
push
lcall
jne
fcom
fcoml
shl
aam
jno
aas
push
jmp
xor
xlat
int3
mov
cmp
pop
aas
loopne
xor
inc
push
and
fnstenv
xchg
leave
adc
and
or
flds
pop
leave
insl
cmc
out
les
cs
mov
daa
or
adc
add
xor
cwtl
shl
sbb
cmp
push
jg
arpl
fldt
pop
arpl
and
push
mov
ljmp
daa
les
push
mov
or
push
fldenv
test
stos
add
push
xchg
jno
lret
jp
sbb
xchg
in
fwait
and
pop
decl
outsl
xor
enter
and
or
sub
push
insl
adc
cmp
dec
fimuls
cmpsb
pop
mov
inc
jl
jo
inc
jbe
dec
inc
cmpsl
sub
daa
ret
push
pop
pop
test
cmpsb
or
jle
pop
stos
sarl
sbb
loopne
cmp
cs
push
arpl
add
testl
faddp
rcll
xchg
dec
fisttpll
sub
sbb
dec
fists
mov
jp
pop
push
pop
scas
inc
insl
xchg
ds
clc
lahf
dec
add
shlb
xor
sub
push
rcr
rcr
ret
arpl
jge
xor
pop
xchg
sahf
ss
stos
out
arpl
loope
in
cmpsb
cmp
xor
ret
adc
fdivrl
ja
adc
push
loop
sbb
mov
mov
ja
in
inc
push
add
pop
call
xor
inc
shlb
push
add
inc
icebp
sbb
add
jno
jns
aad
jecxz
pop
jns
sti
aad
in
sub
mov
mov
dec
mov
push
dec
stos
jmp
jmp
add
pop
lcall
dec
loope
aam
sbb
mov
sub
loope
sarl
cmpsb
pushf
arpl
es
movsl
sub
and
pop
or
in
xchg
push
in
gs
jnp
nop
stos
and
in
sub
dec
fsub
sbb
cmpsl
jle
repz
aaa
dec
lahf
sbb
add
cmc
ljmp
jns
lret
xchg
cld
push
dec
out
imul
mov
mov
fwait
testl
mov
pusha
or
xchg
cmp
jge
sub
dec
out
push
test
or
sub
out
cs
or
pop
imul
test
sub
lcall
sub
add
add
int3
psllq
leave
mov
in
clc
push
or
jecxz
mov
in
dec
jl
in
aad
inc
orb
daa
icebp
in
push
iret
xchg
push
adc
ss
testl
lahf
inc
repnz
xor
add
inc
dec
test
fisttpl
out
xlat
fcoms
lahf
subl
daa
dec
inc
test
dec
and
sbb
and
xchg
and
sti
jg
pushf
pop
or
aad
stos
adc
inc
insb
xchg
jp
jmp
cmp
test
out
mov
push
sbb
adc
dec
push
lods
rorb
dec
lahf
jg
js
shl
inc
dec
mov
adc
mov
aaa
in
loope
jge
xor
das
movsb
inc
repnz
mov
xor
aaa
sub
pop
in
out
jp
rcrl
je
pusha
pop
addb
inc
imul
lock
stc
sub
and
push
ja
aas
or
push
sub
lock
or
xchg
pop
std
nop
inc
or
dec
pop
inc
or
cs
decb
mov
jl
iret
pop
add
fimuls
cmp
lods
or
shl
mov
pop
mov
cmp
xor
imul
jae
add
enter
push
adc
push
mov
xorb
mov
lahf
lock
lods
mov
cmp
cmpsl
jg
xor
dec
frstor
push
mov
lea
push
inc
inc
mov
push
aaa
cmp
push
stos
lcall
push
ret
jne
jb
leave
sbb
sub
js
std
fs
cmp
and
xlat
jg
xor
stc
inc
dec
sbb
popa
push
sub
in
mov
loope
sbb
dec
mov
aad
mov
movsl
xchg
fildl
lea
sub
loope
jbe
int
shrb
mov
jecxz
out
loop
add
iret
in
xor
rcl
jae
iret
and
add
out
orl
cwtl
cli
jo
push
enter
bound
add
pop
push
pop
std
nop
lret
loopne
stos
xchg
popa
aas
xor
sbb
mov
adc
fidivrl
cmpsb
shl
cmp
movsl
xor
jge
xchg
leave
test
clc
add
jmp
lret
out
stos
lods
lock
push
pop
ror
jge
popf
dec
inc
jl
pop
call
fmull
inc
cld
jae
adc
sbb
stos
in
cs
out
bound
fbstp
out
push
add
add
cmp
inc
jo
aas
movsb
cmpb
repz
loop
or
shrl
add
lods
jg
sahf
push
cld
out
fsubrs
lcall
push
sbb
fcompl
sbb
jno
int
mov
xor
sbb
sub
or
enter
or
orb
xor
or
mov
mov
scas
int3
mov
inc
addl
jge
arpl
imul
outsb
mov
xor
jmp
int3
jae
sbb
dec
iret
sbb
dec
leave
push
cs
cmc
mov
fidivrl
mov
xlat
pop
jmp
fs
in
stos
or
ret
das
inc
mov
popf
scas
iret
xchg
jecxz
fcmovnu
mov
out
and
lods
and
adcl
in
call
inc
xor
movsb
jecxz
adc
enter
jle
pushw
test
mov
mov
push
pop
ss
add
fwait
aam
imul
jnp
jb
push
push
mov
bound
cmp
pop
js
cmc
fwait
ret
loope
rcll
outsl
pop
push
out
aas
hlt
imul
pop
popa
gs
sub
hlt
mov
sub
rclb
push
test
xor
addr16
inc
pop
cmpb
int3
mov
mov
mov
fnstcw
jns
inc
int3
out
jg
insb
cs
mov
add
outsb
sub
sbb
sbb
es
xor
xchg
or
addb
sbb
push
xor
xchg
and
scas
inc
mov
inc
pop
pop
in
movsl
cmp
xchg
call
mov
sahf
adc
and
lods
pop
icebp
aas
sub
sub
stos
mov
lret
push
dec
repz
dec
cmp
loope
ss
cmp
xor
inc
pop
dec
ret
lds
pop
pushf
lods
xor
dec
push
pop
inc
or
inc
stos
lcall
es
ja
pop
xchg
sti
xchg
lea
or
and
push
outsb
jb
sub
or
adc
jmp
push
add
stos
sbb
bound
xchg
cwtl
movsb
clc
sub
lods
mov
or
xor
dec
stos
outsb
das
push
adc
arpl
xchg
cmpsb
add
loop
outsb
pusha
shlb
xchg
adc
pop
ds
xchg
jge
pop
and
jle
pop
push
es
jecxz
es
fs
xor
lcall
inc
push
sbb
sub
pop
inc
or
fwait
sbb
mov
add
sub
dec
test
xor
push
add
sbb
pop
mov
mov
push
dec
cmpsb
nop
lods
mov
jno
sbb
add
popa
push
and
push
mov
sub
cmc
jmp
ljmp
push
fwait
je
jne
cs
out
sub
pop
popa
mov
jb
dec
out
scas
mov
fisttpll
jp
mov
repnz
xor
filds
jecxz
sub
lret
add
int3
add
in
add
neg
mov
mov
lds
and
mov
lahf
scas
insb
xor
fstps
or
fistl
es
and
jecxz
xor
jo
cmp
mov
clc
or
rorb
int
mov
mov
insl
pop
adc
imul
lret
jb
dec
cmp
sbb
cmp
scas
pop
aas
pop
inc
out
jbe
mov
fmul
dec
inc
mov
mov
aas
lods
cmp
jnp
dec
or
push
fdivl
mov
xchg
xor
rorb
mov
imul
into
or
pop
daa
pop
add
clc
and
fsubr
int
dec
push
lret
jno
ficomps
cmp
lods
aaa
pop
xor
or
xor
fs
shll
imul
pop
movsb
pop
int3
inc
sub
pop
add
and
fcomi
dec
inc
stos
adc
pop
mov
add
mov
and
ds
out
dec
sub
push
jbe
pop
push
lds
in
test
loope
fadd
mov
movsb
xor
pop
pop
jmp
in
mov
scas
cltd
xor
sbb
xchg
adc
xchg
dec
std
repz
imul
ret
mov
or
or
movsb
push
cmp
jle
xor
xadd
lea
xchg
pop
cmp
iret
lock
div
int
push
inc
cmp
cmc
imul
popa
fisubrl
dec
pop
cwtl
outsb
fstpt
icebp
das
push
aam
mov
jno
fdivl
ds
out
jnp
cmpl
mov
fwait
push
xchg
pop
cmpsb
xor
xor
sub
clc
dec
sarl
and
xor
int
pop
in
sub
lock
enter
fsubl
outsb
xor
jp
adcb
dec
mov
stos
mov
xor
xorl
lods
insb
push
mov
mov
addl
mov
mov
push
cmc
stos
jecxz
ret
add
mov
sbb
and
test
enter
pushf
mov
cli
cli
bound
pop
call
jle
jmp
mov
aaa
mov
aas
cltd
xchg
sahf
repnz
xchg
popf
push
xchg
mov
outsb
cmpsb
mov
jl
mov
js
cmp
or
popa
xchg
sbbl
cmpsb
nop
hlt
cmp
enter
rcll
sahf
outsl
ret
pop
sahf
pop
lahf
cld
fidivrl
dec
rclb
clc
lret
bnd
and
mov
shlb
imul
jo
cmp
shl
sbb
ja
je
ljmp
test
bound
mov
xchg
sbb
mov
inc
push
sbb
in
inc
sbb
and
push
push
aam
mov
mov
je
pop
push
sub
adc
cld
sub
push
jg
or
add
sarl
jb
inc
jae
push
cld
adc
cmp
mov
mov
lds
lds
pop
mov
inc
sbb
rolb
pop
push
add
pop
xchg
sahf
xlat
inc
xor
mov
jmp
or
pop
ret
scas
mov
lea
jo
jecxz
inc
mov
scas
push
adc
push
popa
sub
scas
mov
cmc
test
cld
rorb
lret
pop
sub
xor
mov
and
add
and
push
out
mov
popa
out
dec
mov
ja
repnz
iret
out
jnp
enter
push
sbb
push
leave
cltd
mov
gs
daa
mov
hlt
add
push
xchg
add
push
hlt
jae
cmp
es
jbe
or
into
jnp
fs
repz
aam
jns
stos
sub
pop
repnz
push
daa
xchg
jle
cmc
out
add
push
imul
adc
add
cmp
fdivl
les
cmp
inc
sub
inc
pop
fimuls
cs
lock
repnz
and
push
test
gs
mul
xchg
jecxz
add
push
mov
sbbl
jbe
popa
ret
add
jle
outsl
push
and
jg
mov
ficomps
add
test
mov
cltd
loop
jmp
and
xchg
fmuls
or
xor
dec
mov
or
je
xchg
popaw
inc
pusha
adc
fxch
out
inc
add
jl
lea
inc
std
push
jmp
inc
xchg
sbb
lock
and
or
jno
dec
and
cs
sbb
movsl
scas
ds
dec
ja
xchg
sub
test
pop
aaa
je
andb
mov
xor
and
mov
jg
pop
int3
xor
data16
cmp
adc
push
lods
cs
movsl
pop
cmp
adc
sub
in
hlt
xlat
xchg
in
push
and
mov
dec
inc
imul
pop
std
push
test
jae
dec
imul
inc
pushf
push
adc
ljmp
sahf
pop
xlat
jnp
sbb
sub
xchg
pop
movsl
scas
push
mov
shll
orb
dec
mov
std
dec
add
dec
jecxz
pop
push
aas
dec
inc
insl
test
imul
pop
and
ret
in
je
and
test
iret
add
bound
push
mov
and
test
int3
dec
outsb
pop
cmp
cwtl
lds
jae
adc
sarb
ret
pop
cmpsb
call
cmpsb
lea
pusha
inc
shll
pop
inc
cmp
scas
dec
mov
add
aaa
enter
dec
cmpb
subb
sbb
in
mov
lds
xor
ret
sahf
loop
dec
mov
mov
jp
int
dec
aad
in
inc
out
out
sar
repz
mov
push
push
in
jg
pop
xchg
scas
sbb
mov
mov
aaa
xchg
and
pop
xchg
int3
lret
jmp
int
jp
in
pop
rorb
jp
adc
push
out
test
testb
push
test
outsl
mov
faddl
int3
outsb
or
pop
inc
les
push
pop
adc
scas
pop
mov
sub
jo
or
fistps
dec
jl
movsl
fmuls
sub
loop
inc
rcr
and
cli
fdivrp
cmpsb
cltd
jmp
aas
aam
imul
test
pop
iret
dec
popf
mov
popa
xchg
mov
dec
adc
mov
pop
dec
loopne
pop
push
cmp
ljmp
into
push
xchg
shll
ljmp
das
cmp
out
fstpt
stc
push
jb
stos
dec
push
mov
fstps
add
xlat
in
fsub
popf
test
mov
mov
sbb
mov
and
mov
lcall
mov
add
pop
mov
push
movsb
mov
or
add
push
xchg
sbb
mull
jmp
subb
lahf
inc
mov
imul
daa
inc
mov
pop
mov
push
test
popa
jge,pt
and
test
xor
lods
test
sbb
add
nop
cltd
push
cmc
xchg
mov
mov
cmpsl
sub
cmc
outsl
mov
loopne
add
mov
fisttpl
jl
hlt
adc
aam
out
outsb
sub
push
pop
mov
jbe
add
mov
jle
mov
bound
popa
shr
cmc
ret
in
gs
aam
mov
pop
adcb
xchg
lret
cmp
fstp
fwait
cwtl
iret
mulb
lods
mov
push
cmpl
mov
xorl
dec
mov
sub
xor
fs
xor
ljmp
jmp
mov
lahf
adc
test
iret
ds
xchg
out
jb
out
mov
gs
cmp
cmpl
pop
lds
ljmp
ja
add
adc
imull
stos
scas
xchg
or
pop
gs
mov
mov
ljmp
fdivrs
xchg
mov
fs
js
fnstenv
jge
cmp
rcll
lods
decl
mov
mov
jle
inc
pop
pop
mov
push
jp
xchg
sahf
or
outsb
fdivl
div
lods
in
cmpsl
mov
cmp
mov
or
inc
mov
sahf
out
mov
dec
out
aad
xchg
das
leave
xor
test
dec
in
fwait
jmp
pop
pop
inc
xchg
jle
add
out
mov
and
jno
mov
insb
mov
sbbb
outsl
lret
add
mov
jp
lods
rcrb
sbb
and
dec
jo
imul
icebp
test
idivl
add
dec
ds
mov
lcall
xchg
out
scas
or
out
sahf
adc
push
popa
stc
pop
and
clc
mov
shll
hlt
int3
icebp
jp
mov
adc
test
inc
cwtl
stos
push
and
loope
pop
push
ss
leave
dec
ds
cmp
fcmovbe
out
jne
testb
scas
mov
arpl
fistl
pop
cmp
fiadds
pop
mov
jb
lcall
pop
aad
rolb
int
inc
push
mov
cmp
inc
cmpsb
outsb
inc
imul
repnz
lahf
gs
das
dec
inc
insb
paddsw
mov
lcall
dec
push
push
fildll
mov
add
inc
ret
push
into
repz
cmpsl
fldcw
jns
push
mov
xchg
or
loope
fistpl
fs
imul
out
pop
pop
arpl
inc
jbe
pop
jns
mov
xchg
inc
push
push
scas
mov
stc
xor
inc
xchg
xchg
addr16
out
dec
xchg
xor
inc
std
mov
or
adc
mov
mov
sahf
pop
push
push
mov
sbbb
sbb
ss
push
pop
aas
int
fisttps
outsl
fistpl
jb
arpl
mov
ret
sbb
mov
mov
cwtl
pop
mov
test
mov
mov
movsl
adc
sbb
push
scas
sub
sti
ret
jae
sub
les
out
or
jns
mov
mov
push
and
ja
int
out
lea
inc
push
xor
fadd
hlt
imul
push
sub
add
out
fadds
rol
mov
xchg
mov
inc
imul
mov
cmpl
mov
or
popa
mov
add
push
jb
and
orl
dec
inc
test
mov
push
stc
fmulp
decl
arpl
in
and
fcoms
jg
cmp
out
sar
mov
sbb
mov
jg
pop
test
jb
fbld
jp
ja
outsb
cmpsb
cmp
scas
imull
jno
jbe
shrl
fildl
out
xlat
and
out
lret
mov
and
push
push
sub
cs
mov
jbe
sbb
push
int3
fwait
mov
cmp
mov
mov
and
rolb
sub
call
mov
fidivrs
sub
mov
cmp
xchg
dec
ficomps
mov
repnz
and
aad
adc
fisttpll
sub
std
jecxz
lods
test
push
mov
add
pop
orb
js
int3
lahf
jo
push
xor
and
cmpsl
scas
fildll
rcrl
lods
inc
mov
jge
std
enter
or
into
out
cmp
es
pop
mov
ja
cld
or
mov
cli
pop
lea
xchg
inc
repnz
adc
push
mov
mov
pop
or
lret
jnp
xchg
scas
jno
mov
jae
sub
xor
sub
mov
sub
push
movsl
inc
push
pop
stos
xchg
roll
push
imul
lock
jo
sbb
adc
xchg
mov
arpl
movsl
jg
mov
movsb
cmp
ret
gs
dec
test
push
jno
pop
arpl
add
cmp
pop
pop
xchg
xchg
lods
adc
add
sbb
push
cmpsl
xor
pusha
inc
mov
jns
jno
xchg
inc
fimuls
mov
imul
cmp
enter
add
in
and
cmp
rcrl
dec
push
mov
test
xor
lods
sub
js
inc
xor
or
inc
jno
pop
lods
cmp
mov
adc
aas
movsb
or
jmp
jecxz
ss
or
stos
xchg
mov
lea
xlat
dec
subl
int
push
pusha
inc
sbb
in
push
pop
outsl
and
adc
fbld
scas
imul
adc
and
daa
add
and
test
in
addr16
pop
jg
jle
fbstp
mov
fwait
int
testb
mov
jb
dec
xchg
faddp
jmp
jp
aam
inc
push
push
or
jecxz
mov
inc
sbb
jg
push
std
stos
imul
arpl
mov
ja
outsl
and
insl
cwtl
xchg
cmp
push
cmp
je
loop
aas
test
xchg
outsl
call
orl
mov
sub
sub
daa
aam
lea
addl
jns
inc
loope
jmp
in
push
mov
mov
dec
mov
cmp
arpl
cmpsl
mov
cmc
les
cmpsl
aas
pop
or
inc
inc
popl
imul
out
and
fwait
jg
pusha
mov
insb
xchg
sub
nop
push
or
or
xchg
add
sub
fisttpl
lret
ss
mov
add
jae
cmp
pop
add
push
imul
loope
pushf
mov
xchg
stos
push
fistpl
pusha
xchg
arpl
mov
imul
mov
jns
mov
sbb
cmpsl
mov
add
es
inc
js
pop
cvtps2pd
scas
cmc
loope
push
add
cli
mov
inc
scas
pop
xor
movl
sub
jecxz
ds
xchg
into
jne
shll
inc
mov
lods
or
iret
jbe
cwtl
sbb
push
cltd
mov
stos
cli
jne
or
fbstp
mov
adc
aam
fldcw
mov
cs
fcompl
out
lahf
out
adc
xchg
adc
mov
inc
cli
std
mov
jmp
rcrb
add
pop
aas
push
push
push
inc
sub
xor
lcall
ja
addr16
jecxz
sub
pop
call
pusha
fcoms
rolb
jecxz
cwtl
idivb
cmpsl
xor
fwait
ret
jp
int
cmpsl
xor
sbb
mov
push
pop
xchg
push
push
mov
sbb
scas
push
iret
roll
mov
pusha
push
or
js
dec
loope
fmul
mov
gs
daa
fisttpl
add
divl
add
stos
push
cmc
subb
inc
pushf
sub
or
cld
jg
loopne
ret
sub
adc
xchg
push
jmp
out
ret
scas
out
dec
test
jg
xchg
out
push
mov
loop
fs
lret
test
mov
in
mov
sub
sub
mov
pop
push
pop
jbe
out
jmp
fs
jle
push
ret
push
push
add
inc
andb
cmp
mov
jge
xlat
mov
decl
push
xor
pop
push
add
call
or
jp
stos
add
arpl
mov
int3
push
scas
push
push
adcl
pop
enter
pop
scas
not
cmpsb
out
rorl
push
insb
cmp
cmpsl
xchg
jbe
stc
iret
je
xchg
jp
add
lea
sub
mov
das
push
adc
pushf
mov
cmp
arpl
mov
pop
sbb
faddl
jne
jns
ret
repnz
mov
inc
fldt
or
jns
idiv
jmp
cmpb
aam
xchg
push
and
out
dec
cmp
jl
aad
jae
lcall
stos
shr
test
jne
cmpl
aas
adc
and
mov
xchg
loop
dec
sub
pop
mov
inc
jl
js
sahf
push
cmp
pop
inc
dec
push
mov
pop
mov
and
xchg
stos
out
mov
fs
jnp
out
mov
cld
pushf
dec
stc
xor
push
adc
mov
frstor
into
out
clc
and
stos
mov
lret
and
pushf
jne
fisubs
mov
lods
jns
mov
ljmp
xor
inc
cmp
pop
arpl
xor
test
stc
test
js
jp
fdivs
ss
cli
pop
push
mov
adc
pushf
fs
jbe
xchg
push
or
cld
jg
dec
adc
cld
ret
dec
inc
xchg
lods
xchg
jbe
je
jo
imul
iret
fwait
adc
mov
push
das
push
stc
pop
outsb
cmp
pop
fsubrl
xor
testl
fwait
pusha
cmp
inc
int3
push
adc
lods
pusha
ljmp
jne
repz
jmp
xor
mov
sub
mov
add
jno
mov
add
fstl
mov
mov
nop
xchg
jl
add
cmc
jle
shrl
fimull
mov
jb
mov
fstl
dec
mov
sarb
movsl
push
mov
mov
jnp
pop
sahf
ret
and
add
and
jo
arpl
lret
movsl
pop
rcrb
out
movsb
and
xlat
lcall
dec
std
or
lret
clc
pop
push
mov
cmp
or
mov
fisttpl
xchg
mov
pop
xchg
fsubrp
or
sbb
or
ljmp
scas
clc
cmp
insl
fbstp
gs
popa
dec
xchg
test
and
movsb
jo
mov
fs
fstps
fimull
int
mov
out
xchg
pop
mov
inc
or
mov
dec
jbe
add
mov
fwait
mov
adc
in
sbb
xchg
test
arpl
clc
sbb
outsb
call
pop
cmp
mov
fwait
mov
push
or
mov
sbb
stc
icebp
stos
das
inc
inc
stos
out
das
mov
xor
dec
sarl
sbb
push
push
push
xchg
mov
fcmovnbe
out
lods
dec
in
adc
add
fwait
aam
sbb
pop
cmc
jae
sbb
repz
cli
ror
add
inc
popa
lods
sahf
xchg
and
ret
mov
bound
jbe
orb
pop
push
push
sbb
insb
mov
and
sti
ds
rorl
sbbb
inc
or
leave
push
repz
push
push
inc
add
flds
scas
ss
loopne
xor
test
mov
ret
mov
pushf
jmp
or
ljmp
fisubs
jb
pop
gs
insl
addr16
push
xor
mov
mov
leave
sti
les
mov
cmp
pop
cmp
mov
and
inc
cmp
imul
pop
inc
aam
add
cmpb
add
xchg
xchg
push
popl
rcrb
out
lret
xchg
scas
lods
pop
pop
add
das
push
cmpsl
sbb
insl
aam
add
mov
les
clc
xor
pop
sbb
xor
fiadds
cmpsb
test
and
clc
xchg
jns
std
jecxz
test
cmp
subl
xchg
mov
out
mov
jge
xchg
and
jo
dec
ret
push
leave
pusha
jo
out
xchg
popa
jge
in
mov
mov
lsl
ret
dec
dec
pop
pop
pop
add
xor
imul
enter
pop
jbe
andb
popf
mov
mov
les
bound
movsb
mov
jg
arpl
sbb
cld
push
dec
lods
std
adc
xchg
shrb
mov
repz
dec
sub
scas
jns
pop
adc
push
sub
ret
imul
divl
mov
arpl
lret
inc
sbb
jno
aas
add
test
xor
add
cmpsl
or
popa
ss
loop
outsb
inc
fld1
inc
sahf
fcom
imul
lcall
int3
cmp
pop
jg
fmuls
mov
xchg
cmc
das
dec
and
sub
push
cmp
rol
add
adc
loopne
adc
repz
sahf
inc
jle,pn
jne
in
in
push
cs
cmp
sub
popa
mov
inc
mov
fstl
xor
mov
stos
xor
jo
fisubl
push
fcoms
fsubs
imul
mov
add
lcall
mov
lcall
lret
and
mov
inc
jmp
popf
shll
ret
xchg
pop
mov
adc
inc
jge
notb
push
add
cmpsl
xor
outsb
sbb
dec
jl
xchg
jmp
sub
fwait
dec
dec
movsl
xchg
mov
push
sahf
xor
add
push
rolb
inc
and
mov
das
sub
outsl
repz
rorb
test
adc
push
inc
adc
mov
mov
push
xchg
sarb
cmp
cmpsb
sub
stos
cli
test
sub
inc
jge
or
pushf
fists
cmpsl
mov
add
addr16
push
aaa
sub
fnstsw
das
adc
xchg
mov
fimuls
push
or
jnp
shrb
ret
cmp
push
and
dec
hlt
jl
adc
push
fistl
mov
dec
ficompl
addb
and
sbb
outsl
xchg
pop
clc
pop
data16
pop
pushf
imul
in
ljmp
into
stos
sbb
push
nop
jno
test
outsl
stc
imul
xor
or
ret
xchg
or
xlat
adc
test
add
dec
sarb
pop
dec
pop
xor
pop
cld
test
push
sub
jl
mov
jg
enter
pop
mov
lea
jbe
sahf
test
push
idiv
shrb
pop
push
insl
nop
adc
jmp
shll
sub
sub
ljmp
jne
insb
pushf
mov
push
xor
jne
int3
push
sub
loope
jmp
das
fsubrl
mov
xor
insb
add
in
or
test
inc
notl
sub
xchg
sarb
dec
mov
lock
out
push
xchg
add
inc
mov
inc
add
adc
les
mov
icebp
mov
in
xchg
push
frstor
adc
movsl
sub
add
xchg
js
sub
push
out
push
imul
inc
std
cmp
stc
fcoml
loope
jmp
int
cmpl
mov
mov
push
or
mov
pop
popf
clc
scas
lret
push
das
mov
sahf
dec
std
mov
dec
je
push
pop
cmp
sub
mov
dec
out
lods
cmc
sub
xchg
nop
mov
mov
dec
popf
cli
jg
rcll
pop
stos
dec
iret
mov
sbb
rclb
jle
pusha
dec
or
mov
push
popl
lret
test
je
mov
scas
inc
in
mov
sbb
idiv
aad
mov
imul
ret
lock
add
adcl
jns
sub
jbe
push
jo
daa
addb
xor
aad
sub
sbb
or
cmpsb
mov
push
adc
out
mov
mov
pop
xor
push
lods
je
xchg
test
pop
imul
mov
xchg
jl
fiadds
out
out
in
fnstcw
hlt
lods
and
sbb
ja
sbb
cld
lahf
mov
inc
jbe
sub
jl
lahf
outsl
clc
aaa
in
push
mov
lock
xchg
mov
cltd
xchg
inc
sbb
clc
xchg
fdiv
mov
sub
test
insl
xchg
ja
movsb
push
sbb
lret
js
ficompl
test
jl
dec
fildll
aaa
or
ss
dec
cwtl
jl
pushf
cmpsl
hlt
ficoml
dec
stos
xchg
dec
fistl
int
cmp
mov
xchg
lcall
mov
mov
xor
push
sbb
and
fimuls
push
icebp
push
jp
scas
movsl
inc
cmpsb
dec
aas
mov
xchg
std
and
push
faddp
not
pop
lcall
inc
arpl
xchg
mov
aad
mov
mov
test
cmp
mov
mov
aas
cmp
mov
jbe
pop
andb
xchg
mov
hlt
push
dec
cltd
jb
or
scas
cmp
sahf
test
sub
mov
and
cmp
loopne
loop
fisttpll
movsl
int3
test
jl
cld
and
inc
scas
repz
negl
mov
dec
dec
stos
push
test
clc
orb
enter
mov
sub
add
sub
notb
jno
ljmp
arpl
bound
pushf
pop
imul
push
xor
inc
lods
loope
add
int3
xor
mov
je
xchg
int
and
adc
xor
add
fstpt
mov
insl
jo
loopne
xchg
mov
adcl
push
or
loopne
and
outsb
stc
or
stos
call
add
in
xchg
arpl
sub
shrl
imul
or
mov
outsb
adc
lods
mov
scas
or
push
ret
add
jns
rclb
mov
addl
xchg
mov
push
inc
sbb
bound
mov
aaa
push
sarl
pop
pop
mov
call
push
outsl
in
inc
push
and
adc
in
repnz
ljmp
add
mov
or
jecxz
mov
push
cmpl
out
xchg
dec
je
seta
shrb
ficoml
sub
push
repnz
jmp
inc
inc
addl
imul
nop
push
cltd
xchg
push
stos
dec
inc
cmpsb
int
push
pushf
addr16
mov
xor
movq
shlb
push
and
xchg
cli
inc
fimull
sub
sbb
xchg
lea
inc
mov
fadd
cmp
cmp
and
nop
fidivs
je
andl
mov
stos
popa
sti
test
jp
les
mov
sbb
push
fcomip
fidivrl
dec
arpl
bnd
loopne
adc
imul
insl
imul
cmpsb
cld
add
test
xlat
dec
fs
lahf
das
pop
ret
pusha
and
mov
add
inc
int3
sbb
sub
adc
mov
mov
cmpb
int3
xchg
and
ret
aam
inc
mov
mov
sbb
rorl
adc
xchg
dec
imul
inc
outsb
lret
dec
sbb
xchg
push
xor
mov
cwtl
test
mov
dec
or
js
and
dec
jnp
xchg
mov
cs
jp
test
push
push
push
sbb
or
xor
mov
pushf
sbb
pop
cmp
mov
daa
and
sarl
mov
push
xchg
mov
and
nop
cld
dec
xlat
push
or
mov
jle
mov
cmpsl
pop
mov
les
std
clc
ret
mov
xor
out
arpl
or
mov
jb
in
and
jbe
dec
std
lea
addb
push
es
aad
icebp
push
sub
cld
sbb
pop
inc
cmp
push
ljmp
mov
popf
adc
xchg
sub
mov
sbb
adc
ret
ret
shl
xchg
enter
sbb
stos
scas
mov
pop
cwtl
xchg
iret
std
jge
xor
xchg
std
scas
mov
shl
ret
jne
or
aad
in
nop
and
push
sbb
sub
push
jle
jns
xchg
imul
add
into
push
push
mov
adc
and
popl
movsl
shr
shrl
and
mov
imul
jns
mov
sahf
cmp
xlat
mov
push
jo
push
mov
inc
push
lods
mov
adc
fwait
pusha
pushf
mov
mov
mov
repz
fadd
sub
xor
fs
xchg
add
fst
mov
fimuls
adc
mov
push
dec
push
pop
jno
mov
imul
iret
xchg
xor
loopne
adc
cmp
fwait
sarb
mov
nop
push
or
daa
dec
js
insb
imul
test
mov
push
and
xchg
bound
mov
daa
cmp
fwait
inc
inc
jl
mov
dec
inc
mov
xlat
mov
arpl
aaa
lret
std
push
hlt
ds
lret
jbe
mov
pop
insl
orl
jle
cmp
int
cmpsl
xchg
mov
mov
in
add
adc
jo
sub
lret
fdivs
loope
xchg
jnp
add
inc
add
dec
loopne
and
jnp
sub
push
into
and
mov
outsl
push
mov
pop
icebp
in
movsl
mov
jae
je
mov
icebp
adc
cmpsb
mov
sub
nop
xlat
lret
mov
lock
mov
cmpsl
jne
stos
imul
xchg
adc
cmpsb
xchg
hlt
hlt
inc
cmpsb
jl
mov
mov
out
sub
xor
popf
int3
sub
bound
leave
arpl
je
push
test
pop
xchg
mov
rep
in
shll
andb
xlat
fisttpll
sub
xchg
insb
test
inc
aaa
rcll
xor
fisubrl
jnp
xchg
jbe
mov
sti
push
fnstcw
sub
push
sub
xchg
push
loop
sub
sub
out
loop
iret
mov
cmpsl
int3
lods
add
mov
jle
out
mov
out
pushf
xlat
cmp
loopne
jno
test
aad
add
mov
pop
mov
xchg
js
fwait
push
pop
xchg
xor
xor
sub
jle
rorb
mov
cwtl
jmp
cmpb
mov
clc
mov
scas
mov
or
sub
gs
sub
in
cmp
push
mov
fldcw
rcl
push
test
push
scas
fiadds
in
jmp
xlat
xlat
xchg
je
out
jno
rcl
push
xchg
repz
out
loop
mov
hlt
std
fdivs
xchg
sub
inc
cmpsb
ror
call
mov
call
cmp
das
push
mov
mov
jmp
cmp
hlt
ss
stc
push
jmp
xchg
shll
push
sub
shlb
xchg
pushf
mov
sub
mov
mov
and
xchg
in
push
arpl
xchg
add
dec
mov
mov
iret
arpl
out
mov
mov
push
mov
jbe
sbbb
cmp
xchg
clc
iret
test
test
das
mov
xchg
les
shlb
cmc
into
dec
add
loop
out
insb
test
in
out
mov
mov
mov
and
pop
sub
push
xchg
mov
sub
sub
ljmp
sub
frstor
hlt
inc
adc
imul
dec
add
rcrb
mov
sbb
push
aad
dec
push
sub
mov
mov
and
ret
mov
lahf
out
lea
jmp
pop
push
jo
sub
inc
inc
jbe
test
cmp
test
rcrb
xchg
pop
shl
add
mov
mov
pop
cs
or
pop
arpl
dec
jb
dec
push
dec
insb
xor
into
adc
fidivs
loop
popl
lea
sbb
lods
incb
std
loop
fdivrs
pop
inc
pop
aam
add
lea
loope
fiadds
ds
sarb
pop
pop
jae
xchg
shlb
dec
adc
lcall
sti
and
and
push
mov
scas
cmp
dec
and
mov
adc
xchg
lcall
mov
enter
aad
jno
clc
out
mov
sbb
ja
out
fistpl
int
pop
or
sbb
movsl
je
add
or
dec
and
test
jge
mov
stos
fstps
scas
jg
addr16
mov
mov
fsubp
lock
sbb
fldl
push
out
je
daa
cmpsl
ret
sub
iret
mov
mov
fistl
xchg
inc
and
cwtl
movsl
cwtl
adc
dec
fidivl
in
shrb
pop
mov
sahf
adc
aas
cmp
mov
cmp
mov
push
idiv
addr16
gs
int
les
mov
hlt
andl
lahf
pop
xor
push
sub
jne
xchg
movsl
aaa
into
dec
repnz
push
inc
push
addr16
test
xchg
jecxz
mov
cmc
jg
cmp
and
jl
and
popa
mov
add
mov
int3
test
push
xor
gs
push
cmpsb
in
jecxz
adc
sti
cmp
xchg
xchg
lock
mov
outsb
mov
xchg
sbb
mov
in
pop
xchg
lods
push
bnd
sub
loop
dec
add
cmpl
lea
sub
lcall
jmp
dec
sbbb
ljmp
push
ficoms
inc
mov
sbb
ds
push
icebp
mov
idiv
push
test
jnp
jbe,pn
andb
pusha
xbegin
ljmp
cltd
push
pop
jns
cmpsl
cmp
loop
mov
pop
cmp
imul
icebp
push
adc
cmp
and
movsb
ss
in
sub
insl
sbb
test
addr16
add
xchg
shrb
stos
in
scas
dec
jo
cmp
and
repz
hlt
mov
xchg
push
push
jl
jbe
push
ret
pop
lea
xchg
jl
loope
mov
dec
mov
mov
sbb
daa
fcompl
add
sbb
add
xrelease
push
jp
xchg
lcall
cmc
bnd
adc
rclb
fcompl
mov
and
lods
int3
pop
lret
aam
mov
frstor
dec
js
push
cmp
sub
gs
rcrb
mov
inc
lods
enter
xchg
mov
jns
adc
pop
push
aam
rclb
push
sub
sbb
popa
shlb
daa
cmpsb
aas
divb
sbb
aas
mov
or
test
xchg
cmpl
loop
test
data16
out
adc
mov
sub
insb
sub
mov
lret
mov
push
xlat
movsb
jmp
or
mov
mov
ds
bound
insb
outsb
loopne
xlat
sub
jp
mov
sub
xchg
ljmp
imul
mov
leave
test
jbe
mov
fidivrl
mov
dec
lahf
pop
pop
flds
cmp
adc
add
insb
faddl
xchg
fwait
in
stos
bound
clc
lods
imul
loope
cmp
push
insl
cli
js
mov
cmc
movsb
cmp
jne,pn
push
jmp
pop
pop
mov
mov
and
pusha
and
xchg
addr16
data16
xor
divl
lods
pop
xchg
adc
stos
movq
sbb
mov
add
loopne
js
fisttpl
sbb
cltd
sti
xchg
pop
push
iret
rcrl
std
cmp
clc
sbb
dec
xchg
sub
fcomps
dec
sahf
inc
repz
add
gs
addr16
pushf
adc
or
arpl
mov
ja
push
loopne
mov
sub
xor
cmpb
cmp
pop
adc
and
jge
cmpsl
cli
outsl
imul
push
test
rcr
adc
xor
cmpsl
push
push
lcall
adcb
xchg
cmp
mov
mov
mov
xchg
dec
add
in
roll
pop
loop
aam
pop
push
mov
cli
sub
nop
sarb
test
push
ret
xchg
in
mov
sbb
fcos
in
lea
dec
out
loope
lcall
xchg
dec
sbb
and
push
int
cwtl
iret
shl
dec
fwait
cmp
jno
mov
aad
inc
sub
fidivl
and
mov
xor
movsb
addr16
stos
inc
jg
fmul
stc
test
add
mov
into
fimuls
jle
in
cmp
mov
lea
push
sbb
xchg
or
cmp
adc
pop
stos
loope
js
xor
fists
cmpsl
sub
es
mov
jbe
into
sub
das
push
divl
gs
xchg
pop
dec
test
push
ss
mov
cmp
and
adc
push
push
sub
sbb
or
adc
fs
push
lret
movsb
rolb
xrelease
jl
mov
xorb
jb
arpl
repz
fistpl
repnz
sti
xchg
push
stc
shll
sbb
js
bound
push
dec
insl
pop
mov
sti
mov
mov
push
jnp
hlt
push
popl
fistps
add
incl
inc
insb
pusha
ret
andb
lods
lds
mov
pop
cmpsb
pushf
jg
or
int3
adc
xchg
bound
add
in
cmpsb
int3
sbb
sub
das
add
xchg
pop
scas
mov
in
popa
dec
inc
xor
aad
movq
mov
xor
daa
mov
and
push
ljmp
or
or
in
repnz
sbb
popf
pop
aad
mov
and
sbb
and
inc
push
sub
mov
mov
sbb
inc
add
lds
mov
rep
stc
add
push
jg
leave
jnp
shll
idivb
xor
push
mov
lock
cmp
pusha
call
xor
cmp
out
loop
subl
sub
setno
popf
imul
xor
mov
insl
pop
movsb
jmp
mov
and
cmp
pop
add
rcrl
dec
stos
sahf
mov
sub
jno
imul
ror
adc
pusha
out
mov
cmp
test
jg
clc
xchg
les
push
mov
cmp
mov
test
loopne
mov
add
jne
rolb
in
test
mov
cmp
pop
sbb
repz
lock
pusha
mov
aam
inc
push
dec
inc
add
mov
mov
pop
cmp
adc
cmpb
fwait
dec
in
sub
xor
add
jbe
movsl
loop
pop
xlat
cmp
imul
pop
lds
pusha
js
leave
xchg
mov
out
cmpsb
sbb
lahf
mov
int3
adc
fxam
out
fdivrl
push
dec
out
iret
xor
in
das
pop
pop
mov
insb
popa
and
outsb
cmp
jecxz
mov
push
mov
sarl
jae
pushf
inc
lods
push
jno
xchg
jmp
or
in
inc
add
inc
xchg
and
fistpll
cmpl
cmp
lahf
je
inc
lods
sub
stos
push
popa
add
xor
hlt
jbe
mov
and
mov
or
andl
adc
dec
and
sub
bound
daa
mov
test
inc
ret
xchg
pop
mov
mov
jnp
mov
jg
pop
pop
rcrl
or
insb
lds
xchg
shll
mov
movsb
imul
push
jl
mov
jb
loopne
mov
cmpsl
mov
pop
cmp
sbb
push
cwtl
cmpsl
mov
fs
pop
fwait
inc
pushf
das
pop
rol
lret
lds
or
jnp
jmp
cmpsb
xchg
repnz
xchg
dec
sahf
imul
mov
sbb
xor
xchg
jb
into
jge
pop
push
xorl
mov
or
out
xchg
mov
hlt
orl
adc
inc
cmp
iret
xorb
or
pop
and
test
sub
leave
fcompl
push
stos
push
hlt
inc
cld
mov
fwait
add
xchg
push
jbe
test
dec
and
push
mov
mov
loopne
mov
mov
rclb
out
mov
aaa
cmpsl
jb
xor
adc
sbb
outsl
outsb
jecxz
rorb
in
jl
inc
hlt
out
enter
ss
push
mov
lods
insl
and
fsubr
leave
push
adc
pushf
add
dec
xor
lds
jns
fwait
stos
repz
push
push
test
pushf
xchg
mov
dec
cli
mov
out
and
dec
nop
sub
rcrl
cmp
stc
stos
out
and
lret
add
or
sar
addr16
ret
push
lahf
stos
cmp
out
dec
dec
mov
aaa
mov
stc
pop
rcrl
xor
jp
out
out
add
or
in
test
push
fistps
lock
adc
adc
jae
push
push
mov
fsts
lret
cli
jo
mulb
cli
shufps
aaa
jnp
push
xor
push
sbb
loope
mov
xor
into
fisttpll
add
insl
mov
cwtl
dec
xchg
jg
push
shlb
mov
mov
jno
sbb
dec
divl
mov
ja
popf
jecxz
inc
pusha
clc
iret
jmp
or
cmp
pushl
rorb
fcmovb
shlb
add
adc
aaa
bound
mov
mov
mov
imul
in
stos
jns
sub
mov
frstor
inc
push
pop
ljmp
daa
or
adc
ds
xorl
aad
insl
mov
push
push
arpl
scas
and
mov
lods
mulb
add
ljmp
and
das
into
hlt
mov
pushf
mov
jl
sbb
test
scas
in
mov
bound
aaa
mov
jp
orb
mov
add
xlat
sahf
arpl
mov
in
add
gs
lret
es
sub
jmp
clc
hlt
cmp
addr16
jg
jge
add
aaa
dec
inc
outsl
jb
adc
push
ds
xchg
popa
out
pop
icebp
sub
icebp
outsb
popf
dec
mov
or
subb
test
and
mov
mov
mov
mov
rcll
cmpb
mov
push
pop
pop
clc
ljmp
or
and
push
test
xchg
lcall
in
jb
loope
mov
mov
adc
dec
inc
cmp
dec
subb
cld
scas
jns
adc
ljmp
imul
sahf
ljmp
dec
adc
loopne
and
sbb
sbb
adc
add
push
inc
pop
xchg
dec
sti
lods
les
xor
jg
in
shlb
out
push
shlb
int3
sbb
fnsave
jnp
mov
cli
pop
or
or
cmpb
popf
jp
add
pop
out
or
insl
jne
xor
repnz
sti
clc
lods
add
push
xchg
add
es
fldcw
insl
mov
invd
setp
xchg
add
xchg
push
cmp
or
lods
insb
loopne
xchg
test
imul
or
aas
mov
or
jb
jb
icebp
test
xchg
fisttpl
push
ret
mov
je
jne
mov
mov
mov
adc
in
pushf
pop
mov
mov
dec
enter
lret
jecxz
and
add
push
stc
inc
incb
mov
mov
pop
xor
xchg
cmpsl
sbb
in
imul
sbb
sub
dec
jmp
outsl
mov
enter
movsb
dec
cwtl
je
out
and
mov
xchg
push
mov
pushf
sbb
dec
mov
mov
dec
loope
xchg
adc
cmp
or
out
mov
pop
outsb
test
or
loope
mov
js
pop
shrl
les
add
sarb
pop
and
jp
xchg
leave
inc
xor
insb
out
and
popa
sbb
je
add
cmp
js
xor
adc
movb
lret
bound
movsb
mov
in
mov
push
insl
or
dec
and
cmp
outsl
lds
repnz
lcall
popa
sub
shrl
loop
inc
lods
adc
jb
push
jo
push
push
mov
in
xor
pop
les
or
jge
mov
lret
mov
adc
cwtl
rol
les
push
push
scas
and
inc
push
gs
mov
insl
cmp
sub
jnp
dec
inc
mov
ja
fiadds
loope
inc
roll
dec
pop
jo
stos
into
dec
sub
jne
push
loope
cmpsb
pop
in
mov
nop
insl
mov
scas
mov
pop
and
adcb
mov
cld
mov
dec
fcompl
or
dec
les
dec
xchg
outsl
push
xchg
mov
and
das
sbb
pushf
loope
loop
into
rorl
xchg
repz
push
xor
dec
insl
shr
icebp
pop
xor
sahf
inc
dec
neg
pop
add
out
lahf
xor
inc
in
adc
clc
les
cmp
lock
mov
in
out
sbb
xchg
aad
repnz
jg
imul
lds
mov
inc
lret
jno
xor
test
sti
mov
dec
adc
roll
mov
add
mov
std
sub
jo
add
dec
into
in
inc
or
ds
xor
loope
add
scas
sub
fldcw
sti
pop
dec
call
pop
js
fistl
dec
pop
or
and
xchg
mov
imul
test
mov
adc
scas
insl
sub
mov
rclb
jnp
stc
pushf
add
cmpsl
popf
aaa
lods
or
clc
imul
aaa
inc
adc
sub
mov
inc
test
sbb
cmc
push
inc
pop
mov
adcl
jae
inc
mov
adc
fs
lds
add
inc
lret
pop
push
mov
dec
ja
adc
es
mov
mov
mov
jno
fistps
fsubs
fcmovnu
hlt
cmp
in
fcoms
adc
aam
repnz
push
jbe
enter
jecxz
pop
jle
xchg
ds
fbstp
mov
and
insb
xor
cmp
xchg
and
jae
lret
dec
lods
cmp
mov
and
ss
ja
fldl
and
sub
mov
mov
and
adc
lret
sub
dec
popa
mov
int3
outsb
push
lret
mov
pusha
or
divb
mov
push
rorl
int
push
mov
into
ret
clc
scas
fdiv
mov
ja
addl
lcall
pop
push
insb
iret
shl
movsb
lret
fdivp
out
negb
aaa
inc
mov
call
idiv
decl
cmp
dec
jne
in
in
insb
sbb
pop
in
xor
in
inc
aas
inc
inc
adc
lcall
jp
mov
push
repz
rclb
fwait
add
cmpsl
inc
mov
inc
out
and
add
pop
jno
cmp
push
push
and
jae
setb
xor
push
mov
sbb
out
mov
cmpsl
cmp
pop
pop
daa
push
popa
dec
push
mov
xorl
or
sbb
pop
sahf
inc
pop
fxtract
or
xchg
pushf
jp
dec
cmpsl
cmp
xlat
out
pop
pop
lahf
outsb
mov
pop
jnp
xor
gs
in
lds
idivl
add
aas
jmp
shll
inc
imul
sbb
add
mov
and
xor
jg
add
arpl
leave
arpl
je
add
jno
movsl
in
ljmp
ss
xor
lcall
xchg
fcomps
flds
dec
xlat
f2xm1
adc
mov
inc
inc
mov
int3
lret
inc
xchg
loop
mov
sahf
mov
out
sbb
daa
pop
pop
xor
lahf
sub
clc
aam
inc
mov
dec
mov
jb
push
loop
add
inc
int
sti
push
arpl
jmp
and
adc
mov
mov
add
leave
jo
lcall
js
inc
xchg
mov
mov
scas
jecxz
dec
lods
fnstenv
xor
inc
add
cld
stos
sti
jb
add
xchg
std
pop
sbb
jb,pn
fs
xor
test
insl
stc
loope
add
in
jge
repz
sub
push
test
mov
dec
xor
js
and
mov
xchg
xchg
pushf
ror
lea
sarl
adc
sbb
or
push
mov
int
test
jle
mov
loopne
cmp
rorl
ret
xor
insl
add
and
ljmp
pusha
js
inc
lret
dec
and
mov
and
insl
movsb
aaa
push
mov
stos
fistpll
cli
ja
jbe
mov
mov
stc
fnstenv
jg
scas
cmp
mov
in
out
dec
cli
imul
sub
push
not
out
jo
imul
mov
ljmp
sti
inc
fdivrl
int
or
add
sbb
idiv
nop
addr16
mov
repz
cmc
into
sti
mov
nop
push
dec
sbbl
adc
movsl
psubusb
cld
inc
add
push
and
sahf
movsl
mov
pop
loopne
push
lret
jge
ds
iret
out
ds
xchg
jb
lcall
inc
lock
xchg
mov
sti
in
pop
scas
inc
mov
push
jb
sbb
sbb
xchg
scas
icebp
jbe
ret
add
ja
mov
push
or
sbb
push
das
add
adc
add
pusha
dec
scas
test
cmp
and
and
cmc
stc
jecxz
mov
shll
mov
leave
pushf
mov
ret
mov
in
jmp
loopne
sbb
push
mov
shl
imul
or
dec
jl
mov
stos
xor
cmpsl
and
push
lds
mov
mov
mov
in
cmp
mov
sahf
mov
and
jno
cs
cmp
or
test
lods
xchg
popf
mov
jg
mov
inc
mov
enter
dec
mov
sarl
shrl
and
icebp
xor
xchg
xor
das
jp
js
adc
xchg
jg
mov
xorb
out
aam
push
scas
inc
adc
out
mov
nop
push
pop
push
cmc
aas
push
fsubr
int3
adc
dec
inc
xor
mov
cmp
fiadds
out
cld
push
mov
cmp
dec
inc
loop
fistps
in
xor
bound
clc
insb
inc
add
stc
es
movsl
dec
mov
adc
adc
adc
push
int
lcall
mov
push
fisubl
lret
and
lcall
pusha
push
call
ret
cmp
pusha
sbb
les
jg
ret
fwait
test
cmp
seto
es
push
ret
sbb
xchg
popa
popa
dec
js
mov
dec
inc
stos
xor
daa
mov
mov
mov
mov
popf
mov
dec
jae
cld
mov
sub
adc
xchg
push
leave
bound
sub
faddp
aam
fld
enter
pusha
mov
test
pop
xor
js
sbb
dec
scas
mov
mov
ret
mov
in
mov
mov
into
jecxz
mov
rol
or
aas
loop
mov
ljmp
push
push
lock
ja
out
push
test
xchg
call
das
mov
mov
jmp
mov
adc
sbb
lret
clc
scas
ret
repnz
fst
sbb
cmpsb
aaa
mov
sahf
fdivl
movsb
pop
push
dec
fidivl
pop
popa
idivl
out
enter
es
adc
test
fbstp
jb
loop,pn
mov
fadds
xchg
push
and
cmp
push
xchg
add
pop
inc
mov
inc
test
lods
mov
fld
mov
fwait
leave
and
in
xor
divl
cld
push
lahf
lret
pop
mov
pop
fdivs
or
sbbb
push
sbb
mov
dec
fsubrl
lcall
dec
jno
xor
ror
jo
xor
or
orb
add
aad
and
xchg
mov
xor
xor
inc
xor
dec
imul
stos
out
aas
xchg
mov
gs
mov
pop
jnp
mov
push
es
mov
add
outsb
push
jmp
xor
jbe
jns
pushf
sbb
ljmp
fldl
jl
inc
jns
pop
pop
or
mov
int3
and
sub
pop
xor
push
dec
adc
in
sub
mov
lret
sub
mov
adc
das
int3
pop
xchg
out
dec
and
xchg
dec
inc
sbb
adcb
or
mov
in
mov
cmc
gs
push
out
mov
mov
fs
inc
into
dec
ss
xchg
cmp
iret
rcll
daa
sti
push
jno
imul
xchg
arpl
cmp
pop
jle
jge
mov
adc
adc
out
sbb
into
mov
insl
adc
push
cld
fistpll
dec
mov
lods
dec
stos
xchg
push
lret
iret
andl
adc
mov
rcl
add
or
pushf
mov
xor
inc
jns
test
call
dec
ret
into
add
lods
dec
push
jl
jge
gs
sbb
leave
cmp
out
pop
sbb
mov
in
fwait
push
ds
movb
sub
push
dec
popf
popf
cmp
cmpsl
and
mov
or
xor
das
and
orb
mov
outsl
sub
mov
cmp
loop
push
add
icebp
push
mov
cmp
test
repz
push
jb
insl
adc
inc
cltd
jmp
or
and
pop
push
jmp
sbb
push
cmp
or
sahf
and
stc
sbb
cmp
mov
jg
mov
mov
or
fwait
sahf
jns
and
ret
xchg
sbb
cli
inc
jne
adc
mov
adc
jno
jge
stc
push
imul
mov
xor
loop
fbstp
jae
lcall
lahf
clc
and
clc
mov
lret
ret
lcall
jge
xor
imul
jl
hlt
sbb
in
shl
mov
lock
jnp
out
jne
push
popa
lahf
leave
das
jns
jmp
sub
push
pop
cmp
add
push
fsqrt
fdivrl
jnp
lret
xor
xchg
mov
test
nop
cmp
iret
cmp
icebp
and
mov
mov
imul
push
rorb
outsb
inc
dec
arpl
push
iret
jp
int
sti
push
enter
lcall
insb
inc
and
fstpt
pop
stc
push
movsl
lock
and
sti
orl
popa
scas
sbb
cmp
mov
xchg
xor
dec
pop
mov
push
jne
sbb
call
into
das
daa
sbb
imul
sub
push
xlat
daa
out
incb
fimuls
lods
iret
fsubs
aas
pop
jae
out
adc
mov
pop
dec
fsub
mov
nop
sbb
mov
jle
mov
xor
fs
push
push
jns
pop
mov
outsl
das
xor
lock
dec
movsl
outsb
subl
inc
push
add
in
inc
jmp
cmp
jp
cld
or
call
pop
nop
xchg
loope
cld
pop
lods
hlt
sti
jmp
into
cmp
push
adc
sub
rclb
inc
sbb
aam
shr
mov
clc
sub
addr16
daa
test
mov
lods
xchg
cld
int
mov
dec
out
lret
push
xchg
xchg
pop
dec
dec
jge
push
rcrb
mov
jns
imul
dec
and
mov
and
stos
xchg
ss
jae
hlt
pop
mov
lock
and
sbb
ljmp
push
daa
mov
fstl
jecxz
scas
sub
xor
mov
sub
rclb
inc
clc
stc
adc
sbb
jae
jne
dec
dec
sub
shlb
adc
lret
xor
lcall
imul
cmpsb
jge
adc
ds
push
out
popa
xchg
stos
lret
pop
sti
mov
call
out
jb
mov
gs
and
shr
out
mov
in
out
lcall
or
lret
pop
push
mov
lods
es
or
mov
sub
sub
inc
out
jb
and
sub
daa
jno
xor
push
mov
jo
pop
call
add
push
pop
clc
push
aad
jl
lock
out
or
xchg
xor
jmp
test
pop
lret
test
push
pminub
push
mov
scas
cmp
cmpsb
pop
dec
xchg
in
mov
sub
adc
fidivrs
dec
clc
adc
sbb
xchg
lahf
push
xchg
push
les
lods
adc
pop
shrl
cli
cmpsl
sub
inc
jge
sub
fisubs
in
fnsave
xor
cmp
xor
and
mov
lret
lock
pop
idivb
iret
sub
out
mov
sub
bound
mov
in
mov
xchg
push
cld
sub
xor
daa
add
scas
fnstcw
dec
or
fwait
das
es
push
adc
ret
inc
pop
and
mull
mov
js
sbb
movsl
or
mov
rcll
cld
adc
mov
negb
cmc
jbe
sbb
movb
aad
dec
dec
lods
int3
inc
out
jb
pop
jns
xor
push
repnz
jmp
icebp
ja
mov
add
add
add
jnp
movsb
sbb
dec
ja
add
ret
jns
xchg
push
test
stos
mov
pop
jp
xor
dec
add
jecxz
cmpsb
aad
test
stos
fwait
psubsw
call
jg
arpl
stos
cmpsl
imul
add
sub
xchg
push
sbb
pop
lods
pop
aad
jne
cmp
leave
rcl
cwtl
sub
mov
xor
rolb
fstpt
bound
addb
iret
inc
sub
add
popa
fisttps
jbe
inc
inc
sahf
push
stos
sbb
inc
mov
pop
adc
mov
push
imul
sub
jge
rol
cwtl
jo
das
inc
jns
pop
bound
cltd
pop
xor
xor
daa
xor
mov
cmp
push
cs
stc
stc
cmpsl
gs
add
pusha
xchg
movsl
mov
sub
mov
xor
bound
cmp
inc
push
icebp
xchg
gs
jbe
test
and
mov
lock
dec
xchg
fdivrp
and
cmpsb
adc
es
rolb
dec
inc
add
pop
mov
pushf
mov
mov
decw
inc
jb
add
jmp
mov
inc
nop
gs
mov
mov
add
pusha
fists
cmpsb
jmp
mov
dec
repnz
mov
push
xchg
arpl
mov
inc
clc
and
inc
pop
sahf
inc
outsl
mov
lret
cli
out
addr16
shll
sbb
imul
aam
testb
in
jns
xchg
ss
mov
dec
jb
pop
mov
and
in
cmp
enter
mov
xchg
iret
mov
data16
lds
xor
push
cmp
pop
cwtl
mov
jno
push
aas
lods
popf
ret
fistpl
and
cmp
sti
ret
jmp
sbb
sub
adc
pop
popf
fwait
inc
and
jge
or
data16
rcll
arpl
push
pop
fnstsw
and
adc
xchg
dec
test
adc
mov
pop
push
dec
cmp
rcr
mov
sub
adc
jp
ficoms
fs
arpl
mov
sub
cld
cmp
in
loopne
lods
inc
sbb
insb
add
adc
xorb
push
ja
lds
inc
inc
push
jb
out
lcall
fimull
ja
mov
mov
lock
mov
enter
jmp
mov
shl
dec
jle
shrl
repz
inc
and
pop
dec
aaa
mov
pop
jp
mov
adc
xor
pop
pusha
pop
sbb
iret
in
pop
loop
mov
out
mov
add
movsl
into
xor
push
jge
test
xchg
pop
jl
in
test
andb
add
xchg
flds
sub
push
aad
push
sbb
rolb
xor
mov
sbb
cmp
scas
or
and
imul
dec
leave
inc
push
jmp
cmpsb
rorb
pop
mov
push
adcb
jp
jp
ds
daa
jmp
scas
push
pop
lret
push
inc
sbb
jecxz
xchg
ljmp
fnsave
pop
xor
cmp
pop
sbb
lea
adc
push
and
cmp
xor
shr
es
inc
outsb
jb
push
xchg
je
mulb
je
add
pop
mov
es
jo
int
adc
dec
xchg
pop
mov
jns
outsb
xchg
pop
cli
xchg
cmp
or
xor
rcrl
mov
in
call
movsl
sbb
lret
aad
test
mov
xor
cltd
movsb
loopne
sbb
jo
push
or
sub
testb
adc
mov
lcall
inc
inc
sub
push
bts
or
sub
stos
scas
sti
rcll
cmp
inc
inc
gs
or
cmp
xchg
imul
xchg
ficoml
test
mov
mov
ds
sbb
movsb
insl
and
adc
loope
inc
mov
es
iret
movsb
lods
cwtl
loope
fistpll
pop
and
popa
sub
mov
push
std
fwait
shl
test
out
stc
aad
inc
cmp
xchg
push
jmp
sbb
arpl
popa
xchg
out
popf
adc
inc
ds
loop
gs
rcr
sbb
sbb
mov
dec
bound
jno
pushf
mov
push
sub
mov
cs
pop
cmpsb
xchg
out
pop
push
shr
sub
or
and
shll
add
pop
insl
hlt
push
mov
cs
inc
jmp
clc
inc
pop
mov
dec
and
pop
sub
insl
out
ficoms
scas
add
xor
into
insb
outsl
pop
push
pop
stos
pop
mov
push
add
jle
push
sub
lret
push
sbbl
mov
int3
pop
push
mov
sbb
push
dec
adc
add
scas
rol
pop
pop
pop
jecxz
add
stc
sub
lods
mov
adc
arpl
xchg
jno
add
js
jo
jle
mov
jmp
pop
jg
mov
jae
add
jge
leave
sub
popf
xorb
mov
imul
ret
stos
mov
push
pop
xchg
dec
mov
pushf
mov
jb
mov
adc
push
in
add
aad
cmpsb
push
cld
shll
shlb
mov
push
std
pop
xchg
fsubl
jns
mov
movb
mov
or
lods
fcom
dec
sarl
xchg
inc
adc
test
sbb
xlat
les
ja
sbb
xchg
test
xor
test
mov
popf
popa
cmpsb
add
sbb
mov
xchg
xlat
or
cmpsb
inc
aad
rcll
dec
bound
cld
mov
pop
leave
jb
or
imul
stc
data16
mov
hlt
add
dec
sbb
xor
dec
and
add
jns
movsl
mov
out
add
adc
out
jo
arpl
sbb
lds
lock
pop
ret
stc
into
push
popa
scas
and
int3
inc
pop
sbb
add
mov
adc
sub
stos
in
push
push
lock
adc
stos
ss
xlat
jb
mov
leave
xchg
cmp
sub
popf
mov
dec
movsb
popa
fldl
scas
sub
mov
dec
mov
mov
lods
cmp
ret
imull
js
sbbb
arpl
cwtl
movsl
pop
pusha
mov
add
call
repz
pop
insb
addb
mov
daa
pop
jg
add
sub
mov
repnz
jo
pop
sbb
jmp
mov
mov
cmp
fcompl
ds
pop
mov
lret
repnz
ds
jecxz
rcrb
cmp
or
xlat
and
dec
mov
scas
xor
sbb
push
push
mov
out
rcll
mov
andl
jg
xchg
or
pop
and
enter
xor
ror
inc
push
nop
arpl
fmull
cmp
testb
xor
pop
lods
mov
xor
mov
aas
cmp
lods
dec
push
outsb
push
cs
dec
outsl
cmp
xor
xchg
pop
std
push
pop
movsb
mov
in
ud0
lret
mov
dec
mov
mov
sub
std
sti
sti
mov
repz
inc
pop
mov
lret
imul
mov
mov
sbb
push
dec
adc
icebp
jge
pop
cmp
add
jo
les
sbb
iret
lcall
mov
loop
xor
lds
mov
sahf
pop
inc
movsb
xlat
inc
sub
mov
xchg
pushf
movsb
std
dec
jb
mov
adc
xchg
add
out
jo
push
insb
push
adc
inc
test
pop
mov
sbb
add
into
out
and
mov
call
push
pop
cmp
and
fcomp
in
inc
int3
dec
divb
in
pusha
fwait
clc
jae
xchg
pop
call
out
cli
push
not
pusha
scas
push
std
sbb
mov
xchg
cmc
pushf
clc
js
lret
jns
adc
stc
jnp
adcb
pop
sub
push
sub
pop
rorb
mov
mov
mov
fnstenv
dec
icebp
adc
aam
mov
jbe
leave
das
sarl
sbb
movb
mov
push
push
mov
stos
add
jmp
dec
ficompl
mov
pop
cld
dec
pop
push
es
mov
cltd
insl
ret
fbstp
arpl
jbe
mov
cmp
xor
or
jecxz
rcrl
pushf
mov
mov
pusha
mov
xorl
xchg
shrl
mov
data16
jns
idivl
mov
les
clc
pop
outsl
es
push
mov
cltd
mov
in
jp
scas
imul
or
jo
fsub
jmp
push
jae
dec
lret
daa
insb
jmp
repz
jp
jnp
mov
adc
xorb
mov
out
xlat
mov
jne
cs
jo
cmc
adc
dec
mov
arpl
or
dec
icebp
aad
stos
sub
or
sub
mov
pop
sub
cmpl
sub
inc
movsb
mov
cltd
mov
cltd
orl
movsb
test
inc
jge
jg
cmp
ds
shrb
inc
and
mov
in
cwtl
out
ret
jecxz
xchg
pusha
inc
and
jbe
mov
cmpsl
shrl
and
and
mov
xchg
lret
adc
neg
loopne
cld
je
inc
loope
leave
xchg
fsubrl
add
movsb
cmc
sbb
outsb
mov
gs
cmc
xchg
xchg
lret
jl
or
xchg
js
out
leave
push
xor
repnz
enter
shll
lret
jg
cmp
cmp
cmp
loope
and
loopne
loopne
test
mov
cld
gs
pop
jmp
scas
stos
inc
icebp
and
into
test
or
pop
insl
insl
xchg
pop
jnp
cwtl
iret
xchg
push
xor
pop
inc
pop
sub
mov
fildl
clc
mul
leave
add
mov
fdivl
outsb
insb
sub
mov
mov
out
es
mov
pop
push
movsbl
arpl
ds
sub
clc
push
ss
fstpl
pop
xchg
cltd
dec
pusha
mov
pusha
pop
cmpsb
pop
fwait
rcll
int
push
ds
popf
rcrb
jecxz
cmpsb
movb
mov
out
rcrb
cmp
jbe
add
lcall
push
loopne
in
inc
adc
or
fldenv
imul
xor
enter
aaa
add
add
lret
push
add
rep
xor
pusha
mov
xlat
xor
dec
aad
test
repz
mov
cltd
sub
xchg
mov
and
test
inc
cmp
mov
ss
push
mov
mov
out
xor
out
test
or
mov
incb
adc
or
jl
push
jb
cld
jo
test
and
bound
roll
ss
imul
test
lret
xchg
cmp
cmp
mov
push
and
push
push
pushf
jle
popf
sub
pop
adc
sahf
fidivs
ret
clc
mov
mov
lods
nop
xor
inc
push
cmpsl
jp
lea
fmuls
xchg
add
adc
stos
mov
sub
push
test
inc
fs
fs
dec
fnstsw
dec
std
pop
mov
inc
out
sub
sbbl
fstps
mov
hlt
sahf
push
sub
scas
popf
cltd
pop
pop
roll
mov
pop
push
lds
jl
inc
rcl
sbb
jl
popa
enter
inc
add
arpl
xor
jge
push
or
ret
insb
sti
mov
lahf
daa
push
inc
push
add
inc
and
sub
into
fsubs
icebp
sub
pop
orb
mov
aad
test
cld
lea
adc
jo
mov
pop
push
gs
fldcw
push
cwtl
test
mov
adc
or
jmp
mov
clc
mov
loopne,pn
movsb
in
lahf
mov
or
movsb
cmp
pop
std
insb
ljmp
insb
stos
sub
ret
mov
mov
cmp
or
call
mov
out
push
xchg
cmc
or
push
shl
rcll
xor
dec
mov
inc
jbe
adc
adc
mov
incl
cmp
lods
iret
or
out
jge
mov
test
add
ljmp
cli
ljmp
sbb
ret
in
jae
xchg
jg
pop
add
nop
push
popf
out
pop
and
xor
sbb
mov
scas
lods
jb
or
push
jecxz
inc
mov
jmp
inc
daa
sbb
scas
std
imul
push
in
push
mov
adc
sub
xchg
cli
mov
lock
mov
add
mov
std
xor
fs
lods
and
adc
and
out
sarl
jo
icebp
pushf
xchg
jnp
cmp
fisubrl
push
xor
call
pushf
sub
or
das
lods
pop
and
xor
xchg
inc
data16
stos
shl
faddl
ss
adc
or
mov
xchg
mov
mov
shll
int3
sti
jne
sbb
int
leave
pop
sbb
push
jl
mov
inc
fidivrl
mov
scas
jp
into
mov
xlat
or
movsb
cld
sbbl
lock
cmc
or
mov
dec
lods
xor
xlat
push
jmp
nop
mov
lret
stos
push
mov
addl
das
retw
sub
cwtl
jo
or
inc
sbbb
sbb
lds
mov
pop
rcr
orb
dec
pushf
pop
aam
scas
shrb
adc
jnp
cmp
pop
loop
push
xor
into
frstor
push
imul
fs
lret
inc
aas
nop
jl
push
ss
jmp
negl
jecxz
shrb
cltd
repnz
pop
cwtl
jecxz
sub
cmpsl
pop
aam
lock
adc
iret
loopne
enter
and
stc
dec
insl
jno
neg
dec
lret
stc
data16
cmc
jb
jae
rorl
xchg
add
mov
arpl
movsl
lea
add
and
pop
fildll
xchg
enter
jbe
ja
pop
and
mov
je
push
sbb
fidivrs
pop
loope
xchg
or
cmp
xor
imul
jmp
adc
cwtl
lods
jmp
out
cld
int3
jmp
shr
or
ss
pop
das
lret
lock
add
push
lcall
inc
jp
sub
std
out
ret
shll
xchg
test
mov
ret
and
dec
rorl
int
adc
xchg
mov
es
popa
stc
and
inc
push
xchg
xlat
adc
movsl
push
ljmp
test
ficompl
push
fmul
lock
scas
xor
aas
ja
sbb
inc
xchg
jecxz
mov
enter
fstl
jmp
pop
mov
das
xor
lods
xor
jecxz
scas
lret
xchg
push
sbb
stos
push
ja
dec
aad
lret
cmp
and
and
outsb
push
pop
insl
aaa
lods
in
mov
adc
and
rclb
subl
sub
jns
sbb
mov
mov
cltd
xchg
shlb
fcmove
popa
repnz
popa
aam
sub
cs
fwait
xor
outsb
sub
xor
sbb
pop
and
mov
addl
inc
mov
jle
lock
xor
aam
jl
or
sub
das
clc
push
shll
sub
mov
inc
jge
pusha
push
sbb
or
pop
jg
inc
outsb
repz
icebp
es
leave
arpl
push
adc
or
jge
aaa
and
sub
sbb
outsl
aaa
rorl
adc
xchg
inc
outsb
sbb
pop
imul
in
lret
mov
dec
fmulp
jp
movsl
push
mov
mov
jge
out
jle
inc
es
mov
out
out
scas
inc
fdivl
in
into
adc
cmpsb
jb
stc
add
dec
adc
inc
hlt
fwait
outsl
inc
fs
push
shl
jge
adc
int
rorl
inc
cmpsb
jg
ds
jbe
loope
jno
pushf
and
lahf
fistpll
xchg
stc
roll
pop
mov
icebp
in
jmp
push
pop
pusha
xchg
adc
ds
xor
fisttps
push
pop
xchg
lods
pop
pop
mov
cld
imul
lods
rcrb
mov
mov
adc
mov
addr16
out
mov
pop
stc
out
and
pusha
imul
imull
sti
pop
add
cmp
adc
loopne
inc
inc
sbb
scas
xchg
xchg
test
pop
push
pop
aad
push
addr16
jl
jae
fldt
mov
jae
insb
in
sbb
cltd
inc
mov
and
test
mov
xchg
sbb
sbb
and
insl
out
add
clc
pop
nop
or
push
push
pop
popf
scas
jp
xchg
dec
cwtl
mov
fwait
sbb
cmpsb
cmpsl
shlb
bound
mov
cmp
sub
fdivrs
sub
dec
cmpsb
mov
insl
pop
mov
mov
cli
mov
add
sbb
sub
jb
fcompl
cmp
inc
fwait
cltd
sbb
jle
ljmp
ss
push
ret
loop
popf
mov
pop
push
inc
movsb
xchg
inc
jg
xor
jle
sarb
xchg
gs
dec
dec
jne
ss
pop
push
mov
inc
cmp
scas
mov
mov
dec
or
inc
es
push
pop
push
cmpsb
dec
xchg
jl
xor
xchg
sbb
cli
xor
dec
iret
push
dec
test
mov
mov
and
scas
mov
pusha
loope
or
pop
jae
or
mov
call
in
push
cmpxchg8b
into
sub
hlt
imul
or
dec
push
push
out
jle
imul
rolb
and
popl
aaa
xchg
pop
sti
std
xchg
cwtl
or
stc
add
xchg
fistpll
fadd
adc
jl
mov
jmp
xchg
cmc
xchg
pop
addr16
nop
dec
mov
adc
imul
xor
les
mov
mov
mov
stos
add
sub
mov
xchg
test
lahf
subb
xchg
iret
pop
flds
std
fistl
mov
fs
popf
sbb
es
call
js
fwait
push
cld
cmp
mov
cmpsl
cld
inc
mov
mov
data16
rcl
lcall
fcompl
ja
cwtl
movsb
inc
dec
jg
and
lock
js
push
sahf
mov
out
dec
pusha
mov
call
data16
lock
mov
out
mov
lahf
sti
stc
cmp
jl
sbb
pop
dec
dec
subl
rorb
mov
cmc
xor
sub
jmp
pop
xor
out
sub
add
inc
cmp
dec
jb
inc
add
pusha
xchg
ja
rcl
maskmovq
divl
outsb
dec
repnz
push
movsl
jg
inc
imul
out
arpl
sbb
sub
xchg
push
stc
popf
push
adc
loop
es
je
sub
sub
int
imul
js
ja
leave
add
and
rsqrtps
loop
lcall
adc
cmp
dec
xchg
scas
loop
test
push
sti
aaa
jne
pop
paddusb
shlb
sbb
out
sub
xchg
notl
push
daa
mov
dec
sub
in
popa
pop
ja
mov
repz
test
daa
stos
add
jl
in
sbb
and
or
mov
fwait
pop
lret
sbb
insl
mov
mov
test
in
inc
out
cmp
out
inc
pop
jg
shll
xor
cmp
faddl
loope
addr16
mov
cli
xchg
xchg
cltd
mov
into
and
daa
sub
xor
fstpt
sarl
and
fwait
mov
pop
outsb
rcll
mov
out
mov
pushf
mov
or
mov
inc
iret
jbe
push
or
test
fucomp
and
mov
xchg
je
pop
out
lcall
loope
adc
fwait
aaa
xchg
sub
jg
clc
stos
arpl
lods
and
xchg
fs
sub
rorl
std
lret
aad
mov
adc
xchg
adc
inc
mov
pushf
lret
jmp
push
mov
dec
pop
hlt
inc
jle
pushf
mov
push
or
jge
insb
cs
jge
das
mov
xchg
adcb
sbb
and
xor
ljmp
jl
jns
shr
lahf
inc
push
sub
sbb
outsb
xor
lcall
out
pop
cmp
jb
lcall
xor
sarl
mov
movsb
pop
iret
lds
pop
dec
lock
adc
inc
addr16
inc
in
cmp
cmp
or
lods
adc
sti
mov
xchg
fsubrl
sbb
rcrl
decb
mov
cltd
jns
add
enter
call
jo
bound
adc
cld
cltd
dec
pusha
cmc
xchg
or
and
xchg
popf
icebp
or
inc
in
call
dec
rcll
xchg
cmpsb
push
pop
testl
lods
lods
lcall
adc
fstps
mov
xor
mov
inc
mov
lret
push
mov
xor
addr16
push
mull
das
and
add
mov
push
cltd
push
test
or
cmp
adc
jbe
out
sbb
ss
loopne
mov
mov
fwait
scas
ljmp
push
cmp
ret
outsb
das
xlat
fabs
cmp
dec
xchg
fildl
push
inc
aas
imulb
add
push
pop
inc
js
pushf
jnp
popf
sbb
test
ss
cmp
fistps
test
lds
mov
jo
mov
jbe
xlat
shrl
pop
push
es
adc
lcall
add
stc
jecxz
push
jmp
pop
pop
pop
dec
xchg
fstpl
jge
sub
aam
fcoms
mov
or
xchg
add
dec
mov
mov
inc
es
sbb
sti
and
inc
daa
mov
xchg
lods
and
popf
popf
mov
sub
mulb
fcmovne
pop
loopne
cs
jecxz
sahf
jbe
and
cmp
pop
dec
in
out
lods
mov
dec
mov
lret
jl
fcmovnu
pop
mov
jg
sub
mov
popf
lcall
insl
ficompl
add
and
out
pusha
add
jge
lsl
sbb
outsb
cmp
sub
neg
lahf
pop
mov
mov
inc
sub
xchg
fidivl
mov
or
mov
jb
int3
dec
xchg
sub
mulb
sahf
mov
leave
cli
xchg
clc
mov
push
aaa
add
push
jne
inc
xor
lret
rcll
scas
or
push
xor
mov
or
pop
cltd
cmp
sbb
xor
rcrl
cmp
cmp
aad
jge
pusha
mov
stos
push
shrl
lea
dec
test
mov
pop
popa
fcoml
mov
fldt
inc
sbb
out
pop
and
addb
jne
mov
cmpsl
int3
ret
pushf
and
fidivs
fisubs
aam
pop
dec
cwtl
sbb
mov
mov
xor
out
cltd
ds
ja
mov
lods
adc
and
call
jo
add
xchg
je
mov
pop
sbb
bound
adc
cmpsl
add
rorb
adc
leave
jp
add
mov
push
inc
or
frstor
mov
jbe
xor
out
and
fs
movsb
sub
push
movsb
rcrl
shlb
sub
dec
test
cs
mov
test
cmp
loopne
xchg
in
sub
xlat
jge
xchg
cmpsb
cli
bound
inc
push
mov
pop
test
shl
sbbb
leave
or
jl
sub
shrb
fstpl
sbb
in
adc
clc
add
mov
jecxz
aam
fwait
dec
xchg
or
cmp
mov
loopne
push
mov
fwait
cmpsb
cmc
inc
test
sbb
sub
fwait
cwtl
popa
std
aam
and
test
lds
shrl
arpl
popf
lods
add
scas
fsubrs
sub
lods
pop
lods
jl
nop
jno
dec
leave
xacquire
and
in
or
push
jle
fistps
pop
cwtl
outsb
pop
dec
push
inc
pop
movsl
je
mov
shl
out
inc
jnp
xchg
xchg
cmp
or
jmp
into
jns
pop
adc
in
pop
insb
shll
dec
repnz
xchg
add
dec
xlat
insb
pop
and
ja
pop
loopne
mov
sahf
scas
mov
ret
ss
jmp
test
jge
pop
movsl
push
bound
les
loopne
adc
fdivrl
push
mov
sub
or
pop
in
std
pop
aaa
mov
hlt
lds
jo
or
add
je
xor
mov
aam
jp
pop
ret
mov
adc
mov
and
rorb
sub
bound
cmpsl
add
lret
sub
inc
lods
and
pushw
mov
rorl
push
lds
dec
test
mov
insl
pop
lods
out
cmpsl
push
stos
roll
sbb
test
pusha
fimuls
xchg
pop
test
or
test
jns
mov
mov
in
dec
aaa
or
xchg
iret
out
pop
fidivrl
and
repnz
inc
das
loopne
xlat
dec
imul
cmp
mov
jp
movsl
rorb
js
jo
inc
cmp
frstor
lods
mov
sub
xor
cltd
arpl
sahf
sbb
stc
inc
sub
cmp
stos
jae
and
and
mull
and
xchg
cmp
jg
inc
push
xchg
mov
stos
and
pop
pop
cli
pop
mov
bnd
pop
adc
daa
xorb
xchg
ss
xchg
xchg
xor
jbe
push
insb
ret
pusha
std
fistpll
rcll
lock
sub
lods
cwtl
pop
daa
cs
outsb
cmp
add
sbb
pop
mov
out
dec
push
mov
ret
inc
add
notl
push
mov
movsb
mov
xchg
std
lds
mov
pop
repnz
fs
addr16
pushf
mov
stc
test
push
xchg
sub
sub
dec
arpl
test
mov
push
cld
push
rcrb
out
jmp
mov
inc
mov
cmp
arpl
int3
cmp
lret
sub
pop
repz
mov
pushf
mov
sti
cmp
inc
lahf
pop
call
jl
ds
jns
xchg
mov
clc
adc
loopne
in
sbb
xlat
xchg
mov
movsb
add
gs
dec
xor
je
cwtl
cmp
mov
lea
testl
out
mov
lods
cmc
or
add
ret
xchg
fnstenv
addr16
dec
subb
lock
cpuid
lods
out
xchg
iret
mov
rol
dec
xchg
cmpl
mov
xlat
pop
sbb
sub
mov
out
leave
xchg
mov
mov
out
sbb
movsl
stos
out
dec
and
adc
pop
mov
inc
js
aaa
sbb
jno
movsl
xor
insl
xchg
aas
push
rclb
add
frstor
jb
mov
movsl
filds
pop
jo
ret
enter
std
cmp
mov
or
out
icebp
popa
mov
shlb
sub
cmp
mov
test
inc
jmp
bound
xor
and
jo
push
cltd
aam
int
sbb
imul
xchg
outsl
shll
push
xchg
cmpsl
pop
scas
lds
and
add
mov
repnz
addl
and
sbb
bound
mov
std
push
mov
lods
in
outsb
dec
cmp
adcl
lret
in
mov
push
sub
icebp
mov
mov
cmc
dec
gs
notb
jae
cmc
cld
push
repnz
stc
adc
adc
xor
arpl
cmc
loopne
adc
dec
jl
and
add
add
stos
dec
push
sti
add
mov
pusha
jo
std
pop
jmp
jo
jnp
in
mov
aad
push
sti
or
mov
xor
incl
mov
ret
rcrl
aaa
jno
lods
sbb
jbe
cli
add
lahf
cli
pop
cld
popa
pmulhw
fcomi
dec
loop
cmc
insl
sbb
mov
cmpsl
push
cmpsb
addr16
sbb
push
test
push
mov
fwait
hlt
call
mov
push
int
mov
leave
jle
cmpsl
jnp
rclb
arpl
cmpl
lock
push
push
and
mov
push
pop
test
shll
or
inc
rolb
jo
pop
mov
fsubrs
fs
inc
cmp
dec
lods
mov
mov
mov
dec
in
sub
sbb
inc
jno
sahf
xchg
test
xchg
jo
clc
lcall
enter
mov
adc
movsb
lds
fadds
pop
in
pusha
mov
in
clc
add
rclb
cltd
dec
inc
or
imul
jle
adc
lock
pop
pop
es
pop
push
xchg
out
out
jne
mov
adc
fs
dec
and
jns
clc
push
sbb
mov
pop
pop
and
jecxz
icebp
mov
sbb
adcb
int3
test
dec
shl
jl
inc
nop
inc
es
dec
faddl
cmp
pop
pop
stos
shrb
ret
add
adc
push
imull
lret
pop
sbb
ljmp
fildll
mov
lods
sub
jo
sahf
scas
js
mov
test
dec
pop
xchg
push
mov
jecxz
gs
ret
cmp
loopne
cmpsb
cmpsl
jb
dec
gs
cmpsl
gs
in
mov
cmp
pusha
imul
jne
xchg
jns
mov
faddl
xchg
xchg
lods
shll
stc
or
test
dec
push
jle
stc
pop
cwtl
repnz
out
adc
push
cld
push
out
mov
jmp
dec
sbb
adc
mov
jbe
push
pop
pop
sub
xchg
and
jp
pop
mov
xchg
jl
jae
inc
push
scas
sbb
jns
shll
sub
pop
push
rorb
inc
mov
in
mov
mov
xchg
int
mov
insb
lahf
repnz
push
in
xchg
lea
xor
adc
cmp
das
je
lcall
dec
and
jae
xor
mov
inc
scas
jae
loope
sbb
lods
dec
dec
cmp
lds
repz
lods
je
xchg
jbe
shrl
pop
sbb
in
repnz
xor
fnstenv
adc
jae
cs
loopne
or
jno
sub
icebp
mov
test
ffree
xacquire
sti
das
fs
xor
lea
xor
loop
dec
jg
fidivl
jmp
or
mov
addr16
and
mov
cld
adc
sbb
imul
push
movsl
repnz
cmp
mov
fiaddl
push
and
jno
mov
push
mov
adc
in
outsb
jae
hlt
xor
ret
mov
xchg
mov
shrb
imul
xor
int3
inc
das
repz
iret
or
or
cmp
push
add
or
and
xchg
addr16
ret
sub
cld
shll
jle
imul
pop
leave
push
mov
xor
or
and
push
lods
xchg
icebp
mov
sub
xchg
nop
setbe
xlat
daa
adc
or
fwait
xchg
arpl
jge
pop
cmp
pop
fisubs
and
dec
push
push
mov
cmpsb
fbstp
or
imul
jbe
and
aaa
dec
push
rolb
out
aas
je
pop
hlt
test
dec
sarb
lods
mov
add
fsubrl
lock
lds
es
divb
mov
fs
mov
jmp
outsb
out
xchg
inc
sub
sbb
cmp
cld
dec
rcrl
pop
in
inc
inc
rcll
xor
jg
mov
cmp
adc
sbb
push
icebp
pusha
imul
lds
pop
dec
mov
dec
mov
adc
das
lahf
int
xor
adc
adc
mov
cmp
mov
fistpl
mov
icebp
xor
int
jne
loopne
sbb
inc
xchg
mov
add
xor
cltd
fadds
pop
jb
and
test
sbb
aas
dec
xor
jbe
je
sbb
push
adcl
lcall
aas
sahf
pop
cmp
cmp
jle
js
or
cmpsl
les
push
hlt
dec
pop
or
cmp
popa
stos
out
dec
or
aaa
push
cli
fbstp
imul
pop
jb
pop
call
dec
rorl
add
inc
imul
iret
dec
movsl
ja
mov
sub
into
movsl
stos
jmp
adc
sbb
push
mov
add
clc
fwait
es
jle
jns
sbb
mov
jmp
push
sbb
adc
out
ret
cs
xchg
dec
out
in
mov
in
pushf
pop
call
xor
dec
inc
push
or
sarb
in
push
ja
lea
cmp
cmc
sbb
xchg
test
add
int3
in
leave
push
jecxz
rcll
push
or
scas
pop
dec
fnstsw
mov
push
out
adc
sahf
dec
bnd
cltd
adc
sub
cld
add
jl
pop
jg
test
shrl
adc
ss
std
sbb
xchg
imul
andb
push
mov
pop
in
jnp
push
cmpsl
xchg
lods
sti
mov
mov
add
push
cli
jnp
pop
movsl
push
insb
scas
cmc
shll
cmp
push
mov
cs
pop
rorl
or
mov
ret
lods
fldt
fadds
mov
ljmp
sbb
jae
pop
mov
mov
cmp
ja
lret
or
xchg
nop
and
pop
or
push
out
mov
arpl
mov
mov
push
dec
jg
sub
bound
add
pop
in
adc
and
add
pop
and
adc
pop
push
insl
fidivrl
mov
push
lods
loope
inc
fs
push
or
add
mov
jns
or
out
js
add
dec
ret
addl
gs
loop
xor
dec
lret
imul
jp
cmpsl
scas
shll
gs
xor
cmp
sub
and
sbb
test
xchg
negb
adcl
xchg
dec
adc
add
push
insl
sbb
outsl
dec
xchg
sbb
jmp
pop
adc
cwtl
cmp
test
jecxz
stos
and
jecxz
pop
xlat
fs
lret
mov
jbe
pop
pushf
jp
push
inc
sbb
dec
stc
add
scas
int3
hlt
fidivs
and
movsb
jo
int
out
mov
dec
xor
fwait
cmpsl
stos
or
cltd
out
mov
out
ljmp
jb
inc
mov
pop
mov
inc
lock
mov
mov
mov
or
shlb
inc
data16
xchg
jo
jp
sub
mov
lods
push
cmp
fcoms
cmpsb
dec
scas
out
jmp
adc
sub
jne
dec
and
les
adc
push
outsb
adc
mov
push
cmp
rcrl
dec
imul
dec
cs
pop
loop
dec
ss
insl
push
cmpb
adc
es
push
sub
xchg
and
int
ja
jb,pt
cmp
ss
jp
or
inc
jle
add
ds
in
and
insl
out
mov
sbb
lret
cmpsl
pop
push
loope
cmpb
in
je
sarl
fists
scas
loop
sbb
and
iret
mov
push
lods
mov
push
stc
sbb
data16
jl
dec
cwtl
sbb
fiaddl
jo
jbe
and
push
mov
pop
dec
mov
xor
clc
testb
test
jne
mov
data16
sti
mov
push
aaa
add
stc
add
leave
das
outsl
idivb
xchg
daa
pop
and
cmp
cmp
in
pop
lods
aam
ror
sub
jb
jg
test
out
sub
inc
xlat
roll
mov
shl
inc
sbbl
mov
or
jne
call
push
mov
scas
sub
add
popa
mov
inc
and
fwait
pop
fisubs
hlt
popf
or
aas
and
rcll
subb
sbb
aad
dec
xchg
hlt
xor
mov
mov
or
ss
jae
lds
inc
leave
xor
andl
imul
rorl
rcll
ss
and
dec
and
mov
sub
fsubs
imul
push
jnp
pop
pop
rorl
subl
dec
pop
xor
ret
inc
out
xchg
or
jne
cwtl
punpckhdq
jae
cli
fcomps
fistpll
inc
outsl
pop
popf
mov
movsl
push
lret
xchg
pop
jo
jmp
les
inc
jno
jno
jns
std
test
imull
in
es
ret
js
sbb
mov
sbb
dec
jb
daa
movsb
mov
xchg
adc
push
jmp
lcall
jle
and
push
cmpsb
add
icebp
mov
push
sbb
js
stc
mov
fstpt
in
xchg
add
ljmp
aas
push
imul
gs
scas
ja
fsubl
rcrb
scas
push
push
bound
cltd
addb
sbb
xor
push
das
or
pop
add
sub
and
arpl
jne
xchg
add
lcall
adc
sbb
mov
leave
les
xlat
lods
and
lcall
idivl
pop
ss
push
cmp
and
mov
and
and
dec
sub
pop
push
cmp
test
xlat
dec
pop
push
adc
cmp
movsb
push
fstl
addr16
push
std
jns
sub
push
and
dec
negb
std
or
and
idivl
les
mov
pop
les
add
clc
lahf
fidivrs
call
fsubs
cli
imul
andl
das
gs
cmc
inc
int
in
jns
adc
pop
cltd
lods
pop
mov
test
cmp
movsl
xchg
mov
push
mov
enter
pop
push
inc
mov
out
cmp
push
sub
and
sub
jb
push
clc
stc
mov
test
mov
add
inc
xchg
or
rol
lea
xor
sbb
xor
cmpsb
jge
xor
int3
xchg
ss
outsb
jg
cmp
mov
cmpsb
mov
mov
sub
jb
insb
sub
repnz
in
aad
hlt
jne
enter
xor
mov
inc
cmp
fdivrs
in
or
cld
scas
push
push
sbb
cmp
int3
popf
iret
adc
cmp
outsl
mov
int
cmp
push
jmp
fsubr
shlb
les
imul
mov
fwait
dec
out
jnp
add
arpl
iret
push
cmp
sbb
icebp
sub
add
aam
pop
aad
ljmp
cwtl
pop
and
out
insb
push
lahf
out
pusha
lods
arpl
inc
test
cwtl
ja
mov
push
mov
in
dec
in
mov
jns
mov
sbb
xchg
pop
std
js
jb
inc
xchg
cmc
mov
pop
fbld
loopne
mov
bnd
xor
inc
adc
dec
jns
pop
das
dec
xor
loope
fdivr
jnp
pop
aam
stos
in
mov
cwtl
pop
push
mov
jne
cmc
mov
outsl
hlt
outsl
stos
xorb
mov
cmpl
adc
dec
hlt
or
push
sbb
dec
movsl
inc
xchg
bswap
jle
adc
adc
test
outsl
popf
jnp
jl
fwait
movq
jle
fcmovnu
cli
fnstenv
mov
push
mov
mov
jge
mov
iret
gs
roll
mov
inc
movsb
cmpsb
add
sbb
pop
jae
addr16
fsts
mov
lock
add
push
mov
jnp
fstl
inc
addb
movsl
xchg
mov
enter
data16
xchg
in
cmpsb
push
sahf
pop
repz
xor
popa
lods
cmp
call
lods
push
les
push
mov
mov
outsl
std
push
or
daa
xor
or
sub
sahf
mov
xchg
pop
pop
adc
insl
rclb
mov
cmpsb
int3
fldcw
ss
cld
outsb
push
jno
fsubrl
jle
js
jmp
add
cmp
test
out
xchg
and
cmp
push
push
mov
inc
daa
xchg
add
lods
imul
jp
inc
lock
pop
pop
repnz
lahf
pop
fwait
sub
loop
cld
scas
cmp
lea
pop
mov
bound
sub
cmc
inc
roll
stos
fcmovbe
push
in
std
fistps
rcll
jmp
jl
or
addb
mov
add
stos
push
insl
add
andl
fnsave
push
pop
pusha
mov
je
fidivl
dec
jmp
es
push
in
outsb
and
pop
shlb
xlat
mov
cwtl
outsl
gs
push
mov
fs
xchg
test
push
in
movb
push
orb
jbe
daa
adc
cmp
mov
pop
js
jae
jbe
ljmp
inc
inc
dec
cmpsb
or
cld
lock
lcall
iret
mov
ljmp
cmpsb
push
and
cmp
push
out
xor
test
nop
mov
pop
je
push
inc
jo
xchg
fs
mov
and
pop
jecxz
sbb
in
mov
fsubrs
sbb
jne
popa
lods
shlb
push
dec
sbb
or
imul
push
pop
pop
ljmp
aam
push
test
sbb
cwtl
psllw
jmp
sbb
aam
push
mov
push
popf
daa
sti
push
ja
mov
cmp
sub
push
or
movb
rorb
pop
aas
dec
xchg
pop
aaa
fcoms
fwait
leave
fwait
add
xchg
xor
in
int3
pop
sub
sub
insb
push
dec
mov
jbe
add
cmp
test
pop
xchg
dec
push
cli
add
ret
sub
dec
stc
cwtl
pushf
cmp
popf
jae
test
lcall
int
xor
dec
mov
sbb
scas
fs
add
and
sahf
pop
scas
sub
mov
xchg
sti
lret
pop
jae,pt
mov
push
mov
push
sub
ret
pop
mov
movsl
clc
mov
es
clc
popf
xchg
aaa
sub
dec
push
dec
dec
dec
rcll
test
popa
mov
adc
cmp
pop
mov
or
gs
sahf
ret
and
xchg
mov
jg
or
xchg
cmp
lret
mov
cmpsb
popa
aam
jns
xor
mov
outsl
cmpsl
movl
hlt
or
out
mov
sbb
sub
mov
xchg
pushf
add
mov
in
repnz
jecxz
add
lret
cli
push
mov
lds
mov
mov
adc
aaa
fcoml
xor
loope
mov
rcr
mov
mov
mov
repnz
mov
out
sub
scas
fsubrl
sub
adc
inc
push
insl
mov
movsb
and
or
inc
pop
popf
arpl
xchg
add
imul
outsl
cmp
daa
fcompl
add
out
mov
rorb
lock
sub
mov
dec
nop
and
xchg
cmpsl
aaa
mov
call
movsl
arpl
lock
pop
aaa
cmp
mov
mov
jne
std
fmull
stos
sub
cmpsl
fimull
mov
dec
hlt
xchg
inc
cmpsl
arpl
xchg
mov
aad
int
mov
cmp
sbbl
lods
icebp
and
mov
pop
dec
mov
dec
xchg
pop
sub
imul
and
addr16
xchg
aam
sbb
data16
fldenv
sti
and
inc
sbb
jp
xchg
stc
push
inc
mov
fsubp
fstpt
sbbl
cmp
ja
popf
cmc
shrl
scas
push
or
add
insb
vmovaps
lods
lock
jae
mov
mov
addr16
repz
push
hlt
psrad
push
ret
aad
lds
jbe
repz
aaa
adc
flds
in
lret
popa
mov
cmp
adcb
fdivrl
out
pop
mov
dec
scas
mov
lret
jae
mov
xchg
rol
fimuls
mov
lds
shr
inc
int3
popf
hlt
mov
arpl
icebp
in
and
add
sbb
ja
jns
je
add
xor
push
adc
adc
inc
fwait
lahf
or
and
and
and
adc
cmp
jmp
xor
add
lahf
xor
out
cmp
inc
lods
shll
pop
mov
gs
xchg
scas
sub
cmp
loopne
int
jns,pn
sbb
scas
xor
ret
repnz
fmull
imul
inc
sub
into
inc
jo
icebp
push
add
push
mov
pop
mov
sub
in
push
sbbb
mov
mov
addb
dec
cs
sbb
cmp
insb
loop
sub
jecxz
xchg
insb
mov
lock
lds
pusha
xor
cmp
stos
cmp
enter
inc
xchg
ds
cmc
in
sbb
pop
sub
adc
lea
shll
pop
aad
mov
xchg
fldcw
ficompl
jnp
inc
cs
sub
repz
dec
mov
cmp
mov
mov
push
stc
icebp
scas
icebp
lds
ljmp
lcall
das
dec
cld
mov
jge
xchg
mov
dec
mov
repnz
iret
fiadds
push
data16
push
cmp
ds
xlat
jl
xorl
out
test
inc
les
lahf
andb
lret
lcall
rclb
sub
lock
adc
jno
lock
pop
jecxz
ss
shr
lods
push
adc
leave
push
mov
dec
imul
lods
mov
add
xchg
sbb
dec
push
mov
push
cmovp
stos
jae
inc
and
xor
arpl
andb
jnp
aad
rorl
fldt
push
fs
repnz
xor
loopne
or
outsb
rol
cld
mov
add
xchg
loope
movsb
addr16
mov
jb
sub
xlat
out
xchg
test
pmuludq
dec
ss
int
or
xchg
ficompl
icebp
out
and
sub
loope
mov
lret
push
jno
xor
mov
jns
mov
and
xchg
add
repz
int
fsubs
pop
sub
roll
pop
sahf
gs
stos
xacquire
out
pop
aam
sub
aaa
mov
sbb
xchg
push
mov
and
mov
aas
xchg
xchg
in
lea
inc
cs
sbb
leave
scas
mov
push
mov
mov
pusha
push
inc
add
ret
outsb
push
loop
les
addl
push
jl
jae
xchg
nop
mov
dec
adc
dec
push
jge
or
jl
test
push
jae
ret
icebp
into
inc
jae
push
or
movsb
pop
jmp
jmp
jns
subb
orl
push
jmp
std
and
or
fsubs
push
fs
push
in
pusha
dec
fcmovnbe
push
sbb
xlat
les
icebp
pop
jno
dec
pop
lahf
loope
push
mov
gs
ja
roll
test
notl
push
xchg
xchg
mov
xor
and
or
xchg
mov
repz
insb
ds
pop
lock
push
mov
jno
loopne
mov
jle
dec
aam
jbe
xor
mov
push
mov
mov
xchg
xchg
sbb
mov
maxps
sbb
test
scas
add
jnp
xchg
dec
fidivrl
test
fisubs
pop
jp
cmp
addr16
call
adc
cli
xchg
test
jl
and
cli
push
cwtl
lret
mov
adc
adc
test
dec
idivb
addr16
lods
js
add
clc
ljmp
pavgw
or
adc
jne
into
stos
in
ret
sub
insb
jecxz
lea
dec
xchg
inc
jge
pop
xchg
fiadds
xchg
push
pop
cmp
cs
dec
cmp
fcomi
xchg
cld
push
jl
fnstsw
lods
dec
pushf
mov
mov
scas
inc
fildl
mov
test
jp
pushf
iret
dec
push
add
mov
int3
or
mov
xor
lock
cmp
nop
in
loop
dec
pop
enter
daa
imul
jl
and
mov
sub
rol
push
lret
mov
out
and
test
add
mov
subl
mov
dec
fdiv
cmp
jb
test
movsb
rcrl
mov
imul
adc
push
out
popa
mov
les
cmp
jge
into
fbld
test
xchg
jns
pop
out
stos
pop
push
in
lods
xor
int
in
in
push
fidivl
jno
je
lea
movsb
cmp
and
je
iret
cmp
je
jp
jmp
lods
and
mov
repnz
popf
xorb
stos
scas
mov
and
inc
mov
push
add
lds
inc
leave
jp
push
and
mov
das
mov
jl
xlat
scas
or
ret
repz
lds
mov
insl
test
cwtl
xchg
xor
xchg
mov
out
jg
daa
in
cmpsb
xchg
or
sbb
mov
pop
dec
sti
imul
in
popf
sbb
pushf
loopne
subl
sbb
stc
std
mov
inc
add
pop
and
cmpsl
xor
sub
in
xor
stc
enter
adc
pop
test
pop
mov
inc
aad
repz
cmpsb
push
mov
orb
jmp
xor
dec
pop
dec
cmp
inc
mov
and
jae
adc
add
inc
out
iret
xor
xor
jl
lock
imul
dec
adc
xchg
scas
insb
dec
roll
aad
sub
daa
addb
or
mull
icebp
out
gs
jnp
stos
jno
test
dec
addr16
cmpsb
out
add
shlb
inc
xchg
popa
inc
cmpsl
test
ja
pusha
pop
cli
lods
ja
cwtl
rcrb
sbb
dec
aas
xor
out
test
out
or
iret
mov
jno
movsb
cmpsl
mov
push
sbb
jg
push
les
in
pop
xor
in
fldcw
out
ret
fsts
cltd
sahf
xor
push
cmp
and
bound
and
aas
mov
jge
clc
ja
push
ret
fcomps
adc
mov
mov
popf
ficompl
dec
fnsave
call
icebp
cmp
inc
es
mov
or
lret
jecxz
mov
mov
mov
push
pop
jne
cwtl
sbb
mov
arpl
jp
xlat
clc
sub
outsl
orb
sub
add
mov
daa
push
pop
test
je
jl
sbb
mov
enter
ss
enter
ss
push
out
mov
xchg
inc
int
or
addr16
xchg
push
cmp
mov
cmpsl
fsubrs
out
pop
jg
les
inc
or
mov
pop
popa
or
xor
push
xlat
mov
fmulp
test
pop
insl
lea
mov
std
and
int
lods
add
jle
js
in
movsl
mov
out
std
adc
xlat
pop
ds
aaa
fsub
inc
adc
mov
hlt
mov
mov
jne
mov
imul
mov
jbe
inc
and
mov
mov
leave
cltd
xchg
sbb
sahf
adcb
cltd
mov
cs
push
sub
push
dec
push
in
xlat
pop
push
mov
jne
sub
add
or
cmc
stos
sub
inc
pop
dec
std
mov
or
mov
loope
in
add
imul
or
pop
push
gs
mov
jnp
rcrl
mov
inc
push
repz
jecxz
inc
daa
sahf
sub
xor
adcl
orl
cmp
cld
pop
mov
sub
je
ret
in
jne
push
imul
stos
push
xor
sahf
or
jns
mov
or
rclb
icebp
in
inc
ljmp
xchg
and
jno
test
stos
add
ficoms
adc
scas
popa
je
ret
xchg
adc
aaa
mov
mov
lret
mov
outsl
test
sbb
sbb
jl
cld
jg
and
inc
dec
nop
fsts
jb
adc
cmc
inc
sbb
push
cmp
insb
or
mov
dec
inc
clc
stc
jl
lea
mov
dec
sbb
mov
inc
cmp
in
mov
insb
or
loope
adc
push
dec
bound
pop
adcl
movsb
jae
aas
bound
add
aas
fwait
mov
mov
test
call
cmp
sti
mov
inc
xchg
js
hlt
into
mov
xchg
and
unpcklps
xlat
push
negb
push
pusha
ret
andl
ss
popf
push
test
xchg
jmp
cwtl
inc
aas
xor
push
jecxz
call
mov
mov
mov
sub
fprem1
pop
loopne
mov
fsubs
or
dec
lock
pop
add
inc
fstps
jmp
inc
xchg
sub
mov
roll
in
mov
mov
scas
leave
les
mov
mov
jae
sahf
or
jle
dec
mov
jns
and
fisubrs
add
push
adc
cmp
nop
adc
aas
xchg
push
xchg
push
insl
or
stos
pusha
pop
insl
lock
mov
cwtl
std
sti
pop
insl
xor
mov
push
mov
cmp
add
or
lods
dec
sarb
gs
dec
push
mov
aam
dec
iret
xchg
cwtl
push
mov
jo
pop
dec
xchg
outsb
mov
push
cmpsb
es
push
pop
inc
hlt
push
mov
xchg
ja
dec
imul
mov
fidivl
ds
mov
cmp
xor
dec
cmpsl
cltd
aas
push
mov
inc
in
xchg
mov
aas
inc
push
sbb
fimuls
imul
jno
mov
test
leave
fmul
popf
xor
imulb
aas
sbb
cltd
popa
loop
jnp
add
gs
or
out
addl
sub
aam
pop
test
cmp
rcr
or
mov
lock
jne
jg
subb
fsts
fmull
imul
xchg
inc
mov
cmp
popf
in
shll
and
cmp
mov
jecxz
int
mov
jl
rcrb
sbb
sub
sub
lcall
icebp
test
stos
mov
mov
bound
mov
stos
imul
aam
leave
lahf
cld
lcall
or
sahf
sbbb
lahf
dec
mov
cmpsb
in
and
rorl
sub
mov
int3
std
add
hlt
aam
mov
dec
jl
mov
frstpm(287
jg
pop
inc
outsb
push
dec
inc
cwtl
xlat
cmpsl
mov
nop
jle
and
mov
shll
loop
fidivrl
push
xchg
jle
call
mov
xchg
das
push
shll
test
stos
mov
adc
jno
xor
popa
mov
mov
in
add
into
pop
adc
cmp
pop
push
inc
inc
jae
fstl
mov
push
icebp
jle
inc
sub
dec
inc
mov
aaa
stc
inc
sub
fcomps
int
push
mov
push
xor
mov
rcrl
aas
outsl
leave
dec
xchg
push
dec
arpl
add
mov
fdiv
jo
mov
pop
pop
push
enter
jge
addr16
mov
mov
int
into
fimuls
movsl
mov
dec
sub
push
or
pushf
clc
cmpb
or
sbb
pop
in
jmp
fcompp
xor
fimuls
adc
inc
dec
stc
ds
push
paddw
sarl
mov
loope
sbb
push
push
out
in
pop
sbb
sub
sub
cli
mov
leave
ret
xchg
cmp
daa
std
idiv
lcall
adc
je
mov
insb
push
ljmp
stc
shl
add
stos
sbb
xchg
mov
mov
sahf
xlat
ret
mov
negb
xchg
test
inc
test
sbb
outsl
push
jb
ja
jns
les
lods
lret
or
sahf
fs
test
aam
ret
stos
jl
or
stos
stc
inc
sub
es
cmpsb
imul
out
inc
xchg
or
push
call
pcmpeqw
adc
ret
daa
and
cwtl
mov
jns
fcompl
push
add
fsubp
ja
pop
bound
fldl
jecxz
push
test
stos
fdiv
popl
pop
int3
test
stos
mov
mov
movl
inc
lds
mov
fwait
jl
xor
ret
jb
mov
add
orb
bound
bound
fnstcw
out
ret
std
ss
dec
cmpl
orl
mov
mov
aam
loope
adc
dec
add
mov
in
xchg
adc
call
dec
pop
push
mov
xor
imul
add
mov
sub
fyl2xp1
jno
add
stos
cmp
mov
jnp
pop
cmp
push
into
jmp
sub
shl
inc
dec
xor
add
lea
adc
pop
jmp
rorb
sahf
ja
add
jmp
pop
jnp
xchg
jp
adcb
fcmovnb
sub
in
lods
pop
mov
test
xchg
push
je
insb
les
test
roll
int
mov
cmp
add
addl
icebp
add
lret
dec
xorb
mov
fs
adc
pop
push
and
inc
jb
jl
js
add
mov
push
lds
jle
dec
adc
bound
mov
fwait
imul
int3
test
dec
add
push
sub
jg
sub
pop
adc
xlat
mov
xor
cmp
xchg
sbb
jmp
sbb
add
add
lods
sub
dec
jecxz
icebp
xchg
xchg
xor
fmull
gs
iret
sarl
push
pop
and
fisubl
decl
shll
cmpsl
pushf
jge
jb
ficompl
jg
clc
add
and
xor
dec
push
mov
stc
jle
push
or
push
xorw
sub
mov
mov
fldenv
jp
cltd
ljmp
fidivrs
lret
sbb
icebp
cmp
jmp
inc
inc
dec
lret
sbb
and
fbstp
gs
or
fidivrs
lcall
dec
inc
cmp
push
or
hlt
int
cmpsl
sbb
and
sarb
cmp
sbb
adc
mov
jnp
mov
push
xlat
mov
push
xchg
lods
xor
dec
mov
pop
popa
cmc
data16
je
sub
loop
inc
sub
pop
xchg
jae
pop
add
mov
xchg
mov
pop
mov
and
dec
mov
mov
enter
xchg
mov
adc
and
pop
add
cmpsb
adc
mov
arpl
cs
int3
and
pop
mov
xor
and
inc
inc
jmp
ja
mov
xor
xchg
jno
dec
push
xchg
arpl
fs
fcmovnb
add
push
push
into
mov
sbb
sbb
pop
cs
push
pop
hlt
mov
imul
mov
loope
or
ja
xchg
push
rcll
daa
xor
cmc
lods
mov
mov
sbb
lods
lds
lret
fistps
das
mov
movsl
stos
repnz
iret
popf
xchg
test
aad
pop
je
loope
int3
mov
mov
sti
mov
push
mov
push
mov
mov
mov
push
adc
cmp
jmp
xchg
sub
repnz
adc
not
or
ss
in
jns
mov
rol
filds
in
test
xchg
sbb
and
adc
cwtl
push
outsl
fadds
mov
stos
dec
fld
shlb
adc
ret
notb
jae
pop
or
lahf
push
in
insl
adc
jbe
es
and
mov
xchg
imul
jnp,pn
icebp
push
cmp
ret
cmp
shlb
call
cs
cli
dec
dec
gs
mov
xor
and
mov
adc
mov
cltd
outsl
daa
xchg
sbb
push
adc
je
shrb
push
inc
scas
mov
jns
dec
jo
sti
cwtl
cmpsw
mov
jo
push
inc
pop
cltd
inc
lods
mov
in
push
cli
iret
and
nop
or
push
push
xor
xor
mov
mov
lcall
adc
jb
or
scas
imul
imul
lods
add
fisttpll
mov
dec
jl
loopne
sub
sti
sbb
xor
xchg
jbe
out
jnp
dec
sub
cli
test
push
mov
dec
pop
test
test
jl
repz
jnp
dec
mov
or
add
pop
dec
push
int3
fwait
outsl
sar
cli
fcom
push
scas
fmul
mov
int
mov
shr
adc
jo
add
outsl
aad
add
adc
incb
cld
mov
xor
pop
xchg
lods
mov
xchg
adc
nop
cmp
pop
dec
lea
lcall
cmp
test
scas
or
pusha
xchg
inc
cmp
mov
mov
aad
jl
icebp
and
xchg
push
push
jns
dec
rorb
jmp
cltd
testl
or
add
mov
test
sbb
xchg
push
jno
jo
push
cltd
fadds
xor
and
jns
std
repnz
lds
sub
loop
ds
pop
scas
int3
addr16
mov
out
and
inc
lret
xchg
mov
loope
stos
mov
aam
jae
repnz
push
pop
rcrl
mov
in
push
shl
loope
jnp,pt
lcall
fwait
repnz
xchg
imul
pop
xchg
enter
loopne
aam
loop
push
jmp
call
call
je
mov
cld
je
popa
subl
adc
mov
jnp
push
push
subb
jbe
shlb
mov
insl
push
arpl
mov
or
xchg
xchg
arpl
jg
and
xchg
and
pop
push
popa
leave
xor
js
pop
sub
push
cwtl
imul
sub
sbb
loope
mov
leave
mov
xor
stos
pushf
movsl
out
lcall
mov
in
jecxz
xor
push
xchg
imul
out
jle
cli
dec
and
jge
lds
sub
pop
cwtl
fistpl
cs
mov
mov
pop
idivl
in
mov
in
fdivrp
out
insl
mov
leave
cwtl
sbb
mov
shll
movsb
aaa
cltd
lcall
dec
mov
jo
push
lock
fs
shll
fcmovne
adc
mov
imul
or
sbbb
dec
std
jae
and
out
cmp
pop
or
arpl
cmpsl
loopne
aam
cmpb
add
mov
mov
fwait
in
add
pop
mov
jl
dec
push
fs
jg
call
pop
gs
lcall
repnz
pushf
ja
out
adcl
add
push
mov
cli
call
fbld
push
flds
sbb
insb
call
sub
in
mov
rolb
pop
sarl
or
mov
mov
mov
pushf
cld
outsb
scas
jnp
outsb
aaa
push
icebp
sbb
pop
mov
or
test
xor
imul
xor
fldt
decl
roll
or
lret
lods
sbbb
mov
mov
adc
adc
fidivrl
add
dec
fistpll
sarl
pop
mov
andl
enter
scas
push
ret
movsl
mov
fdivrl
sub
add
and
adc
mov
imul
jbe
pop
stos
push
iret
cld
inc
pop
mov
xchg
xchg
push
cwtl
mov
add
jo
jnp
mov
pushf
mov
and
jns
sbb
push
repz
lahf
xchg
aas
gs
mov
and
sti
lcall
sti
jo
inc
add
daa
cwtl
add
int3
loope
push
xchg
fwait
enter
mov
mov
inc
jmp
dec
push
rcll
xchg
push
xchg
adc
xor
push
add
mov
or
cmpsb
mov
push
popl
repnz
test
mov
shll
jle
add
jo
scas
cli
cmp
push
mov
xor
cmpsl
adc
dec
adc
inc
cmp
push
cmp
in
stc
push
scas
xchg
clc
cmc
mov
adc
cmp
fldlg2
pop
mov
xor
leave
std
movsb
scas
sbb
movaps
insl
sub
push
insl
jl
ss
add
test
test
fs
adc
mov
scas
int3
shl
xor
jnp
push
xor
xchg
subb
addr16
mov
add
lds
pop
adcb
xor
dec
dec
rolb
or
arpl
test
sahf
sti
xchg
mov
xchg
loopne
cmpsb
and
ljmp
out
pop
jmp
push
mov
or
cmp
cmp
pop
jmp
into
add
inc
xchg
cld
dec
shl
ss
add
inc
popf
std
ja
in
jae
adc
repz
stc
lea
lds
das
xchg
bound
insb
sub
xchg
inc
dec
data16
or
mov
add
repnz
xchg
lcall
fistps
gs
icebp
sub
sti
pop
imul
mov
xor
sbb
pop
xchg
fs
mov
in
daa
sbb
or
aas
or
dec
sbb
pop
mov
push
and
pop
lock
fisubs
nop
xor
daa
mov
and
jmp
cmp
xlat
data16
fdivr
xlat
outsb
sete
sub
xorb
jge
cwtl
stos
insb
es
add
pop
dec
andl
push
push
outsb
sbb
shlb
sbb
inc
dec
outsl
xor
bound
push
stc
or
mov
sub
add
enter
cmp
sbb
push
fildll
test
lea
inc
les
ds
or
lea
in
loop
shr
push
mov
test
xchg
jmp
cwtl
movsl
int
mov
push
add
or
or
push
adc
mov
imul
sub
aaa
clc
mov
out
jbe
mov
repz
fcmovnbe
outsl
test
cmp
lret
cld
adc
not
add
popl
icebp
pop
fldenv
test
fwait
ljmp
pop
sbb
inc
sub
push
mov
xchg
sub
or
pusha
insl
fnstcw
xchg
push
shl
mov
or
aas
mov
xchg
mov
dec
call
sarb
push
div
jecxz
cmp
mov
jg
push
or
fcoms
mov
xor
imul
popa
pushf
jmp
sbb
mov
mov
dec
or
fldt
aad
sub
fldcw
sbb
mov
xrelease
cmp
movsb
jne
adcb
inc
testb
mov
add
mov
popf
stc
cmc
push
xor
fcmovu
jae
lret
mov
mov
insb
aas
jne
jns
lods
mov
mov
pop
data16
orb
sub
mov
adc
sbb
cld
scas
aam
adcl
sbb
mov
and
and
fsubrl
jnp
xor
jmp
insl
int3
rcrb
lret
mov
sbb
xchg
ret
test
test
mulb
or
bound
push
mov
mov
pop
mov
or
int3
outsb
fs
fistpll
subb
scas
popa
push
in
push
and
insl
xchg
lods
add
jae
mov
push
lea
dec
mov
iret
jbe
je
sub
inc
arpl
cmp
adc
ret
adc
jne
scas
pop
push
rcrb
fsubl
lret
push
in
testb
int
out
call
rcr
in
ja
adc
pop
fnsave
xor
adc
jb
and
shll
cld
push
push
pop
loope
jne
call
ja
jmp
stc
in
mov
push
rcl
sbb
xorl
pop
leave
inc
lods
std
leave
mov
addr16
xchg
imulb
outsl
mov
lret
and
enter
add
iret
lahf
inc
sub
hlt
pop
scas
push
loop
push
pop
insl
mov
inc
mov
xor
pop
in
add
fwait
pop
hlt
idivl
mov
lods
lock
repz
fistps
pop
jl
loopne
xchg
int3
shrl
mov
pop
loop
dec
insb
sub
outsl
sub
in
je
aaa
lods
shll
stos
in
sbb
loop
fisttpll
psubusw
push
sub
mov
outsb
xor
mov
sbb
lds
mov
jle
roll
ja
cs
shl
jg
enter
push
sahf
out
xchg
add
sarl
push
inc
aad
rclb
mov
test
cmp
mov
adc
dec
inc
aam
pop
imul
push
jns
pop
adc
mov
or
fmull
imul
movsb
test
cmp
pop
or
xchg
out
xor
ss
std
xor
in
popa
and
mov
movsb
jmp
or
jne
aad
add
in
dec
mov
xchg
dec
inc
mov
xor
add
add
shrb
push
mov
insl
imul
jo
cmp
add
or
int3
jmp
les
push
clc
ret
rcrb
mov
pop
pop
std
pop
mov
jns
xchg
or
jb
push
es
mov
movsb
mov
ret
push
inc
test
jnp
dec
mov
test
and
mov
imul
sub
shlb
pop
sarl
int
inc
lahf
pop
inc
mov
cs
and
clc
movsl
mov
sub
xchg
jno
icebp
fucomi
rep
pop
dec
fmulp
xchg
add
fdivrp
pop
and
and
dec
add
sub
adc
mov
push
mov
mov
xchg
adc
mov
pop
mov
jle
or
xchg
cwtl
adc
mov
or
push
jo
push
test
xchg
scas
or
pop
push
iret
das
pop
inc
cmovg
push
push
adc
cld
lea
sub
adc
pop
leave
addl
cmp
push
in
xchg
aaa
inc
xchg
fcmove
push
jecxz
shrl
pop
cmpsl
sbb
adc
popa
aad
lret
clc
lret
test
mov
sub
adcl
dec
ret
lds
cmp
inc
insl
fdivrs
psrlq
nop
inc
and
xchg
pop
fidivl
pop
fwait
repnz
shlb
xlat
inc
movsl
mov
jnp
jmp
add
sbb
cwtl
add
pop
test
fiaddl
push
push
cld
cmc
xor
xor
xor
rcll
call
push
or
push
push
cmp
sub
out
in
sub
push
push
in
inc
mov
inc
cmpl
or
into
sub
xlat
scas
xchg
sub
ljmp
sub
js
add
icebp
pop
pop
aas
fidivl
imul
roll
imul
add
outsl
lods
push
cltd
insl
add
mov
mov
jmp
in
nop
shr
loopne
dec
adc
jae
jne
in
push
aaa
lock
f2xm1
aam
cmp
rorb
sti
add
add
add
mov
pop
jg
aad
test
dec
daa
sub
mov
mov
sti
pop
dec
ffreep
pop
pop
inc
stos
jecxz
movsl
lcall
jmp
ret
or
stc
fnstcw
dec
or
out
jge
mov
mov
inc
and
jle
subl
in
inc
arpl
rcll
out
sub
xchg
sarb
sbb
cmp
mov
push
xlat
push
fbstp
and
adc
lods
mov
mov
shlb
mov
aas
lret
jecxz
into
imulb
jne
addr16
stos
call
imul
in
push
add
mov
cpuid
mov
push
jle
jno
cld
mov
stc
mov
das
cs
xor
push
fsubrp
mov
test
test
add
and
inc
int
leave
inc
xor
cmpsb
mov
stos
sbbl
mov
mov
jne
lea
and
inc
aam
aaa
pop
mov
icebp
out
push
jae
pusha
orl
sbb
cmp
pop
lods
iret
mov
jecxz
daa
fmuls
and
push
adc
jno
aas
xlat
mov
jns
pop
lret
mov
pop
mov
fwait
in
mov
pop
add
jl
and
test
or
int3
fwait
jecxz
int
test
pop
mul
add
dec
lahf
xor
xlat
push
push
subl
mov
or
mov
in
adc
mov
pop
cmp
aam
lret
addb
push
add
and
hlt
frstor
cs
or
dec
xor
and
mov
out
add
dec
call
cli
call
xchg
test
into
push
inc
testl
not
xor
push
and
jno
jl
pop
data16
into
insb
fwait
into
arpl
xchg
fcomi
push
pop
scas
cmp
jmp
inc
xchg
arpl
pop
inc
lods
fisubs
pop
inc
adc
push
jne
mov
xchg
stos
stos
mov
jnp
and
stc
mov
out
jmp
push
insl
test
adc
mov
es
add
stos
jne
xor
cmp
ss
js
push
mov
out
pop
adc
and
sub
adc
sub
cmc
sbb
out
add
test
rorl
jb
decb
jbe
leave
cmc
mov
outsb
lock
push
mov
repz
or
je
mov
test
roll
fnstenv
adc
enter
mov
dec
xor
cmp
fnstenv
xchg
pop
out
jg
mov
cmpsb
ret
data16
nop
adc
mov
fwait
adc
push
inc
nop
mov
pop
cmp
lods
xchg
pop
or
sbb
fsubrs
rclb
stos
orb
nop
xor
or
loope
stc
and
lret
inc
push
sbb
out
loopne
jp
pop
xlat
xchg
testb
mov
das
mov
inc
pusha
ljmp
sahf
es
insb
pop
cmp
push
hlt
jl
mov
les
mov
shll
data16
loopne
push
xor
ds
dec
test
into
or
icebp
loop
pop
adcl
mov
cmp
lcall
mov
insl
in
dec
fdiv
div
inc
push
inc
out
adcb
gs
cltd
cmp
jge
fbld
in
ss
lea
push
out
in
and
imul
xchg
pushf
mov
jge
adc
pushf
mov
test
and
test
mov
in
lcall
sbb
and
in
mov
mov
dec
icebp
jns
aad
je
call
out
or
fidivrs
mov
jnp
cmp
int3
xchg
call
cmpsb
repz
push
add
cmc
lcall
push
in
je
add
imul
fcomps
les
fmull
outsb
mov
lods
add
bt
scas
dec
mov
stos
test
add
sub
in
sbb
insb
repnz
int3
gs
mov
mov
lea
dec
sbb
adc
or
nop
stos
push
jle
shlb
cmp
push
xchg
aaa
and
lds
xor
mov
jp
dec
xchg
push
hlt
jns
cmpsb
leave
or
and
repz
add
lret
pop
adc
jnp
mov
pop
xor
mov
xor
jns
jno
setno
push
shlb
test
out
ficoml
jge
decl
and
cwtl
mov
cmc
pusha
aad
or
xor
jge
fnstsw
pop
push
test
mov
aad
mov
push
and
imul
pop
adc
int
or
nop
cld
mov
out
ss
mov
xchg
nop
pop
jecxz
or
lret
add
in
lret
aad
inc
jl
cmpsl
sbb
divl
push
and
insl
ficoms
or
xchg
das
pushf
or
jno
or
adc
pop
in
nop
neg
outsl
sub
push
adc
mov
push
push
popa
out
rcl
inc
adc
jp
mov
jecxz
ficoml
inc
icebp
popa
dec
mov
sti
xor
repnz
xlat
movsb
inc
pop
sarb
popf
gs
lods
aaa
insl
iret
xchg
add
outsl
sub
or
test
sub
lods
sbb
mov
add
cmpl
push
push
cmp
test
xchg
mov
mov
fs
fnsave
xchg
test
int3
into
mov
ljmp
push
ret
add
dec
movsl
int3
icebp
xor
imul
sbb
cli
mov
dec
nop
sbb
or
int
lea
dec
add
and
rorl
testb
cli
movsl
enter
shlb
cltd
adc
mov
cwtl
enter
popf
dec
ds
dec
std
ja
mov
adc
mov
lahf
mov
fcmovnu
icebp
push
sub
test
xor
mov
jmp
test
mov
iret
cmp
pop
jns
imul
int3
nop
into
orb
xor
or
mov
add
add
fmulp
mov
or
jecxz
out
push
push
lea
test
cld
insl
cmpsl
push
inc
incl
pop
ficomps
and
xlat
rcrb
mov
mov
jb
add
or
cmp
push
jge
and
jb
lods
lds
push
repnz
lahf
jecxz
lods
mov
jp
ficoms
out
std
inc
xor
mov
xchg
mov
fimuls
mov
inc
add
adc
push
scas
add
cmpsb
fs
test
jae
rcrb
pop
popf
ja
ds
mov
jb
sarb
sbb
test
addr16
cmp
pop
and
lcall
xchg
loop
in
out
mov
jle
enter
es
sar
in
rorb
ja
xchg
dec
gs
pop
push
lock
sub
in
jl
cwtl
xchg
popf
fisttpll
cmpsb
mov
cmp
into
imul
adc
imul
das
inc
notl
sti
xchg
sbb
aas
lcall
stos
leave
jg
test
bound
xchg
imul
and
push
fnsave
orb
bswap
xor
mov
xlat
add
xlat
or
jo
add
mov
orb
mov
clc
add
mov
xchg
cmp
insl
xorl
clc
enter
in
imul
jle
mov
test
mov
rcl
into
xor
sbb
lods
cmp
jne
push
mov
mov
pop
mov
sbb
inc
add
je
sub
add
xor
jne
add
mul
outsl
fcompl
push
pop
hlt
and
int3
add
out
imul
xchg
sbb
jmp
inc
sub
jae
jmp
mulb
aas
pusha
jnp
in
xchg
repnz
daa
or
daa
fwait
je
pop
shlb
lahf
hlt
add
fs
jecxz
xchg
mov
inc
in
rcll
stos
push
push
bound
xchg
push
lds
jns
add
test
lock
sbb
dec
lea
xchg
or
bound
inc
imul
adc
push
mov
mov
pop
push
mov
mov
xor
loope
inc
xchg
xchg
stos
xor
inc
mov
int3
leave
jo
shlb
mov
adc
pushf
lahf
mov
addl
mov
cmp
out
pmulhw
icebp
filds
sbb
ret
mov
js
subb
inc
sbbb
mov
popa
xchg
fistps
data16
ficomps
xchg
stos
pop
iret
loop
and
push
filds
loopnew
push
adc
popa
and
fisubrs
add
cmp
sub
adc
adc
adc
sahf
sarl
shlb
pop
and
clc
bound
outsl
adc
stos
and
jb
sub
popf
jmp
leave
mov
adc
mov
outsl
cmp
cld
test
inc
jg
dec
push
sub
mov
sbb
sbb
aas
mov
dec
out
sysret
or
sti
fwait
cmpsl
xchg
loop
enter
mull
jmp
dec
lea
out
jb
out
jecxz
push
movsl
dec
cmpsl
test
mov
pop
ds
jnp
cld
test
mov
fdivrs
pusha
cmp
cld
fisttpl
xchg
clc
adc
in
adc
xlat
shll
mov
test
pop
dec
add
aaa
cmp
mov
adc
ds
ja
push
repnz
cmpl
jle
mov
and
dec
stos
dec
push
push
adc
jecxz
cli
push
xor
xchg
cmpsb
fstl
cmp
xchg
jp
mov
fdivr
mov
add
add
scas
mov
and
movsb
xchg
fbstp
repz
and
stos
orb
sub
and
mov
les
movsb
pop
and
and
lcall
test
cmpb
fcompl
int3
mov
adc
jb
mov
adc
into
inc
rorl
xchg
divb
xchg
popf
sbb
cmpl
sub
cmp
gs
cmpl
add
leave
dec
jle
push
pop
dec
in
add
rcll
sbb
and
popa
xchg
ja
dec
out
mov
test
andl
lret
pop
xchg
dec
or
push
pop
mov
rcrl
popa
mov
sbb
std
andl
or
pop
popf
xor
push
pop
pop
add
inc
mov
rcrw
pop
xchg
outsl
sbbb
mov
ss
mov
out
push
int
aad
lahf
jecxz
mov
xchg
in
arpl
clc
pop
push
data16
or
mov
sbb
pop
dec
mov
ret
lret
outsb
push
in
and
nop
sbb
sbb
dec
or
aaa
add
ljmp
leave
iret
mov
sub
push
dec
xor
jg
and
cwtl
dec
sbb
jle
cmpsl
jp
in
loop
mov
repnz
shl
ret
adc
dec
xchg
or
or
out
hlt
cmpsl
mov
adc
adc
pop
sub
add
xchg
xchg
movsb
imul
dec
repz
mov
cmp
pop
jge
sbb
xchg
jmp
icebp
mov
sbb
sbb
or
out
or
insb
cmc
sbb
enter
rcrb
cltd
xchg
adc
inc
cmpsb
jno
xchg
lds
int
jecxz
sub
xchg
shlb
dec
jecxz
jle
test
sub
insb
loope
daa
hlt
bound
ljmp
jo
xchg
or
pop
push
push
xlat
add
movsl
das
inc
dec
xor
ret
add
inc
in
inc
loope
popa
sbb
jne
xor
and
mov
mov
sub
in
sbb
dec
sbb
stos
inc
fwait
sub
cmp
insl
mov
lahf
bound
movsl
out
adc
mov
push
xor
push
jne
push
mov
mov
fyl2xp1
sbb
test
jno
push
cmp
pushf
ror
and
lahf
rolb
adc
outsb
dec
addr16
xor
xlat
xchg
jmp
jnp
adc
push
mov
xor
cmp
xchg
inc
rcrl
sbb
inc
inc
jnp
push
xchg
faddl
sbb
add
sti
inc
loope
aaa
add
jle
daa
or
clc
push
mov
or
push
jae
sbb
gs
mov
in
and
push
addr16
push
out
ds
shlb
bound
sub
sbb
push
mov
push
fildl
push
or
cmc
jae
sub
xor
jns
xor
jmp
js
mov
cwtl
fcompl
aam
out
adc
cmpsl
gs
aaa
jns
ljmp
dec
xchg
jne
push
sub
and
dec
insl
rcrl
addl
mov
das
in
jb
add
adc
repnz
xchg
pop
fbstp
xchg
push
ljmp
sbb
roll
sbb
nop
out
mov
insl
cmp
lods
loopne
je
js
jnp
sti
mov
dec
push
add
aaa
in
enter
pop
out
sub
bound
or
mov
dec
push
stc
inc
fldl
and
pop
dec
mov
out
jecxz
sbb
inc
xor
fwait
mov
xor
ljmp
cmp
imul
jl
cmp
mov
out
dec
lret
nop
mov
jle
pusha
ds
add
inc
push
add
sti
sbb
js
dec
jbe
leave
push
inc
pusha
sahf
jle
or
fsubl
and
xor
cmp
inc
pop
dec
stos
xchg
mov
incl
lea
sbb
sbb
mov
lods
cmp
push
xchg
mov
iret
and
gs
outsb
in
jne
lds
imul
mov
test
aad
ficompl
outsl
mov
xor
enter
cli
fisttps
ret
faddl
movsl
xchg
sub
ret
add
cmp
inc
pop
movsl
xchg
out
and
mov
ret
out
sbb
ret
inc
and
cmpsb
sbb
jle
add
jbe
fnstenv
cmpsb
cmp
data16
ret
adc
cmpb
scas
jle
mov
ss
mov
jb
dec
mov
push
jno
push
jl
repnz
inc
jbe
insl
and
pop
cmpsb
xchg
loopne
ret
dec
ja
sbb
adc
cmp
mov
neg
fstl
f2xm1
test
adc
jle
jae
push
inc
ljmp
pop
stos
add
dec
daa
dec
ret
popf
or
movsl
jae
cltd
and
adc
stc
xchg
sbb
pop
ljmp
shl
out
out
testb
pop
fnop
gs
bound
mov
cmc
add
clc
mov
adc
imul
loopne
idivb
cmp
mov
inc
dec
xchg
adc
add
arpl
cwtl
xlat
mov
xor
cmp
insl
mov
pop
sub
imul
cwtl
cltd
pop
into
lahf
dec
inc
adc
icebp
or
cmp
xor
and
mov
lods
or
lcall
adc
xor
mov
jge
or
mov
loopne
push
outsb
nop
xchg
push
mov
pop
and
mov
push
int
pop
div
and
xor
test
dec
mov
lods
mov
and
inc
in
inc
es
adc
lcall
popf
into
fdivrl
lahf
jo
sub
dec
pop
sbbl
cmp
hlt
out
jnp
sub
dec
jecxz
jo
cmp
and
aas
pop
add
jnp
dec
cmpsb
jge
arpl
or
lods
mov
xor
sbb
or
out
test
inc
adc
xchg
std
and
scas
xor
outsb
jbe
daa
dec
lea
jmp
aad
leave
cmp
cmpsb
outsb
or
or
daa
iret
inc
pop
dec
shlb
xchg
insb
xor
sti
adc
int
mov
jns
lods
scas
pop
adc
sbb
js
inc
cmp
mov
insl
mov
sahf
int3
dec
sbb
sbb
dec
dec
mov
xor
and
fisttpll
testl
sarb
jmp
add
cwtl
std
lahf
test
outsb
cmpsb
push
je
fwait
adc
jmp
cmp
sub
dec
or
dec
mov
push
xchg
xor
fcmovb
in
sti
out
loope
cmp
in
push
mov
jge
test
cmpb
daa
ds
push
sbb
das
lret
cs
mov
hlt
inc
jnp
inc
xchg
bnd
int3
in
stos
es
xor
pop
shrl
arpl
and
fstpl
or
or
mov
sar
xchg
shrl
daa
dec
fcompl
lret
add
sub
inc
pop
out
mov
shlb
and
scas
in
push
mov
outsl
stc
out
sub
mov
mov
ss
mov
addr16
sbb
aad
push
adc
fldl
push
gs
jmp
sbb
pop
into
out
mov
xchg
push
pop
jne
sahf
lcall
mov
lock
popa
cs
fsubr
xor
cs
lcall
cld
out
cmpsb
rorl
pop
mov
stc
cltd
inc
lret
add
hlt
dec
in
movsb
sbbb
jbe
cld
je
movsl
rorl
cmpsl
mov
mov
dec
push
adc
es
mov
mov
cmp
and
dec
dec
dec
inc
int3
xchg
add
mov
mov
pop
movb
sub
into
mov
dec
je
loopne
addr16
push
outsl
orb
push
mov
cmp
inc
sbb
insl
iret
pop
cmp
xchg
cmp
pushf
imul
mov
sbb
ja
inc
outsl
fbld
sub
jno
mov
fs
inc
and
popf
mov
les
fidivs
cmp
test
sub
xchg
mov
xchg
fisubrl
xor
cli
jecxz
sti
js
addr16
lods
xor
push
inc
stos
addr16
test
mov
and
pushf
mov
imul
f2xm1
enter
cmpsl
ret
das
sub
addr16
sbb
aam
pushf
daa
cmpl
neg
out
fdivp
sbbb
pop
aad
ss
mov
jbe
inc
xlat
sarl
push
movsb
dec
jmp
push
notb
push
cwtl
popa
sbb
and
xchg
scas
or
rcrb
lds
jge
push
inc
cmp
lcall
xchg
mov
int
pop
or
mov
jae
xchg
add
je
inc
xor
jo
and
xchg
adc
mov
or
mov
lods
sbb
xchg
repnz
in
cmovo
out
pop
dec
fwait
jo
cmp
mov
popf
addb
rol
mov
iret
sbb
lret
leave
xor
mov
push
cmp
or
add
mov
sbb
fst
cwtl
out
jmp
sub
cmp
ds
mov
or
cli
lahf
arpl
jecxz
mov
jge
enter
je
in
sbb
rcrl
fistps
test
mov
in
out
sahf
clc
ror
jne
inc
adc
test
testb
fdivrp
inc
mov
pop
and
sarb
call
xchg
cmc
adc
roll
adc
sarl
sub
mov
jo
or
cmp
in
mov
clc
ljmp
mov
jecxz
jno
inc
lcall
cmpsl
fnsave
mov
adc
shll
push
add
es
pop
mov
mov
xor
jmp
orb
ljmp
insl
xor
lea
roll
and
xchg
mov
cld
das
orl
cmp
fistpll
pop
pop
mov
mov
inc
mov
lods
jecxz
stos
push
test
cmc
fstl
pop
mov
cmp
push
ljmp
div
add
cmp
scas
mov
fnstsw
out
push
and
in
aam
scas
fsubs
fmul
jno
hlt
xchg
dec
dec
imul
lods
fs
sub
stos
dec
int
repnz
jp
out
int
mov
loope
cmp
cmp
mov
xchg
mov
dec
sub
jb
test
mov
sub
dec
cmpsl
xchg
cmp
jo
sub
pop
ljmp
int
cmp
call
sub
pop
pusha
inc
jb
xor
mov
push
xchg
icebp
iret
imul
std
pop
push
dec
mov
or
jg
or
sub
and
cmp
movsb
aas
xchg
or
or
add
stos
popf
lahf
sbb
push
pop
inc
scas
pop
cwtl
imulb
dec
push
int
xor
aad
rolb
fxch
xchg
jg
mov
sbb
push
mov
sub
loope
dec
push
inc
lds
cmpsl
fistpl
xor
je
push
or
lods
pop
xor
jmp
push
iret
arpl
and
push
xchg
and
shrb
test
enter
lret
mov
cmp
dec
popl
cwtl
sub
push
in
and
loope
add
pop
repnz
fwait
test
popa
mov
cs
out
and
fisubl
out
add
sti
fildl
and
inc
mov
fs
mov
push
inc
test
in
mov
xorl
imul
repnz
inc
push
sub
add
rorb
or
sbb
add
inc
push
add
mov
ficoms
cmp
ljmp
out
inc
hlt
pop
call
ret
cmp
sbb
push
adc
mov
and
pusha
in
cwtl
cmp
repz
test
pop
jae
mov
jl
adc
xor
xchg
insb
pop
test
adc
mov
loop
or
jp
cmp
ret
int3
jmp
fistpl
xchg
out
inc
iret
ret
nop
lea
addr16
dec
push
sbb
sti
into
test
enter
stos
pop
pop
outsl
int3
pusha
xchg
or
inc
enter
sahf
decl
std
cmpsl
adc
mov
daa
cld
lret
lret
mov
das
add
shlb
loop
dec
jb
inc
cmp
mov
mov
mov
cmc
scas
shl
xchg
fstpt
sbb
ljmp
ret
test
subl
and
xor
shll
pop
xor
lret
shrb
stc
mov
push
out
fdivp
ficomps
xlat
push
stos
outsl
xchg
in
mov
or
imul
mov
mov
mov
jle
dec
push
cmpsl
idivl
insb
dec
test
mov
subl
scas
and
bound
xchg
inc
inc
pop
inc
lret
fcomps
mov
scas
test
push
imul
jno
push
add
les
shr
mov
imul
into
jmp
or
lds
dec
addr16
jne
pop
add
sbb
mov
push
sub
push
inc
jnp
fs
cmpsb
sub
fistpl
pop
pushf
mov
inc
or
lea
stc
enter
pop
je
test
inc
pop
xor
xchg
in
loope
sub
jg
xor
xchg
in
inc
movsb
jl
jp
jmp
popf
mov
lds
ljmp
fwait
cmp
pop
lock
test
mov
and
cmp
dec
mov
rcl
addr16
out
xchg
push
scas
xchg
lret
fs
jge
arpl
psllw
jb
mov
jecxz
inc
test
std
enter
std
add
inc
push
push
add
sub
repz
pop
jp
push
lret
movsl
xchg
dec
int3
inc
jge
pop
daa
xchg
xchg
loop
es
pop
xchg
gs
add
shlb
mov
int
aaa
mov
xlat
mov
lret
dec
movsb
xchg
movsl
sbb
sub
pop
mov
push
into
mov
scas
sub
mov
push
rcrb
cld
das
icebp
cli
test
cmp
mov
fbstp
pop
fstpl
inc
mov
inc
push
cmp
cmp
rolb
sbb
sbb
add
pop
test
or
lahf
jl
bound
cmpsl
jl
xor
stc
and
jae
add
inc
mov
dec
sub
and
mov
mov
aam
mov
xor
pop
daa
ds
lret
jmp
sub
out
xchg
xchg
out
cmpsb
pop
das
outsb
into
inc
decb
xor
sbb
sbb
xor
roll
cld
mov
fwait
mov
fwait
inc
rorb
ljmp
insl
aaa
mov
mov
mov
fidivrs
and
xor
jo
mov
in
loopne
cmp
push
sar
mov
testl
push
or
fwait
add
mov
sub
jb
scas
jno
cmpsb
lods
xchg
push
ja
or
subb
jnp
lcall
lret
in
sti
sbb
cmpsb
inc
das
pop
out
push
adc
cmp
inc
shlb
insb
xchg
inc
out
stc
in
out
mov
mov
dec
loope
cmpsb
mov
or
imul
stc
fsubs
push
aas
js
cmp
add
dec
fnstcw
xor
push
js
mov
push
jo
setnp
stos
cmp
pop
mov
nop
sbb
loope
sub
sub
lods
push
loopne
xchg
inc
enter
jb
pushf
mov
pop
fwait
xlat
jmp
test
xlat
jb
or
loope
ror
sub
mov
dec
out
or
lcall
icebp
mov
sub
dec
cs
repz
add
lret
shr
push
adc
les
cltd
test
aam
mov
mov
gs
push
lea
cmp
fldl
xor
out
es
loope
jne
pusha
in
pushf
dec
inc
xchg
xchg
inc
scas
or
dec
mov
movsb
andl
out
fdivrl
and
pop
jg
xchg
stos
jo
sbb
push
adc
pusha
rorb
and
shl
arpl
add
cltd
mov
jns
dec
mov
dec
inc
shlb
sbb
jno
popf
jg
fdivl
call
icebp
into
shlb
jle
xor
sub
lret
adc
in
xchg
adc
pop
ss
xchg
in
mov
rorl
jp
in
dec
js
andl
jl
xorl
dec
loop
pop
sbb
push
decb
and
ds
in
add
test
popf
les
xor
out
mov
sti
shll
push
sub
dec
enter
and
add
cs
jl
andl
jno
cmpsl
xchg
aaa
and
inc
cmpsl
rcll
mov
pushf
push
inc
mov
jge
sub
add
mov
xchg
mov
dec
push
adc
out
mov
les
push
push
imul
divb
iret
push
lcall
sti
out
test
out
pop
jbe
fidivs
sub
fildll
sbb
or
fists
xchg
dec
pop
test
jp
int
in
add
dec
loopne
mov
xor
fbld
dec
jl
jns
nop
incl
jns
cmp
dec
xchg
dec
icebp
and
jle
push
dec
fisubl
and
movsb
inc
fnstcw
icebp
sti
cmpsl
mov
jbe
fdivrs
mov
mov
push
push
push
cmpb
jge
or
mov
inc
jmp
lods
gs
nop
stos
in
test
ja
pop
aad
je
repz
xchg
inc
insb
addr16
cmp
shlb
imul
jns
mov
in
std
cmpb
js
xlat
inc
cmp
gs
sbb
iret
xor
lcall
scas
mov
mov
inc
scas
inc
cmp
mov
test
ljmp
sbb
dec
clc
shlb
ret
movsl
aad
cmpsl
xlat
sub
xchg
int
pop
mov
jp
insb
iret
loop
ljmp
into
pop
mov
movsl
mov
mov
pop
mov
icebp
ficompl
mov
fldcw
xor
xchg
or
icebp
clc
inc
sbb
add
xchg
aas
mov
loop
push
dec
cld
jnp
repz
in
fs
mov
fmul
xchg
fimuls
popf
lods
mov
dec
shl
jmp
jae
pop
mov
mov
add
testl
dec
jge
insb
adc
leave
and
andb
jmp
mov
cmp
add
into
sbb
push
jl
out
cmp
push
cmp
or
sbb
pop
xlat
lret
rol
scas
and
test
sbb
icebp
dec
cli
cmc
repnz
jno
jl
test
mov
xor
pand
cmpsl
adcb
ljmp
aas
lea
sub
lods
cltd
adc
jge
pop
or
int3
adc
iret
mov
or
out
mov
adc
leave
scas
mov
js
jb
sub
cmpsl
int3
and
fisttpll
xor
xchg
push
mov
mov
es
mov
xchg
cmp
std
clc
sub
insb
mov
dec
mov
or
sub
lods
sbbb
pop
arpl
sbb
xor
in
push
adcl
pop
and
sbb
leave
inc
aas
ss
mov
and
sbb
ss
nop
and
xor
pop
scas
push
cmp
lahf
adcl
sbb
in
pop
dec
mov
cwtl
aad
sahf
cmp
pop
add
adc
pop
mov
ja
sti
in
loopne
mov
push
arpl
in
inc
cltd
sti
fwait
inc
pop
sbbl
dec
sbb
mov
cmp
sahf
dec
xchg
loope
fnstenv
dec
faddp
lret
cmp
adcb
movsl
mov
pushf
sar
dec
data16
dec
sbb
jle
cmp
in
enter
mov
cmp
pushf
lahf
aas
push
out
cmpsb
imul
add
push
test
pop
push
jns
xchg
testl
imul
ret
dec
mov
mov
jp
pop
jne
stc
xor
scas
or
fisubl
add
imul
xor
push
loope
inc
sbb
addr16
fsubrl
out
fmuls
fimull
ja
mov
popa
dec
inc
mov
lret
movsl
xor
loope
leave
add
rorb
dec
push
mov
popa
dec
int
sub
aam
pusha
cwtl
or
lods
xor
std
sahf
add
add
test
pusha
gs
popf
dec
rcr
push
in
xorl
hlt
sub
daa
xchg
into
inc
lods
and
and
jnp
fnstsw
and
push
lock
shll
lcall
rorl
stc
imul
dec
push
clc
mov
aam
xchg
loop
xor
xchg
adc
add
mov
gs
mov
jnp
pop
xchg
mov
test
lea
push
sub
subl
in
js
or
mov
pusha
lock
mov
lret
jl
fldt
inc
test
test
ret
mov
xchg
xor
lcall
and
mov
mov
dec
inc
xchg
mov
imul
mov
out
add
loope
xchg
out
repnz
lods
push
push
pop
sbb
shr
mov
pop
fldl
sti
add
jnp
repnz
loope
cmp
aaa
outsl
gs
push
shll
mov
inc
sti
lret
pop
push
fsubrp
xchg
xor
push
jbe
xchg
rcl
xchg
out
mov
inc
jp
imul
sbb
jo
ror
mov
xor
inc
call
push
test
shl
stos
cwtl
and
inc
mov
mov
into
push
imul
xor
aas
sbb
jae
fimull
je
mov
sbb
imul
lret
push
jge
inc
jno
orb
xchg
dec
adc
or
mov
std
subl
xor
xor
stos
inc
js
rcrl
pushf
xchg
dec
cmp
push
cmc
aaa
add
popf
cli
mov
add
loop
cmp
fbld
sbb
mov
jns
out
mov
lea
add
jne
mov
addr16
jno
dec
pop
ds
xor
andb
data16
aas
adc
jnp
cwtl
xchg
cmpsl
mov
jle
and
stos
fwait
enter
xlat
pushl
mov
outsl
sub
scas
mov
sbb
adc
jmp
cmpsl
cmp
xor
movsb
fwait
std
inc
sbb
ljmp
or
xlat
mov
or
hlt
scas
xor
sub
ljmp
movsb
daa
push
lods
add
and
enter
fmull
mov
cmp
bnd
jae
push
mov
sub
pop
sub
mov
xchg
and
jno
sti
cs
out
fistps
mov
lahf
mov
or
mov
pop
subl
mov
push
or
pop
loopne
mov
fistl
and
in
jns
out
pop
std
not
stos
pop
leave
pop
mov
dec
fs
dec
or
push
add
icebp
inc
add
pop
mov
mov
cmp
push
jno
inc
pop
into
into
les
popa
iret
repnz
fstpt
and
js
je
sbb
cmp
push
and
dec
lods
iret
imul
lret
lea
jne
jnp
testb
repz
add
fbld
push
mov
xor
bound
inc
jg
push
ret
sbb
clc
les
cmpsl
xor
call
daa
shrb
loop
out
scas
stos
adc
mov
sbb
mov
mov
xchg
mov
and
aam
enter
add
mov
loope
xor
lods
stos
pop
mov
mov
adc
fcoml
lahf
push
ja
mov
xor
dec
push
shlb
push
repnz
cmp
cmpsl
push
jmp
addr16
testb
roll
popa
mov
adc
aam
mov
data16
sbb
fadd
roll
jne
sub
push
push
into
sub
stos
cwtl
leave
or
das
push
mov
xor
clc
aam
adc
mov
push
into
mov
cld
mov
add
ljmp
out
cmpsb
add
jl
sub
lods
adc
pop
enter
dec
dec
and
fwait
adc
sbb
add
lret
es
jl
sbb
jne
mov
jmp
pop
cs
movsb
stos
addb
cs
jns
pop
push
iret
jmp
loopne
sub
push
jb
nop
int
rcll
adc
xlat
sub
leave
push
aas
and
push
cmp
decl
add
cmp
xor
enter
sarb
push
mov
mov
fbstp
roll
jns
popf
aas
bound
fwait
das
mov
xchg
shl
fwait
sti
sub
mov
cltd
leave
sbb
jbe
sti
pop
cmpsl
test
mov
inc
sbb
push
dec
movsb
mov
mov
cs
lock
cwtl
ss
stos
insl
sbb
mov
pop
and
inc
ret
sbb
ret
push
dec
cmp
mov
test
in
fsubr
fwait
xchg
push
negb
sbb
fcomip
cltd
fsubrs
fildll
jb
stc
pop
pop
push
out
pop
jl
xor
and
mov
dec
cmp
pop
aaa
push
add
std
cld
and
add
aam
loope
sahf
sbb
lcall
mov
cs
cmp
sbb
sbbb
push
xchg
mov
push
popf
lods
pop
sahf
and
ljmp
dec
lea
mov
cwtl
mov
repnz
inc
mov
aaa
cmp
add
mov
mov
mov
add
push
je
out
scas
mov
aad
xlat
frstor
rclb
lret
jbe
icebp
mov
pop
rolb
clc
scas
loope
xor
inc
sti
stos
cwtl
adc
cmp
ret
lock
adc
push
and
xlat
lret
roll
les
outsb
inc
cmpsb
pushf
subl
les
mov
xchg
loopne
mov
dec
pop
dec
into
push
cwtl
js
lret
clc
push
loop
or
mov
jle
mov
and
add
insb
sub
mov
clc
aas
xor
push
out
scas
sbb
icebp
mov
shl
cmp
pop
dec
movsb
cmc
push
sbb
ss
inc
daa
pop
mov
inc
pop
or
mov
pop
push
mov
test
cmpsl
addl
add
and
test
jge
dec
stos
out
mov
add
pushf
aaa
cmp
insl
test
push
sbb
jecxz
fcmove
pop
cmpsl
or
lds
rcll
mov
mov
ficoml
gs
notb
jp
lret
pop
jecxz
loope
mov
mov
stos
mov
xlat
mov
movsb
into
jo
and
ret
jae
add
and
pop
jl
sti
xor
fisubrl
xchg
dec
lods
pop
ret
inc
xor
ficoms
imul
in
loopne
addb
xchg
lcall
push
sbb
pop
dec
and
jnp
test
in
cld
jge
or
movsb
shrl
leave
jmp
call
dec
mov
std
ror
pop
pusha
xchg
cmp
inc
mov
jne
les
mov
outsl
imul
call
aaa
insb
cmp
rorl
cwtl
lcall
cmp
popa
push
repnz
pop
adc
incb
insb
pop
adc
dec
mov
xor
in
and
iret
pop
rcrb
in
mov
push
sub
jno
or
dec
and
in
fmull
out
cmp
addr16
and
adc
test
insb
rcl
sarb
and
mov
outsl
xchg
cmp
lcall
scas
dec
add
cmc
out
and
add
lds
jo
mov
in
sahf
sarb
aad
push
test
iret
pop
inc
cmp
int3
jecxz
and
shll
cmp
cs
mov
daa
jno
xor
in
and
shll
dec
add
addl
mov
enter
nop
jmp
sbb
sbb
push
pop
test
fcomps
mov
jp
aaa
xchg
rolb
sbbl
inc
fcomps
ret
dec
das
call
inc
fdivrl
mov
in
fincstp
into
lret
sub
adc
inc
popa
mov
sahf
icebp
outsb
pushf
fisttps
cmp
xchg
stos
sbbb
cltd
sbb
jg
test
dec
outsl
mov
xchg
cmp
movsb
jnp
push
cmp
adc
jp
aad
enter
push
imul
into
push
fists
cmp
add
pop
clc
cmp
pop
add
sub
mov
cmp
sbb
icebp
mov
in
ret
mov
mov
sbbb
outsb
lcall
push
xchg
cmp
sub
xchg
mov
test
jno
inc
add
adc
subb
ss
call
pushf
pushf
xor
and
test
or
aaa
ret
ret
xor
mov
rclb
sbb
imul
and
push
jge
push
inc
int3
adc
cmp
test
cmp
fs
push
ficoml
enter
in
aam
scas
dec
and
outsb
mov
mov
js
push
scas
outsb
xchg
sbbb
adc
test
jl
aad
mov
dec
cs
jne
xchg
sti
pop
lods
push
xchg
sbb
movsb
or
push
sahf
loopne
loope
adc
pop
lea
or
movsl
mov
mov
stc
jl
fildl
faddp
outsb
xchg
movsl
popa
push
enter
pushf
or
xchg
aad
dec
call
lds
cmp
push
xlat
sbb
mov
sahf
arpl
loop
mov
mov
lock
jmp
pop
lea
dec
imul
jb
ret
mov
and
es
push
xchg
movsb
xor
cmp
lahf
shll
jmp
xor
scas
rcll
out
dec
mov
call
adc
push
mov
cmp
notb
dec
shll
cmp
insl
imul
add
cmp
pop
push
stc
mov
pop
js
in
xor
int3
lahf
dec
lret
addl
dec
add
dec
xchg
push
inc
out
insl
jp
jge
or
stc
lods
mov
inc
push
push
pop
not
rorl
pop
jmp
icebp
movsb
mov
les
xchg
mov
add
jle
pop
push
aaa
cmp
ficomps
test
add
mov
cmp
cmp
inc
rolb
cmpsb
xor
movsb
daa
jmp
push
or
pop
cmp
xchg
mov
jmp
shrb
xor
mov
outsl
hlt
or
aaa
inc
in
xor
adc
test
mov
repz
adc
outsl
into
cmp
jl
inc
daa
repnz
movsl
xor
js
repnz
mov
insb
jecxz
add
adc
cmp
push
add
pop
cmp
sub
mov
or
mov
imul
in
jl
xor
testl
mov
sbb
cld
frstor
fldcw
das
xor
mov
cmp
jno
popa
bswap
push
loopne
enter
or
push
dec
aas
adc
mov
and
mov
les
js
mov
jg
out
loopne
fisubl
xchg
aam
fistpl
icebp
xor
fldenv
leave
pop
dec
andl
aaa
lret
jnp
aam
mul
bnd
xchg
rol
shrl
shl
rcr
insb
stc
rcll
or
fidivrs
cmp
je
insb
sub
mov
les
test
mov
cmpl
lret
jmp
pop
add
mov
lea
out
jecxz
push
lea
or
mov
jno
push
daa
dec
or
mov
mov
adc
fcoml
mov
inc
add
lds
xor
mov
push
xor
mov
xchg
cmp
std
cmpsl
sub
pop
xchg
sti
mov
xchg
int3
pop
into
mov
jb
mov
aad
sub
add
sbb
dec
sbb
addb
cmpsb
arpl
mov
pop
dec
mov
mov
scas
xchg
sub
fs
jl
push
mov
fistps
repnz
jo
or
dec
fsubrs
call
cmp
mov
dec
sbb
nop
hlt
pop
outsl
jae
inc
inc
adc
inc
dec
inc
xchg
jl
cmc
call
outsb
leave
push
inc
push
push
sub
push
in
in
push
test
test
imull
pop
mov
push
ret
int
add
sub
xchg
lods
cmp
xorb
mov
loop
cmp
lock
or
mov
mov
pop
xchg
xchg
sbb
and
cmp
sub
pop
pusha
cmpsl
lret
push
lea
sbb
outsl
decl
test
jae
inc
sub
adc
jle
lock
arpl
notl
mov
add
cmp
js
bound
lahf
ret
mov
jbe
in
into
xchg
je,pt
push
mov
ret
jb
jae
mov
fldcw
and
mov
je,pt
jbe
pop
aam
xor
hlt
scas
clc
xor
sbb
sbb
mov
into
hlt
lahf
mov
pop
aas
in
lcall
jl
cmpsl
movsb
mov
adc
mov
jl
dec
push
mov
cmp
dec
es
xchg
or
or
cmp
les
movsbl
and
loope
insl
scas
mov
stos
mov
push
out
bound
mov
or
mov
movsb
ret
rol
cwtl
roll
jo
add
lret
sub
sbb
jo
jno
das
ret
enter
push
jge
fs
in
inc
sahf
pop
test
call
loopne
lds
movsb
cs
ss
sbb
aam
cs
jmp
ljmp
push
push
sahf
arpl
push
jne
in
cmc
mov
cmp
add
mov
push
mov
inc
rorl
movsl
mov
push
mov
mov
fsubrl
scas
push
pop
sub
jo
jge
xchg
xchg
jl
cli
and
push
dec
adc
cld
mov
xchg
mov
fstpl
insl
fdivs
push
mov
xchg
es
jge
nop
popa
push
outsb
ja
dec
movsl
dec
mov
xchg
jnp
in
aad
push
ret
call
mov
and
movsl
cs
dec
jp
add
dec
test
imul
outsl
mov
mov
loopne
adc
lcall
scas
push
pop
mov
pop
inc
mov
xor
nop
jmp
cs
mov
testl
inc
adc
insl
repz
or
mov
add
sahf
or
mov
ja
or
or
scas
loop
in
sub
inc
outsb
inc
pop
sahf
sarb
xor
stos
inc
test
and
and
repnz
ljmp
scas
jmp
pop
imul
orb
repnz
stc
mov
jp
imul
insb
adc
sbb
shll
pop
fnsave
pop
nop
popa
pop
pusha
jo
insl
outsb
mov
imul
jge
cmp
call
cltd
push
adc
dec
loopne
or
js
in
test
cmp
mov
insl
adc
lea
push
add
stos
add
imul
push
mov
xor
test
jge
mov
popf
mov
inc
out
sub
fwait
cmpb
adc
mov
fwait
dec
in
mull
stos
pop
lret
je
dec
jg
out
xchg
jecxz
or
xor
popa
xchg
enter
call
inc
sar
test
push
jne
les
insb
bound
cs
je
sub
outsb
mov
testl
adc
rcrl
mov
pop
pop
cltd
or
test
dec
test
ficoml
jp
mov
mov
cwtl
add
jge
cs
scas
xchg
icebp
cmpl
pop
inc
pop
into
push
orb
faddl
lock
mov
loopne
sbb
push
inc
jne
push
dec
ljmp
pop
xor
sbb
add
shlb
push
cwtl
out
push
pop
mov
mov
and
jns
xor
push
xchg
dec
fdiv
lahf
adc
scas
xor
jb
dec
aad
and
jmp
add
adc
clc
movsl
or
ror
cld
push
xchg
fwait
stc
icebp
scas
jge
test
jbe
gs
jbe
lock
pop
dec
jnp
jne
mov
pusha
mov
cs
fsts
shrb
inc
lods
sbb
fwait
pop
movsl
inc
inc
dec
aaa
sarl
pusha
addr16
test
adc
inc
popf
dec
mov
sahf
stos
and
push
cs
xchg
push
popa
sbb
mov
aaa
sahf
sub
adc
push
dec
clc
sub
or
lret
xchg
lods
testl
inc
xchg
cmp
mov
idivl
data16
in
push
add
mov
adc
jg
pop
lea
out
push
hlt
mov
loope
mov
lret
cwtl
push
out
sti
cmp
je
orl
sbb
mov
pop
fs
mov
insb
out
mov
outsb
mov
add
adc
push
and
and
fiaddl
jb
enter
loope
repz
jmp
mov
push
dec
lahf
scas
adc
pop
mov
lods
jg
stos
cmpsb
setns
adc
adc
adc
mul
sbb
cmpsb
pop
xor
out
inc
imul
push
lcall
dec
xchg
int3
push
shl
adc
adc
dec
and
mov
lret
mov
outsb
or
push
testl
daa
add
addr16
xchg
test
mov
mov
mov
bound
lods
adcl
cmc
mov
ficoml
out
aam
mov
mov
and
inc
and
ja
test
out
pusha
bound
inc
dec
in
xor
stos
aas
and
cmpl
push
arpl
mov
push
adc
and
daa
push
movsl
add
das
in
into
jnp
subb
fnstcw
inc
push
in
je
shlb
push
cmp
in
pop
dec
rcll
hlt
cmp
xor
rolb
xchg
or
sbb
xchg
or
mov
cmpl
mov
popf
cmp
test
cmp
xchg
mov
in
lock
hlt
sbb
inc
add
sub
push
xchg
cmp
faddl
xchg
repz
sub
dec
lahf
jmp
adc
jle
mov
cmp
insb
out
push
testl
pop
pusha
jae
pusha
pop
push
mov
cmp
call
icebp
mov
jecxz
inc
pop
mov
or
sti
ss
jecxz
xchg
push
jae
test
sub
ds
cmp
xchg
shr
or
dec
call
adc
lods
popa
push
iret
out
sub
mov
ss
das
add
inc
out
mov
scas
loop
xchg
loop
pop
out
mov
dec
jns
adcb
aad
loope
mov
dec
cmpsb
insl
pop
sbbb
fidivrs
xchg
mov
mov
push
insb
xor
cmp
insb
mov
in
jge
test
gs
mov
stc
mov
push
stos
int3
hlt
jecxz
sbbl
or
cwtl
and
cmc
mov
jg
sub
shr
push
ljmp
cmp
out
dec
nop
mov
int3
adcb
inc
mov
mov
outsl
sarl
adc
addr16
test
sbb
cmp
cmpsb
pop
or
sub
or
sub
mov
jns
mov
fmuls
inc
in
cmp
iret
adc
pusha
inc
sub
and
call
ret
cmpsb
xchg
stc
es
or
cmp
jae
out
dec
mov
fstpl
mov
inc
push
fiadds
jnp
cmp
inc
ror
test
lahf
push
xor
or
test
pop
out
mov
pop
sbb
mov
sub
mov
shl
rcr
fs
nop
call
nop
popa
inc
mov
decl
fistpl
jecxz
out
xchg
mov
push
dec
pop
or
cli
xchg
jle
sbb
jmp
xchg
add
mov
dec
and
jne
lods
mov
mov
outsb
cmp
loope
roll
jo
popa
mov
add
push
pop
and
es
out
nop
hlt
pop
imul
jg
push
jb
or
imull
xchg
adc
out
jae
sub
push
add
sub
mov
in
mov
sar
dec
xor
add
mov
loope
sub
mull
cmpsl
imul
pop
out
dec
adc
mov
movsl
outsl
cld
mov
out
daa
adc
jecxz
push
xor
push
sbb
add
fs
stc
xor
sbb
imul
mov
mov
mov
out
xchg
ss
xchg
lock
bound
push
mov
out
sub
mov
adc
fldcw
inc
fnstcw
add
mov
sbb
push
data16
aas
inc
pop
nop
and
inc
sti
arpl
mov
xchg
cwtl
mov
xor
fs
jo
mov
arpl
add
or
pushf
inc
push
out
jnp
imul
and
shrl
pop
jnp
pop
mov
xlat
nop
mov
push
mov
sbb
inc
sahf
dec
inc
mov
cmc
pop
je
into
xor
repnz
loop
lea
repnz
mov
in
mov
jbe
fadds
dec
movsb
mov
pop
ret
call
subl
lret
lea
mov
call
jne
and
into
sub
sub
push
sbb
inc
adc
stos
dec
cmpsb
lea
jmp
jnp
add
std
ret
sbb
mov
jp
rcrl
push
aad
loop
nop
aam
imul
orl
pushf
push
std
mov
or
pop
pop
and
fnstcw
jns
xor
insb
pop
mov
dec
adc
pop
sbb
insl
cmp
rolb
lds
rcl
pop
aam
cmpsb
cmpsb
imul
aad
dec
sahf
lret
and
enter
push
mov
push
scas
mov
js
mov
push
jl
lds
cltd
aas
sbb
in
xchg
add
fistpl
mov
rcrb
subl
ds
push
and
inc
jne
mov
cmc
jno
call
fdivrl
mov
inc
repz
xor
adc
inc
scas
mov
xchg
dec
mov
dec
int
mov
out
jb
inc
add
mov
sbb
cmpl
jo
rolb
push
sub
leave
orb
lods
sbb
pop
in
shrb
mov
jmp
call
lock
adc
stos
or
mov
xor
dec
cmp
xor
add
scas
xchg
mov
jbe
jl
mov
out
sahf
cwtl
push
fnstcw
mov
mov
mov
ljmpw
pop
movsl
adc
adc
or
stc
jle
lcall
clc
std
mov
inc
cmpsb
push
sbb
cmp
cmp
cmp
aas
mov
insl
aaa
adc
shl
outsl
jb
mov
out
loop
sbb
mov
call
sub
iret
sbb
fsubr
and
push
lcall
leave
mov
adc
cmpsl
imul
mov
dec
fwait
js
lea
outsb
xor
je
jns
aam
pop
rcrl
mov
push
cmp
call
dec
arpl
jnp
scas
fsubr
push
out
scas
pop
ret
lock
lahf
jne
mov
sahf
movsl
cli
xorb
fwait
inc
fcmovne
xchg
arpl
jb
sub
inc
aaa
mov
fiaddl
es
jo
push
adc
lods
cmp
sub
fxch
gs
push
fmull
popf
sarl
sbb
in
add
shlb
sbb
and
shlb
push
mov
lcall
fstps
aaa
jne
push
mov
lea
insl
js
or
add
loop
pop
add
jmp
and
aam
xchg
adc
insb
imul
movsb
popa
xor
jo
scas
in
dec
xchg
sbb
lds
and
cmc
and
les
addr16
aaa
test
test
xchg
xchg
mov
jge
test
es
jb
jmp
and
inc
sarb
push
mov
fwait
test
jbe
mov
leave
adc
mov
lret
es
sub
mov
mov
jecxz
clc
jb
lea
daa
outsb
sbb
mov
leave
and
fwait
repz
shll
arpl
push
mov
dec
pusha
add
hlt
dec
cld
mov
nop
test
mov
icebp
loopne
stos
fwait
jl
push
cmp
inc
pop
jne
inc
ja
mov
xchg
mov
aad
sbb
in
lock
gs
dec
lods
dec
ret
jmp
push
inc
rclb
add
inc
cltd
pop
inc
dec
jecxz
sub
jp
or
lds
fistps
test
mov
les
sub
mov
bnd
into
sub
cmc
mov
and
pushf
es
sub
and
pop
cld
std
imul
and
lret
push
cmpsl
push
and
push
stc
mov
sub
cmpb
leave
rcrb
add
ret
mov
lcall
push
or
and
scas
stos
insl
lds
inc
cwtl
popw
mov
push
dec
and
and
inc
xchg
lds
pop
pop
loope
repnz
and
push
jno
mov
mov
aam
push
lea
or
paddw
dec
aaa
cmc
sti
popf
push
iret
imul
sbb
in
push
push
lahf
mov
xchg
popf
mov
in
les
push
les
inc
lds
pop
sbb
or
in
adc
cmp
das
popa
dec
pop
inc
lods
mov
nop
or
dec
inc
mov
aam
mov
gs
cld
jmp
test
push
inc
pop
cmp
inc
lds
cmp
mov
pop
cmpsl
cmp
inc
sub
in
or
sub
mov
addr16
rolb
mov
cmp
jecxz
sub
xor
pop
shll
pop
cmp
mov
outsl
sub
pop
jns
in
js
and
lahf
xor
inc
fisubs
pop
push
shr
subb
pop
push
and
fcoml
ret
rol
or
pop
repnz
rorb
mov
add
jecxz
sub
dec
dec
ficoml
mov
flds
cmp
sub
and
push
xlat
add
imul
dec
cmpsb
cmc
ja
jp
jge
ror
fdivl
push
nop
jbe
jle
sbb
mov
fwait
addr16
adc
outsb
js
sbb
pop
mov
cs
sub
ds
xchg
scas
jnp
jb
scas
mov
cmp
imul
adc
adc
insb
add
push
je
mov
es
adc
xchg
enter
sub
sbb
das
xchg
sbb
das
pop
lahf
pushw
and
xor
cwtl
cld
push
add
out
push
ljmp
cmp
xchg
scas
sbbl
cmpsb
outsb
dec
add
int
mov
mov
mov
and
xchg
roll
daa
shl
jnp
inc
data16
cltd
cmpsl
jo
mov
jno
pmaxsw
and
hlt
xorl
sbb
in
js
push
ja
push
jae
jle
sarb
mov
jge
iret
inc
dec
imul
xor
repz
fiadds
sub
add
fcoml
jo
jne
mov
aad
add
lock
jp
mov
mov
gs
popf
es
jmp
sub
sbb
push
dec
fsubrl
neg
arpl
out
pop
imul
jl,pt
cmp
xor
sbb
imul
je
xchg
idivb
and
js
push
mov
leave
jle
lahf
aas
pop
stos
imul
outsb
jl
dec
jns
mov
push
sbb
aas
sahf
lea
es
out
les
jmp
sti
inc
pop
lock
cltd
std
cmp
mov
mov
popf
dec
int
jge
xor
ds
fsubl
cmpsb
or
mov
and
sarl
mov
dec
shll
adc
ffree
in
cmp
sub
cmp
xor
scas
pushf
xor
sub
ret
cmp
adc
les
js
mov
jg
jns
fs
loope
lret
scas
fcompl
pop
add
mov
pop
pop
cmc
cwtl
fwait
dec
stc
shlb
cwtl
sahf
jbe
test
push
mov
ljmp
dec
mov
jae
adc
es
lret
out
push
jbe
popa
mov
xchg
arpl
aaa
or
push
xlat
fists
cmpsb
mov
popa
jbe
movsb
mov
adc
sbb
loope
mov
scas
andl
leave
adc
mov
leave
int
pop
dec
leave
mov
adc
or
mov
ja
rorb
loopne,pn
xor
aam
dec
jge
xchg
push
mov
xchg
cltd
and
dec
fs
jo
push
cmpsl
lahf
in
scas
jp
xchg
pusha
roll
lret
dec
inc
out
pop
jae
test
ret
jbe
icebp
ss
add
push
pop
cmp
mov
mov
push
mov
cmp
mov
mov
cltd
xchg
xchg
add
mov
insb
mov
or
mov
add
ret
js
push
mov
mov
test
jp
mov
clc
mov
mov
pop
push
iret
shl
sub
adc
dec
subb
dec
bound
xchg
out
setno
mov
cmp
sub
mov
jle
fisubrs
sub
cmp
lret
dec
out
ljmp
xchg
sub
mov
loopne
cmpsl
out
adc
cmc
ror
lock
iret
cmp
or
add
inc
dec
cld
andl
out
pop
inc
sub
test
stos
jecxz
jl
in
out
jno
xor
fwait
mov
ss
js
movsl
int3
mov
add
ljmp
pop
stos
dec
lock
add
push
repnz
mov
aam
cmpsl
movsl
popf
mov
pop
or
hlt
bound
iret
push
pop
pop
scas
mov
fiadds
and
adc
int3
xchg
ud0
ret
xchg
adc
bound
in
pop
adc
test
jecxz
pushf
hlt
mov
int
mov
fdivrl
push
iret
add
pusha
stos
sbb
sub
mov
sub
fidivs
jmp
ret
mov
data16
out
dec
outsl
mov
out
bound
int
arpl
inc
push
int
mov
jns
lods
cmp
mov
ret
dec
mov
inc
imul
aas
popa
dec
call
out
pop
movsb
in
mov
or
scas
sbb
ja
jecxz
pop
adc
xchg
rolb
aad
cltd
xor
mov
inc
push
xchg
mov
jns
aas
rcrl
ffreep
xor
ficoms
cmc
add
shrl
in
ljmp
or
xchg
mov
addb
popf
sbb
dec
lcall
pop
mov
dec
xor
pop
sbb
scas
cmc
cwtl
inc
xchg
icebp
rorb
pop
loop
mov
inc
mov
cmp
gs
xor
jg
out
push
push
aam
or
xor
gs
or
adc
xor
in
jge
jmp
loop
mov
shll
movntq
pop
xor
cltd
pusha
cmp
ljmp
ja
push
cmp
fmull
lea
xlat
fbstp
sbb
xchg
movb
jno
sbb
sahf
mov
cmp
aaa
cmc
cmp
cmp
jb
sub
repnz
hlt
lahf
shll
adc
in
out
dec
aaa
jmp
sub
jnp
add
subb
mov
cltd
and
add
pop
pop
mov
sub
sbb
mov
xchg
lods
jle
ret
or
lods
mov
push
cld
ljmp
push
jns
es
ret
lcall
add
or
scas
inc
push
dec
je
call
in
push
addr16
das
or
lds
xor
stc
jp
stc
add
jne
int3
xchg
mov
in
xor
push
mov
xchg
mov
test
cld
movsb
push
ds
scas
adcl
es
jb
inc
mov
and
cwtl
fdivrs
pop
and
fcompl
in
xor
fidivrs
or
add
or
mov
jb
ss
aam
and
xor
cwtl
lret
jg
xor
push
popa
sbb
scas
push
pop
mov
out
jo
sbb
lahf
rolb
loop
leave
cmp
stc
mov
mov
adc
inc
pushl
das
inc
lds
adc
mov
jae
or
xorb
addl
push
mov
daa
mov
cmpsb
mov
and
aad
imul
cmpb
call
mov
add
adc
cli
and
sub
scas
mov
mov
out
aad
sarb
sub
loop
jmp
enter
fmuls
or
jecxz
cwtl
cwtl
lcall
popa
aaa
mov
addb
pop
inc
clc
xor
inc
xchg
pop
pop
or
add
imul
push
xor
nop
cmpl
pop
je
sahf
mov
push
int
shlb
mov
mov
dec
inc
push
mov
mov
jl
or
dec
mov
sub
sbb
mov
jmp
ljmp
mov
push
std
push
out
ljmp
xchg
cwtl
xchg
fisttps
pop
loopne
faddl
mov
and
lea
into
xchg
sub
mov
xor
xchg
bound
mov
push
jo
stos
les
jmp
and
pop
pushl
sub
in
xchg
dec
xchg
cmp
inc
fs
jle
dec
shrb
les
xchg
and
add
push
ja
cmc
xor
fiadds
pcmpeqb
ss
mov
rcrl
inc
push
popa
int3
sahf
push
pop
adc
push
rcl
mov
div
jae
dec
push
hlt
and
rdpmc
nop
sbb
aad
jns
cli
in
xor
lods
xor
xor
aaa
dec
jmp
popf
inc
push
mov
jmp
xor
inc
movsl
das
inc
dec
pop
mov
or
addb
jnp
jp
ja
test
lret
test
add
add
lahf
je
lahf
gs
cmpsl
mov
iret
sti
pop
int3
imul
mov
jae
fadd
mov
inc
test
xor
xchg
es
ja
inc
daa
inc
sbb
mov
mov
sti
icebp
fists
mov
aad
shl
push
cmp
sar
push
das
sub
cmpsb
ficomps
cmpsl
pusha
ss
aaa
lret
addr16
mov
lret
xchg
bound
xlat
je
sbb
mov
arpl
mov
rclb
xchg
adc
lahf
push
rcrl
cmp
mov
jb
inc
or
xor
ror
movsl
enter
add
out
sub
pop
dec
pop
cmp
in
int
jns
es
shl
jecxz
dec
push
or
xchg
jg
dec
or
out
js
cmp
stos
push
cmp
inc
pop
add
cmp
les
data16
out
jne
xchg
ss
outsl
setne
dec
bound
pop
inc
sbb
mov
pushf
pop
loope
jle
xchg
mov
dec
outsb
enter
call
pop
dec
inc
xchg
lret
aaa
mov
cmpsl
lds
and
xchg
jmp
ds
cmp
mov
into
imul
mov
xor
sbb
jg
mov
inc
icebp
in
movsl
sbb
push
mov
push
or
fwait
and
jae
mov
and
mov
enter
hlt
xchg
out
jle
dec
lcall
nop
fstl
data16
cmp
inc
xor
jge
cmpsl
mov
pop
mov
cmc
dec
repz
add
xchg
pushw
pop
inc
test
sbb
fwait
push
add
dec
inc
inc
pop
sub
lods
out
ds
inc
add
sub
fisubs
pop
mov
mov
jno
sbb
mov
cmp
jbe
sub
xor
fidivs
inc
and
mov
cltd
je
xor
int3
adc
add
mov
imull
scas
ds
test
cmp
loopne
inc
xor
xchg
data16
call
and
int3
mov
lds
sub
nop
jle
push
movsb
aas
hlt
push
insb
ret
test
cmp
push
outsb
mov
mov
aam
adc
test
popf
movsb
and
imul
mov
sbb
sub
mov
leave
jp
push
mov
and
inc
jmp
das
push
lods
popa
lahf
aas
jno
mov
lds
outsl
inc
lret
jo
or
fiadds
int
imul
or
adc
mov
mov
xchg
outsb
adcl
add
inc
lcall
sub
loop
add
add
add
stos
ds
notl
inc
addl
push
pusha
push
push
push
sub
into
sub
lret
xchg
xchg
xor
iret
add
inc
enter
movsl
in
fs
imul
jne
add
in
popa
sub
dec
dec
int3
inc
mov
aaa
xchg
xchg
push
inc
lret
ss
pop
sar
dec
daa
or
and
ret
lahf
jmp
xchg
sarb
pop
test
mov
mov
cmp
cmp
jae
mov
or
sbb
out
pop
imul
inc
xchg
repz
inc
adc
mov
popw
jne
or
jo
aaa
dec
addr16
mov
inc
sbb
mov
repz
hlt
cmc
enter
dec
pop
pop
or
pop
scas
test
jle
aam
xor
int
inc
in
mov
pop
jb
loope
xor
inc
sub
jge
xor
inc
mov
xchg
jno
jno
sbb
pop
xchg
xchg
jl
data16
pop
cwtl
scas
in
out
inc
mov
inc
or
pop
mov
jmp
jl
nop
lock
fiaddl
rcll
stc
rorb
jbe
mov
inc
inc
mov
mov
and
loope
inc
or
sbb
fldl2t
or
les
scas
inc
jae
adc
icebp
dec
mov
loope
int
sbb
push
jmp
fistpl
or
sub
sub
inc
or
ja
xchg
into
gs
mov
repz
mov
dec
xor
cmp
addr16
shl
lock
sbb
sub
aaa
push
mov
and
stos
mov
jae
cs
aad
mov
xchg
mov
mov
popa
enter
adc
pushf
and
stos
leave
ljmp
pop
push
ret
mov
cmpsl
sbb
adc
ja
or
lods
pusha
fwait
add
dec
jmp
xchg
sar
jge
insl
cmp
xchg
mov
inc
addr16
xor
fwait
lret
cmp
push
inc
or
cmpsl
pop
in
aam
push
sub
lods
push
mov
lock
adc
inc
fidivs
dec
jle
sbb
fiadds
cli
ja
js
shl
mov
and
jle
mov
sub
push
mov
out
dec
sbbb
les
rcll
inc
cmp
movsl
scas
mov
arpl
lods
or
es
inc
mov
push
or
lods
sti
fsts
sti
sarb
dec
sbb
ret
dec
popf
loope
movb
js
pop
cmpsb
jno
icebp
push
xor
mov
inc
lahf
call
jmp
mov
cmp
dec
movsl
fwait
dec
sub
gs
mov
int
jle
and
cmc
hlt
mov
mov
das
xchg
nop
stc
cmp
lcall
cmp
xchg
mov
sbb
push
push
inc
bound
lret
push
stos
mov
jns
out
jle
jns
out
push
jne
cmp
xlat
cmp
add
je
mov
out
scas
in
push
addr16
je
ret
test
sub
mov
mov
ret
ss
push
push
mov
mov
out
sarl
sahf
lcall
out
mov
sbb
inc
xchg
mov
bound
sbb
or
clc
test
dec
rcrl
lret
pop
scas
or
pop
setg
mov
test
xchg
cmp
mov
cs
fcomp
dec
shll
mov
jae
dec
loop
mov
lea
jg
test
sbbb
sbb
in
cli
push
out
mov
rcrl
jbe
std
arpl
dec
lret
hlt
int
xor
or
pop
inc
sbb
or
push
or
arpl
je
sbbl
mov
adc
cld
push
sub
cmp
es
je
insb
mov
xchg
pop
inc
les
repnz
or
xor
pop
scas
jbe
jae
movsl
cmpsl
push
sub
xchg
xchg
mov
stos
imul
mov
mov
in
xchg
daa
push
mov
push
fs
jecxz
pop
mov
add
jns
mov
sbb
leave
mov
or
gs
notl
cli
lods
xchg
test
push
mov
std
clc
jmp
sarl
and
add
mov
movsl
sub
inc
cmp
push
lcall
add
xchg
test
in
mov
adc
int3
ret
jno
inc
in
loope
mov
out
je
inc
popf
xchg
int
push
test
sar
pop
cmp
mov
sub
fs
mov
inc
dec
popa
jp
fs
dec
xlat
add
push
out
push
repz
push
inc
shl
sarl
cmpsb
testl
ds
mov
or
loopne
dec
cmpsl
sahf
lea
pop
sbb
repnz
mov
shr
iret
inc
or
fmuls
mov
outsb
push
bound
addr16
ss
sti
mov
mov
mov
leave
sub
outsb
xchg
das
adc
out
gs
xchg
xchg
xor
dec
jne
or
repnz
xor
sbb
ja
xor
push
push
mov
cmpsl
mov
clc
cltd
inc
aas
push
push
adc
repz
or
add
jge
insl
mov
test
push
cmpsb
push
xor
fbld
mov
movsb
pop
outsl
dec
in
clc
and
sbb
pop
in
call
xchg
fcom
inc
cld
push
xor
jecxz
fcmove
jbe
fildl
add
inc
sbb
xor
cmpsb
jno
xor
fisttpll
imul
cwtl
pop
repnz
ret
scas
aam
movsl
lret
stos
jmp
rclb
dec
jne
xor
aam
cmp
inc
pop
nop
or
dec
push
dec
jg
mov
add
cwtl
dec
hlt
jl
or
ljmp
xchg
xchg
ret
push
dec
push
ljmp
sub
xchg
pop
orl
pop
pop
jle
mov
jnp
ret
dec
cmp
stos
rcl
sti
stc
sub
push
or
sub
mov
push
jle
cmp
push
sbb
add
cmp
js
jp
push
fnsave
jp
dec
sbb
std
add
mov
cmp
cmpsl
stos
pushf
lcall
call
rorl
mov
xor
jb
mov
inc
sub
mov
jo
dec
jle
fistpll
sub
popf
frstor
cmp
cmpsl
jl
add
cmp
int
jne
adc
je
inc
mov
xor
popf
iret
imul
fmull
push
pop
rorb
imul
aad
push
daa
push
and
and
in
pop
jl
popa
gs
xor
adc
adc
fadd
xor
sub
sub
push
push
leave
fst
arpl
lods
fidivrs
aam
gs
out
iret
push
push
insb
das
mov
in
and
jle
inc
sarb
mov
push
lcall
mov
outsl
int
movsl
shl
loopne
jecxz
mov
shlb
pop
in
jbe
and
movsb
je
mov
popa
imul
or
or
inc
mov
jnp
jle
xor
pop
xor
clc
ficompl
and
jnp
cmp
jno
in
xor
js
loop
push
sub
cmpsb
fistpll
mov
mov
stc
mov
mov
adc
sub
mov
aam
push
xor
dec
fcomps
xor
adc
mov
dec
cwtl
fisubs
mov
mov
out
mov
push
ret
fcomps
loop
push
xchg
lods
lret
in
and
sti
or
push
push
shr
lcall
ret
inc
ret
movsb
rolb
rclb
xchg
adc
dec
loopne
cli
cmpsl
data16
sbb
test
jecxz
and
cmc
sbb
in
popf
dec
add
lods
rcll
inc
and
adc
cmp
pop
mov
out
jge
bound
cmpsb
mov
ret
adc
lds
loop
xchg
insl
pop
fwait
or
inc
mov
mov
mov
mov
mov
es
push
push
push
lods
cmp
jae
das
int
test
jl
icebp
mov
sahf
or
cmp
mov
lods
imull
xchg
lahf
popf
add
xchg
pop
scas
mov
gs
pop
testl
add
push
sbb
add
cmpsb
add
call
inc
xlat
lahf
lock
nop
adc
sub
push
loope
fstpl
movsl
insl
or
sub
lock
cmp
jb
jne
jecxz
jmp
loop
lods
push
jo
jbe
pop
scas
sti
shrl
in
iret
mov
out
inc
lds
mov
in
xor
nop
jae
inc
ficoms
sarl
dec
movsb
dec
and
je
pop
jbe
das
pop
ds
dec
int
push
iret
push
push
cmp
pushf
les
fdivs
mov
ret
cld
es
movsb
xchg
xchg
leave
fstps
xor
xor
int
sub
jo
adc
jb
imul
test
mov
adc
xorb
or
mov
jp
adc
jge
fisttpl
arpl
sub
shlb
fstl
leave
lock
test
pop
adc
ret
in
fistl
sub
int3
mov
fisttps
or
ret
mov
pop
push
push
cmp
imul
fadds
daa
insb
orb
mov
push
sti
and
mov
mov
test
clc
mov
in
adc
push
cmpsb
xor
es
xor
and
out
loope
in
mov
daa
mov
mov
hlt
lret
mov
call
aas
pop
dec
mov
sub
mov
sub
mov
xchg
push
outsb
loope
pop
js
sub
dec
call
cmc
test
sub
iret
loope
incb
in
jno
dec
lsl
fst
aas
imulb
push
pop
daa
xor
cmp
jecxz
push
ret
repz
add
ja
dec
insb
push
mov
jecxz
cmp
jne
jp
mov
idivl
xor
aam
daa
pusha
fldenv
dec
dec
add
push
dec
push
out
and
push
out
and
daa
jmp
cli
pop
ds
xor
fdivrs
insb
jge
xchg
cmp
cltd
das
pop
sub
and
fisubrl
sbb
loope
adcb
es
pop
mov
pop
lcall
jmp
loope
xor
cwtl
xorb
xchg
pop
push
jae
imul
aam
jg
repz
mull
movsl
xlat
xchg
push
imul
loopne
out
adc
outsb
outsb
popf
movsb
sub
notb
in
repz
cwtl
sbb
test
sbb
xor
decl
and
andb
shll
loop
mov
subb
test
and
push
adc
and
sub
mov
unpcklps
roll
roll
xchg
add
fs
loope
cltd
ret
je
stc
inc
adc
add
pop
xorl
test
lcall
xor
or
pop
cmpsb
add
sbb
mov
push
sti
xor
int
mov
push
insl
mov
or
push
stos
cmp
add
cmp
in
test
lahf
idiv
ficomps
lods
out
je
test
test
ret
lock
jge
mov
add
mov
push
jns
iret
fiadds
daa
iret
lds
mov
sub
and
roll
push
inc
sti
or
jge
xchg
lret
or
and
pop
rorl
cmc
les
fbstp
fldcw
add
je
cmp
push
mov
clc
pop
or
aaa
xchg
mov
jle
jno
mov
in
or
push
or
shrb
or
cld
cmp
movb
jge
jge
cmp
cs
aaa
mov
pop
iret
add
aas
cli
les
js
out
dec
clc
adc
jne
shlb
inc
fiadds
popa
rol
push
and
lods
div
xchg
mov
imul
aam
movsb
add
shll
or
add
mov
sarb
fcmovnu
sbb
xchg
sub
out
dec
jae
inc
push
lcall
inc
fmuls
push
sub
or
rcl
jb
push
test
ror
xchg
xchg
fisttps
add
addl
fmuls
loopne
enter
in
adc
push
cld
and
mov
out
arpl
stc
sub
sub
push
mov
aas
mov
cmovge
outsb
cmp
mov
enter
das
and
subl
adc
cltd
dec
xchg
jle
adc
sbb
mov
jmp
and
fisubrs
jae
sub
sub
jl
gs
inc
xchg
je
cli
or
inc
pop
mov
rolb
sub
testb
mov
pop
cmc
jp
xlat
rcr
cld
pushf
enter
int
int
sbbl
mov
jle
les
jae
jg
push
pop
sbb
fildl
divl
sub
push
dec
and
xchg
cs
insl
and
stos
ficoms
xlat
popa
mov
xor
in
or
push
or
in
arpl
lods
sbb
in
lea
ds
movsl
sub
fbld
lahf
aad
int
out
dec
pop
xchg
repnz
push
jb
mov
and
dec
leave
xchg
cmp
cmpsb
mov
aas
faddl
sbb
xor
out
and
je
shll
and
mov
pop
loope
xchg
in
insb
decb
jb
ja
pop
aam
mov
xor
je
movsb
rorb
and
pop
dec
mov
outsb
orb
jns
pushf
push
or
and
das
int
xchg
cli
adc
lcall
faddl
mov
notb
aas
jl
or
loope
movsb
jmp
cmpsb
push
test
jb
rcr
ljmp
adc
push
mov
fs
sub
test
test
in
pop
mul
inc
insb
test
lcall
pop
jnp
orb
mov
xchg
data16
data16
inc
cmpsw
imul
dec
add
or
add
jge
and
push
push
lods
pop
rcl
push
xor
pop
shlb
aaa
add
in
and
stos
xor
pushf
push
repnz
fsts
imul
into
adc
sti
ja
clc
lods
insl
lret
shlb
jns
inc
fisubl
aad
add
sub
mov
pop
mov
hlt
dec
adc
mov
cwtl
out
xor
jno
pop
aas
mov
dec
jns
sub
mov
xor
int3
pop
bound
cmp
orb
pop
hlt
cmp
incb
fwait
hlt
push
out
imull
sub
pop
mov
dec
cmp
hlt
mov
adc
mov
add
mov
xor
add
dec
sarb
cs
dec
les
insb
and
mov
insl
mov
fwait
ljmp
leave
xor
mov
jmp
test
outsl
xor
iret
sub
das
lods
add
outsl
ljmp
in
inc
outsb
cltd
sbb
sbb
lret
dec
sarl
hlt
or
repz
pop
push
push
pushf
inc
jae
leave
push
mov
test
xchg
and
xchg
push
scas
subb
mov
mov
aaa
dec
sbb
dec
jns
movsl
add
loop
jle
lahf
pop
push
mov
ret
cltd
fnstsw
dec
jl
movl
outsb
je
dec
outsb
sbb
sbb
mov
repnz
into
fidivs
stos
push
xorb
out
push
xchg
sbb
jecxz
inc
jg
fwait
or
xchg
addr16
cs
insl
xor
and
scas
mov
test
loopne
or
mov
insb
test
jno
imul
dec
cmp
add
xchg
fucomi
inc
and
add
cmp
and
imul
push
mov
cld
adc
cmp
mov
faddp
or
add
cmc
inc
mov
cmp
iret
rolb
ss
adc
rorl
jecxz
not
in
test
sub
mov
mov
fidivrs
and
pop
bts
pop
inc
pop
outsl
pop
dec
scas
aad
add
adc
scas
cmp
ret
mov
jns
xor
and
and
adc
mov
dec
cli
out
jbe
pop
mov
aad
cmp
mov
arpl
inc
mov
jnp
push
pushf
stos
aaa
sbb
mov
into
adc
fbstp
xchg
jns
lret
test
ljmp
rcrl
dec
in
cmp
and
hlt
inc
xlat
bound
inc
repnz
jns
scas
loopne
int3
imul
int3
stc
scas
sbb
bound
and
enter
mov
add
ret
xlat
xchg
inc
cs
aad
jne
lahf
cmp
pushw
lahf
insl
decl
ljmp
jl
scas
stos
add
jo
or
sub
fiadds
sub
movsl
lea
jecxz
dec
push
lahf
and
rclb
aas
add
xor
mov
sbb
subl
inc
gs
xor
sbb
imul
and
inc
lcall
xor
xor
cmpsb
decb
xchg
movsb
stos
mov
jne
aaa
inc
dec
jle
inc
jecxz
data16
dec
push
mov
mov
push
inc
es
loopne
ja
notl
lret
push
cmp
gs
inc
mov
dec
pop
cli
je
sub
pop
cmp
cmp
cmp
cmp
cld
test
in
jmp
pop
jmp
sub
xor
stc
lahf
pushf
xchg
adc
xlat
outsl
fcom
roll
seta
or
test
inc
aaa
jns
mov
and
inc
je
leave
mov
xchg
rcr
or
and
dec
adc
outsl
addr16
sti
sahf
and
repnz
cmpl
push
call
frstpm(287
inc
enter
test
adcb
rcrl
pop
sahf
push
pushf
add
loop
sbbl
movsb
add
xor
cmpsl
dec
lcall
cmovnp
sub
ficomps
les
out
lods
pop
shrb
cld
fcomp
rorl
popf
cmpsl
add
adc
push
cld
add
pop
push
imul
pop
mov
lods
cwtl
cltd
pop
pop
icebp
hlt
mov
mov
mov
movsb
sahf
mov
pop
mov
pop
imul
fcompl
imul
repnz
inc
jge
movsb
fdivl
pop
stc
xchg
jle
pop
mov
test
sub
xchg
int
inc
adc
xchg
stos
and
icebp
pop
pop
imul
and
ret
das
pop
pop
and
jb
hlt
cmpsb
ljmp
push
les
push
sbb
loop
rcrl
dec
jno
ljmp
in
leave
and
mov
sbb
in
xchg
jnp
xchg
pop
sub
lods
mov
xchg
pusha
xchg
fs
lahf
add
es
xchg
xchg
out
ret
push
add
call
in
mov
lds
test
xchg
movsb
ret
cs
mov
cmp
repnz
or
or
into
mov
loop
add
in
or
mov
ret
jb
movsb
lahf
out
pop
dec
cmp
pusha
jbe
mov
lds
repz
jp
cmp
push
mov
mov
cmp
aas
movlps
sub
aas
mov
push
jns
stos
push
xchg
sub
adc
mov
out
jmp
adc
outsl
cmp
rcll
pop
xchg
movsb
addl
xchg
cmp
mov
xchg
add
icebp
sbb
push
push
std
sbb
xchg
xor
add
sbb
sahf
cwtl
imul
ror
mov
mov
jnp
cmp
lret
mov
psllq
sub
jns
adc
sub
pop
and
mov
lock
xor
jne
push
scas
pop
pop
mov
mov
jl
cmp
aam
ret
mov
or
pop
enter
jbe
xchg
mov
lahf
ljmp
xor
repz
outsl
in
dec
pop
xor
sahf
call
loopne
cmpl
fdivp
das
sti
aaa
or
popf
cmp
ljmp
mov
add
ja
mov
cmp
rolb
push
cmp
out
mov
jnp
lods
or
in
jb
pop
ds
sbb
ds
ret
testl
jo
lret
sub
outsl
mov
roll
and
push
insl
cwtl
daa
mov
sub
imull
mov
xchg
inc
xchg
push
jnp
imulb
pop
iret
and
test
xchg
push
neg
or
mov
or
rorl
adc
lret
mov
ret
sbb
add
adc
xchg
fwait
dec
add
int
pop
xor
pushf
pop
bnd
or
fisttps
aaa
inc
leave
repnz
add
sarl
cmc
mov
in
xor
fcompl
clc
xchg
lock
mov
xchg
mov
lods
fadds
lcall
rorb
and
push
xchg
scas
push
jne
mov
add
cs
inc
push
stos
mov
mov
dec
inc
mov
pop
push
test
adc
addr16
xchg
into
add
mov
popa
sarl
jbe
pop
jmp
mov
adc
sarb
jle
push
or
std
sbb
cs
aad
jbe
xchg
test
or
jecxz
pop
leave
outsb
arpl
adc
lahf
dec
mov
rcl
sbb
sbb
fwait
stc
imul
mov
adc
stos
cmpsb
das
ljmp
push
and
js
test
outsl
or
int
es
xlat
mov
pop
arpl
adc
push
lods
outsb
stos
movsl
xchg
mov
xchg
pusha
cmp
idivb
mov
fiadds
es
loop
mov
into
push
stc
outsl
cwtl
mov
lods
pop
bound
cmp
rcrb
inc
icebp
dec
adc
and
inc
mov
add
push
lret
jb
push
xor
xchg
aad
stc
scas
cmp
fimuls
or
push
push
mov
mov
pop
adc
mov
popa
xchg
cmp
pop
push
shll
push
fildll
mov
or
ds
into
loop
adc
jmp
daa
and
pop
mov
gs
insb
mov
mov
es
into
imul
or
xchg
imulb
in
pop
dec
mov
pop
dec
lahf
insb
leave
dec
jno
ljmp
add
js
mov
push
jl
push
xorb
scas
xor
cmp
insb
stos
adcl
sbb
xor
loop
jge
pop
dec
rcrb
inc
mov
push
loopne
das
ret
sbbb
fstpl
mov
adc
data16
cmp
add
xchg
mov
mov
mov
clc
cmp
xchg
and
mov
js
test
cli
mov
inc
in
mov
shlb
push
gs
lods
je
jae
mov
mov
sbb
clc
popa
inc
mov
aad
pop
mov
cmpsl
incb
ret
push
adc
xor
mov
es
adc
mov
arpl
addr16
xor
cmp
adc
pop
insl
cltd
lea
xchg
adc
push
das
pop
cmp
sbb
scas
cmp
jl
mov
lods
mov
fs
stos
loopne
adc
ret
out
fs
jp
test
adc
xchg
and
or
cmc
push
push
inc
pop
adc
pop
xchg
jo
sbb
test
test
pop
rcl
push
mov
call
add
add
adc
or
loope
frstor
push
daa
mov
in
cmp
pop
cld
sti
fidivl
cmp
aas
lock
add
xor
and
repnz
int
jge
xchg
inc
pop
mov
popa
xor
mov
sub
xor
hlt
sub
mov
jno
sahf
or
sub
xlat
outsb
push
sbb
or
sbb
xchg
fmul
xchg
mov
pop
les
mov
or
loopne
push
fisttpll
fistpll
mov
shll
andb
adc
lret
pop
lret
shrb
fistl
sbb
outsb
xchg
jb
ficoms
insl
jle
inc
mov
sub
jmp
stos
imul
xorb
sub
cmp
icebp
pop
xor
pop
test
pushf
lods
push
std
mov
mov
lcall
cld
mov
sub
xchg
bound
xchg
sub
sbb
cmp
cli
lret
leave
xlat
mov
ret
mov
popf
push
mov
sbb
pushf
mov
xchg
loopne
ljmp
and
inc
inc
stos
xor
and
rcr
or
inc
or
aad
dec
scas
sub
dec
sub
and
das
inc
xchg
imul
movsb
add
jle
mov
fucomip
jl
jb
lock
inc
xor
push
jle
scas
loop
fdivrs
xchg
push
and
ljmp
in
add
test
mov
ret
je
lods
sub
aad
movsl
popa
xchg
cmpl
pop
ret
mov
push
mov
cmp
and
pop
jno
jg
addr16
std
fwait
inc
fabs
imul
and
lods
push
mov
call
std
add
mov
repz
ds
lcall
xor
jbe
and
movsb
pusha
push
mov
out
xchg
mov
js
popl
inc
out
mov
into
pop
jg
and
je
hlt
fnsave
sti
push
mov
and
fisttpl
cmp
lea
add
jle
lock
incl
movsb
mov
arpl
jl
mov
jecxz
jae
fwait
repz
xor
cmp
std
mov
mov
sbb
in
popf
nop
cmp
push
loop
int3
xor
inc
sbb
in
imul
fdivr
or
cmp
adc
jl
es
xorb
data16
iret
enter
sti
mov
fs
pop
jmp
and
andb
mov
dec
sub
out
dec
add
push
loop
ja
mov
inc
push
and
adc
or
or
mov
mov
test
repnz
ds
addr16
dec
mov
ret
ljmp
lods
and
adc
gs
xchg
push
pusha
ss
adc
mov
mov
roll
mov
xor
jle
xor
insl
jge
das
rorb
cmp
imul
cmp
sub
add
xor
mov
addr16
scas
std
loopne
in
mov
dec
pop
and
cmc
cltd
mov
cmp
jge
cmp
add
mov
mov
rorl
mov
imul
gs
cmp
pop
push
ds
outsb
push
jbe
repnz
xchg
roll
fists
test
bound
adc
out
leave
inc
rcrb
push
imulb
ret
xor
cmp
pop
popa
test
loop
sub
sub
sbb
and
inc
adc
add
pop
lds
push
dec
sahf
jbe
in
shr
pop
jne
in
das
test
leave
sub
pusha
mov
pop
inc
test
test
in
int
addr16
repnz
pop
hlt
xor
or
leave
iret
ret
ret
push
roll
sub
jb
ljmp
adc
aaa
daa
push
ss
aad
loop
or
mov
xchg
sub
aas
popl
adc
adc
insb
push
lret
das
iret
ret
jle
inc
mov
dec
and
sub
jns
dec
sub
lods
mov
pushf
mov
je
lret
push
push
fs
sbb
pop
rolb
mov
pop
xchg
clc
ficompl
xor
adcb
and
popa
inc
xchg
dec
std
mov
cli
les
mull
aaa
mov
inc
sbb
fisubrl
sbbl
out
out
sbb
sub
pop
cmc
and
add
insl
outsb
cmp
repnz
and
jp
stos
lcall
xchg
jo
pop
inc
sbb
adc
in
sub
lea
push
pop
outsb
js
loop
in
sti
adc
sbb
sub
stos
jnp
push
out
fs
cmp
jle
mov
loopne
lcall
lret
inc
cltd
cmp
push
les
pmovmskb
xor
loop
dec
xor
jnp
xchg
sub
cli
mov
fsub
movsl
xchg
decb
add
jmp
mov
testl
stos
cmp
out
xor
push
les
mov
xor
in
jp
add
pop
add
push
out
pop
sub
lcall
sbb
bound
decb
inc
out
cwtl
adc
pop
scas
notb
or
pop
push
xchg
daa
jg
inc
mov
jge
jmp
jb
repnz
inc
fadds
mov
sbb
test
jp
pop
and
xchg
sub
inc
es
int
xlat
xchg
inc
call
in
lods
aam
les
mov
fidivs
pop
jae
test
jmp
test
movsl
adc
add
pop
std
push
mov
in
notb
inc
xor
decb
in
fs
fiaddl
or
jle
lods
jo
sub
rep
cmp
cmp
xor
stos
mov
pop
movsb
xchg
add
lahf
lods
mov
inc
loop
cmp
gs
into
bswap
mov
inc
out
hlt
dec
iret
jp
mov
imul
add
push
push
adc
push
movsl
es
cmp
repz
add
push
or
dec
out
pushf
mov
sbb
out
jo
lock
mov
fdivrp
mov
icebp
sbb
sbb
aaa
add
das
je
outsb
aaa
jno
pop
ficoml
lods
cwtl
pop
push
lods
or
lret
and
xor
rclb
lods
cmc
sub
jecxz
in
lcall
and
push
pop
jae
out
jp
sbb
popa
loop
mov
mov
movsl
and
in
pop
lds
repnz
add
cmp
fildll
iret
jb
mov
jmp
add
dec
imull
sbb
aas
adc
imul
out
jo
mov
mov
cmp
mov
or
clc
popa
test
fs
mov
popf
push
pop
xchg
cwtl
jle
enter
sub
sbb
jno
adc
cmp
lods
lods
das
or
sbb
repnz
dec
aam
test
fsubs
add
xchg
push
iret
incl
cmp
addr16
pop
stos
imul
ds
mov
fcmovb
adc
fadd
push
jnp
aaa
dec
lods
icebp
pop
push
adc
mov
xchg
lret
jne
gs
daa
es
rolb
jg
icebp
push
fs
xor
imul
movsl
mov
arpl
gs
insl
lahf
dec
setle
loopne
xor
jl
push
loopne
enter
sbb
pop
push
push
bnd
add
inc
pusha
mov
and
sbb
push
ret
xchg
and
testb
inc
xor
cmpsl
das
cmc
sbb
scas
mov
sarb
jecxz
leave
sbb
es
leave
jne
xchg
outsb
rorb
scas
imul
outsl
jle
les
jno
sahf
add
leave
pop
je
sub
das
aas
adc
aaa
mov
aad
fs
rclb
pushf
xchg
lea
enter
sbb
mov
sbb
mov
pop
cmp
inc
mov
adc
add
or
das
pusha
rol
cmpb
dec
aas
dec
xchg
inc
fnstcw
pushf
push
xchg
daa
lahf
js
inc
mov
sub
popa
std
or
dec
adc
pop
sub
movl
push
add
add
repnz
pop
addr16
fs
out
mov
xlat
addr16
sbb
fs
insl
xchg
sub
fstpl
decb
hlt
es
cmp
mov
pop
mov
pusha
rcrl
jl
into
sti
xor
movsl
hlt
mov
iret
jnp
je
addr16
mov
rclb
jg
and
hlt
fst
push
inc
cltd
add
adc
repnz
in
and
idivl
ret
and
jl
loopne
mov
sbb
cmp
dec
gs
push
mov
testl
pop
rcl
mov
in
or
or
pop
adc
push
popa
push
dec
fwait
sbbb
push
in
mov
adc
inc
xorl
in
insb
mov
icebp
sbb
xchg
test
std
pop
lock
out
xor
push
dec
mov
jae
gs
movsb
test
je
xorb
mov
rcr
test
inc
cmpsl
test
pop
pop
popf
jmp
xchg
insl
xor
adc
fwait
in
shl
mov
or
movsb
ret
jne
in
mov
aam
xor
jnp
pop
jne
fisttpl
stos
pop
push
mov
sbb
add
mov
add
lret
outsb
lcall
sbb
ljmp
nop
xor
lcall
and
stos
shlb
jl
out
xchg
ds
sbb
mov
sarl
inc
cmp
cmpsb
mov
movsb
add
fldl
sbb
or
dec
cmpsb
out
xchg
push
sbb
and
push
lods
pop
mov
cmpsl
enter
into
lods
ljmp
inc
mov
lcall
insb
and
jae
mov
cmp
mov
mov
rol
jo
sbb
push
outsb
and
in
sub
outsb
pop
xor
dec
pop
mov
xchg
dec
and
dec
movsb
fs
pop
and
stc
pop
rcrb
inc
push
into
xchg
cmpsl
add
mov
icebp
sbb
add
aas
inc
arpl
adc
roll
ds
nop
pop
aaa
shll
les
std
cmpsb
fdivr
and
sub
jg
test
jge
and
dec
xchg
lahf
lock
aad
xor
nop
sub
aaa
sbb
out
lods
and
cmc
imulb
fdivrs
fsubr
out
xchg
gs
mov
push
gs
inc
int3
push
mov
push
bound
fldl
mov
adc
pop
adc
xor
out
adc
nop
cli
mov
fadds
or
test
lret
aad
fcompl
cmpsl
xchg
adc
cltd
aas
test
lods
stos
jno
lcall
mov
mov
mov
xchg
in
pop
or
sbb
test
xchg
ret
outsb
sub
ret
insl
scas
fcoms
and
dec
cwtl
cs
in
dec
lods
cli
outsb
inc
cmp
adc
xor
and
add
add
leave
lods
fcomip
roll
cli
imul
add
adc
add
gs
iret
call
xchg
aas
test
fcomps
adc
mov
sbb
pop
cltd
or
fldt
mov
jl
sbb
ret
lock
mov
dec
add
or
gs
imulb
add
shlb
dec
imul
jns
jg
xchg
add
push
jns
or
jnp
int3
int
inc
inc
sti
mov
inc
add
out
or
shlb
loope
orl
xchg
fidivrl
sbb
cld
cmp
out
out
xor
jg
movsl
aad
xor
xchg
xor
in
jns
mov
xor
fcompl
adc
imul
stos
fidivrs
xor
sub
push
pushf
sti
aam
out
sub
mov
xor
ret
das
dec
loope
cmp
in
mov
push
adcl
out
icebp
lcall
mov
fdivrs
int3
iret
sub
ret
push
cmp
out
sub
inc
test
cmc
cwtl
push
dec
inc
movsl
mov
adc
aas
int3
mov
loope
xchg
mov
and
fadd
andl
hlt
scas
je
pop
movsb
ja
push
and
arpl
popl
pop
or
or
call
jle
jnp
cwtl
dec
sub
xchg
jo
adc
cmpsb
fmull
push
xor
je
icebp
add
out
sar
mov
enter
jae
gs
or
popa
inc
orl
in
pushf
addr16
faddl
iret
mov
fdiv
lahf
push
sbb
movsb
stos
push
adc
pop
lea
ds
and
into
jl
pop
dec
push
pop
sub
fldt
add
sbb
sbb
or
push
push
int
movzbl
lock
adc
out
inc
ja
push
out
js
cltd
push
pop
sub
add
hlt
outsl
cmp
xchg
stos
pusha
pop
sti
mov
mov
jbe
addr16
in
lods
loopne
mov
rolb
jmp
inc
xchg
popa
sub
repnz
out
sbb
jo
pop
icebp
jp
pop
and
shr
jno
xchg
imull
push
add
int3
dec
into
popa
mov
fldenv
jl
pop
xorb
xor
movsb
mov
adc
lods
xchg
sbbb
cmp
sbb
sub
add
pop
std
lea
dec
add
mov
dec
insb
dec
sub
or
test
sbb
push
mov
clc
add
data16
add
mov
adc
xchg
mov
pop
cmp
outsb
inc
shr
aaa
dec
adc
jmp
dec
sub
movsb
bound
stos
repz
pusha
or
je
arpl
out
repz
mov
jb
xor
lods
pop
pop
add
push
jge
cli
es
fs
icebp
cs
negb
mov
out
mov
or
jbe
mov
andb
xor
imul
out
je
std
sti
push
loope
adc
es
jp
xchg
mov
inc
sbb
cwtl
mov
in
pushl
jge
cltd
mov
adc
insl
sub
adc
lcall
movsb
mov
lods
xchg
lds
add
in
addb
and
or
dec
and
call
jb
add
dec
mov
aad
xorb
in
je
insb
fndisi(8087
in
cld
mov
lret
mov
out
push
mov
jb
mov
ss
cmp
cmpsl
jge
inc
aad
add
inc
popa
ret
dec
inc
mov
aas
fcmovnbe
cwtl
adc
adc
mov
xchg
inc
xlat
push
push
jae
inc
and
loop
cld
mov
movsb
pop
mov
orl
cmpl
cmc
mov
std
daa
stos
dec
fucomip
or
lret
inc
push
push
lret
int
insl
cli
jne
addr16
fldt
xor
mov
add
nop
stos
push
mov
push
ret
jnp
mov
test
ss
bound
movsb
add
inc
inc
push
pop
mov
mov
cmp
xor
scas
popf
dec
pop
add
stos
xor
cld
in
xor
sbb
in
mov
jl
mov
inc
adcb
les
mov
push
ds
mov
cmp
popa
imul
mov
sbb
pop
cltd
jle
loop
sub
test
mov
cmp
test
xor
clc
sti
mov
ud2
imul
mov
mov
mov
das
pop
in
xchg
rcrl
lea
lahf
ret
lcall
daa
mov
data16
pop
scas
test
sti
ljmp
test
mov
les
jecxz
sbb
dec
test
outsl
jecxz
xor
or
adc
pop
in
das
cmp
xchg
stc
cmp
mov
pop
aam
fs
and
les
rcll
and
fsubrl
cld
sti
cltd
jmp
cmp
fucomi
lock
fsincos
dec
jbe
outsl
outsl
movl
sbb
movb
pop
rsm
mov
adc
mov
gs
adc
icebp
and
sub
sub
inc
leave
jns
inc
push
sbb
xchg
xchg
lahf
jmp
or
or
mov
mov
mov
movsl
sbb
mov
push
cmc
cmp
ljmp
imul
inc
adc
stos
xchg
dec
clc
add
fs
mov
cs
in
rorl
xlat
out
fwait
mov
into
pop
push
and
sti
sbb
stc
dec
shrw
cli
js
daa
std
cmpsl
cmpsl
jge
xchg
fdivrl
pop
popl
fimuls
dec
movsb
jno
xlat
lods
xchg
int3
insb
enter
in
je
movsl
fists
push
inc
aas
mov
imulb
mov
imul
lods
cmp
dec
push
call
adc
sbb
and
in
arpl
imul
addb
xor
les
cmp
outsl
mov
cmp
xor
jp
sub
sub
js
cltd
cli
insl
fmull
movsb
add
sub
mov
pop
or
arpl
and
sub
gs
mov
push
int
dec
and
enter
jo
aaa
push
add
mov
jo
or
int3
dec
xchg
xchg
sub
mov
lret
add
or
cs
test
cmc
je
push
jno
push
in
in
mov
lock
aam
or
dec
enter
cmpsl
jbe
out
push
or
adc
scas
dec
inc
mov
mov
sub
push
cmp
aam
fbstp
fstp
sti
cmp
mov
sub
push
cmc
add
push
inc
adc
xchg
repz
mov
mov
jmp
or
out
sti
push
and
mov
sub
and
add
sbb
roll
adc
mov
add
dec
fcoml
jge
shrb
pop
push
mov
hlt
adc
fdivp
sbb
mov
mov
xchg
jmp
push
pop
adc
fsubrs
das
movsl
push
rcl
add
daa
adc
sar
mov
aas
movsl
mov
andb
sbb
adc
sub
dec
push
cmp
push
mov
jmp
xchg
inc
negl
and
push
cmp
data16
adc
sbb
fistpl
in
and
dec
cmc
lds
lahf
pop
jecxz
shll
pop
xor
in
bound
and
sbb
das
add
rcrb
inc
add
ret
mov
cmpsl
and
pop
jle
mov
xor
scas
fldt
das
mov
ja
push
dec
cld
dec
aaa
ret
lcall
mov
add
ficompl
push
xchg
mov
inc
scas
int
mov
dec
pop
mov
mov
or
loop
addr16
movsb
movsl
ljmp
fisubrl
sbb
add
xor
aas
cmp
xor
ss
add
cltd
mov
inc
ds
jmp
fnstenv
adc
subb
mov
inc
inc
push
dec
nop
daa
mov
xchg
fadd
popf
or
dec
out
std
xchg
lock
jg
dec
loop
push
sbb
dec
lret
and
in
fimuls
mov
push
sahf
cmp
mov
in
pop
mov
f2xm1
dec
inc
mov
push
cwtl
lret
jne
adc
insl
ds
rorb
jns
fidivs
push
movsl
movnti
push
nop
pushf
push
loope
or
aas
xchg
ds
std
std
mov
cmp
xor
hlt
aam
outsb
adcl
inc
pop
lods
jae
xchg
xchg
rolb
mov
cmp
nop
push
out
iret
fld
test
jp
cmp
mov
es
pop
jne
loope
sub
push
mov
incl
iret
imul
cwtl
int3
aam
imulb
ss
jnp
jge
arpl
insl
add
orb
call
push
lods
js
pop
cld
mov
bound
cwtl
outsl
ror
fsts
sub
mov
xor
adc
fimull
dec
sbb
vmaxpd
mov
nop
cmp
pop
test
adc
push
jp
pop
rcrb
xchg
xlat
mov
push
pop
mov
mov
into
bound
sbb
leave
out
mov
out
adc
into
test
pushf
aas
adc
mov
or
in
rcrb
mov
sbb
pusha
xor
shl
popl
inc
jae
pop
mov
sahf
xchg
cli
mov
sbb
clc
and
dec
fstp
sub
xchg
insl
test
adc
fmull
js
xor
push
xor
lock
dec
pusha
out
mov
inc
adc
pop
or
les
adc
mov
inc
adc
cmpsb
cmp
push
pusha
in
sbb
popa
fbstp
xor
ja
inc
add
stos
in
dec
ss
cwtl
jbe
shr
jnp
cmp
mov
cmp
cli
cmpl
lahf
sbb
cmc
loope
and
inc
mov
push
repz
pop
and
movsw
cmpsb
or
gs
rorl
xor
jb
cwtl
dec
inc
push
xchg
rclb
sbb
pop
rolb
cmpsb
jne
bound
or
hlt
push
aas
dec
adc
jae
call
or
add
jl
cmp
into
fcoml
popf
jb
stc
shrb
cmpsl
pop
scas
pop
or
ja
cmc
push
pop
add
js
inc
mov
mov
pop
cwtl
ljmp
cld
sub
sbb
faddp
xor
pop
jns
scas
or
sbbl
xchg
cmp
jno
sub
add
sbb
fidivs
push
and
pop
mov
out
clc
add
pop
in
inc
sti
and
test
xor
push
and
adc
je
dec
xchg
mov
inc
push
push
xchg
loop
dec
jnp
lods
lds
xor
cmpb
fildl
in
out
cmpsb
cwtl
shll
imul
jo
imul
mov
xor
xor
push
xchg
mov
and
lods
mov
or
sub
jmp
test
mov
cmpsb
out
push
pop
adc
cli
outsb
orl
mov
aas
push
xchg
mov
dec
inc
movsb
aad
loope
in
push
test
enter
adc
add
mov
lret
jmp
ret
pop
xor
sbbb
mov
orb
cmp
add
push
scas
jl
sbb
ss
out
lea
inc
invlpg
leave
test
xor
push
xchg
cs
adc
test
push
into
loopne
outsl
loop
lret
xchg
je
loopne
hlt
jg
leave
shrl
xor
lcall
mov
imul
jmp
cwtl
dec
jle
jecxz
mov
pop
sub
dec
int
pop
sahf
cmp
ljmp
rolb
push
sbb
testl
cld
sub
cwtl
loop
aad
add
gs
xor
mov
mov
add
icebp
sbb
xchg
ljmp
pop
fdivs
loope
dec
push
xor
andb
in
cmp
loopne
dec
mov
mov
ret
aad
adc
icebp
out
push
imul
or
mov
dec
xchg
loope
mov
jg
xchg
arpl
into
out
shrb
inc
icebp
sub
mov
loop
es
imul
mov
lret
in
cmc
insb
mov
lahf
call
push
test
decl
movsb
lock
das
mov
mov
fists
ja
cs
mov
imull
push
cmp
cwtl
add
or
mov
ljmp
inc
sbb
xchg
sbb
xchg
xor
push
loopne
les
xchg
push
lods
in
sbb
push
lahf
push
imul
aad
push
jl
dec
xor
in
cltd
ss
mov
mov
lock
push
xchg
lods
xchg
imul
or
imul
test
addr16
mov
fsubs
stc
cmpsl
mov
clc
dec
lret
or
fs
pop
in
xchg
sbb
fucom
rolb
mov
add
dec
insl
es
fld
pop
mov
mov
jns
lock
stc
jmp
cmp
xor
push
lock
xchg
fucomip
cmp
or
mov
clc
in
pushf
dec
adc
xchg
in
cmp
mov
lret
xor
push
push
sub
out
sahf
fcmovnbe
imull
or
inc
enter
push
daa
pusha
push
js
aam
pop
jbe
outsl
push
pop
xchg
add
es
test
out
bnd
lret
sub
push
bound
in
and
mov
or
jecxz
push
outsb
test
xchg
mov
pop
roll
neg
roll
xchg
dec
jae
cmp
fiaddl
fsubrl
sub
sar
mov
jne
scas
test
int
jbe
ja
jnp
jb
lds
iret
std
mov
stos
pop
add
xchg
cmc
out
jb
mov
cld
ja
fists
int
pop
mov
loope
in
les
imul
aad
cltd
and
js
cmp
icebp
jecxz
leave
sub
add
lods
lsl
or
rcr
fwait
push
pop
int3
test
inc
push
jmp
int
add
mov
sub
xchg
push
dec
orb
jp
pop
push
ja
rolb
test
and
mov
adc
inc
jl
mov
jmp
sub
pushf
mov
adc
mov
in
jp
sub
pusha
mov
hlt
inc
pop
xchg
cmpsb
rolb
scas
je
xchg
fnsave
push
cmp
lret
jle
loope
xor
insl
addb
jae
js
cmp
xor
push
and
xor
aaa
sbb
add
or
mov
jge
cmp
sarl
imul
addr16
aaa
push
jg
orl
test
cld
xchg
test
outsb
imul
dec
xlat
xchg
mov
stc
add
jmp
xchg
ret
fsubr
or
mov
cmp
nop
mov
dec
pop
and
inc
std
stos
jecxz
jns
aas
push
pop
lods
push
mov
test
or
xorl
pop
imul
sbb
add
in
pop
popa
out
and
sub
adc
out
outsl
xor
xchg
pop
std
jo
dec
xchg
lahf
push
int
fsubs
cmp
sub
stos
es
xchg
lret
inc
arpl
push
mov
cli
insl
pop
push
call
push
jb
and
std
imul
and
loope
icebp
sub
imul
xlat
jnp
hlt
sub
scas
or
out
and
jae
es
insb
xorl
mov
push
cmp
cmp
xchg
pop
dec
mov
add
mov
mov
sub
cmp
or
imul
jle
das
jg
imul
or
stos
insl
mov
pop
xchg
push
mov
ud0
fildll
roll
adc
stos
adc
inc
mov
fcoms
add
xor
push
aad
sahf
out
jp
cmc
cmp
sub
lret
jle
call
jle
lds
push
lds
das
movsl
xchg
fld
mov
mov
and
push
mov
sub
adc
fnstenv
outsb
inc
data16
and
insl
mov
fimull
adc
or
js
pusha
cmp
adc
adc
pop
sub
mov
jbe
sub
in
xor
and
add
sarl
je
hlt
into
fcmovbe
pop
pop
leave
add
dec
into
jb
mov
dec
enter
dec
bound
xor
into
inc
sub
pushf
jnp
xor
outsl
xor
cmpsb
sub
adc
hlt
sbb
fimull
gs
ret
add
aad
arpl
inc
jbe
nop
in
pop
outsb
xchg
sbb
addr16
mov
roll
insl
test
cmp
inc
and
movsb
in
fs
imul
sub
inc
daa
shl
inc
enter
shrl
in
mov
push
pop
in
mov
pop
cmpb
lret
or
rclb
cmp
inc
outsb
sahf
lods
ja
jp
pop
repz
adc
push
mov
gs
testl
shll
jp
insb
dec
int3
mov
jno
fstpt
int3
loop
pop
pop
pop
add
cli
repnz
lret
push
aam
jecxz
ja
clc
sub
notl
and
loop
xor
scas
mov
xor
ljmp
fstp
mov
mov
push
adc
xor
add
dec
pop
fwait
cmpsb
sbb
push
mov
cmpsl
sub
cwtl
dec
dec
fimuls
fs
jb
jmp
ja
das
pushf
test
hlt
loope
xlat
std
push
outsl
jge
jle
pushf
insb
subl
push
rolb
jbe
xchg
push
add
sub
pop
jmp
cld
inc
adc
mov
inc
mov
or
js
stc
imul
sbb
pop
and
idivb
out
sub
out
scas
test
iret
cmp
xor
aam
lock
mov
jo
mov
push
xchg
xchg
mov
sbb
mov
icebp
xor
pop
push
cmp
test
ja
sub
pop
fldt
cmovnp
fwait
test
popf
pop
adcl
lods
inc
sbb
mov
das
loope
and
stc
xor
cmp
pop
loope
jp
stos
fldenv
enter
rcll
xchg
push
mov
fmull
call
mov
lds
negl
xchg
jecxz
sbb
or
mov
adc
out
push
les
loope
sub
sbb
test
or
push
jecxz
je
aam
les
push
pop
xchg
repz
nop
dec
sbb
cmp
xchg
in
or
push
lcall
mov
mov
pusha
hlt
jno
test
sub
loop
cmpsb
xor
jge
dec
jg
ret
fistl
sbb
pop
gs
inc
or
pop
andb
movsb
int3
pop
jge
fisubrs
add
fisubrl
in
iret
adc
mov
inc
lret
cmp
inc
or
add
fldcw
int3
adcl
xor
ljmp
mov
dec
cmp
mov
pop
adc
jns
add
xor
rcr
and
xchg
jae
or
cltd
test
enter
lods
orl
loope
cmp
fdivr
cmpl
pushw
cmp
adc
loopne
pop
loope
adc
aad
pop
arpl
inc
stc
cmovae
mov
gs
outsb
decb
lret
mov
ja
stc
arpl
fistpll
pop
push
pop
sbb
adc
addr16
call
cmpsl
nop
adc
int
stc
data16
jl
pop
dec
inc
sub
push
adc
js
dec
xor
cmpl
ss
cs
das
pop
inc
jns
rorl
mov
aad
cwtl
jge
pusha
inc
out
std
sub
ss
mov
sbb
push
mov
push
mov
out
push
adcl
xor
and
sbb
mov
sbb
loopne
test
push
xchg
or
imul
sub
addb
les
mov
je
pop
ret
mov
test
je
js
cld
aas
aaa
loop
cmpsl
mov
xorb
out
xor
mov
cs
add
xor
sub
fdivp
scas
pushf
pop
cli
or
icebp
mov
cwtl
mov
fwait
jg
ja
add
sbb
loopne
and
lea
dec
sub
mov
dec
xor
push
push
fldt
leave
inc
dec
mov
jle
jb
xchg
add
xchg
jge
xor
lds
je
push
mov
jmp
mov
out
pop
dec
mov
bound
frndint
pop
mov
mov
loop
or
pavgw
out
jl
mov
jmp
mov
inc
and
shlb
adc
cltd
lret
dec
xchg
jge
add
mov
nopl
mov
cmp
sahf
mov
adc
push
pusha
data16
pushf
clc
insl
cmp
sub
cmpsb
inc
loop
out
cmpl
jns
pop
movsb
xlat
pop
lds
or
pop
movb
divl
in
int
lahf
or
pusha
mov
push
aas
or
cmp
mov
push
xchg
insl
aad
test
pop
push
icebp
mov
sbb
fldt
xchg
or
mov
ljmp
mov
add
scas
jb
jbe
adc
push
mov
push
cmpsb
fadd
dec
or
out
inc
lods
mov
enter
call
loope
cmp
scas
push
movsb
dec
xor
cmp
js
sti
sahf
xor
shlb
sub
push
aaa
jle
and
js
xor
imul
in
ret
movsb
or
leave
test
dec
pop
mov
xor
mov
mov
add
adc
nop
cmp
mov
xor
sub
fildll
sarl
cld
stc
incb
sarl
sub
cmpsl
nop
add
lods
or
call
mov
xchg
push
push
mov
jnp
scas
or
repnz
or
lahf
mov
mov
negb
ja
int3
je
xorps
test
daa
lret
lods
shl
iret
cmp
sbb
and
pop
test
bound
or
fildll
push
andb
insl
gs
mov
push
repz
sbb
mov
popf
jl
sub
dec
xchg
out
xchg
xor
imul
mov
out
jle
popf
push
aaa
clc
loope
xor
sti
mov
jns
nop
inc
add
icebp
stc
adc
outsl
fnstcw
icebp
push
jg
filds
mov
mov
inc
ret
scas
hlt
in
insl
mov
idivb
mov
push
mov
jecxz
or
pop
or
mov
push
mov
mov
jl
and
pop
adc
inc
fcomip
dec
cmpsb
mov
xor
inc
mov
stc
xchg
sub
xchg
mov
push
call
sub
scas
push
inc
mov
cmpsb
outsl
dec
push
or
stc
pop
dec
and
adc
outsl
cmp
and
mov
movsl
jl
lret
cmp
insb
inc
sbbl
stos
mov
mov
lods
xor
jmp
lods
outsl
adc
cmp
add
divl
ret
push
jb
fbstp
adc
jp
stc
cli
dec
in
xor
lret
sub
int
jae
les
stos
cs
arpl
jbe
inc
pop
arpl
iret
push
mov
lea
and
pop
and
pusha
jle
add
jno
or
inc
out
inc
jno
pop
jl
mov
cs
in
repnz
or
push
and
xchg
stc
push
sahf
hlt
imul
cs
xlat
lret
loop
xor
in
rol
cmp
es
xor
jmp
lret
test
pop
push
xlat
xchg
movsl
dec
jbe
jg
inc
cltd
shrb
sbb
xchg
cmpsb
mov
and
jmp
mov
insb
lods
aad
mov
inc
shll
dec
jge
pop
pusha
popa
sub
cmp
push
cmp
clc
sahf
popa
pushf
stos
xchg
repz
ret
scas
and
dec
inc
dec
mov
jno
and
fisubrl
mov
ss
ja
xor
je
sub
cmc
xchg
or
dec
jne
lds
mov
mov
jne
cmp
adc
mov
pop
or
test
or
cmpsl
das
pusha
xor
int
push
pushf
mov
adc
fstpl
inc
sti
dec
inc
test
ds
push
mov
aas
js
mov
pushl
inc
ss
pusha
xlat
sbb
movb
fmuls
test
mov
cli
and
push
and
mov
out
adc
test
cmp
mov
bound
xor
test
insb
xchg
push
pop
call
nop
or
cld
and
pop
and
sahf
or
mov
lock
bound
add
mov
inc
stos
push
mov
test
dec
lcall
in
push
cmp
adc
mov
sub
arpl
pop
cli
mov
dec
aaa
push
out
fcomp
notb
add
add
xchg
mull
mov
loop
adc
lahf
jae
or
jb
mov
bound
unpcklps
add
dec
or
stc
xor
sub
push
cltd
ds
nop
shr
imul
jne
sbb
xchg
mov
orl
xor
int3
cmpb
out
in
mov
add
mov
daa
sub
outsl
push
dec
std
push
xor
popf
fwait
out
push
mov
dec
filds
sbb
mov
cmpl
xor
push
mov
rcrb
frstpm(287
dec
xchg
jae
adc
outsb
mov
jno
cli
cld
les
enter
inc
xor
cmpl
addr16
lock
mov
dec
in
jno
sub
fldl2t
xor
fistl
sbb
int
push
and
mov
mov
pop
popf
fdiv
shll
ret
aas
jnp
cmovbe
cld
ret
jb
int3
jnp
stc
xchg
add
fisttpll
daa
sub
lock
imull
sub
adc
push
inc
adc
out
loop
jbe
stc
sub
cmp
insl
in
fstpt
bound
and
add
and
into
testb
jbe
popa
rcrl
js
mov
mov
sahf
sub
xor
mov
ret
and
xchg
fstps
or
sub
out
dec
pop
mov
and
ja
dec
push
repnz
std
cwtl
mov
js
sahf
and
stos
push
mov
mov
mov
fs
sub
in
mov
loopne
xor
sbb
roll
xor
push
mov
xchg
cld
rclb
into
cmp
add
pusha
mov
inc
sbb
mov
push
xchg
ret
mov
xchg
fstl
pop
data16
cwtl
pop
jg
fiaddl
notl
dec
jne
fdivl
sub
sahf
push
push
hlt
ja
sbb
idivl
ret
push
and
test
mov
pushf
xor
pop
xor
roll
adc
out
loopne
adc
xchg
or
xchg
loope
cmp
lock
pop
aam
sub
aas
arpl
popa
dec
sti
add
dec
in
jbe
cmpsb
stos
pushf
sahf
dec
mov
and
jle
cmpsl
in
inc
dec
cmc
dec
pop
fiaddl
out
aas
push
in
stc
lods
or
dec
mov
mov
popf
and
andl
push
aas
and
js
repz
int3
inc
dec
mov
sub
inc
jmp
pop
popf
shll
cmpl
sub
ljmp
mov
and
pop
fstps
fcmovbe
cmp
pushf
jae
aam
mov
imul
hlt
sbb
sbb
jmp
arpl
xor
mov
dec
dec
xchg
push
xor
sbb
loope,pn
dec
or
orl
mov
pusha
daa
rorl
mov
jne
cmp
jo
sbb
gs
int3
add
stos
push
scas
cli
dec
cld
lds
xchg
jne
and
scas
into
test
or
jl
xor
dec
ror
cmc
shll
stos
dec
xchg
mov
out
rcr
sahf
in
cs
mov
leave
mov
bound
adc
mov
lcall
out
dec
sub
cmp
mov
mov
mov
inc
js
imul
sub
mov
fiaddl
loopne
fmuls
jne
aam
push
sub
sbb
fildl
rorb
xchg
out
daa
subb
lcall
orl
fcoml
mov
popf
and
add
in
adc
outsb
xor
sub
cmpsl
mov
test
loop
out
fildl
or
push
and
sahf
sahf
or
ss
mov
iret
jl
lock
dec
mov
jl
lahf
push
jmp
rcr
sti
into
sub
and
lcall
xor
inc
out
lret
xchg
sbb
pusha
call
adcb
data16
test
sub
mov
gs
shrl
or
icebp
and
imul
cmp
lock
gs
out
jno
pop
dec
xchg
adc
iret
in
pop
daa
mov
mov
outsl
xchg
fwait
or
or
mov
sbb
lret
nop
jecxz
into
add
mov
dec
cmp
mov
out
xchg
lods
pushf
sbb
and
shrl
adc
or
outsl
test
test
in
clc
mov
inc
push
ret
jmp
cmp
xchg
push
push
jo
push
cmpsl
jae
fisubs
sbb
mov
mov
outsb
aas
leave
jmp
cmpsl
ljmp
add
xchg
lret
mov
xchg
bound
push
imul
aam
xor
xlat
and
inc
push
adc
arpl
and
shl
ret
test
xor
mov
nop
mov
sub
adc
xchg
mov
ficoms
out
cmp
outsl
mov
lods
pusha
adc
xchg
mov
fcmovb
fldenv
mov
jmp
sbb
jns
inc
cmpsl
push
repnz
or
push
in
clc
ds
enter
movsl
dec
ja
mov
xchg
inc
or
and
mov
call
in
movl
and
pop
repnz
out
mov
lcall
sub
push
out
add
sbb
and
sub
lods
cmpsl
xchg
aad
outsb
sbb
lcall
clc
jne
cmp
sbb
cmp
fsubl
push
push
mov
sub
aam
xor
imul
addr16
mov
ss
cwtl
je
and
jns
pop
mov
xchg
mov
test
xlat
mov
mov
xor
cmc
xchg
push
repz
adcb
loopne
lret
repz
sub
stc
jae
sub
outsl
lods
test
movb
inc
fcoms
push
push
cli
pop
xor
pop
sbb
aaa
in
lods
call
cmp
das
xlat
push
arpl
movsl
or
mov
jge
jnp
mov
jg
cmp
dec
and
mov
popf
cmp
or
je
es
add
pop
mov
add
movsl
je
out
std
sub
std
and
fsubrl
data16
push
lock
inc
mov
stos
ljmp
add
sub
mul
xchg
mov
jl
loopne
int
jg
xchg
adc
test
fcmovnb
fldenv
ljmp
sub
stos
aas
ja
mov
out
inc
dec
push
inc
loopne
add
xchg
cltd
mov
fdivrl
dec
fmul
mov
test
mov
out
and
cmp
pop
lret
stc
stos
xchg
push
push
shl
lahf
pop
push
sbb
mov
lods
test
jo,pt
jge
mov
out
xor
jne
cmp
cs
push
in
sbb
cli
lahf
ucomiss
cmp
mov
dec
pop
sbb
mov
xchg
pushf
pop
data16
fsubrl
sub
dec
inc
or
dec
sbb
imul
loope
rcrb
mov
pop
in
dec
aas
cmp
addr16
mov
mov
imul
mov
jl
arpl
in
inc
fld
add
dec
cs
xchg
or
lahf
cmp
cmp
push
vunpcklps
mov
xor
pop
pop
shl
ss
gs
bound
jno
pop
clc
movsl
fiaddl
cltd
shll
pop
mov
fcmovu
or
lret
test
dec
mov
test
sub
adc
shlb
sub
mov
inc
mov
xchg
cli
push
inc
fisubs
and
mov
cmp
or
std
cmp
add
mov
or
fsubp
cmp
xor
cli
jecxz
ret
xchg
ja
mov
and
ds
sub
in
mov
mov
mov
pusha
notl
jne
mov
mov
push
call
rorb
pop
jnp
repnz
and
push
xor
or
jge
xor
jae
pop
aad
sub
mov
cld
adc
mov
lock
in
nop
jle
lret
xor
sub
imul
jl
repz
xchg
fisubs
xchg
loope
and
or
in
xlat
pushf
loope
arpl
dec
push
xchg
pop
orb
cmp
inc
jmp
mov
dec
repnz
and
dec
leave
rcl
pop
mov
push
bound
loop
dec
xchg
xchg
adc
scas
sub
pop
ss
pop
push
adc
lret
hlt
jae
adc
push
push
mov
jne
out
outsl
cmp
inc
mov
fisubrl
lret
mov
out
adc
jo
rolb
fcoml
or
aaa
pop
jge
loopne
fmuls
and
sub
je
sbb
mov
cmc
out
aaa
dec
dec
push
mov
pop
ret
adc
mov
cmp
mov
add
add
sbb
ljmp
jl
loopne
subl
xchg
out
movsl
jo
or
or
fldenv
push
leave
aas
pop
mov
mov
pushf
imul
xchg
cmp
lret
inc
cmc
inc
sbb
push
nop
jg
jp
les
out
xchg
imul
pop
sub
pop
add
imul
decl
lret
mov
shlb
movsl
mov
sbb
sbb
jecxz
cmpsl
std
mov
lods
incb
sbb
dec
sub
mov
jecxz
jmp
int3
fwait
or
inc
mov
xchg
pop
in
in
xchg
rcrl
call
adc
jp
shlb
mov
mov
push
rcrl
mov
jecxz
andl
lcall
popf
iret
call
pop
jl
xor
lods
fmull
sub
daa
dec
jno
mov
out
pushf
sbb
sti
rorb
in
fwait
pushf
mov
adc
nop
ja
push
data16
cwtl
pusha
push
cwtl
cmc
jg
push
xchg
cmp
icebp
and
daa
daa
sbb
imulb
or
adc
pop
outsl
mov
clc
les
xor
xor
cmp
jo
or
gs
mov
cmp
xchg
in
xchg
addr16
dec
aad
sub
or
cmpsb
pop
push
xchg
inc
sub
sub
loopne
sbb
cmp
push
aaa
cltd
sub
push
rcrl
cs
lahf
shrl
mov
xlat
mov
test
sub
repz
xor
mov
mov
and
pop
mov
daa
pcmpeqw
add
mov
popf
fstpt
mov
ja
pop
mov
outsb
std
aas
add
mov
je
movsl
int3
xchg
mov
out
shlb
loope
stos
pusha
push
call
sbb
xor
mov
cmp
ficoml
pop
lds
adc
jmp
cmpsl
fs
jecxz
aam
scas
ja
jp
jle
imul
cmp
mov
andb
xchg
jae
sbb
xor
shr
xor
adc
in
in
loopne
popa
push
call
pop
pop
jecxz
add
push
mov
xor
pop
shl
cmp
xlat
fimuls
dec
mov
ja
pop
in
dec
pop
mov
xor
lcall
push
pop
jp
ss
push
test
or
cmc
sbb
loop
adc
insb
push
fists
inc
arpl
stc
iret
push
out
push
push
cmp
and
aas
dec
sub
inc
xor
jg
out
iret
rcr
insb
jle
es
hlt
xor
pushf
push
sti
divb
fyl2x
aam
repz
rcr
out
in
ror
or
xor
and
pop
in
dec
mov
out
pusha
cli
cmpsb
jmp
mov
and
lahf
cli
rcrl
stos
mov
or
ljmp
or
popa
add
xor
inc
pop
or
rcl
mov
sub
out
mov
out
loop
sbb
or
fldcw
push
push
and
inc
inc
stos
jns
jg
shl
mov
xchg
xchg
mov
jge
lods
dec
aas
mov
xchg
inc
cli
push
mov
ljmp
cmpsb
sub
fidivl
and
out
sbb
mov
pop
fwait
push
mov
sub
pop
outsl
repz
fildll
cmp
sub
sti
pop
jmp
and
leave
stos
std
push
popf
aam
stos
call
aas
or
push
lret
loop
stos
pop
sub
sbb
pminub
cwtl
insl
es
mov
xchg
inc
jno
pop
pop
dec
inc
out
and
push
int
mov
pop
pusha
outsl
clc
in
add
adc
xor
xor
ficompl
lds
ljmp
cmpsb
add
mov
and
dec
jne
jo
and
push
xor
adc
push
or
or
push
add
push
clc
shlb
pop
leave
xchg
pop
pop
mov
scas
push
mov
mov
xchg
mov
cmp
popf
jle
mov
fsubrs
into
in
mov
jmp
insl
in
push
jnp
push
ljmp
stos
decl
jne
cmc
xchg
mov
andb
inc
or
push
sub
xor
cli
adc
mov
call
pop
in
insl
cli
inc
dec
mov
enter
mov
pop
mov
ja
mov
jmp
xor
push
mov
rcll
fmul
jo
loopne
mov
cmc
popa
cwtl
fs
inc
stos
push
sub
stos
xchg
iret
andl
add
cmp
into
dec
mov
push
sbb
ficomps
sti
inc
mov
push
popa
push
jns
lds
fisttpl
push
xor
mov
lds
jns
cmp
cli
mov
push
lcall
std
jno
ret
push
andb
repnz
rcll
inc
lahf
and
xor
lods
xor
scas
xchg
fistpl
pushf
sub
mov
xchg
inc
jae
xor
xor
mov
push
icebp
adc
inc
cmp
mov
in
int
push
or
lahf
mov
mov
faddl
int3
jmp
pop
mov
mov
xor
jg
cmp
pop
mov
xchg
in
cmpsb
dec
mov
cmc
test
inc
jle
test
mov
fld
nop
out
xor
lcall
movsb
mov
fdivr
and
roll
movsl
daa
xlat
clc
sbb
stos
push
ljmp
ja
xor
add
fisttpll
loop
test
sbb
out
jb
sbb
inc
adc
gs
int
or
stc
int
int
test
test
bound
test
jle
icebp
cmp
hlt
jge
jp
pop
mov
add
lret
into
out
dec
stos
pop
pushf
shrb
mov
jns
xlat
mov
cmpsl
adc
int3
insl
jecxz
add
mov
and
pop
dec
sahf
sub
test
popa
push
mov
gs
add
adc
push
movsb
cmpsb
pushf
ret
mov
fstpt
fadds
pop
imul
push
jae
push
and
xorb
inc
mov
sbb
into
or
movsl
fwait
pop
stc
sbb
cwtl
mov
jmp
add
add
imul
mov
popf
leave
push
loop
push
sbb
fldt
insb
xchg
movsl
mov
out
pop
xor
jl
push
arpl
in
icebp
and
mov
in
push
pop
xchg
cmp
or
lret
in
outsl
jecxz
addr16
daa
inc
or
dec
scas
mov
dec
jmp
into
je
pop
test
inc
or
dec
bound
in
xor
mov
and
ja
mov
aam
inc
loop
pop
sub
mov
xorl
xchg
jbe
loop
lret
fidivs
push
ficomps
mov
cmc
lret
sbb
push
push
stos
loopne
call
rcll
aam
add
jbe
aas
imulb
push
stos
fwait
mov
fucomi
push
pop
xchg
mov
dec
or
in
sbb
jno
or
xchg
inc
rolb
push
cmp
in
insb
cltd
loopne
loop
rcrb
cmp
mov
push
nop
or
repnz
ljmp
icebp
movsl
andl
mov
fists
mov
lock
push
test
jg
push
jno
inc
xor
test
mov
cmp
adc
repnz
loope
aam
jne
dec
add
xor
out
inc
adc
cld
cmpsb
push
mov
and
mov
push
orb
inc
js
out
mov
int3
push
mov
rol
jns
lds
inc
sbb
pushf
add
sbb
in
cmp
pushf
jp
sbb
push
lahf
shrb
pushf
dec
pop
mov
mov
sbb
push
push
xchg
pop
subb
jne
mov
mov
sub
and
inc
std
dec
sti
mov
jbe,pt
or
iret
mov
adc
push
mov
lahf
stos
aam
cmp
push
cwtl
cs
add
cmp
lahf
negl
pmaxub
mov
and
sub
or
and
js
imul
add
loope
and
mov
mov
push
sub
and
sbb
pop
mov
test
sub
pop
add
push
stc
lret
pop
jge
inc
aam
cltd
xchg
xchg
int3
repnz
addr16
ljmp
repnz
fsts
mov
out
and
clc
aad
sbb
std
push
clc
and
inc
adc
jmp
pop
adc
movsb
popf
sub
sbb
sahf
xor
stos
lds
xchg
pop
stc
insb
rclb
add
fildl
xor
add
mov
leave
pop
sub
dec
idiv
cmp
push
shr
ror
out
outsb
adc
sub
jae
mov
jne
std
sbb
xchg
js
add
ja
pop
mov
cmp
stos
scas
lock
out
ljmp
pop
push
mov
xor
in
enter
aam
leave
mov
sarl
mov
pop
jg
push
out
stos
dec
pushf
daa
mov
mov
aam
push
std
dec
sbb
das
call
push
mov
dec
and
cmp
sub
dec
idivb
pop
sub
out
es
pusha
and
in
insl
sub
fmulp
mov
and
add
xchg
push
xor
pop
ret
in
lcall
sbb
ljmp
fidivrl
addr16
cmp
sar
fists
enter
mov
adc
mov
xchg
scas
add
add
inc
and
xchg
sbb
test
inc
or
push
pop
inc
sbb
pop
mov
popa
dec
cmp
ljmp
mov
inc
inc
sbb
lods
pop
icebp
mov
lcall
cmp
jl
xlat
sub
and
repz
pop
jb
jbe
push
xchg
wbinvd
or
adc
mov
adc
je
cwtl
dec
ror
xor
xchg
pop
dec
sub
cmp
fbstp
and
mov
mov
je
leave
fwait
dec
out
cmp
outsl
addb
xchg
call
lcall
pop
outsl
test
jge
fucom
fidivl
test
push
adc
jg
divb
jne
std
and
jo
data16
xchg
dec
out
mov
xchg
mov
cmpsb
inc
cmp
sbb
xchg
das
je
push
cmp
jg
jae
int
subl
xor
lret
loopne
in
cmpsb
aas
mov
xchg
sub
cltd
inc
lds
jg
jno
pop
test
mov
jnp
jge
popf
xchg
mov
out
test
xlat
out
cmp
mov
jp
add
xor
mov
cmpsl
mov
rcll
inc
mov
icebp
sbb
sbb
xor
and
mov
outsl
sar
inc
dec
xor
pushf
sarl
sub
pop
cli
mov
repz
and
xchg
push
cmp
mov
lcall
sbb
repnz
cmpb
push
mov
inc
mov
jns
or
testl
pop
or
xchg
and
xchg
jae
adc
les
and
push
jb
adc
inc
inc
pop
sub
add
repz
test
inc
sahf
ficomps
pop
je
push
sbb
int3
popaw
stc
shlb
addb
jp
jg
movsb
xchg
das
aad
out
jns
loope
loope
or
int3
sub
andb
jns
and
int3
add
pusha
pop
cmpb
push
stos
inc
add
sar
mov
mov
lods
push
push
pop
xchg
or
jb
pop
inc
dec
dec
xor
jle
lret
cli
push
pop
shl
loope
idivb
paddusb
jo
dec
cltd
adc
int3
sub
jp
popf
outsb
adc
jnp
push
xchg
mov
arpl
inc
movsl
lret
jg
stos
js
xor
imul
inc
mov
fidivrs
xchg
push
mov
cltd
dec
jl
or
ss
movsb
jns
shrb
shlb
imul
jns
ss
sbb
mov
xchg
sarb
mov
call
fwait
push
jp
xchg
and
loope
xor
pop
inc
out
push
dec
aam
lret
sbb
push
xchg
mov
faddl
test
loop
out
inc
fcmovbe
adc
div
mov
adc
stc
shr
xchg
stos
xor
sbb
cmpb
lock
dec
popa
sub
push
int3
jmp
nop
adc
xor
adc
cmc
loopne
shrl
addb
arpl
fwait
mov
add
pusha
aas
fs
inc
lcall
shlb
push
xlat
mov
mov
mov
dec
push
jp
adc
jo
inc
std
addr16
data16
rcrl
cltd
jno
jo
nop
outsl
cmp
or
cld
test
mov
insl
leave
push
stos
cmc
pop
mov
inc
or
rorl
into
inc
jae
outsl
cld
mov
or
js
shrb
fwait
add
shlb
cmc
xchg
sub
inc
cmp
mov
jmp
in
pusha
iret
push
bound
into
adc
loope
inc
adc
jae
es
mov
and
dec
mov
test
out
jp
xor
hlt
pop
mov
dec
sub
outsl
cmp
mov
sub
lret
sbb
leave
rorb
and
lcall
xchg
and
outsl
or
adc
jle
icebp
jg
sahf
sub
cmp
in
ror
ja
stos
fisubrl
jb
into
sub
pop
icebp
in
mov
aas
sarl
cmp
mov
cli
add
popa
pop
stos
and
push
iret
out
mov
cltd
mov
fdivs
sbb
lret
inc
dec
out
stc
xor
pop
sbb
daa
push
scas
dec
xor
and
mov
and
mov
sar
fsts
mov
inc
stc
in
mov
mov
inc
lret
jge
lds
iret
dec
popf
in
popa
xchg
mov
inc
jbe
inc
pusha
sub
and
adc
jmp
and
sbb
or
mov
sbb
and
std
mov
cmp
mov
mov
xor
bound
inc
mov
std
out
push
xor
in
jecxz
mov
mov
adc
inc
sti
xchg
bound
aas
push
cmpsb
mov
mov
in
sub
dec
addr16
in
pop
fmull
pop
rcrb
sub
mov
cmpsb
cmp
fucomi
jg
loopne
adc
and
xlat
fbstp
dec
stos
cld
sbb
ja
cmp
cmp
jle
adc
loop
lret
stc
jae
daa
fs
push
andb
push
xchg
mov
imul
loope
sbb
shll
or
xlat
mov
rcl
sub
jp
mov
insl
pop
cwtl
sbb
stos
popf
mov
xchg
into
adc
push
sub
icebp
jle
hlt
leave
jbe
ljmp
dec
mov
les
insb
jl
les
mov
inc
mov
mov
pusha
and
popf
xlat
xor
int3
shll
repz
in
or
push
subl
sbb
shll
sti
mov
add
lea
and
enter
and
sbb
rep
and
outsb
and
or
jl
lds
inc
mov
pop
push
sbb
xor
cmc
lea
sbb
adc
pop
test
mov
jb
jo
scas
in
pop
jns
inc
jno
sbb
sbb
ds
sub
xor
xchg
mov
xchg
push
adc
mov
iret
insb
cmp
push
lds
fdivr
jbe
pop
pop
and
bound
nop
stos
or
repnz
cmp
jecxz
ss
xor
add
call
or
test
add
bound
adc
inc
shrl
pop
push
mov
pop
mov
and
aaa
sub
sub
sbb
pop
adc
les
repz
adc
jg
add
push
fmul
repnz
addr16
test
sbbl
mov
push
mov
outsb
shl
sbb
filds
mov
mov
sbb
mov
ficoms
pop
jno
outsb
sbb
xchg
scas
mov
cmpsb
arpl
mov
add
hlt
mov
mov
lcall
pop
mov
pop
xchg
pusha
ret
es
in
aas
jmp
aad
push
sub
inc
or
mov
sbb
push
mov
mov
fimull
mov
cltd
rcr
mov
outsb
std
aas
notb
xchg
mov
pop
adc
mov
test
setp
jge
mov
repz
pop
add
fmull
xor
pop
js
shrl
cmpsl
pshufw
inc
or
pop
or
insb
cld
jmp
jecxz
jmp
sahf
ss
mov
dec
testl
xchg
push
outsb
dec
sbb
popa
lods
sub
out
iret
xchg
out
push
std
jne
adc
hlt
add
std
aas
jo
ljmp
dec
cmp
push
mov
sahf
xchg
adc
inc
pop
mov
xor
mov
cmp
stc
add
xor
push
mov
aas
test
pop
scas
inc
dec
adc
arpl
dec
cli
mov
iret
iret
ja
add
xlat
int
sti
in
mov
ficoms
sub
dec
test
sub
fildll
fwait
dec
repz
inc
cld
adc
push
cld
mov
fadd
fsub
jecxz
push
stos
cwtl
fwait
mov
lret
pop
inc
add
or
sbb
mov
mov
sti
and
enter
jl
out
imul
jle
divb
xchg
pop
lock
mov
iret
mov
out
dec
push
les
fldcw
adc
das
nop
outsl
cmpsb
and
cmp
imul
mov
mov
lcall
cmp
add
insb
pop
les
cmpsl
in
fimuls
mov
rcrl
test
push
nop
popa
mov
insb
xchg
sub
popa
mov
std
das
lcall
jae
push
or
mov
outsb
and
fistps
std
pop
cmp
orb
in
in
pop
std
xor
fidivrl
adc
dec
mov
out
jbe
or
pop
shl
sub
inc
iret
adc
fisttps
ret
lods
push
dec
shll
sti
xlat
dec
lcall
inc
add
cmp
fnstsw
jmp
jbe
pop
out
jmp
sbb
jno
inc
jnp
push
dec
mov
cmp
jno
jbe
div
repz
or
in
es
pusha
fs
jnp
xchg
jge
mov
inc
or
jmp
adc
or
and
mov
enter
dec
sbb
mov
es
cs
test
pop
lea
xor
insl
mov
xchg
test
or
repnz
fisubrl
cmp
loope
push
fists
cmc
xor
dec
and
lds
and
jae
sbb
cmp
rolb
nop
inc
lcall
ds
into
in
loope
cli
ss
dec
push
loopne
inc
mov
ja
subl
jo
push
dec
add
cmpl
dec
inc
sahf
ret
pop
adc
out
or
pop
addr16
mov
movsl
rorl
outsb
mov
call
aaa
ret
sub
pop
shll
pop
rcrb
and
stos
jge
mov
sub
jo
inc
add
sub
and
adc
inc
sbb
popa
xchg
test
rolb
adc
mov
jmp
mov
xor
jl
mov
xlat
js
push
icebp
jns
or
lcall
inc
push
push
stos
out
fsubr
xor
mov
mov
jle
inc
adc
lret
jp
push
mov
lds
xchg
and
ds
lds
movsl
xchg
in
dec
dec
pop
xadd
xor
push
scas
imul
sub
xchg
es
sub
adc
jnp
jno
cmc
sub
jmp
sbb
rcll
adc
mov
xor
or
push
lock
insb
roll
stc
add
popa
jecxz
in
out
fwait
jp
sub
test
pop
pop
scas
push
mov
sbb
dec
pop
sbb
andb
and
cmp
stos
lcall
in
lret
mov
jbe
repz
ljmp
inc
xor
lcall
xor
jns
outsb
std
gs
outsb
cmp
cmp
fdivs
rorl
or
dec
ret
mov
js
outsl
mov
mov
pushf
cld
xorl
and
jg
xchg
sahf
or
inc
sub
jbe
sbb
pop
pavgw
or
push
ficompl
fiadds
inc
mov
add
pop
push
add
inc
or
adc
mov
adc
lds
jbe
ficompl
adc
xchg
inc
jnp
mov
push
and
push
and
in
lcall
push
adc
bound
in
jl
stc
push
pusha
int
adcl
int3
and
lods
shrb
push
sub
xor
in
in
xchg
push
movsl
adc
cltd
movlhps
lods
jg
lret
xchg
rcrb
cwtl
fidivrl
testb
dec
nop
cmpsb
and
adc
fmuls
sbb
into
into
and
andl
push
lock
add
pop
push
mov
mov
loop
sbb
mov
mov
popa
sahf
roll
xchg
fsubs
cmp
popf
movsb
push
adc
dec
cli
mov
jp
ror
iret
sbb
and
push
sbb
xor
int
inc
add
mov
inc
inc
fstpt
inc
into
mov
push
dec
mov
sub
lock
pop
in
insb
sub
pusha
pop
in
push
fs
add
bound
mov
mov
sub
adc
cltd
cltd
std
and
jne
mov
aaa
andl
jb
xor
mov
mov
movnti
stos
imul
adc
adc
loope
mov
pop
cmp
cmpsb
subl
shlb
and
int
out
sbb
push
inc
ja
iret
sbb
addb
xor
push
popf
dec
sbb
rclb
popf
jne
xor
mov
call
mov
xor
dec
int
jmp
cmp
push
jge
int
dec
sub
inc
fwait
inc
in
sub
lock
scas
test
sahf
or
fistpll
dec
pop
xchg
sub
jmp
push
mov
xor
push
inc
add
inc
arpl
repz
mov
lods
orl
cmp
sarb
in
std
lock
mov
cmp
cmp
cmp
or
dec
xchg
ret
ja
xor
lock
inc
cs
dec
xchg
pop
test
sbb
pushf
ficomps
loope
shr
fs
inc
mov
repnz
out
icebp
mov
jmp
repnz
sbb
add
dec
aam
jae
fbld
decb
sbbb
sbb
cld
out
xor
cmovnp
and
cmp
loope
test
daa
gs
out
cli
jno
fs
aam
mov
jmp
and
cmpsb
in
aad
cmp
loop
push
shll
out
mov
les
test
in
mov
mov
movsl
rorb
test
dec
sub
clc
mov
mov
adc
ret
fsubr
fsts
or
inc
mov
pusha
fimuls
cmpsb
popa
aaa
mov
dec
cs
xchg
fimuls
lret
lock
hlt
xchg
inc
insb
ret
xchg
mov
dec
pop
xorl
jl
xchg
xor
jnp
pop
add
cltd
mov
xorb
arpl
push
stos
clc
ret
pop
pop
imul
nop
lcall
push
and
or
inc
push
dec
pop
scas
je
lods
pop
jecxz
inc
inc
pop
ss
repz
add
lcall
nop
or
xchg
mov
mov
cwtl
dec
cmp
dec
xchg
pop
jo
outsb
into
lock
xchg
shrb
cmpsb
je
leave
xor
cmp
hlt
fisubrl
rcrb
cmp
cmp
and
mov
push
or
mov
dec
cmp
pop
sbb
jmp
cmp
jecxz
dec
dec
cld
pop
pop
mov
dec
jle
ret
rolb
shrb
loope
push
repnz
mov
sbb
sub
imul
sub
out
and
sub
fcompl
adcl
aaa
and
nop
int
cmp
pop
pop
mov
clc
dec
dec
sbb
scas
jg
add
fdiv
adc
push
jl
rorl
xlat
adc
gs
pop
add
fisubs
lret
lahf
cmp
outsl
push
iret
sbb
jle
jae
dec
pop
or
lret
jne
ljmp
fstp
int
mov
bound
push
mov
imul
jne,pt
or
ret
test
xor
les
ss
inc
sub
push
push
mov
andb
push
xor
push
outsl
sbb
call
repnz
icebp
nop
imul
jle
mov
in
mov
lock
fwait
pop
stos
add
add
pop
and
ljmp
pop
scas
imul
das
dec
pop
cmp
dec
sub
dec
jle
ss
bound
mov
dec
mov
fcoml
cmp
hlt
cli
mov
ja
fwait
inc
adc
pop
filds
sbb
mov
in
xor
int3
dec
jg
ja
sub
jecxz
sbb
in
js
scas
push
pop
mov
lock
and
xor
mov
push
fnstenv
cltd
call
xchg
mov
pop
pop
or
pop
clc
out
lea
mov
cmpsl
loope
dec
rcll
jns
arpl
movsl
movsb
les
jge
push
mov
jl
add
mov
adc
push
cmpsl
dec
std
cwtl
mov
inc
jnp
mov
and
stos
mov
test
cmp
mov
into
xchg
inc
rorb
sti
lods
out
lret
aad
and
stc
sbb
lock
xchg
sub
popa
push
imul
out
mov
movsl
imul
push
repz
repz
pop
call
push
mov
cwtl
stos
push
int3
jbe
sarb
cld
lods
es
or
jnp
mov
lods
repz
pop
xchg
pop
and
jmp
sbb
je
inc
enter
ret
xchg
mov
sbb
sbb
xchg
daa
xchg
mov
mov
fstps
pop
add
lock
push
popf
test
pusha
jge
add
xor
sbb
xor
and
ljmp
loope
ds
dec
add
call
dec
sbb
stos
inc
aas
sbb
sub
les
int
loopne
dec
repnz
dec
and
int
icebp
xor
sbbb
push
rcll
test
pop
sbbl
cld
in
fs
push
and
push
scas
cli
gs
ja
arpl
fistpl
xchg
pop
movsl
pop
popa
or
sbb
testb
out
cs
xchg
fwait
xor
sarl
lret
jg
mov
push
xor
insb
jle
sbb
mov
adc
inc
loop
or
cld
fcomps
test
cmc
push
xor
test
xchg
jle
negb
fildll
pop
repnz
inc
cmp
sub
push
xor
lock
into
mov
sbb
dec
stos
aas
daa
or
cwtl
sub
inc
pop
movsl
fs
pop
mov
cmp
mov
xlat
loop
or
sub
in
fwait
cmp
jb
xor
int
xchg
mov
xor
fcompl
dec
xorl
add
dec
add
sub
cmp
jnp
les
gs
ret
push
add
cmp
push
xor
jmp
xor
stc
push
rclb
pop
jb
xchg
addr16
sbb
push
jge
inc
sub
mov
es
pop
push
dec
xor
fsubl
jb
test
and
andb
dec
and
test
in
adc
aad
lahf
dec
jo
pop
and
pop
adc
dec
or
pushf
sti
xchg
gs
lret
mov
loop
lock
jp
andl
xor
jecxz
out
push
inc
mov
movsb
cmp
mov
cld
adc
out
cltd
enter
adc
sbb
icebp
pop
fcmove
sub
popl
sarl
sbb
stos
xor
jmp
bound
cld
sarl
add
xchg
adc
pop
add
ret
inc
movsl
arpl
lret
dec
notb
push
sbb
mov
jno
pop
mov
or
sar
sbb
lcall
mov
mov
fisubl
dec
mov
jecxz
in
cmp
out
pop
cwtl
pop
cs
dec
pop
lret
lret
mov
jge
mov
pop
dec
push
mov
addr16
pop
add
divb
mov
mov
cmp
pop
out
shlb
push
clts
inc
and
cmp
pop
out
pop
lds
jl
adc
jl
mov
sub
xchg
sub
xlat
fistpl
mov
jl
dec
adcb
outsl
pop
hlt
inc
sub
push
addr16
loop
pop
jne
xchg
lcall
fidivrl
push
jmp
shrb
lods
test
inc
push
mov
jecxz
cltd
cmp
repnz
in
xchg
mov
push
stos
add
cmpsl
aas
cli
lods
jb
scas
cli
mov
mov
movsl
fisubrs
cmp
sti
or
ficompl
movsl
ret
push
rcrb
mov
imul
jmp
inc
mov
cld
cwtl
or
test
fiadds
sbb
cwtl
sbb
inc
out
push
aad
fwait
sbb
xor
cmp
in
roll
dec
jmp
popf
lcall
bound
and
stc
movsl
in
mov
fsubrs
and
aaa
loopnew
shll
aam
arpl
lahf
test
loopne
cmpsb
adc
aad
mov
push
incl
pop
xchg
cmp
bound
int3
enter
daa
movsl
or
inc
xchg
xor
mov
sub
int
mov
imul
sbb
int3
jb
dec
push
lods
aad
xchg
not
push
mov
jecxz
daa
pop
mov
push
loope
push
jl
dec
and
dec
add
es
jo
mov
xchg
sub
ret
inc
pop
stc
adc
mov
jno
jnp
jns
sbb
or
call
aam
in
mull
ret
or
jne
ret
mov
lcall
sbb
mov
fisttps
inc
clc
bound
sbb
cmpb
mov
pop
sahf
xor
rcll
pop
leave
inc
xor
ret
lock
cmp
and
test
jns
scas
mov
sub
insb
loopne
fsubrl
pop
ss
pop
test
lahf
mov
outsl
mov
jbe
aad
mov
cmp
insb
xor
sub
sbbb
mov
push
std
dec
push
cmp
xor
sbb
scas
testb
mov
xor
subl
adc
cmp
shrl
mov
jb
pop
fsub
test
jns
movsb
sarl
xchg
ss
in
jno
mov
fstl
stos
and
adc
cmpsl
jo
js
dec
mov
lock
insb
ficomps
lods
aas
and
push
adc
fisubrl
xchg
jo
lahf
mov
sahf
mov
or
cld
jl
pop
loope
sub
cmpsb
xor
pushf
inc
shll
push
sbb
xchg
jle
or
pop
fs
push
xchg
sbb
sbb
add
inc
cs
repz
sbb
inc
in
stos
imul
pop
insl
outsl
cmc
shl
ss
in
push
cwtl
jbe
test
loop
mov
outsb
mov
fcompl
ret
and
jnp
pop
out
push
imul
add
loopne
pop
scas
xchg
into
or
cmp
adc
out
je
mov
scas
aas
icebp
mov
jns
inc
inc
shll
rcl
cmp
loopne
pop
xchg
lahf
lock
nop
pop
adc
int3
cmp
push
loope
jmp
ret
popf
adc
pop
sub
inc
idiv
xlat
xor
cli
add
xchg
mov
mov
int
xlat
sahf
jmp
int
mov
rep
lea
outsb
and
shll
dec
dec
and
cltd
mov
popa
inc
in
bswap
js
adc
imul
mov
lock
orl
push
repnz
adc
adc
inc
jl
sahf
mov
xor
inc
ss
pop
and
or
jo
stc
int
cld
mov
insb
add
je
sti
sub
test
lods
pop
arpl
rcl
mov
ret
add
mov
rcrl
cltd
rcll
ret
movsl
idivl
mov
pop
call
dec
lock
mov
adc
ret
jne
movsb
aad
repnz
addl
or
xor
pop
arpl
lds
sub
xor
push
jbe
xchg
sbb
pop
mov
out
sbb
ja
mov
add
addr16
cld
hlt
push
and
out
jo
jp
stc
lock
add
xor
mov
adc
mov
push
test
or
icebp
mov
rorb
imul
cltd
add
dec
aaa
scas
mov
mov
push
and
icebp
cmp
not
xlat
out
mov
cltd
insb
aam
cmp
scas
out
stos
lahf
push
fcompl
xlat
and
lcall
mov
add
jecxz
or
mov
inc
xor
mov
cmp
push
mov
negb
pop
jecxz
es
pushl
cmpsb
pop
nop
ror
cmp
dec
xchg
xchg
sub
clc
leave
lea
mov
fdivrp
push
mov
test
sub
aam
insb
mov
stos
lds
test
push
hlt
addr16
or
fcoml
outsb
and
inc
stos
add
mov
dec
out
pop
fwait
std
xor
lret
sub
jne
call
incb
mov
mov
or
jecxz
jecxz
jge
pop
in
imul
sub
mov
fbstp
cli
loopne,pt
dec
fldcw
mov
sbb
pop
and
aaa
insl
sub
and
xor
mov
lahf
bound
pushf
sbb
repz
js
lods
cmp
xchg
rol
sub
cli
clc
xchg
sbb
add
xchg
rol
ret
stc
aaa
stc
sbb
mov
pop
gs
sarl
mov
add
dec
lea
ror
jo
mov
push
sbb
je
data16
aas
xor
xor
clc
sub
push
out
repz
mov
movsb
add
jmp
xchg
mov
mov
and
pop
dec
sub
sbb
rclb
movsl
mov
movsl
scas
pop
and
xor
jp
sub
sub
sub
push
push
push
repz
test
mov
dec
push
loop
out
jg
fsubr
lret
mov
test
rcll
jge
aad
mov
sbb
out
mov
mov
fsub
ret
cmpsl
pusha
daa
pop
jne
dec
mov
jge
gs
lds
inc
xor
jnp
xchg
or
mov
push
into
repz
lcall
arpl
cwtl
mov
out
setns
lahf
adc
scas
test
dec
rorl
cmp
pop
in
mov
stos
les
lret
addr16
add
adc
mov
pop
outsb
int
inc
xchg
xchg
sub
imul
fisttps
outsb
pop
in
cmp
inc
push
cmp
cmp
dec
dec
xchg
cmc
inc
cmpsb
popa
fistpll
push
gs
mov
lahf
jns
and
xchg
jle
cltd
mov
inc
xchg
jecxz
cmp
inc
pop
std
xor
xor
scas
outsl
ljmp
cmp
and
clc
addr16
dec
push
xor
cmp
add
pop
out
lds
mov
enter
and
inc
ds
adc
xor
jmp
fidivs
jo
sub
sbbl
aas
test
mov
fmul
jg
pop
sub
and
shlb
sub
test
add
mov
cmp
out
pop
out
adc
jo
xchg
fsubrp
lret
ja
mov
mov
imul
cld
sbb
pushf
psadbw
addl
jno
push
fsubrs
add
mov
repnz
xchg
es
mov
mov
iret
xchg
ret
les
in
or
nop
inc
inc
movsl
lret
mov
into
jno
outsb
add
in
lret
inc
hlt
stos
rorl
loop
push
ss
push
dec
rorb
clc
in
cmp
test
mov
int3
sahf
cmp
xor
es
xor
mov
mov
mov
mov
cmp
dec
call
xchg
push
scas
pushf
jl
scas
pop
cmp
sbb
fiaddl
fldenv
mov
test
addl
pop
cmp
push
jmp
shll
into
sub
aam
lret
push
dec
mov
imulb
ja
arpl
mov
jae
jge
mov
jmp
fs
ret
mov
std
cs
int
repnz
stos
mov
jle
dec
negb
sbb
popa
das
xchg
fpatan
mov
or
xor
and
adc
dec
mov
adc
mov
lcall
jnp
cmpb
fistl
popa
mov
pop
and
in
or
pop
mov
inc
jno
mov
inc
and
jmp
imul
jo
dec
jle
repz
mov
ret
scas
fmull
out
push
mov
leave
or
xchg
fsubrs
out
xlat
jle
jns
pop
loop
mov
mov
aas
cmp
rcl
push
inc
aad
pop
sbb
push
outsl
cmpsl
lods
sahf
lods
push
pop
cltd
adc
sbb
nop
hlt
fs
lds
aaa
ja
sub
shlb
ljmp
or
ffreep
dec
push
jle
int
ljmp
popa
mov
mov
or
sub
push
sbb
dec
test
call
jmp
arpl
mov
pop
push
add
push
inc
imul
or
lock
sti
sub
idivl
pop
add
ljmp
xor
test
dec
jmp
adc
int
cwtl
mov
fsubs
out
pop
leave
or
rcr
mov
adc
into
push
sub
js
mov
add
pop
mov
mov
push
cld
fidivl
imul
xor
mov
cmp
fidivl
jbe
cmp
stos
or
call
into
out
lock
out
jb
scas
lahf
mov
lea
testb
imul
cmp
test
cmpsl
sahf
imul
dec
and
mov
mov
mov
ret
xor
popf
fwait
push
sub
arpl
leave
sbb
leave
xor
iret
out
popf
jo
mov
mulb
test
pop
dec
nop
aas
fstl
jbe
scas
popa
mov
xor
sub
in
dec
pop
xchg
imul
fidivrs
pushl
or
stos
rol
push
cli
mov
push
outsb
test
mov
shlb
in
jp
in
sbb
dec
push
loop
pop
repnz
cli
and
stc
inc
fistps
add
xchg
lahf
cmp
mov
adc
mov
and
and
movsl
fmuls
pop
cwtl
xor
cld
or
sbb
mov
ss
mov
fsts
jl
aad
cmp
mov
pop
mov
xchg
push
repnz
in
rcl
dec
lds
add
dec
adc
jle
pop
jae
aam
and
dec
insl
xor
mov
fucom
es
jbe
mov
jno
fisubrs
sub
pop
mov
xchg
clc
scas
adc
lahf
mov
mov
lcall
jmp
jmp
lods
js
test
cwtl
fcomip
xor
cltd
movsb
or
xor
cmpsb
push
es
mov
bnd
push
adc
jbe
xchg
int3
mov
lea
sbbl
mov
movsl
aad
das
xchg
mov
gs
mov
jecxz
jle
std
sub
pop
push
mov
cltd
pushf
and
gs
test
adc
ja
push
dec
mov
fidivs
adc
sub
cmp
cmp
mov
push
enter
nop
addr16
pop
xchg
cmp
sti
xchg
lret
and
es
jo
push
pop
aad
fistps
xor
fstl
jle
cmp
repnz
out
mov
dec
adc
repz
lret
imul
in
nop
fs
inc
leave
push
fcomi
mov
int3
pop
xor
add
test
pop
test
xor
dec
stos
push
or
xor
pop
outsb
into
sbb
inc
pop
cvtps2pd
dec
sbb
sbb
aad
lea
dec
cmpsb
icebp
lock
ss
popa
add
lods
icebp
jg
push
mov
in
and
pop
das
cmp
cs
int3
ror
dec
pop
addr16
sub
push
in
arpl
pop
xor
scas
xchg
xchg
lcall
push
push
push
jns
stc
arpl
insb
addr16
xchg
sub
pop
ret
or
mov
mov
jae
inc
out
mov
scas
xchg
mov
inc
add
mov
into
jmp
or
inc
aaa
gs
ss
sbb
jbe
mov
in
dec
dec
inc
sbb
push
testl
pushfw
mov
decl
push
leave
or
cmpl
jp
clc
cwtl
lods
lahf
fs
mov
mov
adc
lods
enter
inc
ret
divb
pop
imul
add
lgdtl
div
orb
in
dec
adc
stc
dec
xor
mov
cli
jns
imul
lea
xor
inc
sbbb
nop
inc
cmc
cmp
dec
fildll
dec
das
jb
bound
jl
mov
scas
xor
addr16
dec
ja,pn
pusha
sub
add
cmpsl
mov
lahf
dec
mov
push
popf
cltd
and
mov
nop
jae
ss
adc
sbb
cmp
add
fsubrl
cmp
imul
negb
sbb
lret
jo
cli
das
jp
add
repnz
inc
push
fisubrs
movb
pusha
pop
inc
pop
addr16
dec
inc
xchg
inc
ja
mov
popf
outsb
cmp
fnstenv
aaa
pop
icebp
inc
clc
rcrb
bound
xlat
sub
imul
subb
cmp
mov
cmp
mov
push
enter
rclb
rcrb
fisubrs
rcl
jp
insb
pop
mov
and
mov
imul
jecxz
push
cwtl
xchg
mov
ja
push
xchg
in
xchg
int3
lret
xlat
adc
pop
hlt
jae
inc
inc
dec
icebp
add
ret
dec
lret
mov
push
fistl
pop
cmc
sub
jo
cmpl
test
fists
dec
push
or
in
roll
jno
pop
lahf
mov
dec
xchg
cmpsl
push
gs
lds
sbb
leave
ljmp
enter
push
push
push
sub
stos
mov
jge
dec
frstor
inc
dec
ficompl
mov
push
shll
jp
sbb
fcmovne
pop
popf
push
cmp
lods
mov
ja
fadds
dec
int
push
push
rcrl
sbb
xchg
subps
jmp
fisubs
push
fstenv
push
push
xor
adc
or
push
out
leave
or
dec
mov
call
xabort
mov
cmp
push
clc
jae
hlt
loope
subb
jp
and
pop
outsl
pop
pop
push
fldl
cmc
stc
shll
pop
sub
pop
sbb
faddp
test
nop
pop
push
ror
dec
dec
or
int
dec
cs
xchg
hlt
push
add
sbb
sbb
mov
popf
lahf
xor
jbe
push
and
mov
cmp
or
pop
dec
dec
adc
mov
xchg
cmc
jl
ljmp
sub
sub
sub
cmp
imul
mov
repnz
or
pushf
xchg
cltd
add
inc
gs
out
pop
push
lret
pop
gs
add
gs
add
ja
lds
pop
dec
pusha
cli
xchg
int3
xchg
adc
scas
mov
repz
dec
or
cmp
xor
pop
mov
ffree
mov
fcomps
jmp
gs
xchg
sbb
xor
imul
mov
xchg
mov
repz
xor
test
fisttpl
and
pop
xchg
scas
push
adc
in
adc
mov
push
loope
les
out
insl
jb
sbb
lods
inc
xor
cmpsl
push
xchg
adc
lcall
test
lods
pop
je
pop
stos
in
cmpsb
sbb
xlat
shlb
rcll
lret
push
repz
push
js
outsb
arpl
jbe
and
push
fwait
into
rcrb
adc
ss
xchg
loopne
in
aad
xchg
mov
imul
sub
dec
sub
in
push
xchg
and
lret
repnz
mov
lods
pop
aad
mov
xchg
mov
ja
test
or
push
out
das
imul
fmull
loopne
test
cmp
outsl
outsl
loop
pop
movsl
mov
jl
fmull
lahf
scas
test
pop
das
jecxz
sbb
aam
repz
and
sbb
pop
and
mov
push
xlat
scas
enter
mov
push
mov
ret
in
mov
scas
xor
cmp
dec
jb
cmp
mov
xchg
jmp
fisubrl
mov
cmpsb
in
int
stos
in
in
popa
push
out
ja
jne
sahf
or
cmpsb
push
add
aam
out
and
pop
lahf
daa
jp
out
jnp
mov
lret
mov
or
jecxz
jb
roll
sbb
out
and
jbe
fdivp
es
pop
lcall
pop
jnp
xchg
jecxz
xlat
push
xchg
xchg
pop
fcom
pop
pop
cli
fdivr
outsb
gs
inc
mov
fisubrs
xor
xchg
xchg
push
fmull
pop
jns
cmovns
adc
sbb
jp
jo
stos
xor
jo
shlb
inc
inc
dec
mov
sbb
lds
mov
xor
scas
movsl
push
jle
stos
xchg
xor
sahf
outsb
sbb
sarl
mov
sub
addr16
xor
add
daa
mov
ljmp
je
das
mov
insl
cwtl
sbb
jnp
push
xorl
iret
dec
inc
dec
pop
and
pop
stc
sub
pusha
lods
mov
pop
jp
push
mov
push
jp
xor
adc
sub
pop
mov
inc
popf
test
out
jbe
xor
inc
outsl
dec
jl
ss
push
addr16
mov
and
js
xchg
xchg
inc
mov
jmp
ss
add
mov
jns
mov
dec
xchg
mov
cmpsl
loopne
mov
leave
pop
dec
inc
sub
mov
andl
jle
ljmp
adc
jge
lret
stos
aam
xchg
imul
popa
adc
lods
jno
cmp
jle
shlb
add
dec
stc
dec
fistl
push
or
cmp
cli
or
mov
xchg
imul
mov
dec
add
js
xor
test
sub
xor
mov
mov
push
das
dec
imul
ja
in
push
mov
or
add
fmull
xchg
nop
or
adc
cmp
movb
mov
mov
loopew
mov
fsubr
int3
cmpsl
ja
dec
xchg
dec
mov
fcoml
test
mov
adc
cltd
jp
add
test
cmpsl
fidivrl
dec
fwait
xor
pushl
aam
movsl
jae
les
or
adc
pop
cmp
insl
loopne
insb
xor
pop
cmp
mov
cltd
dec
fld
xchg
dec
movsl
push
mov
cmc
lods
dec
inc
shrl
ret
lret
adc
daa
xorb
lds
dec
pop
push
imul
xchg
cmp
xchg
insb
add
xor
pop
adc
pop
or
mov
jg
mov
jg
push
and
mov
rolb
ds
sub
push
imul
mov
mov
fwait
inc
iret
jae
js
rcrb
mov
icebp
rcr
cli
sbb
xchg
addr16
fdivrs
sbb
jae
jmp
lahf
adc
fwait
push
aam
subb
imul
imul
aad
sbb
sub
loop
xchg
js
sub
ss
sar
pop
lds
xchg
or
jo
test
inc
idivb
addb
sub
add
mov
add
xchg
bound
in
shll
subl
test
xor
jno
cmpsl
jae
lds
dec
adc
std
iret
xchg
dec
push
mov
icebp
push
mov
inc
or
dec
mov
ret
inc
jns
jp
jg
lret
mov
mov
shll
ja
addr16
push
jge
add
inc
pushf
addb
cmp
mov
xchg
mov
ds
push
das
jecxz
sbb
adc
repz
sbb
std
pop
and
cmpsl
call
shll
pop
sbb
mov
push
dec
adc
movsl
push
or
ret
mov
rclb
xchg
mov
sub
and
pop
cwtl
xor
pop
mov
in
mov
lcall
mov
inc
dec
inc
clc
lods
mov
aam
inc
iret
sahf
dec
xchg
cld
push
pop
daa
pop
mov
cmc
xorb
and
std
repz
sub
push
out
shlb
mov
inc
insb
xchg
inc
push
lods
std
and
cmpsb
and
mov
xlat
outsb
loopne
daa
scas
pusha
outsl
xor
test
loope
sti
fbstp
testb
pusha
gs
or
dec
mov
xor
pusha
xchg
xchg
mov
les
loope
fimuls
xchg
enter
sbb
fcmovnb
sbb
jg
cmp
mov
mov
outsl
cli
pop
ret
inc
sub
insl
ja
sbb
inc
adc
cmpsb
push
mov
hlt
push
and
inc
jge
dec
and
nop
adc
jns
mov
xchg
hlt
mov
cmp
pop
mov
in
mov
lods
xchg
hlt
pop
xchg
ror
stos
sbb
or
test
repz
xchg
frstor
jge
jmp
mov
not
push
clc
out
mov
ret
mov
movsb
cmp
insb
fwait
fwait
mov
pop
sub
outsl
das
cmp
or
xchg
fdiv
xor
int
cwtl
in
arpl
inc
fcoms
sub
cmovns
sbb
call
clc
iret
insl
cmpsl
mov
mov
je
popf
divb
fidivs
call
ret
insb
pop
jnp
mov
fldenv
or
dec
int
cmp
loope
jmp
jnp
subl
xor
push
mov
dec
out
gs
aad
shll
or
pop
test
cmp
fisttps
and
pop
and
arpl
test
or
enter
sub
mov
mov
jge
jbe
inc
jne
mov
and
pop
cmp
loop
cmp
push
ja
mov
fiadds
test
test
xchg
xchg
and
jmp
mov
pop
dec
xchg
movsb
negb
adc
repnz
xor
dec
and
nop
ss
push
clc
pusha
mov
roll
fistpll
imul
leave
cmpsb
fcoml
xchg
fimuls
repz
cli
jb
sbb
sub
ret
jno
sub
push
enter
xchg
dec
push
repnz
xor
push
push
add
xchg
adc
cltd
add
shr
lret
nop
ja
sbb
jae
mov
mov
and
jbe
xchg
jge
leave
lcall
or
and
cli
push
lcall
ds
outsl
or
fstl
dec
shlb
jp
addr16
gs
lcall
insl
adc
mov
das
idiv
xchg
iret
xchg
add
fildll
dec
cmp
fidivrs
push
add
cmp
sbb
jg
mov
xchg
jp
inc
xchg
push
dec
loope
xchg
cmpsb
push
in
mov
jnp
cmp
add
and
insl
fiaddl
repnz
cs
imul
jo
popf
inc
adc
mov
jecxz
pop
loope
and
adcl
sti
stc
cwtl
push
and
jbe
or
sub
mov
cmc
roll
lcall
addr16
and
dec
sbb
ret
mov
mov
lds
test
pop
jg
lcall
inc
ds
movsb
cltd
or
lods
adc
aaa
bound
mul
add
ficoml
shlb
fstps
arpl
inc
sub
lock
pushf
jnp
xchg
mov
push
xor
mov
xor
flds
lcall
icebp
push
push
dec
or
stos
push
xor
out
push
pushf
mov
jle
rorb
into
dec
into
andb
or
xchg
adc
mov
or
pop
and
sub
sarb
jae
mov
cmp
push
mov
fsubrl
sbb
lahf
pop
scas
ficompl
xor
jns
add
aas
outsl
jp
dec
add
mov
adc
adc
shll
dec
pop
shlb
bnd
pop
fldl
xchg
int
jmp
adc
add
fcmovnbe
je
xor
pop
jne
mov
lea
aas
jecxz
stos
jae
insb
jge
inc
imul
sub
pop
pop
xchg
lods
out
dec
mov
xchg
pop
dec
test
and
addr16
lds
pop
push
push
and
arpl
pop
lret
in
cmpl
dec
sar
rcll
out
fsubs
xchg
into
pop
stos
clc
dec
ret
mov
lret
stos
insl
xchg
and
mov
andb
pop
outsb
inc
mov
mov
fs
cmpsl
push
pusha
popf
fldcw
jnp
pop
sbb
call
dec
mov
mov
inc
int3
outsb
jge
fmull
push
aad
xor
gs
scas
outsb
pop
push
mov
pop
bound
clc
or
inc
mov
cwtl
int
cmp
jne
pusha
or
movsb
inc
aas
iret
test
mov
push
jecxz
dec
jae
loopne
jb
xor
xchg
testb
cmpsb
andl
cmp
movsl
inc
pop
enter
ror
bound
dec
cmp
mov
xor
lret
sub
mov
mov
les
js
lahf
push
cmp
inc
mov
test
push
or
daa
jno
sbb
in
sbb
sub
sub
and
jnp
sub
sub
mov
xchg
sub
lahf
push
jne
movsl
test
inc
sbb
repnz
mov
push
inc
push
cwtl
fprem1
cmp
jp
test
cli
ss
pop
lret
enter
push
cmc
stc
jne
jmp
mov
cs
jecxz
lahf
add
sti
enter
into
iret
xchg
aas
pop
cld
add
lcall
inc
push
popf
lods
sub
and
fwait
add
ja
mov
jge
pop
bnd
shll
pop
fld
out
inc
cmp
ret
std
ss
mov
insl
ret
test
fbld
sahf
es
push
fcompl
call
stos
push
add
and
out
cmp
jbe
sbb
imul
shrb
xor
enter
mov
sub
sbb
outsl
adc
movsb
out
jmp
call
push
aaa
jb
popf
cmp
push
lahf
or
cmpl
dec
xchg
pop
mov
nop
jnp
aam
mov
pop
and
lock
std
adc
icebp
inc
add
cmp
sti
imul
add
popf
inc
data16
sbb
movsb
sahf
shll
bound
decl
lret
out
packsswb
sbb
push
repz
jecxz
cmp
les
jecxz
sbb
add
addb
lds
or
ja
lret
movb
mov
popa
mov
push
jb
js
mov
dec
inc
inc
jg
cmc
ficoml
xchg
loop
scas
push
push
int
es
outsl
mov
movsb
push
daa
inc
bound
mov
cltd
pop
cmp
add
mov
fdivs
stos
lds
push
movsb
insl
fsub
loop
xor
pop
jo
dec
pop
push
pop
xchg
sti
sub
aad
pop
or
ds
pop
push
mov
rorl
mov
push
pop
outsb
rcr
seta
adc
xchg
movl
mov
ret
movsl
fadds
je
ss
in
adc
or
lret
pop
mov
loope
jnp
xor
jp
push
icebp
pop
sbbb
mov
sahf
and
mov
mov
out
jo
in
cld
mov
mov
les
pop
insl
mov
lods
jcxz
push
xchg
mov
and
pop
mov
test
sub
mov
mov
test
push
mov
icebp
enter
xor
enter
or
push
sbb
mov
dec
imul
icebp
icebp
adc
nop
popf
int3
or
and
lods
sub
xchg
pop
dec
fimuls
lods
jg
push
mov
mov
loop
aam
shll
dec
stos
or
jns
cmp
or
add
pusha
cmp
or
add
or
sub
xlat
push
test
clc
out
inc
idivl
pop
pop
push
jnp
and
out
push
pop
fistl
out
inc
icebp
iret
fisubrs
adcb
outsl
js
sahf
loopne
add
pop
js
bound
mov
popf
mov
jecxz
sbb
cmp
cs
in
nop
cmpsl
mov
inc
outsb
mov
fimuls
stc
fnstcw
xchg
daa
cmp
out
mov
push
push
lahf
xor
cmpl
scas
push
cmpl
sub
nop
pop
push
add
mov
mov
jnp
insl
push
packsswb
add
mov
fwait
out
mov
mov
mov
outsb
push
sub
repnz
inc
les
mov
xchg
outsl
imul
testl
xor
mov
inc
lahf
lods
and
cmp
andb
and
sub
lcall
sahf
mulb
jnp
pop
mov
and
sub
add
pop
sbb
fistpl
aad
ret
add
ret
sbb
cwtl
mov
fistpl
lock
gs
push
les
int3
loopne
cmp
xchg
inc
clts
inc
les
xchg
aaa
pop
adc
push
xlat
sar
scas
jle
push
adc
inc
scas
jl
ret
imul
adc
pop
add
mov
popa
insb
js
push
in
cltd
pop
in
aad
pop
push
call
jae
or
jo
sbb
outsb
pop
jo
sbb
dec
jne
pusha
jns
addl
into
int3
dec
pop
je
add
pop
std
or
mov
das
scas
inc
stos
push
out
xchg
dec
mov
or
ret
push
mov
rep
push
xchg
xchg
pushf
clc
jb
push
inc
sub
flds
sbb
jns
or
scas
mov
dec
jbe
orl
sbb
outsl
inc
mulps
icebp
pop
sbb
xchg
mov
dec
pop
adc
imul
movsb
sti
std
lcall
jb
and
pop
xchg
adcl
dec
pop
dec
cmp
loop
mov
out
xor
cmp
push
idivb
cmc
mov
scas
sbb
sub
clc
sbb
cmp
aaa
jecxz
mov
mov
in
mov
imul
inc
jno
lods
xchg
cmp
cmc
gs
fwait
cmp
aad
out
inc
cmp
add
mov
cwtl
imul
push
bndldx
pop
cmp
mov
into
add
scas
xlat
pop
outsb
clc
jl
jae
jl
sti
decb
outsb
mov
mov
xchg
jmp
das
inc
mov
rcl
jmp
mov
mov
dec
in
aam
cld
sahf
push
cwtl
mov
mov
xor
sub
movsb
inc
data16
jecxz
jns
arpl
dec
jge
imul
out
das
mov
xchg
sahf
test
fdiv
jle
add
sahf
dec
jae
lcall
gs
xchg
loopne
sahf
ljmp
cli
mov
jbe
push
and
test
jmp
xor
jae
stc
out
aaa
sub
fistl
or
shll
aam
mov
pop
popf
dec
cmpb
inc
fiaddl
mov
jle
aam
repnz
add
test
cld
sti
jae
xchg
sub
xchg
or
dec
mov
leave
lahf
and
add
mov
jle
dec
aaa
jge
fildll
lea
add
stos
mov
ret
and
pop
dec
jb
dec
dec
jle
sahf
mov
dec
and
xor
popa
cld
mov
popa
rcr
lds
repz
mov
jecxz
lods
mov
xor
dec
stc
aas
mov
pushf
mov
pop
sub
jne
scas
or
dec
in
jp
xchg
sub
aaa
lock
loop
loopne
mov
dec
mov
lret
setp
and
les
cmp
dec
xchg
aaa
or
jmp
into
mov
enterw
jns
sbbb
push
cli
movsb
scas
mov
out
xor
fildl
popa
or
lea
pushf
nop
pop
jge
inc
mov
mov
xchg
dec
cld
inc
jno
je
push
jae
xchg
cmp
fcmovnb
arpl
cmp
xchg
iret
or
ret
add
sub
cmpsl
leave
and
das
repz
mov
ficoml
lret
das
mov
push
ljmp
scas
fs
stos
scas
jne
mov
in
push
and
pusha
popa
icebp
mov
daa
mov
sbb
fs
pop
jmp
mov
mov
sub
mov
xor
cmp
or
lock
mov
add
push
adc
xorps
std
pop
cltd
movsb
cmpsl
or
fsubr
xchg
mov
sub
das
hlt
out
mov
or
enter
movb
mov
mov
push
bound
lcall
subb
icebp
jb
ficompl
bound
insb
popl
add
repnz
xor
shl
movsb
xchg
sbb
pusha
popf
ret
nop
mov
scas
sbb
jbe
jge
outsl
or
and
jns
push
add
movsb
dec
pop
loopw
push
dec
rcl
icebp
mov
sub
repnz
aam
xor
jle
or
xor
xlat
sbb
jnp
dec
xor
addr16
dec
shlb
pop
imul
xor
stos
sub
mov
push
push
sub
lahf
sbb
jecxz
shrb
fucomp
jecxz
sbb
jbe
xchg
das
pop
lods
or
inc
xchg
add
arpl
push
inc
jbe
ret
aad
rorl
call
adc
jle
pop
mov
push
sahf
push
outsb
adc
or
adc
les
jne
in
scas
daa
nop
mov
repnz
xchg
or
scas
or
xchg
mov
lcall
cmpsb
repz
shll
push
xchg
push
xchg
xor
jl
mov
xor
jge
dec
cmp
scas
or
sbb
mov
js
adc
fnstenv
ret
adc
imul
cmpsl
ljmp
mov
inc
gs
jo
rcll
das
mov
cltd
mov
int3
lret
fdivrs
xor
push
xchg
pop
dec
jge
daa
jp
push
push
xchg
and
mov
into
jns
fnsave
cmp
daa
icebp
stos
test
stc
add
test
insb
pop
cmpsb
sbb
jle
push
pop
in
and
repz
inc
mov
repz
cmp
dec
xor
xor
dec
inc
fcom
lret
je
popf
adc
cmc
aaa
loope
sub
cmc
add
cmp
mov
fstl
jmp
push
fldz
repnz
clc
fwait
pop
sub
dec
sbb
test
push
cli
xor
test
rorl
insb
scas
push
cmpsl
pop
and
data16
pop
or
repnz
inc
pushf
adc
in
push
mov
jno
dec
xor
call
sbb
sub
mov
push
xor
bound
jo
into
pop
and
imulb
cmp
fst
push
sub
lds
or
cld
pushf
cmpsb
adc
int3
xor
in
sahf
jb
mov
jge
repnz
mov
jne
fldenv
lahf
ja
mov
pop
push
adc
adc
es
nop
stos
push
mov
cmpsl
cmp
shlb
xor
and
mov
sti
xchg
or
test
mov
xor
push
pop
xor
enter
dec
lds
loope
lea
mov
lahf
repz
rolb
adcl
subb
sub
cmp
and
jmp
adc
movsb
mov
add
add
enter
enter
xor
jne
push
sti
xor
mov
lret
sarb
test
lds
sub
push
mov
test
pop
mov
fisttps
dec
push
shll
adc
imul
fwait
stc
rorl
adc
push
jge
add
xchg
sti
mov
or
jns
out
sahf
and
test
lret
sub
imulb
jle
in
call
cli
pop
fadd
pop
cmp
sub
popa
sahf
cwtl
or
xor
pop
cmp
rol
jo
dec
cli
int3
test
lods
or
aam
into
or
xor
mov
aas
iret
push
cltd
push
enter
pop
inc
cmpsl
aas
inc
sbb
in
cmp
enter
fucomp
nop
jae
pop
aad
je
cmp
sub
ljmp
xor
arpl
inc
jns
leave
jmp
imul
pop
fcom
fnsave
jae
push
and
pusha
push
xchg
pop
xchg
push
mov
enter
xchg
rcr
xor
mov
and
loopne
int
lods
ret
mov
sub
fldt
xor
mov
mov
ds
add
sbb
leave
psubb
stos
xchg
or
leave
mov
daa
push
mov
push
out
lods
and
ror
inc
addr16
push
inc
je
nop
push
or
adc
or
insl
out
ret
mov
popf
ret
clc
sub
lods
jns
or
mov
pop
xchg
jns
lods
in
sub
enter
fistps
sbb
cmp
or
call
pushf
bound
push
push
out
mov
jg
pop
aad
adc
icebp
lea
lahf
and
mov
jno
and
add
xor
pop
sub
and
jmp
loopne
sahf
dec
loopne
pmaddwd
mov
or
mov
icebp
lock
jmp
mov
xchg
insb
pop
xchg
gs
pop
jge
jne
cmp
xchg
test
out
enter
or
int
and
jle
and
in
xchg
sub
scas
fsubrs
add
dec
jecxz
push
sarl
stos
mov
mov
mov
aas
sbb
jnp
or
fs
jp
jp
imul
push
test
js
sub
mov
mov
pop
pop
pop
ljmp
insb
add
cmp
gs
sub
jecxz
sub
jae
lahf
or
and
jge
icebp
adc
scas
data16
mov
jb
movb
shll
dec
lahf
sbb
lock
loope,pt
fnstsw
test
mov
add
sti
sub
sub
cltd
add
or
fidivs
add
sbb
sbb
arpl
sub
iret
adc
sub
popl
inc
inc
fldenv
rol
xchg
addb
pop
xchg
fimuls
jecxz
add
stos
adcb
dec
push
test
sub
xchg
lds
add
nop
mov
mov
pop
jae
push
xlat
lret
int
mov
incl
mov
arpl
adc
push
pop
and
or
mov
out
rcr
cmp
rcll
repz
jg
ret
cwtl
pusha
fildl
dec
cmc
pop
imul
mov
out
push
jmp
stos
adc
sub
cmp
call
add
mov
push
jp
adc
repz
ja
ffree
mov
iret
pcmpeqw
cmpsl
sti
push
out
scas
inc
in
mov
xchg
pop
cld
and
xchg
repnz
adc
decl
lea
in
jp
cs
rcll
sahf
pusha
xor
xchg
mov
hlt
cmc
in
hlt
fwait
xchg
xchg
xor
pop
sub
shll
loope
pop
xchg
sub
movsl
dec
cwtl
dec
xchg
pop
and
sub
mov
aam
cld
push
imul
inc
fst
outsl
gs
cwtl
mov
dec
imul
das
or
sub
xchg
or
das
sbb
shrl
add
jns
xchg
jle
js
jae
cs
loop
mov
sub
pop
dec
pop
shll
mov
mov
inc
pop
popf
pop
dec
or
sbb
or
cli
and
jl
mov
cmpsb
icebp
rcr
mov
icebp
les
sbb
xor
fs
xchg
test
jnp
aas
jns
mov
xchg
cli
repz
test
and
jns
sub
or
fcomp
lods
inc
push
stos
pop
lock
lret
pop
dec
sub
fidivrs
dec
movsl
mov
mov
and
dec
mov
enter
je
clc
sub
out
push
int3
nop
outsb
mov
xchg
or
pop
sub
xor
mov
cs
imul
push
jmp
aas
dec
mov
loop
add
insb
add
dec
cmp
std
sub
mov
push
push
cmp
push
sbb
and
rol
or
or
lock
mov
mov
xchg
rcrb
maxps
adc
lret
adc
jg
jmp
mov
test
push
pop
xor
fdivrs
sub
sub
les
xorl
iret
inc
test
ja
lods
cld
into
loop
xchg
decl
subl
enter
insb
mov
imul
xor
jg
pop
mov
test
dec
stos
mov
jl
xor
push
outsb
insb
imul
push
add
or
out
jns
mov
cmc
sbb
inc
gs
mov
daa
xchg
sbbl
mov
dec
imul
mov
add
cmp
cmp
xor
mov
sti
add
sbb
inc
push
lods
popf
in
sub
push
jnp
call
insl
andl
jbe
adc
and
repnz
neg
jnp
aaa
push
and
mov
inc
push
sahf
xchg
lcall
aad
icebp
es
test
ret
fdivl
jg
adc
pop
lock
lock
andl
xchg
aad
mov
xor
jne
lea
ret
mov
call
cmpsl
and
nop
adc
xor
xor
insb
xlat
push
push
push
mov
jmp
inc
insl
push
imul
xchg
or
xor
test
sbb
fistl
loope
test
or
pop
call
sbb
lds
clc
into
out
sub
pushf
mov
pop
mov
fcoml
mov
pop
f2xm1
icebp
gs
loop
sti
push
inc
cmp
fisubs
jo
mov
movsb
rcl
adc
inc
sub
insl
data16
adc
push
and
in
aas
jno
mov
bound
fstp
in
iret
jb
inc
flds
push
xchg
push
xchg
stc
mov
imul
push
push
adc
sahf
lods
scas
and
cmp
in
mov
mov
aam
test
das
out
clc
mov
mov
mov
xchg
xchg
xchg
mov
mov
leave
mov
mov
mov
adc
xadd
data16
or
sub
or
jnp
xchg
js
inc
jmp
popa
sti
ficoml
enter
rorb
ret
push
testb
les
lahf
inc
popa
pop
out
ds
sub
out
inc
add
fldcw
lret
iret
inc
nop
mov
inc
scas
test
mov
fdiv
stc
sbb
sbbb
test
lss
das
outsb
imulb
out
mov
jbe
je,pt
not
test
pop
test
insl
in
nop
cmp
cwtl
out
aad
pop
sbb
mov
popf
iret
popf
das
xor
popa
sbb
aaa
mov
fcmovnbe
inc
add
and
mov
test
adc
lods
lcall
jno
sahf
outsl
loopne
pop
mov
out
aad
faddl
shrl
rorb
jae
push
push
imull
xchg
imul
repnz
sahf
sahf
shll
insb
out
sbb
xsaves
hlt
and
jae
add
pop
pop
or
mov
mov
fmul
cwtl
pop
ficoms
inc
inc
mov
pushf
paddb
std
sbb
fstpt
mov
jns
iret
pop
movsl
lods
mov
mov
push
in
and
jae
or
neg
pop
push
test
mov
sub
icebp
xchg
mov
and
and
fistpll
mov
mov
or
or
push
paddd
sbb
ljmp
sti
sbb
push
cmp
mov
pop
imul
nop
imul
outsl
jp
lock
jb
cmp
repnz
pop
or
inc
mov
shl
sti
es
popa
mov
movsb
call
jmp
cmp
stos
push
insl
pop
jg
xchg
pop
lret
inc
nop
sbbb
daa
shll
jno
je
dec
or
es
xor
xchg
hlt
mov
xchg
jecxz
lods
push
movsl
pop
jo
outsl
push
leave
sub
sbb
bound
mov
mov
nop
iret
lds
mov
movsb
fsubrl
in
into
loop
mov
sub
test
xchg
lds
push
in
loope
lret
pop
pop
lcall
push
push
data16
mov
xchg
sbb
mov
lock
fildll
cltd
lods
add
ror
shll
xchg
add
cmp
or
add
enter
cs
and
inc
dec
iret
push
ret
xchg
push
scas
xchg
movsb
mov
test
push
out
dec
inc
push
les
mov
fs
inc
adc
jge
daa
lahf
add
mov
or
lahf
inc
inc
mov
lcall
loopne
mov
mov
or
push
adc
adc
jns
callw
add
movsl
inc
xchg
or
std
int3
sarb
icebp
jb
inc
test
jno
push
dec
scas
les
int
rcrl
out
cmp
xor
scas
and
xchg
les
pop
ds
bound
test
mov
icebp
ficomps
push
sub
pop
daa
fsubrs
lret
cmp
rcr
add
pushf
bound
jbe
and
andb
xor
jb
cmc
fildll
mov
cmc
in
cltd
mov
and
mov
mov
fnstcw
inc
fimull
movsl
leave
mov
es
jno
mov
jns
iret
pushl
xchg
push
into
iret
lea
clc
adc
and
jbe
add
leave
icebp
pop
shll
xlat
fistl
dec
scas
das
das
cmpsb
push
out
stos
add
es
out
fstpl
gs
xchg
dec
pop
std
sub
push
rolb
loope
loopne
xor
test
arpl
push
xchg
clc
sub
pop
and
cmp
repnz
xchg
bswap
or
fstpt
repz
xor
lahf
ret
lods
aas
add
fsubrl
cmpb
jae
inc
cmp
lods
push
or
inc
daa
inc
call
or
cmpsl
xchg
clc
data16
or
adc
std
shrb
icebp
lcall
in
mov
int3
shll
sti
lcall
mov
enter
int
mov
cmove
insb
mov
dec
jne
xchg
mov
jae
sti
outsl
push
add
and
sbb
push
xchg
jns
sub
jbe
stos
cmc
shlb
jbe
dec
jmp
or
out
mov
pop
fisttpll
dec
inc
xor
inc
jb
or
mov
lods
out
insb
mov
jb
xchg
test
fcomps
cld
jnp
adc
flds
je
cwtl
bound
or
inc
sub
push
fsubs
jno
movsb
sbb
push
aam
and
dec
loope
movsb
xor
and
fistpl
or
push
cmp
testl
cmp
fwait
loope
pusha
xor
inc
mov
popf
and
add
add
and
mov
push
fsubr
dec
sbb
cmp
xchg
leave
stc
cmp
and
movaps
dec
add
lock
jne
in
sbb
inc
and
icebp
loopne
lock
pop
loop
pop
fcmovnu
mov
in
popa
sbb
rcll
int
shl
and
outsb
mov
and
pop
jmp
sub
lret
jo
testb
sahf
add
mov
mov
pop
std
adc
dec
je
cmp
xchg
inc
aas
jg
div
js
call
push
and
cmpsl
pop
and
sbb
xchg
mov
ja
add
repz
adc
mov
add
mov
ljmp
es
sti
lret
sbb
mov
pop
call
sbb
enter
mov
push
das
out
dec
bound
mov
loope
mov
sbb
inc
mov
and
pop
xor
les
add
jle
fisubrs
daa
mov
and
adc
outsb
inc
lret
sub
cmpsb
mov
aaa
sbb
ret
xchg
dec
cld
add
pop
call
aam
adc
dec
imul
or
test
ja
cmp
sbb
cmp
mov
push
mov
dec
dec
cwtl
mul
je
in
xor
arpl
cmp
xchg
add
push
in
fildl
inc
call
add
cmc
insb
ret
mov
cmp
xchg
repz
or
adc
fstpt
xor
imul
cltd
shlb
adc
or
xchg
xchg
sbbb
adc
add
fs
inc
xor
sbbb
and
mov
mov
adc
sahf
js
ljmp
xchg
popf
mov
pop
mov
mov
arpl
xor
pop
inc
fildll
pop
lea
add
push
aas
inc
jl
sub
cmp
jae
leave
or
ret
jmp
mov
xchg
push
call
adc
loopne
cmp
lret
cmp
stos
xchg
in
dec
and
xor
fldenv
popa
cmp
cmp
mov
jns
ja
fiadds
pop
movsl
add
mov
jo
mov
mov
add
rorb
xchg
jne
jnp
dec
je
or
push
repnz
lock
inc
test
mov
lds
mov
fwait
sub
repnz
inc
xchg
sbb
and
and
aaa
in
dec
mov
jbe
loop
sahf
rorb
add
loop
pop
cmp
mov
jmp
test
movsb
ret
xor
outsl
les
mov
xor
cli
gs
aaa
mul
and
add
aas
xchg
cwtl
cmp
pusha
inc
cmp
xchg
cltd
test
xor
mov
loop
in
xchg
adc
xchg
rcll
inc
ss
outsl
int3
jo
js
inc
pop
bnd
sbb
mov
xchg
popa
daa
xchg
jecxz
pop
push
dec
xchg
or
stos
jbe
xchg
sbb
scas
in
cmc
cmp
add
rcll
mov
sub
mov
mov
pop
cmp
std
adc
ficoml
cmp
cmp
push
mov
cltd
sub
dec
xlat
fidivs
into
or
pop
pop
arpl
dec
add
push
adc
cmpsb
scas
stc
repnz
and
mov
xor
mov
sbb
sbb
loop
nop
and
add
clc
rcll
pop
hlt
jnp
in
dec
jno
sbb
mov
xchg
cmp
push
jbe
push
mov
pop
arpl
call
ja
xor
fistpll
sbb
in
or
mov
jno
inc
jae
dec
lret
xchg
loop
ljmp
dec
lret
in
gs
push
xchg
loope
lds
cmp
mov
daa
pop
dec
mov
push
hlt
jo
cmp
mov
jmp
int3
jnp
fwait
popf
mov
jle
cld
cltd
sbb
movsb
popa
mov
cwtl
in
push
ds
adc
push
movsb
sub
add
orl
jecxz
xchg
jge
fstps
icebp
xor
cmp
icebp
inc
xchg
push
test
inc
add
sub
pop
sub
xchg
paddw
rolb
roll
jne
ljmp
sarb
xor
rcll
icebp
xor
and
iret
sbb
pop
clc
test
in
jg
and
outsb
push
adc
jbe
mov
je
xor
movsl
inc
xchg
lret
mov
ret
mov
or
rorb
dec
into
lds
sbb
mov
push
cmp
jmp
scas
aad
movsb
stos
adc
enter
aam
repz
loope
lock
lea
in
push
fsub
sub
pop
mov
jecxz
mov
push
iret
xchg
notl
insb
jns
int
lret
jb
dec
and
out
or
mov
adc
jecxz
leave
jno
sbb
out
or
mov
sbb
or
sbb
mov
mov
ljmp
in
xorb
jl
in
ljmp
insb
dec
push
mov
nop
call
sbb
sysret
in
inc
jmp
popf
xchg
xchg
bound
adc
cmp
xchg
push
cmpb
cmpsb
shll
ds
add
testb
sbb
pop
sbb
je
jne
dec
adc
add
add
loop
adc
push
xor
cmc
cltd
cmpsb
sbb
dec
xor
cli
and
int
ret
loop
jge
scas
fs
fldcw
rcrb
cld
push
jo
jmp
mov
and
cmpsl
test
mov
rcll
mov
adc
inc
lock
dec
popa
push
add
ret
imulb
repnz
mov
xor
int
sub
xor
das
loopne
sbb
outsl
pop
mov
jns
push
outsb
add
pusha
adc
adc
jle
das
nop/reserved
and
mov
and
pop
pop
ljmp
cli
dec
out
cmpl
inc
ret
inc
inc
dec
cmpsb
lret
leave
adcb
bound
adc
jb
gs
outsl
mov
mov
shrl
rcr
sahf
ss
fisubs
mov
cltd
xchg
aaa
test
inc
inc
arpl
loop
xor
or
fstl
ret
ret
cmp
sbb
dec
xchg
in
nop
jmp
popf
cmp
es
push
pop
or
loope
mov
test
adc
ja
sub
test
mov
adc
jne
hlt
jmp
push
pop
outsl
inc
mov
lahf
dec
mov
jmp
outsb
clc
push
pop
cmp
mov
sub
rcrl
mov
sbb
call
sbb
in
or
rclb
pop
mov
xchg
pop
clc
cld
mov
mov
aad
cli
fst
xor
inc
in
addb
jge
fsubl
add
rorl
in
jb
xor
fcoml
jl
push
jno
add
sub
and
cmp
mov
pop
dec
push
daa
xor
rclb
imul
sbb
adc
icebp
cmp
lcall
jbe
push
mov
pop
xchg
sbb
js
insl
fdivl
or
jmp
cmp
int
mov
mov
popa
pop
cs
flds
outsb
je
xor
dec
fstp
int3
rorb
sbb
push
test
loopne
pop
push
mov
stc
aas
cmp
push
in
shlb
xorb
nop
dec
out
pop
and
mov
subl
daa
pop
das
popa
inc
es
outsl
cmp
add
outsb
rcrl
push
repnz
mov
xchg
and
mov
cmp
loope,pt
stos
mov
js
mov
or
or
pop
ficomps
in
cmpsl
jae
xchg
sub
xchg
aas
lock
out
inc
sub
push
mov
pop
lock
push
jg
mov
andb
call
xor
cmp
ds
mov
dec
ljmp
mov
add
mov
leave
sub
iret
mov
mov
add
ss
mov
fmuls
out
in
stos
jl
jecxz
xchg
inc
insb
xor
mov
push
adc
call
in
mov
mov
int3
jnp
fldcw
dec
xor
cmc
dec
je
or
pop
rcrb
cmc
mov
inc
roll
add
jge
add
imul
cwtl
cmpb
sti
cmp
xchg
push
push
adc
stos
std
stos
push
mov
fisubrs
push
jno
cmpsb
sbb
in
mov
and
lahf
mov
sub
rcrl
jp
sti
xchg
push
fcomi
fstpl
jmp
mov
movsb
test
pop
repz
inc
aad
in
mov
stc
xor
or
mov
lcall
xlat
pop
je
xor
cltd
pop
sbb
ret
in
into
adcl
jns
pushf
push
je
xchg
sub
add
mov
sub
adc
jl
dec
push
lcall
insl
jle
enter
das
or
mov
or
nop
pop
ret
outsb
pop
test
and
mov
inc
cmp
and
mov
pop
mov
sbb
test
add
add
inc
movsb
popf
rcll
outsl
adc
nop
daa
mov
dec
cmpsl
cmp
aad
sbb
xor
xor
dec
fbld
and
mov
lcall
jo
and
adc
pusha
inc
jnp
jo
shll
push
sub
cwtl
insl
sub
gs
jbe
in
mov
pop
call
jmp
sbbb
shll
idivl
cltd
add
jge
mov
pushf
lds
push
inc
outsb
ljmp
repz
mov
push
dec
out
cmp
sbb
xchg
out
inc
inc
lret
jle
daa
icebp
fwait
dec
xchg
and
arpl
pop
mov
int3
negb
inc
or
pop
scas
ja
xor
fmull
je
ja
orb
push
in
xchg
aas
add
fwait
cmp
call
mov
push
loop
sahf
dec
push
push
lret
mov
xchg
int
mov
mov
adc
xchg
in
fisttps
jo
xchg
pushf
dec
aas
dec
inc
movsl
imul
sti
idivl
cld
xor
cmc
stos
jno
inc
cmc
dec
es
movsl
imul
aaa
lds
sahf
add
xchg
cli
jmp
xchg
push
mov
mov
jmp
cmp
fmulp
xchg
push
mov
dec
into
fimull
adc
mov
pop
jnp
bound
xor
int
jp
sbb
mov
dec
jnp
cmpsl
cmp
sbb
cmpsl
cwtl
xor
lock
inc
inc
add
pop
pushf
cmp
inc
movsb
frstor
es
inc
inc
sarl
inc
jecxz
xchg
mov
push
fucom
mov
xor
dec
pop
nop
inc
mov
inc
cmc
jns
xorl
ljmp
jnp
jae
std
xchg
fstpt
pop
subl
jp
es
int3
rcl
nop
cwtl
mov
inc
pop
sbb
sub
aaa
hlt
lods
inc
cmp
xor
cli
sbb
insl
xchg
xor
pop
scas
mov
jbe
xchg
mov
xchg
or
inc
sub
push
sbb
sub
or
sbbb
subl
test
push
inc
mov
aam
pusha
add
sbb
mov
push
popf
int
pop
and
dec
ror
xlat
inc
repz
mov
pop
sub
cs
je
lods
movsl
inc
cmp
in
lock
sub
popa
cmp
jno
push
orb
cmp
xlat
cltd
scas
add
insb
sahf
pop
and
add
dec
pushf
ret
jnp
fcompl
push
adc
movsb
dec
dec
scas
rorl
mov
lds
xchg
movsl
mov
call
sub
cmc
pop
popf
cmpb
mov
mov
jecxz
push
in
std
popf
cmp
push
inc
dec
dec
movsl
hlt
xchg
xchg
jp
inc
loop
gs
rcr
scas
aam
mov
lock
sbb
stc
dec
xchg
sbb
fs
shrl
fnstsw
shlb
orl
mov
daa
sub
and
or
mov
add
aam
sbb
jno
mov
mov
cltd
out
pop
scas
dec
pop
push
push
mov
push
addl
inc
pop
xor
fwait
cli
xchg
jl
mov
stos
repz
scas
fisubl
cmpsl
call
lahf
out
lea
data16
mov
xor
dec
shlb
mov
scas
sahf
or
fdivl
lret
and
pop
sub
lods
out
push
std
rcrb
add
incb
add
movsb
lds
repnz
jbe
and
stos
hlt
ja
cli
pop
ret
mov
test
inc
dec
sbb
push
push
lret
and
mov
frstor
pop
sbb
pop
stos
mov
dec
icebp
push
imul
cmp
inc
ret
pusha
adc
addr16
pop
in
pop
js
ljmp
pop
out
and
mov
xchg
inc
xchg
test
push
xchg
mov
inc
jecxz
sub
inc
jp
jo
aaa
sarb
xor
sub
outsb
fisubrs
repnz
and
ja
stos
mov
testb
in
shll
in
sbb
sbb
fmull
push
imul
fwait
xor
andl
mov
dec
testb
push
cmc
sbb
push
mov
adc
push
mov
push
insl
push
push
mov
les
mov
cmp
add
jp
lret
lds
inc
push
ret
pop
cmpsb
add
cmpsb
add
jl
sub
sbb
mov
mov
and
xor
int
stc
in
jg
push
sahf
cmc
sbb
dec
call
inc
sbb
mov
fwait
mov
mov
dec
outsl
add
mov
cltd
clc
sub
mov
dec
add
jbe
lock
mov
or
xchg
test
mov
lods
mov
mov
add
shlb
pop
insl
sbb
pop
out
xor
sub
cli
sub
or
js
lea
test
call
pop
push
xorb
aas
nop
filds
mov
rorl
sbb
dec
and
and
mov
mov
sbbl
sub
fsubrl
mov
aam
cmp
xor
and
scas
push
and
push
icebp
pop
test
jmp
rcl
mov
movsl
int
aaa
jg
pusha
test
mov
push
imul
das
bswap
jge
pop
sub
pop
sub
insb
mov
xchg
outsb
cmpsl
jnp
bound
push
xor
cmp
loope
scas
pusha
stos
test
mov
dec
push
jo
jg
int
mov
adc
add
dec
adc
lcall
and
or
and
cmp
inc
in
inc
cmp
cmpsl
mov
xchg
xor
aas
push
fiadds
mov
rol
in
lds
mov
mov
test
pop
dec
push
pusha
fiadds
pop
push
test
into
popf
jl
dec
loop
jbe
mov
mov
ljmp
mov
cmpsl
daa
xor
mov
out
bound
lea
mov
mov
sub
xchg
inc
jnp
in
popf
pop
sbb
add
pop
jae
dec
xor
outsb
movl
sub
insb
inc
rorb
mov
jno
mov
jns
fwait
out
in
sub
mov
mov
clc
xchg
test
xchg
adc
sub
stos
sbb
sbb
fwait
loop
mov
out
aad
sub
adc
loope
mov
mov
xchg
imul
inc
roll
xchg
add
push
loop
int3
dec
ljmp
ret
mov
mov
lcall
xchg
xchg
or
inc
mov
pop
movsb
popa
pop
icebp
gs
daa
in
adc
iret
xchg
xchg
xor
lods
in
inc
adc
lds
cmp
xchg
sbb
xor
loopne
test
or
dec
mov
cwtl
jns
push
mov
xor
imul
loope
and
ljmp
jge
movsl
xorb
pushl
push
fidivs
sbb
xchg
add
mov
lods
add
repnz
add
mov
adc
or
icebp
inc
das
xchg
xlat
enter
mov
iret
aam
sub
pop
mov
xor
inc
jecxz
rorb
xor
loope
jnp
mov
push
scas
pop
lods
ret
out
pop
sbbb
mov
inc
call
push
ljmp
jg
sub
add
push
sbb
pusha
pusha
jnp
adc
stos
jmp
cs
jno
mov
int3
lods
or
jge
push
mov
sub
xchg
sti
add
pop
jnp
mov
inc
push
cmp
xor
fsubl
shlb
pop
mov
adc
outsb
add
das
shrl
aaa
or
or
sub
sti
add
out
sbb
mov
push
mov
nop
mov
fwait
scas
js
mov
pop
lret
pop
cmp
sbb
pop
jo
fisubs
mov
jge
cmpsl
rol
push
enter
xor
je
addr16
and
push
sahf
xchg
push
scas
push
in
fwait
movsl
jb
or
inc
cmpsb
sub
lds
mov
subb
aas
aaa
xchg
jno
push
inc
cmc
and
out
lds
sti
fistps
cwtl
inc
adc
add
jp
or
mov
loop
sbb
adc
inc
test
push
repz
xor
icebp
leave
adc
pusha
jo
movsbl
shll
lods
sub
or
pop
mov
fcoms
ftst
hlt
cmovp
hlt
and
subl
mov
sub
or
xor
dec
or
add
push
mov
lcall
leave
mov
xchg
sub
push
sbb
fwait
aaa
inc
xor
pushf
ret
and
inc
pop
adc
push
mov
and
inc
and
outsb
sub
mov
std
in
nop
aas
aad
ffreep
pop
push
ret
mov
shr
ret
sbb
test
out
mov
cmp
sbb
cmp
sbb
cmc
mulb
sbb
push
sarb
mov
mov
ss
test
scas
imul
cs
popf
out
aaa
or
or
out
dec
pop
push
add
add
push
xor
ret
mov
sub
hlt
sub
cmp
gs
gs
sub
jb
jmp
jne
lahf
push
lock
hlt
xchg
add
mov
cli
sbb
mov
mov
cmp
dec
pop
sbb
push
mov
add
dec
iret
push
icebp
vprotb
inc
xor
out
lret
cli
leave
xor
dec
push
loope
mov
and
xchg
aam
scas
push
call
xor
sti
jmp
or
jl
cmpsl
outsl
fwait
js
add
push
ja
mov
les
gs
or
aad
mov
xchg
push
imul
sti
les
or
sub
xchg
add
xor
mov
xchg
std
outsl
dec
test
xchg
not
xor
stos
inc
popf
cmc
cmpl
mov
mov
xor
loopne
sub
mov
cmpsb
xor
mov
fsubr
sub
cld
inc
ret
sbb
jp
pop
or
rcll
loope
cmp
es
xor
int
dec
jne
sbb
add
test
imul
sti
je
pop
jle
arpl
jp
int
pop
bound
cmc
into
xchg
cmp
cld
xchg
imul
cli
mov
mov
add
jmp
xchg
test
sbb
pop
add
jae
push
add
mov
stos
mov
or
loop
stc
das
enter
jg
cmpsb
js
mov
daa
bnd
fildl
mov
xchg
xchg
xor
push
adc
xorb
adc
mov
cmpsb
icebp
fs
inc
push
xchg
imul
inc
push
and
js
fisttps
mov
push
cmpsl
fs
pop
aas
gs
push
lock
adc
subl
js
mov
es
ret
pop
int3
push
sub
loop
movsb
add
add
cli
cltd
xor
and
das
jne
dec
or
inc
adc
test
out
stc
pushf
leave
inc
cs
sar
mov
in
sub
dec
mov
ret
xchg
inc
pminub
adc
gs
popf
jbe
scas
and
sbb
aaa
fcomps
ja
or
popa
and
push
add
mov
aad
cld
jbe
mov
dec
cmc
rolb
test
aad
stc
xchg
xor
push
mov
test
or
pop
cltd
mov
xchg
arpl
sub
loop
sbb
fsubp
jmp
cld
mov
gs
jns
or
jns
xchg
lcall
out
inc
arpl
mov
adc
push
mov
insl
stos
ror
adc
out
out
sub
add
cmpsl
or
add
scas
sub
popa
out
stos
test
ret
dec
add
cmpsl
pop
inc
sub
fcomp
and
mov
pop
and
imul
stc
adc
aad
bound
add
or
jb
jge
adc
add
jg
fwait
xchg
lret
mov
add
out
xlat
ret
sbb
jbe
jg
and
mov
repz
or
push
cmc
enter
xor
cmp
and
sti
cwtl
or
push
leave
and
jne
sbb
movsb
sbb
xchg
ljmp
jo
inc
jo
xchg
pop
iret
sti
aas
or
cs
pop
test
xchg
mov
sahf
inc
addr16
rorb
iret
add
ds
and
and
int3
daa
sub
sarl
test
popa
fcomi
or
test
aaa
cld
xchg
sub
mov
jp
icebp
push
inc
pop
inc
sub
psrld
je
inc
ret
add
jp
pop
repnz
sbb
jle
mov
xchg
lods
mov
mov
adc
loope
xchg
in
xor
pop
rclb
xorl
adc
fmull
jmp
fdiv
adc
add
loop
inc
aam
addb
insl
stc
test
xchg
insb
scas
pusha
popa
mov
pop
in
add
shlb
mov
add
pop
lock
mov
pushf
shrl
sar
sbb
popa
bound
ret
les
sbb
push
arpl
test
pop
outsb
fwait
mov
inc
dec
push
std
mov
rcrl
or
inc
adc
pop
mov
and
bound
rclb
inc
testb
xlat
push
testl
and
repnz
imul
or
mov
jnp
call
jae
pop
xchg
shrb
add
mov
nop
ror
cmp
fldt
cli
jl
push
jl
aas
and
or
jg
fmull
pop
in
ret
jp
add
jl
movsl
dec
inc
mov
test
jb
jno
or
adc
sub
fstpt
pop
or
adc
inc
inc
mov
push
inc
cli
popf
cmp
mov
push
nop
cwtl
lret
adc
and
out
daa
lods
mov
inc
dec
push
ljmp
pusha
notb
jl
movl
shll
gs
out
cli
adc
mov
daa
xchg
movsl
jbe
ljmp
xchg
imul
adc
mov
fsubl
cmp
mov
in
addl
movsl
je
in
mov
test
jmp
pusha
and
fisubrs
out
mov
sub
or
push
adc
mov
arpl
out
xchg
sbb
dec
pop
movb
popa
lret
in
sbb
sub
and
int
repnz
sub
xchg
jge
adc
mov
cs
mov
fsub
pop
jo
mov
push
dec
dec
out
dec
mov
pushf
push
mov
shrb
test
clc
push
and
popa
fs
mov
in
inc
pop
into
fucomip
divl
rcrl
sti
out
ret
fstpl
xor
adc
in
aad
mov
lret
rclb
lcall
fldl
push
inc
xchg
adc
rcrb
cwtl
out
testl
pusha
cmpsl
aas
sub
inc
mov
sahf
add
arpl
int3
adc
aam
sbb
cld
and
add
iret
push
push
cmova
shr
lds
xlat
cmpsl
repz
out
shl
lret
mov
mov
and
xor
push
cmp
lea
jo
shlb
gs
xchg
hlt
call
push
dec
popf
lahf
test
incb
out
mov
sub
jg
movsl
lahf
and
insl
orb
das
cld
sbb
fs
popa
scas
imul
lahf
add
add
test
jg
dec
pusha
mov
inc
mulb
dec
inc
loopne
xor
ljmp
ficoml
stos
popa
loopne
sub
adc
jnp
jecxz
roll
jle
and
sub
mov
loope
adc
jns
in
cmp
pop
cmpsl
movsl
movsb
adcl
enter
sub
aas
in
adcb
mov
lahf
mov
adc
pushf
movsb
mov
sub
dec
cmp
add
and
bound
aaa
xchg
mov
mov
aas
sti
push
loopne
cmp
pop
test
bnd
xor
call
and
out
mov
cmp
fsubs
xlat
push
pop
cltd
insl
cmp
inc
pop
and
or
ret
inc
out
xlat
push
scas
je
adc
fucomp
rorl
lds
xchg
pop
mov
mov
cmp
movsb
sub
sti
mov
pusha
mov
cmp
fsub
cs
xchg
adc
cmp
frstor
cmp
test
mov
loopne
imulb
shlb
jl
sub
ret
mov
cwtl
ffreep
test
stos
nop
arpl
in
sbb
out
testb
mov
jo
imul
jg
pop
add
fistl
jl
xor
inc
test
mov
repnz
inc
popa
orb
cmp
xor
sub
inc
test
xor
add
and
hlt
jae
stc
sbb
jne
arpl
jp
lret
sbb
ret
outsb
sub
push
jns
sub
xchg
daa
aaa
adc
or
lret
cld
push
fstl
stc
add
ret
mov
shl
or
cmp
ss
imul
sub
popa
push
lods
mov
arpl
jg
addr16
jecxz
jl
in
add
cmp
push
pop
ja
clc
pop
out
pop
loopne
pop
mov
jg
pop
mov
mulb
idivb
je
lahf
and
in
pop
push
addb
addr16
bound
shll
jmp
push
xchg
inc
mov
imul
shl
lret
pop
fidivrl
es
or
mov
lods
jnp
pop
stos
push
fisubs
lcall
inc
aad
addr16
stos
lret
push
ret
imul
pop
flds
push
inc
outsl
movsl
inc
xchg
sub
sbb
mov
adc
imul
daa
xchg
add
inc
pop
cltd
pop
ficoml
negb
add
mov
ss
repnz
std
ret
sbb
lret
fiaddl
or
cmp
shll
push
lret
je
dec
dec
orl
sbbl
push
std
dec
pushf
mov
push
pop
push
stos
subl
mov
jecxz
cmp
jle
jo
repz
xlat
or
hlt
jge
pop
mov
mov
out
push
xor
or
pop
ja
movsl
push
fdivr
mov
adc
jb
mov
add
fcomi
lcall
push
insl
test
mov
lret
subb
xchg
sbb
shlb
stc
mov
lret
or
popf
cmpsb
test
leavew
jmp
push
dec
ss
jno
ret
sti
and
cwtl
ret
imul
fisttps
out
jg
xchg
jae
stos
cwtl
lds
mov
jp
mov
or
dec
test
jno
std
xlat
add
sarl
jge
or
pop
add
jl
mov
imul
add
iret
stos
je
ret
mov
lock
setp
mov
mov
pop
lods
dec
mov
and
jp
jle
aaa
ficoml
popa
out
verw
dec
inc
out
fsubl
mov
aam
adc
and
movsl
in
xchg
dec
mov
bound
das
lods
inc
mov
or
cmc
scas
ss
lcall
and
loope
sub
add
push
test
adc
xchg
cmp
pop
les
insb
leave
cs
and
dec
pop
aam
pop
sub
and
inc
andb
je
jbe
into
or
scas
mov
jmp
xor
push
xor
out
test
mov
lret
xor
add
mov
jo
movsb
cmp
cmp
jg
cmc
xchg
pusha
adc
sti
and
mov
mov
xchg
rcll
cwtl
and
iret
xor
push
sbb
in
imul
dec
es
es
pop
clc
in
xor
jmp
or
fisttpl
sub
jb
and
test
jbe
fwait
pushl
mov
dec
aas
dec
rol
icebp
imul
pop
loop
inc
insl
mov
cmp
sbb
adc
push
std
pop
cwtl
lds
shlb
jb
ret
sahf
sub
push
insl
xchg
filds
xchg
jle
pop
add
fdivp
xor
cli
pop
js
call
fucomi
cwtl
dec
or
scas
sub
loope
mov
je
fisttps
mov
and
lcall
popf
push
jne
in
jnp
pop
rcll
xchg
lock
jo
aaa
ret
mov
mov
dec
mov
mov
out
das
je
mov
or
scas
popa
jnp
scas
xor
inc
dec
es
fmul
cmp
add
sub
adc
in
lock
jmp
jno
hlt
ss
mov
pop
daa
ja
leave
std
mov
repnz
jp
jo
jb
repnz
hlt
call
popf
popa
ds
andb
pusha
fldenv
dec
adc
push
push
or
in
inc
push
imul
rcl
popa
pop
cmp
add
xor
jno
fstpt
loope
lds
jp
xchg
pop
rclb
mov
mov
inc
test
cmp
pop
or
or
xchg
stos
cmp
int
mov
mov
in
lods
imulb
jle
mov
subb
fnstcw
mov
fcmovne
insb
loopne
sbb
fs
pop
dec
sbb
aad
sub
xor
dec
addr16
mov
inc
jns
shrl
xor
inc
xchg
lea
xchg
mov
gs
enter
lret
mov
lods
mov
add
inc
arpl
std
hlt
adc
in
repz
xlat
fisubs
dec
pushf
lods
loope
popf
movsb
adc
leave
lea
shrl
lahf
cld
mov
pop
in
inc
enter
sub
or
dec
inc
xchg
inc
cli
adc
push
iret
into
xchg
dec
andb
jg
pop
cmp
add
xchg
and
loope
xchg
and
pop
sbb
mov
mov
push
into
inc
add
xchg
ljmp
jae
inc
push
cli
mov
push
cmp
jg
loopne
mov
cs
inc
mov
or
and
gs
rclb
add
test
mov
pop
jb
mov
mov
aaa
imul
mov
pop
hlt
dec
xchg
in
nop
fcmovnb
jge
mov
nop
mov
inc
push
mov
incb
cmp
jno
adc
repz
push
push
cltd
dec
sarl
push
in
sbb
mov
negb
ror
loope
fldenv
mov
pop
dec
xchg
inc
mov
xor
sahf
add
pushf
loop
dec
mov
or
sbb
push
add
xor
lock
jno
shll
pushf
cmp
idivb
pop
stos
jbe
inc
xchg
mov
cwtl
iret
rcrb
cmp
sub
jmp
repnz
pop
mov
sub
dec
push
clc
ret
jbe
cmpsb
pop
pop
pushf
cmc
movsl
cmp
mov
pop
cltd
mov
dec
mov
add
or
adc
pop
enter
and
ds
adc
adc
jg
push
cmp
pop
ficompl
dec
pop
fnstenv
mov
xchg
jecxz
mov
sub
scas
jl
or
mov
xor
push
sbb
cmpsb
or
call
lcall
sbb
lret
pop
mov
and
add
mov
test
test
xlat
mov
aam
adc
cltd
fucomip
inc
int
mov
test
ret
pop
insb
icebp
xchg
popf
add
dec
dec
or
inc
in
or
adc
add
mull
push
hlt
and
xor
int3
cmp
and
cmpsl
dec
bound
scas
mov
in
inc
pop
incl
ds
stos
out
sbb
outsb
add
push
mov
jb
xchg
adc
cmp
xchg
xchg
sbbl
loop
cmp
jo
insl
cmpsb
xchg
lret
sbb
xorb
popa
mov
jp
fiadds
lcall
addr16
ds
sub
movsb
mov
pop
cltd
stos
bound
nop
ror
popa
mov
push
pop
pop
push
das
iret
push
sub
pop
mov
addl
mov
dec
out
in
mov
add
sub
stos
jbe
jg
sub
sbb
xor
icebp
xor
or
ljmp
jo
int3
inc
rorl
cltd
jne
je
insb
mov
mov
sbb
push
sbb
mov
leave
lret
xchg
add
call
pop
sbb
cmpb
push
inc
fwait
lahf
imul
mov
pop
iret
jne
sarb
hlt
cmpsb
ja
arpl
cmp
int3
inc
lcall
mov
mov
es
loopne
out
daa
pop
fsubl
pop
lcall
aam
mov
xchg
xlat
mov
fcmovnb
mov
leave
movsl
xor
out
push
int3
mov
add
sub
shlb
stos
sbb
lcall
clc
push
daa
adc
insb
jbe
leave
and
rcrl
sbb
ss
mov
ret
and
add
add
mov
mov
lods
xchg
push
stos
inc
fisttps
andl
cld
pop
fnsave
jg
incl
stc
cs
push
pop
call
repnz
jne
mov
lret
mov
outsb
cltd
mov
xlat
xchg
xchg
fstp
stos
cli
fcoms
fldl
xchg
pop
mov
in
dec
addr16
fs
out
mov
lcall
ret
push
in
jg
or
mov
adc
loop
xchg
stos
insb
mov
lds
and
dec
dec
push
jle
sbb
ret
push
or
push
sbb
into
lcall
daa
test
push
jp
int3
pop
hlt
adc
fstl
ds
mov
aas
cmp
sbb
ss
inc
xchg
xchg
mov
mov
push
das
lods
cmp
ja
inc
loop
into
arpl
xchg
lret
les
fcoms
nop
cld
adc
dec
xor
add
mov
xchg
loopne
xorb
or
bound
sub
cmp
loopne
ret
cmp
jl
rolb
lock
in
iret
mov
jle
lret
scas
loop
lret
pusha
rcrl
loop
data16
mov
mov
jecxz
and
mov
int
inc
fwait
pop
mov
or
inc
xchg
push
outsb
pushf
shlb
pop
mov
jne
push
push
aaa
mov
mov
repnz
popf
lea
pinsrw
fldt
mov
sbb
lods
mov
or
repnz
adc
test
add
fucom
mov
movsb
iret
int
push
imul
push
dec
test
push
dec
enter
pop
pop
stc
sbb
mov
out
mov
mov
cmp
sbb
insb
mov
mov
jp
in
cmp
dec
lcall
jg
dec
into
mov
data16
iret
ja
adc
int
add
ret
outsl
mov
por
sbb
jne
push
jmp
and
es
sar
pop
jp
outsb
dec
or
andb
mov
mov
sbb
sbb
fs
or
mov
push
idivb
and
mov
stos
daa
in
test
in
pop
repnz
dec
mov
xchg
scas
sbb
pop
jecxz
or
fdivrl
faddl
fs
sarb
test
dec
xchg
repz
rorl
es
push
pop
xchg
pop
adc
xor
stos
push
add
ja
xor
jecxz
out
push
jbe
mov
and
inc
xlat
adc
std
les
or
mov
js
fcmovb
hlt
out
out
xor
pop
loopne
jg
ret
jbe
cmc
pop
pop
lahf
and
aam
sub
cmc
cld
push
ljmp
inc
rcl
cli
pop
jns
movsb
inc
adc
lods
rcll
dec
addr16
insb
test
ss
fdivp
cmpsl
loope
cltd
pop
or
sbbb
pop
sbb
jge
sbb
pushl
jno
and
jne
pop
in
push
xor
sahf
mov
pop
jecxz
sbb
xor
dec
jecxz
mov
dec
outsb
int3
or
jle
std
jle
and
adc
shld
xchg
xchg
pop
or
rorb
add
jp
mov
sbb
testb
mov
fisttpl
push
pop
shlb
inc
or
lock
hlt
sarb
mov
mov
cmp
sub
mov
sub
dec
repnz
ja
out
das
xor
cmc
add
inc
rcll
jle
lret
sbb
sub
das
jnp
mov
gs
outsl
in
sarl
ljmp
ja
fbstp
out
cli
dec
jecxz
lret
adc
push
pop
in
daa
js
xor
dec
inc
cmp
lret
aam
add
out
mov
inc
shll
xor
jge
sti
mov
lea
nop
icebp
jb
jle
and
adc
mov
aad
inc
imul
mov
or
es
out
mov
cmp
jne
shll
inc
mov
mov
or
or
xchg
and
push
adc
mov
int3
xor
mov
pop
lret
mov
sub
stos
inc
sub
pop
mov
and
pop
inc
scas
pop
and
popa
mov
fsts
pop
mov
sbb
popa
jnp
lret
loop
jmp
test
cmp
xor
es
push
int3
in
mov
sbb
mov
std
xlat
nop
jge
or
pop
incl
push
adc
out
mov
outsl
inc
leave
movsb
push
loopne
loop
mov
dec
jo
lret
scas
fwait
sahf
lock
cmp
or
jbe
and
cmp
pop
jge
adc
repnz
jl
mov
fadd
cltd
mov
sbb
xor
out
cmp
testl
dec
pop
loop
shll
mov
iret
sub
arpl
std
mov
call
pop
or
out
sbbb
or
mov
dec
lock
jbe
sub
jle
pop
ja
addl
jnp
mov
scas
jge
iret
fistps
in
mov
stos
push
add
stos
mov
fldcw
inc
push
jp
or
mov
cmp
xor
push
insl
xchg
stos
push
xchg
mov
divb
jnp
sbb
push
xchg
xchg
xchg
xchg
fistps
jecxz
rorb
hlt
cwtl
jmp
jl
andl
xor
push
jmp
mov
inc
aaa
mov
popf
rol
lods
jge
loop
cmpsb
push
andb
negb
into
sti
pushf
cmp
inc
mov
or
xchg
loopne
int
test
out
das
loopne
xchg
rcl
push
push
in
ja
push
cmpsl
test
sbb
sti
mov
xchg
cmpsl
mov
sbb
dec
add
fwait
pop
pushf
inc
adc
xchg
inc
into
xor
sbb
jl
and
cmp
ss
sarb
jmp
lock
and
fimuls
jbe
test
push
inc
and
in
loope
xchg
cmpl
into
jecxz
fbld
adc
rcrl
sahf
push
xchg
test
sarl
mov
mov
test
pushl
aas
divl
sbb
sub
js
sahf
stos
enter
dec
cmp
cmp
jae
and
jno
out
je
mov
ljmp
rcr
test
stc
push
cmp
add
inc
push
mov
int3
es
mov
jb
pop
in
sub
sub
or
cmp
dec
fwait
push
imul
xor
mov
mov
outsb
jnp
mov
out
pop
and
std
sub
mov
aaa
and
dec
jbe
stc
push
jle
or
push
xlat
ja
fsubrp
repnz
pushl
push
pop
shrb
imul
pop
mov
movsl
push
cmpsb
adc
mov
repz
inc
inc
ret
adc
jecxz
pop
mov
sbb
push
int3
mov
lcall
rcll
xor
fwait
xchg
lods
and
negb
movsb
sub
cmp
jb
cmp
leave
push
jb
xchg
lods
in
or
and
fildl
xor
aas
jns
scas
cmpxchg
push
data16
inc
test
mov
mov
jnp
aam
das
xchg
inc
mov
repnz
jecxz
int3
rolb
jle
jmp
push
test
decl
dec
jno
scas
loop
mov
test
push
leave
dec
or
pop
les
ss
jns
sbb
mov
inc
arpl
and
les
cmp
pop
rorl
stos
pop
push
xchg
jnp
lret
sti
test
hlt
ss
rorl
lahf
pushf
jnp
icebp
ljmp
sbbl
push
ds
xor
xchg
ret
adc
scas
lret
clc
or
jno
jne
inc
fistpl
iret
mov
cli
sub
loope
fsubl
inc
inc
cmpsb
sub
dec
xchg
aas
shlb
cwtl
loope
add
out
add
cmpsl
stc
xchg
fdivrs
fbld
or
mov
les
xor
xchg
cmc
sbb
pop
xor
ror
fstpt
adc
xchg
adc
subb
add
pop
roll
cmpl
add
dec
fcompl
push
jb
outsb
fistps
shlb
std
cmpsb
rcl
lods
dec
sbb
mov
rol
mov
pop
hlt
into
mov
jp
mov
mov
xor
mov
int3
cmpb
sbb
int
mov
call
cmp
pop
xor
and
pop
out
mov
jb
data16
adc
jmp
or
jge
lcall
lods
shll
subl
xor
les
mov
or
arpl
lea
mov
mov
fisttpl
fimull
mov
rcll
stos
and
hlt
dec
or
mov
cs
pusha
sbb
std
int3
cmp
sar
xchg
sub
inc
inc
lahf
aad
adc
adc
out
popf
test
and
jp
ret
sbb
push
mov
push
xchg
imul
pop
mov
js
movsl
xchg
mov
dec
in
mov
xor
fmull
in
mov
fldt
cltd
cmpsl
stos
fnsave
arpl
jns
pop
pushf
xor
shll
push
stc
push
cwtl
adc
jmp
inc
cli
lds
sub
jae
aad
push
imul
iret
ljmp
insl
jne
dec
pop
pop
rcll
mov
push
mov
pop
fdivrl
jecxz
loop
dec
and
pop
add
cmp
mov
inc
inc
add
fucomp
ljmp
lcall
pop
ret
nop
es
sbbl
scas
sti
stos
and
mov
jae
jecxz
scas
xor
push
ljmp
mov
dec
ret
jecxz
and
and
pop
and
fwait
push
or
cmp
leave
mov
or
cmp
jne
xor
loope
pop
icebp
mov
sub
les
ret
adc
push
cltd
sub
js
and
ss
mov
mov
leave
mov
pop
ljmp
out
lea
jbe
push
enter
adc
cmc
test
add
fists
rol
call
xchg
dec
in
push
lea
aaa
hlt
push
lcall
push
mov
imul
test
jne
sarl
int3
xchg
pop
cli
sbb
add
lret
jnp
stc
in
repnz
push
add
or
iret
cmp
or
out
aas
sbb
inc
add
sbb
mov
mov
jmp
sub
lods
mov
and
dec
cwtl
cmp
imul
mov
pop
sbbb
adc
das
test
dec
jb
inc
aam
sti
mov
sti
cltd
pop
jmp
mov
test
pop
jb
cmpl
xchg
pop
cli
or
gs
cli
mov
mov
in
push
daa
xor
movb
add
push
mov
or
jne
fistpll
cmpl
xor
ss
adc
scas
adc
mov
push
sbb
push
fsts
mov
sub
fcmovnb
cmpsb
pop
pusha
cli
jmp
mov
inc
or
mov
lods
jae
jl
enter
mov
daa
iret
rep
add
pusha
push
repnz
cli
mov
sub
sub
aam
dec
mov
mov
pushf
dec
pop
mov
mov
imul
jns
mov
xchg
aam
mov
mov
lea
fidivl
out
into
xsaveopt
fildl
orb
rorl
sbb
pop
dec
mov
sub
dec
insb
cmp
cs
push
xchg
insl
jp
mov
loopne
out
arpl
orb
and
jmp
inc
mov
rclb
xor
ret
xchg
push
pop
sti
call
mov
inc
mov
pop
popf
mov
mov
lods
inc
xchg
enter
mov
inc
insw
dec
filds
or
repz
shl
sub
cwtl
pop
ds
test
aam
and
adc
adc
xor
adc
mov
add
std
call
xchg
popf
fisubs
lds
xor
cmp
jns
jmp
sub
cmp
xlat
pop
js
jnp
fldcw
and
push
xchg
jns
in
push
imul
bound
call
stos
pop
clc
hlt
aad
out
and
leave
adc
mov
push
adc
insb
outsl
subl
mov
pop
dec
stos
push
movsl
xchg
mov
arpl
adc
mov
mov
test
mov
iret
inc
xchg
sub
mov
sarl
in
jns
fidivrl
pop
add
jmp
add
push
cmc
cli
inc
fcmovnu
cld
lods
and
cmp
shll
int3
sahf
and
lret
pop
mov
js
adc
test
cmp
inc
add
cmp
test
mov
push
sbb
scas
in
sub
mov
mov
stc
xor
test
pushf
nop
push
jp
adc
test
bound
dec
aad
mov
jmp
imul
data16
bound
add
inc
loop
enter
adc
and
fisubrl
ja
mov
cld
xlat
popa
dec
add
bound
fmull
sub
or
mov
test
push
inc
mov
fcoms
addr16
jecxz
jg
and
jae
jge
inc
jno
fisttps
pop
push
xchg
add
fsubs
adc
cli
jle
frstor
adc
insb
mov
xchg
cmp
adc
sbb
sbb
loopne
push
jmp
scas
xchg
pusha
aad
inc
dec
add
pusha
ret
push
lahf
loopne
sbb
add
cld
xchg
arpl
test
dec
adc
sub
and
push
loope
lret
out
daa
xor
xchg
push
mov
bound
xor
rcrb
mov
pop
rcrl
mov
iret
mov
test
fcomp
gs
ja
pop
sbb
das
inc
sbb
mov
xchg
jne
lods
rolb
cmc
orl
iret
cmp
adc
iret
and
xchg
test
stos
jns
int3
lods
push
jle
test
incb
test
imul
xor
mov
inc
push
add
stc
in
xchg
rol
ljmp
outsl
adc
fists
add
aaa
test
push
dec
stos
pop
lock
arpl
pop
iret
sbb
inc
pop
mov
push
jno
mov
ja
mov
and
lock
mov
daa
std
int
xchg
jg
xchg
lret
incb
push
out
ds
mov
adc
sub
sub
mov
sub
or
out
mov
idivb
out
pop
adc
repz
or
stos
xchg
ljmp
andb
push
mov
jmp
mov
out
bnd
push
push
sub
fwait
jb
out
lock
aaa
jmp
fists
gs
push
xor
pop
mov
mov
jbe
or
jp
jbe
outsb
mov
cmp
cwtl
jmp
popa
dec
fdivs
push
daa
xchg
gs
dec
sbb
sbb
inc
jbe
mov
shr
mov
add
aaa
int
xchg
jb
out
cmp
aas
popa
fldl
cwtl
lret
popa
mov
sub
mov
xchg
or
or
xchg
dec
jne
push
xchg
xor
sub
andl
outsl
leave
out
out
rorl
js
sub
sbb
jnp
and
mov
jmp
hlt
jmp
cmc
stc
outsl
push
pop
mov
push
nop
lods
popf
repnz
jmp
iret
iret
xor
sahf
or
enter
mov
dec
dec
push
xchg
jbe
mov
sub
int3
sarl
scas
adc
stos
push
bound
dec
sbb
mov
and
loope
rcrb
out
inc
mov
cmp
and
jae
cmp
sbbl
int3
pop
lret
pop
in
fcompl
stc
push
in
add
out
lcall
test
dec
mov
orl
and
add
mov
jecxz
cli
hlt
xor
mov
sub
call
sbb
js
lds
bound
and
fisubl
jmp
mov
loopne
push
sbb
outsb
jbe
test
xor
or
ret
imul
pop
clc
shrb
push
cld
xchg
sub
jno
test
stos
jmp
test
xchg
sub
add
adc
mov
std
add
cmp
fs
inc
cmc
ret
sbb
mov
jle
test
cmpsb
in
shl
daa
mov
int
push
test
xor
mov
and
mov
and
cmc
push
out
xor
pop
es
push
push
repnz
andl
je
test
jb
int
sbb
mov
jbe
fwait
cmp
ja
aad
or
js
cmp
mov
in
cmpsb
mov
jle
mov
das
lea
stc
in
and
jmp
and
or
push
xor
out
outsb
call
push
cmp
cmpsb
xchg
jns
shlb
dec
dec
outsb
sbb
sbb
leave
lret
adc
cli
into
ret
xor
mov
ja
stos
cmp
pop
mov
test
adc
fucomi
mov
push
fucomp
adc
sbb
cld
dec
or
sbb
jo
mov
fsubl
fldcw
xchg
push
xchg
dec
sbb
or
incl
mov
jecxz
or
bound
shll
cwtl
aam
mov
int
jle
or
arpl
jg
lods
pop
lock
sbb
sbb
xor
mov
mov
and
or
mov
or
adc
mov
popa
fwait
sub
mov
sub
fcoms
fsin
push
jle
sbb
dec
pop
cmp
mov
sahf
push
es
popa
lret
jg
faddl
gs
hlt
pop
lds
jbe
jge,pn
repz
sub
mov
mov
andl
loopne
loop
inc
inc
rolb
cld
roll
mov
add
call
ds
pop
or
aaa
dec
lods
leave
movaps
movb
enter
and
jmp
subb
movsb
mov
in
out
imul
ss
sub
incb
pop
int
inc
lds
xor
pop
lcall
add
push
mov
fwait
mov
aaa
out
bound
repz
sbb
sahf
or
lcall
fwait
mov
lret
cwtl
popf
std
das
push
inc
inc
xchg
pop
pop
xchg
fdivl
das
fldl
jle
cmpl
or
cltd
pop
adc
cli
inc
pop
jo
shl
dec
jnp
inc
js
dec
or
fwait
movsb
in
ds
call
imul
xchg
jnp
data16
mov
dec
push
shlb
sub
shlb
stos
subb
add
test
arpl
mov
pop
push
dec
push
pushf
dec
xchg
lcall
dec
int3
mov
jnp
lret
test
push
jno
ret
leave
test
cbtw
dec
lcall
insb
add
lods
jp
stc
xchg
das
rorb
xor
xchg
sbb
leave
xchg
pop
pusha
xchg
jae
data16
call
adc
inc
xchg
fdiv
lods
fwait
push
mov
jecxz
je
jmp
shl
jno
loope
cmpsb
mov
mov
and
incl
xor
cmp
xchg
xchg
sbb
out
cmpb
mov
imul
push
or
pop
test
dec
or
pop
pop
aam
cmp
xchg
out
xchg
mov
xchg
add
push
mov
inc
in
lcall
cmp
cmp
xor
and
add
jle
adc
clc
jo
in
call
or
mov
cltd
faddl
and
or
pop
das
insl
shll
shl
push
je
jns
mov
add
add
in
adc
outsb
jle
sbbb
outsl
or
lds
push
imul
jge
pop
cmp
loop
mov
cmpsl
rol
jp
sbb
popf
mov
cmp
aad
inc
cmp
jne
push
ror
in
add
shll
fimull
pop
and
orl
out
mov
mov
leave
inc
popf
jb
leave
mov
js
aaa
lock
aaa
lods
orb
out
test
je
xor
xchg
jmp
sbb
sarl
pusha
xor
inc
les
xchg
mov
gs
shr
push
shl
adc
jne
adcl
shrl
into
cmpsb
lds
adc
rorb
sbb
popf
aaa
jle,pn
adc
push
in
cltd
out
sub
mov
repnz
fwait
xchg
xchg
xchg
sub
ret
adc
ror
push
sti
jp
push
cmp
xor
fs
leave
jg
push
xor
pop
dec
inc
xchg
pop
lods
insl
cmp
jg
add
fimull
test
test
xchg
aaa
in
push
xor
jl
add
mov
in
cmp
mov
push
push
rorl
xchg
cmc
jae
loop
fsub
xchg
sub
sub
lcall
adc
mov
pushf
sub
int
hlt
rorl
pusha
sbb
rcrb
popa
cmpsb
stos
repnz
dec
aas
insl
add
loopne
pop
pop
test
sbb
mov
or
scas
jl
push
xor
push
mov
loopne
mov
lds
rcl
sub
sahf
mov
test
int
and
enter
pop
sbb
fwait
push
push
test
adc
jle
out
mov
ja
subb
mov
push
mov
inc
nop
dec
aad
leave
add
sub
movsl
inc
inc
adc
fnstenv
push
push
sub
lods
lods
inc
in
fldenv
xlat
push
sbb
push
mov
cmp
pop
dec
cli
lea
inc
repz
push
iret
add
in
dec
jecxz
sbb
aaa
negl
add
cld
jmp
mov
into
dec
ficoml
adc
add
xchg
testb
push
push
hlt
mov
push
test
jle
movsb
pusha
xchg
lods
inc
insl
fst
test
jb
sub
mov
ljmp
sbb
mov
xchg
lea
lea
jne
mov
or
push
or
scas
sbb
push
sbb
sbb
dec
mov
insl
jno
pop
push
mov
ds
add
mov
adc
pusha
sbb
mov
push
divl
lahf
dec
arpl
add
stos
jns
scas
enter
clc
aad
outsl
subb
stos
aad
cld
imul
pop
add
ret
push
pop
jg
dec
movsl
pusha
testb
std
pop
shl
out
ljmp
jge
and
movhps
out
enter
icebp
in
addb
mov
clc
sbb
mov
sbb
pop
adc
out
ss
rcll
iret
mov
xchg
mov
arpl
xor
xchg
repnz
stos
ljmp
xlat
jmp
push
sbb
add
mov
loop
shl
pop
ja
push
fwait
stc
add
push
in
add
mov
addr16
push
and
lock
push
fwait
incb
inc
mov
xchg
test
cmp
mov
std
mov
push
mov
outsb
test
pop
pop
jecxz
xor
pop
fs
sbb
std
and
nop
push
jmp
xchg
adc
je
sahf
int
shlb
mov
jle
cmp
shl
in
pop
popf
add
aam
jg
pop
test
xor
iret
das
cmp
test
sub
pop
mov
or
ds
out
mov
daa
test
sbb
pop
xor
enter
popa
pusha
inc
enter
xchg
aaa
add
mov
test
and
xor
cld
add
rorl
scas
mov
in
fistpl
pop
or
mov
pop
test
shl
jge
mov
js
fsubr
sbb
stos
cmp
cmpsb
xchg
dec
dec
in
pop
xor
push
cmp
adc
cmpsb
out
out
jmp
mov
insb
sahf
dec
cmpb
aas
xchg
mov
divl
pop
lods
pop
push
dec
sbb
jb
orb
mov
call
into
out
mov
mov
arpl
cmp
push
mov
xor
and
mov
leave
in
mov
and
sbb
iret
inc
sub
jl
mov
cmp
cwtl
cmpsl
mov
adc
rorb
out
sti
rol
cmpsb
pop
pop
push
push
lock
push
nop
pop
and
fcmovnb
push
cltd
out
rorl
and
and
mov
mov
gs
cmp
and
mov
icebp
fwait
mov
mov
or
dec
or
add
cmp
and
inc
sbb
mov
imul
add
mov
and
insl
les
sar
pop
jle
faddp
fisttpl
adcb
mov
cld
jge
dec
fidivl
cmp
mov
rcr
lds
push
dec
adc
mov
mov
jbe
add
popf
cmp
jle
inc
ljmp
add
jmp
lcall
jmp
mov
adc
imul
jbe
and
inc
popw
arpl
push
xchg
aad
out
mov
inc
push
das
ret
lods
sub
rol
mov
xchg
add
popf
sbb
push
std
inc
push
fcmovbe
inc
pop
cld
aam
test
mov
cmp
jle
outsb
ljmp
push
mov
imul
mulb
aaa
pop
mov
data16
testl
push
popa
sbb
stos
push
xchg
insb
scas
fdivrp
lret
jbe
inc
cmp
dec
imul
cmp
and
mov
cmp
push
test
cmp
in
lcall
ret
aaa
sub
sub
inc
into
mov
and
mov
mov
jo
adc
pop
inc
add
adc
js
fcom
scas
jmp
adc
insl
rcl
mov
lods
nop
mov
adc
or
jge
stc
sub
int
xchg
rcl
lret
out
sbb
daa
dec
mov
xor
pop
movsb
and
adc
scas
rorl
jge
popa
notl
jne
js
push
sub
mov
jecxz
pop
inc
xchg
push
data16
cld
pop
jp
stos
hlt
xchg
lods
dec
cmp
enter
out
pop
out
shll
sahf
push
aam
or
mov
iret
pop
add
sbb
mov
inc
mov
in
xor
call
lcall
aam
pop
addb
push
mov
jb
adc
push
sbb
cmp
lret
lock
sbb
mov
pop
dec
dec
fnsave
xor
jmp
add
ljmp
inc
fmul
add
test
call
pop
jmp
jns
out
rol
imul
cli
shlb
scas
xchg
js
or
rcrl
or
fcomp
das
add
or
jg
fimull
jp
cs
sub
sbbl
jle
lcall
fidivl
and
ret
pop
dec
fidivl
push
and
inc
xor
lret
dec
xor
jo
pop
sbb
ss
cmp
cmp
add
sbb
mov
dec
push
sbb
or
in
hlt
ret
mov
push
jno
pushf
das
test
orb
js
jb
jge
mov
xchg
push
fistl
mov
adc
push
fs
mov
add
in
imul
lret
jmp
inc
inc
sbb
push
lods
mov
or
push
xorl
sbb
pop
shlb
cli
dec
sbb
mov
adc
cmp
and
cmp
or
jne
jno
xchg
cmp
rorb
sub
inc
repz
subl
sub
into
sbb
pop
dec
fsubr
shlb
push
lods
mov
fmul
sub
xor
ss
jmp
addr16
fbld
dec
lds
sbb
repnz
outsb
mov
xchg
mov
xor
out
cmc
mov
xchg
and
pop
inc
enter
test
shrb
cmp
imul
or
pop
dec
jg
inc
jne
int3
mov
aaa
leave
push
lea
es
and
imul
sub
jae
push
pop
sbb
add
sbbl
adc
fs
out
loop
mov
imul
mov
dec
in
xor
fimuls
sub
cmpsb
jb
push
push
lods
mov
xchg
add
and
insb
jb
cli
mov
loop
inc
movsb
into
mov
mov
cmpb
mov
fcomps
jae
push
test
test
insl
xorb
cmp
push
mov
movb
and
lds
inc
pop
imul
rorl
cmp
test
add
cmc
add
push
or
dec
push
aad
mov
xor
push
stos
add
mov
cmp
jl
dec
fadds
loop
xchg
xor
lcall
popf
mov
and
or
sbb
int3
lods
push
mov
movsb
call
test
pop
jmp
push
pop
mov
icebp
mov
pop
popa
or
outsl
lret
leave
mov
xchg
inc
cmp
add
addr16
add
lock
sub
fsubl
jno
and
outsb
rcll
or
xchg
push
mov
push
test
mov
xchg
outsb
adc
jb
add
pop
inc
mov
insb
lcall
pop
lahf
lods
pop
loop
sbb
test
clc
leave
arpl
and
lea
fs
test
inc
bound
sbb
out
wbinvd
push
shll
sub
cmp
into
cmp
test
int
les
mov
pop
jp
push
push
jp
ret
mov
inc
cmp
cli
lods
jnp
and
ret
aaa
mov
inc
or
lods
imul
cwtl
jmp
and
call
cmc
cmpsl
cmc
cmpsb
mov
xor
adc
mov
xor
lea
and
jb
nop
push
xchg
and
bound
dec
movd
stos
rcr
add
shr
inc
pop
add
or
jo
das
mov
add
insb
dec
push
and
es
push
clc
inc
or
in
dec
leave
scas
dec
lods
or
or
add
imul
push
mov
into
sub
lahf
xor
push
or
xor
fsubrs
push
inc
stos
stc
cld
mov
test
test
ss
push
jge
push
dec
add
hlt
imul
mov
loop
or
inc
not
inc
xor
mov
cmpsl
cmp
inc
jbe
push
jo
cli
pusha
jle
js
out
js
add
mov
lret
inc
mov
xor
movsl
dec
sbb
cmp
icebp
gs
lret
ss
sarb
test
aas
and
push
dec
test
inc
push
adc
into
xchg
xor
sarb
mov
fldenv
sbb
xchg
lods
sbb
mov
push
int
mov
or
mov
jbe
or
clc
pusha
jl
pop
sbb
test
mov
into
cmp
mov
xchg
cmp
cmc
and
add
mov
xlat
icebp
test
mov
xor
aam
stc
adc
jmp
mov
jecxz
testb
or
ja
sbb
sbb
imul
jl
shrb
inc
insb
jmp
shrl
sub
por
cmp
pop
xchg
sub
outsl
ret
fcomp
stc
jae
hlt
stos
sahf
data16
mov
cmp
js
aam
ret
fcmovne
sub
mov
jge
jae
js
xor
adc
rcrl
push
jmp
jmp
push
adc
clc
in
stc
or
aas
or
dec
in
inc
cmp
sub
add
cmp
ljmp
int3
push
lds
mov
sahf
leave
add
pop
push
jmp
cmp
pop
arpl
xor
fcom
xor
jg
aad
inc
daa
sub
jns
cmp
pop
ficomps
fsubrs
mov
push
xchg
pusha
sub
pop
pop
mov
movsb
jmp
or
xor
push
xchg
xchg
pop
insl
sbb
push
pop
popf
mov
into
mov
sub
cmp
xchg
xor
scas
data16
icebp
shl
shlb
xor
mov
jge
ret
aam
xor
mov
adc
push
mov
mov
cwtl
lahf
xchg
xchg
je
sahf
outsb
mov
jle
push
pop
lods
btl
push
call
test
jl
fs
test
mov
mov
stos
push
and
fidivrl
or
int
imul
sbb
mov
lahf
fs
iret
fwait
movsl
dec
pusha
push
hlt
add
xchg
and
dec
mov
xchg
xor
hlt
shrb
popf
test
push
es
inc
sbb
xor
and
and
out
out
pushf
mov
aas
sbb
shrl
fwait
repnz
out
and
mov
ja
sub
xor
negl
pop
jno
mov
out
fisttpll
inc
jecxz
push
lcall
push
cmp
xchg
and
addr16
mov
out
mov
lret
xchg
jmp
push
insl
xor
enterw
imul
scas
test
pop
adc
lds
dec
push
mov
aas
sub
jmp
jmp
adc
lret
js
ljmp
leave
xchg
inc
mov
rclb
push
mov
or
pop
inc
jnp
sbb
inc
and
jp
stos
push
fsubp
nop
jae
cmp
sbb
jae
pop
daa
adc
mov
into
pop
xor
pop
clc
sbb
push
inc
std
xchg
test
js
lods
and
xlat
lods
jnp
lret
test
sbb
jae
rcrl
outsl
and
push
or
mov
xor
lock
mov
stos
dec
inc
negl
jg
mov
sbb
xchg
repnz
repz
jb
std
rorl
mov
jbe
add
dec
mov
out
mov
xchg
mov
pop
nop
push
fwait
lods
repnz
or
mov
out
mov
mov
dec
sbb
push
fmuls
dec
and
idivl
pop
adc
lret
repz
int
push
jl
cmp
dec
shrb
loope
das
fists
lods
mov
cmp
lcall
xchg
cwtl
and
test
iret
mov
xchg
cmpsl
es
inc
push
movsl
loop
and
pop
daa
aaa
rcll
cmp
ret
add
mov
dec
sub
jmp
loop
mov
scas
dec
jp
es
ss
mov
pop
push
xchg
mov
sub
int
in
and
xchg
push
jmp
mov
scas
pop
mov
inc
xchg
lods
and
lds
jo
fisubs
cld
inc
test
add
xor
dec
adc
sbbb
mov
jne
sub
sbb
xchg
pop
icebp
lea
sub
xchg
rolb
movsl
and
and
xor
aad
sub
fsubrs
addb
testb
or
push
and
stos
sbb
and
mov
stc
jbe
cmp
dec
jb
into
rcl
loopne
stos
add
or
sbb
mov
push
cmp
jns
and
into
popa
cmp
in
or
xchg
lret
push
es
mov
das
xor
int
setp
das
sub
jno
movsl
mov
cmp
loop
ret
push
das
sbb
mov
sbb
sbb
mov
scas
aaa
pop
adc
stos
lds
repnz
js
pop
aaa
jl
sub
popa
xchg
subb
xchg
mov
ficoml
mov
in
sub
dec
xchg
pop
cmc
mov
mov
imul
dec
jmp
mov
push
popf
bound
out
xchg
adc
out
cli
sbb
insl
enter
jge
mov
cmp
mov
mov
xor
stos
sbb
jns
out
dec
xchg
fwait
test
jnp
cwtl
add
je
dec
and
lock
aam
cmp
aam
mov
imul
icebp
mov
filds
lods
xchg
sahf
adc
es
lods
xor
dec
mov
es
popa
mov
daa
lret
pop
adc
push
jecxz
sbb
dec
dec
jne
sbb
adc
pop
push
stc
cwtl
subl
add
insb
data16
cmp
xor
dec
sub
sbb
xlat
nop
push
mov
scas
and
loope
cmc
aas
cmpsb
add
adc
jae
rcl
stc
adc
repnz
fmuls
or
xchg
scas
cmp
inc
lock
imul
sbb
fnstcw
mov
jo
je
pop
fwait
pop
mov
cs
iret
mov
fwait
dec
test
jg
xchg
loop
movsl
aaa
pop
addr16
sbb
jbe
xchg
pusha
adc
idiv
sbb
xchg
pop
gs
rcr
pusha
fcmovbe
ss
sub
ret
dec
stc
sub
mov
lret
and
push
pusha
in
push
jl
mov
sbb
scas
mov
jmp
cwtl
cmpl
inc
mov
sub
jmp
in
lcall
pop
fadds
cmp
je
dec
imul
or
add
cmpl
xchg
cmpsl
xchg
mov
xchg
fldl2e
arpl
cltd
sbb
xor
push
pop
jge
or
jle
std
cmpsl
outsl
dec
sub
mov
xor
xor
sub
push
push
xchg
dec
aas
repz
mov
notl
out
pop
jle
or
xor
mov
sub
or
notl
mov
sub
daa
jo
fiaddl
cmp
les
add
and
fcomps
loop
mov
arpl
dec
fldcw
ret
or
rcl
scas
pusha
stos
leave
xor
loopne
cmpsl
pop
adc
out
push
call
sub
enter
outsl
mov
mov
pop
pop
lods
loop
inc
addr16
dec
push
leave
mov
pop
xor
out
daa
pop
dec
dec
jns
int3
hlt
adc
in
scas
repnz
mov
aaa
push
leave
out
push
dec
pop
test
hlt
mov
fdivl
popf
das
cmp
inc
jae
into
enter
fstp
push
mov
xor
jns
mov
cwtl
xchg
mov
and
adc
fildll
mov
xchg
sbbl
popa
jl
test
mov
dec
shrb
lock
into
outsb
fistl
inc
leave
repnz
das
add
rorl
fsubp
into
out
sahf
sbb
mov
ljmp
fistpll
in
inc
ret
mov
iret
adc
pop
cs
xchg
arpl
cltd
inc
roll
push
andl
jae
or
inc
loop
inc
adc
sub
fs
fisttpll
push
xchg
out
hlt
ds
sbb
mov
popl
fwait
mov
sub
adc
push
pop
stc
pop
push
cwtl
adc
push
jge
push
in
cmp
dec
lret
test
es
xorl
push
add
call
dec
or
or
pop
mov
inc
ficomps
lock
pop
mov
rclb
mov
pop
and
outsb
jmp
bound
sub
movsl
repz
mov
int3
jno
call
test
sbb
xor
push
movsb
dec
push
loop
mov
mov
sub
repz
in
jbe
out
das
push
repz
sbb
push
inc
and
xor
sub
lcall
std
xchg
jl
mov
repz
insl
cmpsl
adc
testb
xchg
push
nop
push
inc
mov
mov
test
adc
rcll
push
and
cwtl
add
repnz
fistl
out
and
pop
sarb
into
div
inc
pop
push
addr16
ficompl
std
cmp
out
mov
pop
sub
add
divl
adc
outsb
js
stc
adc
xchg
cmpl
nop
movsb
inc
enter
cmpsl
mov
daa
pop
and
and
mov
dec
xor
sbb
jmp
fstl
push
or
add
add
push
cmpb
pop
shl
mov
inc
icebp
loope
test
les
fisttpll
outsl
push
rol
push
lret
push
enter
lcall
or
cs
cmp
mov
out
call
stos
add
les
adcb
dec
sub
flds
mov
fnstenv
ficoml
mov
sbb
lods
rorb
mov
or
inc
pop
mov
shll
pop
mov
ss
or
fucom
sbb
pop
xchg
mov
jb
jns
dec
hlt
scas
cmp
pop
mov
add
dec
daa
int3
and
jnp
xchg
cmp
int
dec
mov
xchg
arpl
jns
mov
xchg
out
addr16
ficoms
sahf
push
push
push
sub
jnp
mov
or
fwait
mov
clc
sbb
mov
mov
daa
and
sbb
dec
daa
and
lock
adc
mov
pop
lods
adc
scas
aaa
push
cmp
out
cmpsl
inc
std
cmp
movsl
mov
shlb
push
repz
jno
sbb
je
popa
pop
push
add
xchg
jge
nop
mov
mov
lahf
scas
and
and
add
add
sub
mov
aaa
fcoms
xor
xor
mov
lock
mov
pop
jmp
mov
andb
jmp
and
ret
ds
decb
push
mov
pushf
cld
add
bound
in
jns
rol
js
std
adc
aas
ds
lahf
add
jge
js
jbe
jno
pushl
inc
push
push
jo
loope
pop
shrb
mov
in
in
mov
cld
jecxz
push
loope
test
mov
aad
cs
sbb
push
push
lods
loop
inc
mov
lods
icebp
in
push
lds
inc
jb
adc
xorb
ljmp
push
mov
adc
pop
scas
out
adc
fmull
test
push
loopne
lea
or
or
scas
shl
shlb
push
mov
stc
adc
jne
xor
stos
sbb
sti
lds
ja
sub
into
dec
jg
jge
adc
mov
push
ret
test
mov
dec
das
adc
adc
dec
add
popa
lcall
int3
cmp
into
or
push
out
std
cmp
inc
sbbb
cmp
lea
popf
add
mov
mov
mov
mov
or
nop
enter
dec
pop
stc
jb
inc
repz
std
sub
xchg
hlt
call
pop
pop
sub
adcl
jl
adc
mov
std
inc
adc
data16
sbb
push
lcall
call
stos
and
mov
mov
leave
mov
mov
dec
das
sbb
pop
mov
cmp
popf
mov
jp
sbb
push
in
sub
push
sbb
out
out
lret
test
pushl
jnp
test
lock
add
xor
sbb
fisubrs
adcb
mov
sub
fbld
arpl
mov
ljmp
rcr
sarl
push
pop
xor
jmp
popa
leave
pop
mov
adc
adc
in
pushf
xchg
xchg
roll
dec
inc
or
cwtl
adc
sub
push
mov
ret
ja
dec
bnd
pop
popl
push
leave
inc
out
sti
frstor
jbe
fs
lret
lea
dec
pop
subl
mov
inc
ds
test
orb
fcmove
ja
sub
in
in
jne
test
pusha
push
push
adc
out
sub
insl
dec
sti
fs
sar
jmp
mov
nop
pop
shr
imul
outsb
sub
ret
int
sub
into
push
movb
pop
das
mov
inc
mov
xor
je
test
int3
add
jmp
addl
aad
jmp
mov
adc
or
sti
cld
add
dec
sub
lock
mov
rorb
sub
data16
dec
hlt
lret
pop
test
int3
fwait
aaa
mull
dec
sbb
mov
inc
insl
negb
fsts
icebp
test
bswap
outsb
pop
mov
pop
mov
shl
sti
adc
dec
mov
incb
mov
int
sbbb
mov
and
orl
lcall
pop
inc
or
mov
or
dec
dec
cmp
lods
lods
dec
xchg
jns
xchg
fists
je
mov
mov
and
aam
lret
xor
adc
add
jne
pushf
mov
sub
mov
xlat
push
mov
sbb
dec
add
clc
nop
pusha
sbb
call
pushf
jbe
push
jb
mov
mov
push
xchg
xchg
push
xchg
sahf
mov
iret
adc
add
daa
adc
rcrb
jnp
dec
lret
xchg
iret
mov
inc
pusha
cwtl
cs
sub
cmp
inc
in
jp
mulps
pop
jae
push
jp
mov
sub
pop
cmpsl
test
data16
push
jg
cmpsb
aam
dec
movsb
into
insl
in
jecxz
lds
js
xchg
les
cmpsb
js
mov
mov
out
sahf
mov
enter
cmovp
call
dec
push
lock
inc
rcll
pop
dec
incl
jne
add
xchg
push
lret
cwtl
pop
imul
sarl
mov
inc
addl
xlat
das
dec
and
js
aas
mov
fdivrs
int
orl
pop
fwait
push
iret
pop
and
sub
cmp
fists
sub
scas
jo
hlt
or
addr16
out
dec
sub
cwtl
iret
ret
imull
fstl
daa
rolb
pop
cmpb
aad
or
pop
stc
fisubl
pop
and
cwtl
imul
or
adc
pusha
cmp
bnd
dec
mov
pop
aaa
icebp
mov
xor
arpl
insl
loope
inc
fidivrl
mov
les
and
lds
out
rorb
aam
xchg
fs
xchg
rcll
cmpsb
mov
popf
gs
sbb
cmp
iret
iret
outsl
jmp
mov
rcl
push
add
das
jb
jg
in
mov
dec
imul
inc
mov
pop
push
mul
sub
testb
push
insb
nop
lds
loopne
in
in
popa
jecxz
cmpsb
shll
mov
push
jmp
sahf
mov
out
gs
mov
ret
adc
xchg
nop
xor
ja
jb
adc
lock
lock
testb
test
ljmp
sbb
loop
clc
jl
inc
aaa
xor
outsb
repnz
xchg
and
push
jo
sub
lods
mov
pop
stc
sarb
sbb
xor
lahf
push
jbe
jnp
lea
mov
fstl
daa
xchg
or
inc
imul
aad
into
stos
and
adc
mov
dec
add
sti
xchg
pop
dec
inc
mov
xchg
jle
xchg
mov
mov
js
sbb
jae
pop
nop
pop
mov
jo
cmpsl
xchg
cld
in
mov
js
jl
rol
fs
imul
pop
stc
repnz
sbb
mov
out
cmpb
cmpsl
inc
push
fidivrs
aas
push
push
xor
daa
mov
pop
shlb
fistps
jae
in
inc
push
push
aad
pop
jns
dec
jne
add
enter
lahf
and
xchg
sbb
or
fs
fdiv
push
in
push
or
pop
in
mull
xorb
ljmp
or
xchg
inc
lea
push
mov
and
pop
adc
inc
dec
fld
mov
xchg
mov
ret
push
pop
xor
or
loope
xchg
cmpsb
mov
lods
loopne
ret
sub
cmp
or
sbb
xchg
push
clc
fldenv
cmp
push
cwtl
and
je
mov
or
jnp
dec
jp
sbb
xchg
adc
aaa
inc
movsb
sbb
test
in
or
jge
pop
roll
mov
or
loopne
pop
push
mov
cmpsl
push
jno
add
mul
aam
repnz
xlat
negb
test
test
dec
test
inc
fildll
xor
sub
aad
test
enter
mov
fcmovnu
adc
cmp
nop
out
cmp
hlt
iret
bound
adc
push
test
and
adc
cli
xchg
mov
cmpsb
dec
arpl
loopne
mov
pop
inc
mov
int3
adc
mov
push
add
jo
and
popf
rorl
cwtl
inc
arpl
pop
mov
jg
inc
popf
lods
dec
mov
or
mov
scas
loopne
or
mov
mov
add
mulb
sub
cmp
mov
dec
dec
inc
call
insb
lock
cwtl
xor
hlt
fildll
dec
lret
mull
mov
jg
push
out
nop
loope
movsl
out
lret
xchg
push
stos
insb
data16
das
push
es
mov
mov
xor
xor
leave
xchg
and
aad
jecxz
and
nop
xor
jbe
repz
mov
shl
xor
sti
mov
cmp
aaa
nop
out
lock
dec
sub
ljmp
adc
and
inc
in
dec
shl
pop
scas
xchg
dec
jae
lea
inc
push
push
in
pop
ja
pop
hlt
adc
test
sub
pop
push
fcompl
fidivrl
std
or
lret
sbb
call
mov
xor
outsl
mov
inc
cltd
jecxz
mov
adc
lcall
mov
jg
in
addr16
hlt
inc
pop
outsb
or
mov
cmc
scas
jae
pusha
xor
adc
jmp
mov
push
jmp
loop
adc
stos
and
jns
mov
inc
das
loopne
out
push
pop
ret
mov
nop
inc
loop
icebp
sub
arpl
or
mov
jmp
fsub
negl
add
push
and
mov
add
push
or
jmp
popf
pop
mov
mov
outsb
sti
inc
int3
cmpsl
jae
test
scas
in
fnstenv
movsb
sub
jae
fldl
inc
test
xchg
xor
dec
mov
xchg
adc
mov
mov
adc
xor
out
subb
dec
dec
sub
dec
loope
cmpsb
dec
iret
adc
push
inc
inc
push
enter
pop
adc
inc
lods
rcrl
aam
fsubrl
out
ror
ret
orl
stc
hlt
sbb
fucom
cmp
jmp
pop
mov
inc
orb
xor
lcall
adc
sub
data16
adc
in
rcrl
and
mov
jno
cmp
in
lods
jecxz
daa
test
test
mov
into
dec
dec
push
shrl
mov
or
mov
and
mov
inc
mov
dec
dec
sbb
adc
enter
lods
lods
bound
inc
pop
loopne
xchg
cmp
jp
pop
dec
lret
sbb
daa
adc
lds
push
cli
jp
pushf
shlb
lret
outsl
or
daa
jns
pop
jnp
push
out
and
add
xchg
cmp
xorb
clc
cmp
dec
mov
adc
cmp
add
in
xor
jb
cmpsl
mov
fistpll
mov
pop
jmp
leave
out
fsubs
xor
subb
js
and
stc
push
or
call
test
leave
xchg
cli
xchg
popf
xchg
pop
lods
insl
mov
rcr
push
sbb
js
dec
aad
lcall
jae
mov
mov
jmp
add
xchg
mov
jle
push
loop
lea
imul
mov
xor
pop
mov
in
lret
xchg
pop
inc
out
dec
or
fs
lock
aaa
mov
cmp
push
ss
nop
icebp
push
fwait
sbbb
enter
jecxz
scas
cwtl
test
lds
or
cli
mov
lahf
movsl
in
xchg
pushf
adc
push
cmp
cmp
clc
xchg
inc
scas
sbb
jecxz
cmc
fstpt
test
dec
push
sub
call
mov
cmp
inc
dec
movsb
cmpsb
out
repnz
xlat
dec
or
mov
test
fldcw
shrl
cld
inc
lods
stc
pop
sub
lret
push
sbb
or
inc
in
mov
and
mov
call
popf
lds
int3
or
jge
jmp
xchg
cwtl
sub
jns
dec
out
icebp
test
xchg
ret
std
int3
cmp
cmc
pusha
jno
mov
sahf
je
aad
dec
test
cmp
jge
cmovb
in
mov
cmp
aaa
orb
testb
inc
push
jl
pusha
pop
inc
enter
inc
and
or
inc
push
push
frstor
jge
or
jle
jge
cmpb
jp
pop
aaa
and
mov
jmp
leave
and
ljmp
std
ljmp
test
add
sbb
sahf
jmp
or
shll
inc
push
lods
out
ds
je
and
mov
mov
call
xor
pop
push
xchg
mov
adc
xor
sahf
cwtl
inc
jl
aad
push
xchg
pop
mov
data16
loopne
leave
xor
mov
roll
mov
cmp
cmp
mov
or
xlat
ss
cwtl
or
inc
sub
sbb
fisubrs
pop
xchg
lds
dec
jb
lahf
outsl
aam
dec
outsl
mov
out
or
sarb
fucompp
mov
cwtl
or
mov
movsl
add
sub
imul
inc
push
sub
sbb
push
jns
xchg
or
outsb
adc
sbb
mov
push
dec
push
cmp
mov
add
push
sbb
dec
dec
xor
push
mov
pop
jmp
inc
dec
lock
pop
imul
mov
pop
or
sbb
cld
pop
xlat
sub
adc
jb
stos
sbb
stc
je
and
out
push
xchg
and
sub
arpl
sub
loope
test
mov
pop
ss
stos
sbb
aam
js
and
sbb
std
jp
push
mov
sahf
lret
mov
jns
int
int
ljmp
sub
mov
test
xchg
jge,pt
pop
mov
sub
mov
stos
adc
sbb
adc
test
in
test
cmpsl
int
push
ja
jne
insl
add
xor
hlt
add
stc
push
stos
dec
into
ss
jge
sti
jg
adc
test
stos
roll
push
or
xchg
push
mov
fwait
rclb
in
add
arpl
mov
push
in
outsb
out
sahf
mov
test
clc
in
in
pusha
jge
aaa
repnz
dec
fwait
mov
mov
mov
dec
fsubs
mov
jae
dec
je
inc
sub
add
jno
jns
sub
pop
mov
cltd
test
iret
xor
ret
cltd
jno
jns
and
es
add
and
les
stos
pop
lret
mov
stc
outsl
pop
bound
imul
in
sub
sbb
sbb
add
lock
cmpsb
inc
dec
test
push
cli
loopne
in
enter
mov
test
sbb
pushf
cld
xor
pushl
fwait
and
mov
sub
sub
jge
rcrb
mov
std
or
cmp
mov
and
jno
js
ds
leave
sbb
pushf
popa
int3
pop
fiaddl
xchg
sub
scas
jg
imul
xor
jb
dec
jge
dec
sbbl
jl
jl
out
jmp
and
push
push
push
xchg
mov
and
loop
and
sub
std
cmc
or
int3
xor
mov
xchg
arpl
addl
xor
pusha
aad
xchg
icebp
js
ficomps
or
xor
jle
insb
outsl
incb
adc
lea
push
mov
sub
stos
mov
push
xor
inc
dec
mov
pop
cmp
movsl
push
scas
xor
push
and
aam
or
and
cmp
rclb
mov
jg
sub
jp
xor
mov
jnp
pop
out
orl
and
loope
inc
inc
add
dec
lcall
pop
dec
cwtl
mov
and
pusha
enter
scas
sub
mov
xor
pushf
gs
shlb
aaa
inc
jge
add
hlt
pop
fisttpl
sub
dec
pushf
xor
xor
push
mov
mov
fwait
push
das
push
pop
fsubrp
and
and
leave
sbb
fwait
cmp
loop
pop
imul
repz
cmpsl
lods
test
xchg
mov
mov
ss
add
jb
dec
inc
add
xor
mov
push
imul
repnz
scas
stos
dec
cmp
bswap
lcall
in
fimuls
mov
xchg
push
std
mov
addr16
push
in
data16
insb
sub
and
xor
and
out
pop
or
mov
pop
mov
in
subl
jb
dec
stos
sub
xchg
clc
mov
or
mov
sub
popf
shlb
push
repz
push
push
or
movsb
xchg
adc
pop
in
loopne
jle
and
inc
push
ljmp
stos
das
rcll
imul
ljmp
fs
iret
cmp
aam
js
movsb
cld
test
jmp
sub
test
lcall
outsb
ljmp
mov
aas
sub
das
movsb
or
dec
mov
cs
outsl
fstps
enter
fisttpl
and
add
mov
pop
xor
or
and
or
and
adc
xchg
repnz
ret
clc
push
jb
jne
les
xchg
mov
xor
mov
jge
pop
repz
sbb
sub
cld
dec
xchg
xchg
ret
mov
jg
mov
fbld
test
arpl
jns
mov
ret
sbb
adc
pushf
push
imul
fs
ss
xor
arpl
jnp
cmpsb
sarb
outsb
pop
aam
sbb
sbb
je
sbb
aas
xor
in
add
lret
sbb
push
or
dec
jbe
mov
adc
xor
lods
sub
shrl
subl
test
popf
jp
add
xchg
or
fs
pop
clc
adc
inc
pop
repz
lods
insl
fidivrl
mov
popf
or
dec
std
add
sub
xor
xchg
mov
and
fisttpl
arpl
stos
outsb
rorb
xchg
mov
xchg
push
lea
xor
xor
mov
aas
imul
test
push
lahf
out
jecxz
insb
out
fildll
incb
adc
jg
xchg
mov
icebp
push
xchg
mov
and
mov
push
add
adc
fldt
sub
mov
movsl
mov
inc
inc
inc
scas
sbb
push
lcall
jmp
scas
cmp
cmp
add
pop
xor
pop
mov
hlt
push
loopne
fdivrs
mov
test
cmp
adc
ljmp
pop
xchg
clc
lods
imul
sub
mov
shlb
testb
repnz
mov
test
gs
push
enter
rorb
mov
imul
stc
and
mov
mov
push
movsb
mov
mov
mov
inc
lea
nop
leave
ret
jp
pop
mov
inc
jmp
fwait
cmp
push
into
add
and
js
stc
test
sbbl
xchg
dec
adc
pop
and
mov
mov
sbb
movsl
aam
inc
into
and
jecxz
aas
pop
and
and
out
rcl
xor
xchg
sarb
xor
jb
push
cmp
mov
and
mov
js
push
dec
dec
pop
mov
cmpsb
call
out
imul
cs
or
or
sub
cmp
cltd
jp
pushl
test
ret
push
into
add
dec
int3
hlt
imul
inc
sbb
insb
cmpsb
in
lds
test
popa
pop
jecxz
xchg
xchg
imul
push
loope
test
je
loop
rcll
add
iret
pop
fbld
push
lahf
lret
sbb
inc
jl
push
dec
les
dec
addb
dec
dec
mov
adc
hlt
mov
and
xor
sbb
cmp
pop
loope
jg
inc
fnstsw
push
je
cli
adc
stos
jns
cmp
mov
hlt
xchg
jb
pop
fsubs
pushf
std
fimuls
xchg
sub
dec
and
or
cs
flds
inc
aas
xorb
pop
lret
xor
mov
adc
frstor
push
jp
mull
sub
or
mov
jmp
inc
sti
ret
or
fists
mov
fsts
mov
in
adc
outsl
lods
or
adc
cld
cmc
iret
jmp
push
in
test
mov
jae
or
sub
dec
dec
or
mov
lcall
or
add
cmc
les
push
mov
int3
cmp
and
adc
cmp
xchg
mov
or
hlt
sbb
or
push
sub
push
push
cwtl
out
pop
jnp
jnp
or
mov
jo
mov
dec
pusha
dec
leave
adc
sahf
sbb
mov
cmp
mov
adc
mov
push
or
inc
mov
mov
xchg
add
and
jg
fs
jnp
xchg
lcall
mov
sub
test
fisttpl
sub
in
pop
add
ret
sahf
xlat
adc
jo
dec
shrb
and
adcl
arpl
jnp
hlt
jg
nop
lock
pop
or
jbe
inc
and
in
js
movsl
sub
and
mov
les
pop
aad
sbb
es
vpcmpeqd
mov
in
imul
jecxz
maxps
push
cmp
mov
jg
mov
ficomps
sbb
push
adc
in
ljmp
push
repz
rorb
lret
sbb
mov
loop
mov
or
mov
in
scas
inc
aad
gs
and
clc
or
aaa
lret
jge
ret
mov
or
imul
cmp
mov
leave
lahf
sub
pop
push
pop
scas
adc
xor
push
xchg
mov
dec
insl
aam
xchg
mov
inc
out
xor
push
adc
mov
push
popa
push
cmp
mov
inc
cltd
cmp
shlb
pop
dec
add
or
outsb
jae
stos
dec
scas
emms
int
sbb
cmp
fcoms
xchg
rcll
push
stc
enter
shlb
adc
inc
mov
xchg
sbb
xchg
test
repnz
xor
int
scas
cmpsl
cmp
adc
xchg
mov
push
jae
loopne
xchg
add
stos
iret
incl
test
test
push
std
xor
cmp
xchg
dec
adc
stos
iret
add
test
or
sub
mov
sub
inc
xchg
das
mov
int3
sbb
push
das
arpl
movsl
fs
in
scas
test
inc
pand
fiadds
lea
jle
jge
xor
popf
enter
ret
push
add
lea
jg
jae
insl
ret
dec
add
fcoms
jg
xor
inc
push
imul
ja
loop
mov
cmpsb
inc
mov
imull
leave
decl
sub
aam
bound
stos
cmpsb
add
insb
in
and
add
dec
push
call
push
ja
jno
js
mov
ds
call
fwait
pop
mov
ljmp
push
sub
lock
mov
insb
outsb
lds
mov
in
out
mov
outsb
pop
sub
cli
jae
cmp
movsb
lret
cmp
sbb
inc
xor
mov
cs
push
leave
pop
cwtl
hlt
adc
in
mov
dec
xchg
jb
and
push
sbb
lahf
dec
adc
adc
jne
jg
mov
out
mov
cmp
and
sub
xor
adc
lods
pushf
mov
and
cmc
xchg
es
fsts
pop
repz
and
sbbl
and
js
popa
cmp
jns
pop
and
sub
fcoml
lret
adc
test
or
fiadds
jg
mov
mov
xchg
in
fsubrl
testl
rolb
movsb
das
cwtl
sub
andb
pushf
sarl
popf
repz
and
xor
mov
insl
mov
into
xchg
adc
frstor
rcr
nop
add
mov
xchg
xchg
mov
int3
mov
in
jnp
xchg
jno
adc
ja
psrld
cltd
stos
cld
pop
cwtl
cwtl
adc
movb
mov
daa
or
repz
mov
xor
int
jmp
inc
pop
sarb
xor
xlat
imul
gs
add
in
inc
mov
jle
loopne
shrl
push
movsb
xchg
jo,pt
repz
in
xchg
addr16
lahf
push
stos
pop
jecxz
mov
lods
sub
dec
dec
add
pop
mov
xor
outsl
es
inc
int
sti
in
loopne
xchg
and
jl
test
arpl
aad
or
mov
repz
loopne
mov
test
stos
sub
mov
rorb
pushl
dec
ja
cmp
inc
or
cli
xchg
rcl
pop
lahf
mov
dec
jb
fwait
inc
cs
or
and
add
rorl
inc
cmpsb
and
nop
cmp
pushf
decb
notl
in
xchg
push
sti
dec
in
push
push
xor
stos
and
or
push
xorb
pop
or
into
adc
sbb
out
lahf
mov
jno
xor
int3
insb
adc
dec
or
in
cmpsl
outsl
in
popa
inc
sbb
lds
sub
aam
shlb
mov
jnp
jnp
lea
mov
add
sub
xchg
xchg
sub
mov
sbb
lock
pop
movsb
mov
ret
cmp
sub
js
das
pop
mov
jne
mov
aas
fwait
icebp
sbb
mov
push
rcr
xchg
push
stos
hlt
sub
in
js
pop
jecxz
cmpsb
xor
fnstenv
enter
insb
pop
adc
sub
cmp
xchg
lahf
mov
jl
addr16
fcom
xchg
xchg
and
stos
push
movsb
and
int
mov
xchg
mov
dec
mov
sti
sub
sub
push
cmp
xorl
repz
dec
jmp
push
fsubrs
seto
out
dec
sub
pop
test
sbb
pop
cltd
sbb
xchg
push
jae
scas
or
inc
cmp
cld
mov
mov
sub
jno
out
sub
add
push
lcall
lea
in
int
lret
inc
cmc
insl
test
faddl
mov
adc
pop
int3
pop
push
xor
sbb
in
fs
add
nop
and
or
frstor
rorl
or
sub
bound
and
add
pop
test
testb
jp
mov
out
cmp
cmp
popf
in
push
pop
mov
into
pop
mov
or
mov
test
dec
aas
cmp
lea
xchg
mov
mov
mov
insb
sbb
out
cmpsb
jmp
or
pushf
js
pop
cmp
push
popf
sbb
jae
push
push
jp
movb
dec
dec
push
mov
mov
xchg
xor
cmp
call
adc
movsl
jge
fcmovbe
fsub
jl
cmp
pop
adcl
popf
sbb
je
fistps
sub
adc
call
pop
in
sbb
gs
inc
push
adc
lea
add
sti
fs
mov
fstps
in
std
jbe
xor
dec
addr16
dec
test
jge
popa
dec
mov
fidivl
pop
ret
sub
dec
sub
mov
mov
insl
mov
adc
jecxz
pushf
cmp
cmovae
lret
sbb
sbb
push
xchg
inc
adc
cltd
pop
xlat
mov
mov
into
mov
push
cmp
subl
mov
jecxz
push
pop
mov
cli
xchg
push
jecxz
add
hlt
stc
sbb
in
test
sub
repz
and
lds
imul
je
or
shlb
fs
xchg
sti
jg
pusha
or
xchg
cmp
call
inc
xchg
cmp
lds
mov
sahf
dec
push
or
cmp
aam
xchg
hlt
or
inc
xor
push
mov
movsb
mov
popa
mov
mov
stos
dec
jns
cmp
dec
rclb
inc
std
push
out
rorl
rclb
sbb
or
fwait
lea
aam
xor
fmul
leave
adc
add
mov
add
mov
push
dec
mov
and
gs
jp
jns
push
in
push
insb
outsb
sar
pop
out
cltd
cmp
mov
sbb
pusha
dec
repnz
mov
mov
xorb
xor
xlat
push
mov
sbb
mov
mov
rcll
cwtl
cmp
fimuls
pusha
add
jg
xlat
cmpsb
jecxz
mov
jno
sbb
cli
cmp
pop
mov
xchg
ds
or
xor
imul
jle
jb
sub
jg
push
mov
pusha
jge
mov
int3
or
hlt
movsb
mov
icebp
push
mov
subl
loope
int
es
push
and
xor
adc
adc
orb
mov
mov
xchg
dec
adc
scas
jae
dec
add
out
fistpl
pop
or
inc
in
lds
std
sahf
fdivr
js
add
sub
pushf
jge
ss
pusha
sbb
pop
insl
push
fcomps
cmp
mov
add
out
clc
inc
mov
dec
jo
jns
mov
mov
fs
jb
sub
or
addr16
out
sti
adc
out
movsl
pop
imul
inc
movsb
xchg
sbb
pushf
ja
xlat
aaa
inc
movsb
lock
mov
xor
mov
es
sbb
push
inc
into
mov
incb
stos
icebp
call
fs
das
rclb
push
cmp
jecxz
mov
ss
inc
fdivl
fidivrl
loope
enter
xchg
add
loopne
pop
adc
leave
fcomps
xchg
rol
popa
push
push
sbb
stc
xchg
cmp
lods
stos
or
dec
mov
xchg
ficompl
lret
addl
and
imul
sbb
push
cmp
xchg
repnz
adc
aas
pop
fcoml
int3
and
shlb
fcomip
xchg
pop
jno
adcl
sub
js
jle
pop
sbb
pop
or
push
mov
inc
test
loopne
mov
xchg
std
add
push
rorl
ret
xchg
mov
sahf
mov
bound
in
fmull
xor
dec
scas
aas
sbb
icebp
mov
sub
outsl
adc
mov
iret
mov
and
and
mov
or
mov
outsb
enter
add
and
pop
aaa
cmp
ret
cmp
pop
xor
mov
xor
roll
jne
mov
pop
aaa
push
xchg
xchg
xor
leave
pop
mov
jbe
xor
mov
inc
mov
lret
jae
sub
js
or
lahf
movsb
icebp
and
repz
insl
mul
cmp
das
jns
jmp
ficomps
xor
imul
push
cmc
cmp
sub
jbe
xchg
popa
push
aas
aas
das
cs
pop
jge
or
rcrb
cmp
out
sti
jne
xchg
call
cld
inc
and
adc
mov
jg
mov
mov
loope
inc
adc
es
dec
pop
jns
jne
xor
sub
mov
xchg
fs
xchg
and
xchg
xchg
pop
fsubs
xchg
push
test
ljmp
xchg
inc
or
ljmp
std
fsubr
notl
mov
ret
dec
mov
xchg
jae
ljmp
ds
lock
inc
rclb
pop
xchg
or
inc
sahf
cli
mulb
popl
pop
int
jbe
daa
idivl
repz
jae
pop
or
aam
adc
push
decb
adc
add
imul
test
push
mov
jb
out
ja
cmp
test
fmuls
push
jnp
lods
sbb
mov
push
stc
ret
dec
outsb
pop
mov
adc
or
movsl
lahf
js
clc
push
cmpsb
in
or
or
mov
in
xchg
adc
lret
xchg
adc
enter
jno
and
lret
lea
push
clc
dec
aam
in
out
ret
out
jne
xchg
and
out
mov
mov
ljmp
cmpsl
jg
push
add
aam
in
pop
sbb
loop
daa
mov
lock
cmp
dec
sbb
jo
cmp
in
adc
xor
lea
lods
inc
cmp
push
shlb
inc
mov
pusha
or
cmp
mov
lods
sub
inc
jecxz
imul
jno
test
adcb
and
xchg
add
lcall
xor
bound
pop
test
ret
lock
dec
cs
jbe
loop
out
lret
mov
mov
sub
jo
inc
fbld
pushf
in
mov
fstps
jo
push
test
jbe
pop
ret
jg
fcmovnbe
out
lods
jns
rcr
into
jno
jno
cs
or
cmp
dec
sub
int3
lock
add
add
stc
xor
mov
inc
jae
jge
fpatan
aad
lahf
ltr
mov
pop
fidivrs
mov
xor
cld
add
xchg
push
fcomps
jecxz
je
xlat
or
pop
sbb
push
pushw
hlt
sub
call
mov
out
scas
pusha
lods
xchg
sbb
or
mov
xor
pop
fdivl
fstpt
and
lock
aad
out
xor
or
xchg
call
imul
push
inc
mov
xchg
sahf
jae
mov
fidivs
xchg
out
sti
cmp
inc
mov
inc
lds
inc
push
pop
pop
mov
push
in
jo
inc
es
loop
ds
daa
lret
adc
sub
sti
into
rol
pop
xchg
mov
sbb
cmp
cmp
dec
js
mov
ret
dec
sbb
mov
inc
std
and
jg
subl
jmp
sub
rclb
adc
sub
xchg
ret
dec
xchg
dec
push
sbb
push
mov
fistpl
icebp
pop
cltd
lods
cmp
jecxz
fiaddl
aad
cmc
jp
mov
lret
and
imull
imul
or
sbb
addl
imul
and
adc
fidivl
xchg
sbb
in
jns
out
ret
pop
loope
and
push
pop
aaa
mov
mov
lods
xchg
add
repz
aad
or
add
lahf
pop
sbb
cmc
sub
sub
jnp
loope
fldenv
aam
cld
xor
cmp
sub
ss
lret
jp
sbb
cltd
jns
divl
pop
aad
imull
push
jno
aad
stc
dec
dec
cmp
int3
scas
mov
rorb
add
jge
mov
outsb
ret
imul
mul
or
pop
sub
frstor
xor
movmskps
dec
push
inc
fadd
cli
add
sbb
lcall
loope
lcall
cli
or
sbb
cmp
inc
jne
notl
insl
inc
imul
shrd
push
orl
mov
mov
sbb
sbbb
jp
stc
mov
mov
jecxz
in
das
cmp
dec
mov
mov
jne
jo
lods
shrd
mov
lahf
push
add
lods
cmp
repz
arpl
mov
fisttpl
popa
cld
fldt
repz
pop
push
mov
test
xchg
jae
outsl
lock
pop
imul
int3
push
push
dec
mov
mov
scas
fnsave
aam
mov
add
test
push
push
pop
jg
mov
push
xchg
divb
push
jg
ljmp
int3
fs
lahf
jbe
lds
loopne
mov
dec
sbb
dec
mov
push
mov
or
xchg
in
add
add
pushf
movsl
add
jl
imul
sub
mov
ljmp
mov
dec
leave
mov
repnz
xchg
cmp
push
jp
test
and
aam
xchg
mov
leave
mov
popf
sub
mov
inc
push
mov
jne
xchg
mov
pop
ljmp
pop
dec
lods
bound
loop
adc
cmp
ljmp
aaa
inc
jae
mov
idivl
cwtl
test
int3
or
adc
stos
popa
outsl
push
lahf
popa
cmp
inc
xchg
add
xchg
enter
nop
jge
scas
movsb
out
sbb
insl
mov
pop
stos
mov
pop
jl
adc
mov
daa
push
xchg
cltd
loopne
mov
jl
jno
cmp
lahf
sbb
xor
jo
cmpsl
add
jnp
xor
add
pop
in
bound
adc
sahf
sbb
pop
bound
cmp
test
ljmp
loop
aam
out
lds
nop
sbb
jl
shll
dec
cmp
mov
lea
js
lcall
out
lds
push
jo
sub
sub
gs
ja
sahf
in
lahf
jae
sbb
xor
je
les
jo
aam
imul
test
inc
popa
cld
repz
stc
clc
lods
lods
imul
xchg
mov
imul
test
dec
outsl
sbb
push
inc
pop
mov
into
push
mov
xchg
es
je
pop
jle
das
popf
mov
sub
pop
int3
xchg
daa
sub
clc
cmpsl
add
adc
lcall
pop
ljmp
sbb
pop
je
cli
mov
dec
popf
rclb
pop
lea
stos
xor
cmp
movb
push
sti
es
aam
loopne
clc
movsl
and
ficompl
lcall
and
sbb
or
add
mov
fs
add
outsl
jle
xchg
aaa
js
or
cwtl
sahf
out
adc
mov
dec
stos
pop
push
dec
rorb
adc
icebp
call
fistpll
dec
pop
call
cmp
xchg
outsb
add
sti
imul
std
call
mov
xchg
mov
lea
lds
jne
xlat
insl
aad
inc
or
push
ja
cmpsl
pop
repnz
int
jmp
lret
orb
xchg
mov
aas
hlt
cmp
xchg
sub
shrb
out
jle
dec
and
ja
mov
cmp
addr16
and
movsl
or
and
fnstcw
ret
adc
adc
pusha
fisubrs
jns
mov
xor
ja
jl
nop
stc
add
popa
mov
pop
adc
push
test
mov
mov
int
sbb
in
decb
stc
fcom
stos
sbb
sbb
leave
das
addr16
lahf
lods
movsl
loopne
fstpt
loope
xor
pusha
popa
sahf
mov
push
pop
mov
cmp
scas
mov
inc
mov
push
pop
in
jno
lods
add
test
dec
aas
shrl
shl
jo
inc
xchg
ficompl
mov
adc
add
jle
or
dec
cmp
in
sbb
or
push
inc
out
xor
push
out
ret
stos
xchg
mov
cli
lock
inc
nop
orl
pop
fmull
xchg
or
push
sub
rol
lds
test
adc
addr16
arpl
cmp
aam
inc
mov
out
jmp
loopne
jbe
mov
sub
stos
push
inc
pop
cmp
inc
xchg
pop
popf
in
shlb
jg
ljmp
loope
or
lods
mov
mov
xchg
mov
lret
mov
jbe
cmpsl
rcr
mov
add
xlat
jne
add
lcall
test
dec
sub
mov
into
mov
jecxz
or
enter
test
mov
sub
ficomps
aas
ljmp
mov
xorb
sub
int
cmp
xchg
or
jbe
enter
idivb
xchg
mov
sbb
repnz
jae
adc
ljmp
jo
incl
rcr
cmpsb
add
mov
sbb
add
push
jb
xchg
test
inc
inc
repnz
icebp
rorb
jp
andl
movsl
xchg
mov
sahf
cwtl
or
ret
sbb
pop
mov
inc
mov
rcrb
push
gs
mov
xchg
fcomip
jmp
sub
mov
jecxz
push
xor
or
lods
shlb
cld
xchg
sub
imul
jnp
sub
icebp
out
int
lods
loopne
jle
shlb
lahf
jecxz
cmp
in
sbb
loopne
sbb
test
xor
push
cltd
fisttps
add
and
jae
scas
push
nop
ljmp
mov
pop
dec
jb
loopne
add
mov
mov
lret
fs
dec
mov
lds
jmp
rolb
lods
lea
dec
sub
loope
addr16
xor
cmc
add
dec
jl
rcll
in
jbe
mov
imul
push
ss
jecxz
mov
sbb
xchg
mov
xor
mov
fidivl
inc
icebp
lcall
popf
jp
mov
sub
xchg
and
jno
sbb
pop
fsubs
insl
cmpb
inc
add
mov
les
fstpt
lcall
movsb
pop
cli
shlb
lret
sub
jl
rclb
int3
dec
push
cmp
add
and
in
clc
int3
cmp
test
lahf
inc
out
popf
es
mov
cltd
mov
and
cld
add
mov
shlb
rorb
and
int
jmp
jmp
mov
dec
movsl
sbb
mov
mov
fisubs
mov
repnz
jecxz
and
adc
mov
xor
cli
stc
inc
gs
mov
leave
cmc
sbb
pop
xor
les
shrl
dec
adc
sbb
aad
lea
dec
addb
cmp
push
ljmp
subb
push
push
pop
mov
lahf
cmp
pusha
adc
add
je
and
lahf
iret
in
mov
pop
hlt
sbb
out
add
ja
popf
fsubrl
fldl
repz
push
sbb
cmpsl
fs
movsb
lds
aas
cmp
jns
mov
sarl
fstps
cmp
jne
stos
das
mov
out
add
ret
mov
or
jle
jb
cmp
nopl
mov
pusha
in
addb
cmpsb
ja
push
xchg
or
and
mov
enter
sub
push
mov
aad
jmp
lret
popf
test
popf
mov
mov
fldcw
and
repnz
in
repz
lcall
cmp
mov
cld
imul
daa
es
stc
cmp
aaa
mov
dec
stos
scas
stos
mov
orl
add
inc
aam
shlb
or
inc
jl
pop
loop
sbb
ljmp
push
or
mov
test
pop
insl
mov
sub
fs
mov
mov
out
push
xchg
adc
or
or
inc
mov
loopne
cltd
loop
mov
pop
cmp
push
pop
xchg
iret
fdivrl
xchg
xor
inc
sbb
cmpb
data16
adc
fmuls
rcrl
push
pop
xchg
cltd
sbb
ffree
mov
mov
pop
pop
mov
popf
scas
incb
arpl
pop
sub
divl
mov
rclb
fstpl
out
add
imul
imul
sahf
mov
fs
push
outsl
xor
sub
enter
mov
pop
mov
clc
lds
aam
lahf
enter
cmp
aas
pop
cld
inc
push
int3
dec
fimuls
xor
mov
xor
dec
aam
movsl
dec
inc
loope
shrb
cltd
cmpsl
mov
xchg
push
fbstp
testl
xchg
xor
adc
lret
pop
dec
incb
pop
aas
push
add
push
popa
or
and
inc
loop
push
jmp
and
push
xchg
cltd
ds
xchg
adc
sbb
ficompl
cmpb
stos
iret
aas
xchg
das
js
addr16
out
jecxz
mov
mov
xchg
or
lret
iret
test
scas
mov
dec
arpl
pop
subl
and
ja
mov
inc
or
dec
ud0
jp
mov
mov
sub
fsts
jne
inc
pushf
stc
sahf
insl
fcmovbe
sub
test
iret
lods
enter
push
pop
enter
push
addb
test
sbb
rcrl
sti
mov
es
sahf
add
adc
add
aad
imul
call
adc
cltd
mov
mov
jne
inc
outsb
jne
mov
pop
xor
push
leave
cmp
enter
popf
xor
add
jbe
dec
fadds
cmp
cmp
fwait
sbb
or
in
inc
inc
jae
add
mov
xlat
adc
or
pop
icebp
jmp
jp
sbb
popf
mov
jns
cmpsb
xorb
xlat
aas
push
inc
ljmp
mov
mov
add
xchg
es
adc
repnz
add
xchg
popf
stos
xor
negb
jnp
pop
popf
ret
enter
mov
inc
nop
bound
fwait
sub
xchg
aad
inc
lds
jno
mov
push
jbe
mov
sub
hlt
bnd
daa
mov
mov
mov
push
dec
xchg
and
push
outsl
call
pop
jmp
inc
add
cld
or
push
jmp
xchg
cmp
loop
ret
push
pop
into
insl
lret
push
sbb
jns
add
leave
movsl
dec
movsl
cs
dec
cmpsb
or
ficoml
vminpd
pop
ja
in
das
push
ljmp
cwtl
pop
add
pop
push
adc
sbb
sbb
mov
les
and
fiaddl
cmp
hlt
addr16
push
dec
pop
inc
mov
lret
push
int
push
outsl
jge
clc
cmp
xchg
mov
inc
insb
pushf
aam
cld
repnz
in
jbe
jne
je
xor
rol
mov
jle
jp
jp
dec
stc
scas
movsb
out
sub
inc
test
push
adc
add
bound
out
sub
test
xor
insl
ret
add
and
mov
cld
int3
jmp
icebp
lds
repnz
adc
xchg
rcrl
jns
xchg
in
adc
mov
dec
cmp
jle
fnstsw
or
dec
and
or
sub
mov
jp
mov
xchg
and
mov
hlt
ja
dec
lret
call
mov
sbb
mov
insl
jg
sub
cmp
mov
mov
dec
push
or
int3
insl
sbb
and
pop
dec
int3
sahf
int3
dec
jno
add
aam
mov
dec
movsl
and
sbb
fs
dec
xchg
rcrb
sbbl
adc
leave
sbb
or
scas
xchg
add
cmp
es
lods
and
cmp
ja
test
mov
cmp
divb
mov
adc
mov
es
xchg
dec
popf
dec
data16
negl
xchg
cli
pop
arpl
aas
scas
and
mov
jbe
push
push
bound
push
test
pop
clc
daa
enter
adc
insb
or
mov
lock
mov
inc
cmpsb
test
int
sbb
pop
adc
mov
lcall
rorl
pop
or
xor
insb
cmp
out
rcrl
insl
fsubl
jl
ds
mov
cmp
outsl
mov
mov
dec
daa
xor
clc
dec
fbld
jl
popf
jae
adc
mov
int
lret
inc
outsl
lods
adc
push
gs
repz
shll
cwtl
imul
mov
jmp
nop
mov
mov
loopne
lods
mov
repz
jb
pop
dec
dec
stos
loop
cmp
arpl
aad
mov
out
adc
jo
mov
jb
jmp
jo
sbb
mov
lahf
mov
xchg
fwait
rcr
fwait
test
xchg
xchg
movsl
fnsave
ja
dec
lods
mov
dec
sarb
jo
std
iretw
and
jno
mov
fld
fidivrl
mov
xchg
jb
out
shlb
push
lock
fwait
in
lods
mov
mov
repnz
xchg
in
cld
mov
add
sahf
aas
mov
jbe
inc
add
hlt
sub
sub
sub
jo
push
popa
xchg
add
std
stos
lock
xchg
je
movsb
mov
movsb
jmp
add
out
push
or
loopne
push
sbb
jecxz
cmp
test
lods
ljmp
sub
cwtl
jns
xchg
push
in
xor
pop
jae
add
dec
dec
idiv
push
sub
fdivrl
pushf
adc
adc
jmp
nop
movsb
lahf
in
pop
decb
sarl
and
or
std
aas
ja
test
push
fistl
ret
or
adc
lret
lcall
loop
hlt
fmuls
cli
aad
lahf
push
shlb
ficoml
clc
in
push
out
scas
sbb
subl
add
mov
imul
in
sbb
rcll
mov
out
push
push
testb
adc
mov
jp
ret
mov
adc
inc
dec
loopne
movsl
fdivrl
push
fidivrl
fiadds
int
stc
pop
and
aam
cmp
lea
shrb
pop
jmp
ret
inc
jl
adc
test
dec
js
cli
push
jb
mov
in
adc
imul
insl
add
jmp
jge
or
cltd
mov
bound
outsb
aam
dec
fldt
adc
aaa
xchg
lock
or
adc
sub
lods
movsl
rcll
or
xor
pop
in
or
inc
jno
xorl
fcomps
push
sbb
fldln2
fs
cli
pop
stc
xor
pop
mov
dec
mov
repnz
xchg
pushl
in
iret
inc
sahf
int3
push
mov
cmp
push
loopne
pusha
push
or
mov
jbe
cwtl
test
aas
imul
js
jae
jnp
add
push
add
clc
ja
movsl
test
adc
inc
xchg
imul
daa
popf
imul
rolb
xchg
movsl
bound
push
or
ret
mov
dec
mov
xchg
out
mov
hlt
into
push
fildl
je
scas
lods
fadd
js
idivl
jmp
push
ljmp
lahf
lods
xor
pop
orb
xchg
mov
insl
das
sub
sbb
js
push
pop
test
mov
in
mov
pop
adc
jge
and
mov
cmp
xor
rcrl
push
push
aaa
adc
add
lods
inc
mov
jp
jmp
imul
xor
lods
pop
fstl
mov
pop
dec
push
jl
pushf
hlt
pop
adc
add
imulb
lret
add
inc
and
and
jp
or
dec
xor
icebp
push
mov
icebp
stos
aam
add
push
mov
sub
xlat
iret
out
clc
aaa
xchg
roll
in
or
sbb
add
lahf
dec
jg
and
adcb
push
xor
repz
xor
sarb
out
js
iret
rcl
gs
adc
lods
sarb
faddl
xchg
jo
out
imul
insl
movsl
lea
pop
xorb
lret
cld
push
ret
xchg
add
xchg
outsb
xor
icebp
mov
dec
test
lds
ja
sub
std
in
mov
ljmp
jg
jb
pop
enter
sbb
into
inc
es
cmp
test
xchg
dec
mov
cld
in
mov
daa
cmpsb
pop
hlt
xchg
mov
push
xor
lahf
daa
dec
fmul
out
cmp
lret
push
in
ret
ror
sub
xchg
ret
jmp
in
ret
popa
adc
push
movl
stc
outsb
sub
inc
cmpsl
clc
pop
cmpsb
fldenv
enter
and
dec
into
ja
outsl
sti
fistps
xor
and
punpcklbw
or
out
add
insb
out
in
out
es
mov
pop
or
ljmp
push
push
pop
push
pushl
mov
in
test
ret
or
mov
in
mov
das
sarb
dec
fidivs
jp
mov
mov
sti
and
popa
cwtl
rcrb
outsl
sarb
mov
pop
iret
mov
cmp
das
push
jmp
gs
dec
cmpsl
in
xor
or
ljmp
addr16
ja
lods
lret
out
fadds
lahf
or
cwtl
dec
dec
fwait
arpl
outsl
jbe
pop
sub
dec
push
jns
stos
clc
fwait
xor
add
jae
push
es
adc
lea
int3
sbb
icebp
clc
cmc
sbb
sbb
loope
leave
and
xorl
xchg
push
frstor
mov
roll
out
mov
cld
push
mov
repz
lret
jecxz
mov
cmp
scas
inc
cs
sub
cmp
scas
adc
nop
jnp
xor
cmp
pop
cmpsb
addb
adc
out
dec
repz
lcall
push
sbb
adc
test
movsb
mov
stc
add
js
aas
popa
repnz
push
pop
jg
dec
mov
repz
jbe
subl
xchg
jmp
push
and
test
lret
out
push
arpl
add
in
jne
movzwl
popa
popf
cmp
mov
cmp
imul
je
mov
jns
or
nop
test
cmp
add
fcoml
pop
test
xor
fidivl
frstpm(287
dec
jge
lea
xor
mov
lods
mov
add
mov
jne
xor
mov
leave
pop
shrb
clc
cmpsb
jmp
xorl
push
cli
vmread
xchg
aad
and
cltd
pop
pop
in
mov
icebp
mov
repnz
movsb
jg
cs
sbb
loopne
rcll
add
dec
jne
pop
adc
js
icebp
jp
mov
push
xor
xchg
push
push
mov
cmpsb
pop
rcl
and
loopne
mov
and
sbb
insl
ret
mov
sbb
das
fcomip
fldl
sub
in
cmp
jae
fdivrs
adc
push
mov
sbb
movl
nop
mov
iret
cld
aam
xchg
fistl
jle
xchg
fisttpll
mov
fs
jecxz
dec
jo
xor
scas
push
enter
pop
lret
cs
sbbb
pop
jbe
imul
imul
pop
push
lea
sub
les
scas
cld
sub
dec
inc
cmp
out
xor
or
and
add
into
jbe
cmp
out
and
sbb
les
sub
and
mov
popa
inc
lcall
sbb
loop
ret
cmp
sarb
shlb
jnp
repz
mov
subb
fdivp
addb
push
cmp
push
fwait
jb
fyl2xp1
mov
dec
repz
pop
nop
push
push
cltd
push
push
mov
adc
and
add
xlat
xchg
adc
pop
pop
mov
jae
jae
negb
fidivs
mov
scas
and
dec
imul
pushf
insl
loope
cmp
fwait
or
and
sbb
or
cmp
nop
or
xor
sbb
fistpl
pop
jb
push
add
and
pop
adc
clc
shr
test
or
clc
insl
cmp
ror
or
mov
pushf
push
cmp
adc
sahf
mov
or
lock
sbb
bound
mov
or
hlt
icebp
clc
mov
adc
icebp
push
cmc
insl
push
scas
mov
push
loopne
in
insl
xor
loop
fwait
push
mov
mov
inc
inc
in
imul
pusha
sahf
addr16
mov
in
pusha
sub
adc
xchg
sbb
movsl
aam
inc
lret
push
mov
sub
popf
mov
cltd
outsl
ljmp
fdivl
mov
stc
fwait
js
hlt
xor
and
addb
and
push
xor
add
in
cmp
mov
outsb
bound
sbb
test
pop
shlb
push
adc
adc
mov
sub
ds
adc
fmull
push
ret
push
sub
hlt
pop
out
js
out
fistl
int3
testl
scas
mov
and
ljmp
add
mov
ret
in
sbb
cs
cmp
push
leave
call
xor
dec
aas
jb
je
int3
xlat
arpl
int3
lea
add
ret
lcall
out
jl
cmpsb
jnp
loope
xor
inc
mov
mov
outsb
sbb
sub
adc
xlat
jp
and
cmc
jae
inc
pop
or
pop
ret
or
push
mov
push
call
repz
dec
dec
popaw
mov
dec
sbb
mov
cmp
sbb
jae
add
daa
int
int3
mov
push
jns
add
mov
into
xchg
leave
stos
stos
fcomi
sti
outsl
or
sbb
or
adc
push
mov
jmp
cmpsl
or
nop
pushw
scas
jo
scas
je
or
pusha
cwtl
lret
adc
insb
addl
daa
jge,pt
dec
jo
push
push
in
sbb
into
sub
cmp
call
mov
incl
mov
xor
ret
push
add
mov
push
or
jno
pop
movsb
pushf
sahf
mov
fisttps
mov
push
sahf
sub
adc
xchg
xchg
mov
mov
and
andb
testl
dec
inc
popf
mov
mov
inc
mov
sub
rcll
ja
xor
xchg
leavew
push
push
cmp
mov
jl
insb
test
iret
sbb
std
rcrb
and
jl
mov
xchg
inc
jne
insl
into
fdivl
es
adc
sbb
ja
lahf
pop
or
adc
cmp
xchg
lods
pop
aaa
aas
mov
pop
shl
mov
scas
lea
rorl
shl
out
adc
test
cmp
sbb
jnp
pslld
mov
pop
or
scas
pop
cmpsl
inc
cmp
das
call
mov
mov
push
out
fldt
fwait
cld
subb
aam
ljmp
std
lret
and
dec
jns
or
hlt
dec
add
rolb
lea
sbbl
sub
sbb
cmp
jecxz
xchg
add
sbb
xchg
sub
sbb
movsl
arpl
inc
shlb
adc
cmp
inc
js
lcall
push
f2xm1
xchg
xchg
outsb
scas
pop
adc
and
pop
inc
or
push
arpl
xor
pop
fildll
repz
cli
jp
sbb
push
and
js
ret
jne
push
pop
xchg
call
sub
dec
dec
repz
in
push
xchg
dec
nop
push
mov
mov
xchg
stos
sub
out
mov
in
cmp
xchg
pop
loope
push
cmc
mov
loope
jecxz
push
jne,pn
mov
pop
jns
xor
xor
mov
or
mov
jne
in
lds
sbb
je
fcmovnb
inc
adc
out
lock
inc
push
inc
sbb
call
cmp
jo
cmp
cmp
subb
lods
shll
or
fnsave
and
sbb
pop
mov
insb
pop
aad
cmp
push
enter
mov
dec
ljmp
fidivrs
push
mov
mov
xor
mov
test
aas
inc
cs
push
dec
stos
mov
imul
popf
xchg
xchg
cmp
ljmp
mov
sbb
push
js
jmp
mov
lcall
push
dec
adc
mov
popf
les
adc
adc
adc
in
lahf
sub
xor
aam
jge
scas
shlb
mov
add
lds
dec
or
or
mov
cld
mov
push
add
adcb
and
jbe
stc
lds
mov
std
cltd
jnp
sbb
pop
mov
ja
iret
das
or
popl
dec
adc
fisubl
rorb
mov
imul
push
out
repz
dec
and
sbb
cld
incl
sbb
mov
inc
in
and
push
sti
sbb
dec
enter
daa
mov
cmp
sahf
es
push
scas
cmc
push
dec
xor
cmp
cmc
jbe
shll
pop
enter
pop
jnp
mov
xchg
mov
xchg
inc
pop
test
cltd
dec
sub
shr
mov
jns,pt
mul
mov
ja
gs
mov
pop
mov
sbb
or
es
mov
dec
les
into
mov
sub
push
inc
test
dec
pushf
pop
fdivs
ret
dec
push
fisttpll
mov
push
xor
jno
xchg
xor
or
dec
fisubl
xor
mov
or
or
jl
popf
jo
and
cwtl
js
mov
inc
lretw
pop
std
ds
xlat
mov
in
sub
pop
movsl
mov
leave
icebp
icebp
mov
bound
cli
mov
daa
test
cmc
cwtl
aaa
sti
cwtl
push
test
imul
aaa
inc
fnstenv
xlat
int3
xchg
insb
mov
xchg
xchg
add
pop
ss
cmp
sbb
mov
ret
mov
clc
cmpl
pop
dec
cmpsl
mov
pop
lods
repz
fisttpl
data16
mov
mov
or
and
cli
push
mov
fstp
fsts
mov
fisubs
mov
mov
in
xlat
adc
popf
test
cmp
in
mov
fcomp
add
stc
and
lret
data16
xlat
mov
lds
hlt
orl
mov
std
jp
dec
adc
jp
cmp
jno
pop
int
mov
mov
cmp
mulb
daa
out
rol
stos
test
cmp
xor
add
es
scas
insl
mov
popa
dec
push
dec
daa
imul
das
mov
jmp
jecxz
iret
lock
in
sahf
cmpsb
fiadds
fstpl
nop
jge
adc
jns
lcall
dec
out
out
shlb
in
sbb
cli
pop
pop
popf
jmp
mov
sub
shll
arpl
adc
out
ljmp
and
movntq
jbe
and
in
rcrl
push
sub
rcrb
push
das
push
sbb
iret
or
dec
sub
sbb
mov
push
fsubrs
inc
rorl
and
ja
nop
mov
and
js
inc
sbb
addr16
jne
mov
cmp
xor
xor
mov
aad
repz
sarl
push
add
sbb
sbb
mov
pop
cli
imul
mov
mov
pop
dec
inc
out
sub
lahf
adc
mov
into
cmpsl
xchg
repnz
jle
add
aaa
dec
sub
popf
dec
mulb
xchg
dec
add
pop
daa
or
mov
sbb
mov
bound
lea
jge
xchg
mov
dec
and
sbb
in
mov
jle
sbb
sahf
shll
ret
sub
popa
lret
or
mov
mov
sbb
mov
mov
adc
lea
shrl
pop
cmpsl
insl
fcomi
negb
je
les
cmp
add
scas
jp
mov
sbbb
sarl
scas
dec
sub
shlb
add
dec
cmp
sbb
push
inc
cld
cltd
xlat
inc
aas
add
pop
das
adc
test
inc
and
sysret
shll
repz
inc
jmp
fldenv
mov
mov
inc
int3
adc
lods
cmp
adc
cmp
mov
push
ja
jge
mov
sbb
jmp
imul
sub
mov
cltd
cld
mov
fistl
js
jns
sarl
out
or
out
sarb
ds
cmp
ror
sub
lret
mov
fldt
loop
jnp
ret
push
les
dec
cmc
mov
pop
icebp
cmp
ja
cmpsl
sub
stc
jae
mov
orl
lods
xor
sbb
iret
pop
pushf
lcall
add
ffreep
int
inc
aam
jbe
popa
std
es
out
cld
xorl
cwtl
push
nop
test
test
sbb
jp
add
jecxz
sahf
xchg
inc
and
cmpsl
xchg
into
xor
movl
es
test
jmp
idivl
push
jne
and
adc
arpl
pop
cmp
mov
inc
xor
adc
subl
repz
loope
je
pop
hlt
scas
add
popa
call
sub
je
in
push
sub
or
stos
xor
adc
pop
jno
xor
or
cmpsl
sbb
test
push
sbb
add
scas
inc
nop
aad
lea
out
rcr
pop
fwait
cmp
movsb
xchg
stos
ss
bound
pop
mov
adc
aad
mov
pop
pop
fwait
addr16
mov
lds
or
pop
aaa
push
cwtl
jg
pop
jle
fiaddl
imul
mov
adc
inc
adcb
dec
in
into
es
mov
pop
add
sbb
add
lea
push
and
or
cmp
sub
xor
xchg
jg
push
inc
cmp
lea
add
fistps
enter
aam
pop
fisttpl
dec
rol
or
cs
xchg
ret
mov
mov
mov
adc
enter
mov
jb
test
dec
cmp
stc
adc
mov
stos
sar
bound
popf
pushf
imul
mov
xchg
and
jo
add
push
dec
push
rorl
push
lods
xchg
and
xchg
pop
cwtl
out
jb
repz
push
lahf
mov
xchg
xchg
xchg
or
dec
sub
and
pop
iret
xor
mov
mov
loope
mov
push
rolb
xchg
and
arpl
movsb
pop
mov
lret
in
or
cmp
cld
jle
pop
adc
xchg
hlt
add
in
sub
pop
adc
mov
imul
pop
pop
mov
mov
insl
mov
in
iret
mov
jp
test
andb
push
dec
pop
out
or
std
sub
cmp
das
xor
imul
xor
sbb
or
push
dec
sub
pop
cmp
xchg
or
xor
test
sbb
pop
mov
mov
clc
rorl
sub
mov
daa
and
shl
in
jp
loopne
xchg
int3
pop
ds
ja
push
lds
stos
ret
pop
mov
aam
mov
ficoms
cmp
lock
roll
sbb
jo
test
out
sub
imul
test
out
sub
mov
pop
cltd
sbb
xor
lock
arpl
and
jle
add
pop
mov
xchg
adc
int3
cmp
adc
ret
insl
sahf
cmp
shrl
aas
cltd
or
xchg
shrb
movsb
pop
dec
mov
cmp
adcb
push
ds
gs
sub
arpl
pop
test
roll
inc
pop
adc
sahf
cs
sbb
aad
xchg
out
xor
xor
sub
mov
adc
test
xchg
pop
add
fwait
push
mov
pop
in
sahf
push
scas
jge
sarl
dec
out
test
sub
aaa
repz
jnp
inc
sub
aam
and
ret
gs
cwtl
pop
mov
dec
mov
jle
mov
lds
clc
inc
out
fs
xor
loopne
int
push
mov
xchg
inc
gs
lcall
lods
adc
add
lods
ss
sbb
loopne
xchg
rcrb
aam
in
and
pop
mov
int
fcomps
xchg
jl
out
add
mov
and
jp
or
xchg
xor
repz
mov
pop
mov
ss
int
aaa
insb
jae
fmulp
cmp
jge
mov
call
mov
jl
js
xlat
push
stos
gs
add
test
sbbb
jmp
leave
add
or
push
sbb
push
inc
fsubs
pop
sbb
das
mov
or
add
push
sub
or
mov
stc
loop
adc
int
lcall
pop
loopne
or
insl
xchg
inc
mov
sub
out
mov
jl
inc
nop
xor
xchg
jbe
enter
xchg
mov
xchg
loope
xchg
pusha
jns
mov
loopne
testl
pop
psrld
adc
int
cltd
arpl
adcb
mov
sbbl
out
add
cwtl
jae
repz
mov
add
mov
pop
mov
fdivl
push
les
aaa
adc
mov
sbb
mov
xchg
rol
mov
rclb
imul
inc
and
out
lods
arpl
call
ljmp
in
mov
and
aaa
cmpsb
inc
push
push
and
fistl
and
mov
adc
xchg
ds
mulps
and
ja
aaa
jmp
fs
pop
out
aaa
inc
outsl
sti
push
jp
mov
adc
fsub
sub
rolb
fsubrp
mov
jne
push
cli
addr16
je
mov
rol
aam
adc
or
out
rorb
les
xchg
mov
cmc
or
pop
pusha
enter
add
or
and
jge
rol
jg
sbb
popa
and
jecxz
out
inc
sub
push
mov
push
xchg
or
push
movsb
xor
and
aam
imul
xchg
popf
shll
test
jb
fcompl
fs
push
inc
call
fists
in
jecxz
popf
int3
push
sub
scas
in
loopne
scas
push
xor
lea
mov
ficomps
lret
xor
add
sarb
sbb
cs
inc
jge
push
jecxz
xor
aaa
pop
cmp
xor
mov
inc
ret
out
dec
cmc
push
or
stc
push
inc
push
inc
repnz
xchg
ja
add
pop
jle
sub
in
fimuls
outsl
inc
cmpsl
daa
in
or
outsb
sub
shll
fstpl
push
out
inc
es
inc
push
adc
dec
ja
in
pop
jecxz
or
pop
in
jp
imul
popf
cmp
mov
icebp
sub
jb
inc
hlt
sub
and
inc
xchg
ss
sbbb
xor
cmpsl
les
call
cs
xor
gs
fmull
repz
pop
adc
lahf
inc
mov
jecxz
push
add
mov
addb
popf
ss
ja
mov
mov
xchg
std
mov
jmp
mov
lahf
xor
pop
cli
push
fisubs
jnp
inc
or
inc
push
dec
dec
dec
add
bound
or
jo
pusha
icebp
xor
sahf
mov
cwtl
sbb
pop
ret
int
mov
sub
daa
xor
cltd
cli
int3
xchg
dec
and
bound
test
out
add
xchg
xlat
cltd
sbb
mov
push
or
iret
mov
pop
addr16
or
inc
in
addr16
or
sub
cld
sbb
inc
pop
cmp
inc
ljmp
das
enter
cmpsl
lcall
scas
ret
addr16
cs
arpl
popf
and
cmp
jns
sub
and
roll
int
jae
loop
in
lock
lds
mov
push
in
lret
pusha
jb
hlt
mov
mov
jno
lds
xchg
inc
pop
jmp
out
aad
maskmovq
and
pop
idiv
jl
ret
cmp
popf
sbb
xchg
or
mov
jle
mov
or
jmp
push
inc
push
loopne
and
push
repnz
fiaddl
pop
push
ficoml
les
bound
xor
inc
aad
call
xchg
pop
ds
sarb
into
ficomps
jge
cmp
push
or
dec
fldl2e
mov
insl
lds
xchg
jmp
xor
fs
rol
sbb
outsl
xor
xchg
fbstp
jmp
inc
mov
sub
shrl
sti
add
jecxz
add
xchg
stos
or
inc
and
iret
jne
and
sub
and
jnp
or
popa
das
arpl
cmp
nop
mov
loop
xchg
insl
cwtl
aas
lcall
test
inc
outsl
jecxz
js
repnz
jb
in
xchg
push
mov
sbb
imul
push
je
test
sbb
xchg
cmp
js
mov
cwtl
outsb
push
or
push
loop
pop
aaa
insb
lcall
ret
mov
aad
imul
and
arpl
shr
mov
arpl
int3
adcb
fwait
jae
in
rorl
in
or
pushl
inc
repnz
xor
cmp
ret
cmp
sub
cltd
pop
jne
jo
int
mov
xchg
hlt
jns
and
xor
sbb
fcoms
nop
or
ja
adc
jb
stc
mov
adc
xchg
sub
sub
movsb
subb
or
cltd
cli
fisubs
push
pusha
test
mov
cwtl
lock
in
push
push
xlat
callw
clc
iret
vpsrad
insb
mov
sbb
sub
mov
cmp
pop
jl
inc
shlb
rol
jge
dec
dec
pop
imulb
xchg
testb
adc
jns
cmp
mov
inc
jle
hlt
scas
pop
dec
addr16
or
lea
sub
dec
cltd
ret
lret
cwtl
dec
jl
sub
lcall
lret
repnz
cmp
cmp
xchg
jns
fdivr
lret
jno
jns
sbb
push
aam
mov
add
into
mov
mov
push
js
rcrb
push
fiaddl
les
mov
mov
jae
test
test
xchg
and
jl
pop
push
xor
mov
sahf
lcall
es
je
hlt
add
mov
sbb
pop
mov
mov
nop
xchg
aam
add
in
es
pop
lcall
inc
shlb
jno
hlt
push
rclb
js
jno
xlat
ret
mov
cli
and
cmp
cmpsb
dec
aas
sbb
mov
sbb
cmp
fdivr
pusha
cmp
or
lahf
jp
push
xchg
hlt
jge
pop
mov
lea
roll
push
add
xchg
fstpl
call
hlt
test
mov
xlat
pop
dec
loop
pcmpeqb
or
push
mov
fldcw
mov
adc
pusha
jmp
mov
into
stc
fwait
clc
push
ret
repz
incb
jne
pop
arpl
imulb
cmp
jl
xchg
imul
aad
das
fdivl
sbb
enter
fstp
mov
rolb
aaa
out
xchg
xor
xor
and
mov
pop
andb
mov
pop
pop
cmpsb
aas
xorb
dec
sub
mov
aam
mov
inc
inc
mov
cld
jle
daa
xlat
lahf
cmp
ja
xor
jmp
cmpsl
fmull
ljmp
push
ss
inc
jge
push
lahf
or
push
jb
mov
jbe
adc
dec
sub
sub
jb
mov
rcll
and
xbegin
bound
pop
pusha
mov
cs
ljmp
dec
push
jb
push
dec
mov
lock
ret
mov
mov
mov
push
xor
jns
xor
mov
cmp
test
xor
adc
in
dec
sahf
leave
movsb
mov
addl
imul
call
xor
pop
pop
ret
sarb
fmul
sub
xchg
xchg
fucomp
mov
mov
test
push
aas
mov
inc
repz
sbb
je
repz
fwait
insl
fwait
pop
push
fadd
add
repz
cmc
cmp
movsb
pop
pop
push
hlt
adc
and
mov
hlt
pushf
sub
push
cmp
push
inc
out
adc
or
sbb
xor
cmp
sub
pop
addr16
das
outsl
mov
mov
dec
mov
hlt
xor
sub
stos
xchg
cld
push
lea
xchg
loop
mov
jg
sbb
push
jno
mov
mov
xlat
fwait
lock
add
and
cld
dec
push
sbb
stc
lds
mov
pop
iret
pop
iret
jb
push
sar
jmp
imul
cmp
jmp
pop
scas
cwtl
rorl
jle
addr16
dec
push
fwait
or
pushf
xor
and
and
inc
push
jle
cs
pop
stos
dec
inc
inc
rcll
pop
cli
push
ljmp
pusha
je
lods
and
cmc
js
call
and
out
sbb
mov
enter
arpl
xor
cmp
inc
or
add
xlat
push
cltd
jecxz
sub
sbb
dec
and
stos
and
mov
cs
sarl
jnp
aas
push
fsts
idivl
test
jmp
mov
data16
jecxz
mov
add
jbe
ret
pop
out
cmp
lcall
subb
cmp
mov
mov
xchg
inc
aas
pop
mov
sub
inc
xchg
or
add
mov
inc
sbb
repnz
enter
cli
loope
lcall
dec
pop
ljmp
aas
sbb
lods
add
xchg
push
mov
imul
cmpsl
sbbl
mov
cmpsb
js
int
cs
xor
cwtl
movsl
sub
push
not
cld
shll
xchg
jo
add
test
test
out
lret
xor
xchg
dec
movsl
aad
and
xchg
inc
dec
fistpl
fsubr
adc
fadd
sub
xchg
cmpsb
push
mov
dec
xchg
inc
inc
fcoms
pop
xor
repz
in
enter
cmp
push
mov
cli
cmpsl
push
dec
xchg
mov
pop
lret
outsb
or
pop
icebp
loope
mov
pop
xchg
mov
aaa
jge
rorb
pop
imul
ja
adc
or
mov
gs
jle
and
or
mov
dec
cld
lahf
or
inc
push
ja
movsl
inc
dec
jl
mov
cmpsb
mov
mov
push
clc
sahf
adc
mov
adc
sub
insl
les
mov
cmp
cmp
andb
movsl
aaa
mov
inc
repz
jecxz
mov
mov
inc
add
cmp
repnz
inc
test
push
lret
in
call
inc
adc
jl
cmpl
repnz
gs
fimull
sub
pop
fadds
incb
sub
cmp
inc
ja
lds
or
push
jb,pn
mov
lods
leave
jl
push
loop
xchg
outsl
xchg
mov
aad
pop
or
pusha
xor
mov
bound
jne
fidivrl
mov
fwait
xor
xchg
mov
lock
push
test
push
push
subl
movsb
inc
rolb
movsl
mov
test
cmp
fmull
sarb
push
loop
inc
lret
test
stos
adc
test
add
les
pop
jae
jnp
xchg
out
shlb
leave
and
jno
and
mov
mov
add
sbb
je
jo
stc
out
xorl
mov
scas
repz
xor
inc
sbb
or
mov
mov
ss
jg
loopne
push
xor
mov
out
add
jb
jb
lods
xchg
jbe
xchg
xchg
and
in
subl
and
cmp
popa
add
mov
and
jge
cltd
sub
movsb
sub
cmp
iret
or
loop
lock
push
in
and
aas
and
sub
cmp
xchg
xchg
xchg
xor
fistps
ljmp
inc
pop
mov
push
inc
push
call
stos
stc
out
ret
lcall
sbb
in
lods
in
mov
dec
and
adc
mov
and
inc
cmp
cmpl
lds
es
sub
cmp
ja
out
push
push
call
sahf
inc
mov
sub
orb
mov
mov
xor
in
push
mov
subl
not
add
in
inc
pop
inc
jns
or
ficompl
sub
mov
xor
aaa
jmp
inc
mov
nop
rorl
dec
ds
and
sub
mov
or
add
insl
pop
jg
gs
mov
or
and
aad
clc
popl
mov
pop
jl
pop
and
call
stos
and
cmpsb
mov
mov
xorb
cltd
add
push
daa
dec
mov
pop
fistpl
ja
in
cmc
cmpl
jge
imul
add
cs
das
insl
dec
sub
mov
dec
add
and
jge
xchg
sahf
aas
and
pop
mov
jo
inc
mov
push
xor
mov
fldenv
pop
addr16
aam
movsl
pop
cmp
xchg
pop
data16
xchg
imul
sub
jp
lods
dec
add
ja
push
scas
xlat
pop
xor
adc
es
aam
in
stos
ret
push
dec
repnz
push
pushf
jecxz
in
bndldx
dec
lock
jle
push
jo
xor
cmpsl
mov
sbb
std
popf
insb
cmp
xchg
das
ffreep
ficomps
mov
pop
cltd
je
xchg
jno
nop
rcll
lret
fidivrl
add
xchg
cmp
addl
push
pop
cmp
mov
shrb
in
mov
scas
mov
ja
sbb
sahf
fwait
mov
mov
push
ret
sbb
loop
dec
les
mov
adc
ffreep
sub
in
bound
mov
jg
rcrl
xchg
and
add
xchg
shr
test
jge
add
jbe
sti
push
daa
sbb
into
pop
pop
adc
jbe
mov
xlat
xlat
in
jg
mov
fsts
pop
or
pushf
nop
dec
lret
dec
push
mov
jns
insl
xor
xor
jo
sub
mull
inc
data16
cli
push
js
push
sbb
stos
dec
xchg
push
pusha
dec
out
xor
push
testb
aam
dec
sti
sahf
subb
mov
mov
jg
inc
inc
int
pop
fisttpl
inc
jae
fcoms
cmc
jge
sti
inc
mov
outsb
adc
or
add
dec
cmp
jle
aas
sahf
fistl
sbb
xor
shll
jae
sub
hlt
sub
mov
ja
lock
push
jmp
popf
das
jb
mov
popa
gs
repz
ljmp
loopne
cmp
nop
adcl
in
xchg
imul
push
sbb
adc
gs
movsb
xor
mov
cld
shr
rorl
data16
ja
mov
xor
roll
lods
add
cmp
movsb
add
leave
mov
inc
xor
push
loopne
cmp
test
nop
shr
jae
es
and
popa
jge
hlt
cltd
bound
mov
icebp
out
rcrl
lcall
mov
aaa
mov
mov
push
popf
into
sbb
and
jge
outsl
pop
pop
jne
out
push
sub
push
push
popa
mov
test
cmp
mov
mov
and
sub
pop
push
in
inc
inc
paddd
sbb
daa
cld
mov
or
sub
inc
jnp
and
lret
cmp
xchg
and
or
lods
mov
dec
xchg
aaa
scas
push
sub
icebp
loopne
mov
daa
std
xlat
ficoms
ja
pop
pop
pushf
es
push
loopne
loopne
outsl
adc
lret
int3
js
jb
and
aad
leave
xchg
jl
pop
pop
fcmovnu
test
mov
pop
or
in
stos
jp
dec
fidivl
sub
fisubrs
xor
loopne
outsb
xor
dec
out
imul
mov
dec
inc
dec
push
mov
fsubs
dec
dec
loop
sbb
mov
iret
push
jmp
cmpsb
push
sub
mov
loopne
loopne
mov
sarb
jge
pushw
add
insb
jb
push
aam
int3
insl
mov
sub
fmul
mov
mov
cmpsl
frstor
repz
and
add
mov
icebp
sbb
sub
xlat
stos
das
sbb
dec
dec
xor
sub
lds
scas
pop
xchg
sbb
les
xor
xor
fisttps
adc
add
repz
mov
push
push
mov
and
inc
dec
and
cli
adc
pop
or
adc
mov
iret
loop
xlat
scas
hlt
mov
inc
mov
or
mov
mov
mov
dec
popa
xor
fs
inc
mov
mov
mov
loope
and
sbb
pop
pusha
shlb
pop
shr
call
nop
jg
xlat
cmpsl
jno
clc
and
test
lock
in
pop
jo
jle
mov
xchg
mov
mov
jl
mov
ret
cmp
xchg
sbb
orb
lods
aam
out
in
xchg
cmp
inc
pop
lret
fdivrs
or
leave
jno
das
cmp
adc
hlt
jne
jne
push
cmovno
test
in
pop
pop
clc
insb
fidivrs
sti
xchg
in
pop
fldenv
inc
inc
mov
int
movsl
xchg
imul
xchg
xchg
inc
cld
pop
cs
negb
rcrb
pop
xchg
xchg
sti
sbb
cmc
mov
jno
or
cmp
adc
sbb
mov
ret
cmp
xor
jns
dec
xchg
adc
mov
mov
cmp
or
adc
cwtl
push
push
idivl
dec
movsb
adc
add
add
lret
mov
adc
rorl
xlat
xchg
push
addb
out
aam
icebp
imul
aas
lahf
mov
cmpsl
xor
in
mov
inc
clc
mov
test
loop
jae
pop
filds
mov
push
inc
xor
js
int3
mov
add
jl
stos
pushf
or
cmp
inc
adc
add
je
jne
cmp
enter
cmp
cmp
jge
fsubl
mov
and
cli
into
ret
fimull
pusha
mov
cld
jb
xchg
test
mov
push
in
js
lods
sarb
inc
push
push
insb
js
dec
inc
in
ss
mov
xor
and
call
repz
fiadds
adc
sub
jb
or
es
adc
jmp
or
inc
pop
out
arpl
pop
fidivs
adc
or
mov
popa
test
sbb
dec
mov
cld
sub
push
inc
xchg
cmp
inc
je
dec
into
fwait
dec
pop
inc
add
pop
in
xchg
mov
add
xchg
xchg
xor
push
pop
cmp
mov
and
popf
popl
orb
aad
inc
dec
or
lret
popf
jo
stos
dec
aaa
xchg
jb
test
jns
sbb
adc
jnp
dec
or
daa
data16
ds
add
testl
push
cmp
aaa
rcll
and
add
push
cmc
out
cmpsb
daa
adcb
call
xchg
in
pop
lret
in
fnstenv
clc
pusha
inc
mov
or
xchg
adc
insb
jb
sub
cmp
mov
cltd
mov
add
push
leave
cmp
popf
sti
mov
jne
push
rcrl
mov
out
push
cli
jp
loopne
xorb
lock
mov
adc
dec
rolb
and
test
xchg
sub
cli
jo
inc
push
rolb
stos
pop
sub
inc
jnp
inc
xchg
and
cs
sub
test
xor
add
movsb
out
add
daa
imul
outsl
mov
gs
sub
call
decb
jge
inc
pushf
sbb
xor
xor
cmp
push
and
faddl
out
pop
lret
int
dec
cmp
adc
pop
inc
and
dec
rclb
cmovle
sbb
or
arpl
call
adc
loope
jae
stos
out
dec
jle
sub
push
test
jl
mov
int
lret
mov
mov
jb
js
and
mov
sbb
jne
cmc
fistl
adc
pop
adc
xchg
pushl
xchg
ret
loopne
or
ja
cs
xchg
roll
dec
daa
dec
je
aam
lret
ljmp
cmp
inc
jl
enter
and
lahf
fiadds
fbld
cmp
outsb
pop
cmpsb
sbb
or
push
xor
jnp
daa
and
or
leave
sti
jp
adc
push
pop
push
cwtl
pop
pop
je
int3
sub
gs
pop
add
fstpt
sub
mov
lahf
lcall
and
push
lret
movsl
cmp
cmp
mov
addr16
int3
repz
mov
sti
sarb
and
shlb
mov
jo
icebp
fstps
and
inc
leave
mov
loop
cmpsb
add
imul
sub
ud2
xchg
push
jg
xor
cmp
mov
js
sub
push
mov
or
and
aaa
in
iret
cmpsl
adc
inc
shlb
xchg
inc
sub
jnp
mov
cmp
jg
cmp
add
inc
sub
lcall
lahf
iret
add
mov
sub
jo
cmc
enterw
andl
pop
rcrl
nop
sbb
popf
jp
sub
push
inc
test
fs
jle
icebp
mov
xchg
sti
inc
test
cld
jns
out
sub
fidivrs
mov
jge
jge
cmp
fdivrl
or
iret
sbbb
inc
mov
sub
pop
xor
push
lea
sbb
iret
jp
sub
inc
xor
push
aas
xchg
sub
add
js
lcall
fsts
adc
mov
aad
xchg
ljmp
out
add
xchg
out
dec
cltd
popf
cs
das
sub
jnp
sbb
xchg
or
das
push
idiv
jg
cmp
stos
fsub
pop
cs
loope
lods
mov
dec
push
inc
adc
mov
xorb
ficoml
fldt
cmc
movsb
cmp
outsl
imul
cmp
pop
fs
ds
cli
jb
clc
imul
insl
inc
sbb
sarb
add
insb
jb
jmp
aas
and
mov
mov
xorb
jb
icebp
rclb
xlat
in
cmp
lahf
test
cmp
pop
or
pushf
popf
adc
jns
aam
jl
subl
test
popa
jne
cli
mov
push
shrl
lret
insb
mov
and
shlb
gs
mov
jle
cld
and
mov
inc
or
adc
jg
mov
xor
mov
addr16
adc
cli
mov
sar
rcl
mov
stc
xchg
das
mov
xchg
fwait
mov
or
lahf
dec
add
fcmovnu
sahf
cmpsb
cmp
popa
jo
and
or
faddl
jg
std
mov
lea
ljmp
sbb
jne
insl
xchg
fstpl
clc
push
sarb
test
rolb
dec
dec
and
stc
xchg
pop
popf
sahf
dec
cmpsb
fsubrl
dec
movsl
inc
xlat
repnz
or
mov
enter
xchg
xor
pop
ret
jecxz
push
dec
roll
jmp
imul
jb
sbb
cmp
push
sub
rcr
mov
subb
fcompl
pop
add
insl
imul
add
out
repnz
imul
jns
dec
or
inc
sub
dec
hlt
cwtl
test
mov
push
sbbl
scas
push
dec
shlb
xorl
aaa
push
push
mov
aam
and
sbb
pop
pop
jb
mov
cmp
mov
adc
jecxz
loop
cmp
mov
adc
test
in
ljmp
out
adc
mov
mov
pusha
cwtl
mov
sbb
adc
sub
mov
pop
add
lods
outsl
or
dec
jbe
repz
jmp
sbb
imul
lods
repz
push
mov
push
sub
addr16
out
int
inc
jne
adc
pop
fdivrs
js
cmpsb
out
divl
mov
icebp
or
cwtl
jo
scas
mov
add
push
loope
out
ljmp
cmpsb
and
cmp
mov
cmp
lods
dec
push
shll
jno
and
pop
dec
fld1
pushf
mov
pop
jne
out
imul
pop
pop
lret
addr16
pop
mov
int3
xchg
hlt
and
lret
in
mov
movsl
gs
push
roll
aam
testb
mov
add
loopne
dec
xor
cmc
jo
xorl
fbstp
inc
and
sarl
push
jb
push
js
sahf
pop
add
imul
aam
rolb
cmp
or
adc
scas
add
jns
outsb
xor
lret
into
clc
and
inc
js
cmp
fwait
popa
loopne
xor
movsb
lret
js
xor
in
aas
das
cli
scas
lcall
test
stc
es
mov
and
pop
inc
pusha
lcall
xchg
or
out
movl
sarb
mov
outsb
jbe
out
inc
mov
cmp
mov
push
aas
test
push
mov
imul
add
mov
push
sub
add
scas
stos
mov
push
ja
pop
push
mov
sub
jno
sarl
and
rorb
xchg
jo
inc
popf
aam
pop
in
inc
inc
pop
xchg
aad
pop
orb
aam
mov
pop
xchg
pop
rcrb
cmp
jns
out
pop
js
mov
jnp
icebp
xchg
mov
out
out
icebp
fwait
xlat
push
or
push
int3
addr16
push
mov
loopne
jmp
mov
mov
lods
jmp
cmp
mov
ret
push
mov
xchg
or
fst
push
out
add
inc
adc
push
imul
adc
shrl
mov
daa
adc
add
mov
bsf
pop
cld
or
aad
out
xor
int3
stc
or
jbe
test
cmpsl
jmp
in
jb,pn
pop
dec
fwait
and
mov
push
mov
cmpsb
adcb
push
and
fmuls
push
std
dec
lds
and
into
pop
imul
fistps
push
rclb
setg
mov
fsubr
or
xor
sub
sub
sub
pop
push
push
sbb
call
gs
int
insb
iret
dec
xor
push
xor
adc
pop
outsb
dec
push
in
adc
jmp
loopne
push
js
adc
mov
insb
je
adc
popf
lods
pop
mov
jle
hlt
pop
pop
fiadds
jnp
cwtl
xchg
les
lods
in
fwait
stc
mov
test
mov
xchg
loopne
mov
movsb
in
movq
mov
fildll
add
imul
iret
loope
jmp
jmp
insb
fldt
cmp
jbe
add
ds
dec
push
lds
outsb
jnp
and
xor
ds
dec
scas
stos
sahf
adc
mov
jmp
rorl
cmp
imul
into
aad
scas
repz
and
jnp
mov
sbb
mov
pop
sub
mov
mov
cmpsb
push
popf
cmp
mov
les
lcall
aaa
loop
cpuid
add
nop
push
es
fcmovb
push
and
add
fs
ja
out
testl
push
lods
cmp
or
mov
add
push
dec
inc
cmp
std
push
out
in
xor
mov
push
mov
push
rcr
pusha
ret
sub
loop
packuswb
daa
ja
hlt
jnp
adc
sub
ss
ds
dec
insb
dec
adc
cmp
lcall
js
je
lods
gs
fdivs
out
mov
mov
adc
int3
idiv
cli
mov
and
out
and
mov
aam
in
inc
push
movsl
fnsave
ds
mov
xchg
sahf
mov
cmp
lret
jo
andl
bound
mov
xchg
mov
xor
cmp
xchg
push
flds
fnsave
or
dec
data16
cmc
pop
xchg
out
xchg
lds
sbb
push
push
in
sbb
shl
rorl
mov
mov
add
push
xchg
inc
jle
ja
loopne
loopne
cld
pop
jle
les
jno
sub
xchg
push
adc
lcall
lret
fdivrl
adc
jmp
mov
xchg
push
dec
mov
xor
fldl
add
xor
pop
dec
adc
out
jecxz
and
stos
adc
lock
or
push
sbb
and
inc
mov
adcl
scas
fiaddl
popa
pushl
adc
inc
mov
cwtl
ja
sarb
xor
negl
jmp
mov
scas
xchg
mov
add
push
hlt
icebp
or
jnp
out
es
mov
inc
adc
shrl
clc
imul
dec
out
cmp
xchg
fidivl
cwtl
test
jbe
aam
outsl
pushf
pop
jp
mov
xchg
in
mov
mov
shll
arpl
scas
pop
inc
ljmp
sbb
daa
dec
pop
mov
test
push
test
or
inc
xchg
xchg
mov
adc
pushf
add
push
add
mov
aam
sub
adc
cwtl
push
repnz
ds
and
xor
dec
cwtl
movsb
jne
add
push
pop
ret
popf
in
rcrl
sub
testl
in
add
stos
into
jo
bound
mov
pop
sahf
push
adc
cwtl
dec
ret
sbb
out
pop
lahf
inc
cmp
cmp
cmpsb
dec
aad
inc
cli
pop
sbb
fwait
push
aam
adc
fidivrl
out
xchg
add
test
xorl
sub
into
stc
sbb
ret
repz
repnz
and
xchg
pop
jp
sbb
pop
cmp
push
mov
clc
filds
aad
inc
sbb
out
bound
push
push
rorl
outsl
gs
or
dec
or
mov
inc
clc
outsl
jg
icebp
jbe
stos
xor
sahf
add
jns
popf
call
sub
rclb
inc
shll
ljmp
or
push
and
push
fs
lcall
cmp
lcall
jno
sarb
mov
or
xor
add
jl
cmp
pop
divl
aaa
sti
mov
loope
scas
push
mov
xchg
and
cmc
jg
pop
ja
sti
in
cmp
fdivrs
mov
insb
test
or
hlt
mov
ds
adc
inc
push
dec
in
lods
dec
mov
add
dec
or
sarl
adc
and
mov
out
mov
insl
clc
pop
adc
jecxz
sahf
sbb
sub
cmp
or
sarb
negl
pop
xor
mov
mov
ljmp
sub
iret
adc
mov
or
lret
and
popf
adc
sbb
out
das
daa
sbb
das
and
sub
sub
nop
cwtl
push
int
inc
insl
xchg
mov
xor
and
add
rol
push
sti
shll
out
call
out
ss
adc
lahf
inc
mov
push
sbb
and
loope
and
push
jmp
xor
out
mov
dec
pop
xchg
sysenter
push
xchg
inc
push
fsubrl
pop
std
notl
aaa
and
lods
mov
xchg
cmp
adc
push
adc
repnz
mov
int3
mov
stos
dec
repz
cmpsl
fiaddl
repz
push
mov
stos
je
test
in
or
mov
out
rcrl
sub
jl
fwait
call
int
jb
pop
sahf
aam
xor
mov
lods
mov
or
les
fistps
cmp
dec
out
fsubrs
jbe
lret
pop
sub
lcall
in
xor
scas
add
les
jo
shlb
add
stos
cmp
mov
lock
xor
in
mov
mov
or
aam
loop
mov
and
addr16
shrb
movsb
sar
ret
outsb
popa
in
pop
jno
pop
inc
rolb
dec
iret
xchg
cld
ficompl
in
gs
repz
popf
loope
testl
mov
mov
rorb
fbld
push
iret
inc
jb
shlb
adcb
jl
dec
push
inc
xlat
fsubrs
push
or
xchg
mov
mov
mov
cmc
mov
pop
mov
js
inc
inc
mov
xchg
mov
push
std
pusha
test
inc
lods
adc
pushf
push
popa
stc
test
sbb
dec
imul
inc
and
fisttpll
xor
int3
push
pop
inc
inc
idivb
or
pop
lods
gs
dec
mov
adc
ret
mov
pushl
and
jnp
push
ret
push
add
and
push
repnz
adc
xchg
and
or
sub
push
popa
std
xchg
mov
jo
fsubr
clc
adc
stos
push
arpl
push
ret
mov
pop
addr16
pop
daa
jl
mov
in
jecxz
mov
sub
fsub
jg
push
fld
cmc
ljmp
xor
aaa
lea
fiadds
jmp
scas
ljmp
cs
pop
or
call
cli
movsb
fstpt
dec
add
push
cltd
add
push
repnz
mov
cmp
push
inc
or
fnsave
lret
cmpsl
push
and
cmp
aam
lods
inc
int
int
mov
cmp
mov
lahf
int3
xchg
in
ret
jo
fsub
aad
push
jecxz
fsubs
mov
aam
rcrb
shll
popf
les
out
rcrl
xchg
int3
xchg
dec
mov
mov
adc
addr16
mov
xchg
pusha
cmp
sbb
test
jno
pop
negl
mov
repz
fneni(8087
orl
inc
fwait
xchg
ljmp
or
add
add
and
scas
pusha
sbb
repnz
test
jecxz
pop
xchg
pop
lods
data16
hlt
xchg
daa
enter
ja
movsb
int
pop
push
and
imul
xchg
aad
cmp
insb
scas
sub
and
out
pop
mov
scas
xchg
push
outsb
ljmp
mull
outsl
mov
out
xchg
cmpsl
mov
or
fistl
notb
jno
mov
or
out
xchg
cmp
jne
lods
and
int3
xchg
pop
jae
push
stos
fs
mov
mov
push
and
addb
jge
dec
scas
cmpsl
inc
daa
hlt
mov
repz
movsb
adc
mov
clc
push
adc
lea
out
enter
push
sbb
mov
leave
je
es
jl
sub
jp
cld
out
idivl
jne
or
ss
and
iret
mov
aaa
dec
or
ds
insl
dec
stos
or
outsl
ftst
insb
xor
or
popl
push
in
cmp
and
pop
rcrl
and
and
shl
fs
mov
in
imul
flds
mov
loopne
rcrb
filds
addr16
pop
jo
outsl
cmpsb
inc
dec
es
jg
add
ljmp
dec
movsb
enter
adc
push
xchg
int
popf
sbb
sub
stos
push
sbb
sahf
aas
cmc
push
lret
repnz
push
aam
in
dec
cmp
mov
cli
out
sbb
cwtl
leave
test
or
lret
jbe
out
and
or
xchg
ljmp
adc
call
push
pop
subps
xchg
pushf
jb
sub
vmulpd
xchg
adcb
mov
in
sbb
enter
fdivs
sbb
push
add
rcr
test
je
popa
imul
call
loop
sahf
push
mov
xchg
lock
add
pop
sbb
push
jbe
and
stos
sarb
mov
jp
dec
clc
xor
sbb
mov
push
mov
mov
add
sub
or
mov
andb
subb
adc
xchg
cwtl
mov
call
std
xor
lret
ljmp
arpl
xchg
dec
repz
mov
repnz
mov
and
aas
lds
adc
in
jbe
pop
or
push
sbb
inc
fsts
data16
hlt
repnz
mov
dec
ljmp
pop
dec
imul
rcll
aam
add
adc
shlb
out
test
inc
cmp
mov
repz
outsb
fs
dec
stc
sub
fisubrl
sahf
sub
bound
lcall
jg
mov
std
mov
mov
xlat
mov
cli
dec
ficoms
adc
jno
aas
sti
mov
xchg
sub
call
mov
mov
adc
and
imul
mov
cmp
adc
mov
inc
cmpsb
cli
outsl
xchg
and
dec
lds
xchg
cmp
jl
cmp
iret
and
cmp
and
sbb
mov
repz
or
ljmp
inc
js
xchg
jp
loope
enter
cmp
arpl
fiadds
push
call
jno
jecxz
dec
pop
jns
xchg
and
cmp
adc
inc
inc
les
adc
jp
ret
sbb
push
sahf
cmp
cltd
jo
ljmp
fistpl
imul
and
mov
push
mov
adc
and
sub
sbb
rcrl
pop
aas
jl
arpl
fisttpl
ficoms
aad
mov
aaa
xchg
xor
push
jge
divl
out
insb
and
sub
lods
enter
mov
xor
inc
cli
fsub
pop
loopne
mov
and
adc
push
jo
jns
test
adc
xor
lock
jb
pop
xchg
xchg
jo
or
lds
jne
aaa
lret
adc
decl
dec
ss
cmp
dec
sbb
cmp
lahf
push
fldt
jle
adc
and
cwtl
outsb
nop
mov
jmp
fwait
add
push
out
adc
push
mov
cld
insl
dec
hlt
inc
push
mov
repnz
aam
in
jae
xor
dec
mov
in
ljmp
xor
negl
xchg
std
sub
sbb
cmpsl
mov
mull
testb
push
mov
dec
add
aam
mov
lahf
dec
xchg
repz
ret
jge
cld
inc
sub
aam
cwtl
pop
ficompl
inc
cmpb
jge
je
mov
xor
hlt
xlat
xchg
ret
ss
push
or
pop
loop
or
sub
cltd
mov
or
test
cwtl
out
jb
test
sahf
xor
pop
fwait
push
fcmovnu
out
xchg
mov
test
push
das
jne
popf
adc
push
mov
xrelease
inc
pop
imull
lcall
and
movsl
cmp
or
sub
adc
inc
inc
mov
shll
cs
xor
dec
mov
or
sarb
ficoml
add
sbb
push
test
mov
add
add
dec
and
mov
push
jmp
int3
loopne
cmp
inc
mov
aam
inc
and
xor
sub
inc
cld
mov
test
arpl
mov
sbb
pop
xchg
ss
mov
in
xchg
cmp
hlt
adc
sbb
popa
adc
enter
test
push
out
inc
out
lahf
pop
popa
std
inc
xchg
cmp
jecxz
mov
rcll
xor
pop
jecxz
xchg
in
or
push
dec
mov
pop
and
adc
inc
out
in
xor
push
das
icebp
aaa
frstor
mov
dec
sub
sub
or
sub
jb
fidivrl
out
popf
and
jge
scas
cmp
mov
fsts
divl
imul
movsl
mov
adc
dec
popa
cmp
cmpsb
adc
pushf
ljmp
xor
mov
stos
xchg
mov
cli
sbb
cmpsb
add
sub
imul
gs
cmp
mov
add
lds
push
or
bound
cs
xchg
mov
and
gs
jl
mov
out
sbb
xchg
jge
jno
jecxz
cmp
sub
lea
dec
mov
inc
pop
xchg
push
aas
inc
scas
fistpl
pushf
loop
lret
push
cli
dec
push
clc
addb
push
cltd
cmc
sbb
jne
int
pusha
lods
jnp
ja
fisttpll
loope
ror
and
mov
pushf
lods
sbb
arpl
pop
aam
in
pop
jne
xchg
gs
nop
das
add
push
les
mov
stos
pop
mov
ds
fldl
and
mov
xchg
fiadds
ds
into
icebp
dec
jne
xlat
inc
les
les
dec
add
mov
push
inc
add
push
rcrb
or
mov
repz
dec
and
fcompl
push
inc
pop
dec
lock
fwait
scas
cmc
or
imulb
xchg
imul
xor
lods
mov
jno
icebp
cmp
clc
sub
test
jecxz
mov
bound
fisubl
movq
addr16
inc
fwait
add
and
sbb
pop
outsl
in
jbe
movsb
push
jmp
sub
mov
fcmovnbe
rcl
cwtl
or
aaa
mov
push
addb
arpl
jb
xor
jnp
pop
or
adc
pusha
cwtl
jbe
push
cmp
or
stc
enter
movsl
push
sbb
std
xor
mov
stc
pop
aad
fldt
loopne
std
or
test
sbbl
push
jns
push
ja
loop
inc
xor
sub
or
push
inc
out
movsb
js
sbb
sbb
mov
push
sahf
aad
fildl
jge
cltd
loope
test
adc
dec
inc
pop
pusha
dec
jb
inc
jns
cmpsl
jecxz
dec
lahf
subl
imul
or
paddsw
ljmp
xchg
mov
jg
xchg
sub
sbb
loop
cwtl
mov
imul
rolb
jb
test
or
shl
repnz
cmp
sbb
insl
test
imul
add
cmc
and
sub
je
repnz
fistl
test
mov
mov
rol
mov
push
or
mov
mov
fistl
fdivl
aaa
xlat
jno
push
das
and
in
sub
hlt
mov
jg
jnp
fildl
fprem
inc
movsl
les
sahf
mov
mov
inc
push
add
fs
fcomi
pop
jo
je
les
pop
adc
xchg
xchg
insb
xchg
dec
cmp
dec
mov
xor
cli
push
dec
pushf
xchg
lock
bound
cmc
lret
popa
add
mov
faddp
stos
cmc
cmp
sbb
inc
sbbl
enter
sub
mov
pop
mov
xor
jo
cmpsl
add
aam
daa
ret
add
repnz
imul
mov
aaa
mov
pop
negl
das
clc
fistpll
add
add
pop
mov
push
xor
out
mov
inc
cmp
lret
dec
sub
mov
fnstsw
scas
cmc
push
ds
jg
mov
int3
fistpl
pop
sbb
adc
or
push
pop
bound
inc
movsb
jne
mov
stos
sete
push
iret
out
push
pusha
inc
mov
xchg
and
xchg
dec
xorl
and
icebp
cmc
movsl
clc
jl
push
fdivl
shll
jb
mov
stos
popf
mov
cmpb
xchg
nop
dec
inc
testl
pop
jle
lcall
mov
scas
jg
jne
loopne
adc
shrb
mov
sub
fidivs
lret
cmp
push
test
sarl
jl
pop
dec
in
xchg
je
int
jge
and
add
outsb
dec
repnz
xchg
insl
jg
dec
fstps
arpl
mov
iret
fiadds
pop
and
out
xchg
imul
mov
xlat
or
or
rcrl
bound
mov
inc
inc
add
clc
push
sub
mov
mov
sub
push
mov
popf
pop
sub
fbstp
and
ja
mov
jmp
imul
sub
movsb
xor
movsb
aaa
push
mov
jns
add
inc
push
xorb
jg
inc
or
call
cmpsl
test
movsl
xchg
push
jb
or
add
mov
fstps
push
andl
test
movsb
add
xlat
jno
dec
jmp
mov
mov
fildl
pushf
data16
and
sbb
sub
mov
outsb
cld
push
push
int3
bound
iret
xchg
add
popa
in
sub
lea
jo
imul
icebp
int3
fadds
loope
iret
jo
xchg
dec
xchg
add
adc
adc
rol
lahf
adc
mov
xchg
fs
or
test
aad
cmpb
push
popf
jle
ficoml
sbb
push
cmpsl
movsl
jne,pt
xchg
push
push
mov
cmpsb
loopne
or
adc
xchg
cmc
jae
inc
sbb
xchg
addr16
gs
mov
outsl
pop
fdivrp
xor
push
adc
mov
inc
gs
insl
sbb
and
fwait
cmc
loop
insb
cmp
xchg
fildl
outsl
repz
fwait
pop
jne
test
dec
push
mov
jl
aam
xchg
imul
dec
cs
mov
ja
push
fisttps
lcall
clc
loope
fstps
jns
or
dec
xchg
daa
fistps
sarb
arpl
jl
fldenv
sub
dec
inc
dec
bound
cmp
addb
jle
cmpb
fdivrs
cmp
stos
mov
int
sub
jle
inc
adcb
push
int
xor
push
mov
loope
je
mov
dec
mov
mov
jp
sub
cwtl
cs
inc
movl
pop
lods
inc
enter
pop
cmp
mov
cmc
xchg
add
stos
push
fsubrp
dec
jns
jae
xchg
iret
cmpsb
mov
and
mov
cmc
jl
mov
int3
sub
es
dec
pop
stc
dec
adc
or
xchg
imul
in
je
mov
call
push
cmpsb
std
subb
movsl
xor
or
jecxz
stc
ficomps
dec
sub
call
jo
sti
fisttpl
push
sbb
xchg
jae
mov
imulb
sahf
pop
mov
sbb
xlat
ret
mov
sub
fldcw
movsl
xchg
ss
in
stos
fwait
sar
xchg
cltd
cmpsb
inc
pop
jmp
xor
ret
and
and
sub
fsubrp
lcall
sbb
pop
xchg
mov
cmp
jg
ja
cmp
mov
jl
mov
jg
shll
loop
sub
ss
pop
movb
shrb
and
rorb
pop
jnp
into
sbb
sbb
dec
js
cmpb
pop
xor
xchg
pushf
or
gs
xor
mov
jmp
fnsave
pop
cwtl
mov
lahf
adc
bound
popf
repnz
mov
shlb
sub
jns
jl
xchg
mov
mov
dec
pop
inc
mov
lahf
push
and
lock
ret
jno
test
stc
or
mov
push
pop
pop
test
scas
push
test
xor
add
or
ficomps
and
int
inc
mov
frstor
fcoml
out
xchg
dec
add
mov
mov
jno
cmp
lods
outsl
lods
icebp
out
jg
sub
push
push
inc
cld
xchg
mov
repz
fcoml
push
popa
add
mov
icebp
or
ret
popa
and
dec
sarl
jmp
jle
fwait
ret
int
jmp
fcoml
xlat
lods
push
dec
mov
mov
std
fcom
cld
pop
pop
and
clc
stc
enter
repz
push
fsub
pop
movsl
xchg
ficoms
inc
sbb
es
stos
mov
jo
pop
cmp
dec
xchg
loopne
rorl
mov
push
lahf
add
leave
int3
sub
jne
mov
cmc
sbb
int3
shll
sub
test
int3
inc
sbb
in
rcr
inc
in
xor
xchg
int3
cs
fidivl
data16
mov
mov
imul
aam
sti
and
and
xor
in
lret
jp
sti
nop
imul
pusha
jle
dec
clc
inc
movsb
mov
push
push
jp
mov
nop
mov
jp
ja
mov
stos
rcr
outsb
sbb
mov
sub
aas
mov
and
in
jg
jg
clc
mov
and
mov
aas
js
test
and
es
ret
test
sub
mov
sbb
or
test
push
pop
sbb
jp
out
inc
jmp
sub
jns
cmp
cmpsb
pop
xchg
jge
jp
mov
in
sbb
stos
popa
jae
xor
rol
test
push
les
int
and
and
mov
daa
testl
lret
in
adc
pop
fistpll
push
insl
movb
loopne
mov
and
fidivl
inc
repnz
add
push
in
gs
xor
int
xchg
xchg
xchg
test
cmp
fwait
imul
imul
pop
incb
xor
cli
push
xor
mov
inc
xchg
clc
adc
and
aad
cmpb
xorb
out
sbb
lcall
int
leave
xchg
shll
or
cli
lret
fistpll
in
fldcw
push
xor
rcll
mov
sub
mov
sbb
cmp
mov
jp
pop
jo
jae
in
repnz
rclb
dec
mov
popf
loopne
enter
cmc
icebp
cltd
loopne
pop
add
jno
mov
adc
sub
ja
or
pusha
js
add
out
shl
xlat
addb
add
data16
sti
shlb
mov
add
pop
arpl
cmp
jmp
dec
adc
stos
aam
inc
cld
rol
dec
notb
pop
cwtl
jnp
dec
or
xchg
ret
mov
sarl
jb
insb
fisubs
inc
dec
pop
or
push
stos
out
push
push
fstps
fidivs
push
jno
xchg
addb
xchg
cmp
cmc
mov
scas
rorl
mov
mov
jb
pop
mov
mov
das
adc
pop
lret
mov
addr16
sbb
fmull
or
hlt
push
and
out
clc
xor
es
pop
div
movsl
mov
cld
into
mov
sti
mov
mov
lods
repz
shrb
jge
leave
push
or
rolb
pop
xchg
mov
repnz
sub
hlt
shl
call
sbb
jp
jg
cmp
ret
sbb
cmp
sub
and
pop
ds
or
cmc
lcall
cld
shll
aad
rcr
xor
hlt
cmp
cmp
xchg
fwait
xchg
push
xlat
pop
push
shll
das
nop
lods
push
xor
sbb
movsl
or
or
popa
mov
and
push
in
in
fs
adc
aam
pop
push
and
jmp
enter
stc
xor
push
movsl
or
scas
or
pop
iret
in
sub
push
ljmp
cltd
dec
nop
mov
int
push
std
lea
test
pop
jno
cmp
jo
dec
cld
iret
adc
or
mov
add
pop
adc
ret
dec
cmp
or
xlat
jmp
or
and
pop
out
out
ret
sub
mov
adc
push
jg
ret
cmp
inc
dec
push
lods
pop
bound
jo
rcll
test
pop
loope
test
fsubrl
iret
push
push
sub
add
jg
mov
sub
in
add
sub
xchg
jnp
lcall
pop
xchg
dec
dec
imul
mov
sub
sbb
shlb
cmp
subb
popf
dec
xchg
mov
mov
inc
in
xor
cmp
jge
sahf
jp
bswap
stc
or
xor
sub
rolb
int
out
jmp
cwtl
pop
sti
les
mov
dec
clc
inc
aad
jne
xchg
xor
and
sub
mov
adc
mov
orb
or
or
insl
cmc
mov
stos
enter
fistl
sbb
and
jmp
jmp
les
lds
xor
lahf
dec
iret
ret
jb
jmp
jo
jbe
pop
fcoml
xchg
pusha
imul
popa
jb
cmp
and
push
and
mov
test
jne
fdivrl
and
mov
lret
jns
dec
mov
mov
dec
dec
inc
sti
push
out
rcr
loop
loope
and
xchg
mov
cmp
ret
jecxz
sub
xor
imul
cmpsb
cmpb
movsb
lock
mov
jl
sbb
mov
lcall
insb
inc
cs
mov
rclb
iret
dec
shrl
aad
out
jne
repz
push
lds
jns
addb
repz
insb
add
adc
cld
lret
add
add
aaa
addr16
into
jge
and
lahf
fdiv
jmp
ret
inc
adc
addr16
sbb
push
mov
mov
mov
sbb
mov
lcall
inc
sbb
add
dec
ljmp
repnz
cmp
sbbb
lahf
cmp
mov
push
cltd
fistps
sbb
push
sbb
cwtl
movsl
in
mov
dec
pop
stos
jl
dec
fldl
dec
enter
jmp
pop
data16
jnp
and
jbe
push
std
repnz
lcall
mov
xchg
push
ja
cs
cmp
loopne
imulb
jo
sub
sub
xchg
test
fs
jne
mov
test
into
mov
xchg
scas
orb
mov
loope
jno
add
cmp
adc
mov
mov
mov
push
jno
test
sbb
add
enter
mov
fxch
pop
movb
xor
jbe
push
stc
pop
dec
push
cmpsb
xor
roll
mov
mov
pop
clc
adc
data16
mov
pusha
mov
in
orb
inc
xor
xchg
pop
aam
aad
es
gs
icebp
xchg
cltd
pushl
jge
sub
rcrb
and
gs
les
cmp
xor
pop
nop
je
sbb
ficoml
fbstp
in
ljmp
jecxz
jne
inc
outsb
inc
in
push
les
test
add
aaa
mov
or
es
pop
mov
dec
arpl
cltd
mov
and
sub
pop
xor
xchg
fsts
in
push
inc
add
sbb
inc
bound
cmp
sbb
or
xor
insl
ficoml
testb
scas
mov
dec
push
shll
xor
pop
cs
daa
dec
jno
jns
jg
or
mov
jae
jb
daa
cmpsl
jb
add
das
test
lahf
ds
dec
sbb
repz
xchg
xorb
and
cmc
rolb
adc
ret
sub
pop
and
sub
fisttpll
fildll
pop
hlt
cmpsl
mov
clc
in
ret
mov
stos
insl
cld
mov
out
cs
rorl
mov
nop
or
mov
or
or
ljmp
pop
xchg
hlt
mov
dec
sbb
in
adc
lea
inc
adc
aaa
or
add
jge
stos
inc
sti
push
inc
dec
outsb
lock
cwtl
adc
jmp
dec
inc
push
jmp
stos
sub
mov
dec
cmp
push
adc
pop
fsubrs
mov
addr16
jp
sbb
stos
sarb
dec
xorl
stos
adc
mov
mov
cwtl
rorb
lret
int3
mov
push
push
sub
fimuls
std
jne
inc
inc
jp
pop
and
pushf
lahf
adcl
dec
jbe
mov
out
mov
or
jno
jb
iret
sub
mov
sbb
push
loope
imul
jecxz
pusha
lock
cmp
cmpb
rcl
jo,pt
cmp
jno
lret
cmpsl
jl
rorb
hlt
ret
imul
lret
or
inc
es
push
je
fldenv
insb
pop
sub
dec
hlt
sbb
and
jmp
clc
mov
cmp
cmpsb
pop
sbb
xor
sbb
loope
or
shrl
push
clc
push
pop
inc
fisubl
or
es
add
pop
xchg
adc
bound
jmp
fisubrl
shrl
scas
jge
fsub
xor
push
lahf
push
repz
lea
cmpsb
cmpsb
sbb
mov
sbb
dec
loope
cmpsl
mov
shrl
add
mov
push
push
ljmp
sarb
repnz
pushf
sub
repz
iret
je
xlat
xchg
pop
decl
imull
xor
and
jno
and
push
in
and
pop
int3
push
pop
fcomi
mov
dec
std
pop
sub
icebp
adc
mov
mov
dec
pop
cltd
imul
pusha
inc
dec
xchg
test
inc
add
push
or
repnz
jno
xor
mov
or
icebp
movsl
loop
test
popf
sub
fadds
stc
dec
roll
imul
push
cltd
aaa
lods
icebp
xor
les
insl
iret
imul
fs
add
inc
xchg
lahf
cli
mov
push
or
cli
adc
out
ret
fisttps
inc
mov
pusha
popa
aad
inc
mov
dec
mov
into
mov
gs
adc
dec
dec
fiaddl
rcl
das
adc
jl
ret
dec
push
or
gs
mov
ret
pop
sub
mov
push
movsb
sbb
add
jmp
hlt
mov
inc
adc
icebp
cli
push
push
and
mov
xor
mov
jmp
mov
shl
fldenv
jae
mov
cmpsl
int
adcb
pop
pop
test
lahf
nop
xor
dec
add
movsl
push
adc
in
push
mov
xchg
pop
push
mov
mov
divb
add
cmp
test
test
cmp
scas
test
loopne
adc
push
push
clc
pop
xor
pop
inc
sub
sub
jge
out
cmpb
push
inc
jbe
mov
shrb
xchg
xchg
std
lea
hlt
pop
cli
pop
jp
fistpl
lods
push
rolb
or
sahf
repnz
sbb
repnz
sbb
cmc
push
inc
jae
push
mov
jns
push
push
jg
cmpsl
push
rcr
xchg
jbe
repnz
mov
sbb
jmp
mov
xor
add
or
stc
add
mov
add
insb
mov
mov
add
in
push
jmp
test
jno
shll
push
ljmp
and
outsb
loopne
cmpsb
imull
ljmp
inc
mov
cwtl
arpl
adc
xor
dec
xor
pop
mov
shrb
mov
push
sbb
pop
rcr
ss
movb
inc
dec
fs
add
jbe
es
mov
outsl
cmp
gs
aad
jp
into
xchg
rorb
mov
adc
stos
xchg
cmp
mov
shl
xor
mov
repz
jge
add
out
mov
and
mov
imul
cmpsl
xchg
repnz
and
test
cmp
xor
loopne
in
mov
fwait
cmp
xchg
xchg
je
lock
or
ret
mov
fldt
and
pushf
add
cmp
sbb
or
jmp
inc
or
fcoml
xor
push
pop
adc
sub
imul
scas
pop
shlb
jnp
enter
mov
bound
jp
push
adc
xlat
cmp
sub
mov
pusha
ljmp
xchg
push
lock
loop
inc
pop
xchg
mov
jl
add
rorl
jecxz
lahf
sbb
mov
or
xchg
shl
dec
aas
lea
push
xchg
test
mov
push
jp
int3
and
push
mov
ret
les
push
aad
pop
mov
aas
shrb
fdiv
es
inc
icebp
xor
out
ret
xor
into
ret
jnp
mov
jo
ret
lock
xor
lret
adc
rol
fdivrl
jp
push
sub
hlt
out
and
add
mov
push
mov
jecxz
jg
push
add
jae
sub
shll
and
fcomps
or
in
test
sbb
lahf
push
fisttpl
push
push
xchg
push
jae
add
repnz
dec
gs
pop
adc
xor
mov
pusha
test
jae
fimuls
pop
push
mov
outsl
outsb
or
test
sbb
cmp
imul
pusha
dec
mov
sbb
cwtl
sbb
addr16
xlat
lcall
push
repnz
cltd
push
mov
inc
dec
sti
lods
orb
movsb
jno
addr16
std
out
pop
leave
divb
pop
enter
mov
xchg
cmp
scas
daa
and
xor
jg
aam
mov
sub
jmp
mov
movsl
or
orb
pop
jge
in
scas
add
sti
addr16
shrb
cmp
imul
iret
or
adc
jg,pn
jb
cltd
movsb
sbb
sub
push
cld
mov
out
movsb
repnz
movsl
mov
pop
mov
rcll
or
aam
pop
push
inc
push
dec
cmp
ds
fwait
inc
aaa
mov
je
fnstsw
dec
std
xor
add
cmpsl
sbbl
fwait
push
and
pop
xor
lea
scas
pop
dec
xchg
sub
lods
adc
hlt
inc
mov
shrl
lahf
jbe
insb
addr16
loopne
in
ds
mov
sti
out
push
cmp
xchg
test
ja
stos
xchg
mov
sub
mov
push
adc
pop
push
cmp
in
inc
cmc
loop
or
sub
inc
mov
pop
subb
dec
push
jae
add
repnz
mov
sbb
neg
pop
outsl
pop
int3
ljmp
movsl
ffreep
fisubrs
add
sub
shlb
idiv
mov
movsb
dec
push
pop
aaa
pop
lcall
jg
jo
push
xlat
xor
dec
lcall
call
clc
leave
cwtl
shrl
imul
rep
jp
add
sahf
push
sbb
inc
lret
imul
loop
dec
xchg
loop
test
cmp
dec
leave
repz
cmp
mov
mov
push
mov
push
dec
cmp
cs
mov
adc
mov
test
mov
scas
push
idivb
mov
hlt
or
dec
mov
inc
add
pop
mov
clc
leave
ljmp
cmp
cmpsb
pop
push
push
jmp
mov
lret
jbe
in
adc
dec
dec
div
jnp
xchg
sub
into
xor
insl
push
stc
leave
and
iret
adc
enter
out
cmpsl
aaa
dec
jns
stos
sub
mov
jge
fidivs
and
cmp
push
rorl
ljmp
stc
out
push
xchg
cmc
xchg
cmp
xchg
pop
fcoml
inc
mov
xor
mov
cmp
add
or
xlat
xchg
inc
das
xor
hlt
pushf
sbb
cltd
js
mov
ljmp
pop
das
aas
repnz
add
xor
xor
or
cmpsb
das
add
mov
imul
call
pop
stos
add
pop
xlat
add
xlat
das
jge
ret
in
or
sarb
sbb
mov
xchg
insl
push
dec
jb
jne
xchg
dec
adc
cmp
insl
jnp
das
hlt
jg
icebp
or
fistl
mov
mov
pop
lahf
shll
inc
sub
test
mov
aas
scas
out
mov
mov
aaa
cmp
dec
subb
push
push
xor
pop
xor
adc
aaa
jbe
lds
movsl
jnp
repz
pop
cmp
shl
and
mov
pop
or
mov
pop
jns
and
jg
dec
jle
xchg
mov
or
mov
inc
notl
aad
xchg
sub
mov
movsl
jnp
or
lret
arpl
jo
add
test
shr
out
int
aad
test
add
jns
cli
fisubrl
loop
scas
imul
push
das
xchg
insl
jge
js
enter
mov
outsl
adc
jl
int
cwtl
xorl
mov
cli
sub
into
xchg
dec
aam
aam
lret
or
insb
hlt
iret
dec
mov
xchg
fistl
insb
jbe
out
mov
mov
xchg
nop
test
fisubl
pop
sub
xor
xchg
into
sub
mov
bound
mov
fwait
outsl
movl
xor
adc
sbb
test
mov
test
xchg
aam
mov
mov
lds
lock
push
pop
and
adc
fiaddl
arpl
adc
or
jle
add
test
sarb
mov
or
mulb
mov
mov
sbb
jae
xchg
es
sbbb
shr
fisttps
jno
pop
test
loope
sub
dec
jl
push
xlat
push
in
ret
sub
ja
xchg
sub
push
push
enter
jp
cmpsb
in
fisubl
popf
enter
push
and
pop
jb
popa
repz
out
jo
ficompl
pop
popa
mov
dec
imul
leave
add
addr16
adc
fwait
jbe
mov
insl
mov
push
inc
cmpl
sub
push
mov
pop
adc
and
jp
xchg
lcall
adc
test
xchg
call
out
iret
sbb
ja
scas
cmp
out
mov
mov
in
add
outsb
dec
popa
push
ds
pop
mov
faddp
call
or
loop
nop
shl
mov
aas
lods
or
pop
rorl
in
rorb
loop
inc
fcomps
sti
rcl
das
dec
sub
orb
aad
fmull
cmp
add
mov
cld
adc
cmc
dec
cmp
stos
or
mov
mov
inc
push
adcl
fadds
push
inc
xchg
mov
inc
fldl
mov
pop
cmp
sbb
sbb
scas
bswap
xor
cmc
sbb
push
inc
mov
lret
xor
sbb
xor
and
popa
mov
sub
lret
push
nop
sahf
lods
int
pushl
std
mov
pop
adcb
call
xor
lret
cmpb
jne
dec
cltd
adc
fildll
mov
inc
and
imul
add
lods
ficompl
jmp
pop
stos
stos
ret
xor
mov
push
leave
and
ljmp
filds
adc
xor
in
aad
pushf
cmp
stos
jnp
cmp
andb
imul
ret
and
xor
push
dec
lods
jle
aam
pushf
pop
sub
push
mov
push
inc
test
sti
and
xchg
mov
es
mov
jne
xlat
sub
mov
outsl
jg
mov
mov
icebp
add
mov
mov
insl
loopne
mov
adc
lock
ja
dec
iret
pop
divl
pop
push
into
filds
push
push
aam
xchg
and
push
jle
data16
lea
cmpsb
loop
cmc
in
cmp
xor
adc
cmp
inc
mov
nop
dec
dec
nopl
nop
loopne
gs
push
mov
ds
testb
mov
mov
out
or
jbe
mov
jb
dec
fucomp
lcall
cli
test
fidivs
loope
ss
adc
call
xchg
mov
inc
ret
inc
clc
jp
es
pop
cmpsb
pusha
push
mov
enter
imul
aaa
cmpl
mov
sbb
movsb
and
cmp
and
mov
pop
in
lret
and
iret
xchg
or
bnd
add
ret
add
ja
push
ja
mov
and
xchg
or
jbe
jg
or
clc
fwait
xchg
dec
scas
loope
out
pop
add
imul
push
sbb
mov
repnz
or
subl
dec
mov
pop
cmp
rorb
sti
mov
ret
cmp
sbb
mov
fisubrs
and
mov
inc
pop
jno
test
mov
rcll
xchg
jge
xlat
sub
add
xor
or
pop
jo
pop
js
jb
inc
inc
pop
in
cmpsl
popa
out
and
fsubrs
mov
inc
push
loopne
hlt
adc
mov
ljmp
xor
inc
dec
ljmp
cmp
pop
outsl
mov
pop
xor
push
lods
pop
mov
sbb
xlat
mov
mov
jmp
out
mov
or
fdivrl
and
xor
and
mov
lea
dec
or
sbb
nop
push
fisttpll
inc
rcr
fldt
ret
clc
adc
ja
xor
mov
add
jne
pop
mov
jae
mov
test
aad
outsb
pop
lods
pop
xchg
sub
push
lret
or
xchg
int3
xchg
lret
stc
popa
mov
cli
xor
int3
push
cwtl
sarb
repnz
test
sub
xchg
and
sbb
fsubl
cld
je
mov
push
add
lds
or
fwait
lods
sub
or
jecxz
lret
mov
arpl
lock
into
std
hlt
xchg
sub
popf
imull
dec
xchg
in
mov
cwtl
jmp
mov
pop
test
xchg
imul
xchg
sti
adcb
adc
dec
inc
adc
dec
in
out
push
push
call
xor
stos
push
jo
adc
push
inc
lea
or
rorb
sar
push
adc
lock
mov
add
loope
push
dec
mov
sub
int
pop
les
mov
mov
mov
cmp
fistpll
jne
pusha
rol
mov
push
sarb
imul
sub
xchg
call
xor
cwtl
cmpsl
or
jnp
or
imul
adc
aam
jmp
insb
pop
scas
rcrl
pop
int3
mov
imul
outsl
popf
mov
xchg
and
cmc
push
pop
jg
imul
push
outsl
mov
inc
xchg
sahf
sahf
mov
lds
aas
in
jmp
inc
push
lods
and
jo
cmovno
test
test
mov
dec
push
adc
adcl
enter
mov
mov
sbb
mov
pop
subl
jno
mov
xchg
adc
insb
fstpl
sbb
out
dec
xchg
test
mov
push
clc
or
push
enter
lea
sub
pop
repnz
pop
and
fwait
shll
inc
das
pop
divb
outsl
les
push
mov
xor
push
shrl
jne
mov
xor
call
jl
sbb
repz
cmp
mov
adc
ljmp
repz
in
mov
mov
mov
mov
mov
push
dec
cmp
inc
push
mov
inc
mov
xchg
jbe
push
inc
lahf
pop
jae
mov
add
push
sahf
hlt
jmp
lock
or
mov
mov
mov
dec
lahf
out
pop
jg
pushf
daa
hlt
sbb
fisttps
adc
sub
sub
cli
nop
imul
mov
xchg
push
outsb
je
fnstsw
mov
xchg
hlt
add
inc
mov
cmp
rorl
lods
and
in
arpl
lods
adc
out
fucomi
movsl
xor
xorl
adc
das
lods
xor
mov
xchg
lods
push
cmp
in
pop
mov
mov
cmpsl
aad
mov
bound
cmp
cmp
mov
nop
xchg
repz
inc
out
jb
fwait
rorb
mov
mov
mov
fiaddl
inc
add
mov
mov
lock
mov
inc
lret
cmp
out
repnz
adc
push
xchg
jae
mov
mov
or
mov
push
cld
in
add
jno
jnp
ds
mov
rorl
std
xchg
mov
lcall
daa
cli
test
mov
mov
lea
hlt
loope
popf
xor
inc
xlat
outsb
adc
lret
cmp
inc
cmp
sbb
in
jmp
jecxz
stc
xor
push
hlt
or
cmp
inc
cmp
cmpsl
xor
xor
ljmp
sbb
into
xor
lret
les
pop
cltd
or
test
test
push
or
mov
aam
fs
sbb
pusha
mov
rorl
shlb
xor
and
lds
cmp
xor
push
xchg
push
push
jecxz
insl
fnsave
inc
xchg
dec
xor
lcall
aas
inc
fs
dec
sub
cmp
mov
mov
dec
inc
daa
dec
jl
sub
mov
jp
adc
push
xchg
scas
std
ret
sub
mov
call
fdivr
mov
mov
inc
jecxz
std
jecxz
daa
mov
push
pusha
test
aaa
ret
mov
inc
inc
aam
push
cmp
push
movb
mov
orl
pop
pop
gs
mov
sbb
test
ljmp
cli
std
lods
pop
gs
push
dec
mov
mov
out
aam
cmp
pop
cwtl
adc
dec
setp
mov
jae
mov
xor
jo
lret
lret
ljmp
add
cmp
gs
dec
inc
sbb
js
ja
data16
adcl
js
inc
sahf
ja
xor
jle
push
adc
pop
pop
out
dec
fwait
adc
mov
add
lds
push
fldl
and
test
and
xchg
das
test
scas
out
mov
les
sbb
scas
xor
xchg
cmp
test
pop
sbb
jle
flds
pop
dec
mov
inc
movsl
aam
xor
and
mov
pop
push
mov
int
mov
sub
jp
call
inc
fldl2t
ds
fadd
daa
xor
lahf
fsub
dec
jmp
cmp
or
inc
jp
xchg
sti
or
jecxz
stos
dec
or
adc
test
or
aam
fistpl
orb
adc
jnp
sub
andl
int3
xchg
lds
cmpsl
aaa
lret
shrl
sbb
adc
or
mov
bound
pop
in
pop
jb
jmp
push
insl
jle
xchg
lret
pop
arpl
adc
cwtl
ss
nop
fstpt
addl
sbb
sub
rcl
cltd
mov
lahf
mov
mov
push
std
xor
push
adc
js
jb
mov
sub
xor
jle
movsl
jb
jg
dec
sbb
push
sub
rcrl
icebp
mov
lret
cltd
jb
fldenv
dec
mov
push
push
push
icebp
scas
pusha
xchg
dec
and
xchg
lcall
fnstcw
pusha
scas
jg
mov
ret
jno
aaa
cmpsl
leave
jle
jl,pn
cmp
mov
jle
cmp
sbb
out
and
pusha
shlb
push
xchg
idivl
push
adc
fdivs
aas
leave
outsl
lret
xchg
add
mov
cli
scas
sti
xchg
push
pop
rorb
push
xchg
pop
mov
scas
adc
or
or
jle
popl
and
rorb
inc
mov
lods
xchg
daa
xlat
adc
cmp
lock
cmp
insl
in
test
cwtl
sbb
pop
inc
out
repnz
out
lods
sbb
mov
insb
ja
push
pop
pusha
add
jecxz
mov
mov
jge
jns
in
cmpsb
xchg
jle
jno
flds
addr16
icebp
or
movsl
inc
adc
lea
sub
lret
loopne
pushf
adc
stos
sub
aas
jb
dec
jb
loope
out
popf
in
sub
cmp
cmp
pop
cmc
mov
mov
mov
negl
xchg
scas
ds
fisubrs
les
cmpsl
inc
repz
and
dec
adc
sbb
add
xchg
lods
mov
pop
cmp
sbb
push
mov
stos
push
jecxz
mov
lret
push
mov
push
inc
repnz
fwait
xchg
sbb
mov
ficoml
or
repz
frstor
fildll
ret
sbb
lods
fs
cmpxchg
push
cmp
jmp
mov
mov
and
xor
dec
pop
and
push
mov
and
push
ret
mov
dec
rcrb
sub
push
dec
mov
add
xchg
or
sbb
jecxz
pop
stos
out
fmul
nop
in
test
pop
fcomip
es
sub
or
push
xchg
cmp
in
call
pop
sub
and
adc
sbb
enter
outsl
outsl
pop
cmp
cli
cld
sti
and
lods
jecxz
cmp
subl
std
mov
cs
mov
pop
jns
xchg
aas
mov
loopne
fs
pusha
leave
pop
in
lret
or
into
shrl
dec
lcall
mov
pop
inc
cmp
pusha
in
sbb
outsb
jbe
ds
inc
xlat
enter
andl
lret
movsb
shll
and
jno
out
sbb
add
mov
shl
mov
jle
jp
aad
and
jl
sti
sub
mov
sarl
cwtl
mov
lret
decb
mov
jmp
and
pop
nop
mov
aam
push
or
fwait
lods
cwtl
and
outsb
rcll
inc
jl
inc
in
and
lahf
jnp
jp
mov
or
aad
mov
andb
mov
pusha
push
jge
or
sahf
pop
dec
xchg
cmp
mov
cmpsb
adc
fistps
repz
mov
mov
jle
dec
into
jmp
pop
add
cmpl
imull
jnp
jnp
in
dec
addr16
jmp
arpl
es
into
inc
in
inc
leave
ret
sbb
dec
outsl
int
cmp
sbb
ret
and
fisttps
rcl
adc
mov
or
add
xor
test
out
and
lock
xchg
adc
testl
pushf
insb
jmp
imul
jg
stos
lea
jmp
rcrl
bound
dec
xchg
add
les
xchg
sbb
mov
sbb
and
ficomps
lds
push
jns
addr16
sub
inc
mov
jg
xor
movb
mov
in
in
and
sarl
mov
sub
mov
fisttps
out
ljmp
icebp
inc
sub
cli
aam
or
ljmp
sarb
mov
js
sbb
ss
movsl
xor
gs
xor
sahf
pop
loopne
push
mov
popa
pusha
xchg
repz
inc
sti
push
mov
mov
das
ds
movsl
mov
das
pop
mov
inc
mov
xchg
jmp
out
mov
and
std
outsb
jecxz
sti
pop
cltd
add
push
clc
nop
int3
inc
cwtl
cmc
jp
std
dec
and
sbb
xchg
add
pusha
pusha
lock
das
test
out
mov
imul
lea
shl
pop
ret
cmp
out
daa
insl
int
xchg
out
or
xchg
popf
push
inc
mov
je
repnz
mov
test
adc
push
nop
or
mov
nop
inc
jo
out
add
adc
mov
clc
xchg
or
pop
insb
xchg
jl
mov
jp
les
inc
jns
push
mov
stos
shlb
push
pop
cmp
shrl
test
xchg
ret
mov
jg
adc
push
fstpt
inc
popf
imul
ljmp
jno
mov
or
shr
subb
into
aaa
ss
lods
subl
movsb
leave
push
xchg
mov
mov
sbb
sbb
ss
sub
lea
mov
mov
xlat
ret
push
call
aaa
setp
and
das
mov
dec
aas
pusha
ret
lds
aam
xor
out
mov
fsubl
mov
cmp
pop
add
mov
push
xlat
pop
in
dec
loop
sub
add
push
mov
cmpsl
push
pop
popa
movsl
bound
xor
call
and
ds
mov
sub
sub
lods
pusha
mov
cli
mov
jg
mov
sarb
xchg
insb
dec
imul
jbe
adc
std
fcmovbe
and
push
or
mov
cmc
arpl
ficoms
inc
je
cwtl
pop
sub
cmovo
push
sub
and
adc
js
or
inc
fwait
pushl
mov
xchg
jns
cld
int3
fbld
pop
push
mov
mov
int
add
mov
mov
lods
xor
addl
pop
shl
jns
rcll
cmp
jle
adc
inc
pop
fisubrs
xchg
cmp
pushf
pop
sub
ss
lret
adc
scas
aam
sar
subb
or
jl
insb
loop
lahf
inc
insb
loope
mov
nop
into
leave
mov
xchg
sub
mov
jge
je
js
leave
aam
push
ficomps
jl
adc
sahf
popf
int3
fcmove
push
testb
lea
mov
lret
and
movsl
pop
mov
push
add
sbb
push
in
loopne
xchg
stc
adc
ficomps
sbbb
mov
mov
out
add
dec
jecxz
pop
int3
sub
insb
xor
insb
test
insb
push
push
xchg
cwtl
fcmovb
jl
cmp
add
and
aas
xor
jecxz
xchg
cmp
lods
cld
jmp
and
shrl
bnd
xchg
xor
jb
jl
mov
lods
sub
mov
divl
jmp
ret
push
jle
mov
ficoml
jb
cmp
icebp
jl
xor
xlat
jmp
stos
jns
push
and
mov
xchg
in
xchg
push
dec
cld
loop
das
push
pop
adc
mov
pop
in
sbb
das
cmc
cmpsb
inc
lock
fistpl
ss
push
mov
lea
stos
cmp
push
shlb
or
xchg
insl
das
mov
sbb
stos
jmp
lds
and
and
jb
pop
xor
arpl
or
pop
jno
loop
testb
pop
cmpsl
gs
pushf
movl
ja
adc
lahf
movl
outsb
or
dec
mov
add
fwait
pavgw
cmp
daa
adc
sti
cli
pushf
pop
gs
jmp
mov
loope
jp
iret
jle
push
add
push
push
dec
inc
inc
pop
scas
or
loope
adc
cmpsb
out
dec
movsb
push
repnz
mov
or
into
push
repz
test
lock
insb
mov
es
lcall
mov
jecxz
int
or
imul
xor
movsl
popf
inc
xchg
cmpsb
push
aas
adc
bound
sbb
js
jnp
imul
mov
xor
push
pop
sub
shrl
push
inc
mov
push
mov
push
or
movb
test
in
adc
and
push
sti
and
jne
xchg
andl
and
xor
mov
inc
mov
xchg
lret
dec
lret
imul
pop
mov
xor
fidivl
sub
in
jmp
xchg
notl
je
mov
xor
xchg
addr16
adc
loope
loop
push
js
push
repz
sbb
out
lds
cmp
cld
ja
push
sbb
aad
add
push
mov
icebp
inc
xor
bound
fsubl
jg
add
aam
mov
je
xor
insb
shll
sti
pop
add
sbb
inc
sahf
pop
or
into
pushf
or
mov
dec
xlat
inc
aad
mov
jae
int3
lds
pushf
push
movsl
jns
xlat
loopne
pop
mov
inc
pop
inc
mov
adc
jnp
xchg
jle
lock
pop
push
cmc
shll
sbb
cs
gs
pop
and
dec
cmc
pop
xor
dec
push
lea
fsubp
push
fadd
sub
insl
ja
int3
jno
dec
outsl
push
imull
cmpsl
gs
aaa
dec
xchg
scas
dec
outsb
test
sub
sbb
fildll
and
xchg
mov
loope
push
clc
push
jg
and
or
insb
sub
and
pop
or
sub
ljmp
push
adc
add
push
ljmp
mov
inc
cmc
rcl
fwait
hlt
cmp
mov
imulb
hlt
sbb
imul
mov
inc
fwait
xorl
ljmp
jae
scas
aad
js,pn
jo
sub
das
mov
add
arpl
jp
sub
dec
jp
dec
mov
cli
sub
imul
mov
rol
loop
mov
es
popf
and
mov
out
jnp
orb
adc
ss
add
int
sub
sbb
enter
sahf
insb
cmpsl
adc
jae
adc
sahf
and
inc
cmpsb
mov
out
sbb
or
jb
mov
or
sbb
gs
cmpl
decb
pop
add
push
bound
dec
cmp
clc
and
in
test
inc
pop
cmp
pusha
les
and
rclb
test
adc
out
sbb
cwtl
fiadds
mov
ja
push
pushf
sub
or
out
mov
xchg
xchg
mov
mov
xor
adcb
mov
fdivrl
out
loopne
sbb
ret
push
adc
adc
out
lock
sbb
lret
mov
pop
sbb
scas
push
stos
xor
es
push
cmp
pop
cmp
and
cmp
aaa
imul
xchg
cmp
lock
push
movsl
in
lret
dec
out
stos
cmpsb
cmpb
lods
sub
test
icebp
in
out
dec
rorl
jae
lret
outsb
lock
push
sbb
jns
sub
lods
pop
sti
gs
and
jae
sub
negl
mov
xchg
cltd
xor
aam
and
test
pushf
es
sbb
jnp
sbb
into
cmp
mov
jo
mov
xor
leave
xlat
mov
add
or
call
imul
jne
push
push
mov
pushf
shr
ljmp
test
adc
aas
aas
xor
mov
and
mov
mov
out
sbb
xor
jae
scas
sbb
xchg
outsl
mov
sahf
lret
in
je
insb
cld
sbb
nop
pop
jbe
xchg
scas
aam
movsb
filds
sbb
lret
push
xchg
test
cmp
xor
xchg
mov
pop
fmul
arpl
xchg
mov
push
xchg
fistps
push
andb
hlt
inc
insb
inc
dec
jbe
outsl
jbe
xor
dec
insb
push
insl
std
xor
test
pop
lahf
data16
faddp
jl
adc
add
cmpsb
mov
ljmp
arpl
dec
sbb
aad
sub
lods
outsl
mov
adc
xchg
cmpsl
pusha
xchg
aaa
mov
push
out
adc
add
mov
je
pop
xchg
sbbb
mov
ljmp
bound
in
adc
ljmp
les
ja
sub
mov
cmp
adc
mov
dec
imul
lret
rcrb
popf
decb
dec
int
mov
mov
adc
mov
imul
jmp
daa
flds
dec
mov
jne
xor
xchg
mov
cmp
repnz
adc
out
icebp
sub
sbb
mov
filds
into
pusha
in
add
push
lea
ds
jae
repnz
push
enter
fs
jl
lock
sbb
push
xchg
outsl
dec
xchg
sub
das
repz
incb
leave
scas
stos
scas
or
in
mov
jl
fs
test
loope
push
add
in
dec
add
lret
and
cmp
test
inc
in
push
popf
leave
pop
arpl
hlt
or
icebp
lods
lcall
jge
adc
shl
add
ljmp
push
add
pushf
je
sbb
lret
fs
xchg
push
jno
push
sub
outsl
inc
addr16
bnd
int
pushf
fwait
insb
and
add
insl
push
mov
xchg
loopne
jl
gs
cltd
jg
push
movsb
cli
aad
xchg
addb
xor
repz
add
mov
cmpsl
jmp
es
push
pop
ret
mulb
ret
dec
movl
js
js
test
pop
shll
mov
data16
mov
stc
cmp
push
sbb
push
cmp
popa
fbld
std
fstpt
aas
dec
sti
mov
xchg
enter
out
xchg
dec
jecxz
xor
les
shrl
shrl
pop
fyl2xp1
adc
std
add
push
lea
xchg
cmp
gs
jecxz
and
mov
pop
stc
test
jne
sbb
inc
dec
mov
sahf
push
dec
jp
pop
jnp
ret
xchg
in
cmp
adc
pop
ds
lret
insb
sbb
icebp
das
or
xchg
add
gs
scas
jne
das
mov
dec
add
pop
ror
dec
into
xlat
jo
or
pop
loopne
repz
cltd
shr
push
insb
pop
test
or
sbb
scas
cmp
shll
out
dec
mov
inc
jns
lods
cmp
sti
pushf
lcall
xor
push
jg
or
inc
adc
inc
pop
lret
in
jmp
mov
mov
lahf
ret
adc
repnz
adc
and
mov
scas
sahf
in
jl
ljmp
imul
repz
sub
movl
out
jb
xor
sub
iret
push
and
mov
jbe
lock
fwait
rcr
int3
cmpsl
add
xchg
pop
jmp
xchg
inc
stos
or
les
je
jo
imul
mov
aas
mul
stos
mov
adcl
addb
jge
sbb
cmc
lahf
inc
movsl
and
outsl
push
loope
popa
test
pusha
ret
mov
out
aas
xchg
or
loope
imul
pop
rolb
mov
sub
out
pop
shrl
insl
mov
jno
popa
sub
popa
jmp
inc
test
sbb
jns
std
jge
jne
repnz
push
xchg
add
sbb
jecxz
jmp
adc
add
lods
jne
sub
lahf
inc
adc
push
mov
out
sbb
xor
pusha
icebp
cmp
mov
push
mov
flds
insl
gs
jno
ds
inc
in
cltd
cmc
iret
xchg
mov
jbe
mov
sbb
cmp
mov
xor
ret
add
mov
pop
fstpt
mov
mov
loope
daa
mov
jecxz
ss
idivl
mov
and
movsw
push
cmpsb
pop
jle
or
sub
stos
repz
xchg
cltd
popa
push
call
adc
xorb
lahf
and
dec
fstp
aas
test
repz
cmp
out
ss
insl
dec
mov
and
xchg
mov
mov
mov
stc
adcb
mov
push
movsb
push
push
jb
popf
les
in
adc
inc
lods
push
cmp
jnp
test
dec
push
inc
adc
out
mov
ja
or
jbe
lods
jecxz
jge
cmp
adc
ficoms
out
xorl
pop
sbb
cmp
pop
mov
jge
xor
sub
pop
xchg
add
or
mov
rcrb
insb
scas
push
add
stos
add
nop
enter
jns
jno
mov
sbb
test
pop
outsb
mov
jmp
aaa
js
mov
subl
mov
loop
repnz
cltd
mov
fisubs
lds
cmovl
pop
scas
outsl
mov
add
ljmp
lahf
fidivrl
idiv
adc
pop
push
sahf
in
into
mov
decl
mov
sub
fwait
lret
push
aaa
mov
push
lods
and
and
test
mov
mulb
xchg
mov
test
adc
repz
jne
cmpsl
loope
xor
cmp
inc
int
pop
test
jae
push
ds
mov
repnz
jge
sbb
lret
js
mov
sub
lret
push
fucomip
cmp
cmp
mov
rolb
or
xlat
add
test
jmp
shrb
ret
les
nop
je
paddd
pop
jecxz
in
in
lds
lahf
jne
call
inc
sub
rorb
dec
xchg
outsl
rcrb
orb
ret
adc
push
jmp
lods
test
imul
shlb
mov
mov
dec
dec
mov
fcoml
and
insb
aad
scas
cs
lds
hlt
push
sti
incb
rclb
add
ss
repz
cmpsl
and
sub
insl
xchg
daa
int
icebp
movsl
lock
jmp
mov
out
push
addb
testl
out
inc
pushf
popf
adc
out
or
int
lret
dec
je
lahf
jmp
lock
std
leave
sub
cmp
and
lods
xchg
rcrb
xchg
push
add
sub
jmp
sar
sti
sub
loope
jbe
sbb
cmp
paddusw
out
loope
push
xlat
lds
mov
mov
cwtl
jle
push
outsb
cltd
mov
lock
rol
shll
ljmp
cltd
push
pushf
dec
ss
and
fimuls
fs
inc
test
mov
mov
aam
cltd
mov
pop
aas
mov
stc
xor
mov
ret
inc
pop
into
lcall
mov
outsl
scas
imul
cs
xor
mov
fimuls
sub
sbb
mov
cltd
xor
pop
xchg
fnstsw
push
pop
dec
adcb
and
or
stc
inc
pop
jno
cmp
scas
pushf
ss
int
insl
cmp
xchg
or
je
mov
mov
mov
popa
insb
enter
mov
mov
inc
or
mov
aaa
lea
in
jmp
push
pop
into
push
mov
fisubs
adc
xchg
cmp
jl
sbb
push
repz
fwait
arpl
out
iret
in
imul
scas
shrl
insl
dec
loope
cmp
je
jae
loop
paddusw
adc
mov
jno
ret
push
and
maxps
sub
lods
push
stos
into
and
outsl
jmp
and
popa
mov
loopne
repnz
and
add
mov
int3
ffree
xor
sub
dec
cmp
je
jo
or
in
push
test
jle
jp
sbbb
insl
cmp
stc
mov
dec
or
mov
inc
mov
adc
fistpl
int3
xchg
add
ficompl
pop
aaa
add
adc
sbb
jl
dec
and
jo
icebp
xor
call
std
fsubrs
movsl
push
push
push
xchg
fsub
enter
dec
in
dec
xor
in
mov
icebp
adc
mov
mov
or
and
mov
fst
mov
sbb
mov
pop
in
pop
pop
pop
add
and
jle
lret
adc
shrl
stc
arpl
fmulp
jp
leave
sbbl
stos
mov
and
adc
fdivr
loope
fsubs
mov
push
call
push
jnp
xorl
push
jb
jmp
sahf
scas
cltd
in
std
sub
sbb
gs
jns
insb
adc
ret
and
or
jl
loope
or
sbb
int3
push
add
add
daa
sbb
shlb
sti
mov
out
aad
mov
shrb
xlat
inc
loope
ret
push
mov
mov
call
loopne
out
xchg
mov
daa
aaa
ficoml
les
int
jg
add
sbbb
pusha
out
push
aad
pop
pop
or
xor
xchg
pop
shll
repnz
pop
mov
aam
leave
inc
mov
hlt
lret
xor
mov
mov
loopne
mov
lret
mov
push
aam
fs
add
inc
xchg
in
mov
dec
or
popa
cmpsb
adc
adc
xchg
xchg
mov
push
sbb
outsl
enter
mov
fmuls
jp
jg
sub
dec
sarl
cwtl
dec
mov
and
jno
lret
pop
inc
jg
xor
inc
pop
lods
xchg
sub
dec
push
pushf
into
xor
fstl
push
dec
and
sahf
ds
sub
or
mov
sbb
loope
leave
in
jae
rcrb
loope
out
cmp
dec
push
mov
xor
nop
pop
js
add
cmc
sar
dec
lock
jle
dec
enter
mov
cmp
adc
adc
cs
jns
sub
mov
mov
mov
inc
jne
cmp
inc
push
jge
dec
nop
enter
add
pushf
xchg
jb
mov
bound
cmp
lods
jl
in
inc
sbb
cmp
cmpsl
xor
xor
fisubrl
mov
out
stos
mov
cmp
divl
addb
jp
mov
jo
inc
imulb
daa
sbb
sti
push
xchg
clc
insb
cli
mov
pop
and
into
xor
mov
inc
loope
jecxz
dec
pop
adc
hlt
aad
adc
scas
lock
or
mov
xor
test
loope
add
fucomp
imul
cmp
fistl
mov
cmp
fldenv
mov
push
sbb
mov
aas
sar
mov
test
orl
test
dec
jmp
or
xchg
sar
lret
iret
xchg
sub
jno
mov
inc
loop
rol
and
mov
and
scas
mov
scas
or
dec
lret
jmp
add
xchg
cmp
push
into
mov
fsubs
push
push
cmp
cmp
repnz
testl
out
push
and
cmpsb
rclb
shll
jnp
push
in
scas
ss
clc
add
imul
cmp
les
iret
push
adc
adc
jge
mov
xor
clc
and
cli
or
cli
mov
or
fidivrl
sti
xlat
sub
hlt
pop
inc
mov
repz
lods
mov
inc
out
clc
adc
jae
movsb
adc
mov
inc
pop
out
adc
or
xchg
inc
loope
lea
push
or
and
push
mov
in
lret
inc
int
das
adc
inc
in
mov
fcoms
jg
dec
xor
fbstp
ljmp
add
and
icebp
and
es
or
add
and
mov
xchg
lock
test
test
adc
in
cwtl
mov
outsb
nop
das
push
push
xor
out
adc
imul
sbb
scas
sub
or
je
insl
inc
add
cmp
fs
push
add
cmp
cmp
add
dec
push
cld
adc
mov
pushf
js
adc
dec
cmpsb
cli
addb
sub
cs
divb
xchg
rcll
add
jge
into
fistpll
lock
cmc
push
xor
loope
clc
mov
test
movsl
arpl
xor
sub
dec
sbb
mov
js
jne
jnp
sub
xchg
jae
jno
insl
push
pop
mov
gs
shrb
into
lods
mov
sarl
and
imul
test
mov
fcompl
cmp
and
dec
fwait
nop
cmp
lcall
mov
cs
sbbl
xchg
add
jg
dec
mov
cltd
shlb
test
jg
inc
jecxz
sbb
mov
movsl
dec
jge
sbb
aaa
imul
orb
dec
cmpsb
mov
in
lds
repnz
push
dec
or
out
mov
push
fwait
pop
mov
jbe
mov
paddq
adc
or
adc
cs
stc
std
std
lret
sub
xchg
fwait
sbb
shrl
out
and
inc
addl
pop
jecxz
xlat
jmp
cltd
inc
mov
pop
lret
je
lahf
adc
jb
lea
xchg
xor
fsubp
or
xor
bound
lods
aad
mov
push
push
mov
lods
dec
add
add
dec
mov
jns
cmp
rorl
dec
mov
rcrl
inc
cmp
mov
inc
sbb
test
scas
shlb
inc
sbb
sbb
xor
ja
mov
add
imulb
out
test
clc
cmp
mov
int3
stos
pop
and
sahf
sarl
loope
mov
add
mov
mov
data16
shrb
cmpsb
std
scas
mov
fisubl
rcrl
cmp
les
xchg
sbb
aas
int
cwtl
ss
scas
xchg
xchg
xchg
push
pop
ret
dec
and
mov
lcall
cmp
sti
ret
pop
inc
fmul
mov
pusha
scas
xorb
movhps
mov
cli
pop
push
call
and
fadds
pop
inc
lock
cli
or
dec
mov
sub
add
outsl
fisttps
cmp
push
xor
and
push
in
and
clc
jmp
leave
repnz
mulb
cltd
or
andl
or
int
mov
or
inc
fwait
mov
out
sbbb
cmp
sub
imul
arpl
sbb
xor
mov
insl
in
or
pop
insb
xchg
lods
xchg
mov
pop
cwtl
rcrb
rcrb
inc
cs
aas
subl
sub
leave
cmp
mov
mov
fwait
rcrl
push
shrb
sbb
sub
test
inc
sbb
xchg
jmp
clc
pop
gs
ret
sub
push
sbb
ja
std
add
clc
cmp
mov
aam
sub
in
adc
cmp
data16
add
faddp
xrelease
push
stos
out
pushf
test
inc
xchg
outsl
aas
mov
cld
sub
mov
outsb
dec
mov
icebp
adc
cwtl
dec
call
cmp
push
mov
xlat
add
add
das
adc
aaa
jae
push
pop
mov
bound
cmp
sbb
mov
das
mov
test
clc
out
sbb
subl
in
fwait
adc
jp
fimull
stos
int3
xor
out
mov
add
jg
data16
inc
lds
mov
test
fwait
inc
dec
insb
and
lret
jg
sbb
mov
cmp
jb
xchg
ret
jecxz
sarl
push
or
mov
subl
mov
push
jne
cmpsl
cmp
pushl
cli
or
adc
rcrl
repnz
sub
dec
movsl
fcoml
aaa
les
out
xchg
inc
imul
cwtl
mov
cmp
adc
inc
imul
int3
lods
push
sti
mov
jo
push
outsb
fmull
cmp
mov
fistl
mov
sub
test
repz
and
insb
mov
into
mov
mov
dec
mov
cmp
or
in
add
dec
lret
push
sub
add
push
xchg
int3
xchg
out
jae
fnclex
push
jg
mov
and
pop
sub
fs
int3
std
xchg
or
dec
in
movsb
popa
jle
in
int3
mov
dec
mov
push
ret
xor
pop
stos
sti
push
jns
rorl
mov
mov
xchg
push
adc
leave
jno
jo
inc
loope
adc
jb
fstpl
xchg
and
repz
aam
and
std
or
cmp
sub
out
cmp
sub
add
dec
jecxz
pop
sub
lods
or
test
cwtl
mov
push
mov
sbb
cmp
mov
dec
int
add
or
pop
imul
andb
pop
mov
testl
lcall
fwait
leave
rol
inc
daa
inc
rclb
cmc
or
mov
push
add
cltd
add
and
mov
in
stos
stos
test
jge
js
inc
pop
call
in
cmpsl
sbb
adc
mov
xchg
aas
mov
shrl
pop
inc
lock
dec
pop
mov
sub
sub
fcompl
ds
pop
xchg
xchg
push
inc
daa
dec
fistpl
stos
jno
stc
dec
and
and
mov
mov
js
xchg
test
pop
mov
add
or
xchg
imul
mov
mov
inc
sbb
mov
jge
cmpsl
jp
das
stos
leave
pusha
mov
push
and
addr16
mov
push
fdivrp
loopne
dec
mov
cmp
push
push
cwtl
int
xorl
pop
stc
ffreep
nop
sub
jle
and
push
addb
pop
mulb
add
aam
int
nop
adc
xchg
mov
push
outsb
test
ljmp
aas
mov
lret
xchg
call
fstpl
xchg
into
jg
ds
dec
xchg
fmull
mov
pop
jmp
cltd
pop
arpl
jnp
inc
fwait
cltd
sbb
xorl
jno
cmc
or
dec
fcoml
adc
imull
dec
mov
push
mov
imul
aaa
adc
lcall
pop
insl
bound
into
adc
sub
les
out
xchg
repnz
imul
adc
jl
xchg
fidivs
xchg
insl
or
adc
aam
mov
push
fiadds
mov
inc
inc
adc
fwait
and
inc
lock
ja
outsb
test
sub
insl
out
push
inc
jb
lea
jns
inc
pop
jmp
lcall
mov
jge
outsb
push
hlt
jecxz
movsl
dec
inc
jmp
or
push
add
fmuls
fldenv
in
mov
insl
pop
sub
inc
faddl
cltd
les
mov
fsubrs
pop
dec
dec
inc
xor
mov
push
hlt
je
std
repnz
cli
addr16
pop
inc
in
fidivl
jle
enter
out
dec
cmp
sub
inc
mov
data16
mov
cmp
adc
push
lret
fists
mov
jo
nop
call
pop
push
icebp
test
push
or
fisubrl
or
in
jge
loopne
ds
ljmp
repz
jg
neg
inc
pop
out
xchg
sbbl
test
xor
lods
pop
sarl
and
push
mov
push
jae
lods
xor
fnsave
cmp
xchg
mov
push
stos
cmpsl
out
dec
clc
mulb
movsl
out
push
jge
pusha
and
xchg
mov
subps
pop
iret
and
and
movsb
jp
jbe
adc
and
mov
loope
jmp
xor
adc
jecxz
mov
adc
push
jecxz
mov
dec
cmp
les
mov
pop
jnp
gs
mov
push
fbld
pop
push
dec
jmp
ja
dec
test
test
scas
jns
adc
roll
xchg
xchg
mov
fldcw
ret
adc
inc
les
xchg
xor
lds
sub
test
jno
cmpl
movsl
pop
movsl
dec
or
lcall
fidivl
sub
xor
push
aaa
addr16
sbb
push
inc
rorb
sti
add
xor
fistl
mov
pop
sbb
fsts
in
hlt
mov
stos
popf
fcom
enter
pop
inc
sbb
mov
ret
xchg
addr16
shlb
cmpsl
sbb
cs
mov
adc
sub
mov
stos
and
inc
jl
push
test
arpl
inc
pusha
movsb
sbb
lea
or
cmc
and
push
pushf
cltd
pop
xor
xchg
or
sbb
in
dec
add
ret
aaa
shlb
hlt
dec
repnz
cmpsb
pop
fs
inc
lock
pusha
adc
mov
sub
pop
push
xor
dec
lcall
mov
rclb
sbb
wbinvd
push
mov
cwtl
sub
mov
leave
mov
push
std
jecxz
stos
les
out
ret
push
fs
ss
out
add
inc
mov
insl
leave
add
xchg
push
lahf
repnz
mov
js
xchg
add
add
pop
mov
es
inc
loopne
mov
dec
ja
data16
jl
xchg
mov
xchg
sbb
test
or
jbe
shrb
jge
sar
mov
mov
mov
scas
arpl
icebp
ja
dec
or
daa
add
fistpll
xor
sbb
cmp
mov
xchg
aam
cmp
mov
aam
imul
or
cmpsl
mov
rol
xor
gs
test
xor
add
cmp
stc
insl
mov
push
inc
adc
pushf
or
movsl
xor
push
fcmovbe
sbb
insl
jp
out
mov
xchg
fwait
mov
out
inc
rorl
mov
cs
mov
cmp
daa
mov
push
incl
cld
jne
das
movsb
mov
inc
lcall
dec
sbb
in
shrb
lods
iret
int3
jge
mov
or
inc
cwtl
jns
out
add
repz
jne
popa
jmp
arpl
insl
fnstenv
sbb
jne
mov
shrl
scas
cmpsl
lahf
mov
cmp
dec
ljmp
dec
mul
sub
stc
inc
push
mov
jl
pop
push
pop
fdivs
adc
or
test
or
push
xchg
ret
fiaddl
insb
cmpsb
cmp
or
es
repz
or
mov
stos
stc
enter
dec
push
fdiv
aaa
test
or
push
ja
inc
mov
sub
dec
cmpsl
insl
dec
cmp
lds
sbb
mov
and
sbb
xor
rorb
test
shlb
nop
add
xchg
out
push
cmc
xchg
repz
mov
mov
pop
jae
test
insl
cmp
inc
sbbb
sub
ror
fists
mov
test
pop
fs
jle
jb
scas
mov
inc
addr16
insb
ficompl
cmc
movsl
inc
push
and
ficompl
sti
add
loope
jnp
mov
rcrb
stos
jns
cwtl
push
xor
mov
mov
shl
mov
int3
mov
xor
mov
dec
movsb
xlat
sub
xor
xor
and
push
fstpl
mov
lahf
inc
popa
mov
adc
lock
xchg
pop
jbe
test
fmuls
xchg
cmp
pop
in
mov
rcrb
mov
lods
pop
sarl
xchg
xchg
jge
loope
imul
cmp
fimuls
jmp
stos
xor
add
push
loop
pop
bound
jg
sbb
fnstcw
sub
jle
aam
push
lock
adc
ja
mov
adc
fisubl
mov
fdivp
fcomps
aad
sub
push
ljmp
xor
add
jns
jno
mov
js
pushf
scas
jg
out
test
inc
jno
loope
jnp
ja
mov
jns
dec
test
pop
enter
lods
sub
mov
aas
jmp
outsl
mov
jno
and
xor
lcall
xor
ss
xchg
lods
or
and
xchg
iret
cli
mov
sub
jp
sub
fnstsw
sarb
pushf
jmp
dec
pop
pusha
mov
hlt
adcb
push
sub
xor
ss
add
jae
cmp
and
sar
push
mov
inc
pop
pusha
adc
and
sub
clc
repnz
out
add
xchg
xchg
jecxz
arpl
push
daa
cli
dec
lcall
mov
xchg
mov
fsub
jb
jne
out
fwait
insb
jae,pn
fistpl
pop
or
xor
sub
jmp
call
popf
sub
xchg
jae
out
adcb
cmpsl
arpl
packsswb
scas
sbb
push
prefetch
inc
sbb
das
daa
lds
repz
lods
bound
int
pop
cmp
push
daa
adc
sub
out
inc
or
repnz
dec
mov
sbb
pop
int
mov
es
outsb
jnp
mov
add
cmp
sub
jne
and
pushl
inc
data16
repnz
push
xchg
mov
dec
sbb
jno
jl
jmp
cmpsb
adc
mov
dec
jge
fstpl
mov
subb
leave
xor
sub
mov
scas
mov
or
xlat
mov
lcall
scas
dec
in
jae
pop
sbb
jns
dec
loop
stos
mov
sub
push
ss
stc
and
incl
mov
adc
adc
stos
inc
and
lods
push
loop
or
test
loope
out
js
clc
sbb
push
repz
ret
cmp
shlb
addr16
and
pop
jns
sbbl
or
cmp
jmp
xchg
cmpb
xor
xchg
rclb
add
ret
or
adc
jne
mov
loope
cmp
mov
mov
stc
jns
xchg
xchg
arpl
arpl
in
lahf
mov
xchg
dec
out
cmp
loope
std
call
inc
shl
mov
ds
xchg
mov
ret
jg
es
or
into
mov
add
jmp
sbbb
popf
inc
xchg
cwtl
lock
lods
movsb
and
and
in
leave
popa
xchg
cmc
mov
push
pop
in
cmp
pop
mov
mov
repz
sub
cmp
movsl
adc
mov
push
je
ja
mov
push
test
sbb
shr
popaw
mov
sbb
fnstsw
jle
cmpsb
xchg
inc
shll
hlt
jno
xor
insb
adc
xor
cmpsl
xchg
mov
mov
repz
rorb
cwtl
and
aam
addl
cmpsl
pop
jge
outsl
movb
in
jl
fcmovb
jmp
dec
ss
stc
xchg
dec
and
movsb
inc
sbb
adc
mov
sahf
fs
test
lret
sti
and
leave
stos
shrb
out
ds
jg
ret
out
outsb
and
push
dec
mov
cwtl
inc
mov
into
push
xchg
lods
arpl
pop
push
lahf
mov
jmp
fimuls
or
and
add
pop
adc
jbe
fwait
mov
arpl
icebp
adc
hlt
push
ficoms
fwait
dec
add
mov
xchg
push
mov
incb
ljmp
push
pop
pop
aam
mov
lea
pop
mov
stos
scas
xchg
fwait
push
pop
pop
aas
jp
movsb
pop
repz
mov
mov
ret
pop
das
adc
lcall
cmp
or
data16
mov
ret
add
testb
aas
mov
or
xchg
xchg
adc
into
jb
lcall
jmp
adc
aad
mov
bound
arpl
jb
notl
dec
inc
cmc
jbe
inc
aas
jns
aad
movsl
jne
aam
insl
cvtps2pi
or
fwait
jmp
fidivrl
or
pop
adc
cmpsl
pop
testb
push
xchg
int3
pop
lcall
movswl
ficoms
jnp
lods
xor
je
pop
mov
in
jae
insb
movsb
into
ljmp
imul
outsl
and
pop
mov
add
loopne
jae
out
iret
add
sti
ret
test
pop
sub
das
xor
int
sbb
inc
das
mov
call
jle
inc
das
mov
inc
cmp
sbb
aad
nop
mov
inc
gs
jmp
jle
pandn
sbb
mov
or
xor
cs
jmp
sub
xchg
dec
out
cmp
loopne
sbb
mov
push
cltd
in
or
jae
or
roll
jl
jae
aad
adc
mov
sbb
mov
test
arpl
loopne
in
dec
dec
enter
cmpb
lret
adc
rcr
pop
jns
arpl
test
mov
aam
imul
std
pop
adc
or
inc
shlb
pop
mul
cwtl
push
jno
movsb
scas
jns
aaa
aaa
outsb
sbb
outsl
jp
xchg
ds
in
sbb
test
das
rclb
lods
rolb
fidivl
mov
popf
jae
mov
and
push
push
loope
js
fcmovbe
xchg
je
xor
enter
aam
loope
rclb
xchg
inc
and
andl
ljmp
or
fwait
addr16
lea
sahf
mulb
sahf
or
iret
xchg
sbb
aad
add
pusha
js
jnp
adcl
mov
lret
jp
in
jl
mov
dec
fldenv
outsl
pop
mov
mov
xlat
sub
test
es
adc
bound
in
lea
add
push
mov
mov
xchg
in
inc
sti
mov
fwait
cmp
add
dec
xor
lcall
and
xor
mov
dec
fstps
scas
mov
mov
sbb
ret
pop
xlat
popf
int3
adc
repz
jmp
leave
pop
add
ret
and
push
jle
mov
or
fwait
jb
push
adc
push
dec
jle
negb
dec
in
sahf
or
push
sub
inc
je
testb
jbe
into
bound
jg
mov
add
jp
stos
cmp
repnz
rcrl
adc
mov
cs
xor
jmp
sub
mov
je
stos
out
xchg
int
add
and
jmp
cmpsl
mov
push
test
sub
and
adc
mov
mov
xor
aam
scas
lahf
inc
pop
mov
pop
test
sbb
movaps
aaa
jnp
je
loopne
sarl
hlt
add
bound
jmp
adc
mov
fldenv
iret
pop
xor
stos
scas
dec
aad
push
lock
mov
sub
inc
das
sub
xor
daa
lret
mov
cmp
sub
push
xor
scas
mov
sub
jp
adc
inc
shl
mov
pop
jmp
or
mov
sbb
jp
les
cmp
jae
cmp
and
or
mov
mov
add
std
xchg
sbb
pop
decl
insl
mov
fwait
and
test
fisubrs
aad
xor
pop
scas
lea
mov
insb
xchg
add
in
mov
mov
jg
out
lods
mov
xchg
jecxz
jnp
ss
add
xor
test
adc
call
pop
into
cld
mov
pop
ds
mov
shll
sbb
add
in
xchg
mov
inc
add
sub
mov
test
popf
mov
xlat
jge
lds
pop
hlt
mov
xor
insl
lahf
xchg
or
scas
ja
fwait
push
push
add
sub
sti
mov
fiaddl
in
outsb
mov
mov
or
cmc
rcll
push
out
andb
adc
loopne
popl
cmpsl
inc
cmp
and
std
loope
inc
cld
xchg
jnp
dec
test
and
mov
out
std
inc
pop
adc
pop
data16
sub
dec
or
mov
pop
cs
rcr
lea
pop
nop
inc
shlb
sbb
push
int
mov
mov
movsl
add
and
xorl
cwtl
fstpl
lea
jg
xor
xchg
rolb
xor
out
iret
add
leave
call
leave
inc
loopne
bound
jns
xchg
mov
movsl
inc
andl
imul
insb
adc
mov
movsl
lods
in
repz
adc
mov
notl
mov
jmp
inc
sbb
jbe
popf
lcall
jmp
jno
mov
cs
xor
mov
pop
jae
rcrb
sub
shl
repz
dec
loop
xorl
test
push
adc
fwait
cwtl
sub
sub
adc
fs
data16
js
mov
mov
xlat
push
mov
insl
aas
pop
es
call
pop
sbbl
pop
cmp
out
push
sub
aaa
push
pushf
inc
mov
push
xor
sbb
stc
and
lret
sub
pushf
adc
dec
mov
and
mov
jmp
mov
inc
scas
jbe
dec
mov
or
jg
fldenv
test
fldl
dec
out
shl
pop
push
enter
inc
sarb
inc
mov
inc
mov
or
pop
lcall
hlt
adc
popf
xchg
push
mov
das
jl
orl
fnsave
hlt
and
pop
fisttps
lock
and
out
movsl
jp
js
and
xor
xorl
gs
dec
or
adc
sbb
pusha
or
fimuls
in
cmp
dec
jmp
add
int3
lds
cmc
adcb
and
pop
in
notl
fdivrp
mov
dec
hlt
rol
hlt
je
fisubrs
mov
test
sub
scas
test
cmc
xchg
push
daa
bound
loop
sbb
sti
orl
mov
pop
fistps
leave
push
into
ja,pt
xchg
add
jge
popf
addr16
repnz
mov
sarb
ljmp
dec
out
jle
leave
push
mov
arpl
dec
lret
xchg
mov
outsb
push
cmpsb
xchg
ss
lods
sbb
out
dec
stos
test
call
inc
jp
lods
mov
enter
rcl
fcomps
sub
sub
clc
aaa
lds
mov
inc
add
push
push
cmp
dec
mov
add
test
sub
mov
paddw
jae
xchg
fisttpll
ret
xchg
cmpsl
xlat
add
xor
dec
xchg
add
cmp
aaa
rorl
mov
lds
mov
hlt
fcmovnb
ljmp
mov
sti
xchg
pop
sbb
or
inc
es
cld
xchg
mov
or
xor
jl
cmpsb
or
or
gs
dec
out
and
bound
dec
push
scas
dec
and
ret
push
ja
or
fmuls
pusha
cmp
cmpsb
addr16
jecxz
mov
lea
sbb
lods
inc
out
call
cli
subb
mov
push
pop
mov
adcl
std
lcall
lds
sbb
or
pop
xor
ss
pop
mov
sub
inc
push
pop
loope
sub
jecxz
xor
int3
movsl
shrl
mov
adc
sbb
mov
rorb
sbb
xchg
inc
and
iret
out
sub
iret
lret
jb
and
pop
icebp
jbe
dec
lock
ffree
mov
mov
es
aaa
or
rcl
das
lret
jne
xor
ljmp
jb
mov
push
push
cmc
ss
jno
add
mov
or
aad
sub
mov
lcall
cmpsl
rol
fidivrs
cmp
fistpl
pop
shr
jno
outsl
pop
stc
xchg
mov
pop
push
lret
xchg
call
ret
dec
dec
movsb
scas
inc
push
and
add
mull
fsts
mov
ret
cmc
data16
pop
adc
sahf
or
push
loop
jmp
jge
es
repnz
mov
decl
cld
dec
or
test
addr16
lcall
inc
dec
jmp
mov
sub
mov
and
scas
pusha
in
rorb
fnstenv
or
mov
inc
fwait
es
dec
dec
xchg
xor
mov
loop
ret
mov
xchg
dec
mov
addb
outsl
out
push
paddsw
nop
push
sbb
mov
jecxz
fwait
hlt
xchg
cmp
pop
jle
cmp
dec
add
insl
lret
add
fcompl
and
adc
xchg
fwait
sarl
cmp
lods
pop
push
faddl
add
push
push
fdiv
lret
ret
sbb
loopew
cwtl
int
add
adc
xorb
les
fwait
xor
sbb
mov
pop
mov
adc
mov
ds
flds
cmp
xchg
or
lret
mov
xor
dec
lret
adc
mov
xchg
fnsave
sub
push
jbe
or
mov
cmp
mov
xchg
sub
imul
lret
jg
out
popf
mov
div
scas
xchg
stc
jo
add
sub
loope
mov
cmp
xlat
push
fcmovnbe
and
mov
mov
sub
fimull
hlt
ja
jge
movsl
popf
lret
shr
cmpsl
aad
jns
sub
mov
mov
or
push
sarb
adcb
test
das
aaa
roll
add
fisubl
repnz
xor
dec
ret
mov
or
cmp
push
or
cmp
addr16
jmp
lcall
push
or
add
les
jp
loope
adc
xor
fistpl
es
adc
sbb
or
js
or
jle
xchg
insb
adc
stc
mov
pop
xchg
xchg
mov
ja
lahf
cmpsl
dec
lret
and
xor
jp
cmpsl
cs
out
push
insl
and
push
pushf
icebp
inc
ljmp
or
data16
sub
out
sbb
sbb
es
lea
push
repz
push
sti
mov
fs
stc
and
sbb
pop
hlt
sub
mov
loope
fstpl
pop
fildll
adc
inc
test
jecxz
xor
jne
cltd
aad
cmp
push
sbb
rorb
or
push
lret
lcall
pop
xchg
push
jo
hlt
dec
add
stos
jmp
lahf
jnp
mov
jge
mov
pop
add
push
int
push
lock
lret
hlt
iret
jmp
cmpsb
cmp
int
ror
jb
mov
mov
add
jg
jb
aad
mov
inc
adc
mov
xchg
sub
lret
and
dec
test
inc
push
sbb
ljmp
xchg
cmp
lret
leave
and
xor
jp
movsl
leave
invd
ljmp
cltd
fwait
jns
scas
dec
outsb
das
ret
mov
rclb
rcr
rol
cld
mov
lret
ss
mov
push
adc
movsb
aam
fldcw
cwtl
subl
movsb
les
loopne
ss
adc
aam
sub
in
gs
imul
xchg
push
xor
or
adc
xchg
inc
fistps
fwait
sbb
data16
xor
sub
sub
outsb
cmpsb
mov
mov
adc
xor
icebp
jns
in
sbb
test
xor
repz
or
dec
sub
imul
jp
test
shl
pop
sub
cmpb
addb
loope
cmp
in
ja
das
or
jp
pop
xchg
xorl
sub
aaa
pop
popa
fsts
jnp
les
sub
in
jg
push
lret
loope
adc
int
jmp
test
out
rclb
cwtl
mov
fidivrs
add
ds
pop
test
cmpsb
pop
and
scas
ljmp
pop
cmp
mov
out
shlb
rcr
loop
jnp
imulb
or
mov
mov
fwait
int3
movntps
leave
leave
dec
stos
jmp
jbe
push
lret
jae
stos
rorl
xor
rcl
jl
mov
test
pop
sub
inc
cmp
mov
ret
sub
bound
ljmp
ja
leave
ljmp
in
shl
sbb
dec
scas
out
xchg
bound
xor
test
jo
adc
xorb
and
pop
push
je
sub
xchg
or
imul
xor
xchg
xchg
or
dec
scas
lahf
adc
loop
jle
popa
loope
mov
sbb
cmpsl
sahf
cmp
sub
add
iret
repz
jl
jns
adc
orb
push
xor
push
mov
jb
sub
mov
push
test
int
or
or
cwtl
pop
pop
enter
inc
inc
inc
xor
adc
ss
jb
lahf
cltd
add
jnp
out
jae
lcall
inc
fiadds
rcrl
loope
jns
adc
pop
push
and
ss
test
mov
xor
or
ss
adc
popa
lea
ss
pushf
or
dec
sbb
or
lds
mov
testl
mov
das
push
shufps
rcl
sbb
mov
nopl
shr
jecxz
cmc
aad
push
loop
mov
mov
pop
out
and
xlat
sbbl
cmp
sarl
outsl
push
mov
movsl
aaa
pop
lods
or
push
lds
or
cmp
jb
fwait
cmp
movsb
mov
sub
xor
mov
decl
push
dec
pop
jb
fmuls
cmp
pop
cmp
std
stos
movsl
jae
fcompl
ficomps
adc
fstpl
or
lret
mov
xor
lahf
subb
dec
sar
scas
push
jg
and
sub
adc
ljmp
or
cmpsb
adc
mov
xlat
jg
fldlg2
int3
pushf
sub
cmc
pop
dec
filds
in
and
pop
pop
jno
mov
ficomps
xor
lahf
lret
push
pop
fimuls
jo
mov
sahf
loope
out
xor
fucomip
loope
in
cmpsb
jne
into
lea
jb
inc
cmpsl
cmc
and
push
leave
xchg
ret
jb
test
lret
jb
inc
adc
nop
test
jle
push
cs
sbb
aaa
cmpsb
popf
or
cwtl
push
xor
push
push
sbb
ret
jae
shlb
mov
mov
or
push
add
push
push
xchg
dec
inc
aad
cmpsb
mov
leave
mov
fmul
push
mov
test
lea
dec
mov
push
movsb
jns
xchg
dec
xchg
shufps
jl
sti
mov
jg
and
jne
lahf
arpl
int
sub
adc
and
pop
out
xor
sub
xor
in
cmp
adc
sbb
shll
fwait
cwtl
outsl
push
push
jb
pusha
test
sti
in
mov
bound
jmp
push
xchg
imul
jmp
mov
out
or
popf
out
lods
mov
jbe
mov
inc
popa
mov
jb
mov
xlat
addl
mov
sbb
dec
lcall
insb
adc
push
adc
push
mov
rolb
xor
inc
sahf
daa
fs
xchg
inc
int
push
dec
cmpsl
addr16
xor
rcrb
repz
jne
nop
mov
cmp
push
mov
out
sub
test
xor
jns
and
jbe
push
xor
mov
sti
adcb
aam
lret
mov
fwait
lock
jae
add
pop
or
mov
sub
outsb
ret
sbb
pushf
scas
sbb
out
and
fldt
mov
testb
in
inc
test
aas
ja
pop
xlat
aad
clc
xchg
cmpsb
adc
dec
push
mov
addr16
out
jns
pop
stos
test
xchg
jbe
push
dec
add
push
es
clc
jno
jg
inc
pop
pushl
cmc
xchg
scas
push
sarl
aam
ss
push
jns
or
test
add
imul
pop
xor
pop
addr16
in
add
js
or
cld
lcall
aaa
lret
and
fisttpl
inc
adc
mov
sub
push
stos
bound
nop
les
popa
arpl
lock
cmpsb
cmp
and
test
ret
dec
sub
pop
or
popf
or
call
gs
fsub
mov
inc
push
or
inc
pop
aam
cmpsl
mov
xchg
sti
xchg
sahf
or
mov
cmp
cmpsb
mov
mov
mov
jo
mov
lods
mov
sub
lea
leave
mov
cmp
popf
pop
js
lods
push
mov
repz
and
fwait
or
lret
and
clc
mov
adc
sub
mov
jecxz
mov
sti
jns
and
cmpsb
mov
mov
imul
divb
lea
lods
mov
imul
lods
inc
mov
fdivrs
insb
jb
add
sub
gs
pop
push
adc
jl
mov
mov
mov
jne
cmp
sub
cmp
mov
push
lds
and
repz
lret
push
mov
mov
loopne
rcrl
mov
or
lahf
push
sub
das
into
outsl
xchg
inc
push
out
jo
es
add
xorl
jmp
push
and
mov
push
fsub
cmp
ds
jno
inc
imul
test
ucomiss
jbe
xor
push
adc
out
lods
int
inc
jg
mov
xor
push
pop
lret
push
jae
out
aad
inc
mov
inc
xchg
add
jno
dec
fcmovnu
and
jno
sahf
loope
imul
or
data16
inc
mov
sbb
aaa
and
ljmp
outsb
lock
in
push
xchg
lods
cld
ret
pop
xchg
ror
xchg
ds
arpl
jl
sbb
out
sub
push
aam
mov
xlat
sbb
les
dec
shrb
fldenv
and
cmpl
pushf
pop
pop
push
pop
and
stos
outsb
out
and
xchg
adc
cmc
sbb
dec
xchg
and
push
lcall
mov
push
jbe
sbb
bound
mov
movsb
and
xor
or
adc
xchg
dec
cmp
scas
push
ja
cmp
adc
aad
sub
mov
adc
test
int3
outsb
out
fcmovne
imul
fldcw
es
mov
add
xchg
sub
fldl
addl
jl
leave
sub
pop
sub
insb
mov
mov
movsb
add
sarl
adc
imul
inc
push
jle
loope
push
sub
adc
push
icebp
test
rolb
or
mov
dec
rcrl
mov
jne
scas
adc
nop
xchg
push
mov
lods
adc
xchg
imul
ret
inc
mov
or
pop
mov
cmc
out
insl
subl
insb
loopne
aas
cmp
out
push
insb
mov
sarl
les
sbb
pop
leave
addr16
pushf
jb
dec
xchg
leave
push
andb
les
or
inc
mov
hlt
add
repz
fbld
imul
mov
push
lea
les
mov
aaa
xor
mov
aaa
push
popa
xchg
or
push
fdivs
push
jo
lea
imul
jne
cmp
xor
push
lea
mov
insl
sbb
popf
or
rcrb
ret
mov
nop
fcmovb
incl
inc
ret
inc
push
sbb
lods
rcr
mov
cwtl
and
cmc
test
rclb
and
xchg
test
lock
fistpl
sub
cmp
adc
adc
lds
push
add
push
cmpsl
inc
pop
fadds
addb
test
les
mov
jmp
and
repnz
into
push
jge
pop
adc
pop
mov
mov
scas
xor
movsb
xor
jle
pop
pop
dec
rcl
push
xor
loop
and
sub
adc
sub
adc
popf
in
shr
push
adc
stc
shrb
outsl
sarb
lock
push
rol
and
push
jno
shrb
mov
jne
mov
leave
jno
adc
mov
lock
cbtw
cmp
inc
js
inc
cmp
push
pop
int3
xor
flds
fwait
and
lcall
arpl
and
jb
fadds
xchg
sub
mov
mov
sub
cltd
insb
jb
add
xor
push
inc
sbb
lods
sbb
mov
aaa
outsb
jecxz
ret
fidivl
dec
cmpsl
mov
xchg
int3
adc
mov
pop
rorl
xchg
mov
es
mov
jge
mov
xor
sub
dec
jle
test
xor
sub
or
stos
scas
dec
xlat
xchg
push
mov
test
lea
loop
jecxz
arpl
incb
mov
adc
jno
lods
les
push
jmp
lret
jecxz
dec
xchg
divl
mov
in
lock
jne
mov
jmp
mov
jg
icebp
cld
out
adc
test
adc
adc
bound
loop
lret
incl
xchg
inc
test
push
add
jb
push
daa
pop
xor
enter
mov
sub
sahf
pop
leave
jmp
xor
js
pop
lret
clc
pop
cmpsl
cmp
hlt
mov
mov
mov
sbb
and
inc
xchg
inc
pop
sbb
cmp
mov
jg
fcoml
bound
ds
adc
inc
sub
mov
cltd
mov
int3
pop
mov
adc
sbb
cs
aam
addr16
add
jp
or
xchg
jbe
lds
push
mov
sbb
jns
lret
fidivs
jbe
fbstp
add
push
mov
dec
movsb
cmp
or
aam
clc
insb
cmpsl
jne
lock
or
sub
jno
mov
bound
fisttps
mov
and
sbb
ss
push
sbb
mov
out
add
jns
pop
push
mov
pop
add
divb
adc
aam
je
or
stc
clc
mov
xchg
cs
push
in
mov
pop
mov
popf
shrb
enter
stos
push
sub
stc
or
dec
mov
out
pop
arpl
fnstcw
add
mov
testb
cmp
hlt
push
sbbl
dec
pop
mov
and
push
out
out
mov
and
inc
and
and
inc
ss
xchg
or
fbld
stos
add
call
enter
inc
push
out
pop
or
test
pop
into
daa
pop
repz
pop
ret
call
inc
mov
rcll
aas
adc
into
mov
and
mov
add
or
pop
cmc
out
sbb
jge
mov
cmp
mov
inc
pusha
stos
aas
lret
xchg
rcr
rcr
es
push
dec
loopne
lret
cmp
std
rcr
add
jmp
xchg
push
repnz
aas
dec
mov
pop
inc
fmul
cs
lods
out
or
test
xchg
mov
test
arpl
pop
jecxz
xor
pop
jmp
jae
mov
dec
mov
iret
add
jnp
mov
sbb
push
or
into
jno
sahf
lret
decb
call
pushf
dec
push
inc
cmpsl
add
mov
mov
nop
ja
rclb
cmp
fisubl
ds
mov
mov
xor
repnz
and
dec
push
adc
sahf
jp
dec
cmp
add
sti
dec
lret
in
xchg
addr16
jne
pop
call
in
xchg
add
cld
outsb
pushf
mov
loopne
cwtl
add
fdivl
arpl
into
roll
gs
aaa
push
shll
mov
xchg
jmp
lock
fidivl
adc
sti
test
repnz
int
dec
inc
and
loop
pop
outsl
mov
xorb
js
adc
call
jmp
dec
cmpsb
nop
jo
int3
push
cmp
lea
mov
pop
cld
aas
mov
sub
dec
push
inc
add
add
cs
cmp
dec
in
stos
xchg
rcr
mov
stc
jl
scas
push
sbb
lock
stc
xchg
pop
bound
xor
jle
es
xor
lcall
add
lret
hlt
xor
adc
data16
xor
inc
stos
repnz
sbb
andb
push
loop
inc
repnz
int
cmpsl
inc
js
xor
popf
inc
inc
push
lea
sub
dec
inc
ret
mov
inc
jns
lock
lret
mov
adc
cwtl
dec
pop
adc
or
in
int3
push
add
jns
mov
fidivrs
mov
xchg
outsb
add
incb
mov
cwtl
mov
add
rcl
inc
scas
jns
fdivrl
or
inc
cmp
sub
adc
arpl
jns
or
sbb
mov
xchg
int3
adc
push
add
add
mov
popa
outsl
jb
add
xchg
stc
pusha
insb
mov
add
hlt
loopne
scas
xchg
xor
and
out
lcall
sti
imul
and
sbbb
adc
xlat
cmp
js
adc
xchg
movsb
aaa
loope
fs
push
mov
sub
mov
fildll
aas
add
or
in
stc
cwtl
scas
dec
xchg
pop
mov
xchg
dec
repz
je
xorl
dec
push
mov
cmp
rclb
out
mov
into
jl
mov
sub
pop
inc
sbb
aad
clc
das
lods
in
mov
adc
andl
jecxz
loop
xchg
les
pop
lahf
aad
and
jg
jb
imul
dec
jmp
jge
sub
mov
and
push
popw
dec
es
adc
cltd
inc
jle
std
int3
adc
pusha
mov
test
subb
sub
aad
fistps
leave
mov
adc
push
ret
pop
sub
andb
repnz
xor
clc
ds
cmpsl
lods
or
out
cmp
cs
fs
popa
push
add
or
cmp
rorb
push
inc
and
ret
xchg
jmp
loop
xor
xchg
dec
popf
shrb
dec
nop
push
cmpsb
popaw
lcall
pop
out
mov
push
pop
and
sub
rcr
sub
inc
scas
cs
and
jmp
clc
loop
comiss
dec
push
rcll
ljmp
or
xlat
inc
lret
jb
sbb
jb
push
and
dec
enter
mov
or
cmp
push
cmp
stos
mov
sahf
push
xor
mov
xchg
or
and
out
cld
sub
xchg
mov
inc
jge
push
push
xor
negl
mov
xor
rorb
out
dec
hlt
jle
and
jge
xor
js
ret
inc
rcl
fistps
mov
outsb
jne
xor
mov
mov
lods
pop
in
cmpsl
into
stc
dec
inc
out
or
sub
xchg
xchg
mov
mov
push
and
cld
jmp
cmpsl
leave
push
js
or
ss
scas
loopne
push
data16
cmp
loope
push
loopne
sub
add
repnz
mov
sub
pop
adc
lcall
sub
sub
ljmp
dec
adc
cmp
insb
add
ljmp
les
cmp
inc
cli
xchg
pop
pop
in
lods
xor
xchg
inc
jo
push
data16
cmpsb
adc
ficoml
sbb
sahf
mov
cmp
mov
lcall
inc
mov
pop
or
pop
inc
in
lahf
add
aam
jns
ja
mov
sahf
lock
daa
orb
push
mov
xlat
xlat
push
stos
xchg
mov
sub
aas
dec
cmpsl
call
jg
inc
mov
ss
dec
dec
shrl
ret
arpl
xor
jmp
adc
cmc
ret
sar
lea
out
icebp
repz
xchg
xor
lock
aad
jbe
mov
out
daa
fcmovu
loopne
sbb
inc
inc
xor
dec
test
pop
cmp
jp
int3
jle
inc
imul
addr16
ds
jns
pop
pusha
shrl
pop
sbb
test
mov
testl
lock
add
in
sub
mov
mov
fnstsw
daa
fisubrl
sbb
or
xlat
cmp
mov
cmp
or
fisttpll
stos
out
jo
inc
movsl
lret
and
inc
jp
inc
pop
test
test
lock
mov
push
push
or
cmp
aad
and
pop
cwtl
pop
mov
shll
jg
pushl
or
jl
addr16
mov
fdivl
jp
push
ljmp
das
mov
outsl
mov
adc
mov
std
pop
ficomps
pop
fwait
jb
xchg
mov
mov
vpunpcklbw
imul
mov
xor
les
ret
mov
mov
dec
stos
loope
add
mov
rorb
out
push
push
cmp
xor
pop
std
add
add
punpckhwd
insb
lret
in
cld
js
int
mov
loope
sub
stc
push
lds
sub
pop
out
sub
fidivl
sub
mov
loope
push
jnp
dec
jae
roll
mov
xchg
incb
inc
mov
sbb
enter
js
sbb
push
add
push
loop
movsb
ffreep
jmp
stos
push
inc
bound
int3
call
add
fsubrl
in
mov
pusha
sub
push
and
sbb
pushf
jmp
inc
nop
or
add
jnp
or
testb
das
div
rcrl
outsl
inc
data16
call
mov
add
mov
icebp
ret
icebp
mov
test
cmpb
arpl
sbb
push
jge,pn
out
lds
cmp
inc
stc
cltd
jmp
sub
or
cld
jmp
subl
push
push
xor
aam
jge
cwtl
fstl
xchg
jae
sahf
ljmp
dec
pop
pop
insb
adc
mov
call
sub
loope
jnp
sub
cltd
lret
mov
jl
jge
push
mov
test
test
loop
dec
cmp
sbb
jnp
push
ret
cmp
cmp
ljmp
lods
adc
lret
add
push
sbb
mov
data16
iret
jg
mov
inc
jle
imul
mov
cld
repnz
repnz
xchg
jecxz
mov
jns
and
movsl
in
mov
imul
mov
adc
stos
adc
ja
addb
mov
inc
or
popa
push
lret
and
js
sbbb
daa
ds
sbb
sbb
ficoms
xchg
pop
cltd
or
mov
test
inc
push
imul
pusha
das
stos
cwtl
or
scas
xchg
outsb
mov
std
lcall
call
ljmp
das
les
subl
lret
and
dec
lret
mov
mov
adc
inc
sti
dec
push
idivb
loope
fmuls
inc
sbb
cmpsb
enter
lods
lds
cmp
out
ds
adc
cmp
mov
cmpsl
movsl
xchg
ret
jp
fwait
mov
xor
mov
xor
in
sub
lods
pop
les
imul
cli
lods
xchg
add
insl
xor
jo
int
cmp
sahf
xor
sarb
jo
lret
aam
cld
loopne
pop
xchg
mov
xchg
popf
push
decl
lahf
pop
aam
xchg
iret
adc
xchg
je
ds
lods
cmp
jno
xchg
adc
cmp
inc
lods
push
ret
sub
rorl
or
jo
sbbb
adc
repnz
or
adc
push
js
push
adc
mov
inc
andw
jmp
rol
mov
adc
lods
stos
lea
insl
fcmovu
xor
pop
push
or
xchg
in
add
lret
inc
outsl
mov
adc
sub
clc
inc
int
mov
mov
inc
jg
js
ds
mov
jnp
cmp
ss
fisubl
mov
mov
scas
dec
test
cld
aaa
dec
mov
fwait
scas
imul
adc
sbb
shlb
xchg
cmp
push
mov
addr16
ss
push
jl
ja
dec
shrb
sbb
sti
jl
gs
subb
inc
hlt
dec
mov
pop
push
scas
or
xor
adc
cmp
add
test
sub
mov
jo
inc
cltd
loopne
inc
or
inc
sub
pop
inc
outsl
mov
out
std
retw
std
and
jb
xchg
ret
ret
push
std
cwtl
out
mov
add
loopne
mov
ret
in
jb
mov
filds
fadds
inc
pop
mov
sti
das
ucomiss
mov
xlat
out
dec
jo
pop
cmp
aam
mov
out
and
mov
push
sbb
cli
aaa
push
test
je
into
jmp
adc
xchg
inc
xchg
inc
xor
adc
xchg
jno
scas
jge
pop
jb
cmpsl
and
xchg
cmp
sub
mov
stc
mov
xor
mov
popf
xchg
fcmovne
repz
push
mov
cli
decb
das
das
xchg
movsb
fs
sbb
lods
push
jle
pop
mov
xchg
adc
pusha
mov
repnz
rol
fnstenv
push
cli
enter
xor
insl
push
cmp
pushf
mov
and
lds
pusha
mov
andl
loope
sbb
popa
jnp
dec
jmp
outsb
mov
cmp
pop
aas
sahf
jns
cmpsb
sbb
leave
mov
pop
nop
sbb
pop
xor
sbb
xchg
dec
in
inc
call
adc
mov
lods
xor
push
sbb
rorb
jbe
dec
mov
lea
add
out
or
lds
ss
jae
es
testb
inc
mov
push
cmc
test
lods
in
sbb
xor
push
mov
out
xchg
mov
out
mov
xor
mov
popf
and
lods
push
and
into
pop
sub
push
ljmp
mov
js
mov
inc
loope
push
sub
cmp
push
mov
lock
movsb
push
mov
adc
mov
fwait
and
fs
scas
mov
loop
xor
sbb
jl
fdivrs
std
jl
fcoms
xchg
es
out
mov
pusha
mov
adc
shll
les
aad
test
adc
or
stos
je
or
inc
int
lret
fadds
les
in
pop
ljmp
mov
jne
std
cwtl
lret
jp
out
and
mov
fldl
sub
test
fmul
mov
movsl
lret
lods
mov
sub
xchg
rcrl
aas
or
stos
jle
jge
pop
dec
inc
loop
mov
jns
mov
lock
sbb
idivl
rclb
aas
mov
jbe
push
dec
ja
fists
xchg
or
hlt
fcoml
mov
addr16
dec
jae
sbb
xchg
push
push
pop
add
pop
add
push
in
scas
int3
divb
adc
sbb
cmp
add
lods
xchg
insb
scas
jne
sbb
lcall
adc
cs
and
roll
pop
in
inc
js
inc
push
pop
sarl
mov
dec
add
xchg
rol
jmp
mov
inc
mov
mov
dec
lds
lea
lret
adc
mov
sub
and
xor
popa
mov
fdecstp
mov
in
xlat
imul
in
adc
test
test
jae
loope
cmp
and
fisubs
subl
imulb
push
adc
cltd
push
loop
movsl
adc
pop
es
fwait
test
mov
imul
repz
pop
adc
popa
call
fistpll
cmp
push
icebp
cmp
jecxz
imull
sub
mov
aam
push
imull
xor
or
mov
hlt
xchg
ret
inc
mov
xchg
enter
in
shll
lahf
add
arpl
mov
add
fcomp
mov
mov
inc
subb
int
lock
jae
xor
shlb
jne
cmp
mov
xchg
cmc
movsb
xor
fnstsw
out
sub
and
in
outsl
ret
insb
lcall
xlat
mov
push
popf
lcall
rorb
insb
or
movsl
pop
lods
ds
cmp
pop
push
pop
pop
jg
jecxz
adc
roll
cmp
mov
decl
push
int3
les
jmp
cmp
psubw
jle
js
mul
mov
fucomi
ja
mov
mov
int
add
idivb
test
jmp
lcall
or
xor
adc
cmp
push
ljmp
popa
lret
inc
rclb
xor
int
rcrl
lds
ds
repz
adc
xor
bound
decl
sar
add
xlat
xor
xchg
inc
pop
in
mov
adc
push
pop
or
mov
mov
stc
divl
fldcw
xlat
xor
imul
xchg
ss
inc
adc
xchg
xor
fstpt
lods
ds
stc
and
in
rcrl
lea
sbb
xchg
nop
xchg
scas
cmp
lcall
into
ljmp
mov
pop
xchg
pop
scas
rcll
icebp
aas
in
mov
shl
xchg
sti
jge
cmpsb
das
imul
test
sbb
sbb
cltd
inc
out
ds
popf
pushf
imul
sbbb
or
lods
insb
js
icebp
sbb
pop
gs
mov
xchg
sub
push
outsl
add
push
in
int3
out
cmp
fiaddl
xchg
dec
xchg
das
fimull
mov
popa
and
sbb
das
xchg
push
lret
inc
sub
ret
or
stos
fwait
inc
push
outsb
mov
int
or
dec
ja
ja
dec
das
inc
dec
mov
mov
dec
pop
push
andl
dec
sub
sub
pop
lods
inc
adc
mov
int3
sbb
push
adc
or
jbe
xor
inc
or
out
xchg
fwait
inc
fists
inc
add
ret
rclb
test
xchg
pop
or
lock
fcomps
inc
clc
in
call
stc
shll
push
or
cmp
fisubrl
mov
and
mov
lret
cmp
pop
or
xor
iret
out
cmp
in
fisubrl
xor
out
repnz
xor
jno
mov
mov
xor
adc
and
adc
dec
roll
insl
push
sub
ds
enter
cli
out
sub
mov
iret
mov
loopne
cld
ret
xor
cmp
in
cmp
lret
mov
or
push
loopne
dec
pusha
fwait
cltd
mov
inc
jnp
and
sub
add
and
xlat
bnd
incb
mov
mov
les
pop
adc
call
cmp
cmp
sub
xchg
int3
and
insb
pop
pushf
cmpsl
adc
cmp
mov
pop
in
xchg
xlat
mov
inc
xchg
push
cmp
test
xlat
jge
xor
push
pushf
fnstenv
arpl
mov
std
fs
sbb
in
ret
xlat
cli
mov
dec
adc
pop
sbbl
ret
test
popa
test
lahf
jae
enter
sbb
das
xchg
out
inc
repz
addr16
push
into
fs
das
dec
mov
pop
adc
test
push
mov
add
pop
adc
dec
mov
pop
popa
lahf
xor
xor
and
cmp
jns
jmp
lahf
jge
fwait
push
movsb
mov
jae
mov
into
sahf
insl
jge
rorl
pop
in
das
jae
loop
xlat
cmpsb
sub
dec
repz
lock
xchg
xlat
std
pop
mov
and
loope
cld
xor
ja
iret
pop
aam
adc
fildll
mov
mov
xlat
lcall
adcl
aaa
pop
movhps
test
pop
mov
mov
mulb
push
outsb
js
jmp
and
pop
imul
ror
ljmp
push
lea
xchg
hlt
out
dec
push
mov
mov
jae
inc
cld
rolb
std
cmp
mov
add
testl
xchg
movb
pop
cltd
dec
mov
decl
out
jge
pop
es
repz
std
jl
stos
jns
orl
push
add
push
mov
jno
pop
push
add
out
outsb
ds
or
xchg
dec
push
dec
test
add
jbe
xlat
sub
int3
add
sbb
jae
cli
popf
lea
fcom
mov
mov
xor
and
hlt
movsl
or
cmp
jg
xchg
je
out
fstpt
lds
dec
pushf
cmp
pop
inc
cwtl
xlat
mov
fldl
mov
rorb
cmp
xlat
pop
pop
jecxz
mov
xor
popa
jge
xor
pop
cmp
mov
xor
gs
lds
dec
mov
cld
stos
add
inc
jo
xchg
movsl
pop
xor
mov
push
cwtl
aam
sbb
out
jle
add
xchg
insb
fisubl
jno
xchg
inc
fiadds
rclb
clc
mov
jmp
fcompl
sbb
cwtl
cmc
dec
ret
and
arpl
imul
mov
int3
xor
mov
add
adc
mov
inc
sbb
les
adc
mov
pushf
outsb
dec
sbb
stos
xchg
mov
mov
in
mov
cmp
dec
imul
dec
xchg
outsl
sub
xchg
mov
int3
cld
ret
shl
lods
fsub
and
iret
inc
push
ss
xor
sub
and
fldenv
hlt
dec
out
gs
ljmp
ss
or
mov
mov
inc
xchg
mov
shr
xor
mov
and
inc
inc
jmp
rorb
xlat
rcrb
mov
test
fwait
or
mov
outsb
les
dec
leave
add
cli
stos
xchg
lds
push
adc
jo
nop
lods
std
lds
int3
in
jecxz
popf
jb
popa
inc
push
sub
test
outsl
pop
inc
sbb
repz
fscale
mov
pusha
pop
add
cmp
mov
xchg
repnz
adcb
scas
mov
jmp
das
nop
lret
shll
jl
in
lea
out
dec
movsl
imull
sbb
repz
add
pop
imul
mov
cmc
out
les
or
fists
sub
insb
dec
mov
dec
mov
shrb
clc
lds
push
xor
movsb
push
cmp
pop
and
cld
lds
in
sbb
pop
dec
adcb
shlb
or
inc
push
push
mull
inc
sub
cmp
inc
jne
push
xchg
imul
in
mov
lcall
inc
fidivl
in
push
gs
sub
enter
fildl
inc
popa
lcall
pop
xor
ret
bound
add
shll
std
push
mov
sub
testl
cmp
xchg
lods
into
inc
push
add
sub
cmp
sub
rclb
fildll
scas
mul
imul
incl
iret
in
rol
and
add
call
fmul
mov
cmp
adc
sub
dec
cld
and
sarb
xor
pop
inc
out
pop
cmp
mov
xor
pop
mov
fidivl
ss
int3
dec
inc
and
lcall
mov
xchg
push
xchg
jae
sbb
jecxz
sbb
mov
test
xchg
aas
or
pop
fsubrl
bound
testl
rorb
sar
add
jo
xlat
pop
jne
jmp
and
lret
sbb
dec
imul
cmp
lahf
jo
stc
add
cmpsb
ds
mov
das
ljmp
ljmp
sub
lahf
adc
movsl
lock
and
sub
mov
jnp
xchg
sub
ret
inc
sbb
insl
mov
fisubrl
pop
hlt
fnstcw
push
imul
inc
xchg
movsl
in
rclb
in
mov
jmp
jecxz
jne
push
and
mov
mov
pop
lahf
std
aad
mov
daa
mov
adc
sub
push
test
jns
cmp
movsl
leave
fnstenv
call
fbld
movsl
fimuls
mov
std
xchg
test
and
mov
add
das
push
and
or
add
sbb
xchg
sub
inc
fidivl
cli
or
push
mov
pop
pop
xor
cmp
push
sub
jmp
dec
imul
cli
andl
sbb
ja
or
mov
xchg
js
pop
mov
and
mov
test
adc
push
pop
mov
scas
cs
and
aam
push
lock
aam
sbbb
pop
and
int3
xchg
inc
pop
lcall
and
or
pushf
lret
mov
fs
popa
push
mov
lret
inc
jb
loop
cmpsb
jb
pop
ja
xchg
cs
adc
or
jae
jle
and
or
pop
jp
pushf
in
lods
cmp
xchg
jecxz
jmp
push
fs
sahf
jle
push
lcall
mov
mov
push
sahf
add
xchg
lahf
imul
cli
mov
ret
xchg
ret
mov
mulps
icebp
pop
imul
and
popa
sub
out
add
dec
mov
subb
adc
sti
lds
xor
mov
jmp
mov
pop
mov
test
inc
dec
push
xor
inc
fidivrs
cld
fidivrs
add
jns
cmp
lahf
and
xchg
add
bt
dec
pop
jecxz
out
mov
int
inc
push
xorb
test
sub
ret
insb
jo
dec
leave
rclb
add
repnz
push
mov
cld
stos
pop
cmp
add
testb
dec
push
jnp
fs
inc
mov
sti
push
sub
cmpsl
in
push
add
outsb
dec
mov
sub
push
inc
dec
cmp
notl
out
mov
add
leave
xchg
data16
adc
xchg
and
pop
dec
push
faddl
xchg
push
in
mov
sub
jmp
push
mov
lock
xorb
dec
notl
adc
movsb
inc
inc
je
xchg
cmp
mov
sbb
xor
xor
or
jae
out
lahf
cmp
cmp
outsb
sti
fmull
jle
es
mov
stos
sbb
loopne
shlb
scas
dec
leave
mov
mov
das
movsb
jg
dec
add
inc
test
clc
sbb
sbb
out
push
cs
pop
mov
inc
mov
gs
lret
aam
in
leave
repnz
xor
repnz
daa
test
xorl
lahf
dec
cltd
sub
insb
divl
dec
push
and
jnp
in
cs
xor
in
xchg
out
mov
mov
std
or
ret
lahf
lods
push
cmp
jle
fidivrs
fsubs
jno
les
mov
rcll
cmp
add
test
jmp
sbb
arpl
cwtl
xorl
sbb
dec
fcoml
xor
imul
jnp
out
mov
jnp
sbb
and
test
in
xchg
mov
das
lds
aad
cmp
pop
aaa
sub
cltd
insb
and
aaa
stos
sbb
inc
mov
add
out
lods
jbe
leave
add
xchg
lods
dec
scas
sbb
cltd
js
dec
lock
push
fimuls
cmp
insb
mov
insl
xor
dec
test
push
aam
xor
imul
add
shr
outsb
or
pop
adc
pop
cmc
pop
add
loope
mov
aad
sbb
ret
dec
scas
sbb
movsb
in
pusha
pop
jp
push
aad
mov
xor
std
mov
mov
out
popf
sbb
outsl
int
loope
jno
int3
mov
or
repnz
mov
xchg
out
in
clc
mov
and
stos
pusha
sub
cmp
mov
xchg
js
sub
addr16
test
test
mov
xchg
jge
pop
in
push
and
hlt
mov
xor
repz
and
cltd
stos
mov
clc
movb
push
sub
in
push
push
in
aas
inc
mov
mov
fimuls
iret
mov
xchg
stc
push
adc
push
es
pop
sti
mov
jg
lret
mov
js
ljmp
add
shrb
mov
loope
addr16
icebp
shl
mov
in
or
jp
sti
push
xor
mov
out
jp
jmp
cli
sub
sbb
fucom
cmp
cli
cmp
insl
and
cmc
cld
stos
ja
lock
outsl
imul
adc
inc
mov
addr16
sub
sbb
push
mov
fcompl
inc
data16
jle
dec
push
jnp
pop
stos
out
xchg
test
xchg
lcall
lret
mov
dec
inc
push
push
pop
xlat
popf
pop
scas
stos
push
adc
xor
sub
jns
xchg
fsubs
sub
mov
jno
cmp
or
xchg
lea
sar
inc
and
rclb
aam
push
enter
fbstp
jl
lret
mov
fmull
push
add
lcall
pop
xor
adc
je
out
xchg
pop
ss
mov
dec
mov
xor
nop
les
push
in
cld
push
call
test
pop
add
ja
inc
lods
or
mov
nop
je
mov
sbb
stc
mov
aas
fidivs
push
scas
dec
xchg
pop
testl
push
inc
scas
repz
cli
lahf
cld
pop
mov
mov
mov
push
mov
jns
clc
shlb
mov
jb
shrl
jmp
inc
jb
mov
jle
sbb
loope
mov
mov
aam
aas
addl
test
outsl
add
test
cmp
sbb
and
add
xchg
mov
adcb
movsb
or
mov
int3
movsb
and
lods
stos
aaa
dec
ljmp
adc
dec
mov
loopne
ucomiss
mov
sub
jbe
sbb
imul
outsl
dec
pop
mov
pop
mov
pop
or
inc
fwait
and
shll
outsl
jecxz
sub
das
cwtl
mov
loop
stos
sti
es
push
cmp
je
inc
sub
ja
xchg
loopne
sbb
movsl
pusha
dec
xchg
cmp
cmp
mov
pop
push
inc
movsl
sub
sbb
imul
xchg
push
addr16
ret
loope
jge
stos
outsb
or
fcomps
es
call
sahf
out
fimull
lds
jo
idiv
mov
and
popa
out
jae
sub
aam
mov
loop,pt
mov
pop
pop
cmpl
ds
pop
sbb
cmpsb
jge
jp
insb
call
xchg
ljmp
pop
pop
pop
ljmp
test
pushf
adc
and
nop
iret
push
rcrb
in
xchg
push
ret
mov
mov
es
sub
jb
xchg
sbb
popf
xchg
sub
sub
mov
cmp
pop
or
adc
mov
iret
or
outsb
inc
push
sbb
sub
and
mov
fstpt
push
fnstenv
xchg
hlt
sub
or
sbb
xchg
std
xchg
pop
pop
ljmp
jmp
jo
test
and
scas
les
and
jne
mov
sub
dec
and
inc
jge
fsubrs
mov
daa
sub
xor
mov
pop
push
adc
jge
cmp
call
btc
xor
aad
hlt
mov
dec
mov
int
dec
adc
xor
inc
push
loopne
nop
sub
gs
add
mov
add
lcall
mov
cmpsl
pop
cmp
xchg
test
push
xor
pushf
adc
push
fidivrs
xchg
ret
pushf
push
push
mov
lds
shll
fbstp
mov
pop
aad
addl
hlt
push
push
sub
mul
andl
arpl
jno
sub
notb
mov
adc
adc
imul
divb
and
mov
cs
adc
or
setle
adc
add
pusha
stos
sbb
push
aaa
cmp
pop
add
ljmp
cmpsb
pop
jmp
lcall
icebp
orb
jno
add
imul
shrb
addl
push
xor
in
cs
mov
imul
in
hlt
jecxz
repz
pop
stc
inc
cmp
push
push
lds
popa
inc
pop
ficoms
mov
push
jecxz
aad
sub
inc
mov
inc
stc
inc
mull
sbb
popf
out
es
adc
nop
notl
test
pop
push
mov
cmpsb
sete
xor
jge
pop
jbe
xor
add
pop
lcall
pop
outsb
int3
loopne
and
fnstenv
mov
inc
jge
mov
lea
and
mov
clc
mov
jmp
sub
sub
out
aad
adc
cli
rol
es
adc
adc
loop
inc
xchg
mov
insb
mov
mov
or
jo
hlt
ds
fldenv
pop
mov
leave
mov
xor
std
mov
xor
dec
xchg
mov
aas
stc
dec
das
imul
bound
or
xchg
xchg
test
mov
adc
dec
movl
insb
sub
xor
mov
mov
cmpsb
mov
pavgb
icebp
fisubs
mov
jge
jl
push
aam
dec
fisttpll
ret
cmp
or
or
xchg
rclb
dec
out
xlat
pushf
adc
push
fnsave
xchg
xchg
into
mov
inc
scas
sbb
or
sahf
loop
dec
adc
xchg
sub
sgdtl
aaa
lds
pop
lahf
not
decb
cmp
xchg
jmp
lea
and
iret
cmc
dec
or
mov
adc
jne
inc
aas
and
cltd
dec
mov
sbb
xor
ret
mov
flds
scas
sub
and
movsl
popf
js
sbb
inc
xchg
inc
sbb
pop
sbb
mov
xchg
push
loopne
mov
hlt
mov
icebp
dec
std
and
fisubs
dec
adc
bound
cmpsl
shr
xor
test
and
mov
mov
out
in
cmp
pop
scas
xchg
sbb
cs
lcall
pop
add
sub
xor
jne
js
or
fucomp
xchg
xor
mov
popf
stos
test
inc
cmp
outsl
xchg
xor
mov
mov
xor
es
rclb
addb
lahf
dec
jne
lods
mov
imul
pop
xchg
notl
push
jno
das
cmpsb
movsb
jle
popf
xchg
test
cmp
movsb
push
inc
lds
fldl
rcll
out
cs
and
xor
xor
scas
out
mov
cmp
outsl
enter
lea
or
outsl
inc
xor
in
je
shlb
cmpsb
movsb
scas
cmc
lods
out
ficoms
jmp
push
icebp
inc
push
xlat
pop
aad
xor
rcrl
lods
xor
lret
mov
sbb
xor
xor
inc
push
or
pushf
rcrl
pop
inc
sbb
jne
ret
xor
cwtl
cmp
mov
mov
rorb
sub
sbb
stos
inc
push
je
movsb
jo
negl
mov
xchg
mov
sbb
mov
mov
out
int
aam
leave
das
push
in
add
les
gs
inc
inc
push
popf
inc
xorl
lret
mov
mov
sbb
test
and
cld
cli
mov
call
xchg
add
cli
mov
xchg
ret
in
sub
push
mov
out
mov
pop
mov
mov
jg
cs
push
pop
es
dec
stos
xchg
push
into
jno
inc
bound
cmp
movsb
and
nop
leave
mov
cli
notb
scas
or
pushf
repnz
push
xchg
gs
mov
sub
pop
in
xchg
ret
jmp
jmp
mov
in
adc
fisttpll
push
jmp
xor
fidivl
push
rcl
lea
je
test
mov
jae
and
fwait
into
jge
sbb
mov
testl
push
lret
ret
or
ud0
xchg
adc
cmp
mov
sbb
in
mov
jne
dec
mov
jns
mov
xchg
lods
clc
push
inc
int
push
fwait
xchg
fwait
mov
jae
orb
push
scas
pushf
shll
popf
adc
push
mov
mov
or
and
test
call
lea
les
cmpb
loop
leave
js
into
test
xchg
jmp
jmp
loope
push
shrb
subb
leave
mov
pop
aam
jg
inc
bound
rcrb
mov
out
les
enter
push
test
ds
or
mov
lahf
sub
pop
icebp
cld
pop
sbb
xor
es
xor
jb
subb
sub
out
dec
stos
adc
xchg
cmpsl
mov
daa
and
shlb
and
lods
and
fnstcw
addl
xor
xlat
sbb
pop
in
insb
xor
push
sbb
add
pop
cli
cmp
addb
lahf
jns
cli
push
cmpsl
cmp
cmp
mov
in
loopne
push
push
mov
insb
out
push
or
push
mov
xor
mov
lret
sbb
sbb
fs
daa
test
add
lret
or
sbb
sahf
daa
sarb
and
push
bound
addr16
push
mov
mov
call
ficoms
dec
cmpsb
mov
aad
sub
cli
stos
inc
push
mov
xchg
mov
dec
push
orb
fcompl
sarl
push
or
sarl
repz
aad
inc
ret
or
sub
or
in
outsl
mov
push
daa
in
cmp
test
fsubr
jo
fbld
mov
xor
mov
daa
sbb
xchg
adc
add
cmp
cmpsl
xchg
es
aad
adc
mov
jno
push
out
enter
aad
pop
mov
test
xor
mov
loopne
cwtl
repz
push
dec
cmp
push
lock
nop
adc
je
fs
or
mov
push
mov
xor
push
subb
icebp
bound
xor
cmp
push
inc
pop
lods
loop
or
rolb
cmp
dec
enter
xchg
add
mov
xor
dec
icebp
adc
fcompl
push
sub
adc
and
leave
sbb
fisubrs
repz
out
push
adc
push
fistpl
out
scas
xchg
popf
bound
dec
std
fucom
loop
lock
subb
out
lcall
add
lods
in
xor
add
mov
mov
adc
inc
sub
mov
lds
shl
in
rcr
inc
or
dec
mov
cmc
enter
push
add
and
mov
pop
das
mov
mov
xor
jg
mov
repz
mov
dec
pop
push
adc
shll
pop
push
push
fwait
je
insb
dec
mov
push
push
jmp
test
mov
add
dec
adc
aas
arpl
ds
xchg
add
jp
rorl
repnz
dec
inc
mov
push
dec
cs
pop
jle
xchg
xor
cmp
sbb
cmpb
dec
mov
cmp
shlb
xor
aam
mov
cmc
imul
cmpsb
inc
psubd
sbbb
xor
orb
inc
in
sbb
popf
aaa
jae
jo
xchg
jno
and
imul
sbb
fisttpll
xchg
fsubrl
cltd
movsb
scas
test
jo
pushf
lahf
fs
dec
icebp
mov
lea
cmp
dec
dec
inc
mov
pop
jns
xchg
outsl
mov
cmpsl
mov
and
test
cmp
cli
sbb
and
mov
fldcw
sti
ja
mull
jae
add
pop
pusha
out
and
je
test
push
jecxz
lcall
xlat
pop
ffreep
inc
cmp
jmp
cld
fistps
or
gs
add
mov
sbb
mov
popf
jns
in
or
mov
sbb
inc
xchg
test
cmp
int3
xor
inc
nop
mov
cli
aad
mov
pop
mov
cmp
inc
and
in
xor
jmp
add
data16
or
inc
ds
fmull
jecxz
cwtl
jg
fildl
jge
xchg
pop
pushf
mov
je
jle
shlb
xchg
pop
das
mov
sub
mov
lods
loopne
scas
cltd
cs
aam
cmp
aam
and
ret
xchg
ret
jge
in
jg
stc
leave
push
dec
call
inc
xchg
cmp
sub
fldenv
dec
sbb
sub
jge
jl
fs
cmpsb
daa
inc
push
fmull
adc
xlat
sbb
addb
dec
sbb
test
and
dec
sub
xor
iret
ljmp
int
cmp
ja
jb
loopne
js
pop
inc
outsb
adc
fidivl
pusha
xor
pop
sub
mov
sub
cmp
inc
dec
int
adc
or
mov
and
mov
inc
int3
push
mov
push
pop
inc
push
cld
lahf
jge
lods
adc
dec
dec
stos
push
aaa
mov
mov
mov
xlat
roll
clc
js
dec
in
dec
fcoms
pop
cltd
jp
out
sub
mov
jne
mov
dec
insl
lods
scas
stos
rorl
sbb
cmp
lahf
lret
daa
inc
lock
test
or
les
inc
push
mov
xchg
add
hlt
and
push
notl
adc
movl
int3
je
jge
jno
test
sbb
xchg
and
sub
cmpsl
add
mov
stos
mov
xor
add
and
inc
pop
fimuls
movsb
lcall
js
mov
mov
leave
in
xchg
jb
mov
imul
xchg
mov
inc
sub
xchg
je
pop
mov
mov
clc
data16
mov
mov
xchg
mov
stc
jns
cmpsb
cmp
mov
add
dec
inc
test
repz
inc
pop
fsubr
fadds
dec
sbb
jg
in
push
or
pop
jle
xor
outsl
xor
test
jno
push
lock
popf
addr16
js
pop
xchg
mov
lret
jno
scas
mov
pop
pushf
movsl
pop
fstp
sbb
ss
hlt
or
or
stc
ja
daa
mov
popa
mov
push
shlb
cmp
aaa
dec
cmp
xchg
sbb
shll
jmp
sbb
dec
and
sarl
inc
or
test
aad
lea
out
mov
mov
fldl
jne
xchg
sbb
ds
cli
sub
shlb
jecxz
inc
add
mov
shll
lods
aas
adc
stos
imul
scas
ljmp
lret
and
rcrb
mov
rclb
cmpsb
add
inc
mov
loope
and
stos
ret
jnp
push
lcall
mov
adc
cmp
repz
aaa
fildll
inc
xor
xor
es
cmp
clc
xchg
adc
xchg
push
mov
stc
sbb
or
and
dec
or
mov
std
add
dec
or
shlb
pop
mov
xor
test
fwait
shll
adc
xchg
and
pop
lret
inc
xor
or
adc
scas
xchg
mov
push
jno
xchg
test
scas
jl
sub
xor
dec
movsb
scas
bound
iret
lea
cmpsl
pop
xchg
pop
add
inc
push
adc
push
sub
inc
fdiv
jb
aaa
adc
insb
inc
cmp
mov
loop
mov
jae
jno
mov
mov
adc
cmp
add
fdivs
int
jge
movsl
xchg
pop
push
sub
ljmp
jg
mov
cmp
sti
sbb
add
sahf
push
jo
sahf
lcall
dec
mov
inc
sti
sub
adc
out
sbb
mov
bound
pop
cmp
popl
in
aam
cmp
lret
jbe
and
push
lds
lock
mov
xchg
or
popa
cmp
repz
jno
and
xor
mov
push
cmp
out
mov
in
ret
mov
jns
inc
dec
aaa
int
push
test
scas
push
jo
mov
fimuls
fwait
add
push
or
or
popf
mov
dec
test
cld
mov
mov
movsl
push
sbb
lahf
cmpsl
push
pop
sbb
jg
push
pop
in
mov
inc
inc
cmp
outsl
jp
aad
push
ss
cmp
inc
les
inc
cltd
in
imul
fscale
push
inc
mov
jno
or
adc
rorb
repnz
jecxz
cmp
push
aaa
subb
cmpsl
and
int3
fistpl
test
or
push
or
or
xchg
flds
and
fsubs
outsb
or
clc
imul
jp
mov
xchg
cmpsl
data16
test
xchg
shlb
xor
ljmp
sbb
enter
pop
sub
daa
and
add
add
mov
fs
shlb
xor
sub
rcrl
pop
cmp
xchg
movsb
scas
loopne
mov
arpl
jg
fsubrl
push
mov
pop
pop
or
dec
mov
dec
popf
lods
scas
in
xchg
je
dec
push
adc
mov
addb
int
lds
ds
jb
jno
jbe
out
leave
mov
sub
mov
mov
ss
ud2
out
sti
push
push
push
or
and
dec
test
sti
std
scas
das
in
into
bnd
add
jae
scas
inc
int3
lods
cltd
mov
sbb
les
cmc
inc
mov
out
push
repnz
ja
loope
sub
sbb
pop
xor
push
pop
and
pop
jmp
call
sub
and
dec
movsl
xchg
xchg
or
cmp
aaa
loope
mov
cmp
jne
adc
scas
pop
xor
out
sbb
sbb
mov
push
scas
dec
mov
push
adc
lock
jecxz
sub
mov
enter
cmp
ja
aas
sbbl
jle
jae
adc
pop
mov
or
xchg
pop
movsl
xor
push
std
or
pop
jp
push
in
pop
adc
mov
push
out
les
sub
js
dec
pop
adc
ja
outsb
iret
enter
push
add
pop
shrb
mov
arpl
jl
xchg
or
jo
rcll
loopne
cmpsb
imul
stos
pusha
das
or
mov
sahf
and
xor
test
xchg
cs
xorb
ret
adc
lods
and
mov
xlat
mov
shll
mov
mov
and
fisttpll
add
cmp
add
xor
pop
hlt
jnp
fimuls
jp
mov
dec
leave
lea
push
sbb
out
jae
ljmp
and
loope
xrelease
pusha
sub
in
stos
gs
xchg
aam
nop
dec
aam
pop
repnz
cmpsl
or
mov
test
xchg
mov
cmpsl
int3
pop
add
add
or
pop
mov
xchg
mov
arpl
mov
fidivs
div
xchg
dec
push
pushf
movmskps
push
push
arpl
ljmp
stos
pop
mov
rorb
addr16
lods
pop
mov
xor
imul
test
dec
xchg
jg
and
out
out
loope
add
imul
xchg
inc
add
push
lret
int
or
pop
ljmp
or
push
and
arpl
jle
cmp
pop
mov
enter
sbb
stos
mov
cli
sbb
aas
sti
int3
push
popf
and
mov
mov
bound
jl
jle
sahf
mov
or
scas
popa
add
subb
repnz
sti
xchg
dec
jle
inc
ljmp
or
stc
test
ljmp
sbb
aam
adc
dec
push
out
idivl
dec
cmpsb
add
popa
mov
test
loope
sbb
jo
xchg
mov
stos
cmpsl
loopne
mov
lcall
jne
mov
xor
ret
or
mov
fidivrl
fs
je
inc
sar
fdivl
inc
jb
cmp
adc
add
inc
cmpb
mov
insb
icebp
and
jae
movsl
fstp
dec
jb
pop
mov
push
incb
es
out
movsb
pop
les
movsl
not
loope
jns
adc
daa
addr16
test
pop
xchg
jl
out
in
or
mov
push
test
stc
aas
push
inc
push
or
mov
fwait
cmp
loop
adc
outsb
stos
fs
xlat
mov
repnz
cmp
cmpsl
inc
xchg
mov
jns
addl
sbb
ficomps
and
jmp
roll
pushf
in
jg
xorb
sbb
aam
icebp
out
mov
push
pop
out
mov
jle
gs
mov
jp
fstpt
test
sbb
mov
bound
test
loopne
add
movsl
fidivl
repz
les
lret
insl
or
xchg
xor
push
mov
inc
or
clc
clc
dec
lret
adc
std
test
mov
push
and
mov
mov
les
js
sbb
das
dec
shll
movswl
in
and
mov
loopne
or
jo
jl
rorl
xchg
mov
lahf
add
fistpl
test
lcall
mov
jns
les
push
sbb
pop
jnp
filds
das
xor
adc
xor
sbb
jae
and
mov
inc
mov
pop
dec
mov
lahf
or
rcrb
jle
aad
fisubl
movb
push
jno
push
and
mulb
ffree
out
fnstsw
lods
mov
popa
sbb
loopne
mov
jns
outsb
sbb
enter
push
loope
sub
mov
mov
push
dec
sbbl
inc
lds
adc
call
mov
sahf
gs
mov
adc
sbb
xchg
cwtl
or
loopne
and
xchg
mov
lret
mov
fidivrl
out
mov
xlat
aam
cli
push
imul
jb
push
nop
cld
pop
mov
loope
xor
cwtl
out
or
cmp
add
add
sbb
xor
cmp
in
and
jne
or
mov
mov
leave
mov
and
stos
or
dec
xor
andb
test
cld
out
push
inc
lahf
adc
rcl
jge
lret
sub
xchg
add
dec
push
movsl
andl
xchg
lock
mov
stos
sub
pop
inc
rcll
mov
cmpsl
jns
xor
add
xchg
shll
pop
jne
in
enter
sarb
ds
jns
push
rclb
pop
pop
sbb
pop
or
xlat
sub
test
decb
aaa
or
jecxz
test
fwait
mov
adc
push
adc
sub
insl
mov
mov
cmp
mov
mov
xor
movsl
mov
ds
mov
sub
jns
sub
xchg
ret
or
inc
sbb
cmc
sub
jl
clc
repnz
xor
int3
pop
lock
jne
addr16
sbb
xor
jae
xor
iret
pop
dec
imul
test
jge
fisubs
sub
inc
adc
and
xchg
mov
mov
cmc
or
aam
cmp
and
inc
call
aas
test
cld
lock
jmp
jno
mov
outsb
adc
mov
gs
push
imul
imul
or
test
jp
mov
dec
lret
lahf
hlt
or
sti
adc
dec
es
test
pusha
mov
arpl
xchg
movsb
cmp
adc
jo
mov
or
push
inc
jno
nop
jns
dec
mov
sti
daa
fisttpl
cmp
xor
xorb
push
fucomip
es
int3
inc
jbe
xor
fmull
xchg
adc
mov
mov
jno
cmp
cmpl
jge
xchg
xchg
aaa
fisttps
cltd
push
xchg
add
popa
pop
aaa
fwait
jns
cmpsl
and
cld
pushf
into
mov
rcll
add
inc
mov
jmp
push
pop
xchg
cmp
test
xchg
inc
add
ja
mov
add
in
insl
pop
fisttpll
and
je
or
lds
rolb
mov
fxch
insl
sti
test
jmp
mov
cmp
sbb
jl
jecxz
sub
sarb
cmp
xor
test
mov
jo
mov
adc
mov
add
or
sbb
or
jb
pop
jle
ja
stos
je
jg
push
mov
push
mov
push
cltd
test
push
hlt
cmpsl
aam
cmp
adc
jae
jae
dec
jb
daa
outsl
jg
or
andl
out
fs
cmpsb
adc
xor
divb
lods
mov
push
imul
jle
insb
mov
int
shll
xchg
jnp
and
dec
orb
out
outsb
cltd
jmp
cmp
rcll
sbb
mov
in
imul
sub
add
notl
loope
das
push
popf
mov
cmp
das
arpl
mov
push
rcll
jmp
cmp
lock
push
xor
pop
push
hlt
xchg
add
andb
or
pusha
jle
mov
mov
cmp
pop
or
jo
addr16
fsubs
and
jnp
sub
cmovne
test
sub
pop
push
jmp
rclb
add
push
pop
jbe
push
mov
xchg
mov
aaa
filds
jle
push
ficomps
add
and
jmp
shlb
pop
push
push
bnd
mov
or
aas
cwtl
jl
jp
mov
cmp
push
in
dec
dec
or
add
jmp
and
icebp
mov
dec
jge
enter
jo
test
mov
and
jmp
lret
dec
dec
fsts
mov
js
lahf
or
inc
jp
aaa
cmc
mov
imul
xor
add
subb
std
xor
into
cmp
pusha
lret
aad
jp
fcomp
cmp
sbb
jle
jbe
cwtl
movsb
jno
sub
dec
dec
add
movsb
lods
fidivrl
lret
push
jle
clc
or
sbb
or
loope
xchg
sbb
add
int
lret
adcb
pop
int3
mov
add
daa
and
sbb
push
rcr
into
repnz
xchg
scas
fs
pushf
lret
cmp
push
cmc
xor
orl
data16
pop
push
sahf
sub
mov
and
insb
or
push
sub
and
es
aas
inc
jno
popf
sbb
ljmp
xor
call
xor
push
ss
pop
shll
lcall
or
jge
mov
mov
shr
shrl
lahf
or
jbe
lret
lock
xlat
add
movb
lcall
pusha
cmp
mov
adc
xchg
cwtl
or
aas
sbb
lret
into
aaa
and
cwtl
jns
mov
imul
enter
sbb
pop
jnp
sbb
pop
add
inc
dec
insl
dec
ds
ficompl
icebp
out
divb
popa
pop
push
mov
inc
or
pop
out
test
shl
xor
stos
lods
mov
push
sbb
in
xor
sti
cwtl
pop
movsb
xor
mov
ret
adc
cltd
lcall
and
roll
push
pop
fisttps
push
push
sbb
pop
test
dec
enter
jmp
jle
sbb
jno
or
pop
in
test
pop
stc
cmc
jb
push
setle
sub
dec
jmp
ja
mov
pop
mov
pushf
cmp
pop
xor
jle
pop
fs
int3
addr16
jecxz
leave
cmpsb
xor
lahf
aad
cmp
cmp
addr16
into
loopne
cmp
hlt
xchg
mov
jmp
std
mov
and
mov
sti
out
jo
repz
xor
xor
add
cmp
lret
cmc
pushf
sarl
das
adc
cmpsl
xlat
leave
call
xchg
xor
mov
in
aas
mov
lock
xchg
inc
sti
jo
push
dec
mov
call
dec
sbb
xchg
mov
sbb
push
xchg
movb
notb
jbe
adc
pop
popf
scas
mov
aaa
sub
dec
jns
push
sbb
decb
pop
adc
add
lret
lods
xor
fwait
dec
sub
outsl
loope
pop
xchg
test
movsb
shll
lea
xchg
roll
inc
lret
inc
dec
pop
push
cmp
push
push
int
mov
sbb
pop
xor
sbb
sub
adc
dec
iret
pop
in
cmp
pop
daa
mov
pushf
pop
rol
incl
jle
imul
push
aaa
popf
sahf
push
dec
push
jb
call
adc
sub
and
jne
and
scas
or
shrl
sti
xor
inc
inc
jne
lret
vpmulhuw
jmp
cmp
cmp
or
iret
push
in
dec
xchg
mov
out
imul
mov
shlb
decl
jnp
adc
std
mov
addl
std
out
pop
popf
fucomip
call
and
and
and
pop
rorb
mov
xorl
outsb
push
iret
xchg
fcmovbe
mov
imul
clc
mulb
ds
scas
dec
mov
mov
cltd
call
and
fs
pop
loop
push
xchg
loopne
push
push
in
enter
scas
addr16
addl
cmp
pusha
outsb
and
shrb
leave
ds
popf
test
idivb
hlt
xor
jae
mov
addr16
jb
sub
or
xor
xchg
inc
mov
out
mov
rcr
mov
cli
cs
ljmp
cmp
xchg
mov
cli
lods
mov
mov
inc
adc
or
mov
call
repz
inc
imul
fldln2
mov
gs
and
inc
enter
cwtl
pushf
out
sub
or
cli
cltd
cli
loop
xor
mov
pop
push
clc
rcrb
xchg
xchg
adc
cmpsl
jb
add
pop
jle,pn
test
in
mov
nop
out
ret
xchg
dec
test
push
push
fs
es
push
and
push
push
arpl
sub
inc
cmpsb
test
xor
dec
gs
cltd
xor
jo
sbb
push
in
mov
sbb
push
data16
aas
mov
jp
sub
shrb
mov
mov
sub
pop
stos
scas
push
push
pushf
xor
push
or
adc
arpl
adc
in
cs
cmp
ret
fwait
mov
out
cmp
movl
lcall
sub
repz
iret
lods
push
jl
f2xm1
rcll
dec
push
sti
push
scas
dec
test
loopne
mov
in
js
aaa
cmp
leave
mov
push
adc
rcll
inc
or
lcall
rclb
gs
enter
push
pop
orl
in
ljmp
test
fadds
mov
xchg
jno
and
es
sbb
push
outsb
push
cwtl
and
out
adc
mov
mov
in
inc
jno
mov
mov
insb
adc
push
dec
arpl
jp
sbb
dec
insl
mov
xor
jmp
mov
xchg
dec
sub
mov
mov
and
inc
and
iret
insl
add
lds
mov
push
rcl
in
xchg
mov
cli
adcb
inc
pop
xchg
ficoml
std
adc
ret
mov
imul
pop
jae
xchg
out
out
lock
mov
in
dec
push
pusha
pop
out
stos
notl
mov
jae
scas
lret
xchg
dec
or
and
loope
push
adc
stos
adc
push
xchg
sub
inc
xlat
mov
imul
cltd
adc
dec
lcall
jmp
inc
push
mov
pop
fucomi
js
or
push
push
fimuls
test
or
jns
ljmp
xor
or
ret
inc
mov
call
adc
sbb
out
cld
iret
hlt
add
or
ficomps
es
push
mov
mov
cmp
mov
adc
ss
push
pop
test
mov
and
nop
cmp
pusha
mov
sbb
mov
test
jmp
sbb
cmp
pop
sbb
je
lahf
lcall
and
mov
add
sbb
clc
mov
push
xor
outsl
and
and
rorb
mov
pusha
stos
mov
sub
add
xchg
stos
cs
xor
out
popf
rorl
cmp
outsl
daa
push
sbb
dec
jg
mov
dec
stos
mov
dec
mov
icebp
or
mov
lret
lea
push
or
jmp
stos
aaa
les
cld
rolb
mov
or
cwtl
scas
ljmp
mov
notl
stc
jae
sbb
testl
jp
jp
lds
cmp
stos
inc
rcl
psubq
lods
push
jbe
lods
sbb
dec
into
pop
push
notl
pop
lcall
dec
sbb
pop
ja
mov
scas
test
jns
in
das
cmp
sbb
sub
shrb
dec
insb
pop
fisubrl
mov
and
cwtl
sbb
pop
pusha
loop
movsl
add
iret
jl
mov
out
ret
mov
lret
xor
jge
pushf
mov
arpl
adc
aam
andl
negl
inc
fimuls
xchg
push
ja
cmp
jbe
push
fidivl
pop
enter
cmpsb
es
jo
imul
cwtl
xor
cmp
mov
sub
scas
es
mov
mov
stos
mov
sub
ret
jp
jmp
call
ss
lcall
int
nop
jbe
inc
scas
ljmp
pop
inc
or
xchg
and
mov
les
icebp
roll
mov
add
adc
dec
xor
cmp
lea
rol
test
mov
xorb
roll
xchg
lahf
jbe
xchg
sbbb
outsl
or
add
cmp
mov
out
push
imul
push
pop
pop
sbb
fdivl
js
push
cwtl
lds
pop
sahf
enter
divb
insl
adc
adc
cmp
int3
negl
inc
lret
pop
push
sub
adc
or
aas
call
jl
mov
rcrl
insl
inc
or
cmp
adc
push
test
jo
sbbl
push
push
ss
into
inc
test
mov
adc
mov
mov
pop
pop
arpl
popf
vzeroall
push
adc
lods
cwtl
sub
jl
mov
stos
cmp
pop
roll
adc
mov
pusha
and
mov
push
mov
cld
std
and
push
imul
outsb
roll
adc
mov
sub
cmp
or
and
popl
popa
cwtl
cmp
mov
sub
fcmovne
cmpsw
pop
lret
scas
xorps
inc
cmp
aas
xor
sbb
push
rolb
dec
push
dec
sub
cltd
jne
pusha
cmpsb
dec
enter
sub
fimuls
pop
push
mov
push
mov
lods
sbbb
jno
mov
or
mov
inc
xor
dec
mov
mov
nop
scas
test
mov
std
inc
push
aaa
xchg
xor
xchg
cmp
sahf
aad
add
notb
subl
mov
jno
jecxz
loope
mov
arpl
lcall
icebp
pop
push
fdivl
sub
mov
dec
sbb
mov
pop
jg
ja
out
imulb
test
add
mov
xchg
adc
movsl
imull
mov
fisttpll
inc
pop
add
stc
int
adc
out
test
mull
adc
xor
inc
fwait
dec
mov
int
fcomp
bound
jp
je
mov
std
jle
lds
rcrl
push
lds
mov
or
cltd
int
inc
mov
movsl
and
in
cmp
xchg
pop
andb
fbstp
sbb
movsl
sub
hlt
insb
icebp
sbb
mov
push
enter
xchg
mov
add
test
out
mov
sub
pop
lahf
xor
cmpsl
fbstp
or
movsl
cmpl
mov
pop
xchg
movsb
xchg
xor
loopne
and
jbe
cmp
enter
out
xlat
outsl
adc
ret
xor
xor
ja
out
add
pop
pop
ss
inc
add
popf
xchg
dec
shlb
call
xchg
mov
jne
mov
pop
pop
cmpb
sti
jb
imul
loope
mov
cmpsb
add
mov
fsubl
lods
sahf
cmp
out
cli
xor
into
shl
pop
sbb
xor
int3
popa
stos
loopne
repnz
js
inc
pop
les
loopne
push
dec
scas
dec
push
mov
scas
aas
and
push
std
test
aam
adc
rorb
je
lea
out
stc
insl
mov
sbb
push
fnstsw
out
mov
outsb
xchg
popa
scas
mov
mov
pop
xchg
and
push
push
aas
pop
inc
jmp
lahf
divb
push
cmp
xchg
lahf
in
jmp
or
ja
mov
mov
loop
std
hlt
in
sahf
adc
jecxz
inc
inc
inc
mov
sub
sbb
jmp
lea
dec
push
and
sbbl
fwait
inc
cs
mov
and
mov
cmc
xor
test
jbe
dec
dec
imul
sub
out
nop
mov
adc
stc
add
mov
rclb
jno
loop
dec
dec
mov
push
and
popf
inc
movsl
sub
rcrl
pop
repnz
lds
pop
pop
sub
ja
pop
xor
in
ljmp
sahf
pop
int
xorl
fists
jnp
or
pop
sbb
in
push
sbb
and
xchg
inc
aad
push
push
rcr
bound
cmp
jnp
enter
stos
jecxz
pop
or
mov
jno
dec
dec
and
hlt
push
and
stos
popa
cltd
lea
test
mov
sbb
dec
mov
cmp
xchg
mov
mov
jmp
mov
lods
and
js
or
mov
roll
int3
mov
inc
in
sbb
imul
mov
es
add
xchg
fildll
popf
nop
and
mov
pop
mov
cmp
aaa
xor
sahf
test
dec
fs
sbb
lahf
mov
jle
add
lock
jnp
out
mov
or
in
test
ror
xchg
xorb
mov
jle
mov
add
or
orb
push
xor
jns
in
push
sub
aas
or
ljmp
or
shlb
cmpsl
arpl
push
push
out
ljmp
xor
std
int
push
inc
xchg
push
push
sbb
add
lds
in
push
in
pop
mov
xor
sbb
jmp
pop
push
stos
gs
jecxz
iret
push
push
mov
lahf
ret
pop
push
imul
and
sbbb
je
adc
mov
push
movsl
in
stos
add
inc
pop
push
mov
xchg
and
xor
loope
push
scas
xor
mov
loopne
dec
or
mov
cmp
shl
fdivs
mov
dec
stos
sbb
aam
ja
add
mov
gs
test
inc
ret
imul
lahf
outsb
pop
imul
cmp
cmp
push
sbb
mov
add
popf
leave
pop
push
pop
sbbl
out
lea
pop
pop
mov
pop
scas
xor
mov
in
mov
jp
loopne
xlat
jnp
and
push
test
jmp
push
mov
inc
ljmp
repnz
mov
loopne
xchg
xorl
or
cmp
gs
jns
inc
push
jno
roll
ret
subb
icebp
jmp
pop
add
rclb
mov
fstps
mov
xchg
mov
jo
cli
btl
scas
push
cli
sbb
std
divl
pushf
iret
mov
sahf
mov
mov
mov
test
stos
ss
out
jmp
lods
xchg
and
ret
rorl
xor
mov
xchg
inc
clc
out
fwait
imul
aas
cmpsb
data16
cmp
nop
pop
std
sub
fucomip
xchg
movsb
fcomps
jp
cld
fidivl
out
daa
fnstenv
xor
scas
jmp
ljmp
test
cmp
mov
dec
shrl
fidivrs
pop
leave
cmpsb
push
hlt
push
mov
daa
pop
pop
sbbl
out
pop
lea
and
xor
outsb
add
xor
xchg
cmp
cli
inc
inc
xchg
xchg
dec
subl
shl
sbb
mov
ret
mov
call
test
jbe
shrb
cmpsl
data16
sbb
lods
sub
dec
mov
in
push
and
jl
filds
jl
xchg
cwtl
xor
xchg
movsb
repnz
icebp
add
aad
mov
dec
sbb
cmc
adc
push
or
cmp
push
rolb
repnz
cli
aas
dec
call
fucomi
fldl
push
fsubl
xchg
fld
cltd
xchg
test
dec
xor
inc
lret
insb
in
xchg
ja
cmp
out
or
and
xor
lods
fsts
test
or
orl
xchg
inc
dec
scas
xchg
cmpsl
push
cld
clc
xchg
movsb
ret
fsubrs
lods
loopne
push
or
fldl
cli
ucomiss
adc
lds
mov
push
adc
jnp
ds
mov
arpl
jne
fisubrs
ret
pop
mov
mov
sub
pop
push
mov
adc
lods
shlb
xchg
mov
loopne
and
or
sub
scas
sahf
xor
adc
xor
fnsave
pop
add
testb
mov
push
gs
jmp
push
and
imul
lods
mov
ja
push
in
sbb
jb
dec
xchg
out
ljmp
mov
cmp
lahf
shrl
arpl
push
pop
xor
sub
daa
cmp
test
mov
out
or
andl
cmp
sbb
sub
and
pusha
dec
and
cld
jecxz
test
cmp
jmp
sub
div
iret
out
daa
lods
sbb
push
aad
jmp
jmp
stos
in
sub
mov
out
push
push
cmp
aaa
mov
pop
jbe
xor
js
fidivrl
fwait
push
jne
xchg
lds
mov
xor
pop
jne
cld
clc
inc
stos
out
add
lret
jb
movsb
adc
ja
push
in
or
dec
pusha
or
mov
pop
mov
inc
jecxz
int
rclb
lods
sbb
les
daa
mov
jnp
fs
jne,pt
xchg
fidivs
dec
in
push
mov
shll
les
bound
mov
pop
pusha
rolb
fdivrs
repnz
in
mov
mov
xor
rcll
fiaddl
push
mov
sub
daa
xchg
cmp
ss
add
cltd
mov
push
movsb
adc
xchg
and
or
push
mov
sarl
add
std
mov
pop
das
sahf
sbb
jo
xchg
dec
insl
js
or
sub
push
in
push
loop
mov
das
scas
cmp
sub
mov
ficoml
and
aam
mov
adc
in
or
xchg
inc
std
popf
adc
jno
ja
bound
pop
addl
xor
mov
enter
push
int
lret
adc
stos
cmp
pop
pop
push
jmp
adc
cmp
mov
cmpsl
inc
pusha
jns
mov
jl
mul
push
sbb
jb
sub
jmp
das
mov
dec
out
and
xor
jno
and
mov
sahf
out
dec
jl
cmp
in
mov
sub
pop
mov
testl
cltd
pop
cwtl
jg
and
lds
das
call
aaa
xor
and
fstpl
clc
pminub
inc
mov
mov
jecxz
cld
enter
xlat
jbe
dec
xor
jp
adc
je
fcomi
cs
mov
push
cld
scas
outsl
lock
mov
mov
pop
inc
negb
xor
mov
mov
bound
cmpsl
adc
jno
cmp
shrl
test
out
mov
add
push
xlat
mov
sti
add
inc
mov
pop
shll
scas
icebp
ret
inc
les
dec
mov
shll
insb
ret
mov
sub
jbe
sbb
push
push
stos
aas
stc
xchg
sub
movl
adc
dec
or
push
loope
mov
adc
rcr
popa
xchg
and
dec
mov
fwait
pop
into
call
jg
stos
mov
inc
out
lock
outsl
push
mov
push
adc
or
pusha
xor
stos
jle
inc
jo
mov
push
push
cmp
in
sbb
scas
cmp
mov
mov
mov
das
mov
mov
rcll
ret
and
pop
push
mov
stos
cmp
test
xchg
ja
clc
in
dec
movsb
and
sub
push
xchg
inc
push
stos
testl
xchg
imul
cmpsb
mov
pop
es
fwait
inc
xor
cld
repz
mov
sub
leave
test
mov
ds
pop
aaa
pop
pop
loop
cmpxchg
adc
pop
jno
mov
ret
lret
cmp
xorl
pop
push
jnp
out
xchg
xchg
mov
xchg
dec
fmul
jns
div
jb
mov
pusha
sub
mov
out
pushf
xchg
es
stos
in
mov
adc
test
gs
fdivrl
int3
mov
call
popf
jae
and
in
fsubl
cli
xor
int3
cmp
or
imul
push
xchg
add
mov
cmpsb
xchg
add
mov
test
cmovns
cmc
mov
jno
mov
mov
pusha
daa
inc
sub
ss
stos
mov
push
mov
pop
sbb
pop
jmp
out
lret
mov
test
lcall
cld
mov
shl
inc
and
stos
cmpsb
dec
xchg
cmpsl
lret
mov
andl
cmp
std
mov
push
mov
loope
in
adc
fistpl
cld
sbb
inc
ljmp
fwait
lods
jmp
sbb
fiadds
jge
dec
repz
loopne
loopne
cmpsb
aad
fidivrl
sbb
fsubrl
mov
subb
sub
subl
enter
rcrl
jecxz
xor
xchg
xor
dec
sbb
bnd
xchg
adcl
push
loope
push
mov
pop
cmp
into
das
out
jg
adc
fisubs
shll
pop
stos
jmp
pop
jno
mov
cmp
inc
in
push
das
addr16
xor
lods
push
movb
mov
lods
in
push
cmp
mov
lahf
xchg
nop
pop
jl
dec
ljmp
pop
scas
les
in
ljmp
jecxz
testl
mov
pop
enter
int
adc
jo
clc
lcall
jbe
or
xor
and
cmc
rcl
mov
ss
ret
hlt
insb
push
mov
adc
cmp
out
push
pushf
or
cmpsl
and
mov
sarb
lcall
jae
mov
sarb
out
pop
push
lea
ret
fsub
and
jge
jge
mul
or
cld
jns
dec
aas
mov
test
cld
mov
push
sti
fs
int3
inc
enter
stc
pop
mov
mov
mov
pop
mov
loopne
fdivrs
sbb
je
daa
decb
push
xor
jle
test
lock
fwait
add
test
aaa
mov
sbb
lods
inc
jno
sub
add
inc
bound
insb
dec
mov
pusha
data16
lcall
sub
xor
jno
out
imul
rorl
ja
testb
shr
cmp
xor
push
or
test
stc
sub
js
fcoms
out
inc
sbb
sub
adc
cld
test
shlb
aaa
jge
mov
mov
icebp
out
sbb
fdivl
iret
ljmp
sub
fs
dec
dec
movsb
in
imul
pop
push
test
adc
fstl
and
jle
cmp
add
xchg
or
in
adc
jne
into
or
data16
sti
dec
cmp
xchg
xor
leave
int
xchg
sbbb
in
add
dec
mov
pop
loop
lret
jno
jle
aaa
push
stc
lods
fidivs
inc
adc
dec
arpl
add
sub
xchg
push
js
adc
push
outsb
push
mov
js
sub
jns
sub
std
mov
pop
pop
clc
mov
es
pop
push
loop
out
shrl
dec
or
mov
fldcw
or
jmp
push
je
int3
dec
shlb
mov
and
dec
popa
ficomps
jmp
test
mov
fbld
movsb
cld
outsl
and
adc
cmp
mov
vmovsd
push
out
inc
xor
cwtl
jmp
xchg
pushf
sbb
xchg
ret
push
incb
mov
daa
in
repz
shl
jns
and
jbe
jge
inc
popa
pop
mov
dec
scas
sub
fistl
addb
icebp
ror
inc
push
inc
push
push
test
pminsw
jmp
and
imul
and
xorb
adc
and
addr16
shlb
or
mov
pop
cli
push
push
xor
cmp
sbb
and
jo
aaa
hlt
and
mov
dec
sbb
sbb
fs
push
lock
mov
repnz
jb
jno
mov
push
and
sbb
cmc
in
imul
lahf
ds
pop
lret
mov
or
add
push
leave
insl
fnstenv
in
popa
xchg
std
dec
ret
pop
movsb
repnz
add
into
mov
ja
cli
cmpsl
or
adc
stos
out
inc
popl
shrl
jo
mov
push
sbb
das
pop
ss
cmp
mov
fists
out
hlt
mov
std
jecxz
and
and
jp
test
or
push
jno
fmuls
add
add
and
in
cmc
inc
es
das
insl
sub
jns
pushl
or
mov
data16
push
inc
or
loop
push
int
push
bound
movl
movsl
inc
cltd
xchg
addr16
dec
mov
out
jns
jnp
xchg
iret
outsb
ficoms
dec
test
pop
idivl
into
aas
sub
fistpll
fsubs
jle
mov
push
inc
push
aam
call
insb
mov
fiadds
jno
mov
and
mov
mov
mov
sub
movb
fbld
sub
add
and
in
inc
je
lods
and
lods
sbb
gs
test
pop
loop
lret
aas
adc
sub
push
lods
or
decl
xor
je
aaa
lds
mov
cmp
mov
ja
popa
jmp
sub
and
add
mov
mov
mov
stos
and
xchg
or
lds
pop
popa
dec
mov
cmp
roll
cwtl
or
aam
inc
jbe
inc
mov
test
aaa
jmp
cmp
mov
in
pop
int
stos
loope
aam
rcrb
movsb
bound
mov
mov
popf
sbb
out
pop
test
int3
dec
test
insb
scas
into
xlat
les
pusha
sbb
lahf
add
jge
mov
xlat
add
fmulp
mov
sarl
sbb
mov
mov
sub
das
mov
jl
mov
dec
mov
or
dec
dec
jae
xchg
and
clc
jnp
cmpsl
mov
in
js
or
cmp
and
xor
or
arpl
jmp
in
in
ljmp
stos
das
jecxz
mov
mov
or
jae
dec
js
stos
dec
mov
jp
movsb
das
mov
cmp
mov
jge
push
and
ja
fs
lock
pop
dec
mov
jle
cmp
sahf
cmp
jle
jg
iret
xchg
into
or
pop
arpl
pop
js
cwtl
jae
mov
aad
and
outsb
das
sub
sub
mov
les
sbb
dec
dec
cs
xchg
loope
hlt
daa
das
cmpsb
and
mov
lea
bound
je,pt
jae
movsb
aas
or
pop
xor
addr16
add
ret
push
popa
mov
push
mov
mov
movsl
loop
cmp
dec
scas
jecxz
stos
ljmp
lods
nop
lods
lea
test
add
pop
sub
hlt
mov
dec
push
push
data16
push
mov
mov
sbb
rcrl
xor
in
or
mov
or
cltd
shlb
mov
add
or
xor
int
push
xchg
pushf
cmpl
jl
cli
sbb
fildll
add
out
jne
into
pop
dec
movsb
add
stos
loope
ljmp
adc
mov
subl
and
lods
mov
popa
mov
mov
out
mov
cmp
mov
cli
mov
pop
mov
or
xor
lahf
or
lods
mov
xchg
and
pop
loope
lahf
mov
js
lcall
int
push
and
gs
mov
dec
push
sti
pop
out
aam
push
adcb
lock
call
scas
arpl
gs
and
mov
pop
pop
mov
fs
dec
push
push
mov
mov
mov
push
subl
iret
xchg
jnp
jnp
ja
repz
out
lcall
push
std
cli
mov
jae
roll
jb
aas
outsb
sub
jg
outsl
sub
ret
bound
and
mov
movsb
push
mov
sarb
jno
push
and
inc
pop
inc
sbb
jle
or
out
ficoms
fstpt
cmp
cli
jecxz
pop
or
imul
mov
xor
mov
and
nop
or
aam
mov
jmp
addr16
movsl
adc
repz
mov
inc
xlat
inc
cld
mov
sbb
jnp
leave
mov
sub
mov
and
dec
mov
ljmp
mov
lret
mov
dec
in
movsl
jnp
sub
repz
push
cmp
test
js
mov
add
hlt
mov
and
jbe
xchg
daa
call
jecxz
into
icebp
arpl
stos
mov
sub
dec
leave
jmp
inc
fistpll
xchg
popa
aad
and
pop
mov
push
add
fcmovnu
pop
jg
xor
add
movsb
jmp
icebp
popa
andb
mov
add
cltd
jne
cmp
invd
sub
adc
mov
pop
adc
fcmovnu
bound
add
cltd
jmp
mov
popa
mov
cmp
mov
xchg
movsl
mov
cmp
fwait
pop
sbb
js
popl
push
add
scas
jne
pop
pop
scas
dec
scas
mov
jl
std
push
mov
popa
cmpsl
cmpsl
adc
loope
dec
or
sub
and
adc
mov
adc
daa
xorb
sub
adc
test
fsubs
add
leave
clc
mov
dec
mov
fdivrl
cmc
xor
nop
mov
inc
jo
in
mov
aas
jecxz
int3
es
push
sbb
sbb
and
pushf
dec
cmp
fs
pop
jnp
pop
adc
bound
sub
xchg
in
mov
daa
adc
push
fwait
adc
jns
mov
inc
rol
and
repz
notb
jbe
sbb
lret
out
test
jmp
dec
jecxz
outsb
das
pop
and
aaa
xchg
js
hlt
push
cmp
cmp
mov
lods
fldt
mov
sbbb
and
push
xchg
lret
push
and
fidivl
int
xor
daa
lahf
sti
jno
imul
add
aaa
xor
leave
lea
xor
xchg
ficoms
push
cld
xchg
iret
mov
xor
pop
lods
mov
fisttps
mov
xor
rcr
adc
repnz
lahf
mov
repz
xchg
andl
out
movsb
inc
test
fildll
pop
mov
dec
xchg
adc
xchg
push
in
sub
js
arpl
mov
mov
mov
xor
mov
scas
mov
sub
lahf
orb
mov
push
icebp
mov
mov
imul
add
scas
pop
add
addr16
int3
cmp
cli
xor
rcrl
aad
sub
xchg
das
lea
call
iret
jns
xlat
hlt
stc
mov
xor
sub
jbe
sbb
movsl
adc
mov
pop
fnstsw
je
inc
or
rclb
std
jmp
repnz
mov
leave
mov
gs
lret
adc
add
push
jmp
mov
dec
incl
and
mov
fisubl
xor
and
cmp
lds
loopne
cmpsl
fstpt
fimull
pop
scas
xor
out
ficoml
pusha
in
shrl
out
or
loop
inc
and
mov
stos
pop
ss
and
jge
loope
sarl
fisubrs
fdivr
push
xchg
daa
jmp
cwtl
aad
dec
movsl
dec
vhsubpd
push
into
push
cli
push
xchg
pop
mov
jb
inc
int3
mov
mull
inc
dec
jecxz
mov
xor
iret
lea
dec
stos
cmp
inc
out
or
mov
cmp
out
xchg
call
xchg
dec
mov
shll
in
les
jmp
fcomps
cmpsl
test
mov
sub
fsubs
xchg
std
shll
ret
mov
popa
stos
cld
ss
test
ljmp
rcrl
inc
mov
mov
or
inc
sub
or
fists
movsl
adc
jo
rclb
icebp
fisubl
add
stos
dec
lret
adcb
push
pop
pop
dec
mov
cmp
insb
fistl
mov
mov
daa
push
rolb
mov
lods
test
sub
cmp
arpl
icebp
rol
push
pop
ret
andl
subl
inc
lret
aas
xchg
imul
cmpsb
int
aas
xor
loop
loop
cwtl
movsl
int3
arpl
ffree
add
pop
mov
mov
sti
filds
cmp
sub
xor
rorl
pop
cwtl
sub
out
jmp
and
mov
aam
sbb
adc
xchg
push
dec
cs
daa
jno
popa
mov
pushf
xchg
add
inc
jns
jo
xorl
xor
xchg
xchg
or
lods
add
jnp
repnz
sbb
jne
jne
mov
or
loope
icebp
cmp
push
xor
pop
stos
js
mov
or
rorl
addl
ficomps
je
aaa
imul
mov
sbb
inc
sub
and
push
ret
ljmp
add
mov
daa
pop
push
xchg
fstpt
pop
push
loop
mov
adc
lods
or
mov
xor
ss
cld
mov
inc
loope
mov
xchg
cmp
scas
loopne
lods
testl
scas
pushf
cmp
bound
xchg
xchg
call
dec
inc
xor
mov
mov
out
outsl
addr16
ret
int3
jmp
fidivrl
prefetchnta
jecxz
cltd
mov
mov
mov
and
aam
xchg
mov
sbb
inc
test
add
fildl
xor
push
pop
stos
dec
inc
adc
cmp
negb
mov
mov
xchg
push
and
or
sbb
pop
aad
dec
mov
scas
lret
mov
aam
enter
adc
lahf
cmp
push
inc
aaa
insl
mov
lcall
js
mov
sbb
pop
scas
jnp
and
jge
mov
push
xchg
sub
movsl
mov
inc
pop
fldl
sbb
ficomps
sbb
test
adc
sub
sarb
shr
ljmp
out
xchg
cmp
sub
mov
out
out
xlat
pop
in
repz
xor
cmp
cmp
int
cli
pop
int
mov
lret
in
sbb
das
cltd
jl
inc
jge
jno
rcl
int3
cmpsl
mov
cmp
rorb
cwtl
push
iret
xor
outsl
out
xlat
nop
push
jecxz
cmp
daa
mov
adc
add
test
sahf
mov
imul
push
jne
daa
fidivrl
fildl
lahf
into
sti
xorl
sbb
cmp
mov
cmpsb
xchg
out
mov
mov
in
sti
ds
outsb
pop
inc
push
push
dec
inc
mov
loope
mov
sbb
pop
sbb
push
jb
mov
and
lahf
in
jae
in
les
cltd
imul
xchg
lock
jg
push
mov
ja
jl
shrb
xchg
xchg
mov
loop
incb
mov
jle
int
testl
rolb
cmp
add
lods
shrb
jne
pop
cmp
xor
add
jnp
adc
sub
sbb
mov
call
fs
pusha
mov
and
les
push
test
fwait
jo
mov
add
push
or
incb
mov
adc
or
cltd
inc
shrb
cmp
pop
xor
push
push
mov
dec
adc
xchg
jne
and
movsl
js
subl
sbb
nop
or
into
jo
out
dec
lods
lods
lea
jns
xchg
dec
sbb
cs
inc
insl
aad
xchg
dec
push
cmp
addr16
inc
sbb
adc
mov
sbb
rolb
scas
test
dec
xlat
add
pop
dec
leave
mov
lahf
mov
rorb
movsl
ficompl
cmp
test
sub
add
outsl
add
imul
sub
fldl
ja
xlat
mov
faddp
xchg
xchg
movsb
ret
add
xchg
and
xor
jne
popa
stos
icebp
ja
pop
mov
adc
xor
roll
hlt
cld
roll
scas
std
jp
mov
pop
gs
mov
loop
cmp
lea
mov
sub
pop
inc
fisttpl
cmp
out
push
je
and
push
orb
pop
inc
addr16
clc
pop
sbb
arpl
push
push
movb
xor
outsb
lds
lret
push
sti
loop
pop
cltd
inc
rol
adc
sarl
pop
xchg
out
popa
cmp
imul
cmp
stos
loopne
popf
jae
ja
sub
jle
or
in
int
pop
fcomps
into
inc
or
mov
icebp
test
jbe
dec
add
xchg
adc
cmp
cld
fadd
mov
out
popa
and
into
add
dec
fs
lcall
aas
hlt
jmp
lret
ret
sbb
mov
add
and
push
dec
ss
negb
mov
inc
and
xor
in
sbb
mov
lods
out
les
xor
push
push
cmpsb
lahf
ds
dec
lods
xchg
in
lds
hlt
cwtl
add
arpl
sar
fisubs
fsub
push
mov
sbb
jns
imul
xchg
pusha
xchg
leave
sbb
ljmp
aaa
sahf
jge
sub
sub
or
shll
mov
cmp
xchg
push
mov
insl
daa
dec
lret
push
jno
adc
je
sbb
or
out
aad
cld
adcl
add
scas
add
aad
sbb
lds
or
or
and
int3
inc
je
scas
stc
xor
xchg
pop
cmp
aam
aas
add
fs
xor
lret
jmp
add
pop
into
sub
js
jne
pop
fbld
xor
subb
roll
mov
dec
pop
inc
lahf
dec
ja
mov
sub
jle
in
jecxz
pop
xorl
jp
sub
gs
aam
dec
shrb
outsl
jb
push
jge
and
test
add
fidivl
pop
cmp
cld
movsb
cmc
and
dec
push
jbe
imul
adc
cmpsl
lock
stos
ljmp
out
pop
sarb
push
imul
dec
or
dec
jl
lahf
sbb
jecxz
inc
cld
js
push
sbb
fists
leave
xchg
xchg
test
add
es
jl
mov
loop
pop
mov
sbb
shl
push
loop
inc
xor
jl
jecxz
mov
lcall
sbb
pop
or
pop
mov
out
push
xchg
nop
xchg
fldl
in
pop
xchg
pop
fwait
cmp
js
pop
cmp
xchg
lret
fs
jnp
and
rorb
jns
ss
lds
rolb
dec
and
mov
imul
in
fldl2e
dec
out
bswap
mov
hlt
sub
mov
xchg
push
insl
pop
test
push
xchg
imul
mov
lds
popf
push
mov
inc
sbb
push
arpl
adc
xchg
push
pop
ljmp
push
arpl
call
mov
inc
cs
mov
jg
cmc
shlb
idivl
iret
daa
mov
inc
fdivl
hlt
add
pop
lahf
xchg
rcrl
mov
outsb
lahf
mov
push
pop
dec
lcall
xlat
xchg
cmpsb
push
loopne
shlb
sub
adcl
decl
jp
add
adc
shll
cltd
sub
or
jnp
xchg
popf
ficompl
cmp
dec
aas
mov
das
cwtl
dec
mov
jae
xchg
xor
popf
es
ds
sarb
icebp
adc
test
sti
lock
and
jae
push
sub
rcrl
int3
dec
mov
sbb
gs
test
movsb
cs
push
in
in
sti
shr
mov
xchg
pusha
stos
push
jge
push
inc
xor
sar
fldenv
orb
sbb
dec
cmp
divl
sub
mov
out
xor
testb
cmpsb
fbld
fadd
rcl
movsl
ficoml
addr16
inc
xor
in
out
test
mov
mov
cmpsl
xor
xchg
aas
ret
repnz
sub
jae
mov
or
jns
add
nop
repz
jo
fstpt
add
lahf
pop
or
sub
inc
pop
lahf
mov
mov
and
fldt
sbb
idiv
dec
jno
adc
shrl
out
or
shr
sbb
or
jmp
test
icebp
inc
sub
adc
and
scas
pop
mov
adc
sbb
dec
sub
mov
or
repz
cmp
xor
sbb
mov
es
mov
lods
mov
push
fwait
iret
mov
add
mov
pop
aam
mov
aam
pushl
lods
pop
pop
xchg
ss
ja
push
jecxz
cmp
push
xor
je
xor
adc
cld
jns
shr
pop
push
stos
int3
inc
daa
add
lods
ja
out
pop
dec
popf
pushf
loope
jle
mov
pop
push
sub
add
testl
mov
inc
push
mov
test
fcmovu
inc
mov
push
mov
loopne
push
cmp
or
xchg
cmp
add
inc
inc
imull
scas
adc
adc
fmul
in
add
lds
imul
stos
push
and
jb
jmp
rcl
push
gs
lret
cmp
imul
xchg
push
push
lock
das
outsl
mov
test
icebp
xor
push
popf
das
cmp
sbb
jo
rorl
push
pushf
outsl
cld
pushf
in
sbb
sti
mov
sub
or
xchg
mov
xlat
pop
add
cmp
adcb
rcrb
xchg
daa
jg
mov
pop
repz
sub
inc
sub
mov
xchg
xchg
lret
fcomps
out
test
sub
out
fiaddl
jno
mov
inc
pop
mov
push
add
lret
andb
push
movsl
lahf
cmp
adc
stos
rorl
insl
insb
rorb
cmp
pop
cli
incb
and
sbb
int3
xchg
pop
pop
je
sar
push
incl
mov
add
lods
rcrb
xchg
shl
push
int3
in
push
cld
pop
mov
push
adc
popa
sub
and
fstps
stos
stc
movsb
cwtl
aad
cmp
add
nop
fnstsw
xchg
cmc
lahf
adc
inc
mov
pop
add
sarl
pop
cmp
jo
pop
pop
mov
or
fistpll
pop
sub
jno
test
fsubl
cltd
push
out
in
sbb
popa
and
jne
aaa
dec
xlat
int3
mov
sbb
stos
cli
push
lock
pop
add
inc
xchg
es
or
adcl
or
outsl
addr16
add
ljmp
jle
loope
pop
das
pop
popa
adc
sub
test
ret
xor
sub
push
sbb
jnp
mov
jns
push
mov
cmpsb
pxor
stos
adc
cmp
in
pop
jge
decb
mov
fists
ja
jne
jo
scas
or
dec
pop
pop
fcom
xor
pusha
pop
push
xor
sbb
fdecstp
repnz
insl
add
out
xlat
aad
rcrb
dec
pop
fwait
sub
mov
lahf
sub
clc
jle
add
loopne
mov
or
ljmp
clc
vpavgb
sarb
rclb
xchg
adc
jne
ss
ja
jae
pop
les
xchg
fcom
push
xor
ja
mov
cmp
or
out
adc
je
leave
xchg
mov
inc
popa
push
push
sahf
jnp
sbb
fimuls
mov
ss
jno
leave
call
jmp
inc
or
xchg
popf
mov
or
mov
sahf
daa
mov
mul
jg
mov
inc
inc
jae
jp
movsl
js
dec
and
cmp
mov
mov
repnz
out
and
nop
fsubrs
iret
in
xchg
sti
decb
dec
stos
xor
inc
dec
adc
dec
lcall
sub
pxor
cld
into
int3
pusha
lods
in
fcmove
add
jmp
mov
or
jo
call
cld
int
mov
loope
scas
arpl
lahf
jne
test
add
fwait
jle
mov
jle
lret
cmpsl
mov
sahf
and
jge
iret
scas
dec
xlat
lock
je
rol
leave
outsl
pop
ja
shld
fcoml
sub
xlat
das
cmpsb
es
lea
adc
cmp
pop
mov
mov
repnz
mov
push
push
xchg
sti
int3
mov
pop
adc
fcmovb
jo
cmp
call
outsl
in
push
xchg
repz
add
es
in
xor
lds
jmp
push
les
fimuls
int3
fwait
div
push
cmpsl
lcall
dec
pop
in
mov
sti
add
dec
jmp
es
mov
movsb
repnz
stc
insl
cli
xor
xchg
adc
inc
mov
adc
mov
sbb
cmp
and
std
cmp
adc
lods
lock
icebp
adc
scas
aad
jmp
test
jmp
sbb
icebp
pop
and
and
add
xchg
sub
aas
sar
repz
xchg
adc
arpl
adc
scas
mov
in
push
mov
and
and
subb
dec
push
sub
out
scas
aam
mov
rcrl
int3
lock
push
push
scas
aad
in
ss
into
aaa
imul
dec
and
or
and
pop
or
call
fldcw
push
cmp
push
lods
add
mov
xor
sbb
jb
sahf
cmp
sbb
aam
mov
or
sahf
test
mov
xor
adc
stos
pop
dec
arpl
je
pop
and
cli
jg
xlat
adc
jnp
pop
cmpsl
xchg
jns
xchg
mov
mov
jnp
or
mov
adc
testb
popf
stos
ret
sub
sub
sub
mov
pop
pop
dec
cmpsb
mov
cmp
xor
jp
les
push
fs
mov
sub
loop
mov
in
je
call
jge
cmp
mov
andl
notl
pop
shll
pop
xor
cmpl
lods
xchg
lock
mov
push
repz
jmp
mov
mov
adc
or
xchg
mov
xchg
or
lahf
mov
loope
cmpsb
jb
push
dec
out
fs
sbb
fs
push
sarl
daa
fmuls
adc
test
jb
pop
jp
lahf
orb
adc
cld
mov
cwtl
sub
cmp
iret
push
mov
and
addb
and
and
jmp
sub
bound
shrl
sub
ljmp
dec
jle
ja
push
aaa
mov
cs
xor
jae
pop
add
fildll
loopne
push
sub
and
dec
je
jge
or
pop
jge
stos
cmp
push
das
arpl
pop
cmp
jne
in
aam
imul
leave
xor
hlt
jg
sbb
cld
movsb
arpl
dec
repz
xor
push
lods
ja
xchg
std
pop
cmp
dec
daa
repz
stos
jge
push
inc
ret
movsl
jmp
lcall
add
test
dec
das
popa
mov
xlat
js
sbb
in
cmp
lcall
cld
inc
cmp
andl
add
std
push
aaa
inc
adc
fisttpl
mov
fadds
enter
add
jne
inc
dec
sbb
ja
daa
adc
fbld
fwait
imul
lods
push
jnp
ljmp
packsswb
movsl
leave
rcrb
mov
dec
inc
jns
inc
popa
lret
xor
xchg
sbb
push
les
sub
jecxz
lcall
xor
add
adc
xchg
sbb
fnstsw
adc
inc
jle
sub
fcomip
or
rclb
mov
lock
imull
stos
lock
lods
adcl
addl
jb
or
out
and
rcrb
xor
das
sub
dec
loopne
sub
inc
repz
fildl
cs
dec
int
mov
pop
pop
clc
gs
imul
cmp
stc
int3
ss
shrb
mov
aam
loopne
cmpsb
pushf
dec
cmp
mov
nop
leave
jns
in
int
jp
aad
sarl
mov
cmc
adc
inc
sbb
out
mov
jp
ficompl
mov
push
and
dec
mov
and
adc
popf
xchg
sub
aaa
or
pop
icebp
rorb
xchg
xchg
scas
mov
add
xor
lods
cmpsl
into
ret
jge
mov
sub
add
mov
jle
pushf
mov
pop
stos
lds
xchg
rcll
jmp
in
movsl
sub
mov
daa
fsubrs
pusha
cmpsl
popa
mov
stos
jb
sbb
mov
stos
int
cmp
xor
das
scas
mov
cmp
or
das
inc
jo
cli
dec
iret
addl
jnp
inc
cmp
xor
loopne
std
mov
cmp
inc
iret
inc
inc
aad
out
clc
xor
imul
xor
imul
daa
jmp
ret
or
inc
xchg
inc
icebp
out
aam
xchg
sbb
fcoms
stc
ds
mov
adc
loop
sarl
idivb
sub
lods
lcall
xchg
push
mov
xchg
ljmp
std
inc
sbbb
in
insl
and
inc
clc
aad
sti
fimuls
xchg
jae
add
cltd
out
ljmp
or
subl
popa
lock
jne
cmp
pop
jp
and
clc
mov
push
data16
sub
loope
xchg
adc
jmp
ret
hlt
jecxz
mov
inc
mov
loopne
cmp
mov
mov
scas
dec
push
dec
mul
std
jbe
data16
add
fs
inc
data16
cmp
das
xchg
rcrb
sti
mov
jne
and
mov
call
add
cmp
sub
lret
psrld
lret
js
cmpb
and
xor
stc
push
addr16
popf
lea
daa
daa
mov
aad
jnp
in
or
fisubrs
fs
in
mov
push
mov
jne
les
add
scas
ljmp
dec
mov
mov
mov
fstpl
dec
leave
bound
xchg
repnz
or
xlat
sbb
add
and
and
les
jno
fdivrl
push
mov
mov
mov
adc
mov
nop
jno
cmp
aaa
sbb
mov
jp
fs
lcall
push
jle
dec
test
push
adc
cmp
xchg
pushf
arpl
scas
xchg
push
lret
mov
cmp
dec
roll
add
icebp
xor
movsl
addb
mov
pop
insb
jge
cmpb
add
mov
inc
iret
pop
xchg
mov
push
push
or
and
cmovg
dec
cmp
and
and
sarb
std
inc
and
push
mov
push
pop
aad
aam
cld
pop
adc
sbb
mov
insl
lcall
mov
int3
xchg
sub
xchg
mov
fs
push
and
mov
mov
shl
mov
mov
ljmp
pusha
xor
mov
or
jmp
pushf
sbb
aas
loope,pn
and
jecxz
jae
popa
loop
cs
add
jns
jmp
dec
loopne
mov
out
inc
jp
int3
mov
mov
mov
jbe
push
inc
mov
addr16
in
inc
mov
adc
loope
cmp
xchg
movsl
test
cmc
dec
sahf
insb
pop
nop
mov
fstpt
std
mov
pop
adc
dec
out
into
sti
and
add
jmp
fisubs
adc
pop
mov
cmp
insb
test
xchg
rorl
jecxz
pop
mov
push
mov
outsb
xchg
dec
or
cs
incl
dec
es
jno
adc
jge
or
push
push
cmp
inc
out
mov
hlt
leave
push
dec
stc
cmp
pushf
fisttps
in
mov
cmp
std
mov
js
push
cwtl
xor
rclb
inc
and
iret
enter
adc
mov
xor
pop
rep
and
fisttpl
in
add
or
xor
les
jns
inc
ret
xchg
subb
ret
mov
mov
pop
fildll
es
int
mov
jle
push
xchg
pop
pop
cltd
mov
scas
cmp
mov
jmp
into
int3
inc
inc
fstl
dec
testl
movsb
inc
lret
sarb
jbe
pop
xchg
mov
test
nop
inc
sbb
adc
add
inc
subb
int3
loopne
fildl
jnp
xor
cmp
sbb
push
call
mov
mov
sub
cmpsl
fisttpl
dec
mov
pop
jnp
and
cmc
jmp
adc
shll
push
lods
rol
bound
insl
or
hlt
push
adc
mov
loope
sbb
sbb
std
or
lahf
cli
test
cmpsb
inc
mov
and
xor
fisubrs
and
test
and
push
dec
cli
xchg
xlat
cmpsl
mov
inc
into
inc
mov
xchg
pop
jecxz
dec
data16
push
fidivrs
adc
call
push
test
mov
sbb
pop
push
aaa
xchg
les
mov
jo
pop
cmp
test
xchg
and
mov
cmpsl
and
lds
mov
lcall
push
enter
xorb
inc
mov
mov
adc
rolb
ficoms
xchg
cmp
jle
insb
adc
aaa
pop
xchg
andl
into
rclb
pushf
lds
mov
inc
or
sub
out
arpl
ljmp
cmp
in
push
fwait
push
dec
mov
fbstp
andnps
mov
ret
cltd
sahf
fs
cmpb
mov
push
mov
sti
or
mov
shll
sbb
xchg
es
lea
dec
fldcw
out
lcall
xchg
movsl
lods
push
test
fwait
sbb
add
cmp
fstl
lock
mov
jl
jae,pt
and
adc
fldt
aas
and
adc
ljmp
rclb
xor
ss
bnd
or
dec
inc
sbb
std
push
adc
into
pop
lea
cmc
mov
ljmp
stc
sbbl
pop
inc
pop
inc
lds
push
addr16
mov
ljmp
cmp
push
push
add
xlat
cmp
mov
xor
lcall
add
sub
scas
adc
push
in
sbb
and
cmp
mov
pop
dec
pop
mov
sbb
lahf
xlat
add
xor
push
sbb
dec
sbb
sub
jg
ret
aaa
or
insl
setno
push
cvtps2pi
test
cld
fstps
jmp
in
arpl
lcall
sahf
jb
aas
lock
aam
das
lds
test
hlt
fs
mov
xchg
mov
or
cld
sbb
mov
mov
push
ljmp
punpckhbw
mov
adc
lahf
sub
push
xor
outsb
rorl
bound
inc
jg
rcll
add
sub
pop
movsb
push
add
sub
sti
in
call
or
pop
sub
fbstp
adc
inc
mov
mov
push
fbld
add
push
addb
cmp
xchg
mov
mov
or
mov
cmp
js
out
movsb
xchg
and
test
outsl
rol
inc
jl
in
lds
cmp
rolb
and
jmp
out
add
sub
cli
data16
mov
mov
lret
shlb
out
dec
hlt
nop
neg
dec
mov
lods
inc
cmp
testl
adc
sahf
pop
jno
retw
rcrb
mov
cmp
cli
clc
loope
outsl
adc
lcall
and
bsf
loopne
sub
jnp
rcrl
bound
mov
mov
mov
sub
outsb
mov
pop
das
rcl
dec
push
cltd
inc
enter
ret
push
xor
imul
pop
fwait
jg
cli
dec
out
mov
fisubrl
movsb
xor
mov
xor
inc
add
ljmp
lret
sub
pop
outsl
dec
and
pop
xchg
inc
sbb
outsl
push
or
out
inc
call
inc
xlat
fnstenv
pop
adc
inc
arpl
push
pusha
pop
pop
cmp
sub
jg
push
push
cltd
sarb
mov
pop
enter
movsb
aad
fdivrl
add
pop
jmp
repnz
cmpsb
cwtl
mov
fwait
sub
and
xor
add
add
xchg
mov
xchg
mov
repz
pop
lods
test
adc
lock
cmp
mov
sbb
xchg
xchg
scas
inc
cld
pop
adc
popa
and
jns
pop
rcrb
scas
xchg
adc
cli
sbb
fcoml
mov
push
out
sub
insl
mov
jb
mov
push
and
push
testl
scas
cmp
add
sarb
cld
jmp
mov
das
shr
pop
mov
shrb
xlat
adc
popa
inc
imul
into
sub
js
jp
pusha
test
insb
sbb
xor
in
nop
insb
lea
jbe
jnp
and
fldcw
adc
js
call
dec
out
add
jns
mov
popa
cmp
cmp
xchg
cmpsl
cltd
mov
pusha
push
cwtl
sub
mov
jl
sbb
lods
pushf
das
add
xchg
lret
mov
popf
fcoml
mov
xor
in
mov
int
insb
and
push
xchg
daa
lahf
test
in
jg
out
jae
cwtl
xchg
pop
xor
mov
les
repnz
xor
stc
xchg
movsb
aas
lods
rcrb
dec
dec
mov
in
dec
push
jp
jp
test
xor
pop
and
mov
fimuls
aad
jmp
dec
in
stos
mov
out
rcll
lods
inc
frstor
inc
mov
dec
jne
fchs
lret
cmc
loop
aas
hlt
fadds
leave
movb
ret
mov
lret
stos
loop
pusha
sbb
mov
lods
adc
aaa
cmp
les
aad
lods
nop
inc
loope
outsl
adc
inc
test
xchg
fistpll
push
rcr
pop
fsubr
call
or
jo
test
enter
xor
mov
push
mov
jle
in
jnp
loopne
mov
movsl
mov
scas
xchg
in
leave
in
and
out
into
sarb
sub
loopne
outsl
sbb
adc
push
push
test
rcr
movsl
fcomip
notb
call
cmpsb
xchg
xchg
movsl
das
dec
jb
mov
jae
mov
icebp
imul
pushf
sahf
add
stos
xor
insb
and
mov
or
iret
sub
xor
clc
popa
shrl
nop
stos
js
mov
addr16
fcmovu
lea
jns
imul
insb
adc
pop
jge
or
pop
sub
xor
cmpsl
es
cmp
xor
lea
shlb
or
mov
in
cmpsb
xor
mov
pop
stos
sti
iret
filds
sbb
test
jmp
popf
or
test
ds
cmpsb
xlat
pop
pop
lret
daa
out
and
inc
jmp
imul
sub
adcl
daa
push
fsubrp
xor
nop
fwait
push
mov
fldcw
sbb
pop
popf
dec
nop
and
add
adc
lret
dec
inc
mov
sub
fstpt
xchg
ljmp
lret
int
lahf
mov
inc
outsb
ljmp
rol
testl
icebp
in
mov
in
pop
xor
adc
cld
and
adc
dec
sbb
mov
xor
je
pop
inc
pushf
inc
jne
hlt
mov
in
inc
mov
loope
add
inc
add
mov
int3
pusha
push
adcl
aaa
mov
mov
fadd
shll
loopne,pn
mov
movsb
lods
add
in
into
pop
xor
mov
push
stc
js
out
loopne
and
pop
mov
inc
and
mov
push
inc
imul
ret
mov
and
mov
xor
mov
imul
arpl
rorl
pop
push
sbb
popa
or
jb
arpl
xor
pop
xchg
add
mov
push
sbb
rcr
push
add
mov
sub
test
rcll
repnz
movb
xor
push
push
jle
or
mov
mov
aad
test
pop
daa
fs
pushf
gs
scas
xor
pop
jl
jg
xchg
enter
sub
dec
aam
fsub
push
rcr
push
add
push
nop
and
insl
inc
ret
inc
aas
mov
or
xlat
inc
enter
add
inc
out
dec
push
roll
dec
ljmp
dec
loop
dec
and
rorb
jg
xchg
cmp
inc
out
jmp
jns
out
xorb
push
lock
gs
mov
adc
pop
stos
sbb
and
out
cmpsl
xchg
xor
xchg
out
pop
push
lret
cmc
cmpb
pop
ds
test
cmpsb
mov
and
cmc
jle
dec
test
sub
stos
xchg
inc
in
sar
adc
and
cmp
pop
xchg
sub
add
lods
inc
out
cmp
add
xchg
jl
dec
sbb
mov
xor
arpl
adc
pop
mov
call
std
sarb
dec
pop
ss
push
mov
xchg
add
in
jp
xchg
out
mov
repnz
inc
lock
sbb
xchg
scas
in
outsl
xorb
inc
dec
in
pop
mov
rcr
jae
adc
inc
imulb
lods
pop
lret
rcrb
test
faddp
xchg
sbbl
es
xor
in
jae
add
jp
mov
push
push
mov
and
dec
sub
and
outsl
lods
inc
and
push
sub
jg
jmp
pushf
imul
imul
inc
jge
add
sbb
mull
xorl
sbb
xchg
shll
in
daa
xchg
dec
loope
cmp
add
pushf
int3
pop
adc
jbe
inc
ret
and
lahf
outsb
or
inc
imul
inc
sub
ror
jae
call
mov
mov
push
sahf
cmpsl
in
scas
lock
dec
cmp
mov
cmp
aad
test
jns
xchg
sbb
ret
sbb
jbe
mov
adc
cwtl
and
aaa
sub
nop
mov
mov
das
pop
dec
xchg
mov
sub
push
cmp
cmc
pop
or
mov
les
stos
pushf
adc
and
pop
mov
mov
cmpsl
mov
les
and
mov
mov
add
xor
test
fisubrl
sub
ret
and
jl
add
scas
xchg
incb
out
cmp
jbe
mov
push
fs
or
inc
jecxz
gs
adc
mov
ljmp
test
subl
jb
rcrb
out
sbb
mov
outsb
inc
ds
and
stc
mov
pop
adc
fildl
sahf
ficoms
sbb
add
gs
in
mov
sbb
mov
fsts
ds
jp
imul
adc
lock
adc
xchg
push
fsubl
lahf
push
repnz
clc
lahf
push
pop
nop
leave
xor
add
mov
shll
enter
imul
pop
clc
and
and
adcl
inc
add
cltd
lds
cli
jle
jno,pt
lret
mov
stos
push
test
jnp
inc
mov
cmp
fcmovnbe
lcall
ljmp
jb
repz
dec
mov
inc
out
in
xchg
mov
push
xor
loop
repz
les
jg
xor
stos
push
test
iret
push
std
in
push
les
out
pop
inc
mov
and
or
jns
sbb
test
dec
out
sub
push
add
mov
sub
and
js
ficoms
scas
clc
imul
sub
pop
mov
movsl
pop
push
shl
mov
ja
xlat
cmc
mov
push
cwtl
mov
fcmovnu
push
mov
cs
test
mov
ss
mov
insl
shlb
add
dec
xor
mov
data16
insl
cld
lods
aas
sti
in
sbb
dec
jle
callw
loopne
fldcw
mov
iret
xchg
sub
pop
jp
jae
or
les
icebp
push
stos
dec
xchg
xor
lock
bnd
adc
dec
cli
scas
sub
in
arpl
or
or
xchg
pushf
dec
sti
or
movsl
and
testb
pop
shlb
int
imul
lahf
inc
out
xchg
and
clc
rol
cmp
ja
sub
fs
inc
lcall
aad
inc
scas
es
push
pop
aam
lcall
dec
adc
rcrl
stos
imul
aas
lcall
jo
mov
nop
push
jp
mov
call
fwait
push
cmp
cli
aaa
mov
xor
cmp
rorb
lret
repz
xchg
movsb
xchg
or
fisubl
xor
test
xor
xor
je
mov
xor
push
xchg
movsb
and
jnp
mov
std
xchg
fistl
push
popa
cmp
mov
fisubrl
shll
mov
ss
in
shll
lcall
lea
and
mov
xchg
es
pusha
roll
js
jne
jne
add
jecxz
stc
scas
xchg
jmpw
fs
ja
inc
xor
jno
jle
xchg
or
xchg
nop
add
and
filds
mov
mov
loop
inc
pop
sahf
mov
cmp
add
iret
loope
inc
pop
xchg
fsubrp
or
adc
or
push
cmpsl
lods
call
rcl
fnstcw
push
arpl
insl
pop
xchg
mov
rcll
icebp
mov
in
xchg
clc
pop
inc
mov
jb
popf
cmp
adc
sbb
dec
into
xchg
fwait
cmp
adc
rcrb
iret
push
pushf
mov
jns
pop
dec
push
mov
adc
cmpl
pop
test
inc
fiaddl
cmp
aas
test
out
clc
xor
add
iret
mov
push
inc
int3
movsl
add
mov
loopne
push
rolb
orb
aaa
xchg
cmpb
push
lahf
ljmp
fsubrs
sti
mov
cld
repnz
out
mov
or
and
loop
bound
mov
les
inc
pop
inc
insl
arpl
xchg
popf
mov
int3
dec
rcrb
sti
clc
xchg
subb
loop
test
jno
test
push
inc
loope
ret
adc
dec
in
jbe
mov
std
aam
dec
in
sbb
lds
inc
orb
lds
pop
testb
cs
call
or
xchg
negl
stc
addr16
xor
mov
dec
aaa
xchg
cwtl
js
mov
sub
jl
or
sub
cmp
aam
inc
movsl
outsl
cmp
repz
or
mov
sti
les
lret
mov
adc
pop
inc
out
inc
cmpsl
or
jp
mov
pop
mov
jle
roll
mov
dec
xchg
test
pusha
push
xor
div
fwait
scas
sbb
repnz
xchg
popa
jmp
inc
jge
xchg
pop
inc
xchg
mov
mov
stc
push
mov
mov
mov
and
ja
sub
cwtl
andb
ror
push
lods
mov
fiadds
xchg
xor
and
push
jge
in
aam
mov
subl
dec
lock
push
hlt
mov
inc
xlat
pusha
push
daa
lods
jnp
lock
stos
out
fdivs
xchg
ret
dec
gs
add
dec
aaa
jge
add
imul
sbb
mov
daa
push
jmp
cltd
imul
out
mov
sub
mov
lods
mov
out
loop
ret
xchg
or
scas
sbb
push
and
pushf
and
pop
pop
mov
push
lea
ds
bound
mov
mov
push
cmp
cld
mov
pop
aas
jg
mov
ret
sub
and
jg
loope
xchg
popa
mov
scas
add
mov
dec
sbb
nop
rorl
repnz
jns
addb
or
scas
xorl
subb
or
push
cmp
xchg
dec
add
loop
mov
cmp
in
xchg
test
xchg
xor
rolb
inc
cmpsl
std
lock
test
test
sbb
xchg
loopne
leave
dec
mov
or
add
filds
lds
pop
jnp
stos
add
cmpsb
imul
loope
dec
dec
and
sub
insb
jmp
test
pushf
lock
sbb
fs
mov
pop
sub
fcmovne
fdiv
xchg
dec
movsl
pop
pushf
js
sub
jns
lret
xchg
and
js
jb
xchg
les
adc
pop
and
notb
imul
dec
fildll
rclb
test
int3
adc
xchg
imul
jae
xchg
sbb
lret
sub
inc
movsl
mov
sarl
push
arpl
hlt
push
aas
repnz
scas
pop
mov
andl
sahf
jle
scas
sbb
hlt
negb
es
pop
mov
xor
xchg
iret
cwtl
xchg
fbld
into
mov
insb
pop
or
fwait
into
adc
jae
jp
jmp
out
aaa
lds
cmp
xchg
icebp
insb
jb
out
fs
dec
sbb
clc
cmovne
sub
mov
adc
subl
inc
lods
jmp
push
out
into
out
dec
clc
bound
lods
or
icebp
jg
clc
cmp
mov
stos
es
cmp
insl
mov
pop
cmc
mov
js
add
mov
mov
inc
adc
test
pop
and
cmp
movsl
sbb
repz
push
nop
fisubs
push
xchg
das
and
aaa
jle
lret
mov
cmc
sbb
popf
mov
fisttpll
ljmp
xchg
aas
pop
sti
cltd
jmp
or
push
cmp
test
inc
mov
mov
or
xchg
add
icebp
xchg
jmp
test
loopne
push
mov
sbb
adc
mov
jge
pop
je
push
or
cmp
icebp
test
cmp
clc
mov
mov
sbb
sbb
outsb
insb
fwait
and
into
add
xchg
cmp
cmc
jg
aas
mov
or
xchg
cmpsb
fldcw
xchg
enter
jecxz
push
sti
and
stc
scas
push
nop
mov
jp
fisubrs
cs
std
jp
cmp
mov
sbb
mov
sarl
jne
or
iret
hlt
xchg
dec
test
or
or
inc
cmp
inc
ds
jne
mov
jnp
les
cld
rclb
call
pop
mov
je
cmp
loopne
adcb
add
or
js
sbb
cmp
cli
lods
sub
or
add
mov
jb
push
loop
pop
sub
les
push
push
mov
sahf
mov
xchg
xchg
xor
mov
sub
sbb
orb
mov
shlb
mov
hlt
jae
fildl
int
aad
loope
sarl
jno
cld
add
add
cmpsb
mov
aas
push
adc
and
clc
jg
jmp
pop
mov
aad
jo
push
or
inc
cltd
inc
mov
andl
jle
mov
add
lret
test
xchg
cmp
out
mov
addr16
pop
test
jno
mov
int3
dec
test
push
mov
sbb
cmpsl
das
xor
push
cmpsl
in
mov
push
das
cmp
sub
xchg
or
push
cmpsb
lret
jp
jp
jbe
jp
cltd
jg
pop
das
mov
sbb
add
jmp
push
popf
cmp
fsubrl
repnz
push
stc
adc
lea
lret
lods
test
mov
sbb
pop
mov
jae
std
jb
pop
cwtl
imul
push
mov
adc
xor
adc
xchg
shll
inc
jnp
inc
pop
bound
xchg
push
test
popf
test
hlt
cltd
lea
arpl
pusha
aad
xlat
xchg
scas
dec
out
jae
ss
pop
jo
mov
cmc
inc
loopne
nop
test
aaa
ret
aam
rcrl
filds
or
fcompl
scas
and
add
sti
adc
repnz
xor
xchg
add
xor
push
adc
aas
inc
fcoms
xchg
popf
fucomip
pop
xor
mov
inc
dec
js
push
dec
sahf
movsb
add
pop
fisttps
pusha
aaa
xchg
jecxz
and
in
inc
or
roll
jo
subb
popf
ds
and
jl
and
int3
add
aas
and
xchg
popf
out
inc
icebp
out
sub
pop
shrl
mov
ret
arpl
repnz
movsb
mov
sub
dec
cmc
mov
sbbl
rorl
mov
mov
mov
or
ja
sub
xor
add
push
movsb
rclb
jle
negl
out
popa
stos
jl
cmp
inc
sbb
cmp
shll
testb
push
fimuls
and
popf
jl
cmp
xor
jo
icebp
aaa
imul
setns
rolb
inc
mov
sbb
mov
xor
xor
cmp
xor
cmp
push
pop
notl
cmc
nop
or
mov
lods
mov
push
or
and
inc
mov
lcall
adc
jmp
repz
icebp
jmp
and
adc
test
enter
sbb
addr16
movsb
mov
imul
andl
push
incb
lcall
pop
mov
jg
add
mov
push
cli
jbe
cmpsl
dec
push
mov
adc
sbb
add
cmp
popa
imul
jle
test
pop
cmpb
out
jmp
loope
aam
jbe
pop
ljmp
or
std
xchg
and
fdivl
cli
push
fs
adc
cmp
pop
inc
jle
mov
mov
inc
xchg
push
dec
mov
movsb
mov
mov
test
in
ljmp
dec
cltd
cmp
int
popf
shlb
push
dec
inc
ficoml
mov
inc
jle
ljmp
dec
insb
scas
aas
push
fistpl
lock
stc
sbb
jno
aam
mov
lret
mov
ret
push
push
stos
push
lea
mov
in
xor
stos
out
imul
or
push
pop
loop
xchg
in
cmp
subb
fucom
xchg
jno
add
gs
es
pop
mov
sub
stos
fimull
cmpsb
ss
sub
xor
mov
int
loop
stc
pop
mov
jno
sub
sahf
pop
inc
out
aam
stos
arpl
cmp
fyl2xp1
jb
and
push
and
and
sbb
push
enter
inc
outsl
call
jb
jl
push
mov
or
fdivp
fcomps
jmp
adc
fs
push
shrb
repnz
xchg
mov
inc
lods
sub
movsl
stos
and
push
mov
cli
pusha
mov
push
xchg
std
cli
stos
test
mov
mov
cmp
int3
repnz
push
pand
sbb
sbb
inc
clc
mov
adc
add
mov
mov
cmpsl
test
mov
push
loop
aam
rcrb
negb
push
and
xchg
jae
xor
mov
pop
int
cmpsl
xrelease
int3
xor
and
jbe
out
dec
pop
je
jo
mov
or
cmp
ret
push
stos
bound
mov
inc
cld
dec
pop
push
inc
mov
inc
mov
jle
fbld
lods
lahf
mov
scas
aam
mov
jbe
push
stos
lds
imul
fmull
test
sub
js
fwait
push
sbb
or
adc
vpextrw
lds
jecxz
fnstcw
faddl
mov
inc
inc
mov
cmp
pop
inc
mov
xchg
out
mov
dec
xor
cltd
ja
js
aam
mov
dec
pop
ror
push
outsb
fnstsw
mov
insl
pop
arpl
xchg
mov
inc
les
sarl
inc
fsubrl
adcl
push
pop
cld
or
out
test
aas
imul
sub
in
test
push
jmp
and
enter
xchg
mov
imul
push
incb
ja
fists
shrl
jg
clc
imulb
mov
sti
mov
add
int
aaa
mov
sbb
call
lods
fnstenv
mov
dec
int3
push
push
inc
and
ficoms
jae
sub
loop
mov
mov
test
mov
arpl
and
ds
mov
je
push
jae
mov
xchg
push
aaa
repnz
inc
cmp
hlt
lds
scas
dec
ret
int
jbe
xor
imul
imul
xor
je
lods
test
dec
sbb
leave
pop
jb
movsl
mov
and
shlb
lods
or
das
add
add
cmc
sbb
out
add
fildll
popf
push
jp
mov
lea
fcoml
rcrl
xlat
mov
adc
pop
loopne
mov
cmp
inc
negl
and
mov
daa
jle
out
pop
jge
sub
sub
pusha
pop
icebp
mov
orl
clc
mov
xor
push
rorb
gs
cvttpd2pi
cwtl
movq
add
imulb
xor
dec
lea
mulb
xor
mov
xchg
loop
adc
loop
sbb
fimuls
test
cmp
movsl
nop
dec
pop
push
adc
call
mov
out
ret
dec
call
adc
adc
or
xorl
push
popfw
scas
loope
in
jmp
adc
out
test
xchg
js
adc
and
aam
lahf
sub
lods
add
cli
imul
or
add
popa
sub
mov
rcrb
out
cmp
jnp
adc
add
dec
sbb
and
lahf
cltd
lock
sub
push
fidivrl
fisubrs
mov
dec
dec
push
popa
inc
jle
push
xchg
cwtl
scas
ret
jge
mov
fsts
dec
xor
dec
mov
add
rsm
push
cmp
push
cld
loop
shll
mov
pushf
out
jle
inc
or
retw
sub
sub
jne
ljmp
jns
push
scas
sub
scas
int3
add
repz
jge
hlt
inc
pop
rorl
mov
add
cli
icebp
inc
out
mov
repz
dec
mov
pop
cli
icebp
and
dec
sub
mov
push
roll
mov
sbb
andl
adc
popa
mov
xor
mov
xor
inc
ljmp
xchg
test
xchg
add
arpl
mov
aas
sbb
pop
fdiv
sub
inc
test
or
mov
andl
stos
fidivs
inc
jno
or
fsubrs
xor
cmp
jno
adc
xchg
push
or
lods
mov
in
xor
jae
add
adc
and
bound
dec
shrl
movsl
fwait
cmp
or
mov
iret
mov
xor
out
call
rclb
and
or
fisubs
ret
add
add
orb
or
pop
xchg
inc
mov
jo
pop
pop
mov
inc
mov
mov
iret
mov
les
adc
gs
mov
ret
imul
mov
xchg
int
pop
pop
orb
cmpsb
adc
jne
popa
mov
inc
stc
pusha
fwait
mov
cmp
jns
lret
in
adc
leave
xchg
lods
xor
mov
and
aas
jne
into
pop
xchg
je
dec
dec
dec
pop
mov
outsl
fcom
push
enter
je
inc
push
pop
fs
pop
xchg
int3
push
push
sub
mov
call
dec
inc
push
adc
xorl
mov
stos
cltd
gs
jp
fidivl
adc
les
mov
leave
pop
xlat
jge
dec
xor
add
and
xchg
test
cmp
pusha
daa
test
inc
sbb
xchg
data16
lods
mov
cmp
rolb
push
pop
and
inc
cld
sbb
out
xchg
jmp
sahf
ds
popf
fucom
repz
lds
cmpb
fisttpl
repz
adc
pop
popa
mov
xchg
movsb
loopne
aaa
and
lds
mov
mov
subl
mov
push
out
push
mov
sub
sub
aaa
unpckhps
std
jge
mov
les
and
bound
dec
inc
mov
andb
scas
xchg
push
aas
jp
cmpsl
lahf
sbb
pop
push
sbb
or
addr16
jnp
pop
shlb
and
xchg
or
les
lahf
adc
mov
sub
mov
insb
dec
repz
mov
repnz
sbb
rorb
and
pop
les
dec
outsl
jmp
loop
scas
pop
mov
or
data16
shrl
pop
or
xlat
jl
sub
aam
adc
jmp
fndisi(8087
mov
sti
xor
icebp
gs
loope
sbb
sub
sti
fstl
push
jo
adc
jmp
stos
call
lea
sub
lret
pop
adc
in
stc
adcb
stc
jo
lcall
add
cmp
mov
push
dec
pop
in
mov
xchg
sti
das
in
sbb
push
and
popf
lds
sahf
std
popa
jge
lods
mov
push
in
arpl
iret
mov
pushf
repnz
inc
sbb
mov
pop
in
jecxz
aam
pop
out
mov
insb
adc
pushf
je
aas
mov
in
pop
js
cltd
icebp
pop
imul
mov
into
int3
mov
notb
add
mov
imul
or
sub
fwait
gs
in
aaa
push
and
and
aaa
jne
mov
daa
shl
leave
mov
jecxz
das
imul
add
mov
repz
pop
repnz
xchg
out
mov
notb
lods
mov
mov
clc
js
add
cmp
aas
jns
fisubrs
dec
sub
rorl
loope
adc
jns
rcr
sub
orb
in
outsl
jg
dec
pop
cwtl
push
xchg
jecxz
adc
mov
and
or
hlt
or
mov
mov
xor
fisubrl
mov
xchg
lahf
comiss
jno
mov
fdivr
stos
sbbl
dec
sbb
push
pop
pushf
dec
xor
sub
sub
inc
dec
inc
fcmovbe
neg
ret
add
test
jg
pop
orb
mov
imul
pusha
neg
adc
idivl
call
sub
adc
lret
mov
loope
outsb
jmp
xorb
and
popf
mov
jo
add
nop
inc
aaa
daa
jge
inc
lcall
aad
sub
neg
xchg
lods
outsb
and
push
jne
lret
ret
push
inc
cmp
add
adc
lret
repnz
mov
xchg
cmc
cmp
pop
sahf
mov
inc
pop
cmp
mov
cmp
ja
jl
gs
out
cwtl
and
jmp
in
movsb
jbe
jno
std
fsubrl
out
popl
sub
test
jb
bound
push
sbb
dec
add
mov
push
mov
cmpsb
popa
push
xor
add
rolb
or
cmp
or
sub
xchg
iret
ljmp
sbb
pop
cmp
mov
pop
jne
adc
test
xor
pushf
das
add
cltd
adc
out
in
sbb
add
insb
jmp
sub
loop
sub
jb
mov
fucomi
push
stos
xchg
sar
out
loopne
mov
mov
sbb
aad
loop
pop
call
push
sub
iret
and
pop
jmp
dec
cmp
rolb
addr16
subb
push
enter
adc
aas
movsb
enter
pop
insl
movsl
jle
mov
dec
cmpsl
sahf
cmp
add
mov
in
iret
push
in
addb
fistl
xchg
data16
gs
pop
sahf
mov
jnp
inc
pop
cld
or
cmp
adc
pop
sbb
add
or
lcall
insl
ret
mov
mov
xchg
adc
sub
push
xor
ficoml
ja
xchg
lods
gs
pop
mov
mov
mov
sub
adc
jns
ffree
adc
pop
mov
cld
pop
inc
xlat
dec
cmp
mov
daa
lds
int
out
in
jmp
jnp
sahf
clc
jmp
and
fistpl
dec
ss
es
xchg
pop
das
out
shl
aam
or
adc
jp
mov
xchg
ret
and
inc
mov
scas
mov
pop
cmpsb
fmul
pop
mov
push
jg
adc
in
enter
clc
mov
xchg
sub
add
push
adcl
jbe
repz
or
out
fwait
mov
xchg
sub
or
sbb
addr16
fsubrs
mov
xchg
hlt
jmp
push
shrb
out
inc
adc
andb
fsubrl
test
addb
and
xlat
inc
mov
dec
cmpsl
pop
sub
imul
mov
daa
mov
xchg
and
leave
xor
fs
cmp
call
repnz
jg
cmc
in
out
rcrl
adc
push
dec
test
pop
cmp
roll
std
mov
inc
insb
push
repnz
adc
into
add
mov
repnz
fcoms
push
aam
push
pop
dec
sub
imulb
mov
ja
les
stc
mov
rcrl
push
lret
xor
jge
dec
daa
test
sub
js
iret
insl
jb
divb
or
shlb
pop
je
clc
dec
es
mov
dec
mov
mov
push
push
in
sbb
aam
cld
call
xlat
scas
pop
xchg
aas
fwait
int
jl
les
in
rclb
inc
push
mov
popf
faddl
stos
add
lods
mov
std
jns
and
in
adc
inc
int
sbb
mov
shl
push
push
jns
imul
mov
imul
pop
xchg
loope
mov
mov
fwait
sbb
mov
pop
imul
mov
jae
lcall
popa
sbb
push
xor
pop
xlat
add
pop
mov
or
mov
push
xchg
or
xchg
inc
ja
test
cltd
or
adc
mov
inc
xchg
push
ja
xchg
aam
and
mov
sub
pop
fistps
movsl
and
lods
sub
daa
arpl
out
jle
pop
adc
test
and
sbb
adc
call
pop
gs
sub
or
push
xor
test
xor
push
sti
or
pushw
dec
leave
insl
lds
and
icebp
mov
fs
scas
push
mov
xor
adcb
mov
mov
mov
and
mov
pop
xchg
cmp
lods
xor
mov
faddl
and
out
push
pop
les
cmpsl
nop
cmp
jne
mov
sbb
add
sbb
and
ds
rclb
cs
mov
bound
push
push
xor
add
sbb
shrb
jg
shlb
pop
xorps
lret
aad
ss
inc
outsb
ja
lods
push
ss
push
push
mov
decb
mov
outsb
clc
jecxz
mov
cmp
pop
test
fists
or
cld
sarb
movl
scas
in
xchg
push
or
sbb
and
inc
dec
xchg
adc
inc
jns
das
int3
test
or
test
jge
lods
arpl
movl
inc
xchg
stos
mov
pop
daa
push
jno
cmp
subb
in
xchg
push
fcompl
lock
test
sub
dec
add
xchg
nop
sub
mov
mov
rcrb
or
pop
cwtl
minps
mov
clc
in
pop
mov
aas
daa
cmovge
xor
leave
mov
rcr
in
out
in
fidivs
xchg
mov
sub
inc
popf
and
movsb
push
rcll
int
sub
sti
mov
adc
mov
insb
pop
out
ret
inc
fistl
xchg
cmp
jbe
dec
pop
dec
jnp
lods
daa
subb
in
add
and
push
xchg
and
bnd
les
lret
mov
out
jns
xlat
mov
add
mov
and
dec
lock
or
sub
jne
sbb
adc
dec
clc
fcompl
dec
pop
push
push
ljmp
xor
cmp
pop
xor
cmc
jl
add
and
clc
push
cmpsb
adc
jg
orb
push
nop
popa
adc
mov
xlat
pop
jecxz
pop
cmp
add
adc
in
ret
rcrl
mov
fcomi
int3
jmp
xor
ficoml
in
insl
jns
mov
and
mov
push
lcall
jge
lret
lods
mov
jo
rorb
pop
movsb
push
xchg
idivl
lret
add
mov
imul
push
and
push
mov
lds
adc
jno
mov
jo
mov
push
and
into
xlat
lock
sbb
pusha
xchg
pop
cs
fcomi
les
loopne
add
cld
fcomip
movsl
aaa
test
or
lcall
out
push
mov
jnp
ret
test
inc
shlb
shr
sbbl
loop
xor
leave
mov
in
fldcw
and
lcall
mov
dec
js
mov
rorl
cwtl
fdivrp
push
xchg
lahf
and
call
sbb
xor
lock
clc
cli
je
jno
push
mov
in
pop
pushf
or
and
mov
sbb
lods
xchg
aam
lock
pushf
pushf
aam
push
sub
in
mov
xor
push
and
pushf
mov
cmpsl
mov
mov
loop
js
add
lods
les
repz
popa
pop
mov
test
add
push
test
dec
pop
push
inc
inc
and
addr16
test
out
dec
dec
movb
jge
xchg
subl
push
or
adc
xor
loopne
and
push
inc
ss
dec
mov
int3
pop
int
push
into
pop
sub
inc
or
adc
jo
inc
push
loopne
out
push
shrl
dec
add
out
mov
out
mov
movups
out
or
adc
lock
pop
inc
das
sub
jl
rolb
int
fisubrl
pop
in
inc
and
jb
mov
inc
nop
inc
xor
dec
pop
jbe
dec
xor
lds
jae
pause
xchg
outsb
cmp
push
xor
repnz
jl
xchg
and
push
clc
dec
and
xchg
rclb
jp
sarl
dec
jb
out
add
nop
nop
jg
je
xor
in
add
push
call
xchg
cmpsl
es
pop
xor
or
pop
inc
sbb
cld
pop
stc
cmp
loopne
sub
mov
lock
xchg
adc
sbb
xchg
cmpsl
imul
mov
dec
push
in
xchg
cmpb
push
cli
hlt
mov
shrl
mov
shll
iret
mov
mov
out
jge
push
jecxz
jno
popa
xchg
mov
lock
aad
ss
jnp
mov
mov
pop
mov
imul
ljmp
pushf
lcall
xor
or
rclb
add
mov
in
shl
movsl
push
mov
repnz
push
leave
pop
loope
push
pop
sub
clc
add
or
insb
dec
mov
aaa
in
sarl
aad
mov
addr16
mov
inc
ret
or
cmp
jbe
test
test
and
mov
sub
daa
stos
or
sbb
push
fs
mov
pop
inc
sbb
xor
cmp
fdivl
inc
lret
and
adc
outsl
sbb
pop
cmp
faddl
fucomip
xchg
pop
repz
push
mov
dec
xchg
xor
mov
jg
std
in
cmpsb
push
out
jo
xor
sbb
adc
dec
into
adc
bound
cli
data16
clc
pusha
imul
push
pushf
sbb
cli
dec
popa
aam
insl
aam
mov
and
pop
aas
lret
fdiv
mov
xor
xchg
mov
sub
test
and
jb
jno
mov
push
push
stos
sub
xor
and
lock
loopne
js
ret
lcall
sbb
jp
mov
mov
add
lock
adc
fbld
cmp
and
or
fldl
bound
inc
mov
xor
iret
jnp
sbb
inc
int
psubw
jno
sub
rclb
inc
mov
inc
mov
dec
scas
cwtl
xchg
xor
xor
push
outsl
icebp
cmp
dec
sub
cmp
dec
mov
push
testl
adc
sbb
into
cmp
inc
lods
int3
xchg
imul
cmp
cmc
hlt
dec
cmp
int3
cmc
lcall
push
push
test
pop
pop
es
in
xor
aas
jg
jmp
test
pop
sbb
call
jbe
jmp
dec
xorb
inc
inc
stos
je
sbb
lock
xchg
mov
pop
push
inc
pop
push
and
dec
das
xchg
addr16
stc
inc
shlb
adc
cmp
cli
shr
adc
testb
inc
push
add
outsl
outsb
je
cld
mov
in
pop
add
fwait
movsl
dec
lods
movsl
cltd
push
nop
outsb
std
lea
mov
lret
iret
mov
jno
cmp
adc
jbe
mov
pop
push
daa
movsl
sub
xchg
xlat
ss
mov
sub
and
nop
pop
inc
sbb
inc
push
pop
gs
scas
out
fbstp
and
push
push
or
and
push
insl
inc
inc
and
rorl
xchg
decb
mov
lock
sbb
push
push
hlt
jo
in
fdivl
xchg
dec
aaa
xor
and
cld
gs
sbb
call
inc
cmp
dec
les
dec
pop
leave
jmp
rcll
subb
repz
push
leave
jne
lea
cmpl
push
or
arpl
pushf
iret
fldenv
ljmp
and
scas
dec
adc
inc
es
mov
gs
loope
fdivr
ret
jge
push
add
xor
lods
jns
adc
pop
push
push
add
jecxz
adc
jae
mov
sub
mov
jg
push
loopne
loop
mov
imul
ret
cmp
adc
cmp
jns
pop
add
iret
mov
mov
and
inc
shr
insl
and
jmp
sti
push
xchg
mov
out
andb
cmp
gs
js
loopne
jo
stos
jge
jne
cld
add
add
push
jmp
cwtl
ss
adc
xchg
sub
imul
xor
dec
loope
xor
movsb
cmp
sahf
cmpsl
lret
xlat
call
mov
loopne
sahf
or
xchg
pop
mov
in
dec
pop
inc
outsb
lret
lret
mov
lahf
or
xor
orl
pusha
adc
jp
popf
arpl
cld
push
cli
mov
and
fdivrl
or
aam
dec
outsb
enter
xchg
data16
and
fnsave
ljmp
inc
adc
push
in
ja
or
dec
orb
push
js
shl
jne
dec
or
xor
clc
pushaw
ret
cmp
mov
rcr
arpl
dec
inc
mov
adc
xchg
sbb
and
ret
sub
decl
jbe
daa
ljmp
dec
rcrl
lret
pop
into
jmp
mov
or
dec
pop
xchg
lcall
mov
andb
movb
fwait
inc
lret
xor
sbbb
fisttps
sbb
stos
dec
jnp
sbb
stc
orb
aaa
ror
test
sbb
fs
sbb
dec
sahf
pop
jbe
jmp
push
inc
and
insb
cs
js
pop
xchg
movaps
lahf
inc
repz
rcl
jnp
subl
movb
dec
mov
pop
add
mov
data16
pop
xchg
lahf
or
movsb
fnstsw
sub
push
pop
pushf
jns
repz
aam
inc
enter
mov
les
sub
addr16
jne
mov
aaa
icebp
jl
ret
mulb
or
outsb
mov
lds
sbb
mov
loope
adc
sti
xchg
gs
xor
sbb
lods
pop
dec
pop
dec
xorl
cmp
and
fcompl
xchg
fdivl
out
stos
sarl
imul
and
jl
fld
outsb
aad
xorl
fsubrl
aam
out
int3
and
xor
push
clts
popa
test
scas
test
mov
aam
lods
pushf
in
das
lea
lcall
dec
ret
dec
js
jg
xchg
mov
add
dec
xchg
push
push
test
inc
adc
lret
sbb
xchg
xlat
push
js
leave
xor
ljmp
stos
pop
bound
jb
scas
pop
sbb
rep
lahf
lret
ljmp
stos
scas
pop
mov
mov
fidivrs
xchg
inc
loopne
rolb
int
stc
outsl
cmp
mov
push
xor
mov
test
and
or
lret
outsl
scas
add
shl
adc
inc
push
pop
repz
ret
pop
xchg
cli
jmp
lods
add
insl
subb
mov
add
pop
jb
cs
in
rcl
adc
inc
imul
mov
aam
sub
and
stc
lock
idivl
adc
push
lcall
xchg
outsb
dec
mov
inc
cmp
cmp
dec
in
jno
jecxz
and
push
sbb
jg
leave
rorb
hlt
pushf
addl
les
or
xchg
mov
nop
out
push
inc
sbb
gs
call
sahf
adc
jns
pop
gs
mov
les
xor
dec
or
mov
addb
enter
cmpsl
xchg
jmp
hlt
les
cmpb
cmp
cld
dec
pop
adc
lock
addr16
add
mov
xchg
mov
mov
dec
cmp
pcmpeqd
pop
icebp
xor
inc
hlt
xchg
jmp
mov
mov
aaa
lods
add
loopne
cmpsb
cmpsl
insb
cmp
sahf
andb
es
xor
mov
sbb
cmp
xchg
dec
iret
dec
pop
popa
mov
mov
cmp
insl
mov
icebp
enter
pop
push
dec
inc
test
xchg
add
std
xchg
data16
push
es
ds
push
int3
xor
cmp
xor
mov
sarl
sbb
test
jecxz
in
and
fsub
add
sbb
das
jecxz
out
fisttpl
ja
adc
dec
inc
es
inc
pop
jmp
push
pop
enter
iret
or
aam
fisttpll
mov
aaa
pop
out
mov
push
pop
inc
xor
adc
lahf
rcrb
pop
iret
outsl
movsl
in
ret
ljmp
rcrl
idiv
push
mov
jp
dec
in
adc
mov
clc
inc
incl
mov
jae
addr16
cwtl
frstor
mov
lods
push
bound
aaa
and
jno
pop
xor
mov
stos
loop
dec
push
jne
pop
adc
test
mov
js
jns
cmp
bnd
cmp
pop
xchg
pushaw
sub
cmp
iret
leave
add
dec
sbb
test
inc
popf
mov
inc
mov
push
and
repnz
aam
imul
mov
rcr
nop
inc
test
mov
es
inc
scas
dec
dec
mov
dec
mov
cmpsb
dec
sbb
xchg
push
outsl
scas
inc
popa
lahf
inc
insl
lock
sbb
in
mov
js
out
xchg
or
ret
icebp
add
in
fwait
push
in
jl
aad
inc
mov
fwait
jl
jbe
add
es
mov
push
dec
aad
mov
mov
xor
gs
dec
or
sbb
mov
xchg
push
enter
inc
sahf
js
cltd
pop
int3
fidivrl
mov
pop
out
mov
ficoml
mov
int
xor
jmp
or
movb
and
aam
outsb
mov
push
fstpt
mov
jecxz
push
arpl
jmp
jae
xor
fdivl
notb
divb
cwtl
sub
sahf
xor
xlat
int3
jo
adcb
test
int
je
mov
in
imul
mov
std
sub
jb
lret
cwtl
xchg
cmc
in
jns
fldt
pop
movsb
rcrl
iret
pop
test
cmp
lret
xchg
adc
jnp
insb
addr16
outsb
dec
test
push
lea
mov
outsb
gs
pop
mov
cli
jo
push
lock
out
pop
jle
cmpsl
pop
lods
cmp
lods
scas
out
and
jecxz
shrl
jno
es
aas
pop
xchg
sbb
jmp
loopne
sub
adc
insl
ret
jb
iret
popf
lods
jae
pop
repnz
xchg
pop
imul
iret
loopne
out
add
fwait
cltd
out
std
jbe
cmp
cmpps
or
add
int
adc
push
push
lahf
pop
push
outsb
push
mov
inc
xor
push
add
movsb
cvttps2pi
rcl
jae
cltd
test
push
mov
sub
insb
cs
mov
gs
mov
loope
outsl
rorb
lcall
push
and
enter
dec
pop
dec
mov
cmpsb
scas
pop
mov
std
in
xor
movsl
push
or
xchg
cmc
lds
adc
shlb
sbb
push
fstps
aas
sbb
push
xchg
and
adc
mov
dec
out
cmp
jp
mov
ljmp
insl
mov
xchg
sub
daa
adc
in
loope
sub
aas
xor
push
sbbl
and
xchg
stc
jle
add
xor
mov
and
sub
cs
and
jmp
jp
insb
bound
test
adc
jle
repz
push
ret
or
popa
jne
mov
out
and
int3
loope,pt
mov
xorl
jno
fs
fisubs
idivl
xchg
push
ljmp
push
lock
xor
pushl
adc
dec
je
test
je
repnz
js
sbb
inc
not
mov
push
mov
aas
push
push
and
es
mov
mov
sbb
or
sub
adc
in
popf
adc
lret
cmp
inc
sbb
inc
jge
lods
xchg
fisttpll
jae
aas
pop
fsubrs
lcall
cmp
das
mov
das
fmull
or
int
mov
outsb
or
mov
shl
das
into
js
stc
das
je
or
mov
mov
jmp
jne
cld
jno
push
repnz
jo
xchg
mov
sti
movsb
scas
push
dec
cmp
fildl
scas
cmpb
loopne
jge
mov
pop
or
pop
outsb
push
adcb
or
inc
insb
jmp
xor
push
jns
hlt
popa
fldl
cmpsb
lahf
push
sbb
add
das
jmp
pop
addl
mov
aas
mov
push
push
repnz
nop
imul
xor
sahf
jae
and
cld
cmp
pop
mov
xlat
jne
pushf
mov
or
stos
rclb
fldt
and
push
xchg
jne
sub
add
and
mov
or
push
popf
push
incl
scas
xchg
ljmp
imul
pop
mov
int
in
ljmp
jnp
dec
jp
xor
cmp
xor
test
add
inc
mov
xchg
cltd
popf
mov
ret
out
adc
loopne
clc
jo
test
mov
popf
dec
sub
popf
mov
mov
mov
repnz
mov
add
scas
mov
mov
jnp
movsb
inc
imull
fiaddl
daa
in
aas
and
imul
mov
bound
xchg
loop
mov
dec
push
sbb
mov
or
nop
stos
dec
or
sbb
push
cld
aaa
push
mov
mov
mov
pop
xchg
add
push
shlb
mov
cltd
xor
test
aad
mov
mov
in
gs
cld
dec
jl
fistl
loopne
arpl
dec
dec
nop/reserved
adc
int3
cmc
test
inc
ja
xchg
stos
test
scas
inc
dec
int
outsl
test
xchg
lds
sbb
ljmp
ljmp
dec
repnz
push
stc
fcmovne
mov
or
add
jae
or
lcall
mov
pop
popa
mov
pop
les
cmp
mov
adc
xchg
insb
pop
jle
xor
dec
add
push
lock
push
bt
sbb
jl
and
dec
testb
lods
int3
push
or
push
in
inc
xchg
xchg
jle
sti
rorl
cmc
pop
imul
xor
fildl
xchg
imul
test
jae
push
lcall
test
je
cld
dec
push
cld
pop
loope
dec
xchg
jp
out
icebp
dec
loopne
jns
lcall
sub
push
add
sub
sbb
outsl
dec
pop
pusha
mov
lods
iret
dec
xorb
out
mov
push
outsl
dec
test
inc
mov
addr16
rol
aad
pop
or
movsb
popf
fsubr
mov
jl
jo
and
lods
fnstenv
push
je
test
rorl
xchg
in
dec
dec
jg
popa
dec
cmp
sbb
nop
nop
faddl
mov
pop
jnp
in
and
leave
test
fistpl
pop
andl
mov
jns
xor
inc
popf
and
cld
in
adcl
xlat
sbb
jecxz
mov
jne
mov
inc
insb
inc
jbe
ja
push
sbb
cmp
icebp
fsts
cltd
insl
jbe
cltd
push
mull
push
jle
loopne
push
lret
pop
pop
and
mov
sub
lods
push
mov
xchg
outsb
bound
stc
mov
int3
mov
dec
push
dec
sub
sahf
js
insl
xchg
in
sbbb
xchg
fwait
out
jmp
pop
divb
dec
ss
cmp
dec
sahf
nop
mov
dec
int
lods
adc
inc
lret
xor
pop
jg
mov
push
adc
mov
shl
mov
pushf
xchg
and
scas
lea
mov
out
add
xorl
inc
add
jns
icebp
fsubp
jb
jbe
testl
outsl
mov
stc
dec
xor
add
test
xchg
pop
sbb
xor
ret
mov
inc
mov
shl
in
sti
imul
inc
jno
dec
push
into
sbb
insb
std
pop
dec
dec
xchg
cld
push
xchg
mov
pop
cmp
mov
clc
bound
aam
mov
fs
popf
adc
sub
mov
xchg
pusha
je
gs
lret
pop
aas
movsb
ficoml
mov
jecxz
cwtl
lea
push
adc
out
cmp
or
or
sahf
insl
mov
aad
adcl
cmp
in
sbb
negl
leave
addr16
inc
cmp
dec
stos
test
mov
dec
jb
les
and
test
das
jnp
repz
mov
call
mov
mov
outsb
insl
hlt
mov
in
cld
insb
jle
je
dec
call
stc
bnd
or
fs
pushl
in
outsb
icebp
push
lods
add
xchg
mov
nop
aaa
jo
js
repnz
std
add
inc
lret
mov
mulb
in
stos
mov
pop
scas
sbb
dec
sbb
into
inc
call
xor
inc
xlat
out
cmpb
mov
popa
adc
rolb
leave
mov
pop
out
xor
jmp
scas
in
mov
push
mov
sbb
popf
add
pop
int3
outsl
push
mov
ja
xchg
nop
mov
lods
mov
mov
xchg
ljmp
mov
push
imul
pop
sub
insl
dec
or
jecxz
enter
push
pop
notl
arpl
push
sub
adc
mov
sbb
mov
arpl
lods
aas
xor
lcall
icebp
inc
idivb
stos
fwait
pop
xchg
mov
lods
pop
daa
pushf
push
mov
gs
pusha
mov
sbb
cld
push
mov
lahf
pop
ret
mov
fs
lods
mov
cmpsb
testl
sbb
clc
or
leave
in
cmp
inc
mov
sub
and
dec
mov
mov
xor
push
mov
jno
cwtl
pop
mov
xchg
aaa
pop
lahf
or
xchg
add
pop
mov
pop
es
test
xor
fsts
js
lods
pop
push
fucomp
js
and
or
mov
and
jno
cmpsl
psllw
mov
addr16
adcb
mov
ret
lock
pop
fucomip
push
xor
jl
ret
inc
xor
jns
andb
fisubl
shlb
xor
mov
js
or
mov
nop
dec
insl
lock
xchg
jecxz
adc
push
pop
jmp
or
mov
sbb
mov
repnz
pop
sub
mov
cmp
xchg
jae
test
jmp
xlat
mov
push
cmp
cmp
inc
fs
jbe
movsb
xchg
or
xchg
sub
xor
scas
xchg
mov
adc
pop
add
or
xor
dec
and
push
xchg
mov
add
sbb
sub
imul
call
out
add
loope
inc
pop
cmp
dec
mov
ror
cmc
inc
mov
loop
pushf
js
and
pushf
repz
int3
fs
adc
jg
fs
xchg
push
add
jmp
pop
lea
sub
jecxz
sbb
out
sti
cltd
xor
and
fsubrp
mov
fisubrl
jns
sub
inc
adc
mov
lahf
sahf
pop
imul
testb
adc
leave
cmpsl
bound
mov
flds
add
mov
dec
xor
mov
out
fs
pop
or
adc
add
mov
leave
cmp
push
aas
into
add
hlt
cmp
jle
xor
scas
js
mov
int3
aas
xchg
add
cmp
add
movsb
pop
ds
jecxz
into
sbb
sub
dec
xlat
or
mov
add
aaa
fs
movsl
and
outsb
jo
lds
cmpsb
and
aaa
cmp
mul
int3
icebp
push
fadd
stos
add
inc
jl
popa
repz
mov
cwtl
in
mov
cld
dec
mov
rcr
shll
jnp
push
ljmp
add
dec
mov
loop
arpl
daa
adc
or
pop
or
rcrl
push
lock
adc
xchg
push
inc
xchg
jne
fisubrs
stos
mov
sbb
mov
divl
and
and
mov
roll
rclb
lods
mov
hlt
int
in
push
shll
clc
cmpsl
push
das
mov
data16
jbe
inc
in
xor
xchg
xor
sub
stc
cmp
xor
ljmp
inc
and
adc
addr16
fwait
xchg
iret
dec
xchg
and
nop
shlb
repnz
fwait
xor
lcall
leave
dec
dec
test
cld
sbb
adc
in
inc
lahf
stc
aam
or
jmp
cmc
mov
inc
mov
pop
dec
fs
cli
cli
push
movsb
push
mov
add
stos
jmp
les
and
popa
inc
or
cmp
xchg
push
pusha
fwait
add
pushl
jl
or
jo
jne
sub
xorb
pop
jl
in
mov
add
adc
mov
ja
clc
popa
int
adc
scas
dec
dec
pop
iret
call
xchg
icebp
sub
push
xor
lea
cmp
ljmp
insb
int
stos
lcall
pop
pop
jge
aas
lahf
pmaxub
sbb
adc
xchg
mov
jne
push
stos
sbb
dec
ljmp
xchg
or
insb
mov
mov
out
testb
out
push
ret
roll
adc
cmp
les
cmc
ljmp
test
dec
xchg
ljmp
ja
or
pop
or
cmpsl
cwtl
adc
or
packuswb
push
and
pop
dec
jae
jno
mov
lret
repz
loope
les
lods
mov
das
insl
stos
loop
inc
pusha
adc
nop
inc
sbb
jg
lods
into
mov
ljmp
lods
mov
stos
sub
adc
adc
adc
frstor
dec
inc
sbb
pusha
lock
push
sahf
imul
xor
sub
outsb
popa
mov
mov
imul
dec
clc
xorb
jbe
push
cmp
out
stos
or
aam
sub
jl
ss
inc
fstps
and
pop
adc
mov
sub
jge
sbb
jl
inc
pop
push
lock
bound
stos
and
push
ljmp
sbb
mov
loope
or
push
call
dec
sub
fs
sbb
subb
aam
leave
jno
cltd
push
les
into
movsl
sbb
divb
test
lgs
xor
pop
add
cmp
icebp
sbb
cmpsb
sub
mov
inc
and
mov
fwait
dec
inc
cmp
cmpsb
fisubrs
loop
mov
shll
or
cmp
push
loopne
push
inc
add
test
cmpsb
pop
imul
dec
push
and
jmp
xor
enter
out
mov
xchg
xor
je
imul
das
or
mov
cmp
ret
xor
loop
or
cmpsl
jp
inc
or
or
lock
loop
xchg
ds
gs
xor
or
sahf
fidivrs
mov
das
mov
sbb
inc
xchg
adc
cmp
popf
rol
xchg
inc
xor
clc
push
in
dec
mov
mov
xchg
enter
push
lcall
and
sti
ja
mov
repnz
mov
mov
pop
sarb
ret
push
inc
mov
jecxz
pop
ret
and
fmulp
fisubrs
test
add
loopne
jmp
notl
jp
inc
dec
add
bnd
lea
xor
push
sbb
sarl
test
call
xor
sbb
pop
orb
in
arpl
push
and
or
scas
jl
shl
xchg
in
test
imul
mov
popa
ja
push
test
scas
popa
lret
dec
leave
aad
nop
pop
std
and
shlb
add
mov
lods
mov
icebp
fisubrl
lds
fldcw
cmp
out
dec
mov
call
jp
loope
sti
sbb
jecxz
push
cmpsb
cli
mov
pop
pop
pop
idiv
sbb
xor
adc
out
cmp
icebp
mov
xchg
xchg
lret
int
add
sub
inc
sbb
jae
in
mov
into
lret
mov
nop
ret
repnz
sarb
lods
xor
outsb
pop
in
xlat
dec
cmpsl
inc
jbe
jo
clc
mov
test
movsb
notb
sti
test
sub
bnd
rolb
std
sub
dec
daa
inc
jl
aaa
xchg
rcr
jge
push
mov
xor
loop
inc
pusha
xor
jle
xlat
jbe
mov
outsb
mov
jo
and
ret
adc
sbb
dec
inc
in
loop
in
test
adc
inc
aam
shrl
pop
jb
mov
jae
sub
aas
adc
out
pop
das
pushl
xchg
fildl
jmp
jnp
cld
mov
jne,pt
dec
in
or
enter
sahf
inc
loope
cmpsl
test
mov
divb
cmovnp
or
loop
jge
cmpb
xchg
inc
adc
sub
sbb
xor
pop
rclb
sbb
dec
sub
mov
mov
sub
addr16
clc
pop
je
cmpsb
push
aaa
xor
test
inc
test
stc
jmp
adc
div
not
andb
fidivs
shr
leave
lock
push
orb
fimull
ljmp
xor
pop
insl
icebp
mov
sub
shlb
arpl
mov
insb
hlt
pop
in
ret
idivl
push
and
aas
sbb
jl
negl
rcll
add
jbe
in
mov
scas
mov
mov
pop
mov
pop
test
test
repz
ljmp
push
arpl
pop
in
jbe
lea
cld
aad
cmp
std
cli
inc
or
jl
jmp
and
cwtl
mov
or
push
and
jns
adc
pop
xchg
inc
int3
popa
cli
xchg
sbbb
jb
sbb
pushf
add
scas
push
mov
inc
inc
int3
subb
or
jnp
pop
pop
int
loop
insb
ja
sub
je
jl
aas
jne
jns
xchg
mov
pop
es
cmp
or
shrl
test
cmp
mov
daa
sbb
push
xor
pop
sub
pop
lock
dec
cli
in
mov
or
mov
les
mov
jo
test
ljmp
cld
lock
sbb
mov
jae
push
out
fwait
push
dec
pop
dec
popf
jmp
int
testl
std
into
insl
loope
sti
fwait
int
sub
or
iret
sbb
dec
add
and
xchg
sbb
fstpl
xchg
xchg
add
jno
push
jne
test
inc
call
adc
jmp
gs
xor
mov
cmp
mov
in
adc
jg
jmp
mov
aaa
les
cli
xor
rcrb
adc
mov
and
cmpsl
mov
imul
lds
popf
sub
add
push
xor
inc
cmp
sub
mov
mov
jne
cmp
scas
icebp
ljmp
dec
adc
or
mov
stos
mov
mov
sbb
out
mov
andb
arpl
jl
test
jno
aam
mov
or
xor
sub
cmc
out
xrelease
les
psubw
insb
fcmovnu
stc
pop
repnz
mov
mov
insb
mov
movsl
xchg
mov
xor
push
cmp
push
dec
xor
addb
into
sti
ljmp
and
xchg
leave
addb
mov
mov
movsl
out
mov
dec
loopne
pop
xchg
addb
mov
decl
es
push
push
jb
loope
arpl
and
or
adc
or
pop
les
jns
stos
sbb
jp
adc
add
sarl
mov
idivb
dec
rclb
jmp
jg
aad
inc
and
push
jbe
int
fsubrs
repz
sub
inc
inc
push
cwtl
imul
test
jmp
jns
gs
sbb
dec
jno
insl
lods
out
adc
add
mov
jg
scas
cmp
repnz
jle
movsl
rcr
add
mov
int
push
jb
jae
das
into
pop
test
shrl
mov
mov
push
sarl
ficoml
xchg
xchg
outsb
inc
or
out
add
mov
loopne
dec
fs
aam
jae
inc
add
cs
fsub
out
adc
shlb
xchg
or
lock
popf
mov
loopne
icebp
cwtl
jne
mov
pop
cli
push
pop
hlt
insb
faddl
out
in
pop
rcrl
les
add
mov
lds
jge
or
inc
push
and
bound
add
scas
xor
not
push
xor
cwtl
and
js
lock
pop
xor
mov
dec
mov
and
mov
or
fs
xor
mov
ret
lret
mov
add
imul
dec
xchg
js
scas
pop
pop
repnz
in
dec
pop
fs
fcoml
cmc
ljmp
inc
dec
mov
outsb
jae
mov
dec
hlt
sbb
sbb
lea
xchg
adc
push
jo
aam
sub
jle
in
cmpsb
shrl
mov
outsb
cs
mov
sahf
mov
lret
cmc
fistpll
cmp
rolb
jmp
fwait
sub
xchg
out
std
xchg
cmpsl
lods
outsb
leave
fimuls
or
inc
or
sar
jbe
or
pop
in
jge
out
adc
mov
jp
popf
sahf
dec
cmp
cltd
pop
mov
pop
and
dec
jp
lret
test
es
sub
add
fldcw
dec
into
cmpsb
and
push
lea
in
leave
movsb
or
or
sbb
xchg
movsb
inc
inc
pop
dec
test
daa
nop
aaa
fidivrs
sbb
push
aaa
and
xchg
pop
and
ds
out
in
jge
int3
push
je
mov
movsl
sarb
pop
cs
xor
insl
popa
fidivs
call
mov
gs
and
adc
and
xor
mov
repnz
push
rcll
add
je
cmp
popf
mov
mov
or
pop
adc
inc
frstor
test
inc
inc
push
inc
or
sbb
scas
fcmovbe
pop
mov
fistpll
sahf
pop
data16
push
jnp
cmpsl
stos
or
in
sahf
xchg
sbb
sub
and
xor
jo
lds
lods
mov
cld
fcomp
stos
jmp
lcall
inc
sti
inc
jo
call
cmpsl
cli
in
mov
add
fistpl
push
fisubrs
sahf
aad
jne
add
sbb
or
imul
outsl
push
insb
addr16
jns
jp
stos
adc
fldcw
and
cld
jne
mov
scas
cmp
lret
mov
lahf
inc
andb
cltd
jnp
mov
push
stos
shl
test
mov
insl
cli
jbe
push
xlat
ret
cmp
and
repz
sti
rol
fidivrl
aam
cli
mov
test
xor
sub
dec
dec
insb
pop
sbb
add
fcmovu
adcl
mov
or
mov
ljmp
jae
fwait
arpl
popa
jnp
push
imul
or
adc
out
push
xchg
pop
fnstsw
ds
cltd
push
mov
cwtl
cltd
insl
pushl
sub
insb
leave
inc
sarl
int3
cmpsl
loop
mov
test
and
pop
xor
mov
mov
pop
and
pop
popa
adc
in
cli
dec
or
xchg
sbb
lret
and
adc
jne
xor
in
mov
pop
ret
mov
lea
fwait
int3
cmp
aaa
int3
addr16
inc
dec
lret
cmpsl
cs
js
test
xor
loop
daa
outsb
push
dec
fdiv
inc
test
daa
add
fsubrs
jb
push
jmp
xlat
loopne
inc
and
add
leave
movsl
shl
mov
es
pop
xchg
mov
lock
rcrl
arpl
jecxz
sahf
sub
out
jno
push
dec
jns
lret
xchg
insl
cmc
leave
daa
outsb
dec
push
mov
mov
xor
in
adc
xchg
push
lock
pushf
mov
adc
aas
test
loop
rcrl
ja
mov
push
es
pop
xchg
push
sub
mov
and
xor
cmp
cltd
pop
ficomps
push
mov
stos
subb
mov
add
movsb
and
and
push
jae
aas
jns
je
js
mov
pop
inc
lock
ffree
dec
xor
dec
jecxz
std
in
negl
xchg
jle
loopne
sub
in
xchg
lret
dec
into
cmp
scas
push
or
aam
mov
aaa
pop
jnp
cmc
mov
jle
andl
leave
out
scas
pop
jnp
adc
bound
test
jge
xor
inc
movsb
mov
xor
insl
inc
pop
xor
xor
mov
aad
in
dec
loop
pop
outsb
sub
roll
roll
jo
daa
loope
cmpsb
cltd
iret
outsb
pop
das
rcl
add
out
enter
in
bound
and
sbb
call
push
push
mov
dec
sbb
cmp
sbb
cmc
icebp
adc
sbbl
xchg
mov
xchg
sti
push
xchg
sbb
bound
mov
jge
and
dec
rolb
or
repnz
push
inc
popf
xchg
call
negb
push
test
out
stc
and
xchg
out
fdivl
fisttpl
iret
push
cmp
lods
xchg
jg
mov
cmp
push
push
mov
popa
fcmovnu
popf
xor
xor
xchg
pop
xchg
in
fmuls
mov
add
pop
jecxz
mov
out
pop
mov
rcrl
xor
jb
cmp
iret
mov
inc
mov
outsb
jns
icebp
xchg
pusha
enter
enter
push
push
jge
loop
mov
fsts
data16
ror
sub
notb
mov
adcl
cmp
xor
fdivr
jle
add
repz
inc
jne
fldenv
dec
enter
jge
inc
dec
pop
std
int3
maxps
jge,pn
dec
mov
mov
inc
jne
out
or
mov
jmp
shll
test
inc
inc
insb
adc
insb
dec
es
adc
push
pusha
cmpsb
xchg
inc
stos
or
and
ret
mov
push
stc
pop
rcll
jae
divl
xchg
test
dec
scas
std
in
jle
sbb
xchg
cld
mov
cltd
dec
jo
push
sub
test
lea
push
lcall
mov
cmp
out
fiaddl
or
inc
ds
sbb
inc
mov
mov
mov
ds
leave
nop
xlat
or
stc
pop
dec
test
icebp
push
dec
jns
add
jne
shrb
cmp
pop
jg
icebp
es
dec
push
loop
cmp
cmp
lods
outsb
xchg
dec
sarb
imul
jns
and
jns
js
sbb
test
test
xchg
pop
inc
push
push
add
push
test
xchg
sti
iret
pop
sti
jge
cmpb
cwtl
js
outsb
inc
cmpsl
adc
jbe
inc
cmp
rep
dec
or
mov
jns
and
lahf
sbb
adc
int3
jb
sbb
jecxz
xor
cwtl
popf
mov
or
pop
fsubs
addr16
scas
jecxz
hlt
outsb
cmp
into
adc
adc
imul
in
xor
push
lret
call
xor
dec
shlb
fcomip
jno
les
bound
mov
mov
or
or
pop
subb
jae
ret
sbb
fstpt
sbb
ret
les
fs
or
cmp
rorb
pop
fildll
mov
aaa
shrb
mov
lods
jne
lods
xlat
xchg
sub
int
pop
mov
or
ljmp
mov
adc
cmc
jp
pop
push
xor
xor
dec
sub
popa
xchg
mov
jnp
lods
push
cmp
mov
mov
pop
and
icebp
adc
and
int3
in
lea
pop
lods
int
inc
mulb
sbb
dec
mov
js
xor
mov
push
ficomps
loope
sub
pop
jae
dec
cld
push
scas
or
pushf
xchg
inc
pop
js
sbb
add
daa
jae
ret
pop
push
movsb
psubusw
outsl
cmp
imull
andb
popa
mov
mov
sbb
fcoms
jp
mov
add
les
inc
cmpsl
out
insl
cmp
ss
mov
ja
inc
lods
aaa
mov
xor
fcomip
out
rcrl
sub
sbb
and
xor
js
cmp
cwtl
icebp
xchg
or
popf
fstpl
add
sub
and
push
mov
mov
loopne
fidivrs
aaa
xchg
jp
rorl
mov
and
add
mov
cmp
lcall
addl
fcoms
mov
out
inc
fcomps
shlb
bound
push
sub
lods
pop
pusha
or
or
loopne
stos
xlat
mov
mov
cmpsb
xchg
mov
lods
sbb
jg
fsubrp
sub
push
aam
sti
inc
std
xchg
imul
push
ss
xor
lret
popa
test
addr16
pop
data16
mov
jo
or
mov
in
pushf
cmp
shr
push
insl
adc
loop
dec
stc
adc
sbbl
and
je
movsl
pop
pop
das
xchg
mov
inc
cmp
jno
clc
lahf
movsb
ss
out
lock
cmpsl
dec
andb
pop
outsb
or
push
jnp
mov
or
pop
and
mov
sbb
clc
arpl
out
add
cli
stc
adc
dec
popf
add
arpl
adc
sbb
mov
fisubrs
push
adc
lds
jae
fisubl
testl
insl
or
in
enter
dec
pop
push
jne
ss
scas
sub
icebp
push
sub
loop
loope
lods
adc
xchg
scas
ret
fsubs
cwtl
or
mov
into
in
cltd
jp
inc
dec
dec
enter
js
insb
aaa
xor
or
insl
out
sub
adc
push
out
push
cltd
xor
hlt
lods
ss
mov
xlat
add
push
inc
into
ret
std
push
lret
je
sub
push
adc
mov
cli
push
fwait
inc
loope
sub
mov
scas
xor
rorb
jl
pusha
aaa
xor
xchg
sub
sbb
add
dec
cs
dec
lods
enter
push
xor
inc
push
movsb
jecxz
jp
gs
stos
ljmp
cmpsb
mov
pusha
mov
xor
out
rcl
xchg
push
subl
xor
dec
scas
and
cmpsl
call
aaa
lock
cmpsb
sub
mov
or
inc
mov
cld
gs
pop
and
or
ficoms
add
jmp
mov
dec
mov
and
jns
mov
sti
cmp
mov
add
dec
xchg
pop
mov
scas
push
inc
out
sbb
fsubrs
ucomiss
and
ret
cmp
xor
ljmp
push
insl
fistpl
scas
lahf
lret
jl
scas
push
es
mov
fwait
ja
dec
jle
js
xlat
imul
mov
dec
mov
mov
sbb
push
fsubr
test
movsb
mov
clc
mov
imul
dec
nop
shlb
insl
mov
ss
fistl
inc
incl
imull
js
shll
stc
jne
push
ss
xchg
jne
loope
xchg
lcall
pop
cs
icebp
popf
cmc
inc
imul
lock
shrl
in
leave
lahf
pop
add
mov
adc
mov
fcoms
daa
test
daa
xor
pop
sbb
pop
push
ficoml
sbb
aam
jnp
xchg
mov
jns
fcoms
scas
repz
sbb
dec
and
ss
ds
ja
cld
repz
ret
popf
add
jno
and
xchg
aad
dec
inc
cmp
ds
repnz
pop
lret
out
orl
movsb
cmpsl
jne
mov
fs
push
pop
icebp
cmpsl
jmp
stos
sbb
pop
dec
mov
fnstcw
bound
sbb
aas
pop
sub
and
divps
aas
jecxz
enter
add
adc
add
sbb
mov
pop
mov
sub
movq
test
xor
cmp
outsb
ss
outsl
add
pcmpgtd
das
lds
add
push
repnz
jl
pusha
out
adc
mov
sub
insl
ljmp
aaa
pop
xor
dec
push
mov
clc
ss
lret
ret
dec
rep
mov
xor
cli
in
mov
xchg
nop
jge
mov
icebp
andl
cltd
push
jbe
mov
lods
sbb
or
je
int
cmpsl
in
ja
movsl
mov
aam
fwait
dec
push
sti
stos
cmp
xchg
pop
or
jne
push
jno
fistpl
mov
popa
jl
inc
in
test
pop
stc
pop
push
inc
in
rcrl
addl
les
movsb
xchg
sbb
push
stos
dec
jne
mov
mov
cld
cmp
mov
pop
sar
xchg
cmpb
cli
mov
mov
and
ffree
jge
repnz
jb
andl
and
sub
push
inc
lret
cmp
fmuls
test
mov
pop
push
mov
loope
mov
xchg
sbb
sahf
jg
enter
cld
push
pop
xchg
mov
movsb
mov
add
and
out
dec
je
cld
insb
lds
sbb
clc
cld
fbld
mov
cmp
pushf
push
and
xor
cmp
insb
imul
inc
add
out
pop
cmp
push
mov
add
imul
insl
test
js
inc
or
dec
jmp
adc
inc
or
sbbl
scas
mov
jmp
jbe
shll
lahf
andl
gs
add
fmull
pop
xchg
test
fwait
lea
pop
ret
gs
dec
mov
ja
mov
shrb
imul
outsl
andl
imul
sbb
outsb
fistps
push
lea
add
jno
insl
lret
sub
or
and
rorl
outsl
pusha
cld
xor
cld
xchg
inc
sbb
loope
out
mov
xchg
sbb
push
sbbb
outsl
sbb
in
in
adc
add
gs
push
mov
mov
mul
fisubs
ljmp
and
cmc
lds
lret
loope
mov
adc
xchg
inc
in
or
sahf
popa
mov
dec
xchg
adc
dec
and
cwtl
pop
stos
push
and
xchg
mov
mov
jle
leave
cs
mov
pop
inc
mov
adcl
mov
adc
add
or
push
xchg
adc
push
sub
cwtl
test
mov
call
out
test
mov
lods
ljmp
clc
adc
lcall
adc
fdivrs
xor
shll
shl
inc
dec
ss
pop
in
push
in
push
xchg
jne
stc
jp
add
inc
push
je
mov
lret
in
cmpsl
fld
loope,pt
loopne
or
add
cmp
leave
jno
sahf
pop
lods
push
mov
shrl
jecxz
mov
mov
aas
inc
loope
es
imul
sub
dec
cwtl
or
fbld
cmp
shll
sub
mov
jns
hlt
pop
fnsave
xor
lock
or
or
xchg
shlb
pushf
xchg
jbe
pushf
cmpsb
add
aaa
and
sub
cmp
test
xchg
clc
push
xchg
pop
mov
mov
call
jle
xchg
adc
xchg
je
sub
sub
lock
mov
push
jbe
in
lea
dec
inc
mov
test
in
bnd
push
aad
mov
out
pusha
es
adc
dec
jmp
subb
cli
sub
mov
pop
aaa
push
mov
jbe
loopne
clc
pop
pop
lock
dec
dec
in
mov
push
mov
sub
or
aas
pop
cltd
dec
xor
sub
aas
shrl
adc
mov
mov
pop
idiv
rcpps
jecxz,pt
fwait
repnz
mov
sub
out
sarb
inc
cmp
xor
add
push
je
add
inc
std
test
fistps
repz
pop
push
and
mov
cmc
mov
xor
out
push
or
or
scas
mov
fdivs
cmp
pop
dec
outsb
sbb
movsb
pop
movsb
xchg
idivb
xchg
mov
mov
inc
hlt
pop
mov
pop
fadd
jnp
xchg
pop
push
lret
push
or
mov
cltd
xchg
imul
pop
mov
fcompl
mov
xorb
inc
lods
dec
xor
mov
stos
aam
sbb
add
movsl
pop
mov
loope
adc
enter
sbb
adc
mov
fists
mov
push
mov
out
sub
std
mov
dec
pop
xchg
ficompl
fs
mov
xchg
icebp
adc
jne
sub
xchg
out
movsb
lret
pop
insl
pop
pop
xchg
mov
xlat
pop
in
test
scas
sbb
jo
aad
xor
mov
in
xor
mov
jge
mov
xlat
or
mov
adc
sub
sbb
pop
dec
mov
cmp
shlb
add
sbb
mov
ljmp
sub
push
nop
sbbl
and
cmp
fs
sbb
sarl
jle
xlat
xor
cld
in
mov
imul
div
lret
adc
jb
sub
jle
das
sub
in
lahf
jp
std
pop
lret
insl
ret
outsb
pop
jmp
cmp
sahf
sub
movsb
int3
jbe
iret
pusha
sbb
cmp
lahf
cmpsb
jb
out
push
cmc
fwait
shrb
fisubrl
xor
mov
pop
pop
and
mov
rcl
lcall
jnp
jle
push
cmp
mov
clc
outsb
pusha
pushf
push
sub
push
notl
shll
rol
sbb
mov
out
jmp
ret
daa
int3
pop
lahf
addr16
jl
sub
sub
push
aas
pushf
jnp
mov
add
pushf
movsb
mov
dec
inc
pop
insl
pop
inc
fdivl
push
pop
aad
add
imul
sub
or
enter
mov
call
sub
mov
loopne
mov
add
jmp
icebp
cwtl
dec
stos
add
pop
push
jl
inc
push
test
adc
sbb
mov
insl
push
dec
add
rorl
adc
push
imul
scas
lret
jb
popf
xor
aaa
aam
and
cmp
repz
pop
mov
push
or
or
movsb
insl
mov
cmpsl
aam
rcll
and
addl
repz
push
and
jg
pop
or
lds
jnp
nop
jns
mov
sub
jmp
fsubp
add
imulb
sahf
pop
test
shll
repnz
ds
test
cmc
mov
mov
test
aam
pop
jne
or
loop
add
add
in
sbb
out
call
int3
imul
pushf
jo
js
mov
in
jae
xor
adc
adc
dec
xor
lcall
lods
sub
and
xor
gs
sbb
cs
pusha
sub
mov
ret
aam
inc
out
pop
xor
mov
jp
push
cmpsb
mov
add
mov
xor
mov
add
add
imul
es
sub
das
sub
and
pop
jle
jns
cmp
addr16
jle
in
in
test
sub
ret
out
cltd
mov
mov
pop
push
js,pt
mul
jne
call
sbb
stos
js
loop
ret
icebp
mov
dec
sub
adc
incb
aas
push
jg
and
adc
fcom
jge
push
cmp
jg
jns
pushf
jo
lret
mov
enter
fwait
dec
push
and
loope
xchg
push
mov
dec
sbbl
inc
jmp
sbb
mov
push
andb
in
push
mov
out
adc
xchg
fadd
cltd
lea
dec
repz
divb
scas
popa
loope
rcr
lret
dec
rorb
sbb
xor
es
pushf
dec
out
and
mov
dec
in
nop
dec
ret
out
adc
sbb
lods
mov
jno
roll
cmp
repnz
push
or
add
xchg
xlat
mov
inc
in
lcall
jns
aaa
mov
leave
sub
in
test
ds
xor
jle
ret
rolb
stos
jae
mov
mov
sub
mov
loopne
mov
mov
mov
daa
mov
and
cmp
mov
into
xchg
jp
loopne
adc
and
lods
jne
les
popf
daa
sbb
mov
je
or
lret
adc
mov
cmpsb
sarl
shlb
test
push
jg
dec
jecxz
mov
mov
out
insl
mov
imul
shll
sbb
xor
add
pop
andl
fcmovne
cld
movd
sub
add
mov
push
mov
outsl
adc
in
push
lret
ds
pop
jg
jmp
js
call
lods
pop
adc
mov
aam
cmp
mov
push
mov
or
pop
fdivl
inc
fnstenv
arpl
cwtl
in
mov
pop
jle
jno
je
pusha
les
jmp
ret
les
lea
xlat
leave
jno
push
cmp
pop
sti
lahf
mov
imul
pop
ja
pop
sbb
mov
cmp
push
jo
ss
mov
cli
repnz
push
push
xchg
popa
mov
arpl
jnp
push
sti
pop
xor
jp
repz
rol
sub
dec
inc
cs
adc
cmpsl
in
xor
adc
sub
icebp
nop
jnp
inc
mov
fistps
xchg
push
rolb
sub
sub
imul
jo
and
icebp
cmp
push
or
repnz
pop
or
jle
sbb
test
fcmovnbe
fcmovb
pop
mov
in
adc
mov
adc
mov
mov
pop
mov
mov
leave
shr
ljmp
test
ljmp
sbb
lods
adc
sahf
scas
pop
stos
xchg
ficompl
fidivl
lahf
mull
dec
jmp
imull
sub
and
gs
jne
fs
sub
xchg
adc
mov
lcall
jne
sbb
out
jecxz,pn
outsb
jae
testl
xor
out
jg
xchg
sahf
mov
cli
or
mov
sub
aad
gs
adc
pop
aam
cmpsb
pushf
std
les
pop
cmp
rolb
roll
lret
mov
push
jno
push
and
mov
xchg
xor
mov
aam
add
enter
ficoms
scas
jo
pop
and
fisttps
xor
popf
fldt
inc
sub
adc
out
movsb
icebp
cmp
into
scas
scas
loope
movsl
sub
sub
cmc
ret
call
test
leave
mov
mov
ja
mov
sbb
cmp
inc
xchg
fistl
popf
sbb
adc
inc
adc
scas
push
adc
fwait
scas
in
cs
add
cli
add
aad
xorb
lret
mov
movsb
add
aad
icebp
xchg
es
mov
in
and
mov
iret
repz
mov
stc
in
push
and
xor
mov
aas
pushf
xchg
cmp
in
and
push
jo
jb
xchg
pusha
xchg
cmp
mov
pop
clc
test
mov
andl
std
out
sub
ljmp
shrl
push
sub
dec
sarl
sub
inc
jbe
inc
mov
adc
jne
lcall
adc
ficomps
mov
cmpsl
mov
roll
add
out
icebp
out
lods
xor
cmpsl
sbb
cwtl
mov
xchg
and
dec
mov
or
add
jbe
xor
shlb
in
add
dec
sub
and
aaa
jmp
sub
insl
ret
lret
push
lret
sub
dec
add
rcrl
enter
mov
inc
rcl
notl
mov
push
mov
adc
jns
xchg
mov
arpl
add
shr
inc
sbb
faddl
sbb
es
out
ret
xor
or
mov
lods
xchg
test
or
hlt
movsl
sbb
jae
mov
mov
mov
fnstsw
inc
mov
out
mov
pop
stos
and
add
adc
lret
cmp
sti
cli
lods
fldl2e
test
movsb
pop
les
pop
jbe
add
lret
je
shlb
pop
leave
adc
loopne
stos
std
pop
or
pop
jle
push
adc
sbb
js
in
notl
add
add
pop
and
mov
outsl
es
jmp
cmp
mov
pop
lds
fs
jo
sbb
ljmp
xchg
mov
nop
mov
mov
jo
mov
ret
or
fcmovu
jnp
and
dec
pusha
mov
sub
or
mov
outsl
int
cs
ljmp
push
mov
xor
fldenv
aas
mov
dec
pop
mov
enter
push
ss
outsl
or
mov
push
shll
cmp
gs
push
popf
xchg
jge
cmc
orl
loope
mov
ror
cwtl
scas
push
and
rol
or
inc
xor
movsb
stos
shl
fs
sbb
or
pusha
ret
fs
fstpl
mov
mov
nop
pop
jg
mov
adc
push
insl
std
mov
loop
mov
sub
cmp
cmc
and
gs
mov
loopne
xchg
cwtl
in
dec
cmp
push
cmpsl
cmp
xchg
xor
in
xchg
pop
test
loope
pop
fsts
push
add
lcall
fbstp
push
sub
and
jg
xor
add
fcompl
rcll
push
xor
push
add
out
inc
xlat
ret
ret
clc
dec
ja
out
cmp
lods
inc
cltd
jmp
xor
mov
mov
mov
stc
jns
in
leave
arpl
push
stc
das
sahf
mov
inc
mov
sub
stos
cmp
push
jl
fcmovb
push
mov
mov
pmullw
lea
sbb
into
or
push
or
cmp
in
pushf
shlb
adc
repnz
cmp
lahf
daa
insb
cmp
repz
push
xor
jecxz
dec
mov
adcb
mov
cmp
mov
mov
fmull
add
fists
out
in
and
ja
sub
aad
out
stos
stos
xchg
cmp
sub
out
xor
fs
pop
cmpsl
hlt
stc
outsl
mov
inc
fbstp
movsb
mov
pop
in
adc
iret
push
fldenv
xchg
movsb
cli
int
fchs
mov
push
call
xchg
leave
inc
or
cmp
outsl
orl
shl
imul
scas
push
and
inc
mov
ja
addr16
cltd
jb
jge
scas
enter
sbb
push
add
pushf
mov
fmuls
dec
int
data16
shll
shl
xchg
fwait
icebp
push
push
ljmp
mov
sahf
stos
adc
stc
int3
fstps
cmpb
repz
daa
sbb
addr16
push
jb
add
ljmp
xor
add
sub
adc
push
jmp
les
adc
jmp
ret
dec
outsb
scas
inc
inc
shlb
pop
out
lods
je
inc
cld
in
mov
jno
push
xchg
cld
stos
or
jnp
pop
test
push
push
mov
xor
call
jmp
jp
dec
ret
and
in
icebp
dec
mov
xor
rcll
arpl
sar
mov
xor
inc
mov
mov
push
jg
cmpsl
stos
mov
movsl
jne
and
cwtl
inc
iret
test
shr
divl
cvtdq2ps
dec
fwait
call
nop
mov
lds
or
aam
lock
sub
sub
jp
push
lahf
imul
pushf
add
aas
xchg
jo
mov
fs
mov
jb
pop
lods
adc
push
leave
popl
mov
repnz
scas
cld
adc
adc
add
fstpt
xchg
cmc
sub
call
shrl
mov
es
push
int
sahf
je
push
fimuls
scas
adc
js
add
in
cmpsl
and
inc
jge
or
in
and
dec
loopne
stos
loop
sbb
cmp
ss
pusha
jo
mov
add
adc
adc
mov
aaa
ss
mov
cmpsl
xor
xorb
pop
in
popa
jnp
hlt
push
scas
sahf
sub
xchg
or
cmp
xchg
sub
shll
push
mov
fcmovu
lret
push
mov
add
add
push
or
je
in
dec
jne
xor
sub
push
lret
lds
in
sub
or
pop
ljmp
cmc
bound
mov
xor
push
or
das
adc
and
fs
loopne
cld
or
jae
lret
mov
jbe
mov
aaa
cmp
leave
ljmp
mov
cld
push
add
jae
mov
xor
mov
adc
jecxz
outsl
aam
pushf
test
add
fdivs
ja
aad
jmp
cltd
gs
sbb
shrb
xchg
sbb
jae
jae
aad
add
cwtl
mov
xchg
cmp
xchg
xor
xor
fsubs
mov
sahf
dec
iret
je
mov
mov
sbb
mulb
adc
outsb
pop
and
jbe
nop
push
and
lcall
cmp
ret
fnstcw
fisubl
or
cmp
cmp
dec
jg
mov
lcall
ficomps
cwtl
shlb
js
mov
cmp
jns
mov
adc
sbb
in
jp
sub
imul
mov
and
andl
mov
and
lret
idivb
pop
cmp
add
inc
adc
fwait
aad
lahf
clc
inc
push
xchg
xor
dec
inc
imul
mov
in
popf
adc
xor
cmp
xor
fs
xchg
ljmp
sahf
xchg
data16
mov
xor
sbb
inc
insl
out
inc
aaa
pop
pop
pusha
repz
divl
out
test
xchg
and
scas
insb
repz
mov
mov
jne
jle
sbb
je
add
and
movsl
adc
das
lret
aaa
xchg
out
ret
movsl
push
jae
xchg
lods
or
or
cmp
les
stos
mov
in
jle
pushf
add
test
lret
cmp
fsubp
arpl
dec
xorb
or
mov
js
pop
jnp
and
outsb
test
sbb
mov
das
das
xlat
mov
mov
jnp
scas
insb
jmp
cmp
pop
mov
and
cltd
jb
shlb
sbb
nop
jle
icebp
movsb
mov
enter
test
push
repz
call
xor
lret
xor
add
or
xchg
cmp
adc
es
inc
xchg
out
cltd
lret
sbb
adc
in
push
mov
mov
sbb
pop
out
sarb
cmpsb
jno
sbb
push
cmp
mov
js
sbb
fs
jge
test
dec
add
sub
stos
cmp
cmp
test
negb
ffreep
loope
mov
xor
sbb
ljmp
inc
dec
repnz
std
vandps
pushf
in
dec
negb
xchg
lods
jne
mov
push
pop
dec
add
push
add
arpl
xchg
adc
cs
scas
es
out
leave
lret
inc
clc
je
sbb
dec
ljmp
je
and
fistps
daa
aam
fldenv
jae
lock
les
cmc
xor
scas
jg
notl
fwait
aad
push
daa
cli
inc
dec
mov
scas
lret
cmp
push
ret
mov
lods
leave
lret
les
movsl
xor
xor
mov
cmp
nop
push
xchg
bound
adc
in
jne
icebp
call
mov
lahf
lret
lahf
lods
pushf
xchg
in
into
fldenv
adc
xorb
cmpsl
mov
lds
inc
dec
or
dec
or
scas
addr16
movsb
nop
pop
test
jl
mov
in
lds
jl
xchg
jns
cmpsb
jb
call
dec
pusha
xchg
in
fnstcw
xor
adc
and
or
sti
adc
scas
dec
stos
stc
and
mov
add
adc
test
stos
inc
inc
jns
xor
fisubrl
add
or
lds
cmp
imul
cli
addr16
enter
sbb
push
or
pop
dec
test
jae
ffreep
stos
adc
aaa
sub
mov
mov
inc
dec
es
je
cmp
push
daa
in
iret
adc
push
in
mov
ret
outsb
or
adc
ja
push
add
fdivl
stos
mov
dec
cmp
sub
ja
shll
mov
add
or
xchg
mov
mov
fisttpll
push
pop
sbbb
xor
orl
shrl
ss
icebp
add
mov
or
rclb
stos
out
cmp
dec
into
icebp
mov
add
push
idiv
jns
xchg
insl
cld
jp
bound
add
push
mov
adc
sub
ds
in
pop
jnp
stos
cli
cli
rcr
and
sub
mov
pop
inc
test
pushf
xor
add
push
or
mov
nop
mov
adc
mov
inc
pop
ja
sub
cmp
jae
xchg
pop
arpl
test
jmp
lahf
mov
cmp
popf
insl
mov
cmp
push
out
push
jns
inc
inc
cmp
mov
pusha
subl
inc
int
ror
out
sbb
sbb
pusha
das
nop
or
mov
xor
fisubrl
push
fstpt
pop
shrl
jmp
clc
sub
test
xchg
stos
jg
lea
mov
out
or
push
cli
sub
mov
and
ds
cmpsb
pop
push
cmp
leave
mov
sbb
sub
xor
mulb
js
jg
mov
loopne
out
and
pop
jl
and
mov
xor
fidivs
push
push
push
push
fsubs
and
aas
stc
repnz
push
pop
mov
aaa
bound
nop
nop
andl
dec
cmp
cmpsb
inc
push
xchg
mov
xchg
or
cmp
mov
lods
int
out
xor
xor
and
xchg
arpl
xchg
xor
repz
stos
es
sbb
icebp
adc
ret
mov
es
fistpll
pop
xor
sbb
lods
xchg
xor
mov
jl
test
aaa
lods
rcrl
iret
inc
dec
jns
dec
sub
mov
and
aam
movsl
add
das
jge
testb
lea
mov
pop
inc
jbe
rol
sahf
or
mov
push
push
addr16
mov
pop
jb,pn
ffreep
fiadds
inc
pop
pop
out
jnp
adcb
shrl
xorb
inc
xchg
mov
mov
add
outsl
lret
jno
inc
shr
xor
sub
pop
rcrb
mov
mov
jns
jge
stos
push
rolb
jl
push
mov
mov
pop
cmp
dec
pop
es
xchg
aam
cli
inc
ds
push
mov
push
xchg
lds
mov
mov
mov
lahf
xchg
pushf
add
bnd
in
sub
outsl
push
fnsave
jmp
xor
jl
sbb
xchg
cmp
scas
or
cwtl
in
jecxz
inc
pop
inc
rol
out
cmp
sbb
cmp
adc
das
pop
dec
add
lods
bound
cmpsl
fs
mov
lea
scas
pop
das
jmp
mov
movsl
je
xlat
push
out
data16
jecxz
inc
inc
nop
inc
push
imul
sub
xchg
xor
mov
outsb
sub
xor
mov
mov
inc
sbb
sub
xchg
sarl
sub
loop
sbb
sti
lret
shlb
mov
jne
inc
xorl
push
adc
sbb
movsb
mov
mov
mov
mov
sbb
imul
mov
sbb
lcall
sub
sbb
outsb
mov
jnp
leave
push
xchg
bound
pop
push
imul
mov
stos
mov
sti
or
cmp
es
dec
scas
mov
or
pushf
std
inc
lcall
jns
jb
add
adc
notb
and
mov
popa
mov
lea
or
mov
push
pop
loop
loopne
push
xor
leave
jb
sahf
paddw
mov
inc
out
sub
adc
xor
in
dec
mov
ret
ljmp
dec
or
dec
mov
lods
mov
les
fidivl
outsl
cwtl
jmp
pop
rorl
jne
mov
dec
pop
inc
leave
clc
shlb
jle
mov
xchg
ja
ljmp
lcall
int3
mov
icebp
and
inc
and
push
test
aaa
dec
loope
int
lods
jp
pop
sub
aaa
gs
mov
test
mov
ja
and
or
sbb
sbb
lods
addr16
in
test
dec
adc
clc
int3
ficoms
cs
sub
gs
inc
dec
incb
out
outsb
in
xchg
int
out
pop
mov
push
mov
movsl
in
hlt
mov
fnsave
ss
nop
es
xlat
and
adc
test
test
test
mov
loopne
push
in
adc
rcrl
mov
repnz
xchg
popf
jnp
pushf
fsubrl
pop
shl
pop
push
push
sub
jecxz
xchg
ror
push
fsin
push
or
xor
sbb
sbb
fcompl
push
jae
mov
lahf
scas
add
pusha
mov
insl
add
popf
lods
int3
jno
jb
mov
fstpl
cli
out
pop
and
and
dec
and
mov
sbbb
mov
lret
add
or
push
fidivrl
in
sub
hlt
sbb
je
sti
ret
jl
fwait
popa
sbb
fwait
sbb
in
ss
inc
ljmp
jo
aam
jno
inc
mov
cwtl
push
dec
aam
dec
icebp
sbb
repnz
loopne
lahf
lock
roll
or
fisubrl
dec
icebp
popa
dec
rcr
das
jno
adc
decl
xchg
pop
mov
inc
lahf
outsb
into
mov
or
xchg
or
pop
stc
jle
push
loopne
mov
icebp
adc
fisubrl
loope
outsl
mov
jne
xor
sub
cmp
das
sbbl
mov
mov
int
aaa
xchg
outsb
jle
xor
and
and
add
mov
arpl
scas
in
mov
mov
mov
cmp
cltd
int
mov
clc
icebp
mov
cmp
mov
sub
push
je
fistpll
test
ss
test
movsb
push
and
ss
push
pop
insl
mov
cmpsb
sub
fldt
mov
add
sub
dec
aas
nop
inc
icebp
mov
push
sub
mov
insl
addl
pop
aam
cli
andb
sbb
dec
repz
and
inc
pmulhw
icebp
xor
adc
xor
out
adc
push
aas
jp
pop
unpcklps
sub
mov
xchg
scas
pusha
xlat
aad
xor
and
mov
movsb
mov
das
aaa
loop
inc
daa
test
mov
cmp
jnp
pop
sub
inc
in
and
stos
in
mov
test
cmp
push
xchg
pop
loopne
idivb
insb
jp
pop
in
and
popa
ds
test
push
out
inc
movsl
mov
and
sbb
dec
movsb
stos
and
and
sbb
ret
arpl
push
cmp
dec
sbb
fadds
bound
or
or
clc
inc
xor
aas
cltd
push
cmpsb
jo
ljmp
aas
mov
xchg
xor
arpl
dec
int
in
and
ficompl
push
imul
xor
pop
xchg
add
dec
int3
xchg
js
mov
and
push
or
cli
sub
lds
xor
pop
fwait
shr
cmp
in
pop
insl
out
dec
fcmovbe
jecxz
rorl
xchg
fnsave
lods
pop
cmc
lret
mov
add
iret
dec
ss
lods
xor
test
mov
mov
add
mov
iret
sti
jg
add
jbe
into
push
inc
mov
in
dec
push
repz
sbb
pop
and
addb
into
jne
sub
push
sbb
cmp
in
mov
jecxz
xor
hlt
std
sub
adc
xor
push
jle
cmp
imul
rcrb
dec
or
daa
mov
inc
cmpsl
outsl
aaa
leave
cmp
nop
sub
jbe
je
xor
shrb
jge
cli
lahf
mov
lret
pop
sbb
mov
fisttps
push
in
fs
loope
xchg
cmp
add
andl
mov
jo
inc
jp
mov
xchg
sbb
adc
outsl
rol
inc
je
xor
lcall
xchg
pop
push
les
pop
adc
out
iret
js
jle
popa
dec
dec
ss
jmp
mov
jl
sarb
mov
push
aad
cwtl
fucomp
pusha
sub
std
pushf
test
add
fnsave
cmp
cmp
rcrl
into
cltd
xor
mov
lods
push
es
shrl
mov
js
fwait
sub
mov
stc
nop
inc
dec
mov
scas
popa
mov
pop
lahf
lret
repz
mov
inc
sbb
daa
fnstcw
imul
ucomiss
ljmp
xor
jmp
lret
cmp
pop
test
mov
dec
mov
xorb
sbb
jp
dec
or
ja
lahf
pop
scas
dec
push
adc
add
sub
push
ror
push
mov
movsb
jmp
cmpl
cltd
xor
mov
mov
lahf
cmp
mov
inc
mov
or
adc
stos
sub
testb
mov
mov
sub
scas
test
pop
fs
mov
ret
mov
lcall
js
test
xchg
xchg
and
ss
shl
jl
outsl
and
out
lahf
fcomps
xor
sub
sub
jg
ficompl
and
dec
loope
out
stc
push
jno
add
adc
lods
jae
xchg
lret
fucomip
aaa
adc
sub
push
mov
test
out
out
shll
arpl
popf
cmp
add
xchg
push
push
inc
pop
in
mov
cmp
pop
sbb
sbb
outsl
popf
inc
jo
jbe
inc
xor
test
sbb
lahf
sub
pop
and
inc
test
imul
addr16
sub
into
pop
imul
push
in
adc
and
faddl
xchg
inc
adc
mov
lods
outsb
adc
inc
std
test
add
inc
mov
dec
mov
scas
mov
jmp
je
mov
jg
lods
sub
fbld
repz
push
sarl
std
or
xchg
mov
loop
mov
pusha
xor
mov
lock
pop
fisttpll
jae
jg
jg
aam
fwait
cmc
and
pushf
xor
icebp
test
int
pop
stos
push
fstps
or
and
xor
mov
aas
sbb
ljmp
out
call
pushf
clc
movsb
leave
mov
aad
das
lock
pop
mov
sti
mov
push
bound
lods
jnp
shll
lcall
clc
push
push
test
lods
cmc
jne
mov
mov
mov
add
jb
sarb
adc
jp
cli
add
out
jnp
push
fnstcw
std
mov
mov
fidivrs
ja
xchg
cmc
cli
pop
in
sub
aaa
andl
das
cltd
push
lea
xor
movsb
xchg
ret
je
shrb
int3
loope
sti
mov
and
pop
sub
mov
sub
pushf
jge,pn
fidivrs
in
xchg
test
subb
mov
pusha
cs
jb
dec
jmp
jns
pop
mov
add
xchg
inc
hlt
pop
addr16
cmp
or
cmp
jns
add
ret
fs
leave
mov
sub
js
push
cltd
and
xor
imul
jmp
adc
jbe
outsl
icebp
fstpt
lods
mov
and
std
inc
dec
mov
sub
loop
dec
and
pop
cmc
scas
or
int3
sub
dec
dec
jle
ficompl
xchg
xchg
xchg
inc
imul
es
lock
mov
sub
out
insl
frndint
xchg
ret
test
insl
or
dec
bound
add
mov
bts
xor
fisubl
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
nop
adc
mov
push
jbe
jb
js
bound
cld
xor
out
adc
xor
loop
or
ret
dec
loop
or
sbb
les
out
es
jp
mov
test
sbb
sbb
inc
dec
adc
mov
in
adc
pusha
pop
push
movsb
jge
mov
mov
sbb
mov
addl
and
ror
aas
outsb
mov
out
cltd
mov
ja
sub
out
gs
std
pop
add
mov
pusha
pop
cmp
sub
loopne
dec
mov
std
mov
pop
push
push
xchg
iret
test
lea
jo
sub
and
mov
jl
mov
lret
add
mov
testl
mov
negb
or
or
dec
ror
mov
es
xor
mov
inc
iret
mov
out
ret
cmpl
pop
iret
pop
inc
mov
out
ljmp
movsl
loop
sbb
cmpsl
pop
imul
cmpsb
ret
cmc
insb
xor
ds
iret
mov
pop
dec
sub
js
insl
iret
bound
or
fisubs
arpl
jbe
mov
xor
sbb
stc
push
pop
adc
fs
mov
mov
adc
jge
sar
jb
cltd
das
jne
movl
mov
in
ror
fadds
push
push
pop
pop
rolb
insl
sahf
jae
test
or
jne
je
xchg
sahf
xchg
cmc
outsl
add
fisttpll
sub
pop
push
pop
bound
jne
or
movsl
dec
push
std
sub
adc
enter
mov
or
je
cmpsl
adc
push
inc
mov
mov
iret
enter
pop
cmpsl
mov
mov
jnp
cltd
ds
or
outsb
lret
xor
hlt
int
daa
loop
mov
in
int
ja
fucomip
add
loop
fldl
icebp
xor
lods
pop
adc
mov
lret
sub
in
loop
int
sub
push
mov
sbbl
jl
icebp
rcrl
xchg
ja
jbe
xor
xor
mov
inc
or
or
lahf
fstps
shll
mov
adc
cmpsb
outsl
add
les
testb
dec
mov
mov
into
ficompl
adc
mov
jge
addl
aam
cmp
mov
xor
enter
es
jl
jg
xor
arpl
xchg
cmpsw
mov
push
add
inc
fidivl
int3
xchg
mov
enter
mov
stos
enter
outsb
mov
cmpsb
push
bnd
add
mov
or
fs
pop
mov
adc
mov
adc
int3
jle
xor
bound
pcmpgtw
pop
push
addr16
fiadds
adc
aas
rolb
adcl
repz
pop
rcl
mov
jno
daa
pop
pop
push
subb
xor
jle
push
scas
add
sti
mov
mov
sbb
gs
pop
pop
fcomp
xor
pop
dec
mov
and
adc
and
or
sbb
insl
push
jle
in
cmc
cmp
cmc
pop
lret
cmp
mov
outsl
icebp
icebp
subb
stos
lret
xchg
imul
movsl
inc
inc
cltd
or
add
mov
loope
adc
dec
fimuls
inc
mov
or
outsb
iret
mov
icebp
insl
push
lret
cmp
fs
xorl
icebp
and
ficomps
int
xorl
cmpsb
jno
fsubs
jl
aas
std
fcmovu
movsl
ds
push
fcoml
sbb
push
jmp
call
jno
ret
adc
fsts
fwait
pop
mov
cs
add
lret
call
scas
int
mov
int3
lods
loopne
loope
lods
xchg
fmul
pop
or
enter
scas
inc
test
nop
popa
subl
daa
fisttpl
imul
outsb
imul
std
insb
out
and
jno
xor
test
cmp
mov
mov
push
mov
pop
xor
sbb
push
inc
pop
pop
inc
xchg
cli
sarl
iret
iret
jmp
xchg
jnp
test
imul
incb
mov
adc
push
mov
xor
mov
or
add
imul
fcompp
xchg
xchg
divb
xchg
xor
jno
out
pop
jg
jne
enter
adc
xor
std
in
std
pusha
dec
cmp
push
cmp
mov
sub
sbb
lds
jae
stos
mov
add
add
xor
ficoms
pop
sbb
cmp
push
mov
pushw
mov
aas
jno
jle
fbstp
jg
push
mov
mov
jg
xchg
mov
out
fsubl
stos
inc
fs
xor
pop
push
jmp
push
mov
outsb
lea
jecxz
fsts
xchg
xchg
popa
scas
pop
mov
scas
pop
pop
jnp
out
xor
inc
add
or
sbb
jecxz
mov
cmpsl
dec
dec
cld
rclb
jno
pop
in
or
lods
sbbb
mov
push
adc
mov
jmp
fs
fstpt
fisubrs
push
push
negb
outsb
scas
andl
dec
imul
out
mov
stc
into
sbb
leave
decl
mov
mov
pop
imul
mov
push
fldenv
scas
add
mov
test
xor
mov
in
mov
incl
pop
icebp
shl
rclb
xchg
jge
xor
adc
xor
pusha
fdivrl
dec
test
inc
fldcw
pop
mov
cmp
fidivl
bound
mov
fsubs
sbb
andl
loopne
sub
xor
cmp
lock
jecxz
out
sarl
cli
orl
push
mov
push
test
bnd
cmp
shr
rcrb
pop
shlb
push
scas
test
cmpsb
cmp
movsb
lock
pop
leave
call
add
cld
sub
pop
loop
and
push
lock
or
adc
pop
imul
cmp
xchg
or
out
roll
jno
jne
cmp
sbb
ss
pop
mull
jl
subb
adc
pushf
andb
push
orb
pusha
leave
push
scas
and
inc
sub
mov
push
xchg
jp
in
stos
loop
mov
notl
daa
cwtl
mov
jne
add
and
ss
jae
xor
mov
mov
or
aaa
lock
jmp
or
mov
int3
jmp
jbe
jbe
dec
negl
lcall
mov
sti
mov
xchg
lcall
sbb
loope
push
push
fsubrl
outsb
add
sbb
inc
mov
cmp
lods
inc
xchg
ljmp
test
push
fucomip
add
mov
jle
sub
sbb
mov
mov
push
add
or
mov
mul
add
adc
mov
popf
test
imul
jnp
rcll
call
lret
in
cmp
xchg
or
mov
test
jmp
sbb
jg
or
jae
push
jg
sti
cltd
mov
cld
push
insl
mov
leave
inc
leave
mov
aad
mov
push
clc
jecxz
rorb
jne
ss
xor
in
cmpsb
xchg
mov
jmp
fs
ja
arpl
movsl
jno
lcall
ja
mov
enter
xchg
jbe
je
stos
mov
xchg
xchg
addr16
mov
sbb
test
sbbb
mov
dec
pop
popa
jbe
inc
les
gs
shrl
sarb
push
decb
inc
mov
into
pop
sbb
sbb
shlb
xchg
addr16
pop
mov
lret
push
pushf
push
and
inc
fs
inc
push
dec
pop
cmp
iret
push
push
jno
in
clc
lods
adc
mov
inc
adc
out
xchg
mov
mov
adc
sub
out
adc
pop
sahf
jne
jnp
cmc
test
mov
in
fsubrs
aam
mov
push
test
cmp
out
jns
adc
mov
imul
pop
xor
or
bound
icebp
sub
sahf
cmpsb
mov
rcrb
dec
add
adc
pop
push
add
or
xchg
daa
xchg
and
or
out
std
xor
dec
mov
and
cwtl
xor
ss
cs
xchg
or
sub
and
shll
lret
inc
icebp
loopne
and
cmc
ficomps
popa
dec
sbb
inc
sbb
aaa
or
sti
jecxz
cli
loope
sbb
xor
dec
bts
cmp
inc
push
mov
test
fiadds
push
stos
mov
mov
lock
sbb
cmc
aas
lcall
repnz
fwait
or
lds
arpl
add
sub
hlt
inc
mov
data16
mov
sti
inc
push
enter
mov
arpl
push
push
dec
cli
aad
xchg
dec
jae
jmp
cli
sub
mov
lods
lahf
jo
fstps
daa
dec
pop
inc
mov
add
stos
jb
stos
incl
fimuls
cmp
repnz
or
push
jo
mov
adc
jno
and
sbb
add
cltd
aad
lock
ret
dec
add
les
jge
pop
dec
sbb
mov
mov
in
or
mov
mov
pop
js
ljmp
dec
dec
stos
push
stc
xchg
jmp
imul
movsl
sub
cwtl
lret
xchg
gs
or
mov
push
lret
jne
rolb
cmp
mov
fiaddl
filds
int
cmp
xor
clc
push
push
repz
pop
push
inc
in
lcall
xchg
xchg
dec
push
xchg
cmp
insl
pop
mov
subb
cwtl
jae
jo
pop
inc
push
mov
lods
or
pop
hlt
rcll
add
rcrb
sahf
data16
mov
jne
mov
ret
das
push
subl
mov
fisubl
mov
mov
inc
sub
pop
sahf
xor
imulb
xchg
and
fwait
cld
outsb
jmp
dec
xor
dec
scas
daa
mov
in
jno
imul
and
mov
sbb
adc
xchg
mov
mov
ja
js
push
add
insl
int
sbb
test
in
repz
mov
adc
jns
mov
fildll
jae
add
mov
lds
or
mov
into
mov
or
in
add
sub
lahf
fdivs
dec
mov
fcompl
mov
xor
rolb
and
ds
xor
lret
fstps
adc
sub
sbb
cmpsl
movsb
push
jle
mov
ret
ljmp
inc
mov
mov
cmp
jl
push
push
cwtl
inc
fidivrs
dec
aaa
jbe
jge
insb
cli
dec
mov
int3
std
and
loopne
cmpsl
rcl
sbb
xor
jne
cmc
std
push
xor
insl
sahf
cwtl
inc
mov
fs
xchg
lea
jnp
mov
mov
rcr
shll
mov
arpl
jo
mov
test
ds
pop
pop
movsb
pop
jns,pn
addb
lret
into
ss
sub
mov
mov
in
mov
jae
sbb
fsubrs
push
gs
icebp
or
mov
notl
insl
aam
cmp
addr16
ror
mulb
mov
mov
xchg
inc
sub
mov
stos
or
shlb
out
in
test
adc
mov
cmp
jmp
sbb
push
push
cs
jns
psraw
daa
cld
outsb
jle
jbe
xchg
lds
sub
jo
call
dec
faddp
inc
sub
loopne
inc
push
leave
push
jo
ret
in
jae
ss
ss
and
mov
xor
mov
gs
push
lods
or
outsb
mov
dec
xchg
sahf
sbb
mov
lds
push
out
in
lods
adc
adc
cmp
cmp
mov
icebp
push
sub
jl
pop
mov
push
or
rcr
repnz
int
notb
mull
lret
jns
sbb
sub
push
and
jmp
fs
or
insl
and
pop
int3
inc
in
cli
add
adc
pop
ficoml
les
lods
and
adc
xor
xchg
inc
loop
outsl
sbb
cs
out
js
mov
dec
mov
daa
aad
out
hlt
xor
out
in
cli
or
out
sbb
outsl
insb
shll
sti
xchg
xor
add
jns
mov
cltd
mov
cmp
imul
repz
es
cmp
and
sub
mov
jns
inc
or
sbb
loope
test
movq
stos
fldt
mov
fisttpll
dec
fwait
jp
aas
cmp
cmpsb
mov
pop
pop
cmp
push
xorl
outsb
mov
dec
mov
movsl
scas
popf
notl
dec
lock
out
fimuls
mov
inc
sub
mov
out
lods
shrb
mov
aaa
out
shr
das
push
push
test
mov
pop
insb
shrl
stc
rcr
sub
mul
jno
aas
push
pusha
fwait
and
or
adc
movsb
mov
push
je
cmp
popa
xor
fmull
daa
bound
pop
stos
xchg
sub
dec
fsub
mov
stc
out
cltd
test
lcall
pop
xlat
dec
outsb
sbb
jle
pushf
mov
xor
enter
fwait
out
fisubrl
sub
cmc
mov
mov
subb
push
mov
out
sub
pop
pop
das
jnp
lahf
push
and
cmp
jl
sbb
icebp
sub
stos
mov
mov
cwtl
dec
push
xchg
ret
loop
dec
adc
aam
inc
push
sub
pop
stos
insl
arpl
repnz
xlat
inc
data16
mulb
stos
pop
mov
push
inc
cwtl
test
out
aaa
xorl
pop
testl
and
imul
push
leavew
cmp
pop
push
shll
repz
xchg
loope
test
insl
fsub
dec
sahf
inc
dec
xor
je
mov
ljmp
mov
xor
add
adc
leave
inc
sbb
mov
ja
ja
inc
aas
fwait
arpl
push
push
shr
jmp
pop
aas
bound
sbb
adc
je
ljmp
inc
gs
ret
and
fwait
sbb
xchg
mov
push
pop
fwait
dec
jno
xor
hlt
mov
dec
std
xor
jmp
lret
inc
dec
jbe
mov
int3
ror
mov
jle
add
lea
push
and
push
dec
shlb
adc
push
dec
xchg
ss
sub
pop
aad
mov
shl
out
dec
insb
aad
cmp
and
adc
ror
add
repz
iret
mov
cmp
mov
psrld
ds
and
lods
pushf
out
xchg
call
int3
iret
sub
or
jge
psubsw
ds
loopne
nop
subb
cmp
and
or
add
xchg
dec
jmp
dec
mov
shrb
xchg
ja
jo
lret
cmp
nop
mov
and
sbb
addr16
outsb
push
sarl
in
dec
dec
or
sbb
jne
pop
push
imul
das
push
lret
pop
mov
sbb
daa
out
mov
mov
int
arpl
mov
adcb
bnd
push
ret
push
mov
xor
jns
push
fwait
xor
dec
xor
adc
insl
clc
mov
add
pop
jns
mov
pop
pop
xchg
adc
push
sub
arpl
lods
std
mov
jp
xor
mov
hlt
pop
arpl
mov
in
mov
cmp
data16
mov
hlt
test
stc
aaa
cs
out
shll
loope
jno
stos
dec
cmp
and
mov
in
dec
sbb
cs
mov
sub
inc
gs
push
mov
aad
jp
ficoms
enter
popa
sbb
xor
dec
xor
dec
repz
push
jo
adc
sbb
xor
mov
fwait
scas
aam
cmp
imulb
mov
rcrb
xor
pop
dec
jl
ffree
xlat
popa
adc
fdiv
mov
popf
dec
dec
pop
sarb
pop
sahf
out
imul
out
cld
fldenv
mov
stos
scas
or
mov
sbb
ja
xor
and
aad
pushf
out
cwtl
and
inc
das
mov
dec
or
push
loop
pop
push
lock
repz
daa
iret
addb
jb
add
mov
pop
adc
out
dec
test
push
xchg
fstpl
lahf
popa
iret
stos
jmp
fwait
fwait
push
or
sub
sub
imul
jp
imul
and
insb
dec
mov
clc
mov
mov
test
imul
jns
xchg
inc
stc
xor
push
jecxz
insb
mov
leave
adc
and
dec
lret
cmp
test
or
cmp
or
mov
fstpt
fidivrs
push
popf
aas
insb
call
xorb
sbb
sbbl
outsl
pop
rcl
mov
mov
scas
stos
inc
push
nop
sar
mov
inc
sub
in
dec
push
jge
add
mov
cmpsl
jp
movsl
data16
pop
dec
fistpl
pop
call
inc
jae
sbb
ror
sbbb
in
insb
jle
aam
pop
dec
fcoml
lret
add
push
or
add
pop
popf
mov
xor
inc
outsb
jbe
call
sti
scas
mov
jp
sub
mov
mov
and
sub
and
in
out
push
jb
decb
insb
test
scas
adc
sub
aas
faddl
push
push
sarl
cmp
sbb
cmp
cmpsl
inc
popf
add
decl
add
lods
lods
sub
adc
outsb
ds
je
mov
int3
jp
mov
pop
xor
add
xor
scas
mov
clc
jg
std
cld
mov
lods
push
xchg
dec
dec
rcrl
dec
sti
sahf
sbb
push
outsl
ret
inc
push
fwait
dec
xchg
xchg
out
in
aad
ja
pop
jb
orb
repnz
pop
lds
lods
push
adc
mov
pop
add
stos
and
dec
inc
sbb
in
jmp
sub
dec
cmp
hlt
insl
aam
es
in
ljmp
es
stc
in
dec
outsl
or
add
hlt
rcll
movsl
mov
stc
addr16
popa
fdiv
pop
mov
popf
jno
sbb
call
pop
sub
add
mov
sbb
ds
rcll
test
xor
jno
lret
push
sbb
aad
inc
pop
pop
jl
movsl
clc
xchg
pop
sbb
adc
jbe
sbb
ret
lcall
xchg
xor
pop
das
arpl
push
mull
sbb
mov
or
mov
out
scas
or
mov
or
mov
jns
dec
sub
jo
inc
call
sbb
outsb
dec
xchg
scas
xor
xor
ss
jmp
int
bound
js
xchg
xchg
adc
and
jb
sbb
stos
cli
xchg
mov
inc
and
mov
cmpsb
cwtl
cmc
pop
and
lret
sahf
mov
hlt
or
ret
jg
dec
xchg
out
jbe
addr16
xchg
ja
push
insl
in
dec
mov
shrb
sbb
cs
pop
xchg
cltd
sbb
icebp
and
xchg
xchg
sbb
push
iret
sahf
xor
rorl
dec
dec
jmp
xchg
push
fcoms
lds
adc
stos
pop
inc
inc
push
inc
mov
stos
add
inc
std
js
inc
je
aaa
arpl
lods
bound
mov
das
xchg
cmp
mov
cmp
and
mov
sar
lods
pop
in
imul
and
mov
insb
lret
and
mov
jmp
jne
dec
push
fistl
or
add
push
mov
mov
out
and
popf
out
outsl
push
and
daa
jmp
orl
outsl
in
add
adc
cld
test
stos
es
xchg
push
fwait
pop
push
xchg
mov
test
push
adc
test
in
pop
stos
jbe
push
jnp
sbb
xchg
daa
inc
xchg
cmp
jae
sub
add
and
lret
sub
pop
mov
outsl
rorl
or
dec
xchg
std
cwtl
andb
sub
mov
pop
jno
cmp
fdiv
push
push
pop
jns
rcl
mov
pushf
call
dec
mov
push
daa
pop
cmp
idivl
mov
lods
loop
outsb
lds
inc
popf
inc
stc
mov
and
scas
and
add
ror
icebp
mov
lea
sub
push
push
imul
ret
fwait
xor
fistl
or
int
or
out
jnp
jecxz
outsl
clc
dec
jb
aaa
adc
cmp
push
jle
mulb
mov
int
push
push
movsb
mov
shlb
mov
push
cmp
pushf
jecxz
push
pop
or
dec
jge
cwtl
mov
xor
jmp
mov
mov
movsb
and
int3
sub
xor
scas
jns
mov
xor
jns
cmpsb
call
out
cmp
jle
sub
pop
inc
fiaddl
mov
pop
in
xor
inc
inc
orb
ja
sub
loopne
fists
xchg
mov
fs
mov
movsl
test
cmp
xchg
push
jno
mov
addr16
mov
adc
in
gs
sub
dec
lea
push
mov
fcmove
cltd
or
filds
lcall
jns
xlat
call
sarl
repz
int3
sub
mov
and
mov
cmpsl
lock
jnp
mov
push
les
mov
sbb
dec
and
ret
int3
pop
mov
pop
lret
push
push
in
pop
mov
xor
xchg
shll
xchg
jo
xlat
mov
into
sbb
cmp
cltd
mov
out
add
mull
nop
pop
jle
sbb
subb
inc
adc
bound
outsl
imul
mov
jne
xchg
sub
mulb
in
iret
mov
aas
stos
xor
mov
xchg
js
xchg
mov
xchg
or
dec
mov
push
xor
loope
fdivrs
sahf
test
imul
out
ss
mov
jp
jo
jmp
push
mov
cmpsb
rcl
inc
into
jns
mov
adc
fstl
sbb
lods
sbb
mov
loope
push
fstps
mov
nop
xchg
enter
adc
rorb
mov
repnz
cltd
push
into
ds
out
out
out
dec
mov
aas
inc
les
or
lods
stos
dec
pop
aam
add
xchg
das
inc
addl
push
and
xchg
mov
ja
push
push
gs
lds
dec
xchg
xchg
and
mov
sub
cmp
jmp
in
push
orl
sbb
les
sbb
enter
out
les
pop
ds
mulb
ja
sbb
or
xchg
mov
in
add
repz
sub
fisttpll
sub
out
jl
maskmovq
divl
mov
rcrb
nop
les
cmp
and
loope
xchg
out
lcall
jb
scas
aam
add
es
xorb
pop
cli
test
xor
or
es
lds
adc
pop
add
fnsave
sub
pop
pop
adc
insb
dec
jno
arpl
stos
add
addr16
bound
sbb
and
sub
stc
inc
int3
mov
int3
and
sub
sbb
cmp
sub
dec
mov
jno
aaa
jne
cmp
je
and
jo
and
push
sub
sub
push
jne
shrb
ja
mov
movsb
pop
pop
hlt
lret
or
adc
add
inc
movsb
or
punpckhwd
add
push
lret
daa
andps
or
seto
lret
mov
sub
cmp
sbb
fbstp
jnp
xchg
xchg
jbe
adc
cmp
cmc
cs
je
jne
aad
pop
arpl
inc
daa
popa
pop
pop
dec
rolb
shrb
mov
push
cmp
rolb
and
outsb
mov
mov
sbb
rcr
imul
lcall
push
lods
scas
fwait
mov
or
dec
scas
sub
jns
dec
mov
mov
dec
mov
xor
ds
lock
xchg
mov
int
lods
test
and
fadds
fisttpll
jl
push
or
mov
movsb
clc
and
loopne
ret
mov
and
shll
idiv
jae
pusha
data16
repnz
and
mov
xchg
mov
sarw
pushf
sbb
aaa
subb
aas
aad
decl
mov
popl
iret
xchg
aaa
fiaddl
pop
bound
in
xor
lea
out
ud0
mov
pop
stos
xlat
inc
fcompl
sub
jle
out
fmull
lods
mov
lret
mull
test
jne
sbb
mov
sub
mov
jne
add
rcll
in
xchg
cmp
add
cli
add
sahf
negl
sbbb
adc
nop
scas
lret
sub
sbb
xchg
dec
lcall
ret
leave
orb
mov
sbb
pop
rorl
mov
dec
mov
push
pop
fcmovnb
pop
scas
cwtl
sbb
repnz
stos
ffreep
das
jle
inc
leave
and
mov
xchg
pop
jne
out
call
sbb
jbe
and
xchg
arpl
lret
arpl
mov
inc
jmp
sub
stos
dec
stc
pop
out
shrb
in
adc
push
cltd
test
xor
sbb
xchg
fisubrl
cltd
lret
nop
iret
addl
add
lret
mov
and
xrelease
mov
or
jge
pop
inc
push
sub
sub
pop
jnp
ficoml
addl
outsb
insb
ss
insb
je
push
shl
orl
add
repz
cli
gs
fstpl
and
sbb
je
loope
lds
into
mov
in
inc
jne
mov
xchg
add
mov
xlat
mov
push
mov
mov
ret
jmp
mov
mov
scas
loope
mov
xchg
sbb
inc
xchg
sub
jg
add
lret
lock
mov
mov
pop
and
insb
shl
cmp
mov
mov
aad
add
push
pop
mov
in
lahf
cmp
and
push
xchg
push
sahf
insl
jae
xchg
pop
and
jo
es
hlt
js
push
jbe,pn
jb
repnz
aad
pop
pop
sbb
and
cmpsb
shlb
xchg
jl
mov
push
add
es
ficoms
adc
mov
jmp
loope
into
scas
stos
or
mov
loopne
loopne
jns
lods
jnp
out
push
lahf
mov
jno
movsl
xlat
adc
stc
lahf
jb
adc
adcl
test
sbbl
rolb
cwtl
lea
sbb
mov
sbb
fmuls
ds
jno
xor
leave
push
popf
sbb
iret
pusha
push
mov
dec
add
mov
insl
shl
cmp
imul
movsl
mov
cmp
loope
loopne
sub
mov
movsb
sub
sarl
xchg
sub
xor
fisttps
insb
cmpsb
cwtl
add
xor
std
xchg
andb
ret
xor
mov
call
stos
push
sahf
mov
mov
xchg
mov
fldcw
push
clc
setae
adc
das
xchg
pop
inc
adc
aaa
fisttpl
sub
mov
add
js
leave
int3
imul
add
lods
mov
ret
cltd
mov
push
mov
xor
and
ds
call
mov
pop
push
int
fsubl
popa
roll
das
popf
lcall
roll
das
pop
pop
pop
out
fwait
int
and
xor
xor
and
and
insb
push
inc
imul
loopne
lret
cs
outsb
inc
mov
scas
push
fdivrs
in
fst
inc
ljmp
int
jo
jmp
rcrl
out
or
xor
sbb
xchg
icebp
push
pop
xchg
dec
jl
mov
push
jbe
jne
ret
mov
fwait
pop
repnz
cmp
test
fcmovne
decl
ret
cmp
jns
call
rcll
popa
push
xchg
in
adc
pop
cld
test
pop
sbb
and
js
mov
jmp
frstor
adc
add
xor
xchg
sbb
xor
adc
cmp
pop
pop
cmp
pop
mov
pop
in
sbb
ja
pop
std
outsb
sub
loopne
aad
imul
leave
iret
test
insb
pop
clc
mov
cmpsb
cmpsb
fbstp
insl
por
cmp
fidivrs
pop
loopne
sub
jns
in
cmp
dec
es
push
sbb
push
ret
int
rcrb
dec
mov
lock
pop
or
test
add
bswap
sarb
sbb
sahf
lret
mov
cli
sti
rorb
mov
cmp
jmp
icebp
icebp
test
sbb
lods
repz
imul
mov
xchg
jmp
push
bound
hlt
icebp
xchg
int
cmp
jae
xlat
outsl
lods
addr16
aas
cmp
lret
or
iret
and
push
or
int3
xor
shll
cmp
jns
fsubrl
fwait
xor
or
xchg
pop
push
out
or
into
mov
inc
mov
rcl
dec
outsl
or
ret
sahf
lods
int
mov
sbb
stos
cltd
hlt
sub
sahf
inc
cmp
daa
roll
aaa
cmc
stos
push
adc
dec
fucomip
push
mov
or
mov
scas
inc
dec
dec
or
push
mov
sub
les
fcoml
int3
add
dec
lahf
aam
cld
adc
loopne
xchg
aad
shlb
and
mov
fmull
or
inc
xor
sbb
pop
aas
fs
ljmp
out
pushf
add
fcomps
dec
push
jb
addr16
cltd
sub
fcmovu
rcrl
sub
dec
dec
shll
dec
dec
cmpsb
outsl
xchg
insl
out
ret
jb
cltd
pop
xlat
mov
int
dec
sbb
jno
sbb
daa
and
or
and
mov
sub
ljmpw
add
adc
or
fucom
cmc
outsl
xchg
loop
push
in
sbb
or
lahf
test
testb
fdivrs
xchg
sbb
and
sub
and
mov
mov
test
inc
ficompl
mov
outsl
xlat
xor
outsb
jp
jg
lret
cmp
and
xchg
lds
cli
ljmp
out
ds
rcrl
push
fs
pushf
push
aad
sub
cmpsb
push
jnp
cmpb
jmp
inc
fisttpll
xchg
push
aam
jl
insl
pop
pop
rolb
fistps
or
popf
sub
sbb
jbe
pop
fwait
aas
aas
cmp
into
cltd
leave
leave
jecxz
sarb
sub
cli
imulb
lds
jns
fnstenv
ljmp
out
lret
int3
test
add
sbb
cmp
and
xlat
imul
arpl
leave
jmp
int3
popf
out
push
scas
test
out
xor
xchg
mov
cmpsb
hlt
mov
mov
push
addr16
and
aaa
ror
xor
xor
negb
pop
push
jno
negb
add
stos
and
adc
fadd
roll
mov
mov
lcall
ret
repz
in
dec
ret
out
aad
add
mov
es
leave
adcl
add
push
scas
aaa
mov
rcrb
push
imull
jne
mov
sar
sahf
cmp
cwtl
sub
jns
shlb
enter
loope
sarl
cmp
loope
sub
sbb
aad
add
popa
add
scas
and
lds
ret
mov
out
nop
sbb
inc
jne
cli
out
add
popf
jae
sbb
dec
and
add
in
in
jo
cmp
scas
gs
dec
dec
cld
icebp
xor
push
mov
mov
jbe
int
push
pusha
jo
mov
subb
jne
lods
dec
dec
sbb
decb
mov
sub
sub
cs
repnz
pop
cmp
lods
stos
adc
idivb
pusha
sahf
lret
jle
jmp
mov
leave
mov
in
inc
pop
stos
stos
repnz
push
dec
xchg
dec
cmc
sbb
fmul
test
orb
dec
adc
mov
xor
imul
cli
int
push
sub
pop
push
je
daa
lods
mov
aad
divb
mov
sub
push
inc
fistpll
inc
into
sub
fldl
movsl
loope
hlt
int
sarl
in
stc
add
js
nop
push
fstps
push
cs
inc
mov
push
neg
or
mov
mov
imulb
add
add
pmaddwd
cmpxchg
xor
mov
add
add
add
inc
xchg
pusha
add
sub
in
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
mov
add
mov
