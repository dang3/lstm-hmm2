sbb
add
mov
dec
test
les
dec
unpcklps
add
mov
stos
xor
jnp
sarb
aaa
mov
lock
or
xor
xor
add
pushf
fs
ficomps
mov
adc
imul
cmp
adc
adc
mov
xchg
cltd
lods
fnstenv
out
jns
and
pop
and
and
movsl
and
insb
pop
call
stos
sarb
push
inc
inc
cli
stos
addr16
scas
mov
scas
call
push
pop
lret
lret
stos
adc
sbb
sub
lcall
adc
int
lock
mov
mov
mov
inc
cmp
sub
mov
xchg
jge
mov
push
mov
out
sahf
arpl
lods
pusha
xchg
cltd
adc
ljmp
stos
dec
cmp
fucomip
and
ljmp
pop
add
cmp
jne
xor
lds
lret
popf
popa
lods
adc
in
push
popa
xor
fistpll
push
outsb
inc
sub
jae
jo
or
testb
popa
mov
clc
int3
ds
dec
stos
out
inc
cmc
or
push
dec
cmp
ja
xor
lods
xchg
pop
sbb
outsl
imul
jnp
loopne
and
push
pop
repz
rolb
fwait
push
jmp
sbb
jns
cmc
jo
pushf
mov
repnz
loope
shll
sti
fs
loopne
std
sub
xchg
push
popf
lds
cmp
fisubrl
push
sub
push
mov
adc
push
aas
mov
xchg
xchg
addr16
rolb
stc
fisubl
sbb
ret
cmp
fdivs
scas
or
adc
loop
out
enter
dec
adc
mov
jno
outsb
add
std
and
lret
cmp
inc
gs
sbb
test
stos
push
jge
add
test
cld
xchg
outsl
lock
leave
lock
loope
lds
cmc
ljmp
std
xchg
mov
movsb
ret
cmp
cmp
nop
pop
icebp
sbb
add
sbb
cld
xchg
adc
xchg
sub
cwtl
in
add
pushf
rcrb
ss
popf
push
adc
cli
jg
lea
stos
xor
insl
shll
pushf
insb
pop
jecxz
sub
push
lods
rcr
mov
mov
ret
arpl
pop
repz
ss
sti
outsb
inc
xor
pop
aam
fldl
mov
jge
sub
cli
mov
gs
insb
sbb
mulb
push
push
fadds
fwait
rcr
jmp
push
push
jmp
cmp
sub
outsl
sub
mov
enter
adc
frstor
ret
cmpsl
xchg
shrb
hlt
xor
scas
inc
test
push
dec
jno
pop
xchg
roll
gs
push
int
mov
dec
xchg
test
mov
sub
int
or
hlt
mov
pop
js
sbb
je
mov
and
setle
sub
lock
popf
rcrb
jg
sbb
out
lcall
push
pusha
mov
aam
xchg
adc
arpl
xchg
pop
mov
mov
sahf
pushf
mov
addb
xchg
adc
xor
cltd
out
cmp
xor
inc
adc
movsb
dec
inc
out
push
and
inc
jp
mov
add
push
enter
sbb
inc
pop
cmpl
mov
mov
in
jmp
mov
lret
adc
push
cltd
cs
sti
xchg
inc
and
fsubl
xor
mulb
mov
ret
jnp
shll
fwait
xor
incb
add
push
movsl
popa
in
lds
fs
and
jg
pop
out
or
add
xlat
in
das
rcrl
cmpsb
xlat
into
mov
lods
dec
dec
pop
or
push
mov
mov
dec
fcmovne
sub
xor
inc
fdivs
add
loope
dec
dec
cmp
jecxz
xchg
mov
add
arpl
imul
mov
pop
pop
pop
jnp
ds
jnp
and
inc
das
stc
cmp
xchg
jecxz
lret
cs
or
out
pop
mov
jb
inc
cmp
inc
insb
mov
sub
mov
mov
jno
ljmp
adcl
pop
adc
xchg
roll
jns
adc
mov
lret
gs
bound
mov
testl
nop
cmpsb
fs
xor
mov
in
pop
sub
jo
fldl
clc
mov
cmp
ficoml
sbb
jnp
shr
test
les
jg
dec
fnstsw
cmp
xor
sahf
loop
pushf
sub
inc
adc
mov
and
or
es
sbb
fsubl
or
cmp
cmp
repnz
test
enter
dec
std
sti
gs
xor
jl
popf
call
aaa
roll
ss
imull
adc
push
cmpsb
xchg
cli
pop
fsubrl
movsb
out
lds
jmp
inc
enter
and
adc
lea
xchg
push
or
dec
ret
mov
sub
cmp
xchg
idivl
insb
jo
sub
push
roll
lcall
fstpt
movsb
jbe
pusha
cmpsl
push
sbb
xor
adc
add
xor
push
roll
lea
sbb
mov
pop
sbb
pop
pop
jl
add
pop
cld
rorb
push
mov
xchg
cmp
jge
cmp
dec
out
mov
js
mov
inc
and
jecxz
gs
pushf
das
pop
dec
jae
shl
sub
ffree
ljmp
xor
adc
std
mov
mov
xchg
inc
adc
divl
xchg
push
mov
sub
lahf
sbbb
cmp
push
ljmp
stos
or
xchg
mov
mov
push
clc
or
rorl
xor
outsb
and
sbb
push
les
sub
sub
xor
jecxz
bound
movsb
and
notl
leave
jno
adc
jl
xchg
dec
icebp
xchg
sti
xchg
daa
push
icebp
adcl
mov
sub
lock
jnp
pop
jmp
inc
push
push
pusha
adc
mov
fidivl
dec
pop
fs
nop
or
sahf
int3
and
ret
jg
dec
cmp
shll
pop
inc
rcl
add
lock
stc
mov
cmp
icebp
pop
sub
push
cwtl
adc
and
sbb
jne
adc
jmp
and
push
mov
std
and
lods
ljmp
cmp
jmp
pushf
insl
push
adc
js
push
and
lret
xchg
ds
arpl
xor
and
xchg
dec
lcall
or
popa
cld
add
insl
dec
outsb
jp
mov
lods
inc
lods
pop
in
loopne
pop
add
cmp
into
fwait
pushf
push
jl
fdivrl
lcall
mov
or
jo
xor
popf
das
das
addr16
mov
inc
xor
bound
arpl
jmp
adc
pop
ja
add
ret
mov
and
mov
xor
testb
jmp
fwait
incb
je
lret
inc
scas
push
aas
into
andb
ret
popa
leave
and
sbb
mov
pop
ret
test
into
mov
dec
in
push
roll
dec
mov
rclb
stc
push
jns
sub
cld
fildll
push
sbb
mov
lcall
js
lret
shll
lahf
in
pop
adc
clc
xor
test
cld
or
scas
add
xchg
or
fdivs
js
cmpsl
dec
jno
push
ret
jecxz
lret
pop
movsl
dec
sub
pop
cmpl
nop
shll
push
push
sti
out
fildl
pop
fildll
jge
fmuls
mov
jg
or
and
xor
in
cmc
movsb
or
mov
in
das
xorb
add
ficoml
pop
or
subl
mov
pusha
mov
add
outsl
lock
adc
mov
mov
std
mov
rclb
xchg
inc
xlat
sti
mov
dec
push
jae
pop
mov
data16
fldt
fnstcw
dec
rcrb
int3
hlt
mov
mov
lahf
inc
loop
dec
leave
mov
xchg
lods
test
xchg
popa
fadd
push
insb
insl
lods
sbb
xor
outsb
aad
or
and
or
dec
femms
or
nop
inc
sbb
mov
push
mov
xor
filds
pop
hlt
out
fistl
adc
push
in
fsub
sarl
pop
jecxz
sbb
push
out
mov
lds
or
add
mov
rorb
pushl
add
aam
or
fs
in
sub
test
fcomip
mov
push
subb
dec
push
and
adc
adc
push
push
sbb
push
cmp
push
loop
cli
xchg
push
mov
sbb
jp
mov
add
ror
pop
jnp
loopne
lock
push
popa
hlt
xlat
mov
mov
inc
and
arpl
mov
push
sub
lea
adcl
cltd
ja
loopne
outsb
bound
pop
jo
test
inc
mov
lret
movsl
mov
mov
lea
mov
jno
cmp
dec
insl
xchg
and
mov
sub
push
mov
dec
outsl
jae
cli
mov
pop
subl
sbb
roll
cmp
jne
mov
in
xchg
xor
daa
lock
ss
pop
ljmp
xor
ficompl
arpl
jo
ja
dec
push
testl
pop
jg
rorl
dec
adc
data16
movsb
add
jns
sub
int3
sub
xorb
adc
xor
movsl
jo
std
jae
mov
aam
cmp
jbe
dec
clc
in
adc
rcr
sbb
cmp
push
add
jg
fwait
out
sub
in
ja
leave
pop
jecxz
xlat
jns
cmp
bound
insl
xlat
sub
subl
push
out
movsb
pop
lods
je
cmpsl
xor
jle
loop
xor
outsl
stos
xor
or
mov
cmp
dec
out
adc
ljmp
lock
adc
ret
fisubrs
ret
hlt
cmp
inc
xor
inc
jne
push
fistpll
movsl
adcl
lds
xor
movsl
mov
xchg
or
outsl
insb
testb
outsl
stc
cmp
cmp
xchg
std
or
inc
hlt
iret
mov
mov
lods
add
mov
push
aas
inc
int3
ljmp
scas
icebp
jp
jmp
or
stos
mov
adc
loope
sub
adc
fdivrl
or
ret
jo
div
jb
call
xor
fidivl
std
test
xchg
mov
loopne
popa
push
pop
cmp
xor
jecxz
stos
jle,pn
out
dec
push
mov
shl
pop
filds
pop
sub
rorl
sbb
push
or
stos
xor
inc
jmp
lret
mov
popf
xchg
dec
fdiv
pop
aaa
xor
pop
outsl
out
fistpl
lods
stc
nop
adc
mov
loopne
sub
mov
cmpsl
mov
cmpb
adc
loopne
fisubrl
in
sbb
pop
pop
orb
mov
mov
mov
jns
mov
dec
fimull
mov
mov
gs
mov
mov
cmp
stos
jl
into
dec
push
mov
cmp
dec
test
mov
or
cld
xchg
shl
jecxz
out
push
cld
call
xchg
add
jne
push
aam
mov
adc
aam
jp
in
mov
je
sahf
cmp
adc
in
mov
or
jl
iret
lahf
lea
stos
aam
mov
cld
mov
pushf
fdivl
hlt
stc
push
es
cltd
repnz
jbe
js
cmp
insb
xchg
add
std
sti
push
mov
mov
and
gs
or
into
lock
dec
aam
icebp
lock
arpl
xchg
pop
mov
mov
sbb
jo
mov
push
scas
enter
push
mov
nop
jl
lds
lock
xor
jl
inc
nop
and
mov
shll
std
aas
push
rcrl
add
ja
push
mov
cmc
xor
imul
les
and
shlb
arpl
pushf
mov
das
push
push
jnp
rclb
fs
mov
mov
pusha
jg
imul
push
test
stos
loope
bnd
imul
pop
out
lcall
popa
rep
jle
jmp
dec
jp
cmp
jae
mov
adc
daa
jns
das
or
pushf
xchg
popa
outsb
pop
pop
outsl
cli
or
add
xor
jle
test
lea
inc
and
int3
add
fists
mov
push
in
cltd
cmp
les
mov
mov
push
fildl
in
mov
mov
pop
fwait
icebp
and
mov
dec
jnp
xchg
xchg
loope
mov
les
rcll
push
ss
jecxz
add
lret
jb
dec
js
out
js
int3
repz
test
iret
push
mov
sbb
mov
int
mov
test
push
or
mov
je
push
jge
or
arpl
and
or
test
pop
out
sub
sbb
bound
dec
test
xor
or
push
push
mov
pop
stos
mov
ljmp
sub
sbb
xor
jg
adc
cmp
mov
fs
mov
sbb
cmpsl
xchg
xor
mov
loope
lods
or
push
clc
add
addr16
ds
sahf
out
xchg
mov
pop
ds
push
test
mov
ret
mov
aad
jle
push
das
daa
cmp
stos
mov
scas
and
in
and
push
mov
fcmovnb
int
add
jnp
and
or
cmpsl
mov
stc
pop
out
pop
outsl
xchg
inc
test
sub
adc
mov
push
repnz
insl
fdivrl
std
icebp
sub
jp
push
in
addb
pop
xchg
xor
lret
fs
jg
pusha
lods
cmc
push
or
jno
loop
lods
pop
daa
rclb
push
sbb
mov
xor
push
cmp
or
push
push
shrl
fdivr
testb
scas
shl
sbbb
mov
lods
jg
mov
pop
adc
stos
es
loope
loopne
xor
orb
or
sbb
adc
or
mov
popf
mov
mov
lods
in
ja
mov
mov
xor
out
pop
jmp
sub
push
nop
push
add
lock
push
or
push
jle
dec
mov
stos
mov
mov
lcall
iret
js
sub
cmpsb
inc
pop
mov
fmul
jns
mov
push
mov
neg
mov
test
jns
aad
inc
pop
and
clc
ret
or
xor
xchg
test
jle
xor
fcoms
rclb
and
and
add
xchg
add
rcr
push
jbe
push
pop
int3
lcall
mov
popf
mov
sarl
stos
jle
fdivs
sahf
lcall
insl
enter
or
dec
mov
scas
dec
xchg
lds
mov
cmp
mov
and
sbb
inc
jg
stc
sbb
adc
adc
fwait
lcall
xchg
jae
jl
push
pop
addl
cmp
xor
xchg
jbe
dec
test
in
loope
adc
inc
cs
and
dec
test
fidivl
pushf
or
sbb
mull
mov
cmp
lea
das
push
inc
mov
mov
push
rcll
xchg
loopne
ret
dec
mov
cmpb
test
mov
stos
pop
mov
xor
insl
test
add
xchg
push
xchg
add
mov
add
mov
sti
out
or
call
push
push
pmullw
insl
dec
notb
fwait
sbb
fildl
mov
and
adc
ffreep
leave
cmp
iret
aad
repnz
je
pop
ffreep
or
push
push
mov
cmp
mov
mov
mov
sub
dec
sbbb
sbb
mov
xor
sub
and
in
pop
xchg
scas
fmull
and
fmull
or
inc
jl
cmc
jae
fildll
ret
xchg
sbb
inc
or
lock
xor
xor
aaa
xchg
aad
int
les
hlt
shll
or
out
inc
icebp
sub
aas
inc
aad
mov
pop
push
test
xchg
jl
out
add
lret
int3
xor
es
dec
dec
add
flds
leave
leave
icebp
lods
sbb
adc
add
test
scas
aas
mov
int
xor
test
js
push
mov
pop
pop
jle
or
ror
jl
inc
test
ljmp
sbb
imul
jecxz
inc
lcall
push
in
outsb
movsb
jno
mov
sub
or
fnstenv
xlat
sub
pop
or
sbb
bound
push
or
out
inc
xchg
das
ss
fwait
mov
mov
lods
bound
rorb
push
push
into
xchg
in
fwait
mov
xchg
mov
lods
test
and
out
xchg
xor
and
mov
jge
or
adc
adc
shll
aad
xor
outsl
cmp
adc
inc
xlat
xorb
mov
fdivl
mov
and
sbb
sbb
mov
out
icebp
test
test
mov
mov
sti
inc
inc
call
loope
scas
push
in
popa
lods
sub
push
cmp
cltd
outsl
sub
out
shrb
push
stc
add
repnz
push
aam
outsb
imul
mov
lock
xor
push
inc
inc
hlt
roll
inc
jo
movsl
ja
jg
and
cli
je
adc
mov
jp
dec
pop
xchg
xchg
repz
jp
xchg
xor
cmp
shll
xor
dec
cmc
nop
mov
cld
scas
and
ud2
imul
outsb
sbb
ret
xor
les
or
popa
in
ret
xchg
aam
stc
mov
daa
cmp
push
jmp
cmc
inc
ja
into
jmp
lock
mov
and
cld
xchg
dec
or
adc
or
mov
divl
adc
push
xorl
dec
insl
mov
mov
inc
cmp
call
add
jo
mov
xor
mov
ret
jo
dec
aam
or
ja
pusha
cmp
pop
scas
push
xor
sub
cmp
push
sbb
mov
sub
stos
xchg
jns
stos
mov
adcl
aas
nop
call
mov
adcl
lret
cmpsl
push
mov
test
push
sarb
jecxz
dec
int
dec
repz
cmp
cmp
roll
loop
jbe
cld
ret
or
jg
scas
xchg
jae
add
ja
rcll
repz
add
or
movsb
int3
std
add
lcall
jb
enter
jae
mov
cmp
dec
cli
lcall
cmp
xchg
bound
xchg
mov
add
sub
pop
pop
sbb
sbb
push
sbb
std
add
or
sub
clc
sub
push
xchg
das
push
sub
xchg
std
mov
push
pusha
xchg
stc
mov
adc
inc
es
fwait
cmp
adcb
cmp
xchg
out
lock
xchg
pop
jne
dec
std
adcb
lods
ret
jmp
mov
cld
dec
int3
lds
fadds
lret
ja
outsl
shlb
pop
sub
inc
fsubl
ret
sub
cld
jl
repz
push
iret
inc
sub
roll
inc
andl
lods
dec
fcompl
push
in
jo
cmp
mov
mov
rclb
lock
pop
outsb
call
lret
cmp
xchg
sub
mov
sarl
hlt
popf
in
inc
addl
fimuls
jg
or
pop
push
orl
pop
mov
cmpl
and
or
pushf
and
nop
xchg
adc
mov
mov
mov
xchg
je
adc
fs
push
outsb
and
inc
xor
test
mull
insl
sbb
mov
loop
xchg
cmovge
jb
xor
pop
incb
scas
xor
mov
imul
data16
mov
add
loope
add
inc
cmpsl
call
lds
ljmp
jmp
ljmp
sub
vxorps
dec
xlat
or
push
movsb
addl
scas
mov
mov
dec
es
scas
iret
loop
jp
xchg
ljmp
add
jns
or
xchg
jo
lds
inc
lods
cli
fbstp
jnp
int3
cmp
mov
and
scas
sub
jge
inc
pop
inc
add
ret
fimuls
cmp
adc
pushl
andl
mov
decl
pop
mov
inc
dec
push
push
add
adc
mov
imul
xchg
sbb
pop
jns
int3
adc
jge
movsb
pop
mov
mov
test
mov
outsb
mov
sub
pop
mov
push
or
inc
andl
aas
pop
jb
loopne
adc
scas
mov
ret
clc
sub
push
arpl
or
cmp
pop
in
aaa
imul
arpl
loop
pop
cwtl
or
ret
mov
out
lea
and
movsb
mov
jge
adc
dec
or
test
cwtl
movzwl
jg
push
ja
imul
jne
mov
cmp
movsl
clc
ljmp
aaa
hlt
rol
into
pop
inc
loop
xchg
pusha
mov
fdivl
lret
test
shrb
add
outsb
repnz
int
xor
inc
push
xor
div
or
push
mov
sbb
inc
inc
roll
mov
xlat
inc
shll
hlt
mov
int3
mov
lcall
xchg
inc
or
sub
int3
movsb
lods
pop
jno
sub
adc
cmpl
cmp
xchg
in
stos
inc
push
jb
xchg
inc
lea
lods
jne
mov
pop
faddl
or
outsl
xor
jmp
clc
inc
iret
addr16
lahf
or
xlat
inc
pusha
mov
sbb
push
and
mov
mov
in
stos
cmc
sbb
sbb
push
js
cmp
cmp
test
movsb
mov
and
sahf
rorl
mov
hlt
leave
adc
xchg
fucom
inc
add
xchg
xor
ds
outsb
fmulp
dec
loope
leave
bnd
dec
lock
push
jge
dec
jecxz
iret
test
xor
stos
pop
dec
stc
repnz
mov
sar
divb
jns
pop
mov
push
mov
and
jecxz
loop
sbb
inc
xor
xor
jl
idivl
add
xchg
lahf
hlt
cmp
jecxz
repnz
dec
adc
outsl
cltd
dec
add
mov
je
pusha
inc
push
daa
test
icebp
xor
cmp
mov
fisubs
pop
cmp
mov
imul
xchg
out
insl
and
sub
ljmp
dec
push
and
xchg
push
dec
addr16
sahf
insb
movsb
sub
jle
shrb
mov
inc
aam
les
push
xor
xor
mov
not
mov
cmpb
ljmp
xchg
xor
xchg
lret
movsb
cld
das
push
push
and
rolb
jg
mov
std
lock
es
sti
movsl
or
sbb
mov
lea
outsb
imul
shrb
jecxz
in
pop
cs
fnstcw
cld
jg
roll
xor
outsb
jo
iret
jp
or
icebp
add
jae
and
pop
je
das
daa
roll
ss
arpl
daa
int
out
sbb
or
xor
lea
mov
inc
int3
cwtl
push
jle
sbb
rcll
test
xor
aaa
out
das
inc
leave
mov
into
mov
jo
dec
repnz
mov
imul
mov
or
jne
jg
dec
push
enter
adc
and
mov
leave
dec
cmp
adc
movsl
mov
clc
pop
mov
jae
mov
push
push
xchg
cltd
and
stc
mov
inc
jle
rolb
xchg
push
xchg
add
mov
sti
add
or
enter
out
and
packssdw
icebp
es
pop
jno
lods
inc
dec
sub
out
mov
lods
ret
jp
mov
lret
add
inc
push
mov
arpl
loop
cmp
add
aas
mov
fidivl
stos
mov
dec
dec
repz
bnd
sub
dec
cmp
and
push
jbe
mov
lret
lret
cmp
adc
out
pop
jo
mov
rolb
push
test
leave
fdivp
sub
lret
jge
bound
loop
jno
lds
jo
insb
cmpsb
mov
hlt
push
push
loop
enter
add
fbstp
leave
push
sub
int3
scas
inc
ljmp
mov
inc
push
fsubl
jnp
and
aaa
int
outsb
push
inc
add
mov
or
push
xor
mov
xchg
adc
pop
loop
cmpsl
mov
andl
out
pusha
sub
imul
icebp
lahf
xchg
mov
or
push
mov
xor
adc
xchg
dec
lods
lods
jo
sub
adc
pop
fwait
jge
in
pop
adc
idiv
hlt
or
xchg
jl
icebp
rcrl
hlt
xor
pop
in
sbb
sub
cmc
pop
ljmp
in
pop
push
sti
daa
stos
ljmp
lea
xchg
xor
xchg
sub
xlat
insb
jmp
or
out
sub
js
flds
push
pop
sbb
mov
add
xor
fcomps
mov
and
mov
or
xchg
mov
or
jnp
push
mov
sub
js
pop
push
or
adc
sub
cmp
gs
add
push
addr16
aas
loop
aas
mov
int3
cmp
jle
bound
dec
xor
xor
ret
mov
int3
or
or
cmp
and
sahf
xor
fwait
adc
js
push
xor
jae
pushf
hlt
xor
stos
mov
movsb
cld
lods
cs
scas
stc
and
mov
adc
sbb
fnstsw
lods
adcb
cmp
aaa
add
lret
push
stc
mov
dec
inc
aas
mov
xor
jns
xchg
jge
sbb
fwait
push
int3
sbb
jns
int
jb
in
mov
sub
shll
dec
xchg
cmp
add
push
int3
mov
sub
jbe
cmp
jae
icebp
cmpsb
xchg
mov
loope
jl
andl
mov
mov
jecxz
rorb
mov
mov
rcll
push
lods
test
ljmp
in
jnp
test
and
sub
sbb
pop
jne
mov
gs
mov
sub
pop
jl
das
dec
rol
stc
inc
inc
lock
adc
les
mov
adc
add
mov
mov
sub
lock
fbld
adc
and
aaa
add
cmpsb
or
mov
into
ds
mov
xor
pusha
mov
add
enter
jmp
movsw
jns
dec
and
cmpsb
stc
xor
inc
adc
or
pop
popf
in
call
push
sub
push
xor
in
cmp
test
xchg
adc
lcall
mov
xor
mov
movsb
lret
mov
sub
mov
mov
inc
sbb
les
or
jle
in
cs
shll
rcrb
xchg
cmp
or
fcoml
adc
movsb
fnsave
pushf
int3
bound
imul
sti
add
inc
cmp
lea
jl,pt
cmp
ljmp
int
pop
sub
xor
adc
xchg
cmp
in
jle
and
cmp
loope
and
repz
jo
aaa
call
adc
pop
xor
pop
push
push
shlb
xor
jecxz
and
je
dec
mov
or
or
jmp
adc
xchg
jge
addr16
pop
jecxz
imul
mov
push
inc
push
ror
sub
cmp
add
pop
sub
or
inc
jg
pop
and
mov
inc
sti
rorl
mov
pushf
and
push
popa
push
sub
cs
fldcw
xchg
mov
jns
lcall
in
shr
in
into
cmp
adc
mov
or
lcall
inc
je
clc
in
divl
mov
fstpt
cmpb
repz
add
nop
xlat
lret
loop
push
arpl
jge
mov
test
push
push
xchg
lock
movsl
leave
mov
cmc
xor
test
push
lea
jae
and
push
pop
dec
out
sbb
sub
test
push
push
sbb
loop
sub
test
sbb
gs
rcr
inc
call
cli
pop
cmp
pusha
mov
rclb
fs
push
mov
lods
dec
movsb
pop
sbb
mov
cli
addr16
orb
adc
jns
push
jno
jmp
dec
mov
nop
jo
adc
insl
fsub
add
or
cwtl
test
pop
sub
iret
xchg
sbb
jp
push
pop
scas
adc
ds
xchg
mov
add
mov
mov
iret
and
bound
mov
and
popf
scas
pop
dec
inc
inc
cmp
sub
mov
pop
dec
fs
fcomps
xor
ja
cmpsb
enter
imul
mov
adc
mov
and
mov
lret
mov
mov
add
insl
jae
adc
fstl
icebp
mov
repz
repnz
dec
testl
aaa
je
mov
outsb
leave
or
cld
outsb
test
pop
and
pop
jb
jecxz
jl
sti
cmp
dec
fwait
pop
movsb
addr16
or
loope
mov
push
mov
push
int3
lret
fists
adc
inc
icebp
stos
cwtl
cltd
fbstp
and
push
loopne
and
xchg
add
sbb
mov
scas
jl
shll
xchg
and
mov
mov
mov
sub
mov
das
cmp
add
push
and
push
or
inc
dec
or
adc
add
mov
push
push
leave
test
add
push
mov
ja
pop
iret
and
and
sahf
adc
das
ret
jg
loop
lock
pcmpeqd
repz
lahf
dec
xor
cwtl
jae
imul
pop
test
mov
aaa
pop
inc
sub
jecxz
hlt
add
add
paddusw
push
sbb
mov
xor
out
pop
mov
stc
jbe
pop
ljmp
sbb
shld
jae
lock
or
push
sub
push
xchg
fs
mov
push
xor
mov
and
les
mov
inc
addr16
stos
lds
xchg
add
sarl
ficoml
add
movsl
iret
cmp
or
push
iret
push
loope
cs
cmp
jl
adc
pop
sahf
adc
imul
adc
xlat
cli
mov
sub
sbb
mov
sahf
insb
mov
mov
xchg
adc
dec
cmpsl
push
push
mov
add
adc
push
mov
outsl
shl
hlt
and
hlt
dec
ficoms
push
sub
popf
push
dec
and
push
fwait
cld
sbb
xor
cmp
in
add
pushf
push
movsl
dec
xlat
out
pop
loopne
loop
pop
mov
pop
clc
jecxz
mov
push
mov
mov
jp
inc
mov
int3
xchg
das
mov
cmpsb
cmp
shll
xor
stos
aas
mov
or
out
or
dec
fistps
aas
outsb
enter
movsb
sahf
lds
dec
or
gs
outsb
cmp
push
mov
sahf
out
arpl
mov
aas
inc
dec
cmpsl
shrb
inc
push
fiadds
mov
out
push
inc
sarb
pop
mov
jns
dec
cld
pop
dec
les
and
test
pop
mov
enter
adc
fadds
lock
xchg
idivl
orl
icebp
andb
pop
jg
sub
call
cmc
ret
ljmp
add
das
mov
sub
jmp
pop
aad
pop
sub
xor
mov
pop
test
sbb
inc
dec
pop
xor
sbb
insb
out
pop
cld
pop
loopne
ret
add
dec
andl
sbb
cmpb
push
out
sub
fstl
adc
sub
jne
test
ja
adc
leave
test
xor
shlb
jle
pop
out
mov
jp
imul
fs
mov
fnstcw
test
movsw
popf
jnp
ret
cmpsb
fdivrl
das
jle
dec
sub
mov
insl
cmc
mov
mov
inc
push
enter
pop
pop
pop
inc
push
add
mov
sbb
test
mov
pop
mov
sub
jle
test
inc
add
xchg
dec
dec
mov
pop
adc
jno
mov
push
movsb
fcmovnbe
ljmp
out
xchg
in
insl
mov
rcrb
test
and
and
repz
mov
cmpsl
add
jmp
leave
out
and
mov
shrb
xchg
push
and
divl
pop
dec
imul
cmp
add
int
adc
stc
inc
mov
subl
lods
in
push
or
fcoms
lahf
mov
and
fstl
pop
pop
subb
push
repz
icebp
js
pop
mov
push
xchg
rolb
push
mov
subl
mov
lods
mov
pushf
cmp
push
aas
in
das
push
xor
mov
ficomps
xchg
pusha
xor
sahf
aaa
sbb
lahf
imull
test
out
push
push
push
sarl
maskmovq
divl
fs
cli
outsb
mov
push
fwait
jb
call
lods
push
lock
ljmp
ficomps
shll
sbb
insb
out
cwtl
dec
loop
movsl
pop
aad
stos
fsubr
dec
int
pop
jmp
lahf
push
sbb
js
stc
inc
push
neg
cmpsl
dec
lods
adc
ret
pushf
add
test
dec
sub
stc
jns,pt
push
idivb
sub
cmp
insl
scas
jmp
int
dec
add
pop
icebp
in
sti
adc
gs
push
sub
mov
xchg
aad
push
adc
inc
mov
mov
jmp
and
adc
int
adc
mov
test
sti
in
clc
notb
outsb
cwtl
in
fldl
mov
jle
sub
test
out
pop
mov
mov
dec
test
xchg
adc
mov
jae
insb
jno
cmp
roll
rcrl
sbb
jo
xor
aaa
sbb
cmpsl
ljmp
std
xor
mov
test
mov
pop
mov
in
cld
adc
mov
mov
xchg
jmp
cmp
std
dec
pop
icebp
and
dec
pushf
leave
xchg
into
add
sbb
and
mov
mov
mov
ja
repz
je
out
pop
cmp
xor
xchg
cmpsb
adc
das
fdiv
scas
pushf
clc
push
testb
xor
pop
xor
xchg
dec
into
fldl
jmp
xlat
mov
in
mov
push
bound
out
arpl
adc
mov
inc
mov
hlt
out
shlb
xor
jecxz
dec
push
pop
cmp
cmp
pop
inc
arpl
push
push
fwait
xchg
js
mov
pop
dec
fimull
cmpsb
mov
xor
aam
sub
dec
imul
mov
xchg
gs
mov
push
popa
ficomps
mov
ss
in
rorl
out
mov
sub
insl
sbb
fcomps
adc
stos
inc
or
fidivrl
add
lods
cld
adc
ret
add
and
mov
mov
sbb
cmpsl
lea
subl
and
dec
addr16
inc
addl
movsb
jnp
nop
jo
fbstp
je
mov
mov
xor
jge
cmp
pop
pop
jbe
outsl
mov
insl
sbb
js
pusha
rolb
sub
into
xchg
bound
push
cmp
fsub
fisttpll
fdivrs
fninit
xchg
and
add
sbb
and
aas
iret
hlt
add
sbb
mov
lds
test
pusha
mov
imul
data16
cmp
fmuls
lea
and
arpl
nop
jae
push
lret
or
int
sbb
mov
flds
mov
add
in
cmp
int3
movsb
push
loop
popa
dec
pusha
xor
repnz
repz
pop
mov
repz
scas
mov
push
pop
add
push
mov
cli
leave
in
push
or
and
imul
add
movsb
jmp
adc
in
gs
mov
sbb
sbb
mov
fnstenv
repnz
inc
mov
mov
mov
mov
and
cli
lds
add
lea
mov
sub
popa
xchg
rol
sbb
pusha
nop
jo
std
jmp
pop
insb
cmp
adc
test
gs
mov
repz
mov
or
divb
adc
test
add
pop
add
imul
int3
mov
popf
jg
sbb
stos
or
sahf
adcl
out
sub
mov
mov
pop
movsb
push
mov
rcl
mov
out
jne
mov
pop
or
adc
es
inc
cmp
adc
xchg
add
mov
dec
fdivs
int3
jns
aaa
and
std
jbe
iret
stos
push
xlat
sub
sub
test
stos
and
add
movsb
xchg
mov
or
xchg
xor
push
cltd
and
andb
pop
lret
jge
mov
dec
sub
jl
mov
pop
jg
jns
sbb
pop
jnp
test
and
jb
outsb
or
jmp
xor
mov
int
push
mov
dec
and
sub
mov
xchg
ss
sbb
cs
outsl
rolb
loopne
pop
dec
shld
add
or
or
div
sbb
lret
push
shll
push
les
lods
mov
mov
dec
cmp
adc
xchg
mov
cmp
fsubrs
rcrb
pop
ret
into
push
or
lods
jl
dec
roll
xchg
xchg
fcoms
xchg
and
mov
sbb
cmpsl
jnp
call
adcb
mov
dec
cmp
add
mov
subb
out
mov
int
pop
stc
mov
out
fs
and
hlt
pop
cmp
arpl
leave
scas
pop
in
and
movsl
aas
push
cli
xlat
add
in
cmp
insb
int3
mov
push
sbbl
cmp
mov
sub
mov
cmc
clc
jb
pop
adc
mov
push
pushf
bound
les
sbb
clc
in
xchg
aad
push
fisubs
mov
sbb
jbe
movsb
in
mov
arpl
or
adc
daa
mov
stc
push
xchg
clc
xchg
mov
fsubl
cmp
mov
adc
scas
imul
push
mov
pop
int
aad
loop
loopne
push
ret
sbb
mov
mov
jmp
jne
jle
mov
adc
sbbb
jmp
shlb
cmpsb
ret
outsl
xchg
arpl
push
xchg
scas
sti
pop
adc
adcb
xchg
sub
hlt
filds
add
mov
movsl
enter
jae
mov
divb
dec
leave
jnp
fwait
sti
ljmp
shlb
push
or
mov
mov
movsb
and
ret
inc
arpl
ret
clc
cld
lea
sbb
in
cmp
movb
cli
lds
mov
push
nop
aas
lods
imul
in
dec
cmp
pop
test
inc
inc
fwait
ja
lret
je
cmp
lret
mov
mov
dec
ret
adc
lahf
mov
shlb
in
mov
pop
popf
sub
or
sti
xor
xchg
add
lock
mov
into
and
mov
mov
mov
test
popa
sub
fsubs
push
repz
leave
subl
rcrb
xor
or
out
sarb
inc
pop
xor
cmp
xchg
insl
add
pop
popa
and
cs
xchg
loopne
test
mov
icebp
sbb
insl
mov
je
jge
xchg
pop
sbb
into
pop
test
push
in
ja
mov
outsb
sbb
fimuls
sbb
jno
shr
mov
and
pop
jl
push
les
xor
aaa
je
inc
mov
pop
mov
pop
adc
leave
in
arpl
sahf
sub
ret
or
sti
outsb
pop
mov
xorl
stos
mov
mov
dec
push
jle
cld
imul
inc
jmp
sub
cld
in
cmp
pop
pop
push
sbb
sub
push
enter
clc
lea
inc
mov
jecxz
xchg
and
pushf
and
pop
cmp
mov
repnz
enter
lods
fiadds
jns
mov
and
add
pop
or
popf
mov
iret
sub
jae
mov
jnp
sbb
sbb
mov
rclb
inc
fbld
lret
lea
or
fwait
lea
push
shll
add
lret
ret
mov
dec
aad
scas
xchg
in
xor
push
lcall
push
bound
adc
jns
dec
xchg
cmc
adc
leave
pop
into
mov
sbb
fstpt
das
mov
adc
pusha
adc
inc
into
mov
fstl
stos
jno
fildl
and
cmp
add
inc
sub
repz
leave
mov
inc
sub
cwtl
and
adc
mov
mov
cmpsb
or
xchg
push
jle
pop
repz
push
cs
cmp
add
inc
jmp
add
lods
outsl
fwait
push
fisubs
movsl
push
jp
loop
ds
mov
xchg
fidivrs
shrb
adc
pop
inc
data16
xchg
inc
jmp
test
and
andl
mov
jl
ja
enter
ljmp
and
dec
scas
inc
mov
movsb
mov
jmp
test
pop
repz
dec
adcl
dec
mov
sub
xor
sub
xchg
sub
jge
out
mov
adc
insb
push
repz
mov
push
sahf
sub
jl
jno
and
sub
inc
shrb
jbe
xor
insl
dec
fs
mov
mov
rcrl
stc
mov
xlat
inc
ret
imul
cmc
add
inc
xchg
push
lret
mov
pop
sub
test
sahf
inc
adc
inc
pusha
int3
push
int
lock
jb
cmpsb
or
pop
xchg
mov
cltd
sbb
cmpb
jne
add
repnz
sbb
loope
or
xor
fstl
in
ja
xchg
dec
test
pop
cli
xor
jecxz
push
movsb
in
cltd
mov
push
cli
enter
push
and
fcom
lahf
and
mov
pop
inc
outsb
jbe
fstl
ljmp
pushf
push
mov
int3
adc
or
xlat
lcall
inc
mov
sub
insb
mov
bound
out
enter
insl
aam
cmp
pop
jno
arpl
movsb
pop
int
addr16
xchg
dec
clc
and
xchg
mov
scas
add
xchg
fcomp
mov
jmp
stos
adc
lcall
dec
push
cli
mov
inc
test
shlb
loop
ds
call
pushf
and
jno
push
scas
lret
lahf
mov
add
int
mov
sti
movsl
mov
jl
mov
mov
inc
jae
add
js
jae
stc
into
fidivrl
or
call
mov
mov
in
push
mov
lds
rorl
inc
mov
mov
sub
or
and
fs
sub
push
lret
js
lock
mov
push
lods
lea
add
lahf
sbb
fidivl
sub
sub
lret
lret
arpl
insl
cmp
sub
std
jae
mov
in
xor
mov
mov
in
int3
out
mov
repz
aaa
push
jmp
inc
icebp
pop
pop
testb
push
lea
jnp
mov
jb
dec
push
jle
aas
rorb
add
cmc
pop
mov
mov
xor
push
enter
xor
jg
insb
mov
pop
mov
lea
inc
adc
lods
sbb
ret
and
mulb
ss
lahf
imul
je
ja
xor
or
xchg
mov
jns
jnp
inc
add
sub
xchg
popa
test
test
clc
mov
insl
out
bound
cld
shl
jae
aaa
fbstp
repz
in
add
cmp
add
lock
into
loope
mov
mov
ret
outsb
push
lcall
add
and
mov
sub
xchg
out
xchg
mov
xor
cmp
scas
repz
out
adc
pop
int3
mov
sub
adcl
mov
cmpsb
dec
ret
pop
push
sbb
ljmp
incb
pop
stos
mov
jge
mov
pop
bound
sbbb
xchg
in
inc
mov
aad
cs
mov
xchg
pop
lret
cmpsb
adc
mov
mov
lahf
mov
lret
imul
clc
data16
test
push
fs
das
xor
loop
fdivrs
sbb
and
jmp
cmp
sbb
and
lods
push
inc
cmp
adc
hlt
or
sub
jbe
inc
ret
es
arpl
lods
mov
cwtl
fbstp
cmpsl
inc
sub
test
mov
ss
loop
movsb
xorb
outsb
int
int3
cs
mov
out
out
fdiv
xor
aad
adc
dec
shll
lret
out
mov
mov
pushf
leave
mov
xchg
adc
shl
adc
pop
cmpsb
mov
sbb
mov
adc
mov
jp
or
repz
mov
repnz
xlat
nop
outsl
cs
div
imul
sub
mov
call
adc
sbb
shll
fsubrs
xchg
das
call
dec
ret
pop
cld
into
cltd
xor
mov
adc
mov
inc
std
out
movsl
shlb
mov
xor
xlat
out
dec
in
push
jne
loop
insl
daa
fucom
rcll
mov
ljmp
add
or
out
xchg
loop
xchg
inc
outsl
pop
add
xchg
test
dec
add
fstp
jp
mov
cwtl
inc
xor
mov
out
les
test
dec
push
push
add
ljmp
sti
out
pusha
push
add
push
sbbl
xchg
leave
dec
push
inc
fdivl
rclb
and
sti
lods
fsubrs
les
cmp
lods
lods
mov
pop
loope
push
rcrl
ret
movsb
sti
gs
ret
fcomp
pop
sarl
aam
mov
iret
cwtl
mov
pushf
add
cmp
orl
stos
testl
bound
mov
xlat
test
popa
and
insl
mov
add
psadbw
xchg
xor
ss
mov
mov
int3
sti
xchg
inc
test
mov
aad
push
pop
xchg
orb
push
pushf
loop
outsl
push
cmp
adc
les
adc
dec
pusha
add
xrelease
dec
cmpsb
lea
cmpsl
adc
jmp
in
pop
test
push
cmp
inc
cmp
adc
imul
popa
add
into
mov
mov
nop
lcall
inc
jno
cmpsb
or
add
ja
mov
xor
das
push
subb
fstpt
jae
cmpb
bound
ss
repz
push
mov
sbb
mov
inc
jbe
fistps
cld
outsb
xchg
cltd
and
mull
mov
je
add
cs
jecxz
sub
jle
jecxz
adc
xchg
cld
aas
rorb
data16
jg
call
data16
je
push
daa
loope
xchg
jecxz
add
insl
out
rclb
jo
ljmp
in
orl
dec
movzwl
pop
lods
cmc
sbbl
jne
adc
jbe
push
jmp
add
sbb
insb
pop
test
aas
mov
fcomps
lret
inc
adc
add
out
xorl
jnp,pn
or
test
mov
or
mov
cmc
ja
in
popa
stc
and
cmc
out
ret
jns
xor
mov
lds
sub
loop
ss
test
sub
frstpm(287
nop
test
dec
jmp
mov
pushf
xadd
in
sahf
mov
outsb
test
ret
mov
mov
or
sub
pop
imul
cmpsb
cmp
jb
inc
subl
lods
mov
imul
pop
mov
xchg
xchg
xchg
push
jecxz
inc
and
icebp
push
aaa
or
sahf
adc
xor
mov
mov
add
add
in
pop
jnp
sbb
mov
test
or
jge
roll
int3
cmp
push
ss
cmpsb
adc
das
cmp
int3
mov
scas
and
es
pop
daa
or
pop
xorb
dec
push
mov
je
jle
pop
andb
inc
and
mov
imul
mov
icebp
test
ret
ljmp
dec
dec
push
outsl
inc
sub
jbe
inc
push
or
xlat
fmuls
mov
sub
fcmovbe
dec
push
ja
dec
fwait
stc
xchg
js
leave
xor
cmp
scas
dec
out
sub
repz
mov
sub
adc
into
inc
jb
push
push
sahf
pop
in
divb
jno
flds
jp
cmc
popa
out
lea
or
push
les
and
push
mov
cltd
fisubs
pop
idivl
scas
mov
push
mov
ficomps
push
lret
xor
test
push
idivb
cmpsb
jle
push
aam
and
jle
arpl
mov
pop
xchg
jo
out
inc
add
arpl
mov
lock
jnp
xlat
dec
inc
out
pop
or
and
mov
xchg
dec
mov
jb
mov
mov
stos
push
shrl
ljmp
movsb
mov
loop
fidivrs
cmp
mov
out
and
outsb
jae
sbb
inc
inc
rorl
push
fcompl
clc
das
xchg
add
jo
sbb
jb
aam
adc
sub
cmp
lock
mov
mov
test
xor
adc
sbb
loopne
jg
xor
jno
fdivrs
adc
xor
andb
sti
xor
or
es
rol
mov
jns
fs
and
insl
pop
ret
add
sarl
fstps
inc
sub
adc
std
out
mulb
add
mov
popa
pushf
ja
dec
rorb
rolb
cmpsl
adc
add
mov
lea
lahf
add
pop
add
loop
mov
jnp
stos
mov
xlat
insl
adc
pop
mov
jns
mov
sti
arpl
fcomps
jmp
cmp
ret
push
pop
xchg
push
mov
iret
pop
test
push
sti
or
orl
cmpsl
mov
adc
lret
add
lcall
loopne
addr16
fisubs
cld
adc
mov
add
cmpsb
jecxz
lods
inc
dec
and
out
mov
gs
mov
ficompl
cmp
dec
dec
and
sbb
xchg
pushf
push
xchg
sbb
imul
sbb
fcmovb
cmp
and
data16
or
xor
or
add
mov
xor
inc
add
jb
jbe
fiaddl
inc
outsl
aas
movsb
ja,pn
jnp
mov
xorl
repnz
out
mov
loopne
iret
sub
and
subl
adc
mov
inc
fnstsw
add
int3
je
jmp
inc
imul
adc
jo
sbb
es
fnsave
test
sbb
jg
ds
out
cli
mov
push
xchg
add
mov
cli
sbbb
daa
or
leave
lahf
test
mov
mov
jno
adc
sbb
ljmp
iret
cmpsl
int
xchg
cltd
aaa
xorl
fildll
addl
fdivr
bound
xorb
push
movb
mov
jl
mov
iret
out
pop
nop
add
in
sub
pop
jg
ljmp
push
in
cmp
push
or
dec
and
inc
inc
inc
push
das
jecxz
mov
ljmp
mov
mov
xorb
rcrb
xor
stos
mov
push
sahf
mov
cmp
add
arpl
push
mov
mov
xor
jbe
iret
add
test
out
mov
je
out
popa
fsubrs
repnz
fsubl
insl
xor
fisubs
adc
inc
out
mov
jo
jne
adc
mov
dec
mov
pop
fs
or
aas
movsl
mov
and
and
or
or
jne
scas
sub
adc
out
fbstp
sbb
pop
stos
adc
sub
pop
pop
or
adc
sbb
mov
jb
push
sbb
jmp
rolb
add
jnp
lea
mov
iret
xor
lea
loop
mov
shl
stos
and
xchg
notl
mov
push
cmp
inc
scas
iret
and
outsb
dec
adc
dec
in
into
shll
jp
push
leave
sbbl
and
inc
and
cmpb
scas
inc
sahf
or
dec
jo
test
mov
das
movsb
mov
icebp
jo
sahf
cld
sub
iret
jbe
pop
pop
jno
in
sub
jle
lods
or
in
adc
xchg
pop
call
mov
aas
adc
pop
cmp
jge
and
sub
out
in
leave
addb
imul
fwait
movsl
int
leave
or
push
fsubrl
std
dec
add
in
nop
lret
js
ficoms
sbb
stos
push
rolb
fsubr
stc
test
push
mov
out
bound
rolb
pop
dec
jb
mov
or
xchg
cltd
lods
imul
mov
insb
cmpsb
cld
testb
imul
hlt
sahf
pop
les
les
jge
icebp
xor
mov
das
xor
int
mov
xchg
dec
test
in
mov
loopne
mov
roll
repz
lea
and
daa
pushf
jnp
daa
jbe
pop
jae
sub
cmpsb
mov
xchg
and
push
shr
and
popa
sahf
or
dec
mov
and
mov
mov
fstps
ljmp
pop
or
add
add
aam
push
sub
sbb
les
pop
ficoml
scas
roll
mov
ficoml
sbb
xchg
pop
test
cmp
out
mov
insw
push
or
mov
sub
fmul
cmpsl
arpl
cmpsb
cmc
adcl
mov
push
into
mov
xchg
addl
into
push
inc
mov
lret
cmovne
clc
xchg
mov
push
adc
cmp
out
sbb
mov
or
fbld
sbb
loopne
jns
sahf
dec
push
ja
shll
shr
in
or
pop
leave
or
mov
sub
fnsave
xchg
iret
scas
mov
cmp
add
subl
inc
push
and
add
cmpsb
lret
test
call
push
xchg
and
inc
cmp
ret
repnz
jge
push
cmp
push
ret
inc
scas
pop
dec
out
pop
mov
dec
sti
add
and
mov
jnp
fcomps
cmp
xchg
mov
sbbl
dec
out
frstor
xor
icebp
pop
into
mov
lcall
addl
or
pop
out
dec
iret
or
loopew
mov
popa
adc
mov
aaa
jns
ret
stc
jo
mov
enter
adc
or
and
sub
je
cmc
push
mov
add
test
aas
xchg
cmp
push
push
xor
push
mov
testb
call
popa
negl
jl
loop
and
sub
pushf
sbb
jp
xchg
xor
mov
mov
dec
clc
repz
scas
mov
js
fsub
filds
sbb
popa
mov
cld
cli
push
sbb
test
fcoms
movsl
cld
ja
imul
std
fistl
mov
cs
xchg
sub
int3
pusha
xchg
and
adc
push
hlt
add
shlb
dec
addb
fs
jl
sub
iret
jl
sahf
movsl
adc
inc
xchg
mul
push
sbb
sub
sub
in
xchg
or
xor
insb
inc
jnp
pop
inc
xchg
dec
xchg
sub
icebp
bound
lcall
iret
pusha
inc
or
jne
jb
or
les
jl
mov
adc
push
mov
ss
jge
mov
out
dec
cmp
push
fistpll
in
mov
stc
addl
inc
cmp
loop
sbb
inc
jns
and
dec
test
and
xchg
ds
fildl
xor
nop
xor
pop
jecxz
lock
out
and
push
scas
xchg
fiaddl
adcb
xlat
mov
cmc
mov
pop
or
std
pop
std
add
out
out
dec
jp
push
mov
mov
dec
inc
sbb
pusha
sub
cltd
jo
jmp
xor
hlt
dec
and
rol
push
test
andb
inc
mov
out
pusha
in
subb
and
orb
aad
sub
es
subb
stos
mov
mov
sub
icebp
cmp
cmp
or
je
pop
es
imul
test
aas
lret
adc
sub
jmp
jecxz
inc
movsl
sti
cmpsb
icebp
test
mov
dec
stc
pop
inc
lods
pop
icebp
xchg
arpl
popa
push
icebp
jo
pop
adc
jp
ljmp
std
sbb
xor
out
sbb
and
imul
aad
mov
sub
jmp
insl
dec
shr
pop
ret
mov
scas
push
mov
pop
pop
ljmp
rolb
dec
jle
adc
cld
mov
sub
aad
mov
iret
bound
jbe
push
jecxz
mov
cmp
pusha
xor
test
lcall
ss
jle
aas
or
push
inc
js
add
pushf
imul
int
mov
sub
mov
outsb
rol
roll
lret
sbb
aas
xchg
arpl
push
std
sarb
mov
sti
push
xor
lock
aaa
cmp
mov
cli
xchg
mov
lcall
ret
and
jbe
lock
xchg
inc
xchg
mov
sbb
cli
insb
inc
leave
cmp
lds
ret
and
xchg
push
pop
imul
push
mov
add
xor
jl
inc
cmp
test
mov
scas
mov
jne
push
push
fnstsw
out
clc
add
dec
cmc
adc
movsb
or
aas
shrl
je
and
pop
out
mov
push
cmp
jecxz
cmp
and
in
mov
inc
into
bound
dec
shll
imul
ds
sbb
dec
iret
aam
inc
cmp
fdivs
fldt
sbb
icebp
addr16
sub
test
push
xlat
sbb
xorl
xchg
imul
xor
mov
mov
and
jnp
scas
pop
or
mov
lahf
jg
dec
mov
fs
push
push
dec
jl
movb
push
scas
loope
adc
mov
or
orb
cmp
dec
lds
and
js
pop
sbb
lock
add
dec
aaa
nop
cli
outsl
and
cli
daa
pop
je
fdivs
cmpsl
xchg
test
mov
push
dec
pop
sbb
daa
push
es
call
lret
ja
inc
outsl
mov
xchg
sbb
or
fnsave
and
dec
shrb
jecxz
push
cltd
jl
mov
push
mov
cmp
test
push
and
sub
jg
jecxz
sub
lods
iret
int3
cs
xchg
int
sub
mov
imulb
mov
dec
icebp
shll
pop
mov
sahf
and
call
insb
add
pop
aaa
shlb
fs
out
arpl
insl
sahf
cmp
int
movsb
cli
xchg
in
lret
loope
sbb
movsb
sub
sub
aad
xor
adc
and
xchg
or
call
and
pop
mov
xchg
popa
cmp
dec
decb
sarl
mov
clc
mov
jnp
test
repz
jo
nop
xlat
mov
aad
pop
popf
es
clc
sbb
sahf
push
cmp
add
int3
das
mov
es
push
jne
pop
ret
int3
adc
popf
cmp
shrl
jle
into
sbb
jl
xor
ja
outsl
lahf
shlb
push
cmp
rorb
mov
jae
fsubr
sbb
push
and
in
mov
in
ds
mov
xchg
test
lret
jb
into
add
mov
js
roll
test
mov
push
leave
jae
loope
jb
mov
mov
mov
nop
xchg
int
lea
xchg
add
sub
mov
repz
jnp
xor
mov
jo
xor
inc
mov
stc
add
xor
addb
out
mov
fdivrs
in
aaa
sub
sub
cmp
daa
rclb
add
xlat
mov
push
or
stos
sti
fcoml
xor
push
lods
stos
mov
push
jp
jl
mov
xor
mov
movsb
das
lea
dec
jl
inc
mov
jle
popfw
psubusw
or
sbb
mov
aam
jnp
adc
mov
sbb
add
mov
shlb
lcall
sbb
sbb
xchg
inc
dec
inc
cmp
sahf
sbb
mov
and
mov
mov
xor
jbe
das
push
inc
fs
xchg
pop
sbb
xchg
fists
in
push
mov
push
inc
shr
cwtl
mov
mov
dec
inc
outsb
mov
dec
outsl
movsl
inc
cmpl
or
frstor
fsts
and
push
pop
lds
or
icebp
cmc
jb
sbb
push
cltd
jno
jg
adc
and
mov
mov
and
loope
pop
add
mov
and
test
and
out
les
xchg
iret
sbb
inc
pusha
dec
jns
fidivs
push
loope
std
push
loop
out
inc
repnz
scas
enter
jns
loopne
push
test
loopne
pop
loop
mov
addb
and
mov
sbb
out
lret
call
testl
jbe
in
cmpsl
inc
inc
test
push
lahf
sub
ja
sbb
xchg
stc
add
mov
push
cs
and
xchg
shrl
inc
pop
push
rolb
add
inc
pop
imul
cmp
fcmovnb
jp
pop
xchg
in
mov
test
push
ja
mov
xlat
repnz
xlat
outsl
leave
jg
repz
js
xor
cli
xor
jns
pop
jo
dec
test
sub
mov
pop
push
pop
test
xor
adc
sub
jmp
sbb
ret
insl
cmp
out
push
adc
test
popf
xorl
outsb
stos
rcl
mov
mov
movsb
scas
sub
pop
pop
rorb
sub
and
sbbl
cmp
mov
data16
mov
add
out
test
mov
push
pop
ret
cmp
outsl
lods
mov
push
xchg
cmpsl
add
mov
push
mov
adc
ljmp
jne
or
mov
dec
mov
and
sub
ss
jecxz
push
repz
xor
sti
cltd
pop
add
mov
insl
test
insl
insl
add
jmp
fnstenv
sahf
or
mov
nop
mov
mov
test
test
decl
ljmp
bsf
gs
stos
notb
pop
sbb
cmp
das
sbb
sbb
mov
jno
push
inc
mov
push
or
ljmp
fistl
pop
jp
sub
rolb
mov
xor
push
jge
jne
adc
add
into
ss
jge
sahf
hlt
pop
movsb
testb
loopne
xlat
sub
mov
sbb
jl
int3
jae
iret
mov
in
xor
test
dec
mov
mov
pop
and
arpl
mov
es
mov
cmp
loope
ja
cmc
sarl
push
ds
insb
mov
cwtl
xor
lods
shlb
ffreep
insl
fiadds
mov
mov
and
or
dec
sbb
out
std
xchg
test
jg
repz
push
mov
ja
mov
dec
ds
fcoml
ja
adc
lods
cmp
mov
clc
nop
ja
xor
les
mov
in
xor
xchg
jp
cmp
sub
xchg
or
sbb
stos
or
xchg
cmp
cmp
or
stos
repnz
movsb
hlt
addr16
inc
sub
faddl
cmp
xor
pop
in
mov
push
loope
push
xchg
pop
jle
and
pop
push
inc
inc
dec
dec
mov
mov
pop
into
lods
adc
pop
mov
ja
mov
jbe
push
test
fidivs
daa
mov
push
jg
sbb
dec
shlb
xorb
std
xchg
sbb
outsb
addr16
sbb
xchg
adc
jo
inc
jnp
jb
cmp
lock
decb
sbb
cltd
shl
call
imul
push
call
and
push
insl
mov
test
dec
adc
pop
xchg
lret
mov
dec
fstpt
xchg
push
jl
pop
test
gs
mov
cmpsl
int3
xor
out
fcoms
rorb
add
inc
sub
jg
cld
ja
push
testl
push
jns
xor
cmp
cltd
fisttpl
cmp
sbb
dec
jne
inc
stos
test
cmp
leave
lret
xchg
cs
and
jno
push
bound
xchg
arpl
mulb
ja
or
loope
xor
pop
xchg
add
jo
pusha
in
push
aad
andl
lcall
jmp
out
nop
jmp
enter
out
inc
je
cmp
pop
and
mov
arpl
rep
adc
popf
jae
repnz
jne
xchg
push
pcmpeqd
xor
mov
and
jb
inc
out
cld
push
push
ja
lock
test
push
inc
mov
push
lock
inc
or
test
scas
dec
ds
adc
cmp
mov
gs
lret
leave
mov
xor
add
jno
repnz
aaa
lods
push
data16
enter
inc
insl
jne
add
test
lcall
dec
aam
add
jecxz
dec
mov
popa
or
cld
push
nop
inc
sarl
add
mov
or
push
sahf
inc
ds
adc
outsl
xchg
jno
xor
inc
add
dec
mov
das
mov
or
test
lea
mov
mov
movsb
xchg
xor
stos
clc
mov
jo
cmp
xchg
popa
inc
test
imull
fldcw
or
adc
lea
sbbl
movsl
aam
orb
int3
fiadds
xorb
int
jg
in
xor
adc
mov
data16
mov
push
cmp
cmpsb
in
gs
mov
mov
jb
iret
jg
mov
jns
xchg
push
or
in
jmp
out
pop
mov
cli
int
in
ss
push
pop
je
pop
add
jb
xor
ja
out
pop
lcall
sbb
pop
rcrb
xchg
sub
xchg
loopne
inc
adc
fldenv
ljmp
mov
dec
mov
fstpl
out
inc
rorb
mov
out
and
das
jb
movsl
or
sub
rcrl
or
sbb
fabs
fdivl
pop
or
arpl
imul
test
scas
push
insb
jl
push
xorl
stos
out
lods
cmc
mov
dec
and
add
adc
repz
cmp
mov
call
lock
add
mov
jl
out
cmp
mov
dec
dec
or
in
jp
shrb
or
clc
dec
dec
loope
xor
std
jge
push
sbb
jl
and
mov
xchg
pushf
subl
std
cmp
or
in
fwait
cmp
movsb
fscale
cltd
test
sub
push
shll
popf
xor
aaa
pop
push
loop
push
in
pop
cmp
add
fwait
clc
lods
lcall
addl
cwtl
xchg
jecxz
push
out
dec
mov
pop
mov
cmp
out
push
xlat
pop
fsubrs
dec
pop
stos
dec
pop
jg
popa
hlt
fs
repz
insl
movq
mov
xor
mov
sub
cltd
inc
cmp
imul
mov
inc
into
adc
or
in
jecxz
cmp
mov
sbb
pop
call
xor
mov
jecxz
push
aaa
cli
mov
push
jne
stc
ss
xchg
addb
xor
dec
test
inc
mov
nop
push
aaa
orl
add
pop
mov
stos
sbb
in
aam
out
dec
xchg
call
rorb
push
aaa
mov
lds
xor
xchg
add
pop
sbb
cmp
lcall
insb
fists
fstpt
and
mulps
jb
inc
lea
inc
repnz
mov
jge
sbb
cmpl
pop
or
push
sbb
adc
fstps
insl
cmp
sub
pop
loop
inc
sarl
xchg
push
sbb
jmp
dec
popf
stos
into
inc
aad
jl
xlat
shrb
jne
jmp
outsb
add
cmp
adc
dec
adc
shlb
add
mov
jmp
add
test
nop
push
fbstp
cmpsb
sbb
adc
sub
pusha
mov
mov
mov
testb
cmp
test
dec
clc
pop
mov
gs
xor
test
mov
xor
jmp
cmpsb
add
sub
mov
testb
add
daa
or
adc
aas
cld
jns
sbb
sbb
pop
jne
and
push
jbe
pop
add
mov
sbbl
dec
pop
lea
jle
xchg
mov
push
out
adc
lds
push
pop
ret
or
ds
out
and
aaa
add
mov
and
imul
jns
sbb
or
cltd
and
inc
arpl
pop
mov
lea
ljmp
fnsave
mov
push
sub
aad
dec
adc
xchg
iret
dec
out
jle
in
stos
sub
mov
repz
loope
add
fldt
add
repz
inc
mov
sub
mov
mov
mov
mov
lret
push
add
adc
sbb
pop
push
nop
gs
and
jp
enter
adc
sbb
lret
and
loope
lahf
pop
mov
stc
outsl
lahf
fdivs
or
pop
test
ficomps
pop
push
inc
cwtl
dec
imul
lds
sub
pop
arpl
pop
loopne
add
jmp
mov
mov
call
aam
or
mov
mov
xor
in
pop
sub
sub
or
xlat
fcomps
sub
hlt
ficoml
fwait
loop
adc
lods
mov
inc
sub
data16
pop
xor
nop
in
jp
pop
or
mov
insl
jge
loopne
in
cmp
mov
push
cmc
jge
add
cmp
xchg
rcrb
sub
adc
cmpl
or
cld
jecxz
ficomps
push
in
leave
daa
ret
sbb
rorb
std
and
xchg
fs
addr16
fidivs
ret
sahf
jb
xchg
xchg
mov
inc
sbb
enter
jmp
sbb
fwait
aam
pop
cmpsl
push
dec
xchg
xor
cmpsb
cmpsb
stos
pop
loop
jge
scas
test
xchg
sti
out
mov
jg
pusha
pop
mov
in
sbb
aaa
mov
lea
push
dec
test
pop
add
aad
pop
repz
mov
mov
out
mov
cld
call
cltd
jmp
or
in
pop
mov
gs
divl
ret
push
xchg
push
out
daa
and
or
test
test
cmp
push
dec
shll
sub
in
pop
cmpl
pop
mov
aam
call
cmp
shlb
pop
xchg
fnstenv
scas
test
xor
gs
cmp
lods
or
jns
xchg
pop
mov
pushf
sbb
sub
out
add
cmpsb
std
decl
cltd
into
pop
into
adc
sahf
inc
add
mov
pop
icebp
adcl
pop
push
hlt
jbe
test
xchg
fwait
push
test
xchg
mov
cmpsb
test
cmc
and
insl
out
mov
adc
pop
mov
cli
push
stos
jl
jge
and
add
lock
sar
sub
xchg
mov
fcmovu
adc
inc
add
in
imul
mov
push
or
xchg
inc
and
sbb
and
jne
pushf
adc
push
outsl
insb
jle
sarl
fldl2t
in
and
adc
ret
push
xor
inc
call
ds
adcl
scas
cmpsb
mov
pusha
inc
and
xor
scas
cmp
sbb
andnps
sub
sub
call
mov
xor
push
jmp
inc
sub
in
dec
sub
fnstcw
mov
mov
or
inc
sarb
jge
add
push
cli
and
xor
xchg
adc
and
mov
push
xchg
sbb
jecxz
gs
mov
test
fdivrs
add
fnstsw
movsl
call
pop
hlt
mov
pop
xchg
popf
into
sub
sub
incl
insb
fidivrl
out
rorl
fnstenv
mov
or
std
add
stc
and
aas
and
insl
repz
lods
nop
add
xor
sbb
jb
jb
add
jne,pt
and
fadds
push
and
test
sbb
xchg
sbb
dec
jg
or
lock
hlt
fs
test
testl
or
inc
ret
lods
cmp
jo
in
push
jecxz
add
movsl
jmp
repnz
dec
ds
pop
and
mull
mov
pop
jmp
mov
inc
adc
pop
ficompl
ret
jmp
dec
sbb
and
jmp
mov
push
xchg
mov
pop
push
dec
jle
ja
pusha
pop
jnp
mov
adc
mov
inc
mov
mov
fidivrl
mov
mov
pop
loope
decl
fstps
iret
pop
cwtl
movsl
dec
not
ljmp
dec
jmp
pop
cmp
repz
aas
ret
lods
xchg
sub
or
mov
mov
mulb
aam
lret
repz
dec
mov
popf
lds
int3
rol
mov
and
lock
sub
hlt
icebp
call
xchg
das
repz
mov
stos
inc
test
lcall
or
mov
sahf
ljmp
dec
add
mov
cmpsl
bound
xchg
repz
sbb
andb
or
sbb
pop
pop
or
jle
pop
fbld
lock
nop
pop
repnz
pop
mov
sbb
cmp
xchg
ret
dec
rep
jl
jecxz
addr16
ret
pop
lea
push
sub
pop
push
or
mov
adcb
adc
push
jp
loope
mov
ss
mov
cwtl
fisubrl
loop
pop
jle
and
mov
xor
inc
mov
fcomps
fsubp
testb
lock
or
add
leave
xor
aam
dec
sarl
pop
push
mov
mov
jle
add
test
stc
hlt
add
push
leave
imull
fdivrl
fnstenv
rcll
adc
fidivl
or
ds
cmp
shlb
and
mov
push
sbb
pop
xchg
sbb
frstor
hlt
icebp
jne
mov
out
fildll
les
adc
dec
fstps
and
add
loop
pop
loope
shlb
jge
out
mov
sahf
jg
les
movsl
jp
aas
dec
popf
sub
lods
or
fidivl
dec
xchg
dec
sar
mulb
aad
inc
mov
pusha
loopne
sbb
xor
repz
pop
hlt
lods
add
or
aad
icebp
js
mov
ss
jns
cld
cmp
cmp
dec
sahf
sub
inc
shlb
inc
cld
mov
cltd
mov
inc
fildl
insl
mov
sbb
lea
mov
inc
cld
sbb
negb
pushfw
adc
clc
sarl
loop
mov
icebp
cli
cwtl
lea
jp
pop
enter
pop
adc
cmpsl
and
fmull
adc
enter
inc
pop
scas
iret
push
xor
fcomps
jns
aaa
or
dec
jp
jle
inc
push
dec
stos
lods
psubb
mov
adc
dec
inc
push
mov
cmp
je
lods
mov
cmp
pop
xchg
add
test
lcall
xchg
sub
xchg
pop
leave
pop
orl
negl
gs
lret
xor
cld
mov
dec
xchg
pushf
jp
pop
cs
adc
mov
sbb
pop
sbb
cli
mov
mov
cs
mov
ret
mov
mov
sub
adc
xor
mov
imul
and
imul
enter
punpckhbw
jge
jno
jmp
fdivrs
xchg
gs
or
inc
cld
je
push
jb
mov
enter
jmp
inc
ret
les
inc
scas
insb
stc
ljmp
mov
aad
ja
xchg
scas
into
lods
cli
dec
cmp
pop
pushf
stc
sbb
mov
cli
mov
xor
xor
inc
mov
rcrb
dec
test
sahf
pop
cmp
movsb
or
cli
lock
xchg
inc
lea
int3
add
adc
out
icebp
pop
mov
outsl
sbb
mov
mov
in
cmc
pop
shll
add
ljmp
scas
dec
movsb
mov
jge
das
jne
sarl
ss
add
test
gs
pop
mov
daa
mov
push
clc
scas
shll
int3
data16
jmp
pop
add
pop
xchg
stc
outsl
adc
pop
mov
call
push
dec
add
lea
outsl
push
gs
adcl
jge
in
mov
sbb
shll
dec
imul
push
add
cmp
pushf
or
in
aas
shl
pop
lret
les
mov
jmp
in
sbb
pop
sub
adc
sbb
push
mov
cmpl
cltd
dec
add
xchg
ret
push
movl
xchg
pop
mov
repnz
jns
mulps
jmp
stc
mov
adc
xchg
push
in
mov
ret
pushf
int3
shr
pop
in
jg
leave
push
add
inc
xchg
test
ret
xchg
mov
fwait
psubb
mov
sbb
cs
mov
addr16
dec
push
xorb
ret
cmpb
nop
lahf
roll
lea
push
imul
into
and
inc
std
pop
jbe
cmp
cli
xchg
shr
pop
lds
stos
sbb
stos
adc
push
mov
add
push
and
inc
cld
adc
je
iret
push
sub
data16
addr16
out
dec
gs
pushf
cmpsl
es
cmp
movlps
pusha
jmp
or
mov
sub
cmp
daa
push
sbb
nop
rcrb
add
mov
fisttps
xor
jb
or
push
in
sub
push
xor
lret
das
add
xchg
cs
rcll
push
test
xchg
jae
sub
mov
in
pop
shl
es
aaa
sbb
test
mov
adc
paddb
pop
pop
and
sub
cmc
rol
sbb
mov
sti
les
or
mov
and
or
pop
fsub
out
sub
movsl
push
xchg
mov
mov
push
outsb
mov
push
imul
jne
jge
pop
xchg
daa
jg
mov
scas
fwait
push
repz
mov
lock
and
sahf
mov
or
jo
add
mov
jge
pop
jge
add
pusha
jecxz
mov
mov
insl
inc
pusha
fisttpl
cwtl
xor
or
xchg
or
lock
inc
addb
mov
rol
pop
cmp
push
jge
shrb
leave
fiadds
inc
hlt
cmp
xor
mov
xchg
xlat
push
mov
cmp
add
cmpl
mov
sarl
pop
mov
sar
pop
rclb
add
xor
out
inc
xor
inc
lods
sahf
sub
stos
clc
pusha
ja
pop
push
push
bound
popf
incb
xchg
pop
xchg
adc
lcall
imul
push
rcr
mov
and
out
and
imul
inc
ficoms
cmp
xlat
lds
mov
jg
aas
push
loop
test
les
in
sbb
push
dec
cmp
fists
push
arpl
push
mov
fcompl
adc
mov
call
testb
jo
lcall
sahf
cmpsb
shlb
hlt
shr
pop
int3
push
insl
orb
dec
nop
loop
push
leave
mov
mov
lds
test
roll
mov
mov
or
pop
pusha
scas
sub
jno
dec
pop
inc
push
adc
fwait
mov
std
mov
int
addr16
or
add
mov
pop
dec
add
pop
sbb
xor
mov
hlt
inc
inc
pop
xor
daa
test
test
jne
push
jnp
out
mov
adc
jnp
or
or
icebp
test
xchg
mov
scas
and
test
adc
cmp
mov
int
loope
or
cli
imul
fcoml
cmc
adc
inc
push
gs
mov
dec
shrl
in
cltd
flds
add
inc
push
lods
lcall
daa
repz
vpmacsdqh
sar
mov
lock
cmpsl
cmp
in
outsb
ret
push
push
std
dec
bound
adc
mov
in
add
repnz
faddp
add
rolb
sub
fstps
out
sbb
subb
lahf
mov
or
pop
sbb
jns
sarl
lods
divb
push
fwait
xor
mov
gs
jp
cld
dec
bound
jg
jle
fs
lcall
out
in
into
sbb
addr16
and
push
lret
addr16
lret
jp
cmp
push
fmuls
xor
mov
int
scas
mov
mov
mov
jo
out
sti
xchg
addr16
imul
addl
in
mov
add
adcl
stos
ds
mov
dec
sbb
mov
js
or
adc
mov
mov
lcall
cmp
cmp
out
and
cmp
cld
mov
or
ljmp
movsl
dec
add
pop
push
hlt
ss
les
idivl
pop
push
push
mov
ja
mov
pop
push
das
push
adc
je
sub
sahf
push
stos
lds
stos
xlat
js
inc
xchg
and
pop
xchg
fwait
ret
mov
rcl
pop
sti
or
dec
jae
pop
xchg
mov
inc
fildll
mov
in
cmp
dec
pop
js
test
cmpsb
fsubs
dec
dec
dec
push
mul
cmc
cmp
mov
jecxz
adc
lret
cmp
fsubrs
mov
or
incl
pop
orl
aam
fs
mov
dec
cmp
idiv
push
divb
inc
or
cmp
dec
shl
fs
inc
jge
repz
mov
mov
push
xor
scas
jl
add
or
inc
aas
or
loop
adc
cwtl
mov
pop
outsl
inc
push
xchg
mov
jae
scas
out
pop
jp
dec
in
sbb
inc
out
out
std
lcall
aam
sbb
or
lods
repnz
scas
icebp
int
mov
and
mov
pop
mov
outsl
push
test
aad
add
loope
dec
inc
mov
cmp
enter
and
inc
pop
je
daa
and
les
aaa
iret
and
push
in
mov
rorl
add
orl
cli
je
push
jmp
mov
int3
sbb
sub
dec
sub
push
pop
adc
xor
jns
rcrb
dec
arpl
in
mov
daa
sub
push
stc
mov
ljmp
adc
pop
icebp
adc
rorl
repz
mov
push
test
imull
imull
add
mov
shrl
pop
lcall
cmp
mov
mov
jp
jp
fwait
push
sub
or
fisttps
mov
insl
push
push
js
mov
fldl
data16
mov
cmpsl
inc
or
pop
fs
dec
popf
stos
xor
sahf
sbb
out
shl
jmp
aas
mov
ret
pop
rcl
jne
cmp
pop
cmp
lock
add
cld
and
in
pop
mov
dec
in
test
mov
pop
xchg
pop
ljmp
inc
scas
and
shl
jecxz
int3
test
pusha
subl
leave
faddl
pusha
cmp
push
xchg
sub
subb
pop
cmc
mov
clc
imul
add
out
add
lcall
pop
sub
bound
pop
les
xchg
outsb
sbb
fs
sbb
test
fldenv
pop
jns
popf
lahf
xlat
dec
scas
insb
mov
je
les
and
pop
adc
mov
out
or
cmp
pop
shrl
mov
adc
movsl
movsb
movsb
js
mov
or
push
es
out
repz
dec
andb
cmp
in
sbb
mov
dec
sarb
push
mov
xchg
movsl
jnp
scas
sbb
jg
in
call
adc
pop
and
sbb
or
repnz
mov
push
das
adc
int3
ss
xor
jns
jge
mulb
xor
ret
mov
jnp
insb
insl
xor
mov
and
fsub
lret
popa
lcall
sbb
push
call
lods
push
add
ljmp
dec
mov
movsl
ja
push
sar
jne
mov
adc
movsb
add
jo
xor
mov
push
push
lret
das
sub
mov
sub
dec
in
mov
jl
dec
idivl
jle
xchg
stc
adc
xor
pop
dec
scas
cs
mov
ljmp
add
sbb
mov
dec
out
sub
movsl
dec
pop
cmpsl
mov
movsl
cmc
imul
aaa
sbb
dec
and
leave
cmp
loope
xlat
mov
lock
mov
xor
add
jo
scas
loop
inc
add
or
jg
das
or
std
lock
aam
jl
fistps
out
jp
dec
xchg
mov
cmp
xor
icebp
outsl
call
add
mov
adc
bound
sbbb
xor
mov
imul
sub
lret
stos
and
cmc
test
jg
and
jecxz
stos
push
fiadds
mov
cld
mov
xchg
test
sti
pop
sbb
pop
mov
sub
loopne
ljmp
dec
jmp
out
dec
lret
jae
movsb
loope
and
or
pop
jb
mov
push
sub
push
es
mov
fcoms
mov
out
imul
xor
jl
jae
fdivl
mov
jne
repz
outsl
cmp
out
mov
mov
outsb
inc
sbb
xchg
mov
cli
bnd
loope
xchg
pop
dec
bound
sbb
xchg
ret
add
pop
inc
add
adc
pusha
lret
nop
neg
xor
enter
in
ja
mov
addr16
inc
out
in
pushf
sbb
sahf
dec
std
testb
lret
xchg
cmp
pop
mov
adc
mov
inc
leave
dec
jp
and
inc
mov
xor
mov
sahf
hlt
or
stos
popa
mov
aas
ss
push
adc
sbb
mov
pop
push
pop
xor
push
xor
pop
cmp
pop
mov
ret
pop
or
sub
pop
sbb
cmp
push
idiv
jp
mov
push
mov
insb
xchg
inc
or
push
add
js
cmpsl
lea
fsubs
mov
pop
and
or
inc
int3
jns
mov
je
sbb
or
insb
push
jmp
adc
xor
add
imul
xchg
inc
loope
cs
lods
iret
fsubl
mov
loope
pop
jecxz
in
sub
push
push
jp
or
cltd
jle
imulb
dec
add
imul
rcrb
xchg
pop
dec
mov
and
push
inc
or
cmp
leave
jns
mov
xchg
mov
cmpl
std
outsb
push
xor
inc
les
int
push
jne
sub
lock
or
repz
fidivrs
mov
cmp
loop
cmpsl
and
add
and
and
mov
sub
or
das
lret
adc
and
mov
loopne
imul
xlat
fnstenv
addr16
rcrb
movsl
mov
add
push
mov
mov
leave
es
jg
stc
fdivs
fs
and
pop
mov
ret
pop
sbb
mov
test
outsl
je
movsl
mov
stos
ss
add
scas
into
insb
mov
add
lret
stos
enter
mov
mov
xlat
idivl
sbb
cmpsb
outsl
mov
shl
lret
or
cmp
leave
dec
stc
xchg
xchg
inc
xchg
ret
pop
dec
imul
lock
or
dec
test
mov
pop
scas
cmovo
push
sbbl
dec
push
pop
aad
decl
xor
push
mov
add
lcall
xchg
dec
daa
push
sbb
lea
lds
aaa
jecxz
jo
les
js
pop
xlat
cmp
push
push
lods
jmp
aad
test
push
mov
push
sub
jno
jbe
xchg
ret
or
and
sub
inc
movsb
xchg
xchg
std
leave
xor
mov
in
scas
nop
fnstcw
jbe
push
shll
fdivrs
push
dec
sbb
xor
pop
push
jl
in
mov
inc
int
mov
xchg
mov
rcl
ja
scas
sub
movsb
bound
or
cli
ror
jecxz
jb
adc
mov
push
loope
pop
iret
cmp
push
mov
add
inc
and
dec
xor
jno
aaa
call
mov
xchg
cli
movsl
rorb
mov
push
dec
pop
sub
cmc
fisttpl
imul
je
jns
arpl
stos
and
divl
mov
clc
mov
mov
jl
mov
inc
sti
xor
mov
fcoml
cmpsb
mov
inc
cmp
daa
lcall
fs
lret
fidivrl
mov
mov
cli
lods
ja
sbb
icebp
cwtl
xchg
idiv
inc
ret
inc
rorb
fwait
mov
es
xor
popf
jp
mov
jne
sti
jo
sub
js
shr
scas
sbb
add
scas
mov
cmp
lret
daa
incb
and
xor
cmp
mov
out
lock
sbb
pop
mov
jb
insl
push
adc
jns
out
inc
cli
mov
fwait
pop
push
push
vmwrite
cmc
lods
imul
scas
rcr
xor
mov
cs
or
lods
movsb
sub
cmp
ret
lds
rcll
and
adc
aas
hlt
push
xlat
inc
dec
dec
rcll
jecxz
loop
lahf
push
xchg
rol
jmp
pop
fwait
pop
mov
dec
lcall
rorl
mov
setns
pop
sub
dec
mov
shll
push
daa
int3
lret
pop
cltd
dec
dec
inc
inc
rorl
mov
icebp
popa
and
repnz
mov
jo
insb
pop
pop
ds
stos
jnp
or
aaa
lock
xor
xchg
stc
and
popf
test
fcomps
mov
xor
xor
dec
bound
in
push
ja
mov
loopne
push
and
jl
popf
lods
jnp
or
mov
hlt
shr
xlat
xlat
pop
fstps
mov
and
or
mov
idiv
imul
mov
lods
leave
out
mov
out
in
jp
test
stc
andb
daa
sahf
cmpsl
push
insl
xor
test
and
add
ret
and
hlt
or
jno
into
mov
inc
jb
lods
fsub
mov
lock
inc
push
mov
lahf
fsubrl
stos
rcrl
sarb
ret
lds
imul
lahf
pop
sbb
pop
rorl
loope
or
daa
sub
test
popa
dec
test
cld
cmp
sti
sbb
jbe
jg,pn
jb
pcmpeqd
fcom
sub
mov
mov
inc
aas
hlt
std
cld
cwtl
add
jb
mov
sahf
xchg
add
ffree
add
lahf
jns
lds
xchg
dec
mov
mov
xor
dec
or
imul
lahf
push
ljmp
add
stos
mov
add
je
inc
push
add
std
pop
fidivrs
mov
pushf
pop
xorb
das
sub
push
jl
xchg
fdivrp
scas
mov
or
and
sub
xchg
jnp
in
cmp
movsl
test
push
stos
or
in
cmp
and
insb
aaa
mov
outsb
xor
mov
dec
sar
sub
mov
int3
sub
sub
fs
fwait
xchg
cs
and
push
lds
jbe
xchg
inc
int3
pusha
lock
xchg
je
sbb
cmp
addr16
adc
aad
pop
pusha
push
push
fcoms
add
lods
js
dec
inc
xor
lahf
mov
adc
mov
pop
bound
ret
out
aam
mov
adc
adc
aam
push
mov
mov
repz
test
out
scas
inc
jge
fs
sbb
push
das
xchg
dec
bnd
es
sub
pop
outsb
testb
jp
clc
dec
mov
stos
cmp
sub
popl
enter
add
adc
jb
xchg
xor
inc
adc
imul
cld
notl
xor
xor
outsb
jae
cmp
and
movsb
xor
xchg
sbb
mov
pop
xor
pop
aam
jl
sahf
clc
xchg
or
push
mov
cmp
out
icebp
loop
inc
add
mov
sub
dec
xor
dec
xchg
shrb
xchg
jmp
clc
shlb
sub
dec
inc
incb
add
adc
sub
inc
adc
stos
dec
outsl
add
lahf
inc
outsl
dec
add
dec
pop
mov
je
stos
jbe
jbe
xchg
add
adc
jge
aas
nop
xor
inc
aad
out
dec
lods
fsubrl
test
cmpl
loope
add
mov
xchg
test
lods
nop
insb
jmp
ss
mov
cmpsb
sahf
ss
pop
push
addr16
scas
adc
iret
outsl
aas
jg
adc
and
push
add
ss
jl
and
dec
mov
mov
fildll
into
mov
push
fnsave
push
xchg
mov
sub
xor
push
call
inc
test
pop
insl
jne
ss
and
mov
jge
xchg
pop
pushl
shl
sbb
orl
push
push
push
scas
sbb
fdiv
xor
mov
adc
add
xor
mov
or
add
nop
loopne
xchg
mov
jecxz
add
out
jg
out
adc
loop
notb
sbb
xor
xchg
in
push
and
sbb
adc
jb
fmuls
stos
cmp
sbb
mov
or
rcl
push
xchg
mov
push
sub
adc
xchg
inc
xchg
mov
adc
or
mov
dec
cmpsl
push
jmp
sbbl
pop
mov
imul
pop
out
jae
push
out
push
ss
cmp
xchg
pop
mov
fsubs
or
rcll
mov
xchg
pop
cmp
call
sbb
loop
rep
loope
fcoms
fsubr
inc
stc
lret
ljmp
add
push
pop
xchg
jnp
or
mov
pop
lock
out
push
sub
data16
xlat
std
mov
mov
ficomps
out
cmp
insb
outsl
mov
cwtl
leave
inc
jno
movsl
jb
push
nop
mov
mov
sbb
sub
cmp
scas
hlt
outsl
addr16
inc
sub
bound
imul
mov
xchg
pop
lods
pop
movsl
pop
xor
xor
jo
jg
pop
loopne
add
insb
push
inc
mov
add
cli
outsb
jge
cmpsb
cmp
shr
scas
xor
xor
loop
sahf
xchg
rcll
js
xchg
add
adc
or
jmp
jmp
iret
cmpsb
inc
push
fiaddl
add
or
jp
fcoms
mov
dec
mov
push
out
fwait
xchg
cmp
bound
sahf
loop
jno
cmpsl
imul
mov
loopne
shrb
push
pop
xchg
clc
jo
scas
push
enter
fistpl
dec
loop
or
ljmp
out
cltd
mov
sub
push
sub
inc
mov
xchg
xchg
pop
mov
ret
test
push
dec
push
aam
fimull
hlt
hlt
int
loop
dec
push
inc
jmp
popa
mov
div
cmc
or
lods
push
sbb
stc
rcrl
ljmp
xor
mov
or
xlat
mov
in
sbb
inc
sub
faddl
icebp
xor
cmp
cmc
out
xchg
sbb
negl
out
test
mov
out
dec
out
sbb
push
add
sub
sbb
xor
js
imul
int3
gs
stc
out
lcall
sub
sahf
or
add
in
or
xchg
mov
fiaddl
in
push
pop
iret
fcomp
pop
iret
loop
fistl
stos
shlb
into
das
xchg
rorb
add
pop
test
mov
and
xor
sbb
ljmp
mov
push
mov
push
daa
mov
rclb
repnz
cs
cmp
mov
subl
ret
or
stc
jae
int
dec
stos
lock
pop
pop
lcall
xor
mov
stc
jecxz
cmp
mov
loopne
cs
aam
mov
sti
jbe
out
ljmp
nop
push
inc
test
cmp
xchg
mov
push
mov
mov
cltd
jo
inc
xor
adc
mov
shrl
daa
test
push
loope
out
add
mov
push
cmpl
sbb
mov
or
out
cltd
mov
roll
lret
dec
mov
dec
fidivrs
repz
lret
repz
mov
in
pop
push
dec
into
xor
mov
push
fbstp
lcall
pop
call
pop
mov
lds
mov
jno
jne
lret
rcrb
cmp
lret
push
lock
jl
cmp
mov
clc
push
push
xchg
call
push
adc
faddl
testl
adcl
or
aas
jb
add
inc
fs
fdivs
jecxz
cmpsb
or
cmp
push
stos
mov
movsb
mov
ret
jecxz
and
lea
add
push
scas
into
stos
xchg
out
mov
je
cmp
shl
or
stos
mov
dec
sti
push
sub
sbb
add
sbb
mov
push
sbb
or
mov
ljmp
inc
push
leave
cmp
adc
mov
push
iret
orb
sbb
adc
out
sarb
mov
push
rcrb
xchg
add
pop
mov
sbb
mov
movsl
inc
out
js
pushf
sbb
jg
or
jp
cld
or
mov
sbb
rolb
xchg
mov
mov
pop
pop
jo
jns
neg
pusha
in
insb
dec
sbb
dec
mov
mov
jle
sub
dec
sbb
cmp
test
int
pushf
psubw
xorb
adc
imul
jge
lret
pop
test
daa
imul
shll
call
sbb
and
aaa
jmp
sbb
in
cwtl
es
pop
lods
xor
test
and
or
sub
fdivs
jg
inc
mov
push
dec
and
ljmp
insl
pop
lods
inc
push
lea
push
ljmp
mov
mov
add
mov
inc
inc
sub
cmp
dec
das
mov
and
jge
call
cli
gs
inc
pop
pop
jp
aaa
mov
cmp
xor
sub
je
jo
jnp
out
jmp
aad
or
scas
imul
xchg
fsubl
sbb
xchg
xor
das
gs
iret
xor
inc
pop
cmp
mov
adc
mov
xor
cmp
add
or
pushf
adc
dec
sub
cmp
outsl
sub
orb
push
push
jge
xchg
inc
fmul
xlat
popa
test
shl
std
inc
movsb
bound
outsb
mov
and
int3
adc
popa
jnp
ds
jmp
xor
imul
mov
stos
jo
adc
sbb
stos
enter
jmp
cwtl
mov
sbb
in
xchg
jp
js
dec
jmp
imul
lahf
xchg
cmp
push
add
mov
cmp
mov
pop
out
xchg
push
lea
shll
aad
popa
int
inc
cmp
xchg
push
cli
pop
mov
sub
fcoml
out
xchg
push
sti
lods
push
inc
mov
jmp
sub
mov
out
lret
xlat
iret
add
sub
enter
rorb
cmp
push
loope
pop
fmulp
out
out
inc
xor
adc
lcall
loop
popl
xchg
jne
jmp
mov
mov
subl
mov
or
gs
cli
adc
inc
xchg
cwtl
jbe
mov
sbb
pop
adcl
inc
ret
jp
stos
sub
icebp
xchg
xchg
mov
in
mov
stos
mov
rcrl
aam
in
mov
mov
cwtl
mov
adc
ret
cltd
pusha
mov
mov
or
popf
cmpb
ret
loope
loopne
imul
fs
mov
xor
ljmp
icebp
js
dec
add
jp
outsb
lahf
cmp
pop
xchg
adc
stos
scas
pop
push
mov
mov
inc
jecxz
cltd
push
or
sub
js
jb
jp
rcrb
imul
dec
sbb
or
jecxz
xchg
cmpsl
sarb
std
movl
inc
scas
mov
imulb
ret
nop
insb
inc
cmpsl
loope
shll
stos
hlt
daa
adc
loop
xchg
ss
pop
xchg
clc
imul
orl
sbb
add
inc
or
mov
out
js
cmp
sahf
sub
lret
xor
aam
and
ljmp
les
ficoms
mov
or
nop
call
adc
sub
sbb
leave
xchg
imul
xor
or
push
or
pop
les
or
hlt
cmp
mov
lret
pop
in
stos
leave
or
adc
sarb
insb
pushf
mov
ret
jae
sub
lahf
ret
stc
fildl
hlt
out
fs
push
pusha
shrl
fwait
or
into
cmpsl
mov
lahf
aam
or
into
mov
pop
mov
inc
fidivrs
test
mov
orl
cld
movb
inc
insl
mov
iret
daa
jns
lods
dec
inc
or
dec
jnp
cli
in
dec
xor
jl
jne
fisubs
mov
fisubl
cmpb
fcmovnb
rcrl
enter
inc
mov
push
adc
dec
fdivl
enter
and
dec
xor
punpckhwd
sbb
push
jmp
testl
push
js
inc
out
lock
ljmp
lock
movsb
sbb
movb
aaa
xor
pusha
scas
xchg
mov
adc
push
je
pop
jmp
sahf
add
pop
dec
mov
clc
sub
lds
pop
xor
push
dec
sub
inc
dec
xchg
or
fwait
sbb
les
mov
sbb
in
cs
les
inc
ljmp
xchg
cmp
xor
sbb
into
movsl
and
fwait
movsl
push
testb
mov
jo
fisttps
jbe
dec
addr16
dec
add
push
fnstsw
pushf
fs
mov
mov
addr16
or
mov
stc
add
push
std
ss
inc
jecxz
fidivl
test
js
adc
and
mov
or
mov
int
pusha
push
loope
decl
dec
or
and
sbb
push
push
cld
fsubrp
sub
loope
pop
movsb
xor
cli
pop
add
add
lret
xor
insb
addr16
mov
fsubs
mov
mov
add
movsb
ret
mov
lcall
ljmp
sbb
adc
mov
dec
aaa
into
repnz
lahf
iret
data16
test
mov
in
xchg
icebp
adc
sub
dec
or
inc
pusha
mov
sar
movsb
mov
inc
xlat
or
insl
test
je
sarl
aas
inc
pop
das
jge
xchg
pop
adc
sub
mov
bound
sbb
pop
pop
push
push
pop
cltd
lods
jne
inc
cltd
pop
ljmp
sub
pop
mov
ficomps
loopne
inc
aas
movsl
jne
pop
pusha
addr16
call
mov
dec
xor
lods
xchg
ret
int
add
nop
xor
les
lods
xlat
sbb
sub
movsl
xor
test
mov
ror
cmp
or
xor
repz
mov
or
mov
mov
mov
cmpb
sahf
in
popa
mov
xchg
mov
jg
inc
test
cmp
nop
inc
outsb
sub
push
pop
add
jl
not
mov
pop
jg
ror
dec
adc
xor
push
mov
cmp
add
es
dec
test
rorl
into
imul
in
imul
and
mov
sbb
dec
push
mov
jb
je
daa
jle
xor
fimuls
jg
cmp
jb
test
push
jle
adc
dec
push
xchg
xorb
adc
mov
loopne
dec
sbbb
push
scas
push
scas
rcll
enter
int
mov
mov
outsb
mov
in
or
and
jp
sub
lahf
adc
mov
xchg
lock
lods
push
cmc
sbb
addr16
daa
incb
outsb
aad
pop
ret
push
jne
mov
shll
movsb
leave
adc
push
popa
std
lock
out
fistl
imul
and
ljmp
inc
addb
cld
imul
loop
std
xchg
loopne
gs
xchg
adc
inc
dec
sbb
lret
xchg
mov
and
mov
xor
leave
push
iret
mov
iret
cmc
movsb
mov
stos
add
jg
mov
mov
xor
add
frstor
into
sarb
icebp
xlat
shlb
mov
aad
jl
cs
pop
add
imul
fs
add
inc
push
add
mov
mov
push
or
fs
out
inc
cltd
pop
dec
out
imul
sahf
mov
and
cmp
iret
push
bound
ds
mov
loop
lea
outsb
dec
sbb
cmpb
fidivrl
idiv
mov
xchg
fisubrs
loope
sbb
add
xchg
test
das
pop
pop
mov
cli
call
mov
sub
or
dec
dec
cs
vmread
lahf
dec
mov
cmpsb
cmp
lea
inc
inc
pop
inc
inc
lret
movsb
aad
mov
dec
mov
xlat
clc
or
fwait
in
mov
out
cmpsb
hlt
mov
sti
ljmp
xor
and
aas
push
jnp
jno
dec
movsl
lahf
sub
into
xor
fidivl
movsb
bound
mov
roll
mov
roll
inc
jmp
out
push
sub
push
and
lahf
mov
pop
aam
xor
add
cs
mov
jb
lahf
loope
outsl
ja
stc
mov
repz
inc
cmp
add
push
cmp
pop
xor
lods
pop
inc
lea
iret
or
jne
and
repz
xchg
push
lret
cmpsb
and
sub
inc
pop
cmp
xor
sub
ret
pop
iret
pop
sahf
fstps
test
adc
loopne
inc
fdivrp
push
jl
mov
pop
push
lahf
cmp
or
gs
rorl
add
adc
lea
mov
xchg
dec
ss
leave
fucom
js
mov
cmp
push
inc
cltd
rolb
mov
xchg
dec
dec
dec
jmp
sub
sub
fs
mov
cmp
or
xchg
fildll
fidivrs
jns
sub
sbb
push
insb
lods
sub
push
das
pop
lret
pop
bound
mov
jg
es
mov
in
into
clc
xchg
jge
inc
aaa
lock
ss
addr16
add
jle
sub
loop
fldcw
dec
adc
or
jecxz
lahf
loop
insl
into
push
hlt
and
or
fstps
imul
arpl
das
sbb
lods
shll
int
sbb
loop
xchg
cmpsl
sbb
inc
es
icebp
sub
mov
dec
mov
and
or
aas
fcos
rorb
test
rcll
nop
jne
and
pop
popf
add
cmc
mov
movsl
pop
movsl
mov
pusha
insb
mov
ja
ret
int3
test
in
push
mulb
shl
shlb
sbb
jmp
push
faddl
and
xchg
inc
jecxz
shll
stos
cmp
pushf
xchg
inc
xchg
rcll
nop
push
pop
rcrb
inc
jecxz
xchg
std
adc
cmp
fiadds
mov
repnz
mov
add
rorl
inc
jbe
test
mov
int3
cmpsl
add
xchg
and
cmp
or
cmpsb
xor
and
xor
and
subl
daa
jns
insl
sarl
or
imul
repz
fsubl
push
xchg
mov
idivl
add
dec
push
lcall
mov
cmp
push
mov
inc
push
add
mov
and
imul
push
sbb
ss
adc
mov
lea
sub
mov
xchg
sbb
dec
mov
add
pop
sbb
fldt
sub
adc
lods
cmovb
mov
lcall
mov
jecxz
pop
xchg
jno
add
std
movsl
mov
push
adc
bound
xorb
add
mov
push
fwait
sub
sub
shrb
xor
inc
push
jae
das
int
lock
loope
sub
jmp
cmp
arpl
cmp
mov
mov
cmpsb
sub
test
mov
pop
pop
hlt
push
jp
cwtl
aad
jg
fld
loope
arpl
stc
rcl
pushf
jnp
inc
adcl
lret
ds
lahf
cmpsl
or
fcompl
xor
push
cwtl
xchg
push
sbb
iret
fisubrs
aad
cmpsl
cld
inc
icebp
jo
or
add
pop
sbb
les
stc
test
jno
add
inc
jns
jno
mov
aaa
in
or
out
jnp
test
adc
shl
jnp
insl
mov
push
mov
cmp
fimull
test
jbe
xchg
icebp
clc
test
push
push
test
or
xlat
inc
fiadds
nop
xchg
in
or
or
inc
or
mov
jl
xor
jp
mov
push
lret
mov
and
std
mov
mov
rolb
pop
mov
or
sbb
dec
ljmp
ja
loop
mov
leave
shrb
and
and
bswap
in
in
mov
data16
pop
hlt
add
or
jb
xchg
xor
mov
fwait
xor
sbb
cmc
xlat
jge
rclw
stc
lock
pop
xchg
in
cmp
bound
pop
aas
ds
ss
dec
inc
push
ja
int
sub
bound
dec
xchg
test
mov
add
or
push
mov
mov
out
lods
mov
dec
and
shll
sbb
xor
dec
mov
push
roll
pop
xchg
adc
sarl
pushf
pop
mov
xor
jecxz
add
movl
aas
dec
lock
mov
xchg
in
pop
dec
jns
xor
xchg
outsl
pushf
popf
jp
pop
xchg
movsb
insb
jno
pop
or
and
inc
push
jnp
push
xchg
xchg
jmp
push
or
jae
mov
pop
outsl
sarl
ret
orl
mov
fstl
sbb
cmp
outsb
mov
cmc
xchg
add
aaa
ror
mov
movsb
enter
je
push
std
mov
sub
xchg
add
repz
push
and
das
jae
ljmp
mov
mov
repnz
mov
mov
mov
adc
or
jecxz
cmp
and
cmpl
ljmp
test
mov
mov
jno
push
inc
rcrb
mov
je
pop
dec
sub
test
mov
sub
or
outsl
jg
repnz
mov
sbb
mov
shl
testl
xchg
jo
inc
cmc
pop
std
clc
xchg
outsb
jne
movsb
dec
add
addr16
movsl
lods
mov
in
xor
xchg
pop
jmp
dec
clc
sub
imul
xchg
xchg
adc
pop
push
push
push
push
jg
inc
or
mov
push
test
cmp
pop
leave
mov
sahf
and
dec
in
in
and
xchg
mov
sub
mov
out
rorl
out
adc
sti
inc
mov
out
inc
or
ljmp
rcrb
lret
cmp
iret
std
mov
xor
popa
jo
ficompl
inc
mov
dec
sub
sahf
lods
pop
ljmp
cli
call
xchg
dec
dec
cli
mov
iret
mov
iret
push
jl
pushf
cltd
adcl
mov
xchg
xor
push
fiadds
insb
sub
mov
or
data16
scas
push
enter
sbb
aam
or
popf
mov
lahf
cwtl
fisttpll
xchg
mov
pop
mov
cli
adc
test
shll
addb
je
sbb
test
jbe
enter
or
and
and
mov
xchg
ss
arpl
or
gs
stos
add
cmp
loopne
add
jb
dec
movsb
mov
lea
fwait
mov
movsb
mov
xchg
cmpsb
adc
pop
or
outsb
mov
sbb
mov
mov
loopne
sub
adc
sbb
sarl
sub
and
sbb
ss
ja
daa
imul
or
cmpsb
mov
call
push
stc
ret
push
cwtl
pusha
cmp
test
das
mov
pop
jns
mov
mov
push
jmp
sub
loope
pushf
inc
jno
jle
mov
movsb
jae
push
fwait
testl
imul
pop
cmc
push
jle
pop
sbb
xor
std
add
clc
or
nop
add
jno
push
inc
mov
or
arpl
jecxz
xor
out
test
push
pop
test
push
lret
movsb
das
jge
es
inc
aaa
inc
insb
sub
inc
fiaddl
inc
adc
lods
mov
sub
lock
and
xor
dec
push
ret
jecxz
addr16
and
sub
aam
test
popf
cltd
inc
mov
ficomps
mov
insl
ret
sbb
pop
sbb
das
bound
sbb
loop
fbld
dec
pop
lret
je
add
arpl
lock
pop
hlt
mov
xor
add
mov
push
mov
mov
pop
sub
mov
lock
fadd
shl
fstpt
push
sub
inc
push
aas
aad
jb,pn
jge
call
cmp
pop
cmp
xchg
pop
push
sti
jmp
call
fwait
stc
pop
pop
cwtl
push
add
movsb
stos
leave
lret
sub
scas
jb
cmp
xchg
das
adc
fidivs
jmp
fisttpl
scas
add
es
lock
push
lcall
push
push
push
mov
sub
xchg
or
nop
xchg
mov
pushf
and
jmp
inc
sub
inc
ret
insl
test
loope
leave
jnp
rorb
or
movsb
ffree
test
int
adc
xor
insb
inc
or
xlat
xlat
in
out
mov
outsb
adc
mov
outsl
cmpsl
jge
movzbl
push
movsl
scas
mov
pop
test
mov
add
cli
shlb
mov
jmp
push
call
popa
xor
scas
mov
outsb
jle
aas
movsb
add
pxor
pop
bound
cmc
mov
adc
lods
jmp
idiv
aas
mov
ja
fs
jp
in
sub
into
mov
push
xor
iret
mov
cmp
xor
outsb
das
ja
test
popf
stos
xor
push
arpl
cwtl
cmp
lcall
inc
lods
xchg
fdivs
add
stos
std
sbb
adc
sub
es
xor
or
or
push
inc
sub
dec
lds
lret
mov
enter
mov
aad
inc
adc
add
inc
ja
in
dec
in
inc
nop
mov
test
dec
mov
and
pop
dec
push
aaa
inc
icebp
out
jae
hlt
ret
pop
push
dec
mov
es
leave
popa
fcom
out
imul
and
xlat
flds
pop
push
or
fists
mov
dec
ljmp
sbb
popa
js
hlt
mov
xchg
cmpsl
into
mov
add
inc
jbe
adc
popf
psubd
mov
mov
lods
push
test
lahf
and
pop
outsl
stos
mov
loop
sub
hlt
xor
mov
cmpsb
jecxz
aam
add
repz
aaa
or
jno
push
fcomip
dec
sti
cmp
in
xchg
subb
sbb
pop
pop
or
jg
rorl
push
leave
xchg
mov
or
shrb
jecxz
rol
imul
sbb
sub
mov
adc
loop
and
rol
cld
in
push
xor
pop
fidivs
xor
aaa
or
jmp
push
repz
xchg
loopne
out
pop
ljmp
xor
push
mov
leave
pop
adc
add
test
mov
push
pop
dec
fs
jg
cmp
and
or
jae
jne
andb
jb
popa
jns
mov
cmp
pusha
add
sbb
mov
out
leave
out
pop
push
ficomps
xchg
imul
xor
mov
xchg
insb
add
or
scas
mov
aam
mov
mulb
sbb
in
jmp
aaa
cwtl
popa
pop
int3
cmp
jno
xchg
mov
inc
rcrl
mov
sbb
popf
mov
add
sahf
push
adc
push
cmp
lret
leave
dec
mov
jo
xchg
imul
aas
xor
mov
push
adc
mov
roll
scas
mov
xor
pop
js
call
inc
jb
sbb
mov
pop
fdivrs
es
push
dec
xor
dec
mov
mov
mov
push
pop
ss
cmp
test
fmul
jne
dec
fldt
aad
inc
push
push
roll
xchg
imul
test
jo
out
ror
xor
lods
sub
push
rcrl
pop
sahf
fsqrt
pop
test
adc
jle
cmc
out
cmc
pop
orl
and
mov
xchg
sbb
shl
fwait
pop
scas
fnstcw
dec
sbb
add
push
push
lods
pop
pushf
xlat
pushf
cwtl
js
xchg
aam
push
inc
dec
jno
dec
mov
cmpsb
and
fisttpll
sub
stc
xor
outsb
daa
add
dec
addr16
xchg
test
dec
das
or
xor
daa
loope
popa
add
sahf
mov
sahf
xchg
inc
movsb
test
or
push
jle
pop
sub
push
insb
push
lcall
stc
mov
arpl
nop
dec
lods
mov
adc
pop
call
cli
cmp
shlb
adc
inc
cwtl
sarb
repnz
mov
repz
mov
push
call
and
or
mov
ficompl
or
mov
cmpl
inc
mov
add
adc
jmp
xchg
pop
adc
popf
push
hlt
and
in
sbb
repz
push
out
lret
mov
adc
or
xchg
lret
fmull
lret
es
mov
arpl
addl
in
mov
popa
pop
stc
xor
imul
inc
or
bound
sarb
les
aaa
push
pop
es
cmp
movsl
add
push
scas
inc
mov
cmp
insb
jmp
les
xchg
aad
aaa
push
cmp
imul
pop
pop
cld
add
test
fidivl
add
stos
je
mov
sti
inc
jo
push
push
dec
add
leave
jp
jo
aas
dec
mov
pusha
cmp
repnz
add
push
push
sbb
imul
in
aaa
pop
xor
pop
mov
sarl
mov
fisubrl
jbe
xchg
mov
enter
xor
inc
adc
test
mov
addr16
lods
int3
test
clc
repnz
xor
std
ret
loopne
push
jecxz
jno
mov
mov
and
scas
jns
xlat
outsl
mov
add
sahf
xchg
ja
js
mov
xchg
cmc
out
fistpll
jns
or
push
xchg
sub
dec
pushf
shld
sbbb
test
jle
movaps
xor
add
icebp
icebp
pop
push
daa
out
xor
in
pop
shll
pop
ljmp
repnz
lds
fidivs
out
scas
lret
mov
cs
stos
jb
jmp
mov
add
scas
xor
sbb
sarl
mov
push
testb
popa
xchg
cld
dec
xor
fiaddl
addr16
in
cmp
sub
and
jp
jmp
pop
jno
xchg
das
sbb
stc
pop
inc
jmp
fisttpll
into
lahf
insl
lea
xchg
mov
enter
jg
add
adc
sub
mov
or
mov
shrl
add
fdivr
xor
push
mov
icebp
aad
or
xor
call
inc
dec
push
outsl
xchg
push
lods
fcomi
lock
jle
mov
adc
repnz
outsb
mov
pop
cmp
adc
popa
lcall
cmp
js
mov
add
push
sahf
or
lahf
repnz
imul
in
jge
jmp
mov
jns
insl
push
push
cmp
jg
xchg
je
jnp
ret
or
jp
ret
cmpsl
fsubr
pop
mov
lods
cs
stos
add
jo
mov
inc
xor
xchg
jg
inc
ljmp
jge
mov
sub
jno
jno
or
dec
loop
mov
gs
pop
cmc
out
xor
and
lcall
lcall
inc
pop
xor
sub
aad
mov
sete
rcl
jne
in
xchg
mov
push
sub
mov
data16
pop
xchg
xchg
stos
and
rcrb
cld
inc
sbb
cld
outsb
aam
push
insl
aas
add
fstpl
jno
mov
fsubl
fdivr
out
pop
lahf
pop
or
lods
outsl
and
jg
jno
mov
pop
fildl
je
xchg
lock
mov
jg
cmp
data16
ljmp
cmpsb
notl
bound
fistps
push
adc
mov
sbb
inc
adc
lcall
aad
adc
mov
xchg
mov
ss
adc
repnz
inc
push
adc
cmc
pushf
push
dec
push
pusha
or
cli
pusha
pop
inc
jge
stos
shll
inc
xorb
in
sbb
imul
push
dec
test
jns
mov
lods
insb
es
xchg
js
int
xor
loop
push
cmp
aas
lcall
fmull
inc
in
rcrl
mov
mov
adc
data16
jnp
in
cltd
gs
int
orl
test
repz
jae
adc
xchg
aas
xchg
cmp
mov
add
xlat
sbb
mov
ret
inc
shll
lahf
or
sub
and
cltd
sbb
ret
mov
jle
movsb
insl
or
xor
pushf
push
test
adc
sbb
jne
movsb
push
sarl
movsb
mov
sbb
add
cmp
push
mov
outsb
pop
mov
loopne
movsl
ficompl
jne
mov
jo
push
adc
addb
inc
cmpsl
xor
cwtl
fidivrl
adc
xlat
mov
cltd
pop
pop
rolb
push
pop
xor
mov
aad
fiadds
out
call
and
sbb
mov
shl
xor
mov
addr16
xchg
mov
cmp
xorl
mov
dec
lock
push
adc
mov
bound
and
xchg
test
xlat
cmp
or
xchg
sarb
movsl
jmp
nop
popf
bnd
xchg
negl
hlt
pop
insl
sbb
inc
movsl
add
adc
das
sbbl
fs
xor
and
push
sbb
lret
and
scas
test
test
pop
faddl
mov
push
pusha
mov
sub
or
loopne
movsb
mov
mov
and
les
out
xor
lods
push
mov
pushf
adc
sbb
dec
add
iret
xchg
loopne
pop
int3
mov
mov
sbb
or
decl
mov
xchg
pop
push
stos
jmp
lods
jle
fisubs
sahf
cmp
loopne
cmp
mov
xchg
andl
fnstenv
idivb
add
ljmp
daa
mov
aaa
mov
pop
rcr
orb
test
shlb
inc
xlat
mov
sbb
out
enter
and
aad
push
lret
xor
add
je
aaa
out
fwait
mov
jnp
or
subb
jns
pusha
je
filds
lret
in
movsl
fldl
or
cmp
push
pushf
and
xchg
pop
mov
sub
or
sbb
xor
andl
jecxz
lcall
loope
adc
mov
add
push
fnstenv
jno
sub
out
imul
insb
dec
movsl
sub
icebp
mov
jns
or
mov
pop
mov
hlt
pop
ss
mov
mov
or
cmpsb
ja
testb
ror
mov
jp
mov
mov
or
mov
xchg
dec
dec
inc
sti
xlat
fistpll
or
or
es
imul
rclb
repnz
mov
imul
pushf
mov
xor
or
fsubrl
gs
fcmovb
stos
dec
xchg
aaa
in
mov
pop
adc
cmp
push
es
xor
es
jo
add
cs
in
fiaddl
rcr
push
movsb
or
data16
sub
mov
push
mov
and
nop
ja
or
aam
xchg
cmp
aaa
in
dec
shl
mov
add
dec
cmp
dec
cvtpi2ps
cmp
push
jb
cs
mov
push
sbb
cmp
fmull
in
out
ja
inc
dec
iret
gs
out
mov
mov
inc
dec
jo
cmpsb
imul
inc
add
ds
and
lret
ljmp
imul
fs
fcmovb
fisubrs
scas
and
mov
and
movb
xchg
cmc
jb
in
push
pop
mov
clc
jp
das
loop
lds
xor
repz
fsubrs
dec
js
xchg
push
pop
xchg
push
sarb
or
sti
cmp
out
pop
mov
cmp
mov
push
das
sbb
mov
inc
jnp
lods
into
aas
mov
mov
lds
shll
adc
lock
aad
mov
and
add
push
movsb
fnsave
lret
pop
testb
inc
loope
into
pop
mov
ret
jge
mov
sti
xchg
pop
iret
out
mov
pop
lea
push
fwait
jmp
arpl
pop
pop
lea
jo
lea
cld
xor
js
jb
ljmp
sbb
or
or
je
push
cmpsl
stos
repz
dec
xor
iret
out
and
xchg
adc
xor
adc
sub
mov
cmp
push
mov
sbb
cmp
push
sbb
loope
add
imull
xor
call
push
test
jmp
xor
mov
ljmp
pop
pusha
inc
leave
jecxz
incl
call
push
lods
mov
jbe
dec
rcr
repz
push
test
cmpsb
pop
je
out
cwtl
jo
sub
sahf
mov
cmp
or
jb
mov
xchg
push
inc
jle
jno
gs
jg
gs
sbb
xor
stos
icebp
adcb
out
ret
sbb
outsb
inc
dec
repz
or
push
push
outsl
sbb
call
pop
popa
inc
imul
out
jecxz
dec
pop
mov
pop
xchg
adc
and
jne
cmc
add
jae
cmpsb
push
dec
jmp
sbb
test
xor
dec
iret
repz
fwait
inc
or
dec
jmp
cmp
loop
jno
mov
lea
xlat
inc
ds
mov
and
fmulp
jecxz
xchg
int
mov
jns
add
andb
pop
mov
fwait
stos
stos
ret
sti
push
jne
shr
lods
cmp
mov
mov
jle
call
dec
inc
movsl
fld
hlt
movsl
and
adcl
push
sbb
or
fsubp
ljmp
fists
push
sub
push
dec
sar
inc
sbb
cmp
aam
push
jmp
xor
mov
mov
cwtl
push
js
fsubr
mov
sbbb
xlat
xchg
nop
pop
test
add
jae
dec
mov
ror
dec
xor
mov
test
in
adc
xchg
lock
pop
mull
sub
sbb
in
jmp
lret
data16
sub
fs
mov
cld
jae
pushf
outsb
cltd
or
mov
test
jg
pop
ficoml
pop
call
lcall
rcrl
sti
pop
adc
out
push
es
test
fcomps
push
push
rolb
inc
das
cmp
fsubl
xchg
sub
and
int3
and
mov
xchg
push
mov
cmp
mov
push
xchg
dec
das
cmp
iret
mov
clc
inc
mov
bound
sbb
xlat
lahf
add
icebp
and
pop
push
repnz
std
mov
pop
sub
push
fbld
ret
in
fstps
ret
test
enter
iret
dec
insb
jno
lods
incb
xchg
and
cwtl
call
stos
cmpsb
fstpl
mov
xchg
adc
sbb
push
xchg
js
jnp
jbe
shl
and
movsb
pop
adcb
loopne
push
loop
gs
add
mov
div
cmp
ljmp
clc
push
test
frstor
inc
test
cltd
xlat
push
fsubl
sub
popa
je
xor
daa
out
vmovq
rorl
dec
in
negl
add
loop
mov
sti
sub
sub
or
xchg
jp
shrb
push
jmp
pop
into
daa
lds
jmp
int
pop
xchg
and
notl
mov
and
ret
arpl
pop
pop
cmp
adc
test
es
test
ss
hlt
mov
jae
push
mov
xor
dec
hlt
out
rorl
aas
aad
in
pop
sarb
sbb
js
test
lods
mov
pop
xchg
das
loop
adc
lahf
adc
or
ret
push
mov
pop
mov
enter
adc
das
pop
repz
sbb
lds
rolb
jns
int3
adc
movsb
mov
mov
fisubl
fcompl
pop
das
mov
and
ret
mov
and
push
sub
mov
adc
cmp
outsb
loopne
sbb
xchg
in
sbb
mov
jge
outsl
cmpsl
push
out
pusha
cmpsl
push
xchg
cmp
repz
and
aam
jecxz
aad
shlb
ljmp
aaa
xchg
sub
jecxz
xchg
xchg
getsec
int
stos
aaa
inc
mov
sahf
dec
je
hlt
lret
push
in
add
or
add
mov
rcrl
aam
inc
out
movsb
lods
mov
or
and
push
test
mov
es
or
shlb
mov
push
jb
dec
inc
xor
mov
bound
ficompl
loop
mov
loopne
in
scas
and
xor
add
and
jae
mov
jge
sbb
cltd
test
in
iret
scas
pop
ja
cmp
je
aas
cs
mov
test
cmp
rcll
push
cwtl
test
hlt
xor
sbb
loopne
push
aad
inc
mov
out
out
fsts
mov
mov
inc
push
outsl
test
lds
sbb
mov
js
adc
imul
xchg
fisttps
mov
popf
jno
jno
inc
push
lcall
repz
cli
arpl
mov
push
jnp
iret
push
stos
lea
sbbl
out
and
push
cmp
ja
xor
mov
push
sub
arpl
sbb
aad
rcrl
dec
adc
cmp
je
xor
std
js
stos
dec
dec
mov
into
daa
dec
lea
push
shlb
in
mov
xchg
add
mov
dec
cld
pop
xor
addl
dec
cmp
push
lods
stc
jnp
sbb
inc
and
loop
out
lret
inc
idivb
lahf
xor
lret
ret
mov
cmpsl
icebp
outsb
int3
and
push
dec
add
adc
out
mov
sub
sub
dec
lods
mov
dec
ja
mov
dec
mov
cmp
xor
sub
inc
push
xchg
jns
enter
fwait
mov
loope
ljmp
loope
jno
lcall
fistl
or
mov
ret
pushf
lods
ret
enter
cld
sbb
jmp
stos
int
pop
decb
mov
adc
push
inc
aam
pop
out
cwtl
fdivl
loope
iret
ficompl
and
movsl
jmp
push
mov
mov
lea
repnz
repz
cs
lret
xor
sbb
xor
push
shl
cltd
adc
loope
ret
add
mov
out
sub
pop
fisttps
mov
inc
incl
push
dec
cmp
sti
sbb
mov
ficoml
or
ss
xlat
push
jo
push
dec
popa
add
int3
faddp
std
jmp
xor
popa
arpl
lods
or
outsl
adc
aas
test
repnz
scas
cld
pushf
jp
sub
pop
fs
inc
jne
mov
pop
mov
sti
pop
mov
mov
ds
push
dec
ss
jns
xchg
xchg
mov
aad
add
jl
dec
dec
push
enter
adc
rclb
mov
scas
push
call
lods
lock
fistps
fs
xchg
xlat
loope
add
ja
pop
in
jae
pushf
push
cmpb
inc
inc
in
and
mov
cwtl
or
in
je
or
cmp
xchg
adc
adc
mov
xor
xchg
shll
push
fs
es
inc
loopne
or
mov
mov
sbb
xchg
rep
shrl
sbbl
inc
cmp
addr16
ljmp
push
mov
jnp
push
or
sbb
cmp
mov
cmpsb
or
into
jne
add
mov
cmp
lcall
sbb
daa
ljmp
cwtl
in
and
mov
fmull
jb
fwait
leave
jle
sti
cmp
push
aaa
jecxz
out
jno
xor
lcall
push
jnp
aad
or
xchg
pop
dec
jmp
enter
add
and
cs
daa
pop
dec
cld
cld
inc
add
pushf
add
push
or
lret
add
ss
jo
addl
out
xchg
add
push
repnz
xor
mov
adc
aam
int3
inc
adc
mov
jg
pop
dec
repnz
adc
outsb
aam
jp
pop
jbe
lcall
cwtl
pop
cmp
jae
call
xchg
dec
jb
icebp
push
jno
push
push
xchg
stos
out
xchg
pop
hlt
sbb
jmp
add
leave
mov
cmpsb
mov
mov
popf
pop
push
push
dec
jne
or
ss
sti
xor
mov
mov
mov
outsl
dec
cmc
js
loop
fstl
imul
mov
dec
sti
jo
fimull
add
rol
notl
push
inc
xor
cmp
mov
cmpsl
or
ffree
insb
or
sti
mov
test
jp
cwtl
pop
repz
adc
xorb
mov
pop
stc
sbb
add
jp
or
cmc
xchg
mov
lods
fcmovnb
xchg
out
inc
inc
cltd
add
xor
sbb
inc
test
test
sub
leave
push
jp
jl
sub
ret
push
mov
pop
dec
pushf
xchg
inc
adc
sbb
int3
in
outsl
movsb
addr16
jle
jmp
sbb
jne
shll
jle
dec
push
dec
push
pop
mov
dec
and
mov
mov
dec
jmp
enter
jo
orl
push
jmp
or
xor
pop
out
cld
xchg
mov
je
xor
pop
jl
call
rcrl
dec
mov
fcoml
inc
adc
dec
cmp
hlt
add
or
inc
add
jno
push
daa
aad
mov
xchg
inc
stc
xor
dec
cmp
rolb
rcll
in
and
pop
jne
lahf
mov
xchg
push
xor
jp
cli
cld
cmp
lret
fwait
rorl
dec
lea
les
int
fstp
add
jno
rorl
int
jnp
mov
push
adc
test
movb
cld
ret
bts
pop
lret
adc
je
pop
ds
lea
adc
sub
inc
mov
dec
in
das
push
and
xor
xchg
out
sar
ds
aam
jnp
clc
mov
out
pop
scas
sbb
mov
movsb
adc
les
test
ror
push
sub
or
pop
call
test
jb
dec
inc
cltd
sub
push
mov
aam
les
xchg
cld
xor
repz
lret
inc
sub
test
enter
mov
ficoms
adc
jae
lods
adc
pop
jle
jno
pusha
push
faddl
and
dec
or
cmp
pop
push
pop
push
notl
dec
ds
jmp
jbe
loope
push
in
and
rcrb
dec
and
call
adc
aaa
mov
pop
popa
or
inc
lahf
jmp
jae
pop
ja
sbb
inc
es
in
or
out
adc
mov
inc
cmc
xchg
xchg
jb
movsl
cltd
repnz
mov
dec
mov
pop
scas
mov
fldlg2
push
in
stos
in
sub
cmp
nop
clc
dec
stc
pusha
sub
xor
jmp
inc
mov
outsl
repnz
add
mov
push
pop
enter
xor
add
push
inc
xor
mov
adc
dec
xchg
mov
loopne
cli
push
mov
insb
data16
sarb
xchg
popf
push
mov
enter
pop
negl
fsubrl
mov
lock
mov
dec
nop
cmpsb
div
dec
inc
dec
mov
int3
mov
fst
xchg
stc
outsl
mov
sub
outsb
lret
gs
fistps
xor
and
cltd
mov
lock
pop
rcrl
stos
and
mov
xor
outsl
push
js
cmp
xchg
fs
mov
xchg
in
lods
popa
adc
js
pop
inc
jecxz
dec
mov
popw
insl
and
movsl
std
cmpsl
cltd
int3
add
dec
push
sahf
dec
les
pop
jns
inc
jp
or
in
xlat
push
pusha
inc
dec
punpcklbw
mov
les
je
or
int3
pop
cmp
repz
sbbb
sub
pushl
fisubs
dec
rclb
fisubrs
int
outsl
push
sar
push
iret
pop
lods
decl
push
call
js
jae
pop
iret
adc
dec
sbb
lea
adc
psrld
jb
inc
popa
xor
shrb
cld
jg
mov
inc
xor
mov
add
pop
jg
lds
cmpl
into
sarb
int
out
xchg
int3
sarb
mov
xchg
mov
pop
subl
xlat
inc
pop
push
xchg
outsl
mov
shrb
insb
xchg
add
push
test
push
mov
fsubs
and
add
xor
push
dec
sbb
inc
inc
xchg
movsb
add
xchg
xlat
adc
imul
rol
mov
repnz
xchg
insb
popf
jecxz
pop
mov
ds
xorb
shr
dec
mov
mov
fadd
adc
stc
call
ds
ljmp
imul
pop
in
add
dec
ss
fdivr
repnz
mov
lcall
stos
jl
pop
fistl
bound
sbb
inc
mull
shrb
mov
pop
mov
xchg
mov
dec
movsl
adc
inc
lock
scas
gs
xor
ds
mov
mov
mov
inc
cmpb
xor
out
mov
mov
sub
cmp
mov
fnsave
xchg
call
dec
cli
sti
sub
out
sbb
repz
call
xor
xchg
push
mov
rorl
ss
sub
mov
mov
or
sti
leave
aaa
test
int3
outsb
nop
mov
out
push
or
xor
dec
push
mov
inc
cwtl
dec
out
cmp
dec
arpl
repnz
stos
sbb
jbe
or
xchg
repnz
outsl
ljmp
fnstsw
jge
mov
cwtl
mov
mov
push
mov
and
or
pushl
and
dec
pop
xchg
mov
push
jg
add
xor
adc
mov
stc
mov
sbb
xchg
mov
cmpsl
in
pop
ss
ret
cmp
loope
icebp
lock
or
test
shrb
iret
and
mov
pop
dec
push
mov
cld
pop
jge
adc
jno
loop
es
scas
popa
adc
nop
std
inc
sub
mov
ret
data16
or
int
bound
dec
test
pusha
sbb
fadds
aam
outsl
jg
sahf
dec
popa
mov
out
fldl
lds
adc
int3
xchg
je
sbb
insb
cmp
cmc
xor
rclb
cmp
lods
leave
inc
dec
fcompl
push
adc
pop
hlt
cs
dec
dec
xchg
dec
js
and
inc
leave
lahf
ja
push
mov
outsl
scas
push
lods
jo
test
push
xchg
mov
sbb
dec
sbb
test
pop
cmp
test
dec
ret
xor
stc
xchg
sbb
fwait
cmp
dec
sub
jmp
aad
mov
push
clc
aam
lahf
xchg
push
lds
mov
movsl
xor
dec
es
inc
and
scas
jmp
loop
sub
sub
pop
out
in
dec
jne
pop
fstpt
xor
ss
jp
lock
sti
or
insl
and
xor
cmc
cmp
rorl
and
xchg
inc
cli
rorl
sbb
sahf
pop
dec
popf
arpl
mov
cmpsb
addl
cmp
dec
mov
addb
fwait
xchg
imul
xor
icebp
movsb
push
or
movsl
mov
mov
sbb
loope
fwait
movsl
dec
cld
ret
lahf
das
jae
jb
popf
cmp
fs
jne
xchg
lock
sbb
sub
mov
jge
xchg
adc
mov
lcall
test
test
psubusb
dec
adc
lea
scas
test
xchg
movsb
mov
push
repnz
xor
xor
bswap
rolb
add
add
push
cs
pop
mov
or
outsl
test
popa
adc
test
aad
and
outsl
add
cmp
add
sub
fwait
shll
popf
push
pop
ljmp
or
mov
das
loop
cmp
sbb
js
sub
inc
push
pop
popa
pop
add
je
mov
std
faddl
sbb
xor
int
mov
dec
bound
mov
ret
xchg
lcall
sbb
popf
fs
movsb
push
xor
int
mov
scas
mov
int
pop
std
imul
sub
xor
in
pop
jae
jne
add
jne
adc
ffree
push
adc
aad
lret
xlat
ds
cmp
out
xchg
push
sbb
cli
fwait
clc
nop
mov
add
xor
adc
into
ds
aam
icebp
popf
mov
outsl
xchg
into
dec
pop
in
in
imul
pushl
push
test
adc
je
nop
outsl
lea
scas
lret
test
mov
out
mov
in
sbb
xlat
cld
xorb
jle
stos
or
fcmovb
adc
dec
mov
sub
jp
xchg
imull
sahf
cmp
push
jne
jbe
lds
int
loop
xchg
ja
mov
adc
mov
cld
mov
lods
sar
pop
dec
pop
sub
add
test
or
pop
movsl
push
pop
or
push
jmp
sub
test
mov
scas
xor
fsubr
rcll
cmp
add
mov
mov
iret
subl
cltd
mov
jl
rclb
inc
hlt
jne
popf
repnz
jbe
enter
repnz
loop
jl
lahf
cmp
ss
xchg
lods
ljmp
sub
jge
jne
subl
or
push
insl
jl
mov
jge
jl
and
or
or
jb
stc
scas
aas
pop
adc
sbb
inc
ja
cmp
lods
shll
sub
adc
xchg
add
adc
gs
xchg
dec
xlat
pusha
icebp
aam
push
es
cltd
dec
mov
aam
iret
call
stc
mov
std
int
mov
adc
push
lods
ret
push
inc
hlt
add
or
sbbb
rcl
sub
bound
jle
inc
loopne
mov
or
pusha
or
rcll
and
add
xchg
cmp
lret
mov
push
sub
adc
push
cmp
and
mov
loop
mov
xlat
mov
cmp
or
and
mov
cli
loopne
sub
dec
out
shll
push
jmp
mov
xor
mov
ss
aad
lret
lds
repnz
mov
imul
and
out
fldl
addl
sub
bound
mull
cmpsb
in
push
push
cmp
neg
shrl
mov
sbb
outsl
repz
mov
add
dec
jp
add
mov
fcomps
test
jno
cs
add
pop
add
out
loope
mov
dec
jns
add
std
pop
cwtl
add
dec
jns
ljmp
mov
cmpsl
jle
hlt
jns
jb
iret
xchg
xor
xchg
fidivs
lock
fdivs
lock
xchg
sbb
mov
add
push
jp
dec
js
lods
dec
data16
clc
jns
call
jecxz
inc
sub
and
mov
leave
sub
nop
sub
in
fistpll
push
push
xchg
fcmovnu
pop
mov
shl
notb
je
pop
adc
cmpsl
and
scas
xchg
repnz
jae
aam
jg
stc
fimuls
orl
popa
xchg
sub
mov
enter
ficoms
rcll
dec
jbe
test
loope
adc
add
sub
push
repz
pop
mov
jmp
inc
enter
mov
movsl
push
sub
sub
mov
mov
xor
sarl
inc
push
dec
inc
fistpl
pause
sbb
mov
arpl
lods
inc
mov
pop
ret
sahf
mov
mov
xor
xor
jle
cli
cwtl
addr16
cli
repz
sub
xchg
cld
pop
mov
cltd
in
lods
or
sti
aas
inc
lahf
ficomps
sub
sbb
lret
mov
push
loop
icebp
push
test
mov
ss
sbb
fs
push
mov
mov
cmp
xchg
mov
fisttpl
rolb
and
bound
adc
adc
outsb
out
cmpb
sbb
add
mov
dec
aam
lret
cs
mov
xor
xchg
int
xchg
mov
dec
aaa
test
cmp
push
push
gs
mov
scas
test
push
add
lds
loop
pop
sbb
and
and
xorl
sub
push
std
fdivl
dec
push
mov
add
lret
adc
inc
xchg
std
lods
cmp
jmp
xchg
insb
xchg
test
sbb
stos
jl
insl
cmpsb
sti
adcb
inc
xchg
cs
jnp
repnz
mov
enter
fistpll
pop
xchg
test
cmpsl
dec
sub
lret
and
ret
test
mov
popf
xor
mov
inc
mov
push
sbb
scas
arpl
inc
je
jp
lret
movsb
xor
lret
dec
inc
testb
leave
pop
push
or
test
js
or
push
sub
jb
gs
scas
div
loopne
testl
inc
icebp
mov
jbe
mov
popf
cmp
add
and
sub
dec
or
shrl
and
cltd
into
inc
and
inc
jae
add
and
test
cld
mov
add
pushf
stos
dec
hlt
xor
jnp
xor
sbb
test
add
leave
inc
adc
xor
xor
cld
or
es
add
cmp
es
adc
push
add
inc
jo
imul
or
ror
repnz
cmp
mov
adc
mov
mov
dec
ja
test
shlb
xchg
cwtl
adc
push
aas
ja
mov
arpl
jp
jnp
fldcw
xchg
insb
dec
mov
sbb
and
push
mov
test
mov
fidivl
fxch
mov
xchg
inc
mov
add
xchg
mov
push
outsb
fimuls
push
aad
adc
daa
mov
fdiv
mov
and
sbb
test
jb
adc
mov
int
jge
xchg
mov
std
shr
stc
sbb
jl
pop
or
rep
in
fwait
push
out
sub
test
jg
nop
sbb
or
imul
and
sub
add
and
mov
pop
add
loopne
push
leave
and
jp
sub
pop
lock
xor
nop
cmp
imul
add
mov
pop
test
pop
dec
add
jge
aas
dec
xor
in
push
mov
jns
iret
rolb
rcrl
dec
jns
lcall
xchg
ja
popf
lcall
jnp
test
mov
xchg
add
and
sub
mov
ss
dec
push
mov
fidivrl
xor
lret
push
test
cmp
jl
dec
movsl
sub
imul
jge
into
out
rolb
sbb
push
stos
jge
mov
jne
imul
inc
repnz
sqrtps
stc
subl
mov
cwtl
imul
loope
jecxz
jecxz
xchg
push
push
pop
fnstsw
inc
or
cmp
xchg
push
add
mov
movsl
loop
int3
xchg
mov
cmpsb
mov
cltd
inc
jge
arpl
mov
cwtl
adc
popf
addr16
pop
fidivs
push
mov
xchg
add
inc
in
fs
jb
outsb
cmp
cltd
push
imul
mov
dec
jp
mov
or
es
inc
push
sub
jge
adc
mov
sub
std
inc
bound
adc
sub
je
mov
les
add
mov
ror
int
call
add
inc
lods
mov
push
sbb
cmp
lds
gs
xorb
lret
mov
sti
push
mov
add
mov
aas
or
int3
mov
jnp
stos
loop
andl
test
out
mov
mov
fsubrp
insb
or
ljmp
push
inc
mov
adc
sbb
push
repnz
ljmp
hlt
in
sub
clc
fcoml
cltd
shld
cmpsb
sahf
add
adc
jl
jp
mov
jb
shr
jge
jae
sbb
jp
movsb
repz
lock
arpl
mov
cmp
inc
jecxz
pop
decl
jo
jns
cmp
mov
ja
je
mov
or
add
or
push
xor
push
push
add
cli
cmp
test
das
sub
out
lods
enter
out
sbb
add
xchg
scas
cs
xor
cmp
mov
adc
pop
ds
mov
cmc
sbb
pusha
inc
cmp
enter
sti
inc
stos
dec
test
ds
enter
mov
cltd
imul
sti
lds
jb
pop
mov
add
push
iret
cmp
fwait
sub
and
mov
xor
jb
sbb
pop
shrb
and
jne
push
push
inc
mov
cmp
neg
mov
sarl
dec
sub
fildll
push
jmp
sbb
add
stos
out
or
es
fstl
pop
pushf
inc
push
inc
stos
test
sub
jb
or
jl
outsl
sub
repz
jecxz
pop
lahf
adc
xor
sldt
sub
cmp
popa
cmp
dec
fstps
cwtl
adc
loopne
bound
sub
cmpsl
add
add
shrb
out
jae
cmp
mov
and
adc
jle
pop
lret
fcompl
xchg
or
les
sub
cli
mov
pusha
cmp
pop
ja
into
and
popa
test
adc
mov
dec
xor
mov
jp
push
mov
fisttps
pop
mov
scas
cmpsb
xchg
stos
int
inc
sbb
mov
popa
sti
or
xor
mov
je
cli
add
sbb
lret
iret
add
or
lds
and
dec
push
fdivrs
outsl
or
jmp
sbb
pop
xor
subl
xchg
or
aaa
enter
pusha
out
pop
addl
fmulp
fcomps
insb
addr16
les
jbe
push
mov
stc
xchg
inc
xlat
jnp
ret
pop
test
lds
shrb
adc
xor
push
jae
ret
add
aaa
jns
adc
inc
add
and
dec
inc
jb
pusha
iret
scas
pop
mov
xor
repnz
dec
pop
repnz
xor
sub
loop
inc
mov
into
or
in
lahf
cltd
mov
cmp
mov
aaa
les
imul
shrl
stos
outsl
fsubr
clc
mov
in
scas
outsb
xchg
movsl
pusha
or
pop
cmp
arpl
cwtl
je
outsl
or
mov
mov
push
sub
ja
add
mov
out
dec
stos
adc
pusha
movsb
xor
jns
mov
loop
adc
jbe,pt
cmp
lret
dec
sahf
stc
cmp
jge
sbb
mov
pushf
gs
ljmp
mov
inc
movsl
jp
in
lds
ljmp
sbb
rcrl
xor
xor
mov
cltd
sbb
add
pop
and
sti
in
add
popf
cli
ljmp
push
push
cli
sub
fstl
add
adc
xchg
sbb
in
jle
popa
mov
shlb
shlb
adc
mov
pop
add
ror
push
out
xchg
addr16
and
lods
scas
xchg
xchg
push
arpl
push
mov
lods
pop
dec
in
xlat
xor
cmp
mov
ss
cld
test
jecxz
addl
or
dec
pop
sbb
adc
loopne
int3
dec
mov
jo
arpl
scas
leave
mov
push
push
clc
sub
ljmp
and
clc
push
shll
jle
cmp
stos
aas
dec
mov
dec
add
or
cmp
cli
sbb
test
fwait
sbb
jg
inc
adc
andl
jg
cmp
inc
das
sub
lcall
sub
adc
sub
xor
mov
loop
xchg
pop
lret
push
fs
add
push
ss
js
mov
lahf
jbe
sar
push
mov
out
push
aas
cmovne
xchg
hlt
rorl
adc
and
mov
jp
pop
inc
dec
shr
cld
pop
mov
fdivr
adcb
fisttpll
mov
es
ret
loopew
arpl
push
stos
adc
add
cltd
pop
push
icebp
ss
in
jns
and
sarb
jecxz
or
sub
mov
cmp
mov
dec
cs
xor
lret
push
sub
rolb
cltd
into
int3
add
mov
mov
mov
daa
ret
sub
cmp
sub
js
inc
mov
pop
mov
out
data16
push
out
xchg
push
inc
adc
ret
dec
push
dec
cwtl
sti
out
add
fwait
imul
in
ds
jg
fmulp
fisttpll
inc
jb
xchg
cmpsb
add
int3
xchg
mov
test
adc
sbb
push
aaa
insl
aaa
les
idivl
rclb
mov
loopne
mov
xor
sub
ret
out
add
in
repnz
xchg
mov
stos
or
add
pop
inc
dec
xor
and
in
iret
in
adc
ljmp
aad
andb
cld
jbe
shrl
ljmp
xchg
jnp
subb
xchg
add
shl
pushf
fdivr
in
fldt
jb
or
mov
je
cmp
sbb
test
in
pop
and
stos
popf
mov
pushf
push
loop
mov
addb
sub
xchg
ret
add
inc
jne
jmp
dec
xorb
fcmovnu
nop
xlat
mov
aas
sub
sbb
inc
fadds
push
pop
nop
push
adc
js
aaa
xor
xchg
pop
sub
sub
repz
and
push
xchg
mov
sbb
xchg
addr16
imul
imul
test
add
and
shll
mov
sbb
mov
and
xor
jns
test
xchg
cmpsl
mov
push
mov
cmpsl
fidivl
xor
xchg
cltd
lcall
insl
gs
popf
popa
cmp
sub
clc
sub
push
mov
leave
lods
imul
xchg
scas
testb
arpl
xor
stos
mov
fistl
lret
mov
lock
ljmp
inc
jle
or
xchg
cmp
sbb
ljmp
call
and
jmp
sub
or
jo
xchg
dec
loope
imul
inc
pop
mov
mov
mov
jne
pop
adc
adcb
das
popf
adc
pop
xor
xchg
into
pusha
aas
push
mov
loopne
mov
xor
mov
adc
cmp
cmpsl
push
bound
or
cli
gs
gs
pop
jne
or
pop
pop
repz
sbb
mov
int3
push
fstl
mov
jge
inc
aas
or
ret
inc
or
jge
ds
mov
stc
mov
or
lods
add
mov
pushf
dec
incl
add
out
pop
inc
lds
mov
push
sub
push
lods
dec
sub
rcll
fwait
and
xchg
cwtl
pop
sti
add
daa
lods
xchg
lds
cmc
sub
push
xor
cmp
sub
add
push
jb
sbb
les
jg
test
xchg
jle
xchg
roll
pop
mov
jl
push
notb
add
les
or
mov
das
inc
fcmovne
dec
jl
adc
int
iret
push
loopne
push
pop
mov
mov
bound
sarb
es
mov
adc
lret
inc
xchg
insl
add
mov
testb
push
mov
mov
xchg
addr16
flds
cmp
clc
xchg
inc
xor
enter
test
add
stos
cs
or
or
loop
clc
dec
lret
add
outsb
iret
aaa
ret
into
mov
and
sub
ljmp
or
add
aas
adc
pop
jmp
fdivr
cmp
push
mov
xchg
push
xor
inc
pop
cmp
mov
sub
add
call
loop
shrl
fadd
shrl
xchg
push
int
cld
jae
mov
pop
cmpl
xchg
dec
mov
mov
clc
push
pop
push
xlat
lret
dec
out
jle
dec
push
cmc
mov
mov
jp
cmpb
xchg
divl
or
push
mov
cltd
outsb
testl
daa
rolb
in
ljmp
dec
or
jl
mov
sub
mov
movsb
insb
jns
adc
cmp
loope
sub
in
inc
mov
push
je
mov
vlddqu
adc
push
dec
popf
scas
pop
icebp
jbe
fcomps
xlat
jnp
lock
sbb
push
fnstcw
aam
ja
stos
xor
sbb
xor
cmp
arpl
imul
pop
and
std
in
push
jno
xor
ror
into
int
mov
push
xchg
pop
scas
jmp
adc
mov
add
pop
popa
jmp
stos
dec
add
mov
mov
scas
jl
sbb
cmp
adc
push
and
mov
lock
lret
out
insb
inc
inc
cwtl
push
dec
scas
or
ret
adc
pop
push
xlat
mov
xchg
sub
cmpb
inc
cltd
dec
js
imul
mov
add
sbb
inc
insb
cmpsb
sbb
mov
mov
push
xor
not
pusha
and
jecxz
add
jmp
mov
aam
xchg
or
div
or
mov
xchg
daa
inc
pushf
and
push
repnz
pop
cmpsl
enter
imul
repnz
pop
mov
inc
lods
aam
js
xchg
movsl
test
lret
scas
inc
inc
stos
out
fwait
mov
repnz
loope
xchg
mov
add
pop
sbb
out
mov
sub
popa
pop
pop
fdivs
adc
adc
sbb
ja
mov
loope
push
inc
fwait
out
push
inc
aas
lcall
xchg
dec
mov
jp
sbb
mov
mov
outsl
sarb
loopne
adc
jbe
cmove
mov
mov
addr16
xchg
mov
dec
inc
popf
jnp
stc
ja
cmp
int3
gs
push
popa
and
add
shrl
jecxz
in
std
or
push
aam
xlat
andb
adc
shl
mov
inc
jg
hlt
test
repnz
call
out
es
scas
cltd
idivl
cmp
repz
dec
mov
sahf
pop
nop
mov
lods
movsb
sbb
outsl
inc
out
cmp
or
mov
es
or
call
or
insl
push
sub
pop
pop
aaa
or
shlb
push
sbb
or
xor
add
mov
subb
lods
jo
fldenv
fwait
icebp
call
mov
sub
mov
sbb
addr16
imulb
movsl
arpl
add
sub
fiaddl
lea
mov
and
sti
mov
add
pushf
es
jl
adc
xchg
ret
pop
outsb
fisubrl
or
insb
lcall
pop
xchg
sub
lret
dec
mov
mov
fldt
dec
xor
movsl
frstor
dec
lock
repnz
xchg
lds
jmp
or
stos
push
dec
cli
xchg
sub
sti
sbb
sbb
cli
and
imul
push
std
add
imul
jne
inc
aas
movsl
xlat
stos
xor
in
xchg
jne
fstp
bound
inc
iret
pushf
roll
out
frstor
jo
jo
jle
cs
fnstsw
xchg
xor
inc
sbb
or
inc
cmp
lret
dec
mov
mov
pop
or
mov
stc
mov
xor
jecxz
and
cmp
insl
mov
loope
test
mov
enter
addr16
pcmpeqb
outsl
fcmovne
mov
lret
and
daa
xor
es
xor
loop
sub
and
cmc
cmc
in
mov
mov
imul
mov
xchg
gs
test
js
mov
jb
pop
cld
push
sbbl
aad
es
lock
das
mov
cmpsb
push
out
add
pop
push
outsb
sub
mov
lods
pop
pop
cmp
fisubs
add
and
ficoms
jae
dec
dec
xchg
sbb
stos
lds
pop
mov
lods
inc
xchg
xorl
jl
test
mov
pushf
add
dec
jle
rcrb
cmp
sbb
es
adcl
sub
shrl
adc
daa
mov
stos
lds
mov
aaa
cmp
call
stos
std
inc
push
pop
xchg
mov
dec
loop
aas
scas
cmp
add
rolb
add
mov
pop
or
fcomi
into
push
xor
cwtl
rorb
sbb
lret
es
xor
and
push
int3
lcall
inc
aas
xor
ljmp
in
mov
push
xor
enter
dec
mov
insb
xor
cmc
clc
shrl
rolb
mov
xchg
dec
ja
cli
lcall
sbb
sub
imul
mov
clc
pop
in
xchg
pop
cmpsl
mov
popa
cmc
lock
or
mov
mov
bound
push
sub
fstpl
add
iret
pushf
lea
add
inc
sub
pop
mov
mov
or
rep
cmc
stos
cmp
or
std
aam
gs
xor
sbb
mov
push
cmp
mov
mov
popf
cmp
xchg
mov
cmp
xchg
sti
xchg
lret
pop
jge
out
adc
es
mov
inc
push
cld
jbe
mov
scas
cmp
loop
mov
sub
adc
sbb
add
andl
xor
cmp
outsb
lret
push
xor
push
sti
pop
lds
mov
xchg
int3
cmpb
mov
outsl
mov
fistps
sar
pop
dec
or
xor
lods
stc
lret
mov
xchg
repnz
je
sbb
cmp
push
sbb
xchg
scas
add
inc
sub
pusha
xchg
in
dec
cs
and
imul
xchg
or
popa
xor
mov
fnstsw
cwtl
pop
adc
dec
xchg
loopne
mov
stos
mov
mov
out
enter
sub
adc
mov
cmp
or
mov
push
xor
cmovge
or
fstp
dec
cmpsb
sarb
ffree
dec
add
mov
adc
pop
cmp
inc
pop
adc
stos
subl
popa
sub
pop
outsb
pushf
bound
dec
adc
xchg
jnp
push
jp
imul
dec
testl
imul
push
stc
mov
cmp
adc
cwtl
xchg
shrb
mov
add
mov
popf
push
mov
mov
aad
adc
add
adc
xlat
pop
cwtl
jmp
cli
adc
mov
adc
mov
mov
mov
leave
sub
hlt
je
int
sahf
dec
or
ret
je
jge
sub
ja
repz
or
push
cmp
mov
mov
lret
fcmovne
fsubs
xlat
fbstp
sti
mov
paddsb
cmpsb
in
cmp
insb
mov
repz
in
or
scas
sbb
inc
mov
mov
mov
fimuls
dec
rcrb
xlat
dec
sub
xor
push
lret
leave
orb
fcmovnb
adc
xchg
ss
fsts
push
je
ficoms
imul
dec
mov
es
insb
ret
push
and
pop
in
test
pop
mov
and
je
adc
stc
in
pop
push
imul
mov
shll
xchg
sbb
int3
imul
or
xor
pop
imul
add
push
xor
mov
ret
pop
es
lock
clc
mov
add
mov
sbb
jmp
pop
repz
lods
popf
jo
fyl2xp1
dec
fisubs
insb
xchg
pop
inc
sbb
inc
pop
loopne
cmp
xor
or
xor
push
pusha
jp
dec
add
addr16
outsb
mov
dec
lea
iret
cmp
or
pusha
sub
in
mov
mov
cmpsl
jnp
addr16
inc
test
repnz
jno
and
int
and
arpl
outsl
repnz
push
inc
mov
jg
test
aad
inc
jecxz
scas
sbb
inc
fwait
mov
aam
mov
adcb
aam
jp
xchg
mov
fwait
xchg
lds
mov
jns
dec
fnstsw
lcall
add
ret
inc
pushf
fisttpl
push
cld
xor
lock
jl
scas
js
and
in
pop
mov
cmpsl
dec
pushf
mov
loope
ds
jl
push
xchg
and
add
mov
leave
mov
xor
out
imul
je
cwtl
sbb
sbb
jle
and
data16
adc
sub
movsb
lcall
arpl
dec
mov
ljmp
sbb
or
adc
outsb
adc
cmp
sbb
mov
aaa
repnz
hlt
lret
iret
mov
into
push
test
mov
or
lcall
mov
fbld
jp
xchg
cld
rol
add
inc
pop
stc
fs
pop
cmp
rorl
jle
sbb
es
jns
mov
dec
mov
cmp
cld
pop
mov
fmul
pop
cmp
gs
iret
fiaddl
les
int
mov
jns
call
aaa
adc
testl
dec
push
stos
or
inc
sbb
aam
cmp
adc
push
les
mov
mov
sbb
inc
jns
hlt
pushf
inc
push
cmpb
sbb
pusha
add
xor
inc
std
mov
or
cmp
xchg
cmp
push
out
scas
cmp
xor
jmp
ret
lods
xor
lea
xchg
in
jle
push
inc
add
pop
sbb
enter
and
fadds
cmpb
mov
cmc
jp
mov
cld
dec
cmpsb
mov
push
repnz
jl
mov
pop
stos
push
clc
lret
je
add
pop
mov
into
pop
sub
shrb
pop
loopne
es
das
sub
and
je
mov
loop
orb
negl
add
add
js
outsb
iret
xor
test
movsl
xchg
imul
cmpsl
lcall
inc
inc
lret
dec
inc
repz
leave
ficomps
jb
jge
mov
and
push
mov
pop
gs
call
adc
jecxz
xchg
bndstx
out
mov
data16
mov
push
fistpll
cmp
inc
andb
shll
nop
add
pop
push
mov
mov
lahf
push
mov
pop
shlb
pushf
push
add
or
out
aaa
pop
xor
add
je
test
sbb
rorl
sub
enter
ret
inc
outsb
fdivrl
sahf
jno
jge
inc
add
sbb
jnp
je
sub
cwtl
pop
cmp
xchg
adcl
cmp
orb
push
jmp
aam
fnsave
loop
jle
pushf
mov
cwtl
nop
xchg
scas
sbb
inc
dec
inc
sub
add
pop
bound
in
mov
out
test
pop
stos
sbb
xor
test
fmull
orb
sub
aad
adc
mov
mov
fisubrl
pop
pushw
mov
cs
cwtl
insl
push
jl
pop
scas
xlat
sti
mov
mov
dec
dec
push
test
addr16
movsl
push
mov
jno
xchg
andb
imull
shrb
stc
and
fidivs
xor
pop
je
push
jmp
mov
aas
cmp
rorl
mov
gs
push
std
daa
push
xor
int3
stos
faddp
xlat
push
cltd
adc
insl
mov
add
cmp
std
mov
sbb
inc
jecxz
mov
inc
stos
mulb
fsts
out
out
and
mov
push
movsl
addr16
jp
mov
sarl
add
jne
jp
sti
repz
adc
pushf
arpl
sub
and
and
mov
dec
imul
mov
imull
and
mov
pusha
mov
jbe
popf
xlat
xor
dec
jge
in
push
scas
mov
aaa
sub
arpl
mov
jbe
adc
sub
scas
sbb
xor
push
insb
cmp
inc
into
and
xchg
mov
repnz
arpl
lods
push
inc
push
add
in
cmp
fiadds
jmp
and
add
mov
push
push
xchg
mov
scas
push
movsb
cmp
xchg
cmp
sbb
lock
cmc
ljmp
add
test
nop
insb
stos
ss
xor
lcall
stos
out
out
faddl
aad
xchg
lds
adc
int
sahf
lcall
mov
pop
mov
pop
sti
loop
mov
ljmp
mov
inc
test
call
push
mov
push
addb
sub
imul
out
fistpll
test
pop
gs
fwait
negl
jnp
mov
mov
push
in
cli
scas
lods
mov
mov
sarl
ljmp
pop
pushf
stos
xchg
jle
adc
add
xor
xchg
test
test
repz
mov
lahf
jns
push
inc
mov
cli
loop
and
enter
lret
jnp
mov
fwait
scas
stos
add
sbb
add
aad
ficomps
adc
in
in
cmc
mov
scas
popf
mov
les
xchg
into
sub
std
push
xor
jp
ret
mov
or
je
ja
cmc
push
ja
lcall
inc
xchg
scas
mov
notb
dec
mov
xchg
mov
adc
jno
lret
push
leave
sbbl
adc
cmpsl
loope
mov
sbb
xchg
pushf
or
inc
push
js
sbb
jo
xlat
leave
fistl
fdivs
loop
sbbl
and
dec
hlt
repz
aaa
hlt
and
xchg
cmpsb
fisttps
inc
sbb
ja
out
push
sbb
cmpsl
loope
jge
xchg
lahf
and
mov
fistl
notl
push
or
cmpsb
test
dec
aas
adc
icebp
jge
xor
xor
add
add
inc
cmp
sub
stos
fisubrl
call
fisttps
sbb
add
xor
cwtl
lods
icebp
inc
sbb
pop
cs
mov
dec
xor
lcall
dec
es
imulb
dec
loope
push
or
test
or
int
cld
pop
fbld
dec
add
xor
xor
fmuls
mov
add
fcomi
mov
add
rorb
and
xchg
out
imul
push
or
push
mov
jo
mov
enter
and
mov
add
xchg
or
dec
mov
cltd
mov
inc
xor
fadds
and
mov
jnp
or
test
mov
mov
xchg
sbb
xor
and
cmc
cli
or
mov
mov
adc
push
push
stos
inc
jp
dec
mov
dec
mov
es
repz
movsl
iret
std
xchg
inc
negl
in
sub
lods
stc
mov
cmp
push
jmp
nop
jg
jle
adc
adc
not
test
jo
rcl
daa
loope
incl
mov
std
sub
data16
push
mov
loop
xor
rcl
nop
loopne
sub
pop
in
dec
stos
in
addr16
sbb
mov
lods
test
cmp
addr16
xor
call
pusha
mov
add
aas
repnz
xchg
sub
out
dec
daa
mov
ja
fidivl
cmc
ja
dec
inc
shll
call
add
mov
into
or
or
or
ja
out
mov
out
lret
push
enter
out
inc
xchg
push
adcl
jg
inc
inc
add
aaa
cmpsb
je
xor
fmull
jbe
das
hlt
repnz
rorl
gs
pop
cmc
add
repz
adc
push
xchg
out
adc
mov
addr16
mov
xchg
inc
jne
sbb
push
sub
mov
xor
or
mov
sub
movsb
xchg
negl
divb
std
repnz
jge
add
movsl
jo
scas
jno
pop
cmc
es
mov
out
mov
jecxz
shrb
clc
jne
sub
popa
es
mov
cmp
idivb
lds
aam
xlat
hlt
fwait
push
out
jle
sub
inc
pop
xor
pop
jbe
rcll
lods
movsl
inc
dec
adc
pop
pop
pushf
popw
dec
mov
in
popf
and
arpl
xchg
leave
xor
sti
mov
adc
jb
sub
outsl
pop
ret
mov
xlat
cmp
repz
xor
lods
insl
in
mov
cld
lds
dec
lret
inc
shl
and
sbb
adcl
mov
xchg
jp
pop
popa
out
nopl
push
arpl
mov
xchg
adc
inc
mov
fsts
inc
add
cmovge
jle
sahf
cwtl
sbb
mov
push
xchg
pop
inc
aas
lcall
jnp
add
loop
jae
inc
xor
xchg
adc
into
in
mov
push
xchg
out
or
test
or
push
into
xchg
inc
add
xchg
cmp
popf
xor
mov
add
movsb
lahf
aam
sti
loop
dec
xchg
inc
imul
mov
push
jno
daa
test
int
lods
push
jmp
push
insl
mov
lock
ja
mov
xor
popf
addr16
cmp
cmc
pop
insb
jae
lcall
inc
dec
inc
pop
xor
pop
shrl
es
popw
dec
lods
pop
ret
xchg
cs
add
add
outsl
dec
rcll
into
fsts
sub
pop
data16
jnp
push
scas
xchg
rcrb
xor
fistpll
out
movsb
aaa
jbe
out
bound
mov
int3
xchg
dec
mov
addr16
mov
xchg
pop
es
cmp
jp
daa
jp
sub
push
imul
mov
push
inc
sti
lea
adc
dec
cwtl
and
std
mov
addr16
popf
addb
and
mov
dec
jecxz
adc
cltd
rcrl
push
fstl
mov
xchg
mov
rolb
adc
repnz
mov
mov
jne
int3
lods
xchg
adc
fmull
fistpll
fmull
test
int
add
lahf
test
aas
dec
xor
sub
mov
js
cmp
push
es
jmp
test
aaa
push
ss
pop
std
leave
add
divl
sarb
xchg
lret
inc
dec
jns
cmp
mov
std
in
pop
pop
pop
xchg
iret
addr16
and
xchg
lock
fdivrl
jno
or
fstpl
loope
scas
mov
rol
subl
lret
add
mov
mov
pop
ret
xor
stos
pop
jl
add
lcall
mov
xor
cld
push
sub
xor
movsb
sbb
sub
cs
mov
pusha
mov
mov
clc
jl
jle
adc
test
pop
xor
inc
aas
pop
pushf
addl
popl
and
loopne
xorb
mov
scas
jns
ljmp
mov
xchg
lret
mov
repz
rorb
adc
dec
pop
xchg
mov
mov
loop
cmpsb
pushf
in
mov
xor
ljmp
pop
push
cld
mov
outsb
push
push
adc
lock
xor
imul
pop
cwtl
add
les
or
fnstsw
add
mov
mov
shlb
pop
sbb
mov
push
into
mov
mov
sti
aad
fnop
xor
fldt
rcl
dec
bound
cli
push
push
adc
xlat
jge
dec
or
pop
push
jno
mov
leave
test
shrl
testl
in
in
push
xchg
shrl
and
fmull
add
mov
mov
dec
push
leave
ds
cs
leave
mov
or
push
aas
lret
aad
pop
clc
jecxz
out
sbb
push
das
dec
shrl
sbb
lods
mov
addl
jb
jle
jl
es
fnstcw
sbb
test
xchg
mov
jg
les
or
pop
sbb
in
push
fisubs
sahf
arpl
xchg
and
inc
add
fs
cmp
sbb
adc
push
cmp
xchg
sbb
cmp
cmpsb
bndcu
icebp
add
pushf
test
fcoms
orb
sbb
rcr
cltd
mov
mov
in
and
lods
popf
cmp
shrb
pop
int3
pop
sbb
lods
sub
and
push
testl
in
inc
xor
icebp
dec
mov
xlat
xor
sbb
imul
daa
andb
dec
inc
in
inc
ret
sub
sub
inc
enter
mov
mov
andl
sbbb
jecxz
adc
test
loopne
inc
data16
jns
xchg
out
sub
xchg
push
lock
fiaddl
dec
add
testl
fidivs
mov
push
push
add
adcl
xor
adc
pop
popa
xor
jl
adc
lret
mov
or
dec
push
pop
nop
mulb
test
sub
outsb
cmp
fs
leave
cld
xchg
out
das
adc
mov
xchg
push
adc
in
xor
call
inc
xor
dec
sbb
insb
pop
sbb
mov
jle
pop
data16
adc
mov
sti
outsb
jb
pop
push
popf
imul
push
push
fnstsw
leave
addr16
or
sbb
inc
or
push
sub
outsb
rcl
jmp
inc
or
inc
lods
shlb
les
or
xlat
lret
stos
mov
cmpsl
adc
mov
dec
mov
sbb
adc
xchg
push
imul
and
xlat
idiv
mov
in
pop
mov
shrb
push
mov
xor
iret
bt
popf
stc
enter
lret
xchg
insl
movsl
pop
icebp
rclb
inc
dec
es
mov
iret
ss
adc
or
aaa
mov
sbb
cli
push
sub
mov
lock
push
sub
inc
xchg
outsl
dec
cltd
arpl
jo
inc
add
cld
push
mov
push
pop
rclb
adc
adc
xchg
adc
test
outsb
lds
inc
inc
cmp
mov
je
ljmp
gs
in
mov
adc
sbb
or
ds
in
mov
stc
sti
mov
repnz
mov
and
stos
add
sub
mov
inc
movntps
aam
xchg
int3
xchg
pop
adc
pop
sub
fs
mov
mov
testl
fdivr
out
or
das
push
shlb
push
lret
or
inc
clc
into
outsl
popf
pushf
into
xchg
aaa
pinsrw
pop
lods
push
insb
pusha
imul
and
pop
jmp
cmp
xor
sahf
add
and
mov
sub
jmp
and
into
scas
xorb
jb
jnp
pop
lea
das
jge
addr16
stos
in
hlt
inc
pop
movsb
and
push
jne
lahf
mov
mov
xchg
pop
loop
cmc
push
iret
or
mov
jge
mov
movsb
enter
or
std
jb
std
add
popf
xchg
mov
jg
cmp
aaa
aad
sbb
ljmp
cmp
nop
pop
or
sarl
sub
cmp
clc
dec
fidivrl
adc
in
sub
jl
jns
xor
and
insb
lds
in
adc
icebp
ss
popf
gs
mov
mov
popl
push
int3
sbb
cltd
mov
repz
neg
aam
insl
ror
insl
pop
mov
mov
idiv
add
cmp
mov
lods
bound
sbb
lcall
mov
inc
insl
adc
mov
mov
lods
dec
mov
das
imul
outsl
add
pop
push
rorl
or
out
jle
lahf
xchg
mov
add
aam
xchg
enter
es
push
div
dec
xor
sbb
xor
sub
pop
ss
cmp
push
mov
sub
sbb
loope
cmp
stos
pop
test
repnz
fwait
dec
jo
mov
jns
fbld
push
pop
dec
bound
mov
jp
xor
xchg
sbb
fdivl
enter
daa
into
faddl
js
lret
pusha
imul
mov
std
daa
mov
xor
addr16
imul
jmp
pushf
mov
cmp
outsl
dec
fisttps
and
sti
pop
sub
push
scas
adc
or
das
add
inc
movsb
int3
cld
mov
inc
sub
mov
insl
or
negl
mov
dec
pop
xchg
loop
push
cmpsb
leave
add
xchg
sarl
andb
jecxz
lods
add
scas
lahf
adc
clc
sub
mov
adc
test
ss
fnstsw
inc
jle
and
sbb
mov
lret
std
xor
das
mov
int3
nop
repnz
arpl
leave
mov
push
int
decl
jne
lret
xor
movsb
leave
inc
xchg
adc
scas
lds
in
sub
insb
in
mov
sub
mov
pop
out
push
jnp
xor
inc
int3
inc
inc
lcall
cld
dec
xor
nop
test
fsubrs
pop
into
sbb
jge
int
cmc
xor
fwait
int
xchg
xchg
adc
fdivrl
in
repnz
jb
sti
sti
push
pop
lahf
fwait
arpl
xchg
lret
xor
dec
dec
mov
jge
and
add
aaa
push
mov
andl
lret
rorl
clc
cmp
sub
jne
mov
or
lret
out
call
mov
out
or
mov
push
xlat
pop
test
xorb
xlat
xchg
movups
ret
jmp
loop
adcb
and
orl
or
dec
lcall
stc
mov
cli
push
ds
or
jge
sbb
mov
dec
xor
inc
cmp
iret
sbb
xlat
rcr
push
pop
xor
roll
mov
jmp
es
dec
xor
mov
rcr
sbb
adc
mov
inc
pop
pop
into
stos
and
sti
adc
loop
sti
cwtl
mov
xor
mov
jl
sub
mov
mov
data16
popa
and
in
lods
push
jmp
dec
jno
sub
rcrb
fs
repz
add
or
jmp
aam
and
mov
xorb
cs
notb
adc
inc
xchg
mov
cmp
or
and
push
xor
in
loopew
cli
jmp
mov
hlt
jae
ds
mov
inc
sbb
xlat
pop
push
xchg
fstpt
orb
aad
mov
int
neg
or
pop
jns
jecxz,pt
mov
inc
mov
lods
pop
enter
adc
imul
mov
rorb
inc
popa
call
insl
std
xchg
sub
inc
in
jno
sbb
add
es
das
gs
sbb
addr16
lahf
xor
in
stos
lods
hlt
dec
push
outsb
lods
xor
es
mov
mov
jae
fsts
xor
xchg
insl
pop
out
inc
xchg
mov
lcall
inc
pop
out
inc
jb
mov
cmpb
mov
xchg
push
rorl
and
jecxz
andb
adc
outsb
aaa
add
loope
and
bnd
add
out
xchg
dec
xchg
scas
cmp
pop
mov
mov
dec
ja
imul
mov
gs
or
cltd
jae
inc
cmp
dec
dec
jno
ss
test
ljmp
mov
adc
inc
mov
mov
fimull
iret
pop
mov
call
fbld
add
mov
fsubrs
jle
inc
test
sub
gs
fs
ljmp
addr16
in
rcll
sub
js
jb
cmp
mov
pop
rolb
push
test
arpl
scas
out
cmc
sub
repz
stos
lock
std
jl
cmp
mov
shlb
fmull
adc
int
mov
lcall
push
in
push
xor
add
shll
push
jmp
filds
stos
jmp
and
cmpl
sub
stc
jno
sbb
push
sub
insl
je
dec
movl
cmpsl
je
xor
mov
and
xchg
out
cmc
and
sbb
movsb
mov
imul
test
lds
dec
pop
jns
pop
popa
dec
movmskps
sbb
jbe
pop
aas
loop
xchg
cmpsb
inc
cmp
fstl
xlat
aaa
cmp
fists
pusha
mov
add
jl
lcall
mov
testl
shl
lock
dec
adc
mov
pop
adc
incl
push
xchg
stc
mov
and
push
sub
push
sbb
cmc
loop
rolb
push
arpl
sub
mov
and
mov
inc
dec
jo
dec
adc
mov
inc
nop
sub
lcall
adc
lds
mov
jle
test
cs
nop
and
js
js
sub
rcl
adc
pop
push
lods
adc
int
repnz
push
push
stc
loopne
mov
leave
pop
loopne
xchg
push
sbb
je
xor
mov
mov
cmpsl
arpl
jb
jp
and
in
aad
jb
arpl
xor
lahf
sbb
dec
and
jmp
ss
call
cmp
jmp
add
mov
outsl
lret
aad
int
out
in
aas
and
sub
adc
cmp
push
in
inc
jmp
ljmp
jno
mov
push
push
lock
pushf
adc
mov
xchg
arpl
cmp
cli
call
std
and
fldenv
es
fwait
dec
cmp
rorl
clc
pop
ret
inc
pop
pop
push
mov
pusha
push
ret
xor
fpatan
cli
adc
cmp
inc
ja
sbb
rcll
jae
fsub
mov
or
jge
pop
lret
xor
inc
out
jo
insb
sbb
pop
lods
dec
rorl
adc
es
ljmp
cltd
push
ja
xor
aas
stos
sub
jnp
xchg
adc
fs
les
lock
in
out
aad
mov
sub
lods
sub
hlt
jp
loop
ja
js
or
dec
adc
cmp
mov
sub
shll
mov
test
or
or
fldt
loop
scas
and
jb
mov
jmp
cmp
in
enter
mov
jnp
xlat
pop
addr16
mov
stos
cmp
push
mov
push
popf
cmc
push
add
cld
ja
fwait
repnz
bound
ds
xor
mov
jbe
rcll
insb
and
mov
cmp
sbb
loop
outsb
ss
rorb
leave
jmp
jnp
xor
popa
fwait
loopne
xor
fmull
js
mov
pop
mov
ja
lahf
into
jmp
dec
cwtl
sahf
adcl
and
mov
inc
lea
popf
mov
push
ja
stc
mov
xchg
mov
xchg
lret
fisubs
call
xor
xchg
cltd
out
lods
cmp
xchg
push
lock
pop
sbb
dec
pop
lret
push
cmp
dec
mov
xor
jns
mov
pop
push
aad
mov
and
fcompl
xor
or
jne
xor
dec
std
or
clc
push
test
pop
or
out
inc
xor
ret
pushf
ss
fmull
test
or
add
xchg
push
test
imul
xchg
xchg
mov
fldl
lret
test
sbb
adc
and
inc
out
fimuls
dec
jns
jne
in
lea
fcoms
mov
xchg
dec
notb
xor
pop
mov
aas
cmpsl
outsb
mov
test
add
push
stos
loope
out
inc
ret
adc
pop
push
out
std
lea
or
mov
stc
mov
sub
hlt
sub
scas
sbb
stos
mov
sti
or
cmpsb
inc
jno
sub
or
clc
pop
xor
es
or
pop
rcr
shlb
int
test
sub
pop
jns
add
lcall
insl
lcall
ljmp
and
mov
push
mov
in
repz
jae
test
cltd
hlt
mov
push
lock
mov
cmpsl
mov
stos
out
mov
stc
in
push
or
cmp
ss
and
je
sub
dec
jl
push
sbb
daa
mov
ds
cmovp
sbb
dec
mov
sub
mov
jmp
hlt
jo
fstpl
int3
enter
xchg
aaa
out
xchg
inc
les
loop
xor
orl
cmp
cld
cmp
cs
cmp
add
int
notl
into
cli
cmc
test
push
out
scas
std
lea
sub
fs
aad
push
add
or
mov
jae
push
fisttpl
dec
lcall
scas
pop
es
mov
incb
xchg
dec
cli
adc
mov
icebp
into
xchg
mov
mov
call
push
mov
push
sub
push
les
dec
push
test
cmc
shll
test
icebp
inc
push
fucomip
in
sbb
mov
mov
popa
xlat
pushf
stc
push
in
insb
repnz
push
mov
mov
mov
mov
jbe
pop
sbb
inc
lods
or
xor
sti
pop
popf
pop
sbbb
mov
mov
xchg
rorl
or
lds
cmp
ret
push
jecxz
cmp
insb
xlat
cltd
mov
push
mov
sbbl
and
das
dec
enter
es
lock
adc
daa
sbb
lock
hlt
jmp
aad
pop
imul
fbld
repnz
jae
insb
fwait
call
vxorps
fildll
cli
add
mov
les
and
adc
mov
stos
adc
cmc
pop
scas
rolb
addb
push
mov
sahf
int
daa
pushf
inc
sbb
and
or
xlat
bound
jno
cmp
xchg
adc
mov
jge
flds
or
test
hlt
jmp
sbb
xchg
lods
mov
cmp
xor
push
mov
je
fidivrs
cmpsl
jae
pop
pop
sarb
or
pop
mov
xchg
in
and
adc
inc
mov
ja
call
mov
ss
jno
shrl
bnd
insl
sbb
sub
pop
jg
movsl
jbe
nop
mov
fwait
psubw
test
mov
aam
xchg
jg
in
cmpsl
xor
fwait
mov
outsl
or
push
out
rcl
sbb
jbe
lods
sub
cwtl
xchg
adc
jl
ss
hlt
push
dec
mov
aam
scas
bound
sbb
xor
xor
cmp
mov
rcrb
fst
lods
xchg
or
imul
insb
ja
pop
stc
pop
andl
cmp
or
pop
fistps
jae
mov
push
dec
cmpsl
enter
test
mov
mov
push
leave
sub
sti
xlat
fmuls
pop
fwait
outsb
dec
mov
call
sub
je
mov
inc
ja
xchg
jecxz
rorl
jo
xchg
iret
mov
cmp
mov
cmc
cli
jecxz
popa
test
sub
sbb
jne
push
ret
jae
daa
cmp
bound
out
add
testb
mov
shll
cs
sub
imul
adc
and
sub
out
dec
pop
outsl
loopne
xor
lahf
push
cmpsb
jnp
imull
mov
daa
cmpsl
mov
gs
sbbb
dec
pop
cmpsb
cltd
push
sbb
aad
in
sub
push
sbb
iret
pop
enter
inc
xchg
out
leave
pop
or
pop
out
divb
imul
sbb
adc
sub
mov
xlat
addr16
adc
jg
pop
mov
in
mov
sahf
int
mov
mov
sbb
pop
xchg
or
and
test
cld
push
dec
cmp
mov
cli
andl
andl
mov
mov
call
or
lea
loopne
insb
mov
inc
scas
ret
cmpsl
in
mov
test
test
lret
xchg
push
dec
push
into
xchg
stos
test
push
fisubrl
or
lea
inc
sub
addr16
jmp
mov
sub
nop
popf
dec
cmpsb
test
ret
shr
repz
xchg
pop
pop
dec
add
outsb
loopne
push
cmp
aaa
xor
ja
daa
shrb
add
mov
arpl
das
mov
outsl
and
cmpl
sbb
lahf
pop
lods
inc
sbb
lods
push
pop
sub
cmpl
shll
insl
add
inc
xlat
push
mov
inc
xchg
test
cmp
bound
jno
sbb
out
sar
rcll
xor
imulb
adc
int3
xchg
push
xchg
test
pop
lret
pop
xor
mov
loop
imul
je
push
jp
and
jns
sbb
fs
jo
add
inc
roll
aam
mov
imul
dec
lea
lds
xchg
sbb
mov
push
jl
fimuls
in
xchg
insb
dec
mov
push
repz
sbb
subb
sub
adc
xor
mov
rcl
sar
fwait
cmp
arpl
out
leave
mov
lea
enter
xchg
fldt
add
mov
lods
mov
aas
loop
das
jb
ror
adc
in
sbb
jecxz
scas
and
scas
sahf
iret
jae
in
mov
nop
sub
aaa
mov
xchg
sti
xor
inc
rep
decb
xchg
ljmp
and
sbb
pushf
in
test
mov
fisubrs
mov
jl
xchg
mov
jae
lret
mov
mov
orl
push
sub
imul
xchg
loope
loope
mov
outsl
ret
dec
xchg
or
adc
pop
mov
rclb
aam
ja
fmul
insl
stos
outsb
cmpb
and
mov
xchg
insb
adc
or
lock
jb
xor
out
adc
xor
mov
push
nop
sub
pop
push
into
cmp
fidivrs
stc
aas
mov
jbe
pusha
mov
repz
jecxz
mov
in
stc
test
mov
clc
nop
sbb
in
xchg
inc
xor
loopne
jb
mov
jecxz
sbb
dec
mov
rcrl
mov
mov
mov
stos
test
stc
jecxz
push
das
sbb
movsb
jb
fnstcw
dec
lds
dec
dec
push
ja
jns
sub
loop
and
test
lea
lret
xchg
rcl
js
scas
mov
mov
add
lods
mov
push
int
rol
inc
push
and
cmp
add
test
in
jb
xor
idivb
mov
ret
and
cli
mov
sub
push
addl
push
pop
jae
nop
mov
mov
jle
add
push
jbe
xchg
fcoml
xlat
dec
movb
or
adc
icebp
pop
inc
sbb
cmp
add
dec
push
test
jecxz
sbb
pop
aad
mov
lahf
fwait
int3
cmc
mov
or
push
in
sbb
cmp
or
cmc
and
call
mov
shl
aas
dec
pusha
pop
adc
negl
mov
ss
push
and
fcoml
test
and
sub
lods
das
xchg
std
shl
xchg
mov
out
mov
inc
sbb
and
xor
mov
ljmp
jg
lahf
mov
inc
cld
cmp
pop
and
arpl
mov
sbb
or
lock
popf
add
je
xchg
xor
stc
rcll
cmp
xchg
call
add
jno
stos
pop
addb
xchg
out
aaa
pop
pusha
arpl
and
inc
jmp
loope
rclb
fidivrl
jl
pop
sbb
push
pop
fstl
pop
sbb
imul
dec
push
push
adc
dec
retw
test
dec
ds
cmp
test
mov
add
daa
push
pop
or
add
push
xchg
out
xchg
mov
test
mov
sti
dec
in
adc
sbb
mov
pop
pop
xchg
mov
pop
lock
xor
add
xor
sbb
add
inc
push
inc
fimull
add
mov
and
ret
mov
adc
jo
sahf
orl
jp
adc
shrb
mov
nop
mov
loopne
outsb
push
incl
ljmp
scas
aad
test
mov
sarb
jg
outsb
push
mov
idivb
cmpsb
ljmp
pop
xchg
push
sub
andb
ljmp
pop
loop
aas
jg
fsub
push
xchg
mov
or
dec
das
or
outsl
add
xor
add
or
xor
dec
cmp
dec
pop
mov
adc
js
push
repz
xchg
xor
dec
insb
imul
mov
andl
jae
arpl
sub
nopl
adc
rolb
xor
sub
movsb
fsubrl
push
and
or
sub
xchg
test
cwtl
dec
iret
loope
mov
lds
mov
pop
adc
ljmp
sbb
outsl
adc
push
jno
icebp
aaa
out
xor
jp
stos
xor
addb
cwtl
jbe
mov
xchg
das
dec
sbb
pop
push
dec
ret
pop
lret
lahf
pusha
call
xchg
mov
das
in
inc
push
fstpl
jge
call
addr16
add
popf
pop
sub
sub
insl
adc
es
adc
cwtl
icebp
mov
pop
inc
subb
cld
loope,pt
mov
fsin
movsl
repnz
fiadds
shll
iret
shlb
inc
xchg
push
mov
cltd
pop
push
loop
push
push
jle
adc
shrl
loope
add
push
pop
std
daa
decb
xor
xchg
cli
sub
insl
inc
sub
xor
out
add
dec
mov
mov
or
pop
shll
popf
sbb
data16
sub
std
jo
sbb
jle
bound
in
out
jbe,pn
lahf
pop
dec
push
xchg
xlat
out
lahf
cmp
dec
jb
and
lds
mov
stos
lahf
add
mov
loope
push
jecxz
loop
mov
xchg
inc
push
push
sar
fildl
mov
cmc
xor
les
add
lea
or
addr16
pop
mov
sbb
adc
outsb
test
mov
and
pop
push
mov
push
mov
fldt
scas
xchg
mov
int3
pop
call
and
inc
movsl
add
pop
xchg
lods
push
fiadds
sbb
frstor
ja
inc
cli
repz
xchg
sbb
cmp
pop
lea
fistpl
fcomps
out
clc
cwtl
test
push
repnz
add
fucomp
inc
jo
out
out
jmp
inc
pop
and
mov
ja
xorl
subb
test
in
add
movl
hlt
inc
dec
ret
insb
repnz
and
fld1
adc
loope
xor
push
aaa
clc
push
popf
pop
movsb
mov
xor
mov
and
pop
pop
pop
clc
orl
out
pop
test
fistl
sub
push
push
jbe
sarl
inc
jge
and
cs
mov
jae
loop
ss
or
mov
jmp
cltd
cltd
push
mov
jns
adc
mov
in
pop
jecxz
mov
pop
out
mov
mov
adc
inc
mov
stos
or
iret
aaa
push
arpl
rolb
and
mov
xor
daa
into
es
jbe
mov
mov
add
icebp
xor
stos
add
insb
push
fisubrs
or
in
xor
inc
aad
push
jge
inc
jge
rorl
pop
bound
jb
insb
sahf
dec
jecxz
adc
push
push
pusha
in
roll
and
leave
add
int
std
in
nop
pusha
cld
xor
and
jbe
mov
cmc
mov
xchg
jnp
inc
and
mov
xchg
rcl
dec
sti
and
mov
inc
cmc
or
push
push
mov
push
pop
arpl
add
jne
mov
pop
in
in
mov
jbe
nop
mov
mov
mov
pop
arpl
inc
jbe
stc
jb
ret
out
inc
pop
rcrl
imul
dec
divb
hlt
jl
in
mov
dec
push
aad
xchg
mov
stc
jbe
xchg
xchg
shll
jp
push
push
xor
movsb
push
add
in
repnz
cwtl
scas
testl
pop
js
imul
daa
pop
jp
mov
rcrb
mov
aaa
punpckldq
push
les
movsl
and
xor
bound
inc
dec
je,pn
insb
and
inc
leave
es
stos
jae
inc
pop
and
xlat
scas
inc
imul
mov
test
in
pop
push
cmpsb
or
adcb
iret
pop
std
jbe
cmp
or
pushf
inc
popa
nop
test
fisubrs
js
dec
mov
jge
inc
xor
ja
jl
lods
gs
mov
lcall
adcb
aaa
fldt
fcoms
fwait
sub
add
xchg
jo
lcall
insb
push
inc
mov
dec
insl
enter
lods
call
pushf
lea
push
bound
icebp
adc
pushf
es
jge
xchg
jmp
pop
push
dec
push
mov
js
sahf
stos
xchg
mov
ret
inc
mov
aam
sbb
cmp
cmpl
nop
out
cltd
xchg
add
push
mov
cmp
in
jg
jne
insl
test
cmp
loopne
lea
insl
inc
push
shl
test
cld
out
lods
cmpsb
sub
jmp
dec
mov
aam
xorl
pushf
lock
ljmp
xchg
bound
gs
out
sub
inc
mov
inc
adc
sbb
out
xor
lds
mov
jmp
mov
inc
push
loop
lcall
faddl
mov
loope
adc
into
lcall
fisttpll
push
mov
scas
or
sahf
mov
dec
xchg
in
cmpsl
jo
dec
insb
mov
fnop
fdivl
std
jecxz
dec
mov
imul
and
pop
mov
push
pop
or
push
jmp
jle
and
js
stos
adc
nop
jae
es
testb
mov
dec
inc
adc
xchg
inc
mov
cmp
mov
iret
outsl
popa
mov
inc
mov
jge
mov
add
aas
pop
adc
shll
dec
pop
notl
jmp
and
enter
js
idivb
adc
loopne
adc
push
cmp
rcl
jnp
pop
aaa
gs
mov
ljmp
mov
outsb
mov
std
mov
or
sub
mov
mov
mov
lds
test
sahf
jbe
into
jge
jb
fsubr
add
hlt
adc
fimuls
fs
and
jg
aaa
jmp
xchg
scas
or
out
and
xchg
mov
inc
fistl
add
adc
hlt
das
testl
mov
lods
lret
push
jg
mov
shlb
jg
sub
mov
fistps
mov
stos
or
or
insl
pop
cmp
cmpsl
push
repz
xchg
negb
clc
loope
mov
push
movsb
or
xchg
or
lret
push
inc
xchg
out
cli
cld
lods
sub
mov
xor
dec
stc
xchg
xlat
fisubrl
rcrb
and
movsl
inc
inc
leave
ljmp
add
arpl
outsl
push
icebp
lahf
add
or
shrb
mov
adc
cmp
cmp
mov
xor
gs
je
inc
stc
and
dec
gs
rol
dec
fcomps
std
lcall
push
loope
daa
push
jb
and
pop
mov
sbb
xchg
sub
addb
jbe
and
and
sub
iret
cmovge
sarl
mov
sar
loope
push
mov
sbb
sbb
xor
and
idiv
adc
sub
test
icebp
mov
test
xor
das
sub
into
jl
push
ficomps
pop
inc
pusha
aad
mov
adc
inc
pop
cmpsb
adc
mov
lcall
cmp
pop
jo
sub
lcall
inc
mov
lods
inc
mov
adc
test
ljmp
cli
and
mov
dec
dec
and
xchg
push
sbb
adc
cmpsb
mov
and
idivb
je
js
popf
and
aam
push
lahf
inc
xchg
adc
and
testl
lret
cmp
movsb
cmp
xchg
inc
std
xchg
cmp
jecxz
mov
sub
sarl
inc
inc
imul
pop
adc
push
mov
xor
hlt
or
jl
xor
and
mov
clc
scas
pop
icebp
cmp
dec
mov
dec
loopne
pop
pushf
mov
mov
sti
mov
stos
sahf
jns
pushf
leave
lret
ljmp
xor
les
mov
push
jl
fisttps
test
and
cmpsl
imul
jo
cmp
jg
jns
clc
inc
push
and
ss
outsl
pop
gs
lcall
xchg
push
outsb
mov
or
jp
dec
in
loop
mov
sarb
mov
fildll
in
push
dec
jb
popa
mov
cmp
mov
iret
andb
sub
cmp
loop
xchg
xchg
imul
roll
test
pop
inc
lea
push
movsl
pop
subl
cmc
dec
and
mov
cli
sbb
mov
dec
subb
loopne
outsl
pop
jnp
jecxz
cmpsb
subb
ret
push
fucomp
pop
imul
stos
adc
vptestnmw
cwtl
and
test
push
scas
inc
push
mov
in
imul
lret
leave
dec
mov
pop
inc
ret
fstpt
inc
mov
cmpsb
outsl
mul
dec
jbe
lret
aam
adc
scas
ljmp
icebp
movsl
in
shlb
movb
ret
mov
cld
leave
xchg
xchg
add
lret
lahf
bswap
stos
cmp
xchg
mov
mov
xor
insb
testb
xchg
dec
imul
mov
test
pop
add
cmp
les
xchg
xchg
les
fistps
imul
xchg
ja
loope
xor
cmp
shlb
adc
dec
cwtl
test
inc
arpl
adc
bound
cmp
xchg
jbe
push
and
addl
xchg
xor
inc
fisubl
mov
push
aas
aaa
mulps
lcall
pop
sbb
push
fcompl
xchg
jb
and
xchg
stos
frstor
cmpsb
inc
cwtl
mov
sub
cmp
jns
sub
jbe
lock
and
aas
lods
xchg
dec
cmp
jl
or
inc
jo
push
jb
enter
add
int
rcrb
add
mov
sahf
or
inc
mov
fisubs
xor
mov
xacquire
mov
adc
int
in
mov
sub
arpl
mov
xorb
and
and
mov
insb
cli
mov
sub
mov
nop
cwtl
loope
popa
jae
sub
inc
pop
push
xchg
dec
fstpl
pop
add
scas
cltd
bnd
xchg
repz
loop
fadds
mov
mov
repz
sbb
sbb
or
test
stos
outsl
xchg
fisttps
popl
cld
and
mov
pop
sbb
jge
faddp
jecxz
fwait
cmp
xor
test
jne
push
sbb
sub
cmpsl
inc
stc
imul
or
lret
jg
inc
or
loop
pop
mov
mov
repnz
scas
fs
mov
inc
fstpl
cmp
and
push
push
push
pop
in
push
xchg
arpl
sbb
xchg
call
jno
loop
mov
jns
push
xor
mov
in
out
inc
lcall
inc
xlat
mov
xchg
imul
fldenv
jl
enter
rcl
outsl
scas
mov
xor
xor
xor
aaa
xor
in
push
enter
xchg
xchg
jbe
loopne
push
or
call
cld
xor
jge
dec
and
std
cmp
test
mov
push
mov
mov
outsl
ds
or
cli
movsb
sbb
pop
pop
cmp
dec
dec
jge
insb
or
in
mov
push
std
stc
jle
xor
dec
lods
out
aaa
out
mov
push
add
jge
lods
inc
icebp
jg
and
pop
movsb
mov
mov
push
incl
js
je
jl
adc
mov
xchg
jl
mov
dec
pop
ja
nop
mov
data16
push
jle
mov
insl
sub
adc
dec
mov
int
mov
icebp
pop
bound
or
push
pushf
aaa
addb
ja
int3
ja
add
mov
out
in
shrb
mov
outsl
jns
mov
push
scas
rorl
fisubrs
push
imul
aad
xchg
bound
xor
cmp
add
cs
push
push
xchg
dec
sub
lcall
cmp
hlt
in
xor
std
dec
dec
outsb
cmp
pop
lea
js
rorb
mov
mov
mov
cli
pop
sbb
xor
rorl
lahf
pusha
jmp
xor
fidivl
inc
cmc
xor
pop
cli
and
mov
pop
test
dec
stos
icebp
jecxz
ds
aam
cli
dec
cli
dec
pop
js
iret
inc
test
ret
mov
pop
push
stc
pop
mov
adc
add
fsubl
mov
pop
and
stc
cmp
ret
nop
pop
mov
sbb
and
sub
jmp
inc
push
loopne
dec
ffreep
imul
lea
daa
loopne
and
scas
cmpl
adc
fildl
mov
xor
rorl
inc
call
jne
out
sti
sub
sbb
inc
xor
sahf
enter
dec
mov
in
or
iret
cmp
inc
cmp
xchg
ret
mov
pop
xchg
out
and
adc
popa
leave
in
dec
imul
fprem1
jne
push
mov
js
push
jbe
sub
mov
xchg
adc
cmp
push
cmp
mov
mov
xor
mov
stos
or
arpl
fldt
icebp
push
roll
pop
mov
outsb
adc
repz
mov
mov
cmovbe
mov
movsl
gs
fildll
and
mov
inc
sub
xchg
aaa
aad
cmp
pusha
sahf
jb
fsubs
cwtl
add
mov
or
fsub
mov
pop
or
adc
jge
jmp
stos
ds
call
inc
mov
daa
push
and
loop
mov
aas
xchg
or
mov
idivb
cld
adc
movsb
push
jns
js
fnstcw
pop
ljmp
cmp
shl
nopl
cmc
adc
dec
or
sub
push
test
imul
es
repz
add
aas
mov
cmpsl
fstps
ret
mov
inc
out
mov
or
mov
xchg
test
cmp
dec
push
or
movb
sub
sbb
negl
cmp
enter
sub
cli
adc
jecxz
pop
scas
lods
mov
ljmp
sbb
jbe
jne
cli
repnz
sub
pop
outsb
jp
std
es
adc
mov
pop
inc
lock
arpl
mov
push
sub
cmpsl
insl
das
mov
xor
sbb
test
int3
cltd
sub
fnstenv
shrb
insl
lret
add
cmp
or
jno
ficompl
sub
mov
mov
mov
ret
mov
adc
push
pop
fidivl
cli
sub
push
shrl
pop
or
or
push
leave
cli
mov
xchg
in
and
popf
mov
add
mov
imul
mov
and
xor
jne
push
pop
loopne
and
mov
mov
pop
mov
popa
sahf
scas
cld
jno
int
push
adcl
sbb
fldl
shll
and
or
push
in
mov
fisttpl
push
and
xchg
inc
outsl
sahf
mov
or
adc
mov
dec
imul
xor
fisubs
loope
add
and
and
arpl
jge
test
outsb
fmuls
lret
call
mov
push
dec
pop
mov
jne
les
mov
xor
out
test
mov
sahf
mov
pusha
shll
lret
enter
dec
fistps
test
ret
inc
add
sbbb
sub
cld
xchg
jno
int3
andl
rorl
in
or
sub
pop
orb
xchg
lea
jb
nop
jl
and
out
pushf
dec
mov
testl
pop
push
mov
pop
inc
loop
aam
dec
mov
hlt
mov
sub
pop
pop
lods
adc
fst
dec
fs
push
loop
lods
pop
inc
inc
aad
lods
das
daa
sbb
sub
leave
adc
nop
xor
mov
imul
push
shll
and
addb
test
and
aad
call
bound
sbb
sub
sub
icebp
push
xor
xchg
add
pop
or
sub
inc
push
jb
xchg
adc
ss
mov
ret
pop
scas
mov
in
scas
push
adcl
cmp
addr16
sbb
jge
sub
xchg
cs
mov
leave
lret
shl
push
rcll
pop
xchg
ds
dec
insl
and
inc
hlt
stos
push
cmc
iret
inc
inc
jle
sub
fcmovnbe
je
shll
fcoms
mov
xcrypt-cbc
cmpsl
adc
testb
out
mov
push
dec
push
xor
jmp
and
sbb
popf
insl
nop
mov
sub
sub
or
pop
sub
xchg
fdivl
xor
inc
jno
xor
std
xlat
js
push
out
js
xchg
aaa
pop
adc
cmp
adc
push
nop
fcomps
cmc
push
fdivrl
jp
dec
push
pop
jns
sahf
push
fwait
mov
cmpsb
cmp
adc
cmpsb
outsl
pop
mov
pop
xor
inc
inc
ljmp
subl
aam
inc
or
leave
mov
outsb
jle
lret
pushl
sbb
adc
loopne
push
mov
movsb
dec
cld
xchg
cmp
xchg
lret
push
fdivrs
push
pop
or
and
sub
pop
test
mov
pop
add
test
sbb
out
sub
and
mov
imul
mov
sub
shlb
inc
mov
cli
clc
pop
xor
mov
adc
adc
push
sub
dec
mov
mov
pop
sbb
jae
mov
inc
jge
ret
cmp
sar
add
les
push
cmc
out
jno
push
mov
pop
cmpl
xchg
sub
add
mov
cwtl
popl
lahf
pop
into
mov
aaa
cld
cltd
cmpsl
inc
mov
add
bound
pushf
aas
xchg
jg
ja
iret
add
xor
sub
icebp
push
mov
push
xchg
mov
pusha
adc
insl
dec
mov
dec
cld
add
xchg
shlb
adc
aad
dec
std
jg
mov
dec
jns
mov
dec
clc
into
into
pop
ljmp
test
je
pop
jp
or
jge
dec
mov
mov
lahf
test
and
lret
mov
ficomps
idivl
mov
fildl
pop
add
cmp
call
sbb
mov
dec
outsb
out
mov
sub
add
nop
jle
scas
rorl
push
xchg
sbb
adc
inc
cmp
stos
xor
clc
sbb
pop
cmp
adc
adc
fwait
xchg
cmp
inc
bound
xor
cmpsl
imul
fwait
pop
inc
lea
test
cmp
mov
icebp
fidivs
add
icebp
into
lret
mov
adc
je
sbb
adc
dec
jae
imul
mov
bnd
cli
xchg
out
clc
xchg
mov
cmp
pop
in
jns
add
loopne
xor
inc
stos
jmp
and
out
testb
add
jl
cmp
pop
add
aam
es
cwtl
and
push
pop
inc
mov
sti
or
out
outsb
mov
mov
pop
call
push
inc
jl
orb
int3
pop
fs
iret
fldcw
pop
arpl
adcb
lret
hlt
xchg
outsl
insl
add
jecxz
jo
lock
cwtl
fnstenv
sahf
jne
xchg
adc
dec
jl
pop
cmpb
clc
testl
ljmp
aas
fdivrs
inc
cmp
and
lcall
or
cs
test
es
repnz
pop
xchg
push
sti
inc
mov
push
push
cld
sahf
mov
das
adc
pop
int
mov
pop
mov
shll
fwait
data16
xchg
sti
mov
add
call
xchg
mov
out
loope
dec
push
in
cld
sub
int
movsl
enter
lods
fiadds
call
pop
lcall
call
fldl2t
sbbb
out
xchg
inc
fisubrs
jne
imul
test
jae
xchg
xor
and
xor
jns
shll
fwait
shll
mov
adc
mov
xlat
jae
inc
test
dec
pop
into
shrb
and
push
mov
cld
fs
xor
add
cmp
mov
ja
or
inc
roll
sarl
movsl
lock
mov
push
inc
rcl
dec
subl
jae
cs
aas
popa
pushf
les
jl
fucomip
dec
dec
dec
out
nop
or
int
je
mov
scas
lods
pop
mov
fnstsw
fdivl
fincstp
ss
cmc
mov
or
inc
cmpsb
mov
mov
or
xchg
std
fiadds
ret
inc
into
jmp
add
xor
xorl
test
pop
dec
or
push
ss
popa
or
test
cmp
enter
cltd
cld
mov
fdivl
xor
lahf
aas
hlt
ffreep
inc
iret
mov
loop
negl
adc
mov
divl
sbb
addr16
pop
add
fcmovnu
push
jg
enter
iret
imul
xor
lret
into
scas
and
adc
dec
or
mov
adc
pop
hlt
insb
jp
cs
jne
mov
pop
jle
daa
lds
in
pop
hlt
not
fcomps
pop
cltd
cmpsl
enter
and
sbb
jae
cld
in
data16
ljmp
push
ljmp
cmp
in
mov
xchg
mov
cmp
sti
and
sbb
fbld
cmp
in
pop
in
push
dec
les
and
ljmp
jae
pop
into
push
fsub
mov
fsubrs
bnd
shlb
mov
scas
call
loop
repz
idivl
aad
mov
nop
cmp
mov
daa
push
and
and
and
leave
lcall
std
out
mov
cmp
cmpl
out
push
push
add
pusha
loope
test
fs
dec
cmpsl
out
and
and
inc
test
stos
jbe
jbe
xor
in
jl
push
jecxz
jg
aas
insl
cmp
pop
inc
mov
jnp
cmpsl
pop
std
jl
mov
mov
xchg
pop
or
cmpsb
cmc
test
push
or
mov
lahf
sbb
ss
jmp
mov
jbe
rcll
xchg
push
ja
cmpsb
cmp
pusha
mov
jns
icebp
mov
add
loope
jp
sub
xor
push
mov
stos
repz
dec
in
jns
arpl
out
jp
addr16
les
stc
scas
push
xchg
xor
ja
dec
pop
push
stos
outsb
mov
out
mov
enter
divb
inc
into
mov
and
negb
or
jle
and
jp
jmp
lds
mov
gs
das
into
decb
fnsave
idiv
aaa
mul
or
or
iret
fwait
addr16
inc
mov
xor
das
ss
push
lahf
popa
jns
pusha
sub
shl
inc
xor
cmp
pop
jmp
lds
movb
xor
mov
in
add
lods
rcll
outsl
cmc
jb
inc
jl
pop
xchg
add
mov
pop
es
sub
outsl
scas
cli
mov
xchg
in
dec
adc
and
xor
sbb
dec
xor
cmp
xchg
mov
adc
sti
daa
mov
jb
xchg
mov
pop
pop
enter
mov
cmpsl
xor
pop
orl
call
in
por
dec
pop
stos
xchg
fisubl
jmp
js
popa
jbe
ljmp
cmp
call
orl
fisubs
fstl
inc
call
cld
mov
push
pop
bound
mov
adc
and
jo
adc
iret
jp
inc
leave
add
cld
lds
jp
add
push
aas
pop
or
sbb
mov
cmpsb
lea
shlb
xchg
jo
stos
out
arpl
lods
jg
push
jmp
insl
xor
dec
pop
lcall
and
adc
loope
notb
push
std
xor
lea
loope
xchg
rcrb
adc
icebp
outsl
test
adc
test
nop
and
fistpll
pushf
out
add
adc
mov
cmpsl
jno
lea
mov
outsl
test
or
jmp
flds
or
out
int
scas
movsl
pusha
ficoml
gs
ds
sbb
lea
vcvttpd2dqy
inc
mov
cmc
mov
adc
int
stos
sbb
out
scas
notb
mov
adc
mov
and
and
repz
fisubrs
jne
mov
mov
dec
sbb
xchg
in
fldenv
enter
mov
adc
sub
adc
sahf
std
popf
clc
mov
ret
mov
ret
pop
dec
dec
lods
mov
xchg
pop
je
mov
sti
pop
loop
ja
dec
pop
or
loopne
mov
lods
pop
stc
cwtl
mov
sbb
dec
push
push
fcmovu
mov
ret
dec
xor
mov
mov
pop
in
stos
scas
adc
push
ljmp
gs
fbld
inc
xchg
imul
inc
sub
cmp
fnstsw
dec
pop
scas
inc
mov
in
rclb
sbb
loope,pt
inc
mov
pushf
xchg
mov
out
orl
stc
or
and
cli
sub
cmp
ss
mov
in
inc
leave
lock
xchg
and
adc
mov
sub
dec
gs
in
out
icebp
lahf
xchg
addl
mov
jns
test
pop
mov
stos
repnz
mov
lcall
or
add
mov
fimull
xor
pop
pop
pop
and
adc
sbb
pop
lock
mov
xchg
inc
dec
mov
rcll
and
xchg
pop
push
sub
std
clc
jae
push
cmp
mov
fwait
add
in
mov
jnp
dec
out
bound
shl
jecxz
sbb
and
fistl
js
out
push
out
fs
test
cltd
push
addr16
gs
pop
std
mov
cs
dec
dec
push
mov
clc
cmp
jnp
adc
dec
or
and
push
xchg
jns
lahf
sar
mov
in
jl
insb
sarb
jb
pusha
insl
je
push
aaa
test
cli
or
jle
dec
rcll
fistps
mov
inc
push
mov
pop
mov
inc
jnp
lds
mov
inc
adc
and
or
xor
dec
ret
in
scas
and
lret
xchg
mov
or
stc
sub
add
movsb
test
and
mov
scas
mov
pushf
mov
sbbb
insl
loopne
mov
mov
push
fstp
xor
repnz
enter
scas
test
inc
pop
or
aad
in
ret
in
out
inc
jo
or
push
xor
push
mov
xchg
xor
jp
mov
les
pop
add
xor
adc
lock
shl
push
subl
dec
or
cmpsb
add
dec
aad
loopne
xchg
inc
adc
daa
out
dec
xchg
rcll
and
fmull
jns
pop
repz
outsl
mov
mov
mov
or
pop
or
sub
jl
ja
and
pop
add
mov
pop
mov
sbb
push
dec
insw
sub
xchg
adc
xchg
or
and
ror
test
movsl
call
xor
inc
cmc
xchg
iret
jl
mov
loopne
mov
cli
sub
pop
popf
push
add
mov
lods
scas
or
mov
mov
dec
es
shll
setbe
pusha
andb
sbbb
pop
mov
mov
loope
lds
sarb
mov
mov
mov
sub
scas
mov
mov
lods
and
aad
loopne
lret
adc
cmp
sahf
frstor
lcall
stos
sbb
xor
aas
in
test
jp
adc
out
sub
dec
divb
mov
gs
ss
std
lods
sbb
es
jno
sbb
dec
mov
fists
xchg
shll
rcrb
mov
in
daa
jns
jle
mov
pop
in
pop
lods
jbe
pop
mov
imul
data16
adc
mov
push
loope
xchg
mov
and
loop
cmpsl
roll
repnz
outsl
negl
js
out
inc
push
fs
push
jg
jb
out
mov
push
push
jecxz
inc
mov
mov
mov
int
imul
loopne
jne
mov
imulb
cmp
adc
cltd
fsub
and
dec
push
or
ljmp
pop
xchg
loope
sbb
sub
xor
or
jae
sub
mov
loope
dec
popf
das
push
push
mov
mov
imul
dec
xchg
iret
loope
inc
lock
sbb
push
rorb
jl
stc
and
pushf
addb
xchg
mov
fwait
xchg
adc
push
adc
or
stos
sbb
in
mov
inc
stos
fs
sarl
test
inc
pop
jecxz
jg
add
inc
add
mov
lods
jp
loopne
xchg
in
movsl
shlb
in
pusha
add
add
and
sbb
ret
mov
xchg
stos
inc
leave
mov
dec
adc
fisubs
add
loop
popl
and
sbb
xchg
cmp
dec
mov
test
sahf
mov
adc
dec
daa
in
xchg
add
xor
sbb
roll
movsl
shr
lret
lret
test
jae
push
jo
sub
jmp
fwait
cli
test
rcrl
sarl
push
xchg
jge
fildl
mov
dec
in
jns
lods
jnp
fwait
jmp
popf
sub
dec
jle
push
lret
add
repz
les
mov
loope
and
out
out
push
sub
or
jb
add
xchg
imul
xor
cmp
jo
inc
and
pop
mov
sbb
push
lods
mov
das
out
lock
shll
xor
fcoml
xor
mov
int3
scas
jl
xor
outsb
mov
pop
ja
setle
test
pop
jmp
mov
mov
js
dec
mov
sahf
mov
fildl
adc
aaa
xor
jmp
sbb
or
lcall
jo
adc
arpl
xor
inc
test
stos
inc
fsts
inc
aam
clc
loopne
add
mov
dec
popf
add
push
inc
push
add
mov
notb
sub
mov
mov
cwtl
mov
shlb
pop
mov
idiv
mov
jae
xchg
ljmp
leave
mov
xlat
insl
in
outsb
xlat
add
dec
jmp
xchg
or
and
push
add
xorl
mov
or
inc
stos
and
xlat
test
shll
xchg
mov
lcall
xor
xchg
ja
jle
notb
stos
lods
mov
cmp
sub
fnsave
or
cmp
mov
test
pop
and
xchg
add
sarb
mov
cltd
clc
popa
cmc
xlat
fldcw
mov
fld
mov
and
insl
dec
outsb
jle
insl
fisubl
xor
jg
arpl
aas
rcrb
and
xor
xchg
cmpsb
test
es
stos
cmp
mov
cld
add
aaa
mov
pop
gs
push
xor
mov
xchg
stc
inc
and
je
and
inc
test
and
sbb
push
call
dec
lret
out
adc
xchg
cs
xor
xchg
notl
xchg
push
jl
imul
sub
cmp
hlt
fdivr
imul
jns
dec
mov
or
xor
dec
scas
out
mov
mov
testb
loopne
or
push
cs
xchg
call
in
ljmp
out
rclb
inc
push
jle
ja
or
out
sub
pop
inc
pop
fstpl
jle
scas
jbe
js
or
movsb
aad
les
js
sbb
les
imul
movsb
hlt
cld
cmp
imul
std
pop
sub
into
fists
cmp
mov
mov
mov
sahf
mov
adc
jbe
inc
jb
adc
mov
in
pop
push
or
mov
out
pop
dec
inc
mov
pop
pushf
loop
jbe
add
lret
mov
cmc
jle
sbb
push
outsb
sbb
je
scas
das
imul
ss
pop
mov
add
jo
cmp
stc
fsub
loopne
movsl
gs
jnp
sub
cld
cmp
test
fwait
jb
mov
push
add
pop
mov
mov
adc
push
test
mov
stos
ror
dec
mov
fsubl
push
sub
mov
xor
xor
lods
fdecstp
xchg
test
sti
pop
movsb
lcall
cmp
pop
cs
hlt
or
fmuls
fdivs
push
cmpb
enter
int3
in
andb
mov
mov
pop
bound
mov
mov
push
hlt
mov
int
aad
or
addr16
jbe
call
add
imul
cs
sub
dec
into
nop
push
mov
adc
data16
add
repz
push
test
lods
ja
add
rcrb
jnp
and
sti
lea
mov
in
imul
out
mov
jl
imul
cmp
and
xchg
int
imul
sbb
leave
lret
dec
mov
xchg
cmpsb
popa
js
cs
and
orb
mov
or
jl
cmp
or
adc
mov
rcll
xadd
push
mov
pop
push
xor
fimull
rcrl
fbstp
jae
xchg
dec
adc
sbb
into
jmp
mov
shll
jge
pusha
jnp
mov
lods
push
fildl
and
arpl
data16
mov
xor
je
push
je
cmc
jmp
test
stos
in
pop
shrl
mov
sbbl
lock
push
data16
loope,pn
cmp
mul
push
js
mov
cld
sub
pusha
ss
add
jge
ds
lock
loopne
bound
fisttpll
stos
push
cmc
pop
pop
out
pop
lret
add
popa
lea
inc
mov
jne
xchg
cltd
dec
mov
flds
fisttpll
shrl
cmpsb
add
aam
mov
cmp
push
or
push
lds
add
imul
cmp
fiaddl
mov
jns
and
and
mov
cmpsb
sbb
mov
pushf
cltd
mov
ret
scas
sub
xor
and
icebp
adc
inc
mov
xlat
add
sbb
jo
lds
jle
cli
rcrl
pop
addr16
cmp
push
xlat
std
cwtl
mov
movsl
push
jmp
es
fadd
hlt
ljmp
push
aam
fwait
mov
icebp
stos
cmp
mov
stos
sbb
out
or
negb
hlt
les
cmp
jle
std
jae
popa
jb
popf
sbb
jno
pop
mov
orl
push
icebp
xchg
shrb
data16
push
dec
and
lcall
adc
gs
js
out
add
cmpb
aaa
pusha
or
out
nop
test
cmp
popa
sub
or
scas
cmp
mov
sbb
or
inc
test
xchg
dec
push
das
insl
xchg
push
xor
dec
mov
stos
mov
pop
xlat
sbb
ficoms
mov
mov
mov
and
pushf
xor
xchg
js
inc
bndldx
mov
sub
mov
jge
mov
pop
and
sub
adc
push
jecxz
fadd
cli
lods
rorl
mov
push
mov
cmp
icebp
mov
sarb
pop
push
xchg
loopne
mov
jmp
ds
insl
leave
leave
inc
jmp
sti
adc
pop
push
sbb
loop
cltd
pop
movsb
cmp
jb
scas
push
out
outsb
lret
js
aad
cmp
enter
sbb
fisttpll
mov
repz
js
dec
sub
dec
dec
aaa
jo
inc
jnp
inc
adc
aad
popf
rcrl
xchg
ja
sarl
stc
shlb
in
ret
addl
pushf
adc
inc
add
push
cmp
pop
leave
push
xor
mov
mov
icebp
or
push
fwait
out
and
bound
fildll
xchg
xchg
xorb
sahf
pop
inc
test
mov
jge
mov
out
aam
insb
mov
insl
adc
push
jb
add
jl
fnsave
jno
push
xor
and
xchg
mov
push
outsb
iret
mov
es
scas
adc
dec
jle
push
mov
mov
fdivr
cld
mov
adc
rol
popl
in
fsts
inc
arpl
arpl
rol
sti
mov
cwtl
scas
xchg
shll
cmp
lret
out
push
inc
outsl
push
mov
pusha
dec
jae
cmp
ljmp
stos
outsl
mov
xor
pop
add
jo
ret
dec
rolb
adc
xchg
lret
jns
xchg
cmp
in
inc
push
inc
xor
jae
or
dec
adc
add
sarl
aam
inc
es
das
stc
popa
xor
jmp
xchg
lcall
aas
push
add
adc
adc
popa
aas
dec
sub
mov
push
sub
idivb
dec
cmpl
popa
add
sub
test
test
dec
mov
rol
cmp
or
mov
dec
in
fidivl
testl
outsl
aad
loopne
pop
mov
test
xchg
or
xorps
and
dec
jecxz
std
xchg
cltd
xchg
clc
iret
nop
pop
lret
ljmp
or
cwtl
pop
push
inc
mov
lods
xor
lock
xor
pop
mov
xchg
inc
fcmovu
pop
adcl
jbe
cmp
loope
pop
iret
and
sbbl
or
adc
mov
lock
jmp
sbb
push
mov
negl
ja
xchg
out
in
jmp
scas
in
mov
xchg
shll
pop
sub
nop
and
or
jo
jge
lock
sbb
cmc
fsubrs
inc
push
mov
in
or
pop
jnp
mov
test
sbb
xchg
aad
rcl
loope
mov
iret
or
into
xchg
out
and
rcrl
arpl
push
lahf
pop
aaa
leave
ljmp
cmp
je
aas
mov
push
pop
add
jne
jo
fimuls
cli
jmp
add
call
shrl
xchg
insl
xchg
popa
mov
jnp
icebp
cmp
mov
add
int3
xchg
mov
sti
xchg
ja
cwtl
add
push
sub
cmp
cmp
push
bound
add
xor
insb
js
jno
dec
popa
inc
mov
push
mov
test
gs
lahf
inc
jno
in
push
jnp
add
push
and
sahf
push
bound
sub
movsl
jg
dec
ds
push
adc
ret
bndstx
or
in
outsb
xchg
sub
inc
mov
jle
push
xor
ss
scas
addb
dec
fimull
inc
and
testl
sub
lock
adc
dec
mov
repz
mov
bnd
dec
popa
add
cmp
insb
lret
cltd
sub
fs
das
fdivrp
repnz
pop
inc
dec
cli
xor
cmpsl
or
sahf
int
push
icebp
pop
call
rorl
ret
xor
jecxz
je
sbb
mov
cmp
push
mov
sbb
stos
cld
adc
jg
jae
lcall
push
xchg
push
popa
cli
pop
cli
add
pop
js
in
cs
fwait
xchg
rep
ds
lea
fwait
pop
adc
jb
dec
ret
popa
inc
dec
mov
aaa
incb
out
rolb
jle
test
cmp
repnz
es
mov
dec
cmpsl
add
sbb
or
fsubl
or
test
inc
push
test
insl
push
adc
mov
vfnmsub213pd
loope
popa
pop
out
cs
xlat
xor
adc
pop
fnstcw
movsb
aam
jge
and
cli
cmp
jns
jmp
xchg
mov
mov
int3
lock
aad
push
inc
fsubrl
repnz
adc
mov
cld
adc
lea
arpl
iret
lods
aaa
rcll
pop
orl
xor
repnz
mov
push
rcll
xor
add
sbb
ljmp
nop
fsincos
mov
or
mov
test
ret
jge
xor
fwait
std
push
icebp
jae
pop
stc
js
jle
shl
mov
hlt
lea
pusha
lahf
push
mov
jp
cmp
repnz
sbb
cwtl
dec
dec
shrl
dec
cli
int
pop
or
sbb
push
push
iret
push
inc
imul
or
repnz
mov
mov
add
cmp
inc
mov
mov
xor
inc
and
imul
cwtl
pop
lret
pop
cmpsb
int
aad
scas
aaa
jnp
cmp
fs
adc
push
dec
mov
shlb
hlt
pusha
jo
mulb
push
movsb
cmpb
vpsllq
les
out
inc
pop
jb
sub
mov
icebp
mov
cmpsb
cs
xor
popa
pop
and
jl
sub
and
mov
sub
test
push
or
sbb
fstps
cmpsb
push
jne
cld
scas
popa
inc
pop
das
mov
out
inc
mov
jno
xor
scas
fidivrs
inc
into
cltd
dec
pop
mov
mov
repnz
out
dec
cli
andl
imul
daa
cli
fs
aaa
popa
gs
cmpsl
loop
pop
arpl
movsl
and
outsb
imul
jo
xchg
popa
pop
mov
add
and
shlb
inc
clc
mov
fimull
fsts
repnz
xor
out
cmp
daa
pop
mov
int3
jmp
sub
add
adc
into
inc
pop
add
ja
push
jns
test
repnz
mov
xor
les
fdivrl
leave
mov
sbb
cmp
fcmovbe
in
adc
xchg
xlat
and
xor
adc
test
ret
adc
cmpsl
loop
xchg
daa
ja
in
push
idivb
das
icebp
subl
ud0
add
cmp
aaa
sahf
jne
pop
adc
dec
or
leave
lods
and
push
ficoml
int
lods
or
ss
bound
stos
test
shll
pushf
jmp
sub
jecxz
rcr
push
movsb
inc
mov
lret
stc
cmp
mov
push
or
lds
push
repnz
int3
xchg
sub
pop
mov
push
or
insl
jo
inc
cmp
sub
mov
out
jns
dec
movsb
and
ljmp
je
sub
aas
lret
push
inc
sub
lods
arpl
sub
in
sub
jae
mov
cmp
inc
mov
nop
cltd
stc
and
push
mov
mov
xorb
jge
in
sub
jle
out
mov
int
cmp
lret
pop
cld
cmpsb
mov
insl
or
dec
xor
popa
push
mov
pusha
sub
mov
std
int3
cmpl
cmpsl
xor
add
jne
push
dec
movsb
mov
cmp
rcrl
out
inc
mov
in
inc
ja
fistps
int3
rol
pusha
std
xorl
cwtl
xchg
mov
or
cld
aaa
and
xlat
mov
stos
mov
and
xchg
sbb
jae
data16
push
sbb
pop
sbb
or
icebp
jnp
repz
loope
scas
jg
in
dec
push
push
push
lea
cmpsb
xchg
or
cmp
push
xor
sub
mov
cltd
sub
push
inc
jp
cmp
add
fcoms
lea
int3
sub
repz
inc
mov
test
int3
iret
jnp
push
push
sahf
stos
jnp
lcall
or
mov
in
jne
lods
andl
push
inc
xchg
inc
gs
es
imul
jb
xchg
sub
cmp
movsl
cmp
sub
out
push
fstps
cmp
push
add
adc
mov
loopne
cld
movsb
sarl
and
mov
ljmp
xlat
mov
icebp
dec
out
aas
pop
jne
flds
in
es
cli
hlt
mov
sbb
mov
neg
icebp
and
jo
mov
or
inc
mov
mov
sub
sbb
shll
cmp
mov
andl
inc
pop
fsubrp
mov
jbe
mov
negl
jge
iret
push
sub
adc
or
dec
js
dec
aaa
repz
popf
push
jae
inc
outsb
popa
pop
or
pop
ret
mov
mov
inc
cld
sub
int
xor
dec
or
sbb
sub
and
or
lods
push
scas
in
mov
cmp
rcrl
ja
push
mov
sub
movsb
add
and
inc
outsl
stos
push
dec
nop
adc
inc
xor
test
icebp
xchg
insl
inc
cmp
cmp
mov
shl
xchg
jo
pop
sti
or
push
js
ficompl
clc
cld
mov
mov
inc
xor
mov
mov
push
enter
adc
lock
xchg
inc
fdivrl
mov
loop
pop
mov
sub
sbb
xchg
push
call
jb
cmp
sub
in
ficompl
mov
mov
loope
fwait
xor
xchg
mov
sbb
xor
out
int3
pop
cmp
out
xor
cli
stos
div
inc
push
inc
andl
shll
mov
rclb
lock
mov
push
scas
and
or
loop
inc
pop
xchg
sbb
dec
add
test
inc
xchg
push
mov
sub
push
std
push
lods
xor
cmc
xchg
mov
icebp
cltd
loop
out
mov
stos
sahf
movl
jmp
inc
leave
jns
or
jl
aas
jb
cmp
js
xchg
sbb
add
fiaddl
mov
out
icebp
jl
add
arpl
sbb
pushf
fisttps
xlat
or
sub
ret
cli
test
adc
xchg
xor
mov
push
in
inc
mov
roll
xchg
fisubrs
fcoml
jle,pt
insl
sub
inc
cmp
aaa
fldl
jmp
loope
lods
pop
movsb
scas
mov
push
arpl
mov
lret
loope
add
cmpl
mov
cmp
inc
cmpsl
sbb
movsb
pop
mov
ret
jno
cmp
out
addb
sub
sbb
inc
push
es
push
enter
aas
xor
push
sub
test
xchg
and
iret
jae
les
into
sbb
les
jno
xchg
stc
xor
stos
pop
repz
jns
dec
push
jp
mov
fldl
bound
subb
mov
and
lret
or
push
jg
cmp
push
pop
gs
flds
rcll
stos
mov
pop
sbb
sub
sbb
xor
and
int3
mov
jp
addr16
mov
movsl
add
xchg
jp
mov
mov
jo
pushf
sub
jle
jno
xorl
fcos
rcll
pop
bound
js
and
jne
popf
jb
arpl
sub
idiv
int
fisubs
sub
sub
mov
push
or
adc
out
and
push
jp
push
cmp
xor
xor
cli
mov
sub
bound
je
sbb
pop
movsb
pop
rclb
hlt
push
insl
mov
fwait
cli
rol
fdivl
aam
jns
mov
ret
je
push
es
push
into
jge
adc
rclb
xor
stos
outsl
and
test
mov
gs
sbb
jge
xor
mov
lock
push
pop
jle
sub
sub
jl
inc
inc
stos
std
push
ret
popa
mov
in
stos
repz
aam
jle
ficoms
ret
cmp
stos
aad
lock
cmp
test
dec
hlt
mov
cs
dec
xchg
and
xchg
inc
dec
sub
mov
inc
dec
pop
imul
push
fcompl
mov
fbld
jl
pop
leave
movsl
mov
sysret
xchg
and
xorl
xchg
loopne
mov
pop
in
xchg
sub
andl
stos
sub
dec
mov
lahf
mov
push
cmpsl
and
pop
jmp
loopne
movsl
mov
push
pop
loopne
incl
fwait
mov
negb
imul
daa
les
bound
addb
pop
cwtl
push
pop
stc
sti
push
ljmp
mov
sbb
sub
mov
shll
jmp
mov
mov
jl
cmpsl
outsl
jmp
mov
xchg
popa
shlb
loop
dec
mov
loopne
jg
cmp
test
insb
adc
aam
imul
es
shrb
dec
mov
ja
stos
jmp
adc
jp
test
add
cmp
push
les
adc
cs
fidivs
jb
inc
fwait
xchg
insl
and
or
fxch
lods
and
icebp
mov
pop
lods
movsl
push
mov
dec
xor
adc
mov
into
and
adc
movsb
mov
push
lea
mov
test
sub
and
adc
stos
ljmp
inc
mov
aad
jmp
and
cmp
sub
popf
sbb
push
mov
push
or
mov
jp
xor
aaa
and
movsl
sub
sbb
mov
add
insb
and
mov
fucomi
rcrl
xchg
shlb
movsb
leave
in
pop
subb
cmc
mov
pop
testl
and
inc
dec
cmp
mov
clc
inc
adc
inc
je
and
push
mov
adc
dec
mov
lds
xchg
arpl
and
and
pop
push
stos
repnz
jmp
adcb
pop
jne
imul
jl
repz
sbb
ret
push
out
loope
repnz
icebp
mov
lds
test
pop
or
jae
movsl
lds
nop
popa
roll
and
into
jb
pusha
add
outsb
adc
lock
mov
ficoml
sbb
mul
sahf
stc
sub
sub
add
and
and
pop
adc
adc
in
sbb
adc
mov
mov
cmp
sbb
pop
sbb
mov
popa
dec
stc
dec
sbb
xchg
jecxz
in
mov
pop
inc
test
adc
mov
pop
lea
lods
cltd
add
insb
aaa
inc
and
call
imul
clc
mov
or
movb
andl
pop
lcall
mov
inc
cmpsb
sub
int3
dec
clc
ds
pop
pop
outsl
stos
incl
stos
int3
sbb
sbb
aas
jo
and
xchg
shll
imul
das
mov
ljmp
lret
dec
sbb
dec
std
stos
lods
cmp
pop
mov
or
hlt
dec
mov
cmp
fwait
pop
mov
push
jae
aas
fistps
mov
cmp
sbb
out
stc
dec
je
ss
jl
lret
jmp
fdivrs
mov
cld
loop
test
sbbl
into
adc
icebp
mov
cmpb
setne
test
sti
cld
cli
enter
out
lds
data16
das
inc
xchg
sub
push
shr
sub
rcl
shrb
je
xor
sub
inc
and
mov
leave
mov
call
add
jg
push
int
xor
xor
inc
xor
es
jle
dec
adc
push
ss
dec
pop
xchg
cmpb
inc
lret
add
mov
fstpt
lock
xor
jmp
xchg
dec
sahf
lods
xor
inc
jg
cmpsb
jmp
xor
dec
sub
rorb
cmpsb
adc
ljmp
sub
xor
adc
loop
dec
cltd
adc
inc
jae
jne
jg
cmp
in
pop
movsl
sbb
sti
idivl
adc
pop
inc
pop
cmp
xchg
cmp
adc
sub
test
shl
mov
ja
movsl
pop
mov
dec
mov
xchg
jl
pop
xchg
pop
adc
sub
jo
fs
aas
popa
mov
cmpsl
sbb
ret
add
jmp
pop
pop
pop
sbb
mov
sti
cld
fstp
insl
ljmp
jb
sahf
dec
sub
xchg
xor
pusha
cmc
data16
mov
int
lods
mov
les
outsb
push
in
out
loopne
mov
pusha
loope
xlat
pop
push
orl
ljmp
pop
sbb
outsl
dec
inc
xchg
adc
ret
add
pop
lds
ficomps
insb
cmpl
rolb
rolb
insb
add
andb
enter
cmpsb
popa
mov
stos
adc
sti
mov
adc
push
ror
cmp
mov
xor
mov
cwtl
push
aas
push
lcall
xchg
inc
mov
pop
idivb
lcall
add
and
loop
jbe
adc
mulb
jecxz
and
popf
gs
mov
or
mov
out
push
mov
push
jae
adc
xchg
ss
dec
cmp
adc
and
lock
sahf
call
jnp
cmpsb
in
data16
or
adc
mov
call
dec
aam
inc
mov
addb
sbb
inc
push
in
mov
int3
test
out
xor
dec
orl
enter
mov
fcoms
scas
inc
xchg
shll
rolb
imul
nop
sbb
sahf
or
aam
repnz
push
jb
outsb
lock
leave
cwtl
and
xchg
lret
push
lods
dec
xchg
lods
ret
mov
cs
adc
lds
xchg
ds
push
pop
fs
fs
aam
in
enter
sbb
pop
test
pop
loop
cli
fdivl
add
pop
cwtl
ljmp
dec
jecxz
push
jp
xorb
subl
imul
pop
mov
sub
mov
push
xchg
rolb
push
push
fs
xlat
and
mov
sti
xchg
cmpsl
mov
es
fdivrs
fldcw
mov
jns
aad
sti
ret
inc
cmp
or
loopne
shl
shrl
pushf
and
std
mov
inc
dec
mov
jg
cmp
push
inc
es
add
stos
repz
or
cmp
mov
xor
jle
jbe
dec
cmpb
gs
fchs
je
add
aas
jp
push
popa
jb
and
jb
icebp
js
cwtl
cmp
push
jo
sbb
push
repnz
cmp
lahf
cmp
mov
mov
dec
sbb
popa
shll
pop
xchg
push
sub
lret
and
lea
sarl
call
xor
ljmp
sbb
jmp
mov
jecxz
pop
lea
movb
fisttpl
cmp
jg
maskmovq
cmp
mov
adc
in
inc
daa
inc
and
sarb
jecxz
mov
push
mov
and
sarb
jp
jne
in
xor
pop
in
sahf
xor
mov
test
add
add
fistpl
scas
cmp
xorb
addr16
xlat
bnd
sbb
insb
mov
dec
jns
push
jmp
pusha
mov
sbb
xlat
adc
das
out
jle
imul
ljmp
mov
cmc
push
cmp
fwait
sbb
pop
fwait
mov
xchg
into
mov
sar
aad
and
out
sub
cmp
pop
gs
repz
jns
adc
push
adc
jmp
decl
dec
jno
push
and
cwtl
repz
pop
push
jae
cmp
test
sub
aad
xchg
sbb
ljmp
in
in
mov
fmuls
or
push
cmpsb
mov
push
inc
ds
add
inc
add
call
and
mov
push
xor
cmc
in
test
jmp
dec
loop
jne
cmp
nop
arpl
insl
scas
mov
outsl
loopne
imul
adc
mov
ds
loope
xlat
dec
fnstenv
xor
fbld
sbb
pop
ja
rcr
notl
push
jne
push
cmp
inc
jne
enter
sbb
inc
add
dec
and
jmpw
movsb
pop
ds
xor
adc
and
xchg
popa
negb
loope
fbld
mov
add
mov
pop
mov
nop
jg
popa
stos
add
cmp
addr16
inc
les
mov
out
gs
jecxz
pushf
xor
arpl
ja
mov
jecxz
mov
sub
movsl
adc
push
cwtl
adc
dec
push
nop
and
scas
stos
sub
leave
ss
sub
dec
loope
mov
in
mov
push
sbb
cmp
xlat
imul
jg
or
shlb
sbb
ja
les
sub
cmp
jnp
adc
popa
int3
jbe
push
out
cmp
jge
scas
push
mov
data16
mov
subb
mov
mov
mov
jmp
into
aas
push
jmp
std
xchg
jmp
push
fcmovbe
pop
mov
jno
stc
jmp
ljmp
scas
sub
jl
lock
sbb
aad
xchg
imul
scas
jno
nop
aas
mov
jmp
repz
jmp
mov
leave
aas
js
enter
lahf
jnp
xor
jae
outsl
fldl
mov
out
sub
test
movsb
jne
jne
cmpb
jle
call
test
shl
jle
test
cmp
das
jle
adc
jnp
pushl
outsl
cmpsb
xchg
leave
int
fwait
mul
mov
mov
sub
fmul
xchg
rclb
jb
std
js
add
lret
mov
nop
repnz
pop
jnp
out
test
popf
pop
int3
mov
or
outsl
loope
mov
add
aaa
xchg
shr
imul
jb
insl
jno
sti
loopne
mov
xor
push
icebp
lea
xchg
je
push
pusha
icebp
repz
neg
ficompl
adc
or
mov
shr
loope
movntps
lahf
std
mov
pusha
xor
cmp
je
mov
mov
fsubl
repz
pop
pop
or
enter
cmp
movsb
lahf
cmpsl
leave
mov
xchg
pop
cmpsb
fstpl
mov
dec
movsb
pop
xchg
pop
and
inc
gs
clc
repz
shlb
cmp
jns
fwait
ss
call
in
push
mov
sar
imul
imul
int
mov
daa
sbb
adc
adc
dec
shl
mov
lea
test
xor
and
mov
pop
movsb
jecxz
cltd
add
inc
lcall
rcl
fs
out
loop,pn
pop
jno
add
pop
and
repz
insl
mov
fimuls
push
or
jmp
push
lods
and
mov
xchg
push
movsl
jp
push
inc
btr
pop
daa
subl
sub
adc
iret
sub
mov
notl
xchg
cmp
inc
pop
popf
out
sbb
popf
push
aaa
or
sub
jg
cmp
jp
push
sahf
fcmovnb
and
fstl
mov
push
movsb
test
ficomps
lret
in
fsubrs
push
mov
lea
sbb
add
inc
cmp
dec
push
fsub
sbbb
setg
xor
dec
les
inc
pushaw
push
std
inc
into
jmp
mov
pop
adc
gs
loopne
and
cmc
lods
in
mov
js
mov
andl
and
jo
pop
inc
int3
arpl
and
sub
cs
add
pushf
fwait
pop
shll
int
cmpsb
cmc
xlat
fwait
xor
inc
shll
fwait
lds
jno
jns
sub
shrb
pusha
xchg
pop
jmp
push
and
dec
movsb
push
je
dec
int
sbb
daa
cmpb
inc
jns
hlt
xchg
mov
add
leave
push
or
jne
push
dec
or
mov
jo
insl
sub
add
or
inc
int3
sub
add
sbb
cmp
and
push
mov
nop
les
lret
push
nop
xlat
jbe
cwtl
lcall
gs
jge
mov
clc
sarb
lcall
jne
and
adc
inc
jmp
xchg
iret
cmc
cwtl
stos
sbb
inc
xchg
xor
lock
hlt
and
pop
lds
xor
loopne
std
mov
lahf
pop
dec
cmp
or
or
pop
iret
xchg
adc
mov
std
insb
pop
mov
negb
jmp
jg
call
or
mov
enter
push
loop
nop
rcll
out
jbe
scas
outsb
sub
sahf
nop
adc
sarl
or
inc
jg
cld
and
jne
xor
push
stos
and
push
je
les
jl
and
jl
out
sbb
xor
push
addr16
fsubl
sub
sbb
stos
rcrl
stos
ljmp
stc
fdivrl
xchg
test
cmp
cmpsl
adc
cmpsb
out
ds
push
mov
jns
test
cmpsb
xchg
sbb
lock
stos
in
data16
test
test
fs
xlat
sti
in
or
jno
mov
pop
adc
push
outsl
clc
push
push
jle
xchg
sbbb
addr16
mov
mov
jno
aad
test
and
xchg
pop
in
movsl
jge
inc
cmp
cmpl
mov
jae
lret
mov
das
mov
repnz
outsb
jno
mov
sbb
clc
adc
out
push
loopne
sub
outsl
jbe
outsb
pop
pop
icebp
sbb
sti
cmc
adc
xor
lret
mov
sbbb
clc
pusha
dec
arpl
pushf
mov
or
testb
cld
mov
mov
xlat
bts
xor
test
les
fwait
inc
inc
push
xchg
mov
xchg
pop
je
and
dec
movsl
int3
and
repz
jmp
lret
jg
jnp
ja
cmpsl
out
in
dec
sub
dec
xchg
xchg
xor
mov
push
mov
pop
repnz
fisubl
jmp
out
aaa
mov
or
sub
mov
in
syscall
adc
pop
pop
xor
dec
mov
shl
cmp
mov
mov
jl
mov
pop
push
inc
out
xchg
or
jmp
call
push
lock
jae
xchg
xlat
mov
and
test
mov
clc
std
cltd
nop
pop
xor
cs
rcll
loope
loopne
and
pop
cmpsl
popf
mov
inc
jbe
aas
loope
jnp
mov
popf
popf
mov
loope
call
vaddsubps
rcll
pop
push
adc
inc
aam
mov
lea
lods
mov
push
int3
xchg
ja
mov
or
pushl
jle
pop
mov
lcall
jmp
fisttps
adc
pop
push
and
mov
jbe
mov
sbb
push
jl
dec
lods
adc
repz
js
mov
cmpsl
push
add
fwait
sti
int3
dec
int3
mov
xor
push
ret
cmpsl
mov
dec
lcall
stos
adc
fs
pop
repz
rcrb
es
mov
daa
push
sbbl
fstps
popa
sbb
sbbb
out
loope
loop
mov
addb
xchg
jg
das
jo
add
lods
or
outsl
mov
mov
movsb
aas
sub
mov
add
cs
dec
fs
push
xor
cltd
push
adc
arpl
inc
and
aam
jbe
lret
push
or
mov
popf
mov
orl
inc
ja
mov
jnp
out
pop
je
sbb
and
mov
or
fldenv
std
jg
pop
mov
xor
pop
sub
pop
setle
inc
out
fs
xor
mov
sub
pop
push
mov
testb
icebp
shll
sbb
popf
mov
movsb
icebp
and
push
inc
mov
outsb
sub
push
sar
mov
pop
add
dec
cmp
inc
imul
or
shll
push
mov
stos
sub
sbbl
movsl
jp
and
push
ja
dec
pop
jmp
mov
jnp
fnsave
xchg
je
sub
ret
mov
ljmp
adc
mov
pop
aad
je
cmpl
sub
adc
fdivrs
outsb
lret
dec
lret
arpl
scas
mov
push
adc
pushl
aas
jae
pop
fildl
and
and
xorb
mov
das
jg
mov
in
push
pusha
mov
leave
stos
cmc
xlat
sarb
addr16
call
test
nop
cs
adc
or
fs
jle
arpl
mov
loop
xchg
leave
arpl
sub
cltd
out
int3
and
push
in
test
push
mov
fbld
pusha
fwait
in
mov
jno
push
fimuls
xchg
cmp
mov
adc
push
mov
sarl
cmp
mov
dec
lods
dec
aad
lret
imul
lods
lods
push
xorl
andl
ljmp
lahf
cmp
addr16
test
mov
sbb
std
mov
or
loopne
cmp
rolb
rcrb
ja
insl
mov
int
shlb
adc
and
or
push
jnp
hlt
shll
xchg
push
jne
lcall
test
push
mov
push
pop
outsb
cwtl
xchg
push
shrb
jp
out
xlat
mov
pop
cld
xchg
xchg
arpl
loope
repz
sti
push
mov
ret
adc
ss
insb
aaa
loope
sub
out
pop
lods
mov
xor
or
adc
inc
add
out
mov
cli
dec
in
lock
testb
pop
jns
in
cmpsb
push
das
js
xor
xor
bound
jo
dec
in
adc
mov
cld
mov
xchg
shl
mov
out
xlat
aam
loop
push
jmp
mov
repz
fnstcw
xchg
push
mov
xchg
mov
push
imul
insb
lret
insl
das
xchg
std
mov
test
out
cmc
xchg
or
inc
sbb
jecxz
hlt
pop
je
out
or
ja
lret
loop
rorl
mov
in
ja
xor
add
pop
dec
inc
test
mov
scas
movsl
dec
jns
aas
bound
in
mov
xchg
push
in
imul
sbb
push
jge
mov
xor
fcoml
mov
icebp
adc
popf
push
and
test
xor
test
ds
xor
or
sub
or
adc
mov
insb
cwtl
xlat
or
insl
inc
pop
das
xchg
xlat
int
add
nop
dec
scas
sbb
insb
or
and
movsl
push
jle
loopne
in
loopne
pop
stos
sbb
xor
insb
clc
jnp
mov
movsl
enter
add
xchg
insl
and
inc
mov
jnp
mov
lret
ja
push
push
adc
adc
xchg
mov
movd
mov
mov
pop
xchg
imul
bnd
cld
and
in
cmp
pop
mov
lret
cmp
ljmp
jns
sahf
pop
inc
loopne
lahf
xor
mov
mov
mov
mov
loopne
dec
popf
pop
imul
or
mov
pop
incb
mov
stos
rol
mov
ss
push
fs
mov
scas
mov
je
sbb
add
pop
jecxz
mov
xor
xchg
inc
test
fidivrs
push
std
es
inc
jne
aas
xchg
out
lock
lods
loop
popf
out
xchg
repz
xchg
iret
loop
movsl
hlt
cmp
lods
xchg
mov
adc
and
dec
mov
jno
pop
jne
xor
add
orb
inc
inc
out
cmpb
add
dec
xor
rcrb
or
ror
sbb
cmpsl
inc
movsl
clc
pop
inc
imul
loop
lea
or
stc
leave
mov
pop
fmull
imul
stc
jmp
xchg
sub
xchg
jmp
push
in
imul
sub
movsb
jb
mov
ljmp
fidivrs
dec
fwait
pop
cmpsl
mov
xchg
xchg
lret
je
mov
xchg
jbe
aad
pop
mov
pop
jo
mov
push
pop
push
ljmp
in
xchg
adc
fwait
push
andl
pushf
xchg
je
movsb
rolb
subb
push
out
test
and
jno
repnz
inc
mov
clc
push
xchg
adc
mov
mov
inc
sbb
sbb
xor
push
in
inc
or
push
insl
std
shr
mov
into
push
inc
mov
lods
test
fisttpll
push
xor
push
jo
sub
mov
push
repnz
outsb
adc
or
fstpl
cs
jbe
pop
mov
jge
lret
jge
loopne
sbb
cwtl
popl
shrl
rorb
fwait
sbb
sti
or
cltd
lret
adc
adc
push
rolb
push
in
int
bound
insb
lret
popa
mov
idiv
ss
pop
bnd
push
insb
loope
mov
cld
stos
ss
pop
je
jl
es
or
nop
sub
push
xchg
mov
xbegin
roll
mov
dec
sbb
int3
xor
mov
rorl
xchg
mov
std
cmp
ret
fildll
mov
push
cmp
mov
pop
fimuls
test
cmp
loope
sbb
into
enter
jmp
add
xlat
or
jge
pop
xchg
lock
push
lret
jmp
subb
repz
out
out
xor
movsl
adc
add
inc
xlat
jmp
fwait
lcall
ja
repz
es
mov
stos
loop
pushf
adc
lods
inc
subl
iret
jb
add
dec
call
in
pop
dec
dec
cs
push
stc
mov
inc
xor
ret
jmp
or
lea
ret
lock
dec
push
orl
fists
sub
cli
std
jle
pop
test
mov
and
dec
adc
mov
mov
fimull
rcrb
xor
sub
add
cmp
scas
sbb
iret
add
mov
scas
stos
mov
mull
push
inc
sbb
xchg
add
sbb
and
mov
push
xchg
insb
ret
and
adc
out
adc
data16
xor
adc
std
jl
mov
inc
lock
fistl
loope
data16
sub
xchg
mov
inc
cld
dec
movsl
xor
leave
sti
sub
xor
jbe
fcmove
fisubl
iret
ret
dec
nop
xchg
daa
sahf
mov
popa
dec
sub
iret
or
mov
jb
sar
xchg
pop
in
or
leave
xor
mov
outsb
inc
insl
in
imul
cmc
push
jne
popf
push
sbb
pop
dec
mov
jns
and
sti
out
mov
negb
icebp
insl
out
xchg
mull
loopne
sti
fucomip
shl
mov
inc
jmp
mov
mov
mov
jp
gs
pop
xchg
cs
sbb
xchg
bound
push
outsb
push
fcmovne
mov
pop
dec
push
inc
push
test
repnz
fcmovnb
je
shll
ljmp
mov
movb
addr16
setb
or
lret
rol
test
imul
add
push
pop
xchg
mov
outsb
int3
pop
icebp
push
sub
out
jmp
into
xchg
and
add
xor
ss
aam
shl
ficoms
sbb
std
negb
arpl
aam
push
loopne
inc
jns
out
and
and
mov
fdivrp
fcmovu
ret
sbb
pop
rorb
fbstp
mov
cmc
cwtl
xor
inc
push
mov
xchg
imul
in
sub
ret
adc
call
jno
sub
mov
lahf
hlt
popa
sub
mov
jbe
xorb
xor
mov
sarb
daa
jg
dec
je
shlb
jl
cwtl
outsb
rcrb
int
pop
js
sub
xchg
hlt
mov
jge
pop
int
insb
cmpsl
fcmovb
imul
arpl
sub
mov
xorl
lds
in
cltd
andb
push
fmuls
sbb
imul
mov
arpl
pop
push
jne
push
pop
xor
add
filds
lea
ss
and
cwtl
ficoml
mov
lock
add
pop
mov
cmpsb
stos
push
jbe
push
stc
push
sub
testl
or
scas
dec
sbb
cwtl
cmpsb
rcl
hlt
sbb
mov
mov
mov
in
pop
insl
cmc
push
sbb
loopne
sarl
xchg
inc
xchg
cmp
push
pop
cmpsl
rol
xor
stos
iret
and
pop
xchg
lret
push
cltd
pop
les
sub
out
gs
mov
dec
adc
jns
out
xchg
imul
push
cmp
shll
rcrb
and
xlat
cmp
mov
fistl
test
pop
jle
popa
dec
dec
push
fdivrl
shlb
xor
int3
popf
mov
push
or
outsl
sarb
pop
sub
arpl
rorb
loopne
inc
mov
aaa
jg
mov
push
ret
mov
scas
sbb
jns
cli
je
lea
pushf
scas
dec
dec
mov
in
mov
inc
dec
lcall
loop
stos
loopne
sti
and
dec
out
jecxz
iret
mov
and
add
pop
jge
je
xchg
sbb
ret
int
cmp
loop
inc
push
jno
loop
jns
push
int
ljmp
repz
mov
pushf
pop
jg
push
xchg
shlb
xchg
xchg
push
mov
std
jne
adc
gs
sub
add
mov
dec
inc
xchg
rcrl
test
push
jecxz
ss
sub
movsb
gs
cs
addr16
les
mov
cmp
fdivrs
adc
aam
fists
dec
and
jp
push
iret
dec
sub
pop
int3
pop
mov
push
xchg
ljmp
test
jbe
xchg
jns
ret
mov
jge
cmp
sbb
xchg
dec
shlb
nop
cltd
popa
sub
add
movsb
dec
insl
xchg
jns
push
inc
sbb
inc
test
cmpsb
movsl
adc
arpl
pop
fsts
movsb
dec
and
mov
out
out
les
aam
fs
mov
js
xchg
or
dec
adc
into
and
lods
lds
mov
jae
jp
dec
clc
sbbb
scas
repz
stos
stos
lds
xor
adc
mov
inc
fimull
into
ror
sahf
mov
mov
lret
pop
daa
das
out
xchg
into
ja
es
ud0
mov
fcmove
xor
push
cmp
jns
movsb
mov
ficomps
pop
pop
jne
add
jmp
subb
ret
cmp
imul
pop
xor
bnd
mov
fldcw
js
xchg
mov
sbb
add
mov
jmp
cltd
sbb
orb
and
mov
movsl
stos
lret
int3
xor
jne
sar
in
pop
adc
cmc
or
shll
cmp
aaa
rolb
int3
out
jno
adc
dec
push
stos
mov
add
inc
incb
mov
insb
jp
xchg
aaa
cwtl
cmp
mov
mov
pop
sub
repnz
sbb
jne
xchg
test
xor
add
jl
mov
mov
push
rolb
adc
lods
arpl
rcr
mov
sub
outsl
add
push
and
mov
mov
push
mov
mov
pushf
mov
cltd
ss
push
mov
or
rcrb
pop
mov
insl
pop
dec
std
inc
out
pop
mov
dec
push
xor
jnp
push
ja
imul
les
aam
xchg
adc
in
dec
sub
mov
mov
xchg
scas
xor
pop
add
es
das
out
aaa
jnp
pop
icebp
stos
inc
sub
pop
or
loope
nop
fdivrs
push
roll
and
test
outsl
xchg
outsb
fcmovnb
or
popf
cwtl
mov
popf
jno
fisttps
fsubr
adc
sub
ds
push
fwait
insl
sub
xchg
lret
cmc
out
inc
mov
frstor
xchg
aas
imul
nop
sbb
mov
mov
push
in
data16
xor
mov
mov
mov
cwtl
inc
jb
repz
sub
mov
daa
sub
outsb
jmp
dec
jo
xchg
push
movsl
inc
inc
push
dec
and
addr16
into
shlb
int
mov
fwait
cmp
push
pop
daa
int3
into
sbb
add
mov
adc
mov
in
movsl
das
cmc
cltd
or
addl
out
loop
and
pop
popf
leave
orl
xchg
loop
jp
inc
adc
jle
xchg
cltd
outsl
pop
fwait
pusha
scas
mov
rcrl
vmovsd
add
lahf
push
push
pop
jo
lods
sub
pusha
mov
arpl
add
or
or
lea
loop
sub
jae
push
pusha
mov
insl
sub
pop
sti
movsl
ret
loopne
cs
sub
xor
push
fcomps
xchg
adc
sbb
shll
adc
xchg
adc
mov
dec
lret
adc
hlt
test
stos
lock
jecxz
xor
mov
outsl
lods
pusha
stos
inc
xchg
or
hlt
lahf
mov
pushf
jno
fimuls
lea
push
ret
loope
pop
bound
cmp
adcl
dec
inc
xchg
lahf
fisttps
or
sub
repz
inc
push
pusha
std
clc
pop
stos
xchg
mov
stos
cmpsb
lret
cmp
or
mov
or
sub
or
xchg
mov
pop
sbb
or
rclb
cmp
test
cmp
push
enter
push
push
inc
scas
cmp
nop
dec
nop
and
outsl
mov
add
push
scas
and
aad
mov
pop
jbe
adc
and
pop
mov
add
lret
into
js
arpl
nop
scas
add
rcll
stc
jo
pop
push
mov
mov
xchg
mov
insl
adc
in
inc
push
nop
and
loop
sbb
inc
cmp
push
out
hlt
loope
scas
push
lahf
rcl
inc
mov
je
push
es
cmp
cmpsl
aaa
popa
ret
aaa
aas
fsubl
mov
pop
push
insl
testb
mov
sub
push
pop
mov
cltd
adcb
jge
pop
inc
sahf
push
adc
mov
fmull
shrb
rclb
dec
mov
rorb
jge
cmp
pop
jns
dec
movsb
into
mov
scas
ret
into
int
in
pop
xlat
adc
push
pusha
pop
mov
call
data16
push
and
or
jnp
orl
push
jmp
mov
add
jle
sbb
out
inc
add
rcrb
mov
daa
hlt
push
lea
push
data16
dec
lods
subb
iret
lock
add
adc
vcvtss2si
or
push
add
dec
ja
pop
adc
sti
cmp
sub
sub
add
rcll
ror
push
stos
jmp
mov
cmp
data16
and
cmpsb
jg
mov
leave
sub
andb
jp
lea
int
and
lods
xchg
sub
ret
xor
scas
or
leave
adc
xchg
sbb
fidivrs
loopne
fmull
jb
divl
sub
in
xorb
outsl
stc
mov
into
adc
and
xchg
bound
xchg
mulb
or
sub
in
iret
sub
flds
outsb
dec
loop
ja
and
sub
cltd
mov
add
push
mov
ret
js
sbb
mov
xor
je
push
cmp
fstl
lods
adc
mov
xchg
aaa
shr
push
inc
lock
xchg
or
pop
inc
in
les
push
leave
lcall
add
cmpsb
push
das
dec
push
add
ficoml
data16
in
sbb
fidivs
testl
movl
mov
push
out
int
add
cmc
adc
mov
push
inc
rcrb
dec
aaa
leave
rcrb
xor
mov
ds
xor
lods
loop
adc
lcall
in
add
rcl
ret
repnz
xchg
xchg
jo
mov
mov
xlat
sbb
sub
adc
fsubrs
frstor
push
dec
cmp
fistps
aaa
mov
pusha
sti
ret
in
mov
cmpsb
xor
mov
mov
inc
push
sbb
jmp
mov
lret
rcpps
jmp
test
movswl
fwait
adcb
add
lret
inc
leave
mov
movl
add
inc
enter
fstl
ud1
sbb
ud1
adc
mov
jns
inc
and
int3
xor
mov
cmp
mov
cmp
test
lds
stos
int
and
aas
jae
inc
mov
lock
icebp
pop
fsubrl
loop
fs
scas
cmp
xchg
test
imul
cmp
stos
cmc
pop
add
dec
mov
loop
outsl
push
arpl
mov
ljmp
jno
test
and
std
repz
and
xor
sub
push
mov
daa
addr16
sub
jecxz
push
sub
mov
mov
fiadds
xchg
cwtl
mov
test
or
jns
sub
jbe
or
imul
sahf
push
nopl
dec
mov
insl
adc
cmpsb
push
rorb
dec
sahf
mov
inc
sbb
push
push
rorb
rcrb
in
jge
sahf
cmp
or
movsb
sti
xchg
fwait
lods
mov
test
jb
sub
push
adc
mov
in
sti
das
mov
cmp
jo
and
push
movsl
push
fdiv
dec
jbe
stc
cmp
shll
mov
dec
mov
cmc
daa
test
xchg
aas
aaa
stos
out
lcall
adc
and
push
test
call
in
lahf
jl
sbb
sub
mov
push
xchg
push
fdivr
sahf
push
je
rorl
loop
sub
push
push
js
lock
and
incl
test
push
cli
sbb
push
push
sbbl
dec
lcall
or
pushf
xchg
sub
jmp
mov
fisttpl
xor
inc
insl
dec
cs
add
jge
pop
pop
sbb
test
aaa
xchg
je
jne
lret
pushf
ds
cmpb
adc
sbb
push
jp
sbb
push
adc
pop
outsb
pop
or
sbb
aad
nop
pusha
pushf
fdivs
or
and
and
xor
adc
not
outsb
push
les
scas
push
jno
pop
dec
daa
xchg
ja
mov
and
stos
ljmp
jnp
mov
cs
jnp
fwait
jmp
sub
sub
in
adc
sbb
sti
cmc
add
inc
dec
jle
push
cli
aad
jle
adc
sub
aad
dec
xor
push
push
aas
test
add
cmp
ss
stc
mov
jle
and
cs
xchg
and
jnp
sbb
jae
sub
mov
lret
jl
sbb
insl
sahf
ds
cmpsb
mov
movsb
mov
stos
add
jne
mov
cli
and
jmp
push
es
mov
cmpl
lcall
test
mov
addr16
js
fmuls
jbe
or
push
xchg
nop
decl
sub
pop
pop
lahf
or
push
jp
imul
dec
lea
push
inc
push
aam
xchg
in
xchg
lock
mov
jmp
jmp
add
cs
push
xor
push
push
not
cs
xor
inc
leave
ljmp
ret
dec
and
aad
xor
lds
jmp
sbb
push
sub
lock
jno
add
daa
inc
jnp
jo
movsb
jp
xor
mov
xlat
out
xchg
roll
jmp
out
icebp
into
test
arpl
ss
jbe
inc
stos
movsl
push
outsl
and
push
movsb
fs
loopne
fildl
and
fstl
xchg
push
aaa
push
loop
loope
xor
lahf
mov
stos
or
call
inc
xlat
jl
jmp
jne
int
dec
sbb
pop
dec
test
shll
mov
aad
jb
xchg
or
mov
xchg
cmpsb
mov
cmp
imul
sbb
int
testl
push
mov
faddl
gs
jl
pop
lds
adcl
les
scas
push
push
or
js
mov
push
push
sbb
dec
out
repnz
pop
iret
mov
ds
inc
cmpsl
call
arpl
into
mov
sarb
ljmp
enter
dec
cmp
jmp
fnstenv
jecxz
push
xchg
mov
sti
inc
dec
fcompl
daa
xlat
xorl
sub
decl
sbb
xchg
and
jae
cwtl
gs
cwtl
mov
add
ret
movsb
mov
xor
sti
aas
cld
aas
pop
add
push
dec
repz
imul
dec
scas
xchg
inc
ja
inc
ss
push
jmp
orb
pop
sbb
xor
fisttps
and
jge
push
and
sbb
loop
pop
andl
subb
jns
leave
imulw
and
adc
mov
js
jnp
inc
cmpsl
jge
mov
aas
inc
cld
sub
sub
movsl
push
jnp
pop
add
mov
loop
xchg
dec
aad
push
adc
cmc
inc
ret
imul
mov
fdivrp
cwtl
fbld
pop
das
xor
sbb
scas
in
repnz
in
jp
inc
mov
in
aam
lds
stc
sahf
sub
adc
push
sub
push
inc
pop
xlat
xor
mov
xor
mov
dec
lods
jo
mov
les
or
mov
dec
fidivs
adc
sbb
mov
sbb
in
adc
cmp
call
pop
xchg
fiaddl
xor
mov
adc
adc
xlat
mov
pop
ja
test
movsb
idiv
test
test
fs
int3
and
xchg
mov
fildl
aam
lods
ja
test
scas
or
outsl
loope
mov
loopne
aaa
dec
ret
dec
sbb
sbb
cwtl
add
int3
jmp
fbld
fiadds
gs
loope
enter
int3
jecxz
adc
sbb
push
int3
shll
push
xchg
mov
xchg
fcoms
push
mov
sub
cltd
push
mov
pop
mov
test
mov
arpl
jle
pop
mov
addr16
lea
cmc
lods
mov
fstl
fld
negl
sti
mov
dec
inc
push
shl
mov
pop
rcrb
in
icebp
cwtl
cmpsb
cwtl
loopne
sbb
push
sub
and
mov
fcom
rolb
cmp
negb
addr16
sbb
cmp
sahf
enter
dec
add
enter
in
pop
or
outsl
and
aad
movb
test
mov
jge
mov
xchg
mov
mov
mov
int3
jmp
cmp
lahf
and
mov
lcall
xor
cld
jae
jl
add
or
lret
add
bound
push
dec
dec
dec
es
adc
jb
clc
out
popa
jp
pop
nop
in
mov
sbb
inc
xchg
jmp
bound
adc
ffreep
sti
xchg
mov
cmpsb
inc
cld
push
xchg
lock
dec
les
stos
or
inc
push
fsub
ds
xchg
je
fistpl
mov
mov
push
imul
daa
mov
in
fisubrs
adc
mov
cmp
pop
jb
fadds
scas
lahf
sub
pusha
inc
fstps
test
pop
ret
cmp
shll
push
ret
jg
sbb
decb
scas
xor
iret
movsl
xchg
lret
mov
call
fisubrl
insl
mov
cltd
mov
adc
sarb
insl
adc
dec
jno
rorl
mov
cmpsb
shrl
lds
fstpt
call
lret
leave
push
test
mov
pusha
fs
insl
cmp
mov
popf
stos
mov
add
sub
or
and
lock
cmc
cmpsb
add
nop
cmpsl
jne
cmp
jge
outsl
jl
stc
icebp
xchg
js,pt
fstps
adc
push
imul
cld
ljmp
ret
xchg
movb
das
mov
lods
xchg
and
ds
ja
jl
fsubs
aas
lret
mov
cli
push
xor
inc
iret
or
mov
inc
cmpsl
xchg
mov
push
lret
movsl
inc
push
hlt
sbb
pop
ret
cwtl
rorl
jp
jecxz
stos
jecxz
pop
fidivl
fwait
mov
xor
push
neg
and
mov
push
repnz
pop
add
or
pop
imul
mov
adc
add
popf
pcmpeqb
mov
loop
mov
out
jo
insb
out
push
test
cmp
in
mov
pop
add
cmpsl
fnstenv
loop
and
cld
or
sub
scas
cmp
jbe
xchg
enter
cmp
pushf
mov
pop
std
jno
jno
or
call
cmp
mov
dec
gs
and
popa
shl
out
inc
sub
repnz
in
subb
ficoml
movsb
mov
cmc
mov
cmp
rorb
in
aad
xor
push
je
mov
dec
in
inc
pop
xor
shll
in
imul
xor
aaa
push
sbb
mov
xor
daa
and
sub
cmp
inc
sbb
cmp
movsl
mov
pop
pop
lea
lock
push
jmp
js
jo
int3
ds
mov
lcall
and
or
sbb
fldenv
cmp
fsts
sbb
pop
mov
cmc
negb
jne
call
push
xchg
int
aas
ret
cmp
push
xchg
test
pop
mov
pushf
les
negb
and
roll
outsl
dec
aam
jge
dec
adc
subl
push
sbb
cmc
inc
arpl
movsl
cmc
xor
ror
pop
push
sti
in
lahf
dec
xlat
cld
int
test
jmp
int3
popf
fldenv
fidivl
push
add
lret
cmp
fidivs
popa
jle
mov
je
lret
xchg
sar
test
pop
imul
fisubs
add
ds
imul
xchg
push
popa
sub
xchg
cmp
ds
cmp
mov
outsl
mov
and
xchg
fstps
dec
outsb
xchg
mov
xor
mov
cmp
lcall
inc
sub
ja
notb
outsb
stos
andb
scas
pop
mov
xchg
inc
mov
gs
push
sbb
jae
ret
test
xchg
mov
sti
cmp
mov
decl
cld
fwait
mov
dec
add
sub
cmp
ja
pop
adc
push
add
insl
cmp
xor
scas
std
sub
gs
and
xor
mov
sti
sub
or
or
xor
sub
test
sbb
lcall
adc
shr
or
mov
or
cmp
dec
xlat
mov
subb
mov
pusha
fisubrs
divl
fucom
pop
scas
cmp
lret
xchg
sarb
gs
cmp
cmp
add
sbb
inc
inc
clc
or
imul
int
mov
cs
cmovns
jne
push
mov
xor
mov
xor
ret
shll
bound
imul
stos
or
lods
mov
shlb
lret
adc
mov
and
cmp
push
mov
sahf
mov
lret
cmpsl
js
mov
jno
rcrl
mov
mov
je
je
push
pop
xchg
shrl
or
add
movsb
popf
push
out
jno
jo
clc
out
icebp
sub
jmp
lcall
cmp
pop
aad
mulb
shl
clc
in
or
add
imul
or
add
adc
loopne
inc
dec
loope
imul
out
jge
scas
sbb
and
insl
and
jl
in
push
insb
cmc
sbb
shrb
push
mov
cmovnp
mov
insl
test
aam
mov
mov
mov
lea
and
pop
mov
add
enter
daa
sbb
fsubl
pmullw
fs
repnz
stc
jg
push
xchg
add
ja
fmull
test
mov
ja
mov
cmp
ja
mov
icebp
push
mov
sub
out
test
jae
imul
and
iret
pusha
adc
test
mov
xchg
push
ficompl
clc
jno
adc
in
out
pop
xchg
mul
in
adc
or
popa
mov
pushl
xchg
lods
xchg
adc
sub
xor
mov
scas
push
push
ja
popa
fmuls
lret
push
pushf
mov
mov
cmp
mov
mov
movsb
lods
or
negb
out
int
sub
movsl
mov
jae
test
push
lret
mov
dec
cltd
jecxz
nop
inc
popf
ss
add
inc
nop
icebp
dec
push
mov
ficoml
ds
mov
ja
xchg
hlt
std
ret
push
ja
sbb
add
loop
sbb
dec
push
shrl
data16
ds
jmp
mov
mov
and
xchg
idivb
push
adc
rclb
xor
lret
pop
sub
sahf
mov
addr16
mov
or
push
jge
pop
sbb
mov
push
inc
outsl
jns
incb
lods
mov
dec
inc
rcrl
dec
adcb
cmp
adc
sbb
out
sti
pusha
jmp
mov
ret
je
xchg
clc
scas
xor
pop
in
aas
mov
test
dec
and
push
or
jo
push
aad
mov
popf
cld
test
cmp
lock
inc
or
mov
mov
and
in
iret
mov
pop
loopne
insl
xchg
lds
xor
mov
cld
mov
lods
mov
movb
repz
push
dec
adc
inc
lods
xor
cmp
jle
dec
je
lahf
jp
fsubs
dec
rorl
adcl
xor
dec
std
sub
mov
in
xchg
jns
mov
adc
outsb
xchg
adc
lods
nop
lods
add
and
mov
pop
sar
jecxz
sub
sub
xchg
out
stos
cmc
jge
xchg
cs
imul
push
out
xor
inc
test
dec
add
xor
out
adc
sub
dec
fildl
aad
imul
aam
adc
add
jnp
jle
scas
sbb
jae
and
jo
sbb
movsl
test
dec
data16
mov
stos
dec
addr16
xchg
popa
lahf
xor
aad
mov
ret
or
outsb
push
cmpsb
cmpsl
movsl
cmp
aas
lock
iret
or
add
mov
inc
mov
mov
xor
repz
mov
and
cs
sahf
into
mov
cmp
daa
testl
call
dec
pop
divb
add
in
push
mov
add
mov
sarl
dec
xor
ds
pop
in
add
and
repz
or
xor
add
loope
movsl
lret
sti
mov
jp
mov
aad
in
iret
lret
jb
adc
xor
out
and
cmp
cmp
js
sub
enter
es
mov
push
fildll
sub
movsb
outsb
lea
and
and
sub
mov
and
mov
pop
pop
and
out
mov
inc
sub
icebp
nop
rcr
jg
sbb
scas
rclb
pop
fcoml
outsb
adc
cmpsl
or
xchg
ret
sub
leave
add
mov
push
cmp
inc
cmp
shll
imul
push
mov
mov
mov
mov
jmp
std
popf
mov
out
xchg
into
sub
cmp
jnp
test
pop
js
or
data16
fidivl
xchg
maskmovq
notl
jecxz
inc
cltd
pop
cmpsb
mov
xchg
or
pop
test
aam
sbb
sti
lret
add
ficoml
into
pop
fnstcw
and
cmpsb
push
mov
aaa
adcb
stc
inc
stc
in
sub
movsl
jge
adc
mov
arpl
fwait
sub
mov
loopne
jae
xchg
xor
stos
jge
test
icebp
inc
sahf
jb
lods
dec
sub
in
mov
xlat
out
xchg
sti
addr16
inc
xor
jae
mov
hlt
fwait
mov
mov
xchg
out
addr16
adc
iret
pop
test
frstor
fadd
or
pop
cmp
lods
in
jns
cmp
sti
sbb
jecxz
stos
mov
xlat
stos
lock
and
fisubl
fistl
icebp
insb
inc
add
test
adc
dec
call
lods
shrb
mov
ss
mov
shll
stos
pop
pop
scas
addr16
xchg
cmp
aam
rorl
add
xchg
ret
mov
js
aas
divb
jge
repnz
dec
cwtl
repz
scas
dec
call
aas
movl
outsl
imul
jge
outsb
movsb
dec
jne
jno
out
les
sbb
jo
outsb
and
or
jb
push
jns
iret
notb
imulb
test
fldt
jnp
dec
sub
cmpsl
sub
inc
jbe
xor
jnp
rclb
dec
sub
xchg
dec
inc
sar
jge
aam
adc
jge
lcall
jge
incl
ret
xchg
jbe
pop
cli
in
dec
jge
pmulhuw
push
popa
inc
push
jb
out
push
xchg
leave
mov
mov
aaa
inc
fsubl
xor
jg
outsl
mov
add
outsl
and
addr16
xchg
or
fwait
xor
test
inc
scas
and
ficompl
push
mov
sbb
leave
test
jecxz
in
dec
and
jecxz
fisttps
in
aaa
addr16
cmp
xor
scas
pop
sub
insl
or
cmp
pop
or
cmp
adc
and
lea
push
sarb
fiadds
imul
psllq
test
insb
sub
movl
out
jle
mov
out
sbb
int
add
outsb
lods
mov
dec
mul
fcoml
test
mov
adc
push
add
pop
repnz
call
iret
sub
int
lods
inc
lods
loopne
and
pop
lret
outsb
icebp
mov
sub
bound
lods
jge
cmc
outsl
data16
jns
jle
je
setnp
lods
ror
shlb
xor
jns
clc
dec
jb
filds
inc
aas
dec
enter
sbb
test
jecxz
pop
cmp
adc
insl
jbe
verw
mov
mov
inc
mov
and
push
pop
adc
pop
inc
xor
mov
scas
rcl
sbb
adc
sti
add
jge
test
mov
dec
and
sbb
dec
addb
test
cmpsl
stc
xchg
lea
fimull
loop
sub
mov
inc
outsl
mov
sub
lods
fisttps
jno
add
xchg
pushf
out
pop
inc
pop
cwtl
inc
popf
xlat
sbb
cmc
dec
xor
test
shl
and
mov
fisubl
fs
add
addb
adc
cmp
pop
pusha
add
sbb
and
loop
nop
cmp
inc
jnp
test
sbb
and
es
repz
out
push
push
adc
aam
cmpsl
icebp
pop
mov
xchg
xor
insb
in
dec
add
push
divb
inc
xor
push
adc
mov
movsl
jmp
stc
sbbb
sbb
addr16
or
mov
leave
data16
cmp
and
icebp
jecxz
push
mov
xor
xchg
lea
rorb
outsl
pop
mov
mov
pop
aad
cmc
push
push
fcoms
pop
cs
add
jl
cwtl
fdivl
xchg
xor
nop
fistl
xor
jl
mov
jmp
jae
cwtl
add
pushf
mov
lcall
out
lea
cmp
xchg
shr
js
cld
iret
push
sub
xchg
jg
pop
and
jmp
cmp
dec
mov
dec
xor
insl
ss
jl
xor
mov
shrl
pop
and
ret
ss
loop
mov
scas
dec
mov
mov
or
inc
rclb
arpl
pop
or
in
out
sbb
test
mov
imul
ljmp
jle
out
sarb
mov
inc
out
xchg
jg
dec
fiadds
push
pop
jo
cld
cmp
or
scas
xor
cmp
cmp
or
dec
lea
lret
mov
or
sti
adc
scas
adc
rorb
xlat
imul
aam
mov
cmpsl
mov
cmpsl
xchg
imul
mov
and
mov
or
in
push
inc
or
mov
sub
xchg
xor
xchg
repz
jecxz
inc
xor
sti
jle
inc
cmp
clc
xchg
push
inc
sti
int
mov
ret
iret
arpl
pop
adc
add
hlt
cwtl
xchg
sub
dec
insb
inc
or
shrl
pushf
jnp
out
inc
mov
bound
rclb
rcl
inc
cmpsl
or
jno
adc
lods
insb
sub
loopne
mov
popf
aam
sbb
into
xor
inc
fbld
cmp
pop
jle
mov
dec
test
mov
imul
jl
push
loopne
orl
sbb
ret
cs
push
popf
in
and
mov
or
out
pop
mov
std
jl
push
mov
cs
dec
inc
add
pop
push
adc
sbb
aad
pushf
dec
movl
aas
jnp
cltd
das
push
std
into
jb
or
inc
fs
and
imul
jnp
aaa
sub
mov
test
jno
popf
or
cmp
daa
jns
fwait
inc
inc
fcomi
push
int3
rcll
pusha
sti
mov
cmp
rorl
daa
inc
mov
imul
imul
xchg
imul
sub
jo
and
sahf
add
test
sbb
pop
mov
xor
xchg
pushf
xchg
imul
pop
push
ret
sarb
cmp
arpl
sbb
sbb
mov
or
mov
xchg
jne
repz
push
or
inc
pop
and
lcall
pop
mov
rcrb
in
and
push
inc
fidivs
jecxz
icebp
mov
mov
inc
jl
loop
icebp
movsb
push
mov
push
jge
mov
dec
add
xchg
pop
es
fnstsw
mov
xchg
call
mov
incl
push
cs
mov
sub
cmp
or
sbb
mov
popf
adc
mull
xor
add
lret
dec
mov
xchg
dec
and
cmp
scas
mov
sbb
jno
dec
les
movsb
sbb
sub
inc
sub
shr
jp
das
rcl
mov
pop
mov
ss
xchg
addl
mov
in
push
mov
add
nop
xor
xor
jle
xchg
orb
in
push
outsl
cld
or
mov
imul
pop
outsb
inc
push
aas
sbb
test
test
pop
add
test
jle
clc
in
xrelease
mov
push
icebp
sbb
scas
push
mov
add
cmpsb
out
pop
mov
aam
inc
push
and
add
sarb
and
ss
lods
ret
push
shll
mov
out
stc
jns
jb
and
dec
cmp
push
in
push
or
test
jg
jbe
mov
xchg
cmpsb
jge
out
out
sub
xor
pop
cli
inc
adc
push
push
cmpsb
fdivs
ss
mov
ja
bound
in
xchg
jg
dec
xchg
jnp
sub
ljmp
fsubp
mov
push
jmp
cltd
cmp
aaa
dec
fwait
outsb
cmp
push
add
ja
inc
ror
push
test
sub
outsb
or
cmp
ss
jno
or
jnp
cltd
repz
cmpsb
xchg
pop
rcrl
aam
add
xorl
mov
out
in
gs
cmp
nop
imull
xor
mov
aaa
xlat
pop
scas
adc
insl
mov
fdivl
mov
loop
in
dec
in
xor
add
aad
into
lret
inc
mov
je
mov
out
test
mov
dec
out
push
incl
in
and
sbb
divb
xor
ret
adc
cwtl
dec
stos
or
xchg
pop
les
push
lret
fcmovne
inc
int3
pop
jb
outsb
fs
and
popf
clc
pop
mov
inc
mov
dec
decb
sub
adc
int3
xchg
push
rol
ljmp
das
dec
or
int
out
aas
je
lret
shll
cmc
cwtl
insb
jg
pop
cmp
fwait
add
xchg
ffreep
mov
repz
cltd
mov
cmp
dec
or
nop
adc
push
out
out
sbb
sarl
push
hlt
sub
sbbb
dec
ss
jl
out
xor
aad
mov
cltd
aad
inc
std
sbb
mov
mov
mov
mov
fidivrl
pop
dec
test
xchg
stc
push
push
adc
aad
movsl
jl
popa
inc
mov
cmpsl
mov
push
push
add
adc
pop
data16
add
and
cmp
decb
inc
int3
cmp
jno
jp
rorb
mov
add
add
pop
scas
mov
es
pop
lret
popl
or
xchg
sbb
dec
mov
mov
sbb
data16
insb
xchg
mov
icebp
dec
xor
jle
mov
inc
stos
insl
mov
mov
fwait
call
lds
mov
xor
test
movsl
aaa
ret
jg
push
aaa
addl
sahf
cmp
sbb
dec
xor
js
lods
mov
inc
and
lods
adc
leave
stos
mov
call
fbstp
cli
pop
fs
mov
loop
out
jg
inc
mov
jne
scas
aam
movsb
push
xchg
xor
jp
in
inc
sbb
fwait
dec
iret
les
pusha
inc
ret
das
addr16
cmpsb
fiadds
pop
pop
scas
add
repz
cmpb
ds
icebp
xchg
filds
and
and
fisttpl
sbb
lds
lret
xlat
cld
popf
imul
jno
xorb
jg
sti
jecxz
mov
adc
jge
and
lret
mov
cmp
inc
jmp
lock
scas
dec
sahf
scas
mov
movsl
cs
dec
cmp
sub
ljmp
pop
iret
mov
test
imul
rclb
jp
imul
mov
std
repnz
std
jle
stos
or
fstpl
dec
cld
xor
dec
loopne
adc
decb
mov
shl
fstpt
fisubs
push
and
inc
mov
adcb
clc
and
add
cmp
dec
inc
adc
push
push
shr
subb
hlt
fistps
jno
test
and
add
mov
push
jns
cmp
mov
pop
jge
fisttpl
xor
mov
jno
mov
rclb
jo
sub
inc
lods
cld
aaa
inc
cmpb
push
lret
push
imul
fcompl
sbb
and
xchg
es
mov
mov
push
stos
mov
inc
fisttpl
dec
adc
int
fidivrs
scas
out
addr16
ja
pushf
pop
je
xlat
mov
in
pop
sarb
fwait
cwtl
dec
out
pop
outsl
sarl
insl
mov
loope
arpl
int3
test
sbb
imul
cmp
xchg
push
addl
or
lea
loop
mov
in
movsl
movsl
dec
stos
sbb
cmc
xchg
and
dec
pop
cmpb
xor
maxps
mov
lcall
arpl
dec
into
imul
push
outsl
mov
mov
outsb
loopne
xchg
xor
dec
push
in
lret
add
aas
xchg
aad
pop
adc
lcall
sbb
xchg
imul
pop
shrb
pop
xchg
jnp
dec
adc
mov
jg
into
and
xadd
jle
iret
aad
pop
mov
cmp
fwait
test
jl
test
inc
push
xchg
stos
movsl
xchg
push
xor
mov
cmpsb
jo
push
sbb
mov
push
cli
aad
fwait
xchg
stc
dec
adc
mov
out
adc
aaa
or
xor
inc
xorb
sub
movb
and
les
xchg
mov
jge
or
lahf
movsb
repnz
push
sahf
addr16
mov
sarl
jmp
and
and
push
push
iret
xchg
push
sub
push
add
imul
or
inc
adc
xchg
fwait
and
in
push
or
dec
insb
in
mov
and
andb
jo
or
mov
in
dec
push
add
fs
decb
jo
xchg
je
push
xchg
arpl
daa
imul
mov
push
mov
sbb
mov
lods
sbb
ret
sub
mov
or
lcall
icebp
imul
sbb
in
adc
fcom
cmp
lods
push
cwtl
sbb
mov
nop
out
mov
jle
sti
cmp
xor
jl
jle
lods
and
mov
jmp
mov
lcall
loope
xchg
fsubs
sub
shl
jae
push
and
jp
mov
sub
lahf
shr
pusha
aad
fwait
mov
and
mov
add
pop
pop
pusha
push
ret
movsl
xlat
addl
rcl
cwtl
mov
push
mov
or
scas
stos
mov
and
adc
out
cmp
dec
jecxz
stos
dec
insl
enter
mov
dec
and
mov
xchg
loop
scas
jne
mov
fwait
cmp
xchg
xor
nop
lds
xor
pop
cli
cmp
cmpsl
mov
xor
xorb
push
in
dec
repnz
cmpsb
pushf
testb
mov
mov
cmpsl
in
clc
and
cmp
xor
xchg
insb
pop
mov
fnstenv
test
jmp
lret
sahf
out
add
iret
in
mov
in
jmp
std
mov
cmp
dec
cmp
mov
movsl
cmp
cmc
sbb
xor
test
popa
adc
pushf
pop
mull
xchg
cli
sub
push
mov
lret
int3
rolb
test
orb
aam
pushf
insl
cld
adc
mov
pop
mov
jmp
inc
repz
push
fisttpl
sbb
nop
and
xorb
pop
stc
pop
enter
add
out
sti
mov
sub
jmp
rcrb
or
adc
cmpsl
cmp
sbbb
clc
stos
mov
mov
movsb
push
xchg
les
pop
mov
pop
stos
mov
adc
xor
test
push
daa
pop
adc
mov
sbb
add
adc
jnp
add
scas
enter
fidivrl
sbb
push
ljmp
sbb
push
and
pop
push
dec
es
leave
add
loopne
std
test
flds
out
aam
stos
out
js
jne
mov
mov
xor
cmc
xchg
pop
cld
in
pop
mov
mov
ret
jmp
mov
iret
xchg
and
jp
mov
mov
mov
mov
ja
enter
out
mov
adc
popa
xlat
insl
pop
test
sbb
rorb
test
mov
and
push
movsl
adc
add
push
cmpsb
insb
cmp
in
xchg
cmc
mov
mov
test
mov
adc
or
call
mov
hlt
sbb
test
mov
mov
xor
test
sbb
ljmp
push
push
call
cs
or
and
fstpl
mov
jbe
mov
mov
pop
stos
mov
cmp
dec
addr16
mov
icebp
or
pushf
lret
pop
and
dec
iret
pop
xchg
out
dec
and
cmp
int3
pop
and
fwait
xor
push
imul
pop
push
jno
enter
lcall
xor
sarb
push
sbb
fidivl
jge
lods
cmp
cmp
push
inc
sbb
mov
inc
test
or
push
cmp
dec
mov
mov
pop
mov
dec
inc
cltd
jl
test
bound
cli
and
imul
push
insb
sub
dec
pop
arpl
into
xor
add
std
push
xor
outsl
xchg
test
jae
xchg
pop
sbb
adc
mov
jbe
sahf
cltd
ret
and
and
sbb
or
sub
cmp
mov
push
loope
xchg
fiadds
push
and
jp
jae
pop
cwtl
dec
das
push
mov
xchg
xor
pop
std
xlat
negb
cmp
mov
mov
int
imul
jo
aad
andb
mov
xor
test
mov
sbb
push
mov
dec
decl
out
jbe
jo
sub
jb
mov
pop
nop
data16
mov
xchg
int3
in
scas
hlt
divb
aas
xor
inc
add
cmp
in
cmp
and
xlat
push
or
dec
and
es
mov
xor
cmc
and
out
gs
popf
inc
or
in
jmp
jg
inc
mov
xor
add
xlat
xor
or
xchg
rcrb
dec
clc
push
push
jb
mov
xchg
loop
mov
or
cmc
jno
mov
add
cmp
pop
and
cli
cmpsb
aad
xor
sub
inc
sbb
mov
into
cmp
loopne
or
bound
sub
insl
xor
shr
and
outsl
repz
or
and
dec
pop
in
and
scas
sub
je
cmp
add
popf
scas
sbb
push
mov
rorb
cmp
cmp
mov
outsl
cmpsl
into
pop
ja
inc
jns
out
bound
subl
adc
cmp
jl
sti
jle
inc
jg
mov
das
adc
sub
arpl
addr16
push
dec
xchg
push
adc
jmp
divb
shrl
mov
adc
add
mov
dec
ss
shlb
pop
test
push
pop
out
cmp
test
lret
lahf
cmp
cmpsb
jle
pop
std
lea
popa
mov
fs
sub
lret
loop
jns
sbb
or
push
push
mov
cmp
sub
jle
clc
sub
sub
popf
sti
mov
bnd
jl
enter
xchg
mov
stc
mov
push
jbe
aaa
xchg
ret
mov
fisttpl
js
jns
jbe
mov
push
mov
mov
cmp
inc
cwtl
dec
insb
add
dec
sarl
jns
push
sti
loope
in
cwtl
cmp
jae
int
mov
mull
or
mov
sub
mov
in
mov
push
or
mov
xchg
jmp
call
adc
cmpsb
insb
lcall
in
addb
pop
and
jmp
leave
js
xchg
mov
sbb
enter
xchg
mov
stc
lods
add
xchg
add
xor
mov
adc
scas
pop
daa
enter
jmp
and
cmc
movsl
aam
adc
cmp
and
sbb
dec
mov
ds
pop
insb
mov
lea
mov
cli
mov
arpl
mov
inc
mov
lock
adcb
cmc
jge
push
add
andl
jae
and
aaa
cmp
mov
jbe
dec
gs
or
ja
xor
lods
add
imul
add
or
pop
daa
int
cltd
fistpl
push
sub
shll
hlt
dec
scas
push
xor
gs
push
idiv
push
lock
aam
sbb
pop
outsb
cmp
call
adc
or
in
hlt
cmpl
cmp
inc
test
push
jmp
out
jb
push
sub
inc
jge
dec
ret
std
lds
aaa
in
js
or
sub
jno
lods
es
lds
xchg
fidivs
loopne
ret
cmc
sbb
in
pop
test
pop
xchg
xor
or
iret
sub
mov
jmp
cs
popf
xor
lods
das
andb
fwait
in
sarb
push
mov
sarb
jo
lods
ja
adc
imul
fistps
mov
add
push
pop
lods
jecxz
addr16
insl
bound
filds
pop
fcmovu
sub
addr16
mov
mov
lret
shl
ficoml
popa
jecxz
fisttps
jb
or
ds
repnz
mov
pop
out
xchg
mov
mov
lock
or
xchg
pop
rcrb
dec
stos
sub
jns
movsl
inc
mov
fwait
pop
add
lret
xchg
jns
cld
push
sahf
ja
pop
stc
mov
test
fadds
jg
scas
mov
sbb
mov
or
call
ja
icebp
and
sbb
cmp
cwtl
inc
jmp
sbb
push
icebp
lock
cld
loope
clc
cld
inc
out
push
rcrb
ret
les
or
and
sub
nop
iret
iret
out
lods
push
add
pushf
rorl
adc
test
xchg
sbb
xchg
mov
cmpsl
dec
test
cmp
loop
decl
cld
xchg
fnstenv
push
push
sub
test
jne
xor
arpl
out
mov
ljmp
loope
sbb
int3
pusha
fildl
arpl
and
shll
shll
out
scas
push
mov
mov
ret
divb
cmp
iret
sbb
adc
cmp
mov
out
sbb
in
pushf
icebp
fildl
addr16
out
sub
mov
add
adc
test
test
sahf
lock
xchg
dec
cli
filds
loopne
sbb
ja
insb
sub
inc
sbb
mov
loope
ds
cmp
enter
mov
cmp
inc
pop
shl
lret
int
rorl
mov
scas
cwtl
mov
xchg
in
in
cmp
ror
andl
cwtl
mov
push
inc
int3
sub
cmp
xor
push
and
inc
icebp
push
shr
not
xchg
jg,pn
insb
cmp
ret
mov
push
inc
cmp
xor
or
jae
sti
dec
jo
shlb
scas
cmp
mov
ja
inc
xorb
push
movb
insl
xchg
sbb
dec
sbb
mov
adc
lods
sub
pusha
shl
add
pop
pop
sbb
lret
sti
mov
movsb
in
push
nop
jno
mov
fsts
nop
pop
push
jge
pop
andl
adc
insb
les
arpl
stc
cmc
xchg
lods
lcall
mov
ds
lcall
xor
sub
pop
icebp
loop
dec
sub
lret
fildll
iret
sbb
xor
dec
mov
dec
mov
adc
mov
mov
out
ja
mov
lods
pop
push
adc
jp
testl
aam
cmp
popa
lods
mov
cltd
mov
lea
push
pop
test
sbb
inc
or
pop
test
dec
jbe
mov
sar
mov
scas
mov
dec
bound
fs
in
jne
ror
jnp
inc
cmp
pop
pop
test
lcall
rcrl
rcrb
xchg
add
fwait
mov
jbe
int
sbb
rcrb
mov
je
lcall
cld
aaa
fbld
or
mov
outsb
xchg
jns
movsb
ret
jecxz
or
or
les
rcl
add
push
in
xchg
pop
mov
add
cld
in
insb
aad
out
push
push
adcl
xor
dec
je
jge
ljmp
or
inc
cmp
add
dec
push
enter
les
les
dec
hlt
bound
loopne
aad
adc
test
stos
aad
and
andb
ss
and
addr16
jl
call
icebp
insl
mov
cmpsl
cmc
and
out
push
mov
xchg
test
push
mov
lock
push
jb
mulb
xchg
aas
cs
loop
fisubrl
aas
fs
out
ja
jge
aaa
mov
or
push
push
inc
out
fstpl
xchg
stos
adc
cmp
in
jmp
fsubrs
dec
repz
cmpsb
fcoms
sub
sub
negb
jl
insb
pop
rorb
cwtl
pop
jnp
push
sub
pop
add
ljmp
jecxz
add
jb
in
gs
mov
fisttpll
fmulp
add
repz
adc
push
gs
jne
lcall
sub
or
adc
sti
lods
cs
aaa
push
sub
out
sbb
aad
stc
inc
inc
add
das
pop
mov
insb
aas
ret
sub
cli
inc
movb
push
test
jb
subl
jne
cltd
js
push
mov
push
jbe
rolb
push
inc
push
or
insb
adc
dec
add
loope
js
test
pop
or
ret
cs
sbb
adc
jp
ret
push
push
nop
push
jge
and
inc
iret
mov
add
out
popf
popa
or
lahf
sbb
cmp
sarb
js
mov
sub
mov
enter
mov
push
cltd
jno
pop
add
jp
mov
insb
rcl
and
adc
insb
data16
mov
dec
lahf
adc
pop
ds
push
out
punpckhdq
xor
push
jecxz
jbe
cmpsl
shlb
push
pop
cmp
das
aam
sbb
lock
lret
push
mov
std
jmp
pop
dec
dec
icebp
mov
and
mov
aam
add
loope
les
or
xchg
or
mov
movsb
lahf
arpl
sbb
xchg
adc
mov
or
es
sbb
pop
xor
stc
add
xchg
lock
jbe
aam
inc
mov
js
ficomps
sub
xlat
les
inc
test
js
inc
push
push
adc
addr16
hlt
pop
idivb
push
jne
mov
in
sbb
es
bound
mov
mov
jns
shll
xchg
and
mov
cmp
xchg
cld
jno
sahf
mov
or
cmpl
cs
mov
ljmp
cmpsl
movsl
fdivrs
or
aaa
mov
inc
pop
add
mov
add
or
aad
inc
pop
adc
mov
nop
test
aam
mov
push
inc
adc
or
pop
ja
push
mov
mov
cld
add
fwait
sbb
ret
imul
jmp
or
shll
loopne
inc
jge
push
imul
ljmp
jno
mov
imulb
cmc
cmp
pop
dec
mov
out
mov
pop
ja
js
cmp
sarb
out
lahf
xor
hlt
dec
je
aas
mov
mov
mov
jmp
lret
pop
cmp
data16
cs
shrb
dec
jns
cmp
lods
loopne
push
push
mov
daa
xchg
pop
mov
lock
xor
addr16
push
sbb
jb
or
mov
push
jb
add
add
xor
repz
in
ljmp
jmp
and
int
mov
out
mov
xchg
out
jle
ffree
xor
jns
movsb
jo
in
sub
add
adc
dec
jns
aad
mov
repz
mov
sub
out
mov
imul
fistps
movsl
pop
popa
ss
lret
pop
jge
pop
sbb
loop
pop
insl
icebp
lcall
fstpl
inc
pop
or
pushf
sbbb
mov
adc
imul
push
sbb
pop
cwtl
cmp
shll
push
inc
jo
nop
pop
pop
movsb
mov
pop
mov
fadds
pop
pop
packsswb
mov
inc
es
es
cmp
sbb
fdivrs
sbb
stc
ret
sbb
xchg
addb
mov
or
sbbl
dec
jle
mov
ret
mov
movsb
cmc
adc
jno
push
pop
inc
sti
insl
push
adc
lahf
test
icebp
orl
nop
es
push
or
mov
leave
and
push
iret
mov
xor
or
or
aas
mov
je
stos
and
sti
sub
aas
push
dec
sbb
mov
push
hlt
mov
cmp
lret
lods
pusha
scas
sub
out
sub
fldenv
testb
cmp
dec
aad
or
mov
pop
cmp
cmp
push
sub
lahf
pushf
outsl
fcoml
and
or
cmp
aas
mov
pop
xchg
lcall
leave
subl
add
pop
mov
lret
xor
push
mov
add
enter
dec
and
lods
fcoml
lret
pop
ror
sub
orb
push
jle
iret
call
sbb
ss
icebp
xor
pop
mov
pop
in
mov
mov
xor
movsb
les
cmp
and
loopne
or
iret
cwtl
and
cmp
pushf
push
pop
idivl
mov
xchg
mov
movsb
mov
out
neg
and
jbe
sbb
xchg
mov
xchg
jnp
shrb
lds
rorl
jl
xchg
and
mov
pushf
jmp
scas
xor
jecxz
movb
xchg
data16
ret
adc
lds
sbb
out
insb
icebp
mov
loop
xorb
mov
imul
fdivs
jl
jg
out
cmovnp
dec
imul
adc
cmp
xchg
mov
test
mov
xor
pop
imul
iret
adc
aad
fildll
sbb
xor
cmp
push
and
add
jnp
je
mov
or
dec
and
cmc
fsubrl
leave
fisubrl
sub
cmp
faddp
pop
dec
and
pop
outsl
sbb
loope
mov
xchg
pop
add
adcl
xchg
mov
leave
into
in
jmp
pop
jl
mov
xor
mov
sbb
jle
or
in
mov
mov
push
mov
bound
inc
cmpsb
jo
lock
loopne
rcll
or
pop
out
pop
cmp
lret
leave
push
pop
lret
dec
lods
adc
and
movb
dec
ret
mov
cwtl
sbb
push
cli
cmp
inc
mov
pop
cs
inc
dec
push
pushf
jbe
mov
pop
push
mov
mov
cmp
push
push
repnz
or
jno
gs
jo
lods
adc
icebp
xor
divb
sbb
jg
xchg
iret
jg
pop
mov
inc
insb
mov
aam
sub
mov
dec
fmul
inc
sub
pop
lea
xor
push
adc
sar
jge
sarl
call
cmp
stos
jb
mov
enter
inc
add
and
fbld
sub
xchg
mov
nop
cmp
into
sarb
xor
add
out
xlat
add
sti
jno
and
mov
in
bnd
sarb
push
and
cs
test
js
xor
inc
mov
mov
lock
mov
aas
adc
popa
jnp
or
and
lock
enter
std
mov
sub
xchg
jecxz
popf
push
xchg
ret
add
push
lds
or
xchg
std
cmp
ds
shr
popa
fwait
mov
mov
fcoml
mov
scas
lock
cmp
popa
push
arpl
sub
cmpsl
int3
cmp
lahf
cmp
data16
iret
xchg
sbb
inc
or
cld
repz
sbb
mov
loopne
and
aam
jmp
and
adc
jb
mov
sub
ja
sbb
adc
adc
xor
xchg
add
aam
lahf
cltd
adc
xchg
jne
mov
sbb
addr16
fisubs
adc
or
fisttps
sub
rolb
dec
sar
jo
rorb
dec
xchg
fimuls
mov
fcoms
push
inc
mov
aam
rcrl
lret
scas
call
jo
repz
pop
ja
adc
or
pop
mov
icebp
fisubrl
lcall
clc
cmp
iret
repnz
enter
fldl2t
popf
mov
inc
mov
aad
into
sti
cmp
and
lret
mov
mov
rclb
lret
sub
jae
sub
cwtl
pop
int3
addr16
pushf
incb
sbb
in
pusha
in
xchg
xchg
not
movsb
enter
dec
mov
gs
mov
mov
test
add
pop
test
sub
sub
icebp
sub
call
fdiv
and
or
pop
xor
pop
fucom
add
jne
das
rolb
xchg
addr16
inc
inc
or
sub
or
js
jno
jne
mov
lea
mov
xor
adc
adc
sub
cmp
fdivl
and
mov
subl
cmp
in
jle
mov
and
dec
pop
pusha
loopne
enter
ss
test
jae
jecxz
clc
cmp
out
ficompl
daa
push
in
stos
xor
jp
push
jne
sbb
and
jle
adc
sahf
mov
cli
test
or
mov
push
aam
test
cld
dec
pop
jo
jmp
iret
cli
test
sbb
sbb
aad
sti
ss
and
sbb
popf
adc
ds
xchg
inc
jl
mov
push
inc
pusha
lcall
movsb
imul
dec
aas
pop
jp
jno
pop
mov
mov
add
sbb
fdivrs
dec
aaa
aaa
xchg
rolb
imul
pop
pushf
mov
test
dec
test
pop
jo
flds
sub
iret
pop
push
mov
cmp
mov
push
cmp
rcr
mov
dec
movl
ds
adc
jns
mov
mov
mov
sbb
inc
lret
daa
lock
inc
dec
aam
clc
jb
sub
inc
cld
dec
inc
ficoms
mov
or
testb
pop
jnp
xor
xor
jge
aad
sub
jge
push
test
imul
daa
mov
enter
push
loope
dec
addr16
and
cwtl
stos
lret
rolb
movsb
xor
mov
xacquire
outsb
rol
xor
xor
mov
or
out
data16
andps
xchg
mov
mov
mov
jbe
loopne
loope
dec
lock
cmp
int
insl
cmp
xorl
mov
and
xchg
out
movsb
out
pop
loopne
push
cmp
sub
push
mov
sub
cmp
mov
sahf
sub
popa
div
mov
xor
mov
cmpsb
pmulhw
sub
push
push
add
int
lahf
rorb
mov
imul
data16
pushf
adc
jge
aas
or
adc
push
fcompl
inc
adc
cltd
cmp
mov
test
jnp
adc
and
popa
xlat
lcall
addr16
das
out
hlt
dec
jnp
addr16
jecxz
and
inc
out
stos
cmp
inc
call
and
lods
cld
pop
in
inc
push
outsl
add
pop
pushf
push
mov
test
std
cmp
in
xchg
inc
push
inc
fistps
mov
shrl
data16
subb
push
dec
jg
loopne
int3
fldl
ret
push
fstpt
lods
cmp
push
lahf
repnz
fyl2xp1
push
adc
out
lods
shrl
ja
sbb
xchg
add
pop
cmc
mov
adc
cld
mov
inc
fstpl
and
sub
imul
enter
fbld
sbb
dec
popf
movsb
lcall
push
fimuls
sub
or
arpl
ljmp
call
jae
loope
fldl
sti
xor
sub
outsb
roll
call
push
adcb
mov
loopne
mov
xchg
pop
sarb
ja
xor
in
xchg
cmp
mov
shlb
aas
pop
push
xchg
pop
mulb
adc
repnz
push
loope
and
inc
popf
push
push
test
outsl
sbb
add
lret
imul
gs
aas
in
lods
push
or
jnp
fs
data16
dec
fisttps
or
push
std
orl
jmp
xchg
outsb
jnp
test
mov
jmp
sub
add
push
faddl
fists
push
push
andl
and
shll
cld
cmp
aad
dec
decl
ror
into
xchg
jl
cmpsb
nop
les
jne
mov
push
out
mov
nopl
xchg
inc
sbb
stos
push
scas
sbb
loopne
lcall
cmp
jmp
pop
ret
mov
movsb
dec
mov
inc
mov
fnsaves
inc
int3
jne
push
pop
or
sbb
movsl
and
adc
jae
mov
adc
fidivs
pop
lds
add
popf
fst
adc
sbb
inc
jne
addb
mov
pop
sub
lahf
dec
cmp
fldt
jno
sub
lea
xchg
xlat
imul
cmp
or
sbb
mov
fs
sub
fmuls
mov
scas
fisttpl
dec
push
xor
jp
cmpsl
push
lods
pop
loopne
sbb
jle
push
cmpsb
inc
fmul
test
mov
or
cmp
mov
inc
mov
adc
jmp
adc
sahf
pop
mov
outsb
shrl
fisubs
sbb
int
and
jmp
ret
jg
cmpsl
icebp
cli
pop
fs
and
loope
xor
inc
rcrb
and
mov
test
jle
insb
xor
mov
pushf
and
hlt
add
lgs
push
lods
and
cmpsl
xchg
pop
mov
stos
std
ds
pop
cmpsb
mov
test
ret
dec
shll
jl
mov
lods
xor
outsl
movsl
pop
shrl
push
jl
adc
jge
scas
adc
or
and
test
sbb
mov
scas
lret
es
xchg
jnp
in
pushl
dec
lcall
add
inc
iret
dec
xchg
pop
xor
cmpsl
mov
cmpsb
mov
cmp
mov
push
mov
cmp
shlb
in
mov
mov
sub
sahf
or
loopne
int
popf
fdivs
sbb
push
sbb
jmp
mov
in
mov
cmp
and
push
stos
mov
shlb
rcrb
in
cmp
sbb
stc
fwait
js
hlt
and
leave
fbld
imul
lods
jb
push
movsl
loop
adc
shl
or
xor
adc
popf
jp
push
cmp
push
push
cmpsb
or
addr16
fldt
adc
std
sub
add
inc
movsl
cmpsb
cmp
jne
mov
push
xor
je
shlb
push
imul
into
push
cmp
out
add
jp
fwait
inc
gs
rclb
lahf
sub
gs
sub
inc
pop
into
pushf
jmp
rolb
adc
inc
xchg
pusha
cmp
mov
mov
gs
cmpsb
stos
negl
cmp
xchg
mov
gs
add
ret
aam
jbe
ficompl
push
jbe
int3
mov
sub
push
in
dec
cmp
sbb
test
mov
andl
fwait
xor
sbb
pop
lahf
cmpsb
mov
ficompl
aas
jae
aas
mov
push
push
data16
lock
xor
jbe
push
xor
idiv
or
sahf
mov
cmpsl
pop
pop
sahf
lods
mov
lock
mov
ljmp
ljmp
lret
xchg
mov
data16
fucomi
movsb
imul
or
jg
xor
test
sahf
dec
add
mov
push
dec
cmp
fldt
push
sbb
testb
int3
sub
mov
movsb
es
outsb
sub
and
fistl
pop
movsb
push
sub
aas
popa
mov
popf
pop
aad
popa
in
mov
stc
pop
cmpsl
push
add
sti
jo
mov
cs
dec
xchg
adc
inc
pop
mov
pop
and
sbb
pop
or
je
sbb
outsb
pushf
sbb
add
jb
lret
inc
out
pusha
dec
mov
arpl
sub
cmc
test
mov
popf
mov
lods
push
mov
cmp
push
add
bound
inc
pop
out
pop
sbb
add
jmp
sti
jg
test
fsubr
addl
jp
fisttps
call
xchg
add
sbb
add
pop
test
or
sbbb
cli
xor
shll
xchg
or
aas
mov
add
xor
mov
sub
imul
mov
cmp
jg
push
adc
enter
mov
cld
outsb
aad
into
fstl
jp
pushf
lea
loop
cmp
xor
mov
cmc
fsubl
inc
jno
cwtl
sub
repz
seto
xchg
mov
adc
mov
push
js
mov
push
movsl
pusha
xchg
mov
fucomi
lret
xor
push
add
inc
cmpl
xor
into
imul
mov
pop
adc
scas
and
sbb
dec
sub
in
dec
cmp
inc
cmp
jmp
inc
inc
hlt
addr16
cmp
dec
das
push
sbb
sar
xor
cmp
ja
add
sbb
sbb
xlat
and
jns
xor
aad
movsl
cwtl
xor
xchg
and
aad
pop
xor
jb
inc
adc
sbb
sbb
test
push
movsb
ret
in
mov
xchg
out
lods
jb
inc
in
cmp
scas
pop
fxch
sarl
jno
mov
imul
sub
lcall
out
pop
test
jmp
push
aad
out
or
inc
cmp
xchg
mull
mov
inc
lcall
push
lods
test
mov
cmp
addr16
inc
cmp
pop
adc
repnz
dec
or
movsb
jmp
lea
cltd
or
add
pop
in
mov
push
addb
sbb
into
jae
pop
cmp
sbb
and
jg
pop
add
stos
es
or
dec
xchg
mov
pop
lahf
imul
jl
cmp
pop
flds
rcl
faddl
mov
lea
gs
sbb
mov
mov
out
test
mov
mov
call
lods
stos
scas
ss
or
sahf
cmpb
aas
stos
xchg
jecxz
adc
out
mov
adc
jno
filds
push
lods
pop
mov
cli
xchg
int3
push
enter
push
add
fmulp
leave
mov
xchg
das
lcall
jb
adc
pop
cli
test
outsl
rolb
add
nop
cmp
outsb
sbb
mov
inc
repnz
clc
scas
jg
push
xchg
inc
jmp
loope
mov
xchg
aam
jle
xchg
cmp
mov
leave
push
jbe
repnz
push
mov
xorl
les
popa
lret
dec
imulb
gs
jnp
hlt
or
push
data16
popf
fistpll
imul
cld
test
ret
rcll
pushf
int3
fcom
ss
icebp
adc
cli
xor
jle
pop
sbb
sbb
mov
mov
aaa
movsl
cmp
or
cwtl
add
xchg
inc
mov
imul
arpl
sub
mov
mov
dec
xchg
lcall
inc
repz
jae
add
mov
dec
out
push
xchg
rclb
inc
das
fwait
test
pop
add
adc
je
or
mov
lea
pop
xor
test
mov
mov
cs
fcmovbe
mov
cltd
xchg
jnp
push
add
popa
or
sbb
mov
int
and
add
punpckhbw
xchg
mov
sub
nop
inc
cmp
andl
aad
mov
call
jge
mov
jo
icebp
ss
fcoml
push
out
lcall
sbb
les
es
outsl
push
rcl
outsb
je
ss
das
adc
push
push
mov
push
xchg
in
out
das
pop
sbb
add
mov
lods
iret
incl
mov
in
sahf
mov
movsl
subb
or
outsl
sub
adc
sbb
lds
or
or
shlb
aas
jl
xor
mov
add
pop
mov
xor
sub
addb
sti
xchg
pop
lea
mov
jno
dec
jecxz
dec
dec
xchg
addr16
pop
data16
xchg
addr16
mov
popf
or
add
xchg
cwtl
je
lock
jle
push
pop
jmp
repnz
ret
arpl
aad
mov
inc
push
push
mov
sbb
add
mov
or
jg
dec
xchg
xchg
cwtl
jle
mov
mov
sub
enter
addr16
mov
xor
popf
pop
mov
add
out
adc
popa
lock
stc
xlat
idivl
mov
dec
cwtl
popa
repz
int3
hlt
mov
xor
push
mov
cmp
xor
push
rcll
push
xchg
jno
xchg
xor
inc
jp
mov
push
stc
out
ss
ret
mov
pop
rorb
or
mov
jge
rcll
cmp
pop
dec
imul
pop
andb
shrl
lret
push
xor
cmc
insb
mov
call
leave
jmp
inc
cld
pop
dec
adc
rorb
ret
inc
pop
scas
cs
mov
frstor
push
inc
shll
inc
or
sub
add
jg
mov
lds
xor
cmpsb
repz
xchg
cltd
scas
inc
push
cltd
les
lret
ja
insl
sub
nop
pop
jle
in
inc
add
sub
inc
push
lock
or
mov
or
sub
pop
sub
in
mov
push
test
testb
mov
icebp
movsb
dec
loope
xor
adc
pusha
cli
adc
mov
cmp
sti
sbb
pop
mov
outsl
lret
lcall
cwtl
leave
dec
adc
je
add
sub
cmc
inc
adcl
xchg
mov
cmpsb
add
arpl
std
out
xor
fimuls
adc
pop
or
imul
fst
outsl
rorb
pop
ret
mov
mov
jo
popa
adc
pop
pop
mov
clc
movsb
jp
call
pusha
or
loope
bound
in
add
add
xor
outsb
sti
enter
ja
cmp
cmp
aad
xlat
add
xor
rcll
inc
sti
xor
dec
cwtl
xor
int3
fisubs
push
arpl
xchg
cwtl
add
das
adc
fwait
sub
mov
ja
nop
push
xchg
hlt
pop
sti
gs
test
mov
outsb
sub
rorl
dec
mov
and
jno
pushw
movsl
nop
loop
loop
or
xor
inc
fldl
mov
je
mov
add
fldt
test
push
sbb
mov
lock
add
sub
inc
rcr
test
ja
std
or
es
je
dec
mov
popa
xchg
sarb
xchg
outsl
rolb
add
sub
xchg
mov
ljmp
mov
cmp
push
icebp
adc
jnp
push
pop
jmp
sbb
dec
adcb
xchg
cmpsb
mov
cmp
cmp
xor
cmp
mov
jbe
pop
dec
jge
loopne
jp
divb
mov
cmp
or
xchg
fisubrs
test
add
test
xchg
call
or
and
ja
daa
iret
jge
mov
xor
shll
push
sbb
xchg
add
mov
cli
stos
cmp
nop
js
fldz
pop
sbb
cwtl
int3
xor
jle
out
cld
cltd
add
nop
scas
sbb
inc
cs
mov
mov
repz
xchg
cld
mov
xor
xchg
loopne
add
mov
sbb
fsqrt
inc
stos
pop
fsubrs
out
outsl
je
sbb
jno
adc
pop
pop
mov
push
pop
into
lds
loope
fdivl
lods
mov
lret
dec
cltd
add
and
add
ds
pop
push
stos
mov
adcb
addr16
out
cwtl
sub
sbb
pushf
dec
fs
les
and
mov
vmwrite
fistl
loope
fs
push
leave
in
dec
stos
hlt
jmp
dec
popf
mov
mov
cmpsb
aam
or
push
fbld
rep
pop
ds
jp
mov
or
sub
xchg
dec
mov
fsubrl
and
fs
dec
push
push
bnd
stos
inc
decl
cmp
fisttpll
add
in
rol
push
sbb
leave
and
xor
mov
and
add
mov
pop
xor
adc
std
inc
mov
jp
aas
and
shlb
mov
mov
int
adc
dec
in
jns
mov
icebp
dec
jg
loop
or
fisttpll
mov
popa
mov
pop
cmp
jne
inc
jno
movsb
sub
sti
movsb
jmp
gs
mov
jge
movsl
popaw
data16
dec
loope
lret
fcompl
cmpsl
adc
mov
jnp
jb
pop
std
and
pop
leave
jb
stos
dec
add
sahf
pop
cli
fldl
inc
rcr
call
stos
fxtract
notl
das
dec
sarl
pusha
fwait
jno
outsl
loop
xor
jle
jne
sub
fstpl
rol
das
dec
int
inc
pop
xor
clc
int
sarl
jl
int
insb
xor
lcall
jns
fcom
add
mov
or
mov
lods
inc
loope
rcr
mov
mov
jmp
test
aam
mov
loop
imul
aad
loope
fisubs
sub
push
movb
lret
mov
jecxz
stos
cmp
jo
and
xchg
popa
inc
mov
in
fistpll
xchg
and
ficompl
mov
push
adc
leave
in
mov
fisubrs
and
stos
sbb
lahf
pop
fst
push
sbb
sub
scas
shlb
fwait
pop
movsl
inc
adc
pop
fdivp
loope
in
ja
dec
scas
mov
push
mov
mov
mov
mov
outsb
add
and
ret
pop
push
sbb
adc
pop
in
cli
push
adc
fbld
mov
push
cmp
adc
in
lock
jb
add
jmp
loope
mov
pop
dec
int3
popf
leave
aad
adc
mov
test
sti
push
in
popf
mov
xchg
dec
ret
mov
fstl
mov
ret
sti
push
repz
out
or
test
ret
dec
dec
pop
movsb
dec
mov
fwait
leave
insb
adc
movsb
pop
mov
iret
leave
nop
jne
icebp
test
rcrb
arpl
dec
jle
or
xchg
cmp
in
outsl
pop
aad
push
pop
sbb
sti
sub
add
sub
xchg
dec
jne
pop
xor
jb
ss
fsubrl
or
inc
sub
cltd
jae
fists
and
adc
push
xchg
lahf
nop
out
int3
mov
adc
lods
add
xchg
pop
leave
adc
sub
push
insl
test
sahf
push
in
es
inc
lods
add
jns
loop
push
scas
mov
xor
cmp
aam
push
inc
dec
enter
dec
fwait
sub
inc
mov
jb
outsl
leave
mov
addr16
sbb
pop
cs
pop
jle
push
cli
push
pop
mov
xor
jne
cmp
in
sbb
in
andb
es
movsb
aam
xor
inc
inc
adc
sbbl
pop
int
add
lahf
ljmp
dec
add
rorl
fsts
and
jns
inc
jns
adc
scas
enter
fs
xorl
sub
nop
jecxz
in
dec
loop
aad
hlt
int
mov
jnp
add
rcl
adc
out
xor
mov
dec
sahf
lea
sti
mov
cmp
dec
aaa
xlat
shl
xlat
cmp
mov
mov
out
jbe
mov
std
push
xchg
dec
cmp
add
dec
icebp
cmp
in
push
sub
jle
and
or
push
and
inc
push
mov
sub
cltd
ljmp
xchg
dec
dec
test
pop
cmp
pop
aad
add
add
adc
test
dec
mov
fsubrs
lods
jmp
andb
inc
out
test
adc
push
mov
push
jecxz
sub
jno
stos
jle
ds
sub
lods
mov
pop
testb
insl
cmp
mov
cmovb
mov
push
jno
movsl
push
mov
cmp
and
mov
addr16
pop
push
loope
push
adc
ljmp
add
bound
xchg
lret
jae
xchg
mov
sbb
inc
mov
int
leave
sub
cmc
xor
mov
inc
aad
cmp
xor
fmulp
or
cld
xor
sub
mov
sbb
loopne
and
cwtl
mov
in
mov
and
dec
es
imul
xchg
mov
out
xchg
aad
push
lahf
lcall
into
mov
mov
fsubl
jno
inc
mov
or
xchg
cmpb
mov
mov
in
icebp
lret
popf
repz
push
xor
mov
adc
lahf
add
fdiv
jo
icebp
push
mov
push
mov
pop
or
nop
popa
push
or
mov
fsubs
xchg
sbb
das
sarl
mov
and
mov
aad
je
insb
jl
imul
test
test
clc
xchg
loopw
flds
add
and
ffree
sub
ja
pop
cltd
ja
xchg
adc
mov
addr16
xchg
sbb
xchg
into
roll
mov
out
icebp
imul
jne
inc
mov
fildl
and
or
mov
sub
jge
stos
repnz
arpl
sbb
jg
and
cld
adc
inc
add
or
xchg
rcrb
in
and
pushf
repz
mov
sbb
stos
arpl
gs
jecxz
add
fdivrl
add
or
pop
cwtl
add
fmul
cltd
inc
loopne
rcrl
pop
sbb
test
ficompl
rclb
scas
mov
dec
inc
bound
dec
lds
in
xor
addl
in
inc
mov
out
mov
cmp
add
mov
push
sahf
add
cmpsb
jo
mov
xchg
sub
std
and
aam
gs
sub
add
mov
dec
fstpt
cmp
sub
xchg
push
std
pop
imul
aam
push
mov
jl
outsl
cmp
fcoml
push
sub
cmp
xorl
xor
mov
movsl
and
shlb
fs
push
inc
leave
inc
mov
jg
push
sbb
aas
mov
xlat
adc
xchg
cmpsb
dec
jno
sub
inc
incb
push
fildll
aam
das
les
ljmp
or
adc
sbb
cmp
out
pop
or
add
jae
mov
rcl
cmpsl
pop
lret
popf
popa
movsb
shlb
push
arpl
shll
or
aas
aas
or
iret
add
fnstenv
mov
dec
lcall
lret
mov
xchg
push
cmp
pop
jge
pop
mov
mov
bound
imul
roll
sub
jbe
in
and
push
stos
sub
or
out
sub
leave
insl
testb
xchg
movl
out
add
jecxz
cli
outsb
cmp
add
xor
lcall
popa
mov
inc
jecxz
xor
in
jecxz
mov
aam
pop
sbb
fidivs
lods
cwtl
rorl
pushf
sub
loopne
jne
lret
std
pop
stos
sahf
jae
adc
nop
mov
outsb
mov
cli
jnp
adc
sub
push
pop
dec
in
sti
outsb
hlt
mov
inc
mov
sub
pop
imul
jae
outsl
mov
jge
pusha
icebp
das
arpl
xchg
jae
inc
xchg
pop
mov
mov
add
out
andb
and
cld
ret
addr16
sbb
jae
negl
jnp
push
jle
std
add
insb
mull
xchg
xor
mov
repz
cmp
and
pop
push
fiaddl
inc
push
push
sbb
pop
js
into
setne
inc
adc
xchg
scas
or
ds
out
je
dec
cltd
push
push
inc
push
scas
out
mov
mov
jmp
push
popa
inc
xchg
xor
es
out
sbb
mov
lret
push
in
jl
mov
jp
adc
push
scas
je
nop
icebp
xchg
pop
push
pushf
push
or
roll
incb
daa
jo
jge
push
sbb
xchg
mov
push
stos
std
push
pop
sub
or
push
sub
ds
fdivr
loop
pop
pandn
cmp
jo
mov
fs
inc
inc
in
adc
fdivrl
xchg
mov
pop
dec
and
jne
std
sub
int3
mov
popf
xchg
dec
dec
xchg
or
dec
add
xor
cmp
push
or
or
fistps
insb
dec
jb
xchg
sub
and
rorb
ffree
stc
adc
aam
push
test
and
xchg
das
outsb
push
inc
jge
into
xor
frstor
inc
push
lret
je
cmpb
xchg
fst
subps
fiadds
xchg
roll
adc
hlt
mov
inc
lods
in
xchg
shr
aas
clc
xchg
insl
xchg
outsb
push
inc
cmpsl
and
push
mov
dec
loop
cld
mov
push
out
add
out
loop
into
inc
rolb
sti
add
inc
les
cwtl
pop
addr16
idivl
adc
jb
ja
mov
dec
adc
mov
mov
dec
fsubrs
inc
mov
jecxz
mov
push
ffree
arpl
fld
sbb
cmc
shrb
cmp
testl
push
lds
mov
mov
adcb
mov
pop
dec
test
incb
pop
ret
and
mov
jno
insl
aaa
xchg
push
cmp
cmc
jge
outsl
movsl
subb
adc
add
int
xchg
ds
xor
pop
leave
jecxz
xchg
jmp
aaa
xorb
test
inc
sarl
bound
les
loop
int3
test
in
lock
outsb
xorb
idivl
xor
les
add
add
std
iret
sbb
xor
or
jmp
repz
sbb
iret
clc
sbb
mov
pop
push
dec
inc
push
mov
shrl
mov
jne
daa
push
jg
pop
push
mov
std
aas
sbb
mov
sub
hlt
stos
ret
ja
inc
lret
jno
push
add
sbb
or
and
sbb
dec
sub
out
pushf
fwait
pop
gs
loop
roll
lds
arpl
out
push
xchg
ss
stos
cs
jmp
fs
jle
jmp
cmp
adc
aad
test
call
flds
lcall
out
mov
insl
dec
pop
ljmp
daa
dec
fucomi
mov
xchg
js
movsb
pushf
add
push
orb
popf
xorb
andl
cld
and
add
pop
pop
mov
jmp
xor
cmp
xlat
insl
das
divb
mov
les
repz
sbb
xor
mov
fsin
out
mov
mov
mov
dec
lret
shlb
shlb
adc
mov
push
invd
rcrl
das
fs
scas
dec
push
push
adc
add
cmp
jmp
cmc
test
push
fiadds
out
xor
stos
les
xor
ss
push
jno
push
jle
ss
jg
xor
fsubs
test
xchg
cmp
mov
lds
dec
jle
out
pop
mov
lret
add
mov
loope
dec
int
fwait
mov
xchg
loop
pusha
mov
mov
push
mov
movsl
lret
xchg
mov
insl
out
fsts
mov
loope
in
cmp
sub
dec
pop
pop
aaa
dec
cmpsb
mov
add
adc
dec
lods
dec
or
mov
loope
add
ja
fndisi(8087
jmp
lea
inc
inc
enter
lods
push
mov
out
or
lods
lret
cli
int3
dec
shrl
call
gs
ss
repnz
adc
sub
ret
and
xchg
add
popa
mov
es
mov
sahf
int
sub
cmp
jl
cld
negl
pushf
fimuls
cmpsl
pop
sub
fs
ljmp
mov
call
mov
sti
mov
pop
dec
test
mov
inc
xor
mov
lret
shll
mov
push
jne
stc
mov
dec
call
mov
add
push
cltd
dec
dec
aam
mov
xor
scas
inc
jno
jno
cs
adcl
mov
push
mov
push
dec
jbe
and
movsl
dec
adc
xchg
mov
xchg
cmp
dec
or
ss
push
mov
stos
loop
fcmovne
stos
cmp
sub
lahf
jns
loopne
push
cmc
loop
mov
test
adc
cltd
pop
mov
and
dec
clc
stc
out
xor
js
inc
in
cmp
or
mov
mov
push
cmp
mov
andl
or
mov
repz
aad
xchg
jb
pusha
sbb
cmp
sub
movsb
push
sub
inc
ret
popa
cmp
adc
cmp
and
subb
add
mov
cmp
in
xor
mov
repnz
jg
sub
jne
int
dec
mov
xchg
xchg
scas
sbb
mov
lahf
enter
cmp
jbe
fcom
shrl
arpl
adc
xor
sbb
scas
ret
fwait
lds
jle
mov
or
xlat
fcmovu
out
pusha
or
sti
stos
adc
std
mov
and
imulb
cmpb
fisubrl
or
fisttps
and
and
mov
rorb
lahf
outsb
xchg
fnstcw
fucomp
adc
add
mov
pop
jbe
rolb
mov
popf
mov
int3
adc
dec
dec
repz
adc
aad
rorb
shlb
and
mov
add
lret
jp
icebp
sbb
and
fnstcw
movsl
and
jle
dec
mov
je
repz
frstor
test
lods
and
cmp
dec
pusha
adc
pop
and
fs
or
xor
inc
xchg
xor
in
ror
not
jl
loopne
stc
mov
aas
leave
add
push
outsl
data16
lea
xor
mov
shlb
sub
fmul
xchg
sub
or
push
jae
in
and
xor
mov
std
clc
test
push
repz
mov
mov
mov
stc
ret
adc
hlt
cs
in
loop
cmp
popl
int
fadd
mov
xorl
cmpb
rorb
push
addr16
popf
stos
add
push
pop
jp
push
xchg
sbb
in
testl
push
mov
movsb
adc
sahf
xorps
lret
sarb
iret
cmp
xor
cmpsb
pop
push
movsl
sub
or
ret
xchg
andb
push
test
pop
dec
js
sub
clc
jns
int
jne
adc
addr16
and
lods
cld
xchg
scas
lock
mov
pop
jae
jge
int
xchg
sbb
in
sbb
cmp
cmp
test
cmpsl
insb
icebp
mov
std
enter
push
xchg
stos
dec
push
lods
mov
bound
aaa
pop
imul
fwait
xor
aad
subb
or
jo
push
test
out
cli
or
cmp
les
lds
shlb
mov
mov
jne
fldenv
out
pop
cmp
loope
or
and
jbe
cmp
je
add
test
mov
cmc
enter
stos
push
add
in
push
pop
arpl
dec
mov
inc
js
mov
sub
xchg
dec
or
int
std
mov
push
sbb
in
imul
aas
mov
outsb
jmp
es
sub
jne
pop
push
inc
inc
mov
data16
pop
cmp
and
adc
inc
xchg
cmp
ss
test
jg
jmp
inc
inc
insl
jl
inc
mov
mov
inc
test
inc
cwtl
xchg
scas
inc
adc
outsb
in
cmp
mov
idivl
jns
fcoms
sahf
mov
aam
or
xchg
repnz
stos
pop
clc
in
lods
dec
xor
push
aad
sub
and
jl
mov
jnp
jmp
les
fs
xor
jae
inc
stos
dec
push
sub
jge
insb
push
inc
pop
stos
scas
popa
pop
adcl
je
rcll
leave
xor
aam
xchg
sub
xor
scas
sub
sbb
pop
call
or
mov
testb
and
adc
cmc
xor
xor
addr16
xor
mov
jecxz
xor
in
jge
and
pushf
mov
or
sbb
mov
xor
aaa
adc
addl
fsubr
in
cmp
hlt
or
fwait
je
aas
jmp
push
ljmp
inc
sub
xchg
inc
and
adc
out
jne
jns
loopne
mov
insb
insb
aaa
test
hlt
pop
ja
sbb
xor
jecxz
repnz
sub
and
int
js
adc
mov
out
nop
jbe
je
repz
jns
rcll
fdivrl
enter
cli
and
mov
andb
xchg
mov
dec
dec
mov
out
push
cmp
adc
les
repz
cmp
cmpsb
out
push
and
out
inc
scas
sar
pop
jmp
dec
imul
aad
xchg
mov
cmpsb
push
pop
cwtl
ficoms
cmp
push
subl
ss
rolb
dec
clc
out
std
mov
insb
inc
leave
nop
jb
mov
jnp
pop
adc
sbb
add
dec
daa
add
test
insb
enter
lods
lods
ss
int
add
loopne
notb
ja
in
out
jmp
outsl
ds
or
movsl
jg
ljmp
mov
dec
ret
hlt
sub
jecxz
push
outsb
sbb
push
in
cmpl
cmp
aam
push
sbb
dec
mov
adc
js
dec
aam
jg
xorl
mov
push
sbb
inc
xchg
pop
dec
sub
loopne
mov
push
nop
insl
xorl
fildll
test
xchg
mov
in
test
es
sbb
or
out
mov
mov
aaa
fisubrs
pushf
jbe
mov
mov
mov
mov
aam
fs
and
pshufw
lods
pop
popa
aad
call
pop
mov
out
jp
rorl
cmp
test
pop
jb
les
inc
shlb
and
cltd
lods
xor
jb
imul
inc
scas
dec
jge
int
dec
inc
in
sti
pop
jnp
bound
jo
mov
jo
push
sbb
dec
mov
sar
pop
jle
in
std
mov
push
jo
andl
lahf
mov
out
sbb
push
adc
inc
mov
jne
cmpsl
pop
mov
cmc
xor
sahf
xlat
movsb
xchg
sar
dec
cmp
mov
sub
fs
out
jbe
rcrl
add
pop
mov
pop
jo
jb
adc
dec
in
adc
xchg
and
movsb
mov
loope
mov
xchg
jno
mov
xchg
es
fistpl
mov
int3
notb
cwtl
add
mov
mov
insl
scas
sbb
push
inc
xor
dec
pop
pop
scas
stos
out
les
fcoml
adc
sbb
xor
imul
fwait
test
mov
mov
push
imul
push
loope
repz
add
push
movsl
push
pop
in
mov
inc
jns
into
pop
lds
inc
lcall
leave
xchg
subb
inc
dec
cmpl
stos
faddl
or
out
mov
ds
aad
dec
dec
jne
jne
pop
dec
fists
cwtl
mov
add
xor
sar
push
push
aaa
lods
fsubrl
dec
rcrl
and
sub
movsl
inc
testb
jae
cmpsb
addr16
dec
leave
jecxz
arpl
mov
mov
xchg
cld
gs
test
out
xchg
addl
outsb
pop
iret
adc
push
out
adc
cld
pushf
pop
xor
call
cmp
into
aaa
xor
pusha
add
push
xchg
pop
leave
lods
push
mov
mov
xor
mov
sbb
cld
mov
aas
mov
jp
xchg
pop
adc
pop
mov
xchg
jns
jecxz
or
inc
icebp
pminub
nop
dec
test
daa
mov
sub
sbb
inc
xchg
arpl
mov
aaa
clc
xor
adc
pop
xchg
std
dec
pop
sbb
std
mov
adc
adc
inc
lret
inc
fmulp
fs
dec
cmp
push
cmp
loop
xchg
insl
pop
loopne
inc
fwait
dec
pop
xchg
xchg
or
xchg
inc
jle
mov
inc
fucomip
fadd
sub
pop
cmc
dec
imul
lret
mov
add
stc
adc
push
js
cmpsl
mov
xchg
mov
jle
ja
arpl
pop
lahf
outsl
mov
push
ds
insl
pop
add
mov
bound
lretw
aas
cltd
adc
daa
or
daa
hlt
adc
mov
add
dec
and
pop
pusha
ja
jecxz
mov
iret
ret
fcomp
or
mov
stos
mov
lahf
insl
mov
lcall
pop
cmpsl
inc
inc
sahf
mov
nop
mov
adc
aam
lahf
out
stos
jae
pusha
lock
and
xor
xor
cs
xchg
or
and
int3
or
je
pop
mov
int3
mov
addr16
jbe
clc
les
icebp
sbbb
pop
enter
lcall
sbb
repnz
mov
or
xchg
push
adc
mov
out
sub
sub
out
imul
pop
js
xor
jl
sahf
inc
pusha
and
mov
inc
cmp
pop
sbb
arpl
loopne
push
sbb
out
push
shrl
jl
sbb
in
lcall
or
sub
add
aas
leave
lock
icebp
nop
aaa
xchg
sbb
push
adcl
decb
test
js
ret
mov
pop
cwtl
xchg
pop
mov
cmp
add
push
cmp
outsb
lcall
movsl
lock
lock
jbe
cld
call
mov
ja
dec
int3
lahf
sub
insl
jne
cmp
push
rolb
sub
pop
mov
mov
mov
fistps
mov
mov
enter
sarb
call
lret
mov
mov
or
mov
fld
add
mov
popa
in
xchg
add
movsl
dec
pop
arpl
adc
mov
and
pop
scas
pop
add
pushl
mov
lcall
bnd
mov
add
sbb
push
add
sbb
cltd
sbb
incl
xor
aad
or
mov
and
mov
insl
sbb
lods
hlt
xorl
push
push
pop
push
mov
cmp
and
std
inc
movsl
sbb
and
adc
xchg
insb
fidivrs
sarl
dec
in
or
dec
aad
jmp
sub
mov
aad
sbb
jl
mov
pop
or
jg
mov
sub
add
sbb
stos
mov
fwait
adc
scas
xor
xchg
enter
pop
sub
mov
fisttpl
add
stc
fildl
mov
mov
in
sbb
rol
push
mov
xor
inc
mov
add
addr16
es
jmp
mov
sti
mov
pop
pop
dec
imull
pusha
xor
xchg
add
sub
and
enter
add
mov
cld
push
adc
mov
jbe
sub
adc
arpl
ret
out
adc
shll
pop
cmp
mov
sti
orl
mov
lock
push
mov
shlb
xor
add
fwait
inc
scas
sub
mov
mov
mov
and
lods
inc
pop
pop
mov
lret
leave
jne
adc
pop
jl
test
loope
jge
leave
push
pop
shr
lahf
dec
xchg
jmp
cvtps2pd
and
xchg
leave
pop
outsb
dec
lahf
push
mov
fcos
or
lds
repz
fstps
mov
pop
push
dec
jmp
cld
mov
test
dec
cmpsl
inc
push
outsb
add
out
push
mov
fists
pop
aam
mov
xor
movsl
jno
imul
mov
test
mov
arpl
loopne
mov
aad
scas
sub
pop
mov
jo
sbbb
lret
outsl
xor
jecxz
scas
ret
push
fdivp
cmc
pop
sbb
sub
in
jle
push
mov
adc
xor
push
add
pop
ror
scas
call
jo
repz
push
xchg
ja
jno
sahf
and
mov
or
cmpsb
xchg
xlat
lea
mov
shrl
mov
pminsw
xchg
pop
mov
enter
jmp
les
cmp
fldt
lods
imul
aad
pop
subl
in
sbb
imul
xchg
pop
dec
mov
sub
ss
lods
push
push
repz
aad
andb
ljmp
push
jbe
mov
pop
fbld
sbb
es
dec
mov
mov
repz
pop
and
cmpsb
and
cs
and
lds
aas
adc
loopne
cld
pop
nop
push
add
sub
aad
jge
outsl
stc
das
push
inc
insl
cmp
rclb
mov
xchg
or
frstor
cmpsl
nop
jp
cmc
std
call
adc
or
cmpsb
mov
into
mov
rcl
pushf
sbb
xchg
test
xchg
add
dec
les
scas
lds
pop
jmp
sub
je
out
mov
repnz
jge
dec
cmpsl
ret
sti
pop
mov
jb
sarl
inc
rcl
clc
ss
pop
call
movsb
sub
and
push
lds
inc
mov
sub
mov
or
lock
sub
dec
enter
lock
adc
cmp
fcoml
daa
jmp
rcrl
xor
imul
xchg
push
xchg
test
ret
loopne
inc
sti
lds
mov
lahf
xor
jb
clc
cltd
push
in
mov
movsb
mov
sub
clc
movsb
out
lods
add
dec
pop
ds
mov
xor
push
dec
cmpsb
out
xchg
lods
mov
cltd
and
push
mov
jge
mov
xchg
sub
daa
xchg
mov
int3
adc
adc
push
sbb
adc
int
iret
cmpsl
jb
xchg
pop
addr16
adc
in
mull
stos
mov
out
jne
mov
add
mov
cmp
add
push
jo
jbe
sbb
fwait
std
shlb
jo
js
in
mov
sbb
cmp
adc
popa
es
dec
fists
lock
adc
cmp
gs
out
out
out
or
test
jb
dec
and
jp
in
xorb
aas
mov
dec
scas
jmp
jg
cmp
add
movsl
xchg
mov
loop
cwtl
jle
ss
push
sahf
lret
cmp
fistps
cmpsl
shrl
lds
and
ret
sbb
stos
jecxz
out
jbe
dec
cmpsl
fndisi(8087
in
fildl
push
mov
scas
scas
xor
cmp
adcl
xor
mov
or
cmpsb
mov
mov
xchg
pop
shr
xor
sbb
xchg
insl
add
outsl
xchg
in
loopne
repz
cli
mov
cmp
int3
xchg
and
cmp
jb
fwait
mov
mov
andl
or
mov
mov
ljmp
or
sbb
lret
fildl
push
push
pushf
mov
lods
xchg
leave
scas
jno
pushf
into
dec
cs
jnp
or
cmp
daa
dec
jmp
cmpsl
inc
xor
add
roll
scas
xchg
enter
mov
or
mov
and
sbb
jo
je
or
int3
out
xor
cmp
scas
pop
lret
mov
xor
sbb
daa
scas
dec
add
pop
inc
out
mov
lods
sub
leave
dec
addr16
dec
push
add
popf
cld
mov
xlat
loope
mov
dec
xchg
jnp
movsl
dec
rcrb
push
inc
sub
mov
add
sbb
add
ret
xchg
push
in
lahf
outsb
sbb
dec
mov
imul
adc
icebp
inc
and
gs
dec
push
sbb
ret
out
lods
sbb
xchg
xor
aaa
or
inc
test
inc
lahf
repnz
fs
pop
xchg
mov
mov
mov
and
push
hlt
mov
mov
or
dec
dec
pop
mov
sti
fwait
jle
shrb
xchg
scas
std
fcoms
and
js
dec
stos
call
sub
shl
adc
lret
in
push
shll
cvtpi2ps
out
imul
shl
xchg
dec
lret
cwtl
xor
xchg
pop
cmp
dec
out
fsubl
inc
into
js
mov
outsl
push
pop
lds
sub
cmp
xor
lret
stos
divb
adc
test
mov
int
xor
mov
js
sbb
sbb
imul
es
faddp
adc
js
xchg
pop
negb
in
pop
hlt
xchg
arpl
sub
adc
xchg
arpl
rcrl
js
std
sbb
push
cwtl
ret
inc
xchg
movsb
xchg
stos
pop
mov
lret
scas
movsb
mov
rorb
pop
ret
inc
mov
sub
in
cld
adc
and
or
stos
jp
call
insl
popf
adc
adc
dec
scas
pop
bound
jge
inc
dec
fimuls
arpl
cltd
scas
nop
cmp
dec
xchg
xabort
push
jp
xor
adc
cmp
popa
inc
leave
mov
add
inc
sbb
or
sarl
popf
sti
xor
cli
pop
shrb
add
insb
mov
pop
sbb
xchg
push
ret
xchg
into
sub
cmpsb
stos
ret
mov
divl
cmp
and
mov
add
add
rcrb
sub
inc
je
sbb
lods
mov
cli
sub
rcrl
xchg
loop
jb
fdivl
stos
shlb
fmuls
dec
shl
jecxz
lret
cltd
or
sub
and
mov
aam
cmpl
xchg
cmp
data16
andl
scas
bound
scas
sbb
stos
stc
rcll
inc
sbb
pop
push
xor
pop
adc
dec
mov
mov
xor
es
add
ret
fwait
loope
adc
aaa
imul
fcoml
mov
sahf
adc
shr
in
mov
clc
and
sbbl
or
shll
outsl
scas
int
push
xor
adc
inc
mov
mov
incl
rorl
push
xchg
inc
and
sahf
cs
push
fwait
and
cmc
in
std
dec
arpl
lret
les
sbb
mov
pop
mov
jge
xchg
cmp
mov
arpl
inc
sbb
loop
pop
sub
or
pop
sub
ds
mov
xor
jmp
mov
pop
cwtl
mov
ffree
ss
ds
jl
jmp
lea
pop
loopne
test
scas
popa
movsl
mov
sbb
cs
rcll
int3
sub
test
or
cmp
out
rcrb
jb
je
mov
popa
lret
out
mov
fmuls
pusha
lods
mov
add
jnp
add
les
negl
outsb
out
pop
pop
popf
sub
inc
jmp
add
and
xor
cmc
sub
push
js
aas
pop
jp
adc
push
stc
mov
mov
dec
xor
cwtl
lahf
and
seto
pop
mov
pop
xchg
jae
int3
test
out
pop
aas
cmp
cmp
pushl
pop
in
int
xor
mov
sarl
jg
sbb
fs
and
out
or
in
es
push
testl
test
jl
rcl
xchg
lret
mov
sahf
das
sti
and
mov
or
jae
shl
sub
push
jecxz
mov
mov
fbld
pop
and
push
xchg
fsubrl
inc
in
pop
lods
outsb
ljmp
jl
mov
mov
leave
ret
xchg
dec
in
insl
inc
jno
les
fadds
xor
mov
popf
andl
aad
ret
fnstenv
jo
pop
xlat
sbb
push
inc
fnsave
mov
popf
jns
mov
push
mov
daa
xchg
out
mov
scas
jbe
mov
sub
jg
mov
into
lcall
and
adc
ret
sahf
sarb
push
pusha
ret
in
pop
push
movsl
adc
adc
lods
and
xchg
sub
mov
push
insl
pinsrw
int
int3
mov
mov
aaa
hlt
pop
inc
jp
popf
jne
mov
cmp
xchg
iret
div
push
dec
sub
loopne
inc
jnp
dec
test
dec
pcmpeqd
inc
or
inc
xlat
in
jge
lcall
or
fldl
cld
nop
jp
subl
mov
test
enter
adc
nop
add
push
add
lods
add
icebp
out
xor
lods
popa
mov
mov
or
or
shlb
cltd
repz
out
or
mov
in
aaa
cmp
dec
inc
push
mov
stos
imul
cld
leave
jne
mov
stc
aas
ds
adc
adc
shl
lea
mov
mov
jns
jb
xchg
mov
xchg
jns
fdivrl
fwait
sub
dec
mov
push
shll
stos
jl
dec
lcall
pop
xchg
ljmp
and
dec
jo
mov
inc
daa
inc
ljmp
mov
dec
mov
cmp
mov
fildll
inc
iret
arpl
and
and
int3
xchg
popa
in
add
insb
rclb
mov
push
pop
loope
subb
and
push
inc
lret
enter
jmp
dec
xor
fs
cwtl
loope
cmpsb
mov
jp
les
clc
daa
mov
sub
inc
mov
cld
icebp
inc
rclb
int
imul
pop
cmp
xor
rorl
jg
sbb
dec
stos
int3
movsb
add
frstor
pop
bound
aad
mov
xor
popf
fisubs
scas
mov
inc
stos
in
xchg
sbb
xlat
pop
add
test
out
mov
aaa
mov
adc
out
dec
mov
pushf
push
lods
pop
stc
pop
mov
xor
jle
jb
cmp
test
xor
idivl
sarb
out
sbb
stc
xchg
out
jecxz
std
aam
jmp
popf
dec
sahf
push
rol
pop
cmpsl
out
and
andl
push
pop
popf
add
push
aad
jns
pop
mov
cmpsl
jg
adc
daa
loope
xor
push
enter
pop
sbb
out
int3
mov
or
mov
arpl
dec
xlat
outsb
push
cmpsl
bswap
mov
scas
mov
out
jl
push
mov
imul
add
mov
inc
out
ret
int3
stc
in
daa
xchg
xchg
mov
stc
aam
jecxz
imull
pop
and
xchg
gs
mov
ljmp
push
adc
add
aam
fiadds
jne
adc
mov
imul
xchg
into
xor
les
out
out
and
cmc
adc
hlt
aam
xor
test
test
pop
adc
push
adc
cmp
cld
lret
out
xchg
scas
imul
icebp
icebp
xchg
call
sub
jle
loopne
ja
lret
decl
fmulp
jmp
test
jno
inc
scas
aas
mov
out
iret
dec
cmp
inc
sub
rorl
mov
cmc
lcall
push
and
fs
cmc
jmp
add
mov
ret
imul
push
xlat
icebp
dec
xlat
je
jmp
xor
dec
lret
inc
divl
jbe
push
movsl
out
pop
call
stc
xchg
adcb
push
mov
fisubrl
cmpsb
and
mov
inc
icebp
int3
sbb
out
stos
pushf
es
jae
cmpsl
movsl
sahf
into
daa
jecxz
iret
fidivrs
and
and
pusha
mov
in
out
insl
daa
push
arpl
xchg
mov
lods
cmpsb
aaa
fdivrs
ficompl
subl
test
cs
cmc
lea
xchg
sahf
mov
push
lret
sub
pop
dec
jmp
cmp
and
repnz
fcoml
pop
es
jb
pusha
jle
bound
push
pop
mov
outsb
ret
adc
out
int3
jl
pop
adcb
sub
jmp
cmp
and
bound
pusha
popf
les
in
sbb
or
ret
out
movsb
ret
or
int
sbb
flds
test
and
add
gs
outsl
jo
or
sbb
fdivrs
pop
ret
push
orb
andl
and
int
enter
push
aam
dec
pop
punpcklbw
add
sub
das
fs
adc
dec
cmp
dec
add
push
cmp
orl
shll
inc
adc
cmp
or
sahf
mov
cmc
add
movsb
aad
mov
xchg
mov
movsl
and
xor
rcrb
test
call
pop
mov
movsl
cwtl
sbb
lods
dec
jle
add
or
mov
and
int
test
pop
clc
push
push
dec
bound
into
push
jae
fbld
sub
sub
andl
push
xchg
jno
fimull
xchg
leave
push
pusha
mov
xor
mov
cltd
pop
fsubs
sub
xchg
dec
shlb
in
cld
es
mov
push
or
jno
orb
inc
out
adc
lcall
cmpsl
adc
into
inc
xor
fwait
shll
pop
mov
fcmovnu
das
jb
adc
lods
hlt
sbb
sub
jne
mov
fwait
mov
pusha
and
imul
push
inc
mov
out
out
dec
pop
jo
loopne
int
or
push
sar
pop
clc
test
rcl
inc
mov
in
jg
xchg
adc
xchg
repnz
mov
cmpsl
pop
cli
pop
lods
push
and
pop
lea
jl
mov
adc
xor
jl
add
imul
add
hlt
inc
add
jle
test
sub
or
pusha
push
xchg
or
jae
in
mov
es
mov
xor
dec
or
or
and
ret
lea
inc
out
sub
test
add
in
mov
repnz
pop
inc
cwtl
pusha
xchg
xchg
shrb
push
stos
and
out
jmp
sbb
les
subl
mov
andl
jecxz
pusha
add
nop
mov
das
dec
mov
inc
add
js
mov
out
gs
test
icebp
fiadds
xorl
enter
mov
xchg
xor
mov
xchg
and
lret
adc
cmpsb
add
dec
shlb
test
movsl
das
inc
nop
aas
out
inc
lock
shrb
ss
dec
dec
sub
adc
jnp
pop
jae
sub
in
fsubr
sub
mov
daa
es
in
lods
pop
imul
aam
add
push
and
call
pop
flds
loop
lds
fsubl
cmpsl
in
loope
bound
pop
mov
mov
push
cmpsb
iret
loopne
out
data16
xchg
aad
sbb
test
xchg
jmp
inc
cltd
fs
xchg
out
fistps
jbe
xchg
sub
icebp
pop
lds
jne
lahf
sbb
in
popa
sub
jmp
cmp
ret
jg
insl
xor
scas
mov
clc
fsubrs
jnp
push
pop
push
cmp
mov
dec
in
sahf
xchg
in
inc
lds
out
movsl
popf
scas
fiadds
lods
fs
pop
pop
jae
xchg
leave
jo
push
or
ljmp
jns
or
scas
xchg
mov
ret
adc
adc
ss
sbb
lret
push
sbb
dec
ss
nop
adc
cltd
cmp
mov
mov
lods
gs
cli
cmp
aad
sarb
notb
out
repnz
mov
fdivl
insl
xchg
cmp
mov
xchg
lahf
das
or
fildl
stc
insl
xor
adc
sti
jp
clc
icebp
shrb
pop
sub
data16
mov
stos
inc
out
pop
in
fnsave
inc
test
rolb
int3
mov
adc
dec
cli
adc
shlb
dec
sbb
push
scas
out
les
popf
push
adc
ret
xlat
fnsave
inc
pop
xchg
push
rorb
insb
popf
inc
cmpsb
mulb
or
cltd
mulb
cmp
je
or
lods
leave
mov
sbb
enter
sub
cmpl
xchg
scas
and
mov
dec
pusha
gs
jg
sbb
insl
out
lahf
les
sub
movsl
push
cmpsb
std
ljmp
cmp
mov
fsubrs
sbb
jb
sbb
sarb
bound
ja
mov
mov
cmpsb
mov
jns
push
xor
sub
jb
das
push
mov
js
repnz
mov
mov
xchg
loope
sbb
mov
lods
daa
add
sbb
push
mov
inc
xor
insl
sub
fcoms
push
push
aas
or
fildl
push
ficomps
add
pop
data16
push
xchg
popf
ja
aaa
push
ret
inc
add
in
fchs
mov
sbb
leave
cmp
sub
sbb
aad
cmpsl
cmovl
lods
cmp
mov
inc
cmp
test
push
nop
ss
fdivl
pop
sbb
inc
sbb
push
inc
dec
push
data16
sbb
cld
popa
pop
push
out
sarl
mov
adc
inc
addl
aaa
push
pushf
addb
out
test
xadd
jno
pusha
inc
rcr
add
cmp
movsb
add
adc
pop
ret
jnp
add
fcmovbe
jg
xchg
fwait
loop
rcrb
fnstcw
and
mov
scas
imul
push
js
mov
mov
mov
add
addr16
sbb
stc
xchg
insl
xlat
stc
adc
leave
cltd
cs
inc
or
mov
pop
int3
push
pmaxsw
ret
jnp
outsb
adc
push
mov
mov
adc
cmpb
mov
sub
popf
in
push
fs
sub
cmp
dec
lock
mov
xor
dec
dec
inc
lock
mov
add
cmp
cwtl
add
rcrb
leave
lock
clc
rorb
fnsave
cmp
adc
xchg
aam
cmc
pop
mov
dec
loope
lods
int
adc
pop
test
outsb
inc
adc
in
insl
jb
je
cld
push
pop
dec
rcll
in
adc
dec
les
xchg
pop
or
cmpsl
jo
mov
mov
rcr
aas
adc
mov
fdivrp
sbbb
es
aaa
mov
movsl
push
cli
xor
mov
lcall
mov
xchg
cwtl
jo
stc
jecxz
sub
pop
ret
mov
int3
dec
or
arpl
filds
into
jae
movsb
mov
outsl
jno
push
adc
call
jp
repz
jno
push
add
xor
xchg
scas
jo
xor
sbb
cld
push
xchg
adc
jp
xchg
ret
mov
and
dec
pop
dec
fistps
dec
push
xorl
int
in
movsb
and
inc
lret
divl
sarl
xor
push
int
nop
data16
insb
shll
ljmp
popf
imul
cmp
cmpsb
test
lods
mov
fmull
sarb
adc
mov
cld
mov
xlat
fsubrs
jbe
push
mov
aam
in
not
xor
cmp
clc
sub
test
data16
popa
xor
in
pop
jb
pop
iret
mov
ret
xchg
or
sbb
inc
sub
movsb
inc
je
pop
mov
inc
mov
cltd
push
cmp
in
out
fwait
inc
cmp
and
ds
gs
jns
inc
dec
mov
adc
mov
inc
daa
pop
jecxz
push
pusha
xchg
stos
aas
in
xor
gs
add
repnz
sbb
xor
notb
push
out
xor
fstl
jecxz
mov
or
adc
xchg
dec
cmpsb
mov
and
push
cmp
push
add
jge
outsl
orl
inc
xlat
ss
iret
insb
in
mov
pop
xchg
jl
or
dec
and
fistl
js
ficoms
pop
pop
jno
imul
in
jb
aaa
and
inc
rorl
cld
int3
mov
sbb
fs
ret
mov
cmp
push
mov
js,pt
out
lcall
dec
sbb
xor
and
movsl
std
xor
inc
push
fld
mov
mov
or
dec
andl
jnp
imul
pop
add
testl
int3
jbe
loop
aas
xorl
lods
sub
adc
shlb
mov
inc
arpl
xor
outsl
aas
and
push
mov
pop
pop
adc
pop
or
adc
outsl
inc
pop
inc
test
imul
and
cmc
out
std
fisubs
cmp
jecxz
cmp
mov
pop
enter
sub
jge
cltd
mov
imul
or
ds
pop
adc
sub
sbb
xchg
mov
dec
xchg
or
push
shl
xchg
test
cs
hlt
ss
mul
repz
movsb
imul
adc
add
mov
pop
push
cmpsb
cmp
aam
add
cmp
lcall
xchg
xchg
mov
mov
icebp
inc
push
dec
in
cmp
cwtl
cmp
jecxz
lahf
add
enter
cmp
in
lods
sub
shll
orb
mov
inc
loop
lret
rcr
cwtl
sub
lds
pop
adc
jno
jmp
mov
xor
in
xor
std
mov
outsb
pushf
adc
add
xchg
test
out
rorb
sbbl
push
sbb
mov
in
popa
or
rcl
xchg
jp
call
loope
xor
in
push
lret
insl
xchg
sub
es
adc
out
inc
or
xor
bound
leave
fcompl
jno
mov
or
sarb
mov
xor
xchg
pop
add
add
jne
rorb
jae
stos
js
scas
mov
mov
aad
or
test
mov
jecxz
mov
adc
stos
adc
ljmp
lcall
or
sti
jp
fdivr
adc
xchg
aas
push
mov
stos
pop
inc
les
outsl
les
and
lahf
dec
push
arpl
loop
lock
add
push
lret
cmp
fists
xchg
lods
sbb
sbb
loope
sub
lods
or
cmp
inc
int3
ljmp
test
adc
xorl
cmp
xor
add
dec
fwait
inc
es
cmp
pop
add
mov
push
xchg
ret
adc
xor
inc
mov
cmp
popa
push
dec
mov
mov
push
inc
push
and
daa
xor
mov
mov
xor
mov
mov
inc
das
add
inc
pop
xchg
sub
jnp
xchg
push
jle
iret
mov
dec
dec
outsl
insb
icebp
xor
aaa
cmc
mov
hlt
adcb
add
or
mov
xchg
mov
cmpsb
ljmp
dec
sbb
xchg
dec
aad
repz
inc
into
mov
mov
mov
in
mov
setns
ror
cbtw
daa
xchg
and
sub
sub
sub
mov
inc
stc
fsub
xor
pop
iret
push
jmp
out
sahf
jmp
jno
or
adc
imul
inc
or
ret
pop
pusha
push
mov
jp
outsl
pop
ljmp
sub
cmp
sahf
cli
imull
pop
mov
div
jecxz
movsl
pop
fldln2
sbb
mov
pop
lahf
dec
inc
inc
xchg
cwtl
push
fnstcw
pop
xchg
mov
xor
lcall
dec
fstl
mov
and
mov
add
pop
pop
lahf
mov
xor
lret
stos
stos
dec
mov
sahf
repz
mov
push
adc
enter
fistpll
ljmp
loopne
cmp
jmp
out
data16
pop
xlat
xor
scas
adc
cmp
jg
aas
repz
add
cld
das
push
inc
mov
aas
stc
jg
jecxz
mov
gs
cmpsl
xor
inc
adc
dec
stc
inc
pop
add
pop
inc
imul
pusha
mov
jno
call
mov
cmpsl
add
loope
sub
in
cmp
in
and
ror
dec
enter
pop
jnp
int3
jg
mov
stos
test
push
xor
push
out
out
push
jl
lock
cmp
flds
lahf
aad
sub
jle
push
addr16
outsb
push
jl
sarb
sub
mov
shl
aam
bswap
insb
and
stc
dec
mov
subps
mov
cli
cmp
dec
push
push
psubd
pop
and
fs
ja
lahf
or
clc
xchg
mov
dec
cmp
or
jno
or
ficompl
pop
lahf
sbbl
jnp
rcl
push
mov
adc
sbb
inc
mov
es
jnp
lea
sar
xor
aas
ja
and
js
xchg
mov
in
mov
lods
insb
in
push
dec
xor
mov
fsubrs
loopne
call
sbb
mov
mov
inc
outsb
and
cs
cmp
lds
or
imul
ffree
jmp
inc
cmpsl
or
ljmp
sarb
pop
inc
shlb
incl
clc
adc
sub
call
push
nop
shll
push
notb
sub
sub
ljmp
popf
inc
aas
xor
out
dec
lods
call
cmpsl
dec
cmpsb
add
cld
subb
pop
scas
or
aas
mov
cltd
mov
movsb
cs
in
sbb
xorl
mov
fnop
or
popf
pop
cmp
mov
cmpsb
pop
out
cld
push
add
ja
test
cmp
fisubs
mov
cmp
mov
jmp
xor
shrl
mov
inc
outsl
lret
push
xor
mov
xlat
cmpsl
jb
mov
cmp
js
mov
adc
jecxz
sti
sub
xchg
cmp
cmp
inc
pop
loop
sbb
jmp
lret
inc
mov
mul
push
fdivr
das
in
and
sub
push
repz
add
hlt
outsb
aas
popa
jne
fldl
xchg
mov
and
or
daa
pop
jno
push
sbb
mov
mov
xchg
ret
adc
cmp
xor
roll
mov
mov
loopne
pop
pushf
mov
cmp
out
movsl
lods
jmp
mov
mov
sub
xor
ja
push
repnz
xor
jne
sbbb
sbb
ror
loop
outsl
cwtl
inc
jb
mov
into
push
leave
adc
js
out
cmpsb
data16
jecxz
mov
popf
movsl
mov
sub
xlat
cmp
pop
shrl
loop
add
pusha
xor
add
inc
cli
mov
mov
dec
clc
imul
mov
adc
push
call
mov
add
add
pop
push
push
lcall
sbb
cwtl
loopne
mov
out
ss
mov
sbb
jmp
sub
jecxz
das
adc
xchg
insl
loop
popf
inc
dec
lods
or
in
jmp
mov
nop
lods
mov
and
lret
es
or
aas
jecxz
cwtl
jg
xor
test
js
shlb
test
aam
test
and
repz
inc
pusha
push
adc
les
sahf
mov
push
jno
xor
cmp
fidivrs
call
cltd
mov
jg
nop
xchg
xor
repz
sbb
sbb
inc
and
imul
roll
in
data16
xchg
cmp
int
fnstsw
mov
in
iret
popa
push
int
adc
mov
xor
mov
mov
loopw
or
xchg
aam
cli
xchg
sarl
mov
cmpsb
mov
sub
out
push
in
lahf
or
mov
iret
dec
enter
sub
outsl
inc
sti
fsubr
add
int
mov
sbb
adc
iret
mov
das
loope
lret
xchg
xor
in
rcrb
mov
sbb
dec
scas
jns
dec
jg
int3
push
or
aad
stc
lret
xchg
xlat
sub
ja
cli
adc
inc
lea
scas
es
lcall
ret
or
in
movsb
adc
xlat
lretw
sub
stos
hlt
jno
and
xor
xchg
bound
or
cld
or
mov
xor
or
pop
loop
sbb
pop
jg
pusha
cmp
ret
inc
stos
cmp
movsl
add
mov
loop
test
fsubrl
jmp
jmp
adc
ja
sub
xor
fistps
pop
cmpl
adc
dec
mov
push
data16
sbb
xchg
inc
mov
sahf
inc
popf
adc
mov
mov
stos
or
mov
fucomi
hlt
test
cwtl
pop
and
or
gs
lret
push
imul
cli
in
std
mov
rorb
xor
pop
dec
xchg
inc
pop
imul
aas
push
outsl
push
lcall
add
adc
into
and
cmp
test
push
sbb
cmp
mov
data16
pushf
mov
add
or
jecxz
int
in
mov
mov
inc
not
and
leave
das
xor
sbb
je
xchg
cwtl
push
lods
imul
lahf
out
or
jbe
andb
cmpsb
rcrb
cmpsl
call
insb
int3
cli
mov
pop
push
add
pop
mov
inc
mov
jb
mov
in
and
dec
push
mov
jns
cmp
push
test
push
jp
daa
xchg
inc
into
stos
or
pop
jecxz
cmp
int
mov
cmp
fdivrs
ffree
pop
pop
enter
movsl
inc
cltd
mov
jne
push
in
sub
fwait
shll
cli
pop
out
mov
leave
xor
mov
or
stos
imul
loopne
push
or
mov
shll
adc
dec
mov
cmp
cmp
dec
ret
cmpsb
and
inc
add
imulb
mov
mov
mov
jecxz
outsb
sub
cmp
addl
mov
movsl
sub
push
or
incb
out
adc
out
xor
scas
jb
mov
dec
cwtl
loop
push
fsts
hlt
jae
pop
pop
arpl
divl
sub
mov
cmp
add
mov
cmp
in
aas
mov
test
lods
inc
mov
lods
testb
mov
test
in
popl
jecxz
int
imul
push
in
into
jg
pop
dec
xchg
inc
in
daa
ret
mov
push
lahf
ret
lds
gs
sbb
xor
add
das
push
mov
call
fidivs
dec
js
incb
in
nop
insb
dec
sbb
out
xchg
call
repnz
add
dec
mov
aad
push
int
sarl
cmove
enter
mov
sbb
pushf
in
rep
stos
mov
or
jmp
inc
in
outsl
lock
mov
ret
out
cmp
fwait
cmp
sub
mov
push
pop
clc
jg
jo
fs
and
in
daa
or
adc
fiaddl
jne
popa
stos
int
mov
mov
add
mov
dec
mov
inc
mov
popa
lret
add
int3
mov
jle
cmp
cmp
pop
or
in
cmp
test
je
addr16
inc
movsl
push
iret
add
clc
in
cmp
nop
mov
hlt
xchg
call
lcall
sbb
or
sarl
mov
inc
imul
mov
pop
ja
jns
mov
mov
sub
and
ret
cmp
push
les
jl
jbe
pop
shrl
repnz
aad
and
lret
mov
popa
ds
fistps
fwait
and
sub
add
loope
cmp
jns
cmp
sti
inc
mov
add
push
add
aaa
cmp
add
push
add
push
movsb
ret
sti
sub
mov
cmp
pop
int
fists
pusha
lcall
mov
js
pusha
add
xor
push
mov
imul
jl
ds
jle
push
or
mov
fsubrl
scas
pop
and
call
mov
mov
jecxz
sbb
lcall
iret
in
dec
cmpl
movsl
cld
aaa
fwait
testl
push
dec
xor
movsb
sbb
sub
movsb
sub
lds
xchg
pop
outsl
or
push
in
fadd
popf
dec
pop
pop
arpl
sbb
add
hlt
dec
out
mov
enter
mulb
inc
pop
int3
add
and
stc
or
mov
inc
lret
adc
cmp
jne
bound
sar
push
in
mov
cwtl
and
loope
popa
ds
shlb
push
fnstenv
jne
shll
xor
jae
mov
xchg
mov
rcll
xchg
mov
fcmovu
pusha
test
mov
test
fbstp
ss
cwtl
mov
nop
cmp
movsb
test
xchg
inc
push
rclb
stos
js
je
mov
jbe
aam
rcrl
nop
jl
testl
mov
xor
stos
and
stos
std
pop
fst
cmp
and
mov
adc
dec
stos
lahf
push
lcall
xchg
das
lea
sbb
cltd
and
xor
sub
pop
repz
sbb
int3
mov
shll
jns
sub
pop
repnz
ja
mov
clc
xchg
imul
sbb
dec
push
imul
mov
shl
jge
lret
repnz
clc
imul
adc
fwait
xor
out
fsts
and
icebp
jb
loopne
cs
sti
fwait
sahf
push
cld
scas
mov
ret
pop
dec
push
pop
jb
shrl
mov
pop
sub
imul
call
hlt
and
ficompl
dec
push
shrb
sar
shlb
pushf
mov
push
daa
sub
add
pop
cmp
sti
xor
jge
mov
and
sbbb
mov
adc
bnd
addr16
or
adc
je
sti
imul
cld
in
or
sub
sbb
and
push
ret
adc
out
scas
dec
xorb
out
sahf
add
push
adc
jno
adc
cmp
dec
inc
mov
mov
mov
jle
fdiv
cltd
mull
aas
dec
jne
xor
mov
aad
mov
fldt
std
push
pop
cwtl
jbe
rcr
ja
xor
mov
sbb
sbb
inc
dec
pop
xor
data16
sub
jnp
stos
mov
fucom
stos
leave
mov
test
or
mov
aad
push
cmp
mov
pop
add
mov
jb
int
rcl
outsl
insb
cmp
nop
mov
inc
insl
push
or
push
xor
xchg
mov
pop
xchg
sbb
loop
adc
jg
fisubl
inc
xlat
fwait
aaa
dec
xchg
and
movsl
mov
test
xchg
aad
mov
mov
scas
outsb
push
inc
mov
popf
cltd
cmpsb
pop
pop
mov
jp
cmpsb
hlt
xlat
mov
mov
aaa
dec
xchg
xor
sbb
or
cmpsb
adc
mov
cmp
rcl
in
xor
inc
push
sub
sub
insb
dec
mov
xchg
inc
ret
js
das
iret
mov
pop
hlt
ljmp
loopne
sub
sbb
ljmp
cmp
dec
xor
in
pop
xchg
sti
cmp
mov
movsb
sbb
jo
xchg
jp
in
xor
jns
mov
jle
lret
jns
nop
rorl
add
dec
jb
and
mov
scas
cmpsb
cltd
cmp
adc
addr16
aam
sbb
and
pop
push
into
inc
div
xchg
sahf
add
sbb
fwait
xchg
cmc
mov
jmp
mov
push
jg
mov
xor
xchg
pop
pop
dec
cwtl
sti
aam
and
mov
cmp
insl
cmp
cmp
cmp
rclb
xor
hlt
in
repz
mov
fdiv
and
scas
push
mov
xlat
mov
push
fiadds
scas
xor
sub
sbb
or
roll
xor
or
fdivl
aam
movsl
ret
jno
dec
xor
sbb
add
enter
movsl
shrl
xor
sub
inc
xlat
push
jbe
mov
std
adcl
lock
jae
mov
adcl
vcvttpd2dqx
jno
test
leave
push
push
cmp
jle
dec
rclb
rclb
add
or
lret
cmc
adc
lcall
and
addr16
mov
mov
xchg
scas
inc
iret
or
sar
push
lock
rolb
mov
xlat
in
xchg
sbb
sahf
sbb
mov
jo
subl
adc
stos
xchg
mov
les
cmp
cmp
add
dec
add
pop
pop
add
jmp
push
xor
imul
out
xchg
daa
xchg
sub
pop
mov
pop
jmp
lock
clc
out
fistps
jle
pop
inc
inc
jge
adc
negl
add
xchg
outsl
mov
and
jecxz
xchg
mov
inc
push
mov
popf
ret
or
dec
and
outsb
push
mov
mov
hlt
outsb
std
or
xor
repz
sbb
nop
mov
xor
xor
mov
xor
in
mov
pop
mov
jb
stos
iret
andnps
push
add
add
or
in
ficomps
inc
ret
mov
sti
aaa
cmp
dec
mov
imul
sub
fdivl
pop
xor
cmp
push
cmp
mov
jb
shll
push
mov
fdivrs
bound
adc
xor
add
lods
jae
outsb
test
or
jmp
dec
pop
cli
jbe
fisubrl
xchg
movb
popa
popf
cmp
cmp
insb
btr
mov
fists
and
stc
jecxz
dec
xlat
test
push
mov
pop
stos
mov
jnp
hlt
imul
in
push
jb
add
mov
je
adc
add
test
cmp
xlat
popa
dec
and
mov
adc
push
fistpll
or
mov
out
jg
mov
mov
mov
pop
shlb
push
sub
or
ficomps
scas
fistpl
aad
xchg
inc
pusha
mov
repz
jl
jb
movsb
inc
push
stc
pop
insb
insl
push
gs
xchg
pop
mov
jne
lret
out
or
fsubrl
movsl
add
rorb
sbb
mov
lock
inc
cld
pop
mov
mov
rolb
push
scas
push
and
jecxz
dec
cs
test
cwtl
mov
mov
test
les
pusha
cmp
stos
rcrl
add
pop
mov
inc
in
fildll
pusha
inc
movsb
jo
xchg
jl
push
dec
in
mov
push
add
sub
in
cmp
jno
lea
int
imul
inc
loope
adc
dec
dec
lret
test
rorl
sahf
testb
lret
push
cmp
sub
shll
imul
inc
neg
jp
imul
pop
nop
ffree
loope
jnp
mov
jecxz
mov
sbb
sbb
sub
rol
test
dec
cmp
lcall
inc
cmpsl
pusha
cmpb
push
pop
push
mov
mov
xchg
inc
and
push
push
loop
cmp
sub
cs
mov
cltd
mov
fisttpl
push
sbb
cwtl
in
mov
in
xlat
mov
daa
fmuls
and
pushf
sbbb
push
insl
shlb
insb
mov
je
push
repz
mov
repz
pop
popa
inc
push
in
pushf
jo
push
add
in
mov
and
or
inc
outsl
scas
pop
bound
pop
or
in
mov
lahf
in
xor
out
movsb
cmp
mov
inc
jecxz
out
push
add
mov
scas
adc
sub
movsb
and
cmc
test
mov
insl
dec
dec
pop
rcrb
xchg
cmp
data16
or
or
ds
ret
lods
push
pop
ja
xchg
mov
xchg
test
adcl
out
mov
arpl
mov
fildll
cld
aas
push
repnz
xlat
jmp
sub
stos
movsl
add
jl
movsl
jbe
mov
cmc
lea
mov
push
cmc
mov
movsl
mov
sbb
and
iret
adc
xchg
sbb
pusha
push
adc
push
test
push
lret
lret
movsl
call
lea
mov
test
fsubrl
jne
and
or
pop
pusha
inc
cmpl
inc
mov
imulb
mov
shlb
pushf
or
xchg
mov
xlat
rclb
es
data16
sub
pop
mov
aad
mov
aad
or
pop
out
mov
mov
pop
push
or
jge
nop
gs
mov
sub
gs
jecxz
xchg
mov
cmp
jne
mov
jae
out
add
lahf
je
pop
pop
add
or
imul
adc
test
mov
pusha
cltd
arpl
mov
mov
xchg
inc
testl
mov
sbb
inc
scas
mov
punpckhwd
jbe
mov
pop
jg
call
aam
into
mov
adc
mov
test
add
inc
imul
negl
test
test
inc
pop
lcall
xchg
cmp
sbbb
mov
push
dec
dec
xchg
xor
dec
xchg
or
push
mov
cmp
pop
or
push
mov
push
loop
out
and
icebp
adc
and
sbb
into
stos
data16
add
dec
add
jp
mov
scas
notl
dec
stos
pop
sub
out
fadds
cmp
std
rorl
insl
cmc
cmp
xchg
xor
pushf
adc
pop
lret
pop
push
xchg
fadds
int3
sub
inc
addl
int
ljmp
jmp
enter
inc
cmpsb
call
les
mov
imul
push
sbb
mov
cmp
cmpl
push
rcrl
inc
and
fwait
pop
data16
test
cmp
mov
in
iret
shll
loop
mov
sbb
cmp
or
leave
pop
lahf
icebp
xorl
movsb
js
and
push
aas
add
mov
rolb
test
nop
cmp
outsl
scas
outsl
mov
xor
adc
add
sub
dec
aad
mov
stos
mov
xlat
in
int
jg
or
xlat
sbb
mov
lahf
inc
aam
fistps
imul
push
jo
jo
or
push
mov
ret
cmp
pop
stc
mov
sti
pop
xchg
pop
rorl
xchg
mov
imul
shrl
jp
dec
pop
stos
fucomip
lods
push
or
cmc
mov
jge
add
xchg
jge
xchg
js
push
fmull
xor
and
or
cmp
pop
in
sub
push
mov
inc
mov
cmpsl
xchg
or
pop
outsb
adc
cmpsb
lret
push
dec
js
stc
ja
in
sbb
lcall
ds
bound
fsts
and
or
cs
xor
pop
adc
mov
inc
cmpsl
out
sub
and
cmp
sbb
in
es
xchg
cmp
mov
xor
cs
arpl
cmpsl
sub
mov
mov
or
in
cmpsb
clc
adcl
mov
call
mov
aad
push
js
call
movsb
das
mov
aam
pop
lea
ficoml
sahf
int
jg
jae
andl
xchg
mov
lcall
inc
jecxz
mov
adc
mov
loop
sarb
sub
lods
stc
mov
pop
or
mov
in
xor
movsl
in
aad
and
push
out
mov
loopne
popa
mov
jecxz
mov
push
ds
pop
cmp
fs
inc
insb
mov
sub
out
pmaddwd
daa
and
pop
pop
add
push
es
push
push
iret
out
dec
jb
mov
imul
shl
aad
in
gs
add
sub
lds
aam
dec
xchg
jo
adc
cmp
cld
jge
in
repz
xchg
pop
shll
adcl
cmp
ds
or
and
push
jmp
push
jo
ljmp
sbb
jb
sahf
idiv
popa
adc
sub
xchg
add
add
lret
out
mov
js
lret
push
sti
or
std
cmp
or
push
sbb
inc
mov
cmp
push
je
xor
clc
fisubl
cld
sarl
add
dec
test
or
or
jae
fnstenv
pushl
insb
xchg
lret
scas
jmp
outsb
dec
jmp
out
adc
xchg
in
jo
das
outsb
stc
add
lods
pop
orl
xorl
lcall
mov
jg,pn
and
xor
sbb
out
popa
hlt
or
xor
das
pop
sahf
pop
adc
pop
je
into
jb
sub
shll
mov
pop
dec
dec
inc
mov
pop
jmp
cmpb
mov
push
xchg
mov
stos
xchg
or
cli
outsl
jle
cmp
fldenv
aas
mov
jle
xlat
out
ret
xchg
ja
fldl
outsb
testb
enter
inc
pop
push
xchg
add
lret
shlb
dec
cs
xchg
shlb
inc
imul
add
enter
xor
test
fdivl
xchg
leave
jno
jmp
pop
xchg
test
sbb
and
pop
or
adc
pop
enter
mov
loopne
cwtl
xor
or
sbb
lea
jecxz
daa
stc
dec
sbb
dec
lret
int
inc
stc
gs
lds
test
and
pop
or
pop
aad
cmp
popf
in
outsl
inc
shll
or
aad
adc
or
ds
push
pop
roll
mov
test
or
jo
ds
call
out
xchg
shll
inc
loop
jo
arpl
testl
jno
mov
filds
fisubrl
mov
dec
data16
adc
pusha
cmc
mov
and
hlt
mov
lods
dec
idivb
dec
mov
and
fildll
xor
mov
test
or
mov
stc
loop
push
cmpb
and
add
jnp
mov
add
fisttpl
adc
jle
inc
sbb
add
dec
lahf
pop
adc
sbb
add
xchg
cmp
or
jmp
push
test
pop
out
adc
dec
shll
popf
cli
int
test
imul
add
pop
outsl
mov
icebp
lea
and
daa
arpl
mov
sbb
pop
mov
icebp
test
push
cli
jp
adc
jl
stos
aas
in
ss
mov
pop
fs
adc
inc
sbbl
repz
fs
or
jno
pusha
pop
lahf
addl
jecxz
jg
xor
dec
add
mov
cltd
push
stos
popf
aas
cld
out
in
xchg
addb
push
mov
hlt
add
outsl
xchg
aam
sub
lods
push
jae
push
je
xor
popf
stc
sub
insl
movsl
push
repz
mov
aas
xchg
jo
scas
push
jg
into
mov
mov
into
push
cmp
sub
sbb
add
cmpsb
dec
adc
jns
xchg
roll
mov
pop
addl
int
sbb
in
mov
push
sbb
int3
adc
adc
xchg
mov
insl
out
inc
popa
sub
imul
pop
fdiv
shll
mov
xor
repnz
stc
jl
pop
xor
lret
push
clc
sarb
sar
inc
xchg
int3
popf
imul
adc
inc
xor
adc
inc
cmp
pop
repz
mov
pop
orb
cmpsb
inc
fyl2x
mov
pop
mov
or
xor
stc
test
adc
pop
push
lcall
pop
pop
test
sub
mov
bound
lods
xchg
pop
in
test
inc
loope
call
ret
sbb
adc
or
fwait
push
out
pop
and
stos
div
nop
sbbl
pop
jbe
cmp
rcrb
push
pop
sarb
cmp
iret
mov
mov
stos
xchg
inc
jo
push
lcall
dec
adc
mov
push
mul
scas
push
xor
out
push
mov
cli
lods
adc
sub
test
or
test
jg
dec
sub
gs
and
test
lahf
ret
jnp
jno
cmp
ds
lods
addr16
sub
inc
repz
fistpl
or
mov
xchg
fs
bound
xchg
jecxz
mov
ret
jge
jo
stos
add
adc
imul
leave
mov
xchg
aad
pop
jns
and
in
xchg
pop
rolb
mov
cli
and
lcall
idivb
xchg
mov
fs
lods
pop
cmp
xor
shl
inc
push
pop
inc
cmp
xlat
sbb
inc
push
out
jno
mov
rcrb
loope
cmc
gs
negl
mov
xabort
push
pushf
sub
ret
push
push
and
repnz
lahf
xchg
add
insb
ltr
aaa
mov
adc
roll
ja
sbb
cmp
and
movsb
fiaddl
out
test
cwtl
dec
fstpl
scas
cmp
fwait
push
popf
mov
cmpsl
adc
dec
xor
dec
in
pcmpeqb
negb
int
push
jno
cmp
mov
sbb
mov
or
nop
inc
xchg
jg
cmc
js
ljmp
pop
ret
jg
sub
ficoms
dec
sbbl
xchg
pop
aam
add
test
es
jp
ficoms
stos
dec
cmp
adc
and
and
test
fcmovne
test
lock
mov
push
mov
push
sub
xor
pop
mov
dec
mov
insl
ss
or
inc
push
add
jmp
fbstp
inc
adc
adcb
jecxz
mov
push
int3
arpl
mov
out
mov
pop
inc
inc
xchg
repz
push
and
push
aas
adc
mov
popf
lods
mov
lds
into
mov
cmpl
je
roll
lcall
mov
out
ja
cmpsl
rcrl
fdivs
pop
pop
clc
and
lods
mov
in
es
add
in
ret
xchg
mov
push
lcall
inc
cmp
dec
add
negb
scas
mov
mov
inc
dec
xor
dec
int3
sub
outsb
xlat
mov
loop
scas
fcmovnu
es
jne
mov
dec
icebp
mov
xchg
mov
insl
fsubrl
daa
popa
popf
and
or
int3
sbb
fwait
scas
push
mov
push
xor
aad
fs
xor
push
loope
fildl
mov
addr16
cli
gs
out
mov
xor
cmc
sti
sub
pop
push
cld
testl
inc
xchg
mov
mov
and
cwtl
add
pop
jnp
jne
cmp
je
fcmovnbe
push
mov
pop
mov
idiv
dec
adc
mov
test
dec
xlat
xchg
roll
jle
xor
sub
mov
hlt
mov
lods
popf
xchg
adc
cmp
repz
testl
mov
sub
sub
fsubrl
mov
mov
ja
cs
mov
mov
lret
aam
test
hlt
ljmp
jae
add
in
cmp
push
addr16
sbb
iret
ret
sahf
lea
fwait
cmp
stos
pop
rolb
subb
or
fildll
jp
fstl
jns
call
fnstenv
test
add
push
mov
sbb
lods
mov
stos
mov
repnz
outsb
mov
stos
maxps
subb
nop
in
pop
aad
call
mov
push
lret
or
das
pop
mov
mov
gs
int3
mov
popf
jecxz
aas
cmp
or
jns
xchg
or
xor
in
ror
divb
xor
mov
pop
in
cmp
inc
xor
xchg
jo
or
xchg
testb
mov
jg
lea
les
mov
mov
xchg
dec
ja
push
cmp
xchg
lret
push
jmp
pusha
mov
push
mov
mov
adc
adc
int
jbe
or
lcall
mov
int
and
loopne
sbb
mov
mov
jmp
test
test
out
dec
jg
xor
mov
inc
test
cltd
cwtl
aad
imul
cmpsb
dec
aad
lcall
xchg
lahf
push
mov
in
inc
mov
inc
data16
pop
pop
xchg
outsb
ret
lret
out
ret
xor
mov
insb
xchg
out
aam
pusha
cli
push
cvtps2pd
loopne
and
cmpsl
insb
aad
push
add
sub
arpl
outsb
and
mov
push
fldpi
popf
ds
xchg
pop
cmp
or
sub
mov
and
dec
push
sbb
test
cwtl
mov
mov
push
pusha
mov
shll
cwtl
in
test
cmp
mov
lcall
fs
dec
adc
mov
xchg
push
into
fistpll
adc
cwtl
inc
jnp,pt
adc
stc
jne
cmp
roll
aas
test
xchg
push
cmp
sub
dec
jae
cld
dec
out
sbb
insb
movsb
dec
aad
repnz
pusha
adc
stos
xor
mov
mov
mov
inc
mov
push
js
repz
movsb
and
cld
or
cmpsl
in
xor
mov
fldenv
fbld
cmpsl
cmpl
push
xchg
xor
fisubs
pusha
sbb
imul
push
adc
sub
aad
pushf
adc
into
ret
addr16
and
xchg
cmc
xor
xchg
sahf
test
imul
mov
add
out
stos
lcall
sahf
mov
test
aad
cmp
or
cmc
int3
mov
and
or
lods
lcall
pop
cltd
leave
nop
fisttps
mov
adc
cmpsl
mov
enter
andb
movsb
pusha
sbb
jne
ror
mov
push
adc
pop
jno
fiaddl
int3
mov
pop
xchg
xor
and
mov
mov
inc
pop
sbb
notl
cmp
shrl
movsb
xor
pusha
hlt
sub
popf
mov
xor
test
lea
push
lret
jmp
mov
loopne
cli
xorb
and
lea
jp
xor
int3
mov
mov
dec
mov
aas
add
pop
fisubrl
xor
pop
fcomps
mov
push
or
jp
mov
sub
sahf
in
mov
cmc
scas
mov
sbb
lahf
xchg
loop
fldcw
ret
mov
inc
jge
jecxz
ret
mov
add
fwait
mov
xor
adc
movsb
jns
fldcw
outsl
dec
cltd
rclb
sub
or
sub
add
in
sbb
xor
gs
push
lret
push
outsb
pop
ret
mov
aad
inc
insb
in
inc
jle
outsb
mov
cwtl
mov
arpl
frstor
sub
mov
fcmovnb
lock
out
pop
leave
xchg
dec
or
test
push
inc
push
and
lea
stos
lret
jo
xchg
jbe
loop
xchg
sub
inc
je
xchg
xor
lret
je
movd
push
jne
in
lods
jge
and
xor
test
mov
ret
pop
sbb
cmpsl
lahf
std
xor
outsb
rorb
insb
mulb
clc
push
test
mov
push
inc
inc
lock
push
pop
decl
mov
loopne
sub
mov
js
jmp
gs
decb
push
mov
push
mov
xor
and
cmp
mov
mov
cmpsl
push
arpl
mov
push
fsubr
jae
addb
xor
test
ret
jns
lock
dec
int
sarb
gs
in
andb
xor
fcmove
mov
pop
imul
jge
sub
pop
and
jo
cmp
mov
add
mov
movsb
mov
push
mov
clc
adc
call
inc
pop
mov
lea
xchg
push
and
sbb
jle
inc
movsb
inc
mov
out
das
jle
es
imul
adc
ficoml
divb
inc
dec
mov
mov
pop
insl
int3
xchg
int
rclb
xor
cmp
push
aam
xchg
das
push
push
xor
fdivl
ret
and
out
inc
jecxz
cmc
loopne
shrl
jno
imul
mov
jb
mov
fists
clc
ja
xchg
loope
fisubrs
sbb
adc
lcall
sub
jbe
dec
xor
mov
cmp
add
xchg
mov
lods
pop
dec
lds
shlb
cwtl
ss
xchg
ljmp
cld
cmpsb
xor
mov
test
mov
stos
inc
and
xor
pop
xchg
mov
sub
cmp
mov
mov
or
inc
sbb
sbb
shl
cmp
test
aam
std
dec
fldt
push
add
pop
fldt
mov
pmaxsw
lret
lods
mov
push
xorb
insb
cltd
mov
inc
fistl
mov
add
daa
adc
enter
pop
sub
iret
or
ret
cli
dec
cld
jp
leave
dec
adc
adc
cld
mov
inc
ror
and
es
std
fidivrl
popa
aad
fs
dec
lea
inc
jl
scas
sbb
pop
push
sbbl
add
shr
out
mov
mov
and
jae
and
test
insb
lods
movsl
test
mov
into
roll
jmp
push
insb
imul
popf
mov
dec
xchg
cmp
fildll
push
nop
loope
mov
lds
cmp
fwait
out
xchg
fs
std
xor
pop
fnstsw
sub
jnp
loopne
cmpl
cwtl
dec
inc
or
push
push
pop
das
adc
imul
sbb
lret
xchg
fbstp
xlat
mov
and
cmp
repz
sbb
repnz
cmpl
pushf
mov
jns
lds
xor
jb
aad
pop
mov
in
movsb
inc
out
and
xchg
cmpsb
adc
cltd
lds
mov
call
sub
inc
xor
gs
and
mov
jae
aad
imul
xchg
cmpsb
xchg
int3
out
or
xchg
insl
mov
sub
push
xor
cmp
pushf
cmpl
mull
data16
rcrl
jle
cmpsl
cli
sbb
or
inc
idivl
push
sub
cmpsb
cmp
outsl
mov
enter
mov
dec
push
or
push
mov
sub
xorl
imul
into
popf
aas
cltd
in
ljmp
add
sar
cwtl
mov
jmp
mov
nop
sub
sarl
pop
dec
int3
and
add
cli
rorl
sub
inc
scas
inc
add
sub
mov
divl
push
inc
pop
pop
mov
ficomps
add
push
in
sti
shl
sbb
lds
ss
aam
or
pop
cmc
lahf
mov
test
mov
push
mov
outsb
xor
jle
in
out
roll
shll
sub
addb
dec
inc
push
arpl
adc
sbb
mov
inc
dec
sbb
sbb
in
mov
adc
add
sti
add
pop
stos
rclb
fstps
jmp
dec
jnp
iret
push
mov
mov
adc
or
pusha
and
xchg
lods
pop
mov
cmp
subb
push
jnp
mov
test
adc
pusha
mov
mov
mov
inc
test
arpl
sub
cld
cli
aas
test
lods
stos
outsb
lcall
in
cmp
scas
inc
mov
dec
mov
aam
inc
sbb
xchg
mov
push
sti
mov
dec
dec
scas
jecxz
and
lcall
ffreep
lret
push
es
xor
jo
or
push
push
repz
fnstsw
repnz
aaa
cmp
pop
mov
daa
fbstp
in
ljmp
faddl
fcomp
or
das
xlat
fs
aaa
jmp
jb
cmp
cmp
insb
add
repz
jb
push
cmp
cmp
popf
jb
or
pop
dec
jae
cwtl
dec
cmp
fwait
add
push
cmp
push
mov
orl
in
add
jg
fstl
xchg
rcrb
test
pop
lock
push
sub
xchg
or
into
rorb
movlps
pusha
popf
jg
push
out
nop
in
pop
iret
fwait
jae
out
and
xchg
or
mov
xlat
call
xor
fstps
mov
mov
mov
adc
jo
movsb
mov
add
test
xchg
sti
cs
push
push
push
jbe
pop
jl
mov
mov
aaa
inc
dec
mov
mov
xchg
sub
mov
mov
xor
add
mov
inc
into
pop
movsl
mov
out
out
cmovo
dec
xor
or
lods
ss
inc
jge
pop
mov
inc
pop
xchg
mov
cmpl
cmp
out
or
sub
xor
mov
pop
jo
pop
mov
add
or
mov
jg
pop
aam
pushf
mov
adc
ret
inc
cs
mov
pop
enter
inc
js
pop
sub
cmp
pusha
dec
xchg
into
adc
xor
lea
fcomip
sbb
push
cmp
xchg
pop
gs
xchg
js
add
stos
cmp
mov
insl
mov
xchg
rcr
shrb
sahf
adc
jne,pt
inc
push
mov
jl
bound
leave
xor
or
mov
lret
push
adc
sti
loop
inc
xor
loopne
and
mov
dec
call
inc
cwtl
adc
xor
push
add
ds
lahf
fs
jge
pop
test
cmp
xchg
cltd
jo
push
std
mov
cmp
push
fs
pop
cmpxchg
mov
mov
mov
or
rcll
add
fsubrs
or
add
movsb
mov
stos
popl
sbb
jp
add
sbb
sub
mov
or
pop
pushf
push
mov
scas
ror
inc
adc
cmpsb
or
in
mov
je
push
sar
dec
scas
jmp
cmp
arpl
ljmp
es
pop
aad
out
dec
inc
leave
daa
je
in
cmp
mov
insb
and
mov
stc
inc
mov
shll
lret
ret
mov
add
cmpsb
fsts
xor
jmp
push
inc
out
inc
mov
in
fistl
sbb
mov
and
pop
add
aad
cmpsb
loopne
jns
mov
inc
sub
adc
xchg
jecxz
scas
faddp
and
push
nop
cld
repz
and
pop
mov
stc
mov
xor
mov
sbb
cltd
hlt
repz
sbb
enter
inc
sti
faddl
rcrl
mov
inc
push
stos
mov
lods
dec
scas
fadds
mov
adc
mov
stc
loop
push
negl
andl
jae
insb
xchg
and
ret
lahf
push
leave
call
xchg
xor
repz
sbb
add
add
repz
enter
int3
pop
dec
pop
pop
xor
cli
xor
push
adc
call
cmovbe
dec
pop
mov
xchg
sbb
dec
shl
sti
cmp
sub
aas
insb
stos
cs
sbb
jb
push
movsb
add
add
jecxz
orl
je
or
push
add
sbb
xor
dec
scas
sarb
outsl
mov
mov
std
or
test
fcmovnbe
pop
int3
sub
ja
in
repnz
dec
mov
pusha
das
sbbb
mov
or
push
inc
mov
ds
push
js
mov
sub
repz
push
test
cmp
dec
push
stc
incb
jp
pop
mov
es
pop
daa
mov
pop
cmp
stc
inc
jp
pop
subl
decb
fst
nop
pop
cmp
lds
jo
pop
testl
shll
testl
dec
cmpl
jae
cmp
nop
and
in
mov
test
lods
sbb
add
lcall
out
mov
jmp
cltd
cmp
fmuls
xor
xchg
mov
jno
jp
loopne
mov
sub
mov
ja
xchg
sub
cmpsl
push
dec
leave
popa
lret
push
push
jge
dec
xor
xchg
push
mov
inc
mov
lahf
xchg
test
fwait
mov
sub
sbb
shll
dec
xor
bound
pop
mov
inc
add
mov
mov
cmpsb
addr16
movsb
inc
jb
mov
jb,pn
movsb
add
icebp
loopne
test
je
nop
xor
jne
mov
cmp
test
test
jb
shlb
cmc
test
or
mov
imul
push
mov
mov
subl
sub
push
pop
daa
cltd
fdivrs
push
and
cmp
cmc
mov
dec
jecxz
jae
icebp
sti
mov
or
mov
inc
xchg
subl
iret
loopne
mov
xor
push
scas
add
sbb
pop
pop
shrb
jb
xor
pop
mov
sub
cmp
jecxz
out
jns
mov
add
fnstcw
jbe
jmp
pop
and
mov
hlt
lret
cmpb
push
jne
dec
int3
dec
jo
jae
push
jns
jecxz
stos
cmp
int
pop
jle
hlt
aas
fiaddl
sti
pop
xor
cld
imul
cmp
xor
mov
or
push
lods
movsl
xchg
stc
lock
clc
fisubrl
xchg
fld
adc
inc
frstor
fldcw
inc
in
pop
or
push
dec
fnstcw
push
pushf
out
int3
lahf
add
and
mov
fwait
mov
push
dec
test
inc
mov
popa
mov
addr16
mov
fildl
sahf
cmc
xchg
and
cltd
or
sub
push
scas
cmpsl
rcrb
mov
cmp
in
sbb
sub
cmp
stos
sub
pop
dec
into
mov
dec
push
and
lock
aad
adc
stos
movsb
and
out
xor
dec
out
int
les
mov
mov
xchg
outsb
sahf
popa
push
lret
das
adcb
cli
popa
lods
cmp
pop
sbb
jne
sub
sbb
sub
mov
dec
push
call
jg
roll
data16
fwait
inc
inc
adc
mov
cmpsb
out
repz
insl
dec
sub
pushf
jp
push
movsb
dec
lahf
iret
fisubrs
or
inc
push
mov
cltd
xor
cld
jge
lcall
xor
cwtl
popa
dec
mov
jb
sub
adc
or
cmp
or
scas
insb
out
dec
outsb
cmp
shll
xlat
mov
ss
sub
mov
pushf
adc
mov
push
out
cwtl
or
cwtl
imul
pop
cli
fbstp
and
mov
dec
cmpsb
ja
cmp
aas
mov
in
cmp
add
jmp
ret
popa
je
das
fnsetpm(287
hlt
inc
rorb
mov
testb
push
fildl
adc
sbb
icebp
aam
push
enter
jne
lds
mov
xchg
or
mov
rcrb
enter
inc
daa
sub
negl
or
push
repnz
imul
daa
lret
mov
pop
sub
cmc
fwait
adc
xorb
in
idivb
sbb
test
adcb
jb
cld
mov
cmp
lds
js
dec
pop
mov
mov
add
cwtl
jle
mov
leave
dec
out
test
and
adc
lret
adc
xchg
jno
lea
stc
jnp
mov
call
pop
or
or
cmp
gs
lret
inc
mov
xchg
push
sbb
aaa
push
imul
clc
fldt
jmp
fs
in
scas
aaa
inc
mov
cmp
pop
dec
mov
pop
hlt
jbe
xor
and
adc
mov
sarb
sub
lods
and
jl
mov
iret
les
cld
outsb
adc
mov
sub
cld
aam
adc
push
fldcw
add
add
or
into
pop
pop
sar
hlt
xor
in
scas
mov
and
aas
rcll
inc
adc
sbb
subb
pop
inc
int
pushf
adcl
pop
mov
iret
sub
jnp
sub
and
sub
jecxz
stos
push
data16
lock
mov
lock
mov
jge,pn
pmovmskb
mov
sbb
cmp
mov
and
test
rcr
sbbb
push
push
mov
test
test
sub
scas
int3
jle
push
jg
jl
and
add
sbb
mov
insb
inc
lret
inc
inc
cmpsl
iret
js
lret
pushf
aad
pusha
adc
and
adc
dec
stos
jno
into
pushf
mov
aam
xchg
and
mov
xchg
push
push
out
xchg
mov
popf
or
mov
repz
sub
test
outsl
addr16
fimull
negb
loopne
mov
push
inc
cmp
push
in
cld
sub
in
push
cmpsl
sub
sbb
dec
aam
fisubl
insb
cmpb
mov
mov
iret
pop
dec
mov
pop
inc
dec
lock
xchg
icebp
repz
jle
dec
rcrb
ret
out
loope
sbb
adc
sahf
pop
mov
mov
nop
or
shrb
xlat
pop
mov
xor
mov
mov
lock
fimuls
jge
xchg
inc
xor
jg
pop
adc
rorb
inc
dec
popa
dec
bnd
xor
popa
sub
lock
mov
lret
jg
imul
mov
lea
jae
push
pop
and
bound
cwtl
push
mov
dec
in
mov
js
xchg
sub
imul
notb
aas
je
adc
mov
outsb
push
scas
fcmovbe
test
mov
add
and
repnz
fisubrs
shll
lods
insb
adc
jecxz
mov
push
ljmp
jge
cli
push
mov
insb
or
cmp
cs
int3
int3
sub
pop
xchg
jle
mov
mov
gs
xchg
xorb
inc
fidivrl
xchg
lret
inc
mov
inc
mov
mov
fidivrs
mov
iret
sbb
sub
dec
pop
mov
dec
popf
adc
call
mov
dec
inc
movsl
and
roll
mov
sub
jnp
adc
xor
rcrl
xchg
push
lret
int
adc
inc
pop
std
in
or
mov
and
jmp
lret
pop
inc
jns
dec
xor
sbb
xor
dec
test
stc
out
cld
sub
lds
dec
xchg
xchg
in
in
stos
outsl
or
into
pop
sbb
pusha
orb
stos
xchg
inc
js
mov
in
push
test
popf
les
pop
es
cmp
dec
pop
scas
dec
mov
lret
shl
pop
ss
mov
or
outsb
loope
add
jl
inc
cli
dec
das
adc
sbb
addr16
add
add
jno
aaa
add
cmp
das
mov
iret
lret
popf
sahf
mov
addl
inc
lods
imulb
pop
mov
sbb
dec
xor
cmc
out
enter
mov
test
xchg
sbb
dec
in
cmp
push
rcl
cld
sti
or
mov
mov
mov
imul
rcl
sub
in
pushf
xor
dec
and
or
call
pop
cmp
and
fs
pop
mov
cltd
jp
jmp
shrb
inc
push
mov
outsl
jp
add
add
ss
push
mov
inc
scas
add
xchg
mov
push
notl
inc
fcoms
inc
dec
adc
test
test
int
add
pop
ja
test
jne
or
outsl
es
aam
mov
shlb
mov
sbbb
ffree
cmp
in
mov
and
pop
cmp
das
adc
xchg
jmp
lret
in
xchg
fistps
mov
popf
aaa
xor
pop
out
pop
fistl
dec
in
xor
adc
pusha
bound
jmp
sbb
mov
mov
mov
out
and
dec
adcl
mov
daa
mov
out
jb
fwait
adc
push
les
or
lahf
repnz
adc
xor
pop
pop
fiadds
pop
sbb
sbb
xchg
inc
sub
rorb
pop
rcrl
mov
jns
ja
push
jnp
lds
lods
cwtl
stc
lods
lahf
cld
cli
out
push
shll
add
adc
pop
push
inc
mov
aam
mov
lds
or
mov
jecxz
repz
xchg
adc
das
jnp
pop
mov
stc
xchg
xchg
mov
insl
rorb
sbb
mov
daa
or
out
and
test
pop
xor
sub
lods
add
imull
movsb
push
data16
sbb
xchg
lock
dec
add
rcr
or
jmp
add
mov
jbe
cwtl
cmc
adc
xchg
pushf
cmpl
test
mov
jne
sti
out
jae
insl
js
push
lods
mov
xchg
xcrypt-ecb
cmpsl
mov
rcr
mov
mov
jmp
push
mov
dec
jne
xchg
jl
dec
adc
add
pop
pop
enter
clc
adcb
and
out
fwait
ljmp
in
sbb
cmp
cs
mov
fsubrl
push
aas
adc
daa
inc
sbb
add
movsl
inc
mov
ljmp
je
incb
mov
popf
out
pop
inc
rorb
mov
pop
mov
js
sub
andl
xchg
or
and
push
cwtl
lret
aaa
js
xchg
scas
repnz
int3
fisubrs
fcoms
dec
outsl
shlb
adc
and
mov
ljmp
inc
jmp
ret
adc
xor
in
xchg
hlt
aam
and
lock
je
or
cltd
jmp
xchg
call
sub
mov
mov
pop
stc
xchg
mov
subb
dec
loopne
in
push
call
jbe
jmp
out
subl
or
loope
mov
jmp
ds
aam
push
pop
pop
inc
mov
sbbl
pop
test
mov
negb
es
xchg
das
aad
scas
lds
sbb
and
pop
xor
pusha
fildll
xchg
cli
outsb
je
psubw
test
data16
jbe
movsl
mov
insb
sub
pop
cltd
in
mov
ss
mov
mov
or
lds
enter
dec
fisubrl
outsb
jge
cmovae
insb
and
inc
addl
dec
xchg
fst
outsl
mov
cmp
inc
nop
int3
shl
push
std
mov
dec
push
lock
mov
sub
or
lods
pop
jbe
inc
ljmp
jnp
int
jb
pop
rclb
cmpsl
and
pop
inc
rcrl
shll
je
pop
mov
addb
push
leave
add
sbb
nop
jnp
pop
lods
les
ret
mov
movsl
pop
jp
daa
outsl
mov
aam
es
mov
xlat
cmp
cmp
and
sbb
mov
or
bnd
fbld
inc
dec
add
push
inc
rol
jbe
mov
or
jg
cmp
mov
jne
mov
xchg
add
ja
xchg
arpl
hlt
nop
lret
hlt
mov
inc
dec
add
pop
arpl
lds
inc
xchg
mov
rcl
ficompl
bound
fstl
fstpt
pushl
and
gs
pop
xchg
out
cmc
jl
mov
xchg
jl
cli
pop
ret
xorl
addb
adc
bound
stos
cs
test
into
jo
inc
out
stc
pop
pushf
aad
push
test
inc
out
xlat
dec
cwtl
out
adc
add
lods
xor
and
add
mov
rcl
dec
inc
jl
dec
mov
clc
push
test
notl
andb
out
in
jmp
cmpsb
mov
scas
test
mov
cmc
add
ret
jl
sub
mov
xor
xchg
adc
mov
mov
loopne
xor
mov
cmp
filds
jge
dec
adc
les
je
testl
adc
push
mov
jne
pop
xor
jge
sbb
inc
fcomps
dec
rcr
cmp
sub
sbb
loopne
sub
data16
inc
idivl
cld
xchg
pop
inc
sub
or
cmpsb
into
xchg
ret
repz
jp
test
and
xor
lock
test
push
out
mov
mov
js
shl
sbb
add
sub
pushf
cmpsl
js
xchg
and
enter
xlat
ficompl
push
sti
aam
jecxz,pn
push
dec
jle
mov
repnz
sub
dec
scas
mov
in
repnz
jb
dec
std
dec
lret
mov
xlat
hlt
push
push
jo
sbb
xchg
xor
and
xor
pop
pop
adc
add
cld
adcb
int3
stos
lock
xor
imul
jmp
mov
pop
and
xchg
xchg
xor
frstor
fisubrs
push
inc
ljmp
adcl
dec
xchg
mov
push
add
test
dec
and
frstor
lcall
jmp
aad
fcos
test
mov
pop
cmc
push
fstps
out
cmp
das
sbb
mov
sbbl
jge
outsb
mov
sar
push
adc
push
lea
ljmp
imul
push
int
push
jb
sarl
insl
xchg
aad
arpl
xchg
jnp
adc
pop
xchg
fdivl
dec
xor
movsl
enter
loope
and
xor
sbb
int3
and
jae
fs
or
mov
shll
jo
sbb
mov
xchg
rcl
cltd
mul
jb
adc
negb
fsubs
outsl
lods
std
movhps
jb
testl
shlb
in
push
out
xlat
xchg
adc
inc
xor
and
xor
lcall
or
loopne
jmp
in
fistl
cmc
movsb
cmp
add
sbb
les
mov
mov
jbe
out
jae
push
pop
cli
jle
notl
sub
mov
pop
push
fwait
push
pop
mov
call
xor
pop
test
rcl
sub
out
dec
adc
and
add
imul
popa
and
nop
adc
std
mov
scas
out
and
mov
jl
arpl
mov
mov
sbb
pop
xchg
mov
test
or
movsb
imul
fnstsw
das
sub
in
adc
add
mov
je
in
sbb
cli
lret
lds
xchg
cs
mov
inc
mov
fimull
in
mov
pop
mov
or
fwait
sarl
enter
pop
cmc
jae
dec
cmc
fwait
mov
int
loop
mov
adc
xchg
gs
fmuls
loope
movsl
fisubl
xor
lods
cmpb
sar
bound
adcb
xchg
sub
xlat
in
ja
jp
rcl
ret
int3
jb
mov
loopne
cld
mov
repz
cmp
sub
xor
cmp
pushf
inc
lea
imul
scas
icebp
xchg
loopne
jmp
std
mov
inc
leave
test
mov
test
arpl
xchg
cs
cli
scas
push
mov
call
xchg
jo
cwtl
or
inc
and
or
insl
dec
jg
lretw
xchg
imul
xor
and
dec
loop
data16
sbb
jae
sub
add
xor
and
jb
lds
pop
mov
add
pushf
outsl
shrb
js
cmp
ja
cmp
push
out
inc
or
mov
in
push
jg
loope
mov
add
mov
ret
cmp
jecxz
mov
pop
into
subb
test
test
sub
cmp
cmp
cmc
mov
jno
push
push
loop
jecxz
arpl
sti
insb
adc
ret
pop
decb
icebp
sbb
sub
fsubs
mov
call
inc
pusha
imul
cmp
jno
arpl
jb
out
inc
sub
add
les
fs
add
ljmp
stc
xchg
adc
and
cmpsb
lret
ret
and
sarl
fistl
imul
scas
jns
rcrb
dec
lods
sub
in
pop
test
das
mov
mov
push
ss
mov
dec
mov
xor
xor
sarb
mov
adc
into
add
dec
gs
lods
pushf
fmul
push
sub
jae
lds
push
mov
mov
loope
enter
popf
push
lcall
push
jne
add
nop
inc
sbb
cmp
dec
insl
in
pop
repnz
es
movsl
pop
cmp
sub
in
addr16
outsl
loop,pn
shrl
mov
mov
clc
pop
cld
pop
mov
xor
cmp
clc
ss
xor
aaa
mov
enter
or
lret
lds
adc
stos
pop
mov
add
aam
rolb
push
xlat
push
sbbb
adc
dec
sub
push
inc
mov
adc
jbe
mov
aam
sub
xchg
add
mov
jmp
jne
inc
fucomp
or
mov
jbe
jp
push
dec
clc
xchg
sub
sbb
adc
sub
dec
xor
clc
mov
es
sahf
ljmp
add
or
aam
rcr
cwtl
scas
enter
lds
mov
in
jmp
pop
cmpsb
add
pop
xor
inc
add
rclb
mov
jg
or
out
lret
xor
jp
mov
fsubrp
sbb
push
pop
cmp
test
aaa
or
in
inc
cmp
fildll
push
sahf
jbe
jnp
push
pop
xchg
daa
sub
aad
adc
pop
in
pop
sub
dec
mov
dec
leave
push
leave
insl
outsl
nop
stos
rcrb
add
jne
aas
jo
test
xchg
out
testl
test
lcall
add
sbb
sarb
scas
stos
lods
sar
std
push
ja
pop
es
mov
xlat
mov
scas
xor
mov
imul
xchg
cltd
adc
xchg
test
jg
arpl
ljmpw
out
mov
imul
pop
xchg
sub
cmp
xchg
xchg
dec
andb
add
fmull
dec
add
xor
fldcw
out
adc
std
js
and
sbb
sub
dec
repnz
shl
bound
or
aaa
xchg
scas
lret
mov
xor
lods
test
outsl
lret
push
ret
shlb
pop
ja
mov
iret
cmpb
inc
xchg
rorb
ljmp
fld
gs
pop
or
mov
fyl2xp1
add
and
dec
iret
lcall
repz
fwait
sub
mov
xchg
mov
mov
cltd
or
mov
push
jnp
jnp
sbb
pushf
nop
shlb
pop
insb
addl
in
sbb
out
ds
test
inc
fisubl
lret
std
dec
arpl
out
mov
gs
imul
cmp
mov
pusha
push
adc
out
lcall
js
sub
and
push
cld
push
lret
add
nop
addl
imul
bound
add
jno
shr
mov
je
in
gs
pusha
add
out
shlb
sbb
shll
sti
dec
dec
sbb
sbb
sub
cs
fs
fsubrl
fisttpl
mov
add
in
incb
rclb
xor
pop
sbb
data16
fcmovne
test
dec
daa
stos
mov
push
xchg
sbb
test
mov
adc
mov
adc
lods
je
divl
or
jb
mov
adc
pop
mov
cmp
dec
fistl
xchg
imul
cmp
dec
rcll
xor
jae
pushl
cmp
arpl
adc
xor
stos
xchg
inc
mov
inc
into
filds
pop
enter
adc
repnz
call
sub
dec
and
push
notl
and
ja
xor
xchg
fstps
mov
test
lcall
fists
aas
pop
movsb
mov
mov
sbb
movsb
mov
xor
cltd
pop
sub
sti
imull
push
ret
repnz
aas
outsb
xor
mov
gs
idivb
sub
imul
pop
stos
loope
mov
jne
mov
jmp
in
dec
dec
int3
jg
and
pop
repz
jmp
add
or
outsl
and
test
shrb
jl
add
jecxz
andb
xor
sub
sub
imul
mov
lret
cmc
insb
xchg
push
scas
mov
xorb
cltd
pop
mov
push
loope
mov
cmc
inc
cmc
je
ljmp
xor
nop
ret
mov
sbb
nop
jne
das
hlt
jmp
fs
and
rcrb
mov
mov
jl
clc
jmp
lods
pop
push
push
inc
mov
mov
mov
in
icebp
je
lods
sub
sub
mov
cmp
mov
cli
add
sub
cwtl
and
ljmp
sbb
fmull
popl
sub
mov
into
ljmp
nop
dec
fistl
cld
clc
repnz
cmp
dec
jecxz
arpl
aaa
mov
mov
jo
fisubs
sbb
fcoml
mov
jnp
fwait
add
pop
mov
out
cwtl
imul
std
push
pop
pop
mov
rclb
adc
loop
out
aas
leave
mov
mov
sub
mov
jmp
jmp
inc
or
xor
inc
xor
xchg
sbb
inc
inc
std
test
and
inc
aas
dec
mov
pop
insl
nop
cmp
js
daa
sti
and
movsb
jnp
add
mov
fistl
sub
or
out
shrl
or
mov
xchg
xchg
push
lock
pop
addb
cwtl
cli
pop
lods
nop
mov
adc
push
cmp
fadds
stc
mov
jns
sbb
ljmp
dec
mov
add
jnp
stos
push
popf
inc
mov
pop
jg
jne
sti
loope
std
inc
popa
lret
in
xor
or
lcall
aam
aam
lock
int3
das
mov
mov
adc
movsb
loope
sub
test
add
cmp
xor
cmpsl
sub
lock
test
jmp
js
xor
inc
cmp
lcall
cmp
mov
lods
jns
aas
loop
push
jmp
lret
xchg
aad
loopew
cmp
lock
popl
fstpt
in
mov
sub
mov
fisubs
jl
push
xchg
mov
dec
jne
cmpsb
sbb
mov
repnz
push
in
mov
test
stos
outsl
loopne
dec
jecxz
imul
imul
mov
negb
rcr
loopne
das
jbe
in
mov
pop
xor
dec
push
mov
jl
mov
icebp
loopne
push
mov
mov
testl
adc
les
cmp
push
fnsave
incl
push
lcall
push
pusha
cltd
inc
sbb
pusha
pusha
mov
loopne
and
iret
test
jno
add
out
sti
insl
bound
lds
add
xchg
je
scas
sbb
das
int3
jno
add
xlat
fwait
xor
lcall
loop
in
mov
incb
cmp
sub
adc
sbb
mov
mov
mov
cltd
inc
or
scas
dec
cmc
cwtl
test
pop
sbb
mov
pop
data16
arpl
jns
sbb
fcmove
cld
jg
inc
cld
mov
add
push
mov
and
mov
sbb
or
dec
xchg
inc
in
xorb
and
or
mov
nop
xchg
into
pop
or
cwtl
adc
add
push
add
cwtl
lds
mov
popa
in
cmp
inc
cmp
mov
push
sbb
xor
les
xchg
jmp
sub
pop
lea
pushf
push
cmp
adc
mov
and
jns
stc
test
movsb
push
pop
mov
xor
sbb
js
dec
xor
xor
cmp
dec
out
lods
loopne
pop
fnclex
inc
push
jg
dec
cmp
call
iret
or
cmpsb
push
pop
push
jae
ds
sub
mov
push
es
movsl
or
sti
cld
xor
and
imul
add
lcall
xchg
out
insl
jno
pop
adc
adc
adc
add
iret
adc
dec
inc
popf
mov
ret
icebp
jmp
cwtl
mov
lods
insl
push
and
int
inc
mov
ljmp
adc
es
aaa
lcall
mov
mov
sbbl
test
call
sub
sbb
dec
inc
movsb
jge
popf
lods
adc
shll
sub
nop
jne
pushf
cmp
mov
mov
dec
xchg
or
lcall
clc
data16
lods
mov
insl
ficoml
push
and
pusha
inc
std
mov
fucomip
test
fucompp
push
xor
fsubl
aad
or
aad
in
lahf
add
fwait
pop
mov
adc
rcll
pop
call
jb
nop
addr16
lock
push
sub
test
cltd
neg
mov
add
dec
inc
cs
lahf
pop
lcall
sahf
xor
cs
inc
ja
ja
outsl
test
xchg
sub
popa
mov
sti
jae
cmc
outsl
arpl
int
mov
mov
jae
push
xchg
adc
inc
imul
cmpsb
add
cmp
test
add
pusha
data16
or
out
mov
cmp
stc
jp
pop
fcoms
daa
add
jge
ljmp
mov
dec
push
leave
xor
xor
cmc
rcrl
jg
mov
lret
mov
fmul
dec
inc
int
jo
js
lcall
frstor
ret
mov
fsubl
test
push
mov
cltd
cmp
xchg
frstor
fildll
mov
add
jae
ja
rolb
repnz
push
fstps
pop
push
xlat
je
xor
pushf
out
out
xor
pushf
lods
cli
sub
enter
sbbl
pop
push
jmp
test
or
or
test
int
lods
sarl
dec
and
fistpll
mov
xor
std
mov
cmpsl
cmp
movsl
xchg
aas
pop
sti
adc
inc
sbb
aam
sbb
sbb
pop
jnp
loop
mov
cmp
cmp
arpl
mov
out
outsl
push
je
movsl
imul
dec
or
add
popa
dec
push
cld
lret
jle
nop
add
xchg
movsl
ret
test
loope
in
sub
in
pop
shlb
enter
push
pop
pop
add
push
xor
cmp
ret
out
xor
rolb
icebp
adc
mov
les
shr
adc
adc
insb
xchg
dec
push
mov
cmpsb
cmp
outsl
add
add
nop
inc
inc
jl
in
jb
xor
dec
mov
fdivl
xlat
lods
ret
mov
xor
rcrb
jmp
lds
mov
test
addr16
stos
stc
cltd
pop
enter
outsb
cmp
mov
std
push
cli
cmp
xchg
scas
cmpsb
jae
mov
xor
push
out
mov
dec
mov
fwait
adc
pop
cmp
inc
addr16
cmp
jecxz
jmp
into
inc
nop
sbb
stos
push
das
fs
mov
xor
into
mov
inc
je
push
shll
sti
xchg
sti
inc
sbbl
idivl
cmp
xchg
repz
repz
xchg
daa
test
mov
pop
push
mov
popa
shll
xchg
cli
mov
out
cmpsb
test
andnps
dec
xor
out
testb
es
cmpsl
jp
or
out
dec
sbb
sub
xchg
mov
pop
fs
std
or
sbb
in
les
aad
sub
ja
gs
inc
push
scas
loopne
or
jns
mov
ret
sbb
mov
inc
add
jnp
and
loope
push
add
mov
mov
and
push
inc
clc
flds
jge
ret
aas
in
test
outsl
and
rolb
add
or
gs
and
pop
xchg
jno
pop
filds
mov
mov
mov
out
and
mov
mov
sbb
in
cld
cmp
repnz
jp
aad
outsb
dec
ret
jb
sbbb
aam
jae
add
inc
push
scas
and
push
fiadds
dec
push
dec
inc
cltd
imul
xor
adc
lret
ja
js
fwait
sbb
or
jle
add
std
pop
inc
iret
ficoml
mov
jb
inc
inc
test
pop
sub
fwait
adc
push
mov
jae
cmc
stos
and
push
xchg
jl
imul
ret
out
fst
iret
pop
push
lret
jmp
cwtl
push
shrl
xchg
sbb
notl
movsl
pusha
add
push
decb
scas
xor
stos
popl
jno
repnz
pusha
xchg
dec
adc
mov
cmp
push
dec
adc
fists
mov
imul
jmp
clc
mov
jg
les
cmp
repz
test
dec
test
aam
andb
lock
les
aam
lods
sub
jmp
daa
dec
jmp
sbb
push
lock
jp
pop
ljmp
mov
xor
jbe
adc
mov
sbb
add
outsb
sbb
xchg
cmp
popa
ret
jmp
mov
cltd
cs
mov
lret
xor
mov
fstpl
or
daa
lds
jg
jae
nop
sbb
in
and
test
inc
insb
pop
ret
dec
lcall
cmpsl
sbb
dec
add
add
ret
and
xor
test
mov
push
outsb
mov
out
and
and
fcomps
fwait
test
fidivrl
outsb
andl
add
loope
test
mov
inc
sbb
jge
jb
incb
mov
inc
mov
pop
scas
sbb
ret
pop
out
cmp
xchg
jnp
pop
outsb
shr
js
pusha
cmc
fwait
cmp
test
or
mov
pushf
lods
fdivr
mov
push
mov
mov
cmp
stos
shrl
mulb
mov
cmp
pop
inc
lds
stos
sti
sub
cmp
mov
and
pop
dec
ret
push
icebp
lcall
clc
pop
mov
add
ja
nop
inc
repz
fisttpll
in
sti
add
xlat
xchg
inc
and
adc
push
pushf
pusha
imul
add
sub
fsubr
push
push
test
hlt
pop
inc
mov
fsubs
mov
pop
inc
popf
repnz
insb
jne
cmp
push
mov
iret
das
arpl
sub
imul
imul
scas
test
lods
loope
cli
mov
mov
sbb
out
jecxz
cmp
movsl
add
lret
mov
add
sbb
aad
mov
lods
int
or
cmp
sbb
fstpl
xchg
sbb
dec
ret
adc
inc
int
fwait
aad
xor
mov
add
inc
and
jmp
mov
jb
ja
push
ljmp
push
sub
outsb
dec
push
mov
dec
rcr
xor
xor
loopne
popa
addr16
jbe
mov
lahf
cmpb
inc
pop
push
dec
movsl
scas
pushf
int
cmp
jle
lds
mov
dec
xor
fsubrl
or
fiadds
std
adc
js
inc
test
repnz
into
cs
cmpsl
es
lret
in
outsb
rorl
cmp
lock
dec
jae
and
popf
jae
jnp
jns
add
mov
mov
sbb
xlat
cmc
out
push
fistps
jmp
jne
inc
jecxz
lahf
adc
mov
fwait
mov
jb
jb
jb
imul
xlat
pusha
adc
imul
sbb
add
add
in
pop
sarb
inc
iret
mov
jle
bound
frstor
cmp
lods
ljmp
jae
fdivp
pop
inc
fnstcw
push
mov
data16
sub
push
lods
fsubrl
mull
in
jg
push
enter
inc
pop
jecxz
cld
loope,pt
aam
push
mov
mov
xchg
arpl
pop
and
adc
adc
rcrl
dec
sub
xor
hlt
das
popa
sbb
cmp
cmp
data16
push
mov
xor
xchg
lods
adc
jmp
adc
es
out
mov
xchg
call
lahf
dec
push
out
mov
inc
popf
lea
xchg
imul
add
and
xchg
test
int
xor
push
shrl
lods
or
add
es
clc
mov
sub
cmp
xor
xor
out
dec
dec
mov
out
sbb
adc
pop
cmpsl
xchg
push
jns
or
mov
mov
mov
mov
in
sbb
push
cli
fldcw
mov
adc
dec
push
shlb
lret
xor
cmp
xorb
test
ds
stos
stos
dec
jecxz
push
mov
aaa
fsubrs
or
scas
mov
mov
mov
cwtl
mov
sahf
and
jmp
push
sub
pop
lret
rolb
xchg
pop
ret
scas
mov
es
sub
stos
adc
sub
or
mov
pop
out
mov
fwait
mov
adc
icebp
jmp
xor
cwtl
icebp
test
jne
ljmp
fdivrs
jo
ja
pop
lods
in
cmp
fistps
mov
jecxz
push
jno
dec
fmuls
lret
pop
mov
int3
push
inc
xchg
faddp
adc
mov
data16
add
lret
sti
hlt
mov
mov
dec
inc
adc
add
pop
sbb
or
test
or
dec
sub
mov
je
cmc
mov
lret
out
inc
sti
push
xchg
shrb
mov
inc
sub
repz
int3
mov
mov
jp
in
pop
in
dec
repnz
test
push
add
nop
jge
int
add
lods
stos
mov
popa
cmp
mov
xchg
add
push
roll
movl
xchg
loop,pt
jno
loope
outsl
mov
in
fisttpll
pop
fsubrl
icebp
add
xor
lods
mov
sbb
xor
cmp
daa
in
and
ds
dec
les
add
xor
sbb
pop
adc
aam
push
adc
dec
cmp
jae
push
test
cmc
aam
pop
mov
cmp
insl
ljmp
repz
div
xchg
out
lock
push
inc
mov
bound
push
cmc
imul
aad
lock
jecxz
lret
adc
pop
or
bswap
mov
inc
xchg
test
adc
sub
sub
stos
loope
or
fmull
xchg
and
cwtl
mov
push
imul
daa
ret
test
daa
cmpsl
mov
jns
sti
movsl
lcall
sub
adc
or
and
mul
sub
sbb
test
andb
in
lcall
clc
pop
pushf
jne
fld
popa
jecxz
ss
inc
dec
test
adc
ds
roll
mov
das
loop
cld
test
out
adc
scas
mov
push
sbb
hlt
icebp
arpl
sbb
jno
pop
movsl
push
sbbl
loop
je
and
dec
addr16
movsb
push
mov
daa
cld
push
jb
movsb
inc
xchg
add
hlt
cmpsb
push
mov
inc
jmp
jecxz
or
pushf
cld
aas
sbb
inc
das
outsl
dec
sub
mov
push
daa
jnp
mov
out
call
adc
cli
add
sub
push
sbbl
and
add
ds
push
push
pop
jbe
cld
cmovo
pop
orb
ss
inc
int3
lret
arpl
cmp
scas
insl
fs
ja
insb
add
jb
icebp
push
ss
push
shrl
mov
xchg
std
in
xchg
add
les
daa
out
or
enter
dec
mov
test
dec
and
mov
or
cmpl
jb
lods
inc
test
movsl
sub
push
nop
scas
sti
mov
inc
mov
aam
ret
xchg
cmp
das
lcall
pushf
adc
js
arpl
outsb
add
loopne
fdivr
shl
out
stos
xchg
mov
fsubl
mov
sbb
stc
adc
lcall
push
sahf
movsl
fisubrs
sbb
xor
xor
inc
in
sbb
movswl
mov
cmc
pop
dec
add
lds
push
aas
fwait
dec
hlt
pop
in
mov
rol
jbe
xor
cmpsb
adc
mov
push
andb
mov
and
shrl
and
cmpsb
sbb
sbb
pop
or
or
stos
fcmovb
rol
popl
syscall
js
lret
int
enter
in
xchg
pop
aas
imul
or
insl
loopne
fwait
sbb
adc
out
and
dec
adc
sbb
push
imul
cltd
pop
and
out
lods
lds
lret
and
in
xchg
pop
inc
sbb
dec
push
or
add
in
mov
lahf
xchg
pop
sub
jae
dec
mov
mov
lcall
mov
hlt
insb
lcall
in
adc
ret
insb
lds
pop
mov
or
call
mov
es
mov
cwtl
sub
lods
mov
ret
insl
divb
jns
cmpsb
sysenter
jl
sarb
or
xor
lret
movsl
stc
adcb
sbb
inc
sub
cmp
fadds
test
and
mov
pop
sbb
mov
add
sbb
leave
aas
xor
adc
cmpsb
je
int3
filds
inc
mov
lret
stos
addr16
push
push
mov
notb
imul
mov
ljmp
adc
icebp
xor
lcall
mov
enter
fs
inc
xor
adcb
sbb
in
dec
push
add
and
clc
push
inc
movsb
pop
or
or
aad
inc
in
adc
cmp
xchg
inc
mov
into
lret
push
xchg
int3
push
push
shl
andb
data16
pushf
int
lods
pop
mov
pop
jne
cld
ror
movsb
or
jecxz
push
stos
repnz
dec
fst
jae
mov
insl
mov
stc
cli
push
jbe
cmp
push
sti
inc
andb
pusha
lea
insb
jae
lds
js
add
inc
or
mov
cmp
sahf
or
push
les
cwtl
mov
popf
mov
jbe
fimull
iret
add
xor
fnsave
mov
ds
xor
aaa
add
mov
lret
mov
adc
sbb
inc
aad
shll
lock
insb
pop
push
push
hlt
xor
xchg
jle
cmc
lret
gs
or
dec
mov
jns
out
mov
aam
lahf
lods
sbb
or
inc
and
xor
lahf
and
out
loop
cld
dec
cld
adc
sbb
push
enter
sar
sub
out
mov
loopne
push
pop
and
rcrl
jns
int
loop
sbb
push
or
adc
mov
mov
pop
popa
cmc
mov
xchg
inc
mov
loope
mov
sbb
mov
mov
cmpsl
add
js
loop
add
sub
cmpsb
test
lds
test
sub
add
into
xchg
add
mov
mov
xchg
test
jg
xchg
ljmp
or
sbb
fsub
outsl
scas
jns
int3
stos
dec
xchg
pop
iret
fsubp
loop
pop
add
pop
daa
fdivrs
pop
cmpb
das
add
add
jg
movsb
mov
sar
mov
and
das
xchg
sbb
std
and
fst
add
or
mov
lret
fs
aad
mov
pop
cld
pop
inc
pop
push
sbbl
or
clc
xchg
rcr
xchg
add
out
pop
dec
mov
vmread
sbb
lahf
int3
nop
inc
lret
push
sub
in
push
mov
dec
sub
mov
into
mov
mov
and
jg
sub
and
jge
movsb
ss
xchg
loopne
add
push
mov
jl
push
out
push
fimuls
lahf
lods
cmpsb
pop
mov
ds
out
cmp
fwait
loop
hlt
or
mov
pop
fiadds
cs
repz
sbb
imul
jle
add
push
sbb
push
and
sar
clc
push
fnstcw
stc
pop
lea
pop
or
rorb
or
adc
jbe
add
inc
int
pop
pop
cmp
dec
lods
or
jb
cmp
repz
or
jnp
mov
lods
cld
int
bound
outsb
rorb
pop
hlt
mov
adc
mov
jbe
pushf
in
fistpl
int
pop
adc
sub
cmp
loope
into
out
into
lods
mov
mov
in
mov
xchg
jno
lods
testb
xlat
clc
jo
add
ljmp
lahf
std
ss
xchg
outsb
nop
fnstcw
adc
hlt
xchg
adc
sub
insl
repnz
aam
imull
lods
adc
cmp
push
xor
mov
shll
cmpsb
adc
imul
es
push
adc
cmp
pop
in
outsb
push
lcall
out
cmp
insb
aad
jno
cmp
jecxz
enter
push
ljmp
into
mov
add
in
imulb
adc
mov
inc
lret
push
mov
jmp
push
divps
enter
dec
ss
mov
dec
or
mov
mov
sarl
xor
xlat
lea
fisttpl
xchg
dec
int
lahf
mov
pop
adc
add
enter
dec
mov
repz
sub
jne
adc
add
stos
js
scas
dec
daa
push
nop
or
mov
jne
mov
daa
xchg
xor
sub
aad
jge
sub
shll
outsl
push
lock
cmp
cmc
shlb
out
shl
jp
add
xor
push
pop
xchg
das
xchg
inc
lea
ss
mov
gs
xchg
adc
push
mov
mov
sahf
repz
mov
push
rolb
les
xchg
test
mov
ljmp
mov
xor
push
stos
mov
loop
dec
test
in
pop
lret
cmp
out
adc
cmpsb
mov
push
outsb
lahf
sti
cmp
mov
adc
push
xchg
pusha
dec
repz
pop
and
shll
push
add
cmp
mov
iret
mov
fcmovnb
push
ja
inc
add
adc
gs
sub
shll
cmp
mov
daa
mov
stc
les
je
in
mov
fistpll
flds
or
jmp
push
xchg
sarl
cmp
pcmpeqd
adc
jno
in
outsb
push
gs
cmpsl
scas
icebp
mov
lods
enter
sbb
lahf
push
or
push
jle
mov
adc
rcrl
roll
iret
xor
push
adc
stc
jmp
sahf
cwtl
in
ljmp
jle
xor
lods
fcmovu
test
int3
inc
jns
and
inc
and
add
or
mov
pop
jae
leave
push
test
xor
leave
mov
mov
and
sub
mov
fdiv
or
sub
in
push
mov
sbb
add
push
out
mov
movsb
arpl
xchg
pop
pushf
mov
shll
addr16
roll
in
jb
and
nop
imul
adc
in
andl
mov
adc
addr16
dec
dec
ret
add
outsl
sub
jno
dec
cmp
add
inc
rcll
loope
shll
imul
mov
sti
lods
ja
fcomps
lods
out
jo
xor
push
xchg
testb
psadbw
xchg
adc
hlt
mov
in
jae
and
jno
nop
int
xchg
cmpsb
shrl
push
ror
inc
jnp
mov
push
mov
mov
dec
xor
cltd
or
orl
or
mov
mov
into
xchg
aam
int3
adc
mov
mov
and
push
jmp
jbe
adc
or
mov
fnstsw
mov
aas
in
mov
popa
mov
mov
xchg
insl
sub
push
inc
push
push
dec
inc
insb
call
loop
addr16
leave
cmp
out
and
mov
sbb
jle
and
cmp
cmp
sbb
push
or
push
decb
ret
loopne
ljmp
in
inc
fwait
iret
insl
sti
inc
insb
jle
jg
dec
jge
jmp
mov
andb
jns
lods
push
sub
es
sbb
and
mov
mov
adc
cmc
mov
pop
test
push
mov
dec
adc
xor
adc
bound
jp
inc
adc
xchg
stos
mov
or
push
mov
sub
cmp
adc
stc
sbb
mov
jge
pusha
jno
cmp
pop
dec
add
shlb
imul
imul
xlat
mov
pop
aaa
das
mov
sbb
aam
mov
push
jno
cmpsb
loope
mov
cmc
inc
pushf
gs
xchg
test
stc
loop
mov
in
mov
cmp
pop
aaa
fbstp
dec
mov
add
ficompl
test
movsl
call
loopne
pop
jb
pop
xor
rorl
divl
inc
repnz
fbld
mov
adc
jp
cmp
mov
out
xor
imul
lods
ds
roll
leave
pop
and
adc
or
pop
fistpl
xchg
mov
or
jmp
rolb
cltd
or
inc
jne
mov
sbb
sarb
ljmp
sbb
mov
cmp
jae
and
adc
cltd
adc
fistpl
fists
push
xchg
sbb
dec
mov
cwtl
ret
in
js
xchg
sbb
insl
mul
xor
xchg
cli
data16
xor
inc
in
jge
js
test
push
inc
orl
xorb
mov
xor
sbb
pop
in
fdivr
adc
push
inc
addl
std
mov
vaddps
mov
cmc
movl
ja
aam
xchg
call
rcl
stos
sub
jge
dec
je
mov
push
testl
cltd
cmpsb
sbb
push
test
daa
jo
bound
push
mov
pusha
out
fisttpll
sbb
xchg
lock
int3
adc
jmp
dec
cld
sbbl
imul
jg
pusha
inc
popf
ljmp
mov
push
in
pusha
sbb
ja
fcomps
xchg
lds
jle
mov
or
mov
mov
adcb
fistpll
add
cmp
mov
and
daa
mov
xchg
out
stc
mov
pop
jecxz
rcl
outsl
push
bound
or
xor
xlat
std
sub
and
fwait
pop
fdivrs
pop
testl
fwait
ret
xor
mov
jmp
inc
out
repnz
rcr
lods
jecxz
mov
test
push
push
stos
aaa
pop
imul
repz
jns
fdiv
enter
mov
inc
shll
aas
rol
and
sub
jnp
call
out
sub
out
fsubr
mov
mov
pop
jg
icebp
dec
lret
and
jno
adc
adc
les
mov
xor
lods
xor
inc
in
ret
sub
sahf
add
fsubr
lahf
fdiv
cld
int3
idivl
lcall
xor
push
imull
sub
jbe
xchg
in
scas
sub
lock
popa
pusha
mov
ds
mov
add
test
outsb
insb
mov
mov
clc
push
jo
xchg
jl
adc
dec
pop
jg
test
aad
gs
mov
les
cmpsb
xor
imul
xchg
sbb
jecxz
mov
aam
and
scas
sub
sbb
jp
inc
cld
pop
xchg
ret
fadd
pop
sbbb
dec
sub
xchg
add
shr
lods
movsb
in
or
repnz
js
data16
xchg
jecxz
adc
lret
dec
cld
dec
sbb
jp
enter
push
jo
rcrl
scas
cwtl
mov
outsl
pop
lea
lcall
xor
xchg
aaa
and
add
xor
fsubrl
push
sbb
push
sbb
pop
jle
imul
xor
dec
dec
insb
sbb
mov
je
adc
xchg
cmp
popl
sub
js
and
mov
ret
mov
popf
ds
push
js
sub
sbb
jl
std
push
mov
mov
mov
mov
cmp
fistl
fsubs
or
pop
mov
pop
cwtl
enter
es
pop
inc
fdivp
cmpsl
dec
mov
push
jbe
in
pop
xor
push
sub
into
cmp
hlt
and
sub
inc
scas
outsb
add
pop
or
insb
sti
cmc
mov
jnp
xor
xchg
jb
out
or
cs
mov
xchg
sub
xlat
in
scas
sbb
lret
lea
lds
inc
or
adc
mov
or
clc
xor
test
movsl
adc
jg
cmc
pop
xchg
jp
adc
pop
cmc
mov
pop
dec
cmp
mov
leave
outsb
adc
adc
inc
cmp
cmc
jecxz
pop
test
in
jne
cld
mov
int3
notb
aad
jge
dec
push
rorl
jecxz
or
testl
adc
sub
fbstp
adc
mov
push
movsb
addl
stos
aad
dec
ds
enter
sti
shlb
ja
jae
adc
xor
decb
inc
popa
int
and
arpl
ss
in
jmp
addl
jmp
inc
adc
cmp
mov
jns
inc
add
dec
sub
jbe
sbb
aad
testl
in
das
and
sahf
push
jge
mov
mov
cmpsb
movsb
arpl
add
lahf
out
dec
cmpl
adc
fucomi
pop
inc
int
es
movsl
xor
pop
mov
jb
rorb
and
ja
sahf
push
stos
out
sub
pop
xchg
leave
mov
add
enter
pop
push
pop
xor
dec
addr16
jne
inc
rorl
mov
movsl
xchg
and
xor
inc
fdivrs
es
gs
popf
xchg
sub
ja
add
xor
fwait
pop
int
xchg
push
pop
cmpsl
dec
leave
fisubl
jbe
sub
lahf
mov
mov
and
sbbb
xchg
inc
fsub
push
or
clc
cmc
popf
leave
lret
xor
sbbl
es
adc
push
xor
xor
xchg
call
lods
inc
push
fstpt
xchg
jns
sbb
das
lods
jmp
inc
inc
sbb
aaa
mov
pop
jp
scas
stc
or
test
lods
jns
mov
mov
cmc
ret
and
pop
cld
pop
pop
jbe
dec
aas
ss
xchg
xchg
and
and
sbb
adc
mov
ja
xchg
sub
ss
out
sahf
cld
sub
dec
push
jns
in
sbb
dec
push
xchg
mov
xor
dec
cmc
fwait
jl
adc
sbb
jl
inc
push
clc
xlat
cmp
mov
mov
cmpsb
adc
dec
jb
jmp
inc
mov
mov
xchg
inc
push
mov
dec
daa
xor
and
mov
sbb
jmp
scas
enter
sti
fwait
shl
push
sti
repnz
jge
fstpl
fwait
cwtl
push
adc
sub
fwait
inc
adcl
sub
aad
and
shll
inc
adc
jmp
add
sub
jp
pusha
jp
flds
adc
jge
in
idivl
fdivs
push
jae
jne
inc
das
jns
mov
nop
pop
ret
sbb
stc
sbb
stos
jo
outsl
sub
jle
sbb
push
insb
adc
ss
push
out
movsb
rorb
adc
inc
mov
sarb
cmp
lcall
mov
pop
pop
mov
push
movups
pusha
push
movsl
and
shll
dec
cmovl
push
and
sahf
push
fsts
repz
cld
and
aad
ss
adc
popa
mov
pop
or
test
js
aad
lods
cld
mov
inc
fstpt
icebp
and
shrl
jmp
or
mov
test
sub
push
pop
adc
fldl
sarl
jnp
subl
lret
jnp
maskmovq
imull
jecxz
sbb
mov
aaa
shr
fisttpl
jbe
ljmp
fwait
push
sub
xlat
iret
dec
jno
dec
inc
testl
dec
pop
jbe
jae
or
push
push
ja
dec
pop
in
push
sbb
gs
sub
dec
sbb
cld
loopne
imul
jne
daa
fdivr
sbb
and
fldcw
shll
jnp
mov
mov
xchg
sahf
adc
jle
xchg
ret
jae
std
cli
pop
jg
aaa
repnz
pop
mov
xor
add
pop
rolb
fcomi
dec
out
inc
imul
inc
int3
mov
sahf
int3
es
je
pop
lcall
adc
roll
imul
popf
mov
inc
dec
mov
gs
pop
adc
fadds
roll
inc
sub
lods
mov
xchg
fisttpll
movsb
dec
or
out
icebp
pop
arpl
decl
sub
and
xchg
shrb
dec
xchg
lods
cmp
mov
mov
cmp
sbb
push
pop
add
fisubl
and
lock
ja
xlat
sub
shll
jbe
insl
push
adc
pop
ss
dec
das
jnp
cmc
dec
out
imul
aaa
sti
cld
mov
sub
enter
lock
push
cmp
mov
pop
cmc
sub
es
cltd
push
mov
xchg
rcll
or
mov
xchg
pop
mov
mov
test
sub
mov
mov
rorl
or
ds
and
jne
lods
aad
aas
ds
inc
data16
adc
scas
popa
fincstp
je
ja
int
xlat
mov
jb
fs
xchg
push
mov
sbb
icebp
movsb
mov
add
push
adc
mov
push
cld
push
sarb
aam
sub
jp
push
int3
shlb
jg
inc
push
sbb
cwtl
mov
int
addr16
ss
fwait
nop
add
sbb
in
sbbl
fisttps
loop
sti
jnp
and
inc
jbe
mov
dec
jno
sti
jmp
ret
and
hlt
pop
jmp
xor
mov
in
loopne
mov
test
inc
rcll
pop
lock
movsl
adc
mov
cltd
fisubrs
in
rcrl
mov
add
out
xorl
outsb
adc
ds
adc
outsl
or
xlat
pushf
jge
fidivrl
scas
mov
imull
mov
rcrb
jae
cmp
loopne
test
lock
xchg
fnsave
test
mov
mov
push
cmpl
xchg
pand
sbb
mov
fldl
push
inc
aaa
insl
jle
cmc
icebp
fisttps
push
dec
lock
gs
mov
sbb
movsb
mov
repnz
scas
cmp
cmpsb
ret
loop
stc
cltd
xchg
mov
ret
out
jp
push
cmp
ret
xor
dec
pusha
push
push
and
dec
cmp
enter
pop
lahf
mov
stos
stc
jae
lods
adc
aaa
stc
pop
insl
xchg
out
push
jbe
mov
sbb
orl
adc
xchg
rolb
ljmp
nop
mov
out
pop
add
sbb
sub
adc
mov
andl
jle
pushf
les
fs
shl
jle
scas
push
sub
push
dec
pop
mov
and
outsb
xor
les
mov
jno
pop
mov
inc
aas
bnd
mov
lret
repz
daa
push
hlt
lods
sbb
xchg
popa
jge
cmp
ja
cmp
lods
dec
xor
xchg
sub
lahf
jmp
adc
sbb
out
mov
ret
xchg
fdivrl
int3
pop
cmpsb
xchg
xlat
pop
rorb
frstor
push
mov
mov
add
sub
mov
sbb
test
ret
stos
sub
fsts
inc
int3
pop
jp
aas
mov
ss
xchg
and
aaa
and
aam
xchg
add
insb
in
push
sub
pushf
ja
add
inc
pop
sbb
inc
jns
lea
imul
cld
out
mov
mov
call
cmc
cwtl
aad
cmpl
mov
inc
aaa
std
adc
pop
dec
arpl
push
out
add
fcomp
bound
mov
push
rep
push
pop
fnstcw
adc
dec
inc
out
or
lods
xor
cli
mov
lret
and
nop
sbb
aas
movsb
movsb
scas
jmp
aas
jne
push
mov
fdivp
jge
inc
push
scas
xchg
dec
pop
fcomp
mov
mov
into
rcll
fldenv
jl
adc
inc
mov
or
das
jns
testb
fldcw
add
dec
out
stos
loop
add
dec
inc
enter
sub
pop
nop
pop
in
fcomp
or
pop
add
push
js
in
cmp
inc
pop
fistps
in
fcmovb
mov
mov
push
pop
popa
mov
push
lret
and
nop
arpl
xchg
sub
cwtl
xchg
int3
inc
faddl
popf
jp
dec
cmp
in
mov
dec
das
cmp
movsb
imul
sub
lea
xchg
inc
ss
aaa
push
iret
lods
sub
sahf
jno
inc
pop
jae
cmp
add
and
clc
cmpsl
inc
sub
inc
aas
cwtl
dec
dec
lods
push
xchg
push
xlat
jle
sbb
adc
pop
rcrb
outsb
cs
xchg
sbb
loope
data16
adc
lods
or
lods
cmp
int
inc
pop
arpl
imul
andl
cmp
mov
ds
shrl
dec
lods
and
xor
adc
xchg
insl
or
loopne
jg
and
inc
fs
cmp
xor
xchg
js
adc
xorl
mov
mov
push
ror
loopne
pushf
dec
jnp
push
or
push
popa
imul
movsb
jbe
mov
mov
add
mov
mov
add
cld
mov
daa
xor
lods
fs
xchg
jecxz
popa
mov
sub
out
iret
push
cwtl
lret
push
in
lds
dec
or
cld
lock
and
jecxz
jmp
in
push
dec
outsb
mov
stc
push
insl
sbb
sub
aas
inc
les
hlt
into
call
ret
nop
jns
sub
lret
or
inc
mov
or
cltd
xchg
aad
aaa
xor
and
mov
mov
cwtl
ret
lods
mov
movsb
mov
sub
das
mul
and
mov
outsl
mov
icebp
loope
jl
xchg
aas
cs
neg
out
es
out
fwait
aas
lcall
mov
push
in
cli
out
loopne
test
stos
mov
mov
std
adc
adc
out
xor
jmp
dec
ja
pop
dec
and
jl
inc
and
pop
dec
divl
dec
rclb
sbb
xchg
insl
movsb
scas
pop
in
cld
popa
mov
mov
sbb
adc
fstpl
into
jb
dec
mov
mov
pop
add
pop
lahf
xor
out
cmpb
and
push
data16
cmp
sub
and
adc
or
popf
ljmp
nop
lock
sbb
ljmp
pop
mov
xchg
iret
stc
mov
insl
sub
shl
scas
mov
lods
aad
mov
sarb
negb
or
and
pop
dec
loopne
js
inc
pop
rorl
mov
adc
dec
stos
aas
xchg
mov
jl
xlat
loope
mov
cmc
sub
ljmp
loope
xchg
pop
xchg
loopne
pop
fsubrp
jbe
fwait
mov
jae
adc
aam
sub
mov
push
xor
and
pop
movsb
call
outsb
aaa
xor
mov
sahf
fstl
insl
loop
pop
cmp
idivl
inc
roll
xchg
xorl
sub
push
dec
fisubl
shl
sub
out
add
call
inc
gs
mov
push
and
inc
xchg
aas
cmp
rcrl
pop
push
ds
cmp
sbb
mov
popf
repz
loopne
ret
insb
decb
jnp
dec
repz
je
out
inc
fists
sub
inc
and
or
sbb
mov
jge
les
gs
hlt
outsb
movsb
pop
cli
popl
push
adc
repz
lods
ljmp
mov
or
inc
hlt
fistl
fsubs
xchg
js
jg
cli
cli
icebp
cmp
jbe
cmp
mov
inc
push
mov
notl
mov
icebp
jl
add
ss
mov
mov
jl
jmp
or
repnz
sub
dec
fimuls
xor
rcll
rol
cwtl
mov
mov
jl
xlat
sarl
xor
rolb
xchg
movsl
add
push
mov
aam
mov
mov
aaa
push
jb
daa
push
push
inc
daa
push
std
hlt
lods
fistpll
sub
mov
ja
packuswb
insb
cltd
cmp
pop
aam
in
jl
fists
mov
mov
fyl2x
push
setg
xchg
repz
cmpsl
mov
scas
mov
stc
sbb
mov
imul
jns
xor
xchg
mov
jb
jle
cmp
xchg
inc
jmp
fs
mov
scas
xor
jg
add
aam
lret
cmp
cmpsl
lcall
inc
jne
push
and
mov
std
out
pushf
cltd
push
shlb
push
repz
aam
or
cmp
cmp
push
cmpb
push
or
test
stos
adc
lods
popa
outsb
pop
push
imul
lret
and
ja
insb
mov
aas
out
jno
pop
inc
dec
jmp
sub
or
cmp
int
nop
jp
adc
jmp
and
das
jo
adc
mov
leave
in
fcmovb
dec
es
cmpsl
sub
mov
xlat
aaa
push
sahf
pop
loop
int3
jnp
xchg
sbb
mov
addr16
je
add
and
sub
scas
stos
in
mov
mov
rcrb
je
jne
and
adc
in
and
fidivrs
sbb
push
loop
xor
xchg
jae
xor
std
sarl
fidivl
dec
mov
sbb
mov
in
nop
and
xlat
rcr
stc
repnz
pop
lods
sti
lods
bound
push
jo
shrb
jns
repz
add
jne
xlat
dec
jl
notl
pop
aaa
mov
jnp
fstpl
out
adc
mov
movsb
test
aad
xchg
push
cmpl
jp
int3
push
adc
test
out
adc
jg
pop
js
aaa
cwtl
or
jl
sub
daa
pop
xchg
sub
sub
dec
adc
sbb
popf
outsb
icebp
pusha
xchg
push
mov
add
inc
rcrl
or
aas
xchg
push
ret
mov
lret
subl
or
pop
sub
aaa
lods
xor
nopl
pop
cmpsl
clc
pop
add
or
xchg
mov
stos
xor
jp
sub
movsl
dec
mov
pop
es
adc
shll
jbe
pop
xor
imulb
in
and
rorb
cmp
adcb
jo
lret
sub
ss
shll
out
cwtl
xchg
xchg
add
fucom
mov
add
and
pop
fwait
jo
icebp
xchg
pop
xchg
es
fnstcw
pop
out
icebp
ss
push
fs
dec
out
loope
push
mov
sti
mov
mov
jns
add
sub
cmc
mov
xor
sub
dec
lret
int
dec
arpl
rclb
int3
scas
inc
cmp
int3
mov
xchg
cmpsb
and
inc
aaa
pop
add
lods
cwtl
sbb
imul
inc
adc
pop
in
imul
movsl
out
sub
pop
cwtl
xchg
and
sti
and
sbb
cmp
sub
push
inc
out
idivl
inc
lcall
icebp
les
loopne
mov
cmpsl
xchg
inc
xor
adc
jb
dec
cmp
adc
popf
fildl
jne
cld
inc
sbb
out
stos
mov
sbb
loop
int3
dec
inc
stos
fdiv
int3
movsb
jmp
pop
aam
sub
stos
dec
dec
pop
fwait
insl
push
ret
std
das
jecxz
sarb
aas
jle
adc
fldl
mov
int3
insb
aaa
xchg
fisttpll
cld
aas
mov
jl
mov
dec
pop
pop
mov
push
mov
es
stc
or
jo
hlt
sub
icebp
ss
pop
daa
into
loop
push
sub
ds
inc
pop
adc
andl
or
clc
or
pop
inc
mov
stos
negb
add
addl
inc
imul
push
mov
mov
mov
pop
test
mov
mov
mov
mov
in
loopne
into
popa
jp
adc
mov
pop
xchg
dec
jb
fldt
xchg
sbb
mov
jecxz
out
clc
decl
repz
arpl
cli
lahf
sbb
push
and
push
in
out
out
cmp
sti
pop
out
mov
lds
mov
sbb
cmp
clc
or
cmp
mov
add
in
adc
jp
les
test
popa
adc
outsl
testl
cmpb
aam
adc
jns
pop
sub
jl
out
cmpsb
sbb
sbbl
shrl
aas
outsl
mov
aam
orb
je
mov
cmc
aas
in
dec
push
cmp
arpl
insl
mov
divl
fidivrs
int3
lds
pop
push
jno
repz
or
jbe
js
sbb
repnz
cltd
addr16
or
sbb
repnz
inc
pop
les
or
jmp
movsb
in
call
cwtl
lds
popa
sbb
xchg
je
xchg
adc
outsb
hlt
enter
sbb
xchg
cmp
mov
in
outsb
mov
dec
movsl
xchg
push
mov
cmp
iret
mov
mov
ret
mov
inc
sti
ss
inc
xrelease
and
test
in
mov
and
gs
stc
pop
push
xor
push
shrl
sbb
popa
xor
enter
pusha
sbb
lods
push
jnp
push
nop
stos
xchg
xor
std
repz
or
adc
aas
into
push
jbe
lds
jge
xchg
adc
das
cmp
aas
mov
xor
xor
decb
inc
sub
pop
iret
gs
loopne
out
xor
add
jb
and
jb
jecxz
loop
insb
xorb
xchg
out
mov
xor
test
add
subb
loopne
adc
faddp
insl
push
cld
dec
out
xor
xor
outsl
mov
sub
xor
inc
inc
and
rcl
flds
xor
jns
daa
repnz
aas
pop
dec
and
gs
push
out
jle
js
nop
add
jb
mov
fnstenv
mov
dec
bound
pop
cmp
mov
sub
push
push
out
fmull
adc
ljmp
icebp
pop
pop
pop
or
pop
or
dec
aas
cmp
mov
insl
xlat
xchg
xor
xlat
sbb
xor
lcall
xor
inc
jle
std
aam
into
fisttpll
enter
dec
jge
lods
scas
in
add
mov
mov
pop
xchg
into
add
and
xchg
add
xlat
jbe
ljmp
imul
adc
cld
stos
mov
enter
jecxz
cmp
dec
dec
iret
pop
and
or
cmpsb
adc
int
sbb
pusha
out
xchg
jno
add
push
mov
mov
pop
sub
lods
add
lcall
xchg
push
or
mov
hlt
imul
das
imul
in
sub
inc
fisubl
cmp
inc
lods
sub
xchg
xor
mov
fisttpll
mov
addb
pop
jecxz
lea
inc
adc
clc
mov
pop
fwait
clc
aaa
jmp
add
xor
xor
lret
xchg
adc
cs
push
je
das
mov
sub
cs
mov
lods
repnz
inc
fcompl
adc
aam
lock
popa
dec
notb
jns
in
mov
cwtl
insl
je
adc
pop
jge
jns
inc
scas
movl
shll
and
mov
jmp
das
or
jge
jmp
xchg
mov
mov
mov
xor
divl
jmp
aas
enter
jno
lret
push
sub
call
mov
adc
mov
sti
pop
or
xchg
orl
xor
stc
add
jnp
add
add
and
stos
movsb
jge
sbb
mov
ljmp
gs
sub
sub
lahf
nop
mov
ljmp
xor
in
in
data16
idivb
xor
pop
outsl
lcall
sbb
xor
sbb
sti
js
in
lahf
mov
in
pusha
shll
std
std
cvtpi2ps
pop
xchg
aaa
mov
adc
mov
leave
mov
jno
out
out
adc
jmp
fs
mov
pop
jmp
clc
scas
testb
loope
push
inc
repz
xchg
push
mov
cwtl
out
call
and
inc
add
sbb
add
jecxz
scas
lret
ret
in
out
daa
out
add
in
pop
fsubrs
mov
shlb
daa
push
xchg
mov
pop
popf
jecxz
push
bound
fs
mov
daa
jbe
or
addb
adc
hlt
pop
cmc
ljmp
inc
mov
jnp
ds
pop
jmp
imul
xchg
pop
outsl
jb
sub
mov
add
dec
xchg
adcl
icebp
mov
enter
insl
adcb
jbe
in
test
push
cmp
ljmp
bound
pop
or
repnz
inc
cmpsl
out
pop
xchg
data16
das
data16
loop
sbb
inc
call
ds
add
xchg
std
lret
pusha
jp
inc
push
stc
xor
sub
mov
mov
outsl
mov
sahf
jo
mov
push
xor
daa
nop
inc
mov
xor
mov
test
jno
cld
push
clc
jne
mov
mov
or
push
hlt
cmp
jb
mov
pushf
js
and
xlat
dec
inc
out
inc
insl
jl
sbb
dec
in
dec
sahf
or
add
add
in
repz
int
sbb
pushf
fmul
pop
or
test
fwait
out
adc
fs
cmc
addr16
jne
mov
xchg
and
jp
leave
jbe
or
addb
iret
cmp
test
subl
stc
push
lods
and
dec
ja
test
dec
xor
jle
aad
mov
jl
dec
sub
and
jge
ror
jnp
leave
sahf
mov
xor
outsb
hlt
push
insl
and
popf
xor
add
xlat
mov
in
call
cmc
insl
jp
xor
ljmp
mov
dec
cmp
or
out
cmpsb
mov
dec
ljmp
ds
pop
iret
dec
insb
sub
add
getsec
icebp
ss
push
int3
js
add
adc
test
mov
loope
jo
icebp
pop
pop
ret
cwtl
or
lret
add
int
mov
dec
or
push
mov
rcll
xchg
pop
adc
inc
cwtl
dec
lea
mov
xor
xor
jns
pop
sub
pop
ret
fldt
xchg
cmp
icebp
sbb
mov
or
jae
cltd
add
cmp
sbb
inc
in
jg
mov
or
test
addl
adc
lret
movsl
iret
dec
icebp
jnp
fxch
adc
mov
xchg
cli
inc
fsubp
jmp
repnz
add
cli
lahf
mov
lds
fwait
push
lahf
xor
std
adc
dec
jns
vpsllw
jne
and
cmp
pop
push
cmc
test
sbb
mov
mov
xchg
and
cmp
push
sar
rcl
or
dec
addb
hlt
fscale
pop
fistl
dec
push
mov
es
push
std
push
cmp
sub
ret
clc
je
ljmp
mov
jbe
adc
and
inc
psadbw
dec
jmp
adc
cmp
mov
xchg
pushf
cld
lcall
movsb
inc
mov
lock
push
jno
fldt
rcrl
push
leave
mov
or
inc
sbbb
bound
cmp
jmp
sub
dec
mov
outsb
xor
pop
fildl
test
dec
loope
lock
stos
dec
loopne
jae
mov
mov
ret
pop
jnp
fimuls
dec
inc
cli
pushf
inc
jbe
xchg
sahf
mov
popf
lret
das
rol
fs
cwtl
stos
jl
dec
lods
and
sub
xchg
ja
or
test
mov
mulb
sahf
dec
cmpsb
cs
rorl
mov
pop
jae
arpl
std
test
test
adc
pop
dec
xchg
add
lea
push
sbb
or
add
repz
fdivrp
pop
push
jg
inc
into
lcall
push
data16
mov
xchg
mov
adc
mov
js
jl
nop
inc
push
movl
fsts
xor
cli
nop
lods
mov
shlb
shll
bound
cs
icebp
push
xor
xor
dec
add
dec
fcomps
les
mov
movsl
xadd
push
jo
idiv
mov
mov
lods
and
cmp
clc
clc
mov
pusha
jne
addr16
jmp
pop
stc
push
jns
mov
jl
shll
mov
sub
ret
mov
int3
sbb
push
mov
in
jecxz
insl
pop
mov
arpl
dec
les
scas
test
xor
push
aam
or
xor
jle
and
pop
and
adc
sbb
out
sahf
sub
pop
js
cmp
pop
mov
fwait
jmp
sahf
and
and
or
push
popf
jle
lock
lahf
lret
int
fdivl
dec
je
shll
repnz
jl
jbe
and
iret
mov
or
sub
fnsave
mov
and
fsubrl
dec
inc
fldenv
es
out
adc
pop
dec
pop
data16
jle
pushf
repnz
or
sti
lods
mov
movsb
adc
daa
iret
es
mov
mov
lret
xchg
jb
jecxz
xlat
movsb
in
mov
xchg
fxch
xor
es
sub
ja
and
mov
mov
cmp
jmp
inc
loope
ja
insb
add
inc
pushf
xorl
cmp
icebp
mov
add
data16
sub
dec
xchg
push
test
adc
clc
adc
push
or
sub
pop
xchg
sti
loopne
xlat
mov
mov
jb
inc
cld
jno
add
sbb
and
mov
mov
cmp
int3
or
imul
test
scas
scas
test
stos
pusha
scas
sub
lret
aas
fildl
add
aas
mov
andl
outsb
mov
rorb
sbb
jns
dec
mov
dec
ror
cwtl
mov
xchg
out
shl
popf
inc
stos
icebp
cld
iret
adc
push
and
sub
inc
out
pop
imul
mov
jns
sub
fdivrl
lock
faddl
bound
sbbl
fistpl
out
repnz
inc
mov
call
outsb
pop
add
or
pop
sahf
adc
in
inc
sbb
mov
mov
fs
pushf
imulb
imul
mov
test
push
cmp
mov
cmp
lret
stos
mov
ljmp
sbb
cmp
push
shrl
pop
jl
dec
or
push
mov
push
mov
xor
add
inc
fstps
mov
aam
push
adc
or
std
testl
mov
in
into
fldt
fs
mov
pop
xchg
adc
add
and
mov
les
mov
jp
sub
test
pop
andb
test
loop
rorb
cs
or
in
test
loopne
mov
lcall
insb
mov
pop
sbb
lea
pop
xor
bound
lods
cld
jne
out
stc
mov
push
sti
mov
jns
enter
pop
push
push
stos
or
lock
sbb
push
xor
add
sbb
fimuls
nop
mov
rcll
cmp
sbb
fsubs
lods
outsl
or
sbb
xchg
cmc
dec
out
inc
mov
cwtl
nop
lret
mov
sub
or
lock
cmp
xchg
cmp
lcall
dec
inc
shl
movsl
iret
in
repnz
lds
pop
cmp
mov
push
cmp
xlat
aaa
push
aas
pmulhw
jecxz
neg
mov
mov
imul
sbb
mov
or
mov
xor
xchg
jo
jl
mov
adc
adcl
fnsave
sub
shrl
xor
xchg
jne
dec
sbb
sbb
inc
inc
daa
push
and
push
xchg
pop
test
into
addr16
push
mov
iret
stos
test
cmp
sub
jmp
nop
dec
pop
cmp
rcrb
push
aad
pop
and
ja
push
fistps
cmpl
imul
aam
out
movsb
movsb
shrb
in
fists
arpl
daa
mov
mov
stos
cmp
mov
lea
dec
push
mov
stos
cwtl
int
sti
clc
cmp
and
cmp
cli
mov
sbb
and
or
xchg
insl
jns
leave
adc
xlat
icebp
in
jbe
out
shrb
int
lahf
dec
pop
inc
and
mov
cmp
popf
jl
sub
mov
push
fwait
out
mov
push
mov
cmp
jns
iret
rcll
mov
cmp
mov
dec
ss
aad
xchg
adc
sahf
mov
std
xlat
xchg
mov
or
push
and
fildl
jmp
sbb
cwtl
popf
cmp
es
or
pusha
mov
mov
ficoml
lcall
repz
push
mov
repnz
xchg
int3
jno
mov
push
or
pop
xchg
imul
cmp
jb
sbb
sub
aaa
int
hlt
in
test
fcomip
mov
idivl
mov
cld
jl
inc
fistpl
adc
jp
scas
cmc
push
sbb
cli
push
dec
pushf
popf
mov
ss
dec
mov
xchg
push
xchg
sbb
lock
repz
aaa
mov
pusha
lds
fidivrl
and
in
jge
cli
adc
scas
inc
scas
xchg
mov
in
into
rclb
notb
sub
imul
loope,pn
int3
dec
repnz
adc
stc
xchg
adc
mov
and
inc
cmpsb
jmp
cli
mov
and
inc
mov
push
push
mov
mov
gs
mov
push
jl
pop
mov
out
mov
das
daa
pop
ret
sar
jb
jne
fwait
and
or
and
pop
out
adc
loopne
mov
dec
add
arpl
lds
test
daa
mov
push
subl
xor
mov
sub
flds
pop
pushf
or
adc
inc
cmpsb
outsb
sub
push
mull
cli
jno
cmp
xchg
xor
and
fcoms
shl
cmp
jp
in
dec
incb
jo
pop
pop
repnz
inc
lods
mov
shl
outsl
inc
mov
mov
sahf
lock
push
and
insb
cmp
cmp
jno
out
and
and
or
rcl
outsl
inc
mov
std
iret
fdivp
test
sub
mov
sub
nop
xorb
sub
stos
mov
jecxz
arpl
sub
mov
xor
ret
cmp
dec
or
sbb
addr16
ljmp
es
or
mov
or
cmp
shrb
cmp
xchg
lods
mov
sub
push
sahf
cwtl
xchg
mov
rcll
inc
jo
xor
xor
subl
mov
call
push
sbb
imul
loope
in
and
neg
clc
cld
repnz
push
int3
pushf
or
in
mov
xchg
pop
cmpsb
outsb
cmc
pop
mov
adc
sbb
loope
fadds
inc
scas
dec
add
insb
push
stc
and
push
in
and
lods
fwait
push
imul
pusha
test
dec
daa
push
sahf
pop
ret
sbb
mov
xchg
mov
pop
xorl
or
sbb
jge
sub
xchg
or
pop
scas
sub
add
andl
sbb
jmp
pusha
cwtl
add
cli
cmp
sti
sub
mov
mov
lcall
lds
sbb
jno
cwtl
mov
aaa
jle
ss
dec
test
pop
mov
call
rolb
rcrb
fldcw
popa
hlt
repz
push
pusha
lea
xor
lods
shrb
xchg
in
or
add
popf
dec
cmc
mov
jle
xor
xlat
pop
cmp
pop
lret
dec
mov
dec
cmp
adc
jl
rcrb
pop
in
je
adc
mov
mov
pop
sub
mov
cmpsl
push
xor
fcomps
pop
sbbl
loopne
inc
addr16
push
test
xchg
and
into
jno
mov
outsl
rcll
pop
xor
hlt
jmp
sbb
addr16
out
pop
sub
sahf
sarl
pop
inc
outsl
pop
cmpb
and
or
cli
data16
sbb
pop
add
push
pop
cmpsl
or
popa
popa
dec
stos
stos
js
push
mov
inc
push
add
cmp
jle
pushf
adc
sbb
dec
sub
outsb
cmp
cmc
mov
and
std
fnsave
fldl
mov
jl
sbb
ljmp
xchg
imul
in
in
adc
nop
lock
pop
lock
loopne
adc
stos
neg
jecxz
das
cmp
loope
stos
inc
cmpsl
inc
test
and
cmpsb
jnp
sbb
shll
xor
dec
pop
xor
mov
push
inc
cmp
je
mov
inc
dec
repnz
dec
adcb
pop
popa
mov
es
xchg
xchg
les
sti
push
mov
and
cmp
cmpb
aas
inc
jno
jbe
cwtl
cli
inc
ja
rol
sbb
or
dec
inc
push
add
add
jnp
fnsaves
lret
or
imul
push
sbb
mov
dec
mov
mov
ljmp
sbb
mov
push
mov
jg
pop
loope
push
push
sti
stos
jb
and
adc
hlt
jnp
and
lods
je
add
outsb
adc
adc
cmp
cld
cltd
cltd
mov
jecxz
adcb
lahf
jg
sbb
enter
scas
cli
orl
stos
push
lret
imul
push
test
or
hlt
cmpsl
lret
loop
dec
mov
inc
and
and
sub
pop
ljmp
cltd
out
mov
es
lods
push
mov
pusha
mov
ret
sub
and
jmp
pop
int3
inc
and
inc
fildl
clc
dec
cwtl
loope
addl
aam
out
stos
lret
xchg
aam
jae
dec
les
test
rorb
mov
push
push
lret
cli
jne
mov
push
test
mov
xor
test
sub
inc
jb
and
mov
insl
movsb
and
dec
scas
popa
stc
and
xchg
out
in
sbb
lods
push
jnp
lea
lods
xor
inc
mov
cmp
xor
cmpsb
inc
dec
divb
xor
pop
daa
subb
je
mov
pusha
jmp
add
ror
scas
jle
clc
jge
cmp
aam
daa
out
filds
ret
jmp
std
dec
and
jecxz
data16
jb
cmp
std
cmp
or
mov
pop
dec
mov
iret
lea
or
inc
std
sahf
add
adc
push
into
subb
lods
dec
mov
sbb
iret
addr16
add
test
cli
es
cmp
mov
xor
and
push
addb
aad
pop
insb
cltd
fists
inc
out
mov
loop
andl
pushf
sbb
dec
aad
sub
jne
int3
int3
out
repz
sub
rclb
and
xor
add
mov
dec
cmpsb
lret
pop
adc
xor
jle
xchg
int
outsl
mov
call
xchg
pop
int3
jae
insb
fs
add
rclb
mov
push
mov
mov
pop
add
push
cli
jno
pop
ja
mov
add
sbb
xor
xchg
push
pop
daa
push
add
mov
cwtl
sti
aas
lods
push
push
cmp
adcl
sub
insl
push
bound
aas
fisttpll
mov
push
sbbl
ss
xor
push
pop
shlb
movsl
mov
mov
add
out
xchg
arpl
scas
aas
cmp
jbe
test
adc
inc
nop
jg
arpl
cltd
mov
push
das
les
iret
idiv
adc
test
shr
sub
mov
adc
lahf
mov
lret
jbe
adc
mov
lcall
cs
sbb
jbe
and
pop
mov
imul
lods
lock
xor
jg
mov
es
mov
adc
fwait
sub
xor
or
xchg
pushf
pop
movsb
arpl
inc
xchg
sahf
sbb
pop
sub
stos
dec
test
int
mov
in
mov
outsl
fcmovne
mov
loope
aaa
xlat
mov
loopne
fisubl
cmpsl
xor
in
jmp
pop
and
mov
xor
adc
mov
jmp
xor
xor
mov
xchg
mov
movsb
into
cmpsl
mov
adcl
add
and
ret
sbb
cmc
arpl
fisubrs
pop
pop
in
xchg
sti
add
fsubrs
or
ja
pop
jg
jnp
and
in
pop
outsl
push
mov
or
jp
lock
faddp
inc
lds
mov
in
sub
cmc
push
test
dec
cs
inc
mov
jl
jne
movsl
insb
loopne
loopne
aad
mov
xor
or
mov
lret
mov
fmull
call
adc
sub
fisttpll
fs
xchg
pop
stos
stc
in
mov
js
stos
int
sub
loopne
mov
aas
dec
ret
add
lds
int3
add
fiaddl
mov
add
loope
hlt
pusha
xchg
cld
mov
push
or
mov
out
cli
push
and
pushf
or
xchg
cmp
loop
xchg
push
adcl
out
ja
insb
jnp
int3
nop
leave
mov
jbe
aad
repnz
js
jp
jp
int3
mov
jnp
push
lea
fstps
push
jnp,pt
xchg
xchg
cmp
ljmp
inc
push
cli
arpl
mov
xchg
scas
frstor
imul
divl
rcrb
adc
sub
sub
mov
mov
cmp
mov
xchg
out
cld
clc
loope
pop
cmp
xchg
and
idivl
mov
addr16
icebp
sbb
ss
sbb
addr16
nop
mov
sbb
add
daa
pop
xor
aad
xor
cmovb
mov
iret
pop
push
fiaddl
pop
stos
push
and
inc
xor
movsl
stc
add
in
incl
dec
outsb
dec
or
das
sarl
lret
jg
jnp
aas
testl
push
gs
pop
push
add
inc
sbb
and
into
and
xchg
pop
and
mov
iret
jg
ffreep
xor
mov
mov
add
cs
inc
data16
lods
sbb
xor
mov
push
daa
data16
sub
inc
xchg
mov
mov
nop
jp
push
xchg
adc
mov
mov
sbb
mov
dec
enter
stos
push
jge
ljmp
inc
pop
mov
int3
cmp
or
mov
jg
adc
and
xchg
test
xchg
lret
movsl
imul
mov
xor
push
lock
outsl
jmp
imul
pop
cmp
adc
push
outsl
fwait
jne
inc
outsl
or
push
jns
jne
das
cmp
cmpsb
fildll
sub
dec
ret
adc
and
or
sbb
add
pop
addb
arpl
out
mov
xor
sub
pop
arpl
lock
repnz
sahf
dec
fadds
jl
in
push
jmp
add
call
mov
scas
jo
movsb
sbb
enter
xor
dec
cli
cmc
adc
pusha
nop
pusha
and
cwtl
mov
iret
and
stos
push
addr16
adc
xchg
addr16
inc
cli
leave
mov
cmc
inc
xor
mov
sahf
icebp
mov
cli
gs
adc
jo
lret
jecxz
stos
dec
dec
sub
js
rolb
test
xlat
jbe
fsubrs
pop
mov
pop
jae
call
push
ret
and
cmp
lret
idivl
fs
add
pushf
fiadds
pop
add
jmp
lea
push
les
jae
sarl
rorl
or
aaa
push
lahf
imul
sbb
loope
mov
push
popa
jecxz
xchg
insl
or
and
mov
shl
mov
xor
inc
xor
jle
xchg
sub
push
dec
mov
adc
loope
adc
dec
sub
call
and
xor
aas
and
lods
cli
add
shr
mov
push
ret
or
mov
addb
add
pop
call
lahf
aam
clc
int
xor
jge
mov
sbb
push
push
xlat
or
sbb
out
xchg
not
inc
push
ffreep
int3
dec
push
adc
test
xchg
in
sbb
pop
dec
dec
adc
or
mov
fwait
aaa
adc
cmp
xchg
jmp
xor
pop
pop
inc
sbb
push
and
sahf
inc
into
pop
shlb
rorb
leave
sub
mov
xchg
sub
cmpsl
lea
xorl
leave
and
pop
sti
les
inc
dec
addr16
mov
pop
sub
movsb
loopne
cmp
pop
push
mov
lea
jno
lret
stos
adc
ljmp
mov
rorb
or
mov
sbb
fcompp
mov
inc
aad
aas
jle
int
pop
insb
rep
sbb
or
jo
repnz
cli
sub
mov
jle
dec
in
jne
dec
pop
in
jb
mov
dec
test
arpl
inc
xchg
mov
fs
popf
push
jecxz
lcall
mov
popa
int3
shll
mov
pop
jb
int3
bound
lock
imul
mov
dec
xor
lods
lcall
fdivrs
jne
pop
dec
xor
in
sbb
sub
add
xchg
mov
lret
daa
push
pop
cmp
call
add
cmp
jg
inc
movsb
xor
inc
add
insb
mov
loop
repnz
sub
psadbw
inc
insb
test
fdivrp
and
packuswb
jge
aam
shr
outsl
cltd
jmp
cmc
pop
adc
out
ficompl
adc
add
cwtl
test
jle
ret
movsb
loop
pop
call
sub
rcr
in
adc
inc
mov
fmul
sbb
xor
or
loop
mov
mov
cli
inc
mov
push
mov
fnstenv
sbb
add
dec
jl
jl
and
push
dec
pusha
dec
mov
movsl
pusha
jl
sub
in
push
sub
push
movsb
mov
mov
bnd
lea
rolb
mov
fldcw
xchg
xchg
aad
adc
ds
xchg
inc
js
push
push
mov
lds
out
add
das
fidivl
stc
and
inc
js
mov
lods
imul
daa
ret
mov
subl
cmpl
mov
ret
lret
shrl
push
les
out
dec
fldt
mov
mov
mov
push
sbb
pop
mov
in
mov
lds
mov
mov
or
push
pop
out
cmp
cmp
add
fnstenv
jmp
loope
adc
sub
cmpl
loopne
jns
aas
jp
stc
sahf
call
dec
test
ds
inc
pop
mov
repnz
or
loop
aaa
cmp
testb
jbe
jnp
sub
repnz
push
dec
jne
subl
mov
outsb
or
dec
sub
sbb
push
lods
aaa
bound
sahf
insb
daa
test
test
inc
in
mov
enter
xor
mov
jnp
loopne
inc
movd
mov
repz
inc
mov
inc
in
dec
inc
cld
inc
loope
or
mov
in
pop
out
dec
scas
sbb
inc
xor
inc
inc
aad
fdivs
insl
sub
push
fisubrl
scas
out
jmp
js
out
mov
outsb
or
add
sub
stos
imul
dec
adc
mov
xchg
sti
mov
mov
lret
aam
jo
shll
repz
xor
jmp
add
jb
push
ja
and
jl
int
cmp
shll
subl
and
xchg
pushf
jmp
push
nop
mov
cwtl
ja
sarb
pop
mov
jbe
subb
add
popf
push
mov
jmp
hlt
adc
clc
adc
mov
xchg
pushf
cld
dec
aas
pop
mov
loop
jb
and
pushf
adc
fisubrs
add
call
stc
fcmovnbe
insl
push
mov
pop
lods
mov
xlat
cmpsb
ja
jl
clc
inc
inc
ljmp
stos
push
int
sarl
scas
mov
les
cmp
negl
sub
out
imul
push
cli
test
mov
sub
and
push
das
push
ja
icebp
inc
pop
jnp
push
and
pop
jl
mov
lds
push
enter
xor
push
pop
dec
adc
cmp
or
pop
push
fcom
lahf
int
ficoml
loopne
xchg
jns
dec
mov
repnz
test
sbb
inc
ss
pop
inc
pushf
sub
out
sti
dec
andl
or
je
cwtl
bound
xchg
aaa
sbb
loop
cmp
xchg
sti
mov
inc
dec
inc
pop
jbe
push
xchg
push
dec
mov
mov
js
sbb
popa
adc
sub
rol
xor
int
jno
and
pop
pop
jge
fs
fmull
inc
adc
divl
sbb
shlb
jae
jge
dec
fdivl
sahf
sub
int
xchg
addr16
mov
fists
gs
jge
add
lret
pop
fiaddl
xor
fisubs
loopne
cmp
pop
daa
hlt
out
nop
lods
pop
jbe
add
xchg
mov
and
rorl
shlb
icebp
jae
cmp
pushf
mov
adc
push
sub
aaa
in
and
dec
sub
popa
xor
mov
shrl
xchg
sti
data16
je
pusha
adc
or
mov
pop
enter
jb
mov
arpl
pop
jb
xchg
hlt
mov
call
mov
xor
push
sub
pop
push
cli
push
add
aaa
adc
push
addl
and
sbb
pop
subl
cld
mov
daa
je
pop
in
xor
aaa
stc
push
mov
in
comiss
jnp
cmp
aas
aam
xchg
and
xor
inc
push
and
sahf
rorl
dec
dec
lock
loope
fwait
daa
dec
mov
xchg
jne
in
aaa
rcrb
mov
xchg
or
and
jb
add
sub
loope
xchg
cmpsl
aaa
push
jne
scas
pop
insl
pop
xchg
or
sbb
jmp
adc
cmpsl
stc
xlat
jbe
fs
xchg
andb
mov
push
mull
sub
dec
cmp
jno
xchg
jae
jge
lret
testb
sbb
xchg
cld
push
push
mov
call
js
cld
into
test
testb
sar
ja
sub
jl
xor
push
xchg
dec
stos
pusha
insl
scas
repz
push
andl
push
sub
bound
ret
mov
fcmove
cltd
out
mov
mov
cmp
sub
xchg
call
call
gs
loope
xchg
pop
scas
sub
lock
add
inc
push
cmp
mov
adc
shlb
test
ret
xor
enter
or
insl
jmp
add
in
stc
mov
jle
cmp
popa
mov
push
lcall
cmp
ljmp
test
push
bound
lcall
into
and
push
jge
in
inc
sbb
add
pop
jb
movsb
xor
js
cmp
dec
jmp
outsl
clc
dec
mov
pop
ja
dec
adc
call
shl
add
es
sbb
lahf
aas
inc
int
loope
bswap
xor
mov
jae
mov
bound
dec
into
mov
in
sub
xchg
push
adc
fmuls
cmp
pop
pop
mov
jne
xchg
sarl
add
pusha
xorl
add
mov
push
insb
je
mov
xor
je
or
test
int
and
mov
mov
out
repz
xchg
pop
sbb
ljmp
sbb
inc
adc
outsb
cmp
pushf
imul
mov
xor
or
cmp
cmpb
pop
leave
ds
push
add
leave
loop
jns
xor
cmpsl
and
cmp
mov
sub
jae
pop
gs
push
and
je
inc
lock
sbb
mov
jae
cmpsb
sbb
rcrb
cmp
mov
dec
test
fmull
or
dec
sub
es
push
fsubrl
rorl
add
or
js
sbb
adc
pop
mov
mov
call
fucomi
pop
mov
rol
mov
cmpsl
sub
call
mov
or
adc
mov
jbe
sub
pop
inc
pop
test
fidivrs
test
aam
repnz
sub
dec
push
popa
xchg
jge
pop
mov
mov
jmp
xchg
aam
cli
ret
add
mov
jnp
or
jne
pop
xor
cld
add
add
mov
mov
adc
aam
repnz
bnd
jg
push
nop
inc
cmp
and
add
pop
adc
jno
push
pop
xor
xchg
adc
in
stos
mov
sti
in
xor
sbb
jnp
add
out
daa
stos
mov
mov
in
mov
rcrb
jle
or
and
test
std
mov
movsl
shl
mov
mov
int
pusha
in
jb
push
jle
sub
dec
insb
mov
rcrl
les
pop
xchg
pop
popf
sbb
add
and
jl
fwait
jg
mov
loop
sahf
lahf
and
andb
aad
xor
in
cmp
test
and
addr16
out
xor
mov
push
sahf
pop
xchg
mull
pop
cmp
cmp
mov
and
adc
sbb
sbb
xor
fdivl
mov
xchg
mov
xor
add
mov
mov
or
push
cmc
inc
stc
popa
add
lods
mov
mov
mov
in
mov
scas
stos
mov
repnz
mov
shll
dec
stc
pop
rol
imul
push
mov
jb
fldl
cmp
aad
inc
cmpsb
repnz
jge
sub
scas
and
sbb
lar
jecxz
push
movsb
push
adc
out
pusha
or
xor
mov
std
add
and
ljmp
aad
test
inc
mov
out
jns
dec
out
nop
pop
push
mov
jg
cmpb
jb
push
mov
test
inc
pop
cld
das
fwait
aam
cmp
je
mov
sub
mov
decl
inc
fdivr
sbb
pushf
iret
fldl
sbb
cltd
cmpsb
mov
out
roll
xchg
sub
mov
ficoms
and
pop
aas
in
mov
out
rclb
inc
movsl
aaa
in
pop
loope
cmp
lret
pop
push
hlt
jbe
jge
sbb
add
das
mov
das
inc
bound
imul
mov
adc
sbb
ljmp
sub
fdivrs
sti
xorl
jb
iret
dec
repnz
inc
or
cmp
jno
repnz
adc
lods
xchg
repnz
outsl
sub
lds
push
pushf
call
adc
ret
push
loop
into
flds
sbb
add
adc
and
mov
bnd
sar
mul
jg
imul
xor
pushf
fildll
insl
xchg
lret
mov
pop
inc
mov
sarl
inc
int
sub
push
pop
popf
js
and
or
mov
sbbb
push
xchg
idiv
lcall
ljmp
fisttpl
lods
aas
cli
int
inc
cmpsl
or
inc
jecxz
xor
or
repz
enter
or
xchg
in
push
ss
push
jo
rcrb
gs
and
push
mov
in
mov
sarl
aad
sub
jl
jno
fwait
lahf
pop
fs
idiv
and
push
in
ds
cmp
in
mov
lret
mov
jne
push
dec
fld
jns
inc
and
push
jae
push
enter
je
iret
pop
cmp
lret
add
add
mov
fwait
ss
pushf
dec
sahf
adc
or
sbb
setns
or
mov
jmp
aas
adc
jecxz
enter
sbb
testl
shr
sbb
push
in
inc
movsb
jge
dec
xor
xor
inc
push
fwait
call
and
jns
loop
pop
test
into
lds
out
in
pushf
sbb
mov
jl
test
ljmp
add
and
pop
xor
cwtl
stos
jp
jge
filds
call
clc
add
fstpl
lds
or
fwait
lods
fimuls
xchg
sbb
sbb
leave
push
scas
test
sti
push
mov
lcall
inc
mov
push
mov
pop
push
shll
sub
jae
std
push
aaa
cld
xchg
mov
cli
pop
xchg
outsl
aad
xchg
xchg
insl
sahf
xor
cmpsb
or
mov
int
in
xchg
leave
popa
push
fwait
aaa
aad
dec
jbe
xchg
repnz
inc
jmp
aas
test
xchg
pop
mov
push
out
cmp
inc
fsub
repz
cmpl
repnz
mov
sbb
cmp
nop
jp
xor
je
in
sub
sub
jp
jno
cmp
lret
xor
push
mov
pop
stos
es
insb
jno
fisttpl
mov
scas
mov
out
sbb
mov
cmc
ljmp
int3
inc
loope
hlt
fmull
mov
loop
pushf
mov
jb
add
int
fidivrs
xor
jecxz
inc
xorb
sbb
mov
dec
cld
es
jge
mov
xlat
mull
adcl
add
xor
fidivrl
add
and
sti
cmp
push
data16
mov
es
scas
and
icebp
sbb
fstps
es
imulb
mov
scas
js
leave
xor
pop
adc
xchg
mov
add
mov
xchg
nop
or
clc
pop
add
out
sub
int
cmc
pop
sub
adc
sbb
in
or
lcall
pop
and
inc
ret
in
push
out
lds
xor
pop
in
arpl
push
mov
xchg
adc
xor
mov
fisubs
mov
cmp
xor
cs
fwait
bound
scas
adc
adc
sub
pop
pop
inc
xchg
fisubrs
push
iret
jb
lods
ds
mov
cmp
imulb
flds
pushf
test
cwtl
xor
adcb
cmp
jb
dec
idivl
mov
or
or
sbb
fbld
aam
push
inc
sti
adc
mov
test
imul
mov
and
hlt
inc
xor
push
sub
repnz
jmp
adc
pusha
add
insl
jge
push
js
pop
xchg
adcl
outsb
xchg
cmpsl
and
out
push
aam
mov
mov
ret
mov
and
xor
push
js
sub
cmpsb
inc
cmp
mov
pusha
jge
adc
push
add
or
xchg
shll
out
pop
inc
mov
out
lods
roll
in
mov
fs
jp
sti
icebp
mov
popf
les
scas
je
inc
pop
xchg
push
cmp
adc
sar
jmp
test
mov
fisubs
sub
mov
iret
in
orl
push
mov
or
loope
mov
push
pop
outsb
aas
fstpl
push
jae
fdivl
out
mov
mov
sbb
scas
cmpsb
fisubl
xchg
push
pop
or
mov
pop
fimuls
movsl
test
cmpsl
jo
xchg
insl
in
sar
sub
lret
into
aaa
mov
hlt
inc
adc
shrb
mov
add
ret
sub
push
mov
mov
xlat
or
lea
push
cltd
in
push
push
das
dec
jbe
sti
adc
xchg
pop
push
dec
sub
pop
push
cltd
rcrl
rcll
leave
das
or
ficoml
mov
dec
pop
cmpsb
and
cli
lret
or
sbb
fnstsw
jae
push
call
add
lds
and
ss
xlat
lret
gs
dec
fwait
dec
mov
enter
stos
pop
mov
push
xchg
sub
repz
xor
adc
call
fxam
fs
xorb
adc
ss
sub
xor
pop
fwait
and
jbe
mov
je
add
addr16
out
xor
es
orl
ja
push
daa
test
test
in
test
sub
lods
cmp
cmp
xor
pop
ret
lret
aam
daa
shr
lock
jmp
out
icebp
std
lea
loope
mov
sarl
hlt
xchg
cmp
or
lcall
push
mov
insl
mov
aam
and
mov
dec
pusha
push
mov
jo
das
xchg
ja
push
sbb
insb
pop
fst
fimull
out
mov
xor
mov
jge
mov
or
scas
pushf
xchg
adc
push
inc
xlat
jae
sti
add
adc
sub
pop
xchg
clc
adc
dec
jmp
int3
xchg
loope,pn
mov
push
mov
xchg
es
paddusb
mov
cli
mov
je
mov
ret
gs
inc
jp
ljmp
mov
outsl
cmp
mov
fdivl
roll
out
fisttpl
daa
cmp
fiaddl
or
dec
jns
or
jecxz
push
popf
xor
out
ss
notl
cmp
fdivrl
jb
scas
mov
gs
pusha
aam
xor
push
mov
fstl
push
pop
mov
cmpsb
fistpll
loopne
scas
nop
xchg
lret
sar
jbe
xchg
mov
xorb
imul
sbb
pop
xor
adc
aam
popa
jmp
or
xor
sub
lcall
sub
icebp
add
sbb
inc
addr16
or
and
out
sub
xchg
dec
leave
mov
xlat
lock
fwait
sub
gs
fcompl
xchg
push
aam
icebp
stos
sub
lods
dec
insl
and
adc
fcomps
mov
out
jge
inc
aaa
outsw
mov
pop
shrl
mov
push
jb
roll
stos
push
hlt
jp
leave
mov
mov
mov
in
xor
test
icebp
in
outsb
mov
in
sbb
mov
jns
inc
add
in
ret
jg
xchg
cli
pop
dec
xchg
sahf
fdivrl
sbb
test
sub
and
dec
movnti
lods
dec
cld
jb
adc
mov
push
test
adc
in
cmp
pop
scas
add
cmpsb
fwait
fdivl
nop
push
in
cmp
mov
fwait
lds
jnp
push
mov
dec
sub
aas
or
pop
add
dec
sub
dec
movsb
and
std
push
push
jmp
frstor
pop
popf
xor
jge
mov
aas
dec
and
daa
cmp
movsb
and
cmc
dec
pop
adc
pusha
jne
inc
add
ffree
sbb
sub
aam
daa
xor
add
test
inc
pop
dec
cmpsb
sub
lods
mov
xchg
out
shrb
push
aam
xor
cli
mov
ljmp
xchg
push
int
into
mov
jge
xor
test
jg
outsl
xchg
xchg
xor
xchg
dec
repnz
mov
or
testb
xor
adc
jl
cltd
movsl
enter
mov
lods
cmp
dec
pop
sub
sti
xchg
cmp
lods
or
lret
xchg
cmp
arpl
lods
das
add
leave
test
test
mov
mov
fucomi
or
xor
cmp
in
out
push
iret
sub
xlat
lds
shrl
outsb
xchg
jbe
add
mov
jns
stc
cltd
sub
inc
mov
mov
ljmp
add
sbb
adc
push
outsl
clc
mov
mov
stos
xchg
aad
sub
aaa
and
push
push
insb
pushf
push
das
mov
cmpsb
imul
push
inc
pop
sub
cmp
pop
addps
je
cmp
mov
inc
mov
sub
xor
js
lahf
lcall
dec
add
cs
push
mov
daa
mov
cmp
add
mov
fs
push
in
add
insl
jnp
or
dec
icebp
mov
lret
mov
inc
outsl
in
test
lods
ss
pop
into
fdivl
ffreep
add
jbe
sbb
mov
push
gs
fcomi
dec
xor
adc
faddl
into
xor
or
sub
jmp
lds
dec
popf
cli
sbb
mov
stos
jecxz
stc
add
xchg
insb
push
push
ljmp
outsb
iret
cmp
popl
mov
mov
sarl
push
xorb
push
cmc
and
dec
aad
flds
or
cmp
cmp
and
fs
sbb
int
pop
int3
call
push
push
mov
jae
mov
js
lret
xor
pop
sub
sti
adc
mov
or
jge
ret
outsl
pop
mov
push
scas
dec
dec
imul
subb
dec
push
mov
lret
add
xor
sub
lods
arpl
out
outsl
stos
or
sbb
push
mov
adc
popf
push
sbb
or
mov
insb
pop
sbb
ftst
in
sub
xchg
cmpl
or
in
mov
mov
lcall
iret
iret
dec
ds
mov
cmp
jb
push
fwait
in
insl
in
jo
aas
xor
stos
lock
adc
and
pop
dec
or
int3
stos
dec
loop
imul
xor
xchg
sbb
jbe
ds
lret
shll
xchg
enter
mov
leave
mov
icebp
adcl
pop
cmpsb
ss
fcoml
hlt
and
cmp
push
push
jae
cwtl
add
scas
push
shll
out
outsl
dec
dec
scas
testb
pop
imul
and
mov
push
xchg
imul
or
insb
iret
lds
daa
ljmp
push
int
jae
fwait
sti
inc
push
pushf
rclb
xor
fistpl
jo
xchg
lret
jbe
inc
mov
in
jg
mov
outsb
inc
sub
sti
pop
xchg
jge
shll
and
mov
lds
add
inc
hlt
popa
sbb
jns
repnz
in
pop
test
jae
je
xchg
aaa
and
sub
mov
rorb
lds
icebp
icebp
cmp
stc
lea
das
mov
xorl
imul
cmp
and
fnstenv
movsl
xor
or
inc
in
in
add
fiaddl
inc
jp
mov
out
sarb
in
mov
sbb
lcall
xor
jbe
cmp
gs
jmp
add
and
scas
pop
lea
mov
lds
xchg
jp
mov
daa
in
xchg
clc
pop
int3
and
fadds
mov
xchg
or
popf
insb
out
mov
mov
ljmp
add
inc
test
push
pop
leave
and
clc
shlb
jl
test
adc
ret
sub
dec
pop
lcallw
cmp
ljmp
fdivl
aad
lcall
add
mov
adc
stos
adc
out
fisubrs
inc
dec
cmpsb
outsb
ficoms
loop
push
insb
inc
in
repz
mov
jmp
out
xchg
or
popf
lock
daa
pop
cmpsl
fisubrl
mov
pop
fistps
loope
sub
xchg
int3
push
cmp
push
addr16
rolb
fcmove
imul
outsl
sbb
sbb
push
inc
jne
inc
lock
fisubrs
lods
iret
lret
xchg
in
dec
cmc
cwtl
pop
cmc
push
push
outsb
or
inc
stos
cli
das
ret
ret
or
add
iret
mov
stos
pop
ss
stos
std
pop
xor
pop
inc
dec
outsl
xchg
cmp
pop
or
cmp
inc
movsl
mov
push
mov
push
daa
inc
lcall
jg
jge
shl
jbe
mov
ja
xor
add
out
jmp
roll
ss
mov
xchg
scas
in
and
fcomip
xchg
outsl
add
or
jl
popf
jmp
sbb
andb
push
scas
mov
sbb
scas
mov
dec
fstpl
dec
or
push
dec
test
cmp
dec
imul
fcmovnu
stos
mov
arpl
xchg
xchg
jecxz
out
jle
pop
sbb
jmp
cmp
mov
sahf
sbb
aaa
int
adc
adc
push
push
jb
sub
enter
pop
add
mov
pop
stc
or
cmp
loop
push
add
decl
outsl
hlt
push
shl
pop
pmulhw
jnp
nop
mov
sub
dec
leave
or
xor
dec
movsb
mov
outsb
test
sbb
push
sub
push
fadds
es
push
mov
adc
outsb
cmp
xor
xchg
fidivl
cs
cmovp
stos
daa
lds
out
xchg
jo
ds
cmp
mov
push
mov
out
loop
lahf
lods
xor
jo
stc
sti
and
aas
xchg
cmp
inc
out
repz
pop
ljmp
in
cmp
std
aas
es
int
cmp
dec
and
mov
mul
andl
or
bound
adc
loopne
dec
mov
lcall
arpl
mov
or
mov
push
mov
cmp
and
adc
xor
sti
cmp
lret
test
cmp
test
stos
rcrl
test
fdivrs
sub
cli
inc
and
jb
jb
aaa
mov
sbb
fstps
fstp
mov
pusha
inc
cli
xor
push
sub
lock
inc
jns
sub
push
out
mov
lret
and
adc
fs
jg
inc
mov
sahf
pop
add
cmpsl
inc
pop
ficoms
loope
rorl
mov
aam
addb
mov
arpl
sbb
inc
dec
lock
stos
xor
jb
push
xorl
and
dec
ficoml
inc
mov
push
ljmp
adc
loope
insb
jns
jl
or
test
nop
mov
fadd
push
pushf
jg
hlt
mov
sbb
les
sub
inc
sbb
pop
pushf
sub
int
sub
jmp
sbb
push
adc
les
les
xchg
cmpsl
cmc
xchg
dec
in
and
or
sbb
and
mov
rolb
out
std
xorl
xchg
scas
mov
aad
ret
add
int3
cwtl
cmp
mov
push
sbb
push
sahf
xor
add
lahf
inc
gs
sbb
adc
or
xchg
pop
mov
mov
cmp
or
push
je
push
pop
or
pop
ret
fs
fldt
mov
mov
call
push
cmp
lea
mov
mov
stos
jo
push
jge
pop
push
sub
jae
jnp
imul
xor
adc
subl
pop
test
sbb
rcrl
or
adc
shrl
adc
push
movsb
and
xchg
ss
mov
mov
xor
aam
fistpl
aam
outsb
rorb
es
imul
cmc
sarl
test
or
cs
int3
popf
pop
push
ret
mov
inc
daa
adc
cmp
sub
js
test
shrl
mov
nop
xchg
mov
lock
mov
cmp
inc
cwtl
jb
cmp
xchg
push
cwtl
dec
js
pop
into
mov
insb
push
outsl
dec
mov
xor
stos
mov
cmpsb
pusha
fidivl
insl
imul
sub
lret
ljmp
xchg
dec
call
lock
pop
jb
cmp
pop
sbb
cmp
data16
jecxz
jb
mov
rcrb
pop
dec
out
gs
and
adc
sub
inc
pushf
sbb
sbb
mov
jne
loop
add
pop
mov
xchg
cmp
addl
loope
xor
push
jne
in
in
out
fists
cmp
orl
xor
mov
cmpsl
push
and
ljmp
scas
int
xor
mov
repz
ret
mov
sbbb
or
xor
xchg
int
jmp
pop
sub
cwtl
nop
fdivl
add
dec
add
pop
push
dec
fdivs
xlat
lea
lds
jne
scas
sub
dec
repz
lret
ret
mov
das
xchg
cmp
xor
pop
jae
popf
push
aas
inc
outsb
xor
das
cmp
sti
shll
fdiv
mov
mov
lret
add
mov
bound
jb
adc
or
test
or
dec
mov
popa
int3
lahf
jle
sbb
mov
and
out
loopne
arpl
ja
mov
jno
jne
sub
jle
or
and
adc
dec
dec
in
add
sarb
mov
mov
call
mulb
pop
or
in
mov
test
fcomip
int3
xchg
js
mov
and
aad
pop
jb
jle
push
sbb
lret
add
lret
mov
inc
xorb
cmp
clc
inc
fists
push
int
fwait
popf
xor
jle
imul
mov
or
mov
or
cmp
je
inc
fistps
addl
mov
xor
std
bound
inc
lods
adc
dec
daa
aam
scas
and
movsl
pop
sbb
outsb
push
sub
mov
push
out
sbb
sbb
mov
iret
jmp
cltd
shl
mov
and
mov
and
repnz
mov
pop
scas
adc
lcall
inc
mov
rcrl
jmp
setbe
sub
int
pop
jp
inc
fidivl
ret
icebp
jns
cmp
fsubs
out
fadds
add
aam
and
sub
inc
jb
jp
add
dec
fs
lcall
adc
ljmp
push
inc
cmpl
jle
cltd
bound
push
xorl
call
sahf
add
jg
int3
fs
or
xchg
mov
insb
lods
popl
test
xchg
fstpt
cmp
inc
or
jbe
fmul
sbb
cmpb
lea
xlat
pop
inc
adc
add
jae
dec
loopne
jecxz
push
push
ss
and
loope
xchg
xorb
repnz
pop
enter
lea
dec
arpl
aas
scas
aaa
popf
sbb
rcll
inc
inc
cmc
popf
mov
jae
push
pop
push
sub
ror
pop
mov
subl
jne
pushf
sub
in
insl
out
or
mov
shrl
sbb
cmp
lea
out
je
shll
ret
cmp
adc
int3
add
jno
sbb
stos
pop
push
negl
cmpsb
cmp
mov
leave
push
lods
in
std
lock
jne
jae
fstpt
lret
inc
mov
push
xchg
dec
and
mov
or
push
out
add
ss
xor
in
mov
mov
or
cmp
sbbl
fcoms
addr16
mov
xchg
dec
movsl
mov
lods
push
mov
add
jle
loop
out
pop
jnp
inc
pusha
clc
sbb
scas
mov
loopne
push
push
clc
out
into
ret
inc
xchg
push
jno
or
scas
imul
out
and
out
and
into
stc
sbb
lock
test
jae
jecxz
ror
gs
push
pusha
std
cmp
lds
lret
in
or
xchg
cltd
pusha
mov
xchg
inc
cmp
sarb
in
xchg
xchg
xchg
xor
cltd
sbb
cld
testb
adc
lret
das
inc
lahf
push
in
lahf
rol
fisttps
filds
rol
aam
cmp
xor
dec
cmc
push
cmovnp
jl
sub
aam
pushf
or
dec
push
push
adc
out
mov
mov
pop
xor
mov
pop
sbb
fmull
push
xorb
ss
insb
jg
imul
ljmp
out
push
cmc
dec
mov
outsb
inc
cmc
test
ret
push
fnsave
daa
and
pop
push
fcoms
jp,pt
stc
icebp
test
push
sub
stos
sbb
divb
shr
sub
test
add
xchg
push
adc
dec
sub
loop
lret
or
arpl
not
ljmp
cmp
add
sbb
mov
and
imul
test
mov
add
pop
icebp
sbb
mov
cltd
or
pop
adc
imul
pusha
mov
mov
fadds
dec
mov
mov
mov
mov
sarl
sahf
popf
xor
or
ret
mov
or
arpl
cmp
shrl
sub
and
sub
lds
int
jmp
fldt
mov
push
push
pop
dec
shlb
ret
in
lret
test
lods
sbb
test
mov
out
push
cld
mov
cmp
add
loopne
out
jp
fcoms
xchg
addr16
add
movsl
pop
icebp
fdivs
fwait
push
xlat
sub
clc
fmulp
push
push
xchg
or
into
fnstcw
aad
popf
je
daa
and
xor
sub
sbb
mov
sgdtl
jb
push
movsl
xchg
pusha
jle
jle
loope
xor
iret
je
jecxz
mov
je
outsb
push
out
jnp
mov
xchg
pop
sub
popf
push
jo
ds
aad
inc
dec
inc
out
ret
push
push
ljmp
cmp
mov
jle
mov
stos
cmp
xchg
out
and
push
lcall
pop
lcall
jl
sub
cwtl
loop
xchg
and
sub
in
cmp
jnp
stc
or
sbb
sahf
je
les
mov
fcmovne
inc
mov
in
in
pop
fisubrl
jb
ljmp
subl
rcll
add
sbb
mov
mov
leave
xchg
cs
xchg
movsb
ja
xor
out
shrb
dec
cmp
add
enter
sub
sarl
mov
dec
xchg
or
pushf
fdivrl
push
js
mov
lds
add
jecxz
push
and
sbb
lret
adc
les
int
xchg
dec
popf
les
fistpll
mov
dec
leave
cmc
in
andl
pop
aad
xchg
lock
pop
mov
mov
fnstenv
push
lret
push
sbb
repz
fs
outsb
mov
mov
outsb
mov
sbb
push
mov
aas
pop
popa
mov
pop
push
adc
jb
in
push
mov
pop
sbb
mov
sahf
cmp
inc
xchg
lods
out
jmp
and
mov
subb
sub
lret
and
dec
mov
out
cmp
inc
repnz
mov
out
in
inc
and
add
push
inc
jns
jp
int3
jle
jae
jmp
mov
jne
jne
mov
test
repz
pop
sub
shl
mov
arpl
mov
repz
insb
arpl
insl
dec
cld
adc
loopne
xchg
mov
ret
into
xor
adc
jne
dec
or
fdivl
mov
jecxz
ljmp
jb
pcmpeqw
jle
fdivrs
mov
pop
sbb
sbb
pop
sub
lret
add
push
sub
add
inc
pop
das
dec
xchg
popf
jg
push
xor
fcoml
push
rclb
dec
xor
xchg
popa
roll
mov
into
rcrl
xchg
fistpll
call
sbb
fdivrs
mov
mov
dec
mov
insl
push
jmp
push
test
test
ja
mov
pop
mov
mov
loopne
out
jns
mov
sub
or
sub
dec
push
push
jl
or
ljmp
sahf
pop
ja
imul
out
push
arpl
xor
notb
xor
scas
sub
push
add
mov
jb
jg
inc
int
jne
jno
push
repz
mov
testb
sti
pop
mov
jecxz
xchg
xchg
cmp
outsb
shl
pop
jnp
push
mov
jne
es
aad
shlb
test
mov
dec
mov
shlb
pop
inc
repz
mov
pop
and
shlb
push
insl
mov
orb
nop
repnz
fwait
jle
ret
mov
mov
cmp
dec
cmpsb
icebp
mov
sti
mov
jno,pt
and
movsl
imul
or
int3
and
and
mov
push
add
sahf
pop
xchg
pop
fstpl
fs
pop
and
push
jge
xor
cmc
dec
test
push
sbb
fmull
movsl
add
fwait
inc
xchg
cmp
dec
or
cmpsl
fdivl
or
lea
in
mov
cmp
fsts
cmp
pop
out
cli
out
rcll
jns
sbb
jno
in
sahf
lea
xchg
cli
movsl
sbb
inc
ficompl
mov
xchg
jmp
pop
mov
xchg
pop
fdivl
adc
loope
mov
sbb
lea
inc
pop
loop
jae,pn
and
add
inc
sbb
andb
jnp
es
call
jmp
fdivrs
out
test
jp
fdivrp
pop
jle
enter
jnp
xchg
enter
pusha
push
scas
cld
fstpt
je
xchg
jp
or
push
push
push
push
roll
push
inc
jg
sub
pusha
popf
or
imul
mov
mov
cmp
lcall
xchg
pop
push
lret
and
inc
inc
add
cmp
cmp
push
movsb
loope
ret
scas
mov
add
les
mov
cmpsb
sub
movsb
fwait
idivb
push
mov
push
dec
adc
inc
movb
fsubl
add
jnp
out
push
call
repnz
jno
xchg
sub
push
scas
cld
inc
jle
jl
dec
lods
adcl
lahf
or
push
cmpsl
jb
lods
sbb
iret
or
test
loop
jne
std
jle
out
sbbb
mov
pop
mov
push
test
xor
fsts
add
filds
sub
inc
pop
nop
inc
jecxz
insb
pop
pop
or
out
pushf
pop
into
popf
sub
and
dec
pop
mov
gs
ds
sbb
aaa
aam
cmp
fimull
push
xchg
add
sub
or
call
orl
dec
lcall
dec
inc
or
dec
fxch
jle
daa
xor
ds
scas
mov
imul
lret
iret
add
and
mov
js
cmp
fnstenv
mov
mov
and
add
dec
add
push
sub
scas
popf
cltd
xchg
dec
xor
mov
add
xor
pushf
xchg
mov
push
mov
cmc
mov
mov
vcvtss2sd
iret
in
scas
lcall
pop
jg
cmp
push
rcl
sbb
lock
sti
lock
lods
or
mov
insl
cmp
mov
or
pushl
scas
adc
subl
dec
pop
pushf
sbb
rclb
test
fstps
sub
push
pop
aad
mov
inc
sub
jo
pop
rcl
mov
dec
lock
stos
jnp
sub
xchg
xor
shll
xchg
fwait
movsb
ret
cld
rorb
jno
fmull
xchg
push
pusha
sbb
movsl
sbb
inc
push
lock
adc
cmc
mov
je
push
divb
inc
dec
push
or
hlt
dec
mov
xchg
adcb
aaa
or
dec
mov
inc
idivb
loope
insl
lss
pop
mov
sti
dec
outsb
mov
push
xchg
mov
jmp
lahf
jge
bound
ss
lods
aad
or
cmp
or
push
adc
test
add
test
jg
adc
or
clc
data16
aas
inc
lret
jno
xchg
cmpsl
jbe
mov
aad
lahf
pop
bswap
xchg
cmc
pop
dec
mov
pop
sbb
sub
lcall
mulps
fs
test
push
clc
jne
fwait
test
decb
or
adc
jmp
imulb
sti
cltd
loopne
push
lret
bound
aam
lds
lret
xchg
popf
lret
out
enter
test
mov
lahf
out
movsl
or
or
movsl
dec
lods
test
push
mov
mov
loope
jmp
ljmp
movsl
aam
add
arpl
fsubl
loope
in
adc
xchg
inc
cltd
push
gs
inc
and
pusha
inc
xor
sbb
ret
dec
divb
jmp
scas
shll
pushf
int
frstor
imul
add
dec
das
dec
cmp
dec
pcmpgtw
mov
or
lock
or
xchg
push
std
add
lods
sbb
in
pop
gs
adc
std
movsl
insb
loopne
xor
xchg
sub
in
push
loope
data16
pop
out
push
mov
lahf
insl
shl
dec
bound
mov
pop
cltd
shl
popl
jl
mov
pop
loopne
test
pusha
mov
mov
lea
pop
push
cmpsl
pusha
scas
pusha
popa
inc
jb
bound
mov
sbb
into
and
cwtl
cmpsb
cmp
and
sarb
xor
push
inc
jp
pop
cmp
pop
mov
movsb
adc
mov
inc
pushf
sahf
mov
sbb
jg
adc
inc
test
mov
ljmp
and
idiv
add
pop
xor
decb
cmp
ret
lret
daa
sub
push
mov
cltd
frstor
xchg
pop
mov
cmp
lods
cli
jae
gs
nop
rcr
lret
flds
inc
xchg
mov
adc
call
xchg
mov
pushf
fucomp
dec
inc
mov
xchg
push
pop
mov
cmc
mov
dec
clc
mov
lret
mov
push
cmc
shlb
xor
mov
out
adc
mov
mov
inc
sarb
xor
fildll
test
or
cmp
xlat
popf
jge
jbe
leave
sbb
ffree
adc
aad
jns
test
adc
in
and
jae
and
sub
neg
push
movsl
leave
mov
xchg
and
xlat
inc
jle
cmp
sbb
aad
dec
or
ret
xchg
and
cmp
adc
or
test
leave
or
test
es
cmp
cltd
pop
ret
mov
or
cmpsb
mov
dec
xor
xchg
and
out
aad
fbld
push
cmp
or
lcall
mov
pop
jg
cli
stc
movsb
loopne
cmc
aam
xor
arpl
insl
sbb
sti
or
scas
aam
clc
xchg
shll
xor
aam
inc
iret
addr16
orb
mov
subb
mov
push
sbb
nop
mov
in
push
sub
mov
sub
lock
fcomps
addr16
push
xor
orl
adc
mov
test
test
shr
jmp
jno
mov
add
stos
sub
adc
insb
mov
lahf
or
dec
fcmovbe
sbb
mov
addr16
jb
or
cltd
push
dec
in
xor
push
out
fbld
and
mov
push
fwait
mov
pusha
dec
xchg
xchg
cld
jecxz
fwait
mov
sti
mov
cmp
mov
and
jle
test
sbb
popa
adc
pop
xchg
filds
out
push
aam
pop
mov
cmp
imulb
mov
xchg
push
or
lods
aaa
movsb
aaa
shr
xorb
mov
imul
add
cmp
mov
iret
sbb
cmp
mov
push
sub
scas
in
roll
ja
lea
and
adc
xor
scas
add
in
fwait
xor
das
movsb
out
xchg
add
or
addr16
sub
xor
repnz
lods
sbb
dec
pusha
pop
cmpb
add
popf
insb
or
and
and
mov
in
out
data16
pop
sub
pop
shlb
cmp
out
push
push
testb
adc
into
cs
sbb
notl
inc
loope
inc
je
push
out
add
sbb
nop
sbb
inc
and
es
sub
aas
cs
jae
jne
rcll
in
daa
sbb
and
popa
jns
mov
loop
cmpsl
lret
ja
lods
or
and
popf
xor
push
cmp
je
inc
ret
ja
lods
jnp
sbb
cs
addb
dec
test
fisttps
icebp
fstl
add
xchg
fcoml
jnp
in
rorb
int3
orl
mov
rcr
out
por
mov
adc
ret
shll
iret
sbb
shrl
outsl
sub
adc
adc
repnz
getsec
jb
lret
icebp
inc
mov
cli
iret
lods
dec
sub
leave
sbb
pop
cmp
clc
rcrl
stos
mov
xchg
adc
jnp
lcall
pop
das
sbb
adc
dec
lods
xlat
ficoms
lret
push
or
outsb
lds
xor
cld
sbb
push
in
and
lcall
insl
jnp
gs
jb
pop
hlt
aam
xor
sub
push
jmp
or
mov
decb
inc
mov
jg
addr16
ljmp
fstl
je
and
or
sub
dec
dec
shl
loopne
dec
dec
cmp
cli
sub
cmpsl
andb
cltd
push
mov
shl
push
in
dec
and
imul
dec
lret
cmc
rcll
push
ret
push
dec
cmp
pop
into
and
xchg
xor
sbbb
jns
adc
mov
mov
adc
jns
ss
bound
ja
enter
mov
and
pop
mov
pop
test
popa
sahf
sbb
jp
enter
dec
fsubrs
jge
inc
mov
ljmp
sarb
and
fmul
mov
outsb
dec
outsb
mov
fmuls
mov
in
inc
push
push
adc
mov
icebp
sbbb
stos
sbb
mov
shr
mov
je
fidivs
mov
lret
jo
daa
cli
mov
cltd
mov
push
jp
mov
jmp
lcall
push
rcrl
pop
xlat
adc
mov
aaa
sbb
fnsave
rcrb
mov
lock
ret
mov
mov
fmul
jp
int3
test
movsb
icebp
lret
insl
pusha
pop
shlb
out
das
mov
xor
pop
adc
fcoms
and
dec
imul
mov
xlat
cltd
inc
cmc
cwtl
scas
push
mov
les
scas
es
cs
xlat
dec
notl
subl
and
or
pop
pop
or
mov
imul
pop
adc
test
adc
and
clc
add
imul
add
lods
arpl
and
fisttps
mov
add
dec
jp
cmp
in
das
ljmp
jge
xchg
pop
add
add
sub
mov
out
sbb
addr16
in
cmp
pop
fwait
sbb
loop
mov
ljmp
xor
dec
dec
leave
mov
or
or
mov
or
pusha
adc
add
cmp
in
inc
jbe
push
mov
mov
lods
sub
addr16
jmp
mov
xchg
rorl
jmp
xor
push
and
dec
std
loopne
out
push
inc
xchg
ret
js
push
cs
cmpsb
mov
jge
daa
push
dec
repz
cli
dec
jmp
fdivl
push
jmp
popa
push
cwtl
dec
xchg
mov
lds
and
jecxz
movsb
test
push
subl
je
mov
pop
mov
xchg
shl
fidivl
pop
insl
xadd
fidivrl
or
inc
dec
fbstp
or
jle
rclb
dec
pop
sti
mov
dec
mov
xchg
sub
or
add
xchg
sbb
inc
mov
xchg
mov
call
pop
lahf
jmp
inc
push
cltd
sbb
scas
xor
js
cmp
add
push
mov
andb
rorl
sub
mov
popa
int3
adc
jle
shrl
clc
ret
mov
lahf
or
out
or
stc
scas
or
es
mov
push
mov
dec
sub
dec
and
je
cld
call
icebp
mov
add
pop
inc
les
rcll
in
sbb
inc
adc
pusha
test
shlb
into
xor
sub
fisttps
mov
pop
adc
sub
sub
js
idiv
ja
xor
cmpsb
push
sub
mov
add
add
loopne
sbb
mov
push
push
pop
sub
xchg
mov
es
dec
mov
or
mov
test
call
fnstcw
enter
inc
inc
add
cmpb
dec
int
aaa
inc
jg
push
in
sar
shrl
jae
pop
bound
int
pop
fistpl
xchg
adcb
in
pop
xchg
or
mov
pop
push
sbb
out
cld
test
cmp
into
cmc
jne
cmp
push
and
sbb
inc
incb
int
pushw
adc
pusha
and
dec
jecxz
and
movsb
mov
pop
jno
lds
lret
insb
clc
adc
test
add
add
cs
xlat
fists
in
test
in
xor
xchg
scas
xchg
pop
jb
fsts
rol
jecxz
sahf
push
lock
lret
ret
mov
stos
xor
insb
mov
outsb
and
mov
shll
mov
sub
jnp
and
fidivrl
adc
je
pop
cltd
repnz
movsb
cwtl
cmc
cwtl
pop
fisubs
push
mov
fnstsw
in
pop
ret
sub
mov
filds
lock
mov
shrl
sub
pop
mov
jmp
push
sub
ja
outsl
ficoml
dec
in
cld
test
cwtl
pop
dec
fisttpl
leave
imul
jp
mov
insb
adc
je
xor
dec
xchg
adc
gs
test
sub
icebp
sub
loopne
das
mov
mov
sbb
insb
repnz
pushf
add
std
stos
mov
or
sbb
repnz
cmp
fsubrl
mov
loopne
in
cld
or
mov
adc
cmp
ljmp
aad
cld
popa
xchg
loopne
jl
jl
in
dec
mov
shlb
ret
fistl
push
test
in
xchg
into
scas
cmp
fxam
in
es
xchg
push
shll
xchg
and
push
in
pop
sbb
rcrl
jo
popf
stc
mov
clc
mov
data16
xor
inc
add
lahf
sbb
cmpsb
push
stos
mov
xchg
pushf
xor
sti
cld
movsb
xchg
lahf
mov
icebp
pop
adc
mov
lret
jecxz
cltd
push
sbb
je
frstor
and
rcrl
mov
or
push
shll
adc
push
add
xchg
imul
jne
sti
push
fidivl
jp
and
ds
lret
je
sahf
outsl
int
xor
shl
pop
imul
inc
into
jae
mov
add
imul
xchg
dec
loope
add
cmp
and
add
cmpsl
rclb
icebp
adc
dec
cmp
cld
cmp
or
fadds
mov
in
outsb
pusha
dec
fwait
test
inc
les
xor
push
add
ret
pop
inc
cld
lret
jne
mov
icebp
mov
and
mov
and
in
cmpsb
stos
stos
outsb
cld
or
xlat
rolb
cmp
mov
shlb
push
loopne
test
jmp
sti
sbb
or
orl
out
jle
pop
push
lods
xchg
cltd
mov
mov
jp
dec
sbb
or
roll
adc
mov
sub
xchg
dec
mov
dec
sub
lret
or
and
push
sbb
inc
mov
lret
xchg
in
jmp
push
push
sub
or
dec
movsb
arpl
adc
fmuls
lahf
xor
rcll
add
cltd
or
dec
pop
adc
or
sub
lods
adc
mov
int3
das
popa
xor
mov
mov
push
pop
mov
ss
int3
add
mov
push
out
jb
in
bound
mov
test
dec
jle
sbb
push
ds
push
inc
pop
mov
daa
and
mov
pop
bound
cwtl
xor
inc
mov
insb
pop
inc
pavgw
mov
pop
mov
jnp
xor
mov
and
lods
adc
outsl
xor
test
popf
inc
and
adc
dec
cmp
outsl
adc
jae
mov
loop
aas
lret
mov
inc
imul
pop
dec
out
test
mov
rcll
and
movsb
add
and
fstpt
aaa
push
cmp
repnz
mov
cmpsl
nop
adc
pop
jns
xchg
ljmp
dec
ret
pop
push
iret
fcmovne
stc
pusha
sub
test
cld
jnp
out
xchg
jne
call
inc
enter
jb
push
cld
in
jne
movsb
aas
add
and
mov
pop
or
pop
xor
jmp
and
addl
shlb
hlt
push
cltd
iret
aad
fisubrl
faddl
sbb
sbb
outsb
or
mov
les
scas
sub
add
ja
jmp
and
push
push
add
or
xchg
xchg
mov
scas
push
jb
pop
lret
xor
lock
out
jecxz
push
mov
jl
jbe
pop
movsl
push
sarl
mov
sbb
sub
insb
jae
push
std
leave
push
cmc
push
cs
jmp
rcrl
push
or
rorb
fisubs
and
in
lods
mov
push
out
pop
daa
mov
inc
ja
pop
aad
fdivrl
cwtl
push
jmp
fwait
call
pop
mov
jne
in
fstl
jb
dec
mov
or
jne
int3
mov
add
fwait
adc
icebp
mov
lret
add
and
insl
sahf
adcl
jne
inc
dec
cmpsl
cmovl
cmpsl
or
cmp
or
xor
stos
in
mov
and
inc
pop
jno
dec
mov
sub
mov
xor
jbe
mov
adc
popf
push
imul
xchg
rclb
jge
sub
xor
ja
bound
xchg
push
cmp
push
popf
xchg
sbb
sub
mov
and
pop
pop
mov
jmp
insb
test
in
jle
mov
fldt
lods
push
repnz
mov
pop
fsubl
adc
test
repnz
xor
mov
test
inc
cmp
pop
popf
divb
repnz
mov
mov
scas
das
dec
je
mov
push
popa
lret
popf
dec
test
mov
jnp
nop
cmp
mov
das
mov
nop
inc
orl
cld
inc
enter
leave
sub
add
mov
sarb
dec
mov
dec
test
adcb
addr16
xchg
push
je
jns
and
ror
sub
popf
dec
or
movsb
xchg
jmp
push
jns
rol
sbb
inc
enter
lcall
mov
mov
sub
pop
icebp
enter
xchg
lock
movd
scas
mov
mov
push
stc
jmp
lahf
jl
mov
sub
faddl
and
add
mov
enter
or
out
lahf
dec
add
lods
inc
scas
pop
pop
lahf
inc
imul
dec
aam
aam
xor
into
and
pop
nop
rcll
xor
xorl
stos
push
mov
jno
faddl
inc
adc
in
inc
movsl
sub
insl
fcom
sbb
lods
and
ss
add
inc
leave
int
loopne
das
sbb
jp
out
pop
mov
sub
rol
jmp
xlat
xchg
repnz
test
or
pop
and
pop
std
pop
enter
lcall
pop
test
mov
lock
mov
pop
mov
mov
insl
mov
xchg
mov
sahf
inc
mov
adc
cmp
sub
sbb
dec
cmpb
push
ret
adc
fsubr
xor
paddsw
lock
adc
fs
mov
outsl
lds
and
ja
mov
lcall
fmul
xlat
cmp
cmp
hlt
outsl
test
inc
addr16
bound
aaa
outsb
cltd
add
jnp
je,pn
scas
xor
mov
jge
add
or
out
adc
into
ja
push
clc
jp
lcall
cwtl
pop
or
and
pop
sbb
cmc
cmp
pushf
mov
sahf
lahf
stc
mov
outsb
sbb
fnsave
adc
filds
add
jo
fdiv
out
les
lret
pusha
shll
and
sbb
push
xor
lods
xorb
or
sbb
movb
push
shrl
jmp
pop
mov
ficoml
and
inc
das
xorb
mov
xlat
sti
xchg
inc
mov
js
cs
cmp
bound
lock
or
dec
xor
mov
push
out
sub
outsl
jno
test
cmpsb
inc
cmp
lahf
sahf
adcl
dec
repz
fidivrs
jns
push
loopne
mov
pop
fimuls
jne
sti
push
in
sbb
pop
dec
pop
lcall
repz
fidivl
clc
jp
inc
push
jl
jne
cmp
loope
ljmp
movb
leave
rclb
pop
xchg
gs
lock
jae
sbb
dec
xchg
xor
push
mov
push
rolb
mov
pushf
pop
adc
xor
lret
vcvtsd2ss
dec
sbb
jae
and
iret
sti
iret
lods
pushf
sbb
bound
cmp
or
jb
mov
push
out
aaa
lret
lcall
cmp
jg
push
fldl
sbb
inc
stos
inc
movsl
cmpsl
adc
lahf
sbb
xor
push
imul
iret
mov
mov
mov
jmp
xor
or
jecxz
test
add
scas
fsqrt
fistpl
push
mov
cli
inc
xor
pop
fdivr
push
rol
cltd
inc
into
mov
stos
vmulss
xor
push
mov
sbb
shl
dec
push
or
cmp
je
enter
jecxz
fstpt
dec
fs
lret
ljmp
in
movsl
inc
xchg
daa
popf
or
leave
cmp
repz
popl
inc
pop
lock
ss
xor
cmp
jl
sub
in
stc
jg
add
test
call
orl
clc
aad
stos
dec
or
xor
fsubrp
out
fsubrs
movsl
xor
fsubrp
mov
jg
jnp
inc
inc
rorb
sbb
jno
xor
rolb
call
mov
and
test
sub
mov
adc
outsb
or
imul
mov
xchg
xchg
stos
mov
repz
insb
pop
lods
dec
ffree
xor
addr16
or
popa
sub
or
push
mov
fwait
pop
int
dec
test
into
stos
fdivrs
dec
in
pop
dec
or
pop
jmp
cmp
icebp
pop
data16
sub
push
push
nop
push
outsb
mov
daa
push
fidivs
add
or
fldl
xchg
mov
mov
in
loope
outsl
cmpsb
lea
dec
andl
mov
sti
imul
int3
fwait
xchg
imul
popf
xor
jb
mov
cmp
push
loop
xchg
inc
jge
lods
pop
aam
addl
pop
daa
dec
sbb
mov
cmpsb
pop
push
dec
xor
aaa
or
or
lahf
sub
out
push
stos
add
sub
das
not
cmpsb
call
push
push
sbb
addb
or
cmpsb
jo
ja
or
scas
mov
outsl
lods
lret
loop
xchg
sar
out
jle
call
push
das
mov
add
xorb
sbb
xor
fst
out
out
inc
or
fwait
xor
dec
fsubrl
js
jg
or
filds
or
dec
inc
dec
mov
ds
mov
sbb
jo
dec
sub
movsl
popa
mov
add
jle
mov
sub
xor
movsb
aaa
sbb
adc
movsl
or
ljmp
cs
mov
or
rol
push
push
jge
aaa
bound
cmp
mov
popa
push
ftst
jmp
repnz
xor
push
test
push
test
data16
lds
sbb
movsb
inc
mov
arpl
mov
mov
adc
cld
dec
cs
stc
and
dec
or
mov
lods
inc
aas
dec
fimull
cmc
add
dec
insl
mov
ret
and
sbbl
inc
in
sub
outsb
sub
mov
dec
stos
pop
jb
inc
adc
cltd
in
jp
call
push
icebp
mov
push
cld
and
pop
sbb
mov
sub
enter
push
loop
pop
addr16
imul
xchg
icebp
or
mov
pop
cli
pop
repnz
cs
outsb
pop
xor
push
shll
aam
fwait
out
inc
mov
idiv
xor
loopne
jl
addr16
jecxz
sbb
pusha
aam
add
jg
test
pop
movsl
stc
pop
nop
adc
fucomp
dec
adc
insl
fcmovnb
fisubl
data16
mov
cmpsb
jg
scas
adc
lock
fidivl
loope
gs
cld
dec
repz
cmp
into
ljmp
cmp
or
sub
mov
lret
sub
insb
mov
adc
cmp
cmpsb
sti
out
add
or
sbb
cmpsb
test
mov
loopne
mov
lods
rcrl
dec
dec
sbb
xchg
lret
and
or
push
lds
xlat
xchg
insl
jnp
xor
mov
push
shrb
jb
pop
push
sbb
in
ja
cwtl
mov
fwait
mov
in
sub
js
adc
mov
dec
int
call
leave
xchg
dec
leave
cvtpi2ps
gs
mov
push
lahf
sbb
cmc
cld
jmp
not
stos
ja
pop
aas
sub
sar
push
xor
dec
xchg
jo
push
insl
adc
ficoms
cmc
pop
inc
hlt
sub
xchg
mov
insb
mov
sub
adc
imul
loope
imul
scas
lods
add
dec
or
mov
add
jne
ljmp
outsl
and
pop
dec
jne
mov
sbb
ret
xlat
and
lret
insb
test
sti
jne
popf
cmp
dec
cmc
test
scas
inc
inc
rcl
or
pop
roll
ja
nop
imul
push
adc
stos
movsl
out
fistpll
push
or
sbb
jo
xchg
subl
test
add
stos
mov
out
es
lret
enter
into
sub
insb
vmovupd
sarb
ret
jl
gs
push
and
aad
aas
push
sub
push
dec
jno
adc
and
adc
jae
xor
flds
mov
adc
aaa
pop
adc
mov
pop
in
mov
push
in
push
cs
jno
xlat
cmp
mov
mov
dec
dec
popa
xchg
dec
mov
in
int3
jp
or
leave
outsb
inc
and
in
call
mov
dec
inc
jae,pt
rorl
scas
ret
sub
mov
xchg
aad
mov
push
sub
jbe
sbb
pusha
xchg
push
and
xor
mov
mov
inc
repz
mov
sbb
jno
xor
xor
mov
add
das
lods
dec
or
pop
add
add
popf
int3
daa
jg
sbb
and
daa
popa
imul
push
jle
sbb
les
stc
sub
push
jg
mov
fs
sub
or
hlt
and
ret
nop
sbb
test
cmpsl
arpl
int
pop
gs
sbb
loope
adc
fwait
mov
add
xor
pop
jg
imul
ret
push
lcall
inc
outsl
pop
popa
jmp
lret
iret
lds
or
fs
fmul
and
jmp
xor
js
inc
adc
add
xchg
std
scas
xchg
out
aam
sbb
adc
jle
or
jl
and
es
stos
lods
int
or
shl
pop
jg
imul
lret
jle
ljmp
xor
das
sub
roll
scas
sbb
mov
pushf
inc
sbb
out
mov
xor
sahf
inc
sbb
sub
cli
into
imul
inc
add
adc
or
cmpsl
xor
aaa
icebp
jmp
fistl
mov
xor
movsb
sbb
jbe
fcomp
test
push
arpl
pop
adc
mov
lock
pop
fwait
rep
pop
outsl
sbb
std
inc
out
movsb
jnp
xchg
cmp
rolb
dec
add
out
stc
dec
cmp
clc
cmp
int3
mov
xchg
frstor
sbbb
push
pop
inc
mov
out
inc
xchg
es
cli
inc
addr16
out
add
outsl
adc
in
in
mov
shl
sub
mov
jp
shlb
rcll
mov
mov
jno
xchg
and
jo
sub
cmpsb
sbb
test
lahf
fs
sub
jp
outsl
add
addr16
and
arpl
rcr
mov
hlt
or
out
mov
pop
mov
mov
pop
cmp
lea
add
negb
jbe
call
lret
add
push
sbb
int
outsl
pop
or
mov
add
imul
cmp
or
out
int3
sub
fdivs
or
mov
xchg
imulb
scas
mov
notb
dec
pop
push
daa
push
jo
jne
sub
xorb
movsl
mov
imul
add
movsb
imull
and
adc
test
aas
and
mov
cmp
sbb
addr16
mov
push
loopne
loop
daa
or
inc
nop
dec
cs
lret
dec
sbb
mov
cli
inc
add
les
out
iret
test
popf
cs
fildll
out
jge
fidivs
jns
adc
mov
sbb
push
test
jns
rcrl
or
dec
and
push
andb
push
imul
xor
xor
xchg
gs
push
enter
movsl
call
dec
loop
jge
rcr
mov
inc
iret
fisttps
notb
pop
test
xchg
pop
stos
loopne
insl
add
xorl
xchg
pop
nop
push
cmp
clc
jl
jbe
movsb
mov
xchg
mov
stc
xchg
adc
push
adcl
push
mov
cmp
inc
mov
jg
mov
lea
les
or
xchg
push
mov
ficoms
enter
je
dec
cmp
out
cmpsb
mov
test
xor
subb
shrb
jo
stos
mov
dec
adc
jae
push
jmp
mov
lret
mov
daa
int3
shrl
mov
out
scas
fimuls
mov
ss
xchg
gs
lods
hlt
daa
and
seto
pop
sti
jmp
jg
cmpsl
dec
stos
inc
outsb
cmp
imul
lods
xor
and
mov
push
icebp
pop
mov
mov
popa
mov
sbb
xchg
push
add
push
cmovg
leave
leave
pusha
pop
std
and
mov
mov
and
cmp
scas
xchg
adc
xchg
andb
subl
bound
in
pop
mov
dec
imul
bound
icebp
rolb
pop
aas
adc
inc
test
cmc
add
mov
test
or
push
xlat
mov
sahf
sbb
add
jno
and
ja
jne
mov
rolb
jae
adc
xchg
jo
push
jbe
jg
fnstenv
jbe
inc
bound
shlb
pop
mov
aaa
sub
cmp
mov
orb
cltd
aaa
loop
pop
xorb
jo
sbb
mov
int3
add
push
test
jae
loopne
adc
out
cmp
sub
fmull
inc
ret
jl
rclb
inc
test
stc
jbe
pop
fldl
adcb
stos
outsb
out
arpl
xor
xchg
mov
subb
sub
jne
popa
mov
aad
mov
dec
arpl
dec
push
pop
cwtl
negl
cmc
inc
arpl
int
mov
xchg
imul
sahf
and
sub
push
stc
jge
sub
xchg
jne
cmpsb
dec
shlb
xor
sub
lds
jecxz
cmp
orb
and
leave
test
in
adc
mov
sub
enter
and
nop
push
ret
jmp
sti
outsl
shll
adc
pop
mov
jle
dec
push
dec
jno
fisttpl
push
cwtl
int
test
sbb
in
mov
sub
movsb
scas
fs
loope
test
xor
out
xor
pop
and
ds
push
psllq
iret
test
push
add
add
xor
arpl
push
or
jbe
scas
mov
out
mov
fdivs
xor
xchg
xchg
frstor
popf
cs
xchg
mov
stos
pop
jo
repnz
out
in
xor
mov
into
mov
mov
out
bound
xor
xchg
orl
icebp
cmp
cmp
nop
add
sahf
jmp
ss
mov
inc
int
bound
sub
mov
clc
and
cmp
movsl
push
aaa
adc
sar
add
test
jns
sbb
fdivrl
mov
inc
and
mov
mov
popa
lds
adc
lret
xchg
push
mov
insl
mov
in
dec
xchg
pop
scas
addr16
cmp
insl
xorl
or
call
stos
icebp
in
add
mov
idiv
push
ret
add
jl
shr
push
test
lea
pusha
stc
fbld
gs
mov
xchg
or
loope
push
fldenv
stc
jbe
lret
nop
pop
pop
jae
movsb
out
adc
daa
addr16
fld
jmp
in
fiaddl
mov
cmp
jle
cmp
popa
popa
jno
jns
dec
cld
dec
ds
jo
outsl
xor
mov
fldcw
cmp
shrb
out
sbb
mulb
xor
xlat
insl
test
add
adc
and
push
jns
mov
cmpb
int
or
icebp
xchg
xlat
xor
mov
stos
cmp
sti
add
or
stc
pushf
out
sub
stos
ret
jecxz
out
jnp
push
cs
fwait
dec
or
mov
push
xor
pop
or
ja
enter
xchg
and
xchg
lcall
idivb
sbb
jno
xchg
pop
inc
outsb
cmp
loop
push
js
fisubs
add
xchg
std
jmp
mov
out
cmc
lea
jge
fwait
add
es
in
mov
cli
mov
rol
hlt
pushf
mov
out
stos
fwait
pop
pop
xor
hlt
pop
aad
iret
mov
cli
lahf
iret
sub
cwtl
sbb
je
lahf
and
rcrl
jo
jo
push
jbe
pop
js
push
in
mov
mov
xlat
int3
add
rorb
sbb
add
push
sub
jge
loope
pop
mov
xchg
mov
pop
push
and
cmpsb
or
loop
jbe
stos
xlat
cs
sbbb
cs
inc
xlat
ret
adc
xor
mov
cmp
ret
enter
mov
adc
pusha
xchg
push
ljmp
mov
adc
mov
adc
imul
bound
push
aaa
roll
ret
dec
sbb
insl
stos
pop
fmulp
mov
ror
addr16
je
jae
mov
andl
cli
mov
adc
lcall
inc
dec
jae
fcomi
add
mov
and
push
pop
pop
adc
incb
mov
jno
push
jno
gs
sub
sub
add
inc
cwtl
jb
jb
push
rcrw
mov
xchg
dec
cmp
movsl
rclb
jae
jg
das
rcll
into
fidivrs
nop
iret
sbb
js
int
rcl
mov
scas
push
loop
sub
adc
inc
xor
mov
fbld
js
dec
test
cmp
xor
in
call
push
adc
arpl
rorl
mov
fstl
sbb
add
jbe
mov
sub
out
cmp
lods
repnz
or
xor
sarb
inc
xor
ret
les
xchg
in
lret
push
inc
test
push
cltd
xchg
stos
or
jge
sahf
pop
ret
loope
xchg
add
and
fistps
dec
cmp
adc
or
adc
andl
adc
and
lock
sub
loop
orl
push
jae
xlat
lods
or
mov
les
adc
pop
or
push
test
insb
dec
jb
mov
push
int
push
mov
pop
lods
or
mov
fildll
cmp
jp
push
add
mov
add
jle
mov
test
mov
aad
fildll
fstpt
mov
push
test
or
sarl
fisubs
inc
adc
bnd
pop
mov
sbb
fdivl
sub
incl
pop
lods
adc
in
bound
jns
enter
icebp
lds
pop
mov
nop
xchg
push
out
imul
mov
out
mov
shll
scas
arpl
dec
in
jle
cmp
push
fistpl
xlat
xchg
pop
add
bound
stos
fs
pop
pop
xor
repnz
mov
out
mov
xor
xor
insl
outsl
lret
adc
ret
stos
popa
or
jmp
repz
clc
xor
inc
sub
cmp
faddl
ret
test
gs
out
inc
sar
xor
ljmp
mov
lods
shll
mov
imul
test
test
es
mov
jg
fnstcw
cmpl
pushf
xor
ret
sub
das
dec
pop
cltd
icebp
pushf
xchg
outsb
dec
push
jne,pt
mov
xchg
mov
arpl
pusha
dec
js
lock
push
mov
rcll
jmp
enter
test
fisubrs
jl
movsb
xlat
cli
loope
stc
pop
shll
fisubrs
sar
push
jmp
popa
jmp
xchg
sub
movsb
cmc
xchg
imul
jo
fwait
negl
add
xchg
xlat
imul
dec
push
int
dec
imul
add
sub
sub
std
xor
jge
cld
xor
ss
sbb
fadd
and
ss
or
mov
js
and
fldl
dec
pop
jns
push
dec
xor
fisubs
pop
and
and
sahf
mov
push
and
dec
scas
popa
or
fldenv
lds
cld
out
xor
in
dec
roll
or
ret
push
aas
mov
movsl
stc
cs
cli
sub
cmovbe
jne
popf
out
ds
mov
int
cmp
xchg
test
cmp
int3
adc
and
or
mov
sbb
lret
lret
xchg
add
jb
pop
shlb
adc
loopne
int
xchg
push
dec
jmp
lret
sbb
push
lcall
adc
call
xchg
push
xlat
inc
scas
lods
jbe
add
loopne
testl
repnz
aas
vunpckhpd
jae
rcl
outsb
mov
call
mov
jnp
movsl
jb
jbe
xlat
in
icebp
out
cltd
xchg
mov
lahf
pop
push
pop
test
adc
js
mov
js
lret
insb
aas
jge
sub
push
out
mov
jnp
iret
add
pop
into
roll
stos
cmpsl
fs
cs
cwtl
jo
in
and
xchg
cld
mov
sbb
sub
jbe
jne
aaa
dec
fistl
sub
xor
in
rcrb
pop
push
inc
int
or
es
js
imul
push
stos
int
testb
fcoml
add
cwtl
cmp
dec
sub
cmpsb
push
ret
xlat
iret
inc
jmp
out
inc
push
in
lret
mov
push
mov
adc
out
inc
jae
add
mov
pop
mov
push
mov
cmp
mov
ret
mov
jne
fdivl
dec
mov
xor
cld
jae
jp
cld
mov
in
shll
cmp
adc
push
sbb
adc
cmp
bound
cmpb
dec
and
cltd
sub
push
das
in
mov
cld
pop
hlt
and
fcoml
out
fwait
dec
xor
push
xlat
mov
or
push
dec
inc
movsb
inc
cmp
inc
cmp
gs
rorl
add
or
imul
mov
or
add
shll
mulb
cmpsl
xchg
cmp
daa
cmc
pop
int3
cltd
mov
or
fldenv
clc
cltd
test
test
insb
xchg
inc
aad
push
jns
xchg
and
xor
mov
cwtl
mov
stc
xchg
arpl
sbb
cld
dec
inc
bound
xor
dec
push
or
and
pop
xabort
mov
popa
insb
jg
pop
sub
rcr
dec
xlat
xor
and
xor
inc
push
dec
sti
sbb
lret
aad
jne
inc
add
and
out
popf
sbb
stc
mov
jne
mov
mov
out
icebp
pop
cs
jmp
sub
repz
inc
inc
push
add
mov
out
or
in
sbb
lods
or
daa
add
cmp
int3
subb
mov
push
fstpl
adc
insb
xlat
inc
insb
xor
imulb
lods
cmp
add
fwait
adc
out
ja
pop
mov
scas
cmp
or
or
cmp
inc
gs
cltd
jle
pop
call
add
dec
jae
ss
push
test
lock
movsl
repnz
mov
sbb
dec
or
xor
jo
sti
or
mov
jg
daa
out
dec
mov
inc
stos
test
fnstcw
mov
movsb
imulb
fsubrs
and
pop
xchg
mov
adc
xor
dec
mov
pop
add
fldcw
movsl
xchg
mov
pop
stos
lds
rcrl
jle
fucomi
in
adc
xchg
outsl
cmp
loop
xchg
ss
pop
sub
scas
add
test
js
ja
insb
out
pop
cmp
mov
dec
pop
inc
loope
xchg
dec
dec
movsl
xchg
add
jno
stos
lock
xchg
xchg
inc
and
idivb
jmp
std
jnp
jl
ret
adc
and
inc
cmpsl
js
sbb
push
xchg
push
movsl
bound
mov
mov
js
out
pop
out
lods
and
jmp
mov
add
and
or
inc
call
push
aas
aaa
stc
and
addr16
xor
rcrl
in
movsb
mov
add
xchg
imul
rcrb
mov
mov
aas
jle
std
and
adc
pop
pop
mov
push
add
sub
sbb
pushf
ret
xor
lret
loop
push
mov
cmp
in
call
out
ror
aaa
adc
sub
and
bound
ds
inc
push
push
lcall
faddl
ds
xchg
test
insb
cmp
jmp
cmp
test
xor
fldcw
mov
push
and
inc
cmp
adc
adc
push
xacquire
mov
push
jg
mov
test
xlat
outsb
xchg
push
loop
and
pop
adc
icebp
addb
mov
cmp
bound
outsl
mov
mov
mov
jmp
insl
mov
dec
movsb
mov
jecxz
dec
push
xchg
scas
inc
mov
mull
push
test
xchg
jns
loop
pushf
stc
mov
in
mov
adc
insb
fnsave
xor
and
jbe
mov
shrl
cld
mov
fldt
das
clc
pop
test
adc
mov
and
ror
ss
and
addl
inc
int3
pop
push
js
add
shll
nop
xor
dec
movsl
imul
fdivs
xor
cmpsl
sub
mov
pop
bound
mov
test
cmc
xchg
inc
scas
ljmp
xor
in
aad
and
mov
xor
das
push
push
dec
aas
clc
mov
movsl
nop
mov
mov
xor
cltd
icebp
jo
out
mov
stos
pop
xchg
adc
sbb
ds
mov
ret
pop
mov
pop
sub
imul
insl
pop
icebp
xchg
jge
mov
sahf
outsb
mov
xor
and
aad
sbb
negl
xchg
pop
arpl
cs
hlt
jnp
lret
lcall
movsb
rorl
mov
aaa
jge
outsl
add
out
rclb
push
adc
pop
stc
fsubl
outsb
lret
pmulhw
xor
adc
mov
js
push
mov
xchg
inc
add
cmpsb
das
ret
shr
fildl
cmpsb
push
repz
arpl
dec
jecxz
fwait
dec
fsubr
int3
inc
mov
xchg
mov
outsb
outsl
pushl
push
pop
dec
push
ret
inc
sub
xorl
jmp
out
mov
push
out
xchg
ss
cmp
fstpl
ja
push
in
jae
and
sub
pushf
lahf
cmp
or
xchg
dec
es
mov
push
imul
push
arpl
jb
mov
jmp
or
enter
mov
and
js
loope
mov
or
cmp
into
xor
and
push
in
add
mov
call
aad
cmp
jle
sub
jl
cmp
test
jns
jns
inc
adc
cld
int
test
jle
insb
js
push
repz
xchg
sub
imul
sub
sahf
push
lods
in
jecxz
cld
jnp
iret
sbb
ds
gs
ficoml
and
nop
aaa
jno
mov
fcoms
add
or
sbb
mov
sub
add
pusha
pop
sar
pop
and
jns
arpl
add
das
fdivrs
and
adc
mov
addr16
fsubl
lock
and
je
mov
sub
shrl
sbb
bound
mov
inc
mov
in
xor
inc
jo
sub
xchg
daa
xor
jle
push
stos
lret
aam
sbb
jecxz
ds
cmpsb
outsb
mov
js
dec
shrl
iret
add
cli
sub
xchg
into
orb
pop
stos
or
lea
push
imul
test
push
sub
xchg
and
ret
fwait
loope
loop
pop
and
push
sub
enter
jecxz
pop
sbb
xorl
push
lods
in
outsb
stos
inc
pop
adc
int
call
mov
push
std
imul
cmc
xor
movsb
sub
movsb
inc
mov
shrl
cmpsb
xchg
mov
jo
mov
push
call
xor
and
sub
imul
and
jmp
xor
icebp
test
faddp
movsl
movsb
xor
pop
sub
incb
cmpsb
dec
mov
daa
ja
rcrl
cmpsb
insb
sub
cmp
test
jge
sub
lahf
lods
xlat
out
push
sbb
aam
das
add
cmc
hlt
es
jbe
or
jecxz
adc
mov
xchg
jmp
mov
insb
add
ljmp
scas
clc
or
push
mov
mov
dec
and
aas
and
cmp
loopne
in
enter
testb
rol
call
in
fwait
mov
fmull
adc
mov
adc
jge
xchg
sub
adc
inc
pop
in
push
cmp
es
sbb
inc
jecxz
fs
sbb
inc
pushf
imul
repnz
sbb
stos
test
cmp
fucomi
je
cmp
xchg
data16
cltd
lds
fcoms
mov
sub
pop
dec
aaa
scas
lods
cmpsl
mov
jbe
push
mov
and
sbb
sbb
loope
mov
inc
pop
jp
xor
adc
imul
popa
inc
jmp
dec
lret
fisttps
pop
add
inc
je
bound
push
add
mov
icebp
pop
push
adc
inc
mov
decl
add
sub
xchg
insl
jbe
sbb
mov
out
fisubrl
out
cmp
orb
ljmp
cmpsb
jecxz
pop
clc
add
inc
lret
pushf
pusha
int3
and
mov
cltd
and
stc
rcl
xchg
dec
mov
dec
inc
imul
sti
xlat
push
ljmp
cltd
out
add
sub
pusha
sbb
adc
lea
movsl
movsb
xchg
inc
xchg
std
ds
push
xor
inc
inc
in
xchg
rorl
aaa
push
mov
sub
cmp
jns
jo
and
into
push
jp
xchg
mov
mov
cmc
jb
or
insl
rorb
shlb
jle
stc
inc
push
fiadds
add
movsb
jne
add
pushf
out
leave
jns
inc
sbb
pop
into
and
fdivrl
cmp
inc
insb
mov
adc
pop
jl
mov
xchg
or
ret
xchg
or
cli
sbbl
jmp
add
daa
jb
sti
sub
xorb
loopne
mov
or
cmp
sbb
sub
clc
mov
decl
and
inc
sahf
test
dec
andb
fsub
aad
and
leave
ljmp
dec
pop
adc
mov
dec
fmul
jecxz
add
movsb
into
adc
fisubrs
out
xlat
push
fnstenv
sti
arpl
scas
mov
pop
xor
mov
call
fisubrs
popf
psrlq
and
or
or
mov
daa
dec
daa
out
js
and
sbbb
dec
ja
or
imul
pop
push
insb
out
jle
jbe
das
mov
add
pop
or
fucomp
fildll
xor
adc
xor
pop
aaa
enter
pushf
lahf
ficoml
js
cmpsb
push
ret
in
or
mov
insl
ds
cmp
dec
xchg
pop
call
es
insl
imulb
ljmp
pop
test
mov
push
daa
adc
sbb
xchg
mov
cmp
lahf
mov
jle
pop
mov
movsl
frstor
cmpsl
adc
lock
xlat
in
iret
mov
lret
mov
lods
sbb
jp
idiv
jae
test
faddl
imul
ljmp
xor
ffree
ja
testl
dec
xor
cmp
fs
cwtl
xchg
xchg
mov
push
jo
jnp
dec
or
into
and
pop
mov
cld
bnd
xor
pop
insl
adc
sti
adc
sarb
lea
or
lds
inc
js
mov
nop
add
imull
cwtl
mov
sub
mov
add
push
jl
adc
push
or
add
shrl
mov
outsb
cwtl
sbbb
repnz
xor
jecxz
jmp
mov
cli
and
mov
or
xchg
xorb
loopne
dec
cwtl
in
adcb
inc
sbb
das
iret
xchg
shrl
sar
lds
xor
lods
xchg
subl
repnz
fsubs
jl
aam
add
or
pop
push
xchg
gs
mull
fcompl
int3
add
or
jo
cmp
andl
insl
xor
ds
cmp
fwait
mov
ret
inc
mov
loop
adc
cmp
imul
adc
adc
mov
cmp
insl
xchg
cmp
iret
cltd
sub
xchg
or
out
mov
jo
or
jl
xor
fnstsw
loope
sbb
repz
loop
add
sbb
cmp
push
iret
ret
cmp
lea
lret
lods
mov
lcall
pop
rcr
dec
push
or
cs
mov
push
dec
clc
clc
sub
sub
xchg
jmp
mov
test
mov
mov
jo
les
mov
sarl
in
hlt
pop
adcb
pop
pop
add
xor
mov
mov
jle
cmc
inc
ret
icebp
ja
iret
pop
or
mov
stos
dec
push
call
mov
sbb
dec
push
loop
xchg
aas
dec
jg
cld
dec
and
ss
bound
mov
jl
fwait
xchg
add
imul
push
jns
cwtl
bound
xor
daa
out
fistpll
mov
xor
gs
push
in
loope
outsb
mov
inc
sbb
sbb
push
pop
scas
push
je
in
out
jg
mov
mov
add
jb
add
sbb
stos
in
sbb
test
xor
push
mul
adc
fistpl
out
and
push
inc
mov
mov
jo
add
ret
pop
cmp
ss
loop
cmpl
sub
psubd
xchg
loopne
or
pop
mov
jno
xchg
push
sub
in
sbb
xor
out
cmp
data16
sbb
jmp
nop
ljmp
jmp
inc
sarl
fnstsw
cmpsl
inc
xlat
dec
adc
dec
scas
test
in
add
popa
jnp
mov
push
adc
push
pop
inc
sub
push
cmp
imul
xlat
fisubs
jo
push
pop
xor
dec
dec
dec
cmp
insb
repz
xor
pop
jge
rclb
out
leave
je
xchg
push
sahf
xchg
adc
or
pop
and
shrl
adc
sbb
sbb
sub
scas
shrb
rcrl
mov
pop
mov
or
sub
or
cmp
mov
cmpsl
xor
cli
mov
xchg
add
cmp
mov
inc
aad
hlt
push
cmp
in
lcall
xchg
adc
bnd
outsb
inc
lret
sbb
jg
cmp
xlat
loopne
movsl
ror
enter
and
pop
inc
shll
outsl
aas
pop
repz
mov
mov
ja
aad
push
xorb
jae
pop
mov
jno
hlt
jmp
xchg
std
test
rcrl
pusha
mov
in
jo
dec
js
movsl
andb
pop
nop
jmp
mov
adc
adc
adc
iret
scas
inc
sti
push
test
loop
in
dec
adc
adc
mov
subb
fldl
adc
inc
inc
gs
cmp
dec
jb
sub
roll
iret
cmc
and
into
and
inc
sbb
pop
sarb
pushf
jg
outsb
cmp
xorb
add
mov
fwait
fwait
or
mov
aas
scas
sub
mov
cmp
sbb
out
icebp
out
inc
orb
fs
push
mov
in
cld
add
inc
sbb
enter
popf
lcall
jl
lahf
nop
jno
scas
or
push
icebp
mov
and
test
and
push
push
clc
out
sar
mov
pop
out
loop
sub
pop
jno
xlat
cltd
jnp
ret
leave
lods
fistps
adc
add
xchg
hlt
inc
xchg
in
punpckhbw
xchg
or
add
into
mov
add
ret
outsl
mov
dec
xchg
cmp
cmpb
das
mov
xor
or
push
inc
jl
nop
or
std
dec
into
mov
sub
push
xor
mov
out
cmpsl
cmpsb
addr16
push
aad
inc
sub
mov
movups
mov
hlt
sbb
into
mov
mov
jge
ja
jnp
in
pop
in
call
xchg
adc
push
sti
pop
ljmp
push
ds
cmp
dec
xlat
or
loope
pop
mov
dec
idivl
xor
scas
jo
out
adc
adc
je
lcall
sub
sub
push
xor
inc
fmul
fstpt
fadds
testb
dec
lods
popa
cld
leave
mov
pop
lcall
scas
mov
cwtl
push
outsb
sbb
stc
enter
xor
cmp
aam
mov
push
repz
sbb
xchg
cmpsb
and
scas
push
mov
fidivl
push
jbe
pop
aas
inc
mov
dec
dec
lret
sub
xor
adc
shlb
inc
sarl
insl
std
je
int3
mov
lret
dec
cld
fucomip
mov
adc
adc
insb
scas
stos
sti
popf
fists
out
pushf
aaa
xchg
repz
cmp
std
cmpsl
add
jo
pop
dec
out
pop
cld
mov
in
addr16
popa
fwait
loopne
add
fstps
stos
subb
cwtl
fistps
xlat
imul
pop
subl
call
loope
add
ret
mulb
sub
push
mov
divl
and
addl
mov
mov
xchg
pusha
lock
outsb
clc
js
mov
fst
bound
ljmp
inc
mov
rolb
dec
lock
icebp
mov
cltd
cmp
shlb
fnsave
pop
out
sub
movsl
jle
cmp
pop
sahf
adc
stos
loope
sbb
stos
inc
dec
or
inc
adc
ds
clc
mov
mov
out
inc
xchg
add
aas
sbb
mov
nop
jmp
popf
push
adc
xor
jecxz
aaa
in
lea
out
inc
getsec
sub
pop
cmp
push
jge
mov
mov
int
add
sub
cli
mov
les
cmp
jnp
sarl
pop
push
ds
lds
mov
mov
add
push
xchg
stc
movsl
pop
add
in
sbb
cli
mov
std
push
pusha
addb
cs
add
std
sub
sbb
lods
dec
xchg
pop
dec
popf
jnp
mov
scas
pop
xchg
je
stos
repnz
sub
mov
add
xchg
ret
lcall
sbb
enter
bound
lahf
xchg
xor
fwait
pushf
mov
push
lea
pushl
ja
dec
mov
int3
pop
sar
loope
ss
xchg
int3
mov
cmp
push
pop
clc
sbb
sub
and
mov
icebp
jae
into
cltd
and
and
xchg
iret
ret
mov
mov
ja
xchg
mov
sbb
insb
mov
jg
sbb
push
inc
dec
test
cmpsb
loope
into
and
xchg
xor
cmp
cmpsb
xor
jae
jmp
pop
jb
dec
cld
or
jecxz
or
ja
dec
xor
cmp
cmp
jg
and
sbb
or
adc
xchg
imul
lods
mov
inc
scas
jecxz
divb
xor
cmp
pop
mov
mov
cld
stos
pop
jnp
push
flds
cs
sbb
js
xor
mov
mov
adc
ds
mov
jno
inc
ret
or
xor
push
aam
insl
fnsave
fimuls
mov
mov
sbb
sbb
bound
pop
xor
test
test
push
and
cmp
jp
fistps
sub
mov
xor
mov
jo
mov
inc
sub
sbb
bound
mov
orl
stos
jnp
repnz
enter
lahf
shufps
int
rcr
mov
std
push
mov
negb
fstpt
repnz
in
jo
and
lods
push
pop
lahf
push
push
subb
jns
xor
stc
in
push
lahf
imul
rcrl
es
fwait
jae
sbbb
xor
dec
jecxz
lods
dec
adc
je
pusha
cmc
sbb
mov
mov
jecxz
xor
sbb
sub
inc
xor
sarl
cmp
lahf
mov
or
mov
sbb
push
push
mov
mov
std
pop
daa
mov
js
cmp
inc
aaa
inc
inc
mov
jge
pcmpgtw
add
sahf
je
xchg
cmpsb
inc
cld
sbb
jg
lock
lcall
or
cli
jge
inc
mov
sti
push
lcall
adc
int
es
adc
pop
outsl
ror
jns
iret
fstl
mov
es
mov
pop
sub
clc
jno
jl
out
push
orl
inc
fnstenv
test
fldl
packssdw
sub
je
mull
insb
xchg
cmp
inc
test
ret
jns
clc
iret
and
add
push
imul
test
out
mov
jb
or
pop
loope
das
xchg
enter
cmpsl
std
dec
repz
das
mov
fldenv
pop
add
popa
loope
cmpl
stos
jbe
xor
sbbl
cs
lret
jecxz
or
xchg
sub
xchg
sub
and
jg
in
ret
mov
adc
sub
fimull
fs
xor
int
test
leave
fldenv
mov
pop
out
push
imul
xor
or
in
dec
add
pushf
lods
gs
or
movsl
pop
xor
jne
jno
or
pop
add
push
push
testl
addr16
pslld
test
in
and
sbb
btsl
jo
hlt
fsubrp
push
bnd
into
stc
into
dec
xor
jno
std
pop
imul
into
pop
int
clc
aad
or
enter
cmp
mov
cmp
mov
push
in
sub
hlt
dec
jl
nop
out
clc
or
notl
in
mov
mov
pop
test
or
cmpsl
push
les
shll
push
inc
fstps
and
push
mov
jb
cwtl
jge
jecxz
xchg
in
jns
sti
cli
cmp
mov
enter
rol
cmp
mov
jns
test
lcall
dec
sub
mov
xchg
xchg
mov
repz
mov
shrb
movsl
and
sbb
push
mov
inc
push
lock
scas
push
push
mov
div
xchg
pop
jb
ret
inc
sahf
xchg
cwtl
adc
inc
movsb
in
minps
sub
shlb
mov
jl
lret
in
and
inc
pop
pusha
xchg
mov
shl
rcrl
insl
dec
adc
loopne
xor
add
in
repz
sbb
xchg
push
and
je
test
xchg
ds
pop
sub
int
testb
fsubl
jo
addb
sti
inc
sub
and
mov
sub
push
pop
lods
fldl
repz
les
push
bound
ljmp
sahf
fistpl
and
movsl
or
sti
jae
push
mov
inc
xor
jg
orl
mov
movl
outsl
jg
sarb
jle
jmp
sbb
cwtl
adc
lahf
int3
xor
bound
and
cld
sbb
js
sahf
and
outsl
mov
out
gs
notl
in
xchg
or
pop
stos
pop
jne
pop
dec
in
xor
sbb
mov
push
loopne
xchg
test
sahf
mov
fisttpl
and
inc
cmp
sub
xchg
sub
add
ffree
lret
mov
and
jne
pop
or
enter
add
fadd
into
mov
cmpsl
jle
insl
es
mov
xchg
sbb
pop
outsl
mov
inc
mov
mov
jnp
push
push
lea
es
jg
pop
aam
lret
js
adc
out
or
shl
cmp
leave
jb
mov
imul
rcrb
jno
adc
sub
inc
adc
mov
cmpsl
mov
sbb
in
mov
mov
nop
xorb
out
js
jno
es
imul
mov
and
iret
xor
das
pop
push
ss
fs
adc
mov
ljmp
addr16
arpl
jg
lds
push
jg
stos
pop
addr16
stc
je
inc
lods
bnd
jae
sbb
jg
inc
lcall
jp
xor
sbb
mov
sbb
push
lahf
roll
sbb
dec
testb
dec
pop
decl
fs
into
sub
subb
cmc
lods
leave
sarl
inc
adc
hlt
sbb
hlt
xor
pop
push
cmp
sbb
scas
pop
mov
and
sti
sub
loop
mov
add
pop
stc
jp
lods
pop
mov
cs
je
mov
dec
daa
pop
iret
popa
xchg
cmp
pop
adc
mov
je
stos
cmp
aas
xchg
add
jno
pop
scas
dec
or
js
sbb
in
cmpsb
jecxz
stos
cmc
mov
cmp
int
inc
loop
or
loope
mov
addb
mov
pop
xor
mov
jae
cs
push
es
mov
xlat
sar
mov
popl
imul
cmp
loope
nop
lcall
cmpsl
stos
jp
hlt
mov
sbb
xor
outsb
inc
or
repnz
cmp
rcrb
out
mov
bound
ret
ss
and
sbb
loope
negl
adc
jae
mov
sbb
rcr
fnsave
andb
pop
ret
into
inc
push
lea
popa
xlat
sbb
cld
push
and
dec
adc
clc
dec
rorl
hlt
loopne
in
mov
in
xor
loopne
inc
fwait
xchg
mov
mov
imul
stos
and
fsts
or
pop
push
sti
mov
loope
dec
push
xchg
rcll
add
add
dec
jge
nop
lret
mov
xorl
sub
call
int
jecxz
push
ljmp
or
jb
mov
cmp
popa
in
popf
inc
sbb
aam
add
or
sahf
dec
add
call
sub
shrl
je
fldl
mov
pushf
jns
lds
adc
ds
inc
lret
in
lcall
mov
push
inc
outsl
pop
cltd
dec
xlat
push
mov
cmp
icebp
or
lods
sub
pop
js
jbe
add
xchg
and
test
jmp
js
sbb
loopne
pusha
pop
lcall
pop
scas
jle
push
cmp
mov
jmp
loope
sub
lret
shl
push
sub
lret
hlt
fadds
adc
sub
mov
lods
xchg
xchg
cmp
data16
push
adc
addr16
cli
dec
lods
lcall
jbe
lds
or
ret
push
jmp
test
pusha
mov
mov
imul
jge
jnp
sub
mov
add
jl
pop
lahf
out
aad
outsb
negl
xor
ficoml
adc
sub
add
lods
es
mov
scas
out
xchg
out
mov
scas
jge
pop
add
mov
xchg
movsl
outsl
mov
xchg
cs
inc
orl
bound
sbb
jmp
cmp
stos
dec
in
inc
clc
daa
jmp
fstps
repz
imul
mov
mov
cs
sbb
push
push
inc
cli
adc
ja
dec
and
mov
adc
and
xchg
xchg
lcall
insl
cmpb
add
add
stos
daa
inc
adcb
mov
bound
orl
pusha
jl
pop
cmp
inc
or
test
fcomps
mov
inc
dec
push
enter
mov
sbb
sbb
fwait
addr16
icebp
xor
jae
xorb
mov
addr16
jnp,pt
push
xchg
mov
and
push
adc
mov
sbb
xor
js
lods
sbb
pop
gs
iret
test
lret
jns
jle
mov
mov
sub
frstor
insl
divps
adc
popa
and
pop
mov
pop
jae
or
dec
push
mov
rorb
push
sti
in
dec
test
mov
cld
mov
jne
cmp
addb
das
mov
adc
inc
leave
sbb
scas
rcrl
inc
ds
testl
mov
jae
insb
and
push
arpl
and
scas
das
push
pop
adc
sbb
int
sbbb
xchg
je
push
fildl
data16
mov
test
daa
mov
xchg
sbb
jecxz
dec
scas
xor
lods
lret
mov
xor
push
cmc
pop
loope
aad
hlt
sub
xor
xor
repnz
sub
jae
pushl
push
pop
orl
mov
inc
inc
fs
fwait
mov
and
repnz
loope
loope
jb
out
cld
out
push
cmp
mov
shll
jecxz
daa
mov
xor
lcall
push
pop
fistl
enter
in
testl
adc
cmc
mov
inc
cli
sti
subb
push
pushf
leave
jae
and
sub
out
cmp
jo
adc
xchg
mov
jae
mov
mov
dec
jnp
lds
hlt
cmp
lock
imul
call
dec
mov
pusha
bound
cli
icebp
repnz
mov
fdivp
lods
sub
jns
jge
enter
ljmp
push
pushf
aaa
cmpsb
push
xor
std
fildll
in
sbb
xchg
mov
mov
sub
pushf
add
mov
mov
stc
repz
movsb
fsubl
mov
insb
sti
in
out
inc
dec
push
sub
cmp
sbb
pushf
jg
popa
mov
xchg
insl
jge
inc
adc
scas
and
jle
loop
pop
dec
popf
shr
dec
mov
mull
xchg
fwait
repnz
mov
call
dec
ss
mov
push
sub
enter
out
add
pushf
aaa
mov
add
fidivs
add
push
add
xchg
loopne
mov
popa
inc
mov
and
mov
dec
mov
or
dec
jmp
arpl
out
mov
adc
icebp
cmp
push
xor
sub
mov
dec
dec
stos
subb
cli
pushf
int3
out
pop
enter
dec
test
ret
pop
pop
in
out
pop
ljmp
bswap
dec
out
mov
dec
inc
mov
loop
insb
dec
shrb
test
lcall
loope
mov
push
jg
insl
pop
pop
sti
mov
pop
adc
adc
hlt
jmp
mov
mov
cmp
mul
push
push
mov
pop
xchg
jb
fsubrs
mov
or
or
call
or
pop
push
aaa
adc
push
in
rcrl
cwtl
mov
es
lods
sbb
adc
jae
insb
cmp
push
xor
shll
pop
mov
subb
jecxz
test
lcall
or
iret
or
aaa
das
and
andl
lret
xor
and
sub
ret
jl
int3
or
mov
lcall
adc
lret
fdivrl
adc
xor
inc
fsubrl
cld
adcl
cmp
jne
xchg
lret
mov
aaa
mov
mov
movups
pop
testl
test
daa
mov
in
test
mov
ret
sub
ret
ficoms
pushf
jle
mov
xchg
jbe
adc
push
aam
or
fmuls
pop
adc
es
push
adc
fsubs
mov
jns
ret
fldl
cmp
dec
pop
and
sub
cmpsl
mov
push
insl
les
mov
cwtl
js
lds
orb
mul
push
movsb
jbe
inc
sbb
push
cs
inc
test
test
sub
push
add
out
fwait
sbb
dec
jnp
fisubrl
test
jns
pusha
xchg
push
stos
scas
pop
or
jb
sub
sahf
fmulp
mov
fsubrp
je
ljmp
or
fadds
sub
icebp
aas
lret
movsl
mov
mov
inc
test
mov
clc
mov
stos
lret
das
sub
jmp
sub
fadds
mov
hlt
dec
pop
fstpt
gs
jnp
jp
call
xchg
aaa
lcall
fdivrl
and
ffreep
jp
fldt
repz
mov
lds
jnp
push
cmpsb
mov
push
fnstsw
sti
sahf
xchg
sbb
cmp
sub
lods
addb
lret
xor
jecxz
jns
mov
adc
and
aaa
push
pop
outsl
adc
call
mov
movsl
xchg
cltd
add
xor
jg
mov
sahf
sbbl
mov
jnp
stos
mov
push
out
sub
mov
push
mov
imul
mov
inc
inc
or
mov
jp
dec
mov
adc
popa
in
jo
mov
mov
mov
lds
and
fs
ficoml
aam
sub
adc
push
dec
es
or
ss
hlt
loope,pt
popf
in
test
aas
mov
mov
xchg
push
add
scas
jl
fbld
mov
imul
sbb
sbb
stos
or
and
fnsave
das
mov
lret
sub
mov
rcll
mov
stos
je
add
mov
fimull
sbb
stos
dec
les
add
cmp
aam
addl
hlt
pop
outsb
in
dec
mov
pop
ljmp
rcl
push
xchg
dec
sub
cmp
or
aam
mov
xor
and
dec
xor
ja
addl
pop
mov
adcb
mov
mov
sbb
sub
push
or
outsl
es
flds
inc
jle
pop
mov
repz
mov
repz
out
fildl
cmpsb
adc
outsb
mov
fidivrl
push
insb
iret
cmp
or
push
sbb
push
jl
ds
aas
xor
xchg
xchg
push
je
jmp
arpl
pop
push
sti
cs
js
cmp
call
jg
leave
add
pop
push
inc
loope
pushl
lahf
out
es
or
sub
adc
jbe
jmp
dec
ljmp
inc
or
mov
lea
pop
pusha
popf
fisttps
xor
je
jae
add
test
in
lcall
dec
add
movsl
leave
jno
xchg
test
mov
push
mov
stos
and
sub
mov
fisttps
repnz
arpl
cmp
fisttps
pop
pop
frstpm(287
push
fdivrs
mov
mov
mov
xchg
mov
mov
jmp
inc
movsb
shl
pushf
enter
dec
movsb
cmpsl
xor
bnd
call
and
cmp
ret
enter
sbb
and
sub
int3
dec
rcrl
push
xor
stos
sub
cmp
xchg
int
ja
outsl
fsubl
clc
push
lcall
lret
pop
out
xlat
pop
fucomp
repnz
mov
xchg
sahf
cmc
dec
scas
dec
test
jp
sbb
test
xchg
mov
movsb
mov
push
xchg
mov
popa
scas
push
lods
add
mov
sahf
sbb
adcl
out
xor
adc
sti
sub
add
cmp
sub
fnstcw
pop
or
cmp
popf
mov
std
int3
or
stos
xchg
mov
imul
sbb
mov
test
std
mov
les
cld
int
test
pop
or
rclb
pop
frstor
imul
rorb
int3
push
insb
pushf
insb
rolb
sbb
push
and
pop
daa
int
jl
xchg
jge
mov
mov
imul
sarb
dec
and
or
mov
cmp
inc
adc
jmp
and
sub
mov
add
mov
pop
aaa
pop
lods
xor
insl
outsl
mov
xchg
icebp
sub
cmp
nop
xchg
bound
fstpl
pop
push
test
sbb
sahf
aad
je
ret
mov
cli
jecxz
lods
cmpsl
dec
or
cmpl
lods
ljmp
pop
repnz
jnp
pop
mov
add
bound
out
sahf
pop
or
xchg
mov
mov
fistps
call
sbbl
mov
test
jle
loope
xor
std
rorl
data16
fsubl
sti
xchg
mov
in
inc
pop
fnstsw
loop
outsl
loopne
pop
in
lret
ja
or
or
fidivl
mov
xor
or
inc
leavew
xchg
cmp
inc
cmp
ss
out
insb
inc
sbb
inc
iret
xor
ljmp
shll
stos
xor
out
ret
pause
outsb
mov
pop
push
stos
testb
aam
dec
arpl
cmp
jp
imul
mov
inc
std
sub
cmpsl
mov
dec
jbe
ds
lods
mov
pop
lods
xchg
mov
xor
js
pop
aad
or
lret
xlat
movsb
inc
mov
push
jns
mov
bnd
push
lcall
add
bound
jg
pop
sbb
sbb
inc
sub
inc
in
cltd
out
mov
xor
ss
mov
das
sub
loopne
jbe
jne
lods
scas
add
ret
mov
mov
gs
ljmp
pop
xchg
jne
fcmovnb
ljmp
jno
jmp
mov
push
pop
repnz
outsb
lds
jecxz
aam
xchg
insb
cmp
movsb
add
int
xchg
mov
mov
test
inc
mov
movsb
addl
dec
stos
mov
sub
or
cmp
adc
xchg
xchg
xchg
sub
xor
pop
sahf
jmp
mov
sbb
pop
jnp
lds
notl
mov
sub
mov
mov
mov
std
lcall
ja
mov
xor
lock
cs
pop
int3
jg
hlt
fildl
dec
pop
and
pop
adc
sub
push
fstl
das
punpcklwd
inc
jle
sub
addr16
pop
dec
cmpsb
fs
pop
and
loop
jle
scas
lahf
sbb
ret
rorl
jns
std
test
dec
clc
xor
jae
cmp
cmp
xor
pop
rcl
jmp
push
sti
lods
rorb
push
leave
sbb
sbb
jo
lock
sbb
ljmp
cmp
repz
jae
icebp
jl
andb
mov
xor
or
or
test
loop
xor
mov
or
mov
aas
sub
jno
mov
shrl
pop
cmp
xchg
jbe
or
xlat
mov
outsl
ror
push
xchg
arpl
push
cmp
fstl
es
lahf
hlt
jp
inc
push
jl
push
dec
sbb
mov
inc
and
repnz
sbb
xor
rcr
dec
xlat
and
inc
jo
push
lods
aam
pop
mov
dec
popa
xchg
clc
js
sub
pop
aaa
sub
scas
inc
adc
pushf
push
mov
pop
sbb
cmpsl
fcomi
in
push
pop
pushf
fldz
pusha
call
pop
ret
shll
cmp
add
jnp
jae
enter
xchg
mov
mov
cld
subl
push
daa
out
xchg
repnz
xchg
mov
adc
push
iret
dec
dec
les
testl
push
mov
pop
sbb
in
jnp
aam
insl
loop
xchg
jne
mov
scas
jp
dec
push
jbe
sbb
and
shl
rorl
jl
jg
popa
mov
sub
aaa
scas
lret
xchg
or
jmp
sub
or
sub
dec
popf
int
nop
sub
xor
sar
jne
aad
push
and
mov
or
pop
aas
push
out
popf
inc
sbb
ja
add
cmp
das
adc
lods
xor
sahf
cs
pop
lea
jecxz
aad
mov
mov
cmp
jns
xsave
inc
mov
aas
mov
add
dec
inc
dec
out
in
fisubs
insb
lea
adc
or
add
outsb
mov
push
mov
sbb
adc
xor
mov
inc
mov
lds
insb
adc
test
inc
rcrb
fistl
pop
and
pop
call
xchg
aam
add
sbb
movb
push
inc
pop
lea
jne
mov
push
ja
pop
mov
add
ja
pop
adc
adc
or
xchg
arpl
arpl
fadd
and
mov
ret
adc
fwait
lret
ljmp
dec
jmp
stc
popa
arpl
cmpsl
cli
xchg
or
mov
push
outsb
mov
mov
xorb
repnz
mov
dec
fidivrl
nop
lahf
lock
cmpsb
mov
xchg
cmp
nop
mov
mov
lds
mov
mov
xacquire
push
mov
and
int
lods
andl
add
pop
push
pop
lea
pop
lret
dec
sbb
sahf
cli
inc
call
sahf
push
dec
push
push
loop
std
fs
inc
ja
jecxz
jns
in
inc
pop
mov
and
mov
bound
inc
sbb
jg
loop
jecxz
push
shl
nop
pop
das
leave
sub
mov
jge
mov
fsubrs
add
in
loopne
xchg
push
push
or
cmp
and
fwait
aaa
movsl
sarl
inc
lods
stos
jo
and
sbb
test
sahf
pop
ja
stos
sub
mov
loop
jmp
insl
lret
mov
adc
push
sbbb
insb
negl
arpl
leave
add
push
popa
mov
mov
mov
filds
mov
cmp
dec
int3
mov
sub
ret
into
test
sti
mov
and
jne
in
mov
mov
out
repnz
jne
stc
push
fimuls
ljmp
cld
imul
mov
movsb
jg
push
repnz
mov
fucomp
xchg
xchg
add
add
rcl
mov
insl
out
lock
jmp
jg
mov
mov
mov
jl
sti
ficomps
and
into
jnp
out
and
jae
adc
jo
or
stos
ds
mov
insb
ret
ss
xchg
or
leave
push
and
lcall
fimuls
mov
pop
sahf
push
out
test
fsub
outsl
xor
sbb
push
push
cmp
loopne
pop
push
or
mov
mov
mov
jmp
loope
mov
aaa
stos
cltd
xchg
mov
js
rcrl
pop
andb
lods
mov
les
adc
daa
repnz
xchg
movsl
and
ljmp
sbb
icebp
adc
or
fs
mov
pop
ret
push
outsl
cmpsl
shlb
lahf
repnz
push
jg
push
loope
repz
mov
lahf
push
xchg
add
sbb
pop
sbbb
rcr
mov
mov
movsb
xlat
movsl
adc
inc
sbb
stc
test
xchg
imul
inc
mov
popa
cli
xchg
lret
outsl
push
pop
mov
push
popf
and
pop
lcall
inc
push
ja
popa
sub
mov
aam
loope
out
cmp
fwait
bound
mov
jmp
insl
mov
lock
and
push
cmp
sub
daa
and
push
lcallw
xchg
stc
hlt
push
iret
lds
stc
mov
fwait
int3
pop
in
dec
or
aas
xlat
or
mov
mov
add
jp
mov
inc
and
pop
fstps
adc
sbb
sbb
sahf
push
divb
cli
push
sbb
ss
pop
sbb
add
pop
cmp
or
inc
mov
push
jns
mov
push
scas
andl
mov
fsts
xchg
xor
std
ja
adc
and
scas
xchg
mov
inc
enter
sub
lods
popf
adc
xchg
sbb
adc
mov
xor
mov
mov
fwait
es
jge
je
inc
jo
insl
out
fsubrs
fldl
xchg
push
mov
mov
xor
std
xchg
push
mov
push
cmp
je
dec
jae
stos
test
loope
leave
arpl
in
mov
inc
sbbb
push
in
addr16
lea
mov
stos
lcall
ja
xor
pop
loope
pop
jne
pop
jbe
loopne
outsb
mov
jne
push
jecxz
dec
mov
xor
stc
or
cmpsb
mov
xchg
sub
jp
movsb
pushf
inc
es
and
insl
testb
pop
jmp
loope
jg
xorl
daa
jge
xchg
xchg
cwtl
push
stc
int
pop
xchg
lods
test
test
fwait
aam
in
mov
push
push
or
pop
push
movsb
push
and
adc
mov
shr
mov
adc
out
sub
outsl
dec
cs
popa
xchg
fcmovnbe
mov
daa
xchg
xlat
testb
fucom
fidivrl
mov
clc
ss
sub
cmp
or
push
pusha
xor
mov
in
out
sub
shll
fwait
dec
insb
xchg
testb
push
popf
push
or
cwtl
mov
or
testb
fldl
dec
js
adc
hlt
xchg
roll
icebp
or
rorl
lods
add
inc
xlat
daa
addr16
mov
outsb
mov
add
push
inc
jno
or
mov
pop
xchg
cltd
cltd
cltd
sbbl
xchg
or
addr16
add
out
fmuls
dec
and
cmp
xchg
push
mov
cmp
mov
scas
iret
int
sbb
movsl
mov
movsl
pop
xchg
mov
xor
or
push
mov
in
loopne
hlt
fldt
sub
fdivrp
mov
xor
fwait
call
sub
ret
aad
flds
out
xchg
inc
jb
cmp
push
icebp
popa
pop
shlb
mov
mov
int3
inc
mov
bound
or
push
mov
cmp
pop
cmp
push
outsl
aas
inc
push
jb
lds
push
mov
mov
js
cmc
lret
ret
stos
aad
jbe
adc
dec
pop
or
mov
cld
orb
mov
pop
movsl
lret
into
aad
std
cwtl
test
sbb
add
je
cmp
push
in
addr16
je
ds
and
gs
pushf
mov
xlat
test
xchg
fimull
pop
or
cmpsl
push
popa
cwtl
xchg
inc
add
sbb
mov
adc
aas
stc
jge
js
hlt
std
add
inc
rclb
adc
pop
mov
ret
push
mov
inc
pop
imul
std
xlat
pop
mov
sub
ja
or
cmpsb
cwtl
dec
add
lea
lds
loop
repz
aas
ja
movsl
pushw
mov
push
add
sarb
or
adc
in
sbb
stos
das
pop
out
insb
mov
mov
inc
xor
int
sarb
and
inc
ret
into
shrl
jp
pushl
lret
dec
jo
sbb
and
jb
jg
bound
cld
aaa
roll
rcr
lea
mov
inc
mov
inc
sbb
dec
dec
mov
jnp
mov
sbb
js
mov
jl
cmp
jge
or
mov
movsl
stc
or
lret
dec
jb
and
icebp
scas
inc
stos
je
and
cli
je
xor
lahf
xchg
dec
repz
sub
pusha
inc
das
mov
push
xchg
leave
xchg
aas
xchg
and
lods
fsubs
adc
fadd
cmp
stos
repz
add
ss
xchg
inc
sub
jmp
and
out
sub
test
cld
out
fld1
xchg
sbb
sub
sub
jge
popf
lret
jp
xor
shrl
add
out
inc
add
and
rcll
and
lret
inc
pop
adc
jbe
faddl
xor
insl
push
outsb
add
popa
incb
sti
jae
fistps
jb
push
hlt
mov
xor
mov
jge
mov
out
dec
repz
cmp
push
movsb
xorb
out
push
sbb
push
scas
mov
xchg
sbb
mov
je
or
mov
mov
scas
mov
rcll
or
test
xchg
lahf
inc
stos
inc
mov
cmp
dec
push
imul
out
xchg
rcrb
add
mov
call
loop
dec
push
sbb
mov
lods
push
push
and
fcomps
add
in
xor
jl
mov
stos
fnstcw
jp
bnd
aas
in
or
add
std
lods
mov
icebp
inc
incl
push
lcall
repnz
adc
insb
and
ja
sbb
xchg
fbld
fsubs
sub
loop
pop
sbb
push
hlt
dec
adc
push
stos
add
adc
jl
xchg
pop
ja
xchg
mov
or
outsb
xchg
test
aas
pop
or
out
add
shrl
cmpsl
inc
clc
enter
loop
out
jns
fwait
dec
aam
subb
xchg
mov
and
mov
mov
inc
sahf
dec
bnd
or
adc
push
fmull
jmp
cmpsl
push
sbb
adc
lcall
or
and
sub
pop
rorl
js
test
dec
mov
cwtl
pop
dec
in
mov
cmp
pop
aad
push
xchg
push
stc
inc
sub
sbb
pop
adc
and
daa
jp
pop
aas
mov
xor
pcmpgtw
std
cwtl
jge
out
loop
pop
inc
push
lods
jb
inc
stos
xchg
stos
js
movsl
inc
or
pop
faddl
add
pop
shrb
andb
push
daa
dec
dec
jb
fdivrs
mov
dec
fisubrs
sub
cmc
call
push
cmpsb
cs
lods
and
js
pop
dec
jb
cmp
test
data16
mov
or
xor
sbb
lods
sbb
add
xchg
push
cmp
xchg
pop
fsubs
cmp
das
or
fistps
xchg
cli
push
cmpsl
sbb
mov
mov
add
adc
cwtl
sbb
mov
xchg
loopne
lret
jns
je
xchg
pop
push
pusha
outsb
pusha
pop
add
adc
mov
mov
in
push
or
cld
xor
pushf
sbb
out
dec
mov
and
mov
outsb
cmc
add
adc
dec
mov
das
jge
push
or
xchg
mov
fwait
jns
fstl
in
mov
mov
into
xchg
std
addr16
mov
jnp
inc
pop
jbe
jb
xor
adc
mov
and
inc
sbb
or
jmp
adc
xchg
dec
shrb
mov
sbb
dec
outsb
jmp
outsb
cmc
inc
movsb
push
hlt
or
lock
jae
sub
mov
adc
sbb
xor
es
jecxz
hlt
sbbb
and
in
push
mov
repz
jge
jo
jne
cmp
insl
mov
cmpsl
lods
addr16
push
out
in
cmpb
jns
jg
and
and
dec
jmp
outsl
xchg
dec
or
aas
inc
out
fildll
jmp
cmp
pushf
sub
fwait
mov
call
fldcw
dec
loopne
ljmp
inc
xlat
add
dec
sti
in
push
es
cwtl
mov
adc
lds
mov
mov
add
popf
and
daa
dec
mov
out
xor
ficomps
mov
dec
imul
int
sbb
pushf
and
mov
repz
loopne
jle
ja
mov
dec
mov
dec
and
xlat
int
call
xchg
shll
xor
cli
xchg
shrl
fs
or
xorl
mov
stos
repz
in
and
xchg
mulb
sbb
rorb
fnstsw
xchg
cmp
jnp
aas
iret
and
mov
push
inc
leave
scas
cmp
jmp
xor
cmp
scas
cmp
push
mov
cwtl
sbb
jns
lock
bound
mov
icebp
scas
xchg
or
mov
cmp
jae
pusha
sub
push
dec
sbb
push
and
jmp
jo
push
push
fst
cmp
mov
push
mov
xchg
lret
imul
fmulp
int3
adc
sahf
outsb
sti
inc
cmc
jno
mov
ss
jl
aas
aas
rolb
in
fsubr
jl
jbe
mov
sbb
or
xchg
cmpl
ficoml
or
adc
inc
sbb
outsl
jnp
jne
daa
ret
iret
movsl
add
mov
enter
fisubrs
and
mov
loop
in
mov
cmp
jnp
ret
in
lcall
jmp
popa
rorb
movsl
or
cs
sub
outsl
add
adc
cmp
fdivs
mov
push
sub
lods
xor
movsl
xchg
sti
push
lds
jge
popa
mov
cmp
cmp
push
jp
and
push
lds
cmp
sbb
xchg
test
or
out
outsl
jo
int
inc
adc
adc
push
xor
iret
xchg
fsubl
popa
mov
mov
mov
je
movsb
jmp
dec
xchg
test
mov
nop
out
lret
push
daa
shrb
iret
andb
stc
push
pop
cltd
movsb
push
sub
add
mov
xchg
or
insb
mov
sub
in
lods
aad
js
adc
sub
xor
sahf
mov
jno
cmp
jo
dec
push
sbb
mov
xchg
test
test
mov
mov
sub
jne
outsl
ret
push
jae
cmp
mov
sub
inc
loop
sbb
mov
lods
ficoml
out
push
call
mov
push
gs
popf
pop
mov
dec
pushf
mov
inc
and
lock
and
mov
mov
cmpsb
push
cbtw
pushf
orl
jne
mov
lcall
inc
aas
mov
xor
mov
hlt
sub
mov
sbb
jns
dec
insl
adc
fdivl
int3
jmp
leave
or
es
mov
push
adc
repz
add
dec
or
pop
fstpt
cmpsb
dec
cmp
jg
xlat
scas
mov
fbstp
pop
push
sbb
xchg
cmp
mov
mov
stc
mov
rclb
dec
pop
insb
sbb
ds
stos
dec
in
xchg
icebp
in
or
jle
sbb
push
pop
xchg
std
push
inc
pop
leave
inc
repnz
das
icebp
je
push
testl
mov
idivl
sbb
jecxz
pop
jne
jb
je
cmp
xchg
pusha
jle
add
inc
xchg
cli
mov
xlat
rclb
js
dec
rcr
lods
inc
mov
or
data16
test
mov
imul
xchg
addl
test
sbb
fmuls
add
fwait
stos
or
sub
sahf
dec
sub
xchg
sbb
lret
daa
sub
inc
outsb
jae
jl
int
pop
gs
sbb
cwtl
dec
adc
add
jo
mov
jae
push
mov
cmpsb
cmpsb
sub
out
out
gs
cltd
gs
fmuls
fldl
sarl
sbb
jns
jmp
ljmp
imul
pop
xchg
pop
add
cltd
jne
js
add
or
fsts
out
mov
adc
incl
lret
xor
repz
mov
xchg
dec
jp
and
dec
dec
push
lods
int
aad
cmp
mov
dec
das
add
jg
pop
xchg
jmp
jge
dec
sub
jbe
sub
adc
push
push
cs
test
loop
ja
in
pusha
pop
addb
mov
test
lret
xchg
clc
hlt
cmp
pop
mov
gs
imul
fisttps
pusha
loope
scas
jg
jne
popa
je
cli
mov
aad
es
test
scas
mov
sub
pop
xor
imul
out
push
in
jnp
dec
jnp
xchg
mov
add
mov
add
out
imul
ja
jmp
lcall
mov
jg
push
xor
inc
jae
inc
mov
cs
testb
leave
out
outsl
cld
xchg
mov
cmp
mov
mov
cmpl
sbb
arpl
add
inc
pop
xor
cs
pop
lods
sti
xchg
test
mov
out
int3
js
and
test
and
inc
jno
cltd
ret
fdivrl
mov
sub
sti
std
xchg
sub
jne
daa
dec
dec
outsl
out
js
xchg
ds
jae
int3
mov
pop
mov
lea
in
mov
sysenter
fs
dec
mov
or
inc
nop
or
test
cmc
rolb
ja
sub
xchg
int3
inc
stc
cmpsl
push
cmp
clc
or
jle
dec
shlb
sub
xchg
inc
lods
les
ret
inc
pop
jg
hlt
ds
xchg
mov
pusha
jb
jae
aad
xchg
fisubl
insb
push
push
out
dec
ja
aas
or
rcrb
and
pop
aas
je
imul
push
or
sbb
fs
push
aas
js
rorb
iret
clc
test
add
pop
cmpb
pop
lea
xchg
mov
adc
push
lds
sbb
or
sbb
mov
fdivr
add
sbb
mov
push
dec
mov
movsb
jns
mov
or
xchg
adc
fnstenv
out
mov
divb
out
cmp
insl
pop
aaa
icebp
out
test
adc
into
cld
out
cmp
jp
mov
jo
and
bound
sub
scas
cmp
and
test
pop
push
sub
test
pop
addb
in
fidivrs
and
xchg
shrl
sahf
mov
pop
ss
mov
fs
inc
inc
into
dec
xchg
movsb
xchg
lock
test
test
push
shrb
pop
fbld
data16
insl
push
loope
bound
cltd
adc
into
lock
or
inc
xor
shlb
adc
aam
push
hlt
cmp
cmp
jae
add
mov
sbb
adc
mov
aas
leave
add
leave
cltd
out
push
mov
xchg
rcrl
es
sub
xor
adc
jmp
insl
mov
mov
mov
cmp
xor
sbb
dec
mov
insb
testb
inc
les
shlb
es
outsb
leave
mov
mov
js
inc
popf
stos
outsb
mov
in
cmp
xor
bound
jle
fucomi
enter
sti
jae
in
ret
test
imul
pop
repnz
mov
push
inc
std
es
xchg
inc
ja
andb
fiadds
mov
jnp
fimull
or
xchg
xchg
and
adc
fwait
or
cmp
xor
iret
iret
cli
outsl
lods
sbb
xchg
mov
in
insb
ja
scas
loope
sub
push
sbb
int
nop
adc
mov
or
push
cli
scas
dec
sbb
cs
jb
movsb
ret
test
xor
outsb
jg
sti
jl
fsts
lock
jnp
repnz
aas
outsl
and
mov
pop
add
test
into
mov
fnsave
or
ret
cltd
and
mov
push
push
dec
pop
lret
sbb
loop
sbb
negl
add
push
rorb
xchg
repz
adc
sbb
inc
jno
pop
outsb
das
les
cmp
push
xchg
mov
dec
stc
inc
dec
or
push
mov
jle
inc
dec
cmp
pusha
ljmp
add
faddp
pop
cli
push
inc
adc
mov
jnp
lret
adc
outsb
add
rclb
shll
test
outsb
pop
mov
mov
out
mov
or
pushf
push
add
movsb
call
out
dec
xchg
gs
push
push
inc
dec
or
push
in
sub
into
pushf
sub
xor
pop
bound
inc
xchg
stc
ret
sbb
sbb
push
out
xor
lret
fnstcw
dec
push
push
out
data16
jae
jl
ficompl
mov
enter
jle
repz
pop
test
movsl
ret
xor
adc
adcl
test
rcll
xchg
divb
dec
xchg
xchg
arpl
sahf
sbb
xor
punpckhbw
push
xor
or
rcr
mov
and
jle
scas
dec
mov
js
in
call
dec
mov
jbe
xor
scas
inc
xchg
xchg
es
xchg
gs
call
les
mov
lods
movsb
jecxz
hlt
inc
cmpsl
jmp
or
sbb
sub
stos
fistl
xchg
mov
adc
fadd
jg
pop
push
sarb
mov
cmp
jp
fwait
xorl
out
pavgb
sbb
les
pop
or
add
sbb
inc
cmpsb
fiadds
arpl
in
and
dec
mov
ljmp
fs
mov
push
sub
pop
insb
jb
cld
mov
outsl
ret
sti
lahf
mulb
cmp
xchg
ja
scas
jae
sub
jb
test
xchg
and
pushf
push
not
mov
call
addr16
or
xchg
fs
mov
cmp
hlt
push
and
jge
loop
mov
nop
dec
mov
enter
lods
pusha
movsl
call
in
test
jge
mov
dec
fists
ds
lret
fldt
push
xor
push
rolb
inc
daa
and
movl
mov
inc
popa
into
out
sub
pop
sbbb
lock
mov
mov
stos
jbe
es
sub
jl
test
out
mov
xor
loope
jle
add
mov
ljmp
and
mov
xchg
cmp
jne
push
push
xchg
dec
rorl
or
js
add
and
mov
adc
xor
loopne
rcr
ficoms
out
jnp
mov
mov
inc
mov
and
sahf
or
mov
leave
or
into
lock
loope
push
cs
bound
xorb
pop
cmp
enter
add
sbb
iret
or
fistpl
fucomip
lea
cltd
out
pop
lock
xor
roll
jb
test
dec
sbb
push
mov
dec
in
icebp
cmp
push
fistpll
out
iret
dec
mov
xchg
pop
inc
divb
pop
popa
clc
ss
pop
push
fdivl
pop
xor
or
out
adc
inc
enter
jno
ljmp
fwait
or
pop
cmpsb
jnp
jp
and
cmpl
movsl
push
push
bound
stc
jmp
adc
aad
jno
roll
addl
dec
inc
lcall
cld
inc
shll
jae
adc
cmpsb
cli
pop
sub
xor
jo
jae
jp
lods
imul
outsl
xchg
push
or
adc
ret
or
xor
popa
sahf
mov
mov
out
int3
add
fsubs
in
jno
lahf
jl
fiadds
adc
sub
dec
mov
mov
outsl
mov
mov
mov
jnp
mov
cmpsb
cld
test
rolb
inc
ficompl
xchg
push
xor
or
xor
lock
mov
mov
lods
dec
lods
fisttpll
in
pushf
adc
mov
push
icebp
or
or
mov
push
sbb
sahf
data16
pushf
ja
inc
mov
pusha
pop
mov
push
push
out
jle
pop
test
adc
inc
std
push
out
jl
out
adc
lock
pushf
out
fwait
jns
scas
and
jg
test
dec
shlb
dec
xchg
mov
aaa
sbb
das
test
jns
xchg
ret
adc
push
dec
test
push
add
ss
mov
adc
jmp
sbb
scas
pop
dec
sbb
jmp
iret
or
bound
je
test
sahf
pop
or
clc
sub
and
or
xchg
lret
dec
les
add
add
sub
push
xchg
mov
mov
pop
outsl
dec
push
ja
mov
lds
cmp
mov
push
lods
xor
lods
leave
test
ja
xor
dec
cmp
xor
mov
int3
aas
nop
xor
sbb
int
test
push
outsl
mul
push
and
push
aad
lret
out
jg
mov
or
insb
dec
or
sti
xor
por
imul
adc
or
add
xchg
sub
fistps
insb
aam
stos
sbb
push
or
jnp
clc
inc
clc
ret
jnp
dec
pushf
cmpsl
push
pop
fimull
gs
loopne
push
mov
mov
adc
outsb
mov
xchg
cltd
xchg
stc
or
jg
mov
bound
cmp
push
loope
sti
sbb
push
test
cmp
jmp
scas
xchg
inc
fcmove
mov
insb
sbbb
or
into
lret
pushf
mov
and
mov
pop
pusha
les
scas
jnp
inc
aas
rorl
mulps
imul
jo
aas
mov
xor
out
fdivrs
call
inc
sub
ret
xchg
insl
mov
mov
lret
aas
mov
push
rorb
jbe
lods
jns
test
aaa
push
int3
daa
pop
mov
pusha
add
ja
inc
out
sbb
mov
jns
add
xchg
lock
xchg
scas
ja
jle
or
and
and
xchg
pop
sub
shll
arpl
lcall
xlat
insl
lret
or
pop
xchg
iret
dec
stos
andl
xchg
rorb
push
adc
call
inc
dec
imul
dec
push
cs
pusha
lea
and
dec
call
or
adc
addr16
push
inc
aad
pop
adc
jo
push
adc
ret
js
lock
pusha
xor
pop
into
mov
jge
hlt
leave
mov
aas
cmp
out
pushf
lods
aas
push
loope
fcomip
dec
shll
jle
push
and
jle
jmp
push
dec
ds
movsb
out
in
test
movsb
push
push
das
scas
jge
adc
xor
aam
adc
scas
mov
pusha
inc
into
mov
outsl
test
in
dec
jbe
push
push
int
lret
int
insb
adc
mov
adc
mov
mov
dec
outsl
or
xchg
lds
jecxz
or
inc
xlat
cmpsb
sub
jae
lods
aam
cltd
lret
xor
lock
mov
mov
inc
jbe
jnp
pusha
pop
lret
movsb
shrl
mov
adc
std
inc
loopne
movsb
lcall
aaa
inc
mov
xchg
aaa
mov
xor
mov
ljmp
lods
std
push
cmp
sbb
in
cwtl
jne
pusha
mov
jns
outsl
cmp
mov
aas
xor
lcall
add
jg
popf
xor
addr16
push
mov
add
jge
xchg
data16
popf
mov
sbb
cmc
incb
mov
adc
outsl
outsb
xchg
pushf
sbb
sbb
or
jo
dec
repz
pop
push
shlb
les
dec
mov
or
movsb
call
ljmp
jno
rdpmc
mov
lock
cmp
dec
lods
mov
mov
add
loop
pop
jp
imul
outsl
add
fbld
imul
decl
pop
jl
shlb
push
aas
pop
jp
pop
jp
icebp
call
mov
stos
in
aaa
mov
mov
loope
push
cmc
push
gs
or
jno
mov
mov
or
ret
leave
pushf
sti
fwait
pop
pop
test
dec
mov
inc
out
jl
cltd
ret
lahf
mov
repnz
add
outsl
and
sarb
xor
adc
mov
mov
cld
notl
mov
xorl
sub
and
xchg
in
popa
jmp
pushf
mov
xor
sbb
out
mov
mov
je
das
popa
jbe
and
xchg
cmpsb
mov
leave
sub
cmp
movsl
or
fdivrs
je
cmp
lea
and
insb
xor
call
popa
pop
xchg
cwtl
push
xchg
dec
je
test
adc
push
scas
inc
hlt
in
test
cmpsl
push
test
dec
cmpsl
into
and
dec
dec
push
movsb
aad
stos
sub
mov
loop
mov
ljmp
sbb
cli
mov
add
lods
stos
cli
xchg
test
pop
mov
push
cmp
cld
mov
sbb
das
jecxz
inc
mov
push
aad
mov
in
int
xor
in
pop
sarl
sbb
daa
mov
fmull
cmp
repnz
add
or
mov
and
test
push
lock
and
scas
stos
jecxz
les
scas
ss
mov
pop
mov
xchg
jmp
test
test
pusha
sub
fwait
test
cmp
pop
test
cs
sbb
fstl
popa
mov
dec
sbb
mov
xchg
pop
or
push
xchg
repz
scas
cltd
iret
getsec
repnz
sbb
jle
pushl
stos
ret
test
jmp
lahf
add
movsl
cwtl
sub
std
je
subb
out
pop
mov
and
mov
xchg
dec
and
push
fsts
mov
iret
sti
dec
pop
lds
add
dec
hlt
or
jno
fldt
inc
xchg
cmp
push
jle
dec
adc
lods
jns
repz
test
xchg
dec
jmp
jmp
leave
mov
inc
test
insb
popf
mov
stos
jp
pop
xlat
shll
jne
inc
fcoml
dec
aad
inc
or
mov
arpl
pop
sub
mov
les
jp
push
movsl
data16
ja
call
dec
imul
mov
andb
push
les
adc
xchg
jne
dec
mov
punpcklbw
push
cmpsl
dec
lods
repz
jle
mov
into
jo
es
jl
mov
fwait
pushf
jo
cmp
pop
cli
jmp
icebp
add
imul
daa
xchg
test
push
add
cli
adc
out
into
pop
mov
push
inc
pushf
stos
push
push
push
xorl
out
andl
leave
ja
in
or
push
push
mov
in
lods
int3
lods
ds
cmp
mov
or
or
popa
mov
movl
cmpsl
sbb
or
sbb
fwait
mov
xchg
inc
xor
stos
jmp
loopne
xchg
dec
daa
aaa
addr16
mov
push
xlat
or
test
daa
loopne
test
aad
adc
data16
fsubs
or
fidivrs
push
jbe
mov
inc
mov
aam
je
inc
pusha
dec
in
or
xor
cli
and
es
bound
sub
hlt
roll
pop
push
push
inc
mov
mov
mov
add
push
xlat
mov
loope
xchg
mov
dec
inc
mov
pop
cmpsl
mov
add
pusha
jge
insb
mov
xchg
loopne
loopne
mov
fidivrl
or
mov
and
mov
jp
leave
iret
movsb
and
aam
stc
mov
repnz
push
int3
mov
and
call
or
scas
pushf
adc
add
mov
xchg
jb
xor
or
ljmp
adc
inc
push
and
mov
mov
cmpl
dec
and
lock
lock
aaa
push
das
aaa
mov
xchg
mov
jnp
mov
fistps
mov
push
cmp
xchg
pop
cmp
dec
cld
cmp
in
clc
mov
ljmp
fsubl
pop
cli
adc
std
jg
popf
xor
sub
sub
adc
mov
xor
scas
lret
add
fisttpll
dec
sbb
cltd
or
sbb
xor
into
repz
out
jb
scas
mov
adc
add
ret
xorb
xchg
cmc
push
rcrb
jmp
outsl
mov
rcll
loop
mov
add
adc
pusha
leave
mov
jp
adc
ja
push
jbe
and
cli
out
mov
jb
in
push
xchg
jge
lods
fisubrs
adc
mov
leave
add
lret
and
adcl
ficoml
adc
lods
pusha
push
ficoml
in
pop
clc
and
loope
mov
mov
mov
out
aaa
stos
mov
scas
fcmovb
sbb
cld
ret
mov
loopne
push
inc
fwait
out
divb
xor
test
movsb
repnz
dec
or
add
repnz
adc
rorl
pop
push
xor
in
mov
inc
adc
add
fcmove
add
jmp
xchg
dec
inc
imul
dec
cs
repz
xor
mov
notl
inc
dec
stc
cmp
leave
dec
dec
out
jae
cmpsb
outsb
cmp
push
inc
push
or
fcmove
lret
push
les
aaa
sahf
sub
push
jp
adcl
int
push
sub
push
arpl
mov
xchg
outsl
test
pop
test
xchg
dec
bswap
push
mov
cmc
pop
cmp
or
sbb
icebp
stos
pop
stos
cwtl
mov
push
xchg
int
arpl
outsb
mov
push
adc
mov
loopne
jmp
cmc
inc
or
js
xchg
mov
rcrl
aas
cmpsb
mov
cwtl
mov
imul
push
cmp
repnz
pop
cmpsb
xor
pop
push
cltd
pop
rcll
xor
into
mov
outsl
out
cmp
mov
pop
enter
sub
ret
insl
sub
sarb
aad
test
and
xchg
sbb
cmp
cs
jae
imul
jb
push
test
mov
jp
imul
jecxz
xor
cmc
push
shl
mov
clc
aaa
cmp
lcall
mov
or
jb
stc
cmc
and
imul
mov
sbb
mov
lods
fwait
pop
dec
test
push
imul
es
xchg
int3
mov
push
pop
adc
js
mov
scas
adc
fs
mov
test
xchg
je
repnz
cmp
xchg
mov
dec
mov
mov
cmpl
push
fsubrl
mov
cwtl
test
xor
lds
mov
or
nop
and
sti
in
xchg
xchg
and
stc
jne
lret
dec
xor
ljmp
out
sub
imul
or
pop
push
into
push
fs
cli
jo,pt
shrl
das
jmp
mov
cmp
xchg
pop
push
cmp
mov
cmpl
icebp
sbb
cmp
pop
and
outsl
dec
fistpll
xchg
mov
dec
fdivp
mov
xor
pushf
add
and
imul
adc
clc
push
mov
addr16
mov
mov
inc
insb
xor
addr16
fwait
leave
push
clc
fsubl
inc
addr16
push
movsl
jecxz
dec
into
loope
data16
jbe
adc
or
in
pop
leave
add
enter
fldenv
nop
and
jbe
mov
out
fiadds
jbe
gs
push
mov
loopne
dec
adc
push
shl
xchg
dec
out
inc
xorb
test
int3
loop
sbb
xor
cmp
mov
dec
fbstp
push
loopne
mov
mov
mov
cwtl
arpl
push
mov
mov
cld
jmp
fisttps
js
mov
jbe
mov
xor
call
jp
inc
call
xchg
and
sbbb
pop
pop
push
mov
pop
dec
jmp
jle
inc
rcl
subl
outsl
fdivrp
lcall
mov
rcl
lods
and
mov
mov
in
fsincos
test
mov
push
sbb
std
test
mov
xor
mulb
jp
rorb
jo
xorb
mov
imul
mov
fnstcw
mov
dec
and
shr
pop
or
in
decl
sub
dec
cmp
aam
adc
pop
lock
movsl
sub
loopne
icebp
inc
ret
mov
mov
cmp
flds
cmp
mov
hlt
jnp
test
add
adc
es
int
daa
cmp
xor
or
fldcw
mov
test
jbe
fs
aad
aam
cs
push
rclb
stos
popf
scas
decl
sbb
inc
je
xor
aas
lods
aaa
pushw
pop
cmp
xor
lea
adc
xor
xchg
dec
and
or
and
jno
lock
dec
inc
popf
inc
mov
sarl
das
aaa
xchg
mov
xchg
and
push
out
imul
pop
or
insl
push
cmp
fmul
push
sbb
fcmove
lods
sbbl
or
adc
hlt
pusha
das
pusha
cmp
call
in
popa
push
push
and
les
add
add
orl
ljmp
call
cmp
lods
sbb
movsl
mov
sub
out
cld
inc
enter
add
mov
fldt
or
push
dec
sub
mov
push
aas
sahf
lock
pop
jl
dec
xchg
cmpsl
push
lcall
mov
rcrb
mov
and
inc
inc
xor
fdivrl
mov
mov
pop
fsubrl
mov
loopne
in
iret
or
xchg
test
shlb
pop
cltd
or
lods
fldt
adc
test
cmp
cltd
in
cmc
add
mov
testb
inc
jo
push
adc
mov
or
dec
and
or
add
xor
call
or
lds
mov
fsubs
out
push
inc
or
mov
jae
xchg
push
mov
mov
cmpsl
and
in
arpl
xchg
xchg
mov
sbb
loope
mov
jns
in
lret
jp
std
adc
add
mov
cmpsl
cmp
bound
jg
iret
test
js
fldcw
jno
sub
jmp
jae
repz
add
lret
xchg
dec
lods
cwtl
add
insb
cmp
xor
mov
jbe
in
ja
pusha
lea
arpl
pop
lods
aam
lret
push
mov
push
jecxz
std
fisubrl
mov
push
jmp
sbb
push
movsl
sub
leave
mov
dec
push
pop
test
mov
and
je
cmpsl
insl
and
mov
and
in
pop
popf
imul
push
aad
fsub
inc
lret
cmp
subb
data16
fstpl
je
sub
out
loope
cltd
xor
loopne
pop
pop
mov
cli
cmpsl
inc
aas
add
or
cmpb
stos
fdivp
and
lods
mov
push
les
fidivrl
jne
cmpsb
pop
mov
arpl
sub
sbb
imul
cmp
jmp
jge
ljmp
into
push
mov
jle
xor
push
dec
sub
inc
dec
jns
mov
in
shlb
out
insl
orb
jbe
lock
jbe
gs
shrb
incb
call
loope
xchg
mov
hlt
jecxz
dec
push
rorb
cmp
mov
fwait
cmp
sbb
repz
loop
xchg
mov
lods
sub
rorl
addb
test
push
out
inc
sti
jmp
mov
stos
and
cld
mov
pop
adc
sbb
pusha
pop
cmp
push
or
xchg
js
roll
fisubrs
insl
dec
pop
scas
btr
inc
sub
push
mov
jmp
fisubrl
aaa
bound
jle
xchg
cmp
ret
les
or
lods
call
push
dec
adcb
jae
addl
sar
dec
in
shlb
cs
pop
imul
fisubrl
outsb
xlat
outsl
ljmp
xchg
mov
and
and
jecxz
fstps
push
fmuls
adc
daa
pop
add
xchg
mov
sub
jg
into
loopne
inc
and
je
ja
and
bound
bound
pop
fwait
xor
dec
and
and
add
aam
pop
mov
jmp
stos
pushf
add
inc
or
in
push
cmp
test
push
push
mov
or
mov
sbb
sbb
cli
and
jns
scas
cmp
les
sbb
xchg
mov
mov
iret
test
push
sti
pushf
xor
mov
fldt
jmp
push
jb
fdivrs
pop
and
sbb
and
inc
test
int3
fcoms
scas
lcall
ret
sbb
cmp
out
jecxz
jae
adc
lret
mov
test
xchg
sbb
xor
xor
fistpll
push
shrl
xor
lahf
dec
hlt
or
loope
subl
ret
ja
cs
mov
ja
popa
fisttps
pop
pop
imulb
pusha
loopne
mov
add
test
dec
stos
push
pop
int3
movsb
aad
gs
mov
fists
mov
adc
cmp
mov
inc
ss
dec
aaa
sub
push
lcall
and
dec
mov
cmp
addb
inc
rcr
test
cmpsl
adc
inc
int
fldcw
lret
lea
sbb
push
or
cmp
fcomps
rcrb
or
mov
mov
lea
inc
sbb
ss
cmp
popa
lea
je
fcoml
xor
push
das
push
stc
aas
frstor
mov
push
loopne
adc
dec
xchg
push
pop
jle
fsts
add
test
cli
mov
dec
clc
stos
aad
clc
adc
sbb
popa
imul
into
mov
dec
inc
xor
enter
test
addr16
add
add
mov
sbb
outsb
and
jp
stos
mov
testb
push
repnz
test
mov
jle
gs
aam
mov
mov
aas
jbe
adc
push
dec
push
loopne
std
xchg
cmpsl
dec
xchg
xor
inc
jp
shlb
fs
add
aaa
outsb
or
xchg
mov
xor
lcall
adc
dec
xor
dec
mov
mov
inc
idiv
enter
mov
nop
sti
and
std
addb
dec
inc
mov
or
ljmp
insl
ficoml
mov
pushl
aad
adc
outsb
imul
add
test
xor
jbe
xchg
push
push
add
shrb
enter
out
xchg
in
xlat
aad
and
adc
aas
jne
movl
adc
enter
outsb
adc
rorb
cmp
add
dec
mov
mov
sub
xor
mov
xchg
lods
jp
jne
rcrb
push
ljmp
stc
fldt
scas
hlt
shrb
bound
and
dec
mov
adc
pop
sbb
aas
ds
adc
vpshuflw
inc
mov
je
xchg
pop
or
icebp
adc
aad
aad
ret
pop
rorb
push
adc
dec
dec
ds
jns
jno
mov
repnz
adc
subl
jb
jg
lret
dec
xchg
xchg
jnp
fsubrl
push
add
sbb
xchg
les
dec
aaa
roll
xchg
test
xchg
fldenv
int3
dec
push
inc
pushl
je
sar
adc
decb
cltd
sti
xchg
mov
xor
cmpsl
popa
dec
aam
aas
fdivrs
xor
sti
dec
mov
rcrl
sub
es
aaa
mov
sbb
subl
sahf
mov
ja,pn
lret
xchg
xchg
fcom
sbb
push
cwtl
lret
lret
movl
xchg
daa
scas
lahf
aad
or
sub
jne
mov
mov
mov
mov
mov
movsl
neg
fisttpll
outsb
aam
je
pop
dec
pop
mov
mov
in
xor
shll
mov
add
mov
or
ljmp
jno
daa
test
push
xchg
dec
movsb
jae
dec
out
test
decb
mov
fwait
inc
jp
sbb
pop
mov
int
scas
mov
xchg
iret
push
pop
adcl
xchg
aas
loopne
mov
fsub
push
jp
inc
dec
scas
pop
mov
xor
xchg
mov
add
mov
adc
inc
mov
loope
pop
jne
popf
in
outsb
xchg
in
and
jecxz
aad
mov
sti
add
mov
pop
adc
and
mov
adc
lea
xor
and
je
sti
cwtl
ja
pop
inc
fidivrs
mov
jne
jno
jno
leave
adc
push
jg
in
repnz
aam
andb
xchg
ja
xchg
les
mov
add
insb
inc
and
mov
lods
iret
rcr
inc
xor
sub
jae
pushf
cld
or
out
bound
stos
mov
fnstsw
stos
cmp
push
push
or
sbb
imul
mov
push
aam
lret
mov
xchg
or
scas
movsl
push
addr16
fldcw
scas
hlt
cs
repz
pop
xor
out
adc
jecxz
std
fbstp
scas
mov
pop
adc
mov
jns
stos
xorb
lcall
dec
movsl
xor
xchg
adc
inc
insb
xchg
subb
or
and
cli
inc
imul
sbb
and
mov
jno
ret
fistl
jns
fstpl
add
scas
mov
adc
pop
fwait
test
fisttpll
fisttps
hlt
jb
push
cmpl
std
sub
ja
ret
aas
mov
mov
cmc
in
test
xor
addb
mov
repnz
jmp
push
inc
scas
scas
xchg
lret
lret
popf
or
and
xor
mov
and
jle
jne
xchg
xchg
pusha
push
clc
dec
sub
xor
sahf
ja
xchg
push
jle
ror
mov
push
push
cld
or
imul
jns
sbb
xchg
push
sbb
das
lds
movb
cmpsl
faddl
jge
dec
aam
test
addr16
jmp
orb
adc
cmp
push
jo
dec
jecxz
lds
in
jo
mov
mov
pop
out
lock
addr16
sub
sub
or
movsl
orl
inc
das
mov
xor
push
mov
adc
lahf
pop
sub
loopne
in
fistpll
sub
jb
loope
jg
xchg
jg
pop
in
adc
dec
pop
ror
xor
into
outsb
jmp
divb
les
cmp
cli
in
add
clc
addr16
fldenv
das
cmp
xor
aam
mov
sbb
jp
mov
and
dec
mov
js
imul
or
sbb
rcrl
mov
sub
sahf
xchg
loope
cli
bound
jg
je
jge
jno
sbb
roll
or
xchg
xor
jno
mov
and
jbe
mov
pop
adc
in
adc
mov
jns
pop
xor
in
xor
mov
aaa
sub
sbb
imul
fs
sbb
insb
rcr
cmpsb
inc
inc
fstpt
movsb
pop
jle
mov
cli
pop
jl
aam
xchg
pop
stc
into
divl
icebp
inc
in
decl
mov
repnz
fcoms
sarb
enter
xor
inc
sub
mov
xchg
jne
mov
cmp
sbb
mov
in
mov
cs
mov
jae
test
std
inc
pop
in
ss
add
inc
ds
lcall
hlt
cs
in
cmc
and
aam
mov
data16
in
pop
pop
or
icebp
mov
push
stos
fnstcw
push
push
sub
sbb
test
mov
fwait
inc
rcl
cs
popa
push
cld
mov
push
mov
int3
movsl
add
xlat
push
out
lock
popf
jl
out
int
imul
xchg
daa
mov
dec
scas
cli
jb
mov
adcb
lods
pop
sti
push
out
inc
or
mov
les
stos
dec
push
push
mov
lret
iret
lock
jb
pop
mov
and
push
adc
pop
mov
jle
xor
cmp
adc
add
inc
add
lds
enter
sahf
imull
mov
je
in
cmp
popf
pop
out
out
xorb
push
cmp
sahf
push
int
fimuls
jecxz
out
pop
push
sub
mov
clc
sub
aas
ret
dec
fiaddl
loop
aas
fidivrl
xchg
sub
xlat
mov
inc
and
xchg
jg
test
loope
adc
sub
inc
ds
add
add
cld
out
cmp
ljmp
xchg
popa
cli
sbb
push
into
and
into
jae
xlat
push
pushf
movsl
add
dec
adc
pop
sbb
dec
dec
mov
adcb
jo
xor
dec
sub
ss
test
inc
es
dec
lock
or
arpl
push
js
xchg
push
dec
push
lods
mov
out
shrb
jecxz
icebp
int3
jae
test
imul
popa
dec
aad
repz
push
iret
fcoml
clc
jecxz,pt
cmp
data16
push
xor
cmp
hlt
xchg
push
mov
flds
sbb
adc
int
insl
xor
clc
pop
pop
xchg
xor
fdiv
subl
mov
adc
out
out
test
movsb
jge
sbb
jp
incb
mov
test
std
aad
lahf
or
fdivrl
pop
setp
mov
mov
pop
cmp
ja
push
sub
mov
sahf
jge
negl
shll
jle
adc
cli
dec
and
cmpsb
leave
xchg
iret
push
clc
push
adc
sbb
nop
iret
lret
jg
cltd
sub
sahf
and
cld
adc
jecxz
xchg
lahf
pop
mov
das
push
mov
arpl
fsubrs
inc
or
mov
mov
inc
stc
pop
lcall
loopne
rcll
test
loopne
loopne
mov
ret
lock
loop
add
xor
or
cmpb
or
cwtl
fs
mov
sub
and
stc
xchg
fwait
stos
cmp
xchg
jb
rclb
lods
int3
or
test
ja
adc
cmp
xchg
stc
fs
sbb
sub
jl
sub
stc
out
sbb
shll
sub
repnz
mov
mov
stos
adc
mov
adc
stc
inc
push
mov
dec
or
xchg
xchg
pop
scas
mov
adc
sbb
dec
inc
xchg
mov
add
push
jmp
and
mov
lret
sbb
xlat
mov
fidivs
inc
addl
pop
stos
out
test
mov
je
jp
push
mov
and
fdiv
dec
cmp
cli
pushf
jb
dec
hlt
imul
das
xchg
lahf
or
cmc
lret
xorl
cmpsb
pop
sahf
jnp
xlat
pushf
out
rcr
add
and
lret
and
and
mov
pop
jge
add
mov
push
jns
stos
popa
adc
js
adc
dec
mov
repnz
xchg
pop
mov
je
stos
sbb
mov
mov
xchg
sahf
mov
jg
dec
subb
mov
loopne
jo
test
pop
cwtl
mov
int
cmpsl
xor
adc
push
mov
mov
mov
adc
nop
push
inc
cmp
mov
dec
ret
dec
cli
or
test
movsb
mov
sbb
xor
cld
xchg
int
cmp
jns
add
test
lea
and
cmp
cmc
fldenv
cld
xchg
jmp
lods
add
arpl
xchg
push
mov
pop
pop
imul
fwait
pop
dec
lcall
clc
icebp
ss
adc
mov
prefetch
scas
aas
mov
les
jnp
sub
and
sub
sub
jnp
inc
aaa
sbb
sbb
rclb
fbld
mov
test
movsb
mov
js
mov
xor
sub
mov
lods
sbb
push
fmulp
inc
dec
stos
add
in
bswap
pushf
add
dec
aas
js
xor
sbb
push
in
mov
pop
cmp
dec
lea
outsl
imull
pop
xlat
out
cmpb
sbb
dec
repz
sti
mov
adc
test
adc
les
or
xchg
or
insb
pushf
clc
mov
or
add
dec
test
fucom
divl
adc
mov
bound
mov
jp
xchg
movsl
nop
or
jp
lahf
dec
data16
lods
cmp
adc
mov
push
push
fistpl
loopne
jmp
sub
testb
int3
mov
out
insl
or
lret
mov
lea
pop
gs
jecxz
cs
ljmp
bound
popa
insl
or
adc
mov
inc
sub
test
cwtl
mov
mov
pop
das
fnstcw
lcall
rol
push
sti
jp
iret
enter
jmp
adc
loopne
mov
dec
jnp
cld
popl
test
aaa
pop
dec
pop
sbb
cmpsl
mov
jecxz
jg
cmp
in
dec
sub
and
push
test
sub
clc
repz
add
dec
pop
outsl
out
dec
jecxz
aad
sub
cs
insl
lret
pushf
jg
in
loopne
pop
pop
sbb
aas
jl
mov
loopne
inc
or
and
mov
and
popl
fistpl
clc
clc
push
repnz
jp
cmp
jp
cltd
mov
pop
or
call
js
add
rol
cmp
inc
ret
shlb
xchg
pop
jns
push
mov
sbb
or
iret
xchg
mov
fucomip
in
push
pop
cli
jne
sbb
adc
ljmp
fidivrs
daa
jo
pop
or
dec
cwtl
xor
lret
mov
push
cmpsb
or
mov
xor
add
in
and
and
add
shll
add
jle
push
cmc
add
dec
sub
xor
cmp
movsl
mov
icebp
enter
xchg
mov
jno
cmp
pop
pop
loopne
pop
push
jb
das
shlb
dec
sbb
jle
cli
pop
imul
lds
push
mov
ljmp
call
pop
mov
fbld
loop
mov
dec
dec
leave
in
and
fstps
cmp
add
xor
inc
icebp
or
pop
pop
scas
fcompl
pop
fwait
jecxz
das
mov
or
clc
sub
lcall
mov
xor
movsl
mov
dec
push
emms
push
pop
jge
jns
in
cmp
sub
daa
pop
loope
pop
push
popf
add
sbb
scas
inc
ss
loop
sarb
push
gs
lock
hlt
aad
retw
pop
jne,pn
xor
cmp
ret
sub
bound
cltd
push
fcomip
xchg
les
mov
pop
cmp
sbb
sbb
xor
into
shrl
mov
push
mov
push
push
fmuls
mov
test
mov
sub
sub
shlb
cmp
clc
cmp
or
jecxz
push
or
popa
xchg
pop
test
dec
jae
dec
mov
jno
pop
dec
cwtl
and
lods
lods
adc
inc
imul
out
jg
mov
data16
das
outsb
in
push
jns
ficoms
xchg
lods
xchg
sbb
out
cli
jne
or
sbb
mov
adc
pop
mov
pop
add
inc
out
mov
jecxz
or
jbe
and
test
lret
cwtl
xchg
rorl
mov
xor
fsts
shll
push
mov
ljmp
inc
xchg
inc
jbe
jg
jl
loope
nop
test
dec
pop
mov
push
xchg
addr16
mov
cmp
sbb
pushf
es
xor
pop
add
add
sarb
or
jne
in
daa
pop
out
pop
xlat
fnstenv
ret
jae
stos
sub
sub
pop
lea
sbb
aam
dec
mov
xor
movb
push
add
push
mov
mov
ljmp
loope
mov
xchg
mov
pushf
and
xor
xor
popa
mov
add
add
rorl
lret
das
testl
in
sub
xchg
mov
fs
push
mov
out
in
sub
test
mov
dec
inc
inc
aam
out
addb
xor
cmp
mov
pop
add
rcrb
adc
out
add
jg
loop
cmc
push
ret
push
aaa
push
cmp
cltd
jae
add
loope
adc
fldcw
loop
repnz
pop
pop
push
add
cs
mov
and
popl
call
mov
aam
jge
dec
sbb
rcl
insl
lret
sbb
jecxz
xchg
loopne
insl
lret
cmp
stc
jne
xchg
and
jno
push
clc
subl
dec
dec
sbb
push
cmpsb
push
int3
or
xchg
sbb
sti
ja
lcall
cmp
rcll
cltd
xchg
pop
inc
jecxz
mov
push
dec
xlat
movsb
push
pop
das
fisttps
xor
leave
pop
cmpsl
andb
pop
pop
ja
pop
add
pop
in
mov
nop
fimuls
inc
out
paddb
cmp
jle
jbe
and
stc
test
cli
out
out
cmp
jno
jns
test
and
stos
cs
add
and
fmuls
lods
mov
rorl
and
add
push
faddl
add
push
jb
pop
cltd
icebp
push
mov
jl
jne
mov
jnp
push
inc
sahf
xchg
nop
or
mov
lea
sahf
inc
lahf
bound
insb
mov
or
shrl
pop
sbb
xor
add
imul
jmp
adc
lcall
xor
ljmp
insb
mov
es
sbb
sbb
push
pop
fidivl
push
and
push
pop
jb
fdivrl
xchg
aaa
or
dec
or
lock
sub
mov
scas
xchg
dec
mov
lds
out
or
or
pusha
adc
jmp
repz
sub
or
rcrb
xchg
loope
push
cld
adc
inc
aad
jnp
addl
out
xorl
add
icebp
xchg
xchg
fwait
jl
pop
dec
xchg
mov
mov
into
ret
movsl
lods
pop
and
dec
push
pop
roll
mov
jl
sub
leave
push
out
test
cwtl
dec
repz
lods
pop
mov
push
jae
hlt
or
lock
frndint
scas
pop
xor
xchg
notb
xchg
and
insb
inc
mov
and
stc
xchg
lds
adc
mov
imull
nop
pop
call
repz
in
xchg
mov
arpl
fndisi(8087
loopne
jnp
int3
jp
xchg
xchg
cmpsb
lahf
negb
pop
arpl
test
mov
xchg
inc
and
int3
dec
mov
jle
cmp
cmp
and
in
mov
notl
and
xchg
out
lds
fsts
sbb
rcrb
cmpl
xchg
iret
fdivrs
stos
out
adc
enter
push
popa
xchg
mov
pop
xchg
ss
pusha
pusha
add
das
aaa
pop
cmc
inc
icebp
fldcw
iret
test
clc
add
scas
dec
pop
or
neg
fidivrs
int
jb
nop
sub
mov
cmpsb
xor
lret
inc
xor
xor
push
xchg
jbe
movsb
imul
imul
loope
inc
and
in
sub
divl
shrl
dec
push
aaa
addr16
in
adc
imul
inc
arpl
sbb
fsubs
clc
and
jae
pop
aas
pop
data16
jbe
fcomip
mov
fsts
pop
mov
repnz
rol
and
stc
es
sub
call
jge
dec
jns
outsl
sbb
negb
shrb
les
adc
pusha
das
in
add
bsr
lea
push
movsl
movswl
push
xchg
ljmp
adcb
into
push
jns
inc
jmp
push
pop
sub
jmp
out
movsb
repnz
dec
std
mov
add
mov
push
and
jno
pop
ret
xor
adc
or
cwtl
dec
clc
dec
pop
pop
mov
inc
sahf
jae
ja
loop
inc
jg
out
cmpsl
enter
pushf
jmp
or
fisubs
push
mov
out
inc
xor
adc
aas
ljmp
xor
inc
push
addr16
mov
dec
test
add
js
icebp
int
test
inc
movsb
sahf
pusha
push
iret
lcall
daa
mov
das
sub
mov
push
fnstsw
push
xchg
add
sbb
mov
push
dec
xorl
mov
push
mov
and
xchg
pop
xchg
jno
movsb
cmp
ja
cmc
xor
rcrb
ficoms
out
mov
out
cmp
adc
xorb
sbb
add
push
fucomi
leave
pop
mov
mov
xor
aaa
xor
mov
push
scas
std
or
ja
xor
clc
and
mov
sub
jge
sub
testl
es
xlat
xchg
sbb
mov
and
test
push
xor
out
mov
das
fsts
cmc
out
dec
iret
hlt
je
shl
xchg
add
fdivrs
dec
mov
lock
jae
jecxz
ret
test
insl
outsb
or
dec
cmc
jmp
lret
pushf
insl
mov
mov
ljmp
adc
inc
add
jo
xchg
dec
cmp
cmpsl
or
in
jp
fcomp
xchg
sub
aaa
mov
xor
jo
and
adc
loope
cmp
jbe
or
add
jmp
repz
inc
dec
dec
daa
insb
fisubs
cmpsb
add
addr16
in
in
popa
lods
or
lods
cmpsl
and
scas
pop
iret
loop
pop
add
cltd
mov
mov
sbbb
dec
lea
or
mov
xlat
out
mov
push
popf
andb
jmp
jns
dec
nop
jnp
and
pop
ficoml
ds
sbb
and
and
sar
push
fidivrl
mov
ljmp
fnstenv
jnp
loop
or
arpl
cld
js
test
xchg
pusha
add
jb
xor
xchg
ds
roll
inc
inc
adc
ret
arpl
sbb
mov
mov
jnp
loopne
and
mov
mov
ret
stos
lret
in
imul
lods
push
ja
mov
andl
jmp
mov
and
es
pop
inc
ficomps
jmp
adc
ja
pop
outsb
xor
xorl
cltd
imul
ja,pn
or
cli
loopne
test
cmc
sbb
lods
in
int3
push
insl
sub
shll
mov
int
adc
cli
repz
dec
in
push
repnz
mov
rolb
push
mov
add
mov
mov
test
out
repz
into
loop
mov
iret
cld
enter
pop
pop
in
sti
popf
sar
fcmovbe
push
jecxz
adc
and
cltd
cmpsb
outsl
pop
repz
push
test
push
push
shlb
scas
outsl
imull
adc
mov
loope
adc
xorl
inc
or
sbb
imul
in
push
cwtl
test
std
mov
jp
adc
cwtl
jne
cmp
mov
lods
jecxz
xor
add
out
jb
jp
xlat
in
lret
xchg
xchg
add
mov
xchg
mov
cltd
xchg
rol
mov
fwait
and
sub
mov
je
jbe
push
cs
aas
test
dec
rep
and
push
mov
jbe
aam
xchg
or
int3
cmc
cmp
fucomp
xchg
int3
movb
lods
mov
popa
faddl
call
sbb
stos
out
xorl
shl
enter
jl
push
js
iret
std
jl
bswap
in
sbb
out
xchg
fisttpl
pop
xchg
xor
push
cmp
clc
adc
jmp
out
in
mov
and
pop
add
dec
push
ficomps
jle
adc
push
popf
fisubs
push
push
mov
sub
les
inc
shl
leave
mov
cli
sbb
or
popa
dec
cltd
sub
in
jno
pop
daa
jbe
dec
cmpsb
push
test
aam
loop
mov
and
lds
lods
fdivs
mov
sub
pushf
jae
mov
imul
mov
fwait
out
jne
rclb
rolb
faddl
or
jp
adc
js
pushf
mov
in
xchg
inc
loop
sub
cmp
adc
shl
lods
mov
nop
inc
cmp
repnz
test
adc
mov
sbb
sub
adc
mov
jg
xlat
or
mov
gs
jns
fcmove
in
add
jne
enter
fwait
or
dec
dec
shll
aaa
jae
mov
add
arpl
fisttpl
mov
xchg
dec
lea
xor
adc
adcb
cwtl
lock
out
jae
loopne
fbld
cli
popa
dec
push
fnsave
sarb
pop
add
mov
out
pushf
push
jns
icebp
xlat
fsubs
push
lds
les
incb
inc
int
into
add
pop
leave
sub
cmp
add
xchg
cmp
pop
jo
cmp
mov
call
mov
sbb
push
pop
movsl
repnz
daa
push
ja
xor
jg
jb
aam
andl
mov
adc
in
mov
insb
je
sbb
add
out
ja
lahf
add
paddsw
cli
ret
pop
dec
cmp
jle
inc
jp
pop
in
xchg
lahf
ljmp
ljmp
sbb
sub
pop
mov
pop
test
movb
lret
sub
inc
jae
jle
push
clc
push
dec
or
nop
xchg
out
loope
je
mov
dec
mov
int3
inc
inc
push
cmc
inc
loope
or
inc
mov
pop
in
xchg
arpl
push
and
jbe
shll
loopne
sbb
out
mov
inc
mov
mov
cmp
and
icebp
scas
push
xchg
xchg
mov
xor
pop
mov
lea
pop
mov
xchg
sbb
test
aaa
mov
cmc
inc
sub
daa
xor
mov
add
lock
dec
or
mov
cmp
ret
dec
test
cmp
jns
scas
add
sbb
and
or
test
sbb
push
lds
mov
test
lret
push
inc
mov
scas
inc
ljmp
je
push
adc
and
scas
cmp
jno
sti
maxps
cmpsb
jl
or
adc
or
leave
or
rol
fldcw
pusha
cmpsb
mov
nop
data16
les
bound
adc
lods
adc
stos
pop
sti
inc
cs
les
add
jp
jae
stos
icebp
lahf
sub
add
ret
dec
jnp
negl
and
jbe
jne
and
add
leave
mov
jle
xchg
shlb
sbb
adc
mov
fidivrl
jl
jl
mov
and
adc
lea
jb
in
cmp
cmp
sbb
xchg
daa
jb
inc
fstpl
mov
daa
and
jbe
rcll
adc
sub
jno
popa
mov
int3
sbb
adc
or
pushf
filds
fiaddl
or
pop
mov
xor
out
fists
popa
xchg
sub
outsl
jmp
ficoms
push
inc
je
or
mov
daa
mov
jp
and
data16
testb
mov
mov
mov
mov
xor
sbb
or
data16
jge
in
sub
cld
push
push
mov
dec
imul
dec
in
add
pop
xor
jo
mov
mov
stos
in
xchg
lret
xchg
inc
das
dec
fisttps
add
pusha
ljmp
fwait
sub
sub
ret
and
out
mov
push
xchg
lret
add
jbe
inc
lret
icebp
dec
add
arpl
pop
lahf
test
xor
lahf
ljmp
dec
mov
pop
pop
adc
aas
adc
xchg
cwtl
push
inc
xor
xor
lods
lcall
loopne
leave
arpl
and
vminpd
lods
jne
movsb
push
and
pop
lcall
sahf
and
cli
and
addb
and
addr16
xlat
xchg
imul
push
test
xchg
add
pop
stc
icebp
xor
aam
adc
and
mov
imul
dec
loop
out
cwtl
add
pushf
incb
sbb
bound
repz
push
mull
dec
popf
in
aad
cltd
push
inc
movsl
sahf
pop
outsb
nop
es
dec
pop
cmp
mov
in
mov
pop
cld
lret
mov
rol
mov
ret
ljmp
or
pop
loop
mov
adc
mov
out
mov
out
xor
stos
das
jae
pop
mov
int
push
mov
movl
add
gs
mov
mov
and
sbb
stos
and
cmpsb
test
cmp
inc
push
pop
stc
add
mov
mov
mov
jmp
test
xor
cmpsb
sub
in
xchg
xor
gs
mov
xor
mov
dec
std
cs
jns
icebp
rcrb
pop
pop
push
inc
cld
ds
pop
hlt
inc
gs
dec
lods
imul
mov
mov
adc
insb
mov
hlt
insb
lret
test
shrb
jecxz
xchg
add
inc
mull
sub
adc
jmp
mov
dec
xchg
repz
pushf
push
and
loopne
or
mov
les
into
je
pop
in
es
push
mov
mov
pop
dec
jg
pop
sbb
fnstcw
insl
pop
daa
insl
jnp
pop
xor
addr16
lret
es
lret
jae
mov
das
sarb
into
pop
sub
roll
push
mov
and
add
push
mov
cwtl
loop
rcrb
and
mov
cmc
jbe
jae
pop
daa
pavgb
adc
pop
xchg
out
push
xacquire
xor
add
or
insb
xchg
dec
jns
imul
icebp
hlt
mov
lret
mov
lods
not
sub
rcrb
jns
in
test
inc
cmp
xor
fistpll
adc
mov
dec
lret
cltd
dec
mov
push
aaa
movsl
lods
call
xlat
jnp
loopne
mov
idivl
push
rorl
add
daa
sub
or
sub
rol
mov
push
xchg
jp
cmpsb
testb
bound
jle
pusha
or
xchg
imul
shrb
dec
sbb
add
leave
call
insl
mov
jb
lods
dec
cmp
mov
stos
imul
scas
cld
dec
popa
xchg
fwait
je
push
insl
xchg
cs
ret
push
xchg
dec
sbb
mov
sub
add
aaa
inc
and
inc
and
repz
mov
add
mov
fstpl
jnp
and
or
lcall
subl
mov
cmp
rorb
in
in
out
or
fs
test
test
fidivl
mov
xor
sbb
sahf
js
test
daa
jecxz
or
mov
repnz
rclb
jg
xchg
pushf
push
and
pmullw
dec
stc
ljmp
stos
in
fbstp
imul
or
adc
add
ret
sti
out
adcb
mov
jle
stos
sbb
call
add
sbb
enter
arpl
outsb
inc
subl
lret
imul
sub
pop
jge
add
xlat
push
mov
fsubr
outsl
add
pcmpgtd
test
out
cmp
or
cmp
daa
sub
cltd
ss
icebp
lret
movsb
or
add
test
add
inc
mov
fnstenv
fisttps
insb
enter
aas
scas
push
mov
sub
xchg
xchg
lcall
dec
xchg
push
jecxz
clc
dec
jae
fscale
pop
mov
lcall
sub
add
lods
int
xchg
mov
cs
mov
js
fs
dec
out
add
push
pop
aaa
jp
cmp
dec
push
pusha
push
fs
rclb
aas
jno
xchg
popf
aad
mov
xor
mov
or
and
jb,pn
sbb
dec
call
pop
es
mov
dec
mov
or
push
js
movsl
lods
and
mov
lea
jp
push
mov
ret
les
xchg
xor
in
sbb
and
and
loop
dec
mov
sbb
jo
out
mov
mov
lahf
testl
int
dec
mov
add
aaa
popf
cmp
jp
push
xlat
lods
push
ds
pop
sub
mov
push
pop
enter
xchg
sbbb
test
adc
push
das
cmpsl
nop
xchg
inc
out
clc
out
sbb
sbb
pusha
rcll
imul
pop
fs
mov
pop
aam
jo
mov
mov
jb
jb
stos
lcall
stos
mov
imul
or
and
outsl
flds
mov
pushf
xor
mov
push
enter
cmp
jo
sbb
scas
sti
movsb
jne
sbb
mov
xor
jbe
mov
rcr
movsb
jecxz
andb
jne
mov
lds
enter
add
sbb
push
pop
mov
dec
push
test
cmp
fdivrl
jo
ja
inc
fidivrl
in
sbb
popa
add
xor
inc
ljmp
push
xchg
cltd
sub
out
jb
cmpl
mov
sub
sub
ret
or
lods
push
pop
or
add
ret
jmp
out
inc
test
xchg
mov
and
mov
pop
orps
push
or
sub
pop
xchg
pop
test
and
outsb
dec
push
fcompl
cmpsl
scas
fs
out
fcmovb
xchg
arpl
dec
leave
ljmp
cli
and
call
ds
and
pop
xchg
shll
repnz
outsl
xchg
out
movsb
jmp
jg
xchg
jno
sar
cmp
arpl
test
call
sbb
and
shll
mov
outsl
test
repz
push
outsl
stos
inc
mov
pop
stc
pop
xchg
pop
push
xchg
mov
mov
push
fisubrl
mov
adc
fidivs
icebp
pop
push
add
or
enter
repnz
aad
xchg
fisubl
enter
loope
lahf
sub
dec
inc
movsb
mov
nop
xchg
or
push
xorl
insl
sbb
adc
push
icebp
xlat
push
in
xlat
popa
sub
movsb
addr16
xchg
lods
cltd
xor
sbb
sbb
dec
ds
insb
movsl
pop
dec
add
cmp
mov
pop
fisttps
pop
jb
xchg
sub
push
decb
mov
mov
cmpsb
dec
and
stc
jo
inc
adcl
test
fildl
xor
adc
cmp
jae
fistps
ds
nop
sbb
add
cmp
cli
roll
cltd
push
mov
push
add
test
push
add
aad
sbb
mov
ret
jmp
hlt
xchg
pusha
aad
mov
ficoml
pop
jge
les
mov
rcll
das
sub
mov
int3
sub
or
js
mov
cmc
dec
sarl
bound
aad
mov
ret
std
popf
rorl
les
out
lods
jbe
dec
adc
sub
pop
sar
stos
add
cmp
inc
jnp
add
mov
inc
jnp
and
cli
imul
shlb
xor
dec
pop
jno
and
shl
jns
insb
loope
test
jg
cwtl
ljmp
jg
pop
jmp
dec
mulb
pop
insb
mov
je
inc
fldcw
in
dec
adc
xor
lcall
jo
fs
sbb
in
sti
pop
mov
sbb
nop
loope
mov
subb
divl
dec
and
mov
cmp
pop
mov
aas
or
pop
push
aad
enter
lcall
mov
mull
jae
imul
push
imul
out
xor
xor
sub
ja
insl
sub
sbb
xor
in
push
pop
sub
fadds
jb
out
lea
add
add
sahf
add
insb
and
adcb
mov
ss
stos
lods
fnsave
add
shrl
xchg
insl
dec
push
mov
sbb
mov
mov
data16
dec
xor
sti
xchg
add
aad
das
inc
xor
or
jl
xchg
fs
lods
push
hlt
int
enter
pop
push
sub
sahf
out
push
shl
andl
fdivs
mov
push
clc
adc
movsl
and
fwait
loope
in
xchg
dec
std
fcoml
out
sub
push
sub
sub
jnp
adc
stos
stos
aad
popl
data16
cmp
mov
xchg
rorb
pop
movsl
mov
movsb
aaa
fsubl
pop
je
inc
shl
cmp
add
xor
iret
ds
push
and
xor
jmp
nop
or
into
sub
push
mov
imul
js
das
sub
lods
into
add
mov
push
imul
mov
push
mov
lds
movsb
mov
ja
das
lods
subl
fidivrs
inc
push
ret
aam
add
movsl
outsb
sbb
enter
mov
jne
popa
push
jbe
dec
inc
subb
ds
lret
dec
dec
sub
inc
call
ds
aam
mov
mov
in
call
dec
push
jae
cmp
sahf
lods
push
bound
fsubrs
cmp
mov
sahf
dec
fiaddl
jmp
push
xor
sub
imul
push
rcrb
sbb
es
lods
dec
ds
push
cmp
add
pop
pop
mov
jne
add
sbb
push
push
cmp
mov
dec
pop
or
mov
inc
push
mov
out
and
fldenv
mov
out
fimuls
shlb
fcoms
shlb
insl
inc
shl
mov
mov
jns
add
sub
pusha
fwait
stos
sub
push
clc
fildll
imul
nop
xor
cmp
hlt
loope
rcl
mov
sahf
arpl
fiaddl
and
mov
dec
lock
out
out
out
xor
pop
js
loop
inc
dec
mov
aam
push
jb
or
and
lock
daa
and
inc
outsl
pop
imul
sub
pushl
mov
mov
dec
adc
jbe
daa
mov
fldcw
lods
jl
out
arpl
popa
sub
or
inc
mov
mov
inc
mov
std
mov
lds
pop
mov
les
mov
lret
cli
or
lahf
mov
jmp
lret
shrb
adc
push
cmp
or
dec
outsl
xchg
js
fstpl
stc
and
inc
xlat
sar
daa
add
ja
and
xchg
aad
xorb
mov
push
or
cltd
xchg
lods
dec
popa
and
aam
outsb
out
and
mov
inc
test
push
push
sub
icebp
and
adc
cmp
pop
mov
sub
std
mov
xor
in
inc
stc
aas
sarb
xchg
mov
int
xor
out
shrb
loope
adc
add
pusha
ljmp
repz
mov
push
sub
xchg
js
adc
jecxz
repz
sub
and
mov
nop
inc
std
ret
adc
out
in
jo
inc
xor
lret
movsb
push
pop
inc
adc
sbb
pop
jecxz
sti
loope
xchg
mov
out
rolb
outsb
lods
dec
and
loope
add
adc
cmp
or
mov
mov
mov
sahf
les
shlb
dec
jecxz
fsincos
push
xor
bound
cltd
fwait
xchg
jmp
pushf
shll
or
xor
imul
mov
pop
inc
mov
add
shl
and
js
imulb
stos
out
lods
add
cmpb
orl
dec
dec
push
pop
fucomi
mov
ljmp
pushf
jns
inc
int
sub
fisubl
inc
fcmovb
stos
push
pop
push
fisttps
cmp
pop
push
cwtl
subb
mov
es
bound
add
pop
xchg
pop
fildll
lods
xor
jno
adc
push
div
stos
movsl
mov
jno
xor
out
shll
int
sub
sub
out
test
bound
jno
inc
mov
dec
inc
mov
mov
adc
cmpb
xor
mov
int
mov
or
out
js
cmc
jmp
jg
into
pop
scas
add
pop
sub
mov
pop
pop
cwtl
mov
mov
cmpsb
les
jno
loop
inc
inc
fistps
or
add
jle
push
sti
fmuls
int
dec
insb
lahf
fistpl
adc
xchg
and
xor
mov
adc
stos
inc
aad
mov
in
dec
fxch
pushf
outsl
scas
mov
clc
push
cmp
pop
sbb
inc
fs
or
mov
xchg
pop
mov
adc
lock
mov
mov
popf
push
outsb
jp
mov
xor
or
or
add
fdivl
jno
jmp
jecxz
cmpsl
insb
mov
sbb
xchg
pop
xor
xchg
mov
femms
dec
clc
fs
jno
shlb
aad
rcrb
cltd
insl
xor
sub
xchg
mov
ds
jnp
call
mov
pusha
xlat
scas
out
sahf
jge
or
or
std
div
es
loop
sbb
aam
ja
test
out
mov
sti
mov
lret
inc
sbb
jne
pop
stos
fldcw
test
negl
sbb
mov
xchg
jo
fwait
rorl
push
xchg
je
push
adc
test
jne
scas
ret
mov
cltd
or
jl
and
imul
cmc
insl
pop
out
push
ror
icebp
stos
jmp
test
aam
pushf
adc
and
or
lea
xchg
mov
push
ficoms
fst
cmp
pushf
sahf
fsubl
repnz
scas
int3
dec
or
add
push
mov
mov
dec
arpl
rcrl
adc
add
and
jmp
dec
mov
fmuls
jle
insb
adc
mov
jno
sbb
jae
mov
aas
ret
test
push
mov
jp
push
push
rcrl
popf
push
lcall
aam
and
pop
cmp
sub
push
incb
inc
fnsave
mov
test
push
sub
jecxz
bound
push
mov
nop
add
es
cltd
sbbb
lret
iret
repz
mov
adc
mov
xorl
push
rolb
scas
imull
fnstsw
daa
and
mov
inc
pop
mov
in
jno
push
push
loopne
movsb
cmp
je
pushfw
jbe
cld
cmp
add
mov
jg
mov
push
in
xorl
mov
shl
frstor
jno
icebp
lea
arpl
pop
and
nop
pop
xor
jnp
stos
pushf
xchg
xchg
cmc
mov
stos
imul
fists
dec
dec
jno
pop
aad
xor
jle
mov
cmp
int
pop
insl
inc
jo,pn
mov
lret
jg
jmp
popf
test
xor
idivl
cmp
test
lcall
xchg
push
sbb
pop
imul
inc
out
mov
fstl
imul
shl
or
jp
loop
or
sti
inc
and
mov
shrb
mov
and
mov
std
lcall
fstpt
repz
xor
cmp
or
pop
mov
out
outsb
inc
pop
or
fstps
das
add
aam
jno
ja
sqrtps
dec
jne
sub
cmp
adc
dec
out
jo
fwait
mov
sub
fnstcw
jmp
outsb
insb
jbe
enter
hlt
lods
dec
mov
out
sub
cmpsl
enter
test
sar
pop
cmp
fmuls
out
xchg
and
iret
int3
cmp
push
mov
pcmpgtb
mov
sahf
loope
pushf
jmp
mov
cmp
movsl
jno
xchg
dec
repnz
ret
push
je
call
fisubrl
jno
mov
pop
push
test
scas
push
dec
push
mov
or
mov
repnz
popf
jnp
push
pop
cmpsl
cmp
add
xchg
cmp
fwait
or
ljmp
imul
addr16
and
rol
cmp
push
out
pop
ret
inc
lahf
jecxz
pop
jl
xlat
adc
ret
sub
or
cmp
aas
divl
aaa
mov
sub
fisubrl
out
sbb
adcb
mov
xchg
jns
lods
insl
add
je
icebp
pop
xor
jl
out
inc
xlat
fsubrl
call
mov
repnz
mov
mov
fcomps
mov
scas
xchg
mov
inc
xor
or
out
push
sbb
fldz
test
adcl
imul
push
mov
pop
lret
pop
cmp
sbb
test
push
in
popf
xchg
nopl
xor
jmp
xchg
notl
icebp
mov
imul
out
lods
mov
push
fiaddl
das
fucomp
aad
pop
cwtl
lock
test
add
add
mov
out
into
xor
add
sahf
outsb
lea
dec
frstor
ret
sub
pop
pop
dec
out
sbbl
test
ficoms
dec
jge
iret
push
inc
stos
divb
loop
outsl
jo
cmpb
cwtl
mov
inc
mov
cmpsl
shlb
adc
dec
xor
and
pop
push
fs
sti
cwtl
jg
dec
out
lret
pop
cmp
imul
fisubs
jno
test
es
aad
mov
out
cld
adc
fistpll
and
mov
push
or
xor
data16
into
jge
inc
scas
scas
dec
int3
test
or
xchg
push
in
mov
add
mov
xor
mov
push
mov
int
jge
call
mov
fs
mov
ret
clc
iret
and
rcrb
push
jnp
push
push
sbb
insb
data16
ja
and
xor
imul
stos
imul
aas
pusha
pop
xor
aaa
icebp
sbb
mov
pop
push
mov
mov
push
repnz
and
pop
cmp
mov
aaa
mov
movsl
loop
jne
andb
fidivrl
or
out
mov
les
mov
fwait
pusha
les
cmp
xor
out
sub
and
out
cltd
jns
cmp
dec
test
cmc
arpl
or
pop
ljmp
jae
call
mov
mov
mov
xor
jns
and
and
negb
pushf
lods
jg
inc
inc
push
jbe
push
jmp
inc
dec
frstor
outsl
cwtl
into
pop
stos
fsubrl
sbb
in
ljmp
ljmp
andl
xor
adc
inc
scas
divb
xor
mov
add
push
add
fbstp
fdivrp
adc
xor
mov
iret
cwtl
andl
pop
insb
testl
xchg
xchg
dec
lock
aas
and
cmpb
inc
jo
sub
lret
test
push
test
push
push
insl
movsl
mov
das
arpl
mov
ds
pop
adc
mov
mov
clc
pop
xchg
inc
pop
pop
fsubs
outsb
je
sbb
lcall
dec
adc
or
repnz
xchg
int
addb
inc
loop
jl
test
xor
lret
repz
repz
in
dec
outsb
jns
xchg
psubw
jbe
dec
sub
push
out
mov
testl
pushf
or
mov
mov
cmp
aaa
inc
fists
gs
pop
test
dec
scas
fs
cmpsb
into
xor
in
fstpt
mov
xchg
or
pop
xchg
pop
mov
add
dec
jp
mov
sbb
insb
sbb
pop
mov
test
pop
cmpsb
int
outsb
or
pop
push
fwait
shll
cli
push
hlt
jns
or
cld
imulb
mov
sbb
jge
xchg
jp
xchg
inc
loope
pop
aas
jmp
mov
cmpsl
daa
inc
test
jl
nop
repnz
mov
jae
push
fbld
int3
push
fst
xchg
scas
sub
cs
sbb
mov
rolb
jecxz
out
rorb
mov
mov
fs
xchg
sub
push
loope
jbe
and
cmc
xor
lds
shll
cwtl
mulb
jb
xchg
ss
add
xchg
push
adc
jo
fsts
dec
movsl
mov
add
jp
jecxz
test
sbb
scas
insb
fbstp
outsb
pop
inc
stos
arpl
mov
pop
push
xor
pop
add
ret
repnz
xchg
push
fwait
and
daa
mov
incb
xchg
xlat
sbb
stos
jle
je
push
lcall
dec
inc
xor
ficoms
out
cmp
imul
int
lds
or
inc
xchg
ja
ja
and
iret
mov
pop
dec
bnd
hlt
adc
fsubl
das
push
addb
or
jae
lret
jecxz
gs
cltd
mov
push
xchg
sub
xchg
in
jge
and
aad
enter
test
fidivs
test
xor
sar
cmc
jbe
cwtl
mov
daa
push
sbb
sub
sub
shll
test
in
mov
out
xchg
les
call
ljmp
mov
ss
in
sarl
cmp
jae
push
push
je
repnz
mov
lods
sub
nop
pop
dec
cmpb
outsb
cld
movsl
xchg
nop
je
and
dec
test
int
and
les
fmuls
push
cmp
xor
das
add
pusha
push
mov
out
cmp
dec
inc
xchg
dec
fwait
cld
repnz
scas
movsb
sbb
sub
imul
push
es
xor
out
test
shlb
xchg
jl
pop
mov
add
pop
xchg
not
aaa
fidivrl
xlat
push
push
fucomp
sbb
les
outsb
or
adc
test
or
lds
loopne
adc
popa
ljmp
push
ret
lret
lea
out
mov
cmp
sub
loop
ds
mov
and
rorb
adc
inc
push
out
xor
cmp
call
xor
or
outsb
or
mov
jecxz
jl
and
jno
lods
mulb
lock
fildl
sub
cwtl
xor
cmp
cmp
cmp
inc
push
out
inc
js
inc
stc
mov
les
pop
addr16
add
jl
inc
mov
jns
stc
lock
out
adc
out
loopne
mov
loop
and
rcll
loope
scas
add
dec
sarb
testl
jnp
arpl
filds
cmp
out
mov
xlat
fwait
or
movsl
mov
push
jno
sti
stos
add
ret
fisttps
notb
pop
xchg
lret
mov
dec
clc
lods
cmc
xchg
test
sub
test
push
stos
rorl
out
aad
int3
xchg
adcb
dec
xchg
into
mov
aam
jle
jmp
mov
iret
into
int3
push
insb
inc
xor
jle
ret
scas
sub
in
test
into
push
xor
pusha
jns
ret
inc
push
adc
dec
fmulp
fs
mov
xor
loopne
push
push
cmp
sub
out
push
insb
jge
loope
das
xchg
scas
sti
jo
push
in
mov
stc
in
test
stc
jmp
imul
xchg
inc
jno
out
sub
mov
or
aam
movsl
pop
sbb
cmp
insb
shrl
sub
popf
dec
push
dec
cmpsb
mov
cltd
jo
or
cmpsb
adc
mov
outsb
mov
aad
sbb
xor
aaa
xchg
imul
pop
sub
cld
scas
mov
and
mov
mov
mov
xchg
or
and
mov
insl
xchg
cs
loop
push
add
test
push
les
inc
pushf
pop
pop
mov
xor
xchg
dec
stc
push
pusha
scas
loopne
andb
and
repnz
ficoml
and
and
cmpsl
js
out
mov
pop
cmp
sub
or
mov
roll
pop
mov
add
cmpsl
add
mov
test
out
fwait
cmpsb
jp
sahf
and
pop
shll
jp
dec
xor
pop
push
mov
fists
dec
adc
fnsave
mov
push
lock
ss
xchg
cmp
repnz
pop
mov
into
adc
xchg
inc
mov
iret
mov
cs
loope
leave
xor
cmp
add
fimuls
and
xchg
and
dec
test
mov
es
sub
shll
sbb
mov
dec
push
mov
roll
ds
lods
lahf
xor
call
test
les
fildll
xor
subb
sub
sbb
test
ret
or
clc
mul
int
xlat
stos
jo
xorb
out
or
mov
shll
aad
or
jb
rclb
ss
xchg
cld
or
movl
lock
sahf
leave
inc
fwait
mov
add
lods
lock
test
xor
mov
cltd
dec
push
ret
cld
dec
imull
add
inc
add
xor
ljmp
das
jle
arpl
cli
inc
fildl
aam
xor
or
pop
test
cmp
cmovo
enter
stos
mov
xor
xchg
xchg
out
push
and
rep
imul
js
inc
sbb
ja
xor
out
sarl
mov
cmpsl
mov
sbb
hlt
or
out
pop
in
enter
jae
jp
push
ja
lret
sbb
cmp
int3
pop
jg
xchg
xchg
xchg
das
mov
jno
addr16
or
adc
lock
lods
dec
mov
xchg
pop
adc
push
cmp
mov
jmp
pushf
imul
lret
and
clc
and
cwtl
movb
repz
lcall
or
jecxz
adc
dec
stc
out
leave
popa
sbb
les
subps
std
aaa
lret
xchg
outsb
loope
enter
dec
ljmp
jmp
mov
push
pop
pop
mov
popa
dec
das
daa
adc
jl
cltd
mov
mov
cmp
mov
jle
and
movsb
dec
lcall
sti
dec
cmpsl
repnz
mov
je
fcoms
testl
cwtl
outsb
pop
lea
jae
inc
cmp
gs
xchg
cmp
mov
jle
add
divl
iret
and
sub
lahf
aas
fcos
fdivrp
adc
stos
xor
mov
mov
add
ficompl
mov
mov
push
sti
xchg
mov
push
lcall
pop
cmp
cld
rorl
fistps
nop
add
in
testb
push
xor
scas
inc
popa
bound
sbb
and
cmpsl
fidivl
js
push
scas
out
in
jge
sbb
das
pop
dec
add
dec
jp
andl
call
push
lea
incb
add
ret
push
aaa
adc
mov
mov
ja
outsl
cwtl
sbb
add
pop
cs
jbe
in
int3
jmp
mov
fwait
push
add
push
faddl
daa
cmp
int
add
xchg
push
and
out
mov
ficomps
pop
inc
mov
leave
insl
in
repz
mov
cmp
mov
cmp
sti
dec
xchg
data16
orb
pop
sbb
sub
lret
bound
rcrb
dec
pop
dec
stc
pushf
shrb
js
out
clc
aas
pusha
lret
bound
jecxz
inc
pop
out
jnp
push
dec
frstor
mov
cmp
rcrb
lcall
mov
daa
scas
xchg
adc
insl
sarl
push
push
paddw
or
cmp
pop
test
jb,pn
mov
or
rcll
lret
inc
lahf
data16
je
xor
jmp
in
repz
lcall
jo
ljmp
repnz
pop
das
aaa
gs
pop
mov
lea
insb
adc
sub
sbb
xchg
jne
pop
out
pusha
cli
aas
sub
inc
xor
outsl
jmp
sti
lahf
jp
jno
movsl
push
mov
insl
testb
stos
cmc
jns
enter
mov
dec
push
mov
dec
xchg
xchg
dec
dec
or
andb
jmp
adc
dec
xor
dec
adcb
pop
hlt
xchg
mov
or
mov
push
movntps
mov
cltd
sti
add
mov
loope,pn
ss
jno
cld
push
jb
xchg
push
fidivrl
jmp
into
xchg
inc
xchg
jecxz
gs
clc
cwtl
inc
mov
push
mov
popa
loope
outsb
adc
call
sbb
lods
incl
loopne
aas
les
je
adc
inc
mov
sub
jns
add
out
adc
subb
fisubrl
pop
aad
adc
shrb
repnz
adcl
iret
push
adc
and
lods
aaa
int
aam
or
adc
mov
repnz
adcl
and
xchg
adc
jecxz
lock
mov
lock
aaa
xlat
pop
and
xor
std
test
pop
int3
mov
and
push
in
sbb
daa
mov
mov
loope
and
mov
imul
rcrl
jle
xor
and
mov
pop
adc
call
adc
push
pop
adc
sbbl
fimull
int
add
call
cmp
push
dec
mov
jb
outsl
sarb
data16
cmpsl
outsb
ljmp
xchg
out
pop
movaps
adc
mov
movsl
rclb
cwtl
and
cld
loopne
into
fistpl
repnz
into
mov
xor
loop
movsb
push
in
fistps
mov
mov
mov
mulb
adc
stos
jae
push
push
ja
mov
adc
mov
fidivrs
inc
mov
sbb
out
daa
add
dec
mov
xchg
inc
xor
popa
or
scas
or
push
jmp
mov
inc
das
lods
push
shl
or
mov
out
cmp
mov
ljmp
stos
add
imul
inc
out
popf
mov
xchg
and
cmp
mov
aam
inc
enter
sbb
sbb
out
sbbl
hlt
xor
pop
test
add
push
dec
addb
add
xlat
shrl
repnz
push
inc
lret
mov
mov
repnz
adc
fcomi
xor
idivl
and
xor
mov
aaa
fisubrs
sar
xchg
and
out
shrl
fisubl
fwait
inc
push
xor
cmp
cmc
lods
pusha
xchg
jecxz
mov
in
fdivp
dec
xor
test
das
imull
and
test
stc
sub
mov
jmp
les
jae
mov
int
lret
cwtl
or
daa
lret
dec
push
fstps
out
dec
pop
shl
push
inc
aaa
aaa
mov
popa
lahf
sbb
test
xchg
lahf
mov
dec
cmpsl
and
jge
or
jbe
push
dec
or
mov
sub
mov
or
and
xchg
lret
test
loope
popa
sti
mov
sbb
mov
rolb
mov
push
xchg
pop
std
cmp
in
cwtl
jb
push
add
fnstenv
lret
jno
sbb
pop
rolb
xchg
xchg
and
popa
push
out
mov
mov
mov
int3
sti
mov
movsl
pusha
or
test
in
nop
pop
test
add
jae
repz
int
mov
test
dec
sbb
pop
pop
lret
in
cltd
int
test
test
stos
test
cwtl
pop
xchg
dec
dec
nop
adc
sbb
or
imul
insb
test
mov
and
out
xor
pusha
mov
aas
push
sub
pop
addl
inc
repz
sub
lret
popf
ss
jle
mov
sub
push
stc
sar
or
sbb
lock
scas
mov
or
and
jmp
or
daa
inc
adc
sahf
int3
lret
mov
cltd
div
add
fnstsw
add
test
jle
adc
jns
iret
shr
subb
inc
jns
mov
verw
jmp
lea
sub
push
sub
jmp
pop
mov
bound
mov
sbbb
mov
push
repnz
lock
je
xchg
out
mov
bnd
dec
not
or
je
stc
movsb
enter
jo
sub
xor
mov
out
mov
xor
cmp
clc
push
test
mov
out
lcall
xor
jno
ja
scas
sbb
mov
mov
jge
jmp
rcll
adc
push
mov
shlb
aad
jnp
add
cs
data16
mov
movsl
sbb
ret
js
dec
xchg
std
jns
in
push
daa
subb
or
cld
std
mov
cs
es
dec
js
add
aad
cmpsl
jecxz
mov
push
pop
jge
in
jo
cmpsl
dec
dec
mov
adc
inc
and
iret
adcl
sbb
sub
pop
scas
dec
sbb
ret
cmp
mov
jecxz
lret
xor
sub
pop
adc
jnp
add
arpl
fs
dec
sbb
jnp
fldenv
mov
mov
daa
xor
addb
popa
aad
scas
adc
jmp
push
push
test
xchg
imul
add
popa
outsb
push
mull
push
mov
push
push
repz
jne
dec
rorl
lcall
fldl
cmpsl
mov
jae
pop
inc
movsb
pop
mov
les
popa
aaa
repnz
stos
sarl
ds
add
add
mov
fwait
loopne
jb
xor
iret
sbb
pop
mov
outsb
jnp
shlb
lds
or
rcrl
or
cmp
test
enter
stc
out
or
add
out
mov
mov
sbb
mov
rorl
inc
add
and
xor
test
addr16
and
and
mov
arpl
mull
mov
adc
dec
xchg
push
into
cmp
cmp
test
push
xchg
jo
dec
leave
pop
nop
loopne
mov
lahf
lahf
jne
sbbb
xchg
movsl
mov
rcrb
fdivl
mov
mov
and
nop
jo
mov
mov
adc
xchg
movb
imul
jecxz
std
and
or
call
negb
xchg
scas
fs
sbb
push
ret
sti
dec
jbe
cmp
aaa
pop
dec
mov
jnp
outsb
fstp
cld
or
pop
sar
push
loope
stos
inc
popa
inc
jg
sti
dec
sbb
testb
outsl
jbe
lods
fisttpl
pushf
xchg
inc
jns
int3
ret
mov
test
pop
iret
lcall
or
push
jne
push
mov
dec
sbb
loope
pop
hlt
fsubrl
sub
dec
cmp
jns
fisubrl
inc
mov
out
add
inc
push
cmp
ret
jae
xor
mov
push
lcall
jne
mov
daa
jno
xor
jb
or
fmull
fdivl
xchg
push
mov
test
fdivs
xchg
and
shr
jo
mov
sub
mov
or
adc
orl
fwait
xchg
fwait
adc
dec
jl
push
js
movsl
adc
push
sub
clc
jb
xor
adc
mov
into
test
out
fsubp
xor
aas
aad
xchg
mov
lea
fdivs
fbstp
roll
pop
add
mov
mov
and
ret
ds
pop
mov
ss
lds
mov
stc
rol
ss
das
jbe
or
lock
mov
push
or
dec
popf
dec
or
jb
push
popa
popa
js
arpl
cwtl
sub
in
lahf
outsl
adc
mov
sbb
movsl
add
gs
xor
movsl
stos
push
jbe
inc
scas
movsb
jae
pop
push
popl
sbb
cli
pop
add
dec
push
xchg
fcoml
sbb
dec
frstor
push
dec
and
xor
aam
mov
pop
das
hlt
pop
lahf
and
push
pusha
mov
inc
mov
movsb
fdivl
clc
jo
sub
gs
pop
dec
shlb
sbbb
popa
mov
scas
push
add
test
add
addr16
cmc
adc
popl
pop
jne
mov
mov
std
xchg
cmp
lds
call
loope
cmpsb
xchg
xchg
addr16
jmp
jne
jle
jl
xchg
adc
test
mov
jae
stos
pop
movsl
aas
pop
fsubs
or
jne
or
cwtl
mov
xchg
jb
xchg
test
push
xchg
pop
loop
cmp
sbb
arpl
mov
adc
daa
xchg
cs
dec
outsb
push
test
dec
adc
int3
jmp
mov
jl
arpl
jecxz
cmp
adc
push
jmp
popa
aad
out
mov
add
es
in
xor
or
add
inc
adc
pop
sti
fmuls
xor
push
int
adc
arpl
in
shl
inc
cmp
xor
aas
mov
stos
stos
push
int3
in
sub
pop
xchg
xor
push
or
movb
cs
repz
add
xlat
aam
js
mov
adc
add
fstpt
and
sub
hlt
and
push
sahf
test
sti
mov
dec
das
lods
lcall
pop
fistpll
imul
sbb
lcall
adc
fdivrs
mov
jl
fs
and
push
mov
test
mov
jecxz
iret
sbb
shrb
pop
mov
leave
outsl
push
adc
clc
jmp
into
mov
or
and
je
and
repz
inc
adc
addr16
add
adc
pop
inc
sbb
lods
sub
add
dec
jge
or
lock
ss
leave
sub
mov
enter
dec
call
add
sarl
test
pop
dec
divl
jl
stos
sbb
outsb
pop
mov
enter
outsl
add
sbb
jp
sbb
xchg
sbb
pop
test
adc
sbb
bound
push
fmul
ja
push
sub
nop
or
js
js
mov
inc
mov
stos
mov
fmuls
subl
xchg
lret
adc
push
jl
lock
aas
pop
mov
lock
movb
mov
popf
jle
sub
test
cmpsb
push
lret
mov
xchg
add
mov
mov
push
imul
into
leave
loop
int3
sbbl
jge
aaa
add
and
cmp
push
jmp
sahf
iret
insl
adc
cld
pop
pop
cmp
sbb
add
sub
scas
in
pop
lods
addb
mov
pop
fwait
ret
test
in
and
outsb
mov
mov
jnp
dec
test
inc
loop
pop
loop
push
add
les
imull
fldcw
je
push
in
leave
cmp
jge
cwtl
push
gs
les
cmp
lret
aad
iret
enter
dec
bound
in
rorb
push
mov
test
loop
inc
aad
les
out
or
fsub
pop
push
inc
call
xchg
iret
gs
mov
push
push
outsb
in
aam
shll
adc
out
sub
inc
cmc
jo
xor
xor
sbb
test
insb
jle
imul
push
mov
imul
arpl
dec
mov
inc
dec
jae
ds
adc
dec
out
pop
pop
mov
pusha
adc
adc
cmpsl
dec
lea
sub
push
jg
arpl
xlat
push
cmpsb
mov
es
mov
jecxz
les
lock
fadd
mov
hlt
and
xor
adc
js
jle
psllq
mov
pushf
cmp
and
add
test
ds
push
call
push
xor
ficoml
js
pop
mull
jecxz
lea
xor
mov
mov
pop
dec
aam
inc
add
test
sub
xor
sub
jp
inc
aad
mov
or
dec
add
push
push
imulb
ds
push
movsl
les
and
movsl
jg
push
cmp
cld
movsb
imul
iret
adc
mov
sbb
mov
mov
negb
dec
lret
mov
dec
cmp
jp
cmp
xor
test
sub
out
jbe
daa
vpshlw
push
es
stc
lds
dec
mov
mov
sbb
test
add
lret
cmp
adc
mov
push
push
jle
and
inc
dec
mov
inc
fs
nop
push
les
push
jo
xchg
push
xchg
dec
pop
test
mov
jo
popf
sub
test
pushf
xchg
xor
push
sbb
inc
jg
sub
loope
pop
xor
movsb
cmc
mov
js
add
inc
mov
ret
sbb
mov
lock
subl
cmp
adc
jle
sub
push
nop
sbb
scas
iret
fstpt
sub
divl
arpl
stos
mov
lahf
mov
scas
jno
sbb
leave
push
push
mov
pop
lds
push
mov
arpl
mov
push
repz
das
movsb
sahf
test
cmp
or
sbb
loope
inc
cwtl
fs
mov
lds
jns
pusha
jmp
repnz
in
mov
cmp
sahf
inc
in
in
cmp
rcll
loop
add
mov
mov
stos
hlt
inc
mov
add
lahf
sub
punpckhwd
dec
iret
popa
pop
xchg
jge
inc
jo
lock
mov
and
nop
leave
popf
dec
mov
push
sub
pushf
push
cmp
notl
addr16
pop
mov
pushf
or
iret
lods
enter
cld
mov
stc
add
xor
pop
inc
sbb
push
je
cmp
aad
scas
lds
add
adc
test
mov
xor
jge
in
sub
fisubrs
xchg
jae
lods
inc
xchg
cld
xchg
push
adc
test
cld
adc
xor
pop
and
add
ds
lahf
into
xchg
mov
xchg
mov
sbb
pop
roll
imul
inc
sbb
ret
push
push
jne
in
pop
push
out
aad
les
jb
ret
lret
ss
sub
mov
ror
push
mov
insb
stc
sub
sub
jmp
xchg
or
ss
jge
push
adc
aam
rclb
aad
in
pop
sbb
pop
out
pop
jbe
and
ret
loop
add
sbb
push
jge
arpl
out
cld
mov
inc
xchg
mov
in
pop
dec
mov
loop
mov
clc
sti
jmp
push
jle
xchg
jge
sbbb
gs
cmc
aas
push
fisubrl
pop
je
fbld
cs
adc
jns
add
icebp
sub
cltd
add
xor
xchg
sub
ficompl
faddl
mov
jb
mov
mov
mov
jne
inc
pop
and
mov
dec
lds
pop
mov
fwait
ja
ret
sbb
popf
or
cmc
adc
mulb
pop
fwait
xchg
cmp
mov
push
jne
test
cmp
ja
leave
cmp
cltd
inc
xor
sub
testb
stos
pop
cmp
and
jge
adc
dec
xor
sbb
jne
sbb
mov
mov
push
rcrl
icebp
outsl
dec
xchg
mov
ja
and
mov
xchg
push
mov
push
push
std
mov
push
insb
xor
adc
jne
push
lcall
pmaxsw
push
xchg
cmp
mov
shl
mov
mov
sub
push
jo
outsl
pop
pusha
adc
int3
data16
push
icebp
dec
jnp
imul
cmpps
jnp
leave
fildl
xchg
arpl
ret
sahf
sub
cmpsb
les
sub
cli
sbb
loopne
mov
pop
inc
mov
dec
ss
pusha
adc
adc
dec
dec
inc
dec
loope
pop
add
push
jge
mov
push
jnp
dec
movsb
mov
or
inc
mov
sub
mov
outsb
negb
mov
rcpps
pop
sbb
out
cs
rorl
ds
imul
dec
xor
mov
cmpsl
stc
add
hlt
gs
js
pusha
sbb
xor
jge
test
cmpsb
xchg
out
fchs
insb
enter
push
fistps
out
pusha
out
imul
in
push
aam
outsb
dec
rorl
test
fistpll
cmp
xchg
jno
push
je
leave
mov
push
test
xchg
cmp
cmp
sub
out
xchg
add
popl
aas
inc
arpl
cmp
sbb
mov
or
lea
negb
push
loopne
jge
roll
sub
jge
cltd
stos
lahf
dec
jo
inc
push
in
pop
decl
mov
das
inc
dec
fs
aam
adc
test
jno
inc
mov
cmc
lea
cmp
jmp
sbb
xor
sub
dec
inc
call
jg
cmpsl
shll
or
pop
or
decb
outsb
ret
and
fs
and
std
sub
sub
popf
in
vaddsubps
out
or
sbb
rolb
sbb
pop
add
std
cmp
mov
outsl
sub
inc
fimuls
sbb
or
nop
inc
jno
stos
sub
inc
flds
push
and
mov
cs
ret
jmp
push
inc
xor
xchg
sub
mov
scas
repnz
mov
xor
sahf
push
inc
rclb
cmpsb
pop
lods
push
push
repz
sbb
fsubl
loopne
ss
xchg
fisubrl
jle
cmpsb
push
sbbb
sahf
jecxz
mov
push
out
andl
and
js
or
xor
rolb
pop
inc
into
js
jmp
cltd
je
cli
aaa
lods
push
inc
call
out
in
mov
xlat
aam
mov
in
aam
mov
add
mov
cmp
shlb
es
out
dec
fbld
xor
sub
cs
push
and
cs
fcmovnbe
mov
cmpsl
outsb
imull
test
jecxz
pop
pop
dec
bound
gs
jmp
pushf
mov
add
std
loop
jae
sbb
call
dec
es
xor
sbb
or
mov
nop
lret
les
or
xchg
jns
xor
in
cli
push
pop
nop
notb
add
cmp
insl
xlat
cmp
cmp
jb
out
sub
and
movsl
subl
fstps
push
and
and
pop
dec
push
add
mov
sbb
pop
insl
fldt
fcomps
dec
cli
in
inc
loop
fs
xor
aas
mov
mov
aas
aaa
jle
dec
xchg
es
fisttpl
xor
dec
stos
int
shrl
nop
inc
fdivrs
mov
test
psubd
xor
jge
sub
ja
or
dec
xchg
xchg
mov
mull
sub
dec
aaa
movsb
push
jbe
loope
jmp
icebp
push
sbb
xchg
jno
aaa
pop
fcomip
insb
pushf
jo
add
cmpsl
popa
mov
les
lret
or
xchg
push
jo
mov
pop
out
ficomps
xor
cmp
repnz
fistpll
add
iret
xchg
dec
jne
repnz
sub
push
sbb
mov
js
and
push
mov
xor
mov
repz
push
test
fwait
shl
inc
scas
fcomip
aad
mov
icebp
pop
es
push
out
dec
push
lret
cld
cmpsb
out
add
sahf
push
pop
ret
add
and
push
mov
jmp
arpl
or
shlb
das
push
push
mov
fs
dec
sbb
loopne
test
je
xor
push
dec
dec
leave
mov
clc
bound
inc
out
or
dec
stc
push
jns
sub
fnsave
jmp
std
pushl
mov
jg
jl
push
insl
stos
es
mov
pop
out
pop
int3
push
movsl
xor
lret
lods
rclb
xchg
jo
dec
adcl
xchg
sbb
roll
int
cmp
or
cmp
add
mov
adc
imul
sbb
call
mov
xchg
adc
cmc
repz
sub
imul
or
imul
xchg
adcl
sub
adc
jle
xor
fs
and
xor
shl
push
jl
scas
addr16
out
psubq
mov
lahf
push
test
ds
daa
jle
fxch
dec
sbb
imul
jmp
mov
jge
mov
jp
out
jecxz
movsl
adcb
push
pop
aas
mov
sub
stc
cmpsb
out
adc
mov
sub
fwait
pop
xchg
add
add
mov
jae
js
sub
out
jle
jp
loop
adc
into
imul
lahf
cmp
sub
pop
push
popa
xor
rcrb
add
sar
out
cld
add
frstor
arpl
mov
adc
aam
stc
mov
insl
mov
test
je
jg
divb
lcall
or
in
dec
add
cltd
xchg
sub
loopne
mov
push
ja
imul
lret
outsl
call
js
pop
cmp
pop
jp
inc
push
cmp
adc
pop
arpl
xchg
cmc
imul
cmp
test
iret
inc
xchg
iret
push
jo
fistps
cld
das
mov
xorl
in
jb
adc
pop
push
sub
mov
dec
mov
fnsave
repz
mov
fsubrs
fcomps
jp
jo
fldt
jmp
iret
add
xchg
jno
push
mov
mov
and
xchg
adc
jns
mov
and
xor
push
inc
mov
inc
and
mov
and
inc
push
mov
sbb
cmpsb
cmpsb
orps
inc
push
pop
cwtl
lods
outsl
mov
fisttpl
xchg
test
ss
lods
fs
cmpsl
sbb
sahf
dec
pop
lcall
lret
pop
or
mov
or
mov
adc
cmp
dec
sbb
aas
jns
scas
inc
adc
cwtl
dec
xchg
lret
xchg
mov
sbb
adc
mov
les
rep
cmp
popf
xchg
stos
mov
mov
add
xlat
cld
mov
je
aaa
xchg
vmovaps
addr16
dec
lret
rcrb
ljmp
jno
push
or
jo
jo
subb
jbe
sbb
cltd
flds
stos
mov
jg
repz
inc
dec
push
adc
push
jg
sbb
std
fiaddl
lret
mov
popa
xor
roll
rorb
stc
mov
mov
mov
jne
leave
xchg
adc
stos
fcmovbe
push
nop
sbb
js
dec
in
add
pop
ficomps
pop
jae
mov
sbb
ret
xchg
mov
shlb
aaa
movb
aas
and
sub
add
sbb
inc
and
frstor
sub
int
lock
je
cmp
shrb
xchg
jno
popf
jge
shlb
pusha
pop
inc
add
xor
cmp
arpl
les
stos
mov
or
jl
jge
push
xchg
mov
scas
cmp
push
imul
mov
add
fisttpl
and
pop
jg
dec
fdivp
bound
jnp
sub
dec
inc
jg
popf
mov
stos
mulb
jmp
cmp
or
sbbb
mov
movsb
mov
adc
fsub
clc
ja
sub
rcll
in
xchg
repnz
pop
jmp
in
fcoms
xchg
add
clc
dec
popf
loopne
out
data16
lods
sbb
jl
es
mov
loop
sldt
movsl
or
mull
sbb
lods
adc
lds
mov
mov
push
jmp
cmp
mov
int
cs
mov
enter
push
inc
std
jl
push
pop
in
add
fdivrl
mov
mov
push
mov
xor
add
test
mov
cmp
aam
mov
arpl
adc
mov
lahf
dec
loopne
repz
aam
xchg
push
pop
cmp
int3
clc
sti
repz
andl
fsubs
cwtl
lock
out
pushf
mov
int
mov
pop
jae
lcall
sub
fisttps
pop
test
mov
test
je
jp
inc
mov
add
pop
xchg
dec
out
in
mov
stos
sahf
adc
mov
dec
and
addr16
lock
fisubrl
cmp
fstl
nop
in
add
pop
js
lahf
adc
xor
jg
clc
ficomps
pop
insl
sub
jnp
lds
fcomp
lret
pop
xchg
sahf
fldenv
fwait
mov
push
mov
jbe
and
jb
mov
xor
inc
fwait
jno
in
sub
out
scas
and
cltd
lret
push
cmp
mov
cld
push
fistl
nop
ja
push
shlb
iret
pop
in
jg
lahf
cmpsl
jg
fnstcw
xchg
cmc
sbb
nop
pop
ja
movb
aaa
mov
mov
lahf
push
cmp
movsl
adc
test
js
mov
lcall
push
adc
lock
lret
hlt
sbb
int3
aam
gs
sahf
cmpsb
mov
cltd
or
notb
mov
cli
cmp
std
pop
aaa
jl
outsl
xchg
inc
pop
cmp
sub
aam
imul
mov
mov
xor
dec
or
in
push
xor
xchg
sbb
mov
add
mov
xlat
pushf
or
nop
clc
inc
test
jne
popa
xor
mov
xor
pop
push
outsb
lea
iret
pop
add
push
mov
out
adc
push
sbb
xchg
xor
scas
add
outsl
mul
xor
sub
jg
push
iret
data16
adc
insb
inc
sti
inc
in
xor
rorb
jl
insb
outsl
or
scas
pop
xchg
inc
dec
jb
push
xor
add
add
mov
filds
inc
push
xor
sub
mov
jb
xchg
sbb
lods
xchg
push
xor
sub
xor
push
mov
sbb
push
aam
repnz
cmpsl
and
rol
xlat
in
adc
into
fyl2x
pop
loope
test
out
xchg
jb
or
dec
fildll
mov
repz
or
cmc
adc
imull
push
call
leave
ret
xchg
push
mov
jecxz
hlt
add
push
shlb
jnp
mov
pop
faddl
dec
shll
repnz
push
fcmovnu
cs
repz
into
xor
movb
imul
pop
sub
push
adc
inc
clc
movsl
mov
adc
mov
outsl
repz
mov
pop
inc
mul
mov
scas
sub
inc
lods
mov
repnz
jecxz
scas
shr
faddl
push
adc
adc
cmc
sbb
in
cmp
lock
push
rcrl
pop
leave
or
push
push
xor
ljmp
mov
in
pop
and
lea
fcmovnbe
or
call
call
sbbb
cmpb
inc
jecxz
lds
and
jl
test
scas
xlat
dec
in
sub
popf
ret
and
ret
and
xchg
lret
mov
xchg
sbb
mov
pop
or
pop
dec
leave
cmpsl
ds
pop
nop
loopne
mov
out
mov
test
cmp
ja
enter
in
pushf
mov
imul
stc
in
movsl
jmp
mov
mov
xor
call
adc
shlb
mov
lret
jg
mov
mov
mov
dec
scas
and
mov
inc
push
lahf
mov
das
fcom
xor
mov
jnp
mov
jecxz
std
repnz
enter
cmp
mov
adcl
or
push
mov
mov
mov
inc
out
sti
push
mov
mov
cltd
pop
aas
jns
xlat
pop
jnp
jl
pop
faddl
out
or
iret
shrb
jle
mov
arpl
lahf
and
mov
cwtl
outsb
mulb
lods
movsb
imul
cmp
hlt
loope
mov
js
push
mov
pop
mov
fadds
inc
adc
adc
jae
pop
xor
mov
mov
xchg
lahf
xor
rolb
mov
rorl
dec
mov
pop
dec
dec
clc
ss
xor
leave
loop
jl
add
xchg
daa
pop
sub
adc
mov
stos
lahf
mov
sub
ss
xchg
jg
nop
shll
shlb
add
xchg
test
shl
mov
cmp
cmc
mov
adc
sub
or
mov
cmp
lcall
int3
or
ret
int3
inc
insl
loop
rorl
mov
dec
cmp
rclb
and
lods
mov
ret
sahf
pop
xor
fucomp
lods
dec
jnp
jp
xor
or
or
xchg
xchg
jmp
out
into
stos
enter
cmp
push
xor
lahf
outsl
rcl
push
adc
dec
or
or
lods
sbb
jno
std
fcomi
cs
adc
and
jge
fwait
xor
cmp
leave
cmpl
sub
xor
mov
fstpt
inc
sub
sub
mov
movsb
das
daa
mov
mov
rcll
test
aas
sbb
mov
and
push
stos
adc
pusha
xorb
xchg
cmp
out
xchg
mov
push
and
mov
out
loope
cmpsl
pop
xor
mov
js
rclb
insl
and
xchg
or
add
gs
mov
mov
jecxz
iret
subl
jge
add
lret
cmpsl
cs
xor
inc
das
test
mov
cmc
dec
push
pop
dec
out
bound
or
loope
jmp
dec
add
fidivrs
inc
pop
pop
inc
hlt
pop
or
mov
xchg
lea
sub
xor
outsl
outsb
adc
inc
int3
sub
sub
bound
and
bnd
subb
xor
dec
lret
fldt
mov
pushf
jge
enter
stos
sahf
stc
xchg
push
xor
sbb
mov
dec
dec
jne
lods
adc
mov
rcr
xor
std
add
inc
cld
insb
in
outsl
std
pop
add
fisubrs
testl
mov
sub
mov
jnp
mov
sbb
not
pushf
negb
xchg
or
jae
jne
sub
lds
popf
push
add
stc
cmpsb
or
jne
xchg
sbb
mov
xor
rclb
aas
cmpsl
rol
std
sti
jp
xchg
repnz
pop
jecxz
mov
lret
ljmp
rorb
sbb
or
mov
rcrl
aam
insb
lds
add
aas
push
loop
fs
in
arpl
mov
xchg
dec
xchg
xor
add
sub
ja
xor
jns
inc
test
call
lcall
jl
addr16
adc
sbb
lea
push
pusha
xor
adc
jo
sahf
cmpsb
cmp
adc
push
std
aas
les
loop
xchg
aam
int
mov
lea
ret
fcompl
push
pop
mov
push
mov
ljmp
pmaddwd
outsb
aas
adc
adc
xchg
dec
push
movsb
sub
mov
sbb
jp
sub
aaa
jmp
push
add
mov
push
std
vmovdqa
dec
push
std
push
xchg
negb
bound
sub
mov
sub
sbb
pop
test
mov
loope
lods
les
fbstp
cmp
xorl
lret
and
or
mov
add
test
pusha
jl
sbb
pop
fsub
sahf
mov
push
cmp
cmpsl
mov
sub
adc
sub
lds
sbbb
lret
inc
addb
aad
add
xchg
js
sub
sbb
xor
lds
pop
lock
cwtl
aam
pop
inc
lods
call
imul
mov
repnz
daa
jmp
fnsave
hlt
jecxz
in
inc
push
jmp
jne
dec
jbe
pop
jl
lea
out
test
inc
enter
sti
jns
aas
clc
hlt
ret
loopne
ret
dec
das
int
out
cmpsb
out
push
and
lock
test
pop
leave
jl
or
ss
push
cmp
fcoms
jg
or
cli
pop
or
mov
add
out
mov
es
out
ds
inc
sbb
addb
pushf
fisubrl
inc
adc
push
into
jne
cmpsb
lea
pop
js
pop
scas
mov
pop
jecxz
xlat
push
notl
int3
push
repz
xchg
call
cmp
sahf
cltd
ja
mov
hlt
in
mov
out
push
pusha
xchg
and
cmp
frstor
push
lahf
pop
and
add
flds
stos
iret
mov
mov
fidivrl
add
push
ljmp
out
push
lahf
shlb
push
pop
divl
inc
pop
and
mov
clc
pop
mov
cltd
push
or
call
pop
dec
fwait
rcll
pop
jae
mov
cmpsb
lret
fdivp
xlat
mov
aam
inc
adc
mov
jb
icebp
cmpsl
test
xchg
test
jge
jge
xchg
ss
push
faddl
jnp
repz
test
loope
pop
or
xlat
ss
popa
inc
pop
dec
mov
sbb
sbb
sbb
call
xchg
mov
push
cltd
adc
fs
repz
cmp
roll
les
in
js
shl
mov
ss
pop
and
pop
imul
cmp
fwait
dec
mov
sbb
lods
mov
fwait
lock
dec
arpl
or
es
push
mov
pop
cmp
pusha
adc
xchg
cltd
push
jge
cmp
test
adc
xchg
mov
fadd
sub
dec
jns
ficompl
or
in
das
dec
mov
aas
push
lcall
mov
int3
inc
mov
and
aas
stos
out
inc
xchg
add
loopne
lds
subl
shl
arpl
roll
pop
add
arpl
mov
or
dec
pop
jae
push
and
repz
fidivrs
xchg
xor
mov
xor
xchg
je
lret
push
jb
mov
pop
pop
repz
add
das
and
cmpsl
sub
jmp
ds
frstor
mov
mov
int
adc
je
cltd
fwait
xor
or
xor
xor
aad
loopne
cmpsb
arpl
mov
adc
adc
inc
add
aad
scas
xlat
call
mov
cmpsl
enter
cmpl
dec
imul
pop
pop
icebp
push
mov
adc
outsl
lcall
xchg
xor
daa
iret
adc
mov
lds
popf
jge
jno
mov
push
sahf
jl
rolb
andl
push
mov
ret
mov
in
mov
sbb
push
jle
mov
loope
sbb
lcall
mov
adc
imul
adc
adc
mov
pop
pop
mull
js
out
xor
push
xchg
push
sub
scas
pop
xchg
inc
adcb
sahf
push
lea
outsb
std
out
cmpsl
sub
sar
pop
fsub
dec
mov
xchg
push
into
pop
movsb
pop
jecxz,pn
pop
int
mov
cmp
dec
add
lcall
mov
mov
adc
scas
shl
filds
testl
adc
xor
push
out
xor
cmpsb
fmul
adcb
lahf
inc
pop
ret
sub
fsts
mov
jb
jmp
dec
stos
jmp
mov
popf
stc
xchg
push
xchg
add
daa
test
pop
gs
js
into
mov
filds
pop
cs
cmp
push
xor
loop
pop
and
dec
dec
sub
jg
fldcw
adc
xor
xchg
lahf
popa
out
jp
mov
adc
out
cmp
add
cmpsl
mov
in
xchg
int
jle
push
xor
test
jge
push
insb
aad
xchg
xor
cwtl
in
faddl
or
fadd
cmp
xchg
fsubrl
callw
nop
lock
mov
push
mov
dec
arpl
adc
pop
sub
sub
dec
test
xor
sbb
or
nop
shl
fsubrp
lcall
dec
arpl
xchg
aaa
and
dec
add
jno
jg
fsincos
popf
mov
aad
cltd
lret
aad
aam
mov
loopne
xchg
dec
aaa
jle
nop
or
jns
popl
xchg
pop
pop
loope
js
dec
loop
xchg
test
loop
xor
xchg
cmp
pop
adc
bound
add
outsl
inc
sbb
xchg
test
cmpsb
cmp
out
and
loope
dec
inc
imul
mov
sub
mov
inc
fsubs
push
rcll
pushf
out
insl
mulb
xor
sub
xchg
sub
mov
daa
idivb
aad
shll
cmp
add
mov
outsb
gs
nop
inc
stc
dec
cld
gs
pushf
pop
dec
arpl
pop
pop
mov
pop
leave
add
xlat
ljmp
inc
dec
stos
mov
push
shlb
loope
ret
lds
push
pop
mov
xchg
push
xor
js
fdivrs
mov
push
cmp
mov
adc
mov
cmp
rolb
inc
sbb
jmp
cmovo
scas
jecxz
adc
les
xchg
jo
fmull
mov
sub
add
sbbl
sub
scas
test
scas
pop
cmp
insb
pop
sbb
add
jnp
xor
sub
xchg
pushf
sbb
arpl
out
or
mov
in
pop
xchg
cmp
pop
sub
pop
xor
pop
cld
fsubs
rcrl
pushl
sar
ja
shrl
inc
je
scas
mov
inc
in
xor
push
push
or
sbb
pop
push
pop
cmp
and
lea
fimull
mov
out
popa
imul
mov
inc
sbb
mov
fimull
xchg
add
adc
jo
int3
mov
mov
or
lods
xor
outsl
and
mov
sub
fbld
fwait
adc
mov
or
xor
je
std
mov
ret
stos
fidivrs
addr16
out
inc
sub
and
pop
sti
pop
call
and
push
inc
jne
aaa
mov
scas
div
adc
mov
sub
sbb
mov
loopne
pop
cs
xlat
xchg
xor
arpl
shll
cmp
cmp
pusha
in
fwait
lcall
fnstsw
pop
or
adc
jae
or
dec
jnp
mov
mov
jecxz
fs
xlat
sub
outsl
popa
push
jl
loop
pop
pusha
mov
and
mov
bound
xchg
mov
xor
pop
add
or
ja
fcompl
hlt
js
mov
mov
test
pop
pop
jb
scas
dec
push
daa
lcall
jns
pop
or
add
fwait
dec
sub
lcall
gs
jne
mov
cwtl
in
mov
xchg
jecxz
rolb
jns
push
fsts
loopne
outsb
jge
aas
xlat
inc
stc
add
adc
mov
sub
adc
mov
ja
pop
les
ret
inc
idiv
pop
pop
pop
scas
dec
xadd
loop
pop
jae
loop
jg
hlt
in
lahf
mov
jo
jne
or
stos
inc
lods
push
dec
and
add
xchg
in
adc
or
cs
iret
mov
sbb
inc
fistpll
sub
adc
sbb
cmp
loope
int3
je
js
lods
cs
mov
imul
and
arpl
leave
mov
xor
test
popa
fadd
push
push
push
lock
cld
push
enter
mov
and
add
inc
pop
repnz
test
dec
pop
movsb
sub
fs
mov
sbb
imul
add
xor
dec
or
inc
cmp
cmpsl
dec
mov
out
push
or
jle
shll
jno
ficoms
mov
hlt
jmp
pop
or
or
adc
xlat
adc
jbe
sub
mov
fadds
pop
cmpsl
inc
roll
cld
ret
add
push
dec
mov
push
icebp
rcrl
cli
cld
sub
lods
push
outsb
lods
xchg
xchg
sub
add
aas
lock
cwtl
xchg
add
dec
pop
xchg
dec
xor
std
adcl
cld
lods
leave
pop
dec
shrb
mov
push
mov
sbb
xor
sti
cmp
add
ljmp
test
pushf
outsb
inc
in
enter
or
push
sbb
mov
daa
dec
stos
test
lret
pusha
das
dec
jp
dec
ljmp
sub
outsb
push
push
repz
cs
mov
jne
sarl
loope
call
push
popf
adc
sub
mov
rcrb
stc
icebp
scas
clc
gs
lcall
push
int3
dec
mov
imul
pop
push
mov
mov
lcall
jb
sbb
ljmp
fwait
xchg
sbb
cs
sub
out
mov
mov
xchg
int3
lcall
xchg
test
pop
xor
jle
popf
and
test
mov
stos
dec
push
push
xchg
xchg
mov
mov
or
std
dec
clc
cmp
adc
sti
sbb
popf
jg
ss
iret
popfw
icebp
adc
es
push
mov
sub
leave
and
jmp
pushf
adc
cmc
ss
or
hlt
sbb
clc
xlat
loope
pop
add
cmp
mov
push
push
js
stos
enter
cmp
mov
and
cmpsl
xor
adcb
add
push
sub
jb
daa
imul
and
xor
sbb
and
scas
adc
mov
inc
fcomi
mov
cmpsb
jp
dec
movsl
sbb
filds
inc
xor
add
cmpsb
sbb
add
and
xchg
mov
mov
sahf
dec
out
das
cmp
mov
ret
adc
pop
push
inc
rclb
pop
jns
xor
mov
sub
mov
sarl
mov
nop
fcom
jb
mov
xchg
test
test
lds
mov
inc
add
cmp
dec
test
inc
andb
xchg
jecxz
dec
sub
pop
cmp
push
aad
repz
or
mov
mov
test
mov
hlt
mov
mov
xchg
out
iret
fbld
push
dec
fnstsw
add
lahf
sub
cmp
lahf
mov
adc
popf
das
cmpsb
fbstp
stos
xchg
inc
jg
mov
ds
add
pop
jb
inc
or
inc
rorb
ss
pop
xchg
xlat
add
mov
or
jb
add
inc
jne
jecxz
and
lahf
das
inc
insb
mov
xor
rcrl
daa
xor
adc
hlt
fsts
pop
push
cs
jbe
sahf
call
and
xchg
and
add
lret
outsl
std
xor
mov
rcrl
jmp
push
insl
jae
sub
xchg
xor
ss
pushf
out
xchg
sub
sbb
pop
lret
mov
iret
clc
jbe
mov
leave
jle
push
push
jnp
adc
mov
xor
nop
sub
repnz
cwtl
sti
movsl
movsb
jns
sti
cmc
and
push
sub
rcll
fmul
and
out
add
pop
loop
int3
jo
js
sbb
pop
xor
xchg
out
loope
or
inc
mov
push
mov
inc
sub
imul
out
cmpsb
jmp
xor
sbb
scas
xchg
stc
add
movsl
adc
xchg
mov
nop
or
and
arpl
inc
enter
pop
int
int
inc
dec
push
push
sbb
inc
cmp
dec
ret
andb
stos
cli
pop
inc
pop
fdivrs
lahf
xchg
dec
sbbb
and
pop
push
jnp
dec
orl
fistps
mov
jae
push
xor
lcall
out
data16
and
pop
cmp
jl
mov
xchg
sub
sub
lods
nop
pop
lods
sbb
out
out
cmp
sub
mov
addr16
mov
jge
mov
sbb
cmpsl
repnz
jle
out
shrb
imul
inc
mov
dec
hlt
mov
mov
imul
es
sub
add
not
mov
lods
sbb
fs
inc
ret
push
imul
push
pop
xor
enter
jecxz
stc
dec
aas
jl
add
mov
rclb
mov
fnsave
lock
aad
jmp
xchg
sbb
dec
loop
scas
mov
pop
ja
fidivl
and
cmp
sahf
cmp
fidivs
push
push
cmpsb
mov
mov
ret
jae
mov
popa
loope
jns
fimuls
imul
fs
adc
cmp
adc
push
fdivp
sbb
sub
fmul
jle
fwait
mov
mov
mov
or
or
adc
mov
jns
mov
call
aas
mov
jae
xchg
xchg
push
in
push
cld
call
data16
inc
cld
xchg
outsl
fimull
scas
add
icebp
mov
jnp
out
lods
hlt
push
pop
cmp
dec
lods
js
ja
jnp
test
lahf
or
dec
insl
mov
lea
ljmp
jno
test
insl
divl
fcmove
loop
sub
mov
cltd
lret
xor
insl
repz
adcb
mov
sbb
sbb
data16
mov
lods
mov
xchg
sub
xchg
mov
mov
xchg
jecxz
sahf
adc
mov
dec
orl
dec
inc
mov
stc
fwait
sarl
stos
jle
imul
dec
pop
aad
mov
lea
inc
cmp
inc
pop
xor
mov
jecxz
xor
lret
xor
into
sbb
addr16
dec
mov
lock
gs
dec
lahf
cmp
sbb
push
cmp
rorl
and
pop
imulb
pusha
pop
lods
add
mov
pop
fbld
pop
fidivs
je
inc
cmpsb
fcmovbe
stos
mov
jae
aaa
add
dec
xor
xlat
scas
sub
pop
push
push
int3
add
pop
sub
dec
adcl
or
cmp
add
aad
fstpl
mov
paddd
add
fdivrl
daa
sub
subb
in
out
test
fnsave
fs
xchg
mov
ja
subb
call
add
mov
mov
lcall
popa
mov
adc
enter
xlat
jns
cmp
aaa
xlat
std
aaa
rcrb
sti
sub
mov
push
jle
scas
dec
out
call
repnz
inc
pop
stos
inc
mov
lahf
outsb
mov
adc
cmp
mov
mov
aaa
adcb
xor
cltd
jne
jo
xchg
mov
divl
fsubp
incb
mov
nop
stos
pop
add
mov
cld
ja
sub
xor
leave
push
jo
push
dec
lock
jmp
and
adc
aas
xchg
xchg
clc
xchg
addb
sub
dec
mov
jmp
sahf
and
inc
mov
mov
pop
sbb
or
insb
filds
sbb
add
sbb
into
adc
and
das
jl
loopne
xchg
dec
sbb
push
adc
or
xchg
insb
fiaddl
xor
mov
xchg
jp
mov
je
mov
and
cmp
lahf
mov
or
lods
inc
push
mov
mov
call
fnstcw
dec
scas
push
push
and
outsb
sti
andb
out
add
and
pop
pop
mov
aam
inc
shr
roll
cmp
adc
andl
es
push
add
shlb
xor
les
inc
stos
js
int
rclb
testb
out
fsubrl
add
push
ds
sbbb
xor
mov
mov
adc
aaa
cld
jno
aas
jmp
xchg
mov
ror
jae
adc
push
scas
cmp
fsubr
xchg
fimuls
pop
adc
imul
rcrl
mov
sub
dec
imul
mov
mov
movsl
stc
ret
fs
arpl
inc
pop
lock
pop
mov
aaa
xor
push
test
sbb
das
scas
sti
test
mov
in
ficoml
adc
movsl
in
add
inc
pop
adc
aad
jl
dec
mov
das
int
xor
daa
adc
xchg
das
sti
add
sub
fwait
andb
cmp
add
stos
dec
inc
std
lahf
in
movsl
push
cmp
dec
imul
lock
bound
bound
pop
dec
mov
std
outsl
inc
aad
int3
stos
clc
lock
mov
shll
dec
into
ret
cld
mov
dec
lods
outsb
add
cmpsl
into
and
dec
xor
add
cmp
xor
insb
pop
enter
or
push
sub
sub
or
mov
jle
dec
pop
add
inc
loope
mull
jb
scas
mov
add
mov
or
sbb
nop
cld
jp
push
sub
adc
add
and
fwait
cmovns
stos
mov
sub
mov
mov
jno
fcmovu
cld
mov
loope
movsl
adc
lock
sub
mov
outsb
sub
repnz
movb
ret
cmpsl
inc
or
hlt
mov
fs
jecxz
sbb
mov
mov
js
add
test
jl
jnp
stos
aad
mov
jg
xchg
xchg
push
push
test
scas
mov
xor
loop
and
jno
test
pop
int
push
sub
mov
or
std
add
xor
daa
cltd
ljmp
sti
mov
roll
loop
jnp
pop
pop
add
les
loop
adc
add
cmc
mov
fidivrl
rclb
mov
pop
xchg
int
mov
sub
cvtps2pi
jo
lock
adc
push
mov
jo
mov
jbe
js
add
mov
xor
in
testb
add
or
incl
mov
ret
mov
xchg
sbb
pop
jae
sub
add
pop
cmp
dec
mov
loopne
xor
fisttps
aaa
or
xor
in
adc
fidivrs
mov
orb
pop
push
jl
mov
jle
mov
dec
aad
xchg
mov
cltd
mov
lret
cmp
xor
lret
dec
push
xchg
popa
cmp
xchg
sbb
or
sub
scas
jp
dec
loope
insl
mov
cmp
std
push
mov
das
fnstenv
je
jecxz
lds
sub
cwtl
push
inc
in
mov
roll
cmp
mov
add
or
bound
mov
pop
lcall
movsl
enter
sahf
mov
shlb
xchg
jl
daa
scas
dec
push
rcr
pop
pop
into
mov
fmull
or
mov
test
insb
cmp
mov
inc
jg
pop
add
xor
stos
lret
xchg
lret
scas
sti
aas
popf
ljmp
imul
pop
hlt
in
push
adcl
cmp
pop
lock
out
pushf
insl
jb
cli
or
mov
push
sbb
scas
test
cmpsb
or
das
sti
push
xchg
xchg
add
inc
push
push
shll
imul
test
dec
repnz
cmp
push
out
dec
push
cmp
pop
mov
or
pop
mov
xor
icebp
mov
out
outsb
sti
push
pop
xor
sahf
testb
es
jmp
cmp
fsubs
pop
cltd
adc
cmp
jl
dec
sbb
into
in
sbb
rol
pop
lods
lahf
sbb
inc
dec
sub
sub
mov
or
std
add
mov
push
sahf
mov
xor
in
mov
pop
pop
inc
call
arpl
sub
mov
fcoml
sub
xchg
add
icebp
mov
push
pop
addr16
int3
ss
inc
out
add
fdivrs
inc
icebp
mov
dec
cmp
mov
adc
jbe
push
std
dec
xchg
sub
adc
xchg
push
aas
mov
icebp
hlt
xchg
mov
adc
test
and
ror
jns
arpl
leave
or
jecxz
jae
pop
xchg
mov
out
add
jge
cmp
lcall
push
cmp
in
cmp
jbe
xchg
dec
addl
mov
enter
mov
inc
mov
mov
test
jmp
pop
test
in
frstor
sub
xchg
rcll
xchg
inc
clc
loop
lds
sbb
les
inc
int
stc
stos
mov
rorb
xchg
lods
js
dec
inc
outsl
mull
ds
push
jo
nop
jne
add
mov
inc
call
in
arpl
and
lret
mov
mov
test
jb
lock
inc
cmp
lods
pushl
cs
mov
lods
movaps
dec
cwtl
xor
cltd
push
lea
insl
fldcw
sahf
or
sub
sahf
sub
xchg
in
jne
out
push
sbb
sti
dec
cmp
ret
loop
jb
sbb
mov
push
mov
push
js
fwait
pop
xchg
lcall
mov
adc
pop
xchg
mov
das
shlb
mov
movl
push
xchg
mov
mov
lret
in
fdivs
cwtl
dec
jbe
pop
sbb
pop
sub
fdivrs
mov
inc
xor
or
sub
in
pop
or
in
sub
xlat
mov
cli
xchg
xor
cld
push
or
icebp
cmpsl
sub
sub
lods
add
dec
test
out
repnz
adc
dec
xchg
push
inc
rorb
aam
mov
fstl
add
faddl
xchg
and
test
or
xor
mov
jae
dec
testl
test
jae
mov
and
mov
fsubl
jno
cmpsl
rorb
cs
cwtl
sbb
test
cmc
nop
pop
inc
lods
inc
push
mov
bound
ret
movsl
lds
pop
fnsave
xor
fs
sarb
iret
push
push
and
dec
mov
jno
sub
stos
in
mov
xchg
add
sbb
nop
das
fnstsw
mov
jge
adc
push
and
add
loop
and
cmpsb
cmp
lods
loop
nop
and
mov
imulb
ficompl
loopne
pop
pushl
mov
subb
inc
arpl
std
jge
jbe
mov
mov
add
adc
icebp
out
sti
fstpl
das
pop
mov
aas
popf
jl,pn
sub
cli
xchg
mov
sub
and
mov
inc
mulb
xchg
jns
xchg
std
pop
xchg
and
vandps
xor
shl
daa
adc
mov
sarb
dec
push
scas
or
push
scas
xchg
or
lea
test
xchg
adc
adc
mov
or
fwait
shll
pop
or
test
jge
sbb
cmp
push
lods
jnp
jae
xchg
adc
xchg
lock
daa
data16
pushf
daa
mov
rcll
arpl
add
int3
daa
sub
lret
pop
xchg
inc
subb
nop
xchg
sub
fnsave
repnz
rcrb
cmpsb
and
add
or
add
jecxz
pop
and
jl
xor
fidivrs
xchg
mov
loop
mov
mov
sldt
sub
sahf
fisubl
push
movsl
sarb
rcrl
push
mov
fimull
sarl
mov
push
or
pushf
lods
dec
sahf
test
mov
das
dec
fs
push
pop
inc
push
adc
int
jno
cmpsl
call
jge
out
in
xchg
insb
in
pop
bound
cmpsl
lds
and
repnz
insb
mov
push
jb
sbb
rcrl
outsb
jg
shlb
mov
push
inc
and
jecxz
std
dec
rorl
jp
push
and
lcall
pop
jmp
mov
or
or
cmp
xlat
in
push
push
xchg
insb
mov
addl
lahf
cmpsb
or
push
in
mov
add
xor
out
adc
sbb
lods
ja
jp
paddsw
xor
push
jo
pop
or
and
popf
pop
or
imul
in
jnp
enter
lahf
and
xchg
loopne
xchg
add
push
rcrl
pop
lock
cmp
sub
and
xor
or
push
dec
arpl
jle,pn
xor
test
addr16
pop
xor
or
lock
aam
or
clc
jg
mov
push
lret
xchg
popl
xor
pop
xchg
pop
iret
mov
push
adc
or
mov
mov
push
scas
pop
dec
aas
popl
pop
fists
das
mov
icebp
insb
push
sub
cs
imul
icebp
xor
xor
mov
pop
inc
rorb
movsb
addr16
mov
aas
test
fisubl
mov
ficomps
lods
jne
jns
faddl
test
mov
mov
rorb
sbb
lret
testb
jb
mov
jae
mov
inc
inc
add
out
jbe
cmp
or
pop
loop
add
icebp
dec
dec
out
fcmovnbe
loop
lock
xor
imul
in
loopne
xchg
xchg
mov
inc
jg
jecxz
insb
lret
lret
fldcw
inc
or
mov
xchg
add
repz
movsb
push
or
stc
mov
adc
cmp
push
mov
roll
les
orb
mov
fldl
xchg
decb
pop
inc
add
push
inc
dec
repz
sbb
out
sarl
insl
pop
shll
cltd
add
test
mov
push
cmp
push
aaa
loop
stc
mov
cmp
lock
add
jle
fs
mov
cmpsb
sub
sbb
mov
leave
xor
mov
popf
sarl
or
fidivl
mov
sbb
adc
add
jnp
dec
mov
jb
js
test
add
repz
loopne
mov
jbe
xor
fildl
pop
xchg
dec
movsb
lcall
xchg
push
iret
rcll
jns
mov
jp
in
mov
jle
push
xor
fistl
xchg
jl
xchg
and
add
int
lea
adc
pushf
add
clc
dec
cmc
movsl
push
insb
adc
pop
sub
mov
inc
fildll
out
out
mov
push
pop
insl
mov
ficoms
jno
in
popf
add
fcmovb
fidivrs
ds
int3
out
dec
mov
aaa
jne
mov
mov
push
mov
icebp
ljmp
cmp
xchg
outsl
mov
pusha
cmp
insl
gs
adc
cli
icebp
imul
pop
or
int3
or
out
or
mov
arpl
xchg
push
insl
pusha
sbb
mov
mov
js
push
lret
dec
pop
js
pop
xor
fisubrl
sarb
in
xor
jmp
xchg
jg
fidivs
into
lods
mov
lods
mov
lods
xchg
cltd
inc
lods
jmp
roll
mov
mov
leave
mov
xor
or
push
xchg
mulb
js
xor
push
scas
jecxz
clc
mov
ds
hlt
push
dec
jns
xor
daa
add
rcrl
cmpsl
and
lods
xchg
stos
push
loop
cwtl
outsb
pusha
mov
cmp
mov
pop
and
shrb
pop
repz
cmp
mov
cltd
fsubrp
rolb
inc
push
cs
jae
jno
call
cltd
add
cmp
movsb
mov
lock
xchg
adc
sub
mov
pop
mov
xchg
loopne
add
add
cs
ds
add
mov
into
xor
and
dec
cmp
dec
inc
es
pop
subl
popf
cmp
sub
in
cmp
pop
mov
cld
inc
adcb
adc
cs
jo
gs
cmc
or
jbe
xchg
mov
mov
mov
jnp
repnz
jmp
les
mov
adc
jp
idivb
lds
mov
aas
outsb
test
fwait
je
jo
outsb
mov
mov
add
stos
stc
mov
pop
sti
out
dec
enter
mov
and
xor
ficoml
insl
ret
loopne
lret
fwait
xchg
sbb
mov
cltd
stos
or
test
ds
sbb
mov
outsb
mov
xlat
sbb
dec
sarb
movsl
es
jecxz
jle
and
in
inc
push
daa
stos
or
inc
ret
orb
adc
push
pop
adc
hlt
cli
aas
dec
xchg
in
movsb
mov
lds
add
sub
and
clc
jp
sub
mov
addr16
cmp
outsb
bound
mov
inc
add
push
test
mov
aad
imul
sbb
xchg
mov
sar
push
cmp
sbb
mov
mov
add
test
adc
mov
fidivrs
cmp
mov
push
into
pop
jno
popa
insl
jb
cli
cli
sub
push
jecxz
push
mov
in
rclb
sbb
add
xor
pop
jl
enter
outsl
aam
enter
adc
adc
leave
mov
mov
cli
xchg
pushf
jg
enter
push
pop
sti
pop
cmp
ret
movsl
call
mov
insb
aam
xlat
lods
add
and
jge
mov
lretw
insl
pop
or
aam
cmp
or
pop
jl
movsb
mov
push
in
adc
clc
mov
or
lods
xchg
sarl
outsb
outsl
bound
sub
ret
lods
add
les
pop
jg
dec
das
into
adc
frstor
popa
rorb
insl
and
xchg
fwait
xchg
mov
xchg
xor
inc
mov
mov
jge
inc
movsb
nop
ljmp
pushf
pop
jmp
sbb
test
rclb
sbb
pop
lds
rcll
mov
pop
fs
loop
ror
stos
fcmove
out
nop
fmull
pop
pop
mov
mov
jle
mov
xchg
pop
pop
mov
int
shrd
lahf
or
mov
jp
pop
jno
pop
je
enter
fsub
jp
aas
lock
imul
cmp
dec
outsl
mov
loope
pop
fwait
iret
sub
ljmp
jne
arpl
cld
mov
lea
xor
cmp
addr16
push
es
mov
les
loop
rorb
cmp
enter
sbb
cli
dec
and
lea
stos
addl
fs
repnz
and
jmp
shlb
sbb
mov
cwtl
sbb
clc
push
sub
mov
loopne,pt
or
loop
mov
fildll
adc
mov
and
arpl
or
jle
xor
stos
add
and
and
pushf
cmp
xlat
aaa
popa
pushf
lock
dec
mov
fistl
mov
pop
xchg
jbe
cltd
insl
xor
test
es
cmp
testb
add
mov
pop
adc
xchg
in
jle
sub
push
pop
fisttpll
aam
hlt
push
stos
mov
pop
cs
cwtl
push
inc
mov
fnstenv
test
pop
inc
mov
test
dec
sub
nop
xor
add
xor
sti
out
dec
mov
and
cmp
sub
jle
mov
stos
shll
nop
aas
xorb
std
mov
cmp
or
lds
push
test
sbbl
sbb
pop
mov
pop
mov
mov
or
cs
xchg
jmp
mov
inc
jge
fisttpll
mov
mov
loopne
inc
inc
mov
mov
lcall
pop
sbb
mov
jne
inc
pop
je
xor
mov
xor
in
imul
sbb
inc
lds
xchg
cmc
cmp
loope
int
push
dec
aaa
push
jl
mov
add
push
dec
push
loopne
jg
cld
sbb
out
dec
ljmp
pop
dec
adc
clc
and
repz
xchg
cmp
repz
pop
sbb
test
repnz
int3
pusha
aas
dec
mov
adc
popf
aas
subb
and
lods
ljmp
or
inc
scas
js
jae
inc
mov
test
js
jge
xor
addps
or
cmpsl
dec
cli
push
dec
gs
sarl
lahf
movsl
mov
adc
mov
sub
inc
addl
pop
mov
sub
mov
or
negb
pop
sub
mov
fs
xchg
mov
loope
repnz
pop
jno
scas
cltd
sahf
jecxz
cmpsl
std
bound
sbb
cltd
stc
les
roll
std
inc
or
sbb
pop
aad
out
les
mov
jg
stos
sbb
stos
lds
lods
gs
mov
ss
inc
lret
push
jle
roll
sub
mov
xor
cwtl
push
mov
jle
in
mov
cmp
adc
loope
add
das
jae
lds
addr16
sbb
xchg
dec
pop
or
bound
xchg
mov
shll
out
inc
xchg
mov
outsl
clc
jbe
lds
mov
add
mov
push
xchg
mov
xor
add
fsubrl
loopne
jo
shrl
cmpb
lods
xrelease
imulb
pop
cs
std
adc
and
leave
dec
dec
addr16
sti
mov
ret
lcall
popl
into
inc
scas
inc
jge
and
sbb
inc
sti
movsl
outsl
sbb
push
sbb
mov
mov
lods
cmp
dec
daa
aad
pop
dec
or
into
shrl
loope
outsb
and
mov
inc
sbb
in
mov
cli
shll
fwait
or
aaa
push
cmc
mov
cmp
cltd
pop
je
cmpsb
cs
sbb
cmpl
stc
mov
xchg
push
popf
sub
mov
xchg
add
ja
and
movsb
hlt
or
push
sbb
sbb
int
mov
xor
shr
mov
mov
lahf
insl
dec
cmc
rcrb
lret
inc
xchg
lods
jo
mov
loope
and
loope
and
push
mov
stos
shrb
bound
orw
mov
or
cmp
cmp
pop
adc
movsl
arpl
fildll
scas
dec
dec
mov
test
xlat
mov
cltd
pop
movsl
lods
lret
push
insl
xor
and
ljmp
sbb
icebp
in
adc
fidivs
adc
aas
and
pop
sti
inc
sub
fyl2x
add
imul
pop
popf
fisubrs
lods
cmpsl
ja
inc
jl
je
aam
xor
fcomip
in
pop
push
mov
je
pop
mov
adc
dec
out
sub
adc
pop
mov
pop
inc
xchg
dec
mov
insl
repz
xchg
dec
sbb
loope
repz
loope
mov
pop
xchg
inc
mov
jns
lods
enter
clc
fstpt
sub
movsb
jl
adc
mov
in
jb
sbb
scas
dec
xor
sub
pop
imul
inc
xchg
cmpsl
lock
int
pop
pushw
bound
mov
sub
lods
out
mov
xlat
xlat
in
ficomps
and
xchg
inc
jbe
cli
push
adc
xor
mov
cli
lret
cmpsl
lods
lods
add
jae
ss
arpl
cmp
testl
lods
shl
roll
ljmp
adc
cmpsb
icebp
cmpsb
mov
mov
cmp
cltd
mov
push
js
mov
dec
aas
dec
xchg
mov
push
ficoms
test
jecxz
xchg
jns
shl
and
popl
jno
movsl
push
sbb
stc
in
xor
mov
pop
pop
int
mov
in
ret
loope
push
lods
jbe
bound
xor
daa
dec
scas
rcll
jle
or
push
or
je
jmp
push
inc
jnp
fiaddl
mov
push
rolb
inc
push
lock
or
das
cmp
loope
jnp
inc
ficomps
inc
inc
loop
imul
sbb
adc
xor
sbb
ss
int3
mov
mov
ret
xchg
push
int3
mov
rep
ss
xchg
mov
fldenv
mov
sub
add
jae
fdiv
imul
push
xchg
lea
or
icebp
jnp
jge
lcall
xor
leave
sbb
int
das
jmp
push
push
cmp
sbb
mov
in
out
sbb
push
stc
cmp
loop
daa
imul
dec
xchg
jne
pushf
xchg
mov
jg
clc
mov
aaa
lcall
movsl
in
sub
fwait
add
lret
or
popa
xchg
mov
sbb
scas
std
xlat
in
into
push
pop
jg
addl
push
stos
add
mov
adc
ss
popl
mov
int
js
test
sub
lret
call
mov
adc
inc
sub
jmp
std
ret
aad
cmp
in
es
add
ss
inc
test
rcll
jmp
cmpsl
ljmp
fisttpl
imul
out
ja
push
ljmp
dec
mov
mov
and
sub
add
mov
xchg
fiadds
pop
mov
mov
push
fnstsw
inc
push
jno
mov
xorb
mov
ja
jge
sti
mov
jl
jno
add
and
adc
adc
sbb
jae
pushf
loopne
sarl
outsb
call
imul
mov
nop
mov
fimuls
call
stc
pop
nop
cltd
out
mov
lret
in
pop
add
test
xchg
sbb
lock
scas
mov
inc
arpl
mov
xor
or
and
dec
or
push
add
xlat
divb
fdiv
test
push
out
sahf
mov
or
xlat
xchg
imul
cmpsl
lea
pop
data16
imul
jl
fsts
cmp
dec
mov
inc
or
jnp
pop
scas
sub
push
bound
jb
out
pushf
dec
inc
fwait
adc
outsl
sti
rclb
xlat
mov
jp
outsl
xor
push
and
repnz
adc
mov
jp
xor
jmp
sub
mov
les
test
std
mov
and
or
insb
das
lods
jl
sahf
xor
jno
shlb
jmp
and
xchg
inc
in
cld
sbb
les
orb
movsb
add
mov
ret
movsb
mov
xchg
inc
mov
fdiv
lock
std
add
repnz
int
rolb
sbb
mov
cmp
cs
out
int
dec
xchg
mov
push
add
insl
add
push
hlt
js
inc
jns
mov
push
jno
pop
cmp
lds
push
ss
xchg
push
push
jnp
or
stos
sub
fidivl
adc
dec
iret
push
aam
cmpsb
nop
rcrb
popf
and
notb
mov
insl
sub
scas
cmp
fmuls
out
out
outsl
sub
js
stos
stos
call
sbb
loopne
cmp
scas
nop
iret
and
fmuls
jne
cs
dec
fs
jns
jae
shlb
inc
movsl
pop
sbb
mov
orl
jae
xchg
je
leave
mov
xorb
add
push
jo
xchg
insl
and
sbb
in
mov
scas
cmpsl
push
dec
int3
mov
les
xor
mov
and
lret
sbb
idivb
or
mov
cwtl
ret
mov
sbb
pop
out
fdivrs
xchg
jg
adc
daa
fisubl
push
jo
adc
int
popa
inc
jno
mov
xor
xchg
mov
pop
inc
jno
cwtl
adc
ficoml
sbb
imul
jmp
cltd
lods
andl
cs
cmp
push
dec
jge
notl
and
out
bound
in
insb
sbb
dec
mov
test
std
in
jne
sbb
inc
jge
jmp
pop
clc
xor
pop
sarl
sub
bound
dec
sbbl
icebp
cmc
add
fsub
cmp
jnp
pop
mov
sbb
mov
dec
gs
mov
add
jle
mov
mov
insb
pop
repz
arpl
jb
sbb
daa
adc
xchg
xchg
sub
sub
push
cmp
imul
sarl
loope
mov
xchg
filds
mov
adc
lahf
push
popf
jno
aaa
xchg
xor
out
xchg
sub
xorl
xchg
mov
in
sbb
imul
movsb
jp
push
cmp
push
sub
ds
fcomip
pop
push
or
aam
movsl
fimuls
mov
jnp
test
push
xor
mov
bound
mov
lcall
in
decb
mov
add
into
inc
add
push
push
and
cmc
add
and
bound
xchg
xor
ja
or
add
cmp
pop
adc
fs
movsb
mov
in
inc
outsb
stos
roll
sub
dec
push
pop
sub
sar
push
cld
pop
mov
sahf
cmp
fdiv
movsl
int
jb
out
pop
sbb
or
ja
mov
mull
inc
and
sub
mov
outsb
mov
inc
daa
fisubl
insl
outsl
jbe
loop
ja
adc
xchg
in
mov
orb
cmp
cmc
sub
xchg
leave
sub
test
scas
xchg
pusha
xchg
cwtl
insb
inc
iret
jns
or
jge
flds
in
data16
pop
out
inc
jns
xchg
inc
jecxz
test
mov
xor
sbb
daa
and
mov
sub
aad
aas
pop
xor
mov
ror
pop
inc
cmp
xchg
and
mov
adc
rol
push
insl
lret
arpl
js
mov
and
int3
pop
push
adc
std
adc
movsb
bound
and
xor
std
test
into
sbbl
imull
sbb
jb
or
push
jp
in
inc
jnp
adcl
cmpsb
cmp
inc
fsubrs
mov
xor
xchg
roll
imul
mov
or
or
jmp
inc
repnz
inc
arpl
aam
push
adc
inc
add
ret
mov
fs
sub
outsb
popf
lret
ja
fdivl
mov
mov
call
pop
lahf
sbb
stos
out
loopne
insb
and
imul
xchg
push
movsl
dec
add
scas
fsts
or
enter
pop
fs
push
js
stc
test
pop
in
jb
int3
loope
cmp
xchg
cmpsl
rclb
xchg
mov
lods
scas
mov
insl
int3
xor
dec
sub
and
fcompl
in
out
xor
jae
dec
movsl
and
in
movsl
xchg
jmp
mov
mov
pop
mov
and
scas
je
jmp
and
jge
pushl
xchg
adc
cld
repnz
xlat
es
ljmp
iret
enter
daa
int
dec
and
and
add
pop
xchg
xchg
mov
sarl
cltd
das
adcl
xor
or
xor
push
in
out
aas
or
dec
popf
or
dec
jae
cmpsb
cmp
mov
ficoml
movsl
cwtl
ja
jns
xor
adc
je
sbb
sbb
inc
sub
inc
push
fadds
loop
loope
sub
mov
shrl
mov
fsub
data16
push
cmp
sarb
lods
xchg
je
and
ret
mov
cltd
and
pop
outsl
xchg
mov
cmp
mov
int3
mov
cmpsl
xchg
pop
or
push
mov
mov
rcrb
add
jge
movsl
mov
fs
xchg
shll
ds
test
add
mov
arpl
fwait
lock
jp
fwait
loopne
inc
mov
fs
ret
jle
das
rcrb
inc
fisubrl
je
mov
dec
dec
sub
pushl
push
loope
adc
mov
mov
fistl
rclb
adc
dec
xor
lods
sub
sub
mov
iret
or
imul
dec
mov
jg
incl
shr
or
mov
cli
hlt
cmp
sub
loopne
cwtl
movsl
push
mov
sbb
adc
and
stos
nop
jl
outsb
addr16
sub
sub
ljmp
sbb
adc
aam
out
adc
push
add
popa
lret
fsubrl
mov
iret
xlat
lods
shr
adc
mov
faddl
in
test
jbe
int3
mov
andb
mov
jae
arpl
pop
dec
sub
aaa
mov
fs
push
add
xchg
out
aaa
and
dec
mov
fwait
adc
lods
xchg
bnd
pop
in
rcrl
xchg
jecxz
rorl
pop
shlb
pop
xchg
sbb
jecxz
and
xor
ja
daa
mov
mov
add
and
jae
fwait
pop
aaa
push
sbb
ss
ljmp
stos
add
sbb
mov
into
out
aas
stc
leave
mov
sbb
fmull
mov
lods
cmp
xchg
movsl
ds
arpl
in
xlat
or
out
adc
mov
loope
outsb
outsl
xchg
dec
cmp
jnp
into
cmc
adcl
xchg
out
xchg
sub
sub
xchg
imul
mov
rol
andl
jle
test
mov
test
and
pop
lds
fs
pop
pop
arpl
aaa
mov
or
cmpl
pop
push
stc
sub
jno
adc
shlb
lods
cmpb
lods
jg
iret
or
adc
fmull
cmc
iret
sub
push
mov
mov
les
inc
mov
add
shr
subl
inc
jp
mov
scas
dec
jle
iret
jo
ucomiss
ficoms
pop
push
stos
repnz
push
and
outsl
push
sbb
inc
leave
nop
data16
lret
lret
pop
and
or
scas
out
loopne
xchg
mov
jle
pop
push
movsl
cs
push
popa
pop
sbb
aad
inc
cs
and
sbb
push
mov
pop
adc
sub
roll
das
stos
movl
inc
fimuls
and
mov
sbb
jae
repnz
adc
jnp
jecxz
cmpsl
adc
lret
add
outsl
popf
out
nop
repz
call
sbb
ljmp
add
pop
daa
cs
sbb
mov
or
jae
outsb
fiaddl
loopne
push
fs
sahf
in
inc
inc
push
js
pop
aaa
push
out
imul
dec
ja
mov
add
sarb
cmc
cli
jecxz
outsl
mov
popf
jb
inc
cmpsb
xchg
xor
daa
idivl
cmpb
cmc
pop
push
xchg
mov
scas
roll
xor
dec
in
lea
push
loope
and
out
sub
push
push
ja
fistl
mov
cmpsb
scas
xor
sub
lds
in
jl
xchg
lds
cmp
in
les
jl
pop
pop
mov
pop
xor
sub
sbb
out
pushf
add
inc
lahf
xlat
dec
xchg
sbb
mov
imul
adc
pop
xor
sub
cmpsb
mov
ror
push
ss
push
push
cmp
adc
mov
stc
icebp
adc
mov
sub
fistl
mov
stos
cltd
xor
jp
addr16
pop
in
sbb
in
jns
sar
negl
xchg
loopne
and
ficomps
js
aaa
fmuls
in
shlb
xor
dec
inc
outsb
fisubl
aad
mov
mov
inc
in
rcll
xor
std
std
and
cmpsl
daa
aaa
fnstenv
cmp
sub
mov
mov
mov
divl
mov
push
xor
jecxz
iret
mov
imul
and
daa
stos
add
sbb
lds
rcll
xor
add
push
mov
mov
sbb
enter
std
movsb
mov
sti
ficomps
dec
inc
push
sub
stos
std
lods
pop
cmp
adc
mov
ja
xchg
popa
aam
sub
jno
xor
cmp
jge
or
dec
mov
pusha
in
mov
mov
call
aad
test
jl
mov
add
xchg
jns
and
icebp
ss
push
rcll
or
mov
xchg
inc
gs
test
jno
lea
pop
test
sub
pusha
jle
psllw
mov
mov
in
mov
sub
sbb
mov
leave
or
sti
call
xchg
dec
xor
clc
cmp
mov
neg
sbb
dec
stc
ret
push
notl
adc
pop
jbe
mov
push
pop
dec
xchg
jecxz
testb
sbb
pop
sbb
cmp
jmp
jno
mov
scas
xchg
mov
ret
dec
mov
divl
push
imul
cmpsb
pop
jmp
add
xchg
mov
jmp
loopne
push
mov
cwtl
mov
popa
push
test
stc
mov
sbb
icebp
mov
jns
lret
test
lahf
dec
int3
addr16
aas
mov
cmp
fistl
adc
mov
push
pop
fs
test
andl
xchg
dec
addr16
dec
pop
fidivs
sbb
xor
int3
imul
insb
sti
mov
cmp
cmp
fmull
es
inc
cs
mov
cmp
or
mov
in
push
fisubs
jae
sub
mov
mov
push
pop
movsb
lahf
xor
lds
dec
scas
add
mov
push
lahf
jns
in
or
mov
jne
cltd
mov
inc
gs
cwtl
inc
and
rol
adc
mov
and
inc
mov
aas
push
ljmp
xlat
lret
repnz
bswap
pusha
test
xchg
jnp
loopne
cmp
int3
mov
call
fdivr
decl
mov
rolb
scas
sbb
roll
addb
pop
leave
push
repnz
lock
iret
popf
test
mov
jo
pop
rcrb
sbb
jmp
push
ljmp
or
cmp
pop
ja
dec
cmp
cmp
sbb
cltd
inc
loop
mov
mov
mov
sub
xchg
icebp
scas
lcall
sub
test
sbb
popa
ret
in
leave
nop
mov
scas
xor
ss
mov
inc
lahf
leave
jo
ds
js
xchg
mov
push
jg
not
or
mov
cwtl
mov
es
xor
xor
and
dec
jnp
pop
pop
rolb
adc
mov
out
sbb
pop
push
jbe
pop
mulb
inc
mov
pop
adc
sub
dec
adc
out
ds
rol
test
loop
add
mov
stc
hlt
xchg
lds
mov
int3
jl
ds
mov
int3
fsubs
ds
pop
fcom
mov
int
xchg
push
rcl
or
int3
dec
fnstenv
push
outsb
xchg
ds
and
add
jo
ljmp
in
test
add
sti
or
dec
adcl
cmpb
push
int3
shlb
xchg
dec
lcall
jo
adc
les
adcl
sub
imulb
test
hlt
dec
lock
int
std
sub
out
xor
jle
pusha
cmp
dec
lds
push
mov
addr16
sbbl
cmpsl
xchg
pop
sbb
repz
xchg
icebp
fs
inc
cmp
xchg
test
cmp
inc
imul
inc
aas
scas
call
repz
jl
jno
nop
jge
xor
dec
xchg
sti
add
movsb
iret
scas
and
leave
int
push
push
xchg
push
mov
mov
repnz
in
xchg
jae
fstpt
cli
xor
enter
jmp
bound
xlat
addl
push
lcall
pop
fimull
push
xor
and
xor
daa
push
jbe
pop
dec
ret
fs
xor
pop
add
sub
mov
xchg
stos
push
inc
xor
cmc
jnp
je
jl
xor
testb
sub
jl
inc
xor
cwtl
add
cltd
fwait
arpl
ret
ret
and
cmp
fs
pushf
test
test
cmp
das
lcall
dec
pop
jb
fildll
and
das
ja
mov
div
bound
int3
xchg
dec
in
jge
push
jl
cmp
cs
jno
xor
pop
or
push
mov
mov
cli
imul
stos
xor
mov
subb
or
ss
sub
xchg
fadd
mov
lds
sbb
and
adc
adc
testl
aad
mov
lret
mov
scas
loope
adc
dec
iret
aad
xorl
cmpsl
dec
daa
xor
inc
test
xor
jmp
bound
add
adc
repz
sub
sub
mov
les
sbb
push
dec
mov
mov
orl
and
xor
and
repnz
gs
xor
pop
leave
jno
lds
sar
push
push
and
jno
add
lods
movsl
mov
punpckhbw
lret
dec
xor
leave
xor
jecxz
arpl
add
jmp
pop
add
fdivs
std
push
inc
test
outsl
addr16
jb
mov
mov
inc
idivl
pop
push
xchg
jae
and
enter
sbb
cld
mov
mov
or
addr16
into
sbb
xor
and
xchg
sub
mov
inc
dec
sbbl
in
push
add
popf
ret
xchg
mov
loope
push
or
mov
mov
test
push
or
xlat
sub
mov
adc
xchg
mov
mov
andb
dec
dec
dec
popf
jnp
push
mov
scas
xor
mov
add
mov
into
lret
in
adc
fisttpll
test
sub
xchg
xor
add
stc
in
inc
psubw
ja
pop
ficoml
inc
cld
and
pop
das
das
cltd
testl
xchg
imul
cli
cwtl
leave
push
mov
pusha
mov
repz
push
xor
jne
xor
je
push
mov
xorl
cmc
leave
loope
push
or
mov
lods
push
dec
hlt
dec
cmp
sub
lock
adc
push
mov
mov
push
xchg
testb
lods
outsb
ja
mov
loope
inc
and
sbb
sub
ja
xchg
cld
sahf
daa
pop
dec
call
sbb
fldenv
ja
jecxz
lret
push
push
cmpl
lods
and
fucomp
arpl
sbb
and
rcrl
adc
cmp
out
outsb
cmc
adc
and
push
aam
imul
sub
inc
int
cwtl
test
mov
pop
inc
sub
in
mov
lret
sarl
repnz
xorl
es
add
ds
or
cmpsb
dec
adc
push
cltd
dec
cli
scas
xlat
add
imul
sti
shlb
lcall
das
in
jle
test
imul
scas
jle
pop
out
sub
fists
imul
jno
jnp
ret
sub
xchg
xchg
loopne
pop
fsubl
insb
out
push
inc
cli
push
aam
inc
lcall
dec
lret
cmp
add
inc
and
xor
cwtl
push
pushf
or
stos
jl
xchg
jle
test
cld
fcom
shll
sbb
aas
pop
mov
cmp
sbb
aam
stos
lahf
divb
dec
mov
lcall
jae
sbb
and
pop
pop
ljmp
rcrb
pop
cli
fmulp
out
fdivr
cmpsb
or
test
jne
jg
mov
mov
shl
inc
aaa
ret
loopne
cmp
mov
inc
mov
pop
mov
cld
xor
jns
sbb
repnz
inc
sbb
test
repnz
xorb
adc
cmc
fbstp
mov
sarb
pop
test
mov
aaa
lret
orb
xor
aas
pop
pop
or
stc
and
sarb
push
cwtl
dec
scas
and
sbb
jb
fisttps
popa
in
pop
and
sub
sub
adc
in
jbe
mov
outsb
and
insb
cmc
xor
xchg
aad
repnz
sbb
in
dec
shlb
dec
push
test
push
add
xor
loopne
dec
cs
cmpsl
cmp
and
xchg
outsb
xlat
xchg
aaa
jnp
mov
pop
ret
xchg
dec
mov
dec
mov
or
scas
inc
jo
xor
scas
dec
jo,pn
sbb
jmp
inc
icebp
lods
insb
dec
pop
sub
movsl
adc
mov
mov
xchg
iret
push
ljmp
aaa
dec
subb
ror
cmc
aaa
dec
dec
add
outsl
repnz
icebp
stos
adc
outsl
mov
lret
cs
pop
jo
out
cmpsl
push
xchg
jmp
test
loop
sbb
push
pop
jae
fcmovb
sub
insl
call
lea
je
sbbl
test
je
idivb
cmpsb
sbb
ds
inc
das
mov
aad
mov
xor
add
mov
mov
out
inc
stos
xchg
cmc
xchg
cmpl
inc
push
out
mov
dec
sbb
and
test
shr
int
call
fucomip
sub
mov
push
repnz
pop
idivl
scas
lods
add
sbb
lcall
xchg
int
outsl
sub
movsb
pop
daa
aam
movsb
popa
xchg
ret
mov
rcr
sub
add
jmp
lods
mov
loopne
mov
or
jae
ds
and
movsb
lahf
jnp
mov
jp
call
hlt
jmp
hlt
jge
mov
mov
sbb
inc
mov
int3
pop
pop
adc
lods
xchg
xchg
add
test
xor
in
addr16
popa
add
int
lods
pop
loope
push
fnstsw
adc
fisttps
and
fcompl
f2xm1
adc
icebp
ficomps
inc
testb
xorb
dec
iret
pop
shl
sub
or
jbe
sbb
inc
mov
dec
out
sub
fs
sub
xor
jne
cmpsb
push
inc
dec
sbb
pop
lds
pop
icebp
push
insb
xchg
test
cmp
test
inc
sbb
pop
fstpt
pusha
orb
shrl
mov
stc
bound
icebp
jbe
popf
shl
lahf
sbb
add
and
mul
add
xchg
push
out
shlb
pop
jae
or
add
cmp
loope
sub
out
test
jmp
sub
xchg
sarb
xchg
arpl
or
lods
jnp
and
sub
icebp
dec
shufps
adc
jo
sbb
xor
orl
push
jg
push
mov
leave
fcomip
rolb
sbb
dec
push
icebp
pushf
dec
hlt
hlt
adc
mov
ss
aas
es
sbb
jle
add
jb
shrb
push
cwtl
jb
lock
call
add
and
sbb
subb
aaa
inc
dec
cmp
dec
xor
fnstenv
or
fdivp
or
push
xchg
mov
mov
out
loope
mov
add
jmp
hlt
popf
call
mov
fisttpl
and
arpl
push
mov
push
pop
cltd
mov
iret
mov
lods
dec
inc
xor
xor
dec
pop
xorl
sub
scas
pop
or
sbb
pop
push
out
rolb
adc
push
xchg
mov
mov
ds
loopne
mov
cmp
sti
pop
pop
xor
mov
pop
fstpt
or
les
scas
sbb
aam
in
ss
cmp
clc
push
fbstp
or
mov
and
add
and
mov
popf
js
and
mov
shl
scas
rcll
std
std
sbb
mov
arpl
aam
cmp
jp
xor
add
or
call
xchg
xor
in
out
sahf
aaa
aaa
cmp
test
cltd
int
arpl
test
add
mull
stos
inc
push
dec
and
jp
loopne
jmp
pusha
adc
leave
inc
aaa
jle
inc
xor
fmul
lock
popf
push
adc
cmpsb
clc
or
sahf
aad
rclb
mov
xor
fimuls
and
pop
add
sti
dec
stc
lock
in
stos
sub
xor
pop
jns
in
icebp
gs
jae
mov
lea
or
and
iret
out
jecxz
push
jmp
sbb
and
xchg
mov
pop
int3
and
into
scas
mov
inc
cmp
jb
mov
negb
sbb
cmc
repz
lds
rolb
lods
incl
xchg
push
and
inc
adc
cld
mov
xor
in
call
pop
shlb
ret
xor
ret
inc
imul
loope
mov
sbb
push
xor
lds
pop
fdivrs
jb
xchg
loop
inc
mov
enter
fstl
dec
jmp
out
mov
pop
lock
das
add
scas
sbb
add
rcr
vminpd
imul
pop
into
sub
mov
call
rcrl
dec
cs
or
or
push
dec
xor
sbb
xlat
mov
cltd
xchg
xor
pop
adc
push
movsl
lret
pop
dec
sub
mov
fs
pop
xor
pop
sub
mov
cmp
popf
clc
xor
aam
add
xchg
mov
out
push
mov
push
jne
inc
push
inc
jnp
ds
adc
repnz
cld
xor
pushf
mov
nop
sub
push
aam
hlt
xchg
mov
pop
aas
dec
insb
aad
insb
jmp
lock
mov
sub
pusha
outsb
ljmp
push
inc
jmp
mov
mov
mov
adc
cltd
sub
add
or
jecxz
cs
pop
sub
mov
lahf
je
sahf
ja
shlb
je
jp
jecxz
and
inc
clc
sub
lret
jb
cmp
jns
jmp
mov
int
inc
mov
insl
adc
mov
sub
dec
xchg
stc
push
push
push
dec
sbb
dec
mov
aas
test
fnstsw
mov
xchg
sbb
in
and
call
sub
mov
outsl
cs
mov
jnp
pop
fisttps
ret
ljmp
or
das
mov
int
push
sub
cmpsb
lock
in
orl
lock
cld
mov
bnd
mov
fisttpl
jne
imul
les
xchg
sub
mov
aad
add
mov
repnz
pop
jmp
push
fmull
add
sub
test
clc
lret
mov
cmp
sti
push
mov
mov
mov
shrl
mov
aam
add
push
es
xlat
mov
outsb
sub
dec
in
jecxz
movsl
in
pushf
or
mov
ljmp
out
xchg
gs
cmp
jb
sub
mov
shl
ret
cmpb
cmpsl
pop
or
add
insl
je
fsubp
or
jecxz
lret
popf
jmp
add
mov
mov
xor
jp
push
cmp
lret
scas
test
adc
stos
pop
lds
subb
je
pop
jmp
push
mov
mov
addb
lods
nop
popa
pop
mov
fisubl
stos
es
and
xchg
push
cld
test
jo
fildll
imul
pop
xchg
es
scas
sahf
in
sub
ret
sub
mov
in
sub
scas
ss
push
adc
pop
xchg
mov
sahf
dec
pop
movsb
pop
leave
ds
jno
add
sbb
lcall
jmp
sbb
mov
aas
je
mov
rolb
add
inc
cld
arpl
jg
mov
mov
fldenv
pop
out
mov
dec
mov
pushf
xor
cmp
clc
xchg
xor
sub
xor
dec
or
mov
std
inc
imul
push
sbb
fwait
fs
xchg
insl
dec
ss
dec
inc
bound
jmp
call
dec
pusha
incl
lahf
push
loopne
cli
push
mov
mov
sbb
xor
mov
dec
push
xchg
loope
mov
into
repz
mov
xor
cmpsl
push
xor
sbb
xchg
stos
cmpl
jecxz
sti
in
xchg
scas
jb
aam
jb
mov
loopne
cs
pop
test
mov
sub
movsb
aam
aam
imul
fadd
ds
bswap
repz
mov
stos
push
pop
fnop
rclb
popf
fmul
inc
andb
xchg
jmp
xor
cmp
dec
cs
ret
jns
ljmp
jmp
stc
mov
jl
loope
fldcw
mov
or
test
dec
fwait
add
and
jo
mov
inc
xlat
hlt
jmp
mov
inc
lea
jp
jbe
orl
xchg
or
fiadds
nop
mov
sub
mov
out
xchg
xchg
push
xor
or
fcmovu
jne
mov
fidivrl
pop
fld
dec
jmp
sub
dec
ret
jne
in
aad
mov
out
repz
mov
fwait
in
mov
dec
test
cld
xchg
xor
mov
test
and
es
mov
mov
lret
mov
loop
or
loope
fimull
je
aaa
into
scas
bound
cmc
pop
sub
fistl
jle
xor
addr16
xchg
rcl
shll
lret
or
jmp
mov
test
dec
push
das
insb
xchg
jno
cmpsl
add
jge
dec
jb
mov
pop
dec
push
mov
int
imul
popf
es
repnz
xchg
inc
sti
sub
adc
inc
mov
fstpt
inc
lahf
fwait
inc
sahf
fldl
aam
or
mov
adc
sbb
inc
or
enter
call
aad
repz
dec
pop
dec
aam
mov
imul
push
xchg
cmp
inc
cmp
lock
scas
xlat
pop
jbe
dec
xor
mov
xchg
les
jmp
xchg
cs
pop
stos
jno
or
push
jle
test
pop
push
test
inc
in
movsl
jbe
cmp
cmpsb
pop
jns
pop
fs
pusha
pop
push
inc
or
xor
add
push
lahf
movsl
sub
testb
add
mov
fwait
or
jmp
lcall
out
ss
pop
call
inc
in
pop
jno
sbb
mov
cwtl
rcrl
inc
inc
sbb
mov
loop
stc
int3
bound
movsl
mov
idivb
enter
lods
mov
out
icebp
loop
push
or
clc
mov
inc
xchg
sub
fnstsw
jle
inc
lret
cmp
into
int3
imul
fisttpll
repz
xor
aaa
popf
xchg
jge
sub
popa
fstpl
jne
fimull
inc
push
xor
jbe
mov
mov
movsl
add
fistl
icebp
inc
es
xor
test
mov
add
cmp
sbb
repz
push
negb
gs
lods
xchg
sahf
mov
cli
lahf
jmp
wrmsr
ror
rclb
aad
jge
fs
lea
xor
nop
popa
xchg
and
jp
imul
push
dec
sbb
bound
andl
xchg
mov
lcall
cld
out
out
cld
rorl
push
into
repz
mov
cmpsl
cmp
mov
pop
fisubl
fadds
add
data16
enter
inc
movsl
adc
imul
dec
xlat
dec
loopne
jg
daa
adc
mov
les
jmp
repz
mov
sbb
xchg
push
pop
imul
lret
mov
imul
insl
push
mov
js
mov
popf
icebp
stos
sbbb
dec
xor
mov
aam
jge
in
adc
roll
lahf
adc
xor
pop
stos
push
sub
push
aas
pop
ss
inc
mov
mov
outsb
in
push
sub
movsl
pop
addl
pop
incl
les
nop
ss
push
enter
pop
sub
add
jnp
xchg
cltd
push
cmpsl
ljmp
cmp
inc
dec
mov
out
add
in
jmp
movsb
cmp
jg
push
out
lcall
je
repz
sub
mov
cmpsb
and
fists
sub
push
lcall
mov
popa
movsl
mov
int3
inc
sbb
xchg
sbb
jno
push
inc
enter
icebp
jne
in
add
and
rorb
aaa
addb
adc
push
bound
inc
int3
nop
adc
dec
adc
cmpsl
or
pop
or
fsts
mov
mov
fs
rolb
outsb
mov
sbb
and
dec
rolb
inc
or
icebp
pop
subl
ret
jp
cld
adc
outsb
fistpll
cli
mov
cli
lods
stos
xchg
es
xor
xchg
sub
fwait
loope
imul
fs
add
fs
adc
push
mov
cmp
es
cmpsl
sbb
aam
mov
push
push
lcall
sub
scas
push
inc
icebp
mov
iret
aaa
movsb
and
jp
sarb
jp
push
mov
ds
or
mov
dec
lock
shrl
rorb
push
fildll
mov
xchg
dec
mov
mov
xchg
fiaddl
pop
jp
mov
rorl
pop
aad
decb
cmp
inc
xchg
xor
sbb
mov
sbb
es
pop
hlt
fdivrp
cmp
sub
hlt
daa
testl
or
aad
xchg
push
punpckhwd
decb
out
repnz
nop
std
pushf
mov
out
cltd
jle
jg
fcomps
mov
outsb
mov
jne
push
cmpsl
pop
adc
mov
outsb
and
mov
pop
jns
jo
mov
js
xor
fimull
jns
xor
jmp
xchg
sbb
popf
dec
or
xchg
notl
gs
into
sbb
cli
les
and
inc
add
xchg
xchg
ret
mov
push
fnstenv
andl
dec
scas
dec
cmp
cmp
sbb
xlat
popa
ret
cltd
rcrl
xor
stos
dec
or
insl
inc
and
xchg
sbb
ljmp
das
or
inc
cmpsb
pop
mov
gs
addr16
or
cltd
hlt
scas
add
add
dec
pop
or
push
aad
int
inc
pop
sub
leave
push
dec
cmp
inc
lods
insl
mov
pop
and
push
test
lea
insb
in
test
ret
scas
and
out
mov
repnz
sbb
cmc
xor
mov
lods
dec
ror
clc
mov
cmp
xchg
xor
jg
mov
add
pop
loope
mov
stc
leave
insl
jo
hlt
mov
or
dec
adc
or
adc
punpcklbw
dec
mov
cwtl
leave
dec
mov
lea
outsl
jle
mov
push
popf
pop
push
prefetchwt1
mov
outsb
test
mov
arpl
cwtl
cs
mov
mov
enter
into
ret
ljmp
mov
pop
sbb
adc
jmp
mov
sbb
mov
sub
les
scas
xor
add
or
sbb
je
mov
lret
push
cltd
jae
shll
jno
mov
xchg
mov
xor
inc
xor
rcr
rolb
mov
lret
fnstenv
andb
xor
pop
outsl
test
call
jp
mov
idivl
ljmp
or
mov
leave
iret
xor
cmp
and
xchg
xchg
xorb
enter
hlt
add
xlat
sbb
push
sbb
stc
pusha
adc
mov
rcll
adc
lds
mov
jp
pop
lods
push
adc
push
std
into
adc
jb
jmp
jns
adc
shll
in
adc
sahf
xchg
out
test
cmp
enter
and
rcr
call
mov
jg
in
in
outsl
inc
push
jmp
pushf
ret
in
out
shlb
xchg
loop
stos
cld
lea
loop
and
add
and
mov
sbb
adc
aaa
std
in
sarl
ja
aad
pop
sahf
negl
lahf
mov
hlt
leave
test
fidivrs
xor
call
jg
js
fisubrs
xor
pop
mov
rorb
mov
push
cltd
dec
les
cmp
cwtl
popa
clc
cmc
stos
stos
cmp
je
xchg
in
add
add
pop
jnp
arpl
mov
xchg
mov
in
push
dec
xor
mov
pop
test
arpl
xor
jl
jg
hlt
mov
jp
sub
stc
aam
addb
add
push
or
lods
push
test
test
cmpsb
mov
mov
cmp
push
test
sbb
sub
lock
lods
repnz
lahf
dec
adc
daa
lahf
cltd
pusha
in
mov
fmul
dec
jge
roll
jg
xor
fisttpll
push
push
dec
orl
add
or
in
jne
addl
shrl
mov
sbb
jo
nop
pushf
push
mov
sbb
loope
cld
mov
addr16
ret
call
mov
dec
cmc
sub
cld
lcall
stos
lret
das
cmpsb
inc
fs
pop
mov
xor
xor
push
pop
or
inc
mov
jo
inc
mov
add
lret
push
je
in
jge
mov
xor
and
mov
jmp
or
test
int3
xchg
fcoms
dec
shlb
insb
and
out
ljmp
test
fimuls
dec
dec
addb
ja
mov
xor
inc
std
and
xchg
push
pop
daa
mov
add
aaa
xor
mov
xchg
push
test
jb
iret
fwait
dec
pushf
stc
push
push
pop
push
jb
rcrb
mov
push
sub
lret
cmc
push
cs
pop
lods
int
sub
push
or
xor
movsl
insb
jmp
lock
pop
push
insl
ficoms
leave
pusha
pusha
out
je
xor
push
jo
nop
sbb
sub
cmp
push
push
jge
lahf
inc
xchg
out
cwtl
push
pop
add
xor
jns
pop
push
mov
mov
fildl
inc
dec
sub
or
iret
popa
repz
repnz
int
dec
xchg
cmc
aam
dec
lods
xor
movsb
cmp
cmc
pop
fwait
mov
cmp
cmp
jle
movsb
xor
xor
mov
out
add
fld
cmc
and
inc
fisttpll
cwtl
mov
mov
scas
sub
fs
inc
pop
dec
sbb
push
mov
mov
cmp
daa
dec
in
ret
rorl
xor
mov
not
jo
and
aad
xchg
cmp
leave
mov
sub
jne
cmc
mov
enter
pop
mov
call
fnstcw
sub
push
fistl
sub
and
push
push
sub
xor
jge
stos
loope
idivb
sbb
and
stc
aaa
jp
pop
dec
out
ja
insb
cwtl
test
ja
mov
nop
cmp
pop
les
mov
jae
xor
out
subb
dec
adc
pop
in
jae
add
fdivr
loope
cmc
div
pop
mov
xor
popf
repz
sub
mov
test
push
loope
imul
dec
aad
les
stos
push
xor
pop
int
insl
lods
jmp
cmp
loop
imul
fwait
idivl
and
int
cltd
adc
and
mov
xchg
stos
xchg
jns
mov
push
lret
adc
nop
xor
add
outsl
sub
enter
ret
mov
dec
xchg
scas
lret
jae
push
mov
fildll
mov
out
sahf
xor
xacquire
sub
or
or
int3
pop
cmc
sub
dec
call
daa
or
imul
aaa
rcr
aaa
add
aam
jnp
mov
push
fnstcw
push
lret
and
out
jae
outsb
xchg
test
or
scas
pop
hlt
xor
jbe
imul
push
or
movsl
das
and
outsl
add
sub
push
pop
and
jg
or
in
add
fldenv
mov
cmpsl
popf
and
dec
in
stos
sahf
mov
jno
jno
jecxz
or
xchg
sbbl
jae
push
xor
mov
sbbl
shl
lods
ret
add
dec
dec
ds
fadd
jmp
mov
add
fdivs
push
xchg
icebp
or
sub
xchg
xor
xchg
lock
mov
out
js
pusha
ja
mov
mov
lahf
popf
mov
jle
out
ss
mov
mov
mov
and
call
rcl
push
xchg
pop
sbb
ret
push
sub
mov
fmuls
mov
add
pop
jae
cmc
shlb
rorl
lods
dec
pushf
adc
lods
pop
lea
sbb
pop
sub
aaa
rorb
shrl
xchg
inc
pop
mov
aaa
xchg
aam
inc
and
xor
sub
sbb
popa
xor
aam
sbb
mov
adc
mov
xchg
mov
xor
ret
xchg
inc
or
jg
mov
pop
jnp
or
clc
inc
inc
dec
push
jecxz
xor
idivl
push
add
out
jnp
mov
aas
pop
jp
cmp
les
mov
push
xor
pop
or
stc
xor
das
xor
fistl
ds
xchg
arpl
sbb
inc
mov
mov
xchg
sbb
mov
mov
cwtl
sar
test
mov
insb
cli
jmp
mulb
or
or
fmull
jmp
add
icebp
lea
fmul
push
sarl
push
pop
test
mov
loop
dec
xchg
jb
vfmadd231ss
in
pop
cmpl
jmp
mov
push
test
subl
pop
cmp
add
subb
fists
mov
dec
push
lock
sbb
mov
xor
jmp
pop
push
pop
iret
insb
xchg
icebp
leave
subl
dec
aaa
lods
adc
mov
rcll
mov
mov
add
jg
rol
jecxz
sub
adc
xor
pop
aad
int3
ret
mov
inc
sbb
in
mov
mov
mov
je
mov
jp
fcoml
neg
cmpsb
dec
rcrb
sbb
ret
adc
xchg
or
popf
mov
popa
clc
stos
push
and
xorl
xchg
ficoml
rorb
and
ret
sbb
fnstsw
xchg
iret
fildll
mov
sub
jecxz
push
and
mov
rep
or
clc
adc
add
loop
arpl
xlat
cld
ds
out
add
pop
fadd
pushf
scas
dec
mov
into
call
dec
push
xchg
stc
inc
inc
xlat
xchg
loop
mov
insl
movsl
ds
mov
sub
inc
cmp
popf
inc
cmpb
pop
nop
mov
lea
arpl
call
inc
jl
dec
xchg
repz
out
fldcw
icebp
mov
inc
fwait
pop
repnz
cmp
popa
push
cwtl
js
adc
lea
inc
ret
jl
inc
clc
mov
gs
enter
xchg
outsb
mov
rolb
popa
test
jmp
mov
sub
xor
inc
cli
mov
test
nop
dec
dec
and
mov
inc
imul
fsubl
mov
fs
loope
fldcw
out
or
nop
les
sbb
ja
add
push
pop
pop
repnz
arpl
es
sbb
insb
adc
sbb
flds
dec
jg
xor
cmp
insl
in
cld
dec
fisttpl
shr
mov
push
loop
fdivrp
cli
pop
mov
gs
adc
add
push
test
test
js
jle
lea
add
push
bound
ficompl
push
imul
test
setl
addr16
mov
mov
jge
mov
fs
insb
jmp
cmpsb
cmp
jecxz
push
mov
imul
dec
adc
sbb
jno
push
js
out
jmp
addl
xchg
adc
fdivs
xor
cmp
rolb
loop
repnz
jl
stos
mov
imul
push
cmc
jmp
mov
ret
movsb
xor
cmc
lcall
pop
push
in
inc
mov
jne
mov
jae
lods
lock
icebp
sbbb
mov
ret
add
cmp
insl
mov
orl
push
fsubl
test
mov
xchg
cmpsl
in
jns
fmul
dec
rcrb
dec
push
popa
jbe
cmp
sub
fisubs
pop
stos
lret
into
scas
fwait
shrl
mov
pop
pop
mov
xor
out
jecxz
mov
mov
addr16
mov
flds
out
dec
loop
xor
sbbl
mov
inc
pop
mov
daa
int3
dec
jno
arpl
pusha
enter
mov
iret
lods
out
sbbb
hlt
lcall
jo
jae
push
mov
inc
cmp
orb
stos
or
mov
sarl
jb
mov
mov
inc
and
ss
push
out
fwait
adc
hlt
push
test
test
push
add
sarl
mov
jl
mov
movsb
test
neg
pusha
daa
dec
popa
or
lahf
lods
or
xorl
out
out
xor
fstl
mov
inc
jge
and
sub
daa
frstor
mov
pushf
pop
push
aas
cmp
dec
push
push
xchg
xchg
sbb
ret
lret
jg
js
mov
and
stos
adc
dec
dec
push
dec
lods
xor
sub
push
mov
popa
mov
dec
mov
cltd
popf
frndint
xor
cltd
cmp
xor
mov
inc
dec
mov
mov
adc
xor
sbb
mov
sahf
in
pop
in
push
fs
pop
daa
ficompl
mov
mov
mov
mov
pop
xor
mov
add
add
cltd
jge
js
loope
jae
sbb
pop
push
xor
scas
add
out
xlat
mov
xlat
adc
inc
and
cmp
test
lods
or
stc
fsubs
aas
xor
pop
bound
sbb
movsb
shrb
push
cmp
push
push
ljmp
push
fistps
lret
jbe
out
adc
jns
jg
rcrb
jne
mov
mov
shl
ret
xchg
jnp
lock
dec
cli
cli
mov
lea
lahf
cmp
fwait
push
jp
fildll
xchg
rorl
pop
cmp
or
adc
mov
inc
sbb
cmp
inc
add
pop
repz
adc
imul
aas
jg
icebp
dec
pop
mov
jmp
gs
popa
lods
negb
dec
sarl
pop
repnz
dec
xor
push
loope
mov
les
push
mov
movsl
enter
xchg
ret
sub
dec
pop
jne
jne
out
inc
sbb
jmp
dec
mov
inc
test
lods
adc
jle
dec
aaa
mov
pusha
jae
mov
sti
inc
push
or
out
and
jo
and
nop
in
pop
mov
test
mov
js
bound
or
or
jns
mov
imul
das
push
push
daa
adc
mov
mov
es
or
fs
mov
cmp
fiaddl
mov
sub
pusha
popa
xchg
xor
imul
inc
lcall
lret
test
mov
call
dec
into
pop
ror
rcll
loope
xchg
mov
dec
pop
pop
xor
adcl
lahf
fdivl
pusha
ret
xor
aaa
aaa
xchg
or
pop
dec
mov
mov
or
push
hlt
es
pop
int
ret
dec
lods
add
xchg
lods
adc
rcl
mov
mov
sbb
adc
or
pop
pusha
cwtl
xchg
les
les
movb
mov
mov
stos
out
loop
test
sub
push
repnz
inc
rolb
call
inc
mov
sbb
movsb
dec
jns
cwtl
imul
ret
scas
adc
fs
jae
mov
mov
push
scas
stos
push
cmp
adc
inc
sbb
dec
dec
mov
lods
test
loope
sub
and
jge
fstpt
nop
cmc
bound
sub
sbb
stos
ret
rcll
xor
pusha
je
mov
mov
pcmpgtw
jg
mov
mov
aam
jl
mov
mov
jge
and
int
jnp
jecxz
es
pusha
and
push
push
xchg
or
mov
pushf
pop
jl
mov
dec
xchg
sbb
jge
test
fcmovb
popf
pop
sbb
xchg
fmulp
add
iret
aad
mov
mov
and
test
mov
jo
rcrl
push
ret
nop
fistpll
pushf
pop
or
pusha
repnz
dec
and
stos
ret
mov
sub
sub
mov
mov
mov
pop
or
xor
sarb
mov
pop
xchg
into
add
jp
mov
mov
in
aad
outsb
out
aam
mov
pop
rcll
icebp
jmp
pop
push
call
ljmp
mov
jae
sti
inc
int3
cmp
sbb
fidivs
adc
xchg
xchg
or
out
xor
imul
and
notb
adc
aas
lret
int
stos
nop
mov
or
in
xlat
mov
in
push
and
dec
mov
cmc
inc
or
pop
inc
stc
cwtl
mov
mov
pusha
mov
mov
push
rcll
js
aad
dec
fstp
or
mov
sbb
sub
rcrb
and
fildl
rclb
adc
add
dec
les
movsb
sbb
jno
cs
add
push
push
jge
fiaddl
cmp
xor
pop
dec
or
or
dec
jo,pn
mov
push
imul
repnz
fisubs
push
adc
jl
sub
pop
aam
adc
aad
loopne
or
push
pop
jo
mov
js
push
pusha
popf
xchg
std
xor
sub
lds
or
lret
cmp
jmp
in
add
inc
hlt
push
mov
sbb
outsb
add
pop
outsb
or
push
dec
lods
or
jge
and
push
xlat
or
jge
in
dec
nop
adc
stos
bound
enter
dec
cmp
rorb
push
push
xor
jmp
pop
cmp
pop
das
cmp
cmp
pop
push
inc
stc
and
push
xor
dec
hlt
ds
imul
pop
out
lahf
sbb
iret
lock
push
cld
call
loope
mov
mov
dec
or
jl
pop
fstpl
repz
cmpb
push
mov
cli
xchg
data16
idivl
mov
or
ljmp
cmp
out
push
xchg
inc
sbb
repz
mov
mov
iret
lea
arpl
ljmp
stos
jle
lds
shl
xchg
xor
and
lret
jl
pop
dec
push
fstpl
jle
jb
cmc
dec
das
ja
aas
or
inc
cmpsl
cltd
lods
repnz
leave
pop
add
insb
xor
movsl
ljmp
fptan
add
popa
xabort
mov
in
xchg
iret
pop
das
xor
int
pop
negl
aaa
repz
xchg
ss
bound
inc
mov
call
cwtl
leave
outsb
cmp
mov
xlat
pop
xchg
adc
mov
or
les
sbb
jmp
call
push
adc
in
add
push
sbb
dec
imul
ds
icebp
ret
adc
and
mov
cmpsl
lods
pop
pop
ss
mov
xchg
enter
mov
movsb
mov
mov
gs
pop
mov
cmpsl
fbld
push
push
push
sti
jp
repz
fwait
cwtl
xlat
adc
push
popa
dec
push
mov
sbb
inc
ljmp
ror
xchg
pushf
popf
adc
mov
add
dec
pop
imul
push
fsubl
rclb
or
outsb
cmc
les
das
ja
or
cwtl
adc
inc
faddp
out
test
ja
arpl
pushf
loope
test
dec
or
inc
inc
insl
xchg
scas
jge
rcrb
adc
cmp
mov
xchg
dec
xchg
je
addr16
push
inc
inc
dec
add
shll
imul
fs
shlb
jo
pop
scas
or
dec
gs
aam
movsb
cs
sub
int
fcmovne
sub
movsl
or
arpl
clc
movsl
mov
loope,pt
push
dec
neg
and
into
and
faddl
test
fnstsw
or
cmp
lret
bound
shlb
xor
add
xchg
xchg
xchg
mov
pop
mov
push
jp
push
mov
shr
aaa
jl
iret
dec
xor
sub
cwtl
fstps
imul
daa
shl
repnz
div
lret
sub
sbb
rcrl
add
rcl
push
orb
neg
lret
dec
sub
lods
pop
pop
adc
mov
rcl
jecxz
sbb
xor
inc
jb
scas
inc
shlb
mov
and
inc
pop
cmc
or
leave
sbb
xor
push
scas
nop
push
stos
mov
push
imul
insb
dec
mov
in
pop
xor
mov
ja
sbb
pop
es
mov
aad
icebp
test
jmp
adc
nop
mov
test
test
lret
out
add
cmp
adc
cwtl
inc
outsl
pop
sbb
pop
aad
aam
pop
xlat
dec
cmp
adc
movsl
nop
sub
push
clc
jmp
and
inc
shrl
dec
or
mov
addr16
cmpsb
or
pop
sti
int
test
js
popf
push
int3
dec
jno
or
cmp
dec
or
arpl
sub
sub
xchg
leave
in
cmp
jg
in
clc
ficoms
jmp
sbb
jge
stos
filds
or
pop
add
subl
dec
les
lcall
mov
aas
push
scas
cmp
pop
mov
and
out
subl
push
add
setnp
pop
shrb
lahf
dec
xor
cmpsl
inc
xchg
in
push
mov
mov
mov
xchg
popf
inc
dec
xor
outsl
add
das
xlat
js
mov
pop
subb
cmp
sbb
mov
mov
stos
sti
push
dec
mov
imul
add
cld
adc
xchg
ljmp
xchg
loopne
sub
jb
sub
mov
lret
cs
push
inc
adc
sti
fnstsw
das
jne
lods
sbb
pop
xchg
mov
icebp
sbb
mov
dec
icebp
fcoms
out
and
jns
add
je
sub
loope
repnz
xor
iret
clc
cmc
das
lret
fiaddl
inc
scas
xor
add
fnsave
push
mov
ret
inc
addr16
mov
mov
push
and
loop
frndint
out
popa
dec
popa
push
insl
cmp
pop
push
and
lods
leave
scas
jns
xchg
sub
aas
push
fs
in
lret
add
jnp
in
jle
cmp
mov
aaa
mov
or
nop
imul
mov
test
pop
movsb
fs
inc
loopne
mov
add
stos
cmp
add
in
or
mov
pop
pop
jns
mov
sbb
es
adc
aaa
and
iret
and
xchg
rcl
mov
or
cmp
popf
jnp
repnz
dec
inc
mov
and
pop
adcl
out
cmp
mov
cmpsb
loopne
push
jbe
leave
xchg
out
inc
lock
mov
sub
jbe
testb
or
mov
inc
jo
push
repz
shl
xchg
lcall
lcall
mov
pop
out
mov
test
jno
imul
outsb
shlb
dec
je
ret
pmaddwd
pop
imulb
mov
subb
mov
jno
std
xor
jle
in
fldcw
push
fldcw
lcall
aas
or
mov
push
sub
aam
outsb
mov
ljmp
repnz
cmc
and
loope
inc
negb
or
add
mov
ss
dec
inc
mov
push
fbld
test
dec
cmp
or
hlt
cwtl
mov
dec
test
test
jo
rorb
push
or
xchg
repnz
inc
sub
into
into
push
or
out
cmp
inc
xchg
push
sbb
sub
xor
dec
push
dec
movsl
lods
mov
addr16
mov
test
sbb
mov
or
mov
jge
leave
add
negb
xchg
mov
inc
add
cmpsl
divl
xor
add
sbb
push
test
cmp
mov
jo
mov
loopne
jmp
jg
aaa
jb
sahf
mov
test
adc
or
addr16
ss
xor
sbb
xlat
xchg
mov
lret
dec
pop
push
imul
mov
imul
push
rolb
xor
aas
pop
in
jge
pushf
int
arpl
test
sub
cmp
xorb
leave
and
inc
aas
xor
push
mov
adc
movsl
and
push
jg
cmpb
ljmp
aaa
xor
add
movsl
addr16
pusha
push
xor
ss
push
lahf
sbb
mov
loop
sub
or
sbb
dec
test
cs
in
jo,pt
mov
sub
add
das
jg
push
cmp
cli
mov
fildl
sub
jns
xor
adc
test
ljmp
in
repz
or
fsubp
fldcw
aad
arpl
and
or
out
out
sbb
movsl
xor
aad
pusha
mov
sti
lcall
std
mov
jl
mov
sub
insb
popf
cmc
test
sbb
ja
and
and
pop
xlat
pop
pushf
scas
shlb
mov
insb
mov
loope
adc
dec
mov
daa
scas
or
jle
out
xchg
jo
clc
cmc
cmp
inc
fdivrp
add
push
adc
cld
adcl
or
inc
cmpsl
xchg
pop
fs
fwait
mov
les
pop
lret
nop
sti
mov
arpl
cs
and
lods
mov
mov
test
scas
mov
xlat
xchg
adc
adc
cmp
jns
sbb
sub
inc
adc
lods
in
pop
roll
popa
pop
inc
cwtl
sub
imul
xor
dec
adc
mov
roll
inc
test
mov
mov
inc
adc
xchg
mov
lahf
dec
jmp
imul
pop
or
fsub
add
into
sub
add
adc
xor
jmp
popf
mov
into
xchg
jne
mov
js
mov
fcmovnb
or
mov
test
push
adc
xor
pop
pop
add
repz
dec
test
popf
sbb
scas
imul
mov
arpl
sub
pop
mov
int3
adc
push
pop
call
xor
or
inc
xchg
mov
imul
mov
sbb
and
mov
or
sub
testb
shlb
loop
add
jecxz
fsubs
mov
sbb
bound
dec
gs
je
and
dec
jae
jecxz
push
cwtl
push
dec
mov
and
pop
sub
stos
mov
pop
push
sbb
out
mov
mov
mov
inc
shll
lea
dec
mov
pop
inc
sbb
es
pop
mov
cld
gs
xchg
mov
adc
cmp
je
jb
pop
mov
jo
mov
xchg
fadds
mov
pop
or
insb
or
int3
in
sub
in
into
adc
out
mov
inc
pop
imul
lock
adc
push
cmpsb
insb
sarb
jge
mov
lahf
pop
stos
movsl
mov
outsb
dec
mov
cmpsl
dec
std
rolb
cmpsl
add
movsb
out
repnz
je
and
inc
dec
xchg
cli
arpl
mov
and
sarb
lahf
adc
cmc
rcll
test
xor
jecxz
mov
pop
pop
xchg
push
mov
test
icebp
fsubrs
sti
xchg
jae
and
test
das
mov
jno
xchg
sub
pop
in
xchg
pop
aaa
and
adc
jecxz
fsubrp
into
push
sahf
pop
mov
pop
js
add
pop
ja
ds
sbb
dec
jmp
pop
das
jp
loop
movsb
shll
ret
add
gs
inc
dec
mov
sub
or
xchg
jl
ja
mov
pushf
adc
aas
push
mov
andl
ret
mov
and
jmp
fiadds
dec
mov
xor
inc
inc
adc
rclb
inc
jnp
pop
adc
stos
insb
stos
sub
mov
jno
sub
sbb
outsl
sub
dec
jae
push
lcall
jo
and
test
xchg
and
call
jns
sub
cld
insl
push
pushl
int3
scas
dec
inc
rorb
add
inc
cld
lea
lock
lds
pop
out
aas
mov
aam
xor
movsb
loop
push
in
jmp
and
cmp
rorb
xchg
cmc
adcl
in
sbb
push
lea
cwtl
cmpsl
mov
add
clc
push
dec
jo
or
push
and
repnz
sub
push
out
dec
dec
fnstenv
sub
repnz
test
pop
aad
mov
pop
inc
pop
mov
sbb
mov
push
roll
outsb
dec
daa
add
dec
mov
out
ret
cmp
lcall
and
dec
jae
imul
cli
adc
int
pop
jmp
aaa
fidivl
lds
xor
xor
cmc
inc
cs
push
psubq
xor
int3
mov
sub
push
xor
adc
jg
fnstcw
or
cmp
inc
imul
std
dec
or
fldcw
fldt
movsl
dec
xchg
push
cli
mov
jg
std
sarl
or
cmp
mov
cld
jp
xchg
sub
pop
add
mov
pop
mov
popf
mov
scas
insl
jmp
sbbl
out
in
lods
ljmp
ljmp
xchg
adc
or
cmp
xor
or
cmc
aam
or
or
sti
cmp
lock
mov
inc
icebp
imul
out
pop
mov
imul
imul
jecxz
xchg
mov
sub
jmp
insb
cmp
sub
sbb
push
sti
mov
mov
push
and
xchg
inc
xor
adc
lds
jp
xchg
adc
push
in
xchg
xor
xor
mov
pop
mov
mov
ja
jmp
push
shlb
and
and
pushf
mov
and
dec
or
leave
bound
and
inc
sub
negb
in
push
or
ljmp
fadd
movsl
adc
enter
cmpsl
xchg
out
adc
jmp
repnz
pop
dec
cwtl
dec
mov
push
mov
ja
js
jo
xchg
testl
ret
mov
out
pop
pop
aad
and
cmpsl
lahf
sbb
jae
pop
sub
mov
jl
mov
inc
lret
jecxz
imul
xor
sbb
fiadds
das
scas
lds
sti
in
push
or
fisttps
xor
xchg
mov
js
xchg
imul
xor
das
es
xor
aas
imul
mov
test
jp
imul
pop
roll
push
inc
and
faddl
subb
pop
enter
mov
pop
dec
mov
jns
push
loopne
mov
lcall
dec
push
cmp
out
imul
imul
mov
adc
insb
sbb
xchg
jmp
shll
movsl
push
in
or
addr16
add
xchg
push
std
sub
or
and
and
int3
imul
mov
pop
aad
cmc
movsl
das
lods
roll
into
jl
and
outsb
mov
add
or
sarb
push
xchg
dec
stos
das
mov
push
in
mov
out
fs
inc
push
mov
shr
pusha
cmpsb
xor
dec
lahf
shrb
add
outsb
sub
xor
movsb
xlat
add
add
push
shll
mov
call
popa
in
ljmp
jmp
pop
mov
aam
sub
xchg
xorb
jb
scas
mov
cmpl
loope
jl
movsl
xchg
cmp
or
xor
call
and
mov
push
mov
push
push
test
mov
inc
push
mov
jbe
sahf
jno
or
sti
pop
mov
fwait
je
or
call
cmp
es
add
sti
iret
mov
data16
adc
pop
jb
mov
pop
pop
insl
and
in
pop
in
lods
lock
testb
rclb
sbb
daa
loope
fisubl
in
adc
sbb
lock
ljmp
push
cmpsb
movsb
jle
pop
and
add
and
adc
rcll
dec
test
pop
and
nop
and
inc
mov
je,pt
stos
movsl
lods
mov
cmp
xchg
ja
add
pop
insb
fucomi
mov
sbb
icebp
or
stos
mov
sub
dec
and
and
into
lods
insl
xlat
shl
push
jb
ljmp
repz
inc
popf
xchg
jns
out
cmc
or
cli
cmc
sub
push
xor
pop
movsb
sbb
inc
ja
xchg
sbb
cwtl
cmp
push
subl
xchg
sbb
cmpsl
mov
popa
dec
ret
test
aam
pop
out
mov
fistps
loop
sti
test
add
or
loopne
add
daa
test
bound
sbb
lds
test
jnp
jge
sahf
push
pushl
pop
inc
fbstp
dec
pop
loopne
lret
aad
jne
filds
mov
inc
dec
sub
pop
sub
pop
decb
cld
cmpsb
xor
loop
push
lret
out
arpl
add
jmp
and
cli
pop
arpl
shlb
aaa
add
mov
fnstenv
bound
pop
mov
fwait
or
adc
and
or
and
fdivr
push
and
add
test
adc
imul
and
ss
pop
cmp
ja
xlat
test
addb
mov
add
mov
mov
jbe
imul
jmp
pop
test
stc
int3
ja
and
xchg
bound
icebp
inc
sti
sbbl
iret
sbb
test
sahf
outsl
mov
dec
pop
sub
mov
cli
shrb
jl
adc
cmp
xchg
xor
sbb
sbb
dec
dec
push
xchg
shll
mov
push
jne
fstps
bound
dec
mov
stc
adc
lds
pop
push
pop
movsb
mov
mulb
xchg
cmp
lret
jl
mov
add
bound
adc
mov
adc
jb
jnp
fsub
rorb
daa
xchg
jle
sub
outsb
loop
loopne
inc
mov
std
lret
mov
jbe
or
sub
repnz
sub
xor
scas
divb
or
pushf
xor
sub
test
insl
mov
imul
push
mov
inc
fsubl
add
or
lods
mov
cli
int3
scas
jecxz
fadd
add
jno
aam
push
jmp
mov
and
dec
pusha
loope
push
sbb
movsl
cmp
push
popf
mov
sub
popf
iret
xlat
add
ret
das
addl
mov
movsb
or
mov
insb
sti
jne
mov
nop
lret
jne
stos
hlt
lock
mov
push
sbb
das
jmp
fcmovbe
mov
adc
aad
repz
clc
test
ss
push
rorb
mov
push
push
ja
jno
das
in
cmc
dec
mov
xor
and
inc
jmp
push
movsl
mov
pop
push
push
je
outsb
inc
push
aaa
lcall
cmpsl
sarl
leave
jns
stc
stc
js
sbb
pop
inc
loope
sub
fnstsw
cmpsb
js
xor
imul
mov
les
pop
sub
push
jo
pop
xchg
imul
insb
clc
loop
in
xchg
rcrl
mov
mov
jb
jp
dec
lea
lcall
sub
fildl
or
les
mov
sub
mov
cli
in
mov
lods
jg
adc
or
push
into
loopne
js
and
lea
xor
mov
jl
insb
sub
add
shlb
shll
push
insb
mov
movsl
mov
movsb
cmp
fisttpll
adc
sarl
dec
mov
sub
cmc
les
sub
in
mov
jle
popf
arpl
mov
insl
fidivs
shlb
xchg
shl
and
push
andb
mov
xchg
int3
stc
leave
or
les
add
inc
sar
nop
ret
stc
jle
cltd
jnp
ja
cltd
fstps
mov
add
pop
ret
xchg
mov
pop
aad
jbe
jnp
subl
js
cmp
fwait
iret
inc
mov
andb
xchg
pop
push
aad
loope
jecxz
adc
jnp
jmp
fnstenv
or
pop
jmp
xor
or
mov
hlt
and
pop
test
ret
add
out
lods
dec
pushf
mov
sbb
pop
push
bound
push
fcomps
cmp
js
pushf
ss
subl
mov
jb
mov
repnz
xor
inc
push
and
cmpsl
sub
add
cwtl
aaa
loope
pop
mov
inc
lret
pushf
ss
jl
aad
std
mov
fstpt
pop
out
xchg
mov
xchg
and
push
fistpll
lock
adc
stos
or
arpl
imul
loope
fistl
out
lret
test
test
and
dec
arpl
pusha
call
or
ja
call
fidivrl
loopne
adc
arpl
push
mov
movsb
inc
mov
jg
fisubl
test
cwtl
fisubrs
push
dec
xchg
inc
js
ljmp
es
gs
repnz
sub
out
pusha
out
lcall
mov
dec
jne
shrl
lcall
dec
mov
fwait
icebp
lcall
xor
jnp
push
push
scas
repnz
fnstcw
in
xor
rcrb
cmpsb
pushf
push
add
andb
fs
aaa
xchg
mov
or
testb
xchg
sti
leave
or
push
mov
cmc
push
aas
cmc
or
cmc
ss
mov
pusha
insb
ret
push
lods
loopne
dec
shr
adc
loop
call
jl
cmp
inc
cmp
mov
dec
loopne
ss
push
push
push
outsl
test
and
inc
ljmp
ss
das
sti
fnstenv
xchg
jae
adcl
cltd
lret
mov
cmp
fnstenv
cmp
pop
xchg
xor
jle
rcl
pop
or
push
push
fistl
and
cmc
add
jge
addl
das
sbb
std
sbb
popf
in
push
stos
xchg
orb
push
pop
dec
add
loop
mov
jne
inc
sbb
in
push
sahf
in
lahf
test
ss
ret
nop
xor
sbb
xchg
jge
add
mov
hlt
xor
push
adcl
cld
lods
push
in
lahf
cwtl
subl
pop
or
ljmp
fwait
sbb
pop
test
xor
add
pop
jmp
ds
fcomps
mov
xchg
xchg
inc
or
iret
jg
je
and
mov
xor
add
das
jns
dec
out
push
repz
pop
xor
inc
add
jge
test
out
pop
jnp
loope
aam
mov
push
sbb
pop
testl
adc
fdivs
lahf
ljmp
imul
xlat
push
push
and
inc
cmc
sbb
insb
cmc
dec
inc
pop
push
daa
jno
sbb
sarl
call
rcrl
jno
js
add
cmp
mov
lds
xlat
pop
cs
xor
loope
sbb
or
adc
fcomi
shrb
loope
pop
jmp
mov
std
push
jo
lock
pop
sub
mull
cmp
pushf
addr16
popf
rol
cmp
mov
push
js
cmp
mov
pop
into
test
out
insb
loope
orl
xchg
xor
nop
popa
sbb
cwtl
mov
mov
sti
inc
cmpsb
iret
enter
push
popf
imul
adc
mov
adc
outsl
bound
stos
sahf
ficompl
dec
sub
cld
pop
fcmovb
xchg
jge
inc
jns
or
mov
add
inc
jae
lea
movsb
roll
cmp
mov
jb
out
pusha
pop
add
into
rorl
fstps
or
jp
les
sbb
cmp
sbb
mov
fstps
cmpsl
loopne
pushf
xor
cmovno
fidivrs
cmpsl
in
fwait
dec
push
xchg
js
mov
xchg
jb
push
dec
inc
mov
pop
addr16
aad
jae
lods
or
mov
pop
mov
jle
mov
mov
sahf
cmpsl
out
jae
stos
jle
sarb
push
call
imul
xchg
shll
sub
dec
sbb
std
pop
pop
lds
ljmp
mov
rcr
popa
psrlq
dec
faddp
loope
icebp
sahf
daa
cmc
in
fists
add
sub
mov
insl
push
mov
mov
into
push
sbb
dec
stos
pushf
mov
mov
pop
out
sub
in
call
cld
testb
push
inc
scas
or
in
rdtsc
inc
out
add
mov
xchg
add
mov
ret
ds
andb
mov
or
in
inc
imul
sbb
fidivrs
pop
sarl
lahf
mov
scas
rcrb
test
sub
xlat
lahf
lahf
dec
sub
bound
out
ret
fisubs
idiv
pop
cwtl
out
adc
xchg
jnp
fcomi
fs
lcall
in
mov
jae
mov
mov
or
cltd
lahf
mov
rorb
insl
scas
lods
ret
test
sub
cmp
dec
test
mov
lods
sbb
loope
xor
shlb
leave
mov
lock
dec
jbe
cmp
popf
push
test
ss
xchg
js
shll
movb
cmp
xchg
and
sub
adc
scas
sbb
rclb
dec
or
les
data16
subl
lret
jle
lds
add
adc
adc
lret
jle
mov
jg
xor
mov
sti
bound
mov
jne
adc
push
fwait
add
mov
push
stc
mov
aam
pop
xchg
lret
or
in
hlt
jg
xchg
ret
xlat
sahf
push
cmc
lret
xor
jmp
lds
xchg
pushf
cmp
out
cmp
sarl
loopne
push
push
xchg
mov
test
jo
jge
rcll
lea
add
and
sti
fs
mulb
xchg
mov
rol
imul
mov
enter
shrb
imul
lock
mov
dec
loopne
les
sbb
jecxz
loop
mov
in
cmp
lcall
outsl
fnstcw
imull
insl
mov
pop
sub
jno
fs
push
jo
add
mov
sbb
test
pop
push
fcmovb
ss
push
add
fmulp
clc
xor
xchg
xchg
loopne
in
outsl
xchg
fiadds
sub
adc
cli
mov
mov
popa
out
lods
sbb
shr
sub
in
ss
inc
in
dec
fcomps
cmp
mov
mov
jl
fcmovnu
sbb
pushf
pop
sub
and
rclb
outsl
xor
and
mov
fnstcw
cli
push
outsb
cltd
hlt
lock
imul
repnz
dec
cmp
and
sub
mov
js
add
call
sub
inc
pusha
stos
adc
shrl
mov
pop
add
mov
pop
jae
sbb
mov
jge
sbb
mov
lods
lods
mov
jp
xor
pop
sbb
pop
repz
cmp
sbb
mov
mov
in
pop
dec
out
fwait
xchg
jno
mov
lahf
push
xchg
fimuls
xor
xorl
outsl
fwait
mov
mov
jl
aas
scas
mov
into
cli
das
xor
mov
jno
fisubl
je
xchg
leave
js
xor
jle
inc
add
cli
mov
das
jo
aam
cmpsl
imul
sbbb
out
shrl
fwait
jmp
push
push
inc
fists
iret
add
inc
leave
lahf
mov
xchg
cmpsb
fistps
add
pop
loope
fsubs
mov
pop
insb
mov
fldt
les
add
aad
or
call
rcll
adc
subl
sbb
sub
lds
aad
jb
lcall
lods
adc
fdivrl
or
loopne
jl
add
outsl
int
sbb
push
push
in
jnp
sub
pop
rcl
ret
xchg
fsts
xor
jp
sub
pop
sub
imul
js
lret
jl
js
les
aam
addr16
into
fnstsw
mov
popf
dec
fcmovu
push
insb
mov
mov
and
lret
loopne
hlt
or
pop
or
rcll
sbb
sbb
aam
shrb
dec
xor
fnsave
loope
add
test
movsb
mov
inc
out
dec
stos
shl
sub
add
mov
out
shl
int
xor
movsl
mov
inc
iret
push
sahf
or
ror
dec
rclb
add
pop
hlt
lock
rcll
push
mov
das
int3
scas
xchg
test
int
xchg
ljmp
sahf
pop
mov
cmp
jmp
jmp
or
push
lahf
outsb
sub
cmc
dec
sti
out
push
jae
sbb
rclb
mov
std
stos
movsl
push
xchg
inc
adc
test
cmpsl
sub
shll
fsubl
or
gs
mov
inc
push
and
ret
mov
push
imul
lahf
push
aaa
ja
add
jne
rolb
and
pop
or
outsb
xlat
out
or
mov
mov
pop
dec
in
push
push
imul
inc
stos
arpl
lods
sbb
xchg
jno
hlt
mov
cltd
xor
adc
xchg
jae
sub
xchg
dec
aad
repz
push
imul
dec
mov
stos
mov
or
fsubrl
in
cmp
mov
fwait
xor
int3
ret
add
rolb
sbb
cmp
mov
sbbb
or
pushl
nop
jle
in
bound
pop
fstl
cmp
aas
js
mov
cwtl
add
ret
xchg
inc
mov
sub
sub
xchg
out
in
clc
call
xor
mov
or
pop
sbb
cmp
inc
push
insb
mov
bnd
or
xchg
dec
and
mov
inc
ds
cwtl
jecxz
jae
pusha
mov
dec
xor
and
mov
mov
mov
push
dec
xchg
dec
or
pushf
jp
mov
dec
ljmp
fcmovbe
je
mov
mov
movsb
mov
clc
push
dec
jo
or
dec
xor
mov
fadds
ds
xlat
add
ss
test
mov
iret
push
out
sbbw
cli
pop
lods
movsb
and
or
sti
insb
aas
je
dec
cmp
aaa
pop
xor
mov
and
xor
das
adc
mov
lea
pop
cmp
dec
cwtl
mov
popa
mov
faddl
inc
add
repnz
pop
mov
sti
pusha
inc
mov
mov
ja
mov
sbb
movb
leave
xchg
imul
subb
imul
loope
ljmpw
sbb
dec
push
fstpl
cmp
xbegin
cmpb
xor
inc
xchg
imul
lret
dec
adc
mov
push
jp
loop
call
sahf
xorb
push
iret
stos
inc
stc
add
addr16
push
adcb
and
cltd
rcl
mov
push
ficompl
enter
lods
mov
add
cs
sbb
mov
cmp
aad
aaa
inc
adc
rolb
jne
push
push
dec
xor
pop
dec
mov
mov
ja
jl
adc
pop
xchg
xchg
mov
jle
push
inc
andb
add
pop
ds
idiv
aaa
mov
outsb
jmp
pop
mov
mov
cs
add
insl
or
mov
divl
lret
push
out
xchg
outsl
mov
cs
stos
leave
cmp
mov
lret
mov
or
sahf
ret
insb
push
mov
iret
or
inc
and
inc
push
jmp
imul
jle
sbb
test
stc
test
sbb
cmp
repz
xchg
bound
movsb
mov
rcll
pusha
fisttps
jmp
movsl
std
inc
sbb
mov
subl
jmp
mov
mov
ret
pusha
cmp
shll
adc
clc
mov
cs
mov
push
inc
sub
mov
xor
push
popf
or
sbb
ret
rolb
or
ficoms
lock
iret
mov
into
push
jle
enter
add
xchg
jno
imul
das
iret
and
iret
dec
scas
popa
fdivl
dec
sub
insl
jne
ds
arpl
lock
cmp
inc
out
xor
sub
cmp
and
jo
push
movsb
sahf
jecxz
inc
mov
and
rorl
dec
xlat
movsb
mov
scas
jbe
mov
sbb
int3
sar
mul
jae
mov
lock
jge
jne
push
pushf
push
daa
xlat
push
mov
int
inc
push
sbb
pop
sti
ds
int3
rcl
xor
arpl
inc
enter
jl
sbb
push
nop
mov
add
aad
inc
popf
cmp
test
push
cmc
sbb
lret
test
dec
in
mov
jns
sbbl
sarl
cltd
repz
ja
cmp
xchg
mov
test
push
icebp
cmp
jle
nop
aaa
and
outsl
xchg
andl
shlb
dec
pop
xchg
push
aaa
es
sub
jge
clc
and
icebp
testl
fdivs
das
aas
ljmp
lahf
push
xchg
insb
push
fmull
clc
hlt
cmp
and
aam
dec
popf
cmp
xchg
push
jnp
jge
lods
mov
cmp
pop
lret
fdivl
xchg
test
xchg
adc
pop
inc
sub
sub
adc
imul
xor
bnd
mov
cmp
cli
bound
jns
stc
push
repnz
out
repz
hlt
jno
jo
ficomps
addl
add
decb
and
out
lock
arpl
jp
jne
push
mov
jno
sbb
xlat
mov
xchg
or
sbb
out
pop
fcmovu
inc
push
sub
inc
adc
jle
xor
movsb
lret
push
xlat
cmpsl
mov
outsb
adc
pushf
cmpsl
pushf
xchg
inc
clc
push
addr16
xchg
rol
and
dec
push
into
dec
jg
pop
addr16
sub
shll
jb
repz
pop
je
lret
outsb
xor
dec
cmpsb
dec
addr16
sub
dec
cmp
cli
lods
adc
les
lds
mov
out
cmc
ss
and
movsl
jg
cmpsb
enter
jg
in
fwait
inc
cwtl
add
push
lret
enter
fmul
cmp
inc
int3
ret
and
jle
push
jns
lock
out
adc
pusha
or
jg
adc
jg
push
inc
sbb
inc
pop
scas
jle
xchg
cmpsl
adc
jle
sbb
mov
insl
mov
jecxz
jl
cmp
cmp
dec
or
in
push
outsl
inc
mov
dec
hlt
out
add
mov
mov
dec
mov
cmp
add
jnp
mov
xchg
xchg
mov
xchg
lods
shlb
mov
insl
pop
test
inc
sub
ret
inc
inc
or
xchg
outsb
add
data16
cld
in
adcl
aas
iret
mov
shrl
leave
push
xor
pop
dec
and
dec
popa
cmp
dec
int3
sbb
sbb
rcrl
mov
fsubs
mov
inc
xchg
in
jb
push
mov
imul
xor
ret
adc
in
pop
jne
negb
movb
les
mov
inc
pushf
sub
xchg
add
jg
in
adc
sahf
mov
scas
sti
inc
incb
cltd
ret
sbb
js
mov
popa
push
rclb
fidivs
sub
inc
cmp
sbbb
lret
bound
fs
pop
lods
test
dec
sbb
inc
sub
and
jmp
ss
ret
adc
into
push
dec
pop
stos
pop
push
add
rclb
clc
int3
loope
dec
cmp
push
ret
pop
xchg
out
push
imul
push
dec
adc
mull
setns
add
adc
cwtl
sub
sti
mov
js
xchg
cmp
cmp
xchg
scas
add
sub
gs
int3
fs
repnz
lret
jnp
jl
movsb
loopne
mov
xchg
dec
cmc
mov
jae
in
mov
sbb
adc
jmp
dec
push
mov
inc
push
stc
leave
add
jae
sub
repnz
xchg
ljmp
imul
push
inc
cmp
clc
sbb
nop
stc
subl
mov
imul
xchg
pushf
stos
in
test
fidivrl
inc
int3
xchg
adc
adc
push
imul
inc
cmp
or
loop
mov
repz
xor
mov
nop
or
inc
add
adc
jg
mov
sti
jg
mov
lods
sarb
stos
out
loop
jo
ret
divb
push
in
jae
jge
mulb
jmp
dec
sub
mov
push
cmp
popa
icebp
sbb
add
pushf
loop
in
push
ljmp
leave
orb
or
out
jbe
repnz
jg
stos
jbe
mov
pop
dec
pop
dec
adc
lds
mov
adc
inc
shll
jae
jge
arpl
xor
jbe
testb
jmp
inc
repnz
inc
and
mov
mov
cmp
sbb
mov
jb
xchg
cmpsl
clc
cmp
or
aam
xchg
inc
mov
faddl
cmp
xchg
or
push
mov
jae
shlb
or
shll
rol
pop
mov
inc
mov
pop
mov
pop
shl
outsb
enter
lcall
packuswb
daa
sarl
outsb
and
iret
pop
sub
fistpl
cmc
adc
mov
mov
stos
sub
mov
jmp
cs
add
leave
dec
mov
les
cmp
gs
add
xlat
cmc
scas
stc
ds
sub
mov
inc
jno
insb
push
mov
mov
in
mov
pop
or
sbb
scas
je
xor
popl
cmc
cmp
add
arpl
xchg
add
xor
jecxz
pop
and
test
dec
movq
pop
and
mov
scas
ljmp
rclb
jmp
jecxz
push
sbb
cmp
add
decl
mov
mov
mov
xchg
or
fiaddl
ret
lret
push
add
test
sub
sbb
popa
push
in
hlt
mov
cmp
xchg
das
loope
push
jbe
rolb
les
push
test
shlb
adc
sbb
sub
jle
pop
sub
sbb
aam
mov
movb
repnz
xchg
xchg
inc
dec
adc
lret
orb
aam
dec
push
cmp
add
frstor
xchg
jno
lahf
std
lcall
lods
shll
xor
mov
inc
orb
inc
inc
adc
add
xor
lcall
add
push
adc
cli
mov
shrl
repz
scas
jmp
inc
test
clc
bound
pop
pop
testl
sub
and
out
cmp
data16
mov
lea
ficompl
mov
pusha
push
jl
xor
aas
pop
incb
jnp
or
scas
push
sti
hlt
xor
adc
ret
ret
or
loop
incl
and
aam
fs
mov
int
ret
push
popl
repz
dec
cmp
adcb
negl
inc
cmc
sbb
push
aam
cld
or
pop
push
cmpsl
cmp
mov
dec
push
xchg
insb
or
popf
mov
pushl
lock
sub
inc
mov
into
arpl
stos
outsl
in
xchg
mov
jp
sahf
fcmovu
inc
mov
loope
notb
adc
inc
pop
mov
jno
add
push
jns
mov
std
movb
clc
sub
adc
dec
pop
int3
subb
xor
lods
and
je
and
mov
pop
mov
adc
sub
push
xchg
das
cli
cld
repnz
sahf
std
inc
enter
test
dec
xor
fldcw
cltd
rcrb
add
cld
adc
xor
pop
rcrl
xor
jmp
clc
xchg
movsb
push
mov
xchg
int
aad
or
xor
fsubrp
leave
mov
mov
movsl
mov
sti
push
lea
std
add
ja
cwtl
movsb
inc
or
sarb
leave
repz
adc
out
dec
test
jae
lahf
lret
adc
mov
and
movsl
movsb
mov
es
xchg
imul
das
inc
in
leave
or
enter
cmp
stos
xlat
insb
stos
testl
inc
in
cmp
adc
xchg
movsb
ds
xor
jnp
outsl
mov
cwtl
cs
repnz
mov
cmp
mov
xor
sbb
dec
dec
mov
ljmp
idivb
jecxz
dec
jl
mov
mov
jno
add
fwait
jbe
ds
sbb
mov
pop
icebp
inc
lods
mov
pop
out
mov
test
xorl
repz
push
add
mov
in
fimuls
fmull
adc
test
lcall
xor
lahf
icebp
inc
mov
mov
das
pop
xchg
or
out
fidivrl
jg
sbb
dec
adc
fmul
mov
jo
inc
mov
inc
cwtl
fnsetpm(287
xchg
sbb
dec
push
pop
dec
jge
sub
es
xor
cmp
cmc
adc
pop
testb
sbb
sub
push
shlb
mov
dec
fcoml
mov
lods
shrb
loope
mov
adc
in
fnstenv
int
xor
mov
js
and
sti
xor
dec
mov
xor
ret
cmp
cli
add
sarb
xchg
and
mov
movsl
sub
add
or
clc
push
push
push
mov
sarl
pop
mov
pop
sbb
and
add
inc
pop
jl
enter
iret
pop
push
fwait
insb
clc
leave
jnp
ss
or
jb
shll
data16
lock
pop
enter
push
cmp
in
mov
out
sub
cld
leave
push
xor
out
std
int
dec
test
pop
test
sarb
mov
cmp
int3
ret
add
and
out
sub
loope
push
xchg
pusha
and
test
mov
xor
xor
gs
fs
sti
jge
enter
mull
movsb
hlt
jbe
mov
jb
in
mov
xchg
push
lahf
loopne
fadds
fnstsw
xlat
mov
test
push
add
lods
xor
out
push
inc
mov
sub
repz
xor
call
sbb
jle
jmp
mov
xchg
out
inc
fistpl
imul
jbe
mov
push
cmc
sub
imul
and
bound
test
cmp
scas
lea
daa
mov
icebp
jge
cmc
in
stc
and
adc
jecxz
stc
and
mov
aas
or
outsl
inc
in
loopne
test
dec
pop
clc
fisttps
out
cwtl
mov
adc
push
into
dec
and
mov
jmp
mov
mov
das
adc
push
or
ret
popa
aam
push
jne
mov
jge
cld
orl
in
mov
sarb
out
out
mov
mov
mov
mov
fidivs
and
lock
bound
loop
pop
push
repnz
xchg
iret
xchg
jb
xorb
test
jmp
std
push
mov
pop
sbbb
mov
fistpll
pop
cmpb
mov
adc
xlat
or
jb
shrb
mov
sbb
xchg
mov
fidivl
sub
mov
mov
mov
mov
mov
aam
andl
push
xchg
cmp
mul
sub
sbb
repnz
ficompl
subl
frstpm(287
cmp
insb
mov
mov
mov
sbb
mov
inc
in
jecxz
xor
xor
stos
or
lods
sub
in
xchg
call
repnz
xlat
aad
xchg
pop
mov
push
fdivs
mov
mov
mov
stos
jmp
jp
sub
xor
push
cmp
mov
gs
addb
lea
and
gs
push
and
jns
popa
hlt
dec
dec
loope
inc
cmc
pop
std
jb
out
cmp
xor
in
xchg
push
mov
loope
push
xor
sub
xchg
xlat
pop
pcmpeqd
js
mov
bound
int
fistpll
test
jno
mov
inc
sbbl
ds
push
add
cs
xor
out
jle
pop
and
decl
pop
mov
hlt
outsl
push
lcall
xchg
xchg
push
scas
sahf
sbb
fstpt
xor
pop
pop
fsubr
shlb
in
jo
sub
lea
or
xchg
mov
inc
pop
sbb
loopne
xor
xor
or
xchg
sbb
add
push
cmp
xchg
mov
mov
into
out
mov
jmp
adcb
push
leave
into
leave
push
addr16
cmp
inc
mov
cmp
inc
dec
jg
jae
mov
add
lcall
inc
mov
xchg
dec
jge
push
aas
movsb
bsr
mov
lock
aas
push
sub
es
sahf
xchg
fcoml
mov
ss
push
push
adc
addl
lods
roll
ficoms
inc
dec
sbb
jge
push
cltd
mov
xchg
mov
lock
call
push
lock
and
mov
fisubrl
sahf
popf
sub
in
adc
inc
jp
imul
push
fmulp
or
push
sub
sti
insl
fs
mov
shl
stos
mov
mov
and
andb
xor
pop
int3
movsl
loop
mov
aad
aad
cmpsl
daa
lea
mov
inc
cmp
daa
test
into
inc
dec
lret
xchg
mov
cmp
repnz
jmp
aas
pop
loop
lods
arpl
popf
arpl
sub
and
imul
sbb
pop
sbb
mov
inc
out
mov
push
dec
dec
lods
sub
sti
push
sbb
cld
outsb
sbb
adc
cmpsl
pop
adc
rolb
cmc
inc
mov
cwtl
shlb
stos
xor
xorb
cltd
xchg
jecxz
fisttps
and
and
stos
bnd
rorl
test
in
or
test
cmpsl
scas
les
xlat
xlat
cmpsl
inc
push
push
fiaddl
fsubl
mov
adc
roll
xchg
or
pop
inc
ficoms
push
es
fcmovbe
mov
les
cs
sbb
adc
call
addr16
gs
daa
push
insl
mov
enter
cmp
lods
cltd
dec
das
push
push
test
dec
mov
pop
add
mov
inc
idivl
aaa
jp
dec
jo
push
arpl
pop
pop
xlat
adc
movsl
stos
sub
rcll
xchg
push
inc
lods
repnz
sub
xchg
mov
or
cmc
push
sbb
cmp
add
insl
lret
js
mov
xor
ss
lret
sub
mov
mov
push
pop
add
mov
fldcw
cmp
mov
mov
jl
rclb
test
push
test
popa
lea
icebp
inc
call
arpl
nop
mov
pop
xchg
cli
push
xor
mov
add
inc
or
xchg
sub
or
xor
adc
xor
lret
inc
frstor
pop
je
xor
rorl
repz
jae
gs
and
mov
loopne
mov
mov
shr
push
test
cltd
cmp
pop
cmp
int
cmp
inc
inc
outsl
push
test
ficomps
jo
xor
sub
stos
fwait
or
cltd
pop
cmp
shrb
pop
data16
cli
mov
test
stos
ret
int3
mov
jge
cmpsb
pop
inc
mov
ljmp
xchg
pop
pop
jno
adc
nop
pop
sub
dec
xor
jbe
repz
stos
mov
lcall
jmp
lds
push
nop
daa
mov
or
cltd
jg
or
cwtl
jp
aam
sub
lods
leave
outsb
add
stos
mov
int
push
movsb
popa
ret
pop
sbb
push
xchg
add
sub
jg
cmp
jp
dec
cmp
repz
mov
push
mov
unpcklps
mov
pushf
push
jbe
int
dec
mov
sbb
icebp
add
and
daa
xchg
out
cmpsb
fistpll
divb
pop
mov
call
insb
push
dec
jne
stos
mov
mov
or
stc
pop
cld
inc
sub
loope
mov
sbb
cmp
push
jno
xchg
and
adc
fsubs
scas
pusha
push
dec
jmp
push
nop
in
divl
in
sbbb
lahf
push
imul
mov
stc
pop
stc
je
pop
in
mov
xchg
js
pop
int3
push
mov
popa
xor
inc
rorl
push
aad
fdivrl
aad
mov
sub
add
sahf
popa
sbb
push
loop
mov
popf
xor
xchg
pop
push
nop
add
frstor
cmp
xchg
ljmp
cmp
pop
sbb
rdmsr
out
and
aam
dec
loop
and
sar
jl
repz
mov
repz
movsl
jae
dec
imul
mov
in
fistpll
lea
stos
xchg
addr16
pop
js
scas
daa
mov
mov
repz
add
mov
ljmp
arpl
mov
into
jg
xorb
shll
pop
jg
in
outsl
or
js
aaa
mov
testb
movb
fucom
pop
aam
stos
imul
loopne
cmpsl
test
jb
fwait
out
push
scas
add
add
rcrl
jnp
sahf
mov
push
ljmp
xchg
nop
push
dec
sbb
push
sub
cmpsb
cmpsb
jbe
cmc
cmp
loopne
pushf
mov
pop
sub
dec
cmp
fisttps
mov
dec
jne
idivb
sbb
jle
shlb
sti
rcl
push
shr
pop
in
xor
out
mov
xor
mov
fld
out
adc
sbb
push
rclb
fbstp
in
shlb
imul
aam
jge
jle
lcall
cld
lock
pusha
pop
loopne
hlt
xchg
rcrb
mov
es
push
cmpsl
rolb
and
les
mov
mov
in
out
jle
popa
xchg
cmc
shlb
dec
xorb
and
add
mov
lahf
cmp
cmp
scas
repz
in
rol
rolb
mov
and
in
push
sub
fdivl
es
fistps
repnz
aam
push
jp
push
jnp
adc
sarb
nop
les
or
pop
pop
inc
xchg
mov
imul
xchg
jmp
in
inc
ljmp
xchg
repnz
fnsave
and
cmp
or
das
lcall
mov
in
clc
sub
cmp
xchg
icebp
repnz
ds
ret
xor
cli
mov
lahf
into
cltd
mov
and
lods
nop
leave
loopne,pt
sbb
call
mov
addr16
jecxz
or
mov
mov
sti
lods
das
int3
adc
cmp
adc
push
jmp
pop
ret
pushf
xor
popa
enter
push
sub
sbb
push
repnz
add
popa
fs
jbe
jo
jno
push
push
clc
jnp
out
mov
add
scas
mov
sub
lods
ret
popa
xor
cmp
xlat
mov
jp
jo
pop
push
cmpb
sbb
sbb
mov
pop
lea
pop
adc
ficomps
inc
js
out
addr16
sub
idivl
xchg
xchg
push
mov
scas
xor
out
push
mov
jb
push
mov
in
sbb
cli
cmp
xlat
cld
or
clc
jno
test
inc
loop
dec
push
popf
je
cwtl
test
stos
add
call
ljmp
add
test
mov
fxam
xchg
loope
nop
idiv
dec
mov
dec
jns
dec
cmpb
mov
xchg
aas
dec
xchg
jge
jae
mov
mov
in
push
pop
fstp
out
je
mov
insl
mov
jns
out
pushf
enter
fiaddl
sarb
dec
push
jns
arpl
jns
mov
push
fs
imul
lret
test
pop
dec
les
bound
mov
pusha
or
enter
dec
inc
dec
popf
lds
mov
movsl
xchg
in
and
cmp
xchg
lahf
adc
ja
xlat
sbb
mov
xchg
imul
xlat
xchg
out
mov
jmp
cltd
sub
and
inc
sub
adc
ret
fistpl
xor
or
mov
mov
test
xchg
fidivrs
mov
mov
sub
out
inc
sub
insl
jae
sahf
fisubrs
jb
ret
pop
push
insb
mov
mov
in
inc
cmp
jg
push
movsb
add
push
cli
and
mov
pop
pop
xor
loope
and
push
mov
jmp
inc
test
and
xchg
xchg
out
lock
testb
mov
cmpb
jp
adc
push
enter
or
clc
cmp
lock
dec
aas
stc
dec
sub
int
mov
sbb
mov
jnp
or
adc
mov
in
ljmp
idiv
and
bswap
mov
mov
daa
mov
and
xchg
inc
dec
adc
out
and
inc
fstl
cltd
inc
imul
or
adc
jp
jge
out
aad
xor
jge
in
cmp
aad
xchg
push
test
addr16
into
and
xchg
mov
sbb
pop
hlt
mov
icebp
das
sub
xor
gs
divl
push
sahf
mov
movswl
jl
in
out
adc
xchg
jae
mov
push
or
inc
frstor
test
int3
fisubrs
xchg
icebp
jmp
adc
fldenv
sub
fdiv
jb
mov
push
sbb
das
sub
sti
fisubrs
cmp
dec
mov
ss
push
jp
ds
jecxz
es
mov
ret
mov
in
sbb
dec
sub
push
cmp
imul
es
sbb
cmp
fwait
xchg
pop
lea
mov
sahf
sbb
jecxz
and
or
dec
mov
pop
xchg
jmp
testl
adc
dec
adc
sbb
std
mov
mov
sbb
sub
fsubl
data16
pop
andl
xor
pop
sub
jbe
lahf
shrb
pop
push
outsb
sbb
dec
sahf
mov
sub
jbe
jg
rorb
in
push
shll
arpl
cltd
clc
clc
loop
stc
loopne
push
fs
add
mov
and
div
orb
lods
adc
int3
xchg
roll
push
shrb
xor
or
push
xor
mov
sub
mov
pushf
sbb
test
flds
fs
gs
jb
std
mov
cltd
push
fisttpl
sbb
mov
pop
push
in
cmp
sbb
out
stos
xlat
das
lret
adc
mov
xor
fnstcw
sahf
push
inc
lock
dec
lds
in
xor
adc
lods
repz
faddl
out
addr16
mov
lret
repz
call
mov
adc
sub
cli
sub
jmp
test
inc
leave
into
lahf
out
add
add
aad
sti
sub
stos
or
add
int
jl
out
lret
test
das
inc
jae
lock
dec
addl
ja
lret
mov
addr16
and
cmp
pop
mov
lcall
insb
fistpll
shlb
loopne
add
mov
popf
call
xchg
mov
out
cltd
xchg
aaa
mov
pusha
xlat
mov
add
push
mov
in
jne
fstps
lahf
orb
pop
aaa
push
test
or
in
push
mov
mov
fnstsw
xorl
dec
icebp
cmpsb
scas
jecxz
jmp
or
inc
imul
and
lock
jbe
add
stos
pushf
bound
sbb
xor
mov
sub
xor
inc
sbb
xchg
mov
xchg
pushf
mov
xor
push
pusha
imul
outsb
sub
push
jbe
pop
mov
out
dec
push
mov
xor
add
mov
aas
or
sub
inc
fisubl
pop
dec
aaa
push
jmp
into
icebp
lahf
ja
sub
cmc
and
mov
sbbb
cmovb
cs
jno
std
mov
jmp
inc
fucomi
in
gs
fwait
addr16
cmp
lea
push
mov
jmp
shll
sbb
mov
lock
cmpsl
movsl
fs
jne
lock
and
mov
sub
imul
jb
and
cmp
push
shrb
int
mov
push
iret
jnp
cltd
jmp
ret
xchg
gs
das
int
nop
adc
jo
dec
rclb
add
fimuls
sub
pop
scas
fs
add
and
mov
ja
mov
nop
gs
lahf
add
lcall
or
cmp
jo
clc
fldt
xor
sbb
lods
jle
mov
jp
adc
and
cmpsl
mov
add
imul
sbbl
repnz
arpl
mov
lahf
push
cmp
or
xor
or
dec
and
aam
popf
sub
pusha
insb
xchg
pushf
call
je
lock
xchg
int
enter
jecxz
mov
inc
pop
mov
int
in
and
test
popa
js
xchg
jbe
inc
add
repnz
push
mov
push
lcall
mov
push
in
mov
test
fdivp
out
xchg
push
ret
add
das
add
add
cmp
sete
adc
repnz
push
xor
in
adc
mov
je
lcall
stos
jo
std
cli
int3
pop
and
sub
mov
gs
sbb
test
sub
mov
rcrl
test
test
stos
jns
mov
mov
add
xor
stos
out
shll
cmp
lret
jb
and
in
cmc
mov
inc
rolb
mov
adc
jl
movb
push
sub
cmp
push
movsb
mov
leave
aas
mov
data16
lcall
mov
rcrb
ret
pop
int3
xchg
outsl
adc
aas
pusha
loope
add
mov
shll
or
mov
loop
mov
movsb
in
ljmp
in
push
dec
fdiv
adc
das
aam
xlat
sti
scas
and
or
push
leave
movsb
mov
jmp
imul
and
mov
jnp
aam
ret
repnz
xchg
dec
decb
aas
icebp
mov
inc
aam
sti
fldenv
add
pop
cld
ljmp
push
jge
mov
sbb
mov
lods
mov
arpl
add
aad
fmul
and
mov
jnp
outsb
pop
fists
mov
mov
dec
xor
pop
mov
lods
jmp
ss
push
xlat
jl
and
in
into
scas
push
je
das
cmpsb
out
dec
cmp
add
ja
stos
dec
std
cmp
lods
or
aad
mov
xor
int3
mov
mov
adcb
outsl
nop
xlat
fcoms
adcl
call
xor
lds
xchg
add
inc
stc
aad
adc
jnp
inc
ja
test
dec
xor
aad
pop
lea
jae
addb
or
and
cmpsl
xlat
call
adc
mov
imul
jmp
rcrb
rcrb
jae
mov
sbb
mov
out
mov
dec
gs
or
sub
sub
or
fwait
pop
mov
mov
sub
mov
fildll
roll
inc
cltd
rorl
sarl
je
lds
movsl
jg
ret
lods
gs
inc
out
jns
hlt
pop
add
lcall
mov
lcall
ljmp
push
decl
fcmove
pusha
imul
push
xchg
fwait
aaa
adc
andl
popa
push
fstpt
xlat
mov
sbb
jno
jb
jmp
ljmp
mov
mov
imul
gs
adcl
rcll
xchg
loope
xchg
inc
inc
xor
pop
insl
ja
adc
lods
cld
sbb
adc
enter
add
adc
and
lcall
dec
push
push
inc
cltd
mov
cmp
fcompl
int3
inc
out
sbb
push
jle
dec
das
or
mov
fcom
add
cmpb
jns
push
mov
cli
test
add
push
pop
xor
adc
mov
int
stos
bound
jge
lods
or
int3
pushw
push
push
cmpsl
mulb
mov
nop
push
and
or
imul
popf
movsb
sbb
xor
mov
fisttpll
loopne
and
cmp
dec
mov
lods
fcomps
test
mov
xor
xchg
insb
push
sub
roll
nop
add
xlat
add
adc
mov
xchg
push
xchg
xchg
fld
incb
movsb
iret
fisubrs
mov
stos
dec
imul
push
sbbb
adc
popf
mov
or
icebp
add
out
mov
sti
aaa
inc
stos
lods
inc
inc
fisttpl
push
pop
mov
inc
shrb
cmp
and
imull
ds
pop
bound
cs
push
jns
jge
das
mov
ds
push
std
dec
xchg
and
shll
sbb
jp
mov
jp
leave
inc
adc
andb
mov
mov
add
lds
jne
xchg
js
pop
jmp
fldt
in
or
cmc
test
adc
pop
cmp
movsl
icebp
call
shlb
insb
popa
ljmp
rcrb
in
leave
daa
mov
insb
cmp
rcl
popf
and
movsl
outsl
movsl
repz
fs
lahf
prefetch
add
and
bound
loope
adc
and
xor
pop
jecxz
jbe
dec
mov
sbb
cmp
sbb
jmp
cmp
adc
sub
sub
cli
push
movsl
pop
ficoms
inc
sbb
mov
enter
es
subb
sub
fnstcw
out
pusha
sbb
push
inc
xchg
clc
sbb
lret
subl
inc
leave
jnp
jle
popl
jmp
shl
xchg
jae
mov
dec
mov
movsl
pop
pop
add
xchg
insb
xchg
fnstsw
andb
gs
xchg
mov
out
mov
inc
mov
aaa
push
pop
popl
rclb
out
div
lahf
sbb
daa
sub
xlat
sbb
out
popa
test
movsb
jl
cld
pop
cmpsl
jl
ficompl
mov
dec
out
jns
jns
jge
inc
push
mov
scas
lds
lret
lret
ds
cmp
ds
and
cld
out
sarb
fisubl
pop
int
cltd
cmp
ja
insb
pushl
out
or
cmc
mov
idivl
lock
aam
shl
ja
popf
repz
xorb
icebp
or
test
xchg
pop
dec
inc
cmpl
in
js
inc
add
inc
arpl
jae
lahf
ret
pop
jnp
and
pop
fisttps
call
test
inc
cvtps2pd
add
ret
xchg
rcrb
dec
sbb
and
inc
jl
inc
push
aas
test
sub
and
shrl
jl
pop
shlb
je
add
sti
ja
lods
mov
inc
adc
fiadds
or
and
mov
scas
movsl
push
shrb
insl
mov
pushf
pop
push
setnp
and
mov
push
add
dec
aam
and
mov
cmp
andl
dec
dec
insb
jnp
insl
addr16
cmp
inc
int
sbb
lods
test
pop
mov
inc
jl
fcoms
fdivrp
jno
pop
in
cli
pop
lret
inc
repnz
outsb
or
arpl
push
daa
insl
ret
cmp
out
repnz
sub
in
mov
xchg
rcrb
dec
add
pop
pushf
xchg
push
imull
or
inc
imul
or
xchg
mov
stos
inc
sarl
popa
cmpsb
fstps
lret
dec
loop
nop
jp
int3
mov
repz
jb
int
aad
ret
cli
lds
inc
fistpl
cmc
sbb
sti
lods
dec
nop
scas
xchg
mov
mov
jno
clc
xorb
sbb
repnz
jp
jbe
icebp
outsb
das
mov
jg
pop
jl
mul
mov
push
xlat
stos
outsb
arpl
js
cmp
push
pusha
pop
pop
dec
loopne
das
mov
adc
lret
cmp
cltd
les
cmp
sbb
fs
dec
xor
sahf
enter
lea
jnp
stos
push
jecxz
jb
inc
mov
jge
xchg
cmp
xorl
in
stos
insb
fwait
add
ja
cmpb
push
mov
mov
or
jg
fisttpl
or
rcr
add
mov
sub
icebp
call
inc
pop
mov
cmpsl
or
jbe
adc
gs
pop
mov
aaa
ja
mov
mov
mov
inc
popa
and
adc
loop
add
lret
bound
add
adc
pop
mov
pop
sub
movsl
or
or
mov
pop
ror
push
sti
insb
lret
adc
leave
int3
xchg
cmc
lcall
push
loope
pop
icebp
or
imul
mov
xlat
push
ficoml
sub
mov
test
sbb
std
ds
fwait
jmp
jl
and
jmp
xchg
mov
pop
xlat
mov
out
push
aad
adc
jns
pop
rclb
mov
mov
imul
fsub
mov
push
jb
lods
jmp
jp
sbb
pop
or
sub
inc
inc
into
std
rol
imulb
aas
fisttpll
mov
out
ljmp
lcall
cmp
inc
and
insb
jecxz
xchg
bound
mov
repnz
push
inc
in
ss
out
test
repz
enter
add
or
ja
add
data16
jns
lea
scas
out
mov
std
push
jo
inc
xchg
and
lcall
xor
inc
pop
xchg
sbb
shlb
dec
sbb
xor
mov
fmul
movsl
stos
xchg
pop
mov
outsl
sbb
push
dec
daa
mov
or
lcall
xorl
xlat
jo
fcmove
int3
jl
es
cs
in
imul
je
mov
dec
sarb
loope
add
or
jno
shrl
push
pop
aad
sub
call
int3
inc
mov
and
scas
adc
imul
insb
dec
mov
or
mov
stc
sarl
nop
or
inc
js
fistpll
jbe
scas
mov
cltd
adc
nop
popf
jmp
fs
xlat
or
xor
cmp
pop
enter
cwtl
iret
pusha
xor
cmpsl
shll
sbbl
lds
xlat
push
xchg
adc
sbb
xchg
not
push
or
fcomip
dec
push
stos
out
push
xchg
push
cli
inc
cmp
mov
add
pop
test
jno
xor
pop
out
dec
sub
add
ss
dec
movsl
imul
sub
inc
mov
jge
jp
push
pop
dec
cmc
adc
loopne
mov
cmp
push
mov
xchg
hlt
ds
fidivrl
ds
shl
mov
xchg
jmp
js
sbb
sbb
cmp
adc
dec
or
mov
rclb
shrb
mov
jne
fs
sahf
shl
cwtl
ss
addr16
mov
push
xlat
lret
fstpt
stos
lret
jmp
adc
mov
lods
sub
ret
jecxz
stos
rclb
or
push
adc
leave
jg
sbb
jge
lret
nop
sbb
xchg
cmpsl
arpl
loope
sbb
shlb
hlt
lret
inc
add
dec
gs
fwait
mov
jne
imul
aaa
push
fdivrs
popa
sbb
test
mov
adc
push
cmp
in
repz
imul
pop
rorb
push
or
ret
or
js
stc
js
adc
push
faddl
jb
stos
push
push
pop
daa
push
pop
pop
imul
pop
adc
loop
mov
mov
xchg
sbb
dec
sti
jle
aam
lods
pop
mov
mov
call
sbb
fcmovnbe
and
mov
push
or
sbb
popa
jmp
pop
test
scas
xlat
testb
add
mov
mov
or
pop
mov
sub
out
xor
dec
mov
sbb
stc
adcb
push
lea
sub
sub
jns
stos
cmpsl
cs
jmp
mov
aas
mov
adc
imul
pop
push
popa
scas
sub
sub
add
scas
inc
xor
inc
adc
xchg
loopne
or
movsb
fldcw
aas
mov
daa
or
sub
test
lods
pop
rcl
jge
ljmpw
imul
fmuls
or
hlt
daa
mov
in
push
pop
aad
cli
sbb
enter
sahf
pop
mov
sbb
cmp
sbb
and
mov
add
xor
jnp
push
insl
jb
mov
dec
pop
repz
ja
mov
scas
je
cltd
hlt
push
movsl
push
lahf
into
xchg
mov
inc
cmp
mov
push
jp
adc
pop
add
jns
int
push
enter
adc
je
rcl
jno
xor
mov
cmpsb
mov
daa
fs
push
test
add
mov
sbb
jo
cmpsb
roll
sbb
inc
pop
in
mov
mov
jne
add
incl
fildl
cmp
fcompl
jl
std
jno
ficoml
jmp
cmp
std
xchg
sbb
add
iret
pusha
lret
cwtl
mov
sub
lea
mov
mov
mov
ret
pop
popa
jp
sub
imul
add
mov
les
lods
lods
insl
in
jne
filds
ss
stos
xchg
dec
fxch
jnp
rclb
hlt
xor
mov
lods
sti
push
cltd
push
fscale
sub
xlat
lret
pop
mov
int3
push
sbb
jle
jg
pop
add
rcll
sbb
lcall
pushf
inc
push
dec
in
pop
je
mov
add
xlat
fcmovb
ret
mov
cmpsb
inc
lods
cmp
aam
mull
or
fidivs
bound
adc
xor
stos
ss
xor
aaa
xchg
out
sub
fs
insb
or
orb
sub
and
push
stos
add
inc
aaa
insb
xor
notb
aad
xchg
xlat
nop
xchg
out
sahf
adc
adc
shrb
rorb
insl
push
scas
sbb
push
inc
jmp
inc
gs
mul
stc
call
test
daa
adc
mov
sub
add
mov
pop
decl
pushf
imul
stos
lds
sbb
adc
arpl
mov
add
xchg
test
adc
xchg
sbb
or
movsb
xchg
ret
jmp
into
pop
cmp
shlb
into
inc
cmp
data16
adc
daa
jl
es
das
into
ret
mov
jo
dec
xor
leave
imul
xor
pop
shr
lret
jge
aaa
jae
lock
test
cmp
testb
push
inc
push
inc
outsb
fsubr
push
pop
lcall
and
sub
lods
ja
cmp
cmp
andb
jl
mov
or
or
cs
bound
sbb
xor
fldl
xor
icebp
or
movsl
stos
add
mov
loop
ljmp
test
cmp
popa
lahf
pushf
push
push
dec
leave
cmp
xchg
xor
bound
std
mov
fcoml
add
ret
int
jl
xchg
lret
jno
mov
aas
inc
lods
daa
lock
std
mov
cmc
cltd
or
adc
jp
outsl
rcr
orb
inc
addr16
xor
jl
sbb
sub
mov
ret
pop
adc
jp
insl
icebp
cmp
loope
dec
inc
and
push
jl
stos
sbb
push
cmpsl
aad
mov
xor
inc
hlt
push
inc
jg
cmp
xchg
sbb
inc
xchg
sbb
mov
or
and
std
xor
cmc
cltd
cmpsb
add
mov
mov
incb
test
sbb
jp
movsb
push
ret
xor
inc
xchg
pop
out
add
jo
xchg
jge
jecxz
dec
out
loope
sub
jbe
sub
rorb
decb
fildll
pop
push
push
push
jbe
lcall
fsts
or
ret
lcall
jne
mov
sub
fwait
ret
cmp
sarb
std
ret
cmc
mov
clc
dec
push
xlat
jo
cwtl
inc
add
adc
mov
push
popf
sbb
sbb
cld
fwait
ljmp
dec
lods
iret
lret
pop
sbb
mov
jne
inc
rcrl
xor
fbld
cmc
je
sub
or
pop
xchg
int3
in
ja
pop
jecxz
inc
sub
cmc
dec
das
rorb
hlt
cltd
or
sub
mov
lods
sbb
ror
or
shlb
loop
xor
push
sub
push
imul
xlat
xchg
xchg
add
imul
mov
add
pop
adc
int
fcom
clc
sbb
lock
inc
xchg
mov
push
adc
or
andl
sbb
dec
mov
les
pop
adc
lahf
clc
pop
aam
cmp
dec
mov
lods
test
pop
xchg
stos
push
dec
push
cli
push
and
fnstsw
jle
arpl
mov
inc
mov
xor
pop
push
movsl
out
jns,pt
movsl
inc
ljmp
mov
jns
or
mov
pushf
leave
jno
cmp
mov
cmp
mov
dec
xchg
dec
test
insb
out
pop
push
into
test
dec
lock
xchg
enter
mov
mov
pop
sbb
out
arpl
mov
inc
inc
clc
sub
js
imul
ret
pushf
sub
sbb
push
addr16
jo
nop
in
mov
daa
icebp
mul
mov
push
push
xchg
xchg
int3
xor
inc
mov
into
out
fists
jnp
popa
mov
sarl
leave
movsb
fsubl
inc
inc
xchg
es
daa
push
sbb
adc
lods
mov
dec
inc
or
lods
cs
fsubrl
loop
sub
leave
adcl
out
jbe
and
shlb
flds
pop
outsb
shll
test
cld
pop
aas
jo
push
adc
test
ja
cmpsb
sub
jae
pop
mov
stos
push
cmp
out
movsb
pop
mov
dec
addr16
adc
mov
lcall
add
dec
cmp
sub
adc
cwtl
xlat
mov
bound
divb
dec
mov
js
dec
pusha
lcall
das
xor
subb
xchg
fmulp
mov
scas
jg
mov
push
movsb
fstpt
pop
lea
dec
fistpl
mov
inc
or
push
mov
add
iret
fnstenv
movsb
lcall
mov
fstpt
mov
push
add
negb
aad
and
sti
mov
pop
imul
and
and
jae
adc
cmpsl
out
ss
jb
sub
mov
mov
jl
lahf
xor
pop
enter
movsb
stos
ret
addr16
push
imul
ror
cs
ret
or
jmp
xchg
dec
sub
lret
mov
je
or
push
stos
push
sub
decl
pop
push
xor
jl
fsubs
add
mul
ret
lds
icebp
fwait
dec
movsb
xchg
pop
cmp
ret
idivl
leave
scas
addr16
jo
repnz
push
or
popf
fadds
dec
shlb
jl
jbe
jg
aad
push
cmpsl
es
in
adc
dec
sub
les
arpl
in
call
xor
xlat
or
repnz
sbbl
jecxz
or
jae
nop
mov
fcmovnb
mov
cmp
iret
xor
push
shrl
xor
pop
sahf
add
pop
ss
fs
mov
mull
mov
ljmp
cmp
mov
push
jge
sbb
out
xchg
inc
and
js
repnz
sub
pop
aas
mov
xchg
mov
push
mov
mov
mov
jb
in
cmp
jg
mov
jbe
xchg
pop
mov
scas
sbb
out
inc
mov
out
shlb
mov
enter
iret
sbb
jp
mov
arpl
pop
insb
xor
pop
mov
imul
dec
addl
pop
lods
xor
jle
mov
sub
cltd
adc
mov
je
mov
push
push
xor
notb
cmp
mov
sahf
sbb
mov
js
outsb
aaa
jge
nop
pop
dec
repnz
ret
jg
adc
xor
sub
push
cmp
and
add
shlb
mov
iret
lods
pop
adc
mov
lds
jnp
stos
or
xor
lods
mov
cmc
imul
push
adc
ret
ja
ret
aad
push
cmp
inc
sub
mov
cmp
out
sub
mov
int
xchg
lea
negl
dec
inc
xor
and
mov
add
jns
div
fs
imul
xchg
jno
cltd
inc
push
mov
mov
mov
in
insb
jnp
stos
and
cmc
cltd
ja
jp
mov
xchg
jge
adc
frstor
outsb
leave
sub
adc
leavew
pushf
sub
xorb
clc
pop
rcr
xor
sub
pop
dec
jne
in
popf
aaa
mov
mov
mov
push
hlt
push
aaa
cli
push
jnp
loope
jp
cmpsb
or
insb
jnp
fmull
pop
mov
jge
dec
fldt
cmp
sbb
fidivrl
cld
insb
dec
sbb
inc
push
mov
jb
adc
das
je
stos
test
mov
pop
sbb
adc
add
in
lds
adc
mov
lcall
and
mov
mov
dec
pushf
xchg
aad
sbb
push
mov
fsub
hlt
xchg
sub
loope
cmp
sub
je
or
add
test
mov
mov
pop
cmc
int
add
push
out
aam
out
and
jmp
inc
pop
popf
pop
and
in
mov
hlt
lret
rcrw
cmpsb
pop
inc
leave
xchg
add
cmpsl
cmpsl
inc
fidivrl
pop
cwtl
fwait
clc
sub
push
scas
insl
xor
out
fmull
sahf
push
outsl
push
pop
sub
adc
cwtl
xlat
pop
repz
xor
push
push
test
dec
clc
pop
mov
or
mov
shlb
pop
ss
loopne
jl
sbb
add
or
les
stos
imul
ret
ret
pop
cmp
inc
fcompl
cmp
rcrl
and
lret
inc
dec
lds
cmpsl
jbe
ficomps
jl
mov
add
cmp
adc
out
mov
jle
in
call
push
hlt
ss
and
mov
fdivr
jl
not
lods
out
xor
mov
mov
bndldx
xor
xchg
push
shl
cs
std
testl
or
push
jae
sbb
fdivr
arpl
ljmp
add
or
cwtl
int3
cmpsl
mov
jbe
mov
inc
es
pop
inc
sub
xchg
testb
adc
fadd
hlt
mov
add
dec
jo
sahf
cli
push
addb
fistpl
es
mov
jle
ret
push
xchg
push
lock
and
pushf
jmp
subl
jp
insl
mov
cmp
pop
jecxz
out
movsb
rorb
xchg
push
aad
pop
addl
sub
xchg
mov
fcmovne
mov
mov
mov
fadd
xor
insb
int
push
aas
int
js
lret
xchg
mov
sbb
shl
dec
jl
xchg
lret
mov
stc
loop
pop
mov
pop
cmp
xchg
mov
ds
mov
mov
jge
jns
cmpsb
call
adc
aaa
cmp
xor
sbb
jmp
pop
jmp
out
out
fnstenv
adc
cwtl
out
fwait
out
mov
dec
jecxz
incb
out
add
stos
xchg
imul
adc
lahf
out
and
addr16
stos
fs
xchg
dec
push
js
iret
repz
or
or
cmpb
aam
into
sub
push
jno
pop
push
lahf
jg
pop
fadd
push
mov
pop
push
fwait
jl
push
in
add
cmp
scas
dec
push
pop
jle
push
pop
in
or
fildll
jne
ljmp
insl
repnz
lret
cltd
mov
push
mov
or
xor
js
and
jecxz
adc
jge
popf
mov
mov
pop
ljmp
jge
sub
xchg
fwait
adc
ljmp
sub
mov
aad
jo
adc
xor
add
pop
push
mov
sarb
rol
mov
cmp
mov
dec
jmp
lods
int
mov
jp
mov
arpl
scas
push
jmp
mov
add
pop
movsl
pushf
mov
imulb
sub
jno
push
rolb
cs
jns
xor
push
jno
dec
fiadds
add
mov
jnp
ds
scas
roll
popa
test
rclb
lahf
addr16
pop
std
jnp
mov
out
cmp
sbb
sbb
sbb
scas
in
cmp
adc
and
inc
lock
stc
fisttpl
out
aaa
adc
xor
jmp
adc
rolb
shlb
sub
pop
jnp
loope
repnz
leave
jo
rcrb
or
xor
mov
sub
je
sbb
or
test
lahf
ljmp
push
mov
cmp
dec
lea
xor
mov
add
jg
cmpsb
cmpsb
ja
daa
pop
in
movsl
jge
xor
mul
mov
jnp
mov
sub
fnstsw
ret
dec
mov
mov
out
loop
insl
outsl
xchg
fbstp
iret
loopne
xchg
ret
call
push
dec
inc
or
add
test
xor
repnz
ja
add
dec
add
mov
xor
cli
or
pop
and
xor
push
pop
sbb
fstps
or
imul
in
sub
fwait
jns
daa
loopne
add
jno
or
popa
jg
pop
outsb
stc
xchg
sub
adcb
ds
mulb
jo,pn
push
ljmp
pop
pushf
push
jae
push
aas
sarl
mov
dec
dec
insl
mov
dec
mov
mov
or
cld
int
sbb
mov
cmp
pop
aad
addr16
xor
or
dec
cmp
lods
sbb
les
dec
xchg
xchg
or
inc
inc
jbe
sahf
mov
xchg
ds
sbb
dec
mov
sub
sub
popa
js
xlat
stc
sbb
jmp
sbb
dec
mov
mov
lods
in
mov
jl
out
jo
mov
lods
in
iret
ficoms
dec
xor
jg
push
mov
push
pop
xlat
xchg
mov
xor
cli
ficomps
popf
fstps
movsl
mov
cltd
enter
hlt
repz
shll
les
mov
push
mov
int
mov
sti
imul
xchg
ret
pop
xor
jmp
cmp
push
mov
sub
sub
outsb
pop
orl
xor
mov
mov
mov
push
inc
inc
ds
out
aaa
xchg
jp
aaa
clc
test
jmp
jmp
das
push
jae
add
xchg
out
cs
inc
daa
ja
xchg
pop
mov
xchg
xchg
and
adc
xor
scas
add
lahf
mov
aam
cmp
lret
or
insl
sbb
push
fldt
mov
adc
adc
call
lcall
inc
lds
or
jecxz
imulb
push
add
lahf
cmpsb
ret
imul
ja
pop
sbb
rcll
dec
adc
mov
jg
pop
cmp
lcall
cmp
add
jo
xlat
popf
mov
das
stc
add
mov
inc
mov
and
add
cmp
lods
cmp
andl
je
lods
mov
test
dec
push
pop
mov
repnz
out
loop
fs
adc
cmp
pusha
int
or
cltd
mov
dec
call
sbb
adc
pop
push
pop
pusha
cmp
cs
fldl
sbb
xchg
push
xchg
mov
cmp
out
imul
xchg
shll
sub
inc
push
sbb
pop
stos
aam
mov
call
mov
fisubrl
mov
addr16
add
insb
xchg
dec
aad
cwtl
lock
jmp
pushf
out
cs
mov
inc
out
mov
test
or
das
clc
gs
mov
jbe
cmp
push
xor
mov
xchg
xorb
aas
sub
rcrb
mov
pop
enter
xor
lea
ljmp
cltd
mov
jne
out
push
add
cli
cmp
dec
mov
imul
mov
das
mov
lahf
dec
pop
dec
loop
ljmp
push
sbb
add
shlb
inc
add
movsb
leave
and
popf
ja
into
shlb
pop
pop
xor
loope
pop
loop
in
ds
and
mov
push
lock
out
cwtl
inc
inc
shll
sbb
outsl
clc
pmuludq
repz
movsb
jge
scas
push
out
cwtl
cmp
dec
add
call
pop
insb
jae
cmp
int3
add
stos
mov
leave
test
lock
lret
inc
lcall
mov
stos
jbe
cmp
xlat
adc
aad
jl
xor
mov
loop
mov
push
adc
in
mov
insb
add
incl
sbb
mov
in
aad
or
andb
and
mov
sbb
fbld
push
xor
sub
loope
in
mov
push
out
movsl
ja
xchg
in
xor
xorb
adc
out
iret
xor
xchg
jmp
xchg
or
repnz
ss
push
jae
in
lret
andb
icebp
inc
lods
icebp
sub
mov
and
je
add
pop
loop
rcrl
inc
js
and
jns
mov
popa
negl
mov
push
mov
lea
pop
das
inc
sub
bound
and
mov
cli
mov
imulb
movq
sti
ja
mov
ds
movsl
push
faddl
jns
iret
popa
or
push
dec
outsb
pusha
subl
pop
push
lea
xchg
mov
rclb
mov
lret
mov
sub
pop
jnp
sarb
jae
arpl
in
enter
xchg
and
inc
test
push
dec
and
or
jbe
adc
xor
inc
mov
int
push
addr16
into
bound
aad
rclb
subb
adc
pushf
lret
push
scas
or
pushf
xchg
or
jmp
imul
rcl
cli
or
inc
adc
mov
fstpt
lcall
popa
cmp
dec
push
xchg
ficoms
testb
mov
iret
jne
fisttpl
add
lahf
mov
jge
movsl
and
daa
cld
and
sbb
add
cmc
roll
mov
sbb
inc
push
lock
icebp
mov
mov
lret
lcall
loopne
outsl
mov
push
cmp
insb
mov
fwait
and
jno
and
sub
ja
rorl
les
sub
enter
xlat
outsl
mov
sahf
sub
add
pop
in
and
jo
addr16
fidivrl
lds
cmp
insb
add
jmp
call
js
test
dec
mov
and
mov
mov
orb
loope
imul
push
jmp
push
fnstsw
lods
and
into
test
pop
pop
movsb
ss
cmpsl
orps
adc
cmpb
insb
jmp
pushf
popa
add
clc
mov
cmp
into
lret
cmp
aad
sbb
jo
adc
jle
in
push
mov
cmp
jnp,pn
enter
int3
mov
std
push
xor
lcall
repnz
fists
enter
adc
test
lds
fldl
mov
adc
adc
and
nop
pop
sub
pop
cld
inc
mov
push
mov
cld
icebp
clc
lods
pop
push
data16
xor
fs
lds
fs
xor
push
lret
xchg
shll
push
pop
pop
shr
xor
xlat
outsb
sti
mov
mov
and
movsl
mov
xor
inc
or
pop
cltd
popa
dec
sbb
jge
cltd
scas
lock
and
add
enter
in
repnz
imul
sbb
jl
xchg
xchg
add
pop
adc
data16
mov
jecxz
jl
test
loop
lcall
sbb
jno
mov
xchg
xor
movsb
xor
ja
mov
mov
cmpsl
das
cmp
test
jp
mov
jp
adc
push
jmp
pop
mov
jp
add
sahf
mov
int
pop
or
cmp
addl
faddl
or
in
push
pop
and
fwait
pushf
cmp
lods
sub
lods
and
inc
sbb
rorb
mov
inc
xchg
test
lock
push
pop
inc
sbb
es
stos
adc
cmp
xor
fs
enter
jmp
fldenv
shl
mov
ds
js
lcall
push
mov
xor
daa
push
stc
push
lds
or
bound
dec
insl
mov
mov
clc
clc
repnz
imul
xor
pop
add
push
fs
stos
xchg
jp
incb
jbe
and
dec
mov
inc
and
rorl
fistps
adc
aad
aaa
mulb
cmc
sub
in
outsb
imul
test
xchg
insb
or
inc
cs
inc
aaa
lods
fsts
sti
ret
mov
mov
add
mov
inc
adc
sbb
dec
call
pop
xor
jp
imul
add
adc
pop
adc
cmp
mov
adc
push
fbld
rclb
dec
int
dec
or
lret
xchg
mov
sbb
jmp
and
arpl
and
bound
pop
mov
fcomps
enter
aad
stc
dec
add
jg
cmp
jg
mov
pop
mov
out
nop
xchg
imul
inc
aam
and
lods
stos
and
inc
and
or
mov
js
xchg
inc
inc
mov
jae
add
shrb
fs
jmp
cltd
and
in
les
xor
test
in
negl
xor
pusha
lahf
mov
pop
call
jo
divb
or
xor
ljmp
js
mov
pop
arpl
mov
pusha
or
popf
mov
idivb
xor
sbb
int
stos
and
inc
aam
pusha
jns
pop
jmp
les
xor
xchg
pop
lret
pop
stos
leave
stos
jae
cmp
or
cltd
dec
cmp
pop
adc
sbb
scas
adc
pop
les
into
repz
cmp
sarb
inc
cmp
mov
mov
or
test
insb
inc
jmp
out
sahf
aad
in
aad
xor
or
in
inc
sub
inc
sbb
mov
call
lahf
jge
mov
lret
lahf
and
jnp
call
movsb
lret
xor
cwtl
mov
jecxz
sbb
xchg
test
inc
stos
fisubrs
imul
xchg
xor
test
mov
pop
mov
addr16
sub
jle
dec
mov
cltd
pusha
cmpsl
sbb
mov
in
xlat
mov
sahf
push
mov
outsl
add
sub
jg
cmc
mov
or
les
enter
add
fisubrs
mov
cmpsb
add
mov
sbb
adc
pop
adc
jno
ret
push
push
mov
pop
out
cmp
mov
js
js
daa
fwait
dec
push
iret
dec
jo
out
mov
in
lahf
cltd
mov
sbb
ret
jle
mov
dec
xor
mov
mov
out
test
cmp
lock
mov
popa
xchg
jp
mov
or
stc
fldt
mov
leave
jns
pop
ret
outsb
and
xorb
sbb
push
lahf
pop
add
sub
jle
xchg
mov
mov
push
mov
stc
outsl
ds
sti
in
test
lahf
or
stos
push
movsb
dec
sbb
adc
and
pop
arpl
dec
int3
lret
cld
popa
pop
push
xchg
xor
mull
std
inc
outsb
sub
inc
je
fmull
dec
leave
xchg
bound
sbb
nop
imul
test
add
mov
cmp
sub
sbb
push
xor
out
xor
mov
and
inc
shlb
pop
ljmp
idiv
loopne
es
imul
jno
adc
jmp
orl
push
adc
xor
pop
outsl
es
adc
lea
jle
test
add
xor
fadds
mov
pop
insb
mov
dec
les
add
and
pop
xor
xor
mov
jb
repz
adcb
cmp
rorb
enter
sub
pop
rcrl
add
lea
cld
dec
stc
pushf
mov
mov
cmp
cs
ja
xor
movsl
mov
imul
call
into
push
xchg
xor
leave
mov
xchg
rorl
inc
xor
xor
pusha
mov
rolb
mov
jne
mov
ljmp
icebp
mov
xor
cwtl
add
add
in
mov
dec
js
xlat
out
jmp
cltd
pop
pop
movb
pop
nop
sbb
ljmp
or
insb
lret
data16
aad
and
outsb
nop
pusha
xchg
in
int
xor
mov
cmp
testb
shrb
lret
cmpsl
add
stos
movswl
pop
js
sbbl
stc
mov
fcomps
jno
lock
rcl
pop
add
sahf
mov
cmpb
insb
test
push
jbe
lea
inc
shrb
iret
js
testb
jecxz
insl
xor
dec
sbb
adc
cli
aad
push
dec
dec
clc
mov
xor
int
cmp
inc
insb
inc
jno
sbb
or
inc
push
xor
insb
movsl
mov
add
dec
or
sti
aam
ljmp
cmp
addl
push
fstpt
push
xchg
push
adc
aas
xchg
adc
stc
mov
sub
aaa
push
push
xor
lret
mov
cmp
inc
sbb
xchg
into
fdivrs
fdivrs
xchg
mov
and
cs
js
adcb
jnp
cltd
mov
dec
negl
xchg
test
int
data16
repz
lret
mov
jp
cltd
lea
paddd
sbb
or
pop
push
loopne
hlt
sub
movsb
addr16
test
add
ss
mov
pop
cmp
mov
into
and
in
pop
dec
decb
insl
ret
cmp
test
mov
add
and
pusha
mov
jp
xchg
xchg
jge
out
dec
jbe
jbe
and
mov
add
mov
lea
and
mov
sahf
repnz
les
sbb
dec
cmc
cmpsb
add
movsb
out
mov
or
loopne
jb
mov
add
imul
int3
fistpll
mov
cwtl
jmp
jmp
pop
lds
repnz
fwait
loope
inc
dec
mov
in
sub
or
stos
adc
test
mov
xor
xchg
popa
fcompl
or
arpl
dec
jge
lret
cmp
imul
js
sbb
dec
sub
adc
mov
ret
jmp
fimull
cld
js
and
mov
imul
ret
call
jnp
insl
rorb
cs
clc
xchg
and
sbb
in
mov
add
inc
incl
and
roll
rcl
repz
loop
loop
sbb
xchg
add
dec
xor
jp
push
push
sahf
inc
push
or
pop
adc
inc
in
xor
out
fists
add
push
shl
mov
out
mov
cmp
jo
cs
or
jnp,pn
pop
and
push
hlt
jle
cmp
cmp
cmpsl
add
out
jl
add
repz
repnz
mov
popa
test
test
dec
scas
lret
ret
lret
push
psrld
pop
movsl
das
ror
outsl
outsl
data16
pushf
cs
sbb
pop
leave
nop
push
add
xor
sarb
cmp
fdivrs
int
xchg
xlat
inc
adc
mov
mov
sbb
mov
std
dec
neg
clc
dec
jae
addr16
int3
adc
xchg
sub
cmp
cmc
iret
sub
sbb
jnp
gs
add
or
shrb
cltd
push
roll
movsb
ljmp
cwtl
je
sub
shr
testl
outsb
dec
movsl
adc
cld
sbb
mov
jae
dec
jb
sbb
push
jl
dec
jg
cmp
shlb
sbb
sub
xor
pop
in
orb
loop
dec
push
ja
dec
and
cmp
jne
sbb
call
call
xchg
mov
mov
aad
mov
lcall
les
lcall
sub
test
add
and
loopne
and
gs
mov
cmp
xchg
rorl
mov
mov
loope
xor
pop
nop
add
nop
mov
cmp
pinsrw
pop
int
mov
jnp
cmpsb
pop
test
clc
xor
mov
lock
fldenv
and
dec
scas
pop
xor
mov
dec
cmp
add
ret
xchg
or
fsubl
xor
lea
or
add
repz
dec
and
add
push
orb
sbb
mov
push
int
mov
mov
rclb
inc
cmpsb
inc
dec
add
mov
into
dec
xchg
lret
cmp
mov
sbb
mov
push
xor
mov
jl
mov
jle
xor
and
das
int
inc
out
pop
sbb
pop
jno
xchg
add
xchg
imul
pop
push
jb
xchg
arpl
mov
mov
mov
cli
lods
cmp
enter
dec
sub
mov
rolb
push
xchg
pop
mov
cld
pop
repnz
xchg
jo
sbb
xchg
mov
push
xor
fcmovne
jp
mov
add
jg
imul
lea
les
mov
xor
shlb
orb
adc
lds
adc
xchg
aam
jo
out
xor
xchg
cmc
popa
arpl
xor
shrl
add
iret
ds
test
dec
push
mov
xchg
xlat
in
lods
pop
add
mov
loop,pt
mov
gs
pop
xor
push
inc
cmpsl
icebp
and
outsl
sbb
rorb
add
mov
pop
das
xchg
out
nop
cmp
push
mov
mov
mov
pop
movsl
dec
cmp
icebp
ja
xor
xchg
lret
adc
jp
xor
das
bound
mov
dec
jns
adc
cmp
addr16
pop
push
mov
imul
aam
jle
dec
dec
mov
pop
js
insb
enter
xor
dec
pusha
sbb
int3
in
adc
lds
sbb
dec
push
mov
mov
insb
or
xchg
xchg
imul
out
je
cli
clc
sub
pop
jmp
std
popf
jae
pop
xchg
in
sbb
test
adc
aaa
mov
daa
inc
bound
icebp
jne
aam
rcll
ja
jmp
aam
ficoml
cwtl
je
mov
push
jae
aaa
in
xor
aaa
cmp
xor
mov
xchg
sub
popf
iret
jmp
testl
dec
cmp
loop
pop
fsubrl
sbb
ds
shr
scas
cmp
dec
mov
rol
xlat
call
aaa
lods
push
jge
dec
fstpt
sbb
add
stos
jp
sbb
cmp
and
push
jb
pop
push
js
mov
fwait
jecxz
xor
and
xchg
inc
jle
mov
adc
inc
push
stc
mov
mov
aaa
mov
int3
sub
xor
add
mov
adc
mov
ror
popf
push
aas
cmpl
lret
insb
jl
cwtl
push
shll
dec
xchg
jmp
icebp
jmp
flds
ja
movsb
xor
test
mov
inc
lods
xorps
pcmpeqw
loope
out
sub
sub
or
test
pop
push
cwtl
mov
cmp
cmp
aaa
inc
cmp
inc
mov
cmc
aas
lds
leave
fdivr
xchg
xor
in
mov
adc
cmp
jae
pop
jbe
mov
and
arpl
push
outsb
jmp
pop
cmc
pop
pop
hlt
add
jno
data16
repz
repz
movsb
cwtl
pop
push
mov
or
or
cmc
dec
out
mov
fs
and
adc
aad
arpl
sbb
testl
je
push
out
jle
cli
std
lret
in
jl
push
shr
dec
addr16
mov
negb
sbb
frstor
in
test
mov
ss
cmp
xchg
negb
fcmovb
jp
adc
adc
sbb
imul
data16
push
scas
fisttps
data16
pop
lock
push
pop
ret
ds
fisubl
in
int
popa
and
mov
adc
filds
jmp
arpl
sbb
adc
sbb
mov
rorl
js
fldl
cmpsb
adc
mov
ficompl
dec
icebp
aad
push
add
xchg
out
push
repnz
loop
cmp
jo
xor
imul
xor
cmp
dec
std
testb
cmp
cmp
adc
mov
sbb
lods
insl
insl
sub
inc
add
push
mull
sub
pop
inc
sub
pop
out
ljmp
inc
lahf
setnp
jno
inc
mov
mov
inc
push
shlb
dec
rclb
cmp
xchg
add
jno
sbb
adc
out
mov
in
jl
mov
cmpsb
test
jno
and
jmp
jle
call
jl
and
lods
adc
dec
push
add
sar
or
mov
dec
push
scas
cmc
dec
test
add
add
lcall
in
or
gs
add
mov
xchg
call
mov
or
cmp
imul
das
sbb
jb
xchg
fwait
xor
stos
xchg
pop
int3
cmc
stos
cli
add
sbb
lds
cmpl
xor
xchg
mov
adc
sahf
and
fdivl
fdivl
hlt
sti
push
into
movsb
push
clc
sbb
cmc
push
mov
mov
adc
addr16
test
movsb
loop
jmp
enter
leave
push
mov
push
insl
cmp
xor
out
sbb
imul
rolb
and
pushl
mov
leave
into
aas
sub
sbb
and
sbb
or
mov
jl
mov
pop
or
lods
xchg
icebp
or
mov
lds
repnz
jnp
add
adc
sbb
sub
push
std
movsl
add
fistl
adc
sarb
ret
dec
dec
jmp
sahf
inc
mov
imull
mov
add
mov
push
mov
cmpsl
sbb
aas
cmp
mov
nop
adc
cwtl
dec
xchg
loope
dec
inc
mov
repnz
mov
test
jns
rcr
mov
and
jo
pop
jb
lds
cmpsb
insl
cs
out
xor
sub
xlat
loope
dec
xorl
daa
or
mov
loop
gs
gs
in
rorl
xor
mov
std
mov
loop
mov
or
jo
repz
imul
idiv
and
jne
imul
ljmp
fsubrs
mov
sub
xchg
mov
popf
fwait
ss
loopne
jecxz
aas
jbe
arpl
push
movsb
sub
or
add
inc
inc
std
stos
ret
fcomps
lahf
iret
xchg
nop
and
test
mov
xchg
cmc
icebp
adc
mov
in
sub
ret
xchg
ret
scas
in
sbb
lea
je
mov
mov
mov
aad
arpl
cmp
mov
xchg
fsubl
pop
sub
xor
mov
inc
loopne
test
out
and
fcom
pop
fsubr
cld
in
test
pop
xchg
or
xchg
and
jb
inc
std
inc
dec
inc
hlt
shl
lds
push
sub
sbb
add
int
adc
arpl
inc
repz
aam
fisubs
adc
dec
scas
pushf
loopne
cmp
inc
ficomps
loop
decb
out
pop
mov
cmp
jl
or
ja
inc
fidivl
mov
fsubl
push
fldt
jb
int3
and
ja
sub
xor
cli
shlb
pop
cmp
decb
hlt
das
or
ss
dec
std
lock
mov
rorb
enter
cmp
xchg
dec
cmc
add
sub
popa
mov
inc
push
mov
jae
xchg
orl
jp
mov
jmp
dec
imul
adc
push
dec
enter
xchg
insb
mov
jnp
jmp
cld
inc
shll
lods
push
cmpsb
popa
pop
or
adc
js
adc
imul
cmp
hlt
test
mov
sub
pop
negl
push
notb
sahf
lods
lods
stc
add
push
lea
xchg
fdivrl
mov
scas
ret
cmc
mov
cmp
xor
test
xor
jg
jmp
pop
enter
mov
in
enter
hlt
xor
xor
add
mov
mov
iret
xor
mov
out
movsl
add
add
test
or
ljmp
xlat
aaa
rcrb
mov
xor
ljmp
add
sub
test
and
push
sti
dec
push
rcr
sub
mov
movsb
je
dec
push
ficomps
adc
or
pop
jo
or
inc
in
push
jno
xchg
sbb
cmp
cli
test
rorb
sbb
mov
subb
inc
insl
das
test
dec
push
and
cs
xor
ret
fmull
xor
flds
mov
jecxz
inc
jecxz
scas
add
inc
orb
shll
push
mov
cmp
push
dec
add
push
sbbb
outsl
xchg
xor
das
mov
push
std
xor
add
xchg
je
mov
jno
sub
mov
pushf
leave
lret
fcmovbe
negb
lea
pop
xchg
repnz
pop
or
mov
into
movsl
cld
dec
and
fisubrl
add
mov
push
push
xchg
fcoml
aas
xor
adc
jo
mov
xlat
daa
inc
outsl
mov
mov
xor
lods
xchg
sbb
xchg
dec
xor
out
ss
call
scas
or
pop
das
push
into
jbe
out
scas
and
jb
xchg
scas
pop
mov
jbe
push
cmp
xlat
inc
jb
or
dec
sbb
mov
test
inc
fs
cmp
sbb
aam
push
add
ret
dec
jge
popa
fwait
adc
int
ds
adc
xlat
jns
sar
pop
sbb
lret
lcall
std
mov
sbb
sub
movsb
stos
mov
cmp
ret
jmp
xor
scas
push
adc
enter
dec
and
ret
push
sarl
push
add
mov
or
call
sahf
sar
sub
jnp
js
stc
cwtl
or
xchg
shll
pop
cli
inc
not
jae
and
pop
xchg
jecxz
sub
and
pop
adc
pushf
decl
mov
cmp
fistps
push
jb
test
mov
rcll
mov
pop
mov
lds
or
repnz
out
xor
ljmp
cli
lret
pop
push
inc
jge
data16
subb
inc
daa
mov
test
fsts
sbb
movsl
cs
jmp
adc
cmp
das
subl
clc
adc
dec
jp
test
fisubs
and
xor
data16
push
push
mov
rorl
rorb
jge
cli
rorl
mov
jecxz
cld
mov
test
mov
pop
add
sub
addb
outsl
push
lahf
fnstcw
adc
cltd
aas
xor
adc
inc
or
jns
inc
xchg
into
dec
fstpl
or
dec
mov
roll
test
add
jge,pn
and
popa
dec
pop
clc
inc
popf
dec
insb
jl
or
cmp
ret
outsl
mov
add
cmpsb
mov
xor
out
lea
cmp
es
mov
pop
imul
xor
enter
adc
lods
icebp
cld
mov
idivb
loop
inc
lods
mov
mov
cmp
lods
rolb
or
sub
leave
mov
loopne
je
in
jne
jne
lret
inc
popf
jl
or
arpl
mov
js
sub
inc
sub
jmp
ret
sbb
add
xchg
inc
xor
sbb
mov
lret
jl
aad
mov
fstpl
mov
or
jb
cmp
jl
xchg
xchg
ja
inc
cmp
mov
out
outsb
jle
aad
hlt
sub
stc
cmp
xchg
add
sbb
inc
xchg
lds
sti
nop
loope
fwait
xchg
jge
aam
dec
or
cmp
insb
test
xchg
cmp
test
cmpsl
in
dec
inc
sub
fdivrs
pop
orl
pop
bound
or
js
lock
xchg
out
movb
xchg
cltd
sbb
mov
dec
aas
addr16
pop
loop
or
adc
cmpsb
or
int3
and
lock
insb
and
jno
out
dec
mov
sub
pop
xor
test
cltd
movsb
stos
aaa
les
jno
jmp
in
mov
sub
mov
cmpsl
mov
xor
ja
mov
mov
sbb
cli
mov
cli
mov
leave
out
xchg
fadd
bnd
mov
inc
mov
add
andnps
pop
adc
inc
mov
pop
adc
add
stos
ret
mov
mov
mov
dec
repnz
cs
test
stc
pop
inc
sub
and
jl
cmp
ss
lret
dec
repz
inc
cmp
sbb
das
movsl
mov
iret
imulb
inc
rorb
sub
aad
pop
dec
sub
stc
fsubl
lahf
in
push
or
pop
pop
push
ss
push
sti
add
pop
inc
mov
sar
test
jmp
stos
mov
push
xor
add
xchg
adc
lcall
in
dec
mov
pop
outsl
popa
les
rorb
fidivrl
loope
mov
pusha
add
push
dec
mov
add
push
adc
mov
mov
push
ret
or
inc
dec
inc
or
push
aad
mov
xchg
or
jmp
jmp
cmp
lods
repz
lods
jmp
popa
xchg
fnstenv
add
cmc
outsl
std
xor
cwtl
test
std
in
mov
icebp
pop
lea
out
jns
jns
nop
mov
ds
int
mov
shrl
dec
xchg
xchg
stos
pop
dec
xor
or
inc
call
adc
or
repnz
icebp
mov
popl
cltd
je
lds
negb
arpl
in
sub
rorb
ds
cltd
push
pop
xchg
movb
insl
and
adc
mov
aad
push
push
fldl
cli
ret
mov
mov
mov
repz
cmp
sub
sbb
push
stos
xchg
mov
fiadds
inc
sub
addr16
sbb
inc
adc
add
lahf
cld
or
push
mov
jecxz
lret
mov
hlt
cs
jbe
sub
dec
lahf
cmp
pop
in
sbb
dec
mov
imul
xor
in
ds
add
movsb
or
mov
push
rclb
pop
sub
jmp
fcompl
fwait
sahf
rcrb
out
loope
mov
rcrb
inc
lahf
insl
repz
in
mov
jb
mov
cmp
xchg
xchg
nop
fcoms
jnp
dec
dec
shrl
add
jnp
stos
sbb
vorpd
sub
outsb
mov
incb
notb
inc
in
or
rcrl
out
test
lods
jmp
mov
or
mov
ret
xor
bound
test
insb
cld
jno
add
mov
das
int3
scas
imul
test
insb
sbb
mov
xchg
js
mov
aam
loope
push
xor
mov
cmp
fcomps
mov
leave
xchg
jl
jmp
add
je
inc
lcall
loope
push
dec
in
cltd
jecxz
xor
pop
je
pop
dec
push
ss
or
gs
lods
stos
dec
roll
jb
mov
es
insb
adc
mov
xor
stos
cmp
cltd
dec
pop
shll
mov
xor
mov
mov
movsb
in
daa
call
pop
cmp
cmp
cmp
fists
sub
jmp
cmp
jecxz
arpl
pop
iret
sbb
in
lds
sub
lret
insl
dec
pop
sti
out
add
xor
arpl
lahf
push
scas
push
mov
cmp
sub
mov
fwait
cmp
jnp
mov
leave
fadd
pop
lods
es
push
xchg
fistps
loopne
xor
pusha
mov
jp
lahf
aas
pop
sub
adc
testb
bound
mov
jb,pt
pop
ja
cld
push
and
nop
push
pop
shll
xchg
dec
fdivrs
mov
shrb
inc
push
adc
push
sbb
mull
das
sub
push
fists
sbb
cmc
add
lret
les
rorl
jb
outsl
cli
dec
and
inc
popf
mov
pushf
mov
iret
fadd
test
push
test
mov
idivb
mov
pop
jne
fdiv
jp
cmp
jae
ja
mov
pop
movsb
iret
pop
dec
fcomp
dec
repnz
call
aam
xchg
sub
push
test
xchg
or
or
or
rclb
ret
xchg
or
dec
cmp
inc
loopne
jl
std
push
les
sub
lea
inc
mov
mov
pop
lahf
xor
or
pop
mov
scas
or
mov
cwtl
mov
ja
push
and
fs
pop
out
fdivr
outsb
push
sti
test
mov
push
lret
insb
mov
xor
sarl
adc
and
push
test
xchg
mov
dec
shlb
sub
jp
loopne
jb
loopne
jecxz
fwait
rcpps
je
out
pop
hlt
xorl
jb
push
push
jp
and
xor
cmp
inc
sti
mulb
or
bound
movsl
call
adc
setg
pop
mov
add
divb
xchg
pop
leave
out
pop
aas
aaa
xchg
xor
nop
stos
mov
jne
sbb
mov
mov
xor
dec
ljmp
jl
cld
xor
push
out
and
jle
hlt
test
and
mov
fdivrl
outsl
push
fwait
shrl
mov
ret
xchg
mov
popf
lods
in
test
nop
add
add
out
mov
sbb
and
out
pushf
test
in
and
loope
es
mov
jo
push
xlat
cwtl
jb
or
fwait
cld
push
cmp
jg
xor
and
xor
push
push
out
and
ss
lock
xor
repnz
mov
mov
jl
repnz
div
nop
add
lock
xchg
int3
xchg
cmc
filds
pop
rcll
push
outsb
out
stos
sbb
int
cltd
dec
add
xor
jl
int3
adc
and
es
cwtl
sbb
or
mov
pop
or
bswap
std
scas
push
cmpb
xchg
adc
sub
rorb
repz
sbb
movsl
popa
mov
lods
data16
lcall
test
loope
lret
test
and
xchg
push
lret
and
pop
sub
xchg
shll
mov
cmpsb
jecxz
mov
movsl
test
daa
pusha
mov
mov
mov
stos
sub
outsb
or
push
push
inc
shrl
mov
popa
xor
lcall
inc
mov
xchg
mov
ds
adc
out
movb
ds
lods
jns
or
mov
ja
outsb
das
add
call
push
mov
sub
mov
shll
or
jo
out
xchg
fisttpll
sbb
test
int
test
add
xlat
test
push
mov
mov
adcb
jmp
push
in
push
adc
les
iret
je
inc
add
mov
sbb
ja
test
movsb
or
adc
cli
subl
lcall
mov
xor
push
sbb
cwtl
icebp
cmp
jge
loop
xchg
add
adcb
jo
ja
fcomps
mov
stc
xlat
movsb
aam
pushw
inc
fldenv
rcll
sbb
rol
mov
sub
mov
mov
mov
jge
cmp
jp
test
mov
sub
aad
loop
pop
outsb
and
inc
or
dec
testb
cmp
sbb
pop
shr
ret
sti
loope
jle
jge
xchg
dec
dec
mov
std
push
pop
inc
jno
outsl
lcall
mov
adc
push
inc
movsl
fsubrl
jmp
les
push
adc
push
lds
mov
fwait
daa
pop
adc
sbb
mov
popf
lcall
push
dec
push
sub
xchg
outsl
cmp
dec
decl
push
push
mov
gs
lret
pop
mov
push
aad
add
xchg
jmp
jo
ror
jl
jo
imul
loope
push
mov
inc
add
ljmp
inc
cmpsl
ljmp
mov
arpl
pop
pusha
jo
sbb
cmp
pop
fimull
cld
cltd
jne
pop
in
xchg
add
pop
mov
mov
add
mov
ret
or
push
repz
popa
cmpsl
sub
repnz
movsl
or
inc
lret
loope
adc
pop
clc
xchg
loop
mov
jns
pop
push
cld
in
mov
fwait
imul
out
and
pop
hlt
xor
pop
xor
jp
mov
popa
std
cmp
push
xor
push
dec
adc
faddl
roll
pop
inc
ss
shl
cmp
jnp
dec
pop
jle
ret
pop
mov
stos
cltd
lret
pop
xchg
cmc
loope
mov
push
enter
pusha
mov
loopne
mov
lock
xlat
mov
cld
std
jnp
or
fwait
mov
adc
xchg
xchg
cmc
mov
push
xor
inc
push
ss
je
push
pop
mov
push
sbb
mov
imull
sbb
dec
out
mov
pop
pusha
in
push
xchg
xor
shll
lea
shl
adc
and
push
jecxz
add
and
cmpsb
mov
outsl
mov
sub
pop
lret
imul
xor
fld
jl
fsubl
sbb
jo
mov
lahf
jmp
into
xor
and
inc
bound
and
cmp
imul
or
stos
rcrb
pop
push
test
fdivr
cs
xor
xchg
xchg
mov
popf
bound
xchg
clc
test
mov
fdivl
adc
dec
xchg
lods
in
arpl
xchg
add
cmpl
fsubl
shll
xor
loopne
out
out
gs
dec
out
xlat
add
xchg
lods
insl
xorb
sub
pop
mov
int
int3
cmp
rolb
or
aaa
lds
hlt
aaa
int3
out
xlat
cmc
and
das
dec
or
fildl
sahf
loop
mov
outsl
inc
dec
daa
adcl
xchg
imul
sub
das
lds
xchg
outsb
and
xor
push
in
outsb
imul
dec
or
xchg
out
adc
test
push
or
sbb
call
xor
call
or
mov
or
shrb
or
mov
mov
sbb
scas
ja
rcl
dec
xor
push
sbb
mov
inc
jno
fs
mov
mov
jle
test
loop
sbb
xchg
sub
scas
sbb
mov
inc
pop
mov
loope
ficoms
inc
or
and
mov
or
push
cmp
mov
or
bound
add
pop
fwait
movzbl
mov
imul
lea
sub
xlat
out
shrl
fcompl
imul
push
mov
enter
jp
cmp
out
pmulhw
mov
sbbb
jl
test
in
aaa
inc
int
mov
iret
push
fisubs
add
mov
fidivs
mov
ss
sub
fcmovnb
pop
insb
pop
lret
fs
ret
inc
ret
and
or
jns
lods
or
cmc
test
sub
pop
sub
cmp
cli
mov
idivb
cmpsl
add
pop
lcall
fisubl
clc
jecxz
xor
stc
mov
loop
fstl
ja
jno
daa
mov
cmp
enter
xchg
imul
adc
outsb
or
lods
push
mov
es
pop
fiaddl
xchg
cmpsb
fmulp
xor
jmp
in
xlat
push
sbb
lods
sarl
mov
cwtl
inc
add
inc
cwtl
dec
mov
stos
imul
ret
repz
fs
mov
mov
inc
xchg
and
notb
xchg
out
test
or
out
pushw
inc
jnp
fsubr
add
mov
cwtl
lret
push
jno
subl
xchg
fsts
pop
out
sahf
add
jmp
aaa
ret
imul
andb
or
fwait
lds
mov
or
sbb
daa
andb
loope
push
cmpsl
cmp
pop
les
push
sti
mov
mov
jb
or
nop
mul
ficomps
xchg
fs
sti
push
inc
add
xchg
test
mov
adc
jmpw
cmc
movsb
pop
data16
xlat
test
sti
mov
xor
repnz
xchg
push
cmp
test
add
neg
fidivl
inc
shl
or
es
cs
jle
ret
cmp
aaa
mov
jo
push
add
xchg
add
jb
or
cmpb
or
pop
push
loope
jle
cwtl
push
fbld
pushf
pop
pusha
nop
test
test
call
add
call
cmp
ljmp
fmul
xchg
dec
xchg
popa
adc
jnp
cld
gs
movsl
loop
movsl
movsl
shrw
push
fimull
xchg
in
sbb
mov
xchg
test
or
sti
pushf
shrb
xchg
sbb
jbe
mov
jg
mov
xorl
xchg
add
cmp
ljmp
sbb
mov
inc
adc
cmp
sub
jecxz
frstor
outsb
pushf
mov
fs
mov
or
push
and
sbb
lods
pop
jno
rolb
or
mov
mov
ljmp
ret
adc
mov
cmpl
or
movsl
mov
jl
dec
jbe
pop
cmc
and
enter
out
pop
cmp
push
shll
mov
movsb
dec
fnsave
mulb
sub
cli
push
in
cmpxchg
dec
cmpb
nop
imul
add
enter
inc
aad
out
cld
sbb
mov
out
xchg
psllq
bound
lcall
jno
in
in
sub
jl
lds
cmp
jl
push
lcall
fcoms
and
mov
out
inc
lea
mov
mov
push
xor
and
mov
int3
push
xor
in
mov
xor
pop
cmp
push
pusha
push
movsb
fiadds
pop
lods
testl
xchg
add
push
lods
xorl
test
and
and
mov
xor
ja
and
fsubl
push
inc
mov
add
mov
adcl
adc
mov
inc
mov
push
jmp
xor
cld
xchg
repnz
adc
jbe
cmp
in
test
push
or
dec
mov
das
jmp
add
aas
jmp
push
cmp
out
mov
jmp
xchg
je
or
push
outsb
cmpsb
popa
repz
popa
xchg
jg
es
jge
xchg
and
das
js
cmp
leave
jge
addr16
test
repnz
movsb
mov
sub
mov
adc
pop
lahf
bound
lods
mov
push
mov
shlb
popa
dec
mov
mov
outsl
xchg
fdivrs
lods
mov
lock
fwait
cmp
inc
cmp
into
jo
sarb
xlat
test
arpl
in
jl
ret
dec
inc
add
or
sbb
movsl
sbb
orl
xchg
in
sub
jg
push
in
and
pop
mov
test
xchg
shll
push
scas
shlb
cld
addl
mov
out
imul
dec
popf
xor
sahf
ljmp
add
fidivl
test
leave
shr
pop
int3
lret
push
in
and
push
icebp
mov
dec
data16
mov
dec
dec
daa
stos
loop
add
pop
hlt
out
sti
inc
mov
xchg
sub
repz
adc
mov
mov
sbb
clc
out
in
xchg
adc
ljmp
ds
in
aas
sti
jmp
pop
imul
fistl
pop
std
inc
add
push
mov
pop
test
adc
sub
lods
push
mov
ljmp
int3
push
ret
xchg
and
bnd
setnp
pop
push
loope
sti
lret
dec
xchg
or
ss
push
push
pop
lock
testb
insb
push
inc
divb
mov
push
mov
xchg
popf
push
mov
movsb
mov
mov
fdivrs
mov
mov
adc
inc
lds
out
add
jns
adc
cli
clc
je
mulb
iret
ss
int
jo
cmc
sbb
lods
ja
dec
ret
aad
cmp
jno
loopne
pop
sbb
xchg
cmpsl
push
inc
or
inc
scas
mov
push
and
roll
xor
fs
pushf
je
pop
popf
rcrl
js
lahf
adc
jo
insl
inc
sub
push
mov
data16
dec
in
jle
pop
stos
pop
inc
mov
mov
jmp
decl
xor
sbb
loop
in
xchg
int3
ds
je
in
idivb
push
push
add
inc
lahf
test
jo
dec
shlb
cltd
xchg
xchg
sahf
cmp
enter
inc
mov
daa
xchg
int
xchg
sbb
push
not
inc
cmpl
sbb
mov
bound
test
add
sbb
repz
sahf
pop
dec
push
aaa
ljmp
clc
sbb
lods
push
jne
mov
mov
or
pop
push
push
xor
push
jmp
pop
jb
add
rorl
notb
stc
pop
aad
jle
test
ja
xchg
out
mov
inc
into
cltd
fs
push
shr
pop
stc
shr
add
ficomps
push
out
roll
jmp
lahf
dec
shrl
mov
lret
jge
push
and
loopne
fucomip
stos
adc
pop
repz
gs
pop
mov
push
imul
inc
jne
xlat
mov
push
cmpsl
filds
mov
dec
cmc
insl
adc
fstl
pop
rcl
mov
dec
and
and
aaa
sub
lret
mov
mov
int
dec
push
adc
mov
and
mov
clc
popa
jmp
dec
pop
mov
movsb
xchg
dec
ret
add
roll
test
jb
pop
inc
hlt
push
ja
pcmpeqd
fs
add
mov
push
loope
jae
enter
out
inc
arpl
idivl
add
dec
leave
mov
adc
rclb
mov
jnp
ss
nop
lock
out
leave
es
fisubrl
ljmp
dec
nop
imulb
xlat
cmp
in
ja
test
fadd
test
jle
xchg
jl
cmpsl
xor
ret
subl
or
jno
incb
push
imul
and
ret
rorb
lahf
fists
iret
xor
mov
push
cmp
mov
mov
idivl
jno
push
jno
jbe
xchg
or
clc
sar
outsb
nop
sub
lds
sub
sti
rorl
mov
mov
ljmp
negb
fdivrs
xor
push
inc
mov
lahf
xor
mov
sbb
inc
push
fs
call
dec
xor
stos
iret
mov
adc
dec
in
xchg
insb
lret
stos
jp
stos
xor
cmp
xchg
jl
mov
das
adc
xorl
sarb
inc
sbb
cli
sub
scas
jge
addr16
sub
daa
push
add
inc
lock
jp
adc
outsb
inc
into
add
or
jge
sub
sub
addr16
call
mov
scas
mov
push
aad
into
hlt
lods
fmuls
xlat
pop
je
es
cmpsb
xor
fsubrs
cmp
mov
cld
pop
jl
mov
adc
adc
pusha
in
lret
lock
sub
and
mov
je
nop
fwait
mul
mov
sub
xlat
and
inc
int3
sub
subl
out
jge
test
jnp
pop
push
loope
lds
mov
jno
ds
jp
jbe
or
clc
int
xor
cmp
push
je
push
mov
mov
and
xlat
cmp
outsl
push
inc
sti
mov
mov
stos
and
pop
popa
pop
scas
ljmp
and
inc
add
mov
cmp
push
jb
inc
ljmp
or
fiaddl
sub
adc
add
call
mov
mov
loopne
xchg
repz
push
cld
jp
iret
loope
mov
mov
iret
into
in
add
mov
popa
jo
shrb
out
cmp
ljmp
jmp
mov
inc
js
inc
pusha
test
in
xor
loopne
hlt
adc
xchg
imulb
cmpsb
cmc
inc
mov
pop
jns
xchg
roll
in
or
orb
fildll
sbb
lcall
xor
pushf
sub
sub
call
loope
gs
sbb
stos
add
mov
addr16
stc
mov
xchg
fidivrl
test
dec
faddl
stc
cs
addl
fistl
mov
xor
fcomps
and
cmp
add
cmp
dec
inc
jo
adc
stc
inc
cli
inc
int
pop
call
inc
dec
jg
loop
pusha
movsl
aad
lea
into
leave
movsl
loope
lods
cmc
and
xchg
push
stos
in
pop
mov
push
repz
icebp
mov
call
push
inc
add
stos
seto
push
mov
inc
pop
bound
mov
pop
sub
mov
cs
mov
add
mov
mov
fisubrs
add
jg
pop
pushf
xor
and
pop
jge,pn
mov
or
jo
je
xchg
xchg
lret
mov
inc
dec
int
jno
lea
pop
lea
cmp
cmp
sbb
pop
add
fiaddl
pop
xchg
sbb
pusha
inc
out
mov
fisubrs
pop
sub
mov
sub
in
and
mov
shlw
jbe
cwtl
test
dec
das
jnp
sbb
push
call
pop
data16
xchg
dec
test
mov
dec
filds
sarb
mov
sub
lahf
iret
jle
test
push
fnstenv
ficomps
lret
push
jno
test
jg
scas
test
stos
test
rolb
mov
int
push
cmpsb
sbb
dec
pushf
aad
cwtl
dec
test
mov
not
fdivr
lock
and
je
popf
test
dec
fxch
inc
sbb
adc
jb
outsb
mov
fdivl
sar
xor
push
inc
filds
pushf
jge
cmp
inc
mov
sbb
dec
jae
xor
lds
into
out
push
ret
roll
dec
inc
sbb
lahf
repnz
repz
or
add
sbb
cwtl
mov
mov
imul
test
mov
pop
aas
flds
add
sbb
sti
lret
aad
and
push
inc
jle
ljmp
or
das
call
int
icebp
pop
xchg
mov
js
cmp
jb
sub
pop
mov
pop
mov
and
jb
pop
jne
adc
popa
shrl
das
rcr
dec
mov
idivl
lcall
pop
addr16
mov
sbb
push
daa
subl
fidivrl
test
mov
jno
jns
jg
xchg
repnz
add
loope
fistps
mov
push
adc
mov
xchg
ja
cmc
pop
stos
add
sub
shl
pop
or
out
loopne
test
xchg
push
xchg
xchg
mov
mov
int
mov
add
jecxz
adc
lea
nop
addl
es
aas
jecxz
xor
cmpsb
loopne
paddsb
test
insb
fiadds
mov
mov
push
mov
add
out
sub
mov
sub
jl
dec
and
push
sbb
push
jecxz
xchg
ljmp
cltd
and
cmc
cmp
sbb
adc
mov
lds
pop
pop
adcb
jmp
scas
test
xchg
iret
outsb
imul
xchg
dec
inc
fisttpll
mov
sub
cmp
xor
pop
xor
add
lret
pusha
aam
scas
xor
lods
adc
mov
lds
mov
lods
pop
movsl
jmp
cmp
adc
push
sbb
cmpsb
subb
or
jmp
ret
mov
xor
cmp
push
xor
out
mov
mov
push
aam
dec
aam
jl
or
or
fsts
rorl
adc
fwait
xor
sbb
das
lret
push
pop
push
sbb
loope
out
sub
sub
and
and
or
xlat
int
sub
cmp
pop
pop
std
sub
mov
incl
mov
shlb
rolb
jno
lret
repz
aam
jb
pop
sub
xor
je
adc
adc
mov
enter
loope
inc
lret
ret
jae
pushf
and
jbe
ds
sbb
rcl
push
sbb
dec
or
jp
add
inc
mov
fwait
cmc
mov
out
or
push
xchg
repz
push
adc
add
lret
int3
mov
jns
faddl
orb
mov
xchg
nop
inc
addb
insb
shll
mov
jb
add
dec
jge
mov
or
mov
add
fisubl
push
and
mov
inc
out
sti
mov
and
mov
cmp
push
in
or
pushf
pop
rorb
enter
repz
in
inc
and
adc
dec
ss
xor
shrl
xchg
pop
shrb
dec
sub
shlb
out
lds
jne
cmpsl
or
fstpl
hlt
loope
das
shl
lods
jmp
xlat
sbb
out
cwtl
gs
data16
adc
sub
jmp
imul
cmpsb
push
aad
jo
aaa
popa
or
jmp
jl
rclb
add
pop
stc
fadd
icebp
pop
ss
adc
inc
rolb
lcall
jae
in
sbb
mov
and
mov
loopne
sbb
dec
add
sub
cli
adc
pop
test
in
insl
cld
pusha
mov
nop
scas
or
lods
aaa
mull
jo
mov
mov
adc
push
popf
xor
mov
test
test
jb
stos
xchg
orb
push
out
pusha
insb
adc
mov
cmpsl
call
fnstsw
int3
xchg
sarb
jge
xchg
nop
sti
pop
pop
sbb
cmc
insb
mov
in
push
sub
push
test
xchg
inc
outsb
inc
xor
or
pop
sti
out
mov
adc
dec
lahf
cmc
int
fxch
lods
xlat
int
or
push
lret
iret
je
cmpsb
out
add
std
mov
dec
cmp
mov
or
aas
xchg
push
cmpsl
or
addl
js
pop
cmpsb
cs
clc
adc
dec
sahf
movsl
test
sub
jp
cmp
fisubrl
pop
jp
pushf
in
pop
push
rolb
ljmp
xor
pushf
dec
gs
mov
int
jb
imull
cmc
adc
rclb
push
jne
mov
mov
jmp
cld
pushf
dec
push
mull
stos
sub
aad
outsl
or
dec
ficoml
jecxz
loop
or
out
test
stos
cmpsl
add
or
dec
cmc
fld
dec
mov
rcrb
fcomps
jnp
outsb
jge
movsl
stos
lods
xor
push
lods
aam
mov
mov
pop
addr16
loopne
loop
fistps
out
inc
out
sahf
addl
dec
xchg
cmp
sbb
roll
mov
xchg
fwait
jae
pop
cwtl
inc
cmp
movsb
fs
fsubrl
rolb
out
aam
gs
popa
scas
or
mov
xor
inc
jmp
and
lret
je
leave
push
lahf
imul
add
inc
add
push
sahf
jns
cld
aaa
arpl
das
lock
movsl
sbb
rorl
cs
mov
inc
ret
idivl
and
outsl
rclb
sahf
movsb
mov
cmpb
jo
xchg
jecxz
inc
mov
push
dec
jnp
out
test
cmpsb
fstpt
mov
mov
hlt
pop
orb
fstl
pop
pop
lcall
stos
xorb
out
adc
fwait
mov
dec
cmp
ficompl
les
mov
fdiv
shll
sbb
std
pushf
insb
cmp
lret
call
push
xchg
or
push
push
popl
mov
pop
xchg
imul
stc
addr16
sbb
xchg
add
mov
cli
adc
mov
mov
xchg
sti
mov
test
arpl
push
mov
or
cmovle
mov
jbe
sub
pop
ljmp
test
or
ss
or
mov
pop
pop
sub
shl
adc
jno
movb
dec
mov
push
cwtl
fcmovnu
aaa
mov
jbe
ret
adc
in
movsb
add
in
das
imul
cmpsb
fldt
lcall
and
bound
pop
fdiv
in
xor
jae
cs
into
sub
push
mov
popa
pop
stos
loope
fstp
mov
and
packssdw
popf
xchg
sbb
push
mov
or
shrb
cmp
arpl
jecxz
ret
sub
jp
stc
xor
xchg
gs
push
pop
add
cltd
iret
gs
pop
loope
hlt
in
xlat
rcll
adc
mov
dec
xchg
roll
mov
rorb
mov
insb
sbb
jmp
jle
mov
mov
push
sar
fsts
das
lds
movsb
adc
push
mov
pushf
xor
nop
adc
arpl
push
mov
ds
ja
popf
xlat
jmp
inc
lcall
repz
xchg
pop
jno
and
mov
out
add
pop
dec
pop
dec
pop
daa
fsubrs
cmp
std
leave
push
loopne
test
pusha
loopne
les
and
xchg
cmp
mov
push
mov
rclb
cmpsb
subb
clc
pop
test
imul
inc
inc
mov
cld
dec
mov
loopne
jnp
inc
jmp
mov
cltd
push
jne
dec
and
mov
xchg
clc
cmp
stos
jmp
push
mov
aad
add
jb
mov
lret
pop
xchg
jp
fcom
out
sub
jecxz
enter
cmc
mov
xchg
sbb
std
lcall
dec
jae
mov
leave
xchg
fwait
push
mov
dec
dec
push
or
push
or
sub
fwait
xchg
sub
or
push
add
ds
cwtl
sbb
push
pop
ss
dec
les
xor
out
jne
cmp
lods
lds
push
adc
jecxz
lret
pop
mov
add
sub
dec
test
sbb
mov
mov
xor
add
pop
pop
lds
fistps
pop
or
inc
jo
jp
sahf
add
pop
stos
ds
push
cwtl
mov
div
pop
jo
xor
jno
aas
cmp
cmc
xor
dec
jns
mov
stc
jne
call
insl
sub
dec
iret
pop
scas
jmp
lock
icebp
xchg
sbb
sub
sti
clc
aam
xchg
and
rolb
pushf
pop
mov
sbb
outsl
mov
xchg
fprem1
movsl
sub
shlb
test
jge
aad
outsl
mov
add
sub
mov
add
dec
jne
loope
dec
and
je
push
int
push
jmp
xchg
cmp
in
movsb
lcall
gs
and
loop
dec
mov
aad
and
ss
fstl
or
adc
int3
or
mov
push
cltd
xorb
jmp
mov
mov
sub
icebp
dec
cltd
xor
xchg
scas
dec
popa
pop
insb
or
add
ss
push
cmp
xchg
cli
mov
add
mov
mov
out
hlt
mov
pop
sbb
insl
clc
gs
hlt
bound
movsb
fistl
dec
les
sbb
push
sbb
div
mov
cs
popa
test
jbe
dec
call
dec
push
std
jno
sub
mov
call
fldl
and
cmp
jnp
mov
lahf
push
fs
xor
xchg
or
loop
push
andb
xor
stos
loop
subl
push
sbb
sub
mov
ds
push
pop
sbb
or
loop
test
adc
mov
push
cmpsl
out
jbe
ja
std
repz
cmpsb
out
pushf
arpl
ffreep
jge
jo
xlat
bound
sti
xchg
dec
jge
aas
iret
add
xchg
mov
cmp
and
dec
negl
dec
xor
int3
cmp
fisubs
sbb
mov
add
add
mov
cwtl
dec
jg
adc
rcll
adc
jle
loop
add
rcrl
clc
sub
test
data16
inc
mov
dec
call
mov
mov
movsl
mov
subl
jbe
adc
sub
dec
scas
ret
mov
mov
add
aam
stc
fimull
sub
mov
pop
sub
sub
jbe
cmpl
call
icebp
mov
pop
pop
shrl
inc
mov
pop
aas
mov
shlb
push
ret
pop
mov
inc
and
sbb
and
jge
int3
clc
pop
pop
repnz
lcall
push
mov
pop
jp
sti
xchg
xor
orb
mov
jns
repz
sub
ret
repnz
dec
lods
xor
sbb
pop
or
and
cmpsl
movsl
arpl
jo
lods
xor
mov
fcomps
inc
mov
or
aaa
mov
jp
xchg
enter
sub
insb
inc
fidivrl
aad
and
rol
fdivrs
out
rorb
mov
test
out
push
add
jmp
pop
xchg
mov
ja
push
out
adc
ljmp
bound
or
xchg
mov
iret
push
jbe
out
ret
loopne,pn
call
scas
cs
repnz
dec
aaa
xlat
and
push
push
fiadds
int
jno
cmp
and
push
das
cmp
dec
mov
lcall
cmp
aas
stos
inc
addr16
add
add
out
loope
ficoml
and
xchg
scas
icebp
rolb
cmp
xchg
sarb
sbb
cmp
xchg
leave
cmpsb
shr
pop
cltd
jecxz
das
repnz
lock
jb
inc
sub
into
push
call
jne
mov
imul
decl
sbb
push
ret
test
fbstp
shlb
fistps
dec
dec
cmpsl
mov
sub
add
jb
adc
adc
sub
jo
int
loopne
movsb
mov
sbb
enter
mov
push
adcb
mov
in
adc
mov
out
daa
pop
into
lods
dec
xchg
dec
pop
cmc
lods
dec
pushl
lea
jecxz
or
or
cmp
scas
sbb
pop
pop
xchg
xor
inc
jl
shrb
xor
mov
jns
shr
xchg
or
call
leave
mov
dec
xchg
jmp
or
stos
setl
push
and
push
sub
les
mov
lea
adc
fdivl
pop
mov
cmp
xchg
outsl
sti
mov
jo
ds
sbb
into
fnstsw
jl
xchg
out
shll
mov
pop
xor
in
stos
or
dec
mov
dec
stos
push
pop
movsb
in
push
sti
pop
mov
lcall
mov
push
adc
rorb
push
lret
cwtl
shrb
ret
enter
idiv
mov
idivb
or
xchg
fimuls
pause
lahf
pop
imul
pusha
pop
lods
ret
sub
dec
sbb
push
mov
repz
jae
repnz
inc
push
adc
add
jbe
popa
jg
mov
clc
fildl
or
ja
ret
cmp
pop
inc
push
rorl
xchg
lahf
out
mov
aad
xor
push
insw
jns
xchg
inc
pop
test
repnz
jo
dec
push
psubb
jg
and
outsl
out
mov
cltd
mov
push
icebp
mov
out
fucomip
xor
in
mov
test
sub
mov
mov
dec
jg
inc
adc
test
inc
scas
pop
xchg
lahf
clc
out
pop
pop
test
nop
aam
cmp
inc
insb
jmp
jnp
sti
mov
sub
or
cwtl
data16
push
push
jne
lods
jl
in
cmc
rcr
dec
cmp
adc
mov
test
push
mov
pop
lret
test
adc
sbb
dec
xchg
or
pop
loop
stc
jae
fwait
mov
dec
adc
int3
test
je
add
aam
pop
divb
jns
cmp
mov
xchg
adc
push
mov
dec
ds
jns
jp
push
and
loop
movl
inc
js
mov
lcall
pushf
inc
jns
cmpsb
lcall
cmp
and
gs
dec
cmp
push
and
sub
iret
outsl
call
shl
lahf
add
inc
xor
aam
inc
enter
xchg
and
repnz
mov
pop
inc
xchg
mov
shlb
sbb
xchg
dec
mov
inc
sbb
test
sbb
je
mov
aas
push
jge
xchg
shl
ss
inc
sbb
jbe
inc
pop
jmp
inc
adc
or
sub
mov
dec
aas
ss
sub
jb
xor
add
dec
sbb
loopne
mov
jnp
sahf
bnd
lock
vunpcklps
xor
les
xchg
mov
sub
xchg
dec
insl
jmp
cmpsb
ja
dec
aam
aam
adc
popf
je
and
xchg
pop
out
jno
mov
cmp
outsl
adc
mov
cmp
mov
in
add
stos
mov
adc
mov
and
testl
lock
fs
jb
flds
imul
jmp
out
das
clc
or
cvtps2pd
leave
sti
push
enter
daa
pushw
adc
lods
repz
and
orl
test
mov
inc
imul
rcl
sbb
int
je
push
sub
std
inc
gs
pop
adc
pop
lret
pusha
mov
dec
mov
test
loop
inc
out
in
xchg
fs
xor
dec
mov
sbbb
mov
clc
inc
inc
movsb
mov
cmp
cmp
jne
lds
pop
push
add
xor
es
push
test
push
adc
adc
es
das
cmc
lret
out
inc
jmp
mov
aaa
inc
lea
ficomps
inc
lea
mov
ja
push
rcll
daa
and
mov
mov
inc
mov
push
pop
int3
loopne
jmp
jno
arpl
test
lret
lret
lahf
in
sti
mov
jb
fimull
leave
outsl
repz
add
push
sbb
pop
in
fs
jne
push
add
rol
xchg
and
sbb
and
add
dec
push
rol
out
xor
mov
mov
mov
pop
addr16
insb
std
rorl
fdivs
push
stc
lcall
daa
inc
xor
insl
cmp
adc
mov
mov
int
xchg
adc
mov
pop
mov
gs
dec
jb
andb
cmp
mov
mov
xor
jecxz
fistpl
nop
pop
mov
xor
in
aad
mov
pop
fimuls
push
icebp
popf
clc
jbe
dec
rcrl
jecxz
mov
pop
mov
xor
addr16
aaa
ffreep
pop
add
div
mov
mov
mov
mov
insl
inc
in
repz
add
mov
mov
icebp
mov
pop
jg
jp
xchg
mov
sbb
push
int3
jne
fsubrl
insb
in
mov
cwtl
or
pop
jge
ljmp
and
loop
fwait
dec
mov
xchg
jae
cmp
shll
mov
imul
cmp
add
jecxz
jl
incl
loop
sbb
sahf
push
outsb
jp
lea
fdivr
sbb
icebp
popa
xor
sub
mov
mov
insl
push
in
add
bound
out
lret
mov
xor
or
lea
jmp
jns
in
and
sbb
xor
fimuls
add
sbb
fcomi
and
mov
add
dec
imul
or
xchg
nop
mov
leave
popa
fs
fwait
jno
inc
mov
adc
or
out
adc
paddq
push
push
adc
lods
push
push
pop
clc
cwtl
gs
inc
push
cli
out
pop
sbb
out
andl
pusha
aas
and
stos
gs
mov
jo
mov
mov
insl
mov
sub
test
mov
aas
add
fdivs
test
or
inc
repnz
repnz
ss
push
sbb
cmp
pop
and
in
dec
sbb
leave
imul
jno
in
add
pusha
cmp
dec
fs
bound
jle
push
xor
ret
pusha
dec
jg
ss
sbb
shrl
mov
and
add
inc
add
loope
xor
push
lahf
out
pushf
add
shrl
cmc
imul
out
add
std
mov
jne
sbb
and
xchg
sub
rorl
iret
inc
outsl
lea
sbb
pop
inc
fstl
sub
dec
xchg
jge
outsl
ljmp
out
fcmovnb
scas
orl
imul
pop
and
sbb
or
and
mov
xchg
cmpsl
enter
iret
lret
xor
adc
adc
or
and
xor
or
mov
pop
or
or
lahf
arpl
stos
out
sub
popa
sbb
dec
lds
mov
sti
mov
cli
test
push
je
add
inc
out
insb
mov
mov
leave
xchg
jge
pop
les
in
ficomps
sub
pop
mov
mov
jg
bnd
mov
loope
xorb
dec
pop
pop
pop
mov
daa
lret
les
in
xchg
mov
pop
jmp
lret
notl
push
jnp
in
insl
xchg
and
sub
add
mov
dec
je
mov
lods
or
and
negb
mov
test
add
xor
movsb
sbb
mov
aam
push
mov
and
xor
jp
aas
out
aam
cmpsb
sbb
lahf
add
mov
imulb
xchg
pop
sbb
sub
push
pop
sub
icebp
mov
out
add
ja
and
and
jp
test
xchg
cmp
or
sub
stc
shlb
das
or
xor
mov
push
clc
mov
dec
imul
xor
xchg
mov
call
jle
jp
and
add
cli
test
lret
xchg
fcmovnbe
imul
fstps
jp
ret
rcrb
mov
ret
push
fmuls
add
add
out
mov
mov
mov
jge
dec
leave
sub
cmp
test
dec
sub
cltd
shll
sub
add
stos
jnp
mov
push
inc
jge
adc
sbb
les
repz
test
pop
inc
pop
sub
push
add
out
mov
dec
fidivrs
movsb
or
sub
call
and
jbe
daa
es
jecxz
outsb
fstl
fnstcw
jg,pn
mov
shll
mov
jle
mov
es
fwait
gs
xor
test
scas
addl
cmp
jl
je
cmpsb
popl
add
dec
mov
cwtl
sbb
ja
lret
push
insb
and
xchg
sarb
mov
adc
sbb
out
add
test
data16
loop
enter
push
pop
sbb
jg
loope
xchg
cmp
cli
lahf
jle
xor
shlb
inc
xor
dec
fldl
sbbl
sbb
mov
pop
mov
xchg
push
out
incb
push
or
pop
xchg
pop
mov
fs
test
cmp
push
outsl
ljmp
jl
mov
dec
outsb
jns
outsl
sub
popa
push
sbb
cmc
imull
ret
add
adc
mov
and
xchg
and
push
cmp
inc
mov
cmpsb
sub
push
jle
inc
out
jae
jg
rcrl
lds
push
mov
test
bound
mov
es
and
test
dec
outsl
mov
movsl
adc
and
adc
xor
push
int
jge
jo
sub
out
push
fcompl
mov
mulb
aas
xor
jnp
lret
mov
push
pop
jb
dec
push
or
je
dec
xchg
adc
adc
add
into
pop
loope
add
pop
neg
adc
addb
jnp
ds
lret
pusha
ud0
mov
jbe
sarl
jae
dec
test
or
inc
mov
sub
fiadds
pop
sahf
push
jecxz
int3
and
jb
adc
jp
cmp
mov
shlb
add
mov
add
loope
popa
pop
inc
lea
fdivrl
xor
aaa
daa
in
lcall
out
add
out
inc
mov
out
sti
jns
clc
pop
lret
das
sub
xor
loope
jmp
fcoms
pushf
setb
push
ds
pop
push
inc
les
mov
and
cmp
daa
adc
gs
jbe
sbb
aas
and
push
inc
inc
ja
mov
sub
adc
mov
jnp
out
fists
cmp
dec
filds
ret
add
in
mov
dec
dec
int
dec
fwait
int3
imul
mov
cmp
sbb
pop
adc
clc
pop
adc
and
imul
mov
and
sub
cld
pop
dec
adc
jbe
or
push
clc
scas
ret
lock
push
in
mov
decb
mov
sbb
cmp
daa
scas
or
lds
out
ficomps
mov
lret
push
scas
loop
sbb
dec
and
push
jmp
fnsave
mov
mov
xchg
test
int
dec
fimull
push
cmc
sbb
inc
sbbl
xor
xchg
and
pop
pop
xorl
insb
sub
sbb
pushf
xor
lds
xor
fucomi
in
ja
sbb
mov
repz
dec
mov
pop
mov
mov
jl
dec
lea
jnp
inc
jno
je
jmp
dec
mov
ret
ret
arpl
test
es
cmp
mov
testb
gs
pop
xor
mov
imul
mov
sbb
addb
mov
mov
insl
jl
lock
sbb
xchg
push
sub
sub
xor
xchg
es
or
inc
rcrb
loop
dec
addb
out
sbb
cmpsl
sbb
into
jnp
stos
add
test
cld
dec
insl
mov
sbb
int3
pop
call
loop
out
mov
xor
pop
mov
xor
xchg
mov
outsb
mov
and
mov
lahf
add
or
sarl
xchg
ja
sti
aam
enter
adc
mov
mov
filds
xchg
xor
rorl
data16
out
int
not
add
lods
loop
imull
mov
cltd
jo
jmp
adc
pop
in
and
adc
loope
dec
movsl
shl
xchg
xchg
jle
cmp
scas
loopne
pop
and
arpl
loop
mov
xlat
push
lret
sbb
inc
out
fistl
ljmp
imul
and
add
aam
std
ret
jb
in
loopne
ret
pop
push
aas
mov
push
xchg
sarl
cli
push
test
sub
fsubrs
loop
daa
or
cmp
jbe
and
or
push
xor
push
push
pop
nop
pusha
push
outsb
mov
cmp
xlat
dec
sti
jae
pop
lock
mov
mov
pop
lds
inc
lods
fmull
imul
icebp
mov
dec
jno
dec
inc
jg
jl
fwait
xchg
in
pop
adc
sub
in
jns
mov
fsubrs
mov
mov
mov
cmp
repnz
enter
test
sbb
out
int3
sub
jns,pt
popa
ja
pop
sti
movsb
pop
fimull
xchg
roll
xchg
xor
test
ret
mov
icebp
stos
xchg
jp
fwait
inc
movsl
ljmp
cltd
mov
adc
lods
out
sub
dec
mov
jg
rclb
xor
dec
sbb
or
les
cmp
cmc
and
adc
sbb
imul
outsl
pop
jne
stos
popa
jg
xchg
das
jbe
cs
dec
adc
push
pop
cmp
push
ljmp
jmp
push
sahf
mov
push
in
and
ret
jp
idivl
test
arpl
adc
add
stos
or
test
in
jne
xchg
push
int
push
lods
xor
jecxz
mov
jb
adc
xchg
adc
and
cmp
mov
stos
adc
inc
push
inc
xor
sbb
ss
imul
cmc
shrb
lods
mov
orb
cmp
mov
xor
mov
xor
rcll
fisttpll
inc
repnz
ret
mov
repz
repz
addr16
inc
push
pop
jnp
loope
mov
repnz
dec
out
adc
lock
shrl
addr16
shlb
push
or
and
pop
lret
jmp
push
test
or
mov
fnop
push
aaa
mov
divb
pop
dec
jae
in
push
adcl
iret
cli
movl
cli
shrb
lret
stos
add
out
arpl
push
sbb
lret
push
sbbb
push
aas
mov
ret
daa
xor
lcall
sbb
scas
jo
xchg
inc
push
dec
push
repnz
incb
shll
jbe
sub
sbb
or
cli
jl
mov
int
cmp
sbbb
stc
lods
cmp
shl
cmp
or
ljmp
sti
jbe
int
add
and
xlat
add
sbb
in
fnsave
jbe
outsl
aad
aad
imull
dec
xor
mov
sub
scas
popa
das
clc
ds
rol
not
fisubrl
dec
mov
out
nop
jns
aad
shll
lods
or
mov
xchg
or
dec
push
sarl
cltd
imulb
cmp
ss
push
lock
jo
mov
stc
push
fistpl
imul
fwait
in
push
lea
mov
mov
xor
test
ljmp
aaa
call
fwait
in
enter
iret
or
aas
pop
ret
popf
int
cmpsl
gs
rcrl
popf
sub
cltd
or
add
cltd
adc
mov
pushf
or
scas
cmp
fstps
mov
cmp
xchg
js
sbb
jp
roll
icebp
out
jecxz
adc
jmp
js
in
bound
fstpt
dec
mul
pushf
data16
shrl
rcr
lea
pop
sbb
push
out
mov
mov
test
add
sbb
jmp
jnp
aaa
xor
push
stos
xor
xchg
add
mov
dec
pop
cmp
push
int3
sbb
add
insl
lret
data16
or
imulb
int3
test
inc
mov
ds
in
stos
jmp
jb
sbb
ja
call
sbb
pop
iret
sub
fistps
repz
movsl
repnz
push
ja
lods
mov
ja
xchg
add
cli
mov
cs
push
int
jmp
pop
and
loop
outsb
jg
cmp
mov
cld
xor
push
sbb
jge
push
jnp
pop
pop
and
jle
outsb
xor
or
iret
dec
push
and
mov
and
add
push
das
fldl
sbb
in
lea
xor
jns
push
cld
sbb
sub
mov
xor
dec
push
stc
jns
add
in
adc
mov
push
adc
sti
fucomip
ret
cwtl
mov
push
mov
jl
in
ret
jne
mov
xchg
mov
stos
dec
dec
sub
out
decb
sahf
sub
aaa
pop
mov
not
daa
jp
sahf
into
adc
int3
mov
sbb
imul
aas
and
les
inc
mov
cli
mov
inc
inc
xchg
xorl
adc
sub
movsl
mov
pop
ss
ficompl
fiadds
aam
sbb
xchg
pop
xchg
xchg
mov
sbb
lods
pop
dec
push
dec
or
sbb
gs
stc
stc
mov
mov
ja
scas
cli
inc
addr16
mov
and
mov
ja
out
mov
stos
roll
cli
xchg
inc
mov
cli
pop
std
ljmp
sbb
push
mov
xor
in
fisubrl
popf
and
or
nop
xor
jg
mov
dec
and
or
push
and
jmp
pop
xlat
cmp
sbb
adcb
mov
add
in
jl
jp
leave
iret
sub
lahf
sbb
pop
scas
push
scas
jmp
je
sarb
push
aas
add
mov
push
in
sbbl
inc
adc
mov
push
or
cltd
jecxz
dec
mov
testl
pop
adc
xchg
push
dec
sub
sbb
cmp
out
push
lods
cmp
xchg
and
daa
stc
add
shl
jns
cli
jmp
adc
popf
adc
imul
bound
out
dec
shrl
std
gs
jl
sbb
cltd
ss
ja
cmp
add
mov
xor
inc
or
rclb
fsubrs
fdivl
sahf
test
xlat
idivl
std
sti
cmp
and
stc
xchg
lea
scas
and
jae
jnp
xchg
or
arpl
xchg
sarb
pushf
sbb
dec
repz
sbb
xchg
verr
out
repnz
add
in
aam
lret
arpl
jmp
sbb
test
mov
cmc
sbb
pusha
hlt
cmpsl
add
testl
sbb
xchg
and
adc
fs
xchg
add
push
bound
ret
bound
add
cmp
imulb
dec
lock
mov
xor
mov
gs
jo
stc
sub
inc
adc
test
loop
mov
movsb
cmp
movsl
ret
and
xchg
or
sbb
test
cwtl
loope
orb
popa
xchg
inc
xor
orl
inc
pop
out
sub
push
xchg
cmpsl
lea
and
loopne
jnp
shrl
jb
loope
sbb
dec
sub
jbe
jge
icebp
or
xor
adc
xchg
xchg
pop
mov
scas
jmp
shll
aaa
adc
fxch
inc
cmp
jp
sub
inc
or
mov
jbe
mov
inc
fcomp
scas
das
fwait
subl
decl
cli
add
inc
xor
jne
jb
mov
sbb
lock
arpl
xchg
inc
inc
popa
daa
ss
aaa
jbe
push
adc
add
pop
rcrl
pop
fstl
dec
gs
shll
sbb
mov
add
mov
es
jnp
movsb
mov
push
cmp
inc
sbb
and
push
test
adc
mov
fcomp
leave
sti
xchg
idiv
ja
stos
jne
jg
mov
sub
lret
add
lahf
sbb
fidivrl
mov
jle
pop
lcall
ljmp
arpl
dec
outsb
and
mov
mov
xchg
sahf
jno
lods
fildl
xor
mov
pop
jns
push
test
ss
pop
pop
arpl
xchg
leave
dec
mov
pop
or
mov
nop
mov
adc
stc
xor
jae
mov
jnp
clc
adc
mov
mov
aas
sub
or
loopne
pop
xchg
insb
inc
adc
xchg
inc
push
loop,pt
fwait
xor
sbb
push
dec
das
lret
or
xchg
pusha
jns
add
cmp
mov
jle
idiv
jmp
les
sarl
add
and
gs
mov
push
xlat
cmp
sub
inc
cmp
add
mov
lds
iret
mov
sahf
imul
jl
ds
outsl
xchg
lcall
imul
pop
jmp
push
adc
lea
pusha
or
sub
sbb
sbb
jmp
fiaddl
pop
das
hlt
insl
lock
subb
push
sub
mov
mov
fcomi
add
adc
mov
xor
inc
mov
sbb
jbe
test
mov
inc
daa
jge
shrl
adc
sbb
in
dec
and
xor
insl
mov
push
inc
repnz
inc
repnz
fwait
or
mov
xor
inc
xorl
mov
add
xor
pop
loop
sub
cwtl
mov
push
int3
push
icebp
addr16
inc
xor
inc
mov
movsl
cmp
mov
lahf
fisubs
mull
dec
mov
and
adc
sbb
pop
fnstenv
out
pop
xlat
push
adc
xchg
in
dec
addb
xor
xor
pop
sub
aad
lock
stos
dec
mov
pop
cs
ss
mov
lahf
inc
repnz
lds
or
or
addb
sub
push
sarb
pop
pushl
stc
and
dec
lcall
mov
addl
jo
leave
das
xchg
js
lods
gs
jbe
fucomp
cmp
cli
jle
mov
cmp
mov
ljmp
shll
cmp
push
rcll
pop
cmp
lret
scas
aaa
inc
into
adc
inc
dec
clc
test
or
rclb
pop
roll
adc
or
fs
cmp
cs
iret
jnp
bound
jnp
bound
icebp
mov
cmpsb
repz
std
jne
pop
add
mov
jo
push
lahf
sbb
mov
aam
loopne
std
repz
dec
or
adc
fwait
int
jo
mov
sbb
fs
pop
sub
adc
stc
test
or
movsl
imul
push
aaa
jnp
js
inc
ficomps
jmp
stc
nop
jo
popa
fildl
ja
pop
xor
sbb
mov
push
jle
icebp
xchg
in
sarb
loopne
or
add
out
out
lret
xchg
data16
lea
jmp
dec
xchg
push
jnp
lea
notl
inc
lea
jae
jns
sub
and
xchg
or
loope
div
loop
loope
loopne
mov
sub
add
mov
lret
addr16
cmp
add
cmpsb
pop
push
xor
imul
loop
ljmp
xchg
out
dec
outsb
lahf
add
int3
mov
mov
jo
mov
addr16
cmp
push
add
jmp
mov
pop
ss
sbb
shrl
inc
je
lret
pop
jecxz
aad
inc
dec
out
test
sub
xor
pop
jae
xor
scas
mov
incb
in
insl
cltd
or
xor
xor
lcall
cmpl
pop
jno
adc
xchg
insb
addr16
and
add
jmp
push
repz
inc
jae
lahf
sub
iret
push
adc
lods
push
cltd
outsb
cmp
mov
loopne
sub
ja
sbb
xor
rorl
out
mov
jo
les
jecxz
testl
data16
sbb
pop
scas
adc
lods
fwait
xor
inc
cmp
mov
sbb
and
dec
int3
jle
mov
popf
mov
les
int3
sub
mov
enter
adc
inc
in
xchg
cmp
and
aas
sub
mov
testb
scas
push
enter
xor
ret
cs
scas
xchg
or
cs
aas
stos
mov
inc
mov
shll
mov
out
test
stos
pop
mov
testl
in
jmp
inc
sub
cld
daa
sbb
pop
das
jbe
add
jbe
jp
lods
jne
data16
aad
cmp
das
mov
js
add
xor
cmp
xchg
add
sbb
push
push
jge
jns
mov
and
push
shrl
and
and
mov
xchg
insb
ret
fs
nop
stc
icebp
out
bound
dec
or
sub
xchg
xlat
mov
cmp
add
xorb
in
data16
das
mov
ret
pop
out
in
lods
jno
ret
add
sub
pop
add
bound
out
shlb
sbb
xchg
faddl
cmp
add
das
sbb
dec
xchg
scas
ret
call
iretw
stos
mov
mov
xchg
push
and
loopne
rcr
and
xor
add
push
mov
and
pop
or
pop
push
adc
mov
insb
mov
dec
adc
psraw
cli
mov
fisttps
mov
sub
hlt
xor
sub
push
movsb
std
test
or
js
push
push
outsl
jne
jns
in
pop
pusha
arpl
call
push
mov
sbbb
aas
outsl
mov
mov
setb
lds
xor
test
sahf
arpl
rclb
fidivrl
lods
sbb
addb
fsubrs
in
addb
scas
inc
in
sbb
xchg
mov
mov
outsl
adc
shlb
sub
push
xor
fdivp
out
pop
and
jge
mov
mov
lcall
cltd
jl
pop
mov
pop
sub
pop
xlat
xchg
pop
into
into
ficomps
xchg
mov
imul
shrl
jbe
mov
inc
mov
stos
leave
fldcw
jle
aaa
mov
aad
insl
loop
shrb
push
jl
xchg
adc
jo
sub
dec
inc
mov
sbb
mov
leave
jmp
cmp
popa
shrb
sbb
and
dec
cli
nop
inc
pop
rol
mov
xor
or
xchg
shlb
sub
setb
push
in
movsl
mov
add
xor
push
sbb
rorb
or
aam
dec
sarb
test
xchg
stc
lahf
adc
andl
fs
or
pop
mov
call
cmpsb
dec
or
test
scas
cmp
pop
push
pop
cld
add
clc
fcoms
lcall
scas
mov
adc
sbb
add
sarb
cmp
inc
in
bound
fisubl
cmpsl
cwtl
jne
repnz
mov
rorb
fsubrs
sahf
pop
cmp
leave
out
shl
cs
movsb
lahf
testl
mov
enter
loopne
shrb
or
neg
cs
scas
into
ja
mov
xchg
mov
lock
and
dec
subl
std
xchg
sbb
mov
imul
mov
stc
cwtl
sbb
mov
cld
lock
push
add
xor
nop
pop
pop
sub
cmp
out
ret
mov
lcall
movsl
mov
xor
push
pop
jmp
and
inc
push
inc
repz
rcll
sbb
push
push
scas
mov
test
stos
cld
fstpl
test
mov
sbb
lcall
mov
scas
cmpsl
dec
jnp
sub
mov
pop
lcall
push
fs
cltd
out
fwait
lea
in
push
mov
lods
arpl
ret
jmp
pop
jge
cmpb
jmp
movsl
sub
add
add
stos
mov
or
hlt
add
mov
xchg
fnstcw
push
insb
call
jge
rcll
dec
push
stos
adc
adc
insl
adc
and
pop
cmp
rorb
xor
adc
loope
dec
jle
inc
cs
data16
insb
xor
jle
or
pop
mov
inc
mov
mov
mov
lret
loopne
mov
pop
lcall
push
andb
cmp
xor
cmp
push
addr16
call
mov
jmp
pop
fstpl
hlt
mov
sbb
sub
rolb
dec
arpl
in
mov
sbb
dec
int3
xchg
adc
js
mov
push
int3
cmpsl
ja
cli
adc
insb
jp
loopne
js
sub
rorb
fs
call
or
das
pop
push
mov
aas
or
sbb
ret
rorb
sub
movsb
shll
popa
cwtl
jp
xor
adc
enter
cwtl
and
and
mov
add
inc
cli
or
cld
xchg
mov
hlt
and
jp
fisubrl
cmp
push
adc
or
ret
pop
addl
in
leave
cmp
shrb
dec
shll
sbb
cmpsl
sbb
jo
jae
lds
inc
cmpsb
mov
in
mov
xchg
sbbb
in
add
cs
repnz
lods
sub
mov
fisttpll
push
fstpt
xor
hlt
add
add
mov
pop
and
jge
sbb
sbb
mov
cmp
sub
jnp
add
fdivrs
and
cmp
cmp
adc
jae
scas
inc
mov
je
pop
stos
pop
mov
dec
loop
jne
mov
stc
mov
ret
pop
adc
dec
sbb
popf
push
popf
pop
subl
jne
jbe
std
lret
lea
andl
sti
and
or
xor
add
jle
and
dec
mov
arpl
and
fcomi
mov
and
push
push
fs
inc
imul
xor
mov
lock
jae
inc
xor
pop
mov
xchg
mov
sarl
insb
shll
lods
orb
bnd
push
adc
repnz
jne
lret
dec
jbe
sbb
or
loop
mov
xor
arpl
loope
add
int3
outsb
inc
sbb
mov
lock
imul
jb
pop
jne
cmp
pop
test
fldt
sbb
add
test
sahf
jae
ja
jne
sub
add
jg
pop
dec
jge
mov
mull
sub
cs
push
push
xor
push
pop
ds
jb
popf
mov
imul
push
dec
imul
daa
mov
cwtl
scas
imul
mov
sub
dec
adc
orb
in
cwtl
sub
xchg
xorl
out
ret
fistpl
pop
fisubrs
mov
adcb
in
pop
fdiv
and
aam
lds
cmpsb
mov
adc
fwait
jo,pt
and
xchg
imul
jne
add
dec
adc
sbb
push
clc
inc
add
cmc
daa
sub
outsl
hlt
push
add
inc
ficompl
pop
js
aam
dec
pop
push
sub
mov
mov
jbe
push
je
int
mov
sahf
inc
jmp
mov
imul
test
out
and
jo
ret
test
daa
xor
out
cwtl
insb
addr16
xchg
pushf
mov
ret
xor
jb
stc
cmp
and
lcall
ret
pop
inc
jecxz
in
mov
jb
cmp
mov
pop
ret
xor
test
rolb
and
jle
jecxz
mulb
fadd
inc
xor
dec
mov
add
add
shlb
jp
mov
ljmp
stos
lahf
lea
and
pop
inc
xor
into
mov
dec
orl
sti
cmp
sub
bound
fwait
or
xchg
push
cmp
mov
cmp
es
js
imul
out
mov
xor
outsb
out
push
insb
mov
cmpsl
dec
sub
lea
cmpsl
sub
or
movsb
sti
sub
popf
sbb
cmp
adc
xchg
lcall
call
mov
rol
xchg
lret
push
stc
iret
imul
push
push
lea
gs
fucomp
out
bsr
stos
icebp
mov
popa
push
ja
inc
imul
xchg
je
push
xchg
aad
stc
idivl
out
mov
mov
jg
adc
dec
xlat
adc
lret
mov
fs
add
cmp
cld
sub
movsb
push
scas
pop
dec
push
add
loope
cmp
push
mov
and
push
mov
xchg
pop
arpl
ret
xor
dec
arpl
lret
fbld
jge
clc
xor
mov
stos
or
and
pop
xorb
inc
and
push
clc
mov
enter
stos
scas
shr
mov
inc
or
imul
sub
fstpl
inc
cmp
in
mov
pop
jae
lock
adc
insl
jne
or
jnp
mov
cmpsl
jecxz
push
add
mul
fimuls
mov
xor
daa
repz
xchg
ret
and
in
movsl
iret
inc
xlat
repz
aad
loop
mov
lahf
xor
fxch
in
xor
dec
in
jne
cltd
pop
dec
add
dec
and
stos
test
lods
mov
mov
je
sub
inc
dec
adc
jg
adc
push
cli
inc
lds
in
jne
testb
xchg
cs
pop
jo
jne
or
push
sbb
filds
xlat
inc
mov
cmpl
pop
shrl
notb
sbb
scas
gs
bound
test
loopne
adc
lock
lds
cmp
sub
sbb
sub
push
addr16
fisttpl
inc
or
cmp
dec
mov
es
out
add
pushf
or
loop
mov
or
mov
xchg
jo
shl
fnstsw
cmp
fs
mov
in
clc
fmuls
mov
dec
pop
js
sub
cwtl
sarb
ret
icebp
lods
adc
sbb
push
adc
test
sub
inc
sbbb
push
loop
cmp
mov
sti
ds
xchg
movsl
cltd
push
mov
out
mov
jno
bound
leave
hlt
enter
sbb
jp
aaa
inc
sub
sbb
xchg
movsb
notb
outsl
pop
or
les
lock
mov
or
hlt
and
fisttps
sub
pop
arpl
dec
sbb
out
pop
push
sbb
mov
mov
xchg
shlb
dec
sub
imul
and
xor
loop
outsb
adc
cmp
and
mov
mov
test
mov
shll
adc
cli
jnp
fists
das
or
data16
pop
pop
jmp
pop
mov
mov
fdivs
test
xchg
sbb
pop
pop
xchg
inc
dec
pop
dec
dec
in
xor
jle
dec
sahf
and
pop
sahf
fcmovnb
pushf
jl
lods
sub
jno
jno
testb
sbbb
push
jne
sub
and
xor
mov
add
pop
mov
jae
dec
es
mov
and
sbbb
decl
push
jp
mov
mov
add
mov
pop
lret
and
cmpb
mov
lods
xor
call
pop
cmpsl
adc
leave
xor
jae
lods
aas
jl
movsb
daa
sbb
and
in
or
fwait
arpl
inc
xor
jb
jp
jne
leave
imul
rclb
xchg
pavgw
mov
cltd
sbb
add
or
push
xchg
sahf
outsl
jecxz
jno
lret
or
adc
mov
clc
repz
xorl
add
mov
xor
xchg
push
dec
xlat
inc
mov
nop
jp
loope
inc
std
xchg
popf
imul
cli
or
inc
dec
xchg
sub
mov
jge
sub
jp
sub
or
imul
sub
push
lahf
add
jecxz
outsl
lahf
pop
cmpsb
nop
pop
fcoms
mov
sub
cmp
jp
test
test
push
hlt
inc
mov
out
mov
pop
daa
and
push
cmp
call
ljmp
mov
pushw
xchg
into
mov
in
cmpsb
in
add
outsl
rorl
adc
mov
mov
xchg
ret
test
ds
push
mov
lret
mov
sub
mov
lcall
jle
sti
inc
inc
jmp
ljmp
sub
jbe
add
arpl
je
xor
xchg
mov
testl
cmp
out
bound
aad
loope
addl
cmpsl
and
pop
xor
jns
jo
lcall
xchg
iret
inc
lcall
pushf
sti
jp
push
adc
sub
mov
jp
dec
pop
in
test
out
test
addr16
loopne
ljmp
and
aam
leave
and
sub
cmp
das
ljmp
jg
jns
xchg
push
and
lret
jae
test
dec
jg
sbb
mov
mov
das
cmpsl
gs
mov
pusha
mov
fidivrl
sbb
jnp
xlat
pop
jnp
xchg
insb
cltd
shl
add
aaa
out
jle
xor
hlt
rclb
ja
and
cmp
mov
inc
xchg
cs
push
lods
adc
dec
fbstp
pusha
sub
sbb
lea
bound
add
in
jb
mov
lret
ret
fcoms
stos
push
pop
testb
mov
sti
push
pop
sub
loop
invd
pop
xchg
push
mov
stc
fsts
out
stos
paddusb
xor
xchg
jge
mov
ror
fwait
decb
pop
outsl
stos
fcompl
mov
shll
inc
mov
dec
lods
aaa
cmp
pop
mov
scas
ss
repz
jl
call
cli
cltd
inc
lock
fimuls
and
call
lock
imul
nop
xor
mov
push
jle
cmp
push
rcrl
push
nop
mov
mov
pop
cmp
addr16
jb
outsl
inc
into
outsl
jnp
mov
scas
xor
pop
mov
ss
push
scas
out
and
das
cwtl
pushf
inc
mov
pop
je
fldenv
xchg
es
mov
dec
pop
out
arpl
mov
inc
sub
repz
int
cli
fsubrs
ljmp
add
enter
dec
inc
int
push
push
pop
jl
cmp
adc
jnp
push
aaa
jle
inc
dec
lret
pop
test
sbbl
repnz
jl
jmp
mov
fadds
inc
cmp
insl
mov
mov
mov
and
fmull
adc
stos
mov
xchg
test
pop
dec
dec
jp
jb
xchg
hlt
mov
push
icebp
cmp
push
movsl
xor
inc
fbld
inc
fs
ret
xchg
mov
insb
stc
jge
mov
bnd
jb
pop
hlt
dec
pop
fwait
jp
leave
int3
xor
stos
add
addr16
data16
or
jge
shll
sti
hlt
mov
ret
mov
shl
aad
lods
jo
mov
mov
daa
sbb
inc
add
outsl
bound
cmpsb
xchg
xchg
xlat
adc
pop
xchg
push
mov
loop
sub
sahf
sbb
mov
cmpsl
mov
push
push
cmpsb
lock
pop
out
insl
pmaxub
push
pop
ss
decl
into
hlt
inc
pop
push
and
inc
dec
out
stos
test
js
rolb
scas
sub
mov
lods
arpl
testb
notb
incb
out
cmpsl
out
in
mov
sarb
xor
aaa
inc
xchg
test
push
sbbb
push
out
sub
movsb
pop
pop
test
sahf
fimuls
and
push
inc
ljmp
dec
shr
lcall
jmp
sub
xor
push
mov
ret
mov
jp
add
add
sbb
inc
mov
lods
rolb
mov
mov
mov
jl
cmp
inc
pop
pop
hlt
mov
dec
outsb
adc
arpl
inc
and
jns
jns
pcmpgtw
dec
addl
jmp
cmp
sbb
fsubrl
scas
iret
je
dec
xor
pop
mov
fadd
fcmove
and
add
in
push
sub
ret
shrb
inc
push
pusha
xchg
mov
aad
or
scas
hlt
pusha
sbb
xchg
dec
and
loope
and
ds
fdivrl
sub
xchg
fstpl
jb
push
pop
or
dec
mov
and
dec
xchg
insb
rcpps
icebp
mov
and
scas
cwtl
pop
push
ret
inc
xchg
sub
cmpsl
pop
jecxz
out
mov
sbb
pop
mov
adc
fbstp
daa
leave
fildl
pop
out
mov
movsl
mov
dec
rolb
stc
fadds
jbe
mov
jge
lock
jl
gs
adc
mov
testb
add
sbb
add
xor
push
sbb
mov
pop
push
into
ret
pop
insl
xor
and
in
sub
add
ds
push
xchg
inc
sub
inc
movsl
repnz
push
mov
lods
push
mov
and
mov
inc
mov
or
mov
testb
xchg
outsb
fwait
mov
pop
aaa
aad
dec
mov
pop
mov
inc
mov
inc
sar
jns
sbb
loope
add
push
mov
cld
int3
scas
mov
push
xchg
mov
sub
fmull
mov
loopne
cmp
fadd
add
sub
arpl
cmpsb
test
pop
cmp
jns
inc
or
shrl
pop
into
ret
sub
dec
pusha
pop
fisubrs
bound
ljmp
sub
iret
pop
jg
xchg
iret
outsl
idivb
dec
rcrb
jnp
mov
adc
pusha
rorl
dec
push
roll
cmpb
push
data16
mov
pop
pushf
aaa
push
push
or
mov
mov
push
insb
jge
dec
stc
rorb
ljmp
and
pop
xchg
das
loopne
sbb
xor
pop
out
jg
gs
adc
jle
rcl
leave
lock
pusha
arpl
ret
and
cmp
jle
pop
cmp
dec
push
arpl
cld
or
rorb
inc
sarb
adcb
fldt
inc
sub
jle
cmc
sbb
inc
ds
fwait
or
rcrb
and
sub
push
cmp
push
aad
inc
loope
js
pop
jo
jbe
divl
outsl
loop
add
pushf
sbb
xlat
and
aam
shll
mov
mov
push
repnz
dec
test
mov
xchg
aad
sub
add
shrb
mov
repnz
cmp
lret
jmp
add
or
jp
or
lods
test
ja
mov
jnp
imul
dec
andl
add
shll
pop
ret
jmp
pushf
dec
into
aam
xor
mov
popa
jp
and
mov
je
pop
sbb
movsb
xchg
sbbl
jl
sbb
scas
movsb
add
stc
push
add
pop
mov
mov
xor
lods
bswap
ss
leave
add
iret
mov
jmp
dec
inc
inc
loopne
mov
mul
cwtl
cmp
xor
sbb
or
xor
pop
rcrl
nop
add
mov
iret
pop
dec
insl
jg
mov
cmpl
in
mov
jmp
iret
mov
pop
jge
mov
and
les
jp
inc
or
lret
call
lods
mov
mov
add
inc
jle
callw
in
aaa
imulb
inc
mov
movb
inc
cmp
add
fwait
jge
mov
rclb
or
ss
cmp
xchg
mov
inc
mov
jb
pop
cld
aad
pushf
and
inc
jl
fwait
lret
xchg
aas
jae
jbe
adc
out
cmpb
mov
add
xchg
cltd
test
push
mov
mov
cmpsb
out
xchg
sbb
cmp
mov
arpl
xlat
lcall
mov
push
aam
pop
subb
jecxz
xor
xchg
neg
mov
ficoml
cltd
or
cmc
inc
andb
dec
decb
sbb
sbb
mov
cmp
mov
sahf
jno
daa
push
jl
insb
pop
adc
inc
in
les
arpl
loopne
push
push
mov
push
push
mov
out
icebp
insl
cmp
or
add
and
addl
cltd
mov
or
pushl
pop
out
loope
ja
mov
pop
cmp
call
push
adc
sbb
sub
add
lods
repz
adc
popf
mov
rol
pop
pusha
pop
push
jb
pushf
mov
jno
dec
pop
push
int
mov
pop
cli
mov
out
inc
mov
int3
rcr
adc
sbb
push
adc
iret
scas
or
cmpsb
and
jmp
jecxz
fwait
mov
mov
inc
pop
imul
in
gs
fsubs
xlat
pop
adc
sub
ds
sub
xor
stos
push
js
push
lea
push
push
jo
repnz
adc
jb
pop
mov
mov
in
adc
jo
sub
dec
xor
mov
jl
or
cwtl
out
jecxz
fs
pushf
out
jg
ja
pop
cmpsb
data16
mov
call
fistl
rcl
mov
adc
and
into
cmpsl
loope
icebp
inc
mov
jno
cmp
out
and
iret
xor
jns
jmp
adc
dec
sub
mov
inc
movsl
inc
aaa
push
ljmp
test
sub
push
sbb
daa
in
rorb
add
jne
or
mov
pushf
cwtl
push
add
out
or
cmp
mulb
sub
cmc
lea
notb
enter
addl
and
push
dec
das
mov
in
stos
popa
call
mov
out
push
out
daa
out
insb
push
mov
push
xor
inc
cli
adc
add
sbb
lret
sbb
lcall
sub
jle
call
test
mov
cmp
stc
fs
sti
repnz
mov
shr
mov
sbbb
xchg
fst
jl
insl
add
and
sub
lret
xchg
loopne
inc
fs
mov
fcompl
and
xorb
mov
into
jb
fldl
pusha
jge
mov
les
dec
or
fmuls
and
negb
mov
xchg
xchg
dec
lret
mov
pop
adc
xlat
cmp
push
cmp
xor
movsl
sbbl
inc
loop
fmulp
mov
cmc
sbb
faddl
mov
push
sbb
xor
mov
pop
or
cld
movsl
sub
out
hlt
cmp
push
test
adcl
arpl
xlat
adc
mov
loope
fadds
repnz
xchg
leave
push
push
fldl
aam
xchg
movsb
mov
sub
sbb
mov
sbb
xor
jb
inc
mov
iret
int3
add
xchg
xlat
aam
test
bound
jg
sbb
add
xchg
aaa
xor
pop
cmp
icebp
test
call
aad
into
lock
scas
mov
in
xchg
cld
sub
addb
imul
xchg
xchg
mov
mov
mov
push
xlat
inc
cmp
and
fisubl
stos
insl
ss
and
lock
mov
clc
push
sub
insb
lds
iret
fwait
js
mov
gs
sbb
pop
add
add
mov
sub
test
adc
movsl
insb
push
scas
fcoml
jl
fisttpll
ljmp
dec
imul
call
cmp
xchg
in
lock
and
dec
imul
gs
dec
in
lret
scas
movb
jae
mov
or
loope
fwait
cmc
aas
cs
push
sbbb
dec
outsb
push
sbb
int3
mov
loope
hlt
or
mov
lds
add
flds
aaa
dec
sub
xor
dec
pop
pop
enter
pop
push
shrb
cmp
xchg
xor
imul
pop
sbb
inc
xor
stos
jbe
mov
jae
data16
pop
mov
mov
arpl
push
out
pop
dec
add
adc
pusha
lret
insb
test
mov
cmpsl
pop
xor
test
test
jo
xor
insb
mov
sub
fimull
dec
push
and
sarw
mov
leave
popf
dec
or
cmp
mov
xchg
inc
mov
popf
pop
repnz
sbb
gs
movsb
rol
mov
aad
mov
push
lret
cmpsb
dec
scas
jle
cwtl
loop
clc
gs
jno
incl
mov
loopne
popa
subb
imull
fidivrs
test
cmp
and
jae
les
rcrl
xchg
push
mov
subl
fdiv
or
jno
addr16
jno
fwait
pop
int
cmpsl
fisubrs
pop
ret
shlb
mov
sbb
lock
inc
push
add
jecxz
jb
inc
push
mov
sbb
je
das
mov
jecxz
mov
mov
dec
aas
decb
dec
inc
mov
pop
dec
imul
cmp
out
jns
popf
scas
dec
insb
imul
in
outsb
insl
jno
in
xchg
lret
mov
lret
jb
aam
dec
stos
cwtl
outsl
inc
scas
dec
inc
or
cmp
mov
xchg
arpl
rcrb
in
dec
xchg
pop
insl
subl
jmp
pop
sub
push
lret
adc
and
imul
jbe
icebp
push
sub
dec
repnz
adc
addl
inc
js
sub
sahf
xchg
ss
mov
ss
cmp
rcl
shll
dec
loopne
xor
mov
fs
and
or
push
xchg
jnp
pushf
dec
xor
sbb
lds
xchg
fidivl
enter
pushl
lock
cmpsl
cmpsl
push
rorb
xlat
scas
and
mov
inc
dec
dec
sahf
cs
ret
pop
sbb
fs
mov
cwtl
mov
cld
add
jle
stc
aad
jnp
cmpsl
jge
outsb
inc
sarb
sbb
xchg
pop
add
dec
movsb
lods
lret
out
xor
sbb
int3
fcomps
sbb
inc
mov
in
int3
xor
adc
lods
leave
shll
push
shrb
dec
sub
jmp
inc
push
mov
xor
xchg
xchg
leave
aam
jb
push
pop
arpl
or
xlat
or
pop
mov
xor
push
enter
pushf
filds
fcomps
mov
lahf
je
mov
repnz
imul
cmpb
gs
jnp
mov
fiaddl
rclb
cli
outsb
in
test
cmp
bound
and
rolb
jae
dec
xchg
xor
cmpl
addr16
stos
ja
inc
cmp
mov
test
sbb
in
fstpl
push
fadds
pop
cs
xlat
push
test
pop
movsl
add
cli
gs
dec
or
dec
jnp
lds
mov
pop
iret
mov
jbe
and
int
scas
mov
pushf
outsb
gs
stc
sarl
out
test
repz
pushf
dec
jo
cmpb
pop
lahf
test
or
outsl
sub
xor
push
xor
jno
pop
nop
mov
pop
jp
loopne
pop
add
das
sbb
stc
push
lret
fadd
aad
sti
rclb
lds
jge
rol
pusha
mov
cmpsl
jne
loopne
mov
cmc
fs
stos
test
fwait
dec
cld
std
push
xchg
or
and
xchg
outsl
andl
mov
jle
pop
jnp
bts
sub
mov
cwtl
std
mov
xchg
insb
pop
bound
xchg
test
mov
stos
mov
push
push
into
jge
or
sub
out
xor
ret
mov
lret
dec
and
dec
mov
push
and
mov
xchg
xchg
imul
cli
xor
loopne
adc
mov
push
arpl
or
lods
lcall
xchg
daa
nop
shrl
mov
mov
ljmp
imul
leave
pop
je
ljmp
ret
not
cmpb
mov
imul
add
mov
movsb
lods
negb
push
dec
repz
bndldx
mov
pop
push
aam
cmp
jo
pop
out
ljmp
lods
push
out
xor
lock
enter
push
test
add
jno
arpl
gs
flds
ja
loopne
fimuls
hlt
cmp
pop
mov
cld
and
dec
inc
add
push
cmp
lcall
repz
adc
prefetch
mov
pcmpeqw
add
fadds
add
sar
mov
push
lea
sbb
sbb
rorl
pop
test
add
push
adc
jle
loope
std
mov
popa
lret
jbe
mov
test
sub
shlb
mov
mov
cmp
sub
out
hlt
push
aad
shr
or
inc
sbb
call
jne
adc
add
xchg
mov
adc
test
int
cmp
test
xchg
pushf
popf
clc
mov
xchg
addr16
cmpsl
adc
mov
jg
mov
add
movsl
or
add
movsb
jle
iret
mov
out
pusha
add
loopne
repnz
icebp
shlb
fsubrl
lock
mov
inc
rcrl
or
sbb
notl
daa
xor
mov
jbe
or
cmpsb
jg,pn
and
insl
es
arpl
int
xor
mov
jb
imul
fisubl
inc
faddp
jns
dec
fldenv
les
xchg
sub
test
in
inc
pop
ficoml
pop
push
jns
cs
fcompl
pop
jno
or
and
sub
and
adc
ret
and
aad
fsts
inc
add
sti
lahf
scas
fldt
adc
push
or
sbbb
mov
mov
mov
jl
inc
inc
cmp
mov
push
cmp
sub
movsb
sub
inc
xchg
cmp
fsts
push
hlt
ljmp
inc
pop
imul
dec
stc
inc
sbb
inc
cmp
gs
or
mov
mov
call
xchg
cmp
shl
cmp
mov
mov
push
and
test
fsubr
iret
lcall
out
insl
xchg
out
cmpsl
pop
jnp
bswap
out
aaa
push
jecxz
jb
sub
mov
sysenter
or
xchg
add
filds
gs
jno
push
test
mov
ljmp
jns
push
adc
add
js
or
and
rcl
dec
mov
test
jmp
rorl
jno
movsl
cmp
push
push
sub
push
pop
xor
lods
mov
mov
adc
cmp
fcmove
int3
out
or
loop
add
mov
add
jl
pop
mov
and
jle
xchg
lea
shl
push
mov
sub
xorb
pop
fwait
out
xor
outsl
add
mov
stos
out
jge
push
sbb
sbb
in
xor
daa
sahf
lods
push
jne
push
test
mov
inc
inc
or
lock
or
jp
push
xchg
push
mov
xlat
cld
jg
pop
int
test
mov
out
sarb
dec
popf
dec
std
mov
mov
js
push
fidivl
repnz
adc
aaa
loopne
dec
inc
in
mov
jmp
inc
mov
ret
xchg
fidivs
adc
and
mov
sti
mov
pop
push
mov
outsl
lahf
jecxz
xlat
push
out
insb
xor
mov
popf
pop
mov
jecxz
in
hlt
outsl
xlat
pop
dec
pop
xor
push
mov
dec
sub
imul
jge
mov
andb
mov
lcall
adc
shl
dec
out
and
mov
jg
xchg
scas
cld
insb
jg
sub
mov
jo
cmpsb
cmc
cs
dec
push
add
and
pop
adc
or
mov
mov
pushf
es
push
mov
mov
sub
adc
mov
mov
and
add
mov
pusha
mov
cmp
mov
insb
jmp
jl
das
mov
loopne
mov
push
imulb
mov
and
scas
sbb
repnz
fdivs
mov
jmp
cmpsl
lret
stc
mov
lret
xchg
aas
sub
and
push
sti
pop
or
lret
ret
or
int3
aas
adc
jg
jno
xor
jbe
enter
insb
mov
outsl
jne
and
add
ret
push
jb
jp
sbb
xchg
into
mov
dec
push
jg
es
jnp
les
or
lahf
push
dec
arpl
pop
sti
add
mov
add
mov
std
ret
jnp
add
jp
push
jns
xchg
push
lock
rolb
sub
jb
fidivrs
sbb
push
and
xchg
inc
popa
or
cwtl
rol
xor
jp
add
sub
mov
rclb
cmp
mov
xor
pop
jno
mov
add
sti
test
jmp
pop
and
idivb
fxch
in
sub
int3
xchg
adc
and
scas
jo
into
sbb
mov
push
cmc
repz
cmp
lcall
sbbl
dec
cmp
mov
rcll
xchg
int3
andb
je
pop
inc
pop
cltd
stos
mov
xchg
push
scas
or
sub
lahf
add
lock
movsb
ljmp
mov
cmc
xor
sarb
mov
insb
stos
xchg
jbe
psubd
loop
mov
and
fdivrl
stos
sub
fdivrs
xor
in
ds
in
addb
jl
movsb
ljmp
roll
mov
mov
leave
cld
sbb
xchg
push
cmp
cmpsb
or
gs
pop
mov
repz
and
dec
lcall
pop
in
in
imul
jmp
mov
xchg
dec
sbb
sbb
test
or
inc
xchg
mov
je
and
mov
sub
ja
sub
in
push
sub
movsl
jne
aad
lcall
mov
jae
fcoms
xchg
test
xor
sbb
dec
sub
xor
push
or
iret
cld
lret
mov
loop
aad
lock
push
mov
push
sub
stc
push
and
mov
push
rolb
add
ret
jg
getsec
xor
daa
adc
fnsave
sub
mov
int
enter
inc
lods
xor
repnz
dec
xchg
dec
or
test
sbb
xchg
arpl
inc
imul
sbb
mov
aad
iret
pop
cmp
push
push
pop
and
fstpt
dec
pop
lret
or
jae
cmp
fidivrs
push
add
aam
xchg
hlt
popf
or
out
sbb
fdivl
xor
idivb
mov
mov
adc
sub
mov
pusha
dec
fcoms
push
mov
cmc
dec
dec
xchg
aad
gs
push
sbb
fwait
or
and
jnp
sbb
add
lods
mov
idivb
mov
mov
cmc
sbb
push
add
loopne
lea
sub
test
mov
sub
rcrb
jo
std
cmp
lahf
lret
inc
aad
movntps
and
push
cli
out
divl
adc
add
jecxz
scas
shl
mov
mov
cmp
add
psllw
sub
inc
cmp
xchg
push
in
cmp
in
popf
mov
lahf
leave
mov
imul
loope
and
mov
imul
add
out
shl
lods
push
test
inc
sub
data16
or
inc
dec
cmp
mov
es
fdecstp
pop
adc
cli
push
jp
mov
sti
dec
ret
adc
and
fisubrs
add
inc
mov
out
sbb
jmp
push
adc
fmul
arpl
push
dec
mov
mov
and
push
repz
into
aas
idivb
pop
ds
dec
hlt
mov
mov
adcl
jne
nop
cmp
arpl
jb
out
jbe
aam
mov
lret
insl
sbb
jnp
dec
adc
cwtl
out
mov
xchg
loopne
mov
and
subl
sbb
into
pushf
pop
shlb
xor
jae
int3
jl
inc
cmp
cmp
mov
pushf
and
fsubrp
cld
hlt
mov
sbb
adc
fcmovne
movsl
lds
push
cmp
pop
leave
add
in
mov
push
lea
aam
cmc
lcall
and
out
cmp
or
and
sbb
mov
and
mov
or
mov
pop
scas
and
gs
and
mov
mov
dec
mov
aad
es
dec
lds
xchg
and
rcll
arpl
add
mov
dec
and
cmp
repnz
add
xlat
cli
dec
std
fstpt
sbb
dec
mov
sbb
inc
leave
rclb
in
cmp
into
mov
test
int
dec
lahf
popa
repnz
nop
pop
xchg
divl
ss
nop
fidivl
or
enter
mov
aad
xchg
xor
dec
cmc
or
add
cmp
dec
mov
xchg
filds
adc
and
mov
repnz
and
sahf
xor
mov
inc
mov
add
push
incl
cmp
dec
nop
jmp
pop
hlt
and
sub
int3
push
sub
push
dec
mov
out
rep
shl
lret
out
add
out
out
leave
mov
aaa
xor
jle
add
insb
and
clc
enter
push
mov
jmp
outsb
adc
mov
jbe
mov
and
mov
sti
push
out
xchg
and
shl
and
sub
push
aaa
aad
inc
std
dec
mov
sbb
inc
in
bound
loop
incb
xchg
adc
push
sbb
in
or
jle
mov
sbb
hlt
aam
jnp
cmp
jb
ljmp
lds
lahf
mov
ds
sub
jmp
fwait
lcall
mov
adc
or
mov
adc
clc
gs
fdivrl
test
std
jnp
ret
or
dec
imul
jns
push
pop
into
insl
and
and
or
test
mov
dec
jmp
mov
mulb
repz
inc
loop
add
dec
addb
pop
pop
jecxz
hlt
aad
ds
clc
sbb
mov
and
push
cmpsl
jle
int
and
cmp
jecxz
mov
bound
mov
inc
xorl
add
dec
push
pop
fsubs
cmp
and
pop
sub
jecxz
xchg
fcomip
xor
cwtl
shll
xchg
jp
mov
fdiv
mov
mov
inc
xchg
cmp
add
lods
sub
adc
cmp
jp
aad
inc
sbb
inc
in
pop
std
cmp
arpl
jl
loop
fldl
cmp
aas
jno
sub
add
cmp
inc
inc
jp
pop
popf
jae
mov
push
imul
fidivrs
mov
cs
fnstcw
push
fstpt
sub
push
arpl
push
pop
cmp
xor
mov
xor
dec
ja
mov
jno
pop
pop
adc
dec
es
or
xchg
arpl
cmp
lods
nop
jge
int
mov
push
jne
or
push
dec
pop
add
inc
jle
jmp
jmp
sub
add
jb
cmpsl
jl
leave
rcll
test
insl
mov
stos
rclb
or
adc
xchg
js
sbb
mov
mov
rol
push
jb
adc
jnp
mov
lods
jno
in
mov
jnp
ljmp
jge
into
mov
xor
jns
mov
pop
arpl
pop
or
dec
jg
xor
sbb
movsb
fs
sub
cmp
push
lock
sub
fucomip
js
ret
mov
adc
sub
stos
add
mov
push
lods
hlt
sbb
pop
inc
cli
mov
mov
fldt
push
test
inc
xchg
clc
in
fucom
inc
adc
scas
add
dec
add
ret
add
fisttps
ficompl
push
mov
dec
mov
mov
inc
fsubrs
and
ror
push
cmp
push
xchg
mov
sub
xchg
cmpsb
or
cltd
push
xor
or
xchg
subb
push
sbb
push
fs
dec
jo
je
xor
fbld
jno
jecxz
sub
and
sti
dec
sbb
shr
popa
pop
or
pop
push
into
push
pop
mov
sub
pop
and
push
leave
lods
mov
mov
addr16
or
pushf
sbb
or
xor
dec
std
xor
push
mov
dec
mov
in
mov
push
sarb
neg
fidivl
jle
cmp
bound
movsl
mov
sub
clc
arpl
push
aaa
sub
ja
ret
cmp
jecxz
dec
push
mov
fcomp
pop
sub
adc
and
ret
and
das
scas
jp
mov
push
adc
insb
push
mov
lret
adc
sub
pop
inc
nop
xor
fbld
mov
aaa
xor
cmpsl
bound
adc
es
or
pop
inc
stos
xlat
sbb
xchg
imul
jb
add
add
pop
jle
loope
out
cmpsl
test
jmp
jno
aad
aaa
and
sub
ret
mov
call
fisubl
add
rolb
mov
xchg
cmpsb
pop
jb
dec
test
cmp
pop
verr
jno
cmp
test
leave
ror
addr16
into
clc
mov
testl
or
push
data16
mov
adc
xchg
mov
int
mov
xchg
jmp
outsb
movsb
push
enter
sbb
inc
jge
jge
push
cmp
add
xchg
adc
mov
mov
jnp
mov
xor
and
stos
jmp
push
cmp
test
loope
test
xchg
and
scas
test
clc
shrl
in
in
clc
imul
stc
shl
mov
xor
sbb
jg
scas
xchg
push
loope
push
mov
hlt
cmp
and
rcrl
dec
das
or
into
lea
xchg
mov
sbb
cmpsb
push
sub
push
xchg
notl
lret
loopne
cmp
imul
adc
cmpsl
xor
xchg
cmp
xchg
inc
dec
test
arpl
mov
add
adc
and
mov
xor
cmpsb
adc
std
icebp
sti
mov
or
adc
mov
outsb
je
or
push
stos
ret
clc
jae
mov
push
jmp
or
jae
pop
push
push
cmp
cld
fnstenv
add
mov
pop
xlat
cltd
xor
cli
xchg
xchg
pop
mov
inc
loopne
imul
mov
adc
xor
loopne
imul
jmp
test
lahf
popa
sub
lods
arpl
aam
jae
fldt
rcrb
mov
add
push
xor
cmpsl
mov
stos
test
mov
jmp
mov
xor
mov
push
imul
cmp
rclb
lock
inc
stc
inc
pusha
orb
out
mov
pop
stc
jae
jge
ds
clc
and
popf
push
mov
xchg
in
outsb
fdivr
scas
mov
addl
pop
inc
dec
sub
sahf
je
pop
push
inc
aaa
inc
fmull
xchg
mov
arpl
in
rcl
sbb
mov
paddw
lods
pushl
addl
cmp
in
inc
or
cmp
pop
cltd
dec
dec
sub
js
cmp
or
xor
aam
push
fxch
cmp
ja
in
into
inc
subl
mov
stos
ffreep
and
repnz
sbb
ja
cmp
cmpb
mov
mov
cmp
sarl
cmp
add
lahf
sub
mov
xchg
scas
gs
add
cld
sbb
xor
mov
xchg
push
rcll
mov
lock
out
andb
and
push
lea
fiadds
sbb
push
sbb
cmp
xchg
js
add
jae
jb
arpl
outsl
mov
push
push
pop
cwtl
and
pusha
daa
adc
mov
add
mov
mov
jae
ficoms
rclb
pusha
lret
push
pusha
mov
scas
mov
movsl
ss
sbb
mov
xchg
call
xor
sub
mov
addr16
sbb
or
and
add
inc
insb
jg
jl
sbb
or
cmc
ljmp
push
or
sbb
sahf
pushl
imul
sahf
lcall
cmp
push
pop
les
inc
jno
testb
fwait
jle,pt
iret
mov
mov
rclb
loope
dec
fs
sub
and
repnz
scas
jp
xchg
pushf
sub
insl
into
loope
pop
aaa
mov
inc
adcl
xchg
or
ja
lods
xlat
lcall
mov
cltd
mov
sub
add
adc
mov
shrb
jb
movnti
mov
in
mov
dec
shlb
jbe
dec
cld
stos
xchg
popf
ja
repz
xchg
les
rcl
adcb
ficomps
cmp
mov
xchg
cli
movsl
pop
aad
in
das
push
or
pop
sbb
imul
xlat
jnp
sub
cmp
imul
inc
cmp
adcb
jge
cmp
ljmp
pop
jge
mov
mov
mov
popf
mov
test
sarl
data16
pop
aad
in
roll
pop
or
decb
inc
in
dec
std
mov
ret
out
push
mov
jno
lcall
stc
cwtl
lret
push
daa
or
stos
adcb
push
mov
scas
mov
stos
lahf
mov
mov
fcompl
dec
jne
cmp
lret
jmp
scas
dec
lods
inc
mov
dec
insb
fisubs
js
fists
ss
mov
inc
movsb
adcl
push
addr16
pop
jae
mov
pop
mov
sub
add
out
scas
loop
stos
out
xor
mov
dec
jae
shlb
jl
jle
or
call
jnp
mov
fistpll
insl
mov
sub
push
sub
push
adc
je
stos
int3
and
popa
jbe
pop
jl
sub
mov
jl
jl
jmp
fisubs
mov
and
mov
cmp
xlat
rcrl
stos
mov
sub
fs
mov
pop
or
cmp
in
mov
jo
pop
sub
fdivl
push
mov
push
into
push
daa
xor
jb
das
sub
sahf
add
mov
sbb
mov
stc
or
sbb
out
xor
mov
mov
jo
xor
add
lods
jecxz
enter
inc
and
ret
dec
sahf
pop
loop
adc
adc
cmp
fiaddl
xor
xchg
aaa
jmp
jp
add
sbb
cmp
adc
mov
dec
insb
stos
push
mov
rorl
jl
sbb
out
dec
pop
push
jle
add
sti
fldl
xchg
out
add
scas
lret
cltd
outsl
mov
ss
jp
mov
es
jae
loope
jbe
sbb
xchg
push
sarb
inc
add
push
adcl
test
push
adc
in
adcl
add
icebp
adc
jge
out
js
cmpsl
mov
sbb
pop
pop
cmp
push
jp
popa
dec
iret
pop
in
sbb
js
stos
add
and
dec
or
inc
aaa
adc
mov
add
jle
inc
mov
ret
push
mov
mov
xor
push
push
in
jb
out
sub
imul
pop
push
hlt
fsubrp
sub
inc
cmpsl
mov
adc
icebp
dec
imul
mov
bound
cmp
jne
mov
sub
push
mov
dec
stos
fimuls
in
jge
mov
and
inc
hlt
push
mov
fwait
roll
sub
scas
insl
jbe
leave
lahf
and
xor
sahf
add
xchg
xchg
and
lret
xchg
xchg
push
inc
push
into
outsb
xchg
shlb
imul
rcrl
xor
and
lahf
cmp
int
sub
cmpsl
loop
in
xor
mov
mov
daa
push
les
dec
xchg
mov
jno
jbe
fstp
stos
lret
insb
cld
lret
lea
outsl
and
add
mov
add
stc
mov
shrl
movsb
xor
popa
cmpl
mov
ret
sbb
add
out
pushf
pop
or
test
es
mov
push
sub
xorl
mov
in
xchg
push
mov
xchg
icebp
jl
fxtract
fdivl
sub
or
stc
pop
mov
jl
fnstsw
mov
rolb
scas
repz
das
inc
sub
pusha
shrl
fldlg2
add
push
or
adc
push
mov
xchg
jnp
or
lock
cld
data16
xchg
push
iret
and
out
not
je
insb
mov
adc
or
rclb
ret
cwtl
and
cmp
push
addr16
dec
scas
push
lds
ljmp
call
subl
or
push
dec
int3
sub
jecxz
fldt
cmc
add
inc
mov
subl
aas
lcall
mov
push
jae
rcr
xchg
clc
pop
fists
adcb
push
adc
cmp
jnp
mov
and
jecxz
xor
mov
adc
out
inc
je
es
and
pop
js
sbb
and
stos
fstp
jo
scas
jae
iret
xor
cmp
jb
cs
inc
pop
jg
mov
repz
ds
movsl
inc
movsb
push
dec
rcll
les
or
add
aas
and
insl
out
push
insl
mov
sub
sarb
xchg
stc
adc
sub
outsb
mov
jae
inc
jbe
or
stos
xchg
or
enter
push
mov
or
push
xor
mov
sbbb
xlat
dec
ret
jp
sahf
sub
mov
adc
repz
add
jnp
rep
push
mov
loopne
mov
iret
mov
icebp
cmp
lret
adc
push
pusha
lods
xchg
jp
cltd
insb
adc
ljmp
pop
jne
mov
leave
sub
jl
daa
xor
jecxz
push
cld
xchg
lcall
ljmp
xchg
dec
scas
addr16
imulb
idivl
outsl
incb
cmp
mov
push
jo
insl
loopne
nopl
cmc
lahf
jnp
push
mov
fstl
lahf
push
or
push
push
mov
jle
push
sub
adc
sets
popf
cmpb
lea
push
addr16
adc
out
mov
cltd
aad
cltd
call
test
clc
mov
jl
or
pop
inc
adc
jl
popf
push
pop
add
inc
aaa
js
inc
scas
xchg
lahf
xchg
rcrb
pop
popf
xchg
jle
scas
stc
imul
sbb
add
jo
rcll
es
or
add
nop
xchg
das
sbb
dec
inc
or
add
lret
jae
decb
or
xchg
xchg
sahf
push
jno
lods
mov
jl
lret
cld
add
aam
xor
lea
in
and
push
jnp
sub
idivb
nop
fstps
lea
clc
jp
xor
pop
mov
mov
mov
pop
mov
cmp
fildl
inc
lods
cmpsb
mov
mov
std
lea
sub
scas
mov
js
out
paddsw
mov
jnp
jmp
insb
xlat
lods
adc
insb
and
jno
and
repz
and
cmp
cmpsb
jecxz
push
lret
and
pop
inc
push
mov
imul
das
ljmp
adc
stos
aad
cmc
mov
lods
xor
sbb
xchg
sbb
adc
int3
lret
push
mov
in
cmp
jno
push
jle
push
pop
mov
pop
lea
inc
inc
bound
cmc
test
fwait
scas
jbe
and
and
std
cmc
mov
lea
jae
inc
stos
pop
enter
sub
xchg
stos
push
int
or
adc
jb
add
imul
leave
add
pop
lods
mov
jecxz
in
xchg
add
mov
mov
sbb
jnp
xchg
inc
cmp
inc
ljmp
sub
sub
push
sub
jo
sbb
add
jge
mov
imul
cltd
stc
jle
pop
xor
test
cmp
push
cmpsl
int3
jne
jae
ret
adc
xor
hlt
daa
jo
adc
jnp
push
dec
push
mov
in
pop
xor
stos
lcall
stos
add
imul
movsl
gs
cmpsb
xor
mov
inc
lret
sbb
scas
faddl
sub
loope
and
mov
mov
iret
int3
icebp
int
fdivl
mov
shll
mov
lods
xchg
push
jl
out
fimull
out
xlat
imull
cwtl
movsb
cmp
and
dec
inc
mov
pop
rcr
test
shll
mov
pop
cmp
int3
out
mov
fildl
nop
xchg
ldmxcsr
inc
and
push
sbb
cmpsl
lds
scas
cmpsb
fs
out
imul
ret
jnp
shll
rcrl
data16
adc
mov
push
dec
jbe
es
scas
jge
push
push
gs
mov
mov
or
mov
pop
aam
outsb
ja
jp
out
jmp
xchg
sbb
fidivrl
loopne
dec
push
pop
bound
jecxz
xchg
jl
jle
xlat
out
push
adcb
scas
insl
inc
mov
movsb
cmpsl
dec
pop
sti
call
push
cmp
mov
jp
and
fists
jp
outsb
movsl
mov
aas
gs
sub
gs
mov
insl
cmp
fisubrs
and
sub
inc
divl
test
or
cmp
cltd
in
dec
bound
test
xlat
sbb
imul
je
nop
int3
jnp
lahf
inc
inc
in
into
lods
or
ja
test
jecxz
insl
aad
pop
jo
ds
fs
mov
push
cmp
mov
std
jo
sub
push
cmp
or
dec
jge
lret
and
outsb
fidivl
mov
adc
rorb
or
iret
dec
adc
xor
es
fldcw
push
sub
dec
and
stc
jmp
arpl
jnp
push
inc
xchg
out
or
scas
jno
mov
lea
test
inc
shll
cmp
jecxz
xorl
or
add
lret
mov
insl
fstpt
sbb
negb
cmpsl
call
mov
decb
cmp
add
xchg
insb
gs
icebp
jnp
cwtl
inc
fs
xor
call
push
test
fcomps
mov
push
icebp
or
scas
and
sbb
mov
aad
xchg
fwait
mov
je
push
push
hlt
lret
pop
xchg
push
inc
add
ss
out
pushf
or
lcall
sbb
dec
jns
xchg
pop
rorb
jne
and
or
lods
nop
jno
jae
in
test
push
shll
hlt
add
mov
ss
jbe
pop
rcr
jle
dec
inc
pop
mov
cli
icebp
loope
inc
xchg
mov
sbb
and
insl
inc
cmpxchg
mov
mov
arpl
xchg
push
loope
and
ret
jnp
inc
sar
aas
insb
incl
test
mov
int3
mov
xchg
add
je
mov
dec
pop
cmp
loop
ljmp
push
arpl
jno
pop
pop
add
rcrb
std
mov
out
gs
jmp
jnp
orl
sbb
cli
pop
cmp
dec
cmp
mov
es
cmp
add
xchg
stos
clc
cmp
cmp
mov
jg
jbe
xlat
in
clc
lahf
test
movl
jg
mov
push
bound
loope
dec
adc
add
mov
pop
pop
leave
mov
dec
or
jle
cmp
into
mov
or
mov
orb
fisubrl
ds
mov
iret
nop
fnsave
xor
out
movsl
cmc
xchg
movsb
inc
and
in
adc
sti
add
sub
mov
gs
sti
in
daa
fsts
aad
pop
fisttpll
lds
add
outsl
shlb
push
test
sub
inc
addl
rorl
sub
loopne
mov
loopne
adc
jle
scas
aam
sbb
clc
push
pop
fs
test
or
sub
sbb
nop
mov
rcr
mov
sbb
outsl
insl
testl
divl
lcall
mov
jl
or
dec
xchg
dec
mov
icebp
xor
jp
lahf
fcmovu
pop
insl
popa
dec
stos
inc
add
mov
je
mov
adc
cli
test
xor
push
mov
in
jecxz
aam
xor
imull
stc
mov
outsl
jb
sahf
jg
sub
mov
int3
cwtl
xchg
push
jle
inc
imul
mov
lcall
aad
push
xor
ret
jmp
xor
mov
or
mov
mov
fsubrl
push
jbe
xchg
push
mov
mov
movsl
cmp
jmp
adc
jp
xchg
jg
dec
js
loopne
loop
popf
and
jmp
dec
hlt
push
aaa
ja
insb
fcoms
xor
dec
push
das
jb
bound
push
mov
sti
fs
xchg
pusha
iret
scas
or
cmc
pop
fsubrp
icebp
or
mov
mov
cmpsl
add
xor
out
pop
push
jb
repz
sub
jo
jle
aam
sbb
rorl
je
es
and
shl
daa
pop
cmpsl
scas
sub
in
shll
jecxz
addr16
movsb
and
jecxz
mov
stos
xchg
or
test
bound
add
movsl
test
cmp
sbb
es
in
xor
or
adc
and
inc
jmp
pop
daa
rcr
pop
inc
inc
fsts
sub
repnz
lahf
and
scas
ret
sahf
push
mov
loopne
int
add
cmp
xchg
cmc
push
loopne
push
ds
stc
out
ds
jae
pop
mov
sbb
jns
pop
cmpsl
cmp
aas
push
lret
movsb
xchg
and
sbb
adc
mov
int3
fstpt
mov
int3
or
ja
ret
mov
sub
js
movsb
daa
xor
mov
and
push
fcmove
or
jmp
popa
cmpsb
add
cwtl
inc
cli
in
push
xchg
ljmp
xor
cltd
or
add
aaa
fsub
or
add
push
add
repz
mov
adc
outsb
pop
or
rcl
lds
or
jb
push
stos
lods
idiv
ss
jns
pushf
dec
rcll
pop
dec
and
mov
es
xor
inc
pop
ljmp
xchg
int3
ljmp
lds
jmp
loope
xor
cmp
cltd
adc
in
mov
ljmp
and
xor
idiv
push
xlat
add
aas
add
jecxz
jns
cld
enter
or
xor
mov
arpl
push
and
out
add
mov
push
stc
sbb
xchg
cmp
inc
or
xchg
mov
inc
out
divb
mov
mov
in
into
xor
in
add
mov
cmp
sub
mov
add
into
sbb
xor
and
jb
subb
les
xor
xor
in
mov
sub
es
cltd
sub
pop
fwait
pusha
sub
int3
ret
daa
jo
cmpsb
push
mov
push
or
fsts
rcl
sahf
cmp
xchg
outsb
fildll
sarb
add
cwtl
sub
pop
fcomps
xchg
sub
imul
cmc
mov
and
add
pop
jae
outsb
dec
xchg
or
mov
pop
jns
aaa
push
pop
fwait
adc
enter
insl
push
adc
movsb
mov
push
lods
loop
adc
int3
push
inc
mov
insb
inc
bswap
cmc
mov
mov
mov
sbb
jbe
pop
dec
iret
lds
outsl
push
jmp
adc
movsl
popa
fiaddl
cmp
mov
jb
pop
pop
aas
rorl
mov
xchg
scas
sub
cwtl
ja
movsb
dec
or
mov
ret
mov
adc
jnp
push
adc
inc
sbb
test
xchg
ds
jmp
cmpsl
test
push
push
mov
clc
lods
xchg
mov
stos
cmp
mov
arpl
cli
imul
int3
inc
sbb
mov
loope
jo
push
jb
sbb
cmp
or
fstp
sub
je
jl
addl
testl
loope
popf
pop
scas
push
imul
dec
sahf
sahf
fs
or
jno
sub
and
fildl
stos
sub
cmc
pop
cmp
sbb
test
outsl
push
cmp
outsb
push
in
into
aaa
push
cmp
inc
mov
icebp
dec
mov
pop
loope
enter
cltd
in
ret
movsl
jmp
pushf
pop
stos
mov
push
movsl
pop
mov
and
or
lret
xor
push
inc
fcomp
jno
push
fbstp
xor
outsl
imul
jge
aam
pop
inc
sbb
dec
jmp
cmp
mov
icebp
divl
rcrl
ss
aad
icebp
cmp
fwait
jns
lret
add
pop
cmpsb
in
xchg
jbe
lea
cwtl
push
test
add
sub
xor
loopne
dec
scas
adc
mov
push
bound
cmpsb
push
pop
rclb
pop
shlb
shl
dec
fisubrl
fistps
mov
pextrw
jb
mov
pop
repnz
call
jge
mov
jmp
sbb
jecxz
lock
pop
jae
xor
jbe
xchg
pop
and
mov
pop
fcmove
ds
mov
lret
mov
adc
mov
test
mov
mov
lds
mov
inc
adc
cwtl
inc
test
loopne
insb
cmpsl
sub
pop
aad
mov
out
dec
adc
xor
mov
les
cmp
das
call
xor
sbb
daa
es
sbb
jmp
pop
push
adc
pop
das
ret
ror
test
fisubs
cld
cmp
jle
mov
fnstenv
arpl
out
enter
adc
fisttps
mov
dec
aad
mov
je
adc
push
or
pop
xor
mov
fldt
add
jle
fnsave
push
in
adc
dec
sbb
js
push
leave
sbb
shrl
jbe
cwtl
xchg
sti
in
inc
enter
std
ss
add
lea
sbb
cmpsl
mov
push
or
shll
mov
ljmp
into
mov
sub
and
fisttps
adc
jp
ds
rclb
insl
adc
or
jg
xor
daa
pop
imul
add
popf
out
shll
push
and
outsb
fcmovbe
sbb
adc
clc
cmp
xor
cmp
jge
pushf
push
push
cltd
xor
add
test
pop
int
push
lods
loopne
xchg
dec
insl
xor
pop
pop
repnz
jae
and
mov
scas
push
and
iret
mov
loopne
enter
xchg
icebp
fimuls
jo
jb
jmp
adc
ja
fs
out
inc
out
mov
push
push
cwtl
sub
in
lods
sub
daa
cmp
mov
adc
test
das
scas
mov
adc
push
fdivrp
jo
cmpsb
jl
mov
cmpsl
imul
bound
lcall
jmp
jnp
and
mov
das
sub
test
and
movsb
int3
clc
test
lret
test
pop
mov
ret
push
xor
adc
and
paddusb
lods
leave
jle
or
jp
lods
cld
cmpsl
pop
lods
xchg
mov
test
loope
push
int
rcrb
pop
sahf
lcall
dec
lds
das
mov
push
cmp
inc
negl
dec
outsl
cmp
int3
dec
jnp
movsb
cmp
clc
fiaddl
pushf
scas
test
dec
or
rcll
ffreep
add
pop
adc
sbb
pushl
int
mov
mov
pusha
jle
dec
repz
js
repz
push
pushf
xchg
in
add
mov
and
mov
add
aad
xor
sar
sarb
cmpsb
pop
and
adc
jnp
out
insl
add
pop
in
cltd
stos
lods
xor
das
jg
cmp
test
inc
add
mov
outsb
sarl
pop
mov
mov
mov
lret
mov
cmp
inc
aaa
das
aas
adc
push
mov
movsb
loope
push
iret
inc
fsubr
adc
stos
jnp
inc
mov
das
push
pushf
mov
and
cli
fidivrl
fists
notl
adc
leave
fadds
js
ja
dec
cmc
xchg
fdecstp
outsb
ror
push
push
enter
adc
inc
enter
ss
jnp
sbb
mov
adc
lea
jno,pt
mov
pop
int3
cmpl
icebp
in
call
add
in
cwtl
dec
mov
or
outsl
add
insl
aas
and
dec
cmc
iret
dec
cmp
inc
enter
dec
movsbl
ficompl
sbb
insb
iret
xor
fisubrl
dec
cmpsb
gs
test
enter
out
xchg
stos
xor
inc
xchg
jge
lock
dec
and
cmp
mov
push
cmp
and
dec
mov
bound
inc
inc
jge
and
je
cmp
rorb
or
inc
sti
pop
nop
loope
jecxz
adc
push
adc
inc
pop
jmp
dec
sbb
inc
imul
popf
dec
push
adc
add
and
test
cmpl
outsb
out
out
and
cmp
sbb
xor
inc
dec
jp
mov
pop
in
jp
add
lods
loopne
les
enter
sub
and
stc
dec
out
lea
and
xchg
xor
and
sbb
jae
push
pop
pop
cmp
in
into
and
cmp
pop
lcall
inc
loopne
outsb
pop
dec
xchg
pop
lea
aas
mov
dec
jbe
ljmp
and
push
and
inc
gs
fwait
add
cmp
push
in
lods
int
lahf
test
es
clc
sub
imul
enter
add
push
out
lret
ror
sbbb
sub
push
scas
push
xor
stc
inc
pop
sti
ds
xchg
mov
fcoms
sti
out
test
cs
jmp
out
cmc
xor
mov
movl
pop
outsb
pop
cli
fs
loope
jmp
or
and
cmp
cld
ljmp
mov
mov
popf
stos
fdiv
out
popf
mov
pop
jl
xor
dec
insb
icebp
mov
mov
pop
sub
pop
mov
add
or
dec
inc
shlb
mov
cmc
aad
scas
xchg
cmpsb
int3
stc
dec
dec
push
pop
sarl
repz
mov
and
loope
jmp
sub
jmp
pop
push
lret
pop
cmpsb
cmp
addr16
ss
test
lock
push
hlt
cmc
mov
sbb
cmpsl
fwait
push
loopne
mov
ds
js
pop
xlat
repz
mov
in
sub
inc
ss
test
push
mov
adc
add
push
gs
cmp
or
mov
xchg
cwtl
das
fcoms
imul
rcrl
push
roll
shll
daa
adc
test
lret
fistpll
or
or
or
inc
jno
inc
mov
inc
cmp
inc
fstps
jecxz
xchg
dec
push
adc
xchg
sub
aam
fcompl
jnp
sbb
sub
shll
add
out
rcrb
ja
fidivrl
adc
xchg
mov
int
add
sbb
mov
inc
pushf
adc
addb
xlat
mov
lds
mov
fs
movsb
pusha
adc
loope
sbb
add
cmp
jbe
lock
and
fnsave
and
enter
pop
sub
and
lret
scas
or
and
jbe
pop
pop
jl
lahf
dec
sub
pop
pusha
cli
insl
test
push
sbb
push
mov
loop
mov
test
loop
std
cltd
or
testl
jno
cmp
ret
lods
push
inc
ss
sbb
loope
ds
push
cltd
add
hlt
mov
mov
test
ret
jne
fmuls
inc
xlat
jge
imul
leave
add
sbb
lds
xor
test
ss
xchg
cmp
pop
sbb
gs
mov
add
scas
xor
lds
push
mov
pop
xchg
mov
test
jge
add
imul
lds
mov
ss
and
rcl
pop
mull
subb
sub
test
call
in
imul
in
rclb
popf
push
and
adc
jo
sbb
gs
rcrb
sbb
jne
lret
or
stos
lock
push
add
mov
imul
fcomip
scas
lods
int3
xor
lods
inc
filds
sbb
sbb
fldl2e
push
gs
stc
sbb
sbb
call
outsl
out
lock
imulb
ja
sub
push
xchg
jo
dec
in
xchg
dec
andb
repnz
repz
int3
adc
cld
mov
and
fmuls
outsl
test
dec
icebp
aaa
lds
pop
cmpsb
dec
jmp
int3
cltd
insb
push
push
es
testb
mov
cvttps2pi
push
push
or
push
xchg
lock
xchg
xchg
pop
xor
jmp
lret
mov
push
and
mov
or
rolb
rol
or
adc
test
jl
cmp
inc
bound
insb
cmpsl
pop
mov
sub
mov
test
test
flds
cmp
arpl
iret
cmp
cltd
ss
shr
mov
out
push
shrb
mov
jo
popf
out
clc
sar
call
rclb
ss
je
icebp
mov
bound
xor
push
push
cmp
mov
xchg
mov
or
inc
inc
out
aas
roll
xchg
mov
std
cmp
mov
sub
sti
push
pop
cmp
sub
call
sub
mov
inc
push
mov
iret
rcll
call
aad
or
cli
repz
pop
insb
testl
orb
mov
out
pop
leave
mov
pop
xchg
hlt
inc
shrl
jp
mov
sbb
cmp
mov
loopne
fdivrl
jl
ss
mov
popa
shlb
adc
daa
pop
jge
jl
test
jae
js
out
pop
in
repz
mov
jl
sub
dec
jno
xlat
push
mov
push
cmp
push
sub
test
imul
jle
out
enter
dec
fsubs
lods
jge
adc
outsb
adc
mov
aas
xor
cmp
decl
dec
aaa
push
shrb
jle
scas
scas
xorb
stos
andl
js
lods
pop
sbb
pop
mov
inc
cmpsl
lret
dec
fsubr
or
cltd
mov
lds
mov
cmpsl
rcrl
jnp
xor
fnstcw
rclb
loop
testb
push
jle
inc
inc
inc
sbbl
add
push
sti
rcrl
cmp
xor
mov
stc
jmp
test
sub
jge
adc
xor
mov
push
cld
stos
rcr
idivl
enter
scas
out
add
pusha
mov
or
jns
outsl
mov
sti
repz
out
pop
add
mov
je
dec
scas
ds
or
mov
popa
jmp
push
shl
loope
sbb
das
dec
lcall
imul
xor
mov
or
mov
test
js
or
jo
negl
out
je
pop
and
movsl
fists
inc
in
pop
lahf
jns
or
scas
dec
lds
inc
movsl
test
cltd
lds
aam
jmp
aam
sub
mov
mov
dec
and
loope
cmp
testl
imul
mov
xchg
mov
mov
sbb
inc
cmp
push
fcmovnb
lahf
add
sti
pusha
icebp
in
mov
dec
inc
js
mov
dec
cmp
inc
add
add
test
jae
or
loope
lea
cmp
push
hlt
mov
rolb
pop
les
rclb
insl
dec
mov
push
mov
mov
mov
xor
inc
mov
sub
jmp
xor
notb
pop
push
xor
pop
cmp
sahf
insb
push
mov
pop
sub
js
or
movsb
pop
mov
mov
leave
pop
fadds
leave
sub
jno
sbb
adc
fwait
notl
shr
sbbl
pop
mov
les
int
mov
lds
and
jp
lods
mov
jns
je
adc
mov
sbb
jp
dec
xor
xchg
ret
in
sbb
xorl
pop
out
shl
lods
insb
pop
cmc
imul
pusha
jp
sbb
push
push
xchg
mov
gs
je
call
sub
std
pop
out
outsl
lahf
pop
sub
cltd
ljmp
cmp
xchg
cmc
push
int
std
insl
in
cmpsb
xor
ljmp
cmp
cmp
mov
enter
test
mov
xchg
scas
dec
pop
dec
in
pop
mov
mov
dec
jnp
jns
ljmp
mov
inc
popf
gs
aas
sbb
orb
pop
test
cmp
fstl
add
mov
fwait
inc
and
sahf
loopne
xchg
push
sub
insb
push
mov
jae
fidivrs
xlat
test
insb
inc
arpl
in
push
add
pop
jmp
das
xchg
mov
lret
and
cmp
xor
mov
jg
mov
cmp
mov
lea
test
xchg
loop
in
xrelease
xor
in
lods
xor
lcall
pop
sub
jp
in
pop
add
stos
loopne
mov
int3
dec
std
jne
pushf
pop
mov
jl
xchg
jo
scas
dec
test
xchg
push
mov
outsb
sub
test
insl
mov
insl
and
xchg
xchg
pop
nop
pop
jecxz
out
sub
cs
sbb
imul
pusha
pop
mov
push
sbb
mov
adc
and
cwtl
jne
loopne
push
test
fistps
int3
push
cmp
push
bound
enter
aaa
mov
mov
push
adc
or
inc
popl
push
jbe
sbb
pop
mov
popa
insl
jl
mov
jmp
inc
pusha
xchg
lret
lea
adc
fs
xor
and
cwtl
inc
es
mov
loop
ds
fcmovbe
cmpsl
stc
insb
push
push
push
insl
mov
push
test
adc
data16
repnz
mov
sbb
test
repnz
push
cltd
cmc
sbb
add
mov
aam
ret
xchg
adcl
jl
mov
sub
jno
sub
jle
dec
jnp
addl
and
xchg
pusha
add
adcb
dec
jnp
call
int
imul
jge
mov
dec
lock
ss
xor
lcall
or
aad
cmp
and
outsl
jns
lods
movsb
mov
and
mov
addr16
ret
fwait
jae
stos
dec
stc
insl
fs
and
dec
and
mov
lcall
cli
lock
push
cmp
fisubrs
cmc
and
fistps
mov
add
or
repnz
shlb
loop
negb
xor
and
int3
pop
pop
xchg
cmp
ror
mov
xchg
add
sub
inc
or
inc
loop
adc
imul
aad
add
sub
sbb
sbb
test
jmp
outsb
aam
pop
jmp
adc
jb
fnstsw
dec
and
dec
fidivrl
aaa
andb
bound
and
mov
inc
fs
push
movsl
adc
addr16
popf
push
test
stc
sub
pop
addb
call
cs
setge
mov
repz
aad
sti
jnp
xchg
or
fwait
mov
push
pushf
popf
mov
scas
insb
icebp
andl
xor
mov
inc
xchg
push
mov
test
or
daa
dec
mov
sub
jg
mov
jno
dec
insl
call
lret
adc
and
and
mov
aaa
out
out
inc
xor
ja
ret
shlb
fadds
andb
dec
mov
jno
cmp
lret
add
das
fucom
or
lcall
dec
jmp
mov
inc
mov
xor
push
sub
rorl
out
je
js
pusha
daa
push
jne
xchg
jg,pn
xchg
stos
sub
rcrl
mov
daa
shr
push
inc
imul
fdivrl
add
mull
aas
jg
xchg
adc
rcr
push
es
xlat
test
adc
pslld
or
xor
xchg
cld
mov
int3
je
ds
jns
add
sti
fisubl
rcl
mov
aam
stc
lahf
and
test
lods
js
icebp
ds
dec
andl
and
pop
jmp
jnp
adc
scas
or
lret
in
dec
ret
stc
pop
icebp
outsb
das
ss
insb
adc
movsb
out
movl
mov
mov
je
mov
mov
xchg
jns
gs
aad
lods
jns
cwtl
push
das
das
fisttpll
push
repz
cltd
jl
sbb
bound
dec
lock
dec
lahf
cs
scas
lds
fstpt
adc
jbe
jp
mov
imul
sbbl
or
clc
cmp
mov
in
imul
mov
notl
out
mov
inc
fnop
lret
addr16
rcll
inc
lea
gs
nop
les
sbb
mov
lods
sbb
mov
mov
sub
add
cwtl
sub
je
pop
cmp
pop
jno
repnz
sbb
lods
mov
test
push
cltd
aad
ret
mov
push
xor
insl
subb
cmp
jne
in
sar
xlat
cltd
outsl
sarb
and
mov
subl
cmp
push
pop
pushf
pop
inc
dec
xchg
and
xchg
pusha
repz
add
push
aam
test
add
sub
add
dec
js
inc
fistpl
mov
xchg
repz
add
lret
js
sub
pop
cmp
fists
movsl
leave
mov
mov
jnp
pop
mov
mov
incl
mov
push
pop
cmp
fimuls
mov
icebp
xchg
push
notb
or
xor
jge
sub
sub
push
mov
lahf
je
arpl
mov
test
push
lea
cmpsl
loop
pop
jbe
or
ficompl
pop
and
pop
push
add
push
mov
bound
sbb
test
icebp
xor
push
inc
cld
test
pop
inc
fdivs
out
out
mov
rolb
xor
adc
jl
int
pop
mov
or
add
movl
dec
sub
mov
stc
aas
vmovntps
jl
test
mov
xor
clc
das
push
cmp
mov
cwtl
pop
mov
pop
movsb
xchg
add
xor
mov
sbb
fildl
xchg
mov
cmp
std
fistpl
setl
xor
test
leave
lods
xchg
cmp
or
mov
xchg
shlb
imulb
mov
fisubrl
inc
lea
xor
push
adc
xor
mov
in
pushl
sahf
cmpsb
data16
cmp
shl
pushf
adc
jl
subb
mov
adc
inc
mov
inc
inc
pop
xchg
fadds
es
out
in
pop
fcoml
adc
insl
iret
ja
ds
jbe
adc
cmc
js
std
mov
adc
les
lcall
dec
add
cmp
inc
es
scas
mov
aas
test
ljmp
in
test
nopl
pushf
fnstsw
scas
sbb
mov
and
pop
pop
inc
stos
cmp
push
shl
pop
cmpsl
movsl
shrb
fdivrl
test
test
popf
sub
pop
mov
fs
fisubl
dec
fcmovu
xor
push
push
fistpl
fidivs
sar
andl
and
jp
hlt
orl
cmpsl
dec
push
jae
and
pushf
mov
and
fsubr
aam
push
push
in
fiaddl
sar
xor
mov
jmp
lahf
push
xchg
pushf
pop
sbb
xchg
mov
fs
push
inc
ljmp
push
jg
push
push
in
lds
xchg
mov
rorb
jae
in
insl
cwtl
in
pushf
lcall
mov
jp
imul
sub
dec
imul
shll
jmp
sahf
ss
nop
sahf
out
outsb
daa
mov
xchg
aas
daa
jno
cmpsl
shll
fistps
lcall
pop
insb
outsb
stc
jmp
xchg
rclb
fs
add
loopne
cmpb
jge
xchg
mov
add
push
stos
push
loop
mov
fldt
inc
shlb
dec
cli
xchg
in
cs
or
jae
mov
lods
imul
sbb
and
and
daa
jno
cli
xchg
mov
add
cmp
inc
in
cmp
cmpsb
das
pop
das
pop
outsb
leave
icebp
test
xchg
adc
cmp
lret
sbb
add
cmp
rcrl
mov
lds
xchg
push
xor
es
int3
shrl
pop
cmc
xor
cmc
adc
push
roll
loop
lods
loop
push
push
rcrl
sub
out
cld
int
dec
movsl
and
inc
gs
push
cwtl
aaa
enter
sbb
lds
add
adc
mov
push
inc
dec
or
mov
dec
movl
or
or
in
mov
fiaddl
fmuls
ds
mov
hlt
cs
fdivrs
or
push
gs
push
aas
and
push
fwait
insb
cmp
sbb
xchg
mov
lcall
sbb
ds
cltd
dec
add
xor
inc
push
jg
imul
sbb
dec
js
rolb
inc
cmpl
and
sub
and
addr16
adc
jb
movsl
in
xchg
popa
sub
ret
mov
mov
fdivrs
ret
push
mov
movsb
add
popa
out
enter
jl
push
mov
cmp
sub
test
sbb
add
in
and
xchg
mull
mov
pop
mulb
daa
ss
inc
ror
lock
insl
add
sub
xchg
test
mov
push
xchg
repnz
fadds
jne
cli
stos
xchg
pusha
mov
or
pop
lret
call
mov
mov
js
pop
and
sbb
imul
dec
pop
ficompl
sbb
lahf
dec
pushf
pop
or
fmull
mov
es
xchg
mov
xchg
call
dec
inc
int
ljmp
adc
stos
or
es
mov
scas
movsl
mov
dec
cltd
stos
shrl
cmp
dec
cmp
je
std
add
or
imul
mov
cwtl
fidivl
outsl
cmp
mov
push
xchg
xor
popa
dec
ds
mov
and
inc
dec
and
rolb
push
xchg
and
mov
popf
mov
cmp
popf
add
out
fcompl
jle
inc
jo
adc
and
mov
movsl
out
dec
inc
les
pop
jmp
push
mov
out
sarl
pop
mov
push
xchg
cmpsb
in
xchg
add
xchg
xchg
lret
mov
mov
jb
sbb
popf
ss
jo
jecxz
data16
fists
pushf
test
jecxz
cmp
dec
int3
jb
inc
pop
jecxz
or
pop
mov
fisubrl
pushf
push
inc
xchg
ljmp
pop
add
arpl
mov
cmpb
sbb
push
mov
mov
test
enter
leave
push
cmpsl
fcompl
lds
jo
jno
pop
mov
mov
loop
dec
lahf
push
cltd
sbb
cltd
add
jno
fistps
popf
pop
les
jno
sub
jp
shlb
test
test
mov
mov
pop
add
dec
push
mov
mov
xchg
mov
sub
in
jecxz
hlt
cwtl
loope
in
iret
and
xchg
rclb
sbbl
je
and
fdivrs
lds
jmp
xchg
adc
out
imul
lock
out
and
hlt
in
fsubs
test
ljmp
inc
fwait
roll
cmc
mov
xchg
push
sti
stc
pop
aas
fisubrs
shrb
or
push
or
fmul
int
fnstcw
mov
or
mov
stos
sub
aaa
or
scas
cli
sub
sahf
lds
stc
mov
dec
pop
sub
mov
daa
or
jle
xor
or
pop
inc
aam
ret
std
jge
mov
ss
movsb
add
add
inc
scas
jge
cli
out
mov
push
mov
ss
loope
inc
lcall
xchg
ret
and
mov
xor
sbb
adc
dec
cmp
and
out
out
pop
fidivrs
in
xor
dec
and
jno
sbb
ret
in
mov
inc
pushf
imul
sbb
jo
mov
add
nop
push
test
mov
in
cmp
push
test
or
outsl
mov
mov
jmp
push
sbb
cmpxchg8b
inc
or
and
cmpsl
sbbl
imul
jle
cmp
sub
aad
and
push
mov
mov
pop
cmpsl
cmp
outsb
sbb
mov
xor
stos
cmp
pop
mov
jle
mov
es
add
movsb
das
push
mov
lahf
movsl
pop
jo
xchg
sarl
outsb
ficoml
mov
sub
data16
inc
add
mov
std
outsb
dec
and
out
out
add
sub
inc
out
adcl
divl
dec
std
add
or
adc
pop
add
mov
sbb
int3
mov
addb
pop
pop
out
jmp
dec
adc
adc
stos
mov
es
push
push
lahf
aad
dec
fbld
jae
mov
dec
ljmp
sbb
mov
or
inc
enter
cmp
push
lahf
call
xor
int
fdivrp
mov
fldt
adc
mov
dec
adc
or
addr16
xchg
pop
gs
daa
and
sbb
sub
aas
dec
pop
and
fsts
sub
int
ret
cmp
sarl
xor
push
testb
rorb
mov
sub
in
and
test
mov
add
fbld
push
js
pop
xchg
xor
jae
out
xchg
push
insl
outsl
jmp
xor
pop
cs
ja
adc
scas
inc
imul
sub
les
int3
jg
cltd
cmp
mov
cmp
xlat
xchg
mov
mov
xchg
cmp
aam
xchg
test
xchg
in
and
fimuls
insb
push
mov
pop
dec
jno
jns
xor
enter
test
jae
sub
hlt
filds
cltd
and
inc
pop
or
mov
jle
aam
sbb
outsb
mov
dec
cs
ret
mov
aaa
popf
push
mov
scas
dec
pop
inc
dec
cmp
into
in
xlat
sti
dec
jle
or
pop
push
cmpl
xchg
std
mov
cmp
mov
push
push
mov
popl
aad
ret
lgs
add
lock
jmp
shlb
pusha
xlat
mov
xchg
outsb
repz
es
pop
in
insb
xlat
jae
mov
mov
mov
ljmp
andb
pop
int
aad
lea
pop
jl
push
cmp
frstor
cmp
pop
je
jmp
add
mov
es
jmp
stos
cmpsb
adc
movsl
loop
pop
mov
inc
mov
out
mov
cmp
cmp
fs
xchg
push
mov
into
icebp
ds
sub
lea
xor
subb
or
int
xor
testb
sbb
jnp
pushf
stos
loop
mov
jge
sub
inc
lret
add
xchg
sub
adc
push
mov
pop
fistps
rolb
cs
outsb
and
out
scas
cmpsl
push
ja
shrl
pop
cwtl
scas
aad
cmp
into
frstor
call
lock
push
and
lret
movsb
lods
cs
cli
mov
stc
shrl
xor
orl
lret
dec
popa
xor
add
iret
xlat
scas
and
adc
mov
jp
bnd
int
jbe
ret
cltd
mov
xchg
cld
test
and
andb
xlat
xbegin
jae
aad
cmpsb
push
enter
dec
popa
lea
xchg
addr16
and
js
adc
jmp
fidivl
or
fnstcw
popa
cmp
ret
dec
and
pusha
cwtl
adc
js
dec
popa
aam
aas
mov
ficoms
inc
xchg
mov
int
andl
xchg
pop
add
pop
in
and
mov
push
mov
push
mov
cmc
cmp
mov
push
and
and
mov
test
jmp
dec
xorl
xor
test
xchg
lret
bound
adc
add
push
inc
adc
adc
push
out
in
les
mov
pop
push
or
cmp
xor
mov
shlb
ljmp
lret
shll
notl
imul
mov
fdivr
aad
sbb
mov
mov
fcomip
ss
push
inc
bndstx
xor
or
mov
dec
pop
or
mov
cmc
fcompl
nop
jno
std
fiadds
xor
shrb
scas
pop
inc
inc
outsb
pop
pop
ljmp
lock
insb
and
pop
std
inc
sub
inc
jecxz
add
and
mov
fs
int
xchg
test
jns
ret
pop
and
push
mov
lea
decl
inc
adc
dec
jg
out
mov
push
daa
push
rorb
cmp
lret
push
mov
jg
sbb
cld
mov
mov
addr16
sbb
sub
cmc
cmp
call
addr16
sub
lea
jo
mov
mov
mov
das
ljmp
fstpt
dec
push
push
adc
rep
sub
dec
mov
loop
push
and
cmovg
outsl
inc
loop
lret
push
lds
enter
cmp
mov
rol
loope
or
inc
out
idivb
jg
sbb
mov
and
mov
out
insl
xor
or
ficoms
sbb
cli
out
cmpsl
scas
cmpsl
inc
rcrb
cmc
dec
movsb
lcall
xor
inc
mov
xchg
fsubrs
jo
stos
and
fisubl
repnz
push
and
insb
sub
or
lret
and
pop
sub
arpl
lret
push
fnstenv
push
mov
and
shlb
pushf
inc
or
ret
xor
sbb
std
je
inc
adc
pop
pop
or
aad
mov
xor
cmp
cmpsl
test
add
les
mov
lea
push
in
lds
or
sbb
data16
mov
mov
or
lcall
sbb
or
lahf
pop
int
jmp
pop
nop
add
repnz
loopne
inc
pop
test
mov
shll
loopne
daa
gs
pop
pusha
mov
mov
lock
adc
mov
pop
pop
pop
cmp
pcmpeqd
testb
scas
in
xor
mov
icebp
sub
test
mov
sub
stc
das
xchg
stos
fistpll
repz
cmp
mov
mov
mov
rcrl
cld
inc
xchg
rorb
and
mov
jne
aas
popl
mov
mov
cmpsl
shr
int3
inc
lret
push
fwait
push
gs
pop
adc
retw
sub
lret
adc
sbb
mov
out
jnp
fadd
dec
repz
dec
adc
mov
outsl
mov
scas
mov
sahf
or
sub
dec
jg
jmp
in
stos
out
clc
mov
int3
sub
cmp
stos
cld
xchg
adc
call
sbb
andb
or
movsb
cmp
sbb
push
cmp
dec
sub
imul
mov
adcl
xchg
aaa
mov
orb
jbe
mov
xchg
cmp
push
aaa
xor
push
jae
insb
stos
js
daa
add
pop
xchg
call
or
and
pop
adc
jne
xorl
or
xchg
sbb
std
mov
xchg
mov
adc
lcall
inc
imul
add
fwait
lret
xor
shl
jb
pusha
push
dec
adc
sbb
and
push
push
in
lret
add
pop
clc
movsl
push
sahf
fst
sbb
cmp
aas
ss
sub
mov
shlb
mov
das
lret
out
jae
sbb
cs
sbb
inc
inc
in
adc
cld
fsubrl
dec
repz
push
jne
rorl
push
addl
ss
sbb
inc
mov
jae
sub
mov
lcall
or
scas
ljmp
rcrb
xchg
xchg
add
leave
out
paddd
neg
ss
mov
dec
and
les
mov
sarb
mov
ficomps
push
add
xchg
cmp
lret
cmp
cmp
addr16
sub
subl
lcallw
sub
pop
rcrl
imul
mov
inc
fwait
imul
test
fisttpll
mov
push
iret
cmp
rcrl
arpl
nop
ss
popa
xchg
push
and
das
aam
test
xor
test
mov
push
test
fisubl
stc
in
jl
push
inc
jno
cmp
xchg
lods
frstor
xchg
push
stos
test
and
or
xor
bound
sub
and
je
mov
or
stos
fsubr
shr
xor
hlt
mov
xchg
jo
aad
mov
adc
cmp
jg
pop
or
movl
stos
rclw
sbb
test
cmp
xchg
add
sub
inc
mov
xchg
and
jg
les
out
test
cmp
ret
xor
push
inc
xchg
xchg
rcrl
add
dec
push
nop
push
icebp
xor
decl
mov
mov
sub
mov
inc
jcxz
lods
adc
or
bound
mov
les
pop
out
daa
jb
add
and
ret
nop
mov
xor
in
mov
inc
leave
cwtl
adc
mov
dec
sbb
addr16
gs
pusha
jb
rorb
mov
adc
add
aad
pop
adc
inc
dec
xor
bound
mov
shll
inc
fptan
es
push
outsb
rcrl
in
out
popf
ss
jne
cmp
mov
adc
mov
push
sub
xchg
daa
push
ja
sbb
xorl
sub
dec
mov
pop
xchg
shll
fdiv
shlb
xchg
daa
enter
and
cmp
pop
popa
jmp
jno
sub
push
popf
outsl
adc
test
sbb
xor
int3
dec
and
in
sbb
mov
mov
xchg
out
jge
test
or
push
inc
jg
dec
mov
cmpsl
or
push
jecxz
ljmp
cmp
xor
inc
adc
and
stos
call
sbbl
scas
cmp
xor
sti
add
adc
test
pop
nop
xlat
rcrb
arpl
test
outsb
mov
test
lret
andb
jo
cld
sub
push
pop
pop
popa
inc
mov
movsb
pop
lcall
push
xchg
add
popf
sbb
push
lahf
push
push
insl
and
lcall
movsb
mov
push
xchg
lock
repnz
or
repz
jo
dec
pop
sub
add
cmp
inc
mov
xlat
mov
adc
dec
push
xchg
cli
add
ss
aas
stc
filds
bound
popa
nop
xchg
sbb
add
adc
dec
cld
fadd
out
adc
je
xchg
mov
sbb
sub
stos
orb
inc
cltd
inc
inc
outsl
movsl
ret
imul
clc
lds
dec
push
jno
mov
imull
xchg
xchg
and
jns
sub
mov
in
push
add
frstor
xorb
xchg
mov
das
movhps
loope
outsl
rol
mov
jne
out
loop
xor
popaw
pop
inc
inc
push
xchg
dec
aad
repnz
dec
cmpl
into
je
push
cmp
mov
mov
stc
ja
inc
xor
xchg
xchg
push
fnclex
aad
lcall
cmc
inc
pop
stos
push
sbb
xorb
je
cli
outsb
faddp
xchg
xchg
outsl
in
push
adc
adc
popf
push
insl
pop
add
pusha
cli
mov
push
pop
dec
mov
xorb
mov
pop
xor
sub
cmp
cmpsl
mov
mov
sbb
das
adc
test
jl
sarl
add
xlat
mul
push
jb
stc
adc
stc
add
cld
hlt
pop
insb
sti
cltd
scas
mov
push
adc
bound
dec
xlat
icebp
lods
movb
in
jmp
inc
cmp
vmovlhps
push
sarb
xchg
cli
cmp
xchg
inc
and
repz
sbb
std
jo
lahf
or
mov
sbb
js
cmp
jns
or
cmp
jbe
lahf
inc
xchg
test
or
jno
lea
fs
and
sub
fwait
mov
nop
out
dec
inc
jno
push
shlb
lcall
scas
lret
mov
mov
mov
mov
sti
movsl
arpl
add
lods
sub
insl
arpl
mov
fnstenv
outsb
pusha
jo
inc
mov
sub
call
lcall
bound
adc
test
pushf
rcrl
mov
roll
call
mov
dec
sub
shrb
add
jmp
fimuls
push
mov
mov
repz
cltd
pop
pop
lahf
out
pop
aad
adc
and
ret
xchg
jne
in
jo
xor
movsb
in
shl
and
decl
es
jo
sahf
mov
loope
pop
inc
adcb
jns
mov
lods
shlb
sub
and
lcall
mov
inc
out
stos
inc
jno
mov
loop
int3
add
jl
mov
lcall
js
pop
xor
bound
movsl
lods
shrl
pop
pushf
icebp
adcb
pop
pop
xlat
vmread
adc
and
push
and
cmp
enter
xor
mov
jmp
mov
rcl
xchg
inc
mov
mov
lods
outsl
jp
sub
add
popa
xor
or
mov
jg
adc
push
mov
aaa
jp
push
pop
pushf
jmp
xor
mov
movntq
mov
movsb
out
add
xlat
iret
or
inc
jns
aas
dec
dec
or
adcb
out
pop
pusha
fwait
dec
sahf
or
adc
ds
std
adc
xor
cs
xchg
insb
adc
xchg
xor
enter
ja
mov
stos
enter
add
mov
sbb
rcrl
cmp
xchg
mov
and
inc
inc
ja
rorb
and
jae
mov
scas
push
cmp
out
arpl
xor
sub
mov
jno
jbe
xor
inc
scas
idivb
push
cli
adc
mov
cld
iret
das
pop
in
repnz
xchg
dec
pop
add
xor
stos
pop
imulb
lret
xor
cmp
xchg
out
aad
fistpll
repnz
jno
jecxz
jp
pop
cmpsb
aad
adc
cli
imul
jbe
outsl
daa
dec
cmp
mov
pop
enter
cmpsl
sub
cmp
adc
or
inc
insl
push
outsb
pop
stos
popf
fwait
push
push
xlat
push
pop
dec
jl
jns
subl
test
in
mov
out
das
ficoms
add
cmpsb
xchg
outsb
lds
imul
and
nop
leave
inc
cmc
lea
clc
adc
mov
test
xlat
lcall
dec
test
or
push
pop
push
mov
daa
scas
fidivl
vpsubq
fsubrl
xchg
loopne
xorl
dec
fisubl
fistps
nop
or
movsb
or
aaa
fimull
dec
sbb
and
int3
sub
dec
aad
mov
outsl
push
cmp
repz
call
xor
shl
jl
ret
out
popf
mov
adc
into
std
add
mov
jl
mov
push
mull
aad
xchg
mov
push
xchg
mov
daa
or
dec
pop
addr16
jne
xchg
daa
lock
int
stos
jo,pt
rcll
cmpsl
inc
movsb
sub
and
imul
dec
xor
notb
cmp
in
pop
cmp
cli
jl
aam
pop
dec
or
pop
inc
std
mov
sub
sbb
sub
mov
sbbl
stos
in
mov
xchg
mov
sbb
and
cmp
bound
pushf
cmp
jne
mov
fildll
inc
insl
sbb
xor
out
loop
xchg
mov
jecxz
neg
daa
mov
pop
out
enter
dec
push
mov
iret
repz
fldt
data16
jo
inc
aaa
aad
sahf
jno
sbb
lea
mov
into
push
adc
xchg
aas
faddl
addr16
push
popa
mov
push
xchg
xor
cltd
jno,pt
mov
iret
jno
sub
rcll
mov
icebp
int
std
idivl
addb
sets
jmp
dec
or
cmp
fildll
cmp
mov
xchg
add
push
popf
push
cli
add
and
adc
dec
add
pop
dec
enter
js
jns
dec
popf
lods
out
mov
inc
mov
cmp
ret
jg
imul
add
mov
pop
out
lods
mov
rorl
cmpl
hlt
loope
fcompl
jns
sar
inc
jne
push
sbb
leave
xlat
inc
mov
incb
xchg
insl
inc
cmpsb
xor
fisttpll
int
pop
jae
rcll
fadd
enter
fsubrl
ret
inc
inc
outsb
ljmp
push
jp
rorl
jne
xchg
cld
jecxz
lret
or
or
fadds
sti
mov
push
push
adc
mov
jge
fcompl
sub
xchg
dec
xchg
push
outsl
add
mov
inc
inc
std
sub
movb
xor
and
sbb
lahf
rcl
xchg
aam
jl
leave
ljmp
leave
data16
cwtl
xor
mov
in
mov
mov
rclb
leave
sahf
cwtl
fsubrl
cmpsl
mov
xor
repz
jmp
inc
fimuls
xchg
jl
insl
mov
inc
inc
and
ja
test
loopne
fwait
test
ret
je
xchg
mov
testb
out
cld
inc
arpl
shll
mov
arpl
arpl
cwtl
mov
xor
adc
mov
les
jns
mov
imull
mov
sbb
stos
jno
inc
lds
nop
mov
mov
mov
jmp
repz
dec
sahf
ljmp
shrb
cmpsb
add
and
insl
sbb
adc
aam
pop
insl
dec
pop
fstp
in
mov
imul
inc
js
pop
dec
mov
adc
xchg
pusha
call
push
adc
icebp
aam
bound
pop
inc
das
jne
add
mov
js
jb
push
pop
lcall
stc
inc
jno
fcmove
fiaddl
push
fcom
adc
aad
mov
cmpsl
mov
fstpt
pop
and
xchg
push
lock
inc
push
repz
test
aam
xor
scas
and
mov
adc
fisubs
imul
rcrl
lock
mov
push
mov
xor
pop
mov
mov
dec
sti
aad
cmp
cmc
jge
dec
mov
popa
sbb
outsb
adc
or
add
ss
out
jmp
jecxz
xchg
loop
or
mov
mov
test
inc
aas
clc
xlat
adc
sbb
inc
or
cmp
xor
out
or
inc
aam
jnp
and
scas
ja
dec
jns
push
decl
mov
sahf
pop
or
mov
push
cmpsb
dec
and
aaa
cltd
das
insb
lcall
pop
pop
push
nop
mov
imul
popa
rolb
push
push
mov
test
adc
popf
mov
lods
cld
xchg
sbb
push
sbb
call
out
leave
mov
xchg
push
jnp
sbb
mov
xchg
pusha
lods
out
loopne
lock
fbstp
jnp
sahf
iret
orl
das
jp
mov
in
mov
out
ret
sub
xchg
ljmp
push
jbe
adc
jns
xchg
push
sub
pop
test
bound
ds
and
and
adc
mov
add
stc
cld
repz
loope
pop
mov
outsl
cs
mov
cltd
push
test
aaa
repnz
pop
push
addl
mov
mov
call
mov
lahf
push
xchg
sbb
test
pop
sub
shl
int
adc
arpl
call
jmp
nop
inc
mov
add
data16
enter
aad
pop
shlb
jnp
push
in
sbb
lea
add
jl
imul
pop
lods
and
ss
pop
add
cmp
outsb
fmuls
dec
rclb
loopne
lds
faddl
movsb
push
cmc
xor
xchg
es
into
jl
pop
add
lods
enter
or
fstl
dec
cltd
xchg
icebp
sub
mov
clc
cmpsl
rcrb
out
js
sbbb
lea
into
mov
out
jecxz
and
mov
lods
and
xchg
cmp
mov
es
push
xor
xchg
in
pop
pop
out
stc
mov
enter
fidivrs
cmp
xchg
sbb
push
add
aas
jbe
mov
aas
ret
lahf
out
lods
cmpl
int
je
pop
jne
test
das
cmp
adc
or
cltd
int3
pop
cmpsb
add
cmp
fs
inc
lods
adc
sub
nop
cmpsl
cmpl
cmp
mov
test
and
fs
jno
xchg
ss
or
xchg
jmp
fidivs
jge
ljmp
and
cwtl
lahf
mov
pop
les
xchg
mov
call
ljmp
mov
mov
sti
loop
shr
mov
repz
je
shll
mov
fwait
shl
cltd
cmp
loopne
and
jg
mov
lock
jmp
ss
loop
int
xor
xlat
inc
loopne
or
scas
dec
adc
lods
outsl
cmp
iret
notb
aad
jle
push
insl
sbb
je
inc
xchg
inc
aas
dec
pop
lods
adc
idivb
repnz
jp
and
or
pop
rorb
mov
into
mov
into
hlt
xor
shlb
test
fnstenv
pop
pop
fldl
inc
add
push
push
sub
or
adc
pop
ss
outsl
lcall
int
mov
push
xor
push
jb
jle
clc
test
lret
fnstcw
sbb
sub
dec
shlb
call
push
jbe
push
ja
repz
xlat
cld
dec
xchg
out
js
out
push
frstpm(287
aad
ljmp
jp
and
adc
gs
bound
add
adc
mov
cmp
jg
imul
pop
push
adc
xor
sti
cmp
sub
adc
mov
dec
aaa
aad
jbe
pcmpeqd
out
testb
adc
sub
sti
pushf
int3
adc
fisubrl
fcomps
or
out
ficompl
cmp
and
insl
ss
inc
hlt
push
cmp
bound
cmp
sbb
inc
mov
adc
pusha
sbb
scas
jne
out
mov
in
fdivrl
rorl
dec
mov
in
js
shll
adc
xor
loope
jge
test
cmp
addr16
mov
xchg
mov
or
ss
dec
cmp
inc
das
xlat
cmpsl
test
xchg
movsl
nop
sbb
repnz
inc
mov
icebp
mov
cwtl
inc
pop
pop
xor
xor
jl
adc
in
idivl
push
ret
cli
cmpsl
ret
add
enter
outsb
bound
cmpsl
adc
popf
das
lock
shl
fisubrl
fidivs
jo
pop
gs
frstor
dec
insb
lea
adc
lock
dec
movsl
test
rclb
shll
insb
and
bnd
fwait
lods
call
rcrl
jbe
lea
dec
xor
pop
pop
dec
xchg
into
mov
mov
orl
shrl
imul
ret
xchg
cli
rcrl
out
sbb
fisubrl
add
call
adc
aaa
int3
jbe
mov
add
out
ret
mov
and
int
popf
inc
bswap
mov
je
pop
fs
mov
adc
mov
inc
dec
mov
push
bound
push
jp
cmpsl
push
jno
pop
rclb
sti
sbb
and
pop
jno
mov
inc
into
sub
xor
pop
lcall
sbb
in
pop
mov
icebp
push
mov
mov
insb
pop
test
aad
not
rorb
loopne
bound
loopne
xchg
mov
mov
xorl
mov
lock
outsl
dec
mov
cs
lock
sub
sbb
jle
cmp
sbb
fidivrl
sbb
subl
loope
ja
mov
out
movsb
lret
dec
pop
adc
pop
pop
sar
inc
scas
add
cmpl
jmp
sub
mov
in
push
rcrl
mov
cld
cmp
ja
sarb
notb
push
mov
and
xor
adc
bound
xchg
ja
sbb
dec
sbb
inc
cmp
inc
pop
test
jnp,pn
nop
add
add
jb
movsl
push
test
mov
mov
test
ficompl
fcmovb
mov
mov
inc
movq
push
imul
aas
mov
fbstp
adc
jp
fcmovbe
lods
push
fisubrl
or
adc
clc
jg
leave
dec
pop
mov
pop
mov
or
mov
cmpsl
mov
sbb
inc
movsb
xchg
scas
jo
mov
xchg
xchg
sub
loope
xor
xchg
lahf
adc
xchg
les
imul
xor
xchg
jle
add
fimull
add
lds
mov
ret
dec
adc
mov
sub
idivl
stos
inc
ja
xchg
jns
fimull
int3
bound
or
jbe
outsl
jecxz
mov
loop
xorb
aas
adc
mov
mov
jne
aad
jae
push
ljmp
push
idivb
das
sti
rol
pop
mov
push
dec
dec
mov
xchg
cmp
cmp
adc
out
mov
sti
push
mov
adc
push
lods
push
push
xor
adc
xor
mov
mov
pusha
push
leave
pop
movb
in
mov
sbb
and
inc
mov
test
sbb
test
fimull
pop
mov
adc
jnp
xchg
jo
ja
inc
cmp
fbld
arpl
fcmove
mov
cmp
push
loop
push
popf
fistpll
sbb
jnp
dec
fcoml
push
ja
jb,pt
lret
sti
cmc
and
jnp
jne
push
inc
mov
push
cmp
fidivs
bound
push
lret
and
mov
sbb
jl
out
out
cmp
clc
inc
sub
jnp
inc
jl
andl
mov
mov
xor
or
sarl
fldenv
sbb
in
mov
movsl
mov
cli
xchg
iret
jo
icebp
sbb
mov
cli
int3
dec
cmp
sub
jg
cmpsb
mov
push
out
xchg
test
push
xchg
fnsave
pmuludq
push
das
pop
addr16
xchg
loop
in
mov
gs
xor
int
xchg
xchg
dec
push
jg
push
shlb
sub
sbb
fnstenv
and
sub
sbb
cmc
aam
fsubrl
test
hlt
jae
lcall
xchg
pop
lock
mov
adc
sahf
xchg
movsb
xor
inc
sub
cli
xchg
loope
stos
pusha
enter
sbb
xchg
in
ret
jb
push
das
cmpsb
jns
inc
xchg
add
xor
add
lahf
fcoms
pop
or
mov
add
mov
jno
sub
mov
andl
inc
stc
mov
xchg
mov
icebp
xor
out
scas
mov
jmp
inc
cmp
imul
mov
rolb
ss
pop
scas
add
push
lds
dec
adc
ret
or
dec
push
mov
aaa
cmp
xor
lea
mov
mov
stc
mov
pop
ljmp
addr16
pop
xchg
dec
cld
cmp
pop
clc
mov
das
daa
cmp
push
ja
or
xor
scas
add
cs
loope
mulb
dec
out
push
push
mov
js
jae
lods
leave
pop
sub
gs
test
sahf
jbe
push
adc
popa
sub
pop
xchg
xor
cmpsl
cld
sahf
add
sub
xor
or
add
mov
sub
sbbb
cmp
and
jp
mov
stos
push
xchg
mov
roll
out
stos
or
cs
mov
dec
xchg
cmp
sbb
ret
stos
movl
cld
adc
sbb
pusha
and
or
push
scas
int3
fwait
mov
pusha
orl
decb
mov
cmp
in
lcall
fbstp
fcompl
or
stos
cld
pop
xlat
xor
fisubl
mov
sarl
dec
adc
cs
stos
add
adcl
fiaddl
test
cwtl
stc
rorb
mull
insl
mov
insb
ret
push
cltd
loop
xchg
es
jne
xchg
out
repnz
fs
mov
mov
out
sbb
std
and
in
dec
cli
xchg
xchg
inc
mov
in
mov
push
cltd
es
sbb
mov
ljmp
in
adc
xor
sbb
mov
pushf
mov
dec
cmc
cmp
cld
xorb
mov
out
data16
cmp
fmull
and
lock
out
sbb
cmp
or
push
fcomps
add
les
xor
cmp
inc
sbb
cmp
jle
stc
lcall
jecxz
push
push
daa
stos
pop
push
imul
sbb
mov
arpl
add
xchg
push
ss
lock
lock
pop
popf
les
xor
insb
push
sahf
lret
enter
xor
cli
fisttpl
lods
inc
outsl
sbb
ret
insl
fwait
jmp
out
lret
push
insb
int
mulb
movsl
idivb
iret
sbb
jo
or
and
pop
mov
insl
jle
xchg
adc
bnd
and
fisttpl
movsb
add
hlt
mov
pop
incl
out
add
inc
int
fsubrl
jno
or
push
imul
sbb
and
scas
bound
mov
inc
pop
shl
add
idivl
iret
out
adc
mov
in
pushf
aaa
mov
and
jmp
jg
idivl
jne
lods
jne
mov
or
inc
bound
divl
jb
or
jae
pusha
jns
je
mov
fstps
mov
push
insl
idivl
ret
addr16
fldt
xor
push
or
mov
loopne
test
insb
ss
jne
xorb
mov
push
jae
mov
out
and
lods
scas
push
mov
shll
adc
cmpsb
ja
in
jg
inc
insl
and
ret
dec
aad
push
jno
push
add
sbb
cmp
js
mov
xor
xor
xor
test
jno
outsl
popf
push
jmp
pop
xor
adc
cmp
adc
loope
sti
mov
mov
mov
aam
push
leave
inc
loopne
lods
push
adcl
pop
aad
testb
pop
mov
mov
aam
inc
sub
add
inc
in
and
push
test
ljmp
jnp
pop
outsb
lock
lds
mov
subl
sub
adc
insb
sti
lret
mov
test
mov
daa
mov
ss
imul
push
mov
sbb
inc
sti
cmp
push
lods
ret
mov
repnz
push
imul
out
sbb
xchg
jecxz
or
inc
rorl
out
xor
push
xor
test
cltd
fidivrs
mov
add
lock
xor
push
sub
pop
xchg
mov
push
push
or
addr16
add
jnp
cmp
xchg
andnps
ror
mov
mov
pop
loope
xchg
mov
xchg
inc
dec
lea
cmp
jbe
adc
lahf
pop
fidivl
inc
negl
fsts
xchg
dec
sbb
mov
xor
push
pop
das
mov
and
xchg
xchg
addb
ljmp
lock
fsubs
fsubl
stc
into
jnp
cmp
mov
pop
inc
roll
cwtl
cmp
cmp
sub
fptan
lea
mov
jmp
js
mov
xchg
dec
fimuls
jno
push
gs
fdivs
test
sti
adc
ss
test
scas
sti
popa
pop
inc
push
sub
add
inc
pusha
adc
mov
lahf
dec
mov
xchg
mov
xchg
pop
gs
cli
lcall
inc
xor
push
xchg
leave
stos
mov
cmp
adc
mov
sub
popf
cmp
mov
shlb
repnz
xor
icebp
test
mov
sbb
insl
sti
mov
cltd
adc
repnz
sar
mov
push
mov
lret
adc
push
fistps
mov
mov
push
insl
mov
sbb
jbe
lea
loope
add
pop
inc
mov
loop
in
insl
cli
xchg
inc
and
sbb
push
pop
and
mov
sub
add
dec
and
jge
cmp
into
mov
stc
xor
loopne
mov
xor
adc
mov
pop
outsb
pop
cwtl
cld
mov
dec
lock
dec
xchg
loop
es
lea
mov
nop
xor
xchg
clc
je
addr16
test
out
insb
fiadds
cmp
movsb
jno
mov
push
xchg
ljmp
xchg
mov
setl
das
out
xor
or
jl
fadds
icebp
les
insb
loop
push
xor
int3
mov
out
sti
fld
movsl
fldl
push
stos
aad
and
xchg
cwtl
sub
push
fnsave
dec
jge
fnstenv
dec
aas
cmpsl
lahf
rcrl
insl
movsl
or
dec
sub
pop
ss
mov
inc
mov
push
mov
sbb
jne
ret
pop
mov
xor
push
push
sub
movl
mov
push
dec
and
adc
stos
in
scas
cmp
mov
dec
aas
xchg
add
aam
das
adc
dec
mov
sub
cmpsb
rcl
mov
push
dec
sarb
pop
mov
out
ror
cwtl
stos
ret
jnp
stos
xlat
loop
and
lea
dec
repnz
fldenv
mov
push
push
adc
dec
ljmp
scas
jle
loop
cmpsb
sub
fsubr
bound
dec
pop
add
adc
adc
add
ror
imul
push
andl
outsl
mov
sub
jae
xor
dec
test
pushf
jmp
lds
mov
scas
cmp
sub
rol
inc
sub
pop
addb
mov
clc
in
cmp
sarb
dec
adcb
and
outsl
cmp
add
outsb
repnz
mov
adc
fcomps
test
mov
sbb
sbb
and
iret
add
and
push
daa
in
push
xchg
call
pop
ffree
loopne
lea
repz
lret
rorb
fiaddl
sbb
mov
ja
mov
jae
aad
xchg
mov
enter
and
push
fcompl
test
lds
jmp
bound
popa
cmp
rorl
xchg
rcrl
insb
stos
fstpt
and
dec
xchg
sub
inc
jae
dec
lods
adc
sbb
push
cmp
xchg
or
nop
shl
sbb
movsb
repnz
cwtl
sub
sub
jne
enter
adc
shlb
add
and
and
dec
lds
test
into
dec
inc
and
or
movsb
sti
push
dec
add
clc
add
inc
jne
sbbl
xchg
push
xor
push
xor
xchg
sub
mov
or
push
and
dec
push
pushf
mov
imul
in
imul
adc
fwait
cld
or
fcmovnu
addr16
dec
adc
xchg
ja
enter
inc
mov
xlat
es
dec
pop
cmp
ss
les
jge
std
fcomps
fs
cmpsb
push
aaa
xchg
cmp
iret
mov
mov
test
push
cli
pop
sub
cmpsb
or
in
mov
testb
cmp
xor
aam
mov
xchg
js
int
stc
cmp
aam
out
add
xlat
aas
jmp
lods
mov
push
imul
mov
addr16
sub
cld
mov
imul
cmp
insl
iret
xchg
mov
adc
in
mov
push
scas
or
pop
xor
mov
xchg
ljmp
fimull
mov
mov
inc
jb
pop
imul
das
cmp
scas
in
add
or
mov
mov
int3
dec
pop
lods
cmp
shll
push
fwait
xchg
iret
mov
shll
and
sub
push
dec
dec
aad
dec
add
movsb
jbe
or
jns
mov
out
jle
cmp
cmp
test
inc
mov
cmc
hlt
jno
and
jnp
iret
dec
mov
shlb
sarl
mov
mov
sub
rcrl
add
and
mov
mov
shl
mov
jmp
push
or
out
and
push
and
pop
xchg
cmp
jb
mov
cmpb
jp
mov
inc
loope
or
mov
jne
scas
jecxz
push
js
push
mov
cs
jmp
ja
jle
xchg
in
cmp
dec
pop
xor
lods
rorl
movsl
sti
jecxz
or
jle
and
xchg
add
cmp
and
xor
scas
aam
sti
ja
jle
arpl
mov
pop
int3
jb
dec
arpl
sbb
xchg
pop
adc
stos
sub
cmp
cmp
shll
negl
add
or
loopne
jp
movsl
cmp
jp
pop
lea
push
mov
sub
xor
cld
mov
and
js
rolb
pop
sub
mov
add
xabort
les
aam
fidivs
loop
insl
push
or
or
shrl
jnp
lods
pop
inc
cmovne
mov
xchg
in
xchg
sbb
and
sbb
add
jmp
add
hlt
mov
rolb
xchg
cmp
test
lds
add
icebp
data16
int3
sbb
jmp
adc
push
stos
hlt
mov
lcall
xor
xor
mov
aad
add
jb
frstor
into
pushf
je
fs
mov
call
mov
iret
lret
sbb
dec
test
xchg
fwait
jp
inc
imul
inc
sub
bnd
inc
enter
mov
jp
xor
add
data16
pop
mov
iret
add
push
stc
test
add
out
and
nop
inc
push
nop
loope
loope
push
ljmp
out
js
or
jae,pt
sub
sbb
andb
lcall
cmpb
in
lds
push
jns
pop
and
hlt
cmpsb
fiadds
and
imul
lret
and
btc
aam
and
cmpl
sbb
mov
xchg
push
fs
stc
or
rorl
pop
hlt
mov
dec
mov
dec
xchg
xor
pop
xlat
pop
xorl
lahf
ljmp
popf
lds
aaa
arpl
movsb
aad
mov
add
mov
mov
ret
scas
pop
ds
sbb
jbe
out
jp
stos
outsb
jge
sti
fidivl
cmpb
imul
cli
loopne
stos
jno
pushf
nop
jl
lret
xchg
cli
push
xor
insl
incl
orb
out
gs
clc
sbb
mov
aaa
lds
dec
outsl
sahf
popa
or
add
insl
shll
pop
push
xor
je
or
mov
call
dec
and
jno
push
dec
xchg
push
subl
mov
inc
lret
mov
push
pop
sbb
inc
lock
clc
jb
pushf
jmp
xlat
mov
dec
pop
or
js
xor
popa
icebp
add
pop
jo
mov
out
fdivs
fisttps
and
aad
lods
push
inc
adc
daa
lods
jle
ffreep
gs
push
mov
sbb
or
jae
out
lahf
out
test
in
cmpsb
or
xor
push
pop
xor
shrl
cwtl
or
ss
mov
pop
fisubl
cld
cmp
ds
jb
xor
mov
dec
dec
jbe
mov
inc
dec
in
popa
cmp
lea
xchg
jecxz
add
adc
adc
jmp
or
mov
inc
rorb
mov
push
loopne
add
and
cmp
lahf
mov
inc
lcall
mov
push
arpl
bound
pop
mov
dec
or
leave
add
mov
inc
cmp
es
cmp
adc
ljmp
lock
scas
cli
push
sbb
inc
popa
jl
inc
sub
xor
mov
pop
mov
push
stos
nop
iret
bound
pop
jno
or
inc
popf
jg
xchg
xchg
mov
lcall
les
push
jo
sub
xor
sbb
or
rorl
mov
cmp
adc
pop
repnz
ja
mov
dec
negl
add
adc
jecxz
push
mov
nop
jg
jmp
fnstenv
imul
push
xor
jl
pop
out
aas
arpl
test
mov
test
lret
pop
out
popf
fsub
mov
dec
push
jno
inc
dec
jp
bound
and
stc
dec
xor
pop
cmpsb
xchg
mov
and
sahf
dec
cmc
ds
push
cltd
mov
pop
and
or
xchg
pop
loopne
mov
xlat
jne
loop
incl
jecxz
adc
xor
data16
push
mov
in
iret
movsl
fcoms
or
out
stc
fdivrl
jp
or
stos
jns
rorl
sub
and
cmpl
mov
lret
outsl
cmpsb
enter
pop
fs
xchg
rcrl
cmp
inc
mov
push
xchg
pop
repz
sarb
mov
roll
fxch
dec
shll
push
xchg
sub
add
push
in
adc
pushf
add
xor
cmpsl
sub
icebp
sub
jmp
imul
mov
adc
mov
orl
mov
pusha
mov
adc
repz
mov
negl
ficompl
cli
cmpsb
add
cmp
cmc
lea
mov
repz
fsubp
jnp
ret
cmc
xchg
subb
test
xor
mov
dec
and
push
movsb
ljmp
lret
push
sarb
jns
mov
cld
pusha
lods
xchg
fidivl
test
dec
cltd
addl
add
outsl
or
fmuls
mov
cmp
mov
adc
outsl
in
es
xor
and
cmp
xchg
push
pop
xchg
and
les
cmp
loope
insl
mov
mov
incb
and
xor
repz
cli
xor
insl
pop
pop
push
jno
inc
scas
cmp
jecxz
cmpsb
dec
nop
push
filds
cmpsl
or
inc
inc
mov
notb
inc
mov
les
sbb
mov
xchg
aam
iret
adc
xchg
inc
sbb
xchg
shrb
push
shlb
std
and
pop
push
inc
inc
pusha
jne
sub
push
mov
loopne
pop
cwtl
inc
jno
jbe
cmpsb
in
xor
dec
dec
pop
mov
sbb
lcall
lcall
ljmp
std
popa
loope
imul
sub
push
mov
add
push
pop
cmp
movsl
sahf
cmp
xchg
data16
rorb
xchg
xor
push
mov
sti
mov
xor
push
stos
jle
in
cmpsl
loop
add
insl
ret
add
sub
sar
dec
inc
pop
mov
inc
dec
mov
mov
add
sbb
xor
push
mov
arpl
das
rcll
add
mov
jnp
hlt
xchg
push
fldt
loop
les
and
mov
stos
xchg
add
adc
adcl
mov
rcpps
push
pushf
pop
filds
mov
pop
loop
fwait
adc
jns
popf
cld
push
fcmovb
fdivl
push
pop
and
hlt
nop
xlat
int3
mov
jne
scas
xchg
ja
stos
rorb
lret
int3
inc
repnz
mov
or
cmpsl
dec
aas
jo
push
outsl
inc
fs
sub
mov
xchg
cmpsb
insl
test
jno
addr16
pop
aam
cltd
leave
mov
push
push
fsubrs
mov
sbb
fs
sbb
mov
push
aam
test
jge
int3
adc
fimull
fcompl
test
and
xchg
mov
enter
cltd
pop
mov
out
dec
and
jmp
fmull
aaa
inc
fwait
pop
lret
inc
lcall
sub
je
ja
mov
pop
jo
add
dec
flds
jmp
enter
adc
pop
pop
inc
xor
sub
lret
rorl
push
addr16
test
ss
negl
mov
jne
out
sarb
int
cmp
aam
insl
xchg
sub
cmpl
rcrb
hlt
xchg
inc
sub
xor
jb
adc
lods
jge
dec
add
jne
xchg
out
jnp
mov
sbb
cmpsl
and
aaa
icebp
lcall
xchg
andb
cs
fdivl
jle
aaa
pop
movsl
add
loope
adc
in
stos
mov
sub
stos
inc
or
stos
dec
ficoml
jo
stc
sub
mov
dec
out
stos
or
in
mov
data16
push
mov
mov
int3
flds
std
rcrl
mov
mov
adc
cmpl
xchg
or
outsl
sbb
or
bound
orb
and
jae
shll
imul
mov
lds
pusha
sahf
sbb
pop
cld
xchg
in
push
pop
dec
mov
add
pop
faddp
and
sub
sbb
push
mov
lds
lods
push
push
fsubs
clc
mov
cmp
sub
add
adc
call
pop
dec
bound
xchg
popa
fs
cmpsb
jbe
insl
fisubrs
or
aam
les
subl
push
add
sbb
gs
nop
lods
scas
mov
test
cs
sbbl
jnp
lods
mov
lret
fcomps
fistpll
inc
and
pop
and
mov
or
cmc
sub
sbb
mov
adc
mov
mov
mov
cmp
loopne
scas
xor
mov
add
mov
shll
pop
mov
frstor
lea
inc
out
and
xor
cmpsb
and
out
pop
mov
out
sahf
insl
adc
nop
bound
cs
shlb
mov
lret
int3
shr
mov
xchg
push
mov
sub
xor
inc
ret
movsl
insb
jle
mov
cmp
sti
mov
push
test
sub
xchg
xor
sbb
sub
lods
sbb
or
jg
xchg
jp
xchg
test
xchg
imul
data16
out
jecxz
loope
mov
jae
sti
jb
or
ja
sub
movsl
mov
push
enter
add
imul
or
sub
lock
inc
push
movsb
push
push
bound
aaa
icebp
mov
sub
dec
jns
loopne
cmpxchg
adc
sub
rcll
cmp
rolb
xchg
imul
fcmovnbe
fbstp
pusha
out
adc
mov
add
mov
mov
add
test
pop
push
femms
repnz
stos
jno
stos
shll
dec
mov
data16
adc
ds
mov
dec
mov
jns
inc
jo
jno
insb
push
lret
pusha
mov
xchg
loopne
xor
lods
and
push
pop
pop
jno
adc
inc
test
in
inc
mov
shlb
enter
insl
pop
push
mov
inc
or
sub
aas
inc
sbb
lret
frndint
push
test
insl
movsl
stos
out
mov
jecxz
add
call
jns
add
bound
outsb
out
fcomip
mov
push
jecxz
xchg
or
test
dec
mov
das
cmp
push
push
je
in
inc
ss
out
add
je
cmp
pop
loopne
shl
xor
sub
cmc
pushf
fcoms
idivl
xor
rclb
mov
mov
out
add
shrl
cmc
pusha
mov
inc
pusha
pop
and
ret
dec
xor
adc
dec
je
mov
adc
leave
sti
mov
cmp
lds
mov
jnp
xlat
jo
push
ret
push
push
pop
mov
loop
ja
jecxz
dec
jbe
ljmp
adc
inc
arpl
outsb
push
ret
pop
fnstcw
sbb
je
clc
gs
cmp
xchg
imul
push
stos
rcll
lret
leave
jo
loop
sub
mov
inc
sub
clc
pop
pop
test
cmp
testl
pop
dec
xchg
jg
das
call
scas
xchg
mov
shlb
add
inc
out
pop
into
ss
adc
arpl
adc
js
inc
ljmp
aaa
mov
push
pushf
jnp
lret
push
sbb
aad
inc
jp
push
fwait
adc
movsl
into
inc
daa
adc
popf
cld
inc
xor
icebp
mov
sbb
inc
push
sbb
fs
push
pop
fucomp
mov
add
mov
or
pop
aad
xchg
inc
scas
xchg
xor
popf
data16
psubb
test
imul
push
mov
add
cmc
xchg
or
ljmp
shrb
dec
dec
sub
cmp
pop
fnstenv
inc
icebp
xchg
pop
xor
push
push
rcrb
in
inc
inc
leave
mov
repz
ja
into
sub
pop
jbe
mov
rcr
jp
addr16
jb
sahf
mov
xchg
push
mov
lea
adc
popf
daa
test
fdiv
mov
mov
daa
loope
ljmp
ja
das
cwtl
dec
in
push
add
sbb
fs
pop
and
push
and
das
vandpd
jp
dec
lahf
pop
dec
pop
sbb
divb
push
mov
inc
xor
inc
xchg
lcall
sarl
sbb
and
and
popf
push
push
pop
sbb
rorl
rcr
ja
shll
in
popf
sbbl
out
mov
jle
push
mov
sbb
push
sbb
mov
jnp
xor
jbe
xchg
in
jns
or
sub
and
cmp
fldcw
and
loopew
out
jmp
push
fsts
inc
sub
xorl
mov
sti
scas
pop
out
mov
stos
adc
ds
cmc
imul
jle
adc
ret
cmpsb
je
mov
add
pop
xchg
mull
enter
sbb
xor
xchg
ffree
push
xor
mov
sbb
cmp
xchg
sbb
sub
xchg
cli
mov
popa
ret
and
int3
std
negl
ljmpw
xchg
scas
pop
pop
imul
xchg
jno
insl
fcomp
lcall
cmp
jge
imul
ds
fwait
loop
das
je
push
cltd
call
xchg
and
cmp
xchg
adc
out
add
adc
testb
lods
loop
out
ds
popa
stos
std
mov
fidivl
add
and
in
std
mov
aad
aad
jns
inc
fcompl
fmull
mov
lds
push
mov
xchg
add
pusha
pop
sub
aad
cmpb
xor
roll
sbb
inc
sub
lahf
jg
push
clc
in
filds
dec
and
push
mov
jmp
push
jo
fcomp
mov
mov
outsl
fdivrl
jns
xor
lcall
add
ja
xchg
pop
sub
test
sub
xor
lret
fnstcw
outsl
fsubs
cmp
push
lea
jne
add
add
mov
fsubrs
add
int3
sub
pop
xchg
jb
mov
mov
xchg
inc
and
add
shlb
out
scas
aas
leave
std
xor
aam
cld
popf
inc
clc
sbb
aaa
daa
fwait
out
out
scas
leave
mov
fdivrl
xor
pop
ret
and
cmp
mov
inc
sub
nop
sahf
or
cmp
mov
mov
fildll
xchg
repnz
sti
sbb
dec
andl
lock
nop
xchg
cmc
push
addl
jge
mov
sbb
imul
jae
insb
inc
ljmp
test
jbe
or
test
sbb
hlt
cmc
mov
ljmp
aam
push
jo
jmp
cmpl
cli
lcall
mov
pop
push
in
jg
cmpsl
fsubrp
pop
inc
idivl
xorb
pop
jo
or
jb
xlat
add
dec
push
repnz
jle
sbbb
cmpsb
mov
adc
or
fwait
fs
dec
cwtl
js
mov
jg
dec
inc
inc
call
sub
xchg
add
xchg
jb
ja
push
cmp
dec
loop
imul
rcrb
andl
xor
fsubl
adc
sub
push
lds
or
pop
jp
mov
jp
fsubp
dec
nop
pusha
dec
sbb
mov
mov
lds
mov
and
cmpl
dec
rep
mov
sbb
inc
pop
mov
dec
je
fldl
lods
out
in
int3
sub
xor
inc
xchg
and
mov
xor
out
mov
and
rcr
and
stos
flds
jno
or
scas
jg
sub
out
xchg
mov
push
sbb
repnz
push
push
sub
ss
adc
adc
xchg
adc
outsl
push
lods
cltd
mov
repnz
push
mov
popa
sub
fs
out
loop
loop
test
push
mov
aad
cmp
xchg
xor
xchg
dec
imul
adc
or
test
xorb
cwtl
cmp
test
and
ret
lds
sbb
shll
stos
in
or
ss
jns
or
push
add
adc
jge
sti
mov
out
cmp
sub
jg
push
and
in
pop
cmp
movsb
inc
or
mov
aam
in
pop
int3
inc
icebp
stc
jmp
clc
in
in
sbb
push
inc
shlb
rorl
fs
push
inc
add
jne
add
insl
mov
mov
mov
xchg
rol
sbbb
testb
cltd
hlt
scas
sbb
fmuls
enter
add
fdivr
mov
dec
jecxz
jne
imul
ljmp
cmp
mov
sbb
jle
loope
and
imul
lahf
imul
xor
mov
out
mov
add
call
movsb
stos
loopne
int3
inc
adc
scas
into
mov
lods
call
sub
pusha
push
adc
push
sti
lcall
enter
in
scas
out
jo
mov
adc
mov
in
leave
loop
int3
inc
les
nop
cltd
jecxz
mov
dec
cmp
mov
mov
les
or
xor
lock
movsl
mov
xchg
or
movsb
aaa
jmp
imul
jge
in
ss
add
cmpl
mov
std
inc
pusha
xor
jmp
ret
cmp
mov
jmp
mov
stos
sbb
adc
push
rcll
imul
and
mov
sbb
pop
mov
stos
adc
sub
jge
adc
fs
and
stc
das
addr16
and
cmp
xchg
sarb
loope
jne
mov
ret
test
or
and
mov
and
push
xchg
jp
movsl
in
pop
fwait
sub
lea
daa
repnz
mov
and
stos
pop
sti
inc
xchg
push
lock
pop
pop
aam
mov
dec
and
int3
pop
mov
inc
test
daa
push
and
jmp
pop
xor
sarl
std
or
jae
mov
jge
stos
pop
sub
and
xor
mov
stc
stos
pop
sbb
xchg
enter
sbb
cmp
je
adc
lcall
nop
mov
mov
mov
jmp
pop
fwait
cld
sti
int3
imul
dec
cmpsl
mov
test
sub
jl
ret
jl
std
mov
mov
push
sbb
aad
cmp
pusha
mov
mov
mov
mov
inc
push
call
jmp
stc
inc
inc
pop
outsb
cmp
and
mov
inc
push
mov
es
aas
pop
adc
imul
pop
imulb
jne
cmp
add
imull
fmull
lock
sbb
sub
je
shlb
stos
mov
xor
lods
pushl
inc
out
adc
add
addl
rcl
mov
sar
stos
push
je
jle
add
pop
dec
xor
add
inc
iret
push
mov
fmull
cltd
dec
push
int
test
lods
or
add
mov
aad
sbb
pop
shlb
int3
pop
push
jmp
mov
sub
mov
ja
das
lahf
outsb
dec
shll
mov
jne
xor
in
and
decl
aad
add
jge
outsb
gs
pushf
sbbl
test
xor
sbb
dec
insb
rorl
mov
lcall
cs
icebp
arpl
or
fsubs
add
lds
out
daa
les
gs
adc
push
roll
out
gs
insb
mov
pop
sub
out
sahf
pop
loopne
fldl
mov
mov
sub
sub
fwait
mov
cmpb
xor
fnstsw
cli
jbe
shlb
mov
fistpl
dec
mov
insb
arpl
xchg
ficompl
arpl
outsl
cmp
lock
cltd
inc
test
out
mov
push
sbb
jl
cwtl
subb
adc
xlat
iret
repnz
psubw
sbb
or
mov
dec
adc
cmp
fs
push
push
aaa
or
aam
mov
xchg
mov
mov
xchg
addr16
adc
pop
repz
test
push
inc
and
mov
hlt
adc
cmc
sahf
lods
mov
out
adc
pop
dec
mov
nop
xchg
sbb
jl
push
fbld
fadds
pusha
add
jne
cmpsw
push
mov
dec
xor
push
pop
push
jb
ror
insb
ss
stos
xchg
aas
outsl
inc
adc
or
cmp
mov
outsb
out
xchg
adc
or
wbinvd
sbb
pop
mov
in
insb
pushf
or
outsl
push
mov
mov
xchg
test
lahf
mov
pushf
inc
repz
shrb
adc
out
loopne
sahf
push
push
pop
js
inc
imul
pop
dec
mov
loopne
jbe
lods
add
push
test
mov
lea
mov
adc
and
mov
call
pop
add
mov
or
adc
adc
test
or
ficompl
mov
rcl
adc
cltd
mov
cmp
orb
xchg
inc
movsl
mov
ret
mov
push
add
inc
xchg
mov
in
fwait
jmp
stos
pop
insb
pop
lea
pusha
or
mov
scas
in
ret
xchg
mov
dec
repnz
shlb
in
push
fildl
lahf
adc
aam
xchg
pop
data16
fnstsw
push
inc
and
jno
shll
les
jmp
cld
or
fwait
push
std
fcompl
mov
je
sbb
inc
out
sub
imul
cwtl
mov
out
xchg
imul
push
movsb
mov
jns
mov
or
pop
mov
mov
in
cli
ds
clc
lock
push
hlt
pop
hlt
daa
jp
cmp
out
inc
mov
enter
lods
jmp
push
jl
aas
inc
adc
or
fdivs
mov
mov
jecxz
incb
sbb
sbb
mov
insb
imul
pop
out
cmpsl
cmp
and
sub
imul
and
pop
ljmp
sub
xchg
or
push
mov
aas
xchg
push
sub
out
push
push
push
lods
or
cmp
sti
sbb
stos
and
ljmp
inc
add
xchg
ss
int3
sbb
fistps
sbb
test
dec
outsb
out
std
imul
sbb
xchg
mov
add
mov
pop
pop
and
adc
test
jno
inc
add
lahf
fwait
lods
into
push
push
jp
jmp
aas
mov
ret
sub
adc
outsl
std
sbbl
inc
mov
inc
xor
jmp
lea
jg
mov
inc
sbb
test
js
sub
imul
in
push
test
cmp
roll
jno,pt
inc
mov
mov
ret
iret
test
xor
pop
iret
pop
loop
push
mov
push
cmp
cmp
mov
inc
dec
out
in
and
nop
sbb
xchg
adc
add
in
call
int3
movsb
movb
dec
fldl
or
out
xor
aad
and
rclb
or
sub
sbb
loopne
popa
push
and
xchg
daa
mov
sbb
dec
les
inc
xchg
dec
mov
fistl
mov
sub
fmuls
and
prefetch
sbb
into
out
pop
cs
lcall
xlat
xchg
xchg
shll
ja
adc
fdivrp
xchg
or
push
leave
cmp
xor
push
push
sub
xor
xor
xchg
in
or
jge
cltd
xor
add
stos
daa
or
sbb
cmpsl
mov
inc
fstps
mov
cld
push
pop
and
inc
data16
in
das
cld
mov
fcmovbe
inc
enter
xor
es
push
xchg
sbb
je
jne
enter
std
jp
int3
gs
repz
xor
fstpl
insl
push
inc
in
sub
sbb
mov
jmp
std
in
dec
mov
scas
mov
lahf
cmp
push
std
mov
inc
fsubrl
scas
popf
pop
iret
aam
out
xor
mov
inc
adc
lea
and
push
jg
enter
push
push
adc
jno
mov
jmp
orl
add
push
xchg
add
push
pop
push
ds
sarl
sbb
inc
add
and
push
outsl
lods
sti
dec
push
stc
fbld
jp
pop
xchg
add
sti
mov
or
jl
int
shlb
add
nop
sbb
pop
or
arpl
xchg
mov
rcrb
mov
push
cmp
mov
outsb
and
out
mov
xchg
das
sbb
mov
jle
popf
cmp
jp
xor
cli
mov
jl
testb
push
mov
mov
sbb
dec
scas
push
xchg
mov
sub
out
and
das
loopne
rorb
ss
jno
stc
dec
lcall
inc
cmp
cmp
fdivrs
notb
repnz
mov
rolb
sub
icebp
cmp
in
mov
imul
test
mov
fnstsw
push
dec
lea
sahf
xchg
mov
neg
dec
cmp
cmc
mov
push
popa
and
mov
or
in
sti
lahf
mov
sub
cmpsb
adc
pop
mov
jle
sahf
outsl
sub
int3
jle
ljmp
prefetchwt1
or
push
pop
push
jecxz
lods
push
xchg
movsb
sbb
mov
xor
cli
mov
hlt
cltd
fmul
mov
fsubs
mov
cli
dec
dec
cld
shr
xchg
movsb
stos
int
mov
leave
push
movsl
insb
sub
pusha
inc
xor
int
int
pop
sbb
fmul
inc
std
pusha
subb
movsl
ficoms
int
or
inc
imul
push
mov
lret
std
mov
insb
mov
icebp
sub
jge
or
call
sub
mov
mov
cmp
mov
add
sbb
out
mov
push
out
mov
stos
repnz
inc
xchg
sub
add
or
sub
pop
sub
stc
das
jno
aaa
js
push
arpl
add
mov
jb
jmp
ja
dec
lahf
pop
das
inc
jmp
mov
outsb
xchg
hlt
sbb
rorb
ljmp
xchg
call
jne
dec
leave
inc
push
inc
rolb
xchg
clc
xor
jmp
xchg
xor
jns
and
adc
xchg
in
cmp
xlat
push
add
jmp
cli
sbb
dec
xor
leave
rolb
jo
inc
push
add
addr16
pop
pop
daa
les
xor
js
jge
sti
test
and
outsb
mov
or
dec
jbe
rcrl
imul
xchg
fs
test
push
mov
xor
aam
pop
es
fwait
inc
lcall
xchg
std
mov
idivb
mov
aas
push
push
sub
test
addb
mov
xchg
mov
mov
mov
xchg
pop
cli
lret
adc
mov
pinsrw
orl
cmpsl
or
ljmp
inc
addr16
data16
cmpsl
pushf
xor
cmp
test
es
dec
das
push
sub
mov
push
sti
or
arpl
jl
add
arpl
inc
jl
push
push
jmp
aaa
xor
int3
out
xchg
mov
adc
pop
xchg
popf
mov
mov
pop
loope
cld
xor
in
dec
push
and
pop
bound
decl
mov
nop
jb
pop
mov
popf
loop
out
movsb
and
xor
adc
out
and
adc
outsb
mov
inc
push
push
hlt
jmp
xchg
jae
out
rorl
mov
fwait
cmp
and
clc
fwait
or
addl
movl
and
jne
mov
mov
mov
fimuls
adc
and
mov
mov
adc
inc
fs
scas
jnp
out
mov
int
aam
dec
mov
imul
imul
and
js
lods
add
xor
mov
sub
rorb
cmp
test
jl
popf
push
push
cmp
sub
and
mov
repz
ja
insb
mov
dec
mov
rol
rol
or
inc
adc
xor
cmp
aad
movsb
sub
pop
ds
mov
das
xor
inc
and
jae
adc
dec
pop
mov
pop
fidivs
push
pop
shll
and
and
push
jge
mov
xor
movsl
mov
mov
and
push
psubb
jp
es
adc
in
xchg
mov
xchg
push
mov
std
xor
repz
xchg
push
cmp
xchg
xchg
loope
sub
mov
xchg
adc
hlt
pop
jo
movsl
pop
dec
and
jle
hlt
ret
std
out
imul
je
ss
mov
fstpl
js
inc
insb
push
xchg
stos
in
cmp
xor
sarl
xchg
push
push
pop
in
sbb
lahf
pop
adc
call
xchg
out
xor
jns
xchg
and
out
in
cmpsl
sub
dec
sbb
inc
ja
add
jg
fisubl
sub
das
movsb
fsub
xchg
add
mov
cmpl
lahf
sbb
jge
cltd
lcall
iret
adc
pop
test
repnz
lods
rcrl
jb
in
or
and
inc
fcomps
in
jg
mov
rclb
fcoml
sub
es
stos
sub
in
je
loope
jmp
stc
inc
test
fimull
les
js
sbb
xchg
fcoms
xor
add
mov
cltd
rcll
scas
cltd
jp
mov
lds
cmp
aas
mov
xor
pop
push
mov
out
push
mov
dec
sbb
daa
mov
aam
inc
add
popf
das
jl
test
and
inc
or
jle
push
xchg
outsl
loopne
es
sti
popa
fcomps
xor
xchg
fwait
sub
pop
ds
and
aam
jbe
mov
jns
sahf
fcoms
mov
ja
cwtl
addr16
cld
int3
mov
in
and
adc
inc
inc
inc
sub
dec
dec
pop
test
sarb
add
popf
das
sbb
icebp
fwait
cli
imull
inc
and
les
mov
cmp
stc
sub
jg
mov
mov
orl
ja
addb
test
mov
push
sarl
js
mov
jb
das
stc
dec
pop
arpl
faddp
sub
popw
fs
movsl
jge
cmp
test
js
std
aas
push
push
mov
pushf
dec
loopne
ret
fcoml
mov
cmp
mov
loop
scas
lock
mov
mov
daa
loope
dec
sub
mov
xchg
push
xbegin
mov
sti
lods
mov
xor
fcoml
inc
ret
insl
shrb
mov
gs
inc
call
pop
stc
push
into
mov
xchg
hlt
push
sub
sub
nop
sbb
or
pop
cli
push
out
stos
mov
loopne
inc
pop
das
mov
xor
sub
mov
out
loope
test
lahf
andl
andb
dec
mov
sbb
pop
subl
cmp
mov
xor
push
lret
or
in
xor
lods
jp
pushf
dec
sbb
pop
or
pop
rorl
lock
aam
xchg
mov
movsl
jl
mov
jmp
sbb
adc
jne
bsf
pop
cmp
push
push
sahf
or
fsubrl
arpl
cmp
les
and
fidivrs
aaa
jecxz
mov
gs
dec
dec
push
and
sub
cld
dec
iret
sets
inc
pop
inc
add
imul
jg
jnp
mov
cwtl
mov
mov
cmp
xor
inc
mov
lahf
lods
adcl
pop
dec
pop
lods
cmp
aam
adc
sbb
adc
or
mov
ficoms
mov
jnp
xor
mov
addb
sbb
ja
pusha
push
pusha
scas
pop
xor
cli
data16
cmpsb
mov
xchg
repz
and
fwait
xchg
mov
std
cmp
lods
cwtl
cmp
fistps
push
lods
jns
mov
stos
cmp
ficoml
insl
adc
out
mov
stos
mov
popf
jge
sbb
mov
xchg
sbb
mov
adc
xor
mulb
sbb
inc
cmpsb
dec
jo
in
dec
or
pop
ja
int3
xchg
jno
xchg
cli
jge
fs
add
jne
movsb
lock
notl
iret
sub
fadds
lea
shrl
sahf
jle
call
xor
inc
jo
or
and
cmp
mov
or
cmpsl
in
dec
out
mov
or
divps
imul
push
dec
jnp
stc
je
enter
out
std
pop
xor
jno
add
jg
insl
sbb
xchg
jg
cltd
add
mov
leave
push
fsubrl
notb
aad
mov
in
xchg
mov
push
mov
loope
dec
jae
and
pop
xlat
pop
fmul
fdivrs
mov
and
aam
mov
sub
cmpsb
cmp
push
mov
int
mov
sahf
cmp
lock
or
mov
hlt
movsb
sahf
out
outsb
pop
jae
roll
and
pushf
imul
add
mov
and
ljmp
aam
or
mov
mov
jmp
ja
pop
shll
filds
cmp
cmp
mov
or
popa
xor
xor
add
arpl
movsb
jnp
lret
popa
fcomps
push
testl
jne
xchg
insl
sub
push
jbe
fwait
mov
dec
rolb
fidivl
fnstcw
lods
sub
mov
push
mov
repnz
dec
insb
mov
fcompp
int
sbb
jns
pop
bound
xchg
sbb
push
or
and
cmc
push
inc
and
cli
lds
mov
std
mov
or
int3
adc
adc
cmp
sub
add
jo
sbb
jp
int3
and
add
repnz
fwait
and
outsl
xorl
insb
out
out
mov
repnz
sub
stos
cmp
ret
fdiv
pop
inc
xor
mov
mov
imul
ljmp
xor
inc
cmp
sbb
adcl
sahf
xchg
out
inc
cwtl
fnsetpm(287
mov
dec
insl
mov
sub
mov
pop
daa
fisttpll
clc
stos
mov
pop
xor
xlat
push
pop
push
sbb
mov
loope
js
leave
jo
or
mov
dec
jge
sahf
ds
xchg
push
pop
lods
scas
xor
test
enter
notb
aam
jecxz
les
xor
fldl
pop
std
mov
nop
cwtl
testb
test
stos
ficoml
div
xor
fs
pusha
sbb
lahf
cwtl
aam
sbb
aam
push
push
cmp
ret
cmp
adc
divb
push
icebp
mov
addl
lock
adc
imul
mov
mov
notl
push
gs
lock
lods
add
int3
mov
pop
pop
xchg
cld
mov
xchg
jae
mov
dec
jecxz
push
jae
and
pushf
out
ret
jle
sub
fwait
sbb
fldt
orb
mov
scas
sti
das
inc
int
out
xchg
pop
cmp
imul
ficoml
mov
push
cmp
lock
or
movsl
dec
fsubs
mov
add
ret
icebp
insb
and
out
push
rcrl
adc
ret
icebp
jns
jae
movsb
sahf
adc
add
push
lret
popf
mov
xchg
fnstsw
popf
decl
mov
or
popa
movhps
rorb
sahf
mov
scas
inc
or
in
cltd
subl
sbb
inc
stc
call
jno
xchg
xchg
xchg
mov
inc
fprem1
jle
or
lea
cwtl
cmpl
lret
jmp
mov
cli
dec
sub
inc
ficomps
out
leave
xchg
inc
xor
jb
fadds
cmp
mov
lock
xor
xlat
aad
adc
sbb
dec
fwait
call
test
pop
add
ja
inc
cmc
fistps
into
pop
les
sub
mov
cmp
cwtl
movsl
lea
jnp
add
jnp
ljmp
and
mov
dec
xor
pusha
ja
movsl
jl
lret
mov
ljmp
testb
mov
pop
outsb
add
xchg
into
loope
adc
ret
les
inc
cs
mov
out
imul
inc
pushf
push
lods
negl
push
pop
aam
loopne
leave
cmp
mov
push
push
ja
pop
inc
fcmovne
stos
loop
out
nop
adc
jo
adc
stos
xor
scas
jb
bnd
sub
lahf
mov
cwtl
repz
adc
jge
shlb
test
loope
lret
loopne
jmp
data16
adc
cmp
sar
push
cmp
xor
mov
lahf
or
cs
xchg
lret
jle
lcall
pop
mov
inc
cmp
call
js
call
js
cmp
and
jnp
xor
push
aas
and
jns
mov
popa
pop
out
xchg
jns
jge
sahf
push
sbb
adc
or
lcall
out
fisttpl
dec
sub
lcall
pop
sub
subb
xor
mov
in
mov
xor
mov
subl
cmp
cmpsl
divl
sub
add
xor
shrb
je
adc
adc
xchg
jg
xchg
cmp
fsin
je
clc
or
adcb
arpl
cld
ficomps
xchg
ss
jecxz
inc
push
rcll
add
xchg
xchg
arpl
sti
inc
xchg
inc
cld
mov
icebp
std
and
mov
fwait
cmp
shl
shlb
dec
push
xchg
mov
mov
das
and
ret
rorb
xchg
jmp
mov
outsl
test
push
js
inc
sub
in
aam
sub
pop
rorl
rolb
shl
imul
jne
adc
lret
call
test
mov
testb
stc
inc
shrb
and
sbb
jl
xchg
es
scas
inc
mov
nop
sub
xchg
rolb
imul
pop
lods
xor
xor
jp
jp
add
loope
cmp
pop
ret
rorb
adc
or
mull
mov
lahf
ficoml
mov
lods
push
cmc
jae
movsl
dec
test
aam
mov
xor
push
or
cmp
xor
adc
mov
mov
icebp
scas
std
jle
in
lock
jecxz
or
mov
iret
jg
call
inc
mov
xor
pop
adc
dec
rcrb
cmp
std
xchg
jmp
or
cli
cmp
nop
xlat
gs
ficomps
pop
push
mov
mov
xchg
adc
mov
pop
repnz
add
mov
mov
outsb
jnp
imul
es
pop
adc
xor
and
scas
mov
push
adc
cmc
cmp
xchg
xorl
cmp
jl
jo
adc
dec
dec
cmp
cmp
and
add
lods
int3
mov
daa
inc
xlat
test
stc
xor
test
out
insl
jno
outsb
les
repz
rorl
or
loope
lahf
xchg
jl
and
add
cmp
addr16
psubusb
jle
cmp
je
dec
push
jle
lret
daa
pop
imul
out
movaps
pushf
sbb
push
in
dec
and
test
es
jle
fiadds
popa
out
daa
mov
popa
cmc
gs
pop
cli
dec
push
cli
int
loope
hlt
aam
repnz
pop
jae
addl
out
fstpt
aad
negb
mov
out
nop
sub
cmpsb
push
enter
mov
adc
pop
xchg
dec
test
mov
add
lds
cltd
xlat
in
mov
pop
lods
sbb
mov
xchg
aas
lea
stc
push
xchg
repz
add
adcl
push
test
add
imul
mov
xchg
and
dec
inc
fisttps
clc
xor
aaa
pop
xchg
pusha
sub
outsb
lods
push
push
clc
shrb
lret
xlat
sbb
fisttpll
pushf
add
test
out
sub
cmc
inc
icebp
test
in
js
add
push
jne
leave
subb
jecxz
mov
xor
cld
adc
pop
int
aaa
movsl
popf
ds
cmpb
ficoms
ficoml
in
sub
xchg
sbb
sub
xchg
jp
pop
loope
and
jmp
sbb
in
xchg
ljmp
dec
xchg
dec
hlt
repz
xorl
sub
sub
mov
mulb
inc
mov
neg
out
je
and
mov
mov
mov
ljmp
pop
push
xlat
sbb
mov
and
xchg
outsl
mov
sbb
test
push
cmp
or
xchg
je
call
rorb
sbb
outsl
mov
ss
pop
jne
pop
mov
ss
mov
sbb
push
push
cmc
dec
outsl
mov
outsl
cmpl
mov
mov
sub
or
xor
dec
icebp
cli
loopne
jp
stos
std
sub
xchg
push
lahf
cmp
repz
mov
insb
icebp
cmc
xchg
jp
je
push
mov
dec
mov
jnp
mov
lock
push
cmpsl
fildl
pop
xchg
pop
leave
cmc
ret
cmpsl
popa
mov
pop
inc
into
and
rorl
cmpb
scas
mov
enter
inc
es
inc
roll
pushf
hlt
and
pusha
or
out
add
aad
lahf
fisubs
popl
and
adc
xchg
aad
hlt
lahf
out
subb
pop
clc
push
or
cwtl
stos
iret
mov
jns
test
pushl
roll
add
dec
call
ja
loop
popa
movsb
inc
js
loop
pop
jb,pt
lea
cmp
fiaddl
cmc
cmpsb
and
push
mov
dec
rclb
jecxz
les
lcall
fdivrp
cmpsl
adc
stos
or
ljmp
mov
cs
sbb
fs
aas
jge
jle
jne
lea
shl
sub
leave
xchg
mov
sti
shl
sbb
shlb
addb
shr
lahf
mov
in
hlt
sbb
inc
mov
movsl
push
adc
or
inc
mov
sbb
in
mov
jecxz
imul
unpcklps
sub
mov
sbb
mov
or
mov
jnp
stc
sbb
dec
mov
push
xchg
sub
cmp
repnz
cltd
ja
push
mov
dec
jg
pop
pop
sbb
addb
cmp
imul
mov
jne
cmpl
push
jg
aad
test
neg
scas
push
cmp
push
lock
shlb
or
or
fs
jle
pushf
xor
xchg
or
aam
xor
pop
pop
adc
xchg
popa
out
fisubs
lea
push
fcompl
jbe
mov
pop
loopne
add
insb
repnz
sbb
mov
mov
mov
mov
xchg
test
incb
inc
lret
stos
mov
outsl
js
add
aaa
adcl
jae
jo
xor
mov
xor
cmp
sahf
insb
sbb
loop
setp
loope
inc
cltd
sub
sbb
scas
jno
mov
mov
fistpl
push
xorb
inc
push
push
clc
cmp
jno
jno
repnz
push
fidivrl
das
adc
lahf
stc
push
shll
fbstp
mov
out
nop
adc
js
pop
pusha
xchg
add
or
fcoml
stc
pop
aaa
dec
sbb
add
cmpsb
mov
push
jnp
andb
insb
sbbl
pushf
jbe
outsl
bound
cmpl
test
lret
js
mov
imul
outsl
or
or
pop
mov
in
stos
cli
inc
mov
orl
cltd
jne
fadds
fs
xchg
cltd
aad
xor
or
pcmpeqd
pop
jle
cmp
ficomps
and
mov
rcll
xchg
int
mov
sub
jnp
fucomp
ret
pop
adc
nop
mov
inc
jmp
cmp
pop
adc
push
jnp
adc
lret
scas
pop
sbb
xor
add
insl
addl
or
push
out
push
cmpsl
ds
pop
nop
decb
dec
mov
push
inc
ljmp
mov
in
enter
sahf
repnz
xchg
sbb
popa
lahf
jp
xchg
push
dec
adc
add
mov
imul
std
and
push
cmp
or
and
or
cmc
loopne
jo
cmp
sub
jo
call
cmp
repz
dec
xchg
add
adc
or
fiadds
xor
lret
inc
dec
enter
fs
or
dec
sub
mov
sbb
pop
clc
lahf
sub
test
pop
out
enter
clc
aas
pop
rcr
cmp
pushf
push
mov
mov
xorb
add
mov
repz
inc
divb
call
out
data16
fnstenv
pop
aad
pusha
jno
fiadds
jp
or
sbb
popf
jmp
movsl
mov
cmp
sbb
or
jmp
mov
movsl
addr16
fwait
in
cwtl
xchg
or
and
jmp
jnp
insb
mov
test
loop
inc
add
xchg
add
adc
push
cmp
push
fisubs
fildl
test
xchg
push
mov
lods
sub
adc
add
fucomi
mov
dec
sbb
adc
or
sub
bound
pop
in
and
lods
add
pop
popa
bound
mov
inc
and
popa
das
xor
dec
mov
cs
jle
push
add
lea
mov
divl
scas
jb
daa
and
mov
test
jmp
or
jmp
stc
test
aaa
jge
inc
adc
stos
mov
dec
jno
sub
and
jecxz
jecxz
sbb
pop
aas
lahf
hlt
bound
in
xor
into
mov
mov
pop
not
xorb
inc
lahf
test
jnp
or
or
fcmovnb
nop
mul
jne
sbbb
cmpsb
jo
cs
jmp
dec
stc
mov
or
rcll
adc
inc
fwait
shl
jp
mov
pop
jo
pop
add
cmp
and
loopne
das
jle
mov
xlat
jnp
and
mov
inc
mov
sub
sub
inc
mov
pop
mov
mov
movsl
lahf
imul
mov
mov
inc
sahf
push
pop
cmpsb
cmpsb
fstpt
inc
xchg
lcall
jecxz
sbb
pop
dec
leave
lret
xchg
loope
jns
jns
jno
mov
in
cs
push
and
jp
leave
fwait
add
cwtl
xchg
push
shr
out
mov
loope
icebp
cmpl
or
push
lods
loop
dec
cmp
jb
shrl
add
push
sti
mov
inc
pop
and
scas
cmp
mov
out
arpl
lret
je
filds
ja
pop
xchg
sti
jge
xchg
xor
fistl
inc
pop
xchg
in
mov
jo
dec
ret
dec
int3
mov
shl
mov
and
dec
inc
mov
push
jb
int3
shll
jns
jne
jge
cmp
nop
lcall
fldt
fwait
xchg
ja
sub
aad
pop
lret
loop
xchg
and
cld
gs
jmp
insl
clc
out
cld
sub
imul
dec
shlb
movsb
pop
mov
mov
dec
dec
js
loope
inc
je
jle
pop
and
movsl
dec
mov
cmp
test
shll
mov
and
jl
scas
sbb
movsb
out
push
mov
jno
cmp
sar
sti
movsb
sub
push
loope
pop
roll
es
inc
idivb
dec
faddl
dec
sbb
adc
insb
insb
in
sbb
mov
je
xchg
add
and
mov
jg
ljmp
sahf
shrl
xor
cmp
lods
daa
push
mov
or
cli
pop
stos
add
mov
inc
shlb
mov
xchg
call
mov
adcb
cmp
ret
mov
jo
sbb
xor
outsl
rol
cmp
mov
sub
sar
lock
mull
xchg
pop
add
inc
adc
sti
push
es
ret
inc
js
pop
or
mull
adc
leave
mov
add
inc
sbb
fld1
stos
inc
jbe
pop
mov
arpl
scas
cmp
adc
lock
mov
mov
cmpb
mov
fnstenv
add
jg
jg
notl
in
into
ret
jge
ficomps
decl
data16
mov
ret
add
pushf
dec
cmpsb
daa
cld
adc
insl
cmp
sub
je
scas
cmpsb
int
ret
pop
xchg
mov
xchg
jge
push
ljmp
mov
enter
push
out
iret
int
xlat
ljmp
sbb
aad
sbb
cli
sbb
mov
lahf
imul
pop
hlt
in
sub
mov
lret
sbb
cli
les
mov
fisubs
jbe
rorb
cmp
sti
sbbb
push
mov
mov
aas
lret
dec
and
mov
test
push
mov
adc
adc
inc
fwait
mov
aaa
iret
pop
add
jmp
call
xchg
pop
inc
fisubrs
mov
aas
fidivs
jmp
or
push
arpl
pushf
adc
mov
dec
sub
cmp
xchg
xchg
in
mov
in
push
xchg
xlat
int
rorb
in
mov
repz
cmc
les
push
inc
xor
push
sub
or
outsb
adc
xor
xchg
lods
or
movsl
sub
sub
sti
popa
test
rcrb
mov
and
sub
sti
mov
stos
dec
scas
push
xlat
add
lock
ret
adc
ret
and
enter
mov
hlt
fcomps
cmp
jns
pop
mov
push
aaa
push
cmp
or
mov
es
icebp
mov
repz
add
pop
fistl
add
testb
mov
sbb
mov
hlt
inc
popf
add
mov
pop
nop
jl
mov
sti
cwtl
push
xor
jnp
mov
and
push
pushl
cmp
sbb
jns
push
cmp
cmp
cli
adc
movhps
push
push
or
out
push
test
mov
push
fstl
adcl
scas
decl
pop
cmpsl
mov
ljmp
or
popf
mov
jo
push
std
or
jmp
xlat
loopne
ljmp
cmp
nop
lods
add
xchg
out
aas
pop
insl
lret
sbb
stos
or
or
mov
and
mov
push
mov
xchg
bound
sub
adc
xchg
jp
push
mov
repz
jae
fimull
pop
add
mov
loopne
test
lahf
pop
bt
lods
cmc
sarb
popf
xchg
jmp
xchg
sarl
xchg
ret
cmp
ss
add
and
shrb
xor
pop
std
push
adc
mov
maxps
mov
cmp
ss
add
push
sarb
rorb
push
fs
xchg
mov
mov
ss
scas
gs
xor
lret
leave
mov
jl
dec
enter
cmp
pop
push
lcall
cmp
cs
sub
mov
mov
pushf
jbe
movsl
push
xchg
add
or
mov
mov
mov
cltd
stos
repnz
or
and
inc
jb
mov
fbstp
adc
dec
inc
sub
or
pop
sti
rolb
pop
push
clc
fcoms
cld
jge
xor
push
lret
stos
or
sbb
ljmp
sub
jae
or
xor
call
cwtl
push
xchg
out
popf
xor
je
xchg
das
lret
sahf
cltd
inc
cmp
addr16
mov
pop
mov
adc
and
scas
ja
je
add
pop
cmp
lcall
xchg
int
mov
pop
cs
loopne
clc
sub
pop
push
mov
insl
push
das
mov
hlt
movsb
push
in
test
cli
mov
in
mov
cli
call
leave
xor
jb
jle
fcmovbe
push
lea
xor
mov
mov
enter
or
mov
or
adc
adc
xor
data16
xacquire
adc
sbb
pushf
push
push
cmc
hlt
xor
xchg
loope
pop
push
cmp
add
mov
loopne
pusha
push
adc
mov
fcoml
mov
inc
mov
mov
jns
data16
xor
test
add
scas
sbb
mov
popa
jno
scas
cmp
aad
adcl
jecxz
cmp
aam
sub
ret
mov
pop
inc
stos
push
mov
out
push
iret
jecxz
loope
push
das
call
inc
std
movsl
in
xchg
adc
fstp
jmp
test
jo
dec
sbb
ss
jge
test
xchg
jb
mov
mov
or
lret
add
pop
fs
push
xor
mov
jb
sbb
jle
scas
dec
iret
push
ljmp
sbb
xor
adc
mov
push
xor
aad
and
mov
fnsave
cmp
dec
and
xor
jb
xchg
dec
jb
inc
jne
jg
and
xor
pop
mov
pushf
cmp
lret
nop
push
andb
add
xchg
arpl
ds
xchg
dec
pop
xor
js
ret
arpl
add
or
std
dec
cmp
and
arpl
lret
iret
subl
repnz
xorb
les
cmp
push
mov
jmp
mov
lar
xor
jp
lock
or
mov
push
mov
inc
jg
sbb
adcl
cs
movsb
adc
fwait
add
outsb
fldt
xchg
pop
pop
cmp
cmpb
add
sub
daa
adc
lcall
mov
mov
push
fstpl
adc
inc
pop
fcomps
and
xchg
repz
outsl
dec
cs
mov
lods
daa
mov
ret
shll
dec
and
jne
xor
shll
psrlw
add
scas
andl
mov
fidivrs
xchg
cmpsl
mov
sar
bound
adc
cld
jle
sbb
out
sbb
lret
stos
or
xchg
pop
lods
seta
je
in
movsb
les
ljmp
jl
cli
cmc
loopne
test
lcall
int3
mov
push
decb
lahf
arpl
in
in
stos
push
popa
sbbb
push
push
jb
fmuls
mov
jnp
jae
xchg
xor
dec
stos
inc
ja
test
sbb
test
scas
inc
sarb
jae
outsb
sarl
ret
leave
dec
sub
sar
mulb
xchg
sub
sbb
lods
lods
aad
sti
xchg
dec
test
sarb
hlt
test
subl
repz
cmp
leave
enter
jns
iret
sub
sbb
add
les
loop
or
pop
or
xorb
cmpsb
inc
cmpsb
rorl
push
ficompl
shlb
inc
pop
js
sub
xchg
repz
jb
je
sbb
sti
mov
pop
fldt
mov
cs
xor
sbb
sarb
cmp
jge
aam
mov
popa
push
mov
out
xchg
fwait
and
filds
clc
push
into
out
std
nop
enter
mov
das
add
repz
fimuls
jno
mov
aad
loope
fimull
fsubrs
sbb
insl
icebp
pusha
out
xchg
mov
aam
mov
mov
mov
mov
adc
jae
and
pop
xchg
inc
imul
pop
ss
scas
add
lahf
aad
sbb
cmp
sub
das
push
xchg
lcall
enter
aad
mov
movsl
stc
jno
cld
dec
dec
sub
lods
cmp
mov
mov
dec
lock
pop
add
int3
push
or
jno
cld
mov
jecxz
add
mov
stos
rcll
sub
adc
std
add
testb
outsl
stos
mov
mov
sbb
iret
pop
push
js
xchg
mov
jmp
aad
inc
stc
lret
in
cmc
jecxz
ss
pop
insl
arpl
je
fs
je
or
shl
out
test
jnp
dec
in
or
mov
xchg
cltd
push
cs
inc
xor
or
lods
sub
sbb
xchg
xor
data16
pop
popf
outsl
icebp
test
push
loop
mov
pop
clc
xchg
test
lock
hlt
fnstcw
fdivrs
aas
dec
and
fucomp
jp
pop
loope
lret
sub
lods
inc
mull
mov
int
push
mov
and
adc
and
sahf
in
insb
fstpt
and
repz
insl
push
lea
pushf
ljmp
sub
movsl
cld
cmp
push
insb
mov
dec
negb
daa
test
inc
mov
xor
and
sub
rcrb
sub
incl
dec
pop
push
jle
sub
push
inc
and
cmp
popf
mov
sbb
and
data16
inc
outsb
mov
mov
xchg
aaa
bound
xor
insl
sub
test
mov
sub
repz
xchg
mov
or
or
jp
inc
push
mov
ss
dec
fstl
ljmp
dec
jg
daa
mov
or
std
pop
mov
adc
mov
pop
or
push
call
std
mov
xor
inc
xor
cli
sub
sub
adc
jnp
xor
loope
es
dec
add
lds
sub
jmp
push
xchg
insl
cmpsb
fs
sbb
cld
sahf
jnp
mov
dec
imul
jo
mov
add
inc
cmp
mov
fcmovne
sbb
or
pop
fldt
adc
pop
fs
push
rcll
xor
mov
pop
mov
fiadds
scas
cmpsb
sti
ja
add
mov
movl
cli
int3
sbb
inc
in
enter
test
popa
aas
daa
sub
mov
cmp
inc
stos
addr16
scas
mov
and
cwtl
push
nop
test
nop
faddl
mov
mov
data16
iret
fs
cmpsl
int3
xor
pop
dec
push
vpackuswb
mov
pop
cmp
testl
mov
in
xor
mov
pop
imul
iret
mov
cld
cmp
rolb
push
xchg
fistpl
inc
xor
sar
sub
fcoml
inc
mov
shrl
loop
push
cmpsb
cmp
dec
movsb
bound
std
out
cmp
push
pop
mov
pop
and
add
enter
lret
cmpsb
push
jle
jl
push
sbb
ror
lret
fstl
ljmp
jbe
ret
lea
add
mov
imull
fstp
sar
push
arpl
dec
fdivr
sbb
dec
test
insb
mov
out
pusha
pop
add
rolb
inc
fcoms
out
push
xor
or
repnz
dec
sbb
pop
sub
call
icebp
outsb
cmp
into
adc
push
adc
call
jecxz
mov
ja
mov
pop
sub
adc
clc
add
push
loopne
jb
fmul
imul
loopne
push
jl
push
daa
or
fldl2t
ficompl
sbb
pop
sahf
es
sbb
mov
test
shrl
clts
pop
lret
incl
mov
xchg
add
lock
lock
es
fwait
pop
outsl
xor
mov
mov
int3
jbe
in
movsb
push
pop
sub
sub
sbb
popf
mov
lret
and
cmpsb
in
jecxz
sbbb
xor
neg
sub
movsb
movsl
add
fidivrl
stos
pop
rolb
fsubl
mov
insb
adc
data16
xchg
adc
or
add
or
add
nop
loopne
cmp
xchg
sub
or
push
or
jmp
stc
dec
cld
jmp
icebp
dec
ret
xchg
xlat
xorb
into
sti
ret
xor
pushf
xlat
sbb
jns
fs
add
pop
btc
jnp
pusha
lret
insb
int
pop
push
jae
pop
xor
or
iret
icebp
ja
mov
cmp
or
gs
mov
jae
iret
dec
or
in
xchg
adcb
jmp
insb
loope
mov
subb
jl
aaa
pop
mov
in
inc
addl
sbb
inc
sub
les
pause
and
sub
adc
inc
jge
sti
lea
insb
movsl
inc
cli
mov
jno
sbb
lret
aas
push
push
push
outsl
daa
insl
xchg
ljmp
iret
xchg
lret
fnstsw
pop
pop
sub
cmpsb
adc
negb
cmp
pop
push
sub
xchg
pop
add
into
mov
movsl
je
fs
lods
xchg
ror
sub
mov
in
jge
pop
jo
cmp
mov
pushf
mov
das
mov
nop
jmp
loope
jle
lahf
cmc
pushf
dec
idivb
movsl
es
stos
push
iret
lods
dec
mov
rclb
scas
xchg
jmp
ret
xchg
mov
stos
jecxz
into
idivb
out
add
sahf
arpl
xchg
or
dec
inc
mov
jb
stc
cli
stc
roll
fcmovnb
imul
xor
cmp
xor
push
sbb
int
jmp
fnstenv
inc
inc
scas
rolb
ljmp
mov
mov
in
in
xchg
push
cs
daa
jnp
dec
mov
pop
lret
or
dec
testb
lcall
imul
das
dec
shlb
movsb
sub
xlat
js
lcall
xchg
icebp
xchg
addl
sbb
popa
push
inc
add
sarb
cmp
jg
in
xchg
gs
stos
sub
repz
xorb
outsl
lock
mov
pop
xchg
lea
sub
mov
je
mov
sub
mov
test
push
xchg
data16
or
jl
fnstenv
lcall
xor
mov
mov
mov
imul
adc
sbb
movsl
sub
andl
mov
xchg
aas
push
or
das
fwait
lcall
pusha
push
cltd
loop
push
jmp
mov
sar
and
adc
cs
std
mov
jge
or
popf
jp
push
adc
inc
add
nop
enter
loop
xlat
in
mov
push
sub
dec
sub
xchg
les
test
jl
mov
iret
lcall
rcrl
je
mov
rcrb
mov
and
inc
cmc
mov
pop
lds
add
cli
repz
jmp
xchg
add
mov
xorb
jae
lods
mov
cwtl
sti
aas
adc
jmp
xchg
call
adc
cltd
jne
clc
jnp
xorl
scas
push
xchg
jb
xor
rcll
shlb
xor
and
cs
mov
jle
adc
push
arpl
std
clc
mov
xlat
jno
outsl
int3
mov
mov
and
push
fisttps
or
lock
icebp
test
clc
negb
ret
jbe
daa
xorb
mov
out
xchg
fildll
into
sti
mov
sbb
inc
in
fwait
js
test
inc
push
out
pop
inc
imull
fwait
and
js
mov
adc
dec
jb
or
icebp
daa
inc
cmp
inc
lret
shl
xor
or
fdiv
dec
int3
xchg
gs
xor
test
data16
inc
addl
movsb
scas
ret
mov
add
add
ficoms
jno
lock
xor
push
out
loop
add
stos
imul
push
subb
mov
sub
add
insb
xor
mov
scas
ljmp
pop
imulb
pop
movsl
xor
mov
xchg
sbb
mov
jo
hlt
inc
lret
xchg
pop
sbb
cltd
out
fs
shlb
lea
push
das
xor
ret
xor
gs
in
pop
call
mov
xchg
mov
gs
repz
jg
mov
mov
call
movsl
lcall
jae
outsb
cmpsb
xchg
mov
pop
mov
push
sub
push
in
frstor
mov
not
cld
jne
leave
pop
inc
inc
xchg
lea
pop
xor
dec
or
scas
cltd
pop
jl
inc
xchg
cmp
push
and
mov
cmp
lahf
pop
inc
mov
dec
in
fildll
in
push
xor
xchg
movsl
mov
aas
dec
sub
adc
jae
andb
mov
jl
push
and
outsl
adc
shl
mov
scas
mov
leave
jge
or
fcoms
xor
int
mov
loop
daa
pop
push
push
jno
dec
adcb
scas
in
enter
cmc
scas
mov
test
xchg
or
imul
aad
push
out
and
mov
and
fimull
jns
sub
xchg
mov
mov
push
and
or
iret
adc
cmp
push
gs
pop
pop
lahf
mov
loopne
cli
imul
add
clc
addr16
rclb
and
push
sahf
pcmpeqd
iret
loopne
jmp
xchg
push
xchg
pop
mov
in
add
mov
xlat
sbb
cld
js
sbb
fnstsw
adc
xor
jns
cs
jnp
cwtl
das
jno
lahf
ret
adc
xor
mov
mov
int
sbb
mov
cmpsl
mov
daa
shlb
pop
in
jl
xchg
mov
adc
iret
popa
fcoml
or
pop
sub
mov
stos
in
add
push
inc
test
cmp
shrl
mov
xchg
push
ljmp
cmp
dec
fwait
cmp
scas
pop
mov
xor
push
nop
popa
imul
repz
and
das
cltd
mov
sti
inc
xlat
mov
mov
rorl
aaa
pop
dec
data16
mov
add
lret
mov
adc
shrl
ja
lahf
xchg
sahf
add
aad
adc
pop
add
sbb
aam
test
inc
sub
sbb
sub
adc
mov
sbb
pop
loop
in
repnz
dec
mov
sbb
add
imul
shr
hlt
loope
out
jb
sbb
addl
lcall
div
push
mov
in
xchg
loopne
sbb
or
movsb
test
or
add
cmpsl
fcoml
dec
cwtl
push
mov
fdivrs
push
jg
push
inc
popf
and
ret
ret
dec
and
mov
inc
ljmp
data16
jo
in
lods
setp
movsl
mov
adc
jne
loope
pop
push
inc
xchg
popa
test
ss
inc
mov
inc
xor
push
das
loope
pop
and
cmp
sub
cmp
xor
in
lret
jl
or
jmp
orl
sub
adc
icebp
mov
adc
mov
shl
call
and
insl
ds
xor
mov
pop
je
jb
mull
add
dec
ficoml
in
cmp
xchg
mov
into
addl
clc
mov
adc
jecxz
stos
adc
cli
xor
dec
or
adc
sahf
pop
lret
or
jns
mov
sbb
inc
aas
or
lcall
repz
rcr
sbb
dec
inc
and
fs
xchg
aaa
push
cwtl
cltd
or
test
sbb
jge
lods
ja
stos
loope
popf
push
mov
pop
fldenv
shrl
loopne
xchg
fimuls
lret
in
scas
in
les
insb
ds
mov
bound
lahf
into
jge
aam
push
stos
repz
and
out
outsl
out
xchg
pop
sbb
insb
roll
push
sub
xor
movsl
pop
push
aaa
aam
xchg
sti
mov
js
les
movsb
adc
pop
out
sbb
sbbb
pop
data16
cs
mov
mov
mov
jbe
xor
stos
sub
jmp
in
xor
jmp
scas
xchg
cmp
inc
sub
jbe
mov
add
mov
sbb
loope
cltd
xchg
shll
ret
xchg
int3
fistpl
mov
inc
push
out
sub
cmc
cmc
push
push
loopne
adc
sbb
xor
mov
dec
shl
jo
pop
cmp
out
or
add
stc
loopne
dec
loope
movsl
int3
insb
cmp
mov
inc
out
add
iret
xchg
cmp
xchg
jno
jo
loope
cmp
rorb
adc
shll
lcall
fisttpl
jnp
push
imul
and
or
mov
stos
cwtl
mov
js
js
leave
push
inc
mov
mov
xchg
sub
insl
or
icebp
stc
aas
insl
shlb
mov
pop
fs
rorl
or
enter
sbb
inc
xchg
pop
cmp
cmp
mov
out
stos
add
movsb
fdivp
andl
jge
push
mov
xchg
out
fldenv
cmpsb
xor
scas
clc
adc
scas
out
lods
rcrl
imul
jl,pn
ret
xchg
pop
daa
push
jg
mov
jg
mov
mul
adcb
jmp
cmp
sbb
aam
or
xchg
sbb
xchg
xchg
push
scas
outsl
in
and
mov
pop
sub
mov
jns
popa
pop
movsb
lret
mulb
enter
inc
cltd
mov
out
mov
mov
add
xor
sahf
push
pop
es
inc
pop
movsl
test
cmpsl
add
and
insb
xor
pop
in
daa
push
cmpsb
aaa
out
xor
inc
int
sbb
stos
repnz
fstpt
push
xor
sub
xchg
dec
popf
jnp
xchg
aad
hlt
and
xchg
lret
adc
es
xlat
int
idivb
sahf
enter
sub
xchg
add
popa
mov
movsb
pop
jge
and
or
repz
sbb
scas
js
add
repz
addr16
mov
dec
mov
ds
jae
gs
push
outsl
jae
add
gs
xchg
insb
loop
sub
sti
imul
imul
je
addl
in
setne
add
jg
pop
push
xchg
imul
stos
ret
out
jae
jae
mov
mov
loope
xchg
or
ret
push
dec
fmuls
leave
mov
pop
cmpb
gs
call
sub
ficomps
jae
sbb
mov
inc
mov
sub
mov
dec
pop
add
jb
or
jle
ja
gs
jmp
cs
js
push
lock
adc
in
cmp
xchg
inc
mov
lret
jp
clc
mulb
mov
dec
and
scas
cltd
cmc
popa
cmp
jne
out
cwtl
addr16
subb
sub
rorb
cmp
pop
imul
nop
in
repz
int3
in
cwtl
in
pop
aam
aad
push
dec
notl
out
call
sub
daa
mov
dec
add
cld
pop
ds
into
sarl
adc
dec
pop
push
push
mov
push
rorb
sub
xchg
in
cmp
std
loop
pop
cli
xlat
cmc
pop
lods
and
or
scas
dec
clc
or
int3
push
xchg
mov
mov
adc
add
test
nop
jbe
add
rorb
jg
lret
xlat
ret
bound
pop
and
xor
bnd
rorb
je
adcl
dec
add
adc
ret
stos
or
fs
mov
cs
sub
push
push
dec
lods
daa
arpl
lods
sbb
jnp
cmpl
aad
dec
fildll
mov
inc
inc
cmpsb
dec
adc
out
into
call
mov
sbb
mov
xlat
aad
pop
insl
sub
pusha
mov
adc
stc
sub
std
and
arpl
adc
sbb
jg
jp
fs
adc
mov
xchg
insb
add
sub
je
or
lret
cmp
cmp
mov
pop
sub
pop
shlb
cmp
ja
adc
dec
dec
add
push
mov
clc
lods
and
adc
es
addr16
mov
lret
sub
dec
fistl
pop
scas
mov
int3
push
orb
lcall
add
or
test
fwait
mov
insb
lods
mov
push
rcll
add
or
jp
sub
lea
xor
adc
mov
mov
arpl
js
pop
int
cwtl
jbe
ret
pushf
jno
add
pop
mov
jo
das
adc
sub
push
mov
mov
adc
adc
orb
pop
repnz
inc
or
push
je
jb
jns
test
dec
pop
fisttpl
fsubp
jg
pusha
repz
fcmovb
scas
inc
cs
push
stos
leave
xchg
dec
stos
mov
sti
outsl
push
push
xchg
push
push
cmp
dec
outsb
int
scas
lds
xor
mov
aam
push
fimuls
pop
scas
cmc
cltd
dec
sahf
mov
fstp
test
fnstcw
mov
xchg
jmp
xchg
ljmp
push
pushf
push
xchg
addr16
mov
jecxz
gs
out
sbb
cmpsl
jecxz
dec
adc
xchg
sub
jne
int
push
cltd
push
inc
mov
mov
jge
filds
jno
rorb
mov
dec
cmp
dec
sub
fisubrs
mov
push
aam
adc
insl
inc
pop
out
arpl
aam
test
sbb
aam
imul
stos
fs
jle
fwait
adc
pop
ja
fstpl
xchg
leave
jge
rclb
iret
arpl
stos
adc
xchg
std
movsb
add
fidivl
nop
push
shl
popf
out
xchg
nop
xchg
cmc
jg
xchg
adc
sbb
mov
dec
or
mov
mov
clc
data16
lret
test
shl
cmp
sub
dec
xchg
push
cmpsl
out
imul
ss
movsl
pop
inc
pop
inc
and
repz
das
jo
jmp
repz
cltd
lods
mov
mov
sar
aaa
xchg
mov
fcoml
es
nop
pop
inc
mov
nop
out
pusha
rclb
ret
iret
sti
sub
aas
mov
stos
mov
push
cmp
adc
nop
add
test
pusha
leave
popf
into
mov
mov
push
add
fstpt
jbe
stos
sub
push
ds
mov
stos
dec
in
dec
mov
lds
ss
testb
jns
addr16
pop
out
xor
ljmp
mov
fwait
orl
pop
add
push
mov
push
mov
or
push
enter
adc
fs
rorb
or
out
push
orl
xor
cltd
mov
push
rcll
sarl
and
xchg
pop
push
ss
hlt
fstpt
movsb
mov
xchg
out
sbb
fstpt
sub
mov
popf
cmp
lret
xor
cwtl
fldcw
jo
adc
cltd
jecxz
cmp
sub
push
cmp
sub
pop
mov
cmc
or
push
outsb
inc
not
mov
xchg
les
lock
mov
mulb
fcomip
jne
mov
dec
sti
fsubrl
daa
scas
and
test
cli
ljmp
ss
mov
dec
or
sbb
cli
mov
mov
scas
or
test
int
or
lea
cs
jmp
xchg
rclb
sbb
jge
popf
or
adcb
cwtl
imul
iret
sub
adc
nop
pop
shl
jecxz
push
notb
stos
ret
int3
adc
mov
in
cmp
gs
pop
xor
orb
and
outsb
jae
adcb
orl
mov
adc
std
add
mov
dec
data16
jne
mov
push
push
das
imul
mov
insb
cmp
hlt
stos
pop
or
push
data16
jns
dec
int
mov
lret
inc
push
or
jl
jno
in
in
fwait
adc
dec
xor
mov
out
loopne
rcll
mov
js
dec
sub
arpl
adc
xchg
scas
pusha
data16
mov
loopne
xchg
jmp
cwtl
addb
jle
dec
inc
icebp
outsl
xor
js
sub
loope
jns
ficoms
fnstenv
jne
xchg
mov
mov
pop
rcll
es
add
dec
adc
sbb
mov
lods
clc
mov
fisttpll
popf
pop
mov
and
cmp
ficoms
into
mov
sub
shll
adc
lahf
jmp
and
inc
mov
xchg
lds
sub
test
jge
lds
sbb
pop
sti
pop
es
enter
je
fdivr
aam
add
or
add
or
in
stos
jl
les
pop
jns
mov
and
loopne
fs
xchg
jg
jmp
pop
cmp
in
sahf
push
lods
pop
jne
insl
mov
hlt
ja
cmp
rcrl
mov
fcoms
pop
mov
jp
es
pop
in
sarb
idivl
in
cmp
stos
jns
lret
popa
jle
cmp
cmp
push
aam
sbb
lahf
and
std
orl
xor
addr16
jmp
ja
or
jo
jmp
or
test
and
test
cmpsb
dec
sub
icebp
jb
addr16
push
xor
fimuls
cli
dec
mov
pop
lock
jmp
ret
and
xlat
repnz
pop
xchg
mov
push
jnp
pop
adc
scas
jae
or
loopne
rorl
stc
fidivs
mov
pop
sti
addr16
and
ds
lea
pop
pusha
add
ret
pusha
jne
mov
sti
pop
xchg
out
addr16
push
pop
jb
push
test
repz
xchg
mov
daa
sbb
stos
js
repz
mov
add
and
outsb
test
xor
lret
mov
leave
clc
aam
cltd
mov
mov
clc
and
inc
jl
out
add
pop
sbb
jg
mov
inc
mov
inc
lds
mov
mov
add
add
or
lds
dec
addr16
ret
inc
xchg
stos
pop
std
imul
enter
int
mov
pusha
lds
out
mov
shll
fiaddl
push
jo
push
sbb
sub
pop
lea
mov
js
out
xchg
lret
lret
imul
ljmp
arpl
mov
mov
lret
std
adc
inc
push
jg
inc
jg
loope
mov
fsub
imul
sbb
dec
test
sahf
mov
dec
int3
aas
pop
mov
mov
sarl
cwtl
inc
dec
dec
xchg
sarb
push
lret
mov
jle
jb
aam
add
jle
sub
xchg
ret
lods
test
mov
lret
or
pop
push
and
add
adc
jmp
repz
addl
rol
into
in
cmpsl
pop
push
xchg
fisttps
mov
and
cmp
mov
xor
jl
iret
leave
mov
movsl
and
mov
xchg
sbb
rolb
fbld
lret
cmp
inc
xchg
movsl
mov
jge
jmp
push
jnp
add
das
or
std
int3
test
xchg
aaa
cmpsl
push
out
xor
addr16
mov
setp
sbb
sbb
cli
std
dec
push
xchg
and
or
popa
pop
sub
add
pushl
imul
or
loop
mov
insb
inc
push
push
repnz
pop
mov
mov
or
push
push
xor
data16
aaa
add
loopne
test
repz
lock
aad
repz
movsl
pop
sub
push
dec
pop
jl
mov
adc
js
and
loope
and
mov
fnstenv
mov
xchg
mov
in
bound
daa
movsb
mov
sub
bound
ret
sti
and
sbb
sub
pop
rcll
push
sub
or
cmpsb
xchg
sub
ficoms
jle
int
mov
lods
xchg
stc
xchg
pusha
ljmp
outsb
int3
sti
cs
arpl
fucomp
nop
mov
imul
imul
out
movsb
clc
mov
ss
imul
or
popf
inc
sub
sub
out
cmp
out
push
adc
pop
add
fsubrs
loope
push
lret
shrl
cmp
in
inc
je
and
or
or
ds
imul
sar
shlb
stos
cmpsb
sbb
or
xor
push
xorb
insl
pop
xchg
cltd
dec
mov
dec
mov
cmpsb
cmp
hlt
or
lea
pop
push
mov
mov
movsb
jp
and
inc
lret
mov
xorl
push
movsb
loop
sbb
xor
into
pusha
movsb
fisttpll
pop
xor
imul
jl
push
push
adcb
jmp
mov
or
sbb
inc
xchg
sti
addr16
inc
nop
mov
xchg
js
das
jg
sbb
shl
jo
mov
popa
sahf
jae
jns
xor
clc
int
incl
sub
shrl
ss
and
push
mov
or
cmpsb
inc
fnstenv
push
jecxz
js
xchg
dec
xor
std
fwait
sub
push
jnp
push
add
leave
call
push
mov
sbb
aam
push
push
movsl
xor
and
cwtl
inc
mov
adc
jb
inc
les
in
sub
jns
xchg
xor
stc
xchg
mov
xor
inc
mov
push
lea
mov
pop
sub
mov
stc
push
dec
add
xchg
and
xlat
xchg
mov
out
into
sub
daa
test
in
loopne
test
clc
sbb
add
xor
cs
adc
lods
fnstenv
xchg
cltd
jns
mov
mov
inc
in
cmpsl
xchg
adc
mov
fs
or
cmpsl
lods
mov
ljmp
popa
cld
inc
push
and
inc
cmp
add
jns
push
daa
sti
test
add
es
enter
aas
pop
or
inc
test
cmp
aas
jbe
pop
pop
mov
loopne
pop
or
push
xchg
mov
xor
cmc
dec
pop
insl
rcll
hlt
add
bound
mov
mov
shrb
movsb
bound
jbe
fsubs
lea
jo
or
push
sti
push
mov
fisttps
movsb
push
lea
xor
sub
pop
cmp
add
jb
leave
lods
jmp
repz
and
aad
shrb
dec
jle
dec
mov
inc
popf
and
sbb
js
push
ss
mov
cmp
shr
int
push
stos
sbb
bound
pop
xor
sti
ss
cs
shl
in
popf
loop
jecxz
fdivrl
stos
pop
mov
mov
rolb
stos
push
cmp
das
push
shlb
out
mov
repz
push
and
das
daa
mov
xor
mov
sub
sub
lods
mov
mov
mov
cmp
pop
pop
xchg
and
pmullw
testb
cmp
fidivrs
inc
scas
out
adc
mov
mov
js
jg
movsl
inc
nop
and
pop
xchg
loopne
adc
fistps
jne
adc
pop
jns
inc
jae
cltd
xor
inc
out
cmpl
adc
inc
imul
inc
pop
xor
cld
jb
inc
sub
xchg
inc
fsubs
sbb
iret
push
cmp
jl
xchg
sub
cli
daa
dec
dec
scas
outsl
or
lret
jne
jle
iret
dec
vpunpckhwd
mov
and
insl
repz
out
sahf
inc
or
cmp
mov
sbb
or
es
lahf
and
sahf
lahf
xor
shrb
inc
hlt
iret
test
push
pop
pop
inc
xor
cmp
in
loopne
cmp
jno
popl
pop
adc
fsts
ret
insl
push
pop
stos
insb
test
and
mov
mov
pushf
sub
xchg
aas
jb
inc
sahf
aad
and
mov
je
fcmovu
dec
push
jl
test
aam
inc
lret
das
dec
and
xor
sbb
insb
pop
mov
jecxz
xorb
and
pop
stos
sub
cmp
xchg
push
outsl
push
outsl
and
push
and
aas
addr16
shl
loopne
adc
lds
daa
cmp
inc
push
clc
sbb
or
sub
pusha
sti
dec
subb
test
ret
out
inc
dec
jbe
mov
mov
and
jns
pop
leave
pop
aaa
cmpsl
mov
sub
jo
enter
cmc
and
scas
mov
cmpsb
adc
cmp
sub
push
fcoms
sub
dec
add
iret
fisttps
add
outsb
dec
flds
repz
and
sbb
push
sub
scas
inc
lods
pop
lods
adc
and
or
test
and
and
mov
jnp
lahf
mov
pop
daa
adc
mov
push
or
dec
in
mov
or
sub
push
cwtl
scas
ja
icebp
dec
jmp
dec
xchg
sbb
pushf
nop
int3
xor
add
cld
lods
or
or
scas
sahf
pop
jns
mov
or
dec
nop
push
xchg
cmp
ficomps
cmpsb
sarb
popa
fnstcw
mov
fwait
add
cmpsl
fs
inc
add
xor
mov
out
pop
push
mov
dec
jae
js
push
dec
daa
mov
mov
scas
dec
push
and
or
add
xor
fldcw
and
jbe
jb
add
out
inc
outsb
adc
out
inc
dec
sahf
jp
iret
stos
lock
sarl
dec
dec
rorl
in
sbb
xor
mov
and
in
add
inc
jno
int3
xlat
nop
or
lods
daa
push
fwait
addb
nop
imul
data16
mov
rorb
sahf
xor
lock
lcall
repz
les
dec
shrl
push
sbb
pop
je
mov
call
repnz
dec
ds
outsl
lahf
ja
jle
dec
xchg
inc
popa
dec
xchg
adc
mov
out
test
in
orb
out
enter
js
ss
int3
inc
sbb
in
movsb
add
sti
shlb
sub
test
aam
mov
dec
push
pop
rcr
and
sub
and
in
arpl
sbbb
filds
cs
loope
dec
lahf
mov
nop
nop
inc
push
or
dec
jecxz
bound
dec
mov
jne
jae
and
or
int
jno
sub
bound
push
fsubrs
lea
ret
jmp
ja
add
jb
shlb
imul
mov
imul
add
xchg
or
outsl
pop
imul
xorb
or
scas
jle
mov
push
xchg
push
scas
repz
lahf
movsl
adc
in
fsubl
imul
cmp
jmp
inc
in
shrl
add
sub
push
ja
lret
nop
fbld
adc
fbstp
and
test
jbe
mov
and
mov
insb
sub
add
and
adc
incb
out
inc
in
jp
pusha
mov
mov
and
cmp
lods
inc
pop
mov
mov
popf
jmp
lret
pop
mov
pop
lret
out
arpl
mov
out
sub
lret
adc
imul
pop
dec
mov
pop
aaa
imul
inc
stc
push
fists
inc
inc
and
daa
dec
or
mov
shl
sub
mov
ret
fisttps
test
das
icebp
push
mov
and
fcmovne
clc
mov
lret
fsubrs
sbb
jo
cmp
xchg
mov
out
sbb
bnd
lock
pop
fdiv
mov
cmp
push
or
mov
inc
in
xchg
test
sbb
mov
dec
xor
xchg
mov
test
cmpsl
mov
or
push
push
pop
stos
mov
enter
add
adc
mov
mov
int
imulb
mov
jp
test
pop
fs
pop
cmpsb
push
jg
into
ljmp
and
xorb
cmpsb
call
pop
push
mov
push
rorb
aas
lea
in
pop
mov
pop
sub
aas
in
adc
aad
push
pop
pop
and
push
rcrb
xchg
je
mov
push
ja
push
xchg
add
mov
inc
xchg
js
testl
mov
or
push
inc
jnp
dec
and
call
or
mov
mov
pcmpgtb
xor
out
adc
mov
popa
push
movsb
inc
fs
jg
mov
cmp
out
adcb
cmp
jp
ficoml
add
rol
xchg
popa
mov
fdivr
pushf
jbe
xor
iret
sub
xchg
push
insb
pop
gs
pop
inc
ret
call
and
daa
movsb
loope
mov
enter
test
incl
mov
fisttps
xchg
sub
fcmovbe
jns
xor
ja
add
cmc
repnz
out
add
dec
mov
jp
shr
sub
in
pop
mov
jno
sbb
add
xchg
movsb
jmp
mov
pop
jae
push
fisubl
cwtl
inc
or
cmpsb
test
pop
push
xchg
adc
mov
cmp
xchg
or
adc
jge
fidivl
lahf
inc
mov
sub
pop
jl
in
or
sub
push
cs
add
mov
ja
bound
xlat
mov
in
test
jns
xor
aad
sbb
mov
ret
xor
mov
nop
xchg
jb
push
pop
cltd
rol
test
inc
lods
popf
jo
cld
call
jbe
dec
out
es
test
lods
add
repnz
jle
stos
jp,pt
test
xchg
push
adc
orb
notb
andb
dec
jl
xor
xchg
ds
dec
cs
pop
xchg
sub
inc
std
inc
fstl
inc
sbb
cwtl
xchg
in
je
dec
in
mov
push
enter
jo
add
and
fwait
mov
in
fwait
je
mov
sub
or
out
mov
roll
movsl
hlt
bound
movsl
mov
into
push
inc
mov
iret
add
es
adc
and
xchg
jp
cmpsb
mov
imul
cmp
loop
out
push
sbb
test
daa
outsl
xchg
ds
arpl
nop
orl
dec
stc
push
mov
sub
xchg
movsl
lcall
stc
into
lds
lret
sub
lds
in
movsl
mov
rclb
push
push
inc
xchg
jno
je
dec
sub
lods
jp
jg
sbb
cld
es
jns
xor
imul
popf
mov
testl
and
sar
imul
mov
test
lea
sbb
sub
add
mov
dec
inc
xchg
xor
dec
sub
lea
addr16
mov
and
divl
scas
jecxz
xchg
loope
es
cli
xor
loope
push
cmp
daa
lock
sbb
push
js
xor
call
aaa
and
jmp
jl
into
out
pop
xchg
cs
xlat
xchg
pusha
sti
aad
mov
mov
sbb
clc
lods
pop
iret
cltd
rorb
stc
ret
dec
je
mov
mov
xor
pop
xchg
das
test
cmp
xor
sbb
bound
push
aad
mov
pop
mov
push
iret
push
popa
cmp
sbb
and
xor
mov
push
hlt
loope
inc
adc
lahf
in
xchg
cmp
imul
mov
push
adcb
mov
jge
mov
std
std
pop
mov
and
push
mov
inc
call
nop
lahf
dec
and
daa
imul
sub
call
pop
xor
xor
xor
cmp
imul
outsb
xchg
and
add
cmc
lea
ret
jno
int
and
mov
js
mov
in
stos
ffreep
cmp
in
lret
cmp
nop
pop
pop
push
mov
mov
ja
dec
mov
mov
xlat
out
xor
xchg
or
xchg
add
dec
imul
or
inc
pop
fiadds
push
mov
shrb
pop
or
mul
out
push
in
popf
sbbb
ret
or
cmp
or
push
pop
fldenv
sbbl
or
fwait
jg
and
pmaxsw
dec
add
or
rorb
fadd
pop
adc
push
xor
sbb
sub
scas
xor
enter
xor
add
ja
subl
mov
clc
pusha
cmp
mov
and
in
push
mov
jg
pop
inc
icebp
ret
dec
or
mov
and
inc
xchg
push
mul
adc
sbb
in
and
pop
cmpl
cmpsl
ret
adc
add
mov
mov
lea
xor
scas
lods
icebp
xor
mov
lcall
cmp
subl
cli
and
sub
push
or
sbbb
mov
xchg
imul
sub
mov
adc
dec
std
lock
lea
insb
int3
adc
pop
mov
and
inc
push
inc
pop
push
fiadds
jbe
xor
jge
xlat
imul
jo
aam
ds
hlt
in
fstps
sbb
test
mov
pop
inc
mov
mov
int3
arpl
mov
int3
dec
jnp
jecxz
cs
xchg
inc
js
jae
cmpsb
repz
mov
jecxz
test
stc
scas
pop
xchg
sbbl
scas
cmp
idivb
and
js
test
inc
push
push
rclb
loope
add
imul
sbb
mov
sub
popf
call
mov
and
or
xchg
aam
add
mov
pop
jle
imul
inc
movl
jg
xchg
pop
pop
jnp
pop
mov
pop
lods
cmp
clc
cmp
testl
inc
mov
into
fnstsw
clc
cmp
daa
out
adc
rcll
lret
out
les
inc
popf
decb
je
test
sub
mov
inc
mov
jo
in
shrb
cwtl
in
daa
sbb
fcmovnb
push
ja
scas
sub
xchg
xchg
je
jae
pop
sahf
xchg
out
xor
mov
insb
xor
aam
lods
dec
jns
dec
out
xchg
add
sub
daa
push
xor
in
les
jbe
fcmovbe
push
xlat
inc
push
jmp
call
cmpsb
push
jne
sbb
or
sub
jnp
insl
outsb
dec
test
sbb
addr16
imul
enter
stc
cli
lods
or
cmpsl
frstor
clc
and
add
mov
rol
sub
and
movsb
decb
push
add
lret
sbb
scas
mov
and
add
add
and
daa
or
or
mov
add
push
fldl
stc
lcall
sbb
mov
cwtl
pusha
mov
mov
dec
daa
adc
pop
out
xchg
xchg
jmp
mov
jge
call
ja
adc
cmp
mov
rolb
fdivrl
imul
mov
mov
lret
out
int
pop
push
xchg
lahf
out
int
les
sbb
mov
push
jne
dec
leave
mov
in
dec
outsb
divl
insl
cmc
orl
cli
or
mov
enter
dec
es
out
lods
lea
negb
notb
push
pop
jmp
mov
gs
je
sub
mov
loopne
jp
sarl
jbe
add
adc
int
pushf
xchg
test
sbb
sbb
ja
push
imul
mov
cmc
mov
les
add
mov
adc
jne
pusha
sbb
fs
xlat
xchg
int3
mov
mov
call
pusha
mov
sbb
std
sbb
jnp
lret
xor
mov
sub
out
lcall
mov
out
shr
sbb
jp
mov
mul
inc
hlt
enter
inc
popf
shrl
repz
cmp
lea
sub
push
fwait
outsb
fcmovbe
xor
xchg
in
js
and
xor
fstps
out
sbb
stos
sub
loope
and
mov
inc
and
fbld
test
cmovns
sub
imul
iret
sbb
or
repz
push
cmpsb
movsl
xor
loope
dec
bound
mov
mov
stc
dec
ljmp
cmp
call
fwait
insl
sbb
jnp
xor
mov
xor
inc
out
loopne
fcmovb
pop
test
jecxz
mov
aas
leave
dec
fldcw
gs
jmp
dec
imul
sbb
repz
mov
cmovne
dec
xor
jp
add
inc
cmc
cld
sbb
mov
into
ret
cmp
adc
jne
sbb
adc
stos
jnp
ss
pop
outsl
xor
aas
xchg
notl
loop
sbb
scas
cmp
push
push
hlt
repnz
mov
sbbl
jl
int3
mov
push
ret
or
gs
xchg
sub
xor
into
cmpsl
pop
int
daa
faddl
lret
inc
xlat
addr16
push
inc
mov
add
mov
adc
movsb
icebp
int3
xchg
mov
mov
cmp
mov
adc
cmp
cmp
test
std
rcrl
rclb
push
out
sbb
dec
in
jl
jnp
xchg
xchg
hlt
incb
add
rcrl
ficompl
xor
mov
test
out
in
jg
aaa
aam
rol
xchg
fdivrl
mov
repnz
xor
cmp
xlat
shrl
loope
pop
mov
add
xlat
sub
xchg
pop
lcall
aad
push
out
icebp
nop
inc
push
sub
cwtl
or
mov
push
jg
jbe
add
xchg
je
xchg
or
jns
fldcw
jle
imul
addl
adc
decl
shl
int
jb
repnz
scas
movsl
xchg
les
ljmp
xchg
add
add
idivb
stos
jecxz
push
in
in
push
mov
cmp
jo
fimuls
mov
movsb
push
and
lock
lods
lods
mov
mov
sbb
sub
addr16
and
mov
mov
mov
int3
aad
lcall
add
mov
mov
fnstcw
daa
push
aaa
adc
pop
cli
hlt
addl
das
fistpll
das
mov
push
inc
loopne
into
inc
push
daa
jp
repz
shrb
fsts
mov
push
std
mov
xchg
cli
mov
push
aad
push
pop
out
or
mov
mov
and
lcall
sbb
dec
sub
add
mov
xchg
in
icebp
pop
mov
movsl
sahf
jle
out
das
enter
lahf
inc
mov
fs
lcall
ret
in
flds
lods
lds
pop
xchg
loopne
dec
xor
lock
inc
loope
inc
xchg
cltd
sbb
mov
loop
repnz
xchg
movsb
rorl
pop
into
in
xchg
insb
in
adc
jb
rcrl
pop
mov
xor
xor
arpl
jmp
pop
loopne
jp
lcall
cmp
movsl
push
mov
mov
mov
cmp
int
sahf
push
dec
fisubrl
push
jns
je
sti
jne
rorl
pop
adc
daa
lock
stc
mulb
inc
xor
or
cmp
ret
lods
repz
fcomps
pop
pop
inc
dec
imul
int3
jge
rorb
cwtl
sub
cmpsb
in
push
lcall
jb
jo
cmp
xchg
int
ret
movsl
imul
hlt
sarb
sti
fistpll
cld
cmc
xchg
jmp
iret
es
in
add
cmp
inc
push
add
dec
push
inc
das
data16
jbe
imul
and
repnz
sub
clc
in
rcl
lret
push
sub
rol
shlb
xchg
adc
jg
xor
jg
jg
inc
scas
cmpsb
xchg
dec
pop
rorl
mov
out
jmp
inc
mov
fbld
xor
repz
stc
lcall
mov
mov
adc
push
addr16
jnp
mov
xchg
iret
cli
ds
xor
jae
fimuls
cmp
sub
and
or
faddl
pop
std
jge
out
mov
popa
fdiv
out
stc
je
jle
lret
lahf
pop
dec
mov
push
xchg
dec
mov
sahf
insb
fstpt
loope
or
jle
cmp
and
inc
push
mov
adc
inc
or
sar
shr
hlt
pop
lock
imul
inc
cmp
push
dec
aas
ja
stos
mov
loope
and
outsb
stos
pop
arpl
in
outsl
imul
sbb
mov
pop
inc
addr16
lods
pop
mov
popa
outsb
loope
sub
sarb
lret
xchg
sbb
stos
cmp
jae
outsb
mov
mov
pushf
xor
push
lret
cmpsb
jno
inc
gs
mov
icebp
and
pop
pusha
iret
inc
or
push
add
filds
mov
mov
aad
bnd
cmp
pusha
pusha
pusha
lret
popa
mov
sub
es
sub
insb
cmp
mov
jnp,pn
insb
or
std
repnz
jmp
movsb
movsl
adc
gs
in
jle
mov
testl
or
fisubrs
das
xor
cmpsb
clc
and
inc
insl
loopne
test
cmpsl
popf
mov
notb
add
lds
mov
mov
scas
add
inc
bound
stos
stos
lcall
pop
cwtl
pop
mov
and
xchg
stos
clc
ss
mov
cmp
sub
call
or
hlt
cmp
in
jbe
mov
imul
xor
call
push
mov
push
xrelease
and
or
push
mov
inc
mov
jp
push
add
push
insl
mov
outsb
xchg
adcl
add
inc
mov
je
js
lcall
flds
addr16
adc
push
pop
or
out
or
loopne
pop
stos
scas
dec
decb
popf
ficompl
aas
xor
scas
and
adc
xor
enter
test
imul
in
mov
ret
adc
mov
imul
pop
sub
mov
sti
ja
mov
cmp
inc
enter
sub
pop
divb
mov
sbb
jbe
and
pop
test
xchg
mov
rcrb
out
test
sar
in
scas
and
les
ret
ret
jbe
loop
out
jp
jg
xlat
or
push
jnp
xlat
pop
into
adc
mov
fsubl
adc
mov
leave
pop
mov
jno
or
cltd
dec
pop
out
push
fwait
dec
movsl
loop
jo
mov
das
xor
fldt
das
add
jl
push
push
clc
pop
es
mov
push
xchg
xor
ja
scas
cltd
or
aas
inc
sbb
test
sub
inc
pop
out
insl
and
movsb
es
dec
xchg
push
std
and
and
or
and
sub
dec
sti
int
push
sub
scas
pop
ds
mov
test
xor
mov
fidivl
je
es
imulb
lea
xor
dec
pop
mov
lahf
mov
mov
in
mov
and
cmpl
and
sahf
movsl
mov
shll
dec
ljmp
mov
mov
mov
data16
cmp
push
xchg
and
xchg
mov
mov
xor
mov
adc
and
cmp
jp
adc
mov
flds
dec
jae
fxch
xchg
addr16
in
imul
adc
push
push
xor
mov
daa
cmp
and
xchg
out
sbb
aas
js
fsub
movsb
add
xchg
shrb
sub
xor
jo
movsl
cmp
imul
fldz
insb
sub
idivb
sbb
fmul
insb
fistps
jns
das
in
add
pop
loope
xchg
in
lock
push
push
mov
dec
inc
inc
push
in
popa
push
pop
xchg
mov
loope
stos
pop
lock
aad
icebp
int3
dec
mov
mov
push
dec
sub
dec
sub
lcall
mov
outsl
mov
mov
mov
arpl
jp
hlt
cmp
ljmp
cmpsb
or
movsb
ret
pop
enter
in
pop
loop
dec
es
scas
inc
dec
xor
lcall
push
in
mov
cmp
aaa
js
int3
sub
popf
outsb
repnz
push
add
xchg
push
fidivs
cs
sbb
lcall
xchg
jb
xor
dec
jo
pcmpeqb
sahf
xchg
mov
sbb
mov
xchg
insb
movsl
mov
movsb
aad
outsb
dec
add
ja
jl
faddl
fs
dec
test
or
nop
adc
cmp
xor
push
test
add
and
stc
jge
adc
adc
cmp
sbb
fs
stos
aaa
adc
cli
jl
xchg
sub
add
xorb
and
repz
inc
cmp
rcrl
fucomp
mov
push
push
cmp
ud1
aaa
xor
or
ja
add
xor
pusha
por
enter
mov
movsl
cmp
cli
xchg
fadds
insl
mov
inc
sbb
enter
sbb
popf
mov
cmc
shrb
pop
hlt
int3
cld
mov
scas
jbe
loopne
cli
insl
jl
loop
sbb
mov
sub
mov
sahf
pop
and
jbe
popa
pusha
jg
xlat
arpl
aas
cmpsb
jne
xor
pop
sub
xchg
sub
jns
test
inc
aaa
ja
and
push
or
push
aad
aam
ljmp
jno
hlt
icebp
pop
sbb
mov
cmp
sbb
jnp
int3
or
jge
lds
adc
xlat
cmpsb
jnp
fdivrl
and
jp
scas
ljmp
cli
ja
mov
ljmp
rcr
sbb
jg
inc
push
xor
repz
xchg
sarb
aas
mov
dec
mov
lret
mulb
and
adc
dec
out
inc
add
cmp
scas
jecxz
dec
adc
out
mov
mov
pop
mov
fmull
or
sub
hlt
cmp
cmp
xor
loop,pn
mov
mov
or
jg
std
rorl
movsb
arpl
out
or
or
out
imul
sub
bnd
mov
adc
push
repnz
sahf
adc
iret
insl
push
push
xor
xor
out
cld
lea
and
fadds
jo
xchg
adc
ret
adc
fwait
dec
shrb
dec
loop
jbe
inc
loope
loop
idivl
call
push
jns
mov
call
in
push
insl
mov
pop
aad
jmp
pop
out
add
cltd
push
mov
es
jae
test
xor
mov
out
xchg
and
pop
xor
inc
nop
cli
rorl
iret
lea
repz
xchg
std
aas
mov
mov
repz
xchg
pop
mov
cld
cwtl
adc
stc
adc
add
jne
cmc
les
out
mov
dec
jne
popf
gs
mov
or
mov
pop
xchg
fsts
mov
test
inc
push
out
pop
orb
cmp
loope
js
shrb
cmp
test
nop
lcall
loopne
in
jno
inc
sbb
sbb
lds
inc
adc
jmp
and
jne
push
pop
pop
jb
sub
jmp
push
cmpsb
jg
sahf
xor
dec
inc
les
addl
inc
fadds
cli
add
lock
xchg
sahf
or
loope
jmp
push
cltd
cmpsl
shrl
add
lcall
icebp
sub
push
ffree
pop
leave
mov
jge,pn
rolb
leave
int3
je
xlat
test
xchg
fs
xchg
insb
fwait
scas
fimull
xor
fisubs
inc
cmpsb
xchg
cld
das
pusha
xor
xchg
or
sub
mov
pop
dec
or
push
ja
dec
or
and
push
mov
or
inc
inc
ds
fadds
push
pop
mov
pop
add
xchg
add
or
insl
cmp
outsb
nop
out
test
rcrl
mov
sbb
sbb
or
push
cmp
lods
loope
cmpsb
ffree
xchg
cmc
ljmp
std
cltd
adc
add
data16
add
aas
or
iret
ficoms
fs
fs
cmp
pusha
subl
xor
mov
fstpl
push
sar
ret
push
mov
mov
xchg
add
int
add
pop
sahf
outsl
adc
push
inc
mov
stc
in
sbb
or
call
xor
sbb
xor
lods
jb
mov
fists
push
adc
in
rol
xchg
or
push
inc
add
fdivrs
or
test
std
popa
enter
mov
fdivs
adc
cs
pushf
notb
cmp
dec
mov
mov
insb
or
test
adc
pop
xor
call
pop
mov
fsts
aas
sub
pop
cli
push
inc
dec
pop
push
mov
jmp
xor
cmpsb
pop
andb
jmp
js
movsl
loop
cs
add
lcall
mov
mov
popl
jns
rcrl
push
pop
xchg
stc
scas
cmp
lret
aaa
cmpsl
jne
mov
adcb
and
in
adc
mov
fidivl
dec
int
and
fcmovne
xchg
jb
jno
in
aam
mov
fwait
or
pop
scas
lahf
xlat
mov
shlb
adc
out
out
scas
rorl
sbb
out
vunpcklps
outsb
mov
and
push
daa
imul
insb
daa
nop
cs
add
xchg
lods
out
and
xchg
jno
or
sbb
rorl
out
cs
fildl
in
out
pop
mov
cmp
jge
sub
dec
fsubr
rcrb
mov
add
add
in
pop
lds
int3
wrmsr
jns
pop
xor
jecxz
sub
cli
lods
mov
dec
jae
mov
add
push
mov
push
cmp
cmp
adc
sbb
mov
mov
push
mov
xchg
mov
out
imul
cmp
pop
jl
push
movntq
mov
cmp
rcr
adc
sbb
jmp
repz
inc
cmc
dec
sub
inc
and
movsl
mov
les
inc
add
fimull
aaa
dec
cltd
xor
xchg
pop
aad
xchg
mov
jb
mov
sbb
pusha
xchg
push
stc
xchg
adc
test
xor
push
mov
mov
adc
push
mov
or
inc
movsl
sbb
xchg
adc
or
data16
in
add
es
sbb
fistl
mov
push
es
hlt
repnz
aam
insl
sbb
mull
mov
test
fldt
push
inc
push
jae
test
lods
jecxz
add
xchg
out
or
jecxz
sbb
sbb
cmc
cli
add
mov
addl
in
dec
pop
insl
mov
rclb
xor
cwtl
out
movsl
orb
jle
jmp
les
sbb
xor
jecxz
aas
push
and
cld
and
scas
scas
push
push
cmp
pop
sbb
add
nop
popa
jl
xchg
out
je
movsb
dec
insb
xor
mov
xchg
pop
rolb
shll
sbb
sbb
jmp
leave
popa
pop
mov
out
es
fcmovb
js
pop
jae
push
mov
hlt
mov
sarl
rol
iret
scas
xlat
push
inc
jl
stos
mov
lock
push
xor
sbb
shrb
test
jle
jne
ret
inc
mov
in
xchg
xchg
iret
adc
mov
loop
dec
jbe
adc
std
cmp
or
mov
imul
mov
shl
mov
xchg
std
push
shr
jno,pt
adcl
insb
rorl
int
xor
repnz
cmp
pop
xchg
mov
cmpsl
call
pop
cmpl
pushf
jp
lahf
lods
add
adc
inc
aaa
mov
cli
hlt
xor
mov
imul
push
loopne
sti
dec
ficoml
or
movl
push
push
aas
or
xchg
sub
insl
mov
cmp
test
es
imul
inc
xchg
imul
add
repz
dec
dec
push
push
mov
lods
es
and
pop
pop
mov
jg
mov
sub
and
int
ljmp
adc
repz
loop
mov
mov
les
incb
fmulp
in
jno
push
cmp
or
add
daa
or
add
pop
rcl
jge
out
dec
daa
mov
cltd
divb
mov
negb
sub
or
push
sbb
xchg
repnz
mov
pop
push
push
or
inc
scas
and
ficompl
fistl
mov
jno
in
mov
jge
cmpsl
and
lret
lea
inc
iret
push
addr16
push
popf
lret
ds
or
xchg
arpl
jno
pusha
inc
xor
cwtl
pop
jmp
or
adc
mov
inc
popa
mov
scas
pusha
shrl
mov
inc
adc
xchg
mov
cld
cmp
lock
leave
inc
push
mov
fmulp
lret
jmp
lret
jge
in
xchg
hlt
xchg
cmp
mov
xchg
jle
adc
shl
lcall
sub
fnsave
xchg
and
daa
loop
leave
fs
les
sub
into
cmp
ficoml
push
loop
shrl
aam
pop
fldenv
in
mov
insl
lret
sub
lret
mov
cmp
jns
in
sbb
lea
ret
out
gs
das
dec
pop
mov
add
push
in
pop
mov
mov
pushf
xor
xor
insb
rcrb
lods
xchg
jle
decb
rclb
ja
mov
sub
xchg
lret
cmp
test
pusha
adc
jmp
cmpsb
dec
das
dec
add
test
add
jbe
push
addr16
xchg
xchg
popa
mov
ss
inc
push
jnp
aad
in
cmpsl
icebp
outsl
lret
cmpb
pop
incb
xchg
cmp
out
cmpsb
shlb
cmc
push
adcb
loopne
adc
shlb
sub
sahf
cpuid
xor
jo
sbb
dec
js
mov
sub
xchg
popa
arpl
js
pop
loopne
scas
push
cmc
fiadds
mov
pop
push
add
inc
sbb
adc
out
test
or
mov
int3
das
push
addr16
frstor
pop
pop
rorb
pop
xchg
sub
lahf
fldl
dec
adc
ljmp
mov
mov
ret
push
or
in
jno
ja
arpl
dec
jecxz
xchg
mov
or
hlt
rcrb
inc
inc
and
add
clc
jns
imul
jno
outsb
push
dec
insb
push
stc
nop
aam
push
jne
daa
jne
sub
adc
aam
movl
rorl
sub
inc
mov
push
and
mov
pop
dec
push
je
xorb
dec
sub
daa
jmp
xor
in
fsubrp
mov
shrl
loopne
pop
xor
mov
xchg
aam
push
movsl
push
adcl
pushf
icebp
pop
push
repz
xchg
push
xor
cmp
inc
inc
ret
add
mov
xchg
ss
pop
loop
jl
xlat
push
adc
sti
lret
dec
xor
sbb
cs
sarb
int3
sti
std
fwait
jmp
mov
ss
das
push
rcl
iret
pop
data16
ret
pop
xor
gs
xor
xor
xchg
int3
pop
xor
loope
sub
loope
cmp
pop
cmpb
jno
xchg
adc
imul
pop
cltd
sarb
or
dec
in
sbb
in
cmp
insl
pushf
xor
push
imul
push
leave
inc
cld
lods
outsl
sbb
xchg
in
filds
jge
repz
scas
lods
int
mov
sbb
sti
pop
mov
mov
sub
mov
fwait
and
sbb
jno
ljmp
arpl
jae
int3
cmp
sub
mov
iret
and
mov
pop
jnp
clc
and
pop
pop
adc
mov
rorb
push
xchg
outsl
repnz
stc
inc
rclb
pop
jo
xchg
stc
dec
xlat
and
inc
mov
lea
cmpsb
or
stos
xchg
adc
sub
adc
adc
int
test
ds
pop
addb
sbb
movsl
adc
popa
rcl
loope
pop
fimull
jmp
je
add
das
sarb
test
aaa
inc
test
pop
lahf
testb
pop
nop
adc
sub
xchg
sub
xchg
inc
out
ficoms
xor
push
sti
stos
pop
imul
adc
scas
cwtl
sahf
jo
jne
andl
jmp
addr16
aad
insb
out
mov
xlat
or
les
out
orb
push
mov
dec
loop
lds
sub
daa
mov
push
xor
and
stos
jl
pusha
mov
adcb
mov
stc
add
dec
mov
cmpsb
mov
fwait
cmpsb
push
jge
aam
mov
xor
jp
mov
sbb
add
lret
mov
pusha
in
mov
sbb
pop
out
icebp
sbb
movsb
out
cli
lods
mov
je
clc
int3
scas
shlb
test
out
aaa
cmp
maskmovq
testl
xor
nop
sub
push
js
leave
mov
ja
lods
jb
int
les
pop
cli
cmp
add
pop
cwtl
out
out
adc
or
sbb
cmp
ficoml
fiaddl
decb
imul
gs
sbb
mov
sub
lret
sbb
call
jecxz
sarb
fwait
mov
pop
mov
pop
jae
jnp
mov
xchg
mull
mov
hlt
fadds
cmpsl
sbbl
push
mov
sub
push
js
mov
loopne
test
in
mov
es
mov
and
orb
cmp
jl
imul
or
push
imul
adc
inc
xor
in
imul
xchg
lahf
mov
jmp
jbe
jl
insl
mov
cmp
or
pop
push
jg
xchg
mov
in
mov
jecxz
out
addr16
mov
inc
test
in
cld
or
out
mov
fcoml
imul
es
pcmpeqd
dec
dec
cmc
outsl
out
cmpsb
sub
sti
xchg
cmp
pusha
pop
insb
dec
lret
jle
xor
push
bound
out
and
add
or
js
jle
orb
or
clc
lret
xor
mov
cmp
jl
ljmp
rorl
adc
xlat
orb
clc
xchg
jo
fwait
sbb
xor
fistl
rol
cmpsb
push
xor
mov
dec
and
imul
fcoml
je
xchg
dec
sub
lods
sub
enter
xchg
popf
mov
sahf
test
xor
faddl
mov
mov
testl
outsl
cmpsb
ljmp
loopne
mov
cmp
xor
mov
push
pop
sti
daa
push
mov
sbbb
pop
or
mov
jge
stos
test
icebp
filds
and
loope
and
and
in
mov
or
jne
outsl
sub
xchg
gs
push
rcl
sahf
icebp
scas
and
fwait
sarl
aad
and
xorl
idiv
enter
push
mov
push
xchg
sahf
in
sub
jbe
test
sahf
push
das
loop
fmull
loopne
mov
xor
sbb
xchg
cltd
mov
std
cmp
test
mov
insl
sub
inc
lods
sbb
xchg
dec
pop
lret
insb
call
jg
ret
push
mov
aaa
push
sub
pop
adc
and
in
bnd
arpl
push
push
call
js
mov
movsb
pop
push
adc
mov
jge
insb
fstps
repz
cld
adc
mov
jo
sub
movl
in
imul
movzbl
dec
mov
cmc
mov
sub
outsb
arpl
jle
jns
cmc
mov
loop
mov
fistpl
mov
gs
adc
fnstcw
call
xchg
idiv
xchg
and
xor
call
mov
orl
jge
adc
and
pop
dec
mov
jne
loopne
das
pusha
pop
leave
xlat
ficoms
jne
popf
fst
or
int3
push
adc
jb
mov
int
les
das
repz
pop
aam
sbb
rcl
pop
cmp
push
cltd
inc
adc
lds
dec
jno
jbe
call
lret
mov
cld
stos
and
fsts
adcb
in
xchg
push
jl
xchg
pop
or
sbb
mov
sbb
movsb
ljmp
popa
das
mov
sbb
mov
jo,pn
loop
sbb
repnz
cltd
cli
and
jno
dec
aam
sub
push
addr16
pop
aad
shl
call
xchg
mov
mov
lods
in
or
hlt
lahf
inc
outsl
dec
test
mov
dec
adc
sub
ljmp
sbb
mov
adc
je
ljmp
loope
mov
mov
shlb
jbe
or
and
dec
jb
push
ret
pop
jno
push
out
neg
xchg
inc
popa
mov
push
and
and
ret
add
cmp
scas
sahf
xchg
xor
ja
je
cmpsl
mov
adc
es
mov
mov
iret
pop
jmp
cwtl
mov
notl
sbb
cli
cwtl
dec
cmp
test
aam
sub
or
lahf
stos
and
mov
mov
mov
xchg
orl
into
xlat
pop
jecxz
int3
cmp
or
push
jle
push
aad
aas
sbb
jge
mov
cmp
lret
call
inc
iret
cli
les
lock
pop
mov
adc
sahf
sub
adc
pop
imul
dec
je
dec
dec
fwait
lret
xlat
je
out
test
or
cli
cmp
inc
dec
inc
or
outsl
add
push
std
cwtl
scas
pop
rorb
pop
cmp
push
add
xor
lcall
and
ds
cmp
and
push
lods
jmp
inc
mov
cltd
mov
and
ja
inc
daa
mov
mov
xor
stc
lret
xor
jg
bound
cmpsl
mov
stos
cmp
ss
jbe
and
cmp
shr
in
mov
sbb
pushf
xchg
addl
imul
dec
jb
jmp
inc
mov
std
out
mov
dec
mov
sub
jle
jl
pop
pop
cmpsl
cs
js
aas
pop
push
fsubr
in
iret
xor
sub
mov
or
dec
sub
sbb
mov
bound
mov
mov
orl
or
int3
cld
test
sahf
sbbb
cmpsb
mov
das
aas
mov
mov
xchg
sti
xchg
into
loop,pn
dec
sbb
into
sarl
adc
jl
push
mov
mull
leave
adc
mov
mov
fmull
dec
outsb
stos
insb
arpl
nop
jg
adc
gs
xchg
fmuls
fs
flds
loop
pop
mov
shr
fcmovnbe
ss
jne
orb
scas
push
sbbb
fsubrl
add
movsb
lret
dec
dec
xor
sbb
jne
clc
fstpl
adc
andl
push
mov
enter
pop
repnz
les
xchg
adc
and
push
mov
ljmp
std
mov
adc
and
sub
sti
sub
and
sbb
test
pop
xlat
sub
push
movsl
adc
lret
push
push
adc
jb
in
cmp
les
popa
imul
std
mov
xlat
push
clc
and
inc
mov
jmp
mov
and
popf
cltd
jbe
ret
push
test
adc
jnp
repz
loopne
jb
xchg
adc
push
cwtl
popa
shrb
pop
add
mov
xchg
xchg
or
cmp
es
les
add
notb
mov
jnp
clc
sub
fldenv
mov
or
xor
and
push
scas
in
insb
insl
lcall
imulb
ret
xchg
jp
pop
pop
dec
xor
lret
or
or
in
shrb
stos
and
adc
pop
xchg
inc
pushf
mov
pop
arpl
push
pop
mov
push
dec
popa
mov
sub
dec
mov
cmpb
add
and
dec
ret
add
sub
jecxz
daa
lds
in
mov
sub
mov
xorb
out
push
test
repz
cld
ret
jge
jo
add
mov
sbb
and
sbb
cltd
lods
jae
jl
cmp
cmp
mov
xchg
xor
push
loop
push
inc
dec
out
xor
mov
push
lods
xchg
hlt
pop
sahf
andb
andl
xchg
pop
mov
xor
dec
sub
fsincos
out
add
call
adc
or
aaa
dec
repnz
leave
inc
test
rcrb
inc
pop
int3
out
call
mov
ja
fnstsw
stc
mov
lret
mov
dec
dec
test
pop
push
cli
cmpl
jo
pop
bound
add
cmp
sbb
lcall
pop
daa
fcmovnu
notl
std
and
xchg
ss
adc
mov
mov
mov
insl
fildll
add
out
rolb
xchg
xchg
bound
lret
dec
insl
scas
mov
hlt
je
sub
rcr
mov
mov
xorl
test
test
jo
mov
loopne
stos
mov
pushl
or
clc
xchg
cmp
mov
lea
popa
mov
ds
cmp
or
aam
or
adc
popa
xor
jae
popf
lds
cld
xor
jae
mov
add
stos
jns
push
mov
cs
xor
aad
jo
and
cld
push
jmp
mov
sub
adc
and
mov
push
lea
cmpsb
jmp
xor
imul
shlb
xlat
ficoms
add
add
add
dec
jbe
loopne
xchg
fwait
pop
jmp
mov
push
das
je
int
mov
pusha
push
xor
mov
sar
gs
push
jne
xchg
pop
scas
push
popa
movsw
cli
scas
in
sbb
lret
or
xor
das
ljmp
or
cmpsb
jo
inc
inc
sub
xor
addr16
jl
sti
mov
sbbb
ss
push
repz
and
mov
aaa
jb
rcrl
dec
negb
out
push
ss
cmpsb
pop
div
pop
fistpll
loope
sub
pop
daa
xor
fsubr
pushf
mov
lods
add
pop
inc
sub
mov
mov
sbb
adc
fcmovnu
outsb
fwait
popa
loopne
jne
icebp
and
mov
mov
mov
push
sbb
mov
ret
icebp
inc
mov
sbb
sarb
xor
popf
jb
or
add
je
sarl
popf
jo
test
or
aaa
jnp
dec
and
add
cmp
inc
cltd
pop
jg
pushf
or
and
ret
or
pushf
and
pusha
inc
or
sti
mov
inc
adcl
loope
fimuls
sub
and
jecxz
loopne
adc
loop
rorl
lret
mov
or
je
outsb
xchg
cmp
xchg
lock
addr16
xor
dec
adc
rcll
test
mov
dec
sbb
sub
push
cwtl
outsl
pusha
call
hlt
jecxz
rclb
outsl
cmp
add
push
xchg
adc
pop
dec
int
xchg
aaa
cmp
popl
push
in
int3
rcrl
daa
lret
mov
jle
xorb
or
jns
nop
fbstp
inc
pop
nop
dec
lret
fidivl
or
mov
add
mov
cmp
jae
iret
sbb
sub
ficompl
inc
cld
pmulhuw
add
sub
jb
adc
bound
and
sub
dec
rolb
fnstcw
pushf
sbb
scas
out
push
and
xchg
mov
fsubrl
repnz
cmc
testl
and
cld
das
cmp
in
in
inc
shrb
dec
add
mov
jbe
mov
mov
in
movsl
add
mov
adc
mov
lock
lret
and
cmp
mov
outsl
ret
add
sub
or
clc
sub
dec
cmc
and
jge
scas
sar
lret
cli
xchg
shr
mov
mov
sahf
into
mov
inc
mulb
lret
xor
call
int3
int3
shlb
mov
leave
das
jo
pop
mov
lret
push
inc
dec
push
mov
lock
pop
idivl
inc
xchg
jecxz
iret
fdivrl
add
mov
sbb
dec
or
pop
push
jmp
subl
and
cmpsb
cmp
jp
pop
jo
sahf
aaa
hlt
pop
push
pusha
push
and
xchg
sbb
fwait
lods
jns
jno
sub
add
stos
les
or
loope
dec
and
cmp
cs
popf
adc
int
idiv
inc
xchg
fsubs
mov
icebp
xor
popf
shll
xchg
mov
xchg
sub
movsl
cmp
adc
cltd
sti
test
adc
rclb
stos
sub
mov
test
mov
and
ret
push
testl
leave
adc
push
mov
dec
daa
sub
and
pop
push
and
pop
push
push
fimull
imul
pop
push
loop
aas
xor
and
or
adc
fs
clc
mov
jbe
ss
ss
bswap
and
ss
addr16
xchg
or
and
lds
jnp
add
mov
push
jl
lds
jmp
push
xor
mov
mov
pop
iret
fdivrl
mov
xor
mov
pop
push
mov
push
loopne
mov
subl
out
xchg
out
fs
xlat
xchg
negb
neg
and
scas
or
pop
mov
outsl
jle
xchg
mov
gs
dec
movsb
lahf
mov
push
sbb
push
imul
or
mov
in
clc
jge
cmp
xor
inc
add
xorb
cmp
cmpsb
fmull
pop
sub
int
push
iret
jno
mov
jne
pop
add
jecxz
mov
aam
enter
xchg
data16
mov
aam
ficompl
mov
mov
mov
stc
nop
popf
xchg
pop
aas
ljmp
jge
repnz
imul
cmp
mov
ret
sbb
pop
lret
xchg
mov
repnz
je
push
stc
out
bnd
push
push
out
imul
test
lock
ror
js
xchg
dec
aas
jne
xchg
jae
ljmp
ja
push
fdivr
gs
mov
addr16
andb
adc
sahf
pop
jnp
dec
fdivrl
xchg
sub
nop
mov
bound
lsl
dec
mov
mov
mov
dec
test
xchg
aas
jae
jle
fs
pop
movsb
cmp
jne
mov
insb
jg
pop
or
adc
mov
cltd
mov
js
jecxz
ret
ds
dec
adc
outsl
or
test
cmp
adc
sub
je
cmp
insb
and
or
jl
cld
xchg
mov
push
fistpll
xchg
sti
dec
stc
mov
and
xor
jne
push
mov
or
js
rdpmc
aad
inc
inc
inc
sub
dec
movsb
sbb
add
push
pop
xchg
fmull
gs
pusha
pop
xchg
bnd
mov
dec
mov
and
lds
xchg
dec
pop
cmp
dec
inc
call
mov
ret
add
outsb
sbb
mov
dec
arpl
mov
inc
andl
imul
aas
fdivrl
lods
popa
xor
pop
imul
lea
out
mov
iret
lock
data16
sarb
sub
or
dec
push
ja
loop
int3
imul
mov
add
lcall
mov
movsl
shrb
stc
inc
outsb
stc
in
pop
int
or
pop
test
mov
mov
out
xchg
call
fcomps
adc
push
jle
nop
lods
daa
lcall
ret
imul
ds
cmp
lods
mov
or
popa
xchg
adc
out
jle
rcl
push
hlt
int3
out
cmp
or
cld
pop
jbe
pusha
pushf
mov
repnz
or
sbb
adc
pop
loope
out
insl
sbb
ficompl
int
cmp
fidivrl
push
je
xchg
jge
cmp
les
mov
add
sbb
mov
xchg
fldenv
inc
mov
push
xchg
add
insb
mov
mov
into
orl
mov
aas
mov
inc
dec
jl
in
popf
lods
mov
dec
mov
xchg
cmp
adc
lock
inc
lods
js
aam
jns
and
sub
pop
mov
cmp
push
xchg
nop
adc
fiaddl
and
sbb
cs
sbb
dec
xchg
inc
sbb
hlt
add
xor
movsb
xchg
in
out
add
sub
mov
cltd
popf
jecxz
mov
daa
cltd
mov
pop
js
xlat
or
shrb
sbb
jle
cmp
xchg
adc
fs
loop
mov
mov
mov
popf
push
std
adc
xor
ljmp
add
adcl
mov
or
daa
int3
or
into
jecxz
xchg
lcall
adc
xchg
repz
aam
inc
adc
call
cmpsl
mov
adc
loopne
icebp
imul
stos
push
and
sub
and
test
jmp
das
cli
xchg
add
lods
and
and
inc
xchg
xor
mov
pop
jbe
xor
int
test
cwtl
jle
std
repz
pop
dec
mov
xchg
cmp
and
cmp
repnz
cmpl
hlt
insb
loope
jne
push
mov
mov
in
rol
sub
sub
movsl
sbb
fcoms
add
push
sbb
mov
pop
add
mov
cmpl
push
jbe
pop
push
mov
repnz
aas
jmp
cli
fisttpll
mov
push
inc
filds
fisubl
push
push
xchg
es
pushl
jo
hlt
xor
jae
sub
int
cs
outsl
adc
clc
jbe
shlb
jno
loopne
lods
shrl
fnstenv
sbb
xlat
xchg
jns
rolb
or
in
adc
stos
fldcw
mov
mov
roll
insb
fxch
lea
xchg
test
cmpsl
jns
mov
scas
jo
inc
pop
cmc
out
adc
aas
xor
jg
and
movsl
adc
pop
mov
pop
or
in
or
or
inc
add
jg
jecxz
pop
js
sub
pop
sub
repz
jl
mov
aam
pop
xchg
leave
arpl
test
mov
xor
out
in
jb
dec
jae
mov
pop
pop
fs
inc
popf
xor
std
jmp
xchg
sub
lahf
lahf
xor
pop
test
xor
movzbl
aad
sub
leave
lret
sbbl
or
je
call
imul
popa
lret
mov
int3
lahf
fst
and
cli
or
push
out
and
pushf
fcomip
mov
daa
jg
test
outsl
js,pn
stos
lods
lcall
lahf
mov
mov
lods
mov
mov
movsl
push
pop
mov
lods
clc
and
adc
mov
dec
sub
sbb
mov
cltd
adc
mov
insl
mov
xlat
add
mov
std
into
cmp
cwtl
ja
pop
cmpsl
jge
mov
rcrl
cs
or
test
or
sti
sahf
popa
data16
jmp
sti
cmpsb
in
pushf
loop
inc
cli
nop
idivb
dec
mov
ljmp
lds
loope
das
add
mov
mov
cmp
ss
or
ret
xor
add
push
pop
insb
les
in
inc
push
fs
sbb
sbb
lret
push
mov
dec
lods
adc
sbb
inc
test
aas
jle
and
xor
rcrl
push
lods
jbe
pushf
pop
mov
sahf
and
negb
push
xchg
lahf
xchg
pop
std
pop
mov
in
jne
xchg
mov
push
mov
lcall
mov
icebp
movsb
dec
incb
loopne
loop
fwait
jno
jnp
std
mov
or
mov
rcr
xor
pop
add
loopne
lea
fscale
divb
scas
sti
cltd
jl
pop
inc
les
in
push
ret
push
mov
xchg
sbb
jbe
loop
sub
clc
mov
stos
test
mov
outsb
gs
shr
ljmp
in
mov
or
sbb
repz
pop
call
lret
les
push
addr16
out
out
in
sahf
mov
xchg
repnz
test
in
mov
sbb
dec
in
or
ret
repz
adc
mov
fwait
and
jp
or
inc
fldl
pop
pop
and
push
fxch
adc
insb
lds
shlb
or
jbe
daa
and
das
adc
in
jge
push
sbb
aam
scas
cmp
in
and
mov
cmp
pop
test
pusha
decl
mov
popf
subb
xor
inc
je
clc
daa
mov
lock
cli
sub
push
push
stos
cmp
shll
cmpsb
cmp
roll
add
pop
fwait
mov
sti
mov
dec
cli
cli
fwait
lahf
fs
jecxz
inc
scas
idivb
xor
test
repnz
enter
ss
cmp
mov
aam
pop
das
outsl
imul
add
int3
xchg
outsl
mov
in
add
cld
inc
stos
andl
cmp
mov
fstps
mov
cmp
repnz
dec
cld
cwtl
enter
sbb
loope
push
repz
lock
hlt
jo
sbbb
int
mov
daa
loope
cwtl
orb
xor
mov
sbb
rcrl
adc
out
bound
mov
sbb
push
jbe
test
pop
pop
push
mov
sbb
idiv
sub
pop
sbb
sub
lahf
int3
push
in
stos
mov
mov
fmulp
cmpsl
inc
mov
xor
dec
jl
adc
cld
sbb
jl
mov
xchg
push
xor
repnz
fwait
movsb
inc
inc
repnz
sbb
sub
in
data16
das
jmp
xor
stos
or
push
shlb
sti
mov
dec
sahf
inc
lds
pop
aam
push
ja
imul
dec
cmc
call
imul
js
aaa
add
js
add
dec
test
add
sbb
jbe
lcall
clc
and
gs
and
mov
add
call
sub
sub
ret
jp
jg
dec
jns
xchg
jg
jno
xlat
cld
push
loop
xlat
inc
adcb
dec
mov
lods
std
xchg
or
mov
xor
xchg
int
pop
ss
mov
jne
pop
int
and
aas
rcll
mov
fstl
xchg
inc
ljmp
or
dec
and
imul
mov
sbb
pop
mov
cmp
mov
mov
add
adc
jbe
rcrl
xor
pop
pop
cmp
pop
insb
test
sbb
adc
cmc
mov
push
adc
popa
rcr
push
movsb
fists
pop
stos
scas
lock
roll
movsl
dec
inc
mov
rorl
sbb
fwait
icebp
fmuls
xchg
adc
jge
nop
ret
mov
fcmovbe
sbb
int
sub
sarb
and
jg
ret
icebp
fcmovu
xlat
ret
mov
add
lock
xor
pop
cmpsb
jns
mov
xchg
addb
cmpsl
sub
stos
dec
imul
in
mov
fucomp
pop
push
jae
xor
jge
stc
scas
inc
loop
pop
sbb
dec
ds
dec
cmpsb
je
scas
sti
cmpsb
push
jg
cmc
pop
leave
push
pop
push
xchg
int
add
or
cli
cltd
mov
cld
dec
lock
pop
cmpsl
mulb
add
int
and
xor
icebp
jo
adc
cmp
cmc
sarl
inc
xcrypt-ofb
cmpsl
outsb
popa
inc
sub
ljmp
imul
sbb
mov
mov
insl
jmp
jle
mov
push
and
popf
icebp
shll
mov
cmp
inc
mov
and
lcall
pop
and
cs
lret
push
add
mov
fcomps
pop
sti
insb
lock
cmp
sti
sub
pop
mov
and
cld
mov
test
mov
out
cltd
mov
and
inc
test
icebp
loope
push
jne
fidivs
shll
push
mov
mov
sub
inc
sub
aas
push
xchg
test
stc
mov
add
in
jge
jne
adc
sbb
jge
mov
stos
cmpsb
leave
aam
loopne
inc
fisubrs
jbe
test
inc
mov
mov
negb
stos
inc
shrl
out
pop
xchg
sub
inc
pop
push
and
push
cld
and
and
xor
imul
mov
inc
or
xchg
push
mov
repnz
mul
mov
cwtl
movsb
arpl
ss
push
xchg
test
jmp
cltd
popa
dec
hlt
lock
jge
stos
inc
push
mov
pop
xchg
ss
or
enter
or
mov
fisubs
les
xor
stc
insb
mov
data16
aaa
push
pop
push
add
dec
xchg
mov
neg
and
fucomp
loopne
xlat
pmaxsw
xor
ds
mov
push
mov
mov
ret
icebp
dec
lds
jbe
xchg
shrb
sub
lock
sub
mov
xor
adc
enter
ja
mov
nop
dec
pop
ss
lret
scas
jmp
enter
scas
inc
hlt
clc
inc
mov
leave
pop
outsl
popf
push
movsl
ss
or
test
lret
es
cmp
dec
gs
repnz
and
ficoml
push
sub
mov
lahf
xchg
xchg
and
or
and
arpl
mov
outsl
lcall
inc
lods
pop
mov
inc
insb
and
fcompl
popa
push
fdiv
in
lods
mov
adc
cmp
lcall
out
adc
sbb
out
loope
push
ja
sub
dec
push
mov
mov
mov
rcrb
cmp
fcmovbe
mov
inc
mov
cmpsl
cmp
mov
loop
stos
out
xchg
les
icebp
popf
jl
xchg
lea
fsubs
fnstcw
mov
add
fistl
arpl
push
push
loopne
pop
movsb
push
mov
les
mov
in
pop
in
push
sahf
sub
loope
lods
pusha
pop
in
outsl
cmp
cmpsb
fcoml
fcomp
daa
xor
scas
jmp
outsb
add
movl
jo
aaa
testb
pop
inc
fmull
hlt
mov
fistps
mov
mov
push
dec
mov
sbb
sub
add
clc
add
inc
mov
cmp
repnz
insb
mov
jo
inc
mov
mov
mov
jno
xor
mov
rolb
or
mov
sti
add
mov
mov
xchg
jecxz
jne
cwtl
or
sbb
jnp
mov
rorb
call
lods
jp
flds
rcrb
dec
sarb
iret
cmp
push
and
xor
stc
push
xor
loopne
cmp
test
imulb
out
aaa
xchg
test
push
xchg
je
aas
push
arpl
fisttps
mov
add
lcall
mov
xchg
repnz
in
aad
and
mov
iret
adc
ret
mov
add
pusha
pop
mov
pop
dec
mov
pop
incl
ljmp
cs
js
mov
aad
push
and
lcall
aaa
or
jb
xor
dec
mov
push
jecxz
sub
fcmovnb
xchg
push
aaa
in
outsl
mov
sti
cs
pop
call
jno
out
and
rolb
fstpl
loope
xchg
in
or
xor
inc
das
adc
adcb
xor
mov
rorl
push
mov
dec
clc
fisttpl
loopne
mov
jae
or
mull
mov
insb
inc
es
xor
call
lock
mov
rcrb
test
out
xor
mov
lcall
ljmp
jbe
mov
jg
notb
mov
sbb
test
pushf
and
inc
lods
shrl
pop
sub
test
dec
loopne
jge
int3
subb
push
pop
cmp
orl
pop
xlat
sarl
mov
or
push
push
addr16
push
xor
jnp
jne
dec
dec
test
push
pop
cmp
push
adc
mov
jp
stc
fmuls
lds
mov
xchg
jnp
fdivrl
adc
das
pop
sub
clc
imulb
dec
push
adc
aaa
popf
mov
clc
add
out
lds
int
fs
out
js
sti
xor
inc
xchg
cmpl
loope
fdivl
sbb
or
idivl
adc
mov
clc
mov
mov
jne
iret
push
data16
testb
inc
ja
adc
aam
in
cmp
push
mov
pushf
push
dec
mov
nop
push
push
add
in
sahf
adc
cmp
test
scas
out
fimull
cmpsb
jmp
int3
das
jmp
mov
jbe
pop
pushf
xchg
lahf
adc
sbb
cs
ret
xchg
insb
cmp
jge
loope
fs
je
cmp
inc
fisubs
loopne
fcoms
enter
jl
xchg
ret
cld
nop
and
ljmp
in
adc
and
dec
in
add
scas
aam
inc
iret
push
cld
in
je
pop
adc
xacquire
in
xor
xchg
xchg
int
adc
aad
push
out
out
pop
les
outsb
out
xchg
add
mov
imul
xchg
and
and
test
xor
dec
test
ss
push
in
in
push
subb
hlt
cmpsl
std
mov
in
mov
stos
leave
leave
fisubs
mov
add
inc
sbb
mov
dec
mov
mov
mov
in
and
sub
in
pop
rorb
inc
dec
adc
mov
loop
mov
insl
mov
js
xor
xlat
add
movsl
mov
ja
push
cmp
pop
mov
inc
add
int
pop
bound
xchg
cmp
outsb
mov
mov
das
pop
lds
mov
inc
movsl
outsl
rorb
sti
loop
mov
ja
dec
cli
shlb
vpunpckhbw
mov
xchg
pop
push
rcl
push
sbb
mov
nop
push
ljmp
jmp
lret
dec
daa
mov
add
fnstcw
stc
and
pusha
push
aam
sbb
cmp
xor
jl
and
cmp
cmp
loope
pop
add
cmp
push
vpunpckldq
sub
adc
sbb
nop
mov
inc
das
mov
decl
sub
frstor
or
sbb
int3
push
add
lods
dec
or
jle
les
jmp
sbb
mov
push
lret
xchg
scas
mov
adc
cli
cld
push
bound
andb
push
xchg
or
rcll
loopne
pop
dec
mov
pop
insl
dec
lock
pushf
popa
js
mulb
cltd
ret
mov
mov
push
into
enter
stc
lds
jnp
xchg
stc
insb
xor
mov
adc
sbbl
pop
mov
sub
add
xor
push
imul
cmp
or
pop
bound
and
sub
scas
xchg
or
pop
outsl
dec
push
incb
push
pop
or
pop
mov
ffreep
push
movsl
ret
mov
dec
clc
mov
jge
clc
movsl
cmp
pop
xchg
jp
push
mov
fcmove
or
xchg
xchg
lds
xlat
xchg
lock
pusha
inc
les
leave
mov
icebp
jbe
sub
in
incb
clc
inc
int
sbb
xchg
dec
cmc
xor
add
xchg
mov
loop
iret
je
gs
cli
cwtl
or
cmp
das
push
add
adc
push
cmpsl
movsl
in
arpl
and
cmp
cmp
xchg
dec
push
lock
pop
or
mov
out
sbb
js
xchg
jbe
notl
mov
pushf
dec
imul
inc
inc
fldcw
cwtl
jmp
das
sahf
push
mov
cld
and
push
data16
add
scas
out
dec
ja
fdivrl
fwait
dec
cli
push
pop
clc
or
push
sub
test
sbb
or
xchg
insb
jp
pop
lds
mov
add
add
js
sbb
inc
in
push
mov
adc
add
popa
std
or
jl
aad
lret
insl
push
cmp
fcomps
jp
shrb
imul
sbb
push
push
push
push
bound
ret
adc
outsl
mov
jmp
inc
and
adc
mov
xor
iret
and
or
mov
xor
pop
movsb
mov
fldenv
cmp
leave
cmp
dec
mov
movsl
mov
cmp
outsb
fcoml
jmp
sbb
xchg
scas
xchg
mov
xor
cwtl
flds
aaa
stos
repz
fstl
scas
pop
cld
movsl
pop
xor
dec
adc
dec
in
mov
leave
push
ja
mov
and
idivb
dec
aad
xchg
sbb
in
cltd
xchg
jg
inc
lods
and
into
or
xor
fnstcw
int3
sub
sbb
out
cli
pop
int
dec
lret
jnp
add
or
out
or
test
mov
je
jg
pop
daa
mov
mov
dec
pop
jae
test
mov
imul
lods
pushf
cmpsb
and
and
loopne
test
fldl2e
aam
int3
shll
mov
xlat
mov
ret
or
pop
dec
lock
adcl
out
jno
mov
fstpl
jge
shll
xchg
rorb
pop
lret
xchg
js
int3
test
or
inc
dec
std
fstps
or
cmp
mov
jg
rcll
sbb
mov
push
test
fnsave
sub
adc
mov
ds
jecxz
aam
jl
jns
mov
and
imul
popf
cltd
cmpsb
sbb
push
push
nop
repz
fwait
loopne
jnp
icebp
jns
mov
sbb
popa
xchg
mov
pop
arpl
mov
push
or
mov
mov
push
into
sbb
lret
orb
jecxz
cmp
outsl
ds
jmp
repz
push
and
mov
mov
jle
shll
xor
test
inc
int3
ss
test
push
int3
push
loop
ja
ret
and
insl
out
iret
xchg
jnp
sbb
sarb
cmpl
push
fisubrl
pop
jg
cltd
inc
jne
jb
adc
adc
lods
in
xchg
lea
mov
push
jle
sub
xor
sub
lods
jne
pusha
dec
jno
mov
push
dec
jne
test
out
es
lds
sub
push
mov
push
enter
adc
or
mov
arpl
dec
ss
data16
nop
call
cmp
xchg
add
cwtl
in
add
jmp
loopne
jge
inc
or
rol
movsl
adc
lock
xchg
es
addr16
daa
das
dec
lcall
inc
inc
add
xor
jo
clc
into
adc
outsl
insb
cwtl
cltd
scas
inc
dec
inc
sbb
mov
cs
cmp
adc
inc
add
insb
push
fists
ds
adc
mov
sub
mov
dec
add
jl
movsl
xchg
stos
ja
cmpsl
pop
push
inc
cmpsl
cmp
push
lcall
lcall
lret
aam
xchg
mov
push
shll
inc
mov
or
cmp
push
dec
xchg
fwait
mov
jl
mov
lods
xor
cltd
lods
mov
loope
mov
sbbl
mov
xchg
in
fcmovnu
rolb
mov
adc
aas
sub
ja
aad
jle
cmp
aaa
js
mov
punpckhdq
pop
push
xchg
mov
jbe
out
push
pop
xor
cld
stc
mov
inc
or
jo
dec
xchg
push
aam
loopne
mov
push
idivl
imul
adc
imul
push
and
sub
mov
int
mov
out
cmpsb
lea
mov
mov
aad
int
aas
push
push
jnp
mov
mov
or
filds
int
mov
fisttpll
jno
jmp
movsl
pop
jno
xchg
xor
popf
push
sbb
popa
cmp
mov
loop
jnp
pop
jmp
fwait
push
xor
mov
and
icebp
cmp
leave
jne
dec
insl
inc
cld
add
je
outsl
daa
or
lcall
cmp
cmp
aaa
jnp
sti
gs
hlt
inc
lods
outsl
les
dec
mov
cld
mov
rcrb
mov
dec
js
mov
cs
ss
jg
jp
or
fmul
rorl
pop
sarl
push
mov
sti
mov
into
sub
xchg
xor
js
insl
jbe
sbb
pop
xchg
loope
and
out
push
jecxz
or
cmp
mov
addl
pop
xor
inc
xchg
cmpsb
mov
jecxz
lcall
pop
stos
mov
pop
pop
or
stos
push
gs
addr16
jmp
jns
and
adc
pop
dec
adc
mov
xor
jl
lds
lret
xlat
jb
push
stos
testl
inc
les
mov
aam
cmp
inc
out
rol
ret
jo
cmp
pushf
sbb
jp
sbb
pop
pop
jbe
xchg
mov
mov
test
adc
out
and
adcb
mov
in
aad
cmpsl
test
ret
xor
filds
bound
pop
fidivl
mov
push
sub
add
leave
lea
pop
mov
sbb
cmp
iret
jbe
mov
je
pop
out
stos
mov
ret
jecxz
in
sub
sbb
clc
sub
xor
jne
stc
cld
mov
dec
loop
xchg
ret
inc
inc
std
fnsave
xor
sub
jae
cs
inc
sub
sti
dec
nop
ficoms
rorl
cmp
or
mov
cltd
sbb
cli
js
shrl
xor
cld
jecxz
fsubs
jb
jae
mov
jae
movb
mov
fcmovu
dec
mov
rcrl
cmc
push
xor
dec
nop
sahf
dec
or
lea
fstpl
loopne
cmpl
fs
aaa
jge
push
sbb
aas
xor
addl
xor
out
pop
cmpsl
mov
sbb
push
imul
cmp
fimull
mov
fsubs
jle
push
imul
mov
das
test
jnp
inc
inc
gs
aaa
dec
mov
scas
scas
cmp
push
data16
or
sub
mov
addl
xor
mov
std
mov
mov
sub
lahf
dec
sub
testb
ljmp
or
cwtl
gs
lcall
aad
jb
lcall
out
lret
movsb
jmp
adc
xor
into
mov
xchg
outsl
push
cwtl
and
xchg
daa
iret
inc
push
fwait
and
mov
js
in
dec
cmpsl
lds
xor
add
mov
inc
and
dec
fwait
je
sbb
or
push
add
or
add
fld
loop
pop
imulb
divb
popf
xchg
jns
ret
push
sbb
iret
scas
jno
stos
cmp
inc
in
shr
lds
fnsaves
mov
stos
cmp
push
faddp
popf
ja
jnp
arpl
leave
mov
push
ret
ret
stos
sahf
and
lods
sub
sbb
ret
rorl
iret
push
sbbb
xor
xor
jg
cmp
jb
sub
mov
test
mov
mov
lock
or
xchg
ds
mov
jle
je
adc
mov
jns
pop
out
xor
mov
fldcw
mov
mov
lds
les
sub
lret
js
aas
cs
loope
mov
push
fldcw
cltd
lret
orl
inc
pop
mov
jmp
ret
jle
jecxz
clc
xlat
xchg
inc
sbb
in
jmp
jmp
rcr
and
in
bound
adc
add
stc
imul
outsl
scas
fists
inc
sub
mov
xchg
jmp
movsw
cmp
loopne
notb
and
mov
out
andb
jl
std
push
lret
push
cmp
add
mov
mov
push
loope
mov
xchg
mov
inc
mov
negl
fbld
enter
lock
sahf
test
adc
je
mov
lret
lcall
fldl2e
mov
mov
hlt
xor
cltd
inc
sbb
pop
xchg
mov
test
sbb
das
mov
enter
cs
mov
add
mov
repnz
jbe
add
jecxz
jg
es
adcl
shll
aam
lea
adc
mov
pushl
dec
adcb
xor
mov
stos
cwtl
cmp
test
sub
push
xchg
addr16
add
test
les
and
fcomi
pop
dec
cmpsl
sbb
test
xor
aaa
das
sti
in
js
pop
jecxz
popa
loop
dec
cs
mov
mov
jp
mov
dec
mov
cmpsl
das
cltd
jns
lods
imul
push
add
cmp
cld
js
dec
loopne
or
xchg
cmc
or
lea
mov
out
mov
dec
add
movsb
inc
test
adc
mov
roll
inc
shll
cmp
dec
mov
movsb
data16
pop
pop
and
jecxz
cwtl
jmp
inc
loopne
mov
aas
outsb
das
mov
dec
jne
and
test
scas
ss
pusha
dec
pop
or
sti
pop
mov
or
out
jno
sbb
les
mov
adc
enter
push
les
push
dec
sar
add
dec
cmp
jae
lret
div
dec
mov
ffreep
lea
fisubs
pop
inc
xchg
push
dec
pop
push
nop
mov
mov
sub
cwtl
loope
enter
or
jl
cmpb
shr
outsb
cmp
add
in
fs
testl
jnp
fcmovnu
stos
shlb
push
add
add
or
in
rcrl
inc
inc
cli
in
xchg
sti
adc
outsl
dec
and
cld
mov
mov
push
jo
lret
inc
and
cmp
aas
or
mov
mov
add
pop
pop
stos
cmp
outsl
into
leave
ljmp
loop
sub
pop
jle
mov
adc
pop
cmp
sbb
sub
xchg
mov
outsl
add
xlat
js
pop
fincstp
pop
xchg
sub
cltd
mov
mov
adc
sbb
cld
and
add
dec
loope
test
pop
test
pop
mov
cmp
popa
xchg
cmc
dec
sar
lret
shrl
sbb
cmp
mov
ret
std
xor
mov
gs
int
mov
sbb
dec
adc
je
sub
adcb
shl
mov
aas
out
sub
sub
or
and
pusha
fidivl
adc
sbb
scas
mov
scas
fcmovnb
dec
cwtl
shrb
fiadds
xor
dec
mov
lods
push
xchg
and
sbb
shll
inc
les
cs
inc
sbb
cmp
mov
sub
mov
mov
add
or
pop
into
push
mov
push
outsb
clc
mov
adc
cmpsl
movsb
lret
lods
icebp
mov
in
push
xchg
cwtl
dec
out
push
add
inc
test
pop
sub
add
mov
pop
imul
adc
inc
sahf
loopne
jecxz
cli
bound
loopne
lahf
lock
dec
or
mov
ret
mov
test
in
das
les
jns
cmp
push
arpl
rcrb
fnsave
jbe
sub
pop
sub
sub
dec
test
sub
sahf
sarb
mov
outsl
jbe
adc
push
fisubl
adc
ret
pop
lock
push
aaa
xlat
or
enter
lds
stc
push
arpl
and
andb
in
icebp
stos
push
xchg
mov
dec
xchg
mov
xchg
add
mov
add
mov
sbb
cmp
mov
negb
jl
xchg
xorb
and
xchg
pop
sti
and
gs
adc
jg
or
filds
in
mov
fcomp
lcall
test
add
cmc
push
inc
nop
sbb
and
and
addr16
mov
sbb
mov
xor
add
sbb
dec
jecxz
xor
dec
andl
imul
lret
xor
pushf
gs
mov
xchg
cwtl
dec
sbb
push
cmpl
jae
in
mov
cmpsl
ds
ja
out
gs
or
repz
jbe
loop
sahf
jnp
pop
fs
insb
push
ret
popf
imul
cld
jle
xchg
push
out
mov
mov
lcall
mov
fsts
push
dec
mov
sbb
xchg
loopne
xchg
add
mov
sub
xchg
jp
js
mov
cmp
js
les
jl
insb
outsl
ret
cwtl
lcall
rorl
lods
mov
sub
or
movsb
cmpsl
add
fwait
sbb
hlt
divb
mov
pop
bound
ret
bound
in
data16
cmp
sbb
xchg
sub
mov
or
dec
pop
or
add
sbb
scas
fidivrs
push
cltd
inc
adc
add
dec
out
cmpb
ss
popf
add
xor
stos
cltd
adc
aam
stos
addl
dec
cmpsb
inc
lret
lods
rclb
sub
xor
mov
inc
cld
gs
adc
add
movsl
mov
movl
ss
pop
fs
inc
inc
and
out
sarl
or
mov
fwait
pop
rep
push
adc
inc
pop
jo
add
mul
mov
mov
cmp
push
mov
jns
or
jmp
adc
mov
insl
jnp
jb
das
mov
jb
dec
insl
movsb
repnz
adc
iret
mov
xor
aas
cmp
pushf
out
xor
cmpsl
lods
cmp
iret
es
pop
ja
test
pop
loopne
nop
inc
dec
and
stos
fistps
adc
lea
inc
pop
mov
adc
jae
out
shlb
xor
sub
vpsrld
icebp
or
fidivs
mov
sbb
rolb
fdivl
mov
inc
pop
push
adc
xchg
lock
push
into
loop
je
xor
jmp
insb
push
out
out
in
fwait
dec
inc
adc
pop
mov
jmp
enter
xchg
scas
cmpsb
movsb
addr16
jmp
adc
xchg
subb
mov
popa
mov
mov
xchg
push
push
inc
push
mov
imul
adc
push
es
jne
arpl
add
out
sbb
inc
xchg
test
cmp
jmp
mov
lea
and
das
jo
dec
jns
pop
or
scas
fisttpl
stos
insl
inc
gs
aas
jecxz
jbe
scas
mov
lods
mov
cld
addb
cmc
cmp
mov
aas
arpl
movsl
jnp
or
xchg
or
sbb
pop
pop
mov
shll
inc
inc
addr16
enter
addr16
cmp
cltd
dec
aam
xchg
mov
cmp
popf
cli
sbb
ss
nop
and
mov
lock
xlat
pop
data16
das
mov
scas
xor
ds
push
cmp
into
inc
sub
test
and
mov
daa
pop
dec
fiadds
xlat
adc
push
divl
out
push
xchg
int
lcall
pop
xor
jb
jmp
and
adcl
lods
pop
push
mov
mov
adc
rolb
shrb
dec
loope
jo
sub
call
int
xchg
sub
xor
pop
data16
cmc
push
dec
cmp
mov
sahf
jmp
movb
lret
mov
imul
popf
mov
das
mov
fistps
dec
sti
add
and
addr16
xchg
xchg
cmc
inc
push
push
aas
cmpsb
lods
enter
xor
daa
jecxz
mov
enter
sbb
popl
pop
jmp
push
adc
sbb
jnp
into
xchg
pop
loopne
out
mov
outsb
orl
lret
xor
adc
insb
popa
mov
sahf
mov
fsts
adc
cmp
fwait
aam
mov
bnd
movsw
or
push
das
jno
pop
iret
dec
cwtl
pop
mov
enter
outsl
push
pop
fwait
jl
jnp
cmp
jbe
inc
int3
sbb
mov
lods
jnp
adc
dec
es
int3
dec
xor
lcall
pop
cmp
xor
aad
pop
push
jecxz
xchg
adc
sub
das
pusha
jge
cmp
jbe
pop
jae
mov
imul
or
or
mov
out
int
aam
adc
push
es
idivb
sti
es
std
sbb
pop
jne
in
test
add
cmc
imul
insb
xchg
pop
and
not
pop
les
insl
adc
ja
lcall
jne
inc
or
adc
popa
xlat
mov
mov
hlt
pushf
or
and
mov
test
cld
test
ljmp
jo
xchg
xchg
lahf
jb
inc
test
pop
das
dec
jmp
popa
daa
std
enter
xchg
and
push
mov
add
and
mov
popa
ds
push
pop
inc
jbe
mov
je
dec
inc
inc
test
ja
popw
push
xchg
pop
xchg
clc
push
mov
outsb
out
xchg
out
add
popf
mov
outsb
daa
or
das
test
mov
or
mov
das
mov
inc
ja
mov
je
repnz
icebp
push
fistl
mov
xchg
add
fucomip
pop
arpl
mov
addr16
mov
adc
sbb
sahf
push
dec
js
xchg
call
cmc
inc
adc
mov
or
sub
int
jb
dec
mov
pushf
test
mov
sbb
pop
add
int
in
pop
jbe
ret
insb
gs
repz
mov
cmp
out
xchg
jbe
fwait
jbe
pop
jge
jmp
arpl
out
push
jl
add
mov
xor
rcrl
cmpl
sti
or
test
xor
mov
jmp
test
and
mov
jp
push
fs
jp
jge
icebp
add
arpl
adc
pop
jl
mov
xor
addr16
mov
jns
pop
test
xchg
andl
fdivrs
add
insl
dec
inc
mov
ljmp
std
je
pop
dec
jb
fldl2t
push
adc
push
jne
xor
sub
xchg
out
int3
mov
test
mov
sbb
aaa
xor
ljmp
repnz
push
in
push
jmp
jo
iret
pop
add
fisttpll
cli
ror
mov
adc
sub
jp
movsb
push
in
xchg
jno
mov
xchg
sub
mov
cmp
pusha
outsb
out
rcl
imul
movsb
inc
das
loopne
jmp
lds
fdivrl
dec
sbb
iret
and
xchg
ds
rcll
and
stos
jecxz
inc
mov
es
std
push
xor
sub
cwtl
mov
mov
ret
nop
bound
stos
xor
out
fdivr
sbb
insb
xchg
jge
cltd
fsubrp
test
sub
pop
dec
jbe
shlb
nop
xlat
pop
es
pusha
lds
jl
setl
fs
out
shlb
cmp
sub
negb
and
pop
sub
sub
push
mov
test
test
cmp
or
out
sbb
incb
and
hlt
mov
dec
adc
xor
aad
pop
jge
lret
int3
mov
jnp
jp
xor
sbb
push
lret
js
lret
into
int
pop
cmpsl
out
idivb
xchg
sub
dec
into
add
inc
outsl
aas
push
imul
je
pop
pop
dec
cmpsb
jmp
stos
sub
jl
xor
dec
jb
mov
mov
or
imul
mov
push
dec
test
ljmp
cwtl
cli
mov
arpl
adc
push
std
jnp
xchg
and
jl
sbb
popa
pusha
push
xlat
cmpsb
jg
cld
mov
ja
xchg
or
out
xchg
adc
mov
jns
mov
jge
add
imul
xchg
push
sub
mov
push
xchg
lret
out
lahf
mov
cmp
popa
xor
loopne
ret
jne
pop
sbb
push
xchg
pusha
js
test
and
lds
and
adc
xor
in
xor
test
fcomps
iret
push
dec
mov
les
outsl
in
dec
lahf
lcall
sub
jp
cli
mov
adc
outsl
movsl
xchg
cmp
and
xorl
xor
dec
popa
mov
sbb
jmp
in
sbb
nop
in
and
filds
shll
xchg
add
sbb
insl
in
inc
sbb
into
mov
lods
sub
int3
mov
mov
pop
cmc
das
int3
das
cmpsb
xor
scas
in
and
add
xchg
adc
popa
movsl
jg
repz
jmp
fadd
das
mov
aad
loop
jmp
push
orl
call
movsb
lds
sbb
gs
inc
adc
loopne
aad
sbb
push
lahf
sbb
imul
xor
xchg
or
cmp
imul
in
xorl
test
sub
adc
lahf
ret
es
loope
xchg
add
sti
loopne
into
mov
js
pop
cmp
push
aad
sbb
pop
pop
add
daa
fistpl
add
sbb
shrb
pop
cmp
jnp
cmp
xchg
cmp
shrl
xchg
test
call
pushf
and
jno
ds
cmp
sahf
stc
loope
inc
xor
fwait
and
incl
push
sub
xchg
xchg
lahf
test
pop
jno
lret
call
add
mov
xor
pop
sarl
sbb
pushf
xor
pop
movsl
clc
inc
mov
lea
cli
fmuls
cmpl
sbb
mov
sbb
jns
xchg
negb
movsl
fsts
inc
xchg
push
push
iret
dec
jmp
mov
mov
xor
or
cmp
outsl
cmp
and
js
jmp
test
dec
out
test
push
or
mov
cmp
in
xchg
and
scas
cmp
push
dec
sub
mov
enter
xor
xchg
or
movsb
jo
xor
mov
sarb
or
mov
dec
out
pop
cmp
das
xorb
ret
xchg
adc
out
mov
push
cld
jmp
push
stos
push
ss
icebp
stc
repz
xor
repnz
lret
js
ror
scas
or
cli
popf
push
jnp
aad
sbb
xchg
fidivs
cmp
rclb
shll
leave
xchg
xor
mov
adc
mov
mov
cmp
cwtl
into
inc
add
sahf
cmp
xor
add
lds
inc
js
hlt
pop
loop
dec
movsb
ss
aaa
lret
xchg
sub
push
hlt
loop
add
jno
in
xor
imul
add
cmpsb
and
jmp
mov
sbb
mov
xor
mov
cld
imul
adc
fwait
into
xchg
std
or
push
sbb
jmp
sbb
cmp
ljmp
pop
push
xlat
or
stc
popf
sbb
sbb
pop
ja
insl
lods
outsb
fstpl
dec
enter
es
subb
out
jno
push
cmp
nop
xor
ljmp
or
xlat
stos
jbe
cli
mov
mov
out
outsl
mov
mov
mov
dec
xor
pop
push
jbe
into
loopne
dec
lds
dec
pusha
popf
lcall
jae
sub
es
xchg
mov
fs
and
and
cmp
idivb
mov
or
mov
aad
ljmp
inc
nop
jg
les
mov
adc
dec
stos
sbb
cltd
or
pop
rcrb
test
dec
dec
push
jg
enter
lret
pop
adcb
cs
cmp
arpl
repz
stc
es
inc
in
in
icebp
cmp
mov
stos
lcall
jns
stos
and
std
or
popa
mov
mov
test
xor
xchg
jp
insl
jbe
aad
adc
clc
mov
mov
in
push
es
cmp
xchg
adc
ljmp
inc
xor
rcrb
cmp
jge
dec
es
pop
loope
iret
mov
or
push
daa
cwtl
daa
mov
popf
cmc
inc
xchg
into
jbe
push
dec
inc
mov
outsb
sbbb
mov
lock
leave
lods
loop
clc
ret
mov
data16
cli
xlat
push
xorb
mov
popf
xor
push
aad
push
popf
mov
pusha
mov
jp
push
cmp
inc
cmpsl
stos
lock
into
adc
nop
lret
loop
subb
and
mov
mov
add
add
rclb
or
push
mov
sarb
adc
pop
push
daa
or
jl
jnp
cmpsb
in
jbe
mov
xor
movb
and
jo
push
xchg
in
pushf
xchg
mov
cmc
lahf
sti
sbb
jmp
and
push
int
mov
rcll
insb
push
mul
push
mov
repnz
nop
mov
adc
sti
scas
inc
repz
jge
mov
notl
add
jne
jecxz
cmpl
pop
test
jge
loopne
es
add
rolb
mov
in
lcall
or
pop
add
xor
fdivrl
shll
int
mov
adc
lret
push
mov
int3
or
and
movsb
add
ljmp
fidivl
cmp
lcall
dec
mov
jae
mov
jnp
cwtl
sub
loopne
mov
jbe
adc
mov
sub
popf
push
jae
cltd
rolb
loopne
dec
cmp
in
adcb
lea
jae
add
mov
dec
xchg
insl
lods
inc
movsl
lods
jns
xor
pusha
les
mov
push
dec
sbb
adc
inc
sbb
push
loopne
pop
sbb
int
data16
iret
test
hlt
cltd
add
out
and
in
loop
and
xchg
or
inc
push
pop
call
fists
and
add
cld
push
mov
dec
sub
icebp
push
jbe
ficoms
ja
pop
cli
pop
es
mov
aaa
test
jg
xor
lcall
enter
gs
xchg
and
jns
or
ss
stos
xor
test
stos
adc
add
pop
xor
repz
js
jnp
pop
push
sub
sub
gs
jno
in
lret
dec
jnp
mov
cwtl
sbb
push
int3
mov
pop
cmp
daa
cmp
xchg
lods
jge
adc
cmp
out
fcmovb
outsb
inc
lret
cmp
xchg
xchg
sub
shll
pop
cli
es
and
idiv
inc
pop
inc
hlt
sti
fmul
add
int3
inc
std
or
pushf
xor
mov
jno
enter
sub
mov
notb
in
sarb
mov
stos
data16
push
cmc
push
add
stos
xchg
adc
and
fists
loopne
popf
jmp
and
ret
xchg
hlt
imul
push
and
lock
ret
icebp
mov
out
repnz
jle
cli
or
dec
cs
aad
iret
cmp
pusha
dec
and
push
push
or
stc
dec
loopne
mov
pushf
dec
insl
xchg
jecxz
mov
fstps
push
xor
sbb
lret
in
xor
loop
mov
pushf
aad
sbb
cltd
sbb
jne,pn
sub
jno
xchg
inc
stos
movsl
inc
test
push
adc
shl
xchg
lahf
cmp
fisubs
push
push
icebp
or
out
jp
jns
inc
inc
idiv
es
notl
jbe
cli
mov
leave
add
mov
js
mov
xor
cwtl
in
aas
jae
cmp
adc
and
mov
lahf
dec
mov
sbb
sub
pop
es
and
enter
ljmp
stos
dec
loopne
sti
fsubrp
js
in
pop
das
decl
lret
outsl
pop
xor
cmpsb
sbb
std
jecxz
xor
rol
ret
mov
xor
xchg
lock
pop
xchg
sub
adc
pop
cld
sbbb
adc
aas
mov
dec
cmp
cmpl
pop
xor
mov
subb
pop
and
and
inc
imul
cmp
in
fs
daa
push
pop
test
dec
inc
and
std
xor
in
mov
int
push
rolb
cld
movsl
hlt
mov
jnp
mov
int
sub
sbb
ss
decl
inc
and
xorb
and
jg
subb
cld
hlt
inc
not
sub
jg
sbb
add
ds
fs
cmp
les
sbb
xor
jl
xchg
xchg
cmp
std
mov
and
push
lea
sbb
or
nop
fsubrs
nop
mov
fdivrl
dec
mov
xchg
mov
cld
je
xor
xchg
lods
sbb
xor
jp
pop
mov
mov
and
xlat
xchg
mov
push
mov
mov
dec
lds
jp
xchg
pop
test
pop
dec
push
in
cs
dec
fs
mov
loop
in
mov
adc
into
push
ds
int
mov
sub
xlat
stc
inc
adc
mov
dec
out
mov
iret
popl
mov
std
sub
repz
jne
push
mov
mov
out
sub
jecxz
jg
cmc
addr16
push
in
outsb
fistl
scas
test
jle
inc
inc
xorb
mov
pop
mov
lahf
jno
test
subb
xlat
mov
cmp
sub
or
mov
fimull
fmull
ljmp
mov
test
ljmp
sbb
mov
stc
icebp
push
mov
lock
jne
call
mov
sbb
imul
movsb
cmp
xchg
int
lock
imul
jge
and
rclb
jle
mov
pop
jo
mov
popa
jge
mov
stos
das
cmp
push
ss
dec
pop
ljmp
sar
rcll
sbb
scas
xorl
loopne
fisttps
bound
and
xchg
ret
ja
adc
add
cwtl
jne
pop
cld
hlt
leave
aam
pop
adc
add
mov
push
dec
div
push
in
dec
mov
fmul
imul
stc
lea
or
nop
sbb
call
popf
add
subb
rclb
sbb
fwait
jne
xchg
je
test
cmp
fwait
sbb
data16
mov
add
loope
lea
mov
adc
xchg
dec
push
add
cmc
jle
hlt
in
push
sbb
mov
mov
or
or
dec
loopne
outsb
fiaddl
out
int3
xchg
clc
lea
dec
lock
pop
das
jmp
push
loopne
xchg
sub
mov
test
inc
xchg
sub
loope
enter
es
sbb
shl
stc
shl
jae
pop
mov
popa
ljmp
inc
pop
add
adc
icebp
insl
lahf
push
and
xchg
mov
sub
cwtl
push
stc
outsb
fisubl
aaa
popf
jne
adc
shr
daa
mov
mov
shrl
jge
or
push
int
int3
ret
cmp
int3
fidivl
push
inc
jecxz
inc
dec
mov
imul
fwait
push
loopne
xchg
mov
insb
cmc
xchg
js
inc
popa
dec
sub
scas
sbb
add
incl
test
lahf
add
sub
insb
and
jmp
push
mov
mov
pop
push
in
dec
loopne
sbb
cltd
idivb
cmp
rcr
push
add
ja
mov
mov
pop
mov
imul
gs
cmpsl
or
stc
inc
test
pop
test
adc
or
and
mov
inc
andnps
jns
das
imul
mov
adc
pop
push
lret
and
mov
stos
push
add
mov
and
fldl
idiv
push
cmp
test
out
repnz
pop
push
test
imul
ja
mov
in
sbb
cmp
sub
lock
mov
push
jb
pop
mov
and
test
push
aam
fwait
adc
xchg
shll
sahf
sbb
incl
adc
pop
jae
xchg
fwait
mov
lods
mov
push
xchg
or
push
loopne
out
jge
test
sbb
mov
das
rorb
stos
cli
lcall
and
les
push
cmpsb
mov
jmp
insb
dec
js
fwait
jb
sbb
xchg
mov
inc
movl
std
jne
dec
sub
mov
gs
lss
jbe
cmp
arpl
lret
pop
xor
mov
sub
in
aam
imulb
je
pop
outsb
push
push
outsl
xor
js
test
or
cmp
dec
bound
inc
std
mov
aam
sbb
and
out
std
sub
dec
movsl
inc
and
andl
sub
ljmp
popa
sbb
addr16
popa
lret
sbb
mov
add
xor
mov
aad
inc
or
rep
iret
xchg
hlt
mov
inc
sbbl
jl
fcmovbe
cmp
push
outsl
pop
mov
andl
cmp
mov
repz
stos
leave
sub
adc
sbb
popl
std
or
int3
dec
lock
xchg
sbb
sub
inc
or
push
xchg
jne
stos
stc
mov
add
add
mov
sub
lock
ss
lcall
inc
fistpl
adc
ss
cld
add
hlt
flds
and
or
and
jnp
pop
out
dec
insb
cmp
arpl
jbe
dec
insb
mov
sub
pusha
cmpsb
xorb
add
adc
lret
movsb
fbstp
repz
out
sub
jb
push
cmpsl
rcll
int3
stos
out
fdivrp
rcrb
sar
ret
aaa
shll
das
popf
inc
push
lods
icebp
xchg
imul
push
aad
imul
push
ja
outsl
iret
clc
mov
add
lahf
and
testb
mov
les
cmc
push
es
insl
aam
outsl
sub
push
stc
sbb
dec
xchg
sub
inc
inc
inc
push
mov
xchg
std
mov
push
mov
fistl
lcall
fwait
xchg
lret
cmc
jne
xchg
ret
pop
in
push
jl
lcall
xchg
outsb
or
aas
cld
add
sbb
out
sahf
sbb
add
or
jnp
and
xchg
out
pop
sbb
cmp
cmp
sbb
push
inc
or
pop
cwtl
mov
lret
fistps
jo
sbb
movsl
inc
les
hlt
pop
dec
lds
lock
jno
mov
dec
mov
jbe
push
in
mov
mov
mov
add
nop
out
cld
jg
lcall
arpl
push
iret
mov
or
inc
xor
inc
cmp
cltd
rcr
pop
ret
loope
pop
arpl
adcb
into
cmp
cmp
adc
enter
iret
pop
inc
dec
sti
xchg
fisttpll
int
lret
mov
sahf
fisttpl
xchg
nop
xlat
sbb
test
ljmp
mov
divb
subb
sub
addb
dec
std
sbb
cmp
loopne
out
xorb
mov
das
mov
mov
cmp
and
mov
mov
or
mov
pop
adc
or
mov
sti
imul
mov
xcrypt-ctr
cmpsl
pushf
mov
jecxz
dec
stos
ljmp
sbb
test
add
inc
dec
aaa
loope
lahf
dec
arpl
std
mov
and
xchg
jb
mov
in
loope
sbbl
loop
je
cwtl
mov
cltd
ds
bound
ss
xor
push
pushf
sub
pop
jo
cmpsb
lds
push
and
mov
fdivp
leave
sbb
or
adc
push
mov
add
loope
push
icebp
dec
dec
loop
push
ljmp
add
or
mov
xchg
sub
xchg
repz
xchg
aad
ja
icebp
jnp
scas
movsl
pop
xchg
cli
mov
cmp
jne
jmp
add
jmp
push
fdivrs
cmp
or
lret
fldl
mov
fists
aaa
jmp
aam
and
mov
adc
sbb
mov
pop
add
data16
xchg
xor
mov
mov
xchg
fdivp
pushf
dec
mov
xor
cld
push
pop
mov
test
sub
cmc
sbb
lcall
lcall
jecxz
pusha
ss
call
sahf
sbb
cmc
pinsrw
push
push
push
push
push
pop
into
cmc
rcrl
cmp
std
dec
jne
push
lcall
int
inc
inc
and
sbb
aaa
cmp
pop
stos
pushf
into
lahf
jbe
mov
mov
jecxz
mov
lds
lds
aam
inc
mov
mov
test
xchg
cmpb
hlt
jp
xchg
int3
cmp
repnz
pop
arpl
xlat
fimuls
cs
or
mov
dec
or
std
ret
nop
orl
fwait
cmc
mov
ds
cltd
adc
popf
jno
dec
jns
loopne
add
aam
mov
ljmp
je
out
jae
xor
popf
mov
les
pusha
pop
mov
push
imul
jl
inc
out
mov
lahf
cmpsb
sar
pushf
adc
jo
mov
addl
xchg
arpl
out
das
bound
mov
sahf
xchg
mov
or
xor
lret
mov
jb
cmp
scas
pushf
inc
nop
dec
ret
shll
gs
and
adc
dec
xor
sub
xchg
int
jns
inc
scas
cmp
pop
cmp
pop
mov
fistl
inc
icebp
mov
aad
mov
push
addr16
imul
pop
cs
andl
mov
fmuls
cwtl
jg
xor
xchg
dec
xor
fwait
je
cmp
jne
rorb
clc
shrb
sbbl
out
adc
and
iret
int3
and
fiaddl
cmpsb
gs
mov
dec
xchg
pop
mov
add
push
stos
leave
inc
inc
sub
jne
adc
je
mov
dec
daa
xor
lcall
pop
push
xchg
sbb
sub
iret
push
and
fistps
cs
dec
mov
mov
push
das
gs
ret
or
lods
xor
dec
incb
adc
jno
add
pop
push
push
or
mov
and
push
gs
addr16
cmp
hlt
cmp
shl
mov
into
mov
rorb
xchg
cmp
test
mov
testb
fst
add
ds
je
pop
nop
mov
xor
adc
or
xor
sub
test
insl
jae
push
and
push
mov
rcll
jmp
push
imul
mov
xchg
inc
push
or
subb
sbb
push
cmc
push
mov
jp
hlt
inc
in
jno
push
inc
adc
das
imull
mov
cmp
mov
pop
mov
push
mov
lahf
cld
mov
out
cmpsl
jecxz
push
cwtl
shlb
lds
and
in
pushf
fcoml
ds
das
xlat
shll
pop
imul
shlb
iret
xchg
mov
add
pop
in
js
dec
dec
jle
xchg
push
pushf
jno
mov
xchg
imul
jmp
std
loope
or
scas
andl
lods
lods
jns
xchg
add
sbb
push
cmp
rcll
xor
jne
push
and
jecxz
sbb
fldenv
cmp
mov
jns
orb
fbstp
aaa
je
sub
and
shlb
pop
scas
xchg
movsb
xchg
jp
in
mov
ja,pt
les
in
xchg
pop
es
add
lods
xor
sub
fistpl
push
push
or
push
jnp
mov
add
jo
fmul
push
cmpsb
add
pop
pusha
loopne
sub
ljmp
pop
push
xchg
push
pop
iret
and
add
sub
subb
js
cmpsb
ljmp
mov
xor
movsl
or
cmp
pop
pushf
in
pop
cmc
mov
and
loope
lea
ror
adc
sub
rorb
xor
mov
lock
sub
or
xor
movsb
dec
xchg
cmpsb
xchg
inc
testb
xchg
repz
xchg
push
arpl
fcoms
out
insl
xor
stos
mov
mov
inc
aaa
cwtl
jmp
mov
in
test
loope
sbb
push
mov
nop
xchg
in
pop
sahf
or
in
ljmp
sub
or
addl
add
xor
in
fs
pop
icebp
test
icebp
sbb
fldl
inc
push
inc
imul
pop
inc
neg
aas
out
sbb
adc
outsb
sub
or
mov
jae
roll
outsl
lea
sub
lahf
sbb
and
mov
push
jnp
mov
adc
push
fidivrs
pop
out
push
std
xor
test
pop
mov
mov
inc
inc
aam
pop
push
add
add
push
hlt
jmp
das
mov
push
push
and
pusha
sub
stc
pop
daa
mov
xor
clc
push
aas
inc
stc
lret
cmpsl
adc
mov
and
mov
cmp
pop
pop
cmp
test
jbe
jno
mov
pop
jle
movsl
sbb
scas
lds
iret
aas
in
popa
xchg
movsb
in
fcomi
lret
arpl
dec
mov
sbb
outsl
cmpsl
inc
dec
arpl
pop
xor
setbe
pop
xor
loopne
pop
out
pusha
das
push
das
inc
xor
or
push
cmp
jmp
add
pop
and
jae
jnp
popa
filds
movsl
call
and
loopne
lahf
or
dec
pop
mov
pop
iret
dec
mov
clc
std
sub
lods
int
fsubs
xorb
lds
and
mov
les
sbb
push
xchg
cmp
outsl
xchg
xchg
cmpsl
aam
pop
add
mov
push
pop
push
out
cltd
mov
repz
jp
push
jo
dec
pop
lds
cmp
inc
mov
cmp
mov
mov
shrb
push
fsubr
out
mov
pop
call
cmp
fidivs
pop
sar
push
inc
pusha
lock
add
mov
repnz
xor
jmp
jo
popa
xchg
or
int3
in
fwait
or
xchg
aad
dec
fists
xchg
loope
dec
jno
sbb
mov
loop
enter
clc
jmp
push
fstl
daa
add
in
js
and
fst
loop
jns
mov
stc
push
cs
stos
mov
jle
lods
xor
push
sbb
enter
mov
xchg
in
sub
adc
inc
sub
icebp
add
or
push
lret
stc
out
jbe
int
mov
stc
std
cmp
mov
jns
xchg
xor
lcall
push
clc
cmp
clc
mov
and
fidivl
clc
sarb
cltd
inc
mov
lret
int3
test
inc
jmp
icebp
fsub
inc
std
inc
and
cmp
jecxz
iret
divl
in
jne
shll
mov
add
ljmp
cs
inc
icebp
mov
insl
in
inc
test
lcall
idivl
push
ret
std
cmpsb
lock
mov
dec
insb
and
ret
gs
cmp
jl
incb
mov
inc
into
in
sub
sbb
fwait
add
xchg
dec
dec
or
leave
sbb
scas
es
push
push
ja
out
xlat
out
ljmp
pop
mov
adc
insl
inc
push
ret
xchg
inc
xor
lods
stos
jmp
subb
notb
xor
jp
ss
enter
ljmp
and
push
dec
shrb
mulb
mov
scas
inc
stos
adc
push
fisubrs
js
nop
cmp
fxch
addr16
or
pop
push
sbb
and
std
ss
pushl
inc
sub
or
mov
inc
dec
xor
xor
and
popa
stc
mov
inc
or
sti
mov
mov
mov
test
and
adc
nop
jl
pop
pop
test
mov
cmc
adc
xor
ret
mov
cmp
inc
movsb
movsb
push
jle
mov
push
test
lds
xchg
add
add
mov
jge
cmp
sbb
jb
pop
pop
xor
out
push
sahf
and
xchg
int3
mov
adc
test
push
inc
ret
dec
lcall
or
inc
arpl
sub
mov
into
sbb
cmp
pusha
push
mov
pop
rcll
dec
dec
jl
lcall
mov
loopne
outsl
movb
jecxz
in
xor
mov
mov
mov
insl
mov
jne
data16
in
jbe
or
lds
mov
sub
dec
adcb
repz
fidivs
mov
hlt
sub
test
mov
xor
loop
mov
and
pop
jge
mov
sbb
insb
mov
xlat
add
push
push
sti
add
sarl
inc
aas
sar
nop
xchg
in
add
mov
jl
push
or
mov
sbb
lcall
pusha
lahf
in
sbb
movsl
add
sub
add
fsubrs
xchg
lods
pop
sbb
rcrl
mov
lcall
cwtl
out
jp
lods
ljmp
or
lock
aaa
ret
xchg
pop
push
mov
sbb
stos
xor
movsl
xor
fistl
test
pusha
xor
into
inc
push
imul
mov
sahf
mov
dec
or
mov
pop
jp
les
xor
scas
push
out
test
xchg
jp
jmp
sub
mov
outsl
jne
inc
dec
jo
dec
ret
jbe
sub
leave
mov
fdivrl
out
mov
stos
mov
out
fnstenv
jne
jbe
sbb
adc
out
mov
sub
insl
pop
mov
ffree
xchg
mov
cmpsb
clc
mov
loopne
cmpsl
sbb
es
pop
sbb
cli
jb
fdivl
jp
or
mov
or
add
stos
pop
ja
or
or
push
sub
ret
xchg
in
push
loopne
clc
pop
add
xor
push
ds
jl
repz
jge
mov
xchg
cmp
std
outsl
mov
and
push
mov
loope
das
mov
xchg
mov
sbb
xorl
imul
jg
fsubl
and
loope
dec
sbb
mov
mov
out
add
daa
mov
dec
enter
aam
sub
pop
xchg
rep
clc
dec
int
stos
jle
pop
xorl
addr16
adc
pop
les
insl
idivb
pop
cwtl
xor
stos
fwait
jbe
dec
mov
lock
hlt
mov
xchg
test
pop
aam
jae
call
daa
adc
dec
xor
int3
xor
loopne
mov
arpl
std
and
mov
in
push
jo
sbb
test
sti
mov
dec
jg
adc
xchg
push
cmp
fs
fnstsw
mov
jo
enter
aas
xor
sub
insb
addr16
scas
je
loop
test
shrb
inc
ret
movsb
mov
addb
mov
jns
lock
xchg
test
pushf
sub
ds
lods
sbb
aam
push
push
xor
cmp
out
fbld
movsb
push
clc
outsb
aas
add
call
test
fnstsw
lds
lock
jne
cmp
adc
and
mov
mov
inc
fsubr
and
add
lods
jno
fisttps
dec
pop
mov
pop
pop
in
mov
test
add
cmpsb
inc
cmpsb
clc
dec
fisubl
lods
jb
stos
fnstcw
xchg
mov
push
mov
loopne
mov
and
insl
cld
cli
imulb
sbb
xchg
cs
cld
int
jmp
gs
inc
pop
jmp
xorb
scas
xlat
push
mov
fwait
mov
pop
or
daa
std
loop
out
push
addl
sbbl
loopne
dec
bound
in
or
int3
push
lret
jg
dec
popl
arpl
xchg
popa
dec
push
es
pop
fcoml
sbb
push
outsl
sub
arpl
and
jecxz
mov
les
mov
mov
adc
enter
mov
jecxz
fs
adc
push
gs
popf
fcompl
adc
xor
xchg
mov
out
shrb
into
dec
adc
popf
jl
js
xor
push
mov
inc
loope
lcall
loope
decb
cmp
rorl
insb
cmp
jns
cmpsl
dec
fidivs
sti
jle
pop
cmp
or
inc
stos
cli
xchg
js
or
mov
push
xor
adc
and
str
ficoms
push
cmpsb
push
mov
cmp
test
sahf
mov
dec
jle
flds
aad
test
mov
out
sti
repnz
sti
adc
pop
pushf
dec
lea
jmp
in
inc
sbb
fisubrs
fwait
add
and
gs
inc
clc
imul
add
xchg
dec
stc
mov
ret
fsubrl
jge
out
gs
test
out
add
fstpl
xchg
stos
lock
out
mov
lock
or
lods
xor
out
stos
in
jnp
je
subb
enter
mov
fisubl
shrb
sub
jo
xchg
cmp
inc
jns
push
testl
push
arpl
xor
mov
iret
mov
daa
pop
sub
aaa
cmp
cltd
outsb
sub
jne
mov
sub
stos
mov
xchg
mov
mov
pop
inc
push
andl
and
je
out
jecxz
pushf
pushf
repnz
dec
xor
rolb
xor
test
in
push
fwait
out
aaa
sub
pop
stos
sub
xor
dec
pusha
gs
insl
or
jno
mov
mov
popl
jg
movsb
fisttps
rorl
enter
cmpsl
add
idivl
roll
es
out
jmp
hlt
das
cli
cli
stos
stc
lods
fistps
mov
mov
shll
xor
xchg
add
dec
popf
addl
inc
ret
pop
lock
jo
andb
stc
scas
or
cs
push
ja
test
mov
cmp
sub
je
popa
jle
in
sbb
test
fs
pop
jmp
mov
add
fildll
movsb
pop
inc
adc
cmpsl
aas
sub
mov
nop
mov
dec
stos
xchg
adc
leave
sub
fwait
clc
xchg
icebp
xchg
inc
jge
inc
inc
jbe
andb
inc
inc
jmp
in
sbb
jnp
jns
je
aad
movsb
xor
stc
bound
das
mov
xor
jb
ret
inc
mov
pop
lahf
lcall
sbb
sub
adc
aaa
sbb
pop
int
movsl
cmpsb
sub
sbb
xor
jno
inc
xchg
loopne
sbb
add
push
outsl
sbb
stos
popf
outsb
push
in
mov
stc
jge
push
dec
pop
jg
fdivl
jbe
mov
add
adc
out
imul
xchg
pop
rclb
dec
loop
bound
inc
outsl
neg
pop
movsl
aam
outsl
sub
psubb
ret
sub
lret
imul
dec
mov
mov
pusha
jns
rep
jmp
inc
fdivrl
movsl
jb
mov
sub
push
and
pop
adc
jne
inc
cmp
and
xor
je
push
adc
fcompl
mov
std
sub
in
cmpsb
fcomps
add
int
cmp
pop
lret
cs
icebp
add
cmp
push
push
dec
mov
xchg
or
aas
pop
push
lock
sbb
fsubrl
cld
push
pop
loope
push
add
xor
aad
sbb
push
ljmp
push
int
cmc
xchg
mov
push
push
inc
mov
jbe
hlt
cmc
mov
fimuls
stc
cmpsb
addr16
in
inc
inc
sbb
movsl
inc
imul
mov
or
outsb
and
enter
js
stos
repnz
sub
cmc
mov
xor
xchg
xchg
sbb
pushf
jo
test
out
out
sbb
cmpsl
jmp
pop
mov
mov
ss
or
fwait
adc
cmc
adc
dec
je
leave
test
adc
test
outsl
loope
aam
test
out
cltd
lcall
pop
fs
pop
mov
xor
sub
lahf
or
test
aam
push
mov
or
aam
cmp
shrl
out
xchg
test
add
js
pop
aam
ljmp
cltd
out
imul
pop
push
mov
push
inc
adc
adc
push
ds
test
push
sub
sub
add
jno
not
mov
movsl
shr
cmp
pop
pop
lahf
or
inc
shrl
outsb
mov
cmpb
ds
mov
lret
sub
call
out
gs
test
fldt
and
xlat
push
push
andb
xlat
cmp
jno
jle
push
negl
jge
sbb
fidivl
rol
push
lahf
popf
lods
lds
das
fbstp
pop
xchg
sbb
js
lahf
leave
ret
dec
pop
or
shr
push
mov
dec
mov
iret
fisttpl
repz
push
ljmp
mov
fbld
adc
sbb
negb
ds
adc
arpl
mov
jae
lret
cmpsb
fildl
add
mov
scas
lods
dec
imul
xchg
mov
movsl
sub
inc
inc
in
stc
lret
sahf
xor
adc
xchg
imul
xchg
je
outsb
inc
ljmp
je
fildll
scas
or
pop
dec
loope
mov
or
fmuls
jb
adc
pushf
inc
call
sti
push
adc
pop
jnp
pop
cmpsb
insb
test
arpl
lock
mov
push
cmpl
in
jb
jns
movsl
cmp
repnz
mov
loope
sbb
mov
imul
daa
fnsetpm(287
xchg
clc
bnd
push
iret
mov
fcoms
push
mov
and
lret
xchg
arpl
adc
push
push
out
data16
jae
push
ret
and
cmp
popa
les
sbb
mov
xchg
pop
inc
insb
outsb
popf
scas
cltd
les
int
test
fildl
sub
xlat
popa
je
sub
mov
pushf
mov
movsl
push
popa
popf
adc
lret
or
pop
pusha
lock
daa
add
xor
stc
jo
xchg
icebp
jo
jne
int3
ds
call
pop
mov
xor
dec
imul
test
jnp
fistpll
pop
sbb
adcb
adc
push
fisttpll
shll
adc
dec
jns
mov
push
xchg
jne
jle
fucomp
jle
rcl
in
cmpb
adc
xchg
add
aaa
add
jecxz
stc
lahf
movl
xorl
inc
movsb
std
das
cmovns
in
call
dec
pop
adc
cmp
sbb
dec
sub
outsb
cmp
lods
jmp
leave
add
inc
shrl
sbb
push
mov
fldt
or
mov
loopne
mov
pop
jno
jecxz
dec
mov
rolb
aad
mov
xchg
in
dec
lret
mov
and
push
movsl
int
repz
jb
sbb
ds
call
sbb
add
or
push
les
iret
cwtl
lret
into
aas
pop
cmp
lods
icebp
or
jge
jp
jp
shl
insb
xchg
out
mov
push
pop
cmp
popf
cmp
mov
adc
inc
fsubrl
ja
pop
jno
cmp
rorb
inc
xchg
mov
jg
arpl
sub
fisubl
cmp
sub
fwait
addl
xlat
xchg
mov
sub
in
je
test
cli
les
ss
cmp
mov
cltd
outsb
jnp
xchg
dec
movsl
out
push
negb
cwtl
mov
shlb
idivb
les
pop
or
cmp
xchg
add
gs
add
xor
inc
leave
mov
popf
xchg
and
adc
or
lret
or
push
out
pop
sub
stc
lock
sti
scas
cs
clc
cmpsb
scas
stos
das
popa
or
pop
push
out
pop
hlt
arpl
pop
mov
adc
aad
cmp
sbb
aam
ja
cs
rorl
push
int
cmpsl
fildl
ljmp
inc
mov
xor
iret
pushf
pop
pop
add
call
data16
or
dec
rcrb
enter
add
lds
lock
int
push
push
add
stc
shll
jae
add
or
shlb
add
pop
mov
sub
imul
inc
dec
push
pop
push
adc
jbe
int
mov
movsb
hlt
mov
jl
sub
pusha
and
outsb
jp
mov
push
pop
movsl
inc
cmp
xchg
dec
or
inc
movsl
aas
not
sub
jno
int3
cltd
pop
and
mov
sub
adc
lret
mov
shlb
or
lcall
jne
stc
aaa
xchg
js
fwait
lahf
and
stos
cmp
jno
daa
out
jmp
test
icebp
xor
adc
pop
gs
ffree
xchg
add
and
icebp
pop
adc
shlb
jg
xchg
rolb
negl
jns
test
and
dec
fldenv
add
inc
ljmp
fsubrl
fsubrs
lret
pop
dec
sbb
inc
loopne
std
insb
push
stos
mov
jae
jmp
ljmp
repz
cmp
in
insb
xchg
leave
adc
scas
stc
out
sub
cwtl
daa
dec
jle
repz
insb
orb
push
es
add
arpl
jmp
inc
push
popf
push
sub
cmp
jbe
js
or
stos
push
shl
xchg
bnd
ret
sub
fs
cmp
daa
hlt
into
add
daa
sub
divb
jmp
push
push
nop
sub
out
jb
xlat
es
enter
xor
mov
jmp
dec
ret
mov
jae
data16
cmpsl
cmp
out
stc
sbb
mov
push
dec
sub
fisubs
mov
scas
loopne
cmpsl
lahf
fsubrs
faddl
cli
popa
imul
cs
and
mov
test
inc
negb
mov
loopne
push
mov
icebp
rcll
push
out
cs
clc
inc
lds
mov
fsubs
icebp
imul
mov
mov
xor
psrad
push
mov
roll
mov
and
cmp
imul
cli
ljmp
arpl
stos
mov
mov
int
jg
pop
add
add
mov
arpl
inc
sti
mov
enter
mov
adc
cmpsl
insb
loope
bound
stc
cmp
int
out
jmp
sahf
int
sti
stos
mov
call
sbb
inc
pop
in
les
test
scas
jg
jmp
jbe
adc
into
repnz
dec
clc
add
push
cwtl
pop
or
sbb
push
loop
ret
sub
leave
sar
pop
add
sti
dec
outsb
cld
jnp
add
pushl
mov
repnz
and
jns
mov
pop
jo
sub
dec
and
lret
mov
clc
add
mov
dec
arpl
xorb
in
and
and
call
adc
lods
xchg
repz
dec
in
shll
add
and
rolb
lcall
jmp
dec
out
jle
js
mov
cmp
fucomip
mov
fs
xor
mov
mov
shlb
dec
or
rorb
jno
adc
fidivrs
push
dec
cwtl
ret
pop
bound
hlt
sbb
jge
fcmovne
and
jmp
jae
int3
mov
xchg
pop
mov
mov
pop
adc
cmp
fildll
fs
pop
scas
mov
test
int
cmp
inc
loop
popa
dec
js
dec
cmp
sarb
dec
popf
sub
sub
add
sub
mov
insb
dec
pop
movsl
int
xchg
fwait
cmpsb
push
and
cli
cmc
subl
repz
cmp
inc
sbbb
xchg
xchg
dec
fisttpl
fisubrs
lahf
and
mov
or
add
push
aas
jb
push
cmpsl
ss
or
add
icebp
xchg
ficomps
push
jns
fnsave
adc
xchg
or
cltd
imul
xor
outsl
mov
dec
popf
jecxz
mov
repz
push
fstl
pop
aas
or
clc
mov
and
lea
adc
aam
in
sti
cli
loopne
add
mov
ja
xor
hlt
or
test
jns
and
repz
add
mov
ss
jo
int
insb
cltd
mov
and
bound
call
add
test
mov
inc
cmp
cmp
pop
fs
ss
nop
cmpsb
testb
mov
jl
cwtl
sbb
pop
in
lret
lret
in
rolb
int
pop
add
jae
imul
in
ja
cld
xlat
xchg
rclb
mov
cmp
js
mov
aad
rcrl
cmpsl
add
jbe
and
cmp
inc
movsb
call
mov
les
outsb
xor
and
push
xchg
jnp
scas
mov
cmpsb
nop
and
mov
int3
mov
xchg
dec
adcl
mov
pusha
iret
imul
lea
ret
decl
pushf
cmpl
shll
pop
mov
mov
add
jbe
addr16
lods
pop
lds
inc
rclb
nop
int
imul
nop
inc
xor
xor
mov
sub
push
subb
mov
pop
push
ret
pushf
and
xchg
adc
stc
adc
mov
jae
fmull
mov
jnp
mov
out
jle
addr16
sub
daa
and
jno
enter
and
sbb
cmp
je
ljmp
arpl
shlb
lods
jg
mov
xchg
jl
insb
xor
or
cld
mov
jae
rclb
fwait
dec
das
f2xm1
aad
sub
mov
movsl
or
aad
pop
addr16
pusha
cmpsl
push
sbb
movsb
lret
pop
cmp
sbb
and
sbb
push
stos
arpl
test
dec
inc
pop
push
cmp
daa
push
sub
inc
cmpsl
aas
mov
add
push
adc
dec
test
aas
fistpll
mov
mov
movups
push
pop
test
orb
iret
scas
arpl
and
dec
out
nop
cmp
into
push
es
xor
add
sti
punpckhwd
push
or
sbb
jecxz
jb
test
lahf
pop
mov
inc
lods
orl
inc
dec
adcb
sbb
pop
aaa
inc
or
sbb
gs
andl
or
imul
mov
inc
pop
sbb
lahf
push
xor
lcall
jno
fdivr
jg
push
add
mov
xor
or
ja
or
adc
lock
ljmp
test
les
and
roll
cmp
dec
jbe
arpl
add
adc
insb
pop
cmpsl
push
xor
or
rcrl
jmp
fidivs
ds
dec
roll
push
jnp
js
cmp
daa
xor
mov
loop
adc
add
notl
push
pushf
inc
ljmp
xchg
or
in
inc
aaa
ror
mov
adcb
ja
cmp
nop
jns
in
jecxz
out
add
fmulp
lods
decb
sbb
sbb
adc
inc
in
call
lcall
std
inc
cmp
jp
pop
mov
clc
movsb
out
add
loope
test
mov
sub
inc
sbb
stos
mov
xor
mov
sbb
and
xchg
cmc
cwtl
pop
jecxz
pop
inc
sub
push
inc
cmp
mov
loope
int3
push
sbb
mov
adc
loopne
sarl
mov
es
gs
cmp
mov
cld
vmovaps
xchg
fisubrs
inc
or
imul
mov
cmpsb
sbb
repz
test
push
fists
inc
jae
adc
aam
cmp
movsl
hlt
std
addr16
add
ds
mov
imulb
pop
ret
inc
push
inc
pop
inc
mov
sbb
repnz
movsl
jmp
xor
sahf
add
mov
filds
arpl
push
cmp
lret
enter
cmp
mov
scas
ja
mov
push
fidivrl
push
fimull
jmp
jb
or
or
jns
cmp
test
cmpsl
jb
ds
jnp
xchg
add
aas
mov
nop
roll
test
sbb
enter
pop
cmp
mov
repnz
sbb
movsl
xchg
data16
mov
add
cmp
xor
call
and
lret
xchg
mov
xchg
aaa
test
enter
and
repnz
mov
sahf
icebp
sbb
dec
jmp
outsl
sbb
dec
cmp
push
lea
stc
call
scas
pop
scas
jne
in
sbb
cmc
and
mov
mov
pop
add
sbb
repz
jae
lods
sahf
jle
dec
jge
xor
mov
scas
lods
sbb
mov
imul
data16
jns
xchg
inc
ffreep
lcall
imul
jb
les
sub
das
shr
sub
and
sbb
push
jne
dec
pushf
call
or
sar
add
and
test
rcrl
gs
pop
sbb
popf
mov
loopne
into
in
sub
daa
pop
adc
dec
aaa
in
or
ficompl
int
aam
dec
stos
cmp
mov
fsts
xchg
pushf
mov
test
jge
loopne
xor
loop
mov
int3
add
mov
jo
mov
mov
scas
call
mov
inc
cs
mov
jns
add
jp
dec
jno
mull
adc
clc
cld
mov
pop
cmp
push
push
clc
dec
gs
repnz
mov
lds
fwait
adc
rol
les
add
xchg
addr16
cmpsb
in
aam
mov
cmpsl
daa
std
mov
pop
cmp
repz
jge
mov
push
out
fdivrl
test
incb
mov
jnp
stos
outsl
movsl
dec
insl
pop
pop
cmp
sbb
jo
adc
and
fmulp
dec
out
pop
xchg
cmp
xchg
xor
ja
dec
sbb
and
das
mov
and
dec
and
div
loope
test
outsb
sbb
xor
and
rclb
mov
test
out
and
out
mov
mov
adc
adc
push
fwait
into
insb
and
mov
xchg
notb
adc
and
popf
xor
sub
dec
ret
sub
loop
testl
pop
ja
std
loope
rolb
dec
jo
adcl
mov
aad
push
jmp
jbe
in
test
pop
cmp
popa
in
add
mov
das
cmpsb
sarl
mov
mov
xchg
inc
roll
dec
push
mov
xchg
ja
xchg
jl
jecxz
jne
inc
gs
test
insb
or
xlat
hlt
push
icebp
movsb
int
ljmp
push
aad
mov
and
fistps
mov
test
sub
fnsave
cs
fmulp
rorl
pop
pop
xchg
mov
sub
push
jbe
pop
aas
sbb
sbb
pushf
or
cs
hlt
and
rcrb
incb
xor
insb
push
inc
pop
pop
adc
imul
imul
test
outsb
xor
push
or
mov
popf
inc
pop
fnstsw
inc
or
pop
mov
adc
out
aaa
mov
sbb
ljmp
mov
mov
aam
and
mov
or
enter
adc
jns
mov
sub
inc
outsb
subb
sub
sahf
jbe
es
add
pushf
xchg
mov
shll
outsl
push
lahf
cmpsb
lds
pop
sahf
dec
xchg
sub
mov
cmpsb
iret
mov
jmp
push
sbb
cs
sbb
in
dec
std
popf
idivl
push
push
ficomps
adc
and
fisttps
mov
cli
push
sub
cmp
jle
movsb
fildl
loopne
push
fdivs
stc
cld
push
fwait
dec
jb
sub
test
loope
sbb
clc
cmpsb
xchg
sbb
inc
adc
scas
xor
pop
xchg
mov
insl
insl
or
aad
sub
jecxz
cwtl
movsl
jle
std
jl
es
cs
mov
lret
add
fadds
lret
xchg
add
sbb
pop
jmp
mov
inc
decl
ljmp
sahf
sbb
sub
cmc
add
gs
cmp
jae
mov
ja
jbe
mov
movzbl
sub
mov
lret
shr
lahf
pop
jbe
lret
mov
sub
lods
or
les
stc
into
aaa
push
sbb
pop
stc
mov
in
int3
roll
sbb
ds
dec
addb
int
enter
movsl
mov
jmp
cmp
jge
lretw
bound
fnstsw
cmpsl
and
out
popa
aad
loopne
rorb
add
mov
push
sti
lcall
ret
pop
push
mov
xor
xchg
xor
cmp
sti
add
sub
add
dec
outsb
mov
dec
sti
lahf
movsb
jmp
movsl
xchg
lahf
shrl
cmc
sub
jp
scas
fstl
cmp
inc
leave
aad
xchg
in
das
aad
add
rol
cmp
into
dec
into
push
in
mov
clc
push
nop
je
dec
and
fwait
push
mov
xchg
pop
pop
into
mov
mov
subb
cmp
ret
xor
jbe
sti
push
arpl
subl
mov
add
adc
or
mov
jbe
into
mov
sbb
notb
inc
out
dec
popa
or
testb
mov
and
scas
data16
pop
jno
fldcw
add
in
test
mov
test
mov
mov
movsl
insl
fnstenv
pop
in
mov
inc
mov
pop
pop
pushf
and
mov
and
and
std
fisubl
call
in
pop
ljmp
or
push
pop
mov
xor
cmpsb
jo
sti
push
jno
iret
push
dec
inc
outsb
cmp
cmp
shl
imul
pushf
repnz
cmp
decl
jo
enter
mov
dec
outsb
push
aad
push
jo
dec
rol
jae
ds
xchg
aad
or
jmp
call
mov
mov
dec
mov
mov
sub
inc
or
in
jl
mov
ss
je
sahf
fidivrl
shl
lods
mov
in
ss
xor
or
decl
cmp
mov
inc
loop
push
bound
loop
aad
dec
pop
loope
push
pusha
pop
nop
ja
outsl
xor
clc
xor
sub
cmp
addr16
sub
or
dec
popa
jb
in
and
les
rorb
rorl
jge,pn
sub
xchg
xor
or
jp
pop
dec
outsl
cwtl
lret
testl
andl
xchg
adc
leave
stos
mov
es
push
int
cmp
inc
dec
movsl
rorl
jno
hlt
sub
mov
scas
les
aas
test
imul
and
mov
adc
ljmp
rorl
in
pushf
and
pop
subb
pop
mov
sbb
mov
nop
jno
arpl
dec
pop
arpl
negb
sub
xchg
adc
cmc
add
in
and
repnz
pushf
cmpsl
pushf
push
push
xor
hlt
dec
push
or
rcrl
popf
add
jecxz
mov
or
fsubrl
stos
loop
push
push
cmpsb
jns
int
rclb
lock
mov
sub
rcll
adc
aas
sub
or
push
or
or
xor
or
andl
mov
cmp
out
or
and
test
dec
andb
pop
rorl
das
mov
adcl
popa
insb
jbe
xchg
sbb
aaa
stc
lea
pop
repnz
and
clc
int
jle
pop
addb
xor
mov
enter
mov
mov
push
mov
popa
cmp
pop
push
lret
cld
mov
popa
loope
push
sahf
call
filds
mov
pcmpeqd
mov
dec
int
das
jge
scas
jmp
rol
sub
aad
iret
sti
adc
daa
pop
int3
push
xchg
dec
popa
aaa
stos
or
inc
andb
mull
xchg
les
push
xor
call
dec
sar
addr16
testb
mov
or
cmp
xor
aam
xchg
je
test
mov
ror
jno
adc
dec
push
lods
mov
es
adc
into
xchg
in
loop
ja
mov
divb
daa
sbb
orl
ret
ds
loopne
add
add
cmp
fdivl
lea
rclb
fstps
push
add
dec
cmpsb
mov
lcall
or
and
jl
stc
popa
test
jle
cmp
jge
xor
push
aas
test
stos
jne
mov
addr16
daa
leave
xchg
leave
aad
es
mov
imul
pop
movsl
dec
xchg
dec
cmc
and
dec
adc
cmc
add
push
push
xchg
dec
arpl
gs
arpl
faddl
cmp
lock
or
or
mov
out
sub
mov
movsl
rcr
test
les
out
push
sbb
cli
push
mov
adc
inc
pop
mov
cli
ds
xchg
mov
or
push
test
std
mov
push
es
push
iret
xor
ljmp
jo
cmp
and
pop
fcompl
push
gs
lods
lret
int3
mov
gs
xchg
jge
inc
ds
aaa
adc
test
aam
mov
push
repz
xor
add
popl
pop
mov
lret
rclb
sbb
cmp
js
jb
mov
cmovp
movsl
in
repnz
int3
dec
aad
xchg
je
jge
mov
jns
xchg
or
inc
jne
repz
sbb
mov
loope
add
das
sub
and
aas
sti
es
jo
fcompl
inc
push
jp
shrb
imul
jge
jae
sahf
jge
clc
in
dec
inc
jge
xchg
repz
shrl
dec
dec
es
pop
push
lcall
pop
pop
mov
movsb
and
mov
lcall
dec
push
inc
mov
push
aaa
push
jbe
lret
out
lret
shl
out
inc
call
ljmp
ret
add
jecxz
add
rol
test
sub
lods
push
and
adc
and
add
fidivl
lock
jo
popa
scas
push
mov
sbb
jae
push
std
pusha
mov
cmpsb
enter
scas
shr
sbb
push
inc
jle
pushl
subb
cmp
jg
stos
cmp
sar
scas
movsb
cwtl
jnp
xorl
jns
repnz
or
insb
mov
push
pop
loop
insb
xchg
dec
scas
jle
sub
xchg
pop
loope
bound
inc
pop
shrb
inc
stos
dec
and
fiaddl
mov
dec
lods
jno
shll
jmp
pop
push
adc
imul
scas
push
nop
cmpsl
dec
push
dec
mov
cmp
mov
imul
nop
push
cmp
push
or
mov
xor
imul
pusha
int3
adc
es
sub
rorb
pop
push
xchg
out
mov
add
ss
sbb
fldpi
call
aad
mov
mov
leave
fucomi
sbb
test
clc
fcoml
push
add
sbb
sahf
push
adcb
nop
shr
and
bnd
and
fnsave
test
rolb
ja
inc
lahf
shlb
or
xor
mov
sbb
sbb
outsb
jle
shll
mov
paddq
lea
ja
addr16
mov
jp
fildll
cli
xor
mov
jo
sti
je
xlat
pop
and
sbb
mov
fbstp
xchg
or
adc
ret
mov
out
faddl
popa
das
pand
insb
dec
adc
cmpl
mov
andb
pop
ss
adc
xor
repnz
and
push
bound
test
adc
cmp
ds
frstor
les
dec
adc
je
shll
add
mov
andb
push
int3
jge
push
cmpsl
sbb
addb
clc
fcmovnbe
cwtl
stc
mov
xor
imul
jge
mov
dec
mov
xchg
inc
add
cmp
xor
sbb
push
loope
xor
stc
insb
es
xlat
pop
push
and
fst
inc
pop
jmp
or
subb
lock
mov
cs
and
dec
pop
pushf
mov
aas
mov
testb
and
icebp
mov
mov
sub
mov
xorl
mulb
scas
sbb
mov
lret
or
adc
loopne
inc
pushf
fsubrl
xor
push
pop
lcall
sahf
cmp
sti
lods
cmp
mov
ja
les
outsl
out
pop
and
or
or
psrld
mov
js
mov
add
mov
in
dec
mov
xchg
shll
add
mov
ret
or
not
aaa
mov
loope
repnz
cmc
scas
sub
arpl
pusha
inc
test
rol
arpl
in
shlb
loop
push
jo
push
lods
jp
mov
in
sub
add
push
stos
pop
cwtl
cmp
push
sbb
xchg
lret
xorl
inc
out
lods
clc
mov
adc
push
mov
mov
sub
xchg
pop
mov
lahf
inc
out
mov
loop
add
sarl
aad
pop
dec
pop
mov
xchg
sahf
icebp
out
sub
fmull
shll
xchg
sub
pop
jno
mov
xchg
jnp
nop
popa
outsl
mov
xchg
addr16
ret
aam
icebp
lock
incl
xor
dec
add
add
push
sbb
inc
sub
insl
jb
add
cwtl
xorl
js
test
jmp
iret
jno
inc
mov
jmp
fs
dec
and
dec
int3
mov
inc
sbb
sub
test
js
test
dec
pop
push
shrw
bound
and
sbb
or
aam
adc
jns
pop
cli
dec
jne
dec
and
repz
pop
shll
cltd
sbb
xor
adc
lods
cmp
test
jno
and
jo
and
mov
mov
lods
cmp
fiaddl
inc
pop
cmp
dec
in
sarl
jg
imul
xchg
cmp
repz
mov
movsl
dec
stos
call
or
cmc
out
and
sahf
xchg
insl
or
cmp
mov
adcb
imul
test
cs
das
push
subb
mov
adc
mov
pop
jl
shll
andb
mov
repnz
repnz
cltd
mov
mov
lods
jmp
push
inc
pop
je
daa
xor
mov
js
mov
mov
test
xchg
sub
dec
mov
mov
ss
shll
mov
pop
cmp
mov
iret
inc
mov
fcoml
roll
dec
push
xchg
stos
lahf
data16
dec
mov
mov
xor
or
mov
loopne
inc
add
xor
jle
mov
loop
add
push
jp
mov
sub
jmp
pop
lds
mov
sub
outsb
mov
xor
push
pop
fucomi
sbb
mov
pusha
mov
addr16
inc
xor
xor
xchg
and
ret
jle
lea
aas
cmc
fisttpll
sub
jle
pop
loopne
test
movl
jmp
gs
loop
mov
xor
lcall
iret
sub
inc
cmpsb
mov
push
jmp
pop
inc
sub
cs
xor
adc
mov
jecxz
mov
pop
cmp
ficoml
mov
sub
in
or
mov
jnp
dec
mov
cmc
test
in
inc
add
fwait
divb
fdivr
ljmp
xchg
dec
dec
fcoml
add
sub
mov
or
pop
aaa
mov
jge
xlat
jbe
xor
cli
inc
fwait
cmp
lds
ret
pop
sar
rorb
ljmp
in
pop
jbe
cmp
mov
adc
shrl
pop
inc
jmp
mov
inc
shr
out
jp
mov
fwait
repz
or
inc
dec
loop
push
sub
fisubs
icebp
hlt
xchg
nop
push
push
js
mov
sub
cmp
movl
inc
inc
mov
int3
int
sbb
push
sbb
ljmp
push
mov
adc
mov
mov
fmul
xor
stc
mov
xor
mov
sub
mov
mov
pop
push
hlt
xchg
dec
ret
pop
cmc
sbb
jle
xchg
inc
pop
or
xchg
mov
dec
lcall
or
rcrb
fildll
dec
lcall
push
or
mov
xchg
sbb
fcompl
stc
cmpsl
test
mov
imul
imul
in
pop
popf
sbb
or
in
sbb
cmpl
fwait
xor
cmp
rcrb
xchg
and
orl
and
mov
xor
jnp
rcrl
stc
mov
and
sub
adcl
outsb
insb
xchg
jp
test
xchg
or
loopne
mov
inc
cld
into
sub
inc
cmc
and
leave
or
sbb
sub
add
jnp
inc
push
loopne
and
mov
mov
mov
outsb
and
mov
cwtl
fwait
pop
leave
popl
push
stc
and
in
xchg
xchg
popf
mov
adc
adc
adc
xchg
jmp
mov
lea
jmp
xor
pop
fistpl
and
jg
jne
fs
mov
mov
jo
cmpsl
bound
into
jmp
sub
cmp
packuswb
stos
lret
xchg
fs
flds
and
sub
fsts
outsb
jb
sahf
mov
rorl
dec
sarb
mov
jle
dec
xor
and
and
aas
jbe
lods
mov
repz
or
cli
and
xchg
mov
mov
mov
mov
mov
enter
rcrb
mov
into
pop
les
sahf
push
mov
fcmovnbe
cmp
jno
divl
ret
mov
je
add
mov
mov
pop
sbb
pop
xor
lea
aas
iret
mov
sub
cmp
pop
ror
pop
cs
das
mov
jne
adc
shl
cmp
gs
hlt
pop
inc
aam
cld
jge
mov
clc
mov
dec
xchg
jge
pop
ss
bnd
std
outsb
stos
std
ds
jecxz
movsb
or
mov
or
or
mov
shlb
add
sub
adc
cmc
mov
jl
jmp
loope
adc
inc
cmc
xchg
dec
add
icebp
fistps
imul
push
sbb
adc
scas
nop
stos
paddusw
add
inc
adc
inc
ljmp
inc
lock
fmull
mov
ficomps
jecxz
pop
push
arpl
pop
mov
sub
je
leave
rcll
cmp
subb
movsl
push
orb
dec
mov
jp
mov
inc
mov
xor
adc
push
iret
fidivl
mov
aad
dec
test
scas
sub
push
pop
loopne
pop
sbb
pop
and
repnz
adcb
or
sbb
jmp
insb
ret
movsb
xchg
pop
in
add
mov
cmp
mov
leave
jo
mov
mov
jge
cmp
jo
hlt
cmc
into
adc
cmpsb
or
cmp
shrb
jecxz
add
fwait
ljmp
cli
fmull
jmp
push
push
dec
out
testl
rclb
roll
mov
jno
sub
cmpsl
xlat
mov
orl
push
and
cmp
xor
lods
or
inc
das
lea
call
ror
lods
jno
and
rorb
fnstcw
arpl
in
xlat
inc
fsubr
repnz
dec
cs
xor
pusha
cmp
icebp
ds
lcall
sbb
and
aad
or
sub
dec
popa
sbb
and
push
nop
sete
decb
dec
sbb
cmc
ss
push
ja
loopne
fidivrl
xor
aam
sbb
stc
neg
pop
jb
orl
pop
inc
mov
mov
jae
mov
jbe
xchg
sbb
ret
xchg
int
dec
jle
std
ret
pushf
sbb
lock
notb
es
out
lret
fimuls
xlat
mov
push
inc
xor
leave
cmp
test
ret
cmp
icebp
stc
or
cltd
and
jg
lret
imul
fsubr
mov
sbb
inc
or
cmc
adc
arpl
fs
mov
and
push
push
rclb
scas
leave
push
or
dec
movsl
inc
jmp
pop
lahf
insb
pop
jae
push
stc
pcmpeqd
push
sub
out
push
pop
push
push
clc
jbe
xchg
movsb
sar
mov
loope
lock
jbe
das
add
adc
cs
inc
repz
ret
jge
mov
test
clc
fs
adc
sbb
xchg
inc
mov
add
inc
mov
xor
sub
push
jno
icebp
sbb
pusha
or
out
dec
xor
fimull
mov
mov
stc
idivl
sbb
mov
pop
adc
sub
fdivs
push
or
sbb
pop
int
push
gs
inc
lcall
data16
jmp
cmp
ja
out
loop
and
or
mov
inc
subb
pop
lret
ds
test
cli
inc
movsl
in
add
cmc
mov
add
lret
sub
out
push
int3
das
mov
jno
jae
push
xchg
movsl
or
data16
outsl
inc
push
dec
mov
loop
sti
addr16
sbbb
test
and
add
dec
hlt
es
std
jecxz
push
pop
push
add
dec
mov
mov
xor
sub
mov
hlt
int3
into
push
addr16
call
xchg
jno
daa
shl
fs
sub
scas
push
cmp
lcall
mov
aas
in
test
ret
xchg
pop
jmp
test
fimull
adc
rol
int
cmpb
cmp
fisubrl
mov
xchg
mov
nop
lahf
aas
ret
dec
inc
pushf
daa
inc
enter
xchg
xlat
icebp
bound
je
push
lock
lods
loope
adc
pop
cld
mov
fidivrs
sub
daa
or
push
pushf
mov
jle
in
hlt
popf
add
bound
pop
in
cltd
inc
and
aaa
jecxz
and
sub
mov
cmp
sbb
dec
push
mov
jne
leave
dec
pop
stos
aaa
inc
adc
xlat
int
fisubrl
loopne
ljmp
xor
mov
pop
mov
out
enter
lcall
hlt
adcb
cmp
push
pushf
inc
inc
sti
lods
xchg
or
negb
inc
lcall
xor
leave
cs
loopne
scas
je
jo
mov
enter
jo
dec
adcb
lods
xchg
outsb
ret
ret
xor
mov
and
jo
mov
mov
xchg
adc
in
adc
loope
lret
xor
out
sahf
es
lahf
ljmp
cmp
cmc
mov
push
cmpsb
es
cmp
add
sbb
or
out
idiv
push
xchg
cmpsl
sub
pop
rcrb
cmpsl
push
or
xchg
mov
xchg
pop
or
add
les
adc
sbb
xchg
pop
mov
xor
push
and
dec
push
push
out
out
and
fists
dec
mov
mov
mov
xor
xor
js
xor
mov
push
cmp
mov
sub
jne
inc
je
inc
jp
xchg
inc
xchg
sub
push
loop
jmp
or
dec
cmc
dec
js
add
aaa
pusha
mov
int3
lock
mov
cmp
cmp
jecxz
xchg
dec
imul
push
adc
xor
push
jle
pop
ret
mov
jg
jns
fists
sub
dec
mov
mov
in
es
dec
and
sub
cs
push
imul
test
lret
shrb
or
mov
mov
jg
pop
ljmp
popf
pop
and
negl
nop
sbb
cs
push
test
and
test
add
and
faddl
inc
xlat
fidivs
push
ljmp
mov
push
add
aad
leave
scas
jle
mov
repz
in
stos
test
push
cmp
inc
dec
sub
in
cmp
push
cs
loop
lcall
or
aas
sbb
jno
inc
jo
sti
clc
pop
xor
and
cmp
pushf
xchg
jb
test
int3
xchg
movsb
mov
xchg
jge
enter
adc
sbb
test
dec
pusha
punpcklbw
call
mov
cs
mov
push
out
xchg
ljmp
sbb
iret
mov
test
pop
negl
ficomps
jno
and
lcall
and
dec
test
je
cmp
pop
iret
and
popf
mov
lock
lea
arpl
loop
xchg
test
jnp
into
notb
aaa
lret
and
mov
jle
aaa
in
cmpsb
jae
testl
mov
cmp
inc
inc
sahf
add
in
popf
es
cmpl
popa
lret
mov
sub
outsl
movsw
jns
and
pop
adc
mov
push
mov
dec
mov
mov
and
sub
or
xchg
outsb
sbb
sub
jno
jae
xor
cmp
xchg
hlt
jmp
or
push
mov
add
enter
jnp
faddp
inc
sarb
fnstenv
push
xchg
rorb
mov
pushf
sub
sub
lds
mov
cltd
pop
test
mov
sbb
icebp
add
pop
jns
inc
jo
addr16
xlat
mov
in
cmp
stos
dec
lret
push
mov
imul
dec
xchg
stos
add
out
mov
push
and
mov
movsb
sbb
fs
and
jne
inc
loopne
inc
stc
push
or
loope
lret
mov
ret
and
push
test
cmp
push
mov
addr16
lock
adc
mov
popf
in
ret
out
mov
sbb
dec
mov
inc
fistl
or
out
loope
ret
popl
cs
and
pop
and
fldt
fsts
movsl
mov
push
hlt
shll
test
shrl
stos
xor
cmc
push
stos
popf
push
clc
addr16
popf
mov
in
xor
shrb
mov
pusha
out
inc
dec
and
cs
pushf
fsubrl
adc
pop
das
outsl
and
pop
mov
jecxz
shll
icebp
mov
loope
cmp
pop
mov
add
insb
cmpb
pop
loop
pop
add
popa
cmp
add
std
dec
ljmp
and
pop
xor
sbbl
and
dec
imulb
and
xorl
jnp
aaa
mov
dec
dec
push
inc
loopne
pushl
stc
mov
into
nop
cmp
mov
xor
push
lahf
test
xchg
mov
mov
xchg
push
jecxz
out
pop
inc
imul
in
out
jne
ret
jle
repz
cmp
jl
fidivs
es
insl
call
dec
add
loopne
xchg
int
inc
popa
sub
addl
cvtpi2ps
es
jmp
xchg
aad
xchg
hlt
push
push
jno
cwtl
mov
pop
adc
jg
mov
adc
outsl
loope
stc
sub
std
mov
cmp
pop
mov
lahf
cs
aad
or
mov
jno,pn
pop
jg
jecxz
push
mov
flds
xor
in
repnz
lea
cmp
pop
out
pop
cmp
mov
outsl
gs
aaa
into
mov
cld
sub
nop
sub
scas
outsl
adc
mov
pop
popf
in
aas
sub
dec
in
jb
push
es
leave
pop
in
and
test
mov
mov
test
jge
xchg
in
sbb
mov
cli
push
mov
lock
inc
push
mov
fdivl
pop
sbb
fcmovu
sbb
mov
sub
xchg
fucomip
mov
cmp
adc
or
pop
pusha
scas
add
scas
shlb
lods
add
clc
fisubl
fcoms
stos
je
adc
shrb
cmp
outsl
aad
push
inc
mov
inc
cmpsl
pop
add
icebp
inc
nop
adc
inc
add
push
sti
stos
stc
mov
lret
loop
in
inc
loopne
mov
lods
and
stc
jmp
mov
out
repz
stos
insb
or
testb
mov
je
jo
es
mov
pop
mov
jns
popa
jae
aaa
xchg
xchg
pop
jp
inc
jae
pop
leave
subb
or
fcompl
sti
test
pop
call
fcompl
ds
mov
stos
outsl
repz
jle
adc
mull
dec
sbb
fs
enter
add
mov
andl
sub
maskmovq
mull
int
push
in
test
fnstenv
lods
dec
mov
pop
sub
lock
out
mov
fbld
fiaddl
fimull
int
cmc
mov
sbb
adc
lea
or
es
pop
mov
daa
push
scas
adc
xchg
int3
cmpsb
jns
loop
sti
les
xor
imul
jo
xor
jg
ss
int3
jecxz
add
inc
in
pushw
mov
stos
inc
sub
cmp
sbb
sub
add
test
std
mov
popf
pop
or
jo
or
repz
inc
cmp
push
iret
idivl
fdivrl
mov
xchg
clc
pop
cmp
mov
nop
insl
add
push
adc
sub
mov
mov
xor
sbb
pop
add
test
inc
push
popf
dec
or
xchg
scas
or
rcr
movsl
sub
adc
dec
jae
xchg
sbbl
sub
int
lods
xchg
pop
mov
les
pop
sbb
sti
dec
cltd
mov
mov
xor
into
test
inc
add
loop
lds
or
add
stc
jno
ja
stos
jge
mov
lock
inc
ljmp
imul
xchg
mov
mov
xchg
xor
mov
iret
xor
ret
mov
push
mov
mov
lcall
test
jo
jne
inc
test
sbb
pop
aad
xchg
jg
fxam
push
test
xchg
flds
mov
aaa
out
cmp
cmpsl
js
pop
fmull
add
hlt
fimull
jge
repnz
insb
jne
fdivrs
mov
fmull
pushf
out
adc
out
popa
and
cmpsl
jl
arpl
jecxz
hlt
mov
stos
jmp
mov
and
adc
adc
ja
test
mov
shlb
outsb
rcl
iret
jge
pop
jne
testb
in
push
arpl
cli
hlt
out
psubq
inc
gs
push
sbb
inc
push
jp
fildl
enter
leave
cli
ret
les
inc
sub
mov
in
push
adcl
xchg
xor
jne
loop
mov
cmpsb
imul
test
in
and
adc
data16
cs
and
pop
fldl
lcall
xor
push
xlat
aaa
adc
test
dec
jb
es
push
mov
adc
stos
pusha
dec
ss
cmp
pop
mov
ds
cmp
mull
sbb
lods
lcall
sub
and
inc
pop
mov
jo
mov
mov
loop
jmp
sbb
and
ljmp
shrb
scas
out
sub
cmp
pop
cmp
test
jl
pop
mov
outsb
pop
stos
ss
adc
ficoml
add
or
pop
sbbb
xchg
jmp
int
pushf
cmp
xchg
mov
push
xchg
cmp
xchg
hlt
mov
xor
subl
loopne
mov
sub
std
or
dec
stc
cmp
incl
cmp
imul
inc
push
out
inc
cli
fs
fldl
cmp
cmp
dec
fcomps
aas
sub
fdivs
test
sbb
pop
sub
push
stos
rcl
aaa
pop
add
adc
lahf
imul
in
dec
mov
dec
adc
js
push
cmpsl
sub
loope
mov
sti
push
pop
cmp
mov
addr16
divl
ja
popf
fdivrl
pop
mov
push
pop
movsl
inc
aad
outsl
fwait
xchg
jmp
decb
pop
fildl
into
cmc
inc
sub
fbstp
add
dec
in
mov
orb
shrl
aad
lock
mov
add
mov
int
jne
aaa
cmp
xorl
cmp
inc
and
data16
lds
push
mov
add
daa
scas
cld
cwtl
and
sahf
into
or
adc
mov
lds
xchg
jne
fwait
loop
insb
movl
insb
xchg
push
loop
mov
sbb
add
addl
mov
jl
mov
cld
jb
enter
lret
lret
lods
mov
pop
add
push
dec
stc
jno
or
and
js
pshufw
and
psubb
sub
int3
push
in
xor
add
daa
add
sbb
lock
je
or
inc
xchg
fisubs
loop
fucomp
jmp
push
mov
cli
rolb
scas
sbb
xchg
idivl
sbb
cmc
mov
sub
push
test
mov
xchg
je
in
mull
pop
and
or
adc
sar
pop
loopne
jno
and
roll
push
or
adc
fimuls
gs
aad
iret
jb
stc
sub
lods
xchg
pop
mov
int3
lret
adc
adcl
jns
pushf
push
orb
outsb
add
in
or
aad
iret
pop
push
and
sub
les
xchg
xchg
je
addl
sbb
subl
test
sub
inc
popf
and
mov
out
pop
test
popa
lcall
jg
sub
add
or
notb
roll
iret
ljmp
jno
dec
add
out
ja
cmp
cmp
mov
push
daa
jne
jb
inc
movsl
cmp
clc
pop
out
dec
push
rclb
push
and
cmp
daa
inc
inc
mov
icebp
push
cmc
or
hlt
push
arpl
pop
test
nop
jmp
jb
popa
gs
rcl
cmpsb
pop
test
push
push
out
stos
imul
cmpsb
jle
aad
sbb
xchg
sbb
aas
js
cltd
mov
lret
inc
jl
push
dec
hlt
inc
and
adc
stos
outsl
mov
jle
pop
repz
jb
pop
out
push
push
jmp
sbb
inc
call
and
outsl
js
cltd
lahf
iret
dec
in
jno
xchg
inc
fiadds
andb
xchg
call
mov
dec
call
sbb
mov
mov
mov
jmp
or
add
mov
sar
cmovge
xlat
fstps
sub
cwtl
adc
push
fmul
jnp
faddl
push
mov
or
sub
sbb
pop
pop
dec
push
sub
test
mov
subb
inc
imul
ror
ja
test
js
hlt
mov
pushf
adcl
add
movsl
pop
rorl
movsb
mov
pop
mov
push
scas
jge
out
xor
jg
mov
das
mov
add
inc
idivl
insl
fists
mov
xchg
or
lcall
fcom
xor
stos
xor
jae
jp
mov
nop
or
xchg
es
mov
in
sbb
mov
xchg
jg
lods
lret
pop
mov
hlt
sub
lods
mov
push
cmp
sub
sub
lcall
in
movsl
sub
mov
adc
enter
mov
and
pop
jno
nop
or
jg
adc
inc
loopne
lods
ret
repnz
pop
bound
pop
fcmove
mov
xchg
mov
lds
lcall
aad
mov
sub
push
outsb
xchg
inc
fiaddl
xlat
sbb
ja
mov
pop
mov
jecxz
jge
mov
pop
bound
jns
inc
imul
mov
push
in
jb
cmp
pusha
xchg
sbb
dec
mov
mov
addb
in
movsl
loope
xchg
sub
aaa
sbb
add
push
mull
cmp
test
sub
sub
outsl
sbb
test
in
daa
xcrypt-ctr
cmpsl
fdivp
add
cld
int
arpl
hlt
adc
rorb
outsl
pop
add
scas
repnz
dec
jnp
add
popa
andl
push
cld
mov
jns
inc
sarl
hlt
jle
dec
xchg
mov
aas
push
divl
sub
xchg
add
fsubrl
jp
shlb
sbb
notb
out
sbb
test
push
std
jae
in
out
hlt
fildl
jecxz
sbb
jo
sub
insl
call
mov
frstor
insb
mov
jae
xchg
fistl
jns
repz
dec
ljmp
mov
and
inc
inc
adc
insl
xchg
jecxz
lods
cltd
mov
out
xchg
jg
dec
lds
cmc
mov
xor
iret
sub
adcb
mov
or
adc
pop
add
cmp
and
sbb
jl
and
orl
dec
outsl
fldenv
cmpsl
ss
lret
inc
stos
shrl
aas
and
and
inc
xchg
xor
in
shlb
iret
add
jae
std
add
push
or
cmp
and
mov
mov
lods
push
add
mov
mov
cmpsb
imul
js
and
daa
or
adc
dec
outsl
sbb
hlt
mov
cmp
jb
mov
ss
mov
lea
movsb
dec
sub
mov
jp
movlps
push
gs
push
addl
or
xorl
push
repz
out
out
and
lods
xchg
test
adc
daa
xchg
popf
cwtl
sahf
pavgw
and
mov
lock
jae
sub
sbb
ss
das
inc
push
fmull
nop
sbb
and
mov
testl
sub
and
or
in
fmuls
xor
sbb
add
mov
outsl
xlat
hlt
jo
mov
std
push
scas
cmpsb
inc
repz
adc
jns
add
js
jmp
int
hlt
das
push
adc
pop
enter
sahf
pop
loopne
pop
push
jmp
lahf
mull
xlat
mov
mov
inc
call
rcr
je
fildl
outsl
inc
es
repz
xor
daa
test
xor
adc
sub
adc
adc
bound
daa
mov
rclb
cmp
mov
jnp
jno
dec
loope
mov
adc
stc
xor
loop
popa
sub
mov
xlat
push
xchg
es
push
inc
out
push
jne
xchg
xchg
jg
xor
dec
xchg
dec
xor
aas
mov
push
fdiv
lods
add
gs
adc
insb
mov
stc
mov
sbb
mulb
leave
aad
popf
mov
sti
inc
cwtl
out
ret
push
cld
das
popf
icebp
shr
xchg
dec
int3
repnz
adc
inc
les
rcrl
jbe
push
mov
insl
xor
out
jno
cmc
or
jae
outsb
or
stc
loopne
mov
out
daa
mov
pop
inc
shll
and
movswl
mov
out
jle
test
std
mov
adc
cmp
je
fs
xor
cs
dec
out
mov
and
pop
dec
scas
cmpsb
lds
iret
sub
sub
add
mov
inc
add
cs
ljmp
sub
leave
mov
addr16
das
loopne
cmp
stos
push
ljmp
iret
vmptrld
dec
mov
mov
ljmp
sbb
mov
jl
popf
ljmp
test
or
pop
cld
aaa
xor
cmp
repz
inc
mov
push
sbb
out
adc
inc
push
pop
mov
aaa
pop
inc
js
sub
add
adc
add
icebp
mov
mov
test
notb
aas
inc
xchg
xchg
or
out
lds
fstpl
incl
pop
movsb
mul
and
inc
sbb
shrb
das
add
std
dec
add
mov
push
lods
fildll
adc
cmp
dec
ljmp
dec
pop
int
aad
ret
xor
mov
fwait
out
cwtl
jecxz
or
or
dec
fidivl
jecxz
ds
les
cmpsb
cmp
dec
les
jl
mov
xchg
push
imul
or
mov
scas
push
mov
popl
frstor
outsb
and
enter
ja
push
loopne
push
dec
xchg
xchg
stos
mov
push
neg
xor
dec
lahf
xor
mov
mov
in
imull
mov
inc
add
orb
in
push
push
aam
or
jb
arpl
jbe
lds
adc
lret
repz
insb
outsb
and
test
and
loop
or
xchg
pop
xchg
mov
mov
push
pop
shlb
add
jns
fcoms
jmp
test
out
test
mov
std
xor
inc
mov
stc
push
mov
jns
cmc
cmp
sbb
lahf
mov
sahf
jne
cmp
jp
daa
shlb
shlb
sbb
xor
mov
mov
arpl
out
dec
adc
dec
jne
lods
out
fwait
cmp
lcall
push
mov
mov
jne
adc
inc
dec
imul
and
lret
scas
aam
jmp
aam
push
dec
cmp
mov
hlt
add
jl
mov
shl
pop
jb
cmc
rorb
clc
std
push
cld
adc
pop
out
cmp
insl
aas
jbe
aam
popa
sti
repz
jae
cli
loopne
sub
pop
into
pop
inc
pop
cmp
data16
stos
and
xorb
mov
outsb
sbb
lea
arpl
xor
arpl
adc
mov
in
adc
inc
jp
or
out
add
push
cwtl
pop
or
or
xchg
adc
fildl
dec
and
mov
ja
ljmp
sbb
adc
fsubs
push
push
xor
stos
pop
mov
subl
pcmpgtd
adc
cmp
pop
scas
mov
cltd
addr16
into
and
adc
mov
mov
cmp
sub
xor
lret
inc
add
popa
jb
idivl
push
add
and
inc
and
xchg
mov
mov
sbb
pop
inc
insl
es
movsb
jp
jne
popa
int3
cmpsb
mov
mov
add
pop
pop
sarl
repnz
mov
pop
sub
fistps
fisttps
xchg
jecxz
xchg
cmc
mov
data16
jnp
cmp
data16
shl
dec
stos
sbb
adc
in
add
or
fwait
sarl
test
adc
jne
sbb
cmpsb
add
push
mov
int3
stc
jmp
unpcklps
stc
xchg
cmp
jp
push
mov
loopne
and
hlt
mov
lahf
cmp
or
inc
lds
test
repz
lods
sti
add
mov
sbb
out
and
xchg
loope
sub
mov
lcall
pop
xchg
inc
add
aad
jne
arpl
mov
xchg
and
add
in
pusha
or
xor
inc
mov
loop
jecxz
and
in
bound
or
out
push
mov
outsl
jne
xor
shr
add
ret
mov
push
out
pop
xlat
jne
mov
cltd
jns
pop
subl
int3
pop
stc
fstpt
jg
lods
sub
fstl
dec
cli
iret
aad
adc
and
pusha
cld
movsb
lret
and
ljmp
sub
cmpsl
flds
nop
sub
xchg
jmp
not
arpl
and
data16
out
daa
mov
adc
xchg
mov
outsl
pusha
mov
lahf
pusha
mov
push
cwtl
lds
mov
and
test
out
mov
dec
out
lock
pop
pop
testb
sti
sub
pusha
jle
sahf
add
ret
sahf
cmp
cmpsb
sbb
mov
or
push
dec
cmpsl
mov
aas
sbb
ljmp
mov
stc
popf
hlt
dec
negb
mov
push
jmp
insb
adc
idivb
adc
sahf
fldt
mul
push
dec
pop
dec
cmpsl
out
cmpsb
pop
cwtl
cwtl
in
add
xor
mul
sbbl
sbb
push
or
push
mov
out
mov
ds
mov
rcl
adc
cmpsb
sub
pop
sbb
pop
subl
pand
icebp
gs
out
lret
push
jge
push
sbb
mov
in
aas
in
sbb
adc
jl
mov
cli
in
mov
stos
cmpsl
stos
lock
and
jg
les
out
jns
push
push
jp
xchg
push
loop
mov
jo
dec
loopne
lahf
jnp
dec
pop
cmpsb
dec
jecxz
scas
mov
push
and
rorl
jge
std
es
mov
xchg
lods
lcall
lods
in
das
and
push
or
stos
xor
out
cmp
inc
xlat
and
mov
pop
fdivs
or
mov
nop
mull
rcrl
and
out
je
lahf
andl
mov
addr16
jp
add
inc
imul
push
rorb
mov
xor
or
in
xchg
lods
adc
sub
push
xchg
jmp
inc
movsl
call
fdivl
or
push
or
bound
leave
out
cmp
cmp
neg
xchg
scas
jnp
jo
imul
lea
stc
loop
lods
xchg
rorl
dec
jp
sbb
mov
arpl
ss
in
ret
inc
leave
shrl
cwtl
iret
dec
xor
inc
int
pop
jmp
push
and
call
mov
cmp
outsb
sub
mov
cmp
add
sbb
pusha
lods
loope
icebp
push
enter
jae
rorl
dec
out
fs
sbb
inc
scas
mov
sub
jno
iret
dec
mov
mov
inc
xor
mov
mov
xor
sbb
popa
jmp
lds
mov
jle
push
insl
xchg
add
outsl
leave
stc
scas
test
movsl
adc
sbb
xchg
pop
push
fimull
jge
movb
cmp
jle
pop
bound
mov
test
xorl
sar
shll
lret
sar
les
sbb
lret
lock
lcall
rclb
and
std
pop
fxch
inc
cmp
mov
movl
fwait
pop
into
or
cwtl
or
lcall
dec
in
shrb
sbb
pushf
negl
cwtl
add
pop
clc
mov
ljmp
in
or
idivl
sysret
out
adc
push
data16
jns
test
loopne
ret
adc
pop
mov
xchg
test
orl
sti
addr16
gs
scas
sbb
sub
call
xchg
test
movl
cmp
imul
jp
outsl
mov
imul
adc
aam
adc
sub
sub
xor
push
and
jp
cmp
sbb
sub
sbb
mov
push
jb
test
push
add
adc
mov
lods
xlat
popa
aam
cmp
mov
or
dec
das
cwtl
jne
pop
or
jmp
mov
push
cmp
lock
jmp
add
or
mov
sub
lock
pushf
mov
and
add
sbb
iret
cmpsb
dec
ficomps
ret
push
sti
inc
sbb
pop
mov
out
aas
fcoml
leave
push
mov
pop
xor
adc
mov
inc
popa
mov
push
imul
aaa
inc
fbld
aad
sub
ja
mov
jnp
sbb
xchg
jge
push
dec
shll
push
and
arpl
aad
lds
xor
fnstcw
sbb
pop
sub
lcall
repnz
mov
xchg
testl
cmpsl
les
cmp
fmull
repnz
jl
fnstsw
imul
inc
lcall
enter
dec
jl
ss
ret
jle
jg
out
imul
sbb
repnz
and
outsl
and
in
adc
mov
sbb
sbb
cltd
mov
fwait
lret
into
sub
push
iret
xor
xor
add
pop
mov
dec
sbb
or
pop
dec
pinsrw
cmpsl
repnz
adc
lods
aaa
dec
dec
mov
fstpt
push
sahf
fdivs
cmpb
vmwrite
sbb
mov
adc
jge
sti
and
pop
mov
push
rcrl
movsl
inc
fldcw
outsb
movsb
or
ja
mov
jecxz
dec
in
loope
clc
adc
sub
stc
xorl
shrl
inc
out
mov
jnp
or
test
dec
push
test
dec
xchg
enter
call
in
dec
dec
js
movsl
inc
mov
xor
sbb
push
loopne
inc
movsl
mov
xor
decl
xor
negb
xchg
mov
and
mov
std
out
push
jg
dec
imul
into
jbe
mov
jmp
mov
or
push
mov
out
stc
sbb
jo
xor
mov
into
ret
leave
add
and
adc
mov
mov
xorb
sbb
test
sub
mov
mov
int
inc
pusha
xchg
mov
mov
pop
popa
mov
je
adc
inc
scas
stos
push
out
add
mov
outsb
xchg
and
repz
pop
test
inc
pop
ljmp
ds
cmp
das
mov
sahf
inc
and
push
xchg
insl
and
jl
pop
mov
movsb
loop
enter
or
adc
mov
cmc
out
inc
dec
in
xchg
ljmp
mov
pop
mov
xor
jo
jo
into
cwtl
sahf
mov
push
cwtl
cli
jo
xorb
clc
cmp
or
cli
div
and
jg
ret
push
scas
cmp
cmc
ja
and
pop
xchg
add
mov
mov
rolb
mov
cmp
or
xor
dec
push
xchg
pop
popf
fs
sahf
pop
test
stc
fistpll
clc
and
loope
insl
aaa
pusha
jnp
or
sub
test
cs
cmp
pop
lret
nop
stos
mov
or
xor
lret
incl
out
movsl
clc
cmp
mov
stc
outsl
dec
mov
shrl
jb
push
xor
xor
add
inc
iret
or
jbe
dec
mul
mov
dec
sbb
xchg
or
loopne
pop
jno
mov
cmp
pop
and
adc
hlt
push
int3
xchg
cmc
icebp
push
notb
push
dec
mov
mov
mov
adc
out
inc
add
shrb
mov
es
out
daa
and
mov
es
fnstcw
sbb
add
inc
lods
call
or
adc
inc
xor
cs
add
pop
sub
stos
mov
add
xlat
push
std
pop
jae
out
call
in
adc
inc
jno
lock
shr
call
subb
adc
cmpsb
pop
add
mov
loopne
mov
pop
cmp
shll
stos
fwait
subb
inc
jecxz
sti
xor
cltd
xor
ljmp
mov
pushf
mov
gs
sbb
js
adc
cmp
mov
insl
mov
sub
mov
sbb
test
and
fcoms
lods
sbb
mov
xchg
push
sub
cmpsl
adc
mov
rcrl
mov
pop
ror
jno
xchg
mov
outsl
xor
add
ror
repnz
push
mov
leave
push
xchg
sbbb
xor
add
dec
push
bound
mov
cmp
mov
and
in
xchg
xorl
aad
sub
loope
jnp
sbb
lahf
sbb
cmp
movsl
cmp
sbb
lods
adc
popa
or
sub
movsb
push
movsb
vpcomd
mov
mov
das
jns
xchg
sub
xor
jbe
sti
mov
lret
dec
inc
pop
pop
cmpsb
and
inc
jne
sahf
dec
fld
stos
jmp
mov
pop
mov
out
xchg
push
pusha
stc
aas
xchg
fldcw
gs
sbb
mov
add
in
ret
dec
xchg
mov
sti
sahf
out
sarl
das
fs
js
loopw
mov
adc
in
adc
lock
int
testl
or
inc
or
sbb
mov
dec
ss
es
cmp
into
test
sbb
mov
in
sbbb
rcl
stos
loopne
jecxz
pop
gs
cwtl
int
cmp
repnz
pop
dec
in
inc
sub
cmpsb
pop
test
or
sahf
mov
jae
pop
das
insl
sub
shlb
pop
sub
aas
pop
loope
push
mov
mov
adc
sbbb
repnz
shl
loop
cmpsl
fisubs
mov
in
cmpl
rorb
xlat
push
add
js
ret
inc
pop
cs
ss
cmpsl
cmp
mov
mov
add
imul
sub
les
inc
andl
into
push
int
and
fcoml
or
sub
and
scas
add
inc
adc
nop
mov
sub
inc
ss
popa
pop
pop
ret
scas
bound
sbb
pop
sbb
fmuls
mov
adc
cltd
inc
divb
xchg
bound
daa
ja
daa
repz
adc
clc
bound
call
rorl
movsl
xorl
js
and
pop
mov
ret
xor
and
or
pop
lds
mov
shll
leave
sbbl
push
pop
test
mov
jg
shlb
xchg
cmpb
adc
mov
fs
out
outsl
ret
sbb
sub
pop
xor
fidivs
ret
popf
ror
inc
mov
pop
idivb
scas
xor
cwtl
pop
cmp
mov
ja
mov
mov
popf
arpl
sub
mov
std
fcomps
sarb
cmp
scas
fidivrs
mov
fwait
dec
popf
je
popf
cli
js
mov
jnp
sub
sub
mov
xchg
bound
mov
mov
sbb
push
adc
pop
pushf
add
push
mov
mov
push
sub
mov
sub
sahf
stos
inc
adc
mov
mov
inc
mov
stc
pop
psubq
pop
in
or
es
xchg
bts
cmpsb
dec
cmp
arpl
xchg
xchg
jae
mov
dec
into
cmp
mov
jmp
in
adc
jmp
jae
inc
dec
push
mov
jp
sarl
add
push
repnz
jns
fidivrs
and
sbb
sub
les
or
push
jge
xor
into
sub
hlt
adc
inc
test
jns
lods
push
lods
sahf
mov
lock
mov
sbb
push
and
mov
jmp
daa
fildl
pop
iret
out
xor
aas
lahf
mov
cmc
pop
dec
lret
mov
repz
pusha
jns
dec
sub
adc
xchg
out
mov
cld
sbb
das
sub
fldl
or
xor
jge
daa
fs
inc
cld
mov
adc
push
mov
or
rorb
dec
jge
fiaddl
into
adc
cmp
mov
mov
inc
out
push
out
jo
insl
jno
sub
insb
aaa
adc
test
push
loope
mov
cmc
sub
or
fs
stc
push
movsb
xchg
xchg
or
enter
cltd
ja
dec
jnp
mov
xchg
cwtl
pop
clc
mov
int3
cmpsl
add
popf
loope
xor
fisubrl
mov
imul
lahf
std
dec
jb
popa
rcll
add
cs
int3
call
imul
inc
jnp
push
dec
insb
jae
ss
push
cli
xchg
cli
daa
or
movsb
push
aad
dec
push
cmp
mov
cmc
sbb
push
fdivl
mov
xlat
push
sti
adc
inc
or
outsl
out
jmp
push
jle
fptan
jle
add
lods
jbe
cmc
xchg
jne
sahf
sbb
xor
int
mov
mov
sub
inc
or
stos
or
rcll
sti
cltd
or
cwtl
jg
popa
mov
dec
cwtl
jp
mov
mov
add
cmpsb
push
test
sahf
sbb
test
pop
sbb
xor
xor
repz
rorb
in
insb
mov
std
lods
mov
inc
adc
ficompl
xchg
sbb
jl
adc
push
into
jns
icebp
les
adc
sub
sub
jge
sbb
mov
movsl
test
sub
int3
xchg
push
mov
pusha
paddusw
cli
stos
push
and
jb
daa
stc
dec
dec
fdivrl
into
popf
xlat
test
dec
add
mov
mov
arpl
out
add
andl
fisttps
les
mov
loope
inc
in
out
mov
fcmove
add
jbe
shrl
outsb
fwait
mov
dec
fwait
lret
repz
dec
bound
pop
cmpsb
jnp
scas
jge
enter
add
pop
cmp
enter
sbb
xchg
or
in
sub
mov
mov
jmp
imul
repz
mov
adc
jns
and
cmp
arpl
push
leave
cmp
fmul
lds
and
sbb
scas
sbb
mov
out
pop
cltd
xchg
mov
shll
push
jb
dec
push
sub
mov
sub
jne
cmpsl
xchg
fninit
inc
xchg
lea
pop
out
bnd
shrl
inc
ret
cmpsl
sbb
pushl
and
adc
jmp
push
jmp
mov
dec
adc
sub
movsb
fcmovnu
jle
sbb
in
sub
loopne
mov
push
jle
mov
stc
xchg
add
adc
add
jne
imul
cltd
cs
mov
push
ljmp
pop
push
mov
pop
inc
loopne
cmpsl
lret
dec
movsb
cmpsl
adcb
cmp
and
lgs
pop
push
xchg
xor
bound
or
mov
push
sub
scas
jecxz
std
or
hlt
push
jle
cmp
jae
jnp
shlb
xor
bound
lret
and
adc
dec
outsb
and
aaa
sbb
and
out
call
jl
xchg
or
mov
push
xchg
test
leave
inc
cmpsl
cmp
jge
cwtl
popa
or
fstl
cli
add
rcrl
add
ret
sbb
push
lods
faddp
inc
pop
rcr
add
jae
mov
imul
and
std
dec
jbe
fdivrs
test
inc
xor
push
je
lea
adc
int3
aad
cltd
push
mov
std
fcoml
and
cld
shll
push
negb
inc
mov
sbb
pop
std
fildl
dec
jge
scas
jns
sub
jb
add
test
orb
cmp
mov
xlat
cltd
popf
loopne
xor
pop
and
add
mov
sub
lock
jns
lock
stos
out
push
sbb
ss
push
data16
inc
mov
jmp
pop
pop
dec
mov
int3
jno
mov
movsb
ss
inc
stos
inc
pop
mov
lea
jae
pusha
and
mov
repnz
xlat
dec
lea
adc
jo
jg
cmc
das
push
push
jge
popf
insb
xchg
jo
jle
mov
mov
push
dec
jmp
jmp
stos
cmp
pop
sbb
sub
orb
outsl
test
dec
sub
in
push
std
jbe
sbb
shlb
daa
into
jo
scas
lret
inc
xor
add
sahf
ret
push
test
sub
cwtl
jo
int
mov
call
out
add
mov
std
pop
add
incl
push
sar
inc
lds
push
cwtl
jne
ja
push
pop
jae
int
jbe
rcrb
addb
pop
divb
int
xchg
jo
pop
mov
jp
fldl
lahf
fnstcw
pusha
cwtl
jg
icebp
xchg
fwait
daa
fld
or
pop
cmp
mov
push
sarl
enter
ret
pop
ret
stos
xchg
gs
lock
inc
mov
sbb
adc
cmc
push
adc
addb
push
cmpsl
cmpsl
add
gs
orb
push
sti
push
iret
mov
mov
insb
pop
movsl
iret
hlt
in
or
mov
ds
cmp
pop
adc
xor
pop
movsb
xchg
pop
inc
bound
daa
mov
xor
xchg
dec
in
dec
movsb
in
and
xchg
add
repnz
dec
movb
sbb
mov
mov
sbb
mov
cmp
dec
lea
push
add
push
fmuls
insb
roll
outsl
movsb
aam
movsb
sti
iret
scas
push
mov
imul
loop
mov
repnz
xlat
lcall
or
lods
or
cmc
pop
push
fadds
mov
inc
add
adc
and
xchg
push
add
pop
or
icebp
sub
lret
loope
jno
outsl
push
inc
aaa
rcrb
jge
jns
int
adc
lods
in
in
pop
inc
inc
sbb
push
jo
push
lret
loope
mov
mov
imul
flds
test
loopne
adc
pop
fisubl
je
add
aad
adc
fwait
jecxz
xor
not
test
sub
lds
push
mov
sub
and
sarb
mov
sub
pop
imul
sub
test
roll
shr
push
out
dec
mov
jle
ret
lret
sahf
push
and
or
mov
je
cmp
out
mov
cmp
jae
lret
mov
xchg
xchg
jle
mov
mov
lret
pop
mov
sub
jae
leave
push
cmpsb
loope
push
jecxz
sbb
jmp
xchg
pop
push
data16
mov
fs
sub
icebp
in
and
cmp
mov
mov
pop
xchg
mov
sbb
imul
fsubr
adc
addl
test
sub
or
add
ja
sbb
movl
repnz
pop
std
mov
sbb
inc
jmp
inc
cmp
repnz
pop
insb
enter
dec
push
xlat
jl
jl
fwait
inc
rcrl
add
fucomp
imul
mov
adc
divb
int3
add
in
push
mov
test
repnz
xor
mov
mov
shl
sub
cmc
stos
cmp
jne
mov
orl
lea
nop
pop
or
int3
add
aas
add
enter
sub
dec
and
js
out
lahf
ret
pusha
add
xchg
pop
roll
push
mov
fidivs
sarb
cmp
xchg
ds
push
add
xor
fiaddl
das
sar
rorb
pop
loopne
inc
pop
in
addr16
adc
jp
ljmp
push
jp
sub
add
adc
movsb
fwait
add
out
xor
sar
jae
adc
and
push
push
fimull
xlat
out
pop
ljmp
lcall
or
outsl
inc
insl
cmc
push
enterw
inc
nop
push
dec
ss
mov
mov
dec
iret
clc
add
rorl
gs
add
adc
jbe
mov
arpl
imul
fldl
rcrb
out
mov
dec
rcrl
sub
in
sbb
loope
pusha
jb
pushf
imul
stos
fdivp
in
push
push
rcrl
lods
and
ds
pop
inc
mov
test
pop
notl
fadd
cmpsl
ja
rol
mov
cmpl
and
leave
arpl
push
adc
ljmp
cmpsl
outsb
sarb
or
cmp
daa
cltd
into
ljmp
nop
pop
loop
rorb
fistpll
std
insl
and
std
repnz
iret
iret
push
xchg
mov
sub
test
sbb
mov
movsb
leave
or
jne
daa
cltd
adc
adc
or
xor
cmpsb
jno
jmp
inc
pusha
je
push
fcoms
mov
and
jl
outsl
js
fs
enter
js
xchg
clc
sbb
lods
pop
into
cmp
sti
rorl
or
jb
mov
mov
jo
stos
jle
xor
cmp
cmp
xchg
fstpt
push
sub
cli
adc
lds
pusha
ficoml
inc
inc
popl
xchg
or
fcomps
aad
mov
inc
mov
cmpsb
cmpsb
test
mov
aas
repz
clc
cwtl
addb
xor
inc
xchg
fwait
dec
push
fistl
pop
clc
push
lahf
cmp
dec
rcll
cltd
jecxz
mov
sub
cli
and
aam
dec
or
xorl
dec
cmp
and
je
mov
pop
mov
cli
pop
data16
inc
lods
jbe
nop
jne
pop
cmpsb
push
mov
xlat
sbb
inc
scas
sbb
ret
mov
dec
sbb
cmp
ja
loop
leave
inc
mov
cmp
inc
adc
stc
test
cmpsb
xchg
dec
popa
jge
xchg
cmp
lahf
int
lds
test
js
xchg
jns
jg
jp
xor
inc
push
adc
push
mov
into
loop
dec
jmp
paddq
lea
fidivrs
out
sbb
lahf
scas
sarb
sbbb
and
pusha
pop
pop
lcall
cmp
dec
xor
xchg
inc
mov
add
mov
pop
dec
aam
loopne
loopne
into
stc
das
movsb
or
ret
into
outsb
mov
sbb
pop
sub
movsb
or
push
pop
test
test
add
orb
popf
es
je
mov
gs
mov
enter
adc
jecxz
stos
addr16
addl
lret
fidivs
mov
out
sub
lock
adc
scas
mov
loope
jae
loopne
clc
out
lret
jae
pop
pop
and
cmp
das
jo
mov
cmpsb
mov
jg
sahf
mov
mov
cmp
jl
fisubrl
and
lods
js
sar
add
mov
nop
xor
je
inc
mov
mov
mov
push
mull
or
and
stc
mov
or
cmpsb
repnz
inc
pop
adc
out
div
sub
cmp
and
adc
out
mov
xchg
loopne
dec
jp
mov
jno
cmp
add
out
fidivs
out
mov
aaa
ret
sti
cwtl
push
jg
mov
inc
inc
leave
lahf
insl
cmp
and
push
loopne
mov
jmp
loop
movb
loopne
imull
sub
adc
dec
leave
jg
aam
or
imul
inc
adc
data16
cwtl
in
xchg
int
push
ja
sbb
ficomps
cwtl
lds
das
sahf
fwait
lret
cli
xchg
mov
imul
sbbb
cmp
dec
pop
adc
cmp
jmp
aas
cwtl
cltd
jae
subb
xor
int
mov
aaa
cmp
xchg
cmpb
mov
sub
cwtl
add
lcall
jo
inc
lahf
rcrb
adc
xor
xchg
call
xchg
pop
push
aad
xchg
push
aas
std
ret
sub
aas
pop
subl
xchg
jl
aam
lret
sbb
cltd
out
adc
jge
jns
fcomip
adc
jno
jno
push
dec
shlb
inc
out
gs
xchg
hlt
xchg
lods
test
fwait
mov
xchg
xor
push
xor
fwait
push
adc
sub
enter
scas
lret
mov
pop
cmp
mov
push
jge
or
arpl
iret
outsl
lcall
mov
fnop
push
jg
dec
daa
negl
xor
xchg
sub
ficoml
sbb
ja
out
inc
push
repz
cmp
int3
shrb
repnz
inc
inc
inc
xor
mov
xchg
scas
inc
int3
fucomi
jns
pop
sub
mov
jmp
xchg
push
fbld
test
cmpsb
cwtl
cs
in
mov
sub
mov
inc
int
loop
cmpsb
lret
out
jno
push
scas
repz
hlt
shlb
xchg
cltd
aaa
daa
ror
cltd
pushf
loopne
or
sbb
imul
adc
mov
nop
xchg
lods
leave
mov
cmp
sbbb
inc
sub
add
adc
aas
and
sub
inc
pushf
xchg
testb
push
fs
xlat
and
dec
dec
shl
ret
pop
ficomps
inc
add
mov
push
push
or
mov
inc
fmul
lahf
pop
bound
sbb
cli
lret
pop
cld
gs
stos
imul
mov
mov
cmp
cltd
sub
jnp
notb
subl
cmp
fwait
das
push
popa
push
xor
neg
and
enter
pop
mov
int3
xor
inc
sub
push
and
leave
cmp
lds
filds
and
popa
jp
mov
fcomip
xchg
lret
mov
out
push
ljmp
fldcw
lahf
fs
jne
es
sbb
jg
in
pop
dec
dec
push
jmp
or
enter
mov
icebp
mov
pop
test
int
enter
dec
les
outsb
loope
aam
dec
adc
inc
pop
imul
or
cmpsl
xchg
add
dec
scas
push
movsb
xlat
ds
push
enter
mov
mov
xchg
mov
jne
mov
dec
mov
add
mov
xor
cmp
leave
sbb
cmp
mov
stos
scas
movsb
mov
and
adc
adc
adc
dec
sbb
sbb
xor
int
add
rorb
mov
iret
mov
adc
push
cld
mov
pop
sbb
mov
push
stos
or
std
sub
gs
outsb
inc
out
add
clc
dec
cmp
sub
xchg
lds
jl
sub
repnz
js
lret
sbb
jno
scas
lcall
mov
or
out
std
mov
push
movsl
ficompl
das
aad
cld
mov
xchg
insb
or
rclb
bound
jmp
shl
mov
inc
jmp
ljmp
inc
mov
ljmp
mov
rcll
aas
push
pushf
call
sbb
adc
xchg
fwait
push
xor
and
inc
fsubrl
stos
fnstenv
fidivrs
movsb
loope
in
mov
adc
jecxz
mov
fidivl
sbb
mov
jo
lea
repz
pop
mov
test
push
ss
xor
add
mov
mov
xchg
sahf
out
jb
inc
sub
testb
push
push
fldcw
push
mov
imul
test
shll
xchg
adc
mov
inc
add
and
jg
cmc
and
addr16
out
inc
cli
mov
or
hlt
dec
pop
mulb
cmp
fists
aas
imul
ja
mov
pushf
push
iret
fstps
sub
jmp
scas
lods
out
cmp
lods
adc
or
not
fstps
jns
cmp
push
sub
aas
adc
ljmp
sbb
lods
icebp
lods
dec
fstps
mov
pop
fucomi
sbb
jne
xchg
push
rep
sahf
dec
xchg
notl
fisubrs
repnz
adc
test
cmc
cmpsb
dec
dec
xor
push
and
mov
xchg
adc
sbb
push
inc
popa
sub
or
add
loope
inc
or
pop
mov
mov
int
jne
mov
pop
mov
mov
push
mov
lret
xchg
sub
push
scas
xchg
inc
mov
pop
cld
sbb
xor
aaa
stos
mov
out
inc
fdecstp
and
pushf
adc
leave
xor
mov
add
hlt
scas
jp
xchg
cltd
push
mov
ret
mov
aad
call
dec
fadd
addr16
sbb
seto
iret
and
out
pushf
jp
mov
sbb
in
mov
fsub
test
test
out
sub
loop
push
sbb
aad
mov
mov
xchg
dec
cmp
jle
mov
sbb
sub
repnz
into
je
dec
gs
adc
mov
lcall
inc
repz
cmp
mov
jmp
les
movsb
or
popf
mov
inc
js
orb
icebp
pop
popf
mov
adc
je
dec
ljmp
cmp
push
mov
dec
push
jns
adc
dec
push
in
add
andb
test
das
push
in
adc
jb
xchg
lds
pop
or
xor
mov
inc
repnz
mov
xorb
pop
jg
mov
mov
repnz
cld
insl
adc
or
jnp
ljmp
daa
lahf
add
sub
lret
stos
outsl
enter
stc
dec
add
mov
sub
jno
ljmp
add
fs
push
jl
mov
inc
aaa
xchg
aam
xor
js
lcall
rcrb
sbb
and
add
push
pop
mov
xchg
cmp
ret
pop
test
je
imul
daa
lods
orl
inc
fs
mov
jb
dec
jno
in
decl
or
push
je
fdivrs
inc
push
std
aaa
add
mov
pusha
mov
shlb
scas
jb
mov
pop
cmp
jp
adc
xlat
test
fdivr
fmul
inc
notl
pusha
pusha
jnp
pop
xor
aas
sub
sti
dec
roll
mul
in
and
xchg
inc
fcmovnb
lock
outsl
and
dec
or
sbb
les
popa
lcall
push
cmp
into
movsb
and
loopne
mov
jg
pop
aaa
sti
pop
inc
mov
adc
lods
jp
mov
mov
inc
dec
fwait
mov
aad
inc
test
inc
xchg
dec
adc
jnp
mov
xor
mov
mov
jmp
mov
pop
pop
add
fwait
adc
xchg
push
add
in
sub
in
mov
xchg
pop
jg
xor
xor
mov
jecxz
push
pop
mov
cld
mov
push
repnz
sbb
and
sbb
aam
cmp
xor
jb
and
mov
insl
test
sub
dec
dec
mov
jne
dec
mov
loop
xor
jp
mov
sti
stc
decb
pop
test
loopne
scas
pop
repz
pushf
jecxz
filds
fwait
cs
sbb
cmp
push
sbb
mov
out
inc
jne
enter
mov
ret
and
mov
and
repz
sub
pop
mov
push
add
xor
arpl
sbb
pop
test
mov
pop
loop
sub
xor
xor
xlat
pop
cmovp
and
aad
imul
test
cmpsl
xchg
jns
add
push
aas
lea
fisubrs
add
mov
repz
pop
lods
not
inc
xchg
and
repnz
mov
push
insl
icebp
sbb
ret
fmul
adcb
adc
std
test
push
xor
adc
push
and
mov
xchg
pop
inc
cmc
mov
mov
mov
sub
xor
sbb
xor
dec
mov
pop
call
xor
fdivrl
dec
pop
mov
loopne
rcr
dec
fsub
mov
dec
sbb
dec
out
leave
fdivrs
lret
and
subb
dec
test
in
mov
cs
pop
shlb
fcomps
sub
xor
or
wrmsr
div
and
lret
mov
in
sarb
cld
test
and
mov
xchg
jns
dec
adc
dec
mov
mov
aas
rol
mov
pop
scas
sbb
sbb
jo,pn
stc
mov
dec
add
mov
xchg
adc
jmp
add
ljmp
jbe
pop
lock
xchg
or
sahf
es
mov
in
cmp
adc
push
jnp
inc
push
mov
lahf
popf
or
sub
add
mov
testb
or
int
xlat
adc
je
aam
or
adc
xchg
icebp
push
add
in
shl
or
sub
lods
insl
mov
lahf
adc
pusha
cli
xorb
cmp
scas
xor
pop
lret
sub
rolb
dec
test
cld
movsb
jne
xor
mov
call
mov
iret
sub
sub
add
add
lods
inc
lods
aas
jg
inc
xchg
add
pop
xchg
mov
nop
stc
dec
rorl
cmp
test
mov
add
cmp
addr16
lds
inc
pop
lock
int3
je
dec
fbstp
jnp
mov
xchg
cwtl
dec
ljmp
sub
enter
js
dec
or
xchg
mov
aam
mov
icebp
cmp
xchg
xchg
std
pop
cmpl
mov
adcb
enter
mov
push
and
in
loope
frstor
mov
aad
sub
nop
xlat
lret
sub
loope
mov
inc
inc
sub
rclb
xchg
repz
ds
stc
arpl
ret
arpl
int3
pop
add
jno
ja
icebp
leave
pop
lods
aam
push
cmp
lahf
dec
cmp
popa
popf
mov
jmp
ret
cmp
in
movsl
cmc
loopne
imul
in
sub
lahf
lret
jmp
jnp
sbb
jmp
dec
test
cld
push
jp
loopne
inc
and
nop
leave
out
xchg
out
sahf
mov
inc
int
in
iret
and
push
jecxz
adc
push
hlt
hlt
and
cmpsl
mov
adc
dec
dec
adc
scas
jle
popf
cvttps2pi
push
movsb
jle
push
dec
sub
rcl
mov
sbb
fucomp
ficomps
mov
push
mov
jp
rclb
in
cmp
les
xchg
aaa
repz
pop
sub
adc
push
add
push
lcall
xor
xchg
sbb
scas
mov
cli
jae
adc
and
mov
mov
xchg
xchg
insl
rclb
sub
jb
iret
cmp
mov
pop
jp
les
xor
cmp
dec
sbb
inc
xchg
mov
xchg
mov
les
test
testb
dec
cld
cwtl
xchg
mov
pop
jle
shrb
jnp
mov
std
and
xor
mov
mov
in
adc
mov
mov
cltd
roll
push
icebp
push
inc
push
scas
std
pushf
and
xchg
push
fcmovne
or
stc
mov
xor
mov
xor
xor
cwtl
sub
jp
pop
mov
pushf
dec
int
jne
cltd
push
push
jbe
mov
data16
fcomps
adc
pop
mov
imul
adc
mov
mov
xor
inc
out
inc
sbb
insl
cmpsb
ljmp
repz
gs
repz
sbb
adc
lods
enter
sbb
out
test
or
cltd
mov
cmc
sub
sub
xor
push
movsl
int
inc
loopne
cmp
and
mov
incb
jg
mov
dec
je
popf
lcall
xor
jecxz
js
rolb
sub
dec
je
lods
les
push
out
dec
pop
mov
in
and
fistpll
cld
dec
mov
mov
mov
frstor
mov
cli
jae
icebp
and
ja
mov
das
addr16
mov
jge
dec
and
outsb
lcall
ret
and
xchg
mov
fisubl
test
mov
mov
sar
push
xchg
mov
sub
shll
clc
sub
xor
scas
push
xor
dec
mov
lret
adc
mov
jecxz
int3
inc
pop
pop
lcall
push
ja
stc
and
cltd
xchg
adc
pop
fwait
sbb
mov
sub
push
or
mov
jnp
mov
and
testb
mov
addb
push
dec
pusha
push
cwtl
mov
xor
cmp
into
stos
loope
xor
lds
repz
inc
xchg
push
xchg
into
out
lret
insb
mov
andl
lock
in
test
cmp
pop
lea
cltd
scas
popf
mov
mov
and
push
sbb
xor
test
incl
cli
push
bound
mov
cmpsl
rclb
cmp
faddp
ja
pop
mov
fimull
sub
sbb
out
test
xor
pop
xchg
fcmovb
out
ret
inc
xchg
sub
ds
in
imul
push
xor
loope
adc
lods
out
enter
push
movsb
enter
add
sub
dec
lock
adc
mov
mov
inc
dec
aam
and
leave
sub
ss
iret
add
mov
xchg
cmp
add
inc
sub
imulb
ds
cmp
dec
cmp
scas
jnp
jmp
hlt
xchg
movsl
lret
xchg
pop
in
sbb
xor
out
mov
jmp
jge
movsb
test
ds
je
mov
mov
pop
nop
pusha
je
push
sub
jne
stos
ret
and
leave
cld
scas
das
fsubl
mov
jae
fcoms
pushf
stos
js
dec
mov
stos
dec
std
mov
rol
insl
mov
mov
mov
stc
lods
scas
lods
dec
pusha
and
and
fcomps
or
cmpsb
add
arpl
xchg
jmp
and
inc
das
test
xor
mov
in
xchg
mov
bound
mov
movsb
dec
aaa
add
shlb
xchg
pop
push
ror
rclb
shlb
fldt
in
in
sub
imul
dec
mov
and
and
xchg
add
outsl
xchg
mull
lods
lret
addr16
pushf
lds
insb
adc
sahf
mov
lea
sbb
js
pop
cltd
fdiv
ret
adc
add
pop
fs
cmp
jle
scas
arpl
repz
or
cmp
add
cmp
shll
lea
rcll
adc
loop
iret
sub
inc
push
sahf
dec
mov
out
push
ljmp
xchg
pcmpgtw
outsl
das
roll
lahf
sbb
js
push
aad
dec
lret
jle
xor
call
in
pop
loop
fidivrs
lods
cld
cmp
movl
lret
xchg
leave
mov
lret
test
std
inc
xchg
dec
rcl
and
loopne
imul
xchg
sti
std
js
stos
jge
mov
movsb
jno
call
or
popf
xchg
insb
add
pop
mov
ds
lcall
and
ds
cmp
sti
dec
sbb
mov
cli
imul
xchg
leave
or
rolb
or
push
iret
mov
xor
mov
and
inc
pop
sti
dec
add
add
and
shrb
mov
ror
std
aaa
adc
imul
mov
xchg
pop
inc
cmp
inc
fcoms
xchg
jp
jno
jp
movsb
xor
mov
push
jnp
and
jne
sbb
inc
inc
pop
addb
mov
jecxz
mov
xlat
lods
sar
lahf
ss
test
out
les
or
addr16
push
cmp
in
test
adc
frstor
sub
pop
and
or
push
mov
shrb
ficoms
sub
popf
gs
sub
jmp
es
fildll
cmpsl
add
push
xor
push
mov
mov
rclb
or
pop
xchg
call
sub
sub
inc
xchg
add
nop
mov
xchg
adc
jns
adc
roll
inc
push
xor
xchg
adc
jmp
push
cmpsb
dec
lret
ja
ss
mov
push
xor
add
cs
cld
mov
out
fadd
inc
lds
and
inc
mov
push
mov
add
in
cmp
push
mov
cmp
rorl
xorb
popa
bound
stc
mov
jl
addr16
sti
testl
imul
in
popl
inc
jbe
mov
and
and
add
adc
jnp
mov
mov
int
sbb
fs
dec
fwait
subl
js
push
cltd
jle
cmpsl
or
inc
enter
call
adc
inc
in
movsb
out
les
jecxz
jns
and
push
repz
or
cmpsb
push
xchg
repnz
hlt
adc
in
jmp
push
xor
test
imulb
in
push
mov
popf
jle
lods
mov
pop
lret
int
or
sub
mov
pop
mov
cmc
fadds
mov
jb
in
dec
imul
sub
enter
dec
mov
rclb
xor
bound
sub
inc
mov
xor
or
push
test
pop
int
cmc
or
pop
mov
inc
ljmp
jns
mov
push
mov
pop
in
push
fs
push
jle
cmc
sub
xor
mov
icebp
add
mov
orb
inc
lods
orl
jne
mov
addr16
sbb
arpl
out
les
je
dec
dec
jo
addr16
pushf
aaa
test
inc
sbb
inc
add
rcl
nop
xor
mov
xchg
sbb
lock
add
and
jg
subb
xchg
pop
mov
xor
add
cs
out
aam
jns
mov
push
sbbl
xchg
rcll
sbb
mov
ds
jp
push
cwtl
dec
add
dec
insb
and
jb
fs
das
push
fs
lods
xor
inc
adc
mov
ret
mov
add
or
dec
adc
test
sbb
ret
aam
subb
mov
rclb
jbe
popa
adc
jb
pop
es
push
fs
xchg
xlat
jb
jae
push
pushf
dec
and
inc
movsl
inc
stos
in
int3
cs
mov
jmp
sub
mov
add
inc
xor
scas
push
sti
cvttps2pi
repnz
jg
cmp
cli
mov
in
repz
fdivr
popf
bound
js
or
ss
pop
es
stos
inc
hlt
cs
inc
fwait
out
add
fstp
xlat
lretw
decb
subl
addr16
add
pop
mov
pop
cmp
negl
test
xchg
xor
and
stos
mov
lahf
pop
divb
fistpl
stc
xor
mov
cmp
or
call
sbb
loope
cld
or
out
mov
jmp
daa
mov
mov
inc
mov
clc
roll
cld
sbb
aam
dec
cld
or
repnz
out
xor
insl
add
or
je
enter
dec
mov
and
jl
rorb
mov
out
cld
fnstcw
or
mov
add
or
roll
int3
dec
xchg
mov
fwait
ret
push
fiaddl
stos
test
shlb
cmp
fs
test
mov
adc
scas
repz
stc
xor
subl
movb
jo
adc
mov
sbb
test
daa
test
add
mov
cmp
inc
call
sarl
scas
dec
dec
sub
mov
jp
out
cltd
rorl
cli
das
dec
cmp
shr
adc
and
loope
sbb
loopne
stc
adc
scas
mov
fiadds
jle
fwait
push
pop
arpl
lds
mov
mov
or
cli
mov
cmp
inc
mov
sbb
hlt
adc
leave
add
leave
jbe
idiv
leave
leave
call
test
jne
cmpsb
lock
pop
xor
mov
mov
xchg
cmp
pop
icebp
push
andb
imul
inc
iret
fstps
jne
incb
sub
loop
pop
in
mov
mov
dec
pop
mov
push
in
jecxz
jmp
insl
pop
add
mov
adcb
inc
out
xor
cs
movsl
sbb
js
shl
add
mov
jg
aam
stos
gs
jge
xor
xchg
xor
cmp
mov
and
or
lods
rolb
mov
into
jmp
inc
aaa
aam
xor
movb
mov
imul
dec
fbld
test
jge
stos
fistl
xchg
stos
push
rcll
cmp
xchg
dec
inc
pop
mov
push
lahf
adc
dec
sbb
or
dec
ret
sub
shrl
mov
dec
movsl
mov
mov
icebp
cmp
sbb
cltd
lods
dec
int3
lock
outsb
pop
addr16
icebp
cmp
push
pushf
shl
shl
jne
lea
fcomp
jb
aas
or
sbb
and
add
stos
roll
sbb
addr16
jge
mov
jl
lahf
mov
aaa
lds
pop
mov
mov
push
jge
xor
call
fidivrl
mov
inc
add
sbbb
dec
xchg
int3
sbb
mov
imulb
in
and
cmp
aas
dec
or
test
sbb
out
in
cmp
xor
lcall
xchg
jnp
les
jg
cs
movsb
jp
js
inc
repnz
sub
mov
dec
fistps
jp
sub
mov
pop
dec
dec
test
jl
cs
cld
rorb
mov
xchg
je
outsl
loop
push
lcall
mov
inc
jbe
jno
mov
notb
push
outsl
mov
lahf
movsb
cld
fists
fwait
jo
pop
inc
lods
pop
adc
push
ljmp
insl
push
icebp
lahf
xchg
adc
out
mov
repz
mov
roll
mov
scas
and
daa
pop
mov
dec
mov
es
and
icebp
out
lods
cmc
lahf
or
mov
mov
sahf
mov
pop
xchg
push
jne
cltd
and
sarb
arpl
and
adc
test
mov
lret
xor
inc
sub
sarl
sahf
nop
push
ss
pop
lock
or
aas
repnz
xchg
cs
fs
iret
pop
rolb
insb
ja
lret
push
jecxz
cmp
aam
add
or
out
mov
jmp
sbb
test
aas
jne
stc
lret
push
mov
ja
jg
add
mov
xor
test
jp
pop
xorb
cmc
clc
mov
jmp
pushf
sbb
aam
jmp
mov
adc
sub
repz
es
mov
cltd
leave
jb
stc
push
dec
aad
cmp
ror
mov
mov
stc
loope
pop
mov
jns
cli
push
jg
pop
xor
or
in
jne
hlt
adcb
mov
shrb
rcrl
push
into
fs
and
aam
push
je
push
les
das
mov
fcmovnb
cs
adcb
ss
xlat
aad
xchg
aas
mov
inc
push
adc
or
push
leave
mov
dec
lds
xchg
push
dec
popa
frstor
cmp
pop
mov
adc
or
jle
movsb
movsb
jle
aas
lods
ljmp
jns
mov
mov
or
popa
out
cmp
mov
sbb
leave
sbb
jle
add
lock
mov
adc
lcall
and
lahf
stos
cmp
lds
iret
cmpsl
int3
jmp
das
dec
out
dec
test
xchg
cmpsb
decl
add
mov
pop
jne
or
cmc
rorb
int3
sbb
repnz
test
clc
das
adc
adc
shll
lcall
fisttpll
mov
push
jmp
lods
divl
sti
dec
mov
lret
pop
out
cmp
add
jmp
lea
stos
push
add
sbb
xchg
rep
jecxz
add
repnz
stc
dec
lcall
shld
add
pop
out
cmp
int3
push
pop
pop
loopne
mov
ja
xor
out
dec
sbb
aad
hlt
dec
sarl
addb
jle
repz
mov
mov
jecxz
pushf
in
repz
or
dec
cmp
dec
mov
mov
or
cmpsl
sbb
clc
aas
add
push
arpl
adc
test
push
idivl
jno
push
pop
cmpsb
loope
xchg
or
outsb
xchg
or
test
test
inc
test
mov
dec
sub
sbb
mov
mov
mov
je
aam
mov
sbb
jge
fists
movl
cmp
cmp
test
jle
cmpsb
sahf
fcoms
out
out
cmp
lahf
aam
jmp
repz
insb
ret
inc
and
out
cli
or
popa
insl
fidivrs
popa
addps
lea
xchg
push
pushf
dec
jmp
cmpsb
cmp
call
cmp
outsb
and
mov
cmp
cmp
enter
sub
andl
imul
out
fnsave
fnstcw
iret
push
aas
pop
add
cld
sti
ret
aad
jns
in
push
mov
mov
dec
dec
clc
and
mov
xlat
je
mov
lcall
sbb
aas
push
aaa
into
fcomp
mov
add
xchg
push
cld
pusha
xor
sub
cmpsb
xor
jl
pop
sbb
stos
test
mov
mov
or
ret
mov
or
lods
into
sahf
and
push
mov
jno
aas
stos
and
les
jecxz
sti
mov
out
or
bound
cs
cmp
jb
rolb
adc
jmp
push
jl
add
inc
nop
adc
adc
inc
repnz
sub
xchg
lds
popf
mov
in
loop
dec
out
inc
popf
inc
stos
mov
inc
inc
sbb
leave
ss
jno
cmp
pop
imulb
scas
sub
sbb
adcb
and
jo
fsin
pop
pop
sti
test
mov
sti
adc
cmpsl
addb
cwtl
push
pop
sub
fadd
jecxz
roll
pop
loop
adc
loop
roll
fistpll
out
dec
lds
dec
push
dec
bnd
jae
inc
pop
lds
sub
repnz
dec
fs
int3
loopne
fwait
xor
sub
xchg
outsl
mov
mov
pop
inc
jno
pusha
hlt
and
xchg
int3
aad
pushf
testb
adc
rorb
add
or
lcall
mov
loop
aaa
aaa
loope
jecxz
jbe
aaa
xor
inc
xor
rolb
sbb
out
data16
fstl
pop
enter
fimuls
add
cmp
push
and
loope
cltd
mov
jp
mov
rcr
or
iret
andl
xchg
lods
shrb
dec
cld
xchg
test
xchg
test
lods
movsb
inc
pop
jns
mov
daa
adc
dec
inc
in
jecxz
sub
aaa
mov
dec
das
aas
and
daa
sahf
bound
sbb
nop
pop
hlt
push
insl
mov
ss
pop
lods
sti
stos
xor
iret
jecxz
cld
dec
adc
jmp
imul
ds
icebp
shlb
insb
arpl
ret
lret
pop
or
fdivl
fs
pop
fdivp
daa
ficoms
jb
jmp
adc
sbb
dec
mov
or
mov
or
pop
mov
cli
jle
xlat
pop
test
outsl
add
bound
icebp
cmpb
ss
pop
jo
jp
xchg
and
enter
pop
inc
xchg
sub
aad
inc
mov
nop
jge
enter
subl
andl
cmp
sub
sub
sbb
cmpsl
cmp
mov
xchg
hlt
add
mov
test
pop
sub
mov
js
adc
std
out
push
lret
aad
and
fsubr
cmpsl
cwtl
sahf
mov
push
popa
push
int3
in
and
aaa
sub
xlat
mov
and
lock
test
adc
pop
mov
insb
cmp
icebp
stos
inc
fdivl
cmp
test
mov
hlt
lret
je
decb
fidivrs
adc
pushf
mov
fisubl
xchg
ja
out
adc
pushf
adc
dec
pop
mov
inc
xor
test
scas
imul
jno
pop
xor
out
frstor
or
cmpb
pop
mov
arpl
mov
sub
lods
sub
test
fstpl
fdivr
in
dec
cmp
fisubl
mov
iret
jb
sbb
mov
lcall
fistps
sbb
out
adc
decl
or
out
ret
movsb
mov
add
adc
loop
sub
xchg
cmpsb
sbbb
add
pop
out
inc
scas
xchg
mov
xchg
decb
xchg
aad
xor
sbb
in
out
dec
outsb
inc
push
inc
xor
pop
dec
gs
xchg
cli
enter
cmp
faddp
or
ja
xor
adc
jle
pushf
dec
shrl
fnstenv
mov
pop
out
jecxz
cmp
mov
jl
sbb
aam
mov
fwait
xchg
xchg
lret
pushf
xor
push
out
int
jne
push
xchg
mov
mov
repz
cmc
inc
dec
or
js
jo
mov
insb
xchg
jmp
dec
and
fisttps
mov
pop
jbe
mov
pop
push
lds
decb
xchg
pause
cmp
pop
dec
xchg
mov
aad
arpl
push
sub
xchg
inc
cwtl
aad
sbbl
dec
enter
adc
dec
mov
add
mov
mov
shlb
lret
jl
or
or
mov
push
inc
pop
aam
out
ss
inc
inc
jns,pn
push
sub
inc
xlat
test
data16
cmc
or
cmp
mov
out
cmpsb
mov
cmp
ljmp
fcoms
mov
mov
push
jmp
inc
enter
in
or
mov
mov
jae
loop
addr16
loopne
ljmp
outsb
cmp
fwait
xchg
push
inc
add
aas
sbb
pop
or
xchg
xchg
pop
mov
add
imul
adc
fsts
and
movsl
nop
icebp
inc
xchg
jecxz
add
sub
in
mov
cmp
mov
pop
ret
hlt
lret
sub
pop
adc
aas
pop
mov
push
scas
in
adc
int3
aad
lea
js
bound
xor
test
lret
repnz
pop
lret
lret
ja
lret
mov
mov
fmull
sub
pop
rcrl
dec
pop
lahf
sub
mov
aad
sub
fcom
lods
nop
xchg
lea
sub
js
into
lret
xchg
iret
test
subl
dec
mov
xor
jb
outsb
mov
xor
stc
out
mov
sahf
xchg
fcoml
pop
xor
jecxz
sbb
insl
in
out
lods
lret
jmp
std
jae
shrl
xchg
jnp
cmp
jo
push
mov
js
xchg
divb
insl
xor
add
cmpsb
call
cli
leave
inc
mov
popf
pushl
or
adc
xchg
inc
or
xchg
mov
jb
xor
mov
jno
mov
fwait
mov
cmc
enter
cmc
lcall
ds
push
cld
loopne
mov
shl
mov
and
int
or
in
cmc
add
jg
test
or
mov
push
adc
mov
lods
icebp
mov
imul
mov
mov
cmp
popa
ja
call
jecxz
leave
xor
jle
xor
aad
divb
test
push
push
inc
and
add
mov
in
sbb
test
jnp
mov
jnp
aad
faddl
mov
pop
scas
push
xor
cmc
cmp
jbe
filds
inc
jno
lcall
mov
loope
aas
dec
push
enter
fists
std
xchg
pop
xchg
pop
sbb
dec
ret
push
insl
or
stos
insb
pop
jnp
loopne
or
inc
mov
dec
sub
cmovo
cwtl
cmp
push
push
lds
lods
out
add
adc
fimull
and
push
mov
lea
mov
lods
subb
or
pop
dec
call
gs
cli
adc
jg
push
out
dec
lds
shr
pushf
into
lea
jge
test
dec
out
bound
repnz
xchg
scas
sbb
pop
sbbb
lret
sub
sbb
ficoml
adc
int
or
enter
rcrb
sbb
adc
dec
lahf
test
clc
decl
mov
and
jle
add
jno
sbb
add
scas
lahf
push
or
push
mov
iret
add
lahf
repz
push
lahf
out
test
sbb
das
or
addl
sbb
inc
sub
pusha
testb
mov
outsb
cmp
stos
or
jge
jecxz
xlat
inc
mov
cmc
sub
jb
negl
push
cmp
pop
push
or
pop
addr16
insl
idivl
adc
mov
or
popa
lods
xchg
inc
ja
out
mov
inc
jecxz
fcomps
sub
lock
jns
xlat
dec
dec
movsl
mov
sbb
fimull
outsl
dec
rorl
fcom
dec
push
cmp
jno
mov
push
sub
xchg
ss
dec
int3
stos
bnd
push
lcall
inc
jmp
push
push
inc
mov
movsb
call
dec
cltd
mov
popf
push
adc
fsubrs
sub
or
fs
negb
mov
andl
inc
ret
push
jno
loop
cmc
mov
or
xchg
fistps
lods
daa
jne
sub
arpl
je
push
xor
imul
fisubs
pop
into
cld
xchg
push
fstps
xor
jns
mov
paddb
sub
xor
int
add
sub
push
xor
inc
mov
jns
xchg
jl
insb
imul
leave
mov
mov
pop
iret
jno
repnz
push
aad
jecxz
push
cmc
cs
bound
inc
mov
aas
cmp
add
lcall
mov
in
icebp
jb
dec
nop
jno
out
adc
cmc
out
mov
jl
loope
std
sub
fisttpl
out
ljmp
les
sti
sbb
jmp
mov
lahf
cmp
movsl
int
xchg
mov
pop
aaa
jnp
jbe
xlat
and
mov
sub
int3
fimull
icebp
dec
popf
enter
adc
fcomi
sub
jg
sub
sub
jno
mov
test
faddl
and
ret
pop
div
imul
sahf
mov
rorb
mov
mulb
outsl
pop
fiaddl
inc
inc
data16
push
add
jge
sub
stc
cld
cwtl
loope
int
test
test
cmpsb
int3
sti
sub
repnz
xchg
pushf
popa
roll
xlat
fdivrl
dec
adc
push
js
leave
lret
mov
ret
cmp
add
adc
test
push
pop
fwait
inc
push
scas
movb
movsl
cmpsl
mov
clc
popf
pop
fldt
out
cmpsl
or
adc
mov
push
cmpsb
lock
clc
lret
mov
cmp
sbb
jl
subl
outsl
outsl
cmp
or
stos
data16
cmc
xchg
fisubs
mov
or
fadd
sub
sbb
mov
inc
loop
incb
push
lock
pop
ret
rcr
cwtl
inc
icebp
sub
jg
dec
cltd
test
add
out
xchg
sbb
sub
fstl
fisubs
dec
loop
push
fwait
imul
mov
xorb
inc
daa
sub
es
and
mov
nop
insb
cmp
sub
xchg
adc
cmp
nop
or
icebp
decb
add
neg
xor
fcoms
pop
mov
ss
leave
xchg
fistl
cmpsl
sbb
out
arpl
dec
inc
push
push
mov
cmp
xor
divl
mov
push
cltd
lock
loopne
les
sbb
ret
inc
rorl
imul
movl
sti
in
xchg
aad
sub
sub
stc
dec
push
les
xchg
aam
dec
mov
cltd
adc
inc
or
lahf
pop
out
or
adc
lods
lret
pop
dec
ret
insb
in
jle
inc
jp
xchg
fwait
inc
pop
les
mov
sbb
nop
or
push
loope
add
or
test
fadds
bound
pushf
xchg
mov
push
movsl
cmp
insl
in
test
or
jg
inc
int3
popf
xor
mov
adc
jne
pop
add
ljmp
xlat
in
inc
adc
jns
mov
and
fstps
in
sahf
pop
mov
xor
add
lret
mov
hlt
or
icebp
cmp
fisttpl
lret
pop
je
jecxz
fisubrl
pop
lods
sarl
xchg
dec
scas
add
sub
cmp
rcrb
cmp
test
sbb
fs
sbb
mov
loop
imull
mov
mov
jns
sub
fcoml
cli
mov
cmp
ljmp
mov
push
sbb
push
or
sub
mov
insb
insl
bswap
jbe
pop
int
ret
sti
insb
cmp
dec
dec
enter
sbb
leave
jbe
lret
mov
mov
cmpsl
fadds
add
imul
pop
outsl
orb
sub
pop
aas
inc
shlb
jne
call
cmp
imul
xor
pushf
jne
roll
js
mov
fs
xor
pop
jl
out
cmp
cmp
ds
dec
xchg
mov
or
xchg
cld
inc
sbb
mov
aaa
xchg
enter
in
and
mov
mov
pop
enter
test
je
mov
push
add
cmp
add
pop
or
repnz
imul
rolb
lret
rcll
leave
push
pop
xchg
in
sub
xchg
lds
aad
into
subl
negl
mov
cwtl
in
adc
pop
sarl
xchg
adc
fnstenv
lock
jno
mov
xchg
or
add
lret
sbb
mov
pop
xor
add
cli
inc
add
add
add
push
arpl
vmovdqa
lcall
cmp
ljmp
jmp
or
int3
add
jmp
inc
sub
sti
cmp
sbbl
insb
sbb
enter
cs
shll
call
add
mov
jno
inc
xor
xchg
insb
sub
test
je
clc
cmp
jo
clc
mov
decl
test
mov
stos
cmp
sti
test
popa
sub
dec
adc
bound
ret
sub
or
inc
ds
ja
pop
xchg
jle
pop
push
add
xchg
mov
mov
jbe
jecxz
xor
movl
mov
orb
inc
push
hlt
aaa
into
dec
pop
mov
es
xchg
xor
shlb
mov
lcall
dec
xor
daa
push
pushf
repz
inc
mov
add
cmp
clc
jp
push
sbb
nop
cmp
sub
imul
mov
dec
add
je
dec
test
jo
mov
and
cmp
sbb
cmc
lret
loope
sub
subl
imul
push
mov
mov
sti
push
and
add
xorb
jns
mov
mov
sbb
in
mov
push
add
xchg
mov
push
daa
lock
sub
lods
lahf
outsl
lret
cmp
inc
out
into
loope
lret
sub
adc
hlt
call
inc
dec
cmp
clc
pop
xchg
dec
push
dec
enter
in
push
sub
sahf
imul
or
jecxz
shll
test
aam
push
pop
adc
out
sahf
flds
cmp
call
mov
cmpl
insb
or
xor
sbb
adc
rcll
scas
adc
mov
lods
mov
fnstsw
mov
and
inc
and
jmp
mov
adc
test
aam
andl
and
mov
push
imul
pushf
pop
stc
pop
mov
cmp
xchg
cmpsl
fld
mov
shl
and
pop
or
add
push
dec
cmp
or
cmc
ficompl
outsl
subl
popf
sarl
sub
inc
iret
add
jmp
es
cltd
dec
cmp
push
cmpsl
mov
js
mov
shl
sbb
cmp
inc
fwait
push
mov
inc
scas
dec
ja
and
enter
imul
fists
stos
pop
push
sahf
mov
cli
xchg
outsb
pop
je
scas
fildll
mov
popf
ds
out
cmp
fyl2xp1
fstpl
test
mov
mov
stos
aad
cmpsl
xchg
shll
sbb
arpl
cmp
xor
jecxz
dec
outsb
push
cs
ss
adc
daa
lds
sar
sarb
xchg
aas
xor
fnstsw
dec
pushf
out
jl,pn
rcrl
insl
cmpsl
aaa
and
in
push
imul
idiv
lds
pop
repnz
mov
mov
cmpsl
and
pop
stos
aaa
nop
jb
rcl
pushf
gs
xor
subl
cmp
sbb
sub
outsl
loopne
shr
call
add
stos
aaa
push
aas
inc
in
cmp
sbb
das
sahf
shlb
xor
rol
cmp
fucomip
or
int
test
xchg
aaa
imul
pop
adc
mov
stos
lods
xor
aam
xor
fwait
cmp
push
out
xlat
ret
add
lods
int3
dec
pop
mov
inc
inc
cmp
mov
test
xchg
pop
jae
scas
jne
push
call
or
sti
movsb
in
sbb
loop
dec
repnz
adc
and
cs
jo
xor
mov
ja
jl
pop
nop
jb
and
sbb
stos
mov
push
xchg
jg
dec
lret
push
mov
mov
push
sarb
daa
cmc
sub
push
pusha
subl
mov
sti
out
lea
enter
add
inc
xlat
jg
cmp
pop
push
in
imul
mov
inc
sub
enter
and
sti
imul
js
add
outsl
add
mov
jge
shrb
hlt
out
cmp
inc
add
sarl
and
mov
rcr
fbstp
pop
xchg
inc
inc
in
out
sbb
cld
or
pop
cs
test
insl
out
mov
inc
jbe
data16
jl
fwait
xor
mov
xor
dec
sub
mov
das
push
sub
dec
andl
fst
ret
loopne
pop
dec
sbb
mov
sub
jl
mov
cmpsl
test
jno
jne
and
scas
movsl
pop
push
lcall
push
push
xchg
push
aas
mov
push
and
repnz
leave
sbb
out
xorb
jmp
dec
loop
aas
add
xchg
push
pop
mov
push
add
push
xor
mov
popl
or
movsl
es
repz
decl
xchg
fisubl
inc
iret
outsl
or
mov
test
fwait
cmpsl
or
scas
inc
test
loope
jne
or
movsl
push
cmpsl
sahf
pop
enter
push
test
shll
push
dec
addr16
xor
bound
or
jl
jo
xor
jo
mov
popa
mov
xchg
xchg
jp
pop
insb
daa
jnp
movb
lahf
dec
aas
mov
inc
or
repz
hlt
out
lods
repz
daa
ds
pop
pop
cmp
fildll
loope
sbb
jo
dec
mov
test
mov
and
loope
inc
aam
mov
mov
flds
cmp
inc
dec
adc
push
into
lds
mov
out
xchg
sbb
out
sbb
adc
jnp
jp
pop
dec
mov
push
xchg
das
cwtl
jnp
sbb
in
inc
addr16
and
loope
daa
adc
lods
leave
push
push
xchg
mov
dec
jmp
mov
dec
popf
pushf
test
mov
hlt
push
repnz
fadd
adc
adc
sti
xlat
test
jg
stc
out
inc
leave
adc
adc
mov
arpl
mov
in
es
mov
mov
xor
add
jo
jae
mov
shrb
mov
es
push
mov
sbb
mov
dec
aaa
adc
jmp
movsl
fsubs
xchg
ja
insl
insb
push
nop
dec
out
sub
xor
mov
enter
mov
loopne
outsl
cmpb
sub
out
dec
insl
xor
aam
shufps
push
mov
xorl
and
jbe
addb
int3
jl
pop
in
je
pop
jle
nop
lods
mov
dec
or
jg
and
adc
bound
movntq
test
imul
les
loop
in
mov
dec
ss
aad
icebp
ds
push
add
lahf
cmp
das
stos
repz
ret
stos
pop
xchg
nop
shlb
pushf
xchg
sub
mov
call
fidivl
sub
sub
sub
mov
pop
out
sub
xchg
mov
xor
leave
dec
daa
push
nop
lret
in
enter
bnd
lret
test
arpl
popf
out
mov
imul
testb
mov
enter
cld
movsb
adcl
test
mov
add
and
pop
je
fwait
stos
push
push
push
adc
insb
pop
stos
std
cmp
sti
div
testl
cli
aad
ds
cs
push
cmpsl
test
mov
xlat
les
ret
ret
inc
test
push
inc
xchg
adc
cltd
fs
mov
ss
insl
and
icebp
xchg
iret
int
cmpsl
jnp
dec
movsb
aas
inc
popa
inc
mov
es
jg
mov
aam
push
hlt
fcompp
adc
jns
pop
movsb
stos
inc
test
mov
pop
int
hlt
sub
out
jle
mov
sub
fidivrl
lret
mov
and
scas
ret
out
je
cwtl
mov
lret
and
inc
les
xlat
pop
pop
negb
insl
ret
jl
rcll
cmp
inc
ret
rcll
lods
push
call
stos
and
test
jmp
cld
test
int3
ret
aad
fimuls
aas
inc
push
xchg
aam
adc
stos
enter
test
movsb
idivb
negb
adc
mov
pop
xchg
push
mov
cmpsb
and
jno
loop
add
and
inc
pop
sbbl
in
rorb
dec
mov
mov
ss
mov
push
xor
dec
enter
leave
cld
lcall
jmp
in
mov
and
dec
mov
lcall
loope
mov
arpl
cmp
outsl
xchg
stos
push
lcall
push
mov
cwtl
add
xchg
xor
mov
rep
fdivr
out
test
push
sub
xor
repnz
shlb
movsl
and
in
lret
or
pop
mov
xor
push
fcomp
xor
mov
repz
faddl
shll
push
lods
dec
pop
xor
in
std
jle
cltd
or
in
lods
sub
inc
test
repnz
xor
cmp
or
pop
fneni(8087
lods
xor
adc
ds
call
pop
xchg
aas
xchg
in
push
shll
jge
pop
clc
in
adc
stc
jg
shlb
fistl
fdivrs
ret
repnz
out
dec
jno
stos
mov
xchg
outsl
xchg
out
lods
lods
loop
mov
cmp
inc
in
xchg
subl
out
sbbb
stos
or
push
xchg
rolb
adc
sbb
jnp
je
loop
xor
jno
sub
sbb
subl
adc
mov
inc
mov
cmp
cwtl
push
scas
scas
fstpl
sub
test
inc
in
jg
jmp
imul
push
jmp
mov
aam
sub
inc
push
inc
js
add
sbb
lcall
jae
sbb
popf
fidivs
add
inc
orl
jge
out
cmp
or
dec
mov
lret
xchg
xchg
jg
inc
cmp
rcrl
and
pop
leave
nop
fcompl
jp
mov
push
cs
clc
add
leave
push
sbb
iret
xchg
dec
jno
icebp
ja
fsubs
xlat
dec
and
jo
jns
aas
add
pop
rorb
hlt
fimull
jecxz
jl
pop
loop
inc
mov
in
bound
jl
sbb
stc
sub
and
inc
xor
xchg
cld
mov
test
scas
gs
sub
popf
lock
push
imul
pop
lahf
jns
xor
sbb
aaa
xchg
mov
or
ret
repz
mov
pop
dec
bound
in
mov
test
or
fisubrs
and
adc
scas
sub
add
cmc
jmp
call
mov
out
test
sbb
fisttpl
push
xchg
ret
xorb
mov
ljmp
and
add
pop
mov
inc
mov
lods
ret
adc
shll
mov
das
xchg
mov
inc
and
sub
add
sbbl
dec
iret
push
xor
jmp
pop
mov
std
adc
or
rorb
xchg
subb
push
pop
insb
dec
adc
pop
lods
push
mov
xchg
dec
xchg
mov
out
sub
push
jae
cwtl
fistpll
fucom
mov
xor
push
fwait
ljmp
jge
mov
mov
jle
cwtl
stc
fisubrs
push
push
dec
enter
push
mov
aad
mov
mov
lcall
loop
hlt
jne
imul
int
aad
leave
cli
pop
mov
dec
test
lcall
int
into
std
aas
mov
sahf
push
xchg
cmp
test
test
div
jge
push
xorl
mov
rclb
dec
lods
push
inc
mov
enter
shlb
or
jmp
push
and
pop
fdivr
dec
les
pop
icebp
test
subb
push
jmp
shlb
frstor
data16
insb
lock
test
pop
or
insl
repnz
push
jg
cmp
sbb
pop
sbb
mov
das
jg
mov
add
mov
push
stos
repz
icebp
ja
imul
iret
mov
dec
imul
jl
mov
pushf
xchg
push
call
ljmp
jnp
push
xchg
loope
lahf
movsb
push
inc
lds
pop
fstpl
cmp
jg
mov
pop
mov
jle
arpl
push
movsb
dec
sub
popf
loop
or
adc
xchg
popa
pop
loop
out
mov
nop
jl
sub
out
ja
jl
mov
and
mov
nop
int
aad
mov
inc
addr16
cmp
rol
sbbb
outsl
cwtl
aam
mov
cmc
xor
sub
mov
rcll
repnz
je
pop
negl
xchg
inc
add
xchg
mov
cmp
imull
lods
outsb
imul
xor
xor
pop
or
bound
xchg
add
add
stos
cmp
pop
xchg
test
inc
cmp
js
inc
pop
add
add
ds
fidivrl
out
adc
inc
sbb
out
xor
jg
lea
in
push
mov
and
jmp
cs
lcall
test
subb
mov
push
add
xchg
lock
dec
jne
ljmp
xor
push
lcall
pop
mov
out
sets
cmp
loopne
pop
out
or
pop
movsl
iret
stc
jp
xchg
popa
mov
add
mov
lea
gs
mov
push
call
dec
mov
lcall
or
and
test
dec
loope
lret
push
loop
inc
fimull
int
negb
push
clc
xor
int
mov
sub
shlb
inc
arpl
loope
and
fisttpll
test
nop
mov
cs
in
add
aaa
das
sub
jbe,pt
jnp
xchg
sub
cltd
ret
addr16
stos
scas
xchg
push
cmp
divb
jae
data16
insl
scas
xchg
pop
add
test
imul
in
jg
mov
dec
jl
repnz
mov
mov
leave
jecxz
andb
nop
out
jp
dec
cmp
scas
test
scas
jle
pop
push
add
cmp
loope
cmp
xor
scas
push
or
es
sbb
das
addr16
inc
push
inc
mov
sub
pop
mov
lcall
add
cmp
mov
lods
push
sbb
sub
mov
jp
jnp
cmp
imul
lret
mov
gs
pop
adc
imul
out
pop
movsb
popa
or
dec
int3
mov
in
dec
lret
in
test
jns
stos
or
stos
popl
jle
inc
cmp
imul
insb
push
xor
popf
int3
sub
testb
xor
inc
test
inc
xchg
icebp
or
cmp
mov
mov
imul
add
inc
xchg
cmp
jl
xchg
mov
xor
push
andb
sub
test
stos
scas
xchg
xchg
int
test
or
or
aad
inc
sub
sbb
xor
adc
test
test
jae
in
adc
xchg
sub
sbb
cltd
aas
cmpsl
lock
outsb
fstpl
mov
sahf
nop
imul
je
mov
out
sub
or
cwtl
jp
inc
mov
pop
inc
cli
dec
inc
push
test
add
dec
loopne
mov
jmp
mov
enter
out
mov
jle
cwtl
inc
js
push
sahf
aaa
fnsave
mov
mov
add
add
pop
push
add
jne
pop
sbb
test
inc
mov
test
push
lret
rep
or
mov
jp
lock
jp
mov
adcl
xor
inc
mov
call
outsb
sub
sti
inc
fwait
cmp
lahf
arpl
aaa
add
int
aaa
cltd
add
mov
andb
insl
jmp
cmp
sub
mov
push
xorb
or
xor
mov
pushf
mov
cmp
jo
dec
jnp
mov
jae
popf
mov
pusha
and
pushf
stc
insb
stc
pop
cmpsb
popf
lock
cmp
popf
fnstcw
rorb
es
lods
dec
pusha
mov
jmp
test
xchg
repz
pop
jp
mov
mov
or
add
divb
and
cmpsl
arpl
outsl
sub
xor
mov
mov
leave
jge
and
push
sbb
pop
vpaddq
mov
sbb
mov
mov
insb
xor
push
ret
mov
pop
ljmp
or
daa
xor
loop
or
jno
pushf
jl
js
push
ljmp
imul
inc
push
adc
and
outsl
fistl
push
fs
mov
cmpsb
push
jns
mov
mov
sbb
mov
dec
cmpl
mov
jecxz
xor
push
pop
mov
cltd
int3
scas
rcrb
adc
xchg
jae
ror
fiadds
add
xchg
xchg
jne
rorb
adc
shl
cmpsb
mov
das
add
mov
jg
ds
sahf
test
ret
pusha
cmp
push
std
jp
daa
icebp
outsl
lcall
mov
inc
push
xor
lods
jge
rcrl
ljmp
inc
aad
scas
das
dec
das
cmpsb
mov
fisttpll
mov
in
jecxz
dec
test
int3
fldenv
pushfw
mov
push
push
aam
push
ret
pop
out
xor
loop
xlat
inc
loopne
jmp
pop
cwtl
xchg
jl
idiv
and
adc
shrb
mov
ds
dec
movsb
insl
aad
ds
mov
lahf
pop
imul
shll
adc
stos
xchg
bound
clc
push
subb
aaa
jecxz
sub
movsb
sbb
popa
inc
aaa
testb
push
mov
ja
adcl
adc
iret
pop
push
mov
xor
mov
in
cld
in
pop
inc
pop
xorb
das
ret
pusha
mov
inc
jge
jae
pop
inc
sbb
jmp
es
or
bound
movb
mov
or
push
mov
in
jb
or
mov
add
shll
pop
and
add
nop
icebp
mov
jne
leave
xchg
ret
sub
xchg
xlat
jge
and
push
jno
xor
aas
mov
inc
fcmovnu
pushf
leave
jae
inc
xchg
xchg
mov
mov
outsb
loopne
add
cmp
mov
dec
sbb
addr16
testl
movsl
mov
les
adc
mov
ret
clc
jecxz
mov
or
mov
push
xor
fisttpll
push
shlb
xor
loopne
mov
imul
mov
lods
mov
popa
sub
pop
movsl
push
fistl
inc
inc
in
int
cmpsb
ja
addr16
fstpt
aas
push
xlat
and
push
packuswb
inc
or
pusha
aas
sbb
jge
in
mov
fadds
ljmp
xchg
or
and
cmp
sub
jnp
and
popl
push
jae
add
repnz
popa
cltd
inc
jns
cmpb
pusha
mov
dec
inc
push
push
push
mov
int
mov
pop
jb
fucomi
mov
outsl
pushf
pop
mov
dec
clc
divb
pusha
fdivl
dec
testb
pushf
adc
icebp
mov
jmp
test
ljmp
aad
xchg
adc
int3
mov
rep
push
icebp
hlt
jmp
push
push
xchg
scas
mov
data16
fsubrs
rcll
push
fimull
mov
pop
out
and
bound
push
sbb
adc
notb
cmpsl
mov
movsb
xchg
pop
or
daa
push
gs
mov
adc
sahf
loop
pop
cmpsb
sub
jno
jp
and
repz
fistpll
ss
adc
mov
and
pushf
inc
adc
adc
das
and
pushf
imul
push
repnz
sbb
push
repz
sub
and
adc
add
mov
add
lea
dec
mov
notb
and
xchg
or
xchg
mov
cmc
jle
pusha
outsl
imul
xlat
inc
int3
jle,pn
lcall
mov
fiadds
pop
dec
xchg
add
mov
push
cmp
cmp
aam
xor
decb
mov
mov
push
jl
std
and
push
mov
mov
add
gs
icebp
rcll
cmp
push
call
jb
xor
pusha
sub
clc
int3
jg
addb
or
leave
xchg
ret
popa
and
fs
xor
jl
adcb
sti
adc
mov
jg
push
sbb
add
movsl
lcall
mov
and
cmc
ljmp
and
push
filds
inc
adc
cmp
loopne
int
fxch
xor
out
cmp
imul
xor
gs
hlt
add
inc
pop
add
dec
in
xorl
cmp
fldl
pop
mov
add
sbb
leave
mov
dec
insb
inc
xchg
pushf
fistps
loopne
test
dec
mov
movsl
push
negl
cmp
jge
cmpsb
faddl
xlat
outsb
adc
clc
sti
or
mov
dec
enter
xor
xor
push
aad
ja
hlt
repz
inc
pop
insb
mov
sti
adc
add
dec
aad
and
sub
push
ljmp
lods
jne
push
xor
inc
cli
aas
lcall
cmpsl
xor
mov
fsubrs
sbb
sub
iret
push
mov
dec
jns
mov
xchg
jg
roll
inc
mov
jo
enter
addr16
dec
cmp
stc
push
int
or
xor
pusha
mov
int
fcompl
mov
lea
mov
sub
stos
or
imul
jb
mov
jecxz
sub
call
iret
in
pop
sub
out
rcrl
aam
popl
pop
hlt
xchg
loopnew
or
sbb
test
jnp
lahf
notb
popf
ljmp
dec
mov
scas
insb
out
imul
call
dec
lret
sarb
mov
repnz
cmc
scas
push
lods
pop
pop
sbb
and
stos
cmc
mov
loopne
negl
push
and
pop
popw
push
mov
pop
push
mov
dec
movsb
mov
inc
mov
imull
cltd
out
nop
or
cmpsl
stos
jo
mov
ret
pusha
xor
sub
aas
mov
fldenv
xor
call
cmp
jmp
pop
imul
pop
repz
pop
lret
lds
push
pop
or
adc
or
cmp
ds
sbb
sbb
int3
inc
repz
mov
into
add
ret
or
pop
xor
dec
cmpb
aas
xchg
fsubr
pop
push
push
lahf
add
sbb
push
inc
adc
mov
addb
push
mov
and
inc
xchg
adc
ret
popa
in
sub
dec
ret
xlat
add
xor
sarb
jb
push
clc
or
aad
fildl
scas
fwait
lea
out
push
xor
jl
and
adc
adc
aam
xchg
lds
loope
sub
gs
cmp
xlat
or
lods
mov
mov
jne
pop
pop
leave
nop
gs
mov
lods
and
pop
and
push
rcr
std
mov
out
jl
cmp
inc
lret
cli
xor
xchg
mov
jns
out
inc
imul
in
and
sub
xchg
fcmovnu
movb
adc
xor
xlat
dec
mov
movsb
dec
popl
mov
mov
out
shlb
mov
shll
or
lods
pusha
xchg
push
test
cmp
jns
cli
xor
push
nop
imul
dec
push
je
xor
inc
jb
nop
inc
mov
inc
cmp
pushf
lret
das
and
and
sbb
xor
mov
sbb
outsl
sbb
sbb
nop
xchg
cmp
pop
or
jl
sub
cmpsl
push
pop
jns
leave
and
outsl
or
pop
pop
movsl
or
mov
repz
dec
movl
and
rcrb
sbb
add
or
stos
sub
iret
xchg
push
pop
out
push
mov
nop
pop
popa
jne
jne
and
adc
es
xchg
mov
cmpsb
jmp
pop
xchg
roll
cmp
ror
iret
push
inc
and
stos
cmp
sub
ljmp
jo
incb
push
subb
push
cltd
aam
xchg
subl
xchg
push
add
cmpsl
cmp
movsl
in
fisubl
cltd
jne
jecxz
movsb
arpl
dec
and
addl
jle,pn
lods
lahf
dec
add
push
stos
lods
jae
pop
or
aas
and
es
popf
int
inc
pop
xchg
push
push
repz
inc
inc
jecxz
xlat
es
push
inc
outsl
add
pop
fnstenv
fcmovu
xchg
aas
jmp
inc
jg
stc
fstps
popa
mov
sbb
sarl
fsub
adc
inc
pop
add
sub
push
jb
ret
or
pop
push
fs
fcomps
mov
jp
hlt
add
and
xchg
fstl
test
xchg
dec
adc
loopne
xor
leave
std
sub
shlb
lods
sahf
sub
mov
enter
cmp
pop
xor
repz
mov
dec
dec
mov
inc
rorl
ss
stos
insl
std
push
fs
and
add
mov
outsl
rolb
xlat
inc
stc
daa
xchg
xchg
cmp
adc
je
jge
fs
or
out
mov
das
or
mov
inc
cmp
mov
xorl
jle
fisubs
jbe
in
lock
fmull
jmp
dec
jns
push
pushf
clc
sbb
pop
cmpsb
push
lods
cmp
inc
push
and
sbbl
push
loopne
int
or
test
nop
leave
out
cmp
dec
notl
inc
hlt
push
ficompl
jmp
jge
dec
adc
lcall
push
adc
nop
dec
ret
lock
and
inc
cld
insl
jp
addl
lea
inc
add
cmp
lock
xor
mov
sbb
pop
cmp
cmp
sbb
sub
stc
mov
jl
pop
sbb
inc
enter
shlb
and
rcl
cwtl
push
mov
scas
lret
pop
jl
inc
mov
and
pusha
mov
mov
jp
mov
std
pop
jno
fadds
cmp
gs
es
cmpb
dec
enter
stc
mov
adc
and
and
dec
inc
jecxz
xlat
fsubrl
push
fs
pop
mov
dec
jp
sub
or
inc
jnp
mov
scas
shll
push
cmpsl
les
iret
mov
imul
inc
adcb
dec
sub
mull
dec
jecxz
repz
lret
scas
shr
cmp
ds
mov
or
xor
dec
mov
jns
mov
mov
push
outsl
out
xchg
ljmp
int3
test
mov
idivb
mov
jnp
and
mov
push
jo
push
dec
scas
shr
pop
jbe
sbb
outsl
mov
xchg
hlt
jae
mov
or
jno
xlat
fcomps
cli
mov
push
jg
insb
in
xchg
fistpll
in
mov
mov
pop
mov
data16
mov
mov
mov
mov
stc
stos
cmpsb
push
sarl
or
jmp
mov
dec
mov
fiaddl
sbb
jb
cmp
lods
xchg
outsb
pop
in
int
sarb
sahf
mov
hlt
mov
out
fldl
fstpl
cmp
mov
lcall
cmp
xchg
outsl
je
pop
rorl
lock
fistl
and
jne
movsb
fsubrl
push
pushf
xchg
xchg
mov
adc
adc
negb
xlat
cli
rclb
xchg
pop
add
push
mov
sbb
sub
jp
mov
pop
dec
pop
inc
nop
sbb
sbb
or
lret
inc
xor
cli
mov
popf
mov
add
xchg
lock
cmp
enter
push
dec
mov
movsl
stc
push
cmc
mov
aad
mov
incb
mov
in
negl
das
loopne
inc
adc
jecxz
into
inc
push
sarb
int
addl
idivb
mov
fcomp
xchg
nop
ret
sub
mov
cmp
jle
adc
jmp
cs
insl
stc
sub
sub
in
mov
pop
ficomps
dec
jp
lods
out
ljmp
xchg
jbe
mov
cmp
and
fadds
orb
dec
cltd
movq
inc
or
jns
jge
mov
add
sub
sti
jge
cmp
loop
push
shr
je
into
sysret
mov
ds
ljmp
adc
movsl
xlat
shl
mov
lret
movsl
nop
mov
xor
pop
ds
cwtl
imul
ljmp
mov
mov
jbe
mov
push
test
jae
repz
scas
cmp
loope
adc
leave
xchg
test
xchg
adc
inc
sti
push
add
in
and
cwtl
and
sbb
fwait
call
push
ds
repnz
loop
testl
int3
inc
scas
fistps
xchg
mov
cmp
outsb
inc
xchg
dec
inc
and
ret
lea
insl
repnz
lods
sub
sbb
inc
sbb
push
xor
fnsave
xor
adcb
sub
xchg
ret
jp
jmp
or
xor
test
dec
rcll
roll
fpatan
jnp
out
pushf
mov
js
lea
xchg
mov
test
dec
mov
push
rclb
orb
xchg
testb
push
inc
js
inc
leave
xchg
lret
sahf
jg
or
shll
or
test
dec
xchg
mov
insl
adc
mov
fsubr
pop
cld
pop
fidivrl
insb
jno
pop
rcr
enter
lcall
mov
leave
add
jge
test
test
push
mull
stos
pop
into
mov
lret
sbb
adc
add
movsl
add
outsl
sti
jns
ror
jmp
jge
ror
sbbb
inc
pop
mov
insb
inc
pop
mov
pop
adc
jbe
add
lret
pushf
inc
xor
xor
mov
ror
dec
das
ljmp
or
mov
in
cmpsl
jmp
mov
mov
mov
jp
push
test
jbe
popf
inc
add
aad
inc
mov
jmp
fdivrs
pop
test
into
pop
out
in
addl
imul
int3
xchg
or
cmp
pop
or
lods
dec
xor
out
xchg
mov
stos
xor
cmc
movsl
pop
dec
ds
ss
xchg
pop
adc
add
in
call
inc
lods
add
mov
cmpsb
lcall
push
into
add
aad
test
add
addl
aas
and
decl
sahf
jl
mov
popf
stos
cmp
sbb
push
dec
sbb
sub
jae
mov
aam
pop
or
sub
aam
cmp
andb
test
es
mov
xor
jp
pop
incl
pop
mov
movsl
xchg
pop
test
lods
pushf
dec
insb
adc
xor
and
push
sub
dec
or
add
test
sbb
aas
cmpsl
xor
divl
outsl
out
shlb
ret
add
faddl
shlb
and
arpl
dec
inc
andb
cld
sbbl
mov
jns
popa
lods
pop
bound
xor
aaa
test
push
push
mov
je
sbb
fdivrs
mov
add
shl
push
insb
push
jo
in
dec
add
popa
popa
cli
xchg
lds
adc
mov
inc
xlat
mov
and
aam
adc
sbb
cs
fnstcw
cli
mov
lcall
jne
and
mov
scas
xor
ret
shr
cmp
or
jns
rcr
aam
push
xor
insb
adc
sub
frndint
add
ret
inc
and
idivl
xchg
adc
sub
push
pushf
add
mov
cmpsl
push
and
bound
out
jae
adc
mov
sbb
push
out
or
dec
enter
jge
sub
stos
mov
cmp
mov
add
aam
fsubrl
adc
sti
js
and
push
mov
adc
cli
rcl
cmp
push
dec
push
gs
xorb
add
push
lret
rcrb
pop
ja
pop
insb
adc
lahf
cltd
les
push
push
dec
inc
inc
sti
cmp
insb
dec
cmp
insl
xchg
lods
mov
out
sub
xor
xchg
sub
xor
js
or
push
ja
xchg
mov
add
pop
arpl
push
mov
pop
jge
notb
out
scas
push
pop
inc
test
xchg
jne
fwait
mov
lock
pop
int
rorb
jno
xchg
aam
sbb
push
lcall
imul
in
in
scas
scas
add
cmpsb
arpl
lcall
aaa
pop
mov
dec
in
sarl
dec
mov
scas
cmp
sbb
xchg
stos
mov
lods
cmpsb
pop
ret
or
hlt
lret
sub
jge
dec
dec
mov
scas
xchg
push
mov
lcall
cli
lods
sbb
dec
cltd
push
adc
mov
push
pop
loope
pop
std
pop
lret
ljmp
xchg
xchg
xchg
enter
mov
cmp
fdivl
aas
mov
fisttpll
push
imul
cmp
setns
aad
sub
and
add
daa
cmp
xchg
mov
and
flds
faddl
dec
or
mov
mov
pop
es
lods
xor
jns
repz
outsb
mov
in
stc
pop
adc
cmp
leave
dec
inc
push
mov
jae
out
and
mov
mov
subl
jno
and
jae
push
out
jne
cmp
mov
jno
xchg
rol
js
or
mov
adc
push
jmp
or
inc
jg
into
dec
dec
or
lcall
mov
fs
loopne
add
test
lcall
xor
stc
sub
sub
cmp
dec
pop
mov
out
or
aad
xor
push
icebp
inc
int
ljmp
test
mov
mov
mov
sti
jnp
xor
js
faddl
jb
mov
movsb
or
cmp
jp
xchg
jg
bound
outsb
xor
inc
fsubp
xor
pop
pop
push
xchg
mov
outsl
push
lret
or
sub
sarb
xlat
cmp
mov
popa
mov
pushf
mov
nop
push
test
fisubl
push
push
push
out
xchg
and
out
add
aam
push
ds
and
cmp
imul
mov
mov
call
adc
mov
mov
imulb
scas
xor
ds
adc
push
sbb
sub
sbb
pop
push
cmp
jg
mov
rcr
push
pop
xchg
bound
aas
cmp
insl
outsl
and
scas
fwait
mov
imul
pop
andl
fidivrl
leave
lock
sub
fmull
adc
xchg
inc
lea
adc
add
and
movsl
cmp
inc
jg
add
and
adc
cld
mov
inc
test
mov
push
cmp
sti
shrl
movsl
fwait
rorl
shll
dec
out
sysret
jmp
test
xchg
jns
sub
sub
lahf
inc
jo
in
mov
mov
xor
push
rcrl
incl
ljmp
cmp
std
inc
cmp
jle
pop
loope
lret
addb
add
in
cmp
aad
addr16
add
push
test
fmuls
mov
add
jle
xchg
rol
scas
in
jge
sub
mov
sbb
xor
mov
and
mov
sbb
ror
out
js
shlb
ljmp
push
inc
mov
ja
push
and
jmp
movsb
and
xchg
and
ja
xor
loope
xor
mov
jmp
mov
repz
rorl
mov
cmp
aas
or
fstpl
fdiv
cmpsb
ja
aaa
arpl
sbb
sub
dec
pop
lock
push
out
pop
insb
inc
andl
test
mov
aad
mov
inc
jno
add
sub
jnp
pop
cmpsb
adc
mov
ljmp
mov
cmp
hlt
xchg
negl
cmp
insb
stos
fidivl
xchg
pop
shl
dec
push
xchg
enter
stos
std
and
fistpl
imul
cmp
clc
jmp
lret
mov
sti
and
mov
mov
pop
or
cwtl
push
aam
or
mov
jne
xor
jmp
jae
loopne
mov
sarl
aaa
push
or
aad
push
or
adc
bound
xor
es
xor
mov
sbb
mov
mov
pop
ljmp
cmp
shr
in
inc
lods
pusha
das
imul
pop
call
pop
inc
push
or
pushf
push
icebp
and
inc
mov
lret
out
lahf
scas
test
and
cli
and
jle
ss
jne
idivb
pop
push
gs
or
ljmp
lock
xchg
mov
sbb
cmp
sub
in
cwtl
push
pop
xchg
adc
outsl
repnz
test
mov
insl
add
xor
jb
pop
pushf
xor
xor
sub
push
cmp
fmull
fdiv
jnp
push
xchg
sbb
test
inc
lods
aas
lret
adc
xor
adc
mov
add
lret
insl
pop
ret
arpl
pop
push
jle
cmp
mov
jge,pn
lods
pop
cmp
stc
jae
xor
es
jle
xchg
hlt
stos
ja
mov
mov
lahf
lea
or
add
mov
loopne
lock
lcall
in
adc
ja
pop
fdivrl
popa
fsubl
lret
mov
jns
push
movsl
xchg
xchg
and
and
adc
shr
mov
lock
mov
icebp
xchg
mov
or
xor
add
sub
out
and
xlat
ret
push
hlt
int
stc
push
pop
rclb
mov
arpl
leave
aaa
scas
loop
lods
jecxz
insl
cmc
cmp
movsl
sbb
inc
sti
mov
push
and
and
jb
andl
rep
js
shll
aaa
jnp
fcoml
mov
enter
push
dec
decb
mov
cmp
arpl
xchg
cmpsb
test
cmc
cwtl
in
push
insl
lods
fwait
inc
shrl
shl
add
adc
push
lret
iret
lret
daa
lahf
jb
pusha
rcrl
cmp
dec
mov
xor
test
ds
arpl
out
lds
andl
mov
out
cmpsl
in
jg
cmp
push
icebp
sbb
sbb
jnp
push
dec
rorb
xchg
and
inc
pop
cmpb
inc
xchg
mov
paddb
in
push
cmp
adc
cmp
inc
jl
je
inc
push
fwait
mov
add
add
and
and
test
imul
cltd
js
or
and
iret
mov
push
add
inc
jne
je
clc
jge
cli
fstpt
and
dec
mov
std
nop
nop
scas
cmp
jno
jne
imul
add
imul
push
lea
mov
test
das
loopne
xchg
stos
cmp
push
mov
dec
jne
repz
js
pop
fsubrs
inc
mov
jmp
pop
lods
sub
aad
dec
dec
outsb
ds
aas
jo
jp
fsts
mov
push
mov
loopne
icebp
cmc
mov
jecxz
xchg
rorb
nop
pop
or
sub
or
cmp
test
ret
int3
cld
out
loop
mov
mov
data16
stos
stos
cld
mov
out
push
not
jae
or
or
add
clc
cmp
pop
movb
pop
stos
subl
xor
pushf
xor
xchg
add
fcomps
jne
clc
add
imul
pop
das
lret
inc
mov
int
in
or
into
push
aad
cmp
jecxz
xchg
mov
sbbb
push
fstps
and
dec
and
ja
stc
push
mov
or
mov
cmpsl
push
div
or
push
ret
dec
pushf
push
mov
sub
push
inc
sbb
pusha
or
or
cs
es
and
bound
jbe
push
fiaddl
adc
mov
addb
shlb
insl
scas
pop
xlat
out
in
testb
rcrb
and
cld
das
das
int3
lea
cmc
sbb
imull
cmpsl
mov
jne
loope
xchg
flds
xchg
ret
lods
nop
mov
aam
roll
cmpb
and
adc
adc
sbb
inc
xor
gs
aaa
imul
popa
cmp
in
cmp
inc
jnp
jg
pop
add
test
test
rorb
mov
or
push
dec
mov
jne
data16
lcall
leave
push
mov
std
push
insl
mov
aaa
fiaddl
mov
mov
bound
js
in
xchg
inc
lods
stc
insl
subb
push
ljmp
repz
adc
cmp
and
jmp
jge
cmp
xlat
push
inc
or
pop
out
mov
mov
adc
mov
and
cmp
int3
mov
cmp
pop
sub
stc
adc
mov
and
out
stos
pop
add
add
sub
js
and
in
or
jns
fisubrl
mov
inc
or
add
jne
inc
aas
fcomps
je
repnz
into
aaa
dec
test
dec
lds
and
add
cmp
push
jbe
pop
ret
xchg
or
mov
add
sbb
pop
in
and
adcl
icebp
add
push
gs
mov
push
aas
in
jae
out
lcall
jns
xchg
fcomps
adc
data16
add
lret
stos
imul
fildl
mov
xor
sbb
test
loop
dec
sub
inc
je
out
in
and
call
xchg
dec
cmpsl
aas
jmp
bound
in
lea
outsl
push
ret
mov
pop
inc
jno
sub
jae
xor
push
xchg
mov
fmul
in
pushf
cwtl
dec
ret
loope
sbb
mov
adc
or
push
cmp
jb
outsb
roll
adc
cli
jb
popf
mov
pushf
out
test
jae
popa
pusha
mov
jl
or
imul
ret
lods
out
mov
lods
sbb
push
fs
scas
push
pusha
mov
mov
loopne
pop
push
dec
xchg
fldenv
jp
mov
mov
jecxz
and
dec
movsb
jmp
jmp
xchg
int
out
rorb
rcrl
fistpll
lret
dec
icebp
sbb
test
add
cmp
dec
or
inc
pop
sti
xchg
rcl
xchg
mov
sahf
adc
mov
icebp
mov
roll
sbb
lock
ja
hlt
into
inc
aas
jb
and
cmp
jle
in
mov
daa
out
dec
loope
mov
hlt
lods
fcomps
dec
int
insb
inc
loop
mov
inc
inc
repz
or
push
add
jne
lods
ja
stos
stc
mov
out
or
cmp
hlt
mov
sysexit
push
aaa
hlt
sti
and
icebp
repz
xchg
loop
pop
jo
scas
xchg
leave
imull
xchg
push
dec
pop
in
loopne
and
sub
pusha
inc
mov
leave
shll
test
sub
dec
push
inc
xchg
mov
fcomip
loop
xchg
or
je
outsl
loope
push
pop
jo
stos
icebp
das
jne
jb
dec
adc
shrb
in
popa
pop
shr
movsl
ss
das
lret
ret
dec
xchg
mov
movsb
clc
jns
xlat
adc
pop
dec
addr16
push
roll
dec
ret
xor
cmp
xor
pop
push
xchg
dec
xchg
cmc
push
dec
mov
clc
clc
cli
or
push
pusha
inc
in
pop
icebp
sbbl
push
or
mov
in
out
movsb
mov
nop
or
sbbb
inc
shrb
daa
in
enter
pushf
lods
clc
push
flds
shll
mov
cld
or
lret
dec
inc
push
jo
pop
lock
loop
lret
pusha
inc
sbb
test
push
inc
add
jg
in
popf
std
sbb
and
int
jge
shrb
sbb
pusha
mov
adc
jg
pushf
rcrb
cmpsb
sbb
push
sti
jmp
lret
test
push
out
in
int
pop
jmp
sti
call
pop
lea
ficomps
loop
xor
xor
inc
lcall
lds
fisubs
xor
xor
sub
mov
js
xor
xchg
xor
xchg
aam
test
fmul
or
aad
or
out
adc
mov
or
and
leave
aam
cmp
rcrb
dec
mov
xchg
fcos
out
mov
add
fimull
xlat
daa
or
inc
adc
lods
lcall
mov
mov
push
or
jmp
mov
insl
add
jecxz
je
jp
sbb
xchg
xor
daa
imul
sub
lock
sbb
dec
adc
jmp
xchg
jb
shr
rcll
cmp
imul
dec
sbb
add
daa
jno
push
fnstcw
push
xor
mov
dec
jg
xor
sbb
dec
xlat
cld
shlb
or
pop
cmp
into
aam
insl
and
cmc
xorb
jle
sbb
inc
mov
test
inc
push
jmp
movsl
xchg
sbb
arpl
jbe
add
ficoms
adc
andl
adc
int3
repz
in
add
mov
sbb
and
add
xlat
dec
in
pop
mov
push
repnz
jl
jmp
aad
push
lods
mov
lahf
fcmove
mov
ffreep
stos
lea
stc
das
cli
jb
adc
sbb
xchg
inc
aas
inc
movsb
pop
jo
lret
jg
inc
add
and
cmc
repz
xchg
fnstsw
popa
jp
cmp
pusha
xchg
mov
add
and
push
jge
sti
inc
mov
sbb
call
ss
insb
test
xchg
incl
loope
enter
cmp
daa
or
add
sbb
inc
pop
popf
xchg
ljmp
stc
push
mov
popa
cmp
jl
or
mov
insb
mov
jg
xlat
sbb
or
test
jno
adc
adc
xchg
jae
add
add
mov
mov
fs
bound
test
xchg
sub
pcmpeqd
add
scas
pop
jmp
push
jb
testb
testb
ja
cmp
xchg
sbb
pop
fistl
mov
ljmp
inc
mov
repnz
add
xlat
push
dec
ret
mov
iret
sub
std
daa
mov
dec
jmp
or
popf
adc
dec
lcall
jle
add
sahf
test
inc
hlt
in
pop
in
or
mov
lahf
inc
fildl
cltd
inc
sub
popa
jl
ret
xchg
test
xor
repz
mov
fstpl
nop
negl
xor
cld
mov
jae
xchg
aad
mov
mov
mov
xor
pop
and
xbegin
add
jge
pop
push
dec
test
les
jg
ja,pn
pop
sub
pop
not
stc
stos
mov
jl
imul
dec
push
mov
push
sub
add
iret
and
fimull
insb
lcall
xchg
cmp
fcmove
mov
push
push
cli
sub
jo
push
mov
inc
jb
cmp
into
mov
mov
test
adc
int
pop
adc
addr16
push
std
mov
fidivs
movsl
cmp
mov
mov
dec
mov
adc
push
lcall
loope
mov
jge
pop
ss
xchg
dec
in
mov
int
pop
adc
test
inc
jp
sbb
in
aad
in
mov
sbb
lods
pop
and
flds
call
xchg
adc
push
xchg
adc
ror
pop
xchg
int
xchg
loope
clc
daa
mov
sub
adc
inc
int3
add
or
jmp
cmp
aaa
cmpxchg
cmpsb
jge
cmp
push
push
int
xor
mov
sahf
sub
and
and
sbb
leave
jnp
cmpsl
outsl
sbb
mov
pop
mov
adc
popa
addr16
test
adc
gs
mov
aaa
test
or
test
dec
loop
lret
sbb
xor
popa
xchg
lds
lods
sub
in
jge
lods
nop
imul
and
lret
stc
pushf
cld
adc
loopne
pushf
mov
dec
enter
mov
or
mov
in
and
cmp
insb
stos
xchg
out
jecxz
fdivs
cmp
cmp
cmp
push
cmp
fnstcw
jae
push
dec
mov
sbb
cltd
cli
mull
or
aas
sub
xchg
into
popf
scas
cmp
fildl
cmpb
mov
cmp
push
xchg
sub
inc
cld
movsl
mov
xor
and
mov
sbb
inc
lahf
test
out
xor
sub
push
mov
mov
adc
jecxz
dec
fnstcw
sbb
jge
mov
and
cmc
mov
mov
push
xchg
inc
bound
inc
push
xlat
cmp
adc
mov
int
movsl
movsb
xchg
divl
adc
mov
pushf
push
xor
push
lret
push
sub
hlt
push
shlb
sbb
fsub
cmp
sbb
xchg
mov
sub
fbstp
fists
pop
mov
insb
push
rorl
pop
rcr
pop
pop
jle
cmp
xchg
fimull
or
sbb
push
push
ljmp
stos
sarb
mov
icebp
inc
inc
enter
inc
into
dec
jno
inc
nop
or
daa
cmp
aaa
rcrb
arpl
pop
push
inc
das
cmpsb
jbe
inc
hlt
stc
xor
inc
bound
pop
in
movsb
int
dec
mov
into
pop
out
push
loope
fldenv
xor
dec
fdivrp
aad
clc
dec
and
pop
mov
cmp
cmp
pop
mov
test
jle
pop
mov
pushf
xchg
sti
pop
xor
fsubrs
jnp
out
pop
lds
xchg
pop
inc
aam
mov
dec
xlat
or
int3
cmpsl
rcrb
shrb
mov
into
js
sub
jl
mov
mov
in
icebp
adc
mov
test
and
lcall
add
std
das
jnp
or
pop
mov
mov
iret
xor
sbb
add
outsl
jg
mov
enter
and
sub
fmuls
xchg
add
into
add
pushf
scas
push
es
mov
lcall
jo
adc
test
aam
test
imul
mov
fs
out
ljmp
inc
mov
mov
or
out
add
lods
andb
stos
in
fstps
pop
sbb
pop
inc
lret
and
in
or
or
call
mov
stos
shrb
push
fsubrs
jle
data16
aaa
psrld
repz
mov
push
mov
push
test
push
pop
inc
lret
dec
pop
adc
jb
sbb
iret
aaa
scas
fst
mov
gs
inc
in
jbe
xchg
dec
int3
xor
adc
add
data16
ret
sbb
negb
pushf
adc
adc
jg
or
outsb
add
sbb
cmp
mov
test
xchg
mov
test
in
icebp
add
sahf
jbe
pop
xor
jb
mov
fisubrs
out
adc
add
xchg
pop
pop
jle
ljmp
jno
das
call
jp
test
mov
movsb
mov
sahf
test
mov
mov
mov
rorb
jl
fnstenv
jnp
pushf
adc
sub
test
mov
fstl
lret
outsl
shlb
push
stc
test
sbb
fcompl
test
push
xchg
push
rcrw
out
jl
and
enter
xor
ja
js
cli
test
xchg
call
ret
mov
adc
cmp
fstpl
xor
rcl
gs
pop
jnp
cltd
jno
sbb
and
mov
popf
orl
inc
mulb
inc
mov
aas
aaa
cltd
push
jecxz
orl
out
mov
mov
push
std
mov
pop
stc
in
popa
or
mov
pusha
insl
popa
in
paddb
adc
inc
cld
testl
mov
cmp
inc
add
data16
cmpsl
or
lods
in
push
mov
jmp
xor
testb
fcomps
xchg
loop
rclb
out
popf
push
jbe
dec
enter
in
fbstp
or
dec
aaa
rorl
mov
jns
adc
into
ds
int
xchg
imul
mov
jne
aam
dec
fcmove
pop
jo
cmp
add
rcrb
pop
xor
push
add
jl
das
and
push
inc
xchg
das
lock
xor
inc
mov
repnz
sbb
hlt
push
outsb
lock
mov
mov
es
mov
popa
jo
popf
inc
popf
test
imul
mov
outsb
icebp
jbe
mov
and
repnz
ret
int3
sub
cwtl
xchg
cmpsb
out
dec
mov
pop
cltd
je
daa
in
xchg
xor
mov
or
idivb
xchg
out
xor
inc
aas
sub
adc
inc
jg
cmp
cmp
sub
adc
repz
clc
arpl
imul
sub
mov
fisttpl
xor
iret
pop
mov
gs
into
mov
cwtl
push
rol
inc
cli
add
or
movsb
and
mov
push
out
out
push
adc
movl
mov
jge
inc
mov
movsl
nop
and
add
mov
adc
repnz
add
xchg
push
repz
popf
popf
loope
dec
dec
push
call
shlb
lds
shl
push
mov
sbb
xchg
inc
fwait
cmp
out
cmp
fisubl
fstpt
pop
push
pop
jg
pop
cmp
stos
pop
pop
ret
jle
iret
lods
xor
pop
addps
mov
cmpsl
mov
mov
or
xchg
in
movsl
cmp
test
imul
cmp
orl
inc
push
pusha
out
push
jb
popa
lock
enter
test
or
dec
push
adc
xchg
xor
leave
ret
lds
or
jmp
flds
hlt
push
sbb
sub
jae
sbb
pop
mov
into
jb
lock
mov
leave
xor
mov
add
test
int3
dec
mov
jne
js
out
lea
add
pop
add
xor
inc
mov
adc
xor
jo
xchg
add
cmp
ret
push
adc
sub
dec
test
push
jnp
mulb
xor
test
adc
imul
cmp
mov
jge
mov
fisttpl
out
sbb
pop
jb
pop
dec
jmp
lret
fidivrs
aad
mov
jb
sbb
mov
adc
jo
cmpsb
fstl
in
mov
int3
popf
adc
into
lock
adc
push
pushf
push
mov
cmp
mov
jnp
push
dec
or
push
stos
movsb
in
jge
fcomp
aam
push
test
pop
dec
xchg
push
xchg
lods
mov
sbb
add
adc
cld
mov
insl
and
stos
ret
loopne
sbb
cltd
jns
sbb
popl
sahf
adc
stos
sbb
mov
popf
and
mov
dec
cmp
bnd
jbe
mov
mov
jns
insb
push
sub
dec
mov
ret
push
xor
cmp
test
pop
and
xchg
pop
fmul
jle
adc
stc
sub
push
xchg
cmp
dec
bound
nop
mov
das
dec
add
pop
mov
test
cmp
push
pop
fdivr
xchg
mov
pop
dec
stc
inc
std
pop
jg
xchg
mov
adc
pop
mov
pop
loop
mov
add
mov
je
mov
xor
xor
sub
nop
movsb
pop
xlat
sbb
pusha
mov
push
fs
je
into
out
lds
cmp
inc
sbb
cmpsl
cmpsb
and
cmp
mov
aas
testl
push
add
sbb
jl
xor
pop
xchg
andb
dec
mov
cld
xor
imul
add
popf
push
inc
dec
clc
les
and
pusha
mov
jne
mov
ja
sub
sbb
test
ljmp
cltd
decb
xor
xchg
icebp
out
push
int3
aaa
loope
xor
add
and
jge
lock
adc
inc
divl
js
fisubs
jno
sub
xor
pop
push
dec
jne
adcl
aad
jno
int3
fucom
jb
out
ror
call
xlat
fcomps
pop
push
and
arpl
imulb
jecxz
pop
ret
pop
lds
aad
push
insl
mov
mov
jle
ds
fdivs
into
je
sbb
mov
aas
push
mov
cs
js
stos
aad
mov
lods
movsl
lds
push
test
stos
dec
outsb
xor
add
loop
and
inc
ljmp
dec
pop
and
sbb
fwait
sub
cmpsl
ja
in
sub
fidivl
jb
mov
xchg
jb
std
shll
imul
mov
or
jae
dec
pop
sub
icebp
pop
jp
push
push
xchg
add
cmp
and
xor
pop
sbb
shl
adc
jb
pusha
sar
dec
iret
jb
out
push
das
addl
pop
mov
mov
xor
and
outsb
enter
jbe
iret
mov
push
xchg
rcrl
fmulp
fcmovne
call
mov
mov
push
mov
ljmp
cld
clc
pop
aam
nop
or
into
dec
loopne
jo
mov
jb
test
negb
inc
push
push
cmp
dec
or
aam
nop
fstps
jae
sbb
jne
pop
ret
push
call
push
inc
mov
adc
jo
sub
xor
sub
lods
or
icebp
cli
sbb
xor
cmp
xor
rcll
imul
add
push
mov
xchg
or
adc
std
das
stos
fimull
push
cmp
pop
jno
pop
jb
mov
ja
cs
jge
sub
imul
fld
sub
xor
addr16
xor
jb
or
dec
mov
xchg
popl
stos
lds
jmp
mov
stos
xor
jl
cmpsb
sbb
shr
mov
jb
outsb
lret
mov
xorb
fxtract
mov
jle
popf
add
cmp
out
aam
xchg
cmp
sbb
in
jge
mov
rclb
test
ljmp
loope
loope
adc
out
mov
sbb
negl
adc
cmp
das
lcall
add
or
push
cltd
pop
inc
inc
sub
adc
jg
cmp
add
fcompl
and
xchg
sbb
jbe
dec
pusha
push
pop
cmp
jbe
pop
mov
aaa
ret
mov
ja
insl
mov
movsl
xor
pop
repnz
add
adc
mov
cltd
test
insb
and
jecxz
cmp
and
or
lods
sub
insb
pop
cvtpi2ps
mov
enter
add
fs
mov
pop
lea
imul
jmp
mov
xchg
mov
dec
mov
stos
jmp
lret
push
add
sbbb
cld
xorb
shrb
cld
inc
incl
outsl
loop
pop
cmp
int3
rcrl
mov
stc
mov
mov
inc
jnp
xchg
sarl
fadds
fadd
aad
sbb
aas
fiaddl
ljmp
repnz
cmp
mull
mov
jg
jb
fisubrs
pop
daa
es
movsb
fdivrl
xchg
push
imul
les
mov
movsb
aaa
mov
mov
je
popf
inc
es
shlb
fwait
push
test
lcall
add
inc
rol
adc
mov
mov
cmpsl
mov
push
cs
mov
lcall
les
lahf
and
push
push
sahf
sub
imul
std
and
lds
adc
popf
call
add
xor
dec
cmp
idivl
sub
dec
out
mov
movsb
or
imul
ror
jmp
inc
cbtw
inc
push
sub
mov
lcall
sub
mov
sarb
lds
push
imul
xchg
js
imul
mov
mov
cld
sbb
xor
push
cmpsb
pop
shrb
mov
repnz
pusha
jnp
rclb
push
fdivrp
out
cmp
jne
pushf
adc
arpl
push
jp
insb
notl
aas
xchg
jbe
lock
adc
lds
je
aaa
xchg
mov
jmp
mov
lcall
std
push
adc
stc
cs
lock
sbb
adc
add
flds
push
jno,pt
xchg
movsl
jbe
inc
xorb
xor
push
push
das
pop
mov
pop
cwtl
sbb
sbb
lea
filds
fistl
std
inc
fisttpl
hlt
pop
jmp
ja
xchg
dec
repz
gs
outsb
out
sub
push
dec
mov
push
and
shlb
mov
inc
xor
repnz
push
jmp
xor
jp
adc
repz
subl
aas
inc
push
or
jns
mov
iret
mov
cmp
adc
jnp
sbb
out
sub
outsl
stos
inc
jns
pop
lcall
mov
shrb
or
aas
cmpsb
lock
or
jecxz
mov
ror
pushl
sbb
nop
cmp
mov
iret
ror
out
xor
cmp
or
jecxz
adc
inc
das
pop
fmul
ljmp
and
les
jmp
out
sahf
xor
mov
xchg
push
mov
fnstcw
pop
sahf
stc
mov
sbbl
mov
test
pop
adc
fwait
pop
aad
mov
push
push
popf
jge
push
inc
loopne
sbb
and
mov
bnd
push
mov
inc
adc
fisubl
outsb
das
stos
xchg
jo
into
jne
fstpt
lds
das
iret
push
dec
cmpb
sarb
mov
test
inc
icebp
pop
pop
adc
aas
xor
fmuls
pushf
cli
fnstsw
xchg
mov
ljmp
mov
xchg
xor
pop
pop
bound
push
outsl
stos
jae
adc
mov
int
xchg
xor
ss
in
insb
in
lret
rcl
hlt
test
ja
mov
add
scas
cmpl
adc
push
xchg
mov
pop
xor
cmpb
inc
sbb
pusha
fcomps
or
add
je
lcall
mov
cmc
aad
add
mov
es
sbb
in
repz
aas
cltd
cmpsb
rcrb
bound
mov
rcl
out
pop
addb
mov
cmp
xor
sub
neg
cltd
repz
inc
lods
adc
pop
loopne
or
mov
add
iret
sarb
mov
xchg
mov
push
cwtl
xlat
cld
aad
sbb
cmovle
and
cmp
mov
lea
and
cmpsb
pop
xor
insb
jmp
inc
mov
add
cmpl
cmpsb
jg
and
mov
inc
dec
je
adc
push
sahf
popf
adc
cmp
icebp
lods
clc
fwait
or
scas
jecxz
dec
in
insl
iret
rorb
xlat
or
in
push
jmp
fiadds
es
push
adc
imull
test
push
cmpsb
dec
ljmp
sub
pusha
mov
sub
andb
and
je
ds
inc
xchg
inc
cs
lods
mov
sbb
inc
mov
and
mov
push
xor
mov
imul
sbb
xor
xor
xor
mov
jns
insl
pop
add
mov
pop
inc
ret
popf
cli
xor
out
pop
mov
stc
test
mov
lea
enter
into
pop
xchg
lods
data16
scas
sub
sbbb
cs
sub
stc
cmc
ret
addl
test
aam
xchg
lahf
pop
outsb
jbe
jno
adc
push
repz
and
js
lea
gs
pusha
xchg
out
adc
dec
and
rcll
xchg
clc
fisubrs
sub
iret
scas
mov
mov
ret
lret
ds
or
jno
cmp
fisttps
add
outsb
pop
xchg
insb
fnstenv
fisttps
cltd
cmp
mov
jp
or
cmp
cli
add
adc
repnz
shlb
jo
sub
insl
jmp
adc
fcoms
and
es
fwait
xchg
sbbb
daa
mov
fwait
int
cmc
adc
call
lock
fwait
inc
push
inc
adc
adc
cltd
out
dec
pop
inc
xchg
insb
mov
dec
xchg
or
cwtl
xchg
cmpsl
push
sub
sub
xchg
fists
add
push
loop
int
pop
inc
cmp
jae
dec
mov
fldt
cltd
insb
mov
iret
push
outsl
mov
jbe
insb
subb
rol
xchg
push
shl
enter
fwait
pushf
scas
lds
xor
in
js
pop
xor
loopne
out
pop
loope
dec
ror
inc
dec
jmp
dec
cmp
in
lahf
cmpl
inc
daa
shlb
imul
add
cli
inc
and
mov
jae
cmp
sub
rorl
add
cs
push
or
into
fisubs
add
inc
sti
das
inc
mov
cmp
rcr
lods
xlat
insb
pop
sub
jno
aas
clc
jle
pop
ljmp
dec
sbb
call
ret
pop
mov
repz
inc
dec
ficoms
das
sbb
push
jl
push
addr16
xor
mov
push
movsl
jne
xor
jb
cmp
mov
lret
lret
imul
push
mov
insl
xchg
mov
cmpsb
inc
add
mov
movsb
sub
sbb
pop
out
icebp
dec
aas
arpl
cmp
inc
sti
imul
bound
and
mov
int3
sbb
mov
lds
mov
fstps
dec
mov
cli
lods
mov
and
mov
shl
rcl
jo
cs
out
mov
js
and
jo
sub
fildll
ficomps
and
cld
pop
lret
dec
ret
loop
addl
in
mov
es
scas
adc
push
or
div
sbb
lock
cmp
testl
loopne
dec
adc
outsl
repnz
sahf
leave
sbb
jg
cwtl
pop
jo
fldenv
lock
scas
push
shrl
lods
shlb
lret
fisubl
push
jo
fwait
xchg
movsb
ja
push
or
js
sub
or
arpl
shlb
fbld
mov
lock
std
inc
xor
pop
cmc
jp
rcrl
sbb
clc
loop
adc
jb
jmp
sub
stos
inc
fisttpl
ret
aam
lret
sbb
cmpsb
add
pushf
jns
leave
test
test
add
scas
jbe
arpl
xchg
in
push
jno
pushf
dec
cmp
xor
repnz
insl
xchg
stc
pop
ret
jp
mov
hlt
ja
or
scas
call
mov
mov
fisttpll
in
inc
adc
mov
and
int
mov
jmp
pop
jnp
mov
cltd
movsb
inc
push
imul
add
std
and
in
daa
leave
or
pop
outsb
sbb
inc
push
mov
jo
xchg
int3
cmpsl
adc
dec
aaa
stos
mov
inc
popa
jo
neg
and
jge
mov
lret
rorb
dec
cmpsb
nop
mov
mov
lods
push
mov
les
ds
mov
pop
std
cmp
cli
aas
test
fcompl
xor
shlb
sarl
dec
daa
idivb
mov
sbb
aad
adc
mov
and
aaa
sti
mov
int3
popa
mov
daa
jle
xchg
pop
sarl
clc
jg
and
sbb
cmp
aas
mov
xchg
lods
enter
cmp
or
out
fwait
sub
js
inc
sbb
mull
inc
mov
xor
arpl
push
sub
fistpl
mov
pusha
repz
pop
or
and
subb
push
insl
std
aaa
out
dec
add
sahf
jl
fistps
add
leave
cmpb
xor
xor
test
popa
jle
adc
sbb
gs
xchg
jae
pop
cltd
ja
in
pop
or
out
ja
push
fistps
mov
dec
push
aaa
push
add
dec
and
cmp
jbe
pop
mov
adc
inc
insb
arpl
iret
psrlq
imul
pop
daa
adc
jl
jmp
xlat
lahf
popl
sbb
ljmp
inc
leave
mov
lods
hlt
in
mov
in
in
js
push
in
jbe
jne
add
sub
mov
mov
ror
add
ja
dec
jae
cs
xor
mov
gs
jle
addr16
pushf
test
xchg
and
pushf
sti
mov
fwait
mov
inc
mov
cmpsl
bound
sub
push
cmp
pop
dec
pop
movsl
fs
add
cmc
scas
cs
inc
rorl
jge
rcl
sbb
stc
and
into
add
jmp
push
int3
jb
add
into
rorl
pop
sub
cmp
xchg
leave
mov
push
mov
fdivrl
andb
and
fstpt
outsb
lods
push
mov
cmp
sbb
popf
mov
inc
adc
outsl
sbb
aad
sub
movsb
jmp
in
cmp
mov
dec
aas
push
push
clc
mov
ljmp
mov
lea
outsl
mov
gs
daa
test
loope
scas
out
cmpsb
insl
invd
shll
adc
sarb
loopne
mov
jl
lods
popl
call
sbb
inc
and
add
add
sbb
cld
imul
adc
ret
add
xchg
ds
mov
mov
jne
jb
test
mov
ret
ss
cmp
cmpsb
xor
pop
inc
movsb
sub
dec
mov
jo
pop
push
xchg
aad
xor
pop
mulb
jns
test
mov
movsb
push
lock
mov
add
and
aas
cld
xchg
sbb
mov
cmp
popf
pop
arpl
mov
mov
mov
jecxz
push
push
int3
outsb
call
loop
movsb
push
lcall
stos
dec
mov
and
loope
andl
add
and
test
add
repnz
xchg
arpl
rcrb
add
push
or
dec
push
je
daa
sub
mov
jnp
fists
cmpsb
add
xor
dec
je
loopne
pop
ja
fs
push
adc
fsubrs
into
push
sub
xchg
xchg
or
aad
icebp
popa
and
jns
pop
inc
add
in
sahf
cmpsb
inc
insl
sbb
test
imul
mov
pop
inc
pop
or
call
lods
aad
pop
popf
mov
inc
mov
mov
mov
xchg
rorb
scas
mov
cmp
test
xchg
xor
inc
push
imul
mov
bound
int3
cmpsl
mov
outsl
push
loop
xchg
cwtl
sub
mov
in
dec
xchg
fs
sbbb
xchg
insb
orb
mov
fwait
rcll
testl
lea
in
mov
movsb
cmp
dec
incb
and
and
mov
inc
dec
pusha
sbb
adc
jno
mov
popa
mov
lock
test
ja
movsb
inc
dec
lcall
fldl
arpl
mov
cmp
add
ds
pop
imul
add
pop
jnp
mov
push
jp
outsb
cmp
push
daa
inc
or
adc
insb
add
jbe
pop
mov
stos
mov
les
jge
add
or
push
loop
cmp
out
js
movsb
xchg
cmp
pop
sbb
mov
mov
imul
xor
dec
jmp
and
mov
out
or
dec
pop
in
gs
inc
clc
mov
mov
cmp
adc
jbe
xchg
rdmsr
push
cwtl
sbb
fdivrs
lahf
test
popf
scas
dec
test
repnz
sar
lcall
jnp,pn
lods
hlt
cmp
mov
xor
adc
xchg
push
mov
and
inc
call
push
scas
cwtl
adc
shrb
insb
andb
xchg
aad
pop
scas
and
push
dec
negb
fisttpl
mov
xchg
das
je
int3
loop
test
fsubs
aas
adc
fidivs
mov
mov
mov
inc
and
adc
cwtl
lods
mov
fs
pop
cmpsl
jmp
ja
push
inc
push
add
inc
cs
imul
mov
out
movsb
push
fcmovnb
sti
lds
ret
and
lds
enter
adc
scas
icebp
inc
or
pop
and
nop
mov
add
ds
aaa
sub
mov
ja
cltd
shrb
test
inc
jb
mov
jnp
in
cmp
fldl
mov
mov
ss
push
pop
lret
pusha
aam
add
jg
pop
imul
aam
fwait
call
fsubp
mov
inc
les
inc
icebp
mov
or
in
inc
jne
cmp
lds
xchg
xchg
xor
ds
movsl
sbb
cltd
jne
insl
mov
jmp
scas
xchg
addr16
inc
je
or
push
mov
push
add
pop
movsl
das
out
lods
xor
std
xchg
rcrl
lds
sub
sbb
push
stc
es
mov
pop
push
push
outsl
iret
repz
icebp
fwait
test
cs
out
in
and
cmpsb
push
xchg
aaa
icebp
dec
fs
insb
cli
iret
push
mov
sti
jns
dec
sbb
ja
in
cmp
aam
jge
std
dec
mov
outsb
and
stc
fucomip
lahf
dec
sbb
sbb
sbb
ret
int3
cmp
inc
cmc
mov
sbbl
lea
mov
popa
shll
das
mov
fdivl
inc
adc
jg
leave
push
cmpsl
mov
add
loopne
and
lret
and
sub
pushf
movl
cwtl
repz
jmp
dec
cltd
movsl
mov
clc
rorb
add
test
add
and
adc
in
dec
cli
shll
mov
lods
jo
sub
jmp
push
inc
cmp
jno
sbb
xor
dec
xchg
into
icebp
mov
sub
or
jp
stos
js
aad
or
fnstenv
out
cli
mov
pop
jecxz
cltd
and
mov
or
aaa
adc
rolb
pushf
cld
call
mov
mov
or
ret
incl
sub
imul
pop
out
insb
cld
insb
popf
jo
lcall
cmpsb
fcmovb
adc
and
xor
iret
adc
stos
inc
push
aad
lcall
inc
xchg
sub
jno
negb
daa
dec
adcl
push
push
push
xchg
or
ret
and
adc
inc
jno
sbbl
nop
or
add
cmpsl
push
or
xchg
pop
xchg
pop
cs
mov
das
push
ja
push
aam
inc
jne
popf
fsts
pop
daa
xchg
push
jnp
shll
xchg
fwait
jnp
pop
push
flds
jge
in
mov
xchg
negl
std
rclb
fwait
ljmp
fwait
leave
xor
ret
aad
or
inc
sub
inc
in
pop
sar
add
and
lret
pop
adc
add
int
lcall
movsl
rclb
mov
push
sbb
in
into
ljmp
call
sbb
mov
out
pop
out
daa
add
ret
sub
push
daa
mov
dec
out
and
mov
inc
mov
pop
mov
mov
in
push
daa
idivb
xor
lret
sub
adc
and
lods
arpl
ss
sub
jb
or
movsb
mov
cld
cmp
push
mov
adc
insb
aam
lods
in
movsl
dec
fmull
sbbl
adc
pop
insl
mov
or
jge
out
add
or
out
or
scas
adc
test
xor
pop
pop
mov
inc
pop
int
sub
pushf
mov
lea
xchg
xchg
mov
jp
xor
lret
adc
sbb
cltd
adc
lods
flds
push
fcmovu
aam
test
pop
inc
adc
cmp
mov
popf
data16
daa
dec
mov
aam
mov
divl
add
add
pop
sub
lods
xor
xchg
push
into
pop
loop
mov
or
jmp
cli
fdivr
mov
sbb
or
test
ds
xchg
xchg
fs
mov
enter
push
je
out
cmp
inc
je
aas
in
popf
or
inc
cmp
aam
test
or
jecxz
lret
add
mov
fldenv
jno
pushl
insb
loop
push
pop
or
mulb
mov
mov
cli
and
add
xor
lret
cli
sbb
insb
dec
stc
adc
push
sbb
push
or
dec
fisubrl
or
arpl
jl
xlat
movsl
pusha
cld
adc
mov
sti
mov
pusha
cmp
cltd
out
add
dec
test
jmp
aaa
push
stc
iret
in
sub
inc
or
xchg
jbe
rorb
sub
mov
loope
and
mov
js
out
inc
push
out
adc
lea
lcall
dec
stc
add
ss
scas
mov
ret
gs
cmove
jle
fildll
imul
xlat
inc
ja
or
sub
xor
aas
cwtl
pop
sbb
inc
or
sahf
pop
push
out
pop
cmpb
cmpsl
cmp
ja
lcall
jb
ss
xor
and
out
dec
dec
cwtl
lea
xor
out
sub
cmpsb
push
xor
cmp
ja
pop
xor
mov
aaa
sub
hlt
cmpsb
cmp
or
mov
inc
fnstcw
fdivs
std
enter
xor
push
gs
aas
cmpsl
icebp
out
jo
jp
shrb
in
cld
pop
test
mov
cmc
or
push
cwtl
shr
sarb
clc
lods
lods
cwtl
outsl
or
iret
jae
push
test
cltd
dec
pop
shll
and
adc
test
add
shl
sub
and
sbb
xor
imul
xchg
ljmp
test
cmp
mov
mov
inc
mov
insl
adc
lds
mov
out
or
icebp
outsb
aam
jae
and
mov
xlat
je
adc
jg
lahf
insl
sbb
and
fwait
repnz
insb
ret
insb
mov
mov
cmc
jg
loop
popf
inc
fcoms
das
push
or
jl
cmp
xchg
mov
pop
xchg
jno
imul
or
sbb
lcall
jg
cmp
dec
sbb
js
test
cmpsl
cmp
mov
mov
icebp
cmpsl
arpl
mov
ljmp
shlb
movsl
or
out
jge
faddl
push
call
fwait
mov
paddd
push
pop
mov
bnd
mov
pop
rcrb
pop
dec
dec
mov
jmp
js
jnp
outsb
inc
insl
jge
push
xchg
leave
loop
push
clc
loopne
pop
decl
or
jg
mov
stos
int3
push
test
nop
insl
std
mov
mov
in
push
jno
cmp
scas
mov
stos
js
push
xchg
sbb
testb
mov
sbb
mov
ss
stc
dec
pusha
cmp
loopne
dec
mov
mov
out
sbb
xchg
mov
shlb
pop
fwait
test
xor
lcall
int
xor
fs
divb
mov
xor
and
aas
cld
mov
shll
adc
jg
mov
xor
sbb
lds
iret
rorb
xor
dec
test
hlt
pop
cmpsb
out
xchg
pop
mov
test
loop
lcall
jp
call
mov
cmp
xchg
cld
jns
adc
mov
lock
clc
jo
outsl
imul
fdiv
push
les
pop
dec
xchg
cmp
je
add
sarb
pop
mov
or
mov
imul
nop
pop
hlt
lcall
and
or
das
pop
push
mov
adc
int
mov
push
sub
rclb
sbb
inc
xor
xor
xor
sub
cmp
icebp
call
fildl
jae
jb
or
rsm
xlat
aad
mov
lahf
dec
pop
pop
fwait
pop
xor
xor
mov
inc
lcall
and
cmp
mov
in
sub
lcall
lahf
cmc
in
or
fs
stos
mov
adc
mov
sysenter
sub
pop
xchg
or
cmp
xor
lods
test
jbe
fwait
push
out
push
sub
adc
mov
xchg
adc
in
jecxz
call
ja
mov
pusha
clc
test
add
and
sub
fisubrl
shll
ja
adc
sbb
cld
movl
pop
push
in
mov
out
fimull
sbb
ret
test
enter
dec
jae
loop
imul
cli
test
std
pop
inc
outsb
sub
xor
jg
movsl
testl
xchg
mov
sahf
bound
outsl
imul
jle
cld
xchg
into
cmp
xor
test
negl
fdivrl
xchg
out
or
adc
imul
pop
test
xchg
mov
std
push
pop
sub
mov
xlat
leave
xor
dec
and
lret
sub
std
sbb
bound
or
movsl
in
push
jae
jmp
test
bnd
mov
movsl
jo
inc
subb
pop
outsb
adc
jle
out
sahf
dec
in
cwtl
ss
notl
push
lahf
sub
inc
addr16
xchg
mov
pop
ret
shll
xor
ja
leave
pop
sbb
jl
push
movntps
add
rol
hlt
mov
mov
mov
std
mov
test
adc
das
and
imul
or
sub
adc
and
xchg
pop
scas
scas
mov
add
mov
sub
or
rorb
push
movsl
int3
xchg
aam
out
loope
inc
mov
and
xchg
sub
lret
adc
sub
cld
clc
cwtl
movsb
add
push
mov
xor
inc
lcall
ficompl
rorl
add
and
cmp
call
sub
outsb
add
imul
sub
sbb
popa
sbb
xchg
jae
out
push
addb
aam
inc
mov
inc
xor
aad
shlb
inc
nop
imul
scas
cmp
imul
sarb
iret
stc
or
repnz
jmp
jbe
dec
in
ljmp
push
jno
rolb
jmp
lcall
mov
push
idivb
pop
mov
iret
xchg
inc
pop
cs
ja
add
sub
cmpsl
add
or
or
inc
mov
xchg
push
inc
xchg
out
xor
shl
out
aas
sub
inc
int
jo
pop
sub
lcall
scas
dec
outsb
cmp
push
sbb
inc
add
subb
test
xchg
arpl
loop
mov
jmp
adc
inc
imul
dec
xchg
jo
or
divl
sbb
aaa
jg
mov
add
xchg
cltd
popf
je
dec
int3
and
inc
sbb
sub
jns
pop
hlt
dec
mov
sub
push
fcmovnbe
cmp
push
or
dec
les
imul
mov
jno
push
and
jp
cli
fcmovnb
shrl
mov
and
sbb
int3
mul
lea
or
inc
fcompl
adc
mov
jl
ds
push
jle
adc
xchg
inc
push
cmp
fs
jmp
mov
sub
aaa
xchg
jbe
std
mov
lds
ret
mov
mov
mov
lret
rorb
das
out
push
jb
mov
jl
repz
sub
jp
dec
jne
leave
mov
mov
jbe
add
movb
sbb
ja
xchg
decl
jnp
dec
data16
cmc
lock
test
xchg
sbb
xor
pusha
cmc
pop
mov
sub
mov
ret
or
ja
pop
mov
mov
lcall
scas
jbe
es
add
call
xchg
jmp
outsb
out
shll
jno
clc
jbe
test
mov
push
aas
xchg
test
enter
pop
test
push
pop
lcall
outsb
sbb
xchg
xorb
adc
loope
loop
xor
fnstsw
repz
rorb
icebp
xor
in
fisttpl
mov
and
icebp
jecxz
fucom
rorl
xor
fildll
sbb
push
roll
sub
adc
jmp
push
dec
stc
cmp
aad
cmp
insl
cmp
rcll
loop
repnz
lret
mov
incl
int3
mov
insb
pop
loope
mov
out
mov
insb
jb
push
sarb
loopne
lock
lods
sub
or
adc
jns
out
adc
sbb
inc
pop
arpl
mov
xchg
pop
addr16
ficompl
test
mov
cmpsb
xchg
popa
mov
cld
insb
sub
dec
mov
pop
sub
cmp
sbb
in
mov
cmp
out
xchg
dec
xchg
pop
sti
add
and
test
ljmp
pop
add
inc
jns
je
mov
lcall
inc
mov
add
push
lock
adc
cwtl
cmp
outsb
jbe
setbe
frstor
stos
out
lds
mov
in
xor
bound
mov
test
lea
pushf
lret
dec
into
scas
imul
sub
mov
out
loope
loopne
int
inc
idiv
sbb
push
jns
loope
gs
fisubrl
jae
insl
aam
hlt
lcall
mov
testb
lock
mov
mov
leave
movsl
out
jno
sahf
xchg
cld
xchg
pop
jb
je
and
imul
fidivs
jo
cmp
cli
inc
pop
pusha
in
jmp
insl
jl
sbb
mov
mov
pop
fs
sbb
jl
scas
lahf
leave
std
mov
add
cld
xchg
aas
lods
xchg
xchg
sbb
xchg
mov
int3
popl
mov
adc
mov
jbe
fcomip
xchg
dec
xchg
or
jge
push
dec
mov
outsl
sti
dec
pop
fcomps
into
loop
xor
xchg
inc
loop
add
test
and
pop
push
sti
mov
hlt
sbb
push
aaa
inc
loope
addr16
dec
mov
lea
pusha
aaa
and
dec
jb
cmp
gs
push
adc
sub
jmp
repz
pop
sti
test
arpl
pop
jae
dec
lret
loop
sub
jno
mov
push
xrelease
fstps
and
mov
pop
dec
cli
mov
mov
xor
mov
xor
cmpsl
imul
jg
push
fadds
sbb
fs
sub
repnz
int
ss
sarl
and
mov
sarb
mov
mov
cmp
in
sub
out
insb
mov
test
or
dec
test
test
popa
dec
mov
fists
xor
out
cwtl
gs
fcom
daa
mov
stos
popf
movsl
push
popf
or
xlat
add
popf
and
jmp
inc
out
mov
stos
xchg
push
jns
scas
pop
jecxz
adc
push
into
adc
sub
xchg
xor
ds
rolb
or
dec
notb
and
jno
iret
dec
xchg
mov
test
into
outsb
mov
sub
dec
mov
rcl
out
mov
or
ss
test
cwtl
sbb
test
shrl
xor
mov
mov
add
mov
inc
lock
pop
ret
data16
push
pop
lods
imul
mov
jnp
add
and
mov
enter
faddp
dec
sbb
aaa
adc
and
jmp
fidivs
pop
sub
ret
insb
out
lds
insb
shll
in
dec
inc
das
sahf
mov
mov
adc
mov
adc
inc
imul
movsb
push
int3
scas
or
test
jmp
xor
sub
fiadds
cmp
mov
jae
inc
das
inc
lret
addr16
das
add
cmp
mov
fimuls
push
push
push
subps
fidivrs
jp
rorl
add
pop
inc
test
jb
cmp
adc
sbbl
xchg
inc
cmc
ja
or
cmpsl
sbb
lcall
adc
sub
mov
cmpl
or
mov
or
icebp
xor
icebp
inc
xchg
adc
xor
stos
cmpsl
jecxz
mov
mov
std
xor
pop
call
push
dec
add
lret
inc
stos
scas
pop
push
adc
insb
push
and
mov
jl
sbb
icebp
push
lret
out
xor
pop
jo
jnp
lock
jbe
xchg
in
inc
push
ud2
ret
imul
push
aas
jb
jbe
pop
inc
cmp
imul
mov
rclb
adc
movsl
pushf
push
cltd
ss
cs
cmp
ljmp
mov
leave
out
aaa
out
loopne
stos
pusha
sysexit
into
scas
cmpsl
adc
adc
fcomip
xlat
pop
mov
pop
add
popf
cli
sub
sarl
mov
into
cltd
cs
xchg
daa
adc
arpl
popf
in
fstpt
imul
dec
mov
test
mov
loop
imul
push
mov
rorl
inc
jecxz
pop
subb
jae
and
ljmp
mov
test
mov
in
fbld
mov
ds
cs
pop
rclb
cmpsb
ret
jo
push
mov
xchg
fcompl
jae
dec
jnp
sahf
leave
pop
push
mov
test
test
clc
jg
jbe
xchg
outsl
iret
jns
sub
fdiv
fidivrs
aas
xor
push
and
mov
inc
int
xlat
mov
pop
push
in
lds
das
xlat
stc
movsb
jmp
sbb
cs
lock
mov
xor
mov
stc
fnstcw
insl
adc
sbb
popf
push
std
sbb
add
xor
cmpsl
ljmp
xchg
inc
mov
jne
out
sub
inc
push
adc
jecxz
hlt
out
add
lds
push
es
jmp
std
filds
mov
sub
sub
xchg
adc
mov
xor
mov
pusha
aas
stos
mov
pop
inc
lret
loop
lret
jns
jo
inc
inc
mov
ret
mov
jnp
rolb
int3
adc
inc
mov
jl
mov
movsl
out
and
adc
leave
or
or
add
cld
xchg
mov
xor
popa
or
out
cmp
push
shlb
xor
jl
aas
cmp
subb
shlb
sub
mov
sbb
shrb
mov
inc
and
ljmp
push
jns
mov
je
cmp
xor
fsts
icebp
ficoml
xchg
call
dec
das
ss
leave
dec
rol
xor
mov
add
inc
xchg
insb
adc
mov
xor
and
or
sahf
fadds
sub
or
dec
test
push
test
subb
shlb
xchg
mov
push
jg
mov
push
and
mov
or
lods
adcl
mov
mov
xor
in
cmp
xchg
push
mov
mov
dec
xorb
xchg
ficoms
push
dec
sbb
pop
insb
mov
add
pop
push
jmp
pop
iret
int3
sub
cmp
pop
sbb
xchg
mov
lock
sar
test
outsb
jb
shr
sarl
pop
pop
adcb
push
adc
xchg
mov
jp
mov
dec
push
hlt
testl
or
ficoml
adc
and
adc
fimuls
sub
jo
inc
mov
mov
xor
cs
push
je
mov
pop
pop
mov
aam
fcmovnb
mov
pop
cmp
xchg
mov
test
divl
xchg
aaa
pop
inc
fwait
inc
xor
aas
xor
out
xchg
call
lods
fs
dec
mov
outsb
imul
mov
ljmp
add
and
jne
xor
pop
add
sbb
jge
fs
mov
mov
push
mov
push
inc
xor
mov
push
in
dec
dec
jmp
js
xchg
out
loopne
and
mov
push
pop
int
pop
dec
mov
fcoms
pop
mov
jo
shr
mov
ja
mul
data16
xchg
adc
fwait
adc
push
sub
inc
lds
sar
dec
cs
cmp
insl
out
es
test
fnstsw
lods
dec
cmp
dec
ds
mov
popa
mov
addb
inc
inc
notl
jns
stc
xlat
fimull
arpl
pop
orb
inc
push
fs
int
icebp
filds
out
das
lods
push
imul
pop
int3
sahf
inc
outsb
lahf
fsubrl
mov
sub
lahf
cmpsl
or
sti
add
jno
dec
push
fs
aam
and
dec
out
negb
dec
cltd
inc
ja
orb
loope
jbe
int3
outsl
pop
or
push
fldcw
mov
lds
vhsubpd
addl
dec
xchg
mov
mov
popf
push
push
lods
sarl
mov
mov
jnp
push
xor
jle
cmp
or
pop
add
xchg
adc
ret
dec
pop
xor
adc
lea
stos
insl
adc
mov
popa
mov
dec
inc
sub
inc
pop
sub
dec
test
jo
adc
inc
inc
lret
pop
xor
adc
pop
lods
clc
add
test
mov
adc
pop
insb
pop
into
bnd
push
in
lret
jne,pt
xchg
in
inc
xor
shr
lock
arpl
adcl
fst
roll
test
push
leave
clc
or
stos
scas
pop
call
popa
or
std
mov
jb
jnp
icebp
aad
out
mov
sbb
testb
addr16
mov
mov
adc
cltd
fs
push
adc
pusha
pop
testl
jp
dec
out
stos
jo
aaa
dec
mov
sbb
jbe
loop
sbb
into
jno
ljmp
sub
mov
jnp
out
cmp
cmp
mov
adc
ret
jno
mov
sub
mov
mov
adc
push
sar
lcall
and
xor
push
mov
jmp
into
mov
push
int3
dec
mov
sahf
dec
xchg
jg
mov
pop
sbb
sahf
addr16
cmc
stos
fists
and
sbb
mov
sub
mov
sub
mov
clc
xor
loope
icebp
fsubr
xor
int3
fcmovu
lods
fidivrl
xor
fisubrl
inc
or
sub
imul
pop
pop
es
js
dec
push
and
out
jno
add
rcl
int3
add
and
jne
andl
fidivrl
lods
xchg
dec
jae
push
sbbl
adc
push
hlt
andb
mov
addr16
sbb
aaa
cmp
int
and
cmc
jp
ds
cmc
mov
dec
fcomi
scas
mov
jnp
dec
xor
xor
cmpsb
mov
shlb
dec
hlt
push
pop
sbb
mov
popf
and
jae
mov
xor
cmp
mov
subb
and
pop
cmp
dec
pop
dec
addr16
loopne
testl
orb
aad
xchg
out
push
push
faddl
out
fldenv
jo
mov
jbe
xor
cmp
arpl
push
cli
push
mov
push
dec
cmpsl
jmp
repnz
das
inc
xchg
sbb
xor
push
rorb
sbb
pop
sub
xor
xorl
dec
cmp
jle
mov
pushf
shll
outsl
leave
or
mov
push
stc
and
push
jle
pop
and
bound
idivl
fidivrl
jo
push
into
jecxz
mov
sti
add
and
mov
inc
mov
push
sbb
add
xchg
ljmp
daa
loop
push
js
adc
mov
pop
jecxz
jl
shrl
in
or
xchg
lcall
push
or
mov
aam
test
pusha
push
test
xor
jns
loopne
popa
clc
fdivl
rorb
enter
cmp
ja
add
pop
mov
aad
std
jmp
cld
pushf
insb
cli
js
jle
mov
pop
mov
inc
lods
xor
fnstcw
test
pop
xor
scas
add
xchg
push
aad
hlt
icebp
cmp
gs
push
insb
data16
outsb
jo
loop
in
mov
pop
mov
xor
fdiv
mov
mov
fists
insl
cmpsl
add
addr16
ss
rep
paddb
ror
add
stos
push
jnp
dec
add
sbbb
xor
test
jae
fbstp
or
scas
and
movsl
sub
into
pushf
xchg
adc
inc
stc
cmp
and
pusha
into
imul
inc
cmpsb
faddl
sarb
jg
cmpsb
addr16
inc
add
in
aam
jns
je
mov
mov
jb
xor
push
mov
mov
dec
cltd
pop
dec
scas
mov
sub
mov
add
shrb
cwtl
cmpb
pop
movsb
cmpsl
and
je
mov
aaa
mov
adc
mov
aam
rorb
mov
xchg
int3
dec
pushf
dec
xchg
adc
adc
pop
push
mov
fucomip
mov
jns
movsl
xor
popf
movsl
ficomps
mov
sbb
call
fisubl
int3
sbb
cs
cmp
orb
sub
out
cld
iret
adc
dec
dec
sbb
test
insl
mov
pop
add
jae
stc
xchg
movsl
inc
sub
add
ljmp
or
mov
xchg
jl
jo
mov
pop
imul
cmpsb
pop
daa
push
fdivl
fsubl
cmp
out
lahf
in
and
mov
adc
sub
pop
nop
fidivl
popf
mov
imul
and
or
or
gs
or
fs
stc
inc
sub
jg
add
sub
inc
mov
out
xor
and
sbb
push
mov
and
adc
sahf
stos
adc
sub
pop
mov
mov
movl
add
inc
rclb
push
jmp
lret
test
stos
stos
cmp
pop
lods
ret
fisubl
adc
and
int3
or
pop
push
cmp
pop
jne
int
mov
push
or
push
or
push
jecxz
mov
sbb
aam
dec
fistl
repnz
bound
fistpll
xchg
hlt
push
les
gs
xor
test
adc
loope
xchg
sub
mov
decb
cmp
loopne
adc
jbe
shl
and
leave
dec
sub
mov
aas
aad
pop
mov
in
push
into
and
stos
jmp
int3
xchg
call
cs
sub
test
sub
popf
lea
xor
add
sahf
xchg
xor
add
or
pop
lret
stc
out
jmp
pop
popf
mov
push
jns
cltd
dec
push
add
cwtl
or
into
and
jecxz
std
adc
cmpsl
sub
push
add
jns
push
aaa
loop
aas
lret
je
cld
flds
js
cs
in
mov
cmp
sti
dec
sbb
addl
cmc
jge
lret
pop
dec
add
xor
out
and
fadd
insb
add
jnp
xchg
mov
in
mov
andb
and
lcall
dec
outsb
sahf
xorl
pop
incl
fidivrs
and
mov
into
mov
jmp
leave
push
mov
mov
xchg
push
push
pop
and
sub
sbb
stc
lea
mov
sbb
popa
inc
movsl
das
pop
fsubrl
jmp
insl
cmp
cmp
dec
adc
xchg
mov
xor
clc
nop
cltd
add
cmp
sub
sbb
pusha
xor
jo
mov
push
mov
jg
pop
mov
mov
cmp
cmp
jo
ret
adc
cmpsl
sbb
push
jg
shrl
and
add
xor
and
ds
stc
out
stc
sbb
cmpsl
in
pusha
and
add
and
push
push
ret
jb
and
cmp
jge
push
test
in
dec
xchg
adc
push
ja
ret
fbld
fisubrs
inc
pop
mov
mov
xlat
gs
into
int3
add
fstpt
xchg
push
jae
inc
mov
cli
hlt
inc
aas
xchg
add
and
insl
stos
jae
mov
xchg
pushl
int3
in
inc
jno
notl
pop
cmp
scas
mov
fcomps
pop
and
jecxz
pop
push
hlt
mov
xor
cmp
or
add
mov
xor
aas
pop
inc
jbe
pop
jecxz
mov
hlt
hlt
lods
mov
popa
xchg
rcrb
push
hlt
mov
sub
insb
hlt
ret
adc
sub
fldt
mov
jp
add
and
and
cmp
sahf
lret
imulb
icebp
mov
out
loop
pusha
xor
mov
hlt
fidivrs
jb
insb
movsl
mov
les
jge
test
fwait
pop
ss
inc
jmp
sub
pop
out
xchg
cmp
es
das
ss
push
rol
divb
mov
ror
loope
xor
hlt
mov
mov
add
dec
push
imull
sbb
push
ds
dec
dec
mov
cltd
mov
movsb
fcmove
adc
stos
leave
aaa
push
sarb
pop
mov
pop
push
dec
mov
cmc
shl
jbe
mov
or
or
inc
bound
mov
dec
mov
inc
cmp
lods
sbb
mov
addr16
inc
xchg
insb
dec
iret
adc
dec
or
mov
xor
push
sub
loopne
rorl
cmp
pop
into
aaa
sbb
add
rcrb
or
dec
scas
daa
cmp
dec
test
cmp
or
mov
out
mov
dec
cwtl
nop
jmp
push
repz
xorl
inc
mov
lea
mov
popf
fidivs
xchg
aam
std
adc
fildl
lock
cwtl
ljmp
jnp
movsb
jo
dec
dec
pop
int3
jp
js
dec
sub
jg
test
fs
inc
loopne
dec
pop
push
imul
test
out
push
pop
push
xor
mov
adc
repz
pop
shll
into
dec
jno
or
or
push
jle
aam
xchg
sar
fcomip
xlat
lock
stos
scas
into
mov
sbb
fs
push
adc
cmp
mov
push
adc
cmpsb
outsb
popa
jmp
orl
jns
fsubs
or
out
ss
pop
push
mov
dec
aam
pushf
and
imul
xchg
sub
ja
push
cwtl
jle
pop
cltd
dec
clc
sub
inc
dec
and
nop
test
mov
mov
mov
fsub
mov
dec
push
imul
cmpsb
add
dec
loopne
pop
mov
cwtl
ja
ljmp
push
sbb
add
inc
icebp
push
mov
pop
mov
in
test
lfs
cmp
cmpsb
out
pop
and
add
jo
int
push
pop
sub
and
or
in
xor
stos
iret
cmp
shrl
rol
int3
popf
rol
shr
xchg
adc
aaa
imul
jl
lods
addb
inc
sbb
filds
xchg
ficoml
and
shlb
and
jmp
out
dec
cmp
xchg
das
pushf
lahf
dec
xchg
and
cltd
daa
repnz
push
xchg
clc
push
cmp
in
jae
inc
xchg
xchg
test
mov
push
sub
inc
cmp
gs
loop
notb
jmp
xchg
outsb
sub
mov
loop
rol
xchg
rol
dec
jl
test
addr16
push
bound
out
cwtl
ret
loop
and
or
jge
decl
add
addr16
pop
int
cmc
sbb
ret
xchg
jmp
adc
rcll
jno
add
ss
push
pop
call
mov
add
int3
push
xchg
popf
mov
imul
sbb
or
rcrb
sti
xchg
iret
rorl
mov
mov
jmp
or
je
mov
outsl
xor
mov
cmpsb
loopne
push
or
mov
sbb
fs
js
pop
cmp
outsb
push
and
jg
arpl
or
lret
icebp
mov
pop
dec
in
xchg
scas
jl
cmp
or
ds
xlat
movsb
add
jl
cmpsl
mov
nop
mov
imul
into
out
or
repz
cmp
and
add
adc
out
and
or
inc
jns
push
shll
sub
pop
lcall
xor
aam
out
test
pop
sub
orl
push
mov
mov
mov
adc
xchg
adc
mov
mov
fwait
cltd
out
sub
dec
cmpsb
mov
incb
prefetch
adc
mov
or
dec
negl
ljmp
lds
xchg
mov
lahf
inc
mov
cmp
ja
jbe
push
cmpsl
pusha
cvtps2pd
icebp
jp
cmpsl
fstpt
push
or
ret
sbb
pop
mov
data16
jle
mov
ficoml
sbb
negl
fstp
push
cmp
add
jbe
fucomi
pop
int
push
cmp
lods
outsl
sub
inc
gs
ficomps
xchg
add
lret
movsl
pop
sub
mov
shll
and
call
mov
dec
lcall
add
pushf
push
push
pop
stc
and
pop
lahf
js
les
cmp
push
mov
data16
ret
stos
mov
xor
aas
jecxz
pop
and
jnp
pusha
or
outsb
dec
js
cld
aam
pusha
xchg
lods
xchg
into
jne
or
imul
out
cmp
int
mov
sbb
icebp
xorl
ja
inc
push
dec
inc
push
and
mov
ss
fiadds
clc
popf
cmpsl
andb
xorb
std
loope
ljmp
xor
cmp
imul
push
cmc
push
lret
dec
pop
mov
loope
nop
enter
nop
cmp
dec
mulb
fdivrl
sbb
std
push
lods
int
addr16
je
cmp
sub
lret
test
cmp
dec
mov
add
gs
jecxz
push
in
dec
or
cltd
in
mov
add
sarb
pop
icebp
mov
mov
cmp
adc
add
sub
pop
and
push
mov
arpl
es
add
push
dec
or
js
nop
jae
lea
sti
jmp
mov
mov
xchg
pop
insb
and
scas
sbb
es
push
or
test
movsl
xor
pop
xor
repnz
cmc
mov
test
jne
jne
cmpsb
addr16
das
adc
cs
pop
fwait
add
cld
lret
into
insb
add
idiv
jge
jmp
pop
mov
dec
or
jnp
dec
inc
pop
sti
out
mov
test
jns
pop
das
pop
stc
xchg
sbb
rcl
aaa
nop
inc
xor
cmc
and
adc
lds
or
enter
movsb
data16
in
out
pop
inc
pop
fisttps
xchg
pop
popa
sbb
push
sbb
es
dec
repnz
stc
mov
inc
inc
cmp
sbb
add
jne
and
adcl
lods
into
in
xchg
incb
cs
adc
inc
aas
cmp
cmp
xlat
fsts
xchg
popf
dec
inc
cmp
jne
imul
rcrl
arpl
movsb
inc
ret
push
push
aad
push
add
jne
or
cltd
cmpsl
in
mov
push
pop
cmp
cmpsl
mov
test
mov
inc
sbb
fs
and
or
pop
or
jo
jae
or
cmp
popf
loopne
push
idivb
dec
das
xchg
push
jp
xchg
pop
xor
jecxz
dec
int3
cmp
mov
loope
stos
cmp
sub
mov
inc
add
sar
pop
pop
mov
pop
loopne
scas
orb
cmpsl
imul
mov
xor
dec
mov
insl
jp
fcomps
jb
push
jge
and
jo
push
xor
aaa
jne
xor
dec
ljmp
insb
jb
adc
or
jbe
jecxz
stos
lds
xchg
loope
fisubrl
into
jns
loopne
jmp
in
scas
mov
ss
pushf
sbbb
cmp
pushf
repz
mov
xor
mov
jecxz
jg
orl
xchg
mov
in
xor
push
mov
loope
aaa
cli
xchg
adc
mov
bound
or
lret
jmp
roll
bound
xchg
mov
sbb
cmc
push
jns
sarb
adc
cmp
lcall
cwtl
cmp
out
mov
dec
out
inc
out
jbe
xchg
push
sub
pop
lods
jnp
push
mov
push
in
sub
jne
js
xchg
push
clc
xor
loopne
out
in
jo
ffree
sbb
push
mov
jno
add
pop
or
xor
lahf
pop
je
fs
fmuls
dec
negl
pop
cmp
imul
lea
cmc
sub
sub
xor
jp
mov
mov
mov
xlat
xchg
xchg
push
push
pusha
dec
fnstenv
cmp
jl
mov
adc
test
mov
or
xor
mov
out
ljmp
jns
popa
jo
dec
xchg
sub
dec
repz
add
jg
call
cli
mull
daa
and
xor
jne
insl
mov
xchg
popl
nop
pop
and
sbb
pop
sbb
sbb
test
inc
std
inc
xchg
repz
adc
adcb
dec
in
movsb
adc
dec
cltd
cmp
out
insl
imul
lods
cmpb
or
mov
rclb
cli
xchg
scas
mov
cld
je
shll
lock
lods
xor
push
inc
notb
sub
adc
dec
xchg
sarl
in
arpl
adc
insl
mov
in
cmp
push
jnp
push
xchg
add
sahf
adc
mov
xchg
insb
mov
int
lret
push
adcl
out
fmull
dec
dec
mov
xchg
pcmpgtb
adc
call
lret
sbb
and
fistpl
sbb
dec
scas
adc
fimull
xor
and
fucomp
mov
sub
dec
lahf
pop
fstpl
or
aaa
sti
mov
push
dec
int3
aam
pop
sub
inc
iret
add
out
ja
rcll
fs
fistpl
daa
int3
negl
cmp
sbb
leave
stos
sub
mov
out
jae
mov
mov
pop
add
mov
adc
das
mov
call
out
pop
popa
mov
inc
movsl
cmpsb
jl
xor
sbb
sbb
daa
stos
mov
mov
cmp
xchg
fists
jecxz
test
adc
sbb
inc
and
insb
cmp
dec
xor
mov
push
jecxz
je
xor
enter
sbb
jle
push
add
xor
je
jg
adc
dec
test
lods
jle
nop
arpl
fwait
xchg
lods
ljmp
dec
bound
mov
xor
rol
cmp
lcall
rcrl
mov
add
pushf
rorl
inc
maxps
cld
push
inc
lcall
adc
mov
cli
aas
push
sbb
mov
stc
es
js
or
insl
out
push
iret
mov
int
insl
fadd
mov
jb
pusha
lods
icebp
and
fstps
in
add
test
mov
mov
loope
cltd
mov
add
ret
leave
and
call
mov
jle
add
out
lods
mov
clc
cld
push
insl
mov
out
cmp
adc
and
js
pusha
iret
cmpb
icebp
loopne
cmpl
icebp
add
cli
fwait
setg
jle
xlat
popa
scas
loope
mov
add
dec
pop
aam
shrb
lock
mov
mov
adc
inc
lock
jecxz
sub
ficoms
adc
dec
les
call
add
std
out
mov
add
or
imul
dec
dec
xor
dec
pop
pusha
lahf
jg
push
ss
jo
xchg
pop
hlt
or
test
adc
in
mov
xlat
push
subl
mov
stos
outsb
or
pop
mov
aas
loope
je
lahf
scas
lea
lods
sub
bound
ljmp
mov
into
cltd
adc
mov
and
fsubr
adc
gs
mov
dec
mov
jmp
cmpsb
push
jle
inc
dec
dec
iret
mov
sbb
lret
leave
ds
push
enter
loope
xchg
mov
data16
xchg
and
xchg
add
notb
movsb
inc
jb
clc
stc
mov
insb
adc
sarb
gs
mov
ret
cmp
sub
mov
pop
jmp
mov
pop
xchg
push
iret
mov
dec
xchg
dec
out
xchg
dec
ret
inc
fisubl
inc
jp
enter
mov
push
mov
out
adc
xchg
xor
inc
int3
sbb
push
inc
in
pop
addr16
sbb
je
sub
mov
lret
lcall
jae
mov
rcrb
dec
sub
fadds
jno
gs
push
jnp
jb
or
orb
repnz
imulb
xor
mov
pop
cmp
pop
arpl
jmp
inc
mov
push
ds
dec
shll
dec
push
mov
push
add
jecxz
int
lcall
pop
jmp
ss
dec
mov
inc
xchg
js
jge
cs
outsl
and
adc
cmp
rcrb
aas
add
push
pop
in
mov
mov
es
ljmp
xchg
cmp
xchg
rcll
or
jle
mov
jns
push
adc
outsl
adc
mov
repz
popa
mov
cmp
ja
out
sbb
notl
mov
cmpsl
jnp
jle
sbb
fwait
cmp
rol
push
xchg
or
push
lods
add
adcl
inc
xchg
pop
insl
ret
lcall
mov
in
add
stos
repz
push
lea
push
sub
push
dec
adc
sub
imul
cmp
scas
rorl
push
or
lret
clc
imul
sub
mov
jge
std
shrb
xor
ret
inc
arpl
mov
fstps
or
orb
aad
aaa
mov
mov
sbb
jb
subl
push
adc
sub
xor
mov
push
adc
cmp
inc
stos
ds
lret
jae
mov
push
dec
pop
mov
outsl
cmp
sbb
mov
fs
lods
mov
jg
hlt
cwtl
lods
push
fmul
sub
repnz
mov
inc
adc
xor
pop
fdivrs
rcrl
xor
decl
in
sbbb
repz
xor
out
sub
sub
int
xor
jbe
call
iret
lret
pop
xor
mov
dec
xchg
jmp
into
add
jno
loopne
mov
or
test
xchg
push
les
cld
cmpl
mov
jle
pop
push
fwait
push
mov
inc
push
dec
or
faddl
cmpsl
addr16
jl
sub
sub
scas
xchg
xor
push
bound
cltd
pop
or
outsl
jecxz
jg
pop
cld
movsl
jle
xchg
mov
inc
daa
ljmp
push
cld
mov
or
test
cmp
lods
dec
jge
js
lret
sahf
sub
pop
and
adc
sub
mov
mov
cs
jl
mov
cmp
orl
push
xor
mov
movsb
adc
xor
xor
push
add
hlt
push
push
sbbb
mov
test
jnp
xchg
pop
fcomps
push
mov
js
jge
or
stc
cmpsb
add
push
fiadds
subb
mov
sub
mov
push
push
add
xchg
dec
or
lea
mov
xchg
repnz
je
repz
xchg
cmpsb
dec
add
mov
and
and
mov
mov
test
sahf
insb
inc
rolb
mov
das
inc
jae
mov
jp
sti
mov
fdivr
jg
fidivrl
pop
aad
aam
push
sbb
subl
gs
sbbl
sbb
arpl
outsl
add
fwait
sub
mov
jns
int3
and
mov
fwait
jle
testb
inc
or
movsb
sti
jp
or
xchg
add
mov
shl
enter
xchg
enter
ljmp
inc
mov
xchg
sbb
push
mov
shl
xchg
in
aam
repnz
nop
push
stc
mov
leave
int3
and
int3
or
add
cmpsl
sub
je
xchg
pop
pushf
adc
mov
xor
les
dec
negb
jp
in
test
jle
xchg
loope
idivl
in
and
dec
sbb
add
sarb
inc
lcall
fidivs
mov
sub
mov
daa
nop
shll
dec
ret
push
mov
or
mov
xor
testb
cwtl
mov
aaa
insb
rcrb
hlt
test
mov
cmp
mov
shl
xchg
aad
mov
andb
jge
enter
sti
mov
lcall
push
aam
lods
cltd
pop
cmpsb
jecxz
dec
mov
fs
ja
out
pop
into
jne
jno
imul
pop
pop
dec
ljmp
dec
or
xchg
mov
fiadds
shl
xchg
daa
pop
adc
ljmp
out
jp
adc
pop
popa
adc
cwtl
mov
outsl
cmpsb
int3
fwait
adc
mov
sbb
pop
mov
subl
sarl
inc
pop
dec
movsb
push
adc
enter
shl
pop
xchg
mull
in
inc
aad
sub
mov
pop
xorb
cli
out
or
xchg
or
imul
imul
pop
cmp
jo
ss
cmp
sarb
jecxz
add
js
jge
jle
jg
mov
imul
add
push
out
push
pop
out
mov
xchg
fnsave
jns
lds
and
and
push
jg
in
jl
arpl
fbstp
das
adc
jnp
mov
popf
into
mov
movsb
rclb
fstpt
orl
insb
sub
mov
inc
popf
push
test
pop
mov
sbb
cltd
aaa
sub
inc
fdiv
push
mov
lods
je
mov
test
add
movsb
push
mov
andl
lcall
bnd
pop
mov
jle
pop
js
nop
xorl
mov
cs
rol
pop
pop
ret
adc
gs
xor
mov
shlb
aam
push
ret
loop
mov
mov
rcll
pop
mov
xor
and
mov
gs
and
adcb
mov
cwtl
or
es
push
lahf
or
fstps
jmp
ficoms
cmpsl
in
or
or
mov
andb
fwait
mov
inc
leave
mov
jmp
mov
subl
insb
mov
jns
push
ss
push
push
dec
sti
scas
addr16
mov
sub
repnz
out
adc
mov
sub
lock
push
xor
mov
mov
jl
inc
call
jp
movb
sbb
in
fnstcw
stos
xor
jp
aas
aas
insb
fs
and
push
mov
ret
ljmp
dec
lahf
addr16
aas
shl
int3
out
mov
inc
push
out
in
stc
cwtl
call
test
cmpsb
cli
lret
lret
ret
lea
call
pop
or
mov
and
movsl
adcl
test
popl
cmp
xchg
data16
mov
cmpsl
mov
aad
and
rcrl
xorb
js
cmpsb
sub
in
lea
aad
pop
inc
xchg
xor
push
shll
inc
sbb
xor
enter
cli
mov
mov
mov
flds
shrl
xchg
out
jecxz
and
imul
in
cmc
sbb
aaa
test
lcall
clc
cmp
std
adc
movsl
lds
cld
dec
push
lea
stc
mov
mov
jle
add
pop
lret
cmc
cmpsl
popl
ja
arpl
rcrb
jnp
push
cmc
pop
sbb
sub
jecxz
cli
jb
cmp
fisttpll
mov
das
sarb
jge
cmp
push
dec
stc
sub
fldenv
fsubs
call
and
jl
fnstenv
push
insl
out
cmp
pop
mov
subl
in
mov
lods
and
fptan
mov
aad
xlat
sub
xor
push
notb
lods
dec
xchg
lods
pop
lods
cmp
fnstenv
mov
rcl
fsts
inc
add
int3
call
out
xchg
movsb
fcoml
in
sub
dec
jg
cmp
xchg
in
aaa
sub
jo
cmp
nop
xchg
cmc
pop
jne
fdivl
aaa
fwait
shll
cmpsl
cmp
dec
sub
sahf
jle
mov
stos
stos
and
jno
and
or
and
movsb
imul
in
daa
xchg
loop
test
aaa
jle
loope
test
adc
mov
jle
mov
loope
xor
pop
dec
xor
or
pusha
std
or
sbb
and
lds
hlt
idiv
and
mov
hlt
jp
test
scas
ret
mov
jl
and
loopne
mov
jmp
testb
jle
sub
sub
pop
jo
xor
jle
mov
mov
mov
cs
sub
mov
dec
and
sub
dec
popa
push
mov
inc
pop
mov
jo
dec
jnp
mov
mov
fucomi
pop
dec
test
lods
mov
adc
jb
fcmove
xlat
xchg
mov
push
je
push
icebp
and
subl
and
push
int
test
insb
test
push
mov
xor
adcb
jmp
sahf
leave
aaa
test
mov
push
testb
inc
out
fnsave
inc
repnz
addr16
sub
or
add
iret
xchg
dec
shlb
les
pusha
outsl
outsb
ss
mov
in
and
cmp
fnstenv
sbb
pushl
mov
aad
js
loop
xor
dec
xchg
sub
add
int
scas
push
inc
rorb
mov
inc
sahf
loop
in
arpl
jnp
aaa
lahf
loope
xor
adc
lock
dec
in
inc
push
roll
shl
and
or
stos
mov
pop
imul
xchg
adc
fs
lret
mov
lret
test
xchg
pop
jg
in
mov
mov
inc
mov
ret
clc
add
out
jmp
pushl
test
shrl
andl
jge
pop
cmp
add
or
mov
mov
aam
sbb
shlb
mov
xchg
mov
mov
dec
in
out
push
push
push
pop
test
lea
push
mov
sahf
lds
ret
imul
ficoml
add
xchg
add
mov
dec
dec
adc
mov
je
shl
xchg
push
mov
push
and
or
adc
jbe
sub
push
inc
push
bound
jae
adcl
pop
imul
dec
push
test
fwait
stc
sub
inc
ret
jne
rorb
jg
outsb
push
mov
jge
popf
or
pusha
fsubr
lea
fisubs
shrl
movsl
sbb
lock
outsb
lock
xchg
jge
mov
sbb
rcrb
or
lahf
vpunpcklwd
rcl
push
orb
out
aaa
push
xchg
jo
sub
stc
xchg
ljmp
cmpsb
rol
add
iret
push
sbb
mov
imul
xor
cld
xor
jecxz
in
cmp
adc
insb
jne
out
push
xchg
lods
faddp
imul
adc
shll
rcrb
popa
push
lret
jmp
mov
mov
push
inc
lods
push
add
mov
ja
xchg
push
inc
fldenv
pop
cwtl
sbb
mov
cmp
or
jb
sbb
pop
mov
jo
mov
outsl
popa
mov
and
xchg
data16
push
push
mov
inc
mov
cmpb
cmpsl
cmp
addr16
push
xor
andb
jmp
mov
push
mov
cmp
mov
std
inc
sbbl
testl
jle
pushw
jmp
scas
pusha
jp
loop
pop
xor
gs
cli
sbb
cmp
repnz
pop
sbb
in
mov
adc
push
cmp
orl
xor
sub
cld
loope
xchg
mov
add
xlat
in
outsl
rcrb
push
lods
aas
loopne
fistpll
mov
xchg
xor
inc
dec
inc
mov
sub
cmp
test
mov
cmp
dec
jno
addl
andl
out
js
shr
dec
jns
push
xchg
fildll
and
inc
pop
testl
push
test
dec
jns
fs
das
cli
scas
clc
inc
incl
sub
shrb
ljmp
aad
ds
into
clc
test
icebp
out
add
mov
daa
fists
out
clc
push
add
mov
xor
cmp
mov
sub
push
add
in
sti
mov
and
pop
repnz
mov
add
sahf
push
push
pop
push
jl
pop
aas
rorb
je
mov
jge
in
pop
push
repz
adcl
sbb
pop
jbe
xor
leave
push
imul
int
jmp
pusha
gs
in
sbb
leave
or
imul
adc
mov
hlt
movsb
xchg
xchg
dec
inc
sub
lcall
inc
mov
dec
popa
push
add
push
lret
les
xchg
xchg
dec
or
test
cmp
jno
fnstsw
rolb
dec
int3
test
mov
jae
dec
test
jae
inc
xor
aaa
fmulp
dec
cli
dec
sbb
mov
iret
repnz
enter
sub
addb
cmp
mov
mov
sub
push
or
or
jne
data16
out
push
in
inc
mov
cmp
inc
pusha
xor
cwtl
push
mov
and
jnp
mov
adc
data16
mov
jecxz
cmpsl
inc
sahf
mov
call
or
xor
dec
push
and
and
mov
xor
out
ljmp
pop
mov
dec
test
ret
in
jp
aas
mov
loope
xchg
add
and
lods
cmpsl
mov
les
pop
fistps
enter
js
or
pop
leave
stos
sbb
std
movsl
aad
adc
lret
xor
mov
jb
fisubl
sub
ret
int3
test
sahf
in
das
xor
xchg
cltd
sarl
daa
xor
jno
test
sbb
aas
gs
je
in
ja
push
sub
ja
mov
cmp
es
rcrl
ss
pop
push
add
stc
push
jle
inc
add
cld
cmp
push
pop
dec
push
mov
in
popa
pop
cmp
mov
repz
pop
jmp
fwait
arpl
rcl
sbb
dec
jno
das
sub
or
pop
xchg
fistpl
sub
adc
push
push
add
sub
lret
cmp
dec
setae
sahf
push
mov
add
pop
outsl
inc
add
or
out
mov
mov
cli
add
xor
in
xchg
add
mov
jno
lret
jmp
sub
adc
and
mov
xchg
and
xchg
gs
insl
loop
sub
dec
adc
ja
sbb
movl
add
sbb
jo
ja
cmpsl
mov
pop
loopne
mov
push
sbb
push
das
fs
sub
or
insb
jbe
mov
int3
notl
fisubrl
inc
test
dec
pop
loope,pn
sarb
mov
movsl
fmul
lahf
mov
js
mov
arpl
jb
popf
jp
out
js
sti
mov
sub
std
cs
cmp
popf
pop
sub
jge
and
movd
jle
mov
jo
lahf
fists
mov
xor
into
dec
popa
jecxz
out
jl
aaa
adc
xor
out
adc
std
or
xchg
xchg
inc
pop
push
pop
movsl
fisttpll
mov
popf
in
jmp
mov
mov
adc
jbe
mov
loopne
shll
popa
test
lcall
out
fadds
or
lods
lods
inc
jne
jle
and
data16
out
push
push
jecxz
jae
lods
adc
mov
movsl
add
fcoml
pop
test
js
stos
testl
push
lcall
mov
das
movsl
jge
jne
inc
pop
test
xchg
add
sti
mov
sti
ljmp
mov
movsl
jns
sbb
add
fcmovnb
les
xchg
out
insb
fildl
xor
push
sub
repz
sbb
mov
fistl
push
das
sub
into
aad
ds
dec
test
or
cmp
sub
mov
pop
pcmpeqw
mov
xor
cltd
cs
cmp
popa
pop
out
fld
dec
movl
icebp
scas
dec
pop
movsb
sub
mov
nop
lret
loope
mov
test
jle
push
shll
aaa
out
std
xchg
stos
push
mov
push
mov
sub
popa
les
and
test
fs
and
imul
lock
push
scas
loop
adc
loop
out
jne
stc
mov
es
push
std
mov
push
out
dec
ds
sti
xor
daa
mov
call
mov
mov
xchg
xor
fwait
in
in
adc
insl
fists
adc
les
addr16
je
jnp
stos
add
movsl
pop
jp
cli
lret
sbb
fistps
cmp
inc
pop
inc
jg
sub
testl
insb
clc
mov
mov
notb
pop
repnz
push
mov
fcompp
inc
sub
sub
push
adc
xlat
fidivrs
insl
or
lret
and
sub
cwtl
inc
xchg
adc
jecxz
fists
push
call
stc
leave
lcall
pop
mov
mov
les
mov
cmp
adc
in
jno
jmp
xchg
jle
ljmp
shll
repnz
bound
in
push
int
jae
pop
lock
sbbb
push
add
scas
pop
inc
in
mov
ja
mov
dec
iret
mov
ret
or
in
add
dec
sub
mov
xchg
jl
xchg
mov
push
jmp
xlat
dec
ret
into
lret
pop
xlat
cmpsb
mov
dec
bound
push
pop
adc
adc
movsl
sbbl
push
cs
out
jg
in
sahf
je
add
lock
test
xor
lea
outsl
out
xlat
test
add
push
hlt
dec
mov
sbb
or
xor
imul
and
push
pushf
sbb
insl
push
mov
ret
add
pop
push
xchg
popf
int3
scas
and
popa
or
or
and
inc
ret
addb
in
nop
shrb
test
mov
pop
dec
xchg
test
out
dec
les
lret
pop
into
movsb
mov
push
jl
subb
and
inc
mov
mov
add
cli
ds
push
jns
xlat
and
sbb
das
mov
imul
lock
push
sbbl
push
ret
and
stos
jnp
out
mov
ficomps
inc
lods
clc
pusha
xchg
gs
mov
popf
sbb
lds
jbe
movsl
xchg
or
adc
jns
dec
jb
mov
imul
movsl
pushf
mov
sub
es
lcall
mov
sbb
jecxz
fnstsw
icebp
ljmp
pusha
jnp
out
mov
inc
das
cmp
rclb
xor
push
push
sub
cmp
cli
mov
movsb
dec
mov
imul
pusha
sti
mov
mov
scas
pushf
int3
inc
imull
pop
mov
xchg
cmpl
inc
lret
mov
flds
gs
push
out
dec
fists
xor
push
cwtl
pop
loop
push
cmp
sbb
jno
pop
push
pop
mov
mov
xor
cmc
mov
fcmovb
enter
mov
pop
jge
xlat
xchg
test
cmp
push
clc
movsl
andb
mov
shll
pop
xor
mov
ja
clc
pop
aam
mov
mov
js
aad
leave
mov
aam
flds
mov
repz
pop
arpl
sub
mov
fldl
fistps
inc
adc
aaa
push
jge
sti
dec
or
scas
and
adc
dec
mov
cmc
cmp
dec
cmp
xor
push
mov
and
dec
lahf
sbbl
or
addb
mov
mov
inc
ja
push
mov
lock
das
sbb
iret
pop
adc
std
mov
inc
push
and
faddl
mov
mov
mov
clc
orl
aaa
push
frstor
mov
mov
cmp
subl
mov
push
sbb
inc
popf
dec
stos
push
sub
jne
ror
inc
sti
and
dec
call
mov
push
ja
jne
mov
inc
test
je
insb
xchg
outsb
mov
rcl
pop
in
jmp
fsubrs
pop
pop
lahf
jecxz
and
mov
bound
mov
jbe
mov
lcall
add
push
movsb
adc
pop
adc
fistpll
in
mov
sti
xchg
jo
fwait
decl
hlt
lds
movsl
push
xor
hlt
pop
and
push
dec
cmp
adc
fiaddl
insb
imul
frstor
clc
out
dec
fimull
stos
scas
mov
fstpt
sbb
or
or
sub
sti
testb
sbb
divb
or
fistps
dec
repz
loop
jns
mov
lods
add
aaa
mov
call
xor
sub
add
jne
adcb
add
sbb
jnp
jno
in
movsl
jae
mov
mov
push
mov
stc
ficoms
into
shrb
mov
xor
out
out
loope
xchg
sub
fwait
mov
imulb
imul
rcl
in
pop
rol
ljmp
sub
or
push
inc
lods
ret
repnz
ljmp
test
nop
int
jl
inc
arpl
or
push
in
sub
push
xchg
pop
xchg
mov
fimuls
out
pop
xchg
dec
inc
inc
stos
fmul
cmpb
test
sub
dec
repnz
pushw
into
xchg
or
jb
inc
push
leave
xor
mov
pop
mov
push
stos
iret
adc
inc
xor
sbb
fs
inc
cmp
sbb
popa
aad
or
fdivr
mov
cmpsb
inc
sub
sub
mov
push
or
stos
movsl
dec
dec
hlt
cwtl
push
dec
enter
mov
mov
adc
in
jp
xor
je
cmp
sub
or
movsl
jp
mov
cmp
push
cmp
js
lods
adc
ja
mov
or
and
addr16
lret
push
cmp
dec
call
inc
xchg
std
sub
adc
xchg
pushf
cmp
inc
insl
sub
xor
inc
cmc
mov
daa
lret
das
dec
aas
jb
xor
push
into
mov
mov
das
xchg
das
sar
lret
movsb
lock
adc
sbb
dec
out
dec
dec
ficoml
imul
outsl
push
out
add
fwait
loop
mov
xor
test
push
cmc
fisubrl
dec
jl
and
hlt
ret
add
dec
ret
fs
mov
fs
and
dec
jmp
loope
mov
movsbl
imul
xlat
push
test
out
sub
adc
das
push
mov
pop
push
pop
lret
inc
out
loop
push
dec
sbb
fistl
stos
sub
or
out
outsl
xchg
xor
sbb
cmp
push
les
mov
push
xchg
out
shrd
inc
push
repz
add
in
pushf
inc
pop
and
jp
ss
cmp
cwtl
push
lcall
cs
repz
push
pop
cwtl
adcb
gs
leave
insl
ss
dec
adc
lret
lock
xchg
add
inc
iret
jecxz
pop
mov
in
lret
xor
mov
sbb
fistps
and
jmp
imul
sub
aad
jmp
or
scas
pop
test
cmp
cltd
les
cmp
outsl
aam
xlat
out
hlt
mov
fbld
push
jno
ljmp
ret
pop
loopne
orl
in
push
cs
imul
xor
out
add
jb
cmpsl
shlb
add
jge
fsts
outsl
movsl
lock
jbe
in
mov
std
push
and
lds
and
xor
dec
mov
fidivrs
push
jno
mov
jl
lret
mov
shll
and
mov
push
xor
out
rcll
lods
jbe
inc
mov
or
jle
cmc
xor
roll
fsubp
paddq
into
xchg
pop
mov
add
push
or
fcompl
push
sbb
or
xchg
cwtl
xor
sbb
imul
leave
lahf
mov
pop
std
jmp
inc
insb
movsl
sub
pop
nop
fnsave
stc
insb
cmp
icebp
mov
mov
sub
stos
and
cmpsb
mov
xor
xchg
adc
jp
pop
ljmp
in
fsubrp
dec
cmc
xchg
std
mov
leave
aad
pop
mov
pop
jp
add
repz
cli
pushf
fadds
lahf
push
push
pop
cmp
xchg
aas
in
inc
xchg
sti
xchg
pop
sub
out
jne
lods
mov
outsb
dec
cwtl
mov
shlb
jg
shl
dec
and
mov
arpl
xchg
pop
sub
xor
push
jl
ror
mov
jge
cmpsl
int3
and
dec
call
sbb
xchg
ret
das
inc
or
mov
stos
mov
das
test
lret
add
pop
pop
pop
pop
adc
jbe
jle
mov
adcl
mov
and
jbe
lret
ret
pop
gs
mov
mov
mov
ss
inc
loope
mov
inc
pop
sbb
nop
ljmp
adc
ret
pop
mov
mov
imul
int
inc
loopne
mov
pop
dec
imul
cmc
xor
xor
test
pop
pop
mov
nop
pop
jp
adc
mov
mov
fs
cmpsb
inc
lcall
fcoms
outsl
in
push
lods
hlt
lret
lret
ja
lret
mov
xchg
cmp
xchg
dec
cli
add
pop
add
xchg
jno
scas
mov
stc
xchg
inc
pushf
xor
test
mov
in
cli
dec
into
mov
pop
adc
shrb
xchg
iret
addb
daa
popf
dec
std
fidivrs
jge
inc
incb
sub
and
push
add
xor
sub
int
and
fdivrs
arpl
jno
add
pop
nop
icebp
mov
add
push
and
mov
sub
pop
movb
or
and
sbb
ljmp
mov
mov
stc
scas
xor
mov
push
xor
jmp
imul
jnp
xchg
jg
lret
sub
dec
pop
push
push
aas
jmp
sbb
fdiv
aaa
addr16
out
or
shlb
xor
xor
xchg
mov
sti
fadds
mov
lret
jp
out
imul
xor
loopne
inc
test
fidivl
repz
rolb
jle
fidivrs
pusha
int3
pop
into
jp
addr16
jns
fs
popa
mov
adc
push
vprotb
aaa
or
lcall
mov
mov
push
mov
arpl
rcrl
fcomps
mov
mov
push
sub
int3
push
sbb
push
lahf
mov
movsb
and
das
lret
lds
jmp
sub
xchg
movl
or
xchg
lods
jbe
ret
sub
cmpsl
lods
fnstsw
and
fnstenv
test
sbb
and
cwtl
mov
lahf
bound
or
sub
roll
xchg
call
inc
push
and
insl
js
add
arpl
pop
xchg
pop
inc
mov
popl
pushf
cmp
repnz
add
aaa
sbb
mov
and
xor
dec
mov
sahf
cmp
or
push
inc
cmc
jecxz
xchg
pop
iret
pusha
and
std
js
mov
push
gs
adc
mov
idivl
xlat
jl
in
ficomps
pop
xor
pushl
cmp
rcr
jno
fldcw
shlb
cmp
iret
jge
aas
dec
jae
and
inc
xchg
and
or
hlt
les
push
jbe
in
sbb
ljmp
addr16
cmpsl
aas
xchg
repnz
push
in
pop
mov
mov
fmull
testb
scas
add
push
jo
push
pop
sub
sub
rcrb
push
outsl
sub
cmp
jecxz
push
dec
xchg
jmp
gs
xchg
jo
stos
jne
fcmovnb
jle
mov
sub
jg
fidivrs
cwtl
movsl
loopne
mov
xchg
xor
fdivrs
xchg
mov
shrl
or
push
aas
mov
ss
cmc
sti
les
imul
add
hlt
scas
mov
sub
jecxz
imul
movsb
add
add
inc
or
cmpsl
imul
pop
dec
jecxz
daa
mov
rorl
iret
pusha
imul
sub
aaa
cmpsl
cmp
lods
and
mov
mov
shrb
add
shll
cmpsl
pop
jb
pop
stos
mov
in
xor
les
inc
and
inc
arpl
sahf
in
jge
dec
aas
inc
lea
outsl
loopne
xor
mov
dec
int3
test
in
cwtl
xor
js
fs
jmp
xor
das
orl
outsb
and
arpl
test
mov
dec
and
or
mov
push
push
ljmp
imull
lods
pop
mov
and
xchg
icebp
push
jo
add
jb
mov
mov
adc
lea
jae
mov
mov
mov
stos
jo
gs
imul
in
jmp
sub
xchg
rorl
xor
jno
in
pushf
and
push
fwait
or
jo
mov
aaa
cmp
mov
out
sbb
jmp
sbb
mov
push
mov
aaa
dec
icebp
insb
pop
hlt
mov
jp
push
test
mov
cmp
mov
xor
inc
xor
je
popa
and
outsl
shl
call
or
adc
mov
push
jmp
and
or
push
lods
inc
or
sbb
incb
pop
mov
js
mov
add
push
and
test
icebp
push
mov
mov
mov
xor
loope
inc
sub
inc
fcomps
xchg
fdivrl
adc
mov
mov
mov
xchg
lods
or
cmp
pop
jns
jb
jns
movsb
imul
gs
bnd
xchg
and
fs
push
mov
iret
lds
dec
push
pop
imul
or
cli
dec
mov
negb
lds
fsubs
repnz
cmp
mov
xchg
sbb
shrb
jecxz
xchg
xlat
and
rcrb
insl
stos
pop
stc
jmp
pop
xchg
and
cmp
add
jge
jmp
sbb
stos
das
cltd
les
aaa
mov
lock
push
xor
pop
dec
fimuls
inc
mov
inc
shr
adc
sti
push
xchg
sbb
add
lea
push
sti
and
inc
mov
lods
sbb
pop
mov
lret
sbb
sub
inc
stos
xchg
add
mov
stos
cmp
xor
cmc
pop
inc
xchg
movsl
inc
mov
sbb
fsub
xor
icebp
inc
lret
sub
add
jb
mov
fsubl
inc
subl
adc
stc
and
sahf
mov
mov
addr16
or
push
inc
inc
sub
nop
dec
arpl
fcoml
in
fwait
push
dec
pop
and
sub
push
addr16
fstps
xchg
mulb
adc
rcr
cmc
insl
cli
dec
push
addb
cmpsb
push
fdivl
add
xchg
pop
pop
int
jo
sbb
fsubrs
sub
out
sti
sbb
add
mov
xor
xchg
xchg
pop
sbb
icebp
test
sub
ret
aaa
inc
mov
pop
or
mov
js
dec
push
fcompl
push
and
mov
mov
leave
or
mov
inc
sbb
lret
jnp
cmp
mov
insb
test
push
daa
cmp
pushf
push
inc
insl
mov
add
rcr
xor
loopne
and
fdiv
xor
fwait
pop
push
iret
movsb
fisttpll
cmp
mov
xchg
cli
loop
cmp
cmp
loopne
xchg
pop
scas
repnz
add
fcoms
push
int3
ret
mov
mov
mov
call
cmp
clc
lea
mov
repz
pop
and
ds
or
cmc
add
lods
repnz
adc
repnz
dec
xchg
repz
mov
repz
add
enter
jle
leave
pushf
xchg
push
test
mov
mov
js
cli
cld
cmp
pop
popa
idivb
adc
lret
lret
das
std
sti
pop
test
xchg
sti
jecxz
sub
int3
int3
rolb
xor
lea
fwait
adc
adc
fsubrl
jle
jge
push
iret
jo
loope
test
adc
push
sti
xor
xlat
mov
lock
xchg
popa
iret
inc
xor
add
mov
and
inc
push
test
scas
adc
xor
adc
mov
rolb
push
imul
scas
mov
or
cmp
and
scas
test
or
dec
pop
aas
nop
or
dec
push
inc
push
or
mov
fisubs
out
lret
and
push
lods
sub
pop
push
bound
or
mov
shrb
flds
stc
repz
and
scas
cmp
into
jmp
iret
sub
shll
lods
mov
and
daa
mov
mov
jo
adc
add
fs
inc
mov
xchg
push
divb
loop
cmpsl
pop
fistpll
cld
loopne
sub
mov
lret
cmpsb
inc
sarl
cmp
mov
dec
sub
aaa
aaa
push
pusha
negl
hlt
out
decb
adc
push
sub
dec
int3
cltd
data16
lods
fidivrl
mov
movb
pusha
ffreep
aaa
imul
mov
mov
pushl
pop
ror
hlt
int
fsubr
push
or
enter
mov
scas
loop
mov
inc
loop
lret
repz
fadd
fwait
and
rcr
push
enter
das
push
int
and
and
fists
add
xor
mov
jbe
test
leave
xor
mov
push
mov
orb
inc
lret
push
mov
lea
mov
or
lock
ret
inc
jno
mov
or
cmc
fcmovnb
cmpsl
pop
sbb
mov
xchg
mov
xchg
mov
sbb
adc
out
inc
mov
sbb
or
sbb
and
pushf
in
xor
lds
sahf
pop
xchg
dec
dec
lret
sbb
jbe
into
lcall
scas
sbbl
out
jl
inc
sub
subl
jns
daa
clc
in
repnz
fstps
lods
fisttpl
add
mov
jecxz
push
in
jl
push
xor
andb
sbb
xchg
cmpsb
stos
fcomps
pushf
nop
lods
repnz
frstor
xor
jo
xchg
mov
inc
inc
sbb
les
lret
sub
scas
jl
mov
aam
addr16
in
mov
shl
inc
jmp
mov
sub
jns
dec
or
mov
test
imul
add
mov
fs
dec
jmp
dec
fstpt
sti
fmuls
mov
cld
sbb
daa
inc
sbb
add
xlat
cmp
scas
loop
and
int3
or
xchg
in
lret
bound
inc
sbb
mov
fldl
jo
insb
mov
xor
mov
add
lahf
pop
push
and
jmp
pop
ss
cld
adc
dec
stos
sub
mov
dec
imul
notl
xor
repnz
in
add
cmpsl
jbe
mov
ja
push
ret
movsb
dec
fiadds
cmpl
mov
mov
adc
hlt
nop
pop
ret
jne
jne
popf
ret
jno
repz
jp
daa
xchg
pop
add
mov
xchg
repz
adc
dec
clc
dec
mov
add
sbb
and
ret
xchg
je
pop
sbb
lret
aas
jg
fcomps
push
jno
jmp
xchg
into
scas
rclb
xchg
push
mov
and
lods
insl
popa
mov
movsl
jne
loopne
cld
jnp
mov
stc
adc
pop
aaa
and
ds
jge
mov
mov
leave
popa
dec
add
push
sarl
mov
xlat
mov
bound
cmp
lods
lret
dec
aam
es
shll
push
iret
shrd
loopne
jae
in
inc
loope
push
adc
adc
ss
mov
rcrb
xchg
push
movsb
lods
movsl
mov
and
sahf
push
std
sbb
ret
imul
fistps
outsl
xchg
jmp
notb
cs
mov
add
gs
or
mov
in
mov
leave
and
jmp
loopne
mov
out
in
sbb
mov
mov
dec
mov
jnp
fstps
inc
and
push
enter
clc
cmc
or
js
test
int
pop
insb
test
add
pop
mov
fs
or
sbb
in
ret
es
jno
mov
hlt
scas
enter
fldl
sub
push
cli
int
leave
sbb
ret
cmp
sbb
inc
xlat
mov
movsl
ss
push
jle
lods
mov
mov
roll
repnz
stos
ficompl
xchg
in
add
mov
mov
pop
popf
or
decl
imul
cmp
jne
lahf
movsl
js
mov
mov
lret
dec
sub
adc
ds
mov
dec
push
or
and
cmpsl
test
and
std
lret
jne
arpl
jnp
pop
mov
loopne
xchg
sar
xchg
loopne
out
in
stos
aaa
mov
in
arpl
push
dec
cli
sahf
mov
dec
xor
insb
push
jne
pop
xchg
cmc
je
cmp
popf
fdivrs
sarl
push
pminsw
daa
inc
cli
les
scas
jle
xchg
addr16
fwait
or
daa
or
jbe
jo
adc
dec
push
stc
and
mov
roll
pop
xchg
push
push
pop
aad
ret
xchg
in
add
and
push
int3
xchg
add
in
xchg
lock
rdmsr
hlt
sbb
xor
jp
ja
stos
jecxz
add
pop
mov
or
dec
push
jnp
in
jns
mov
outsb
or
dec
or
cmp
popa
in
xor
mov
daa
jmp
push
bound
ret
bound
mov
mov
jg
lds
push
mov
pop
adc
and
adc
imull
bound
xchg
sahf
push
add
mov
iret
and
dec
adc
rorb
pop
inc
xlat
test
das
sbb
pop
xchg
cmp
fnstsw
xchg
scas
pop
xchg
neg
lret
test
xchg
out
or
sub
hlt
andb
or
lods
cmp
push
mov
out
and
test
cmp
mov
push
push
cltd
nop
outsb
or
xlat
stos
out
push
nop
mov
lahf
das
pop
popf
ss
push
push
xchg
fstpt
lahf
mov
nop
adc
push
data16
pop
mov
push
inc
add
jg
icebp
int3
repnz
mov
gs
adc
in
loop
shl
inc
scas
into
pop
xor
dec
frstor
js
lcall
or
mov
pop
push
pop
pop
mov
int3
xorl
add
sub
enter
add
dec
ss
cmp
test
inc
mov
les
jne
out
mov
in
push
test
fisubl
jnp
mov
sti
pop
leave
dec
and
or
sbbl
repnz
inc
push
sub
into
xchg
push
mov
rorl
aas
cmpb
mov
xor
mov
mov
mov
mov
jmp
adc
pop
cmpsl
jns
int3
mov
pop
xchg
mov
xchg
jo
sbb
cmp
outsb
fst
pop
out
fnstenv
mov
xchg
mov
call
push
and
hlt
andb
or
lods
add
testb
pusha
pusha
push
push
aam
adc
adcl
xor
scas
inc
call
out
pop
stc
pop
lcall
sahf
mov
and
sub
adc
cld
inc
cmpsl
scas
jo
inc
in
iret
mov
bnd
jae
repz
subl
fnstsw
insb
movsb
push
add
movsb
std
fbld
gs
mov
pop
lds
ret
push
sbb
pop
add
xlat
and
in
sub
xor
sarb
lret
lahf
aam
add
mov
pop
clc
cmc
sarb
test
pop
cltd
popf
addl
insb
in
rclb
mov
movsb
mov
push
imul
cwtl
loope
jo
cld
xchg
mov
mov
imul
add
loopne
ret
add
outsb
xchg
cmp
jo
and
adc
add
lret
lods
xor
mov
stos
push
or
enter
jns
lds
sub
decl
test
incl
loopne
push
push
aaa
arpl
or
push
pop
mov
data16
inc
add
inc
adc
jecxz
popf
cvtdq2ps
add
mov
jmp
pop
or
shl
jmp
push
jo
add
js
shr
sub
int3
sar
push
lods
dec
jo
and
test
addl
cmp
pop
cmpsl
mov
lahf
pop
pop
dec
xchg
bound
inc
inc
std
rolb
lods
xchg
xlat
ja
dec
mov
mov
movsl
xchg
es
out
sbb
jnp
add
inc
push
xor
xor
cld
mov
aad
push
inc
or
test
cmc
stos
out
ds
mov
out
lods
les
lret
stos
sub
xlat
jae
xchg
jp
dec
in
dec
jg
sub
fs
out
call
xchg
mov
cmpsl
fwait
dec
mov
mov
je
fmull
mov
in
dec
int
add
imul
push
push
enter
push
inc
mov
test
lret
roll
cmp
in
sub
sti
lock
fs
int3
leave
xor
test
addr16
mov
inc
cli
xchg
xchg
cmp
xchg
rcrb
cmpsl
lock
cmp
pushf
jae
clc
je
call
jmp
data16
adc
jno
or
push
insl
push
icebp
test
loop
lds
repnz
jl
mov
jmp
inc
dec
stc
fnstsw
sbb
dec
cmp
adc
xlat
fsubs
fcom
incl
stos
int
cmp
and
lahf
fisubrl
iret
pop
xor
out
out
aas
in
mov
push
or
arpl
es
jno
dec
int
jae
and
decl
std
pushf
or
jmp
addr16
fidivs
cmp
shlb
xchg
out
into
jp
mov
sub
xchg
pop
dec
aaa
mov
cmp
ret
xor
mov
cmpsl
out
nop
xchg
jmp
aad
in
cli
cmpsb
and
test
sub
fcoml
insb
enter
fsubs
xchg
cs
in
xchg
or
xor
dec
and
fstpl
cmpsl
inc
sbb
leave
jbe
inc
icebp
nop
jnp
enter
in
cmc
popa
dec
mov
fildll
xchg
xchg
xchg
fmuls
pushf
data16
loopne
mov
fdivrs
daa
mov
cltd
inc
pop
cmovo
sbb
dec
stos
mov
cwtl
xor
fistpll
ds
punpcklwd
repnz
dec
adc
dec
mov
jg
mov
popa
mov
dec
rcrl
pop
push
cmc
enter
push
and
or
sub
xchg
mov
mov
insb
aas
cmpsl
pop
scas
fisttpll
jb
loop
sbb
mov
dec
lods
mov
mov
fldt
or
out
movsl
mov
jne
repz
pop
dec
pop
inc
insl
lods
enter
fcmove
mov
jle
movsl
xor
movsl
cmp
or
jg
insl
and
pop
jnp
push
ja
divb
cltd
rclb
shrl
pop
jg
and
inc
mov
dec
adc
leave
pop
rclb
xchg
lret
mov
mov
in
and
xchg
dec
mov
push
push
inc
loop
sub
mov
aad
scas
sahf
mov
inc
pop
add
and
stos
ss
fnsave
nop
int3
enter
repz
ja
adc
inc
int3
inc
mov
jnp
or
subb
hlt
add
movsb
dec
imul
mov
cmovnp
inc
sarb
or
test
shrl
pop
xor
mov
jp
dec
pop
fwait
sbb
inc
sub
mov
inc
xchg
lret
sbb
adc
mov
inc
jecxz
xor
lret
test
push
cwtl
lds
imul
fs
lds
imul
je
and
sub
loopw
push
mov
or
mov
lock
rorb
push
pop
mov
sbb
in
xchg
addr16
popa
inc
xor
mov
out
pop
loop
js
jle
aam
sbb
sub
std
sti
testb
mov
mov
shlb
xlat
scas
cmp
cmp
xchg
roll
push
lea
je
fbstp
mov
movsl
pop
pop
pop
sarl
lock
dec
jp
cmp
dec
cmp
leave
and
dec
les
push
das
mov
inc
or
pop
inc
or
adc
mov
xchg
sbb
repz
jbe
add
or
lahf
pop
addr16
sarb
out
jbe
sbb
es
cmp
sub
mov
out
mov
or
jecxz
popf
cltd
mov
mov
lret
fpatan
xor
mov
loop
cmpsl
ds
xchg
cmp
add
pop
jp
pop
out
jp
lods
sub
xchg
sahf
xchg
sbb
sbb
dec
sub
xchg
jne
cmpsb
push
pop
sub
lcall
cltd
mov
mov
sub
out
jo
hlt
xchg
fs
cmp
inc
idivl
push
aad
and
call
je
ds
sahf
addr16
jle
mov
test
pushf
jo
xor
test
add
lods
jae
mov
mov
pop
jg
sti
dec
outsl
nop
mov
mov
mov
aad
into
xchg
mov
orb
pop
lods
pop
idiv
pop
cmp
enter
pop
aaa
outsl
shlb
jnp
lsl
cli
sub
dec
out
inc
lret
mov
sbb
dec
bound
shlb
mov
xor
inc
sub
fidivrl
xor
mov
aaa
fcmovbe
xchg
out
int
add
ja
cmp
stc
pop
and
push
push
pop
idivl
push
push
popa
mov
jb
xchg
roll
aad
scas
movsl
mov
lods
test
add
sub
rorb
dec
push
sahf
repnz
xchg
iret
xchg
xchg
fidivl
jmp
hlt
cmp
mov
das
adc
inc
arpl
sbb
add
fcoms
inc
insb
cltd
xchg
xchg
jecxz
hlt
je
clc
nop
out
daa
icebp
mov
mov
push
lds
orl
xchg
or
in
xlat
fwait
test
jecxz
inc
incl
enter
inc
pushf
jl
mov
popf
std
ffree
xchg
push
out
dec
out
loope
mov
call
inc
pushf
out
cmpl
push
ror
dec
js
cmp
xor
loope
rcrb
pushl
inc
pop
mov
jbe
push
pushf
mov
inc
imul
mov
out
dec
xchg
sbb
sahf
xchg
add
adc
or
mov
pop
int
push
out
cmp
loopne
jecxz
sahf
ljmp
mov
mov
jmp
adc
ret
lahf
jmp
xor
cld
pop
mov
pushf
adc
push
insl
shll
pop
mov
in
add
popf
outsl
mov
sub
in
aas
dec
add
sbb
pop
movsl
xchg
sub
decb
lahf
lds
test
sub
negl
mov
and
push
dec
bnd
ljmp
inc
iret
ds
std
lods
mov
fsubrl
testb
jge
mov
mov
roll
xchg
and
iret
icebp
lret
dec
jge
out
mov
or
mov
sbb
mov
inc
stos
js
out
mov
cmp
mov
rcrb
inc
ret
addb
mov
push
or
mov
fstpt
cli
sub
adc
rorb
xchg
sbb
stc
jns
mov
mov
std
inc
xor
bound
mov
and
out
sbb
rclb
mov
xlat
mov
insl
xchg
repnz
jno
negl
shlb
push
popf
push
dec
mov
and
daa
cltd
lods
movsb
inc
out
push
and
mov
mov
xor
iret
daa
daa
push
jecxz
xchg
add
aad
add
fnstcw
subl
mov
ljmp
pop
js
pushf
xor
jp
xlat
push
mov
int
in
dec
aad
aas
mov
inc
in
and
jb
dec
in
fists
sub
cmp
adc
bound
rcr
fs
cmp
sbbb
xor
repnz
adc
movsl
sbb
cli
into
imul
fldl
je
sahf
push
mov
outsb
insb
push
test
nop
aam
pop
push
int3
pop
mov
and
dec
movsb
or
add
fwait
out
and
fidivrs
pop
pusha
push
dec
dec
pop
scas
fisubl
cmp
xchg
and
divb
push
mov
insb
mov
mov
adc
testl
pop
add
mov
mov
bound
dec
xchg
adc
imul
cmp
gs
fcomi
xlat
pop
sbb
mov
test
jecxz,pt
adc
or
inc
imul
cmp
lret
jmp
das
inc
iret
mov
push
push
ja
xor
jne
mov
cmpsl
cmp
sbb
out
in
push
inc
daa
sarl
dec
sub
adc
fs
cmp
clc
and
mov
mov
jo
in
inc
cmp
add
mov
lcall
cmpsl
rcll
out
jmp
or
icebp
xor
jle
lcall
inc
mov
cmc
call
sbb
psrad
fstl
inc
jg
mov
push
push
addr16
rcrb
mov
push
shll
pop
xchg
mov
inc
js
mov
inc
inc
inc
out
leave
inc
imul
mov
adcl
add
dec
push
test
mov
sbb
rol
jp
lock
jne
stos
addr16
cmp
jo
xor
mov
das
dec
inc
in
mov
aad
std
inc
out
rclb
pop
outsl
in
rcrb
push
push
in
inc
mov
movb
xor
pop
push
loop
mov
push
mov
mov
pop
rcr
xchg
int3
and
cld
mov
divl
dec
shll
lret
lret
scas
lret
aad
xor
xor
push
jmp
imul
xchg
add
pop
std
fadds
mov
pop
xchg
out
mov
or
and
cmp
or
inc
cmp
sbb
inc
mov
scas
mov
int3
addl
int
popa
mov
test
add
inc
pop
cld
into
dec
mov
jns
cmc
or
mov
cmp
imul
fnstenv
ljmp
daa
inc
test
or
das
leave
pop
sub
aaa
dec
mov
jecxz
xor
jmp
pop
mov
xchg
outsl
shlb
add
pop
icebp
mov
mov
leave
mov
iret
hlt
jno
or
sbb
add
bound
popa
roll
pop
jnp
dec
jmp
cmp
out
adc
repz
jno
push
fsubrl
sub
pop
rcrl
shll
jno
int
int
or
push
push
fmuls
jne
icebp
add
lea
or
push
and
not
cmpsb
data16
scas
and
and
insb
add
push
cmpl
inc
pop
fstpt
and
pushf
add
aas
mov
xlat
xor
jle
jl
in
scas
aam
add
jmp
aaa
sbb
sbb
ret
int
fs
xchg
fcoml
fcmovnu
xor
movsl
mov
jo
xlat
xchg
pop
xor
and
daa
inc
cmpb
or
stos
sub
pop
dec
movsl
je
jp
lock
data16
pop
mov
adc
test
ret
mov
dec
cmp
mov
sub
shll
mov
hlt
sbb
cmp
mov
int
or
stc
dec
lods
push
pop
addb
dec
out
fdivp
push
and
adc
jae
or
mov
lret
mov
cmp
adc
ss
pop
jnp
ret
push
or
in
movsl
insb
repz
shll
les
sub
cmp
cmp
in
xchg
scas
pop
ss
cmp
xlat
icebp
adc
add
test
inc
loop,pt
xor
outsl
cmp
and
ja
int
cmp
stos
inc
sub
lret
fwait
inc
mov
subl
or
jno
test
xchg
pop
nop
mov
in
mov
or
lock
divps
pop
push
test
fisubs
jo
pop
lods
xchg
outsb
push
mov
sbb
pop
repz
push
leave
fcoms
loopne
sub
clc
xlat
cmp
mov
les
xor
cmpsb
push
repz
nop
pop
and
in
push
arpl
cmpsl
movsb
aaa
xchg
pop
or
mov
das
in
mov
cmp
add
data16
les
add
mov
sub
dec
mov
pop
mov
mov
in
inc
ret
call
push
test
test
int
mulb
mov
clc
pushf
sbb
xor
and
pop
mov
loope
push
xor
lahf
lahf
fstps
inc
loopne
jno
mov
cs
jmp
loope
inc
int
and
jg
cmp
pop
loop
pop
loopne
or
pop
ljmp
popa
push
mov
stc
dec
sbb
and
push
das
loop
push
sbb
mov
sbb
cmp
xor
jmp
subb
aam
and
push
pop
cmp
push
or
fdecstp
es
std
sahf
ljmp
movsl
xchg
push
add
sub
sub
cmp
pop
lcall
adc
inc
pop
sub
js
mov
dec
and
add
push
iret
or
arpl
add
ror
insl
jo
lods
lods
or
clc
imul
fiaddl
ds
stc
fiadds
rorb
repz
repnz
mov
aas
sub
scas
push
icebp
xchg
daa
in
and
icebp
hlt
je
scas
mov
mov
stos
lods
lcall
adc
sbb
outsl
nop
imul
cli
adc
insl
frstor
mov
mov
add
dec
dec
sbb
push
cmp
es
mov
pop
in
jle
daa
adc
or
gs
mov
icebp
push
jge
mov
pop
push
or
dec
test
pop
inc
add
inc
sbb
int
repnz
clc
push
lods
stos
cmp
cmp
push
cmp
sbb
bound
sti
dec
jb
sub
add
or
and
and
or
aaa
inc
add
inc
notb
xor
in
popa
nop
jns
lods
dec
add
cmp
adc
fs
xchg
ja
out
adc
adc
orb
xchg
inc
inc
sbb
inc
mov
push
pop
push
ret
jl
or
push
lea
xlat
jge
mov
lds
sub
daa
ja
dec
xor
mov
pop
lds
mov
cli
cmp
repz
adc
dec
imul
push
push
in
push
gs
lds
mov
mov
es
test
lods
sbb
push
sbb
add
pop
lods
cli
enter
cmp
xchg
sub
cmpsb
mov
shl
lahf
mov
shlb
aam
cwtl
adc
lcall
pop
inc
int3
xchg
xchg
movsb
adc
push
in
adc
adc
inc
inc
pop
sti
sub
sub
into
adc
add
add
cld
cmp
movaps
sbb
xchg
in
xor
div
cmp
xchg
xchg
js
mov
pushf
out
jns
clc
das
mov
shll
fwait
add
dec
xchg
pop
pop
sbb
jg
push
inc
xchg
pushf
mov
inc
sub
imul
jb
and
xchg
pop
lcall
movsl
lock
push
rcrb
or
lea
pop
push
add
stos
lock
jge
cmp
cmovae
stc
fldcw
int
fwait
neg
push
push
repnz
inc
aaa
fiadds
sbb
loopne
cmpsl
mov
jmp
cwtl
les
insl
adc
in
and
fwait
mov
adc
xor
ss
shll
fsubr
test
pop
mov
mov
lock
pop
out
lea
jp
aas
add
dec
mov
std
imul
loop
loop
xor
and
inc
nop
test
sbb
add
push
repnz
xchg
lock
xchg
inc
out
pop
jb
mov
push
shr
jne
sbb
fstl
mov
mov
insb
jle
enter
xor
cmp
hlt
lcall
lahf
sub
iret
adc
push
sub
add
sbbl
icebp
xchg
jb
xchg
jmp
lcall
test
fwait
jne
icebp
mov
lcall
int
mov
mov
jge
ret
loopne
push
std
sbb
or
repnz
pop
addr16
mov
in
jle
mov
test
mov
adc
out
ret
aam
scas
cli
subl
lea
ret
lcall
out
push
sbb
scas
and
adc
int
jns
fwait
push
or
sub
mov
and
xlat
xor
mov
dec
bound
inc
mov
cmp
jns
fisubl
add
jnp
ret
in
or
adc
push
sbb
lds
cld
xchg
mov
mov
dec
mov
pop
xchg
add
sbb
push
lock
jnp
xchg
xor
lds
push
mov
pop
lret
lods
inc
out
lahf
popf
push
cmpps
int3
pop
mov
loop
dec
gs
adc
push
in
lahf
test
push
xor
push
mov
sub
out
js
push
ficoms
pop
push
push
add
inc
jecxz
in
fldcw
pop
push
movsb
pop
sub
shl
sbb
lret
push
jmp
mov
xor
addl
mov
pop
movsb
xchg
cltd
push
push
pop
mov
js
add
pop
data16
fcmovnu
pop
cmc
aam
dec
mov
pusha
mov
fstl
addr16
adc
jns
dec
xchg
dec
outsb
neg
nop
mov
push
cmc
loope
cwtl
push
sub
fidivs
stos
add
dec
inc
push
dec
or
stc
dec
cli
jg
sub
and
enter
movsb
push
in
cmc
jne
test
fsubs
xchg
popf
fisttpl
push
sub
clc
ja
push
xchg
daa
cli
pop
sbb
or
and
mov
repz
mov
pushf
sar
cmp
jl
test
dec
lss
mov
xor
test
sbb
push
xlat
imul
or
shlb
jecxz
in
pop
jno
mov
frstor
push
mov
movsl
push
mov
sti
scas
sahf
popf
add
mov
cmp
rorb
push
xchg
and
inc
ja
es
cmp
clc
or
sahf
xchg
clc
push
mov
cmc
sarb
mov
pop
add
imul
sub
lahf
test
pop
popa
jle
je
xchg
xchg
sub
push
insb
stos
fwait
and
xor
ja
xchg
fwait
mov
push
pusha
mov
sarl
mov
aas
shlb
mov
daa
and
inc
and
fnstenv
mov
push
test
xchg
jb
cli
sub
sub
icebp
inc
dec
insb
xor
push
in
pop
or
dec
fwait
push
fwait
xchg
nop
bound
mov
popf
jmp
mov
push
adc
rcl
push
mov
jno
mov
outsb
cld
es
inc
xor
push
fldcw
cwtl
cmp
sub
sti
mov
inc
sti
lret
push
mov
mov
xchg
sbb
or
fisubs
std
dec
gs
imul
pop
jnp
or
mov
cmp
inc
push
pusha
test
and
pop
pop
das
cli
add
jae
stos
sub
xchg
cmp
or
jnp
aad
pop
ret
xor
imul
add
out
mov
inc
mov
jl
fistpl
mov
pop
cmpsb
dec
mov
xchg
sub
repnz
mov
push
js
jns
jb
inc
repz
repnz
mov
incl
mov
mov
adc
in
call
push
mov
sub
test
movsb
sbb
mov
xchg
xrelease
mov
out
sbbl
add
sub
je
jmp
mov
sub
xchg
or
cld
ret
xchg
push
inc
pop
mov
adc
push
sbb
fnsave
popa
or
mov
outsb
out
lods
mov
inc
mov
dec
je
rolb
jne
test
mov
fstps
fimull
mov
fsubrp
jns
and
dec
cmp
std
inc
in
test
mov
pop
sub
into
fmull
mov
popf
sub
push
cmp
xchg
pop
or
mov
ficoml
and
cmpsb
pop
pop
push
ror
mov
adc
call
adc
xchg
mov
inc
xor
xchg
push
cmp
inc
lods
xchg
dec
hlt
mov
flds
xchg
inc
xchg
xchg
loopne
push
add
aad
rcrb
pushf
fsubrl
inc
push
or
cli
add
shr
adc
repz
xchg
adc
cmc
xchg
dec
ja
aaa
aaa
inc
mov
xchg
push
fdecstp
hlt
and
fnstenv
xchg
nop
mov
adc
mov
pusha
cli
int
fidivs
jg
shrl
and
sbb
xchg
mov
fcmovu
push
mov
setle
xor
pop
movntq
test
stos
jmp
lea
xchg
ffree
inc
or
aam
aad
inc
mov
sbb
mov
ss
sub
add
xchg
sub
and
and
adcl
shl
add
aam
shll
leave
icebp
mov
lahf
lds
mov
cmc
dec
dec
cs
mov
xchg
aaa
add
loop
ds
mov
dec
push
aas
cld
sbb
mov
cltd
mov
dec
sbb
xlat
jae
jno
inc
cmp
or
into
mov
sbb
mov
and
push
pop
xor
cmp
lret
sub
iret
push
and
adc
out
dec
mov
outsl
cmp
xor
pushf
cmp
cmc
cmpb
jno
scas
call
and
cmc
push
adcl
bound
add
mov
pop
cmp
cmp
ja
jmp
mov
cltd
dec
sbb
pop
adc
mov
lcall
jbe
pop
xchg
jl
or
lcall
xor
jbe
andb
scas
lahf
shrl
call
mov
mov
xor
pop
sbb
in
sbb
jne
jmp
dec
mov
outsl
lahf
and
movsl
fcompl
cmpsb
subl
xor
jae
lods
sarb
mov
in
movsl
sbb
jl
mov
jns
mov
jbe
xor
dec
stc
mov
mov
decb
xlat
inc
fdiv
inc
jg
and
lfence
and
mov
jae
push
cmpsb
stos
ss
adc
in
out
dec
push
and
or
lea
and
mov
in
test
popa
mov
daa
loope
sti
cmp
std
ret
and
call
repnz
or
sub
inc
jle
add
inc
sbb
je
mov
adc
leave
imull
jnp
inc
jecxz
jle
dec
fildl
jle
outsl
aas
loope
and
movsl
adc
mov
popa
jge
xchg
push
cmc
scas
mov
lea
ficoml
xor
xor
mov
add
mov
cs
ja
shl
sub
aam
dec
mov
dec
lods
adc
andb
hlt
ljmp
jo
in
inc
aaa
xchg
call
movsb
into
mov
js
enter
arpl
sub
js
daa
pop
cmp
pop
fldt
xchg
je
test
cmp
shlb
sbb
xchg
movnti
aaa
mov
pusha
out
sarb
shl
fwait
pusha
arpl
loope
cmp
mov
or
bound
and
rclb
xor
movsb
mov
xchg
or
fwait
mov
fs
aad
mov
popf
sub
push
ja
push
movsb
mov
and
push
pop
xchg
and
stos
xor
sbbl
dec
sbb
adc
push
mov
add
xor
fldenv
xor
pop
push
xor
dec
stos
cmc
lcall
loop
repnz
ljmp
je
push
pop
pop
in
xchg
dec
aas
adc
in
xor
jge
enter
mov
jo
andl
cli
adc
stc
jg
adc
or
push
cld
mov
idivl
stc
jnp
xor
aam
sbb
mov
dec
lahf
leave
into
pop
add
dec
adc
aas
sahf
mov
add
inc
sbb
andl
mov
shrb
pop
push
sub
pop
mov
xor
negl
jge
inc
push
mov
fs
rorl
xchg
imul
fsubrl
out
push
jnp
mov
daa
and
in
push
fildl
jmp
adc
stc
testl
out
cmpb
cmp
out
xchg
add
imul
pop
les
lahf
outsl
xor
add
sti
sti
hlt
icebp
and
stc
ss
pop
add
popf
pop
and
dec
fstpl
push
fst
cmp
aam
ret
and
dec
test
adc
sti
in
gs
mov
cmp
jecxz
bound
jge
in
push
das
xchg
sahf
scas
or
pop
js
aad
sub
stc
cmpsb
out
mov
mov
pushf
rcr
inc
sbb
pop
xchg
fld
sub
mov
push
lea
fnsave
xchg
sbb
test
out
xchg
out
mov
sbb
xchg
mov
testl
adc
xchg
fidivrl
xchg
out
daa
xchg
repnz
pop
ret
mov
imul
or
mov
or
sbb
mov
jge
js
pusha
pop
lock
orb
xor
out
scas
lret
inc
mov
push
aam
dec
aam
adc
movsb
xor
jbe
sub
xor
jmp
aam
pop
insb
call
mov
xchg
pcmpgtw
imul
mov
cltd
jecxz
or
int
lods
mov
dec
jecxz
outsb
lods
xchg
cmpsl
push
lahf
pop
filds
cmp
int
icebp
outsb
and
in
adc
imul
push
pop
push
inc
lods
and
inc
test
stos
pop
daa
xor
dec
adc
push
push
mov
pop
rolb
adc
daa
negl
sub
xchg
ljmp
adc
mov
mov
mov
or
shlb
add
mov
jmp
sub
scas
mov
das
ja
repz
ret
push
cs
mov
ficoms
add
aaa
push
cli
mov
out
inc
gs
push
out
add
out
sub
sti
fwait
push
mov
jp
push
dec
xor
or
hlt
clc
adc
adc
or
paddsw
jo
mov
mov
std
cmpsb
lret
cmp
push
dec
jb
aam
into
mov
inc
btc
mov
jns
roll
pop
push
sahf
xor
or
call
sbb
push
fistpll
and
add
mov
push
pop
dec
fisubrl
fisttps
jo
pop
mov
mov
and
add
pop
div
pop
xor
and
enter
dec
fidivl
mulb
inc
mov
insb
mov
cmp
mov
sbb
movsl
out
push
daa
insb
stos
inc
inc
ficoms
and
cmp
cmp
jo
icebp
imul
push
scas
ljmp
rclb
push
dec
je
stos
movsl
and
mov
shl
push
in
mov
ret
sub
decb
test
mov
loopne
jns
jle
out
scas
mov
mov
fiaddl
add
cmp
popf
insl
or
lcall
std
cmc
int
mov
jbe
movsl
std
sub
test
jae
shl
push
jmp
jbe
gs
jle
cmp
xchg
add
jno
leave
and
fsubs
in
dec
sbb
pop
add
push
and
jae
and
xor
movsl
xchg
add
repnz
in
daa
mov
mov
movsl
out
jns
sub
rcrl
push
cmpsb
enter
insb
orb
inc
cmp
stc
xorb
jmp
jo
or
popl
test
gs
adc
pop
jmp
pop
nop
adc
push
adc
push
add
cwtl
dec
and
dec
jle
jg
inc
aam
lahf
push
mov
lcall
fdivs
into
pop
lahf
dec
ret
jecxz
daa
lret
sub
dec
fsubl
rcrl
test
adc
cltd
insb
adc
jae
movsb
inc
jl
xchg
movsl
sbb
add
mov
add
mov
or
pop
mov
pop
mov
sub
mov
iret
and
imul
fwait
add
or
out
mov
xchg
xchg
cmc
pop
jno
insl
aas
mov
sbb
lods
test
add
jl
lahf
aas
sbb
mov
jo
add
pop
fbld
fildl
cmp
xchg
pusha
jl
adc
in
mov
rcrb
lret
push
outsl
pop
jne
test
push
xchg
leave
lea
mov
insb
dec
xchg
jb
out
leave
daa
mov
cmpl
adc
lahf
leave
lock
vmwrite
cmpsb
pop
or
sub
xchg
add
ja
test
loopne
and
mov
add
mov
xchg
inc
fnstcw
mov
sahf
aas
cmp
add
ficompl
dec
cmp
in
mov
cmp
subb
mov
push
pop
das
clc
jo
stos
outsb
dec
sar
xor
lock
je
mov
sbb
or
mov
enter
cmp
insl
cs
jns
or
lahf
aas
pop
pop
lcall
aaa
shrb
inc
repz
jne
fisubrl
shlb
cli
mov
hlt
fs
mov
cld
scas
dec
jbe
sbb
call
mov
xorb
push
mov
test
icebp
inc
mov
push
xor
jnp
test
lahf
push
insb
jb
mov
hlt
add
sub
mov
test
jbe
xor
or
lret
and
xchg
outsl
inc
and
mov
sahf
icebp
xchg
push
jmp
fadds
jnp
das
dec
inc
fwait
dec
cmp
add
pop
leave
inc
mov
lock
or
dec
popf
ret
sub
cmp
jae
vunpckhps
pop
push
cs
dec
ja
jb
ja
pop
lods
ja
fwait
les
dec
cmc
push
or
lret
cs
out
mov
inc
lods
stos
nop
jno
or
popf
or
xchg
lods
jmp
insb
cmpsb
sbb
call
adc
ret
sbb
in
cmp
cmp
in
mov
sbb
loop
int
fdivrs
and
imul
rorl
xchg
leave
popl
mov
adc
loopne
add
xor
and
and
lcall
mov
gs
and
dec
les
xchg
aaa
push
ljmp
frstor
shlb
or
not
fisubl
and
in
and
jp
mov
or
sahf
loop
in
xchg
stc
adc
lret
out
outsl
mov
ret
add
cmc
test
cvtps2pd
aad
mov
into
pop
repz
test
loopne
cmp
lea
decb
sub
pushf
add
cmp
lock
dec
jbe
jb
es
jg
or
push
push
mov
push
mov
pop
std
and
fildl
out
in
dec
sbb
inc
xor
out
pop
test
imull
push
fdiv
das
push
movsb
mov
push
sub
test
lds
fcmove
mov
sbb
sub
and
mov
pop
popf
stos
jecxz
jmp
xor
lods
add
add
les
mov
push
jge
cmp
movsl
inc
xchg
mov
rorl
jmp
idivl
ret
xor
jle
sbb
inc
dec
popf
rcl
push
rorb
sub
pop
sarl
mov
sub
shl
sub
and
cmp
jno
push
out
scas
dec
mov
adc
adc
mov
mov
popa
push
les
jecxz
and
ret
jns
stc
mov
lds
movsl
mov
fmuls
aas
pushf
das
xchg
out
loope,pn
test
mov
add
stos
lock
lcall
add
dec
rcll
out
push
lods
mov
daa
sbb
std
fstps
and
cmp
les
cmp
in
inc
ds
push
add
es
lds
mov
outsb
int3
test
sbb
mov
push
mov
add
xor
or
xchg
sub
add
stos
daa
mov
jne
cmp
push
lock
mov
leave
outsl
notl
xchg
xchg
mov
stos
das
ds
fidivrs
push
mov
adc
sbb
pop
rol
sbb
sbb
cmpsl
pusha
not
and
lds
movsl
in
sbb
and
scas
xchg
insb
dec
ret
lods
mov
dec
test
int
xlat
out
push
mov
lea
jno
jle
cmp
sbb
jbe
ss
xchg
sbb
mov
push
mov
addr16
mov
dec
xor
inc
mov
mov
inc
cmp
cli
lcall
addr16
pop
sbb
ja
inc
inc
sub
add
pusha
mov
les
pop
movsb
jge
sbb
cwtl
jo
dec
loope
lahf
repnz
mov
out
inc
outsb
cmovl
mov
jl
icebp
lret
loope
pop
int3
shlb
outsl
mov
in
and
lods
data16
jp
xor
movsl
stos
mov
ret
pop
sub
lock
lahf
cmp
push
pop
lret
mov
stos
xchg
movsb
popa
xchg
adc
test
scas
dec
inc
mov
add
pop
push
mov
cld
mov
cmc
jecxz
nop
cmp
xchg
inc
sbb
cmp
dec
fwait
dec
dec
ret
aad
mov
pusha
or
push
xchg
push
or
fs
popa
enter
ret
inc
out
pop
push
addb
lods
mov
pop
andb
std
loope
xlat
mov
jbe
lea
lea
hlt
fadd
sahf
popf
jg
push
push
fbstp
jge
mov
mov
aam
xchg
cmp
push
push
dec
je
dec
mov
sarb
xabort
movsl
fdivs
fimuls
mov
imul
in
cmovne
cmp
fdiv
adc
jmp
bswap
cmp
sahf
xchg
gs
jl
test
sarb
andl
testl
adc
pop
lcall
gs
dec
call
xchg
and
scas
sub
inc
fdivr
mov
dec
aas
in
call
lods
test
adc
sti
ljmp
push
repz
xor
inc
shrb
out
fiadds
mov
in
sbb
mov
or
loopne
popf
ret
adc
lret
cwtl
into
or
pop
bound
rcl
jl
pusha
mov
sbb
or
mov
test
xchg
inc
fnstsw
incb
mov
jmp
pop
mov
xchg
push
sbb
outsl
outsl
mov
inc
les
ja
mov
pop
ret
adc
cmp
rorb
fmuls
jo
mov
or
inc
sahf
jno
mov
sahf
mov
dec
icebp
aas
inc
fmul
std
fdivp
pushf
imull
cmpl
scas
test
cmp
pusha
xchg
outsb
test
xchg
sbb
scas
cmpsl
xchg
clc
lds
push
inc
push
lock
jae
lock
jns
pop
ret
dec
sti
adc
mov
aas
daa
test
push
fs
or
mov
popf
pop
scas
pusha
mov
jecxz
cmp
lret
xchg
aas
pop
lret
mov
insb
pop
xchg
and
cmp
rolb
or
imul
js
mov
pop
aam
mov
arpl
adc
mov
dec
or
into
mov
mov
push
stos
dec
mov
dec
dec
es
jmp
iret
shr
push
aad
xchg
add
inc
inc
stc
int3
scas
dec
mov
mov
in
add
sti
pop
mov
jecxz
jp
std
out
fcomps
rcrb
dec
sub
adcl
or
push
mov
and
adc
inc
or
iret
jnp
pop
data16
push
iret
sbb
push
out
clc
sysenter
or
je
adc
dec
mov
cmp
xchg
push
lock
aas
jle
into
xchg
lcall
shrl
gs
test
xchg
lret
xchg
pop
daa
xchg
lret
sarl
jg
fldl
xchg
pop
fadd
outsb
nop
jno
cmp
xor
xor
ljmp
fsubp
xchg
in
pop
inc
cwtl
push
or
sbb
out
fisubs
inc
inc
arpl
gs
pop
rclb
pop
mov
pop
aam
test
sbb
movsl
dec
rorl
sub
enter
push
sarl
xorb
insl
push
xorl
loop
xchg
cltd
icebp
and
scas
out
mov
sbb
hlt
jnp
inc
bound
mov
out
pop
dec
fsubrs
rclb
mov
arpl
enter
test
dec
leave
or
in
subl
fs
xchg
cmp
out
or
dec
push
test
xchg
movsb
cli
sarb
xchg
cld
dec
jnp
or
xchg
jge
lds
jge
fwait
fwait
lahf
mov
xor
insb
repz
mov
xchg
sarb
xchg
lock
and
inc
bound
sbb
sbb
sarb
stc
lds
pusha
pop
push
dec
lret
xchg
arpl
into
add
mov
outsl
cs
call
into
xchg
add
sbb
add
lods
push
push
loopne
mov
ds
adc
mov
mov
negl
lods
pop
adc
in
mov
cmp
sti
pushf
mov
and
cmp
sub
pop
stc
mov
call
movsl
lock
stos
adc
or
mov
fists
fidivl
lret
xor
test
dec
lahf
ds
lock
inc
inc
shrl
cwtl
jp
sub
pushf
mov
pushf
mov
dec
push
stc
lods
xchg
mov
movsl
pop
fidivrl
rorl
fistl
cmpsb
sbb
out
mov
call
or
and
adc
sbb
push
sbb
rol
pop
inc
out
pop
in
mov
xchg
inc
in
mov
in
dec
neg
notl
lods
xchg
mov
fsubr
ds
je
mov
jne,pt
xor
imul
in
cltd
adc
sub
mov
jb
adc
movsb
fimuls
movsb
inc
or
cmp
setl
mov
xchg
xchg
pop
cwtl
aam
xchg
pop
sub
pop
xchg
sbb
push
xsavec
daa
dec
xor
dec
mov
add
and
out
scas
mov
in
into
mov
cmp
ret
in
mov
mov
test
inc
jno
clc
lret
push
push
xchg
ret
mov
push
mov
jb
dec
pop
loope
outsb
cmpsb
shll
jge
pop
into
jmp
add
arpl
js
and
xchg
adc
mov
mov
sbbl
xchg
xchg
inc
xchg
sbb
lds
pop
cli
dec
cltd
push
out
inc
mov
mov
dec
clc
aam
sar
inc
xchg
and
in
jp
rol
pop
jns
out
adc
retw
adc
xor
pop
push
fsts
clc
jmp
cmp
pop
call
repnz
inc
shr
add
pop
dec
outsb
pop
add
sub
gs
sub
jl
mov
aas
adc
cmp
in
outsl
dec
or
mov
jae
dec
push
lock
lret
and
popf
and
arpl
lock
in
xchg
push
push
adc
imul
inc
push
mov
dec
repnz
and
xor
js
loope
jno
or
inc
xor
xchg
push
testl
push
dec
negb
cmpsl
adc
xor
cmp
dec
xchg
push
xor
dec
adc
push
jmp
sub
sbb
fimuls
inc
adc
call
jns
dec
adc
and
aaa
xchg
cmp
mov
insb
adc
loop
sbb
add
pop
cmp
add
xchg
xlat
push
loope
xorl
scas
ret
scas
or
ret
pop
in
adc
pop
adc
push
bound
aam
and
scas
push
cmp
pop
repz
out
movsl
ret
xor
xor
out
jno
dec
jmp
or
mov
inc
lock
xor
adc
nop
pop
push
add
jecxz
ret
inc
mov
mov
jmp
int3
lret
fisubs
inc
sbb
jno
sub
push
mov
loope
test
and
imul
sarl
loopne
lret
xchg
jecxz
fbld
clc
dec
cmp
std
cmpsl
pop
popf
insl
jmp
nop
sub
lahf
scas
loop
add
sahf
bound
rorl
stos
arpl
insb
popl
popa
shll
xchg
adc
pop
insb
imul
jae
nop
xchg
sub
xchg
lret
rcrl
or
std
mov
ret
pop
add
int
insb
jnp
test
sbb
inc
jae
mov
jno
xor
xorl
insl
push
dec
xor
dec
sbb
mov
rclb
in
push
mov
and
scas
pushf
mov
jo
add
jne
jmp
fwait
push
inc
mov
jae
mov
mov
ss
adc
sub
and
outsl
fisttpll
pop
stos
cmp
dec
out
push
inc
insb
xchg
es
lds
dec
mov
loop
test
push
jb
xor
sbb
adc
mov
pop
mov
inc
xchg
push
push
or
xchg
repz
adc
sbb
scas
mov
push
jecxz
sub
mul
xor
aad
mov
xchg
loop
out
xor
mov
inc
fisubrl
xchg
jg
hlt
notl
gs
fidivs
in
and
shll
in
jmp
jge
dec
pop
loop
nop
jbe
mov
addr16
rcrb
jns
in
into
xor
and
fcomip
cmc
lahf
jno
jae
shrl
aas
push
movsb
xchg
outsl
adc
xlat
inc
rclb
dec
jle
test
xor
push
sar
inc
cltd
scas
adc
dec
fwait
lods
sub
mov
jnp
push
sbbl
rcrb
pop
fisubrs
pushf
dec
loope
loop
pop
je
mov
cmp
sub
hlt
fcomps
scas
imul
add
cmp
ss
add
bound
out
xor
enter
into
and
pushf
xlat
stos
sub
pushf
or
lahf
std
ja
insl
popf
xchg
mov
adc
jmp
fs
addr16
sub
test
fisttpll
ret
fisubrs
addl
mov
jle
mov
jb
sub
sub
rcl
ret
pusha
cmpps
scas
pop
adc
test
stos
xchg
jb
lods
pop
push
dec
stos
test
add
in
cld
out
out
or
or
rcll
cmp
push
pop
xchg
xor
sub
lret
fistl
repz
leave
mov
dec
sub
gs
dec
sbb
and
mov
scas
xchg
ss
into
scas
shll
sub
xchg
cmp
data16
in
movl
jae
and
pushf
and
shl
std
xor
fcoms
sub
test
lret
mov
testb
inc
push
loop
add
inc
mov
test
nop
push
addl
mov
mov
cmp
nop
adc
cli
sbb
insl
dec
stos
cli
das
push
mov
dec
mov
jno
sub
iret
push
or
shl
out
in
aaa
stc
clc
xor
in
push
clc
rcr
mov
stc
adc
inc
add
jecxz
lret
mov
in
out
mov
mov
inc
pop
out
push
lods
pop
sbb
mov
mov
push
mov
or
sub
mov
clc
or
sbb
je
cwtl
inc
and
sbb
lods
add
lahf
push
jmp
xchg
test
cmp
mov
int3
push
mov
mov
pop
push
adc
aas
ja
mov
fnstsw
push
lock
xchg
push
inc
mov
aam
lret
cmp
pop
sub
stc
cmp
jb
scas
out
ret
and
insl
ret
lods
ja
js
test
sbb
stos
mov
icebp
sarb
inc
push
pop
mov
sbb
add
popf
jo
shl
mov
mov
cmp
push
push
mov
push
orl
mov
jne
stc
int3
lods
call
xor
jp
jbe
xchg
add
mov
fstps
scas
loope
push
stos
mov
out
cltd
lret
or
rorl
out
bound
pop
je
push
mov
dec
jecxz
mov
fwait
lock
rcrb
arpl
les
dec
loopne
xchg
inc
fwait
and
cmp
aaa
loopne
jbe
mov
jae
icebp
adc
pop
jb
gs
add
jnp
in
jmp
jns
mov
pop
cmc
xchg
out
push
sub
sub
mov
repz
mov
insb
xchg
shlb
lods
bound
sahf
sarb
movsl
pop
pushf
pop
add
jae
mov
stc
add
aaa
cmp
mov
and
push
cs
ja
jbe
mov
lds
pop
pop
mov
xor
fnsave
or
and
imul
xchg
jmp
outsb
cmpsl
movsl
leave
sub
sahf
jg
mov
fildll
dec
xchg
aam
sbb
jno
mov
mov
sbb
leavew
adc
cmp
push
xlat
punpckhwd
cltd
ret
push
stc
jo
roll
pop
mov
mov
cmpsb
mov
loop
mov
push
xor
add
xor
rorb
inc
lcall
jle
jmp
mov
cwtl
jo
fisttpl
sbb
loope
pushf
jo
jno
fildl
pusha
fimuls
xchg
or
push
jg
jbe
cmpsb
and
lcall
aam
cmp
ror
mov
dec
movsb
xchg
adc
or
cmp
pusha
mov
cmpsl
divl
lds
mov
and
xor
test
pop
jg
cltd
hlt
stc
nop
and
push
push
in
scas
mov
in
jno
sbb
adc
jmp
repz
mov
xchg
insb
xchg
test
sbb
loope
inc
lcall
fimuls
pusha
test
inc
enter
les
xchg
je
or
xor
pop
or
inc
cmp
xlat
bound
lea
adcb
lahf
xchg
aaa
and
mov
ret
pop
mov
jbe
sbb
leave
pushf
loopne
mov
xorl
subb
lock
sub
sbbl
add
out
xchg
add
jle
mov
aam
sub
or
ss
push
test
pop
insl
sbb
cvtps2pi
push
push
out
and
and
pop
mov
sbb
inc
femms
aad
mov
jns
push
cmp
cmpsb
fs
fsubs
mov
and
insb
push
rcrb
imul
inc
sub
hlt
mov
jp
xchg
hlt
mov
cld
pop
and
cwtl
hlt
jp
lea
shrb
sbb
shlb
pop
fst
loope
js
push
lods
je
jecxz
push
addr16
and
fwait
add
lds
jge
xlat
mov
ja
cmp
add
fistpll
sbb
icebp
lods
shll
push
fdivrl
xchg
add
lahf
dec
clc
hlt
gs
add
ljmp
fsubrs
iret
stos
repz
leave
mov
dec
dec
and
push
inc
cwtl
lods
daa
scas
mov
stc
stos
add
cmpsb
and
xchg
lods
lock
inc
fcmovb
sub
mov
dec
or
mov
scas
imul
ljmp
clc
hlt
sbb
jecxz
fcomp
repnz
jb
test
xor
cmc
mov
pop
or
pop
mov
jp
mov
in
pushf
cmc
dec
dec
sub
outsb
addl
lock
xor
jo
push
out
sbb
cs
mov
dec
mov
xlat
or
jae
addr16
cmp
jb
mov
mov
nop
mov
es
imul
rcrb
fcomps
mov
sub
and
pop
jge
pop
les
das
arpl
cli
sub
push
pop
daa
adc
mov
pop
repz
cmp
cs
push
sbb
jmp
xor
add
mov
popf
mov
xchg
xchg
cld
sub
mov
dec
fidivs
incl
add
xlat
pushf
pusha
ds
inc
adcl
enter
sti
dec
sub
test
das
cmpsl
inc
and
add
int3
aaa
outsb
je
mov
les
ljmp
jle
shll
sub
out
cmp
dec
mov
insl
adc
xor
scas
fidivrl
adc
rclb
popa
popa
or
xor
mov
mov
scas
std
pop
pop
pop
ret
jl
cmp
push
adc
or
xor
insb
aad
push
int
ljmp
and
aad
les
pop
shlb
mov
sub
std
dec
push
push
orb
adc
adc
jb
cwtl
hlt
stos
aaa
int
cmp
push
sbb
rcrb
mov
cmp
sbb
adc
push
movsb
shlb
adc
and
dec
pusha
out
jg
fidivrl
sbb
jnp
sbb
and
dec
ja
xor
xchg
or
pop
mov
mov
mov
jl
icebp
and
mov
nop
es
cmp
test
xor
and
sub
fldt
push
cmp
jns
cpuid
int3
jne
adc
int3
xchg
xor
xor
pop
push
mov
or
arpl
add
mov
and
jb
mov
mov
lea
sub
lahf
dec
mov
push
fwait
mov
fcomps
imul
push
stos
test
and
cwtl
stc
jl
lock
int
xlat
or
xor
loopne
les
shrb
lods
mov
jbe
push
pop
lret
xchg
mov
jnp
int3
jns
push
nop
bound
xchg
cmp
push
adc
popa
mov
icebp
in
sbb
ret
in
push
dec
out
data16
adc
in
stos
lret
fwait
mov
push
sbb
jge
into
ds
ret
arpl
mov
aaa
sbb
popa
icebp
add
rcll
shlb
mov
cmp
add
mov
jnp
es
repnz
mov
icebp
ret
rorl
xchg
jle
cli
cmp
inc
pop
sub
idiv
pop
cwtl
sub
cld
pop
movsl
cmp
adc
or
adc
shr
inc
rclb
in
mov
cld
and
pop
and
xchg
pop
dec
es
pop
add
outsl
fldl2t
or
mov
or
nop
inc
mov
ds
test
andb
idivb
aam
inc
xlat
imul
adc
pop
jnp
rorl
jbe
leave
xchg
mov
sbb
xchg
fst
ret
add
adc
inc
lcall
and
push
jecxz
xchg
xchg
mov
mov
leave
cmp
pop
sub
dec
sahf
or
sub
xchg
inc
mov
in
int3
sub
inc
jge
pop
cmp
mov
bound
sub
or
pop
outsl
mov
inc
je
inc
cld
add
movsl
insb
adc
lcall
stc
repnz
mov
inc
cld
adc
test
and
push
test
daa
les
inc
mov
insb
mov
jp
inc
mov
cmpsb
jg
js
push
mov
cmpsb
mov
and
push
into
adc
lret
or
mov
fwait
mov
ror
lahf
mov
mov
mov
and
es
jle
mov
lret
sbb
mov
enter
pop
cmp
adc
dec
add
mov
push
test
xor
jns
gs
adcl
adc
mov
adc
jmp
div
or
mov
jg
xchg
xchg
adc
xchg
mov
fistl
into
sub
cltd
pop
mov
fwait
push
dec
test
mov
add
push
and
cs
pushf
or
sti
mov
inc
jbe
pop
and
std
or
add
mov
lods
rorl
loopnew
imul
ret
unpckhps
xchg
sub
sahf
stos
out
inc
mov
pop
xor
xor
adc
push
jl
scas
sbbb
xchg
lcall
sbb
into
loop
cltd
add
std
test
or
mov
xor
ret
mov
fsubrs
adc
lea
push
int3
andl
aam
stos
gs
lret
hlt
xchg
cli
inc
push
dec
push
call
mov
pop
inc
jb
popa
cmp
xchg
mov
sbb
lret
rclb
insl
mov
add
test
mov
std
and
in
push
addb
or
inc
lods
or
and
icebp
ret
mov
es
pusha
mov
aad
in
ljmp
push
lds
dec
mov
xchg
mov
add
repz
ds
pop
push
je
and
mov
imul
mov
ss
add
test
pushf
fdivrs
mov
xor
aam
pop
sub
adc
imul
loope
and
cltd
cmp
or
jp
insl
mov
pusha
pop
loopne
nop
fsubrs
popf
pushf
dec
mov
jle
call
dec
je
jg
in
call
ja
xchg
sahf
paddusb
dec
fadd
xor
and
add
jmp
nop
adc
jg
and
jecxz
gs
inc
shrl
sbb
cmp
dec
fwait
mov
cmp
xchg
mov
adc
mov
mov
and
dec
arpl
imul
mov
jp
mov
dec
add
test
icebp
mov
jl
cmpsb
ret
pushf
filds
cmp
dec
dec
jp
roll
or
sahf
iret
in
jbe
inc
jmp
and
orl
mov
in
adc
push
mov
aaa
stos
xor
data16
shll
mov
in
push
dec
loope
pop
or
mov
push
mov
jmp
jmp
outsb
sub
popf
movsb
or
sbb
and
cmp
shll
fcomip
or
std
ret
jmp
repz
adc
xchg
push
sti
mov
pop
push
cmc
iret
imul
lcall
imul
jo
outsb
ds
and
add
scas
ret
or
pop
cmp
loope
mov
xor
pop
or
xor
insb
sub
xor
ds
dec
sbb
sbb
jae
mov
sbb
jmp
stos
lret
sarl
mov
xchg
push
inc
pop
jnp
jecxz
xchg
lcall
and
loopne
xchg
jp
ficompl
mov
jg
push
mov
cmp
stc
dec
lahf
movsl
mov
popa
pop
sbb
daa
cmp
inc
adc
mov
push
in
lock
mov
inc
test
inc
dec
cmpsl
mov
or
jl
rorb
mov
cmpl
jecxz
or
adc
sub
mov
xchg
emms
xor
or
loop
mov
sub
mov
push
pop
insl
and
rolb
dec
loope
aam
mov
add
cmpsl
scas
loope
call
test
push
push
adc
sahf
fisubl
inc
cmp
movsb
and
sub
dec
lds
push
jl
jge
adc
inc
out
cs
sbb
add
dec
insl
popf
das
mov
fsubs
push
xor
mov
int3
sbb
lods
aad
or
movsl
stc
fnstsw
push
xor
je
fwait
stc
cs
rolb
jne
fldl
pop
pop
cmp
push
sub
shrb
bound
mov
int3
out
mov
pushf
lods
movsb
xlat
cmp
xchg
mov
pop
out
jg
rol
mov
and
mov
test
stos
mov
mov
in
mov
mov
rcl
rclb
inc
push
inc
push
sti
cmp
int
mov
stc
dec
push
jp
ficoml
sbb
inc
and
mov
outsl
lock
stos
push
push
cmp
pop
inc
out
xor
pop
add
shrb
and
mov
addl
adc
cmp
add
pop
fnstenv
ljmp
es
pushf
hlt
push
xor
mov
aas
imulb
cmpsl
lea
cmc
mov
and
imul
mov
lock
jnp
xor
jnp
ret
sbb
push
or
insl
fs
mov
mov
dec
cmp
loopne
mov
xchg
add
ret
dec
xchg
sub
or
es
mov
mov
adc
addr16
outsl
mov
push
jno
mov
rolb
add
fnstenv
daa
inc
inc
mov
inc
dec
push
pop
add
adc
and
pop
add
nop
outsb
sbb
jle
std
icebp
lods
push
mov
or
mov
sbb
popf
inc
cmp
scas
loope
jle
mov
jb
mov
iret
pop
and
stos
mulb
mov
push
dec
pop
aas
adc
int3
es
pop
mov
xlat
repz
mov
add
xlat
adc
lahf
cs
dec
cmpsl
negl
pop
sarb
les
sub
xchg
lcall
cmc
mov
add
paddusw
scas
jo
and
sub
pop
or
test
lea
cmpsb
cmp
mov
es
fwait
inc
jbe
dec
adcb
dec
ret
pop
ljmp
xchg
push
mov
addr16
lds
dec
sbb
scas
sbb
and
into
xor
andb
jmp
movsb
lods
add
sti
es
pop
in
pop
loopne
arpl
jmp
fs
adc
shl
inc
cmpsb
push
je
ljmp
pop
shrl
ds
es
pop
movsl
or
xor
or
lret
xchg
lcall
iret
adc
testb
out
jle
xchg
add
scas
pop
mov
cmp
sti
sahf
ja
add
xlat
orl
sti
pop
or
popf
add
sbb
insb
adc
jo
cmp
sbb
insb
out
lret
mov
mov
jp
adc
mov
sahf
add
or
dec
loop
and
lret
adc
lock
push
jmp
cmp
rcrb
stc
sbb
sbbb
jl
aam
or
push
pushf
popf
lret
sub
fnstcw
or
or
test
sarb
cmc
jge
push
jo
test
imul
fnstsw
pusha
cmp
xchg
mov
xor
out
xor
xchg
push
push
mov
ret
mov
iret
xchg
xchg
push
fiadds
shlb
xchg
in
xor
std
sub
add
adc
dec
call
out
pusha
or
push
jb
aas
xchg
clc
jnp
push
test
jb
jae
pop
pop
test
sbb
sti
leave
imul
int
loopne
cmp
xor
lock
inc
out
mulb
push
adc
ret
jmp
inc
es
fists
loope
sub
xor
outsb
xor
jmp
jg
sub
xor
pop
mov
inc
push
sbb
lods
pop
in
mov
xlat
pmaxsw
inc
repz
sub
hlt
mov
scas
sbb
pop
xchg
scas
and
and
mov
shl
fstpl
jcxz
pop
cmp
test
add
sbb
cmpsb
jb
jecxz
arpl
cmpsl
pop
mov
mov
rclb
imulb
adc
cmp
movsl
xchg
jmp
and
loope
pop
or
lret
sub
sub
mov
stos
and
pop
imul
out
jmp
mov
or
adc
push
lret
lds
cmp
mov
inc
push
test
out
aam
pop
or
mov
lock
mov
inc
cmp
lret
sub
fs
pop
cld
mov
push
hlt
cmc
or
mov
xor
js
cmp
xchg
in
push
adc
sub
roll
jg
fst
dec
dec
rclb
or
fs
loope
jp
or
push
inc
sti
incl
cmc
jl
das
xchg
pop
stos
ret
mov
hlt
aam
xorb
sub
outsl
sub
xchg
sub
aaa
rorb
fdivs
into
cld
addr16
lds
cmpsb
mov
push
jns
mov
aas
add
adc
jb
fimuls
mov
out
lods
xor
jge
inc
pop
mov
imul
lcall
inc
and
sbb
clc
fmuls
rcrb
or
push
mov
fidivl
fistps
xlat
aaa
push
jno
cs
dec
xor
lcall
xchg
idivl
loopne
fmul
pop
sti
mov
imul
cmp
aas
ret
fidivl
sub
sbb
cmp
push
push
xchg
stos
mov
jae
xchg
xchg
fcoms
test
std
dec
jge
outsb
ret
pop
rorl
insb
mov
outsb
lahf
outsl
repz
int3
insb
cld
xchg
inc
pop
gs
fsubrs
arpl
jb
push
cltd
jp
jns
dec
outsb
mov
pop
loop
sbb
out
xchg
shr
jg
outsl
icebp
out
push
jmp
fistpl
jno
test
and
jmp
xchg
fistl
sub
push
pop
repz
mov
pop
jbe
data16
out
jne
movsb
pop
shrb
cmp
aam
adc
clc
mov
adc
cmpsl
pop
fsubrl
or
mov
dec
sbb
stc
mov
xchg
and
xchg
out
mov
sub
or
das
in
cmc
push
mov
sbb
mov
stos
cwtl
cld
int3
jno
xchg
aad
mov
aam
jle
rolb
loop
popf
pop
lahf
mov
add
and
mov
add
mov
imul
or
bnd
std
sub
and
pop
and
or
or
pop
pop
movsb
pop
add
jne
pop
lock
dec
add
mov
xlat
xchg
int3
sbbb
scas
mov
add
cld
loop
pop
and
int
out
inc
fldenv
dec
push
inc
cwtl
pop
xchg
shrl
fs
imul
push
sti
jns
dec
movsl
ret
adc
pop
cmp
vorps
push
icebp
ficoml
add
jge
jae
push
sbb
notl
sbb
js
repnz
push
aaa
sbb
lahf
lock
out
xor
repnz
adc
xchg
sub
sbb
dec
mov
jg
dec
cli
and
push
jle
pop
dec
or
cmp
shl
idivb
popf
je,pt
adc
or
cmp
xchg
sbb
add
fsubrs
int
fdivrs
push
pop
int3
mov
mov
adc
pop
ds
xchg
jge
sbb
aam
in
sbb
mov
xchg
pop
aaa
pop
fstpl
pop
mov
mov
dec
mov
gs
xor
jns
sbb
lret
jp
cmp
adc
mov
movl
lods
xor
adc
xor
push
popf
ret
sub
and
inc
enter
push
outsl
inc
or
xchg
add
fstpt
repz
mov
cmc
pusha
out
add
xor
shll
in
jo
notb
repz
mov
xchg
scas
repz
dec
mov
icebp
pop
or
jb
imul
add
aas
addl
sub
jb
data16
jp
shll
in
int
lret
icebp
scas
inc
xchg
mov
lods
ja
ret
xor
addr16
jbe
cld
bound
mov
mov
mov
mov
out
addb
mov
xchg
push
mov
repnz
push
xchg
sbb
loope
inc
faddl
dec
add
and
jbe
ss
jo
lret
inc
push
dec
in
call
pop
divl
push
mov
insl
jnp
pushf
popa
sub
xor
adc
call
or
ja
xchg
ds
scas
out
pop
outsl
push
xor
push
sti
mov
cmp
lret
enter
mov
fsubs
mov
jmp
mov
mov
dec
test
fldcw
and
addr16
test
lods
orl
test
xlat
xlat
cmp
daa
xorb
outsl
add
lds
negl
cmp
xchg
lahf
ljmp
push
loope
jbe
mov
xor
lret
dec
inc
stos
aaa
mov
jmp
mov
mov
and
je
xlat
jmp
xchg
mov
jo
inc
sbb
xchg
sbb
lret
or
ss
and
jae
inc
dec
jge
cmpsl
cwtl
sbb
sub
adc
sbb
dec
xchg
xchg
jb
in
fnstcw
ret
jg
xor
mov
popf
mov
fstp
sbb
mov
inc
lods
or
das
xchg
cmc
adc
cmp
sbb
jge
popf
incl
add
and
fmull
push
test
std
rcll
cmpsw
push
and
repz
jne
imul
shrl
fdivrl
jmp
call
aaa
in
and
setge
add
es
mov
cmp
sbb
sbb
jo
jne
add
cmc
cltd
mov
dec
lds
mov
sbb
sub
mov
sti
pop
inc
inc
push
push
sbb
push
adcb
or
push
ljmp
jno
aad
cmc
test
aas
push
je
stos
xchg
cwtl
cmc
stos
das
int3
outsb
je
mov
xor
fnstcw
push
mov
andl
xchg
in
fidivl
ror
shll
xor
hlt
pop
mov
push
mov
mov
sub
nop
dec
inc
jmp
repnz
push
xchg
pop
push
jno
jb
enter
inc
lods
push
cmp
xor
mov
xchg
scas
rol
mov
out
mov
mov
shll
clc
jle
orl
scas
stos
cli
cmpsb
negb
lock
add
xchg
dec
gs
outsl
mov
ud1
xchg
icebp
pmaddwd
aaa
push
loop
popa
rorb
ja
xchg
insb
pop
stos
mov
xorl
fwait
dec
movsl
out
outsl
cmp
xor
divb
aas
out
xor
mov
int3
sub
add
ret
xchg
fs
or
adcl
push
repnz
mov
out
es
lret
repnz
lods
mov
inc
movsb
push
inc
and
movsl
cmp
ret
call
mov
dec
mov
aas
test
cmp
stc
adc
sub
loopne
insb
push
fbstp
arpl
add
lret
dec
int3
jp
xchg
aas
imul
mov
inc
jbe
adc
pushf
push
mov
pushf
xchg
inc
adc
add
mov
test
cli
insl
add
insl
or
out
inc
xor
xor
stc
jo
or
push
pop
cltd
fs
cmpsl
and
jno
loopne
test
int
xchg
in
ljmp
mov
sub
dec
pop
insb
adc
push
js
push
push
sahf
jnp
mov
inc
rorl
pop
mov
dec
mov
push
mov
in
loopne
mov
pop
cli
jno
mov
jb
pop
cltd
out
pop
int3
jnp
loopne
scas
mov
in
and
push
leave
jmp
sbb
mov
cmc
fmull
scas
sub
sub
sbb
test
in
xor
sub
push
pop
mov
cs
out
cli
inc
pop
icebp
out
rol
lret
or
call
mov
inc
adc
test
cmp
adc
ret
pop
and
cmpsb
cli
adc
cmp
pop
imul
leave
in
lods
lock
sbb
ficoms
fstps
or
aaa
push
test
xchg
pop
mov
adc
and
lret
out
popa
rcr
cli
xor
pop
in
mov
inc
mov
xor
gs
cmp
xchg
pop
xchg
xchg
inc
js
dec
cld
fisttpll
sahf
push
pop
scas
dec
clc
pop
fstl
xor
orl
jecxz
lret
fildll
pusha
loop,pt
pop
hlt
xchg
sub
push
pop
out
push
cmpsb
mov
pop
cwtl
xchg
pusha
add
jo
imul
jp
mov
bound
jnp
and
mov
sbb
in
scas
and
adc
js
ret
js
fcompl
sbb
ss
sub
mov
mov
nop
xchg
inc
jbe
stc
nop
mov
and
popf
dec
movsl
jne
push
loop
in
push
mov
ret
in
cmp
fldt
stos
outsb
setne
cmpl
loop
lods
dec
inc
ja
xchg
outsb
fstl
mov
jecxz
in
xchg
mov
data16
js
xchg
es
fcom
lods
jg
pop
lods
sbb
imul
enter
add
das
stc
inc
lret
int3
or
pop
sbb
jp
inc
pusha
push
xor
shl
imul
xchg
mov
adc
std
sbb
sbb
dec
iret
cmp
cltd
xchg
aas
push
pop
lret
andl
dec
in
lods
inc
mov
lea
cmc
mov
cmp
mov
xchg
sahf
jne
fs
pop
push
and
add
popa
cmpsb
mov
jne
les
dec
gs
lahf
push
and
hlt
das
jno
bound
and
sub
adc
push
jg
mov
negb
outsl
add
cmp
mov
xor
shlb
mov
addr16
sub
fidivl
mov
fwait
mov
repnz
fsubr
lds
sbb
cmp
lahf
mov
add
cmp
push
repnz
mov
scas
mov
dec
xchg
sbb
test
inc
fildll
push
pop
sahf
push
ss
dec
sub
mov
fbld
pop
sbb
imul
imul
or
push
push
adc
cld
ficoms
mov
push
clc
or
xchg
mov
outsl
and
fdivp
shll
test
lahf
stos
sub
lret
ret
hlt
pop
and
aas
hlt
sub
lret
and
out
adc
icebp
cmp
cmp
out
inc
and
subl
add
insb
out
ret
pop
gs
into
xchg
or
mov
daa
push
rol
scas
pop
aad
or
mov
iret
in
arpl
mov
push
shlb
rorb
cmp
cmp
mov
sbbb
mov
xchg
into
arpl
jle
scas
loop
rorb
adc
fildl
sbb
iret
in
imul
out
dec
cmp
or
add
lds
shlb
jae
cmp
push
or
add
decl
icebp
xchg
cs
pop
mov
mov
mov
cmpsb
fstpl
mov
cmpsb
pushf
andb
mov
xor
sub
icebp
push
cmpsl
sbbb
out
inc
cltd
lcall
daa
add
mov
popa
dec
in
loope
adc
dec
sbb
outsb
orb
aam
sub
xor
repz
jmp
mov
aad
rorb
xor
pushf
inc
adc
add
pushfw
outsb
in
gs
push
and
sbb
imul
aas
mov
mov
stos
mov
lcall
movsb
jecxz
pop
dec
in
mov
and
lcall
cmp
push
mov
enter
data16
jae
add
mov
ss
cmp
and
movsl
jbe
sbb
jmp
ljmp
dec
pop
xor
in
mov
leave
sbb
push
push
aam
dec
cmp
int
xchg
cwtl
cmp
mov
test
out
fbld
sti
scas
mov
add
rcrl
and
adc
repz
mov
jl
aas
and
ret
cmp
test
push
arpl
mov
mov
rclb
xor
xor
and
test
dec
jne
rcrb
and
sub
xchg
lcall
nop
aaa
inc
push
lods
out
push
out
sub
loopne
and
jb
xor
pop
or
add
mov
and
inc
cltd
xchg
aas
lcall
pop
leave
sbb
sub
lock
dec
pop
mov
push
mov
push
lret
xor
pop
adc
inc
test
jecxz
cli
and
sarl
xor
enter
or
dec
jmp
mov
pop
sub
mov
mov
mov
add
pop
mov
pop
mov
push
mov
jl
sub
std
dec
cmc
lcall
out
add
xchg
outsl
in
pop
clc
mov
jns
inc
push
fldt
data16
and
add
mov
stos
cmovne
jae
sbb
shrb
fdivrp
jnp
loope
adc
out
dec
xchg
mov
cmp
dec
arpl
cltd
scas
decl
or
dec
sbbb
cmp
dec
cmp
pop
and
inc
add
mov
push
or
cmp
outsl
out
mov
mov
aaa
jns
arpl
pop
gs
inc
cmp
imul
insl
add
dec
hlt
popa
mov
xchg
pop
cmpsb
mov
mov
int
sub
xchg
lds
jnp
out
mov
push
push
xor
dec
mov
lahf
add
fcoms
push
out
pusha
push
outsl
sbb
inc
int3
mov
pop
mov
shl
mov
dec
std
or
sbb
inc
cmp
jnp
dec
mov
mov
mov
mov
jg
sbb
adc
mov
pop
jecxz
out
cmpsl
jne
ds
movsl
gs
iret
or
sub
call
cmp
mov
and
sbb
inc
in
jg
cmp
psrld
inc
in
and
jg
js
scas
xchg
stos
roll
stc
inc
xlat
push
stc
ss
out
bound
mov
inc
in
jnp
stos
imul
out
icebp
pop
add
push
sub
push
xor
fcoms
out
test
stos
push
pop
cli
fwait
popa
pop
xor
shlb
std
add
loop
cmp
rcrb
cmp
cmc
filds
adc
rcr
mov
push
lods
push
shrb
cmp
iret
lcall
imul
sarl
aas
jmp
push
cmpsb
sarb
jp
push
insl
or
pop
mov
sub
in
xchg
mov
cmp
stc
sbb
das
sbb
or
mov
repz
test
popf
ljmp
dec
dec
push
or
mov
or
in
jb
mov
ja
jp
rcr
add
push
daa
cs
mov
imul
inc
lcall
lods
add
fmulp
push
jb
fdivrs
mov
ffreep
push
aas
in
push
fcompl
test
lea
pop
ret
clc
shrl
imul
movl
cmp
loopne
inc
push
stc
jg
push
popf
add
dec
outsb
and
std
gs
orl
sahf
add
popa
mov
inc
inc
leave
xor
in
test
push
ror
mov
mull
sub
dec
ja
or
sub
ds
mov
push
and
mov
lret
xchg
rolb
pop
xchg
or
stc
notl
fidivrl
jns
push
fisubl
int3
jge
mov
fstcw
pop
scas
push
mov
xchg
cs
mov
fldl
inc
mov
in
mov
test
stos
mov
mov
and
ja
mov
mov
lret
jne
js
loope
mov
dec
adc
pop
je
test
push
mov
ljmp
mov
push
push
std
ja
inc
pop
vmovapd
repnz
fwait
or
andl
mov
pop
mov
mov
popf
dec
add
fildl
push
mov
or
mov
aas
shlb
lds
lods
outsl
lea
mov
xor
add
mov
push
push
sbb
or
pop
sti
jge
mov
stos
aas
inc
iret
jns
movsb
pop
mov
adc
and
shlb
xchg
int
push
frstor
nop
mov
out
imul
pusha
daa
test
push
inc
sahf
or
cmc
fmull
or
sub
inc
inc
cmp
xchg
inc
xor
outsb
adc
cmp
xor
pop
and
shl
mov
lahf
faddl
push
andb
jo
inc
sub
xchg
mov
xchg
jle
stos
imul
pop
insb
dec
xlat
aaa
jg
sbb
dec
push
mov
popl
jae
cmp
pop
mov
out
add
mov
sti
xor
lcall
cs
mov
aaa
jno
pop
mov
or
xchg
inc
jae,pn
inc
or
rorl
jge
jnp
pop
inc
dec
add
movsb
js
imul
fmul
ds
adc
ljmp
lahf
imul
lods
rclb
jl
pushf
and
cmp
push
pop
lods
sbb
shlb
and
pop
fcoms
add
dec
mov
mulps
push
push
outsl
xor
push
dec
lcall
mov
sti
jmp
es
add
fsubrl
mov
out
sub
fldenv
out
orb
hlt
xchg
pop
in
fwait
add
jnp
es
jns
mov
jae
inc
cmp
or
cmpsl
fistl
add
rorl
adc
daa
loopne
jns
aam
es
nop
xor
gs
ljmp
and
and
sbb
sub
push
mov
xchg
mov
call
ja
add
or
xor
dec
mov
cmp
repnz
aas
test
add
and
cwtl
int
adc
xor
incl
jns
ss
cmp
jge
movsl
dec
repz
cld
fidivs
popa
jnp
mov
je
push
or
inc
std
pop
push
popa
mov
push
aaa
daa
iret
scas
pop
mov
jp
pop
das
and
ficompl
insb
rolb
fnstenv
in
addl
adc
out
scas
lret
jmp
imul
data16
mov
jne
mov
call
lret
movl
mov
jae
repnz
rolb
adc
ds
cltd
arpl
xor
cmp
inc
pop
nop
lds
jne
imul
movsb
pop
and
into
add
sti
into
jbe
test
lock
xchg
pop
sbb
or
jmp
sbb
iret
dec
ss
fldt
cmp
test
shll
and
and
cld
out
les
adc
clc
popa
xor
mov
xor
push
clc
dec
into
jmp
ficomps
movsl
outsb
int3
sub
push
push
nop
fstpl
mov
faddp
xor
inc
subl
sti
lret
or
sbb
loop
movsb
jbe
pop
jbe
in
mov
and
shr
mov
xlat
dec
stos
pushl
stos
push
inc
iret
pushf
pop
lahf
out
sub
add
push
push
je
add
stc
inc
andb
rorl
scas
inc
jbe
out
sbb
repz
ret
dec
mov
fistps
or
or
mov
mov
jecxz
cmp
fxch
jmp
jae
sahf
dec
mov
sub
std
or
inc
loope
xor
adc
lcall
mov
push
bound
dec
push
mov
movl
sbb
fs
mov
mov
mov
jmp
mov
movsb
xchg
jmp
pop
repnz
add
daa
cmp
scas
lahf
jne
adc
fs
mov
ds
cwtl
fiaddl
pop
hlt
mov
stos
mov
and
mov
jnp
lret
cli
pop
or
pop
fld
mov
test
gs
push
xchg
or
mov
int3
sysexit
xchg
stos
insl
mov
xchg
je
xor
stc
imul
fildl
bound
xor
and
mov
inc
xor
inc
and
xor
mov
fsubrs
mov
inc
in
and
lahf
cmc
xchg
in
jns
call
xor
popf
push
loopne
enter
insl
mul
leave
mov
mov
out
jb
dec
in
jno
lahf
fistpl
cmp
and
add
rclb
test
imul
rcll
push
cmp
sbb
in
or
sub
loope
sub
push
enter
iret
push
mov
inc
aas
cmpsb
in
popf
dec
les
dec
mov
aad
lea
mov
cmp
imul
xchg
stos
push
inc
cmp
fistpl
cwtl
jb
mov
jg
clc
shll
test
ja
inc
movl
out
sub
cs
fcmovnbe
cltd
popa
sub
or
and
push
iret
add
push
repnz
or
int
iret
mov
test
testl
dec
jbe
stc
jnp
xchg
push
aas
sub
mov
in
xchg
push
popa
jo
or
mov
repnz
ficoml
dec
lods
lds
pop
jae
sbbb
and
and
fdiv
imul
jmp
fstpl
movsl
xchg
test
inc
out
push
xchg
mov
push
lret
les
cld
and
daa
sbb
cmpsb
std
dec
push
pop
xor
jle
push
mov
mov
xchg
ret
das
hlt
mov
fistps
jae
inc
mov
mov
daa
push
mov
leave
lods
dec
icebp
scas
mov
ja
stos
pop
mov
popa
xor
les
xor
sub
in
xor
imul
sub
dec
push
inc
sub
fsubrp
hlt
push
movmskps
les
lret
mov
sbbl
out
sub
out
sbb
jae
idiv
scas
pushf
ljmp
repz
gs
clc
inc
dec
jns
sbb
jmp
test
movsl
cmp
pop
js
push
jl
pop
mov
dec
dec
lcall
xchg
mov
fucomi
fwait
cmp
cltd
adc
shrl
or
adc
or
jnp
xchg
adc
mov
pop
mov
add
pushf
ja
fadds
les
or
inc
pshufw
cmp
push
ret
and
jb
mov
orb
jl
pop
icebp
inc
adc
lret
jp
add
mov
testb
jg
jl
lcallw
stc
jno
xor
cmp
jne
mov
lcall
fistpl
cmp
ja
push
addr16
stc
cs
bound
adc
push
int3
cs
jb
cli
sahf
fwait
gs
test
xchg
mov
idivl
jp
jle
dec
cmc
mov
jl
jnp
or
leave
push
push
mov
pusha
int3
mov
xchg
pop
cmp
test
sub
mov
inc
das
leave
xchg
mov
aad
mov
sbb
inc
in
mov
movsb
xchg
scas
in
and
pop
loop
ja
mov
sub
or
and
mov
and
xor
mov
subl
and
shll
cmp
or
outsl
imul
aam
lcall
push
sti
push
pop
mov
sub
inc
pop
dec
punpckhdq
aaa
pop
sub
cmp
pop
sbb
ret
lret
leave
mov
add
in
aas
mov
popf
dec
das
insl
inc
addr16
adc
out
push
aaa
inc
cmpsb
mov
jnp
or
ss
loopne
push
in
mov
pusha
fmull
scas
mov
subb
or
xchg
dec
mov
push
pop
xorb
leave
mov
mov
imul
add
add
pop
pop
pop
int3
out
push
insl
mov
xchg
les
mov
pop
pop
dec
add
shl
push
sbb
in
push
test
movsb
cmpsb
xor
jmp
mov
jle
push
xor
or
data16
jp
cli
sub
sbb
push
mov
pop
aaa
hlt
push
xor
pop
dec
out
sub
xchg
push
enter
fdivl
pusha
lcall
mov
xor
shll
pushf
inc
insl
pop
fistl
mov
pop
fsubrl
push
fwait
outsl
movsb
add
stos
mov
addb
mov
xchg
pop
add
lret
int3
cmp
fxch
sbb
test
sbb
pop
int
scas
shll
ja
push
or
xchg
cld
mov
lods
jnp
jb
mov
adc
xchg
cli
push
rcrb
popf
int
or
push
loopne
push
pusha
sub
outsl
sbb
nop
jl
pop
repz
jmp
push
mov
fs
popa
dec
gs
sahf
mov
sub
or
imul
xor
andb
ret
mov
das
pop
mov
mov
inc
inc
xor
jmp
imul
mov
cld
jle
enter
push
fmul
stc
test
push
or
mov
aad
inc
fwait
out
daa
pop
outsl
gs
shl
jl
and
adc
mov
into
fdivrs
sti
and
cmp
pop
pop
mov
xor
cmp
addr16
not
sahf
mov
jp
test
roll
test
sbb
sub
dec
cmp
addr16
int
mov
pushf
fucom
adc
popf
push
pop
ds
jo
add
push
dec
jmp
jo
shll
pop
hlt
in
testb
and
adc
shlb
es
out
rol
sub
add
jmp
lcall
imul
mov
push
mov
test
xchg
ja
push
stos
lds
and
orb
mov
repnz
mov
cmp
and
xchg
orl
fdivs
dec
fstl
mov
fwait
mov
and
mulb
fcmovnbe
outsl
mov
pushf
je
popa
dec
loop
inc
test
add
mov
sbb
pop
jno
adc
out
pop
repnz
xor
cmpsb
dec
push
jnp
xchg
jp
cmpsl
mov
into
push
or
lock
pop
test
mov
mul
ret
cmpl
imul
adc
xlat
fwait
outsl
lahf
and
aas
subl
mov
mov
push
inc
xor
mov
cmpsl
std
dec
outsb
jmp
hlt
add
xchg
dec
jns
jb
out
cmpsb
mov
mov
outsl
mov
xor
int
insl
push
xchg
hlt
mov
and
pushf
repnz
mov
inc
mov
xor
loopne
mov
test
adc
mov
mov
in
dec
jae
pop
jbe
mov
sub
push
mov
lods
repz
cmp
jle
mov
ds
mov
call
dec
push
add
dec
cmp
jno
rcll
mov
sub
jnp
bound
in
jecxz
fwait
out
mov
fcmovnu
cld
scas
out
ss
pop
pop
or
imul
and
jnp
dec
push
test
and
out
rorb
div
and
hlt
inc
cmp
leave
imul
scas
aam
push
push
jb
add
shll
mov
icebp
xchg
test
iret
shrb
frstor
lods
std
mov
mov
mov
aad
in
jecxz
mov
push
sbb
das
dec
mov
push
lock
aas
sbb
shrl
into
jnp
and
mov
sti
or
jl,pn
adc
xlat
mov
dec
dec
shrb
sbb
inc
fs
jbe
or
mov
mov
xchg
dec
dec
shlb
and
out
xchg
iret
nop
cltd
and
or
stc
mov
lahf
orb
fildll
fildl
jge
in
or
and
enter
mov
xlat
gs
adc
dec
sub
mov
hlt
xchg
mov
int
xlat
inc
inc
pop
mov
sub
into
aad
or
xchg
mov
sub
pop
push
mov
movsb
cmpsl
cmpsl
ds
int3
ja
and
idivl
xor
xchg
mov
xchg
rolb
xlat
or
loope
adc
ljmp
arpl
jp
out
into
fwait
aaa
ljmp
add
mov
test
lods
arpl
jle
arpl
jb
sub
idivb
xor
and
movsb
stos
ss
jle
pop
movsl
cmpsb
push
mov
fildl
dec
xchg
push
decb
pop
into
mov
mov
idivl
pushf
or
cmp
cltd
inc
stc
cmp
add
cmp
dec
inc
mov
lcall
xor
cmpsl
mov
std
into
int3
out
fdiv
cmp
add
dec
push
imul
or
mov
pop
test
xor
dec
imul
es
mov
xor
daa
or
jbe
nop
aam
push
mov
mov
dec
mov
daa
jl
mov
int
xlat
cmp
jbe
outsb
jo
mov
push
dec
lret
jae
pop
stc
outsb
idivb
mov
aas
in
mov
test
push
cmp
inc
sub
mov
add
mov
cmp
stos
or
enter
lcall
mov
pushf
inc
pop
in
sbb
cmp
ror
or
cmpl
int3
mov
call
repnz
lcall
dec
xchg
scas
mov
int3
fnclex
daa
daa
pushf
std
or
mov
inc
ret
pop
mov
jecxz
mov
stos
jo
rol
leave
add
sbb
ds
pop
xchg
mov
js
push
mov
adc
xor
pushf
daa
scas
aad
or
cmc
or
mov
cmpsb
jle
xchg
loopne
push
ret
push
xchg
mov
int3
mov
add
sub
pop
inc
pop
testb
test
sbb
push
ss
into
hlt
cld
mulb
lods
mov
cmc
std
lock
icebp
gs
sbb
andb
popf
mov
call
jne
outsb
jbe
leave
push
pop
fisubrl
sbb
hlt
aam
xchg
adc
sub
std
imul
rorl
fmull
out
notb
jo
and
inc
sub
dec
mov
cmp
xchg
into
imul
jb
data16
pop
int3
mov
test
sbb
idivb
repz
mov
rolb
adc
or
imul
push
adc
dec
jb
pop
pop
jae
icebp
leave
xchg
pusha
add
into
lea
sbb
femms
sbb
fcom
mov
and
cmpsl
push
lcallw
arpl
aam
and
scas
inc
pop
aas
add
mov
ja
and
lods
mov
rcrb
push
scas
xchg
es
xor
imul
jmp
inc
push
or
mov
loop
mov
ljmp
repnz
push
dec
inc
leave
or
sbb
dec
repz
add
pop
push
mov
aas
jo
cmp
cmp
xchg
rcr
addr16
pop
fst
xchg
insl
out
adc
adc
pop
popa
pop
dec
mov
push
test
arpl
jo
mov
clc
mov
imul
or
and
pop
adc
cs
jmp
mov
xchg
lods
cltd
cmp
mov
bound
xlat
mov
rorl
fs
call
jae
sbb
sub
cwtl
add
mov
loope
fisubrl
sub
and
push
icebp
or
lds
pop
nop
pop
jge
ja
arpl
ss
decl
mov
int
pop
xchg
pop
sbbl
xchg
test
jb
mov
sub
into
gs
pop
adc
out
lcall
int3
or
aas
mov
sub
mov
push
icebp
in
dec
ret
popa
add
xchg
stc
mov
addr16
dec
or
stos
jp
mov
xor
inc
and
fisubs
rcll
dec
mov
aas
cli
cmpsb
push
inc
xchg
scas
xor
cmp
rolb
or
jg
mov
and
loopne
mov
push
lahf
insl
insl
mov
stos
daa
lcall
sub
filds
pop
shll
sbb
insl
stos
adc
rcrl
jns
stos
das
mov
xchg
sarl
dec
cmc
sub
mov
xlat
push
jle
dec
jle
xchg
js
ja
mull
push
cmp
jae
sub
and
stos
mov
or
push
and
inc
push
jne
dec
xchg
frstor
inc
or
or
clc
rcr
stos
mov
sti
cmc
imul
push
les
jle
mov
xor
gs
jge
jp
aaa
in
cmc
iret
stc
jecxz
jmp
or
lock
sti
jp
xchg
out
sbb
cmpsl
push
sub
xchg
sub
fchs
lock
out
jbe
lahf
dec
mov
xor
sbb
pushf
inc
es
call
sbb
mov
inc
xor
xorl
xlat
stc
movsb
sbb
int3
dec
xchg
cmp
push
orl
pop
rolb
sahf
jl
imul
bound
in
or
scas
test
jge
sbb
outsl
xchg
sbb
pop
xchg
add
inc
pop
addl
cmp
popa
sub
in
not
js
cwtl
adc
lret
fwait
lds
dec
and
mov
leave
jp
imul
loope
dec
ss
pop
jne
test
cs
adc
ljmp
out
pop
sub
movsl
xor
mov
insb
push
add
mov
pusha
fisttps
fstpl
aad
aam
lds
scas
ljmp
cmp
aad
in
cmp
push
xchg
fldcw
add
add
push
ret
or
jae
imulb
xchg
and
jo
fldcw
popa
add
je
into
pusha
inc
push
push
xchg
fsubr
scas
sbb
into
fucomi
pop
hlt
sub
lods
pusha
push
ret
dec
cmp
xchg
mov
adc
fbld
mov
in
jecxz
movsl
test
lcall
push
pop
jmp
push
out
cmp
dec
xchg
aad
test
mov
icebp
lock
je
stos
cmpl
pop
hlt
rolb
mov
xchg
inc
jbe
jmp
and
aas
xor
iret
mov
mov
jle
xor
xchg
lcall
adc
add
cmp
outsl
or
aas
ss
imul
lods
dec
lcall
js
mov
test
ljmp
pop
xchg
mov
imul
std
or
mov
sub
sub
out
jge
pop
pop
pushf
lea
mov
jp
mov
outsb
cs
shlb
cmpsb
sub
enter
int
push
xchg
xchg
ljmp
pop
jmp
outsb
push
cmp
push
fs
and
mov
or
pop
add
lcall
xor
lea
in
xor
xchg
inc
adc
rorl
xchg
cmpsl
fidivrl
push
adc
call
fidivs
out
leave
xchg
cmpsl
push
shlb
mov
jno
insl
dec
cld
jg
arpl
out
sbb
jge
dec
or
mov
sbb
in
fisubs
fisttpl
mov
dec
pop
rorl
loop
sub
int
jns
xlat
fcoml
mov
sbb
xchg
clc
setb
push
into
lahf
ss
fcmovbe
call
cmpsb
mov
cmp
add
mov
xchg
popf
movsl
mov
add
mov
cli
jmp
xor
cmp
cs
insl
gs
mov
pop
out
fsubrl
or
cmpsb
dec
or
aad
leave
mov
mov
lock
jle
dec
inc
frstor
seta
mov
fnstenv
jg
lahf
sbb
jecxz
push
sbb
sbb
sub
iret
or
cli
mov
and
mov
jg
cmp
cmc
and
xchg
icebp
rorb
adc
call
and
jmp
jmp
in
rcl
mov
xlat
mov
xchg
or
fadd
jmp
xor
out
push
xor
arpl
inc
outsl
enter
inc
imulb
aad
sbb
sbb
or
data16
sub
dec
mov
jne
lods
std
xchg
aam
stc
sbb
aaa
adc
inc
push
sbb
inc
mov
rolb
cmp
jb
push
sti
sbb
mov
cld
in
std
xchg
mov
and
pop
cld
iret
insl
shlb
dec
mov
add
lahf
popl
jbe
mov
xor
sub
popf
sub
fdivrs
test
mov
rol
adc
pop
or
pop
aad
mov
repnz
in
mov
sbb
aad
clc
out
mov
jns
xchg
mov
out
cmp
sub
inc
ret
int
inc
out
testb
repnz
repnz
or
jbe
mov
rcl
sub
addb
pop
lock
mov
mov
stos
mov
pop
out
cltd
xchg
mov
sub
sahf
bndldx
les
icebp
rol
insb
addr16
call
int3
cmpsb
fxtract
call
rclb
jge
pop
xlat
out
jns
insb
mov
loope
xchg
insb
or
cmp
roll
sbb
adc
out
cmpsb
mov
movsb
push
mov
jns
shlb
ror
nop
sbb
jns
inc
mov
and
jmp
loope
mov
dec
push
shrb
aam
jns
cmp
jl
addr16
xorb
test
push
js
mov
dec
mov
sti
sbb
add
mov
sarl
fs
inc
jo
xchg
inc
fimull
insb
pop
xchg
inc
pop
cmp
xchg
mov
push
enterw
mov
inc
push
out
into
pop
sbb
shlb
jae
movsl
mov
xor
sbb
lret
shrl
and
xor
and
cmp
aad
pop
push
inc
test
aad
adc
cmpl
out
adc
add
das
fwait
lahf
push
jge
daa
fs
ljmp
add
dec
daa
aas
lods
test
push
adc
loopne
mov
xchg
cli
test
ret
imul
jo
dec
addr16
xor
dec
add
mov
cs
adc
lret
inc
dec
push
shll
and
jmp
jne
lcall
sbb
fwait
cmp
movsb
mov
inc
lcall
mov
bound
push
rorl
shlb
jae
push
in
jecxz
cmc
sbb
mov
xchg
cmpsb
mov
adc
mov
insb
sbbl
loope
icebp
push
scas
aad
lret
call
xchg
loop
jecxz
dec
filds
sbb
out
imul
ljmp
pop
popf
mov
aaa
mov
cmp
adc
loope
sub
loopne
rcr
cmp
jmp
cmc
imul
jl
lds
add
or
outsl
sbb
adc
adc
inc
lods
std
pop
push
and
shlb
movsb
mov
mov
xlat
pop
sbbl
lods
mov
xchg
mov
insl
mov
test
rol
mov
lods
js
push
ja
sar
xchg
es
pushf
push
jp
pop
adc
cmpsb
fadd
pop
mov
or
sete
imul
pop
in
stc
lds
dec
data16
mov
mov
mov
mov
notl
mov
xor
imul
mov
xlat
mov
xchg
mov
icebp
test
arpl
xor
xchg
fwait
pop
mov
mov
mov
mov
rol
and
xor
orb
lcall
stc
adc
dec
hlt
es
fstl
sub
mov
jle
push
inc
inc
push
inc
mov
jnp
xchg
jbe
mov
mov
lods
dec
int
xchg
ret
in
or
jmp
push
mov
xchg
xor
in
ljmp
mov
push
cmp
shll
mov
pop
cmp
hlt
iret
jne
test
jp
iret
push
js
rorb
adcb
pop
pusha
ss
sub
int3
jno
loopne
adc
dec
or
adc
xor
test
cmp
mov
movsb
stos
pop
mov
movsl
sub
lods
cltd
es
in
incb
jo
cmc
leave
call
andl
pushf
xor
orb
pop
pop
pop
dec
stc
mov
sub
xor
xlat
decb
pop
inc
push
adc
sub
int
pop
xchg
cmp
data16
loopne
or
sahf
lret
dec
sub
dec
mov
jle
xchg
mov
or
lret
sub
or
cmp
push
cmpsb
mov
jnp
xor
mov
test
fcoml
cmp
xchg
aas
mov
adc
cmp
and
lcall
cs
push
std
popf
sti
lret
pop
push
jae
xor
mov
xchg
pushf
lods
sbb
aad
jge,pn
cmc
ret
dec
cmp
sub
shrl
pop
jge
mov
add
es
add
mov
es
cmp
in
lods
mov
dec
test
repz
imulb
adc
pop
mov
adc
popf
xchg
fistpll
mov
fsub
ret
xchg
addr16
lds
dec
ss
dec
test
ljmp
cmpsb
inc
cli
push
inc
in
fchs
xor
add
popa
and
xor
ret
fistpll
dec
cs
xchg
scas
popa
mov
mov
xchg
arpl
dec
push
cwtl
jmp
aam
adc
ljmp
mov
clc
stos
mov
cld
mov
sub
mov
adc
fmull
sahf
ljmp
rep
ja
ds
mov
js
xchg
nop
sbb
imul
mov
aas
add
test
pop
popfw
fs
clc
mul
adc
shrb
or
cwtl
cmc
lahf
pop
aam
cmpsb
mov
bound
xlat
dec
pop
add
jle
sahf
inc
cmp
push
out
test
cmpsl
jl
pop
xchg
adc
mov
sub
cmp
mov
xchg
shrb
lcall
fstpl
testb
cmp
and
test
push
cmp
dec
cmp
insl
inc
subl
fidivrl
mov
xchg
pop
insl
popl
and
mov
inc
pop
or
in
mov
push
cmp
sub
sub
push
push
fdivrl
ljmp
cmp
xchg
andl
jecxz
mov
push
ficoms
and
test
pop
and
stc
jg
sbb
mov
dec
xchg
popa
scas
pop
mov
jg
inc
sahf
push
fiaddl
movsl
inc
shll
dec
add
insl
js
adc
lea
pop
cld
fcom
mov
pop
jge
aas
and
out
popf
xchg
jmp
inc
ret
or
int
mov
pop
inc
adc
pop
push
pop
int
test
out
dec
mov
popf
cltd
lock
mov
stos
jp
pop
and
xor
jae
jmp
pop
sbb
mov
clc
dec
pop
adc
mov
orl
pop
dec
cmp
adc
push
ret
xchg
xor
inc
sbb
ja
mov
sbb
icebp
and
mov
je
lahf
daa
or
lahf
add
les
inc
pop
cltd
and
pop
xchg
rcll
sub
jp
nop
push
mov
std
dec
dec
fcomps
rcl
fcomps
pop
inc
xor
popa
in
test
lock
aad
rol
mov
bound
vunpckhps
add
dec
sbbl
sbb
loope
cmpsl
fidivs
jnp
and
inc
sub
fisubrl
aaa
sbb
movsl
pop
pop
aaa
dec
xchg
sbb
xlat
and
mov
push
rorl
add
mov
test
in
sub
stos
sub
movsb
xchg
push
xor
test
and
fisttpll
test
xor
mov
fadds
je
shlb
xorb
jno
das
test
xchg
mov
data16
push
pop
out
leave
daa
test
add
out
stc
jne
pop
xor
xchg
or
mov
cmp
xchg
mov
xchg
mov
mov
ja
xchg
lret
or
xorb
je
jl
inc
enter
mov
inc
push
mov
jns
leave
cmpsl
fcmovbe
add
jl
jge
add
adc
or
fsts
sub
push
stc
ficoms
leave
push
jb
gs
sub
fisttps
cmp
cmp
imul
sub
mov
enter
push
xlat
xchg
lea
repnz
pop
cltd
mov
std
inc
pop
sub
add
mov
push
fwait
inc
cli
adc
fiadds
fbstp
fildll
push
mov
test
inc
pop
loope
mov
jae
pop
lea
and
sbb
sbb
loope
jb
cwtl
lret
addr16
sub
mov
sahf
subb
dec
es
cmpsb
or
xchg
jne
out
push
dec
inc
inc
loope
ljmp
movsb
xchg
sub
cmp
fucomip
mov
in
bound
stc
cli
mov
mov
shrl
xchg
movl
mov
jecxz
sbb
sti
es
into
xchg
sbb
stos
nop
xchg
xchg
inc
psubw
or
or
mov
push
mov
popf
sub
adc
in
call
ss
push
int
lret
push
xor
sti
rcrl
stos
and
je
push
mov
out
in
repz
mov
sub
push
mov
arpl
cmp
movsb
addl
pop
addb
rorb
xor
xchg
jo
enter
mov
mov
ja
xchg
sub
xor
clc
mov
inc
icebp
je
psubusb
test
shrb
jne
xorb
jnp
or
ror
cmpsl
stos
clc
stc
cltd
inc
xlat
enter
cmpsb
ret
subb
sbb
pop
adc
cmpb
mov
std
gs
and
insb
loope
ret
push
stc
cs
aad
cs
pusha
pop
xchg
das
inc
hlt
pop
insb
cltd
mov
ficomps
xchg
push
mov
and
lea
call
or
orb
ss
pop
inc
adc
scas
jp
mov
ficoml
or
out
jo
pop
push
xchg
mov
sbb
out
adc
add
push
jle
xlat
xor
fwait
in
dec
stos
fdivrs
test
mov
stos
jne
pop
mov
push
int
mov
push
mov
mov
scas
pop
cmp
dec
inc
fsubr
jne
jno
xor
adc
xchg
sub
ret
jmp
stos
call
inc
pop
repz
xchg
jae
dec
mov
push
mov
or
and
mov
xor
or
sbb
insl
mov
adc
and
mov
and
daa
and
dec
cmp
jnp
aaa
sahf
or
jge
sub
movl
xchg
jg
and
xchg
inc
bound
lret
sub
jl
dec
jg
mov
sbb
jae
mov
lock
sbb
repnz
mov
fldl
sbb
sbb
and
repnz
movsl
dec
ret
cld
dec
into
adc
fdivl
ja
cld
xchg
movl
sub
xor
les
jecxz
incl
jl
cltd
sti
decb
cmp
subl
ljmp
pusha
nop
les
jnp
jg
inc
jmp
fnstsw
inc
shlb
push
imul
nop
add
daa
sti
and
ds
ds
mov
cmpsl
daa
or
jbe
psrld
mov
or
cmc
sti
fwait
stc
push
adc
enter
cwtl
mov
inc
call
pop
into
scas
xor
xchg
mov
mov
pop
stos
das
dec
je
cld
mov
lret
mov
mov
add
push
scas
enter
xlat
test
mov
je
sub
cld
mov
xor
xchg
sti
jge
mov
or
in
jne
cmp
sarl
xlat
adc
call
inc
imul
sub
out
filds
enter
ret
push
testl
mov
cltd
pop
movsl
rorl
pushf
loope
insl
lds
outsl
xlat
sbb
lds
jae
hlt
mov
pop
jns
push
inc
xor
jnp
ret
fwait
adc
pop
dec
lods
je
or
bound
mulb
repz
mov
jo
and
jnp
fidivrs
mov
aas
fldl
ror
push
popf
or
outsl
or
lret
shll
xchg
sub
lcall
dec
inc
data16
outsl
movsl
and
adc
sub
stos
imul
cltd
cmp
push
das
sub
dec
pop
stos
adc
icebp
nop
xchg
mov
fwait
lcall
popa
idivl
repz
lea
pusha
push
and
jl
inc
jmp
loope
dec
mov
cmp
enter
mov
rcll
dec
test
mov
sarl
and
xlat
inc
mov
jmp
add
mov
mov
jb
mov
ljmp
daa
in
fildll
sbb
lcall
idiv
sub
stos
nop
mov
test
rcl
scas
imul
mov
mov
and
nop
sbb
popf
test
lods
in
mov
adc
addl
test
mov
xorb
iret
mov
or
xor
sbb
lcall
hlt
jnp
jae
outsl
mov
enter
and
dec
sub
cmc
fs
jmp
scas
in
dec
push
push
test
enter
sub
fsubl
mov
adc
addr16
push
out
mov
xor
lods
aas
dec
in
int3
cmp
or
add
mov
jnp
pop
mov
pusha
mov
out
pop
insl
adcl
ss
xor
pop
dec
loope
mov
repnz
mov
fmul
sahf
lock
push
aad
lods
shl
mov
cwtl
popf
sub
lret
int
out
push
test
push
test
or
xor
ljmp
sbb
dec
sub
xor
repnz
cld
mov
stos
sub
shll
inc
mov
scas
scas
sahf
out
out
jno
rorl
adc
xor
fwait
out
popf
jbe
mov
push
xchg
repz
outsb
aad
loopne
xchg
inc
sbb
call
adc
nop
outsl
lods
xchg
cmp
mov
sti
adc
sbb
push
jle
xchg
sub
xchg
adc
and
lea
push
and
aas
movsb
mov
mov
and
mov
test
adc
jmp
stos
mov
jbe
jns
xchg
cmpsb
test
fwait
pop
les
mov
popa
test
int3
push
or
test
xor
jp
jno
imul
cmp
hlt
pop
add
movl
movsb
dec
jg
inc
pop
mov
jecxz
sbb
mov
jo
sahf
fmuls
or
pop
ljmp
xchg
stos
lcall
xchg
push
jns
mov
out
sbb
enter
lods
inc
push
sbb
or
mov
stos
inc
data16
pop
xor
cmp
test
hlt
in
repnz
ret
adc
fs
pop
lret
jns
ja
push
test
in
in
add
push
xorl
jbe
dec
int3
cli
jbe
hlt
sub
lds
xchg
dec
cmp
and
push
ret
cmp
add
pop
data16
xor
pop
xor
clc
iret
mov
nop
push
test
sbb
movsl
aad
fists
iret
cld
pop
xchg
sahf
adc
mov
sbb
lds
outsb
jno
jne
cmp
jg
xchg
add
out
push
or
adc
daa
repz
mov
jnp
rcr
mov
adc
pop
push
inc
test
stos
add
lods
daa
jnp
mov
loopne
cmp
add
sub
sahf
sbb
js
out
jmp
cmpsl
mov
popf
xchg
rdpmc
cmpl
xchg
mov
push
ss
lock
push
cmp
jb,pt
mov
mov
sbb
cmpsb
inc
push
stc
out
imul
addr16
jmp
mov
adc
pop
scas
and
adc
jb
inc
push
insl
jno
daa
cmp
mov
xchg
push
jecxz
lret
xchg
test
fsubrs
adc
repnz
cmp
or
or
pop
sbb
inc
mov
test
jl
cmpsb
scas
dec
icebp
icebp
jge
sub
outsl
push
stos
stos
add
or
imul
pop
jp
pop
jecxz
xchg
insl
inc
lret
stos
mov
xchg
fidivrl
daa
push
arpl
test
pop
jl
mov
mov
jb
jp
jns
fdivs
bound
sbb
mov
sub
mov
mov
mov
xor
mov
sbb
add
pushf
xor
aas
mov
nop
repnz
into
test
repz
outsl
inc
test
mov
mov
and
fisubl
sbb
fistpll
sbb
insb
test
lods
sub
push
push
dec
mov
les
cwtl
jge
push
jno
xor
insb
pop
icebp
jecxz
xchg
and
lahf
jne
dec
jnp
jg
pop
cmp
scas
popa
xchg
sub
lahf
pop
dec
into
push
dec
cmp
loopne
sbb
jle
adcl
push
adc
in
stos
aam
movsl
in
push
sbb
xchg
sub
call
adc
int
ficoml
nop
enter
popf
and
lods
aam
outsb
orps
arpl
mov
cmp
dec
int3
fstpt
sti
push
mov
cld
dec
cld
shlb
add
inc
std
dec
and
les
imul
add
jne
adcl
jne
std
fnstenv
xchg
push
xchg
ljmp
cmpsb
push
lods
std
cmp
push
sahf
mov
push
mov
jp
notb
xchg
fwait
mov
lods
fsub
and
mov
data16
xor
push
inc
dec
dec
pop
insb
sbb
fwait
ret
ljmp
mov
jae
in
stos
gs
cli
mov
jl
dec
mov
gs
data16
inc
in
xchg
mov
push
sbb
pop
test
dec
inc
push
push
movb
sub
mov
out
repz
push
insl
out
cmp
or
and
neg
gs
pushf
je
notb
push
cmp
out
xor
and
push
lock
xchg
ret
jg
pop
add
mov
jmp
in
xor
add
jg
jp
mov
xor
daa
inc
arpl
in
push
jg
xchg
cmpb
ds
stos
sub
mov
adc
jmp
sahf
pop
pop
cwtl
dec
test
adc
shlb
leave
inc
nop
dec
jp
test
inc
rcl
dec
loope
add
cmc
adc
inc
xor
arpl
mov
sahf
xchg
cli
imul
xor
test
cld
outsb
ljmp
xor
aam
sbb
push
fstpl
pop
jnp
lock
lahf
das
cmp
mov
outsb
sahf
push
test
dec
mov
and
out
es
sub
push
shl
lcall
mov
xor
mov
and
lods
jg
jecxz
aam
cltd
cmpsb
and
dec
daa
adc
sbb
mov
sbb
imul
or
pop
mov
mov
jl
cmp
sub
loopne
xchg
gs
lds
dec
test
leave
lret
sbb
sub
fisubrl
inc
xor
sub
nop
sbb
rcll
lods
or
sbb
sbb
mov
push
cwtl
sahf
ds
fs
push
lahf
fs
fcomps
push
in
mov
mov
cmp
mull
xor
gs
arpl
into
imul
mov
les
movsl
mov
mov
pop
jo
mov
fdivr
push
in
ja
imul
inc
insb
pusha
pusha
lds
cmpb
sbb
adc
in
in
push
stos
rcl
jnp
adc
aam
mov
dec
stos
push
cmpl
pop
adc
or
sti
dec
jp
sub
jle
fdivs
and
dec
or
mov
sarb
aaa
jmp
add
jg
mov
and
or
and
pop
js
hlt
add
pop
in
jne
adc
pop
pop
ret
arpl
subl
call
iret
icebp
movsb
pop
inc
and
push
cmp
cmp
sub
mov
and
imul
adc
adc
pop
imul
adcb
fildl
dec
push
cli
mov
push
loopne
iret
mov
mov
decl
sbb
dec
inc
and
pop
popa
inc
sub
and
push
inc
movsb
push
lret
lahf
movsl
loope
mov
cmp
and
xor
mov
fnsave
jl
int3
add
aad
jmp
sbb
mov
sbb
push
mov
sbb
aaa
movsl
les
xchg
int3
out
hlt
jmp
das
jg
es
fidivl
int
je
xlat
mov
cmc
mov
gs
imul
rcr
sub
popa
push
push
jl
and
cwtl
test
push
and
aaa
in
sti
jle
cmp
pop
push
xchg
cli
adc
xor
xchg
lret
cmpsb
xchg
mov
aaa
inc
and
push
out
lcall
scas
sbb
mov
es
and
xchg
push
or
xchg
ret
mov
movsl
or
outsl
push
mov
je
adc
and
xchg
sti
outsb
test
push
shlb
shl
cmpsb
cld
mov
ret
jnp
jns
mov
int
in
jp
or
jmp
dec
mov
xlat
push
or
dec
inc
mov
iret
popa
jb
stos
jecxz
lcall
mov
in
pop
sarb
push
cmp
lret
xchg
or
ljmp
mov
mov
sub
mov
daa
cltd
cmpsb
xchg
push
push
jle
jb
fistl
insb
sti
in
sbb
pop
mov
or
imull
repz
pop
mov
sbb
cld
mov
dec
dec
sub
or
pusha
mov
iret
fnstsw
cmp
arpl
ficomps
mov
outsl
dec
out
lods
roll
cmpsl
test
cmp
xchg
inc
mov
lret
lds
je
popa
adc
call
js
sub
scas
mov
imul
jno
or
pushf
sbb
shll
add
or
xchg
jg
mov
and
jno
imul
in
nop
mov
push
fs
adc
inc
push
lock
sbbl
pop
leave
or
out
mov
pop
cmp
add
pop
andb
dec
je
mov
aam
sub
mov
lret
xchg
rcr
mov
out
ret
cmp
in
stos
sahf
jmp
inc
inc
mov
je
xchg
sbbb
pushf
xchg
xchg
xchg
sbb
xor
cmp
or
adcb
test
mov
jle
cmpsb
cwtl
fdivrp
adc
nop
cmp
iret
imul
xchg
xchg
adc
imul
jae
dec
rcll
sub
shl
or
shrl
addr16
out
sbb
das
pop
push
leave
subl
popf
dec
adc
mov
leave
mov
mov
nop
jb
jns
cltd
and
stc
sub
adc
in
dec
jmp
mov
es
fistpll
fwait
lahf
rclb
xor
push
les
negl
push
xor
cmp
mov
mov
outsl
cmp
fidivs
dec
adc
test
sti
shll
jne
push
dec
lret
jp
mov
nop
data16
xchg
fsubrl
popf
pop
test
inc
roll
in
cmp
in
push
test
mov
mov
into
pop
rcrl
cmpsb
pushf
aas
jnp
into
xchg
push
insl
inc
negl
xchg
idivl
cmpsb
push
fdivrs
lock
sub
enter
fsubrl
or
xchg
cli
fmuls
imul
jbe
mov
mov
mov
iret
fstps
xchg
jle
push
test
xor
cltd
and
xlat
stc
in
sub
adc
mov
lahf
hlt
orl
or
jg
xor
imul
mov
sti
push
cmp
mov
and
inc
jmp
cmc
push
push
dec
ja
fcmovbe
adc
outsl
call
js
push
pop
push
frstor
push
push
inc
popf
or
mov
les
mov
cmp
aad
push
inc
outsl
dec
fs
cmpsb
in
les
insl
pushl
jge
mov
test
jnp
push
es
imul
popa
outsl
inc
mov
sarb
into
pop
leave
pushf
ljmp
iret
pop
pop
mov
mov
popa
cli
mov
push
in
add
push
push
dec
pusha
xchg
je
jb
andl
call
push
sti
cwtl
xor
or
cmpsl
ds
adc
cmc
mov
cli
xor
cld
addl
outsl
or
rcrb
xlat
aas
rorb
cmp
je
rcrl
push
sti
push
xchg
rcrb
nop
adc
xor
lret
clc
scas
jg
in
and
fwait
insb
fs
mov
fisttpl
sbbb
sbb
pop
jo
in
xor
inc
jnp
fldenv
push
stos
dec
xlat
xor
mov
ds
push
popa
rcrl
das
jmp
call
xchg
jmp
mov
and
cmp
mov
adc
xor
mov
addr16
fcoml
ljmp
push
aaa
xchg
push
dec
push
dec
test
mov
push
cmp
inc
daa
mov
popf
icebp
movsl
jno
or
stos
std
sub
cli
lods
sub
jecxz
mov
sti
xchg
incl
fsubp
test
aaa
jle
cmp
xor
inc
or
in
ret
jle
mov
popa
cmpsl
sub
push
sbb
push
sub
lret
std
add
fldl
add
std
push
fsubrs
inc
sub
xchg
sub
adc
inc
enter
and
push
je
fs
test
add
add
ret
fbstp
shr
outsl
jae
xor
mov
rolb
push
inc
pop
test
mov
lods
pop
mov
dec
jae
ffree
inc
in
ret
lods
xchg
or
pop
dec
sahf
rcr
dec
in
xchg
xchg
orb
add
pop
out
outsb
insl
std
fldcw
lret
adc
adc
leave
cmp
mov
push
jbe
pop
test
mov
testl
es
sbb
dec
mov
inc
sub
movsl
stos
mov
arpl
sbb
or
and
lret
int
scas
jnp
sub
ljmp
lret
xchg
pushf
mov
cmpsl
pop
cmp
xchg
push
popf
cmp
iret
stos
sub
movsb
scas
sbb
repnz
inc
sub
sub
lock
xchg
shrb
cmc
inc
mov
push
fildl
in
lcall
sub
mov
inc
mov
hlt
test
cs
dec
dec
mov
pusha
sub
pop
sub
scas
repz
inc
rcl
andb
les
sub
incb
out
cmpl
push
notb
ficoml
and
scas
push
or
not
push
cmpsb
inc
sahf
add
or
xor
outsb
test
loope
cltd
lock
jg
dec
lea
imul
dec
dec
xchg
jo
xor
stos
leave
sub
push
pop
inc
rcll
fisttpll
pop
jae
push
push
sbb
es
call
sub
movsl
ja
lret
bound
movsl
scas
push
dec
or
jb
xorl
pushf
cltd
icebp
pop
mov
outsb
and
cmp
pop
pop
jns
jnp
lock
sub
push
push
pop
or
sub
repz
fwait
and
hlt
xchg
mov
lods
mov
push
inc
jg
lcall
les
movsb
or
adc
xchg
scas
dec
xorl
push
imul
sbb
push
mov
push
in
into
mov
inc
push
add
inc
adc
cmp
inc
inc
mov
stc
inc
cltd
lock
cmp
ss
inc
mov
lods
out
fwait
xor
and
popf
xchg
pop
jnp
dec
rcrb
push
sarb
dec
gs
js
fwait
mov
inc
adc
xchg
out
popf
addr16
insl
movsb
stc
push
pop
dec
push
jb
out
xchg
stc
rcr
mov
push
fwait
cmp
add
movsb
jecxz
lds
iret
inc
add
js
mov
adc
jmp
cmp
xchg
xlat
cmp
cmp
jnp
popf
cwtl
orb
dec
fninit
jg
int3
and
insb
out
ds
pop
lea
arpl
cwtl
out
mov
dec
iret
lea
out
pushf
pop
adc
dec
xlat
cmpsb
xchg
sub
jno
pop
scas
mov
out
aas
dec
mov
or
and
adc
mov
mov
insl
xor
sbb
das
mov
ret
cmp
xor
mov
call
and
mov
aaa
xorl
outsb
test
ljmp
mov
or
lahf
mov
cwtl
cmp
repnz
or
fwait
int
out
ss
cwtl
in
add
cmc
nop
aad
mov
es
popa
cmp
pushf
js
mov
mov
mov
mov
mov
ret
sbb
ret
jns
sbb
dec
sahf
rol
push
sbb
shll
adc
sbb
pop
pop
daa
or
sub
jb
cmpsl
mov
dec
shlb
addl
aas
jb
loopne
pop
push
dec
dec
lock
xor
push
loopne
pushf
mov
into
fdivp
push
xor
push
jbe
shll
jecxz,pn
mov
std
cmc
loop
sbbb
aaa
lret
and
xor
lahf
xchg
sub
xor
lret
popa
insb
pusha
sub
xor
sahf
jg
mov
aam
jno
or
test
jge
out
jge
dec
add
fistpl
mov
cld
xor
lock
inc
jbe
cli
dec
sub
push
cmp
outsb
xor
shll
sbb
add
mov
xchg
je
movsb
loope
xchg
sub
xchg
popf
rorb
stos
mov
jns
dec
aam
mov
lahf
sub
nop
ret
adc
push
jae
aaa
aaa
mov
clc
pop
push
push
xchg
mov
mov
dec
leave
xchg
sub
je
imul
jle
sub
cltd
jg
xor
cmp
nop
jbe
cmpsl
xlat
cmp
xchg
aad
sub
cmp
ss
lret
mov
push
push
call
lret
fs
and
sbb
mov
cld
cwtl
ljmp
jge
add
jg
jb
sub
xor
push
mov
xchg
stc
incl
clc
mov
mov
mov
dec
xor
fcmovu
pop
cld
sti
shl
sub
cwtl
shld
clc
ficoml
jb
je
and
cld
outsl
insb
inc
loope
jmp
push
mov
movsl
push
mov
outsl
add
js
dec
and
cmp
sub
rclb
fwait
andb
loope
mov
and
gs
aas
xchg
mov
sbb
adcb
dec
mov
repnz
dec
sbb
xor
xchg
stos
inc
push
ss
and
sub
and
sub
sahf
xchg
cmp
jecxz
jne
add
sub
pop
out
push
jb
dec
lahf
xchg
dec
dec
xor
divl
push
ret
movsb
jg
xor
push
cmpsl
test
ja
dec
mov
shlb
xchg
jl
add
cmp
lds
das
add
pop
lea
pop
add
push
out
xor
pop
jmp
int
ljmp
sbb
rcrl
or
scas
lds
xchg
mov
pop
outsl
inc
rorl
fmul
int3
adcl
mov
in
decl
or
adcl
sub
cmp
daa
loope
push
cltd
ret
loopne
push
cs
aas
cmp
add
pop
fwait
mov
shll
sub
push
xlat
iret
mov
adc
jno
lds
mov
mov
inc
scas
imul
and
cld
les
fnstenv
dec
mov
and
jge
jbe
xchg
repnz
cld
dec
and
push
fmull
xor
bound
hlt
aam
mov
mov
sub
pop
lret
xchg
or
aam
pop
nop
fwait
popa
add
dec
dec
sbb
bnd
loop
sub
push
push
shlb
decl
shrl
cmpsb
mov
sbb
jecxz
or
mov
push
pop
outsl
movsb
lret
sarb
jmp
pop
scas
cmp
jle
fimull
push
repnz
pop
add
icebp
cmpsl
sub
out
sub
mov
nop
mov
sub
fadd
stc
call
stos
add
and
ss
bt
nop
outsl
or
rcrb
pop
push
sbbl
outsb
sbb
imul
int3
scas
test
sub
movsb
push
stc
cmp
rol
incb
xchg
lods
push
jns
in
sbb
sbb
dec
js
lea
mov
arpl
and
sbb
shll
sbb
enter
iret
loopne
sbb
adc
jg
stc
mov
cmp
xchg
or
icebp
xchg
inc
cmp
scas
shl
pop
and
popf
or
call
mov
cmpl
fmuls
pop
push
sbb
int
outsl
sbb
cmovne
fsubrp
jp
cmp
fidivl
jge
or
popa
cld
fdivl
rolb
inc
xchg
dec
iret
repnz
sbb
adc
mov
out
ficompl
stos
mov
mov
push
adc
fs
repnz
sar
xor
outsl
pop
lcall
int
mov
inc
shr
shrb
adc
or
int
arpl
push
jo
stos
inc
rcrb
dec
adc
or
out
push
in
cmc
xlat
out
ret
mov
sahf
lods
mov
inc
or
push
pop
gs
jp
mov
movsb
rorl
sub
mov
xchg
jge
and
mov
dec
aaa
xchg
imul
sahf
jle
imul
aad
das
cmc
jmp
and
insb
jns
cmp
movsl
mov
push
mov
or
and
sbb
pop
xor
cmp
stc
mov
stos
js
lea
lods
ss
int
pop
mov
sub
nop
ret
cmp
pop
xchg
call
cmovnp
mov
mov
enter
leave
xchg
stos
sub
adc
lods
xchg
inc
loop
ljmp
rorl
sbb
in
rcrl
adc
xorl
sub
cmpsb
orl
mov
push
add
push
cmpsb
jmp
data16
add
jbe
loope
jns
mov
jmp
mov
xchg
mov
xlat
jb
mov
mov
add
je
lock
insb
sbb
aam
inc
out
aaa
push
popf
rcr
push
add
jno
inc
pop
push
push
enter
insb
adc
cwtl
imul
sbbl
pusha
add
push
pusha
ror
jnp
mov
std
mov
pop
pop
dec
sahf
lea
xor
aam
dec
pusha
mov
adc
stos
push
mov
jge
out
enter
dec
movl
ss
es
jns
sub
dec
mov
cmp
push
mov
fiadds
lock
adc
xchg
loope
lods
enter
test
mov
fstps
std
lahf
cmp
xchg
jne
or
xchg
stos
mov
mov
jecxz
shll
test
lret
lcall
sub
xchg
fnsave
push
pop
enter
test
add
mov
aas
mov
dec
daa
daa
and
push
sbb
movsb
fisttpl
pop
frstor
call
push
xchg
mov
add
or
leave
add
mov
xchg
mov
stos
cmc
iret
mulb
xor
or
lcall
push
xchg
mov
gs
fdivs
aad
mov
ficomps
pop
cmp
sub
lock
cli
das
jnp
jne
inc
mov
jp
cltd
fs
mov
andb
mov
mov
lahf
xchg
cmc
cwtl
lcall
push
sarb
mov
jecxz
icebp
or
dec
daa
add
test
mov
loopne
jno
sbb
mov
test
and
lods
out
mov
cwtl
jnp
cmp
aas
mov
inc
mov
xor
repz
movsl
xor
jb
inc
sbb
pop
inc
aad
lods
pop
ret
loop
and
push
sbb
add
lock
cs
inc
sub
jl
jnp
pop
cmp
push
sbb
mov
dec
sbb
inc
or
les
or
push
adc
fsubrs
daa
sub
dec
jno
push
mov
stc
inc
cmp
push
cmp
lock
xchg
jb
rcrb
jb
mov
nop
call
xor
mov
dec
test
xlat
and
outsb
or
rcl
pop
dec
fcomps
pusha
xchg
xor
or
mov
pop
jle
cld
mov
jne
outsl
repnz
iret
push
icebp
out
mov
mov
pop
sbb
ljmp
jno
test
scas
aad
mov
mov
std
xchg
hlt
insl
jb
scas
and
push
insl
outsb
inc
ljmp
out
cmp
cli
insb
jge
test
sbb
inc
inc
testl
outsb
cmpl
dec
rcr
data16
imul
popa
or
or
sbb
and
scas
dec
ret
pop
addr16
push
dec
test
cmp
lcall
out
cmpsl
int
cmp
adc
mov
flds
adc
inc
ret
xor
js
adc
sbb
sbb
and
repz
testl
notb
gs
cmpl
xor
in
lret
mov
xor
xchg
cli
push
jnp
xchg
loopne
mov
inc
jne
ja
mov
mov
mov
mov
push
cmp
arpl
test
or
add
cltd
out
aas
sub
gs
add
sbbw
mov
sbb
or
dec
lret
mov
sbb
cwtl
or
mov
add
xor
jecxz
sbb
cmp
mov
cmp
testb
pushf
dec
or
mov
sbb
sub
imul
cld
int
inc
pop
jecxz
xor
pushf
out
loope
push
xlat
cmp
jl
adc
or
fcompl
cmp
mull
push
inc
mov
and
sbb
mov
jecxz
mov
std
jmp
orb
data16
pop
or
fwait
outsl
jo
fstpt
lahf
sub
adc
clc
popf
mov
cltd
push
cmc
in
lock
xlat
and
mov
push
call
stos
mov
inc
inc
pushf
je
gs
in
mov
pop
popf
dec
or
adc
insb
fwait
xchg
jg
aas
xor
rolb
fstl
inc
aas
mov
into
mov
pop
gs
sub
adc
ss
insl
sub
inc
lods
mov
lahf
pop
push
out
adc
inc
gs
loop
mov
mov
cmp
cmp
out
add
xor
mov
pop
roll
nop
lods
jecxz
or
xchg
test
pop
call
jecxz
mov
ds
imul
and
insb
or
sbb
sti
pop
push
pop
aad
xchg
daa
cmp
das
adc
test
jb
inc
dec
cmp
stc
mov
int
lcall
insl
popf
dec
jp
les
imul
xor
ss
outsb
xor
leave
push
xchg
pop
inc
jbe
adc
mov
daa
cmp
aas
bound
inc
aad
js
sti
shll
cmpsl
cmp
push
push
sarb
and
sub
dec
push
popf
xor
rorb
and
xchg
rolb
jno
inc
or
pop
push
and
outsl
jmp
jnp
jo
inc
xchg
fcompl
lods
aas
lea
xor
repz
pop
aas
xchg
iret
xchg
sub
inc
or
sbb
je
shlb
xor
xor
nop
adc
scas
mov
push
ret
add
fcom
mov
mov
stos
sbb
cwtl
push
loop
mov
sub
pusha
mov
out
jne
push
inc
pop
mov
jl
cmpsb
adc
cli
jp
push
sbb
push
out
sub
dec
sbb
or
shrl
movsl
outsb
sbb
loope
mov
stos
sti
push
pop
popl
cltd
add
adc
in
jl
fsub
in
cmp
push
or
add
loope
push
push
pop
sbb
lcall
mov
push
sub
ret
sahf
xchg
int
jg
icebp
lock
fadds
out
jp
ret
test
mov
sub
or
mov
rcrb
ror
lods
fdivrs
in
mov
add
and
inc
and
ret
test
sti
push
test
test
hlt
addr16
sbb
mov
inc
sbb
pusha
stos
mov
lods
jo
repz
daa
or
and
or
push
gs
lahf
cltd
not
aaa
push
xchg
add
xchg
push
jbe
push
flds
cmp
add
fld
lock
rclb
sbb
fsubl
cltd
movl
shll
in
push
aas
push
sub
mov
pop
sub
sub
mov
dec
adc
iret
cmp
add
stos
mov
insl
pusha
and
lods
roll
and
es
push
push
cli
dec
les
leave
int
inc
movsl
icebp
sub
or
mov
push
xlat
in
jo
ret
enter
test
fldenv
dec
lock
cld
jnp
xor
btcl
mov
xchg
dec
sbb
test
dec
sti
int3
jg
lahf
and
test
mov
fs
out
imul
dec
mov
xlat
dec
lret
pop
dec
les
cltd
or
push
dec
fiadds
das
push
mov
scas
sbb
inc
jp
sahf
mov
scas
or
ret
jae
mov
nop
aas
bound
outsb
roll
xchg
xchg
inc
dec
sbbb
sbb
sahf
push
cltd
mov
jle
inc
ja
pop
sub
mov
pop
sub
adc
sub
add
xor
mov
adc
in
insl
lahf
dec
in
fxch
add
or
mov
jmp
push
sarb
adc
push
inc
negl
insl
aam
ficoms
mov
push
mov
and
scas
cli
movsl
dec
popf
push
mov
mov
test
push
imul
out
mov
in
jnp
imul
ds
push
xchg
stc
test
sbb
cmp
sti
sbb
xchg
inc
mov
jg
aas
xorb
repnz
cmp
mov
in
jns
mov
fnstcw
outsb
xor
jno
loopne
or
push
fwait
sbb
mov
adc
sub
ljmp
sub
mov
or
sub
out
jg
mov
add
ja
cld
cmp
sub
lahf
mov
inc
loop
leave
popf
std
xchg
cmp
push
lds
inc
lret
movsl
clc
es
loopne
inc
push
mov
xor
mov
std
fdivs
jle
fisubrl
and
das
mov
lds
add
xlat
aad
inc
jle
xor
sbbl
aam
aam
popf
push
inc
mov
jno
and
and
push
loope
cld
js
and
adc
cmp
rcrl
xchg
push
pusha
mov
cltd
adc
ss
sub
mov
jb
fdivs
filds
or
xchg
outsl
dec
xor
dec
sub
mov
aaa
sbb
adcb
adc
shlb
inc
stc
loopne
xlat
dec
inc
rcrb
pop
pusha
pop
mov
lret
adc
test
pushf
pop
sarb
enter
push
xchg
lret
dec
cwtl
mov
pop
scas
ret
sub
adc
adc
adc
popa
push
push
call
sub
andb
xor
nop
adc
sub
imulb
out
dec
idivb
es
insl
int
pop
test
mov
flds
pop
and
pop
addb
mov
jecxz
xchg
and
dec
aaa
lret
jnp
cmpsb
es
pop
dec
pusha
pop
aam
loop
cld
mov
imul
lock
int
gs
mov
lret
cmpsb
inc
fwait
gs
mull
enter
cmp
mov
lds
mov
imul
dec
add
arpl
xchg
push
lock
int3
xchg
bound
cmp
ja
and
xor
dec
dec
cwtl
mov
out
cmp
jmp
nop
sub
filds
and
sbb
cmc
mov
fistps
cld
mov
xchg
in
dec
sar
sbb
or
aas
scas
jno
hlt
int3
fs
bound
lret
test
mov
jne
cmpsb
das
adc
pop
mov
ds
call
inc
lahf
stc
push
popa
cltd
and
pop
mov
scas
stc
scas
outsl
sti
pop
xchg
xchg
fdivrl
pop
mov
cmp
inc
xor
jg
inc
scas
mov
cmp
ret
arpl
pusha
mov
psrld
inc
in
in
pop
xlat
adc
mull
dec
mov
mov
mov
jb
popf
lea
mov
mov
divl
int
push
push
pop
iret
or
dec
std
xor
imul
into
sarb
or
fisubl
sub
bound
pop
in
push
inc
gs
pop
sbb
sub
cmp
in
test
sub
je
adcl
ret
mov
inc
jo
add
jae
insb
push
pop
mov
aad
loopne
sbb
mov
sbb
dec
xchg
push
mov
test
lret
loope
pushf
xchg
clc
int3
adc
mov
repnz
pusha
into
mov
test
sahf
shrb
lds
fwait
adc
inc
ret
repz
dec
or
cmp
nop
mov
dec
lods
loop
insb
inc
pop
inc
jge
ja
sbbl
cmp
je
push
cmp
jo
out
dec
inc
push
jle
sub
pop
dec
lods
or
adc
sub
das
jge
cmp
xlat
fs
call
scas
cmpsb
push
adc
add
lock
lret
inc
cmc
jns
push
xchg
fstps
stc
les
pop
enter
push
mov
xchg
call
icebp
cmp
or
sti
clc
jmp
ds
sahf
daa
iret
dec
mov
add
stos
pop
adc
mov
sbb
stc
jecxz
dec
add
js
push
dec
xchg
jle
ljmp
cmp
adc
xor
dec
repz
outsb
xchg
cmp
pushf
aad
data16
repz
push
stos
jg
push
fdivs
push
adc
scas
jno
mov
and
or
mov
push
or
mov
icebp
lahf
cmp
aaa
mov
jne
push
dec
sub
in
jnp
aad
cs
push
mov
enter
call
cwtl
pushf
mov
addr16
jbe
and
es
out
mov
enter
dec
mov
jnp
jp
loop
cmp
in
pop
adc
in
jne
fcmovnu
mov
pop
jge
outsb
mov
ljmp
iret
sbb
dec
mov
cmp
add
pop
outsl
hlt
aad
stos
arpl
js
aaa
push
mov
stos
xor
adc
neg
xchg
inc
test
pusha
scas
or
aas
dec
std
cmc
sub
sub
mov
mov
data16
mov
adc
fldenv
pusha
cmp
aaa
fnsave
cmp
data16
sbb
jno
lret
pop
lret
sbb
cmpsl
jno
mov
fisttps
cmpb
push
daa
cld
mov
clc
mov
mov
imul
add
daa
jno
mov
int3
out
neg
add
adc
lods
and
js
or
lock
in
iret
sub
cmpsb
xchg
xchg
sbb
imul
adc
jno
push
test
mov
push
push
std
mov
xor
je
dec
insb
add
std
movl
jp
out
xor
fisubrl
ficoml
or
push
jp
mov
scas
cmpsl
pop
test
push
add
incb
jne
sub
loope
loope
dec
imul
jl
repnz
cld
adc
stos
rorl
lods
jnp
loopne
mov
mov
jl
pop
xor
push
jmp
fucomp
xchg
jno
mov
sub
inc
dec
add
pop
es
adc
xor
mov
fdivrs
sbb
sbb
fcoml
rclb
push
mov
xor
mov
das
sti
test
or
or
and
xor
fiaddl
jne
mov
clc
fwait
mov
cltd
mov
push
cs
or
xor
js
cmc
add
fldenv
cmc
fbld
cmp
adc
mov
setb
loope
mov
cmpl
cmpsb
out
mov
popa
repnz
out
inc
pop
push
daa
aas
fcompl
popf
cmpsb
inc
mov
mov
test
add
cmpsl
arpl
pop
cld
push
gs
clc
inc
jmp
inc
xchg
sti
aad
adcl
dec
jno
jle
das
push
je
imul
in
scas
adc
mov
dec
mov
dec
push
xor
add
jmp
push
in
hlt
loopne
ja
loop
sbb
fistl
mov
inc
mov
xchg
dec
mov
xchg
mov
inc
xchg
push
pushf
mov
cmp
push
mov
sbb
push
out
jb
nop
sub
call
and
test
or
inc
lods
rcr
or
mov
stc
cmp
cmp
mov
rcll
or
pop
loop
pop
hlt
and
pop
fwait
xor
das
mov
push
mov
push
pusha
jne
mov
daa
cmpsb
jecxz
xchg
push
pop
cmp
bound
mov
sub
push
sbb
mov
xor
out
shll
jg
popa
xchg
aad
les
out
xor
ss
jl
pop
fs
dec
cmc
add
addb
in
inc
and
out
sub
out
mov
out
mov
inc
clc
ljmp
dec
pop
xor
fcoms
addr16
lds
sti
sahf
test
les
popl
inc
pop
push
and
insl
mov
shlb
xor
xchg
sub
push
sub
loope
push
into
sub
jb
das
nop
iret
jg
and
add
mov
jmp
mov
into
xchg
pop
icebp
bound
out
sarl
test
outsl
mov
cmc
outsb
in
jns
jmp
pop
and
adc
pop
mov
xor
mov
sbb
fdivrs
sbb
xchg
xchg
pop
scas
sbbl
cmp
cmp
mov
jg
jo
fdivs
fdivr
dec
jge
outsl
xchg
push
sbb
gs
aaa
mov
sbb
add
pop
jl
les
jp
mov
jb
sbb
mov
mov
adc
dec
outsl
jnp
sbb
mov
dec
jb
test
cld
andl
mov
cltd
shlb
test
arpl
out
cltd
lock
in
xchg
outsb
test
xchg
push
sub
sbb
pop
icebp
or
mov
push
inc
mov
rcrb
sbb
inc
leave
nop
shr
mov
cmp
mov
popl
and
mov
lods
jne
sti
adc
ljmp
jg
mov
cmp
push
push
ret
sub
xchg
inc
jle
and
push
ss
popa
mov
adc
daa
insl
mov
jg
test
jge
xor
mov
pop
sti
pop
xor
test
in
inc
js
xchg
repz
nop
in
mov
fists
ret
sbb
sahf
mov
and
push
jp
jnp
sub
mov
inc
lods
fcoms
out
inc
std
push
and
adc
jno
movsb
sbb
pop
push
arpl
fidivs
in
push
addr16
fsubrl
pop
daa
fwait
dec
lods
neg
pop
jns
cmp
jmp
int
ret
movsl
icebp
pop
sub
out
and
cmp
mov
incb
mov
sub
mov
aas
and
xor
jge
and
test
pop
push
fldt
jae
lock
xchg
jne
add
add
push
subb
push
adc
test
and
mov
rorl
ja
fimull
jg
inc
jns
pusha
rcrb
dec
jge
add
mov
es
dec
adc
xchg
movl
iret
jae
push
sub
inc
in
stos
clc
dec
js
pop
fldl
stos
cmp
mov
in
and
adc
xor
popf
cmp
add
lods
mov
jl
daa
mov
pop
mov
loopne
int3
rorb
out
cld
jl
and
lcall
sbb
jmp
hlt
jnp
in
mov
dec
xchg
adcb
jno
cwtl
xchg
pop
xchg
pop
inc
shlb
scas
bound
rol
iret
mov
push
sahf
xchg
fcoms
loopne
ret
add
repz
punpcklbw
add
loope
test
gs
pop
dec
ja
or
and
and
mov
ss
fadds
pop
scas
daa
xchg
xor
sub
mov
ret
xchg
out
sti
pop
jl
cli
or
cmp
mov
mov
je
sahf
push
xor
cltd
inc
inc
iret
ror
xorl
xchg
adc
jp
aaa
cmp
sub
xor
xchg
lods
xchg
nop
clc
sub
xor
addl
faddl
iret
icebp
adcl
int3
mov
adc
xor
cld
xor
lods
fadds
mov
pop
dec
aad
push
lcall
lds
pushf
jb
pop
xor
mov
add
mov
jl
xchg
xor
aam
jmp
adc
fsubrs
mov
loop
sarl
fisttps
dec
jae
andl
mov
push
mov
cwtl
jle
in
push
xor
test
lds
jbe
data16
mov
sub
xchg
and
test
js
repnz
mov
jge
cmpsl
push
mov
leave
inc
xchg
std
sahf
lret
cmpsl
mov
out
dec
sbb
sbb
sbb
xchg
xlat
push
mov
cld
test
pop
pop
dec
sub
mov
push
xor
test
fists
icebp
loope
andb
cmp
push
stos
jne
pop
je
xchg
and
rorl
mov
mov
lds
je
sahf
push
fistps
jne
out
outsb
scas
out
movsb
pusha
mov
xchg
cmp
cmc
sarl
mov
sub
mov
sub
fcoml
push
xor
mov
mov
xchg
push
dec
cmc
inc
test
push
mov
js
inc
fldt
dec
repnz
out
mov
mov
dec
xor
xlat
or
dec
je
mov
subl
outsl
mov
pop
xor
add
ljmp
movsb
sarb
int
push
lods
mov
sub
repz
mov
repz
out
adcl
insb
ss
jns
hlt
mov
sarl
adc
daa
addr16
pop
out
inc
aaa
cmp
rcrb
pop
dec
add
jecxz
adc
arpl
mov
xchg
push
pop
pop
mov
and
fwait
add
fdivr
cmpl
sub
adc
inc
mov
ljmp
bound
mov
ret
sub
dec
das
pop
sub
imulb
or
inc
mov
fisubs
mov
es
aaa
cmp
jo
jnp
rol
les
dec
push
call
cmp
mov
pop
aaa
xor
sbb
das
mov
decb
mov
repnz
mov
push
cmp
fmuls
pushf
mov
std
or
icebp
adc
cwtl
push
mov
or
adc
lock
lock
sahf
in
jge
jg
call
mov
mov
loop
xor
pop
inc
push
fnstcw
icebp
mov
daa
pushf
pop
xor
jl
inc
xor
jnp
push
mov
jbe
pop
pop
xchg
jg
aaa
pop
int3
fsub
pop
dec
jno
ljmp
outsl
xor
mov
leave
xchg
jne
cs
mov
lahf
movsl
adcl
fs
and
cmc
xchg
movsb
aam
or
lret
subb
cmp
jo
outsb
mov
cwtl
pop
test
xor
cmp
imul
icebp
ss
pop
cmp
mov
aam
test
mov
mov
xchg
xor
test
inc
out
test
push
adc
xlat
cs
mov
ja
xchg
lods
call
jmp
js
mov
shll
fbld
xchg
add
sub
cli
and
aaa
adcb
rcrl
sub
pusha
pusha
stos
pop
xchg
leave
pop
cmp
or
test
mov
mov
pop
mov
jg
xchg
addr16
scas
mov
sysret
jae
push
push
int3
sub
and
pusha
adc
js
sub
cmp
ds
inc
por
dec
test
inc
add
je
xor
lcall
cmp
in
daa
mov
pusha
lods
jecxz
fstl
sub
mov
cmpsb
pop
push
mov
negl
sti
xchg
mov
stos
push
mov
mov
mov
pop
loope
ja
adc
repnz
pop
jp
or
lods
mov
loopne
fstpt
div
loope
cli
pop
xchg
shl
jmp
fcom
bound
mov
push
mov
or
xchg
outsl
add
repz
dec
inc
xor
std
daa
stc
jno
dec
in
push
scas
xor
jno
stc
jmp
inc
push
rcr
insl
data16
add
xor
pop
movsb
loopne
cmp
adc
or
adc
push
rclb
jns
dec
dec
ret
mov
in
inc
es
pop
jle
xor
cld
mov
and
mov
mov
cltd
sbb
dec
xor
jmp
xchg
dec
pop
ret
pop
mov
pop
addr16
mov
jnp
lods
sbb
push
scas
aad
xchg
mov
dec
ficompl
pop
jne
lods
jae
rolb
push
xor
test
outsl
ja
jg
fs
aad
lods
add
pop
and
push
adc
mov
lock
xor
pop
adc
mov
or
push
jp
mov
mov
incl
dec
loopne
adc
mov
data16
cmp
mov
bound
les
inc
xchg
and
push
dec
sbb
xchg
jg
mov
inc
movsb
or
mov
cmpsb
leave
cld
push
xchg
mov
and
in
mov
outsb
mov
or
shl
enter
mov
pop
jnp
inc
mov
add
lock
xor
dec
test
hlt
mov
scas
mov
sub
and
jne
cwtl
test
addr16
int
scas
pop
mov
jb
or
and
lahf
sub
mov
jbe
jp
push
jmp
addl
stos
sbb
fildll
pop
test
decb
jl
int
insb
add
mov
push
add
ds
pop
mov
js
aas
mov
and
jb
cwtl
shlb
and
test
ret
cmp
lods
popf
lea
mov
pushf
icebp
mov
inc
mov
ret
jns
push
loope
sub
sub
std
dec
popf
fisubrs
mov
push
sbb
xor
jg
mov
outsb
repz
imul
nopl
xchg
or
and
xchg
je
push
adc
xor
ret
mov
sbb
imul
pop
or
nop
shlb
push
push
mov
pushf
das
jns
int
pushf
xor
fimull
xor
das
roll
cmp
sub
jmp
push
xchg
push
cli
mov
sbb
sub
rorl
test
xorl
loope
sub
adc
mov
loop
xorb
xchg
scas
push
adcb
sti
sbb
out
mov
or
sub
scas
shll
addr16
dec
lret
stc
jmp
jp
xchg
cmpsb
test
mov
jecxz
push
aam
es
enter
dec
je
stc
mov
add
insb
cs
xchg
pop
std
cmp
negb
xorl
or
test
out
jp
xchg
int
shlb
insb
negl
add
pop
dec
addr16
test
jge
lret
xor
movsl
inc
inc
mov
dec
in
ss
popf
fsubl
and
cmpsb
xchg
or
mov
scas
stos
add
jl
adc
nop
push
out
loop
mov
inc
leave
xor
repz
mov
into
push
scas
and
xchg
lods
outsl
adc
mov
shrl
outsb
and
scas
cld
cwtl
push
fwait
sahf
in
adc
jecxz
fs
insb
fldl
mov
movsb
dec
cmp
or
aaa
pop
mov
adc
popa
test
xchg
push
mov
repnz
inc
sarl
divl
xor
xor
sti
xor
and
push
jns
push
insb
cmp
fwait
jmp
mov
sub
xor
or
frstor
mov
iret
rcr
pusha
je
jge
das
ffreep
push
pop
mov
lds
cmpsl
movsl
jo
or
pop
std
and
int3
or
lahf
idiv
call
xchg
xor
push
add
insl
mov
mov
xlat
dec
jae
andl
repz
and
dec
fisubrl
xchg
mov
orl
rcrb
incl
jg
adc
mov
inc
mov
ret
mov
sti
inc
xor
lods
pop
mov
sbb
push
add
mov
adc
jmpw
addr16
dec
sub
mov
push
mov
mov
and
mov
gs
and
mov
aas
incl
push
xor
in
jmp
adc
inc
in
lds
lods
jae
aaa
push
out
xor
xchg
push
xchg
pop
cld
scas
outsl
fsubrp
and
xchg
sbb
or
and
cs
shll
jb
adcl
xor
test
cmp
rol
into
testb
jecxz
stc
and
pushf
mov
jb
in
sub
lds
pop
les
lock
or
fxch
notb
xchg
imul
aam
mov
mov
pop
call
jae
pop
fisubrs
mov
enter
dec
mov
icebp
add
sbb
in
adc
imul
lret
or
lcall
fs
pop
add
vpavgb
lcall
sub
divb
or
call
mov
fimull
push
adc
sbb
mov
mulb
cmc
fsubrl
andl
es
roll
or
push
inc
das
gs
rcl
xchg
mov
sti
jne
cmp
sbb
incb
adc
mov
aas
dec
xchg
outsb
sbb
loop
enter
push
mov
xchg
fxch
push
sub
sti
adc
or
scas
mov
push
aas
mov
mov
testl
int
data16
jno
fs
std
push
jno
push
xchg
jle
jecxz
sbb
add
out
aaa
mov
scas
and
pop
fwait
xor
dec
nop
fdivl
jbe
sub
jecxz
pcmpeqb
sarb
cmp
aaa
sub
push
ss
mov
xor
and
adc
aam
jns
adc
dec
dec
push
pop
mov
mov
std
das
add
or
stos
and
pop
scas
push
mov
inc
push
jno
push
jl
repz
mov
sub
pop
test
in
fisttpl
aam
scas
cmp
or
in
loope
and
dec
cs
out
fs
stos
in
shrb
rolb
test
and
in
mov
ja
mov
mov
adc
push
mov
xchg
cmp
and
rorl
mov
dec
aad
xchg
push
lea
mov
fldl
in
sahf
inc
fs
cmp
test
fcomp
sub
adc
pop
adc
jg
and
ror
push
dec
test
mov
fwait
and
fs
shrl
fbld
in
mov
call
fidivrl
test
sub
outsl
pop
hlt
push
sbb
push
inc
push
lahf
popa
pop
jae
scas
and
xchg
ljmp
pop
leave
adc
outsl
add
in
out
ret
popa
push
fcomps
ljmp
test
icebp
push
in
cs
cmpl
mov
cmpsb
arpl
xchg
popa
sarl
lds
mov
mov
mov
test
inc
adc
loope
adc
mov
and
ljmp
cmp
stc
mov
cmp
subl
mov
sbb
adc
out
lcall
fwait
inc
aas
mov
loop
mov
cmp
and
in
adc
adc
xor
into
fs
mov
sbb
and
or
push
xor
sbb
jno
rclb
xchg
jecxz
insb
aaa
arpl
add
push
popa
inc
and
hlt
xchg
mov
dec
into
adc
jg
jp
repnz
and
xor
sub
dec
or
divb
out
in
cmp
out
push
inc
outsb
cmp
dec
fstpl
mov
out
cld
mov
sbb
cmc
dec
imul
popa
int3
adc
pop
mov
sbb
aas
leave
mov
ss
xchg
lea
movsb
xor
inc
lds
pop
cmp
xor
mov
es
push
rolb
inc
dec
aam
jnp
aaa
or
xor
jo
jmp
mov
int
mov
push
xchg
adc
jno
loopne
pop
or
xchg
hlt
mov
repnz
xchg
data16
adc
movsb
or
vmovhps
sub
pop
sahf
inc
sbb
add
mov
std
repnz
sub
mov
xchg
xchg
loop
sbb
fdivrl
pop
out
loopne
or
or
sbb
or
loop
daa
adc
and
les
inc
arpl
les
push
sbb
mov
cmpsb
pop
into
shll
push
pop
popa
stos
enter
addr16
mov
shll
mov
adc
les
sub
test
ja
pop
mov
or
inc
stos
lea
or
int3
cmp
adc
jecxz
jg
arpl
jo
mov
add
xchg
pusha
lods
jp
xor
xchg
in
cmp
insl
inc
cli
xor
xor
aas
push
popa
jg
outsl
dec
jmp
outsb
bound
mov
scas
lcall
mov
jns
adc
lahf
adc
cltd
movsb
scas
pop
jo
mov
adc
and
dec
mov
cmp
sti
cwtl
xchg
xor
loop
call
xchg
dec
jbe
jno
xchg
push
jecxz,pn
out
pop
push
mov
cmpsb
xor
and
add
fnstsw
push
cmc
imul
cmpsl
mov
int
xchg
pop
cltd
sbb
mov
mov
stc
in
cld
xchg
out
nop
out
cmp
jp
aaa
imul
in
push
pop
sub
ror
mov
repnz
cli
jge
pop
faddp
sub
push
xor
arpl
addr16
xchg
inc
xor
sahf
scas
adc
test
ss
jp
jge
loopne
movsl
mov
aad
or
les
xchg
sbbb
xor
xchg
pop
sbb
out
mov
mov
les
cmpb
clc
stos
dec
insl
push
dec
lcall
cmc
jl
cmp
mov
sub
mov
faddl
bound
mov
repnz
or
push
sub
ljmp
lods
sbb
or
dec
lods
mov
adc
xor
imul
adc
cmp
repnz
test
mov
pop
and
mov
add
aaa
lahf
dec
mov
mov
lret
ja
sbb
or
test
xor
or
out
mov
fldenv
or
imul
dec
cltd
bound
jl
rclb
lods
or
add
out
sbb
mov
shl
add
pop
into
add
fistpll
pop
dec
and
int
adc
push
cltd
leave
jg
jg
ljmp
addr16
cli
inc
fwait
lock
outsl
lock
outsl
jnp
push
andb
push
sub
fiadds
nop
popa
xor
mov
sub
sub
jle
sti
push
pop
loop
stos
shrb
je
pop
mov
adc
lods
push
cltd
cmp
dec
adc
inc
repz
or
dec
rol
lret
push
es
pop
xor
sub
mov
mov
and
or
imul
stos
addr16
dec
pop
lds
mov
clc
movsb
add
add
adc
sub
add
shrb
iret
jge
pop
jb
ret
icebp
ret
lock
sbbb
sub
mov
and
out
sub
add
adc
rcrl
push
rcrl
andl
jae
cmp
inc
or
mov
mov
stos
push
into
jle
or
jne
in
cmp
pop
pushf
xor
inc
mov
adc
shl
pop
push
push
sub
push
fwait
ret
sub
mov
push
pop
pop
fs
ss
loop
jmp
dec
mov
add
jne
add
nop
out
lock
out
pushf
mov
jbe
xchg
xor
sbb
mov
pop
fnstcw
mov
lahf
movnti
aad
out
sub
call
pop
pop
inc
lea
mov
fists
jg
testb
and
pop
adc
adcl
sub
mov
add
fldl
sahf
insl
push
iret
call
cmp
dec
adc
lea
mov
fcmove
test
loope
pushf
pop
sbb
ja
loopne
mov
cltd
dec
out
mov
fwait
mov
xor
out
dec
int3
ds
cmp
or
xor
and
testl
jne
or
stc
std
jb
push
mov
ja
fsubrs
cs
mov
sbb
iret
add
rolb
divb
mov
mov
iret
mull
mov
push
dec
adcb
jns
movsb
lods
xor
cli
int
insl
jnp
xor
add
in
aas
jmp
test
pop
and
ret
jno
addl
sub
ret
fs
mov
mov
lock
outsw
pop
orb
push
pop
mov
fmull
push
and
arpl
lods
cwtl
lret
je
shll
jne
aam
sti
nop
cmp
ret
jno
add
enter
and
popa
mov
enter
and
add
push
sbb
push
cmpsb
ja
orl
out
test
jle
aas
fucomp
rolb
push
xchg
out
negl
movl
insl
mov
arpl
movsl
int
popf
mov
cmpb
jbe,pt
pop
imul
fistl
or
or
add
push
addr16
rol
fcoms
mov
jns
mov
inc
jbe
int
mov
mov
push
stos
or
movsl
pop
sub
push
ret
mov
fsts
xchg
mov
lock
cli
fmul
nop
pop
xchg
jecxz
pop
jo
adc
out
dec
cmp
jae
push
fildll
sub
in
or
dec
test
sbb
loop
pusha
xchg
mov
cmpsl
cs
cli
imul
sbb
or
outsb
jle
sub
mov
mov
pop
pop
sbb
pushf
pop
icebp
jb
jecxz
mov
dec
dec
inc
test
and
clc
dec
add
in
pusha
lds
add
sbb
push
pop
inc
out
xor
je
and
call
int
mov
xor
sub
mov
push
movsl
pop
popf
cmpsl
mov
jl
cmp
xor
into
shll
mov
test
push
and
pushf
cld
adc
fldl
push
in
iret
xlat
and
mov
mov
jl
mov
daa
dec
andb
adc
lret
call
cmp
bound
in
adc
int3
add
adc
pop
push
sbb
jge
lahf
mov
out
scas
insb
sub
nop
cmp
nop
sbb
mov
out
movsb
mov
lds
cltd
cmp
pop
setle
jo
jp
pop
or
jmp
arpl
add
fwait
adc
sahf
add
mov
dec
fldcw
aad
cmp
in
push
cmp
lcall
sub
push
rcll
cli
sbb
out
xchg
in
mov
daa
xchg
xor
fisttpl
lock
cmpsl
cmp
xchg
pop
pop
test
imul
fisubrs
mov
add
mov
add
sahf
and
xor
push
sti
or
loop
gs
ljmp
xchg
pop
and
dec
mov
jb
mov
lahf
cmc
adcl
movsb
push
xchg
dec
and
sub
out
xor
lock
ds
ljmp
cli
cmp
sub
and
in
push
fiaddl
pop
sbb
call
test
dec
pop
leave
lods
cmp
push
cltd
test
mov
in
xchg
fisttpl
enter
add
fldenv
xchg
sahf
call
popf
push
rolb
and
cmp
jnp
push
and
and
stos
fmull
jb,pn
mov
stc
dec
dec
outsl
rorl
mov
aam
ret
js
jle
sbb
orl
aaa
dec
gs
pop
loope
rcrb
pop
es
push
push
enter
mov
mov
inc
popa
and
mov
pop
es
jp
xor
stc
and
mov
mov
adc
or
rolb
fmull
xor
popf
adc
mov
xor
mov
cmc
fisttpll
sbb
cs
stos
push
jl
adc
fwait
loope
push
lock
mov
insl
das
add
xor
and
xchg
lea
repnz
daa
clc
rcrl
sub
mov
jnp
cli
scas
ds
loop
jecxz
mov
fs
movsl
mov
jno
pop
jb
or
inc
insb
adc
or
hlt
xor
cmp
add
lret
mov
push
mov
sub
push
popa
mov
aas
inc
in
fstpl
xchg
popf
mov
cmp
nop
sbb
fadds
and
jno
push
fs
imul
out
sbb
cmpsl
leave
hlt
icebp
push
lods
into
jb
pop
adc
pop
add
push
inc
cmpsb
xchg
add
mov
adc
sbb
stc
mov
out
jae
xchg
adc
arpl
pop
pop
subl
mov
push
rcrb
les
cmpsl
jmp
mov
test
adc
pop
movsl
mov
popf
jecxz
testl
sub
cmpl
stos
lea
rolb
movl
pop
dec
lds
aad
adc
or
sbb
insl
sarl
imul
ljmp
ret
mov
cmp
fimuls
test
int
into
arpl
dec
add
lahf
insl
pop
cmp
loope
std
xor
push
test
mov
call
shr
dec
push
xchg
repz
ds
int3
std
pop
dec
inc
and
adc
fistpl
iret
add
mov
xor
cltd
adc
int
lods
jg
fdivrl
adc
fadd
dec
cmp
push
mov
stc
push
pop
push
sub
jecxz
cli
lods
mov
add
xchg
cmp
adc
dec
nop
imul
lcall
sahf
scas
lock
mov
in
dec
xchg
js
pop
push
cs
and
hlt
loope
pop
mov
jg
insb
xchg
and
and
xchg
xchg
add
dec
cmpsb
movsl
pop
clc
nop
mov
xchg
dec
stc
xor
in
ror
aas
lock
mov
imul
mov
nop
leave
leave
jge
mov
daa
or
push
add
ja
pop
adc
add
xor
in
inc
xlat
out
push
lcall
test
fcmovb
iret
leave
fs
nop
mov
stc
pushl
jo
daa
pop
xor
add
lods
pop
mov
cmp
cmp
xchg
xor
sub
mov
pushf
mov
cmpsb
nop
sbb
or
sub
pop
in
xlat
cli
mov
je
mov
mov
cmpsb
scas
shll
mov
dec
imul
js
sti
mov
push
mov
push
add
xor
mov
cmp
daa
es
sub
dec
loope
sub
jbe
dec
cltd
sub
xchg
lods
lea
or
sub
add
sub
pop
mov
repz
in
aaa
push
push
jns
dec
rol
jae
add
dec
in
lret
call
movsb
shll
or
adc
aas
add
push
jg
jg
fs
adc
push
fwait
pop
jnp
addr16
shlb
mov
sub
add
sub
fisttpll
and
pop
sub
fbstp
popf
sbb
jb
pop
div
mov
into
outsb
sbbl
daa
stc
fisttpll
cmp
aam
stc
in
test
cmp
push
sarl
loopne
jbe
std
xchg
push
jae
inc
pop
jp
mov
sbb
jl
pop
out
arpl
adc
ds
or
cltd
jo
cs
addr16
mov
int
stc
push
rol
jecxz
jle
pop
inc
jne
lret
inc
sbb
fdivp
in
out
cwtl
cs
or
inc
adc
lret
or
mov
out
or
in
pushf
xchg
sub
xchg
int3
clc
je
dec
or
outsb
fwait
call
insb
xchg
es
fistpl
movsb
fdivs
pop
add
inc
loop
pop
pop
scas
or
fs
mov
lods
push
fwait
repz
sub
jg
jle
dec
push
icebp
mov
ficomps
iret
pop
fisubrl
mov
mov
out
daa
mov
dec
or
jns
fidivl
movsb
pop
in
push
cmp
sub
dec
push
call
es
cmpsl
daa
pop
dec
mov
jne
push
jnp
rorl
rcrl
insb
push
mov
mov
in
inc
aad
xchg
add
loop
dec
cwtl
mov
cmpsb
pop
mov
inc
dec
orl
pop
sti
add
bound
xchg
mov
cli
cwtl
dec
or
ret
gs
mov
or
pop
push
gs
mov
push
dec
cltd
mov
jmp
out
mov
mov
add
pop
inc
inc
sbb
add
mov
lea
lcall
cmp
push
xor
in
jns
in
and
cmp
test
dec
cli
in
mov
loope
lret
jge
ss
rcrl
pop
jno
jns
sbb
xor
daa
push
xor
outsb
jmp
pop
jp
inc
cwtl
and
rcrb
lcall
jle
pop
cs
push
push
or
imul
lock
std
mov
jno
push
xchg
js
xchg
ljmp
xor
lds
jb
xor
movsl
call
and
cmp
sbb
add
mov
cmpsl
jnp
mov
mov
rcr
sub
cmp
push
pop
inc
sbb
fidivrl
dec
lret
xor
jns
push
cmc
push
mov
addr16
aaa
mov
not
ror
inc
add
scas
lahf
add
sbb
add
stos
jle
push
in
xor
in
push
xchg
in
pop
push
pop
xor
arpl
or
mov
adc
cwtl
sub
or
imul
aas
mov
aaa
stc
repnz
sub
lret
pop
daa
dec
scas
cli
aas
loope
jmp
ffreep
adc
add
or
sub
lcall
add
sbb
fstl
out
pop
add
pop
or
dec
aaa
or
ja
orl
jle
jl
mov
in
and
mov
imul
fildl
icebp
mov
loop
mov
jl
imul
add
leave
inc
std
cli
out
mov
cmpl
sarb
or
cli
std
push
sarl
ljmp
jl
xchg
push
dec
ja
or
mov
mov
shrb
mov
stos
icebp
lahf
sbb
xor
cwtl
mov
sbb
iret
push
dec
andl
ss
sbb
push
pop
jae
xor
adc
cmc
pop
sbb
bnd
imul
lods
add
stc
test
jg
ret
dec
inc
cmc
fs
dec
push
dec
cmpsl
les
sahf
and
in
add
jmp
aad
mov
fimuls
movsl
pop
sbb
or
lret
inc
add
and
lods
cmp
cwtl
mov
mov
push
ficompl
loope
mov
or
mov
stos
mov
mov
or
pop
arpl
sahf
int
or
sbb
shl
pop
lods
scas
lret
fnstsw
repnz
xor
cltd
and
or
repnz
push
fisttpll
clc
cmp
xor
pushf
insb
fists
loop
mov
in
sub
in
jo
testl
jmp
pop
and
stc
sahf
ret
push
sub
push
adc
clc
sub
or
jae
jecxz
xor
lea
push
fwait
stc
and
add
xor
aas
sbb
mov
movsl
data16
inc
or
imul
cmc
jmp
aad
and
data16
xor
fwait
cmc
jge
adc
or
adc
jmp
pop
add
movl
push
dec
decl
stc
addr16
insb
push
in
lahf
sub
inc
jmp
push
fisttpl
fwait
or
pop
xor
cmp
inc
mov
push
mov
mov
add
push
cld
fcomps
and
aaa
arpl
dec
cmp
dec
push
or
lock
adc
inc
pusha
addr16
sbb
pop
dec
jbe
xchg
pushl
jno
dec
shll
aaa
mov
xchg
clc
lcall
scas
bound
les
cmp
aas
or
mov
xchg
sbb
or
mov
jmp
std
cwtl
lods
lcall
or
add
ud0
fwait
js
aas
add
push
mov
and
pop
fisubrs
in
repz
arpl
js
sub
popaw
cmp
int3
notb
push
dec
mov
sub
lea
mov
and
adc
lahf
jnp
bound
idivb
push
jo
fwait
jg
xor
add
sub
jle
mov
add
incb
mov
adcl
push
aad
mov
mov
adc
dec
pop
xchg
cli
scas
cmp
lsl
or
test
mov
pop
rolb
shlb
pop
or
negl
jle
imul
cmp
mov
ljmp
lock
xor
add
adc
ljmp
adc
adc
xchg
or
push
and
outsb
sarb
pop
sahf
jae
xchg
dec
insl
aaa
arpl
pop
pop
into
jno
xchg
mov
inc
sbb
je
inc
xchg
cli
std
into
add
xor
xchg
ja
cwtl
fcoms
jno
add
sbb
pop
js
mov
loopne
pusha
rol
cmpl
cmp
or
mov
adc
sbb
mov
lcall
jecxz
cmp
in
stos
jp
inc
test
mov
inc
gs
das
sarb
sub
call
inc
xchg
jb
addr16
push
mov
ss
add
imul
jg
mov
cmpsb
in
sahf
push
mov
jns
out
mov
aas
jns
insb
sub
adc
std
push
push
and
int
or
sahf
ljmp
mov
and
jg
jle
xor
cwtl
cmp
in
movsb
cmp
jecxz
shrb
mov
in
cmp
xor
int3
push
push
clc
ljmp
hlt
cmp
in
adc
jl
pop
jbe
jecxz
push
shlb
out
scas
jne
insb
or
fidivrs
add
ds
mov
and
shr
adc
movsb
fildll
cmpsb
adc
in
inc
std
ljmp
mov
jb
fstps
shl
push
mov
das
lret
jo
jb
and
lods
cmp
sahf
popl
xchg
imul
and
in
icebp
sti
fdivrp
and
inc
lea
hlt
addr16
pop
imul
scas
fisttpll
jp
out
icebp
jmp
pop
lcall
cmpsl
aaa
and
inc
out
add
lock
push
inc
dec
stc
inc
enter
jmp
test
repnz
sub
addl
mov
jge
pop
loope
mov
popl
mov
shrl
fxch
cmp
or
clc
mov
mov
imul
inc
enter
lods
lret
cld
xor
sti
dec
pop
xor
cmp
fsubl
loop
jmp
xor
addr16
addr16
lds
movsl
test
clc
push
stos
roll
ja
jecxz
push
clc
sti
jp
out
dec
sub
mov
mov
fidivrl
cmp
nop
sub
jnp
mov
inc
jns
push
mov
lret
jno
cmp
cmp
aas
inc
dec
push
xlat
add
jb
and
fisttpl
stc
add
pop
dec
inc
sub
adc
notl
jecxz
add
sti
mov
xor
mov
into
xor
mov
pop
lea
xor
out
dec
sbb
add
add
repz
into
jp
sbb
dec
aad
inc
dec
outsl
mov
jns
sub
stos
and
repnz
out
out
icebp
xchg
aaa
and
xlat
mov
pop
jp
cmp
fwait
push
and
xchg
shll
movsl
cmp
in
call
or
mov
pop
cli
movb
jnp
test
pop
mov
xor
or
outsl
push
repnz
sahf
mov
psrlw
xor
jge
mov
mov
cmpsb
mov
xor
lret
js
sahf
cli
clc
ja
pop
fsubl
jecxz
repz
jno
jp
aad
mov
sub
mov
leave
xchg
mov
in
outsl
fimull
aaa
add
push
test
mov
pushf
dec
xor
dec
sbb
sbb
lret
leave
stos
cmc
mov
stc
enter
js
orl
enter
cmp
mov
ret
aam
cmp
mov
jp
movsl
addb
fildll
xor
es
mov
mov
push
adc
push
icebp
fidivrs
sarb
mov
push
dec
fbld
sarl
lods
adc
test
cmp
je
lods
inc
fld
mov
inc
pop
stos
and
add
adc
stos
rcr
int3
dec
mov
dec
push
out
lds
shl
cmpl
fcompl
roll
outsl
addl
loope
push
fldcw
sbb
enter
add
push
notb
fwait
test
jmp
fwait
jmp
pop
dec
inc
scas
add
pushl
lahf
imul
aaa
push
loop
jecxz
adc
lock
mov
fisttpll
into
loopne
push
jae
cmp
std
insb
ss
iret
adc
fistps
mov
xor
pop
jb
imull
loopne
shlb
sbb
dec
sbb
mov
repz
test
pop
mov
jno
mov
jnp
dec
popa
sbb
out
mov
fistl
out
sahf
xchg
fs
fdivr
push
xor
dec
pop
ficoml
push
pusha
fcompl
ss
mov
mov
sbb
sub
cmp
add
aas
cmp
and
inc
les
jle
or
adc
outsl
and
repnz
mov
mov
and
aad
movsb
push
adc
test
jge,pn
dec
push
int
fadds
push
mov
or
in
pop
inc
add
test
scas
mov
orl
fistl
push
int
jae
inc
subps
add
insl
iret
int
std
xchg
add
mov
icebp
or
mov
inc
aam
loope
xchg
pop
xlat
lret
out
in
fcom
int
xchg
rol
ret
fiaddl
std
xor
scas
xor
sbb
cld
adc
lock
dec
imull
addr16
aas
pop
int
aas
in
in
insl
sub
shlb
pop
pushf
scas
sbb
adc
pop
cmc
mov
mov
mov
cmpxchg8b
fldenv
stos
lcall
jl
push
ret
stos
xor
icebp
in
lret
rcrb
lahf
movb
nop
rol
mov
sub
push
rcll
aaa
xchg
test
sahf
jp
nop
data16
pushf
push
or
lahf
push
jae
jo
mov
add
mov
std
lds
pushf
int3
mov
inc
andb
push
adc
orb
push
lcall
pop
insl
mov
cmp
rolb
cwtl
cld
repnz
lods
ret
xchg
cbtw
test
mov
add
in
int
fisubrs
jmp
scas
int
aaa
add
enter
or
fisubrs
sbb
xchg
cmpsl
dec
pop
fisttps
and
mov
movsb
or
test
or
lret
fcompl
mov
jge
repnz
push
cli
lea
xchg
in
sub
add
push
cwtl
inc
dec
jno
in
sti
sbb
int3
lods
jp
aad
outsl
add
pop
sub
rcl
dec
sbb
xchg
shr
add
mov
adc
push
aas
inc
mov
arpl
insl
lods
inc
aam
inc
xchg
sub
push
xlat
out
rcll
inc
xlat
sbbl
pop
je
in
repz
xchg
test
rclb
iret
sbb
mov
test
data16
xor
ljmp
lahf
rcrl
xor
and
pop
cmc
lods
inc
daa
and
or
je
rorl
call
push
jo
lahf
lods
xlat
and
fwait
push
inc
shlb
jp
inc
insb
push
jl
dec
lock
mov
shrl
loopne
enter
scas
nop
dec
cmpsb
cmp
jg
int3
xchg
imul
insb
pop
rol
jge
push
xlat
sti
orps
and
pop
jno
aam
lcall
or
pushf
jp
mov
jl
cmp
pop
fildl
jmp
dec
pop
shll
es
pop
sub
jmp
sti
fucomip
ss
pop
gs
add
js
decb
xor
outsl
or
pop
mov
imul
pop
lock
xchg
lods
ja
es
fidivl
repz
push
scas
sbb
or
fwait
mov
mov
iret
push
clc
jle
dec
push
iret
frstor
or
scas
mov
adc
inc
mov
and
addb
mov
pop
lahf
mov
mov
fcmove
xchg
in
incl
and
out
insl
fmuls
or
push
jp
mov
shll
outsl
cmpsb
ficomps
lret
inc
inc
sub
les
nop
std
dec
sub
inc
arpl
lods
stos
inc
sbb
and
inc
pop
adc
and
pop
push
jne
jge
add
inc
pop
sti
lock
sub
add
enter
and
cmc
outsb
mul
insl
add
lods
jno
out
int
sbb
dec
mov
mov
jle
adc
bsr
ret
ljmp
add
xlat
call
pop
and
lret
pop
mov
jne
out
sets
cmp
mov
dec
cmp
push
push
shll
pop
mov
push
mov
insb
xchg
loopne
test
dec
push
vmwrite
mov
dec
sub
pop
flds
adc
scas
je
or
push
sbb
fwait
xchg
scas
inc
adcl
and
cli
sub
and
gs
std
ds
bound
cmp
rcr
cmp
dec
das
nop
add
mov
jg
pop
and
lret
dec
icebp
int
popa
icebp
sbb
popa
and
mov
loope
mov
xchg
das
repnz
aad
push
outsb
fiaddl
cmpl
xchg
dec
fldcw
jo
jp
jno
xchg
test
stos
sbb
mov
stos
pushw
dec
rcrl
xchg
in
sub
mov
sbb
mov
aad
add
scas
pop
mov
addr16
popf
push
push
pop
cli
pop
arpl
shrb
jo
push
xchg
jp
aad
in
lret
lcall
cmp
leave
rcrb
ds
pop
mov
and
cltd
fnstcw
jne
jecxz
test
jns
cli
push
mov
add
cmp
aas
xor
aas
movsl
std
lret
inc
std
out
ds
das
sub
in
enter
frstor
sub
jmp
jg
push
pusha
dec
loopne
das
sub
dec
mov
out
mov
sbb
add
push
cmp
push
or
push
jns
xchg
xchg
lcall
sub
cmpsl
mov
adc
jbe
mov
inc
loope
sbb
pop
jnp
jae
mov
pushf
inc
not
fs
mov
inc
je
sub
out
sub
les
sub
inc
je
arpl
imul
clc
andl
dec
cmp
nop
sub
inc
sub
jns
movsl
popl
pop
jne
cmp
jl
xchg
cmp
mov
shlb
jne
insb
mov
mov
sub
push
lahf
push
insl
test
lcall
pop
in
and
adc
pop
outsb
clc
scas
dec
insb
aam
pop
stos
negb
rclb
mov
test
xlat
out
std
inc
push
adc
in
push
sbb
loopne
jmp
mov
sti
mov
or
adc
add
sub
jnp
push
les
out
push
inc
xchg
xchg
popa
sbb
ds
jae
inc
sub
cmp
push
adc
inc
lcall
mov
int
adc
out
loope
aas
pop
sbb
jb
adc
adc
adc
test
mov
xchg
imul
pusha
lea
decb
out
cwtl
inc
movsb
pop
lahf
in
cmpsb
push
inc
cmpsb
repnz
add
mov
and
es
insb
push
into
das
call
sbb
dec
cmc
and
cld
and
dec
lcall
mov
pushf
stc
fstpt
js
push
dec
clc
lcall
bound
jno
mov
hlt
dec
aas
inc
pop
xor
push
rcrb
aad
cmpsl
pop
sbb
sti
mov
xchg
andb
push
fidivrl
adc
add
lcall
push
push
pop
lcall
adc
test
outsb
dec
das
cmpsl
out
std
adcb
adc
jno
stos
in
fadds
mov
adc
filds
jmp
xchg
mov
xchg
mov
push
icebp
mov
jne
mov
scas
and
jae
pushf
push
cmp
inc
rcrl
into
xchg
decb
mov
mov
pushl
jp
pop
push
lock
in
mov
lea
daa
test
mov
jne
nop
pop
cmp
mov
dec
pushf
add
and
gs
add
jo
lock
dec
aaa
cmpsl
cmp
mov
int
add
pop
rcll
jbe
addr16
xor
lods
pop
stos
loope
xchg
rcr
pop
cld
pop
into
cmp
imulb
fisttpl
push
xchg
cmpsb
xchg
and
insl
cs
adcb
lods
pop
sarl
dec
jne
nop
xchg
inc
fadds
sbb
pop
in
jg
sbbl
jp
and
inc
mov
or
xor
mov
iret
call
bound
repnz
shrl
fmuls
filds
xchg
mov
push
adc
stc
mov
inc
js
push
dec
nop
clc
push
sbb
and
shll
mov
stc
popf
push
test
inc
cld
imul
daa
sbb
xor
je
push
sti
loopne
inc
jnp
mov
inc
mov
stos
or
adc
or
adc
sbbl
mov
cmp
cmp
adc
pop
mov
sbb
pop
pop
cmpsl
pop
cmc
cmpsl
imul
ret
xor
inc
data16
push
cwtl
push
inc
add
aam
std
mov
sbb
pop
sbb
pushf
lea
dec
push
dec
jg
xchg
pop
or
fs
xor
pop
inc
sbb
jmp
aad
sbb
pusha
xor
test
loopne
mov
sbbl
or
andl
jae
fcomps
sarb
or
mov
loop
pushf
jge
xchg
cs
and
xor
dec
xchg
inc
adc
sti
or
inc
or
shll
sbb
es
es
mov
fdivr
xchg
clc
lods
aam
adc
sub
add
out
movsb
les
xchg
mov
mov
pop
mov
in
and
cmp
mov
insl
repz
outsl
into
pop
pop
mov
ds
jbe
repz
mov
cmp
inc
xchg
mov
std
dec
jp
lea
js
adc
mov
loope
negb
outsb
fmuls
xor
data16
repnz
outsb
bound
add
fstps
or
lods
push
or
fsub
clc
mov
dec
pop
std
add
or
sub
fdecstp
push
xchg
push
xchg
adc
add
rcrb
in
pop
les
imul
xor
sahf
dec
cmp
jecxz
cmpsl
popf
iret
insl
es
mov
repnz
mov
push
sbb
adc
lret
arpl
pop
cmp
mov
lea
inc
xchg
push
mov
cmp
jp
test
in
daa
sarl
into
push
dec
outsb
jne
mov
xchg
aad
sbb
xor
xlat
loopne
pop
and
fidivrl
inc
mov
das
add
xchg
xchg
repz
xchg
loopne
jg
add
enter
add
mov
test
stos
in
jnp
out
mov
and
in
jp
pop
popf
in
jne
sbb
cmp
cld
mov
xchg
and
lock
lea
ss
pop
xor
push
jno
inc
push
outsl
cmc
push
out
hlt
lds
adc
mov
mov
inc
add
and
scas
loop
aas
sarl
push
pop
out
mov
xchg
lds
push
loopne
and
pop
pop
int
mov
out
xlat
faddl
popa
adc
aam
or
inc
and
ljmp
mov
ja
pop
aad
das
aas
jns
ret
pop
adc
inc
stos
fxch
jne
pop
mov
mov
push
lret
push
inc
jo
sarb
xor
rolb
loop
std
mov
push
imul
xchg
rcrb
adcl
mov
push
pop
lods
pop
xchg
or
pop
psubsb
ja
in
sarl
mov
adc
and
fs
pop
mov
mov
pop
unpckhps
call
popa
inc
xor
lock
and
aad
jg
jne
mov
push
fsubrl
mov
inc
rcrl
xor
sbb
lods
sub
dec
outsl
lods
out
mov
jl
pop
or
jmp
pop
mov
cmp
sub
pop
out
push
and
xor
adc
mov
jb
pushl
test
mov
jle
rcrl
sbb
inc
inc
sbb
cmc
js
mov
xchg
and
ret
push
pop
add
or
dec
pop
fcomps
inc
xchg
sub
lcall
iret
and
xor
test
jp
mov
in
iret
ljmp
cmp
cmp
or
int3
jno
ja
ret
inc
sub
push
jo
sahf
push
inc
add
xchg
aad
jb
xor
xor
xchg
in
ficoms
cmp
leave
xor
sbb
sub
mov
mov
and
int
jb
adc
or
mov
lods
dec
mov
pushw
or
out
adc
je
sub
pusha
nop
pop
lret
jge
cmpsb
cmp
std
andl
push
inc
ret
mov
push
dec
mov
sbb
das
jle
sub
add
lea
repnz
popa
lahf
idivl
xor
clc
outsb
mov
sti
xorl
jbe
add
pop
cld
ret
xchg
arpl
xchg
mov
je
sub
sbb
call
mov
xor
xchg
out
call
lods
stos
mov
mov
xlat
inc
dec
fisubrl
pop
dec
mov
mov
mov
xor
in
imul
fdivs
or
and
test
xlat
or
dec
jne
fmul
dec
pop
adc
pushf
xchg
mov
mov
mov
out
mov
mov
test
and
mov
pop
dec
push
and
fwait
cltd
icebp
push
push
sahf
test
fimuls
outsl
leave
xchg
xor
cmp
std
pop
shrl
cmp
lods
pop
cltd
dec
lahf
push
scas
insl
fwait
ret
inc
pop
or
cld
scas
sbb
push
mov
or
jmp
mov
cmp
xor
xor
and
cmpsl
icebp
fistl
mov
and
or
std
testb
pop
rclb
lret
or
test
das
mov
mov
repnz
mov
out
push
scas
out
add
push
dec
aaa
cltd
movsb
sbb
push
mov
movsl
dec
call
popf
and
add
jno
mov
xchg
lret
out
cltd
and
mov
cwtl
sbb
in
lods
xchg
mov
dec
sbb
insl
dec
xor
push
push
jnp
dec
pop
push
clc
add
imul
loope
fisubs
ret
hlt
test
add
jo
ret
out
inc
or
ficoml
mov
scas
pop
mov
mov
sbb
int
sbb
stos
into
mov
movsb
lods
test
imul
incb
movsb
jnp
push
gs
push
and
push
out
in
lret
push
fcmovu
int
or
push
pushf
adc
into
into
leave
fcmovnbe
mov
jno
mov
arpl
out
fdivr
loopne
jno
xor
outsl
outsb
add
mov
xor
or
scas
pop
fs
push
ret
or
sbb
mov
fstpt
hlt
xchg
and
nop
or
addr16
inc
pop
sub
inc
pop
jg
push
pop
es
adcl
std
shl
and
mov
icebp
cmp
shll
ficompl
or
sub
shll
imul
out
es
and
inc
lods
sbb
int3
fldt
scas
ja
xchg
lret
dec
rorl
movsb
lahf
xchg
cld
fwait
repz
sbb
mov
push
or
adc
fildll
nop
push
jne
in
loopne
popa
xor
rcr
loopne
and
pop
xchg
xor
or
mov
popf
cmp
ljmp
sti
out
es
jne
daa
pop
mov
jb
repnz
mov
xchg
dec
adc
mov
xchg
xor
xchg
aaa
scas
in
popf
rorb
imul
bound
xchg
insl
jb
mov
mov
fldcw
add
imul
push
jecxz
xchg
sbb
into
sub
fs
xor
mov
rolb
inc
addl
sbb
cwtl
sbb
pop
adc
ds
inc
cmp
std
mov
mul
xor
lock
daa
test
int3
lret
loope
sbb
icebp
ss
scas
push
addb
ds
pop
push
ljmp
inc
pushf
orl
cmp
mov
sub
push
test
enter
cmp
es
cld
adc
frstor
and
pop
add
loop
sbb
sbb
mov
out
mov
adc
push
in
cmp
daa
push
and
dec
xor
inc
xchg
out
jecxz
popf
pop
pop
push
inc
data16
test
sbb
jl
xor
fldcw
xor
sar
fnstenv
pop
subl
xlat
rcll
out
dec
add
imul
popf
add
scas
or
pop
in
inc
cmp
sbb
mov
xchg
out
lcall
xor
in
int3
movsl
jns
xor
popa
mov
mov
stos
push
mov
in
jb
rorb
js
loope
in
or
inc
mov
popf
enter
dec
adc
test
mov
cmp
and
inc
ret
mov
shll
jae
sahf
fdiv
mov
mov
mov
xor
dec
loopne
mov
mov
imul
xorb
dec
dec
push
inc
cmp
loop
dec
fcmovnbe
dec
cltd
xchg
enter
ss
pop
leave
lock
cmp
stos
pusha
sarl
adcb
mov
pusha
gs
or
shll
pop
je
push
das
dec
outsl
mov
out
ds
cmc
pop
add
adc
cmpsl
push
xor
js
adc
and
rcrb
jmp
scas
xchg
jnp
mov
jno
mov
mov
mov
inc
mov
aam
int
dec
and
or
jge
fiaddl
fsubp
dec
inc
testb
std
push
xchg
ss
aas
push
push
xor
push
sar
das
out
xchg
sub
scas
js
pop
cli
jp
xchg
arpl
dec
inc
div
inc
bound
cwtl
lret
sub
movsb
idivl
popf
push
xor
mov
loopne
mov
int
fwait
xchg
fwait
add
cmp
stos
cs
adc
test
mov
out
dec
sub
je
mov
mov
jmp
shll
cmp
aas
sbb
adc
mov
call
push
fcmovnbe
notb
adc
aas
pop
push
fmul
pop
in
pop
dec
adc
xor
inc
loop
mov
std
stos
push
and
aad
and
xor
das
sbb
mov
je
push
sarb
push
aad
in
js
in
jb
sahf
out
mov
sbb
add
test
xchg
push
jp
dec
adc
mov
cs
mul
inc
push
movl
jb
pop
jb
xor
loopne
int
mov
std
jmp
je
sahf
xor
xor
sub
sub
xchg
pop
mov
or
xchg
pop
icebp
jnp
push
mov
mov
push
add
cs
mov
xchg
push
inc
jle
xchg
adc
jmp
imul
cmp
sub
mov
shll
js
and
cmc
dec
out
movsl
fs
and
add
jl
scas
jmp
out
adc
pop
and
test
mov
addr16
out
fimull
dec
js
sbb
mov
push
jbe
fmull
or
jmp
sbb
hlt
dec
jbe
and
pop
mov
jno
adc
xchg
pop
jno
jb
call
out
add
adc
ret
cmpsl
out
cmp
xchg
xor
lcall
and
lods
cmp
mov
mov
je
in
sub
stos
xchg
inc
in
lods
sbbb
mov
cmp
bound
push
mov
xchg
lods
iret
xor
sub
pop
and
inc
fcom
push
cwtl
mov
movb
dec
ss
test
and
in
push
out
scas
add
call
enter
push
out
addr16
inc
adc
je
lret
or
nop
mov
adc
xchg
notb
push
mov
dec
pusha
fbld
inc
inc
push
data16
js
cmp
daa
dec
mov
fnsave
inc
or
mov
pop
test
fnsave
add
jb
outsb
das
push
int3
nop
mov
cmpl
cmc
xchg
dec
loop
fmull
pop
cmp
jns
imul
ja
cwtl
sbb
inc
ret
inc
into
dec
stc
add
pop
dec
nop
adc
jbe
hlt
ror
cmp
mov
insl
or
inc
test
test
dec
pop
aaa
mov
test
inc
push
lahf
and
gs
icebp
push
xchg
stc
int3
lret
pushf
cmp
ja
push
mov
push
mov
pop
xor
mov
pop
outsb
dec
mov
adc
ret
cmp
or
lret
incb
or
aad
pop
mov
sbb
xor
fisttpl
dec
frstor
pop
jecxz
and
nop
sbb
push
cwtl
push
push
pop
test
ud2
pop
clc
out
dec
push
dec
mov
mov
mov
imul
outsb
xchg
inc
clc
imul
frstor
and
enter
add
pushf
rolb
subb
pop
xor
or
mov
lods
jo
push
sub
aad
adc
lods
out
sahf
xchg
sbb
incl
divb
lock
notl
movsb
lret
daa
sti
xchg
xchg
out
push
mov
xchg
es
in
pop
jle
or
dec
movsl
sahf
aas
cli
or
icebp
push
or
clc
bound
out
mov
xchg
xchg
mov
inc
enter
scas
jge
sbb
cltd
xor
stos
mov
pop
or
movsb
xor
cmp
mov
das
sbb
and
repnz
sbb
mov
xchg
xor
aas
cmp
adc
xchg
dec
mov
cld
cmp
push
jecxz
sbb
call
out
dec
mov
push
mov
push
jmp
mov
mov
int3
lock
filds
call
popa
stos
mov
das
add
sub
fcoms
cli
sub
jbe
sbb
test
xor
mov
pop
sahf
iret
icebp
jmp
popa
or
enter
or
xor
fsubrl
lahf
call
popf
cmp
test
inc
xor
ret
sbb
mov
inc
mov
adc
inc
test
pop
jg
xchg
jno
iret
cmp
fnsave
inc
and
jno
push
and
jle
adc
and
stos
mov
lcall
dec
das
mov
imul
push
out
cmpsl
xlat
xor
and
mov
xchg
pop
inc
and
mov
sub
jmp
sub
dec
mov
jnp
lea
add
xor
sbb
cmp
adc
jmp
arpl
lods
in
fildll
out
mov
sbb
jns
mov
push
jl
inc
adc
es
xor
ja
adc
cmp
push
cmc
mov
inc
popf
adc
movsb
mov
out
ffree
jmp
lods
clc
ja
in
dec
pushf
ljmp
and
dec
shr
sti
xor
pop
mov
inc
dec
mov
shlb
fwait
xchg
mov
in
fs
nop
pop
lds
mov
sbb
dec
les
aaa
iret
outsb
or
neg
jecxz
dec
pop
xor
mov
mov
add
cmp
pushf
or
stos
or
frstor
std
mov
mov
cmpsl
test
adc
aaa
jecxz
xchg
das
jae
cmp
lahf
sub
cwtl
xor
xor
mov
in
dec
mov
jne
adc
out
lret
insl
adc
mov
xor
or
sub
jmp
mov
gs
and
adc
lds
mov
dec
and
pop
push
fldenv
lea
xchg
mov
and
inc
push
loope
sub
pop
stos
mov
lcall
das
loopne
lret
mov
push
fimuls
push
int3
xor
je
outsl
cmp
cmpsb
cmp
mov
cwtl
inc
sbb
gs
inc
dec
pushf
sbbl
mov
sbb
movsl
loope
mov
cmc
mov
mov
cmp
data16
ljmp
sbbb
addr16
xor
pop
jmp
pop
jns
sbbb
mov
push
pop
mov
inc
cmp
fcmovnu
orl
dec
loope
sbb
cwtl
cld
out
rol
jmp
sbb
enter
adc
fidivl
jns
mov
aad
iret
sti
dec
mov
fldcw
ret
es
leave
sahf
repnz
inc
lods
in
mov
mov
xor
and
fdivl
daa
fs
inc
out
fnstsw
xchg
cmp
mov
push
mov
add
in
mov
pop
das
xorl
fbstp
lods
fucom
test
mov
or
mov
push
push
add
jmp
pop
and
fisubl
fistpl
and
shlb
outsb
jle
adc
push
or
js
je
or
xchg
pushf
sbb
mov
push
cmpsb
push
mov
xchg
lret
stc
rol
out
pop
or
repnz
sbb
out
insl
int
pop
sbb
sub
addb
je
outsl
je
cwtl
ret
mov
jg
stos
jg
addr16
mov
sbb
in
addr16
fmuls
aam
pop
and
sbb
repz
lret
and
mov
dec
push
pushw
movsl
loope
sub
outsb
outsb
jg
jb
rorb
dec
jg
add
jo
mov
ret
js
outsb
mov
push
cli
mov
push
cwtl
rcll
dec
arpl
sbb
pop
ja
enter
mov
mov
jae
lret
jne
fcmovb
push
int
sub
lock
decl
scas
cwtl
or
outsb
inc
adc
push
insb
movsb
adc
shlb
jnp
aad
cmp
test
cmp
test
add
jae
ffreep
dec
push
test
xchg
xor
lea
notb
pop
shl
mov
bound
mov
push
dec
xchg
xchg
sub
shll
jae
jne
fsub
insb
add
push
lcall
jl
lcall
mov
dec
daa
aaa
adc
push
add
adc
stos
repz
out
xor
imul
aas
cli
shrb
mov
pop
rorl
dec
adc
loopne
pop
xchg
xchg
cli
pop
loope
loop
push
aad
fstpl
push
sti
test
cmpsl
aas
xchg
aad
sbb
popf
test
pusha
mov
or
mov
cvtdq2ps
ret
es
and
push
pop
sbb
inc
outsb
aaa
icebp
arpl
add
je
sahf
in
jb
push
fsubs
pop
mov
andb
pop
mov
dec
fmull
icebp
sbb
sarb
out
jp
cmc
push
ret
push
dec
inc
mov
ret
pop
sbb
xchg
sbb
xor
pop
or
cs
push
cmp
lods
rorl
fcmovu
insb
xchg
inc
aad
inc
cmp
or
xor
ja
mov
stos
jecxz
imul
jecxz
arpl
mov
mov
lods
mov
jge
inc
pop
out
mov
repnz
loop
out
fidivrl
fldcw
imul
or
jp
lea
hlt
or
cmp
inc
jp
gs
call
pop
adc
movsb
sub
and
inc
filds
mov
push
test
fwait
mov
mov
and
div
dec
mov
rcll
cltd
inc
shr
enter
sbb
mov
fdivrs
arpl
stos
cwtl
enter
cmp
xchg
lods
adc
push
les
js
inc
push
jge
cmp
mov
mov
gs
sbb
scas
mov
mov
lcall
pop
xor
dec
enter
movsl
jbe
or
mov
dec
icebp
pop
mov
inc
jg
les
xchg
lret
cmp
lret
leave
mov
testb
test
mov
lea
add
stc
popa
jnp
fiaddl
dec
push
sbb
lcall
loope
pop
jo
mov
dec
inc
xor
dec
mov
fisubrs
pop
sbb
fstps
fucomi
xchg
or
mov
fcoms
jb
hlt
rolb
aad
out
jmp
and
lret
fstps
sbb
cmp
scas
sahf
or
mov
pop
inc
loopne
push
push
xchg
ljmp
mov
popa
add
imul
adc
dec
fildll
mov
push
adc
mov
sub
shlb
stos
cltd
mov
rorl
add
add
cmc
addr16
in
mov
out
loopw
pop
loopne
lock
fdivs
scas
xchg
mov
and
sub
ficoml
dec
mov
lock
hlt
sbb
shlb
out
xchg
xchg
mov
sbb
xor
adc
jne
mov
loop
lret
out
repnz
shll
dec
cmp
ret
jae
aas
sbb
fwait
push
xchg
cld
mov
mov
xchg
inc
shr
ss
adc
jle
leave
xchg
pop
aad
or
hlt
dec
sti
lds
imul
fdivrp
loopne
insb
clc
shrl
push
push
popa
faddl
mov
push
mov
cmpsb
mov
loopnew
shrl
call
and
into
mov
sbb
cmpsl
aad
shll
sub
sub
dec
sub
push
ds
dec
js
fxam
add
sahf
inc
das
stc
clc
pop
in
fidivs
movsb
dec
fsubr
and
or
or
jnp
add
mov
mov
xchg
loop
add
pop
insb
shlb
shll
inc
gs
and
inc
ss
insl
scas
rclb
cltd
lods
aaa
fs
cltd
vmovntps
leave
faddl
das
cmp
arpl
insl
outsl
and
stc
gs
pop
nop
push
inc
int3
test
es
cmp
out
js
jg
ret
and
pop
int
or
inc
push
push
add
jo
mov
push
popa
arpl
movsb
cmc
imul
mov
cwtl
jmp
push
dec
and
jle
cmpsb
xor
xchg
sub
cmp
pop
push
in
les
lock
xor
inc
xchg
lods
aam
lcall
xor
xor
aad
mov
jle
fadd
xor
push
jle
aad
xchg
pop
test
pop
push
lret
mov
mov
insl
mov
addr16
and
and
mov
and
out
adc
xchg
push
inc
push
push
iret
insb
neg
mov
popl
add
xor
ret
mov
add
nop
sbbb
pusha
and
adc
xlat
add
rolb
js
pusha
in
adc
dec
inc
test
ss
pop
jl
mov
mov
xchg
adc
add
dec
cli
ljmp
adc
test
fildll
xchg
js
inc
test
cld
inc
jmp
xor
pop
xchg
cmp
add
and
rcrb
pop
xchg
rcr
pop
mov
sub
mov
jecxz
push
and
inc
test
push
pop
test
out
or
jmp
jns
rol
xlat
pop
mov
insl
insl
sbb
mov
inc
shrb
fstpl
mov
pop
adcl
push
fcmove
hlt
pop
repz
mov
scas
push
mov
arpl
mov
stos
dec
repz
push
cmpsl
out
jle
pop
xor
xchg
cmp
test
pop
mov
mov
loopne
xchg
loop
adc
movsb
out
lret
sbb
lahf
add
xor
pop
mov
add
fbstp
filds
roll
mov
cli
jno
fistpll
mov
xchg
dec
push
or
xor
movsl
inc
mov
rcrb
sbb
cmpsb
jne
adc
pop
nop
mov
ljmp
int3
aam
or
mov
fiadds
aas
scas
icebp
push
inc
adc
xor
push
inc
inc
push
mov
adc
sti
js
mov
repz
shl
enter
xchg
adc
and
psrlq
pusha
pop
jle
das
movl
cmp
xor
aad
xchg
bound
fisttpll
rclb
out
dec
in
push
lret
cmp
cmp
mov
fwait
add
pusha
xor
jg
sub
clc
jbe
sahf
lahf
mov
lahf
adc
cmp
ficomps
arpl
cmp
adc
push
jb
add
int
adc
stos
cwtl
ss
outsl
mov
andl
mov
push
jg
ret
and
or
jecxz
rcrl
leave
cld
jnp
or
inc
sub
cmp
leave
lods
xchg
pop
fs
xchg
xchg
mov
outsl
notb
bound
ljmp
iret
cmpsl
inc
dec
jns
lret
jb
cmpsb
pop
add
jns
dec
or
cmp
cmpps
adc
mov
call
cmp
lea
sub
mov
pushf
loop
into
jo
scas
nop
dec
cmp
outsb
mov
popf
adc
mov
sub
push
jnp
jge
sub
pushf
mov
inc
jl
lret
rcrl
fadds
stc
fwait
movsl
repnz
and
js
outsb
cwtl
scas
ret
sbb
call
shlb
cltd
std
add
jecxz
mov
addr16
lcall
jl
mov
fs
pop
loop
add
push
mov
push
sti
add
fcomi
lods
jbe
add
xor
std
imul
mov
int
fstl
cmpsb
add
add
sbb
lcall
cmp
dec
xchg
mov
push
mov
mov
jl
filds
inc
fdivl
or
push
dec
movsl
scas
repz
arpl
add
pop
cmp
dec
mov
mov
xor
dec
push
push
push
push
add
pop
xchg
or
mov
dec
cmp
nop
fdivrp
push
mov
push
scas
filds
lcall
loope
mov
push
xor
mov
xchg
mov
movsb
cmp
pop
ja
dec
add
add
mov
mov
pop
or
mull
loope
repnz
or
inc
nop
stos
inc
jg
icebp
xchg
mov
lcall
push
es
dec
ja
adc
iret
popf
mov
mov
dec
push
cli
jbe
or
mov
push
shll
sbb
mov
and
repz
call
adc
sub
adc
rolb
mov
enter
gs
adc
std
cltd
lret
ljmp
rolb
mov
push
js
push
dec
sub
xchg
jns
sbb
xchg
jb
sbb
cltd
inc
cmp
mov
test
adc
sub
mov
pusha
icebp
inc
xchg
jns
xor
sub
in
mov
js
jg
or
xor
mov
push
or
daa
mov
mov
movl
fs
inc
mov
aam
fistpl
sbb
arpl
es
movsl
fldt
lahf
pop
rorb
inc
push
mov
xor
jae
mul
fst
idivb
fdiv
cmc
fsubl
ret
sub
out
gs
sahf
aad
cmp
insb
mov
ret
mov
loope
sub
arpl
shl
adc
pop
and
push
add
clc
loope
mov
sub
inc
scas
mov
mov
andb
push
nop
inc
popa
jle
imul
icebp
sbb
jle
push
test
mov
cmp
adc
jno
int3
fwait
call
jmp
push
jp
dec
in
mov
sahf
cmp
sub
out
jp
jle
xchg
popa
daa
dec
enter
bound
das
cmovle
fwait
arpl
lods
pop
jo
mov
jae
xor
mov
bound
push
inc
mov
rolb
test
es
orl
pop
fisubrl
pop
ret
or
xchg
ret
je
idiv
push
jecxz
icebp
insl
or
push
inc
outsb
divl
add
cmpsb
fdivrl
dec
inc
aas
test
call
adc
adc
or
loopne
sub
popf
psubb
je
mov
pop
jo
mov
ja
push
or
jmp
xor
xchg
jl
fstpt
testb
add
adc
nop
dec
call
xchg
lock
dec
mov
pop
mov
jbe
cmpl
push
lahf
lods
jne
and
repz
cmp
cmpsl
out
pop
sbb
push
inc
mov
hlt
push
movsb
inc
pop
mov
mov
and
inc
mov
dec
add
and
and
ret
ret
roll
in
lcall
mov
ret
xlat
icebp
andl
xor
adc
das
test
ja
jp
dec
aaa
leave
mov
in
pop
test
std
xor
insl
sbb
jns
sahf
and
je
add
outsb
test
xchg
cmp
xorb
jecxz
sar
xchg
or
mov
mov
daa
out
inc
inc
test
rclb
out
popa
cmp
jge
stc
mov
popf
ljmp
xlat
repz
sti
xor
xchg
or
mov
mov
lds
adcl
jle
push
mov
mov
sbb
aam
scas
fldenv
or
pop
sbb
lock
std
and
pop
hlt
push
mov
fstl
xchg
cs
pop
sub
lods
add
enter
xchg
dec
movsb
jecxz
aam
mov
adc
sub
lock
dec
adc
loope
push
xchg
push
cld
push
lcall
jae
mov
sub
lods
out
jmp
xchg
aas
cli
in
movsb
fidivl
sti
xor
and
mov
icebp
sub
mov
jns
outsl
lea
and
xor
adc
xor
inc
xor
pop
mov
adc
or
jp
fsubl
int3
xchg
cmpsb
mov
es
sub
xchg
jnp
and
pop
outsl
lods
daa
jl
and
int
shlb
sub
mov
imul
xor
fs
mov
addr16
dec
ds
push
je
mov
mov
leave
clc
popf
testl
dec
adc
dec
bound
stc
mov
test
jmp
daa
out
pop
and
aaa
mov
pop
mov
push
and
or
and
fnstcw
xchg
mov
mov
mov
out
sub
shll
jnp
xchg
fbstp
inc
mov
iret
rcrb
loop
lretw
or
xchg
in
push
cwtl
dec
and
and
adc
divl
je
cmp
adc
jecxz
push
mov
jg
jecxz
push
popa
adc
push
adc
out
mov
mov
int3
negb
lcall
pop
dec
int3
movsl
stos
sub
popl
in
insb
ret
pop
and
inc
stc
fs
and
pop
or
or
pusha
mov
mov
fdivrs
jl
rcrl
mov
bound
dec
imul
cmpsl
loop
push
inc
fstl
aaa
daa
jl
ja
bound
mov
dec
adc
push
call
ja
shrl
sub
pop
xor
mov
std
push
popf
add
aam
xor
mov
outsb
hlt
mov
insl
dec
pop
jle
fwait
xlat
js
cmpl
or
sbb
repz
cmp
popf
fmuls
inc
ret
negl
push
fstpl
add
pop
dec
add
ljmp
add
cld
mov
inc
dec
mov
lea
icebp
jo
call
push
xor
in
jne
rclb
and
xchg
call
mov
and
jb
add
add
outsl
shlb
cltd
and
pop
mov
ret
dec
movsl
pop
dec
lahf
fistl
mov
rorl
push
aas
pop
or
add
je
push
rolb
inc
in
andb
repz
add
xchg
push
mov
loop
jae
push
iret
in
and
outsb
popf
notb
les
inc
popa
xor
mov
hlt
mov
xchg
lea
xchg
stos
mov
sub
inc
rcrl
mov
js
popl
jge
sbb
cmp
ret
pop
mov
and
add
jbe
mov
adc
mov
scas
aam
bound
xchg
inc
fisttps
leave
jg
xchg
rol
and
push
stos
shlb
dec
jnp
dec
mov
push
push
in
dec
pop
popa
and
pop
popf
adc
cwtl
std
push
pusha
xor
push
jns
mov
mov
in
test
push
cmp
mov
pop
fistpl
les
jle
pusha
mov
jno
inc
ljmp
fsubrl
out
pushf
loope
fwait
cmp
addr16
in
inc
js
icebp
dec
ljmp
mov
xor
inc
data16
ds
mov
sub
add
or
or
pop
cwtl
cli
shll
pop
cli
xor
outsl
test
xchg
pusha
fdivrp
imull
sub
fnsetpm(287
popf
mov
jo
in
adc
adc
clc
mov
fsubrl
dec
cmpsb
stos
push
mov
pop
or
sbb
sahf
xor
add
push
cmp
cs
jb
xchg
out
cwtl
adc
lcall
ss
scas
inc
in
cs
dec
enter
fidivl
mov
xchg
adc
jp
lea
mov
push
orb
mov
int3
sbb
xor
or
gs
mov
push
dec
test
push
sbb
roll
mov
stos
out
mov
loope
sbb
movl
or
adcb
jae
jmp
sub
aaa
ja
in
loopne
jp
mov
xchg
xchg
out
mov
sbb
movsb
outsb
xor
mov
out
push
xor
push
nop
test
rcll
sub
mov
push
pop
jle
or
std
inc
test
xor
xchg
insl
sbb
inc
insl
lret
sbb
pop
gs
add
adc
imul
mov
mov
pop
pop
into
loope
ret
jnp
js
and
sbb
arpl
ds
es
sbb
repz
icebp
jle
pop
ljmp
sub
xor
fistpl
rol
jnp
or
lahf
dec
push
mov
adc
pop
and
inc
lds
in
xor
cmp
in
cltd
enter
push
sub
sbb
adc
out
loopne
xchg
jnp
dec
data16
fidivl
sub
xchg
mov
js
sahf
sbb
mov
xor
jge
in
cmp
es
inc
addr16
jmp
or
jp,pn
test
cmp
js
add
and
nop
pusha
lods
jp
pop
mov
cwtl
xor
ficompl
push
mov
sbb
das
jp
pop
jae
add
cli
les
lock
push
popf
cs
lahf
sbb
ret
add
popl
sbb
mov
cs
xchg
in
shrl
cmp
call
add
int3
outsb
icebp
xor
sbb
jmp
sarl
xor
xchg
jne
xchg
mov
bound
push
pop
xor
jmp
decl
or
fwait
data16
xor
out
inc
scas
xor
mov
ror
shll
movsl
xchg
outsb
push
and
xor
sub
jmp
insl
gs
mov
sbb
outsl
movsl
rclb
pop
mov
xchg
test
mov
clc
sbb
push
add
fistps
je
mov
scas
addr16
out
adc
pop
or
pop
bound
ret
mov
pushf
lods
xor
push
outsb
jns
push
ljmp
repz
lea
dec
cmp
rcr
ret
inc
fbld
clc
imul
add
fstpl
leave
and
sub
inc
in
movsl
push
xor
lret
cmc
daa
ss
bound
inc
out
mov
xchg
pop
and
dec
ret
fs
fadds
push
aaa
inc
dec
push
push
and
daa
stos
sub
dec
in
sbb
mov
fbstp
sahf
arpl
lds
clc
sub
jb
sbb
clc
call
or
aam
lret
ficomps
addb
push
xor
clc
push
popf
xchg
xlat
dec
aas
push
and
push
bound
movsb
movsl
das
cmp
pop
fidivrl
cmc
pop
mov
push
movsb
mov
fnstenv
adc
jne
fwait
or
je
sub
sub
std
xchg
and
jecxz
sub
repnz
pop
and
test
xchg
data16
test
movsl
xor
xlat
fsts
jns
stos
mov
and
jp
inc
dec
adc
cmp
into
ret
push
movsb
add
rcrb
out
xchg
push
aaa
adc
xchg
sub
fs
bound
jo
mov
ja
pop
gs
cs
add
fisubl
push
divl
mov
or
push
xor
divb
stc
mov
movsl
test
xor
mov
lret
cmp
lods
jns
inc
and
call
mov
ret
arpl
sub
rcrb
fwait
lret
ja
popf
leave
jae
sbb
mov
push
call
imul
cmp
xchg
repnz
mulb
xchg
adc
shrl
mov
lods
jnp
outsl
xor
insb
pop
rol
mov
inc
js
mov
push
or
and
add
ret
or
xchg
sbb
push
loop
mov
add
mov
sbb
je
and
or
sbb
mov
pushf
inc
lods
testl
ds
adc
dec
fnstcw
lcall
fcoml
inc
cmp
sbb
cmpsl
fsubs
adc
dec
pop
pusha
dec
orb
pop
and
out
dec
sbb
xchg
pop
add
inc
in
mov
mov
repnz
imul
dec
mov
les
aaa
js
movsb
adc
pop
cmp
jp
enter
pushf
scas
xor
clc
lret
or
or
insb
xlat
mov
cltd
out
jle
movsl
mov
sub
out
and
sbb
sub
jmp
vmaskmovdqu
stc
notl
cli
in
ficompl
sbb
jne
add
repnz
sbb
js
adc
pop
cwtl
push
fs
mov
ret
cmp
cmc
mov
iret
adc
push
cmp
mov
jno
mov
cmp
add
outsl
xabort
jo
mov
dec
mov
push
loopne
sub
push
rcrb
jno
mov
cld
push
adc
enter
repz
das
fistpll
jo
mov
lock
mov
or
faddp
xchg
push
fmuls
mov
ljmp
cld
push
pusha
jecxz
cltd
xchg
mov
or
sbb
out
stos
fsts
fidivrl
aaa
inc
xchg
xor
popf
pop
arpl
cmp
mov
stc
call
ds
cmp
adc
mov
push
sahf
mov
cmpsb
loope
sbb
movsb
mov
mov
mov
fsts
enter
rolb
fsubrs
insl
push
add
adc
mov
int3
into
add
jo
fcomp
inc
sub
outsl
push
outsb
mov
mulb
subb
call
lods
xchg
dec
pop
icebp
mov
arpl
pop
adc
xchg
adc
es
dec
movsb
and
fcompl
adc
and
in
ret
mov
mov
xor
and
iret
popa
sbb
in
data16
inc
fs
ret
or
lock
adc
ret
mov
lds
arpl
mov
xor
lea
repz
pop
or
adc
or
pop
adc
xor
in
fldcw
aam
sub
rorb
adc
repnz
test
adc
mov
push
clc
pop
lods
js
faddl
and
aaa
jge
clc
loope
scas
imul
mov
push
addr16
ljmp
xchg
pop
inc
adc
jg
insl
jle
fnsave
xor
into
pop
repz
fwait
cli
adc
xchg
gs
adc
outsl
sbb
push
loope
jae
sti
ss
or
cmp
pop
mov
ret
pop
adc
add
mov
sbb
outsl
stos
mov
push
and
dec
ss
scas
mov
mov
cmp
sub
lods
adc
in
inc
shrl
adc
adc
jnp
sub
or
mov
out
cmpsb
push
icebp
dec
jo
jle
lods
xor
nop
adc
xchg
mov
jmp
int3
icebp
ds
xor
leave
mov
xor
xor
in
stc
es
cmp
shrl
lret
and
decl
sbb
arpl
cmpsl
je
in
cmp
sub
xor
xchg
mov
push
lcall
pop
push
dec
lds
jp
adc
data16
je
fistps
scas
xchg
inc
pusha
xor
xor
xacquire
push
jg
inc
push
imul
and
fwait
mov
mov
push
xor
addl
xchg
add
or
inc
lcall
arpl
and
jge
fistpl
outsb
adc
pop
xor
imul
lret
fistl
add
das
imul
in
in
dec
out
xor
bound
dec
push
xchg
inc
jecxz
fidivrs
jbe
repz
sbb
jg
fisttps
mov
pop
mov
mov
fcoms
mov
and
addr16
out
stc
xlat
minps
enter
ss
jp
pop
mov
inc
loope
mov
mov
lock
insl
cmovb
sub
call
and
mov
mull
xor
sbb
ss
xor
repnz
pop
sbb
outsl
ficoms
and
mov
ljmp
addr16
aas
or
or
or
xchg
xchg
stos
dec
push
push
shll
sbb
add
mov
fiadds
and
mov
rorb
mov
in
inc
fmull
fmul
dec
cmp
scas
jne
sub
add
lea
inc
rcl
mov
xor
iret
in
pop
ret
and
sbb
pop
push
pop
outsl
shl
sub
out
mov
sarl
into
or
les
and
jns
lea
cmp
enter
scas
mov
inc
pop
je
add
je
lahf
movb
xchg
repnz
movsl
push
loope
stc
cmp
lods
pop
in
inc
mov
mov
pop
lret
out
cld
mov
cltd
addr16
mov
cwtl
cmp
xchg
dec
outsb
and
dec
inc
jle
repz
mov
test
push
cmpsb
pop
dec
in
out
dec
je
ljmp
inc
not
stos
jmp
es
iret
inc
addr16
test
xor
push
jg
push
jns
sbb
orb
xchg
adc
sti
xor
cmp
inc
inc
cmpsb
fists
in
inc
fisttpl
lds
ror
dec
lahf
in
in
scas
mov
or
jge
faddl
jnp
fmull
jmp
inc
push
mov
mov
test
imul
shll
repz
dec
int
or
inc
aas
cmc
mov
lea
pop
aas
cmp
adc
sarb
adc
rcrb
aam
or
js
lods
shlb
out
dec
sbb
jle
adc
insb
pop
test
movsb
cld
push
fbld
xchg
sub
loope
cmp
mov
cmp
xor
movsl
jmp
jmp
jb
test
cmp
mov
and
lret
cwtl
das
push
cmp
in
xchg
shll
pop
out
push
inc
stos
insb
sgdtl
repnz
xor
sarl
xchg
cmp
push
jl
inc
bound
xchg
popf
jbe
jmp
and
clc
mov
adc
cld
or
and
push
lcall
repnz
and
in
loopne
or
icebp
lahf
loop
lea
ret
push
arpl
out
push
xorb
mov
sbb
dec
stos
and
lret
cmp
jle
jo
inc
sbb
cld
mov
mov
inc
or
outsb
sbb
pop
mov
xchg
sbb
ljmp
fucom
cmp
enter
aaa
jns
aaa
movsl
mov
adc
repnz
jae
cmp
iret
popa
inc
cmp
or
sub
mov
xchg
fiaddl
ficoml
in
adc
mov
mov
dec
or
movl
outsb
mov
and
xchg
mov
jnp
pop
mov
icebp
cltd
adc
cltd
les
adc
cmpsl
mov
fnsave
mov
call
lock
cvtpi2ps
and
out
scas
lods
stos
push
adc
fucom
stos
push
push
or
shl
xor
mov
mov
jle
lcall
sub
sub
adc
lock
iret
push
dec
jae
cmpsl
mov
xor
mov
hlt
les
xchg
stos
stos
sub
test
jle
ja
push
scas
test
mov
xchg
xlat
ror
mov
aas
mov
and
xchg
pop
fnstcw
ret
sub
shl
cltd
stos
movsb
pavgw
mov
loopne
xchg
mov
fisubrl
imul
push
test
fbld
test
pop
mov
cli
lock
in
cmc
inc
mov
push
clc
mov
shrl
out
push
into
roll
xchg
sub
dec
push
pop
movsb
shll
and
data16
sarl
cltd
cs
mov
in
ret
mov
xor
mov
out
pop
iret
and
popa
mov
test
lahf
cmp
pop
mov
and
push
int3
popf
addr16
sbb
pop
enter
js
pop
mov
push
mov
ja
lods
sub
aad
mov
or
adc
sub
addr16
push
dec
xchg
sub
fildl
fcmovnu
dec
lock
xor
std
cmp
cmp
pop
out
mov
cmpsb
or
imul
mov
mov
mov
fmull
push
sahf
ret
mov
mov
push
jmp
iret
and
push
fisubs
scas
test
sti
adc
stos
cwtl
aam
mov
leave
pop
mov
mov
cld
adc
in
insl
leave
mov
mov
push
mov
popa
pop
repz
cltd
pop
add
jecxz
loop
hlt
sub
lahf
adc
mov
fs
dec
mov
stc
lret
and
lret
push
rcrb
stos
loop
ss
cli
adc
cltd
adc
out
lds
imul
outsb
sbb
pop
mov
cmpsb
call
mov
test
js
subb
sub
arpl
push
pop
stc
popf
xor
jb
inc
jae
add
pop
out
mov
aad
ja
mov
mov
xchg
and
jmp
inc
out
mov
cli
test
pop
daa
xchg
adc
movsb
adc
testl
in
jne
mov
loopne
jno
xor
clc
test
fwait
mov
xchg
jno
call
pop
or
je
jo
inc
je
dec
xorb
sub
popf
xchg
xor
jae
mov
inc
pop
cli
mov
iret
mov
mov
mov
aam
mov
bound
sbb
inc
mov
movsl
cmp
xchg
sti
mov
sbbb
cmc
cs
frstor
fs
xchg
dec
les
lcall
out
dec
or
and
ret
inc
daa
inc
sub
mov
mov
jp
mov
sbb
push
xchg
xchg
out
stos
pop
mov
adc
dec
ret
mov
xor
cld
xorl
int
cli
idivb
ret
aaa
es
push
mov
cmpsb
mov
in
or
mov
pop
gs
adc
lods
and
adc
lds
jl
mov
add
add
and
push
cmpsl
sub
push
ret
sbb
enter
shll
scas
js
push
push
pop
in
loop
mov
in
xorl
add
dec
int
pop
fildl
cld
movsl
in
sti
push
loopne
aam
jae
adc
inc
sub
jns
addr16
and
xor
out
mov
cmc
push
je
adc
mov
test
out
ja
fisttpll
ret
fidivs
stos
das
pop
neg
popf
bound
dec
push
and
cmp
les
jl
pop
or
cmpl
dec
push
iret
loop
cmp
das
les
mov
add
or
jp
testl
jbe
xchg
aas
mov
xchg
jmp
in
loop
test
mov
xor
jle
ret
insb
jle
mov
pop
sub
sbb
mov
popf
ja
pop
negl
xor
aas
jle
rcrb
jo
and
mov
imul
adc
xchg
mov
stos
cwtl
in
xchg
out
bound
shrl
ret
dec
mov
xchg
cmpsb
lods
add
mov
dec
in
shrb
mov
inc
mov
movsb
lret
call
jle
cltd
pusha
testb
and
arpl
clc
rorl
lods
negb
jg
xchg
xchg
sahf
and
dec
repz
xchg
lods
fsubrl
add
inc
and
push
cwtl
and
outsl
and
clc
aad
sub
repz
mov
aad
pop
sbbb
test
push
rorb
in
push
adc
gs
jb
loope
lret
and
and
jg
cmp
inc
inc
imul
rep
repnz
rcll
lds
fwait
addb
js
push
dec
push
adc
aad
call
sbb
jge
ja
push
adc
fstpl
sbb
js
adc
add
fnstcw
loop
jo
mov
orps
push
nop
sub
inc
aaa
and
sub
rclb
push
fldenv
outsb
jecxz
jne
inc
cmp
push
pop
inc
insl
scas
jle
mov
add
adc
mov
imul
push
lods
sub
sub
push
pusha
pop
enter
insb
gs
loop
push
aam
lret
mov
lret
dec
jnp
push
data16
lea
aad
cmpsb
call
stc
push
pop
cltd
clc
rorl
fistpll
rcll
jo
sbb
popa
xchg
dec
pop
lods
mov
adc
fbld
mov
js
rorl
lsl
icebp
dec
xchg
cmpsl
sti
xor
hlt
ds
pop
mov
lock
in
add
jno
popa
dec
movsl
fildl
dec
sbb
cmp
lds
xchg
clc
pop
or
adc
in
imul
jecxz
jbe
imul
xlat
push
sub
sub
jg
test
jns
inc
push
xchg
lret
lods
popf
mov
mov
fidivs
test
inc
adc
xchg
fnstenv
and
jo
ss
dec
outsb
or
sub
pop
jo
push
shll
sbb
push
std
sub
inc
xchg
xlat
inc
fdiv
cmp
xor
jle
movsb
mov
cmp
sub
data16
mov
addb
outsl
and
out
add
push
scas
mov
sub
and
and
pop
pushfw
daa
cwtl
lods
pushf
lods
jo
or
ret
dec
sub
lcall
pop
jecxz
in
pop
push
inc
push
iret
pop
inc
out
mov
aam
std
and
xchg
movsb
test
bound
sub
rol
dec
ret
cld
out
and
imul
test
sub
sub
shrb
cmp
jno
xor
cwtl
lea
inc
out
notl
sti
fidivrs
nop
mov
mov
mov
dec
dec
adc
xchg
dec
pop
pop
push
mov
dec
hlt
fsubr
mov
or
sub
cmp
add
sarl
arpl
push
outsl
mov
xchg
adc
mov
cltd
data16
call
cltd
pop
jg
pushf
aas
cmp
popa
pop
les
stc
lahf
and
inc
cmp
lods
sub
andb
aad
ds
sub
fbstp
xchg
insb
jp
push
cli
cmpsb
mov
mov
imul
cmp
stc
or
and
frstor
leave
inc
adc
mov
inc
cmpsl
sti
lcall
rcrl
shll
outsl
mov
test
jle
xchg
fs
mov
mov
stos
icebp
ret
pop
inc
adc
push
scas
inc
test
push
or
mov
es
shll
shrl
push
pop
inc
jne
ret
es
push
xchg
mov
xor
sub
fiaddl
loopne
dec
mov
dec
xlat
mull
pop
nop
js
lahf
pop
movsb
int
arpl
shlb
aaa
add
sbb
daa
mov
mov
flds
and
dec
mov
and
adc
enter
dec
mov
push
and
jb
mov
enter
lret
dec
pop
jno
jle
cwtl
fildll
mov
gs
out
mov
cmpsb
mov
pop
stos
inc
inc
jb
jecxz
inc
xchg
imul
not
sub
lea
cs
cmpsl
lret
cmp
pop
add
test
not
pop
negl
add
xorl
inc
cmovns
pop
push
or
stos
add
add
nop
dec
lods
jbe
roll
xor
xchg
xor
jbe
jecxz
rolb
push
inc
repnz
int3
cmp
push
clc
xchg
jbe
and
inc
sbb
inc
lods
cmp
iret
push
mov
leave
dec
repz
cli
imulb
mov
fistps
rcrl
and
test
into
mov
xchg
or
xchg
lods
sub
outsb
repz
mov
sbb
sbb
nop
inc
xor
cmp
cwtl
bound
fstps
sub
cld
mov
dec
and
jp
je
adc
mov
cld
std
cmp
jo
movsl
je
mov
add
mov
je
sahf
mov
lods
test
jg
les
inc
lcall
jno
out
push
adc
nop
orb
mov
sbb
data16
psrad
jle
inc
ret
cmp
sub
mov
daa
cmp
inc
pop
fwait
push
cltd
push
and
sbb
lcall
aam
push
es
hlt
jb
sbb
push
add
jno
cmp
clc
dec
jae
dec
lret
sbb
jo
insl
loop
mov
rcll
dec
mov
and
cmp
lea
add
mov
inc
xchg
mov
cmp
mov
mov
push
and
out
sbb
ds
insb
push
shll
popf
repnz
leave
adc
outsb
pop
push
mov
adc
jge
jp
cmp
mov
cmp
add
jns
and
lods
xor
aad
lock
mov
repz
xchg
mov
dec
je
test
mov
pop
push
pop
inc
movb
xchg
into
inc
jl
js
and
dec
jne
mul
and
decb
imul
iret
or
testb
lods
outsl
sub
in
or
sub
popf
inc
lods
add
mov
push
or
mov
push
cli
neg
fld
mov
pop
pop
xor
cmc
push
movsl
sbb
iret
mov
push
aas
xor
sbb
xor
add
jmp
jnp
lcall
ds
ret
lahf
mov
mov
test
add
aas
shlb
cs
outsl
adc
dec
cltd
in
push
packuswb
mov
jmp
pop
xchg
sbb
or
lcall
iret
sub
sbb
cwtl
loopne
ljmp
xor
mov
fisttpl
daa
lret
pop
xchg
lods
mov
lret
je
stos
out
sbb
insb
sub
xchg
cmp
test
add
hlt
sbb
ds
and
test
mov
jecxz
dec
jae
je
imul
iret
addr16
rolb
dec
push
xor
xchg
aad
pop
jns
sbb
mov
mov
mov
mov
add
pop
lods
pop
and
cmpl
jle
mov
cltd
or
pop
ljmp
lret
test
jp
sbb
mov
aad
jle
aas
ss
jno
in
inc
sub
cmp
hlt
cmc
adc
sbb
and
loop
pop
xor
filds
sbb
shll
and
mov
insl
lcall
dec
jnp
mov
mov
push
imul
std
xor
jmp
pop
jno
sub
mov
push
sub
xchg
mov
mov
mov
inc
imul
test
adc
cmpsb
icebp
inc
arpl
shl
nop
sar
nop
inc
popf
pushf
jmp
cs
add
fwait
dec
sarl
repz
hlt
dec
orl
adc
push
sbb
adc
mov
stos
das
imul
rcll
jmp
pushf
mov
inc
out
movsb
mov
jb
aam
xchg
fwait
jne
jae
or
xlat
xchg
push
push
cs
cltd
insl
mov
mov
adc
popa
mov
inc
jno
jbe
mov
push
sub
push
or
cld
aas
lret
mov
mov
mov
mov
mov
mov
adc
inc
mov
aad
cli
mov
xchg
ds
cmp
jbe
cld
pop
test
mov
jno
push
adc
out
mov
cmc
jg
or
xchg
rolb
out
and
sub
mov
test
xor
add
pop
lods
xor
cli
rcll
push
adc
lret
mov
kmovd
push
push
iret
mov
cmpsb
test
cmpsl
fisubl
pop
or
sbb
jmp
jl
insl
repnz
scas
jecxz
cwtl
push
lods
mov
mov
fidivrs
in
cmp
xlat
stos
pop
pop
xor
sbb
jns
or
add
fisubs
jb
mov
dec
pop
ja
in
daa
sub
outsb
fnstcw
inc
scas
mov
adc
mov
pmulhuw
mov
notl
sti
rorb
fmul
dec
xchg
sarl
sbb
repnz
xchg
fdivrl
add
sbb
sub
fiadds
jp
jecxz
dec
data16
inc
aas
xchg
lcall
cmp
mov
sub
stos
flds
gs
mov
or
mov
popa
pop
cmp
stc
cld
lahf
mov
test
push
jle
mov
pop
jmp
adc
mov
daa
xor
daa
in
jno
or
jp
addr16
lahf
push
std
cs
jecxz
add
mov
stos
movsl
xor
jb,pt
sub
sbb
jp
lcall
mov
aaa
iret
add
movsb
add
push
nop
sbb
test
out
rsm
jno
inc
mov
adc
jo
imul
jg
lods
mov
leave
nop
cmp
push
dec
loopne
cld
sub
cld
mov
lods
inc
clc
inc
pop
call
stc
cmp
ret
xchg
dec
movsl
lret
aam
xor
push
add
and
fprem
jg
jg
jp
leave
int3
std
pop
cmp
xchg
and
xor
sbb
addr16
das
sbb
pop
jne
cmp
lods
aam
rcl
xchg
movsb
and
in
insl
or
popf
mov
inc
in
push
jne
push
add
xlat
insb
jl
add
lret
pop
imul
cmp
aas
je
cmp
inc
lret
and
inc
cmp
aas
jl
cmpsl
xchg
add
insl
rcrl
mov
lret
dec
shlb
outsb
fdivl
inc
int3
mov
push
call
push
insl
mov
push
jl
jbe
lea
loopne
stos
mov
ja
mov
bound
outsb
fstpl
xlat
sub
out
js
clc
add
push
cmp
mov
mov
jb
mov
imull
jmp
cs
adc
clc
lret
add
jns
cli
iret
bound
js
das
mov
call
pop
jns
rcrl
pushf
outsl
mov
add
and
dec
xor
jge
add
push
test
inc
jp
and
das
cmpl
lds
pushf
insl
hlt
movaps
cmpsl
cwtl
cmpsb
sbb
int3
xchg
lcall
jne
mov
repnz
fsubrp
fs
jo
jmp
cmpb
cwtl
out
mov
repnz
cmp
in
push
orb
mov
lods
pop
add
cmp
sub
into
push
or
lea
stos
in
loope
data16
push
into
icebp
repz
and
aad
push
and
and
and
nop
mov
or
pop
xor
scas
mov
or
or
lea
std
sub
inc
icebp
sbb
out
mov
imul
cli
pop
mov
xorl
or
sbb
jae
sub
in
jle
jns
ret
adc
jne
shll
xchg
jnp
movl
out
add
and
dec
add
fdivp
mov
shlb
add
lahf
pushf
jnp
dec
shr
add
or
jg
out
adc
jp
je
push
push
xor
jb
xor
lahf
pop
in
daa
bndstx
popl
loopne
sbb
jae
push
sti
lret
add
xor
adc
push
stos
adcl
shrl
pop
cmc
xchg
mov
addl
or
and
mov
outsl
jmp
xchg
shll
sbb
pop
pop
push
xchg
xchg
or
cmpsb
dec
loopne,pt
popa
pop
mov
fsincos
or
mov
fidivl
incl
leave
add
cmpxchg
imul
push
sbb
xchg
rclb
scas
lret
lods
je
out
mov
mov
inc
sbb
lds
mov
jno
sbb
rolb
cli
fnstenv
sahf
pop
popf
rclb
lcall
or
cmp
lds
sbb
mov
stos
lods
xchg
icebp
jae
dec
rdtsc
test
outsl
data16
loopne
dec
pop
jo
sbb
jns
pop
sti
sub
mov
jne
add
xchg
shlb
test
xchg
mov
jp
pop
sbb
loopne
and
movsb
dec
mov
in
mov
test
dec
xor
sub
js
push
fdiv
jp
lock
ficoms
out
insb
aam
xor
adc
frstor
popf
int3
sub
ljmp
dec
mov
cmc
jbe
mov
rorl
clc
pop
jg
inc
jle
movsl
fdivr
stos
fidivrs
into
xor
ffree
fcomp
jecxz
adc
movsb
mov
shr
mov
pop
mov
leave
mul
por
xchg
jnp
test
out
pop
push
sub
mov
jle
cmp
xor
add
rolb
aaa
gs
push
xchg
push
pusha
ret
jne
or
mov
pop
mov
mov
pop
or
rolb
loope
add
xchg
mov
shll
sbb
imul
xchg
push
or
int3
sub
daa
js
mov
cmp
repz
mov
neg
inc
mov
xor
mov
test
xchg
mov
push
clc
jne
int3
aad
sbb
mov
adc
xchg
push
mov
push
push
loopne
xchg
and
add
inc
sub
sbb
sub
and
xor
dec
mov
cmp
arpl
sub
xchg
lcall
fpatan
lds
aaa
les
out
push
out
into
ds
jno
mov
mov
pushf
cwtl
ret
pop
repz
sub
or
idivb
xchg
mov
fwait
push
inc
sub
jo
or
lods
stos
dec
mov
inc
ja
inc
push
cs
lahf
adc
cmp
inc
shll
rorl
mulb
cwtl
out
shll
jmp
in
divl
dec
pop
addr16
cmc
jp
or
mov
lods
push
xchg
jo
add
pushf
ljmp
lret
jns
imul
xchg
jno
jle
and
mov
sbb
fisubs
fs
rcll
pusha
icebp
fcmovnbe
into
adc
push
cwtl
inc
ja
mov
xor
and
lcall
push
and
mov
testb
adc
add
clc
push
imul
and
or
icebp
mov
leave
ss
fmull
jge
je
pop
cmp
or
enter
inc
mov
push
xor
pop
mov
lret
xor
push
push
push
xorb
pushf
mov
bound
lret
pushf
lret
fwait
cltd
jno
jbe
mov
and
loop
mov
stc
movsb
mov
std
enter
xor
sub
call
sbb
movsb
into
fimuls
jg
mov
sbb
imulb
jb
aaa
or
gs
mov
xchg
loope
add
cmpsl
div
jae
fimull
repz
sar
insb
or
test
push
push
in
push
test
arpl
mov
jne
test
pop
cmpsb
or
mov
lods
xor
dec
movsb
pop
mov
pop
and
sbb
pushf
test
xchg
push
sbb
mov
movsb
vcvttss2si
pop
scas
jnp
xor
sub
cmp
jg
push
dec
inc
jo
mov
xor
stc
sub
inc
outsl
xchg
clc
xchg
int
cmpsl
pop
adcl
leave
sbb
adc
rclb
insl
mov
js
mov
dec
scas
in
popf
xchg
imul
loopne
jp
sahf
jnp
xor
cmp
test
mov
bound
sub
cmp
cmpsl
testb
outsl
dec
mov
adc
dec
inc
pushf
frstor
dec
stc
not
jl
push
call
mov
xchg
mov
sbbb
sti
stc
sbb
imul
inc
daa
stc
sub
movsb
lods
sub
xchg
repz
outsl
pop
loop
in
and
stos
ret
pop
repnz
loop
mov
out
mov
mov
addr16
nop
pop
push
loope
out
mov
jb
stos
loop
ljmp
test
inc
xor
outsb
add
push
adc
xlat
adcl
jbe
sub
adc
out
call
dec
xor
psubsb
or
push
ja
orl
pop
imul
shl
sub
sahf
out
mov
mov
dec
mov
cmp
or
ja
inc
xlat
mov
lcall
enter
fisttpll
mov
xchg
out
shrb
cmpsb
in
cmp
jnp
pop
sbb
dec
out
dec
lods
sbbb
js
add
adc
gs
cmp
cmp
insb
mov
jecxz
dec
push
mov
data16
pop
push
or
xchg
fwait
mov
lods
outsb
pop
pop
pop
shll
mov
xlat
jae
je
stos
int3
scas
or
xchg
jle
rcrl
mov
dec
adcl
aad
xor
mov
pop
mov
xor
adc
cmpsl
aas
pop
arpl
addl
sbb
lret
into
or
stos
jnp
push
mov
js
xchg
out
push
inc
les
mov
pop
lcall
out
lret
sbb
push
add
fwait
hlt
imul
cmp
jne
sbb
adc
add
xchg
inc
and
int
push
ljmp
test
sbb
mov
push
fsubr
push
cmc
nop
adc
movsl
jl
dec
pop
dec
pop
cld
subb
ljmp
ret
pop
mov
outsl
cmpsl
mov
jno
mov
addr16
lods
sub
push
ret
inc
daa
cld
pop
xor
xor
loope
mov
pop
push
mov
mov
and
jmp
pop
bswap
loop
push
mov
fists
je
sbb
pop
jnp
xor
add
scas
sub
mov
add
jge
and
fs
lcall
jp
loop
jmp
fisttps
lods
cmc
dec
fs
mov
in
xchg
jmp
mov
xchg
and
inc
sbb
ja
dec
add
mov
lds
aas
xor
add
pop
shlb
add
sbbb
dec
push
lock
cmp
jnp
hlt
add
xchg
je
cmp
xlat
pop
test
neg
sub
lahf
xchg
adc
add
cmc
lret
push
dec
mov
mov
mov
cmp
aas
out
gs
outsl
iret
cmp
fwait
cmpsl
into
aaa
dec
cwtl
pop
leave
sub
popf
cld
test
sbb
insl
sbb
xchg
pop
jns
sub
xchg
jns
or
leave
or
adc
pop
neg
rcl
ds
mov
lcall
mulb
dec
xchg
dec
push
ds
cmp
fisubrl
enter
mov
push
enter
xchg
pop
mov
enter
xor
addr16
add
adc
pop
repz
es
xchg
gs
mov
loop
es
pop
push
insb
push
mov
sub
pop
inc
adc
pop
xchg
sbb
mov
cmpsb
sbb
add
sbb
mov
stos
movsb
mov
xchg
jbe
dec
xchg
sbb
inc
idiv
sub
popf
lods
mov
mov
stos
stc
xchg
mov
mov
jnp,pt
dec
aaa
sbb
cmc
das
loop
adc
and
sbb
pop
push
mov
movsl
sbb
jmp
cld
movsl
dec
and
fnsave
pop
pushf
jl
mov
dec
dec
daa
div
loopne
aaa
pop
popf
push
adc
shlb
test
arpl
sub
or
lock
jp
outsl
jae
les
scas
daa
out
lods
out
out
ss
popf
loope
fildl
shl
xchg
fildll
xlat
adc
test
pushf
mov
sbb
xchg
cmp
sbb
lret
jmp
push
aas
mov
mov
jl
loop
mov
jo
jnp
adc
mov
pop
mov
dec
and
das
add
pop
push
mov
xchg
and
insb
inc
jle
sahf
xor
mov
fcmovne
cmp
jmp
fs
dec
cmc
insb
jl
ret
adc
xchg
pushf
inc
jne
ds
movsb
jno
push
bound
and
imulb
mov
mov
nop
adc
lret
pop
popa
and
addr16
push
cwtl
push
lret
mov
pop
daa
test
lret
dec
push
addr16
cmp
cs
aam
cmc
pop
and
adc
inc
jle
xorb
repz
jl
loopne
jne
cld
les
dec
xor
lahf
aam
and
sahf
repnz
popa
outsb
jnp
sub
mov
add
call
lret
adc
test
mov
aas
mov
jmp
aam
cmpsl
sbbb
fstl
pop
fwait
icebp
scas
call
out
outsb
sbb
repnz
sbb
cmp
adc
adc
cmp
ja
mov
jg
jmp
xlat
rolb
lods
outsl
fists
pop
dec
pusha
mov
and
add
ret
arpl
jle
ds
cltd
aam
repz
push
pusha
shlb
in
jecxz
aaa
ret
xchg
xlat
xchg
xor
repz
or
in
cmp
inc
fsubrl
adc
mov
and
inc
clc
pop
sbb
ret
or
icebp
fwait
test
dec
test
hlt
aas
push
scas
scas
jno
push
push
je
inc
xor
popa
pop
push
repz
mov
iret
lret
stc
icebp
xchg
outsl
push
stos
daa
inc
lock
cmp
mov
push
stc
mov
mov
mov
jp
hlt
addr16
inc
jae
js
and
mov
or
adc
outsl
and
pop
adc
push
jl
stc
popa
cmp
daa
and
add
jb
in
dec
xchg
xchg
fwait
inc
arpl
xchg
mov
cmp
and
cmp
xor
sti
adc
adc
push
cmp
add
push
mov
sub
cmpsl
push
out
cmp
mov
dec
push
push
sahf
push
push
je
inc
stos
or
push
rorl
inc
push
scas
pusha
mov
jns
cmp
push
cmpsb
sti
dec
mov
mov
ss
je
rcll
cmpsb
ja
xor
xchg
dec
test
mov
in
pop
dec
cwtl
pusha
xchg
inc
nop
jg
out
imul
xchg
sahf
lahf
out
insb
push
mov
sbb
mov
push
cmp
lock
sub
in
jo
cmpsb
push
push
dec
xor
ret
jp
aaa
cmp
xor
pop
sti
xchg
dec
pop
adc
aaa
mov
nop
sti
das
pusha
dec
sub
int3
ret
in
loopne
mov
and
sahf
ja
enter
orb
outsb
sarb
cltd
push
xchg
movsb
or
and
pop
jb
inc
sbb
jb
jl
push
imul
xorl
xorb
mov
pop
sbb
adc
jb
aam
xor
xchg
cltd
repz
push
shrl
daa
fcmovu
out
jl
xchg
sub
imul
pushf
jmp
jmp
mulb
sbb
gs
sbb
test
pop
pop
int3
cmp
rclb
movsb
pop
loope
sbb
loope
mov
pop
mov
sbb
lret
and
das
fstpl
repnz
and
inc
repnz
sub
mov
cmp
pop
icebp
add
jmp
cmc
rcl
sub
sub
dec
dec
sub
jno
inc
cmp
lret
stos
in
rcrb
pop
adc
test
lret
enter
mov
adc
scas
mov
adc
mov
mov
adc
mov
dec
out
inc
in
jno
xor
pop
nop
ljmp
push
imul
mov
addr16
push
xor
das
mov
adc
mov
add
xor
cmp
mov
sbb
lods
addr16
movsb
or
and
mull
outsl
mov
pop
imul
and
lahf
or
jecxz
inc
mov
rorb
dec
gs
inc
out
push
sbb
inc
and
repnz
sub
cmpsl
inc
fnstcw
push
inc
mov
shrb
mov
xchg
jg
arpl
imul
mov
cmc
mov
ret
pusha
iret
mov
fisttps
inc
add
mov
insb
fwait
lcall
je
xor
insb
xchg
int3
and
jae
outsl
fimuls
mov
pop
out
ret
fsubl
scas
adc
frstor
scas
daa
in
imul
sbb
rorb
push
inc
out
sub
push
clc
mov
test
push
hlt
cwtl
mov
aad
mov
jecxz
xchg
decb
fstpl
mov
sbb
ljmp
xchg
adc
mov
or
pop
lods
xor
adc
and
adc
sbb
jmp
or
mov
outsb
sub
aad
fabs
add
popf
in
outsl
mov
pusha
lds
xchg
test
fucomp
movsb
mov
sbb
rclb
ds
and
repnz
outsl
mov
xchg
sub
jp
call
or
inc
add
adc
xor
dec
add
icebp
mov
scas
fstl
cld
xor
mov
jnp
cmpsl
pusha
push
cmpsb
xchg
sub
sbb
fmull
dec
cmpsb
test
ret
int3
push
jae
inc
mov
push
dec
add
mov
aam
out
cmc
icebp
insl
cmp
insl
in
mov
int
jae
push
fcomps
xor
xchg
or
adc
bound
hlt
inc
push
sub
mov
repz
hlt
xchg
data16
cmp
xchg
in
cmc
lock
aad
or
and
xchg
mov
jle
imul
leave
sbb
or
movntps
orw
mov
pop
repnz
inc
test
test
dec
aam
adc
pop
cmp
xlat
dec
cld
inc
aad
stc
push
push
mov
sarb
ss
loop
lock
pop
xor
lds
xor
aad
mov
mov
jmp
mov
ja
mov
pop
clc
lcall
cltd
lahf
dec
adc
movsb
in
rorb
mov
popl
add
imul
sbb
jb
mov
call
movsl
xor
into
lods
cmp
xchg
or
jnp
push
cli
dec
add
jle
in
push
mov
xchg
sub
cltd
mov
cmp
stos
cmp
inc
jle
mov
push
sbb
add
cmp
and
pop
cmc
data16
or
test
in
mov
sbb
daa
adc
jbe
out
lcall
cwtl
loope
andl
pop
sbb
addr16
jb
mov
jle
pop
and
adc
paddd
inc
mov
stos
sub
pop
inc
pop
xor
ror
or
lcall
aam
xchg
mov
adc
xor
jae
fstps
mov
pop
mov
fadds
loope
shrl
lea
mov
jp
insb
loop
lret
fs
daa
ffree
fstpt
jp
sub
dec
clc
add
ret
pop
jp
xchg
mov
or
add
or
addr16
sub
lock
or
aaa
dec
fistpll
cmp
mov
sub
sub
xchg
es
outsl
pop
pop
xchg
out
and
sub
iret
test
xchg
inc
test
cs
jne
cli
jle
idivl
in
mov
pushf
test
imul
push
sbb
call
xchg
leave
mov
cld
push
add
dec
repnz
mov
push
pop
lock
mov
or
loop
inc
nop
ror
sbb
mov
lret
pop
push
mov
mov
int3
jnp
repz
cmp
sbb
mov
mov
sti
bound
pop
int
or
pop
gs
rcrl
push
in
in
mov
lods
orl
mov
and
adc
push
outsl
outsb
lret
sub
cli
pop
add
fs
lret
into
nop
and
loop
ret
inc
inc
stc
popa
out
xor
mov
cmc
stos
pop
add
pop
xchg
mov
inc
mov
out
mov
push
sub
xor
in
adc
insb
stos
stos
icebp
mov
cmpsb
bound
pop
mov
add
pushf
fildl
sbb
cmpsb
fnsave
inc
jle
sub
icebp
icebp
pop
xor
cmp
pusha
dec
inc
jbe
jg
adcb
lret
mov
insl
ds
lods
push
and
ja
mov
les
dec
cmp
mov
mov
xchg
adc
cld
inc
or
mov
inc
dec
insl
push
xchg
dec
mov
xchg
dec
outsb
je
fwait
dec
jp
fdivr
pop
imul
adc
xchg
cmp
arpl
pop
enter
pop
dec
mov
xor
jecxz
stos
lahf
adc
lret
subb
add
test
and
dec
and
dec
insl
sub
insb
pop
jmp
cmp
rcrb
mov
adc
outsb
arpl
fsubr
dec
sub
roll
mov
push
or
adc
jle
flds
xor
mov
jno
jge
repz
push
push
lock
hlt
or
adc
das
cmpsb
nop
lea
ret
lds
loopne
mov
push
sub
roll
jp
cmpsl
ss
fidivrl
dec
int
push
xlat
jnp
out
sbb
mov
dec
adc
mov
sub
add
movl
lea
shll
subb
adc
add
ljmp
popa
xor
sub
inc
daa
roll
or
mov
fwait
gs
xor
mov
add
pop
clc
inc
push
pop
add
test
loopne
push
mov
push
adc
fsub
mov
insb
into
xlat
jmp
or
rcrb
dec
mov
push
ja
ret
and
addr16
jp
adc
dec
popa
xchg
movsb
into
int3
or
shll
pop
std
cld
push
outsb
jbe
test
mov
sbb
push
testb
aam
pop
js
jg
push
push
mov
int3
js
pop
pop
loope
cltd
push
or
scas
mov
mov
lods
xchg
and
push
clc
inc
xor
mov
mov
lret
push
pop
pop
mov
mov
nop
push
add
or
cmpsl
call
jp
xchg
pop
cmp
in
test
push
inc
push
lret
dec
roll
mov
arpl
cmpsl
or
fwait
data16
mov
out
test
cmp
movl
mull
fcoms
sbb
mov
cmpsl
pop
or
ljmp
rclb
stc
sub
push
mov
sub
pushf
outsb
movsl
test
in
cmp
cmp
sarl
jb
or
mov
jmp
mov
dec
les
pop
xorb
cld
adcl
jns
and
xor
lret
and
incl
inc
aas
loopne
das
or
rol
cmpl
in
inc
jp
mov
aaa
fwait
ret
aas
sub
mov
or
std
mov
xor
ljmp
fisubl
stos
ficoml
out
cli
push
push
sub
test
mov
nopl
js
adc
push
push
xor
sub
outsl
outsb
xchg
inc
or
stos
das
push
push
pmullw
jb
clc
mov
and
sub
ficoml
test
test
pop
mov
das
lds
xchg
in
pop
push
outsl
das
or
mov
xchg
out
add
xchg
and
mov
decl
mov
int3
mov
mov
push
arpl
outsb
cmp
sbb
pop
cld
xchg
jge
pop
push
jle
out
pop
jecxz
cmc
pop
xchg
jg
xor
mov
xchg
mov
jbe
xchg
push
outsb
sbb
clc
mov
imul
sub
jge
mov
add
rorb
ret
cmc
sbb
pop
hlt
mov
pop
es
xchg
stos
imul
jg
jo
pop
mov
pop
insl
pop
iret
sbb
loopne
adc
jo
sbb
stos
push
lahf
mov
or
dec
mov
push
scas
mov
mov
mov
pop
inc
lea
or
imul
out
lds
push
xlat
lods
jge
mov
popf
mov
xor
sub
pop
test
in
movsl
pushf
testl
cmp
rcl
cwtl
outsb
xor
pop
xchg
data16
xchg
adc
add
lea
jmp
daa
jb
shl
inc
loop
ds
jne
test
cmp
and
int
pushf
jmp
cmp
ret
imul
pop
push
dec
pop
loop
adc
adc
sti
jo
cmp
scas
nop
push
out
bound
test
dec
or
mov
pop
test
stos
jle
in
es
in
inc
int3
outsb
lds
test
mov
sbb
cmc
inc
and
pop
cltd
push
insb
pop
sub
aad
outsl
xor
out
aam
and
out
mov
repz
xor
jnp
aad
jecxz
fildl
adc
addr16
hlt
or
out
ret
and
lret
and
jns
arpl
imul
test
fstpt
inc
pop
jmp
or
stos
mov
mov
clc
dec
cwtl
sarb
imul
push
movsl
fistps
das
popa
mov
mov
ja
xchg
scas
mov
mov
and
or
mov
pop
xchg
pop
mov
in
ja
mov
sub
inc
rcr
pop
decl
pop
std
outsl
sahf
push
xor
add
or
arpl
sbbl
push
lahf
mov
jmp
pop
cmp
jnp
mov
and
adc
xor
aam
int3
jl
fsubrs
dec
repz
push
notb
shr
nop
mov
and
divb
lcallw
pop
cmp
sub
or
stc
test
dec
cmp
daa
rcl
mov
pop
cmp
cmp
or
jl
lods
je
xchg
push
adc
pop
in
sbb
call
jne
ja
sarb
cmc
jle
adc
pop
pop
xor
pop
adc
pop
pop
cmpsb
out
cmpsb
pop
insl
cwtl
mov
jo
add
roll
aam
jmp
call
mov
xchg
dec
mov
mov
sbb
and
test
lahf
and
xor
repnz
fistpll
jbe
jmp
add
iret
adc
xchg
sub
insb
mov
je
pop
sub
xor
xor
into
repz
aaa
push
scas
jecxz
pop
add
cmp
fcomi
js
inc
jl
into
mov
aaa
pop
jp
cmp
int
push
pusha
in
dec
xor
cmp
lret
bound
mov
ret
std
push
xor
adc
sub
xor
pop
js
or
fstps
inc
inc
shlb
stos
adc
push
xchg
rorb
add
push
or
addl
pop
fmulp
inc
mov
xchg
push
outsb
xorl
mov
cmp
cmp
aad
mov
cmp
ret
dec
or
iret
ja
jns
adc
xchg
stos
pop
jne,pt
sti
ljmp
dec
push
test
xchg
push
gs
int
fnsave
sbb
test
mov
imul
pop
in
pop
xor
mov
pop
push
jp
xchg
gs
add
push
push
and
or
xchg
loope
and
xchg
fdivrl
jb
pop
loopne
adc
dec
mov
cmpsb
addl
test
mov
rcl
adc
in
sbb
push
push
dec
mov
orl
cltd
adc
es
dec
inc
add
in
repz
and
movsb
mov
rcrb
out
jle
inc
xchg
dec
cmp
cltd
push
or
stc
movsl
xchg
lret
mov
repz
jp
jae
push
test
out
pushf
je
lods
mov
mov
jno
inc
inc
jnp
sbb
rorb
xor
mov
xor
outsb
in
cwtl
cmp
xchg
in
or
xchg
inc
stos
imul
jmp
push
test
jo
test
rcrl
add
adc
sub
mov
ja
add
sbb
and
insb
sbb
mov
std
sbb
fdiv
add
or
popf
in
mov
mov
mov
and
pop
sbb
repz
cmp
pop
jge
jns
sub
cwtl
pop
mov
push
rcrb
add
jmp
and
mov
push
mov
jnp
xor
mov
out
shll
push
jle
rcrl
rcrl
ret
adc
push
clc
push
enter
add
mov
aad
fdivl
mov
adc
sbb
adc
add
push
daa
clc
rol
xchg
sbb
inc
mov
leave
jg
test
push
out
roll
add
mov
shr
mov
popa
lret
jb
push
dec
and
push
bound
cmpsl
mov
xor
push
cmp
fadds
xchg
popf
dec
jg
adc
add
cli
daa
cli
sahf
loop
jo
xor
and
cmc
ret
mov
cmp
pop
cmp
mov
or
jmp
jge
xor
jl
lret
inc
jp
pop
inc
mov
lods
sbb
cli
mov
dec
popl
pop
sbb
add
call
loop
mov
jnp
arpl
jmp
inc
push
ds
push
push
mov
lcall
xorb
inc
and
or
ror
mov
outsl
lret
jns
adc
sti
out
pop
test
je
int3
push
sbbb
arpl
ljmp
dec
mov
and
pop
jp
fildl
sbb
jge
or
pop
or
push
fdivrs
int3
pop
and
imul
data16
fs
lea
loop
add
stos
test
inc
inc
aad
mov
mov
es
adc
sbb
aad
mulb
loop
movsb
add
jne
and
and
popa
jecxz
pop
inc
or
lods
push
xchg
nop
sub
mov
sbb
repz
fimuls
sar
sbb
add
or
leave
jmp
shlb
xor
inc
cmp
in
jo
push
sbb
sti
test
sarl
mov
stos
add
movsb
xor
clc
test
cmp
push
hlt
dec
cmpb
clc
test
bound
xor
pop
xchg
mov
xchg
xor
stc
mov
cld
stc
jb
ret
rcll
clc
lcall
mov
sbb
aas
leave
lret
repz
rcl
test
jns
and
jl
mov
lret
adcb
fs
inc
xor
xchg
mov
sbb
sub
sub
fbld
and
imul
push
aam
cmp
sub
orb
push
movl
and
or
rorb
cmpsl
inc
add
popa
in
pop
cmpsl
inc
xor
lea
out
lcall
in
inc
addr16
pop
fimull
cmp
fldenv
int3
xchg
xor
mov
ret
imul
divb
cmp
xchg
push
mov
clc
xchg
rolb
decb
mov
repz
inc
in
mov
mov
inc
ljmp
jbe
add
ret
inc
mov
xchg
jnp
cmpsl
add
or
cmp
fsubrs
xchg
pop
adc
fisubs
inc
sub
add
out
addb
cmp
loope
fsts
lea
inc
nop
dec
cltd
lret
popf
insb
hlt
test
dec
aas
jecxz,pn
mov
data16
pop
je
loop
shr
rorb
loopne
push
pop
femms
out
jmp
inc
dec
fidivl
jmp
xor
stc
sub
sbb
je
cmp
jno
ffree
in
adcb
mov
sahf
int
mov
imul
jge
dec
leave
repnz
decb
dec
imul
dec
fs
jle
insl
cmp
lods
outsb
ficomps
enter
fwait
push
sbb
fldt
rcr
ror
aam
or
std
ss
push
stos
push
xor
test
cs
mov
scas
ljmp
xor
mov
stos
insb
and
inc
and
insb
int3
inc
movsl
jmp
jmp
cwtl
mov
cmp
int3
mov
data16
cltd
sub
xchg
pusha
movb
cli
and
outsb
or
mov
test
in
xchg
ficoms
in
xchg
sbb
adc
cmc
pop
mov
out
outsb
mov
popa
xor
jne
test
mov
pop
push
xchg
je
add
bound
sub
push
jbe
stc
stos
sub
xchg
mov
xor
push
je
mov
icebp
bnd
aam
cld
sbb
add
push
jo
fcoml
inc
mov
out
cmp
mov
stc
repnz
fprem1
cmp
jne
add
pusha
popa
cld
add
and
mov
push
push
mov
fs
in
mov
mov
inc
jmp
sub
sub
push
icebp
fimuls
push
push
aaa
ds
push
jp
xchg
test
mov
lahf
test
fsub
lea
negl
inc
sub
sbb
push
mov
jmp
ljmp
jne
cmpsl
call
cmc
aas
nop
scas
cmp
aad
fcom
add
out
mov
loope
ja
lds
bound
inc
ret
ljmp
xor
lret
cmp
pop
adc
out
add
in
jne
jb
movsb
frstor
jne
push
test
lcall
adc
fcoml
cmpsl
int
in
cmp
or
data16
in
jle
test
mov
lahf
dec
outsl
mov
into
jge
cmp
in
xchg
and
ret
xorb
sbb
bound
jmp
sub
stos
fs
imul
add
dec
fdivr
push
setge
pop
cmp
mov
insl
cld
push
xorb
repnz
or
outsl
push
xchg
adc
aam
jo
adc
roll
roll
cli
shll
dec
pop
sub
dec
shll
sbb
bound
in
inc
hlt
push
outsb
das
sarb
cs
ds
or
xor
add
sbb
xor
pop
pushl
les
dec
mov
outsb
inc
clc
dec
and
jb
data16
fcoml
cmp
inc
and
inc
aas
sub
jecxz
int
das
jle
inc
pop
mov
jg
dec
popf
xchg
les
mov
mov
movsb
xchg
hlt
rcl
adc
mov
sub
xchg
jo
mov
sbb
sub
pushw
cmp
jge
dec
outsl
inc
in
pop
xchg
stc
and
aaa
jecxz
icebp
sub
inc
or
cwtl
pop
rorl
fwait
sbbl
pop
loopne
jb
mov
push
loop
xchg
je
pop
sti
insl
cmp
icebp
leave
push
cmp
fcom
pop
dec
loope
mov
nop
cmc
imul
out
les
inc
ss
stos
cmp
dec
aaa
rcll
push
inc
arpl
or
adc
pop
jge
enter
in
inc
mov
leave
mov
mov
movsb
mov
das
pop
stos
inc
adc
aad
inc
imul
or
cmp
mov
cmpl
lds
push
dec
cld
fadd
out
lock
in
mov
dec
in
or
inc
pop
adc
lahf
es
movsl
je
popf
pop
in
jmp
in
cmc
mov
add
fwait
leave
xor
lret
push
adc
gs
stc
sahf
lret
pop
pop
icebp
inc
cmc
pop
mov
xor
movsb
jge
mov
int
xchg
jb
ret
pop
ljmp
in
sub
aam
mov
push
fwait
inc
fiadds
into
pop
mov
jecxz
andb
ficompl
in
dec
mov
mov
scas
cmp
gs
and
jns
sub
dec
mov
and
lock
push
adc
mov
cmpsl
inc
jne
sbb
xor
mov
bound
jg
push
cmp
pushf
shrb
pop
and
xlat
cltd
xchg
pusha
sub
rol
cwtl
stc
ljmp
stos
in
jp
vucomiss
cmp
cwtl
faddl
push
insb
fnsave
or
scas
cmp
call
and
ret
loop
pslld
test
je
mov
test
dec
add
sub
mov
push
and
shlb
shlb
mov
popf
imul
pop
leave
in
mov
imul
dec
add
push
or
cmpsl
sbb
pop
pop
aad
sbb
pusha
lcall
fwait
inc
dec
hlt
pop
lcall
push
xor
push
into
cmpsl
aas
mov
or
xchg
sbb
xor
cld
xchg
mov
nop
insb
adc
in
hlt
scas
cltd
repz
bound
gs
jmp
mov
pop
mov
lret
movsl
and
push
adc
out
ja
mov
jb
jg
fucomip
mov
push
sub
outsb
mov
int
xchg
in
mov
push
loope
add
lods
dec
jno
dec
aam
sub
xchg
fsubp
push
inc
jge
aad
and
dec
xlat
test
jp
pop
push
rorb
fucom
xchg
gs
shll
stos
push
jae
mov
cmp
into
mov
pusha
test
and
sbb
lea
push
cltd
stos
aam
icebp
test
dec
xor
loope
xchg
les
mov
int
push
movsl
sbb
int3
adc
sub
out
loope
outsb
lods
scas
mov
gs
pop
mov
insb
push
mov
in
mov
sbb
leave
mov
std
mov
imul
std
sub
pop
fimuls
out
push
inc
mov
movsl
inc
cmpsl
leave
jg
sub
jno
add
mov
mov
and
or
add
xor
mov
cwtl
pop
add
test
sub
mov
mov
mov
sahf
mov
xor
sar
mulb
xchg
into
cmp
into
jns
dec
popa
cmp
jb
sahf
pop
pop
lock
daa
insl
inc
inc
rclb
fs
pop
push
out
push
adc
and
pusha
fs
stc
in
stc
xchg
pop
push
scas
xor
lock
arpl
cld
ret
shrl
or
mov
fsubrl
adc
cmp
in
cmp
shll
popw
pop
lcall
cmc
and
push
mov
shlb
and
imul
sub
imull
test
mov
and
xchg
or
sbb
jp
xchg
loop
adc
dec
adc
mov
xchg
xor
mov
adc
outsl
add
mov
xor
dec
mov
int3
jl
cs
xchg
adc
aas
fwait
sti
gs
cmp
popa
lock
ret
push
aam
adc
outsb
mov
enter
sub
mov
jge
cmpsb
xchg
xlat
sbb
xchg
mov
lock
repz
in
mov
imul
push
mov
jmp
cmp
in
push
ljmp
mov
xchg
fwait
push
dec
rclb
ja
cmova
int
cmpsb
mov
gs
movsb
scas
push
adc
fsubl
xchg
xchg
push
aad
adc
pop
and
mov
in
out
pop
hlt
adc
scas
sbb
mov
adc
outsl
xchg
repnz
mov
add
lahf
mov
out
mov
and
std
jp
adcl
adc
jae
pop
sbb
mov
sub
sbb
jns
push
mov
inc
insl
push
icebp
in
fmull
ja
pop
and
jns
mov
pop
xchg
and
push
adc
fistps
add
movsb
inc
pop
sahf
enter
xorb
andl
call
sbb
pop
pop
test
jmp
scas
sbb
cmovle
mov
push
mov
cmp
jne
insb
shrl
sbb
sub
sahf
sbb
mull
or
test
clc
leave
mov
fucomip
in
inc
mov
push
and
add
mov
mov
dec
xor
mov
out
fisttpl
es
push
adc
rorb
fsubl
jnp
mov
add
loope
sbb
jb
mov
jecxz
add
call
rol
dec
jnp
cmp
pop
leave
insb
adc
push
jle
ss
mov
cwtl
pusha
mov
push
cld
pop
mov
push
adc
dec
pop
aad
xor
xchg
mov
jmp
lahf
cmpsl
xchg
negl
pop
sub
add
mov
loope
imul
mov
ret
aam
adc
andb
mov
arpl
pop
push
lods
daa
pushl
mov
loope
mov
pop
xchg
cmp
xor
cmc
dec
dec
unpcklps
mov
jns
xchg
fdivrs
mov
pop
call
push
sbb
dec
sub
fisubrl
bound
dec
lds
out
sbb
test
ja
xor
mov
jne
mov
pop
pop
or
xor
jb
nop
dec
jecxz
mov
push
fdiv
cmp
sbb
pop
les
xchg
xor
loopne
add
mov
out
or
mov
mov
xor
lds
sbb
cmp
imul
add
push
pushf
insl
imul
inc
xchg
jg
mov
das
mov
or
xchg
sbb
inc
or
test
pop
dec
popa
shrl
out
shl
fldt
inc
mov
je
cmp
loop
sahf
inc
mov
mov
xchg
cli
and
adc
scas
mov
cmp
cmpsb
jae
scas
jbe
xor
pop
adcl
in
in
aaa
js
and
mov
pushf
push
inc
mov
cmc
rcrb
cmp
popa
aad
fidivl
in
xchg
pop
or
adc
mov
jecxz
xchg
loop
or
cs
push
pop
icebp
mov
xor
into
or
pop
lret
mov
in
sbb
jb
or
mov
lock
inc
jl
inc
dec
pusha
jne
daa
mull
mov
jge
xor
sbb
and
nop
imul
push
sbb
inc
adc
ds
enter
sub
and
cmpl
mov
push
mov
les
sub
and
pop
test
adc
dec
dec
mov
sarl
xchg
and
push
mov
pop
mov
leave
daa
repz
aas
mov
inc
sbb
dec
jnp
sti
stc
jnp
mov
xlat
xchg
add
popf
repnz
jnp
dec
icebp
and
push
loope
sbb
sbb
inc
std
cmp
and
xor
aaa
pop
les
cld
mov
imul
xchg
jmp
fcmovnu
push
fiadds
cmpsb
movsb
sti
push
roll
arpl
add
mov
jl
imul
filds
push
and
and
insb
fmuls
dec
movsb
cmc
in
test
or
jle
imul
inc
ss
sbb
cmp
mov
movsl
lods
rorb
test
xchg
xor
cwtl
std
jmp
cmc
idivl
xchg
mov
imul
cli
xchg
sub
cmpb
stos
adc
xor
test
outsb
pop
aaa
andb
mov
mov
cmpsl
cmp
jnp
jnp
movsl
sub
test
loope
stc
fidivl
add
pop
jb
test
mov
mov
cmp
insb
jns
cmpsb
aas
cmc
inc
and
sbb
cwtl
push
and
ljmp
dec
push
mov
push
jge
fs
push
inc
fidivrs
mov
repz
cli
push
dec
sub
add
mov
insb
ja
in
mov
je
pop
xchg
xchg
xchg
mov
jl
lahf
scas
dec
loop
cmp
lock
test
mov
push
cltd
addr16
jp
negl
ss
and
repz
push
cmp
into
pop
and
mov
sbb
hlt
mov
adc
pop
sbb
cmc
push
arpl
repz
and
data16
and
cmpsb
stos
and
andl
push
xor
dec
xchg
push
mov
xlat
lahf
loope
shll
push
mov
pop
mov
push
xor
adc
lea
shrb
daa
imul
pop
inc
push
dec
inc
fisubrs
sbb
das
lods
popa
xchg
rcl
jns
xchg
cli
jae
inc
and
xchg
fisttps
push
cmp
sub
repnz
shll
cli
mov
cld
inc
cwtl
inc
test
mov
and
jae
mov
es
or
xchg
mov
dec
lods
leave
cmpsb
mov
cmp
inc
pop
dec
or
stos
test
mov
js
mov
mov
orb
add
mov
nop
xor
cld
jg
add
dec
inc
cmpsb
roll
inc
movsl
cmpsl
push
por
andb
pushf
in
mov
mov
test
xor
lret
lahf
sbb
mov
sub
gs
cmp
dec
lea
iret
mov
outsl
sarb
cmp
push
rorb
mov
adc
xlat
sahf
xchg
push
push
popa
fs
test
out
inc
dec
push
outsb
mov
mov
mov
out
jge
rcl
daa
mov
dec
fidivrl
aam
cwtl
popf
xchg
xor
stc
aaa
stos
adc
pop
mov
out
aad
mov
jecxz
inc
cmpsb
xchg
adc
and
jno
pop
ljmp
fcoms
pushf
mov
mov
sarb
ret
sub
aas
xchg
fsts
cmp
dec
sub
pop
jl
data16
leave
sarl
lret
xor
dec
ret
jbe
pop
js
imul
stos
in
xchg
pusha
lcall
andb
sti
arpl
test
std
mov
daa
ret
scas
dec
xchg
sbb
xchg
in
ss
jp
lock
test
das
call
loop
push
xor
sti
fcmovu
aaa
iret
mov
adc
push
dec
pushf
jle
cld
aam
outsl
mov
mov
jo
sahf
pop
push
sub
push
je
aam
aas
sbb
mov
adc
sbb
inc
push
in
stc
sub
stos
hlt
cmpsl
pop
scas
fnstcw
mov
mov
cmc
arpl
mov
adc
in
push
jbe
rcrl
mov
scas
aad
cmp
enter
ss
inc
std
pop
mov
lret
xchg
pushf
mov
in
mov
cmp
jo
cld
lods
mov
sbb
insb
arpl
roll
pop
loopne
pop
js
jge
push
pop
arpl
pop
and
shl
addr16
imul
dec
insl
pushf
int3
cmp
or
sbb
ljmp
pop
or
mov
fbld
inc
imul
adc
sbb
cli
gs
mov
inc
fnsave
bound
add
jbe
jae
je
repnz
pusha
jnp
push
leave
pop
pusha
inc
mov
sbb
xchg
jnp
leave
rorb
int
js
inc
push
mov
xchg
jno
fbld
xor
int3
mov
xchg
xchg
aad
dec
les
bnd
pop
push
and
in
or
mov
mov
vunpckhps
xchg
xorb
sbb
divl
or
out
movzbl
repz
lret
sub
rcrb
pushf
arpl
push
loop
mov
data16
in
cmp
xor
iret
adc
stc
dec
stc
lcall
push
xchg
orb
jno
mov
fldl
cmp
sub
mov
pop
jne
nop
pusha
pop
movsl
push
insl
std
adc
in
cli
add
xchg
in
mov
fisttpll
push
into
cmp
pop
lea
mov
inc
loope
pop
shll
jns
shll
sbb
adc
push
cmpsb
inc
add
in
int
fnstcw
cmp
adc
setne
mov
sbb
xor
into
push
loopne,pn
xchg
daa
cmp
arpl
and
lea
sub
out
and
xchg
mov
into
dec
pop
loope
adc
in
dec
inc
push
fiaddl
cmp
mov
ljmp
jb
lea
ds
test
sbb
scas
ljmp
push
stc
sub
je
and
frstor
sbb
pop
add
add
sub
dec
jmp
push
sbb
insb
lds
fsubrs
lock
ja
pop
dec
aam
sahf
std
ss
das
cmpsb
mov
enter
mov
pop
push
icebp
jecxz
push
jmp
call
fs
jo
xchg
test
lret
pop
stos
enter
jbe
pop
and
push
mov
hlt
sti
adc
jge
ss
ljmp
lret
or
cs
or
xor
add
imul
mov
jb
fnstcw
inc
pop
jnp
sahf
addr16
xchg
inc
les
sbb
jmp
sub
adc
aam
push
lahf
cmp
repz
sti
cmpsl
pop
push
xchg
and
clc
inc
ja
pushf
sahf
push
mov
inc
dec
jb
roll
lea
mov
sub
xchg
pop
add
mov
outsb
lahf
cld
incb
or
cmp
mov
jns
fcmovne
jae
jne
sub
int
rolb
add
lcall
push
push
sbb
cmpsl
movsb
cwtl
mov
sahf
les
mov
mov
pop
mov
xor
shlb
jle
xchg
insl
xchg
push
fisttps
and
mov
scas
jmp
or
leave
int
aam
movsb
ljmp
add
mov
sbb
lock
push
push
das
lods
sub
sbb
orb
repz
cld
and
iret
cmp
mov
push
cltd
ret
sti
add
jp
fldcw
dec
cmp
xchg
adc
mov
cmp
cmp
mov
ja
pop
pusha
shrb
mov
pushl
xchg
push
add
and
push
push
jmp
jmp
movsb
std
jp
sub
dec
icebp
aam
push
push
push
addb
dec
popa
cmpsb
adc
outsb
lret
movsb
lods
sbb
jg
movsl
xor
jge
cli
lahf
and
data16
push
jmp
iret
mov
dec
pushf
ljmp
xchg
je
fimull
cmc
mov
outsb
push
stc
jge
add
sub
push
and
xchg
inc
mov
jle
cmpsl
ret
or
into
sub
pop
sbb
mov
or
clc
repnz
xchg
orl
ret
dec
add
scas
adc
stos
rcrl
es
xchg
lods
outsb
sarl
aam
sbb
daa
pop
mov
sbb
lcall
sub
xor
and
sbb
push
push
cltd
xchg
fcomip
push
dec
pop
aam
mov
mov
popa
adc
sbb
icebp
aam
loope
in
popf
ja
inc
inc
and
enter
mov
out
xchg
das
cli
pushf
sbbl
cmp
push
mov
js
adc
jle
push
test
sub
lods
sahf
adc
les
div
inc
roll
xchg
pop
inc
bound
or
xchg
lods
pop
cmpsb
mov
je
push
pusha
jmp
jp
jne
clc
stos
cmpsb
cmp
and
stos
or
lea
mov
cmpsb
out
test
sub
and
push
jne
sbb
shll
mov
xchg
es
movsl
insb
mov
nop
out
mov
inc
cwtl
fwait
xchg
sub
dec
imul
test
mov
ficompl
and
js
fistpll
xor
aam
sbb
imul
mov
mov
lds
movsb
dec
xor
cmp
dec
and
out
jne
aaa
push
lods
or
loope
adc
pop
dec
sbb
sbb
cmp
inc
dec
and
xorl
rorl
jge
xchg
ljmp
movsb
test
xor
ja
stos
push
test
cs
ja
sub
into
sub
jmp
pop
cmp
lcall
pop
fwait
stc
shl
dec
xchg
fstpl
lcall
dec
clc
loope
in
lea
mov
sahf
icebp
inc
lds
fmull
cmp
imul
ds
pop
dec
in
pop
adc
jnp
stos
adc
push
mov
sub
push
xchg
xchg
cmp
outsb
out
test
inc
jbe
mov
and
inc
pop
int
pop
insl
stos
pop
push
je
les
mov
pop
scas
inc
sti
in
call
lcall
enter
xor
iret
push
push
push
fidivs
ud0
dec
mov
ss
push
sub
push
lea
movsb
rcrl
and
mov
mov
cs
cmp
jo
xor
out
cmp
pop
ret
and
mov
or
cmp
cli
test
push
aad
inc
sbb
mov
sub
cmp
inc
cli
leave
adc
icebp
or
xor
push
fmuls
out
add
movsl
lret
test
inc
jmp
dec
cli
add
mov
data16
aam
push
cmpsb
and
jns
in
lret
add
jge
cmpsb
in
rorb
call
dec
pop
mov
dec
mov
add
or
std
mov
pop
xchg
lds
or
in
out
or
fsub
shlb
clc
pop
mov
xchg
gs
push
xchg
es
mov
daa
shrb
mov
mov
pop
sub
outsb
jl
add
xor
push
fs
cs
jp
shll
pop
xchg
dec
mov
cmp
mov
sub
std
xchg
mov
add
jle
and
cmpsl
adcl
scas
sub
orl
in
pop
out
push
push
mov
ja
ret
bswap
mov
daa
mov
jnp
dec
xchg
mov
cmp
jbe
ficompl
into
sbb
into
jmp
out
sti
lret
mov
dec
bound
push
jb
pop
daa
adc
jae
sub
dec
mov
out
push
int
cmp
test
dec
pop
iret
imul
inc
mov
inc
mov
mov
or
lcall
seta
jp
mov
pop
mov
mov
mov
inc
mov
cmp
ret
sti
pop
bound
clc
in
icebp
fisttpl
pusha
ret
iret
arpl
lahf
adc
sub
test
mov
fisubl
mov
mov
les
add
iret
sahf
mov
test
test
or
xchg
xchg
add
mov
sbb
insb
std
dec
push
popa
cs
addr16
ljmp
call
roll
es
add
popa
sub
cltd
cmp
pop
pop
jmp
pop
jl
cltd
xor
xor
dec
pop
dec
outsl
aam
fwait
adc
sbb
outsb
mov
lahf
mov
stc
mov
pop
jo
inc
add
fnstcw
inc
xor
sbb
es
push
enter
mov
sbb
in
adc
hlt
sbb
aam
mov
fdivrs
lock
js
mov
bound
cwtl
in
cmc
je
add
mov
pop
pop
lcall
aam
jle
sti
and
mov
stos
faddl
popf
push
mul
jb
xor
cmpsl
push
xchg
loopne
jge
ud1
mov
test
inc
cmp
adc
ret
fs
test
xchg
adc
and
jo
dec
jo
iret
and
xor
dec
jmp
pop
arpl
adc
out
gs
and
jge
xchg
mov
cmpsb
or
and
loop
mov
and
out
and
shrb
xor
in
cwtl
fwait
lcall
lcall
outsl
mov
fisubrl
mov
or
mov
jb
xlat
fldl
xor
stc
pop
call
xchg
mov
or
add
inc
or
xchg
push
into
lret
testl
jnp
pop
pop
mov
fildl
int3
int
aam
and
mov
pop
mov
rorl
fsts
mov
xchg
arpl
and
or
mov
stos
xchg
pushl
clc
stos
mov
scas
icebp
jnp
scas
cltd
pusha
nop
cli
ljmp
insb
das
into
jb
xor
or
paddd
pusha
out
push
out
ljmp
sub
test
and
fsubl
shlb
xor
test
sbb
pop
bnd
inc
ja
cs
out
cmp
jmp
sbb
inc
mov
cmp
mov
dec
cmpsl
lret
out
push
scas
aad
jl
data16
into
mov
pop
push
cmp
incb
pop
shrb
sbb
clc
dec
inc
sub
std
movsl
and
or
or
jbe
test
or
test
je
fcoml
repnz
jo
sbb
adc
lock
mov
idivl
cmp
subb
fptan
sub
or
pop
div
arpl
inc
adc
jbe
dec
hlt
push
dec
adc
ret
lds
daa
cld
inc
push
test
mov
pop
push
xlat
nop
xchg
mov
or
orb
shrl
ret
xchg
out
mov
jno
popf
lods
aad
loop
mov
outsl
popa
pop
xchg
mov
inc
dec
push
in
faddl
insb
das
es
xchg
aam
dec
cs
in
sar
jge
mov
movsb
rcrb
outsl
or
outsb
stc
hlt
popa
inc
mov
into
push
aas
xor
mov
notb
rcl
xchg
push
sahf
inc
or
pusha
arpl
inc
mov
push
outsl
daa
mov
and
cmp
mov
inc
mov
push
sbb
dec
jb
or
in
mov
adc
jnp
xchg
add
dec
negl
mov
xor
pop
fisttpl
sub
out
inc
stos
fwait
adc
incb
in
ret
jb
xchg
xchg
loopne
mov
dec
mov
push
lret
jnp
dec
mov
mov
cmp
pop
pop
dec
pushf
adc
call
inc
insb
inc
fidivs
ror
insb
xor
stos
imul
out
jmp
push
insl
add
inc
decb
inc
popa
mov
movsb
mov
adc
lods
movsb
mov
lods
std
cld
stos
xchg
xchg
mov
enter
dec
loop
mov
pop
pop
shrl
adc
sub
insb
xchg
test
inc
or
lcall
ja
lds
sbb
out
mov
add
jo
mov
dec
rol
mov
xor
mov
cmc
add
cmp
cmp
imulb
mov
or
and
jns
xchg
cltd
push
std
jns
pop
mov
jecxz
cmp
int3
pop
xor
xor
leave
jge
lods
scas
xchg
movsl
sub
dec
mov
cmp
and
cmp
jl
leave
mov
ljmp
xor
imul
push
push
add
push
xor
xchg
adc
jae
cmp
dec
pop
out
mov
pop
xor
xor
or
xchg
fwait
jno
sbb
dec
fstps
pop
test
pop
jmp
fisttpll
repnz
sbb
xchg
sbb
jmp
movsb
push
test
shrb
ja
scas
or
xchg
fadd
dec
xchg
test
addr16
repz
js
loopne
out
popa
xor
jle
mov
in
jmp
xchg
cld
ret
pusha
jp
das
inc
add
in
xor
jbe
stos
sub
leave
jge
dec
sub
mov
cmp
ja
addl
jns
dec
cmpsb
lods
xor
das
or
je
lock
add
bound
test
mov
aam
out
push
in
mov
sbb
dec
mov
lock
rcll
xor
test
xchg
fwait
mov
push
adcb
hlt
push
xorb
sbb
xchg
shr
bound
jp
mov
xchg
int3
cmc
add
scas
cltd
push
jmp
out
fldenv
mov
lret
xor
sbb
movsb
jl
ret
push
push
std
mov
mov
mov
adc
pop
arpl
repnz
fcoms
into
in
add
outsl
dec
cltd
dec
cmc
pop
data16
out
jns
xor
xchg
add
xor
dec
aas
push
xor
in
into
xchg
aam
push
mov
lcall
testl
in
cmp
xchg
dec
cwtl
and
sbb
ret
fs
scas
out
add
jbe
cmpsb
shll
cmp
lret
sbb
je
mov
xchg
decb
sbb
pop
pop
repnz
add
clc
push
aam
push
pop
and
cmp
fimull
cmpsb
mov
test
leave
testb
mov
dec
fisubrl
cmp
aaa
mov
inc
and
fistpl
xor
insb
add
and
imul
insb
fwait
pop
mov
push
push
in
mov
sbb
shr
cmp
rorl
roll
sbb
into
mov
xchg
push
dec
cs
xor
mov
pop
add
adc
pop
cwtl
pop
stos
inc
ljmp
imul
jle
xor
into
movsl
adc
sarl
test
in
jg
xor
insb
nop
xor
push
ja
mov
addr16
cs
sti
and
data16
jbe
bnd
imul
aaa
sub
adc
push
push
fcomps
cmp
pusha
sbb
cmc
ja
outsb
mov
pop
cvtdq2ps
pop
sub
in
lret
das
mov
mov
aaa
pop
jnp
popf
or
fisttpl
xrelease
mov
fwait
int
add
aas
movsb
scas
xchg
pop
cmp
loopne
and
in
mov
movsb
jnp
dec
pop
cmp
ret
loop
leave
not
adc
push
or
loopne
fwait
inc
jns
sbb
cmpb
mov
mov
xor
pop
rorb
push
popf
add
clc
jg
cmpsl
dec
loope
insl
lods
shr
cwtl
and
fldenv
dec
insb
mov
lds
popl
fisttps
push
mov
outsl
in
cli
pop
aaa
cli
push
outsb
loope
pop
mov
icebp
sub
dec
fnstenv
add
add
lods
xchg
aam
mov
jmp
jg
inc
mov
dec
aaa
or
leave
add
mov
cli
push
cmpsl
data16
movsb
cld
int3
and
repnz
int3
mov
jae
mov
hlt
sti
add
mov
lds
pop
lahf
out
or
add
sub
inc
or
rcl
or
stos
sub
push
push
cmp
jge
or
sbb
cltd
sbbl
jb
mov
inc
repnz
in
lcall
jge
testb
rclb
shll
popf
mov
ret
mov
xchg
xchg
cmc
mov
mov
rol
adc
popf
repz
push
scas
mov
cwtl
gs
mov
mov
cmp
jb
sub
dec
rorb
xor
adc
mov
scas
imul
xchg
mov
loop
dec
popa
pop
jns
es
mov
xor
cmp
mov
push
mov
xor
push
mov
sub
and
push
jmp
xor
loop
inc
xchg
ds
addr16
and
push
adc
es
mov
pop
aaa
sub
inc
push
xchg
add
jge
test
or
dec
ret
xchg
mov
push
or
mov
cmp
fxch
fadds
mov
imul
pop
shr
add
mov
repnz
scas
aad
ja
xchg
pop
popl
xor
push
jg
lods
fldl
cld
push
aaa
cmpsl
and
inc
fcoml
std
lret
mov
or
dec
test
pop
xchg
repz
dec
inc
and
mov
fsubs
push
icebp
fcmovbe
jp
adc
cmpsl
jmp
in
mov
insl
jecxz
rcr
dec
and
les
mov
dec
jmp
xchg
dec
or
or
cld
std
iret
ficoms
xchg
add
jbe
pop
xchg
cld
mov
jbe
inc
faddp
jmp
mov
push
mov
push
pop
inc
jno
adc
js
adc
rcl
cmp
add
andl
mov
mov
xchg
in
popf
and
addr16
mov
clc
adc
out
sbb
in
and
orl
shrb
imul
aam
mov
clc
inc
xor
les
pop
sub
punpckhbw
pop
dec
out
outsl
jo
or
push
ss
jno
xor
out
xchg
sahf
popa
into
xchg
rcr
adc
mov
lods
shrl
mov
aad
shl
pop
test
ss
push
test
enter
and
scas
add
push
aad
decl
fiadds
and
mov
push
adc
cmp
dec
jp
sub
cmp
pop
in
ficompl
rcll
gs
lods
push
adc
mov
decb
stc
ss
js
in
xchg
cmpsl
xchg
addr16
inc
push
cli
cmp
cld
ret
cmpsl
aas
mov
inc
hlt
mov
or
inc
aaa
jo
xorb
xchg
xchg
xor
sahf
lods
sub
sahf
aaa
jnp
icebp
adc
jge
pop
dec
jle
pop
xor
push
sub
dec
cmp
js
mov
lret
addb
fdivrl
dec
addr16
lds
lds
movsb
shll
mov
idivb
enter
addl
adc
ficomps
out
shll
cmpsb
sbb
cwtl
pop
popa
or
mov
dec
popa
pop
hlt
icebp
sub
or
jo
mov
aad
in
and
out
hlt
js
push
push
ret
jbe
das
fisttpll
sbb
add
out
cmp
mov
imul
les
dec
inc
or
shrl
push
je
jns
js
push
mov
loop
cmp
mov
push
adc
jl
mov
add
push
inc
dec
mov
mov
dec
lods
sbb
dec
xchg
dec
inc
sti
adc
mov
mov
xor
bound
inc
in
out
rcrl
xor
jnp
cltd
lret
inc
popf
fcoms
bnd
shr
in
dec
loop
pop
push
das
mov
pop
jne
mov
loopne
test
mov
and
mov
inc
jb
cld
in
test
pop
add
cmpsb
outsl
xchg
lods
fsubrl
inc
pop
nop
jp
les
int
repz
rcl
push
ljmp
dec
inc
mov
pusha
insb
sub
dec
pop
lock
clc
ds
pop
or
push
xchg
addl
je
jnp
add
xchg
mov
cmc
and
xchg
jmp
cmpsl
push
cmpsl
rol
sahf
out
mov
add
jle
sub
adc
sub
mov
popa
jmp
pop
adc
out
mov
pop
test
cwtl
into
adc
sbb
mov
and
fsubrp
mov
cmc
and
dec
push
adc
lret
pop
hlt
jns
pushf
fwait
rclb
ret
into
xchg
dec
xor
stos
jns
mov
enter
mov
push
rcr
pop
xchg
out
adc
jno
mov
fidivl
loop
jmp
mov
mov
ja
leave
scas
pop
mov
mov
cmp
in
fmull
mov
out
orl
out
jecxz
sahf
or
dec
xor
jecxz
mov
pusha
stos
mov
or
or
je
or
fs
jge
sbb
ficompl
xchg
fnstenv
mov
add
cmc
mov
inc
cmpsb
aaa
shrl
ds
ficoms
mov
jne
jo
das
pop
jp
or
loopne
push
cmp
xor
into
test
adcb
mov
repz
and
sub
cmp
xchg
add
jne
jmp
call
cmpsb
repz
stc
sub
fbstp
ljmp
push
out
into
sbb
xchg
jae
push
pop
fs
stos
cltd
cmpsl
in
lds
test
pop
stc
push
data16
sarl
push
xor
inc
or
enter
mov
inc
ret
pop
inc
imul
mov
leave
and
into
mov
les
in
es
mov
sub
sahf
jo,pt
notl
and
sub
std
sub
sti
scas
fdivr
loop
pop
jo
das
insb
test
popf
add
push
popf
cwtl
jecxz
add
aas
and
and
lret
popf
cmp
aas
mov
loop
out
test
add
inc
add
ljmp
sbbl
mov
push
mov
jmp
rcrb
hlt
jl
mov
movsb
xchg
gs
mov
push
mov
pop
push
dec
jb
fistl
decl
inc
sbb
fisubrs
lcall
mov
jae
jl
xlat
test
mov
dec
aam
dec
lods
aas
ficompl
cltd
stos
gs
inc
cmpsl
aaa
mov
pushl
out
nop
push
and
ret
mov
movsl
dec
xor
pop
mov
sahf
repnz
stos
jg
dec
mov
sbb
cmc
iret
push
stos
dec
sub
psadbw
push
fs
iret
inc
adc
dec
pop
xchg
lock
int
imul
cld
pop
push
mov
mov
mov
and
pop
inc
loop
mov
and
dec
mov
das
xor
jae
repz
xor
imul
sub
add
in
roll
inc
int
sbb
dec
shrd
xchg
push
mov
popa
inc
mov
cld
xor
inc
jae
popa
fdivrl
push
cli
mov
aas
mov
and
test
sarb
movsb
imul
xchg
and
movsb
pop
clc
or
rdmsr
stc
push
add
popf
ret
cwtl
fs
add
shrb
push
cmp
dec
inc
test
testb
fimuls
fsub
addr16
pushf
or
sti
push
pop
push
popa
push
push
fisttpl
push
xchg
push
aam
and
pop
mov
divb
inc
mov
adc
popa
shl
in
xchg
inc
in
jmp
xchg
jge
movsl
jp
inc
jns
push
jecxz
add
int
subl
ror
add
jge
lret
scas
andb
mov
das
or
pop
subb
jnp
sbb
xchg
pushf
ret
xchg
pop
cmp
pop
data16
mov
fmuls
cmpsb
xchg
xlat
std
xor
push
pop
mov
add
mov
call
ret
or
out
stos
xor
mov
and
pop
hlt
nop
adc
jnp
cltd
cmp
sarb
jg
cmc
push
in
inc
sub
fwait
push
mov
fistps
push
enter
jecxz
pop
push
mov
mul
push
jmp
push
dec
out
cmp
andb
add
cmp
data16
scas
add
loop
adc
test
loope
sub
loop,pn
xor
sahf
pop
fstps
xor
test
adc
inc
data16
pop
jb
mov
pop
out
stos
jo
jge
cmpsl
mov
lahf
sub
push
xor
jne
xor
cmc
cli
add
pop
stc
and
or
pop
push
jecxz
out
fisttps
adc
sub
sti
mov
add
out
cs
jmp
cmp
pop
sbb
hlt
arpl
add
daa
shrl
in
repnz
fdivrl
pop
jge
mov
fisubrs
enter
sbbl
jg
sbb
cmpb
add
das
adc
mov
test
jp
mov
or
mov
loop
insl
hlt
repnz
dec
cmp
jb
sub
or
or
test
jo
iret
pushf
fstps
mov
mov
scas
add
jmp
pop
add
jl
jae
out
pushf
not
or
scas
ss
and
xchg
mov
adc
cmp
mov
push
jp
call
iret
pop
stos
push
lahf
cmp
mov
fsts
hlt
in
or
add
add
lahf
push
lods
push
pusha
iret
repnz
cmp
inc
scas
sbb
lds
cmpsl
push
jmp
out
inc
jb
and
roll
sub
addl
inc
test
sub
lock
bound
dec
sub
test
xchg
pop
ja
int
sub
mov
sub
inc
dec
sub
and
enter
mov
mov
mov
fisubs
cmp
test
xor
inc
nop
xor
sbb
mov
sbb
xor
xchg
fimull
out
pop
imul
cmp
jge
arpl
mov
shlb
mov
mov
xor
dec
sub
ret
xchg
std
dec
or
add
and
and
jg
stos
roll
pop
jl
pusha
jnp
jb
adc
pushf
dec
jne
mov
push
and
add
dec
mov
pop
outsl
sub
inc
or
out
rol
imulb
pop
xchg
or
push
push
aad
xlat
xor
push
and
mov
je
sahf
imul
lods
and
mov
adc
imul
inc
sbb
cld
add
out
jl
xor
or
bound
call
loop
jge
mov
sbb
add
cmp
mov
call
daa
inc
mov
aam
popa
cld
daa
cmp
sub
sub
add
pop
jb
movsl
dec
in
mov
mov
data16
arpl
dec
push
movsl
js
outsb
ror
pop
inc
fwait
bound
add
hlt
les
xchg
cs
dec
sahf
out
out
pushf
lret
in
xor
cmp
xor
cwtl
sbb
mov
push
lds
icebp
nop
and
pop
aam
jno
aaa
add
and
adc
roll
test
out
out
lahf
push
inc
pop
cmpsb
jg
les
xor
andb
imul
inc
adc
push
mov
clc
push
xchg
sbb
sub
lcall
jge
xlat
pushf
xor
xchg
ja
pushf
jecxz
fs
icebp
sbb
stos
jb
popl
add
push
cmc
out
stos
jnp
adc
push
movsb
jmp
or
fcom
cwtl
test
sti
fs
jnp
adc
jmp
add
sbb
cmp
sbb
xor
mov
xchg
jb
xchg
dec
mov
push
cmp
int3
push
dec
mov
xchg
cmp
out
faddp
mov
cmp
jmp
and
sub
xorl
sbb
and
cmp
out
add
in
xor
and
stc
jp
push
mov
add
loop
push
aad
sub
leave
rolb
scas
jb
pushl
cmpsb
stc
pop
lcall
add
stos
sti
and
mov
ss
mov
jg
popf
or
into
adc
sahf
outsl
cmpsb
lods
pop
add
push
fstpt
arpl
pusha
adc
mov
jbe
cmpb
pop
stc
inc
shl
cmp
sbb
xor
test
dec
out
pop
dec
fs
pop
or
ljmp
sbb
adc
gs
adc
sti
inc
test
icebp
bound
movsb
loop
add
loopne
mov
xor
push
orl
add
mov
inc
cli
ljmp
stos
push
lea
int3
cmp
stos
jbe
subl
jle
add
jle
lods
xchg
lods
jp
mov
into
inc
pop
mov
xchg
and
lcall
xchg
push
or
xchg
popf
and
repnz
sbb
mov
cmpsb
mov
fidivrl
jns
mov
pop
dec
mov
mov
mov
cmpsb
push
lret
aam
mov
out
ljmp
jo
fistpll
icebp
hlt
sub
mov
in
bound
add
mov
sarl
dec
xorl
mov
xlat
mov
std
jae
inc
add
xchg
and
lods
int3
jmp
lds
jp
das
mov
add
xchg
dec
aad
mov
mov
sbb
sub
push
or
dec
or
jle
orl
adc
cli
or
xor
test
aad
aas
or
xlat
xchg
mov
or
jle
jne
inc
clc
dec
push
adcb
mov
lds
lret
sbb
stos
cld
cmp
xor
inc
sub
icebp
icebp
cld
aas
sub
sub
cmp
loopne
mov
push
das
sbb
shll
cmp
sub
and
push
stos
dec
mov
mov
sbb
into
jo
mov
xchg
sarl
aam
lods
xor
inc
aad
mov
rolb
loop
and
stos
inc
xchg
or
scas
xor
loope
daa
jne
mov
ss
jnp
jns
adc
pushf
imul
adc
addr16
xchg
mov
fwait
mov
lds
mov
ds
fdivr
rorb
stos
insb
mov
pop
test
adc
xchg
or
sub
divb
cmp
sahf
cmp
ds
lcall
mov
scas
sbb
adc
push
test
filds
sub
xchg
push
push
les
mov
test
xor
push
sti
dec
jmp
fldt
ljmp
stos
scas
mov
cmp
and
xchg
pushf
or
sbb
lods
inc
fstpl
xchg
call
dec
sub
sbb
insl
mov
pop
mov
and
out
in
add
ja
lods
imul
jae
mov
mov
ret
mov
inc
jae
push
test
lret
call
xchg
mov
cmpl
cmp
mov
pushf
les
and
xchg
jecxz
into
cli
push
shlb
sub
int3
pop
cmp
int
rorb
jl
adc
jg
dec
push
cmp
hlt
cmpsb
lods
sti
ljmp
xchg
std
int3
stos
es
hlt
push
test
mov
fstpt
ljmp
aaa
cmp
push
pop
outsl
dec
rcrl
hlt
inc
outsb
adc
cmpsb
lods
or
mov
ret
add
bound
arpl
out
lret
fldt
lret
pop
lret
aaa
adc
inc
fistpll
enter
fwait
insb
xor
fs
sti
bound
pop
add
and
dec
lret
dec
sbb
inc
movsb
lret
scas
divl
push
es
jne
push
dec
mov
scas
outsl
mov
sti
push
mov
lret
lods
addb
outsb
aas
insb
dec
dec
stc
mov
lods
lret
repnz
cmpsl
mov
and
fimull
mov
xchg
inc
or
int3
ljmp
adc
dec
xchg
iret
mov
cmp
pusha
test
add
sarl
out
pop
popf
movsl
adc
fidivl
mov
int3
ljmp
jns
lds
ja
and
lahf
and
add
cmp
xchg
hlt
sub
stos
mov
inc
dec
cmpsb
mov
cmp
sub
fnstcw
sbb
fwait
mov
repnz
xor
fidivs
cmp
shll
loop
cmpsl
fistpl
xorb
je
enter
mov
js
or
outsb
inc
lret
dec
cmp
popf
xor
mov
and
pop
push
sub
dec
iret
or
jge
cmpsb
shlb
aas
jge
xlat
xchg
add
cmp
enter
xor
mull
mov
stos
inc
pusha
jbe
mov
adc
mov
fmull
jl
jno
scas
cmpsb
mov
cmpsb
sbb
inc
call
adc
in
xchg
ss
adc
test
cmp
or
mov
mov
les
testb
hlt
mov
push
loope
mov
jbe
or
cltd
push
imul
sub
cmp
cltd
xor
filds
enter
daa
pop
jo
jmp
je
adc
outsb
mov
cmpb
lds
mov
shl
add
dec
xlat
sub
test
push
dec
enter
ljmp
xchg
push
add
in
jmp
cs
mov
imul
pop
cmp
dec
xchg
rolb
xchg
loopne
pop
xchg
jno
ja
add
lahf
adc
pop
or
mov
out
stos
outsl
push
adc
leave
mov
int
in
add
xor
loope,pn
push
or
mov
push
dec
movsb
jns
sub
mov
xchg
pop
dec
sar
push
pop
xor
cwtl
xor
xchg
je
mov
or
mov
inc
and
push
mov
ljmp
pop
mov
cmp
inc
rep
mov
mov
sub
mov
add
mov
fwait
xchg
aaa
ret
jae
sti
and
vpxor
pop
rclb
adc
fbld
mov
lds
sbb
imul
or
push
push
movsl
daa
movsl
pop
ljmp
gs
cmpsl
mov
clc
mov
mov
pop
inc
pop
mov
push
sbb
cmp
add
add
das
fsubrs
data16
mov
sub
jns
rol
dec
cmp
mov
lods
popf
loopne
jl
jmp
sbb
dec
jle
sbb
lret
aad
and
js
es
in
shrb
and
mov
adc
sub
ds
mov
adc
out
mov
call
fdivrs
loopne
jnp
jmp
fs
jmp
enter
jb
fidivrs
inc
push
push
adc
enter
pcmpgtb
mov
out
fcomp
data16
imull
shr
stos
mov
test
lcall
mov
ret
imul
aaa
orb
xorl
push
add
dec
cmp
pusha
cmpb
lahf
negb
push
clc
out
icebp
sbb
mov
cltd
push
cmp
xchg
divb
xchg
inc
pop
mov
mov
or
pop
bnd
or
adc
pop
pushf
into
sti
inc
pop
push
and
cmp
jmp
jo
push
outsl
jle
dec
dec
popf
shl
int
mov
lahf
push
pop
and
mov
mov
and
push
rol
arpl
pushf
xlat
add
xchg
outsb
xor
push
insl
out
jl
xchg
inc
call
sub
shlb
sbbb
sub
mov
mov
out
loop
xor
in
jbe
in
xchg
orl
mov
jbe
sbb
std
fcomps
mov
je
rol
lret
push
cmc
push
mov
in
xchg
adc
dec
lea
xchg
xchg
in
hlt
xchg
ss
les
scas
das
ret
push
decb
imul
xchg
sub
mov
cld
addr16
adc
dec
fisubrs
enter
push
mov
inc
jp
outsl
fsubr
adc
loop
and
push
sbb
test
movsb
add
outsb
fisttps
mov
sub
fs
or
pop
inc
aas
rclb
mov
xchg
js
mov
loop
xor
shlb
daa
mov
mov
jbe
pusha
out
movsb
jmp
daa
xor
mov
jno
iret
mov
mov
xchg
jge
cmp
inc
mov
mov
aam
call
cmp
add
xor
cmc
mov
inc
ja
pop
cmpsl
daa
lods
scas
leave
clc
pop
xor
insl
adc
cld
shl
mov
push
inc
push
mov
cmp
icebp
sub
hlt
leave
sub
hlt
jle
in
xor
lea
adc
pop
mov
sbb
mov
sar
xlat
sub
add
dec
daa
mov
in
lock
jl
dec
in
xchg
arpl
adc
jne
sti
jp
jb
int3
or
in
jge
push
mov
jmp
jmp
mov
jb
add
subl
xlat
shl
sub
out
rcrb
in
sub
int3
sub
jae
cli
rcr
dec
test
jns
jo
jae
insl
es
push
mov
mov
mov
dec
mov
or
fistl
out
loop
mov
repnz
xchg
pop
leave
divb
xor
ljmp
dec
orb
stos
jge
xor
xchg
mov
and
outsb
mov
mov
mov
pusha
xchg
xor
xchg
in
aam
mov
mov
jae
addb
pop
pop
inc
mov
aas
int3
dec
add
mov
popa
das
popl
fwait
or
iret
jp
les
add
xor
movsb
loope
jns
arpl
out
movsb
or
sub
or
jmp
dec
mov
bound
jb,pn
das
push
dec
shll
push
sub
xchg
cltd
cmpsl
std
lret
mov
dec
jb
clc
mov
mull
push
inc
fcompl
ret
scas
xor
mov
xor
and
mov
jae
mov
dec
add
pop
daa
movsl
and
idivl
push
shrb
addr16
xchg
add
cmp
push
call
push
in
aaa
or
cltd
xchg
stos
sbb
aas
insl
add
sub
icebp
lea
aam
in
mov
sarl
loopne
xor
dec
imul
pushf
aaa
inc
inc
pushl
loop
mov
dec
test
lahf
sti
or
add
call
and
cmpsb
ficoml
or
sub
push
sahf
or
lcall
push
mov
push
scas
inc
pusha
jno
divl
and
mov
add
add
push
imul
pop
add
scas
inc
push
mov
xchg
ret
stos
cli
xchg
shll
or
jecxz
call
inc
dec
lahf
cs
jle
xchg
push
jle
pop
arpl
orl
test
mov
fwait
xchg
xchg
add
mov
daa
shl
mov
sbb
je
rol
faddp
fnsave
mov
push
mov
xchg
push
inc
loope
cltd
push
out
mov
movsb
hlt
insl
rcll
mov
pop
in
dec
dec
pop
and
out
loope
mov
pop
mov
push
sbb
out
out
inc
int3
add
mov
xor
stos
sub
scas
test
dec
add
dec
lcall
pop
pop
fnstcw
xchg
dec
add
and
sahf
data16
cmp
loop
insl
out
movsb
pop
cltd
out
mov
aad
inc
push
test
xor
push
daa
xchg
aas
mov
cmp
push
fsubrs
sbbb
xchg
jp
jns
outsb
xchg
popa
jmp
out
mov
insl
testl
adc
cwtl
mov
inc
push
push
lret
jbe
testw
fcmovne
add
pop
xor
adc
lds
pop
xorb
in
pop
xchg
cmp
mov
jne
out
loopne
fadds
enter
add
ret
or
or
incl
mov
dec
push
push
ja
fcmovbe
xchg
pushf
mov
dec
aas
jo
sub
pushf
mov
in
lcall
adc
cs
pop
ret
js
scas
dec
je
jno
xlat
jge
pop
push
fwait
fldt
in
ja
sbb
in
or
xlat
jnp
and
add
xchg
xor
mov
add
lret
xor
leave
clc
jmp
adc
cmc
pop
mov
outsb
jns
fucom
movsl
rorb
das
pop
cmp
adc
je
push
test
xor
and
movzbl
lods
sbb
je
mov
adc
sbb
jo
sbb
dec
aam
mov
mov
cmc
addb
push
mov
mov
pop
lret
dec
popa
stc
mov
es
mov
stos
pushf
sbb
icebp
jmp
cld
movsl
push
add
cmp
cmp
jbe
sbb
sbb
movsl
pop
jns
mov
inc
xchg
mov
pop
loopne
cmpsb
hlt
dec
xor
jnp
xchg
xor
sarb
adc
mov
or
mov
sbb
push
xchg
int3
inc
lahf
fildll
cmp
inc
int3
mov
loop
xchg
cmp
jl
addl
pop
fistpll
mov
outsl
popa
push
add
cmpsl
rcll
daa
push
push
cmp
mov
inc
je
cmp
inc
add
lods
subb
ja
jp
sub
cmpsl
sub
sbb
xchg
mov
hlt
adc
jnp
jmp
push
and
xchg
shl
outsb
orl
dec
minps
aas
adc
inc
jnp
rol
push
lock
add
push
xor
imul
sbb
sbb
add
push
mov
mov
data16
add
icebp
nop
loopne,pn
fidivl
cmp
fbstp
sub
test
gs
push
push
inc
sbb
or
incl
and
dec
cltd
xor
in
xor
ds
cmp
mov
in
lock
cltd
mov
ret
loop
nop
adc
icebp
icebp
in
icebp
std
or
xchg
mov
xor
xchg
sbbb
xor
mov
inc
sub
push
mov
jb
pop
push
mov
testb
fisubs
in
cmpsl
xchg
pop
jge
mov
pop
je
mov
les
sbb
cmc
fcomps
mov
inc
adc
jp
jle
test
shlb
cmp
sbb
in
mov
pop
addl
dec
pop
add
or
push
pop
lods
mov
jne
div
test
or
mov
push
sbb
aad
pop
lahf
cmp
outsb
push
xchg
loop
push
mov
fwait
dec
dec
ficoml
push
push
gs
xchg
push
int3
mov
jb
jns
sti
adc
pop
xorb
mov
mov
dec
mov
mov
or
scas
pop
and
mov
adc
popa
cmp
je
aad
mov
shll
movsb
sbb
mov
stos
lods
mov
cmp
xor
xchg
add
cmp
ljmp
push
in
dec
lock
jge
ret
loopne
fdivr
sbb
sub
lahf
inc
or
sub
incl
decb
push
scas
dec
stos
cmp
sub
pusha
outsl
inc
movsl
in
sarl
xchg
cmp
nop
dec
decb
xlat
cmp
push
xchg
dec
xor
pop
movsl
mov
rol
mov
cmc
repz
push
je
and
daa
aad
xor
dec
cmp
fcompl
xchg
pushf
addr16
pop
push
pop
inc
loopne
fwait
movsl
je
mov
in
sbb
incl
dec
ss
cmp
js
sbb
stc
es
loope
push
inc
jmp
orb
icebp
adc
fdecstp
rcll
pusha
out
dec
das
and
jle
inc
out
mov
jle
out
popf
lret
push
add
stos
jp
mov
out
cmc
insl
test
sub
aad
arpl
stc
mov
or
mov
inc
aad
inc
mov
pop
sbb
inc
jae
in
mov
popf
jno
xlat
imul
or
cmp
iret
sub
call
adc
and
lea
idivb
push
das
fsts
inc
lods
aaa
cltd
pop
lcall
std
inc
adc
xchg
fcompl
and
out
out
mov
mov
jecxz
stos
sub
cld
mov
sub
outsl
mov
call
adc
out
aas
pop
out
add
filds
lock
dec
jmp
int3
sub
xor
inc
ja
aas
and
ficoml
mov
xor
cld
call
dec
jge
lods
not
jecxz
clc
scas
outsb
or
dec
lcall
jmp
cmpsb
jmp
sbbl
lret
mov
push
pusha
inc
xchg
lea
loop
popa
stc
xlat
mov
mov
and
jmp
push
push
mov
sbb
mul
loopne
jp
dec
lock
test
xor
dec
sub
mov
cmpsl
loop
dec
add
dec
push
int3
sarb
lcall
cltd
mov
fs
in
mov
dec
test
rorb
adc
xor
ret
inc
cld
popf
jb
sti
fcmovbe
push
mov
inc
fwait
push
pop
jg
pop
flds
cmp
aas
daa
inc
data16
lock
and
xchg
imul
sub
arpl
adc
mov
dec
add
test
int3
mov
int
sti
rolb
and
sbb
lret
movsb
std
add
push
aas
ret
cmpsb
inc
ljmp
mov
not
ss
es
mov
dec
push
adc
dec
fsin
push
js
divl
ret
mov
loopne
test
sbb
stc
xchg
and
jnp
std
push
movsb
jno
mov
adc
in
cmp
sub
arpl
lret
data16
icebp
shr
inc
push
lods
scas
out
mov
fisttps
cltd
xor
ret
fidivrs
jno
push
xchg
push
xchg
hlt
inc
mov
das
sub
nop
add
shll
adc
mov
popa
mull
sub
inc
outsb
cmp
inc
es
xchg
outsb
imul
push
push
jbe
test
fs
pusha
lds
repz
std
mov
test
push
xor
mov
push
fdivl
xor
or
xlat
lods
sub
lea
pop
loope,pt
sub
xchg
xor
sub
inc
daa
aas
adc
sbbl
outsl
xchg
or
push
inc
jge
push
lret
outsl
jbe
jl
mov
lret
mov
cmp
mov
or
into
stc
cmp
or
cmpsl
div
out
fldl
dec
daa
xlat
in
das
push
jge
pop
dec
mov
sbb
fsubr
fbstp
or
or
sbb
mov
jecxz
mov
mov
mov
idivl
aas
leave
insl
push
or
ljmp
cmp
pusha
shrl
dec
push
aad
mov
shlb
add
mov
sub
sub
xor
icebp
dec
push
dec
mov
pop
mov
hlt
loopne
xor
iret
pop
cmpb
or
andb
enter
iret
andl
sbb
mov
scas
popf
ret
jae
dec
sbb
movsb
test
sbb
movsl
pusha
rol
add
inc
shl
mov
adc
jne
cwtl
jb
ret
push
adcb
into
int
inc
lcall
pop
cmp
insl
filds
xchg
xor
cmc
sub
leave
and
pusha
jae
mov
repnz
dec
mov
out
xchg
mov
lcall
cwtl
push
push
sub
and
ja
popf
sbb
iret
stos
loop
into
shl
pop
inc
incl
adc
push
mov
jecxz
cmp
pop
jnp
dec
testl
movsb
insb
mov
xchg
ret
sbb
inc
pop
aaa
and
push
cmp
mov
sbb
int3
dec
adc
mov
ss
sti
or
and
mov
cmc
adc
loope
lret
in
lods
cltd
insl
aaa
pop
adc
out
or
adc
cmc
jmp
iret
sbb
dec
das
pushw
adc
or
inc
or
or
xchg
stos
add
sbb
dec
xchg
mov
cmp
or
push
inc
mov
dec
addr16
mov
das
cmpsb
xor
ficoms
xchg
pushl
push
fcompl
jl
cmpsb
push
pop
repnz
mov
mov
xchg
cld
xchg
push
mov
test
sbb
imul
dec
mov
iret
adc
pop
xor
pop
pop
and
push
mov
sbb
mov
negb
push
push
out
mov
pop
fdivrl
ja
mov
jo
jne
jecxz
pop
cmp
fisubrl
xor
je
sahf
dec
xchg
xor
repnz
jae
daa
cmp
imulb
add
add
into
int
je
mov
inc
dec
in
ja
xor
add
scas
mov
pop
xor
mov
les
sbb
mov
pop
pop
lret
adc
or
cmp
dec
adc
ret
push
mov
inc
lahf
ja
pop
pop
mov
mov
add
stos
cmp
or
popa
mov
add
lods
ja
mov
xlat
popa
lahf
xchg
aam
fisttps
cmp
stc
dec
mov
pop
std
rorl
sub
loope
xchg
aaa
inc
ret
push
adc
cltd
inc
pop
cli
ds
inc
xchg
inc
notb
add
mov
mov
push
inc
mov
cs
add
jge
xchg
movsl
dec
leave
jge
imul
call
cmpsl
push
lock
aas
clc
in
js
shrb
xor
xchg
insb
jecxz
sarb
andl
dec
add
sbb
pop
jecxz
xlat
and
xor
push
scas
imul
mov
jnp
dec
cmp
ja
fiaddl
int3
and
and
sbb
and
mov
movsl
mov
pushf
mov
in
subl
mov
out
das
pop
test
and
cwtl
aas
daa
jmp
xor
rcll
cmp
push
xchg
mov
xor
mov
test
add
fstps
jne
fisubs
dec
inc
popf
push
adc
cmpsl
xchg
fs
fisubrs
imul
int3
mov
out
scas
and
mov
imul
aad
call
jno
inc
nop
inc
call
cmpsb
mov
push
je
pop
mov
adcb
enter
mov
fsts
xchg
mov
xor
cmpsl
jmp
ljmp
mov
popf
xchg
neg
xor
adc
shlb
movsb
xchg
ds
call
jg
mov
cmp
lock
xor
stos
inc
pop
push
lods
cmpsb
fisubrl
test
imul
add
push
pop
jo
mov
out
dec
mov
in
arpl
mov
fisubrs
clc
and
mov
cmp
jp
sbb
add
pop
dec
int
mov
xor
cmpl
pushf
push
int3
fnstenv
adcl
int
sbb
test
les
int
sbb
mov
mov
loope
xor
cmc
mov
sbb
mov
mov
out
add
mov
xor
pop
ja
adc
push
pop
test
outsb
nop
add
in
repnz
test
sti
sti
xchg
lods
out
je
scas
or
xchg
dec
fs
rcrb
loop
adc
dec
push
cmp
push
xlat
push
sbb
addb
adc
push
daa
in
xor
imul
mov
mov
push
add
or
jnp
pop
gs
out
outsb
adc
and
test
sbb
mov
dec
jg
outsb
popa
leave
xor
fbstp
jb
dec
daa
in
aas
mov
push
xor
fucomi
leave
xchg
jecxz
test
nop
pop
aas
mov
packuswb
xchg
test
imul
add
insb
xlat
movl
lds
mov
addr16
jbe
daa
in
xchg
mov
inc
sahf
sub
je
xor
xor
mov
push
pop
inc
push
cmpsb
add
dec
add
pop
jl
shll
ret
sub
inc
lods
jae
lahf
cmp
adc
loop
add
mov
dec
and
rorl
fisubs
scas
jmp
adc
xchg
lcall
jg
mov
out
pusha
cmpsl
adc
and
in
ljmp
loop
mov
cltd
xchg
add
out
movsb
xlat
mov
and
push
mov
ss
jae
enter
mov
pop
lcall
xchg
jae
cmp
inc
mov
into
std
inc
jae
outsl
add
ret
cmp
je
js
or
mov
sub
lahf
call
cmp
daa
cmpsb
outsl
sbb
rcr
jl
or
sbb
out
in
movsl
sub
mov
pop
clc
mov
je
stc
repz
push
test
jbe,pn
mov
mov
lret
outsl
cpuid
mov
or
adc
fisttpl
fpatan
add
imul
dec
pop
js
sbbb
mov
in
xor
adc
ds
cli
xchg
cmp
lock
test
mov
pop
cmp
repnz
lea
imul
dec
aad
cwtl
mov
jb
mov
imul
loope
mov
jp
inc
loope
and
inc
xlat
jle
movb
repnz
push
push
ret
shr
add
enter
sub
or
test
daa
rclb
lahf
pop
sti
mov
mov
sub
hlt
push
inc
pop
aam
sbb
jg
push
insb
dec
in
push
out
jno
call
hlt
popa
aaa
pop
fcmovb
push
call
xor
sbb
pop
subb
pop
adc
mov
movsb
scas
repz
arpl
unpckhps
jno
les
test
fisubs
loop
ljmp
add
pop
rol
movsb
mov
inc
pusha
push
push
push
mov
lods
das
das
sub
and
into
xchg
push
iret
inc
sbb
sbb
sbb
sbb
cmpb
lods
add
jae
xor
and
jbe
cli
lea
jp
xchg
mov
or
addr16
outsb
ret
gs
test
adc
jns
add
fucomip
ret
mov
pusha
sbb
loopne
imul
sub
insl
jmp
in
loope
into
rcrl
addb
or
and
pop
push
xorb
push
sbb
mov
fdivrs
repz
enter
cmc
out
push
cmp
and
push
mov
pop
popf
sub
out
jge
add
mov
into
sbb
jne
aam
add
cmp
imul
out
xchg
addr16
sub
cld
aam
mov
gs
push
cmp
movsb
iret
stos
adc
pop
lret
int3
jge
mov
imul
xor
pop
pushf
rcll
sbb
push
push
lods
adc
mov
jae
fstp
sub
cwtl
mov
jge
add
lock
cmp
sbb
rorl
loope
movsl
xchg
inc
bound
mov
sub
push
ljmp
std
popa
add
mov
adc
mov
mov
lcall
mov
sbb
dec
mov
test
cmp
xchg
pop
enter
inc
fildl
cmp
repnz
adc
imul
add
add
cmpsb
adc
in
jne
xchg
push
dec
scas
mov
cmove
or
jle
cwtl
call
mov
fs
js
imul
roll
test
xchg
loope
cmp
pop
js
cmp
jg
xchg
pop
int3
or
addb
sahf
push
xor
shr
and
lcall
cmc
sbb
outsl
xor
adc
int
je
add
pop
cwtl
inc
lods
mov
add
cmpb
roll
pop
xchg
xchg
cmp
push
inc
adc
stc
ret
orb
roll
data16
ds
clc
and
les
pop
insb
loope
xor
fs
sub
imull
mov
punpckhwd
pop
jg
mov
push
iret
sbb
add
push
xchg
out
dec
or
gs
cmp
fstpt
scas
cltd
hlt
divl
mov
cmp
and
fldcw
outsl
ret
adc
mov
lods
and
sub
dec
das
mov
ss
mov
push
and
test
movsb
cmp
fcompl
mov
sarl
xchg
mov
fstps
aad
test
mov
shll
ret
pop
fdivl
xchg
sub
mov
std
lods
sbb
into
jmp
adc
mov
xchg
incb
pop
jb
add
jb
sti
std
leave
inc
and
and
jle
insb
dec
sbb
pop
push
arpl
or
movsl
iret
test
mov
xor
xchg
pop
mov
push
mov
andl
stos
aam
pushf
pop
cmpsb
ss
insl
lcall
adc
push
jl
cli
cmp
mov
lds
push
inc
dec
xor
lds
xor
lret
js
inc
sbb
mov
popa
pop
test
mov
or
in
rorl
imul
add
inc
cltd
add
test
dec
dec
addb
mov
dec
mov
pop
imul
or
dec
arpl
movsl
sbb
xchg
cltd
bound
aam
sahf
mov
mov
out
in
cld
pop
sahf
les
add
ret
mov
dec
push
pop
imul
dec
inc
or
xor
jnp
push
adc
pop
stos
je
sbb
mov
dec
jne
sti
cld
add
mov
jmp
jns
dec
fs
cmpsb
stos
sub
js
cli
dec
test
xchg
je
xchg
stos
call
or
push
fcmove
addb
sub
daa
call
test
clc
push
or
testl
int3
add
jmp
pop
mov
mov
imul
ja
lods
jnp
aad
add
fwait
push
mov
inc
inc
bound
and
aam
and
outsl
ret
jmp
insl
sub
mov
out
adc
push
and
add
sbb
test
mov
cwtl
cmp
inc
sbbl
or
inc
cmp
lea
mov
lea
jbe
inc
pop
enter
popf
testl
and
sbb
cld
dec
mov
dec
mov
or
push
add
cmpb
adc
xchg
xchg
insl
inc
mov
imul
shrl
loop
mov
sbb
out
or
out
xchg
lods
imul
adc
lods
mov
faddl
cmp
pop
adc
stc
fidivrs
mov
dec
fsave
enter
adc
and
push
pop
stos
bound
addr16
addb
out
cmpsb
enter
mov
sbb
dec
add
aaa
hlt
insb
mov
add
or
sub
cmpsb
shlb
xor
cld
pop
das
dec
test
outsl
or
inc
add
insb
mov
pop
jae
xchg
fwait
dec
sbb
ss
insl
pop
fiaddl
sahf
ffreep
jns
scas
sbb
cltd
test
adc
pop
pusha
or
jb
outsb
mov
repnz
clc
mov
and
sarb
adc
jge
inc
jg
adc
cmp
orl
mov
pop
cli
push
push
adc
and
add
sbb
fldl
out
inc
mov
pop
jo
xchg
xchg
ljmp
jp
popa
mov
jecxz
lods
adc
clc
out
lock
test
cmp
jnp
cmp
arpl
imul
jns
inc
xchg
shrb
dec
mov
cmp
mov
jae
pop
int3
adc
jae
xor
aam
data16
mov
sub
sti
pop
insb
mov
or
xor
aaa
gs
inc
ds
out
adc
movsl
movsb
nop
in
gs
gs
mov
or
scas
ror
sub
add
add
lret
push
jecxz
add
shll
int
dec
imul
xchg
xchg
sahf
jnp
imul
mov
mov
mov
cltd
cmp
ljmp
sbb
push
inc
data16
das
stc
or
lods
lea
jecxz
push
pop
mov
enter
add
repz
sub
bound
mov
sub
dec
cmp
inc
in
pop
aas
sbb
nop
push
fisubl
loopne
cmpsb
lcall
ja
mov
in
cltd
lea
push
clc
cpuid
add
push
out
gs
fsubrs
in
and
call
jl
sbb
sahf
jecxz
bsr
adc
jbe
arpl
sti
xor
icebp
ljmp
push
lock
cmp
jo
sbb
add
sub
push
orl
add
push
mov
mov
xchg
cmp
mov
imul
jno
jnp
dec
or
aaa
push
or
xor
push
gs
xchg
pop
mov
xchg
stos
push
filds
add
ss
and
in
and
dec
ret
in
cwtl
mov
cmp
add
add
loopne
cmp
xor
imul
inc
mov
lcall
inc
dec
adc
jle
pop
push
xor
aam
sbbl
push
aas
fisttpll
js
sbb
mov
pop
xchg
loope
lds
test
adc
xchg
stos
mov
push
daa
and
jp
inc
rcll
xor
mov
in
sub
movsl
mov
movsl
inc
insb
jl
sti
in
addl
sbb
jge
repz
dec
xor
push
out
out
push
sub
addb
mov
fildl
mov
data16
pop
sbb
cmp
icebp
les
movsb
cmp
mov
lds
adc
xchg
jo
pop
mov
dec
sarl
fwait
jns
push
jmp
mov
add
dec
addb
jecxz
out
mov
sbb
lock
ljmp
cmc
lss
out
neg
inc
imul
aas
sbb
rcrl
push
jae
inc
add
sbb
jmp
push
inc
repz
movsb
mov
dec
mov
movsl
jbe
out
test
mov
pop
xchg
inc
jmp
cmpl
inc
aad
and
sub
inc
xorl
in
fwait
fs
and
fwait
and
inc
inc
sub
std
and
iret
jl
cwtl
inc
rol
sub
push
xchg
mov
popa
out
jp
aaa
into
out
add
and
bound
mov
cld
or
adc
sbb
cmp
imul
cltd
xchg
repz
sahf
jns
test
inc
clc
xlat
popa
adc
ficoms
mov
adc
adc
jle
cvtps2pi
js
imul
mov
into
lahf
jnp
imul
les
adc
xor
xlat
push
or
lods
and
mov
mov
data16
pop
pop
pop
std
cmpsb
adc
sbb
xchg
cmpsl
movsb
fcmovb
subb
cmp
int3
sub
cmpsb
add
jns
adc
jp
insb
cmpsb
sbb
out
fs
mov
xor
push
jns
pushf
std
outsl
ficompl
mov
jnp
fcom
cmpsl
shll
sti
pop
das
xor
or
jle
jne
mov
lahf
insb
cmp
mov
and
push
pop
inc
jp
popa
add
repz
aaa
jmp
jne
fsubrl
xor
push
jp
out
popa
loope
inc
jns
or
xor
and
shll
fstpl
mov
and
and
loop
xor
inc
ror
bound
xchg
and
mov
jns
fwait
lret
hlt
das
push
mov
pop
ret
cmp
inc
mov
xor
imul
pop
das
inc
cltd
xchg
inc
das
movsb
sbbl
jb
add
lret
mov
or
shlb
out
xlat
orl
pop
jle
lret
mov
aaa
pop
loopne
lods
cltd
and
jbe
cmpl
jo
aas
sub
sub
stos
loope
rcrb
adc
in
pop
stc
xor
imul
aaa
pop
sti
dec
stos
das
dec
adc
sub
and
mov
jp
or
sub
and
xchg
les
jb
push
es
in
test
enter
jmp
inc
sti
xorb
cmc
mov
push
dec
mulb
lock
cmp
lahf
adc
inc
cmp
mov
push
stc
xor
out
mov
or
sub
xor
cli
pop
outsl
pushf
insb
or
mov
cmp
popa
pop
and
mov
aam
adc
sub
cltd
aas
jle
mov
lret
shll
mov
dec
gs
mov
mov
cld
mov
push
lds
stos
fbstp
pushw
xchg
xchg
lahf
leave
mov
pop
test
into
sub
daa
dec
mov
gs
adc
pop
ss
sbb
xor
fdivrl
pop
imul
dec
pop
mov
loopne
jb
sub
out
stos
xor
int
cmp
mov
lret
dec
inc
out
cwtl
push
out
or
aas
loopne
cld
mov
mov
shr
mov
fstpl
jmp
dec
and
and
xchg
mov
xor
pushf
aam
jl
stos
and
sub
mov
scas
cltd
cs
stos
and
sub
xchg
and
lea
jmp
adc
fnstcw
imul
mov
jno
or
push
sub
leave
data16
adc
scas
xchg
cmp
mov
or
inc
lods
je
inc
enter
xchg
jae
push
fldcw
jl
repnz
xor
std
push
mov
xchg
loop
ret
and
jg
pop
pop
stos
inc
lcall
lcall
adc
push
outsb
fwait
mov
es
repz
ret
and
dec
add
pusha
xchg
push
rclb
ja
sub
push
and
mov
leave
push
sbb
push
mov
or
dec
nop
cld
sub
clc
cmpsl
pop
cmp
repnz
in
stos
aad
jae
shlb
jp
test
xor
rcrl
cld
sti
outsb
pop
and
or
xorl
aas
lods
mov
cs
pushf
enter
sar
std
repnz
popa
inc
or
test
dec
es
lea
jle
imul
mov
mov
xchg
mov
ficoml
insb
inc
stc
mov
push
push
jp
rol
adc
mov
cwtl
cltd
xor
mov
lods
cld
fwait
dec
lahf
push
xchg
cmpsb
jmp
clc
daa
mov
outsb
ljmp
cmp
imul
scas
call
adc
sbb
pushf
cmpsl
add
into
sbb
sub
mov
xchg
xchg
ror
int3
stos
fs
out
xor
insl
insw
mov
lret
je
push
pusha
mov
jle
call
pusha
xor
rcll
pusha
and
inc
inc
shll
in
aas
pushf
shlb
xchg
xor
loop
pop
cwtl
mov
mov
mov
data16
test
mov
add
sarl
mov
nop
cwtl
shrb
sbb
adc
sbb
outsl
seta
pop
hlt
fwait
pop
aaa
dec
stos
mov
jo
mov
movsw
popf
mov
std
jb
pop
pop
das
inc
rdpmc
pop
xchg
sbb
jl
cmp
lds
mov
jbe
testl
xlat
sub
xchg
xchg
ret
inc
mov
push
popa
cmp
pop
cmp
lods
pop
in
jle
add
push
sbb
adc
and
sbbl
xchg
jnp
sub
repnz
insl
loope
xchg
stos
repnz
push
shl
inc
fisubl
and
sarl
mov
negl
andb
push
mov
and
xchg
and
iret
pop
or
jle
popa
aad
dec
scas
daa
sbb
js
out
in
sahf
sarb
push
jg
cmp
loopne
add
pop
test
push
xor
dec
xor
call
xor
cmp
push
or
in
add
jmp
xchg
mov
aad
and
cmp
cmp
addl
add
repnz
mov
pop
gs
idivl
mov
fst
mov
std
int3
fldl
push
ret
hlt
out
inc
adcb
and
cwtl
movb
jne
fwait
pushl
cwtl
adc
mov
and
push
enter
and
dec
nop
or
je
jnp
xchg
jne
pop
stc
lods
cmp
ret
out
push
add
pop
jns
xlat
int3
hlt
mov
jecxz
shlb
in
sub
outsl
cld
dec
sub
xor
or
ror
push
out
repz
xorb
xor
test
rorl
ss
fs
pop
popf
decb
dec
sbbl
mov
lock
sub
jnp
fwait
repnz
or
sub
shlb
loopw
aam
scas
dec
push
mov
jmp
sub
inc
inc
mov
ja
mov
addl
jecxz
xor
mov
fldl2e
aaa
push
unpcklps
fldl
pop
sbb
andl
pop
int3
xchg
roll
test
insl
sbb
pop
sbb
mov
cmc
hlt
push
lds
mov
hlt
inc
lock
int3
imul
jp
sbb
mov
sbb
sub
mov
and
lods
jnp
lock
nop
inc
jbe
clc
xlat
shlb
cmp
andb
jns
inc
xchg
adc
mov
or
cmpsl
adc
loop
cmp
arpl
push
call
adc
lea
mov
push
lock
lret
pusha
push
cmp
fsubrp
xchg
movsl
lds
pop
rorb
cmp
hlt
sbb
aam
sbb
and
mov
pop
fstpl
push
test
sub
ret
mov
es
stc
loope
aad
std
mov
jae
pop
repnz
mov
mov
jecxz
popa
into
mov
push
xor
popf
fdivl
int3
std
fimull
fdivrs
lahf
mov
cs
fisubs
cmpsl
bound
sub
mov
fisttps
inc
leave
sbb
cmpsb
test
andl
fstpt
mov
scas
test
ret
mov
push
imul
cmp
cmp
movhps
inc
sarb
rclb
push
fs
test
push
push
ficomps
dec
add
push
mov
enter
cmp
xor
and
call
xchg
gs
jmp
nop
add
fldt
fistps
xor
pop
clc
push
aad
imul
add
data16
lcall
cwtl
adc
movsb
ja
push
and
adc
pop
xchg
lds
gs
xchg
cld
lret
push
jne
pop
cmp
inc
push
push
repz
push
in
inc
inc
sbb
or
scas
in
hlt
dec
or
pop
fidivrl
sub
mov
pop
and
or
or
das
xor
hlt
je
into
cwtl
pop
mov
adc
out
movsl
xor
pushf
mov
ss
or
xor
cs
popf
adc
fwait
cld
andb
mov
mov
cld
push
or
fcomps
pusha
subps
inc
inc
and
movsl
jl
sub
mov
mov
rolb
and
mov
pop
repz
mov
aaa
inc
inc
mov
roll
lods
push
and
arpl
inc
stos
push
rolb
cmp
pop
test
sbb
repz
insb
or
and
inc
xor
aam
fdivr
dec
xchg
jnp
mov
shll
cmp
imul
mov
dec
ja
das
push
xor
into
add
aad
ficompl
mov
xchg
jns
repnz
mov
sub
pop
xor
setae
scas
test
out
dec
movsl
pop
jns
xchg
xor
cmp
jno
fs
mov
out
pop
lds
pop
in
mov
cs
sti
inc
mov
jb
fndisi(8087
movsl
lods
je
jmp
xor
data16
mov
repnz
sbb
into
movsb
jbe
popa
pop
iret
xor
in
mov
imul
test
int3
pop
lret
push
adc
pop
inc
hlt
push
adc
xor
inc
pusha
lods
sub
jns
inc
out
jl
xor
push
shll
movsl
data16
jecxz
setnp
cld
pop
arpl
push
aam
inc
imul
scas
cmp
pop
add
xor
cwtl
jp
jp
xchg
call
and
repnz
popa
les
dec
into
fdivs
push
mov
mov
outsl
sbb
jns
mov
lds
iret
movl
add
pop
dec
into
pop
sbb
xor
mov
inc
xor
push
jle
mov
fnstenv
or
sbb
pop
add
cltd
inc
lret
dec
sbb
lcall
mov
push
xchg
nop
mov
mov
xor
dec
or
out
mov
cs
xchg
out
leave
sti
xor
cmp
ficoms
xchg
dec
and
loope
aas
lcall
and
mov
cmc
addr16
adc
fisubrl
sbb
jp
inc
and
out
add
xchg
pop
cmp
mov
push
cmp
mov
push
int
lret
and
jg
mov
push
aas
jge
js
rcll
xchg
jg
xchg
mov
adc
cli
sar
in
jo
scas
lds
sbb
jne
cmc
jb
fnsave
leave
or
inc
sub
jae
xchg
fidivrs
cmp
popf
sub
sub
mov
sub
lcall
mov
and
mov
jae
adc
adc
mov
mov
imul
mov
mull
call
sbb
xor
mov
inc
jnp
mov
ret
clc
fiaddl
jecxz
iret
dec
loopne
sbb
jno
push
stos
mov
xor
cmp
int3
adc
cltd
addr16
or
in
sub
cld
cli
push
pusha
mov
xor
dec
sbb
repnz
ja
fs
mov
insl
fcoml
add
inc
mov
mov
or
xchg
mulb
mov
stc
loopne
mov
and
sbb
xchg
mov
add
cld
into
cltd
sbb
fildl
cmpsl
push
sbb
ds
cld
mov
int3
daa
movsb
or
lock
jge
pushw
sub
es
test
imulb
or
sbb
mov
fbld
mov
pushl
mov
orb
xlat
int
mov
or
sbb
lcall
xor
sti
mov
daa
test
pop
cld
sub
sarb
or
cmpsb
sub
insl
mov
loope
nop
sub
test
addb
pop
stos
rcr
test
pop
das
std
sbb
xchg
mov
jge
nop
stc
aaa
push
sbb
dec
cmpl
inc
xchg
in
inc
jbe
inc
push
and
and
ds
bound
mov
cmp
rclb
or
jp
push
sub
dec
filds
jns
int
xchg
int3
add
subl
repz
or
movsl
outsb
scas
fisttps
lods
ror
sub
in
std
rclb
mov
shr
leave
push
inc
sub
es
add
test
pop
call
jo
dec
cmp
xor
test
jge
std
and
xor
dec
sti
fidivrl
ja
gs
or
or
mov
jmp
xchg
xlat
mov
pop
dec
fsubl
test
cmp
lret
push
les
fmuls
push
es
repz
inc
stos
cmc
and
inc
pop
les
insb
cmc
gs
dec
pop
pop
dec
clc
imul
in
enter
roll
repz
jge
ret
pop
xor
dec
sub
popa
popf
pushf
loope
push
jne
mov
loopne
popa
fisubl
jle
loop
xor
or
pop
and
fs
lcall
push
dec
hlt
or
mov
sub
add
sbb
jmp
test
pop
mov
js
ss
scas
arpl
xchg
mov
movsb
dec
test
dec
das
and
shl
add
cmpsb
adc
xlat
or
aam
sbb
fisttps
dec
cmpsl
xchg
sbb
aam
out
add
in
mov
cmp
xlat
pop
bound
sub
dec
mov
test
rcll
call
call
das
sbb
cmp
xchg
inc
push
mov
and
lods
imul
ss
cmp
dec
inc
cltd
lahf
adc
mov
mov
test
push
cmpsl
jg
out
ds
aas
push
std
insl
jmp
pop
out
ficoml
push
cmp
push
mov
out
jl
or
xchg
scas
lods
xorb
and
rolb
pop
pusha
insb
inc
inc
inc
fsubrl
xor
fdivl
xor
push
xor
mov
add
dec
popf
daa
jb
scas
xlat
dec
shr
ds
xchg
subb
fisubs
and
out
insb
push
xor
jne
mov
movsb
jno
xchg
hlt
inc
adc
repz
sub
pop
push
mov
xor
lds
sahf
into
push
jle
pop
push
mov
stos
mov
test
sbb
add
aad
inc
adc
repnz
roll
jg
jae
mov
test
mov
cmp
sarl
jne
inc
sbb
pop
xchg
nop
mov
repz
testb
hlt
jne
and
xchg
call
test
xchg
fistps
daa
xor
add
inc
fisttpll
and
dec
sub
xchg
add
xor
sub
and
fistpl
test
xor
mov
out
sub
inc
pop
mov
cmp
icebp
into
push
inc
jb
pop
fists
enter
dec
pop
aas
or
adc
into
mov
push
les
mov
jnp
lock
mov
sbb
lods
sbb
ds
shll
iret
pop
inc
jmp
cli
pop
xlat
sahf
test
adc
aam
loop
push
std
cwtl
mov
loop
shll
addr16
testb
push
cmp
ret
pop
or
or
mov
pop
xchg
fildll
pop
sbb
xor
pop
sub
xchg
fists
data16
pop
int3
push
js
or
enter
imul
dec
xor
outsb
mov
pop
adc
add
push
mov
pushf
mov
mov
rclb
sub
push
mov
enter
out
in
sub
ret
jno
mov
mov
cwtl
mov
push
jmp
and
sbb
sahf
mov
mov
cmp
xchg
std
scas
jo
popf
lcall
sbb
adc
inc
out
int
sbb
sahf
lahf
pop
sbb
and
ret
dec
inc
les
int3
loop
or
aas
sbb
jo
cmp
mov
fwait
arpl
mov
and
sbbl
dec
outsb
cli
xlat
pop
loop
repz
shrl
sub
stos
ficompl
pop
pushf
xchg
pusha
pop
mov
enter
test
test
out
in
ja
cmp
pushf
mov
js
add
xchg
outsb
sub
push
ret
jne
push
mov
push
dec
clc
sbb
scas
inc
aam
scas
jnp
ret
push
aas
daa
pop
xor
sbb
das
stc
inc
add
fidivs
jmp
mov
or
ja
xchg
or
jnp
fsubrl
pop
and
cli
lods
add
jb
cmp
sbb
enter
xchg
jns
cs
cmp
rcl
fsubrl
jp
add
daa
lcall
aas
sti
xor
xchg
dec
fsubl
dec
mov
sti
sub
cwtl
pop
clc
int3
scas
aas
xchg
jp
repz
pusha
push
leave
out
add
cmc
stos
and
mov
jl
mov
or
mov
ljmp
jp
stos
nop
dec
push
cmp
cld
je
mov
loopne
push
out
les
fwait
cmpsl
mov
rcll
mov
lahf
dec
mov
push
add
sbb
aad
hlt
mov
subb
adc
sbbl
popf
xor
mov
nop
sbb
fs
popa
mov
cmpsl
cmp
sbb
stos
mov
add
jno
inc
mov
outsl
xchg
cmp
mov
ficoms
pop
ret
neg
push
hlt
dec
add
sub
xor
sahf
and
adc
push
fstl
lcall
fwait
insb
cltd
out
out
pop
cmpsl
aad
lea
xor
mov
cmp
jae
int
popa
mul
xor
xor
cmp
xchg
bound
pop
popf
dec
test
cmc
jo
add
filds
and
aam
iret
and
xor
xchg
je
xor
xchg
imul
lahf
xchg
xor
jae
and
popf
das
cmp
lea
inc
dec
movsl
imul
xor
cmp
xor
inc
repnz
inc
xchg
fistpll
imul
icebp
rorl
jge
add
dec
test
dec
sbbb
cmc
jbe
push
add
sub
divl
xchg
out
lock
xor
mov
xchg
out
push
fcoms
iret
xchg
mov
stc
xchg
sbb
ds
hlt
cmp
xlat
adc
or
pop
sbb
inc
out
push
fildl
idivl
jge
jns
arpl
cltd
fnclex
in
xchg
mov
push
xor
imul
inc
dec
dec
adc
jae
mov
jns
xchg
mov
add
xchg
out
push
insl
fwait
aad
fistl
pop
or
inc
or
add
outsb
fcoml
pop
inc
cmp
pop
mov
jnp
push
push
mov
mov
sbbl
inc
movsl
repnz
stos
fidivl
sbb
adc
in
inc
test
lcall
adc
movsbl
jae
sub
popa
dec
mov
in
xchg
jp
sbb
and
cmp
in
outsl
mov
out
fwait
and
data16
lock
xchg
cltd
mov
outsl
mov
mov
notb
and
and
mov
push
lcall
test
adc
nop
bound
out
mov
jae
pop
scas
pusha
mov
push
popf
xor
xchg
call
jne
sarb
push
fisttps
mov
mov
loop
pop
mov
dec
inc
lcall
push
jp
aaa
push
aad
push
cmpb
mov
inc
es
repnz
add
call
and
shlb
xchg
xchg
dec
lcall
test
stos
and
leave
mov
aad
in
sti
sub
scas
fstpt
mov
sub
out
mov
je
push
mov
xor
mov
je
pop
sahf
aad
mov
test
xor
pushf
pop
or
sub
inc
adc
pop
nop
je
enter
xor
mov
int3
call
xchg
lret
xorb
xchg
divb
les
mov
sbbl
and
cmp
cmp
xchg
pop
add
popf
shrb
mov
mov
imulb
ret
push
push
stc
dec
inc
sub
je
mov
bound
movsb
sbb
stos
cmc
mov
js
sbb
push
test
push
push
pop
adc
test
roll
movsb
out
lcall
outsb
xchg
pusha
out
or
aam
repnz
enter
or
mov
dec
sub
mov
mov
or
jno
lcall
call
pop
cli
scas
fbstp
add
dec
mov
adc
add
sahf
xor
xchg
clc
add
clc
xchg
jp
lock
dec
mov
sbb
inc
dec
out
jae
or
inc
push
arpl
xchg
push
sbb
fisubrl
icebp
rolb
and
jbe
sbb
pop
ljmp
xchg
push
lret
adc
pop
sub
enter
imul
and
aas
sbb
adc
mov
aam
cmp
xlat
cmp
pop
push
pusha
fwait
mov
pop
ja
out
lret
in
jge
mov
mov
mov
fdivrs
sbb
adc
jo
jae
adc
dec
push
push
mov
dec
mov
jnp,pt
arpl
insb
jl
fiaddl
arpl
fmul
stos
lcall
iret
shll
idivl
ja
xchg
lods
sbb
mov
adc
cli
jmp
pop
mov
jno
xchg
and
jne
bound
jmp
mov
and
push
enter
xor
insb
ret
jns
ss
mov
mov
and
sbb
mov
mov
test
cmp
xor
shll
cmp
sub
outsb
mov
shlb
out
cmpsb
out
std
mov
mov
cmp
sbbb
cwtl
mov
cmp
lea
mov
jb
es
and
ja
es
xor
or
sbb
mov
cs
mov
jnp
xor
mov
les
inc
dec
pop
repz
fldt
add
rolb
int3
mov
push
push
icebp
call
out
xorl
dec
out
aam
lahf
fldcw
scas
pop
notb
aas
pop
push
inc
pushf
fs
sub
lret
mov
cmp
lahf
cltd
push
and
fistps
decb
sbb
pop
inc
hlt
add
mov
pop
inc
movsl
or
insl
idivb
adc
mov
mov
ss
xor
or
xor
lds
stos
jbe
mov
stos
jg
jo
push
xorl
sub
cmpsb
push
lods
xor
adc
leave
fisttpll
bound
mov
inc
and
or
sbb
or
popf
mov
stos
sbb
dec
out
mov
loope
cltd
bound
pushf
lods
mov
mov
or
cs
scas
in
rcl
adc
daa
fmul
add
pop
hlt
sub
jge
loop
das
sbb
lock
ja
clc
decb
and
dec
add
mov
ficompl
xchg
jge
mov
das
cmc
pop
jbe
test
std
jmp
aam
idivl
sbb
pop
jnp
mov
jmp
mov
gs
jnp
pop
out
inc
int3
cmc
sbb
add
push
inc
jns
or
ret
mov
aaa
mov
test
mov
dec
xor
mov
pop
scas
add
bound
dec
ss
ret
or
mov
lods
xchg
mov
lods
jo
mov
push
cwtl
gs
mov
nop
sub
push
sub
mov
xchg
fisubrl
arpl
dec
lret
out
jns
popa
push
push
repnz
xor
and
sbb
pop
sub
dec
mov
mov
push
negl
out
mov
jnp
in
shr
imul
jne
mov
sub
dec
xlat
mov
and
cmp
mov
pop
or
fistl
dec
cmpsl
mov
pop
fidivrs
push
pop
lods
dec
and
test
xor
andb
jb
mov
inc
jb
xchg
add
cwtl
mov
and
iret
aaa
xchg
loopne
adc
fimull
repz
dec
and
cld
mov
insl
mov
imul
mov
test
adc
scas
pop
fwait
loopne
popf
xor
ljmp
imul
popf
xorb
and
or
fidivrl
add
addb
adc
cld
mov
xchg
nop
push
add
imul
stos
lcall
xor
cmp
enter
pop
sbb
cmp
add
das
jle
xor
jns
push
pop
mov
rorb
sbb
ret
add
mov
or
sub
arpl
andb
iret
inc
outsl
jge
lahf
std
imul
inc
lods
sahf
decl
inc
push
ret
js
js
popf
adc
pushw
lods
ficompl
xor
dec
in
mov
or
add
sub
xchg
in
pop
aad
es
cmp
xchg
movsl
mov
mov
outsb
sbb
pop
pusha
sbb
test
sub
test
inc
sub
int
insl
inc
ret
outsb
adc
cmpsb
xchg
xlat
and
ds
outsl
pop
adc
and
jo
gs
fs
or
pop
cld
mov
xchg
fisubs
xor
rclb
mov
add
fcoml
mov
loop
adc
push
adc
jge
jb
jmp
and
insb
mov
sub
push
cli
jp
jp
push
ds
loopne
insl
pop
xor
int3
mov
std
sbbb
repz
push
or
cmp
loope
sub
repz
inc
mov
push
je
push
pop
or
or
icebp
mov
std
mov
jno
in
mov
js
mov
pop
popa
mov
insb
cmp
das
fadds
and
and
xor
fdivs
loope
sbb
xor
add
cmp
insb
cmc
cs
inc
pop
out
vsqrtss
or
daa
xor
leave
mov
push
das
cltd
adc
xchg
pop
repz
or
aaa
in
xor
mov
jp
inc
push
sbb
sbbb
and
jle
fists
mov
fsubl
adc
ljmp
and
jne
and
xor
sub
adc
adc
bound
in
mov
xchg
cltd
mov
pop
dec
daa
loopne
mov
xor
xor
fisubrs
mov
mov
mov
push
out
adc
xor
cmp
hlt
mov
shrl
jle
stc
push
cmp
in
stos
pop
inc
sahf
sarb
pusha
cmp
xor
mov
fistl
in
push
mov
ss
ja
fs
add
or
xor
or
xor
lds
xor
shlb
mov
outsb
ljmp
mov
mov
lods
and
push
test
lcall
and
popl
adc
lret
xor
mov
sbb
out
std
pop
aaa
inc
cmp
ljmp
jmp
sbb
adc
sbb
xor
scas
sub
insb
fdiv
es
cmpl
jnp
ret
popa
adc
jns
sarl
cs
imul
pop
stos
add
in
rcrl
or
xchg
mov
outsl
push
adc
pusha
adc
adc
xor
push
popa
dec
aam
arpl
imul
shrl
lods
cltd
loope
nop
cmp
in
sahf
push
lret
mov
pop
js
jbe
lea
aas
push
xchg
and
xor
and
inc
lea
fbld
fs
add
xor
lret
pop
nop
push
xchg
insb
in
sbb
xchg
ds
jl
jo
ljmp
add
divb
dec
inc
rorb
pushf
xchg
clc
push
lret
filds
sti
nop
cmpsl
inc
cmp
and
loopne
cs
std
jne
scas
xor
xchg
loope
pusha
arpl
pop
incl
lods
shl
imul
hlt
cltd
push
and
cmp
or
fwait
cltd
movsb
or
dec
mov
addl
mov
out
add
or
jle
mov
test
xchg
cmpsl
adc
sarl
js
imul
nop
mov
lahf
scas
xor
pop
mov
ret
mov
add
cmc
xchg
lds
cltd
and
stc
and
cmpsb
les
and
add
loopne
jnp
shr
sbb
xchg
jp
out
mov
insl
sub
or
inc
mov
mov
adc
out
fdivs
lcall
repz
jnp
and
call
scas
or
add
leave
sbb
shll
nop
mov
xchg
adc
fcmovnbe
ret
mov
lea
mov
dec
or
add
xchg
dec
sbb
pop
jnp
mov
xchg
test
mov
cmp
jnp
les
dec
test
inc
push
xchg
and
mov
adc
pop
mov
andb
pop
or
sbb
jne
adc
jo
insb
mov
popa
pop
add
sub
mov
lret
or
jbe
adc
mov
out
lock
loop
mov
in
out
jmp
push
mov
dec
sub
pop
rorl
add
xlat
cmp
aas
test
jno
push
dec
sub
push
fs
and
inc
inc
dec
shlb
ss
imull
hlt
mov
mov
fwait
jle
gs
ret
loopne
test
jbe
shl
mov
pop
cltd
cwtl
cmp
mov
and
push
cmp
and
aad
adc
packssdw
pushf
dec
dec
cltd
or
push
es
mov
fucom
pop
insl
inc
arpl
cs
mov
adc
incl
push
lea
aaa
mov
pop
nop
imul
dec
rorl
icebp
add
outsl
adc
or
mov
adc
shlw
pop
stc
mov
or
mov
jno
jge
jb
push
jg
rcll
sbb
dec
movsb
js
push
out
push
sub
adc
sub
sub
and
in
mov
xchg
in
xchg
ror
ss
fmul
jecxz
orl
stc
mov
testb
repnz
mov
cli
dec
roll
loop
mov
inc
and
jmp
xor
mov
inc
inc
iret
out
cld
adc
out
pop
pop
sarb
mov
stos
mov
xor
xor
fcmovnu
clc
push
and
xor
inc
int3
repnz
adc
xchg
jle
pop
cltd
lcall
or
mov
or
ret
pop
jl
and
in
and
sbb
xor
insb
clc
pop
mov
inc
adc
pop
icebp
ds
pop
test
ret
fstps
mov
fs
js
stos
or
xchg
cmpsb
subl
imul
push
pop
cli
in
push
ja
jo
rcrb
test
imulb
sbb
pop
dec
dec
xlat
xchg
scas
or
push
sub
imul
inc
jle
inc
adc
xor
pop
int3
cltd
push
sbb
mov
mov
mov
pushf
pop
mov
dec
sbb
pusha
popf
in
aas
lret
mov
lock
xchg
into
add
rclb
push
mov
das
call
and
scas
cwtl
pop
lahf
stos
and
pop
jno
push
sub
inc
mov
xchg
sarb
icebp
xor
je
jns
and
test
dec
pop
test
ficoms
dec
in
mov
imul
or
movsl
xchg
loopne
out
fs
lret
in
popl
jp
negl
mov
mov
ret
fidivl
ja
ds
lods
xchg
packuswb
jg
push
das
shll
or
cwtl
sti
sbb
fdivrl
mov
sbb
fsubs
pop
push
xor
fxch
add
repnz
out
sbb
cmp
pop
mov
mov
out
push
sbb
in
sub
jecxz
jb
jge
inc
xchg
shl
loope
mov
ljmp
shlb
push
bound
insl
push
data16
sti
mov
add
call
std
out
adc
and
push
sbb
movsb
movsl
fwait
mov
jecxz
push
sarl
imul
mov
pop
pop
jae
clc
dec
or
test
jl
arpl
ds
test
in
lret
xchg
not
jne
test
mov
outsb
push
or
lahf
and
inc
add
jb
jno
pop
into
fcmovu
xor
inc
mov
push
push
dec
out
ret
cmp
push
pop
lods
loop
int3
pop
pop
leave
add
pop
push
loope
lock
in
lret
mov
cmp
fsts
adc
loope
jnp
sbb
orb
cmpsb
test
ret
adc
fadd
pushf
les
mov
sahf
shl
gs
mov
ret
mov
in
ret
dec
mov
in
xchg
mov
jne
cmpsb
mov
adc
or
test
inc
sbb
data16
or
popf
sti
sbb
ret
mov
adc
jecxz
mov
dec
je
push
xor
out
mov
cmp
inc
div
and
xorl
test
add
inc
and
idivb
jle
mov
adc
pop
sub
fwait
lods
or
pushf
fs
cltd
lods
dec
mov
mov
leave
xchg
add
pusha
sub
rcl
xor
push
sub
jl
mov
sub
mov
dec
ds
loope
cmp
add
lods
decl
mov
xor
cmpsb
cmp
in
push
cmp
fnstsw
cld
and
fisubl
rcr
push
jnp
xor
es
clc
push
sbb
and
jmp
dec
hlt
mov
call
int
cmp
loope
std
insl
sub
xor
xor
popa
scas
xchg
pop
sgdtl
push
or
leave
push
mov
ljmp
xor
inc
push
lock
pop
ret
fnstsw
and
inc
outsl
ficoms
pushf
pop
pop
fbld
daa
lcall
inc
cld
outsb
sti
xor
inc
xor
xorb
dec
mov
cmpb
stos
cmp
ss
mov
cltd
mov
xor
das
pop
popa
mov
sub
adc
mov
jbe
pushf
or
sar
fcom
dec
sub
push
xchg
add
ret
test
mov
nop
mov
dec
push
sbb
mov
rclb
mov
push
or
aas
arpl
ficompl
cmp
xchg
cmp
mov
jmp
mov
clc
jno
fs
xchg
xor
sbb
xchg
rol
out
outsl
mov
mull
mov
arpl
xchg
xor
jmp
jle
xor
out
loopne
stos
mov
sbb
add
fistl
push
add
and
testb
sbb
cltd
sbb
sbb
inc
mov
pop
or
lahf
mov
ds
lods
jns
add
add
add
jg
inc
xor
xor
sti
fstl
shrl
push
fucom
sub
sub
mov
pop
inc
adc
xchg
mov
xor
pop
adc
dec
lds
fnstcw
xchg
loop
sti
jg
sub
aad
mov
push
gs
or
push
rcrb
outsl
mov
jl
xor
ljmp
adc
xchg
repnz
cmp
push
scas
sub
jb
push
cmp
adc
out
flds
rcrl
jmp
cmp
rcll
lret
push
mov
pop
iret
js
lock
jg
stos
jno
inc
aam
in
in
or
or
xchg
mov
in
repz
negb
fbld
ds
test
aas
add
lea
or
push
into
es
push
cmp
frstor
popl
pop
pop
sarb
jl
fisubrs
outsl
js
adc
imul
cmp
add
mov
ja
push
out
ret
mov
xor
fcoml
push
add
and
inc
xchg
ja
nop
mov
mov
lods
pusha
jbe
insl
xor
mov
mov
daa
inc
int3
repz
enter
push
xchg
or
push
dec
push
pop
int3
inc
xlat
push
lds
fisubrl
add
movl
orl
aaa
xchg
in
rcll
popf
outsb
cmp
pop
neg
dec
mov
mov
cmp
jb
mov
push
xor
push
jbe
add
push
lds
mov
xor
test
push
sbb
cmp
jle
movsl
and
decl
jbe
sub
dec
lods
mov
testb
cltd
cld
mov
std
leave
mov
stos
or
cmp
dec
leave
repz
mov
xchg
orl
xchg
and
mov
jmp
push
fiadds
cmc
xor
ret
dec
popf
bound
lret
scas
push
jge
pop
repz
test
in
fucomi
mov
push
push
inc
xor
fnstsw
push
mov
jmp
lea
dec
xchg
sbb
repz
lea
push
sbb
popf
add
mov
cmp
and
pushf
push
mov
dec
jmp
inc
mov
jns
out
and
xchg
cmp
jbe
inc
das
cmp
stos
sub
outsb
mov
pop
sub
repnz
cld
jns
add
xchg
stos
in
pop
std
push
iret
cmpsl
jne
mov
mov
aad
fldt
test
scas
or
pop
adc
mov
insb
cmp
outsl
idivl
xchg
mov
rcll
cmp
adc
clc
unpckhps
jmp
inc
gs
jnp
mov
add
in
in
mov
mov
das
clc
inc
jns
notl
imul
loope
inc
dec
fcoms
mov
insb
ja
addr16
in
aad
out
adc
roll
nop
mov
xor
test
lock
daa
xchg
aam
and
mov
jp
repnz
jp
std
rorb
cwtl
aaa
jb
sub
add
fadd
and
cld
repz
xor
pop
jle
push
and
cwtl
xor
incb
mov
mov
lcall
push
lea
push
lea
pop
sbb
or
jmp
push
ror
ret
jl
or
jp
mov
andb
nop
mov
mov
leave
pop
arpl
mov
lret
and
iret
inc
clc
sbb
mov
push
int
filds
lds
out
mov
sahf
fistpll
push
aad
add
clc
and
or
orl
cwtl
sahf
loop
cwtl
ficoms
das
test
aad
inc
sbb
out
loope
and
stos
push
cmpsb
adc
outsb
mov
add
negb
fimuls
roll
xchg
shl
xchg
stc
sbb
dec
sahf
pop
xchg
je
push
call
les
ljmp
and
xchg
sub
shlb
pushf
imull
sub
push
mov
cmp
loope
push
cmp
divb
mov
or
or
mov
clc
in
dec
mov
pop
lahf
cmpsl
xor
xchg
dec
scas
pop
stos
ljmp
dec
or
cmpsb
mov
sub
mov
sub
push
sbb
leave
and
xlat
dec
dec
or
mov
and
cwtl
rclb
repz
scas
jae
shlb
push
mov
dec
inc
loopne
mov
xor
dec
or
mov
mov
aas
int3
les
aaa
add
pop
out
pop
mov
fwait
mov
and
test
push
sub
pop
fimull
mov
sub
inc
dec
mov
pop
xchg
iret
mov
outsl
add
pop
gs
jg
mov
dec
jle
ss
ffree
fsubs
das
add
pop
dec
cmpsb
ljmp
test
cld
jge
sub
lds
test
imul
in
std
jg
insb
in
add
xor
inc
insl
push
int3
xchg
adc
mov
out
popa
pusha
dec
jmp
rorl
sub
int
in
jbe
mov
insl
lcall
cltd
in
loope
fisubrs
jo
add
dec
iret
mov
pusha
jo
mov
add
inc
xor
les
jmp
push
pop
or
pop
shl
out
popa
out
jb
xchg
inc
sti
mov
xchg
xchg
jecxz
pop
push
jno
imul
stos
or
movsb
fisubrl
scas
mov
mov
nop
dec
mov
out
inc
aas
xchg
sub
test
jbe
rcrl
and
stos
inc
orl
sbb
mov
jae
loope
mov
lock
inc
aad
shrb
pop
push
lds
adc
mov
repnz
push
sbb
and
in
xchg
dec
cmp
je
xchg
mov
mulb
add
insb
adc
ds
mov
jmp
icebp
sahf
rcl
cmp
arpl
or
insl
sbb
and
stos
jmp
xchg
test
sbb
lods
cmp
sbb
jmp
int
xchg
gs
popa
push
je
push
insl
jecxz
sub
int
xchg
pop
inc
xchg
loopne
and
dec
mov
mov
pop
mov
inc
xchg
test
mov
lret
fisubrs
sahf
out
ds
jbe
flds
pop
push
xlat
adc
clc
aas
jnp
adc
add
lcall
jae
xor
out
aas
xorb
insb
sbb
or
dec
stc
imul
mov
xchg
pop
mov
mov
or
mov
mov
cmpb
push
sbb
sub
jl
add
shlb
test
insb
inc
aaa
adc
push
test
int
mov
xchg
bound
insb
imull
mov
aas
lods
outsl
cltd
xchg
adc
adc
sbb
decb
out
pop
and
pop
mov
loopne
hlt
add
push
std
mov
mov
test
mov
sbb
dec
stos
xchg
lret
add
lods
inc
repnz
xor
xor
jg
hlt
repz
sbb
scas
hlt
movsb
pushf
sbb
mov
icebp
pop
imul
pop
sub
pop
jg
movsb
test
les
sub
call
in
hlt
mov
popf
cmp
and
js
and
xor
clc
nop
pop
rolb
add
addl
and
sub
imul
insb
adc
fdecstp
lret
in
shll
insb
cli
js
sarb
daa
jecxz
pop
cmp
dec
das
mov
in
out
jo
js
stos
sub
push
xor
sbb
fwait
and
mov
loop
stc
push
cmp
insl
lea
ja
mov
xchg
dec
mov
test
sub
rcrl
xor
gs
cli
stos
jge
ss
rolb
xchg
mov
mov
lods
and
cmpsl
fsub
inc
lods
inc
cmp
adc
adc
flds
shlb
cli
fldenv
and
cmpsl
jb
fstpl
int3
mov
movsl
pusha
xchg
popaw
arpl
iret
test
stos
ss
and
pop
aaa
jecxz
mov
hlt
adc
mov
stos
jne
sub
add
push
into
ljmp
mov
xchg
and
aas
xor
lock
push
dec
test
rorl
mov
and
mov
aas
xor
cmc
dec
dec
mov
je
mov
fs
jno
sub
xor
dec
out
pop
and
les
ljmp
jp
scas
loope
lods
push
adcl
cwtl
inc
ja
add
xchg
jne
or
mov
or
fisubrs
jae
add
pop
jl,pn
mov
xchg
rorl
cmpsb
imul
push
leave
mov
cmc
add
loopne
in
dec
xor
repnz
aam
sahf
adc
sbb
xchg
addr16
mov
cmp
and
stos
arpl
jne
pop
mov
sub
cmp
scas
call
lret
aam
pusha
sub
push
ficoml
sub
into
lea
aad
xchg
pop
nop
pop
mov
loope
mov
xchg
enter
mov
daa
mov
or
sub
jl
xchg
or
or
and
aas
xor
pop
icebp
lahf
call
xor
xor
mov
les
add
popw
mov
cmc
pop
lret
push
and
sbbl
out
sbb
mov
scas
inc
ficoms
inc
sub
lods
xor
sub
mov
dec
cld
repnz
mov
je
jns
pop
sbb
pop
xor
xchg
mov
in
or
ja
mov
fs
pop
test
jge
imul
inc
scas
cwtl
in
leave
pop
jbe
movsb
pop
dec
cld
xchg
lods
cmp
das
lcall
jge
mov
fcoms
push
sub
idiv
sub
lods
jb
je
fldl
aam
scas
aaa
or
fwait
xchg
popa
les
jl
in
aad
jmp
xchg
push
sub
enter
fsubr
mov
fcomp
test
adc
adc
mov
movsb
mov
cwtl
xchg
dec
mov
loopne
and
subb
test
sub
nop
js
jo
flds
xchg
test
inc
lock
pand
ss
push
push
adc
mov
ljmp
sbb
daa
lcall
imul
ret
gs
ficoml
movsl
aam
push
dec
lret
ljmp
js
cmpsb
subb
sub
nop
mov
enter
xor
lods
shl
mov
adc
xor
pop
inc
dec
and
outsl
cmp
cmpsb
orl
das
in
push
adc
jb
addr16
cld
fcomps
jo
fs
mov
pop
lcall
stc
sub
xor
mov
or
je
setb
loope
int3
jmp
mov
sti
rolb
ds
sub
mov
jns
pop
pusha
sbb
aas
inc
sbb
cmp
fisubrs
jb
xor
rcrb
cmp
pop
jg
jnp
shl
fimuls
adc
shlb
mov
jnp
cltd
int3
push
in
jg
inc
dec
dec
pop
sbb
outsb
jge
cwtl
lret
sbb
xchg
pop
fwait
bound
adc
jmp
pop
sub
call
dec
xor
fadd
pusha
shrl
insb
or
hlt
pop
cmp
mul
adc
and
leave
jns
mov
inc
pop
ds
and
sahf
jbe
jb
sar
jbe
xlat
pop
inc
out
cmp
mov
mov
shll
sbb
add
jp
fwait
cmpsb
and
jmp
scas
lahf
stos
mov
sbb
or
cmp
jo
jne
jmp
or
adcb
repz
sub
mov
pop
and
push
cmc
mov
jecxz
cwtl
xor
ja
out
and
lock
xchg
push
mov
adc
xchg
dec
inc
push
jb
inc
popf
adc
cmc
push
lea
jmp
icebp
ret
inc
pop
xchg
aam
adc
adc
out
test
andl
daa
lret
leave
div
mov
push
add
cmp
inc
fldl
mov
and
mov
cltd
inc
mov
jnp
push
inc
xor
dec
pusha
cltd
out
ret
mov
fucomi
xchg
pushf
pop
cmp
je
pushf
and
cmp
ja
adcl
push
stos
or
mov
idivb
dec
mov
enter
popa
jae
inc
xor
xchg
adc
repz
mov
push
or
add
out
test
fwait
insl
jo
rcll
and
jge
gs
das
dec
jp
mov
sbb
jno
cmp
fcmovnbe
cmp
movsl
push
and
sub
cmp
loopne
fiaddl
add
movsl
mov
and
testl
or
jmp
dec
sbb
jg
cmpsl
sbb
pop
mov
pop
xor
ss
subb
into
jbe
or
mov
daa
mov
sbb
mov
stos
sub
repz
rcr
out
out
imul
sub
push
adc
mov
imul
out
push
push
sub
repz
sbb
pop
cmp
pop
push
sub
xchg
cmpsb
fistpll
add
imul
pop
imul
lcall
mov
pop
xor
inc
jbe,pt
rorb
pushf
mov
pop
add
jae
sarb
pop
xchg
iret
xlat
cmpsb
sub
sub
xchg
adc
ljmp
hlt
pop
pop
add
lea
mov
sub
jns
add
xchg
test
fsubrl
mov
cmp
jmp
sbb
loopne
sub
aas
pop
andb
imul
arpl
mov
mov
shll
inc
sub
mov
pop
ja
icebp
sahf
pusha
aad
and
push
mov
jns
xlat
call
jmp
pusha
scas
adc
jecxz
jns
or
sub
xchg
dec
loopne
out
mov
push
mov
add
jo
je
push
jl
adc
cld
cwtl
std
iret
and
push
or
xchg
mov
cmp
xchg
cmpsb
int3
push
cmpsl
or
cmp
lret
sub
int3
out
push
xchg
jne
ss
stc
testl
mov
gs
iret
subb
or
jns
push
jmp
aad
xor
int3
test
ja
movsb
test
adc
cmc
push
push
ret
cli
hlt
pop
cwtl
xchg
jno
out
mov
ficoml
mov
ljmp
mov
movsb
mov
xor
cltd
in
mov
lret
shrb
clc
les
roll
lret
xchg
fisttpl
dec
push
sbb
hlt
adc
movsl
mov
dec
nop
mov
inc
cmp
adc
lgs
vmovaps
movsb
mov
adc
shl
mov
dec
dec
into
jge
push
in
xor
jmp
sub
xchg
lcall
or
sub
lods
pop
out
mov
loope,pt
daa
fidivrs
cltd
icebp
adc
pop
jae
iret
fdivl
jmp
into
cltd
mov
push
enter
adc
fadds
shlb
or
sub
je
test
in
cmc
dec
inc
insl
push
jae
icebp
fcompl
fmuls
cmp
mov
fidivl
jmp
repnz
lods
inc
stc
adc
sbb
lods
and
xor
xchg
das
cmp
dec
popf
jno
in
mov
jge
inc
mov
xchg
xchg
js
add
sub
or
xchg
shl
int
lret
mov
aaa
scas
faddl
adc
scas
and
xchg
ds
repz
std
cmp
mov
call
addr16
loopne
push
sbb
inc
inc
cmpsb
jb
repz
lcall
je
push
js
add
cmp
dec
fwait
cmp
mov
outsb
es
mov
push
icebp
scas
push
dec
shll
push
ja
fnstenv
mov
mov
nop
popf
fmull
sbb
popa
xchg
inc
sbb
fiaddl
arpl
cs
ja
popf
push
loope
mov
mov
notl
xor
ds
pop
inc
mov
ljmp
ret
inc
andb
pop
add
fidivrs
mov
jbe
xor
fwait
jecxz
and
lods
xlat
ljmp
cltd
nop
gs
das
stos
dec
xor
pop
lcall
dec
sub
enter
push
test
stos
dec
xchg
and
aam
test
insb
push
loopne
leave
scas
dec
fbld
movsb
loop
inc
scas
push
xchg
pushf
clc
cmp
cmp
sahf
popa
push
dec
lahf
arpl
xchg
mov
push
mov
call
dec
test
lods
cs
out
arpl
xor
sbb
in
les
sbb
ret
xchg
adc
pusha
push
popf
fnstcw
lds
jecxz
add
mov
loop
das
push
add
sbb
cld
inc
sbb
dec
pop
push
arpl
sub
jecxz
pop
adc
imul
sbb
xlat
leave
test
stc
lea
lea
inc
mov
sbb
fadds
hlt
jp
ljmp
pop
mov
inc
pop
movsl
jne
insb
mov
aaa
fwait
popf
jmp
insl
jns
dec
lret
pushf
sub
mov
push
out
jbe
and
xchg
sarb
sahf
test
mov
jae
movsb
push
stc
notb
mov
xlat
xchg
imull
push
mov
mov
data16
pop
add
repnz
sbb
movsb
pop
dec
ret
lret
orl
das
add
xchg
rolb
dec
mov
imul
mov
dec
mull
pop
mov
test
sti
cmp
movmskps
dec
es
std
cmp
int3
jecxz
jbe
cli
add
scas
sbb
stc
insl
mov
mov
bound
add
mov
mov
nop
jne
xor
add
cmp
mov
xor
jo
jns
movsb
sahf
iret
pop
push
or
cld
push
sub
jnp
int
fsubrs
cmpsl
dec
mov
hlt
outsb
sbb
xchg
leave
ret
jle
xor
cmp
jp
push
xchg
pop
nop
mov
aaa
rol
pushf
pop
cmp
jns
enter
loop
xor
push
lods
ja
jle
xchg
push
lods
cld
in
xchg
hlt
add
sub
push
mov
pop
jb
fwait
sub
jnp
push
aam
fimuls
js
ljmp
dec
cltd
sub
mov
aas
loopne
push
and
lahf
dec
push
jl
roll
clc
jle
shlb
iret
fs
in
andb
mov
push
mov
cmp
or
test
das
loop
xor
std
push
mov
or
scas
shll
inc
xorb
scas
sub
xor
lcall
dec
std
or
in
loope
andl
mov
inc
sub
pop
into
mov
mov
int
lods
jo
movsb
push
xor
in
mov
das
jae
add
mov
push
inc
fidivl
sbb
sub
dec
in
sbb
sahf
popa
pop
outsb
in
and
pop
aaa
in
adc
aas
mov
mov
pusha
jmp
sbb
cmp
aam
pop
xor
mov
dec
and
out
aam
mov
sub
xor
mov
sbb
imul
pop
jne
jnp
pusha
push
mov
cs
xlat
add
icebp
jle
enter
lods
mov
test
mov
xor
loope
add
jb
icebp
sub
insb
addr16
or
mov
lcall
into
int
pusha
or
fdivrl
and
aam
and
int3
mov
push
jne
ja
pop
ret
stc
jno
push
and
mov
call
mov
cmp
jge
lds
subb
roll
loopne
scas
jg
ret
pusha
jmp
aas
push
mov
ljmp
inc
cmp
mov
hlt
lds
xchg
mov
ja
push
stos
syscall
cmp
xchg
xchg
sub
jbe
mov
std
lds
push
mov
aaa
cmp
fimull
mov
cmp
ljmp
popa
scas
xor
xchg
cmpb
inc
arpl
les
movsl
mov
sbb
pand
aad
loop
arpl
inc
xor
data16
inc
jns
inc
pop
in
or
lcall
ret
mov
imul
out
insl
mov
ljmp
xlat
mov
cli
test
xor
leave
jnp
pop
jmp
test
fwait
mov
sub
pop
push
xchg
xchg
in
and
mov
pop
mov
aam
aam
inc
mov
ret
inc
xor
imul
outsb
sbb
iret
loop
push
aas
mov
jmp
outsl
ja
jne
loopne
and
cmp
test
xor
cmp
sarb
in
lcall
xchg
aam
sub
xchg
pop
aad
sub
popf
aaa
pop
imul
push
jno
adc
cmpsl
inc
in
sarb
adc
dec
lahf
out
jle
push
js
mul
pop
fimuls
and
pop
xor
adc
or
ss
ja
lock
xor
jge
jnp
inc
cs
sbb
sbb
pushf
jmp
iret
push
aaa
fadds
mov
pop
ljmp
push
das
mov
ja
in
mov
mov
pop
add
jle
nop
dec
fildl
and
push
cmp
jp
aad
push
enter
stc
gs
in
and
imulb
lahf
add
adc
pop
in
xchg
sbb
scas
lret
pop
mov
pusha
rorb
icebp
pop
jg
fwait
add
out
out
std
mov
sbb
dec
jl
shr
lods
xchg
jmp
sub
jne
lods
xor
jno
cld
mov
jl
jg
leave
imul
sbb
push
insb
lods
cld
cmpsl
cmp
out
dec
notl
and
loopne
cmp
xor
pop
inc
sub
shrl
push
push
xor
push
daa
sbb
gs
arpl
sbb
aas
dec
jp
mov
lret
ja
xor
mov
jge
call
add
lea
and
or
mov
shl
inc
push
pushf
and
pop
adc
and
jno
cmpsl
mov
and
xor
jbe
clc
jne
int
ja
and
pop
ja
jno
and
pop
xor
jge
ret
push
xchg
js
push
in
jge
cmc
mov
push
jb
out
hlt
adc
aam
das
adc
dec
jge
stc
aam
or
sbb
lahf
xor
mov
push
cs
popf
sub
lahf
inc
ja
or
ljmp
movsl
push
movsb
sahf
mov
add
mov
sbb
cmc
shlb
int3
insl
sub
cmp
jp
lds
pushl
out
or
arpl
xlat
les
mov
dec
push
popf
push
sbb
jmp
inc
cld
call
test
ret
mov
dec
inc
ret
lret
mov
sub
inc
repz
lret
xor
mov
out
fmulp
neg
or
xchg
push
mov
lret
out
push
add
push
lret
leave
xor
faddp
xorb
sub
icebp
ljmp
stos
push
inc
xor
cmpsl
leave
cmp
decl
jb
add
pop
popa
dec
push
cmp
jb
sub
movsl
rcll
scas
leave
repnz
adc
and
mov
xchg
inc
jp
test
sub
xor
add
hlt
repz
daa
in
push
negl
mov
mov
rclb
daa
cs
pop
test
ja
xchg
xchg
xor
cld
imul
sub
mov
cmp
incb
xchg
mov
mov
cmp
js
std
and
cli
fimuls
pusha
mov
pop
xchg
xchg
xchg
inc
rorl
gs
push
mov
jecxz
aad
pop
loopne
jae
repnz
xchg
xor
int3
lock
test
scas
out
mov
jae
shrl
mov
pop
addb
lea
out
icebp
or
sar
outsl
fidivl
add
sbb
testb
mov
lods
addr16
xor
ljmp
sub
out
adc
aam
shll
push
push
sarl
cmpsb
sbb
dec
popa
adc
fucompp
push
fsubrs
hlt
mov
jns
inc
jp
add
xchg
inc
inc
adc
jo
mov
fisttpl
push
add
push
js
cmp
xor
mov
les
add
mov
mov
xchg
xchg
mov
cmp
xor
bound
aas
roll
dec
inc
dec
test
add
outsl
mov
outsl
pop
pop
ss
sub
sbb
xchg
subb
fsub
rcr
sbb
ja
pop
sub
sub
xchg
sti
dec
cmp
pop
lea
jle
and
movsl
mov
rorb
adc
cmp
add
ja
sub
or
sbb
lahf
or
es
scas
int
fimull
cmp
scas
mov
ljmp
popa
enter
pop
test
scas
xchg
in
mov
jp
shrl
pop
imul
push
pop
cs
jecxz
xchg
hlt
sbb
pushf
inc
js
dec
and
add
mov
mov
pop
xor
pushl
xchg
mov
mov
lods
and
jbe
iret
lock
xor
and
mov
adc
xlat
in
sbb
adc
out
inc
ss
outsl
jge
adc
and
mov
push
cmp
loop
push
test
loop
ret
sub
shll
dec
cmp
pop
push
mov
or
call
cld
or
fs
loopne
inc
addr16
adc
out
rorb
test
jle
fcoml
inc
jae
lcall
cmp
outsl
jno
pop
lcall
sarl
movsl
xchg
push
ret
pop
movsb
cmp
mov
das
movsl
mov
xchg
pushf
push
xor
stos
dec
movzwl
pop
inc
push
xor
push
jle
scas
push
ss
jg
std
dec
or
sub
es
leave
into
dec
xchg
mov
stos
xor
popf
add
pop
mov
aaa
ds
sub
xchg
or
cld
int
push
rclb
sbb
dec
or
dec
repnz
stos
xchg
leave
adc
scas
xchg
cmp
outsl
jecxz
dec
add
mov
dec
jb
pop
scas
movsl
lret
push
pop
pushl
dec
pop
pop
shr
jo
hlt
je
test
xchg
inc
test
cmpsb
cmpsb
sbb
sub
test
jmp
in
hlt
sarl
pop
jmp
mov
test
fbld
lea
int
in
pop
popf
jb
in
es
hlt
fidivl
adc
mov
jle
subb
inc
cltd
notb
int
aas
je
push
adc
rclb
jnp
ret
mov
dec
cld
popf
neg
mov
mov
dec
sbb
mov
or
sbb
leave
sub
pushf
cmp
cltd
out
lds
xchg
sti
dec
lods
jl
pop
xchg
aas
mov
addr16
not
push
hlt
add
mov
fisubrs
and
pop
add
pop
stos
aam
movsb
mov
fwait
bound
outsl
pop
aas
jl
lret
push
jp
stos
cmpsl
sub
adc
xchg
inc
or
gs
xor
jmp
xlat
frstor
dec
cmc
sbb
sarl
out
fs
xor
cmp
or
sub
dec
xor
scas
arpl
add
js
lret
add
mov
sub
or
jae
push
stc
cmp
and
nop
mov
fistpl
negl
test
push
pop
js
daa
cmpsl
or
adc
sub
add
insb
data16
sub
inc
add
xchg
dec
add
or
or
cmpsb
loope
push
cmp
jns
movsb
xchg
cmp
or
scas
cmpsb
mov
jl
hlt
pop
call
jmp
xchg
nop
dec
xchg
les
mov
or
je
add
ja
nop
icebp
outsl
out
into
arpl
adc
pop
je
push
sahf
mov
mov
jecxz
pop
clc
arpl
add
imul
sub
adc
and
test
push
xchg
inc
jle
lcall
cmpsb
addr16
adc
gs
mov
scas
rol
adc
testl
pushf
cmpb
cmp
mov
arpl
mov
push
notb
out
push
movsl
cmpsl
aam
sbb
xchg
jbe
lock
dec
ljmp
ja
out
or
insb
adc
push
sub
dec
stc
out
xchg
mov
xchg
dec
mov
mov
in
jecxz
jle
push
and
cs
sarb
stos
and
or
fildll
aam
push
sbb
in
cmpsb
sbb
les
cmp
cmpsb
dec
lret
mov
xchg
mov
adc
std
scas
dec
fildl
js
cmp
divb
mov
add
aas
lods
leave
mov
test
inc
push
outsl
jae
push
dec
sub
adc
mov
jl
or
xor
test
adc
cmp
fs
or
and
mov
testb
decb
mov
ret
xchg
xchg
andl
sahf
pop
das
loopne
rcll
fadds
sbb
mov
or
movsb
rclb
leave
jl
jle
dec
push
push
push
int
lcall
bound
xchg
movsl
mov
xchg
pop
into
fnstenv
cmp
incl
or
out
mov
mov
pop
jnp
jo
add
xchg
fldenv
bswap
mov
fdivl
pcmpgtb
lret
std
mov
out
hlt
lret
test
mov
int
int3
stc
adc
adc
je
fsts
fs
pusha
cmp
xchg
cmp
into
adc
xor
ret
xchg
iret
dec
es
outsb
adc
sub
loopne
xchg
add
pop
or
hlt
push
cwtl
cli
xorl
loopne
sahf
lods
push
loope
xor
xor
mov
xchg
xor
jmp
scas
inc
jecxz
test
and
lock
inc
and
fwait
dec
inc
mov
rorb
push
pop
movsb
push
insb
pop
rcll
cmp
out
addr16
mov
xor
shll
mov
cmp
push
lret
inc
lcall
icebp
sbb
or
mov
daa
out
jecxz
sbb
aam
pop
jg
jae
inc
sub
add
lcall
push
mov
push
sub
shlb
inc
lret
int
jmp
aaa
dec
rcl
imul
in
hlt
pop
aas
movb
push
inc
adc
insb
aam
stos
imul
scas
lahf
jae
cmpsl
imul
or
cli
xchg
lret
lcall
jecxz
movsl
inc
mov
movsb
iret
mov
jge
xchg
aaa
push
out
pop
scas
jg
pusha
push
pop
pop
pop
lcall
pusha
pop
xorb
push
insl
in
pop
lea
fs
clc
or
out
mov
xchg
test
loop
fneni(8087
out
jne
inc
cmc
mov
push
lahf
push
sti
dec
xor
and
ljmp
mov
push
sub
movb
loope
mov
mov
call
add
lahf
iret
sub
xchg
mov
jne
mov
lcall
stos
inc
mov
nop
push
fs
xchg
mov
dec
out
daa
inc
bound
scas
adc
das
adc
add
dec
inc
dec
sbbb
or
inc
mov
leave
lahf
push
mov
mov
shl
push
mov
in
lcall
es
jp
mov
stos
fbstp
cli
cmp
sbb
sub
mov
orl
std
jp
inc
and
inc
lret
cli
mov
int3
ljmp
rol
xchg
jo
pop
xchg
dec
fidivrl
int3
stos
pop
cmp
mov
cld
add
loopne
es
xchg
subl
popa
xor
int
es
jb
inc
jo
pop
popa
loope
bnd
in
out
push
repz
and
xor
sbb
outsl
cwtl
jg
test
addr16
cmp
scas
lea
inc
mov
cs
test
mov
or
mov
add
imul
push
idivb
sbb
mov
lcall
adc
sbb
jmp
jnp
outsb
mov
cmpsb
test
xorl
movsb
push
or
cwtl
fsubs
jmp
or
cmp
mov
sbb
push
and
sbb
push
mov
mov
pop
ljmp
pop
mov
add
jno
pop
mov
mov
mov
mov
and
inc
push
mov
sti
jmp
jle
or
sub
arpl
mov
add
fisubrl
js
jnp
test
push
jmp
pop
xor
add
sbb
lcall
pop
lret
xor
pop
cltd
loopne
xchg
jp
xor
ret
test
int
or
fs
les
cli
xchg
push
loope
pop
jno
push
div
lret
incl
sbb
sbb
dec
pop
stos
out
cld
xchg
and
mov
or
sub
and
lods
or
sub
std
nop
scas
xchg
inc
dec
pop
sbb
jns
or
andb
push
pop
ljmp
std
and
and
cwtl
jp
pop
mov
pop
icebp
outsl
insb
push
loope
sbb
outsl
aas
or
pop
fisubrs
std
incl
add
shlb
call
adc
sbb
push
pop
inc
sub
jae
sub
lock
cmpsl
push
pop
or
cmpsl
cmove
adc
test
pop
sti
xchg
fwait
outsl
lcall
mov
mov
xor
mov
pop
mov
adc
push
inc
shlb
xor
sub
xchg
xchg
jmp
jnp
pop
or
stos
adc
test
stos
mov
xlat
stos
mov
orb
mov
in
inc
jge
sbbb
jg
iret
outsb
xchg
insl
popa
sahf
push
jge
enter
je
add
cli
ss
jecxz
add
stos
sbb
xor
dec
fiaddl
outsb
cmp
cld
incb
jle
mov
scas
or
or
hlt
cld
push
push
daa
and
fcomps
xlat
lret
sbb
fnstenv
ljmp
int3
pop
jecxz
test
dec
int3
call
sub
inc
sbb
out
xor
out
pushf
orl
fistl
sub
arpl
jnp
jl
sti
add
push
test
push
fnsave
push
data16
fstps
inc
push
inc
test
outsl
mov
add
xor
mov
mov
dec
bound
lret
jbe
stos
pop
cmpsb
or
das
dec
insb
push
pop
pop
nop
mov
stc
xchg
sub
adc
push
cmp
xor
mov
push
pusha
jnp
loopne
xchg
dec
or
sti
int3
dec
dec
sti
jecxz
jecxz
mov
out
sahf
xlat
and
movsb
xor
data16
jne
pop
fisttps
xchg
mov
insb
mov
pusha
aad
sbbl
mov
aaa
aaa
jle
pop
andb
mov
pusha
negl
leave
and
fsts
jb
xor
mov
aaa
mov
outsl
xlat
xlat
out
push
fisttps
addr16
pop
xchg
push
lahf
ret
fisubrl
lret
xchg
cmp
jecxz
xor
push
dec
jno
adc
push
and
movsb
fdivp
ret
loopne
cmp
jnp
mov
add
jle
add
pop
pop
mov
mov
les
jnp
loopne
dec
xor
addb
loope
sbbb
pop
lcall
xlat
ret
enter
mov
aam
add
jg
rorb
iret
jb
mov
sub
xor
je
xor
dec
mov
mov
ret
enter
jb
test
pop
int
sbb
stc
adc
jmp
xor
mov
orb
and
inc
pop
pop
adc
lret
movsl
inc
inc
dec
test
jge
xchg
aam
outsb
imulb
adc
or
or
bound
and
push
sub
test
stos
sti
or
pop
fst
mov
pop
dec
dec
add
imul
mov
mov
jge
fiaddl
push
daa
add
adc
loopne
mov
inc
es
jnp
lret
add
inc
inc
dec
sti
not
outsl
pop
fwait
xchg
and
stc
sahf
sub
sub
cwtl
or
xchg
xor
fmuls
mov
shrb
push
mov
dec
repnz
stc
std
pop
jae
jo
sbb
push
fdivrl
sbb
xchg
xchg
insb
pushf
loopne
sahf
ret
outsb
repnz
pop
gs
jle
jl
stos
into
hlt
mov
inc
mov
shrb
frstor
adc
pop
cwtl
or
or
mov
inc
neg
cmp
add
dec
cmpsl
lds
mov
ret
das
in
jge
bound
push
jge
cmpsl
addr16
pusha
mov
call
adc
or
dec
idivb
icebp
xchg
gs
fisubl
test
mov
stos
ljmp
dec
inc
hlt
push
fwait
or
jo
lret
dec
hlt
aam
aas
in
xchg
sbb
adc
ret
loope
or
nop
xor
or
mov
add
adc
popa
inc
scas
and
dec
xchg
sbb
repz
xor
mov
addr16
repz
inc
stos
stos
daa
insl
in
add
push
push
xchg
jne
push
lods
fisttpl
xchg
ds
or
iret
lret
std
push
mov
adc
xchg
pop
pop
aad
pusha
incb
popa
jb
mov
mov
bound
jl
xchg
ret
jmp
pop
cmp
test
pushf
dec
jp
mov
in
mov
push
mov
jno
xchg
mov
cltd
shrl
add
pop
sbb
xchg
mov
ret
lods
sbb
add
and
mov
jns
pop
sub
xchg
out
pop
cmc
and
inc
fistpl
frstor
mov
ret
or
icebp
icebp
sub
mov
ficompl
cmp
out
xchg
rol
jge
das
mov
mov
daa
int
pop
ja
xchg
cmpsb
and
mov
popa
push
sbb
adc
xor
xchg
int3
int3
add
je
in
push
push
jno
add
leave
sub
mov
cmp
push
mov
ret
ja
dec
xor
addb
pop
push
data16
in
and
or
popf
mov
add
xor
gs
mov
cmp
clc
lods
lret
mov
aas
stos
pop
and
mov
stos
adc
xor
repnz
pushf
jp
xor
outsb
xor
lods
fnstsw
data16
or
inc
mov
outsb
icebp
stos
push
jl
cwtl
cmpsl
ljmp
fsubr
popa
cmp
ja
mov
insl
dec
mov
out
cmp
cmp
sbb
add
into
movsl
lds
lret
in
inc
repz
fiaddl
aaa
clc
mov
jg
mov
punpckhwd
jo
imulb
shrb
cltd
sbb
insl
cmp
jl
or
dec
lret
cmp
ja
imul
sti
sub
sbb
scas
sbb
lret
xor
aad
sub
lds
jnp
add
dec
adc
fsts
and
adcl
das
ja
repnz
test
lahf
pop
fists
and
rorb
push
mov
add
sbb
push
es
pop
mov
xor
sti
xlat
jle
jle
inc
adc
jbe
inc
loopne,pn
fstps
push
popa
push
outsl
or
addr16
decb
and
mov
jo
push
or
clc
xor
pushf
sbb
movsl
loope
jnp
shrb
and
mov
xor
push
lds
fidivl
mov
mov
pop
fldcw
dec
aam
jg
dec
or
inc
dec
pop
int
pop
xor
in
sbb
sub
scas
xchg
mov
sbb
imul
cmpl
push
push
sub
xchg
add
out
inc
sbb
dec
aam
adc
or
adc
adc
lahf
fiadds
sbb
lret
push
pop
mov
cmp
sbb
mov
fucom
sub
sbb
out
mov
lcall
mov
inc
cmp
push
dec
clc
ss
pop
push
sarl
mov
cmp
aas
nop
push
push
add
add
mov
aaa
jne
cmp
sti
and
push
inc
mov
ret
mov
mov
adc
sbb
fs
and
and
ds
add
fsts
xor
push
inc
gs
sbb
movsb
mov
dec
xchg
loop
pop
xor
mov
ljmp
inc
or
and
rorl
jnp
and
iret
popl
xchg
add
add
cmp
adc
push
and
inc
mov
lcall
and
xchg
mov
sub
xchg
outsb
add
xchg
sub
mov
lcall
stos
clc
jl
mov
int3
lcall
jbe
icebp
out
out
scas
jecxz
inc
ret
dec
lret
ffree
repz
xchg
inc
int
jmp
sbb
stos
cli
es
pop
mov
call
fiaddl
fsubs
test
add
push
insl
or
add
dec
mov
or
adc
mov
clc
aad
xchg
pop
stos
xchg
or
inc
pop
pop
push
pop
mov
rcrl
stos
ret
xchg
hlt
add
mov
stos
xrelease
xchg
sahf
jae
xor
xchg
loopne
mov
mov
sti
imul
push
sub
and
or
lock
std
inc
push
push
xchg
gs
pop
in
and
inc
faddp
xchg
insb
push
call
add
fcmovnb
jne
in
int
ret
imul
xchg
jns
xor
mov
in
aad
outsb
xlat
xor
lea
mov
mov
addr16
add
xchg
lahf
pushl
jne
int3
fcomi
xor
or
int
and
lock
sub
jp
ds
sahf
xchg
test
ja
xorl
scas
negl
mov
xchg
pop
int
jbe
test
mov
fucomip
mov
bound
out
mov
repnz
inc
xor
cwtl
sbb
pop
repz
outsb
imul
push
dec
inc
clc
sbb
dec
push
sahf
fsubl
push
stos
xor
xchg
xchg
jno
aas
and
sub
scas
inc
jle
push
or
call
ss
jp
pop
loope
add
fnclex
and
inc
mov
testb
mov
mov
jmp
pop
inc
or
nop
lret
ret
loopne
das
jnp
outsl
add
mov
pop
adc
mov
adc
push
pop
lods
adc
iret
sub
in
push
ret
push
lcall
inc
int
mov
push
int3
mov
jmp
and
mov
sbb
fadds
pushf
insl
mov
or
sub
jae
or
fimuls
and
pop
data16
mov
stos
add
pop
xor
enter
movsl
add
pop
test
or
or
push
cmp
push
lds
ljmp
xchg
test
mov
sarl
fwait
xor
xchg
out
add
sbb
in
gs
add
cld
xor
in
test
in
xchg
dec
xchg
cs
pop
push
mov
jl
cwtl
out
adc
add
cmc
in
imul
into
and
imul
cwtl
xor
pop
data16
mov
mov
andl
adc
imul
fbld
push
jnp
jmp
mul
xlat
or
xchg
divb
dec
xor
call
dec
cmp
lcall
ss
popa
imul
and
clc
popf
inc
enter
push
push
fadd
dec
inc
add
cmp
imul
mov
jae
pop
sbb
mov
jnp
icebp
mov
hlt
push
pop
jmp
stos
adc
add
int3
inc
cmp
loopne
movsb
sbb
xchg
ja
test
dec
inc
jl
icebp
xchg
mov
arpl
sub
imul
jns
or
dec
leave
int
cmpsb
cmp
sbb
stos
ret
add
xchg
add
cmc
imul
dec
mov
js
stos
js
shrb
xchg
scas
push
outsb
and
lods
mov
mov
push
push
pop
lock
sub
sbb
cmp
iret
out
test
cld
movsb
lock
or
jnp
jmp
cs
fwait
enter
mov
pop
dec
ljmp
stos
adcb
lods
or
dec
rol
lea
mov
push
xchg
jbe
outsb
xor
nop
or
xchg
sub
mov
push
iret
or
cltd
je
shlb
call
addl
cli
fisubrl
sbb
inc
ss
arpl
pushf
test
out
nop
xchg
rcrl
clc
mov
or
add
out
dec
adc
popf
ja
cmpsb
pop
add
dec
loope
mov
repz
movsb
jmp
lcall
mov
xor
push
jb
out
jb
inc
xchg
arpl
jno
into
and
mov
xorb
push
sub
jo
dec
and
mov
add
and
inc
inc
mov
jle
icebp
dec
xchg
add
xor
fdivr
xor
cmp
out
and
sub
data16
mov
adc
sarl
test
lea
mov
stos
xor
lret
scas
test
in
dec
orl
lcall
cmp
mov
inc
js
fldl
lret
adc
lock
xor
loopne
nop
lret
jl
dec
inc
dec
pop
adc
retw
out
fwait
sbb
in
pop
inc
in
mov
xor
call
jecxz
sbb
sub
mov
sub
mov
xor
jo
roll
mov
fsubrs
and
lea
fs
decl
shll
pop
pop
sub
aad
jbe
inc
dec
push
ficompl
mov
jbe
mov
mov
jmp
push
stc
bound
insl
loopne
shll
mov
add
mov
inc
adc
and
or
inc
push
push
sub
cld
test
sbb
pop
xchg
mov
xchg
out
jbe
dec
mov
insb
fcoms
cli
pop
jle
and
out
mov
xchg
hlt
cmp
filds
icebp
or
add
push
clc
cld
aam
out
mov
and
mov
or
push
mov
mov
push
mov
xor
inc
jmp
pop
das
push
adc
in
mov
jmp
daa
ss
int
lock
mov
jl
aad
mov
das
mov
aam
ds
mov
leave
out
lahf
std
arpl
push
xor
mov
add
mov
sbb
ljmp
leave
cwtl
pop
inc
inc
sbb
mov
hlt
test
push
gs
or
inc
xlat
mov
sbb
push
adc
or
lock
or
leave
pop
mov
jmp
dec
andb
cs
lret
call
cmp
add
mov
and
out
pop
xor
mov
xor
pop
es
mov
mov
mov
xorb
mov
jbe
das
fwait
mov
dec
loopne
mov
jp
mul
movsb
sbb
idivl
in
rcr
std
out
outsb
out
test
fistl
sub
nop
int
ror
mov
push
repnz
sahf
xor
jae
add
inc
aas
or
jnp
int3
es
push
jns
sbb
ret
push
ss
movsb
or
mov
notb
xchg
adc
int3
jne
dec
cmp
and
outsl
xchg
dec
mov
mov
dec
fucomip
rcrb
inc
mov
popf
cmp
hlt
popl
mov
aad
mov
xchg
and
out
mov
ja
mov
cmp
loop
test
ror
sbb
popa
mov
mov
or
xor
add
loope
outsl
aam
sahf
push
mov
or
cmp
pop
pop
push
mov
fdivrp
enter
mov
lret
jmp
or
pop
xlat
pop
mov
lea
out
lcall
loop
movsl
and
push
mov
jp
mov
ljmp
sbb
push
xor
ja
mov
cld
push
shl
or
lret
xchg
fmull
inc
pop
jno
insl
push
daa
mov
or
or
pop
add
pop
popa
or
mov
xor
push
xchg
sub
adc
add
insl
pusha
jle
pop
nop
loope
subb
add
movsb
shll
repnz
or
cmp
pop
add
inc
int
sub
out
sbb
sbb
cltd
scas
adc
lea
jo
sub
and
jae
loop
mov
jmp
fimull
cmp
mov
push
xchg
mov
xor
mov
or
cltd
xor
or
repz
mov
jno
inc
cmpsl
enter
lret
scas
jmp
or
xchg
cmpsb
jne
or
adc
xor
push
mov
xchg
mov
push
mov
inc
add
out
imul
jne,pn
imul
push
xchg
loopne
hlt
int3
pop
test
mov
adc
jbe
dec
loop
mov
lahf
and
sahf
pop
xor
aam
xchg
outsl
pop
xorl
aam
jg
xchg
xlat
jne
test
hlt
cli
adcl
and
xchg
pop
jns
or
cmpsb
cli
sub
sbb
gs
xchg
aam
mov
and
ja
dec
outsb
and
into
or
orb
lods
loope
out
insl
lret
int
mov
lods
and
repnz
pushf
arpl
fisttpl
cmp
movsb
popa
or
dec
sub
test
jne
lods
or
cltd
lock
xor
ja
cmp
scas
fidivs
test
mov
enter
inc
push
sbb
cs
sbb
inc
mov
das
cmpsl
or
scas
sbb
mov
lret
push
in
mov
fninit
out
mov
mov
insb
cmpsb
adc
adc
dec
cmp
ret
adc
xor
jo
cmc
int3
mov
orb
jl
mov
mov
lods
loop
fs
mov
into
fdivp
int3
lret
leave
fdivrl
mov
test
fmull
sbb
jg
xor
sub
mov
inc
cli
mov
adc
cli
inc
test
lea
incl
test
dec
addr16
dec
sub
cmp
pop
xor
dec
and
sbb
push
aam
pop
push
ljmp
mov
push
sbb
jnp
in
jnp
adc
lods
loopne
xchg
sbbl
jmp
cmp
aaa
das
inc
aas
lods
xor
cltd
and
pop
pop
mov
imul
testl
adc
cmp
xor
bound
dec
scas
lcall
ljmp
loop
or
inc
and
push
adc
adc
sub
repnz
inc
fs
fisttpll
or
mov
add
pop
and
add
daa
decb
add
out
dec
inc
cli
or
in
imul
lods
xchg
push
sub
jl
mov
mov
lret
enter
inc
loope
push
clc
cld
jmp
cmp
div
icebp
cmp
mov
imul
cld
ljmp
cmp
dec
cmp
scas
sbbl
dec
xchg
sti
data16
in
and
rcll
or
or
mov
sbb
ret
test
cmc
loope
movl
jo
jae
jne
lds
lds
in
inc
movsl
inc
addr16
aam
insl
stc
xor
cltd
jb
inc
testb
pusha
je
popa
pushf
arpl
inc
fisttps
dec
mull
pusha
clc
mov
mov
inc
fcmove
dec
ja
xlat
push
mov
lahf
jb
xchg
cli
inc
adc
mov
sbb
mov
mov
jmp
pop
insl
in
mov
andb
adc
int3
dec
fdivrs
ja
mov
adc
jecxz
pusha
mov
cmpsl
sarb
sub
sahf
in
mov
lret
cmpsl
lcall
dec
scas
inc
dec
adc
fistpll
lock
sarl
inc
add
sbb
mov
cmp
sub
sbb
sub
cmp
pop
cmp
xchg
sarb
lea
sbb
cmp
sub
xchg
mov
sbb
in
test
sbb
ret
pop
mov
or
dec
icebp
jo
sti
loope
and
in
jecxz
fwait
push
loope
push
dec
push
fs
mov
sahf
dec
push
xlat
fs
xchg
loop
shrl
push
cmp
cltd
dec
in
mov
adc
adc
fadds
pusha
lds
push
jl
pop
arpl
ja
inc
arpl
in
dec
imull
stc
mov
std
sbb
jmp
inc
jle
mov
add
cmpsb
dec
jmp
jl
dec
jae
add
jno
shll
mov
lods
imul
sbb
repz
or
lret
int3
mov
test
cmp
sub
mov
sbb
stos
adc
insb
push
jae
push
enter
popa
cmpsb
loopne
nop
or
sub
or
dec
insb
in
cmpsl
notb
int3
out
cs
pop
push
push
out
pop
jnp
mov
jl
shll
stos
imul
mov
hlt
add
jne
scas
or
insl
sbb
sub
add
das
in
xor
mov
or
test
les
push
adc
adc
xchg
and
outsl
cmp
pop
lds
xor
add
jp
scas
sub
lods
add
pop
adc
xor
jmp
xlat
push
stos
ficoml
fsub
pop
incl
stos
sub
inc
adc
push
imul
lret
gs
movsb
push
pop
test
xor
dec
cmp
leave
stos
xor
mov
clc
mov
mov
aam
pop
aam
sbb
push
stos
hlt
lahf
jnp
je
iret
add
cli
push
aad
sarl
mov
fmuls
adcb
jp
xor
ja
sahf
pop
cli
xor
push
ja
outsb
adc
jae
outsl
int3
lcall
jp
int
inc
test
jo
push
push
out
loope
gs
dec
ret
int
fsubrs
fwait
cmpsl
sub
shrl
mov
test
arpl
stos
pop
iret
jle
push
xchg
sub
pop
cld
dec
push
jbe
push
jle
jecxz
xchg
ja
incb
cvtpi2ps
lods
sbb
sahf
mov
inc
xor
je
mov
lahf
push
inc
or
xchg
mov
in
cmp
int3
xor
jge
orb
mov
fisubl
dec
lock
add
cmp
mov
mov
jg
fwait
xor
jb
pop
jnp
outsb
cs
add
les
pop
cs
cli
imul
or
pop
rclb
mov
add
or
lods
adc
add
clc
ret
popf
sbb
in
dec
jbe
jl
cltd
bound
jg
cmpsb
xor
xor
loopne
xchg
lcall
xor
test
jbe
shll
std
or
push
jp
arpl
xor
aam
addr16
ljmp
roll
jmp
mov
hlt
clc
adcb
push
push
push
orb
jmp
cmp
or
push
test
pop
bound
imul
mov
jnp
dec
pop
sbb
xchg
xchg
push
push
mov
jp
xor
mov
and
mov
adc
test
pushf
shl
dec
mov
push
into
and
pop
mov
mov
pusha
subl
cmpsb
ljmp
adc
aaa
or
incb
push
fiadds
out
out
pop
loop
popa
sbb
mov
insl
xor
jg
pop
lods
mov
mov
jae
aaa
mov
add
pop
std
sahf
add
faddl
dec
jbe
fisubrl
imul
add
aaa
pop
xor
xchg
int
loop
push
push
cld
inc
ficomps
xor
inc
aad
pop
xchg
lock
lds
test
cmp
call
or
or
ud2
xchg
pop
mov
jnp
and
xchg
mov
mov
mov
int3
pop
or
scas
ret
popf
pushf
mov
sti
int
mov
insl
mov
pusha
fisubrl
fsubrp
in
cmp
icebp
hlt
mov
xor
sar
ljmp
fwait
cmpsl
pusha
test
dec
pop
pushf
sahf
cmp
sbb
mov
add
or
pop
xor
cmp
aas
mov
and
jecxz
addr16
insl
add
adc
push
stos
out
ds
fwait
inc
cmp
or
outsl
mov
xor
xor
mov
push
and
stos
push
inc
cmc
lret
cld
cmpsb
movsl
inc
movsl
cmp
cs
push
dec
jne
add
jmp
sub
mov
push
lods
ss
inc
xlat
and
jp
jo
insb
add
cmp
sub
cld
adc
cmc
in
jae
jle
out
and
shr
adc
push
push
fwait
xchg
adc
out
sub
pushf
pop
dec
aad
fwait
dec
pop
mov
lods
push
push
jo
rcrl
rorl
sarb
jg
xchg
sbb
mov
dec
sub
xor
std
fdivrl
adc
push
add
test
jl
lock
enter
push
add
mov
jno
sti
jge
lahf
mov
push
scas
and
call
xor
inc
xor
imull
lea
xor
ficompl
popl
sub
push
or
es
testl
rclb
cmp
movsl
jne
or
add
pop
jle
jge
jge
sbb
popf
push
idivb
lahf
clc
jmp
inc
sbb
xor
sub
mov
jmp
js
pop
sub
sti
insb
fists
scas
adc
adc
insl
add
aam
arpl
and
lret
insl
dec
aas
ret
dec
push
in
ljmp
jmp
daa
mov
pop
cmp
pop
jno
sbb
lret
push
sbb
mov
fldenv
cwtl
dec
leave
cmp
fcomps
lcall
add
jne
insl
sbb
icebp
sti
sarb
jne
pop
mov
mov
scas
xchg
cli
inc
pop
into
fsubl
sub
divb
js
jbe
bound
loope
jae
fnclex
push
push
fs
lock
fwait
and
imul
fucomi
out
pop
pusha
mov
out
xchg
mov
cmp
xchg
ret
and
add
pop
dec
and
imul
lahf
xorb
inc
jbe
sbb
daa
int
sahf
push
jo
movsb
test
loop
in
xor
xor
fidivl
mov
shlb
inc
adc
repz
push
ss
xor
rolb
insl
imul
icebp
insl
pop
lea
into
mov
es
daa
jbe
jle
mov
add
addr16
ficompl
sub
inc
pop
adc
call
xor
adc
popa
mov
aas
xor
pop
sub
or
and
mov
clc
inc
stos
dec
jo
nop
adc
xor
iret
mov
mov
mov
jae
add
add
jb
jle
inc
clc
shll
mov
cmpsb
mov
insl
lds
add
cmp
xor
lcall
xchg
pop
shr
lds
in
std
iret
les
fidivrl
es
pop
rorb
into
cmp
mov
aas
inc
rcpps
lcall
sbb
pop
add
mov
pop
pop
testl
test
andb
xchg
fiadds
and
pop
sbb
lods
mov
lcall
aam
scas
enter
push
int3
shll
sbb
out
jge
outsl
cltd
shll
sub
jnp
push
dec
push
sub
xor
xchg
outsl
clc
fnstcw
addr16
sub
add
mov
jae
imul
sbb
pop
mov
mov
loop
cmc
jns
stos
int
push
aaa
in
sbb
cltd
fucomp
pop
xchg
ret
adc
lods
pushl
push
mov
dec
cmpsb
addr16
mov
fs
call
in
out
jno
cltd
andb
jne
lock
xchg
xor
test
out
fistps
mov
stos
xor
xchg
xor
ljmp
jp
aam
hlt
sub
stc
insb
iret
jl
ret
lock
xlat
adc
or
jnp
scas
cld
mov
repnz
ret
aad
les
pop
inc
and
stc
or
icebp
xchg
push
jbe
push
mov
call
adc
sti
repnz
lods
sub
insl
or
loopne
sub
push
mov
fstpt
pop
stos
sub
rorb
mov
mov
xchg
loopne
push
jge
push
dec
filds
inc
decb
xacquire
sub
int
scas
insl
sbb
push
adc
xor
sahf
call
fisttpl
sbb
test
test
gs
cmp
ds
out
lret
subb
xchg
fisubs
out
popf
jge
sub
jmp
lods
jl
xchg
push
inc
fnstcw
int3
sub
xor
lds
lret
stos
jle
fcompl
cld
bound
mov
dec
scas
xor
pop
sbb
jne
add
mov
outsb
pushf
rolb
mov
xor
data16
lahf
sub
pop
lret
fstpl
sahf
imull
aam
jge
pop
mov
roll
push
cmp
rorl
jnp
and
lods
cmp
subb
mov
fs
out
xchg
sub
and
mov
loope
out
icebp
out
dec
jl
nop
sbb
test
nop
cmp
lods
pop
cli
gs
jecxz
shlb
shlb
pusha
fstl
push
movsb
and
aaa
data16
into
int3
or
loopne
add
dec
out
adc
jmp
mov
inc
addr16
mov
jl
leave
pop
push
jl
mov
test
popf
push
call
repz
push
and
mov
xchg
mov
cmp
mov
popf
dec
jg
in
mov
cmp
jae
cmc
pop
cs
bound
cli
jp
add
mov
imul
ljmp
xchg
jns
mov
orl
sbb
addl
sub
mov
or
mov
into
add
xchg
push
in
push
jecxz
aaa
xor
cmp
pop
cmp
push
and
push
dec
push
rorb
cmpsl
xchg
xchg
and
cmp
cmpsl
xchg
sbb
lods
mov
hlt
jle
mov
out
lret
fcmovnbe
pop
inc
repz
fstpt
cmpsl
push
mov
sbb
addb
and
push
jae
popf
cs
icebp
add
cmp
pop
pop
rcrb
lret
lods
mov
or
and
push
jns
sub
nop
insl
mov
jg
pop
xor
lret
push
roll
mov
xchg
adc
ret
imul
mov
cmpsb
sub
rcrl
dec
gs
in
jnp
adc
xchg
mov
ret
push
push
dec
cld
xchg
sahf
loopne
xchg
xor
push
iret
sub
stos
roll
adc
xchg
dec
lods
cmp
into
ljmp
xorl
cmpsb
inc
stc
stc
add
gs
gs
adc
fwait
inc
xchg
lods
enter
or
sbb
inc
std
test
xchg
pop
xchg
dec
test
and
fcomip
fsubl
xor
mov
cmp
or
sarb
adc
push
outsl
adc
push
cmp
sbb
adc
test
mov
imul
dec
jno
jne
insl
mov
test
cmp
inc
loop
imul
push
into
mov
test
jbe
inc
mov
js
stos
sbb
jnp
mov
cmp
filds
in
lods
test
sarb
add
sbbl
outsl
shll
inc
xor
cmp
inc
inc
aam
icebp
repz
repnz
inc
mov
popf
popf
pushf
out
int3
dec
movsl
andb
jecxz
or
cmp
aas
mov
jne
shrl
mov
xchg
pop
adc
cli
incb
lcall
lods
subl
pop
iret
into
adcb
bound
jns
cli
sahf
jae
aam
xor
dec
mov
xchg
inc
cld
mov
inc
push
out
jp
loope
in
mov
xlat
xchg
outsb
inc
or
mov
jecxz
mov
jge
dec
fsin
xor
xor
pop
fbstp
mov
mov
mov
imul
bound
jno
or
jnp
orb
mov
testb
insb
fmuls
ret
xchg
xchg
or
sub
scas
jae
pusha
or
jb
ljmp
pop
in
or
mov
sbb
adc
or
jg
andb
aaa
lcall
jns
add
outsb
ror
js
add
test
pop
pop
or
mov
adc
js
outsb
movsl
push
xchg
out
add
jno
iret
xlat
nop
gs
adc
xchg
sbbb
inc
adc
xlat
lret
aaa
enter
add
xchg
mov
mov
pop
cltd
dec
jp
jo
lcall
fsubrs
push
pop
mov
rclb
pop
sbb
js
lcall
mov
gs
cmp
or
js
push
sub
push
push
lods
movsb
inc
loop
mov
sarb
pop
lret
sti
pop
popa
adc
cmp
testb
adc
pop
mov
and
xor
and
hlt
jmp
jle
cmp
mov
adc
mov
pop
xchg
mov
and
out
lahf
adc
and
jns
xchg
xchg
mov
xlat
xor
mov
xchg
and
lds
rorb
xchg
xchg
push
pushf
inc
lret
fnsave
aas
aam
xor
cli
lret
ret
mov
jnp
fldt
push
pop
scas
dec
jne
movsl
fwait
imul
sti
sahf
in
cmpsl
imul
jae
inc
cmpsb
add
pop
ds
push
lret
loope
cmp
mov
orl
xchg
dec
inc
shll
jnp
add
int
lea
xchg
test
xchg
fwait
jmp
arpl
push
xor
addb
xlat
cmp
and
mov
shlb
push
mov
dec
sub
inc
adc
sub
xchg
aaa
rcrb
cli
sub
dec
dec
mov
and
push
xor
and
mov
pop
sbb
mov
sub
xchg
dec
mov
mov
inc
sbb
adc
jge
inc
aad
popa
daa
cmp
sbb
mov
adc
dec
push
and
repz
daa
loopne
aas
xor
xor
dec
dec
inc
dec
sbb
pop
popa
imul
repz
mov
jo
or
lret
adc
push
inc
punpckhwd
xchg
ret
adc
xchg
mov
test
fisttpl
fwait
pusha
lcall
mov
push
out
dec
mov
mov
ds
cmpsl
mov
inc
rcr
inc
adc
cmp
push
fisttps
dec
cmc
outsb
addb
cld
js
popf
mov
xchg
cmp
in
dec
mov
out
jecxz
ljmp
out
not
insl
es
cmp
and
rorl
jle
adc
adc
ds
mov
inc
ficoms
mov
insb
mov
push
aad
adc
add
cmp
cmp
inc
sub
xchg
push
je
sub
fst
iret
repz
call
ss
and
and
fldcw
jns
movsl
cwtl
jbe
insl
stos
stos
std
push
sbb
dec
dec
fimuls
sub
mov
lret
push
jmp
push
fidivs
or
ss
scas
cmc
fwait
mov
push
in
iret
out
popa
push
es
cmp
inc
push
cmpsb
in
or
daa
or
popa
enter
mov
inc
jp
inc
mov
pop
dec
jns
mov
sbb
pop
cmpsl
mov
mov
pop
lock
sbb
test
jmp
rcrb
fsts
jl
jle
push
xchg
pushf
mov
mov
leave
push
sbb
lock
sub
lods
add
inc
jbe
xor
xor
cmp
insb
out
je
jnp
das
or
pop
cmp
cmpsl
aad
in
pop
into
mov
leave
mov
cmc
mov
js
pop
int3
sahf
movsl
incb
and
fwait
mov
test
xor
cmc
add
cmp
mov
rcrb
mov
vpsllq
fildll
rolb
mov
lcall
data16
adc
inc
ss
jne
mov
nop
rolb
sub
mov
xor
test
jae
xor
loopne
xchg
pop
mov
pop
lea
xchg
dec
aam
test
jbe
clc
and
nop
in
push
push
pop
and
imul
sub
mov
hlt
sub
aas
popf
push
dec
cmpb
inc
dec
xor
fstps
dec
cld
sahf
fs
pop
cmpsl
cli
add
out
jmp
push
xor
test
jo
loop
push
xor
out
pop
add
sbb
cmpsb
mov
xlat
add
addr16
or
nop
out
sar
movsb
mov
push
add
add
push
jno
pop
mov
cmp
jo
jnp
xor
outsb
jnp
add
cmp
jns
pop
cmc
stos
mov
jo
add
aam
dec
and
cmc
in
insb
inc
adc
mov
outsl
xchg
or
cmpsb
fimuls
fldl
clc
icebp
cltd
imul
inc
mull
or
outsl
lds
imul
ja
push
cmp
pushf
xchg
int
add
lods
in
mov
and
rorb
arpl
push
mov
xchg
dec
mov
jns
dec
rcll
pop
xchg
or
push
cmp
xchg
popa
lods
mov
and
jg
pop
fs
cmp
adc
in
mov
fldcw
imul
xor
lds
lods
sub
sub
out
dec
faddl
mov
mull
xchg
mov
push
dec
adc
shr
jmp
push
scas
pop
aad
gs
push
out
ja
xor
lahf
adc
dec
subb
xchg
dec
xor
xor
pop
in
adc
popf
shrl
jge
mov
aad
sbb
push
es
xor
dec
les
aam
xchg
int3
leave
sar
fldl2t
mov
int3
gs
jecxz
xchg
sub
nop
jp
cli
mov
sub
mov
push
hlt
div
dec
inc
xchg
or
lret
nop
out
dec
shl
xchg
or
hlt
bsr
inc
mov
adc
cltd
adc
push
push
out
pop
or
lock
jp
fstpt
push
stc
xor
mov
addb
adc
inc
jnp
jno
xor
popa
mov
xchg
or
imul
popf
ja
pop
cmp
cmp
ljmp
cmp
mov
and
adc
arpl
inc
out
aaa
jg
xlat
and
pop
cmp
mov
test
ss
fiaddl
dec
jge
das
pop
outsl
add
popa
js
inc
mov
add
push
inc
pop
add
outsb
mov
xor
aad
mov
stos
cmpl
adc
addr16
xchg
mov
jp
inc
adc
push
call
mov
sbb
xor
sub
in
cmc
popa
nop
jmp
je
dec
aam
ja
cmc
push
ss
mov
inc
pop
push
pop
mov
dec
into
pusha
test
mov
pop
movsb
fxch
ljmp
cmc
out
mov
movsb
lret
testb
push
sahf
stc
subl
int3
sbb
mov
xchg
call
mov
cwtl
ljmp
pop
and
adc
mov
int3
sahf
cmp
repnz
icebp
jmp
nop
fwait
add
mov
xchg
ror
push
xchg
mov
hlt
pxor
dec
cmp
ret
fbstp
xchg
sahf
inc
sbb
sti
jmp
sahf
xchg
add
lods
xchg
jl
jmp
xchg
test
and
adc
aad
pusha
rcrb
xchg
pop
js
lods
xor
aad
xchg
push
js
repnz
inc
mov
mov
ljmp
int
cmp
testb
pushf
dec
data16
or
cmp
int
mov
int3
dec
pop
jle
xchg
cwtl
dec
stos
mov
nop
das
inc
mov
bound
push
rorl
sarb
dec
lea
mov
pop
and
xchg
ficompl
mov
inc
clc
dec
xchg
pop
pop
mov
or
stc
adc
mov
jns
in
lahf
fidivs
fs
xchg
inc
mov
gs
sbb
cmp
sahf
rcr
dec
leave
les
adc
mov
sti
jge
or
lock
enter
enter
add
fcoms
out
push
loopne
js
insb
insl
pushf
out
cmp
xor
mov
js
movhps
stos
dec
push
sti
sub
push
cmp
ret
shr
sbb
pop
imull
sub
dec
mov
popa
cmp
aaa
data16
mov
imul
push
shll
cmp
pop
fs
mov
hlt
and
cs
sahf
aad
icebp
mov
jl
or
stc
sub
fldlg2
test
in
dec
subps
cld
adc
cmpsb
xor
or
push
test
xor
lahf
ss
adc
xlat
fwait
js
push
jb
js
cmp
mov
adc
lods
aas
cmp
add
in
cmc
sub
add
mov
xchg
dec
xchg
std
inc
pop
jg
push
testl
loop
cmp
pop
sbb
sahf
divb
xchg
bound
inc
push
roll
push
sbb
popa
fs
sar
xlat
insl
mov
fisubrl
xchg
cwtl
pushf
das
adc
jae
and
in
mov
and
sub
mov
clc
xor
add
outsl
push
dec
dec
mov
in
lods
push
fwait
ljmp
rolb
popa
mov
out
pusha
jo
fbstp
mov
push
shr
push
les
lods
loop
test
mov
into
xchg
shll
ret
mov
movsb
loope
mov
cmp
leave
sti
xor
mov
mov
or
mov
stos
cmp
xchg
adc
fisubs
mov
mov
aaa
mov
inc
mov
push
fldenv
cmp
es
lock
jecxz
sbb
das
gs
push
mov
loop
leave
dec
sbb
push
inc
outsl
mov
loopne
movsl
cwtl
in
sub
mov
inc
jns
out
sarl
inc
add
loope
or
inc
lcall
iret
ret
scas
lock
xor
shl
sarl
fldl
movsl
or
sbb
idivl
in
mov
and
add
xchg
adc
lret
fimuls
je
cwtl
pop
xchg
lock
aam
cld
pop
xchg
cltd
xor
shrb
push
cmp
inc
pop
cmc
mov
inc
gs
mov
enter
stos
notl
dec
loope
movsb
and
inc
cmpsb
jl
push
cmpsb
loop
pop
outsl
push
fwait
xchg
outsl
out
or
jb
add
push
xor
jl
sub
popa
addr16
cmp
outsb
mov
into
add
lret
add
lahf
dec
mov
jo
cmp
test
into
xchg
stos
in
loopne
jbe
lret
pop
clc
adc
in
addr16
xchg
push
imul
jmp
push
mulps
outsl
xlat
sbb
lea
int3
loop
int3
push
lods
les
xorb
jae
fsubr
mov
mov
fiadds
stos
les
lahf
dec
push
inc
cld
stos
mov
sbb
and
push
adc
out
insb
dec
lds
lahf
rolb
and
xchg
sub
inc
sbb
inc
cmpsb
into
lret
int3
jmp
in
mov
or
dec
stc
jmp
hlt
lods
loope
sbb
mov
les
cmc
pop
jmp
ss
pop
mov
and
and
popa
stos
jl
mov
fcmovu
dec
es
cld
pop
out
jb
add
push
movsl
cmpsb
out
stos
fildl
mov
loop
push
dec
adcb
push
cli
xchg
sbb
adc
pop
sub
outsl
push
test
pop
add
xchg
push
nop
xor
mov
mov
call
arpl
inc
dec
add
lret
arpl
das
jp
pop
bound
mov
xor
das
cmpsb
movups
cmp
mov
cli
es
xor
xchg
pop
adc
cmpsl
xchg
pop
cmp
and
mov
mov
mov
xor
mov
shr
ret
ss
divb
add
xor
pop
dec
jo
inc
icebp
lret
lea
or
push
lds
movsb
andl
cmp
clc
pop
cmpl
jge
mov
sub
and
cld
enter
cmp
sbbl
sti
movsb
push
push
mov
daa
pop
inc
std
popa
lcall
dec
daa
xchg
les
int3
jb
push
inc
xchg
and
inc
pop
fbstp
leave
call
adcb
xchg
and
fsubr
xlat
push
nop
cmp
adc
mov
jp
xor
jecxz
lahf
mov
or
test
xchg
mov
cs
push
lret
cmp
insb
enter
mov
cmp
adc
mov
jb
xor
xor
xchg
add
xchg
push
mov
ret
shrl
mov
push
cmp
into
pcmpeqd
mov
cmp
fmulp
jns
mov
fsubs
mov
insl
dec
gs
lret
push
ljmp
stc
lock
hlt
jns
cmp
ds
lods
xor
faddl
sbb
sbb
fmuls
push
cltd
mov
xchg
pusha
jle
dec
mov
xor
xlat
add
xorb
push
lds
add
mov
mov
push
movsb
pop
fbld
xor
mov
xchg
xchg
cmp
nop
mov
repnz
pop
ds
sub
ljmp
inc
lcall
ss
fldl
pop
sbb
test
call
sahf
sarl
cmp
push
push
popw
fsubrs
jl
shll
jp
aad
jecxz
push
les
in
add
lea
outsb
xor
sti
or
mov
aad
lahf
aam
pushf
movsl
mov
jo
sub
das
adc
dec
mov
mov
lock
lock
nop
out
mov
cmpsb
dec
inc
dec
ja
and
cs
out
xorl
aaa
out
xor
mov
push
repnz
inc
inc
push
xor
negb
mov
in
outsb
pop
add
test
dec
push
test
inc
sub
push
les
icebp
mov
pusha
adc
jmp
je
jae
std
addr16
inc
jb
pop
pop
scas
cmc
jnp
cmp
fs
in
sbb
in
pop
rorl
scas
es
sub
cmp
addb
add
sub
test
or
fdivs
cs
out
dec
or
pop
iret
or
pop
push
daa
idiv
cmp
or
shll
sub
imul
arpl
dec
dec
mov
xchg
popf
mov
cld
loop
loop
fs
sarl
idivl
jmp
outsb
int
pop
lods
cmp
mov
stos
stos
popf
dec
pop
out
out
sub
fiaddl
cli
inc
inc
enter
mov
jae
test
fsubrl
pop
sub
sbb
ret
std
rclb
fisubl
fistpll
data16
jnp
mov
or
gs
hlt
lret
xchg
jnp
adc
push
mov
jns
cltd
test
movswl
jo
push
push
pop
sub
ljmp
cmpsl
adc
pop
pop
xorb
lods
pop
sbb
outsl
lods
add
sub
test
popf
pop
scas
iret
test
add
sbb
and
dec
mov
mov
sahf
add
and
idiv
lcall
xor
or
mov
mov
fsubp
jo
rclb
jecxz
popf
les
out
ss
movl
or
rorb
decb
and
nop
popa
mov
mov
xchg
inc
loopne
insl
call
adc
xor
outsl
mov
cmc
rol
leave
or
loopne
sbb
xchg
scas
mov
jecxz
ljmp
dec
sahf
sub
les
enter
push
mov
daa
and
cmpsb
dec
push
out
fiadds
push
sub
arpl
xor
pusha
stos
pop
jnp
mov
and
lret
mov
or
out
mov
loop
jo
push
repz
lds
push
mov
pushf
sbb
dec
pop
ja
add
add
pop
push
pop
sbb
adc
es
iret
in
insl
shrl
movsl
test
inc
push
pop
cltd
dec
mov
decb
fmull
test
mov
sbb
cltd
shlb
sub
push
push
je
cltd
lds
lcall
cmp
xchg
lcall
cmp
push
out
sbb
adc
xchg
add
int
bound
enter
and
test
cmpsl
out
mov
mov
mov
aas
push
rep
loop
jne
test
cmpsl
dec
inc
int3
inc
in
gs
out
jg
jle
outsl
inc
repnz
shl
cmp
sub
sarb
test
mov
jbe
cmc
lods
mov
pop
lret
sahf
cmp
fs
cwtl
and
jecxz
mov
int3
sar
mov
stos
aam
ds
daa
push
inc
mov
inc
mov
jl
outsl
mov
out
out
lock
sub
dec
cmp
enter
sub
scas
pcmpgtw
jle
push
mov
shlb
add
ja
or
pop
or
and
mov
adc
adc
imul
popf
mov
mov
adcb
jae
shll
imul
cli
adc
xchg
aam
cltd
loop
cmp
and
aad
in
pop
sbbl
xor
push
lea
pop
pop
fistps
mov
std
or
jns
call
jp
or
xchg
sub
xchg
popf
in
test
arpl
outsl
push
cltd
pop
les
inc
inc
std
out
mov
pop
dec
lods
inc
xchg
les
xor
xor
vcvtps2pd
pushl
cmpsb
or
mov
pop
or
fnsetpm(287
sbb
sbb
mov
jge
fsubr
fisubrl
and
clc
enter
pop
enter
out
sbb
movsl
pop
push
int
lods
addr16
dec
or
js
sbb
ds
lahf
leave
push
dec
cmpb
dec
xchg
jmp
mov
adc
les
icebp
out
popa
test
pop
bound
ja
push
mov
dec
mov
mov
subb
jbe
mov
out
cld
pushf
pop
cli
adc
mov
mov
aam
les
sub
leave
test
iret
push
insl
out
fucomi
cld
xchg
daa
insb
lret
fidivrl
fisttpl
xchg
xchg
and
push
sbb
adc
dec
add
in
xchg
inc
mov
xor
lods
jge
or
in
addr16
cmp
addl
movb
jp
pop
lahf
xor
lcall
jl
sbb
cmp
cmp
pop
push
jo
add
outsb
bnd
xchg
sbb
cmpsl
push
jl
ss
jp
xor
sub
inc
mov
outsl
scas
mov
or
mov
testl
push
mov
shll
sub
out
inc
gs
xor
mov
sbb
call
mov
daa
and
and
les
mov
cmc
orl
adc
push
mov
gs
lea
das
fdivrl
inc
or
ds
add
pop
and
inc
pop
js
aam
lcall
lret
in
jne
or
into
fcomps
xor
add
cmpsl
cmp
ds
out
imulb
pop
loop
fs
scas
data16
cmp
push
add
shlb
lods
dec
inc
jbe
mov
insl
xchg
or
mov
aad
fnstsw
dec
lds
adc
xchg
inc
push
notl
fwait
mov
cmc
mov
in
out
mov
cmpl
enter
sub
lahf
xchg
lock
push
bound
mov
test
or
aaa
aad
dec
in
dec
pop
lret
and
add
cmp
mov
out
stos
jbe
aas
sub
jmp
add
cli
xchg
mov
add
xchg
scas
add
or
add
mov
sbbl
stos
push
bound
repz
bound
inc
mov
pop
and
mov
jne
in
push
jge
ss
mov
add
xchg
mov
dec
push
js
adc
cmp
insb
jl
pop
shl
cltd
pop
sahf
inc
sub
xchg
jge
push
data16
push
fs
push
fdivs
add
lcall
push
mov
push
pop
xchg
fcompl
cwtl
mov
adc
inc
push
jmp
dec
clc
popf
fistps
add
or
js
repz
xor
add
or
push
push
ljmp
xchg
out
and
repz
push
xchg
mov
test
jle
or
outsl
sbb
lea
pushf
mov
daa
inc
mov
add
pop
js
sar
negb
jne
test
pusha
mov
sbb
nop
adc
sub
inc
sbb
cli
or
test
cld
push
cmp
lods
lock
into
mov
pop
add
rcrb
hlt
jne
sub
rcll
popa
push
fs
cmpsb
and
cmpsb
pushf
ficoms
pusha
xorb
jg
popf
ja
pop
jne
in
ret
jecxz
inc
adc
xor
xor
sub
mov
les
dec
jge
xor
je
cmp
shr
or
mov
xchg
mov
psrlw
xor
and
cmpsb
es
in
cld
arpl
testb
stos
or
push
mov
cmc
add
std
into
es
jp
and
pop
jns
mov
jns
push
iret
ja
add
inc
imul
mov
cmp
std
sbb
xlat
sbb
inc
push
fists
jg
pop
fwait
mov
enter
mov
lret
cmp
lcall
cmp
add
ja
and
mov
add
sub
clc
rorl
push
rclb
sbb
push
shll
ds
enter
stc
leave
push
ljmp
ret
mov
inc
pop
cmp
mov
call
cmp
jns
sti
dec
outsl
adc
jne
jo
xchg
mov
shl
cmp
cli
xchg
test
jp
outsb
lods
sbb
add
lock
lret
xchg
mov
pusha
fcoml
movsl
scas
jecxz
fwait
in
mov
lret
iret
add
outsb
pop
dec
jno
mov
fstpt
inc
popa
fsin
rorb
aad
int
decl
cmp
mov
xor
sub
xor
cmp
test
in
add
out
mov
lock
pop
mov
xlat
lea
rorl
push
leave
and
iret
int3
scas
nop
rolb
test
test
mov
jne
rdpmc
pop
pop
jmp
jne
in
xchg
test
shlb
xor
enter
or
cli
add
sub
pop
jle
lret
jo
and
jo
xor
movsl
pop
mov
in
pop
enter
add
lret
inc
enter
dec
dec
xchg
or
xchg
cmp
imul
je
dec
mov
gs
or
popf
pop
mov
out
inc
mov
pop
jmp
inc
mov
jns,pt
mov
enter
or
mov
fstl
js
and
cmp
adc
insl
popf
cli
ret
call
mov
and
repz
xlat
mov
add
insl
and
sub
fistps
mov
inc
adc
jbe
scas
subb
mov
pusha
rcrl
lds
lds
adc
sub
in
and
push
mov
adc
pop
xchg
repnz
inc
push
mov
sbb
hlt
xor
mov
je
ds
loope
scas
mov
mov
xchg
mov
adcl
push
addr16
int
lret
inc
lock
and
jmp
sub
iret
sub
daa
pushf
aam
imul
in
cmpsb
mov
dec
fisttpll
sub
outsl
or
pop
addr16
xor
cmp
insb
shll
pop
fistl
repz
fists
cmc
in
mov
cwtl
shlb
shll
jmp
xor
fadds
mov
test
out
dec
adc
push
into
ret
fisubrl
push
adc
dec
test
push
bound
stos
movsl
rorb
into
ret
cmp
into
cld
or
arpl
repnz
dec
aaa
push
jns
out
and
pop
dec
or
adc
gs
mov
and
das
cmc
mov
or
mov
fwait
push
or
xchg
loop
rcl
inc
inc
push
add
sub
push
aad
rcrb
xlat
movsb
outsb
sbb
lcall
sub
gs
shl
ret
push
in
loop
jge
sti
ficompl
xchg
cs
lahf
stos
pop
or
and
dec
mov
ret
loop
jle
inc
sbb
xchg
aad
xlat
xor
js
les
lcall
test
movsb
pop
xorb
mov
pop
or
movl
movsb
ret
test
fwait
subb
dec
jmp
cmc
and
push
add
dec
pushf
inc
pop
sbb
dec
mov
mov
out
xor
dec
in
insl
adc
mov
xchg
lcall
mov
mov
imul
test
mov
sbb
jmp
cmp
jae
mov
in
dec
cmpsb
xchg
adc
leave
inc
push
add
iret
xchg
pop
lcall
pop
imulb
or
pop
add
push
ss
push
addr16
sbb
mov
sbb
test
xchg
mov
mov
adcb
xor
fisttpl
fs
cmp
mov
sahf
sarl
add
sahf
adc
or
jnp
cmpb
daa
lret
pop
shrl
push
dec
cmpsl
xlat
in
mov
dec
push
sahf
xor
xorl
dec
addb
js
rcl
std
call
clc
not
mov
pop
mov
scas
adc
pusha
movsl
push
add
mov
pop
add
rcr
outsb
es
xor
cmp
pop
cmpb
movsb
je
push
cmc
inc
mov
lods
ja
pop
mov
lcall
adc
aad
les
or
mov
inc
add
mov
lcall
popf
shlb
stos
aas
mull
out
lret
jnp
lret
xchg
push
push
and
das
or
cmc
fistps
adc
push
sub
lods
add
or
sub
jp
cli
adc
rcr
cmp
cmp
dec
addr16
insb
cmc
xorb
shll
js
stc
xor
es
xor
es
insl
leave
stos
mov
inc
pusha
mov
fwait
dec
cmpsb
enter
mov
sbb
out
cmp
pop
mov
xor
loop
cmp
shrb
mov
icebp
cwtl
or
xchg
pmaddwd
xchg
popa
xchg
mov
scas
int
xor
inc
repz
sub
mov
lea
outsl
or
iret
and
aad
push
out
leave
xor
xor
pop
ds
imul
sahf
lahf
jo
std
jmp
int
das
mov
pop
jo
xchg
add
and
mov
xchg
or
push
pusha
inc
cmp
xor
les
stc
fnsave
loop
cld
das
int3
lds
into
movsl
leave
lahf
scas
sti
stos
mov
mov
xlat
nop
xorb
sbb
xchg
dec
dec
mov
lock
stos
dec
lods
sub
mov
jbe
rorl
push
cmovno
mov
pop
and
cmp
test
fs
popa
mov
fwait
daa
es
inc
mov
dec
dec
dec
mov
adcb
and
or
sbb
cmpsb
pop
ljmp
dec
mov
push
dec
cli
mov
lds
lcall
sbb
or
arpl
mov
ret
add
repnz
or
inc
push
mov
xor
pop
popf
pop
aad
inc
push
daa
sbb
test
js
fistpll
mov
aas
fs
fisttpll
xorl
fimuls
push
lods
enter
pop
adc
mov
lahf
cmp
mov
sbb
inc
inc
test
inc
inc
jo
add
adc
push
pop
and
pop
aaa
jl
leave
fs
and
pushf
push
mov
lods
das
iret
testl
scas
xor
jp
or
jl
enter
lea
pop
pop
addr16
xorl
stos
jno
mov
pusha
jo
loop
push
dec
insb
adcb
lods
in
es
ss
xor
lea
in
mov
push
mov
dec
arpl
repnz
int
jne
cltd
ds
mov
push
sahf
nop
call
xor
mov
inc
mov
sub
adc
lcall
or
rclb
jae
pop
addr16
mov
adc
mov
push
xor
std
cmpsl
adc
mov
xchg
mov
cmpsl
cmp
dec
ljmp
jb
rolb
cltd
pusha
jno
cmp
loop
ja
je
mov
jns
pop
pop
sbb
mov
pop
loope
loopne
aad
xchg
sti
mov
add
push
mov
jbe
ds
lahf
and
jns
stos
fwait
or
es
lret
mov
aad
sub
inc
adc
pusha
bound
popa
or
jae
mov
sub
push
loopne
std
je
push
cmc
insb
or
pushf
sub
out
out
adc
push
fists
cmpsb
movsl
adc
imul
add
dec
mov
ss
jne
insb
mov
jecxz
sar
push
bswap
fisubl
mov
outsl
inc
xlat
push
leave
lret
add
jl
sub
pop
mov
jne
dec
das
sub
add
cld
and
aad
pop
inc
sbb
cwtl
sbb
int3
stc
jle
and
nop
lods
xor
movsb
sbb
fdiv
je
aam
outsl
bnd
xor
dec
add
shlb
pop
and
lock
push
push
mov
mov
xchg
and
inc
lea
push
call
sti
hlt
jno
jg
and
lcall
loopne
push
int
mov
mov
sarb
addr16
cmp
adc
fdivrs
pop
xor
arpl
insb
mov
pushf
inc
rorb
cmpps
clc
inc
sub
cmc
out
mov
stos
ret
jl
pop
paddq
mov
adc
sub
ljmp
mov
jns
cmp
cmp
rcrb
cmp
xchg
xchg
sub
xchg
shl
or
je
stos
out
add
add
lcall
push
inc
repnz
sbb
and
or
fistps
dec
daa
xor
out
pop
xchg
xor
push
int
sub
daa
push
ds
mov
sbb
xchg
loope
in
leave
jl
adc
mov
xor
mov
push
gs
pop
leave
loopne
roll
add
lahf
rcrl
jmp
leave
pop
xchg
in
and
adc
sub
stos
gs
cmp
cmp
lret
mov
push
loopne
xor
jecxz
push
push
adc
mov
dec
push
push
cmpsb
movsb
lcall
mov
jmp
sub
cmp
jp
cmp
add
push
test
sbb
mov
inc
xor
iret
pop
sub
and
mov
sub
imulb
mov
adc
pop
pop
add
inc
jmp
xor
fwait
mov
mov
xchg
xchg
cld
add
and
enter
in
fisubrl
stos
addr16
inc
hlt
cmp
sub
mov
faddl
cmp
push
mov
mov
das
jae
je
loopne
fsts
mov
fsubrp
icebp
jbe
push
bound
pusha
ret
in
push
jnp
sub
negb
lods
jl
cltd
jb
jl
es
rol
fs
stc
inc
stos
pop
rcl
sub
sbb
movsb
cmp
mov
xor
jg
dec
outsb
mov
or
enter
sbb
lods
hlt
mov
movsl
pop
mov
imul
push
inc
test
inc
pop
xor
jg
sti
test
je
mov
dec
jle
ss
out
inc
inc
faddl
xchg
inc
pop
rcll
imul
dec
fcmovnb
icebp
mov
cmp
sbb
hlt
cltd
insb
push
in
bound
adc
or
jmp
and
ljmp
sub
hlt
mov
fimuls
ljmp
popa
jb
popf
repnz
test
in
sbb
xlat
pop
fwait
or
sar
mov
pop
hlt
cmp
js
arpl
mov
jae
cmpb
xchg
lea
mov
test
stos
push
mov
shlb
sbb
ret
adc
xchg
mov
lahf
pop
add
mov
sbb
enter
push
adc
sub
fldl
push
sbb
inc
or
sarl
jns
sub
sbb
jl
ret
jb
xlat
lret
fsubrl
mov
loopne
in
pushf
das
loopne
lahf
push
ljmp
mov
fimull
xchg
daa
adc
adc
je
rclb
in
insl
mov
cmp
xor
gs
es
xlat
adc
sub
outsl
sbb
ret
mov
mov
mov
mov
div
pop
mov
mov
stos
xchg
inc
loopne
sub
rolb
sub
in
pop
xchg
les
dec
pop
sbb
loope
push
sbb
sbb
add
xchg
sbb
mov
xchg
xchg
mov
adc
ljmp
sub
ljmp
lods
inc
and
subl
xchg
arpl
push
pop
call
je
loop
rcll
loope
mov
xchg
push
jns
aad
das
cmp
out
xchg
adc
test
test
push
adc
bnd
dec
cmpsl
je
sub
divl
inc
mov
adc
in
push
fnstenv
pop
jl
insb
test
push
xor
mov
sbb
sub
xor
loop
add
push
sbb
cmp
nop
mov
aam
leave
sub
test
lahf
push
aad
outsl
cmc
mov
pop
mov
lret
fistpl
cwtl
stos
shr
call
cmp
inc
aas
mov
pusha
mov
add
repz
call
scas
mov
mov
xorb
scas
and
int3
pop
dec
ffree
in
inc
or
pushf
add
sbbl
das
icebp
sbb
ss
loop
cmp
mov
movsl
idivb
popf
jne
sub
popa
pop
sahf
test
repnz
cmp
cmp
mov
jge
scas
sbb
repz
push
sti
or
add
jle
mov
cld
addr16
rclb
or
xor
test
mov
sbb
sub
cmp
push
pop
insl
ret
xor
test
and
inc
bound
lret
pop
out
mov
sti
adc
and
lock
xchg
cmp
pop
lds
push
jo
andb
out
in
push
jmp
mov
scas
std
sub
fdivrl
imull
shlb
mov
jno
in
repnz
push
lods
cmovge
jae
jp
lods
repnz
cltd
jb
fistl
out
xor
jl
xchg
lods
dec
xor
mov
lods
rolb
cld
push
xor
sbb
out
jg
les
adc
add
cltd
aad
push
mov
dec
push
icebp
mov
cli
pop
or
mov
dec
cmp
sub
push
or
sbbl
push
mov
daa
shrb
aam
or
mov
dec
dec
ficoms
mov
inc
xor
jmp
mov
testb
fisubs
out
fwait
mov
cmp
dec
rcrb
adc
fimuls
mov
andb
lock
dec
xor
sbb
adc
xor
clc
cmpsb
and
or
pop
ret
repnz
push
repz
inc
mov
cmc
hlt
insb
jle
sub
sub
cmp
outsl
jb
push
mov
daa
dec
mov
sub
jmp
pusha
inc
negl
add
out
call
enter
cmp
cmpsl
inc
pop
mov
mov
stc
dec
push
sub
ret
mov
adc
xchg
cltd
les
push
xchg
mov
pop
movsl
lock
jb
or
xor
aam
rorb
mov
push
xor
jp
push
shrl
cmp
arpl
jns
pop
adc
fcompl
outsl
push
cwtl
pop
in
ljmp
inc
stos
orl
lret
call
mov
clc
add
jmp
dec
pop
mov
loop
sbb
mov
aam
clc
push
adc
loope
pop
loope
rcrl
xorl
jnp
clc
xchg
scas
test
add
scas
push
fwait
push
aam
stos
dec
mov
daa
loope
addr16
cli
or
stos
sbb
les
or
movsb
out
lods
fwait
lret
fs
aaa
repz
push
fstps
dec
xor
add
loope
add
flds
xor
test
loopne
xorl
test
inc
ds
mov
mov
lret
clc
jns
xor
mov
inc
pop
sahf
lds
adc
cmp
js
xor
repnz
sbb
push
pop
dec
xchg
fiaddl
xchg
xchg
xchg
mov
aaa
or
push
fildll
fcmove
push
loopne
inc
mov
pop
inc
xorl
mov
in
and
lahf
in
xchg
fistpl
fcmove
inc
xor
or
and
in
ljmp
shll
mov
scas
push
adcl
add
xchg
sub
inc
cmp
push
repnz
mov
ds
dec
aad
sub
fdivrl
dec
xor
decl
and
sub
or
int3
push
subl
dec
ja
adc
hlt
fildl
pop
loop
xchg
mov
imul
pop
xlat
lret
insl
add
or
sub
arpl
pushf
shld
add
ds
or
jno,pn
sarb
addb
add
cmp
test
inc
or
mov
stos
inc
jl
pop
jp
jnp
lods
xchg
rcr
andl
adc
and
pop
andb
fbstp
push
mov
add
mov
push
movsb
outsl
dec
mov
dec
sarl
push
xchg
movsb
jne
inc
sbb
std
jns
add
xchg
in
lods
sbbb
in
and
aad
pop
nop
and
rcr
sbb
xchg
cmpsb
insl
cltd
loope
cmp
imull
sbb
mov
sub
jae
jg
xlat
mov
ds
popf
mov
add
movsb
fs
xchg
mov
xor
xchg
mov
or
jecxz
push
jns
imul
or
popa
cmp
rol
mov
das
mov
inc
push
inc
pop
mov
mov
mul
roll
mov
rcr
leave
pop
mov
mov
cmp
push
loop
push
inc
cmpb
mov
sub
cs
fbld
xchg
push
xchg
add
inc
and
sbb
mov
jp
mov
push
ret
stos
sub
imul
popf
xor
imul
push
cld
jne
cmp
sub
stos
pop
outsb
mov
repz
les
add
in
dec
or
pop
or
loopne
call
lods
ret
lds
xchg
stos
in
clc
mov
fcompl
out
push
sahf
mov
mov
in
dec
fwait
and
inc
jge
sub
leave
xchg
pop
dec
pusha
sub
leave
push
pop
mov
imul
jl
adc
mov
into
xlat
aas
mov
cmp
popa
je
add
clc
mov
inc
ljmp
mov
ficomps
push
jp
ljmp
arpl
movsl
movsl
pop
add
and
pop
or
adc
xchg
mov
in
sub
adc
mov
push
fwait
ss
stos
rorl
cmp
daa
negb
fsub
mov
test
jg
lret
inc
pop
adc
and
lds
in
inc
ds
mov
xchg
cld
adc
and
jge
cmp
pop
clc
rorl
pushf
ds
and
insl
out
mov
mov
jbe
les
sbb
push
loopne
sahf
mov
dec
int
xchg
push
jmp
push
ja
mov
cmp
sub
add
je
cmp
jecxz
test
outsl
in
movsl
cmp
xor
add
mov
lods
cmpsl
subb
mov
in
cld
in
dec
lds
test
or
sub
js
das
xor
or
mov
hlt
cmp
enter
mov
aad
call
push
sub
sbb
fwait
icebp
or
leave
cmpl
or
imul
repz
or
or
dec
mov
lcall
in
cmp
xor
in
into
dec
jo
into
in
mov
stos
push
je
shlb
cmp
and
shlb
mov
sarb
xor
cltd
xchg
xor
dec
mov
test
gs
inc
addb
test
or
mov
adc
and
arpl
sbb
in
lahf
xchg
or
pushf
xchg
out
xchg
or
out
cs
std
cmpsl
mov
and
push
jle
or
or
aas
imul
ss
ret
cmp
psllq
mov
shl
push
sub
jmp
ret
shll
mov
mov
sarl
xchg
leave
stos
sub
std
ss
inc
adc
lock
adc
shrl
jecxz
sbb
call
inc
jns
fiadds
jbe
jle
andl
mov
jmp
sub
fists
mov
rorl
inc
imul
cmp
shlb
movsb
mov
js
mov
jns
xchg
imul
ficomps
pop
out
aas
xchg
pop
mov
adc
lods
mul
pop
adc
mov
daa
repnz
inc
and
and
cmp
cmp
mov
or
popf
loopne
push
inc
arpl
icebp
mov
adc
aaa
adc
or
pop
xchg
push
fidivrs
mov
lock
sbb
inc
mov
xlat
lock
mov
lret
stc
sar
add
mov
sarb
std
cmp
popa
out
dec
repz
das
es
out
iret
sbb
xchg
stos
cmp
or
pop
ret
cmp
mov
mov
mov
ljmp
adc
ss
or
test
jp
pop
in
xor
mov
mov
add
mov
ja
aaa
add
sti
inc
mov
or
mov
xchg
ficoms
dec
ret
sarl
lret
xchg
in
aaa
setnp
hlt
and
xor
mov
sub
cmc
mov
cmpsb
fcoms
xchg
lcall
sarl
mov
mov
imul
xlat
jmp
stos
pop
xchg
xchg
inc
adc
push
sbb
stos
nop
jmp
or
leave
subl
call
dec
loop
loopne
sub
aas
mov
subb
cmpsl
dec
sub
adc
push
pop
dec
cli
into
mov
push
push
test
fs
mov
mov
outsb
ja
sbb
sub
mov
cs
add
mov
mov
decl
mov
xor
mov
lret
and
jne
ret
outsb
dec
ret
cltd
add
push
movsb
rcll
mov
enter
lcall
daa
dec
lods
cwtl
popa
aas
push
and
jle
sbb
pop
lret
mov
ljmp
int
je
xchg
push
jno
fsubl
es
call
lret
mov
or
mov
jnp
faddl
adc
ret
pop
mov
out
ljmp
xchg
xor
lea
pop
push
ds
adc
push
sbb
inc
cmpsb
cmp
stos
out
imull
sti
scas
jg
mov
dec
xchg
bound
sub
cmp
xchg
in
dec
loope
in
call
jl
xchg
xchg
add
btc
mov
sbb
mov
mov
ljmp
xchg
xlat
insb
sbb
mov
das
jne
lret
push
jp
inc
adc
adc
jnp
stos
lock
xor
inc
sar
dec
sti
mov
scas
fs
ss
jno
sbb
mov
out
push
clc
loopne
or
call
lret
daa
jl
callw
or
mov
mov
sbb
out
daa
pop
aad
and
mov
mov
cmp
out
dec
pop
lea
and
pop
cmc
imul
cwtl
xchg
mov
mov
enter
dec
loope
adc
mov
xchg
add
imul
divl
adcl
xchg
push
mov
xor
and
pusha
cmp
mov
bound
jle
imulb
adc
bnd
push
aam
or
sarl
mov
lock
mov
dec
or
push
int3
jae
mov
lret
fwait
mov
mov
nop
xchg
ds
and
mov
sub
repz
call
ja
out
xchg
and
mov
nop
leave
les
mov
negb
pop
jl
adc
or
push
xchg
push
pusha
fdivr
pop
inc
add
testb
sbb
mov
jmp
jno
push
jno
in
or
pop
ret
xor
ja
shl
js
push
mov
dec
xor
pop
jg
clc
mov
xchg
mov
imulb
pop
fiadds
xor
sub
sbb
cmp
mov
xchg
mov
mov
addb
pop
inc
shrb
cmp
es
aam
mov
ljmp
push
popa
dec
mov
and
insl
cli
loope
xor
inc
dec
add
in
cmp
add
inc
add
fists
aad
inc
lods
daa
repnz
xor
sub
cmp
mov
xlat
sub
jns
cmc
mov
or
sbb
push
mov
je
and
call
adc
out
call
test
stos
clc
mov
hlt
std
adc
outsl
add
mov
cmc
pop
test
inc
imul
js
push
bound
setnp
xor
adc
lahf
mov
fidivrs
fisubl
cmp
rclb
je
test
cmp
icebp
lods
out
shlb
ja
shlb
sbb
push
ja
xchg
push
jbe
icebp
adc
sub
pop
push
idivl
icebp
add
push
or
sub
aaa
or
out
xchg
mov
jae
xchg
inc
es
call
les
xchg
cmpsb
pcmpgtw
ds
out
out
jl
mov
cmpsb
sub
mov
int
mov
dec
jae
jmp
stos
jo
shrb
test
mov
sbb
aad
fnstenv
mov
ret
mov
sbb
cli
jmp
inc
xor
cmp
sbbl
ret
pusha
popa
xlat
pop
mov
in
insl
fcoml
outsb
jecxz
mov
cwtl
lea
and
mov
out
mov
movsl
mov
cmp
leave
mov
mov
clc
xor
jno
leave
jg
dec
cmp
or
and
jmp
stos
lods
push
insl
ja
add
les
mov
jg
ret
add
add
cld
aaa
inc
pop
rcrl
fisttpl
int
cli
dec
pusha
outsl
push
jg
in
adcb
pop
push
xor
and
push
mov
dec
adc
ljmp
aas
lret
pop
adc
push
jnp
pop
mov
into
mov
mov
shrl
rol
cmp
push
aaa
cld
push
add
repnz
xchg
repz
sub
pop
mov
jno
je
in
stc
pushfw
stos
mov
jmp
inc
int
sub
shrb
scas
jnp
sbb
mov
lea
out
pop
hlt
sbb
popa
xchg
jecxz
rcll
jg
jl
test
push
inc
ljmp
mov
or
cmp
ja
ds
test
push
add
cmp
out
fidivl
adc
cmpsb
ja
add
ja
inc
cwtl
loop
jbe
lock
mov
daa
js
call
int3
addl
jo
das
jp
lcall
fs
fdivrl
sbbl
ds
dec
mov
in
jecxz
movsb
cwtl
or
cmpsb
or
scas
sbb
scas
mov
sahf
fidivrs
dec
cmp
xchg
fwait
clc
jmp
cmpsb
push
aam
insb
dec
iret
jbe
in
pop
mov
inc
mov
xchg
pop
xchg
sbb
pop
lret
cmpsl
inc
mov
fsubl
negb
lahf
aam
sub
mov
imul
mov
rcr
or
push
fistps
test
pop
jmp
jmp
cmp
xchg
into
and
mov
or
mov
mov
mov
lock
out
lahf
dec
xor
imul
clc
pushf
mov
add
mov
push
stc
jecxz
sarl
test
jmp
mov
jne
ret
pushf
les
popa
cwtl
rcll
mov
xchg
mov
movsb
sbb
inc
sub
std
cltd
fdivrs
mov
cmpsl
andb
shrb
inc
repz
cs
pop
jp
fildll
outsl
aaa
movsl
mov
mov
ljmp
inc
cwtl
scas
inc
inc
inc
mov
pop
xchg
jecxz
push
or
xchg
add
mov
jns
stos
xor
aad
or
adc
dec
pop
iret
dec
mov
in
mov
sets
in
pop
xchg
push
and
adc
mov
fists
popf
or
sub
push
pop
xor
xchg
xchg
push
xor
imul
or
lock
aad
and
jb
cli
xchg
adc
ret
test
repnz
fwait
lahf
add
ja
cltd
movsb
insl
add
push
or
adc
lcall
int3
or
sti
mov
pushf
cmpb
pop
fnstcw
fwait
or
and
stos
xchg
jecxz
sbb
xor
cmp
push
rcrl
out
divl
call
push
mov
dec
popf
pop
inc
ljmp
pop
mov
imul
lea
daa
inc
idivl
mov
inc
adc
push
aaa
mov
sub
mov
pop
dec
sbb
cmp
jp,pn
scas
xchg
sbb
xchg
dec
dec
scas
mov
pop
out
shlb
lahf
call
imul
nop
inc
cld
mov
dec
sub
sbb
add
push
inc
lock
js
xchg
cwtl
sbb
out
popa
pop
mov
add
in
cmp
subl
inc
lahf
jl
cmp
or
aaa
sahf
sarb
lock
bnd
push
les
push
imul
ficoml
in
jne
sub
mov
test
add
addr16
xchg
xor
icebp
inc
mov
jmp
pop
xor
push
ss
pushf
scas
icebp
push
mov
flds
ret
jns
and
je
dec
out
cli
mov
aaa
cmp
xorl
in
xor
add
mov
loope
fidivrl
stc
movsl
sbb
add
leave
mov
mov
nop
stos
mov
mov
pop
add
rclb
dec
dec
cld
ja
imul
sti
dec
add
stc
repnz
lods
hlt
std
inc
cmp
xchg
add
clc
push
clc
fldcw
xchg
mov
mov
outsb
push
loop
adc
xor
add
sub
push
lods
cmp
lret
insb
int
jle
push
call
into
and
in
movb
scas
add
and
and
clc
movsl
andb
int
test
loope
rcr
mov
pop
jnp
mov
dec
or
push
xchg
call
sarb
xchg
dec
jb
mov
insl
mov
fadd
sbb
mov
int3
cmp
data16
xlat
enter
insb
or
mov
lock
int
push
dec
fwait
push
mov
dec
mov
outsb
mov
inc
cmp
inc
outsl
shll
pop
js
pop
mov
movsl
cs
pop
add
cmp
or
filds
incl
lret
or
les
stos
outsb
xor
in
lret
lea
nop
sub
cwtl
icebp
subl
jecxz
cltd
sbb
es
jmp
adc
xchg
fldl
adc
mov
xchg
pusha
pusha
mov
or
mov
inc
imulb
mov
addl
sub
test
and
lods
mov
enter
or
inc
stos
and
jne
jo
xchg
pop
icebp
gs
mov
idivb
add
dec
div
xor
iret
out
push
inc
fxtract
dec
fidivl
add
mov
fdivrl
cmp
fwait
xchg
cmp
fidivrs
xchg
test
dec
mov
ds
push
add
ret
or
mov
sarb
jecxz
cmpsl
push
xchg
test
stos
push
outsb
xor
cmp
inc
les
adc
sbb
adc
aam
pusha
sbb
mov
pop
stos
jbe
aaa
inc
lret
mov
or
mov
mov
aas
cmc
pop
pop
outsb
push
cmpsb
push
fcompl
js
adc
hlt
push
pop
adc
leave
push
or
repz
in
pushf
xchg
fnstcw
bound
ss
mov
push
mov
stos
aaa
dec
imul
hlt
cs
aaa
lcall
enter
pop
pop
jb
lcallw
sub
mov
jnp
jbe
push
mov
test
pop
dec
fstpl
mov
clc
adc
test
aas
sub
inc
sub
orb
loop
and
iret
jbe
and
push
sbb
sub
xchg
jmp
mov
in
sub
out
mov
or
outsl
fldl
sub
int3
fildl
cmp
std
stos
push
pop
push
mov
adc
xor
fcompl
test
lods
mov
sbb
test
mov
nop
cs
pop
ss
mov
call
popf
mov
inc
sub
int3
add
mov
fbld
xor
push
adc
xchg
dec
pop
inc
call
out
sbb
adc
pop
imul
add
add
or
test
jecxz
jmp
insb
pop
cmp
mov
icebp
icebp
ss
mov
popa
stos
jnp
inc
mov
loope
subb
arpl
sbb
seto
adc
add
int3
out
inc
xchg
arpl
sbb
or
sub
sbb
adc
scas
inc
xchg
mov
cwtl
shr
sub
clc
xchg
js
rol
rolb
imul
int
sub
dec
loope
shl
xchg
jns
adc
aad
mov
cmpsl
jmp
shlb
dec
add
cli
sbb
in
ficomps
subl
push
inc
mov
sar
adc
sub
xlat
sub
dec
jb
daa
dec
xchg
into
xor
dec
or
jl
mov
jbe
jg
stc
sbb
jg
mov
pop
cli
outsb
movsb
push
mov
loope
out
aad
cmpl
jecxz
popf
mov
imul
inc
push
sbbl
and
xor
lcall
ss
jbe
mov
icebp
xor
xor
mov
dec
fildl
jo
addr16
xchg
mov
mov
fdivs
ds
aam
xor
push
or
ror
xor
adc
xchg
jmp
mov
mov
xor
lods
sub
and
sbb
rolb
sbb
aaa
lret
or
sub
sti
hlt
jle
cmc
sti
call
sub
xchg
and
scas
push
cwtl
nop
adc
mov
xor
xchg
clc
and
scas
out
daa
loop
sbb
ss
mov
add
stos
dec
xor
repz
movsl
mov
je
adc
mov
leave
and
in
lock
insb
ljmp
jo
xor
or
into
cmpsl
mov
mov
jae
mov
mov
idiv
iret
inc
xchg
lods
push
adc
out
lret
or
lods
repz
or
mov
ljmp
push
pop
mov
push
int
or
push
push
ret
sub
mov
sti
loope
jns
stos
xor
xor
mov
mov
jmp
adc
cs
push
cltd
push
sbb
sbb
imul
out
dec
lods
cmp
xchg
ret
rclb
and
adc
movsl
cmp
sbb
cli
iret
xchg
sti
aad
cmp
lea
imul
pusha
mov
mov
xlat
mov
jecxz
cmp
xchg
mov
and
daa
xor
leave
fcmovbe
ljmp
fmuls
mov
jne
test
dec
push
pop
es
ja
repz
cli
movsl
mov
push
rclb
into
fisttps
cmp
bnd
clc
sbbl
aam
sub
jns,pt
movsl
inc
mov
and
fcompl
jge
xchg
mov
dec
adc
daa
loop
xor
xchg
xchg
into
ret
xor
fyl2xp1
rcll
inc
stos
loop
xor
mov
test
rcrb
jp
mov
loope
inc
xor
mov
xchg
movsl
imull
cli
andl
cmp
std
adc
pop
fidivrl
shll
push
lret
xchg
and
stc
pop
pop
std
jmp
divl
sub
shll
cs
repz
mov
xor
fbstp
loope
sti
sahf
adc
cmpsb
xchg
sbbl
adc
or
dec
inc
addl
jecxz
mov
mov
jno
mov
jo
cwtl
test
pop
test
ret
cmp
mov
flds
dec
subb
fs
jne
out
xor
xor
jge
add
xchg
push
mov
int3
loop
cmpsb
outsb
mov
stos
mov
inc
push
xchg
call
and
mov
push
call
mov
push
outsb
cmp
pop
inc
jae
push
adcb
sbb
cwtl
subb
lea
dec
lock
pop
mov
pop
mov
jecxz
popa
mov
divps
jecxz
mov
aas
mov
dec
movsb
pushf
pop
imul
nop
pusha
dec
out
mov
lods
mov
fisttpll
push
test
test
cmp
lret
sub
sbb
xor
and
mov
int3
xchg
and
and
fisttpll
out
pop
add
stc
lcall
or
mov
ret
add
push
xchg
sahf
loope
pusha
xor
inc
cwtl
add
in
pop
fisubl
cmp
lds
jl
hlt
bound
xchg
in
pop
mov
inc
jg
mov
lods
idivl
pop
inc
and
movsb
out
outsl
cmp
inc
into
pop
into
fistpll
sbbl
xor
fldcw
xchg
sbb
pop
push
add
std
or
xchg
adc
pop
call
nop
fs
fiadds
sub
mov
sub
pop
out
jp
lahf
cli
lods
fwait
cli
mov
rcrb
and
dec
and
sti
rol
mov
out
sub
push
into
jecxz
jp
inc
adc
xor
jp,pn
jb
fsubs
xchg
dec
xchg
pop
xchg
ja
adc
lret
cld
adc
add
mov
and
test
xor
cmp
xchg
push
sti
int
sub
mov
popa
push
and
adc
cmp
sbb
mov
or
push
push
int
push
mov
pop
mov
bound
data16
cmp
pop
xchg
adc
push
outsl
cmpsb
js
push
fadd
cmpb
push
sub
pusha
xchg
out
sub
ret
mov
dec
mov
sbb
lcall
push
mov
lock
mov
nop
sahf
add
push
pop
dec
and
push
mov
xchg
aas
mov
lret
xchg
xor
repz
inc
lods
mov
and
outsb
xor
mov
insl
js
inc
je
icebp
cld
jge
in
imulb
icebp
mov
push
sub
les
aad
out
adc
mov
bound
cs
add
or
fcom
mov
cs
imul
or
jg
xor
sbb
jae
rclb
sti
add
mov
or
hlt
mov
xor
movsb
inc
cmpsb
sahf
cmpb
cmp
xchg
xor
shrl
shlb
out
in
leave
out
cli
mov
sbb
sbb
inc
xor
test
mov
movsb
cmp
test
xor
ficoms
sbb
xchg
in
in
call
pop
rclb
sbb
mov
loop
xor
dec
loope
popa
dec
adc
rclb
xor
cmp
jecxz
outsl
xor
sahf
aas
fiaddl
ret
sub
ret
sbb
jmp
cmp
and
leave
sub
lods
orl
jae
filds
iret
push
call
loope
sbb
pop
imul
sarb
loope
je
stos
xor
cmp
lret
xorb
dec
push
mov
daa
or
addr16
sub
pop
mul
imul
sbb
or
jne
pop
and
pop
mov
je
jno
ret
cmpsl
pop
inc
push
mov
inc
adc
sti
xor
in
jb
repnz
scas
push
mov
test
mov
inc
pop
add
sar
mov
cltd
mov
sti
loop
xchg
and
addb
test
gs
push
jmp
ret
scas
in
outsl
scas
outsb
xchg
and
xor
inc
add
outsl
inc
aad
add
pop
mov
cmp
push
jmp
inc
push
es
inc
pop
sti
test
jnp
scas
push
push
xor
das
mov
lahf
or
pop
scas
xchg
pop
add
mov
es
gs
imul
mov
adc
jbe
pop
push
jle
into
mov
test
test
xchg
sbb
sahf
add
adc
dec
cli
pop
cmc
stos
das
mov
sbb
jl
sub
mov
insl
mov
aas
sbb
xor
mov
push
pop
pop
ljmp
xor
das
or
in
lock
rcrb
cmp
pop
fimuls
inc
data16
push
mov
pcmpgtb
and
in
mov
push
ljmp
lock
iret
sub
fcomp
das
xchg
or
int3
cmp
ljmp
and
cli
xor
mov
xchg
lea
lds
inc
pop
jle
dec
jae
inc
or
aam
xchg
inc
in
adc
das
repz
cmpsb
pop
jmp
push
cmpsb
orl
inc
test
mov
push
push
fldenv
pop
scas
mov
adc
mov
mov
scas
cld
jne
addr16
and
add
mov
adc
mov
ljmp
lods
mov
mov
xchg
ficoms
adc
add
jno
mov
fsubrs
adc
lret
push
insb
ret
lcall
enter
mov
push
sbb
pop
jmp
mov
push
pop
or
pop
mov
sbb
in
xchg
jns
shll
xchg
data16
push
ret
jo
jl
lods
lahf
test
jle
pop
push
sbb
ljmp
adc
inc
fcompl
iret
outsl
daa
insl
sub
fisttpll
js
push
sub
cmp
sahf
or
inc
and
xor
mov
cltd
mov
add
into
pushf
cmp
lds
mov
out
pop
call
xor
popf
cli
ret
jo
push
lock
mov
push
loop
lods
std
outsb
fwait
aad
xchg
pop
pop
push
daa
ds
mov
and
iret
into
arpl
xchg
int3
in
iret
movsb
and
sub
push
mov
das
mov
jl
cmpsb
xchg
popf
inc
dec
mov
in
icebp
pop
mov
pop
pop
inc
out
push
and
cli
fdivl
and
ret
cmp
cmp
ficompl
pop
xor
xchg
xchg
outsb
sti
stc
adc
lret
repnz
pop
mov
icebp
bt
sti
icebp
out
jl
inc
fdivrs
push
cltd
xor
orl
xchg
iret
rcrb
xchg
clc
cli
es
xor
cld
inc
mov
sbb
leave
data16
lret
lret
sub
pop
sub
jl
ja
mov
inc
mov
ret
and
stos
jg
jg
push
push
xchg
or
mov
movsb
enter
sub
cmpl
aam
ja
jge
adc
xchg
cltd
mov
cmp
lods
dec
add
mov
push
sbb
inc
dec
lahf
mov
outsb
daa
and
mov
dec
jnp
movsb
xor
lods
lcall
test
pop
lock
ljmp
sub
sub
mov
mov
popf
xchg
loop
and
pop
out
sbb
or
ss
xchg
js
sbb
pushf
push
xor
mov
add
loop
dec
mov
mov
test
sub
sub
adc
lods
mov
sbb
int3
sbb
aaa
mov
fs
push
ljmp
cmp
mov
fistpll
pop
and
jo
fsts
inc
ret
xchg
mov
repz
ret
aaa
fcmovb
les
fsubrl
ficoml
je
clc
loop
mov
test
or
mov
dec
aaa
int3
cmp
push
dec
pop
ja
leave
jnp
sbb
pop
data16
jb
addr16
insb
adc
cwtl
mov
mov
xchg
xchg
dec
jmp
aas
push
imul
aaa
push
cmp
adc
and
pop
sub
xchg
mov
pop
jle
adc
test
insb
cltd
je
enter
sbb
cmp
inc
or
packssdw
das
nop
clc
sti
xchg
clc
insl
pushf
xchg
out
jmp
nop
dec
popa
aas
xchg
outsb
or
cmp
push
shll
inc
cmp
mov
fstpt
imul
mov
dec
ss
or
out
dec
aad
mov
inc
xor
inc
cmp
and
cli
pop
shl
sbb
cmp
mov
int
jge
ret
or
inc
loopne
pop
adc
mov
call
test
inc
or
mov
hlt
adc
push
xchg
push
xchg
nop
lods
and
pop
nop
test
das
pop
pop
leave
jbe
push
into
loopne
jbe
lea
shlb
lret
dec
ds
iret
pusha
pop
or
repz
adc
add
inc
icebp
icebp
cmc
push
dec
scas
sbb
inc
mov
test
aaa
out
lods
xor
testb
daa
out
nop
inc
or
ja
dec
fdivs
adc
push
sub
lret
pushf
test
jmp
sti
int3
sub
faddl
addr16
stos
imul
mov
inc
cwtl
mov
stos
incb
mov
inc
jb
rorl
out
mov
test
dec
or
and
sub
sbbl
jno
or
cld
loopne
jbe
sub
inc
iret
je
ljmp
xchg
jbe
push
sub
pop
add
cmp
iret
mov
xchg
in
shr
pop
cltd
js
enter
rorb
mov
xor
push
or
leave
aad
jge
jg
int3
das
inc
inc
repnz
pop
adc
maskmovq
idivl
jecxz
loop
jae
into
push
sti
or
test
and
outsl
push
les
pop
adc
jg
ss
into
adc
iret
lahf
mov
scas
cld
sub
pop
push
jno
out
rcll
cmc
mov
dec
mov
xor
adc
movsb
out
xchg
cmp
xchg
clc
iret
add
pop
jle
les
and
xchg
sbb
adc
xchg
loopne
jae
xor
mov
jmp
adc
xchg
xor
mov
movl
dec
orb
pop
in
add
jnp
dec
dec
jle
mov
or
cmp
testb
frstor
fnsave
push
lret
fs
inc
mov
out
insl
add
xchg
in
dec
int3
test
hlt
mov
pop
cmpsl
cwtl
lds
adc
push
dec
in
push
xchg
dec
dec
mov
in
cld
push
call
sub
jnp
jnp
sbb
xchg
out
xlat
push
pop
repz
fs
lea
jnp
mov
inc
or
in
int
loopne
dec
lods
int3
mov
sub
adc
mov
loope
out
sub
dec
and
cli
sbb
pop
pushaw
movsb
rclb
pop
mov
lea
pop
sbb
shlb
cmp
sbb
lea
into
xchg
and
jbe
lret
arpl
cs
jle
push
subb
rcll
xorl
pop
jmp
stc
pop
jp
push
pop
push
stos
mov
dec
xchg
roll
lahf
std
ret
jge
pushf
dec
push
inc
repnz
dec
int
xchg
or
mov
add
repnz
xchg
out
inc
cltd
in
fstl
sub
enter
iret
test
xchg
lock
mov
lea
and
pusha
push
and
jge
push
or
mulb
cmc
mov
insb
daa
push
sub
xor
sub
insb
call
imul
xchg
inc
xor
leave
jl
fdivl
xchg
cs
lock
cmpsl
jg
or
xchg
jg
leave
mov
daa
bound
mov
add
ds
mov
mov
popa
pop
dec
mov
lea
aaa
jnp
xchg
std
sbb
and
push
inc
jle
in
test
mov
sbb
pop
ljmp
inc
shr
ja
sub
add
push
test
int
cmpsb
sti
or
aaa
push
mov
mov
test
leave
adc
push
add
jns
add
add
stc
xor
xchg
mov
ljmp
and
lods
in
push
sub
mov
push
adc
jp
push
cmc
repz
push
into
add
xchg
inc
sbb
sbb
jbe
fists
sub
dec
inc
xchg
fadd
fcmovnu
push
icebp
jecxz
sbb
mov
cli
in
xchg
nop
xchg
or
pop
shlb
jle
push
loopne
mov
inc
mov
jbe
lds
iret
pop
lods
push
pushf
push
fstpl
shrb
test
lock
cmp
xor
adc
inc
xor
int
mov
mov
sub
push
jnp
int
pop
clc
jnp
scas
movsb
jl
sub
sbb
jmp
movsb
in
xor
sub
icebp
jbe
adc
je
pop
inc
jl
into
inc
mov
mov
mov
cmpsb
and
push
or
inc
jo
and
loope
mov
sbb
mov
outsb
aaa
mov
adcb
iret
std
inc
sbb
push
jnp
xor
dec
lock
popa
mov
cmp
icebp
das
or
mov
inc
icebp
in
dec
pop
inc
xchg
fisubs
fwait
insl
out
fiadds
cli
and
aaa
push
xchg
mov
outsl
outsb
enter
xor
stc
jo
or
stos
and
repz
or
push
ret
call
pop
cmpsb
dec
std
repz
outsb
aaa
mov
add
cli
or
push
sbb
jo
add
jmp
sbb
aam
movl
jbe
xchg
sbbl
pop
and
sub
and
fdivs
cli
or
int3
mull
jb
jnp
xchg
insl
mov
fcmovnbe
roll
adc
jns
push
jmp
scas
in
lea
add
cmp
hlt
outsl
mov
jg
jmp
rcrl
jmp
pop
xlat
lock
into
adc
and
repnz
jge
rep
push
mov
sub
dec
dec
jb
repz
lret
rolb
jns
jno
jo
jg
stos
sub
inc
nop
and
jno
xor
es
les
sbb
in
pop
mov
mov
adc
mov
rcll
jecxz
add
or
sbb
and
loopne
ja
test
jge
out
or
or
mov
addr16
xor
mov
pop
aaa
test
loope
add
repz
push
or
inc
mov
push
lcall
ds
aas
mov
in
sub
loope
mov
rcrl
push
out
cmp
dec
and
mov
mov
cmp
pop
add
ja
imul
dec
push
push
mov
push
jns
or
xor
push
addr16
fsubs
cmpsl
add
dec
mov
dec
inc
lret
fnsave
cs
mov
sub
ret
cmp
mov
imul
cmp
inc
loope
jle
mov
add
adc
sti
scas
andb
rep
imul
mov
addl
cltd
cmp
mov
xchg
dec
aaa
pop
std
mov
push
mov
pop
loop
inc
std
gs
cli
out
jae
lahf
xor
and
les
lods
mov
dec
iret
jns
insl
mov
es
push
xchg
icebp
ljmp
and
hlt
adc
enter
and
mov
ja
xchg
int
pop
jb
pop
xchg
inc
out
lret
loopne
out
dec
or
and
cmpsl
sbb
mov
push
ljmp
lea
out
dec
adc
inc
das
mov
les
mov
push
pop
ret
das
push
sbb
iret
in
out
jmp
sub
adc
dec
in
mov
inc
xchg
xchg
mov
jnp
sbb
jge
stos
jo
dec
cvtps2pi
lock
int3
roll
add
pop
xchg
out
fidivrl
aas
addl
jo
jno
das
jnp
adc
jmp
bound
insl
inc
adc
pop
pop
xor
dec
or
mov
and
ds
jg
pop
inc
mov
mov
or
sub
inc
lcall
xchg
call
jno
decl
fdivrs
push
test
sbb
dec
out
mov
cmp
loop
cmpb
xchg
xorl
and
fcomp
xchg
mov
scas
inc
xor
push
push
and
push
lret
push
xchg
out
std
mov
jnp
loop
scas
jno
and
cmp
or
test
inc
sahf
bound
test
jge
loopne
jnp
mov
cs
jle
bound
jecxz
or
adc
lahf
add
cmc
add
clc
push
add
xchg
lret
adc
fwait
mov
and
lret
pop
add
xor
lahf
xor
das
mov
mov
cmp
cwtl
adc
jmp
js
popa
mov
or
cs
push
std
imul
push
cmp
push
fadds
add
stos
push
dec
pop
sti
mov
jb
mov
xor
xchg
mov
sbb
lcall
sahf
mov
push
imul
mov
jb
mov
xorb
mov
data16
sbb
je
cmc
mov
scas
cmpsl
aad
in
push
xchg
mov
push
push
in
jne
mov
je
or
jno
lahf
stos
and
jp
add
add
dec
dec
push
pop
dec
inc
jns
imul
xchg
and
pop
xchg
mov
daa
mov
mov
pop
enter
cmpsl
in
cmp
movsl
mov
in
loopne
std
int3
adc
in
fwait
movsb
insb
pop
sub
xchg
dec
xor
pop
fiaddl
inc
movsb
je
push
xchg
test
and
xchg
incl
dec
insb
mov
pop
push
lock
xor
icebp
cmp
orps
mov
lret
rcll
lods
pop
data16
enter
shrl
mov
and
and
into
loop
cmp
daa
mov
add
ret
sbb
mov
dec
ja
cmpl
dec
and
add
and
lods
mov
movsb
lret
jge
pop
sahf
inc
scas
fcmovbe
jb
adc
fdivr
xchg
and
enter
cltd
ljmp
cmp
cwtl
dec
jl
icebp
xor
jmp
js
mov
pop
clc
push
cmpsl
das
mov
imul
push
dec
aas
gs
aad
xchg
mov
ds
out
lcall
stc
cltd
dec
nop
xor
lds
call
fld
dec
fdivl
fidivrl
aam
mov
aad
dec
sbb
and
or
insb
xchg
lcall
sub
cs
sahf
mov
dec
or
insl
lods
shll
mov
and
int
mov
add
jb
mul
cmc
into
mov
stos
jns
je
push
add
or
and
sub
push
mov
ret
in
into
sub
mov
jl
cmp
mov
stos
mov
fildll
ffree
pop
adc
ret
sub
xor
mov
int3
shrb
leave
imul
and
mov
or
cmpsb
mov
inc
aaa
test
mov
sbb
pop
shrl
xchg
adc
ficompl
jp
mov
xchg
push
xor
outsb
sarl
cmc
in
lds
cmpl
dec
xchg
dec
jb
test
addb
mov
mov
mov
cmp
xchg
mov
jp
jnp
scas
jl
cmp
push
adc
test
addr16
and
aad
mov
sarb
or
lds
out
outsb
add
mov
gs
pop
sahf
push
push
or
inc
cmp
negb
push
fisttps
inc
fsub
jbe
pushf
or
loop
imul
inc
push
loopne
aas
push
pop
jnp
sbb
sub
push
lahf
inc
arpl
xorl
push
mov
std
js
inc
jge
movsb
das
test
shr
xor
in
mov
jb
mov
mov
movsl
adc
push
and
mov
xchg
push
dec
leave
jnp
and
push
lds
les
sub
sub
ret
out
mov
inc
pushf
insl
sub
mov
xchg
push
jle
jmp
push
mov
mov
loopne
add
pushf
fdivrl
xor
xor
adc
cltd
jg
es
dec
cwtl
dec
cli
pop
lds
mov
sub
xchg
cmp
xchg
cmp
push
or
inc
enter
dec
hlt
cmp
movsb
repnz
dec
movsb
jo
repz
cli
push
jl
xor
xchg
mov
jecxz
xor
roll
cmp
mov
icebp
cltd
fwait
inc
add
jge
sarl
and
inc
sbb
ret
and
int3
mov
and
inc
xor
out
aaa
lods
movsl
jge
xchg
in
loop
and
repnz
xchg
jecxz
dec
dec
xchg
testb
lods
loopne
fisttpl
in
ss
sbb
test
xlat
jmp
mov
cmpsl
adc
adcb
inc
xchg
inc
mov
mov
in
rolb
inc
push
cld
lcall
xor
lock
mov
push
mov
mov
mov
adc
fstpl
cwtl
cmp
rolb
push
inc
and
jge
rcrb
sub
mov
scas
data16
dec
repz
mov
jl
ret
leave
cmp
testb
inc
dec
jae
adcl
sarl
mov
mov
and
mov
mov
or
les
mov
into
xchg
and
xchg
mov
add
or
adc
add
sub
xchg
fcomip
or
cwtl
insb
cmp
hlt
jb
sbb
aaa
mov
push
hlt
xchg
sub
lds
push
mov
push
fidivs
adc
inc
leave
mov
cmp
xor
jb
sbb
sbb
cmp
mov
xchg
stos
int
ret
lret
mov
aaa
mov
mov
cmp
incb
or
jo
loopne
ja
push
arpl
aam
jne
loope
add
aaa
adc
xchg
add
jno
flds
sub
negb
xchg
push
leave
mov
shr
frstor
mov
push
icebp
popa
push
push
pop
mov
test
xor
xor
or
ret
jnp
mov
inc
sub
gs
push
pusha
mov
dec
xchg
inc
jbe
cmp
sub
sahf
cmpsl
jmp
pop
in
mov
pop
pop
or
push
push
fwait
in
sti
sbb
rorb
cltd
lds
repnz
mov
xchg
pop
call
sub
icebp
test
ja
inc
dec
sbb
stos
mov
stos
sbb
je
orb
mov
inc
xor
adc
rorl
xor
xor
cwtl
inc
je
sub
add
push
bnd
dec
lcall
mov
out
sbb
testb
and
and
push
out
jae
stos
insl
and
mov
in
pusha
loope
je
rolb
cmp
jo
sub
mov
not
inc
mov
jae
mov
dec
jne
mov
mov
xor
and
push
and
arpl
arpl
mov
sub
ljmp
leave
test
mov
movl
leave
imul
cmp
add
sarl
jbe
push
jge
loop
push
int3
lods
add
aam
popf
cld
inc
xchg
and
jae
out
pop
xor
cmp
cmp
es
add
jl
pop
aas
and
fs
sbb
mov
push
clc
dec
mov
jnp
inc
add
pop
in
push
aad
not
xchg
aam
ja
inc
leave
fidivl
inc
pop
sbb
pop
sub
mov
adc
pop
shlb
jge
fisubs
sarb
push
enter
pop
pop
jp
scas
gs
pushf
xlat
adc
mov
mov
divl
aaa
inc
mov
dec
test
mov
out
dec
cmp
mov
push
xor
addr16
popf
xchg
inc
jb
push
pop
mov
dec
pop
mov
int3
testl
stos
insl
xchg
enter
adc
or
mov
scas
inc
add
aam
pop
mov
rcrl
test
insb
aam
aam
fwait
jno
call
xchg
sub
cs
push
repnz
fisttps
enter
call
pop
and
seto
pop
data16
adc
push
xorb
in
push
push
xor
aaa
and
nop
push
imul
nop
cmp
dec
mov
and
movsl
sbb
inc
adc
bound
adc
push
inc
and
cmp
jns
out
xor
jmp
leave
mov
mov
mov
ror
ja
sti
or
mov
xchg
pop
orl
mov
js
cmpsb
mov
cmpsb
or
imul
into
movsb
cmp
pushl
sub
les
loope
loopne
out
lahf
pop
jnp
push
sub
add
inc
insb
fidivl
lds
mov
inc
jmp
or
pop
xchg
add
rorb
orb
jmp
add
into
mov
jp
pusha
mov
sbb
inc
rol
cmpsl
push
aaa
mov
stos
ja
cmpsb
dec
dec
in
mull
add
pop
dec
add
push
nop
test
or
cmpsb
fsubrs
pop
into
dec
pop
sub
mov
pop
es
inc
pop
inc
int3
popf
dec
mov
xor
xchg
ret
movsl
push
cltd
mov
sub
js
movsb
iret
repz
xor
sub
add
xchg
ds
call
dec
fistpl
imul
ds
inc
cld
mov
sub
fidivs
add
popf
repnz
ss
ljmp
push
mov
sub
std
inc
pop
jae
test
and
add
cmp
in
dec
imul
fstl
sub
dec
jae
mov
xchg
aad
push
pop
pop
fimuls
sub
cli
lcall
daa
push
scas
push
in
stc
pop
int3
stos
jge
mov
xchg
push
mov
pop
push
or
arpl
scas
scas
adc
mov
fnstsw
in
jbe
imul
fxch
mov
icebp
push
sub
test
pop
push
xor
jne
rclb
pop
mov
pop
das
adc
daa
ret
xor
mov
test
add
ficoms
cmp
sbb
sub
cmpsb
xchg
adc
dec
mov
jp
movsl
push
inc
dec
fistps
pushf
inc
int
adc
loopne
jae
jb
cmp
mov
dec
jp
jecxz
nop
xlat
xchg
push
mov
mov
adc
inc
xchg
mov
ljmp
pop
das
jno
dec
jne
pusha
sub
inc
pop
xor
adc
test
sahf
jns
icebp
mov
push
pushf
sub
mov
xchg
jge
or
push
aad
arpl
inc
movsb
jnp
insb
in
dec
jnp
inc
hlt
mov
fs
xlat
push
and
inc
loope
add
or
sub
inc
mov
pop
sbbl
sub
movsl
out
mov
and
loop
push
or
test
outsl
and
dec
jbe
pop
fbstp
cmp
ret
cmpsl
xchg
push
sub
cmp
mov
dec
call
or
xchg
sbb
iret
inc
xor
and
cwtl
mov
xorl
xorb
mov
cmpsb
push
jnp
jmp
add
js
xor
lret
popa
leave
mov
call
inc
ljmp
pop
mov
push
in
repz
ljmp
ljmp
popl
xchg
mov
inc
pushf
call
push
sbb
push
js
jle
pop
fidivrl
dec
repz
stos
lock
cltd
or
aas
pop
mov
pusha
push
aaa
repnz
xor
addr16
dec
push
xor
repnz
push
pop
out
jmp
fistpl
mov
inc
cmp
shrl
ja
jo
cmp
mov
repz
bound
pop
out
dec
lret
movsb
mov
pop
jg
ret
leave
insl
lods
xchg
dec
inc
sub
jl
mov
int3
sbb
cmpsb
loope
xchg
pop
or
divb
out
mov
add
sub
out
or
inc
je
inc
mov
cli
lock
cmovnp
jne
jp
ds
pop
movsb
xor
jge
stos
mov
mov
add
xor
shll
mov
mov
inc
jle
movsl
ja
es
movsl
pop
lock
jp
and
lcall
mov
adc
fsubs
lods
fistpll
cld
dec
xlat
iret
fsubrl
fimuls
jno
fiadds
or
mov
ds
je
fs
cs
lret
rcrl
data16
push
iret
jge
shll
fprem1
dec
ljmp
sub
aam
xchg
rep
dec
or
dec
rcrb
cmp
fsubrl
stos
js
xor
cld
pop
pop
and
out
adc
pop
jo
or
pop
mov
xchg
or
adc
pushf
lret
call
push
out
popf
jns
rorb
mov
add
mov
xchg
mov
ret
loope
inc
aas
pop
cmp
sub
mov
adc
and
cmc
jns
test
and
repz
ds
mov
pop
ficomps
in
push
or
sbb
mov
fiadds
mov
pusha
fidivs
out
jp
mov
addr16
push
or
adc
cmpsb
call
sub
pop
cmp
and
in
cmp
dec
inc
push
iret
movsb
in
test
inc
cmpsl
push
fwait
inc
xor
daa
outsb
mov
jecxz
jne
mov
icebp
roll
mov
mov
clc
pop
pop
add
adc
arpl
add
rcr
or
and
ret
adc
scas
jae
and
ds
and
jmp
mov
sbb
inc
inc
andl
addl
xchg
sbb
or
pop
popa
or
adc
imul
cmp
sub
popa
scas
sub
cmp
ror
mov
dec
push
pop
sarb
xchg
popf
arpl
or
inc
cmp
aam
jecxz
jmp
and
mov
lcall
cli
mov
pop
in
int
xor
loopne
in
sub
push
xor
xor
das
sbb
jne
xchg
lahf
enter
leave
pop
mov
enter
mov
mov
cmp
je
xchg
dec
sub
ds
xchg
enter
lods
push
or
xor
adc
or
rcrb
push
mov
loop
push
xchg
fwait
inc
insb
jo
jbe
aam
jge
fwait
jl
lock
js
lods
aam
test
mov
into
adc
adc
pusha
and
xchg
sub
adc
mov
lock
xor
outsl
mov
xchg
mov
push
enter
sub
fsubs
movsl
in
push
addr16
sar
loopne
jle
rep
or
fdivrs
mov
mov
mov
add
ret
xor
cmp
cmpsl
ret
and
jne
popa
sub
imul
and
push
adc
or
shrb
cmp
outsb
jne
inc
movsl
fs
mov
jbe
or
add
mov
cmp
nop
inc
test
lret
in
and
add
lahf
mov
cmpsl
jle
push
movsb
std
scas
add
out
mov
cmpsb
stos
in
faddl
imul
and
sub
dec
jl
sub
push
push
pop
in
out
sub
xchg
cld
dec
xor
shrb
fcoml
push
stos
sbb
xchg
pop
jmp
in
xchg
mov
or
loopne
xchg
pushf
pop
or
sti
or
dec
and
sub
push
mov
and
push
cmp
mov
add
jmp
add
ljmp
xchg
std
push
lods
daa
and
outsb
push
jl
sbb
test
sub
and
lds
jecxz
stos
loopne
xchg
repnz
push
inc
pushf
jb
adc
mov
push
and
jno
std
neg
jmp
or
cmpb
adc
loope
cmp
inc
mov
xchg
jae
aad
leave
cwtl
nop
jle
jb
xchg
xor
mov
push
sbb
lods
lret
and
xor
pop
jnp
mov
sbb
mov
add
fcmovnu
mov
sbb
adc
pusha
pop
loopne
push
arpl
pop
jnp
cmp
jnp
mov
in
jo
cmpsl
aas
mov
jge
mov
dec
cli
ds
xchg
cmpsl
jno
sub
or
andl
cmp
cmp
mov
ljmp
popa
add
xor
clc
in
or
jmp
jle
or
mov
int3
lods
in
leave
and
je
sub
into
shlb
cmpsb
mov
sub
out
ja
push
jbe
and
stc
dec
xchg
out
pop
jmp
fbld
jns
xchg
popa
pop
cmpsb
gs
fstpl
mov
push
push
pop
les
test
fwait
inc
fwait
out
or
and
and
add
fcoml
stc
cld
bound
in
push
pop
push
insl
sbb
and
cwtl
test
sbb
lret
inc
rcll
inc
adc
jae
jnp
int
addr16
add
or
scas
sbbl
cwtl
lock
ss
lea
lret
and
push
xchg
pusha
in
or
push
cmpsl
popf
jg
data16
push
push
mov
outsl
and
cmp
in
int3
jne
pushf
ret
sub
xchg
cmp
and
mov
in
cmpsl
inc
xor
jnp
dec
push
out
pusha
lock
fbstp
ja
cmp
adc
cmp
add
or
lahf
out
jnp
imul
aas
mov
sbb
lods
jecxz
out
sbb
mov
ret
nop
inc
pusha
sub
in
jl
pop
cmp
sbb
xchg
add
sub
das
mov
out
push
cmp
pop
push
pusha
dec
lea
loope
dec
popf
push
mov
push
inc
sbb
pusha
es
pop
test
adc
push
xchg
adc
xorl
out
xchg
add
fidivs
hlt
sbb
cmp
shll
mov
push
call
adc
push
lods
cmpsb
push
dec
pop
arpl
clc
not
mov
xchg
jp
sub
cli
mov
daa
sbb
stos
ds
push
sahf
mov
mov
pop
jecxz
out
pop
xor
insb
insb
jg
adc
js
rorl
pop
xor
enter
adc
pop
inc
or
cli
stc
xchg
pop
jmp
insl
hlt
mov
jo
jmp
pop
cmp
faddl
mov
cmp
into
sub
jno
sub
pop
inc
sbb
data16
aam
mov
add
fsubl
adc
iret
mov
stos
les
xchg
lret
jns
jae
sti
mov
pusha
sub
leave
and
into
inc
out
mov
fsubrl
aad
es
int
orl
repnz
mov
dec
sbb
das
scas
add
dec
sbb
jo
in
int
xchg
inc
stos
jl
add
cwtl
imul
xor
pop
push
fsubs
dec
movsl
add
mov
and
in
popf
dec
sti
ret
pop
mov
mov
jb
sbb
xchg
xchg
pusha
out
inc
pop
sbb
adc
jne
rcl
outsl
pushf
addr16
mov
and
mov
mov
test
pop
dec
xchg
scas
movsb
scas
mov
loopne
sbb
hlt
insb
mov
mov
or
shlb
mov
xor
sbb
daa
jb
mov
sub
add
add
ficoms
mov
pop
xlat
stc
or
leave
movsb
jns
cmpsl
push
cltd
xor
mov
neg
arpl
imul
nop
and
jl
xor
push
dec
mov
push
in
pop
cmp
ds
loop
sbb
adc
daa
add
pop
adc
repnz
sbb
inc
pop
stos
and
mov
nop
popf
negl
popa
fucomip
pop
push
sbb
shlb
add
xchg
jl
scas
inc
push
xchg
cmc
ss
ss
es
or
pop
xor
add
icebp
xchg
push
in
push
loopne
add
jno
add
xchg
xchg
iret
push
jno
mov
xor
int3
sub
mov
out
push
loop
movsl
inc
or
es
pop
out
jmp
xor
or
adc
sbb
pop
inc
fidivrl
mov
jno
and
stc
jnp,pn
push
mov
repz
inc
repnz
dec
and
and
jle
loopne
xor
loop
pop
cmp
push
adc
mov
jp
dec
ljmp
inc
test
cmc
jmp
nop
test
jp
aas
test
push
and
mov
aad
ret
mov
cmc
loop
aas
loope
mulps
addr16
enter
adc
mov
and
or
clc
aas
and
insb
movsb
leave
sbb
jo
mov
add
xlat
pop
or
js
cmp
mov
mov
mov
adc
out
add
jle,pt
push
pop
jno
cmp
sbb
jae
adc
daa
dec
shrl
das
pop
mov
push
inc
decb
xor
or
imul
enter
mov
js
mov
jns
jae
adc
mov
push
inc
je
cmpb
add
and
mov
mov
sbb
ret
es
fldenv
in
int3
sahf
push
push
mov
mov
cmp
cs
rcl
xchg
xor
mov
pop
scas
ret
and
or
fnstsw
cmp
fwait
shl
or
lcall
test
fwait
mov
fs
mov
addl
push
mov
or
or
cmp
jp
fwait
stc
dec
jmp
shll
mov
scas
gs
adc
pusha
jns
dec
hlt
sub
or
cmp
out
mov
hlt
daa
sub
add
sbb
shrl
xchg
xchg
lods
sarb
xchg
rclb
pop
nop
and
cmp
and
lods
iret
aad
xor
push
and
lret
mov
js
sub
lret
insl
jmp
roll
cld
outsl
iret
mov
xchg
cmpsl
fisubs
jne
dec
jecxz
jl
mov
out
out
cltd
sahf
mov
xchg
stos
hlt
movsb
in
fsubl
mov
insb
mov
push
mov
mov
mov
icebp
jp
cmp
gs
jge
pop
popw
mov
xchg
repnz
insl
mov
mov
idiv
mov
mov
call
or
xchg
lret
cwtl
scas
dec
sahf
mov
daa
sub
add
push
xor
mov
cmpsb
adc
push
lcall
and
sbb
int3
mov
sbb
mov
sbb
xchg
sbb
sti
test
mov
jae
fsubs
popf
movsl
inc
outsb
xor
aad
inc
sbb
dec
lcall
xlat
or
xor
out
xchg
rcrb
and
hlt
incb
xchg
mov
mov
adc
out
and
cmpl
sub
xchg
das
adc
inc
imul
dec
das
and
aam
adc
jge
fdiv
mov
je
ret
xlat
cmpsl
dec
push
fsubl
sbbl
and
xchg
dec
sub
ss
dec
inc
lds
into
mov
into
cmc
sub
leave
xor
add
clc
int3
mov
and
push
je
lahf
mov
shl
push
lods
in
fnsave
test
sti
dec
pop
jmp
sub
or
cmc
pop
mov
lds
cmp
movsb
push
xchg
mov
rolb
adc
sub
test
daa
je
cwtl
jbe
gs
aas
test
cmpsb
fs
jae
xorb
bound
imul
inc
pop
inc
xor
sbb
imul
xchg
or
into
pop
push
ss
imul
icebp
cs
xor
dec
ss
int3
pop
repnz
cmp
ss
clc
loope
mov
fwait
mov
imul
lds
jno
push
inc
inc
lods
std
push
loope
push
rcl
aad
add
fnstcw
sbb
in
outsl
jle
push
in
rclb
mov
push
inc
jae
cmpsl
dec
adc
xlat
jge
stos
mov
call
ret
add
rcl
jb
and
adc
and
mov
mov
popa
cli
mov
pop
mov
rorb
inc
stos
fst
das
inc
or
cld
je
popa
or
sub
mov
adc
mov
add
out
cmp
sbb
clc
pop
test
pop
pop
and
movsb
xchg
ljmp
fsubr
add
rcrl
xchg
scas
lock
fucom
aaa
clc
mov
movsb
popf
ret
jle
jns
xchg
mov
push
loope
mov
mov
test
sub
jae
ds
out
mov
adc
hlt
mov
mov
jmpw
leave
fs
gs
lock
inc
jbe
out
push
lods
outsl
lret
sahf
sbb
cmp
cmp
sub
scas
push
lret
xchg
lret
nop
call
cmpsb
fdivr
shlb
imul
adc
ret
dec
mov
xchg
xlat
int3
or
stos
push
ljmp
gs
dec
xchg
mov
ljmp
pop
push
sbb
mov
xor
jg
fidivrs
lret
push
mov
leave
je
insl
subl
lret
cmp
rorb
lcall
popf
pop
aam
add
push
cmpsb
daa
jno
pop
ret
add
sub
je
nop
add
mov
subb
add
pop
dec
icebp
outsb
mov
outsl
stos
sbb
dec
mulb
inc
loop
xchg
test
subb
out
daa
or
lods
xor
lea
scas
imul
and
test
arpl
or
mov
jmp
test
stos
das
mov
movb
je
push
jg
pushf
loopne
in
cmp
les
dec
xor
jns
add
sub
cltd
in
lcall
call
in
aaa
fbld
cltd
pop
out
dec
mov
sbb
out
mov
lret
scas
in
cli
enter
idivb
inc
inc
jae
xchg
sbb
pushf
dec
mov
rcrl
test
es
push
pop
sub
xor
jecxz
mov
lds
jb
adc
ja
add
lret
push
or
cmp
test
hlt
arpl
scas
xor
or
mov
xchg
hlt
pop
mov
cmp
jbe
mov
sub
repnz
pop
cmpsl
cmpsl
jne
insb
icebp
fs
sbb
mov
cmp
and
scas
cmp
inc
cmp
xlat
test
inc
cmp
bound
sbb
pop
jno
lods
mov
sub
scas
cmp
cmc
add
rorl
cld
cmpsb
add
or
mov
out
and
stos
cmp
push
movsl
mov
arpl
fists
mov
out
cmp
arpl
xchg
lcall
push
push
inc
mov
push
inc
pop
jp
scas
ljmp
jo
and
leave
xor
bound
lret
push
jno,pt
sarl
das
arpl
cltd
sub
mov
dec
popa
in
test
push
cmc
sbb
aam
mov
cmp
nop
hlt
nop
iret
stos
in
popf
dec
pop
and
mov
and
testb
push
cmp
lcall
loope
xor
loopne
dec
arpl
aas
call
xor
wbinvd
ret
test
cmovae
test
pop
jecxz
fsubrp
or
ret
out
xchg
jg
inc
dec
pop
clc
lcall
clc
loope
adc
push
lods
xor
push
push
mov
inc
nop
aam
aad
mov
aam
xchg
xor
jnp
lret
repz
addr16
out
cmp
push
adc
int
push
pop
movsl
push
and
movsl
or
test
xor
xchg
cmp
jns
xor
pop
mov
pop
insb
jecxz
jo
out
mov
sub
sub
out
gs
and
pusha
andb
repnz
mov
adc
test
pushf
jnp
add
pop
adc
mov
sbb
inc
jnp
mov
push
dec
pop
or
iret
sbb
pop
cmpsb
push
out
or
pop
mov
mov
cmp
xchg
xchg
popl
je
jl
adc
jp
mov
loop
testb
mov
push
int
cld
scas
rcrb
mov
repnz
sub
clc
mov
lcall
pop
xchg
imul
or
lods
int3
cmp
xacquire
mov
aad
int3
or
pop
adc
push
pop
cli
add
fwait
std
jge
addl
pop
mov
ret
call
or
mov
loope
ret
je
dec
pminub
jb
movsb
cmpsl
pusha
or
dec
dec
fists
es
push
fisttpl
in
jmp
xchg
mov
dec
push
cmp
jmp
or
les
cld
mov
adc
inc
cmp
outsb
push
push
xchg
adc
in
fildl
lret
or
loopne
nop
add
ret
push
mov
mov
push
sub
js
lods
add
pop
int3
loope
pop
lret
addb
mov
test
ret
inc
test
or
jb
add
je
testb
push
push
ss
out
or
ljmp
inc
and
add
add
push
jmp
addl
mov
cmp
mov
pop
push
popa
dec
mov
push
pop
jg
mov
arpl
inc
xchg
inc
inc
adc
sbb
popa
jge
or
mov
inc
iret
cmp
ficomps
js
jo
jp
jle
adcb
mov
pop
stos
lcall
in
or
push
jbe
cmp
in
ret
fsubp
fwait
cmp
mov
je
push
lock
into
das
imul
xor
inc
inc
sbb
sub
fcoml
gs
loopne
add
lea
les
packuswb
sbb
stos
sbb
mov
ja
popa
lods
dec
cmp
ljmp
popf
or
sbb
sbb
add
leave
shlb
mov
mov
jl
test
cltd
dec
push
out
jg
cmp
jp
pand
and
sub
out
jl
popa
mov
loopne
pop
push
cli
fdivrp
mov
xor
jae
fdivl
push
pop
pop
sub
jecxz
add
cwtl
fsubs
int3
nop
popf
jecxz
push
lret
ja
push
das
test
xchg
jb
xchg
notl
movsl
into
pop
mov
imul
jno
cltd
outsl
cltd
cmp
lret
inc
mov
sete
dec
inc
lcall
shlb
pop
shll
cmp
call
dec
mov
mov
jnp
mov
xor
das
inc
add
xchg
or
or
adc
cmpsb
pushf
xchg
icebp
adc
push
dec
push
aad
leave
test
addr16
cld
push
push
dec
scas
pop
mov
xchg
out
insb
adc
push
adcb
xchg
insl
cmp
inc
mov
cwtl
inc
rolb
mov
pop
scas
mov
adc
jg
mov
push
insl
sbb
push
enter
fiadds
dec
push
mov
outsb
xor
inc
lahf
nop
mov
flds
data16
fildl
xor
jne
add
leave
inc
lret
arpl
jle
cmp
xor
mov
cmp
fadds
ss
ljmpw
inc
push
hlt
or
sti
repz
xlat
popf
dec
xchg
cmp
pop
xchg
pop
sub
mov
xchg
adc
sub
dec
xor
fsubr
insb
fs
push
out
pop
insl
pop
pop
jbe
daa
ja
sti
dec
outsb
daa
cld
sub
jns
sti
ficoms
mov
fs
test
push
ljmp
test
adc
mov
inc
clc
lods
loope
bnd
jo
in
mov
xchg
lock
adc
ss
mov
pop
fwait
pop
jge
and
jns
hlt
int3
mov
out
inc
dec
and
dec
ljmp
fdivl
in
lds
xor
es
lods
pop
aam
jo
repz
fsubrl
and
lods
test
push
inc
mov
mov
cmp
dec
or
mov
inc
cmp
or
mov
push
aaa
faddp
mov
sub
shrb
sbb
lea
xchg
addb
das
mov
or
and
mov
aas
out
test
ljmp
fcmovb
and
xchg
mov
ret
es
fldt
xor
call
hlt
mov
lcall
mov
xchg
push
mov
cmp
sub
or
add
in
stos
test
aaa
cs
jae
pop
in
push
lds
xchg
or
imul
cmp
js
js
pop
cmc
push
mov
mov
dec
cmpsb
push
xor
aaa
pushf
insl
jle
out
stos
test
jge
sub
pop
clc
sub
cmp
xor
roll
pop
insl
adc
jge
iret
xchg
jge
mov
pop
adc
sub
sub
imul
pushf
xchg
inc
leave
push
mov
lret
movsl
imul
pop
fbld
or
add
shl
lods
adc
sub
jge
mov
mov
sbb
inc
jl
or
test
jg
dec
jns
dec
and
sbb
mov
sbb
jg
arpl
out
or
in
sbb
rolb
pop
out
jns
loop
sub
into
mov
insl
fsubrs
sbb
jmp
fldt
int3
push
fcmovb
lods
int3
pop
test
adc
hlt
addl
loopne
mov
fdivs
out
movsl
xchg
pop
cwtl
push
push
or
mov
and
push
std
bound
iret
fidivrl
add
out
mov
ficoms
ret
jo
sbb
lods
loope
les
and
sub
addr16
or
jo
push
pop
decl
js
aas
push
inc
sbb
out
xchg
sbb
mov
mov
and
jb
jp
xchg
arpl
mov
fidivs
icebp
fcoms
push
movsl
fwait
sahf
jb
ficoms
lahf
xchg
dec
mov
mov
inc
pop
mov
sahf
pop
decb
in
fistpl
mov
in
mov
test
mov
dec
jae
test
subl
lds
xor
sbb
pop
stos
lret
push
inc
push
scas
cwtl
scas
test
jle
in
xchg
push
xor
ljmp
and
and
shrb
mov
in
add
in
fdivs
mov
es
pop
adc
subb
sarl
adc
sub
inc
fmul
sub
sbb
inc
outsl
popf
stos
test
dec
ds
cmpsl
adc
jge
inc
push
out
push
push
stc
std
stos
jge
enter
je
push
push
cmpsb
mov
and
jns
repnz
in
xchg
stos
xchg
es
add
fnstsw
pop
stc
es
dec
and
xor
cltd
ficomps
clc
mov
xor
or
inc
cmp
stos
scas
enter
cmp
xorb
dec
dec
gs
cmp
mov
mov
fisttpll
sbb
cli
cmp
mov
jl
inc
call
mov
js
or
mov
push
and
fdiv
sub
nop
hlt
jne
data16
sub
aaa
fcmovb
roll
or
shrl
and
rclb
xchg
jae
add
mov
mov
mov
jae
cs
arpl
cmpsb
clc
int3
imul
jp
pusha
pop
jecxz
and
cs
cmp
xor
test
pushf
push
jne
cmc
xchg
adc
loop
jns
sub
push
inc
icebp
sbb
jo
movsb
insb
lock
dec
popa
cmpsl
out
sub
js
inc
cmp
pop
dec
iret
adc
mov
loope
and
push
add
add
push
pop
xor
pop
loop
sbb
mov
adc
or
dec
pop
lock
mov
and
roll
xor
adc
scas
push
xor
cli
and
xchg
ja
loopne
mov
aas
push
loope
xchg
jo
mov
mov
jo
sbb
sbb
ret
pop
mov
pusha
test
lea
cmp
pop
popa
inc
out
jmp
cli
cmpsb
je
ds
adc
or
and
inc
sub
nop
sbb
cli
and
pop
rol
cmpl
popa
push
fiaddl
sbb
mov
inc
cwtl
mov
or
push
sti
push
mov
push
mov
xor
lret
test
rorl
hlt
lret
mov
and
rorb
jno
sbb
fcomps
add
push
cmp
jno
iret
dec
pushf
or
fidivrs
movsl
and
jl
inc
push
add
inc
jecxz
std
mov
out
push
inc
in
fmull
mov
popf
stos
or
std
or
insl
jp
inc
xchg
jmp
jno
icebp
scas
or
sbb
addr16
mov
insb
fmulp
andl
aaa
lods
jae
dec
andl
cld
xchg
mov
fsubrs
fldcw
mov
cmpb
adc
movsl
daa
stos
ss
xchg
arpl
and
divl
mov
fcompl
add
inc
iret
jmp
shlb
or
stc
test
xchg
insl
jl
push
ficomps
out
es
fwait
clc
fists
mov
daa
int3
cs
pop
jbe
dec
and
pop
inc
pop
cmp
scas
fldt
xchg
or
and
mov
inc
push
outsl
mov
sbb
push
aas
or
push
inc
xchg
fwait
sub
fimull
cltd
xchg
mov
ret
sbb
bound
sarb
cmp
or
xor
addr16
nop
push
shl
popa
fimuls
xchg
push
and
popf
add
push
sub
lods
mov
inc
or
mov
and
test
xor
mov
or
mov
mov
pop
testl
in
mov
sbb
mov
incb
outsl
call
xor
jb
imul
fsubl
test
mov
add
mov
jns
out
pop
sti
icebp
rolb
cwtl
adc
add
inc
add
cmc
mov
adcl
pop
imul
xchg
push
cld
into
xor
mov
jne,pt
int
and
aaa
mov
aam
das
pop
sti
ret
xor
or
repnz
push
sub
call
imull
test
push
cltd
in
insb
test
xchg
icebp
or
ffree
sbb
xchg
mov
std
mov
arpl
lods
fmul
xchg
pop
cld
jge
leave
sub
xchg
xor
call
mov
mov
push
cmp
outsl
popa
add
jns
lds
lea
sbb
lret
xlat
and
or
cmp
insb
adc
lock
bound
inc
mov
cmp
pop
push
fiaddl
inc
out
inc
dec
dec
sbb
hlt
push
push
dec
adc
call
es
dec
mov
sub
out
imul
sti
lcall
cmpsl
xlat
push
sti
icebp
xchg
jge
xchg
daa
xor
movsl
int3
cs
out
xor
ja
ret
mov
mov
js
lods
test
xlat
push
ljmp
fildl
rolb
pusha
push
mov
sbb
out
fxch
es
cs
fmuls
mov
xchg
and
rcrl
sub
mov
xor
scas
and
sbb
push
and
mov
loope
dec
jb
add
in
fcomp
test
out
sbb
mov
mov
loope
push
adc
mov
lods
jne
dec
mov
rclb
mov
add
cli
daa
incl
mov
mov
push
loopne
repz
cmp
xchg
jecxz
dec
pop
lea
mov
gs
ret
push
pop
mov
andb
loopne
js
shl
fsubrl
cld
stc
sub
or
dec
jbe
outsb
or
cmp
inc
jbe
and
daa
inc
dec
cld
cmpsl
or
add
nop
sub
pop
xor
fimuls
ret
jb
mov
xor
lds
fisubrs
push
dec
movsb
icebp
dec
cli
adc
pop
orb
jle
lods
out
fimuls
mov
ret
movaps
js
hlt
out
add
jb
dec
fiadds
shrl
mov
test
icebp
xor
mov
jo
xchg
aaa
inc
dec
in
adc
jb
sti
and
sbb
mov
daa
dec
mov
adc
and
sub
xor
popf
clc
mov
or
add
jns
add
push
or
movb
mov
xchg
lret
stos
insb
int
sbb
call
loopne
leave
cmp
fdivs
sbb
mov
pop
les
aad
cmp
test
fsqrt
enter
xor
aad
cmpsb
je
xchg
nop
xor
mov
cs
jp
jp,pt
xchg
mov
movsl
add
xor
adc
inc
cmpsb
shlb
push
mov
sti
cwtl
and
fsubl
jmp
sahf
movsl
lcall
pop
push
aam
stos
aad
out
sti
inc
mov
and
lret
inc
bound
inc
push
adc
movsl
xor
ljmp
mov
sub
sahf
xchg
push
fs
push
int
pop
test
pop
test
mov
out
adc
test
jg
cli
inc
popf
pop
out
cmp
mov
push
xor
mov
out
xchg
or
mov
enter
adc
cltd
or
xor
scas
out
xchg
mov
jae
pop
mov
cmp
shll
hlt
pop
bound
inc
mov
lret
inc
sub
imul
cli
xorl
repnz
imul
imulb
js
rol
daa
cli
pop
mov
dec
jns
ret
mov
imul
aaa
mov
mov
mov
lods
icebp
sub
and
mov
pop
sbb
pop
xchg
shll
jae
or
out
shl
jnp
aad
dec
test
aas
and
out
mov
arpl
mov
mov
mov
hlt
add
fstps
push
xor
sub
mov
jb
xchg
or
sahf
lcall
nop
adc
fidivl
sbb
cmp
jnp
add
dec
sbb
xchg
dec
lds
outsb
pop
and
sub
xor
sbb
iret
ja
sub
mov
pusha
xchg
mov
je
mov
cwtl
hlt
into
mov
icebp
cwtl
ds
andb
mov
dec
push
sub
pusha
mov
hlt
sbb
mov
insb
pop
fistpl
mov
add
cld
jnp
or
xchg
push
es
sti
pop
loope
pop
xor
mov
mov
ror
iret
fwait
pop
pop
pop
rcrb
sbb
loop
dec
mov
cmp
push
mov
int
iret
xchg
push
mov
push
and
jbe
mov
pop
xchg
mov
adc
and
xchg
outsl
cs
or
mov
xchg
xor
or
xchg
ss
sub
fldl
aam
fistps
fwait
out
mov
jns
mov
gs
fldcw
dec
lahf
or
dec
bound
adc
cli
mov
test
scas
inc
aas
sub
ret
lret
sub
pop
xor
cmpsl
repnz
fsubrl
insl
mov
cwtl
cltd
mov
pushf
inc
inc
data16
loopne
dec
je
push
xchg
in
pusha
scas
mov
fs
mov
and
sbb
loop
adc
mov
stc
xchg
sub
movb
clc
cmp
fnstsw
dec
dec
xchg
or
dec
or
pop
push
es
xlat
xchg
add
and
dec
movsl
arpl
or
xor
shlb
mov
dec
mov
adcl
imulb
jne
lahf
bound
sbb
xchg
pop
xor
test
in
adc
adc
sbb
stos
into
pop
add
inc
movsb
ja
stos
and
add
xchg
cmp
pop
out
xlat
loope
scas
aas
cmp
jo
test
or
mov
inc
xor
enter
jmp
jns
ds
mov
jle
add
test
adc
mov
mov
gs
mov
add
clc
adc
cmp
xchg
es
cmp
sub
pushf
jmp
outsb
or
mov
enter
pop
aaa
int3
fcoml
test
pop
lock
or
dec
rol
inc
fldpi
rcll
cmp
sbb
xchg
pop
stos
test
movsl
pop
and
ret
mov
mov
mov
push
sub
insl
xlat
fimull
add
js
mov
mov
add
mov
movl
inc
inc
dec
inc
mov
mov
push
arpl
nop
mov
jo
adc
jo
insb
sub
enter
stos
cld
dec
decb
sbb
sub
arpl
sub
xor
stos
mov
out
scas
lds
imul
push
cmp
rcll
jg
pop
lahf
sarl
filds
ret
cmpb
pop
push
cld
sbb
xor
push
cmp
xchg
mov
int
mov
cmc
mov
add
add
lock
in
and
pop
push
icebp
cmpsb
in
push
add
scas
jnp
lds
arpl
mov
push
and
mov
ds
mov
adc
lods
xchg
push
rclb
inc
sub
ret
lods
push
ja
sbb
in
leave
cmp
lds
repnz
add
inc
jl
shll
cs
xlat
addb
arpl
stos
ss
ja
pushf
pop
jne
lret
orb
out
les
dec
sub
xchg
mov
cmp
test
insb
xor
push
cmp
fldenv
xchg
sbbl
cs
int
mov
ret
dec
sub
xchg
mov
pop
movsl
sbb
jae
addr16
pop
aas
cmp
pop
cmpsl
pop
mov
jnp
flds
sub
shl
cmc
jae
adc
xor
es
xchg
out
out
xchg
xor
scas
push
mov
sbb
jnp
lahf
add
jbe
aaa
fwait
mov
and
push
punpcklwd
mov
pusha
inc
and
enter
movsb
or
mov
sub
sti
cmc
test
sbb
pusha
aam
mov
inc
ja
jmp
add
stos
in
lret
xor
push
lahf
dec
sahf
ret
lcall
cltd
pop
xor
andl
dec
mov
inc
loop
mov
or
pushf
pop
lock
push
fwait
lret
movsb
xchg
shrl
gs
rcl
sti
mov
lock
push
les
add
cli
js
inc
ret
sub
hlt
loopne
jb
cmp
dec
orl
leave
dec
insl
or
loop
sysenter
ret
mov
es
std
mov
sub
jp
cmp
fdivl
mov
nop
lret
xor
sub
lcall
push
bound
xchg
test
icebp
add
sub
hlt
test
int3
mov
fcomp
iret
xchg
adc
jbe
push
cmc
rorb
pop
ds
lret
mov
inc
loope
adc
addl
int3
dec
in
mov
nop
xchg
ret
inc
and
ja
insl
ja
xchg
fadds
pop
cmc
popf
popa
push
int3
arpl
mov
pop
cwtl
mov
sbb
daa
out
imul
enter
push
xor
lcall
unpcklps
xor
jae
xorb
jle
ret
pop
adc
inc
pop
cld
xchg
loopne
or
mov
imul
jo
push
test
push
cmp
cmp
int3
lods
sar
jbe
xlat
mov
insl
xchg
push
enter
adc
xchg
cwtl
aam
xchg
dec
inc
jg
ja
xchg
add
xor
mov
mov
xlat
outsb
sub
shrl
inc
mov
jge
or
mov
xlat
and
or
adc
inc
push
ja
push
add
pop
add
add
inc
and
mov
xor
xchg
xorb
ret
sub
xchg
push
ja
xor
xlat
and
sub
pushf
xor
xor
or
pop
stos
mov
cmc
mov
sub
rolb
xor
bound
jbe
ja
pop
movsb
leave
dec
and
or
int3
ret
xor
insb
sub
test
test
ss
movsb
stos
lods
roll
out
or
jb
sbbb
add
and
adc
lahf
je
int3
or
insl
ret
mov
xor
add
stos
sbb
ret
push
pop
imul
jge
cltd
mov
repnz
mov
or
fwait
and
fcmovne
jle
lods
xlat
add
and
xchg
xorl
pop
xchg
inc
inc
neg
loopne
clc
addr16
je
dec
xor
jmp
fucomip
outsl
mov
add
xor
enter
ljmp
in
mov
mov
fiaddl
lret
xor
cld
scas
ret
in
cmp
gs
mov
fstpl
je
fwait
ret
sbb
dec
in
mov
cmp
mov
imul
cmc
mov
push
bound
jle
add
scas
or
pop
or
pop
fnstenv
outsl
test
lods
and
loop
mov
jbe
stos
in
sub
clc
aam
sub
std
xchg
jmp
push
outsl
xor
add
add
das
in
push
stos
out
mov
inc
dec
add
cmpsb
mov
add
arpl
iret
lea
mov
xbegin
add
dec
cltd
jns
lods
sahf
cmc
mov
test
daa
cli
pop
clc
rcll
sub
ret
and
pop
cmp
mov
sub
decb
jmp
lods
mov
dec
dec
dec
adc
jle
cmp
in
dec
and
jl
or
cwtl
cmc
inc
cmp
sbb
cmp
ss
loopne
sub
outsl
push
sbb
mov
dec
inc
mov
cld
hlt
mov
sbb
inc
and
pop
xor
mov
fwait
push
adc
jp
loope
daa
adc
or
fdivr
js
pop
in
xlat
clc
jne
fsubs
xor
pop
xchg
jbe
jns
sub
repnz
and
js
push
loope
ljmp
cmp
jg
xchg
xchg
mov
xchg
stc
xchg
inc
jge
std
adc
cmp
rorb
dec
cmc
sub
adc
sahf
add
mov
fstpl
test
cmpsb
pop
sub
dec
jecxz
rcl
imul
or
int3
dec
xchg
outsb
aaa
sbb
xor
data16
nop
repz
das
lahf
cmp
stos
roll
mov
movl
in
loop
xchg
push
ss
mov
test
xor
in
sub
xchg
hlt
fs
sub
add
lods
movsb
dec
mov
test
filds
adcb
movsl
adc
mov
add
dec
push
dec
ja
lahf
jecxz
mov
imull
mov
mov
dec
into
aaa
lds
push
push
jo
dec
ljmp
xchg
popf
int
mov
push
sbb
dec
shlb
popa
jecxz
pop
push
fcom
or
aaa
pop
add
idivb
and
jbe
aad
cmc
shlb
fwait
mov
insb
dec
sbb
jb
jg
mov
or
jne
and
popa
les
in
fnstcw
pop
ds
mov
outsl
aad
mov
fisubrs
or
enter
sbb
call
outsl
xor
sub
or
mov
insl
sub
sbb
inc
in
ja
lea
dec
push
xchg
icebp
stos
pop
int
inc
test
jne
lods
pop
push
sbb
fdiv
adc
arpl
bsr
aaa
and
rorl
inc
push
xlat
and
cmp
les
or
jo
push
pop
cmpsb
loope
add
std
add
inc
pop
xchg
xor
loope
es
sbb
in
or
xchg
cmp
das
neg
mov
aas
test
addr16
xor
adc
pop
or
xchg
mov
testl
adc
xchg
dec
insl
inc
insb
loop
pop
jp
icebp
ja
bound
pop
xchg
and
push
pop
out
mov
scas
mov
pop
mov
ret
fcomip
sub
aas
femms
movl
pop
cmp
xor
and
dec
aam
repnz
jae
shlb
push
lods
dec
pop
and
add
mov
jecxz
fadds
fwait
loop
aam
bound
push
in
ficoml
lock
or
ffreep
or
repz
mov
fs
aaa
mov
jge
pop
call
lcall
out
call
ss
ss
push
pusha
out
push
shlb
jb
pop
outsl
out
fdivrs
stc
in
xchg
xlat
lds
les
cli
jo
stos
sub
xor
mov
jl
push
push
sub
inc
pop
arpl
add
testl
mov
aad
mov
scas
shrl
enter
push
test
es
adc
push
in
pop
fisubs
jmp
sub
sbb
cmp
jae
push
fiaddl
cmp
or
sub
mov
clc
dec
das
pop
je
and
idivl
sbb
dec
dec
pop
push
les
dec
xchg
mov
aam
jns
in
aaa
jge
cmp
fwait
insl
fcompl
push
fs
push
inc
sti
sbb
loopne
scas
cmp
inc
clc
mov
outsb
dec
mov
push
std
cmp
jle
inc
pop
mov
add
and
inc
push
sbb
push
jnp
in
inc
mov
aaa
into
pop
push
lret
mov
test
dec
jmp
push
and
mov
push
loope
cltd
mov
js
push
sub
cli
jb
les
mov
dec
movsl
add
dec
pop
lahf
pop
ds
arpl
mov
sbb
mov
or
out
pop
icebp
movsl
inc
std
test
jmp
mov
dec
dec
cmp
mov
cmp
jne
sub
adc
out
fildl
std
add
sub
test
dec
popa
repz
insb
orb
push
arpl
mov
adc
xor
jae
cmp
jmp
int3
xchg
cltd
or
or
movl
mov
or
das
ss
pop
jb
push
hlt
adc
shlb
sbb
jne
enter
mov
addr16
rcl
aad
mov
ret
aad
into
lods
arpl
out
xchg
mov
mov
jno
cwtl
mov
and
sahf
pop
cmp
dec
movsb
insb
and
xchg
push
jno
mov
mov
jo
ljmp
pop
jecxz
lea
in
fs
jle
adc
jne
lret
or
mov
and
xchg
dec
dec
and
jne
push
sub
inc
fwait
sub
or
jnp
mov
outsl
popa
lock
cltd
insl
jne
lods
fnstenv
inc
inc
inc
push
bound
call
dec
add
pusha
dec
jno
lret
mov
mov
out
push
or
and
jnp
cmp
inc
pop
xchg
xor
cmpsl
test
rcrb
stos
loop,pt
pop
sarl
jnp
outsb
cltd
gs
jle
mov
inc
mov
inc
and
sub
test
sbb
int3
cmp
cltd
xorl
incl
dec
pop
mov
ds
clc
aad
aas
insb
pusha
fstpt
xor
stos
push
popl
mov
aas
sbb
mov
inc
mov
inc
rcrb
add
ljmp
pop
mov
aam
insl
ffree
adc
fsubrl
xor
dec
xchg
jl
inc
or
popl
sub
xor
call
inc
fcoms
lods
rolb
int
test
adc
inc
das
jo
pop
jnp
ret
pop
imul
sahf
test
sbb
adc
push
or
daa
mov
inc
cs
jb
mov
dec
xchg
sub
add
scas
sub
mov
or
incb
minps
cs
xor
jb
repz
xor
into
mov
scas
aam
cld
push
inc
mov
sub
hlt
push
inc
push
mov
stos
inc
mov
fmul
icebp
add
or
mov
and
sbb
mov
push
ret
fcmovnb
les
lods
push
mov
push
pop
adc
call
shrd
sub
pxor
and
gs
inc
stos
gs
clc
fxch
push
add
mov
jl
fwait
and
je
or
and
xchg
jbe
popf
pushf
ss
xchg
xlat
call
out
pusha
mov
push
shr
lret
sbb
outsb
mov
mov
and
hlt
mov
stos
mov
data16
gs
push
and
movsb
movb
je
stos
pop
ret
scas
push
or
ja
je
xchg
imul
ret
mov
nop
mov
dec
xchg
dec
lods
mov
push
xor
push
jl
jecxz
stc
call
xchg
cmpsb
xchg
in
adcb
inc
mov
fidivl
out
arpl
outsl
shll
leave
cmpsl
add
out
add
test
call
ret
jge
jmp
test
leave
shrb
xor
inc
push
push
xor
add
add
sahf
ss
mov
mov
fldl
in
adcl
fsub
and
movsl
lods
out
adc
popa
cld
les
cmc
jge
scas
lret
push
mov
mov
xor
xchg
mov
decl
leave
pushl
or
std
mov
stc
fwait
sub
ljmp
lock
test
jb
or
lock
stc
loopne
xor
and
push
cmp
hlt
in
adc
sbb
push
mov
shr
cmp
shrl
mov
xor
add
push
nop
subl
xor
leave
dec
arpl
mov
cmpsb
in
shll
cs
fstl
mov
dec
lret
mov
shrl
push
stos
repnz
scas
jecxz
sti
cmp
pop
sbb
jmp
pop
outsb
movsb
xor
dec
leave
orb
movsb
dec
daa
lods
pop
imul
cmc
sbb
pop
mov
movsl
push
mov
jmp
add
add
pop
jl
mov
and
mov
lea
xchg
mov
jnp
mov
adc
push
out
push
mov
dec
jbe
dec
repnz
loopne
xchg
adc
or
stc
adc
imul
aam
xchg
rcll
dec
and
pop
fstpl
lods
pop
push
lods
addr16
call
sub
pop
out
and
cmp
push
aaa
dec
mov
fldl
jmp
icebp
lds
dec
adc
mov
add
int
hlt
aad
popa
and
jmp
xchg
cmp
bound
inc
push
pusha
cltd
mov
iret
push
push
ret
adc
sbb
clc
aas
mov
and
fildll
dec
xor
push
mov
daa
lods
es
arpl
jns
enter
das
push
divb
js
or
cmp
mov
outsl
or
mov
mov
sbb
and
dec
cmpsl
pop
pop
push
icebp
loopne
push
dec
add
pop
xor
iret
lcall
scas
sbb
test
cmp
subb
xchg
jnp
lahf
or
out
shll
fisttpl
push
sar
addb
jb
scas
lea
dec
xchg
adc
pushf
les
lret
repnz
xor
xor
daa
xchg
mov
push
test
lods
nop
dec
sbb
insl
mov
jecxz
aad
out
test
push
xchg
xchg
cmp
mov
daa
mov
icebp
pop
cmpsb
add
and
dec
test
jb
dec
jmp
mov
adc
bound
xchg
mov
mov
pop
push
punpckhwd
sbb
inc
test
xchg
icebp
or
jmp
push
in
cmp
cmp
sub
jl
cmp
lahf
fildll
ret
push
mov
leave
rcrb
dec
xchg
cli
jle
lcall
fcompl
mov
or
xchg
xchg
jbe
loop
jp
testl
sahf
jne
loop
nop
mov
out
repz
lods
loopne
mov
cmp
cmp
outsb
scas
add
hlt
push
xor
loop
add
mov
jne
popf
jmp
xchg
mov
push
add
inc
insl
bound
and
mov
xchg
shlb
xor
add
sbb
xchg
add
jl
fdivp
inc
leave
or
cmp
out
push
dec
and
and
insl
mov
adc
std
in
imul
sti
lock
out
xchg
lret
pop
inc
inc
dec
and
clc
ss
stos
push
fwait
dec
jmp
and
xor
arpl
or
xor
mov
adcb
push
out
xchg
mov
leave
jnp
pushf
fildl
pop
mov
aam
mov
xchg
stos
test
aad
pop
lahf
xor
mov
jb
das
rorl
dec
adc
jb
cmpsl
outsl
pushf
insl
aam
lods
lcall
xchg
sub
lea
jb
jl
test
lds
xor
add
push
inc
mov
je
mov
idivw
cmpsl
les
mov
les
cmp
cs
xor
mov
std
in
ds
into
add
cmp
mov
sub
lcall
testl
out
movsb
mov
std
loop
stos
movb
sub
cmp
repz
stos
push
mov
inc
mov
push
mov
dec
xchg
lods
addr16
fstl
push
test
lock
or
jmp
pushw
xor
dec
xor
mov
clc
cmpsl
les
mov
push
scas
adc
ret
loop
or
call
jae
push
mov
jmp
loopne
shrb
test
xchg
push
pop
pop
push
jl
cwtl
subb
mov
mull
push
enter
sub
sti
ja
inc
ret
inc
dec
sbb
sub
js
popf
push
cmpsb
into
push
call
sarl
dec
rol
xchg
lods
cmpsb
cmp
aad
sti
pop
lods
mov
or
lea
sub
cld
xchg
data16
sub
xor
mov
imul
aam
ror
add
or
pop
lods
clc
std
pushf
xchg
adc
ret
loop
pushf
xchg
mov
cwtl
fwait
lock
out
adc
cld
xchg
jl
fdivrl
adc
xor
sbb
and
inc
rorl
shlb
sub
das
adc
cmp
mov
jl
fs
call
mov
aam
adc
ja
xor
mov
dec
pop
and
jno
xor
pcmpgtb
aaa
dec
pop
es
push
popa
aad
dec
push
imul
xchg
push
rorl
das
xor
aad
or
imul
mov
pop
repz
sub
aad
ljmp
shrb
xchg
or
mov
inc
loope
adc
or
pop
adc
ja
cs
ds
mov
mov
lahf
jecxz
hlt
xchg
aas
mov
stos
dec
shlb
and
inc
in
call
mov
sbb
js
lds
aaa
mov
and
add
or
repz
inc
or
add
mov
mov
mov
push
add
fcomps
mov
push
lods
bnd
scas
mov
dec
int3
inc
into
sub
cs
xchg
rorb
pop
cli
shrb
push
mov
mov
xor
stos
rorl
lds
xchg
mov
xor
pop
mov
test
fisubrs
ficoml
or
inc
psubsb
dec
push
mov
imulb
and
mov
pusha
push
pop
jmp
ret
sbb
and
je
inc
les
js
xchg
mov
in
jle
imull
dec
hlt
mov
xor
dec
movsl
mov
stos
and
or
xor
fwait
or
dec
cmp
loope
xchg
cmp
out
outsl
bound
cmp
add
mov
pop
mov
fsts
pop
or
imul
pusha
xchg
stc
mov
cmp
xchg
pop
add
xor
push
mov
aas
xchg
or
xchg
lret
sbb
and
and
arpl
addb
add
cmpsb
sbb
mov
push
fsubrl
or
xor
mov
std
ss
mov
iret
mov
cmpsl
push
fisubrs
cmpsb
lret
fstps
aam
ja
bnd
out
sbb
lods
imul
add
push
sub
nop
cvttps2pi
mov
or
sub
push
aad
stc
repnz
popf
cwtl
add
pop
arpl
cmp
pop
mov
mov
inc
jnp
cli
dec
pusha
jg
cmpxchg8b
adc
push
mov
in
loopne
xchg
mov
cmp
cmp
into
xchg
and
lea
inc
jne
mov
addr16
push
push
sbb
inc
adc
adc
xor
fwait
call
and
adc
test
xchg
jne
inc
add
inc
xor
fcoml
add
mov
cmp
icebp
sahf
and
lcall
jmp
push
outsb
jmp
out
pop
or
mov
inc
popf
sub
xor
stos
xchg
cli
or
and
mov
shll
dec
fucomp
out
movb
je
and
loopne
imul
xchg
ret
push
lcall
push
loope
xchg
add
push
mov
into
push
and
inc
lods
add
call
enter
adc
xchg
pusha
dec
imul
insb
jae
fnsave
and
jno
or
divb
ficomps
and
in
in
xchg
cmp
loopne
in
lret
ret
fcompl
loope
repz
test
lahf
scas
or
icebp
stc
fistpl
fwait
shrl
jbe
movsb
xlat
push
jmp
ja
pop
xor
stos
xor
stos
dec
mov
in
cmp
jle
clc
sahf
lods
mov
dec
adc
popf
cmpsb
sbb
xor
pop
cmp
xchg
insb
mov
mov
mov
movsb
icebp
jb
scas
jl
movsl
add
mov
test
dec
sub
jns
xor
add
adc
ss
sbb
cmp
mov
sub
mov
insl
cmp
pushf
aad
icebp
das
out
sbb
xor
push
and
jns
inc
bound
jns
cs
adc
enter
jnp
shrl
outsb
mov
das
mov
aam
inc
icebp
xlat
les
add
inc
push
adc
pop
jb
xor
inc
adc
lret
or
xchg
addr16
popf
push
jp
outsl
arpl
cmp
or
lea
xchg
push
push
inc
xor
aas
or
fiaddl
aaa
mov
and
fcmovb
add
jno
mov
lret
out
clc
std
dec
aad
in
or
or
pop
ret
xor
dec
in
jp
jnp
and
add
cmp
pop
push
dec
stos
adc
jle
lock
xlat
add
pop
in
jae
push
cmp
mov
bound
lcall
mov
xchg
arpl
push
xchg
movsl
fcmovne
lea
and
jo
imul
push
pop
enter
sub
cld
andl
jg
mov
jns
jmp
lcall
sti
inc
add
aas
cmovg
scas
dec
dec
cltd
inc
dec
jno
and
scas
out
push
or
incb
xchg
mov
mov
andb
imul
mov
outsl
lcall
stos
mov
dec
inc
pop
cltd
movsl
push
or
test
dec
gs
sti
fidivrs
mov
mov
into
scas
int
cs
movsl
scas
fs
inc
dec
lcall
into
les
jne
cmp
test
xorl
jae
pop
out
sbb
dec
pushf
out
in
lea
pusha
and
and
outsl
push
int3
nop
add
pop
dec
push
push
insl
jmp
adc
ret
and
shlb
cli
sub
jg
mov
cmp
out
mov
gs
xlat
xchg
test
sbb
pop
sub
sub
cmp
mov
rorl
enter
outsl
cltd
cbtw
sahf
adc
sbb
faddl
push
inc
add
fisttps
sbb
add
mov
out
test
sbb
fnstenv
pop
xlat
fdivs
loopne
loop
insb
mov
sbb
jb
dec
push
cmp
roll
adc
movl
inc
and
fidivrl
inc
dec
and
add
fcmovnu
ds
cmp
dec
jecxz
stc
fucomp
mov
addr16
mov
mov
in
jge
pop
xchg
dec
hlt
fmuls
mov
push
mov
adc
mov
mov
push
xchg
ret
test
or
pushf
jl
inc
jg
ja
add
test
cmc
push
push
adc
mov
mov
outsl
jl
lcall
add
mov
pop
aam
mov
mov
imul
test
jl
pusha
xchg
loope
and
testl
outsl
and
or
test
push
adc
enter
sub
inc
scas
xchg
nop
stos
cmpsl
imul
push
push
roll
imul
imul
mov
shrl
inc
jl
stc
test
mov
fisttpl
and
xor
loopne
push
push
mov
mov
sbbl
pop
inc
dec
cmc
inc
add
stc
push
xchg
or
notb
add
jb
xor
mov
fsubs
mov
cmp
repz
lock
xchg
test
sub
and
lcall
adc
aas
jg
lret
pop
cmp
dec
or
pop
shlb
and
mov
xor
aam
or
dec
mov
xorl
add
xchg
xchg
in
ffreep
mov
jecxz
sub
les
std
iret
ret
insl
add
cld
cmp
sub
int
lcall
or
and
scas
in
cltd
ds
and
popf
xchg
jg
ja
pop
adc
insl
imul
push
adc
mov
xor
imul
addr16
icebp
outsl
adc
and
xchg
testl
lcall
addr16
xchg
fcoms
cmp
xor
add
xchg
inc
movl
js
jns
popa
das
stos
mov
dec
xor
pop
sbb
call
lods
fildll
repz
inc
pusha
shrb
xchg
mov
testb
loope
inc
push
hlt
adc
push
jecxz
sarb
xchg
fnstenv
into
pop
add
clc
stc
mov
xor
daa
dec
sbb
lods
fsubrl
adcb
sbb
aad
in
xchg
out
cld
shlb
fmull
out
jle
and
dec
test
sti
cmpsl
fs
gs
sub
ja
aam
add
js
and
lock
fstps
lods
dec
jnp
sub
mov
aaa
jb
filds
push
out
mov
mov
push
aam
fimull
cmpsb
arpl
sub
xlat
sti
popf
movsb
inc
daa
rcll
hlt
out
stc
mov
scas
mov
out
dec
xor
fisttps
and
jmp
jg
scas
cmp
mov
ret
inc
iret
ljmp
jae
das
pop
into
jle
and
cmc
jmp
jle
imul
int
int
icebp
mov
cmp
bound
outsl
mov
mov
fsts
daa
pop
cltd
sbb
sub
push
psubsw
add
enter
and
popl
ja
jbe
lret
dec
mov
xchg
or
adc
flds
fidivs
lea
inc
test
lods
outsb
sti
fldcw
fisttps
xchg
mov
leave
add
push
push
dec
mov
jno
dec
push
push
mov
xchg
cltd
sti
jns
jle
test
shr
lret
push
ss
cmp
sbb
or
xchg
dec
jecxz
outsl
sbb
inc
or
sub
cmp
rolb
mov
cmc
nop
fnsave
and
gs
xchg
xchg
rolb
lcall
dec
mov
imul
fmul
mov
sub
push
inc
push
xchg
and
push
mov
movsb
dec
popf
or
es
fs
dec
je
sbb
add
jge
jb
pushf
adc
sub
std
pop
and
sub
aam
xchg
pop
nop
cld
cs
jecxz
pop
das
pop
jb
xchg
cmpb
or
mov
out
lret
scas
mov
push
dec
mov
mov
rorl
mov
dec
fcmovbe
dec
or
mov
dec
and
jnp
dec
cli
adc
mov
and
int
adc
xchg
pop
repnz
or
stc
inc
xchg
ficoml
jmp
push
mov
stos
jge
push
ja
adc
stos
dec
call
clc
fsubrl
push
jae
outsb
push
stc
adc
lcall
stc
out
in
sti
mov
imulb
and
push
in
icebp
cmp
xor
add
repz
xchg
pusha
jp
in
sbb
fisubs
xchg
inc
and
jno
add
jbe
cmp
or
fnstenv
mov
ja
repz
xchg
pop
shrl
mov
pop
test
sbb
or
fidivrs
inc
mov
jb
hlt
adc
loop
xchg
iret
mov
mov
mov
idivl
insb
repnz
cmpsl
xor
push
insb
dec
mov
push
adc
add
ds
xchg
lcall
or
daa
push
push
int
add
mov
lock
ss
xor
pop
sub
lea
addl
adc
pusha
ficomps
enter
xchg
dec
add
fwait
lcall
jno
cmc
addr16
out
jp
mov
fs
sbb
mov
mov
dec
inc
jl
leave
sub
xchg
dec
dec
jo
xchg
cmc
fdiv
jno
push
les
test
aad
xor
loopne
fwait
jo
sarb
insl
pop
lods
cmp
xor
sub
and
add
in
jno
clc
jg
jg
frstor
cld
stc
fidivrl
cld
popf
pop
ljmp
addl
sbb
jae
cmpsb
pop
adc
aaa
in
aaa
aad
cld
scas
add
push
shrb
js
popa
pop
or
loopne
adc
negl
adc
dec
mov
xchg
mov
push
dec
mov
add
mov
icebp
sub
lds
inc
fwait
push
repnz
fmull
sub
xlat
jmp
rorb
mov
sbb
fcoms
adc
sahf
and
dec
imul
sub
aam
xor
out
out
arpl
adc
addr16
or
or
fs
fsub
test
andb
adc
movsb
mov
xchg
mov
sub
dec
dec
stos
sub
aam
cs
call
xor
out
lahf
mov
adc
xor
pop
sbb
push
test
adc
jnp
and
insb
fildll
xor
test
ja
ss
out
add
mov
add
add
xor
rclb
mov
xchg
mov
xor
out
jle
fdiv
mov
int
sbb
mov
or
sbb
xchg
lods
sbb
sbb
pop
mov
inc
mov
jg
mov
int
mov
push
pop
shlb
pop
cltd
test
sbb
pop
stc
cmc
out
inc
mov
xor
out
es
jl
in
pop
pop
lods
imul
add
xchg
jno
dec
repz
mov
and
mov
or
int3
out
pop
mov
std
add
push
into
popf
adc
cmp
xchg
lretw
adc
xor
add
push
bound
iret
jns
sbb
adc
out
and
fsubs
or
inc
cmp
jnp
out
sbb
ljmp
lret
cmpl
push
pusha
push
sbb
cwtl
rorl
pop
add
mov
mov
jae
lods
sub
or
xlat
loope
aad
mov
fdivl
xchg
sub
push
ljmp
aad
pushf
mov
sbb
pop
shr
pop
dec
aad
xchg
into
dec
les
or
jmp
jmp
push
pop
sbb
popf
sub
jp
leave
xlat
ret
adcb
xchg
stos
xchg
call
popa
int
rclb
test
mov
ja
stos
pop
mov
sub
fstcw
fdivrs
test
hlt
cmp
dec
addr16
pop
mov
push
addr16
cmp
lahf
jp
daa
imul
mov
cmpsl
jecxz
or
jge
dec
sbb
es
mov
cmp
sub
jo
inc
sub
mov
xor
cmpsb
mov
add
jl
and
scas
or
jge
popf
mov
and
push
iret
daa
sub
dec
insb
xchg
decl
int
mov
inc
jmp
mov
fstpl
sub
mov
pusha
hlt
addr16
dec
fldt
out
popf
jle
orl
dec
mov
mov
test
xlat
and
shl
hlt
in
mov
int3
cld
add
mov
mov
cmc
add
sbb
fidivrl
push
inc
sub
aaa
pushf
add
dec
and
push
dec
lcall
xchg
adc
sbb
or
outsb
imul
sub
outsl
adc
lock
loope
sbb
and
sub
push
sbb
mov
lret
nop
jecxz
fnstsw
sub
out
imul
push
add
ret
in
pop
mov
daa
add
and
jbe
mov
sub
rcll
ret
sub
xchg
nop
lods
loopne
fmuls
xchg
push
aaa
push
xor
loope
rcll
daa
in
mov
scas
dec
xchg
cmp
clc
aam
movsl
mov
das
xlat
jle
pop
mov
test
jge
scas
and
divl
lock
imul
mov
fwait
cli
in
in
loope
int3
sbb
fadd
ret
inc
mov
jnp
jbe
jmp
mov
jecxz
jle
call
lods
push
inc
cs
push
ds
ja
adc
test
cltd
ret
push
scas
std
jnp
mov
fisubs
sub
add
daa
xor
mov
mov
cmpsb
pop
cmp
aas
sbb
pop
andnps
adc
inc
fmul
stos
adc
dec
mov
out
bound
xchg
mov
mov
test
int3
in
daa
cmc
jns
or
flds
lods
jecxz
cli
pop
xchg
pop
repz
or
push
push
aaa
lds
xchg
out
pop
leave
test
mov
pushf
aas
ret
mov
inc
jae
je
int
insl
fwait
adc
push
andb
or
and
xor
fs
jnp
push
cmc
int
cmp
xor
push
ret
mov
adc
es
mov
pop
lods
daa
xlat
adc
loope
or
data16
inc
mov
mov
jp
aaa
push
cmp
out
cwtl
pop
ret
or
leave
aas
jb
repnz
fisttps
in
data16
in
xor
xor
jne
daa
mov
les
mov
mov
ljmp
mov
push
mov
mov
pop
rcr
cmp
inc
leave
es
test
push
aas
in
adc
fwait
cmp
or
mov
loop
xchg
xchg
fs
js
andb
rol
fmull
xor
lahf
mov
jp
cmp
mov
sbb
out
jecxz
jb
js
imul
cmp
cmp
xor
adcb
dec
pop
mov
xlat
dec
aaa
ror
pop
fnsave
mov
cs
ret
add
or
jg
cmpl
scas
cmp
mov
xor
repz
xchg
ds
sub
bound
mov
inc
jge
hlt
mov
pop
push
je
mov
outsb
in
mov
add
jecxz
mov
cltd
ret
mov
jmp
push
xchg
cmp
fdiv
jnp
xor
jl
aam
imulb
push
stc
sahf
dec
push
scas
mov
inc
mov
add
sbb
and
addr16
arpl
popf
pushf
xor
ljmp
movsl
rorb
push
cmpsl
cmp
xchg
cs
fprem1
mov
cmp
addr16
out
jne
movsb
mov
cmp
leave
dec
and
into
test
bound
or
adc
or
and
mov
mov
adc
mov
data16
jns
sbb
sub
adc
add
jmp
xchg
push
jo
lods
jb
cltd
dec
jg
push
or
jne
or
mov
sub
mov
sub
pushf
test
dec
std
push
mov
jno
jg
arpl
or
adc
fs
or
add
pop
ret
and
lods
push
add
jnp
jnp
negl
cltd
stos
inc
mov
sti
inc
repnz
push
fadd
iret
sub
pop
mov
xlat
mov
loopne
xor
and
es
push
jle
adc
mov
cmpsb
js
popa
lret
call
jmp
pop
pushf
mov
fs
icebp
jnp
sbb
cs
bswap
sbb
shll
roll
inc
pop
daa
popa
inc
adc
xorb
insl
pop
outsl
mov
dec
enter
pop
mov
mov
jae
inc
push
addl
pop
cmp
xor
dec
mov
or
xor
mov
into
sub
shlb
and
ja
mov
or
jge
fiadds
push
scas
xchg
lds
add
ficompl
add
into
mov
adc
lret
loop
push
pop
insb
sub
outsb
int3
jecxz
dec
scas
aad
jae
fisubrl
iret
or
in
leave
into
test
jmp
xor
sbb
inc
mov
push
inc
adc
scas
mov
xor
cmc
sub
pop
cltd
fs
cmpsb
imul
cwtl
sbb
xchg
xor
outsb
sbb
mov
and
orl
adc
sahf
inc
loopne
sub
out
or
pop
or
dec
push
sub
scas
sub
es
iret
xchg
pop
mov
mov
push
cs
les
js
add
rdmsr
cmp
mov
and
das
inc
sub
xchg
mov
nop
sub
les
inc
repz
ret
xor
fnsave
arpl
dec
aad
sbb
lock
xchg
nop
push
les
add
push
push
stos
sahf
dec
cmp
sub
mov
jge
push
imul
fisubl
mov
lock
mov
inc
or
cmpsl
sbb
xor
push
je
gs
imul
mov
sub
sbbb
stos
lds
jbe
outsb
pop
int3
in
out
mov
push
movsb
movsb
and
sbb
dec
movsl
rorb
xor
scas
add
in
mov
mov
popf
push
stos
jp
xor
hlt
int3
and
mov
push
popf
cmp
jmp
test
arpl
test
inc
aas
dec
lods
ja
pcmpeqd
lret
test
xor
xchg
sbb
xchg
loop
das
push
into
dec
mov
outsb
push
inc
push
ja
cmp
inc
lds
loopne
add
sbb
adc
mov
sub
mov
mov
scas
lds
lea
push
int3
int
mov
jmp
sbb
sahf
incl
cltd
dec
cmp
xor
je
stos
pop
jmp
out
outsb
lcall
bound
into
jecxz
popa
inc
push
imul
stc
dec
jae
out
jb
sbb
int
out
and
sub
jns
dec
lds
mov
sbb
push
addb
outsl
ljmp
mov
imul
mulb
out
popf
adc
sub
scas
loop
cmp
repnz
lahf
sbb
std
into
xchg
push
mov
jg
sub
push
movsb
ss
iret
dec
xchg
xchg
in
push
ja
test
push
rorb
xchg
pushf
in
les
pusha
dec
add
loope
sub
sbb
adc
cwtl
pop
mov
jmp
xchg
cmp
mov
imul
pop
inc
and
es
dec
popa
mov
or
rcrb
push
inc
mov
mov
pop
in
out
int
lcall
lahf
hlt
cmp
jmp
divb
fsubs
add
mov
fwait
test
sbb
test
sub
sbb
cmp
inc
sub
sbb
or
aaa
push
push
xor
pop
mov
repnz
roll
inc
mov
dec
mov
repz
jne
xor
rcr
sub
mov
cwtl
and
push
xor
movsl
mov
adc
out
push
test
mov
adc
inc
dec
adc
cmp
and
pushf
pop
pop
mov
dec
inc
stos
lret
sbb
mov
jno
sbb
imul
adcl
adc
mov
ljmp
cmpsl
inc
jns
aam
out
cwtl
jmp
push
rcrl
mov
fwait
cmp
lock
subb
decl
adc
popa
fs
enter
add
scas
mov
test
xchg
leave
adc
divb
mov
sbb
pop
push
fsubrp
idivl
nop
mov
into
in
sbb
push
rcrl
test
xor
xchg
iret
rorb
es
test
mov
dec
xlat
mov
push
lea
sub
sbb
xor
push
xorl
push
ret
lahf
sahf
push
mov
or
pop
mov
dec
inc
sub
dec
scas
sbbb
mov
call
jp
leave
pusha
cmp
jb
add
mov
cs
outsl
shl
mov
mov
sub
enter
add
adc
lret
ficomps
add
or
dec
xchg
lret
add
test
xchg
outsl
xor
lret
mov
mov
jo
adc
in
pop
mov
xor
xchg
pop
and
sbb
aam
faddp
xchg
rcll
xchg
adcl
xchg
sub
ljmp
jnp
cmpsb
in
pop
ja
push
mov
scas
cmpb
ss
or
imul
push
inc
push
mov
popa
dec
stos
sbb
mov
int
fisubrs
pushf
mov
adc
repz
inc
adcl
cltd
lods
mov
out
fwait
inc
xchg
xorb
fs
cmc
xchg
push
jecxz
inc
test
xchg
rorl
mov
pop
aaa
sahf
pop
int
bound
mov
cld
xchg
add
xchg
sub
test
imul
pushf
mov
into
lret
fstpl
lret
scas
cltd
or
and
test
mov
imull
xor
push
rcr
fdivrs
mov
cmpl
pop
mov
jl
add
jb
mov
bnd
rcrb
mov
fldt
mov
out
pop
xor
xor
xor
jecxz
ljmp
adc
mov
sbb
cmc
dec
jae
mov
into
xchg
mov
sbb
add
stos
mov
jmp
inc
adcl
ja
int
inc
jae
cmp
arpl
and
jp
dec
mov
lods
cmp
sub
mov
out
add
mov
add
xchg
sti
mov
ffreep
lretw
mov
jnp
mov
mov
into
fs
xlat
sbb
sub
jne
adc
adc
call
and
lret
fmuls
scas
jno
test
sbbb
adc
cmc
sbb
xor
arpl
roll
inc
sub
imul
pop
jo
xorb
mov
fdivs
xor
sarb
aam
test
sub
test
push
push
xchg
scas
or
lea
inc
es
and
add
int3
mov
cmp
and
push
add
mov
jg
addr16
mov
sbb
mov
mov
loop
pop
test
sub
jge
add
push
sub
sub
lcall
inc
fidivs
cmp
inc
sub
cmp
dec
popf
jle
lahf
inc
adc
sbb
jg
lcall
jecxz
aaa
push
rolb
insl
addl
and
jns
aas
pop
cwtl
mov
loopne
mov
jge
fldcw
adc
or
push
fcomps
sbbl
int
idiv
xor
pop
push
adc
pop
js
test
cmpsb
sub
stc
sahf
sub
mul
std
icebp
test
cli
test
repz
scas
mov
sbb
sahf
mov
addl
pop
add
jnp
gs
cmp
rclb
sbb
mov
sbb
mov
push
test
mov
mov
jle
mov
popf
rorl
jp
shrb
xor
fdivp
dec
jo
mov
test
shl
or
cmp
jb
adc
pusha
push
xlat
jae
orb
sub
and
xor
stc
fists
jecxz
push
clc
rcr
loope
lret
icebp
jecxz
es
cwtl
jmp
push
addr16
enter
sub
inc
fldcw
mov
xor
rcrl
sbb
lret
push
push
nop
sbb
xchg
adc
test
xchg
mov
pop
push
decb
imul
aam
fistpl
and
pop
fcomps
mov
outsl
mov
cmpsb
imul
jo
sub
mov
inc
imul
fcmovne
fisubrl
and
cmp
stos
push
pop
clc
ret
push
pop
je
in
cmp
xchg
popa
xchg
call
sbb
dec
fsubs
add
xor
mov
jbe
aas
push
xchg
outsb
clc
jecxz
push
mov
call
or
mov
out
sub
inc
adc
push
mov
lods
push
test
fucomp
cmp
mov
dec
insb
gs
sahf
and
inc
xchg
stc
dec
push
les
notb
xlat
or
pushf
ja
outsl
push
imul
hlt
lods
notb
rcrl
inc
pop
cltd
icebp
pop
aam
mov
stos
aad
jnp
inc
and
jg
popa
hlt
jmp
js
fbld
in
lahf
or
pop
and
xchg
fmull
aaa
cltd
ja
pop
push
and
mov
adc
push
sbb
cltd
outsl
in
insb
bound
imul
fidivs
inc
mov
decb
inc
out
leave
insb
xchg
fmul
pop
jp,pt
push
cmp
xchg
adc
je
das
sbb
mov
rcrb
rorb
movsb
push
sbb
sbb
jb
mov
inc
push
xor
inc
mov
aad
and
mov
gs
push
mov
scas
inc
int3
push
int3
pop
and
test
adc
les
in
push
test
adc
cmpsl
pop
push
mov
cmp
rcll
ds
mov
es
hlt
pop
cmpsb
sub
stc
das
aas
and
mov
scas
arpl
dec
push
jo
push
dec
fwait
xor
out
or
orb
rolb
cmp
adc
lods
cmpsb
aad
adc
push
leave
xchg
sub
inc
scas
ds
cmovns
fcoms
frstor
push
adc
stos
inc
loopne
inc
insl
add
adc
jecxz
stc
ja
dec
inc
pop
adc
lahf
jle
push
inc
addl
dec
int3
das
cmp
fstpl
pop
sub
addb
jp
aas
out
inc
and
or
loopne
add
fcomps
add
sti
add
pop
sbbb
inc
pop
add
fs
xor
cltd
xchg
lock
inc
rcrl
cmp
and
pop
repnz
push
mov
out
fiadds
and
cltd
xchg
ret
mov
dec
out
out
pop
jle
test
mov
xchg
ret
daa
mov
lds
idivb
add
les
pop
leave
sbb
bound
add
mov
data16
or
mov
mov
dec
cmp
imul
hlt
addr16
fdivs
push
lahf
cmp
xchg
cmp
addr16
lea
cmpsl
sub
das
mull
or
bound
cld
inc
fsubrl
ljmp
data16
test
sbbl
es
jge
add
mov
sub
mov
shlb
pop
mov
add
xor
cld
nop
dec
lcall
jl
pop
ficomps
pushf
int3
mov
shl
xchg
cs
mov
shlb
adc
lods
fidivrl
mov
gs
pop
mov
xchg
and
pop
inc
sar
cs
inc
out
mov
icebp
std
dec
jle
addb
sti
leave
movsb
add
jecxz
in
sarb
push
scas
sub
ja
jne
adc
loope
sub
sbb
outsb
scas
popf
fld
and
in
or
sub
jb
dec
cld
jp
sub
ss
inc
inc
in
lods
loop
popf
xchg
adc
inc
add
or
xor
push
sub
nop
jmp
or
mov
pop
or
lods
push
sub
mov
cmpsl
ss
call
xchg
jnp
sub
push
inc
sbb
aad
loope
cwtl
dec
aad
ja
mov
push
mov
or
mov
jns
ds
inc
lds
stos
int3
jmp
fistps
int
pop
xor
aam
inc
xchg
push
jae
or
jge
pop
lods
xchg
je
mov
in
and
inc
mov
xchg
rolb
dec
cmpsl
or
jmp
adc
shll
jns
mov
mov
hlt
data16
cmp
pop
jo
movd
popf
and
push
je
add
in
jbe
pushf
aam
dec
cmp
outsl
or
jp
xlat
adc
fimull
lret
cmp
ret
xor
jae
cmp
addr16
dec
jb
mov
les
jecxz
lcall
sub
dec
mov
lea
jmp
mov
xchg
cs
enter
mov
push
add
xchg
ret
loop
cmp
adc
fsub
popa
filds
push
jle
iret
rclb
loop
pop
sbbl
pop
mov
fstpl
mov
loopne
cmp
ror
insb
lahf
pop
out
in
sub
loop
loop
insl
adc
js
xchg
bound
mull
sbb
jmp
jp
push
test
icebp
adcb
cmp
cwtl
or
and
jb
shr
insb
iretw
mov
sbb
jle
sbb
lds
add
sub
mov
push
andl
fincstp
mov
enter
cwtl
faddl
or
sbb
clc
das
mov
mov
popa
add
fsts
out
arpl
or
mov
icebp
xchg
les
aam
pop
pop
jb
dec
sarl
cmp
xor
int
imul
sysret
lods
std
std
aam
in
lret
aad
ss
iret
push
enter
in
jae
fldenv
ljmp
or
cmp
in
mov
rolb
addb
add
dec
arpl
inc
pop
dec
mov
js
xchg
adc
icebp
add
mov
cmp
lods
push
shl
or
in
out
jnp
cli
mov
dec
jecxz
pop
and
lods
rorb
xor
inc
inc
push
xchg
inc
gs
lods
cli
out
dec
ret
jbe
dec
scas
lret
dec
in
xlat
fisubl
cmp
je
imul
into
adc
add
mov
inc
and
mov
xlat
lods
push
fidivs
movswl
push
cwtl
outsb
xchg
int
inc
aam
into
lock
xor
sub
dec
les
inc
dec
mov
add
fstps
mov
add
sar
cmp
pushf
adc
sub
lds
mov
movsb
push
test
cmp
mov
inc
test
push
dec
scas
fs
ja
shl
xor
mov
xchg
jno
inc
and
nop
inc
add
int3
push
jo
cli
lcall
pop
into
in
daa
dec
and
test
push
adc
dec
ss
lcall
push
sbb
sub
aam
mov
notl
inc
fsubs
jno
push
arpl
js
shll
jmp
inc
aas
sbbb
mov
shll
inc
shrl
out
es
sbb
sub
icebp
dec
outsl
mov
or
rolb
or
rolb
or
add
xor
or
ja
adc
rorl
aam
stos
das
addr16
jp
mov
xor
in
mov
aaa
adcb
jo
idiv
add
test
clc
fiadds
ss
or
out
fists
mov
pop
cmp
fsubrs
push
push
mov
mov
inc
lret
and
pop
cltd
or
push
stos
pop
out
dec
cmp
iret
inc
jae
xor
outsl
push
push
xchg
ds
mov
add
in
aaa
popa
fnstenv
divb
dec
push
xchg
jg
stos
arpl
cmp
mov
call
cltd
sub
sub
xor
ja
add
dec
mov
dec
daa
and
stos
test
or
stc
insl
loopne
call
dec
in
movsl
and
mov
stos
aad
sarl
dec
nopl
jns
loopne
push
movsl
in
xor
mov
push
adc
add
pusha
clc
ds
pop
sbb
mov
repnz
dec
adc
xchg
mov
cmp
cmp
cmpsb
dec
mov
sbb
comiss
push
and
xchg
push
pop
adc
add
popf
aaa
jns
and
outsl
push
imul
cmp
in
jae
and
xor
jno
or
lods
push
notl
adc
scas
pop
icebp
mov
lret
mov
jnp
fwait
rcrb
pop
aaa
lock
pop
pop
jg
sbb
lahf
call
lds
inc
dec
xchg
hlt
cli
mov
xchg
pop
inc
push
pop
add
fistps
xor
loop
ja
pop
les
xchg
push
mov
int
out
dec
subb
mov
in
push
imul
and
into
push
xchg
out
add
pop
or
es
inc
mov
aaa
test
iret
lods
dec
push
adc
or
cs
int
sub
orb
imul
arpl
insb
int
movsb
mov
int
fcoms
iret
imul
jns
inc
fstpt
xor
sub
mov
int3
mov
or
rcl
pop
cltd
addr16
jle
inc
fnstsw
sti
mov
test
inc
fistps
aaa
xor
aam
mov
jb
loop
sub
inc
mov
jno
mov
dec
sub
adc
cwtl
out
fbstp
bound
addr16
inc
mov
rclb
cmp
cmp
iret
inc
fwait
inc
dec
add
inc
lahf
out
mov
inc
cs
iret
in
add
cmpsb
data16
cmp
call
sbb
cmpsl
jo
rcrl
pusha
sarl
adc
ret
cmp
repnz
push
mov
shlb
rcl
es
mov
add
xor
push
adc
push
lret
icebp
int
push
cmp
sub
std
xchg
in
pop
pop
jbe
in
rcll
mov
pop
inc
andb
pushf
call
out
push
xchg
psrld
orb
shlb
aad
out
or
das
cmp
inc
cmp
mov
or
std
loopne
add
mov
push
mov
add
cmpsb
mov
mov
pop
cmp
lret
push
data16
ljmp
pop
jmp
mov
xchg
pop
mov
dec
movsb
sbb
out
test
scas
push
xchg
inc
jno
sbb
sub
and
jecxz
into
cmpsl
jbe
add
and
sub
repz
sbb
and
loop
aad
aam
out
and
fnsave
pop
push
dec
sbb
pop
test
pop
xchg
xor
mov
cmp
test
movsb
aas
fists
jnp
jbe
cwtl
mov
add
insl
pop
std
into
inc
fdivrs
lods
or
je
aas
and
mov
fmuls
mov
push
xor
add
mov
test
mov
insl
es
shll
pop
shrl
mov
jp
mov
or
or
or
pcmpgtd
cmpsl
test
iret
in
test
or
cmp
test
aas
adc
lods
sbb
out
movd
int
cmc
cld
sti
xor
mov
xorb
loope
lahf
mov
cmp
je
dec
int
test
stos
std
jle
out
fisubrl
ret
aam
popf
mov
js
xchg
mov
sub
mov
not
push
mov
aam
push
bound
into
push
mov
adc
mov
or
scas
js
cmpsb
leave
mov
adc
repnz
push
push
push
cmpsb
out
cli
fildll
scas
into
jmp
inc
mov
notb
dec
dec
sar
adc
mov
pop
mov
mov
jl
popl
or
sub
adc
movsb
in
mov
sbb
lahf
scas
xor
enter
adc
sbb
or
cld
popa
in
xchg
ret
lods
mov
stc
mov
add
enter
test
and
mov
cmp
mov
xchg
mov
fisttpll
dec
sbb
lods
cmp
sbb
call
ret
les
inc
and
roll
inc
sbb
imul
stos
or
sti
fidivrs
jne
push
dec
fisubs
cmp
and
mov
insl
jae
loop
push
push
lods
andb
push
adc
jmp
push
lret
stos
mov
mov
shll
ds
mov
sub
gs
push
xchg
adc
push
adc
js
add
vucomisd
fwait
cmp
xchg
loopne
pushf
sti
mov
clc
cmp
adc
mov
mov
xor
cmp
out
test
xor
fcmovbe
out
test
cmpsb
adc
aam
jb
pop
xor
jp
dec
mov
stos
add
jne
fucomi
int3
xor
xor
in
jns
mov
xchg
sbb
sbb
ss
lock
push
xlat
mov
and
pop
mov
push
adc
cmp
out
sbb
pop
dec
mov
scas
inc
add
mov
out
jns
jmp
fwait
pop
cmp
or
jecxz
movsl
and
mov
cmc
int
stos
movl
jnp
dec
inc
je
mov
fistps
inc
test
scas
sub
test
mov
xor
clc
mov
pop
lret
imul
or
jle
push
add
dec
in
push
inc
jl
aaa
cmc
xor
insl
mov
shr
and
repz
jmp
mov
mov
inc
dec
push
inc
js
jge
stos
shlb
push
es
out
mov
fwait
das
jnp
push
cltd
std
pop
mov
push
mov
mov
sbb
xadd
or
pop
sub
icebp
loopne
loop
jne
pop
stos
into
std
outsl
and
shrd
or
jecxz
fdivr
ficoml
xlat
push
fincstp
sub
shll
stos
sti
ja
shrb
push
imul
inc
fdivs
jne
pop
popa
cmpsb
sbb
fistpll
mov
pop
lods
les
mov
insl
pop
aad
dec
mov
bswap
out
loope
mov
mov
or
bnd
cmc
or
pop
not
cmp
mov
pop
stos
mov
or
pop
dec
in
cltd
add
and
pop
aas
dec
xchg
or
scas
out
pop
les
out
in
push
mov
stos
fnstenv
les
icebp
mov
jb
movsl
repnz
ja
pop
daa
cmp
sub
gs
ss
mov
fbstp
jo
xchg
mov
dec
sub
or
dec
fs
jo
jae
adc
arpl
cld
fists
jecxz
inc
xor
pop
jno
popf
pop
sarb
test
lods
mov
mov
daa
out
les
xchg
mov
mov
in
sbb
jnp
mov
jb
test
mov
and
xlat
mov
jno
ljmp
in
loop
or
jmp
imul
sarl
inc
xchg
push
inc
jno
dec
lods
or
in
data16
sbb
pop
sbb
test
inc
adc
pushf
fs
lret
aas
idivl
pop
cwtl
fdivrl
sbb
mov
cmp
push
cmp
sbb
iret
xchg
mov
movsb
sahf
out
xor
addr16
stos
adc
cmpsl
and
sub
mov
adcb
in
ret
clc
mov
out
pop
and
test
popf
dec
fnsave
mov
sbb
pop
testb
push
popa
mov
xor
cmpsl
je
gs
hlt
scas
rcll
fwait
inc
adc
lods
in
lahf
subb
lea
inc
orb
mov
jg
mov
ss
je
sub
sub
mov
cmp
pop
test
inc
sbb
mov
outsb
or
adc
nop
xchg
inc
mov
iret
xor
push
lret
xchg
pop
out
insb
mov
or
mov
scas
in
test
popf
fistps
scas
movsb
lcall
inc
arpl
int3
orl
rcrl
repnz
lea
cld
cmp
loop
sti
adc
jecxz
call
push
ss
mov
mov
pusha
sub
imul
or
push
pusha
andl
addr16
jmp
addr16
sub
inc
negb
bound
shll
lcall
in
int
es
jmp
jge
sahf
or
fnstcw
mov
xchg
jb
cwtl
outsb
imul
xor
adc
aad
sbb
push
cmpl
fists
dec
jl
push
and
dec
movsl
push
add
insl
mov
dec
icebp
mov
lahf
insl
les
xchg
pop
dec
and
inc
lret
jb
imul
loopne
pop
cltd
mov
inc
pop
push
fisttpl
xor
or
ljmp
add
daa
push
mov
mov
lods
sahf
out
and
mov
rcrb
adc
jnp
cwtl
and
shrl
sbb
lds
push
mulb
cmp
rep
mov
pop
imul
enter
lds
jge
stos
into
pop
sbb
movsb
xlat
inc
xchg
add
lds
fnstsw
out
dec
mov
je
outsb
push
jno
pop
mov
sub
js
mov
inc
jmp
sbb
jo
push
push
imul
insl
xchg
enter
dec
pop
in
leave
cmpsl
nop
in
xor
and
fwait
mov
inc
add
dec
cmp
ret
dec
pop
push
jns
jo
pop
mov
popa
xchg
les
xlat
adc
clc
lcall
cli
lds
push
add
insb
and
push
mov
pop
adc
in
mov
pop
out
jp
sbb
mov
leave
jne
sbb
push
cltd
xor
cmpsl
adc
jge
and
pop
pop
inc
hlt
daa
mov
pop
inc
inc
inc
or
imul
sub
mov
jmp
xchg
fcomp
pop
xchg
adc
cli
fidivrl
cld
aam
stos
xchg
sti
out
lahf
sub
arpl
loopne
loopne
sub
icebp
or
xor
cli
jb
mov
insl
enter
sub
hlt
js
test
nop
or
xlat
pop
outsb
inc
test
sahf
jno
aad
adc
cmp
mov
outsb
dec
xchg
ljmp
shrb
outsb
jmp
in
rorl
lods
aaa
in
cltd
dec
rcl
jne
int
inc
popf
cmpsb
mov
sub
in
popa
jmp
movsl
add
pop
mov
mov
cmp
pop
aaa
lcall
jbe
lret
rol
jnp
add
dec
jle
icebp
or
push
insb
cli
xchg
sub
xchg
pop
in
shll
mov
pop
int
outsl
mov
inc
xor
push
orl
mov
dec
push
int
jg
aaa
sbb
dec
sbb
sbb
jle
ljmpw
shlb
pushf
push
aam
xchg
gs
hlt
test
mov
cmp
push
mov
cmpsl
xchg
stc
push
aad
insb
xchg
mov
les
fwait
cmp
mov
pop
arpl
lret
dec
imul
jp
jne
mov
jecxz
xor
data16
adc
mov
or
pop
sbb
insl
notb
daa
jge
out
imulb
inc
lock
add
mov
out
push
and
test
fstpl
mov
jle
xchg
call
jne
inc
sti
jb
fs
inc
jb
mov
lods
dec
or
mov
xchg
loopne
daa
je
js
adc
int
dec
fsubs
addb
lock
sarb
and
cli
jo
dec
ja
and
add
jg
outsb
jbe
fldt
mov
or
push
sbb
inc
in
pop
mov
sbbb
gs
fxch
mov
lods
das
repnz
push
mov
or
repnz
push
test
sbb
mov
jno
in
dec
les
mov
jl
lcall
push
fs
fstl
xchg
cmp
mov
stc
mov
cmp
lods
sub
mov
dec
dec
arpl
enter
xchg
and
mov
cmp
popa
jns
xchg
fxch
leave
mov
and
inc
in
xor
ja
push
pop
inc
push
or
shr
frstor
outsb
mov
mov
fwait
mov
mov
dec
testl
dec
jmp
sbb
into
mov
mov
xor
adcl
sub
mov
adc
jp
and
int3
test
rcrl
jge
push
cmp
movsb
jle
lds
imul
jecxz
dec
or
sbb
rclb
push
xchg
adc
push
not
data16
cmp
and
lods
popa
lock
push
pop
adc
dec
pusha
pop
xchg
lock
lret
scas
add
das
lret
int
adc
hlt
out
lret
dec
jnp
rcr
xor
nop
cltd
testl
pop
fwait
aad
insb
inc
aam
jp
cmpsl
dec
inc
mov
or
inc
mov
sub
inc
repnz
pop
bound
adcb
std
rcrb
inc
scas
sbb
imul
sub
pop
adc
inc
mov
xor
push
inc
fwait
dec
dec
hlt
sbb
jne
das
xchg
test
loope
stos
xor
and
jbe
decb
aad
sub
adc
fisttpl
mov
test
daa
sar
popl
xor
add
sub
jbe
fwait
mov
inc
mov
jbe
icebp
push
adc
sbb
sbbl
or
inc
adc
popa
push
je
jns
cs
add
push
inc
lods
lret
mov
dec
imul
mov
mov
outsl
js
xor
sub
insb
adc
mov
pop
mov
dec
aaa
addr16
add
cwtl
subps
dec
or
les
jb
jae
ds
test
jns
push
and
sbb
cmp
popf
mov
mov
xor
pop
push
jmp
insb
dec
or
jnp
mov
divl
pusha
jno
inc
lret
test
test
push
xchg
pop
movsb
loope
lods
jecxz
xchg
xchg
loopne
icebp
sbb
adc
pop
inc
ljmp
xorb
enter
inc
push
leave
cmp
sbb
shlb
pop
sbb
je
add
sbb
inc
decb
xor
jecxz
and
fs
repnz
jmp
xchg
mov
les
insb
stos
or
and
and
jne,pn
pop
sbb
jmp
sbb
dec
enter
fwait
xchg
cmp
test
or
imull
lret
loope
mov
push
test
push
add
jo
push
push
rcrl
sbb
daa
flds
add
cld
xor
mov
shlb
cli
fstl
mov
add
inc
cmc
fs
mov
dec
mov
and
mov
adc
movsl
fdivrp
push
test
mov
and
sahf
cli
jmp
mov
out
pushf
push
jne
stc
mov
pop
movsl
lods
aas
shr
out
adc
call
xchg
and
addr16
mov
push
xor
pop
push
xchg
shll
aam
cmp
jg
addr16
popa
add
push
lock
push
sub
fildll
mov
shll
adc
mov
stos
stos
fisttpll
dec
and
adc
push
and
pusha
pop
leave
into
or
insb
stc
mov
scas
push
mov
adc
and
arpl
push
jne
ret
fcomip
sub
and
cmp
xor
arpl
or
mov
cmpsl
addb
not
leave
cs
mov
xchg
sbb
mov
dec
and
mov
pop
sub
cli
pop
mov
cwtl
and
push
and
pop
and
inc
out
dec
lods
out
pop
jne
and
fwait
bound
inc
pop
sub
jne
in
xchg
cmp
jecxz
sbb
jae
aam
mov
mov
in
scas
mov
in
in
movsl
int
movsl
jp
aam
xor
jge
cmp
ds
fsubl
inc
or
mov
inc
rcrl
push
enter
fldt
jo,pn
or
das
sub
inc
pop
dec
frstor
dec
push
inc
aaa
loopne
xchg
imul
sub
add
ja
out
jmp
out
decb
fwait
comiss
in
sub
jbe
out
push
enter
shlb
lret
shr
cltd
xchg
repz
or
and
mov
jge
outsl
inc
pop
mov
pop
mov
jp
mov
xchg
or
outsb
outsb
scas
mov
push
fs
mov
cli
das
mov
push
test
into
hlt
and
pop
and
aas
xor
jg
imulb
fisubrl
mov
add
sub
jo
add
xchg
outsb
dec
mov
cmp
es
or
sbb
jl
movsb
cmp
rolb
and
mov
fcompl
push
adc
xor
xor
clc
ss
push
mov
mov
pop
jecxz
loop
sbb
and
jecxz
rcl
and
jo
push
test
sbbl
and
cmp
in
ret
es
push
adc
xchg
jo
shrb
xor
sub
mov
imul
incl
push
sub
mov
dec
es
hlt
ror
jo
repnz
ljmp
xorl
rcrl
outsl
mov
xor
lods
xor
in
sbb
repz
pop
les
pop
les
sub
inc
push
mov
pushw
inc
mov
js
fdivs
rcrb
pop
jle
das
mov
pop
push
dec
leave
xchg
shlb
andb
add
sub
add
loop
fistpll
adc
ljmp
insl
data16
push
fisttpll
lods
loope
push
sbb
jp
ljmp
adc
mov
lret
pop
lods
clc
cld
add
jle
call
inc
pop
xor
sbb
addr16
jle
divb
pop
mov
xchg
addr16
xor
popw
cmp
sub
nop
push
pop
loopne
cmp
xchg
shll
int3
stc
jmp
sub
xchg
inc
stc
mov
cmc
jge
push
sbb
pop
or
pop
pop
sub
std
and
mov
lcall
dec
push
ljmp
mov
shl
decb
dec
add
dec
test
xor
pop
push
jmp
add
pop
adc
push
add
repnz
push
pop
fwait
mov
xor
out
dec
lods
sub
jmp
cmp
iret
ss
lds
call
fldl
leave
push
mov
mov
cmp
adc
and
mov
lock
testb
dec
pushf
bound
adc
pop
mov
inc
shl
mov
imul
in
push
daa
jnp
mov
sahf
mov
mov
loope
test
int3
fsts
test
out
and
outsl
rol
movsb
scas
fdivrl
mov
into
fistpl
sbb
sbb
xor
and
xchg
pop
jg
jecxz
push
pop
fdivrl
loop
xor
jns
lcall
cs
or
ret
mov
inc
mov
pusha
jnp
and
fidivrs
shl
push
pop
and
data16
aam
jl
dec
pop
mov
lcall
mov
ficomps
adc
inc
loope
clc
or
lea
dec
in
push
cmp
out
add
out
lret
insb
das
das
ret
push
inc
fs
xor
adc
push
dec
lcall
add
dec
cltd
mov
scas
repz
lds
mov
addb
mov
inc
je
jge
rclb
lods
inc
cmpsb
lcall
sti
out
sub
loope
cld
fldcw
mov
sub
push
mov
cmp
enter
and
inc
ret
loop
add
sub
cmp
xchg
jmp
xchg
test
inc
jg
jl
mov
pushw
es
cmp
ja
lahf
mov
arpl
stos
fs
jge
push
mov
aad
in
jl
js
sahf
sub
shll
and
jnp
dec
sub
sub
xchg
xchg
outsl
xor
stos
dec
adc
pop
shrl
rcl
rolb
out
xlat
add
insl
inc
cmp
aam
addb
adc
xchg
aam
cmp
leave
sbb
in
mov
mov
lds
test
pop
inc
and
cwtl
ljmp
jle
in
movb
cwtl
lret
loopne
jg
sahf
gs
dec
mov
jmp
push
or
dec
js
xor
iret
mov
push
divb
into
jge
cmpsb
inc
movsl
loop
dec
pop
add
ljmp
insl
sub
pop
lds
inc
repz
rcrb
sub
pop
pop
jo
rclb
das
stc
or
mov
jb
in
sbb
negb
call
movsb
mov
add
mov
pop
pop
inc
dec
dec
sub
loopne
leave
mov
push
ret
adc
pop
mov
mov
repz
lcall
int3
shll
lods
sub
loop
in
dec
sub
repz
add
enter
insb
ja
test
inc
adc
push
dec
fistpll
push
jno
int
cmpsl
ficoms
sub
fnstcw
in
xor
mov
outsl
mov
fxch
rcll
pop
movd
mov
addr16
sbb
jmp
cld
cmp
xor
push
pop
mov
sub
pop
and
repz
loopne
repnz
inc
decl
incb
mov
pop
fwait
inc
push
pop
add
or
add
mov
dec
xor
rorb
pop
andb
sub
xor
mov
xchg
stos
es
dec
outsl
mov
jnp
test
insl
mov
pop
pop
fucomi
aam
lea
movsb
push
setnp
xchg
imul
xlat
mov
pop
inc
sub
fwait
int
repnz
lret
adc
fimull
addr16
gs
dec
mov
add
popf
out
stos
push
jb
pop
jp
dec
push
mov
and
sub
jnp
mov
sbb
cmp
dec
or
leave
ror
pop
push
addl
mov
push
lods
into
jmp
jg
cmp
adc
dec
dec
jns
jnp
cmp
xor
inc
mov
test
es
or
out
fs
mov
dec
dec
mov
and
rolb
xorl
inc
test
jle
iret
in
lods
dec
loop
into
loopne,pt
xchg
ljmp
pop
dec
cmp
jmp
sbb
repz
mov
imul
enter
xchg
or
rorl
mov
dec
xchg
jbe
test
adc
cmc
add
mov
outsl
bound
mov
je
imul
idivb
data16
stos
lock
and
xor
mov
push
sub
fisubrs
sub
pop
sub
and
mov
aaa
pusha
pushf
and
jae
rorb
jge
imulb
lods
icebp
call
popf
filds
jmp
mov
jbe
dec
mov
in
sbb
subb
out
dec
sti
lret
jp
mov
push
rol
clc
xor
lret
jbe
or
add
neg
jmp
in
push
lock
push
mov
add
stos
mov
mov
pop
mov
ja
sarl
inc
test
mov
imul
pop
gs
jb
fcomps
jno
sub
insl
les
pop
out
dec
imul
imul
cmc
jg
dec
push
stc
xchg
push
cmc
sbb
shll
pop
pop
mov
xchg
lods
inc
xchg
fdivrl
test
pop
inc
dec
mov
jo
push
popf
inc
stos
lcall
adc
scas
dec
mov
pushf
stos
xchg
pop
fidivl
insb
mov
or
jp
pop
cmc
push
jno
pop
or
inc
add
mov
xlat
xor
lahf
repnz
dec
dec
xchg
mov
loope
mov
jecxz
bound
mov
lea
xor
loope
mov
cmp
out
addr16
jmp
cmpsb
mov
icebp
inc
sbb
push
clc
test
and
into
push
sbb
into
push
decb
loopne
vorps
sbb
lods
dec
repz
lock
pusha
in
pop
scas
movsl
cmp
sbb
mov
jp
push
popa
jb
add
xchg
add
xchg
scas
and
cmp
shrb
notl
jnp
pusha
popa
mov
test
mov
xchg
mov
call
lods
aas
scas
dec
pop
scas
pushf
add
es
or
lods
jp
mov
sarl
lahf
inc
mov
adc
mov
inc
sbb
jno
popa
sar
mov
mov
js
call
stos
xchg
dec
add
push
xcrypt-ofb
cmpsl
sub
xchg
push
test
and
pop
push
scas
mov
mov
mov
inc
fdiv
ds
or
mov
data16
lahf
mov
outsb
or
js
push
shlb
jp
inc
sahf
push
out
xor
cwtl
and
int3
pushf
or
fsubp
jle
push
imul
adc
int3
ljmp
push
nop
sbb
cmp
imul
jmp
jmp
in
stc
mov
sbb
pop
mov
lret
fcmove
and
lcall
movsl
and
mov
ret
sbb
imul
loope
stos
scas
mov
mov
jecxz
sarb
aaa
add
pusha
fldl
leave
ljmp
adc
jo
pop
lods
xchg
and
mov
cld
inc
dec
leave
mov
mov
jae
cli
pop
xchg
ret
cmp
adc
push
imul
cli
cmc
sub
and
cmp
punpckhdq
sbb
jle
leave
cmc
pop
in
cmp
and
pusha
push
push
mov
stos
es
pop
ja
rcl
pop
push
pop
arpl
into
imul
mov
xchg
movsl
adc
movsb
in
jmp
stos
movsl
aas
call
adc
ret
js
xor
fisttpl
hlt
pop
dec
inc
sbb
rolb
aad
sbb
cltd
mov
stos
fs
dec
or
or
inc
sti
sub
xchg
cmp
mov
movsb
add
sbb
pop
fwait
lret
pushl
dec
jmp
jg
xor
adc
push
lret
dec
xchg
je
push
subb
pop
lahf
outsb
fcmovu
mov
xor
imul
and
lods
movsl
xlat
sbb
out
iret
mov
lahf
xchg
fiaddl
stc
inc
sti
pop
push
lret
xchg
xlat
pop
jp
nop
shlb
cmpsb
cmp
outsl
ret
push
mov
mov
stos
xor
cmp
lock
sub
sbb
lret
js
shlb
xor
cmp
loopne
inc
stos
or
pop
and
push
insl
mov
cmp
fcomps
out
icebp
and
jns
and
mov
xchg
and
test
in
sbbl
xor
dec
int3
cmpsl
cli
mov
xor
test
test
xor
popf
out
push
add
and
jecxz
jl
xorl
add
mov
fsubp
mov
iret
add
jle
jne
icebp
shlb
sbb
insb
or
or
pusha
popf
ficomps
xor
and
mov
gs
in
cmpsb
cwtl
lods
into
repnz
cmp
cs
inc
lods
aad
xchg
and
imul
lods
adc
pop
xor
mov
jno
fwait
adc
fdivrl
cmp
xlat
xor
into
int
es
lahf
test
outsb
sbb
mov
outsb
push
imul
xchg
fstpt
outsl
cmpsb
push
jle
sub
loop,pn
fsub
or
and
jge
jns
pop
iret
fstpl
add
orb
mov
sbb
xchg
leave
cltd
test
or
jge
and
les
out
xchg
jno
mov
inc
shll
adc
std
sub
ror
xor
xor
push
cs
sub
or
pop
sub
fnsave
loop
and
jge
jge
lret
ds
mov
cmp
dec
stos
adc
jmp
stc
in
std
pop
fadds
inc
inc
cmp
fdivrl
mov
mov
or
out
ret
shrb
loop
push
cli
add
mov
mov
dec
fsubs
sub
loope
sbb
fdivrs
gs
sahf
cmp
jp
in
mov
fnstsw
pop
sbb
xchg
inc
aam
adc
shll
test
xchg
outsb
cmp
jnp
insb
nopl
mov
das
int
sbb
add
sahf
and
and
vpsrld
bound
sub
fnstcw
ret
pop
push
sub
imul
mov
dec
jmp
adc
loop
loopne
mov
sub
sbb
lret
inc
leave
mov
rorl
lods
ud0
enter
rcrl
les
mov
mov
fcomi
jo
cld
fcoml
adc
lahf
sbb
insb
lods
mov
pop
ret
fwait
push
jno
movsb
insl
or
jp
hlt
lds
scas
outsl
outsb
xor
pop
or
loop
cmp
mov
mov
sub
xchg
icebp
mov
hlt
jg
popa
sub
stc
lock
out
and
icebp
or
ja
call
sbb
cwtl
les
add
into
lret
mov
mov
jl
push
out
aad
movsl
pushf
xor
pushf
cmp
mov
cltd
imul
in
sbb
pop
push
mov
and
sub
xlat
pop
jle
ss
and
in
fisubl
int
pop
or
push
or
push
jbe
mov
mov
aad
sarl
cwtl
dec
xor
xchg
lahf
inc
cs
and
pop
inc
xor
jge
mov
adc
into
xchg
pop
and
mov
and
movsl
mov
dec
xchg
pop
ljmp
lods
stc
nop
and
mov
leave
xchg
pop
dec
lcall
rorl
mov
sbb
mov
mov
push
pop
add
mov
xor
jmp
in
inc
xor
mov
xchg
das
cmpsb
clc
dec
popa
inc
fiadds
fwait
dec
dec
cltd
push
test
shlb
sysenter
data16
push
push
push
cwtl
pushf
outsl
jbe
fdivrl
mov
mov
inc
int
pop
add
pcmpeqd
jae
jbe
ret
popf
fcomps
imul
pop
adcb
mov
mov
sub
icebp
ja
cmpsl
out
inc
and
andl
sbb
pusha
xchg
mov
push
push
sub
negl
ret
and
inc
adcl
dec
aam
xchg
and
adc
push
stos
call
mov
ja
xor
in
popf
jle
jp
cmp
testl
fldt
les
ds
clc
pop
popl
mov
cmpsb
sbb
jg
sub
push
fisttpll
cs
or
mov
bound
inc
and
cld
mov
je
mov
jb
push
or
ljmp
xor
les
aaa
inc
xor
in
or
jl
fdivrl
fadd
and
xchg
pushl
lea
inc
inc
mov
lret
incb
sub
testb
jne
and
data16
xchg
or
push
or
pop
jne
jmp
int3
push
js
mov
scas
movsb
idivl
fnstenv
popf
xlat
cmpsb
jo
jg
sub
les
test
jecxz
jecxz
or
mov
jmp
cltd
popa
test
sub
stos
nop
rorb
fs
ret
or
adc
cmp
dec
add
jecxz
xorl
cmp
nop
cmp
imul
push
mov
loopne
cmpsl
mov
adc
xchg
or
fsincos
jae
jle
and
lea
pop
or
pop
lods
inc
inc
mov
dec
sbb
enter
into
xor
ret
insl
jge
pusha
cmp
lret
jp
add
and
push
sahf
movsb
dec
xor
dec
inc
pop
std
cli
adc
fadds
mov
sbb
mov
xlat
add
sbb
inc
inc
sub
fidivl
ret
sbb
je
es
dec
out
mov
xchg
or
stos
jmp
sbb
cmpsl
cwtl
mov
popf
hlt
loopne
int3
or
jno
pusha
mov
xor
call
sub
fmuls
cmc
jne
sbb
pop
ret
enter
inc
sti
test
iret
cwtl
mov
outsl
in
cld
cs
mov
cmp
les
pop
mov
lret
or
pop
into
lret
or
fidivl
sub
jne
cmpsl
test
xchg
lahf
mov
mov
shlb
sar
loopne
inc
cli
test
pop
lret
pop
mov
daa
or
push
add
and
or
jge
cld
subb
and
push
filds
lods
lds
stos
rcrl
bound
pop
and
leave
insb
fisubs
fstl
xor
push
arpl
or
in
inc
loope
sbb
cmp
mov
mov
pop
dec
daa
popf
push
cli
push
and
xchg
fdivl
pop
lea
rorl
test
cmp
mov
dec
repnz
dec
push
in
cmp
pop
mov
mov
add
rclb
repz
repz
push
adc
xor
xchg
cld
or
sahf
lods
shrb
inc
stos
jge
popf
push
dec
aas
inc
insl
outsl
inc
daa
test
movsl
pushf
aas
mov
insl
subl
out
and
add
gs
mov
mov
loope,pt
movsb
xchg
out
push
bound
insl
adc
gs
push
lret
rorl
mov
mov
insl
mov
mov
push
cmpsb
popa
hlt
pushf
out
mov
cld
xchg
mov
ss
push
and
shlb
cmc
inc
pop
mov
int3
push
pop
mov
inc
stos
sbb
pop
add
mov
pop
xchg
rcr
mov
xchg
icebp
gs
push
xchg
xchg
sbb
xor
rcll
sahf
dec
cwtl
movsb
stos
inc
sub
mov
pop
nop
sbb
test
adc
xchg
jle
cli
mov
aad
sbb
lods
out
or
test
dec
jb
jne
insl
sbb
test
movsl
adc
xor
mov
sub
das
test
xchg
int
mov
jecxz
dec
dec
pop
mull
sbb
jne
inc
mov
loop
adc
lea
mov
pop
lods
stos
sbb
aaa
cld
test
inc
jns
dec
out
dec
mov
and
out
aas
je
repnz
das
repz
add
sub
test
aaa
xor
popf
lret
movsl
loop
mov
dec
cmc
cmc
adc
iret
aaa
std
stos
cmp
shr
xor
cmp
or
ror
xchg
mov
inc
jnp
dec
xchg
popa
daa
push
dec
mov
pop
jne
in
push
mov
cmp
and
xchg
dec
loope
adc
jne
pop
sti
sbb
sti
jmp
pop
pop
in
clc
orl
imul
add
out
xor
cwtl
test
test
adc
inc
jg
cmc
xor
ja
ss
jae
lret
jge
sbb
subl
lret
arpl
pop
cmp
push
insb
test
outsb
fstp
sbb
ret
mov
xchg
and
adc
mov
and
ja
pop
cld
dec
fisubrl
sbbl
dec
mov
sbb
sbb
jmp
rolb
shl
cmpb
mov
add
or
and
pop
inc
ror
stos
std
andb
enter
push
sbb
mov
add
rcrb
push
sub
mov
and
xor
cmc
cwtl
xchg
xchg
pusha
push
bound
push
fs
rcrl
dec
movsb
mov
aaa
jmp
bound
dec
fdivl
xchg
mov
xor
xchg
xor
jmp
pop
sbb
mov
cld
dec
and
sahf
mov
arpl
adc
mov
loope
push
adc
mov
out
movsb
shlb
cmp
mull
sbb
in
xchg
imul
lods
clc
mov
in
cmpsl
int3
loope
xchg
pushf
cs
sbb
sub
push
ds
arpl
daa
mov
cmp
in
fsubrl
cmp
or
pop
jge
inc
push
std
sbb
ljmp
inc
ljmp
out
in
imul
cmp
inc
leave
aad
cmp
ja
loope
dec
mov
mov
sbb
enter
es
jno
or
in
lock
outsl
xchg
xor
mul
dec
push
push
ds
cmp
jbe
fdivr
adc
cwtl
add
sbb
xchg
sub
ret
xchg
in
mov
fstpt
lods
jbe
arpl
or
dec
pop
addr16
test
pop
xor
sahf
push
lods
push
fsub
inc
out
stos
cmpsb
gs
js
mov
iret
insl
adc
inc
push
int3
lret
xchg
out
imul
inc
aaa
clc
lret
ljmp
pop
rcrb
cmpsl
xchg
or
sub
nop
fldcw
faddl
inc
outsl
shll
push
sub
rcr
mov
jo
or
mov
or
scas
loopne
jge
sub
das
lahf
pop
or
pop
clc
pop
in
inc
subl
fstpt
and
mov
adcb
cmp
mov
push
aad
into
pushf
push
sbb
nop
mov
stc
rcr
data16
mov
loop
aas
mov
les
adc
jle
fistpl
data16
push
push
add
pop
sbb
jae
or
dec
enter
sub
add
mov
lcall
xor
loopne
xchg
lea
hlt
shll
fcos
mull
negl
sbb
jmp
xor
divb
cmpsb
xorl
xchg
and
jge
sub
call
adc
push
rcrl
mov
sar
mov
pop
mov
aas
shl
pop
aas
pop
mov
inc
inc
jg
mov
pop
sub
fnstsw
jle
xor
push
jl
xchg
scas
cmpsl
push
sub
jo
add
lea
fwait
lods
rcl
imul
sbb
xchg
cld
jg
xchg
leave
inc
call
jns
mov
sub
pcmpgtd
pop
xor
mov
pop
sub
addb
pushl
sbb
out
add
jl
test
in
add
inc
sbb
xchg
pop
inc
sub
imul
jo
xchg
mov
xchg
push
pop
or
jge
mov
je
fstpl
push
jb
inc
movups
test
mov
lahf
push
xchg
xorl
sub
cli
ja
sbbl
in
jnp
push
xchg
fcompl
and
adc
xchg
cmp
push
mov
adc
mov
mov
imul
dec
xchg
adc
fldcw
sahf
inc
test
rol
mov
lahf
cmc
push
xor
xor
add
arpl
pop
inc
int
add
mov
mov
mov
sbb
xor
fisubrl
xchg
sbb
fisubrs
add
test
stos
dec
outsb
sbb
in
mov
mov
push
add
shll
lret
data16
dec
mov
ret
es
rcl
sbb
mov
mov
mov
rcll
adc
mov
inc
lock
lods
or
fcoml
jle
rolb
addw
fwait
test
and
sbb
hlt
fdiv
xchg
adc
xchg
nop
addl
test
enter
sub
adc
mov
push
add
ljmp
push
xchg
daa
aas
fisubl
cmp
mov
call
in
pop
mov
outsl
inc
pop
add
fs
aaa
mov
dec
sub
and
insb
or
testb
dec
add
daa
iret
push
imul
adc
mov
sub
xchg
mov
bound
sub
orl
outsb
or
pushf
repnz
push
sbb
insb
mov
xchg
and
ljmp
mov
mov
pushf
pop
sub
insb
mov
mov
out
push
pop
fstps
ljmp
in
lahf
shr
test
push
cmpsb
dec
cmpsl
out
sub
push
out
bound
sbb
mov
and
push
inc
xorb
ds
outsl
ret
adc
imul
in
push
inc
inc
or
out
push
aad
or
mov
push
sbb
in
xor
fwait
add
push
lock
xlat
xchg
in
xorl
xor
pop
outsb
jns
cmp
jecxz
xchg
popw
xchg
cltd
pop
out
mov
and
scas
int3
ljmp
mov
add
test
and
rclb
dec
xchg
pop
mov
fcomps
aaa
sti
or
inc
push
stos
test
les
test
arpl
mov
sub
jl
dec
jae
inc
sub
aas
stos
loopne
jnp
cmp
sub
mov
mov
lods
hlt
ret
ds
jl
test
lea
mov
ret
jp
lahf
stos
rcl
cmpsl
jge
int
or
mov
mov
mov
dec
mov
add
push
aaa
push
cld
out
sub
cmp
xchg
sbb
sub
mov
scas
or
jo
push
fwait
pop
mov
insl
xor
popf
out
out
jle
xor
pop
or
insl
lahf
mov
pop
ljmp
in
or
pop
fstpt
cmp
scas
into
mov
repz
jp
std
cltd
adc
add
sahf
push
cld
scas
sysenter
jl
sbb
iret
iret
and
pop
test
cmp
test
push
pop
cmc
jmp
pushf
sub
sub
sbb
sahf
out
mov
sbb
push
push
mov
mov
pop
xlat
mov
ljmp
movsb
divl
subb
fsubp
xchg
lods
xor
lret
cmp
push
shrl
adc
push
iret
push
pop
cmp
mov
daa
sbb
cld
fisttps
lods
jp
fcomp
int3
lea
clc
inc
cmpsb
dec
lods
push
inc
fwait
jmp
push
jmp
test
vmovq
pop
cwtl
ret
push
xchg
push
mov
push
int3
mov
xlat
lahf
add
jge
lret
lret
or
adc
lea
pop
repz
movsb
mov
bound
jne
and
in
xchg
lds
hlt
add
shl
test
push
das
push
xor
or
test
loop
adc
push
call
insl
mov
pop
cmpsl
out
jge
out
ss
aam
addr16
cli
inc
pop
pop
arpl
lea
hlt
inc
insb
and
sarb
mov
test
push
adc
push
add
data16
pop
in
imul
push
xor
cmpsb
adc
and
lds
jp
movsb
loope
aas
in
fucomi
add
push
xor
dec
testl
cmpb
pop
xorb
dec
in
pop
loopne
sbb
out
stos
mov
inc
adc
loopne
mov
cld
mov
lcall
adc
and
flds
lret
imul
or
mov
mov
pop
pop
dec
out
scas
cli
je
imul
ds
out
fdivs
bound
xor
lock
imul
addb
cmp
push
xchg
xchg
jae
sub
popa
xor
shll
cwtl
loop
ds
fs
xchg
add
mov
mov
cmc
cmp
cmp
sbb
testl
cmovl
xchg
into
xchg
add
mov
sbb
lcall
mov
jnp
xchg
sahf
sbb
imul
adc
mov
mov
xchg
and
enter
sub
cmp
lea
xchg
pop
test
xor
pop
jo
jge
mov
inc
stos
fists
sub
adc
mov
cltd
cmp
adc
ror
push
jmp
addr16
xor
fdivrs
les
cmpsb
pop
xor
jno
mov
mov
inc
mov
pop
or
add
scas
fwait
cmpsb
popf
imul
and
negl
push
xchg
push
jo
mov
jne
sbb
mov
adc
xchg
cmp
stos
cs
mov
mov
clc
data16
or
int3
sub
dec
pop
pusha
das
in
inc
mov
sub
stos
pop
jnp
sub
jo
rcll
pop
insl
dec
ljmp
aam
fcoms
adc
sbb
adc
lret
mov
adc
movsl
jb
mov
lods
ja
mov
jg
inc
inc
sarb
loop
pop
sub
xor
outsl
out
sbb
cmp
jg
rcll
add
cmp
dec
daa
hlt
mov
in
in
jnp
lods
test
mov
xchg
cmp
add
test
and
xchg
enter
pop
mul
pusha
xchg
stc
xor
out
iret
insl
leave
or
add
mov
pop
pop
scas
dec
pop
xchg
sbb
and
and
pop
lea
call
inc
and
pop
xchg
pop
or
cli
push
xlat
arpl
popf
test
popa
add
jne
mov
mov
xchg
aas
enter
out
pop
out
test
lret
add
inc
ret
out
jb
pop
rcrb
movsb
mov
mov
adcl
mov
shrb
data16
or
cmpsl
and
jmp
div
cmp
inc
subl
push
jecxz
mov
fimull
sub
push
into
pop
add
push
sub
test
sti
lcall
sub
dec
push
sub
mov
inc
fwait
adc
sbb
xor
addl
pusha
insb
pop
cmp
cmc
push
cmc
cmp
xchg
fisubrs
or
jle
jbe
aad
cli
js
push
xchg
jns
add
sbb
test
movsl
mov
mov
pop
sti
or
loop
clc
lcall
fsts
dec
pop
cwtl
pop
lret
adc
scas
or
pop
pushf
lods
and
jno
ffree
hlt
and
push
testb
lret
dec
fwait
in
in
addr16
push
mov
pop
mov
js
mov
test
xchg
repnz
imul
or
int3
inc
popf
add
inc
add
push
fidivs
lret
inc
lahf
scas
in
push
sbb
gs
push
sti
jo
mulb
adc
pop
dec
xchg
inc
in
push
sti
repz
xor
pushf
pop
cmp
xlat
xchg
dec
push
pop
cmp
pop
adc
jne
pop
push
mov
add
rolb
xorb
pop
lods
jne
sbb
mov
mov
xchg
into
out
and
dec
sub
nop
cmp
xor
repz
pop
arpl
ds
test
insb
nop
ds
xchg
ret
inc
mov
adc
fcomps
dec
mov
leave
xchg
insl
mov
in
ljmp
rorb
scas
neg
test
mov
rcr
xchg
dec
mov
adc
daa
into
fsubl
stc
push
cmp
adc
les
xchg
imul
aam
inc
xchg
addr16
sbb
ret
shlb
adc
xor
jg
sbb
test
or
movsl
adc
mov
and
notb
inc
pop
imul
iret
fnstenv
add
adc
ffreep
sbb
and
loope
dec
dec
fmuls
negb
hlt
out
pop
lods
jo
adc
shrb
xor
add
or
pop
mov
lret
xchg
in
clc
add
add
mov
sarl
fldenv
jmp
les
dec
imul
add
andl
jo
jnp
and
pop
bound
add
pushf
pusha
out
dec
insl
test
ja
xlat
xchg
push
jmp
test
repnz
jbe
in
call
fwait
loope
pop
adcb
lcall
pop
jns
ss
jo
aaa
mov
nop
or
cmc
loopne
jge,pt
inc
sub
xchg
jmp
adc
loope
loopne
inc
pop
and
jno
pop
xchg
repz
xchg
cmp
sub
add
and
hlt
sub
outsb
push
pop
mov
out
sbb
sub
aad
lahf
adc
cwtl
fs
repz
pop
mov
mov
shll
add
push
mov
jns
mov
xchg
and
xchg
in
and
pop
ds
xchg
cmpsb
and
test
cmp
and
jo
mov
and
test
dec
dec
adc
aaa
push
sub
sub
mov
nop
and
js
jae
xor
pop
cli
jbe
cli
sub
adc
inc
leave
inc
aad
jl
push
subb
lds
sub
inc
xchg
and
pop
sbb
xchg
fdivs
cmp
ret
push
dec
gs
in
test
arpl
mov
popf
adc
aaa
icebp
jl
mov
mov
mov
jecxz
and
ficompl
out
xchg
pop
dec
jo
jl
ljmp
iret
jl
or
xchg
scas
mov
jns
shll
ror
xchg
dec
pop
pop
jb
in
mov
icebp
icebp
test
dec
push
and
aaa
cmpsb
shrb
or
add
cwtl
pop
mov
mov
loope
rolb
lcall
icebp
mov
xor
sub
mov
push
scas
jbe
adc
in
insb
addr16
inc
aaa
bound
push
push
xor
insl
xor
cmpsb
rorl
dec
mov
imul
pop
jbe
cld
fisubrs
test
mov
stc
cmp
cltd
jo
sbb
int
ds
mov
sub
pop
ja
mov
negl
je
and
cmp
imul
cmp
ja
pop
lock
pusha
push
mov
sub
sub
push
xchg
pop
imul
jbe
xorl
inc
xchg
pop
xor
test
or
jne
cmp
sbb
pop
and
mov
cmp
jle
add
cwtl
clc
fsub
stos
rcl
jb
jbe
sti
mov
gs
cmp
mov
lcall
jne
mov
fwait
repnz
les
or
cld
pop
jne
jnp
mov
cmpsl
pop
sbb
sub
and
adc
mov
in
cld
mov
mov
cmp
lret
sub
inc
adc
outsl
jl
jo
and
and
cs
push
outsl
out
mov
mov
mov
and
xor
xchg
and
pop
xor
into
or
mov
pop
pop
push
push
shlb
push
sub
movsb
mov
and
jo
jo
xchg
icebp
movsl
inc
inc
inc
cld
sarb
popa
mov
sbb
outsl
mov
sub
xchg
xor
mov
jmp
adc
push
jecxz
mov
shlb
cmpsb
dec
mov
fucomi
pop
fs
cld
inc
and
mov
pop
movsb
mulb
jle
pop
cwtl
pop
rcll
xchg
jl
sbb
lcall
stc
jb
sub
mov
cli
cmc
jl
loop
mov
or
adc
jnp
loop
mov
cmp
iret
addr16
bound
mov
xchg
int3
shlb
int3
scas
bound
add
dec
lret
cmp
daa
mov
add
xchg
and
inc
push
push
dec
mov
or
ret
stos
push
mov
mov
jnp
add
dec
pushf
daa
push
fwait
lret
int
xor
sub
or
add
sbb
mov
fistpl
xor
jmp
gs
je
or
rcrb
pop
inc
aaa
popa
je
xlat
pop
mov
inc
add
stos
push
adc
test
add
inc
in
loop
sbb
jnp
lret
or
mov
mov
out
daa
test
add
loope
lret
outsl
add
mov
data16
xchg
inc
int3
xor
mov
cltd
out
add
loop
jecxz
ljmp
xor
lock
repnz
mov
fiaddl
push
push
xchg
in
jnp
sub
sarl
icebp
repz
fstl
inc
pusha
divb
xor
push
inc
fdivrl
cmp
icebp
shl
lahf
fisttps
sub
mov
inc
popa
sbb
dec
shrb
mov
call
ret
outsb
imul
pop
jmp
pop
mov
ror
rorb
inc
leave
pop
fisttpl
xor
mov
ret
fists
in
hlt
or
test
sub
aas
int3
mov
out
jae
insl
test
add
lea
sti
loop
pusha
mov
cmpsl
cmp
mov
popl
loopne
test
push
adcl
mov
fs
inc
inc
and
leave
add
or
incb
xorl
popf
mov
pop
cld
dec
push
mov
dec
fisubrs
add
jp
xchg
pop
in
lahf
mov
shrl
mov
add
jl
mov
xchg
lock
xchg
or
addr16
into
mov
aas
in
mov
mov
jge
decl
sbb
mov
pop
push
xchg
and
xor
xchg
fs
insb
pop
or
sti
inc
adc
fbld
push
jle
ljmp
ljmp
mov
fmuls
mov
add
out
adc
push
xchg
mov
ss
lds
mov
push
in
mov
jnp
test
loope
add
sbb
es
cmp
pop
dec
out
gs
int
fldt
jne
cmp
int
les
sbb
push
in
sbb
in
nop
int3
ljmp
cmp
jb
daa
pushf
xchg
mov
mov
aad
mov
push
mov
xchg
cmp
test
push
ret
out
and
jno
mov
jo
inc
lds
jo
xor
sub
and
adc
dec
pop
inc
inc
in
cld
adc
pop
rcrl
adc
pop
jne
int
xor
fisttps
mov
or
scas
cmpsl
bound
add
rcl
mov
mov
rcrb
iret
aas
mov
shr
xchg
jecxz
sbb
aas
lock
cmp
jecxz
and
pop
aad
mov
pop
mov
push
das
sbb
mov
push
xor
mov
fdiv
xorl
sbb
add
jmp
and
mov
data16
aaa
int3
fists
sub
inc
mov
push
sub
sbb
mov
sarb
aaa
jnp
arpl
add
into
aas
idivl
mov
fistpl
std
mov
outsl
test
or
std
imulb
adc
fidivl
dec
ret
lcall
xor
sub
adc
cld
shll
cmc
mov
ret
rclb
icebp
outsl
rorb
test
mov
out
or
imul
out
roll
xchg
call
repz
mov
movsb
pusha
ljmp
mov
mov
lock
cmpsb
adc
out
lods
or
mov
fisttpll
aas
cmp
repnz
jl
or
hlt
movsb
jns
int
jmp
lret
leave
mov
xchg
fs
cmpb
inc
xchg
add
in
call
movsb
or
leave
sbb
repnz
int
adc
mov
jae
add
inc
js
mov
xorb
adc
bound
jnp
cld
cld
and
mov
cs
test
add
mov
into
lods
jnp
adc
adc
sbb
pop
int3
inc
daa
fwait
pushf
inc
or
cmp
icebp
fmuls
stos
faddp
outsb
xsavec
rol
dec
addb
ja
lock
sbb
rclb
xchg
ficoms
dec
adc
or
xorb
mov
ljmp
pushf
cs
in
aam
scas
lret
test
popa
icebp
fnstenv
adc
sbb
jbe
rep
repnz
bound
es
adcl
aad
pop
inc
data16
imul
popf
push
cmp
or
xlat
rcl
cmc
nop
xor
cld
in
insb
push
lahf
push
sarb
popa
pushf
into
adc
jno
dec
hlt
es
fstpt
inc
push
lods
imull
addr16
std
jecxz
dec
jbe
iret
roll
and
fcmovnb
xor
cltd
shll
je
sbb
dec
mov
hlt
xchg
jnp
movsl
inc
shrl
adc
sub
mov
aaa
xor
mov
adc
or
mov
push
dec
je
adc
ret
neg
mov
outsb
shrb
sub
jae
out
cwtl
add
std
enter
es
cmp
movsl
and
and
aaa
mov
movsl
notb
xlat
pop
stos
ja
dec
scas
movsl
inc
ret
movsb
arpl
rolb
and
cli
int
mov
adc
mulb
fnstcw
cmp
scas
aaa
gs
sub
mov
jle
jnp
adc
push
sti
aaa
push
mov
dec
xchg
jne
cmpsl
jo
test
and
add
cmp
sbb
mov
test
cmp
sbb
pop
dec
mov
mov
stc
outsb
nop
mov
dec
sbb
sub
mov
adcl
enter
test
dec
das
leave
dec
ds
mov
and
pop
jmp
scas
ds
popa
adc
dec
sti
repz
fisubl
insl
inc
test
pusha
sbb
lods
jno
fstl
cld
fistpl
cld
mov
mov
push
aam
call
in
fs
insb
ficoms
jg
movsb
jae
cli
push
and
fldcw
dec
in
add
mov
js
and
adc
in
fistpl
adc
fsubs
and
inc
repz
popa
aaa
or
addl
aas
jno
arpl
and
cmpsb
sti
andb
xchg
aad
imul
mov
sub
cmp
inc
xchg
es
in
mov
sbb
sar
mov
ret
repnz
fsubl
push
or
inc
fisttpl
cli
lcall
ljmp
inc
sbb
test
lods
imul
out
leave
and
mov
in
mov
adc
out
ficompl
mov
inc
or
movlps
and
scas
daa
and
shll
xchg
movsl
adc
mov
sub
and
xor
jmp
js
add
pop
ljmp
dec
pop
inc
jns
and
das
mov
xor
neg
xor
mov
jnp
add
jo
xor
fwait
gs
mov
xor
shlb
push
mov
sub
sbb
in
dec
sbb
jp
fisubrs
inc
in
test
add
out
or
jge
cli
adc
loopne
mov
inc
inc
iret
jl
and
pop
mov
in
cmp
add
imul
fs
es
jne
dec
add
sbb
imul
xchg
aaa
jl
add
idivb
int3
daa
cmp
lods
data16
lods
test
mov
cmp
push
and
dec
dec
mov
sbb
xchg
inc
jne
push
ficoms
bound
jae
fidivs
jg
add
mov
cmp
fsub
jp
or
outsb
add
aaa
pop
les
rcl
cwtl
dec
push
jae
xor
stos
pop
or
cmp
dec
push
mov
jl
jge
xchg
insb
out
mov
cmp
repz
or
inc
push
adc
sahf
jnp
mul
adc
xchg
fsubrs
cli
lcall
enter
ja
std
cmpl
rcrl
add
insb
mov
xor
in
fildll
fldenv
rclb
cmp
or
and
dec
mov
pop
xlat
ja
xchg
sbb
sub
mov
in
xor
stos
adc
xor
adc
mov
sbb
pop
sbb
jmp
lcall
mov
dec
add
stos
or
xchg
adc
fbstp
mov
fsubs
xchg
ds
outsb
dec
cmpsb
scas
pop
cmp
imul
mov
cmpsl
outsl
mov
jns
lret
jno
mov
fisubrl
loope
je
ss
pop
sbb
std
adc
mov
jb
arpl
enter
outsb
ja
call
jae
mov
rolb
aam
cltd
lods
sbb
fsubrp
mov
cld
mov
and
mov
or
push
leave
push
jnp
shlb
addb
xchg
sahf
pop
std
ret
xchg
and
push
inc
addb
dec
push
movsb
and
mov
ret
lods
jecxz
mov
pop
mov
push
inc
stc
add
mov
lret
mov
jbe
push
xchg
test
add
adc
loop
cmp
cmp
lcall
sbb
pop
test
add
cs
dec
sti
jecxz
nop
shll
aas
mov
popf
push
mov
leave
sbb
ss
dec
inc
jg
adc
sbb
enter
mov
push
inc
cmp
jae
test
mov
sti
jno
cli
jnp
pop
es
push
aas
adc
jg
xlat
lcall
iret
mov
lea
push
arpl
and
cmc
out
les
push
sbb
push
out
xor
outsl
mov
aad
jne
xor
or
xchg
leavew
loopne
sbb
jmp
aas
and
mov
xchg
jnp
jle
jecxz
aas
outsb
insb
pop
lods
lcall
pushf
inc
test
addr16
pop
push
call
faddp
sti
cmp
adc
rcrb
and
jge
sahf
fstpl
jecxz
in
addr16
add
jl
in
cmpsl
xchg
xchg
inc
cltd
call
data16
pop
in
mov
xchg
jns
jp
xlat
es
mov
push
mov
xchg
dec
dec
add
and
rclb
xchg
lret
sub
scas
fisttpl
jl
xchg
jbe
repnz
mov
mov
shrl
pop
ret
dec
test
inc
push
insb
jne
mov
pop
mov
fcomp
jl
cld
add
lcall
jne
push
pop
inc
inc
jo
cld
jl
into
adc
nop
enter
xor
push
or
ficoml
mov
push
lret
cli
and
add
or
lea
cmp
xchg
cmp
je
or
imul
idivl
fs
fbld
sub
fnsave
mov
xor
add
int3
aad
movsb
adc
mov
cmp
pop
hlt
mov
xchg
js
fnstcw
loopne
test
in
dec
mov
mov
rcl
pcmpgtw
xor
in
pop
mov
mov
mov
mov
jbe
loop
mov
test
jno
xchg
add
pop
jl
popa
in
jbe
insb
jg
ljmp
dec
cmp
movsl
adc
push
bound
cmp
fistl
cmp
xorb
aad
mov
leave
xor
cmp
jl
mov
imul
lcall
mov
dec
sbb
xchg
mov
xchg
and
mov
ss
sub
loopne
iret
lahf
dec
sbb
es
xchg
adc
je
mov
aaa
or
cltd
fcomip
mov
inc
fildll
arpl
test
cmp
dec
cmp
orl
adc
and
out
fwait
ret
xor
cmp
cmp
out
sub
pop
cwtl
sarb
jmp
add
pushf
outsl
xchg
and
add
cvtps2pi
sub
in
test
cmp
add
aaa
rcrl
xchg
mov
mov
push
xchg
das
sub
scas
dec
nop
and
add
test
lea
sub
out
cmp
dec
or
ds
jp,pn
mov
adc
mov
shlb
pushf
in
sahf
frstor
mov
lcall
push
xchg
repnz
outsb
fisubl
inc
movsb
sub
sbb
mov
loope
cmp
add
sub
pushf
cs
sbbl
lret
dec
push
orb
cmp
cli
aas
or
push
sar
out
sub
repnz
jno
jle
jno
fimuls
add
clc
mov
aad
orl
stc
and
mov
rorl
stos
popa
lret
arpl
sti
xor
add
pop
int
mov
jle
int
xor
xor
or
lcall
cmp
and
lods
out
sbb
in
addb
cmp
mov
inc
mov
lods
shl
lret
fimull
ja
roll
bound
shlb
ds
jmp
lcall
mov
xchg
sub
dec
aaa
bound
fucomip
pop
test
daa
insl
sbb
xchg
call
cli
push
cmc
pushf
push
and
inc
cltd
adcl
cmc
xor
mov
and
push
jns
adc
fidivrs
xchg
mov
popf
movsl
cmp
adc
icebp
sbb
xchg
loopne
cld
in
dec
add
adc
inc
scas
mov
popa
and
or
sub
xor
mov
add
xchg
push
and
sarl
jo
xchg
jb
xchg
ret
arpl
outsb
jns
aam
cmp
add
inc
scas
jbe
out
xchg
pop
call
cmp
jmp
movsl
shll
divb
adc
leave
lods
hlt
ffreep
add
rcrb
sbb
pop
cmp
sub
and
jns
imul
jb
xor
data16
sahf
leave
mov
pushl
adc
xchg
sbb
pop
pop
sub
and
sub
out
lds
adc
sub
mov
gs
jne
xchg
imul
addr16
dec
aas
or
pop
inc
pop
xchg
adc
pop
push
test
inc
ds
push
dec
loopne
xor
sbb
jmp
inc
sbb
jo
or
movsb
mov
sbb
lret
out
outsl
jnp
out
push
movl
add
icebp
fildl
add
adc
es
std
mov
cld
movsb
ss
je
pop
faddp
pop
pop
push
fiadds
mov
pop
lock
add
sahf
mov
mov
mov
mov
push
cmp
call
jns
fisubrl
sbb
das
inc
cs
adc
int3
dec
arpl
and
mov
loope
addr16
push
cmpsb
fidivs
dec
cmpsb
pop
add
push
cld
imul
mov
add
stc
jp
bound
xchg
scas
lods
push
mov
mov
or
xchg
clc
xchg
push
mov
push
loop
jmp
cmc
dec
out
aas
dec
into
jecxz
shll
scas
jnp
dec
cmp
push
mov
out
fisttpll
mov
add
mov
dec
scas
pushf
jns
cwtl
push
jbe
mov
add
int
cmpsl
addr16
out
cmp
fcoml
adc
cmpsl
hlt
cmp
mov
and
mov
xorb
stos
mov
insb
jecxz
ret
cld
out
cmp
xchg
test
sbb
wrpkru
xor
mov
sbb
out
testb
add
lock
out
je
mov
int
jne
pop
aas
push
int
fisttpll
jmp
adcl
mov
clc
imul
nop
sub
pushf
dec
inc
cs
in
std
inc
cwtl
jp
mov
in
and
mov
pop
les
or
xchg
jno
push
outsb
xor
outsb
mov
in
pop
xor
insb
xor
xor
add
test
dec
out
cmp
sbb
push
xor
cld
jg
adc
int3
pop
adc
push
and
cwtl
push
adc
fstpt
lret
and
js
push
mov
push
add
movsl
and
loop
add
js
and
and
not
les
adc
xchg
add
mov
rcll
push
and
in
stos
daa
dec
es
push
pop
pop
mov
inc
test
ss
inc
inc
xor
cwtl
adc
inc
xor
mov
add
cmp
int
and
sub
jle
push
ret
daa
call
sub
jne
outsl
loop
adc
mov
jmp
pop
pop
roll
int
sub
inc
jmp
jnp
mov
cld
push
enter
add
in
loope
icebp
jb
negl
ds
pop
dec
adc
aam
lods
xor
ja
imul
sub
in
je
das
shl
out
gs
into
adc
test
je
mov
dec
xchg
das
int
test
nop
jo
add
jmp
jge
xor
sbb
add
movb
cmp
mov
xchg
clc
xchg
cwtl
xchg
in
insb
xlat
dec
out
inc
adc
sbb
out
dec
mov
mov
out
xor
rcll
frstor
cli
inc
dec
dec
mov
dec
jno
fiaddl
or
inc
xchg
jge
mov
adc
sbb
inc
ror
dec
dec
adc
loop
cmp
addb
scas
mov
sub
adcl
jo
inc
push
sbb
pusha
xchg
inc
mov
adcl
xor
jecxz
inc
xchg
out
in
scas
subl
xchg
dec
das
jnp
mov
mov
push
dec
jnp
mov
into
or
ss
ss
fsubrs
in
fcmovb
xchg
adc
jecxz
pushf
pop
jp
push
xor
mov
sarl
sub
and
dec
nop
cmp
adcb
jb
xchg
or
mov
notb
outsb
adc
cmp
mov
outsb
loop
xchg
ret
jae
xor
xor
xchg
fsubr
dec
sub
out
adc
das
aam
inc
adcb
xor
pop
orl
jg
ret
jbe,pn
add
mov
jg
mov
loopne
loopne
mov
call
notb
popf
fisubrs
shr
xchg
in
scas
sub
mov
cmp
xchg
insl
clc
inc
pop
lahf
out
int3
xchg
pop
std
xchg
bound
repz
pushf
imul
jae
inc
pop
daa
dec
aad
add
les
repz
dec
inc
mov
int3
lods
pop
shr
xchg
test
addr16
pusha
hlt
and
add
sub
jne
and
xor
movsb
push
or
daa
icebp
push
inc
xchg
xor
pop
xor
jl
mov
add
lock
mov
and
xchg
jne
mov
jp
adc
sbb
cltd
icebp
lahf
mov
mov
cmpsb
scas
loopne
mov
sahf
mov
aaa
push
push
mov
sub
fstpt
push
negl
loop
xchg
sarl
bound
lea
xchg
cmp
into
cmpsb
les
mov
dec
mov
inc
mov
lds
mov
xchg
jmp
enter
xchg
int
cmc
fidivrs
push
sub
fistl
add
das
popa
scas
xchg
daa
push
lds
loopne
or
int
xor
cmp
or
fs
jg
lods
lsl
imul
jle
rcrb
push
int
in
xchg
push
lret
cwtl
insl
pop
lds
jnp
sub
pop
xchg
sar
xor
imul
out
mov
subl
sbb
sbb
into
jbe
xchg
fnstsw
pop
push
mov
callw
xor
iret
xchg
pop
mov
clc
popf
ja
xor
push
inc
fdivp
inc
pop
orb
movl
out
aas
divb
out
icebp
dec
cltd
fidivrl
or
xrelease
sar
movsl
into
daa
loop
cli
rcll
sbb
sub
xor
fdivr
jb
rcrl
add
daa
movsl
mov
shlb
outsb
test
sub
xchg
jnp
jne
test
jae
nop
push
icebp
int
adc
or
in
jmp
pop
sub
ret
add
aad
inc
gs
jns
lods
mov
mov
rorb
dec
pop
dec
cld
dec
mov
shrl
mov
xchg
mov
imul
cmp
push
mov
aam
shll
leave
inc
push
std
dec
ljmp
push
pause
repnz
xchg
int
fsubrp
es
fdivl
pop
into
mov
jns
push
fidivrl
mov
xlat
push
sub
xchg
mov
scas
lods
jl
fcomps
iret
aam
into
jns
jmp
cmpsb
and
std
testl
xchg
ljmp
lock
nop
in
xchg
int
xchg
outsl
mov
pop
pop
bound
outsl
sbbb
mov
out
fistps
dec
scas
in
mov
or
fwait
aam
out
sub
or
aas
and
lods
pushf
imul
leave
movsb
and
cmp
adc
sbb
sbb
push
add
movsl
xlat
dec
pop
xchg
mov
cmp
fidivl
pop
outsb
inc
jno
icebp
sub
dec
dec
arpl
stos
in
roll
push
xchg
sub
pop
es
lret
mov
push
dec
insl
ja
adc
mov
push
sbb
jbe
or
mov
inc
dec
xchg
sti
repz
cmp
loop
adc
mov
dec
loope
ret
mov
pusha
add
mov
pop
leave
pop
ljmp
rorl
cmp
sub
jne
pop
jg
dec
adc
mov
fdivs
insl
scas
push
push
addr16
idiv
or
jb
sub
fidivrs
and
jno
lret
and
pop
nop
jl
cld
in
dec
scas
push
scas
xor
cmove
dec
jmp
dec
out
mov
fwait
call
in
pop
jns
xchg
add
or
or
xor
jae
xor
and
inc
push
mov
sbb
imul
in
rol
sub
sub
sub
stos
test
add
leave
js
xlat
or
inc
scas
cmp
mov
enter
push
ret
sarl
mov
int
cmp
or
daa
sub
movsl
or
aad
test
pop
in
pop
test
mov
shrb
insb
aam
fstpl
cmp
inc
xchg
rorl
movsl
adc
out
test
out
loope
push
mov
mov
push
repnz
add
mov
dec
iret
inc
sub
divb
add
push
loope
aad
lcall
dec
stc
xor
orl
stos
sahf
pop
enter
xchg
mov
push
es
je
push
in
sub
pop
mov
jecxz
xor
inc
insb
sbb
test
dec
push
mov
pop
sahf
add
mov
iret
movsb
fists
leave
in
addl
enter
jle
pop
dec
adc
shll
in
add
dec
push
sahf
outsl
push
and
mov
bound
sbb
cmp
jns
and
popa
or
fmulp
jno
nop
sub
xor
push
test
or
jno
jg
mov
leave
pusha
fmull
out
fisttps
dec
inc
repz
scas
fcmovnu
xchg
loopne
pop
das
std
add
js
int
ret
mov
push
cmp
test
inc
dec
test
mov
sub
jmp
leave
jecxz
push
mov
cld
sbb
lods
es
jae
mov
repnz
andl
lcall
cmpsl
test
inc
shrl
jmp
xchg
clc
mov
fs
popf
mov
lahf
das
rclb
or
popa
jno
scas
test
aam
sub
add
jo
pop
adc
cmp
mov
insl
or
shrl
insl
adc
testl
mov
mov
jp
test
jno
jl
insl
orb
sbb
fists
mov
int
cmp
jns
pop
sbb
add
jl
dec
call
mov
in
add
mov
scas
test
cmp
inc
jle
jbe
inc
mov
roll
stos
imul
inc
adc
das
shrb
std
push
xchg
rcll
cli
xor
lret
pop
stos
sbb
cli
fldcw
and
outsb
lahf
fisttpll
pop
addr16
and
push
movd
push
jge
mov
iret
xchg
rolb
roll
add
fwait
les
jg
sub
sub
cmp
cmc
mov
loop
andl
pushf
and
outsl
mov
leave
add
pop
jae
cmp
xchg
mov
leave
adc
lahf
inc
fwait
pop
test
lahf
xor
sbb
cmp
icebp
fld
adcb
mov
repnz
mov
xchg
or
ss
in
fcmovnb
mov
adc
out
sub
xchg
imul
outsl
fwait
cmp
dec
pop
dec
jg
pop
scas
and
das
std
inc
jge
cmpsl
sbb
dec
les
mov
inc
sbb
jns
xor
mov
dec
xchg
adc
insl
mov
cmp
push
mov
pop
clc
loop
iret
mov
cmpsb
sub
insl
and
mov
xchg
push
fstl
xchg
loop
outsl
sahf
jmp
dec
cmpsl
xchg
out
outsb
jg
imul
je
in
or
je
scas
jmp
dec
push
popf
aaa
rclb
jne
inc
add
jae
fdivrl
or
movsl
adcl
adc
cmpsb
add
fcoms
xor
inc
cwtl
fucomp
adc
inc
shll
pop
test
loopne
jge
jmp
xchg
es
push
pop
iret
es
jg
loop
fcomps
lods
or
sub
enter
lahf
loope
jbe
push
ss
add
scas
inc
mov
pop
xor
lret
xchg
jecxz
and
jecxz
loopne
or
jmp
cmc
enter
out
mov
scas
cli
lahf
push
adc
or
sub
xor
psllq
pushw
sub
sub
stos
stos
jg
jg
scas
lret
loop
lret
fwait
dec
test
mov
cmp
mov
pop
push
push
in
mov
sbb
mov
data16
fcmove
xchg
pop
in
test
xor
fsts
int3
sbb
stc
mov
stos
cmp
arpl
adc
sahf
aad
and
out
sub
subl
cmp
sbb
push
push
lds
dec
daa
mov
popf
inc
mov
int
hlt
adc
mov
cmpsl
scas
lahf
fistl
inc
mov
idivl
popf
jmp
and
sbb
xor
imul
sar
aaa
roll
outsb
repz
adc
in
addl
pop
push
ja
mov
cmpsl
das
dec
cwtl
and
mov
dec
loope
add
inc
dec
and
sub
xchg
xor
adc
jl
bound
hlt
pop
or
in
gs
outsl
loope
cmp
xchg
jnp
or
repnz
sbb
stc
adc
ret
aad
and
xor
cld
adc
daa
sub
dec
loopne
xchg
xchg
dec
push
push
int
mov
imul
hlt
jbe
setns
decl
pop
lods
dec
and
lcall
shll
push
stc
out
ljmp
mov
popa
sti
mov
daa
imul
inc
adc
xor
mov
orb
pop
rorl
cmc
push
mov
xchg
icebp
bound
pop
add
pop
jo
add
subl
pusha
cli
pop
addr16
icebp
gs
out
push
das
pop
jne
sub
inc
aaa
dec
sbb
fs
or
add
jle
pop
mov
jnp
test
xor
pop
adc
jge
cmp
insl
jbe
cmp
sbb
es
daa
sbb
sub
inc
or
lea
or
shrb
popf
and
aad
jle
cmp
aas
fcoms
mov
outsl
shl
adcl
stc
fisubl
mov
jl
imul
pop
xor
data16
sub
mov
inc
cmc
mov
push
insb
mov
push
jge
loop
ljmp
fnstcw
and
fldl
pop
mov
xchg
inc
lea
stos
shll
nop
outsl
dec
aas
add
clc
test
int3
es
pop
int
jge
cs
leave
inc
ret
inc
stos
or
pop
insl
arpl
out
andl
xchg
repz
movsl
adc
sbb
aam
sbb
ficompl
inc
fildl
dec
xorb
adc
shll
mov
rcrl
xchg
adcl
mov
outsl
xchg
test
out
dec
out
hlt
xchg
dec
jbe
hlt
inc
nop
lret
popa
int3
and
sbb
jbe
popf
xor
xchg
jmp
call
push
pushf
daa
jmp
lahf
push
inc
fistps
push
add
jno
ja
outsb
mov
fdivs
cltd
popa
adc
test
aam
stc
lret
xchg
push
dec
daa
test
popf
xchg
and
rorb
sbb
lock
dec
jl
std
add
test
pop
xlat
xchg
lret
enter
imul
inc
jp
jg
adc
fadd
daa
mov
nop
jg
xor
add
fcompl
les
sbb
xor
xor
pop
aam
and
icebp
xchg
and
shll
and
cld
push
popf
pop
inc
mov
mov
mov
in
lret
pop
scas
mov
mov
sbb
sahf
fdivrl
mov
push
xchg
sub
xabort
sbb
stos
stos
xchg
push
je
sbb
mov
lock
fisubrs
push
enter
pop
push
adc
ret
or
push
mov
lods
fwait
inc
cs
pop
mov
imul
xor
sbb
mov
xlat
lea
cmp
mov
jle
gs
adc
es
or
or
addl
dec
cmpsb
pusha
push
mov
lcall
inc
jge
dec
mov
lods
in
or
mov
in
pusha
sahf
xor
mov
mov
or
ret
scas
mov
jecxz
pop
pop
movsl
fildl
outsl
pop
jge
sub
jno
sahf
shrb
dec
xchg
nop
cltd
fnstsw
pop
push
mov
fucomip
mov
mov
mov
mov
mov
inc
fists
movsl
pop
arpl
xchg
jge
adc
leave
loopne
popf
ss
pop
jg
addr16
adc
add
add
xor
jge
daa
jo
and
insb
mov
pop
dec
xchg
jb
test
imul
jg
add
les
test
inc
mov
shlb
mov
mull
fldt
rolb
test
add
cmp
lcall
cmpsl
mov
fbld
call
cmp
imul
leave
shll
cmp
ljmp
es
sub
shrb
out
cmp
mov
sbb
jmp
cmpsb
push
cmp
roll
mov
stos
xor
fcomps
mov
push
mov
jl
push
cvtpi2ps
inc
sbb
sbb
je
or
add
outsb
pop
xchg
aad
shlb
jmp
shl
lret
mov
jbe,pn
mov
cmpsb
adc
cmp
pop
push
mov
mov
mov
xor
pop
in
and
push
daa
lahf
inc
cmpsl
int3
push
sbb
sbb
pop
sbb
xor
mov
call
pop
adc
pop
mov
sbb
pop
push
mov
sub
xlat
mov
mov
adc
test
in
arpl
inc
push
pop
dec
jge
pop
adc
mov
int
or
jmp
outsb
int3
jmp
sbb
push
repz
inc
mov
xchg
sbb
inc
testl
testl
iret
adc
pop
inc
pop
into
xchg
add
push
ret
jns
leave
push
adc
fisubl
mov
xor
mov
and
jnp
out
loope
xor
movsl
fistps
and
lock
lock
mov
ss
mov
clc
fldenv
xor
fcmovu
andl
fisubrs
in
movsb
movsl
sub
mov
out
mov
pop
cld
or
dec
lock
and
popa
inc
mov
add
addr16
dec
push
sub
in
lea
shll
mov
push
pop
jecxz
fdivrs
js
ret
xchg
push
dec
sarl
or
push
aam
pop
jo
aad
cltd
stc
adc
mov
add
mov
cld
jns
insl
jo
xor
adc
pushf
into
outsl
fwait
mov
push
outsl
mov
mov
add
jp
fstps
out
mov
mov
lock
jl
aam
test
push
xchg
jp
jnp
cwtl
push
je
es
stc
inc
mov
test
add
pop
push
or
or
movsl
xorb
mov
cmp
add
mov
cmp
mov
mov
sub
loope
push
mov
add
xlat
clc
adc
xor
dec
inc
rcr
test
sahf
scas
mov
out
dec
movsb
cwtl
mov
mov
jmp
sub
scas
psrlq
decl
into
adc
jecxz
addl
pop
stc
repnz
adc
sbb
adcb
mov
sbb
dec
in
pushl
test
mov
jo
fsubs
sub
lea
push
lret
dec
bound
mov
insb
push
fsubrs
xor
in
pop
cmpsb
nop
adcb
dec
inc
scas
daa
enter
and
pop
xorl
sbb
adc
shll
adc
leave
cmp
push
cmc
push
xor
or
pop
test
cmpsb
repnz
inc
cmpsl
sub
aas
mov
inc
inc
jb
cmpsl
ja
sbb
dec
mov
mov
fwait
sbb
in
fstl
fadd
repnz
fwait
pop
incb
ljmp
inc
pop
push
push
mov
fdivl
add
adc
mov
jbe
xor
mov
cmp
hlt
sbb
leave
mov
adc
mov
into
dec
cmp
sub
mov
pop
add
cmc
outsb
rcrb
jne
and
movsb
es
stos
mov
repz
mov
ja
mov
in
sub
sarl
je
pop
xchg
aas
leave
jo
test
jge
xor
cltd
outsl
mov
clc
cmc
inc
in
pop
gs
pop
sahf
xchg
in
adc
mov
sbb
test
pushf
push
popf
mov
jns
mov
daa
push
pushf
mov
inc
arpl
in
sbb
inc
rorl
xor
loopne
ret
jne
das
out
data16
filds
stc
movsb
inc
mov
sub
xchg
fbstp
jo
adc
addr16
lahf
jg
push
mov
shrb
aad
daa
or
add
ret
jo
insl
mov
cmp
sub
sbb
mov
and
sub
aas
cld
ds
mov
ljmp
adc
sub
mov
pop
test
pop
dec
loop
jle
pop
inc
out
cmpsb
mov
jns
fidivrs
mov
cmp
sbb
mov
jae
lods
nop
hlt
cld
fsubs
jg
adc
inc
jne
inc
sbb
aas
shll
cmp
test
push
xlat
inc
mov
call
sarb
adc
movsl
adc
mov
sbb
push
dec
sahf
add
scas
pop
jae
cmpsb
add
dec
mov
sub
cmpsl
rorl
roll
lods
out
shll
imul
ljmp
xlat
push
scas
bt
push
pusha
addl
fisttpl
mov
or
cmpsl
lret
fstpl
add
fwait
mov
pop
cmp
or
add
test
xor
int3
and
adc
adc
leave
in
pusha
sahf
insl
adc
lods
lea
push
mov
adc
push
push
into
sbb
test
fadds
jae
pop
push
shll
shlb
jecxz
test
sub
movsb
sbb
shr
mov
fs
leave
inc
or
add
cwtl
xor
push
addr16
add
sbbl
dec
mov
arpl
inc
icebp
cmpsl
mov
ficoml
sbb
gs
and
lahf
jmp
fadds
cmp
in
stc
inc
test
pushf
das
sbbl
push
not
inc
daa
push
push
adc
inc
lret
jne
xchg
cmpsl
xor
lret
jb
int
imul
sub
jp
sub
data16
inc
adc
xchg
out
andb
add
pop
push
and
xchg
sti
gs
jo
adc
or
lcall
dec
movsl
mov
xor
cmp
sub
inc
pop
scas
inc
mov
mov
lret
and
and
adc
sub
add
jbe
add
loope
jmp
and
mov
jnp
mov
xchg
xor
negl
int3
imul
mov
aam
fldt
fcoms
mov
xchg
push
les
mov
cmp
fxch
and
cmp
outsl
mov
xor
sub
xchg
mov
inc
and
xor
pushf
dec
dec
insl
xchg
mov
mov
mov
xchg
test
ror
adc
or
and
pop
inc
loope
fwait
jbe
sub
ljmp
cld
stos
push
rorb
testb
into
inc
jnp
push
test
into
dec
std
adcb
mov
mov
and
std
lds
mov
int3
adc
clc
adc
movb
lret
pop
add
jge
hlt
pop
shll
seta
scas
rcl
imull
mov
push
sub
push
push
mov
in
or
pop
push
mov
xchg
setns
mov
adc
adc
mov
xor
mov
mov
jns
imul
inc
mov
out
fmuls
inc
cmp
sbb
mov
push
adc
rorb
mov
jg
cmp
lock
sub
sub
sub
cmp
or
xchg
mov
jnp
data16
imul
int
clc
test
into
in
loop
jmp
jp
cmc
jb
cmpsb
mov
cli
icebp
jg
shr
pop
jb
mov
shrl
jle
jns
repnz
sbb
fbstp
inc
jge
sub
out
mov
sbb
xor
lods
xor
int
inc
mov
dec
insb
lcall
push
jg
xchg
inc
hlt
or
jge
gs
xchg
pop
xchg
shrb
push
xchg
repnz
add
inc
fwait
xor
fimuls
sub
daa
pop
lods
js
mov
data16
jbe
xor
jmp
stos
ja
rcl
adc
jg
jecxz
cs
fnsave
arpl
mov
in
out
cs
sbb
sarl
aas
stos
xor
jae
sarb
hlt
test
xchg
fdivs
inc
loop
mov
add
xor
mul
bound
pop
mov
clc
imul
mov
xor
stos
dec
lods
imul
js
lock
lods
jns
addr16
pop
or
pop
fldcw
dec
inc
cmc
es
or
sub
call
aam
lds
xor
add
or
repz
in
ja
mov
mov
fbstp
stc
test
dec
pusha
lret
xlat
cmp
sbb
push
out
pop
pop
clc
loopne
aam
mov
and
mov
jg
inc
imul
cmp
push
jbe
sbb
ret
sbbb
sub
andl
add
loope
adc
imul
rclb
je
xchg
cmpsl
inc
mov
aam
pop
jns
fsin
fmul
xor
cmp
nop
stos
xor
ds
das
shrl
and
js
dec
xor
out
xor
push
push
movsl
enter
fdiv
jnp
mov
sahf
mov
inc
daa
cwtl
cli
iret
and
adc
fcoms
sbb
adc
mov
out
in
lea
add
test
arpl
lahf
in
and
mov
push
into
shl
sub
inc
sbb
lcall
pop
add
jns
aad
enter
jb
pop
in
or
hlt
push
jmp
xor
dec
bound
ds
outsl
cmp
lcall
inc
cltd
xchg
dec
enter
ss
cli
in
fisttpll
mov
and
and
gs
ljmp
xchg
and
ljmp
pop
push
ss
mov
out
mov
mov
push
insb
pusha
and
jbe
push
pop
scas
push
push
jnp
pusha
test
cltd
sub
cmpsb
push
dec
cmp
vbroadcasti128
pop
and
xor
dec
jbe
jle
ror
cli
ret
mov
xlat
aas
pop
adc
icebp
ss
in
inc
in
add
popa
sbb
dec
add
mov
mov
push
mov
xchg
xchg
jo
xchg
loop
rol
pushf
xor
popa
pop
sbb
outsb
je
iret
fs
lret
out
sbb
cmc
sub
pop
mov
in
jmp
mov
mov
cs
or
cmp
or
dec
ror
in
xchg
sbb
mov
stc
pop
sarl
lcall
cmc
into
les
ja
pusha
cmp
lahf
jb
add
and
cmpsl
inc
lods
int
mov
fstps
faddl
xchg
mov
scas
sub
pushf
fcoml
or
repnz
dec
pop
jg
cli
lea
in
and
sbb
jecxz
jo
dec
sbb
xlat
divb
jmp
sbbl
push
cs
xchg
cmp
fcompl
pop
push
dec
xor
jmp
out
pop
push
and
lea
nop
fistps
cmp
in
adc
ficoml
insb
out
int3
adc
cli
ss
fs
push
sbb
pop
add
daa
jl
flds
xorb
int3
dec
and
fildll
sub
sbb
lock
ljmp
out
cmp
leave
es
mov
xchg
cmp
mov
push
sub
mov
sub
push
add
test
mov
sub
mov
mov
cmp
icebp
push
dec
ret
xor
dec
fistl
aas
push
iret
jl
push
dec
stc
mov
js
ds
dec
or
mov
leave
nop
rcr
inc
xchg
adcb
hlt
push
addl
jmp
pushf
pop
shlb
sub
jae
cmpsl
cmp
mov
mov
ja
jne
jbe
test
mov
push
pop
xchg
adc
xchg
loop
pushf
fldt
enter
pop
mov
xor
aad
xchg
push
scas
inc
pop
xor
jge
mov
movsb
lds
and
mov
mov
mov
cmp
sahf
stc
pop
and
push
xchg
outsb
loope
mov
sbb
sbb
and
negl
xor
fistps
xchg
xor
ficomps
sbb
push
adc
mov
out
jns
push
stos
pop
xor
xor
cmp
mov
movsl
xchg
cmp
movsb
fistl
pop
jns
mull
rolb
adc
imul
fstps
mov
jns
data16
and
mov
xchg
shrb
in
std
jns
sub
push
dec
adc
mov
adc
adc
xchg
lret
das
sub
pop
not
jno
fs
and
dec
in
xor
push
fstl
mov
fmulp
out
lcall
scas
jne
adc
outsb
push
movsl
std
xor
bound
inc
xor
sbb
in
clc
inc
sti
inc
jnp
outsl
adc
pop
hlt
enter
mov
fstpt
xchg
es
in
aas
std
inc
sub
mov
mov
jmp
sub
mov
sbb
sbb
mov
pop
testb
outsl
xchg
cmp
fwait
xchg
jmp
adc
cmpsb
and
fidivrs
dec
push
xor
dec
call
rcll
mov
jl
bound
hlt
and
or
shrb
jns
fnstcw
gs
fcompl
scas
insb
pop
sbb
pushf
pop
push
adc
cmp
imul
inc
ja
jae
test
andb
mov
inc
push
push
loope
xchg
sbb
mov
and
ljmp
dec
les
push
adc
inc
insl
out
mov
mov
sarb
ja
outsb
jmp
push
xchg
pop
test
daa
cmpsl
xchg
mov
in
add
push
aad
loope
push
lcall
orl
cmp
push
lcall
xchg
push
leave
leave
lock
cmpl
and
inc
idivb
scas
jmp
fdivrs
push
iret
scas
sar
out
pop
outsl
and
dec
mov
and
orl
inc
xlat
aas
fidivl
jmp
sbb
or
loopne
add
mov
not
adc
push
popf
sub
add
add
insb
in
xchg
cltd
mov
add
xchg
lods
rep
addr16
sub
lods
jge
imul
xor
outsl
add
mov
hlt
rcr
call
mov
xchg
xor
iret
adc
xchg
outsb
jne
push
jmp
imul
pop
loopne
fldl
daa
or
jg
daa
test
int3
leave
add
cmp
enter
fstpt
xor
xor
mov
push
jo
dec
pusha
shr
push
pop
xor
sbb
imul
add
inc
ret
pop
mov
and
lds
vpsubsw
jne
push
dec
push
fwait
aad
push
pop
xchg
xchg
mov
and
cmp
add
mov
out
inc
sub
jns
jo
lahf
pop
lock
adc
gs
adc
pop
rcl
daa
cmp
mov
rol
shll
repz
cmpsb
out
or
push
add
movsb
out
or
imul
pop
mov
dec
ud1
inc
jne
fisubrl
mov
pop
out
popl
std
pop
aad
adc
ljmp
lret
sahf
sbb
icebp
pop
aaa
mov
lods
inc
fs
xlat
lret
add
sti
aaa
push
imul
out
ret
lods
cmc
das
xlat
pop
jp
in
inc
and
sarl
out
out
fldcw
jns
aas
xor
cltd
push
jp
adc
fmul
shrb
push
arpl
cmp
ficoml
sub
pop
jp
cmpsb
das
cmp
in
pop
push
jns
mov
and
ja
mov
and
add
sarl
addr16
lods
mov
test
add
out
lret
ss
push
std
xchg
mov
mov
aaa
dec
sbbb
into
lcall
lret
iret
inc
insl
into
pop
arpl
fsubrl
sbb
jnp
cmp
cmpsb
testb
mov
mov
lea
sub
pop
call
add
test
mov
jl
repz
or
xor
inc
sbb
test
pusha
sbb
test
adc
rclb
push
ljmp
and
sbb
jge
push
test
cmp
aam
call
addl
rcrl
loope
js
orb
gs
dec
mov
popf
pop
inc
jle
cld
test
xchg
daa
mov
loop
aaa
adc
or
pusha
mov
inc
push
adc
xchg
lock
mov
and
shl
mov
inc
daa
jb
xor
xlat
in
decb
mov
pop
cli
lret
scas
jecxz
inc
cmpsl
xor
cmp
or
call
inc
fldenv
ds
hlt
cs
sti
into
jnp
mov
xlat
mov
insb
xchg
test
fildl
int3
dec
fstpl
mov
inc
mov
jl
cmpb
adc
sub
ja
mov
paddb
push
or
inc
sbb
int3
dec
lcall
ret
jg
rol
fwait
rcrb
stos
xchg
insb
add
pop
decb
dec
mov
sbbb
push
fdivrs
jns
gs
ret
pop
mov
xchg
rolb
sbb
jbe
je
shll
rcrb
and
jne
inc
jb
pop
loopne
inc
mov
add
out
int
jg
hlt
jl
adc
popaw
mov
sub
inc
fdivs
dec
aam
pop
rcr
inc
or
cmp
cwtl
push
pop
out
dec
outsl
fmulp
repz
aam
shll
out
ds
dec
pop
pop
out
sub
adc
jnp
scas
inc
ror
xchg
cmp
dec
test
jo
pop
jo,pn
or
cs
ret
jb
insl
outsb
and
or
inc
sti
cwtl
imul
pusha
filds
inc
movsl
mov
mov
adcl
pop
lock
mov
js
loop
movsl
nop
fldt
push
fsubs
sahf
jnp
and
mov
out
movsb
in
fildll
jbe
or
xchg
dec
add
and
popa
or
jmp
push
imul
jne
in
and
lcall
bound
mov
stos
std
negb
popf
adc
std
rorl
test
adc
pop
aad
xchg
sahf
adc
jnp
or
inc
cmp
iret
sahf
daa
fimull
sbb
mov
sarb
int3
icebp
rcrl
mov
in
sub
xchg
adc
cmp
sub
jmp
add
cmp
inc
jae
int3
leave
and
out
cs
mov
popf
and
dec
lea
cmp
in
inc
outsl
out
into
xor
pop
lods
mov
inc
jp
pop
sub
popa
mov
ret
imul
adc
xchg
mov
les
in
and
stos
xchg
and
bound
inc
xor
cwtl
outsb
das
push
into
sti
movsl
sub
fpatan
sub
out
leave
out
xchg
inc
aam
mov
das
sub
lods
in
aam
adc
fsts
mov
xor
gs
xor
inc
mov
mov
inc
mov
jb
pushl
and
inc
stc
idivl
mov
dec
mov
aad
push
pop
mov
out
lock
fbstp
pop
stos
cli
inc
hlt
clc
or
push
inc
std
and
mov
and
mov
out
mull
pop
popf
jle
pop
jo
aam
jecxz
push
cmpsb
loop
pushf
out
scas
js
aam
popf
lret
mov
shll
cmp
jno
outsl
pop
push
stos
xor
dec
pop
xor
inc
sahf
push
sub
or
mov
js
xchg
fwait
adc
aaa
xor
xor
mov
adc
aaa
icebp
lods
mov
int3
ds
cmp
xor
xor
cmp
nop
nop
jbe
xor
dec
add
or
imul
add
pusha
leave
inc
test
fsubl
hlt
ret
insb
mov
test
or
mov
mov
push
adc
inc
out
or
sbb
cs
inc
adc
in
mov
out
ret
cmp
out
pop
lods
test
movsl
jnp
mov
cmpsb
arpl
pop
movsb
push
pcmpgtw
add
idivl
out
pop
pop
lods
mov
out
in
jmp
mov
ret
push
int
lods
adc
mov
movsl
sarb
push
aaa
je
fists
ds
call
xchg
pop
rol
sub
mov
sti
jns
xchg
ja
xor
lock
vaddsubpd
fsqrt
popa
fnstsw
movsl
push
mov
in
dec
or
pusha
in
and
inc
out
or
imul
lea
push
lcall
jmp
rcrb
adc
icebp
sub
pop
ljmp
lds
push
in
dec
mov
xchg
mov
jl
pop
or
xor
aad
fisttpll
gs
cmc
idiv
xchg
call
cmp
add
pop
xor
in
adc
sub
inc
idiv
repnz
je
pop
push
inc
movsl
lret
test
imul
or
test
test
dec
in
push
loopne
pop
int3
xchg
xchg
arpl
or
ror
sbb
sbb
or
and
sahf
aaa
out
jmp
cld
jg
and
sti
dec
pop
stos
mov
pushl
pop
sbb
mov
les
mov
ret
push
pop
imul
inc
xor
out
sub
xor
mov
pushf
pusha
shl
test
sub
fwait
jno
inc
xor
or
mov
mov
xchg
mov
jae
out
add
mov
push
pop
xlat
lods
mov
sub
call
pop
notl
mov
cmp
das
push
pop
ja
outsl
mov
add
stc
pop
adc
fistl
inc
test
sub
mov
rcr
insl
jg
inc
mov
pusha
push
mov
out
fidivl
xchg
sub
sub
call
sbb
loope
stmxcsr
add
add
and
jg
jns
mov
gs
cmp
jmp
mov
xchg
dec
imul
mov
in
add
repz
mov
cmp
in
shrb
jo
pop
pop
mov
dec
or
stos
mov
jnp
daa
out
jle
test
popa
fadds
adc
insb
in
mov
jp
icebp
lret
movsl
or
pop
add
and
mov
pop
xchg
cltd
xor
lahf
pop
shl
jmp
rdmsr
addr16
mov
loope
cs
lds
cmp
sub
popf
ret
xchg
out
jne
arpl
mov
cmp
pop
sbb
sti
and
outsl
pop
mov
pop
data16
and
cwtl
mov
xor
fdiv
adc
std
daa
ret
aam
clc
jb
aas
cmp
aaa
xchg
mov
movsb
pusha
int3
cltd
mov
and
pop
dec
inc
shrb
ss
int3
imul
mov
pop
xor
and
pop
dec
push
mov
popa
adc
jge
sti
xchg
lock
mov
lahf
mov
sbb
fs
sbb
insl
inc
insb
cmp
sbb
rcrb
xchg
add
pop
cmp
hlt
push
xor
stos
xor
mov
sub
adc
xorl
pusha
cmc
ja
insl
int3
out
stc
lcall
je
idivl
int3
cmp
adcb
shlb
adc
add
outsl
and
adc
jp
push
lds
int
inc
sub
in
jo
sbb
sbbb
stos
mov
call
dec
mov
sub
add
sahf
xchg
pop
dec
popf
pusha
cmpsb
push
and
cmp
in
cltd
test
stos
cmp
cmpsb
adc
pop
sub
orl
cmpsb
pop
adc
and
popf
lret
dec
add
and
and
jne
int3
loopne
test
push
arpl
add
mov
push
fwait
dec
jge
fs
sahf
repnz
push
mov
and
cmp
inc
mov
sbb
lcall
lock
xchg
mov
sbb
and
or
and
lods
mov
xor
out
mov
movsl
sub
sbb
dec
loope
enter
xor
scas
or
mov
pop
in
push
or
inc
stos
adc
cli
mov
outsl
in
lock
mov
lods
insb
pop
data16
dec
xchg
lea
loope
mov
mov
test
cs
pop
or
je
fnstsw
mov
xchg
orl
cli
out
cmp
sbb
insb
mov
xor
loope
mov
dec
je
adc
add
mov
mov
stos
hlt
js
sub
les
mov
add
sub
sbb
scas
xchg
cld
pushf
xchg
mov
xor
cmpsb
cmp
xor
push
inc
jl
fs
shr
mov
insl
lret
clc
das
ret
sub
xor
lcall
dec
push
xor
jno
pop
sbbl
test
nop
mov
adc
je
rclb
lahf
add
lock
lods
xor
lea
jmp
jg
cli
aam
or
sub
lods
or
mov
in
or
bound
ljmp
idivb
sbb
mov
into
fdivs
and
cmc
cmp
xor
mov
mov
ret
jbe
in
mov
shl
mov
mov
sub
lret
repz
stos
dec
in
sbb
imul
aam
loopne
sbbl
int3
repz
pusha
push
mov
test
ss
nop
xchg
dec
cli
int3
insb
loop
xor
xchg
mov
int3
in
enter
jb
push
mov
lcall
ja
addr16
cmpsb
push
hlt
jne
dec
xor
sub
push
sub
outsl
inc
jb
rep
jl
mov
leave
mov
inc
jle
or
fisubs
js
shll
outsl
call
mov
jo
in
int
faddl
jb
mov
in
xchg
or
xchg
cmpsl
aaa
mov
ret
jl
iret
jmp
loopne
push
fsubr
outsl
jne
push
pusha
adc
enter
push
inc
cmpsb
xchg
sti
pop
je
add
push
jo
mov
jae
adc
je
jmp
test
add
mov
adc
sub
daa
sbb
xchg
cmc
lock
mov
and
dec
bound
xchg
aaa
xor
mov
loop
mov
std
lret
xchg
sub
lea
inc
or
shrl
call
cwtl
mov
fisubl
aam
jno
nop
int3
pop
add
pop
ficoml
sahf
push
movl
je
push
std
push
or
divb
sbb
arpl
jo
push
je
dec
xchg
jbe
aas
je
mov
icebp
fldcw
rcl
and
push
xchg
push
pop
mov
testb
xchg
pushf
pushf
inc
int3
mov
in
sbb
jmp
adc
push
mov
pusha
mov
nop
mulb
aaa
push
xor
adc
bound
in
cmp
test
dec
jbe
sbbb
stos
push
cli
sbb
arpl
and
ja
fdiv
shl
clc
int3
popf
and
std
int
dec
scas
sbb
lahf
std
sub
mov
lret
call
cmpsb
das
loope
mov
fistl
lods
jecxz
mov
mov
outsl
das
inc
sbb
fwait
cmc
arpl
or
or
dec
jge
or
dec
inc
mov
mov
xor
outsb
movsl
adcl
imul
cmpsl
jae
iret
cmpsb
jl
push
add
in
dec
in
clc
cmp
lods
sbb
mov
pop
dec
popa
or
dec
mov
fucom
daa
fldl
in
pop
adc
pop
add
jb
fstpt
push
add
jecxz
loopne
mov
mov
mov
in
pushf
mov
lock
hlt
daa
sbb
sub
shrl
dec
test
xchg
sub
shl
adc
aam
in
movsl
pushf
sbb
les
push
ja
shlb
int
iret
push
std
ljmp
divl
iret
ret
adc
adc
shrb
test
scas
lea
aam
lret
mov
and
jno
lcall
scas
mov
mov
sarb
iret
int3
add
insb
sbb
add
inc
aam
push
adcb
inc
xor
fcoml
push
mov
mov
aad
cmpsl
inc
mov
xlat
fdivs
pop
lcall
cmpsl
mov
sub
nop
bound
imul
and
push
cltd
pop
dec
push
inc
fnstsw
inc
out
test
cmp
xchg
movsb
or
push
out
jns
negl
test
mov
lret
adc
out
scas
and
arpl
mov
pop
and
inc
pop
test
sub
pusha
cmp
mov
stos
aad
sub
cmp
int3
out
in
xor
jb
outsl
mov
fiadds
into
mov
inc
cld
bound
cltd
sub
arpl
in
lret
leave
mov
pop
loop
outsb
pop
hlt
and
enter
inc
in
jge
fidivrl
and
ret
jne
or
dec
imul
test
shll
imul
pop
mov
xchg
pusha
cld
mov
mov
mov
shlb
notl
dec
icebp
cmpsl
insl
imul
arpl
xorl
js
jne
add
xlat
mov
inc
push
mov
lret
pop
sub
xor
std
ret
mov
mov
inc
xchg
pushf
cmp
loop
inc
gs
cmp
inc
adc
add
push
scas
hlt
sbb
xadd
fmull
ficoml
aam
rcl
lret
or
enter
fisubrs
notl
dec
arpl
push
mov
out
push
dec
roll
mov
xor
data16
es
ret
aad
pusha
in
xchg
inc
int3
push
sbb
jne
popf
sarl
push
test
dec
cld
xchg
inc
jge
pop
in
or
dec
outsl
push
jp
dec
ret
bound
jb
fcom
dec
scas
in
mov
sbb
push
xchg
in
cltd
ja
mov
dec
ds
mov
mov
stc
xor
or
cmpsb
and
inc
sar
cwtl
add
jb
jae
cmp
insl
lock
fbstp
xlat
cwtl
icebp
sbb
mov
push
sbbb
xchg
in
pushf
push
xorl
idivb
sub
das
jns
lea
sarl
movsb
inc
aaa
or
add
mov
enter
push
mov
inc
dec
pop
sub
shll
cmc
adc
bound
cmp
outsl
adc
sahf
jb
xor
shlb
add
gs
mov
push
mov
not
mov
mov
dec
or
sub
in
mov
arpl
mov
push
xor
mov
add
popf
push
ret
add
adc
jg
or
aaa
xchg
mov
push
pop
lods
das
or
inc
mov
pop
push
outsl
push
pop
frstor
mov
add
or
or
dec
dec
pop
lret
xor
fcoms
sub
sub
pushf
roll
pop
jge
or
or
popa
in
ret
sahf
arpl
inc
mov
jbe
inc
stos
flds
pop
inc
repz
sub
bound
lds
jne
ljmp
pop
mov
lret
enter
mov
dec
add
adc
mov
aaa
adc
jns
mov
addb
int3
ja
or
dec
aam
jno
lock
dec
mov
test
cmp
add
mov
and
hlt
push
scas
psllq
add
adc
sahf
cmp
int3
stc
aaa
in
push
mov
push
push
movsb
xchg
cmp
add
fildl
pop
out
xor
and
lret
jmp
mov
imul
pmuludq
mov
mov
cmpsb
insb
les
jnp
add
rorl
gs
mov
adc
jg
out
xor
lret
and
xchg
sbb
stc
cltd
jae
aad
sbb
sbb
insb
dec
adc
fidivrs
pop
fldpi
mov
lret
inc
cs
insl
sub
or
jp
sbb
xchg
jl
mov
inc
dec
push
cmpsl
fwait
adc
cmp
or
lods
xlat
mov
mov
dec
add
pop
out
push
sbb
fsubs
test
mov
imull
lock
cmpsl
xor
jecxz
fwait
ret
push
pushf
loopne
andl
sbb
cmp
sub
push
fsubr
out
push
movsl
pusha
addr16
fwait
enter
pop
idivl
xchg
popa
in
call
std
xlat
dec
test
inc
mov
pop
rcrl
pop
adc
dec
aaa
mov
into
jbe
decb
lods
inc
filds
out
imul
add
mov
inc
mov
sub
fsubrl
insb
loopne
imul
int
jno
fsubrs
addb
mov
sub
mov
adc
pop
and
mov
cmp
iret
cmp
loopne
out
es
cli
scas
sub
inc
in
movsl
pop
ja
mov
jne
xor
cmp
sub
jae
cmc
adc
pop
and
xor
stc
in
add
xor
into
or
gs
or
sbb
out
pop
cmp
loope
fdivrl
push
mov
into
push
in
stc
int3
pop
mov
loop
fbld
loop
stc
in
loopne
dec
loope
xor
sub
or
adc
insl
data16
jo
lods
jns
popa
daa
pop
pop
pusha
or
sub
inc
mov
cmp
mov
pop
imul
adc
xchg
pop
pop
lock
scas
imul
scas
inc
mov
fstp
and
les
test
repnz
les
ljmp
iret
push
xor
sbb
aam
fwait
adc
in
fcomps
dec
pop
push
cltd
add
xchg
pop
sbb
decl
xlat
mov
inc
arpl
fmull
push
fwait
int3
dec
push
lods
xchg
stos
call
pusha
jg
and
xchg
xor
mov
mov
sub
pushf
daa
xchg
and
movsb
lods
mov
into
push
popa
lret
aas
mov
insb
notl
cld
scas
int3
loop
shll
fnstsw
jl
out
add
xor
jmp
inc
sti
cmp
mov
loope
mov
jecxz
es
adc
inc
xchg
data16
push
dec
mov
sbb
lods
lods
test
push
jbe
inc
xchg
sbb
jmp
lea
fcomps
add
hlt
mov
dec
inc
in
jbe
and
mov
popf
lods
cmp
cli
xor
int3
aad
mov
test
loope
mov
pop
aas
inc
ss
jmp
pusha
pop
sub
pop
es
out
and
inc
mov
aaa
inc
in
fisubs
jno
pop
inc
push
mov
getsec
cmc
or
out
insl
gs
nop
loopne
cmc
and
xchg
pop
add
lock
xchg
add
jb
test
pusha
out
push
mov
fnstcw
xor
fistpl
lods
fsubp
cmpsb
cmp
outsl
leave
add
subl
and
loopne
add
push
mov
adcb
cmp
sbb
adc
jno
pop
adc
lret
outsl
icebp
cmp
ret
inc
cmp
adc
jl
jo
movsl
xchg
movsb
lock
jp
stos
xchg
outsb
push
mov
xchg
lahf
sub
and
xor
out
iret
jmpw
sbb
mov
mov
xchg
mov
push
inc
stc
dec
dec
out
jo
ret
mov
bound
push
ret
stc
xchg
movsl
cmp
in
pop
or
pop
jge
shl
and
in
pusha
pop
mov
ds
mov
jl
adc
add
in
fucomp
pop
syscall
add
and
mov
fidivrl
ror
ficompl
stos
pushf
mov
ficomps
sbb
ret
jmp
xchg
or
dec
popf
push
adc
mov
loop
and
test
je
lcall
arpl
out
aas
rcrl
pop
es
inc
add
add
xchg
and
loop
adc
outsl
popa
stos
xor
out
sbb
sub
loopne
push
clc
inc
lret
subl
mov
imul
sti
lods
adcl
nop
jnp
dec
dec
in
push
push
mov
sbb
cmp
jmp
jecxz
inc
js
pop
loope
xor
aaa
xor
xchg
add
jmp
dec
mov
cmpsl
mov
or
popf
fwait
movsb
test
inc
xlat
sbb
dec
mull
sbb
stc
insb
pop
mov
int3
jnp
notb
push
jecxz
subb
mov
mov
add
mov
jbe
ljmp
mov
bound
aad
push
movsb
adc
adc
jne
mov
cwtl
push
sub
mov
sbb
cmp
fwait
pop
cmp
sub
push
inc
sbb
jmp
pop
push
fsincos
test
mov
pop
jecxz
inc
out
xchg
outsb
mov
pop
nop
call
inc
mov
mov
xchg
pop
ljmp
push
loope
or
mov
nop
rol
mov
or
push
push
jmp
dec
jne
add
roll
call
push
mov
push
mov
popf
ja
mov
repnz
jbe
ja
pop
sub
bound
add
mov
sbb
mov
lret
rclb
aaa
push
sbb
and
jmp
push
ja
imul
stos
icebp
add
fnstsw
and
lods
xchg
and
cmp
ljmp
jge
pop
rcr
pop
mov
jge
add
cmp
insl
scas
paddusb
adc
iret
xchg
cmp
test
jle
and
sub
xor
jns
dec
lds
jle
jp
adc
fidivrs
push
dec
out
enter
inc
je
into
sub
cmpsl
repnz
rolb
test
mov
push
imul
sub
jno
xor
pop
enter
test
lret
scas
xchg
popf
lret
or
or
cmpb
test
mov
jmp
xchg
push
mov
jge
fisubrs
xchg
adc
out
push
adc
test
jge
pop
push
mov
pop
jmp
shlb
lds
push
inc
sub
outsl
cmp
mov
mov
lret
imul
xor
rep
orb
fsubr
sbb
jp
inc
xor
push
add
adc
inc
push
xchg
outsl
mov
jo
xchg
adc
loop
popa
xchg
xor
fs
push
push
xchg
inc
jg
mov
in
mov
lret
pop
dec
xchg
push
add
jge
int3
pop
adcb
dec
dec
xchg
sbb
or
sahf
test
mov
mov
add
mov
jmp
insl
negl
xor
insl
jecxz
jecxz
out
mov
fucomp
js
out
test
jl
push
xchg
aas
int3
push
popf
adc
shll
pop
pop
and
mov
aas
mov
ds
xchg
movsb
sti
clc
inc
push
popf
sbb
loope
jns
xchg
pusha
adc
xchg
mov
xor
sar
dec
aas
cmp
push
into
or
add
inc
das
icebp
push
push
xchg
jne
stos
pop
mov
lahf
xchg
ja
xchg
aam
xchg
mov
int3
and
test
mov
lcall
and
sti
and
leave
cld
shll
cwtl
inc
into
in
push
cmpsl
or
rclb
or
mov
daa
in
cld
sbb
jo
xchg
jns
jb
mov
nop
mov
out
adc
sub
cmp
push
mov
imul
stc
jle
sbb
popl
hlt
inc
rcrb
and
mov
xchg
icebp
fwait
out
into
outsl
inc
adc
test
adc
xchg
add
xchg
jecxz
or
std
fstpl
scas
adc
lcall
pop
bound
imul
mov
pop
imul
jo
push
pushf
push
mov
in
xor
xchg
sbb
push
jmp
or
cmpsb
test
inc
lods
and
jae
and
sub
jno
and
mov
xchg
setl
mov
sub
ficoml
jp
nop
out
call
pop
mov
mov
repnz
repz
addr16
test
cwtl
pop
imul
ljmp
pop
lret
push
cmp
cltd
out
arpl
inc
int
mov
and
fidivl
ljmp
add
clc
xchg
cwtl
out
push
cmp
mov
xor
mov
and
lods
add
int3
cltd
sbb
sub
adc
aaa
jo
loope
sub
lods
dec
cld
adc
jae
xorb
sbb
inc
cmpsl
shl
icebp
jb
dec
xor
fwait
push
test
into
mov
add
popf
lods
jnp
jno
mov
pop
and
pushf
enter
shl
push
adc
fisubl
push
fiadds
cmp
es
aam
adc
insl
add
in
in
adc
outsl
icebp
mov
add
pusha
or
pop
daa
fldpi
lods
fs
add
mov
enter
sti
rclb
call
movsb
mov
mov
cmp
pop
xchg
into
mov
arpl
or
sub
cmpsl
dec
mov
mov
push
ljmp
jno
cmp
loope
mov
cmp
es
dec
jo
pop
mov
mov
and
sar
mov
or
mov
or
pop
xchg
jg
out
mov
insb
mov
aas
out
xchg
mov
xor
movsl
hlt
nop
insb
push
mov
les
xchg
adc
mov
ss
popf
into
into
cmp
shrb
int
stos
fs
ficomps
aas
fwait
inc
push
mov
jb
pop
jg
or
fidivrl
popl
and
pop
ds
jecxz
lcall
or
enter
mov
jo
scas
pop
push
inc
inc
shlb
repz
mov
dec
ret
jl
mov
outsb
lret
jne
test
mov
xor
dec
sarb
or
xchg
out
notl
pop
mov
pop
dec
cmp
cltd
mov
jbe
pushf
mov
inc
jle
cmc
jb
clc
rorb
push
ljmp
addl
mov
rcrl
in
jle
inc
movsb
pushf
aas
test
jnp
dec
inc
popf
adc
xor
imul
scas
data16
lea
mov
sub
dec
movsb
daa
jle
mov
sbb
pop
cmp
mov
stos
leave
rorl
in
pop
cmc
and
shll
bound
fwait
add
xorl
jb
cmp
ret
sahf
out
xor
out
lds
cmp
cmpl
adc
into
or
dec
popf
jecxz
aaa
xchg
pushf
push
outsl
xor
or
xchg
adc
push
loope
cld
add
orb
loop
jle
sbb
jecxz
cmp
loope
divl
out
cmp
loop
maxps
dec
imul
lcall
push
or
cltd
push
pop
out
cmpsl
add
shlb
ds
insl
jmp
mov
fidivrl
loopne
cmpb
lock
rcrb
testb
sbb
das
loopne
lods
test
arpl
jne
fdivr
pop
or
and
ret
sub
lock
push
fisubl
and
loope
mov
adc
cmpsl
pushf
sbb
pop
stc
dec
sub
inc
cltd
adc
arpl
dec
fdivrl
cmp
icebp
ja
jg
push
ret
xchg
add
popf
inc
adc
dec
dec
xor
adc
scas
cmp
mov
mov
jne
xor
insl
mov
mov
cld
je
cmc
mov
inc
push
push
inc
push
dec
loope
adc
fdivrl
or
jbe
push
std
jnp
jbe
ss
pushf
add
jnp
test
ret
mov
sub
repnz
xlat
jbe
dec
jb
sub
xchg
adc
jle
pushf
shrb
lods
mov
je
rolb
bound
sub
xchg
fisttpl
sti
jl
ja
jmp
sub
xlat
aam
xor
lock
ficomps
mov
out
pushf
ds
jmp
push
and
lahf
scas
add
push
mov
ss
xchg
in
pop
loope
pop
and
fdivl
mov
xchg
outsl
xchg
fsubp
mov
push
fwait
adc
adc
jmp
pushf
adc
call
dec
or
push
xor
push
dec
pop
push
mov
mov
movsl
and
call
cmp
jecxz
js
push
mov
push
outsl
mov
sbb
cmp
pop
in
push
sub
dec
lcall
cmp
lods
inc
sti
les
bnd
or
mov
add
cmova
pop
push
and
lods
inc
fsubl
mov
cmpl
or
cmp
sbb
cwtl
lahf
sub
jb
nop
daa
mov
cmp
jecxz
mov
jecxz
jp
mov
inc
loopne
sbb
xor
daa
cmpsb
mov
ret
idivl
sbb
inc
out
pop
add
push
xchg
sbb
and
jecxz
pop
mov
xor
aas
fwait
leave
shll
outsb
xchg
ficoml
sbb
ja
xor
cmpsb
shrb
lods
or
jmp
movsb
ds
fistl
xor
fwait
cmpsb
mov
push
in
jp
ficompl
dec
scas
add
push
push
adc
lahf
sbb
fidivrs
les
mov
jo
aam
ret
add
sbb
movsb
inc
sbb
movsb
inc
repz
lret
pop
pusha
divl
cld
cmpsb
dec
fistl
mov
in
arpl
mov
mov
push
sarb
les
negb
jno
and
dec
and
jb
xchg
lods
loope
jmp
cmp
xor
cmp
aad
scas
test
inc
js
lods
das
xor
jo
sbb
sub
fisttpl
dec
jne
jbe
mov
nop
repz
frstpm(287
adc
clc
dec
into
cmp
icebp
movsl
xchg
xor
rcrl
dec
das
aas
aad
jle
cmp
addl
in
inc
xor
cmp
fcomps
cpuid
xchg
into
cmc
rclb
or
push
fisubl
pushf
mov
fcomip
es
mov
and
mov
sbb
add
movsl
jb
add
add
cli
add
mov
add
rcr
and
test
and
in
clc
mov
xchg
ret
cmp
shll
pop
or
mov
xchg
mov
insb
rorb
sub
add
pop
and
pop
lcall
int3
gs
insb
jne
and
jge
mov
cmp
jo
lods
mov
rcll
add
pop
out
or
jmp
orb
jbe
cmp
sub
cmp
lods
test
pop
lret
out
push
out
out
jne
cmp
cmpsl
xchg
daa
mov
dec
jmp
mov
cs
int3
xor
push
mov
jnp
adc
out
cmp
outsb
and
negl
mov
inc
cmp
jno,pt
push
mov
pop
mov
xlat
xchg
xor
js
into
jb
jno
push
sbb
insl
sub
scas
pop
negl
mov
testb
movsb
jg
push
shlb
jnp
lods
ja
faddl
pop
js
lods
push
ret
fs
sub
fldpi
out
xchg
cmp
hlt
out
fsubl
repnz
aam
out
add
dec
or
adcl
and
cmpsb
leave
int
sbb
cmp
addb
imul
or
pop
ret
mov
clc
cmp
roll
jne
cmpsb
and
js
mov
pushf
xor
cmpb
push
and
cli
enter
popl
out
sub
or
pop
jbe
pushf
xchg
jae
mov
sbb
push
fcompl
add
and
xor
stc
dec
sub
dec
dec
into
xchg
or
cmc
aas
gs
lahf
icebp
dec
sbb
shlb
repz
test
pusha
bound
pop
push
inc
mov
dec
lds
sti
fldcw
or
setle
ficompl
out
xchg
and
out
dec
ss
pop
push
int
daa
fisttpl
jg
ret
in
adc
xor
pop
push
jbe
popa
push
fadds
aas
mov
fnsave
scas
loope
lret
cli
xor
xchg
iret
daa
pop
xchg
xchg
xor
mov
mov
rcl
popf
adcb
lea
call
xor
jle
jg
xchg
mov
pop
jne
sub
jle
fcomps
dec
inc
test
inc
lds
cwtl
popl
mov
and
xchg
xchg
pop
fucomip
mov
dec
data16
in
out
lret
push
mov
cmc
inc
jae
iret
or
jge
jge
test
stos
lret
rol
jnp
lret
jp
fadd
mov
add
xchg
sub
pop
dec
lds
pop
subb
mov
fisubrl
push
pop
fbstp
sbbl
mov
outsl
in
in
loope
rcrl
ljmp
movsl
jg
ret
push
mov
clc
movsb
mov
push
mov
stos
test
inc
and
add
js
ss
nop
xchg
or
mov
adc
mov
mov
test
js
mov
mov
lret
scas
dec
fs
in
gs
xchg
add
mov
stos
in
push
aaa
testl
dec
and
jnp
sbb
cmpsl
fisttpl
inc
das
xor
shrl
dec
out
lret
dec
push
test
loope
sub
adcl
cmpsb
pop
addr16
outsl
arpl
outsl
add
dec
shl
mov
lods
out
into
lahf
xchg
push
test
fstps
mov
cmp
jbe
push
shlb
cs
pushf
sub
and
sbb
shll
xchg
scas
sahf
sub
je
loopne
and
inc
jle
cmp
sbb
insb
mov
mov
inc
mov
mov
icebp
fwait
test
jbe
sahf
push
push
sti
sub
mov
jge
jo
cmc
pop
or
add
shlb
jg
cs
dec
enter
jecxz
mov
mov
daa
jle
jmp
sub
out
rcl
pop
in
push
dec
or
push
jno
add
mov
cmpsl
rclb
or
int3
ja
in
inc
push
stos
lods
jl
pushl
jno
enter
cmp
mov
inc
xchg
and
push
jne
xchg
sbbl
ret
add
push
aam
sbbb
inc
or
pushf
in
xchg
inc
movups
dec
cmp
and
dec
lods
dec
sbb
xchg
add
daa
dec
out
pop
push
imul
lahf
sbb
lods
fcos
bound
ss
orl
fdivl
fwait
aaa
lds
jp
js
jns
jge
out
mov
push
repz
fdivr
or
add
test
dec
lcall
addl
jnp
xor
fucom
mov
pop
xchg
cwtl
mov
add
adc
mov
ds
fdivs
rclb
jae
jo
pop
mov
and
ds
fldcw
out
stc
mov
subl
dec
ds
dec
mov
rorl
imul
cmpsb
jle
sahf
jbe
mov
movsb
imul
arpl
cltd
repz
xchg
cmp
xchg
js
and
rcl
in
mov
aaa
jae
xlat
out
movsl
iret
sub
loop
lcall
inc
ja
mov
lock
rolb
mov
xor
jge
pop
push
test
and
mov
into
cmpsb
xchg
adc
icebp
mov
push
push
inc
mov
imull
and
cmp
scas
test
sbb
add
pusha
out
rcl
fidivrl
dec
rcrb
mov
dec
es
outsb
push
imul
ret
lret
sub
call
stos
cmp
fbstp
test
idivb
xchg
aad
ds
sbb
mov
mov
nop
mov
jne
push
push
pop
mov
and
pop
jb
inc
lds
or
pop
mov
das
adc
xchg
int3
stos
loopne
int3
lret
js
pop
pop
std
mov
icebp
dec
fimull
adc
jecxz
fistps
loope
cld
mov
cmp
dec
in
adc
push
sti
xchg
pop
mov
imul
iret
xchg
ret
jns
sbb
sbbl
xchg
push
aam
add
lods
xlat
pop
mov
popa
and
insl
adc
stos
sbb
adc
rorl
fimull
filds
or
ficompl
dec
inc
loope
add
xor
bound
data16
adc
xchg
stos
loop
repz
nop
xor
mov
xchg
das
in
aam
xchg
data16
xchg
xor
jne
fldt
ljmp
jo
pop
out
jbe
lds
cmp
xlat
xchg
aad
cmp
out
sub
dec
bound
pop
aas
lods
lret
out
das
mov
jmp
icebp
insb
push
push
add
mov
outsb
push
xchg
dec
jmp
push
data16
rclb
adc
into
hlt
mov
aas
fs
sub
mov
idivb
arpl
mov
mov
or
lods
lret
push
sbb
test
lock
sub
jne
bound
scas
inc
xchg
rcr
mov
mov
orb
add
ds
xor
aad
stos
cmpsl
jne
sub
jg
fdivr
sbb
xchg
testb
xchg
mov
cmp
xchg
pop
sti
sub
sbb
sub
fldcw
or
stc
push
mov
mov
bound
aas
cmpsb
pop
jns
jg,pt
fldl
int
mov
mov
lods
inc
popf
arpl
mov
jge
inc
lcall
stos
cld
aad
mov
loope
xchg
les
out
dec
push
outsb
add
pop
mov
lock
mov
inc
arpl
inc
call
movsb
pop
sub
fsubr
and
insb
aam
jl
orl
pop
xlat
jns
xor
aaa
dec
imul
sub
mov
fwait
mov
popa
sub
call
jmp
inc
addb
pop
mov
dec
add
lret
mov
inc
lret
push
mov
aad
sub
sbb
mov
loopne
aaa
mov
test
in
rolb
add
into
xlat
hlt
xchg
xor
scas
sahf
cmpsl
dec
repz
xor
test
inc
xor
jecxz
sub
dec
stos
mov
xor
inc
or
xor
xor
push
or
push
fwait
loopne
xchg
push
xchg
adc
push
cmc
cmpsb
mov
jnp
nop
stc
or
cld
push
testl
and
push
jnp
pop
mov
sub
or
inc
adc
clc
repz
sbb
das
fwait
push
mov
stos
adc
subb
lcall
sbb
shlb
cmp
daa
push
scas
jns
jbe
fwait
lcall
adc
stos
cmp
adc
xchg
in
add
repnz
std
mov
mov
mov
jle
sub
sti
lcall
add
jl
out
push
mov
scas
arpl
shll
mov
sub
out
sub
test
lods
dec
insb
add
shlb
div
and
data16
cmpb
jbe
xchg
dec
adc
inc
push
xchg
lea
sbb
mov
push
shll
scas
and
sbb
push
sti
mov
ja
aad
push
je
sbb
daa
std
cmp
jle
adc
adc
ficoml
loopne
roll
mov
mov
sbb
xchg
xchg
sbb
loope
sub
sub
in
push
cwtl
arpl
mov
adc
push
xchg
leave
cld
jge
xor
in
inc
mov
sub
mov
insb
imul
cs
inc
mov
sbb
daa
mov
jmp
daa
popa
xchg
mov
arpl
aaa
icebp
and
jg
mov
jae
add
in
adc
jns
mov
mov
cli
pop
flds
outsb
or
sbb
mov
jno
mov
cli
lea
in
inc
aad
popf
or
mov
sbb
stos
xchg
inc
xchg
in
jp
dec
insl
data16
push
icebp
int
iret
xchg
mov
out
dec
cmp
adc
xor
ss
push
dec
sub
pop
xor
xchg
push
aad
out
sub
hlt
rorl
arpl
dec
into
pop
fwait
sub
bnd
es
mov
lock
ds
ss
or
lcall
xor
jmp
in
sahf
dec
mov
fisubrl
imul
xchg
leave
mov
cmp
or
in
jae
aam
pop
in
mov
out
mov
or
pop
pusha
test
sarl
hlt
movsb
adc
das
in
fistps
inc
out
xor
mov
jle
pop
push
lret
lock
into
lods
pop
std
mov
ds
mov
and
ficomps
ret
mov
or
leave
out
mov
xor
jle
sub
pop
adc
pop
pop
jl
inc
inc
aaa
decb
loop
mov
xor
mov
jbe
outsl
pushw
pop
sub
sub
and
mov
cmp
jbe
addr16
aaa
aam
xchg
into
mov
sbb
insb
ret
lcall
or
repz
lods
mov
imul
repnz
cli
push
cwtl
mov
xchg
xlat
sbb
ficoml
stos
add
cmp
ds
mov
les
cmpsb
dec
push
mov
movsb
dec
xchg
push
mov
fldt
or
push
inc
stos
cmp
add
push
or
mov
jle
lods
rcr
inc
jp
or
daa
in
ds
jmp
aam
aas
push
mov
adc
pop
mov
inc
rolb
inc
fldenv
push
mov
js
jo
cmc
int3
iret
cmpsb
repnz
or
mull
mov
and
ret
or
mov
sub
rcrb
push
aaa
mov
xchg
or
mov
xchg
xchg
sbb
mov
dec
es
mov
js
ss
nop
les
enter
bnd
mov
out
cld
push
pop
rorb
in
dec
inc
push
pop
dec
aam
fldcw
and
rcr
or
popa
mov
rol
adc
mov
rcl
push
test
and
pop
add
xchg
fs
sbb
cltd
int
mov
mov
movsb
insl
mov
in
rcrl
xor
mov
pop
notl
push
xchg
mov
lahf
daa
daa
es
mov
shl
subb
and
cmp
mov
lret
pop
ucomiss
cmp
sbb
pusha
aaa
nop
shrb
repnz
xchg
push
push
xchg
loopne
into
out
adc
mov
pop
lret
cmp
sbb
xchg
stc
les
fnstsw
mov
inc
cld
mov
pop
movsl
test
cld
and
push
and
sub
sbb
scas
xor
jg
xchg
cmp
lea
shrb
mov
cmp
enter
cmp
ja
or
lret
out
cltd
xor
mov
call
ja
inc
push
cmp
clc
sti
daa
gs
cmp
mov
mov
lret
imul
xchg
dec
cmpsb
push
icebp
pop
ss
sbb
fcmovne
stc
push
fisttps
xor
in
mov
xor
push
xchg
mov
int3
add
or
daa
or
pop
mov
into
das
sti
adc
popa
pop
jge
mov
mov
mov
pusha
das
sahf
lcall
dec
nop
and
repz
test
mov
xor
movsl
rclb
popf
cld
frstor
mov
mov
xchg
xlat
ret
aad
xchg
add
mov
xchg
pushf
gs
and
and
cmpb
out
loop
xchg
ljmp
push
imul
cwtl
add
int
jg
ret
aad
dec
adc
mov
push
mov
mov
sbb
ja
mov
test
pop
pop
mov
stc
mov
push
es
sti
jge
push
cmpsl
cwtl
jl
jmp
out
subb
es
lcall
jne
jmp
int3
xlat
imul
pop
outsl
jno
test
insb
inc
in
push
pop
outsb
mov
add
pop
iret
mov
push
data16
push
push
je
jecxz
adc
adc
and
cmp
fwait
sub
les
pop
fisttps
adc
mov
inc
sub
mov
cmp
test
data16
repz
and
adc
imul
shl
xchg
out
in
out
lret
js
fmul
int3
xor
popf
xchg
lcall
lods
inc
dec
sbb
sbb
cmp
or
dec
cmpsb
pushf
out
pop
jl
stos
and
repnz
push
lock
jg
or
std
rcll
or
in
adc
and
jl
fcomps
andl
dec
mov
xor
mov
lock
push
jle
push
sub
sub
enter
cmp
xchg
inc
lock
aaa
test
jne
jge
stos
mov
mov
sbb
imul
notb
js
dec
std
negl
lret
dec
lods
mov
dec
aas
cltd
push
andl
fisubrs
cld
movsb
xchg
divb
push
dec
jmp
and
rorb
mov
in
test
les
push
out
jg
cmp
js
in
daa
lret
jne
daa
mov
call
push
inc
dec
inc
adc
add
mov
adc
push
cmp
push
fldt
scas
stos
and
pop
faddl
inc
in
jnp
popa
je
cld
loope
ret
lds
test
dec
aas
cli
hlt
pop
add
sub
inc
push
rolb
xlat
dec
pop
aam
fwait
clc
or
or
adc
xchg
cmp
add
in
cmp
cmp
jge
push
pop
ja
and
test
pop
mov
mov
inc
jmp
pop
and
xor
mov
push
cmpsb
jns
mov
mov
adc
and
loop
pop
ss
jge
pop
push
add
or
fnstcw
sub
aad
sbb
inc
leave
in
mov
movsl
rol
xchg
test
jns
jge
add
mov
adc
mov
dec
nop
ffreep
lret
and
push
jne
jecxz
cwtl
and
je
fnsave
inc
or
cltd
jle
in
mov
xor
xor
cmpsl
push
pop
fnstcw
jmp
stos
ljmp
loopne
inc
in
mov
add
imul
mov
inc
add
pop
jbe
les
xchg
add
push
mov
mov
fs
add
mov
mov
mov
cli
cmp
mov
or
ds
and
test
nop
add
inc
out
sbb
js
push
stc
fmulp
mov
jmp
loop
mov
xchg
sarl
out
sub
inc
inc
mov
scas
jle
outsl
ret
nop
insl
fcmovne
insl
add
adc
pop
and
rorl
dec
mov
cmpsl
lods
jnp
in
int
ljmp
dec
outsb
jecxz
xchg
sarl
cmpsb
mov
push
or
add
sbb
jmp
jo
jae
add
add
mov
pop
sbb
cmp
push
jp
xor
fwait
out
adc
pop
mov
push
loop
test
sub
cmp
inc
push
test
ret
call
hlt
cli
insb
lock
pushl
xchg
and
test
test
fimull
adc
dec
cmp
popa
insb
addr16
fnstsw
cmp
add
movsl
or
push
je
fdivrp
push
pop
mov
jae
rcr
pop
add
lods
cmpsb
xor
push
xor
enter
mov
or
jno
xchg
cli
imull
popf
mov
mov
push
mov
adc
in
mov
fistpl
rolb
addb
jg
xchg
out
mov
dec
cmc
and
hlt
idivb
mov
pop
sub
add
xlat
cmpsl
idivl
cwtl
dec
movsl
jns
and
xorl
xor
pop
arpl
hlt
cld
push
lret
or
push
adc
mov
scas
movsb
xchg
bound
popf
and
adcb
sbb
cmp
and
test
mov
xor
adc
cmp
xor
rcl
mov
jno
sbb
movsl
out
cmpsb
lods
cmp
mov
fildll
ja
movl
xor
test
andb
ror
fstpl
and
aam
sub
add
enter
jge
mov
shll
sbb
cli
in
fidivs
and
adc
push
insl
pop
stos
adc
adc
add
dec
add
ljmp
cld
cmp
adc
inc
sbb
cmpsl
sbb
and
xlat
aas
and
sub
jle
mov
sub
adc
sbbl
mov
xor
pop
mov
testl
mov
push
push
sub
bound
mov
sarb
mov
sbb
adc
lcall
add
add
sbb
adc
pop
jecxz
push
movsl
cmp
and
andl
xor
xor
mov
or
loopne
icebp
xchg
xchg
lock
cli
testb
mov
push
popf
xchg
hlt
out
xchg
test
sub
inc
adcl
push
fnstsw
sahf
inc
call
jg
or
fldcw
cmp
rcl
add
pandn
mov
ficompl
aaa
pushf
je
xor
sbb
jl
mov
xchg
lret
fwait
shrb
mov
mov
cs
xchg
cmc
and
xchg
cmp
and
pop
xchg
movsb
jge
js
stos
test
and
pop
pusha
sarb
xor
ret
popf
mov
ja
pop
xchg
out
inc
test
stos
hlt
cmp
add
int
out
cld
mov
sub
rorb
inc
lods
jo
xchg
and
pop
in
or
js
push
fwait
push
into
sbb
adc
xchg
push
test
cli
sub
add
fidivrl
push
xchg
push
and
aam
fcomps
ljmp
cwtl
xor
cli
gs
xchg
inc
push
movl
inc
pop
inc
cmp
repnz
sbb
pop
push
and
mov
jp
addr16
cmc
push
inc
lds
cld
sbb
cmp
and
push
sbb
test
inc
and
xor
and
mov
daa
cld
enter
or
movsl
in
sar
inc
or
inc
and
mov
xchg
std
push
jle
mov
test
out
and
into
out
cmp
cmp
xchg
push
call
fdivrl
ss
outsb
mov
lods
sbb
sub
lods
andb
cli
mov
pop
sarb
fsubl
mov
arpl
and
pop
push
cmpsb
sub
jns
fcmovbe
or
lcall
test
stos
cmpsl
lret
ljmp
int3
and
pop
adc
lea
mov
dec
ja
mov
mov
cmp
and
mov
in
ja
dec
lock
nop
out
sub
xchg
xor
push
gs
adc
inc
and
sahf
lock
je
pop
add
fnstsw
xchg
loop
add
jae
lahf
testb
int3
mov
add
sbb
std
bound
inc
jmp
ret
out
sbb
idivb
sub
dec
or
mov
fmul
js
or
jb
out
push
sbb
arpl
in
sub
cmp
cmp
mov
xor
xchg
sbb
arpl
hlt
inc
mov
fistl
stos
xchg
ficoms
pop
aaa
test
repnz
mov
nop
insb
mov
mov
pop
sbb
sub
mov
xor
jo
idivb
sub
call
lds
sbb
mov
xor
jge
lahf
inc
outsb
mov
je
into
mov
fcoms
scas
out
test
jmp
mov
mov
cmp
cs
popf
lret
es
and
pop
pop
cmp
cmpsl
loope
mov
sub
adc
rcr
repz
mov
popa
into
sub
and
cmp
test
cld
ljmp
add
negl
push
dec
scas
dec
sbb
dec
add
leave
push
jns
jg
inc
push
inc
notl
addr16
ja
push
mov
nop
jmp
cld
gs
mov
pop
test
push
arpl
sbb
mov
into
fimull
stc
leave
lsl
sub
add
stos
xchg
xchg
sub
and
fstl
xor
outsl
xor
enter
push
push
addl
lret
pop
and
add
dec
rcrl
and
mov
xor
pop
bound
and
add
or
mov
push
and
mov
pusha
insb
xor
mov
mov
fisubl
ss
inc
inc
sub
ret
mov
incb
orl
or
mov
sub
pop
or
enter
nop
int3
jns
int3
or
sub
rorl
cmpsl
in
in
idivl
or
xchg
mov
mov
cmp
dec
dec
stos
scas
outsb
repnz
pusha
push
or
lea
jnp
jae
ret
fcmovb
add
sbb
inc
dec
leave
mov
jbe
add
xor
jle
jo
fldcw
fnstcw
loope
in
lods
mov
mov
mov
cmp
push
bound
pop
ja
lods
mov
loopne
and
mov
jae
dec
sub
adc
scas
test
xchg
mov
pavgb
cmpsb
es
insb
in
adc
xor
push
arpl
mov
rol
jnp
cmp
insb
sbb
sub
inc
sbb
inc
iret
jno
sub
sub
add
xor
loopne
dec
push
cli
in
ljmp
lahf
cs
pop
movsb
arpl
in
filds
dec
mov
push
out
in
ds
jl
lret
repnz
stos
jbe
pop
xchg
jg
cmp
adc
mov
andl
pop
es
mov
add
imul
in
fldenv
sbb
push
mov
fwait
pop
adc
fisubl
in
push
in
sbb
out
push
dec
ljmp
mov
dec
loope
sub
or
mov
das
push
in
xlat
sub
mov
loope
rclb
insb
lock
outsl
popf
fcomps
gs
mov
stc
ja
sbb
mov
mov
push
enter
cmp
in
jl
push
xchg
sub
je
jns
int
or
or
call
and
push
popa
mov
add
rclb
jl
addr16
stc
imul
pusha
xchg
mov
pushw
inc
xchg
int
push
dec
cltd
rcl
movsb
xor
das
and
mov
out
and
test
out
or
mov
addl
mov
mov
adc
outsl
movsb
inc
cltd
jae
mov
lahf
push
pop
mov
cli
mov
test
pop
stc
std
adc
lcall
js
inc
sbb
dec
mov
xchg
inc
test
sub
cmc
cmp
dec
mov
push
pop
pop
xlat
pop
cwtl
sbb
xor
adc
mov
enter
sbb
inc
xor
mov
adc
sub
popf
cltd
xchg
xchg
sahf
or
out
mov
lods
cmpsl
mov
idiv
in
pop
inc
inc
mov
lret
cmp
repnz
mov
mov
les
out
inc
inc
imulb
cmp
xor
scas
test
mov
addr16
imul
mov
sub
adc
cmpsb
lahf
mov
loopne
ficoml
xor
outsb
adc
cmp
jmp
pop
cld
fs
cwtl
imul
xor
xorl
cmp
imul
jae
loopne
sub
dec
lcall
dec
movsb
cmp
mov
xor
in
insl
mov
clc
out
sbb
inc
mov
cmp
das
pop
jae
es
mov
hlt
push
inc
mov
int3
aam
outsb
jmp
lahf
inc
mov
sbb
xchg
sbb
sub
aaa
xchg
lret
sub
or
xlat
dec
inc
push
xchg
mov
mov
push
mov
fimuls
jae
sbb
scas
sbb
fincstp
fwait
repnz
rorb
insl
pop
xor
test
adc
pop
push
jae
popf
fcomps
jecxz
in
mov
mov
pop
jno
jns
ljmp
mov
scas
inc
outsl
push
push
xor
jge
xor
inc
cmp
mov
pop
clc
adc
sbb
js
ja
add
bound
daa
aaa
mov
lock
or
repz
mov
xchg
aad
mov
movsl
dec
in
add
das
adc
mov
xor
ljmp
mov
jo
icebp
adc
inc
pop
popa
test
push
scas
sti
mov
mov
pop
rol
stc
mov
addr16
inc
lods
and
sbb
mov
xchg
mov
mov
push
cmpsl
mov
dec
addl
ret
mov
cmp
and
adc
loope
lods
adc
dec
and
jbe
fwait
mov
mov
shll
icebp
pop
aas
inc
jl
addl
test
xchg
movsb
add
loopne
dec
cmpsb
popa
push
sbb
cmp
fstps
adc
test
adc
fsubrl
aad
mov
and
jmp
call
pop
cs
pop
subl
add
cmp
nop
cmp
and
movsl
xor
jb
cmp
ficompl
in
aaa
or
movsl
pushf
loop
push
xchg
mov
dec
dec
push
arpl
or
imul
and
adc
mov
push
test
movsb
cmp
cmp
cltd
xchg
jg
not
pop
pop
mov
cmp
cmp
pop
inc
inc
mov
icebp
add
mov
js
pop
pusha
xchg
or
loop
outsl
dec
jecxz
in
adc
fidivs
sub
push
imul
int3
inc
nop
cmp
jmp
shrb
into
lds
mov
xchg
sahf
or
aaa
pushf
mov
sub
in
daa
push
jle
mov
lods
loopne
ds
daa
adc
out
mov
jmp
xor
add
or
ss
add
enter
cmp
ljmp
js
out
adc
adc
jge
in
push
scas
adc
cmp
mov
adc
icebp
mov
test
sub
icebp
mov
cmpsb
inc
cmp
sti
cmpsb
bound
lcall
inc
sahf
mov
jns
mov
add
cmp
jge
rolb
dec
cmp
mov
inc
xor
or
sbb
xor
and
iret
sbb
add
cld
dec
sti
out
sub
outsl
add
out
in
decl
sbbl
push
jnp
shrl
or
in
inc
and
push
ds
add
shrb
in
lods
aas
dec
xor
jno
fs
push
call
add
loop
fcmovnbe
cmp
cmp
jl
inc
xchg
sbb
shll
movsb
lret
cs
push
outsb
pop
adc
cmpl
push
pop
inc
and
ret
mov
xor
mov
adc
jp
mov
dec
dec
jge
fistl
jo
je
add
and
icebp
mov
xor
push
jge
ret
adc
mov
popa
lds
add
shrl
mov
inc
int3
cmc
xchg
out
lret
or
adc
ret
mov
out
popl
cli
mov
loope
lods
notl
aam
stc
sbb
push
out
or
js
adc
mov
xor
out
jecxz
cld
pushl
jbe
ja
xchg
push
imul
add
aaa
mov
or
adc
xchg
shrl
bswap
mov
xor
mov
cltd
sbb
icebp
repnz
lea
xchg
lcall
push
xor
jno
mov
mov
xchg
in
xchg
fs
add
stos
xchg
jp
out
ljmp
push
mov
lret
lret
in
into
sub
mov
bound
mov
push
add
adc
inc
or
xchg
push
fldcw
sub
jp
sbb
adc
jecxz
xchg
jmp
mov
sbb
cmp
cmpl
jne
addr16
xchg
or
das
xlat
inc
in
test
fidivrl
loop
adc
outsb
lds
mov
fs
xor
stos
dec
sbb
xor
stos
rcl
cwtl
pop
lahf
push
jmp
pop
fidivl
lahf
mov
pop
rcr
aad
push
stos
cmp
popf
inc
je
xchg
mov
dec
lret
inc
shlb
roll
mov
inc
jmp
movsl
xor
call
ljmp
push
out
nop
movsb
xchg
insl
fnsave
es
fcoms
push
sub
shll
dec
loop
push
addr16
in
jno
mov
jle
xor
aaa
andb
and
lock
push
mov
test
in
popf
inc
neg
pop
ret
push
negb
mov
mov
pop
xor
sub
push
pusha
mov
je
adc
push
jo
rorl
mov
add
push
shrb
roll
dec
and
sub
js
rcr
pusha
push
pop
dec
xacquire
push
les
mov
ret
cmc
das
sarb
jmp
add
inc
mov
popa
test
cmp
clc
test
xor
test
lret
daa
aas
jle
out
dec
cmp
and
cwtl
and
push
or
push
mov
adcl
adc
jecxz
adc
into
add
xlat
xchg
pop
jo
pop
jmp
out
push
insb
xor
mov
ljmp
cmc
push
mov
out
ss
cmp
mov
and
aam
adc
lods
fidivrl
adc
mov
sti
push
pop
pop
xchg
push
and
xchg
xchg
das
jbe
mov
add
sbb
mov
adc
loop
xlat
dec
dec
xchg
jae
inc
sub
or
jbe
dec
roll
jne
nop
addr16
mov
repnz
xchg
xchg
inc
daa
stc
sbbb
xor
lret
cmp
sub
sbb
lods
outsl
mov
sarb
test
in
les
push
outsl
repz
aad
mov
inc
jae
repnz
xor
pop
je
and
movsl
inc
jg
add
add
enter
jle
ret
sbb
cwtl
ljmp
mov
inc
jmp
dec
and
hlt
leave
addr16
add
fnstsw
and
std
sub
std
xor
push
jae
push
aaa
dec
loopne
cmp
je
hlt
mov
mov
push
sub
inc
aad
mov
jb
jecxz
add
dec
into
cli
decl
or
xchg
in
jp
mov
inc
add
add
sbb
inc
sbb
fiaddl
cli
jbe
push
push
xor
pop
xchg
xchg
and
pop
lcall
pop
and
push
test
dec
enter
jns
pop
pop
cmpl
cmp
jbe
ret
test
cmp
addr16
ja
and
cmpsb
cmpsb
in
push
dec
and
mov
lods
add
cmc
dec
int
jno
jge
add
add
sbb
ss
xchg
pop
pop
xor
fdivr
insb
dec
sbb
popa
jo
je
into
pushf
mov
pushf
push
jmp
mov
cmp
mov
inc
mov
xchg
lret
jg
add
inc
adcl
lahf
xchg
cmc
mov
outsb
adc
pop
mulb
lods
je
je
xor
filds
outsl
jbe
lcall
mov
outsb
xchg
mov
insb
sub
pop
movsl
addr16
lahf
leave
jb
xchg
popf
clc
popl
mov
aaa
bound
add
mov
arpl
adc
xlat
push
xchg
push
data16
jg
cli
push
sub
ret
lahf
scas
sete
imul
or
lea
dec
test
scas
pop
push
cmp
adc
test
push
adc
jbe
ds
push
and
pop
push
addr16
ret
push
fisubs
aas
or
or
idivb
dec
cmp
stc
sub
ss
jge
jnp
mov
or
mov
lods
push
in
daa
sub
push
iret
jae
repz
fstpt
sti
sbb
lds
ja
cld
push
pop
cmpsl
jg
push
pop
sbb
mov
lret
popa
mov
dec
pop
das
xor
xchg
inc
push
out
or
dec
fcompl
jp
loope
mov
orl
adc
test
fmuls
xchg
repnz
sub
dec
adc
repnz
arpl
jns
xchg
pop
lods
mov
ljmp
testb
and
lcall
pop
add
cmc
out
pushf
and
jecxz
test
pop
inc
xchg
add
not
bound
daa
push
dec
cld
test
xor
test
mov
and
sub
jl
cs
or
jbe
mov
pop
push
cld
lret
sbb
xchg
outsl
inc
xchg
fstpl
push
or
out
sub
shll
dec
cmp
test
sub
pavgb
or
outsb
punpcklbw
movsb
xchg
mov
mov
jae
xchg
xchg
into
inc
xor
xchg
pop
cmpsl
jnp
hlt
mov
in
and
pop
pushf
lret
test
push
addr16
lock
fdivrl
mov
sub
test
mov
jno
aas
sbb
push
push
adc
and
jne
mov
and
shrb
in
ljmp
test
ret
popa
cwtl
xchg
adc
enter
scas
aaa
out
insl
xor
stos
imul
sbb
ljmp
jecxz
mov
div
lahf
les
decb
mov
fsubs
stc
adc
sub
scas
jb
lock
fsubl
insl
mov
adc
sbb
add
fidivrl
jp
inc
and
jnp
aad
outsb
in
jl,pn
ret
ljmp
adc
mov
dec
clc
and
pop
mov
dec
lds
es
or
xor
xchg
cli
xor
mov
xchg
mov
jp
addr16
stos
int
dec
adc
mov
hlt
fadd
aad
add
roll
pop
jae
lcall
xor
xchg
add
mov
shrl
jne
xor
push
imul
mov
fs
push
inc
mov
mov
xor
scas
sbbl
pop
mov
or
push
jae
cld
jg
push
push
psubd
xchg
mov
push
jmp
bound
inc
xor
push
std
cmp
inc
xor
movsl
outsb
lods
mov
or
pusha
pop
out
mov
or
push
int
or
jp
push
xor
out
xor
and
pop
arpl
mov
xor
cmp
pusha
sub
loop
mov
dec
xor
loopne
sar
mov
or
les
scas
std
mov
mov
rorl
cmp
mov
cwtl
jmp
push
cmp
pop
xchg
les
dec
cwtl
fisubrs
aam
movsb
ja
mov
cmpsl
jae
pop
pushf
jbe
cltd
cmp
push
scas
repnz
ja
lea
mov
push
add
in
lret
ror
pop
push
test
insl
dec
into
mov
roll
mov
mov
inc
mov
shl
nop
inc
adc
aas
popa
enter
cltd
lods
add
push
scas
aaa
and
inc
lods
mov
xchg
mov
scas
outsb
pop
mov
add
loope
in
fiaddl
insb
notl
fnstenv
add
mov
loop
imul
sbb
sub
or
lret
repz
imul
adc
inc
shr
jae
adc
push
xchg
mov
pop
aad
xchg
mov
adc
test
in
and
lcall
cli
dec
in
pop
lds
sbb
decb
adc
lods
xor
add
pop
sarb
adc
jbe
int
and
sub
in
inc
outsl
mull
push
add
icebp
notb
outsl
or
jmp
pop
out
lock
push
dec
mov
mov
sub
mov
sbb
loopne
add
push
mov
out
xchg
mov
lret
xchg
dec
mov
fdivrs
cmc
addr16
pop
sahf
ret
nop
orl
pop
iret
out
adc
sahf
cmpsl
push
pop
cmp
or
jp
cltd
call
repz
into
shll
cmp
mov
icebp
inc
mov
cmp
mov
xchg
sub
and
fdivs
test
mov
sbb
loope
push
add
ret
aaa
insl
ss
xchg
frstor
cmc
loopne
xor
insl
dec
mov
ljmp
frstor
sub
stos
lock
mov
fldl2t
movsl
push
mulb
out
xor
jl
lock
xchg
or
movsl
or
xor
xor
sbb
mov
xchg
inc
mov
add
dec
mov
add
push
add
jae
pop
push
pop
std
data16
out
push
mov
outsl
jle
cltd
mov
imul
pop
jo
or
add
mov
xchg
push
mov
pop
or
inc
adc
mov
jp
fwait
out
jg
dec
add
ss
add
cmc
ljmp
int3
pushf
push
xchg
ret
sbb
sbb
add
pop
cmp
fildl
add
adc
popa
sbb
int3
jp
adc
and
iret
out
cmpsl
xchg
das
xor
outsb
js
mov
mov
mov
dec
inc
aaa
adc
lods
cmpb
mov
ja
sbb
cltd
cmp
xor
mov
imul
scas
xchg
lret
mov
shll
movsl
cwtl
xchg
sub
mov
mov
push
shlb
aad
jmp
sti
inc
std
push
mov
jmp
cmp
ret
imul
inc
or
call
in
aas
pop
lods
pop
stc
faddl
sub
mov
fcomp
add
xor
mov
jno
push
shll
add
cmp
sti
pop
inc
cmp
bound
cltd
fwait
xor
and
inc
mov
cltd
ljmp
hlt
fisttpll
mov
sub
adc
or
lock
out
mov
push
mov
movsl
mov
push
popa
mov
mov
inc
inc
dec
int
inc
ja
push
pushf
mov
fidivrs
jb
cld
int3
loope
pop
jecxz
cmp
outsb
or
repz
mov
nop
mov
xchg
push
insl
stos
out
and
inc
repz
or
jae
push
lcall
xchg
fsub
fcoml
cmp
test
add
and
mov
cltd
mov
or
cli
or
out
pushf
dec
cld
lods
cmpb
mov
repnz
xchg
stos
jecxz
mov
push
pop
dec
stc
mov
outsl
mov
mov
outsl
popf
ja
pop
push
test
xor
pop
mov
and
loopne
data16
inc
enter
sbb
cli
xchg
clc
decb
popf
sub
iret
aas
arpl
pop
dec
mov
jle
std
hlt
daa
daa
xor
out
daa
test
cmpsl
adc
les
pusha
mov
push
jg
daa
arpl
pop
outsl
xor
pusha
inc
aad
fucomip
mov
ljmp
inc
out
mov
cltd
add
jp,pn
sbb
shlb
mov
sbb
mov
stos
in
pop
rolb
cmp
fdivl
mov
adc
lret
rolb
repnz
inc
or
mov
xor
jns
scas
lea
pop
push
popa
mov
bound
push
and
xor
rclb
test
movsl
inc
pop
stos
cmp
mov
lock
mov
mov
lods
dec
pop
mov
pusha
in
cmp
mov
xor
xchg
dec
xor
sbb
sbb
pop
or
arpl
ret
nop
add
jle
das
mov
cmp
or
jmp
shl
test
fimull
mov
shrl
jae
lahf
call
push
push
fisttpl
push
movsb
test
or
xchg
inc
fidivs
pushf
push
iret
pop
push
mov
pop
inc
shll
mov
jecxz
rcrb
repnz
sbb
or
lea
cmp
pop
xor
jge
xchg
and
cld
cmp
loopne
xor
xor
cmp
add
xchg
mov
mov
addb
stos
pop
frstor
fisttpl
or
inc
push
and
mov
clc
cli
pop
int
bound
addr16
cmp
test
mov
push
in
lahf
cmpsl
cli
mov
mov
push
or
inc
push
sub
push
repz
fwait
insl
test
testl
xchg
aam
fucom
orl
cmpsl
je
pop
fnsave
pop
xchg
mov
mov
cmp
or
fdivl
sahf
sub
and
sbb
ljmp
cmp
loopne
mov
xchg
fs
sub
ds
cs
pop
sahf
jo
sbb
adc
push
enter
out
mov
loope
aam
lcall
sub
or
jg
jns
mov
xchg
mov
mov
jno
aam
mov
stc
movups
fildl
cmpsl
push
xor
sub
mov
rcrb
mov
adc
mov
add
loopne
add
cmpsb
adc
sbb
ret
jb
dec
or
jbe
xchg
shll
mov
lea
sahf
sbb
andl
and
mov
popl
adc
mov
mov
in
xchg
sbb
cmc
inc
pop
std
frstor
inc
enter
cmp
das
jge
xor
popa
jb
xchg
arpl
iret
add
aaa
inc
push
or
lret
or
sbb
adc
xor
daa
sub
add
dec
adc
outsl
in
test
pop
sub
pushf
xor
je
xchg
mov
xchg
testb
sbb
push
int
scas
out
test
std
aaa
jg
scas
dec
dec
inc
xlat
sbb
fidivs
mov
pop
repz
ss
nop
repnz
notb
and
outsl
mov
fisubl
push
clc
leave
out
fnstcw
adc
je
mov
repz
shl
inc
jo
clc
mov
cmp
or
fiaddl
xor
jl
dec
jg
das
icebp
inc
jmp
mov
xor
addr16
mov
scas
out
fsubrl
fdivl
xchg
push
mov
push
pop
xor
std
popa
stos
sub
loopne
adc
sahf
mov
lock
inc
jbe
test
movsb
inc
adc
add
repnz
fcompl
aas
cltd
fstpt
push
js
sbb
in
movsb
dec
push
inc
fistl
push
cld
jecxz
pop
int
scas
sahf
jl
sbb
ret
faddl
ds
cwtl
push
je
mov
sti
mov
stos
mov
daa
jl
adc
jo
adc
ret
insb
scas
adc
jg
sub
test
out
adc
faddl
inc
shlb
inc
push
lcall
shll
shll
push
mov
mov
add
xchg
pop
xor
mov
pop
lods
stos
add
lds
inc
mov
inc
gs
ret
in
xor
xchg
xchg
test
loop
push
dec
leave
lahf
fwait
bound
out
stc
xchg
jp
add
sbb
and
stos
mov
mov
test
add
inc
mov
int3
lods
sub
sub
jbe
in
push
icebp
add
push
jecxz
rorb
test
inc
in
inc
mov
add
leave
jns
test
lods
xchg
inc
mov
leave
orb
jb
sahf
mov
push
jl
jno
dec
adc
push
scas
cli
pop
add
jle
mov
xorl
mov
mov
into
mov
das
jns
xor
pop
push
cmp
xchg
insb
out
mov
mov
into
mov
hlt
xchg
mov
mov
jnp
mov
pop
cli
outsb
mov
outsb
outsl
add
aas
orb
rclb
cmp
fbstp
add
mov
mov
jmp
push
pop
xchg
mov
push
scas
fs
pusha
cmc
in
stc
dec
inc
or
mov
sub
xor
imul
ret
shlb
push
fistps
push
das
sbb
lods
or
aam
push
pop
repz
mov
icebp
dec
lock
jl
inc
add
das
add
adc
rcl
sbb
pop
jl
js
movsl
inc
loopne
cmc
cli
dec
push
fcom
sub
movsl
cld
inc
cmp
xchg
jno
adc
xchg
fwait
mov
negl
repz
mov
bsr
lods
nop
bound
pop
fstps
stc
dec
gs
jmp
les
movsb
push
insb
cs
out
pop
aad
out
bound
cltd
sarb
lods
jno
dec
pop
cwtl
push
in
xchg
rcr
popa
xor
sahf
cltd
sub
insl
pop
stos
lret
lods
les
cmpsl
jge
inc
xchg
pop
int3
addl
stc
mov
sbb
movsb
inc
stos
or
jnp
cmpsb
out
ja
daa
mov
fisttps
jl
inc
xchg
xchg
bsr
fsubs
sub
test
and
fists
loopne
fidivl
jle
movsl
andl
push
sbb
jg
xchg
aaa
fs
jp
or
call
test
mov
clc
int3
lret
jmp
pop
push
cmpsb
leave
sub
xor
cmp
lret
xchg
popa
push
pop
add
ret
lods
inc
ficoms
mov
pop
test
scas
test
sub
inc
lret
loop
inc
iret
mov
push
sub
adc
imul
fs
inc
loope
dec
jae
sub
in
xor
adc
mov
inc
dec
call
add
test
rep
gs
jle
jne
nop
or
mov
sbb
pop
sti
push
shll
lahf
sbb
lods
sub
xor
push
jnp
inc
imull
push
push
mov
test
sub
and
mov
mov
mov
inc
sbb
inc
out
ret
mov
notb
mov
add
test
out
movsl
inc
mov
add
sub
sbb
wrmsr
cmp
icebp
popf
xchg
xor
push
adc
pop
cmp
mov
mov
mov
inc
inc
cwtl
pop
jnp
push
out
xchg
les
sub
xchg
xor
jl
add
popa
ss
pop
popf
cmpsb
pop
pusha
js
fisubrl
fcompl
jbe
imul
jmp
push
cmp
cmpsl
ret
xlat
sti
and
inc
adc
fs
mov
jns
or
movsl
outsb
rcl
push
push
or
jae
jae
dec
or
xor
in
and
fistl
xor
adc
jnp
mov
jmp
dec
insb
pop
and
flds
xor
sub
loop
lcall
mov
pop
and
mov
das
xor
incl
sarl
mov
inc
rcrb
testl
pop
es
push
cmp
negl
push
dec
push
sub
sbb
cmp
xor
out
inc
and
lock
stos
sbb
sbb
jo
push
pop
xchg
in
pop
repz
sub
cmp
mov
enter
adc
jl
loop
mov
push
push
dec
mov
sbbl
or
push
outsl
cmp
and
out
pop
xchg
or
mov
and
xor
xor
cmpsl
lcall
dec
push
sahf
or
rclb
lcall
in
mov
add
aaa
sub
popa
rolb
jmp
and
cltd
je
fstl
out
lds
loopne
jnp
insb
jnp
xchg
cmp
imul
scas
outsl
pop
add
loope
into
dec
dec
fs
cmp
pop
clc
mov
ds
outsb
xor
out
cmp
pop
icebp
fisubs
jp
cmp
mov
jb,pn
outsl
sub
pop
add
dec
xchg
jp
lcall
sbb
pop
push
ds
xor
mov
sti
int
add
jb
sbb
aaa
inc
je
fcmovb
push
shll
bswap
mov
shrb
or
mov
fsubrs
xor
and
int3
test
pop
out
jnp
das
jecxz
stos
sbb
mov
lds
pushf
push
push
sub
jb
out
movmskps
or
push
cmpsl
dec
lock
les
or
scas
rclb
sbb
push
mov
jg
scas
and
repz
mov
insb
mov
loop
aad
scas
and
repnz
cmpsb
xchg
outsl
js
adc
cmpsl
shr
jmp
icebp
xor
hlt
xchg
aas
pop
dec
in
std
aas
roll
sahf
fstpl
fisttpl
cs
out
xchg
out
lods
faddl
repz
fisubs
mov
gs
adc
imul
pusha
mov
cli
jl
shl
cld
or
call
rclb
scas
xchg
pop
rorl
adc
test
enter
or
pop
sub
subb
insb
lods
push
mov
xor
das
movsl
mov
dec
sbb
lea
sub
stc
shl
jge
sbb
mov
sub
inc
out
mov
push
sahf
mov
lea
dec
leave
aas
push
testb
xor
cwtl
add
arpl
aaa
push
sbb
sbb
mov
xchg
dec
xchg
lea
fistps
xor
mov
pushf
daa
ljmp
xchg
dec
fimuls
xchg
mov
lret
xor
dec
add
fdivrl
sbb
mov
and
inc
inc
jecxz
or
pop
test
jmp
cwtl
lahf
xchg
pop
rcl
pop
jne
inc
sbb
lock
jae
ja
icebp
and
cmp
pop
add
jo
cmp
mov
cwtl
nop
xor
dec
inc
push
sar
data16
in
pop
mov
add
into
call
clc
xor
iret
push
pop
or
stc
lods
cmp
mov
cmp
repz
jge
in
mov
cmpsb
jmp
mov
lea
jae
scas
xor
imul
dec
fldenv
dec
imul
cmp
lret
lea
mov
repnz
dec
jp
pop
insb
dec
pop
or
pushf
mov
jle
repnz
xor
sbb
push
xor
xchg
les
movsl
stos
sub
loope
dec
inc
into
push
fnsave
ljmp
aaa
cmp
inc
ja
scas
les
in
inc
sub
sub
jl
inc
in
dec
mov
sub
loopne
bound
lahf
pop
xlat
adc
stos
mov
addr16
data16
sbb
mov
mov
mov
dec
data16
popa
aas
inc
ret
das
mov
ret
inc
aas
scas
stos
add
xor
popa
sub
aas
pop
addb
int3
and
out
fimull
push
sbb
daa
cmp
mov
push
orb
rolb
or
lds
fdivl
lods
sub
repnz
hlt
or
inc
inc
nop
icebp
jnp
push
fwait
fisubl
int3
std
in
dec
add
push
ljmp
stos
push
out
cli
xchg
xchg
jne
cmp
xchg
out
je
rcrl
lret
testl
nop
push
mov
das
popa
popa
jmp
xchg
mov
pop
lea
hlt
push
sbb
jge
movsb
stos
lods
out
hlt
mov
insl
aam
out
mov
cmp
lahf
cltd
fcoml
adc
fnstenv
dec
push
into
insl
push
imul
dec
lret
pop
dec
mov
mov
movsb
cld
jbe
inc
lods
pop
hlt
lret
lahf
popf
sub
inc
mov
mov
inc
sbb
data16
sbb
rdpmc
sbb
jmp
jl
mov
cwtl
in
lahf
push
repz
lcall
enter
ss
scas
cld
jg
nop
aaa
gs
add
xor
mov
loope
fstpt
mov
push
mov
xchg
ljmp
fnsave
adc
jl
pop
push
pop
mov
add
bound
inc
mov
xchg
out
test
addl
sbb
jbe
stc
dec
mov
mov
cs
pop
rolb
add
adc
xchg
xchg
out
jnp
out
mov
sti
xor
cli
dec
cmp
mov
loope
outsb
xchg
lods
mov
in
mov
adc
insb
mov
mov
jns
ret
push
lods
stos
jno
sarl
push
add
or
mov
shl
ljmp
mov
shll
xchg
cli
mov
cmp
int
enter
add
xchg
xor
xchg
inc
lahf
pop
lret
das
les
lods
pause
int
push
sbb
push
shl
inc
repz
out
pusha
outsl
dec
sbb
and
dec
fildl
testb
pop
jg
push
xchg
loopne
fdivl
push
ss
pop
adc
loop
sub
sub
pop
mov
push
pusha
push
add
in
rcrb
imul
xchg
insb
jg
aas
push
bound
dec
out
inc
mov
lock
mov
scas
inc
clc
add
neg
xor
lcall
jg
adc
repnz
mov
test
int3
dec
cld
inc
cs
jbe
pusha
push
xchg
xchg
sub
sti
rorl
mov
push
pusha
adc
dec
xor
dec
pushf
lahf
in
imul
js
add
mov
dec
jns
xchg
cmpsb
and
sbb
or
mov
aam
out
jo
pop
mov
daa
lret
aad
xchg
out
xchg
xor
jle
sub
das
aas
leave
push
inc
push
shrl
loope
outsl
xchg
mov
pop
orb
lock
mov
or
inc
fstpt
gs
mov
sbb
mov
pushf
pop
nop
hlt
mov
ror
dec
loopne
rclb
out
mov
jns
in
lock
pop
jl
lahf
ljmp
sbb
cwtl
cmp
jge
int3
dec
in
stos
stos
mov
imul
out
or
adc
jbe
les
stc
or
sub
ds
dec
addl
out
je
lahf
mov
dec
imul
fstps
push
cmp
jmp
lcall
gs
adc
das
lahf
or
mov
sbb
jle
nop
add
aaa
cmp
mov
jnp
clc
xchg
aam
addl
xor
mov
cltd
pop
xchg
out
dec
imul
nop
inc
xchg
xor
repnz
bnd
push
lods
mov
fdivr
or
cmp
clc
sbbb
or
jns
pushf
imul
push
lock
stc
or
loop
xor
cmc
clc
dec
add
repz
cmp
push
test
cld
ljmp
adc
lret
and
dec
and
nop
lods
jmp
lahf
jbe
xchg
bound
xchg
je
mov
mov
mov
adc
pop
sub
jp
push
add
sub
adc
push
xor
push
gs
inc
xchg
enter
inc
or
ret
mov
rcll
arpl
pop
mov
into
dec
jge
pop
lret
dec
add
outsb
add
pop
loope
and
jp
daa
std
les
dec
ljmp
cld
mov
inc
or
mov
je
mov
xor
imul
dec
test
jge
repz
mov
mov
xor
outsl
stos
scas
add
popa
lods
and
movl
and
mov
cmp
leave
out
jge
fcoms
pusha
or
push
ret
mov
mov
out
scas
out
testb
pop
mov
and
cmp
negl
xlat
sbb
sub
orb
push
pop
push
push
daa
xor
jns
mov
test
out
divl
jnp
out
lods
fidivs
je
xor
pop
shlb
out
push
iret
rcll
subb
lret
call
shlb
fwait
imul
xor
mov
stos
and
mov
aad
fiaddl
popa
daa
jbe
xchg
sbb
pop
arpl
sub
repz
sahf
shl
dec
add
dec
outsb
push
cmp
xor
mov
pop
roll
arpl
arpl
adc
les
js
cmp
mov
sub
or
or
rcrb
add
adc
fsub
pop
push
dec
aaa
shl
addl
mov
test
int
jmp
add
mov
imul
push
inc
leave
stc
jae
dec
xchg
add
pop
pop
negl
ret
inc
iret
lea
jae
push
mov
dec
shll
sub
pusha
add
fwait
jmp
idiv
cltd
inc
clc
jae
inc
add
mov
ja
pusha
in
pop
int
enter
jns
adc
shl
sarb
push
bound
test
fisttps
inc
cmpsl
ss
pop
jns
out
das
clc
in
mov
sbb
xchg
adc
sahf
sub
ss
push
mov
xchg
inc
lea
inc
insl
inc
pusha
and
fcmovne
xchg
icebp
mov
in
inc
arpl
jne
dec
inc
xchg
push
lods
mulps
int3
inc
movhps
inc
hlt
jb
sbb
out
jne
fimull
cmp
mov
pop
lret
shlb
add
aaa
inc
imul
push
push
addr16
dec
rcl
push
mov
add
cmp
jl
mov
jae
aas
repz
cwtl
mov
subl
into
add
out
cli
xchg
xor
idivl
aas
cmpsl
idiv
insl
les
gs
pop
mov
shll
pop
mov
jp
jnp
enter
xor
js
je
mov
movsb
push
push
mov
adc
mov
hlt
push
in
jl
js
out
clc
add
dec
out
bound
or
arpl
mov
and
mov
js
ret
sub
add
push
arpl
pop
cwtl
push
mov
cmc
into
mov
mov
aad
div
gs
pop
mov
inc
pop
int
mov
popf
fcompl
lret
sub
push
and
scas
jge
sub
test
popf
mov
lock
rorl
add
xchg
xchg
in
mov
xchg
jmp
cmp
jmp
lahf
add
adc
cmp
add
lcall
loop
mov
pop
adc
jge
imul
push
cs
push
fs
les
outsl
add
jbe
jb
sub
mov
or
sub
cmpsb
test
fstl
push
xchg
fisubl
mov
mov
lret
stos
aaa
and
clc
sbb
push
inc
nop
push
or
cmp
lahf
pop
pop
inc
fnstcw
lods
and
xlat
das
stos
adc
mov
push
imul
sbb
sbbl
dec
cmp
mov
mov
sarb
inc
dec
or
addb
fldt
mov
dec
xlat
push
mul
bound
and
push
imul
movsb
testl
push
sbb
push
add
xchg
jnp
negl
jp
xchg
jae
mov
int3
movsb
and
push
jge
fmul
jge
js
std
cmp
dec
enter
adc
push
sti
push
testl
mov
push
mov
mov
jb
std
clc
sbb
xor
ss
aas
loope
dec
inc
adc
or
sub
pop
pop
inc
dec
in
fcomps
or
push
jecxz
out
add
fbld
mov
out
sarb
mov
jl
ffree
ljmp
push
jnp
or
movsb
cmp
and
push
xor
xchg
ret
loop
out
and
push
push
ss
push
or
cmp
mov
movsl
push
mov
lock
add
pop
sbb
mov
pop
daa
xchg
fisttpl
fsub
mov
leave
mov
outsb
jle
das
push
lds
outsb
sbb
lcall
xor
mov
mov
insb
cmpsb
adc
mov
cmpsb
sub
in
dec
lds
daa
xor
cmp
das
ss
and
mov
xchg
cmpl
sbb
mov
sti
adc
call
mov
cmp
in
mov
clc
fldenv
push
test
nop
test
dec
aad
xlat
out
aad
sub
sub
arpl
mov
xchg
int
or
mov
ss
aaa
cwtl
shl
roll
xchg
stc
daa
arpl
mov
lahf
xchg
inc
test
test
adc
mov
dec
xor
sbb
sbb
repnz
xchg
aaa
sbb
cmp
pop
pushf
notl
jne
stc
rorb
jb
add
jb
and
lods
jecxz
sbbb
test
call
push
test
jl
pushf
cmc
inc
pushf
mov
and
out
hlt
imul
push
cmp
cmc
mov
sub
add
xchg
in
sbb
lret
jae
xorb
xchg
lahf
push
xchg
adc
mov
lds
xor
outsb
mov
ret
clc
loopne
dec
xor
and
cmp
jg
mov
icebp
mov
pop
mov
cmp
cmp
sbb
xor
or
repnz
xchg
into
pop
or
xchg
and
addr16
jle
push
mov
loopne
sbb
clc
int3
jnp
in
mov
inc
jp
mov
mov
mov
ret
xchg
mov
pusha
jge
fistpll
pushf
sbb
xchg
dec
mov
aad
inc
imul
pop
mov
pop
xchg
mov
push
inc
and
adc
xor
or
stc
int3
jb
clc
testb
xchg
mov
test
pushf
push
fdivrs
jmp
je
sub
mov
or
rorw
ret
mov
xchg
loop
pop
cmp
mov
sub
push
push
popf
das
movsl
pushf
mov
push
xchg
shrl
cmpsb
sub
fwait
mov
nop
iret
outsb
fs
loope
js
mov
std
aas
adc
ds
push
or
or
sub
loop
mov
add
lods
inc
repnz
mov
jmp
mov
pop
movsl
push
enter
data16
mov
sub
negb
push
inc
sbb
and
adcl
mov
inc
fstpt
in
cmp
add
arpl
lods
sbb
rcrl
out
mov
out
dec
sbb
jecxz
roll
fdivs
mov
inc
xchg
pop
mov
out
push
imul
sbb
insb
mov
arpl
incb
fdivl
into
sbb
push
out
jb
or
scas
std
mov
add
mov
dec
pop
cmp
aam
in
mov
inc
ljmp
shl
call
pushl
xor
pop
outsb
lcall
das
cmp
loopne
push
dec
push
outsb
insb
mov
mov
jno
rorb
adc
mov
push
es
dec
sub
mov
ss
add
sbb
mov
push
aas
jnp
sbb
fsubl
test
pop
jp
lock
xor
mov
jecxz
mov
loopne
pusha
push
xor
mov
inc
and
jno
ds
pusha
aaa
or
sbb
in
mov
test
notb
dec
ss
lea
data16
das
inc
jle
adc
data16
push
or
dec
leave
les
in
sbb
pop
sbb
les
xchg
pop
push
xchg
test
call
scas
push
xor
or
sub
mov
pop
push
aad
lret
fmuls
fimull
add
mov
fildll
cmp
mov
or
sbbl
push
add
pop
xchg
test
mov
pop
clc
add
fcomps
mov
test
adc
cwtl
divl
aas
test
mov
lahf
mov
cwtl
jae
cmp
pop
xor
ljmp
dec
fimuls
das
sbb
and
mov
fcmovnb
in
test
out
out
fs
push
out
cs
jnp
and
sub
pop
sbb
out
push
and
in
pop
and
push
int3
jo
daa
sub
in
or
sbb
sbb
mov
imul
push
fsts
mov
xchg
ljmp
dec
mov
inc
jg
scas
clc
scas
enter
mov
icebp
push
sub
push
mov
out
les
lods
pop
nop
scas
aad
stc
cmp
push
dec
pop
xchg
and
xchg
outsl
scas
jnp
jo
xor
mov
out
imul
adc
out
ljmp
lret
mov
dec
mov
movsl
adc
xchg
mov
pop
lock
push
push
dec
xchg
mov
aam
fstps
lret
ss
lretw
lods
sbb
nop
fsubrl
shll
add
mov
push
mov
push
call
mov
push
ja
pop
ss
cltd
test
cmp
fistpll
hlt
test
jecxz
sub
rorb
cmpsl
add
cmp
sub
stc
cmp
sbbl
pop
in
adc
cmp
mov
sub
cmc
pop
pusha
push
test
adc
imul
mov
inc
pop
lret
inc
test
outsl
pushf
rcrb
pop
sbb
mov
test
jne
mov
mull
mov
cmp
jmp
pop
xchg
ljmp
push
mov
add
mov
pop
scas
sar
fstp
shl
mov
sahf
repz
out
cmp
xchg
ja
mov
push
addr16
popf
faddl
mov
cmp
dec
psubd
movsb
inc
scas
xor
pop
inc
mov
push
sbbl
mov
cmpsl
push
imul
pop
push
popf
jb
jnp
mov
mov
pop
mov
mov
adc
add
and
iret
jg
insb
iret
xchg
or
cltd
frstor
mov
jle
bound
mov
mov
icebp
scas
add
adcl
cmp
cmp
jge
push
dec
bound
cmp
fidivs
or
sub
outsb
fmuls
pop
movsl
push
jl
test
mov
add
xchg
add
out
jns
sbb
and
mov
sbb
push
jnp
push
push
sbb
adc
mov
pop
xor
pop
div
sbb
sbb
inc
sub
ret
adc
ret
jbe
push
into
or
movsl
fildll
out
push
push
jg
mov
inc
in
dec
mov
lods
pop
cltd
into
cltd
xchg
sub
fiadds
cmp
xchg
leave
cmp
bound
jns
icebp
add
int3
add
and
pop
pop
dec
jno
sub
inc
cmp
lahf
sub
test
jne
mov
and
cld
dec
sbb
out
mov
or
lret
mov
dec
add
mov
outsb
or
out
mov
pop
dec
leave
dec
or
outsb
lods
icebp
push
sub
movl
repz
mov
addr16
faddl
sbb
ss
adc
lods
adcl
mov
sbb
repz
xor
ja
sbbl
add
les
mov
push
leave
cmp
cs
in
insl
clc
mov
das
mov
popf
fdivrs
sbb
mov
insl
sbb
xchg
ja
xchg
stos
arpl
mov
ret
in
rcrb
cmp
cmp
push
lea
mov
loop
add
sub
outsb
sub
dec
inc
cmp
jae
arpl
fs
call
sub
add
mov
inc
ret
fsubp
sbb
mov
mov
xor
xorb
aas
clc
popa
push
pop
xchg
or
push
ret
push
inc
pushf
xchg
pop
push
es
loop
inc
adc
or
imul
push
pop
insl
sub
xchg
pop
clc
lcall
sub
adc
icebp
jo
in
and
rcrb
push
pusha
es
gs
jle
js
pusha
mov
xchg
or
jns
ret
bound
pop
ljmp
sbb
into
lods
sbb
mov
push
clc
call
mov
cmp
out
faddl
and
pop
jne
xchg
xchg
sbb
mov
xchg
movsl
dec
call
push
cmc
xor
mov
cmc
fdivrp
test
jbe
add
dec
adc
xchg
rcrl
les
cmp
ds
rolb
pop
mov
push
pop
mov
sub
pop
or
cmp
xorl
sbb
mov
arpl
sub
movsb
xchg
xchg
imul
mov
jl
iret
das
dec
das
es
sbb
xchg
repz
adc
mov
test
stos
int3
sahf
insl
mov
subl
add
sahf
shll
inc
adc
out
mov
xorb
xor
pop
lret
jbe
add
lahf
nop
fwait
jge
or
outsb
jge
push
jb
int3
push
jg
and
ror
cld
or
enter
lret
shrl
ja
xchg
cmc
jnp
lds
cli
mov
jno
fidivs
xorl
ljmp
jno
in
repz
sbb
dec
mov
pusha
fidivl
pop
mov
aas
inc
cmpsl
pusha
or
and
dec
xchg
cltd
lret
jg
lods
mov
rcrl
inc
mov
and
cmp
int3
mov
es
jns
dec
icebp
out
icebp
repnz
push
lods
stos
int
or
inc
shrb
cmpsb
mov
mov
sbb
les
push
pop
test
inc
test
sub
pop
push
xlat
out
loopne
orl
subl
dec
pop
fbstp
push
mov
je
scas
daa
lock
divl
and
pop
adc
lcall
push
mov
mov
jge
pop
mov
add
ret
or
push
mov
pop
xlat
jle
jne
push
lods
enter
ja
push
lret
pop
push
push
lcall
mov
lea
jno
ljmp
sbb
jmp
dec
push
jge
mov
jecxz,pn
push
or
or
mov
out
in
add
mov
dec
inc
mov
inc
xorb
aas
shll
and
popa
dec
sub
leave
ficoms
cwtl
push
jecxz
shll
push
dec
sbb
lock
or
push
jb
scas
stc
sbb
adc
mov
iret
lret
cmp
xlat
mov
mov
xchg
mov
xor
out
loopne
or
aaa
dec
mov
jae
jecxz
ret
rcll
cmp
lcall
mov
push
push
roll
shll
sbb
lds
hlt
xor
lcall
fwait
pop
movsb
shrl
adc
hlt
lock
ficoml
lahf
test
cld
in
orl
rclb
insb
or
addl
xor
adc
das
sti
push
push
sub
aam
pop
shrl
rcl
adc
rcll
sbb
fiadds
lahf
dec
sarl
sbb
inc
push
cmp
push
mov
add
mov
ss
push
xchg
call
add
mov
mov
pop
cwtl
sbb
add
or
gs
mov
push
dec
push
sub
and
xor
shll
mov
outsl
adc
std
popa
mov
push
fdivl
outsl
int3
sbb
push
jne
lock
out
pop
in
bound
insl
idivb
mov
mov
ret
ja
je
imul
mov
mov
out
dec
add
inc
sbb
pop
cmp
enter
ds
repz
movsb
scas
call
fs
int
sbb
or
push
inc
xor
sahf
arpl
rorb
mov
jno
inc
lret
mov
pop
xor
out
psllw
cmp
lock
test
lcall
out
leave
clc
insl
popl
push
mov
lock
out
cltd
mov
lock
mov
lods
xchg
push
movsl
hlt
and
sub
mov
pop
ret
xchg
les
lds
leave
into
adc
inc
lock
ret
fadds
aas
shlb
into
and
lea
je
sbb
jmp
cwtl
jl
jnp
rol
test
jo
push
and
push
xor
pusha
cmpsl
cwtl
mov
call
nop
stos
mov
ja
fsubrl
testl
icebp
and
inc
stos
popa
inc
dec
mov
mov
cmpsl
mov
sbb
jmp
mov
aaa
add
scas
mov
mov
es
icebp
aad
inc
scas
pusha
and
movsl
dec
ret
sbb
insb
arpl
mov
into
scas
shrb
pop
mov
or
pmaxsw
pop
outsl
xchg
jmp
cmp
fwait
out
fists
hlt
int3
popl
arpl
inc
scas
ret
pop
aas
add
dec
push
inc
xchg
mov
subl
mov
pop
das
mov
inc
fs
mov
insl
mov
mov
je
mov
xor
dec
insl
mov
and
or
pusha
jl
mov
mov
adc
jle
sbb
dec
cmpsb
xchg
rcll
xchg
sbb
loopne
xchg
imul
pop
lret
cs
icebp
sub
and
dec
mov
sbb
mov
inc
pop
xchg
bswap
rcll
aad
push
adc
push
ljmp
nop
test
fldl
inc
lahf
jl
xor
ret
sbb
jb
fwait
pop
into
add
push
add
mov
mov
inc
or
xchg
icebp
xchg
loopne
das
add
fnsave
loopw
setl
mov
mov
push
into
sahf
sbb
mov
xchg
mov
cmpsb
loop
icebp
jne
dec
cmp
les
xchg
mov
lods
jb
mov
push
pop
pop
inc
dec
sub
fbld
mov
fsubrl
aas
and
je
cmp
mov
in
test
push
adc
dec
xchg
pop
jns
push
add
mov
push
cltd
loope
ret
ret
test
scas
mov
sub
int3
outsl
in
dec
pop
inc
jo
mov
or
jb
inc
adc
xor
cltd
rcrl
test
cwtl
and
mov
sub
xlat
cmp
dec
rorb
sub
mov
outsl
inc
jp
jl
out
mov
test
outsb
insb
mov
xor
push
pushf
jb
push
orl
rorb
repz
xchg
es
mov
pop
pop
sti
sbbl
inc
pop
dec
popw
mov
inc
pop
cmp
dec
mov
and
push
fidivs
and
jno
mov
fdivrl
mov
mov
xchg
mov
loopne
push
sub
lret
sub
jge
dec
mov
repz
add
aam
dec
in
fsubrl
pop
out
icebp
pop
inc
inc
push
mov
sub
xchg
lret
repz
mov
sarl
test
mov
xchg
mov
jo
pop
movsb
cli
cld
bound
ret
sarl
push
mulb
sbb
jns
faddl
imul
hlt
jns
adc
jecxz
or
nop
test
cmp
jb
pop
add
sbb
sbb
ficoms
mov
mov
in
lret
add
sbb
mov
mov
push
scas
testb
fs
es
ljmp
sbb
fadd
push
ret
into
jmp
xor
pop
pop
lods
test
pop
fbld
je
jle
lds
pop
jbe
fmulp
sbb
fcomi
mul
daa
lock
xchg
mov
in
pop
int3
jg
sub
lods
stc
in
outsl
lods
les
rorb
push
rolb
sub
sbb
js
mov
pop
sbb
xchg
icebp
in
add
cmp
lret
fisttps
cli
adc
gs
filds
je
repz
lret
mov
test
in
adc
dec
xchg
ja
adc
add
push
xor
popf
pop
movsb
int
inc
pop
bound
scas
pop
sub
lds
push
insb
adc
and
call
inc
pop
jns
jno
or
test
mov
and
cmp
mov
pop
jl
mov
and
sbb
mov
movsl
mov
mov
xchg
mov
push
arpl
mov
lods
bound
cltd
bound
or
push
sarb
cmp
in
scas
inc
addr16
cld
test
sub
jbe
add
cs
jmp
mov
sub
inc
aas
aad
push
push
js
xchg
jno
add
insb
icebp
out
cs
es
add
stc
inc
iret
push
or
cld
movsb
popf
ds
movsl
lahf
fcmovbe
inc
xchg
ds
lret
mov
in
jns
leave
notb
xor
loope
cmpsb
in
mov
inc
jge
jns
fisubl
leave
stos
dec
dec
insl
push
mov
icebp
jns
pusha
inc
xchg
andb
jl
and
mov
or
in
sbb
jnp
xchg
xor
or
dec
stos
cmp
sbb
sti
dec
pop
out
xchg
push
sbbb
aam
push
add
add
inc
push
lret
push
outsb
out
test
xchg
cmp
mov
xchg
push
enter
mov
fisubl
addr16
mov
scas
mov
add
cmp
outsl
sub
inc
mov
mov
enter
test
fcompl
push
xchg
fmull
xor
sti
mov
mov
push
movsl
jno
js
sbb
scas
movb
stos
icebp
xor
mov
mov
pushf
arpl
fnsave
mov
stc
bound
cwtl
sbb
in
fs
push
cmp
lret
add
hlt
stos
mov
dec
xchg
testl
jae
xchg
rorb
fcmovne
add
nop
into
stos
jmp
adc
ss
or
mov
std
sbb
dec
mov
enter
pop
sub
add
sbb
js
or
sub
mov
mov
dec
adc
mov
sbb
mov
sbb
cltd
loopne
cmpsl
adc
loope
dec
sbb
push
sbb
push
out
dec
insl
pusha
aas
mov
jne
shlb
or
mov
pop
pop
into
cmpsb
mov
mov
push
js
mov
or
or
lret
daa
add
pop
fs
repnz
jno
adc
int
cwtl
jne
mov
mov
xchg
or
xor
sbb
mov
std
jbe
xchg
dec
adc
test
add
mov
sbb
loop
es
xchg
cli
dec
and
lea
in
xchg
popa
ja
dec
cli
into
sub
or
pop
cmp
daa
mov
filds
xchg
cmp
rcll
push
imul
mov
test
mov
cmp
adc
in
fs
sarl
xchg
pop
and
aas
or
psrlw
sbbb
inc
repz
dec
jecxz
push
pop
jge
not
jae
jo
es
xor
mov
in
pop
mov
rorb
incl
sbb
sbb
pop
inc
sbb
mov
xchg
loopne
adc
dec
xorb
pushl
addl
into
iret
add
jp
popa
mov
or
xchg
lods
add
cmp
mov
or
insb
mov
xchg
mov
jno
pop
adc
sbb
fsubr
lds
adc
int3
inc
fadd
jmp
pop
rorb
add
jge
out
imul
mov
add
sub
jl
cli
push
adc
call
fldenv
inc
pop
mov
std
adc
insb
mov
xchg
cmp
imul
and
mov
sub
inc
shlb
pop
in
mov
mov
aas
shrb
scas
addl
repz
dec
loopne
outsb
mull
jne
dec
lock
mov
adc
into
adcb
add
int
mov
add
std
mov
or
cmp
out
ret
inc
sbb
stc
xchg
pusha
sub
lods
or
iret
or
je
pop
mov
es
js
les
fdivl
rcrl
aad
mov
daa
or
fwait
in
adcl
dec
loope
xlat
movswl
pop
ja
addr16
jl
and
imul
insl
dec
dec
insb
or
and
dec
mov
push
jecxz
loop
test
sbb
aam
leave
shrb
push
or
je
setb
dec
test
lret
les
push
mov
mov
fwait
movsb
dec
add
rorl
dec
repz
aam
xor
add
sub
dec
mov
pop
int3
xchg
test
lret
sub
push
add
insb
adc
push
cltd
adc
fnsave
jbe
xchg
icebp
test
dec
call
xchg
imul
dec
cmp
mov
fwait
cwtl
push
aam
adc
inc
push
or
mov
or
dec
outsb
mov
stos
jecxz
sub
addr16
mov
cmpsb
inc
aas
aad
pop
xchg
js
push
push
xchg
cmp
ret
insb
pop
cmp
bound
xor
leave
loopne
loopne
daa
xchg
loope
fildll
rcrl
add
mov
test
cmp
mov
add
fstl
std
movsl
fists
or
mov
xor
add
popa
cmpsb
xchg
pop
jmp
mov
dec
leave
mov
mov
rorl
or
adc
cmp
inc
inc
push
push
xchg
jecxz
test
pop
push
roll
cld
hlt
inc
or
or
sbb
mov
jae
cmpsb
in
pop
jb
xor
aas
rclb
clc
and
pop
test
hlt
rcl
fnstenv
iret
aad
jg
lret
and
xor
add
cltd
test
dec
insb
inc
fstp
sbb
add
adc
mov
mov
lret
mov
add
adc
dec
pop
out
imul
aam
cmp
stos
add
mov
or
fisubrl
pop
pusha
sub
mov
adc
pushf
dec
sbb
mov
pushf
out
jnp
mov
out
sahf
sub
mov
popf
outsb
mov
xchg
mov
lods
in
cmpsl
jno
mov
enter
cmc
mov
jb
shrl
in
icebp
push
cwtl
insb
push
sbb
lcall
lret
ficomps
dec
out
dec
inc
sbb
adc
pop
push
jle
adc
ret
movsb
fwait
push
addr16
cmpsl
scas
lds
sbb
adc
sbb
outsb
mov
cmp
push
dec
aad
mov
lds
lcall
mov
jmp
shl
xchg
mov
stc
int3
cmp
cmc
mov
inc
in
outsb
add
orl
xchg
sarb
test
bound
mov
adc
lds
aas
xor
jp
dec
loope
adc
leave
push
lea
xchg
or
sarl
addr16
mov
dec
add
outsl
ficompl
fidivs
xchg
sahf
test
inc
fnstenv
mov
outsl
std
outsl
neg
push
pop
in
in
mov
jge
adc
shlb
jne
insb
mov
gs
push
call
mov
cmpsl
gs
inc
lret
add
or
push
ficompl
push
push
jbe
xchg
pop
dec
cmp
push
push
dec
shlb
into
mov
mov
in
sbb
cmp
ror
xor
or
mov
sub
mov
lret
mov
fists
cmp
xchg
inc
jmp
pop
mov
mov
les
div
xchg
xchg
stos
xchg
or
les
lahf
sub
push
or
mov
bound
fnstcw
dec
mov
xor
int3
scas
leave
scas
cmp
jae
sahf
mov
jb
pop
stc
inc
dec
shl
push
test
jnp
and
fsubr
and
adc
filds
adc
fcmovnu
pop
push
cmp
jl
mov
test
idivb
and
jne
xorb
popf
fwait
test
daa
dec
popf
pop
int
xchg
rolb
sbb
and
mov
or
sub
dec
cmp
jl
outsl
inc
push
pusha
or
enter
jge
jb
cltd
sbb
jb
dec
push
enter
test
pop
arpl
in
pop
daa
test
int
cmp
adc
inc
clc
mov
sub
pushf
loope
test
sub
int
xlat
push
mov
iret
inc
mov
sub
loopne
push
pushf
mov
push
inc
test
or
fadd
inc
test
out
pop
mov
addr16
jbe
ljmp
add
mov
ja
fs
dec
and
lods
loope
or
testl
sbb
jg
jnp
mov
idivl
cmp
movsb
adc
icebp
sub
test
dec
repz
inc
cs
lahf
mov
out
or
lahf
orb
je
add
and
and
ret
cwtl
pop
std
out
adc
stos
dec
mov
mov
pushf
call
mov
std
mov
fsubl
sarb
sbb
pusha
lock
testl
dec
nop
mov
pop
dec
fsts
jnp
and
pop
pop
inc
and
push
aam
jne
test
xlat
fldcw
aas
and
into
pop
test
xchg
xchg
dec
cmp
out
push
xchg
or
insl
cli
loopne
dec
inc
dec
mov
sub
pop
leave
lods
sub
push
push
inc
into
push
rorl
or
xchg
adc
enter
ds
pushf
sarl
imul
lahf
scas
hlt
xchg
loope
decb
mov
inc
or
add
xor
push
inc
sub
insl
jne
xor
mov
aad
or
inc
jp
imul
pop
push
dec
imul
mov
std
in
sti
jle
add
inc
xchg
sub
fwait
mov
mulb
scas
mov
stc
mov
in
dec
dec
and
sbb
loop
pop
inc
les
jmp
jnp
and
xor
repnz
xlat
mov
jne
nop
dec
lahf
stos
mov
inc
rol
fwait
mov
imul
and
add
cwtl
mov
mul
or
pop
outsl
mov
stos
mov
ja
pop
push
fldenv
add
in
push
mov
rorl
cmpsb
fs
ret
cli
inc
out
ljmp
cmpsl
shll
and
icebp
pop
popf
mov
inc
add
add
jge
mov
cmp
dec
fcompl
jg
movsb
sbb
sub
aaa
or
adc
loopne
cmp
test
and
mov
sub
mov
jge
sahf
fstpl
dec
movsb
fucomi
call
scas
xchg
cltd
fisttps
fldln2
jecxz
mov
stc
or
hlt
scas
lahf
cmc
inc
mov
loop
inc
inc
lods
sbb
cmp
sbb
enter
add
cld
rcrb
fucomi
imul
cli
in
or
xchg
mov
push
dec
xchg
add
dec
jns
test
stos
adc
outsl
adc
cs
push
ss
cmp
push
in
popf
lods
sub
pop
icebp
push
fsubl
stc
push
jle
and
xor
or
movsl
lock
mov
and
jns
outsl
lcall
mov
ss
inc
addr16
pop
xchg
fcoml
fs
loopne
xor
lret
orl
xchg
push
mov
mov
pop
jge
cmp
addr16
rorb
cmp
inc
pop
scas
push
pop
sbb
fs
cwtl
out
stos
ljmp
js
pop
out
inc
cmp
mov
sub
add
in
lods
nop
ljmp
xchg
fs
push
add
iret
in
lock
js
mov
cltd
mov
sub
sti
jo
ljmp
gs
mov
shl
mov
mov
scas
subl
jae
pushf
ljmp
shll
push
jecxz
lret
cwtl
xchg
enter
shr
lods
sbb
insb
notl
mov
rcrb
call
jo
sbbb
xchg
sbb
lret
ss
rcl
loopne
decb
push
loopne
pop
dec
call
push
fcoml
xchg
cmp
push
mov
out
adc
sub
mov
add
je
ret
jb
jns
lret
cmpsb
sar
push
mov
test
pop
popl
stc
sub
outsl
mov
mov
rol
shll
fmuls
into
out
cmc
js
pop
andb
les
loopne
rcrl
stos
int3
xchg
mov
jge
loop
and
es
mov
cs
xchg
test
punpcklwd
sbb
sub
jp
mov
adc
xor
or
mov
inc
in
lods
jl
or
cmpsl
push
lahf
addr16
in
fwait
aas
sbb
mov
dec
push
pop
imul
push
sahf
fisubs
push
pop
xchg
mov
mov
sub
mov
cmp
jae
inc
and
sbb
iret
xor
outsl
cli
dec
dec
or
cmpsb
lea
in
push
push
adc
ss
pop
loop
jbe
push
adc
inc
ret
fs
jle
fistps
or
add
jp
test
xor
pop
popa
xchg
lods
inc
and
shl
adc
xchg
or
popa
roll
xor
jecxz
test
pusha
jmp
mov
imul
push
inc
addb
fstps
add
dec
jbe
stc
dec
adc
fadd
lds
sbb
ja
das
arpl
inc
jb
insb
mov
int
jae
dec
cltd
mov
into
xchg
dec
mov
jge
add
jno
adc
sbb
imul
inc
pop
vmread
rorl
adc
scas
lods
in
outsb
jecxz
lods
test
xorb
cmp
adc
mov
xchg
mov
fsave
orl
sbb
js
outsl
in
pop
pop
push
aam
insb
outsl
mov
mov
cmp
and
mov
adc
jl
nop
adc
pop
popf
inc
rcll
and
xchg
jb
and
mov
sti
xor
push
xor
pop
adc
xor
and
xor
lret
les
xor
aad
xchg
mov
sbb
decb
xchg
fwait
xorb
cmp
std
out
bound
sbb
fimuls
mov
sub
adc
dec
repnz
jnp
pop
out
inc
into
ret
sbb
mov
insb
imul
mov
cwtl
or
stc
ffree
cltd
mov
add
or
dec
inc
mov
test
jecxz
mov
and
arpl
test
mov
dec
push
inc
std
push
cltd
jge
ret
inc
dec
dec
add
add
sbb
xchg
loope
cmpsb
mov
jge
call
adc
jo
inc
mov
mov
movsl
adc
inc
cmc
pop
sub
or
dec
in
int
scas
jb
cmp
lds
call
adc
mov
xor
lods
push
rorb
inc
jo
in
stos
mov
dec
sub
fs
add
fucomp
jp
mov
jns
ds
lods
std
enter
and
les
std
imul
aaa
inc
loop
pop
push
add
jb
sbb
pusha
mov
xchg
out
xchg
lea
jo
mov
add
popf
add
enter
xor
std
pop
sti
daa
arpl
pop
loopne
add
ret
xor
andb
inc
jecxz
push
inc
lret
out
mov
iret
aaa
jb
dec
push
mov
pop
testb
mov
test
fdivs
push
push
adc
xor
xchg
addl
xchg
hlt
fiaddl
movmskps
mov
sti
cld
sub
add
dec
decb
repnz
xchg
in
mov
bound
jns
or
and
mov
xchg
imul
nop
pop
scas
dec
insb
fsubr
in
cltd
sub
lret
repnz
popf
std
std
sub
pop
mov
insb
je
add
pop
xchg
sub
cs
and
ds
or
dec
ds
pop
into
fbstp
jno
mov
sub
cltd
shrb
dec
pushf
insl
jnp
sub
je
sbb
lret
fisttpl
add
push
lods
dec
mov
sub
les
in
movsl
ret
push
and
xor
cmp
and
xchg
pusha
fistpll
adc
mov
loop
xchg
lcall
ds
push
sub
mov
divl
out
adc
popa
jne
jne
arpl
daa
push
in
test
dec
dec
cmp
xor
xor
loop
cmp
sub
cld
add
incb
jg
aad
shlb
cld
sti
sub
sbb
ss
pop
cld
jmp
adc
cld
sbb
and
lods
xchg
add
cmp
adc
std
sti
push
ret
mov
jbe
or
fildl
mov
rcr
pushw
sbb
adc
out
int
es
sub
fists
enter
cmp
inc
std
or
mov
scas
scas
and
sti
aad
sbbb
fwait
les
jmp
inc
nop
movsb
dec
jle
sbb
test
mov
sahf
mov
inc
add
stos
push
subl
jmp
out
mov
jne
popf
and
xor
inc
mov
mov
js
jp
xchg
out
sbb
shl
fmull
mov
lcall
sbb
pop
sbb
add
push
mov
jno
push
pushf
cwtl
adc
inc
jno
xchg
sbb
push
mov
test
dec
scas
xor
scas
jl
cmpsb
pop
jmp
ja
loopne
in
negl
add
jae
call
loop
pop
jg
pop
test
in
jns
dec
outsl
or
or
rorb
subl
mov
add
and
adc
fmuls
outsl
clc
and
push
jb
lods
inc
push
das
xlat
xor
xchg
xchg
movsl
cmpsb
test
push
or
inc
adc
mov
or
int3
icebp
sub
push
out
jmp
jmp
negb
add
xchg
cwtl
dec
xchg
fisttpl
cld
mov
sub
mov
xor
push
lret
jbe
int3
in
pop
decl
sbb
rep
jno
cmc
pusha
add
inc
xor
test
mov
mov
pop
mov
fdiv
adc
or
inc
dec
test
pop
leave
cmp
sbbl
and
mov
mov
dec
orb
aam
adc
jmp
ds
sub
ret
jle
and
xchg
dec
pushf
mov
cmp
fistl
or
push
xchg
mov
sahf
push
xchg
and
inc
in
xor
jle
gs
punpcklwd
sub
dec
sub
ja
inc
adc
jbe
cmp
pop
dec
mov
jmp
cmp
add
out
into
xchg
into
ds
dec
pusha
adc
inc
fisttps
movsl
sbb
cwtl
shlb
pop
cmp
push
xchg
loopne
daa
outsb
addr16
fsubrs
pushf
pop
lds
lds
sarl
imul
in
bound
cmp
call
insb
out
add
push
out
mov
xchg
arpl
push
lock
or
ret
fisttpl
mov
lock
orb
test
mov
mov
std
ret
add
push
sahf
xchg
push
push
xlat
hlt
pop
push
mov
pop
inc
das
push
insl
mov
jp
fldt
sbb
int3
lea
dec
sub
dec
jns
outsl
and
out
inc
mov
fld
insb
xor
les
call
jecxz
inc
idivb
pusha
in
mov
fs
out
imul
lock
ret
add
pop
fistpll
cmp
test
loop
xchg
loop
or
adc
add
cmpsb
fs
stos
jo
repz
xlat
ljmp
cmp
cmpsb
cwtl
cmp
adc
sbb
push
xchg
fisttpl
pusha
inc
ds
sbb
and
outsl
add
imul
mov
mov
mov
cmp
jns
fsubs
sub
sbb
pop
stos
aas
mov
mov
or
and
cwtl
ljmp
sarb
sbb
pushf
sub
pop
jge
bound
xor
cmpsb
sarl
paddsb
fcmovnu
js
loope
ja
loopne
mov
pop
adc
and
enter
sub
push
mov
add
inc
scas
ljmp
adc
movsl
sbb
lcall
fstl
sbb
cmp
adc
xor
lods
mov
xchg
aad
push
sbb
mov
sti
dec
push
pop
das
fnstsw
mov
out
mov
sbb
pusha
cwtl
je
sub
or
xor
jmp
mov
dec
jge
jbe
dec
jl
push
mov
shll
push
and
movsb
andl
shll
fwait
subl
jae
xchg
cs
jecxz
and
loopne
push
add
divl
mov
les
xchg
lret
mov
dec
xor
pop
dec
call
jns
aam
xlat
ret
jg
iret
into
push
wrmsr
add
or
add
jno
xchg
leave
jns
ds
test
adc
nop
or
push
mov
inc
jo
shrl
lods
ss
gs
dec
lods
in
scas
pop
cmp
or
jne
inc
repnz
int3
sbb
dec
and
stos
push
ljmp
sub
loope
mov
mov
cli
and
lcall
or
test
mov
test
mov
hlt
cs
scas
mov
or
mov
mov
imul
fisttpll
aad
fdivp
cmpsb
lret
jb
data16
mov
mov
stc
mov
dec
mov
ja
test
push
mov
es
jbe
push
cmc
iret
jg
xor
pop
icebp
dec
or
arpl
sbb
adc
aas
fimuls
inc
adc
jne
insl
enter
mov
xchg
repz
ret
ljmp
nop
ljmp
jnp
std
ret
dec
jmp
scas
pop
cwtl
mov
cmpb
roll
push
xor
pop
testl
mov
push
fldcw
push
xor
sbbl
jne
xchg
call
lea
lret
jns
xor
aad
cltd
lret
lds
fistl
imul
dec
sbb
pop
sub
mov
add
or
cmc
pop
int
xor
pop
mov
fsts
xor
pop
xchg
inc
xchg
psubusb
cmp
push
push
push
jecxz
xchg
jmp
std
push
add
sbb
loop
xchg
and
sub
jae
cwtl
ret
out
xor
sbb
insl
test
push
sahf
pop
das
rclb
jb
or
adc
cltd
cld
cs
push
mov
dec
pop
daa
in
mov
mov
scas
cwtl
in
les
sub
insl
ret
add
cmp
stos
and
push
cmp
std
lret
mov
fwait
jmp
adc
clc
and
dec
das
push
mov
mov
clc
pushf
scas
ret
loop
stc
adc
jl
cmpb
cs
cwtl
mov
pop
test
cmp
and
insb
push
and
out
ljmp
inc
leave
jecxz
hlt
jno
cltd
pop
inc
push
jns
cmp
sbb
dec
inc
fstp
scas
cmp
cmc
rcll
fwait
iret
bound
aas
je
addl
pop
mov
add
mov
das
xchg
xor
adc
dec
test
xor
mov
mov
lahf
xorl
mov
mov
add
inc
dec
cmp
sbb
hlt
xor
adc
jo
pop
in
data16
lcall
mov
xor
add
fs
or
mov
cld
sqrtps
inc
xchg
mov
cmpsl
and
cmc
xchg
int
test
lods
inc
lret
push
jmp
loopne
xchg
jo
lock
or
adc
mov
shl
adc
xchg
jns
xchg
sub
dec
int
popa
jne
inc
sub
icebp
and
insl
arpl
add
xor
out
sti
movsb
push
flds
push
add
lea
stc
mov
cmp
fistl
add
xchg
movsl
repnz
pop
push
xchg
lret
int3
lds
or
jmp
loopne
insb
push
pop
gs
xchg
ja
adc
es
scas
jo
cmp
inc
loopne
adc
mov
repz
push
dec
in
adc
test
andl
insb
in
lret
or
xor
daa
shrl
jge
in
push
nop
out
scas
or
cmc
fsubs
xchg
scas
cmp
lea
sti
rcr
xchg
inc
mov
xor
and
scas
push
mov
cmp
inc
mov
inc
idiv
lret
pop
mov
ljmp
lret
push
cmc
xor
insl
xchg
pop
gs
and
and
xchg
mov
jo
int
adc
repz
test
ret
popf
loop
xor
repnz
cmc
and
mov
jns
or
int3
movsb
inc
fs
mov
xor
lahf
inc
xorb
push
enter
sub
jge
sbb
fimull
and
icebp
aas
xor
sub
and
push
mov
or
dec
and
cmc
lods
cli
xor
lahf
das
mov
addr16
pop
xchg
mov
adc
jle
out
mov
dec
mov
jbe
stos
out
fcmovnu
cmp
test
cmp
movsl
iret
xor
in
sbb
fs
and
cmp
das
rcll
aad
xorl
xor
push
ss
imul
out
jmp
jmp
or
xor
and
cmp
psraw
cli
inc
jg
mov
jo
xor
loopne
icebp
in
or
out
daa
cli
push
rcll
lcall
mov
je
push
insl
outsb
inc
repz
iret
and
outsb
mov
cmp
xor
mov
push
addr16
aad
mov
inc
push
dec
fsqrt
pushf
xchg
sub
add
jg
orl
pusha
sub
or
pop
lea
mov
sysret
pop
repz
mov
ret
test
sub
xchg
out
inc
mov
mov
jns
and
mov
pop
mov
addr16
pop
in
sbb
push
jbe
jmp
icebp
je
push
pop
data16
sub
out
cmpsl
cmpb
pop
pushf
ds
mov
stos
test
push
cmp
cmp
arpl
lret
sub
sub
mov
or
pop
mov
in
out
cs
cli
and
jb
add
pop
and
xchg
xor
mov
imul
pop
push
bndstx
sub
jp
cmp
xchg
lret
or
push
es
pushf
mov
dec
punpcklwd
sahf
sbbb
psrad
mov
sbb
xlat
sti
in
jg
mov
addl
sbb
rcll
sub
rolb
out
aad
pop
mov
mov
dec
dec
and
sub
ret
mov
sbb
mov
inc
jg
xchg
inc
into
xchg
xor
ret
sub
lock
sbb
mov
stos
test
movsb
hlt
mov
out
dec
xchg
or
push
iret
lods
es
in
cltd
jbe
stos
add
mov
stos
in
cmp
outsb
cmp
bound
repnz
inc
ljmp
inc
iret
test
mov
xor
add
and
xor
adc
xchg
adc
subl
fidivrs
ret
push
sbb
mov
cmc
push
ficompl
scas
mov
add
jbe
cmp
rolb
cltd
jge
pop
dec
scas
jbe
repz
clc
ret
ret
clc
outsb
lods
mov
fisttpll
sbb
sub
lea
pop
cltd
pusha
orl
fbld
sub
mov
cmp
inc
add
push
scas
mov
mov
loope
and
fwait
into
fnstenv
stos
fistl
movsl
aaa
sub
movsl
jg
jne
sbb
icebp
pop
lds
jp
cmpsl
xor
xchg
hlt
inc
popa
mov
mov
mov
aam
sub
jae
mov
push
fwait
jp
dec
iret
rorb
pop
daa
aad
inc
sar
test
int
or
out
or
arpl
or
dec
sub
xor
push
pop
loop
notl
leave
jae
iret
loop
mov
xlat
dec
adc
sbb
notb
out
sarb
mov
iret
adc
popf
fneni(8087
inc
push
out
add
sbb
sub
inc
ja
sbb
cmpsl
dec
add
jno
mov
aam
in
clc
xchg
add
mov
mov
sahf
mov
dec
loopne
pop
or
and
xchg
lods
inc
pop
add
mov
ret
fldl
adc
call
clc
daa
sbb
or
jle
push
movsl
fwait
mov
or
xor
xchg
loope
test
out
jmp
lret
cli
mov
arpl
je
or
pop
add
popa
int
imull
gs
and
xor
stc
xchg
mov
and
test
sarl
cmp
sti
imul
aad
xchg
push
nop
call
ror
das
fwait
scas
mov
lods
xchg
in
out
jns
cmp
lret
bound
push
test
andl
leave
dec
fistl
sub
mov
xlat
sbb
sbb
add
mov
loopne
inc
push
inc
add
cmp
xchg
mov
mov
cltd
rorl
push
loop
and
push
sub
pop
ret
sub
in
jno
insl
xor
pop
bound
dec
inc
shr
inc
jne
xor
mov
les
xor
scas
pop
rclb
lahf
insl
xchg
or
fimull
cli
jo
push
fcompl
movsl
mov
cmpsb
aas
enter
pop
xor
dec
push
jb
enter
in
out
das
jmp
cmp
andb
dec
xchg
les
cmp
push
cmp
daa
ljmp
pop
add
pop
fidivs
add
popf
mov
rcrl
xchg
add
aad
repnz
fwait
mov
mov
fiaddl
jp
pop
pop
mov
jae
dec
out
fbstp
sbb
push
push
loope
bound
leave
jge
push
sub
das
xchg
push
sub
inc
mov
scas
jbe
inc
js
jp
mov
clc
fwait
push
int3
stc
rclb
ss
aaa
xchg
pop
adc
mov
mov
mov
and
xchg
lds
cwtl
cmp
mov
mov
ret
cmp
or
and
pop
or
add
fnsave
inc
fiaddl
jle
mov
mov
loopne
movsl
ljmp
icebp
add
ljmp
les
jbe
push
pop
xor
inc
pop
cmp
jecxz
fldcw
bound
push
mov
mov
xchg
and
push
fwait
clc
jp
cmp
fcompl
shl
cld
cmc
scas
jle,pn
stos
cmc
mov
add
or
je
mov
mov
pop
xchg
cltd
lret
adc
adc
xor
cmp
xor
and
inc
push
mov
addr16
fnstsw
xor
sti
xchg
and
test
xchg
outsb
lahf
adc
pop
mov
sbb
fwait
inc
mov
imul
xlat
dec
test
add
mov
xchg
adc
out
aaa
insb
fsubrs
jmp
and
in
sbb
jmp
jecxz
mov
jnp
cmp
mov
adc
int3
cli
lds
nop
push
pop
and
adc
sub
sub
xchg
cltd
lahf
mov
push
push
jnp
xchg
jnp
sahf
sub
jg
xchg
push
push
hlt
mov
mov
daa
inc
popa
dec
aam
push
push
int
mov
xor
push
cmp
vpacksswb
ljmp
pop
sbb
nop
call
clc
mov
out
ds
inc
loopne
imul
out
cmp
or
pop
sub
jmp
clc
cmpsb
push
xchg
mov
or
fmuls
insl
pop
sbb
mov
adc
testb
js
nop
xchg
xchg
adc
adcl
inc
repnz
cmp
cmp
jae
jle
testb
outsb
push
mov
fisttpll
ljmp
jp
stos
repz
mov
pop
aad
lods
loope
cmp
inc
shrb
lods
mov
inc
pop
lcall
xlat
cmp
scas
push
dec
jmp
in
mov
xor
ret
enter
dec
or
mov
xchg
cmc
call
incl
sbb
psubusw
out
dec
roll
or
and
addr16
loope
push
adc
jl
cmp
test
inc
sub
rorb
fistps
xchg
test
call
jmp
push
shrb
sarl
out
movsb
mov
imul
adc
cmpsb
iret
cmp
dec
pop
aas
cli
sub
repz
xchg
push
shlb
mov
jl
mov
push
cmp
add
and
hlt
sub
jg
adc
fildll
push
leave
stos
test
enter
pop
enter
dec
cmpsl
imul
dec
pop
cltd
enter
mulb
pushf
push
outsb
lds
movsl
inc
les
addr16
sub
imul
rorb
sub
fimuls
ljmp
add
fs
jae
ds
cmp
xchg
sbb
xchg
jecxz
jle
dec
push
mov
pop
adc
add
in
cmp
jo
sti
shrl
jae
aam
mov
mull
jl
pushf
loope
cmpsl
pop
out
scas
in
dec
aad
scas
pop
mov
xchg
push
jnp
sbb
jbe
cmc
movsb
insl
enter
ret
xchg
cmpsl
ljmp
add
jns
add
sbb
imulb
jl
imul
nop
mov
pop
in
aad
in
xchg
insb
pop
int
xchg
jbe
popa
mov
in
js
ret
lcall
imul
scas
cs
xchg
ja
jnp
lahf
std
cmp
sub
cmp
mov
mov
sahf
fistl
sahf
es
or
loopne
imul
push
sbb
fwait
sbb
adc
inc
sbbb
adc
les
xchg
outsb
pop
movsl
push
gs
xor
mov
xchg
pop
mov
cmp
jle
test
sub
and
jg
jp
pop
jp
js
dec
cwtl
pop
outsl
fidivs
inc
idivl
sub
or
ljmp
dec
ljmp
shr
cmp
sbb
scas
cmc
aad
clc
adc
fs
std
pop
arpl
les
mov
out
add
stos
pop
cld
cmp
push
mov
stc
push
insb
add
lcall
jg
mov
push
pop
mov
jge
mov
aad
cmp
jns
and
cwtl
shlb
mov
xor
dec
or
mov
repnz
stos
ret
mov
and
push
pop
repz
xor
mov
and
cmp
cmp
je
outsl
das
gs
adc
gs
movsl
lods
dec
adc
dec
imul
clc
xchg
sarb
roll
lahf
sub
and
pop
jmp
push
jmp
or
add
cmp
push
iret
pusha
dec
lea
jae
cmp
jmp
rol
xchg
std
and
pop
ret
sbb
add
jns
xchg
lds
lock
xor
out
lret
xchg
jno
inc
fimuls
mov
aaa
jl
leave
repnz
push
repz
dec
adc
popf
xchg
mov
repz
ljmp
scas
addb
mov
xlat
sbb
bound
dec
mov
dec
sti
outsl
scas
add
xor
aam
repz
fcmovnb
push
pop
and
mov
idivl
jb
cmc
inc
imul
push
in
mov
inc
ret
dec
adc
sbb
push
mov
jle
sbb
add
jl
push
mov
pop
shld
pop
push
push
out
dec
scas
push
jge
pushf
icebp
cmp
push
adc
xor
int
imul
mov
inc
and
mov
repnz
cltd
stos
push
xor
add
jg
mov
xor
lea
cmpl
jecxz
scas
faddl
mov
insb
fmull
add
pop
push
dec
xchg
nop
mov
jl
jno
jnp
pop
sub
xchg
sbb
jns
push
adc
cmpsl
jnp
test
mov
scas
mov
icebp
int
mov
adc
cmp
cmpsl
mov
push
adc
outsb
popa
cmp
test
push
lock
xor
inc
push
xchg
adc
xchg
out
mov
dec
stos
clc
and
or
aad
mov
mov
mov
mov
and
cmpsb
fwait
xchg
sarb
pop
dec
mov
push
xor
imul
sbb
movb
repnz
aad
ja
add
jp
pop
sbb
jge
cltd
sbb
lea
cld
loopne
ret
rclb
push
fwait
icebp
push
adc
jp
aas
sub
std
shl
sarl
lea
lret
movsb
xor
mov
pop
mov
mov
icebp
js
dec
or
daa
fimuls
std
cmp
adc
cmp
cld
mov
push
jno
lods
xlat
sub
dec
pop
lahf
pop
rcrb
andps
test
push
dec
push
pop
push
popa
ret
jmp
add
jb
cmp
jbe
shlb
push
nop
adc
add
outsb
pusha
aas
xchg
fmul
cmpsb
insl
jmp
test
and
je,pt
jnp
mov
add
pop
fdivrs
test
inc
jne
xchg
ret
jecxz
ljmp
jp
aaa
pop
mov
and
cli
fisubs
push
xchg
out
rclb
popf
inc
jno
dec
inc
mov
loop
fistl
pop
insb
sahf
xor
sar
sbb
lock
into
in
arpl
pop
mov
jecxz
inc
pop
aaa
add
std
movsb
fisubl
push
push
xchg
hlt
jns
testb
not
dec
jbe
sarb
cwtl
or
mov
mov
shrb
or
lcall
pop
push
sbb
cli
mov
psllw
imul
aaa
lock
push
add
cmp
cmp
push
aam
icebp
lods
leave
mov
xorl
test
mov
loopw
jecxz
decb
cmp
push
inc
xor
arpl
data16
rep
cs
lds
pushf
sub
jbe
or
out
int
es
bound
pop
push
cwtl
enter
outsl
mov
cmp
mov
push
push
inc
xchg
jl
js
mov
and
xor
loope
test
enter
movsb
mov
orb
sub
jmp
cli
add
sub
mov
cs
xor
pop
cmp
push
inc
test
xchg
je
pop
cmpsl
mov
jg
cmp
inc
add
idivb
jge
xchg
mov
rcrb
mov
inc
cli
push
fisubs
incb
mov
push
pop
es
shlb
cmc
lret
inc
xor
je
sbb
mov
cld
fnstcw
mov
enter
xchg
fwait
imull
data16
pop
push
arpl
lods
jle
push
adc
sahf
sbb
negb
cmpsl
mov
in
inc
cltd
sbb
jae
sbb
sti
jne
xor
xor
shlb
mov
mov
xor
cmp
testb
lahf
adcl
xor
inc
cmp
out
jmp
imul
pop
test
mov
jbe
int
lock
sbb
iret
add
and
shlb
xchg
call
loop
dec
jle
jbe
int3
push
push
jae
not
aas
pushl
sarl
dec
pop
mov
insl
pop
or
loopne
lds
mov
int3
fwait
adcl
lret
and
in
cmp
jecxz
inc
add
xchg
lcall
dec
in
pop
dec
loope
dec
adc
mov
pop
imul
pop
jge
fbstp
mov
jmp
or
out
lahf
aad
mov
mov
imul
cmpsb
loopne
mov
push
jmp
xor
dec
popf
add
inc
pop
pop
nop
xlat
dec
aad
mov
out
call
inc
loope
add
jg
jmp
ja
pop
pop
push
loopne
xchg
dec
enter
adc
shl
jecxz
mov
jns
cmp
mov
scas
call
mov
cmpsl
sbb
lods
adc
pop
stc
loope
out
popa
scas
rcrb
add
ljmp
shrl
push
out
and
mov
sub
cli
push
lret
sysexit
ja
mov
call
mov
dec
ljmp
leave
loop
movsl
stc
test
ds
push
jbe
pop
xor
jae
lret
push
fnstsw
mov
cmp
pop
nop
jle
xchg
push
sub
add
cmp
mov
push
imul
sbb
int3
fimuls
ret
dec
mov
mov
nop
inc
push
dec
in
inc
sbb
mov
movsb
jb
fdivl
das
icebp
sbb
aaa
inc
cmp
je
lahf
and
xor
cwtl
jne
mov
dec
jge
imul
iret
mov
pop
jl
mov
insb
push
inc
xchg
mov
mov
pushf
daa
rorb
adcl
test
or
add
andl
test
dec
lods
sub
lret
loop
loopne
loop
pop
or
jecxz
fs
cltd
std
outsb
inc
fs
or
cltd
fsubr
out
call
dec
inc
xchg
out
inc
lock
jl
mov
into
idivl
push
jecxz
fcoms
fstpl
xchg
insb
xchg
sub
into
inc
pusha
or
adc
inc
loope
push
ror
adc
insb
loopne
mov
cmpsb
jp
cmp
sbb
addr16
sub
inc
in
pop
mov
adc
lods
dec
lods
orb
cli
fisubl
fidivrs
xchg
cwtl
ret
push
outsl
adc
dec
je
or
xchg
aas
jb
pop
pop
push
jge
loope
pop
cld
mov
insb
jb
sbb
ror
clc
jns
add
pop
mov
or
pusha
mov
out
xchg
loope
xchg
ret
dec
pop
js
cmp
popa
pop
roll
add
jns
mov
out
pop
mov
jne
jecxz
dec
inc
test
cld
ja
lock
pop
pop
cmpsb
mov
jmp
mov
mov
les
lret
xchg
lock
lods
roll
aas
inc
ret
sub
mov
pop
dec
mov
jmp
xchg
pop
push
push
dec
fsubrl
dec
ret
insb
lcall
rclb
mov
pop
pop
pop
xor
jmp
mov
dec
test
xchg
lods
push
pop
das
mov
roll
sahf
jbe
mov
in
sti
mov
pop
adc
inc
lea
add
test
scas
xchg
outsl
xchg
dec
push
sbb
mov
or
fistl
jns
bound
push
lds
adc
xchg
jne
mov
das
pop
mov
testb
mov
dec
rcrb
lods
repz
lcall
lahf
and
addr16
xlat
leave
add
icebp
shrb
xor
stc
adc
ljmpw
mov
xchg
mov
sbb
xlat
sub
fsubs
fldcw
dec
cmpsl
xor
mov
jl
std
mov
outsl
arpl
or
xor
mov
imul
add
xor
repnz
roll
jnp
lea
xorl
sbb
mov
incb
xor
inc
sti
pop
cmpsb
pop
push
and
sub
or
insb
cmc
jp
fildll
xchg
ds
and
dec
stos
pushf
enter
adc
das
shll
std
mov
or
jbe
call
dec
out
add
add
sarb
xor
cwtl
inc
jb
cltd
into
jp
subl
push
enter
into
push
cmp
ja
push
pop
mov
add
mov
sub
aam
in
and
int3
imul
xchg
sub
push
add
lock
pop
adc
fyl2xp1
aad
stc
jne
fcmovnu
sbb
add
imul
mov
inc
and
lahf
aam
fldenv
stos
xor
je
sub
mov
add
push
jecxz
cmp
movsl
inc
lcall
pop
mov
test
je
fwait
pop
enter
and
inc
sub
imul
aad
lret
and
push
movsl
mov
add
add
je
dec
jae
sbb
and
fistpll
sub
pop
cmp
lcall
loopne
pop
test
sub
adc
cmp
pushf
leave
cli
push
gs
mov
sbb
adc
mov
ret
in
faddp
sub
outsb
lods
sbb
adc
or
iret
out
jg
in
mov
or
rcll
fildll
cmp
daa
iret
int
dec
cli
push
js
jns
idivl
pop
ret
dec
sub
sti
add
mov
cmpsb
xchg
lcall
fcompl
cmc
stc
mov
cmp
stc
fldt
scas
loopne
fcmovnu
inc
inc
movsl
movsb
movl
pop
imul
xor
insb
imul
daa
sub
arpl
popl
stos
popf
cmpsl
add
and
xlat
insb
jmp
push
hlt
sub
push
xchg
bound
stc
in
adc
and
out
xchg
loope
mov
fisttpl
mov
adc
pusha
pop
inc
dec
inc
pop
mov
cmp
pop
adc
adc
mov
into
and
icebp
jmp
js
lods
out
jne
fs
mov
or
pop
scas
aaa
test
inc
cmp
or
jo
icebp
leave
std
mov
in
aam
push
mov
mov
ljmp
mov
jb
or
xor
in
adc
fistl
pop
out
or
fsubs
andl
jnp
xchg
push
cmc
mov
jb
push
push
cwtl
push
xor
movsl
dec
cmp
shl
add
popf
fdivrl
in
sub
mov
cld
testl
cmp
scas
scas
rcrb
rcrb
and
push
or
xor
imul
dec
test
aas
fwait
shll
lods
aad
cs
ss
std
ja
setns
fwait
lods
shrl
xorl
repz
pop
test
repz
lock
push
mov
mov
mov
int
sbb
cmp
sub
das
cltd
xchg
cmp
fucomi
push
xchg
mov
int
lret
jae
aas
cmpl
mov
mov
out
fcomp
fwait
xor
jns
sbb
and
inc
test
ljmp
jl
mov
mov
add
fmuls
push
pusha
xchg
mull
ja
cmc
pop
sbb
and
fcomip
mov
fdivrs
repnz
fs
xchg
add
inc
and
sbb
mov
xor
mov
and
ja
fimull
sbb
fwait
push
jb
shlb
add
fbld
inc
mov
dec
mov
out
or
es
xchg
pushf
lods
mov
lock
adc
mov
notl
fcomip
xchg
pop
addr16
mov
lock
sbb
and
adc
and
arpl
sub
xor
lods
pop
lea
inc
mov
xor
add
mov
push
sbb
rol
sub
les
daa
push
pop
lahf
pop
movsb
stos
and
adc
push
sub
sub
mov
lret
ljmp
xchg
adc
and
loope
xchg
sbb
out
push
std
mov
je
mov
sub
cmp
jle
cld
jnp
inc
test
shlb
pop
pop
inc
das
push
mull
mov
add
outsl
push
sti
test
mov
mov
xor
push
mov
mov
cmp
stos
fxch
lcall
cs
sub
repnz
ffreep
mov
test
ja
sbbb
mov
ljmp
mov
test
push
inc
outsl
lret
ljmp
leave
xor
add
cmp
mov
or
pop
push
out
jle
lea
jecxz
sahf
adc
adc
dec
mov
imul
jl
cld
jb
jnp
out
cmpsl
cmp
into
mov
mov
in
aam
fimull
or
and
xor
pop
fldt
xor
cmp
or
subb
push
test
out
stc
or
adcl
jo
loope
xchg
mov
push
cmpsl
mov
lods
hlt
loop
js
xor
sub
sarl
aad
xor
sub
cmpl
inc
or
jmp
pop
mov
loop
shlb
fadds
push
cmp
or
mov
xchg
stos
mov
pop
push
ds
fcmovnb
loop
mov
es
push
lea
mov
icebp
call
mov
repz
clc
mov
test
or
mov
pop
lods
mov
xchg
jge
leave
xchg
xchg
lret
push
mov
inc
scas
gs
and
or
scas
int
test
out
ja
dec
in
adc
add
adc
xor
rcrb
mov
add
add
sbb
in
push
std
sub
out
scas
jbe
mov
xchg
xor
mov
adc
inc
arpl
pop
jo
and
mov
decl
repz
cmp
cltd
sub
mov
enter
lock
dec
insl
cmp
sub
nop
jmp
dec
push
jb
stos
push
mov
xor
das
mov
sbb
mov
scas
call
rolb
cld
mov
cwtl
and
jmp
dec
enter
adc
mov
push
insl
add
fs
nop
leave
mov
jb
adc
mov
jo
cmc
out
xchg
stc
fmul
push
add
adc
mov
hlt
aaa
subl
pop
scas
mov
xchg
test
push
and
xchg
or
enter
mov
add
int
xchg
xchg
add
push
mov
dec
dec
aas
jp
add
xchg
sbb
fchs
push
in
or
daa
jbe
and
jle
fwait
pop
sahf
or
fcompl
sub
icebp
outsb
and
stos
pop
loope
push
mov
inc
into
cmpsl
fs
pop
std
inc
mov
mov
mov
test
pop
test
icebp
mov
mov
xchg
pushf
mov
outsl
sarb
cmp
push
fdivs
mov
stc
xchg
jg
ljmp
pop
and
jne
push
cwtl
jge
adc
xor
mov
adc
gs
add
fildll
aad
repnz
mov
cs
insb
ja
or
pop
xchg
sbb
cmp
xchg
and
mov
lret
into
int
aam
je
gs
in
into
and
inc
lahf
int3
lret
ljmp
mov
rcrb
inc
insb
or
or
cmp
aam
cmpsl
and
sub
adc
dec
pop
fadd
jb
jecxz
movsb
movsb
cmp
arpl
jmp
fnstenv
or
jecxz
sbbl
ret
xchg
sbb
mulb
adc
jne
mov
in
mov
push
es
iret
inc
fs
jae
lret
cltd
mov
sub
adc
sti
xor
pusha
xor
cmp
lods
fisttpl
sub
test
and
cmp
loopne
js
pop
inc
insl
ds
leave
mov
pushf
mov
sub
xchg
pop
mov
inc
ficompl
sti
jmp
push
xchg
out
fistps
jmp
jl
arpl
out
enter
imul
lock
or
lods
insl
jnp
inc
inc
ror
testb
cli
pop
pop
sbb
push
jno
xor
jns
and
aas
dec
movsb
push
mov
arpl
daa
pop
mov
mov
int3
dec
lahf
push
jecxz
and
or
movsb
cld
and
test
call
xor
bound
and
les
stc
jne
das
neg
xchg
jne
jecxz
pusha
and
call
adc
mov
out
sar
cld
push
mov
aas
mov
xchg
rorl
jle
stos
or
movl
dec
mov
aam
sahf
pop
jo
out
mov
out
sub
cmpsl
imul
scas
mov
das
sbb
cwtl
or
sbb
sub
mov
mov
movsl
call
cmp
pop
sti
mov
mov
mov
testb
pop
gs
int
into
lcall
sti
enter
pop
leave
mov
mov
orb
cwtl
jb
into
push
shll
xor
loopnew
popf
sub
das
ret
add
pop
xlat
or
sub
cwtl
cmpsl
inc
test
stos
mov
add
pop
add
push
movsl
sub
xchg
lea
sub
push
test
popa
jge
gs
nop
or
or
gs
mov
xchg
inc
lock
adc
jp
shrb
and
fwait
paddsb
enter
xchg
shrb
out
adc
xchg
lds
mov
sahf
cmpl
inc
cli
push
stos
inc
or
xor
xchg
in
jg
and
xchg
scas
jne
movsb
push
pop
inc
jmp
mov
jg
cmp
sbb
xchg
and
jmp
ss
cmpsl
jb
iret
aam
shr
sub
sub
shrl
clc
push
inc
sub
sub
leave
sbb
adc
add
and
hlt
outsl
js
das
jno
sbb
int3
jo
pop
vmwrite
xor
xchg
inc
in
jg
push
test
das
sub
jl
gs
and
or
out
test
pop
out
test
fwait
insl
sub
pop
aas
push
jno
lcall
and
in
cmc
push
insb
fwait
popa
adc
mov
push
stos
mov
mov
movb
fsubrs
push
mov
or
xchg
lods
mov
shlb
mov
xor
jl
bound
fwait
sub
mov
testb
rcll
xor
repz
mov
fcomi
fnsave
das
std
jae
imul
leave
mov
shl
mov
xor
das
or
xchg
cwtl
xchg
push
mov
je
push
ja
inc
sahf
add
add
cmp
push
iret
inc
adc
lds
sub
lods
adc
dec
push
daa
mov
mov
jne
aad
loopne
insb
mov
pusha
inc
xchg
lds
mov
or
dec
mov
mov
cmp
and
dec
or
mov
insb
in
pop
xchg
dec
js
adc
sti
cmpsb
dec
dec
mov
rolb
jle
ret
mov
mov
outsl
xor
loopne
mov
push
xchg
pop
or
fucomip
jle
inc
or
jo
pop
adc
stc
loop
aad
mov
push
dec
out
pop
lock
dec
add
scas
lret
lret
fistpll
and
or
xchg
stc
adcb
out
fisubl
push
and
aas
mov
or
mov
mov
mov
aas
cmpsl
jno
lea
das
jne
mov
jg
inc
jns
adc
out
daa
add
inc
lods
sbb
popf
or
mov
mov
mov
cmp
shl
subb
pop
push
loope
xchg
pop
pop
mov
subl
and
pop
inc
lock
outsb
xchg
cmp
ret
out
das
inc
pop
rorb
pushf
int3
mov
push
inc
xchg
bound
ss
xor
divb
sub
dec
adc
movsb
pusha
adc
push
les
cmp
lods
dec
in
cmp
cmp
dec
mov
adc
inc
pop
fsubs
bound
test
xlat
xchg
xchg
dec
mov
rol
xor
das
stos
cmp
jb
and
imul
jl
repz
ja
shr
push
adc
dec
nop
push
imul
xchg
add
xor
xor
mov
lods
lret
and
add
sbb
push
stos
push
inc
pcmpeqw
jne
add
addb
dec
subb
sbb
and
lods
insb
mov
cmp
mov
sbb
es
and
ja
sub
xor
sub
aam
cmp
cmpsl
xchg
jmp
clc
test
cmp
pop
outsb
pop
test
stos
aad
or
push
stos
jo
mov
pop
jmp
sbb
adc
aam
incb
fwait
pop
dec
sub
sarb
data16
jl
dec
lea
mov
add
jl
push
shll
xchg
mov
mov
lods
pushf
inc
fstpl
movsl
adc
cmpsl
fcomps
out
imul
pop
cmpsl
fnstcw
iret
jb
xor
pop
sti
insl
fiadds
pop
mov
out
lret
xor
mov
cmp
adcb
xor
xchg
push
xorl
cmp
add
cmp
pushl
push
inc
xchg
sbb
scas
shll
jecxz
and
mov
mov
mov
mov
mov
cltd
nop
sarb
mov
cmp
mov
pusha
dec
adc
mov
push
incl
imul
scas
mov
push
scas
ds
cmp
leave
sti
cs
push
inc
sub
shrl
and
inc
adc
xchg
pop
inc
int
aad
inc
fwait
test
xchg
icebp
pop
lret
in
clc
in
pop
add
orb
and
jne
sub
cmp
adc
add
xchg
outsb
inc
mov
data16
sbb
rcl
repz
lret
shlb
rorl
ja
push
mov
sbb
pop
xchg
stos
into
jecxz
or
ret
jo
rorl
lock
js
jnp
sbbb
rcrl
xor
or
lods
subb
insb
inc
add
pop
mov
inc
jmp
push
xchg
cmp
mov
lock
jb
int
mov
movzwl
enter
or
push
adc
and
cs
inc
lahf
xor
stos
movsb
mov
mov
jl
in
push
addb
repnz
jge
or
sbb
data16
mov
fwait
test
mov
fstl
cmc
stos
adc
and
dec
pop
in
dec
sti
lret
add
ss
jo
adc
fbstp
mov
inc
fdivs
ret
or
xor
inc
push
xor
or
mov
cmp
mov
hlt
pop
arpl
fisubl
stos
add
push
mov
mov
fldcw
bound
fisubrs
xor
cmpsb
xor
ret
mov
icebp
lods
jno
test
lret
add
pop
mov
and
push
daa
ret
leave
fwait
repnz
lahf
dec
push
mov
fisubs
and
daa
add
aad
sarb
in
and
jmp
rorl
pop
cmpsb
aaa
xchg
inc
cmc
hlt
adc
jb
pop
pop
loopne
clc
data16
out
pop
stos
loopne
fnstenv
inc
add
stos
stc
rol
shll
push
jbe
mov
imul
inc
mov
das
ja
out
sti
negl
and
das
sbb
test
or
bound
mov
mov
and
push
aas
std
int3
cmp
mov
in
pop
in
push
repz
inc
xchg
jecxz
xchg
jbe
fistpll
and
sub
jg
inc
mov
jne
mov
ss
jmp
imul
addr16
sub
xlat
in
aam
mov
inc
xchg
mov
mov
mov
test
scas
add
mov
dec
sub
lds
dec
dec
scas
mov
or
adc
pop
cmpl
inc
ret
pop
or
icebp
xchg
dec
mov
push
fdivl
mov
pop
pop
xor
mov
xchg
icebp
push
lods
mov
iret
loopne
hlt
daa
sbb
pop
pop
ret
xor
jns
cmp
inc
ficoml
mov
sbb
repnz
pop
pop
insl
mov
daa
cmp
sbb
icebp
lret
push
cmpl
loope
call
arpl
je
data16
adc
popl
adc
jg
jmp
outsl
pop
in
pop
gs
test
lahf
push
and
cmp
mov
lahf
mov
mov
mov
mov
xchg
adc
stos
push
push
daa
ja
imul
in
push
aaa
xchg
lds
dec
int
nop
loop
pop
dec
mov
push
lds
repnz
ss
frstor
xchg
insb
cmpsl
xorb
xchg
mov
scas
adc
lods
jp
add
push
sbb
mov
jno
adcl
dec
lret
fwait
push
rclb
cmp
dec
add
filds
je
add
mov
mov
push
aad
cmp
pop
popa
pop
int
or
rcll
out
out
roll
sub
and
sbb
into
sub
imull
jl
push
push
pop
xchg
mov
out
adc
xor
xchg
test
mov
xor
pop
cwtl
lcall
xchg
repnz
shll
pusha
fidivs
dec
adc
mov
es
stos
xchg
cmp
cmpsl
ret
mov
bound
push
inc
or
loopne
and
js
push
movsl
push
mov
and
pop
sub
mov
test
inc
add
mov
fdivrs
sbb
mov
idiv
jne
int
enter
test
lds
call
ret
cmp
dec
sbb
xor
js
pop
add
and
in
dec
aam
je
jnp
inc
xor
push
mov
xor
mov
into
add
xor
stos
sub
pop
sbb
lods
outsl
cmp
mov
mov
mov
clc
push
add
or
call
mov
jae
popa
fwait
mov
xchg
mov
jg
xlat
adc
movsl
out
sub
repnz
aas
xchg
cmp
cmp
cmc
push
shll
sub
mov
test
mov
sbb
add
mov
imul
pop
lods
xchg
mov
jg
pop
notb
mov
dec
aas
int
jecxz
negb
adc
ja
test
shrb
sub
mov
rolb
cwtl
or
mov
clc
xchg
xchg
xor
lahf
inc
mov
icebp
inc
mov
inc
and
test
popa
or
adcb
enter
adcb
push
xchg
inc
test
xchg
add
dec
test
mov
sub
pop
shrl
xchg
sbb
imul
fwait
lds
andl
dec
je
xchg
in
inc
sub
in
mov
add
fdivs
jnp
xchg
repnz
jnp
out
adc
popf
orb
xor
testb
lret
out
jge
aaa
push
pop
mov
xor
pop
mov
in
lcall
cmp
sbb
adc
insb
test
sbb
fwait
inc
mov
lahf
sarl
clc
movl
push
arpl
lret
pop
push
adc
out
cmc
mov
ret
add
lods
mov
xor
scas
jbe
pushf
cmc
mov
dec
cmp
bound
xchg
jg
es
xchg
cmpsb
leave
repz
and
popf
aaa
xchg
xchg
mov
test
jl
ljmp
movq2dq
adc
dec
shll
add
pop
mov
pop
mov
rclb
or
pop
push
popa
mov
fcmovb
in
mov
push
jo
cwtl
push
inc
dec
mov
xor
inc
fwait
jno
mov
pop
add
mov
aas
lahf
jnp
int3
inc
shrl
cmp
pushf
mov
mov
lcall
sbb
addb
push
dec
jo
std
push
xlat
cmp
xchg
mov
xchg
or
xchg
mov
adc
push
outsl
call
out
outsl
out
or
les
cmc
adc
mov
jp
jecxz
int3
cmp
sbb
and
xchg
out
mov
add
xor
mov
push
mov
inc
mov
adc
xlat
jmp
push
das
xchg
movq
mov
stc
xor
lods
clc
mov
inc
sub
sarl
push
jae
insl
add
pop
xlat
call
enter
push
mov
inc
pusha
mov
ljmp
negl
jmp
dec
xchg
mov
xchg
iret
shrb
aad
inc
sub
ret
std
rol
add
inc
in
xor
cltd
sti
push
cmovo
shlb
mov
int
mov
lds
and
lcall
jg
call
push
subb
test
add
into
cmpsb
psubb
ds
outsl
mov
mov
dec
jne
xor
je
pop
cmp
add
adc
and
movq
jae
scas
pop
sbb
movsl
inc
mov
xor
mov
and
cmc
gs
test
dec
in
xchg
xchg
int
add
lcall
xorb
inc
push
arpl
mov
test
shr
clc
push
cld
negl
aas
jl
xor
outsb
xor
or
mov
push
mov
mov
xchg
dec
mov
dec
lods
stc
ljmp
mov
mov
aas
fwait
adc
das
sbb
jmp
sbb
fidivrs
subl
sbb
icebp
sbb
xchg
dec
cmpsl
pop
cmp
aas
fistps
mov
aam
jb
lods
push
inc
test
push
popw
ficoms
movsb
es
sub
mov
rclb
lret
mov
es
fdivrl
bsf
dec
test
cld
icebp
fsubr
sub
jle
jmp
gs
pop
push
xor
popf
lret
add
lock
pop
or
sbb
out
insl
rclb
test
into
out
add
leave
pop
mov
and
loop
adc
mov
xor
add
into
jp
rcrb
data16
or
mov
insb
mov
pop
cmp
inc
cmc
decb
scas
cwtl
add
or
mov
mov
add
jne
or
scas
out
add
mov
dec
adc
int
ds
mov
out
add
ja
ljmp
aas
jnp
out
shrw
xchg
test
mov
jnp
out
andb
add
test
sti
pusha
add
xchg
mov
pop
addr16
mov
push
fnstenv
and
jecxz
stc
dec
sub
rol
cs
es
push
jae
push
adc
mov
icebp
jmp
mov
mov
push
loope
add
push
mov
mov
fldenv
dec
fstl
je
xor
cltd
gs
or
insb
jo
jle
int3
jae
and
inc
xor
inc
xor
outsb
jb
jecxz
dec
inc
mov
pop
mov
adc
imul
adc
pop
mov
jb
cltd
imul
mov
dec
xchg
sub
or
mov
repnz
and
in
dec
lea
addl
cwtl
adc
sub
mov
rclb
je
popf
outsl
addr16
pop
int
lret
int
jle
jmp
into
mov
fstps
jae
mov
sbb
jno
jmp
cld
mov
pop
push
test
cmp
mov
xchg
inc
push
daa
out
clc
mov
scas
sbb
jno
xchg
dec
push
or
js
out
aas
cmp
push
adc
popa
int3
mov
sub
scas
xor
cmpsb
in
fisubl
loope
mov
orl
inc
push
outsl
mov
pusha
mov
addb
lret
lret
dec
cmp
addb
into
cwtl
dec
jo
inc
jnp
sbbb
push
xchg
aad
push
xor
inc
stos
push
notb
push
int3
ja
xor
jb
mov
fnstenv
add
imul
ljmp
mov
mov
mov
aad
ret
sub
sarb
xor
icebp
pop
cmc
pop
pop
jae
pause
ror
mov
dec
shrl
jecxz
fistpll
xchg
xchg
seta
stc
xor
xor
dec
dec
insl
cmpsb
inc
mov
fldt
fnstenv
lock
inc
jge
aam
push
clc
popa
sbb
mov
pop
fldl
into
aad
sbb
in
jecxz
enter
jo
jg
jb
movsl
xor
pushf
cmp
or
mov
add
std
xor
fwait
data16
adc
movsl
test
scas
xor
push
hlt
fisubs
add
outsb
or
in
adcb
mov
xor
dec
inc
out
push
sbb
jg
bound
ret
jns
xchg
pop
jns
sbb
in
xor
push
in
into
pavgb
or
mov
loopne
loop
fisubrl
cs
negb
mov
std
fcom
add
cs
pop
sub
jne
mov
mov
sub
shl
lahf
mov
adc
mov
xor
loop
in
push
es
cmp
push
mov
add
xor
rorl
daa
leave
inc
xchg
aam
xor
jbe
dec
imul
inc
in
mov
adc
jp
mov
sbb
dec
sub
ss
fcoml
xor
out
movsb
xor
add
mov
add
pop
call
and
and
lcall
in
jp
lods
add
pop
xchg
add
ljmp
xor
out
es
and
pop
cltd
sub
fstpt
inc
lea
jae
xor
add
sti
fsubrl
movsl
mov
divb
inc
mov
and
push
rclb
inc
xchg
pop
gs
mov
add
and
jg
lahf
vmovlhps
hlt
pop
je
in
shlb
in
and
mov
movsb
ficoml
jmp
mov
pusha
test
bound
fisubl
mov
add
mov
adc
mov
imul
pop
pop
lock
pop
mov
ret
ret
scas
aad
data16
cltd
fs
add
jno
hlt
loopne
mov
cmc
popa
push
adc
enter
add
dec
xchg
nop
xor
ficoml
bound
ds
imul
xchg
addl
jae
test
xchg
lods
out
add
out
mov
adc
cs
inc
and
pop
outsl
sub
fadd
mov
mov
lret
add
xchg
ret
mov
jne
sarl
pop
pop
sub
push
fildll
dec
repz
lret
and
cmp
lds
shl
add
cltd
cmp
or
nop
xchg
subb
in
dec
in
mov
mov
sbb
pop
pop
outsl
lahf
xor
pusha
xchg
cld
cmp
xor
aas
pop
pop
dec
ljmp
and
push
in
and
jp
mov
push
popa
cltd
mov
jg
mov
aad
imul
sbbb
cmc
insb
cmp
loop
inc
xor
insl
sub
mov
in
ss
jmp
movl
mov
mov
jmp
aad
inc
lds
divb
mov
out
mov
cld
loopne
pop
ja
inc
xchg
sub
inc
jns
mov
pop
mov
es
ret
ja
int
stc
icebp
popa
ficoms
lret
insl
mov
cli
xchg
repnz
je
cld
mov
cmp
inc
enter
jmp
and
pop
in
jge
inc
in
fldcw
xchg
das
lods
popa
pop
int
adc
jle
cli
hlt
rolb
or
lods
lret
addl
test
xchg
clc
inc
repnz
mov
fildll
lahf
mov
sbb
es
sti
bound
adc
mov
sbb
repz
clc
xchg
shl
adc
data16
dec
jne
mov
jp
cmp
mov
data16
sbb
mov
pop
fcomps
loope
inc
lcall
nop
data16
ret
fldl
jae
mov
sbb
adc
jae
dec
mov
pop
dec
cmp
cwtl
sub
stos
ss
pop
push
cmp
iret
cltd
xchg
xor
sub
pushf
leave
lods
pop
or
dec
ret
pop
sbb
gs
fwait
sahf
jmp
xchg
ficoms
inc
jge
dec
shrb
lock
data16
in
push
mov
bound
mov
cmpsb
cli
dec
adc
cmp
test
sub
sub
pop
ljmp
jbe
fiadds
aad
fistpl
nop
dec
pop
dec
cmpsb
aam
arpl
fnstenv
xor
test
ficoms
push
std
call
imul
xor
adc
rcl
and
mov
xchg
out
and
xor
add
sbb
jmp
aam
inc
data16
out
add
xor
and
jae
lret
inc
and
dec
leave
scas
stos
call
mov
jecxz
xor
sbb
int
cmpsl
push
jbe
or
dec
jle
push
xchg
pop
ret
test
int
mov
daa
dec
mov
bound
dec
mov
pop
popa
cmp
xchg
jp
sbb
popa
lret
pop
mov
fisubs
mov
inc
mov
into
jmp
xchg
test
pop
add
fldenv
sub
or
mov
repnz
mov
fistpll
shr
and
fcoml
dec
mov
jo
push
dec
and
int3
fs
insl
ds
mov
xor
stc
or
xchg
rcr
scas
push
shll
sbb
mov
testb
mov
xchg
loopne
mov
mov
test
pop
in
sbb
jge
lds
push
jmp
jns
adc
std
popf
aam
je
out
fldl
cltd
dec
inc
mov
lds
inc
lcall
jge
push
mov
add
pop
mov
cmpsb
ds
loope
push
into
decb
and
pop
int3
pavgb
mov
adc
js
or
jecxz
and
push
jle
and
adc
addb
xor
mov
nop
in
xor
adc
push
push
imul
xor
push
pop
dec
jae
scas
sbb
das
stc
and
imul
mov
inc
insl
sub
and
es
dec
fisubrl
fcoms
aas
jmp
sbb
dec
shr
cmp
adc
cmp
xchg
cwtl
repz
xor
mov
es
pop
dec
rorl
sub
mov
fmull
or
aas
or
cmc
pusha
mov
pushf
out
bound
test
xchg
mov
rolb
dec
jle
pop
xor
outsb
dec
aaa
or
add
mov
int3
or
sbb
mov
adc
mov
sar
dec
test
adc
and
lret
jnp
fucomi
or
mov
push
jns
inc
jo
pop
call
ret
sub
icebp
leave
call
into
shlb
cmp
stos
lds
orb
lahf
out
cmp
data16
jge
lahf
or
jg
xchg
insl
ja
push
stc
push
addl
jae
push
add
std
repz
subl
and
jno
xor
pop
xchg
and
sbb
pop
push
aad
outsb
movl
adc
stos
sbb
dec
xchg
test
xor
mov
mov
lock
iret
lret
pop
out
lret
mov
mov
aam
mov
rorb
adc
bound
and
lea
nop
sub
adc
lea
xchg
sub
js
sbb
cmp
daa
cmc
inc
add
inc
cli
jns
ret
fwait
and
dec
int3
ja
fs
out
and
sub
xchg
movsl
sub
xchg
lcall
hlt
jno
mov
or
mov
sbb
mov
pop
pushl
fildll
jmp
mov
mov
cmpsl
push
pop
iret
stos
jecxz
lods
in
mov
loop
jl
jne
bound
mov
mov
cmp
jbe
aam
xchg
adc
add
mov
push
les
adc
adc
and
jmp
or
xor
movsl
cs
repnz
sub
and
dec
xchg
dec
imul
adc
aaa
push
pushf
dec
mov
pop
sbb
dec
push
arpl
nop
or
push
and
gs
pop
repz
sar
data16
pop
jbe
adc
out
cmp
test
movsb
or
or
cmp
or
cmp
jnp
push
adc
sbb
fsincos
cmp
adc
clc
loopne
notl
adc
pop
jo
and
pop
in
xor
inc
mov
and
enter
mov
and
xor
sbb
ret
divl
subl
mov
xor
rcll
ss
add
sub
lcall
mov
cmpsl
ss
mov
sahf
adc
or
orl
pop
in
test
sbb
jecxz
stos
mov
or
div
js
faddp
or
aam
popa
fnstcw
mov
pop
xor
inc
mov
add
sub
lods
xor
mov
pop
adc
and
jg
fsubl
sbbl
push
pop
fdivrs
inc
or
push
aas
shlb
mov
aaa
push
mov
insb
mov
incl
scas
jmp
loope
adc
aam
fstpt
sbb
cltd
jl
mov
mov
jo
data16
and
push
add
ljmp
mov
mov
or
in
loop
jns
adc
ljmp
mov
out
das
jp
stos
pop
xchg
ja
pop
and
imul
jnp
pop
cmp
cmpb
mov
int
lock
in
push
mov
stos
hlt
cwtl
icebp
pop
cmpsl
and
cmpsl
xchg
loop
or
jo
mov
test
rcll
sbb
les
cmpsb
push
add
subl
add
test
xor
push
jecxz
stc
cld
dec
jno
imul
adc
dec
in
enter
jbe
jp
cmp
adc
orl
jbe
xchg
or
cwtl
lcall
dec
out
call
adc
stos
es
push
insb
fstps
in
stos
cmp
sbb
push
out
incb
sub
mov
inc
adc
mov
pop
repz
movsb
mov
xor
inc
cli
mov
shrb
fidivl
andb
stos
nop
sbbl
lds
xchg
popf
call
jb
imul
mov
sub
cmpsl
mov
in
inc
daa
ljmp
lods
fnstenv
das
sahf
sub
cmpsl
pop
rcrb
shl
test
jnp
loop,pt
mov
addr16
jecxz
push
mov
push
stc
ret
adc
aam
cmc
pop
imul
push
ret
dec
push
pop
int
fadd
jp
fwait
mov
and
cmp
out
loopne
je
outsb
cmp
scas
push
aad
loope
stc
es
jne
and
test
sbb
and
jo
inc
fsubl
xor
das
test
dec
xor
or
jle
dec
push
int3
out
in
dec
mov
test
outsb
xchg
mov
cltd
mov
add
ja
outsl
lods
fdivrs
sbb
or
jae
add
stc
jno
rol
sub
fmuls
popf
or
sbb
xchg
add
mov
mov
dec
mov
inc
dec
adcl
fwait
imul
inc
jbe
out
jbe
sbbb
aas
cwtl
pop
mov
inc
ret
sarb
jae
fistl
push
adc
test
and
mov
shll
pusha
icebp
jno
push
icebp
test
sarl
pusha
inc
xchg
xor
inc
les
leave
and
mov
pop
dec
rcl
arpl
mov
xchg
icebp
inc
test
aad
addb
jmp
or
mov
jl
fnstenv
mov
sbb
mov
hlt
hlt
xor
and
jge
mov
mov
push
or
jno
xchg
xor
cmp
mov
imul
mov
in
dec
dec
jl
mov
push
fisttps
fsubs
out
pop
jge
in
scas
loopne
movsb
in
dec
adc
dec
mov
repnz
sub
jp
js
or
mov
jle
fsubrl
cltd
push
cmp
cltd
es
fstpl
dec
out
cld
scas
or
push
int3
aaa
je
dec
mov
mov
sub
std
mov
cwtl
in
rorb
ret
mov
daa
lds
xor
jecxz
clc
pop
or
ljmp
aad
fisttps
movsb
pop
enter
popa
scas
or
jae
scas
pop
inc
loopne
dec
and
fs
ljmp
cwtl
fnsave
hlt
mov
decl
out
cmpsl
fmuls
jg
aaa
jbe
mov
insl
jecxz
cltd
pop
push
mov
psrad
mul
scas
cmp
jl
lock
je
aaa
aas
mov
bound
push
daa
mov
imul
ja
or
mov
xor
sub
out
push
fucomp
popl
or
call
sahf
xlat
aad
xchg
in
cmp
cmc
jnp
jbe
jp
jl
movsl
jne
adc
mov
sbb
jae
movsl
jae
pushf
pop
push
xchg
mov
fnstenv
sbb
push
pop
or
adc
mov
pop
es
js
cmp
push
or
sub
outsb
pop
mov
dec
and
or
xchg
jg
insl
jl
or
cmp
pop
aad
lcall
fcmovnbe
cmp
inc
sbb
dec
mov
loop
sub
pusha
bound
adc
scas
mov
cs
mov
insl
test
out
sbb
adc
and
insl
mov
pop
and
out
dec
add
sbb
mov
pop
or
dec
jge
mov
fs
xor
ja
pop
xchg
xor
fucom
loop
push
fstpl
push
dec
mov
mov
mov
out
add
insl
clc
sahf
mov
arpl
call
test
inc
aam
mov
mov
inc
dec
jo
les
repz
jp
mov
push
sub
jg
dec
sysret
pop
or
mov
lret
push
pop
push
xchg
clc
push
sbb
pop
jns
jle
lret
cmp
sbb
enter
call
sbb
mov
jl,pt
add
into
mov
aas
lahf
pop
loopne
mov
dec
and
cmpsb
sub
or
sbb
xor
push
xchg
pop
pop
daa
xchg
mov
sahf
pop
mov
cmp
out
mov
push
jb
adc
stc
ss
fsubr
pop
mov
and
rclb
mov
js
or
leave
loop
push
add
jge
imul
or
int3
or
andl
push
jb
pop
shll
pop
add
adc
xor
pop
mov
sub
addr16
mov
jle
adc
aad
test
lods
sub
mov
pop
lahf
jb
dec
cltd
jle
jmp
xchg
shll
insb
mov
pusha
add
into
stos
cmpsb
pop
scas
jbe
sbb
mov
jmp
mov
sub
jle
addl
or
out
pop
mov
sbb
inc
jecxz
mov
lret
into
mov
addl
lock
sub
cmpsb
testb
xchg
outsl
mov
xchg
mov
or
mov
dec
cmc
pop
stos
xchg
xchg
stc
outsl
and
dec
hlt
ljmp
mov
add
mov
xor
mov
addr16
leave
dec
adcl
xchg
push
addb
pop
aaa
pusha
movlps
xchg
stos
or
lds
dec
or
lret
cmp
stos
cmp
dec
pop
cmpsl
pop
test
mov
pop
in
sub
aad
insl
aas
fstp
jle
test
xchg
movb
sub
mov
and
pop
dec
xor
idivb
jne
push
lcall
outsl
in
add
adc
xor
push
mov
scas
sbb
pop
popf
xor
shrl
adc
push
sbb
jmp
mov
pop
pushf
arpl
ret
push
divb
fdivrl
push
adc
push
into
add
xchg
arpl
insl
les
inc
scas
daa
jo
pop
les
xchg
add
sub
mov
ret
cld
in
loope
push
adc
jne
fsubrl
mov
lock
test
sub
jne,pt
stos
jo
push
pop
xor
lods
scas
xchg
js
insl
jnp
xchg
and
xchg
adc
ds
scas
arpl
outsb
sbb
sub
ja
andl
jmp
int
jp
je
orb
xchg
sbbb
pusha
mov
pop
addr16
xchg
xor
inc
in
jns
fs
into
stc
sub
add
jnp
not
shr
call
or
jp
pusha
jbe
rcll
add
inc
ja
ret
nop
push
outsb
aaa
cltd
and
lahf
adc
push
frstor
arpl
dec
lret
xorb
inc
movsb
lret
mov
mov
lahf
cmp
in
sbb
cmp
mov
lock
push
push
sahf
mov
imul
lods
dec
outsl
mov
mov
xchg
xchg
fimull
ss
dec
cmpsl
and
mov
shlb
fimuls
and
sbb
fisubrs
inc
jmp
or
bound
sub
hlt
int3
hlt
dec
push
movsl
movsl
mov
and
scas
loopne
cmp
inc
mov
xchg
lock
sbb
inc
pop
mov
dec
dec
adc
xchg
push
fcomps
shlb
xchg
push
mov
push
push
rcl
jle
div
pop
cmpl
inc
cmp
xor
es
lods
mov
and
mov
fcomp
add
fwait
pop
ret
xor
push
imul
mov
pop
push
inc
pusha
std
leave
push
mov
adc
arpl
out
push
mov
out
fldt
cmp
push
xchg
mov
mov
sub
insl
mov
cmp
addr16
jge
icebp
idivb
and
mov
out
repz
sarl
dec
lds
addb
daa
movsb
scas
mov
mov
rcrb
aad
adc
xchg
jle
jmp
push
dec
les
sub
mov
cld
add
or
push
orb
add
sti
jecxz
ret
es
test
jo
push
repz
mov
xchg
xchg
mov
leave
push
repnz
pop
push
mov
int3
ret
icebp
mov
push
mov
imul
int3
ret
nop
test
jmp
pop
xor
pop
sub
fisubl
pushf
xchg
dec
push
or
mov
xor
dec
inc
idivb
stos
xor
pop
rcrw
and
xchg
add
lcall
adc
rolb
aam
mov
dec
push
jmp
loope
lret
aad
cmc
ret
add
movsl
in
push
out
nop
jo
test
xchg
mov
mov
divl
dec
popa
fisubrs
lods
cmp
ret
ss
mov
xchg
mov
push
or
inc
rolb
sbb
cmp
int
dec
and
ja
adc
test
dec
jmp
lods
push
in
mov
outsb
xchg
sbb
stc
push
add
pushl
out
pop
add
les
sub
push
fsubrl
lea
adc
out
lock
dec
pop
jb
push
inc
hlt
mov
or
mov
clc
adc
mov
daa
ret
out
cmp
sahf
int
mov
pop
ret
push
xchg
mov
ficoms
stos
mov
xchg
in
sbb
xlat
idivl
popf
mov
adc
jl
push
fistps
imull
inc
dec
lcall
xchg
cld
mov
pusha
dec
cmp
mov
sbb
mov
jp
and
test
lods
dec
clc
cmp
xchg
xchg
std
imul
lods
or
jecxz
int3
gs
pusha
inc
int
jg
sub
mov
mov
pop
add
sbb
xchg
in
scas
sub
sbbb
out
pop
inc
fildll
inc
xchg
adc
sub
call
cmpsb
mov
insb
lods
fdivl
data16
cmc
mov
pop
aas
and
dec
aam
inc
inc
mov
orb
push
ret
pop
dec
out
xchg
hlt
mov
xchg
dec
jle
inc
mov
lods
push
push
mov
cwtl
or
add
or
in
insb
xor
inc
cmp
loope
cmp
pop
add
cs
jg
outsb
scas
add
cmp
in
xor
in
xchg
xor
dec
negl
jnp
insb
and
mov
push
sbbl
xchg
lcall
shll
outsb
addb
and
ss
mov
pusha
and
ss
pushf
sbb
jns
pushf
lods
sarl
mov
adc
in
into
shlb
dec
test
xor
mov
mov
jge
sbb
fdivr
push
jp
inc
adcl
xchg
inc
push
loopne
sbb
mov
or
xor
xor
mov
mov
imul
mov
ficoml
stos
in
mov
sbb
in
cmp
adc
imul
adc
mov
int3
js
jne
movsb
ds
xchg
mov
inc
imul
jle
in
jg
test
imul
out
ja
jg
mov
in
push
mov
iret
arpl
mov
jle
popa
or
xchg
inc
insl
add
sarb
loopne
mul
mov
mov
push
sbb
xor
dec
mov
addr16
mov
mov
cmp
leave
loop
lock
fwait
sbb
adc
outsb
jle
xchg
test
inc
stos
pop
cmp
test
icebp
jb
lods
jo
cmc
test
or
dec
lock
scas
test
or
sub
jnp
addb
sbb
sub
fsubrl
or
inc
and
es
sub
shlb
fcmovbe
mov
jnp
jne
push
shlb
lret
push
sbb
jne
mov
test
xchg
xor
scas
ds
arpl
mov
xchg
aam
sub
xor
cmp
add
pop
lret
sub
adc
jo
rol
pushf
sbb
ficompl
pop
lret
test
xor
or
mov
dec
pmaddwd
mov
test
popf
out
in
test
inc
add
icebp
loop
shrl
repz
popa
push
inc
mov
push
test
xor
mov
int
and
loope
push
cli
movsb
test
gs
lds
sbb
hlt
jg
stos
adc
incb
daa
adc
xor
cwtl
fs
loope
xor
pop
and
xor
cld
sbb
xor
sarl
and
and
sub
enter
jno
cmp
mov
mov
jge
pop
or
icebp
insl
je
xchg
in
lds
sub
lea
sub
sbb
cmpb
mov
mov
in
fdiv
jbe
mov
cmp
adc
xchg
leave
daa
int
lcall
lret
jne
sbb
inc
bound
rcll
stos
xor
repnz
jae
pop
je
mov
adcl
pop
aas
psraw
add
pop
in
dec
push
cmc
push
mov
add
test
sub
shll
rcrb
sti
push
int3
cmpsb
aam
insb
dec
jno
and
les
stos
cmc
adc
mov
in
sub
test
shll
mull
ret
push
les
in
push
fbld
sub
cmpb
mov
cmp
pop
in
repz
jno
xor
jmp
cwtl
lds
dec
movsb
cs
lea
movl
imul
out
inc
mov
fadds
add
add
sbb
outsb
sub
jno
cmp
jnp
cmp
mov
jle
gs
hlt
insl
ja
mov
notl
jmp
jg
mov
arpl
sbbb
pusha
movb
loope
mov
mov
push
leave
dec
xchg
mov
jbe
jae
and
sbb
pop
inc
mov
jb
addr16
push
call
push
xor
insb
xor
pop
int
push
jo
test
or
mov
jecxz
cmovns
inc
inc
popf
daa
dec
fildl
outsl
rolb
jmp
push
push
aad
cmc
imulb
mov
mov
imul
pop
repnz
imul
xor
fiaddl
xor
test
sbb
fcoms
loop
push
fisttps
add
cmp
mov
push
mov
jge
push
dec
ficomps
aaa
adc
xchg
ret
xacquire
inc
imul
mov
decb
js
cltd
fistpl
cwtl
mov
ljmp
push
push
xor
outsb
rorl
xor
push
xchg
adc
test
out
daa
push
repz
jg
cld
insl
imulb
stos
inc
cmpsl
inc
ja
jb
popf
cmp
test
mov
push
xchg
sub
nop
outsb
add
inc
xchg
test
daa
mov
inc
xchg
sbb
pop
cmp
cltd
mov
dec
mov
add
mov
pop
daa
mov
or
lods
fiaddl
test
jecxz
in
outsl
lods
adc
fs
shll
aaa
ds
xor
nop
jge
cmpsb
dec
xor
jnp
popf
sub
and
fildl
fs
inc
cmpsb
jnp
mov
jo
das
sub
inc
in
cs
sub
adc
repnz
cmp
data16
int
adc
mov
jle
push
je
lea
or
das
inc
cmp
imul
or
aaa
in
jne
ficompl
adc
xor
pop
sub
mov
xorb
les
mov
std
pop
sub
iret
lock
std
cs
popf
mov
xor
imul
aaa
repz
and
or
lret
aam
out
aaa
dec
movsl
mov
andl
test
out
ret
xor
into
sbb
lock
mov
mov
or
test
stos
xor
out
add
lcall
xchg
sub
rorl
outsl
test
movl
enter
imul
mov
mov
dec
and
aaa
jb
mov
or
pop
enter
int3
sbb
add
cs
and
sar
lret
pop
push
std
jecxz
pusha
mov
push
rclb
xor
xor
mov
sarb
xor
pop
stos
and
sub
mov
ss
andb
dec
in
push
lret
push
adc
scas
cwtl
call
repnz
arpl
int
out
fcompl
movsl
or
dec
push
sbbb
lret
jl
mov
add
jmp
jp
mov
push
loop
cltd
push
imul
scas
sub
out
rcrb
insl
filds
xchg
lret
pusha
adc
test
ror
ja
test
test
xorl
cmp
in
lods
sub
popf
dec
inc
add
popw
rorl
jns
push
xchg
fcomi
xchg
std
mov
xchg
rcrl
adcb
lea
adc
adc
shlb
ret
test
adc
xchg
inc
push
test
lret
cs
aas
mov
inc
mov
dec
fcom
out
xor
and
sti
mov
arpl
xchg
cmc
adc
mov
add
push
mov
jge
les
xchg
jno
es
rcr
out
lret
jp
add
fwait
cwtl
ja
sub
mov
into
sti
scas
lcall
jmp
call
cmpsb
mov
jae
cli
cld
or
xchg
ljmp
adc
sub
add
push
addr16
xchg
into
aam
pop
xlat
pop
dec
sbb
fldcw
movsl
pop
dec
sbb
dec
inc
lahf
mov
pushf
add
out
cs
loope
out
and
push
push
add
adc
subl
mov
cmp
lea
pop
push
pop
or
adc
mov
icebp
testl
fldt
mov
imul
jl
leave
mov
ret
andl
test
ljmp
dec
push
cld
imul
xor
icebp
pop
sbb
fcmovnu
dec
mov
and
ss
in
dec
add
sahf
and
push
outsb
lsl
adc
cmp
repz
mov
xchg
gs
pop
pusha
xchg
daa
fildl
mov
out
sbb
xchg
mov
outsl
cmpsl
pop
xchg
shrl
je
mov
xchg
or
cmp
andb
adc
pop
jmp
jae
stos
test
jnp
out
adc
mov
jmp
push
mov
aad
addr16
pop
flds
test
mov
shll
ss
std
cmpsb
mov
cwtl
ds
and
xor
lcall
pop
xor
arpl
enter
cli
fstl
aaa
ficompl
shl
sbb
pop
out
fs
test
add
inc
fildll
cwtl
rorl
lcall
ret
imul
mov
cmp
jbe
out
dec
add
inc
shll
add
mov
int3
test
sbb
mov
insl
cmp
mov
jns
cmp
scas
fnsave
enter
pop
js
ficoms
mov
jp
cmpsb
fld
sbb
inc
jae
pushl
stc
mov
fisttpll
sarb
xchg
and
in
aaa
les
add
das
cmp
pop
test
sub
mov
mov
mov
and
lods
pop
mov
add
shlb
repnz
out
leave
jne
add
aaa
or
push
shll
mov
cmpsl
call
mov
add
push
lcall
clc
fucomp
faddl
shl
mov
iret
mov
sbb
mov
xor
aas
jns
out
imul
lret
orl
push
test
dec
es
mov
push
mov
cmpsl
xchg
dec
xor
daa
xchg
xchg
xor
scas
jno
out
sbb
xor
loope
mov
mov
sbb
dec
fchs
or
pushf
out
pop
cmp
mov
clc
jnp
adc
cmc
mov
xchg
std
jo
jg
push
pusha
inc
repz
push
bound
lret
arpl
xchg
inc
andb
in
mov
cmp
insl
in
or
aam
pop
stos
das
dec
adc
addr16
dec
fisttpll
and
cmp
jl
sbb
out
or
jp
test
mov
cltd
mov
push
pop
jno
movl
xlat
popa
xlat
lea
nop
dec
sub
test
mov
inc
pop
push
bound
adc
mov
mov
jae
out
test
insl
stos
aam
pop
add
adc
xchg
add
lea
mov
shlb
sub
test
pop
cmp
mov
imul
into
and
xchg
or
aam
insb
test
leave
popa
cli
sub
mov
loopne,pt
lahf
outsl
jl
or
jno
rcll
repnz
xor
int3
fimuls
cmp
dec
lcall
or
mov
test
dec
push
loop
hlt
jno
jp
lea
jecxz
sub
call
sbb
mov
jae
push
fldenv
cmp
inc
cli
lds
xor
lahf
frstor
jge
ffreep
fadds
push
mov
into
cwtl
repnz
hlt
xor
int
lret
es
mov
dec
mov
xor
and
int3
and
ljmp
and
push
cltd
std
xchg
cmp
rol
addr16
xchg
dec
in
or
jg
fs
mov
jg
and
dec
mov
xchg
sub
subb
cmpsl
pop
imul
daa
or
das
std
outsl
adc
imul
stc
mov
mov
cli
rorl
jae
dec
scas
adc
push
std
fmull
push
mov
inc
test
push
sbb
jne
ss
dec
data16
inc
cmpsl
pop
hlt
movsl
jae
dec
ljmp
cli
prefetch
fidivrl
into
les
addr16
cmp
je
sti
fs
insb
int
inc
cmp
out
xor
adc
xor
jnp
sub
out
xor
pop
jb
loop
jecxz
pushf
or
add
jge
aam
or
adc
stc
mov
ja
xchg
dec
sahf
mov
fiadds
dec
fwait
mov
lret
lock
das
popa
and
stc
inc
js
push
add
rcll
inc
outsb
fistps
xchg
pop
or
jbe
jl
add
or
and
std
stos
mov
cwtl
out
cmp
sub
sbb
ret
push
or
push
inc
mov
ret
pop
shll
pop
mov
inc
and
cmp
lods
and
das
pop
pop
inc
shl
and
insl
movsl
insl
jmp
xor
ficomps
xchg
roll
lret
push
xchg
mov
gs
insl
add
adc
les
fwait
dec
fsubs
loop
aam
shr
sub
fs
mov
xlat
pop
sbb
mov
mov
cmpsl
jp
sub
jae
inc
sti
inc
pusha
inc
xor
enter
mov
inc
dec
repz
adc
stc
add
imul
xchg
jmp
ret
in
mov
fsubl
or
jno
shl
data16
std
cwtl
stc
and
fstl
insb
and
xchg
jbe
mov
pop
jb
aas
mov
pop
mov
imulb
cmp
adc
lahf
jmp
ds
into
notl
idivb
repz
adc
mov
je
icebp
sub
mov
out
xchg
sub
repz
lock
pop
push
cmpsl
xchg
dec
clc
rcrb
push
mov
add
jno,pn
cmp
scas
rcll
test
xor
lock
and
sub
jmp
cltd
and
cmp
vmovd
xlat
shrl
cli
xchg
push
sbb
cwtl
loope
add
movsl
jno
cmpsl
add
adc
xor
lods
mov
andl
inc
int3
mov
sub
adc
mov
sahf
nop
mov
adc
sahf
iret
push
movb
and
xor
sbb
add
iret
push
pushf
into
mov
xorl
cltd
push
gs
adc
movsb
cmp
adc
adc
aas
imul
push
imul
pcmpeqd
push
mov
mov
fstpt
cmp
mov
jno
mov
sbb
xchg
outsl
jg
mov
push
push
adc
icebp
loope
mov
xor
pop
insb
cld
push
vpshld
mov
sarl
clc
mov
js
xor
icebp
jnp
mov
lret
mov
test
nopl
and
repz
pop
mov
sub
jp
cwtl
pop
and
cwtl
inc
arpl
leave
sbb
sub
jle
and
lea
lods
ffree
inc
add
idivl
jb
sub
mov
inc
xor
loopne
mov
add
rcrb
sarb
or
jmp
pusha
push
inc
cmp
fdivrs
jmp
mov
in
pop
pop
js
int
pop
lea
lods
mov
aaa
jno
mov
ljmp
popa
jecxz
jbe
fsubrs
loop
test
sbb
adc
pop
pop
je
adc
ljmp
pop
popa
call
daa
ss
arpl
dec
test
cmp
ret
and
sbb
or
out
push
pop
xor
lea
mov
xchg
mov
fwait
sub
jle
lret
or
xchg
lock
cmp
es
adc
sar
mov
mov
je
add
in
out
xchg
mov
fcmovnu
inc
int3
ljmp
push
add
mov
or
ss
mov
push
mov
aas
mov
jnp
daa
mov
xorl
cwtl
or
xchg
cmp
jmp
in
sub
pop
pop
xchg
add
mov
mov
in
xor
sahf
repz
fdivl
and
test
in
sar
repnz
jbe
jb
fcomps
cwtl
adc
mov
movsb
popf
or
or
fwait
daa
xor
pop
testl
add
fdivrl
aas
mov
dec
xorb
test
daa
repnz
incb
push
hlt
pushf
dec
shlb
adc
mull
lahf
mov
sbbb
clc
mov
cld
xchg
or
push
cwtl
test
or
in
cli
xor
scas
ja
jae
xchg
nop
fwait
nop
sub
ss
xchg
mov
adc
rcll
fwait
andl
dec
addb
mov
push
je
js
sub
inc
mov
sti
out
dec
pop
inc
sub
sub
mov
pop
rclb
int3
mov
cmc
xorl
aas
xchg
mov
push
test
cmp
push
lds
in
sbbl
out
std
push
repnz
sub
mov
adc
lods
push
add
pusha
jmp
int3
iret
sbb
fs
les
pop
sbbb
pop
jb
stos
push
movsl
adc
mov
test
mov
xchg
or
and
nop
or
xchg
jbe
outsl
sbb
push
inc
jp
stos
popf
jmp
out
add
js
jne
sub
xlat
roll
data16
push
cwtl
stos
gs
lods
dec
int
dec
sbb
mov
xchg
adc
scas
sbb
jl
insl
addr16
xor
std
jb
xor
mov
add
mov
xor
fmul
inc
add
dec
push
jno
cmp
xchg
push
pop
inc
push
mov
dec
in
xorb
out
bound
or
sahf
jne
jbe
pop
mov
push
mov
idivl
xorb
and
push
add
fadds
in
out
andl
mov
ljmp
lock
dec
loop
insb
push
mov
add
xchg
shr
pusha
in
cmc
in
mov
push
xchg
jmp
out
or
dec
inc
das
nop
dec
push
mov
inc
dec
jnp
jecxz
xchg
jbe
cmp
je
pop
jbe
xor
cwtl
inc
add
addr16
dec
imull
inc
or
ret
in
mov
stc
or
cmpsl
inc
aam
rcr
jbe
repnz
mov
sub
and
add
cmpsl
test
data16
loop
sahf
xchg
repnz
rolb
xchg
jge
or
int3
xor
and
inc
mov
ss
sti
jge
pop
push
jmp
push
insb
aaa
sub
repnz
mov
adc
pop
xor
cltd
push
out
jno
mov
nop
test
rolb
or
lahf
dec
outsl
xchg
mov
dec
push
inc
mov
xor
repnz
lods
mov
adc
fwait
mov
testb
cltd
add
sti
adc
cmp
add
cltd
and
lahf
mov
cli
popa
pop
movsl
xbegin
ss
sbb
icebp
cmp
pop
adc
jo
jl
sbb
add
mov
jmp
push
in
shr
insl
js
clc
call
sub
jnp
mov
xchg
xchg
push
and
dec
and
stos
mov
cmp
popf
sub
jmp
jg
cwtl
leave
mov
mov
leave
shll
rolb
insl
xchg
test
sbb
inc
fistl
test
adc
sbbl
pop
outsl
in
aaa
mov
sbb
scas
adc
xchg
popa
push
pop
xor
aam
cmpsl
loopne
nop
or
ja
mov
push
dec
adc
xchg
das
stc
out
mov
lods
add
add
xchg
cwtl
dec
daa
insl
jg
mov
stos
out
inc
cmp
fmull
sbb
cmp
popf
cmp
dec
and
cmp
inc
jg
call
jbe
std
test
ret
xor
in
push
fdivrl
out
pop
mov
orl
sarl
adc
loop
insb
hlt
gs
jg
or
sbb
ss
mov
shl
dec
or
aas
pop
stc
jle
out
in
pop
mov
add
push
movsl
shll
fwait
incl
xchg
mov
aam
popa
sbbb
adc
mov
and
in
rol
cltd
xchg
pop
and
je
daa
xor
xor
and
pop
push
sub
mov
push
jecxz
sub
addr16
je
cmp
jg
sbbl
mov
cmp
adc
nop
fcomps
in
popf
mov
or
add
out
sahf
pop
jg
jle
out
in
xchg
mov
das
dec
add
cwtl
fucomip
bound
pusha
clc
adc
outsb
mov
jecxz
repz
test
lcall
adc
cmp
mov
in
mov
popa
pop
xor
movsb
addr16
pusha
jp
fs
and
dec
jns
xchg
cltd
test
push
fcoms
sub
add
sarl
pop
outsb
cmp
andnps
lahf
stc
xor
insl
lcall
jge
insb
hlt
sub
xor
jnp
out
sahf
jle
jg
mov
es
es
adc
mov
push
xchg
mov
rcr
dec
movsl
sub
addr16
pop
inc
mov
mov
cltd
div
aaa
enter
dec
jne
repnz
adc
xchg
nop
xchg
gs
xor
pusha
and
pop
push
repz
cmp
rcr
jecxz
loop
sbbl
push
push
dec
aam
sbb
loope
adc
add
fisubs
add
adc
cmp
in
out
sbb
push
xchg
xchg
setle
lret
xchg
jb
leave
inc
cmp
aad
in
mov
pop
enter
sub
orl
mov
jns
sub
and
add
out
in
push
shlb
out
mov
loopne
test
xchg
push
inc
out
inc
push
xchg
cmpsb
lcall
scas
rclb
scas
pusha
xchg
addr16
or
push
stos
decl
dec
movups
stc
lahf
and
sbb
sbb
add
inc
stos
cld
push
xchg
ficomps
dec
int3
dec
daa
pop
scas
lds
insl
push
out
incl
jecxz
push
scas
adc
std
mov
dec
fdivrs
pop
aam
add
inc
mov
and
cmp
xchg
data16
sbb
jmp
cmp
or
jmp
mov
or
mov
imul
nop
test
add
aam
add
fsubp
pop
adc
fsts
loopne
addr16
xor
fs
into
rol
or
or
dec
cmpl
cmpsl
sub
cltd
push
ljmp
pushf
rcrl
jecxz
shll
pop
fdivs
repnz
push
add
scas
jmp
cmp
ss
idiv
leave
jge
inc
mov
pop
mov
inc
fistl
rcrb
and
rolb
pop
or
pusha
mov
xchg
je
sbb
int3
lcall
mov
cltd
lods
cmp
pop
lods
and
popf
dec
xor
dec
sbb
and
sti
lret
pushf
out
sbb
outsb
push
ret
mov
sbb
clc
es
or
arpl
nop
jne
pop
xor
push
lds
in
sub
mov
shlb
les
mov
ds
inc
sarl
xor
inc
mov
test
fcoml
jp
add
popa
data16
psllw
inc
sub
jecxz
cli
mov
mov
into
add
clc
add
fcompl
mov
icebp
pop
pop
mov
sbb
enter
lret
pushf
ss
aas
ljmp
xor
xor
mov
lcall
mov
jmp
mov
dec
pop
test
pusha
cltd
in
movsl
xor
out
jo
ss
sub
cmpsb
push
mov
or
fsubrl
adc
fidivs
mov
fldl
test
popa
jmp
inc
cmp
push
out
dec
mov
pusha
les
and
mov
xchg
ja
pusha
sbb
inc
ds
in
shrl
les
or
into
xlat
cwtl
or
or
adc
dec
jno
pop
loope
sub
insb
aaa
mov
cmp
loope
out
jmp
cmp
push
in
into
push
ficoml
aas
and
ss
or
bound
lock
mov
popa
and
cmp
adc
roll
cmc
addl
loop
push
movsl
aam
cmp
adc
adc
lock
lahf
push
aad
dec
adc
push
iret
js
rcrb
scas
or
xlat
cmp
mov
mov
repz
repz
les
mov
int3
in
push
aam
enter
push
mov
sbb
lods
lret
js
adc
mov
jecxz
icebp
cmp
ds
data16
pop
mov
fwait
and
outsl
add
and
sbb
add
sub
icebp
dec
cltd
out
shll
adc
cmp
push
iret
pop
dec
aam
pop
je
ljmp
lods
and
int
add
mov
jp
dec
fnstenv
rcl
imul
mov
sbb
push
nop
sbb
push
mov
adc
push
and
add
xchg
push
dec
nop
or
test
fisubl
dec
adc
push
mov
dec
gs
push
push
sub
scas
in
cmc
outsb
insl
lret
jmp
adc
movsl
dec
push
jle
ds
bound
ficompl
xchg
fcomip
jmp
push
xchg
adc
and
ret
or
cmp
dec
jbe
gs
cmpsb
sbb
push
icebp
mov
jns
and
lret
adc
movsl
addl
xchg
inc
lcall
or
adc
fwait
adcb
movl
rclb
lods
adc
loope
xor
jmp
pop
jns
mov
lock
cmpsb
push
lcall
or
adc
ret
aas
mov
sbb
cmc
jnp
mov
xchg
inc
out
jl
mov
data16
inc
and
bound
sti
ret
iret
sub
faddp
cmp
dec
sbb
push
movsl
ljmp
orl
xor
cwtl
pushf
popa
xchg
fwait
push
sahf
cmpsb
and
dec
mov
arpl
jno
das
or
hlt
xchg
push
clc
or
or
lock
push
pushf
inc
mov
mov
fcomps
jnp
inc
sub
and
pop
jmp
mov
inc
repnz
ret
add
je
ss
jmp
aam
cmp
dec
ds
and
dec
outsl
dec
repnz
inc
xchg
lret
je
adc
mov
mov
xchg
js
add
fs
jnp
repnz
cmpsl
test
xor
pmaxub
inc
xchg
push
add
rorb
cmc
mov
inc
pop
popf
mov
sub
lea
add
mov
mov
mov
lret
and
inc
xor
jno
insb
repz
push
decl
movsb
lock
ja
inc
dec
mov
xchg
add
cmc
mov
mov
push
and
leave
add
sub
clc
and
sarl
xchg
das
cmc
pop
adc
inc
es
pushf
aaa
f2xm1
push
jl
mov
sbb
sub
mov
test
stos
stos
or
bound
xor
mov
inc
out
adc
daa
mov
decl
or
jo
jmp
inc
inc
xor
in
pushl
cmp
sbb
mov
aad
rcr
mov
inc
inc
sub
shlb
pop
mov
enter
jne
fs
cltd
xchg
mov
out
push
mov
mov
jl
push
imul
mov
in
aaa
push
out
cli
int3
or
cli
adc
xchg
push
es
add
ret
xchg
das
decl
test
ljmp
jp
clc
push
jmp
ja
add
imul
inc
push
add
sub
mov
push
rol
test
jns
adc
iret
mov
cmp
adc
clc
scas
fmuls
inc
sbb
and
adc
mov
out
fldl
push
add
jbe,pn
jno
fdiv
inc
mov
add
pop
scas
jbe
pushf
repz
sub
jno
jno
xor
cs
stc
mov
inc
fildll
shl
stc
xchg
gs
xor
mov
cli
cmp
enter
loopne
adc
mov
aas
test
inc
mov
and
and
inc
loopne
cmp
addr16
dec
adc
jae
adc
in
and
push
mov
mov
xlat
shlb
mov
adc
cld
cmp
dec
mov
sbb
movl
xchg
push
mov
out
outsl
and
adc
loop
lret
push
push
lods
or
mov
pop
fmull
pop
rol
cmpsl
xchg
xchg
inc
mov
sbbb
fcomps
adcb
cld
add
int
jo
sbb
sub
sbb
bound
int
test
imul
xchg
mov
outsl
hlt
icebp
mov
mov
insl
out
cltd
mov
dec
cli
or
lods
out
sbbl
nop
and
scas
stos
mov
xchg
sahf
aad
add
xchg
scas
outsb
pop
mov
dec
movsb
pop
shl
mov
lock
jo
xchg
add
mov
mov
cmp
stc
cwtl
insb
mov
lcall
sahf
sub
imul
pop
or
lods
in
add
stc
mov
pop
dec
mov
jmp
xchg
fwait
mov
in
shl
mov
ss
sbb
les
in
sub
lea
or
iret
test
popf
repz
xchg
out
fldcw
mov
cmp
addr16
sub
iret
sub
lea
jb
in
dec
push
decb
lods
filds
aad
push
pop
lret
fidivs
push
loope
cmpsb
bnd
pushf
cwtl
pop
adc
stc
mov
xchg
mov
sahf
jl
out
inc
movsl
xchg
int
dec
mov
stos
fcoml
xor
add
inc
jno
cmpb
mull
inc
mov
fstl
xor
or
cvtps2pd
mov
xor
jno
cli
push
xorl
push
cmp
jp
or
mov
in
push
adc
dec
in
divl
jne
out
jl
or
aaa
pop
gs
scas
adc
sub
mov
jecxz
out
iret
ret
lea
push
inc
mov
add
jecxz
mov
mov
ficoms
add
cmp
scas
cmp
std
fsubrl
test
pop
lret
or
or
mov
inc
test
daa
pop
rolb
ret
cmp
into
jl
mov
jg
mov
or
call
lods
lea
push
push
arpl
loopne
jnp
clc
xchg
cmp
or
das
stc
fsubrs
push
mov
mov
js
and
test
push
movsl
rcrb
sub
push
test
scas
lods
loop
sub
adc
xor
fmull
or
es
lret
js
cwtl
mov
push
mov
mov
pop
and
inc
jae
mov
icebp
xor
pop
adc
pop
xchg
cli
jecxz
rcll
icebp
sarl
daa
mov
enter
cmp
adc
xchg
and
not
xor
xchg
pop
sbb
les
cs
push
pop
cmpsl
xchg
aam
sarl
mov
leave
aam
mov
add
jns
ret
imul
pusha
mov
sbb
pop
inc
mov
sbb
test
stos
call
xchg
sbb
out
lcall
push
fdivs
out
gs
xchg
add
aad
fists
jle
cmp
es
movl
lret
adcl
cli
les
fisubrl
sbb
mov
jae
mov
divb
outsl
inc
xor
pop
cmp
ret
dec
loop
loopne
sti
jns
dec
insb
lods
xor
mov
repnz
cmp
pop
enter
insb
les
mov
movsb
push
dec
cs
or
mov
cwtl
mov
cmpsb
jge
ljmp
outsl
or
inc
and
mov
sub
es
insb
insb
jnp
out
sub
cli
jae
cmp
sub
mov
lods
lea
bound
out
sbb
add
shlb
jl
xor
cmp
push
inc
popf
ss
popa
cld
fisubrl
xchg
fwait
out
inc
loope
mov
out
into
xor
xchg
adc
push
aad
mov
rcrb
cmc
bound
push
cmpsb
shlb
decl
sbb
test
dec
adc
cwtl
movb
subl
inc
cmp
out
fisttpll
in
fmull
fldcw
repnz
cwtl
std
leave
inc
and
add
xchg
test
cmp
imul
sub
pop
fcoms
sub
pop
add
dec
add
movsl
add
xchg
lret
inc
mov
les
cltd
cmp
cmp
jmp
sbb
imul
xor
call
mov
jecxz
loopne
subl
xor
jmp
pop
cmp
gs
cmpsb
mov
bound
setb
xchg
sbb
cltd
xor
loopne
dec
jae
xor
and
int
sub
pop
push
fmull
xchg
aad
inc
int3
stc
and
push
call
test
outsb
in
mov
loopne
xor
shll
and
cmp
sbb
insl
mov
mov
mov
daa
xchg
rcl
inc
push
cmpsl
mov
into
call
les
das
inc
xchg
stos
mov
out
push
cli
mov
in
enter
jae
sbb
cmp
dec
add
insb
cwtl
into
xchg
inc
sub
mov
clc
push
cs
bound
scas
mov
cmp
adc
mov
int
test
jno
movsb
fs
pop
inc
imul
or
ds
test
cmp
sbb
or
pushf
add
dec
cs
sti
add
scas
call
bound
imul
sbb
cmpsl
pop
loope
pop
pop
pop
out
jg
jge
insl
inc
test
mov
gs
xor
faddp
xor
adc
dec
jge
cmp
cwtl
pop
aam
jmp
cmpsb
sti
pushl
js
sbb
cld
das
jmp
add
xor
dec
pusha
or
mov
xchg
repz
insb
mov
sbb
cmp
mov
mov
enter
mov
icebp
in
jae
mov
icebp
mov
mov
sub
mov
cmpsb
pop
fldenv
jle
cmp
xor
ja
inc
lods
aas
ret
leave
aad
xor
aad
jno
xor
mov
cmpsl
es
xor
inc
xor
xor
jge
inc
int3
nop
add
lret
sahf
pop
imul
jl
les
ja
lods
dec
cmpsb
int
add
mov
pop
jb
je
jg
push
mov
cmp
test
push
jb
insl
call
inc
lods
aam
adc
or
nop
mov
test
lahf
movsl
jecxz
xchg
pushf
imul
or
and
pop
add
xor
xchg
test
or
jle
cmp
mov
push
sub
pop
lret
xchg
pop
push
mov
mov
mov
call
jge
into
ss
lods
lahf
icebp
rorb
or
push
add
pop
fisttpll
test
andl
sbb
mov
add
adc
add
int3
and
jne
loop
inc
dec
add
mov
adc
mov
pop
push
repnz
jge
clc
and
push
fstpt
push
mov
push
daa
test
cmp
out
test
mov
adc
outsl
mov
scas
ret
lahf
sub
mov
push
scas
faddp
enter
lock
std
iret
mov
in
mov
addl
loope
and
test
lahf
insl
jg
pop
into
mov
sub
cltd
lock
and
test
pop
stos
pop
dec
insb
test
call
into
mov
movsb
std
mov
sarb
loop
jno
adc
pop
inc
out
jae
test
pop
inc
dec
and
mov
push
add
mov
or
sub
jp
xor
pop
or
pop
cli
push
repz
lahf
cmp
sar
ja
lret
lcall
repz
fstp
mov
inc
scas
rol
xchg
dec
mov
cmp
or
testb
adc
scas
sbb
clc
stos
movsb
aaa
sub
scas
lock
add
fcom
rcll
add
lret
sub
add
dec
das
ja
push
addr16
mov
sbb
mov
mov
push
pop
arpl
or
repz
mov
dec
dec
pop
shll
test
fistpl
dec
jmp
clc
stos
data16
andb
ljmp
push
int
sbb
mull
ja
and
mov
fildl
adc
sub
xlat
fldt
decb
jne
loopne
aad
jns
and
sub
cmc
jle
out
and
out
and
mov
ljmp
mov
mov
shlb
ret
mov
rolb
pop
pop
mov
and
cwtl
outsb
xchg
aam
xor
imul
push
dec
shl
add
push
test
testl
movsl
subb
xchg
jbe
cld
es
ret
enter
mov
js
jle
sub
xchg
xor
cs
ss
outsl
add
lahf
or
lods
mov
xchg
mov
mov
movsb
shlb
mov
dec
mov
push
loope
jno
repnz
shll
imull
cltd
int3
inc
dec
push
aad
jae
push
mov
push
jg
stos
mov
int3
arpl
subb
leave
xor
mov
mov
dec
in
xchg
add
ret
mov
mov
push
mov
mov
push
lret
pminub
or
dec
jp
push
in
xchg
addl
xor
cmp
enter
jg
test
add
inc
outsb
ljmp
xlat
or
repz
cwtl
add
sub
sub
sti
in
aas
xchg
filds
and
loope
aam
xchg
testl
mov
call
rclb
xchg
sbb
jae
xor
dec
sub
push
cmc
fistpll
or
jl
aam
jp
xchg
les
push
and
sbb
inc
ret
add
imul
jno
jg
lea
dec
jp
mov
pop
xchg
dec
out
in
and
popf
sub
out
mov
pushf
hlt
jns
mov
pop
mov
xor
adc
hlt
das
xchg
adc
test
push
xor
mov
fidivrs
xor
sub
popf
mov
in
out
subl
lods
int
or
stos
and
ljmp
add
dec
adc
jno
push
pusha
cmpsb
insl
and
dec
mov
mov
pop
ja
push
push
ja
call
fildll
jae
push
and
push
mov
mov
lds
cli
mov
pop
shll
aam
lods
lret
jp
mov
inc
and
std
in
xchg
xchg
int3
addr16
push
jmp
pop
rorb
rorl
mov
dec
inc
pop
mov
pusha
sbb
movsb
xchg
call
mov
iret
aad
nop
stos
lea
outsb
addr16
mov
fadds
mov
orl
xchg
mov
loopne
mov
cmp
adc
in
rcll
aaa
inc
sub
ret
cmp
add
dec
pop
sti
inc
test
leave
push
sub
leave
sub
leave
jbe
popa
or
outsl
push
and
shll
add
sub
lods
shlb
lcall
je
xlat
je
nop
push
push
in
mov
inc
loopne
push
stc
jecxz
cwtl
inc
push
fistpll
inc
push
mov
xor
mov
dec
push
mov
std
inc
and
push
and
jge
adc
push
or
xchg
xor
rcr
je
loop
jle
pop
inc
dec
or
sbb
out
dec
jecxz
dec
mov
dec
xor
ret
or
sbb
clc
pusha
or
mov
pop
and
cmp
push
test
or
fistpll
int3
or
xor
stos
sbbb
aam
mov
add
insb
xchg
arpl
cmp
pop
mov
cwtl
xchg
in
pop
leave
dec
mov
scas
addr16
cmp
mov
mov
mov
mov
out
lock
jmp
addl
xorb
es
cmpsb
data16
jbe
mov
cltd
mov
pminub
sbb
fsubrs
cmp
sbb
es
add
std
test
mov
in
mov
push
or
mov
ret
iret
xor
ret
stos
jne
add
gs
insl
pop
or
jo
pop
inc
std
add
sub
out
scas
or
cmp
inc
pop
push
std
inc
xchg
cmp
cmp
mov
dec
push
outsl
icebp
xor
dec
stos
ljmp
pop
mov
push
fnstsw
fmul
xchg
mov
sbb
sbb
sti
jmp
outsl
push
push
int3
cmpl
pop
jae
out
add
mov
out
jae
mov
int
lret
lret
mov
jge
notl
and
insb
das
cmp
fwait
test
pop
inc
shlb
and
into
dec
sbb
cmpsl
mov
rol
inc
hlt
inc
in
sbb
cwtl
mov
subb
nop
fimull
roll
and
out
cmp
push
push
outsl
add
mov
std
push
push
push
xchg
aad
ret
lea
lds
cmp
stos
or
sbb
test
inc
add
test
rorb
loope
mov
push
stos
pusha
ror
sbb
mov
mov
lret
fidivs
dec
add
inc
outsl
mov
lea
nop
or
xor
adc
mov
mov
and
mov
ss
mov
xor
or
xchg
insl
sbb
push
js
sarb
sub
or
mov
xor
mov
sub
sub
xchg
mov
lods
int
or
inc
shrb
or
cli
in
xor
fadd
pop
add
sarb
pop
test
mov
mov
jae,pn
call
ret
int3
push
fdivrs
pop
inc
jne
inc
in
call
dec
inc
pop
mov
sbb
mov
push
popa
sbb
fnstenv
xchg
adc
rdtsc
jbe
outsl
rorl
push
enter
xor
dec
push
cmp
orl
pop
dec
pusha
pop
inc
jl
jle
mov
add
mov
add
sub
or
in
insb
outsb
inc
insl
mov
push
lret
jns
stc
es
adc
xchg
mov
mov
test
pop
cmpsb
sti
pusha
jno
mov
dec
xor
lret
xchg
cmpsl
shr
mov
push
sub
jnp
in
nop
push
dec
aas
adc
mov
push
rorl
push
push
adc
mov
data16
dec
jbe
icebp
jmp
xor
mov
xchg
push
cmpsb
and
jo
xlat
mov
jmp
adc
int3
mov
popf
les
int
ds
xchg
movsb
xor
mov
pop
out
je
repnz
rcrb
stc
add
cli
sbb
and
xor
test
and
cmp
aam
or
sbb
ljmp
and
jnp
cs
dec
ss
inc
inc
subl
dec
jmp
lods
pop
xchg
inc
ret
sbb
inc
data16
sbb
and
stc
imul
mov
into
addr16
cmp
push
out
inc
or
neg
into
lcall
dec
sahf
pop
loopne
mov
xchg
repz
sahf
mov
pop
cs
mov
test
fsts
in
mov
mov
pop
sub
push
fiaddl
ret
mov
mov
int
or
push
add
add
insl
inc
adc
mov
mov
mov
inc
popa
imul
push
xor
cmpsb
jg
inc
mov
lcall
cltd
pshufw
icebp
movsl
into
icebp
mov
cmp
mov
push
pop
mov
ret
pop
and
mov
std
mov
jnp
and
xchg
addr16
dec
push
sbb
pop
in
cmp
xchg
jb
stc
pop
aam
add
lds
mov
aad
out
push
xchg
add
pop
imul
xchg
stos
stos
ljmp
sub
mov
xchg
adc
dec
inc
imul
aaa
xor
pushf
das
inc
popf
sub
xor
or
jge
stos
pusha
popf
sbb
lea
andb
imul
dec
in
or
hlt
mov
sti
sub
pop
out
aaa
xorps
into
adc
out
mov
lret
mov
jb
dec
pop
xchg
and
loope
sbb
lods
out
add
repz
arpl
mov
dec
inc
roll
lcall
sbb
and
push
insl
repz
int
fnsave
arpl
fucom
test
push
stc
jnp
adc
jb
inc
cs
out
mov
sbb
sbb
stos
ja
push
inc
cmp
inc
dec
adc
mov
sub
push
bound
cmpsb
add
ret
test
and
pop
adc
jmp
sbbb
mov
mov
sbb
jb
packuswb
inc
insl
pop
in
aad
ss
inc
std
xor
inc
and
incb
mov
test
xor
lods
mov
rolb
sahf
test
xor
lds
jle
lods
rcll
jns
lods
inc
dec
addr16
mov
icebp
mov
loop
cwtl
in
pop
roll
ret
dec
fcmove
int
test
inc
popf
mov
inc
lock
ljmp
or
jb
movsb
je
in
ja
fdivrs
ljmp
pop
pop
fnstenv
push
test
idivb
xor
and
pushl
inc
sub
jno
call
ss
bound
lea
sbb
push
es
sbb
push
mov
cmp
out
aad
jns
fbstp
push
push
lcall
imul
sarb
or
fiaddl
and
sub
push
and
stc
inc
jbe
daa
pop
lock
pop
repnz
or
xchg
stos
or
fdiv
mov
inc
iret
movsb
cmp
push
mov
es
int3
jmp
push
jae
mov
sub
ret
jp
das
fwait
sub
and
clc
dec
ss
and
xchg
mov
xchg
xchg
mov
pusha
arpl
adc
out
cmp
inc
lret
pop
jb
std
shl
add
aam
imul
jge
pop
and
dec
push
mov
or
cld
push
daa
mov
iret
dec
lock
push
mov
fmull
das
add
add
fldenv
fstl
mov
mov
mov
pop
enter
shr
sub
loopne
popf
add
lret
push
xchg
xchg
inc
bound
loop
ljmp
imul
inc
nop
adc
xchg
and
arpl
xchg
add
sbb
pop
icebp
dec
mov
mov
mov
dec
xchg
sub
sbb
xchg
out
jbe
and
subl
cmp
mov
xchg
fidivl
test
nop
mov
or
xchg
cmp
cmp
mov
inc
add
cmp
pop
xor
dec
cwtl
jne
loope
fldl
cmp
mov
lods
shl
jno
int
cwtl
sbb
in
js
inc
mov
mov
and
jns
sbb
push
sbb
push
arpl
xchg
gs
xchg
ret
push
sub
stos
pushf
push
push
sub
push
ljmp
jge
in
xor
xor
outsb
xchg
sti
mov
adc
mulb
pop
out
xchg
cmp
push
je
fisttpll
sbb
cmp
push
loop
inc
test
lods
xchg
sub
arpl
iret
mov
xchg
or
pop
push
pop
add
fstpl
loopne
mov
inc
lds
sahf
mov
jno
pop
faddl
inc
push
sbb
movsl
pop
or
pop
xchg
enter
fs
jmp
push
aam
mov
stc
adcl
imul
je
inc
jge
adc
or
fadds
jo
out
sub
lahf
rorl
add
add
xor
mov
arpl
add
mov
jge
cld
cmc
ljmp
movsb
hlt
mov
xchg
add
mov
gs
fstl
ja
cmp
push
push
push
sub
sbb
pushf
test
imul
sbb
lods
sarb
aam
ja
sbb
push
mov
and
sti
test
xlat
push
test
jmp
push
outsb
int
inc
scas
shrl
pop
mov
movsl
cld
cs
cli
arpl
mov
pop
imul
lods
jl
sub
mov
je
frstor
mov
sarb
push
imul
inc
pusha
sbb
mov
loop
dec
or
lcallw
aas
and
cld
outsl
clc
cmp
cmp
xchg
out
jnp
jmp
xchg
xor
movsl
gs
add
in
movsl
pop
add
mov
xchg
adc
mul
dec
xchg
lods
in
xchg
pop
sub
frstor
inc
and
cld
fistps
arpl
mov
add
jnp
cmp
movsl
dec
mov
lea
sbb
dec
add
lcall
out
mov
xchg
decb
sbbl
adc
dec
xorl
fwait
push
sti
and
push
in
inc
jo
mov
push
push
and
test
jne
mov
shlb
popa
mov
jbe
lods
test
cs
bound
test
cmpsb
jo
int
out
xchg
pushf
add
es
push
pop
and
popa
test
and
add
inc
adc
cltd
or
or
and
pop
cmp
out
sbb
ja
sub
rclb
push
dec
into
xchg
movsb
and
or
xor
push
les
sbb
aad
xor
pop
push
dec
popa
pop
cltd
mov
add
dec
mov
stos
or
fwait
aaa
into
pop
mov
push
lahf
xor
sub
mov
or
cltd
nop
dec
inc
in
pop
jmp
xor
addr16
jge
int3
inc
mov
mov
cmp
sbb
cltd
mov
cmpsl
mov
sbb
fidivrl
loopne
popa
inc
inc
lds
hlt
push
push
sub
dec
inc
mov
lds
cwtl
rcr
stc
push
mov
jae
push
rorl
cmp
stc
mov
mov
into
in
das
movsb
mov
mov
pop
xor
sbb
iret
jnp
out
cmp
stos
jl
pushf
push
pop
jmp
sbb
iret
xchg
mov
in
push
enter
jb
ss
pop
jne
add
lret
dec
mov
pusha
andl
mov
in
cmp
or
dec
add
pop
sub
xchg
xor
inc
shll
mov
mov
xchg
pop
push
or
push
xchg
lea
call
insl
lods
rcl
push
jb
iret
jo
imul
xchg
mov
pop
sbb
and
jae
mov
decb
ret
je
add
dec
das
cmp
mov
and
imul
mov
xchg
mov
pop
repnz
int
bnd
jnp
ja
dec
mov
pop
or
push
fwait
pop
inc
mov
mov
mov
push
out
test
sub
sbb
pop
inc
pop
int3
ret
or
dec
ret
stos
mov
jecxz
testl
sbb
cmp
inc
mov
stc
mov
push
adc
push
inc
cmpsl
lods
sub
aaa
xchg
xor
push
pop
jae
out
or
adc
push
jmp
xchg
jb
shll
mov
cmp
lcall
fimuls
leave
dec
pop
jl
dec
sub
jno
ja
dec
testl
pop
pop
dec
cltd
out
mov
add
inc
mov
lods
mov
pushf
nop
or
fcoml
shll
fcmovbe
mov
ja
cmp
mov
call
push
cmp
inc
sbb
mov
scas
add
xchg
push
jl
inc
imul
ljmp
sti
mov
mov
dec
inc
add
scas
adc
movsb
mov
mov
jecxz
jmp
mov
mov
mov
or
ret
js
sub
ds
imul
adc
js
pop
cmpsl
call
stos
fs
aas
movsl
shrb
or
xchg
es
sub
xor
ljmp
movsb
nop
xchg
rolb
or
ljmp
sub
sub
mov
add
rolb
popa
ss
adc
xor
mov
dec
or
pop
repnz
in
ja
pop
mov
iret
es
mov
loop
pop
and
xor
inc
jmp
clc
mov
dec
repnz
rcll
loopne
jg
ret
lret
jle
sahf
jns
ficomps
cmp
adc
call
mov
das
and
ror
and
or
or
push
das
cs
insl
mov
dec
jg
je
lahf
dec
mov
mov
imul
xor
adc
fcmovne
scas
xor
movsb
xchg
filds
cli
dec
sub
lret
and
out
daa
dec
add
fists
add
sbb
sbbl
das
clc
imul
arpl
pop
push
ret
movsl
cmp
cmp
adcl
cmpsb
fucomp
mov
mov
xor
dec
scas
in
rolb
inc
and
lods
xchg
push
enter
mov
inc
jne
push
push
aad
add
jb
lods
jae
mov
icebp
lcall
ror
std
jge
nop
xchg
mov
push
cld
jp
ret
add
inc
movsl
sar
cmpsl
sub
test
scas
adc
into
mov
mov
es
std
popa
mov
aas
mov
dec
mov
cld
xlat
rcrb
jle
adc
nop
pop
mov
mov
icebp
in
arpl
mov
sbb
dec
gs
stos
push
xchg
lea
movsb
nop
push
pop
aam
cmpxchg
jg
lcall
and
dec
lock
ljmp
popf
and
ljmp
sbb
inc
idiv
xorb
push
push
add
jle
sbb
or
mov
test
dec
mov
inc
push
loop
std
pushf
arpl
inc
push
test
aaa
sub
and
pop
scas
rcll
adc
xor
fnsave
dec
cmp
dec
jno
rcrl
das
dec
test
pop
and
cmc
nop
jne
or
in
sahf
js
mov
sbb
fbstp
imul
sar
cli
movsl
lods
bound
mov
idivb
cmp
mov
sbb
adc
es
rcrb
call
jno
jbe
jmp
dec
arpl
hlt
sub
popf
scas
dec
rclb
in
mov
lret
sar
adc
xor
cmp
cmp
lds
or
and
add
fmull
in
sbb
gs
adc
ds
aas
mov
cld
movsb
sub
cwtl
inc
pop
mov
dec
mov
cmpl
jne
into
pop
pop
fcmovu
or
roll
bound
cmp
bound
adc
popa
and
in
gs
call
lds
mov
shl
jmp
sub
loop
or
sub
ds
or
lret
mov
xor
pushf
add
dec
sub
test
jae
pushf
addr16
jmp
hlt
cmpsb
jae
es
ss
pop
sbb
xlat
push
lret
xlat
mov
xor
or
in
loop
arpl
jo
push
push
rclb
lods
mov
lahf
xchg
int
xlat
push
add
jno
daa
int3
in
lea
dec
lods
shll
jl
push
cmp
in
ds
adc
rcl
test
sub
pop
and
js,pt
push
add
mov
or
leave
cli
xlat
mov
inc
mov
jae
hlt
imul
test
sub
or
push
cmp
push
or
inc
xchg
jne
lock
je
rcrb
loop
sbb
mov
pop
adc
out
data16
dec
adc
cmp
dec
ficompl
cld
lcall
xchg
iret
push
in
aad
cmpsl
or
mov
cmpsl
out
mov
xorl
and
shr
inc
fs
divl
out
jns
cmp
test
mov
out
jecxz
rol
pop
clc
or
or
or
sarl
sti
add
mov
mov
xchg
shll
lret
rcll
push
nop
push
fdivrl
test
mov
sti
cmpsb
or
lods
xor
mov
popa
jno
cltd
shr
sbb
scas
mov
jg
push
jp
sbb
mov
push
icebp
pop
jge
leave
bound
loope
adc
sbb
fisubrl
xchg
movsb
mulb
inc
data16
repz
sbb
sbb
push
jle
mov
pop
je
lret
sahf
lock
push
and
jb
push
inc
jl
lods
xor
dec
adc
popf
fmuls
je
cmc
cmp
mov
pop
jnp
popf
fs
fstl
sub
cmp
dec
addr16
sub
sarl
in
jecxz
inc
sub
or
mov
test
add
or
daa
mov
or
stos
mov
mov
insl
sbb
imul
dec
scas
pop
push
jae
mov
pop
data16
xchg
inc
xchg
inc
cwtl
int
out
lods
out
loopne
lea
out
pop
sbb
rorb
mov
pop
adc
sti
xor
mov
das
mov
inc
sub
stc
test
fidivrl
dec
cs
mov
cmp
jecxz
imul
lods
cltd
and
loop
fbld
sarl
inc
mov
or
cwtl
or
cltd
popa
jmp
in
push
ret
jae
int
stos
lock
les
sub
es
test
push
shrb
scas
or
mov
and
mov
sti
and
sub
jno
mov
por
sbb
cmp
jp
jg
mov
mov
rcll
repnz
push
sub
pusha
cmp
lret
test
sbb
mov
notb
les
or
aad
jae
xor
push
push
or
shrl
push
jp
inc
cmp
add
inc
in
sbb
cltd
fldl
sbb
test
sbb
jnp
rorb
addr16
push
push
cmpb
insl
pusha
jp
and
mov
xchg
push
mov
aaa
push
loope
iret
push
jp
idivl
xchg
ss
sbb
hlt
pushf
xchg
push
push
inc
stos
mov
jg
dec
xor
pushf
sbb
data16
sbb
push
sub
js
jae
xor
rcll
sbb
add
arpl
hlt
xor
mov
cwtl
dec
inc
xor
hlt
lahf
divl
subb
mov
arpl
cmp
xchg
xchg
jge
jns
aaa
shlb
jne
movl
xor
ftst
popa
jnp
stc
adc
les
lret
mov
shrb
es
fs
mov
outsb
or
popa
in
shl
movl
dec
xchg
dec
cmp
xchg
push
ds
push
jbe
cmp
in
jge
add
add
fadd
sbb
loope
dec
dec
mov
mov
test
mov
fwait
lret
mov
int3
adc
cmc
call
xor
mov
xor
je
negl
xor
lret
mov
push
pop
subl
imul
pop
jo
xor
mov
out
in
cmp
cmpsb
sbb
cmpsb
push
bound
mov
jg
fildl
pop
lds
jmp
retw
ret
mov
lcall
icebp
scas
mov
and
mov
xor
add
nopl
jb
push
ja
pop
mov
ss
push
decb
dec
sub
stos
lret
mov
jl
xor
mov
in
adc
jo
sbb
in
mov
pop
div
push
sub
sbb
jmp
cli
inc
in
inc
mov
push
jns
pop
jnp
loop
test
or
test
add
jecxz
and
bound
mov
lods
fiadds
int3
test
ja
push
pop
outsb
cmp
and
or
inc
insb
jnp
into
inc
jmp
jge
and
or
xchg
out
jne
cmc
dec
dec
out
cs
sti
adc
dec
sbb
push
cmp
pop
adcb
mov
jae
jnp
adc
data16
sbb
add
and
xor
out
jg
leave
xlat
scas
push
jp
je
mov
add
xor
sbb
jecxz
sub
test
and
dec
imul
sub
push
cmp
arpl
jge
mov
adc
xlat
scas
mov
pop
sub
iret
mov
out
clc
pop
loope
fdivrs
sub
cmp
cmpsb
enter
sub
dec
imul
add
aaa
push
je
cmp
subl
adc
cmp
and
cltd
push
lret
push
xchg
push
mov
pop
sti
jl
or
arpl
mov
mov
adc
testb
xor
rorb
jae
fsubl
dec
stos
mov
scas
fcomp
mov
add
or
mov
push
fcmovu
es
xchg
and
mov
loope
mov
ds
sahf
pusha
xor
pop
ret
into
icebp
mov
or
mov
jle
push
mov
lahf
inc
mov
jmp
stos
adc
add
mov
hlt
idivl
movsb
popa
sbb
xor
or
rcl
mov
and
lods
inc
mov
cmp
mov
sbb
scas
mov
and
stos
add
je
pop
mov
fcoms
sbb
mov
or
mov
mov
mov
testb
xchg
in
insb
lods
stos
mov
sbb
nop
int3
xchg
in
jp
cmp
sahf
jbe
scas
ret
cmc
or
cs
dec
adc
and
stos
add
cmp
mov
js
xchg
pop
lret
mov
mov
pop
pop
movsb
flds
out
push
mov
jne
jmp
cs
mov
cmpsb
xchg
push
adc
leave
shll
xor
mov
stc
fiaddl
cmpsb
mov
pusha
movb
sarl
fs
shlb
cmp
mov
xchg
sub
inc
or
and
icebp
inc
lcall
and
adc
pop
js
add
sub
inc
or
inc
adc
cmp
xorps
rep
jmp
ret
sbb
jno
push
arpl
daa
push
dec
fdivrs
mov
mov
lea
scas
cmpsb
cwtl
movsl
mov
leave
and
add
cmpb
jnp
add
inc
je
test
fidivrs
test
xchg
gs
and
pop
gs
jp
mov
scas
pop
out
mov
ds
lea
inc
or
inc
loop
mov
adc
mov
xchg
and
pop
jg
inc
pop
stos
dec
bnd
mov
sub
cmp
ljmp
lods
mov
subl
jbe
hlt
pusha
push
fldenv
popa
fbstp
mov
push
inc
xchg
push
or
fs
mov
mov
and
adc
mov
mov
jo
loope
jmp
testl
mov
mov
xor
insb
cmp
bound
cmc
lcall
dec
fstl
insl
movsb
nop
out
outsl
das
pushf
mov
pop
cmp
adc
ljmp
dec
inc
aam
fcompl
test
test
xchg
xchg
mulb
pop
fincstp
pop
xor
adc
pop
xchg
sub
sbb
mov
mov
je
jae
push
mov
hlt
sbb
xor
pop
in
out
push
scas
push
les
addr16
jge
sbb
adc
les
ss
jb
popf
jmp
test
scas
or
clc
ljmp
bound
jo
int3
lods
push
sti
push
repz
lea
mov
jb
pusha
icebp
adc
nop
mov
cmp
push
pop
xor
out
mov
out
int3
sbb
xchg
or
or
pop
subl
push
cmp
shrb
lahf
mov
mov
hlt
cmp
ja
subl
outsb
sbb
ds
lret
imul
jbe
data16
pop
fadd
dec
pushf
xlat
iret
push
push
push
xchg
add
or
sub
sub
or
mov
inc
xor
or
dec
mov
inc
sbb
xchg
push
cmp
mov
cmp
inc
std
ds
push
pop
add
aaa
inc
mov
call
push
rep
jns
mov
mov
push
rcr
mov
adc
out
addl
sub
mov
scas
lahf
out
mov
sti
test
fwait
inc
lcall
or
sahf
je
fnstsw
out
mov
dec
inc
mov
aas
pop
fnstsw
out
sahf
mov
jae
rcl
repz
jp
jle
jno
pop
dec
lahf
pop
dec
into
or
subb
xchg
dec
clc
scas
aaa
mov
rcrl
sub
imul
mov
xchg
scas
adcl
xor
mov
xchg
outsl
mov
loope
mov
mov
inc
pusha
pop
push
hlt
lea
movsl
push
dec
fsubrs
add
jge
inc
cmpsl
sbb
adc
lahf
mov
xor
int3
daa
and
cld
push
jp
xor
dec
mov
out
mov
icebp
mov
jmp
cs
xchg
push
mov
rcrl
mov
and
addr16
cmp
jl
push
es
and
jge
das
fcompl
mov
inc
sbb
cmp
ret
sub
int
stos
adc
int3
sub
mov
cwtl
or
xor
dec
cmpsb
mov
mov
push
push
xor
sub
in
cmp
es
sub
repnz
jg
jbe
jge
adc
mov
aam
push
sar
mov
cld
imul
loope
adc
jnp
push
in
mov
mov
xor
cmp
sahf
xlat
jne
and
divb
push
jmp
jmp
push
mov
iret
shrl
sbb
call
xchg
push
int3
jp
inc
test
dec
fs
fstpt
cmp
dec
repz
imul
pop
xor
pop
into
mov
mov
sbb
sbb
pop
bound
shl
repnz
sub
and
arpl
adc
cwtl
fwait
aaa
pop
loope
mov
dec
mov
sbb
pop
xorb
popa
add
cmp
cld
push
lods
inc
push
push
and
push
sub
std
jne
inc
je
popa
ret
ret
pop
fistl
add
or
xchg
cmp
push
add
dec
add
call
aaa
hlt
xchg
stos
cli
jge
xchg
ret
pop
out
jecxz
jbe
mov
and
xchg
loopne
movsb
test
adc
push
enter
or
sbb
rcl
add
jae
jno
push
mov
push
jl
pusha
mov
push
repz
ret
loop
enter
pop
fwait
xor
gs
outsl
rcrb
sbb
mov
cld
xor
xchg
adc
adc
outsl
push
cli
push
inc
iret
pop
dec
divl
out
mov
sub
fbstp
lahf
or
xlat
dec
pusha
push
pop
stos
xor
push
or
insb
pop
xchg
inc
sahf
shrl
aam
or
cs
mov
lea
push
sub
pop
mov
jle
int
inc
das
pop
std
fs
hlt
mov
stos
sarb
jnp
je
aas
in
negl
or
push
mov
dec
out
and
shll
rep
jnp
mov
outsb
sysexit
pop
and
lret
into
adc
pop
mov
ljmp
addr16
sub
sbb
push
mov
fistpl
dec
les
test
fisubs
jl
jecxz
fdivl
mov
pop
aaa
sbb
adc
fs
loop
mov
mov
jne
loop
pusha
test
pop
into
add
sub
outsb
out
ljmp
ret
and
jnp
bound
xchg
movl
jl
lea
in
xor
mov
add
or
inc
stc
pop
jno
add
add
aaa
pop
pop
cmpsb
mov
jno
popf
int
scas
push
mov
lahf
loop
dec
stos
xchg
push
fadds
and
stos
mov
shrl
jae
inc
loope
enter
xor
hlt
test
push
jmp
aad
imull
dec
mov
fwait
cs
mov
or
aad
inc
icebp
adc
imull
xor
fdivs
cmp
dec
ja
aam
das
mov
repz
psadbw
dec
leave
idivl
cli
adc
in
mov
xor
cmpsb
xchg
stc
push
dec
andb
cmc
js
push
sbb
aam
ds
loopne
sub
fsub
lds
out
sub
inc
test
push
enter
fists
sahf
out
es
daa
pusha
push
outsl
push
scas
ss
inc
out
cmc
pop
or
aam
xchg
decl
mov
mov
push
icebp
jmp
rcl
push
in
shrb
pop
and
push
test
inc
adc
cmp
scas
lea
dec
leave
or
inc
cwtl
pop
std
femms
push
inc
imul
pushf
in
scas
push
aas
lret
test
lods
iret
sbb
cmp
mov
movsb
daa
cmp
es
mov
lods
cmpsb
sahf
fcomps
mov
cwtl
push
iret
shl
jno
jns
int
mov
jmp
push
cli
xchg
mov
jp
stos
pop
scas
fisttpl
add
jecxz
xor
push
xor
stc
adc
test
rolb
fwait
outsb
lea
jns
movsl
push
lock
shlb
shr
mov
lahf
xchg
xor
aaa
shrl
cmp
ret
xor
sbb
adc
rcrb
call
jecxz
or
pminub
xchg
fs
fwait
inc
xchg
in
push
ret
mov
xlat
and
popa
test
loop
outsb
out
jb
mov
push
mov
mov
jg
pop
out
out
adc
add
or
mov
mov
push
cmp
sub
daa
loopne
pop
lcall
xchg
mov
xchg
cmp
mov
pop
jno
test
repnz
xchg
mov
cmp
jns
sub
sbb
rcrb
push
cltd
xchg
test
push
pop
push
push
push
push
rorb
repnz
aad
leave
sbb
iret
jecxz
setno
aad
push
jo
adcb
inc
daa
xchg
stos
pop
inc
sbb
or
add
inc
pop
or
mov
fmulp
loop
mov
sub
jnp
lods
pop
add
mov
add
mov
fwait
ss
ja
je
push
roll
stos
std
test
pop
in
jne
js
nop
cli
out
ret
or
dec
cwtl
xchg
jmp
loope
jl
rcll
into
jno
mov
movsl
jbe
adc
fdiv
pop
jnp
mov
aaa
insb
das
sub
jne
dec
daa
test
lcall
push
pop
inc
outsb
mov
fcmovu
dec
popf
push
xchg
and
or
inc
and
jno
xchg
cmp
jbe
xchg
pusha
and
vstmxcsr
jo
sbb
pop
push
sbb
loop
lea
dec
loop
fsts
mov
and
imul
xchg
rorb
xor
inc
xchg
pushf
fsubl
hlt
repz
jo
pop
inc
repz
adcb
test
dec
xchg
shlb
pop
inc
ret
mov
dec
lock
stc
mov
arpl
rcrb
add
in
leave
mov
je
mov
movsl
dec
and
fdivr
push
mov
xor
pop
stc
shr
push
frstor
cli
dec
dec
xor
sbb
in
in
fisttpl
sti
je
and
test
lock
jmp
fstps
mov
cwtl
das
jge
fnsave
pusha
dec
bound
dec
bound
fnstsw
sbb
stc
push
mov
aam
jl
adc
fmuls
inc
xchg
addr16
pop
adc
sbb
dec
pop
js
mov
or
pop
pop
inc
xchg
sub
jne
push
rolb
and
idivl
mull
inc
xchg
xor
xchg
sub
jno
jl
cwtl
sbb
gs
es
and
lds
js
decb
add
mov
cwtl
push
mov
jge
jbe
mov
sbb
and
add
pop
jg
xchg
and
addr16
stc
fisubrs
xor
arpl
xor
sub
jge
and
mov
idivl
iret
jp
cmp
sahf
mov
jno
mov
jo
dec
bound
lcall
data16
xlat
mov
and
loopne
xchg
adc
test
and
push
or
ret
mov
pop
dec
int
int
mov
testl
add
push
fwait
jle
add
dec
data16
mov
ljmp
add
out
sbb
test
ret
jp
inc
dec
xchg
lods
dec
xor
sbb
or
xchg
gs
pushf
jae
jp
push
add
repz
mov
cmpsb
popa
cmpl
xor
adcb
mov
mov
mov
pop
mov
in
fdivrp
adc
sbb
jge
sub
jo
call
adc
add
stos
test
jbe
adc
enter
out
push
mov
lcall
jns
xchg
in
add
js
xchg
lods
test
scas
loopne
iret
addr16
stc
mov
enter
or
loopne
fpatan
xchg
cmp
xchg
and
lret
dec
pop
aaa
or
adc
push
xchg
push
jp
mov
rcrb
mov
hlt
fcomps
push
add
xchg
aad
ficoms
sub
das
pop
lahf
stos
in
xor
loop
rolb
jle
loope
in
pusha
lock
push
jb
cmpsl
leave
jge
insl
push
fstl
mov
add
movsl
dec
je
pop
mov
pop
movsl
xor
subl
ljmp
loop
in
xchg
cltd
mov
out
or
aas
cmpsb
push
jo
sub
lahf
xor
jle
aad
ds
cmp
ret
aaa
add
mov
push
sub
psubusb
add
lret
sbb
xchg
mov
push
jecxz
leave
xchg
mov
inc
test
daa
fisubrl
pop
and
cwtl
xor
sub
mov
notl
dec
into
push
enter
bound
lock
mov
inc
push
int
mov
lock
inc
fldcw
cs
pop
mov
loopne
push
xchg
enter
xor
out
jne
stc
xchg
pop
imul
inc
shll
out
popa
loope
ja
adc
outsl
lods
fsubr
subl
mov
test
sbb
insl
sub
cmc
jge
mov
mov
pop
cmp
dec
or
adc
jns
fisttpl
pop
andb
es
outsb
add
je
enter
sub
mov
dec
jb
adc
mov
lock
leave
add
sub
lods
sbb
outsb
mov
sub
push
mov
iret
jae
push
fwait
fs
scas
jo
fwait
sub
xchg
add
jns
aaa
push
xchg
lret
lahf
insl
mov
testl
mov
pop
mov
fnstcw
pop
loope
add
cmpl
mov
xchg
xor
pushf
js
sbb
mov
and
pop
push
and
adc
jns
xchg
xlat
stos
xchg
mov
mov
cmp
mov
aad
push
test
lcall
repz
lds
lret
cmpsb
mov
sbb
mov
mov
mov
js
inc
sar
rcr
cmp
mov
lret
sub
mov
inc
lods
sub
sub
add
and
or
cmpl
xchg
or
mov
cs
jno
cwtl
ret
jle
mov
dec
je
xlat
jecxz
popa
mov
std
nop
lods
xor
test
add
test
dec
xchg
xchg
jg
ljmp
jecxz
or
ljmp
insb
fnsave
loope
std
adc
and
out
mov
test
add
push
repz
lods
insb
fcompl
pop
add
xchg
sub
inc
mov
ror
shlb
dec
pop
ret
pop
dec
das
stos
lock
mov
loop
adc
mov
push
sub
add
fwait
dec
mov
sti
dec
cmpsb
mov
jo
sub
inc
popa
jae
mov
xor
and
dec
hlt
mov
push
movsl
mov
out
mov
cmp
popa
ret
and
add
push
xor
gs
lods
or
jmp
out
sahf
dec
mov
mov
xchg
push
pop
std
jge
fistpll
xchg
arpl
loop
mov
in
xchg
subb
cli
arpl
psllq
sub
cwtl
push
lcall
push
fdiv
sub
cmp
hlt
mov
push
insl
sbb
inc
inc
lcall
loopne
sub
call
ljmp
sub
imul
test
xchg
lea
inc
inc
divb
pushl
out
pop
fs
xor
push
mov
mov
sbb
movsl
gs
imul
push
xor
sub
and
mov
push
xchg
push
push
jns
sbb
fmul
sbb
dec
ret
xchg
adc
aam
pop
pop
stc
test
xor
inc
test
data16
inc
idivl
push
and
mov
je
push
pushf
dec
jle
jno
into
fidivrl
aam
push
and
cmpsl
out
xor
pop
movsb
cli
push
xchg
scas
mov
hlt
xchg
or
mov
push
cmp
fwait
and
xchg
push
jb
jp
pushf
out
flds
sbb
dec
je
pop
std
hlt
mov
hlt
scas
mov
fstl
out
lods
xchg
imul
fdivs
inc
repnz
std
cmp
adc
sbb
xchg
pop
cmp
cs
idivb
sahf
repz
lea
aad
cmc
mov
ds
add
shlb
fs
mov
jo
xchg
mov
movsb
cmp
jne
out
mov
inc
sub
inc
jnp
mov
mov
mov
movq
test
adc
bound
and
pop
adc
mov
popa
sub
clc
scas
pop
sub
mov
inc
cmp
je
shlb
sub
scas
and
iret
mov
aam
mov
call
or
inc
fistl
inc
js,pt
push
testl
fcomps
adc
idivb
into
xchg
dec
mov
pop
shll
and
mov
xor
arpl
add
jo
in
icebp
add
int
pop
adc
mov
push
pop
adc
xchg
out
ljmp
and
call
int
mov
stos
leave
pop
push
lcall
add
nop
orl
or
test
or
insl
sbbb
xorb
xchg
lcall
sub
fstpt
iret
mov
lret
xor
pop
mov
cmpl
loop
jge
inc
lahf
lds
loop
std
mov
movl
sub
cwtl
cld
jl
int
cli
mov
jae
es
insb
inc
xor
push
and
and
xchg
ds
movsb
xchg
and
xor
mov
repz
icebp
cmp
enter
lock
push
add
xor
pop
jge
enter
das
outsb
dec
icebp
test
rol
stos
pop
arpl
flds
in
fstl
inc
jo
jnp
std
mov
clc
inc
dec
xor
push
xor
mov
ja
push
popa
data16
outsb
pop
addl
stos
xchg
mov
pop
xchg
fsub
mov
int3
pop
cs
add
popa
lret
sar
or
dec
fsubp
ret
inc
insb
js
fs
fmull
and
xor
add
xchg
mov
fwait
loop
cmp
cmpsb
fcoml
lods
aaa
cmp
fldl
add
push
jne,pn
out
popf
scas
fs
scas
add
rcl
cmp
into
mov
and
ja
jno
mov
add
mov
xchg
pop
push
cmp
data16
std
add
insb
xchg
lret
ss
add
add
pop
movsb
std
jo
out
mov
mul
popa
pop
pushf
and
adc
adc
popf
call
cmpb
jnp
xor
aam
mov
lds
fs
mov
pop
imul
cltd
fwait
xchg
push
fadd
pop
outsb
les
mov
push
inc
sbb
fsubs
outsb
lock
out
mov
into
leave
lret
jo
jo
cmc
and
pop
data16
or
into
sub
mov
mov
in
leave
jb
iret
adc
js
sub
inc
push
scas
jbe
sub
ds
push
add
mov
push
xor
frstor
fldcw
mov
mov
or
imul
fimull
xchg
cmp
push
jns
test
and
imulb
cmpsl
test
inc
jge
decl
adc
jle
ja
dec
movsb
xor
out
mov
mov
bound
lret
mov
xchg
pop
gs
push
sub
nop
adc
inc
mov
es
shl
out
fmul
in
add
lods
fistpll
movsl
pop
mulb
xchg
xchg
jno
xor
out
jbe
cmpsl
mov
dec
int3
xchg
xor
int3
in
ds
into
cmp
lcall
daa
iret
ss
sarb
out
rclb
jecxz
sahf
in
push
and
loop
push
sbb
roll
stos
pop
leave
jl
mov
out
mov
mov
add
jo
adc
test
sarb
or
lock
lds
movsl
inc
push
dec
icebp
adc
jae
shlb
mov
stc
mov
je
inc
adc
xchg
mov
mov
mov
push
inc
iret
mov
mov
cmp
cmpsb
jecxz
out
insl
loop
ljmp
sub
mov
dec
xchg
dec
xchg
xor
and
xor
push
lret
add
or
out
mov
adc
xchg
mov
or
sub
jb
in
mov
fisubs
push
outsb
std
xor
dec
mov
dec
shr
loope
sbb
dec
aad
mov
mov
add
dec
test
mov
lock
ror
pop
mov
stc
or
and
loope
fsts
lea
int
sub
xchg
bound
inc
mov
cmp
ja
gs
sbb
push
fildl
rolb
inc
jnp
xchg
sti
cmp
ret
ret
pop
xchg
lods
imul
adc
jg
push
add
addr16
fsubrl
push
push
std
sbb
imul
shl
jbe
into
rcrl
sbb
inc
cmpb
test
pop
or
jb
jecxz
fldl
dec
movsl
or
stc
jge
xchg
rol
fstps
mov
xlat
inc
push
cmp
insb
ret
cmpsl
inc
and
mov
sbb
xchg
push
popf
rorl
sub
inc
bound
scas
fldt
push
pop
hlt
lret
inc
popf
push
imul
out
xor
mov
mov
test
and
nop
mov
push
adc
cli
jb
fwait
add
push
dec
fildl
jns
sbbb
pop
popa
pop
out
dec
sbb
adc
dec
push
sti
push
mov
mov
mov
or
sub
or
mov
dec
popa
add
rcl
mov
mov
push
mov
jne
push
sub
jg
and
loopne
push
jl
push
pop
testb
test
pop
in
mull
xchg
mov
mov
mov
add
push
imul
pop
je
je
shrl
fcmovu
adc
adc
aam
sub
aad
cmpb
pop
and
jl
add
into
js
jo
mov
push
repz
and
fcoms
dec
or
roll
xchg
pop
cmp
in
inc
das
pop
outsb
sub
lret
pop
rcll
addr16
mov
js
popa
imul
into
out
xor
mov
xchg
sub
inc
pop
rcl
dec
adc
int
fdivs
jle
xchg
lds
fwait
rol
dec
int
inc
out
es
inc
mov
mov
jmp
mov
sti
fwait
xchg
hlt
lock
es
xor
stos
test
and
shrl
test
leave
adc
jnp
pop
into
inc
in
and
mov
loope
xor
insl
jecxz
shlb
add
mov
inc
xchg
push
out
or
loope
nop
push
scas
sub
inc
icebp
cmpsl
sbb
incl
xchg
fdivrp
sub
add
stc
fsts
cltd
ja
sti
insb
mov
add
push
ret
sbb
push
sbb
or
stc
and
and
xor
mov
or
je
jne
lods
cmp
push
and
jge
xor
xchg
sbb
pushf
push
adc
sbb
icebp
int
push
addb
adc
push
in
jb
dec
sarb
or
pop
jg
add
jb
lahf
xor
mov
jno
imul
fisttpl
imul
dec
sbb
popa
add
adc
inc
stos
cmp
sbb
sti
mov
sub
jae
ss
cmc
fs
shlb
cmp
movsb
mov
fdivl
jbe
fcmovnu
insl
dec
andb
or
sbb
pop
data16
inc
mov
setg
push
rorb
pusha
shrl
out
pop
or
add
xchg
enter
push
jecxz
inc
aaa
sub
sub
add
sarl
repnz
dec
jp
outsb
dec
in
add
loop
in
repz
ret
ja
outsl
lock
fiaddl
dec
push
cltd
xchg
jecxz
ret
push
adc
sub
stos
dec
in
xchg
lods
repz
sbb
mov
test
xor
stc
sbb
push
inc
ja
ljmp
jno
jnp
lds
inc
adc
jecxz
gs
push
dec
shlb
sub
cmpsl
xchg
ljmp
sub
cmp
mov
movsb
push
push
sbb
sbb
push
xchg
adc
idiv
lock
mov
xor
xor
movsb
arpl
or
lahf
sub
xchg
jb
fiadds
add
cli
test
lret
or
imul
xchg
mov
add
aas
cmp
leave
and
jns
fnsave
xor
push
loopne
push
sub
sbb
push
imul
sub
popf
add
and
imul
mov
test
int
mov
xor
jecxz
orb
mov
decl
pusha
sub
mov
mov
pushf
outsb
loope
insb
or
inc
dec
ljmp
iret
xchg
and
out
outsl
daa
out
nop
data16
or
int3
jmp
pusha
jge
inc
in
fstl
adc
jmp
xor
sub
inc
aad
sbb
lret
dec
out
icebp
es
cli
shrb
leave
jns
adc
push
mov
xor
pop
test
mov
jns
jle
mov
scas
aam
mov
inc
jno
cwtl
out
lret
jb
xor
stc
inc
or
movsl
adc
cwtl
call
scas
mov
fs
or
jnp
add
lret
mov
int3
test
subb
pushf
ljmp
inc
pop
lods
mov
cltd
pop
and
in
insb
cmpsb
mov
filds
mul
push
subl
rcll
pop
in
mov
jno
or
sub
in
or
sbb
jle
lret
add
ds
inc
and
adc
mov
jno
imul
and
mov
pop
iret
inc
jmp
xor
and
mov
roll
lds
push
mov
or
frstor
mov
sti
arpl
mov
cmp
sub
push
les
pop
cmp
iret
mov
jo
hlt
add
hlt
cld
mov
je
mov
negl
push
addr16
bound
inc
daa
fisubrs
out
jp
imul
push
push
mov
test
fidivrs
pusha
push
sub
cmc
mov
fsubrs
outsb
xor
sub
rcll
rcrb
pop
xchg
or
pop
cmc
test
int3
lret
jb
fmuls
pushf
imul
mov
push
xchg
jle
pop
push
jne
sbb
out
mov
dec
jmp
xchg
lock
sbb
movsb
mov
pop
aam
mov
cmpsb
imul
jle
adc
mov
aas
ja
fdivrs
xor
jl
lock
clc
je
out
pop
jl
rcll
pop
mov
jb
inc
sbb
mov
loop
or
jg
pop
out
popa
popl
das
xchg
ror
pop
dec
lock
xor
bound
mov
add
sub
xchg
sub
cmp
movsl
ss
dec
dec
jns
lock
popf
repnz
cld
sbb
jge
sbb
mov
add
or
imul
adc
xor
lock
pop
imul
cmp
mov
lret
rolb
fcmovne
test
xchg
mov
add
bound
adc
aaa
lret
add
adcb
sub
imul
push
jge
mov
hlt
stos
jg
mov
aas
inc
adc
or
jmp
mov
scas
xchg
cli
je
cmp
push
icebp
dec
negb
xchg
outsb
bound
sub
lret
daa
add
sbb
jnp
scas
sub
stc
push
mov
daa
push
fsubl
add
mov
loope
lea
shlb
fnclex
xchg
xchg
movsb
push
push
adc
dec
fldt
call
arpl
shrl
mov
imul
movntq
daa
mov
imul
and
dec
xor
lahf
cmp
sub
jbe
bound
dec
mov
jl
inc
xorl
xchg
aam
sarb
ds
mov
ja
loopne
dec
or
add
adc
sub
lods
out
mov
jmp
hlt
xor
js
loope
mov
fsubrl
and
mov
sbb
enter
cmc
test
out
rorb
test
jns
clc
inc
mov
aas
js
lcall
mov
dec
cmp
bound
lahf
add
insb
jbe
push
mov
out
sar
xchg
int
xchg
sbb
cli
pop
loope
and
and
dec
add
js
mov
hlt
ficoml
jbe
mov
and
iret
and
int
push
cli
cltd
xchg
fmull
xchg
call
xchg
jp
pop
cmp
inc
mov
outsl
adcl
cmpsb
int
dec
movsb
lock
test
lds
dec
push
test
cld
jo
mov
testb
pop
push
cli
push
dec
loop
insl
add
mov
xor
mov
mov
sbb
xlat
sbbl
out
lcall
in
jbe
clc
in
out
mov
int3
sub
aaa
sarl
inc
andb
or
inc
out
rorb
test
push
mov
arpl
in
dec
xchg
mov
push
arpl
iret
outsl
fistpl
mov
inc
sbb
jmp
push
cmc
mov
popa
loope
data16
jle
lea
mov
shll
dec
rol
push
jno
repz
push
adc
pop
dec
rorl
loope
mov
add
adc
or
pop
nop
add
ds
fldenv
xchg
push
arpl
and
or
lahf
mov
in
and
cs
xchg
repz
lock
ret
repz
add
pop
pushf
xor
imul
sub
fdivrs
popl
jns
addr16
addb
cmc
into
add
scas
cmp
cmovnp
rcll
sbb
xchg
aad
mov
in
mov
cli
lcall
push
jo
pop
mov
mov
icebp
add
mov
adc
std
push
ret
je
sbb
push
and
pop
sbb
cmpsl
xchg
cmp
faddl
adc
sub
xor
and
pop
mov
mov
mov
pop
inc
rorl
insl
jbe
jge
cwtl
pop
lcall
mov
jnp
loope
xor
push
sub
or
jmp
or
mov
mov
sahf
out
pop
ret
push
and
mov
dec
sub
pop
mov
cmpsl
mov
mov
fdivl
inc
lea
nop
sbb
das
add
mov
sbb
ror
std
movsl
xor
repnz
sub
cwtl
mov
dec
imul
xchg
cmpsb
jae
inc
test
fdivrl
adc
mov
pusha
sub
sub
lcall
sub
add
push
stos
mov
and
sub
and
push
dec
lea
xor
stos
lock
inc
andb
ja
ljmp
ret
int
in
pop
cmpsb
inc
or
cltd
mov
std
push
pop
je
insl
mov
movsl
sub
cs
and
add
test
mov
xchg
push
cmp
int3
notl
pop
imul
pop
adc
sbb
and
fsincos
repz
lcall
fucom
sub
andb
jle
jg
push
jno
push
push
add
inc
leave
out
orl
jl
mov
fidivrs
mov
out
test
mov
in
cmp
push
fwait
sbb
test
adcb
aam
das
lahf
imul
adc
inc
enter
lds
fisttpll
sub
mov
in
inc
lcall
cli
xor
ja
pop
cmp
pusha
bound
test
add
sub
insb
mov
mov
mov
loopne
xchg
sti
pop
out
sbb
jbe
jno
adc
adc
jg
subb
insl
add
mov
jo
cmpl
mov
push
fcoml
cli
sti
dec
in
inc
stc
es
mov
stc
sarl
pop
jmp
or
mov
scas
and
popf
ret
push
daa
repnz
iret
push
dec
and
xchg
fnstenv
sub
out
sahf
jne
jno
out
mov
scas
add
mov
pop
jb
mov
mov
shl
stc
xchg
fwait
jle
add
cmp
dec
outsl
push
js
cmp
data16
and
sub
xor
add
push
dec
pop
repnz
inc
dec
in
shll
xor
adc
outsb
lea
push
xor
lods
mov
sbb
xor
out
ret
xlat
adc
dec
pop
rclb
enter
push
fnstsw
sti
loop
pop
inc
dec
nop
jnp
cmp
xchg
fldl
pop
push
sub
adc
jnp
cmc
arpl
out
jno
inc
in
cmp
cmpsb
icebp
aam
es
sub
mov
pop
fsts
push
lds
clc
in
test
jae
mov
lds
xchg
mov
out
xchg
jle
gs
mov
pop
inc
insl
inc
fldcw
xorb
repz
jb
fimull
xchg
mov
sahf
aaa
lods
pop
lods
repz
mov
fxch
cmp
addr16
mov
cwtl
push
dec
inc
or
xchg
fnstsw
cli
dec
out
loopne
jbe
inc
push
shrl
inc
lret
outsl
pop
xor
imul
mov
sbb
inc
loop
mov
adc
push
arpl
shl
mov
jno
fidivl
pop
ljmp
lcall
in
sbb
fadd
lret
imul
and
sbb
inc
repnz
jnp
push
push
mov
mov
xchg
xor
mov
pop
pushf
push
rorb
mov
imul
lds
inc
fistl
or
mov
popa
aas
xor
adc
movsb
loop
pop
in
jb
lock
mov
push
mov
pop
enter
push
mov
sub
out
adc
cmp
jnp
mov
sbbl
and
pop
cltd
rclb
mov
div
adc
scas
xchg
mov
aaa
mov
outsl
daa
rorl
shr
jecxz
popa
push
sub
lret
jmp
xchg
pop
add
inc
sbb
or
into
enter
jmp
push
fstpl
cltd
pop
xchg
dec
fwait
push
rorb
scas
adc
bound
ret
push
cld
sub
pop
loopne
sar
xchg
adc
lret
test
inc
sub
mov
ret
or
inc
sub
ss
scas
inc
sbbl
jmp
inc
add
mov
enter
out
lock
imul
ja
mov
in
pop
jbe
orb
push
ja
mov
mov
jno
icebp
inc
mov
mov
pop
jbe
in
lods
cmc
mov
dec
cs
or
mov
pusha
cltd
call
pusha
jle
int3
idivl
hlt
ret
inc
and
push
add
aas
out
hlt
or
cmp
pop
dec
mov
add
push
sub
mov
xor
sbb
sub
or
jo
push
das
out
data16
mov
mov
in
adc
push
push
mov
and
adc
fnstenv
mov
adcb
arpl
lret
add
mov
mov
push
fwait
loope
mov
fiaddl
int
push
sarb
adc
sbb
xor
xor
fiadds
fisubl
addr16
mov
sbb
cmp
dec
std
neg
stos
scas
aaa
and
xor
jg,pn
sar
jecxz
xor
push
mov
imulb
jmp
lret
dec
push
jbe
lock
decb
test
inc
ljmp
mov
adc
jmp
mov
enter
jns
movb
push
mov
andb
repnz
repz
ja
pop
inc
in
jb
sbb
push
shll
pop
xor
xor
push
lahf
jl
fstp
stos
sub
inc
push
aam
inc
mov
lods
pushf
sub
cmp
dec
out
fmuls
lret
call
push
jne
das
dec
jecxz
dec
or
sub
adc
out
inc
mov
push
dec
fs
fisubs
jp
mov
imul
lods
cld
xlat
xor
lods
dec
push
bound
mov
aas
pop
jbe
xchg
xor
repnz
push
push
pushf
pop
sub
adc
inc
pop
mov
into
sbb
enter
add
dec
adc
cmpsb
mov
jae
add
pop
adc
or
pop
and
daa
ret
push
push
adc
sbb
pop
jl
stc
ja
fnstsw
inc
outsl
imul
scas
scas
add
add
or
jnp
add
jmp
jmp
mov
insb
cmpsl
jge
mov
repnz
notl
inc
push
imul
jle
aam
rdtsc
mov
xchg
push
insb
mov
jb
sbb
cmp
out
dec
or
lds
int3
cmp
cmp
in
mov
inc
push
jns
push
shlb
scas
xor
xchg
jo
pop
test
sbb
lret
pop
dec
push
mov
add
dec
cmc
xchg
in
or
stos
jo
or
and
movl
mov
cmp
mov
jae
jae
sbb
adc
fidivrl
xor
in
sub
jl
mov
arpl
sub
push
mov
sub
pop
test
pushf
call
xor
enter
outsb
push
rorl
sarb
xchg
push
xchg
subl
cld
in
cltd
inc
jge
add
mov
adc
ret
icebp
outsl
rorb
js
shld
aad
or
push
and
mov
in
mov
push
out
testb
loop
iret
add
shll
es
xor
data16
mov
and
ds
in
mov
imul
pop
cltd
rorl
lret
out
push
fsubl
push
ja
sbb
push
pop
rolb
fdivrp
data16
cmpsb
dec
cld
pushf
lret
imul
insb
cmpsl
push
sti
push
imul
loopne
outsl
or
scas
push
clc
jae
jg
adc
xchg
cmp
jbe
mov
xor
xchg
pop
and
mov
sub
loopne
rolb
sbb
mov
dec
adc
stos
shlb
mov
mov
int3
pop
xor
pop
shrb
pop
adc
mov
stc
fidivrl
je
pop
dec
test
sarl
mov
jg
addb
insb
mov
shlb
call
inc
out
sbb
ret
cmp
push
mov
or
push
fs
repnz
lea
aad
jo
and
test
aaa
push
add
push
sahf
cmc
fildll
pop
popf
jle
mov
xchg
mov
xchg
daa
je
sub
jns
in
lods
scas
lret
int3
pop
xlat
in
cmpb
ret
cmp
dec
xchg
into
xor
cmp
push
cmp
push
ficomps
fisttpl
adc
stos
add
jb
push
inc
test
push
inc
dec
xchg
daa
clc
stos
xor
add
ret
mov
fcmove
aad
sahf
dec
repnz
repnz
and
jns
test
sti
imul
sub
loopne
jl
pusha
or
fdivr
adc
ss
cld
aas
mov
pop
mov
int3
ljmp
test
push
ficoml
mov
mov
inc
scas
out
adc
cltd
ret
push
mov
out
pushf
cltd
jns
xchg
call
lock
ljmp
dec
add
cli
cmp
call
mov
imul
jbe
mov
pop
xorb
mov
mov
ficomps
mov
lods
adc
mov
xor
mov
test
iret
les
popa
lock
dec
adc
scas
cmpsb
and
ja
mov
lcall
add
adc
mov
or
cmpsl
push
add
or
or
sbb
add
inc
cmpsl
in
stos
jb
clc
mov
stc
mov
pop
aad
inc
inc
mov
add
jnp
ljmp
mov
add
inc
ret
sub
inc
jne
jmp
or
pushf
aad
xor
insb
mov
push
pop
jecxz
shrl
mov
and
repnz
xchg
jle
jb
mov
jno
mov
pusha
dec
mov
sti
lret
cs
popa
clc
icebp
xchg
mov
adc
test
adc
leave
in
loopne
sbbb
push
dec
adc
push
mov
sahf
sbbb
pusha
push
cmp
cmp
sti
pop
shll
sbb
adc
es
mov
fdivs
cld
or
push
sub
jns
adc
mov
jo
inc
add
xchg
out
pop
cmpsb
mov
les
mov
push
outsl
cmp
gs
inc
xlat
xor
out
arpl
nop
arpl
sbb
jge
gs
in
daa
ror
mov
pop
mov
int3
xchg
ficoml
scas
int3
popa
adc
push
dec
inc
lods
out
push
xor
pusha
push
outsb
mov
sub
fs
ret
and
movntq
out
xchg
inc
mov
push
push
mov
daa
fiaddl
sub
popa
jnp
jle
jmp
pop
xor
inc
and
mov
popf
fmul
int3
fbstp
dec
xor
and
xchg
shll
jg
mov
jecxz
jne
in
fs
push
pop
enter
lods
mov
out
movb
mov
pop
mov
ret
lea
pushf
aad
pop
adc
mov
adc
mov
pop
out
xchg
cmpsl
mov
mov
nop
xchg
out
sub
xor
add
inc
loope
mov
pop
or
test
lds
and
insb
inc
mov
xchg
adc
test
sar
jae
cmp
mov
cmp
pop
cmp
scas
dec
sbb
lea
pop
into
popa
add
add
fsub
loopne
or
stos
sahf
movsb
xchg
sub
pop
add
pop
mov
andl
data16
mul
lods
xchg
and
cmp
cmp
or
jle
jns
mov
ret
jge
add
in
inc
sbb
mov
insl
test
out
jne
or
loopne
xor
ja
cmp
aas
xor
adc
addr16
adc
adc
sbb
stos
cmc
faddl
mov
inc
mov
pop
pusha
xor
sahf
adc
mov
push
dec
mov
xor
mov
es
mov
inc
incb
lock
sbb
sub
sbb
test
aas
in
out
and
or
adc
mov
and
sub
jle
je
adc
cmpsl
mov
testl
cmpsl
in
aad
xor
jg
cmpsb
jmp
sti
and
rorl
inc
inc
imull
sbb
pushf
call
fstps
rcl
jp
sbb
mov
jle
sub
addr16
add
repz
adc
jae
es
jns
mov
or
or
ljmp
movsl
push
or
loopne
mov
xor
shlb
nop
mov
mov
call
push
jl
popf
fnstenv
shll
pusha
pop
add
adc
cwtl
xchg
std
adc
jg
adc
sub
adc
pushf
popa
lret
dec
sbb
insb
fninit
mov
loopne
pop
std
stc
ret
daa
push
pushf
cmc
fs
or
addr16
mov
mov
sbb
sbb
inc
sub
lret
cmp
je
fadds
or
adc
xchg
xor
in
addr16
or
sub
iret
jb
push
fadd
scas
adc
insb
mov
cmpsl
xor
cmc
add
decb
jle,pt
shr
bound
cwtl
call
or
idivl
xor
sti
mov
ror
push
add
js
xchg
adcb
cmp
cmp
dec
fstl
dec
mov
jo
mov
inc
sub
icebp
shl
in
inc
xor
inc
arpl
lret
enter
insb
leave
adc
ret
dec
fidivs
test
ret
flds
mov
gs
fs
rorb
bound
jae
add
inc
xor
fucom
cmp
push
mov
dec
nop
cmpsb
lahf
cmc
add
fistl
dec
and
jb
mov
adc
clc
dec
repnz
jmp
pop
and
pop
ljmp
test
lea
jbe
or
stos
sbbl
add
cmpsb
add
aam
js
pop
addr16
pop
or
fstpt
mov
push
out
jno
mov
push
loopne
cltd
or
scas
scas
out
and
int
xor
dec
negb
inc
add
xchg
popa
and
test
pop
sub
repnz
lods
pop
pop
and
xor
mov
sbb
or
sbb
pop
fidivl
and
or
lcall
popa
decb
daa
push
mov
sub
adc
js
inc
cltd
das
mov
sub
cmp
ret
shr
jecxz
je
jmp
cwtl
outsl
xchg
popa
mov
mov
aaa
jne
test
es
push
loopne
test
jecxz
push
jp
jo
popa
sub
sbb
xorl
scas
movsb
scas
mov
jg
xor
and
sbb
add
or
stc
test
mov
loop
test
js
jbe
xor
cmc
fdivl
mov
aas
mov
push
dec
cmp
mov
pop
fdivrs
or
mov
lret
iret
popa
inc
and
aad
and
mov
repnz
xor
mov
sub
into
arpl
inc
repz
cs
cmc
sahf
in
inc
mov
in
imul
aad
mov
in
jne
mov
stc
jbe
jecxz
push
loopne
push
mov
xchg
xlat
jnp
and
ret
and
ds
lret
out
shlb
cmp
xchg
ss
sti
xor
cld
in
mov
jg
cmp
mov
fscale
mov
pop
outsl
movb
cwtl
xchg
push
add
jo
pop
adc
push
ds
test
loopne
cmp
frstor
jae
scas
iret
fcomps
leave
fdivl
and
mov
in
fsubp
ss
adc
cmp
mov
loope
push
inc
add
xlat
fcompl
inc
pop
pop
mov
repz
loope
out
push
in
subl
mov
cli
sub
push
jb
mov
rcr
xchg
in
mov
gs
nop
in
sub
xor
push
add
mov
mov
or
xlat
mov
arpl
repz
adc
mov
jp
gs
and
ret
mov
lea
les
scas
repz
std
fnstenv
leave
enter
imul
mov
mov
out
repz
sbb
lret
enter
dec
pusha
mov
mov
xchg
xchg
dec
xchg
lcall
mov
xchg
lea
ss
sbb
xor
xchg
cmp
out
xchg
iret
dec
fs
push
sub
aam
imul
push
out
aad
int3
xor
jb
adc
idivl
stc
in
and
stos
push
imul
and
cmp
jmp
and
mov
filds
ja
pop
push
lahf
inc
cmp
ftst
fldcw
in
inc
fsubrl
xor
or
lock
cltd
cs
xchg
add
pushf
lods
arpl
jbe
add
jmp
inc
lods
push
ljmp
xchg
push
mov
mov
pop
push
xchg
inc
xchg
adc
mov
add
notl
stos
pushf
pusha
pop
popf
mov
in
sbb
test
test
push
iret
popf
jns
rclb
adc
gs
loop
adc
ljmp
aas
test
call
clc
mov
daa
cmp
sbb
inc
cs
insl
pop
pop
add
pop
ljmp
test
es
out
push
sbb
add
dec
aaa
mov
pop
xor
cmpsb
xchg
and
sbb
pop
fildl
mov
aam
or
pop
xor
mov
shr
adc
int3
das
fwait
lea
push
daa
add
inc
loope
jecxz
xchg
divl
push
push
ds
faddp
jne
outsl
pushf
stc
int
lret
dec
mov
dec
dec
xchg
jmp
mov
cli
leave
dec
pop
add
shlb
xor
fs
xchg
into
jle
sarl
mulb
arpl
and
and
jp
xchg
mov
jb
push
andl
int
xchg
data16
xchg
jno
or
sbb
xor
xchg
mov
lret
mov
in
mov
lcall
outsb
mov
and
lcall
shlb
lret
movsb
mov
mov
inc
imul
fimuls
and
and
ja
fisttps
mov
divl
sub
xchg
repnz
xor
daa
cltd
stos
js
inc
inc
jo
dec
nop
mov
xlat
inc
push
pop
lret
mov
arpl
sbb
and
pop
pop
pop
cmpb
hlt
loop
xchg
rclb
inc
fstpl
pop
lahf
jl
and
sbb
cwtl
out
mov
pop
scas
cmpsb
push
push
out
mov
in
jmp
inc
aaa
enter
aas
pop
mov
into
lret
insl
out
les
push
test
xor
or
fs
je
pop
ret
daa
fstl
or
adc
das
sbb
and
pusha
leave
dec
insb
roll
mov
fs
xor
loope
into
jns
cmpsb
xor
movsb
sbb
push
nop
and
imull
mov
add
xchg
daa
push
mov
es
dec
mov
xor
xchg
das
loop
pop
ljmp
lods
push
and
cmp
fisubs
roll
insl
push
dec
popa
into
cmpsb
and
sub
aas
je
xlat
push
cmp
pusha
addr16
lret
aas
mov
mov
mov
mov
xor
xlat
push
jmp
jns
push
mov
leave
add
inc
mov
lret
js
mov
cld
push
cmp
push
roll
mov
dec
fcoms
and
adc
push
outsb
sahf
jno
lret
test
add
add
mov
xchg
in
fs
stc
lea
aad
or
xchg
mov
imul
xor
xor
cld
mov
dec
adc
gs
dec
or
lds
cs
int
jnp
and
pop
arpl
jmp
aad
das
js
loopne
ficomps
jl
pop
cmp
sti
and
add
xchg
mov
shlb
popa
push
or
and
sub
mov
push
pop
imul
cld
testb
sahf
xchg
sahf
jl
mov
scas
cmp
aaa
ficomps
loope
stc
dec
orl
movsl
dec
mov
xchg
lds
call
pop
out
rcrb
sti
dec
jmp
jg
fstl
lds
mov
jne
sub
cmp
fcomi
inc
in
xor
cmp
outsl
cmp
mov
mov
fcomps
or
pop
push
test
test
leavew
inc
ds
cltd
push
xor
icebp
pop
les
pop
fidivs
inc
jne
inc
and
insl
xchg
ljmp
and
lock
shll
ds
add
call
xor
lgs
lods
or
or
cmp
repnz
cmpb
jns
cmp
jg
push
mov
pop
push
test
pop
cmp
adc
ljmp
cmp
xchg
cmp
pop
negb
lahf
jge
js
into
int
sbb
sti
cwtl
jge
fadds
adc
jmp
xchg
inc
stos
jg
push
andb
xchg
xchg
in
pop
lods
sbb
cmp
pop
iret
sbb
mov
and
mov
divl
jmp
sub
mov
sbb
mov
push
xor
mov
inc
aam
cld
fdivrl
fisttpl
add
xlat
nop
lret
and
mov
xchg
notb
notl
call
mov
scas
setp
in
jge
dec
pop
mov
out
sub
cmpsb
mov
bnd
imulb
data16
jno
xor
mov
clc
scas
xchg
jecxz
shrl
cmp
movsb
mov
rolb
jns
fs
adc
test
out
pop
push
jno
rcrl
stos
in
scas
mov
shl
mov
adc
divb
and
je
push
gs
add
sbb
add
cmc
lods
lret
mov
mov
mov
lahf
xor
inc
cmp
ja
pop
inc
cmpsl
addr16
xchg
negb
aam
ret
xchg
sub
xchg
shll
cmp
push
or
negl
pop
push
arpl
mov
imul
stos
mov
mov
or
lret
sub
sub
inc
jno
inc
cmc
add
and
iret
push
xor
aaa
enter
js
inc
add
jo
dec
or
ret
jno
pusha
repnz
push
enter
imul
popa
dec
xchg
daa
push
test
mov
movsl
and
fcmovbe
add
js
jecxz
push
push
xor
inc
cmp
je
cmp
dec
push
dec
sbb
push
outsb
rcrl
xchg
jp
std
das
ss
daa
jmp
shll
mov
and
rolb
pop
gs
sbb
jae
pop
sahf
imul
push
in
jge
sub
push
adc
and
pushf
jl
fildl
loopne
cmp
pop
repnz
inc
inc
xchg
test
and
mov
sbb
cli
mov
sarl
clc
jno
mov
jmp
add
or
cmp
hlt
sbb
mov
inc
incb
cmp
adc
loopne
pop
ret
cmp
sahf
insb
lahf
and
mov
sbb
jno
sub
cmp
mov
jne
pop
int3
repnz
pop
pop
int3
fnstenv
popf
jmp
push
dec
cmp
adc
xlat
mov
xchg
sbb
mov
adc
call
insl
sub
repnz
sub
add
pop
popf
mov
add
arpl
hlt
cmp
mov
jp
pop
adc
adc
mov
add
int3
fimuls
cmp
outsl
lock
cmpsl
sub
test
inc
ds
leave
jnp,pt
dec
cltd
lcall
push
push
adc
mov
xor
mov
pop
cwtl
in
in
push
add
jge
add
in
shl
pop
xor
imul
cmp
fnstcw
lods
adc
or
sub
nop
sbb
mov
push
ror
sub
int
call
mov
mov
in
lret
inc
repnz
push
add
lcall
adc
mov
jl
pop
aam
or
cmp
stc
scas
dec
adc
and
pop
idivl
ds
sbb
xchg
push
add
bnd
mov
push
push
js
push
add
mov
out
aam
ret
sbb
mov
pop
ljmp
inc
or
int
xorb
fistpl
mov
mov
loop
movsl
movsb
outsb
idivl
stos
adc
sbb
cmp
mov
or
or
ss
mov
adc
jge
sti
mov
push
mov
xor
mov
sti
mov
push
xor
addr16
jmp
xor
push
jg
cmpsl
notb
mov
xchg
fistpl
bound
insl
jns
jns
mov
lea
imul
jbe
es
inc
sarl
push
ljmp
inc
and
in
repz
enter
pop
out
ret
mov
rcl
sbb
into
xchg
jno
sub
push
lcall
mov
test
xchg
dec
imul
xchg
mov
jns
repz
repnz
mov
lret
jmp
inc
in
and
or
cmpsb
int3
js
and
sbb
jbe
jbe
mov
repnz
test
imul
sahf
pop
mov
and
mov
aad
cmpl
xchg
pop
push
outsb
loopne
int3
jo
push
jmp
xchg
mov
mov
test
in
jae
jb
mov
cmp
pushf
leave
js
inc
ljmp
add
push
outsb
mov
scas
scas
pop
xchg
mov
cmp
test
xor
outsl
mov
or
fs
sub
pop
sti
dec
push
cli
cltd
lock
repnz
jmp
fcmovnu
adc
lret
mov
jbe
cmp
loopne
data16
sub
push
mul
pop
adc
out
pop
sub
bndstx
stos
repnz
jecxz
jecxz
mov
sti
fnsetpm(287
inc
mov
dec
pop
pop
lret
adc
leave
outsl
into
test
decb
pop
test
aad
ljmp
scas
push
mov
ds
push
mov
mov
dec
cltd
or
push
push
mov
dec
inc
aas
inc
mov
js
sbb
add
mov
loopne
bound
sbb
xor
icebp
mov
mov
gs
push
cmpl
ja
add
adc
mov
fnsave
mov
mov
adc
in
dec
std
pushf
dec
psrld
inc
push
push
sub
xchg
mov
leave
add
and
xchg
fmull
adc
outsl
leave
add
xchg
ljmp
ja
push
or
out
sub
pop
stc
ret
leave
in
loop
sub
jg
pusha
lret
and
pop
divb
cmpsl
and
data16
jnp
fldl
inc
rcrl
je
mov
es
in
paddd
mov
test
xor
daa
stos
loope
push
mov
or
cmc
movsb
repz
sub
lods
cmpsb
mov
test
pop
mov
pop
xchg
cmp
adc
cmp
sbb
jo
lahf
negb
cmpsl
shrb
cmpb
stos
clc
hlt
xchg
stos
sub
push
push
shl
dec
enter
nop
outsb
lock
inc
push
fistpl
sbb
mov
fisttps
sbb
popf
sbbb
stos
movsl
push
mov
xchg
je
and
xchg
icebp
into
push
ss
call
cmp
sub
data16
cmc
icebp
pop
clc
and
outsl
cltd
push
dec
pop
sti
dec
adc
and
in
insl
in
jmp
popf
stc
cs
mov
mov
xor
icebp
sub
mov
push
inc
cmpsl
aam
pop
inc
loop
mov
mov
jl
xor
or
outsb
and
mov
in
xor
inc
xchg
xchg
ja
xor
adc
call
pop
mov
adc
mov
dec
lret
sub
jno
cmp
ret
jecxz
int
and
into
std
jge
fildl
in
push
pop
or
js
dec
add
scas
addr16
dec
nop
test
xchg
cld
repnz
imul
sahf
dec
daa
pop
push
rol
lock
mov
push
ja
out
loop
xor
dec
enter
or
outsl
dec
pop
fld
push
lock
or
in
mov
jp
cmp
inc
testl
mov
pop
ficompl
push
cwtl
xorl
mov
in
xchg
cmp
fldl
sub
mov
or
leave
jnp
inc
jp
adc
stos
mov
in
pop
pop
test
shl
stc
or
inc
inc
in
xchg
jnp
sbb
jns
adc
sub
lret
lods
push
mov
les
mov
cli
xchg
mov
or
ret
fdivrs
xor
pushf
imul
nop
add
push
std
push
jp
negl
mov
cmp
in
sbb
or
movsl
sbb
mov
psubsb
push
sbb
cwtl
pusha
jbe
ljmp
inc
or
xchg
pushf
sahf
mov
sub
mov
notl
dec
cmpsb
cs
cmpsb
adc
int3
insl
ss
mov
xchg
dec
call
addr16
inc
dec
lods
cld
shrl
in
fimuls
mov
insl
negl
ja
push
mov
rolb
xchg
gs
stc
lods
cld
pushf
fcomi
push
movsb
jge
mov
jno
fisubl
icebp
out
inc
xchg
xor
xchg
call
pushf
add
test
push
and
jns
push
insl
icebp
push
les
and
xchg
movsb
sub
mov
dec
fsubrl
bsr
xor
mov
outsb
xchg
mov
and
sarl
in
cmp
inc
loop
mov
gs
lret
shrl
sub
aad
enter
repnz
sub
stos
lret
xor
psubd
mov
mov
pop
push
outsl
addr16
fwait
add
aad
pop
pop
jae
and
mov
test
fcomps
fucom
inc
or
and
movsl
arpl
lock
in
jl
int3
in
push
and
adc
rorb
jecxz
xchg
sub
and
mov
dec
xor
mov
add
stos
pop
mov
xor
pop
and
scas
popa
cmovge
icebp
imul
mov
les
popf
push
orl
and
data16
pop
and
fisttpll
int
ss
aad
cltd
into
pop
dec
cmp
cld
cmp
dec
sub
loope
cmc
aad
cltd
pop
cld
lods
daa
nop
int
scas
mov
xor
lcall
movsl
add
sbb
lcall
jbe
pop
gs
sbb
bound
imul
not
dec
cmp
dec
aaa
mov
sub
mov
adc
mov
insl
jge
lea
push
scas
mov
fwait
mov
push
and
mov
push
jecxz
pop
loop
dec
loopne
es
inc
test
scas
loope
inc
mov
insl
lcall
mov
lret
mov
push
or
mov
push
shll
daa
mov
cli
inc
mov
push
adc
xlat
jge
faddl
ja
dec
inc
mov
push
mov
and
inc
fdivrl
int
inc
leave
outsb
je
add
insb
lcall
mov
pop
movsl
subl
arpl
sub
mov
or
test
xchg
inc
xlat
cmpsb
push
mov
shll
mov
inc
xchg
fistl
sub
test
add
shl
int3
out
mov
push
mov
sub
or
mov
mov
or
mov
push
sbb
mov
dec
lahf
lret
aam
stos
out
and
pop
sarl
inc
push
xchg
outsl
or
clc
inc
xchg
push
movsl
mov
sbb
pop
pusha
mov
iret
adc
push
out
jecxz
out
add
mov
xchg
mov
adc
aad
popa
pushf
movsl
add
ss
mov
fs
fnsave
idiv
cmpsb
pop
mov
mov
adcb
jns
push
jne
ret
ss
push
aad
or
dec
inc
test
out
or
testl
and
mov
sahf
xlat
inc
fdivl
mov
xchg
push
push
sti
repz
xchg
inc
loope
mov
mov
shll
xor
mov
cmp
and
data16
mov
cmp
or
xor
imul
and
cwtl
dec
cmpsl
xchg
dec
enter
mov
dec
inc
lds
out
cli
jmp
lds
jp
jno
pop
popf
ss
int3
dec
sub
pop
hlt
sub
rorb
cmp
xchg
add
rcr
adc
pop
sbb
pop
jecxz
add
and
xor
ret
test
cmpsl
xchg
movl
imul
xor
stos
and
jmp
icebp
stos
and
mov
imul
dec
jne
bound
xchg
jae
dec
ret
scas
add
and
xor
aad
pop
mov
std
fisubrs
mov
fistpll
insl
out
fidivs
push
fidivrs
enter
scas
filds
pushf
push
das
sbb
aaa
sbb
daa
pop
iret
hlt
mov
mov
xchg
push
jge
into
ret
add
mov
in
inc
in
adc
xchg
pushf
lret
popa
push
mov
movsb
jb
in
sub
lock
add
push
movsl
lret
inc
call
push
push
sbb
sti
mov
xchg
push
je
adc
outsl
jns
pop
dec
movsb
int3
jge
int
xor
cli
dec
hlt
push
fidivrs
fistl
dec
repnz
loopne
lds
xchg
mov
lcall
cmpsb
xchg
add
mov
test
and
js
scas
xor
je
roll
pop
push
cmp
fcoml
mov
out
enter
mov
adc
sahf
stos
lock
mov
push
sbb
cmpsb
dec
pop
ljmp
push
mov
pop
mov
std
dec
jbe
sbb
incb
xlat
mov
sub
cs
jbe
fcmovne
xor
and
loop
jl
jbe
fwait
and
xor
inc
pop
dec
out
out
push
nop
ret
es
lret
ret
sub
mov
addb
mov
add
lret
xor
fwait
lock
inc
sub
inc
push
xchg
jg
ss
test
dec
lret
dec
xchg
rcr
push
and
dec
jge
test
stc
and
pop
xchg
outsb
lcall
jmp
mov
scas
mov
testl
jmp
or
jo
sbb
out
clc
cmp
dec
mov
into
mov
jl
add
ret
fnstsw
popf
repnz
xor
fst
fcompl
adc
mov
adc
imull
lret
shrb
shrl
pop
imul
dec
in
xor
adc
xchg
adc
cmc
xchg
test
push
nop
stos
ds
arpl
dec
inc
out
adc
outsb
and
test
test
xchg
cmp
pushf
mov
jae
hlt
xor
pop
mull
outsl
popf
sbb
in
xlat
mov
push
or
arpl
dec
insb
imul
push
enter
dec
test
lret
push
mov
or
bsf
add
adc
lret
cmp
push
inc
adc
jbe
pop
fwait
inc
pop
xchg
aaa
xorl
inc
or
inc
mov
dec
mov
adc
sub
repz
dec
out
push
jmp
aas
mov
adc
push
jno
mov
add
lods
mov
cltd
loopne
xchg
xchg
cltd
sub
jp
adc
test
sub
xchg
mov
and
or
xchg
lods
and
push
xchg
call
dec
in
add
or
enter
jg
je
pop
and
outsb
vmaxps
push
lods
adc
add
jb
xor
es
sbbl
pop
cmp
outsl
mov
in
mov
mov
or
jle
rorb
lcall
lea
lea
mov
arpl
das
inc
loopne
jl
sahf
push
mov
pop
mov
push
pop
push
push
test
leave
xor
mov
aas
mov
xchg
idivl
jle
jno
push
stos
femms
bound
out
test
aas
mov
test
xor
push
mov
mov
mov
jo
push
stos
dec
jb
and
xchg
es
jmp
push
mov
xor
add
mov
sub
jl
dec
jecxz
mov
pop
inc
pop
imul
and
push
xor
sub
xchg
push
push
pushf
add
loopne
cmc
add
jge
jmp
mov
sub
sbbl
add
mov
shrl
sbb
rolb
mov
add
shlb
cmp
mov
push
push
gs
dec
ss
insl
jp
leave
jnp
sub
push
jnp
xchg
scas
pop
mov
mov
aaa
js
mov
sbb
adc
add
test
add
mov
inc
dec
jne
sub
icebp
xchg
scas
xor
pusha
push
or
mov
adc
or
adc
dec
inc
xchg
into
sbb
cmp
out
stos
xchg
xor
dec
imul
fistl
jg
mov
push
mov
stc
push
cmpsl
test
imul
mull
imul
xor
daa
and
fnsave
pop
gs
pop
sub
outsl
xchg
inc
push
cli
cld
and
xchg
dec
out
adc
jge
leave
sub
bound
xchg
and
xchg
pop
inc
lods
mov
inc
sar
mov
test
sub
jns
and
mov
mov
or
movsb
std
ficoms
sub
das
fstpt
push
scas
lret
lock
aad
xchg
jb
addb
jbe
jge
jp
loop
mov
and
jp
pop
jne
adc
stos
lods
xor
mov
inc
push
and
sub
cmp
lods
mov
inc
pop
or
es
dec
mov
pop
fcomip
xchg
push
sbb
out
add
stos
mov
mov
out
xor
xchg
push
jne
mov
or
pop
loopne
ret
mov
xlat
pop
ja
data16
push
pop
dec
loopne
jns
xchg
adcl
loope
fnsave
mov
mov
fisubrs
sub
pop
sub
inc
mov
mov
inc
repnz
mov
add
sti
test
fiadds
and
in
das
call
lret
sbbl
inc
stos
pop
add
mov
movsb
xchg
or
cli
adc
push
insb
lcall
xchg
scas
iret
mov
xchg
xchg
idivb
loop
movsb
xchg
cmp
cmp
cmpsb
arpl
movsl
sbb
fidivrs
jnp
ror
testb
gs
js
sti
inc
aam
shlb
adc
pop
aad
and
jnp
pop
push
mov
xchg
scas
adc
mov
mov
scas
fisttpll
loope
cld
pop
cmp
or
sarl
ss
inc
mov
repz
nop
push
mov
sbb
mov
icebp
aaa
hlt
in
sarl
mov
pop
pop
scas
jb
vmwrite
push
fcom
scas
and
inc
push
fld
lcall
loop
mov
aam
mov
sbb
arpl
mov
adc
dec
cmc
imul
and
lods
jp
pop
mov
out
orl
int3
in
add
mov
addr16
push
xchg
testb
jno
cmp
pop
xor
inc
jo
pop
int3
jbe
mov
cmc
test
gs
xor
movl
popf
mov
aaa
inc
push
repz
push
jecxz
mov
insb
lahf
sub
sbb
fmul
mov
mov
fnstenv
cmpsb
loopne
lock
xchg
pop
push
cmp
outsb
or
push
mov
adc
insl
mov
subb
xor
xor
lods
rorb
jne
stc
push
call
mov
ds
inc
ret
test
dec
testl
jne
jns
nop
push
xor
test
xchg
enter
xor
rcll
data16
xchg
aam
jnp
inc
addr16
imul
push
nop
dec
mov
push
mov
cli
mov
imul
cltd
aaa
push
ss
cmp
sbb
insl
js
pop
dec
mov
pop
jg
stos
imul
dec
adc
rcl
inc
jo
int3
add
cmc
mov
jle
iret
cmp
cmc
jmp
scas
and
jle
adc
lods
fisttpll
xorl
xchg
xor
stos
jmp
and
inc
out
push
dec
push
int3
pushl
sub
lea
or
jecxz
add
cmp
cmp
enter
dec
sub
pop
iret
push
cmpsb
enter
xchg
enter
fiaddl
sub
inc
mov
cmpsb
adc
push
ja
movsl
dec
mov
pop
cmp
sub
pop
cmp
push
adc
call
mov
data16
rorb
mov
pop
dec
push
lock
and
insb
adc
mov
cltd
ds
jne
pop
add
inc
bound
mov
dec
lods
in
test
idivb
dec
jae
pop
filds
in
repnz
cmp
pop
push
repz
pop
mov
loope
inc
dec
and
pop
xor
mov
out
fcmovne
push
shr
jecxz
pop
push
sub
mov
mov
in
cmp
pop
mov
mov
repnz
and
sub
je
cwtl
ds
insl
in
lret
psllw
ja
and
data16
jns
loop
in
js
mov
jno
cmp
popa
mov
and
xor
push
call
cmpb
cmpsb
subb
loop
add
int3
fstpt
mov
jmp
rolb
out
fsubl
mov
test
scas
aas
repz
sahf
shrb
es
out
mov
mov
lret
xchg
fsubrl
xor
icebp
fsub
gs
shrb
out
jecxz
cmp
loop
lds
negb
loope
scas
fadds
xchg
popa
push
fadds
rorb
sub
movsl
aad
test
lret
rcrb
das
push
mov
das
add
aad
cmpsb
daa
fnstsw
add
sub
jne
int
jg
pop
xlat
cmp
inc
sbb
add
add
xchg
stos
imul
fcomps
fstpl
movsl
fwait
xlat
mov
test
jl
cmp
ljmp
jl
pop
psrad
data16
mov
sub
cmpsl
mov
imul
mov
cmp
repz
movsb
iret
sti
hlt
push
icebp
test
and
sahf
cmp
lods
add
pop
pushf
imul
ret
das
cmp
cmpsb
pop
stc
sbb
sub
xor
jb
xchg
sbb
stos
pop
fidivrl
dec
addb
add
fldl
jns
in
stos
xlat
fbld
jbe
mov
fldcw
lret
nop
cwtl
inc
pop
pushf
mov
scas
out
lods
add
jg
ret
add
in
outsb
ret
out
loop
mov
xchg
stos
je
stc
jne
mov
mov
pop
addr16
xchg
cmpb
iret
sub
stos
popf
xchg
movsb
sub
jnp
and
mov
mov
mov
mov
push
dec
clflush
push
sbb
fs
call
mov
stc
lcall
jo
stos
mov
fs
push
push
xlat
lret
shr
cmp
adc
pop
hlt
enter
out
mov
ret
inc
inc
mov
mov
xchg
out
fnstsw
inc
in
imulb
xlat
adc
cli
push
xchg
dec
insb
inc
dec
cmp
mov
mov
leave
insl
loop
insb
inc
pusha
and
ljmp
cli
cld
lods
push
test
movsl
adc
jl
int
xchg
or
out
std
out
push
pop
xchg
xchg
mov
mov
mov
push
mov
push
xor
fnstenv
imul
imul
stos
nop
adc
das
and
inc
mov
addr16
dec
and
ss
sbb
mov
cmpsb
cmp
sbb
mov
int3
shlb
sub
inc
push
hlt
mov
movsl
mov
cmp
inc
lret
dec
js
dec
std
push
stos
sbb
nop
cmp
xchg
jb
ja
cmp
es
imul
add
add
ror
or
mov
and
add
xlat
mov
iret
pop
dec
sbb
add
cs
push
into
mov
repz
adc
push
sub
movups
daa
xor
cmc
inc
or
add
lods
cmc
inc
inc
dec
out
pop
ja
add
xchg
xor
movsl
dec
adc
pop
pop
lds
out
lret
cmp
push
dec
hlt
fimuls
ljmp
mov
or
aam
fs
or
xchg
test
lods
bound
mov
cmc
mov
mov
xor
popf
xchg
cmp
add
cwtd
sbb
jmp
cmp
stc
mov
push
sub
xchg
lahf
sub
pop
stos
xchg
or
mov
jecxz
and
xlat
sbb
movsl
jno
das
fnsave
idiv
jo
add
and
jecxz
lea
mov
out
pop
sub
dec
add
in
sub
std
lea
out
aad
cmpsb
daa
push
or
dec
loopne
jb
lcall
sbb
std
aad
test
sub
clc
dec
lock
lock
aas
es
nop
push
pop
xchg
roll
out
xor
movsb
jne
mov
dec
inc
fisubs
mov
jecxz
mov
psllw
push
pop
mov
pop
push
fcmovu
sbb
pop
jne
enter
mov
xchg
dec
scas
clc
inc
mov
pop
pop
jmp
pop
push
mov
ficompl
xor
insb
pushf
scas
out
sub
sbbb
jae
and
loop
add
int
iret
xchg
test
mov
mov
ret
out
add
int
scas
in
aaa
cmp
enter
mov
das
popa
je
mov
aad
subl
into
xchg
dec
jae
bound
adc
cli
out
lret
orl
idivl
mov
mov
mov
and
ja
dec
scas
sbb
xlat
cmpl
add
add
jo
ror
sub
mov
repz
imul
xor
sbb
call
repnz
sbb
and
das
pop
leave
pop
rolb
test
sbb
and
ret
inc
and
dec
xchg
mov
ljmp
lock
mov
insl
sbb
inc
dec
pop
les
mov
pop
inc
adc
push
cli
push
jne
popf
fcomi
std
pop
icebp
shrb
cmpl
pop
or
out
in
lret
scas
imul
and
outsb
xchg
mov
mov
into
mov
fisubl
push
jnp
nop
xchg
lds
fcoml
test
xchg
mov
adc
repz
jb
xor
lock
movsb
sub
and
rorb
arpl
lret
xlat
aad
ret
fisttpl
xchg
xchg
fsub
and
iret
mov
aas
add
test
pop
int
insb
and
inc
les
mov
push
aad
mov
aas
aas
call
pop
inc
in
cmc
mov
sub
rcll
jbe
lahf
mov
dec
mov
clc
cmpsl
dec
push
rclb
je
lods
mov
or
dec
add
adc
cmp
mov
shlb
mov
pop
imul
cmpsl
lret
loope
popa
imul
adc
movsl
mov
pop
cli
push
jne
cmp
inc
jl
daa
dec
dec
adc
insl
addr16
fisubrl
outsl
mov
sbb
push
cmp
aam
fadds
fnstcw
push
pop
cmp
out
jae
xchg
mov
out
nop
mov
outsb
sbb
xlat
icebp
pop
ret
adc
dec
aas
lret
pop
in
aad
push
movsl
push
out
lcall
inc
outsb
mov
pusha
loope
add
pop
inc
cld
enter
jge
stc
mov
and
gs
xchg
lret
pop
cmc
hlt
mov
icebp
jp
and
in
or
enter
pop
ss
lcall
dec
mov
adc
mov
and
mov
pop
clc
call
lahf
sahf
orb
add
rcrb
scas
mov
pop
mov
aad
cwtl
inc
xor
xchg
pop
imul
mov
nop
cmp
add
xchg
mov
stos
inc
pop
cli
cmp
fwait
icebp
pop
ret
cmp
adc
or
xchg
push
insb
stc
and
or
bnd
mov
cmp
pop
out
gs
divb
mov
jecxz
xchg
imul
or
ret
sbb
inc
or
outsb
inc
sbb
mov
cmc
jle
outsl
xchg
ror
divb
mov
sbb
push
lods
xor
fstps
mov
lock
stc
cli
jg
cltd
dec
mov
jno
movsl
mov
dec
dec
aaa
pop
mov
xor
int3
sarb
adc
xor
out
and
cmp
adc
mov
fs
stos
xor
enter
dec
inc
fs
sub
inc
sbb
or
inc
ror
xchg
rclb
enter
sbb
pop
cmpsb
and
ljmp
je
arpl
popl
lea
in
lock
pushf
sub
rolb
jp
adc
insb
adc
pusha
dec
jmp
jno
les
popf
lret
imul
pop
sub
fs
pop
dec
iret
add
into
pop
fists
pop
xchg
aam
mov
arpl
ffreep
out
mov
scas
mov
sub
add
jo
cld
pop
leave
and
pop
lds
sbb
into
imul
mov
popl
xchg
bound
aad
inc
out
test
or
ss
push
cmp
jge
dec
pop
xchg
sub
xor
push
pop
push
mov
out
les
mov
or
fsts
loop
rorl
aad
sub
xlat
jns
inc
mov
pop
adc
jnp
data16
mov
insl
and
ss
sbb
mov
and
sub
dec
clc
les
add
sahf
addb
pop
sub
mov
repnz
sbb
into
test
fsubl
dec
mov
lock
sbb
int3
mov
push
push
add
pop
mov
sbb
mov
sbb
ja
out
icebp
pcmpgtd
fdivrl
in
fwait
imul
fwait
pop
sub
xchg
imul
in
add
sbb
ljmp
push
mov
mov
jge
add
data16
or
sbb
cmpsb
es
ret
test
sub
mov
push
push
add
sbb
std
xchg
leave
mov
int
popa
inc
inc
ret
inc
popa
daa
cld
out
and
dec
imul
insb
pop
insl
jbe
pop
outsb
int
sub
inc
push
iret
hlt
sti
rorl
adc
fucom
push
mov
mov
loope
sub
xor
rol
and
movsb
sub
sbb
jae
mov
sarl
jne
sarb
in
and
imul
mov
sbb
mov
push
aaa
sbb
sub
popf
std
or
mov
mov
out
cmpl
sub
out
lds
shl
xchg
sub
or
enter
push
sub
ja
dec
add
in
xchg
fisttpll
in
mov
add
adc
out
int
mov
adc
add
inc
int3
fstpl
mov
dec
or
fbld
inc
aaa
fildl
mov
scas
loop
push
pop
gs
loopne
daa
xor
or
jmp
lea
cmp
pop
pop
cmp
sbb
push
popf
sub
pop
push
xor
jno
aad
xor
dec
fcompl
pop
push
flds
xor
imul
incb
movsb
xorb
jl
sbb
and
std
popa
xor
cmpsb
pusha
cmp
jb
mov
test
push
cmpl
jl
or
sbb
bound
add
xorb
sub
les
enter
push
das
lock
jmp
push
jmp
nop
arpl
xor
inc
outsl
loop
loopne
push
std
jb
cmpsb
sub
dec
test
sbb
stc
inc
int
add
jecxz
cmp
sbb
mov
mov
fidivrl
mov
pop
push
jae
add
into
or
mov
sbb
dec
mov
in
mov
aaa
dec
adc
xor
shl
sbb
aas
mov
or
movsb
stc
int3
pop
mov
lods
test
add
cli
inc
inc
pop
and
xor
push
xchg
int3
pop
test
pushf
add
cmp
push
mov
push
lcall
sahf
jp
push
repnz
dec
stc
cmp
call
jnp
cmp
insl
add
push
enter
xor
xor
xlat
lds
test
inc
shlb
mov
mov
shll
movswl
cld
test
and
pop
ds
mov
inc
mov
stos
andb
fdivs
repnz
sub
jb
cs
loop
lods
imul
jg
mov
and
mov
cld
add
ss
arpl
xchg
out
xorb
push
mov
lea
dec
fldenv
imul
push
pop
mov
lds
popa
mov
xchg
mov
sub
out
inc
sar
imul
ljmp
sub
scas
mov
jb
out
mov
jg
cmp
leave
fninit
sub
jne
and
cld
add
mov
imul
adc
lret
mov
loope
pop
adc
dec
or
pop
pop
in
or
adc
push
cmp
sbb
sbb
mov
lcall
inc
dec
loop
lea
iret
pop
fisttpll
pop
inc
fwait
mov
sbb
pop
test
inc
jnp
insb
and
shrl
xchg
push
pop
aam
xor
inc
out
xor
sar
inc
in
lock
js
and
aas
in
jecxz
cmc
rcl
or
jge
popa
jno
or
mov
sub
sahf
movsl
xchg
and
push
mov
sahf
inc
pop
test
add
push
dec
mov
jbe
repnz
mov
jnp
shrb
jnp
mov
adc
pop
cmp
and
adc
jb
sbb
mov
dec
stos
xchg
cmp
aaa
push
lods
out
in
jne
sbb
cmpsl
mov
pop
pusha
inc
fwait
sub
xchg
sbb
js
jb
das
push
sub
push
fwait
dec
in
jb
xchg
sbb
outsb
xchg
in
and
push
fs
int3
or
dec
loope
push
mov
adc
std
jbe
mul
pop
push
sbb
lock
out
scas
in
xor
testl
mov
xchg
inc
or
push
xchg
sub
shll
clc
jns
adc
aaa
push
shrb
xchg
dec
pop
mov
mov
cld
dec
insl
mov
aas
out
test
aas
add
cmpl
xor
and
mov
fcomps
mov
leave
addr16
lahf
inc
mov
aad
fistpl
lahf
mov
aaa
mov
jb
mov
pop
stos
int3
jae
xchg
fldl
jo
inc
nop
fistl
mull
dec
ret
flds
mov
push
cmp
das
les
adc
repz
in
aad
jns
push
dec
out
daa
ss
sub
lcall
fiaddl
mov
jnp
insb
and
xchg
mov
xchg
repnz
aad
inc
adc
jae
ret
imul
add
jmp
mov
loop
in
jne
cmp
outsl
aaa
gs
scas
fsts
icebp
xchg
push
mov
fdivp
inc
popf
andb
jmp
jmp
ss
adcl
scas
mov
shll
add
lods
adc
imul
cltd
add
inc
dec
sub
sub
dec
test
jle
jnp
xchg
and
cli
and
cmp
ret
sbb
mov
je
inc
and
shlb
jns
push
rcr
mov
inc
mov
add
repz
pop
sub
cmp
cmpsb
ss
xor
and
rcll
stos
jbe
cwtl
sbb
rorb
adc
xchg
popa
jnp
mov
cmp
jmp
cmpsl
out
addr16
pop
sti
mov
inc
aad
pusha
dec
push
cmp
add
pop
and
iret
lea
aas
pop
clc
xchg
cmp
mov
cmpsb
dec
jae
jns
adc
ss
jb
mov
test
pop
pop
shlb
pop
pop
inc
inc
pop
sbb
lret
cld
xchg
ljmp
shlb
xor
outsl
in
jnp
fwait
std
popa
jge
jecxz
sub
sbb
add
fiaddl
mov
pop
lock
hlt
push
jns
stc
enter
cmp
push
test
loopne
cmp
loopne
mov
inc
cmpb
xchg
fisubrs
push
sub
xchg
rcrb
fs
or
mov
dec
fisttpl
xchg
clc
xor
push
cltd
jo
inc
mov
push
dec
in
mov
fdivr
push
shlb
mov
push
jns
into
aam
leave
lods
xchg
jl
call
xlat
adc
lret
xor
dec
or
mulb
sbb
inc
dec
cmp
cmp
in
adc
push
mov
arpl
fiaddl
ljmp
rclb
addr16
cmp
jnp
dec
lods
mov
das
mov
sub
lods
repz
shll
loop
dec
je
imul
and
dec
xor
shlb
mov
inc
fmull
enter
inc
sub
or
dec
mov
jp
sub
test
call
cmpsb
lods
fidivl
fwait
sbb
gs
inc
bound
xchg
mov
popf
outsb
lret
outsb
pop
je
jnp
mov
adcb
cmp
ret
mov
jmp
push
pop
or
roll
push
cmovp
repnz
es
nopl
cmp
xor
cmpb
clc
loop
dec
clc
sahf
xchg
ret
mov
push
dec
pop
dec
pop
shll
cmp
and
fistps
mov
xlat
sub
xor
xor
lea
cs
lods
mov
jecxz
shrl
test
lahf
inc
mov
rorl
lret
mov
out
dec
rcrb
xor
fnstsw
xchg
jbe
sbb
mov
push
xchg
mov
clc
jle
and
orb
dec
pop
scas
xchg
clc
mov
sbb
movsb
insl
pop
mov
outsb
out
imul
adc
int
fisubl
xchg
scas
lods
mov
sub
pushf
cli
or
cmp
xor
xchg
and
cmpsb
lea
mov
pusha
jns
or
mov
scas
loop
jae
call
cli
xorb
and
aaa
sbb
mul
stc
les
xor
testb
test
sub
in
ret
jnp
out
int
or
add
cmp
and
in
test
inc
push
mov
xor
xchg
stos
xchg
arpl
jnp
bsr
xlat
mov
sbb
cmp
jo
or
sti
sub
test
jns
jmp
stc
and
push
or
les
lea
jl
jg
xchg
push
and
dec
je
inc
enter
out
xchg
mov
sti
nop
sbb
cmp
mov
add
mov
inc
add
mov
imulb
cmp
daa
add
das
inc
enter
mov
sub
mov
inc
add
leave
arpl
cli
fwait
outsl
jecxz
stos
jb
jecxz
lahf
lahf
push
dec
sbb
inc
shr
add
dec
es
stos
mov
aam
pop
pusha
addr16
test
popa
lock
sub
test
fimuls
in
clc
dec
push
mov
adc
jno
scas
jmp
mov
nop
or
jp
stos
rcll
mov
ljmp
lods
cmp
pop
jbe
pop
sbb
cmp
mov
push
bound
mov
out
outsl
push
adc
ret
pop
test
jne
adc
pop
lahf
pop
clc
enter
bound
lock
or
imul
or
mov
ss
test
push
cmpsb
int
ja
test
loop
decb
jle
xchg
adc
out
fsubs
xchg
push
icebp
cmp
fdivrp
fwait
push
xchg
cli
rep
in
cmp
pop
mov
in
lret
push
popf
hlt
xor
xchg
xchg
cmp
cmp
add
inc
pop
scas
cmp
push
lahf
pop
sbb
cwtl
mov
add
xchg
call
aas
clc
out
push
mov
lret
mov
aam
pop
pop
mov
addr16
pop
jl
js
fxrstor
cmpsb
mov
mov
xchg
popa
mov
cwtl
out
jo
dec
in
xor
pop
out
rcrl
sbb
data16
in
sahf
dec
test
adc
xor
clc
xor
aam
sub
dec
lret
jmp
dec
orl
fcmovnb
aaa
leave
xor
inc
pop
sbb
pop
insl
repnz
filds
dec
mov
xchg
inc
mov
std
mov
dec
imul
dec
pop
sbb
xchg
pop
dec
sti
xchg
mov
outsb
scas
adc
inc
push
hlt
cmp
inc
pop
iret
daa
int3
xchg
jne
cmpsl
idiv
mov
add
insl
mov
lcall
call
xor
mov
orl
aaa
jge
inc
lret
outsl
jns
xor
test
xchg
in
movsl
mov
xor
push
push
mov
pop
arpl
in
push
xchg
addps
xor
sbb
dec
sub
insb
mov
push
leave
cmp
xor
ror
int3
lcall
inc
cmp
push
imul
jae
and
mov
inc
cmpsl
loope
lods
loopne
ljmp
call
pop
jno
sahf
jl
sub
pop
sub
lock
outsl
pop
cmp
jl
ljmp
cmp
out
jp
xor
jnp
leave
xor
out
xchg
dec
or
jae
out
icebp
rorb
fs
dec
outsl
pusha
add
in
inc
cmp
test
mov
fs
jo
inc
sub
mov
and
outsb
sbb
mov
mov
inc
in
sub
test
mov
mov
push
repz
jo
push
mov
cmc
push
stos
fcompl
loopne
movsb
hlt
fstl
pushf
leave
ret
movsb
jbe
push
mov
scas
into
mov
lcall
out
fisubrs
pop
daa
mov
imul
sti
jl
cli
xchg
jmp
cmp
ret
mov
adc
sub
mov
push
cmp
das
sub
inc
insb
sbb
xor
sub
aad
push
or
ss
repz
leave
mov
cmc
stos
cli
outsl
fbstp
mov
fstpt
movsb
jg
lds
lock
fmuls
jbe
incl
fnclex
mov
xor
out
xchg
aam
movsl
pop
mov
icebp
faddl
aaa
or
aam
add
hlt
adc
dec
mov
jo
mov
rcrl
jecxz
lods
jecxz
pop
lods
aam
pop
jp
xor
mov
call
pushf
ja
loopne
mov
add
push
mov
scas
leave
mov
mov
mov
push
push
xor
icebp
push
push
sarb
call
shl
add
pop
xchg
cmp
adc
outsl
add
in
mov
jl
add
je
iret
xchg
inc
add
inc
aaa
sub
push
dec
aas
mov
jmp
xlat
xchg
jne
adc
lock
mov
lods
ss
ja
cmp
pusha
mov
xchg
mov
outsb
ror
pop
cmp
into
adc
cmpsl
cmpsl
dec
icebp
test
cmpsb
int
xor
loopne
sbbl
fsts
dec
scas
dec
sub
in
iret
test
bound
dec
dec
movsb
in
bound
rorb
outsl
cli
pushf
adc
mov
jnp
jae
adc
mov
loope
cmp
andnps
dec
sbb
test
mov
pop
sbb
xor
or
in
push
insl
sbb
test
iret
push
cltd
das
sub
mov
pop
outsb
sahf
fwait
lea
pop
cwtl
mov
shrl
jne
fdiv
mov
pop
and
sahf
imul
insb
stos
ss
pushf
mov
sbb
lret
int
xchg
xchg
pop
mov
adc
lcall
loop
sub
shrl
into
dec
or
sbb
aad
out
add
lock
sub
cli
ret
outsl
jb
xchg
sub
test
sub
std
mov
mov
adc
xchg
fstps
mov
add
mov
push
movsb
mov
push
bound
push
push
mov
test
sbb
pop
push
xchg
push
mov
push
lret
das
imul
sub
lcall
popa
ret
mull
outsb
push
cmp
jl
fadds
xlat
jno
xchg
mov
mov
shl
enter
xchg
jp
pop
mov
ret
cmc
xor
xchg
shrb
lods
arpl
cmp
loop
jmp
rclb
imul
faddp
inc
sbb
out
subl
mov
in
in
xchg
mov
sub
xor
pop
push
out
ret
cmp
shr
ret
mov
adc
xchg
shlb
or
repnz
inc
addr16
jg
jp
or
ja
adc
jbe
mov
add
dec
loop
call
mov
jbe
dec
jge
outsl
cmp
ss
and
sub
subl
loop
arpl
mov
jl
leave
cmc
sub
xor
imul
inc
sub
cmc
out
paddusb
stos
adc
pop
mov
add
stos
sub
aaa
lods
or
mov
loop
mov
jl
sbb
mov
dec
or
popf
jl
call
push
push
and
out
mov
mov
pushf
push
jae
sbb
ficoms
repz
fisubrs
ss
push
fcompl
out
sbb
and
ljmp
pop
pop
mov
or
cpuid
lods
pop
push
test
imul
pop
popf
or
mov
and
les
pop
fsubs
ret
push
xor
dec
out
lahf
sub
inc
xchg
mov
mov
icebp
pop
and
insb
mov
push
sbb
jle
inc
mov
mov
adc
jmp
push
test
test
aam
mov
jb
shlb
mov
lcall
mov
xor
ret
lds
addr16
cmpsb
sbb
cmpsl
gs
sbb
loopne
movsb
mov
or
sub
jnp
sbb
pop
jmp
lea
imulb
dec
and
stc
lret
flds
push
cs
popaw
dec
push
and
sub
loope
add
in
mov
insl
enter
insl
into
cld
es
imul
sbb
xchg
pushf
mov
dec
and
cmp
pusha
pushf
pop
add
or
mov
adc
push
jo
xchg
sub
insl
enter
int3
scas
test
push
push
mov
inc
jmp
mov
in
imul
int
mov
pushf
lods
sub
sbb
sub
lods
adc
lcall
jl
mov
mov
sbb
addb
mov
pop
incb
xchg
pop
push
or
cmp
lea
and
or
inc
lods
call
and
mov
mov
int3
xor
ja
insl
push
enter
sub
mov
push
sar
inc
fs
mov
inc
inc
insl
aam
cmp
ret
sti
test
addl
mov
and
shr
in
ret
lret
pop
js
gs
stos
sub
jbe
les
pop
pushf
bound
adc
jp
repnz
popa
movsl
jmp
dec
jge
cltd
sbb
dec
cmp
and
insb
mov
mov
stos
in
push
sarl
mov
addb
rcll
les
push
push
jl
divl
sbb
lock
and
dec
mov
fsubrl
enter
and
fwait
sbbb
je
push
pop
jge
aaa
sub
pushf
sub
jle
mov
cmp
mov
pusha
inc
pop
shr
scas
xchg
add
xchg
fnstcw
and
xchg
and
pop
fwait
fwait
decb
call
and
push
sub
mov
test
incl
mov
jecxz
mov
inc
fs
add
or
cmp
inc
aad
fbld
inc
pop
mov
cwtl
dec
in
xor
xor
cmp
jle
sub
cmp
lcall
sbb
xchg
cmp
stos
sub
lock
shll
icebp
das
insl
test
cmp
idivl
ljmp
arpl
jns
pusha
int
pop
fists
mov
push
out
in
imul
dec
loope
push
fistpll
sub
rorl
lret
loop
shll
int3
cmp
aaa
push
outsb
xrelease
daa
mov
add
daa
les
testb
mov
push
jecxz
pop
daa
shll
or
xor
sub
daa
mov
dec
cwtl
int3
lea
xlat
xchg
xchg
mov
hlt
mov
or
add
or
and
pop
add
jp
je
jp
cwtl
pcmpeqd
sub
cmp
and
fistpll
or
insl
fstps
dec
mov
jne
mov
arpl
imull
adc
or
adc
jmp
js
subb
js
data16
cld
jnp
movsl
mov
adc
xchg
jns
cmp
aas
sub
fiadds
in
or
sbb
cmp
pop
stc
popa
jb
iret
lret
sbb
cmpl
lret
fs
roll
sbb
mov
mov
and
test
scas
cmpl
xchg
xor
and
inc
sti
or
loope
jbe
inc
cltd
rolb
sbb
popa
xchg
fists
movsb
jns
in
push
andl
fwait
out
and
ss
js
lret
sub
mov
push
lret
repz
repnz
mov
mov
mov
dec
loope
jo
sbb
mov
stos
dec
imul
rorb
hlt
int
incb
dec
inc
adc
jns
dec
mov
lsl
push
ljmp
adc
test
lret
xchg
and
mov
hlt
ret
push
push
jb
leave
adc
push
popa
push
pop
jae
lcall
movsl
inc
sub
cmp
mov
xchg
inc
arpl
cmp
iret
and
push
mov
mov
jnp
sbb
push
push
pop
lods
push
in
pop
inc
adc
test
jnp
cmp
lea
setle
xchg
scas
cld
mov
fcmovnu
mov
jmp
in
sub
inc
jns
shrb
testl
push
adc
cltd
enter
jo
ror
mov
stos
adc
push
xchg
jns
jg
addr16
mov
add
xchg
dec
add
mov
shl
push
and
xchg
je
cwtl
mov
fcomp
adc
mov
or
adc
clc
fsubrs
inc
std
aaa
in
mov
stc
or
lahf
pop
ds
adc
mov
sub
xor
pop
add
movsl
fidivrl
arpl
cmp
xor
push
mov
push
pop
ljmp
sub
push
cmpsb
out
and
ljmp
sbb
cwtl
xchg
add
mov
jl
xor
jnp
adc
jecxz
inc
and
hlt
push
dec
mov
mov
subl
inc
mov
pop
push
fdiv
testb
ja
arpl
notb
and
test
inc
or
xchg
add
std
cmp
mov
cwtl
cmpsb
mov
jmp
push
into
xchg
mov
ret
dec
xchg
lret
icebp
fiaddl
jmp
orl
pop
rclb
push
out
xchg
movsb
cmp
clc
jp
addb
inc
push
and
mov
push
xchg
out
xchg
sbbl
shll
cltd
cwtl
ret
add
loop
jmp
jmp
test
ret
aaa
push
xchg
sbb
arpl
push
outsl
es
out
adc
pop
jne
dec
mov
mov
jge
sub
mov
xchg
add
cwtl
ja
test
xlat
xlat
pop
mov
fidivs
mov
roll
insb
xor
icebp
js
sarb
mov
pop
fnstenv
rcl
or
xchg
rorl
pop
cmpsb
xchg
push
xor
cmpxchg
jp
jp
cwtl
push
mov
or
inc
fdivs
fs
jne
pop
jle
test
adc
roll
push
cld
jmp
fimuls
and
fisubrl
dec
jmp
repz
jl
mov
cmp
or
fisttpll
in
dec
das
sbb
popf
popa
rcr
insb
fsubl
mov
movsl
into
sbb
and
loop
pop
xor
ficoms
jle
xor
pusha
faddl
rcll
or
je
pop
ljmp
mov
sar
mov
push
dec
and
pop
push
sub
pop
fcmovnb
pop
jp
push
xor
mov
ror
mov
jecxz
fistpl
int
es
popl
and
adc
mov
subl
inc
xchg
cmp
add
enter
mull
insl
call
mov
mov
data16
mov
loope
fwait
cmp
jnp
ds
xor
adc
push
std
hlt
xlat
jns
je
cmp
push
in
push
mov
push
out
mov
push
add
fldenv
add
shrl
insl
stc
push
push
jne
push
dec
pop
std
mov
int3
lret
stos
bound
lods
nop
or
and
fisttpl
gs
xor
sbb
add
cmp
inc
fwait
dec
dec
into
add
adc
mov
mov
xchg
or
jbe
mov
adc
cltd
test
pop
jl
popa
push
push
mov
mov
fdivrs
xchg
jnp
or
aas
mov
inc
jge
insb
xchg
cmp
mov
sub
cmp
scas
lds
scas
jo
push
ljmp
pushf
xor
xchg
rolb
mov
add
or
outsl
push
dec
cmpb
fwait
insb
mov
ret
inc
push
jg
repz
and
aam
test
shrl
popa
iret
outsb
jge
cmc
cmp
jle
mov
jae
sbb
in
cltd
sbb
ret
ja
dec
cmp
adc
stc
fstps
movsl
shlb
aaa
out
xchg
mov
cmpsl
mov
insb
mov
and
xchg
push
dec
out
push
inc
out
js
or
mov
out
js
in
sub
ljmp
scas
pop
repnz
or
bnd
lsl
ret
repz
mov
mov
outsb
mov
xor
fdivl
sbb
push
push
jbe
gs
or
lds
mov
cld
fwait
dec
mov
sbb
shlb
sahf
inc
mov
pop
xchg
mov
sub
push
cmpsl
add
xchg
test
push
aas
fcom
dec
inc
push
leave
xchg
push
lret
adc
mov
lcall
pop
stos
mov
sbb
mov
je
push
sbb
jae
stos
inc
out
scas
pop
movsl
mov
xor
pcmpgtb
xor
out
fs
add
push
insb
inc
test
stc
icebp
xor
and
jnp
loopne
jecxz
dec
hlt
lahf
stos
daa
stc
xor
add
inc
dec
mov
stos
pop
cmp
shlb
shlb
sbb
or
xchg
or
and
mov
fwait
les
bnd
out
cmp
inc
movb
fimull
inc
mov
inc
add
push
cli
cltd
dec
aaa
imul
addl
popf
decb
xchg
mov
or
xchg
ret
push
out
jle
repz
test
iret
insb
pop
arpl
xchg
sbb
jge
jge
scas
push
mov
mov
xor
lcall
jo
xchg
add
cmp
sbb
inc
xchg
rcr
mov
loopne
popf
pop
sbb
stos
jb
and
in
inc
xchg
iret
sbb
push
mov
or
fldcw
jg
mov
xchg
dec
outsl
push
insb
fwait
popf
outsb
pop
dec
ds
sub
fiaddl
jle
scas
push
xor
push
into
mov
scas
sub
sub
pop
fmull
mov
jbe
mov
push
iret
imul
jae
repnz
shlb
or
mov
xchg
stos
lret
jo
sbb
sarl
mov
cmpsl
pop
in
daa
push
cmp
or
xchg
xlat
pop
pushf
enter
or
ss
cwtl
adc
mov
roll
shl
in
xchg
mov
test
fmuls
add
stos
inc
dec
mov
cmp
ds
adc
mov
mov
inc
or
fidivrl
cmp
pop
adc
add
sbb
gs
adc
jmp
push
loope
lahf
sub
jo
and
jge
pop
loopew
test
cmp
pop
ds
push
pop
dec
rclb
int3
in
loop
fiaddl
cmp
mov
mov
movsb
adc
ljmp
fstl
cltd
add
add
insl
cmp
lock
push
call
lcall
add
sbb
mov
mov
push
notb
sub
inc
aad
iret
in
add
in
sub
int3
fsubrp
pop
sti
sub
pop
les
xchg
jge
push
jl
pop
mov
test
inc
mov
sub
inc
imulb
loop
sbb
xchg
pop
mov
sub
popa
fdivrl
cltd
mov
repnz
lock
add
dec
es
or
nop
jp
outsl
outsb
movsl
add
adc
dec
popa
mov
adc
dec
int3
xchg
cmp
es
les
pop
loopne
cmpsl
imul
lods
adc
pop
es
dec
fchs
dec
ss
gs
popa
or
pop
add
rcll
ss
cmp
xchg
fwait
test
mov
mov
lock
cmpb
sub
mov
push
scas
int
movb
cwtl
pop
test
xchg
or
push
jbe
cwtl
inc
sbb
inc
pop
into
scas
roll
out
or
mov
mov
push
add
loop
pop
dec
lret
jno
jne
pop
std
jbe
or
pusha
mov
or
add
inc
cld
int
xchg
div
call
inc
pop
sub
or
ss
popf
mov
ljmp
push
and
loopne
xlat
adc
gs
jns
mov
rclb
stc
fsubl
jg
push
and
mov
pop
jb
cmpsl
mov
or
imul
mov
in
iret
mov
adc
rorb
imul
inc
into
pop
mov
pop
pop
aaa
dec
or
into
mov
cmp
jl
mov
ffree
aad
and
sbb
fistpl
inc
push
les
loope
xchg
pop
rsqrtps
int
jl
add
adc
mov
mov
xor
mov
mov
jae
data16
in
mov
lds
xchg
mov
lock
out
popf
mov
notb
mov
push
sbb
pop
add
pusha
push
mov
adc
adc
out
add
sbb
outsb
xor
and
cltd
dec
inc
sarb
js
adc
imull
mov
adc
sbb
sbb
fsubrl
xor
loopne
push
clc
es
fsubr
shlb
push
mov
xchg
adc
js
mov
sub
mov
imul
xchg
jae
das
mov
add
cmp
insl
aas
adc
or
push
stos
mov
loope
mov
stos
outsl
loopne
xlat
and
dec
mov
clc
cltd
xor
push
add
mov
loop
mov
rcrl
pop
mov
fisttpll
aas
mov
pop
mov
push
and
mov
jne
inc
xor
and
adc
mov
imul
in
cmp
adc
dec
movsb
gs
jecxz
add
mov
hlt
adc
push
sub
sub
pushf
lcall
lea
sub
lock
add
imul
add
out
sbb
loopne,pt
popa
dec
aaa
clc
mov
add
add
out
test
cmp
fcmovnu
or
leave
push
sub
push
push
pop
mov
int
cmp
mov
or
and
loope
inc
adc
lock
mov
scas
out
iret
subl
gs
pop
repnz
and
pop
push
and
fwait
mov
mov
scas
iret
add
jns
mov
aas
fwait
adc
xchg
mov
loop
or
sub
stos
out
or
lock
dec
mov
lret
adc
xchg
std
adc
and
popa
pop
cmp
bound
add
adc
mov
es
or
aad
enter
mov
fs
cmp
sbb
jg
push
int
lock
lret
dec
rcrb
mov
or
mov
into
popa
add
js
mov
js
add
scas
jo
mov
mov
out
ds
out
xchg
pushf
movsl
fdivrs
movsl
push
pop
push
loopne
lcall
pop
test
es
mov
in
das
imul
in
ret
mov
gs
and
mov
sub
sub
cld
pop
push
cld
push
dec
mov
rep
xchg
mov
scas
in
sarl
daa
adc
divb
xchg
scas
jns
mov
pop
ror
cmpsl
add
add
int3
scas
fisubrl
outsl
insl
pop
pop
rep
mov
andb
sub
sub
lahf
in
push
lcall
pop
mov
inc
rorl
inc
add
js
out
xor
xchg
sbb
in
push
jmp
jns
sbb
stc
add
mov
ficoml
jns
sub
std
dec
or
mov
int
clc
pusha
push
negl
sub
gs
mov
inc
pushf
mov
movsb
cwtl
js
rcrl
mov
cmpl
inc
fists
cmpps
cwtl
call
mov
test
xor
lahf
es
mull
hlt
cli
pop
ret
jnp
add
jno
rorl
stos
push
sbb
int
repnz
jnp
hlt
popa
cmc
mov
enter
jno
cmp
shrl
pop
and
pop
push
push
push
jns
cmp
pop
jg
sahf
jb
jg
push
icebp
or
cmpsb
mov
and
or
fidivrs
pop
repz
dec
dec
lods
in
xchg
clc
je
lret
out
push
and
dec
pop
dec
cmpsl
ret
aad
jno
ret
addb
xchg
add
mov
sbb
sbb
ret
and
xchg
in
in
test
cwtl
loopne
ds
icebp
pop
cmp
out
fwait
enter
iret
scas
cmpsl
mov
jae
jle
out
cltd
mov
adc
stos
sub
pop
xor
xor
mov
add
arpl
and
sbb
out
mull
add
fmull
jns
repz
mov
shr
movsl
adc
in
out
sub
mov
fsubr
cmp
cmpsb
mov
cwtl
sub
sub
push
lods
add
dec
and
enter
pop
int
add
int3
sbb
cs
fiadds
or
iret
mov
xor
mov
mov
mov
call
lds
test
adc
and
jecxz
jge
adc
notb
add
dec
loop
lods
sbb
push
mov
cli
mov
out
mov
sub
mov
popa
mov
fidivrl
ret
mov
repz
imul
mov
dec
js
arpl
fwait
int3
les
lock
xchg
popf
and
xchg
sti
mov
clc
clc
call
and
xchg
imull
or
pop
inc
into
scas
xchg
out
push
add
movsb
add
aaa
stos
jno
shlb
sbb
inc
je
lock
mov
in
pop
outsb
sbb
inc
pop
in
cmc
cmc
scas
adc
fidivl
adc
mov
mov
xlat
sbb
pop
shll
jns
inc
cmpsb
cs
mov
cmpsl
pop
mov
jnp
mov
push
shr
push
add
mov
mov
cs
shrl
fdivl
dec
xor
mov
fsin
cld
mov
int
das
jbe
outsb
mov
imul
lss
sbb
dec
add
inc
cmp
mov
push
int3
xchg
cwtl
mov
popf
lret
cltd
and
sub
mov
sahf
sbb
int3
lods
dec
in
jle
mov
lret
or
fbld
push
push
add
adc
mov
fbld
jmp
icebp
cmc
call
inc
jne
adc
iret
push
test
cmp
ret
adcl
mov
cmp
imul
negb
sub
rcl
mov
mov
pop
sub
bound
je
xchg
push
pop
test
sub
and
push
mov
aam
ret
les
and
fwait
and
rorb
mov
push
pop
mov
stos
out
enter
insb
cld
mov
dec
in
push
inc
pop
addr16
sahf
loopne
andl
leave
pop
test
xorb
and
popf
int3
mov
sarb
xor
enter
imul
and
out
xor
stos
sbb
je
cmpsb
jbe
mov
es
mov
or
scas
push
in
cli
movsb
pop
cmc
mov
lret
cld
pop
filds
xchg
cmp
inc
cld
in
shll
aas
pop
and
mov
fdivrl
ja
add
mov
xor
inc
lcall
jle
cwtl
frstor
cmp
push
jnp
cmpsl
and
inc
cwtl
pop
xchg
lods
inc
inc
fldt
jmp
cmp
arpl
inc
lods
cld
mov
dec
dec
mov
cld
out
and
and
push
jmp
cmp
mov
and
dec
add
mov
enter
mov
in
xor
pushf
frstor
test
and
repnz
sbb
in
cwtl
in
outsl
lock
cmp
dec
push
mov
jbe
popf
outsl
pop
lcall
cld
sbb
addr16
ljmp
dec
dec
inc
aas
fstl
dec
adc
dec
ret
and
add
push
clc
inc
cld
fwait
xor
push
fsub
add
mov
out
add
fs
rcr
ds
insb
jno
adc
arpl
push
jo
imul
mov
xchg
adc
cmpsb
call
cwtl
imul
ja
jne
and
cli
xchg
dec
xchg
mov
orb
sub
dec
inc
dec
push
push
mov
mov
insl
adc
bnd
sub
jle
int3
xlat
in
push
imulb
test
jbe
mov
sub
lods
push
cmp
mov
push
lods
testb
sbb
xor
fwait
ret
or
cli
sbbb
movb
ret
push
dec
dec
xor
and
and
std
ss
sub
pop
push
test
js
mov
js
test
inc
in
cld
imul
xor
shlb
sti
dec
inc
mov
jmp
div
popf
dec
cs
daa
in
icebp
lahf
fisttpll
leave
and
pop
mov
sbb
adc
mov
dec
inc
jge
mov
nop
movsb
xchg
mov
in
jbe
loop
pop
pusha
adc
dec
stos
jmp
ret
fmul
sahf
xchg
sbb
xchg
cmp
movsb
out
sbb
ja
cmpl
push
in
add
sbb
mulb
enter
enter
popa
pushf
pop
je
xor
subl
repz
std
adcb
popf
push
std
push
arpl
stc
mov
movl
lahf
add
xchg
mov
rorb
adc
jae
xchg
cmp
cmpsb
mov
into
sarb
add
jecxz
outsb
cmpsb
jge
frstor
icebp
shrb
shl
gs
in
in
insl
inc
shll
repnz
inc
push
adc
rcrb
sbb
inc
fidivrs
iret
stc
nop
sbb
add
sub
mul
punpckldq
add
insb
and
jle
mov
mov
add
and
pop
pushl
dec
dec
loope
pop
xchg
cmp
mov
movsb
jne
out
sub
repz
imul
mov
xchg
aaa
or
jb
lds
mov
mov
mull
push
push
push
fildl
and
dec
lcall
jno
outsb
and
cmp
xchg
stc
dec
cmp
mov
push
jmp
sbb
packssdw
cmp
sbb
adc
test
icebp
dec
xchg
xor
xorb
mov
cmpsb
jge
sbb
inc
mov
stos
xor
sub
shlb
stos
into
out
ret
test
lcall
js
xchg
add
andb
push
push
hlt
sbb
lahf
lds
sahf
sbb
adc
adc
jge
or
mov
into
ds
jbe
fwait
push
cltd
push
xchg
ret
jp
or
pop
aaa
leave
push
cwtl
push
ja
cmp
mov
dec
and
push
popf
jle
test
push
cs
cld
cmpsb
mov
out
scas
jmp
jae
sub
push
sub
dec
aad
push
dec
ds
cltd
sub
sbbb
xor
xchg
fildll
jae
push
out
xor
pop
lock
jb
sbb
aaa
jb
push
xor
aaa
mov
mov
outsl
xchg
popf
inc
sbb
jno
pop
xor
imul
fcmovnbe
jp
shl
fcoml
xchg
mov
or
jae
and
mov
aas
loopne
mov
xchg
lods
pop
sbb
push
push
cmp
outsb
xchg
jge
clc
cs
jg
movsl
or
mov
mov
lods
dec
pop
pop
or
icebp
dec
aaa
xor
sbb
bnd
cs
cmp
adcl
adc
int
in
std
inc
shlb
sbb
push
cmp
xchg
daa
js
mov
clc
inc
push
daa
xor
insb
and
fcmove
ret
xor
mov
mov
out
ljmp
orb
insl
mov
jl
ret
xchg
xlat
lods
adc
imull
aas
insb
push
pop
leave
push
daa
sti
mov
pop
dec
stos
pop
aam
mov
mov
mov
xchg
ljmp
or
lods
fcom
push
les
insl
fistpll
mov
push
xlat
xor
sub
outsb
mov
or
pusha
aaa
push
inc
or
sub
in
scas
adc
cmpb
cli
add
icebp
out
mov
adc
loope
clc
push
cmpsb
fildll
pop
mov
push
in
dec
int3
adc
and
mov
or
leave
cwtl
sub
sbb
add
pmulhuw
adc
push
icebp
push
mov
jbe
push
and
adc
mov
xor
jb
jae
bound
push
aad
lcall
ret
rcr
hlt
pop
sti
cwtl
lret
ja
setge
jl
movsl
dec
nop
inc
xchg
pop
cli
lods
int
pop
call
xchg
out
push
btc
adc
sarb
push
popl
push
adc
test
push
mov
pusha
mov
jecxz
dec
cmp
neg
xchg
cmpsb
fisubrl
adc
cmpb
push
mov
mov
mov
cld
sahf
sahf
mov
fstpl
daa
outsb
ss
gs
shll
xorb
pop
flds
dec
insb
dec
mov
in
xor
xor
les
negb
testl
push
inc
pop
xchg
add
push
pop
or
jl
sub
or
pop
es
sbbl
icebp
cmpl
sub
inc
cs
dec
movb
xor
sarb
inc
cmpsb
jb
rcll
pop
and
or
mov
cmp
aas
fnstsw
xchg
and
shrb
insb
in
mov
std
mov
inc
cs
sahf
cmp
cmp
pop
cmpsb
or
push
jo
inc
ret
add
ss
loope
sbb
xor
stc
push
adc
aaa
mov
jmp
sub
jb
sbb
aam
adc
dec
mov
mov
sbb
mov
fimuls
out
out
cmp
and
or
jne
xchg
or
xor
inc
dec
mov
mov
cwtl
inc
sti
ljmp
imul
mov
jbe
or
jnp
bound
mov
and
dec
xor
idivb
mov
sub
inc
mov
xchg
xor
pushw
pop
sti
push
mov
add
mov
mov
lds
push
dec
fstpt
pushf
and
pop
test
out
pushf
and
mov
adc
rcrb
dec
jae
mov
pop
shll
xchg
fisttpll
outsl
icebp
std
aad
cli
mov
popl
scas
fstpl
adc
jl
pop
adc
fndisi(8087
jno
jl
add
xchg
scas
jne
lea
fsubrs
cld
adc
mov
lahf
inc
mov
sar
inc
das
xchg
and
test
das
or
jns
stc
cmp
sbb
jns
cmpsb
icebp
aad
imul
adc
loop
sbb
fistpl
dec
xchg
pushf
aad
xchg
fwait
data16
cld
jae
cmp
orb
ja
fsubrp
loopne
pop
mov
jmp
movsb
addr16
fistps
or
dec
rcrl
dec
adc
mov
lcall
jo
cltd
pop
stc
push
jns
mov
xchg
jg
jne
push
fisubs
sbb
pmaddwd
dec
movsl
and
cltd
add
push
shr
or
or
mov
lret
rolb
xchg
add
jns
jle
dec
mov
mov
mov
les
loop
movhps
xor
cld
mov
stos
pop
and
add
sub
leave
faddp
lock
int
loop
data16
inc
sub
clc
jne
movsb
sbb
aad
in
in
or
in
adc
mov
add
fdivrl
test
xor
pusha
dec
xor
outsl
adc
sbb
jns
loop
cld
push
jmp
dec
lcall
jb
movsb
pop
ret
or
and
ret
call
adc
outsb
pop
in
xor
xchg
pusha
mov
dec
je,pn
in
vmovss
dec
dec
push
dec
ss
pushf
sahf
imul
push
lea
fdivs
push
and
sub
shlb
mov
sub
xchg
or
mov
arpl
popf
pop
fsubl
out
jmp
fstpl
std
cmp
cmp
imul
dec
cmp
rcll
stos
mov
cwtl
fstl
stos
mov
mov
and
aas
add
aad
inc
sub
hlt
jmp
leave
jmp
push
mov
add
loop
je
mov
outsl
xchg
mov
add
out
outsb
xlat
leave
add
ljmp
jae
movsb
pop
jbe
pop
cmpsb
lret
test
dec
imul
jp
iret
cmp
lahf
jge
adc
mov
outsl
mov
push
test
add
stos
add
fildl
int3
adc
sub
jecxz
fxch
pop
lock
dec
inc
je
addl
mov
jo
push
je
iret
mov
pop
adc
jp
outsb
inc
cmc
lds
test
pushf
int
adc
gs
cmp
popa
xor
jge
and
push
in
loopne
imul
shr
jb
cli
mov
aam
rcrl
xchg
lock
add
repnz
subl
fwait
in
mov
mov
or
data16
pop
push
or
push
rol
inc
add
adc
add
sub
arpl
mov
or
jp
mov
jmp
mov
lea
in
mov
add
loop
repz
lea
icebp
dec
fnstenv
inc
lods
push
mov
rcr
ficoms
subl
repnz
push
xor
sti
sbb
popa
mov
jmp
in
mov
pop
jle
pop
mov
dec
cmp
add
adc
mov
addr16
xchg
cmp
cmp
push
sub
inc
fstps
mov
neg
adc
xchg
mov
lods
push
dec
int
mov
pop
repz
es
sbb
xor
push
mov
jnp
xorb
into
xchg
fildll
pmovmskb
mov
enter
dec
lret
xorl
sub
push
and
cmp
aas
test
std
loope
cli
out
push
hlt
mov
add
lcall
xor
dec
lea
pushf
and
in
ret
es
mov
xchg
andl
cmpsb
les
aas
test
repz
dec
jae
test
dec
jae
repz
and
jbe
bound
ja
add
out
jecxz
ja
push
int
cmp
pusha
pop
mov
xor
sbb
shlb
sbb
mov
mov
push
pop
sbb
mov
ss
and
bound
popa
push
pop
clc
push
xchg
imul
lods
xor
fisttpl
fcomi
jl
out
pop
mov
dec
lds
outsb
imul
in
mov
fs
mov
ss
sub
pop
inc
add
movsl
std
iret
sub
in
sub
jp
mov
enter
ja
mov
scas
icebp
add
jg
and
ja
pop
hlt
mov
inc
push
lret
enter
pop
adc
add
push
int3
fcoml
iret
push
cltd
insb
fisttpl
hlt
in
ds
mov
lds
push
add
adc
push
push
adc
xor
cltd
adc
dec
lcall
cli
mov
dec
outsb
shlb
fistps
adc
sbb
and
loope
pop
mov
outsb
jecxz
mov
xchg
cmpsl
or
enter
jb
jno
push
dec
into
push
ljmp
sbb
in
ret
es
sti
inc
cli
ljmp
test
leave
call
test
movsl
dec
sbb
adc
imulb
fidivrl
mov
cmp
inc
arpl
inc
popf
dec
ret
sub
popf
in
fwait
subb
pop
outsl
inc
loopne
aaa
or
dec
cmpsl
aaa
sahf
loope
jbe
and
or
lock
adc
jmp
mov
lds
ror
int3
or
in
xchg
push
aam
and
xchg
jns
cs
sahf
push
lods
add
push
movsb
mov
xor
int
in
dec
cs
pop
pop
mov
sub
sbb
mov
sub
push
in
pop
lret
sub
js
mov
adc
ss
cli
dec
in
cmp
lahf
stc
lods
cmpsb
push
add
dec
and
data16
dec
dec
testl
clc
cmp
jecxz
movsb
push
lods
data16
stos
sub
mov
outsb
stos
xchg
mov
cmp
mov
adc
push
mov
pop
mov
jle
lea
add
dec
mov
cmp
adc
cmc
add
cltd
xor
das
dec
xchg
sub
fsub
or
pop
mov
scas
jb
flds
mov
xchg
adc
cmpb
xchg
test
gs
inc
hlt
icebp
sarb
or
mov
cmp
inc
stos
or
cs
mov
push
cli
add
adc
fcompl
sbb
in
adc
mov
xchg
lret
and
mov
insb
pop
lret
add
lock
inc
xor
bound
push
mov
fadd
ficoms
sbb
xor
add
sub
add
movsl
jo
imul
or
std
fstp
push
mov
in
cwtl
cmc
dec
hlt
rorb
out
inc
xchg
aam
fmull
xchg
lea
rcl
icebp
and
repz
dec
xchg
fisttps
sbb
rolb
fisttpl
daa
icebp
mov
or
lea
cmp
xchg
sbb
cmp
mov
and
lret
jecxz
scas
cmpsl
dec
xchg
sub
pop
push
mov
sbb
daa
adc
jne
ja
or
ljmp
mov
fisubrs
xlat
cwtl
repz
cwtl
sbb
fs
int
cmpsb
es
sbb
aam
cld
push
lea
mov
mov
and
stc
stc
aaa
push
je
xor
fcoml
cmp
loope
in
repnz
xchg
lods
lods
inc
insb
sub
push
xchg
rcrl
call
xchg
leave
xchg
mov
and
hlt
jns
nop
add
sub
jb
and
repnz
pushf
mov
cmp
sbb
sbb
pop
and
les
daa
sbb
jmp
dec
js
adc
jge
imul
iret
mov
orl
xor
movsl
sarb
sbb
adc
pop
cmpsl
adc
mov
mov
ret
aad
xor
jnp
add
mov
xlat
xor
mov
ds
incb
pop
fistpl
jnp
push
push
ret
cmp
fisttpl
aam
stos
arpl
repnz
push
xchg
movsb
adc
push
xchg
mov
mov
pop
push
pop
leave
push
fsubrs
pop
nop
push
mov
outsl
ret
andb
aad
xor
push
out
rcrb
push
es
les
dec
pop
fs
mov
push
and
aad
inc
stos
stc
dec
out
fs
test
dec
lock
push
fnsave
arpl
into
lds
gs
xor
xlat
jle
inc
cwtl
popf
dec
xchg
lods
adc
pop
movsb
and
mov
fstpl
xchg
mov
sub
adc
add
jo
jbe
mov
minps
in
sti
das
clc
aad
inc
sub
jmp
push
xorb
add
mov
pushf
pop
mov
jns
popa
inc
xorl
add
sub
daa
xor
orb
ds
ss
imul
mov
xchg
mov
test
into
in
push
in
cltd
xor
test
sub
leave
sbb
add
adc
lcall
mov
mov
push
iret
xor
and
ja
clc
repz
adc
test
fistl
scas
mov
das
aaa
arpl
stc
lods
jge
lds
repz
movsb
insl
xlat
in
fiaddl
insb
imulb
lods
lock
shlb
ds
sbb
dec
dec
sub
into
add
mov
pop
cmpsb
daa
repz
outsl
in
cld
mov
jnp
idivl
lea
adc
push
adc
xor
notl
jne
sub
sub
gs
sti
cltd
sar
sub
push
mov
dec
add
add
std
xlat
pop
out
inc
mov
dec
pop
bound
dec
orl
mov
inc
xchg
xchg
testb
xor
ja
jbe
xlat
cwtl
push
fisubs
inc
sbb
cmc
std
sub
ret
or
filds
mov
xor
pop
sbb
lods
inc
cmpsb
xchg
push
mov
das
popf
jp
mov
lcall
jg
jecxz
dec
test
xor
pop
andl
push
mov
mov
jb
push
push
mov
mov
icebp
stos
mulb
jns
mov
pop
push
sti
stos
sbb
testl
fsubrs
xchg
mov
notl
hlt
leave
inc
cmp
ret
pusha
aam
dec
in
sbb
push
test
mov
cmp
into
jnp
mov
roll
pop
add
movsl
xor
mov
aad
lock
adc
xlat
sahf
hlt
mov
mov
xchg
push
inc
fs
hlt
mov
scas
jl
arpl
pop
add
push
mov
adc
test
adc
xchg
jbe
fsubr
adc
jb
shrb
and
gs
and
shll
inc
in
pop
gs
imul
lret
xlat
push
imul
xchg
add
adc
inc
repz
sbb
jbe
lcall
cltd
fldcw
sbb
xor
mov
cs
sub
int
loopne
pusha
sahf
fmull
ss
push
mov
jmp
jmp
push
out
pop
std
lahf
movsl
push
imul
ss
scas
jo
inc
mov
or
inc
subl
mov
pop
pop
ret
cmp
test
sub
xchg
inc
adc
js
loopne
push
adc
add
adcl
adc
cmpsl
ljmp
std
mov
cmp
mov
adc
fld
xor
sub
sbbl
adc
sub
adc
adc
mov
push
inc
insb
fisubl
je
mov
mov
pop
mov
dec
fstl
mov
pop
pop
xchg
out
psubsw
sub
mov
stos
or
pop
loop
outsl
lock
pop
test
xor
mov
adc
jge
mov
sti
cld
cmpsl
dec
pop
outsb
movsl
cmp
xchg
mov
insl
adc
add
sub
push
xor
addr16
add
bound
rclb
adc
cmp
xlat
jmp
scas
and
or
ds
xchg
inc
out
fs
xor
lahf
sub
mov
mov
jb
add
test
imul
jns
xchg
jmp
aaa
jp
dec
lock
es
mov
mov
jmp
out
mov
lods
sbb
sub
mov
or
sarb
aad
in
stos
inc
cli
xchg
inc
mov
mov
scas
test
dec
divl
adc
lea
dec
arpl
out
xor
fsubrs
xor
daa
jp
cmc
outsl
push
repnz
jns
stos
aad
pop
pushf
xor
xchg
popf
xlat
enter
cs
fidivl
loop
arpl
mov
mov
pop
jae
int3
sub
jge
jae
mov
loope
jns
in
sti
outsl
sub
fdivrs
mov
mov
icebp
lcall
bnd
mov
push
jp
movsb
mov
xor
jo
push
sbb
lcallw
enter
cmpl
scas
roll
sub
pop
pop
jnp
add
int3
sbb
dec
cmp
js
and
or
adcl
pop
in
xchg
push
gs
stos
jmp
test
mov
fucomp
fcoml
xchg
inc
fnstsw
mov
dec
scas
inc
stc
jecxz
dec
shlb
mov
mov
pop
jle
adc
stc
mov
outsb
ss
imul
jb
xor
jp
bound
xchg
xlat
adc
inc
mov
adc
xlat
shll
or
cmp
js
test
mov
in
push
cwtl
cmp
test
stos
inc
pop
cmp
inc
or
xor
push
mov
mov
inc
lret
in
mov
or
mov
insl
roll
and
adc
js
pop
lock
test
or
lret
and
out
cwtl
pop
push
arpl
fistl
jns
pop
fiaddl
into
je
out
xor
push
jns
push
iret
or
dec
or
or
adc
dec
jl
sbb
and
mov
js
mov
iret
cmp
cmpsl
dec
cwtl
pop
add
lea
mov
lods
arpl
inc
sbb
dec
in
ror
leave
das
and
enter
sbb
imul
in
cmpsb
sbbb
mov
jle
data16
fcomip
lret
sahf
xchg
out
jl
xor
rcll
lahf
mov
jg
cmc
xchg
fstpl
data16
out
daa
xchg
flds
or
lea
icebp
negl
movd
movsb
push
add
cs
pop
rorl
jecxz
flds
ds
data16
jp
insl
rcrl
pop
je
mov
dec
cmc
loope
push
xchg
hlt
pop
push
add
mov
mov
loopne
mov
bound
pusha
mov
stc
ficoms
pop
xchg
subb
mov
mov
pop
pop
pushf
lock
cld
clc
iret
loopne
sbbl
pop
dec
mov
iret
fs
pop
pop
cmpl
loope
call
jg
test
sub
or
cmpsl
call
ljmp
add
cmp
mov
outsb
stc
mov
push
aad
lds
cwtl
push
fisubrs
push
gs
jmp
fsub
enter
pusha
rcrb
xchg
in
mov
aaa
inc
subl
daa
mov
mov
pop
inc
int3
dec
lcall
push
mov
repnz
popa
mov
enter
mov
sub
pop
ja
fnstsw
hlt
into
out
scas
dec
push
psrlq
pushf
pmulhw
bound
cmp
test
in
and
stc
mov
add
mov
sarl
push
sub
lods
sbb
pop
mov
movd
push
movsl
pusha
jnp
in
in
mov
loopne
lods
xchg
mov
out
and
cmp
call
dec
push
jns
rcll
jae
fs
push
xchg
sub
test
and
adc
test
clc
push
and
pmulhw
decb
push
sarl
mov
int3
mov
inc
ss
js
or
inc
dec
cmp
xor
cmc
jge
sbb
dec
xor
loopne
fcompl
mov
dec
js
jg
gs
lahf
xchg
and
jp
adc
inc
in
cmc
mov
or
xchg
mov
mov
int
enter
outsb
call
cwtl
stos
xor
cmp
stos
mov
or
add
movsl
pop
sbb
push
jns
das
add
pop
ljmp
je
or
dec
data16
cltd
xchg
lcall
mov
fwait
in
pusha
mov
int
push
lods
int
push
adc
push
add
iret
push
fidivl
lock
es
inc
add
push
cmc
stos
inc
std
dec
popf
and
jmp
mov
mov
lcall
mov
lds
and
or
xlat
inc
mov
out
filds
sti
add
jg
cmp
test
popf
xor
xchg
ret
pusha
mov
jo
subl
pushf
cmp
pop
sbb
stos
xchg
pop
lret
jmp
movsb
pop
imul
mov
adc
push
jge
cmpsb
push
icebp
in
fimull
lahf
xlat
adc
pop
sbb
daa
xor
nop
mulb
mov
shlb
mov
inc
dec
or
fwait
xchg
mov
push
sub
mov
fs
and
outsb
fisubl
ret
jg
jno
popl
repz
xchg
mov
lea
lret
mov
push
ret
add
std
js
insl
pushf
push
mov
ret
fisubs
or
lahf
push
mov
cmpsb
xor
call
aam
test
adc
mov
test
cld
push
cmp
out
nop
jmp
cmp
mull
mov
mov
ljmp
mov
in
fistl
mov
cmp
or
jns
push
mov
fists
jecxz
sbb
sbb
call
call
lahf
in
sub
in
and
dec
test
pusha
bound
mov
inc
fistpll
rcr
stos
jle
sbb
cmp
pop
imul
sub
and
in
orb
das
call
xchg
xor
sub
push
movl
mov
cs
clc
mov
push
push
jg
mov
mov
lods
push
push
in
sub
jbe
jae
insb
adc
movntps
add
add
fs
stos
lods
adc
xor
iret
lods
pop
std
popf
push
xchg
testl
jmp
jae
sbb
xor
lea
fstl
jl,pn
xchg
jle
stos
in
or
fadd
dec
outsb
jg
push
cs
imul
insb
les
movsb
or
fstpt
enter
mov
mov
out
js
repnz
dec
cmp
pop
repz
fstpl
sbb
xchg
jo
pop
out
jp
push
pop
loop
add
loop
shll
fimull
test
sub
daa
sbb
scas
rcr
pop
lock
add
lcall
inc
xor
mov
mov
mov
mov
cmp
inc
cmpsl
int3
lods
push
sti
in
test
push
push
pop
push
pop
ljmp
idivb
scas
jl
je
sbb
in
popf
aam
loope
pop
popa
cmpsb
out
call
test
leave
inc
pop
mov
imul
xchg
xorl
push
push
ficompl
pop
rcrl
jp
cmp
stc
aaa
push
and
xchg
sbb
push
adc
es
int3
aam
in
insb
sub
mov
fs
mov
les
pop
push
fwait
mov
fldl
adc
stos
dec
push
repnz
addb
xchg
push
mov
jge
cmc
std
lahf
jns
jg
enter
xor
lods
adc
int
cmp
or
pop
sbb
inc
mov
mov
push
or
cmp
add
aas
in
sahf
xchg
rorl
jmp
mov
mov
aaa
arpl
xchg
xchg
push
arpl
test
mull
lea
sbb
mov
and
repz
jmp
orl
dec
rcr
jle
or
adc
cs
jno
loop
daa
push
sub
xor
ret
repnz
sahf
push
inc
xchg
flds
shlb
fstl
jae
mov
enter
outsl
jae
rol
xor
pop
adc
or
fsubl
add
mov
jge
enter
mov
inc
jne
pushf
hlt
cmpsb
sbb
sbb
and
pushl
push
loope
aad
icebp
ja
lret
int3
cmp
and
repz
jcxz
add
popa
or
outsb
call
stc
mov
adc
out
test
mov
das
loop
pop
sub
test
lods
sbb
je
sbb
lret
cmpsl
js
inc
pop
jae
pusha
or
jmp
push
js,pn
and
or
cmp
out
xchg
jecxz
push
mov
cmpsb
inc
clc
cltd
rcrl
cmc
lcall
shl
pop
lcall
ss
lods
fidivrs
mov
mov
je
mov
into
ljmp
xor
jne
mov
fildll
sub
daa
js
insb
ret
mov
inc
add
sbb
xor
mov
cltd
js
rcrl
mov
movsb
aam
cmc
inc
gs
adc
sub
sub
imul
or
xchg
shlb
stc
loopne
jmp
or
rcl
shlb
xchg
add
jecxz
icebp
sbb
jp
xor
xchg
out
fbstp
dec
test
cmpsl
lcall
addr16
ljmp
mov
out
imul
add
mov
mov
mov
sub
push
lret
js
sbb
pushf
loop
add
xor
or
scas
inc
sub
add
scas
mov
ret
loope
cmp
lret
gs
jmp
add
xchg
out
divl
dec
jne
xor
sub
cmovnp
ret
xchg
ds
mov
mov
mov
xor
sbb
sub
notl
xchg
ret
test
lcall
cli
pop
bound
imul
jo
pusha
imul
and
aad
lods
lods
mov
push
sbb
push
cmpsl
xor
mov
adc
inc
in
pop
pop
popf
jp
jae
sub
mov
mov
inc
test
cmp
and
jbe
inc
ljmp
ficompl
jge
push
int
in
pop
mov
adcl
cmp
cwtl
aad
sbb
mov
sub
call
mov
inc
mulb
push
mov
loop
push
sahf
pop
pop
push
xchg
xchg
das
subb
jo
sub
mov
pop
imul
mov
sbb
das
push
pop
xchg
adcb
mov
cmpsl
movsb
dec
ljmpw
xor
push
int3
loop
pop
sub
in
das
hlt
mov
aam
xchg
fwait
inc
mov
mov
cmp
jge
popf
ret
mov
shll
cs
iret
mov
push
scas
rcr
adc
mov
ret
dec
add
fs
push
push
lods
ja
fistpll
out
xchg
lds
xor
push
enter
cmc
jb
ja
ss
push
or
inc
or
popa
scas
test
push
pop
lret
js
jo
testl
lock
xchg
loopne
fsubrp
add
ret
test
sub
divb
cmp
scas
lea
mov
cld
es
rcll
inc
mov
xchg
jnp
ret
mov
aad
sbbl
cmpsl
mov
movsb
mov
sti
adc
in
dec
cs
mov
push
adc
jmp
div
inc
jmp
dec
cmp
or
hlt
xlat
inc
pop
dec
xchg
ret
enter
pusha
add
jne
nop
pop
push
cmpsl
push
adc
mov
xchg
adc
lcall
push
sub
lret
outsb
cmc
repz
cmpsl
es
sahf
out
int3
sbb
test
mov
loopne
mov
pop
mov
pop
add
sbbb
enter
leave
pop
mov
lea
leave
cmc
repnz
mov
xorb
adc
sub
mov
sub
cmp
mov
and
in
jl
out
loop
pop
shlb
fcoml
sub
sbb
dec
jp
ss
xor
sti
xor
jne
sub
add
and
popa
push
leave
and
sub
std
fildl
cltd
push
gs
push
mov
js
mov
daa
inc
ja
mov
les
jnp
mull
mov
add
or
in
xchg
cmpsb
adc
dec
in
pop
add
sar
add
jp
lea
out
enter
xchg
mov
dec
es
test
ret
xchg
and
sub
mov
jl
iret
mov
jecxz
mov
jmp
mov
xor
ja
pop
mov
adc
jl
icebp
sarb
or
lods
pop
pushw
mov
inc
lock
enter
fiaddl
jecxz
and
loopne
inc
xchg
push
aaa
fcomps
mov
mov
fs
je
addr16
jl
adc
jae
xor
push
jmp
mov
adc
icebp
xchg
dec
add
push
cmp
dec
enter
out
flds
mov
add
cli
sarb
stc
pop
movsb
dec
stos
pusha
fisttpl
jecxz
jp
xor
movsl
test
add
test
jmp
and
cmp
sub
sub
jmp
movsl
cmp
lcall
dec
loop
push
sub
mov
mov
ja
mov
xor
sbbb
pop
in
mov
cmc
loopne
and
or
mov
xchg
pop
cli
cli
push
in
aam
mov
enter
out
mov
mov
push
imul
xchg
cs
inc
negl
ljmp
mov
testl
jge
icebp
loope
pop
jl
pusha
pop
pop
divl
cmc
outsb
out
bound
rcrl
fwait
push
mov
or
lds
mov
dec
cltd
sub
in
insl
adc
lcall
cmc
jmp
in
insl
adc
dec
xor
in
xor
inc
aas
pop
push
xor
pop
xchg
mov
dec
dec
cwtl
outsb
movsb
shll
add
or
std
push
aad
push
enter
aaa
ficoml
addr16
pop
xchg
xchg
mov
mov
cwtl
or
test
inc
jae
in
sbb
ret
fisubrs
sbb
imul
pop
jae
inc
push
mov
scas
std
aaa
jl
and
arpl
jg
mov
pop
or
push
bound
add
ss
push
leave
lock
into
xor
aam
loope
andl
notl
lret
pop
pop
mov
jecxz
mov
mov
inc
push
xor
out
ljmp
rolb
inc
push
hlt
xor
sbb
push
imul
inc
adc
test
mov
ret
and
movsb
jnp
dec
insl
repnz
or
dec
xchg
in
outsl
mov
popa
dec
and
add
inc
xor
jp
sahf
sbb
outsb
cmp
mov
sbb
xor
fistpll
pop
cmpsb
movsl
cmpsb
fldl
dec
or
movsb
pop
int
cmp
xchg
jmp
jge
pop
arpl
cmc
xchg
xchg
fs
je
sbb
xor
fildll
xor
in
cltd
xchg
andb
adc
das
push
loop
cmpsb
sbb
sbb
sbb
pushf
cmc
xchg
xchg
cs
das
xor
bound
stc
cltd
out
mov
incb
and
push
stos
clc
lods
pop
fbld
dec
cmp
js
push
mov
jg
push
addb
lret
fwait
xor
insb
dec
sbb
in
adc
int
xor
mov
xchg
push
scas
bound
js
mov
aaa
add
xor
stos
orl
cmp
push
xor
lods
insb
jecxz
pop
loope
scas
adc
cmp
push
sub
sbb
push
adc
lock
cmp
jno
lock
adc
outsl
mov
fdivrl
add
pop
call
in
push
jl
loop
xchg
daa
inc
mov
xor
aas
sub
mov
jmp
jecxz
push
dec
out
and
jmp
arpl
stos
or
push
xchg
rorb
and
pop
loopne
pusha
sub
andb
xor
out
xchg
loop
insb
add
cmp
insb
add
mov
icebp
mov
pop
jb
add
sub
cld
fimuls
aaa
xor
and
xor
dec
pop
or
popf
adc
test
or
cmp
or
in
add
cwtl
test
dec
sbb
sub
test
jmp
mov
inc
push
test
push
dec
dec
dec
addr16
lcall
rorl
pop
and
sahf
hlt
jns
aaa
mov
pop
idivb
xchg
jle
nop
aad
lret
xchg
xchg
addr16
xchg
adc
pop
repnz
lcall
pop
xchg
cmp
bound
ret
dec
adc
andb
stos
inc
cmpsb
data16
adc
or
movsl
pop
mov
sbb
sbb
mov
jnp
mov
addb
fs
sbb
cltd
aas
bnd
fidivl
sub
jns
notb
dec
ficomps
adc
add
leave
pop
stc
inc
or
repnz
push
mov
cmc
jb
pop
fdivrs
mov
push
loope
popa
add
out
cs
in
mov
enter
inc
and
mov
pushf
das
fistps
push
insb
mov
mov
and
inc
shr
outsl
sbb
fisubrl
xchg
inc
xchg
jg
out
dec
xchg
fwait
mov
gs
mov
repz
stos
iret
les
stos
xlat
movsb
pop
test
jmp
xchg
lea
outsb
fadds
xorb
mov
lahf
pop
imul
pop
xor
call
pop
test
xchg
sbb
mov
test
nop
adc
mov
jl
xchg
addb
dec
ds
sbb
sbb
jl
jns
test
mov
fsub
cmc
loope
cmp
xorb
adc
fdivrl
gs
sbb
scas
cmpsl
mov
outsb
lret
test
push
push
mov
scas
incl
jecxz
push
cmpsl
sbb
imul
ja
cmp
dec
in
or
imul
in
mov
xchg
into
adc
or
mov
daa
mov
int3
aad
jo
rorb
jno
pop
jno
inc
lea
sub
loope
dec
imul
and
adc
stos
pop
xchg
cwtl
push
lcall
mov
xchg
mov
inc
pushl
mov
sub
rorl
mov
fistpll
addr16
jns
lahf
or
pop
xchg
aam
int
das
sbb
adc
inc
dec
fiadds
dec
inc
xchg
imul
or
mov
dec
push
sahf
cld
mov
std
mov
int
mov
pop
sbb
out
push
jp
iret
lret
nop
aaa
test
stc
push
inc
lods
dec
fnstenv
or
call
or
aad
xlat
sub
dec
int
inc
push
mov
loop
push
mov
push
addb
xchg
out
sbb
and
push
xor
xchg
rcll
mov
das
jp
pushl
std
aad
clc
fs
lret
cmpsb
fstpl
jle
les
push
add
xor
insl
mulb
stos
cmp
pop
es
sub
sub
sbb
mov
test
pop
jp
push
bound
incb
sub
sbb
add
sti
or
jp
mov
repnz
pop
lret
popf
daa
pop
es
push
pusha
inc
lods
and
sbb
repnz
mov
pop
cmpsb
fcom
bound
pop
lock
aam
xchg
add
xchg
int3
shlb
or
int3
cmp
push
lds
out
stc
and
inc
adc
push
cld
cwtl
std
lret
cmp
and
jb
out
dec
fisttps
into
pushf
mov
aas
cmp
test
sub
cmp
pusha
add
cmp
mov
jp
mov
iret
pusha
fadd
mov
lea
xor
mov
lods
cmp
mov
push
arpl
es
pop
clc
sarb
stos
or
inc
filds
sbbl
adc
imul
rcrl
dec
shlb
adc
cmpsl
sbb
inc
sbbl
mulb
sbb
or
cmp
fistpll
aaa
mov
pop
int
push
add
mov
push
lret
jne
lods
test
adc
ret
xor
push
jle
shll
dec
mov
loop
push
mov
mov
push
sub
mulb
stos
sar
daa
shl
lock
xor
inc
imul
loope
ret
push
in
lahf
pusha
pop
inc
and
push
imul
xchg
push
cli
cmp
pop
iret
push
dec
jmp
outsl
lret
dec
xlat
xchg
mov
cmp
leave
jl
push
push
sbb
xchg
into
into
outsb
cwtl
in
ss
mov
fildl
fistl
pop
ja
push
add
push
inc
push
sbbb
lods
xchg
mov
icebp
mov
imul
jle
pop
idivb
add
sbb
inc
mov
ljmp
dec
inc
mov
shlb
and
mov
rclb
dec
xchg
outsb
aam
pop
das
fwait
mov
jp
cmpsl
test
cmp
ja
cmp
pop
leave
repnz
scas
out
sub
nop
ret
cmp
enter
adc
cld
push
insl
cmp
sbb
call
or
scas
xchg
dec
xlat
int
or
sub
dec
sub
and
loopne
push
daa
pop
xor
fisubl
leave
movsl
cmp
stos
stc
and
sub
lret
out
adc
loopne
mov
int
pop
cwtl
movsb
and
jno
insw
ds
dec
mov
lds
hlt
leave
mov
pop
mov
and
inc
sahf
leave
dec
fdivrs
push
loope
mov
sahf
push
pop
push
fsub
cmp
xchg
subb
adc
xor
add
xor
fiaddl
mov
add
fimuls
ficoml
mov
and
out
xor
outsb
pusha
push
fsts
or
mov
aad
push
adc
add
addr16
mov
into
enter
imul
scas
ret
stos
cmp
xlat
dec
mov
jl
insb
push
lods
adc
inc
or
inc
pushf
bound
add
dec
or
mov
hlt
dec
push
js
sub
push
or
int
fcoms
pop
sbb
sti
insl
sarl
push
notb
inc
pop
or
xor
mov
pop
xor
ret
movsl
push
mov
imul
push
jecxz
loope
repnz
or
out
xchg
mov
sbb
jno
in
sahf
dec
les
sbb
add
mov
inc
nop
mov
loop
and
popa
xor
sahf
mov
push
leave
incl
lock
lcall
cmpsb
leave
pop
pop
lahf
imul
lret
jecxz
add
aad
gs
fs
dec
cmp
cmc
lods
or
mov
loopne
mov
push
negl
mulb
add
xchg
push
out
adc
out
loope
inc
fiaddl
in
inc
out
or
stos
cmpl
push
sub
jae
mov
pop
leave
dec
cmp
sbb
jmp
pusha
mov
xchg
das
scas
xchg
fcoml
inc
or
inc
test
pop
pop
outsb
data16
stos
in
jl
lods
cli
into
pusha
or
in
xchg
and
sub
loopne
adc
mov
inc
sub
dec
and
rcll
sub
loop
sbb
into
sbbl
movsl
add
stc
dec
sahf
jae
push
loop
cmp
pop
je
sahf
pop
gs
cmp
jg
inc
lret
inc
fnstenv
loop
jg
in
mov
dec
les
and
xchg
jge
lea
sub
aam
cwtl
fidivs
jg
sub
push
std
mov
pop
sub
fldcw
pop
rclb
popf
adc
ret
test
sahf
pop
push
pop
mov
scas
push
scas
lcall
bnd
je
push
mov
cld
mov
xorb
mov
sbb
repnz
mov
jns
sub
mov
xor
xchg
test
arpl
push
pop
or
push
mov
adc
adc
cs
pop
or
hlt
loopne
dec
add
icebp
and
cmp
cmp
in
cmp
imul
lods
inc
in
test
push
daa
sub
repnz
fiaddl
mov
cmc
mov
xchg
inc
idiv
mov
std
cmp
cli
xorl
enter
inc
das
and
int3
mov
jmp
dec
scas
pop
push
test
loopne
icebp
sub
dec
aas
daa
iret
rep
movsl
mov
and
inc
pop
xchg
repz
les
pushf
push
outsb
adc
mov
dec
sub
out
lret
adc
in
add
fimull
rcrl
xchg
mov
sti
xor
ret
scas
mov
xlat
mov
and
popf
jno
cmpb
pop
scas
stc
cmp
cwtl
adc
adc
or
sbbb
or
pop
in
ret
or
mov
inc
rcll
daa
icebp
inc
sbb
sub
mov
mov
xor
hlt
push
dec
das
mov
adc
xchg
lret
jge
cmp
dec
push
insl
jg
aam
xlat
add
dec
push
jmp
mov
popa
rcrl
cld
sbb
arpl
pop
cmp
cmc
data16
mov
hlt
repnz
or
jae
insl
aas
shl
icebp
inc
subb
dec
pop
divb
inc
xor
nop
sub
shlb
add
out
push
arpl
ljmp
push
in
dec
or
adc
inc
jmp
ds
sub
mov
sub
push
adc
adcl
cmpsb
xchg
xchg
fists
and
ret
inc
jp
dec
dec
lock
mov
add
ss
imul
push
data16
enter
pop
sub
cmpl
in
mov
dec
xchg
mulb
xchg
push
pop
imul
insl
fcoml
repnz
stc
pop
loopne
outsb
lret
adc
pop
dec
cld
or
popf
lods
clc
in
jns
dec
psubusw
inc
rorl
adc
mov
xchg
xor
dec
push
sub
sbb
or
or
stos
jo
pushf
and
dec
lock
add
shl
mov
jg
push
shll
hlt
cmpsl
popf
stos
xor
mov
ja
inc
stos
mov
push
mov
push
aas
loopne
push
or
jecxz
mov
mov
cmp
test
imul
dec
fsubrs
faddl
ret
mov
in
sub
mov
xorl
cmp
enter
mov
sub
jp
mov
and
movsb
cwtl
pop
dec
sbb
and
insl
rolb
daa
cld
in
cwtl
test
pxor
scas
insl
popf
fmuls
cmp
add
das
mov
cmp
insl
pop
dec
popf
lcall
sub
xor
and
mov
jmp
loopne
jge
adc
jno
inc
out
fsub
push
pop
cmp
shrb
push
xor
mov
in
jg
adc
or
les
popl
push
in
cmp
mov
test
aaa
cmp
xor
xor
jbe
xor
push
mov
mov
mov
or
adc
iret
outsb
mov
popf
andb
pop
push
and
sub
or
cmp
jne
stos
test
inc
adcb
pxor
cmp
shl
loop
cmp
lret
popa
daa
fwait
lea
mov
add
inc
ss
adc
lret
dec
aas
push
test
cmp
sub
push
pusha
or
inc
dec
call
mov
gs
cmp
mov
xor
inc
xchg
mov
or
andb
test
xor
outsl
ds
movb
out
add
loope
lret
mov
imul
xchg
das
jns
xorb
test
ja
ss
stos
rcr
xor
mov
mov
or
push
pop
push
jbe
int3
mov
jp
mov
jl
jno
clc
aas
push
pusha
push
cmp
popf
das
or
and
sub
xor
adc
outsl
add
mov
es
lcall
or
sub
aam
ret
iret
xor
sub
movsl
shrl
imul
out
movsb
out
cld
fs
ljmp
ss
les
xor
add
pop
sbb
sub
rcll
lahf
cwtl
cmc
add
sbbl
mov
adc
sbb
test
mov
test
int3
stc
fsubrp
and
or
and
fadds
sbb
pop
adc
jno
add
mov
ljmp
xor
sbb
pop
loop
xor
mov
mov
sub
push
fbld
lcall
add
and
test
sbb
jne
push
idivl
imul
jl,pn
cmpsb
and
int
inc
add
iret
lods
movsb
imul
push
add
call
out
adc
test
sub
adc
mull
xlat
sbb
or
insb
sbb
push
cmp
dec
dec
and
mov
fmul
mov
mov
mov
mov
mov
js
jnp
push
rcr
outsb
inc
in
stos
inc
cltd
sub
push
ss
mov
notb
test
shrb
jge,pn
inc
adc
pop
inc
adc
ret
movsl
rorb
out
pop
sbb
dec
test
enter
cmp
cmc
out
and
subl
inc
jge
xchg
push
aad
dec
xor
inc
pop
or
or
xchg
sub
daa
je
and
ret
movsb
mov
addr16
xchg
inc
mov
rolb
call
dec
xor
adc
adc
xchg
add
add
out
dec
lds
inc
mov
mov
pop
add
pushf
lock
xor
xchg
adc
int
idivb
xchg
int3
sub
add
out
push
pop
std
fdivl
cmp
push
add
jnp
ljmp
dec
fsubl
add
ljmp
pop
add
icebp
and
nop
mov
je
andb
hlt
sub
in
jecxz
lods
inc
shr
popa
loopne
adc
push
iret
or
xor
or
pushl
and
pop
dec
xor
inc
enter
push
inc
jb
sbb
pop
ret
popa
jbe
xor
lds
push
data16
pop
bound
pop
stos
mov
adc
out
add
sub
and
lahf
jne
mov
cltd
lcall
xor
out
cmc
arpl
xchg
nop
ret
lret
je
inc
dec
mov
adcb
push
das
sbb
cwtl
xlat
or
push
fiaddl
mov
inc
sub
dec
push
or
pop
into
fwait
mov
jbe
cmp
fisubrl
cmp
sub
mov
fdiv
aad
mov
xor
adc
popa
push
test
test
in
or
sub
jno
cmp
pop
movsb
stos
stos
mov
cmpsl
aaa
mov
fs
inc
mov
lods
fs
icebp
push
sbb
inc
mov
add
mov
jecxz
movsb
sti
mov
push
pushf
sub
sub
shrl
xor
push
in
mov
pop
dec
jmp
mov
negb
or
push
push
mov
rol
rclb
mov
imul
in
outsl
xor
mov
lods
cmp
inc
lods
rcll
sub
dec
test
mov
das
andb
rcrl
call
push
dec
sti
jno
mov
jmp
roll
push
call
outsb
xchg
mov
dec
dec
jecxz
inc
sar
or
popf
add
pop
in
addr16
mov
stos
mov
insl
sbb
addr16
out
js
stos
cwtl
mov
fcomip
and
xor
ljmp
fildl
push
jns
mov
in
jecxz
leave
or
in
out
inc
xorb
add
insb
or
push
repnz
mov
sbb
add
mov
iret
mov
push
add
pop
mov
mov
fcoms
std
mov
loop
dec
lret
sbbl
inc
out
jb
aad
insl
cmp
add
aad
leave
dec
mov
in
jno
popa
xchg
pop
out
nop
adc
mov
out
mov
test
je
scas
iret
dec
push
into
inc
loopne
cmpsl
cli
mov
inc
pop
stos
out
sbb
scas
cltd
push
pop
cmp
xchg
adc
adc
test
sbb
outsl
or
push
jmp
test
sub
cmp
test
mov
or
jl
popa
or
pop
xor
and
loope
frstor
mov
or
dec
subl
fcompl
popf
fstpl
pop
aam
pop
lcall
es
test
dec
sbb
daa
inc
xor
fs
bnd
push
jle
test
js
enter
fidivrl
jns
push
dec
mov
mov
iret
idivl
xor
jecxz
inc
sub
lock
mov
mov
cmp
dec
adc
ret
movups
pop
rol
aam
push
dec
dec
out
fistpl
mov
mov
mov
sti
dec
push
loope
pop
add
imul
mov
xchg
imul
dec
xor
icebp
sub
out
pop
fisttps
push
pop
and
lea
sbb
push
jno
add
xchg
sub
jecxz
decl
loope
test
push
adc
aad
sub
mov
mov
mov
popl
jns
xchg
mov
xchg
mov
sub
and
jl
les
push
fnstenv
mov
outsb
popf
adc
movsb
add
ret
into
pop
outsl
les
movsb
ds
je
lods
bound
loope
call
rolb
and
test
adcl
xor
adc
rcrl
dec
sahf
cmp
lcall
push
iret
pusha
aad
int3
out
scas
push
outsl
mov
adc
jp
dec
xchg
fiaddl
shrl
test
popa
movsl
pusha
cmp
leave
sub
jecxz
mov
mov
and
and
xor
mov
mov
mov
dec
and
ljmp
jbe
jb
mov
stc
jp
stc
mov
lods
cmp
xchg
inc
orb
adc
mov
jne
push
pminsw
inc
mov
jae
mov
enter
mov
enter
pop
lods
mov
mov
adc
int
add
jecxz
sub
in
inc
lea
icebp
addl
and
ds
dec
xor
pop
sti
mov
ss
inc
orl
icebp
push
mov
imul
adc
inc
dec
sbb
add
cmc
pop
shll
testb
and
mov
add
loop
ret
in
out
jbe
leave
cld
mov
mov
sub
aam
push
fsubrs
lea
sub
mov
adc
adc
iret
stos
xchg
xorl
or
les
stc
dec
lods
in
mov
insb
jne
lods
sub
lods
lods
inc
add
loope
fcompl
cmc
negb
mov
popf
pop
xchg
cmp
addr16
sti
cmp
jb
jl
and
das
rcll
stos
xor
addr16
xor
aad
xor
jle
push
stos
fs
lods
xor
aad
xchg
sarl
leave
fs
dec
and
pop
dec
xchg
jecxz
in
or
inc
outsb
jns
subb
add
cmp
mov
cwtl
imul
xorl
sbb
jo
inc
mov
xor
mov
fs
pop
scas
jno
cmp
orl
iret
sahf
sbb
push
cmp
lock
call
sti
cmp
fdivr
sarb
mov
push
adc
cmp
daa
sbb
lods
outsl
push
ljmp
das
out
pushf
aad
jmp
push
js
mov
push
sti
inc
pop
aad
int
mov
leave
fwait
push
ds
sbb
xor
lea
fildl
loop
in
nop
mov
inc
lcall
repz
stos
mov
loopne
lods
cmc
mov
jno,pt
aaa
cwtl
add
adc
push
push
movsb
sub
sti
lods
xchg
xor
les
adc
in
mov
or
xlat
in
mov
daa
jle
xchg
inc
jae
pop
ss
inc
push
xchg
jb
xor
mov
aaa
into
xchg
lds
jmp
mov
mov
fcmove
cs
test
jmp
incb
js
sahf
sahf
leave
mov
inc
inc
mov
das
in
leave
orl
mov
mov
es
insl
push
pop
js
lds
and
or
adc
xor
sbb
and
push
mov
and
vshufps
mov
mov
adc
rcll
fisubrs
popl
ljmp
movsb
aad
push
mov
cmpsl
into
pop
aaa
dec
push
lret
clc
xor
inc
inc
ds
mov
push
mov
add
inc
leave
nop
and
adc
popa
ljmp
rcl
cmp
sbb
mov
mov
pop
es
cwtl
mov
dec
sbb
ljmp
adc
cmpsb
add
imul
fwait
dec
push
fidivl
jmp
frstor
xor
rorb
adc
push
mov
fisttpl
mov
cmpl
dec
mov
sbb
ficompl
xchg
sub
and
xor
ja
repnz
rorl
aaa
ss
sahf
sbb
jae
mov
enter
cmpb
adc
mov
push
aaa
mov
pusha
cmp
cmp
push
and
dec
pop
and
cli
je
mov
addb
lret
insb
pushf
daa
push
xchg
cli
stos
push
xchg
pop
rcl
aas
jl
loope
push
arpl
sbb
in
or
xchg
mov
sbbb
mov
ret
jmp
rcl
adc
adc
xor
daa
mov
xor
mov
int
inc
dec
call
push
test
fsubr
jo
in
lret
ret
test
movsl
std
movsb
mov
cmpsl
test
xchg
cld
stc
data16
in
rorb
ja
jb
mov
and
stos
and
andb
mov
fcom
fcom
outsb
nop
js
push
jns
movl
mov
test
addr16
xor
pop
push
shll
mov
sbb
ret
dec
aad
stos
rdpmc
imul
cltd
int3
sub
and
imul
jae
xor
jnp
mov
add
sub
lahf
lods
lret
loop
icebp
subl
pop
in
add
jmp
test
mov
xchg
adc
fcoml
repz
jge
out
inc
or
jno
add
mov
xlat
add
ret
add
testb
xor
lods
rorl
orb
dec
push
insl
sub
cmpsb
roll
push
jecxz
pushf
sub
mov
xor
daa
jb
xchg
or
mov
mov
pop
lock
mov
movsl
xor
add
xchg
ret
xor
pop
adcl
and
mov
push
loope
pop
xorl
lcall
stos
shr
xor
inc
mov
push
inc
lock
push
push
rolb
push
add
enter
xchg
jle
xchg
or
movsb
adc
popa
int
fisubrl
inc
fcoms
mov
mov
addb
dec
out
ja
es
ss
stos
int
inc
or
jmp
shlb
adc
rclb
xchg
pop
fstps
pop
test
test
stc
inc
sbb
mov
dec
push
shl
fnsetpm(287
xchg
clc
enter
clc
mov
in
sub
xor
sub
xlat
dec
test
lret
inc
nop
fistpll
jne
pop
fstp
rcrb
sub
jge
ret
or
mov
cld
insb
fs
jnp
xchg
xor
cmp
lcall
push
adc
jae
mov
je
mov
lods
fnstcw
jbe
arpl
lret
pushf
int3
and
mov
nop
jp
shlb
and
mov
mov
rcll
cmc
push
sub
test
daa
lahf
push
push
js
das
adc
push
pop
in
dec
scas
imul
push
cmc
adc
jp
and
push
mov
cmp
repnz
jmp
fnstenv
cmp
sub
mov
inc
scas
out
mov
outsl
xchg
cmpb
aam
lock
cmp
cld
xorb
push
shrb
es
sub
dec
hlt
bound
pop
pop
aaa
push
loopne
xlat
loopne
mov
mov
push
cmpsl
rorb
dec
mov
lret
cld
clc
sbb
add
xchg
cmpsl
xchg
aaa
fistps
cs
and
push
and
mov
nop
inc
fnstenv
cli
movsb
add
rol
lcall
jne
xchg
enter
ret
dec
ja
add
in
bound
mov
pop
fdivrs
adc
es
mov
or
out
and
or
test
test
mov
jno
inc
push
mov
outsl
vcvtdq2pd
addr16
loope
and
xchg
lock
dec
xor
sbb
movzbl
int3
add
loop
xor
aas
iret
outsb
xlat
mov
cmp
sbb
dec
pusha
xor
cmp
fidivrl
int
add
sti
and
sbb
fs
mov
insb
xchg
xlat
ret
or
mulb
sbb
mov
pop
push
lahf
cmp
push
test
sbb
lds
ss
rolb
mov
xchg
push
inc
sub
inc
in
mov
aas
xchg
lods
or
cmp
sub
jle
fisubrl
inc
movsl
repnz
outsb
out
sub
push
xchg
mov
sahf
jmp
fldenv
scas
cmp
sbb
repnz
sub
cmpl
lock
push
sub
fistpll
add
sbbb
dec
inc
fdivr
lock
jbe
mov
cmp
mov
imul
scas
mov
push
cld
cltd
leave
xchg
jo
adc
jg
sbb
lods
pop
jecxz
aad
xchg
add
push
mov
or
lahf
andl
clc
pop
cmp
fmull
fwait
jmp
push
xchg
pop
jmp
lock
xchg
xchg
inc
dec
push
mov
cmp
pop
sub
aas
adc
popf
shll
out
shll
fcmovnb
aad
data16
pop
cltd
lret
lods
mov
test
jg
sti
inc
stc
es
xor
sbbb
shlb
fcomps
sbb
inc
xor
out
imul
repz
test
aas
mov
test
cmp
sub
lds
jne
outsb
fstpt
sahf
ljmp
mov
ss
inc
pushf
ss
push
sub
inc
jecxz
mov
or
stc
lea
stc
dec
inc
call
loop
loope
daa
sub
cmp
push
adc
inc
in
nop
add
mov
enter
addr16
sbb
lods
mov
popf
jae
xchg
jg
xchg
cltd
pop
stc
in
xchg
jg
push
jp
or
dec
sub
movsl
lds
adc
in
cwtl
lcall
das
push
in
xor
cmc
inc
lea
jmp
mov
cmc
mov
sarl
icebp
mov
adc
push
jo
mov
pop
inc
xchg
mov
dec
mov
push
or
sbb
xchg
jae
mov
imul
jae
or
adc
xor
push
loope
das
xor
xor
shll
mov
dec
add
adc
mov
or
and
pushf
cli
dec
rolb
fs
mov
lods
nop
sub
je
imul
loopne
inc
sub
jne
ror
inc
pop
fsin
and
cli
sub
popl
adc
lods
data16
and
mov
in
adc
mov
mov
push
mov
popf
pop
push
cwtl
scas
test
jle
mov
movb
setae
insl
data16
mov
jne
xchg
out
fwait
sub
inc
xchg
scas
jae
jl
popf
mov
nop
pop
cmp
jbe
pop
stos
sub
outsl
push
mov
inc
adc
sbb
sahf
push
rclb
sub
out
mov
lret
mov
jl
in
out
cmp
sbb
mov
ljmp
xor
test
mov
push
insb
dec
repnz
mov
mov
inc
insb
lret
lea
scas
cltd
lret
mov
cmpsl
jb
test
cmpsl
cs
popf
fisubrl
das
jle
gs
and
mov
call
faddl
jne
ss
fsts
dec
xlat
mov
mov
fwait
sahf
in
lret
xor
push
cmp
ret
testl
push
mov
scas
scas
mov
popf
fisubrl
cmp
imul
mov
mov
cmpsl
hlt
xchg
jle
imul
jmp
sbb
cltd
dec
push
or
mov
mov
cmp
inc
lods
mov
loop
lds
mov
dec
insb
jmp
lock
jno
xor
outsb
lds
pop
cmp
push
pop
stc
das
add
mov
mov
lret
daa
mov
push
out
movsb
pop
sub
pop
jns
cmp
and
ficomps
cmp
or
adc
pop
sbb
xchg
jmp
jne
xor
mov
adc
aam
adc
xchg
or
push
popf
cmp
or
pop
or
test
push
fwait
and
or
in
jb
aaa
jbe
mov
outsb
in
push
sti
xor
decl
or
aaa
daa
fcoms
dec
pop
cmp
mov
mov
jns
gs
fnstsw
xor
lods
sub
inc
or
stc
sbb
pop
cmp
cld
ficomps
xchg
rcrl
movsb
adc
lahf
xchg
cmp
xor
adc
fisubrs
leave
sub
push
and
in
mov
mov
add
test
call
jg
mov
in
lret
dec
int3
test
shlb
repz
fxch
or
inc
popa
mov
stc
hlt
or
add
lds
mov
xor
mov
iret
sub
mov
mov
mov
xlat
fucom
decl
jno
pop
loope
bound
ja
pop
test
add
std
add
mov
cld
cs
nop
cmpsb
insl
movb
idiv
and
adc
dec
cs
and
daa
push
lock
push
scas
data16
fdivrs
stc
int
daa
shll
pop
lret
xchg
repnz
cld
sbb
test
int3
shl
in
outsl
jl
mov
mov
subl
ljmp
sahf
push
xlat
mov
sub
pop
out
inc
sub
or
enter
movsl
imul
out
mov
in
dec
enter
inc
push
orb
out
lock
push
mov
lahf
sahf
lahf
insl
sbb
or
jl
inc
jo
or
jmp
mov
loopne
outsb
cmp
loope
mov
hlt
mov
incl
jns
xchg
dec
sub
pop
mov
sbb
cltd
push
cld
adcl
adc
jl
or
js
stc
push
std
xchg
mov
cld
mov
je
sti
in
stos
aad
loope
jecxz
sub
repz
adc
push
jnp
addr16
and
in
aam
sahf
add
xchg
in
mov
movsb
xchg
sub
lods
ficoms
mov
mov
es
je
call
jp
xor
in
cli
dec
mov
jo
pop
std
stc
mov
shll
ret
adc
inc
adc
sbb
mov
sahf
mov
jmp
sbb
fiadds
mov
add
adc
xchg
mov
sti
aam
add
arpl
push
jns
fyl2x
mov
xchg
pop
jge
and
test
out
sub
fwait
sub
xor
cmp
pop
fs
sbbl
sbb
hlt
lds
int
mov
xor
stc
ret
int3
movsl
push
cmpsl
cli
sub
addb
jmp
jg
das
mov
push
loopne
cmpsb
push
lahf
fs
pop
push
enter
dec
mov
jae
adc
mov
js
dec
mov
sbb
or
push
pop
test
es
push
imul
sub
jb
call
xor
hlt
jg
pop
inc
push
decl
outsl
and
mov
push
insb
cmc
mov
and
mov
imul
push
in
mov
test
push
sub
je
shrl
dec
inc
xchg
adc
aam
rep
pop
filds
inc
ss
cmc
sbb
fadds
adc
mov
mov
imul
testl
popf
push
and
jle
or
pusha
jb
imul
push
sbb
je
xchg
jns
jg
ss
pop
or
or
xlat
into
cwtl
inc
out
mov
cmp
lret
cmp
fidivrl
fisubs
movsb
mov
pusha
ret
hlt
sub
insl
xchg
push
push
push
in
movsl
in
fstps
pop
popa
fcmovnu
out
fisttpll
xchg
loop
xor
in
imulb
push
mov
cmc
inc
jge
testb
inc
aas
sbb
insb
xor
insl
pop
test
mov
dec
inc
outsl
and
pop
test
push
ss
repnz
jg
divb
movsb
dec
les
cmp
sub
sbb
daa
pop
inc
gs
push
xchg
shrl
shr
jo
fcmovbe
jp
mov
dec
stc
xlat
add
pop
sbb
ret
movsb
jb
jno
cmp
je
push
mov
inc
cmp
dec
or
xor
inc
pop
sti
aas
mov
jb
xchg
mov
bound
std
loope
test
clc
inc
in
xor
add
cmp
or
ret
push
cld
rcr
sub
and
mov
xchg
cld
sub
sahf
lods
arpl
fmuls
ljmp
jmp
sbb
fsubr
jnp
std
imul
sbb
lods
int3
jmp
insb
adc
mov
cmp
hlt
pop
shll
dec
mov
in
mov
push
cmp
das
imul
sarb
lods
in
push
lock
ljmp
mov
lcall
fcoms
jecxz
xor
xchg
les
lahf
sbb
inc
mov
arpl
ret
mov
test
nop
xor
mov
dec
push
lods
sbb
sub
mov
je
mov
mov
push
mov
add
mov
fstpt
pusha
icebp
jl
out
movsl
sub
xchg
inc
add
arpl
shlb
pushf
add
add
or
add
sub
mov
adc
cmp
outsb
fcompl
das
arpl
cmp
movq
std
mov
or
js
push
ret
fs
ret
mov
xchg
fxch
pushf
or
clc
mov
push
cli
ljmp
mov
iret
adc
cmp
add
out
stc
fsubr
lds
jle
mov
sti
sahf
mov
adc
or
ljmp
scas
movsl
rclb
rorl
adc
lcall
leave
scas
ret
lret
mov
push
mov
xchg
jb
pop
int3
sbb
jo
push
adc
inc
aaa
mov
dec
sarl
push
inc
jmp
test
popa
mulb
or
push
and
pop
xor
gs
in
jbe
in
test
mov
sub
cmc
scas
es
xchg
hlt
adc
mov
scas
cmp
stos
sub
mov
mov
and
dec
xorb
mov
add
add
cwtl
cli
mov
sarb
cmpsl
stos
push
cmp
dec
out
mov
xchg
fs
xchg
sub
jp
cli
adc
adc
cmc
popa
sub
cltd
xchg
push
fdivr
pop
lods
outsl
adc
cld
push
orb
sbb
cmc
data16
cmp
dec
fldcw
stos
cwtl
mov
scas
or
push
adc
test
adcb
jp
cmpsl
fadds
dec
out
push
and
mov
dec
into
jne
cmp
xchg
jle
outsb
in
lea
sub
lret
push
cmp
repz
xchg
push
mov
rcrl
fildl
sbb
nop
das
dec
sbb
add
inc
lds
pop
push
adc
jbe
fs
and
xor
jno
cmp
int
loope
cmp
sti
dec
icebp
lahf
xchg
xchg
pop
mov
dec
repnz
shr
mov
mov
adc
mov
out
fistps
movsb
lcall
xchg
xchg
cmc
je
out
cmc
xchg
jb
pop
clc
mov
mov
pusha
add
mov
orl
jmp
insl
pop
daa
inc
repz
push
cmc
xchg
and
hlt
xchg
pop
or
inc
push
jge
pop
mov
fs
push
cmpsb
mov
xor
in
inc
jne
fsubl
mov
add
jnp
pushf
mov
cmpsb
sub
mov
scas
addr16
shll
ljmp
gs
fcompl
out
add
dec
scas
mov
mov
jne
inc
das
sbb
mov
into
out
sbb
sbb
rcrb
fadds
pop
sub
sbb
jb
sbbl
or
fildl
push
xchg
inc
jnp
mov
or
adc
rolb
stos
ds
mov
insb
sub
xchg
out
rcrl
xchg
mov
xchg
pop
lods
inc
push
data16
das
jns
and
adc
rcl
push
jae
imul
insl
xchg
mov
push
sub
dec
cld
or
rcrb
push
inc
ljmp
mov
adc
insl
or
jle
aaa
in
std
lea
mov
aaa
ja
cli
pop
stos
or
shr
pop
cwtl
mov
ds
fwait
cmp
cmpsb
je
sub
shrb
jp
cld
out
lret
outsb
push
or
out
jle
dec
mov
aas
in
pop
je
or
fimuls
jo
jl
sub
xor
int3
rcll
shll
repnz
mov
stos
push
imul
fsubrp
push
mov
test
mov
lret
std
pop
std
and
adc
in
clc
xchg
test
xchg
xchg
mov
add
in
imul
jge
loop
test
mov
ds
mov
loopne
ja
pop
imul
push
sahf
scas
inc
inc
xchg
pop
cmp
jl
sbbb
push
scas
cmp
mov
shrb
dec
cmp
dec
inc
loope
outsb
fs
mov
or
mov
fdivrl
je
fs
mov
pop
cmpsb
or
push
add
adc
fisubrl
jecxz
lock
adc
lret
clc
dec
js
jl
mov
out
shrb
cmp
imul
xor
pop
mov
jmp
sbb
cltd
mov
stos
mov
fsubrs
data16
das
cmp
arpl
cmp
aaa
iret
jmp
roll
test
bound
lret
push
je
out
loopne
or
mov
testl
loop
jb
mov
bound
inc
or
jo
fildl
lret
aam
lock
mov
hlt
outsl
fsts
jno
sbb
jmp
jo
lret
and
scas
or
mov
cmp
push
cmp
call
aad
cmc
std
jb
stc
pop
cli
adc
clc
movaps
lds
addl
mov
mov
xor
jge
fchs
loop
and
test
lcall
adc
pop
mov
sub
lret
aas
xor
popf
lds
mov
and
dec
out
mov
insl
jle
cmp
jmp
inc
repnz
jb
cmpsl
je
lea
test
shrb
adc
jecxz
sbb
pop
aad
out
pop
cmp
sbb
loop
sbb
loope
sub
push
adc
repnz
outsl
jmp
mov
xor
dec
aam
icebp
push
cwtl
adc
or
dec
js
std
shrl
mov
xlat
inc
imul
add
lods
adc
sub
in
out
or
push
xor
scas
mov
push
jo
jmp
bound
fidivl
or
push
push
add
inc
mov
push
or
bound
jo
ror
cmp
cmpsl
xchg
std
mov
dec
and
ret
mov
mov
pop
inc
lret
mov
les
or
mov
xor
icebp
mov
fisubrs
cmp
call
jbe
dec
lock
xor
xchg
cwtl
cltd
push
mov
adc
pop
sub
fcomps
cmp
cmpsl
xor
xchg
imul
jl
adc
xor
push
cltd
ds
mov
insl
push
ret
subl
push
push
insb
jns
fdecstp
mov
out
dec
dec
jge
adc
add
aad
imulb
push
dec
gs
iret
or
jl
int
fimuls
jns
xor
cld
sbb
or
test
add
pop
or
mulb
pop
pushf
sbb
add
scas
lea
out
aad
sbb
pop
dec
push
sbb
push
out
mov
pop
mov
jo
sarb
mov
xchg
push
jae
xchg
movsb
nop
sub
add
sbb
or
fs
cmpsb
mov
xorl
mov
push
sub
inc
in
xor
and
or
mov
cmp
fwait
and
mov
lds
movsl
fxtract
mov
lods
push
or
mov
push
mov
lods
xor
adcl
fcoml
push
or
push
and
sahf
dec
sbb
cmpl
stc
pop
jmp
popf
addl
sahf
pushf
xor
and
cs
mov
test
call
mov
lods
leave
or
mov
lds
add
xlat
push
xchg
gs
mov
pop
dec
out
cmp
mov
pop
addr16
dec
popf
dec
cmovle
sti
jmp
jle
fsubrl
sti
mov
jge
pushl
loope
or
adc
iret
or
jno
sbb
xor
sbbl
mov
das
jp
xchg
mov
xchg
sub
rcll
test
cmp
cmpsb
pusha
mov
mov
fcomip
lahf
shll
jbe
push
sub
shll
xor
xor
cmpsl
js
push
sub
cmp
mov
adc
jnp
test
sar
shlb
ljmp
xchg
jne
in
sbbl
repz
mov
jb
into
imull
add
lock
xor
push
mov
lret
popf
in
and
fldt
or
aas
cmp
and
shlb
mov
xlat
mov
lcall
push
gs
mov
nop
iret
dec
fs
gs
ret
sbb
sub
movl
imul
aam
sub
in
dec
lcall
out
scas
scas
sub
dec
inc
sti
sub
hlt
inc
jge
cli
xor
shlb
xchg
iret
fidivrs
jo
jns
cmc
jae
sub
gs
imul
aaa
jo
js
in
movsl
xchg
loope
movsb
sbb
pop
jns
push
inc
dec
pop
pusha
dec
fwait
test
jb
outsl
addr16
xor
in
scas
push
gs
dec
and
leave
ret
mov
aaa
sahf
mov
xor
je
out
fcoml
xchg
or
jo
mov
jnp
fcomip
stos
mov
imulb
dec
push
mov
inc
pop
aas
or
out
pop
push
mov
leave
int3
mov
sbb
wbinvd
push
mov
dec
in
add
lods
jl
fmuls
fcoml
inc
sub
push
add
imul
aas
lds
adc
faddl
sub
push
mov
and
les
std
imul
inc
packuswb
or
inc
sub
or
daa
fstl
loope
loop
sbbb
mov
lods
xchg
idivl
andps
sbb
mov
mov
sbb
aam
dec
lods
imul
adc
sahf
out
out
add
mov
cmc
test
jg
push
or
insb
ds
std
pushf
xchg
jae
loopne
arpl
ljmp
into
push
jg
sti
sbb
fcomps
or
mov
mov
push
insb
sbb
les
aas
mov
push
cmc
int
call
subl
mov
mov
cmpsb
jl
jno
out
subl
xor
imul
xchg
clc
inc
mov
out
or
push
pop
xor
lret
xor
stos
hlt
pop
mov
cmp
mov
lret
frstor
addl
outsb
cmpsl
int3
pop
in
inc
je
add
mov
testl
aad
addr16
inc
pop
loopne
dec
mov
ss
sbbb
xchg
bnd
ja
out
stos
mov
push
mov
push
inc
test
imul
inc
lock
inc
lds
stos
sub
lahf
sbbl
jecxz
rolb
mov
sbb
jo
sub
xlat
xchg
iret
in
and
mov
jecxz
enter
and
lret
mov
inc
test
and
in
pop
or
lds
mov
test
pop
xor
in
ja
jns
mov
stos
fwait
lret
ret
mov
outsb
out
jl
xchg
push
mulb
out
cmp
xor
sbbl
ret
xor
xor
orl
add
movsb
lds
pop
dec
or
loope
cmp
xchg
cmpsl
and
dec
sbb
seto
imul
sti
aad
fcomi
or
arpl
stos
jne
push
xchg
les
ljmp
jle
push
cmp
test
and
int
push
mov
repz
lahf
adc
add
sarb
leave
loopne
pop
xchg
mov
lea
stos
push
push
test
xor
cli
negl
ret
stc
add
pusha
jecxz
les
cmp
cmpb
inc
lcall
iret
inc
or
sub
inc
aas
outsw
dec
outsl
popa
mov
xchg
cmp
push
sbb
pop
mov
jmp
out
inc
jl
cmp
xchg
mov
adc
daa
or
mov
sub
cmpsb
cwtl
and
pop
xchg
jo
push
nop
add
je
pop
aam
divl
icebp
scas
lahf
repz
testl
imul
clc
dec
in
in
test
mov
aas
daa
dec
dec
cmp
cmp
pop
push
test
sti
jo
or
out
ljmp
push
pusha
repnz
in
mov
dec
mov
les
sti
mov
fadd
jmp
mov
push
mov
xchg
inc
push
xor
cmpsb
pop
sub
lcall
mov
ret
sti
insl
leave
dec
lock
mov
enter
xor
xchg
popa
out
aaa
pop
insl
in
into
loopne
xchg
mov
sub
jge
mov
pop
ffree
in
imul
iret
xchg
jg
or
inc
and
out
fs
int3
in
lahf
dec
jp
jl
dec
aam
popf
xchg
test
jnp
enter
fs
pushf
je
jmp
dec
pushf
jnp
lds
mov
cli
insl
ja
push
leave
add
cmpsb
arpl
cmp
es
mov
cmp
pop
add
cmpsb
push
loopne
xor
jge
and
lods
mov
push
and
or
pusha
jge
push
sbb
xor
cltd
jb
push
pop
pop
rorl
push
jae
sub
dec
xor
ret
push
push
arpl
xor
jo
nop
rorb
sbb
ss
mov
mov
pop
mov
sti
lahf
ret
aam
nop
fsubrp
inc
jl
xchg
xor
es
jg
or
xor
bound
xchg
ja
out
pop
cs
outsb
inc
push
inc
inc
stos
mov
cmc
movsb
aad
sub
sub
sbb
lock
cwtl
add
inc
lahf
sub
cmp
nop
movsl
movsl
jns
pop
out
mov
xor
stos
xor
cmpsl
fsubrl
ljmp
ljmp
fstl
add
mov
mov
cld
adcl
aad
fldcw
push
mov
fs
or
xchg
cmpsb
adc
pop
sub
int
jl
jae
data16
stos
enter
call
cld
jl
xor
mov
mov
push
xchg
stos
fstp
int3
add
in
add
push
arpl
mov
jne
addr16
fisubrs
fcomp
addr16
mov
fs
aas
paddusb
cld
and
push
das
fsubr
scas
js
xchg
cwtl
lds
cmp
ds
mov
jno
inc
pop
aam
or
dec
addr16
outsl
pushf
pop
xchg
lea
cmp
add
addb
cmp
jno
test
mov
rcll
mov
das
xchg
mov
rcr
out
test
pop
punpcklbw
jbe
mov
xor
popa
jno
mov
sub
add
adcl
xor
push
loop
add
mov
das
push
mov
cwtl
roll
les
add
mov
adc
pop
lods
fs
sub
push
xor
stos
scas
xchg
fwait
ds
inc
adc
push
fwait
lcall
lods
cmp
add
inc
inc
cmp
lods
out
loope
icebp
inc
aam
aad
mov
repz
ljmp
stos
pminsw
lds
pusha
add
les
pop
lret
enter
sti
add
je
call
ret
pop
mov
pusha
jmp
ss
lcall
xor
ljmp
xchg
sbb
inc
dec
cmp
fwait
add
push
pop
inc
lock
mov
cmp
xchg
xchg
sub
outsb
cmc
or
out
xor
push
mov
lods
imul
hlt
mov
sub
mov
add
xchg
into
sub
ss
xchg
cli
cmp
or
out
adc
pop
fists
xchg
in
add
adc
mov
jmp
xor
fcmovbe
pop
mov
into
shrl
ss
add
and
movsl
and
lock
fidivrs
inc
xchg
lret
ss
sbb
xlat
xor
nop
mov
fwait
mov
push
scas
push
sahf
cwtl
xor
ja
xchg
dec
dec
jnp
lods
pop
dec
stos
pusha
sbb
movsl
push
mov
fmul
or
sbb
jae
mov
pop
js
add
les
xor
or
je
sbb
ds
xchg
lods
repz
jecxz
cmp
enter
rclb
call
test
stc
mov
push
cmpsl
outsb
or
xchg
stc
and
mov
pop
repz
jns
jge
js
mov
add
push
cmp
cld
js
pusha
lods
neg
dec
mov
push
jb
mov
and
iret
add
jge
xchg
and
scas
adc
push
sbb
cmp
mov
rclb
gs
ss
dec
cmpb
repz
fwait
aad
mov
in
rcr
cmp
scas
lcall
lcall
mov
in
scas
mov
or
leave
push
cli
mov
loope
insl
add
push
xor
pusha
dec
adc
add
out
testl
test
push
mov
repnz
outsb
xor
inc
imul
mov
or
adc
dec
movsb
add
or
add
out
je
push
je
adc
dec
jmp
cmpsb
sbb
mov
jle
test
test
ljmp
test
cmp
fstps
out
scas
pop
mov
lret
push
imul
mov
imul
icebp
mov
daa
ret
adc
rcl
push
mov
add
repnz
es
pop
clc
frstor
fisubrs
sub
imul
push
adc
mov
pop
dec
call
insl
dec
push
in
pop
repnz
sbb
lods
mov
flds
push
scas
fucomp
xchg
sbb
jae
cmp
push
loope
mov
loope
lret
or
dec
jo
mov
lods
mov
sbbb
iretw
dec
jg
out
jae
dec
mov
mov
fcomi
cmp
repnz
scas
sbbl
pop
mov
lods
jnp
fdivrp
ds
data16
popa
fsubp
loopne
pop
xchg
sub
and
inc
je
or
pop
jo
repz
push
jne
cmp
outsl
xor
divb
pop
in
pop
or
mov
mov
dec
imul
sub
add
push
andl
call
nop
sub
mov
ficompl
inc
cltd
jmp
or
adc
inc
mov
imul
out
fwait
ret
int
loope
mov
stos
cmp
inc
sub
jmp
cmc
jmp
insb
push
bsf
repnz
imul
dec
adc
cmpsb
sbb
push
inc
outsl
pop
leave
mov
cld
loope
scas
jo
ss
mov
ret
dec
sbb
add
nop
lret
jns
cmpsl
out
push
in
mov
jb
mov
fcoms
daa
fucom
pop
jo
mov
fs
aam
pusha
insb
lret
jno
xor
addr16
push
inc
scas
jmp
xchg
ja
cmpsb
js
mov
or
mov
xchg
movsl
and
add
sbb
mov
push
or
dec
xor
test
mov
test
dec
and
ret
jecxz
ds
daa
fstl
js
roll
jp
imul
test
loop
fimuls
cwtl
adc
sbb
inc
leave
popa
leave
call
add
nop
pop
icebp
and
xchg
jnp
sarl
or
and
inc
test
out
pop
out
cltd
mov
pop
push
cmp
stos
notl
cmp
popa
mov
imul
out
mov
adcb
mov
jmp
das
ljmp
cmpsb
inc
ret
pop
sbb
enter
pop
sbb
gs
adc
icebp
jae
sub
push
out
or
in
je
sahf
jge
mov
mov
push
xchg
mov
xchg
jno
enter
mov
fisttpl
sbb
arpl
push
negb
ds
sbb
cmp
enter
xor
mov
adc
insb
je
xor
lcall
in
fidivrl
inc
sbb
add
cmp
stos
jb
cmc
fistl
mov
pusha
fistps
sub
dec
adc
jmp
mov
pop
mov
test
jns
cmp
in
and
test
je
test
in
push
xor
xor
insl
dec
adc
jo
pushf
xor
cwtl
gs
mov
ljmpw
or
xor
fdivrs
cmp
mov
mov
jmp
sbb
imul
lcall
push
aas
push
dec
xor
xchg
xchg
dec
je
sar
fmull
inc
dec
test
push
mov
adc
inc
sbb
into
push
mov
int
jnp
daa
cmpsl
je
jge
adcl
daa
inc
jns
adc
xor
insl
sub
loopne
arpl
jge
ror
std
inc
xchg
int
sbb
pop
adc
or
or
clc
mov
repz
gs
fcos
in
pop
test
lods
dec
push
mov
adc
scas
frstor
inc
loopne
sub
or
adc
adc
into
rorl
jbe
dec
popa
paddsb
adc
das
in
out
dec
stc
dec
and
popa
or
fdivrl
insl
jle
and
adc
fistpll
mov
test
and
repz
or
inc
je
push
xlat
stos
stos
mov
mov
addl
popa
and
popa
push
add
ja
adc
dec
xchg
push
loope
mov
int
mov
xchg
jno
xlat
fisubrl
mov
rclb
add
sbb
inc
mov
push
testb
and
icebp
xchg
pop
orb
je
jl
das
sbb
add
and
inc
ds
cltd
outsl
in
je
pop
adc
fistps
arpl
outsl
mov
in
jns
shr
and
mov
mov
xchg
mov
mov
push
dec
mov
xor
push
pop
imul
gs
inc
negl
fiaddl
into
fisubl
xor
cmp
je
xor
adc
cmpsb
sbbl
repnz
popf
sbb
xchg
sbb
aaa
lahf
cli
aas
mov
int3
ficoml
pop
scas
jns
in
sub
fistpl
lds
add
jecxz
jp
mov
mov
xor
cmp
xchg
lock
jae
aas
xchg
mov
ret
mov
adc
or
loopne
mov
inc
add
mov
in
fistps
dec
loop
test
mov
ror
push
mov
in
sbb
ja
dec
push
push
movsl
lods
out
sub
cmp
jb
push
push
xlat
xchg
dec
dec
fcom
adc
sarl
cmpsl
pop
fwait
xlat
into
mov
and
adc
jg
lock
fdivrp
dec
add
dec
sub
adc
popf
push
lds
test
fstl
das
enter
arpl
sbb
xor
xor
lret
mov
pop
dec
pushl
xchg
bound
iret
jo
or
lea
pusha
cmp
mov
jle
push
pop
push
mov
dec
cmp
sbb
das
mov
inc
das
and
insb
mov
inc
scas
stc
iret
daa
fs
or
in
mov
lcall
inc
shl
inc
lret
in
sub
je
xchg
xlat
dec
je
pop
push
popa
adc
stos
xchg
dec
inc
dec
mov
bound
lcall
into
ret
idivl
sub
daa
mov
in
inc
shrl
pop
movsb
and
mull
cmc
daa
dec
shlb
sarl
cmpsb
imul
cmp
xchg
test
sbb
mov
jge
cmp
cmc
mov
sbb
not
dec
insl
sbb
shrl
stc
mov
and
repnz
mov
jno
or
mov
cmp
sbb
and
mov
add
lods
dec
aam
mov
repz
xor
shll
xchg
xchg
mov
mov
push
cmp
jno
mov
mov
cs
stos
sub
push
add
mov
add
mov
dec
and
lods
cwtl
rcr
shr
lods
and
sbb
and
lcall
ds
subl
js
js
push
stos
push
push
xor
in
popa
push
out
push
or
lods
dec
xor
xchg
insb
rcr
ja
popl
xorl
mov
arpl
testl
lahf
jnp
jae
lret
aas
lahf
sbb
or
inc
pop
add
dec
rclb
dec
xor
roll
inc
pop
dec
in
jge
pop
roll
aad
pusha
loopne
pmaxsw
lds
xor
cwtl
fistpll
js
scas
pop
enter
popa
push
adcb
push
sarl
loope
adc
negl
lods
dec
pop
mov
jnp
cmp
jae
test
repnz
mov
mov
or
xchg
cmpsl
xchg
shlb
int3
loope
xor
popa
ret
push
sahf
cmp
mov
adcl
sbbl
dec
add
insl
in
repz
mov
jne
cs
jb
mov
hlt
sbb
xchg
in
in
fistps
mov
mov
adc
xchg
aaa
sbb
xor
mov
les
mov
add
xor
mov
ds
jne
mov
jb
sub
ficompl
rol
or
insb
inc
lds
out
out
ljmp
sub
inc
jae
mov
dec
push
out
pushf
adc
out
jg
or
inc
pop
stos
mov
inc
inc
jo
push
aaa
sbb
jle
xor
clc
mov
or
lods
pop
cmp
cmpsl
xor
scas
add
ficoms
cmp
cmp
in
push
fistpl
pop
push
notb
je
lds
out
dec
adc
xchg
cmpsl
push
insl
mov
cmp
cmp
dec
cmp
clc
nop
sti
push
scas
adc
ja
push
cli
sbb
clc
das
lods
lahf
sbb
stos
mov
push
lods
fnsave
mov
sarb
cmp
cmpsb
pop
jae
or
call
hlt
lcall
fildll
out
js
dec
and
sbb
insb
sub
lods
adc
push
insb
add
in
push
xor
mov
out
dec
xor
loop
loop
jb
scas
arpl
fcmovnb
cmp
jmp
fldcw
cmpsb
repz
movsb
push
insb
sbb
mov
add
int
cld
jge
push
jle
xlat
mov
call
push
scas
mov
mov
and
mov
pushl
push
and
jae
pcmpeqd
test
leave
xchg
mov
add
mov
inc
mov
out
or
and
push
test
popa
push
jne
mov
fucom
push
arpl
dec
xor
das
xlat
dec
enter
cmp
lcall
lock
adc
add
mov
pop
lods
xor
sbb
punpcklbw
test
jp
mov
insb
xlat
inc
mov
movsl
scas
sub
int
cmpsb
jmp
or
test
lods
cmp
xchg
jns
cmp
ja
negb
orl
arpl
stos
testl
mov
ss
in
mov
adc
repz
pop
movb
mov
dec
lahf
scas
pop
cmp
js
fistpl
adc
dec
cwtl
and
pop
ret
mov
insb
das
add
mov
lock
fwait
jge
imul
mov
jne
aad
aad
cld
daa
flds
stc
mov
lods
clc
and
mov
lea
fcomps
jae
xchg
mov
pop
out
in
cmc
hlt
add
cli
mov
lods
adc
xchg
pop
jnp
mov
popa
add
rcrb
xor
jp
jne
cltd
cwtl
xor
ret
and
push
sti
jb
popa
outsb
inc
lea
mov
ss
scas
inc
divl
in
pop
jl
mov
push
mov
popa
rcrb
cmp
jle
dec
es
mov
bound
dec
loope
lea
mov
test
sub
pusha
jns
xor
fs
out
incb
add
or
leave
mov
scas
pop
dec
push
xchg
push
jb
sbb
rcrl
mov
mov
jl
imul
dec
pop
testb
movsb
jmp
std
fistpll
dec
mov
cmp
pop
and
and
ret
sar
mov
add
dec
xor
outsl
cmp
or
xchg
out
fcmove
sub
popf
fsubs
mov
pop
in
cmp
or
out
sub
mov
inc
or
add
jmp
outsb
mov
ss
jg
es
push
and
mov
aam
ss
notl
xchg
jbe
sbb
adc
out
fdivrs
sti
subb
fmuls
jp
push
pop
pop
out
call
cmpsl
ja
sahf
cmpsw
adc
gs
into
mov
stc
mov
pop
push
mov
clc
or
mov
scas
inc
cld
fiadds
sbb
insl
cmp
pop
cmpsl
or
cmc
mov
mov
pop
and
jnp
cmpb
xor
imulb
mov
and
cs
dec
mov
xchg
sbb
jge
inc
inc
imul
test
test
xchg
stos
push
push
or
mov
mov
in
push
sub
sbb
out
mov
jne
lods
or
jmp
mov
scas
adc
sbb
rcrl
push
les
xor
jg
sub
mov
jae
rcrl
rorb
sub
xor
loope
imul
cli
cmp
icebp
enter
xchg
stos
aas
aaa
fsubrs
push
dec
mov
xlat
leave
mov
cltd
xchg
xchg
jns
xlat
cmp
decl
idiv
insb
lcall
fcmovnbe
data16
or
in
jbe
dec
shl
mov
imul
fidivs
mov
inc
imul
inc
sub
dec
pop
lods
repz
sub
add
fdiv
xor
fldl
push
adc
sub
add
xchg
dec
pop
jno
pusha
rorl
lods
lahf
mov
fiadds
lahf
jg
push
pop
xchg
sarl
int
or
lea
and
push
fwait
andl
loopne
adc
loopne
data16
cmpsl
pop
ret
lret
xor
xchg
sbb
xchg
movsl
mov
aas
xchg
mov
xchg
xchg
adc
shll
mov
sbb
call
imul
in
cs
aas
cmp
ret
outsb
call
jecxz
mov
lea
dec
decb
out
pop
stos
mov
xor
mov
out
jg
sahf
std
in
mov
lock
das
repz
cwtl
aaa
jmp
aas
jmp
test
xor
gs
stc
sbbb
pop
test
sub
jmp
mov
fnsave
and
dec
dec
sbb
jl
pop
jmp
dec
adc
mov
mov
xchg
jnp
xor
dec
ret
jb
neg
push
jg
inc
insl
push
mov
mov
mov
dec
or
icebp
testl
push
dec
fs
inc
sbb
sbb
clc
fldt
enter
dec
arpl
out
sbb
popa
mov
iret
ds
stos
mov
jae
idivb
push
mov
dec
xchg
push
mov
pop
popa
sahf
lea
add
movsl
dec
xor
dec
pop
movsl
ja
arpl
jo
push
loop
loop
mov
imulb
sub
lods
mov
mov
in
mov
fbld
loop
inc
push
ret
dec
or
repnz
xor
aad
mov
iret
mov
sbb
out
jnp
mov
lahf
mov
push
adc
jne
mov
add
dec
repz
jl
pop
and
sub
and
xor
lds
fdivr
lods
repz
rorl
jp
push
movlhps
div
pop
add
cs
das
jmp
push
clc
pop
and
cmp
xor
es
into
jae
push
sbb
push
xlat
cli
and
inc
test
dec
and
dec
cmp
stos
sub
popa
cmp
das
inc
mov
aas
push
lret
add
add
cmp
inc
cmp
sub
stc
pop
add
popa
outsb
pop
cld
repnz
mov
xor
add
test
iret
and
repnz
adc
fcompl
aad
or
jl
inc
add
add
ds
cmp
mov
sahf
mov
outsb
je
jge
mov
dec
push
add
xchg
cmc
aaa
fstpl
insb
fcom
xchg
dec
push
dec
xor
xchg
push
jno
or
or
jp
pop
cmp
sub
pop
push
ljmp
dec
fwait
leave
insb
fldcw
jno
enter
rorl
or
mov
and
aas
cmpsb
mov
repnz
pushf
mov
add
mov
scas
pop
and
xor
adc
sbb
arpl
xchg
cmp
nop
add
inc
push
pusha
xor
fwait
or
aas
add
les
cmp
sbb
orb
loope
repnz
pop
notl
lret
insl
daa
pop
xchg
inc
aam
lahf
clc
push
insb
pop
test
xchg
aam
outsl
mov
jg
add
pop
push
nop
cli
mov
jge
fbstp
lock
aam
mov
adc
dec
ljmp
push
jmp
outsl
cmpsb
popa
lock
ljmp
in
sub
arpl
or
pushf
test
adc
into
roll
rcll
sub
data16
sbb
push
jmp
mov
pop
inc
and
push
xor
add
inc
es
enter
sub
mov
jne
scas
cwtl
cmp
or
std
xchg
int
sbb
mov
test
push
orl
imul
cmp
mov
push
jmp
push
lcall
adc
int3
cmpsb
inc
and
imul
movsl
in
and
push
pop
jg
jns
rclb
xchg
push
loope
cmp
or
stos
dec
clc
and
add
icebp
sub
int
imul
jno
jmp
jae
orl
shll
fistpll
out
shll
add
push
push
dec
sbb
jae
mov
push
sbbl
int
mov
push
lahf
mov
out
mov
adc
in
into
mov
fldenv
xor
lock
lock
and
pop
or
mov
sub
adc
mov
push
xor
add
imul
push
mov
xor
enter
sub
ja
or
adc
jbe
or
sbb
fwait
sbb
setb
mov
sbb
clc
rclb
mov
mov
inc
bswap
jg
inc
adc
cmp
rorl
in
mov
addr16
call
jecxz
lods
mov
fstps
mov
outsb
push
pminub
inc
dec
loop
lahf
sub
fsubrs
in
and
xchg
out
out
jp
int
push
mov
les
pop
mov
dec
testb
pop
inc
int3
cmp
xchg
data16
and
cli
loopne
psllw
mov
add
mov
fbstp
nop
add
clc
mov
add
mov
pop
mov
ficoms
cmp
sbb
or
mov
push
loop
jmp
sub
dec
and
mov
loope
dec
xorl
mov
pop
mov
push
sbb
xor
sti
in
aaa
xor
fldcw
clc
and
pop
ss
test
insb
xchg
sbbb
pusha
add
daa
cmp
push
jnp
fidivrs
lods
adc
cli
neg
mov
into
dec
adc
add
or
cmp
jno
iret
lret
lds
iret
ss
dec
data16
mov
iret
jl
jbe
add
mov
push
cli
mov
fstpl
pusha
mov
jno
fists
pop
jns
mov
add
jge
push
or
lods
pushf
push
es
lret
inc
test
movsb
lcall
push
mov
sahf
test
jg
jle
xor
and
fidivrs
insb
sbb
xor
mov
push
inc
xor
sub
pop
inc
test
shl
or
into
pop
cld
xchg
jl
mov
pop
cmp
or
xchg
jbe
add
int3
jg
lcall
out
lret
or
aas
inc
or
cmp
xor
sti
jmp
pop
cmp
pusha
xor
mov
adc
pop
mov
test
test
and
outsl
or
and
andl
push
jmp
push
jbe
pusha
scas
mov
inc
imul
sbb
mov
and
cmp
mov
test
sbb
pop
xchg
cmpsb
jmp
es
nop
test
mov
jno
mov
cld
cmp
mov
cmp
xchg
adc
aas
and
push
adc
iret
cs
orb
inc
sti
sub
xchg
insb
mov
mov
fadds
std
lods
xor
mov
or
mov
rorb
xchg
ds
ret
cmp
jb
mov
inc
outsl
popf
jns
in
add
xor
jle
nop
adc
cmp
jns
bound
mov
cmp
dec
mov
into
cmp
lahf
data16
lea
or
repnz
sbb
or
jns
stos
insb
pop
rcrl
add
les
test
cwtl
nop
mov
pop
pop
shll
xchg
mov
inc
fs
xchg
aaa
and
mov
es
sbb
inc
cmp
or
aad
shl
shlb
rclb
out
mov
sbb
dec
fdivp
inc
lods
xchg
test
test
fs
xchg
test
mov
ss
lods
shlb
adc
subl
rcl
mov
push
mov
std
jmp
or
pop
pop
mov
mov
stos
mov
and
jbe
cmp
sub
jne
jge
sarl
push
lcall
inc
jno
adc
sub
mov
mov
sti
leave
fiadds
and
insb
cmp
and
xorl
ljmp
aam
lcall
cmpxchg
cmpsb
add
mov
jo
adc
loop
inc
cmp
or
sub
dec
int3
add
xchg
add
sarb
mov
jl
outsb
push
mov
movsl
inc
jbe
in
mov
xor
aaa
sbb
inc
das
inc
xchg
push
dec
loope
mov
enter
cmp
fists
mov
insb
pop
insl
mov
adc
jmp
jecxz
mov
repz
pop
push
add
arpl
les
cmp
xor
pop
hlt
ret
inc
pusha
test
dec
sub
jnp
jo
fsubs
mov
or
fildll
add
fwait
adc
int3
cmc
sti
idivl
in
lahf
push
dec
and
or
scas
mov
daa
pushf
in
test
jo
int
cmc
mov
icebp
inc
cmp
call
imul
or
aaa
loope
fiadds
lods
stos
je
sub
sub
incb
ret
test
sbb
adc
aas
cmp
pop
out
xor
arpl
cmp
cld
ret
inc
or
ljmp
push
xchg
imul
scas
inc
fdivs
cmp
ja
mov
fisubrs
loope
lods
add
mov
jmp
pop
je
xor
or
sahf
dec
aad
into
jnp
sub
or
cmp
cmp
cmp
mov
insl
popa
dec
cli
loope
or
mov
ss
imul
fisubrl
stos
lods
mov
jbe
shr
daa
jo
and
lret
push
out
lock
test
mov
insb
mulb
scas
int
daa
xchg
fs
inc
cld
sub
pop
mov
popa
aaa
out
test
pop
cli
int
dec
repnz
sbb
and
aam
mov
mov
lock
mov
jae
nop
fwait
lret
dec
pop
movsl
pop
dec
adc
pop
and
aam
pop
mov
xor
sbb
mov
mov
push
pop
jo
adc
push
inc
std
pop
sub
fidivs
pop
inc
mov
test
imul
adc
int3
jno
push
adc
cmp
int
lock
cwtl
neg
js
push
add
repz
xchg
pushf
dec
sub
aam
idiv
sub
sub
nop
add
inc
popa
leave
inc
dec
lret
or
aad
push
in
mov
call
inc
sbb
xchg
loop
fnstenv
mov
mov
hlt
push
adc
push
icebp
test
sbb
lcall
pop
xor
out
ljmp
pushf
mov
out
stc
or
xchg
lods
cmp
mov
cli
mov
mov
jnp
loop
test
push
or
lds
adc
out
xor
or
add
ljmp
loopne
sbb
hlt
loope
or
push
enter
leave
or
inc
jp
out
cs
mov
dec
sbb
add
xor
lock
xor
cltd
push
mov
test
testl
aad
repnz
inc
dec
inc
insl
jae
dec
aaa
mov
in
jno
cli
adcl
pop
loopne
push
ja
outsb
jne
push
jmp
add
test
pop
mov
inc
cmpsl
jl
dec
mov
xor
xlat
xchg
shlb
or
leave
inc
push
adc
sti
mov
pop
or
sbb
or
test
xchg
fcomip
out
mov
ss
or
xlat
test
call
pop
loop
dec
push
sub
in
push
js
push
cli
or
mov
fwait
scas
push
sub
inc
jg
mov
shll
nop
std
popf
cmp
enter
rcrb
ds
mov
repnz
sbb
adc
dec
adc
sbb
shl
push
inc
mov
xor
sbb
cmp
jns
sarb
dec
push
sbb
dec
popa
inc
mov
add
fidivrl
push
cmp
adc
xor
mov
rorl
outsb
fwait
cmpsl
mov
aaa
ds
mov
aad
popf
arpl
add
sti
pop
dec
out
adc
pop
bound
mov
jge
fimuls
or
pusha
idiv
aas
mov
push
das
call
mov
in
mov
fidivs
insl
or
or
dec
lods
rorb
jg
add
jge
arpl
xchg
and
xor
dec
out
daa
push
test
loop
dec
mov
mov
sub
andl
lret
sarl
add
mov
dec
jp
divl
mov
jecxz
scas
and
bnd
scas
or
xchg
jne
sub
add
jns
add
pop
jbe
sub
xorb
xchg
ret
inc
insb
stos
adc
mov
cmpsb
aad
hlt
xchg
lahf
daa
popf
xchg
push
out
xor
sub
imul
or
dec
loopne
std
enter
out
pop
jp
incb
pushf
je
cmp
add
mov
cs
sub
ljmp
stos
cwtl
out
pop
arpl
imul
mov
push
jbe
lret
sbb
subl
imul
push
dec
push
or
std
cmpsb
loop
test
push
jmp
mov
xor
rolb
pop
dec
push
cs
test
je
sbb
adc
stos
rclb
and
cmp
jmp
jno
dec
dec
sbb
enter
dec
fidivs
add
or
inc
clc
cmp
bound
rdtsc
rclb
in
enter
mov
dec
test
mov
push
in
es
lods
jnp
jns
mov
mov
or
fcompl
in
push
add
mov
add
xchg
pop
fiadds
adc
xchg
mov
andl
dec
movsb
sbb
mov
mov
test
lcall
adc
inc
data16
out
lods
inc
or
aam
les
outsl
leave
shll
sarb
idiv
and
testb
ds
jo,pt
inc
mov
jecxz
andl
cwtl
out
pop
rorl
jge
pushf
pop
and
mov
lcall
iret
loope
scas
dec
test
dec
mov
cs
pop
fldl2t
lret
cwtl
pushw
or
xchg
outsl
inc
aam
xchg
nop
std
xchg
jo
jmp
xor
pop
cmp
push
pop
jno
loope
pop
mov
inc
push
mov
add
int3
es
stos
movq
movsb
jne
div
add
pop
lea
arpl
sub
es
es
jns
add
int3
inc
jne
sub
sub
adcb
pusha
pop
mov
mov
jbe
or
icebp
jl
xor
push
cmc
mov
add
ja
xlat
ljmp
ss
and
jne
cld
mov
rcrb
out
fsubl
ja
rdpmc
movsb
or
insb
xorl
mov
xor
es
ja
dec
test
xor
add
xchg
imul
add
ja
fcoml
mov
mov
push
inc
push
sub
add
xchg
or
in
inc
nop
test
xchg
movsb
stos
push
jo
stos
jp
jecxz
out
stos
daa
cmp
je
dec
pusha
pop
sub
pop
scas
into
jb
movsb
push
jmp
outsl
adc
nop
repz
movb
clc
dec
hlt
je
out
xchg
pusha
test
adc
aas
pop
ja
daa
mov
sbb
push
bound
leave
adc
xchg
dec
test
leave
ret
mov
icebp
sahf
add
imul
nop
pop
sbb
pop
jge
cmp
or
cmp
cmp
inc
jns
sub
repz
xor
sarb
mov
jg
jo
jge
sub
sbb
stos
stc
mov
xchg
xchg
cltd
jnp
xchg
insb
outsl
mov
pop
cmc
sti
ficompl
or
data16
imul
and
adc
or
fsubrs
stos
insb
sahf
test
fdivrl
bound
in
mov
ja
dec
jle
push
jae
mov
push
ja
shrb
xchg
mov
mov
es
push
lods
aaa
inc
cmp
movsl
xchg
add
sbb
cmp
mov
leave
cwtl
pop
mov
xor
lock
mov
or
in
dec
push
mov
adc
mov
jne
jmp
dec
bound
push
call
arpl
int
aas
stc
cs
dec
inc
ret
jnp
pop
mov
nop
cmpsb
lret
cmp
iret
lcall
lods
xor
inc
imul
pusha
fcomps
xor
inc
in
lret
aas
cmp
or
inc
push
aaa
mov
popf
push
inc
mov
mov
mov
das
sub
call
rcrb
or
add
lds
inc
inc
pop
outsl
jp
inc
jnp
addr16
jmp
lcall
xlat
inc
aam
mov
fldt
add
inc
mov
and
xor
mov
adc
imul
jl
sbb
push
lahf
mov
rcll
push
cmpl
cltd
ficomps
sub
pop
cwtl
and
js
cld
push
fisttpll
pop
dec
outsl
xor
clc
sbb
inc
cmp
push
imul
adc
inc
or
and
xchg
loopne
mov
data16
rcrl
push
jns
fcomp
push
es
int3
jne
lret
std
loop
sub
aad
outsl
in
movsl
ret
cmp
loope
loopne
les
sarb
pop
fwait
sbb
subl
inc
fsubrp
pop
jg
inc
add
or
dec
std
enter
jge
and
pop
sbb
inc
xchg
test
pop
jmp
icebp
aam
sbb
ret
lahf
jne
cmp
mov
out
lock
aas
push
adc
mov
xor
stos
arpl
or
popl
mov
cs
test
pusha
cmp
into
pop
iret
xor
daa
add
mov
pusha
fs
into
in
pop
scas
repz
adc
cwtl
es
cmp
cmpsl
sbb
out
mov
fwait
xchg
pop
pop
das
ffree
inc
xor
ret
pop
int3
push
rorl
pop
xor
pop
aad
sbb
sub
stos
cmpsl
movsl
js
popf
pop
pop
lret
sbb
jbe
imul
push
lods
inc
xor
push
enter
dec
push
daa
sti
cli
add
rclb
adc
test
mov
je
adc
mov
test
scas
jmp
orb
cmp
xchg
dec
dec
fwait
pop
jbe
inc
mov
int3
scas
push
lods
cli
mov
cmp
add
mov
ficomps
inc
lods
stc
lods
mov
ljmp
iret
fistpll
add
inc
loop
insb
das
sti
loope
cmc
jmp
push
imul
mov
dec
sar
nop
outsb
adc
mov
pop
pusha
push
dec
lahf
xchg
or
sahf
pusha
xor
out
gs
adc
sub
dec
into
inc
xchg
ljmp
pop
and
imul
pop
adcb
push
push
and
call
test
scas
cld
mov
adc
jnp
notb
out
cmp
dec
add
test
cwtl
inc
pop
dec
out
xchg
ss
jmp
lahf
les
ljmp
or
out
cmp
xor
lcall
sub
das
test
adc
testb
mov
mov
adcl
shlb
fadds
and
cmc
mov
ja
cmpsl
adc
adc
mov
into
mov
xchg
in
call
loopne
push
jl
mov
int
xchg
shrl
test
xchg
sub
lret
in
outsb
test
jg
loop
inc
sbb
mov
stos
stos
test
arpl
lods
mov
popf
ljmp
xor
aam
push
insb
lods
mov
out
dec
xor
jl
jl
es
and
stc
ret
ja
repz
push
adc
std
sbb
aas
mov
xor
or
fiaddl
push
mov
or
cli
jge
adc
lock
movsl
adc
cmp
stos
aas
mov
sbb
mov
mov
popa
test
lods
jmp
cmc
adc
loop
pop
jle
mov
repz
outsl
and
ss
pop
xchg
add
lea
add
aas
push
mov
fisttpll
fucom
pop
mov
xor
pushf
out
lods
and
enter
cmp
inc
hlt
orl
out
or
jp
hlt
or
inc
popl
cmp
pop
push
scas
cmp
jge
test
mov
mov
iret
aad
cwtl
popf
push
cli
test
iret
mov
pop
clc
xchg
cmp
push
mov
rorb
out
icebp
jne
xchg
repnz
rcrl
push
add
sub
hlt
xor
sbb
fsubs
inc
popf
aaa
xor
les
cmpsb
push
xor
sub
jle
cmp
and
sbb
push
aad
decb
mov
call
jo
xchg
cmc
pop
lret
daa
repz
xor
iret
add
repnz
add
sbb
mov
dec
arpl
cltd
arpl
mov
idiv
cli
xchg
movsl
pop
adc
sub
js
cmp
pop
xor
lahf
jno
mov
jbe
dec
insl
sbb
cmp
or
mov
incb
lahf
cmp
inc
ds
pushf
inc
jle
aas
jle
pop
pop
mov
sub
aam
or
inc
inc
sub
cmp
push
or
bound
pushf
xor
xchg
xchg
arpl
push
and
mov
add
pop
enter
sarl
or
dec
sbb
loope
ret
push
rolb
aad
xchg
dec
data16
pop
and
pop
cld
mov
bound
sub
pop
scas
and
test
jbe
stos
aam
inc
cmp
jecxz
dec
cmpsb
sbb
sbb
loope
stc
cmp
mov
fs
mov
fs
dec
xchg
popa
xor
sbb
pop
sbb
in
xor
pop
jle
leave
ds
scas
pop
dec
lods
sbb
test
pushl
ss
sub
leave
mov
adcb
ret
scas
sbb
stos
mov
loop
cmp
xchg
lcall
adc
sub
jnp
jg
mov
test
xchg
add
add
leave
add
mov
call
scas
or
sahf
fcmovu
jb
lret
xor
test
mov
cmc
mov
sahf
dec
add
ljmp
pusha
lods
cmp
push
pop
pusha
inc
sbb
aad
cmp
icebp
dec
fisttps
sbb
nop
xchg
dec
andl
das
xor
mov
sub
xor
jae
xchg
int3
xchg
inc
scas
jge
shrb
fwait
jbe
in
repz
out
lds
test
cmp
xchg
loope
xor
bound
or
lea
aas
and
sbb
ret
or
mov
dec
hlt
enter
sub
jae
push
je
loopne
fstps
lret
push
mov
xor
cmp
or
mov
cmp
cwtl
pop
and
gs
aaa
mov
mov
mov
xchg
js
sbb
into
out
popf
and
call
enter
cs
jecxz
imul
sahf
mov
sub
int3
sub
pushf
inc
fidivs
ret
push
or
aaa
fsts
lahf
mov
push
divl
roll
push
scas
add
mov
or
xor
mov
test
scas
xor
xchg
hlt
in
sub
sub
or
xchg
je
cmp
add
lds
xor
fistpl
jne
push
sti
pop
cmc
fmuls
and
mov
dec
xchg
push
mov
movsl
fsubrs
int3
ds
int3
or
sub
cltd
flds
jns
or
adcb
icebp
jmp
mov
repz
or
add
fwait
adc
sti
ror
and
out
sub
ret
xchg
mov
push
dec
repnz
adc
xchg
inc
in
std
xchg
daa
inc
xor
jg
call
pop
sbb
push
pop
mov
enter
sbb
sub
push
mov
add
repz
push
mov
je
pusha
add
push
pop
xor
mov
and
add
fwait
imul
pop
sub
sbb
sbb
orb
lret
cs
push
inc
cmpsl
push
lock
shll
push
or
sbb
xor
push
arpl
ror
outsb
cmpsb
or
stc
inc
cmp
dec
rcll
rcl
out
and
mov
cld
mov
in
aad
mov
mov
jbe
jle
cmp
sub
imul
rcl
jnp
and
pusha
mov
mov
cmpsb
mov
push
jb
mov
clc
mov
popf
dec
add
jl,pn
hlt
mov
ret
sbb
pushf
ja
ljmp
and
data16
push
fwait
or
cmpsb
test
cmp
mov
cmpsl
mov
dec
mull
xor
cli
lret
mov
aaa
xor
inc
inc
mov
data16
mov
popa
push
pop
mov
push
mov
sub
fsubp
enter
push
and
cld
push
lret
mov
loopne
push
outsl
imulb
add
and
and
insl
shlb
xor
and
mov
fiaddl
fwait
add
sbb
pop
jb
jnp
jp
ljmp
ffree
mov
cli
sub
pushf
fists
xor
je
adc
dec
sbb
fistl
dec
out
fiadds
jnp
add
repnz
add
fstps
or
or
scas
cltd
sti
das
mull
pop
arpl
fdivr
push
mov
mov
stos
cld
enter
sbb
and
sub
xchg
adc
jg
mov
dec
and
mov
pop
push
mov
outsl
sub
adc
push
fsubrl
mov
scas
and
cwtl
fwait
inc
add
xor
lahf
and
fcmovbe
pop
call
loopne
cmpsw
mov
sub
add
pop
hlt
sti
or
test
pop
xchg
bound
add
sbb
ret
mov
xor
imul
leave
dec
pop
sbb
mov
mov
inc
int3
andl
inc
dec
movsb
stos
adc
shl
clc
cmp
mov
jle
imul
xchg
dec
mov
pop
subl
push
insl
mov
jle
inc
ds
shrl
jne
cmpsb
lods
add
loopne
inc
xor
or
mov
mov
int
in
xor
adc
outsb
mov
aam
mov
mov
xchg
or
test
cmpsl
pop
lds
sahf
test
add
push
in
xor
jl
xlat
mov
pop
jp
inc
lods
cmpl
outsl
jg
xchg
cmp
jnp
pop
push
cmpsl
lds
lods
das
int
iret
mov
inc
jbe
adc
jo
and
mov
lret
and
cmpsl
pop
out
ficoms
add
bound
push
sbb
mov
jae
loopne
fsubr
jl
inc
rclb
lds
or
jb
add
rol
gs
rclb
cli
loope
fstps
push
or
inc
pop
mov
repnz
pop
repnz
mov
mov
xchg
cmp
sti
jle
push
fxam
lock
xor
inc
add
and
or
out
mov
cmpsb
ja
mov
pop
imul
xchg
cmpsl
je
sub
loopne
pop
setg
gs
test
xchg
inc
cmp
sub
mov
lock
call
sbb
xor
pop
or
inc
sbb
in
and
inc
fcompl
int
loope
insb
ficoms
sbb
orl
pop
inc
dec
int
decb
and
jns
push
insl
cmpsl
dec
insl
mov
adc
int3
and
mov
stc
aas
push
push
sub
stos
sets
mov
push
movq
shr
imul
sub
repnz
mov
cmp
mov
ss
mov
repnz
cmc
outsl
jp
imul
xchg
xchg
in
lret
imul
fsubs
dec
into
fstpt
sbb
cmp
gs
mov
lret
lods
dec
push
inc
aam
mov
movsl
xor
insl
mov
cltd
iret
inc
pusha
mov
cwtl
mov
adc
cmp
dec
mov
mov
test
push
int3
mov
call
subl
mov
jmp
arpl
mov
push
xor
in
out
inc
add
adc
dec
andb
adc
popa
push
add
fidivrl
in
xchg
lock
in
sbb
cli
inc
cmp
cmpsb
movsb
sbb
aaa
and
mov
lods
and
push
rep
mull
jnp
test
test
shll
in
punpckldq
push
call
lods
stc
scas
in
mov
stc
loope
ljmp
shlb
lret
push
adc
xchg
mov
fs
rol
fildl
shrb
lret
push
fwait
iret
test
cli
rorb
xchg
push
jb
cmp
cmp
adc
mov
xchg
cmpsl
mov
or
rorb
and
ds
jnp
sub
fstl
jl
mov
psubusb
jbe
jno
mov
sbb
js
fs
les
inc
les
inc
push
inc
clc
nop
lock
icebp
or
mov
dec
fisttpl
ss
and
dec
test
pop
sbb
inc
mov
dec
aam
loop
push
test
out
test
pop
xchg
scas
mov
int
mov
sub
xchg
lock
insb
loopne
mov
mov
insb
es
int3
addr16
mov
sbb
lcall
push
repnz
fimull
insl
movl
pop
addr16
jo
push
sarl
aas
ja
jp
push
dec
call
cmp
jne
inc
sbb
call
ret
jo
jmp
imul
inc
sbb
out
cltd
scas
pop
cwtl
stos
xchg
jns
ljmp
xor
mov
push
scas
sub
in
xchg
inc
sub
jle
mov
aad
ret
adc
mov
cmpl
push
cli
ffreep
sub
jmp
dec
sti
int3
insl
repnz
cmpsl
fdivrl
jle
xchg
push
xor
cltd
add
jbe
jae
push
fdivp
push
nop
cmpsb
mov
sahf
loopne
add
pshufw
and
shlb
cmp
aas
or
xlat
xor
dec
dec
jbe
ja
scas
mov
add
add
out
cmp
push
repz
push
ds
mov
pushf
ljmp
fadds
xor
notl
stos
aas
lock
jmp
lcall
inc
repz
push
in
ret
push
mov
pop
hlt
mov
fmull
dec
out
sahf
jnp
ret
cmp
aad
fimuls
push
cmp
pop
shrl
lcall
in
decl
add
outsl
xchg
dec
fldl
in
arpl
enter
in
imul
jo
nop
push
jo
in
js
dec
ror
into
lret
mov
mov
test
test
dec
jns
and
lret
mov
inc
imul
js
push
adc
add
and
mov
adc
jbe
jp
xorl
shrl
xchg
loopne
jb
lahf
push
xchg
inc
std
stos
cmovno
out
js
and
das
mov
adc
mov
lcall
xchg
xchg
sahf
dec
sahf
jno
loopne
cli
and
mov
and
insw
inc
or
push
mov
mov
mov
out
loope
xchg
shl
movl
ja
adc
sahf
adc
mov
xchg
push
or
push
fs
int
jnp
pop
push
ja
rolb
shrb
addr16
pop
lds
mov
push
jns
rolb
push
les
push
adc
jg
repnz
and
into
ret
test
xchg
xchg
cltd
dec
test
out
add
push
int
xchg
orl
sub
xor
dec
pop
fs
ficoml
push
pop
and
imul
fcmovu
pusha
data16
test
das
test
icebp
test
sbb
mov
rorl
std
insb
push
ja
enter
insl
cwtl
je
inc
inc
add
push
push
dec
jl
push
test
scas
adc
fisubrs
jae
imul
pop
fwait
mov
lods
sub
inc
cmpsl
dec
sub
dec
mov
jae
xchg
mov
xchg
xor
imul
or
xchg
jnp
adc
sbb
nop
mov
stos
lahf
ljmp
jns
jb
shll
push
imul
cmpsl
int3
popf
xor
add
jne
cmp
mov
notb
cltd
mov
mov
out
aam
les
inc
lds
test
sbb
dec
cmp
pop
adc
cwtl
rol
cmp
aam
cmp
test
sub
imul
fwait
xor
test
add
inc
inc
cmp
mov
leave
xor
and
pop
imul
jmp
jo
int
push
add
mov
out
rcll
cmp
pop
or
jae
sub
push
or
lret
sbb
filds
daa
fisttpl
push
nop
jge
jmp
lret
sahf
push
xor
mov
pop
ret
sbb
sbb
loopne
daa
cltd
icebp
outsb
leave
push
mov
out
sub
cmpl
clc
daa
jl
jp
mov
push
cs
daa
test
mov
inc
fcoml
mov
add
and
shll
inc
push
out
mov
clc
les
mov
and
lahf
jne
push
sbb
mov
sti
scas
push
loop
mov
into
mov
outsb
jo
mov
insb
add
cwtl
lods
xchg
pop
cmp
jmp
jle
xchg
test
push
or
loopne
cmc
mov
data16
push
in
add
add
cs
call
inc
jge
jno
or
outsl
ss
jo
inc
les
or
dec
mov
mov
repnz
rolb
jg
loope
int3
mov
jge
xchg
and
xchg
inc
hlt
out
ds
lods
mov
repz
in
xchg
add
out
push
sub
dec
jmp
and
repz
push
lock
add
xchg
push
and
dec
cmpsl
xchg
adcb
fadds
push
test
mov
out
aaa
dec
out
add
imul
imul
out
mov
dec
inc
dec
test
and
xchg
dec
add
add
dec
cmp
cmp
jo
mov
mov
pushf
adcl
xorl
fidivrl
mov
dec
cmp
rcrb
stos
mov
insb
test
xchg
mov
aas
dec
cwtl
mov
movsb
jle
call
mov
add
inc
andb
cmpsb
xchg
push
in
loope
repnz
xchg
dec
push
sub
stos
fisttpll
cmpsl
xchg
mov
mov
test
and
inc
mov
insl
clc
mov
movsb
out
int
popa
movsb
in
negb
jb
insl
icebp
fiadds
iret
xor
add
lcall
ss
push
int
loop
pop
pop
mov
cmpsl
mov
lahf
testb
subb
in
out
jmp
es
xlat
cmp
xchg
fwait
loop
lock
jg
adc
cmp
in
sub
jge
mov
sbb
or
mov
popa
sbb
icebp
adc
mov
adc
sbb
cmpsb
add
mov
mov
das
arpl
in
ja
sub
xchg
fs
lret
push
or
cmc
and
es
fimull
emms
lock
xchg
add
dec
adc
mulb
mov
cmpsb
xchg
pop
fimull
je
inc
push
loope
sub
cmp
lods
xchg
pop
out
sahf
and
aad
push
subl
mov
dec
pop
sub
in
mov
or
xor
lret
aad
ss
je
jbe
add
loop
lret
mov
daa
movsb
addr16
ss
and
jge
push
fldenv
sbb
push
icebp
nop
push
push
jbe
cld
and
aam
pop
cmp
fnstcw
sarl
xchg
mov
cli
jl
and
das
loop
inc
dec
lret
dec
push
call
popa
movsl
push
popa
jl
aaa
xor
ljmp
push
dec
jns
lret
mov
aaa
pop
test
out
mov
jbe
mov
ja
inc
repz
enter
ret
jge
xchg
add
mov
loopne
in
or
mov
fsubr
repz
sbb
and
cltd
jmp
xor
scas
sbb
ret
or
stos
inc
add
or
mov
lock
push
out
out
sub
mov
dec
jo
or
pop
nopl
jl
or
fnsave
cmp
jb
mov
xorb
jo
cs
popa
adc
pop
cmpsb
and
adc
dec
jnp
inc
outsl
rorl
push
adc
mov
das
ja
leave
add
add
mov
out
ror
test
add
ds
mov
adc
sti
or
enter
rol
and
and
cli
shrl
sbb
mov
sbb
scas
insl
stos
jmp
push
push
push
add
jb
test
test
stc
jge
cmp
leave
or
iret
pop
lahf
aam
mov
sub
add
xchg
in
test
add
inc
out
scas
or
mov
lret
add
and
in
xor
dec
fwait
cmp
or
ja
sub
and
sub
notl
jnp
push
jnp
sti
es
ret
xchg
xor
add
mov
jg
jle
mov
xor
push
aam
mov
mov
dec
adcl
pushf
fwait
push
test
es
lahf
or
mov
pop
push
scas
add
cli
incb
jbe
dec
xchg
inc
push
sbb
ret
adc
cli
pop
mov
arpl
out
int3
pop
inc
cltd
out
sti
jae
ret
and
jno
mov
je
fdivl
mov
mov
leave
pop
icebp
cmp
mov
mov
mov
int3
push
popf
lock
cmp
adc
jge
push
push
pop
bound
mov
adc
cmpsb
lcall
adc
pop
imul
push
add
push
addl
dec
test
adc
add
push
push
faddp
and
xchg
add
test
push
fstl
mov
lods
daa
cwtl
add
xchg
xchg
setge
inc
cld
xlat
or
cmp
xorb
cs
push
and
ljmp
in
outsb
xchg
mov
sbb
add
push
je
dec
sub
cmp
push
pop
ficomps
push
cld
add
mov
lret
enter
andl
and
pop
inc
lahf
movsl
rcrl
movsl
or
dec
xchg
sub
movsb
inc
lods
cld
fcmovne
popa
aas
pop
add
xchg
mov
adc
repz
pushf
dec
add
push
out
hlt
or
scas
sbb
jmp
pop
pop
les
pop
ljmp
jbe
dec
scas
sbb
and
mov
loopne
sbb
cli
scas
into
sbb
rolb
int
push
xchg
stc
repz
xor
xor
push
or
inc
cmp
std
cmc
cli
add
push
into
pop
and
or
shrl
xchg
mov
outsl
sbb
and
hlt
shlb
aaa
mov
and
jl
aam
lds
dec
test
xor
loopne
ficompl
bound
call
add
int
xchg
stc
cli
mov
mov
add
xchg
gs
in
mov
mov
mov
add
add
push
xchg
js
and
jl
or
call
dec
dec
or
push
xchg
je
or
pop
sub
popl
mov
xor
jge
call
divb
xchg
ret
push
fucomp
cmp
ljmp
out
xchg
bound
arpl
scas
adc
mov
dec
jne
xchg
xchg
inc
enter
dec
addr16
dec
call
ficoms
mov
leave
pop
mov
inc
pop
and
fmull
repnz
shr
int3
push
imul
fldenv
mov
mov
sbb
das
sbb
int3
sbb
dec
insl
xlat
pop
sbb
mov
fiadds
pushw
cmp
lcall
aas
ja
sbb
test
lock
pushf
or
jmp
popf
fwait
fwait
pop
lds
scas
mov
fsts
sbb
out
push
fxam
testb
xchg
push
inc
das
lret
iret
imul
mov
xchg
lcall
outsl
xor
aam
fcoml
es
adc
push
or
movb
sahf
xor
mov
inc
adc
cmp
sbb
jmp
bsf
pop
in
push
fiadds
add
test
leave
bound
pop
push
and
aad
cmc
cld
mov
adc
cmpsl
dec
xchg
sarb
imul
daa
sub
in
push
lret
lret
js
out
movsb
xor
and
inc
repz
xchg
or
xor
sub
and
pusha
icebp
iret
in
std
mov
nop
xor
xor
sub
js
loopne
scas
jmp
mov
daa
or
cmp
loop
pushf
movsl
dec
inc
movsb
xchg
cmpsl
mov
xor
mov
testb
test
inc
faddl
jle
imull
mov
xchg
or
mov
xchg
in
cmc
jmp
dec
xor
and
xchg
xchg
lods
push
into
jg
push
es
sbb
dec
add
or
xchg
push
dec
loopne
call
jns
jb
mov
or
dec
or
adc
jb
xchg
movsl
in
notb
pop
cmp
push
add
pop
imul
push
inc
mov
lret
loop
leave
sbb
jl
stc
mov
mov
arpl
aaa
scas
pop
addb
je
loop
sub
or
dec
mov
lods
pop
roll
sub
dec
out
mov
add
mov
sub
and
mov
jecxz
pop
sbb
insl
cmp
popa
out
gs
jp
ja
push
mov
popa
inc
lock
fdivrp
or
sti
cmpsb
adc
adc
ja
pop
insl
scas
xor
and
sbb
pop
push
sahf
push
popa
movsb
jg
sahf
pusha
nop
sarl
and
arpl
ficompl
popf
pop
sahf
push
dec
push
adc
push
sar
int3
add
dec
xchg
sub
cmp
rcrl
out
xchg
ja
loop
movsl
pop
cmp
inc
xchg
dec
and
dec
push
push
lds
mov
jne
push
mov
jmp
add
add
xchg
repnz
push
es
add
cltd
mov
push
imul
test
out
dec
scas
in
push
pusha
dec
mov
call
dec
sub
das
xor
push
mov
jae
stos
test
ja
push
das
xchg
push
lret
jmp
cld
mov
or
out
ret
test
xchg
out
pusha
cmp
stos
push
insb
adc
daa
adc
or
and
cwtl
repz
in
jne
std
icebp
sub
fsubl
lods
push
movsl
pop
test
pop
js
sbb
testl
mov
sbb
sbb
cltd
pop
mov
das
lock
lcall
mov
cwtl
jno
insb
dec
mov
push
cmp
repz
sub
sub
stc
lret
into
cwtl
in
and
push
adc
imul
dec
jne
adc
or
add
sbb
rcrl
lahf
jbe
nop
addr16
loopne
pop
xor
aaa
stc
push
ds
xchg
cmp
mov
lds
aaa
inc
mov
mov
adc
pop
and
jmp
daa
xchg
mov
fwait
pop
jecxz
shl
xchg
mov
or
sub
dec
dec
add
sub
adc
add
or
lock
fsts
cmpb
mov
jp
xchg
test
scas
and
xlat
movsb
push
std
sbb
mov
repnz
and
stos
fwait
ljmp
add
adc
inc
fxch
jle
hlt
mov
add
scas
and
mov
into
add
repz
add
push
loop
pop
mov
icebp
pop
or
lcall
clc
push
mov
call
clc
push
pop
sub
inc
mov
mov
and
test
fstpt
loopne
insl
stos
dec
ljmp
out
call
leave
cmp
repz
lcall
mov
push
or
inc
push
xor
xor
test
xor
mov
mov
and
mov
lds
dec
sub
sti
cmp
xchg
pushf
mov
mov
mov
test
dec
mov
inc
add
sahf
xchg
pop
xor
xor
les
jne
pop
rorl
xchg
push
mov
movsl
pop
xor
mov
addl
jbe
into
mov
repz
add
scas
or
push
prefetchnta
mov
pop
xchg
xor
dec
jp
xorb
sti
mov
xchg
inc
cmp
pushf
dec
imul
inc
jnp
cwtl
or
out
lock
aad
data16
mov
imul
sahf
pop
mov
call
scas
stos
mov
popa
pusha
out
push
xchg
into
mov
pop
and
pop
out
mov
add
not
pop
xor
int3
aam
rcrl
push
adc
fs
aam
mov
xor
push
aas
movsl
enter
add
gs
fdivl
push
js
mov
xchg
and
pop
push
inc
repz
xchg
imul
leave
inc
insb
aad
fcoml
out
dec
sbb
mov
scas
mov
xchg
xchg
movsl
sbb
sbb
lcall
and
js
mov
add
mov
jl
adc
aaa
nop
cli
mov
pop
or
das
bound
sub
cmc
rcr
jne
mov
inc
dec
cwtl
mov
mov
push
jnp
aaa
inc
leave
sbb
add
mov
or
xchg
mov
pop
loopne
out
add
adc
test
ja
imul
icebp
add
cmp
ror
out
pop
in
pusha
mov
push
and
push
mov
mov
in
inc
aaa
push
scas
sbb
lock
repz
inc
mov
add
ljmp
xor
mov
xchg
lods
movsl
and
inc
aad
lcall
data16
insl
lcall
enter
fildl
jae
test
jae
insl
je
cmp
push
scas
mov
cli
movsb
popf
mov
and
lret
sbb
mov
loop
mov
mov
and
rol
lret
popa
inc
jns
repz
stos
jge
ret
fisubrl
mov
fimull
fwait
xchg
dec
shlb
sbb
pop
cld
shll
dec
js
adc
lcall
adc
inc
jno
insb
jns
out
jge
nop
test
rclb
jg
lds
rsm
ljmp
or
push
mov
lds
dec
pop
pop
adc
mov
jne
test
adc
mov
movsb
dec
add
adc
jns
inc
rcl
sbb
xchg
pop
cmp
cmpsb
mov
cltd
mov
jl
and
out
in
push
out
mov
or
fcoms
and
loopne
mov
cld
add
and
bound
rcrb
inc
lret
in
mov
mov
pop
or
mov
aaa
lret
lods
mov
popa
cmpsl
in
mov
pushf
nop
std
cmpsl
loop
in
or
fucomp
out
mov
loope
idivl
mov
cmp
xchg
dec
pop
cmpsl
js
arpl
cmpsb
ss
xchg
repnz
mov
mov
cwtl
test
pop
xor
stos
xchg
or
in
sahf
push
movb
fnsave
xchg
and
mov
clc
leave
jae
sahf
cmp
inc
divl
add
sub
dec
mov
and
stos
sub
cmp
xchg
jb
inc
pop
fdivrl
cmp
insl
jbe
mov
push
push
popf
test
les
imul
xor
xchg
iret
data16
inc
insb
clc
pushf
sbb
sbbb
adcl
aad
sahf
push
jl
or
ret
mov
ja
sub
ljmp
add
sub
and
dec
repnz
shrl
call
cltd
sbb
divb
rclb
inc
stos
clc
testl
ret
lea
movsb
stos
imul
xchg
in
mov
xchg
dec
jno,pt
outsb
adc
mov
jns
adc
pushf
sarb
loop
repz
ss
dec
adc
scas
into
cmpsl
je
jp
iret
jg
and
movsb
cmpb
dec
add
xlat
push
in
and
nop
add
adc
sub
out
xlat
jae
mov
test
movlps
in
cmp
jg
jg
movsl
pop
lock
andb
je
pop
iret
pop
pop
push
xchg
idiv
dec
mov
out
xchg
push
outsl
outsb
shl
push
jb
pop
scas
imul
and
pop
outsl
push
scas
adc
mull
clc
sbb
testb
add
add
rolb
frstor
sub
sub
dec
mov
test
test
cs
mov
test
mov
imul
push
fbld
mov
subl
les
sbb
int
push
gs
xchg
inc
sbb
mov
push
adc
add
ljmp
sbb
add
fistpl
es
push
and
cmc
inc
pop
ds
sub
mov
int
push
fcom
xchg
cmp
inc
int3
leave
fwait
mov
vunpcklps
insl
ret
mov
ja
pop
push
out
inc
inc
imul
ss
lcall
mov
lods
lahf
sub
mov
push
dec
mov
and
call
add
cld
mov
fdivs
pslld
inc
lret
or
test
cmp
mov
lret
mov
xchg
cld
popa
sbbl
insl
push
and
cs
cwtl
jo
dec
lds
jbe
mov
popa
or
insb
cmp
or
xor
repnz
es
lock
dec
pop
shrb
or
fwait
mov
ret
lcall
rol
fildll
xchg
push
push
insl
insb
je
mov
fstp
daa
decb
not
lods
aas
fcmovb
mov
in
sbb
mov
flds
ja
mov
pop
sub
stos
int3
pushf
lret
int
lds
mov
push
fbstp
lods
bound
and
pop
lods
aas
xchg
sbbl
fs
push
je
leave
xchg
jnp
mov
lret
inc
lods
imul
jae
sub
outsb
sbb
mov
or
addr16
inc
pushf
into
inc
and
push
imul
insl
sbb
mov
sbb
jmp
inc
addr16
je
sub
test
lock
iret
push
add
or
or
popa
addr16
xchg
out
sti
lahf
ljmp
cld
loope
xchg
xor
mov
out
xchg
and
mov
dec
dec
fstps
dec
sahf
ss
mov
inc
pop
sahf
fwait
loopne
xchg
rorl
adc
or
sbb
pop
add
out
cli
pop
adcl
adc
lods
push
daa
dec
mov
add
loopne
aad
mov
cltd
prefetch
adc
clc
dec
je
arpl
inc
xlat
fadds
mov
aaa
stos
inc
xchg
jmp
fmull
xor
inc
jmp
xchg
xor
push
jbe
mov
jl
jp
lcall
bound
push
mov
out
test
ret
insb
cs
inc
cmp
clc
fdivl
cmpsl
cmp
pusha
pop
or
xor
xchg
jge
test
sarl
jl
jb
mov
testb
dec
sbb
jmp
mov
push
cmp
xor
inc
pop
movsl
iret
icebp
scas
frstor
iret
mov
dec
pushl
orl
dec
shlb
call
mov
loope
sub
dec
jns
stos
mov
push
lock
lds
sbb
lahf
mov
in
xchg
sbb
jbe
push
or
mov
mov
mov
fcmovnu
mov
pushf
mov
pushf
insb
pop
push
adc
and
test
mov
xchg
nop
nop
or
push
add
add
enter
mov
pop
push
stos
icebp
jle
rol
and
rcll
in
mov
das
sbb
xor
jns
mov
sub
test
in
pushf
mov
leave
je
lds
lods
test
loopne
mov
std
in
mov
push
sbb
push
xchg
or
movsb
leave
lahf
ret
cmpsb
push
sti
and
enter
test
repz
xor
lcall
stos
lea
jb
push
scas
pop
mov
inc
mov
outsl
pop
popf
dec
jecxz
add
and
fimuls
movsb
rorl
pop
xchg
jg
xor
inc
je
cmp
inc
shll
fildl
push
in
adcl
push
sahf
sbb
push
sbb
das
stc
movsl
shll
enter
mov
mov
push
mov
sti
out
gs
rorl
xchg
out
cwtl
mov
jnp
sbb
adc
push
scas
mov
sahf
adc
cmp
adc
sub
and
cmc
sar
repnz
scas
std
stc
dec
add
mov
jns
dec
inc
in
ss
mov
cmp
dec
dec
cli
ror
jl
and
or
lcall
inc
pop
loopne
jnp
stc
pop
les
push
lods
xlat
sub
add
mov
fmul
sub
in
cltd
xchg
popa
aad
mov
and
inc
lret
pop
cmp
push
mov
sbb
adc
cmp
pop
cltd
mov
push
out
xchg
inc
lret
sbb
fnstenv
sahf
mov
and
jbe
lret
pop
cmp
push
or
cmp
xchg
subb
add
lock
cmp
adc
les
loop
ja
cmpsb
ficompl
ja
inc
aas
mov
ret
pop
data16
inc
movsb
in
jg
test
push
movsb
push
repz
dec
movsb
push
rorl
pop
fcmovb
adc
lock
and
lock
iret
std
inc
push
sbb
cld
push
into
fnstcw
and
add
sbb
jp
stos
stos
xchg
cmp
sub
pop
into
jno
sbb
fdivr
imul
shll
xor
dec
pop
cmp
jns
xchg
inc
xchg
jae
ja
dec
and
imul
mov
loopne
fisttpl
mov
adc
outsl
and
test
mov
out
fwait
mov
xchg
push
sbb
pop
jne
sub
jnp
mov
pop
inc
mov
test
nop
hlt
adc
xchg
pusha
xor
jmp
xchg
pop
decb
lret
lcall
fsubrl
mov
lret
popa
cmp
in
xor
and
std
inc
mov
test
lea
dec
adc
stos
ds
xor
std
xchg
shlb
inc
stos
fistps
jmp
xchg
psrld
cltd
insl
js
inc
inc
mov
lret
pusha
iret
mov
lret
movsb
test
test
cmp
cli
jmp
mov
les
jns
pop
jno
mov
sub
outsb
sbb
pop
adc
test
std
loope
push
cwtl
jne
cwtl
ds
mov
xchg
or
add
or
fmull
xchg
and
rclb
jge
jbe
inc
xor
push
and
and
pop
leave
scas
loop
shl
pop
push
andl
push
push
or
or
push
in
or
je
dec
aaa
xchg
mov
push
mov
bound
pusha
repz
das
jmp
sahf
mov
outsl
pop
loope
cld
rcll
xchg
fld
enter
ljmp
aaa
loopne
cs
add
cmpb
mov
fyl2xp1
in
ljmp
xchg
push
xor
out
jb
pop
loop
xor
movsl
cmpb
push
ds
clc
lahf
sub
call
inc
leave
inc
sbb
test
cmp
jg
ret
push
ss
jo
xchg
mov
mov
clc
in
in
inc
adc
mov
push
ljmp
jp
sarb
push
jg
cmpsb
subb
out
and
sub
xor
fcoml
lahf
push
xor
sti
adc
jo
jo
repz
mov
jns
cs
aam
in
push
clc
fsts
cmp
xchg
dec
or
adc
adc
aam
push
out
lcall
lds
insb
stos
jg
rcr
jmp
xor
mov
in
and
pop
aaa
adc
cli
xchg
jae
and
inc
xor
dec
pusha
adc
mov
cs
shrb
mov
lahf
inc
inc
int
push
jg
daa
push
loop
adc
adc
adc
test
mov
inc
rolb
jnp
inc
dec
adc
pop
cmpsb
jp
cld
inc
out
fs
out
in
and
shll
fsubs
pop
hlt
cmp
adc
add
xchg
mov
out
pop
sbb
and
aam
clc
jle
mov
sbbl
jge
data16
jbe
dec
or
jnp,pn
fcompl
lcall
addr16
aas
cmpsl
daa
fists
sahf
or
std
cmc
clc
inc
dec
gs
mov
repz
insl
insb
mov
xchg
leave
cmpb
cwtl
imul
fstl
lcall
push
mov
and
ret
jbe
insb
pop
ljmp
dec
sub
enter
bound
mov
cmp
mov
inc
jns
jmp
lret
sub
xor
enter
mov
mov
pop
and
ds
aas
xor
shr
aam
sahf
lcall
push
hlt
or
aas
test
les
je
inc
rcrl
cmp
jb
idiv
stos
lock
aad
inc
cmp
ret
jne
out
sbb
movsb
xor
push
pextrw
adc
and
lcall
movsl
mov
pusha
ja
pushf
dec
cmp
into
xlat
jle
pop
test
add
inc
aad
addr16
push
add
jnp
push
mov
adc
lcall
div
int
pushf
mov
jle
and
ss
inc
jecxz
xlat
lcall
xchg
es
adc
inc
in
sbb
cmp
test
jge
gs
loop
sub
mov
cld
push
iret
xchg
cli
sbb
aas
sbb
dec
fs
sbb
loopne
addb
sub
stos
bound
mov
enter
dec
pop
sahf
xchg
cwtl
mov
out
or
sahf
pop
jns
mov
out
sbb
jns
les
adc
daa
xchg
imul
fistpll
clc
adc
shl
insb
xchg
sbb
push
xchg
mov
js
inc
xchg
and
dec
fcmovnu
lds
outsb
lods
and
cmp
xor
scas
popf
cld
sbb
push
push
sbb
xchg
in
mov
in
test
popa
cmp
leave
fsts
xchg
jge
ret
sti
es
mov
mov
mov
push
fcompl
sahf
ficomps
mov
push
data16
sub
mov
incl
xchg
and
adc
ret
jno
clc
jle
andl
icebp
push
pop
mov
mov
iret
ds
jno
cli
mov
and
fsts
int3
lods
xchg
xchg
add
loop
adc
lods
sahf
xchg
inc
data16
mov
mov
mov
ret
inc
mov
aaa
addr16
and
sti
xchg
xchg
sbb
ret
test
je
in
outsb
dec
and
add
or
push
jne
sbb
lea
gs
loope
sub
cs
insb
aam
cmp
or
mov
mov
push
sbb
shrl
clc
out
cmp
dec
int3
mov
fwait
sub
jmp
lods
fimull
xchg
sub
inc
xchg
rolb
lret
es
popa
push
and
popa
sub
stos
ja
jle
mov
jg
push
xor
inc
mov
js
cmp
xchg
sub
pop
sub
nop
xchg
lcall
cltd
int
jge
insb
loop
lods
inc
leave
mov
fdivrl
fmuls
mov
cmp
addps
sti
cwtl
mov
xchg
dec
jae
pop
jbe
push
sbb
inc
mov
push
push
sbb
popa
inc
dec
add
loope
jae
mov
scas
in
and
cmp
adc
leave
or
jae
divl
in
in
ja
je
orl
outsb
pop
add
jae
add
xor
jp
xchg
jge
jl
ljmp
jnp
sbb
pushf
sub
jp
pusha
pop
pop
jo
dec
jbe
pop
mov
nop
xchg
cli
aas
sub
mov
mov
adcl
cmp
adc
jbe
mov
movsl
int3
push
loopne
mov
lret
nop
push
mov
inc
inc
iret
cld
lahf
fbld
mov
jns
in
lcall
jecxz
jge
cmp
xchg
shrb
add
outsb
imul
aad
lods
in
pop
addl
pop
int3
push
cwtl
and
cmp
bound
lods
js
dec
dec
enter
arpl
mov
popl
pop
test
mov
aam
popa
popf
lea
into
nop
bound
add
sub
int
inc
shlb
mov
shl
cmp
std
mov
cmpsl
adc
fsubrs
stos
sahf
lahf
addr16
push
sbb
add
xchg
and
sub
pop
sahf
jecxz
xchg
outsb
push
js
push
imul
stos
imul
imul
push
push
imul
mov
mov
xchg
mov
mov
lcall
jl
jle
xor
orb
in
jb
mov
andb
push
mov
enter
cli
inc
cltd
and
xchg
adc
cld
fidivs
mov
xchg
mov
mov
push
test
pop
aam
xchg
sub
jle
mov
inc
fwait
out
lods
fildll
push
jae
pop
fs
and
popl
mov
xor
mov
inc
and
rolb
lcall
stos
mov
and
adc
std
cwtl
pop
in
pop
and
mov
subb
roll
add
mov
inc
add
xlat
sub
jle
movsb
movsb
lock
mov
jg
push
xor
inc
pop
dec
pop
subl
or
jmp
ret
dec
sub
dec
mov
pop
xor
sub
inc
mov
dec
xor
les
push
jo
imul
add
xchg
inc
lea
xor
mov
sbbl
pop
fistpll
pop
jg
adc
adc
sub
jg
aam
add
mov
mov
push
xchg
lods
add
les
nop
loope
xchg
and
sbb
lds
mov
stc
negb
cmp
xor
cli
and
cmpsb
idiv
push
push
jg
sbb
popf
cmpsl
inc
stos
adc
stos
xlat
ss
jle
dec
gs
pop
sbb
jnp
call
mov
mov
mov
xchg
jne
jno
cmp
dec
fistpll
arpl
dec
pushf
cld
ljmp
fdivl
test
add
and
jmp
repnz
push
repnz
pop
stc
int
out
or
sahf
data16
aas
call
daa
xchg
lret
sti
sbb
xchg
fdivl
inc
jecxz
aam
pop
sub
subl
push
test
jbe
bound
jo
add
nop
insb
xchg
cltd
lcall
imul
cmp
add
xor
dec
xchg
inc
andl
xor
dec
insb
imul
ret
xor
ret
pop
and
push
sbb
fstpl
adc
add
sbb
clc
xchg
inc
lret
addl
and
cs
add
lods
cmp
pushf
lds
mov
jns
and
push
mov
inc
push
sub
xor
repnz
bound
sub
adc
out
gs
jecxz
lods
je
popf
es
xor
jno
dec
mov
mov
stos
cmp
cmp
mov
sbb
sub
fwait
insb
sbb
mov
pop
fwait
daa
test
ds
imul
push
xor
test
outsb
ja
or
and
mov
xchg
adcl
or
lock
sub
out
pop
mulb
inc
ret
fldenv
sbb
div
std
fcmovnbe
jl
xchg
push
mov
hlt
out
lea
loop
nop
dec
or
mov
pop
cld
cmp
out
xchg
imul
shrl
stos
jmp
loope
mov
cmp
fisubrs
mov
jnp
xchg
jo
cmp
xor
mov
jecxz
sbb
push
rclb
jg
inc
dec
scas
cmp
dec
sbb
out
inc
scas
pop
mov
jnp
adc
arpl
stos
clc
sub
and
testb
or
sub
push
jp
sbb
mov
inc
mov
sub
cmp
adc
int3
scas
in
or
inc
adc
daa
xor
mov
lcall
jno
test
fsub
adc
arpl
add
negl
or
jo
mov
out
lock
lods
cltd
lret
outsb
cmpsb
shr
test
fnstcw
sahf
test
mov
inc
test
mov
inc
dec
sbb
int
pushf
out
jecxz
pop
addr16
cmpsb
lahf
push
lahf
cmp
js
mov
mov
fwait
in
hlt
insb
out
jle
in
pusha
fldt
adc
lods
sahf
testb
lahf
mov
sbb
pop
or
inc
sti
call
nop
and
stos
pop
or
insb
sbb
push
mov
cmp
stc
mov
sarb
jle
cltd
xor
rcll
and
scas
mov
mov
cmp
ss
mov
out
jae
inc
push
jo
mov
xor
and
dec
repnz
jnp
fdivrl
data16
flds
add
mov
enter
or
push
xchg
push
int3
cwtl
test
jns
cmpsl
xlat
mull
mov
sbb
dec
cmp
repz
sub
cmp
mov
and
lods
adc
rcll
jle
aaa
in
sbb
bnd
mov
inc
xor
idivl
mov
adc
mov
pop
mov
gs
dec
xchg
imul
push
hlt
int
push
enter
jne
dec
sub
test
std
fwait
pusha
push
lods
xor
cmc
pop
sbb
pop
dec
gs
ja
subb
mov
test
rclb
jbe
push
inc
pop
mov
sbb
hlt
outsl
out
loop
test
jg
js
and
mov
mov
adc
icebp
lahf
sub
movsl
mov
mov
mov
vphsubbw
adc
mov
cld
dec
es
jno
pop
push
test
loopne
push
xchg
and
gs
cmp
repz
push
mov
ss
add
or
fimuls
sub
ja
ficoml
sbb
sahf
pop
push
xchg
add
cmp
jmp
cs
mov
lods
xor
cmp
dec
frstor
stc
push
dec
cmp
rol
cmpsl
iret
dec
imul
xor
jle
push
dec
fnstcw
sub
ljmp
cmp
icebp
jb
jnp
or
add
or
out
mov
js
test
mov
jne
xchg
jno
cmpsb
pop
jo
arpl
jnp
pop
adcl
jo
sbb
lcall
out
arpl
nop
sarl
mov
inc
ss
mov
outsb
push
cmp
or
mov
push
repz
dec
pop
pop
in
pop
cmp
mov
xchg
mov
enter
rorb
mov
mov
jecxz
or
jno
xor
add
add
sbb
or
cwtl
mov
sahf
inc
shll
out
test
mov
test
push
ficomps
lds
or
or
dec
arpl
in
ffreep
test
inc
lret
fs
cwtl
dec
push
mov
xchg
out
adc
fwait
push
cld
adc
dec
xor
imul
dec
xor
jno
jg
pop
push
cltd
mov
or
and
aas
cs
loope
sbb
mov
insb
sub
loope
idivb
mov
pop
mov
pop
dec
outsl
rcrl
push
xchg
clc
push
xchg
mov
push
ja
ds
sub
cmpsl
mov
insl
dec
mov
in
inc
adc
jmp
inc
lds
das
sbb
xchg
les
push
lahf
push
in
mov
decl
jmp
mov
jbe
add
and
or
or
outsl
ss
mov
dec
jb
fistps
dec
mov
das
mov
leave
sahf
push
push
inc
sahf
sbb
mov
sbb
addb
rolb
jae
jmp
adc
test
or
sbb
lds
sub
pop
dec
jp
mov
inc
fisttps
dec
cld
ss
setp
add
bound
repz
cmp
ficoml
add
adc
xchg
imul
fistpl
cmp
pop
sbb
lret
fidivl
push
inc
pop
jae
dec
sub
jle
push
pop
push
gs
fwait
popf
xchg
in
dec
lods
stos
inc
inc
paddsb
dec
popa
jg
roll
mov
mov
leave
mov
and
into
and
inc
ret
pop
ret
cmp
stc
lcall
mov
cmp
imul
in
mov
enter
rorb
xchg
xor
pop
jl
jp
aaa
mov
mov
mov
leave
lds
stc
sub
pop
int
add
jg
xorb
jg
push
pop
aaa
fcoms
insb
xor
fldenv
push
aam
call
jbe
pop
jge
fsubr
push
sub
mov
daa
pop
mov
jne
adc
into
movsl
xlat
dec
adc
or
enter
cmp
jl
incl
sti
pusha
cwtl
jo
xchg
cmp
lea
jo
mov
cmp
out
add
sahf
xchg
inc
and
push
stos
int
pop
and
and
xchg
xor
aas
hlt
sub
adc
dec
cmp
or
data16
stos
push
mov
add
jl
popf
xchg
pop
call
les
into
dec
mov
rcl
jmp
test
dec
or
jno
mov
mov
ja
jle
mov
aaa
clc
push
xchg
test
gs
or
pop
into
pop
lock
push
jge
xchg
push
pop
inc
sub
bound
or
or
adcl
loop
push
enter
outsb
xchg
dec
cltd
into
mov
cmpsl
xor
push
mov
stc
pop
cmpsb
sti
cmpsb
and
enter
fdivrs
jle
pop
das
jo
dec
lods
xor
mov
mov
movsb
movsl
add
push
iret
shlb
pop
sbb
jnp
and
mov
xchg
mov
adc
insb
call
xchg
cmc
mov
insb
jp
push
es
mov
mov
loop
or
mov
xchg
stos
and
jo
inc
lods
mov
negl
nop
xor
fldcw
inc
inc
mov
jl
jecxz
dec
dec
stos
xchg
inc
sbb
int
xchg
and
cmp
sbb
push
fidivrs
inc
out
fiaddl
lcall
xlat
sbb
insl
mov
stos
mov
cmp
sub
jl
pop
and
sub
add
add
cmp
pop
fsubrl
jg
orl
test
sub
aad
xor
jb
mov
sub
inc
das
pop
sub
xchg
jge
push
cmpsb
lret
std
aad
jnp
addr16
ljmp
ljmp
pop
lcall
outsl
push
sbb
mov
rclb
shl
aaa
cltd
adc
sub
popf
xchg
rorb
call
cmp
sti
push
mov
mov
rclb
mov
and
rcrl
pop
cltd
cmpsb
inc
pushf
jno
popl
popf
jbe
js
mov
jno
mov
shlb
iret
sub
das
pop
pop
dec
orb
cltd
test
xchg
fxam
sbb
call
test
sbb
ret
rcll
iret
outsb
dec
int3
pop
ljmp
insl
mov
mov
in
call
inc
xor
dec
xor
out
cmpsl
cld
cmp
cmp
mov
pop
or
daa
test
lods
mov
cltd
movsb
xor
cmpsl
ja
push
das
in
fwait
mov
cli
testb
mov
out
daa
xchg
cmp
xor
or
add
fs
sbb
push
mov
mov
pop
and
add
add
push
daa
iret
cld
adc
push
std
stos
xlat
pop
aad
arpl
xor
push
fwait
ret
nop
les
add
out
dec
lahf
shlb
and
inc
mov
fsubl
sub
push
dec
ret
int
pushf
and
testl
and
add
push
mov
arpl
push
push
out
js
dec
cmp
jecxz
add
repz
jmp
mov
out
and
mov
add
fldl
loopne
es
xchg
or
jle
push
leave
rol
and
ret
or
stos
adc
dec
out
push
fists
dec
sbb
imul
cmpsb
sbb
jns
testb
std
sub
cmp
popa
inc
xchg
sub
in
outsb
mov
push
int
sbb
aad
inc
test
inc
add
cmp
pop
xor
test
hlt
mov
inc
jb
cltd
mov
mov
xor
cmp
insb
cmp
sbb
sahf
mov
data16
jae
cs
dec
ret
push
repnz
sub
fimuls
int
xchg
mov
in
lds
lock
cmpb
xchg
loopne
add
push
into
push
add
add
enter
ficompl
mov
xchg
mov
test
loope
sbb
sbb
adc
outsl
outsb
out
outsb
into
out
dec
in
jecxz
shrb
sahf
sub
pop
ss
cmp
je,pt
aaa
mov
arpl
dec
and
in
arpl
mov
mov
pop
ret
loope
xlat
push
push
xchg
cld
jge
arpl
and
hlt
jmp
popl
adc
scas
xchg
xlat
pop
mov
rcrl
or
adc
jl
mov
in
out
mov
cmpsb
jp
imul
jmp
push
mov
mov
rorl
xchg
loop
dec
lods
mov
movsb
stos
test
jno
in
sub
cli
add
or
sub
push
loop
in
mov
or
aaa
sahf
leave
int
popf
mov
push
outsl
mov
cmp
ret
pop
xlat
sbb
cs
push
dec
push
stos
out
arpl
mov
inc
popl
jo
xchg
in
or
in
sti
ficomps
sub
cmp
test
mov
mov
push
pop
ret
lea
out
rol
stos
jno
ret
jo
fmull
push
repz
je
xchg
stc
add
cmpsl
insb
inc
lret
call
ljmp
lcall
mov
repnz
sarl
movsl
enter
lret
std
lahf
cli
ljmp
dec
in
in
out
pop
fsts
cmpsb
cmp
std
dec
test
pop
dec
jle
enter
jnp
sub
and
fistpl
lcall
add
inc
lea
adc
test
adc
xchg
xor
lock
jae
rclb
sti
push
aaa
das
inc
addb
insl
stos
add
push
outsb
push
daa
popa
movsb
add
stc
int3
and
enter
outsl
xlat
imul
int
aad
mov
fnstenv
cmp
jns
xchg
into
cmp
jp
cmp
cltd
mov
sub
push
aam
sub
cmp
int3
pop
or
roll
scas
int3
xor
dec
or
repz
mov
test
sub
movsl
xchg
lods
popa
ja
popf
arpl
adc
scas
pusha
loop
jecxz
or
push
cs
pop
xchg
iret
xchg
inc
xlat
rcrl
movsl
loope
mov
xchg
xchg
adc
dec
jmp
push
pop
mov
jmp
mov
fnsave
cmp
xor
mov
push
add
mov
jbe
mov
xchg
add
repz
dec
and
inc
cmc
pop
mov
sahf
daa
ja
push
xchg
test
and
xchg
orl
pusha
lcall
jne
call
mov
mov
xchg
popf
mov
or
sub
call
movsl
xchg
push
test
sub
xor
push
jne
xor
cli
or
popl
jmp
and
cmp
bts
bound
or
sbb
sahf
pop
vprotq
jno
in
add
cmp
imul
jns
or
fnstenv
cltd
jge
jg
call
leave
cwtl
out
pop
imul
sub
int
xor
push
fidivs
nop
iret
push
push
sub
pop
push
or
mov
add
jne
cmp
call
insl
fs
xor
pop
push
push
mov
sbb
mov
cmc
scas
pop
xchg
pop
sbb
inc
test
jge
inc
addr16
and
out
ja
adc
xchg
psubusw
push
xor
test
sbb
cmpsb
xchg
push
out
test
fcomi
pop
xchg
and
pushf
int3
xchg
lods
jg
call
cli
inc
lret
add
data16
jae
jg
ret
notb
ljmp
inc
pop
jle
call
inc
adcl
xchg
inc
call
or
nop
pop
movsb
add
ret
inc
dec
icebp
mov
in
push
fldt
xchg
sub
fwait
outsl
pop
lcall
daa
fistpll
sbb
outsb
jb
jo
push
imul
fimuls
push
cmp
lds
js
in
das
xor
cmp
insb
inc
or
xor
test
adc
insl
int3
mov
test
fdivs
fisttpll
enter
mov
ss
fistl
jb
rep
add
jle
jmp
adc
fists
xchg
mov
les
and
sub
ljmp
cmp
inc
loop
add
xchg
fistpl
cmp
add
fcompl
gs
dec
mov
lock
mov
psadbw
mov
lret
lea
fidivrl
lock
cmp
jecxz
insb
xchg
imul
dec
xor
xchg
insb
adcb
dec
enter
int
push
pmulhuw
sub
scas
and
and
jmp
sar
pusha
cltd
cwtl
rorb
add
xchg
mov
sbb
cltd
jl
movsl
sub
mov
push
neg
mov
sahf
xchg
shrl
and
xchg
loop
into
dec
lods
mov
and
dec
xchg
movsl
pop
cmpsb
jae
inc
cld
stos
inc
adc
add
mov
and
mov
movsb
inc
jecxz
dec
mov
or
stos
sbb
leave
loop
int
aas
popf
scas
inc
js
out
aaa
cmp
inc
adc
push
cmp
xorb
push
mov
inc
mov
add
ret
push
jle
add
sub
test
in
fsubl
flds
fistl
shrb
dec
mov
push
mov
pop
movsl
mov
xor
out
stos
xor
jge
bound
push
sbb
cmp
push
sub
and
pushf
and
cmp
sbb
mov
sub
sbb
mov
mov
int
inc
leave
rdmsr
pop
int3
fs
sbb
xor
aam
orl
out
shl
mov
mov
inc
jp
push
test
cld
xchg
inc
test
push
sbb
jno
jbe
fcoms
mov
xor
sub
test
cmc
sbb
js
lret
mov
ss
mov
mov
inc
hlt
adc
xrelease
shrl
cld
out
pop
ret
andl
sub
cmp
add
push
outsl
adc
sbbb
adc
xchg
xor
dec
test
inc
test
jbe
aad
mov
stos
lahf
addr16
jo
scas
shll
inc
inc
pop
and
outsb
xchg
and
add
add
jns
stos
outsl
xor
inc
pop
ficoms
sbb
adc
xchg
inc
pop
sub
sbb
fcompl
repnz
sti
lret
sti
test
cwtl
xlat
sub
adc
adc
mov
divb
bound
or
mov
out
xchg
shlb
sbb
inc
stc
pop
rclb
imul
add
mov
cli
adc
and
pop
sbb
add
aas
in
rclb
pushf
sbb
push
push
imul
jo
es
jno
lret
nop
outsl
hlt
scas
sub
aaa
lods
mov
enter
nop
test
xlat
fsubr
jb
mov
sbb
cmpsb
cwtl
aaa
pop
lret
movsl
hlt
pusha
xor
jo
or
push
xchg
cltd
lret
cltd
or
repz
and
fwait
or
push
xlat
comiss
test
push
sub
arpl
pop
leave
sbb
and
pop
mov
or
rcrb
mov
std
gs
jmp
fildll
pop
popf
or
jmp
xchg
xlat
pop
mov
pushf
xor
loop
sub
out
insb
icebp
jecxz
movsl
push
add
dec
ud2
pop
jg
push
and
add
popf
iret
cli
scas
inc
js
or
cs
test
pop
or
test
inc
movsl
mov
jnp
cmp
fisttps
inc
andl
jp
inc
sub
cmp
in
push
je
mov
mov
mov
xorl
adc
inc
push
arpl
outsl
sub
inc
scas
mov
adc
adc
and
xchg
int3
jne
and
lret
repnz
cmp
jne
cmpsl
sahf
ja
xor
xchg
fisttpl
pop
mov
and
divl
int3
xor
andb
mov
pop
xor
add
mov
stos
sbb
stc
xchg
adc
push
sub
xor
jae
aam
fwait
mov
in
inc
pop
mov
into
nop
lcall
das
dec
and
imul
fxtract
push
inc
adc
xchg
pusha
and
lds
mov
add
adc
inc
cli
out
cmp
jmp
into
dec
mov
das
and
dec
pop
or
test
dec
mov
mov
rclb
fstpl
dec
popf
pop
movsl
repz
scas
dec
outsl
sbb
imul
mov
out
or
loope
jp
xlat
stc
mov
and
fwait
mov
stos
unpckhps
nop
inc
cmp
es
ret
fnstenv
sti
and
es
mov
fwait
or
aad
xor
mov
jbe
xlat
ss
nop
hlt
arpl
push
aaa
cmp
outsl
rolb
mov
push
rcll
sbb
push
push
inc
or
xchg
cmp
sbb
push
and
loop
cmp
adc
andb
push
sbb
lods
ja
clc
mov
cmp
cli
pop
push
push
cmp
push
mov
adc
insl
out
mov
push
cmp
ror
pop
sbb
mov
jne
adc
faddp
and
push
xchg
cmp
bound
inc
sahf
sbb
sti
jae
stos
pop
sub
gs
inc
in
js
outsl
jns
cmpsl
jl
xchg
dec
loop
hlt
and
out
push
jl
jnp
sub
outsl
lea
into
js
mov
mov
mov
adc
and
lock
or
jnp
cvtps2pi
xchg
arpl
mov
cld
test
xlat
stos
insl
dec
ficomps
sarl
insb
xor
lods
sub
scas
in
mov
inc
xchg
adc
sbb
dec
clc
push
push
pop
inc
dec
sub
and
mov
cmc
or
cld
push
adc
adc
mov
inc
sbb
mov
andl
mov
mov
imul
data16
shlb
pop
pop
movsl
inc
das
addr16
clc
shrl
mov
xor
repz
mov
push
xchg
clc
xchg
mov
and
inc
and
push
xchg
push
jb
jmp
scas
mov
or
js
test
fidivl
sbb
lcall
sub
push
xchg
and
cmpb
push
out
mov
fwait
mul
add
xlat
mov
or
xchg
lods
jl
and
cmp
loopne
imul
push
add
pop
cld
xor
and
icebp
fxam
leave
scas
test
iret
cmp
cld
cmp
int3
sbb
xor
jmp
sbbb
ja
aaa
xor
test
sub
repnz
test
xchg
aam
xor
jg
std
and
test
jmp
add
dec
pop
mov
cmp
pop
mov
pop
insl
dec
pusha
sub
xor
inc
or
inc
inc
and
jle
jl
pop
fs
pop
pushl
rolb
inc
arpl
imul
or
call
pop
xor
test
add
int
mov
xchg
mov
adc
or
fcoms
lds
or
leave
cwtl
enter
xchg
push
sbb
or
jae
jle
dec
mov
add
xor
out
movsb
outsl
incb
cmc
mov
inc
mov
out
fwait
divb
and
mov
fisttpll
enter
fdivs
push
rcrl
out
andb
fs
addr16
jg
push
iret
pop
popa
inc
arpl
dec
cld
addr16
add
jge
loopne
pop
fsubrs
out
sarl
mov
xchg
cli
cmpsl
mov
out
loopne
pop
xor
xor
pop
dec
pop
push
insb
stos
not
nop
jne
fs
and
mov
testb
adc
dec
std
sbb
inc
daa
fwait
dec
inc
mov
inc
xchg
sahf
shll
cmp
nop
mov
rorb
iret
lret
imul
sbb
pop
mov
and
lods
jne
jle
push
aaa
ljmp
movsl
out
push
push
les
pop
insb
cltd
sub
cmc
push
int
mov
lock
lret
xchg
insl
icebp
cmp
mov
cwtl
mov
test
out
dec
add
inc
cmpsl
add
enter
lcall
ljmp
mov
insb
and
and
sub
jge
mov
movl
cmp
xchg
jp
cli
fstl
scas
mov
pop
jno
sub
mov
and
pop
add
jp
push
sub
pop
daa
mov
and
call
bound
into
dec
lcall
cli
sahf
mov
pop
insl
iret
xchg
in
addr16
inc
aad
lret
push
jne
add
imul
outsb
ret
cmp
xchg
pop
or
enter
jle
xchg
mov
lods
cmp
mov
jae
lcall
vpand
cmp
cmp
jae
cmp
add
and
lret
aam
icebp
adcl
mov
loope
in
jl
pop
inc
mov
mov
mov
inc
mov
repz
aas
ficoms
push
or
outsl
repz
sbb
mov
stos
cmpsb
sbb
sahf
dec
fistps
mov
adc
xorl
add
stc
in
movsl
adc
mov
lcall
mov
or
rcr
or
mov
in
dec
jp
dec
or
push
lahf
jecxz
imul
sbb
add
jno
inc
xor
outsl
std
xorb
outsb
dec
mov
jg
jmp
mov
out
vpshlq
cwtl
jae
pop
ja
enter
scas
in
in
add
aaa
mov
icebp
inc
in
jne
pop
mov
aam
xor
inc
or
xor
sub
sub
mov
xor
jae
fcompl
in
adc
and
inc
mov
out
sub
jb
repnz
inc
jecxz
addl
xor
mov
mov
push
mov
fsubr
lret
mov
repnz
fsubs
mov
cmc
pop
notb
aas
scas
cmp
outsb
jl
imul
push
dec
lahf
movsl
push
push
sub
mov
inc
jge
shrl
gs
push
adc
inc
bnd
dec
jle
shrl
sub
cmp
inc
jecxz
ljmp
sbb
xchg
inc
fs
test
and
jecxz
addr16
popf
mov
ret
xor
xchg
fiaddl
jge
xchg
mov
fmull
sbb
scas
fdivr
mov
and
int
pop
sbb
add
dec
rcr
cmc
sbb
outsb
xor
push
pop
inc
and
lods
scas
jge
into
lea
mov
gs
in
mov
push
out
sub
addr16
pop
hlt
push
jae
movsb
mov
sub
adc
add
in
xlat
jmp
push
add
jbe
scas
dec
lret
add
in
out
mov
das
add
cmp
lahf
push
xlat
and
pop
sarb
jge
dec
push
xchg
xor
out
in
into
fidivrs
pop
mov
cwtl
std
pop
icebp
bound
pushf
jne
repz
lahf
es
into
psrlw
mov
fcoml
and
sbb
or
int
fdivrl
out
cmp
clc
add
scas
or
pushl
mov
xlat
aaa
fmul
out
addr16
repz
aaa
iret
aaa
pop
popf
hlt
and
pop
or
cmovge
cmp
cs
fcomps
fcompl
int
loope
inc
cmpl
adc
adc
inc
dec
insb
test
add
xor
cli
mov
push
scas
jo
and
push
outsb
nop
or
mov
sub
jecxz
pop
insl
cmc
jl
lret
aas
mov
dec
addr16
aam
xor
inc
scas
out
and
scas
imul
mov
push
or
daa
ret
push
out
icebp
mov
popf
shlb
adc
mov
sbb
mov
mov
out
xchg
xor
adc
pop
sbb
aas
dec
xor
xor
popf
xchg
mov
dec
ljmp
push
xor
ss
dec
jnp
pop
adc
mov
xor
jb
and
mov
push
repz
in
mov
or
mov
mov
mov
test
jbe
sbb
insl
dec
mov
mov
addr16
loope
rcrl
es
rorb
loope
xchg
int3
cld
xchg
adc
pusha
mov
sbb
idivb
xchg
int3
and
sub
scas
add
xlat
inc
or
xor
in
call
test
or
inc
daa
mov
jno
dec
mov
jecxz
or
xor
push
adc
xchg
jecxz
push
jnp
add
je
and
cmp
test
dec
pushf
sub
lret
int
adc
and
add
jo
jae
hlt
test
inc
dec
aaa
repnz
push
idiv
pop
jnp
lahf
stos
mov
inc
sub
sahf
aad
sbb
pushf
int
or
dec
mov
enter
sub
or
stos
std
in
inc
cmp
xchg
outsb
push
xchg
push
mov
inc
jg
or
xchg
bound
in
rorb
cmpsb
mov
loope
in
pop
pop
dec
rclb
xchg
sbb
xlat
xchg
in
test
into
add
push
pop
cmpsl
push
hlt
pop
aam
mov
xchg
push
ljmp
stc
mov
cmp
js
sub
sub
push
push
sub
pop
out
es
mov
out
xor
push
mov
std
sub
imul
jno
or
mov
int3
cmpsl
lahf
jnp
add
xor
cmpsb
push
mov
sub
mov
xchg
movsl
jbe
mov
sbb
jnp
aaa
mov
imul
xchg
lret
ficoms
sahf
or
aad
stc
and
into
add
xchg
pop
inc
sbb
sti
sbbl
das
sub
push
mov
jmp
dec
pop
dec
fbstp
push
movsb
inc
xchg
mov
fwait
popa
adc
sbb
test
ffree
pop
imul
add
mov
test
xchg
pop
push
fs
pop
adcb
mov
inc
jl
dec
bound
rcr
mov
inc
pop
movsl
mov
mov
mov
mov
jo
arpl
dec
sub
xchg
frstor
adc
loope
sbb
cmc
or
lods
mov
dec
aam
inc
movsb
add
call
fcmovu
ret
icebp
iret
iret
jo
mov
mov
xchg
cmp
stos
or
mov
out
fisttps
dec
fistpl
test
cs
pop
or
inc
add
in
lret
cmp
stos
divb
ficomps
xor
pop
movsb
sbb
arpl
test
std
jl
push
lret
sbb
out
adc
and
dec
leave
pop
lret
test
dec
mov
and
pop
fsubl
je
inc
push
out
and
pop
lods
or
dec
push
test
addps
mov
xchg
push
pusha
addr16
popa
ret
pop
adc
ss
pop
xor
int3
cltd
adc
insb
mov
jg
cld
inc
mov
rclb
data16
rcr
adc
adcb
loope
mov
cmp
push
pop
pop
std
mov
pop
xchg
insl
adc
inc
scas
sub
sbb
and
pop
adc
push
dec
xchg
pop
incb
push
dec
inc
adc
push
ljmp
scas
xchg
xchg
and
jnp,pn
cmpl
adc
les
movsb
addr16
inc
js
sub
mov
daa
sbb
cltd
or
mov
cltd
into
nop
add
fildll
es
decl
lcall
call
fidivs
jbe
lods
push
push
fs
into
xchg
pop
xor
aas
xor
mov
mov
cltd
xor
xlat
pop
imul
iret
imulb
in
mov
loopne
insl
push
cmpsl
mov
and
js
mov
add
push
movsl
fistps
outsb
xlat
enter
in
inc
je
dec
out
imul
sahf
test
faddp
je
repnz
mov
lods
scas
call
mov
cmp
adc
sub
mov
daa
push
mov
aaa
sub
jl
test
loopne
fcmovnb
or
and
clc
fbld
xchg
sbb
sbb
push
push
subl
ficomps
mov
fists
mov
es
push
cli
or
or
jmp
adc
loop
mov
das
cmp
ds
adc
xor
push
pop
icebp
xchg
cwtl
in
dec
mov
pop
mov
aad
arpl
and
js
in
popf
or
mov
sbb
cmp
arpl
adc
or
in
sub
dec
cmp
cli
sbb
fldcw
mov
aaa
cs
jb
rorb
pop
push
mov
imul
fwait
push
mov
pop
xchg
pop
and
inc
sub
loope
outsb
fdivr
lds
popa
adc
and
out
bound
mov
lods
jge
push
out
jle
mov
sbb
and
pusha
xor
bound
pushf
push
add
adc
lret
pusha
test
arpl
and
mov
adc
push
jno
pop
xor
cmp
add
rcrb
inc
cmc
xor
mov
inc
sbb
stos
cmpb
icebp
aad
gs
hlt
arpl
inc
mov
ljmp
in
jl
rcrb
jo
xchg
mov
push
xor
push
or
push
repnz
adc
push
push
pop
pushf
xlat
xor
pop
repz
jp
stos
mov
add
push
or
lcall
jbe
dec
out
jbe
ds
or
mov
pop
jns
loopnew
cs
daa
push
cld
shrl
imul
leave
cmpsb
and
or
mov
and
add
inc
xchg
adc
loopne
xchg
add
fdiv
sahf
inc
loopne
xchg
leave
orl
or
mov
mov
mov
jle
outsl
fstps
rol
adc
and
movsl
cmc
xchg
fdivrl
out
jg
ds
xchg
fisttps
and
mov
sub
repnz
cltd
push
mov
int3
add
inc
push
fsubrl
push
xchg
aad
jno
sbb
in
xchg
mov
mov
cmp
sahf
repnz
fstpl
sbb
or
subl
jmp
push
add
pop
arpl
out
cld
aas
scas
adc
fimuls
mov
dec
in
mov
insl
loop
test
aad
enter
jmp
push
rcll
stc
push
push
insb
test
pop
lret
aam
adc
dec
cld
mov
mov
imul
daa
cmp
fs
xor
mov
add
lret
add
insb
insl
repz
mov
loop
data16
test
push
lods
outsl
mov
push
mov
xchg
sti
fs
jmp
lret
or
dec
into
mov
xchg
jge
sarl
cmc
enter
in
mov
and
mov
cmp
push
daa
cli
in
iret
jae
add
jp
dec
jmp
mov
xlat
mov
inc
movsb
cmpsb
cmp
mov
imul
inc
xchg
jnp
cmp
loope
push
sbb
cmp
sub
fsubl
dec
outsb
aam
push
mov
add
aam
sub
dec
adc
ret
adc
cwtl
jno
clc
add
jb
push
jg
test
ficomps
js
ret
mov
es
loopne
jp
jne
mov
lcall
addr16
in
pushf
js
lods
mov
pop
cmp
rolb
cmp
adc
jo
insl
add
pop
mov
jmp
ficompl
es
push
push
push
dec
das
pusha
ret
push
sub
fildll
adc
push
or
push
adc
ss
scas
and
xlat
inc
xchg
sub
repz
jmp
push
movsb
and
dec
lahf
inc
mov
pop
xor
into
and
mov
add
in
loope
loop
and
mov
mov
pop
add
pushf
push
xchg
into
sub
xor
cwtl
and
rorb
and
imul
adc
mov
icebp
pop
outsl
and
bound
fsubrl
lahf
pop
cmpsl
xor
dec
lock
sbb
push
sbb
cmpl
mov
sub
popa
repz
mov
shl
icebp
pop
or
and
jo
ss
or
sub
dec
data16
repnz
out
cld
leave
test
mov
arpl
loope
sub
xchg
rclb
dec
sub
cmp
aad
cmp
pop
cs
mov
mov
and
leave
push
pop
fstpl
cmp
shrb
jmp
loop
lahf
fadds
inc
aad
js
adc
sub
and
sahf
add
imul
inc
adc
inc
jl
push
or
or
inc
jecxz
dec
xor
sub
add
jecxz
fsubl
or
ficomps
mov
test
leave
out
in
int3
sub
mov
call
mov
or
cmc
cmpsb
or
mov
int
xchg
das
dec
stc
dec
outsl
xor
movsl
mov
push
lahf
data16
inc
pop
sbb
or
push
push
jae
fwait
push
jl
sub
stos
lds
cmp
loop
mov
add
addr16
in
scas
cmp
lods
fwait
bound
scas
insl
in
imul
push
int
out
mov
add
stc
dec
push
mov
xchg
es
pop
push
cltd
addl
pop
mov
loope
test
aad
test
stc
mov
xchg
test
fsts
jb
adc
xchg
std
gs
mov
lods
cs
push
cmc
aaa
popf
icebp
xor
mov
add
out
sbbb
xchg
mov
sbb
sub
movsl
mov
pop
stos
imul
pop
cmp
inc
aaa
js
imul
adc
cmp
test
outsl
cmp
ja
jb
and
push
ss
xchg
pop
mov
lea
mov
jle
lods
into
int3
mov
cmc
jmp
lock
insl
mull
push
iret
loopne
mov
mov
xor
push
rorb
test
into
int3
cmp
jae
mov
mov
mov
pop
mov
cs
push
mov
mov
jge
dec
or
jbe
leave
ret
mov
lea
pop
jno
cld
pop
daa
into
int3
je
mov
mov
enter
addr16
push
mov
scas
push
movsb
add
push
test
xchg
pushf
fiaddl
jmp
int3
repnz
loopne
mov
sub
and
jmp
mov
bound
clc
fs
adc
mov
ljmp
and
aam
sbb
sbb
push
xchg
mov
and
aam
test
scas
push
mov
xor
jno
mov
fwait
adc
insl
add
ret
mov
jne
lods
push
fildl
sarl
iret
xor
mov
jmp
push
inc
sahf
cltd
imul
push
pop
or
es
fbstp
pop
mov
idiv
notrack
insb
insl
xchg
out
cmp
cs
subl
mov
lret
fld
cli
add
aas
aad
popf
movsb
popf
pop
jle
pop
mov
sarl
int3
add
lret
loopne
ljmp
jp
mov
inc
lock
pop
sbb
leave
mov
mov
jns
loope
repnz
popa
sar
mov
xor
xor
inc
cmpl
sub
dec
xor
mov
xchg
lock
xchg
mov
pop
hlt
xor
lret
fs
adc
inc
aas
icebp
cmpsl
mov
and
cmp
pusha
out
mov
xchg
xor
in
leave
lahf
cmpsb
ja
mov
sti
out
hlt
adc
mov
mov
imul
in
sub
mov
or
push
and
bound
pop
mov
mov
js
loopne,pt
add
or
icebp
cmp
leave
rcrl
cmpsl
cmp
mov
sub
sub
jne
popa
lock
in
xor
push
mov
es
xchg
test
cmp
enter
sub
push
xchg
lods
out
cli
or
ja
xchg
xor
daa
dec
dec
inc
pop
je
xchg
shlb
dec
scas
inc
in
clc
lea
ret
push
xchg
mov
xchg
jnp
fcoms
mov
cmp
ljmp
push
mov
mov
stc
sbb
jb
ds
aad
aam
mov
lret
ds
mov
in
aam
pop
fistpll
jae
or
dec
inc
loopne
inc
mov
test
cmpsb
cmp
repz
out
mov
cld
nop
loope
and
cs
into
push
lods
cli
mov
sub
pop
repz
inc
xor
mov
mov
sbb
stos
stos
xchg
mov
mov
mov
movsl
dec
mov
lea
add
inc
or
call
sbb
icebp
divl
add
cli
pop
or
inc
mov
and
loope
hlt
mov
leave
pop
insb
in
mov
in
into
mov
in
call
mov
leave
call
adc
jnp
imul
roll
push
mov
xchg
pop
insb
inc
push
cmp
mov
add
mov
cs
icebp
or
testb
sahf
sbb
inc
test
std
xchg
fcoms
mov
mov
out
jl
add
in
inc
aaa
push
cmp
mov
pushf
inc
aaa
bnd
fidivl
ja
fidivrs
mov
in
sub
out
xor
pop
daa
mov
jns
cld
adc
mov
fcmovu
test
mov
jl
xchg
mov
mov
jb
mov
inc
lock
fisubrl
and
mov
fsubr
sahf
aas
into
in
aas
mov
jne
es
sbb
into
mull
sbb
pop
inc
enter
and
sarl
ficoms
dec
cmp
jecxz
cwtl
mov
outsl
in
arpl
push
inc
arpl
out
nop
idivl
shl
jmp
push
leave
sub
xchg
inc
adc
cmp
ds
enter
xor
mov
or
ror
cltd
sbb
mov
xchg
mov
js
xor
mov
and
enter
repnz
add
cmc
sub
push
sahf
xchg
mov
sub
jl
fistl
or
inc
fimuls
lods
adc
mov
fs
xchg
push
cmpsb
pusha
xor
push
pusha
mov
test
inc
rcl
dec
imul
inc
ljmp
in
popw
cld
sub
test
mov
cmpsb
adcl
es
aas
negb
les
push
out
mov
je
cli
sbb
cmpsl
mov
xchg
mov
das
icebp
sub
in
add
mov
js
in
mov
cmp
nop
loop
daa
insb
xor
lds
sbb
addb
and
mov
cmpsb
leave
dec
xchg
loope
outsl
int3
inc
fdivs
loop
adc
outsb
ss
fucomip
test
xchg
les
inc
mov
pop
mov
jnp
add
test
mov
xchg
inc
push
loopne
sahf
or
mov
push
cmpsb
call
inc
icebp
cwtl
and
push
aaa
shlw
notb
and
dec
ljmp
stos
mov
mov
ret
pop
add
inc
stc
sub
imul
dec
adc
adc
ss
dec
mov
or
adc
in
cmp
mov
stos
hlt
inc
xchg
pop
pop
add
js
xchg
ds
repnz
cwtl
js
out
insl
jge
sahf
int3
inc
xchg
mov
nop
in
jg
mov
mov
cmp
push
push
xchg
mov
aad
sub
jge
cwtl
push
mov
jle
fucom
lods
iret
or
xor
mov
in
sub
mov
pop
fnstenv
push
test
dec
dec
les
scas
sub
in
cmp
dec
cli
mov
mov
lods
int3
popa
jbe
in
xchg
out
pusha
jbe
out
int
jg
or
std
sbb
inc
push
idivb
and
cmp
pop
xchg
jmp
jle
inc
xor
ror
sbb
data16
pop
stos
nop
sub
and
and
add
mov
movsb
dec
scas
jle
push
jbe
sub
fimull
mov
fcoms
ret
insb
stos
mov
jbe
rclb
add
lods
fmull
xorb
ljmp
xor
sbb
ljmp
mov
sbb
xor
mov
mov
push
dec
sti
push
and
insb
xor
retw
mov
bound
outsl
das
push
repnz
dec
and
or
jecxz
add
clc
ljmp
rcll
and
sarl
ss
test
aad
mov
mov
cmp
pop
mov
sub
mov
out
jg
pushf
shlb
mov
add
cmp
push
mov
jbe
cmp
jo
fmul
cmp
rep
inc
mov
adc
and
repz
int
mov
push
inc
pop
dec
cmpsb
aad
out
push
jmp
mov
push
lea
jg
leave
out
dec
cmp
pop
mov
xor
pop
mov
scas
mov
mov
add
jge
test
ja
inc
lock
test
xor
dec
pushf
cmp
xchg
xor
sti
pop
add
addr16
arpl
fs
sub
out
outsb
add
dec
aad
jb
pop
xchg
push
inc
jno
in
movsl
cwtl
push
push
fsubrl
and
inc
lds
test
or
outsl
andb
cmp
in
inc
cmpsb
dec
fadd
pop
or
lods
mov
pop
dec
aaa
shll
or
repz
sub
pop
andb
sbb
add
ds
inc
xchg
adc
cmp
push
mov
dec
cmp
mov
lret
lcall
sbb
gs
mov
out
lock
push
jno
mov
pop
cmpsb
addr16
leave
aas
cmp
leave
bound
or
or
xchg
mov
fs
xor
mov
mov
in
inc
cltd
inc
sahf
adc
and
sbb
cmp
fnstcw
cli
pop
xor
and
dec
cmp
das
xor
inc
sbb
and
xchg
jg
fildl
popa
and
sbb
mov
ror
mov
xor
inc
and
aaa
add
clc
xor
out
loope
push
cmpsl
and
cld
shr
imul
clc
into
imul
jne
xchg
sub
sub
xchg
clc
stos
and
in
push
out
xchg
push
arpl
and
stos
push
push
rclb
xchg
dec
mov
adc
jo
push
notb
xchg
push
xor
call
sti
mov
xor
loop
sti
xor
push
mov
xchg
inc
mov
push
inc
dec
aad
jno
mov
mov
mov
push
jo,pn
jmp
loope
lods
jl
cld
pop
lret
add
inc
adc
adc
lcall
sbb
mov
sub
push
or
jo
adc
sub
std
das
mov
push
add
adc
inc
mov
cmpsb
add
movsb
xchg
outsl
inc
call
mov
nop
push
and
add
daa
dec
mov
dec
ret
sub
adc
inc
adc
lods
cwtl
fists
leave
cltd
inc
cmp
mov
jmp
and
test
mov
outsl
push
addr16
dec
repnz
xchg
lds
imul
test
rolb
out
mov
lea
jo
or
ficompl
sti
jno
js
and
inc
addr16
or
sbbl
jmp
scas
imul
xor
mov
adc
add
in
std
add
es
ret
sahf
xor
dec
jo
xchg
retw
popf
cli
add
xchg
ret
mov
xchg
dec
push
jbe
adc
inc
push
ss
xchg
inc
dec
jo
divl
and
lock
mov
inc
pop
fwait
lcall
gs
adc
js
gs
push
ret
inc
mov
dec
mov
nop
mov
mov
add
adc
clc
lods
mov
inc
popa
mov
iret
mov
ret
mov
jne
outsl
pop
mov
loope
or
jecxz
stc
cmp
lods
daa
aaa
iret
jo
call
cmp
inc
add
shll
dec
out
dec
cld
sub
mov
cmp
xlat
andl
pop
clc
add
mov
and
cld
jg
jo
push
jge
mov
lods
xchg
cmpsl
mov
jns
pop
sbb
repnz
jmp
imul
jmp
cmp
fdivrp
xor
inc
pop
xor
das
iret
lret
sub
lret
inc
add
rorb
inc
mov
and
mov
cwtl
cmp
jg
xchg
in
fs
sbb
inc
nop
sbb
push
movsl
je
mov
nop
push
adc
in
mov
pop
inc
shll
cmpsl
movsb
shlb
and
xor
cmp
dec
lods
hlt
lret
xor
or
sbbb
cltd
adc
data16
in
fstpl
xlat
js
mov
cmc
push
test
call
pop
std
popa
pop
push
inc
mov
imul
fmuls
imul
out
xchg
sub
test
stos
push
imull
dec
lret
xor
mov
imull
dec
mov
or
imul
mov
mov
and
jl
inc
sub
xor
rolb
outsl
add
rolb
pop
mov
xor
push
mov
ja
lret
rol
incl
jno
sbbl
dec
xchg
mov
sbb
jne
cltd
fdiv
mov
out
mov
stos
loope
jnp
test
subl
cltd
mov
mov
sub
or
xor
push
cmp
pop
scas
inc
fsub
mov
dec
and
into
aas
mov
outsl
push
jmp
outsl
stc
les
pop
xchg
insb
sbb
out
orb
cld
push
and
xchg
add
cmpsb
int
ret
outsb
xor
sbb
adcb
movsb
fimuls
jnp
stc
xorl
movsb
aam
pop
mov
jl
sbb
in
inc
jg
dec
out
pushf
mov
push
add
arpl
cmp
in
loope
addl
sbb
mov
push
sbb
lods
and
adc
loope
push
fwait
inc
scas
cmpl
adc
xor
mov
out
int3
gs
or
add
lods
ror
inc
mulb
sbb
or
inc
mov
xchg
es
sub
outsb
jae
ficompl
and
arpl
bnd
mov
adc
add
cmpsl
pop
fldt
stos
mov
sub
sbb
mov
arpl
or
fld
shrb
inc
push
mov
mov
cwtl
jne
shl
mov
movsb
lds
in
sub
in
mov
pop
jge
inc
test
and
fdivr
popa
ds
push
add
mov
xchg
mov
lret
jmp
mov
pop
call
dec
jp
in
adc
push
notb
ret
mov
mov
cmc
push
cmp
push
and
sub
inc
and
mov
adc
inc
std
out
lea
jp
insb
imul
or
jbe
out
jae
cmpl
ror
or
dec
or
fistpl
cmpsb
fistpl
push
pusha
jge
pusha
dec
mov
inc
mov
rorl
dec
iret
pop
mov
mov
adc
jecxz
test
sub
fists
hlt
xchg
filds
mov
insl
in
int3
sub
in
rolb
mov
lods
sbb
cmp
cli
mov
xchg
mov
jnp
push
sar
inc
out
jecxz
in
and
mov
out
in
jnp
adc
xor
ret
int3
cwtl
test
or
fcomip
in
in
sub
and
mov
or
push
sbbb
popf
dec
mov
in
mov
xchg
shrl
cld
inc
mov
cs
mov
add
inc
mov
sahf
fcoml
push
adc
frstor
sbb
roll
mov
cs
idivl
inc
mov
fstl
push
add
xor
mov
shlb
pop
je
arpl
xchg
das
push
jle
push
push
cld
repz
jns
orl
jno
sub
lcall
push
test
aas
mov
mov
mov
mov
cmc
push
lret
add
xchg
test
int
add
dec
mov
dec
inc
repz
add
frstor
test
lea
jno
pop
jns
dec
jns
mov
cmp
fiaddl
mov
roll
jns
sbb
sbb
sbb
xchg
xchg
push
inc
aad
es
push
lcall
sub
mov
xchg
out
mov
mov
into
push
mov
mov
loope
aad
cmp
js
cmp
jae
loopne
and
cwtl
and
out
ret
es
fcompp
adc
scas
dec
adc
push
sbb
ljmp
sbb
es
dec
dec
inc
adc
push
roll
mov
mov
into
jnp
push
sub
js
leave
mov
push
push
and
aaa
fcomps
sbb
mov
cmp
add
jnp
leave
je
dec
jo
movsl
out
add
xchg
mov
ss
xor
pop
test
jmp
mov
cmp
cld
mov
cwtl
and
jmp
in
xchg
mov
mov
sub
adc
xchg
pusha
dec
xor
repz
adc
inc
adc
arpl
sbbl
mov
and
mov
clc
xchg
ljmp
and
jg
or
popf
add
mov
add
pop
mov
jns
and
dec
subb
ljmp
cmpsl
lcall
bnd
cs
mov
add
add
aaa
ficomps
cmp
nop
sarb
cli
fcmovnb
ja
out
push
xchg
push
loopne
mov
int
and
pop
cmp
xor
mov
leave
xor
test
cmp
loope
lret
div
in
roll
mov
pusha
mov
shlb
adc
push
test
sbb
inc
filds
dec
aas
mov
jmp
mov
insl
mov
nop
ret
sahf
ret
sbb
popa
add
jo
xor
pop
cmp
and
int3
adcb
pop
stc
cld
and
inc
jns
push
jne
call
push
xchg
jne
pop
jge
mov
push
mov
imul
hlt
push
sub
loopne
add
xchg
sub
insl
jp
cmc
xchg
mov
imull
outsb
push
enter
push
dec
sub
mov
pop
imul
inc
dec
mov
stos
or
adc
inc
hlt
arpl
cmp
inc
movsb
cs
inc
mov
jae
push
push
xor
pop
hlt
jmp
aam
fsubr
xchg
aad
shlb
das
mov
fsts
xor
push
les
bound
lods
insb
sbb
cmpsb
loopne
cmc
nop
fs
imul
mov
mov
int
dec
clc
movsb
inc
and
inc
dec
mov
data16
or
ja
inc
mov
scas
movsl
jg
cmpsb
dec
insl
mov
dec
xchg
adc
lock
mov
dec
adc
xchg
pop
sub
push
std
je
fwait
enter
movsl
cmp
popa
push
adc
lods
jo
dec
push
fdivl
mov
xchg
sub
icebp
pop
push
or
inc
inc
cwtl
cmpsl
jns
cmc
mov
scas
out
cli
sbb
add
push
mov
xor
mov
mov
jne
dec
adc
stos
orl
mov
popa
daa
push
fisubrl
jns
fwait
rcll
icebp
push
xchg
popf
loope
incl
dec
int3
push
imul
inc
xor
cld
dec
jb
rolb
sbb
int3
xor
push
andl
cmpsl
in
lahf
shrb
scas
fwait
cmpsl
add
xchg
out
cli
cltd
push
jae
pushl
ljmp
outsl
fistl
or
mov
imul
cmpsl
jmp
cmpb
cmp
sub
inc
xchg
adc
sub
enter
jge
adc
gs
and
push
int3
dec
jne
das
insb
jae
in
sbb
jne
stos
mov
cmpsl
jo
lock
xchg
rorl
sub
aas
cli
jmp
daa
inc
lds
ljmp
adc
data16
cld
xchg
test
push
arpl
mov
sub
cmp
shll
je
xor
test
sub
dec
jnp
jae
jmp
jae
sub
imul
insb
cmpsb
push
xchg
dec
imul
inc
jg
sbbl
xchg
jns
jmp
mov
out
and
das
popf
cmpsb
sub
mov
shrl
cld
daa
lret
lods
cmc
xchg
mov
xchg
imull
xor
mov
sbb
in
ss
pop
inc
enter
lock
dec
movsl
jnp
sahf
sbb
sbb
add
push
pop
pop
sub
push
fsts
std
ss
push
pop
js
shr
adc
movsl
sahf
jae
push
sbb
subb
ds
dec
fcoms
mov
dec
clc
pusha
add
fmul
shlb
jae
enter
cmpsl
jne
sahf
push
jno
adc
push
sub
and
std
mov
add
cmp
mov
hlt
jno,pt
mov
xor
pop
jle
icebp
mov
int
jbe
jno
fwait
sbb
pop
in
mov
inc
jbe
js
pop
shlb
cld
pop
sub
fldt
cs
dec
nop
or
lret
rcr
ficoms
push
mov
shlb
mov
push
dec
in
pop
dec
std
test
int3
pop
push
sbb
es
cmpsb
xor
or
fcmovb
xchg
or
clc
inc
js
or
dec
rcll
mov
mov
rolb
pop
push
popf
sub
pushf
fmuls
and
lret
add
ss
pushl
xchg
nop
pushf
pop
in
push
sub
loope
mov
adc
pop
jmp
clc
xchg
in
scas
cwtl
pop
mov
mov
scas
push
out
in
xlat
ror
add
pop
stos
push
adcl
inc
std
jmp
mov
or
in
and
fsubs
ja
arpl
in
or
in
stos
mov
xor
and
es
or
sbb
daa
popf
mov
cs
add
dec
fstl
adc
sub
pop
repz
in
test
mov
pop
jecxz
imul
mov
sbb
iret
jp
mov
dec
ret
jbe
adc
pop
into
mov
xchg
and
push
adc
out
xchg
dec
mov
popfw
push
sbb
push
inc
cmpl
cmpb
mov
scas
mov
jg
lock
aad
inc
mov
cmpsb
mov
addr16
outsl
push
adc
out
push
std
pop
int
and
jne
fucomip
push
enter
punpckhwd
aam
dec
iret
mov
mov
dec
out
stos
aaa
add
test
xchg
xchg
xor
sbb
mov
push
call
nop
cmpsl
lret
hlt
inc
in
pop
dec
in
and
xlat
aam
subl
add
filds
lods
xor
inc
lods
pop
ret
xchg
lcall
subb
xchg
cs
and
or
mov
jmp
movsb
insl
sbb
rcll
mov
push
cmpl
lret
pop
fucomip
mov
movsl
inc
ljmp
and
inc
stos
rcll
jns
jns
push
mov
adc
sbb
pushf
jbe
push
adc
mov
imul
outsb
repz
clc
lea
cwtl
bound
xchg
or
clc
ja
lcall
adc
push
jbe
dec
loope
mov
call
lcall
xchg
repz
lahf
ret
movsb
in
rolb
repnz
shlb
jg
roll
add
int
dec
mov
inc
int
mov
js
mov
add
and
mov
lea
pop
xchg
sahf
fists
mov
push
adc
arpl
push
jecxz
rol
cmpl
scas
add
and
sbb
and
loop
cmp
sbb
push
cmpsb
sbb
clc
ja
mov
mov
in
add
mov
int3
adc
jb
sbb
cmp
loop
fimull
cmpsb
stos
xor
xchg
testl
add
jmp
test
daa
popf
outsl
dec
lock
push
xor
cli
movmskps
mov
in
imul
adc
fdivs
inc
push
cmp
push
lock
or
or
inc
ja
js
sbb
stc
inc
mov
sub
in
rclb
xor
cmp
es
stos
and
mov
bswap
mov
popa
inc
cmp
sbb
and
mov
test
mov
pop
mov
cmp
cmpsb
fisttpl
popf
sbb
push
movsb
dec
mov
mov
xor
mov
vmptrld
data16
jbe
pusha
mov
ret
pop
or
out
mov
xlat
repnz
jbe
fmull
jge
push
mov
fwait
jle
jp
mov
cmp
push
cmp
ljmpw
inc
enter
stos
int
add
jb
stc
shl
lahf
sbb
mov
int3
or
in
loope
jge
push
pusha
cld
std
sbb
xchg
lock
into
sbb
aam
mov
dec
icebp
or
lret
cwtl
dec
in
mov
inc
cwtl
or
xchg
out
mov
nop
addr16
lods
pop
popf
cli
in
and
mov
xor
int3
xor
dec
cmp
lea
adc
lds
lds
repnz
inc
adc
ss
jp
inc
sahf
scas
cltd
in
push
mov
mov
jnp
in
jle
mov
adc
mov
jge
jmp
fs
dec
adc
mov
stc
push
je
jge
jecxz
jge
lods
push
cmpl
stos
gs
jp
jecxz
xlat
pop
cli
lea
gs
sub
inc
pop
jnp
std
repnz
ss
adc
rol
mov
jp
sbb
daa
cld
sbb
cli
push
enter
inc
popa
out
rcrb
scas
insl
adc
jno
xchg
ja
sbb
icebp
push
or
or
mov
fs
nop
insb
pop
outsl
xorb
lea
sub
loope
cmp
push
lahf
inc
fdivp
fisubs
int3
data16
jp
sub
gs
cmp
jmp
lods
int
movb
push
imul
lds
mov
aas
mov
sbb
das
adcb
push
das
sub
mov
fwait
jno
stc
mov
sbb
sahf
insb
decl
movsl
or
sub
dec
insl
aad
cmp
addb
hlt
pop
push
enter
arpl
xor
lret
or
ds
cmp
aad
sub
rcrl
or
repnz
xor
mov
imul
out
and
sub
fiadds
not
sbb
in
push
repz
repz
scas
enter
xchg
repnz
arpl
mov
sahf
jbe
in
mov
adc
enter
in
add
fdivs
dec
mov
int
xlat
xor
push
enter
fnsave
test
jmp
imul
sub
loop
xchg
pop
fldcw
jl
movsl
sub
test
rcrl
add
mov
imul
jecxz
mov
adc
ficoml
push
shrb
add
das
es
xchg
and
test
and
inc
cmpsb
inc
pop
fisttpll
inc
and
popf
int
lcall
js
es
ljmp
xor
mov
dec
mov
movsl
or
cwtl
test
clc
xor
fwait
sbb
faddl
sbb
pop
repz
fisubs
loopne
aam
pop
mov
and
jne
leave
xchg
orl
std
cmp
loopne
jnp
adc
push
loop
sahf
xchg
cmp
dec
out
loop
sbb
pop
rorb
rorl
es
pop
mov
movsl
mov
sbb
test
mov
xchg
imull
adc
adc
rcl
push
adc
in
xchg
pop
fsts
xlat
scas
mov
mov
loopne
cli
mov
lret
ja
ja
stc
in
mov
loope
sbb
fnstcw
and
ljmp
xlat
pop
push
mov
jecxz
scas
lret
fmul
xor
add
movsb
lret
jge
loope
xlat
cmp
cmpsb
aas
pop
out
pop
insb
cmp
mov
or
mov
enter
jle
sbbb
int3
mov
scas
mov
test
cmp
or
hlt
sbb
test
dec
in
push
push
outsl
ja
xor
call
mov
int3
add
add
and
mov
mov
inc
ds
jg
pop
pop
jmp
inc
adc
data16
popa
cmp
sub
mov
insl
and
cmc
out
adc
inc
push
movsl
mov
adc
sti
cld
es
xor
or
mov
mov
and
ret
in
adc
arpl
inc
cmp
clc
cmp
cmp
sbbl
das
mov
jns
push
dec
test
cmp
mov
fimuls
test
mov
xlat
cmp
jns
xchg
pop
jo
jecxz
mov
ret
je
dec
je
adcb
mov
mov
inc
movsl
clc
inc
fsubrs
sahf
sbb
sbbl
daa
push
cli
jmp
cld
inc
test
mov
push
daa
jb
ret
stc
negb
mov
scas
adc
iret
sbb
add
cmp
add
mov
mov
nop
loop
or
js
out
mov
aaa
xchg
iret
sub
mov
test
adc
lret
push
inc
xchg
data16
mov
sub
inc
push
inc
mov
mov
add
xchg
add
sbb
xchg
mov
mov
jge
cmp
or
add
fisubl
inc
mov
dec
ja
sbb
mov
lock
jg
shlb
frstor
mov
push
push
and
filds
mov
jb
test
sub
pop
sub
fwait
pop
push
and
popa
sarl
enter
pushl
scas
rcll
shll
jno
mov
cmpsb
mov
push
inc
cltd
repz
daa
pusha
clc
out
into
sbb
jl
or
testb
cmp
imul
hlt
ss
imul
inc
mov
cmp
bound
scas
les
fucomip
rcll
jmp
mov
jmp
imul
lods
cld
pop
mov
inc
popf
outsl
jbe
jmp
cld
sub
pop
popa
inc
lods
scas
jnp
xchg
sbb
xchg
and
test
sbb
sub
cwtl
xchg
insb
xchg
stos
jo
adc
dec
lods
xchg
sub
push
and
inc
cmp
cwtl
or
aad
cmp
sub
adc
mov
xor
cli
call
dec
int3
sub
dec
mov
popf
mov
inc
fisttpl
out
outsl
and
nop
mov
scas
clc
sbb
jl
lods
test
js
fidivl
jge
lret
test
mov
sbb
jp
and
or
xor
mov
aas
in
das
shlb
aam
jle
jl
mov
rorl
add
cmp
enter
push
repnz
loopne
gs
dec
xchg
shll
xor
dec
mov
mov
pusha
add
cli
inc
mov
mov
test
pop
adc
loop
xchg
mov
aam
movsb
cmp
sbb
add
test
aad
dec
cli
pushf
andl
fistpll
fisubs
ds
mov
mov
jo
cmp
outsb
jne
xorl
adc
lods
inc
das
jecxz
bound
aad
push
repnz
clc
cs
mov
or
addr16
mov
icebp
aam
cmp
adc
add
sbb
pop
jl
adc
cmp
inc
jo
frstor
dec
scas
push
rolb
jb
mov
mov
xchg
enter
ret
add
or
or
movb
dec
inc
dec
ss
pusha
mov
fidivrl
pusha
or
repz
or
push
sbb
negl
xchg
jb
loop
jecxz
xchg
xor
jne
in
lret
dec
sbb
push
cmpsl
sbb
dec
pop
jecxz
lods
ds
dec
fwait
call
xchg
jp
ud0
iret
movsl
sahf
stos
pop
jmp
cld
out
push
pushf
dec
fisttps
sub
fidivrl
fiadds
inc
sbb
xor
adc
mov
add
cmpsl
outsl
clc
aad
jmp
pusha
fiadds
in
sbbb
and
cmp
pushf
rcrb
daa
mov
imul
pop
xor
sub
dec
jns
shrl
rcll
jp
xor
test
fldt
cltd
into
movsl
imul
out
testb
test
mov
pop
stos
pop
jecxz
cwtl
xlat
inc
js
mov
dec
xchg
mov
add
or
jns
out
orl
dec
cltd
mov
mov
sti
fs
inc
sti
call
data16
sbb
add
imul
inc
outsb
stos
sub
ds
cld
or
mov
jmp
sbb
xlat
fistpll
add
js
xor
fisubs
or
imul
iret
nop
mull
add
push
loope
lcall
and
xchg
loope
jl
or
sti
andl
dec
jnp
add
jp
ficomps
mov
adc
das
int
sti
push
jge
rorl
outsb
push
jmp
pop
sub
mov
test
and
subl
outsb
mov
add
enter
std
add
dec
test
adc
fisttpl
mov
jmp
arpl
daa
mov
or
mov
mov
hlt
push
mov
out
or
fisubl
repnz
shrl
xchg
scas
push
shll
pop
pop
lods
movsb
inc
aam
push
repnz
lock
mov
and
loopne
pop
xor
out
jne
scas
xchg
adc
sbb
fnstenv
loope
xchg
sub
mov
mov
push
dec
into
mov
pop
movsb
add
push
xchg
adcb
sbb
repnz
add
add
lret
cmp
sbb
mov
dec
add
xor
in
cltd
ja
sbb
nop
test
push
sub
hlt
add
movsl
add
loop
popa
adc
mov
and
testl
or
ja
inc
rcl
mov
and
and
lds
add
fists
sub
mov
cmc
les
add
cmp
push
cmp
test
aaa
push
mov
jmp
rcrb
das
pop
sub
inc
decb
outsl
inc
dec
xchg
xor
ljmp
xchg
pop
sahf
int3
push
add
lret
lds
dec
lods
int
int3
dec
fiaddl
mov
mov
mov
les
or
mov
push
add
jno
mov
push
sbb
loope
jno
xor
cs
push
add
fisttpl
das
lahf
les
dec
push
pop
push
pop
inc
cli
dec
std
shl
insb
adc
ret
les
add
xchg
xor
shlb
adc
loope
loop
pop
xor
addr16
mov
cwtl
arpl
ss
lret
leave
pop
scas
movsl
test
jle
add
fstpt
push
out
outsl
lret
jecxz
cmp
mov
fildl
add
jmp
das
arpl
cmpsb
sub
and
inc
adc
fimull
jp
test
gs
cmp
cld
xchg
mov
or
adc
inc
insl
cmp
pop
je
ficoms
lahf
mov
leave
or
pop
adc
sarb
out
rolb
sub
test
add
xor
in
test
mov
and
adc
xchg
je
es
out
jl
adc
cmp
mov
lcall
and
insl
sbb
jbe
jno
xchg
rclb
popa
outsl
cld
addr16
mov
inc
subl
jo
pushl
adcl
scas
mov
mov
scas
in
push
mov
aam
mov
shl
push
jo
cmp
jns
ficoms
les
mov
mov
mov
in
mov
or
mov
sub
adc
lods
imul
movsl
mov
fs
pushw
dec
sub
sub
jecxz
cmp
cmp
cld
stc
sbb
pusha
adc
mov
dec
jns
fiadds
data16
lret
out
rolb
or
ja
jb
daa
push
aad
arpl
mov
jns
leave
sbb
push
cld
imulb
xchg
xchg
jb
or
inc
test
stos
jl
pusha
gs
sbb
loope
push
mov
popa
mov
test
dec
int
pop
in
into
xchg
xchg
xor
jle
xchg
or
inc
pop
and
lcall
xor
inc
add
add
mov
sbb
add
lods
mov
push
cmp
cmpsl
xchg
adc
pop
dec
sub
sub
fldl
add
or
mov
addr16
ja
je
pop
xchg
outsb
mov
scas
mov
rorb
out
cltd
je
imul
inc
inc
adc
sarb
pop
jne
cmp
insl
sbb
push
popa
add
stos
insl
flds
jl
dec
stos
es
loope
fnsave
mov
je
fstps
mov
nop
jp
adc
xor
xchg
push
stos
rcrl
jae
mov
pop
xchg
jg
jns
ljmp
sarb
and
add
xchg
mov
add
iret
push
mov
jno
out
dec
xchg
or
adc
sub
cmp
lds
es
push
sbb
in
cmpsb
cmp
out
arpl
js
arpl
cmpsb
lret
jle
fwait
outsb
movsb
sbb
sub
imul
cmpl
scas
cwtl
into
cli
jmp
in
sbb
arpl
and
add
inc
mov
cmp
inc
dec
rorb
pop
xchg
jne
cltd
inc
inc
call
pop
insl
mov
mov
add
jl
jp
inc
jmp
sub
xor
cmp
lods
push
dec
test
ljmp
shl
fcmovnbe
mov
adc
jecxz
js
fwait
out
daa
push
xor
mov
jmp
lock
cmp
add
xor
ja
aad
clc
jle
ret
and
cltd
jb
jb
rorb
clc
mov
sbb
outsb
and
add
outsb
mov
lods
xlat
cltd
cmp
jmp
mov
out
out
arpl
jb
sub
adc
add
lcall
xor
cmp
push
mov
ds
lahf
inc
insl
hlt
scas
sub
mov
xlat
adc
jecxz
and
movb
inc
aam
lahf
add
int3
scas
sub
testl
mov
sub
push
jg
mov
lds
dec
push
and
mov
xor
add
insb
js
outsb
div
mov
pop
aaa
and
or
movsl
dec
sahf
fstl
lret
mov
ds
dec
lock
xlat
sahf
xor
incl
enter
jle
sbb
std
lahf
mov
push
cli
jmp
loopne
jl
lock
nop
pop
lods
sub
ljmp
out
adc
aad
push
xor
cmp
call
ljmp
idiv
in
xor
sbb
int3
sbb
fstpt
mov
jbe
add
aaa
jg
pop
jo
cmp
out
int3
mov
jns
xchg
and
int
and
pop
into
fsub
popa
out
out
insl
loop
das
xchg
lahf
xchg
lods
dec
xchg
repnz
sub
pop
xchg
mov
pop
sub
mov
std
aas
or
stos
ja
adc
in
daa
loop
imul
out
mov
jg
shlb
and
inc
or
pop
adc
icebp
add
sbb
push
jecxz
out
mov
mov
aas
xor
out
pop
cld
dec
cmpl
addb
hlt
pop
mov
iret
xor
push
inc
adc
lods
jno
enter
pushf
mov
jb
lea
movsb
in
aam
pop
push
cmp
push
out
int3
dec
pusha
pop
xor
mov
dec
scas
dec
mov
pop
stc
xor
pop
outsl
dec
popf
xchg
push
xchg
sub
icebp
mov
mov
pusha
test
push
dec
fs
push
test
cmp
mov
mov
adc
ret
test
gs
pushf
or
xchg
mov
fistpl
mov
pop
out
mov
sti
cmp
fistpll
push
xor
pop
add
and
out
mov
xor
xor
out
or
xchg
ljmp
cs
cmp
xchg
test
cs
dec
addr16
dec
inc
dec
test
scas
in
sbb
xor
mov
jl
aam
icebp
cli
les
pop
daa
jns
adcb
fcoms
jge
xor
dec
stc
and
jae
pop
scas
outsb
pop
xlat
out
pusha
adc
adc
jmp
mov
adc
cmc
loopne
scas
pop
in
inc
mov
jbe
cmp
out
xchg
ror
or
xor
lds
xor
popa
rclb
fidivrl
push
in
mov
push
ja
cmp
mov
and
loope
mov
sbb
push
sub
mov
push
adc
push
lret
push
mov
out
xor
scas
fcomi
mov
mov
xchg
mov
mov
add
aad
ja
mov
cld
mov
lret
sbb
out
mov
sbb
mov
sub
lods
lods
inc
inc
mov
or
xchg
ret
scas
adc
loop
push
mov
es
mov
xchg
mov
xlat
jo
fs
xchg
push
inc
dec
add
push
pop
orl
push
fnstenv
test
cs
pop
mov
sub
xchg
mov
pop
popf
cs
lds
rcrl
int
cmpsb
dec
imul
lods
outsb
bound
lahf
loope
cld
mov
outsb
inc
adc
jp
mov
sarb
js
push
imul
xor
imul
xor
repz
push
pop
lcall
mov
xchg
pop
cld
adc
push
push
and
popf
jmp
mov
jp
or
shrb
mov
xlat
stos
movsb
in
loope
pusha
test
add
cmp
cs
out
sbb
pop
mov
sbb
daa
add
das
xor
pop
cmp
imull
outsl
inc
or
jnp
rcrb
jp
loopne
jno,pt
jmp
jmp
inc
pop
popa
popf
fistpl
aam
add
jae
repnz
pop
mov
rorl
hlt
xor
xlat
mov
cmpsl
adc
jle
or
test
shl
bound
cmp
insl
xchg
test
js
sub
int3
lahf
das
in
mov
cmc
imul
mov
ss
jbe
and
adc
and
dec
push
cmp
mov
cltd
mov
pop
addb
jecxz
aaa
fimull
mov
clc
push
xor
push
push
dec
repnz
mov
jne
mov
push
jp
xchg
cli
orl
adc
test
dec
mov
cmp
dec
push
xchg
sub
pop
js
fwait
sbb
cwtl
das
cmp
ds
movsl
xchg
outsb
or
hlt
les
outsl
pop
dec
mov
adcb
je
fwait
cltd
and
and
movsb
fstps
test
sti
iret
fiadds
inc
sbb
test
mov
repnz
cmp
or
cmp
mov
rorb
pop
fildll
inc
xchg
or
mov
mov
int3
xor
or
dec
push
ljmp
xchg
jl
fisttpl
jbe
jge
cmp
insb
or
aad
je
out
push
sub
out
mov
in
xor
mov
jne
push
jmp
xchg
adc
movsb
or
les
mov
cmpsl
cmp
icebp
inc
out
inc
inc
push
mov
arpl
int3
lret
scas
mov
jge
jo
cltd
pop
sub
loopne
test
incl
mov
adc
stc
ja
sub
out
ss
lahf
int3
aad
adc
inc
push
or
xlat
lret
mov
inc
mov
dec
loop
inc
dec
call
mov
pop
insl
mov
dec
add
pop
xor
lret
pusha
mov
inc
mov
sbb
xchg
and
cwtl
sbb
adc
inc
ficoml
into
dec
lods
pop
sub
shlb
jbe
mov
testb
push
mov
sbb
daa
out
es
push
push
xchg
or
jecxz
jg
inc
sub
shll
shlb
xor
fs
pop
sbb
arpl
lea
lcall
xor
inc
pop
xchg
imul
cwtl
xchg
daa
lret
xchg
lcall
shlb
lahf
inc
mov
mov
adc
or
pop
xor
inc
xchg
imul
fs
and
mov
mov
outsb
xchg
fisubrl
sti
jecxz
mov
fsubrl
mov
push
pop
sar
sahf
movsl
arpl
mov
xchg
lcall
out
jmp
daa
jb
outsl
roll
sarb
jecxz
xchg
xor
jecxz
jge
js
cld
sbb
pop
ret
cmp
test
mov
push
test
cmp
lahf
imul
mov
mov
or
dec
or
sti
repz
outsb
fdivrs
mov
cmp
lcall
jbe
jne
lds
sub
push
in
mov
shl
mov
cmpsl
xor
imul
or
addb
lea
imul
enter
mov
movsl
sub
push
cmp
cmpl
test
daa
fs
jmp
adc
jge
test
push
les
movl
push
cmp
loopne
jg
stc
mov
mov
add
dec
out
or
test
in
pop
test
nop
dec
sbb
or
sbb
in
mov
aad
push
mov
pop
or
cmpsb
or
shrb
pushf
pop
loopne
loop
push
in
vpshufd
or
jl
pop
fwait
sub
arpl
pop
xor
mov
jmp
test
addl
nop
sub
test
pop
loop,pt
call
aas
dec
pop
scas
data16
jno
shl
rcr
jle
xor
aam
test
cltd
div
andl
or
jl
sbb
iret
les
xor
push
fstsw
scas
scas
jge
movsb
mov
out
push
xchg
sub
mov
and
and
rolb
addr16
rcll
and
rorl
je
jnp
mov
jp
adc
scas
add
or
push
sbb
mov
sub
ja
lcall
pop
or
sbb
leave
lcall
push
std
nop
xor
test
iret
clc
pop
sbb
cmpsl
mov
dec
das
loopne
mov
dec
in
adc
cmp
pop
movsl
adcb
mov
js
imul
inc
mov
or
rcrb
outsb
push
in
xchg
xor
divb
xlat
dec
jmp
les
mov
movsb
loopne
aam
arpl
loope
orl
mulb
pop
pusha
movsb
push
nop
cmpsl
adc
mov
push
xlat
int3
cmp
xor
jl
ret
jne
aaa
dec
or
xor
push
pop
or
lea
jbe
adc
push
mov
sub
xchg
push
lods
cmpsb
jae
or
xchg
dec
mov
std
bound
xchg
cld
fbstp
xchg
xchg
cmp
mov
imul
lds
push
sbbl
mov
lahf
add
lcall
bnd
mov
xchg
xor
xchg
mov
out
cwtl
jp
xchg
pop
pop
jecxz
outsb
gs
pushf
leave
arpl
inc
lret
push
lret
pop
pop
leave
or
cmp
jb
sbb
dec
shrb
jno
or
cli
call
lret
mov
movsb
aad
xlat
test
movsl
pop
add
sub
push
es
lea
xor
lcall
xorb
int3
test
xchg
mov
jo
jb
mov
adc
loop
dec
rorl
daa
fbld
cwtl
out
call
add
dec
pop
add
jb
repnz
adc
arpl
mov
sbb
es
mov
push
sbb
sub
dec
jne
lds
pop
ret
mov
imul
aam
mov
add
jg
mov
or
xchg
xor
jle
inc
stos
das
adc
iret
aas
stos
jge
push
or
xor
ret
lahf
andl
or
cmp
pop
testb
sti
stos
mov
loop
jge
lret
lahf
mov
roll
fidivl
add
into
scas
dec
test
ds
mov
or
xor
rorb
xor
testl
pop
pop
pop
add
mov
push
push
push
add
xchg
mov
xlat
add
xor
lods
lods
or
mov
xor
ja
pop
lods
popf
mov
js
sub
mov
dec
adc
fisubrs
rcrl
pop
or
xor
shll
push
out
loop
adc
cmp
push
pusha
popa
sub
mov
in
ja
add
faddl
xchg
setg
aas
sarb
push
push
inc
popa
jbe
pop
dec
lock
and
sbb
les
inc
ret
sub
mull
jno
cmpsl
jl
sbb
loope
dec
ss
mov
das
xor
data16
sahf
jg
cmp
mov
push
fldcw
cmc
lret
adc
lea
dec
icebp
mov
lcall
and
out
xchg
testb
loope
add
decb
cmp
cmc
cmpsl
or
cwtl
lcall
or
mov
inc
sbb
fdivrs
dec
fs
ja
pop
jo
es
pop
inc
aad
or
adc
mov
ljmp
stos
and
mov
dec
imul
sub
shlb
cli
xlat
aas
dec
mov
jle
cli
mov
pop
jno
stos
ljmp
test
iret
cwtl
movsb
push
outsl
addr16
outsb
push
mov
loop
out
pop
cmp
inc
sbb
ds
fcmovb
adcb
scas
cmp
pop
lahf
and
clc
test
xchg
xchg
out
out
adcb
decl
sbbb
rorl
insl
dec
out
lds
jnp
icebp
scas
scas
out
call
sub
jno
shl
mov
mov
stos
or
scas
rorb
inc
jmp
lret
adc
inc
faddp
mov
or
and
shl
cmpsb
or
dec
jo
or
sub
mov
dec
addr16
lea
cmp
push
ds
pop
outsb
stos
je
mov
xchg
mov
mov
mov
adc
imul
inc
cld
fwait
adc
and
aad
shlb
dec
xor
je
push
std
nop
jne
hlt
pop
dec
mov
loopne
sbb
icebp
outsb
jae
nop
cli
scas
arpl
sbb
sbb
mov
lods
xlat
aas
cmc
movsl
push
dec
das
mov
cmp
mov
lock
jle
add
add
pop
add
mov
ljmp
mov
jnp
insl
test
sub
rcpps
test
flds
mov
pop
jae
jmp
sub
in
stos
scas
cmp
jb
or
cld
idivb
loop
not
or
xchg
or
sub
sub
adc
push
jg,pt
icebp
dec
fcomip
mov
inc
stos
mov
xlat
jmp
mov
pushl
mov
fldenv
push
sarb
int
mov
push
and
sub
add
push
dec
imul
cmp
repnz
mov
pop
repnz
out
push
mov
inc
ror
aas
sub
cmp
scas
ljmp
and
mov
das
lods
imul
cmp
out
mov
imul
add
or
js
lcall
push
rol
mov
cld
lds
daa
stos
mov
inc
insl
outsl
mov
int
jg
pop
jmp
jmp
fsub
inc
mov
loop
divb
pop
jle
je
test
lock
mov
dec
es
leave
dec
loope
mov
mov
jg
std
sub
cmpsl
jge
sahf
nop
cmp
adc
xor
decl
ds
jae
mov
cmc
loopne
dec
jnp
testb
sub
int3
lods
inc
and
xor
cmpsb
inc
ret
cmpl
fs
sbb
nop
add
xchg
pop
sub
nop
mov
push
loope
int
add
push
push
sbb
adc
pushf
repz
pop
push
int3
mov
lahf
inc
js
inc
xchg
in
or
ret
sbb
mov
adc
clc
lock
mov
mov
loop
dec
and
mov
add
cmc
mov
sbb
ds
rorb
ja
pop
pop
dec
mov
and
dec
adc
stos
xchg
push
jecxz
mov
movsl
xor
outsl
cltd
mov
mov
imul
imulb
add
dec
xchg
xchg
fistl
dec
inc
fisubrs
mov
inc
cmc
lret
sbb
push
cmp
inc
pusha
xchg
xor
int3
daa
sub
xchg
fdivrl
outsb
xchg
adc
mov
dec
cmovb
pushf
cmp
daa
stc
cli
aad
push
movsb
push
lret
pushf
js
dec
aad
adc
test
pop
out
fiaddl
sahf
int
xchg
pop
mov
cmpsl
lods
leave
fmuls
adc
push
mov
fdivl
clc
mov
xchg
mov
xchg
out
pop
mov
outsl
or
sbb
jae
leave
pop
mov
aad
fisttps
int
bnd
jl
xchg
ja
stos
hlt
inc
bound
jb
stos
and
pop
js
jb
pushf
and
adc
iret
sub
mov
jecxz
mov
das
enter
mov
xchg
fstpl
lods
daa
cmc
fs
xchg
xchg
jne
gs
fldlg2
pop
add
call
sub
jae
dec
sub
pop
push
xchg
fstps
inc
and
pop
xchg
shrb
adc
push
cmp
les
dec
sub
addr16
cld
sub
jl
and
pusha
loope
pushf
inc
and
sbb
das
andb
cmp
push
scas
cmpsl
mov
fiaddl
push
jp
hlt
pop
cmp
cmpsb
dec
or
sub
aas
push
jmp
test
inc
testl
mov
aad
inc
jae
sbb
popf
test
pop
cli
lods
call
push
loope
pop
xor
ficoms
cmp
mov
repnz
dec
mov
lcall
jb
daa
push
and
data16
rcll
cld
stc
dec
mov
sub
lea
mov
adc
cmpsb
cltd
inc
xchg
xor
xor
arpl
and
push
les
or
lods
mov
push
inc
inc
lcall
jp
hlt
xor
mov
dec
test
adc
rcll
pop
mov
inc
popa
xchg
ret
add
das
jmp
inc
add
sub
test
fnstcw
or
or
jnp
dec
mov
inc
ret
pop
push
sbb
mov
mov
jmp
jnp
add
mov
add
pop
dec
mov
mov
adc
xchg
loope
and
sahf
std
inc
dec
push
jmp
mov
loopne
arpl
sahf
xlat
dec
cmp
cmp
xchg
shrl
ljmp
in
call
pushf
sti
and
sbb
stc
adcb
push
mov
xchg
movsb
or
sub
cli
push
inc
adc
xchg
int
mov
xor
adc
fdivrl
push
sti
add
cmp
mov
and
mov
adc
xchg
xor
push
dec
mov
pop
inc
lods
jp
push
xor
loop
or
push
xor
or
icebp
ret
mov
daa
mov
repnz
mov
jbe
or
lret
aad
xchg
in
scas
jmp
mov
sub
loope
inc
xorb
bound
dec
jl
inc
clc
push
stc
fidivrl
inc
and
lock
pop
sbb
or
mov
cmp
or
stos
loop
cltd
mov
ljmp
test
addr16
outsb
and
or
mov
push
inc
dec
ucomiss
sub
push
mov
mov
aad
sub
repnz
shll
mov
lret
loopne
mov
mov
jecxz
pop
imul
sub
hlt
nop
xor
jo
pop
sub
pusha
jle
mov
mov
mov
dec
inc
mov
or
jbe
divb
dec
jno
inc
pop
push
pop
in
mov
inc
adcl
lahf
xchg
sarl
mov
nop
hlt
or
or
clc
push
daa
adc
add
cmpb
iret
sbb
dec
jge
mov
push
xchg
jbe
movsb
xor
lock
pushl
inc
and
shll
pop
sub
aaa
add
mov
loopne
aad
out
in
negb
int
fidivrs
sbb
pop
jns
enter
lods
nop
fwait
in
jb
adc
push
out
mov
fsub
push
imul
mov
mov
lods
in
mov
test
push
pusha
jb
test
lret
jmp
xor
testl
add
scas
ret
shl
and
add
dec
inc
out
iret
mov
cmpsl
fbld
mov
aas
dec
cltd
and
mov
outsl
lds
lea
inc
pop
sub
sbb
fbstp
movsb
fs
in
or
cltd
and
pop
xchg
cmp
sbb
leave
pop
in
data16
fisttps
incl
out
mov
in
fcom
mov
mov
mov
pusha
test
stc
aad
mov
cmp
fists
push
fisubs
cmp
add
pop
lock
push
sti
enter
idivl
hlt
push
push
jmp
rcrl
jb
adc
adc
sub
lret
and
ljmp
int3
jmp
mov
data16
sbb
mov
adc
adc
stc
push
cmp
sub
daa
xor
pushw
sti
lahf
jg
mov
xchg
mov
or
aaa
jle
lock
jmp
or
jle
jp
mov
xor
loop
inc
sti
stos
cmpb
in
xor
inc
jecxz
xor
dec
dec
shlb
jge
in
lahf
mov
cltd
and
popa
dec
ret
clc
mov
xchg
mov
cld
mov
aaa
push
jbe
call
push
adc
or
xor
andb
mov
xchg
push
ficompl
inc
adc
mov
mov
mov
test
fdivs
inc
clc
jno
dec
sbb
lahf
inc
jns
xor
push
pop
ljmp
mov
mov
cmp
adc
jnp
add
push
es
and
lret
cmc
jnp
mov
cs
out
aam
aas
sub
in
mov
or
leave
fabs
in
xchg
add
inc
sub
test
in
and
dec
xor
cs
les
push
test
adc
adc
push
lret
ffreep
or
mov
push
jb
xlat
and
add
out
test
sbb
inc
aaa
arpl
mov
and
mov
insb
aas
repnz
mov
and
xchg
mov
or
inc
dec
mov
pop
mov
shrl
xchg
cmp
jbe
mov
inc
addb
or
in
xchg
inc
mov
movsb
lods
es
stos
fldcw
mov
mov
ret
mov
xchg
repz
jne
pusha
ret
insb
pushaw
xor
xchg
cs
cli
cltd
popf
inc
stos
xchg
sbb
cli
imul
sbb
outsb
pop
sbb
xor
hlt
jle
sub
es
and
inc
fbstp
and
push
inc
rcrl
cmp
iret
scas
xchg
inc
mov
movb
pop
xor
fwait
outsl
jmp
imul
lret
sbb
pop
loopne
mov
cld
sub
mov
imul
pushf
or
push
icebp
cmp
out
pop
xor
int
outsl
iret
fisttpll
in
in
leave
andl
xchg
cld
or
fxam
pop
stc
push
int
or
sub
dec
or
mov
sbb
dec
rcr
add
mov
in
ret
add
xchg
sbb
imul
mov
daa
insb
inc
mov
adc
xor
sbb
adc
out
xchg
sub
lcall
lcall
ja
mov
sbb
or
stos
fstl
ja
leave
jae
dec
lahf
pop
and
cmp
cmp
and
jae
and
loopne
jg
pushf
xor
mov
and
imul
popf
fnstsw
lahf
cmp
call
es
in
outsb
jo
adc
addr16
pop
mov
sbb
cmp
int3
repnz
inc
or
push
data16
faddl
xor
push
jbe
pop
pop
lock
push
adc
jne
pop
fiaddl
adc
loop
ljmp
bound
lock
add
mov
and
jp
jg
add
mov
lcall
lods
outsl
out
push
bound
cmpsb
in
test
test
pop
mov
sub
mulb
mov
sbb
mov
cli
sub
push
pop
and
sub
ret
pushf
ret
mov
jl
lds
jnp
jge
mov
mov
ss
xchg
in
dec
xchg
mov
in
mov
cmp
sbb
mov
popf
clc
sub
popa
xchg
push
jo
fs
test
xchg
inc
les
jp
cli
mov
push
mov
mov
and
movsb
mov
mov
add
cld
xchg
sub
mov
loop
test
inc
sub
mov
xor
sti
fisubs
jle
inc
or
movl
add
mov
test
fdiv
xor
fisubrs
xlat
sub
data16
dec
inc
pushf
loop
pop
loopne
inc
cwtl
icebp
xor
fcompl
leave
pop
ljmp
sahf
int3
ljmp
ffreep
jle
and
divb
int
mov
and
icebp
or
fisttpl
insb
and
es
sub
or
mov
dec
cwtl
into
cmp
pop
mov
iret
hlt
hlt
aas
push
into
lods
xchg
sbb
or
pop
mov
stos
aam
insb
out
imul
xor
jecxz
sti
xchg
paddusw
dec
jp
inc
leave
lds
push
xor
sub
cld
lahf
pop
inc
addr16
hlt
bound
mov
mov
xchg
stc
repz
ljmp
add
out
es
dec
and
jb
xchg
lret
sbbb
in
ret
pop
xor
dec
xor
mov
rol
insb
or
les
sub
xor
outsb
mov
mov
jl
loope
test
xor
ja
inc
mov
lods
adc
sbb
test
ror
leave
mov
add
dec
sub
cmp
cmp
lods
pop
fwait
shl
adc
in
push
popa
out
dec
lock
inc
and
adc
or
in
sbb
outsb
das
jbe
insb
pop
xor
ror
adc
xchg
rcl
out
cmp
and
add
jmp
and
das
dec
cmp
idivl
divl
in
outsb
ret
mov
mov
mov
daa
adc
mov
and
mov
sbb
cmp
pushl
into
hlt
andl
add
mov
dec
inc
in
fwait
jle
aad
flds
in
jmp
jbe
jns
push
in
or
jae
fisttpl
sub
xchg
inc
jo
jle
scas
xchg
loope
lret
jle
rsqrtps
fsts
adc
inc
push
outsl
push
sbb
std
mov
jg
ds
fistl
jg
push
push
js
mov
cs
sbb
lcall
andl
stos
mov
inc
pop
xor
fbld
fadds
cli
xlat
dec
adc
mov
sub
jl
and
or
sbb
mov
push
and
mov
xchg
jnp
jo
nop
lods
xor
int
pop
jne
jmp
adc
idivl
cmpl
sub
sub
cli
aas
aaa
xchg
mov
inc
mov
push
outsb
cld
adc
jae
mov
in
mov
sbb
push
dec
mov
jae
push
call
cltd
andl
or
jns
inc
adc
mov
xlat
mov
sub
and
les
mov
xor
mov
inc
mov
push
cs
sbb
repz
cmp
mov
cmp
int
mov
clc
jb
cwtl
push
sbb
xchg
icebp
sbb
cmp
hlt
or
repnz
mov
dec
dec
popf
push
pop
push
shrl
aaa
lahf
out
in
push
int
push
mov
out
fimuls
pop
add
add
mov
pop
ljmp
mov
daa
daa
test
mov
dec
sti
outsl
pinsrw
xchg
jmp
mov
push
pop
cli
and
ds
pop
mov
xor
sbb
lret
ss
add
stc
push
xor
mov
cwtl
adc
cwtl
mov
mov
aas
jge
xor
mov
xor
in
insl
mov
dec
fstps
sbb
add
push
xor
and
bound
adc
test
adc
push
fs
scas
push
sbb
andl
push
aad
sub
fucomp
xchg
jp
jmp
jmp
lret
loope
cmp
test
fwait
stos
das
arpl
xor
jns
xor
mov
mov
jp
arpl
cli
jbe
leave
fsubp
xor
sarb
sbb
rcrb
or
inc
sbb
xchg
pop
out
add
lods
adc
or
sti
push
or
jae
adc
lods
xchg
roll
jnp
stc
lea
stos
adc
pusha
outsb
imul
jle
lock
cltd
int
frstor
popf
dec
xchg
and
xchg
add
pop
jne
cmp
fsts
call
adc
push
cmp
fstl
inc
mov
nop
jne
insl
mov
fsubs
lea
std
add
push
or
in
xchg
cmp
xorl
xchg
push
sti
or
mov
sahf
push
xchg
call
push
mov
cmp
jle
lods
and
fisubrs
push
inc
push
cmpsb
mov
or
daa
mov
lea
in
sbb
dec
pop
aad
add
xlat
dec
imul
sub
jbe
fcmovu
repz
mull
mov
adc
addr16
data16
xor
fldcw
or
das
cld
cmp
int3
sbb
cmpsl
fst
hlt
mov
add
rorb
mov
mov
and
clc
pop
mov
and
in
push
fimull
int3
xlat
inc
lea
pop
outsb
xchg
jae
cmp
xor
inc
mov
jbe
jae
in
sahf
pushf
xchg
adc
loopne
int
mov
in
xor
decb
out
xchg
mov
xor
imul
xor
mov
pop
adcb
in
orl
mov
jbe
sbb
out
jb
scas
ds
cmp
add
addb
icebp
adc
aaa
and
aad
mov
xchg
pop
or
jnp
in
xchg
mov
and
ljmp
sub
cmp
adc
mov
pop
out
adc
mov
pushf
cmc
mull
stc
xchg
mov
sub
ret
popf
mov
or
aam
sub
jmp
and
call
sbb
enter
das
push
mov
mov
dec
loopne
ficoml
pop
in
adcb
inc
xlat
dec
cld
inc
dec
cmpsl
lret
gs
push
fnstenv
xchg
test
or
aam
mov
sarb
pop
push
xor
std
mov
lock
pop
sub
repz
jb
out
sub
data16
and
aaa
outsb
fmull
shll
jmp
out
stos
cmp
aam
ret
add
test
stc
loopne
jne
add
mov
mov
xor
or
outsb
testb
jmp
fmull
mov
loopne
sbb
mov
xor
or
or
mov
inc
insl
or
inc
and
mov
repnz
and
or
lock
ret
pop
mov
xchg
push
lahf
mov
xchg
mov
cmp
jae
icebp
pushf
cmpl
cwtl
imull
into
out
fcomps
xor
cmpsb
xor
out
inc
dec
cld
jp
adc
push
lods
mov
or
ret
inc
jle
test
pop
mov
add
aad
adc
push
adc
mov
cltd
jnp
mov
dec
add
cmp
movsb
sarb
fisttpll
popf
cmp
jo
aam
mov
sub
or
pop
push
fadds
add
aad
cmp
out
pop
iret
xchg
push
xchg
arpl
mov
je
andl
cmp
lock
push
xchg
ds
lahf
xchg
push
xchg
in
cmp
gs
dec
andb
shrb
cmp
mov
ret
inc
mull
and
cli
sbbl
vstmxcsr
popa
cli
xor
sbbb
xchg
push
sbb
addl
and
mov
lcall
dec
jg
jge
subb
in
adc
into
mov
pop
test
xor
sbb
popf
mov
dec
dec
sub
test
dec
push
div
xor
rcrb
popf
xor
push
xchg
sub
stc
xchg
push
or
sbbl
in
lcall
adc
sub
negb
mov
and
or
iret
cmp
jne
add
and
pop
inc
adc
aam
inc
mov
pop
mov
daa
mov
cltd
test
ss
pop
jmp
pop
sub
mov
pop
xchg
stos
sbb
mov
xor
and
pop
xor
lods
in
or
cmp
int3
jns
xor
mov
or
scas
push
cltd
lods
lret
setb
add
mov
scas
dec
add
loope
ds
ss
mov
sbb
incb
mov
ljmp
shrb
xchg
fsub
fistpl
sbb
es
sbb
nop
popf
aas
lock
mov
fbstp
xor
stos
or
xor
out
fwait
jne
rorb
dec
shlb
sbb
ret
mov
repnz
loop
sahf
in
lahf
imul
sahf
in
push
push
mov
clc
adc
outsl
jl
insb
xchg
pop
push
scas
xchg
sbb
and
in
push
sbb
jg
inc
jns
loope
xchg
aaa
jge
insl
adc
xor
pusha
int3
inc
jo
ficoms
and
push
mov
scas
push
mov
jnp
add
or
jmp
adc
push
popa
dec
test
jp
aas
ljmp
sbb
dec
ss
mov
cltd
cmpl
lret
int
out
inc
xchg
xchg
divl
rclb
jbe
cmp
fbstp
fisubl
out
pop
and
flds
xchg
sbbl
cmpsl
fiaddl
clc
fidivrs
add
int3
push
mov
addr16
mov
or
sub
mov
inc
gs
mov
mov
into
mov
pop
sub
repz
dec
ss
inc
in
cmc
outsl
cmpsl
jmp
adc
stc
cmpxchg8b
lret
jbe
mov
je
mov
cld
inc
cmp
enter
dec
adc
jle
jl
xchg
enter
imul
cmp
cwtl
subb
fwait
mov
xor
add
mov
ss
pop
mov
mov
xchg
roll
sarl
or
lea
ret
ficomps
scas
stos
sahf
adc
sub
and
gs
cld
enter
mov
cld
cltd
loope
or
xchg
insb
es
les
xchg
sbb
pop
lods
xchg
repnz
arpl
movsl
sub
fnsave
out
and
mov
jge
push
and
mov
lods
stos
push
jl
loopne
fldenv
mov
shl
sub
sub
and
call
pop
pushf
mov
mov
testb
xchg
loope
pop
ficompl
mov
and
rcr
jmp
in
fsubs
roll
jecxz
sbb
hlt
mov
mov
jb
mov
cmp
sub
add
mov
sub
call
inc
xchg
dec
repnz
mov
call
enter
xchg
and
inc
aam
shr
aad
fcoms
dec
adc
sub
and
test
shr
sahf
push
push
iret
dec
jle
xchg
mov
lods
mov
sbb
dec
push
gs
jg
loopne
cmp
xchg
aam
mov
xchg
sub
sbb
je
dec
cmp
push
and
jbe
out
jo
add
jno
and
test
or
dec
jmp
xchg
push
fimuls
cmp
and
jno
xchg
mov
pop
subl
inc
mov
sti
stos
pushf
inc
xor
xchg
jbe
lahf
sub
sbb
cmp
pusha
fnsave
or
xchg
sbb
push
mov
cmp
test
clc
out
sub
mov
scas
ret
dec
clc
iret
rdmsr
push
cmp
add
das
rol
ss
mov
out
cli
je
in
inc
cmpl
js
ss
cmp
popf
fwait
arpl
xchg
in
push
add
dec
jle
mov
loop
sub
mov
into
out
inc
popa
jecxz
adc
jge
and
and
dec
jo
sbb
adc
xlat
dec
ja
cmp
out
xchg
pusha
mov
push
fnstsw
lods
jmp
vunpcklps
or
dec
adc
jecxz
xchg
push
lahf
cmc
inc
popa
push
imul
addr16
jae
pop
bound
lods
insb
push
insl
test
aam
dec
xor
mov
push
push
fsubr
rcll
into
aam
push
or
test
jnp
into
loope
leave
or
sahf
iret
sub
lahf
popf
pusha
xchg
test
fsubrp
mov
mov
jl
or
mov
into
push
add
add
addr16
mov
dec
inc
adc
adc
jmp
mov
sarb
dec
int3
shrl
out
or
andb
inc
and
fisubrl
xor
or
push
xlat
inc
imul
and
fimuls
mov
and
ret
es
sub
stos
mulb
cmp
jp
adc
ret
adc
xor
pop
jl
pop
repnz
xchg
add
rclb
imul
shlb
inc
les
lods
dec
fsubrl
adc
or
gs
jge
sbbb
jl
and
cmpsl
add
push
mov
inc
sub
pop
sbb
lcall
cmc
sbb
push
cs
pop
inc
or
dec
pushf
inc
pop
mov
jecxz
adc
fs
mov
std
add
mov
mov
std
popf
add
cli
jne
push
xchg
cltd
sbb
stos
lods
rorb
movsl
fidivs
insb
jb
stc
sti
mov
fwait
or
dec
leave
not
ds
mov
mov
stos
fs
xchg
and
gs
outsb
andb
mov
pop
scas
and
imul
cmp
mov
mov
dec
shlb
je
outsb
jnp
sarl
gs
push
rcrl
add
outsl
fs
mov
jae
mov
pop
into
fcomps
lods
fildl
lods
mov
dec
pop
or
xor
mov
xchg
mov
call
aad
xorl
xchg
fsubs
jb
sub
and
ret
loop
rorb
xor
cmp
lret
ss
iret
or
outsb
fs
inc
mov
sub
or
mov
add
jae
insb
add
lds
scas
fistl
push
out
push
jbe
cmp
insb
fucom
push
xor
les
fadds
aam
pusha
cmp
xor
push
into
sti
adc
xor
popa
xchg
jae
fstpl
and
and
sbb
push
mov
cmp
mov
jb
sahf
int
popl
adc
xlat
push
pop
call
aas
pop
xchg
pop
in
sti
inc
fists
add
enter
adc
mov
mov
cli
cmp
flds
or
test
mov
lcall
dec
sub
testb
rcr
aad
push
ljmp
pop
adc
pop
fnstcw
std
mov
inc
adc
pop
les
movsb
in
shrb
cmp
push
pop
inc
std
int
mov
jecxz
sahf
sbb
int
pop
ljmp
or
mov
xchg
ss
lea
xchg
lods
loop
mov
xchg
ret
pop
in
imull
pop
jae
mov
push
mov
xchg
ss
addr16
in
cld
out
out
mov
pop
cmc
push
fldenv
jns
pushf
gs
shrl
aam
xchg
inc
movsb
into
push
or
inc
pusha
xor
test
mov
into
ja
hlt
mov
and
cmp
in
loop
pusha
stc
pop
cmp
sbbl
mov
fisttpl
jae
negb
lahf
xchg
pop
xor
jns
ljmp
sti
mov
push
insl
sub
fidivs
xchg
pop
ret
sub
xlat
inc
xchg
lahf
loopne
test
mov
push
xchg
add
push
js
js
mov
test
push
in
add
mov
jecxz
or
mov
aaa
hlt
mov
push
xchg
inc
outsl
pop
mov
shrb
mov
test
hlt
xor
inc
push
push
lds
mov
mov
pop
jmp
or
jge
pop
icebp
out
dec
sahf
loopne
sub
xlat
scas
and
rcll
popa
aad
in
cmpsb
arpl
out
fidivrs
lock
mov
mov
mov
je
push
pop
data16
jbe
js
xchg
lcall
mov
ss
or
loop
adc
into
insb
cs
sub
ja
ja
mov
dec
inc
lea
ret
xchg
fadds
rorl
lret
bound
insb
jo
mov
cmpb
scas
lock
iret
daa
jns
cmpsb
mov
cmpsl
jbe
xchg
test
push
sbb
sub
inc
arpl
lcall
xchg
test
mov
or
inc
adcl
sbb
loope
cli
leave
pop
jae
es
fiaddl
sub
dec
out
and
sub
inc
into
js
xchg
cs
ds
and
push
mov
movsb
mov
jae
jg
data16
mov
fstpt
imul
mov
and
ja
ljmp
add
daa
jmp
adc
sub
popf
pop
cmp
add
sti
sbb
push
dec
push
ds
int3
scas
dec
sbb
lods
loopne
add
jnp
xacquire
mov
or
out
xor
data16
sub
arpl
ljmp
fxch
lds
jg
add
imul
xchg
mov
mov
lea
popf
xchg
outsl
sbb
sub
mov
sub
addl
out
push
jbe
xor
popa
lcall
sbb
push
cli
cltd
sahf
and
cmp
cmp
in
and
fsubl
inc
jns
test
aad
std
jp
xchg
andb
jbe,pn
or
loopne
jge
and
fsub
cmp
ficompl
inc
fadd
jp
or
lds
or
xchg
or
lods
or
and
arpl
mov
xchg
mov
xchg
nop
out
or
imul
scas
cmpsb
push
pop
inc
cmc
lods
bound
mov
sub
pop
shl
sahf
xor
enter
add
sub
and
jo
and
cltd
aam
sbb
stos
add
mov
xchg
or
es
enter
push
lods
inc
sbb
test
jl
xor
add
and
das
push
jns
sub
fs
cltd
fimuls
leave
dec
adc
inc
orb
or
xlat
pop
push
mov
lock
jnp
mov
mov
fnsave
mov
cmp
push
js
dec
cs
aaa
add
push
test
sbb
sahf
pushf
out
ljmp
jns
mov
and
inc
push
pop
popf
pop
jmp
pop
mov
xor
sub
jmp
add
xchg
push
push
xchg
fldcw
loopne
bound
inc
ficoml
pop
dec
jb
stc
jmp
pop
mov
xorb
gs
add
scas
call
aaa
cmpsl
insb
xor
stos
jg
cwtl
cmp
xchg
gs
sbb
sbb
cmp
insl
mov
pushf
cmpl
aaa
push
in
test
sub
mov
scas
push
cmp
das
pop
aaa
das
mov
leave
mov
xchg
pop
bound
in
jg
into
test
adc
or
mov
shrb
daa
fwait
push
in
mov
rclb
mov
or
pop
push
xor
dec
inc
mov
outsb
cmpsb
sub
mov
iret
push
dec
and
popf
jno
popa
ds
mov
dec
add
adc
adc
gs
stos
pop
mov
shll
push
clc
inc
adc
mov
pop
xchg
enter
sub
or
adc
mov
push
adc
int
sbb
xchg
decl
clc
cmpsl
fcoml
pop
add
test
in
faddl
cmpsl
stos
out
mov
add
mov
or
call
mov
mov
sub
repz
cmp
ret
xor
rcl
stos
lea
jb
inc
cmp
sub
cmpsb
rcll
add
xchg
push
dec
fwait
mov
fisubrl
dec
stos
mov
daa
and
out
ret
test
push
into
pop
push
mov
jge
xchg
push
jmp
sbb
rclb
ss
and
lds
adc
mov
inc
xlat
mov
dec
test
or
inc
pop
mov
loope
test
jns
push
add
xchg
ljmp
adc
fcoms
fwait
or
jle
ret
cmp
arpl
or
cmp
outsb
enter
mov
inc
cmp
inc
test
repnz
fwait
movsb
add
or
pop
jmp
mov
xchg
mov
mov
nop
pop
clc
insl
xchg
lahf
xchg
pop
jmp
cmp
sub
mov
mov
gs
or
push
ror
popf
cmpsl
push
stos
in
outsb
jg
mov
lods
movsb
dec
scas
push
inc
xor
lods
pushf
mov
cmpsb
in
pop
dec
ljmp
add
into
sub
in
inc
aad
adc
fs
mov
test
inc
inc
and
dec
push
lds
inc
cs
cmp
subl
dec
outsl
out
es
inc
in
arpl
lcall
scas
and
xor
mov
cltd
lock
or
jp
fsubrl
mov
and
or
xor
jnp
jecxz
push
jle
sti
in
xchg
pop
insl
leave
push
fisttpll
in
insb
mov
push
popf
cmp
sub
and
pop
outsb
hlt
push
in
inc
test
push
movsl
xor
mov
subl
pop
subb
lods
pop
cmpsl
mov
xor
dec
inc
or
add
lock
mov
test
stos
mov
cwtl
adc
cld
fwait
sbb
cli
sub
xor
adc
push
cltd
xchg
jns
repnz
inc
imul
mov
fnstcw
sub
jmp
je
rcrl
cld
pop
popa
mov
scas
mov
addr16
xchg
les
mov
mov
outsl
sub
nop
pop
adc
cmp
in
mov
out
xchg
shll
dec
jnp
xchg
push
lds
add
dec
insl
or
jno
pop
cmpsl
es
add
jle
pop
and
out
push
sbb
lods
psraw
mov
push
fwait
lock
fisubrs
decb
out
pop
pop
xlat
popw
sbbl
fnclex
xchg
jl
ret
add
mov
xchg
sbb
add
js
mov
dec
insl
inc
adc
mov
mov
pushf
or
xor
push
int3
fs
stc
sti
dec
adc
mov
fisubl
ret
push
and
mov
or
adc
mov
cmp
sbb
mov
aaa
inc
icebp
test
cs
aas
loop
in
inc
sub
xchg
and
xlat
and
mov
cld
aam
pop
and
dec
testl
jecxz
fcoml
jnp
ljmp
dec
jecxz
mov
add
ljmp
adc
sbb
or
pop
decb
inc
mov
arpl
xchg
pop
add
mov
call
jnp
pop
fwait
jb
mov
ljmp
movb
push
loopne
test
cmpsl
add
test
ja
dec
mov
mov
or
xchg
stos
dec
mov
out
xor
add
std
mov
jns
sub
and
sbb
into
xchg
ficompl
push
pop
mov
pop
gs
dec
hlt
vcvtps2pd
dec
xor
mov
sbb
mov
sbb
pop
ljmp
fs
xchg
inc
repnz
inc
fldenv
imul
mov
xor
and
mov
inc
cmp
push
dec
sbb
adc
add
push
popa
dec
push
pop
or
jo
mov
insb
mov
repz
xchg
jno
cmp
adc
stos
stos
push
inc
into
das
push
out
arpl
insb
inc
lock
mov
mov
clc
or
xor
stos
push
push
loop
ror
into
add
dec
xchg
addl
jbe
outsl
jecxz
and
xor
outsl
push
data16
lods
mov
dec
jbe
or
clc
call
xchg
mov
pop
mov
js
bound
movsl
scas
fwait
push
inc
jle
mov
add
sbb
jns
int
jne
scas
sub
dec
xor
jg
dec
pushf
cmp
shrb
add
test
xor
out
fdivl
mov
xor
dec
jbe
rorl
mov
adc
pop
imul
mov
shr
and
out
push
out
xchg
mov
jg
mov
pop
ficoms
aaa
pop
arpl
loope
push
pop
aad
jb
test
pop
push
mov
arpl
push
pop
stc
lods
les
dec
cwtl
jg
out
add
mov
ljmp
xchg
and
ret
adc
call
jnp
shlb
leave
cmpsb
inc
push
sbb
out
sub
sbb
or
mul
fisubrs
cmc
and
sarl
sbb
sarb
jle
roll
cwtl
adc
jmp
adc
sbbl
jp
hlt
jg
mov
cmpsb
cltd
imul
fs
adc
cwtl
xchg
jbe
test
jns
lret
cld
fwait
sbb
gs
sti
dec
nop
popf
push
mov
push
inc
xchg
popa
xor
jmp
adc
pop
ljmp
mov
inc
test
dec
pop
pop
mov
andb
push
in
jo
pop
test
out
mov
jnp
lret
mov
call
pop
mov
fs
sbb
cmpl
xor
jno
dec
mov
ja
xor
mov
mov
xor
xor
aaa
stos
ljmp
js
lret
cltd
mov
mov
stc
gs
mov
insb
mov
jecxz
mov
xchg
mov
sub
lods
mov
testl
stos
inc
push
xchg
and
or
das
xchg
mov
repnz
pop
clc
repz
ljmp
inc
cmc
scas
pop
jno
lret
mov
movsl
push
repnz
xchg
and
jg
jnp
rcrl
dec
sbb
in
mov
ret
dec
pop
lret
pop
into
add
or
stos
cli
push
inc
cmc
rcrl
in
arpl
insl
mov
mov
test
fimuls
cmp
imul
loop
adc
adc
fsubr
xor
in
or
mov
fchs
lock
lds
add
out
sbb
stos
or
add
pop
std
jp
mov
outsb
iret
add
out
jbe
cmp
pop
inc
test
dec
gs
or
in
mov
push
loop
mov
push
cs
insb
xor
xchg
clc
test
jnp
mov
cmp
jmp
pop
pop
loope
sub
arpl
movsl
mov
pop
xchg
mov
pop
lds
jmp
test
in
push
fstl
jecxz
and
stos
cmp
lcall
dec
int
mov
dec
xor
dec
cmp
and
lret
sbb
lret
xor
mov
jns
das
mov
out
mov
outsl
and
mov
push
ja
movsl
or
movsb
inc
loopne
in
arpl
pop
movsb
add
pusha
mov
mov
ficoml
fisubrl
icebp
mov
adc
pushf
imul
add
cs
sub
pop
fidivrl
test
sbb
dec
fs
stos
pop
push
sbb
jae
fcmovne
xchg
in
inc
sub
test
jo
loope
test
xor
fwait
dec
shlb
sub
add
sub
mov
cmp
mov
mov
mov
pushl
pop
adc
cltd
pop
imul
mov
paddq
cmp
sub
lods
push
repz
call
das
pop
gs
repnz
cmp
divl
push
push
fs
scas
push
loope
jo
cmp
xlat
pop
lock
loopne
adc
cmp
dec
loop
inc
inc
xchg
push
xor
lret
mov
fnsave
or
test
push
mov
test
dec
sub
push
dec
mov
mov
cmp
or
lcall
xchg
sbb
jle
dec
jns
mov
icebp
add
dec
pop
pop
xchg
xor
in
mov
leave
sbb
jns
cmpb
cmp
out
lcall
inc
in
mov
push
mul
enter
ret
push
call
push
jle
push
adc
jge
pop
repnz
xor
test
test
xor
pop
pop
mov
jge
mov
scas
jp
lock
dec
cmp
add
cltd
xchg
mov
test
push
loope
jmp
sub
mov
dec
div
mov
xchg
mov
into
dec
testb
mov
retw
lcall
jl
sub
imull
jo
adc
jnp
and
scas
arpl
ds
cmc
out
lods
loop
push
xor
xchg
cs
les
gs
aaa
jns
cltd
add
rcr
jne
sbb
jle
xchg
jnp
repz
fcmovnbe
lret
xchg
xor
jnp
fcmovnbe
repz
xchg
sbb
outsl
xor
xchg
xlat
mov
adc
and
gs
cmp
inc
daa
and
mov
addr16
lret
mov
jns
push
dec
nop
test
cmc
mov
push
pop
mov
jmp
loop
or
mov
dec
sub
and
sahf
pop
mov
pop
stos
dec
xchg
cmc
or
pop
jmp
stos
dec
fisubrs
sbb
repz
test
mov
dec
lock
sub
sbb
mov
mov
jg
adcl
jno
loop
cmc
in
out
sti
lods
xchg
sysret
ljmp
cmp
push
lods
sbb
insl
or
mov
jp
ret
cli
pop
jecxz
cli
sub
stc
adc
sbb
cmp
pop
icebp
inc
jno
pop
ljmp
mov
popa
fsubl
inc
mov
fwait
ja
std
mov
pop
dec
mov
sub
pop
imul
ljmp
adc
popa
loop
pop
cmc
loop
sub
pop
cmp
rolb
or
ds
mov
mov
mov
jle
dec
or
cmp
das
dec
repz
dec
data16
inc
xchg
xor
daa
movsl
inc
jno
mov
mov
push
into
xchg
data16
movd
xor
stos
rcll
movsb
sbb
xlat
jo
pop
xlat
adc
mov
insb
dec
gs
push
bound
repz
xlat
xorl
jle
ljmp
repnz
xchg
and
ficompl
cs
sub
out
and
cmp
pop
rcll
xor
js
xchg
enter
lock
and
shl
sbb
nop
sbb
jecxz
jecxz
fmull
shll
pop
in
lea
add
pop
pop
mov
fsubs
loop
mov
mov
outsb
jnp
pop
cmp
pusha
ds
mov
clc
ret
or
aaa
jecxz
dec
outsb
mov
mov
movsl
lock
in
sbb
leave
add
cli
jnp
xchg
sub
cli
insl
ret
push
or
imul
pop
mov
jle
cmp
divl
adc
or
xor
dec
cmc
lahf
into
push
ss
bound
adc
and
mov
xchg
call
aaa
adc
fnstcw
stos
inc
scas
testb
cli
mov
fnstenv
cmp
pop
dec
xor
and
sbb
dec
mull
popa
add
test
cltd
xchg
dec
cltd
inc
inc
jle
test
sbb
daa
mov
xchg
icebp
inc
xchg
mov
lea
insl
inc
xor
sbb
or
dec
adc
aad
jne
aam
leave
mov
mov
insb
shrb
push
movb
xchg
dec
insb
push
lcall
jge
dec
inc
jnp
aaa
mov
aas
pushf
hlt
popf
aam
sbb
ret
ja
mov
mov
shrb
std
mov
xchg
sbb
xchg
fisubrs
out
jae
pop
jge
lock
call
daa
sub
fldl
aaa
popf
or
or
cmpsb
mov
ret
add
and
lahf
lret
dec
outsb
xchg
sti
xlat
xor
scas
pusha
loope
push
sahf
pop
mov
mov
mov
add
xchg
jmp
mov
mov
pop
loop
add
mov
push
inc
add
mov
sbb
loop
stos
adc
aad
add
xchg
inc
insl
cmpsl
stc
stos
jae
stc
cs
or
dec
push
filds
icebp
aam
xchg
cmovg
dec
adc
lock
sbb
and
dec
mov
cmp
mov
xor
pop
cs
add
aaa
xor
nop
mov
mov
das
fwait
cmpsl
cmp
mov
xor
fwait
add
mov
dec
ret
jnp
mov
sbb
mov
sub
fwait
dec
dec
rcrl
mov
sbb
scas
shrl
mov
ss
xchg
loop
mov
mov
or
out
mov
test
jmp
out
fmull
cmp
pop
ret
sub
in
sbb
xorl
and
in
fwait
cmp
add
cli
sbb
imul
jmp
jnp
mov
mov
dec
sti
dec
jmp
xchg
cmc
and
jmp
jae
mov
push
repnz
lahf
pop
movsl
mulb
test
mov
push
xchg
out
test
ffreep
dec
lock
pusha
ja
jle
stos
inc
xor
xor
push
jecxz
mov
mov
test
mov
xchg
jmp
xchg
dec
sub
add
and
mov
hlt
movsl
xorl
inc
cmp
sbb
pop
inc
out
inc
add
pop
adc
out
sahf
jb
cltd
xchg
imul
imul
shl
insb
adc
ljmp
lods
aas
sub
arpl
pop
mov
lds
dec
stc
xchg
jae
push
mov
aas
ja
ljmp
adc
push
test
mov
dec
dec
jnp
sbb
cmp
mov
inc
es
jg
push
cld
xor
xor
mov
movsl
in
dec
orb
loope
out
jecxz
testl
ficomps
clc
jb
shl
or
push
decl
call
mov
cltd
sub
push
pop
pop
std
hlt
xchg
dec
repz
pop
sbb
dec
cmp
rolb
aaa
push
cli
dec
mov
int
sbb
push
pop
pop
xlat
cmp
mov
rolb
addr16
inc
loope
sub
fstpl
ljmp
js
xor
sbb
pop
lret
andb
inc
lcall
inc
jmp
cmc
outsb
dec
fs
push
mov
clc
nop
jp
aaa
sub
not
fisubl
adc
add
jns
outsb
adc
lds
mov
jns
add
jmp
adc
add
stos
in
out
daa
in
mov
loope
xorl
movsb
addr16
xchg
jbe
xchg
dec
cmp
sbb
loopne
push
fmull
sbb
mov
sbb
idivb
fdivrl
inc
insb
rclb
inc
gs
adc
out
cld
icebp
inc
push
cmc
pop
and
adc
popf
and
daa
mov
into
nop
mov
inc
dec
mov
andb
out
je
adc
sbb
daa
xor
mov
iret
jae
push
test
outsl
mov
pop
dec
lods
stos
inc
mov
scas
jne
jae
sub
ret
cltd
pop
hlt
bound
mov
lret
loop
aad
imulb
cmp
out
sti
ret
negl
addb
ljmp
push
xlat
xor
jb
mov
stos
or
loopne
mov
shr
push
pop
mov
test
repnz
shlb
jmp
pop
ret
mov
std
add
or
mov
fdivrl
fadds
xor
les
push
arpl
jb
push
pop
adc
dec
shrb
fldlg2
pop
inc
mov
xchg
lods
in
lods
shrl
popa
mov
in
mov
pop
mov
mov
movsb
add
sbb
faddl
jnp
push
outsl
out
testb
cld
and
inc
pop
icebp
xor
push
or
cmp
aad
sub
cmp
xchg
int
xlat
out
jbe
push
mov
xchg
cwtl
xlat
mov
or
outsl
sbb
rol
cmp
or
lea
call
adc
or
popa
mov
shrl
cmp
test
sbb
pminsw
xchg
aad
jl
mov
pop
out
xchg
cltd
jbe
and
fstpt
cs
ret
cmp
inc
inc
xor
fisubl
pop
mov
pop
inc
add
xchg
sarb
enter
das
in
jge
loop
xor
mov
mov
daa
in
jecxz
sbbl
mov
mov
or
orb
xor
pushf
fsub
in
sub
push
mov
add
fdiv
fdivrl
rcrl
xor
xchg
xchg
fistps
mov
xor
and
call
leave
arpl
push
shrl
imul
dec
ds
js
les
inc
mov
pusha
ss
xchg
pop
ret
push
adc
test
mov
mov
push
mov
push
mov
push
cmp
mov
and
jo
and
loope
imul
sub
mov
cld
pushf
dec
mov
push
xchg
orl
dec
sarl
ss
pop
xor
aam
pop
mov
inc
push
push
push
dec
adc
mov
push
pop
adc
inc
adc
mov
inc
push
xchg
cmp
sub
cld
hlt
pop
iret
aas
inc
pop
movsb
and
lret
adc
mov
adc
xchg
leave
or
inc
mov
jp
mov
negl
ror
loop
mov
cmp
xchg
mov
push
inc
jle
jge
ds
rcr
movsb
je
xor
mov
out
scas
cmpsl
xor
test
pop
stos
insb
in
sbb
jb
mov
jg
xor
and
mulps
aam
push
in
iret
pop
xor
int3
faddl
sub
in
mov
cli
or
xor
xchg
xchg
in
movsl
inc
mov
call
je
loop
fwait
ret
lahf
insb
lods
sub
add
ss
outsb
lea
in
addr16
adc
lret
in
push
mov
lahf
cmp
movsb
iret
jb
icebp
push
cmc
cmp
adc
bound
cmpb
sbbb
fsubs
xor
sbb
xor
xchg
or
cld
xor
rcl
mov
jecxz
dec
adc
mov
lcall
mov
pop
loop
mov
pop
je
outsb
outsl
ja
dec
mov
sahf
adc
jns
xchg
jp
inc
aaa
incb
in
repz
adc
xor
jbe
lds
fistl
addb
mov
xchg
arpl
mov
or
ljmp
rclb
xchg
bound
outsb
xor
mov
icebp
mov
adc
insb
dec
insb
lcall
cmp
mov
nop
push
and
ret
stos
inc
dec
mov
dec
sbb
outsb
imul
add
mov
sbbl
jp
cmp
push
sub
pop
js
addr16
xchg
insb
xor
sbb
dec
adc
popa
loopne
pop
adc
es
lea
mov
inc
aas
shlb
shr
in
inc
and
test
add
rcrl
mov
and
jg
or
cmc
mov
fwait
inc
mov
dec
cli
adc
xorb
push
cmp
pop
mov
fstps
add
adcb
aaa
push
add
cmp
daa
cmp
mov
push
call
jae
push
dec
inc
mov
ficomps
dec
js
ja
jne
mov
fcmovbe
ljmp
push
or
imul
mov
aaa
cwtl
mov
mov
push
stos
ss
mov
addb
dec
std
inc
adcl
push
loop
pushf
movsl
sub
cmpsb
mov
inc
mov
push
sbb
mov
test
push
xor
sub
repz
cwtl
sbb
ss
outsl
and
loope
jl
xlat
push
dec
cmp
shlb
es
adc
sub
fnstsw
sbb
mov
sub
std
imul
add
inc
push
xor
lds
fisubrl
fistpl
or
adc
into
rcrb
adc
mov
inc
inc
pop
inc
sub
cli
mov
repz
jb
mov
not
dec
push
jp
jge
jp
shll
pop
mov
int
pop
arpl
ficoml
add
fisubl
jo
sti
stos
push
cli
mov
ds
iret
call
jnp
mov
push
das
push
jg
testb
or
mov
aad
divb
xchg
jb
mov
fisubs
cmpsb
push
sbb
mov
xchg
mov
mov
lcall
repnz
fnstenv
in
aad
cmp
mov
lret
out
clc
push
dec
pop
adc
push
cwtl
or
and
outsb
sub
into
add
and
dec
mov
sbb
pop
cltd
add
inc
add
in
data16
jecxz
popf
test
shrl
subl
add
movsb
xor
mov
outsb
mov
mov
mov
es
cs
adc
int
ret
push
sahf
and
xor
mov
inc
push
adc
push
jp
repz
bound
xchg
mov
push
dec
stc
mov
aas
negb
ficoms
mov
mov
stc
sbb
lret
xor
lock
sub
rcll
inc
stos
les
adc
push
push
add
bswap
lcall
adc
sub
fldl
mov
pop
cmpsb
xor
hlt
lcall
insl
add
lahf
jo
pop
nop
xchg
hlt
hlt
and
lcall
adc
mov
add
pop
xchg
negl
sbb
xor
push
cmpsb
popa
mov
sub
aaa
lods
mov
mov
or
testb
xchg
lods
inc
test
dec
ret
or
pushf
add
xor
imul
arpl
lods
divb
outsb
push
inc
jnp
ss
sub
outsb
push
cmp
test
ja
rorb
popf
inc
sahf
inc
sub
jnp
mov
hlt
jg
adc
pushf
dec
sbb
mov
jmp
push
in
mov
popf
arpl
shr
jp
mov
stc
add
xchg
and
imul
jb
xchg
repnz
adc
mov
std
jo
pop
mov
rorl
rcrl
loop
ljmp
daa
or
inc
jge
and
sbb
jg
sarb
cmp
cli
out
mov
enter
enter
xchg
sahf
inc
lcall
cmp
or
shrb
push
movsl
aam
pop
inc
pusha
jg
hlt
xchg
ffree
xlat
in
aaa
stc
sbb
pop
pop
shl
inc
es
stc
mov
int3
ds
mov
cmpl
outsl
mov
jns
cmpsb
push
add
xlat
es
cltd
mov
xor
lea
sub
inc
dec
subb
jmp
push
pop
push
icebp
push
pop
mov
cmp
xlat
fs
stos
inc
aaa
push
mov
pop
nop
les
jbe
sbb
dec
mov
pop
and
pop
sub
fimuls
mov
loope
movsb
push
iret
xchg
dec
dec
repnz
adc
shlb
fisttpll
cmp
decb
sub
and
jb
push
scas
inc
and
or
loop
pop
inc
add
mov
pop
aam
loopne
lods
rcl
mov
int
push
inc
sub
dec
mov
mov
sub
outsl
cmp
pushf
push
and
xchg
rcl
sbb
rclb
scas
ret
sbb
outsb
mov
insb
out
scas
sbb
mov
imul
call
ret
lret
mov
xchg
jbe
mov
mov
adcl
xor
xor
aas
icebp
ret
mov
add
std
adc
lcall
leave
jbe
xor
sbb
sbb
mov
bound
sahf
lea
push
or
push
pop
dec
adc
inc
mov
adcl
rcrb
icebp
push
push
fdivrs
iret
push
add
inc
pop
movsb
lret
pop
add
fdivl
cmp
repz
xor
xor
inc
xor
jge
lret
dec
sbb
inc
mov
or
adc
lods
push
mov
inc
pop
lds
out
in
dec
addr16
dec
and
jnp
mov
in
cltd
xor
loop
dec
add
adc
jnp
pop
cwtl
mov
test
outsb
lcall
ss
cs
dec
push
aaa
testb
lea
xor
push
out
mov
xchg
shrl
addr16
fbstp
stos
ljmp
jbe
test
add
dec
sub
xor
sbb
loop
movsl
test
pop
cmpsb
fcoms
rolb
push
dec
push
hlt
inc
adc
cwtl
leave
pop
adc
scas
test
pusha
pushf
push
call
stc
adc
int
sti
add
popa
dec
cmpsb
push
mov
iret
and
adcb
int3
dec
aad
xchg
sbb
cltd
int
push
mov
push
push
cmc
daa
movsb
aaa
cltd
lods
jle
call
push
stc
fstp
cli
push
fstps
push
call
mov
xchg
sbb
sti
adc
cmpsb
mov
jns
or
sbb
cwtl
dec
pop
mov
xchg
sub
lret
sub
adc
scas
and
sub
sbb
mov
aaa
ja
js
das
adc
fsubrs
xor
stos
repnz
xor
jo
xor
ret
inc
scas
cld
cld
mov
cmp
outsl
push
imul
jne
push
addl
sub
cmpsl
jno
and
mov
pop
xchg
push
sub
iret
mov
fstl
jle
push
imull
inc
inc
jnp
stos
pop
aam
push
mov
pushf
or
jecxz
int
cld
mov
pop
call
fidivrs
or
nop
cmp
out
mov
jno
mov
or
push
test
rolb
xchg
inc
xchg
out
xchg
sahf
clc
lods
mov
fmull
adc
data16
push
or
pop
out
sbb
stos
mov
popf
cltd
xor
jle
cmp
inc
inc
jbe
mov
mov
orl
lret
add
pop
negb
outsl
aad
sub
mov
xor
mov
adc
mov
imul
movsb
xchg
lods
mov
jne
fs
cmpsl
mov
ja
and
xchg
rcll
frstor
mov
testl
cmpsb
cmp
ret
les
loop
movsl
mov
popf
or
ja
add
mov
cmp
icebp
xor
cmpsb
xchg
aas
cpuid
and
mov
adc
ja
pop
or
sahf
jle
push
dec
add
outsl
xchg
push
imul
jmp
mov
clc
int3
insl
mov
inc
jne
inc
xchg
fadd
les
ljmp
stos
push
mov
cmp
dec
jae
loope
xor
scas
mov
in
xor
sbb
int3
mov
jnp
cli
sub
repz
lods
lods
js
inc
add
mov
aam
pop
mov
lods
fdivrl
movsb
mov
dec
cmp
lret
imul
jmp
iret
iret
andl
out
add
pop
mov
lods
imul
int3
in
test
loope
clc
add
xor
cli
sbbl
cmp
mov
aas
lds
les
inc
add
xorl
inc
js
in
ret
dec
xlat
stos
pop
add
test
repnz
xchg
loop
cmpsb
movsb
mov
pop
jecxz
cmpsb
scas
cmp
push
sub
loop
fucomip
adc
xor
flds
rorl
outsl
int
pushf
jnp
dec
add
js
fimuls
cmpl
mov
mov
into
and
adc
sub
test
addr16
jmp
lcall
out
enter
push
int
nop
mov
xchg
cmp
sbb
cmp
and
out
std
jno
or
in
push
mov
inc
rcr
jecxz
icebp
xchg
or
out
push
cld
add
mov
push
dec
lret
push
fmulp
cmpsl
lret
std
sbbb
sub
ror
sub
loop
jno
push
pop
sbb
sbb
icebp
mov
lahf
add
lret
jge
jmp
jne
push
lock
testb
imul
jo
add
push
xchg
xor
inc
scas
pop
cmpb
test
pop
dec
adc
aam
sbb
mov
les
push
mov
or
mov
ss
and
fimull
xchg
add
fisubs
fnstenv
popa
leave
imul
mov
test
inc
mov
jbe
test
mov
xor
inc
xor
call
nop
lock
mov
cmp
test
cmp
dec
xorl
xchg
pop
cmp
dec
mov
sbb
push
ret
cmp
pop
lea
lahf
nop
and
xchg
jge
xchg
jns
out
cmp
xor
repz
jno
insb
jb
les
add
mov
fisubrl
xor
rcll
rorb
jnp
icebp
xchg
dec
jp
and
sbb
addr16
call
icebp
sub
aas
out
daa
testl
ds
aad
xor
jmp
sbb
daa
pop
adcl
inc
out
lcall
mov
mov
sub
push
xchg
aad
stc
dec
lcall
jmp
scas
in
mov
es
pop
test
js
dec
mov
popf
call
bound
fwait
sub
dec
sbb
mov
add
xchg
repz
sar
and
mov
hlt
les
sahf
mov
mov
push
and
adc
rorb
or
mov
mov
rolb
and
repnz
adc
fisttpl
mov
int3
insb
or
sti
fcom
cmc
sbb
mov
push
cmpl
and
out
xor
out
stos
ffreep
shll
pop
sbb
xchg
std
loope
fcmove
mov
push
mov
cmp
fwait
gs
adc
popf
push
fdivl
es
loope
and
cld
xlat
inc
jmp
cmp
xchg
lods
push
rorb
jnp
addr16
call
adc
dec
xchg
les
sti
loop
movsb
mov
adc
sub
repnz
sbbl
xchg
push
lahf
jmp
pop
mov
pop
jge
xchg
push
xor
dec
int
ja
adc
addr16
cmp
repz
addl
jmpw
push
jl
mov
icebp
and
or
jno
add
insb
sub
inc
push
push
add
mov
add
outsl
hlt
testl
jp
dec
jo
cltd
xchg
dec
mov
jp
jmp
jmp
push
inc
jae
inc
dec
jae
nop
and
in
in
add
je
jne
jmp
ds
outsb
push
dec
pusha
pcmpgtd
and
loope
imul
pop
add
mov
aam
jge
push
push
or
hlt
fwait
jb
das
add
sub
inc
popa
pushf
in
insb
test
repz
bound
loopne
and
aam
iret
and
lcall
sbb
jno
add
cmp
xchg
pop
jecxz
inc
or
outsl
mov
mov
les
sbb
xchg
popa
gs
test
push
mov
inc
push
inc
arpl
dec
pop
rorl
and
lods
in
cli
loopne
int3
out
jb
std
leave
cmpsl
pop
mov
int3
push
push
fidivl
lods
decl
pop
movsb
insl
mov
call
pop
gs
jg
xchg
scas
mov
and
push
loop
jns
test
outsl
push
dec
out
mov
pop
cli
fidivrs
ja
repz
cli
mov
or
push
cmp
jbe
adc
mov
arpl
sbb
mov
cmp
push
jecxz
scas
lret
pusha
mov
lret
sbbb
sub
sbb
mov
shrb
cmp
xchg
xor
mov
jbe
pop
sbb
inc
push
push
notb
call
leave
sbb
add
jns
fwait
add
mov
into
faddp
out
and
int
cmc
rcl
fadds
mov
ds
stc
pop
or
dec
fildll
inc
add
testl
adc
out
sub
xchg
push
mov
mov
or
push
push
rcr
push
scas
sub
cwtl
outsb
lret
mov
bound
or
fisttpll
insl
es
sbb
xor
in
adc
cltd
inc
test
adc
mov
sbb
xchg
cmpl
lods
jg
pop
pop
jl
addl
sbb
scas
lods
fisubrs
cmpl
std
test
jmp
sub
mov
jmp
push
repnz
leave
insb
movsl
push
subb
pop
dec
icebp
add
xor
push
xor
and
lods
inc
ja
cmpsl
or
push
test
pop
arpl
jmp
mov
sub
ret
and
cs
sbb
daa
repnz
mov
cmp
sbbb
lods
cld
push
mov
mov
ss
mov
xlat
dec
std
add
adc
lret
icebp
xchg
fs
pop
push
addb
and
mov
cmp
mov
inc
in
jb
push
stos
mov
and
push
fwait
cmpsb
ja
aaa
fidivrs
add
pop
mov
mov
dec
jne
ja
adc
mov
cmpsb
push
aas
mov
pop
cmpsb
sbb
pop
lock
cmp
lods
es
ljmp
jmp
mov
popf
and
inc
inc
cmp
or
jnp
dec
std
js
repnz
aad
add
fwait
xlat
sub
fs
mov
subb
or
iret
inc
inc
ss
gs
cmc
icebp
ficoml
fimuls
sub
lea
leave
pop
pop
sbb
test
dec
add
pop
pop
sahf
mov
int
and
notl
xchg
rclb
mov
xor
mov
pusha
loope
dec
adc
xor
call
ja
push
icebp
pop
mov
jne
sbb
inc
inc
aaa
and
pop
mov
inc
in
pop
popa
lock
std
mov
enter
xor
idivl
clc
mov
ret
jbe
dec
add
into
ljmp
cmp
sbb
cmc
lods
mov
fisubl
shlb
fwait
dec
imul
lods
insb
sbb
inc
sti
jp
jg
clc
xlat
lret
js
ret
mov
and
negl
push
cwtl
sub
outsl
fmull
pushf
sbb
pop
in
mov
pop
clc
mov
ret
shlb
mov
movsb
or
jb
pop
inc
je
addr16
enter
std
arpl
rolb
cwtl
cmpsl
sbb
movsb
test
cltd
mov
push
xchg
rolb
cmp
fs
popf
das
push
add
imul
inc
pop
mov
pop
xchg
ds
out
fistpll
cmpsl
call
sarb
xchg
out
repnz
add
jecxz
cmc
mov
gs
fiadds
dec
lret
jne
or
or
add
movsl
ja
cli
inc
dec
dec
jmp
inc
pop
inc
pop
dec
adc
rcll
mov
rcrb
mov
insl
outsl
xor
push
lods
mov
inc
cmp
fidivrs
in
decb
dec
jne
lock
and
or
cmc
data16
out
dec
scas
push
div
das
out
jmp
lret
in
je
xchg
and
rcll
xor
sbb
pusha
shl
or
jecxz
push
add
jnp
es
scas
cmp
daa
lods
cltd
stos
mov
in
into
mov
pusha
test
cli
adc
fdivrs
xor
xchg
mov
fildll
pop
lret
fs
cwtl
int3
mov
jp
and
loopne
in
es
or
inc
xchg
insb
ffreep
stos
cmc
xor
cmp
stos
hlt
bound
jecxz
or
and
xor
in
icebp
lods
mov
jl
jbe
push
test
les
or
pop
pop
push
and
push
ljmp
or
xchg
lods
dec
xchg
mov
in
out
mov
scas
iret
dec
lret
and
or
int
ja
xchg
xchg
add
stos
dec
mov
cmpsb
adc
cmp
mov
data16
lahf
insb
and
fs
sub
mov
mov
vpmaxub
cs
push
test
cmp
pop
sarb
sub
mov
sub
cwtl
les
add
test
sub
inc
jb
pop
subb
insl
fisubs
in
sahf
xchg
mov
xor
insb
in
jno
or
push
jp
mov
pop
cmp
loop
mov
push
cmpsl
push
lret
lods
sahf
lock
pop
daa
mov
mov
sbb
mov
dec
cmp
sahf
fs
xor
mov
shll
cmp
sbbb
inc
sbb
cld
out
push
test
roll
push
shl
scas
xor
mov
es
fs
stos
add
or
jg
in
ljmp
xchg
jecxz
std
push
cmp
jmp
insl
das
ja
test
push
fst
xor
call
enter
cld
sbbb
bound
mov
loope
inc
mov
imul
jge
bound
insb
cmp
xor
adc
fstps
jp
jo
ds
cmp
ja
pop
cmpsl
inc
cmp
xor
bnd
jo
pop
mov
pusha
or
mov
daa
xor
pop
icebp
iret
push
xor
in
cwtl
xchg
fwait
mov
mov
testl
daa
pop
out
test
enter
inc
movsl
aam
stos
mov
adc
mov
mov
adc
add
lret
outsl
into
pop
sbb
lods
imul
bnd
movsb
and
js
out
inc
jp
cli
popf
das
loope
int
std
jmp
pop
jg
mov
stos
mov
loope
test
jge
stos
into
push
fsubrs
adc
mov
sub
pop
or
sbb
fldl
cmp
sub
dec
insb
mov
lods
inc
xchg
mov
dec
stos
fwait
pop
clc
sbb
sbb
pusha
js
cmp
scas
popa
out
pop
lock
xchg
mov
ss
stos
mov
scas
stos
dec
cmp
push
push
shlb
add
std
xor
sub
lock
xchg
scas
lcall
xor
leave
sub
jg
fdivrl
inc
push
dec
lret
push
jmp
aad
sub
cld
cs
out
scas
rclb
test
mov
dec
aas
rcll
xchg
or
pop
or
xor
out
mov
sbb
adc
mov
jns
pop
sbb
xchg
and
les
lock
and
pop
mov
sub
sub
jmp
dec
cmpb
push
lret
ret
out
aaa
xor
inc
cld
aas
cmpsb
xchg
iret
xchg
leave
fisttpll
je
dec
and
pop
repnz
sbb
imul
jl
xor
movsb
lret
fmul
lret
pop
push
sbb
es
push
arpl
dec
mov
insl
nop
test
mov
in
push
sahf
adc
jg
mov
or
pop
adc
push
and
sbbl
xchg
mov
mov
aad
add
repz
sahf
popf
lahf
cmpsl
adc
call
dec
punpckhwd
mov
testl
pop
adc
xlat
cmpsb
and
imul
jmp
lods
sbb
pop
mov
outsb
ret
mov
loopne
push
scas
adc
lret
adc
mov
insl
push
xor
push
sarb
push
ret
call
mov
fwait
aam
mov
xor
push
nop
hlt
fstpt
shlb
cwtl
divb
pop
std
add
in
push
mov
jecxz
mov
loope
inc
in
ljmp
lret
pop
pop
pop
add
fnsave
mov
adc
xor
das
in
jb
xchg
adc
cli
loop
aad
hlt
xlat
pop
dec
ds
js
insl
aaa
mov
adc
in
xbegin
rolb
inc
sti
jle
out
fwait
sub
push
call
sbb
js
push
test
int
test
mov
addb
add
leave
inc
loope
adc
fs
insb
sub
or
movsb
cmp
lret
push
fucom
scas
shl
stos
inc
xorl
mov
pop
push
pop
arpl
sub
ja
adc
pop
pop
cli
andl
jns
insb
xchg
pop
sub
push
das
out
sub
movsb
in
adc
adcl
loopne
fstpt
mulb
cmp
cmp
sbb
mov
lds
popl
lret
pusha
and
test
mov
filds
cmp
pop
sbb
cli
adc
in
outsb
test
fucom
mov
loopne
out
or
lcall
adc
mov
cmp
shlb
pop
in
stc
sbb
adc
loopne
push
jae
jl
fsubs
sbb
je
mov
jl
ds
fstpt
inc
pop
mov
je
rclb
or
cltd
xlat
scas
add
stc
xor
in
out
fldl
in
and
ss
push
push
sti
test
fwait
mov
orl
adc
push
mov
and
cmp
mov
lret
std
jle
sarl
subb
xchg
into
gs
ja
push
rorl
cmovae
pop
cmpl
add
pusha
mov
mov
ss
inc
sub
or
xchg
ret
sti
loopne
daa
adc
xor
xchg
scas
adc
xor
cmp
fnsave
fdivs
mov
cmp
push
xor
inc
leave
cltd
cmpsb
xchg
arpl
or
push
arpl
outsb
pop
xchg
shll
mov
leave
jne
dec
iret
out
sbb
les
cmp
nop
adc
jmp
aas
cmp
sbb
and
or
fidivrl
and
subb
push
mull
imull
adc
mov
jge
lds
inc
in
cmp
push
icebp
cld
shlb
lea
adc
shll
inc
mov
daa
xchg
push
pop
cmp
mov
dec
pop
jns
jmp
pop
out
add
mov
jg
out
pop
je
jns
dec
arpl
sub
add
inc
jmp
stos
cmc
in
inc
jo
cmp
loopne
push
mov
movsb
jae
out
mov
enter
pop
xor
mov
sub
int3
test
pushl
pop
addr16
std
stos
mov
test
out
jne
mov
sub
insb
movsl
inc
rolb
cmpsb
std
push
pop
mov
nop
mov
lea
roll
jle
lods
movsl
ficoms
lods
in
imul
mov
mov
mov
bound
xlat
add
in
jne
sbb
fldenv
into
push
lea
shll
jae
fs
test
aas
rcrb
jbe
adc
add
jnp
aas
rorl
and
jb
fadds
xchg
insw
dec
test
xlat
inc
jae,pn
jns
xchg
sub
imul
arpl
pop
lcall
mov
xchg
push
shrb
mov
cltd
aam
inc
int
pop
loop
adc
dec
enter
cmp
xor
es
xchg
inc
mov
mov
out
arpl
mov
int
ret
mov
mov
push
push
pop
push
mov
cmp
aaa
ds
std
push
cld
xor
or
jg
test
push
jl
cmp
popf
stos
adc
int3
pop
lock
add
or
mov
sbb
or
iret
jmp
ss
and
pop
in
fsqrt
andl
sti
lock
into
push
hlt
test
mov
cmc
inc
pop
lds
inc
outsb
pop
hlt
call
cmp
movsb
imul
sbb
into
cltd
lahf
cmp
lret
push
push
pop
cmp
add
or
adc
push
jbe
jae
pop
cmpl
les
gs
cmp
inc
int
fdivrs
lret
push
or
pushf
ret
sbb
add
add
aaa
xchg
lret
sub
cmc
push
outsb
jp
add
mov
shll
adc
repnz
cltd
cmp
lock
bound
outsl
and
inc
movsl
sbb
je
lret
cld
out
jge
sbb
das
push
leave
outsb
outsb
xor
arpl
scas
xor
mov
in
fwait
push
fsubrp
adc
lock
cmpsb
out
cwtl
jl
push
xchg
jl
push
es
push
out
jecxz
push
sub
push
lods
adc
mov
test
jmp
sub
push
je
cmpsb
or
addr16
int
jle
lret
add
and
lahf
dec
ja
add
popa
out
sbb
push
and
std
dec
jle
and
and
iret
lods
cmp
enter
push
push
stos
stos
cld
jnp
in
repz
fwait
jne
and
sbb
orb
fwait
scas
scas
push
cmp
mov
mov
jp
cmp
jecxz
cmp
popl
sbb
aaa
xchg
shrl
test
inc
cmc
and
aas
jae
lock
lods
sti
lock
lahf
rcrb
aas
das
leave
mov
ljmp
jp
cmpsl
inc
add
push
pop
out
out
and
mov
sub
in
add
xor
sbb
lcall
dec
mov
dec
leave
cltd
inc
shr
mov
sbb
jb
sbbl
pop
inc
shlb
shlb
mov
movd
or
push
movsb
cmp
mov
fs
xchg
dec
push
mov
pop
sub
out
fnstenv
mov
xlat
ret
pop
gs
xor
ror
mov
loop
inc
xor
lret
mov
sahf
mov
test
xor
mov
inc
mov
bound
dec
and
pusha
push
idivl
inc
jge
pop
jo
push
inc
sbb
popa
rcrb
in
mov
cli
dec
mov
sub
and
cmpsl
sbb
in
fwait
mov
jbe
movsb
lock
jmp
add
test
push
pop
ljmp
cmp
mov
xor
movsl
stos
add
orl
mov
inc
sbb
mov
adc
out
pop
pop
in
enter
push
cmpsb
nop
pop
loopne
arpl
mov
push
jnp
inc
out
xor
shrb
xchg
mov
adc
mov
pop
push
inc
rcl
mov
add
inc
jno
outsl
push
jbe
fwait
or
test
shl
jmp
add
add
push
in
loop
mov
mov
xor
push
out
pushf
pop
stos
push
orl
or
fadd
sbb
cmp
adc
and
cltd
xchg
mov
popa
push
lea
gs
movl
jbe
dec
iret
dec
aas
adcb
out
clc
mov
ficompl
shrl
pushf
xchg
add
into
jno
daa
push
cmpl
pslld
or
div
call
and
mov
mov
cmp
dec
mov
insb
nop
mov
fs
cmc
js
mov
inc
xor
jns
adc
or
mov
and
imul
or
adcb
push
testb
negl
fs
aad
sbb
dec
xor
push
imul
out
gs
decb
fucomi
dec
inc
test
test
push
aas
cwtl
and
mov
testb
outsb
dec
cmp
aam
sahf
int
inc
jle
scas
stos
je
adc
enter
loope
jno
add
lcall
push
push
sbb
cwtl
hlt
mov
jo
pop
xor
push
test
or
cld
dec
pop
xchg
xorl
and
xchg
jnp
movswl
mov
cmc
pushf
lock
xchg
adc
push
adc
bound
jbe
jne
inc
rcl
cmp
push
xchg
jp
loopne
cmp
mov
mov
lds
int
lock
stos
xor
cmp
sub
mov
ja
daa
inc
inc
je
dec
xchg
push
outsl
jp
mov
mov
dec
mov
pop
jbe
jno
stos
and
fimull
jo
aad
mov
sbb
ljmp
dec
clc
mov
iret
mov
lea
xlat
and
mov
push
cmpsb
sub
mov
repnz
out
xor
ret
xchg
das
xchg
cmpsl
addr16
icebp
xor
js
fcoml
mov
fdivl
inc
add
pop
or
inc
fs
xlat
in
lds
rcrl
mov
fimuls
sti
shl
mov
out
push
dec
pop
nop
push
adc
je
or
fadds
push
lock
inc
jmp
jle
mov
stos
adc
js
inc
ja
pop
int
repz
mov
xor
add
dec
adc
jns
push
fisubrl
inc
cld
stos
roll
mov
or
imul
inc
xchg
push
lods
adc
add
sbb
loop
sbb
cmpsb
in
pop
xchg
jae
jbe
sbb
jo
or
push
xor
cmpsl
ljmp
sbb
mov
xor
in
jge
push
cwtl
shlb
adc
hlt
dec
jns
nop
stc
aaa
cwtl
lea
xchg
fists
fs
jo
dec
cmp
or
addr16
mov
test
adc
xchg
std
xchg
sub
mov
int
sbb
cltd
mov
gs
jno
cmp
cmp
out
popf
mov
pop
sub
cmpl
add
leave
cli
xor
sbb
stos
aad
xor
cs
sbb
inc
mov
pop
iret
aad
push
rcrb
cli
lcall
jmp
pop
sbb
insb
pop
jecxz
pop
add
jl
sub
sub
outsb
mov
push
xchg
xchg
enter
add
gs
jmp
test
add
cmp
popf
fiadds
jnp
jbe
inc
mov
dec
stos
sbb
and
and
cmpsb
lods
sbb
and
jns
data16
xlat
repz
stc
pop
jp
stc
sbb
das
dec
wrmsr
sbb
mov
sub
mov
loopne
insb
stc
subl
dec
jbe
cmp
iret
pop
clc
movsl
dec
inc
test
cmpsl
dec
cs
nop
pop
das
sbb
jle
stc
sub
pop
out
sbb
call
xchg
enter
fisubrs
adc
test
xor
lods
gs
aas
sbb
add
ss
addr16
xor
add
cmpsl
jne
imul
inc
fdivrs
bound
add
les
lahf
add
enter
mov
jge
sub
inc
js
pop
sbb
cmova
sbb
fisttps
xor
dec
mov
mov
inc
xchg
sub
push
jg
dec
lock
jl
add
ret
ffreep
lret
mov
jl
and
jecxz
std
xchg
loopne
loop
jae
jge
adc
testl
aaa
dec
add
jns,pt
xchg
rcll
in
xor
or
mov
add
dec
bound
ss
jo
xchg
shrl
aaa
xor
xchg
mov
sbbl
in
mov
cmp
pop
imul
in
icebp
fisubrs
mov
lahf
iret
fidivs
mov
cmpsl
mov
fnstenv
inc
push
jg
call
pop
in
notb
push
pop
add
mov
scas
fs
inc
push
adc
adc
aad
addl
sbb
fwait
xchg
and
inc
mov
cmpsb
sbb
or
call
iret
mov
inc
rorl
inc
mov
cmp
pop
jns
test
sbb
daa
mov
or
lods
lock
and
mov
int3
jbe
adc
push
test
out
jle
pop
enter
mov
daa
shrb
jmp
cmp
xchg
pop
or
jbe
pusha
xor
int
pop
or
or
mov
imul
mov
pop
ja
mov
ret
stos
out
mov
push
repz
inc
mov
jno
adc
mov
aad
mov
jl
pop
jmp
aaa
icebp
sub
cmc
mov
mull
popa
aas
jo
icebp
lret
hlt
sahf
or
and
lret
pop
xchg
push
mov
add
repnz
xlat
mov
call
adc
cmp
cmp
dec
push
mov
ds
xchg
jmp
mov
mov
dec
cs
sbb
cmc
push
stos
dec
sbb
xchg
fwait
cltd
fwait
mov
sub
mov
xor
in
jo
rolb
fbld
xor
fisttpl
pop
lods
mov
pop
xchg
out
inc
adc
movsl
or
pop
mov
dec
mov
sub
mov
popa
dec
push
loope
jne
lret
scas
ret
dec
lds
in
sub
adc
mov
dec
call
lock
cmp
pop
popa
xlat
xchg
pop
push
int
in
sbb
aaa
sub
stos
cmc
fdiv
loope
insl
sbb
insl
idivl
icebp
xchg
pusha
pop
inc
mov
out
jnp
aad
aad
xchg
pop
mov
popf
jae
pushf
cmp
or
bound
or
mov
push
inc
sbb
lea
cmp
pop
call
push
push
xchg
sub
xor
nop
xor
jo
dec
pop
adc
dec
fs
sahf
inc
sub
mov
mov
insb
mov
adc
ror
xchg
mov
push
mov
push
sub
stos
xchg
or
dec
lret
mov
add
pushf
insb
cmpsb
mov
xchg
jge
out
push
in
push
nop
pop
stos
cmp
dec
iret
or
test
or
sti
dec
fwait
push
jbe
dec
and
cli
mov
mov
inc
dec
mov
rcr
xchg
xchg
mov
cld
or
in
push
aaa
mov
ficoms
mov
in
xor
in
aaa
mov
jns
xchg
mov
push
sbb
andl
mov
or
dec
stc
fcmovnbe
push
enter
and
add
pop
loope
fsubrl
sbb
fmull
mov
mov
cwtl
and
mov
mov
pop
or
stc
push
sbb
jne
add
movsl
mov
sbb
adcb
add
lret
xor
adc
mov
sub
ret
xor
and
push
sub
enter
mov
dec
jge
mov
fnsave
or
fdivs
lods
int3
pop
sbb
and
push
movsb
inc
test
fprem
mov
rorb
inc
fadds
and
popf
push
leave
nop
pop
test
sti
lcall
cmpsl
and
idivb
and
daa
push
js
es
cmpsl
lods
repnz
jns
in
mov
jmp
xor
cmp
xchg
pushf
ljmp
dec
jmp
adc
or
xchg
sbb
cmpsb
adc
jnp
mov
xchg
fistpl
in
jae
xlat
je
pop
sbb
in
fstl
dec
cltd
adc
inc
pop
bound
pop
adc
lods
xchg
outsl
sbb
test
and
icebp
ret
mov
mov
inc
jg
pop
pop
push
test
cmp
dec
rclb
fstps
out
mov
shrl
cmp
movb
in
lea
pushf
clc
ret
mov
mov
mov
jno
stos
push
and
sbb
jp
pop
loope
icebp
imul
outsb
cmp
shr
mov
push
sahf
cld
or
add
ret
inc
jo
insb
push
and
mov
mov
out
jae
jmp
std
sarl
add
das
andb
xor
lret
cli
pop
stos
mov
decl
xor
mov
jb
clc
arpl
or
pop
loopne
lods
push
nop
add
jno
dec
adc
out
out
sbbl
scas
daa
dec
push
fwait
jae
bound
fistpl
xor
js
jp
cli
in
movsl
je
mov
mov
mov
notl
xlat
add
sahf
insb
popa
xor
and
xchg
mov
data16
xchg
pop
jbe
mull
mov
stos
jbe
mov
in
mov
xlat
cmp
dec
imul
adc
scas
jo,pt
daa
dec
adc
cmpsb
aaa
stc
jg
loop
shlb
push
push
jne
mov
fldcw
add
lods
mov
push
jge
cmp
pop
dec
in
add
push
add
aam
sub
jbe
cmpsb
xchg
jp
arpl
nop
mov
inc
lock
or
adc
arpl
pop
outsb
inc
xor
cmp
fdivr
frstor
int3
cmpsl
mov
jecxz
adc
out
pop
cmp
ja
jecxz
repz
inc
out
sub
dec
mov
and
hlt
inc
loopne
clc
push
dec
js
repz
xorb
sub
scas
out
xchg
adc
and
lret
les
sbb
cmpl
add
push
adc
test
pushf
lret
add
xchg
ds
ret
xchg
pop
push
lahf
push
pushf
mov
cmovb
nop
mov
xchg
push
test
pop
inc
cmp
mov
xchg
adc
dec
or
ret
push
xchg
mov
push
dec
int3
or
inc
int3
mov
jl
sbb
in
mov
dec
pushf
sbb
xchg
mov
das
lods
int
push
xchg
gs
adc
loopne
xchg
into
mov
push
imul
adc
jbe
adc
dec
mov
mov
loope
outsb
jb
stos
adc
fsubr
inc
sbb
mov
daa
bound
push
sarb
xlat
ss
or
in
pop
popa
add
into
or
pop
and
mov
inc
shll
pop
repnz
or
ljmp
out
cltd
repnz
leave
mov
xchg
add
jecxz
jmp
ja
lcall
cli
movsl
rorl
cwtl
adc
adc
mov
outsb
in
loop
adc
dec
ss
mov
xchg
fisubrs
mov
aam
cs
adc
cmpb
icebp
fildl
movsl
jg
sub
sbb
psadbw
shlb
mov
push
mov
sahf
subb
add
lods
sbb
xchg
jbe
dec
fs
pop
es
pop
push
sbbb
inc
lret
mul
shl
and
in
pop
popf
xchg
std
mov
xchg
adc
sub
outsl
adc
out
xchg
mov
inc
adcb
arpl
shlb
lods
cmp
push
push
shlb
rorl
xor
out
xchg
loop
push
daa
hlt
shll
into
into
or
in
sbb
lcall
stos
ret
or
loop
push
lock
or
lds
pop
jmp
lock
enter
movsl
pop
repnz
ucomiss
movzbl
add
add
shl
mov
rclb
lret
cld
adc
imul
insl
inc
sub
cmp
xor
orl
cmp
mov
jo
fmull
mov
adcl
lds
nop
lods
or
je
bound
xchg
or
push
inc
dec
xchg
ret
ljmp
mov
fcoml
gs
xchg
push
adc
sub
jp
addl
cmp
inc
mov
mov
push
pop
xor
outsb
sbb
enter
xchg
xchg
je
and
push
xchg
dec
pop
repz
fildll
xchg
aam
hlt
ret
hlt
jb
ja
mov
imul
dec
sbb
notb
pushf
and
adc
jmp
pop
daa
fisubs
lea
fldt
imulb
push
mov
xchg
repnz
aam
adc
add
fwait
mov
fcmovbe
cs
imul
jne
sbb
int
sbb
pop
les
jecxz
cs
lcall
pop
lret
jp
dec
out
add
icebp
add
ds
out
dec
pop
out
mov
sahf
jb
inc
sbb
cmp
xchg
enter
jo
shll
je
jno
push
rorb
mov
or
jne
pop
push
daa
fs
aad
aad
push
stos
test
mov
lods
xlat
arpl
cmp
mov
and
push
hlt
ljmp
out
jp
or
lock
pop
loopnew
shrl
xchg
lods
je
into
test
add
pop
sahf
sub
jl
flds
pop
bound
into
cmp
pop
dec
rol
aam
data16
inc
mov
add
popa
jmp
mov
jb
lds
adc
sub
int3
lds
out
jne
push
jb
xor
lods
sub
sbb
add
xchg
pop
adc
pusha
lods
xlat
xchg
mov
jecxz
pop
mov
add
stc
mov
and
and
iret
ljmp
mov
int3
sub
frstor
add
out
cltd
aad
xor
mov
aas
xor
cltd
mov
lods
leave
add
inc
adc
push
jne
testl
dec
inc
stos
dec
sete
in
mov
pusha
sbb
inc
movsl
cwtl
cmc
lret
or
mov
mov
inc
xor
push
mov
in
jmp
lods
xchg
mov
lods
adcl
cmpsb
int
or
mov
jno
cwtl
inc
dec
mov
scas
pop
sub
hlt
fidivl
mov
push
out
mulb
mov
nop
dec
pop
mov
ret
into
daa
xor
dec
pop
testb
pop
push
dec
mov
xor
jb
sub
dec
aas
mov
leave
cli
cmp
movd
and
pop
sbb
cmpsl
andb
dec
stos
add
sbb
mov
xchg
cltd
mov
xchg
mov
pop
fidivrs
cmc
xchg
out
lcall
xor
dec
pop
lret
push
ret
into
cmpsb
iret
iret
fsubrl
cmpsl
cwtl
mov
push
enter
int
inc
js
push
shlb
lret
popa
inc
or
dec
jp
and
in
fdivrs
adc
stos
add
push
cmc
xor
aas
xor
les
int
mov
dec
in
fistpll
bound
std
pop
or
ljmp
sbb
stc
nop
or
inc
addb
mov
push
jnp
movsl
lret
and
mov
push
out
cwtl
gs
sbb
sbb
or
sub
jecxz
repz
jb
push
lock
pusha
fs
test
dec
inc
sahf
aad
dec
mov
push
pop
inc
test
dec
push
js
sbb
push
xor
in
int3
in
js
push
jne
xchg
sbb
mov
pop
fadd
std
imul
out
pop
and
ljmp
mov
sti
mov
stc
and
xor
mov
enter
ds
mov
lds
push
repnz
out
out
pop
mov
fnsave
jns
adc
add
mov
xlat
push
shl
dec
jecxz
in
mov
jle
cld
cmp
out
xor
ret
xlat
jne
ss
xorps
mov
and
dec
xchg
push
jp
jg
xchg
push
push
cld
outsb
pminub
dec
sub
mov
pop
jbe
jb
xor
mov
xchg
hlt
loopne
and
pop
ss
mov
xor
js
dec
and
pushf
sahf
pop
in
or
cmp
push
xchg
bound
fsubrp
xchg
outsb
push
call
xor
push
sub
clc
adc
xor
or
and
push
or
inc
sbb
or
into
adc
pop
test
push
xor
cmp
outsl
jae
xchg
add
inc
stos
mov
inc
out
push
adc
inc
sarl
scas
dec
les
lea
mov
fildl
push
add
cmp
push
dec
xchg
shl
jo
xor
ret
addb
cmp
jo
aaa
aas
sub
push
push
lahf
pop
sbb
cmp
pop
push
lcall
dec
movsl
xchg
adc
pop
negb
push
push
stos
sub
int3
mov
pop
cmp
ja
idiv
mov
clc
daa
pop
in
xor
lcall
rclb
cmc
clc
adc
pushl
js
cmp
push
inc
push
iret
test
and
shll
js
ds
shlb
and
sbb
scas
in
jbe
xor
test
xchg
add
or
jecxz
dec
stc
dec
sbb
sub
push
ss
jo
pusha
test
adc
jo
rcll
inc
or
and
cmp
insb
pop
lods
fimull
xchg
add
stos
data16
std
jnp
dec
aas
dec
xchg
cld
out
nop
jge
add
push
jo
cmp
sub
xchg
popa
fbld
rep
pop
lahf
dec
jne
scas
in
pop
and
lcall
lds
mov
sbb
sub
pop
xor
cmp
cmp
nop
xchg
int
mov
cmpsb
mov
mov
addr16
dec
add
or
out
std
std
scas
and
xchg
mulb
js
fisttpll
popl
cmp
aam
pop
jg
ret
cwtl
test
test
xor
adc
lock
mov
shll
jmp
mov
icebp
in
aad
mov
jb
out
xorb
orl
lds
mov
out
lods
inc
xor
sbb
xlat
fwait
fwait
push
add
divl
movsl
loopne
push
xchg
dec
decl
hlt
movsl
les
popf
mov
ret
out
pop
scas
cltd
clc
fwait
mov
test
pusha
inc
loope
xor
jbe
mov
xlat
add
mov
fucom
xchg
or
popa
leave
mov
cmpsl
cmp
jno
lods
cmp
lcall
adc
mov
sub
or
sarl
and
or
fs
dec
dec
or
jecxz
rol
lahf
xor
fstpt
popf
movsl
pop
scas
lcall
and
mov
mov
dec
fadds
std
mov
jl
pop
add
sbb
add
fnsave
ffree
test
jno
fwait
cmp
repnz
inc
push
push
shll
mov
mov
push
sbb
iret
les
orl
loopne
lods
and
xchg
scas
shlb
gs
ja
shrb
mov
cmp
clc
mov
shlb
stos
push
xchg
push
sbb
push
and
sbb
sahf
add
scas
pop
aam
test
xor
push
loopne
mov
idivl
lahf
daa
push
inc
lahf
mov
sub
mov
or
ret
jp
cmp
fisubl
dec
cltd
mov
jp
outsl
mov
pop
call
adcl
int
pushf
xor
dec
testl
xchg
mov
push
movsb
jg
testl
cmp
inc
dec
sub
fstpl
and
jbe
mov
push
or
dec
sub
daa
stos
pop
mov
call
xor
pop
cwtl
push
shl
cltd
imul
push
ret
lcall
lods
dec
icebp
imul
repnz
or
adc
and
in
pop
push
cltd
inc
add
sub
pop
cmovo
push
hlt
jl
dec
jecxz
in
addr16
jae
jp
fcmovnu
std
lods
jne
push
and
xabort
movsb
jge
lret
xor
mov
insl
xor
mov
nop
pop
es
mov
adc
outsl
mov
lds
aaa
les
cmp
dec
and
loopne
jno
dec
jo
out
and
mov
mov
mov
adc
mov
xchg
mov
insl
loop
add
lds
push
rcll
and
cmp
faddl
fnsave
xor
adc
lret
dec
jp
jnp
leave
daa
mov
fdiv
push
push
sahf
jle
jns
dec
xor
pop
add
rcll
es
pop
cmp
xchg
aas
mov
repz
or
in
or
dec
enter
imul
int3
pusha
dec
or
or
movsb
divl
call
fwait
dec
cmp
testl
test
sbb
mov
out
dec
jmp
shrl
int
mov
in
xchg
fs
push
xlat
inc
cmp
or
repnz
mov
add
inc
test
cwtl
add
adc
xchg
push
popa
pop
pushf
push
call
xchg
sti
mov
mov
push
ret
and
cld
cmc
into
ds
dec
call
incl
and
mov
insb
mov
ljmp
inc
ret
sbb
dec
sbb
ror
sub
repnz
inc
jmp
mov
pop
rcl
xor
jno
test
inc
xchg
addr16
sub
push
inc
inc
mov
and
imul
insb
and
mov
imul
pop
push
jg
mov
sub
push
js
out
out
mov
push
mov
mov
and
sub
leave
aaa
add
dec
xlat
push
out
hlt
xchg
lock
loopne
mov
rorl
dec
or
rclb
arpl
sbb
jno
push
dec
insl
add
or
into
leave
inc
jg
cld
icebp
aad
cmp
and
sbb
dec
cmp
addr16
adc
fcmovnb
enter
and
push
mull
add
mov
mov
and
rol
sahf
inc
xchg
sub
daa
push
mov
mov
in
mov
loope
adc
xchg
pop
lea
fsubrs
sub
jno
xlat
mov
shl
mov
imull
jp
mov
inc
cltd
or
ljmp
inc
mov
pop
or
or
or
lahf
add
testb
or
flds
pop
jnp
pop
outsl
icebp
mov
dec
insb
pop
jno
data16
push
mov
out
xor
sub
sub
mov
icebp
jmp
lods
xorb
testb
call
mov
imul
pop
outsb
sub
loopne
inc
sub
orb
scas
xor
bound
jnp
mov
repnz
fwait
cs
arpl
push
pusha
mov
inc
sahf
pop
je
adcb
leave
cli
xchg
or
sub
dec
jmp
sbb
add
movsl
stos
jmp
sub
cmp
cmc
dec
mov
test
sub
outsl
push
adc
pop
scas
rcrl
mov
sub
pusha
shll
or
jo
andl
mov
insb
aam
mov
xchg
xchg
mov
pop
decb
jmp
sub
xchg
hlt
iret
jmp
pop
test
enter
loope
xchg
mov
push
in
loopne
decb
stos
jge
adcb
adc
push
cwtl
push
stos
mov
icebp
mov
jp
mov
adc
or
push
es
loop
insl
movups
stos
push
cmc
movsl
loop
out
je
fistpl
sbb
shrl
or
data16
dec
xor
cmp
xor
je
pop
gs
and
push
xor
out
mov
fcom
or
scas
popa
xchg
add
and
add
mov
jl
insb
fbstp
push
fists
jbe
out
inc
and
cmp
in
ret
adc
sbb
mov
ret
sub
fldcw
and
or
jg
pop
sub
pusha
sbb
cli
jo
aaa
cs
mov
or
loopne
inc
es
push
arpl
mov
xlat
inc
mov
movl
cmp
fiaddl
xor
lret
int
xor
stos
pop
lods
push
mov
icebp
dec
jl
and
mov
push
addl
xlat
jmp
insl
cmpsl
lret
lods
scas
push
jle
sub
xchg
scas
pushf
bnd
aad
popf
jge
jbe
sbb
mov
ret
test
addr16
cltd
test
mov
cmp
jns
add
int
mov
fnsave
aaa
fidivrl
jle
mov
movsb
sub
fists
repnz
jmp
daa
jg
or
sub
outsb
mov
mov
bound
sub
sub
pusha
or
fistps
test
cmc
pop
lds
je
mov
pop
test
jmp
dec
sub
cltd
clc
or
inc
shll
xor
mov
jnp
decb
mov
xor
fs
dec
xor
mov
adc
jp
stc
out
mov
popa
lcall
nop
mov
das
les
test
jne
xor
mov
inc
xor
adc
lock
or
int3
sub
cwtl
iret
sti
xchg
add
mov
fwait
ja
cli
xchg
cwtl
xchg
cltd
fwait
sub
jb
inc
mov
jae
jmp
mov
int
insl
jo
jmp
lock
cmp
push
insb
xor
outsl
lcall
mov
lea
inc
mov
mov
pop
sarb
shll
add
orb
mov
into
lcall
sbb
cmp
sbb
mov
jmp
dec
dec
mov
in
and
xor
add
push
sbb
inc
xor
jno
jl
xor
xchg
pop
add
andl
fsts
movsl
fisttpll
dec
xor
sub
or
aaa
fidivs
inc
cmp
repz
push
es
into
pop
mov
adc
push
xor
sub
cmpsb
fildl
lds
into
sub
clc
push
jno
jp
nop
xchg
fcoml
dec
or
jg
fwait
rorb
es
stos
pop
stc
dec
mov
fwait
inc
andb
push
cmpb
mov
call
push
adc
push
je
cmpl
data16
sbbl
outsb
imul
movsl
jb
in
fwait
mov
xor
lcall
orl
fucomip
test
insb
aaa
lahf
push
call
fidivrs
daa
xor
aas
out
movsl
and
repz
dec
xlat
mov
xchg
push
fbld
mov
mov
cli
mov
les
cmp
out
xrelease
xor
mov
lds
iret
cmpb
gs
sysenter
in
adc
pop
aas
or
jbe
xlat
out
and
ds
lock
mov
jle
xchg
push
lcall
sarb
out
mov
mov
inc
adc
jge
inc
mov
cmpsl
jae
cmp
push
add
mov
mov
fyl2x
shlb
push
xchg
xor
imul
sbb
jnp
movsb
xor
mov
imul
inc
repnz
stc
jg
movsl
sbb
pushf
in
adc
js
in
stc
addr16
iret
out
mov
inc
cltd
mov
nop
xor
jno
rcrb
and
mov
inc
jmp
jg
pop
inc
scas
out
add
jmp
fimuls
sarl
push
iret
mov
xchg
pop
and
adc
lret
mov
das
repnz
stc
and
sbb
xor
js
adc
pop
pushf
stc
mov
xor
or
xor
jecxz
int3
mov
mov
mov
fwait
loop
fdivl
out
push
xchg
repnz
push
aam
pop
mov
dec
cmp
sbb
dec
dec
xor
dec
and
mov
xchg
jecxz
imul
fs
in
cwtl
push
xchg
andb
mov
cmp
rcrl
icebp
push
ja
dec
mov
dec
mov
imul
fildll
sbb
cmp
ja
push
add
adc
imul
mov
jecxz
dec
das
stos
sahf
dec
daa
add
adc
mov
mov
lret
iret
dec
popa
jnp
jns
out
lds
xchg
fdivs
lock
dec
or
push
xor
and
pop
hlt
pop
pusha
xor
mov
mov
jae
push
or
push
mov
xchg
add
lods
mov
xchg
insb
pop
jae
rorl
pop
sbb
enter
push
out
xchg
mov
cmc
gs
add
jle
out
lock
add
pop
arpl
dec
push
push
out
into
jae
rcrl
mov
mov
hlt
push
cmpsb
std
fwait
mov
or
lods
cld
dec
lock
mov
and
movsb
aam
int
cmpsl
sar
lds
scas
ja
xchg
repnz
adc
or
dec
xchg
popf
loopne
dec
xorb
pusha
push
cmpsl
push
sub
push
int
sub
aad
lods
adc
adcl
add
xor
test
add
mov
icebp
jns
in
or
pop
adc
pop
mov
das
sahf
mov
stos
xchg
imulb
in
or
jns
push
pusha
int
mov
pop
mov
in
sub
xor
and
lock
jl
sub
ds
into
mov
aaa
cmp
and
sahf
popf
sti
xlat
repz
push
mov
or
sti
stc
push
rorb
out
adc
xchg
sbb
je
adc
cmp
mov
and
xchg
testb
popa
stc
mov
sub
mov
adc
shlb
mov
mov
popa
mov
xchg
push
ret
call
nop
clc
pop
push
xor
sub
dec
sbb
cmp
popa
aam
push
icebp
shlb
adc
frstor
adc
lcall
gs
testl
out
insl
or
ljmp
sbbb
out
dec
xor
addr16
pop
iret
shll
xchg
mov
xlat
popf
aam
shrl
push
mov
ret
hlt
add
cmpsl
mov
jnp
ds
mov
fdivs
cmc
adcb
sahf
sbbl
pop
sub
rolb
pop
test
jecxz
das
orl
scas
pusha
cwtl
dec
inc
sub
arpl
jp
outsb
in
cmpb
push
xor
icebp
jne
or
or
gs
and
or
inc
inc
into
clc
ficomps
xor
sahf
loopne
sbb
pop
inc
cmp
add
iret
mov
repnz
mov
mov
out
sub
in
mov
inc
test
xchg
xchg
xchg
xchg
jle
std
insl
scas
sbb
sub
aam
subl
and
lret
mov
data16
push
inc
std
ss
or
sub
xchg
dec
outsb
mov
imul
inc
cltd
inc
mov
addb
rolb
cmp
hlt
or
jle
data16
dec
aam
cmpb
and
jecxz
fdiv
pop
mov
pop
or
pop
jb
negl
jg
scas
jle
test
sarl
cmpsl
pop
aaa
ja,pn
repz
insb
in
sbb
jg
in
xchg
es
jae
push
lret
sub
push
and
adc
add
inc
sbb
pop
es
pminsw
out
push
mov
sub
sub
xor
rcrb
scas
mov
dec
sbb
push
xor
mov
pop
loope
xor
mov
pop
fldl
out
out
xor
or
xchg
xchg
adc
lock
iret
push
sbb
push
fwait
loopne
add
inc
iret
fdivrp
dec
cmp
clc
adc
andb
clc
iret
aas
fldcw
or
movsl
jae
decb
enter
mov
jle
xor
pop
cmp
push
ret
add
xor
adc
in
sub
and
sarb
lcall
mov
popf
push
ds
sbb
lcall
jl
mov
jae
gs
mov
iret
add
mov
mov
jno
push
mov
pop
insb
xor
movsl
lock
pop
push
outsl
in
add
das
mov
test
test
and
outsl
fdivrp
call
mov
inc
or
cmp
movsb
mov
sbb
loopne
pop
xchg
loopne
fidivrs
pop
not
pop
ficomps
popa
test
adc
out
adc
out
inc
pop
push
push
lret
adc
js
inc
xchg
inc
lea
jae
jo
scas
rcll
xchg
inc
add
call
mov
imul
scas
mov
js
outsl
push
loopne
dec
andl
hlt
add
shlb
mov
or
push
aas
xor
pop
push
xchg
inc
push
ftst
clc
stos
fs
cli
shll
faddl
and
sti
repz
pop
dec
xchg
pop
add
xchg
scas
int3
leave
mov
or
sti
inc
insl
fcomps
cmpsb
mov
inc
fnstenv
mull
and
jno
lcall
sub
and
and
popa
mov
in
movsb
pop
lods
cmpsl
xlat
inc
sbb
fucomp
lds
sbb
mov
jbe
cwtl
jnp
rorb
xchg
ret
jne
sbb
or
jo
cmpsb
icebp
pop
sub
inc
xchg
push
movsl
or
cmp
add
push
mov
sbb
push
pop
xchg
lds
adcl
das
push
xor
push
dec
gs
xchg
pusha
sbb
jp
inc
mov
into
add
imul
fstpt
dec
xchg
daa
cmpsb
popf
xchg
repnz
sbb
iret
or
push
pusha
imul
cmc
mov
test
xor
loop
adcb
sbb
js
push
adcb
iret
jp
sbb
mov
jge
sub
ds
out
cmc
nop
add
mov
mov
out
cld
les
ret
mov
sub
aad
mov
pop
mov
imul
jb
in
adc
jecxz
fdivl
inc
jnp
mov
inc
mov
inc
mov
lds
mov
hlt
pop
or
lahf
jge
sbb
dec
aad
mov
mov
or
cmc
sbb
inc
fucomip
pop
inc
rcl
data16
mov
xchg
add
xlat
dec
clc
sbb
sbb
xor
inc
mov
aas
xor
pop
js
pop
inc
jns
mov
push
out
or
jae
fidivrl
sbb
push
lods
jnp
or
add
stos
pop
mov
repz
mov
mov
loop
inc
lock
in
lock
pushf
popa
outsl
andl
es
inc
arpl
pop
dec
out
cmc
gs
push
xchg
les
xchg
xchg
sbb
push
push
lcall
cmp
add
popf
mov
insb
stc
add
adc
sbb
mov
fstps
movsb
stos
pushf
sub
xchg
subl
ds
inc
fs
adc
mov
popf
imul
add
fdivrl
in
shrl
test
push
mov
mov
adc
sbb
push
adc
xchg
push
loopne
xor
xor
cmp
cltd
rorl
in
pop
inc
movsl
xchg
lret
data16
cmp
xor
leave
mov
push
ljmp
std
inc
sbb
mov
ficompl
inc
jnp
or
imulb
xor
std
jl
gs
roll
inc
inc
test
inc
sbb
mov
sbb
pop
sbb
xor
xor
add
adc
xchg
jmp
add
xchg
adc
cmp
pop
sbb
test
pushf
jae
xchg
imul
jb
popa
and
or
call
xor
jb
enter
into
clc
jge
pop
xor
and
pop
mov
leave
jecxz
xchg
push
pushf
inc
jle
sub
mov
push
add
add
mov
pop
mov
ficomps
test
lods
bound
call
pop
xchg
frstor
jb
cmp
mov
jg
mov
xor
add
xchg
mov
fidivl
xbegin
cltd
dec
push
loop
mov
test
lods
fidivs
mov
dec
xchg
sbb
xchg
addr16
pop
mov
sbb
mov
dec
cmp
pop
push
inc
dec
inc
xchg
cld
or
and
cmpsb
lcall
cmpb
bnd
push
js
sub
xor
mov
out
push
xor
mov
ret
dec
int
lods
aas
jge
inc
jo
mov
bnd
fisubrs
adc
sarb
fsubl
into
das
pop
fwait
xor
lods
pop
ja
repz
lods
ljmp
loop
addl
pop
add
sahf
bound
orb
fisttpll
out
lods
push
inc
in
ja
or
imul
dec
movsb
cmpl
popa
add
ret
jp
lods
inc
sub
repnz
ret
andl
adc
xchg
stos
enter
ss
in
push
or
ljmp
mov
or
loope
or
add
push
pushf
ret
ja
push
mov
shrl
out
jmp
cmp
nop
push
iret
push
add
sbb
pop
fcompl
nop
int3
add
std
fucomi
cs
dec
enter
in
imul
ds
fisubrs
jge
sbb
mov
jle
stos
xor
dec
push
das
push
and
mov
hlt
cmp
mov
push
popa
cmp
sub
out
push
adc
cmc
insl
sbb
mov
pop
xor
stc
out
mov
mov
movsl
sbb
cld
hlt
or
lock
xchg
jbe
movsb
mov
lods
push
subb
adc
adc
iret
inc
push
add
lods
or
fmuls
int
lods
adc
xchg
aam
xor
jns
adc
sub
mov
push
hlt
cmp
stos
sub
icebp
or
xor
mov
lret
shrb
mov
sti
lods
and
cmp
dec
icebp
repnz
lcall
or
dec
mov
pusha
in
movsb
pop
dec
and
and
lea
inc
shrb
shlb
or
add
test
dec
jo
call
push
xor
add
pop
mov
sahf
cmc
insl
movsl
xchg
inc
xor
lds
cmpsb
xor
repz
and
mov
pushf
inc
jge
push
cmpsb
mov
xchg
and
sti
adc
stc
pop
jp
push
aaa
movsl
dec
dec
push
pop
push
std
outsb
int3
sahf
aam
cld
roll
addr16
adc
into
cmp
push
std
outsb
cld
cmp
mov
aas
out
jp
sbb
mov
xor
imul
loop
dec
lea
aaa
hlt
add
push
xchg
gs
mov
imul
iret
sbb
insb
xchg
ja
sub
cltd
test
mov
xor
sbb
mov
or
repnz
mov
and
pusha
and
andl
lret
fstpt
pop
sbbl
bound
pop
bound
xor
and
pop
out
bound
push
jbe
jge
mov
xor
mov
jo
insl
push
jbe
and
movl
and
sarb
ret
mov
fdivrs
xor
inc
jbe
jne
inc
jg
call
dec
push
aas
lahf
rcrl
jne
mov
imul
hlt
in
jmp
sbb
mov
sbb
ds
push
or
lahf
bound
xor
jp
ss
mov
dec
rol
test
scas
dec
cwtl
add
xchg
outsb
clc
movsl
test
xor
jl
mull
sub
push
sub
dec
cs
sbb
loop
jo
sub
into
add
mov
cmpsb
mov
pop
mov
dec
aas
cmpsl
dec
jl
add
arpl
jl
out
adc
pop
mov
rcll
push
xchg
inc
and
cmpsl
dec
adc
mov
jle
xor
jge
sbb
inc
insb
and
pop
sbb
insb
insb
ja
dec
jne
xchg
dec
pop
or
pop
imulb
add
int3
xor
jns
pextrw
mov
loopne
mov
or
or
sahf
sub
push
adc
test
mov
pop
lods
mov
mov
fistps
stos
stos
popf
pop
sbb
xchg
ret
dec
out
lcall
mov
pop
shrl
sub
push
jl
push
sbb
mov
or
push
sub
lret
mov
js
or
test
aam
dec
fidivrl
inc
sub
push
es
adc
arpl
jmp
jecxz
je
push
cld
mov
inc
cs
das
add
loopne
dec
clc
jb
imul
movsl
clc
stos
rolb
sti
test
xor
xchg
fldt
fwait
neg
arpl
dec
push
fmul
jbe
push
sub
divl
cmpsb
fisttpl
add
mov
push
sub
pop
inc
mov
inc
mov
lret
mov
adc
or
lock
lods
pop
hlt
sub
sub
pop
sub
ds
in
js
sub
in
or
rclb
sub
aaa
dec
fmull
icebp
out
mov
cmp
push
jg
negl
leave
mov
adc
dec
sbb
les
pop
push
mov
fisttpll
dec
mov
fcomps
aas
xor
cmp
pusha
mov
test
dec
dec
mov
pop
mov
jl
out
outsb
sub
lods
add
mov
mov
fdivl
mov
sub
movl
popf
push
pop
dec
adc
xor
in
mov
sarb
int3
sbb
scas
sub
sarb
sub
and
cmp
mov
pop
and
jno
pop
push
cli
aaa
dec
and
cmpsl
je
loop
stc
cmp
lods
mov
out
repnz
xor
push
testb
icebp
js
lahf
fiaddl
mov
adc
das
fstpt
xor
cmp
aad
jae
lahf
xchg
inc
sbb
js
mov
repnz
lds
pop
mov
add
push
and
roll
std
roll
xor
mov
jecxz
mov
fs
mov
sub
sti
push
popa
movb
insb
cmp
insl
jno
mov
mov
pop
jae
xchg
lods
pop
shl
xor
sbb
inc
loop
fstl
imul
jb
loopne
movsb
ds
sar
xchg
fcoms
sbb
xor
add
mov
jmp
push
std
sub
xlat
jecxz
cmpsb
jecxz
mov
cmp
mov
or
or
adc
aaa
dec
aaa
cmp
ljmp
xor
into
and
rorb
into
cmp
cmc
mov
mov
outsl
push
lods
pop
jno
stos
sub
pop
fwait
call
fsubs
pop
out
fsts
flds
jbe
xchg
dec
repnz
and
jnp
fstpl
js
mov
stc
adc
clc
enter
add
push
cs
cltd
jecxz
fwait
dec
inc
ljmp
adc
in
cmp
inc
jbe
push
bound
in
xchg
cld
add
jno
das
pop
pop
push
int3
divb
add
or
xchg
bound
cmp
dec
scas
pushw
mov
lahf
mov
xchg
fdiv
fwait
nop
call
mov
mov
pop
andl
xchg
mov
lods
jl
shl
test
test
out
es
xchg
xchg
leave
dec
stc
push
fmul
shl
lds
mov
lret
dec
stos
aas
xchg
adc
and
adc
fadds
add
sub
jbe
cmpl
sub
cmp
xor
clc
xchg
sbb
add
cmp
ret
mov
jns
lock
pushf
dec
idivl
mov
ljmp
xchg
dec
and
shl
sub
ljmp
sbb
xor
mov
cmc
sub
jae
or
sub
add
fs
xchg
jno
mov
and
dec
js
dec
stos
rorb
jg
inc
push
xchg
aaa
idivb
fiadds
scas
addr16
adc
call
lods
jecxz
ss
out
fildll
or
jbe
jecxz
jle
mov
movsl
repz
add
sti
pusha
sbb
in
push
push
pushf
xor
out
mov
ret
test
test
add
imul
fwait
mov
test
cli
jno
subl
pop
lea
divps
cmc
lret
jae
je
pop
imul
loop
fsubrl
add
pop
movb
hlt
push
leave
aad
sahf
mov
js
cmp
adc
dec
mov
lret
outsl
aam
in
cmp
pop
in
cs
push
in
mov
cmp
inc
lea
cmp
sbb
out
insl
xchg
faddl
mov
sub
nop
int
into
inc
pop
adc
dec
mov
cmc
add
push
lahf
test
inc
decb
jnp
test
or
dec
daa
xchg
dec
pop
std
xor
movsl
or
icebp
jp
hlt
push
dec
scas
push
inc
inc
dec
mov
dec
xchg
insb
stos
cmpsb
xchg
cmp
imulb
daa
jge
imul
sub
test
inc
nop
mov
out
aam
fs
sarl
sti
pusha
fdiv
and
ss
fsubrs
stc
in
or
add
push
pop
dec
pop
cmp
mov
or
add
pop
jb
imull
pop
loop
leave
push
pop
cmp
insl
dec
mov
mov
add
adc
lods
pop
and
jno
adc
dec
push
rclb
mov
xchg
loop
std
dec
pop
mov
bound
lret
sub
inc
mov
in
mov
jae
mov
or
mov
push
or
or
or
aad
xchg
add
push
cmp
cs
outsb
xor
sub
stc
insl
popa
add
sti
push
test
xchg
icebp
dec
icebp
arpl
es
push
mov
pop
sub
cmpsb
mov
xchg
dec
mov
cld
flds
mov
rclb
xor
je
inc
in
imul
xchg
stos
xchg
xchg
adc
outsb
in
jnp
cltd
lcall
ret
pusha
push
inc
xchg
pop
pavgb
mov
xchg
cltd
addl
dec
mov
fidivl
and
icebp
rolb
mov
mov
mov
adc
jge
push
imul
out
rcll
sub
mov
sarb
pop
std
adc
ljmp
dec
fnstenv
pop
cs
dec
ret
xor
std
test
jmp
clc
push
mov
sub
imul
enter
jp
or
mov
mov
call
mov
adc
out
cli
xchg
dec
ficoms
jnp
xchg
pop
fdivl
je
cmp
or
xor
pop
jb
xor
shrl
pusha
loope
or
into
mov
enter
lods
imul
jecxz
std
mov
dec
out
pop
xchg
sub
sbb
jp
sub
dec
mov
sub
in
mov
mov
into
shlb
icebp
popf
mov
push
jp
push
mov
stos
lods
mov
xchg
sub
adc
fcomps
jmp
pop
insb
lods
mov
or
mov
xor
xchg
jb
stos
in
lcall
xor
movsl
cmpl
rcr
scas
sbb
sub
iret
lods
xor
aad
cmpl
mov
sbb
rcll
cmp
stos
test
dec
int
hlt
push
xchg
xor
cmp
les
push
popa
push
or
out
add
mov
loope
insb
lahf
cli
loopne
ret
xchg
and
push
inc
cmp
dec
cmp
xchg
scas
pop
aam
ret
cwtl
jecxz
daa
popf
jge
inc
mov
cltd
jb
nop
movsb
nop
jp
xchg
pop
jle
push
mov
cmp
repz
in
into
xchg
ret
mov
pop
pop
insb
pminub
sub
call
dec
and
inc
cmp
out
xor
or
scas
popa
adc
lods
xor
push
pop
pop
int
sub
pop
scas
push
mov
test
adc
lods
movsl
out
xor
popf
lds
xlat
add
std
mov
imul
push
inc
push
xor
in
pop
sbb
mov
mov
jne
out
jno
in
jecxz
jecxz
in
cmp
lret
insb
fcoml
mov
pop
dec
out
arpl
adc
mov
jecxz
in
stos
fldenv
cmp
push
fildll
pop
fs
scas
push
pop
movsw
xchg
xor
sbb
dec
jg
pop
dec
test
mov
jne
subb
sbb
popf
dec
testb
mov
andl
sarl
mov
add
sti
adc
jmp
jmp
out
inc
xchg
and
popa
jmp
xor
add
push
mov
sbb
push
jns
jno
fstl
mov
andb
xchg
bound
cs
aam
add
mov
push
outsb
dec
dec
inc
addr16
jae
mov
adc
mov
fnstsw
mov
movsb
pushf
popa
imul
rolb
lret
and
sub
pop
popf
mov
jae
inc
add
push
sbbl
js
into
psllq
mov
xor
std
test
arpl
popa
out
loope
call
pusha
int3
jp
insl
jno
sub
addl
inc
mov
mov
hlt
adc
out
xchg
push
inc
xchg
push
mov
or
aad
push
or
fmuls
cmpb
push
add
jb
jb
sub
sbb
out
das
lock
xchg
mov
es
call
adc
push
mov
pop
cmpsb
inc
cld
cmp
jbe
adc
jle
fiadds
pop
leave
jecxz
loope
mov
pusha
add
sbb
push
repnz
mov
test
push
cmp
outsl
mov
lret
cmpb
popa
mov
mov
push
sub
lret
jmp
cwtl
sub
xchg
ret
cmp
mov
pop
sub
into
enter
sub
jmp
outsb
lret
cmp
xchg
dec
dec
sub
xor
adc
jne
push
adc
rol
mov
cmp
ret
sub
jle
popa
mov
cmp
bnd
mov
sub
jg
popa
fbld
push
std
pop
push
sbb
add
mov
icebp
movsl
lds
sbb
addr16
mov
sbb
jecxz
or
pop
jb
out
mov
aas
dec
sti
lods
push
and
lock
jnp
pop
push
test
push
jne
adc
add
mov
cmp
pusha
or
jns
sbb
movsl
ja
xlat
loop
sbb
xchg
enter
or
adc
in
xor
shl
std
jns
push
loope
cld
rcrl
or
mov
adc
add
fcmove
fbstp
hlt
movsb
sbb
push
lret
movsb
ja
push
sub
or
jle
stos
ffree
mov
rcrl
and
xchg
enter
mov
sti
imul
ret
sbbb
decb
popl
daa
dec
mov
in
loope
jecxz
call
lea
jo
jecxz
push
sbb
std
loopne
cmp
ljmp
pusha
pop
add
sub
dec
pop
jle
movsl
jecxz
jecxz
push
cs
or
cld
mov
mov
push
js
xchg
scas
inc
or
imul
addl
pop
xchg
mov
in
insl
xorb
mov
fs
mov
sbb
rolb
inc
cmpsl
pop
push
and
or
data16
mov
xchg
lods
rcr
mov
inc
xlat
ljmp
cmp
ret
mov
in
lcall
jb
push
pop
adc
mov
xchg
scas
inc
xchg
aad
stc
popa
sbb
test
push
dec
add
jbe
dec
xor
jns
push
mov
sarl
cli
or
js
push
lret
sbb
mov
xor
jle
leave
dec
push
cs
pusha
movsl
xlat
ret
inc
cmp
push
mov
jns
inc
add
arpl
shlb
scas
fidivrs
push
adc
xor
daa
mov
mov
pop
or
pushf
inc
pusha
popa
xor
push
cs
test
cmp
lds
mov
shr
loopne
lds
push
xor
pop
fs
out
xlat
add
xor
sub
inc
popa
mov
sub
sbb
mov
movsl
adc
inc
or
pop
call
or
add
push
mov
sti
mov
push
mov
stc
imull
out
push
pop
clc
insb
push
cmp
jbe
jne
adc
lds
mov
xor
mov
sub
imul
fnsave
stos
insl
cmp
mov
lods
push
dec
add
push
lret
loop
faddp
pop
cli
xchg
test
pop
push
push
mov
shlb
les
cmp
enter
lret
xchg
jmp
scas
pop
mov
push
or
ja
dec
mov
icebp
add
cs
or
dec
sbb
sbb
cwtl
inc
adc
xchg
mov
cmc
and
inc
push
int
popf
xor
ret
add
and
mov
jae
jecxz
dec
adcb
rorl
xlat
cld
inc
cmp
push
inc
ljmp
mov
fcmovbe
push
fidivl
sbb
pop
icebp
dec
and
into
pop
movsb
aas
push
jmp
and
enter
adc
and
mov
inc
and
dec
lods
and
pop
pop
inc
xor
mov
jg
or
mov
jmp
sahf
pop
int
xchg
adc
clc
dec
pop
clc
or
pusha
popa
test
pop
out
movl
mov
add
imul
in
dec
fs
mov
inc
xchg
ds
and
pop
add
inc
fisubl
pop
sbb
fs
iret
lea
sbb
outsb
add
mov
icebp
cld
pop
jecxz
call
mov
push
lods
aad
pop
inc
rolb
fdivrp
cli
cmp
dec
pop
push
lahf
dec
popf
pop
das
lret
push
mov
nop
and
cltd
fcoms
or
mov
xchg
scas
xor
call
hlt
xor
push
mov
scas
push
cmp
mov
sbbl
jle
sub
leave
adc
lahf
or
popf
dec
cld
jbe
fnstsw
and
inc
adc
mov
addl
leave
pop
movsl
addr16
jbe
sbb
icebp
pop
jl
and
insl
inc
add
cmp
add
icebp
and
inc
pop
aam
cmp
sbb
and
rol
loope
inc
push
mov
gs
cmpsb
pop
es
pop
les
int
dec
in
mov
inc
dec
inc
sti
pusha
cmc
push
iret
in
fisttps
mov
push
icebp
xor
iret
cmp
stos
imul
cmpsl
js
push
mov
dec
sub
mov
dec
and
and
pushf
sarb
add
sbb
push
nop
in
add
pusha
jne
imul
cmp
jge
pop
lds
dec
fisubrl
fisubrs
sbb
ret
xor
xchg
fldenv
sarl
add
roll
div
aas
std
mov
fnstenv
dec
and
adc
loop
in
jbe
out
lret
and
add
sbb
test
cmp
mov
mov
pusha
ja
mov
fiadds
inc
mov
addr16
pop
ja
shll
dec
test
dec
inc
lds
push
jb
testl
xchg
add
mov
mov
cmc
imul
out
add
daa
pushf
adc
sahf
fldz
shl
cwtl
sbb
pusha
ficoms
testl
add
sbb
pop
xchg
mull
lret
outsl
jl
dec
mov
popa
jns
shlb
or
out
lret
xchg
sahf
sahf
ja
mov
add
push
sub
push
push
popa
pop
in
jp
nop
add
cmp
mov
cmpsl
test
out
loopne
mov
xchg
push
and
clc
test
lcall
xchg
js
lret
cmovo
cmp
jo
inc
shll
out
pop
and
adc
stos
push
outsb
stos
cmp
leave
jle,pn
or
es
inc
cmc
xchg
xchg
adcl
imul
fistpl
fwait
xor
xor
jmp
add
in
push
cmp
push
jg
or
scas
sub
jp
outsb
pop
in
push
adc
push
es
loopne
pop
sub
icebp
rorb
movsb
aam
or
sti
jns
lcall
jl
dec
push
shll
mov
mov
movsb
and
sub
stc
mov
or
fs
xor
std
dec
jns
insl
xor
iret
xchg
mov
ljmp
mov
orl
outsb
mov
lea
xlat
pop
add
ss
stos
icebp
or
sub
mov
test
xchg
out
stos
idivb
shll
and
dec
ror
sub
inc
cmp
push
adc
ss
push
fwait
gs
ficoml
cwtl
sbb
pop
lret
scas
jmp
loop
adc
int
inc
mov
and
pop
sahf
std
popa
in
shrl
jmp
fwait
outsb
cmp
movsl
cs
and
rclb
mov
daa
mov
sub
adc
push
pushf
dec
gs
xor
mov
mov
loopne
je
jecxz
jne
dec
lahf
imul
and
mov
dec
adc
and
lret
clc
sub
jecxz
push
mov
repnz
push
mov
int
inc
popf
sbb
test
inc
jmp
push
mov
jnp
dec
mov
mov
in
xor
add
jne
rclb
leave
sbb
test
das
mov
rorl
sahf
enter
mov
jno
push
rcrl
loop
cmpsb
sub
inc
push
or
dec
xchg
das
add
imul
mov
lahf
dec
cli
in
iret
lods
sarb
push
adc
mov
pop
cli
fnstsw
aaa
sbb
rol
dec
dec
sub
int3
pop
mov
sbb
hlt
lock
out
xorl
mov
call
scas
dec
outsl
add
xchg
pop
out
test
stos
leave
stos
mov
ficoms
pop
mov
mov
fwait
dec
aaa
mov
test
mov
lock
or
inc
fidivrs
adc
and
pop
jae
test
push
mov
sarb
jecxz
testb
addr16
xchg
repz
ficompl
stc
mov
outsl
cwtl
je
inc
scas
and
int
add
adc
test
stc
inc
mov
es
xchg
cld
cld
adc
in
adc
xchg
test
imul
mov
jmp
test
xor
jmp
push
cld
loope
es
xchg
lods
push
ficoms
cmp
jmp
sbb
mov
xor
push
in
or
leave
jecxz
xor
lret
lods
popf
dec
in
xchg
mov
fcomps
testb
jl
or
int
add
loopne
out
stos
je
push
out
push
or
ljmp
lahf
test
fistpl
dec
mov
pop
mov
int
inc
cltd
sahf
outsb
sbb
dec
jmp
shlb
dec
mov
push
dec
popa
sub
mov
inc
or
ret
jo
sbb
cli
nop
inc
jne
js
out
sub
push
rorb
xor
jo
in
cmp
aam
ja
int3
aas
mov
mov
in
sub
loop
cmovg
mov
adc
mov
arpl
imul
hlt
sti
cmp
cmpl
add
mov
mov
pop
cmp
into
movsl
jnp
movsb
loope
out
shrb
mov
cmp
pop
and
int
add
sbb
les
pop
popf
in
aaa
shll
sbb
out
mov
pop
xchg
fildl
cmc
jae
insl
andl
or
movsb
cltd
jno
xor
cwtl
aam
fdivr
jg
sub
jg
cmp
sub
or
call
xor
je
mov
loop
push
cli
out
and
cmp
popf
push
aas
xor
mov
sarb
push
xor
and
out
lcall
and
pop
jp
mov
pushf
es
cmpsl
insb
cmpsl
mov
mov
cs
dec
inc
repz
repnz
bound
inc
scas
insl
sbb
rol
xchg
jae
mov
scas
add
jnp
imull
xchg
jecxz
call
sahf
pop
addb
and
adc
es
imul
add
xchg
cs
aam
or
sbbl
lret
xchg
imul
mov
mov
push
push
push
push
hlt
cmp
pushl
clc
scas
fwait
iret
fs
sub
sub
in
sbb
inc
and
test
sbb
jle
push
lock
push
cmpsl
or
aaa
dec
leave
mov
sub
ret
mov
int3
adc
in
int3
pushf
push
inc
or
dec
outsl
jae
test
inc
lods
test
imul
push
push
ret
jle
nop
lcall
sub
out
add
aaa
aad
fisubrs
mov
cmp
jmp
ss
js
cli
fdivp
testb
cs
pushf
mov
ljmp
enter
hlt
fistpll
adc
sti
dec
lret
dec
mov
dec
and
fidivs
je
mov
ds
sub
mov
out
aam
subl
lahf
lret
push
mov
jbe
inc
imul
dec
fisubl
in
sub
mov
movsl
lcall
scas
jg
rclb
xor
xor
mov
mov
xchg
std
sub
add
gs
sub
rcrl
or
adc
fsubr
mov
aaa
xor
dec
fdivr
mov
xor
mov
xchg
lret
add
addb
dec
mov
pushf
sbb
repz
outsl
imul
xrelease
jno
jecxz
shl
clc
pop
or
mov
test
add
xchg
iret
mov
rorl
sbb
adc
imul
dec
sbb
mov
pushf
lods
and
adc
hlt
push
pop
push
jnp
cmp
shll
jmp
push
int3
test
test
jbe
andl
divb
in
sub
ret
gs
ja
test
repnz
or
pop
lods
lcall
int3
lret
inc
mov
mov
pop
jmp
out
add
jae
mov
pop
arpl
inc
mov
cs
outsb
mov
mov
jne
push
mov
add
test
inc
inc
data16
repnz
insl
aam
scas
loopne
arpl
pop
lock
or
add
es
fdivr
push
xchg
cmp
add
add
xchg
scas
pop
scas
add
cwtl
xlat
ja
scas
sbb
ja
mov
mov
pop
cmp
hlt
or
dec
es
mov
movb
push
sbb
xchg
stos
mov
mov
push
jmp
cmpsl
adc
mov
pop
in
idiv
movsb
xchg
inc
outsb
xchg
mov
cmp
xor
dec
cld
inc
adc
cwtl
int3
lahf
aam
mov
sbb
push
mov
cli
test
pop
dec
lock
push
xor
push
jp
jle
rclb
ret
outsl
add
popf
pop
push
psubq
addr16
aad
push
adc
mov
pop
lahf
jnp
bound
flds
cld
xchg
faddl
cltd
ja
notl
lret
fsubp
ret
and
insb
int
jbe
jbe
xor
out
mov
fsts
mov
jae
lea
movsl
sub
ds
mov
mov
in
ljmp
adc
ljmp
cmc
mov
rorl
adc
cmp
or
fnstcw
jbe
and
arpl
leave
mov
repz
push
adc
out
out
std
jp
cmpsb
je
lods
add
int3
xor
push
bound
leave
cli
test
inc
ror
orl
pusha
mov
repz
pop
and
add
or
or
jae
hlt
sbb
cmp
lret
cmp
mov
pop
insl
mov
adc
scas
sbb
enter
das
sbb
mov
push
insb
or
notl
sub
decb
jp
adc
in
cmp
pop
lds
mov
fwait
xor
loope
lods
scas
push
add
das
roll
ds
pop
mov
out
es
aad
xor
mov
or
add
sub
stos
std
inc
or
test
xchg
pop
cmp
scas
fcmove
push
shlb
xchg
inc
repz
popf
mov
aas
scas
mov
shr
pusha
cld
test
cwtl
pop
add
jb
sbb
push
lcall
xor
outsl
icebp
mov
out
std
or
or
jg
jmp
pop
dec
je
pop
into
sub
xchg
jbe
rorl
shll
lods
icebp
call
adc
xchg
rcl
xlat
ljmp
add
ja
js
sbb
out
scas
pop
scas
bound
xlat
idivb
jnp
mov
or
test
hlt
test
inc
pop
iret
ret
lock
jae
pop
mov
xchg
jno
or
dec
or
mov
and
inc
ficompl
scas
jle
stos
lret
push
pop
scas
pusha
cmc
subl
hlt
sti
in
test
cmpsb
bound
xchg
adc
aaa
adc
sub
pop
jno
testb
dec
pop
jo
int
out
ds
dec
js
leave
and
mov
inc
pop
rolb
jne
xchg
jle
outsb
fs
push
dec
jns
dec
cmp
sub
push
xor
push
imul
push
ficoms
push
rolb
and
mov
sbb
jp
outsb
inc
xchg
adc
test
jge
mov
loopne
or
bound
rol
inc
cld
shll
test
add
or
repnz
and
call
ds
popf
jp
test
aam
pop
lds
pop
pop
or
cli
jb
adc
loope
inc
xchg
jbe
jl
lahf
cmp
mov
imul
jno
cmp
mov
ss
test
loopne
ja
mulb
enter
sti
fsubl
mov
pop
pop
fistps
or
clc
pop
mov
std
sbb
adc
push
push
mov
push
jns
pop
imul
daa
fwait
push
outsl
push
arpl
jmp
xor
dec
je
insb
sub
sahf
inc
adc
pop
xlat
mov
pusha
sub
pop
dec
cmpsb
fwait
lds
ja
in
mov
das
jns
call
mov
in
push
jl
jl
mov
int
sub
mov
push
mov
cwtl
fisttpl
adc
jl
jbe
and
shll
imul
incl
pop
mov
cli
cmpsl
in
clc
xchg
inc
in
movsb
mov
jb
push
xchg
sbb
cmp
into
mov
das
adc
sbb
sbb
rcrb
ffree
fisttps
mov
jmp
lahf
dec
dec
xchg
adc
cwtl
int3
mov
jp
dec
cmpsb
cmp
test
lods
mov
jne
sti
mov
pop
int
pop
xor
xor
cld
mov
lds
fs
pop
adcl
xchg
fbstp
subl
in
enterw
mov
sbb
loopne
dec
mov
mov
inc
ja
shll
rcrb
pusha
stc
sub
xor
mov
in
mov
sub
pop
sti
scas
add
pop
sahf
fs
adc
in
jne
fs
mov
sarb
inc
popf
adc
mov
jb
lds
shrb
sub
adc
rcll
jb
push
and
cli
dec
test
add
mov
mov
in
pop
and
test
sub
clc
dec
dec
fcmovbe
jnp
arpl
pop
repz
hlt
adc
clc
imul
push
push
lock
repz
add
jnp
add
pop
mov
cmp
movsl
mov
stos
cwtl
push
leave
pop
xor
pop
fstpl
clc
ret
aad
fsubr
loop
test
in
cvtps2pi
cli
mull
aaa
int3
cmp
fistpl
dec
in
xchg
dec
rorb
shll
scas
loop
inc
movsl
mov
sub
test
inc
jno
shlb
add
jne
pop
mov
push
xor
inc
cs
in
dec
mov
inc
sub
jmp
jb
adc
pop
xchg
jo
movsb
xchg
dec
bound
or
fadds
shlb
and
daa
test
xchg
mov
shr
adc
aas
sti
mov
lds
pop
stc
xor
testl
inc
jle
imulb
adcb
jo
dec
repnz
lea
jb
mov
or
inc
shll
xor
mov
je
mov
ds
sub
jle
add
mov
insl
jmp
fstpl
push
lods
add
inc
je
push
pop
icebp
xchg
stos
sub
jb
mov
jmp
loopne
mov
sarl
pop
js
rcrl
daa
aam
adc
sub
push
and
dec
push
fnsave
dec
sahf
dec
xlat
dec
pop
fucomp
xchg
imul
repz
js
lahf
pop
les
xor
mov
cmp
data16
jns
icebp
aas
dec
cmp
std
xor
divb
lds
ret
nop
jp
xlat
std
cmp
in
dec
in
es
shlb
je
iret
and
or
test
pop
xor
mov
jle
jno
cmp
into
imul
sbb
xor
pop
notl
repnz
inc
cmp
inc
sar
mov
jge
mov
rcrl
or
xor
mov
cld
sub
jge
xor
test
cli
hlt
and
insb
or
sbb
and
pop
cld
adc
in
loope
shll
cmp
xchg
mov
push
cltd
out
jns
rclb
jne
cmc
ret
jae
cmc
jo
pop
adc
fstps
dec
pop
ja
or
pop
pop
inc
jno
aaa
ret
gs
loope
push
xorb
jg
lcall
adc
dec
or
push
dec
mov
andl
pop
nop
inc
or
addl
xlat
mov
xchg
xchg
out
int
shlb
pop
pop
jno
imul
mov
ds
stc
cmp
inc
or
fsub
repnz
fwait
hlt
js
cmp
sbb
sarb
sub
push
aas
xchg
dec
ret
push
xchg
and
cli
aam
in
mov
cmp
mov
or
sti
push
mov
cmp
and
mov
pop
test
jb
cli
jp
pusha
je
fwait
jbe
pop
push
sbb
xchg
ja
xchg
incl
call
pop
inc
push
pop
jge
bound
mov
mov
mov
pushf
xor
add
add
movsb
cmpl
sub
leave
cmp
jo
shl
test
cmp
rorl
xor
insl
outsb
sub
cmp
out
arpl
mov
and
inc
gs
mov
sub
adc
xchg
movsl
test
stos
sub
in
cli
mov
in
dec
lcall
loope
push
cmpsl
test
mov
mov
push
mov
push
cmp
pop
or
cmpsl
push
nop
in
mov
fstpl
outsl
call
popa
push
sbb
sbb
adc
aaa
dec
dec
cmp
data16
or
xchg
jno
add
jmp
out
shrl
test
aam
adc
stos
push
imul
int
imul
and
das
xchg
movsb
jb
xor
pop
and
sub
mov
fs
pop
inc
bound
add
pop
sub
leave
sbb
fisubrl
push
or
out
sub
jns
loope
outsb
sub
pop
movsb
jle
stc
das
push
ret
pop
push
push
mov
mov
rcr
cmpsb
push
xchg
add
or
xlat
enter
pushf
lahf
mov
divl
xchg
frstor
dec
mov
jp
mov
mov
loop
and
jbe
push
sub
fbstp
xchg
mov
and
fiadds
scas
fstpl
sbb
lods
mov
fmuls
push
fmuls
sbb
loope
aam
loope
mov
dec
mov
decb
jnp
xchg
jg
mov
sbbl
fistpl
or
nop
inc
mov
std
in
xor
push
xor
mov
sub
cwtl
sbb
jo
mov
cmp
adc
lret
cwtl
add
mov
jo
sbb
mov
adc
push
clc
or
or
inc
push
in
jb
arpl
jl
xor
dec
ret
imul
ja
mov
in
add
adc
xchg
outsb
pop
std
ss
xor
adc
das
out
sbb
mov
and
xchg
mov
jnp
lds
xor
cmc
ret
push
fimuls
lods
mov
xor
imul
pop
pop
cmpsl
xchg
insb
dec
jg
pushf
push
imul
stc
adc
pusha
mov
or
and
inc
daa
subl
and
mov
jo
cli
pop
insb
cs
cmpsl
push
cltd
mov
xchg
lahf
addr16
mov
dec
push
adc
pop
rcr
stos
lods
sarl
mov
int3
mov
and
mov
call
add
ret
add
loopne
repz
mov
movsl
addr16
sbb
and
sahf
int3
inc
or
push
adc
int3
jle
jne
ja
cmp
aaa
shll
xor
mov
push
fs
sbb
cmp
adcb
int3
push
push
push
push
ljmp
sub
mov
xor
sbb
adcl
lret
sub
inc
xchg
js
and
and
or
mov
ret
pop
ss
dec
and
iret
movsl
shlb
cld
mov
fistps
stc
dec
aaa
cwtl
inc
icebp
xchg
pop
pop
jbe
pop
cmc
lahf
push
lcall
dec
call
test
mov
int3
daa
adc
les
jne
fildl
jno
mov
push
xchg
das
lret
scas
cld
js
frstor
mov
jnp
fdivr
jo
ljmp
adc
aas
mov
jnp
mov
or
or
jge
test
cwtl
lahf
inc
jmp
and
push
dec
dec
test
xor
or
cltd
pop
loop
xchg
pop
ljmp
lock
xchg
cltd
xchg
mov
es
ret
xchg
jne
cld
lea
loopne
leave
jp
out
push
arpl
les
mov
mov
dec
or
das
mov
enter
lret
test
mov
loope
or
clc
arpl
mov
imul
aad
int3
daa
repz
mov
daa
xchg
rclb
insl
cltd
mov
jl
cmp
inc
in
push
mov
out
mov
adc
iret
bswap
pop
xchg
cli
jp
mov
xor
mov
test
push
arpl
ret
or
aas
ja
and
cld
add
insb
jg
cmp
out
lods
pop
inc
xor
inc
repnz
pop
push
jnp
call
mov
and
push
aad
ror
popf
push
and
rorl
add
mov
xor
pop
aas
repnz
xor
cld
cmpsb
xchg
movsb
mov
pop
mov
call
or
dec
lcall
shr
push
out
adc
mov
xchg
int
sub
xchg
in
xor
inc
imul
test
jg
xor
popf
sub
sub
testb
xchg
ret
fs
jle
xchg
push
je
mov
mov
jne
xchg
xor
dec
lods
push
jle
pop
shrb
cmpsb
and
jle
add
xor
rorb
stos
scas
pop
pushf
lcall
push
cmp
test
fstl
iret
mov
jno
stos
not
mov
xor
gs
pop
mov
dec
mov
sub
jnp
es
adc
jo
sbb
out
or
movsl
sub
ret
fisubs
sti
cmp
pop
adc
loop
and
mov
out
popf
inc
pop
ss
sti
loop
cmp
movsl
arpl
add
adc
mov
dec
mov
push
leave
lahf
dec
sbb
jb
test
xor
xchg
cld
jae
sbb
dec
cmp
imul
adc
adc
cmp
leave
aaa
out
scas
and
das
cmp
xchg
ja
lret
push
pusha
fstpt
push
push
push
add
leave
push
es
cltd
divl
add
lea
fmull
push
lods
mov
xchg
xor
lods
add
sub
shll
fadds
xchg
fwait
fs
rcll
dec
fists
scas
jns
shr
into
mov
add
add
lret
sbb
push
clc
faddl
fistpl
pop
pop
or
lea
pop
sbb
or
mov
orps
out
enter
sub
fmuls
push
jb
das
movsl
mov
adc
addb
pusha
xchg
sub
leave
sti
mov
lcall
mov
jmp
call
mov
test
pushf
lea
hlt
jmp
xor
mov
cmp
int3
mov
iret
aas
cli
ficoml
divl
xorb
stos
pop
cli
push
sub
dec
gs
sub
mov
loop
push
outsl
inc
sbb
sub
inc
jg
nop
lret
lock
into
aam
or
mov
out
mov
lods
pusha
xor
fstp
lret
ficoml
mov
push
std
fists
xchg
sbb
sahf
aas
lcall
jo
into
cmp
dec
popf
jg
rorb
cmp
je
xor
add
cmpsl
mov
cmp
pop
adc
dec
ja
adc
jl
dec
xor
jnp
outsb
pop
or
fistps
mov
frstor
xor
jg
mov
mov
fildl
dec
sub
pop
pop
fs
or
adc
fwait
movsl
jg
pop
test
ret
mov
mov
xchg
push
cmp
jle
dec
popf
or
pusha
mov
dec
call
addr16
xchg
popa
das
aad
sbb
ficoml
xchg
jo
sbb
insl
icebp
ret
rorl
jle
mov
mov
sub
in
push
pop
jb
addb
int3
mul
push
ljmp
imul
cltd
sub
jecxz
pop
lahf
call
cmp
add
test
repnz
mov
mov
mov
inc
mov
pop
pop
aas
mov
outsl
cmpsl
cmp
jge
xchg
dec
dec
mov
test
dec
outsb
jp
pop
cmp
icebp
ljmp
mov
add
jbe
and
out
hlt
dec
push
call
or
loope
cld
jg
xchg
in
mov
pop
jmp
and
sahf
xlat
fcomps
out
sub
dec
outsb
cld
stos
push
xor
xor
and
mov
push
inc
push
push
and
dec
sahf
add
push
inc
repnz
push
sar
rcrb
push
sbb
call
cmp
ret
sbb
ss
xor
repnz
rolb
cmpsb
data16
fildll
in
xchg
dec
stc
sbb
sub
insb
mov
in
xchg
lock
les
cmp
xchg
jp
fimull
xor
mov
xchg
push
and
cmpsb
aaa
xchg
or
sti
jnp,pn
mov
into
stos
sti
lret
xor
mov
std
popf
xor
sub
repz
lahf
push
out
shll
push
and
roll
loopne
xchg
sbb
mov
outsb
push
aas
in
stos
insl
pop
insl
xlat
sub
push
jge
mov
cmpsl
mull
sub
mov
in
dec
push
xchg
arpl
jge
pop
mov
mov
movb
es
adc
push
push
ja
or
or
in
adc
jle
sbb
dec
cs
scas
fs
cmp
and
test
inc
sub
dec
xor
mov
popf
aam
ret
inc
out
inc
shrl
stos
push
or
cmpsb
add
inc
into
out
dec
sahf
mov
xor
mov
mov
mov
mov
mov
insb
aad
push
ret
mov
jp
stc
call
pop
fcoml
jbe,pt
out
adc
and
push
jo
in
pop
push
add
mov
iret
dec
inc
cmp
dec
mov
jecxz
rcrl
mov
push
cltd
adc
sub
mov
and
adc
pop
mov
and
das
ror
cmp
ret
in
or
dec
lods
orb
lock
pop
pushf
enter
adc
push
hlt
push
mov
sbb
inc
mov
stos
mov
out
test
mov
rcl
std
and
fiaddl
xor
dec
outsb
sub
xor
adc
ljmp
cmpsb
nopl
outsb
inc
dec
popf
cltd
test
sub
cmp
cltd
sub
lret
inc
divb
movsb
stc
clc
fcmovne
inc
outsl
pusha
jecxz
aas
xchg
rdrand
jne
popf
xor
push
sub
mov
push
or
loopne
inc
inc
or
mov
or
sbb
stc
inc
xor
cmp
in
push
pop
mov
push
dec
adc
add
iret
loopne
push
clc
stc
sub
bound
push
sbb
xchg
das
daa
inc
sub
aaa
cmp
dec
mov
test
push
push
retw
mov
cmp
aam
flds
cmpsl
fdivl
lcall
sub
mov
fcmovbe
cmpsb
pop
add
xchg
sbb
or
mov
mov
daa
shll
aad
inc
inc
inc
addr16
jbe
mov
sbb
test
xchg
sub
mov
lahf
xor
or
pop
push
adc
push
fdivrs
std
pop
repnz
cmp
sub
fbld
imul
negb
cmp
aas
cmp
cld
cmpsb
push
dec
jae
negb
cmp
cs
mov
xlat
int
mull
or
arpl
xchg
mov
pop
mov
adc
xor
int3
inc
jmp
add
fdivp
pop
cmp
pop
dec
sbb
and
sbb
outsb
inc
cltd
add
lds
xor
sarl
xchg
dec
pcmpgtd
inc
add
leave
fists
jg
iret
arpl
in
inc
std
lods
xor
cld
vandpd
pop
sarb
or
repz
ljmp
enter
rclb
mov
int
xrelease
mov
jg
cmp
sbbl
jg
addr16
sub
and
lods
aaa
pop
sbb
std
and
dec
ds
mov
pop
int3
sti
cs
mov
test
inc
jle
ss
lds
sbb
les
movsl
and
dec
movsl
sbb
push
lods
push
popa
cs
push
cmp
xchg
push
xchg
cltd
push
sub
das
lcall
lods
push
sub
adc
adc
sub
pusha
lea
push
cmp
and
push
jne
ds
cli
xor
mov
std
mov
fcoml
add
mov
jns
jae
xor
dec
dec
sub
test
out
push
lds
add
and
push
fstp
inc
sbb
pop
fs
jns
test
or
sahf
xor
fdivrl
movsl
pusha
cwtl
aaa
test
fdivp
mov
jo
jmp
dec
xor
test
adc
adcb
imul
sbb
dec
and
adc
std
outsb
fwait
xchg
jecxz
cmc
rol
cmp
mov
mov
movsb
jo
paddd
lea
jl
xor
jns
and
push
sarl
jp
sub
mov
cmp
or
dec
inc
push
outsb
push
mov
lods
jo
jne
add
pop
push
mov
or
idivb
sbb
sti
and
ret
mov
bound
scas
adcb
sahf
pop
push
xor
mov
mov
jno
addl
std
and
outsb
fwait
test
xlat
lea
xor
xor
aas
ss
cmp
nop
adc
sbb
in
sbbl
inc
jecxz
lods
cmp
nop
scas
push
popf
outsb
push
mov
and
dec
dec
cmp
cltd
shrl
push
mov
in
repnz
sbb
int3
xor
sbb
insl
fs
xchg
fistps
arpl
rol
fdivs
mov
mov
dec
sbb
push
lods
stc
sub
loop
adc
scas
mov
pop
call
call
inc
add
xor
js
cmp
rcr
pop
ja
adc
xchg
cld
jg
xchg
test
push
add
or
mov
xchg
push
jge
jmp
mov
lcall
inc
int3
sbb
fisttpll
fiadds
xchg
out
movsl
mov
mov
mov
jecxz
iret
dec
popf
adc
movsl
jbe
mov
rorl
add
cmp
sub
push
mov
ret
inc
mov
sub
std
pop
cmc
jb
sub
add
push
out
sbb
push
data16
xchg
fcoms
inc
jge
mov
push
cld
inc
jecxz
sub
mov
popf
sbb
daa
cmp
rep
enter
lock
mov
insb
dec
lds
adc
mov
push
movsl
dec
add
into
negl
mov
jnp
pop
inc
insb
adc
xchg
push
push
call
jmp
lock
sub
outsb
cwtl
jno
into
mov
mov
je
adc
test
mov
xor
xchg
xor
stos
and
dec
sahf
sub
int
mov
lock
sub
xor
cmp
mov
jo
paddb
fs
in
mov
push
in
lea
movsb
cmp
icebp
cmp
inc
aaa
sub
daa
pop
mov
push
dec
pop
std
xchg
adc
push
pop
jbe
dec
inc
out
fstpt
out
jge
sub
cld
xchg
jb
test
in
adcb
int3
cld
cmpsl
icebp
pop
shrl
insb
add
xor
and
pop
fcomi
or
iret
or
dec
arpl
add
arpl
shll
stos
sub
xchg
cmp
orb
adc
cmp
enter
or
xchg
cmp
pop
movsb
dec
cmp
sbb
mov
in
adc
clc
add
xor
dec
mov
cmpsl
xchg
in
mov
aam
or
or
mov
jo
push
je
xchg
add
jecxz
cmp
pop
xchg
arpl
xor
or
inc
outsb
jo
insb
and
sahf
pop
mov
sbb
dec
mov
push
mov
jbe
jno
aam
dec
fcomps
inc
or
jp
add
sub
or
inc
pop
ret
rorb
popf
daa
mov
fldcw
std
xchg
cld
jne
repnz
or
cmp
scas
or
sti
aam
fdivr
call
cmp
je
inc
clc
add
add
fmull
mov
test
rclb
inc
cmp
lret
stc
push
xchg
xchg
add
jnp
xchg
jecxz
lock
xchg
add
outsb
xor
mov
pusha
stos
out
nop
in
pop
mov
sbb
leave
adc
mov
jno
dec
add
lods
dec
cmp
jmp
out
sahf
shl
stos
loopne
icebp
imul
int3
lock
or
xchg
loopne
ret
ficoms
insl
lods
push
sbb
jno
pop
pop
jmp
push
xchg
sub
negb
bound
cmc
cwtl
push
or
sub
push
dec
xor
fdivrp
mov
pusha
or
push
test
frstor
pop
sub
insl
movsb
movsb
xor
fcmovnu
adc
jl
and
loopne
cwtl
pushf
mov
jp
int
sahf
push
xchg
in
pop
mov
mull
in
cs
mov
imulb
stc
add
gs
and
xchg
enter
jp
mov
loope
xlat
sbb
adc
lret
ret
dec
inc
or
push
sbb
rolb
cmp
in
je
sub
scas
shr
clc
lods
push
outsl
jno
and
mov
repnz
fs
sbb
pop
pop
mov
int3
sub
pop
cmpsl
call
addl
fwait
insl
fwait
mov
mov
mov
movsb
icebp
ficomps
mov
lock
fwait
movsl
cltd
insl
daa
adc
test
rol
aam
mov
push
setle
fucomip
adc
add
push
scas
dec
ret
dec
insl
dec
inc
mov
pushf
mov
adc
xlat
ljmp
push
rorl
xchg
repnz
inc
mov
scas
jne
out
push
xchg
and
jecxz
add
xlat
lret
fnsave
insb
mov
xchg
maskmovq
negl
pop
jbe
mov
adc
ljmp
or
and
outsl
mov
sub
add
lds
dec
out
pop
jge
fldcw
dec
or
fnstenv
jno
mov
popf
pop
mov
adc
andl
mov
jb
and
mov
cltd
inc
cmp
inc
mov
pop
test
xlat
sbb
sub
ds
mov
lcall
push
jmp
into
scas
sbb
xchg
pop
and
pop
xchg
sbb
nop
pop
in
fstpl
arpl
inc
jno
cs
mov
sbb
loop
add
mov
arpl
test
jb
jge
pop
add
add
icebp
jns
outsb
shrb
or
ds
hlt
mov
xchg
mov
ja
cmc
cwtl
inc
xchg
mov
mov
daa
add
mov
adc
daa
aaa
dec
sbb
pop
jo
rcrb
lods
adc
xchg
fisubl
or
mov
mov
add
push
ljmp
jbe
push
cs
or
and
add
insl
mov
and
pop
clc
cmpsb
aad
and
test
cmp
es
out
mov
orl
shrb
adc
push
cmp
rcll
test
adc
push
dec
mov
sub
xchg
push
shr
js
xchg
lds
push
lcall
mov
enter
icebp
mov
mov
and
aaa
addb
repnz
nop
and
scas
jno
cmp
inc
cmc
outsb
repz
push
xchg
scas
mov
xchg
lock
stos
inc
cmc
and
daa
push
fld
iret
or
int
das
jo
xor
push
aam
sub
jl
mov
xlat
gs
lret
mov
mov
mov
pop
sbb
dec
cmp
int
push
sub
cmpb
sub
push
int
pop
clc
les
vpclmulqdq
not
insl
cmpsb
jae
data16
repz
xchg
jne
xchg
dec
push
loopne
sub
sub
cltd
pop
inc
mov
iret
or
lods
cwtl
fildll
lods
ficoms
loope
cmp
or
pop
add
adc
mov
mov
fwait
data16
push
xor
lods
arpl
je
sbb
cmpsb
in
push
fcoml
rorl
scas
mov
xor
xchg
pop
pop
mov
cli
jecxz
xchg
push
loopne
scas
cmp
aad
push
fwait
mov
mov
hlt
lahf
and
adc
push
test
and
jg
jnp
jge
cmpsb
idivl
dec
fcomps
push
lock
push
add
adc
and
hlt
jle
fcoml
add
outsl
cs
mov
lahf
inc
or
jno
test
out
fdivl
das
lret
jo
in
out
icebp
js
popa
fldenv
adc
add
push
add
das
and
dec
in
bound
imul
lds
jnp
stos
xor
popa
sti
in
pop
repnz
imul
in
adc
mov
hlt
mov
in
iret
add
idivl
arpl
daa
adc
push
loope
sbb
hlt
xchg
mov
pop
sti
push
mov
ret
sbb
push
jmp
push
subb
js
dec
jns
sbb
std
loop
out
jmp
lods
cmp
in
movsb
mov
stos
je
jp
xchg
jge
hlt
sbb
mov
xchg
data16
les
cmp
jnp
popf
in
or
push
and
dec
mov
adc
iret
int3
sub
subl
mov
sub
lahf
mov
pushf
and
or
nop
loopne
negb
sub
adc
push
xor
cmp
or
in
inc
mov
repnz
pop
and
fldcw
cwtl
xor
scas
jo
xor
aam
jne
inc
adc
mov
lcall
popa
xor
pop
outsb
cli
rorl
mov
xchg
test
mov
mov
pop
js
int
dec
or
fwait
mov
lret
push
fldl
push
leave
dec
fisubs
mov
mov
pop
ds
bound
mov
mov
fisttpl
sbbl
jle
aad
aad
cmpsb
mov
mov
lods
test
cmp
fisubrs
cld
in
addl
dec
jle
sbb
xor
lret
ss
xlat
jbe
aas
sbb
fistpll
xchg
mov
idiv
aaa
scas
testl
shrb
sbb
inc
imul
dec
cmp
xchg
test
xor
xchg
scas
sbb
dec
mov
fnstenv
mov
incl
lock
popa
jle
sbb
in
cmp
push
xor
mov
sub
daa
xchg
sbb
push
iret
xor
aad
pop
mov
cmp
push
cmpsl
xor
hlt
and
stos
pusha
jb
push
push
mov
das
addr16
inc
dec
mov
sub
or
notb
mov
adc
in
enter
cmp
xchg
jmp
pop
xchg
lods
fcmovu
mov
sbb
or
nop
fadds
adc
push
jno
clc
out
sub
test
dec
aad
and
xor
lret
enter
lret
cmp
out
push
pop
jmp
xchg
ret
loopne
movsl
pop
ret
in
xor
add
add
int
jb
mov
daa
lds
push
dec
jnp
std
adc
arpl
js
out
add
xchg
push
inc
and
movsl
mov
insl
sub
out
fidivs
arpl
sub
clc
and
add
sbb
jge
push
jne
dec
cmp
out
adc
das
pop
insb
int
adc
push
movsl
aaa
dec
pop
into
mov
pop
enter
xchg
xchg
jo
mov
negb
cmp
and
mov
fbld
movsl
mov
je
sub
xchg
cmp
test
popa
jne
nop
jmp
jo
out
cs
stos
mov
scas
pop
sti
out
inc
and
bound
xor
xor
test
sub
mov
insl
jp
dec
sub
mov
out
mov
cld
dec
fcmovnu
push
outsl
stos
and
cld
jle
mov
ljmp
xchg
rcrl
test
mov
mov
leave
pushf
push
mov
mov
dec
scas
xchg
mov
and
in
es
and
sbb
or
xchg
jns
movsl
xor
xor
cmp
pop
cmp
hlt
inc
mov
iret
pop
in
out
jnp
xchg
cmp
sub
ror
mov
test
cmp
std
or
mov
xchg
repnz
mov
add
cli
sti
and
mov
pop
push
push
push
jne
mov
test
scas
xchg
and
pop
add
mov
lret
int
xor
jge
nop
sbb
pushf
les
xor
xchg
mov
stc
push
repnz
je
inc
lahf
ljmp
sarb
mov
movsb
mov
lret
pop
out
outsb
push
add
sub
fucomp
sbb
stc
xor
stos
xor
mov
jle
push
xchg
push
rcrb
or
sub
or
adc
cmp
and
mov
xchg
cmp
ljmp
mov
je
and
jo
jp
repz
scas
jp
das
lea
mov
and
dec
jns
pop
push
shll
fldt
testb
lea
lock
movsb
not
js
add
je
and
lods
sbb
cmp
jge
lock
inc
ss
aaa
pushf
mov
out
sbb
addb
mov
adc
push
mov
je
adc
clc
xor
cmp
out
cli
ret
pop
js
clc
mov
outsb
sbb
push
enter
dec
lahf
cmp
cmp
shll
mov
stc
jl
nop
sti
push
mov
les
das
fdivrs
sbb
out
aad
push
cmpsb
fisttpll
sub
out
xchg
lcall
insb
push
scas
outsl
jecxz
mov
push
lds
addr16
sahf
cltd
xor
lret
pop
push
ds
sub
ret
fxch
shl
jnp
cld
xor
or
ss
loope
outsl
mov
scas
mov
ljmp
jmp
clc
pop
lret
xlat
jns
xchg
and
stos
and
jmp
xchg
dec
xchg
insl
adc
push
pushf
lahf
sbb
jl
mov
imul
cmc
lea
inc
push
cmp
push
sbb
cwtl
sti
adc
sub
cwtl
adc
or
ja
fwait
scas
jecxz
cmpsb
ja
xorb
xchg
push
scas
inc
inc
movsb
repz
push
clc
int
in
test
stc
outsb
mov
xchg
scas
roll
pop
jle
push
movsl
fsub
cmp
sbb
mul
mov
pop
add
jp
sarb
mov
loopne
add
in
enter
addb
jmp
lock
sbb
xor
ret
add
sub
xor
hlt
jmp
fildll
lret
dec
pop
cmp
les
cwtl
gs
movl
or
addb
sub
lock
test
dec
js
sbbl
jb
fadd
mov
dec
mov
inc
ljmp
or
or
ss
daa
jecxz
movsb
mov
loopne
xor
push
cli
outsb
cltd
sub
xchg
mov
jnp
xor
pop
mov
sub
or
sub
xor
pop
addb
xchg
mov
into
mov
pop
cmp
sub
cmc
and
push
fistpl
jg
ror
imul
loop
rcl
stos
mov
pusha
inc
xor
xor
mov
pop
and
pop
ror
mov
rorb
dec
mov
push
leave
jl
cmp
int
leave
jo
mov
lea
in
sub
jle
jne
dec
pusha
in
mov
mov
pop
ds
push
xchg
push
jl
lods
xchg
je
insb
stos
movsb
mov
mov
xchg
out
sbb
or
dec
stc
jo
popl
mov
fsts
mov
repnz
pop
fs
ret
ret
xchg
das
mov
sbb
enter
push
push
pop
mov
inc
cmpsb
jns
push
push
inc
and
mov
into
test
aam
scas
ret
adc
sub
dec
leave
sub
aaa
cmp
sbb
fstl
fbld
sti
imul
mov
dec
jle
ror
cmp
lret
push
lock
sbb
jo
pop
daa
scas
mov
pop
adc
es
sbb
rolb
jp
pop
in
xor
cmc
lock
jae
push
insl
insb
dec
mov
daa
insl
cmpsl
scas
pop
les
inc
jg
roll
mov
aam
pop
xchg
xchg
ss
mov
rolb
mov
add
sbb
or
repz
and
xchg
sbb
js
pop
add
insb
mov
jge
not
or
cmc
addr16
lcall
cmpsl
push
gs
cmpsl
mov
cmp
outsb
out
inc
fcomps
mov
jecxz
cmc
das
sub
inc
popa
xor
lods
sbb
js
mov
into
pop
movsl
test
fcmovbe
movsb
out
mov
in
inc
sub
mov
mov
scas
adc
push
orb
push
inc
pop
mov
fcoml
xor
idivb
cwtl
dec
pop
cmp
cs
mov
icebp
xorb
je
mov
dec
mov
cli
sti
out
cmp
ja
add
dec
ljmp
mov
pop
mov
icebp
dec
dec
mov
out
cli
aas
xor
push
mov
mov
aas
add
xor
sti
mov
call
push
inc
sub
pop
data16
add
push
in
push
lea
int3
push
daa
ss
jecxz
and
or
adc
and
sub
lock
pop
xchg
fdivs
insb
lret
pushf
push
fistpll
ficoms
and
dec
fwait
movl
jbe
mov
mulb
pop
xchg
mov
shrl
icebp
jmp
dec
xor
push
mov
sbb
sub
mov
xor
inc
xor
and
lods
sarb
cmpsl
loop
fdivrl
dec
xor
jbe
test
mov
pop
lretw
push
test
leave
xlat
push
sub
loopne
xchg
rcll
lret
in
aaa
mov
inc
push
cwtl
cs
mov
or
mov
insl
into
sbb
sahf
leave
and
mov
xchg
jge
push
jnp
mov
sbb
xor
stos
adc
outsl
xchg
jmp
arpl
sbb
inc
scas
mov
pop
inc
dec
cltd
or
fcoms
inc
notl
inc
loopne
fcmovnbe
into
aas
fs
jbe
mov
aad
shl
push
and
loop
out
mov
ret
xchg
imul
xchg
cmp
in
dec
es
out
and
into
mov
mov
lcall
lds
mov
mov
jo
jge
sarb
add
mov
addr16
daa
cmp
inc
xor
cld
and
outsb
xchg
jo
mov
or
xchg
fbstp
pushf
add
cltd
inc
dec
adc
imul
mov
add
cmp
add
out
cmpsb
fsubrs
adc
arpl
sbb
orb
dec
stc
ret
repz
sahf
fidivrl
rclb
ss
and
jl
sbb
ret
jo
out
mov
or
adc
cmp
imul
dec
sbb
cmc
mov
and
mov
jge
sbb
fimuls
mov
mov
and
or
insl
lcall
dec
imul
test
js
push
xchg
sbb
dec
gs
lea
sub
push
ljmp
cmp
outsb
repz
lds
sub
mov
push
inc
ss
sub
mov
loop
pop
repz
or
cmpsl
jns
adcb
inc
cld
fistl
or
jg
pop
push
mov
push
push
mov
lret
xlat
pop
and
pushw
leave
push
mov
cmp
mov
jl
mov
int
adc
pop
pop
sbb
popf
xor
cmp
mov
cmp
or
dec
cmpsl
jmp
xchg
hlt
push
and
ror
aaa
or
xorb
mov
imul
fisttps
sti
sti
rorl
lret
add
and
out
test
imul
mov
jb
pusha
add
lods
mov
inc
test
enter
pop
decl
aam
int
bound
fisttpl
in
in
push
scas
rolb
add
mov
shll
dec
sbb
mov
lcall
das
dec
lods
xchg
xor
lock
inc
cmpsb
enter
sub
cs
in
ret
cmp
lods
es
pop
or
shlb
into
or
lds
popa
adc
in
adc
mov
cld
sbb
pushf
add
mov
jns
addr16
in
and
fisttpll
aaa
xorl
shrl
cmp
pop
orl
mov
mov
mov
imul
xchg
mov
xlat
stos
mov
sub
xchg
mov
and
mov
leave
mov
mov
loope,pn
jno
repz
cmpl
pushf
sti
push
jge
xchg
fildll
loope
push
loopne
xchg
stc
jbe
xchg
push
jnp
xlat
lret
mov
and
inc
out
hlt
sub
pop
adc
std
icebp
lea
push
in
pop
mov
adc
push
icebp
adc
movsb
add
lds
outsl
test
sbb
hlt
das
dec
jge
xor
jg
mov
ljmp
xchg
stos
mov
mov
push
xchg
pop
pusha
mov
aaa
test
pop
jmp
punpckhdq
cwtl
mov
sub
pushf
jae
dec
mov
sub
inc
or
adc
sahf
fdivrl
rcrl
mov
xchg
jl
dec
lock
stc
cmc
pop
mov
cmp
mov
and
lahf
mov
pop
incb
or
xlat
shr
dec
loope
insb
rorl
ljmp
int3
movsl
cmc
ja
frstpm(287
int3
and
inc
xor
push
adc
inc
arpl
aad
dec
pop
xlat
aam
stos
pop
jmp
mov
jne
cltd
pop
js
mov
sub
sbb
pop
push
cwtl
loop
shll
gs
loop
dec
mov
fildl
and
add
lods
dec
xor
fs
push
add
jne
fmuls
pop
sub
mov
loope
mov
xor
xchg
jge
sub
mov
je
dec
pop
shlb
repnz
xchg
sbb
out
leave
dec
mov
loop
adc
jae
dec
and
sub
sbb
dec
insl
mov
inc
jge
fwait
adc
add
adc
loopne
out
mov
mov
jmp
xor
sti
xor
xchg
ds
sbb
insb
or
or
and
std
clc
loope
daa
leave
push
sub
aam
enter
lret
das
push
xor
jnp
add
pop
add
sub
ret
ror
add
ret
or
insl
pop
adc
mov
daa
mov
push
fwait
lods
fadds
cmp
sub
icebp
fsubrs
int3
xor
xchg
add
mov
push
cli
das
mov
shr
push
push
cmp
loopne
hlt
icebp
mov
ret
fisubs
push
sti
aad
push
lock
cli
out
mov
fstl
adc
mov
xchg
inc
outsl
and
test
push
jmp
dec
shlb
push
mov
enter
call
call
jmp
bound
lcall
xlat
jle
insb
pop
ret
scas
adc
add
repnz
movsl
rorb
or
std
rorb
dec
sar
stos
lret
nop
das
push
lahf
sub
mov
je
adc
in
insl
es
dec
and
fistpll
sets
inc
jo
mov
lock
popa
inc
adc
je
popa
rcrl
lret
push
ret
nop
pop
aad
mov
mov
mov
fcoms
in
jecxz
int
cmpsb
divb
add
lock
lock
pop
or
mov
mov
fmulp
sub
pop
cmp
or
cmp
js
pop
jb
repnz
xchg
shlb
fmul
jno
std
jno
cmpl
lock
call
js
inc
loope
dec
or
inc
cmp
aam
xorl
inc
dec
mov
jb
mov
arpl
aas
mov
adc
icebp
insb
dec
dec
pop
push
pop
test
fldenv
inc
aas
pop
aas
stc
pop
or
orb
call
stos
icebp
loopne
mov
mov
add
mov
enter
xor
pop
hlt
out
loope
imul
sbb
jg
jne
adcl
pop
xlat
test
inc
in
sub
sti
jecxz
aam
movl
hlt
sbb
add
jne
or
adc
dec
and
test
mov
add
dec
inc
sbb
adc
sbb
xchg
loope
addl
aam
jmp
push
mov
adc
outsl
dec
add
mov
subl
dec
je
cltd
fnstcw
in
dec
xchg
or
mov
lcall
xchg
and
fbld
ja
pop
mov
adc
cmp
xchg
push
adc
leave
sub
mov
mov
pop
or
jbe
mov
xor
enter
push
jl
sbb
jb
popf
mov
imul
js
mov
into
cmp
out
and
mov
jnp
adc
xchg
xor
lods
xor
pop
and
inc
out
sbb
shlb
sbb
repz
adc
icebp
test
scas
cmp
mov
imul
xchg
aam
mov
out
shlb
xor
les
mov
mov
xor
ja
fs
fildl
jle
jp
xlat
xchg
or
cli
ss
push
push
or
mov
aas
xchg
mov
inc
dec
jns
push
imul
xchg
sti
sub
stos
and
jo
inc
mov
jmp
mov
add
adcl
xchg
mov
leave
push
fdecstp
cli
sbb
pop
or
sub
popa
inc
repz
jno
fs
ds
js
jns
or
cmc
ja
mov
clc
push
test
jb
fucomp
adc
dec
adc
xor
loopne
fistl
cmp
xor
xchg
pushf
jnp
call
push
inc
or
aaa
mov
adc
push
push
mov
clc
mov
adc
test
lods
inc
adc
xor
mov
int
fists
sbb
scas
sbb
test
mov
imul
mov
adc
hlt
push
xor
inc
out
dec
idivb
xchg
cmp
lcall
pop
imul
jecxz
adc
call
mov
test
fwait
ljmp
out
es
fs
ja
xchg
sub
cmpb
cmovne
adc
xchg
xor
dec
xchg
pop
dec
enter
jmp
ficompl
xchg
aad
mov
sbb
mov
shrb
movsb
cmp
scas
xor
mov
push
push
scas
xlat
mov
imul
ret
add
push
pmaddwd
pusha
shll
les
fiaddl
cmp
imul
mov
fistps
xorl
mov
xchg
mov
es
xor
out
cmp
shlb
test
push
dec
mov
cli
xchg
sbb
cmpsb
iret
cltd
das
and
sub
cli
jg
mov
xor
rclb
adc
repz
xchg
cld
shl
jmp
nop
neg
jge
and
or
stos
mov
js
inc
push
adc
arpl
mov
ds
xchg
dec
pop
ret
scas
pop
jg
push
lods
inc
movsb
xor
push
ret
mov
pop
fwait
mov
pusha
inc
jle
stos
add
rolb
pop
stos
test
inc
cmp
xchg
xor
push
packuswb
sub
inc
jae
rcl
add
jecxz
cmp
xor
test
imul
cld
mov
xchg
sbb
mov
ss
movsl
test
cmp
in
rcll
sti
test
andb
mov
cmpsl
mov
sbb
fcoml
jmp
add
int3
arpl
jg
push
gs
and
adc
fisubs
dec
mov
push
xchg
call
lock
std
mov
sarb
data16
xchg
shlb
dec
or
stos
push
cs
rorl
outsb
insb
jg
push
mov
movb
shll
adcl
pop
pop
cwtl
xor
sbb
mov
addr16
shlb
aaa
xchg
sti
leave
subl
add
push
dec
and
fcoml
push
rorl
mov
adc
xchg
pop
lea
test
test
pop
or
adc
bound
jl
rolb
dec
xor
jle
xor
cmc
mov
inc
lahf
pop
pop
add
ds
std
hlt
adc
ss
inc
xchg
ss
call
dec
out
lods
push
mov
or
pop
xor
and
data16
pop
pop
mov
and
leave
mov
sub
lret
int
adc
iret
mov
push
arpl
pusha
popa
mov
jb
sbb
sbbl
xchg
xor
or
push
xchg
ret
mov
cmp
cld
sbb
jg
or
out
stos
test
aad
mov
push
insb
jp
push
pop
ja
das
pusha
xchg
das
movzbl
fdivrs
fwait
repnz
rcrb
xor
call
and
inc
push
pop
and
aaa
inc
sti
ds
mov
mov
cli
add
test
sbb
push
mov
mov
arpl
shll
push
inc
sbb
in
lods
pusha
cltd
mov
fadd
cld
and
and
inc
xor
lods
lcall
stc
pop
mov
inc
xchg
fwait
fwait
ljmp
cltd
imul
lods
mov
and
test
inc
std
rorb
inc
loope
or
inc
pop
mov
cmpsl
add
xor
je
sbb
jle
cmpsl
sub
cmp
pop
repz
cmp
test
lret
orl
pop
or
aas
pusha
call
movsb
aam
push
fs
clc
mov
movsb
arpl
negb
xor
mov
mov
sub
stos
push
xor
inc
das
clc
lds
aam
xchg
cmp
add
hlt
aam
iret
insl
adc
mov
les
hlt
popf
push
cmp
mov
ss
popf
aas
cmpsl
icebp
inc
add
mov
mov
shl
add
insl
xor
xor
into
adc
scas
divb
mov
xor
adc
jl
jne
lahf
popf
test
cwtl
pop
jbe
cmpsl
mov
sub
dec
popa
test
shl
adc
je
push
and
fmuls
push
sub
xor
fstps
in
push
pop
aam
test
xchg
popf
and
add
pusha
cmp
jbe
or
fildl
sbb
xchg
scas
mov
lods
mov
add
dec
xchg
iret
pushf
lock
and
dec
add
mov
pop
inc
mov
stos
push
jg
adcb
adcl
mov
mov
xchg
test
mov
cmp
imul
enter
push
cmp
xchg
jo
inc
mov
jne
sub
xchg
fwait
arpl
mov
in
mov
test
shrl
sbb
lods
mov
sbb
xchg
pop
mov
popa
lods
mov
adc
adc
xchg
icebp
sahf
sub
aaa
testl
adc
push
lds
ret
mov
xchg
dec
repnz
sbb
dec
and
mov
dec
mov
data16
push
fcom
mov
and
dec
inc
push
and
popf
je
mov
xor
jmp
rcrb
mul
subb
push
sub
and
pop
and
mov
ret
lret
scas
mov
outsb
les
dec
aas
mov
add
mov
xor
xor
enter
pop
nop
add
ret
pop
jnp
jns
in
inc
aas
jmp
jle
sub
adc
inc
add
out
adc
inc
pop
lret
inc
sbb
dec
push
xor
shrb
mov
adc
popf
add
adc
int3
push
cltd
mov
aas
aas
cld
das
rolb
xchg
mov
loopne
push
in
jmp
test
add
dec
js
push
mov
jg
call
sbb
mov
push
cwtl
xchg
pop
std
scas
push
push
jno
dec
ret
mov
or
outsl
mov
test
inc
push
mov
xchg
enter
int3
pop
aam
push
subb
int
popa
outsl
sbbb
mov
xchg
and
popa
into
rcrb
xchg
ss
hlt
ret
call
push
mov
out
jge
lods
jbe
pop
dec
iret
xchg
repz
dec
add
xor
daa
pop
jnp
ret
movq
add
sarl
adc
sbb
mov
cld
bound
fucomi
jo
ret
subb
or
mov
dec
test
fwait
jae
inc
inc
out
rol
popa
lods
cmp
push
mov
and
jae
mov
sarb
stc
mov
pop
jle
scas
aad
push
ja
mov
int3
xchg
add
stc
or
cmpsb
jnp
or
int3
adc
pushf
sbb
out
mov
xchg
imul
scas
rorb
fbstp
jae,pt
and
mov
jne
mov
dec
xchg
jge
mov
mov
pop
ret
pop
jl
mov
mov
push
jmp
addr16
jbe
aaa
out
jle
xchg
outsb
mov
dec
cmp
call
jno
cmpl
mov
sbb
mov
jmp
clc
lock
out
xor
scas
movsl
daa
xor
xchg
insl
cmp
sbb
outsb
nop
jl
hlt
cvtpi2ps
aas
xchg
adc
sti
push
scas
cmp
lods
fcmovnbe
popl
sahf
ret
inc
mov
mov
push
add
mov
sub
xor
iret
daa
imul
clc
fistps
add
lds
daa
wbinvd
aas
pop
add
fld
leave
scas
iret
cltd
imul
push
inc
mov
push
mov
addb
int3
sub
int
fmull
sbb
popf
scas
or
and
jae
lods
jg
pop
dec
xchg
jb
adc
les
mov
inc
loop
fstpt
xorb
push
fisubrl
push
add
xchg
push
dec
loop
daa
inc
lcall
out
mov
repnz
and
leave
pushf
pop
mov
cwtl
mov
popa
jle
lahf
mov
insl
jp
xlat
pushf
lea
scas
jae
adc
mov
dec
or
rcr
dec
pop
mov
cld
sahf
add
lcall
pop
push
or
fisttpl
mov
call
pop
ret
and
mov
inc
add
imul
dec
xor
dec
ror
fsubs
mov
and
mov
jp
fcmovbe
add
sub
inc
clc
mov
push
mov
pop
lds
loop
inc
jae
mov
sahf
popf
int
movsl
incb
sbbb
pop
test
icebp
fildll
adc
inc
mov
xchg
in
or
pusha
imul
ja
daa
rclb
stos
outsb
mov
iret
mov
jne
jae
push
xchg
add
xchg
gs
test
sarb
cli
sarb
push
sub
pop
daa
cmp
sbb
sar
into
xor
scas
mov
ljmp
push
sub
mov
adc
mov
mov
push
jp
cmp
mov
pusha
xchg
pop
ret
fnsave
jge
sbb
dec
movsl
xchg
sub
pop
mov
sbb
mov
xchg
jmp
icebp
xor
icebp
ret
pop
pop
cmc
xor
jno
xor
in
lahf
lahf
cmp
xchg
and
push
loopne
jmp
roll
jbe
in
add
dec
xchg
dec
and
shlb
inc
xchg
jo
mov
cmp
ljmp
add
and
dec
sbb
xor
jmp
dec
push
addr16
nop
mov
jmp
push
out
sahf
sbb
push
cmc
cmp
pop
and
mov
or
push
push
xchg
shlb
push
jnp
dec
xor
fists
jle
outsl
repnz
int3
xchg
es
cmp
add
bound
in
sarb
aas
gs
cmpsb
xorl
cld
fadd
jg
ret
popf
push
mov
jmp
mov
mov
jo
dec
sbb
test
rclb
mov
dec
sbb
mov
jl
inc
or
aad
xchg
test
js
jp
sub
mov
dec
mov
scas
dec
mov
ljmp
sbb
subl
jne
adc
jp
fsin
scas
sbb
push
loope
lahf
jbe
mov
mov
out
pop
lret
sti
in
push
movsl
pushf
aaa
in
fstpl
mov
or
lahf
call
xor
jecxz
sub
adc
scas
popa
popf
mov
mov
stos
loopne
outsb
lods
pusha
das
out
jmp
bound
sbb
or
fs
adc
in
and
out
add
mov
cwtl
dec
inc
sarb
lret
fstpt
adc
aam
adc
aas
shll
repz
push
aaa
movsb
sbbl
pop
mov
sbbb
pop
push
ss
adcl
cmp
cmp
mov
in
inc
insb
jne
push
xor
jbe
js
sub
mov
loope
scas
fyl2xp1
mov
sahf
jecxz
mov
pop
cmp
jnp
loop
push
jae
add
mov
xorl
lods
add
cmc
imul
shl
dec
mov
mov
push
inc
pop
popf
lock
imul
xor
mov
shl
adc
js
ret
imul
lds
popf
nop
iret
mov
sub
mov
push
cmpsb
mov
aas
jp
push
lock
aaa
cltd
dec
xchg
sub
mov
testb
test
gs
ds
jge
and
mov
and
cmc
ds
mov
cmp
idiv
stos
pop
pop
je
dec
mov
lock
mov
rcl
xchg
int
mov
in
cmc
lock
repz
adc
test
stc
mov
push
jnp
pusha
andl
shr
out
inc
jne
cmp
dec
sbb
or
lock
outsb
mov
faddl
cmpsb
mov
nop
push
lret
push
push
call
repnz
outsb
cmpsb
sub
xchg
in
bnd
mov
stos
jnp
popf
iret
ljmp
jno
sub
js
insb
loopne
incb
lahf
lock
sbb
popa
jp
add
lret
test
jl
push
pop
xor
icebp
pop
pop
iret
stc
std
mov
mov
mov
inc
mov
ds
mov
sub
xchg
dec
mov
imul
adc
or
sbb
punpckhdq
movsb
cmpl
jl
ds
aaa
sahf
imul
adc
js
insl
inc
movsb
subl
inc
loope
lret
or
mulb
dec
sti
shll
cltd
push
ret
cmpsb
sbb
xchg
lret
mov
cmpsb
sbb
dec
insb
pop
in
cmp
cmp
sub
ljmp
insl
mov
inc
jg
sub
test
lods
sti
dec
jecxz
or
add
lret
xchg
or
push
movw
out
sbb
pminsw
ja
xchg
mov
aam
in
popf
xchg
js
adc
push
std
jb
inc
jmp
fnstcw
and
jecxz
or
ds
mov
jge
mov
jge
jbe
push
aam
sbb
cmc
jg
xchg
aad
xor
push
dec
enter
movsb
jmp
dec
fnstsw
push
out
ret
lret
data16
ret
adc
mov
sarl
mov
and
es
outsb
repnz
pop
push
lahf
dec
testb
push
imull
cmp
shrb
sbbb
inc
inc
std
outsb
shlb
jns
push
testb
pop
xor
popa
leave
jno
add
mov
mov
dec
inc
iret
add
sarb
vrcpps
sbb
fwait
loopne
sbb
pop
add
fisubs
pop
sbb
push
inc
out
jle
pop
jbe
cs
adc
je
jo
test
mov
xor
mov
cmp
enter
cmp
sbb
cmp
cmp
loop
stos
addl
cli
and
sahf
int
inc
test
pop
or
push
mov
cmpsl
cmc
cld
jge
jne
push
lods
sbb
lock
fisubrs
add
repz
inc
mov
pop
and
data16
dec
add
mov
and
das
pop
sub
aaa
fwait
aad
shll
jmp
adc
scas
and
outsb
or
notb
and
out
pop
sbb
aad
inc
fst
jo
gs
insl
repz
loop
in
jp
int
dec
test
outsb
cltd
mov
aam
or
iret
cmp
sub
int3
lret
movsl
dec
xor
rclb
lods
stos
adc
rcr
lods
gs
add
inc
xor
frstor
xchg
add
push
aad
sub
add
pop
xchg
lock
or
push
pushf
mov
push
sbb
test
leave
cmp
sbb
mov
push
sti
aaa
js
inc
sbb
ss
adc
cmc
xor
jne
mov
ret
jge
jnp
cltd
pushf
mov
mov
cmpsl
hlt
out
out
or
int
or
inc
push
xchg
inc
add
iret
das
xchg
pop
nop
andl
add
add
add
dec
clc
idivb
lret
test
je
lock
adc
cmp
jp
and
in
dec
in
adc
incl
test
bound
push
xchg
pop
sbb
push
jb
xchg
jo
push
ss
maskmovq
ja
push
push
push
mov
repz
pop
jns
sbb
xor
add
adc
dec
neg
mov
aad
xchg
inc
sbb
je
mov
out
negb
pop
stos
lds
pop
push
dec
jmp
dec
lock
xor
add
js
xchg
test
xor
aad
jl
insb
jno
xchg
or
inc
popa
jb
pop
pop
std
push
cmp
shrb
stos
cmc
jecxz
into
pop
clc
and
xchg
push
cs
jnp
jle
outsb
xchg
fidivl
hlt
shrl
sub
das
push
rcl
andb
adc
xchg
mov
daa
daa
or
jns
jbe
sbb
popa
ljmp
pop
mov
and
scas
dec
mov
enter
jge
pop
sub
mov
or
or
daa
cs
testb
out
adc
or
imul
xlat
pop
xchg
push
pop
mov
clc
mov
push
inc
sub
movsl
jnp
inc
add
or
xor
out
and
mov
push
outsl
inc
das
add
stc
inc
jmp
xor
xor
loop
cltd
push
cmp
inc
sbb
in
dec
imul
jmp
add
lahf
xchg
xor
sub
cmp
inc
or
cld
adc
ds
mov
hlt
xrelease
out
mov
xor
or
xchg
pop
mov
mov
ljmp
inc
inc
loopne
adc
mov
in
add
sbb
pop
cld
mov
ds
in
ss
cmp
enter
hlt
das
shll
dec
jno
dec
adc
xchg
cmp
fsubp
mov
sub
movsl
cmpb
in
stc
int
inc
aaa
pop
mov
mov
adc
dec
call
xor
fmul
push
loope
mov
mov
out
mov
or
jnp
stos
xor
pop
push
inc
mov
push
or
or
shll
jmp
cmpsl
push
lret
aam
outsb
mov
push
pop
das
xor
push
cmp
pop
inc
movsl
aam
shrb
scas
icebp
sub
mov
dec
push
fst
test
mov
bound
iret
int3
movsb
push
jnp
push
cmp
test
stos
cmp
test
dec
inc
push
sub
lahf
dec
jge
xchg
inc
mov
mov
in
jmp
push
lock
cmp
negb
icebp
test
movsl
dec
addr16
fstpl
clc
push
pop
rcll
and
jo
pop
add
jbe
or
dec
lcall
shll
and
mov
stos
inc
pop
inc
outsb
jecxz
insb
adc
push
movsb
mov
subb
xor
adc
arpl
cwtl
mov
xor
je
cmpsl
and
mov
push
das
fcmovnu
pop
xor
fwait
push
add
fdivrp
lret
push
ljmp
dec
test
in
mov
inc
sub
push
int3
dec
pop
dec
popf
xor
jg
inc
and
cwtl
push
mov
and
negl
rol
push
dec
dec
dec
jns
out
jns
cs
adc
and
rclb
ljmp
mov
imul
ss
movsb
loope
adc
pop
adc
aad
adc
iret
inc
mov
iret
xor
xchg
pushf
dec
adc
fwait
insl
in
fildll
cmpsb
ljmp
push
repnz
insb
xor
mov
imul
jmp
scas
cmpsl
inc
jno
mov
pop
mov
int
or
xor
or
adc
jmp
inc
adc
sub
cmpsb
lret
shrl
cli
xlat
js
fcompp
mov
mov
outsb
mov
xor
aas
mov
mov
scas
sti
in
jns
and
cmp
cltd
stos
push
sub
out
inc
imul
insl
or
inc
inc
mov
mov
ds
push
pop
int3
push
adc
dec
or
scas
push
jg
or
push
xchg
dec
js
loope
cmp
lcall
fcomi
mov
mov
pop
outsb
leave
clc
outsb
fisttpll
and
sahf
inc
or
or
popa
mov
fidivl
test
adc
pushf
gs
and
mov
call
or
push
xchg
and
sti
cs
inc
sbbl
insb
xchg
mov
adc
mul
or
imul
mov
sbb
xor
fisubl
push
fmuls
xchg
adc
or
adc
and
shll
loope
xchg
cmp
lock
or
out
mov
sti
and
mov
in
jns
mov
mov
inc
stc
sbb
cmp
hlt
hlt
xor
std
jge
sbb
call
and
rcr
lcall
icebp
or
mov
fildll
mov
xchg
test
int
sbb
xor
sub
sub
mov
and
cmp
cmp
adc
fiadds
xlat
dec
adc
and
xlat
push
test
mov
xor
clc
cld
dec
loopne
mov
push
imulb
lods
rol
lcall
aaa
add
test
enter
shl
rcr
dec
adcl
imul
xor
mov
push
popa
lods
mov
fidivrs
lods
push
jle
test
pop
lret
add
ss
std
aaa
push
mov
add
inc
mov
cmc
push
cld
push
fbld
sbb
mov
pusha
xor
adc
movsl
xlat
imul
jno
mov
adc
mov
ds
mov
mov
cmp
cs
fld
sbb
ja
fnstsw
sbb
pusha
out
fdivrl
jge
into
dec
fldl
outsl
scas
mov
or
fs
jo
mov
js
outsb
or
jmp
ds
or
jae
sub
mov
pushf
jns
jns
mov
mov
aad
inc
leave
push
lds
clc
popa
roll
mov
ret
xor
daa
cmp
sub
cld
jp
or
jmp
scas
jge
lea
xlat
cwtl
cmp
fistpl
jmp
les
fisubrs
repnz
jno
stc
sbb
mov
mov
add
dec
das
iret
push
mov
stos
pop
or
fidivrs
movsb
mov
dec
cld
test
mov
inc
cmp
jb
or
ljmp
inc
movsl
in
adc
mov
jl
enter
add
decb
sti
lods
bound
inc
js
in
cld
mov
jmp
xor
add
lret
push
jno
pop
jo
push
xchg
push
add
xlat
sub
dec
push
int
cmpb
in
jae
outsl
pop
movsl
mov
fmulp
arpl
setno
pcmpgtw
mov
imul
scas
xchg
cli
adc
notl
lock
popf
call
pop
jno
xor
out
lds
xchg
cmp
sbb
dec
mov
aas
add
pushf
add
aas
ja
mov
stc
cld
ret
mov
test
fwait
pop
mov
and
sahf
jno
or
adc
jmp
mov
sbb
jb
out
fcom
pop
add
mov
out
mov
popf
mov
or
ret
sub
jnp
lea
mov
into
mov
movb
or
pop
sarl
pusha
and
in
inc
inc
xor
xchg
xchg
or
sbb
imull
cmc
push
push
imul
sti
repz
push
sahf
xor
xchg
incb
and
xor
pop
push
and
imul
sbb
xor
sahf
aas
outsb
sub
jb
adc
and
inc
aam
mov
mov
mov
repz
xlat
jno
add
ljmp
inc
inc
adc
movsb
orb
jns
mov
testl
jo
inc
push
pushf
std
lds
lret
popf
loop
mov
daa
test
testl
fstl
test
shlb
icebp
mov
insb
adc
mov
lret
push
loop
lahf
ds
lret
xchg
adc
mov
pop
in
inc
andl
std
push
mov
or
push
pop
rorl
cmp
xchg
dec
ljmp
lahf
or
cmp
jg
jno
xor
xor
xchg
das
in
push
and
cmp
push
lret
dec
mov
in
in
test
xchg
arpl
adc
hlt
dec
adc
jbe
stos
or
enter
cmp
dec
or
pop
inc
sbb
addr16
jg
inc
sbb
cmp
pop
shll
xor
je
lret
std
adc
push
or
stc
xor
outsl
fistpll
inc
inc
bound
lcall
fnstcw
nop
subb
and
mov
icebp
lock
sahf
mov
push
test
inc
push
sbb
div
jle
loopne
push
cs
pusha
clc
lock
call
dec
arpl
sub
mov
inc
mov
in
jb
test
push
pop
sbb
mov
mov
mov
and
lahf
ss
or
inc
ljmp
pop
cmp
inc
push
jmp
cmp
dec
push
or
dec
pop
jp
cli
repz
jno
pop
imul
cltd
leave
xchg
sbb
pusha
shll
cmp
cs
fwait
dec
pop
lcall
nop
in
lret
or
adc
es
adc
adc
sub
push
xchg
push
push
sub
xchg
ljmp
sbb
daa
sub
mov
scas
andb
testl
into
xchg
ljmp
adc
add
xor
mov
inc
jmp
daa
cld
or
and
bnd
sti
movsl
sahf
xchg
mov
cmp
cmpb
orb
pop
repnz
leave
jb
jle
les
outsl
sub
pushf
jne
sub
adc
mov
ja
pop
je
jbe
test
pop
xor
mov
push
cli
cltd
andl
fcmovbe
loope
inc
xchg
lcall
mov
sub
out
fcompl
jo
add
push
adc
mov
dec
stc
inc
bound
add
cmp
in
lods
out
loope
mov
dec
adc
inc
pop
mov
scas
inc
std
push
jns
pusha
test
inc
adc
outsb
add
fstps
dec
iret
jecxz
xor
repnz
sbb
lahf
vpshad
push
pop
fldt
out
movsl
ds
cmp
add
add
ficoml
jnp
pop
in
int3
mov
sti
cwtl
stc
nop
mov
cli
mov
loopne
pushf
js
bound
add
add
popa
test
mov
xchg
pop
in
dec
lret
inc
pop
jnp
jno
ja
lods
mov
and
or
aas
jb
es
hlt
cmpsl
mov
pushf
mov
ljmp
sbb
movsb
sbb
test
jo
jle
mov
cmp
mov
xchg
dec
loope
mov
fnstenv
mov
push
pop
sub
sub
xchg
and
arpl
scas
bound
aam
lds
cmp
mov
jnp
mov
movsb
ret
mov
iret
sbb
int3
or
cmp
rcrl
mov
cmp
xor
sbb
inc
ret
push
aam
scas
mov
fsubr
cs
insl
mov
lea
jl,pt
jno
ja
jb
push
leave
add
es
icebp
dec
lock
adc
enter
pop
xchg
jo
cmpl
adc
movsb
pusha
push
push
out
pushf
sarl
push
out
pusha
or
or
xchg
sbb
xchg
cmp
xacquire
aad
and
cmc
jmp
jecxz
pop
xor
mov
scas
pop
repz
mov
adc
mov
inc
push
xlat
mov
enter
jge
push
mov
lret
mov
out
lret
rorl
mov
and
les
lret
bound
add
pop
mov
js
and
mov
mov
pusha
sub
sub
push
iret
xchg
pop
fildl
adc
cmpsl
test
insb
mov
movsb
jge
xchg
cs
out
ljmp
xchg
mov
xor
xor
sbb
jg
test
adc
das
hlt
push
sahf
insb
inc
in
shrb
mov
jle
loopne
mov
mov
shl
in
cmp
mov
mov
push
dec
or
in
pop
jecxz
aad
lods
push
mov
shrl
into
jge
lcall
inc
rcrb
jmp
scas
and
push
jne
cmp
jns
push
fs
inc
shlb
and
xchg
cli
xchg
sbb
in
adc
push
sti
cmp
arpl
ret
sub
lret
out
cld
sbb
lahf
adc
push
dec
les
sbb
add
rclb
filds
add
lods
add
push
div
repnz
jae
dec
repnz
push
xchg
pop
cli
mov
lods
dec
in
xchg
jb
cmc
aam
sti
iret
mov
fnsave
cmp
sub
out
lds
lock
inc
push
jl
aaa
loope
mov
mov
fisubs
add
jmp
stos
lods
mov
in
cmp
and
pop
sahf
rcr
jmp
dec
repz
ret
ds
and
faddl
iret
shll
ret
cmp
mov
push
popa
push
xor
push
scas
xor
scas
mov
sub
outsb
adc
fadds
jmp
int
data16
inc
or
push
xor
nop
jns
mov
rorb
cltd
mov
adc
call
push
seto
ror
scas
jno
and
fiadds
pop
into
in
cltd
cmp
push
push
cwtl
sbb
and
pop
mov
into
fcomps
es
ret
push
dec
mov
sub
into
adc
mov
mov
jmp
push
jmp
mov
mov
fdivrp
cltd
mov
jo
mov
fs
sbb
inc
in
sub
add
cmp
inc
imul
add
and
mov
lock
push
lret
aam
fistps
lea
inc
sub
shr
xlat
icebp
lret
jge
mov
mov
gs
divps
xor
pusha
xor
enter
sub
adc
sub
pop
and
push
mov
loop
dec
lods
fcmovnu
insb
movsl
add
in
xor
in
icebp
in
mov
push
jbe
push
pop
and
mov
jbe
or
inc
test
and
ret
nop
lock
dec
mov
sbb
xchg
ret
inc
adc
dec
ds
xchg
dec
fimull
fnstenv
add
xchg
imul
adc
jae
push
mov
or
xchg
jg
pop
push
xor
dec
mov
pcmpgtw
in
and
push
add
movsb
into
subb
ret
aad
repnz
fidivrl
adc
push
out
cmp
rcr
push
inc
inc
adc
sbb
enter
roll
adc
push
dec
bound
jno
icebp
fisubrs
sub
jb
cs
cltd
dec
je
mov
push
cmp
sub
add
lods
add
push
stos
shll
xchg
inc
popa
pop
leave
mov
cli
pop
add
mov
hlt
inc
lcall
adc
adcl
mov
mov
inc
mov
xor
fdivp
insb
int
xor
repz
jb
push
jmp
or
out
xchg
mov
jle
test
lea
adc
sahf
fnstenv
adc
xor
add
and
jle
jnp
mov
dec
cltd
je
movb
mov
popa
jmp
jno
xor
mov
ficompl
sbb
cmp
aaa
push
cmp
or
lcall
rclb
test
insb
dec
popa
sbb
sbb
adc
xchg
mov
or
mov
mov
sbb
jo
lret
ficomps
insl
pop
not
cmp
xadd
pushf
shll
int3
adc
adc
pinsrw
scas
daa
clc
pop
ja
mov
ljmp
fistpll
sbbl
testl
rolb
stos
or
dec
cmp
lret
cmpsb
popf
jecxz
ss
cs
scas
mov
jecxz
cmc
stos
shll
adc
lds
adc
push
mov
sarb
push
push
jbe
std
inc
pop
add
and
rcl
in
out
sahf
into
xor
lea
outsl
in
inc
shlb
mov
sbb
daa
mov
enter
sub
hlt
cld
subb
sbb
sub
dec
pop
jns
lcall
cmp
inc
adc
mov
cmp
xchg
xor
js
sub
outsl
inc
daa
es
and
pop
ja
shlb
xchg
xor
push
rcrb
int
enter
or
or
or
adc
pop
xchg
jnp
add
divl
pop
cltd
jp
aaa
mov
dec
sbb
out
mov
sbb
jg
push
outsl
xor
mov
in
aam
adc
int
mov
xor
mov
mov
filds
gs
inc
or
mov
xor
xchg
xchg
in
sub
loopne
dec
cmpsb
push
ss
mov
mov
in
out
int
or
jp
xchg
scas
fldt
dec
sub
xchg
std
rclb
mov
int3
push
dec
lods
pop
cmp
aas
pop
add
insl
add
jo
pop
jl
dec
dec
mov
fcmovnbe
fldenv
mov
loop
shrl
add
or
pop
mov
aad
rorl
push
loopne
in
mov
xlat
inc
out
push
sub
push
dec
bound
mov
or
incl
xchg
stos
mov
ss
jmp
xor
xor
sub
inc
mov
negb
arpl
std
mov
sub
or
cmp
rol
sti
hlt
fisubs
sbb
adc
data16
add
insb
xor
jp
jno
xlat
rcrl
sbb
out
das
push
dec
mov
fsubrs
sbb
mov
inc
stos
aad
and
inc
push
adc
lret
mov
ror
mov
or
fdivp
sub
jp
cmp
ljmp
scas
pop
test
pop
arpl
and
push
mov
pop
mov
xchg
xchg
stos
movsl
clc
jecxz
scas
mov
clc
pop
and
mov
pusha
into
jl
mov
mulb
rorl
out
movsl
test
fs
inc
sarb
jge
mov
call
inc
aad
push
rcll
inc
push
xchg
dec
inc
out
and
xlat
pop
mov
inc
xor
fcomps
push
sahf
subb
js
sub
inc
bswap
jp
cmp
push
xor
andl
sub
add
ffree
mov
push
jno
lcall
sti
rolb
das
pop
mov
mov
lea
fmull
incl
adc
scas
cmc
xchg
movsb
les
adcb
jmp
std
jp
push
jp
mov
lret
cld
or
jecxz
bnd
xor
mov
mov
dec
cli
mov
movsb
ret
rcrb
sbb
lahf
jb
and
push
in
jbe
xchg
sbb
and
sub
mov
push
mov
jle
in
mov
popf
into
adc
push
mov
mov
ret
in
ja
js
in
cli
push
subl
andb
lea
into
fcompl
add
std
lret
insb
shlb
xchg
lahf
out
jae
imul
mov
adc
pop
dec
push
jns
add
adc
mov
scas
dec
lahf
inc
xchg
nop
cmp
out
xchg
xor
out
sti
or
or
adc
testl
xor
fs
mov
jge
and
sar
push
idivl
clc
push
outsb
mov
insb
xor
and
icebp
lret
movsl
jp
mov
cmp
xor
popa
ret
cli
push
sbb
hlt
or
js
sahf
cmp
fucomp
mov
roll
stos
mov
cmp
and
divb
pop
fbstp
pusha
popf
js
das
jg
lea
push
add
inc
addb
neg
stos
aam
add
int3
adc
popf
xor
adc
xchg
jno
push
lea
push
loopne
xchg
adc
pop
iret
dec
lock
jne
xor
cmpsl
cmp
dec
cli
imul
jg
ss
sahf
and
cwtl
lret
xchg
or
jg
inc
loopne
lcall
mov
mov
xor
pop
cmp
cmp
shl
stc
int3
sbb
inc
push
pop
popf
xchg
mov
fidivrs
xor
mov
std
scas
inc
cmp
mov
mov
mov
out
hlt
fidivl
pop
fucom
call
adc
sbb
inc
loop
pusha
gs
stc
mov
lcall
dec
adc
xor
mov
bswap
mov
adc
pop
push
mov
dec
adc
test
mov
mov
jns
pop
jp
stos
outsl
mov
fistpll
mov
cmpsb
xor
shll
int
mov
pusha
mov
cmp
mov
gs
cmc
jns
jp
sbb
xchg
mov
xor
jne
mov
push
jmp
sbb
mov
jnp
xchg
inc
add
lret
aaa
shlb
lods
or
xor
pushf
xchg
aaa
nop
gs
or
pop
insl
int
add
outsl
add
pop
andb
pop
fwait
or
or
fs
push
dec
dec
data16
jecxz
test
data16
fcmovnu
sbb
and
xor
cmp
adc
out
push
lods
mov
movsl
out
mov
mov
fistpll
adc
hlt
lahf
and
push
test
sti
xchg
jecxz
dec
les
div
jns
push
pop
hlt
das
fs
jmp
cmpsl
pop
mov
xor
scas
loop
sub
pop
mov
add
clc
adc
nop
sbb
pop
movsl
mov
outsl
rolb
inc
xchg
aam
test
mov
xor
cmpb
decb
adc
jg
or
shll
bound
push
mov
shl
xor
pop
jae
hlt
or
jno
or
push
iret
sub
into
mov
jp
sub
lret
mov
es
clc
jg
aad
scas
mov
push
out
add
mov
mov
jl
adc
je
mov
add
nop
mov
push
adc
call
fisubrs
push
popf
xor
mov
fidivl
in
lahf
insb
daa
test
adc
cwtl
push
incl
aam
mov
jg
lods
imul
mov
mov
ret
clc
ja
pop
movsb
adc
push
xor
mov
adc
mov
sub
mov
jmp
jecxz
inc
rcrb
scas
jl
test
sub
in
jecxz
das
ljmp
or
mov
movsl
out
rcrl
mov
push
cmpl
repz
pusha
mov
clc
fsub
int
iret
fmulp
push
aas
add
dec
gs
and
inc
jmp
xchg
jp
sub
pop
out
lea
mov
and
ss
pushf
mov
lcall
xchg
cmpl
js
lret
iret
mov
mov
sbb
bnd
mov
aam
xor
fiadds
push
adc
arpl
sub
mov
adcl
js
inc
fwait
ljmp
inc
mov
mov
inc
xchg
cwtl
cmpsb
ljmp
stos
insb
jne
out
inc
push
cmp
push
shrl
scas
or
mov
es
loope
enter
insb
cmpsl
inc
and
insb
xor
fidivrs
rcr
les
cmpsb
xchg
jb
mov
and
mov
ds
stos
jno
fstps
daa
adcb
ljmp
outsb
test
and
mov
xor
adc
push
sub
mov
pushf
out
les
icebp
inc
mov
cmpsl
in
xchg
cmp
dec
mov
mov
dec
ficoml
loopne
and
pushf
sub
and
lods
push
mov
cmpsl
push
dec
popa
stc
add
add
or
pop
imul
pop
or
stos
mov
mov
idivb
mov
movsb
pusha
fmulp
and
loopne
xor
mov
pushf
int
xor
scas
xor
xchg
inc
aad
addr16
ret
sub
pop
insl
xorb
cwtl
adc
shlb
dec
pop
or
jle
es
mov
rolb
mov
mov
fcmovnbe
mov
pop
or
mov
ret
leave
inc
das
mov
test
lcall
xor
jg
scas
call
mov
or
mov
enter
jecxz
inc
test
push
ret
or
or
push
pop
mov
lock
jg
adc
rcl
or
adc
ret
neg
xor
xchg
enter
jecxz
xchg
inc
ret
ror
into
sbb
lea
pop
xor
push
loope
mov
sar
mov
mov
add
sarb
sti
mov
daa
rorb
out
push
mov
loope
mov
loope
test
or
and
xor
xchg
dec
sub
mov
fidivrs
xchg
cmpsb
or
xor
repz
loopne
mov
mov
ficoms
push
dec
out
mov
test
fcomps
in
ljmp
enter
jle
sahf
setg
mov
add
fs
xchg
cmc
adc
pop
popf
adc
xchg
push
pop
push
lret
stc
dec
lret
xchg
and
stc
push
dec
sbbb
xor
mov
jp
sbbb
sahf
adc
insb
xchg
aas
inc
sub
sbb
mov
cmpsb
mov
stc
negl
push
mov
push
lcall
loopne
xor
popa
inc
cld
lods
adc
aad
sub
push
adc
loopne
data16
je
xor
lahf
and
fwait
cmpsb
js
pushf
sub
repz
lock
xlat
cmpl
push
mov
nop
movsb
ljmp
inc
shll
adc
sub
xorb
xor
jg
lahf
mov
jne
ljmpw
ljmp
lock
mov
std
notb
cwtl
mov
adc
jne
aad
cmp
xchg
aam
xor
push
push
dec
shrl
ret
aaa
aas
outsb
inc
dec
bound
mov
xor
pop
sbb
inc
push
lods
out
lahf
rorl
std
cmpsl
jns
aam
lcall
jp
mov
cmp
mov
lret
lods
iret
xchg
xchg
mov
jbe
push
outsb
mov
mov
mov
arpl
push
sub
sub
xor
test
add
add
push
cmp
push
inc
pop
and
jmp
adc
sbb
lock
inc
push
pop
add
stos
or
mov
sub
pop
dec
jb
and
mov
pop
out
fs
mov
jmp
jns
or
xchg
pop
sub
and
decb
mov
sub
cmpl
or
mov
loope
stos
inc
xchg
dec
arpl
js
mov
stos
xor
lock
xchg
out
sti
test
xchg
cmp
mov
push
jae
mov
add
add
ror
das
mov
dec
dec
fs
cmp
pop
sub
iret
popf
sti
sbb
insb
jne
push
insb
mov
iret
test
pop
sbb
pop
inc
mov
push
adc
lret
jmp
pop
mov
xor
ja
inc
push
sub
lds
xor
loope
mov
push
jbe
jne
or
arpl
stc
test
lcall
and
arpl
inc
std
or
mov
subl
nop
mov
sbb
or
add
test
js
dec
mov
adc
js
xchg
icebp
int3
ss
daa
cmp
mov
inc
hlt
arpl
jns
push
imul
jb
inc
jmp
sbb
cmp
bound
insb
push
push
and
adc
aas
jl
adc
std
nop
add
lds
sti
lods
fxch
test
cld
les
pop
push
sub
jg
fwait
jnp
in
pop
push
and
inc
and
xchg
sahf
mov
les
leave
xchg
and
xor
cmpsl
xor
mov
mov
call
inc
in
mov
lods
enter
jecxz
and
into
mov
fwait
shlb
xor
jl
mov
pop
insb
adc
jbe
test
cs
outsb
pop
and
cmpl
xchg
pop
bound
cmc
sbb
mov
sub
inc
add
push
cld
mov
int3
pop
push
mov
inc
jp
jne
inc
sbbb
mov
mov
stos
test
sub
popa
in
enter
xor
cmp
lea
sarl
mov
push
call
xor
pop
nop
stos
xor
jns
cmc
or
and
pop
lea
pop
out
xchg
cld
mov
dec
mov
pop
mov
fidivrl
cmc
jle
xchg
push
push
roll
dec
pop
dec
shrb
in
fadd
clc
push
mov
mull
inc
iret
cmp
or
fisubrl
and
push
mov
or
push
cmp
mov
repnz
mov
xchg
addr16
jns
mov
sti
imul
in
add
ja
roll
dec
fnsave
cmp
lods
hlt
addr16
push
loope
pop
cmp
dec
adc
paddsb
mov
sbb
dec
push
inc
and
cmpsl
add
pop
cmc
cmpl
mov
pop
cli
cmc
mov
enter
lahf
xchg
rcl
addr16
inc
and
loop
jb
push
xor
stc
mov
aaa
dec
push
add
int3
cmpl
shrl
ficoml
out
xchg
mov
dec
mov
shll
outsb
xchg
fstl
sbb
pusha
dec
sub
jle
cmp
shlb
sbb
out
add
mov
clc
pop
lahf
nop
xchg
int3
jp
adc
jle
push
jle
add
das
jl
add
or
lods
ficomps
data16
movsl
fimuls
notb
aas
push
xchg
in
test
and
add
xchg
cmp
repz
sbb
stos
sbb
pop
jo
inc
xchg
fdivrl
orl
loopne
mov
aam
into
setle
subl
adc
mov
rolb
inc
add
push
xchg
adc
or
shll
in
jo
mov
mov
in
cwtl
jl
push
cld
test
sub
fs
data16
push
lods
mov
int
mov
ret
fcompl
test
jnp
jp
fadd
test
inc
xlat
divb
mov
fcoms
pop
dec
xchg
xchg
fsubl
pop
sub
enter
arpl
mov
jno
and
ret
push
leave
test
mov
cmp
xchg
mov
mov
inc
mov
adc
sub
fdivrs
shll
xor
mov
and
sbb
xchg
js
cmp
iret
jl
or
push
xor
ljmp
movq
aas
adc
mov
mov
sarb
add
xchg
mov
jb
fs
xor
push
pop
sbb
xchg
fmul
dec
lock
pop
test
xor
je
dec
stos
sbb
lcall
xlat
dec
sbb
dec
pusha
pop
push
hlt
cmp
imul
pop
push
ffreep
or
or
jo
cltd
pop
outsl
push
add
xchg
rcl
mov
adc
ljmp
fldcw
push
jmp
pop
and
das
xchg
or
out
xchg
stc
pop
cmpsb
xchg
sbb
sub
jae
fcomps
cmp
and
add
cli
add
test
rep
fcmovbe
jecxz
hlt
jg
cmc
fisubrl
jbe
inc
mov
xchg
test
mov
aad
mov
sti
push
sbb
push
dec
cmp
xor
sub
dec
cli
in
cmp
mov
jle
pop
add
jl
mov
pushf
sahf
std
outsl
pusha
xor
push
es
out
jmp
add
popa
pop
jle
adc
test
cmpsl
std
mov
mov
loope
cltd
dec
jnp
fisttpl
push
xor
cwtl
xchg
lods
mov
or
rcll
or
add
out
adc
cld
loop
icebp
mov
repnz
adc
rcrb
in
or
mov
mov
push
and
repz
sbb
lahf
dec
adc
mov
gs
mov
push
or
imul
cmp
jb
jecxz
mov
dec
mov
cmp
inc
rolb
add
enter
sub
jns
dec
aaa
push
popf
gs
cmp
mov
jbe
mov
pushf
and
xchg
add
or
push
enter
lea
repnz
xchg
xor
sub
sti
dec
dec
jnp
mov
push
loop
mov
sti
and
ds
add
pop
push
pushf
out
xchg
in
or
lds
or
inc
jb
popf
dec
jns
rorb
pop
outsb
jl
and
or
cmp
stos
dec
xchg
shrb
in
jecxz
mov
ljmp
cmpsl
mov
inc
jle
pop
push
out
sub
pop
ja
cmpsb
iret
ror
sbb
fsts
dec
xchg
xor
fwait
lahf
lcall
jno
ret
lahf
jp
mov
test
push
neg
ja
and
dec
cmp
adc
fisttps
aam
xchg
scas
lods
test
call
sbb
xchg
fdivrs
cmp
cmc
je
and
mul
insb
imul
mov
push
div
int3
mov
sub
fsub
ss
sbb
mov
call
out
mov
xor
lea
cli
fldl
or
imul
mov
inc
icebp
cmpsl
subl
rcrl
js
mov
mov
push
inc
jbe
xor
repnz
dec
mov
popa
pop
pop
pop
into
clc
notb
in
ret
or
je
adc
push
pop
rcll
jg
or
outsb
xor
insb
mov
pop
sub
jno
in
cmpsb
mov
ret
int
and
cld
inc
jno
mov
jp
adc
insb
cs
imul
hlt
lret
sub
add
mov
dec
mov
mov
repz
push
test
divb
pop
inc
int3
ret
mov
inc
pop
push
sarb
dec
jnp
cmp
scas
nop
push
mov
xchg
fmul
add
pop
orl
int3
xchg
push
push
mov
movsb
mov
cmc
inc
xchg
jae
mov
in
aam
or
xchg
sub
xchg
add
mov
mov
les
dec
fs
aas
clc
xor
cmp
rcl
push
jp
mov
jp
dec
ja
sbb
stos
push
or
push
ficoml
insb
subl
pop
fmulp
xor
cmpsl
lds
cmp
mov
arpl
jno
cltd
push
xchg
sti
push
xchg
jmp
jns
or
sbbl
pusha
sbb
xchg
sbb
and
inc
sub
test
or
mov
sub
insl
stos
inc
xchg
dec
shlb
jecxz
jmp
adc
dec
adc
ljmp
stc
movsb
dec
xchg
pushf
sbb
das
ret
aaa
pop
mov
pushf
iret
xor
jno
sbb
add
push
shl
insl
xchg
mov
cwtl
shlb
mov
call
ret
push
push
pop
pop
sbb
mov
sub
cmpsl
jb
fnsave
iret
mov
inc
ds
fcoms
jo
xlat
test
rcll
add
imul
xor
jne
inc
pop
dec
lret
mov
push
adc
xchg
std
jae
push
aam
imul
arpl
and
mov
mov
mov
das
popa
pop
imul
mov
sbb
int3
mov
jae
fnstsw
jge
and
xchg
in
into
test
scas
add
cld
lods
inc
xor
mov
sbb
lods
adc
arpl
insb
dec
add
cmc
inc
push
jmp
xor
push
mov
sub
jmp
and
addr16
test
je
cs
sub
sbb
xchg
mov
and
in
pusha
aas
popf
and
cmp
fdivp
mov
mov
adc
add
in
nop
cmpb
mov
lret
movb
out
xchg
adc
mov
aad
insb
mov
mov
sbb
xor
or
mov
or
pushf
ror
mov
sti
out
int
ret
mov
add
std
dec
lret
out
leave
push
aas
mov
and
push
and
adc
mov
cld
sbb
cmp
jb
pop
xchg
es
sub
xor
dec
or
xchg
aas
lods
in
leave
dec
sub
dec
in
and
mov
aas
incb
mov
adc
je
in
push
pop
hlt
shlb
sub
adc
push
dec
int
sub
repnz
xchg
add
cwtl
outsb
data16
bound
imul
scas
push
fstps
lock
xor
in
dec
aad
jecxz
sub
push
test
jg
lret
mov
movsb
into
mov
sub
fstpl
xchg
adc
push
mov
dec
mov
rorb
jle
ja
mov
push
cli
or
mov
sub
add
push
cmpsl
ljmp
mov
or
lods
and
inc
pop
adc
mov
out
test
add
shr
in
ds
jp
and
fwait
lods
dec
ret
sti
jl
insb
lret
fwait
inc
ss
sbb
stos
repz
push
jne
and
adc
push
push
pop
adc
or
cmpsl
add
dec
push
das
add
sbb
push
imul
inc
sub
add
xchg
dec
inc
inc
dec
scas
aad
xor
iret
push
arpl
cmp
xchg
pop
int3
mov
mov
ljmp
enter
jb
xor
push
stos
mov
stos
negl
adc
mov
notb
out
and
xchg
js
sahf
dec
mov
push
pop
repz
testl
mov
ret
popa
add
ret
jno
rclb
mov
lock
jle
cmp
inc
loop
rcl
adc
push
mov
in
mov
jle
test
pop
pop
dec
addr16
cmpsl
sbb
stos
mov
push
and
xor
xchg
inc
dec
dec
lahf
dec
sahf
popa
mov
mov
into
jns
cmp
insb
xor
mov
and
mov
sahf
add
jnp
popa
mov
sar
add
arpl
cmp
add
jbe
hlt
cmpsl
cmp
not
popa
mov
or
std
add
aam
jb
mov
movsb
pop
mov
mov
leave
xchg
jg
mov
mov
pop
cmpsb
popf
ljmp
pushf
cmp
pop
dec
mov
pop
add
push
ficoms
xchg
fstps
mov
sub
gs
je
jno
lods
cltd
jae
loop
stos
mov
out
cmc
fs
jmp
mov
mov
jp
xor
movsl
dec
lret
jns
push
fmulp
lods
andb
shl
push
push
mov
pop
mov
fidivl
mov
mov
inc
pushf
mov
or
sub
or
lret
mov
xorl
mov
hlt
pop
mov
add
mov
ret
or
cmp
sarb
ret
rolb
jle
pop
rclb
jl
shrl
mov
sbb
xchg
clc
mov
mov
adc
sub
jns
and
loope
xor
sti
jmp
adc
test
sbb
and
cmpsb
pop
mov
cmp
mov
mov
enter
inc
addb
adc
mov
add
fwait
je
lahf
daa
shl
and
enter
testl
je
gs
dec
iret
sub
loop
int3
jae
test
push
cmp
mov
shrb
cltd
pusha
clc
popa
pop
mov
fldenv
add
push
in
jge
add
fmuls
stos
scas
mov
lods
pop
lahf
cmp
ljmp
cmpsl
and
mov
out
rolb
lcall
popf
je
mov
fldt
test
push
aas
mov
fs
js
inc
cmp
addr16
push
inc
sub
inc
adc
fadd
into
xchg
fs
ret
cmp
loopne
jge
pop
sub
xchg
jae
mov
add
cltd
insl
cmp
pop
xor
jl
mov
es
setl
loopne
hlt
movsb
stos
lret
lea
mov
mov
stos
into
pop
stos
loope
add
leave
adc
aaa
insl
dec
cmp
mov
inc
and
insl
dec
push
jns
test
popa
icebp
mov
xchg
inc
xchg
xchg
fstps
insl
xchg
inc
push
test
dec
test
mov
cmpb
inc
xor
pop
xor
xchg
ds
aaa
push
stc
icebp
pop
je
mov
minps
adc
bnd
xchg
pushl
stos
mov
out
or
mov
dec
cs
sbb
add
or
gs
and
and
cli
fisttps
lret
xor
xchg
jmp
adc
xchg
inc
test
push
mov
rorl
xor
mov
ljmp
pop
mov
mov
push
es
fmul
mov
jnp
and
inc
mov
in
mov
leave
lods
fimull
push
push
push
negb
mov
jae
movsb
mov
test
fdivl
ss
out
int
pop
mov
cmc
daa
cmpsb
ds
push
cltd
mov
lcall
and
mov
xchg
lret
cmc
inc
adc
dec
into
or
cwtl
jp
jecxz
or
xchg
shlb
dec
lods
js
enter
stc
test
daa
scas
pop
stos
inc
and
xchg
loope
mov
adc
sub
scas
aad
mov
aad
jbe
shlb
and
inc
bound
in
sub
sub
add
jbe
xor
xor
testl
hlt
loopne
inc
in
and
leave
jl
push
and
sbb
in
aad
aad
mov
push
movsl
out
lea
push
xchg
xchg
jbe
jge
leave
out
and
cmpb
sbb
popf
jle
adc
add
into
test
jg
push
pop
or
inc
mov
mov
pop
dec
jmp
inc
mov
push
jecxz,pn
lds
ror
xor
fistps
mov
jmp
repz
jg
loop
xchg
sub
cmpsb
aam
daa
xchg
daa
mov
xchg
and
mov
sub
cld
adc
inc
rcrl
dec
lods
xor
push
pcmpeqd
subb
stos
cmc
jae
xchg
imul
shrb
in
ret
dec
mov
out
ret
js
loopne
stos
push
jg
push
rcl
fsubrs
pushf
jge
or
enter
test
call
xchg
stc
pop
pop
jae
aas
repz
dec
aam
adc
dec
loop
xor
mov
and
aam
lret
mov
push
test
dec
xchg
mov
addr16
pop
sti
mov
mov
loop
movsb
xchg
je
xchg
lret
stos
push
xor
or
cmpsl
mov
scas
mov
fmul
or
or
popa
rolb
int
daa
test
std
pusha
sbb
aam
repnz
xor
push
adc
imul
dec
mov
in
jae
lods
imul
or
sbb
mov
mov
mov
jl
mov
jno
out
xchg
inc
lret
inc
xchg
lds
sub
insl
and
inc
dec
xor
divl
mov
xchg
sbbl
add
dec
lods
dec
push
or
movsl
orl
je
test
outsb
out
dec
xchg
inc
sahf
ljmp
cmp
pop
sub
nop
shlb
stos
lds
cli
jae
pop
mov
adc
inc
cwtl
and
es
push
test
gs
mov
outsl
out
cmp
lds
hlt
mov
xor
rorb
inc
mov
xor
daa
dec
jge
popa
cmp
cmc
insl
popf
iret
fld
rolb
mull
xor
cs
setg
dec
mov
enter
mov
mov
aam
cmpsl
dec
xchg
mov
xor
cmp
add
pop
pop
push
js
add
or
fcoms
imul
ret
fists
inc
rclb
fwait
negb
jle
movsb
pop
fcomps
inc
rcrb
mov
nop
jecxz
les
addr16
data16
pop
lahf
dec
es
jmp
jp
mov
scas
inc
mov
lahf
popl
popf
nop
inc
dec
out
in
inc
fst
xchg
stos
and
mov
mov
push
push
jle
adc
mov
sub
xlat
xor
mov
mov
push
adc
sbb
insl
leave
push
icebp
cmpsl
stc
pop
fwait
cli
mov
int3
pop
mov
je
loop
mov
in
gs
sub
pop
pop
addb
sub
out
cs
mov
xchg
xchg
jecxz
lahf
out
xor
sar
sub
inc
bound
mov
jno
mov
imul
fcom
popf
push
repz
and
repz
dec
cmc
sbb
shl
fcoml
mov
and
push
cmpsb
fidivl
inc
shlb
or
popa
gs
add
mov
lods
sbb
pop
inc
push
cld
cmp
jp
xchg
arpl
lea
pop
push
jl
rol
add
sti
int3
add
aad
inc
or
jle
xchg
jnp
cmp
lret
iret
filds
lds
rcrl
pop
cmp
push
push
loop
les
in
cs
dec
in
decb
push
sahf
lret
or
test
inc
jp
push
push
lcall
add
lea
xchg
iret
in
mov
dec
xor
stc
test
mov
in
enter
jne
or
add
xchg
sub
fldt
aaa
push
push
sub
xchg
cmp
cmovg
cmpsb
es
cld
mov
rcrl
push
repnz
push
inc
pop
xor
pushf
dec
gs
rol
dec
fdivrs
ss
in
ret
push
and
aas
push
pop
push
leave
cmc
das
push
sub
mov
inc
push
jp
jle
andl
cmp
aad
imul
movsl
lods
test
mov
lods
es
popa
aam
push
stc
mov
lds
adc
ja
mov
shr
xchg
ja
std
aas
test
xchg
jecxz
and
mov
pop
insb
jns
jle
mov
cmpsl
sub
add
push
xchg
stos
push
out
lods
jno
imul
lcall
xorl
sbb
call
idivl
mov
mov
push
inc
shrb
cmpsb
mov
xor
xor
sbb
sub
mov
aas
sub
in
push
mov
jnp
and
mov
arpl
mov
aam
adcl
sub
pop
mov
call
sub
lret
mov
cmpsl
push
in
mov
mov
mov
ss
sar
std
ja
gs
out
push
mov
mov
jnp
mov
ficompl
je
popf
inc
sub
or
test
pop
cmp
adc
xor
divb
les
sub
ror
dec
iret
inc
hlt
sahf
sbb
enter
mov
cmp
inc
lock
mov
jge
cld
negb
cld
inc
imulb
fcmovbe
xchg
dec
and
sub
sbb
push
pop
jl
mov
lea
xor
mov
aam
xchg
inc
jno
mov
jbe
imull
mov
les
push
cmpl
and
out
jmp
sbb
cmp
test
lret
jbe
cmpb
faddl
inc
imul
imul
popf
mov
pop
xchg
pusha
or
xor
fsubl
xchg
mov
jmp
push
sub
arpl
adc
mov
int3
inc
or
mov
not
std
imul
dec
cmp
cmpsb
loop
shr
mov
ret
sub
mov
cmp
sti
pop
das
sbb
outsl
xchg
leave
jmp
adc
sbb
cmp
mov
mov
test
xor
pop
xor
xchg
pop
ja
enter
in
lds
mov
adc
pop
dec
jp
popf
jno
bound
enter
pop
into
in
jno
popf
mull
shrl
or
mov
data16
aaa
xor
sbb
push
or
call
xlat
out
fnsave
cmp
xchg
inc
adc
popf
jecxz
jbe
push
inc
ret
sub
xor
fldt
dec
rclb
call
roll
fiadds
scas
stos
adc
cmp
push
iret
lods
push
mov
xor
dec
inc
testb
push
aas
push
pop
dec
push
xchg
andb
iret
fs
xchg
addr16
push
fnsave
aaa
test
pop
aam
sub
and
push
mov
xor
inc
mov
sub
cli
mov
xchg
jecxz
lret
lods
sbb
sbb
xchg
mov
jb
xchg
enter
mov
cmp
jbe
imul
xor
sti
jbe
cli
test
mov
lret
test
shl
lcall
mov
push
xor
push
mov
sarb
mov
out
mov
ljmp
cwtl
jbe
sbb
in
mov
insb
push
jne
mov
jge
shr
out
fdivs
in
adc
inc
rorb
jge
mov
push
add
inc
mov
sbbl
outsl
add
daa
mov
test
pop
cltd
outsl
in
sub
js
mov
loope
mov
push
popf
das
imul
test
stos
icebp
jg
mov
push
pop
bound
dec
sbb
push
int3
add
clc
cmp
sbb
andl
jnp
adc
dec
xchg
filds
sub
mov
dec
pop
lds
pop
sub
ja
roll
sbb
mov
and
fsubrs
iret
dec
inc
ja
lods
or
cld
or
and
dec
rorl
mov
cmp
fdivr
push
push
out
jo
lock
adc
in
push
loopne
stc
rcrl
subl
xchg
inc
ret
cmpsb
arpl
adc
in
loope
gs
adc
jmp
or
add
sub
test
adc
gs
pop
jmp
pop
enter
nop
jmp
es
push
insl
popf
scas
mov
aad
xchg
cmp
in
mov
mull
push
out
insb
or
lahf
pop
repz
rcrb
or
mov
mov
loopne
test
and
mov
xchg
push
lahf
test
subb
sub
sbb
int
pusha
mov
dec
inc
insb
jnp
xor
mov
ret
xor
and
jp
cs
pop
sahf
sub
mov
test
rclb
inc
cmpsl
push
jne
or
mov
jno
and
call
test
sub
aaa
push
lods
rcrl
xchg
adc
shl
push
sbb
rorl
lods
pop
or
mov
sbb
xchg
stos
cmpsb
sub
or
ljmp
xchg
icebp
call
xchg
loop
in
popf
out
jle
or
sub
jge
pusha
mov
rcrb
notb
movsl
sarb
inc
mov
jl
push
popa
gs
adc
adc
and
pop
lea
jmp
jle
or
pusha
punpckhbw
lahf
xchg
sbb
movsl
fldl2t
push
bnd
cmp
popa
outsb
push
and
or
pop
sti
addr16
inc
ret
in
adcl
sarl
xor
mov
ret
pop
pop
pushf
mov
cmp
pop
jecxz
fmul
mov
or
add
cmp
xor
jmp
mov
imul
cwtl
popf
adc
daa
lea
bound
test
inc
fs
cwtl
jne
sar
lock
inc
mov
sbb
negl
cmp
pop
sub
movsb
dec
push
mov
mov
iret
fldt
aaa
enter
shll
ljmp
push
test
cmpsb
lea
adc
xor
push
fsubr
lret
lret
mov
test
inc
inc
pushf
loopne
repz
mov
mov
popf
inc
shll
cmp
adc
mov
mov
scas
lock
sub
lret
das
loop
add
jns
dec
dec
lds
inc
cmp
jmp
mov
adc
negb
sub
adc
pop
xchg
scas
cwtl
ficomps
js,pn
lcall
pop
les
frstor
mov
movsl
pop
xchg
sahf
sub
call
adc
lcall
int
or
in
out
mov
jecxz
jp
scas
mov
rcll
push
daa
clc
cli
xor
pusha
int
je
xchg
in
cmpsb
daa
xchg
and
aaa
xchg
pop
pop
jle
orb
jp
jp
mov
ret
or
sub
insl
dec
xchg
pop
sbb
push
mov
aas
das
mov
pushf
stos
je
and
je
mov
cwtl
lods
adc
popf
test
push
inc
test
push
adc
cmc
xor
pop
push
imul
addl
push
jno
inc
mov
push
and
xchg
mov
testb
xchg
lret
enter
xchg
push
sahf
mov
out
fistpl
cmp
dec
ja
in
mov
mov
sbb
mov
fists
rcll
imul
sahf
sbb
std
push
and
push
test
shlb
mov
test
sbb
mov
xchg
jge
mov
int
out
dec
inc
mov
push
ret
fidivrl
dec
sub
mov
fcmovbe
test
pop
ffree
and
ret
lods
lahf
shlb
cwtl
inc
movsb
push
sbb
add
mov
cmp
push
lods
jns
scas
mov
into
in
cmp
movl
test
sub
int3
scas
sub
loope
pushf
inc
lcall
sbb
cld
scas
jbe
out
mov
popa
mov
jmp
mov
push
xchg
and
push
inc
icebp
aaa
pushl
in
add
hlt
push
push
fsubrs
iret
bound
in
mov
xor
test
sti
inc
jb
xor
dec
repnz
push
xor
outsl
pushf
arpl
push
or
rol
out
cmp
scas
pop
jae
xor
xor
jl
mov
jnp
scas
push
cmp
outsl
sub
sbb
stc
jmp
pop
lods
xor
push
sub
sbb
jb
stc
imul
mov
pop
hlt
and
sbb
sub
lahf
pop
aaa
in
xor
movsb
cmp
sbb
cmp
int3
clc
inc
lahf
push
mov
or
cmc
pusha
add
imul
sbb
mov
aam
rorb
add
mov
adc
mov
jae
inc
jbe
push
jno
dec
fdivl
ret
lods
repz
rcll
mov
scas
xchg
outsl
pop
test
dec
test
aas
repnz
jns
jnp
push
cmp
add
lret
nop
push
push
fbstp
cmc
pop
lret
jle
sub
add
bound
stos
inc
js
or
xor
pop
int
dec
in
ds
xor
in
xchg
mov
dec
rcrl
sub
js
subl
or
testw
call
pop
test
test
les
cmp
fildll
mov
and
lret
xor
aam
inc
inc
enter
xchg
aam
imul
fxch
or
imul
mov
cmp
mov
adc
mov
jo
mov
or
jns
out
movsb
push
cmc
lea
aam
outsl
dec
movsb
fwait
mov
je
shl
mov
jg
cmp
out
in
sub
cld
loopne
aad
push
ficoms
xchg
sbb
xchg
sahf
sahf
push
incl
pop
adc
adc
cs
bnd
fsubl
cwtl
nop
call
sbb
and
mov
into
dec
ret
jbe
mov
aas
jp
and
push
sbb
outsb
push
sbb
dec
movsl
in
lock
dec
pop
pop
je
pushf
inc
je
dec
daa
xchg
test
inc
scas
jbe
xor
pop
dec
gs
rorb
sub
jno
xchg
cmpl
lea
pop
jbe
stc
push
xchg
icebp
or
sbb
jp
loop
mov
jecxz
cmp
push
decl
loop
fimuls
xorb
xor
jmp
and
sbb
pop
rcl
shrl
xor
andb
dec
mov
out
ffree
sub
cmp
push
mov
lds
xorb
add
mov
incb
clc
gs
cwtl
jle
mov
std
jecxz
xor
jno
popa
add
sub
jo
mov
cmpsl
adc
lods
jae
cmpsl
addr16
sbb
and
sub
ja
jne
les
pop
cld
push
push
test
xor
mov
inc
and
lret
mov
jbe
push
add
loope
add
mov
adc
out
push
repz
imul
sarb
aam
loope
cmp
mov
imul
cmp
and
incl
subb
add
push
scas
xor
fs
popf
pushf
jae
imul
and
shrb
push
xchg
xchg
inc
mov
add
imul
push
jl
push
repz
outsl
inc
cmp
stos
inc
pop
mov
jns
mov
lock
inc
inc
cli
scas
xchg
mov
in
jmp
push
test
rclb
in
push
inc
stc
pop
out
inc
mov
mov
test
in
dec
inc
add
pop
inc
out
mov
sub
movsl
ret
push
xor
push
subb
rcll
jae
pop
dec
outsl
nop
cmpsl
cmpsl
jno
hlt
cs
cmc
mov
adc
xor
mov
enter
mov
lret
mov
js
outsl
mov
sbb
das
mov
popf
and
pop
std
push
or
and
jge
inc
scas
mov
xlat
inc
dec
jb
outsl
movsl
pop
inc
add
inc
xor
negb
sub
icebp
cwtl
xor
clc
inc
push
insl
jbe
sub
and
sbb
jo
adc
shlb
rclb
pop
mov
and
test
pushl
jmp
inc
dec
mov
dec
xchg
cmpsb
jno
push
ret
outsl
out
dec
sbb
add
sbb
mov
int3
rcrb
dec
leave
pop
shrl
cmpsl
mov
push
adc
jecxz
inc
mov
push
in
hlt
pop
jp
mov
out
or
dec
adc
jmp
mov
cwtl
fisttps
xchg
or
cmp
lods
pop
xorl
movsl
leave
xchg
inc
addr16
sub
aam
sbb
aas
mov
fsubp
fcomip
arpl
pop
push
jo
jbe
in
mov
addr16
add
inc
js
sbb
jno
aas
cmp
es
ljmp
cmpsb
fildll
in
aam
mov
movsl
xor
inc
sub
adc
xchg
dec
inc
push
bound
xor
sbb
in
jae
fcomps
adcl
repz
push
mov
fildl
or
std
jo
lahf
int
cmp
jg
test
sub
fcoml
xchg
mov
or
and
pop
stos
or
sbb
sbb
fildll
push
call
popa
dec
push
cli
sbb
push
jp
out
shll
dec
rcrl
xor
mov
mov
adc
in
add
sub
int3
aad
adc
push
xor
jbe
mov
pop
mov
xchg
xor
jb
mov
sub
out
cld
sti
std
mov
jb
jg
mov
mov
or
adc
add
push
sarb
cmc
out
mull
js
test
xchg
gs
inc
ds
fisubl
fiaddl
and
mov
lock
ret
mov
in
lea
in
xlat
push
pop
pop
pop
test
cli
pop
push
enter
xor
loop
mov
jno
das
fdivp
pop
add
pop
jmp
in
mov
call
inc
pop
xor
add
test
out
popa
dec
mov
dec
cwtl
push
popf
lods
fs
add
inc
jl
orb
jl
aad
xchg
inc
aam
cmpsl
xchg
cmp
leave
dec
out
inc
outsl
lods
push
xor
lret
hlt
sub
add
adc
or
jmp
mov
mov
nop
cmp
inc
cmc
sbb
lods
popf
and
mov
add
ljmp
mov
leave
es
pushf
fsubl
or
movsl
sahf
std
mov
cmp
dec
xchg
in
adc
jecxz
mov
loop
out
in
cmpsb
movsl
cld
aas
sbb
push
cs
and
xchg
push
popa
push
pusha
pusha
loop
in
in
cmc
in
push
sub
push
xor
lods
mov
incl
pop
and
xchg
mov
adc
clc
sub
mov
fmul
xor
add
mov
dec
scas
mov
fldcw
or
pop
cwtl
fwait
test
pop
push
jbe
mov
sbb
xchg
mov
daa
into
dec
int3
xchg
jnp
xchg
push
jle
test
xchg
mov
and
mov
cmp
inc
lcall
dec
out
dec
imul
xor
in
mov
or
insb
or
out
popa
pop
cmp
push
xchg
movsl
ss
inc
inc
adc
xchg
ljmp
or
adc
in
test
mov
mov
and
lahf
and
cld
loop
push
inc
push
sbb
inc
sub
dec
pop
push
pop
jle
cld
xor
add
sub
mov
stos
test
out
mov
enter
dec
je
in
push
lret
add
loopne
and
pop
xor
mov
add
daa
xlat
js
loopne
jb
pop
fdecstp
jae
sub
push
inc
mov
sub
xchg
ja
sbb
push
test
lret
mov
xor
lock
jb
mov
mov
movsb
pop
adc
jp
pop
cmp
icebp
repnz
jg
pop
adc
movl
arpl
lds
and
aam
xchg
mov
loop
in
scas
xchg
mov
rorl
jle
adc
icebp
pop
push
or
das
sub
insb
cmpsl
push
pop
cs
cmp
sub
and
daa
or
scas
fadd
lea
inc
out
cmp
test
cwtl
jmp
aad
xor
mov
outsl
in
adc
popf
inc
mov
movsl
pop
int
pop
sub
int
daa
shl
mov
xor
pop
movsl
cli
cli
pop
cltd
and
addb
adc
imul
in
inc
leave
inc
push
std
mov
sbb
add
arpl
xchg
cmp
shrl
lock
cli
push
fisubs
add
xlat
fbstp
in
jbe
adc
push
xor
les
jmp
pop
mov
fdivrs
mov
mov
leave
dec
jge
xor
dec
jge
insl
shl
sub
out
js
stos
out
scas
imul
pop
arpl
mov
cwtl
mov
sbb
cmp
xchg
fsubp
int
cmp
cs
mov
cmp
vmovapd
mov
xchg
nop
or
aad
dec
loope
pop
mov
mov
cmpsl
movsb
cmp
test
mov
mov
mov
loop
clc
push
push
mov
lret
inc
fstl
adc
cmpsl
mov
sti
inc
por
icebp
movsb
pop
fiaddl
xchg
outsb
repnz
xor
dec
or
jno
aam
fmuls
lds
cmp
xchg
dec
subl
jmp
icebp
push
lret
dec
dec
stc
ret
and
inc
scas
icebp
push
mov
cmp
and
adc
test
mov
cmpsl
xor
fstpt
js
xchg
xor
lret
popa
xchg
test
loop
jns
jns
mov
sti
popa
pop
imul
sbb
mov
mov
in
mov
add
scas
sub
sbb
cmp
out
inc
add
jne
jge
inc
or
or
and
iret
and
fsubrs
daa
pop
fisttps
ja
daa
bound
aaa
xchg
jmp
in
cmpsl
pop
es
cltd
out
cltd
ja
adc
loope
out
add
fwait
xor
push
xorl
sbb
cmp
mov
imul
sub
adc
sysenter
push
aam
mov
xchg
out
xchg
cmp
add
push
inc
in
test
xchg
in
xor
lds
mov
cmp
push
push
cmc
mov
xchg
dec
not
sub
sbb
popa
xchg
mov
sub
shrl
lret
rcll
sub
rcl
shrl
xor
sub
mov
jl
push
cmp
lret
ret
mov
call
push
push
cwtl
in
xchg
sub
cmp
push
popf
inc
out
in
ljmp
inc
sbb
jle
leave
sahf
mov
jns
mov
popf
sbb
orb
outsl
iret
pop
ret
inc
mov
out
adc
movsl
xchg
repz
dec
xchg
mov
fcomi
lret
ror
lea
jmp
mov
mov
jb
lds
call
sbb
je
inc
loopne
andl
fadds
mov
pop
jnp
add
xchg
stos
cltd
sti
imul
cmpxchg
mov
inc
lea
dec
incb
je
push
in
push
andl
dec
xor
movsl
mov
sub
addr16
xlat
call
dec
pop
shrl
and
sbb
adc
jmp
cmpsl
fadd
insb
jno
cmp
pop
or
fsts
stos
or
or
mov
adc
cmp
xor
mov
sub
xor
test
aam
and
cmc
dec
mov
shl
shlb
or
aam
mov
mov
xchg
mov
sbb
adc
repnz
and
mov
sub
arpl
xlat
outsb
dec
cmp
xchg
sub
add
fadds
movsl
addl
inc
lock
scas
je
inc
xlat
pop
add
push
pop
pop
fisttpl
aad
jl
lock
hlt
ret
movsl
push
scas
loopne,pt
adc
pop
sub
insb
sbb
sub
cwtl
and
pop
cmp
xorl
les
shlb
inc
repnz
repz
in
xchg
pop
or
sbb
dec
jg
ljmp
xchg
cltd
in
les
fld
xor
push
add
adc
popf
add
jl
jle
push
jnp
pop
mov
pop
es
in
dec
mov
push
mov
push
dec
add
test
jno
mov
and
sub
out
pop
fcoms
aam
jge
pop
push
xor
cltd
push
sub
mov
push
inc
popa
cmp
and
aad
scas
movsl
stos
push
scas
sbb
rcrb
repnz
loop
lods
movsl
xchg
push
sub
cltd
or
xor
or
push
jnp
mov
fadd
adc
movsb
cltd
add
cmp
mov
mov
sbb
ret
mov
sub
xchg
dec
outsb
in
pop
pop
call
insb
imul
es
js
pop
fldenv
popa
xchg
int3
mov
and
jge
addr16
test
aam
data16
pop
dec
inc
das
cmp
nop
aas
push
mov
mov
shrb
outsb
jno
sbb
ds
nop
xchg
repnz
out
pushf
jp
mov
pusha
cmp
mov
or
loope
addr16
adc
movsl
mov
mov
inc
nop
and
shlb
sub
fsts
push
loop
loope
icebp
fnsave
inc
fists
add
ds
in
mov
out
xchg
dec
xchg
inc
aad
gs
popa
enter
mov
push
jmp
mov
mov
dec
inc
or
xor
sub
dec
pop
bound
dec
push
sahf
mov
rorl
loope
inc
mov
pop
mov
push
jbe
mov
jae
out
mov
in
enter
hlt
inc
and
pop
push
ljmp
or
sub
mov
loop
iret
pop
jo
adc
mov
inc
dec
nop
fpatan
js
lods
ja
enter
jle
mov
out
bnd
out
cltd
mov
rorb
out
arpl
add
cmp
incb
and
inc
andb
and
iret
mov
xchg
cld
ret
add
inc
cmpsl
in
dec
cmc
je
mov
add
mov
mov
mov
xor
push
push
cmpsb
andl
mov
push
jbe
hlt
push
dec
push
and
decb
xor
loope
cwtl
xor
sbb
mov
xchg
push
ljmp
lock
shll
sbb
in
inc
fiadds
xchg
or
cli
mov
jge
mov
xor
push
sub
sti
data16
push
sub
fcmovb
aad
jns
into
mov
jb
lret
add
fmull
inc
sub
test
mov
test
and
out
outsl
push
mov
fbstp
inc
pop
mov
cli
js
test
inc
mov
lret
mov
dec
add
jecxz
test
xchg
pusha
jecxz
jle
sub
jns
cwtl
inc
cmpsb
sub
lret
xchg
jl
cmp
iret
adc
or
mov
out
xlat
outsb
sub
in
mov
lret
push
into
ret
mov
popf
int3
dec
xor
loop
and
mov
jo
jg
pop
ficomps
pop
andl
xchg
pop
jmp
cmpsl
inc
cmpsl
and
dec
jg
add
push
loop
xchg
pushf
lock
inc
addr16
mov
lcall
xchg
popf
xor
lods
call
push
inc
outsb
jbe
loope
mov
inc
dec
xor
mov
in
cmpsl
cmp
lcall
xchg
sub
inc
pop
fisubs
xchg
test
movsb
dec
xor
cmp
cmp
call
inc
psubusw
sbb
or
enter
pop
lock
add
jp
fiadds
mov
andb
popa
sbb
hlt
iret
inc
xchg
aas
out
cmp
jne
jecxz
and
repz
pop
mov
xchg
mov
sub
fisubrl
imul
fstpt
enter
add
scas
mov
loopne
sbb
int
fldt
mov
mov
stos
fldenv
mov
push
lods
sarb
stos
sub
adc
cmpl
stos
loope
push
xor
mov
lock
imul
mov
add
adc
mov
inc
sbbb
inc
clc
or
scas
pop
aas
popa
cmp
xor
mov
icebp
mov
test
ficoms
sbb
adc
sub
rdmsr
dec
sub
push
mov
aam
jp
push
lcall
ret
and
and
xlat
mov
pop
adc
out
out
mov
inc
mov
pushf
sti
pop
inc
idivl
aam
mov
cmc
lds
jmp
gs
cs
add
fsubrl
mov
sbb
movl
push
int
into
cmp
push
pop
out
test
xchg
push
movsl
int
aam
jg
adc
ret
stos
mov
jne
and
cmp
mov
test
mov
popa
sub
in
js
xchg
jbe
mov
imul
or
jae
jg
addl
mov
push
and
rorl
push
xchg
fdivrs
pop
pop
inc
cmp
adc
insb
stc
es
dec
lock
lods
push
dec
push
jne
mov
inc
arpl
scas
jne
cmpsl
cwtl
dec
lods
push
xchg
adc
push
pop
stos
jno
je
fs
xchg
hlt
in
mov
sbb
popa
movsl
mov
dec
mov
cmp
mov
sbb
cmp
loopne
jae
dec
xchg
sub
xlat
clc
stc
cs
popf
test
push
sbb
adcb
mov
leave
push
push
inc
outsl
or
and
adc
sub
or
out
mov
jnp
or
ja
or
mov
sbb
mov
jle
ret
lret
dec
je
push
pop
push
data16
int3
sbb
std
jno
adc
ret
hlt
push
ljmp
out
adc
aad
popf
jne
mov
les
int
daa
aam
in
dec
out
fwait
add
outsb
jne
dec
jmp
sub
es
pop
lahf
int3
mov
pushf
loop
pop
mov
pop
clc
dec
xchg
cmp
jae
xor
in
mov
adc
jbe
inc
cwtl
add
shlb
lea
stos
mov
sbbb
outsb
loopne
or
or
adc
js
cmp
addr16
sbb
in
xchg
adc
cmp
pop
stos
jle
imul
nop
aas
xor
adc
jne
add
xchg
shll
cmc
xchg
je
cmp
shrb
aam
pusha
pop
test
jmp
sbb
outsb
mov
pop
cmc
cmp
mov
je
aas
add
jbe
push
mov
push
aaa
arpl
aaa
push
mov
mov
popl
loopne
pop
inc
jae
sub
mov
pop
mov
sahf
inc
push
sti
push
das
and
sbb
dec
sub
and
jle
roll
lods
popa
or
adc
rcrb
inc
je
icebp
jmp
pop
bswap
js
outsl
loope
xchg
cwtl
fcmovbe
insl
enter
mov
fiadds
xor
xchg
repnz
push
jno
mov
jecxz
jo
ljmp
jo
cli
sahf
cmpsl
sub
dec
popf
dec
mov
cmp
pusha
fwait
lods
hlt
into
shlb
or
imulb
mov
addr16
pop
enter
mov
sbb
or
dec
enter
mov
xor
pop
stc
cmp
jns
xor
test
stos
jg
dec
sbb
fmull
xchg
inc
mov
add
popa
jno
call
push
js
inc
and
jo
mov
jecxz
mov
dec
test
sub
xlat
add
bound
sbb
gs
das
dec
sub
scas
and
in
addb
daa
push
jle
cmp
out
lock
or
stos
inc
adc
imul
cs
jno
mov
inc
push
sbb
lods
push
repnz
scas
stc
and
cltd
cli
incl
gs
bound
dec
push
sub
mov
jae
xor
xchg
pop
or
and
insb
shll
jns
xchg
adc
push
push
sbb
jnp
and
lret
rorb
test
sbb
fcmovnbe
rolb
inc
inc
push
and
hlt
lods
push
fisttpl
sub
sub
mov
ret
sbbb
inc
pop
mov
mov
push
ret
mov
pop
xor
sbb
hlt
ja
out
mov
sbb
ret
mov
pop
ljmp
sarb
repz
enter
xor
add
adc
stos
data16
or
sub
mov
mov
push
push
or
push
cmpsb
lock
mov
lret
popf
cmp
xchg
pushf
inc
outsb
imul
jle
push
lea
repz
das
negl
jno
ss
stc
cli
cmp
addr16
mov
sbb
inc
adc
dec
fisttpll
ljmp
jo
pop
jmp
stc
cmp
inc
test
pop
notb
dec
fmull
xor
adc
outsb
push
out
mov
fdivl
sub
dec
sbb
xor
cltd
int
push
sbb
mov
add
sub
or
sub
roll
lea
in
fwait
clc
jo
iret
repz
popf
cld
push
ss
xor
dec
mov
jns
xor
out
xchg
aam
sbb
xor
cmc
das
outsb
out
insl
sub
cwtl
lea
mov
lcall
arpl
aas
mov
lock
mov
pop
lahf
push
inc
xor
adc
lods
push
cwtl
xchg
pop
in
rcr
mov
jge
enter
jno
dec
das
sub
push
lods
je
popf
mov
cmp
fdivrl
cld
mov
in
pusha
or
push
pop
int
cld
icebp
lret
in
and
enter
add
mov
inc
stc
test
jl
push
ret
iret
clc
repz
jecxz
xor
cmc
fisubl
paddb
cmpb
fs
xchg
mov
fisubl
sbb
clc
mov
sbb
imul
addl
cmp
push
cmp
pop
push
inc
xchg
addb
test
leave
test
xchg
and
dec
inc
jnp
xchg
pushaw
int
jae
inc
aam
repz
sbb
dec
xor
ret
cli
adc
jno
xor
push
xlat
lcall
fcoml
sub
lea
mov
pop
bound
lock
fidivs
test
mov
and
sahf
xor
pop
shr
aad
xor
cmp
in
jo
sub
cmp
jae
mov
and
pusha
in
cmpsb
outsb
enter
fidivrl
ret
nop
adc
xor
mov
sar
aaa
lock
ds
in
push
repnz
ljmp
mov
data16
mov
mov
cmp
lcall
jae
sbb
cmp
insl
sub
mov
movsb
add
jne
lods
int3
sub
mov
insb
sbb
inc
sub
fucomp
aas
lds
mov
sub
fs
sub
loopne
cmpsb
jg
fst
jmp
add
and
pop
stos
or
dec
add
out
negl
stc
and
xchg
add
fisttpll
push
fsubs
mov
xorl
inc
mov
push
sbb
lods
mov
jbe
in
jns
sub
test
pop
xor
cmpsb
pop
sbb
sti
fwait
lret
fdivrl
aad
aas
and
adc
sbb
into
notb
cmpsb
je
jo
dec
sahf
mov
push
mov
sub
and
pop
jmp
es
xchg
test
insl
adc
push
pop
mov
es
jmp
shld
leave
push
inc
xchg
int3
repnz
cmp
fldl
adc
and
das
add
pop
sub
cwtl
ja
lds
popf
cli
cmp
in
icebp
push
sbb
call
mov
nop
out
fldcw
scas
mov
ret
addr16
arpl
notl
xchg
rclb
sahf
es
loop
jecxz
xchg
fs
and
jne
jge
movsb
call
leave
mov
rolb
cmpsb
sub
ljmp
and
push
pop
call
ss
ss
xchg
push
ss
mov
adc
push
jmp
or
xor
add
scas
frstor
jmp
cmp
and
pop
sub
rclb
lret
adcb
enter
push
imul
cmp
into
fwait
je
cmpsl
add
outsl
cltd
dec
addr16
jbe
xor
stc
and
cmp
xchg
in
cmp
xchg
mov
mov
and
je
aam
sub
cmpsl
outsl
and
sti
pop
xchg
iret
popl
ror
loopne
add
cwtl
std
bnd
mov
repz
lret
nop
outsl
notb
or
iret
loop
popf
mov
cmc
or
add
pop
cmp
mov
cmp
scas
inc
test
in
loopne
movsb
out
push
fisttpll
dec
or
test
inc
jp
pop
dec
imul
or
inc
push
adcb
call
xor
xor
fnstenv
mov
addr16
sbb
dec
mov
in
inc
pop
inc
mov
xlat
sbb
jmp
mov
add
mov
dec
inc
js
adc
cmpsb
fistpll
daa
mov
pop
mov
nop
mov
and
mov
imul
pushfw
jmp
aam
subb
nop
ret
movsl
push
flds
jl
jb
enter
add
sbb
xor
lods
or
pop
mov
adc
pop
test
jb
rcll
mov
fldl
add
add
icebp
dec
jb
jae
xor
mov
shll
jmp
insl
push
pop
push
aam
mov
mov
cld
les
pop
or
andb
sbb
mov
sbb
lods
je
and
mov
mov
push
mov
dec
pop
xchg
sbb
cld
icebp
jl
clc
fwait
push
mov
sub
scas
pop
mov
int3
mov
push
push
adc
add
mov
xchg
data16
push
jns
int3
add
adc
mov
and
lret
bound
push
mov
sub
or
jp
xor
mov
movsb
addb
adc
stos
adcb
cmp
mov
mov
stos
cmp
lcall
and
pop
in
pop
xor
xchg
push
add
jo
fsubrl
xchg
inc
outsb
add
mov
jnp
push
xor
iret
lret
aam
or
cmp
ja
pop
mov
pusha
mov
mov
pop
nop
jmp
lcall
xchg
inc
xor
mov
pop
and
lock
cmp
lods
insb
or
inc
mov
dec
xorl
push
fdivs
pop
lock
inc
lcall
dec
adc
push
mov
cld
mov
xchg
push
ror
mov
test
push
cmp
jl
pop
pop
dec
jmp
push
and
fldl
repz
call
xchg
mov
or
pop
mov
dec
and
gs
inc
sahf
push
jge
xchg
icebp
add
out
jmp
xorb
rcl
xchg
jecxz
cmpsb
test
repnz
int
inc
jo
loope
pop
jecxz
lret
test
push
pop
lret
clc
dec
push
push
cmc
hlt
sub
add
mov
and
sub
jae
and
cmp
movsb
mov
pop
test
xchg
and
cmp
dec
xlat
mov
lods
lcall
jno
jno
popf
mov
adc
jl
sbb
xor
cmp
mov
and
mov
ret
into
jo
shrb
mov
aad
cmp
mov
test
mov
fistl
scas
push
ret
xchg
jae
jge
loopne
repnz
adc
cmpsb
sub
add
pop
dec
loopne
aaa
pop
aam
lea
mov
rcl
jmp
fwait
loopne
xor
addr16
pop
mov
sub
jbe
enter
sbb
call
lcall
int
sub
pop
stc
leave
dec
sbb
xor
loop
cwtl
push
push
cmp
je
mov
sbb
fiadds
inc
inc
aas
mov
push
fisubrs
lock
addr16
out
lds
push
icebp
pop
pop
lret
dec
push
test
cmc
loope
sbb
xor
adc
inc
sti
jne
mov
push
jo
xchg
fdivl
sub
jae
fadds
mov
int3
push
mov
cmc
dec
daa
je
and
popa
ret
or
sbb
js
fnstsw
jecxz
jno
dec
inc
sbb
test
jg
sub
adc
outsb
repnz
call
cmp
call
inc
hlt
mov
xor
sbb
les
movsb
lods
xchg
add
imul
or
aaa
loope
incl
or
or
pop
lret
and
xchg
pop
shlb
scas
mov
mov
fdivrp
sbb
enter
test
dec
and
push
or
into
mov
add
addr16
adc
adc
mov
sub
dec
insl
inc
and
stos
jle
fsubs
sahf
sub
imul
push
push
cli
lds
mov
jb
xchg
das
pop
stos
in
dec
ja
add
mov
clc
xchg
adc
and
mov
out
icebp
dec
stos
in
jae
lret
push
ja
cld
int
idivl
std
adc
xchg
add
insb
mov
push
mov
in
arpl
jle
imul
push
xchg
sbb
or
dec
jns
jne
xchg
lret
out
and
fcoml
xor
fwait
cmp
test
and
add
orb
push
jle
mov
test
and
cmpsl
xorb
pop
inc
mov
hlt
rorl
out
ljmp
push
stos
and
pushf
fistpl
push
dec
in
mov
mov
cmc
jbe
mov
pop
push
dec
shlb
cmpsb
dec
adc
loopne
rcrb
cli
pop
sbb
jg
push
and
and
mov
sub
mov
mov
push
popa
das
lret
and
outsl
xchg
movsb
push
mov
inc
dec
lds
adc
inc
pusha
push
xchg
and
insb
sbb
push
notb
mov
clc
fsubrp
dec
orl
cld
add
xchg
pop
add
and
outsb
js
lret
iret
xchg
xor
sbb
dec
pushf
and
dec
das
xchg
sbbl
dec
lret
lods
pop
pop
rolb
mov
xchg
call
jno
dec
jle
iret
mov
sbbl
addr16
mov
je
push
int
stc
mov
jne
cmp
and
mov
dec
mov
loope
xchg
testl
mov
push
sbb
pop
sbb
mov
add
dec
test
les
pop
cmp
lods
adc
insl
pop
pop
jg
fs
lock
mov
inc
test
adc
pop
mov
pop
sub
movsb
adc
mov
mov
push
popf
ljmp
adc
or
cmpsb
aad
jno
dec
ss
cld
adc
ret
out
leave
xchg
xchg
sbb
into
rcr
push
xor
inc
adc
dec
clc
inc
add
enter
out
ficompl
jl
adc
xor
popf
mov
cmpsb
loopne
push
pop
xor
xor
in
rcrw
testb
dec
mov
iret
lar
dec
icebp
lods
fnclex
pop
loope
js
and
jge
or
fwait
or
mov
sub
test
in
or
jmp
testb
mov
fcmovb
adc
in
ffree
jg
ret
loopne
fldcw
xchg
mov
test
sub
adc
push
loop
aam
and
inc
and
sbb
jge
dec
inc
out
mov
in
lcall
push
bound
jle
fst
mov
xchg
and
aas
xchg
jmp
lea
sbb
push
cltd
xchg
std
addl
fstpl
add
icebp
faddl
mov
and
shlb
adc
mov
add
clc
js
jne
mov
lret
lea
stos
addr16
fs
std
add
jne
jmp
sub
ja
cmp
xchg
shll
add
out
imul
sbb
dec
or
jb
xor
loope
loope
insl
inc
mov
sbb
mulb
popa
pmaddwd
adc
dec
leave
dec
and
sti
imul
div
loop
jno
cmp
mov
cmp
pop
sub
inc
scas
call
test
hlt
jl
fcoms
mull
arpl
fwait
lret
pop
mov
jecxz
daa
pop
pop
mov
mov
sub
jmp
xchg
sbb
outsl
stos
push
je
mov
xor
in
inc
mov
sub
cmp
test
sub
pop
ss
repnz
je
mov
das
fnsave
pop
ljmp
xchg
jno
cmp
pushf
lahf
sbbl
mov
inc
pop
fwait
movsb
add
ja
test
mov
xor
rorb
mov
dec
mov
push
jbe
daa
cwtl
insl
xchg
out
xchg
loopne
push
loopne
sbb
scas
add
popf
dec
popa
insb
mov
ljmp
pop
jp
mov
cmpb
scas
nop
ficoml
mov
fdivl
lock
loop
adc
stos
daa
mov
fnstcw
ror
ja
call
fbld
cmp
mov
out
jns
ja
dec
loopne
gs
enter
fwait
adc
and
enter
sahf
mov
push
mov
lods
pop
push
movsl
mov
xchg
scas
imulb
jmp
inc
dec
fwait
les
cmp
push
cmp
push
push
loop
xchg
cmc
xchg
repz
and
lea
inc
adc
mov
out
les
jbe
hlt
jg
xlat
inc
or
jns
jp
int3
sbb
adc
add
mov
loop
sub
cmp
xchg
push
xchg
pop
je
es
jmp
lret
fldl
stos
cltd
incb
push
push
push
sahf
cmpsl
add
pop
shrl
adc
imul
test
cmc
xor
dec
addl
or
insb
mov
mov
mov
dec
je
insb
xchg
pop
xchg
cmc
loope
jnp
lock
ljmp
in
inc
cmc
push
loop
jp
push
push
lods
push
pop
int3
mov
fistpll
fldt
sahf
and
add
mov
mov
push
iret
fs
add
lock
imul
popa
ja
scas
cltd
test
adc
les
sbb
mov
inc
dec
lea
movsb
outsl
popa
mov
fwait
adc
xor
mov
popf
xchg
mov
out
mov
pop
movsl
ja
sti
lea
mov
mov
add
movsb
insl
mov
insl
inc
daa
stc
mov
xchg
idivb
repnz
fucomi
sahf
pop
sub
mov
or
in
xor
sti
or
cltd
pop
jg
mov
popf
sbb
inc
sub
mov
mov
sar
imul
jle
scas
or
icebp
mov
repz
ja
sbb
emms
fistl
fdivp
sti
mov
lock
leave
aas
movb
cli
cmp
xor
sub
or
int3
bound
test
push
movsl
in
in
or
loope
jge
xor
and
pop
int3
les
mov
pop
icebp
xchg
mov
xchg
adc
and
push
adc
mov
xor
fcompl
nop
xchg
sbb
das
dec
hlt
movsl
into
shrl
lret
pop
mov
dec
enter
pop
lahf
mov
test
inc
push
or
mov
andl
or
mov
jno
pop
cs
sbb
dec
and
add
sub
jge
js
cmp
jnp
ret
push
xchg
ljmp
aam
cli
mov
aaa
dec
push
pop
fdivl
lcall
lods
cmp
popa
dec
mov
sbb
fimull
mov
shlb
pusha
ds
or
addr16
jno
jmp
cs
add
in
das
push
cmpb
jae
adc
inc
out
pop
inc
sub
mov
cmp
mov
sub
mov
gs
xor
fnstsw
xchg
jbe
sbb
mov
mov
in
mov
push
mov
adc
sub
mov
stos
or
mov
f2xm1
xor
ds
mov
shrb
sub
addb
popa
cmp
or
inc
in
sub
push
or
mov
sub
jnp
ljmp
je
inc
xchg
lret
mov
insb
lret
stc
test
cmp
bound
mov
mov
cmp
fwait
cmpsb
jge
mov
add
in
inc
push
cli
aaa
xor
mov
xchg
add
xor
div
into
or
sbb
xor
lcall
loopew
cmpsl
push
xor
mov
cltd
sbb
xor
daa
or
mov
fstpl
fstps
shlb
jl
jmp
xchg
mov
incl
pop
nop
or
std
pusha
icebp
pop
inc
test
js
mov
mov
pop
mov
xor
into
add
pop
mov
stos
pop
dec
xchg
inc
xchg
add
and
stos
rcpps
inc
mov
jnp
mov
push
jno
adc
faddl
push
and
sbb
push
push
inc
mov
and
push
xchg
out
push
pusha
jmp
stos
dec
push
inc
outsl
xchg
push
mov
mov
dec
pop
jge
dec
mov
mov
filds
movsb
outsl
das
not
ret
xchg
pop
sub
inc
dec
add
clc
xchg
rcl
mov
shlb
dec
adc
inc
jge
imull
pmaxub
mov
in
xor
pop
aad
pop
repz
imul
and
cmp
jne
or
inc
sti
stos
pop
je
pop
in
xchg
push
mov
mov
shlb
dec
lea
aaa
xchg
xor
in
add
ljmp
out
js
sub
mov
mov
cmc
mov
pop
insb
insb
in
out
shrb
xchg
lods
pop
sbbl
pop
mov
push
ja
or
mov
mov
pop
iret
adc
or
fisubrl
je
push
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
test
jle
sub
test
adcb
fnstenv
sarb
iret
mov
pop
sbb
cmpsl
mov
fidivl
and
xchg
mov
add
inc
insl
out
daa
pop
dec
cwtl
nop
test
xor
adc
stos
mov
lods
mov
xor
push
fcomi
cld
adc
in
sub
sub
mov
dec
xchg
gs
nop
clc
sub
or
loop
cltd
sbb
inc
sti
insb
xchg
lods
push
dec
sahf
fwait
aaa
roll
fcomps
push
lods
rclb
mov
fwait
scas
out
pop
out
mov
lret
mov
sahf
jl
fnstenv
lcall
jb
test
push
mov
lahf
je
mov
cmp
and
lock
scas
and
jo
addb
dec
in
xchg
fs
aam
adc
in
xchg
cmc
icebp
movsl
pop
enter
jp
lret
cmp
cmp
ss
sub
in
push
adc
dec
pop
jmp
push
mov
cmp
mov
jle
sbb
dec
xchg
add
sbb
mov
pop
mov
adc
or
aad
stos
clc
jmp
inc
fisubrl
leave
sub
mov
and
mov
rcll
mov
test
jmp
push
out
icebp
aas
jmp
popa
fildll
lea
xor
xchg
lods
pop
push
cmp
jns
pop
mov
mov
rcr
fisubs
sahf
test
repnz
mov
pushf
hlt
loop
mov
lods
sahf
inc
fwait
add
test
popa
jae
cld
test
pop
icebp
sbb
in
aas
jmp
imul
mov
jo
sub
test
add
add
add
add
pop
add
inc
xchg
inc
add
dec
pop
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
leave
outsb
add
lret
enter
