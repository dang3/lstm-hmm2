add
je
sbb
mov
fidivrl
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
sarb
fldt
add
in
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
cld
mov
add
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
int
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
int3
inc
add
test
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
mov
inc
add
mov
add
add
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
cmp
inc
add
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
call
lea
push
xchg
inc
add
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
sub
and
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
inc
add
dec
and
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
lret
inc
add
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
es
inc
add
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
add
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
add
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
add
inc
fsubs
repz
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
add
push
push
add
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
add
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
inc
add
dec
sbb
rcrb
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
xchg
inc
add
sbb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
add
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
add
add
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
pop
xor
inc
ret
int3
push
mov
mov
test
push
jne
mov
test
je
mov
test
je
push
mov
test
jne
mov
mov
mov
call
lea
mov
mov
test
jne
test
movl
mov
jne
mov
mov
pop
pop
mov
xor
pop
ret
mov
pop
mov
xor
pop
ret
call
lea
call
mov
test
je
clc
xchg
inc
add
mov
xor
pop
ret
push
mov
sub
andl
push
push
push
push
mov
push
lea
push
mov
call
test
jne
lea
call
mov
jmp
call
test
jne
push
call
test
pop
je
andl
andl
mov
push
push
mov
push
mov
call
test
jne
jmp
mov
lea
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
xor
mov
and
inc
shl
shr
lea
or
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
lea
push
push
lea
inc
scas
inc
add
mov
add
cmp
je
mov
mov
mov
lea
lea
cmp
jae
lea
cmp
ja
cmp
jb
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
and
mov
movb
mov
test
jbe
mov
push
lea
push
add
push
call
add
pop
pop
pop
mov
xor
call
add
ret
cmpl
jg
mov
sub
jmp
or
inc
add
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
movl
movl
mov
test
movl
je
andl
andl
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
push
call
push
mov
call
add
lea
push
mov
mov
mov
lea
push
push
mov
movl
call
mov
mov
mov
movl
cmpl
je
mov
test
jne
test
jne
pop
pop
xor
pop
add
ret
mov
mov
cmpl
je
mov
lea
push
call
xor
ret
mov
pushl
mov
push
call
decl
push
je
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
add
cmp
je
cmp
mov
mov
movl
mov
mov
mov
mov
mov
jne
mov
mov
push
call
mov
call
mov
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
push
jne
test
je
mov
mov
lea
mov
cmp
jne
sub
add
add
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
xor
cmp
push
lea
je
lea
push
push
push
add
push
call
add
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
lea
mov
push
lea
lea
movl
mov
mov
call
add
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
mov
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
lea
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
lea
js
mov
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
pop
pop
add
ret
push
mov
push
push
mov
call
test
je
mov
mov
imul
add
push
call
mov
test
pop
je
push
pushl
push
call
mov
mov
xor
add
and
xor
mov
xor
inc
pop
pop
pop
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
push
push
andl
push
push
push
lea
mov
call
mov
lea
push
push
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
lea
mov
call
mov
cmp
je
mov
mov
mov
push
call
test
js
mov
mov
mov
push
mov
push
push
mov
call
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
mov
jge
jmp
mov
hlt
jl
faddl
ljmp
jno
add
add
incb
out
jo
add
add
fbld
test
mov
cmpsl
les
loope
loop
add
stos
add
in
fadds
xlat
add
add
imul
xchg
faddl
bound
jecxz
cmpsb
pop
mov
add
call
out
mov
mov
iret
jae
hlt
add
add
scas
loopne
xchg
sahf
mov
add
jecxz
xlat
add
add
add
int3
scas
add
testl
push
add
icebp
add
add
mov
add
xchg
push
add
add
cmpsb
mov
add
loope
jae
cmc
add
add
mov
add
scas
mov
int3
push
mov
add
push
push
push
push
push
push
call
arpl
add
add
xchg
iret
mov
pop
mov
add
pop
add
shrb
xchg
mov
add
je
mov
xchg
add
mov
add
add
test
add
test
add
mov
sti
popf
add
pop
add
addb
aad
ret
mov
jecxz
shlb
loopne
mov
lock
mov
lea
pop
movl
popl
push
push
push
lea
push
push
push
call
int
push
rolb
pop
pop
add
xchg
lret
andl
add
bound
pusha
iret
into
add
add
ljmp
test
in
add
xchg
in
add
shll
xchg
add
add
fildl
jns
lret
jle
jp
mov
mov
jne
add
push
push
add
aam
bound
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
repnz
mov
add
add
mov
mov
mov
xlat
popf
add
xchg
negl
test
add
out
test
in
add
add
mov
add
add
add
pusha
add
add
lods
lock
add
add
ljmp
fldenv
add
add
sti
pop
push
mov
push
imul
mov
lea
pop
push
push
push
push
lea
push
call
add
add
xlat
mov
add
shl
add
jge
orl
jns
incb
add
add
add
mov
add
mov
jmp
add
fdivr
mov
add
enter
scas
add
add
add
in
add
lods
jp
movsl
aad
add
jp
mov
lea
pop
push
push
call
push
push
lea
push
push
push
call
mov
arpl
int
sti
add
gs
test
add
add
mov
fs
mov
jle
add
imul
lds
add
push
add
add
mov
mov
add
in
stc
add
add
je
je
add
add
add
add
push
outsl
aad
xchg
add
add
add
aad
out
fmull
pop
add
add
inc
rcr
push
lea
push
push
push
push
lea
push
call
mov
cli
loop
add
test
add
add
add
bound
add
add
xchg
icebp
push
add
push
add
divb
cmp
imul
addl
nop
icebp
add
sbbl
add
mov
add
lods
add
add
addr16
js
shll
mov
pusha
sbb
push
call
jmp
push
lea
push
call
push
xchg
add
add
add
add
fldl
in
lahf
loope
mov
clc
jecxz
test
pop
hlt
push
add
add
fstps
add
mov
enter
add
add
add
mov
jecxz
add
add
add
add
add
lock
arpl
ja
push
mov
stos
add
or
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
xchg
add
insb
add
add
add
adcl
add
jo
fldl
subl
add
cmpsl
push
divl
fldl
fsub
scas
cltd
xchg
add
add
cmpsb
hlt
add
ret
fstl
lret
lods
add
add
pop
roll
loope
add
add
sti
int3
jo
test
mov
fildl
cmc
mov
lea
pop
mov
push
push
push
push
call
add
out
add
bound
add
cmpsl
rol
add
add
add
add
fsubl
pop
jae
outsl
add
arpl
add
outsl
add
ficoml
add
shl
add
leave
add
outsl
add
add
cld
add
add
add
jge
push
push
jno
lds
cltd
add
imul
sahf
xchg
lds
test
lahf
scas
add
pop
mov
push
push
push
push
call
repnz
cmpsl
bound
movsl
jecxz
aam
add
cwtl
add
jne
iret
lds
stc
sarb
add
jl
add
mov
imul
add
add
scas
in
push
pusha
add
add
pop
mov
add
int
add
add
loop
add
out
add
xchg
in
add
xchg
mov
add
pop
add
push
push
push
push
push
lea
push
push
push
push
call
pop
add
push
add
mov
lret
add
add
les
add
xchg
add
push
push
add
fistps
stos
add
add
clc
jmp
enter
jne
out
in
xchg
add
shr
fs
ret
add
mov
mov
add
xchg
addb
cld
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
lea
push
call
lret
xchg
add
add
lret
lds
add
add
js
push
mov
add
add
add
lahf
std
add
mov
add
ficoml
sti
push
test
pop
popf
jle
stc
add
add
add
mov
rcl
pop
add
add
add
add
jmp
lds
fnstsw
fstpl
in
add
add
add
enter
leave
add
add
mov
lea
pop
mov
xor
add
push
push
lea
push
push
lea
push
push
call
add
add
add
xlat
popf
enter
test
fld
add
neg
cld
lret
loop
add
rcll
add
add
outsl
add
add
pop
mov
popl
mov
mov
xchg
push
add
addl
call
mov
incb
outsl
add
in
in
clc
lods
enter
sar
aam
bound
pop
call
mov
xor
push
push
dec
push
xor
add
ror
sub
ror
rol
pop
ror
rol
rol
pop
push
lea
push
lea
push
push
push
call
in
push
outsl
les
add
xchg
movsl
add
cwtl
pop
add
add
cltd
add
mov
fldl
pop
movsl
imul
add
add
mov
push
add
filds
out
les
jnp
fiadds
add
fnstsw
cmpsb
enter
add
add
pushf
cmp
pop
fldl
add
push
push
push
mov
lea
pop
pushl
push
push
push
call
insb
add
add
lock
les
mov
push
lods
loope
jns
ja
mov
add
add
add
add
xchg
add
add
jbe
cld
in
add
jae
jno
add
add
xlat
jo
mov
sti
imul
mov
fwait
add
xchg
add
cld
add
sbbl
add
jo
add
roll
add
into
add
push
push
mov
mov
std
mov
push
pop
add
add
add
pop
call
mov
push
lea
push
push
push
push
push
push
call
add
add
sahf
add
add
add
mov
ret
add
std
add
rcrb
cmpsl
add
movsb
mov
lock
mov
shl
add
lahf
add
mov
cmc
mulb
mov
add
mov
add
jp
iret
movsl
add
cltd
add
xchg
pop
out
add
pop
movl
lea
push
push
lea
push
call
mov
add
add
add
mov
add
add
add
fstps
out
mov
gs
add
icebp
loop
roll
add
add
stos
sahf
pop
movsb
xchg
mov
add
jp
fidivs
push
add
ret
add
add
jns
add
testb
add
pop
push
pushl
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
movsb
add
add
lret
add
filds
add
mov
loope
mov
add
add
bound
mov
add
lods
popa
stos
mov
popf
mov
out
add
loop
scas
je
pop
add
add
add
jecxz
add
add
arpl
jne
add
mov
xchg
hlt
test
mov
lea
pop
pushl
push
push
push
push
push
push
call
add
add
addb
push
add
xchg
add
jmp
add
add
add
add
in
test
hlt
add
add
icebp
add
add
jo
loope
int
fwait
push
add
add
data16
xchg
xchg
js
in
clc
arpl
xchg
add
jp
stc
add
lcall
add
add
add
jns
icebp
je
mov
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
add
testb
add
push
add
icebp
xchg
pop
add
cmpsb
out
cmpsl
bound
lcall
add
jo
mov
lds
pop
add
lcall
jb
jo
pushf
stos
pusha
movsb
jns
xchg
lods
sarb
add
jo
add
popf
add
repnz
push
add
test
fmull
jne
pushl
call
push
push
shr
push
or
not
add
dec
sub
ror
add
pop
rol
not
shl
pop
push
push
push
push
push
lea
push
push
call
fiadds
push
out
fwait
pop
push
popa
rolb
jle
add
add
mov
add
lret
mov
out
movl
mov
rolb
fimull
add
add
pop
mov
sti
jle
out
mov
jns
jae
mov
add
fisubrl
add
jbe
cld
add
fwait
ljmp
lea
pop
pushl
push
push
push
call
cltd
add
lret
out
mov
cmpsl
mov
xchg
test
mov
jne
add
clc
mov
xchg
pop
in
xchg
add
add
add
xchg
shlb
aam
mov
ljmp
add
rcrb
add
push
xchg
lahf
jbe
mov
cmc
add
add
mov
hlt
lea
pop
call
push
lea
push
push
push
call
add
cmpsl
pop
clc
add
enter
stos
add
jae
mov
add
push
mov
add
xchg
jmp
pusha
fdivl
pop
mov
add
add
xchg
add
add
push
test
imul
add
pop
clc
out
add
push
add
add
cltd
arpl
add
mov
lea
les
adc
inc
push
push
add
push
push
pop
add
shl
dec
lea
sub
sub
sub
pop
sub
sub
shl
pop
push
push
push
push
push
lea
push
push
call
add
xchg
add
fcoml
mov
lret
roll
xchg
add
notb
jle
mov
cli
add
out
cld
add
xchg
jle
mov
add
fstps
add
push
push
fstpl
add
test
scas
enter
int3
jo
add
mov
cmpsl
rclb
ljmp
add
imul
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
xchg
lods
add
add
les
je
cmpsl
xchg
add
ficompl
add
les
cli
xchg
mov
lock
jb
arpl
add
add
add
movsl
mov
idivl
mov
mov
lret
add
jge
in
fs
add
mov
mov
lea
pop
push
call
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
data16
jo
movb
out
roll
icebp
add
mov
jb
add
jns
add
lret
add
mov
add
add
stos
addb
outsl
add
add
xchg
jb
test
add
scas
test
jle
add
cwtl
mov
loopne
jns
push
enter
add
je
mov
lret
mov
pop
mov
push
push
push
push
lea
push
push
call
insb
add
in
mov
ja
movb
lods
fwait
add
pop
add
out
pop
add
mov
push
pop
mov
clc
add
cmpb
add
add
push
stc
add
imul
jbe
bound
add
add
call
int3
outsl
pop
add
add
add
popa
out
gs
add
add
movl
mov
lea
pop
push
push
push
push
push
lea
push
push
call
add
add
push
lahf
add
lods
out
lret
jp
add
fmulp
arpl
mov
add
add
add
mov
fiadds
add
push
add
xchg
mov
add
add
addb
sarl
rolb
add
roll
loopne
add
cmpsl
jecxz
test
out
fiaddl
xlat
fsts
cmpsb
add
pusha
jecxz
xchg
jle
in
lcall
sbb
mov
add
push
push
lea
push
push
push
push
push
call
testl
mov
clc
add
add
add
repnz
add
mov
ret
push
cli
xchg
add
hlt
add
mov
add
add
out
int
mov
imul
sahf
add
add
push
in
scas
pop
int
fstl
les
popf
mov
add
mov
icebp
push
add
mov
add
sbb
add
push
lea
push
lea
push
call
out
movsl
add
mov
add
pop
push
add
lcall
out
rolb
mov
fiaddl
add
add
push
mov
neg
pushf
test
add
rol
andb
add
mov
add
add
add
call
js
sti
xchg
add
add
add
add
mov
jmp
lea
pop
add
push
push
push
push
lea
push
call
ret
add
add
add
add
rolb
rolb
pop
jge
mov
add
rcr
add
mov
add
add
add
add
sahf
jmp
ret
bound
in
mov
add
mov
add
add
add
cmpsb
call
pop
ja
mov
out
mov
ljmp
xorb
mov
test
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
call
add
add
in
lds
add
rolb
roll
push
add
in
add
shr
popa
add
mov
add
add
add
jge
flds
jnp
add
roll
add
mov
add
push
lret
jl
lods
mov
push
clc
add
pop
xor
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
sarb
add
cltd
lret
add
mov
add
mov
add
leave
add
scas
mov
add
add
add
out
int3
add
add
add
jno
testl
add
js
fidivrl
cmc
add
pop
add
add
loopne
fwait
add
add
orb
les
les
add
push
push
push
push
push
push
lea
push
push
push
push
call
test
fwait
mov
add
roll
cmpsl
add
add
add
aam
mov
add
lcall
xchg
pop
rcr
test
pop
rol
addb
shl
mov
xchg
add
int3
add
xchg
add
imul
mov
stc
add
cltd
out
lods
lds
add
lahf
add
add
lahf
add
xchg
mov
add
add
push
pushf
stos
mov
test
mov
roll
mov
pop
add
push
push
push
push
push
push
push
push
push
push
push
call
add
add
xchg
mov
sti
push
mov
in
rcrb
push
pop
add
movsb
lcall
add
mov
xlat
add
push
nop
xchg
jp
repnz
add
in
shll
sti
jb
jnp
add
add
add
mov
jne
mov
lea
pop
mov
push
push
push
push
push
push
push
call
add
add
add
aam
add
add
addl
iret
mov
jmp
cmpsb
lret
add
icebp
add
pop
jb
ret
outsl
mov
add
not
jae
out
into
testb
xchg
mov
push
add
lea
add
popa
stc
aad
fmull
add
push
push
push
push
push
push
push
call
add
push
rolb
add
add
cld
xchg
add
mov
add
js
mov
addr16
fstp
add
add
add
std
loope
mov
add
in
xchg
pushf
in
add
rolb
fwait
sahf
jnp
roll
popa
imul
add
aad
pop
add
add
aad
mov
test
loopne
mov
aad
movsb
mov
lea
pop
add
push
push
push
call
fndisi(8087
add
pop
rolb
add
mov
mov
add
add
mov
outsl
roll
add
mov
in
add
add
add
xchg
add
pop
mov
add
mov
add
loope
add
jbe
roll
add
add
repnz
repnz
add
jle
pusha
mov
lea
pop
add
push
push
push
call
add
ja
lods
xchg
mov
add
testl
repnz
fdivrs
out
mov
add
jge
jo
add
sahf
roll
stc
fildll
add
mov
xchg
pop
std
xchg
add
cltd
xchg
mov
imul
add
add
out
push
in
cltd
mov
jge
roll
xchg
leave
movsb
mov
add
pop
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
lret
xchg
mov
push
data16
cmpsb
push
mov
cli
jp
add
add
add
push
jmp
add
add
mov
mov
andl
sti
add
add
add
jp
add
insb
cmc
add
push
add
mov
jge
in
in
outsl
push
push
add
push
add
xchg
add
cli
jl
mov
xlat
lods
pop
std
add
mov
xchg
in
add
and
or
push
push
push
call
mov
add
push
add
add
add
nop
jne
lret
addl
add
add
pusha
jmp
add
mov
std
cmc
jecxz
add
cwtl
decb
leave
add
mov
push
add
popf
pop
mov
jb
cld
mov
add
ljmp
scas
add
pop
add
push
push
push
lea
push
call
add
jecxz
add
add
fwait
add
add
mov
push
jmp
add
add
add
xchg
sbbl
fwait
in
add
xchg
add
add
push
xchg
ljmp
lahf
jle
add
add
mov
lea
pop
push
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
rorl
add
mov
andl
loopne
mov
add
ljmp
mov
ja
add
lock
push
fnstenv
std
mov
mov
push
add
xchg
add
add
test
add
add
movl
add
movsb
frstor
mov
cwtl
add
mov
add
mov
lea
pop
xor
push
push
push
push
push
push
call
xchg
add
fisubrs
fldl
add
in
add
add
mov
fwait
stos
stos
push
out
rcl
fimuls
add
jp
add
add
xchg
add
mov
add
add
add
arpl
add
add
ja
mov
insb
add
fiaddl
call
flds
push
add
jae
mov
fisubl
add
add
pop
add
push
lea
push
push
push
lea
push
push
push
call
add
add
jne
add
icebp
push
add
nop
aad
lea
add
add
pop
add
cld
sahf
jecxz
add
mov
cwtl
faddp
sti
mov
ret
push
jmp
pop
loop
icebp
add
arpl
ljmp
out
add
add
push
test
ljmp
sub
push
push
lea
push
push
push
lea
push
call
jb
add
add
xchg
fcoms
imul
flds
bound
add
add
int
add
xchg
mov
cwtl
cltd
imul
in
add
fistl
push
lock
add
scas
leave
xchg
scas
pop
xchg
add
bound
add
jecxz
push
fwait
add
hlt
add
insb
mov
lea
pop
pop
rep
push
push
push
push
push
push
call
pop
js
add
pushf
push
push
add
ror
xchg
add
add
xchg
add
mov
test
je
test
lock
fildll
add
pop
add
pop
pop
aad
ret
add
jno
in
add
add
add
add
data16
push
add
add
stos
add
add
add
add
add
mov
lea
pop
pop
mov
add
push
push
lea
push
push
lea
push
lea
push
push
push
call
rcl
jno
push
call
test
mov
add
addb
jecxz
add
add
sti
add
lahf
add
add
cmpsl
jecxz
lock
cli
test
add
add
add
pop
add
xchg
mov
bound
cltd
xlat
add
xchg
add
add
add
jecxz
js
push
cmpb
pop
add
add
mov
push
push
push
push
push
push
push
call
mov
add
add
add
movsb
mov
shrl
add
jnp
add
add
shl
push
fnsave
add
js
les
add
out
mov
stos
add
rol
lds
scas
add
jp
add
cwtl
add
jbe
add
add
push
je
out
add
pop
leave
add
add
cld
lea
pop
xor
push
lea
push
call
xchg
test
out
ja
add
add
aam
add
add
add
add
ja
xlat
add
jecxz
sar
add
ret
stos
ror
mov
xchg
shr
aad
add
lock
xchg
add
add
aam
enter
nop
outsl
add
add
icebp
cmpsb
out
add
add
divl
lea
pop
add
push
push
call
out
add
ret
add
add
nop
xchg
add
cltd
add
add
add
movl
shrl
add
lods
mov
lcall
add
add
add
movsl
pop
mov
cmpsb
xchg
add
mov
pop
add
add
lcall
jae
outsl
add
xchg
jb
add
int3
lea
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
subb
add
in
add
add
rolb
add
add
add
mov
ljmp
add
addr16
loopne
pop
in
pop
xchg
add
mov
nop
lahf
stos
add
jno
fsubrl
xchg
lahf
divb
add
mov
mov
push
xchg
jmp
mov
lea
pop
mov
push
push
push
push
push
call
jns
roll
add
add
loop
add
push
mov
jmp
add
ret
nop
add
fsubrl
into
ljmp
lret
popf
bound
add
movl
add
add
mov
mov
mov
add
add
add
xchg
mov
pusha
add
cwtl
loopne
jbe
in
pop
add
add
in
mov
lea
pop
xor
push
push
call
jbe
add
add
movsb
add
add
add
fsub
jae
je
loope
mov
add
xchg
add
mov
add
in
jne
mov
mov
add
add
add
add
test
pop
or
push
cmpsb
lret
fwait
xlat
add
add
push
add
add
ja
gs
sahf
xchg
in
pop
jle
add
xchg
add
hlt
cld
push
add
pop
add
add
push
push
push
push
lea
push
push
push
lea
push
call
subl
fstpl
data16
xchg
push
hlt
enter
add
aam
pop
push
fcmovb
add
movsb
add
jle
js
mov
add
mov
mov
push
cmpsl
jl
add
pop
rolb
push
jmp
xchg
lods
add
add
sarb
add
add
in
not
rcrl
jle
and
add
jle
add
cld
lea
pop
add
mov
push
push
ror
push
or
inc
add
add
sub
rol
sub
sub
sub
lea
pop
shl
pop
push
push
push
push
push
push
push
push
call
add
fcmovnb
add
lahf
imul
xchg
imul
jge
add
mov
gs
in
add
jle
pop
out
add
mov
xchg
jnp
add
xchg
pop
stc
lcall
push
cltd
pop
xchg
scas
add
rolb
popf
pushf
add
push
mov
add
add
mov
repnz
je
add
outsl
add
xlat
fisubl
lea
pop
pushl
call
push
push
push
ror
push
xor
add
lea
ror
add
sub
sub
not
pop
shl
ror
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
add
in
add
mov
fcompl
jle
jle
stos
xchg
add
out
add
call
push
test
add
push
add
add
mov
mov
scas
fcmovnbe
shrb
pop
add
insb
add
add
add
pop
add
push
add
mov
mov
lds
hlt
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
jo
jne
add
mov
filds
in
add
add
add
js
iret
insb
lods
ret
movsb
add
in
add
sahf
in
loop
add
jecxz
add
add
jmp
roll
add
add
add
pop
push
movsl
add
add
js
rcrb
mov
aam
add
lea
xchg
movsl
jno
add
scas
mov
lea
pop
push
push
push
call
mov
enter
hlt
add
ja
fs
mov
add
add
jnp
mov
jo
pop
cltd
mov
push
sarl
add
add
jbe
pusha
sahf
addr16
leave
mov
ljmp
aam
add
xchg
add
push
icebp
mov
add
lret
lea
push
jno
add
pusha
or
rorb
push
push
push
call
stos
add
hlt
mov
js
add
mov
add
out
lods
popa
out
ficompl
ja
frstor
add
test
mov
lock
xchg
add
mov
add
add
xchg
test
int
jecxz
cwtl
add
add
add
add
sbbl
mov
add
xchg
pop
xchg
add
jb
mov
lea
pop
push
push
lea
push
push
call
mov
les
shr
add
ja
in
mov
add
push
fdivs
push
pushf
jle
add
fildl
out
push
jge
add
jbe
xchg
add
push
lcall
add
mov
add
add
add
aad
lahf
add
data16
mov
add
mov
cmc
xchg
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
leave
xchg
scas
mov
add
mov
add
xchg
lea
fildl
jp
movsl
test
add
fisttps
cmp
add
ja
imul
in
lock
add
add
add
aad
mov
in
movsl
mov
add
add
xchg
addr16
add
lret
test
push
push
data16
jne
shlb
into
je
je
les
pop
in
add
push
push
lea
push
push
call
add
pop
add
cmpsb
mov
add
add
mov
arpl
jne
push
pop
mov
add
sti
push
push
mov
jle
cmpsl
mov
jno
cmp
pop
add
mov
jns
scas
aam
add
scas
add
mov
add
mov
lea
pop
add
add
push
push
push
call
add
add
add
pop
mov
sti
mov
into
add
int
xchg
jo
rolb
add
xchg
cmpl
aam
cltd
push
ret
mov
jae
add
aam
add
popa
nop
add
out
add
rolb
add
add
add
add
add
add
pusha
jns
int3
mov
add
lods
add
add
popa
or
mov
push
push
push
lea
push
push
push
push
call
add
int3
add
add
mov
cmc
je
mov
add
out
add
add
clc
add
add
add
mov
out
add
add
mov
test
je
repnz
pushf
add
cmpsl
stc
clc
add
fldl
insb
mov
movb
add
add
add
movsb
add
cli
scas
mov
mov
andl
lea
pop
xor
push
lea
push
push
push
push
lea
push
push
push
call
add
push
leave
stos
stc
add
rol
repnz
into
add
scas
cmc
lods
mov
add
add
stc
add
add
mov
add
mov
cwtl
in
decb
cmpsb
popa
add
fs
add
add
pushf
add
mov
test
jge
add
mov
jmp
popa
js
mov
add
add
pop
add
push
lea
push
push
push
push
push
call
jns
rol
add
mov
incb
xchg
nop
xchg
add
imul
call
jbe
add
add
xchg
xchg
gs
ljmp
add
in
add
add
add
imul
push
out
add
push
out
add
add
jno
mov
add
add
mov
int3
lea
pop
add
push
sub
pop
push
push
add
shl
pop
mov
xor
push
push
lea
push
call
pop
add
add
pop
andb
icebp
add
add
mov
add
add
sbb
cmpsb
add
add
faddl
shl
popf
add
adcl
lret
add
add
add
insb
mov
add
js
lret
add
lea
jmp
faddl
lcall
cli
stc
add
lea
pop
add
push
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
in
add
js
add
push
add
int3
mov
xchg
in
add
add
jecxz
leave
ficoml
add
ja
lock
xlat
pop
xchg
jecxz
mov
add
filds
add
test
stos
popf
shrb
jmp
add
bound
add
jns
add
shll
xchg
cmc
add
aam
bound
pop
mov
push
push
push
push
call
jle
add
fildll
add
add
addr16
xorl
add
out
add
mov
nop
add
std
mov
testl
pop
add
add
add
add
add
add
mov
mov
stos
movsb
add
movb
pushf
add
call
fadds
std
mov
lea
pop
xor
push
lea
push
call
jmp
test
add
icebp
mov
xchg
icebp
add
fcom
jmp
add
add
add
mov
add
aad
addb
scas
xorb
pop
mov
int3
jno
out
out
jle
push
add
outsl
add
movsl
add
add
leave
imulb
cmpsl
mov
add
cld
add
add
mov
add
mov
xchg
mov
add
or
les
push
push
lea
push
push
call
loop
xchg
stos
mov
add
add
jns
add
sbbl
les
jp
out
mov
scas
add
xchg
add
mov
add
xchg
add
add
clc
add
leave
lock
movsb
xchg
rcll
mov
mov
jae
jnp
push
add
in
add
add
faddl
fldl
mov
popf
add
push
mov
lea
pop
rep
push
sub
sub
xor
pop
mov
xor
or
je
push
shl
xor
sub
pop
mov
xor
push
push
push
lea
push
push
push
call
add
lods
add
mov
add
mov
mov
jne
add
add
pop
add
scas
mov
imul
mov
xchg
add
add
jp
add
add
add
push
fwait
lret
add
pop
push
pop
sti
add
add
test
mov
add
jbe
cld
pop
add
pop
mov
push
push
lea
push
push
lea
push
push
call
add
jmp
add
mov
int3
je
xchg
ja
add
test
add
add
out
lret
pop
add
pop
add
stos
push
sahf
xchg
movsl
fisubrl
int3
jp
add
stos
mov
mov
add
mov
pop
scas
add
imul
lds
ret
lea
mov
adc
xor
push
push
lea
push
push
call
add
mov
arpl
pusha
add
repnz
jl
add
lods
add
cmpb
add
add
add
add
test
pop
pop
cmpsl
mov
add
add
fidivl
loope
add
add
faddl
lods
mov
bound
out
mov
lea
pop
add
push
lea
dec
add
pop
add
push
sub
xor
pop
add
push
mov
xor
push
lea
dec
pop
add
pop
rep
push
pop
mov
push
push
push
call
cld
gs
test
fadds
fisubl
add
insb
add
cli
mov
add
mov
xorl
xchg
nop
add
jp
push
shl
push
data16
jecxz
lea
cwtl
cmpsl
add
jmp
add
xchg
add
imul
enter
mov
add
rcl
pop
jnp
push
mov
or
or
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
test
iret
add
mov
call
mov
add
add
add
mov
add
jo
add
push
addr16
ffree
lret
mov
add
add
pushf
add
add
add
add
stos
add
xchg
push
testl
movl
lea
pop
add
push
add
sub
sub
pop
or
je
mov
add
push
inc
rol
inc
pop
add
push
not
inc
pop
rep
push
push
push
push
push
push
push
lea
push
call
mov
fcomp
cmc
add
jp
testl
nop
add
negb
mov
jge
lods
add
addl
movsb
pusha
mov
add
int
mov
add
negb
test
mov
pop
add
push
ficomps
mov
loop
mov
add
xchg
leave
mov
add
test
add
add
les
push
push
sub
xor
sub
shl
push
or
not
add
xor
add
sub
inc
pop
add
pop
pop
push
shr
dec
shl
pop
mov
mov
mov
push
push
push
push
push
push
lea
push
push
push
call
ficomps
stos
stos
jnp
mov
aad
sti
pop
sahf
out
fstpt
add
out
add
add
mov
clc
lea
add
add
iret
lds
add
fadd
add
add
fadds
jo
stos
stc
mov
insb
arpl
ret
add
add
mov
add
cmpsl
add
test
add
fmull
loopne
push
rol
pop
mov
push
rol
sub
xor
pop
add
push
push
push
push
call
add
jge
out
test
add
out
in
xchg
add
add
jle
cwtl
iret
mov
add
add
lret
lahf
mov
fcmovb
jbe
in
cltd
js
pop
roll
add
ficoml
add
rcll
sahf
pop
in
add
add
mov
push
mov
add
ret
add
add
add
mov
push
les
push
ror
dec
pop
push
push
push
push
push
push
push
push
push
push
call
lcall
add
ret
xchg
add
into
lret
out
add
add
scas
jo
mov
cld
mov
jge
jno
pusha
test
xchg
jge
mov
jo
rolb
call
add
add
cmpsb
shlb
arpl
add
test
jno
mov
add
add
pop
xlat
jns
lds
mov
nop
add
cltd
add
add
add
bound
int3
lea
pop
push
push
push
push
push
push
call
add
add
add
add
jo
jecxz
add
lahf
push
xchg
jae
add
test
add
add
add
leave
mov
lret
lock
add
mov
pushf
add
imull
icebp
ret
int3
xlat
cmp
add
jle
fwait
in
xchg
popa
add
jo
js
jmp
pop
arpl
pop
jns
jl
aad
stos
roll
pop
add
stc
add
add
add
ljmp
popa
adc
mov
pop
pop
push
dec
pop
pop
pop
leave
push
ror
sub
lea
shr
pop
ret
push
mov
push
push
push
call
aam
add
data16
mov
add
pop
add
push
pop
mov
add
out
call
jge
pop
mov
push
addb
test
add
add
leave
add
add
mov
add
add
addl
add
mov
add
lea
pop
add
push
push
push
push
push
push
push
call
shrb
fiadds
imul
ret
add
sti
add
add
in
sahf
bound
imul
test
add
fstps
add
faddl
cltd
pop
add
add
in
add
push
jmp
int
mov
add
push
add
outsl
pop
add
xchg
leave
push
add
popf
xchg
mov
add
add
add
cmp
add
lea
pop
push
push
push
push
push
push
call
notb
fs
add
mov
lods
loope
cmpsl
mov
in
add
add
add
add
test
movsb
add
imul
add
mov
pop
add
add
add
into
mov
out
add
movsl
add
add
add
stos
clc
int
add
add
data16
movl
push
push
call
add
in
add
add
add
mov
rolb
fs
jno
add
jmp
add
cwtl
ja
mov
add
add
jecxz
mov
add
add
add
hlt
xchg
gs
add
call
bound
mov
add
add
shl
lods
add
icebp
in
mov
lea
pop
addl
push
xor
sub
add
pop
test
je
push
lea
push
push
push
push
push
push
push
push
call
insb
call
mov
add
out
add
notb
add
pop
add
push
add
mov
add
int3
lock
pop
mov
mov
aam
cmpsl
add
lret
je
lcall
add
in
add
out
lods
loop
mov
lods
add
add
scas
ret
clc
ljmp
and
mov
pop
pop
push
push
push
push
lea
push
push
push
call
add
push
add
lcall
cmc
fldcw
stc
add
push
imul
lahf
xchg
mov
add
push
add
xchg
insb
fldl
jecxz
add
scas
pop
add
add
mov
add
add
add
testb
add
add
fstp
fisubs
jo
arpl
sahf
add
les
xchg
out
or
add
lock
jmp
popa
mov
lea
pop
pop
push
shl
ror
pop
pop
leave
push
dec
xor
inc
pop
ret
push
shr
shl
xor
pop
push
mov
push
push
push
call
add
pop
test
in
mov
hlt
lea
fdivl
cli
movsl
pop
add
add
pop
rolb
add
mov
push
movsb
pop
add
add
addb
push
add
add
test
xchg
mov
stos
push
mov
lds
add
jo
add
xchg
push
add
add
movsb
add
lahf
push
addl
pop
add
pop
add
push
push
push
push
push
call
add
add
add
out
in
add
add
mov
add
lahf
lret
out
shl
lcall
je
add
add
rolb
jne
mov
add
subb
add
add
scas
arpl
fwait
nop
jnp
int
add
lcall
cld
lea
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
loopne
int3
add
pusha
cmpsb
add
lahf
imul
xchg
add
stos
xchg
add
jns
pop
add
test
add
xlat
mov
jb
pop
jge
add
insb
iret
data16
mov
add
add
jne
fistps
add
enter
mov
xchg
ficoml
add
add
pop
add
jbe
stos
jle
leave
cmpsb
jnp
push
add
lea
pop
push
push
testl
push
push
lea
push
lea
push
push
push
call
pushf
add
add
outsl
add
jae
clc
rcr
rolb
add
in
addb
add
pop
cmpsb
add
add
lods
push
mov
cmpsl
add
add
add
loop
aad
add
testl
aad
call
leave
ja
insb
add
add
add
pop
mov
add
shr
int3
lea
pop
addl
push
ror
lea
add
pop
push
push
push
push
push
lea
push
call
add
xchg
fdivp
fiaddl
mov
add
add
add
cmpsl
add
ja
add
add
add
jle
add
add
fcomps
rolb
mov
fcomps
push
add
add
add
loope
push
pushf
iret
jge
test
mov
add
shl
add
add
lea
pop
call
push
lea
push
push
push
push
push
lea
push
push
call
jge
jb
xchg
addl
add
js
add
lret
movb
int3
push
add
add
jo
call
xchg
jecxz
add
add
add
mov
hlt
lods
lret
add
add
movb
movsl
add
mov
xchg
add
add
add
movsb
add
movsb
lahf
add
add
add
push
test
bnd
les
inc
cld
pushl
push
push
not
lea
shr
shr
pop
push
push
rol
not
add
pop
call
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
add
add
add
add
andb
not
pop
add
shrl
mov
mov
jbe
rolb
add
out
cmpsb
jns
add
add
mov
add
push
pushf
push
movl
mov
add
add
add
pop
cmpl
jne
pop
pop
push
push
push
call
add
push
mov
add
iret
stc
add
add
lods
add
add
imul
add
mov
add
add
add
jmp
out
pop
add
jp
mov
push
add
add
xchg
xchg
out
out
add
in
jno
fiadds
jle
shl
loope
jbe
add
jl
jl
mov
lea
pop
pop
push
push
push
push
call
add
xchg
push
mov
add
outsl
loop
imul
loopne
add
cltd
jmp
jbe
add
arpl
pop
mov
add
ja
push
add
gs
fiadds
loopne
cltd
mov
movb
imul
mov
js
mov
add
add
cmpsl
cld
cli
movsb
pop
add
push
movsl
popf
add
jbe
hlt
lea
pop
pop
push
pop
leave
ret
push
rol
shr
pop
push
mov
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
mov
push
add
add
cld
pop
loopne
mov
popf
add
jl
push
add
lds
add
push
add
test
jne
mov
addb
lock
push
add
mov
test
cli
add
add
jns
test
add
cmpsl
aad
roll
xchg
add
into
pop
mov
outsl
clc
mov
lea
pop
add
push
push
push
inc
rol
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
movsl
add
cmc
pop
mov
addl
mov
add
jl
std
add
add
add
test
add
popa
add
add
mov
fiaddl
xchg
push
in
push
pop
test
int
aam
gs
fcompl
mov
out
add
jge
rolb
cwtl
popl
aam
xlat
in
pop
jl
mov
rolb
mov
lea
pop
push
push
inc
shr
pop
movl
push
rol
sub
shl
pop
push
push
shl
not
pop
call
push
push
push
push
call
jle
add
out
movsb
fsub
add
mov
add
xchg
stos
fcomip
add
shlb
addr16
add
rol
loop
mov
add
add
mov
pop
jb
call
add
add
jo
pop
bound
shr
add
xchg
out
add
in
add
xchg
mov
xlat
imul
pop
call
push
sub
inc
pop
subl
push
shl
pop
cmpl
jne
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
leave
incb
cmp
jmp
add
mov
add
add
leave
cmpsl
test
int
add
jo
xchg
jbe
mov
pop
mov
add
add
movsl
add
mov
xchg
add
fs
add
add
jp
fwait
add
movb
stos
scas
in
aad
nop
add
not
addr16
popf
add
push
pop
push
hlt
lea
pop
pop
push
lea
push
push
call
addl
xorb
add
add
mov
js
xchg
add
mov
call
xchg
into
cmpsb
leave
stos
loope
add
aam
mov
mov
mov
ja
add
stos
add
std
js
jne
loopne
add
add
pop
jae
and
addb
xchg
negl
lods
add
add
test
out
hlt
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
add
scas
cld
mov
add
aad
cwtl
add
test
mov
in
mov
jmp
cmpsb
pop
add
add
lret
mov
cmpsl
add
nop
cmc
repnz
mov
add
mov
add
roll
add
ja
les
mov
in
mov
lcall
add
roll
add
add
add
push
add
mov
lea
pop
pop
push
shl
not
pop
leave
push
push
push
push
push
push
push
push
lea
push
push
call
jecxz
mov
xchg
add
int3
pop
push
add
add
add
fldenv
cmpsb
lods
mov
add
orl
shl
std
add
mov
add
imul
xchg
enter
add
add
lods
xlat
push
pop
arpl
cmc
loope
in
add
push
add
add
nop
mov
lea
pop
ret
push
mov
push
rol
pop
add
push
dec
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
ljmp
add
flds
out
cmpsb
add
rcrl
pushf
add
add
call
add
add
fisttpl
add
shl
int3
add
add
cmpsl
data16
mov
add
add
add
add
jo
mov
mov
add
lds
xlat
jo
add
gs
xchg
pushf
cmpsl
add
add
mov
lea
pop
push
push
ror
pop
mov
push
add
pop
lea
sub
mov
push
push
lea
push
call
rol
aam
mov
pop
mov
push
add
add
jae
mov
add
jnp
add
addl
mov
add
add
add
sahf
add
data16
add
bound
imul
je
add
insb
testb
add
push
int
push
add
test
fwait
mov
add
add
add
add
push
stc
hlt
add
pop
shr
push
push
push
push
push
push
push
push
push
call
add
add
in
data16
add
jecxz
mov
popl
mov
std
mov
add
fsub
jbe
negl
jae
add
lret
insb
addr16
add
add
lcall
ret
mov
add
add
jne
sar
add
pusha
add
cmc
popf
xchg
pusha
leave
add
repnz
in
fildl
mov
pushf
aad
jbe
mov
lea
pop
add
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
loop
mov
jo
hlt
add
add
fs
data16
add
fnsave
hlt
mov
add
je
ret
fdivs
xchg
add
add
push
fwait
add
add
insb
xchg
add
add
add
jnp
add
add
call
mov
sti
cmpb
lea
testb
mov
bound
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
add
out
add
add
cld
stos
icebp
pop
add
shl
ja
mov
fnsave
pop
cltd
fisubrs
arpl
aad
neg
pop
loop
nop
add
push
add
fldl
mov
mov
add
add
add
add
cld
sahf
scas
mov
int
mov
arpl
cmpsb
mov
add
in
add
imul
leave
jle
pop
fldl
testl
push
lea
ror
pop
add
push
sub
add
sub
pop
mov
push
push
push
call
add
in
add
add
jnp
add
loop
add
push
add
lock
add
cmc
pop
loope
stos
std
loopne
pop
add
add
stos
filds
lahf
mov
int3
cld
sahf
push
xchg
call
add
pop
xchg
lea
mov
jecxz
mov
xchg
add
jmp
mov
jmp
mov
adcb
stos
out
gs
add
lea
pop
mov
push
pop
cmp
jne
cmp
jne
mov
push
ror
dec
inc
shr
pop
movl
jmp
mov
push
sub
ror
shr
pop
mov
push
push
push
push
push
push
push
call
push
test
mov
xchg
in
add
pop
push
ljmp
jae
push
add
clc
loop
add
cmpsl
scas
add
push
mov
xchg
add
pop
add
cwtl
jne
loopne
jge
sahf
add
fwait
call
notb
jge
jge
mov
add
fildl
add
push
add
pop
mov
lea
pop
sub
jne
push
add
dec
inc
pop
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
addb
mov
xchg
add
mov
fiaddl
scas
jp
cwtl
fldt
add
jb
xlat
mov
add
out
lret
add
mov
out
testl
mov
mov
aad
push
test
cmpsl
add
push
add
add
adcb
add
add
mov
scas
add
jns
shl
stc
imul
and
add
add
push
shr
not
pop
jmp
push
lea
inc
pop
mov
push
inc
sub
pop
mov
push
sub
pop
cmp
jne
push
lea
push
push
push
push
push
call
jns
test
scas
cmpsb
add
enter
add
flds
add
push
aam
pop
add
fwait
pop
gs
add
fcomi
pop
test
add
out
add
incb
add
mov
aad
xchg
loopne
add
push
imulb
add
jnp
xorl
shlb
mov
add
mov
pop
mov
out
stos
test
arpl
pop
mov
movl
jmp
push
add
lea
pop
mov
cmpw
jne
mov
push
inc
ror
not
pop
movl
push
pop
jmp
pushl
push
ror
pop
pop
mov
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
fucomi
add
out
add
push
add
bound
lret
rolb
mov
add
add
add
add
pop
stos
out
add
mov
fstl
out
into
test
add
hlt
fs
add
add
add
mov
mov
mov
into
add
into
js
add
push
out
addr16
lea
pop
mov
push
push
push
sub
add
add
dec
rol
sub
pop
shr
sub
pop
push
push
sub
add
shl
pop
call
cmpl
je
push
push
shr
shr
push
or
inc
add
not
sub
xor
pop
xor
pop
push
add
shl
pop
push
push
lea
push
push
push
push
lea
push
call
add
sarl
stos
mov
bound
out
scas
fcmovnbe
js
add
pop
cltd
int
mov
jecxz
scas
addl
ja
add
pop
cwtl
push
stc
js
ja
mov
mov
add
add
shlb
mov
mov
add
lcall
add
subl
andb
add
scas
addb
jns
cli
stc
add
pop
call
cmpl
je
push
push
shl
add
push
push
pop
add
inc
dec
not
add
sub
not
ror
shr
inc
pop
pop
push
lea
sub
pop
push
call
push
xor
shr
pop
cmpl
je
push
push
xor
not
lea
push
sub
add
not
add
sub
shl
sub
lea
add
pop
add
inc
pop
push
push
lea
push
lea
push
push
lea
push
push
call
leave
add
loope
add
movl
neg
mov
jmp
movsl
sbb
add
add
shlb
add
add
mov
in
add
lahf
stos
add
lahf
add
add
iret
add
add
mov
add
mov
add
test
test
mov
lea
pop
call
cmpl
je
push
push
rol
push
push
pop
add
inc
rol
sub
sub
not
pop
rol
sub
sub
dec
pop
push
inc
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
jne
stos
ljmp
add
in
mov
add
mov
add
hlt
add
pop
insb
jne
add
into
add
ja
add
push
add
mov
add
xchg
sbbl
add
add
add
faddl
add
add
mov
lods
mov
lea
pop
call
cmpl
je
push
push
add
add
not
push
or
not
add
add
sub
ror
pop
not
pop
push
push
push
lea
push
lea
push
push
lea
push
call
fs
jle
add
mov
lcall
movsl
faddl
mov
roll
add
mov
add
add
fidivrl
push
push
add
ret
lods
add
mov
fstl
popa
stos
add
add
xchg
cmpsb
nop
add
test
int
mov
add
sti
add
pop
push
push
inc
pop
call
push
push
call
mov
mul
pop
add
jecxz
mov
mov
lds
iret
xchg
pop
mov
mov
test
sti
loop
add
pop
add
add
add
add
lods
scas
clc
enter
mov
popa
out
ret
add
les
add
shlb
test
add
add
add
sarl
or
cmp
rol
je
push
push
sub
push
xor
add
add
sub
sub
pop
add
pop
push
sub
inc
pop
push
push
push
push
push
push
push
push
call
xlat
je
cmc
mov
fwait
add
add
lahf
cmpsl
add
cli
stos
add
cmpsl
jmp
add
leave
roll
in
jae
pop
add
add
add
mov
add
out
add
jno
xchg
add
add
jle
out
in
imul
fs
mov
fcmovnb
add
mov
mov
lea
pop
call
push
lea
pop
cmpl
je
push
push
xor
ror
shr
xor
push
sub
add
add
inc
ror
sub
not
sub
pop
add
dec
add
pop
push
add
lea
shl
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
test
shlb
stos
add
mov
fwait
cld
arpl
add
lret
icebp
movsb
stos
add
add
in
test
imul
movb
add
ljmp
mov
js
mov
je
std
add
mov
xlat
mov
addl
xchg
test
fmul
stos
mov
lea
pop
call
push
ror
not
inc
pop
cmpl
je
push
push
add
xor
push
xor
add
lea
add
sub
inc
pop
not
ror
pop
push
add
ror
pop
push
call
cmpl
je
push
push
inc
push
and
add
lea
ror
sub
lea
pop
ror
rol
pop
push
ror
shl
pop
push
call
cmpl
je
push
push
add
dec
push
and
add
ror
sub
ror
dec
not
inc
pop
shr
shl
inc
pop
push
dec
ror
pop
push
call
cmpl
je
push
push
sub
push
sub
add
sub
dec
pop
add
rol
sub
pop
push
push
call
add
aad
in
cli
xchg
out
push
lea
rclb
xlat
add
ja
int
push
push
add
movsl
sbbb
pop
add
mov
movb
xchg
rolb
add
add
cli
add
add
mov
out
lahf
add
xchg
jae
mov
cwtl
rolb
lahf
cli
jno
mov
lea
pop
push
push
inc
rol
pop
call
push
push
push
push
push
call
rolb
add
mov
add
push
pop
xchg
filds
add
repnz
mov
add
add
add
mov
icebp
add
ret
jbe
xchg
add
mov
add
imul
outsl
cli
mov
add
lds
jge
xchg
add
in
add
push
add
movsb
add
add
mov
sbbl
subb
add
pop
cmpl
je
push
push
rol
sub
rol
push
sub
add
shl
add
add
sub
ror
lea
pop
lea
pop
push
inc
sub
pop
push
call
push
push
push
lea
push
push
lea
push
call
add
mov
xchg
loopne
ljmp
add
jae
add
iret
add
add
add
iretw
add
add
pop
add
mov
add
cmc
add
push
jmp
add
imul
add
jp
add
shrl
jae
add
add
lcall
push
xlat
add
sbb
js
xor
pop
ret
cmpsb
add
add
mov
movl
jmp
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
add
add
in
jo
movsl
add
mov
stos
jp
add
mov
mov
add
flds
pop
rolb
les
lock
ljmp
add
add
add
cld
lcall
mov
mov
jnp
pop
aam
les
movsb
add
jo
lcall
add
jno
mov
push
jo
mov
lea
pop
xor
push
sub
pop
pop
push
push
push
push
lea
push
push
push
call
test
mov
hlt
fwait
xlat
pushf
mov
filds
add
js
add
add
add
add
add
cltd
loop
mov
cmpsl
shll
add
fnstcw
add
add
add
jae
in
iret
add
stc
jle
out
add
ljmp
lahf
ljmp
data16
jne
mov
lret
mov
roll
mov
lea
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
loopne
jo
loop
add
fwait
mov
add
add
stc
mov
add
jle
add
add
add
lea
add
movsb
add
mov
pop
lds
add
add
fiadds
add
push
xorb
pop
xchg
in
mov
mov
fs
test
jb
push
aam
add
lret
add
aam
add
pop
pop
push
push
push
call
add
aam
stc
mov
xchg
cmpsb
add
mov
mov
mov
add
cwtl
js
stos
xchg
add
pop
out
jnp
pop
add
add
jecxz
add
mov
cmc
add
loope
hlt
loope
add
movsb
movb
mov
rcrl
add
jo
mov
add
mov
hlt
mov
hlt
add
add
jno
outsl
fldl
les
roll
add
arpl
mov
fmull
push
add
not
sub
pop
leave
ret
push
push
lea
ror
pop
mov
add
push
sub
not
pop
cmpl
jne
push
push
sub
shl
inc
push
sub
add
add
inc
add
sub
add
pop
xor
not
sub
dec
pop
push
dec
add
pop
pushl
push
shl
inc
not
pop
call
push
call
push
lea
push
lea
push
push
push
push
push
push
call
push
imul
mov
add
add
add
jb
mov
loopne
aad
mov
mov
add
pop
out
test
in
jmp
out
in
sti
out
lods
push
in
mov
lea
add
add
loope
jecxz
pushf
movb
aam
xchg
xchg
mov
mov
int
add
mov
ja
mov
jb
add
mov
lea
pop
jmp
push
add
pop
cmpl
je
cmpl
jne
push
push
push
call
arpl
scas
xchg
add
loopne
fdivr
add
add
jae
add
aam
mov
mov
out
add
xchg
add
add
leave
add
mov
bound
divb
push
add
push
test
add
lods
add
add
add
ljmp
add
test
std
imul
jge
pusha
flds
movsb
jns
mov
jae
ljmp
lea
pop
leave
add
push
lea
push
push
push
push
push
call
loop
popl
add
xchg
xchg
mov
mov
add
mov
add
add
stos
add
add
lret
add
mov
enter
add
add
movsl
add
pusha
fstpt
jns
outsl
add
mov
mov
add
jl
stc
add
mov
add
test
pop
pop
push
lea
push
lea
push
call
icebp
flds
add
add
cltd
int
push
jge
xchg
add
rcrb
add
loope
mov
add
int
push
push
add
add
add
add
clc
fiaddl
scas
pop
outsl
rcrl
mov
pop
jmp
imul
add
bound
outsl
add
add
push
add
loop
add
add
sbb
add
lods
out
add
mov
aam
bound
pop
push
rol
lea
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
out
xchg
mov
call
popf
mov
in
lods
add
jmp
add
cmc
leave
add
loop
add
xchg
add
jl
call
movl
stos
sti
push
mov
lcall
shlb
add
add
add
add
add
add
movsb
add
add
add
cld
arpl
js
xorb
in
imul
pop
push
push
lea
push
push
push
push
push
push
push
call
add
test
xchg
aam
add
add
popf
mov
mov
add
add
mov
add
push
add
add
addb
out
push
stos
lods
add
shrb
popl
add
jne
leave
jns
xchg
add
aad
add
add
add
test
add
aad
add
mov
stc
jp
mov
lea
pop
leave
push
lea
sub
not
pop
add
push
pop
ret
jmp
push
lea
add
pop
cmpl
jne
push
push
not
lea
push
xor
add
add
sub
sub
add
pop
ror
pop
push
inc
lea
sub
rol
pop
pushl
push
push
push
call
repnz
add
sbbl
mov
jecxz
ja
add
arpl
pop
pop
cmc
fs
add
xchg
xchg
add
add
fwait
jmp
push
mov
pushf
add
add
push
add
add
test
ljmp
pusha
add
add
add
add
add
add
add
xchg
pusha
add
add
add
add
add
jl
cld
lea
pop
call
push
xor
lea
pop
push
push
shl
pop
call
jmp
cmpl
jne
push
push
call
imul
popf
add
xchg
add
pushf
add
push
cwtl
icebp
test
add
add
jmp
out
pusha
jnp
add
cltd
jp
add
mov
loopne
lret
add
add
testl
ja
nop
cltd
outsl
push
ret
add
pop
add
jecxz
ja
imul
addb
outsl
pushf
add
add
push
add
sahf
mov
add
fistl
aam
bound
pop
mov
push
lea
pop
mov
call
push
sub
pop
push
pop
push
push
push
lea
push
call
jle
ficomps
loopne
add
add
iret
loope
insb
lahf
add
xchg
push
add
add
fiadds
mov
call
xchg
add
add
test
je
add
jb
pop
mov
or
xchg
std
mov
add
add
add
add
ljmp
mov
mov
lea
pop
dec
jne
push
lea
sub
pop
call
jmp
call
push
push
add
add
push
or
not
add
inc
sub
pop
rol
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
loop
mov
out
enter
insb
add
rcr
ja
add
add
add
call
test
add
add
into
stc
fadds
popf
xchg
out
add
stc
imul
icebp
add
add
add
add
pushf
add
add
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
push
call
mov
mulb
mov
add
add
nop
xchg
add
mov
add
xchg
add
pushf
add
jo
add
add
out
jo
mov
mov
jge
add
lret
mov
testb
in
out
ja
pusha
mov
out
add
enter
mov
jmp
fiadds
popf
jbe
add
add
add
push
add
cmpsl
popf
jp
add
imul
call
push
dec
lea
pop
push
push
add
pop
call
mov
lea
push
push
sub
shr
push
and
add
sub
shl
sub
sub
sub
pop
inc
not
pop
push
add
pop
pushl
call
push
push
shr
not
pop
call
push
push
not
dec
push
or
inc
add
add
rol
dec
sub
ror
xor
sub
sub
pop
pop
push
add
pop
pushl
push
shr
ror
xor
pop
call
push
inc
add
pop
call
push
shr
pop
mov
push
rol
inc
not
sub
pop
lea
push
push
sub
inc
sub
shr
push
and
add
add
dec
add
sub
shl
not
shl
sub
pop
ror
rol
pop
push
push
push
push
push
push
push
call
mov
mov
add
mov
out
cld
in
add
add
lods
icebp
push
movsb
data16
xor
xchg
push
out
outsl
fimull
add
add
add
xchg
add
nop
lock
add
pop
lret
add
loope
insb
cmp
cmpsb
repnz
movsb
add
xchg
jno
out
mov
add
add
fldl
ret
add
mov
lea
pop
pushl
call
push
lea
add
sub
pop
lea
push
rol
pop
push
push
push
push
inc
shr
pop
pushl
push
push
shl
sub
inc
push
or
not
add
shr
sub
lea
pop
shl
pop
push
sub
ror
sub
pop
push
push
rol
pop
call
push
push
add
add
shl
push
and
add
ror
inc
ror
sub
rol
pop
sub
ror
pop
push
not
add
pop
pushl
push
dec
xor
pop
call
push
push
push
lea
push
push
push
push
push
push
call
add
movsb
add
cld
add
gs
add
add
push
outsl
pushf
in
mov
lahf
fmul
add
add
into
add
add
mov
cmc
clc
push
pop
jne
add
mov
add
in
pushf
add
stos
add
in
pop
gs
fstpt
add
add
xchg
bound
addb
add
data16
add
movsl
add
popa
mov
lea
pop
push
push
dec
pop
call
push
push
rol
inc
lea
push
and
add
lea
rol
sub
dec
sub
shl
pop
xor
dec
pop
pushl
push
shr
xor
pop
call
push
push
push
lea
push
push
push
push
push
lea
push
call
add
lret
xchg
test
add
cmpsl
pop
add
imul
stos
add
add
add
test
add
in
movsl
add
add
push
add
in
roll
pusha
mov
xchg
pop
add
movsl
add
add
mov
mov
add
add
std
int
push
std
add
add
add
out
sahf
add
add
mov
lea
pop
call
jmp
pushl
push
shr
shr
rol
pop
mov
jmp
push
push
xor
dec
push
push
pop
add
sub
sub
lea
dec
pop
dec
pop
push
dec
pop
pushl
push
shr
sub
shl
pop
call
push
lea
push
push
lea
push
push
push
call
add
add
jle
fstpt
add
lcall
cwtl
in
pushf
pop
add
lods
add
cltd
pusha
mov
pop
adcb
mull
add
push
mov
add
repnz
add
fldl
add
lahf
insb
pop
cltd
add
mov
add
iret
mov
xchg
add
add
mov
add
fnsave
fldl
movl
les
add
shrb
sbb
inc
push
add
add
ret
in
or
xor
add
dec
sub
shl
pop
inc
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
loopne
jecxz
enter
mov
hlt
mov
add
stc
add
mov
into
incb
add
nop
add
fldl
repnz
flds
push
push
mov
mov
lods
push
add
ror
lret
addl
mov
xchg
ljmp
fadds
jo
add
cmc
mov
xchg
pop
add
addl
jecxz
mov
pop
pushl
push
xor
pop
call
push
push
push
call
add
stos
xchg
add
add
jnp
pop
imul
add
add
add
data16
in
add
push
add
add
flds
mov
ljmp
xchg
add
addl
fstpl
out
add
add
fyl2x
add
add
sbb
pop
les
xchg
jge
add
pop
call
leave
push
dec
add
pop
add
push
add
shr
rol
pop
pop
push
dec
shl
xor
pop
pop
push
lea
rol
dec
pop
pop
push
not
pop
pop
push
shl
pop
leave
push
lea
push
call
cmpsb
add
add
test
jbe
movsl
xchg
fs
stc
add
pop
mov
iret
out
add
in
cltd
add
hlt
xchg
cld
sahf
add
jl
cmpsb
icebp
add
add
add
iret
mov
jge
add
scas
add
add
jmp
add
add
ret
xchg
add
mov
xlat
add
add
lret
mov
ja
cli
xchg
pop
add
add
add
ret
mov
lea
pop
add
ret
leave
push
push
push
call
scas
insb
popa
mov
add
mov
add
add
add
shrb
rolb
gs
add
ljmp
add
bound
clc
addb
cmpsl
add
add
imul
roll
je
pop
add
mov
jle
add
movb
test
roll
out
popa
xchg
jecxz
in
mov
cmpsl
mov
add
loop
out
add
aam
bound
ret
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
pop
add
add
mov
xorl
mov
gs
shll
jno
add
pop
out
add
mov
lds
xorb
add
data16
pop
call
test
outsl
test
add
pushf
shll
pushf
mov
lea
pop
mov
cmpl
jne
push
push
lea
push
lea
push
push
push
call
add
add
enter
flds
add
add
mov
add
in
add
mov
out
movsl
add
add
add
add
data16
jp
add
addb
add
movb
pop
xchg
add
pop
mov
cli
in
add
test
icebp
add
add
add
jge
scas
enter
add
mov
lea
pop
mov
push
lea
sub
pop
jmp
mov
and
push
xor
not
inc
pop
xor
push
push
lea
push
lea
push
push
push
push
push
call
fcoml
add
add
jecxz
cmpsl
jle
orb
shlb
les
pop
xlat
add
mov
xacquire
add
scas
jbe
pop
rolb
addl
push
movsb
mov
pop
in
add
loope
lret
xchg
popa
add
add
add
cmpsl
fisubrs
bound
filds
movsb
lahf
testl
out
add
fmull
push
ds
xchg
rolb
pop
add
xor
dec
push
lea
push
push
call
add
add
add
add
jbe
add
outsl
add
clc
xchg
js
xchg
add
add
add
fldl
add
cli
xchg
add
rolb
add
add
out
loope
std
mov
xchg
popf
pop
add
test
push
add
add
fwait
add
add
add
add
add
push
fdiv
add
xchg
push
xchg
lret
fistpll
push
outsl
add
mov
lea
pop
sub
jmp
push
push
push
push
call
add
add
subl
push
add
in
lret
popf
mov
add
add
add
js
jnp
add
jle
jb
add
cmc
add
push
in
add
add
cld
add
push
mov
mov
add
add
add
jnp
mov
movsl
add
push
les
outsl
mov
add
sahf
je
push
std
push
cmc
add
add
mov
mov
cld
lea
pop
sub
pushl
push
lea
push
push
push
call
add
arpl
in
pop
add
mov
add
sahf
mov
mov
xchg
add
mov
xchg
push
mov
out
mov
stc
add
jns
add
sub
cld
add
push
add
imul
repnz
push
mov
jb
add
testb
mov
mov
loope
mov
adc
push
lea
push
push
lea
push
push
lea
push
push
call
arpl
movsl
mov
add
add
push
pop
into
test
jae
lcall
out
add
add
addl
add
xchg
xchg
fiaddl
cmpsb
rcrb
add
push
out
jb
lds
pop
popf
arpl
cwtl
std
add
in
add
xchg
add
add
xacquire
add
pushf
add
test
data16
sub
push
shr
sub
pop
cmp
jne
mov
push
push
push
call
jecxz
mov
add
jl
mov
fsub
ja
add
add
mov
imul
add
add
mov
cltd
enter
mov
jecxz
fisttps
jo
add
lea
add
add
add
add
jns
add
mov
add
add
add
mull
mov
lea
pop
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
aad
popa
popf
lret
sahf
leave
add
add
scas
add
stc
add
in
mov
push
jp
add
test
jne
add
add
cwtl
cmpsl
mov
data16
cmpsb
addl
add
push
mov
cmpsb
int
push
jns
push
add
mov
lea
pop
sub
mov
shr
push
shr
xor
pop
add
sub
push
push
push
push
push
push
push
push
lea
push
call
rolb
add
add
push
mov
add
jmp
add
test
lret
xlat
test
stc
add
add
add
cli
shl
add
add
push
add
adcb
jno
add
subb
push
cli
ja
add
mov
add
pop
fldt
imul
pushl
pop
push
push
call
in
add
out
ja
mov
test
sahf
add
lds
enter
xlat
add
fisubs
lods
mov
add
fwait
in
mov
add
stc
mov
add
push
filds
cwtl
insb
repnz
arpl
cmpsl
fiaddl
add
jno
enter
fnstsw
mov
add
stc
add
in
push
push
loopne
add
hlt
lea
pop
shr
push
pop
and
sub
cmp
jne
push
shr
add
pop
leave
push
rol
pop
ret
push
push
push
push
call
add
mov
push
jne
out
mov
rcrb
mov
mov
jnp
out
out
add
test
mov
push
rolb
add
mov
mov
mov
jnp
lea
jne
add
ja
into
out
scas
add
add
stos
stos
add
mov
add
adc
push
push
push
push
push
push
call
test
out
add
add
add
cld
rolb
mov
add
xchg
add
jo
add
lods
cwtl
lea
rcl
rcll
andl
pop
jo
stc
add
push
add
add
push
push
jb
in
add
imul
ja
mov
movb
add
pop
mov
add
push
push
push
push
call
add
add
add
mov
lock
lret
lahf
mov
add
add
test
popfw
sti
xchg
mov
add
shlb
add
ret
fisubs
add
outsl
add
movsl
mov
insb
add
lcall
add
addl
add
test
mov
in
nop
mov
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
bound
stos
scas
into
add
aam
mov
mov
add
mov
add
xlat
mov
add
add
sti
add
loopne
jge
mov
sar
add
jge
jbe
add
mov
mov
add
mov
sub
add
add
add
cld
mov
in
add
movsb
cmpsl
add
jns
aam
bound
pop
push
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
roll
add
jnp
aam
mov
push
lcall
add
not
movsb
cmpsl
stos
cmc
push
jo
push
mov
push
add
add
push
add
mov
mov
lret
mov
pop
out
ljmp
roll
add
aam
add
pop
lea
push
push
lea
push
call
testl
lods
hlt
add
add
clc
add
mov
xchg
add
imul
repnz
shl
and
mov
mov
jmp
mov
lret
add
add
add
add
add
mov
xchg
clc
aam
add
add
jmp
leave
add
aad
xlat
add
into
mov
movsb
mov
lea
pop
sub
push
ror
add
lea
sub
pop
mov
shr
add
push
push
lea
push
push
lea
push
lea
push
call
jecxz
pop
out
add
mov
jmp
outsl
negl
sti
mov
add
add
mov
call
xchg
scas
jp
add
mov
pushf
add
div
movsb
pop
out
mov
pop
lret
add
add
jb
add
rcl
add
fs
movsb
add
add
add
les
fwait
addb
add
pop
or
mov
or
push
push
lea
push
call
std
mov
cltd
jo
stc
add
add
lods
std
jae
lods
add
add
add
add
sahf
add
mov
andl
mov
loopne
out
add
mov
xchg
int3
movsl
add
add
shlb
add
lock
pop
test
test
sti
add
add
cltd
cltd
mov
add
push
xchg
add
add
insb
pushf
addr16
mov
orb
mov
add
push
lea
push
push
lea
push
push
call
mov
add
stos
mov
add
add
je
add
int
sarb
loope
add
add
add
stc
pushf
add
mov
add
mov
jecxz
aad
xchg
push
add
in
loop
add
fadds
jb
push
add
jb
into
movsb
mov
insb
mov
lahf
pop
add
lea
pop
xor
mov
and
push
shr
inc
add
rol
pop
call
push
add
pop
add
cmp
je
push
lea
push
push
push
call
pop
add
lcall
add
add
addr16
pop
lock
add
mov
mov
jbe
add
add
cmpsl
icebp
add
sbbl
add
lods
add
pop
mov
lret
add
ret
fisubrs
add
xchg
add
mov
jb
pop
add
add
imul
pusha
adc
ret
adc
push
push
push
lea
push
call
insb
xchg
add
lds
add
popa
lods
addb
add
cld
int3
movsl
mov
outsl
popa
add
xchg
bound
pushf
int3
lock
add
mov
add
roll
add
in
shrb
iret
je
add
outsl
xchg
add
add
popa
add
mov
lea
pop
cmpl
jne
xor
pop
push
push
lea
push
push
push
push
push
push
push
call
hlt
add
jp
int3
sar
shlb
add
add
mov
jp
add
pop
in
add
pop
mov
jb
imul
scas
add
out
std
cltd
add
mov
xchg
jns
jecxz
rol
mov
mov
out
add
add
add
add
jmp
add
pop
aam
mov
lcall
stc
push
pop
mov
out
add
pop
pop
pop
push
sub
sub
pop
pop
push
dec
lea
sub
add
pop
pop
leave
push
push
push
push
push
lea
push
push
call
add
add
stos
fisubl
add
mull
mov
roll
jnp
cltd
icebp
add
push
add
push
xchg
jo
add
add
into
enter
in
mov
fwait
add
ljmp
pusha
push
mov
add
add
cmc
add
lock
xchg
add
add
push
pop
mov
lea
pop
ret
push
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
add
mov
mov
add
add
add
jp
test
lret
xchg
test
icebp
add
push
mov
add
mov
pop
push
mov
into
mov
jbe
jge
in
enter
fiaddl
add
data16
add
add
in
add
lods
cmpsl
loope
jnp
mov
add
jnp
add
xor
in
addb
pop
ljmp
mov
add
push
shl
dec
pop
push
push
push
add
pop
pop
push
push
push
push
lea
push
push
call
sti
cmpl
sarb
cmpsb
add
push
add
mov
add
add
mov
add
add
icebp
lret
mov
add
test
cmpsb
mov
add
jb
add
add
sarl
mov
mov
in
iret
add
popa
movb
jne
push
call
cmpsl
jnp
sahf
jecxz
cmpsb
add
mov
pop
pop
mov
push
ror
pop
push
call
xor
push
push
push
push
push
push
call
add
jb
xchg
in
idivl
add
push
add
add
out
loopne
jp
add
add
add
xchg
mov
popa
rcrl
jle
add
add
lods
add
add
add
stc
add
add
jge
call
sti
negl
pop
add
push
cld
movb
add
add
faddl
add
add
je
lods
add
in
add
pop
pop
pop
push
inc
pop
pop
push
not
pop
pop
pop
push
add
sub
pop
leave
ret
push
push
push
push
push
call
mov
mov
jno
not
fs
lods
add
add
jge
jl
mov
add
cld
test
xlat
add
out
fadds
fmull
stos
add
out
leave
sahf
pop
addb
mov
add
enter
add
jne
add
xchg
add
pop
pop
lret
out
add
add
aam
icebp
mov
add
lea
pop
mov
push
add
pop
add
push
pop
push
push
lea
push
call
jge
gs
mov
loop
in
filds
mov
fidivl
pop
rolb
add
aad
cmc
add
insb
add
add
mov
add
xchg
les
xchg
add
aam
test
lods
add
push
std
add
add
in
jnp
cli
lret
add
cltd
push
ja
add
mov
out
push
add
outsl
leave
sahf
mov
add
add
add
sti
jl
add
xchg
mov
enter
lea
pop
push
push
push
push
push
call
add
fdivl
add
push
bound
int
sti
add
addr16
lahf
addl
add
add
out
pusha
add
fadd
add
add
imul
mov
add
add
lret
test
hlt
scas
jnp
push
test
fdivp
add
add
mov
lea
pop
mov
push
pop
push
sub
shr
sub
dec
pop
lea
push
pop
sub
mov
push
sub
pop
shr
add
push
lea
ror
pop
mov
push
push
push
call
add
movsb
cltd
int
flds
add
adcb
add
add
pop
addr16
add
std
in
jmp
mov
cld
add
add
mov
jno
xlat
lock
in
add
xlat
add
add
rolb
add
add
leave
lock
loope
rolb
popl
scas
add
add
pop
imul
lods
lret
add
push
add
add
pop
add
pushl
push
push
push
push
push
push
push
call
add
fadds
add
popf
nop
jne
add
out
mov
jno
mov
add
popa
add
add
push
pop
cltd
testl
add
add
mov
cltd
loop
cwtl
mov
add
in
lret
fildl
movsl
lahf
mov
add
lahf
ja
nop
jns
lret
push
fsubr
lods
add
add
add
scas
jne
xchg
add
add
cli
mov
pop
popl
mov
add
push
lea
push
push
push
push
call
add
sti
push
jnp
mov
xchg
mov
scas
add
enter
shrl
loope
out
push
lahf
lods
in
add
addb
jns
clc
imul
fistps
std
pop
add
add
add
mov
add
add
sahf
jmp
fs
mov
pop
xor
push
lea
sub
pop
lea
push
push
lea
push
push
call
loopne
lods
ja
mov
pop
fidivs
jecxz
stos
add
pop
push
xchg
adc
loop
fst
pop
in
add
pop
add
jecxz
add
add
jno
xchg
js
shl
add
sbbb
fisubs
mov
call
mov
cmpsb
iret
mov
add
fadds
imul
test
adc
adc
shll
rclb
nop
pop
call
add
nop
push
not
lea
add
add
pop
nop
push
lea
push
lea
push
call
mov
int3
mov
fcoml
test
mov
add
stos
mov
pop
int
cmpsl
add
xlat
push
sahf
les
nop
add
add
mov
addb
push
add
fiaddl
lods
push
pop
add
out
mov
mull
add
ror
add
add
out
add
fsubs
add
pop
lock
mov
lea
pop
cmp
je
nop
nop
push
rol
pop
inc
push
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
pop
popl
xchg
ret
stos
add
xchg
test
add
iret
data16
add
add
push
add
in
add
add
mov
add
stos
mov
popf
add
sarb
pop
add
ffreep
push
add
add
mov
test
push
add
jge
mov
lea
pop
nop
nop
push
shl
shl
pop
cmp
jb
push
ror
shr
pop
xor
push
push
push
push
push
push
lea
push
push
call
scas
add
roll
enter
mov
add
lcall
mov
add
add
add
loope
jle
jo
xchg
add
jle
add
add
ror
pop
ret
jbe
rcl
add
fidivl
fld
add
les
add
lods
hlt
into
popf
imul
add
icebp
mov
pop
cmpsl
lea
mov
lea
pop
jmp
mov
add
push
push
lea
push
lea
push
push
call
mov
push
fadds
int3
add
jae
in
push
add
flds
add
test
clc
sti
mov
jle
testb
cmpsl
flds
pusha
loop
pop
in
add
insb
add
add
jne
loopne
lea
bound
xchg
add
add
movb
scas
faddl
nop
add
cmpsb
add
loopne
push
push
xchg
add
push
add
add
ja
add
lea
pop
movzwl
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
test
filds
int
add
pusha
add
iret
stos
out
jbe
add
mov
jns
add
in
out
add
shll
ffreep
fidivs
movsl
test
jl
add
xlat
add
incb
enter
add
lds
mov
mov
in
pusha
mov
fdivrs
fldl
popl
iret
add
pop
mov
push
push
push
push
push
push
push
push
call
popf
add
xchg
add
imul
add
mov
pop
mov
add
mov
add
sbb
xchg
add
add
add
mov
fildl
add
aad
lea
add
add
mov
add
iret
mov
popl
add
add
mov
add
add
add
add
mov
lea
pop
add
mov
xor
push
pop
xor
shl
push
rol
inc
shl
pop
xor
push
rol
pop
shl
xor
push
sub
sub
pop
shl
push
lea
push
push
push
call
add
ret
add
add
addl
xchg
add
fnsave
pop
cmc
add
add
add
mov
add
push
mov
push
add
pop
add
xorl
aad
add
add
pop
iret
mov
push
add
in
gs
add
pop
xor
push
push
push
call
add
addb
clc
test
add
add
add
js
in
mov
xchg
push
loop
hlt
add
mov
push
add
vpunpcklwd
xlat
xchg
push
fcmovnbe
add
add
add
push
mov
pop
mov
scas
add
movsb
add
ret
mov
int3
lods
in
movsb
add
movsl
jbe
add
sti
xchg
add
pop
mov
push
rol
pop
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
mov
ja
mov
int3
add
jp
jl
fwait
out
iret
mov
mov
xlat
add
push
add
mov
cli
iret
lahf
sar
add
xorl
add
add
mov
addr16
lock
les
mov
testb
cld
add
mov
add
addl
xchg
ja
clc
add
outsl
jbe
add
pop
pop
push
lea
push
push
push
push
call
pop
add
test
add
arpl
cmc
add
add
cli
out
add
lock
mov
add
aad
lea
lret
add
add
push
int3
movsl
push
mov
add
add
mov
add
cmc
add
xchg
loope
add
popf
add
lret
mov
lea
pop
pop
leave
ret
push
add
lea
sub
not
pop
push
mov
push
push
push
push
lea
push
push
push
push
call
add
add
sar
mov
addb
rolb
fisubrs
testl
pop
rolb
fwait
mov
mov
add
in
pop
jno
aad
lahf
lock
add
fildl
add
mov
test
scas
add
repnz
testl
add
push
sahf
popa
lods
xchg
test
add
testl
js
add
lret
mov
lea
pop
push
push
pop
push
push
push
shl
add
sub
pop
mov
mov
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xlat
jne
add
int3
ret
ja
push
ja
mov
jmp
mov
add
testb
push
mov
popa
shlb
add
lds
add
add
add
loopne
data16
add
cwtl
jge
jae
jmp
mov
add
mov
out
jnp
outsl
mov
add
outsl
pushf
mov
addb
mov
lea
pop
test
je
mov
push
shr
shl
add
pop
test
je
mov
push
sub
rol
pop
mov
push
pop
mov
push
xor
pop
inc
push
push
push
lea
push
push
push
push
push
push
push
call
mov
add
add
jns
lret
test
add
pop
add
add
cld
div
pop
jb
addr16
mov
add
jp
lock
add
xchg
test
jo
add
int
loope
add
lcall
add
insb
add
addl
add
int3
movsb
cmpl
add
jbe
add
add
add
imul
int3
lea
pop
cmp
je
test
je
push
push
push
push
push
push
lea
push
call
push
jns
jns
pop
shll
lcall
add
stos
add
add
rolb
add
jmp
add
push
xlat
pop
add
pop
xchg
jl
xchg
jno
xchg
shrb
arpl
stos
mov
add
jne
mov
push
leave
push
bound
mov
add
jmp
add
iret
add
add
mov
xchg
add
pop
mov
push
lea
pop
inc
push
sub
add
add
lea
pop
cmp
je
push
push
push
call
mov
movsb
xchg
jb
add
mov
jp
push
int
add
add
add
icebp
add
arpl
pop
frstor
add
test
add
add
cmc
out
fiaddl
add
jb
jecxz
add
add
add
fisubs
add
jbe
fists
mov
add
rol
add
mov
bound
test
jne
xor
pop
push
lea
pop
pop
push
rol
xor
rol
pop
pop
pop
push
shl
pop
leave
ret
mov
push
push
lea
push
push
call
add
into
add
add
les
cmc
add
mov
add
rcrb
xchg
ja
add
add
add
cwtl
data16
push
add
add
mov
mov
add
fldl
add
les
add
sti
add
add
add
jae
in
add
add
push
add
add
mov
add
jmp
incb
jl
into
mov
mov
lea
pop
inc
push
push
push
push
push
push
call
insb
mov
loop
add
push
add
int3
in
add
fst
add
xchg
mov
pop
pop
add
mov
sahf
mov
leave
fildl
jp
add
add
iret
notb
pop
movsl
imul
add
add
add
jl
add
add
jmp
push
testb
rolb
add
add
add
add
xchg
xchg
mov
lea
pop
cmp
jne
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
fstps
int3
mov
add
add
cmp
std
add
add
add
add
mov
add
jne
sahf
int
stc
scas
pop
out
pop
xchg
mov
add
insb
push
mov
jge
xlat
shrb
sarb
test
mov
mov
jbe
lds
add
call
add
add
loopne
add
mov
mov
lea
pop
lea
mov
push
dec
shl
add
pop
test
je
mov
push
add
dec
pop
add
cmp
jne
mov
push
add
pop
test
je
mov
add
push
sub
not
pop
cmp
je
jmp
push
add
pop
xor
push
add
shr
pop
pop
push
shl
inc
not
pop
pop
push
add
pop
pop
pop
push
add
lea
pop
leave
push
lea
push
push
push
push
call
add
add
movsb
sti
in
mov
push
mov
fs
mov
lock
jp
scas
fs
jo
add
mov
ret
xchg
imul
repnz
data16
mov
repnz
xchg
xchg
mov
fsts
add
mov
add
call
mov
push
push
mov
add
lock
push
add
add
rolb
imul
lea
push
push
lea
push
push
push
lea
push
call
mov
add
mov
mov
mov
push
mov
add
add
enter
add
xchg
add
add
add
add
jmp
add
xchg
call
loop
clc
add
add
add
jmp
insb
add
mov
test
arpl
add
cmpsb
add
add
mov
js
loopne
push
push
loop
add
pusha
cmpsb
mov
jle
rorl
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
xchg
ret
test
fs
mov
add
add
out
push
mov
out
incb
add
add
jle
add
jo
aad
add
add
add
popf
nop
add
mov
add
xchg
add
jmp
add
add
push
popa
int3
add
lret
cld
add
add
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
xchg
mov
mov
sti
rolb
add
add
je
pusha
iret
add
cld
push
lods
mov
hlt
add
int3
add
adcb
add
mov
jne
fcmovnbe
add
fildl
add
push
add
xchg
add
gs
addl
pop
add
jge
faddl
add
sahf
lea
movsl
fbstp
add
out
add
scas
mov
pop
xchg
mov
lea
pop
leave
push
inc
not
not
ror
pop
ret
push
push
push
push
push
lea
push
push
push
push
call
add
push
pusha
push
addl
add
scas
add
jnp
stos
lods
mov
jns
fwait
ret
je
add
add
mov
xchg
jle
add
add
leave
jb
add
enter
add
add
xchg
jb
cltd
stc
data16
popa
add
mov
add
into
jle
push
add
pop
mov
push
not
sub
ror
pop
pop
push
ror
inc
dec
pop
pop
push
lea
push
push
push
call
sahf
mov
les
mov
add
add
scas
incb
sarl
mov
pop
filds
movsl
repnz
loope
mov
add
rolb
in
testl
add
imul
int3
lods
testb
push
scas
jle
insb
movsl
mov
shlb
test
ret
add
adc
push
inc
add
rol
pop
pop
push
push
push
push
lea
push
push
lea
push
call
lret
add
lods
loope
push
sarb
pop
sarl
push
add
addb
adcl
pushf
addr16
cmpsb
jno
lds
mov
add
fsubs
mov
cltd
push
clc
jp
add
addb
add
add
mov
add
add
fwait
jns
data16
lahf
add
jl
add
mov
mov
add
jbe
aam
bound
leave
push
push
call
mov
push
pop
mov
add
mov
add
push
imul
add
add
int
xchg
into
out
add
clc
xchg
add
jmp
testb
jmp
push
gs
movsb
fcomi
mov
add
out
add
into
out
hlt
scas
pop
loopne
add
mov
add
ljmp
add
lds
add
pop
mov
lea
pop
ret
rol
rol
push
ror
pop
xor
push
rol
add
pop
inc
cmpb
jne
push
add
pop
ret
sbb
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
mov
mov
sti
movsb
shlb
sti
mov
pop
xor
jmp
dec
pop
mov
add
pop
xchg
ret
xchg
jns
notl
out
mov
scas
popf
ja
repz
inc
mov
gs
cmp
mov
div
jo
lods
scas
shl
dec
cmc
mov
push
int3
dec
lods
xchg
outsl
mov
scas
fincstp
push
lahf
lcall
testl
pusha
mov
xchg
xchg
bound
rorb
rcll
and
pop
out
inc
cwtl
scas
sub
push
gs
lret
aad
add
push
sbb
push
dec
sbb
sub
scas
int
or
mov
int3
leave
fdivp
insb
fisttps
pop
lds
mov
dec
clc
jo
pop
add
cmpsb
pop
iret
pop
add
sbb
xchg
pushf
leave
pop
pop
adc
imul
mov
ja
test
outsl
test
repz
inc
and
mov
jl
jo
push
mov
xor
mov
cmp
sti
movsb
daa
jp
sbb
aad
sarl
push
xchg
add
jo
cmp
clc
fsubrs
jmp
out
jmp
imul
negb
xlat
xlat
inc
mov
jo
mov
std
jl
jmp
rol
sbb
push
dec
lahf
fwait
ror
xlat
xlat
add
fsqrt
jno
scas
insl
mov
jecxz
sub
and
lods
scas
lods
jne
mov
mov
mov
inc
mov
mov
or
push
xchg
sub
rolb
or
call
and
sbb
mov
jno
xchg
ljmp
hlt
shr
push
dec
sbb
lods
xchg
out
insl
in
and
addr16
and
in
jb
jne
clc
testl
sbb
pop
arpl
mov
out
out
data16
pop
sub
and
push
mov
imul
test
inc
cmpsl
adcb
or
inc
movsb
ret
mov
ljmp
mov
mov
push
xorl
mov
push
sbb
fisttps
xor
mull
in
dec
and
push
add
dec
or
enter
mov
aad
push
lret
in
or
btr
xchg
addb
sbb
adc
xchg
data16
je
pop
out
cwtl
sub
lods
push
xrstors
iret
or
add
loop
ds
adc
jne
out
jnp
sbb
enter
sti
inc
xchg
and
loop
or
xor
outsl
pop
sub
fs
int
sub
mov
push
adc
push
scas
in
out
mov
mov
leave
mov
jno
fucomp
xchg
sub
pop
push
lock
mov
fsubrs
xchg
dec
popa
push
nop
cmp
movsl
push
push
pop
pop
or
xchg
pop
cmp
jg
loop
loop
shr
push
add
mov
orl
and
dec
sbb
xor
into
cmp
outsb
pop
bound
push
test
xchg
sub
jge
jb
xor
jo
insl
scas
lahf
push
add
adc
xchg
rorb
das
dec
aas
pop
aam
in
popa
in
pop
add
into
push
iret
cmp
push
scas
push
cmpb
push
subb
fsub
cli
inc
shlb
push
jne
iret
lcall
hlt
sbb
filds
jns
push
or
jnp
cld
jp
mov
push
inc
xchg
mov
lcall
mov
sub
aam
pop
inc
and
addr16
ja
mov
or
shll
xchg
outsl
jecxz
cmp
out
arpl
xchg
mov
test
scas
mov
scas
movsb
lret
add
stos
pop
jbe
adc
mov
mov
icebp
sbb
xchg
inc
sbb
lods
aas
repz
mov
sub
dec
adc
mov
sbb
ss
ret
repz
push
test
xor
mov
push
ret
gs
adc
fwait
jp
out
xor
lods
out
leave
xor
iret
js
mov
pusha
sti
or
and
je
jbe
orl
jle
in
inc
and
jg
inc
sbbl
lahf
xor
lods
push
adc
jae
xchg
js
insb
data16
cld
cli
repz
stos
push
push
leave
push
out
fdivs
adc
push
dec
jl
insb
push
pop
stc
push
stc
lods
iret
push
pushf
sub
mov
fnstsw
inc
jo
and
in
mov
nop
iret
das
add
shlb
movswl
pop
negl
jne
add
sahf
ss
das
mov
in
inc
loopne
fsub
into
sbb
dec
gs
pop
and
sub
lods
mov
mov
xorl
pop
dec
mov
push
aas
mov
adc
lea
insb
mov
lds
cmpsl
lret
ret
push
inc
push
sub
icebp
aaa
xchg
movsb
test
pop
mov
outsb
mov
fwait
cmp
jmp
or
cld
test
mov
and
pop
test
sub
dec
das
cs
inc
mov
inc
jge
cld
mov
mov
dec
sub
fcmove
ret
xchg
out
jb
mov
jge
iret
test
dec
sbb
ja
lcall
push
sub
cmpsb
cmc
test
js
xchg
push
movsb
cmp
int
int
or
pusha
pushf
pusha
add
sbb
out
cmp
mov
in
lods
mov
inc
aam
cmp
jl
dec
pop
popa
mov
bound
test
test
out
in
into
jge
into
add
iret
mov
or
xor
adc
pop
in
jnp
sbb
inc
adc
lret
cli
pop
mov
scas
or
scas
xchg
sbb
ds
lcall
loop
ret
outsl
add
inc
add
mov
fwait
or
mov
cmp
lcall
mulb
lods
inc
lcall
repz
sub
cmp
ja
pop
dec
jnp
stos
cwtl
dec
inc
aam
in
push
sub
cmpsb
ds
inc
nop
jnp
and
dec
decb
xchg
inc
hlt
adc
push
push
cmp
pop
cmpsb
sub
into
push
jnp
inc
jg
stos
dec
repnz
mov
add
inc
out
sub
inc
inc
scas
out
mov
adc
cltd
call
cmp
sub
inc
ljmp
dec
sub
repz
aaa
inc
cmpsb
xchg
ds
stos
subl
add
xlat
lahf
mov
lahf
ret
das
daa
pop
shll
lret
or
cmp
fnstsw
pop
inc
pop
push
pop
int3
inc
xor
xchg
lods
pop
ljmp
call
lfs
cmovns
movsl
pop
sarb
adc
loope
xor
fwait
push
ljmp
test
and
adc
negl
iret
dec
lret
cmp
ret
stc
in
test
mov
insl
gs
sub
orb
pop
fisubrl
jae
mov
gs
shll
test
push
test
jecxz
xor
sub
or
scas
outsb
scas
test
mov
fistpl
or
fildl
hlt
testb
inc
pop
adc
inc
icebp
out
scas
enter
pop
cmp
add
pop
and
cmpsl
insl
jbe
repz
out
mov
sbb
add
jmp
cmp
push
dec
xchg
imul
ret
dec
adc
cli
loop
or
mov
bound
ja
in
push
xlat
xor
ljmp
inc
push
lods
cld
shl
lds
paddsb
sub
leave
sbb
jo
movsb
rcrb
jnp
pop
fsubr
inc
and
aaa
mov
test
add
jge
test
and
xorb
pusha
dec
pop
or
lahf
loop
scas
out
xchg
jmp
push
push
xor
xor
stos
flds
push
enter
push
fisubrl
icebp
jb
inc
jb
icebp
clc
and
enter
repnz
mov
adc
push
push
sbb
lock
test
leave
lret
mov
lcall
xchg
jmp
cmc
mov
in
cli
aad
in
inc
mov
sub
imul
rorl
pop
pop
xor
lods
or
repz
sahf
lods
mov
mov
leave
movb
sub
jae
push
xchg
jb
push
fs
push
inc
movsb
leave
adc
fistps
adc
push
or
add
andb
pop
mov
outsb
mov
cmpsb
outsl
push
ljmp
mov
sar
fdivs
int3
adc
ss
mov
ficompl
test
lea
ret
imul
aaa
out
push
out
push
push
push
movsb
or
jl
inc
mov
adc
mov
push
outsl
sbb
mov
xchg
popl
mov
adc
test
cmc
test
aad
clc
push
fwait
pushf
stc
jb
loop
xchg
and
pushf
cmp
sub
push
in
in
mov
clc
xor
lahf
inc
push
mov
cmp
sub
out
addr16
add
jo
loopne
push
xchg
sbb
lods
scas
add
out
sub
jo
js
test
mov
fidivrl
ror
daa
dec
cmp
xchg
mov
fscale
ds
mov
dec
lcall
mov
mov
mov
push
lcall
xor
or
data16
cmpl
sbb
and
jb
ficomps
arpl
leave
sbb
fists
add
mov
icebp
mov
out
jge
xor
push
outsl
push
and
push
daa
add
mov
aas
push
jg
xchg
in
cmc
adc
mov
repz
popa
in
pop
inc
mov
or
mov
add
pop
icebp
insl
nop
cmp
sbb
jne
fsubl
int3
jno
ss
sbbl
lods
int
shl
frstor
mov
push
imul
fwait
pop
sbb
sbb
lahf
andb
scas
jg
lcall
test
adc
movsb
pop
hlt
outsl
lret
xlat
push
aas
daa
pop
dec
int
xlat
push
xchg
mov
push
and
lcall
add
test
pop
sub
scas
sub
inc
dec
jo
add
push
ds
stos
jle
mov
in
dec
or
daa
pushf
out
ja
cmp
and
loope
jns
jp
sbb
add
jecxz
jb
in
or
push
lods
mov
testl
loop
dec
jge
jns
test
call
mov
sarb
movsb
stos
dec
inc
xchg
xchg
mov
xchg
mov
pop
or
das
arpl
test
mov
mov
mov
ret
in
out
cmpsl
and
xchg
pop
push
sub
sub
dec
inc
mov
outsl
sub
orl
or
add
popf
pop
js
xchg
mov
div
shrb
out
xor
sub
int3
xchg
enter
negl
xchg
add
mov
addr16
imul
dec
leave
popa
dec
inc
pop
add
shlb
sub
sub
jae
into
push
inc
test
xor
mov
pushf
lret
cld
loop
enter
or
lods
mov
xor
testb
jne
xchg
scas
mov
pusha
mov
cmpsl
adcb
mov
std
pop
xor
adc
out
lods
and
mov
sub
jae
mov
xlat
xchg
out
jl
xor
push
dec
jl
sub
fsubl
in
stos
push
jl
and
push
push
enter
cmp
pop
outsl
mov
sub
out
sbb
sbb
popf
lods
sbb
out
cmp
shr
inc
push
jno
rorb
push
pop
adc
sub
xor
out
hlt
in
sbb
mov
pusha
dec
mov
xor
mov
and
sbb
pop
jl
dec
jns
dec
xor
arpl
push
ja
ljmp
cmp
mov
or
inc
das
xor
fidivrl
int3
xchg
pusha
test
out
movsl
outsb
dec
mov
sbb
inc
add
roll
mov
mov
inc
xchg
inc
push
je
jp
fcoml
ja
inc
popa
jno
movsb
sahf
xor
sti
in
cmp
jle
inc
shl
jbe
push
gs
aam
inc
loopne
push
dec
lret
mov
leave
inc
in
sahf
popf
add
shlb
inc
cmpb
xchg
ds
repnz
jmp
cmc
push
lock
movsl
stos
es
inc
fs
ljmp
jl
push
into
lcall
cmp
push
mov
adc
lea
subl
cmpsl
loop
mov
aam
or
mov
cli
mov
or
mov
jge
jp
pop
mov
cs
mov
jle
inc
push
jmp
les
dec
loope
imul
and
movl
push
add
push
enter
shrb
out
lahf
ret
lods
xchg
mov
out
test
xor
inc
lods
cli
sahf
mov
dec
sub
arpl
int
xchg
pop
push
lahf
add
adc
push
add
shrb
std
mov
sub
jle
pusha
cmp
inc
jae
lock
in
loop
mov
idivl
call
enter
idivl
into
fucomi
test
rorb
xor
xchg
dec
jns
mov
insb
jo
xchg
aas
adc
pop
mov
daa
fstl
int
sub
gs
xchg
es
push
mov
ja
sub
mov
outsb
dec
mov
das
mov
xor
loopne
ss
mov
mov
and
push
ss
int
leave
ljmp
jbe
test
enter
jb
icebp
push
rcll
sbb
imul
sub
jo
lods
push
pop
pop
test
mov
add
inc
add
std
pop
fs
mov
pusha
jae
adc
pop
orl
mov
arpl
ss
xchg
push
lahf
jge
xor
stos
and
jo
lods
out
inc
cli
in
cmp
xchg
jle
inc
cmpsl
adc
sub
sti
lcall
inc
mov
push
dec
fcoml
or
jns
xor
lcall
sbb
out
xor
mov
sbb
test
fdivs
icebp
les
gs
rorl
jmp
dec
mov
lahf
inc
ljmp
movsb
xchg
and
inc
cmp
out
leave
fsubs
xchg
clc
add
xor
push
and
data16
or
dec
ret
push
cmova
push
pop
xor
mov
pop
jbe
stos
dec
sub
push
enter
js
inc
jne
dec
inc
or
dec
adc
cwtl
pop
cmp
push
inc
and
shlb
xor
lds
push
mov
clc
ret
daa
mov
cwtl
insb
sub
inc
icebp
fnstenv
pop
adc
pop
push
outsb
aam
stos
cmp
ret
stc
xor
adc
ss
int
sub
inc
inc
aad
dec
dec
fstpt
rorl
cmp
shrl
mov
popf
inc
and
fldcw
inc
pop
movsl
cmp
cmp
scas
pop
fsubl
push
outsl
ja
cmp
out
mov
hlt
or
dec
lock
aad
mov
adc
jg
iret
xor
adc
mov
int3
ja
cmp
repnz
aas
adc
jbe
mov
sbb
inc
cmp
pop
fs
data16
pop
fisubrs
dec
add
fcompl
movsl
xor
xor
dec
inc
out
jns
lcall
sahf
jecxz
test
ds
mov
and
loopne
jbe
xchg
push
addr16
ret
pop
xor
jbe
jnp
pop
push
stos
jmp
inc
clc
notb
repnz
popf
jmp
fldcw
sarl
dec
iret
cmp
jno
mov
mov
jp
jg
xchg
icebp
jae
and
xor
frstor
jmp
aam
jbe
cli
cld
mov
jle
push
cmpsl
aad
pop
xchg
pop
int
or
push
repnz
sbb
jns
xchg
mov
mov
and
lret
js
add
rcrb
xchg
ds
shrb
rcr
fstl
jno
push
int
inc
lahf
inc
arpl
scas
adc
ljmp
loope
ret
out
pusha
jns
sti
shlb
xchg
movsb
imul
pop
fidivrl
ljmp
inc
jno
cltd
cmp
pop
dec
bound
push
movsb
das
xchg
shrb
popf
or
adc
push
xor
outsb
add
int
or
nop
jmp
cmpsb
sub
ds
cmc
mov
or
push
arpl
inc
lcall
add
cmp
cvtpi2ps
dec
and
add
mov
mov
jns
inc
jl
daa
icebp
movsl
pop
xchg
cmpsb
outsb
ss
jae
lea
into
lods
cli
cmc
in
mov
stos
mov
add
jb
cmp
push
xchg
cmp
ds
adc
inc
mov
xor
and
cs
lock
xchg
inc
jnp
adc
shrl
aas
cmpb
aas
les
jae
fimull
in
inc
les
int
dec
xchg
pop
mov
sub
and
cmc
lahf
adc
mov
mov
add
xchg
dec
mov
inc
loop
xchg
icebp
push
lret
int3
fsubrp
les
pop
and
xchg
jge
push
cmp
pop
push
push
sub
lds
out
inc
add
fs
into
fbld
xor
jge
andl
out
add
xchg
adc
test
cmp
paddb
mov
jg
adcb
add
mov
pop
je
xchg
stos
cld
shrb
and
push
gs
mov
mov
jne
in
mov
xlat
fsubl
mov
rorb
rcr
aad
inc
jmp
inc
xchg
jne
dec
sahf
shll
xchg
pop
mov
push
mov
out
ljmp
xor
aam
mov
andps
pop
jb
popf
fxch
icebp
mov
rclb
cltd
loopne
ss
sar
rorl
loop
loope
test
mov
and
je
lcall
aam
outsl
push
outsb
call
mov
fdivs
dec
or
cmp
test
leave
add
dec
pop
mov
cmp
les
jmp
inc
cmpb
jge
dec
adc
lds
sahf
arpl
adc
cmp
scas
jnp
push
dec
adc
push
add
adc
or
lret
sahf
add
je
add
add
nop
pop
je
in
hlt
jle
in
pop
lods
stos
mov
jp
and
mov
or
stos
pop
jo
jg
lds
mov
adc
dec
fldl
mov
in
leave
sbb
pop
filds
dec
push
in
mov
dec
lods
mov
add
sub
mov
in
push
repz
aad
iret
dec
fwait
push
mov
pop
pop
dec
or
adc
shll
xchg
clc
xchg
adc
les
ljmp
or
lock
js
and
push
stc
and
bound
call
lret
mov
dec
xchg
fcomps
mov
fiaddl
aam
jle
jbe
pop
negb
push
js
inc
adc
lret
adc
into
inc
outsb
jl
xchg
and
xchg
sub
maskmovq
pop
lahf
mov
jg
sbb
repz
jge
sub
js
loope
jmp
imul
js
fisttpl
test
push
adc
stc
xchg
sbb
mov
test
adc
imul
stc
xlat
xchg
call
jb
jns
pop
mov
ljmp
jge
sub
shr
lock
jl
ljmp
leave
or
push
mov
scas
adc
dec
adc
add
into
loop
sti
xlat
pusha
jbe
iret
lds
je
mov
jne
cwtl
sbb
popf
fxtract
mov
xor
icebp
mov
cmp
mov
jae
push
fcomi
loop
push
mov
cmp
into
pop
inc
lods
out
xor
ja
inc
jg
movsl
adc
sbb
repnz
leave
movsl
rcrl
fcoml
and
xorl
xor
sbb
dec
fcomps
bound
sti
arpl
loope
sub
mov
mov
shlb
cmp
addr16
ljmp
sti
in
ror
sub
add
sbbb
aaa
sbb
pop
test
lret
mov
insl
repz
and
fnstcw
adcl
mov
js
loopne
push
mov
add
aad
test
push
push
popl
xor
push
fstpl
xor
je
shlb
icebp
outsb
dec
testl
stos
ja
leave
mov
fs
mov
int3
lods
das
jnp
mov
sbb
cs
leave
lret
sahf
sahf
adc
sbb
cs
insl
mov
mov
test
and
xchg
push
sahf
dec
xchg
test
dec
sbb
xchg
add
pop
ljmp
mov
sarb
adc
add
shll
out
mov
xchg
xor
loop
and
popf
cmp
xchg
aas
aaa
push
mov
out
in
mov
add
add
cli
and
and
pop
dec
rolb
fwait
and
testl
sbb
jae
aaa
iret
pushf
add
fadds
int
test
sub
cltd
dec
push
jo
int3
mov
xchg
and
push
push
sub
mov
inc
orb
test
loope
gs
jb
xor
inc
fsubs
pop
inc
aam
mov
pop
call
dec
imul
fiaddl
add
outsb
jns
jae
or
test
xchg
fwait
push
out
mov
add
hlt
cmp
mov
gs
add
mov
mov
dec
ds
or
mov
aam
pop
jmp
test
cld
repz
fmuls
pushf
or
mov
pop
insb
dec
push
dec
stos
loop
arpl
sbb
call
xchg
xchg
les
or
and
flds
xchg
rol
sahf
and
xchg
xor
inc
pop
andb
lea
sarb
pop
ljmp
out
ret
out
lods
jmp
cmp
in
xlat
mov
pop
mov
and
push
and
into
addb
lahf
and
pop
imul
lret
pop
sbb
sbb
inc
imul
adc
push
jp
repz
lret
sub
iret
mov
adc
dec
jns
cmp
xor
sbb
adc
xor
ret
gs
test
mov
mov
or
aad
xchg
outsb
cmp
cli
mov
push
add
sub
fs
sbb
or
inc
jns
fmull
cmp
mov
dec
cmpsb
jns
out
adc
add
daa
jbe
outsl
push
or
call
pushf
int
sbb
xchg
dec
mov
call
add
or
imull
ja
cld
inc
jns
cmp
fldlg2
imul
jl
jmp
adc
pop
inc
mov
push
mov
mov
imul
sahf
jle
enter
in
hlt
scas
pop
dec
cs
jne
add
imul
cmpsl
fwait
push
adc
pop
xchg
and
out
scas
sub
xchg
subl
sub
mov
xchg
mov
out
adc
mov
cltd
std
jl
popl
jle
and
mov
adc
scas
jbe
mov
dec
push
or
data16
mov
loopne
jg
mov
or
jle
inc
jecxz
jb
cwtl
inc
add
push
push
cld
pop
repnz
push
hlt
pusha
dec
jp
dec
aam
out
test
int3
cmp
outsl
arpl
pop
xlat
xor
xor
dec
aam
lret
test
neg
fcoms
sub
jl
testb
lcall
into
push
inc
lods
in
mov
sub
pushf
mov
in
sbb
loope
in
or
sbb
sub
imul
das
cmp
into
sahf
pop
mov
cmp
dec
bndstx
cwtl
mov
dec
sbb
fildl
jecxz
loope,pn
add
jne
fwait
mov
inc
push
mov
je
mov
sarl
sbb
arpl
and
nop
or
sbb
mov
or
xchg
mov
jns
sub
mov
call
fmull
mov
sub
bound
popf
xchg
fldenv
sub
aaa
pop
aas
in
sub
aas
or
add
clc
dec
fisubs
ret
int3
icebp
xor
fsts
test
sbb
pushf
sub
int3
femms
jmp
movsl
ja
aaa
or
dec
dec
jmp
pop
sbb
stos
nop
mov
cmp
dec
cmpsl
cmp
push
sub
xor
ja
sbb
mov
lahf
flds
adc
sub
adc
push
cmc
int3
sarb
and
inc
ja
add
movsb
xor
xchg
pop
or
ret
andl
fnstenv
mov
stc
sub
ds
and
aaa
sti
dec
lods
xchg
pop
cmpsl
and
jo
scas
jae
mov
in
pop
test
dec
add
call
aas
push
decb
cwtl
mov
in
mov
inc
cmpsl
into
sub
cmp
movsl
mov
push
adc
mov
popa
cmp
push
mov
out
cmp
iret
jae
cmp
ror
jg
mov
mov
adc
or
movsb
das
xchg
fldenv
dec
mov
jbe
inc
aad
jmp
outsb
jnp
lret
clc
push
jge
push
cltd
cmp
or
out
nop
out
xchg
into
mov
sarl
pop
ret
lahf
push
cmp
add
mov
and
das
push
fs
push
repz
pop
ss
push
dec
fadd
out
inc
cmpl
push
mov
out
out
dec
movsl
out
xor
in
pop
or
dec
sub
lods
mov
dec
mov
enter
push
mov
and
lea
mov
into
out
lret
daa
inc
jecxz
repz
push
test
lds
jl
cli
sub
mov
lret
jno
in
imul
ss
jp
sarl
orb
dec
push
or
sbb
enter
adc
add
out
add
add
pop
and
pop
arpl
jb
dec
out
push
clc
aad
out
or
pushf
rcl
push
je
inc
js
jp
sub
fwait
xchg
inc
in
in
sub
cmc
out
adc
xchg
in
or
cmpsb
sar
mov
or
cmp
aas
and
add
or
vmovshdup
sti
mov
or
testl
or
xor
mov
push
popf
xor
cmp
pop
pop
js
xor
arpl
xchg
mov
in
or
inc
sbb
push
dec
push
imul
and
addb
or
fsubp
adc
ds
mov
jns
int
leave
adc
stc
or
in
xchg
xchg
sbb
out
mov
std
shlb
iret
pop
and
mov
daa
stos
dec
add
mov
xor
repz
sub
and
mov
xchg
adc
repnz
dec
out
mov
mov
out
repz
mov
adc
lock
xchg
adc
inc
sbb
scas
sbbl
push
pop
les
hlt
insl
pop
xor
loop
arpl
lea
mov
stc
xchg
out
popf
mov
add
xor
mov
lods
sub
clc
lahf
les
adc
push
inc
jmp
repnz
jg
push
popa
loope
xlat
xchg
push
lock
scas
and
lret
mov
inc
add
pop
cmc
mov
jae
orb
inc
push
pop
xchg
mov
movsb
rorb
and
daa
jne
xchg
mov
leave
mov
test
jno
andb
or
std
and
imul
pop
psubb
pushf
cmp
adcb
adc
and
and
xor
xor
movsb
scas
les
loope
out
or
test
aas
jle
jno
mov
cmp
lock
or
shrb
in
pusha
repz
mov
add
repz
stos
pop
xor
out
data16
iret
sub
mov
xchg
mov
dec
push
es
aaa
adc
jecxz
dec
cmc
pop
loopne
jp
adc
xchg
sbb
test
pop
fwait
sub
push
mov
fs
mov
sbb
icebp
imul
lahf
out
enter
in
mov
jp
add
pop
mov
rcrl
scas
add
daa
xor
sub
test
cmp
ror
ficomps
sbb
adc
iret
clc
and
sub
add
pop
pop
scas
inc
dec
mov
bound
pop
arpl
inc
jb
popa
xchg
mov
clc
loop
mov
imul
in
xchg
loope
repz
clc
movsb
sbb
mov
out
mov
dec
and
push
xor
std
push
mov
jle
cmpsb
movsb
adc
mov
sahf
fmuls
xchg
jp
sbb
gs
pushf
neg
cmc
add
sarb
mov
push
clc
out
iret
adc
dec
sbb
pop
popf
es
test
and
and
mov
mov
scas
mov
loope
in
inc
mov
pusha
jle
jl
ds
lods
mov
cmpsb
sbb
xor
addl
jmp
fstpl
xor
cmp
shlb
or
adc
in
or
push
and
sub
bound
or
xor
dec
mov
test
int
xchg
xlat
imul
fisubs
sub
jp
sub
mov
cmp
aad
mov
pop
aaa
inc
add
rolb
fwait
cs
movsl
lret
jle
xlat
jns
lahf
cs
mov
jne
stc
lods
jmp
pusha
cmp
sbb
push
xor
outsl
movsb
aaa
cmp
divb
pusha
cmp
push
mov
out
inc
inc
jle
out
insl
pop
fadds
lods
xchg
dec
adc
hlt
inc
movb
add
aam
and
push
rcrl
addr16
jnp
cmpsb
adc
xchg
mov
clc
aas
xor
shlb
mov
mov
in
pop
cli
or
sub
jmp
push
push
jo
mov
add
xchg
std
fnstcw
scas
hlt
aad
ljmp
outsb
add
lock
cmp
add
and
adc
inc
xor
jo
out
xor
sub
stos
js
jno
sub
das
push
mov
dec
jae
ljmp
fpatan
jne
add
movsb
add
xchg
sub
call
fstp
or
pop
jno
mov
jge
mov
fnstcw
dec
outsb
jmp
dec
fstpl
or
insb
movsl
and
or
push
xchg
out
aad
pop
mov
movsb
popf
add
cmp
test
in
call
push
loope
dec
cmc
and
bound
icebp
dec
loopne
sti
lea
test
pop
sub
pandn
fstl
sub
test
into
hlt
popf
enter
out
jae
dec
xor
cwtl
dec
enter
mov
inc
lds
pop
lcall
and
mov
inc
loop
lret
cmp
sub
mov
cmp
jo
pop
cmp
stos
sub
mov
je
aas
push
push
shlb
adc
jnp
add
xchg
mov
push
sub
ficoml
dec
sbb
pop
jl
push
dec
push
inc
push
dec
lea
test
repz
adc
push
adc
clc
xchg
sub
cwtl
mov
sahf
xchg
push
ficomps
pop
pop
add
xchg
push
xchg
int
and
push
sub
and
test
fs
sbb
movsl
mov
sbb
adc
pusha
jle
add
lahf
dec
mov
mov
inc
mov
scas
fisttpl
push
jl
xchg
jg
inc
sub
sbb
sti
or
mov
xchg
ljmp
sbb
mull
and
inc
notl
cmpsb
lock
push
roll
xchg
jmp
xor
inc
pushf
jmp
shll
repz
add
jnp
mov
push
shrl
mov
cwtl
add
sbb
jbe
subl
ret
add
icebp
bound
in
sub
icebp
rorb
xchg
ljmp
push
jmp
inc
jb
inc
mov
outsl
jb
sub
jmp
sbb
movsb
imul
inc
in
cmc
xchg
cmp
iret
mov
mov
mov
outsb
and
dec
xor
sti
addr16
iret
outsb
sub
int3
repnz
lret
fstpl
dec
fstl
loope
jecxz
aaa
gs
mov
inc
jge
pop
xchg
sub
jle
xchg
cli
rclb
cmc
popa
or
cmp
daa
adc
mov
sbb
add
add
clc
hlt
add
inc
fld
pop
xor
ret
roll
mov
movsb
xchg
xor
jecxz
fwait
test
push
inc
repnz
xchg
or
push
jmp
daa
mov
jno
cmp
mov
or
inc
out
sub
cwtl
jb
fwait
or
cmpsb
repz
pop
add
add
lahf
or
sbb
add
mov
jne
out
cmpsb
ljmp
daa
mov
lods
and
or
jl
add
or
test
les
ljmp
in
jno
aam
inc
jo
insb
loop
insb
mov
sbb
insl
pushf
fcoms
cli
inc
inc
out
lret
leave
fwait
cltd
mov
or
xchg
jnp
add
xor
jbe
into
int3
inc
mov
mov
sbb
xchg
mov
adc
rcrl
mov
adc
or
mov
arpl
pop
loope
lods
ss
xor
iret
jp
dec
je
sbb
outsl
mov
pushl
ror
stc
pop
cltd
jo
fcom
daa
cli
cld
into
mov
dec
lods
jp
xchg
xchg
and
addr16
subb
fs
and
add
xor
inc
xchg
ud1
and
sbb
xor
or
and
lods
enter
shlb
add
xlat
pop
adc
adc
adc
icebp
loope
ljmp
inc
mov
adc
movsb
aam
loop
jne
pop
mov
jg
jbe
add
popf
int
bnd
lock
adc
stos
mov
scas
fimull
sbb
cltd
xchg
insl
sar
sbb
jo
js
clc
aad
cmp
xor
pop
push
out
movsl
xchg
popa
or
and
adc
out
ljmp
movsb
xchg
jecxz
testl
out
ffreep
loopne,pn
jg
sar
fdivs
in
cmp
mov
mov
clc
repz
scas
mov
or
ljmp
push
and
cmp
fdivrl
dec
repz
loop
scas
jp
cli
ljmp
lret
lcall
pop
movb
lods
daa
test
cmp
shll
xor
adc
push
cmc
mov
jo
dec
fadds
ja
loop
adc
lods
imul
popa
testl
das
push
xchg
or
lock
rcrl
pop
dec
dec
mov
dec
or
mov
cmpsl
test
enter
push
pusha
ljmp
mov
xor
xor
mov
xor
xchg
mov
push
in
xchg
jg
lea
sub
mulb
xor
sub
adcl
cmpsl
loop
repnz
or
sbb
jg
mov
cmp
int
fmul
sbb
dec
mov
mov
test
lret
inc
int3
mov
pop
or
ret
aaa
xor
dec
sub
hlt
push
pusha
inc
inc
ss
and
movsb
sahf
xchg
ret
cmpsb
into
cmp
cmp
fldt
xorb
dec
sbb
rolb
mov
inc
mov
mov
sti
jg
ret
sbb
fstl
pop
cmp
add
ret
xchg
es
push
cmp
les
jne
jae
adc
int3
sbb
dec
cs
sahf
dec
xchg
fldl
xchg
jne
push
cld
dec
push
jbe
ljmp
orb
leave
pop
or
into
sahf
es
xor
cltd
mov
leave
inc
lret
add
lcall
fwait
inc
sub
jbe
mov
pop
fs
xlat
outsb
dec
stos
out
sub
jns
fs
lahf
pop
adc
lcall
pop
mov
push
out
jmp
add
sbb
add
xchg
icebp
outsb
mov
fstl
push
mov
sbb
dec
cmp
inc
cld
movsl
xchg
ss
pop
or
aam
fdivl
or
ss
fs
push
imul
out
mov
dec
loopne
mov
mov
cltd
repnz
stc
ljmp
out
sbb
ss
out
fwait
test
adc
adc
mov
lcall
aas
pushf
add
test
inc
cld
std
xchg
xchg
push
jmp
jle
imul
icebp
add
jno
stos
push
and
popf
dec
pushf
adc
or
setl
pushf
lcall
dec
fcmovnu
clc
std
sub
adc
out
repz
fldcw
gs
je
and
sbb
notl
fdivrl
mov
cmc
push
lock
gs
lock
hlt
inc
mov
and
mov
add
in
mov
das
test
or
sbb
pop
fnstcw
inc
mov
mov
leave
jb
mov
xchg
sbb
fst
fsubl
cmp
xchg
mov
mov
std
test
and
pop
lret
jo
lods
add
sub
or
pop
jb
outsb
and
cmp
push
xor
inc
mov
icebp
dec
xor
cmp
mov
adc
xchg
lcall
in
les
outsl
mov
lock
adc
pop
add
arpl
mov
cmp
loope
mov
testl
xor
push
loopne
aaa
mov
xor
mov
loop
fsubrs
icebp
pop
outsb
pop
mov
subb
scas
jno
dec
stos
pop
pop
lds
xchg
xor
pop
jle
aad
cmp
daa
dec
mov
fimuls
xlat
pop
lds
adc
movsl
jge
into
iret
push
popf
das
cltd
pop
mov
int3
mov
daa
mov
add
orl
push
fldl
iret
or
sbb
pop
outsl
imul
je
addr16
cwtl
scas
mov
dec
xchg
test
sahf
pop
loop
punpckldq
xor
repz
sub
or
int3
xchg
imul
mov
test
push
xor
int
lods
fwait
stc
adc
adc
test
rcrb
mov
ret
out
sbb
push
dec
test
adcl
xchg
sbb
rcr
popa
adc
push
push
jno
and
negl
imulb
pop
mov
jp
and
scas
and
jl
call
xor
push
xor
scas
inc
mov
cld
in
into
loopne
int
out
hlt
dec
in
addr16
mov
lock
movsl
jb
iret
xchg
sub
ret
outsl
ret
cmp
adc
out
adc
mov
shrb
test
mov
add
xchg
sbb
flds
push
aam
pop
pop
faddp
bound
cld
ss
clc
push
adc
cmpsl
push
sbb
lret
enter
xor
mov
dec
test
push
loopne
clc
xor
loope
popf
pop
test
xchg
xlat
aam
mov
adc
loopne
je
sub
daa
enter
cltd
mov
mov
rol
cld
out
fmul
xlat
mov
xchg
or
add
mov
subb
and
mov
js
fs
bndldx
or
je
lret
xchg
xchg
mov
pop
test
cmc
les
imul
pushf
mov
push
dec
pop
pop
push
jmp
mov
aas
fs
orl
lock
jne
sbb
and
dec
rcrb
push
mov
and
adc
cmpsl
fsubrs
out
xchg
jl
je
mov
mov
sbb
lds
inc
out
mov
xor
cmpb
mov
sbb
iret
fimuls
ffreep
dec
sbb
cmp
add
iret
loopne
and
mov
iret
xchg
insb
das
daa
dec
mov
hlt
xchg
pop
xchg
icebp
mov
push
out
push
lret
push
pop
fldt
mov
add
daa
cmpsl
xchg
cltd
jb
mov
sbb
adc
out
sub
inc
mov
ret
test
pop
popf
popf
mov
leave
arpl
lods
clc
jmp
stc
leave
dec
test
cmp
pop
sub
sahf
sub
out
in
xlat
jno
jg
mov
test
sub
cmp
inc
push
aas
jae
out
cmp
fs
mov
mov
push
sbb
and
or
push
dec
sahf
fwait
gs
add
jo
sti
pushf
in
mov
xchg
fstpl
das
aad
mov
xchg
das
cwtl
sub
and
push
and
cld
xlat
sbb
sbb
stos
jae
or
sbb
push
xchg
xchg
sub
mov
loope
push
jg
aam
fldenv
arpl
xor
cmp
fisttpl
inc
push
js
popf
outsb
dec
out
int
xchg
dec
in
pop
inc
cmpsl
out
mov
movsl
sbb
dec
xrelease
shlb
xchg
fimuls
dec
push
mov
mov
insl
push
test
jp
cmc
push
xchg
mov
and
adc
mov
pop
push
pusha
in
mov
in
mov
repnz
dec
inc
sub
xor
andb
fdiv
dec
push
popf
xor
adc
mov
arpl
cmp
call
pushf
jl
sub
imul
stos
xor
mov
push
cmpsb
subb
cmpsb
in
jnp
add
lea
dec
mov
sti
scas
sbb
adc
cmp
cwtl
push
sbb
cmp
fwait
xchg
dec
lds
sub
mov
xchg
jmp
int3
cmp
cld
cld
sub
and
mov
dec
addr16
loopne
xchg
int3
jp
jle
sub
push
fiaddl
mov
out
cmp
cmp
and
subl
adc
imul
cli
adcl
push
test
test
loopne
into
add
xchg
ljmp
je
bound
push
fiaddl
pop
mov
add
xlat
das
pop
add
cmp
shr
xor
xchg
dec
fxch
movsl
nop
cmpsb
push
mov
test
dec
jns,pt
cmp
loopne,pt
lcall
sub
sysenter
xchg
xchg
mov
and
mov
das
imul
ds
push
mov
data16
cs
adc
int3
pop
lds
and
push
repz
out
lret
out
xchg
inc
shrb
xchg
popa
icebp
insb
mov
mov
fmul
adc
mov
fldenv
add
xlat
test
push
and
sub
pop
pop
pop
jmp
jbe
cmp
adc
xor
jle,pt
inc
mov
sub
sbb
hlt
or
mov
out
cmp
push
jb
pop
mov
mov
pop
data16
testb
mov
jmp
dec
or
sarl
xchg
out
inc
out
xlat
fs
fldcw
fistpl
cmpsb
cli
mov
daa
xor
xchg
arpl
cwtl
rcl
or
jge
xor
jae
lahf
test
sub
pop
cld
inc
movsl
in
dec
mulb
lcall
pop
mov
pop
jno
into
xchg
pop
lods
aaa
adc
adc
xlat
stos
xchg
repnz
adc
shll
xlat
pop
clc
xor
xlat
inc
ds
mov
or
jb
sub
sub
or
lock
push
popf
jbe
sbb
add
lcall
xor
inc
cli
loopne
into
push
xchg
leave
dec
jle
mov
std
cmp
insb
daa
and
out
fcomps
es
out
das
cli
rcl
sbb
sub
pop
clc
cmp
xchg
jmp
hlt
push
mov
incb
jge
shlb
push
mov
movsl
jecxz
pop
cmp
dec
sub
pop
pusha
nop
mov
dec
and
xchg
cmp
mov
dec
mov
or
imul
icebp
mull
fmulp
xchg
xor
push
pop
mov
cli
adc
xchg
int
xchg
cmp
scas
mov
popa
mov
leave
dec
dec
pop
mov
push
add
cld
sub
lahf
repz
js
es
testb
push
mov
imul
lods
daa
out
cmc
add
adc
mov
mov
push
xchg
gs
ds
and
push
subl
jl
clc
clc
xchg
mov
dec
dec
mov
xlat
imul
cmp
xor
movsl
and
imul
in
mov
mov
repnz
fcompl
das
sbb
xor
int
popa
xor
inc
fldenv
mov
sub
adc
inc
and
and
mov
das
sbb
inc
mov
jno
push
xor
aad
movsl
xor
cld
jmp
inc
loop
mov
xor
fistl
mov
sahf
fcoms
mov
rorl
popf
dec
out
bound
mov
xor
hlt
divb
mov
pop
lods
pop
fwait
push
daa
jns
mov
clc
fwait
xchg
mov
xchg
push
into
cmpsl
popf
push
push
mov
dec
in
imul
test
rcrl
or
hlt
fldt
fidivrs
fwait
hlt
out
nop
ja
and
movsb
add
sub
jp
clc
dec
push
cmp
push
mov
pop
mov
pop
pop
pop
jecxz
sub
addr16
cltd
pusha
ffree
push
shrb
adc
loop
fistps
aad
stc
scas
push
dec
xchg
shrb
je
sub
xchg
loope
hlt
in
mov
xorl
fnsave
or
push
push
stc
mov
xor
xor
xor
orl
adc
call
movsb
call
and
mov
xor
dec
stc
out
lds
sbb
aas
push
sub
fcomi
jmp
xchg
sub
add
push
xchg
arpl
pop
addr16
les
iret
test
orb
cmpsb
push
dec
mov
mov
adc
fwait
icebp
sbb
or
push
and
test
sub
out
test
inc
xchg
add
insl
xchg
sub
mov
ret
mov
out
cmp
push
xchg
lods
pushf
mov
loopne
lds
inc
loopne
cwtl
bound
lcall
dec
or
sbb
ret
dec
cmp
or
mov
shl
out
ret
or
xchg
cmp
pop
js
into
dec
sarl
popfw
jg
mov
ret
ja
mov
sub
aam
mov
push
das
cli
pop
sub
or
mov
xor
mov
aaa
sbb
push
xor
imul
jmp
cmpsl
sub
sbb
and
ljmp
das
cwtl
inc
lcall
inc
sub
cwtl
addl
push
scas
pop
ljmp
hlt
rol
or
or
pop
shlb
push
int3
outsb
es
add
shrb
movsl
lds
repnz
xchg
add
stos
js
fnsave
pop
mov
sub
inc
je
ja
icebp
adc
stc
in
call
bound
stc
adc
cmp
cmp
mov
dec
aaa
add
xor
xlat
or
out
lds
es
pop
pop
pop
mov
out
test
xor
push
iret
and
outsb
test
aas
push
lods
je
fwait
imul
add
adc
fwait
aad
inc
cmp
icebp
cs
xchg
jns
repz
hlt
cwtl
pop
sbb
adc
sbb
in
push
push
cltd
es
insl
sub
sub
dec
pop
std
pop
xor
mov
test
loop
lret
pop
mov
push
or
scas
jo
cli
movsl
dec
jl
xchg
and
pavgw
jecxz
or
jge
xor
clc
pop
clc
incb
shrl
mov
pop
ljmp
dec
aam
fiaddl
inc
cmpsb
cwtl
lcall
cmp
fcmovnbe
scas
push
xchg
movsb
cli
adc
dec
nop
shlb
or
fnsave
cmc
ret
cmp
jg
roll
xchg
bound
mov
or
xchg
call
push
rcl
adc
popf
add
shr
cmpb
outsl
cmp
incl
jae
jo
adc
push
movsb
enter
iret
lds
gs
xorb
pop
testb
ret
es
mov
pop
and
mov
imul
hlt
ds
add
pusha
test
insb
push
mov
dec
sbb
mov
mov
xor
insb
dec
dec
xchg
out
add
out
mov
xchg
adcl
push
ss
xchg
ror
movsl
mov
out
pop
sub
xchg
adc
loopne
push
inc
add
stos
scas
adc
fisttpl
add
or
and
push
int3
push
mov
mov
sub
pop
lahf
push
mov
mov
or
and
jb
mov
adc
jge
outsb
cwtl
in
cmp
push
jg
ss
cmpsb
push
cli
mov
cmp
cmp
cmp
dec
andb
cwtl
ljmp
imull
hlt
sub
rorl
mov
mov
dec
rcr
cli
movsb
mov
lds
xor
pop
pop
or
xor
xor
mov
push
push
jecxz
add
lods
sbb
rorb
adc
addr16
mov
adc
mov
ret
fildll
neg
cld
cmp
jge
or
out
aas
and
xor
pop
xor
cmc
lock
mov
and
mov
daa
mov
push
out
or
xor
add
xlat
lods
rorl
data16
push
dec
scas
mov
aam
cmpsb
gs
ret
mov
jl
sub
and
push
mov
sub
fadds
dec
test
aad
repnz
jmp
leave
cltd
xlat
sbb
lods
lahf
leave
lret
jae
or
daa
cmpsb
icebp
sbb
xlat
stos
jno
fwait
insl
mov
fs
sbb
mov
xor
adc
mov
inc
repz
jb
daa
lret
mov
dec
dec
int3
into
js
movsl
nop
adc
pop
inc
pop
aam
fwait
mov
testb
pop
jg
jmp
adc
cmp
or
xor
das
fistps
adc
xor
and
icebp
int3
adc
out
es
inc
sbb
int
loopne
es
aaa
mov
push
roll
lock
cmp
stos
fildl
sti
out
and
cld
push
ja
push
outsb
dec
mov
lds
xor
jl
ret
add
inc
popf
mov
xor
jl
push
adc
dec
jns
leave
dec
lods
and
mov
dec
rorl
aaa
mov
inc
add
sbbb
sbbl
insb
out
scas
daa
inc
jns
xchg
scas
fdivp
repz
jg
testb
cmp
mov
call
ss
xchg
dec
stc
sub
sub
out
xor
inc
ret
cwtl
stos
mov
in
insb
cmpsb
hlt
adc
mov
sbbb
scas
pushf
pop
dec
test
pop
xchg
out
ljmp
nop
in
push
sbb
or
shll
mov
cmp
pusha
inc
push
in
shll
xor
xlat
cs
out
icebp
flds
fcmovnb
ja
xchg
fwait
inc
cltd
cmp
lods
into
in
rcr
fwait
add
repz
ret
orl
idiv
adcl
addr16
daa
test
ja
loop
cmp
adc
add
outsb
and
push
insb
in
xchg
or
fucom
gs
push
cmp
inc
adc
arpl
inc
push
adcl
movsb
fstps
int
cld
or
jecxz
arpl
sbb
inc
cmp
into
xchg
ret
aam
shlb
je
xchg
jns
sub
pop
out
push
mov
sti
out
jg
pop
inc
adc
mov
insb
jg
mov
cmp
or
jne
push
jbe
rolb
lcall
push
add
and
lret
jl
loope
sbb
ds
xor
bound
adcb
sbb
pop
fldcw
std
mov
movsl
fistpl
movsl
mov
iret
ds
mov
out
fcoml
push
jle
jle
jb
fmull
mov
mov
sahf
and
mov
add
adc
mov
or
das
jb
mov
inc
sbb
inc
pop
mov
fwait
xchg
adc
stos
bound
bound
push
mov
ficoml
scas
scas
inc
aaa
dec
and
inc
mov
ja
adc
xchg
outsl
inc
and
mov
pop
pop
push
daa
clc
shlb
push
mov
xchg
repnz
mov
mov
loope
mov
mov
rorb
jnp
repnz
dec
pop
orl
hlt
or
jecxz
push
or
cwtl
movsl
push
sti
cltd
jmp
add
pop
lods
mov
mov
divb
hlt
test
adc
push
sub
inc
stc
add
and
nop
pop
test
icebp
insl
lock
test
jne
out
fildl
cmpsb
pop
mov
lods
adc
mov
add
mov
inc
cli
ss
mov
ds
sbb
push
enter
insb
jns
dec
insb
mov
cmp
sti
enter
push
cmp
sub
mov
xchg
jl
jle
cli
jg
imul
xorl
mov
nop
jmp
loop
cld
aam
dec
lods
adc
cli
lret
stos
jmp
push
mov
jge
dec
ss
fucomi
pop
jp
es
test
dec
sahf
mov
adc
sahf
cli
xor
sbb
das
add
popf
xor
cmp
hlt
xchg
xchg
mov
pop
mov
add
imul
mov
aaa
mov
mov
cmpsb
mov
jl
pop
jo
mov
mov
movsl
pop
fsts
sarb
sbb
xchg
fxch
in
movsl
les
adcb
cltd
inc
les
fisttpll
and
xor
xor
in
mov
adc
push
shlb
pop
iret
or
add
add
mov
push
inc
jp
loop
cmp
sbb
mov
loopne
mov
cwtl
jb
sub
xchg
xchg
out
cld
fimull
mov
aam
fdivrl
std
pop
push
imul
and
jb
add
xor
mov
ss
enter
adc
pop
sbbb
xor
aam
imul
hlt
or
xchg
jge
ljmp
xlat
outsb
clc
mov
mov
mov
stos
movsl
sub
sbb
sbb
jnp
icebp
mov
sahf
lahf
pop
mov
cmc
in
lahf
sub
mov
pop
aaa
mov
jmp
pop
mov
testl
sbb
cmp
cmpsb
inc
mov
push
add
mov
pop
dec
sti
adc
lods
rolb
arpl
cmp
bound
inc
cli
fldenv
cmp
jno
nop
push
leave
adc
cltd
enter
lret
mov
xor
jno
ss
mov
dec
xchg
insl
rclb
ss
jecxz
pushf
sbb
adc
jmp
les
pusha
jne
add
jmp
adc
dec
lds
dec
roll
clc
popf
fdivrp
push
pop
jno
push
shl
out
mov
cmp
lahf
and
push
adc
es
jg
adc
inc
int3
sub
popa
cltd
cmp
ljmp
dec
andb
into
insl
idiv
andb
xlat
lahf
mov
in
fildl
fwait
lret
adc
xlat
jb
lret
mov
inc
pop
mov
push
hlt
dec
adc
sbb
out
push
aam
test
jbe
icebp
lretw
data16
inc
cmc
daa
cmp
pop
and
sbb
idivl
je
in
arpl
dec
mov
dec
ljmp
sbb
dec
push
jnp
dec
dec
xor
sub
jge
pop
les
adc
scas
clc
cmp
loope
cld
ficoms
cld
data16
adc
orb
shlb
clc
add
cmp
fsubs
cmpb
sbb
and
mov
in
sub
loop
jb
dec
mov
cmp
push
jb
cmp
arpl
adc
aaa
and
mov
sbb
add
push
or
sub
mov
mov
inc
movsb
test
mov
xor
stos
push
out
fisubrl
and
xlat
cmpsl
movsb
jg
xor
inc
inc
push
xchg
aaa
push
cltd
push
mov
mov
lock
mov
int
ds
push
lret
out
bound
cmc
push
push
nop
or
push
js
xchg
jl
pop
inc
nop
insb
fucom
lret
jle
adc
scas
push
pslld
push
sarb
xorb
adc
cmpsl
insl
mov
das
stos
inc
in
mov
lret
in
cmp
or
and
popa
data16
icebp
push
cmp
or
les
push
daa
jb
ljmp
sbb
xchg
push
fisttpll
cmp
push
jbe
sarb
jb
popf
mov
das
fnstsw
les
adc
push
loop
out
mov
outsb
xor
add
or
adc
jb
or
or
cmp
mov
xor
aaa
push
add
cli
popa
jno
test
adc
jb
loope
movsb
inc
xor
inc
xchg
shl
sahf
std
rcrl
sub
cmp
arpl
adc
ds
add
push
pop
bound
mov
inc
clc
adc
sbb
int
les
adc
and
sahf
adc
add
sahf
pop
in
repnz
add
popa
ja
mov
jne
stos
stc
mov
cld
adc
fstp
add
mov
das
into
xchg
sub
loop
mov
stos
inc
xchg
icebp
mov
mov
in
jg
cmpsb
push
clc
jge
loope
decl
je
mov
js
pop
xchg
lret
xlat
out
inc
out
pop
call
leave
in
mov
int3
mov
jnp
push
pop
dec
and
into
sub
inc
lea
popf
dec
fcmovb
push
jge
mov
xor
aas
shlb
ret
xor
sbb
xor
leave
jne
xor
fmulp
ljmp
outsl
sbb
jmp
jb
inc
cltd
xchg
mov
jl
mov
aam
nop
repz
push
mov
outsb
jbe
cli
adc
icebp
aas
std
dec
mov
adc
shll
push
test
sbb
dec
jmp
mov
cs
mov
fsubl
int3
call
inc
dec
xor
and
int
adc
aas
les
inc
mov
jbe
movsb
loopne
xlat
and
mov
fidivrl
jp
pusha
rorb
ffreep
lcall
mov
dec
sub
fnstenv
sbb
and
mov
or
mov
pop
dec
push
add
int
sahf
or
mov
icebp
jg
stos
adc
data16
inc
push
repnz
inc
lea
inc
shrl
int3
int
mov
lret
push
fwait
jmp
cmp
sub
jne
mov
in
sti
sbb
inc
icebp
add
jecxz
es
xchg
aam
fs
mov
fwait
jl
aad
pop
jmp
add
cltd
xlat
dec
mov
cwtl
jp
movsb
frstor
pop
cmp
pop
aas
ss
test
sub
dec
lret
push
subl
push
cltd
cmpsb
xor
mov
sub
jb
call
es
sbbl
movsb
add
mov
xchg
outsb
mov
aam
pop
enter
aas
fists
mov
mov
xlat
pop
add
cli
icebp
sub
jno
mov
jp
and
cltd
das
jno
lea
push
lods
mov
push
xor
mov
ss
inc
cmp
mov
or
fs
dec
popf
aaa
push
xor
mov
aam
sub
repnz
adc
pop
repz
lret
mov
or
jmp
stos
hlt
fistl
sbbb
pop
jg
sbb
imul
loope
jne
in
lods
dec
std
mov
wrmsr
sbb
jb
sbbl
jmp
xchg
lock
insb
inc
outsb
adc
ret
pop
into
fnstcw
jne
xchg
andl
inc
iret
pop
lret
aaa
mov
jb
add
aas
lods
dec
pminsw
ret
test
sub
test
pop
sbb
adc
push
loope
push
pop
and
cmp
mov
or
pop
out
int3
ret
popf
outsl
and
divl
xchg
je
mov
jb
movsl
out
sar
cmp
inc
cld
cmpsb
scas
add
in
cwtl
dec
and
adc
or
and
pop
mov
sbb
fsts
or
call
inc
xor
je
push
outsl
hlt
pop
sub
addr16
mov
mov
jmp
jne
clc
pushl
pop
inc
jg
pop
dec
inc
insl
cmp
int3
xchg
je
adc
decb
and
sbb
cli
mov
mov
call
jecxz
scas
mov
inc
test
mov
cli
inc
pop
push
add
or
dec
pop
push
nop
mov
mov
ret
add
and
inc
push
sub
pop
sub
mov
arpl
mov
out
mov
mov
test
and
out
xchg
mov
jl
add
ds
sbb
test
add
jmp
ret
adc
test
add
mov
jb
xchg
imul
fbstp
bndstx
nop
jbe
cmc
inc
push
aas
fcomps
push
xchg
loop
dec
mov
cmc
scas
inc
in
outsb
lods
nop
sahf
imul
push
mov
push
add
push
loop
cmp
inc
mov
xchg
int
jb
ficompl
sbb
adc
inc
int
addl
cmp
inc
sbb
es
sub
lret
mov
and
sub
dec
out
imul
jmp
add
out
fsubrl
jg
es
in
adc
xor
push
xor
int3
rorl
divl
mov
xchg
aam
leave
mov
jmp
gs
xchg
das
std
mov
push
cmp
xorb
cwtl
loopne
sbb
add
arpl
mov
stos
out
mov
xchg
dec
scas
inc
faddl
rcll
jnp
inc
mov
pop
push
insb
sub
jl
sub
mov
xor
arpl
and
mov
adc
movsl
fsubr
push
sub
mov
adc
or
xchg
mov
mov
cmp
xchg
xchg
shrl
mov
xor
loop
and
mov
push
out
dec
xchg
fisubl
xchg
inc
dec
test
or
sub
nop
mov
insb
dec
mov
push
daa
jbe
shlb
xlat
jg
jmp
cmp
mov
mov
and
jb
add
ss
xchg
push
dec
mov
xor
fidivrl
int
jl
lods
xlat
dec
movsb
pop
pop
stos
scas
mov
xlat
jae
repnz
xchg
ja
pop
sub
test
sbb
ficoml
scas
movsb
add
mov
mov
stos
jno
cmp
cmp
ss
ljmp
mov
mov
sub
in
fld
lret
test
out
ljmp
inc
or
sahf
xchg
add
mov
stos
and
adcl
or
fcmovnbe
and
out
mov
jl
not
mov
arpl
ret
add
mov
push
fisubrl
jns
pop
je
stos
jle
shll
clc
dec
or
popa
sti
push
sub
push
cmp
mov
push
fwait
dec
sahf
outsb
stos
outsb
pop
add
inc
xlat
out
xlat
lds
out
fbstp
sbb
aas
in
jb
ret
adc
push
push
pop
hlt
daa
sub
sbb
test
mov
fsts
inc
mov
incb
rorb
orl
enter
jp
sub
mov
cs
mov
pop
mov
cmpsb
mov
sub
rcrb
aad
sbb
das
test
lods
xor
sti
mov
mov
jle
and
andl
push
in
mov
add
movsl
lcall
push
jge
sarb
sub
or
cli
and
jge
int
mov
sti
pusha
inc
pop
hlt
and
inc
xor
cmp
push
mov
push
jmp
aas
jge
xor
sahf
mov
pop
cmp
imulb
aam
or
rclb
inc
xor
cltd
addb
push
mov
sbb
cmp
push
mov
pop
xchg
cmp
in
add
adc
inc
orl
aad
mov
js
xchg
push
or
lcall
loope
aaa
sbb
cmpsb
shr
loop
sub
xor
xor
out
mov
dec
and
xchg
jo
fisubrl
in
cmpl
lods
call
jno
pusha
hlt
pushf
jg
mov
pop
lea
adc
jle
sub
mov
fildl
xor
push
mov
inc
sbb
adc
jae
fnstsw
dec
cmp
pop
insb
inc
push
sbb
mov
enter
in
popa
inc
sbb
outsl
cmpsb
popa
jne
xchg
cmp
push
nop
or
dec
pop
mov
nop
aas
mov
js
cmpsb
sub
jge
lret
movb
mov
or
aad
lret
dec
adc
mov
push
mov
push
cmp
test
mov
xchg
sar
gs
pop
mov
cmpsb
in
adc
ja
fildll
outsl
or
pushf
cwtl
xor
mov
pop
inc
push
int
jbe
mov
es
jnp
inc
push
inc
mov
popf
xchg
daa
mov
ljmp
std
xchg
pop
jl
mov
adc
jo
jns
mov
movsb
je
push
xchg
sti
cmp
or
shr
ficoms
movl
mov
inc
xchg
adc
mov
fidivl
mov
or
ret
ret
lret
jb
out
shlb
mov
sub
jl
enter
rorl
and
xor
dec
shll
ret
jno
loopne
jle
imul
jno
andb
push
mov
jno
jmp
mov
rol
sbb
cmp
cmp
fiadds
lcall
test
jmp
pop
lods
inc
push
in
jg
and
jmp
lods
jo
pop
movsb
inc
and
lret
inc
xlat
and
filds
xchg
das
xchg
mov
push
vpandn
cmp
xchg
mov
or
in
js
test
mov
cmp
popf
adc
ljmp
test
xchg
syscall
cmc
fcmove
loop
loopne
xchg
das
in
xchg
int3
sub
xchg
xchg
lcall
sar
mov
ret
insb
sbb
outsb
push
popa
in
mov
dec
ss
lods
jnp
ret
push
push
imul
and
jmp
pushf
repz
dec
xor
xor
jno
enter
aad
dec
lahf
pusha
pop
or
or
sbb
and
fcompl
cmp
sbb
xorb
mov
xor
rcrb
cmp
mov
ljmp
ja
cld
cmp
xorb
adc
pop
push
pop
add
lds
inc
or
outsb
xchg
push
inc
cmp
inc
mov
dec
jge
call
pushf
insl
insb
call
lret
fmul
dec
sar
inc
fisubrs
xor
rcll
out
push
rorl
inc
push
cmp
push
jne
push
cmp
and
mov
push
jecxz
mov
ja
popa
lahf
aad
lret
or
arpl
jge
push
jg
inc
dec
bound
xlat
sbb
xor
add
rolb
add
mov
cmp
mov
rclb
pop
icebp
movl
hlt
icebp
or
mov
jle
lds
mov
sub
ret
jo
dec
in
mov
sbb
jo
cmp
xor
xchg
cmp
pop
adc
jnp
lret
outsl
ror
es
xchg
negl
sarb
sub
pop
mov
cwtl
sbb
mov
jge
les
outsl
xor
push
enter
lea
push
insb
push
jg
mov
cwtl
stos
imul
hlt
xchg
jmp
or
int
or
mov
testl
mov
pop
ss
aas
push
aad
ja
fisubs
or
xchg
stc
in
scas
adc
ret
mov
push
inc
inc
dec
pop
mov
ja
stos
adc
cmpsl
xor
lahf
std
hlt
stos
xor
dec
jle
push
test
lret
or
xor
rcrb
and
out
out
ficoml
push
cmp
lds
fstl
cs
inc
cmc
fstpt
out
ljmp
jae
addr16
es
mov
jmp
stc
adcb
test
cmp
enter
jmp
std
testb
aam
out
xor
inc
and
pop
clc
mov
sti
add
rcrl
cmpsl
adc
jp
rcl
out
push
mov
sbb
icebp
aad
pop
loopne
and
fisubs
adc
mov
loope
mov
fistpl
je
jbe
int3
push
xchg
pop
mov
mov
imul
mov
aas
aad
outsl
push
fstpl
out
adc
repnz
lcall
cltd
test
sbb
repz
pusha
pushf
repnz
mov
mov
jno
inc
mov
out
shrb
enter
fistpl
jbe
dec
xchg
cmc
ret
sbb
repz
mov
mov
cwtl
sar
cmc
dec
push
lods
inc
xchg
push
add
movsb
fmuls
add
into
lock
mov
popf
adc
jp
std
cmpsb
and
push
mov
in
cs
xchg
je
xor
daa
pop
fiadds
and
repnz
inc
inc
cltd
loopne,pt
outsl
xor
push
pushf
push
test
jno
add
or
rcll
pusha
xor
orb
mov
mov
push
clc
add
cmp
fsubrs
jge
sysret
bound
jl
aam
add
test
or
leave
push
cmovnp
fistl
sahf
popf
data16
pop
fistl
xchg
mov
xchg
sbb
and
sub
aad
xor
mov
je
xchg
xor
test
pusha
cld
jns
insl
imul
test
adc
jb
jno
push
push
std
cwtl
add
lret
xchg
pop
and
ja
adc
dec
jg
xor
mov
sbb
mov
shll
test
sahf
and
push
les
mov
in
in
mov
pusha
jle
xor
cwtl
jno
inc
dec
les
inc
movsb
pop
dec
sub
pop
sub
xlat
push
les
jo
out
bound
jae,pn
adc
and
or
push
inc
mov
push
ss
rcll
mov
mov
gs
sub
sbb
daa
mov
push
pop
shll
pop
cmp
push
pop
imul
ror
sub
sub
xchg
pop
xchg
stc
into
and
mov
ss
shll
lods
enter
scas
xchg
dec
pop
sub
andb
mov
lea
in
out
notl
enter
into
sbb
mov
dec
icebp
adcl
imul
ja
mov
dec
stos
sbb
ja
mov
xorl
jl
mov
inc
nop
cmp
pop
push
jno
imul
inc
adcl
pushl
jae
add
sti
xor
jg
ffree
sti
das
mov
shrb
mov
out
mul
gs
push
sub
xrelease
fsts
inc
pop
jle
lods
jge
jp
mov
xchg
dec
adcb
stos
gs
xchg
fidivl
or
add
mov
and
es
fs
sbbl
popf
jb
loopne
daa
cmpsb
add
pop
popa
sub
iret
jmp
lods
ja
push
repz
enter
adc
mov
lods
push
jo
clc
add
sti
and
and
adc
or
sahf
pop
in
icebp
mov
xchg
ds
sahf
shll
fcomip
and
mov
iret
dec
cld
cs
gs
mov
das
jae
xchg
inc
and
out
test
adcb
and
inc
jmp
into
sub
mov
mov
and
lret
pop
lods
hlt
dec
dec
cli
fdivs
mov
ja
xlat
pop
sub
and
jmp
ret
les
add
daa
jns
pop
sahf
mov
enter
sub
push
jle
repnz
sbb
sti
sub
sbbl
xor
dec
sub
not
dec
push
jb
or
popf
inc
xchg
fldcw
pop
and
xchg
fadd
cwtl
mov
cmpsl
sarb
dec
mov
lret
std
repnz
test
cmpsl
rcrl
and
xchg
or
lcall
loop
xchg
into
les
rolb
inc
push
push
mov
jnp
addl
loopne
jns
sub
pop
sub
jecxz
imul
and
xlat
shrb
inc
adcl
rcrb
add
scas
jns
or
sbb
sub
mov
js
mov
or
or
loope
lds
lea
fdivs
jge
adc
ret
inc
ja
pop
out
inc
adc
push
inc
sub
xchg
pop
mov
dec
es
mov
repnz
rcrb
mov
call
insl
jnp
sub
adcb
loope
ret
mov
pop
sbb
inc
xor
ret
scas
mov
inc
testl
shl
fwait
cmp
loope
adc
das
adc
cmc
mov
dec
pop
test
lods
xchg
xor
imul
lahf
add
clc
mov
mov
movsb
out
or
xchg
and
dec
inc
mov
decb
pop
pop
andl
inc
jmp
imul
or
and
jmp
insl
pop
xorl
lods
mov
push
pop
sbb
jb,pt
pop
xor
inc
mov
incl
jp
out
jp
icebp
leave
mov
mov
adc
pop
pushf
outsl
aam
packssdw
mov
test
sub
add
mov
xor
stos
clc
push
pop
outsb
arpl
scas
mov
rol
clc
mov
test
push
arpl
adc
cmp
sub
sub
ret
in
mov
dec
test
push
movsl
jne
mov
fcmovne
ret
nop
out
sub
or
ss
cmp
aam
or
aam
inc
pop
fidivrl
loop
cwtl
jnp
adc
jne
adc
popf
dec
repnz
stos
and
push
sbb
push
jmp
adc
fcmovnb
push
dec
andb
ljmp
jecxz
orl
test
mov
lahf
clc
insl
lods
stc
sarl
les
xor
arpl
rclb
fs
out
testb
popa
ficoms
stos
scas
add
into
cmc
fldenv
push
lea
pop
out
pop
mov
xchg
xchg
lcall
insl
in
and
inc
jg
inc
mov
inc
xchg
pushf
jo
pop
outsl
push
adc
xchg
clc
push
mov
cld
and
or
aam
lahf
imul
cmp
mov
negb
outsl
icebp
adc
cs
cs
in
mov
pop
popf
in
lahf
jg
sbb
hlt
sbb
dec
cltd
push
in
add
lock
fisubrs
inc
fistpll
pop
shr
or
inc
js
aas
fadds
sbb
out
sbb
shlb
stc
jno
fidivs
mov
cmpsl
add
in
jno
cmc
js
jnp
mov
fmuls
cmpb
jmp
pop
ss
push
push
nop
test
mov
scas
xlat
ret
call
iret
push
popf
sub
and
jbe
jo
cmc
jge
outsl
push
dec
addr16
lea
daa
jns
ds
sarl
lods
and
out
push
movq
dec
and
mov
das
push
int3
cmp
sbbb
call
in
inc
push
ret
push
sub
lods
mov
jecxz
and
and
pop
jp
mov
enter
pop
pop
inc
inc
int3
adc
add
arpl
sub
push
lods
loopne
and
lea
dec
clc
jo
inc
mov
sarl
ds
cs
or
arpl
out
add
loopne
faddl
or
lods
hlt
inc
pop
add
pop
inc
sarb
or
push
jb
jne
mov
xchg
rcll
loopne
mov
sbb
push
xor
roll
sub
call
cmp
das
imul
adcl
sarl
jg
sub
cmp
xchg
xchg
enter
daa
sub
sbb
ret
imul
imul
mov
pushf
call
in
out
lcall
es
jne
popf
mov
jl
cwtl
js
and
ret
pop
les
loop
jo
lods
in
jmp
fcom
scas
pop
jp
adc
inc
pop
and
or
adc
jae
out
jmp
inc
movsb
push
sbb
add
es
mov
bswap
cmp
sti
fldt
inc
popl
andl
mov
mov
xchg
push
push
out
push
in
dec
lock
shll
xchg
or
adc
fisubrs
push
divb
and
in
inc
cmp
fsts
inc
sub
scas
push
bound
cs
xor
outsb
js
mov
fcompl
test
cmp
xor
cmpsl
es
rcll
mov
jbe
mov
je
test
mov
jno
adc
adc
nop
dec
mov
sbbl
aaa
and
ficompl
inc
repnz
mov
lret
cmp
inc
sahf
cmpsb
fcomps
fadds
ret
in
jge
mov
adc
cli
push
dec
xchg
out
jbe
add
dec
pop
shrl
filds
sub
inc
mov
imul
aam
mov
mov
cmp
cmp
cmp
shlb
cmp
ss
sub
mov
mov
insl
stos
mov
sbb
out
cmc
jg
pop
repnz
jne
dec
push
movsb
icebp
ss
mov
loop
or
pop
das
out
hlt
outsl
push
inc
cmp
bound
out
fbstp
xchg
jge
mov
pop
scas
push
and
xor
cmp
sarl
aaa
aad
test
adc
pushf
pop
lds
enter
xor
sub
scas
push
mov
stos
add
mov
movsl
arpl
pop
push
in
adc
pop
sbb
or
dec
cmpl
stos
cmpsb
mov
daa
cmc
push
cmp
lret
dec
push
cs
mov
vsqrtsd
add
sbb
ret
push
loope
lods
cmp
inc
out
lds
fisttpll
sbb
jg
mov
jo
adc
clc
in
xchg
in
xchg
sahf
pop
inc
mov
jl
clc
sub
loope
xor
bswap
mov
mov
mov
arpl
xor
add
or
mov
jbe
mov
xchg
test
cmp
adc
in
test
aam
pop
lea
jae
or
jbe
adc
xchg
ss
mov
pop
jnp
in
cmp
call
xchg
les
push
outsl
lods
mov
mov
nop
stos
loope
ret
lods
in
aas
lods
data16
outsl
cmp
outsl
or
xchg
cld
lret
mov
aas
push
ss
into
xor
pop
ja
push
pop
dec
mov
test
test
mov
pop
mov
je
jmp
dec
and
std
loop
push
scas
and
sti
sub
aaa
out
test
adc
push
or
jecxz
push
loopne
cmpnleps
je
jnp
adc
and
negb
inc
and
push
cmp
mov
adc
adc
or
lock
pusha
shl
adc
je
jo
xchg
xchg
push
sub
dec
fisttps
inc
dec
lock
insl
fstpt
mov
loopne
jg
out
dec
clc
call
in
jmp
xor
ja
adc
xor
out
xchg
mov
mul
daa
dec
xchg
pop
cmp
outsb
push
jae
xor
lods
out
lcall
fldt
lods
insl
adc
push
push
mov
inc
dec
fbstp
mov
popl
mov
mov
pop
nop
mov
mov
mov
icebp
push
ret
shrb
fbld
loope
lock
fstp
cmp
dec
movsb
dec
xlat
loopne
mov
dec
mov
adc
jae
loope
rcr
mov
push
fidivl
sarb
jo
and
jbe
xlat
out
push
subb
sub
push
shll
mov
test
fimull
cmp
jnp
test
rclb
cmpsl
sub
jno
mov
push
dec
sub
mov
test
popl
sub
popa
popf
lock
sub
dec
rolb
fwait
icebp
and
repz
icebp
mov
push
jb
sbb
movsl
js
xchg
std
xor
dec
into
ret
pop
pop
repnz
pop
or
in
pop
dec
ss
pop
testl
dec
daa
add
dec
add
lods
out
scas
inc
xchg
jbe
jae
pushf
test
mov
out
pop
jb
lds
cmpsb
aam
cmp
gs
push
jo
dec
pushf
xchg
mov
rclb
adc
loopne
clc
into
add
push
sbb
imul
ds
fiaddl
jecxz
dec
push
enter
add
push
sbb
push
mov
lret
push
cwtl
mov
sbbl
sbb
in
jne
pop
adcb
in
ja
les
dec
inc
dec
arpl
lock
pop
in
ret
icebp
pop
rclb
pop
es
ret
outsb
popa
shlb
mov
aas
lret
andl
pop
or
or
je
jl
testb
lea
push
ljmp
add
and
mov
or
mov
loop
movl
pop
mov
iret
fcoms
pop
jo
pushf
or
sub
jle
xor
push
xchg
add
imul
mov
das
jo
test
aas
and
xchg
push
sti
xor
pop
sub
push
popa
pop
das
aas
sub
data16
cmpsl
adc
jge
and
addr16
stos
add
in
mov
push
fdiv
inc
cwtl
aam
icebp
shld
jp
mov
pop
or
cmpsl
mov
push
dec
mov
mov
xchg
jne
push
aam
rclb
add
leave
repnz
ljmp
xor
iret
add
js
imul
call
gs
outsl
xor
xor
data16
adc
lods
xchg
push
insl
lods
jnp
repz
add
cmp
lcall
ja
ss
jb
xchg
rcrb
gs
repnz
and
dec
add
jnp
addr16
add
jle
mov
int3
dec
movsb
mov
jp
outsb
jmp
insl
sbb
rcl
shl
adc
pop
xlat
mov
xor
mov
jo
adc
out
pop
pushf
mov
stc
daa
lods
test
lret
add
mov
call
nop
ja
test
fsts
out
ret
iret
push
stos
fildll
sti
mov
sti
xchg
pop
dec
dec
iret
les
adc
sbb
or
cli
fcoml
mov
xchg
ret
adc
frstor
xchg
push
mov
js
cmpsl
cli
sub
arpl
and
arpl
jle
mov
divl
dec
xor
daa
hlt
sti
lock
popf
gs
test
inc
int
adc
fldl
mull
xchg
mov
outsb
mov
mov
mov
mov
xorb
lea
inc
mov
mov
call
adc
sbb
push
hlt
xchg
xorb
xor
inc
jbe
push
jnp
insl
lcall
dec
pop
push
lock
or
loopne
out
or
or
pop
cmpsb
in
aad
addr16
jnp
hlt
pop
insl
xchg
sbb
das
xchg
int
test
enter
shlb
adc
xor
in
movsl
loopne
push
push
adc
xchg
pop
dec
aaa
nop
dec
and
xor
inc
in
add
pop
mov
hlt
push
jae
add
jl
cmp
mov
push
push
ret
push
pusha
mov
jbe
push
hlt
popa
aam
pop
data16
sbb
mov
mov
inc
jb
pop
testb
mov
cld
and
fldt
scas
dec
scas
loope
cmp
in
cmp
jns
iret
or
fistpl
push
inc
inc
out
xor
fsubl
fcoms
mov
xchg
push
adc
repz
pop
ret
and
cmp
push
ja
mov
dec
addr16
test
cltd
pop
pusha
or
inc
pop
rclb
aas
cwtl
js
gs
repnz
push
mov
mov
aad
cmp
pushf
popa
sarl
dec
sbb
fdivs
sub
stos
insb
fmul
shr
out
push
xchg
xchg
hlt
mov
mov
mov
and
and
dec
jbe
nop
cmp
pop
sub
notl
mov
xor
aam
ret
insb
lea
adc
or
cmp
int3
leave
push
out
rorb
lds
and
pop
xchg
mov
xor
mov
cwtl
ljmp
mov
pop
inc
or
rcll
enter
mov
iret
test
clc
pop
add
mov
pop
or
sbb
xchg
shll
fs
pop
sub
adc
outsb
sub
adc
xor
mov
push
outsl
push
insl
dec
popf
jo
dec
fnstsw
mov
and
fnsave
dec
xchg
dec
xchg
iret
aad
lods
adc
fnstsw
ficoml
mov
clc
addr16
jno
xor
fldcw
dec
test
sarb
xchg
mov
cld
cmp
mov
inc
dec
js,pn
and
ljmp
mov
sbbl
inc
das
test
mov
push
mov
icebp
out
in
sub
lahf
or
cmp
sbb
lea
jge
sub
ret
popf
into
pop
lret
andb
mov
jnp
pop
je
push
xor
mov
stc
ljmp
jb
testl
rcr
sub
jno
cli
dec
loopne
or
sbb
mov
loop
xchg
pop
in
cwtl
enter
rorb
push
inc
mov
js
mov
shll
rcl
mov
je
fwait
pop
cwtl
pop
pop
ss
mov
data16
lock
rolb
push
lcall
mov
repz
nop
cmp
or
jae
or
loope
sbb
daa
jno
or
daa
mov
ret
sbbl
cld
dec
aaa
nop
daa
fistpll
jbe
jae
inc
push
inc
dec
sti
scas
xchg
pop
push
lret
push
push
out
xor
shl
dec
and
pop
mov
pop
cmp
mul
in
fimuls
icebp
scas
and
fcoml
or
pusha
cmp
inc
push
sub
and
clc
aas
inc
cmp
sbbb
mov
icebp
rorb
leave
adcb
stc
test
arpl
pop
mov
pop
xor
xor
adc
inc
notb
xor
xchg
les
lahf
fisubl
pop
dec
mov
or
test
ret
cmp
xor
sbb
sub
dec
pop
lock
adc
pop
cmc
loopne
daa
sti
push
lock
sarb
xchg
cmc
sub
scas
sub
out
cmp
fcoms
xor
stos
pop
fimuls
xchg
rol
ja
in
mov
insl
ret
inc
xor
push
filds
mov
mov
sti
ljmp
outsl
test
icebp
inc
inc
add
push
dec
adc
nop
out
cmp
jecxz
sahf
push
fwait
xchg
repz
shll
loop
shll
jecxz
xlat
aad
sbb
in
or
cmp
sbb
mov
mov
inc
push
pop
and
dec
cld
inc
mov
pushf
add
or
add
push
lea
mov
mov
test
xchg
lods
gs
push
push
js
or
xrelease
jecxz
mov
testb
sub
xchg
hlt
push
inc
or
je
mov
lret
xchg
jp
mov
or
lcall
shlb
sbb
mov
loope
push
cmc
loope
fisttpl
fwait
mov
lods
in
clc
aad
popf
mov
addr16
xor
pop
scas
sub
mov
imul
adc
lret
mov
push
mov
out
and
idiv
loopne
lahf
into
cli
push
and
mov
or
adc
int3
mov
xor
push
out
jecxz
or
lock
sbb
lock
insl
mov
and
lods
mov
js
push
int
adc
ds
xchg
push
dec
jmp
or
dec
faddl
fmulp
insl
in
mov
jecxz
stos
pusha
jb
xchg
jbe
mov
xchg
ret
mov
push
push
mov
push
and
loop
jmp
inc
pop
mov
cli
jae
cmpsl
xchg
sbb
int
xchg
in
sub
and
lahf
stos
test
rcrl
inc
mov
mov
fdivrl
cmp
outsl
test
jl
in
stos
or
lods
shll
dec
adc
lods
jns
jne
dec
add
pop
daa
sbbb
popa
adcl
jno
lods
ret
insl
hlt
leave
jno
sub
jp
push
cmp
scas
inc
data16
sub
cltd
sbb
pop
fmulp
nop
pop
inc
mov
inc
jo
aad
lret
push
repnz
push
je
sub
mov
int
mov
pop
xor
divb
push
push
jle
sbb
clc
fld
ficoms
pushf
jge
popf
scas
ss
int
nop
cmp
mov
mov
xor
pop
or
ds
xor
inc
ret
mov
inc
out
lcall
mov
pop
bound
mov
call
sarb
pop
and
cmp
loop
scas
sbb
inc
dec
ljmp
mov
add
jmp
jmp
fwait
xchg
add
mov
jmp
lcall
push
lods
test
fwait
mov
push
or
sbb
mov
pop
iret
pop
push
mov
imul
sahf
mov
fistps
shll
lods
out
mov
jle
mov
ficoml
and
mov
push
mov
xor
mov
ljmp
dec
add
hlt
aaa
sbb
mov
in
in
sub
loopnew
pusha
fisubl
push
in
call
xlat
outsb
sub
dec
jl
repz
insl
dec
inc
fildll
lds
jp
xchg
sbb
sbb
js
mov
aas
aad
popf
xchg
pop
outsb
lods
push
push
fstpl
cs
testb
out
arpl
pushf
pop
incl
and
orb
cmp
pop
stos
mov
in
jmp
hlt
push
jb
ficoml
add
idivl
std
jo
popf
sub
stos
in
pop
fs
iret
or
cmpsb
repnz
pop
pop
mov
fildll
aad
scas
mov
enter
test
cwtl
xor
ss
push
jns
call
jmp
movsb
mov
or
shll
mov
pop
gs
test
jo
cltd
loopne
xchg
scas
loopne
or
push
xchg
sbb
in
jge
cmc
mov
push
mov
or
xlat
xchg
aas
push
adc
cs
mov
mov
pushf
gs
sbb
mov
jecxz
sub
orb
add
xchg
fcmovnu
mov
mov
xchg
jg
dec
push
mov
add
subl
stos
cmp
xchg
cmpsb
pop
add
add
in
ficoms
inc
pop
and
and
outsl
pop
xchg
cmp
inc
mov
shlb
jecxz
stc
inc
addb
aam
lcall
cltd
cltd
leave
pop
fwait
addb
mov
cmp
xchg
push
mov
cmpb
inc
pop
stos
push
test
cmp
and
dec
push
cli
sti
dec
push
mov
push
lods
sbb
xchg
ljmp
sub
out
sbbl
lcall
int3
mov
scas
cmovae
push
cmpsl
mov
mov
inc
ja
dec
push
jo
dec
aad
mov
lret
dec
outsl
push
mov
add
fmul
mov
cli
fisttps
int
loope
stc
clc
push
cmpsl
fs
gs
rcrl
xor
loopne
mov
jae
call
ss
ja
mov
test
lds
pop
mov
les
cmp
mov
aas
jle
sbb
mov
xor
imul
scas
fs
sbbb
call
adc
test
rolb
push
push
imul
pop
lea
adc
sub
jnp
in
sbb
js
adc
mov
adc
das
mov
mov
adc
push
pop
push
push
or
and
jnp
jae
pop
push
dec
idivb
sbb
adc
and
fisubrs
or
sbb
repnz
and
aad
jnp
adc
lcall
inc
jg
inc
add
clc
loop
inc
adc
scas
stos
cmpsl
ret
dec
rclb
or
xchg
ja
mov
cmp
mov
mov
jne
std
data16
ret
cmp
jbe
xchg
xchg
mov
int3
push
mov
xchg
jp
xor
hlt
jle
mov
pop
fdivrs
xchg
inc
push
ret
push
inc
mov
fstps
push
dec
sti
sbb
dec
in
jns
adc
jb
in
sub
push
stc
push
or
into
jmp
push
xchg
movsb
scas
inc
push
ja
jno
ret
sbb
jae
xchg
mov
mov
sbb
dec
sbb
outsl
mov
inc
xor
mov
xor
movsb
subb
pop
xchg
insb
sbbl
pop
add
ja
xor
inc
jp
cltd
popa
inc
lods
or
mov
mov
insb
pop
cmp
ficoms
fdiv
push
jl
kmovw
addr16
sbb
arpl
cmp
jecxz
lds
jl
test
notl
push
test
mov
push
xchg
jae
hlt
sbb
add
pop
inc
ficoms
or
arpl
or
mov
cmp
jl
dec
or
pop
inc
adc
push
roll
push
cmc
pop
in
and
mov
xchg
pop
sbb
cmp
mov
nop
mov
add
ja
loopne
popf
mov
sbb
sbb
pop
test
nop
ds
jmp
mov
jle
dec
repnz
into
cmc
dec
pushf
popl
aaa
push
add
lods
inc
and
adc
inc
test
into
cmp
xor
fstl
into
cmp
inc
and
cmc
add
cld
loop
aaa
adc
adcl
adc
jmp
cltd
mov
out
mov
les
fldt
lcall
aam
es
in
sub
jae
cwtl
aaa
fdivl
and
and
and
insl
stos
loop
pop
lcall
shll
icebp
mov
fs
mov
in
jp
mov
cmpsb
sbb
mov
adc
pop
scas
popa
mov
outsb
jno
gs
jno
mov
push
fbld
inc
stos
pop
xor
inc
push
inc
sbb
hlt
scas
ds
cltd
clc
enter
and
xchg
push
push
push
scas
xor
subb
pushf
imul
popa
aaa
in
pop
outsb
jecxz
cs
lret
dec
fmuls
push
pushf
lds
dec
add
adc
and
pminub
pop
mov
push
jle
mov
xor
loope
push
shlb
push
adc
outsb
out
xchg
cmpb
adc
faddp
test
or
test
push
rcrb
mov
push
or
stos
mov
cmpxchg
xchg
div
and
mov
es
shlb
jecxz
fadds
fnstenv
push
sub
roll
dec
shll
push
test
test
mov
icebp
xchg
lcall
stc
mov
or
xchg
test
mov
jp
push
sbb
mov
aas
test
iret
mov
mov
inc
jae
jg
jnp
add
jmp
xchg
jo
push
dec
mov
pop
jb
addl
lret
lock
xchg
mov
pusha
stos
mov
or
jmp
mov
lahf
lret
pop
aam
outsb
loopne
adc
fimuls
loop
cmpl
ret
and
mov
movsl
icebp
or
inc
jnp
sahf
add
sahf
fidivl
ret
popf
or
push
cld
std
or
fimull
or
pushf
test
das
mov
hlt
je
mov
dec
cld
xchg
push
inc
xlat
adc
push
movsb
cmp
div
mov
rcll
dec
mov
hlt
mov
int
je
aaa
pop
jle
or
sbb
loop
repnz
push
psllw
dec
xchg
xchg
stos
ljmp
out
add
outsb
xor
push
out
outsl
adc
cltd
cmp
xchg
pop
sti
push
outsb
mov
daa
insl
loop
aad
sub
shll
into
pop
pop
dec
jnp
shl
pop
jae
iret
jecxz
dec
out
faddp
and
out
je
jbe
arpl
sub
jne
push
out
inc
stos
cmp
sub
fs
arpl
xchg
sti
icebp
addr16
cmp
push
cmp
xlat
bsr
push
stos
jb
push
mov
stos
stos
fcoml
ljmp
mov
shrl
das
pop
sub
fdivl
adc
jno
mov
das
mov
into
xor
jb
and
mov
jbe
push
cmp
jmp
cli
mov
shll
imulb
mov
cmp
int3
out
pusha
mov
fisubrl
aam
sbb
pushf
fdivl
jnp,pn
cwtl
xchg
clc
inc
das
mov
out
mov
dec
sub
movsl
fidivrl
stos
or
ret
sbb
or
xor
jle
pop
icebp
leave
mov
lds
jne
cmp
cs
and
push
in
sub
mov
int
hlt
divl
sbb
adc
push
test
jmp
popf
sub
fidivs
jle
adc
xchg
aad
inc
push
sub
push
cmc
inc
bound
add
and
sahf
lea
stc
and
fbld
leave
rorb
js
jle
sahf
mov
xor
mov
mov
jns
mov
out
pusha
mov
push
jnp
mov
jecxz
sarl
stos
cmpsb
inc
ret
mov
pusha
orb
cmp
pushf
xor
imul
pop
repz
cs
mov
fidivl
leave
inc
mov
fmul
xor
push
mov
adc
push
cmp
jae
inc
jp
rcr
mov
sbb
cmp
cmpsl
ljmp
addr16
jmp
cmp
cs
xor
shll
stos
inc
sub
mov
jle
xor
loop
pop
add
imul
jne
xor
imul
aad
inc
movsl
jl
pop
cmc
inc
or
cmpsl
dec
mov
push
mov
xchg
lock
jo
jge
cmp
xchg
les
xchg
sarb
fcom
movsl
mov
push
testb
loop,pt
es
xor
leave
fstpt
sarl
mov
repz
jnp
mov
sbb
push
jne
sub
je
mov
fdivl
jne
xchg
mov
mov
xchg
lret
addl
dec
lods
xor
or
lret
and
adc
jg
mov
andb
sbb
jge
and
xor
jno
fwait
scas
cmp
dec
ret
sub
push
cli
and
jnp
lahf
push
mov
pop
pop
fs
ud1
imul
cmpsl
sti
adc
pop
pop
lods
xchg
adc
jae
or
add
test
mov
push
cmp
inc
movsl
push
sub
push
inc
xorl
cwtl
pushf
or
les
cmpsl
and
cmp
and
mov
fmuls
xchg
pushf
adc
shll
lods
cli
lret
and
icebp
jnp
ss
insb
mov
inc
cmc
add
pushf
pop
jbe
or
shlb
jno
lahf
dec
je
xor
insb
je
lock
mov
pop
inc
je
xchg
adc
mov
call
sbb
stos
addr16
dec
rorb
xchg
push
enter
or
int
cltd
std
mov
insb
nop
fs
xor
xchg
push
sbb
inc
call
pop
js
out
mov
std
fwait
xchg
push
les
orb
or
push
js
xor
mov
pop
jg
dec
in
mov
xor
adc
fstl
mov
sbb
iret
jp
sub
inc
dec
sub
fadds
cltd
imul
sub
test
cli
mov
scas
jle
push
cmp
mov
loope
iret
lret
pop
in
lods
les
and
stos
lods
dec
cli
cmp
cli
inc
hlt
icebp
jnp
add
iret
mov
cmpl
icebp
mov
mov
pop
shrb
sbb
or
lahf
ja
xor
sbb
int
inc
inc
jae
repz
push
ja
and
jno
jae
add
mov
fisubrl
cmp
fwait
scas
mov
xlat
jge
fists
clc
std
clc
or
popa
add
cmp
push
in
cwtl
sti
fldenv
add
out
orl
jno
push
sbb
fcomps
jno
lret
cwtl
adc
nop
xchg
pushf
nop
call
xor
cmp
mov
dec
aas
sbb
into
leave
mov
sbb
add
jae
popw
bextr
jl
mov
cwtl
test
sahf
fldl
scas
shl
mov
sbb
adc
add
push
rsqrtps
sub
clc
adc
lahf
ret
xor
lock
push
fs
jmp
lods
iret
fidivrs
enter
inc
jge
rclb
mov
sbb
mov
cmp
push
addr16
lret
add
popa
pop
test
jns
popa
scas
push
int3
dec
test
push
mov
cld
aad
in
insb
mov
stc
in
lcall
pop
cmp
sbb
sub
push
sbbb
out
push
sbb
loopne
xchg
pop
test
push
sahf
mov
scas
dec
andl
pusha
in
into
lock
xor
cmp
sahf
roll
dec
in
inc
xchg
jae
cwtl
sub
xchg
rorl
or
push
push
shll
and
daa
xor
jnp
lret
cmp
push
pop
inc
fldl
jp
push
xchg
cmpsb
cmpsb
and
dec
mov
stos
movsl
xchg
ret
adc
data16
jne
jae
shlb
cld
sbb
scas
jp
pop
scas
and
test
cs
out
push
jmp
add
or
rorb
pushf
sub
inc
int3
in
or
sub
mov
inc
fwait
mov
or
jne
inc
pop
pop
pushf
scas
push
inc
dec
loopne
aas
add
out
in
in
xchg
dec
out
mov
popa
mov
jg
xchg
test
mov
mov
adc
push
jge
addr16
push
movsl
sbb
popa
clc
xchg
jno
mov
clc
inc
mov
jmp
popf
add
mov
jmp
test
xor
xor
mov
movsl
rcrb
mov
leave
scas
shl
das
pop
pslld
into
push
in
jp
inc
fs
jecxz
sub
jmp
and
sbb
mov
mov
movsl
inc
sub
flds
mov
aam
outsb
outsb
cmpsl
mov
and
fwait
add
pop
popf
shrb
mov
ja
fwait
in
and
int
sbb
scas
popa
nop
inc
adc
pop
mov
fcmove
xor
xchg
xor
leave
shrb
in
xchg
xchg
loopne
enter
or
insl
mov
pushf
lock
inc
addr16
std
dec
pop
scas
mov
jo
pop
mov
mov
lret
xor
movb
adc
dec
fildll
jne
inc
jge
add
in
mov
call
mov
les
jmp
mov
pop
lcall
dec
xorb
jo
and
sub
sti
repnz
dec
rcll
inc
je
mov
cmp
movsb
pop
inc
mov
or
add
add
sub
mov
stos
call
sbbb
or
jns
shlb
fsubl
pusha
fwait
jle
push
movsl
mov
leave
inc
fnsave
fdivrs
pop
js
push
mov
shll
xchg
fwait
pusha
ds
pop
mov
mov
inc
inc
fidivl
sbb
sub
lret
adc
into
out
aaa
sbb
sbb
adc
xchg
sarb
push
mov
lcall
jg
adc
mov
xor
mov
xchg
add
int
jne
mov
xor
icebp
into
ret
cmc
es
push
das
jns
push
imul
sahf
arpl
test
push
cli
ds
pushf
adc
pushf
mov
xchg
inc
pop
decl
xchg
sahf
dec
adc
cltd
int
cs
mov
aad
inc
scas
imul
fld
out
or
insw
shlb
lds
js
mov
inc
adc
sbb
push
loopne
mov
adc
sub
enter
adc
aad
xor
push
addr16
scas
outsl
mov
push
dec
out
xlat
xor
nop
add
inc
sub
jmp
and
xchg
nop
fnsave
mov
xchg
mov
das
rcll
or
and
push
hlt
add
inc
sbb
leave
repz
cmpsl
jnp
jae
ja
jle
clc
and
cs
rolb
test
push
add
and
pop
daa
push
das
outsb
les
jb
stos
lds
mov
sub
push
mov
push
out
inc
xchg
jle
aas
in
fadd
lcall
loop
loop
fisttpll
daa
cmp
xchg
sub
dec
push
dec
scas
ja
stos
ljmp
jecxz
stc
fnstsw
in
cwtl
adc
dec
xor
push
mov
push
dec
mov
cmpsb
movsl
pop
xchg
movsl
roll
cmp
push
jp
test
sub
xor
pop
out
lods
popa
sahf
mov
inc
xor
cmp
cli
lock
add
stc
inc
loop
pop
push
shlb
sub
jo
add
nop
jmp
mov
lea
or
jo
stos
cli
dec
std
in
xor
repnz
jno
mov
adc
stos
hlt
push
mov
xor
xor
clc
cltd
sbb
mov
or
and
or
sarb
outsb
pop
cli
push
inc
push
cmp
sub
push
sbb
mov
dec
shl
mov
nop
addr16
pop
xchg
pop
test
lods
adc
inc
daa
xchg
or
jae
mov
dec
ds
out
lods
out
mov
sbb
sahf
or
nop
xchg
jmp
inc
inc
jmp
rcr
loopne
aad
mov
sub
pop
mov
xchg
push
xor
cli
xchg
xlat
xchg
or
push
cmpsb
int3
pop
mov
call
test
or
mov
orl
fs
faddl
inc
lods
xchg
or
sarb
xor
shl
dec
cmp
dec
int
or
arpl
out
jns
xor
jle
jmp
ds
gs
in
jmp
cmp
pop
imulb
xor
fidivl
jns
mulb
or
mov
or
mov
dec
clc
repnz
test
mov
or
mov
sbbb
fstps
xchg
rcr
nop
ret
jae
repz
push
inc
cmp
clc
cmp
test
popa
cli
int3
mov
mul
lods
pop
jne
xchg
mov
ljmp
sbb
repz
xorl
call
push
mov
jae
hlt
ja
dec
xchg
std
fsubrs
or
and
dec
adc
stc
push
mov
out
imul
adc
fcmovbe
aad
cmp
inc
rcll
outsl
ret
lods
cmpsb
fdivrl
in
mov
lahf
jae
inc
or
pop
divl
mov
xor
repz
aaa
je
xor
test
cs
sti
fcomps
mov
jno
sbb
jno
cmp
or
xchg
sub
jb
incb
dec
rorl
pop
push
stos
xchg
leave
fsub
pop
sub
jmp
jns
xor
push
dec
mov
lods
addr16
jl
mov
sbb
les
sahf
into
das
adc
xor
mov
movsb
clc
insl
mov
sub
inc
xor
lret
push
mov
push
mov
subl
stc
repz
fistl
popf
daa
test
mov
xchg
mov
popa
icebp
std
mov
mov
ljmp
mov
pushf
adc
jo
neg
movsb
and
cs
js
cmp
push
mov
and
scas
adc
mov
xchg
push
fsubr
loopne
gs
mov
mull
outsl
inc
lcall
fisttpl
call
lahf
and
push
aad
bound
and
dec
test
cmp
pop
add
inc
push
push
push
or
fimuls
leave
iret
popa
loope
mov
cmpsb
adc
int
test
mov
adc
xor
adc
adcl
push
addr16
ja
add
push
mov
pop
bound
iret
sbb
jp
int
loop
fisubl
inc
push
cs
jl
pop
sbbb
ds
dec
dec
push
push
dec
jno
and
fs
imul
ds
and
or
jecxz
fistl
shrd
xchg
int3
mov
and
ljmp
push
cmp
leave
fwait
aaa
out
sbb
cld
jbe
inc
pop
mov
lret
or
inc
insl
and
xor
pushf
pop
cmpl
push
add
inc
ds
fstl
jnp
inc
scas
repnz
cmp
jno
fmul
jge
outsb
and
into
mov
xor
jmp
test
lds
cltd
es
shrb
xchg
dec
push
adc
add
iret
xchg
jge
pop
int
test
in
les
fsubl
aas
fistps
mov
mov
or
pop
mov
xor
mov
mov
call
cmpsb
push
mov
mov
iret
loopne
add
xorl
sahf
add
loop
mov
dec
sbb
sti
xchg
dec
mov
mov
ficomps
mov
or
sub
push
jnp
shrb
mov
nop
scas
sti
out
ljmp
cmp
add
push
push
jecxz
aaa
arpl
das
inc
jmp
xor
xor
and
push
test
lods
dec
movsb
sub
out
mov
scas
xor
jecxz
cltd
rorl
mov
dec
movsb
mov
dec
mov
and
push
call
mov
sti
mov
adc
ret
dec
enter
inc
fldcw
je
loope
pop
es
stc
sub
out
nop
fisubrs
insb
adc
sub
push
xchg
add
lods
fs
ret
add
int3
xchg
cltd
dec
cld
sti
rolb
ret
xorb
mov
cmc
xor
lea
lret
pop
sub
int
xor
pop
jg
clc
in
in
jbe
lcall
and
mov
fcmovne
mov
popf
lock
jo
jp
out
pop
insb
mov
cmpb
icebp
push
mov
nop
jecxz
jne
and
and
jmp
das
mov
into
mov
rcrb
xchg
int
pop
lret
jne
mov
ja
add
xchg
pop
push
ja
lcall
mov
stc
cmp
das
mov
push
add
sub
mov
and
xchg
add
iret
cmpsl
adc
and
jae
jecxz
inc
pop
cmp
adc
xchg
pop
popf
insb
mov
jg
adc
into
or
dec
lahf
in
mov
pop
pushf
pop
mov
test
mov
or
faddl
jge
sbb
mov
stos
js
shr
mov
lods
adc
xor
in
fsts
frstor
filds
dec
sbb
lock
fwait
loopne
enter
push
imul
push
rolb
inc
gs
mov
push
ret
dec
mov
imul
mov
cmpb
inc
jmp
lods
sub
sarb
sbb
and
push
leave
pop
or
push
xchg
push
add
stc
and
shr
imul
dec
xor
jne
mov
xchg
push
mov
mov
and
push
mov
or
mov
sbb
sbb
imulb
xchg
aad
xchg
std
pop
and
fmul
fidivrl
fidivrl
xchg
inc
into
arpl
jns
dec
pop
lret
and
pop
cmpsb
popa
inc
dec
jbe
mov
jecxz
fildl
movb
loop
push
cld
int
add
sub
into
xchg
fwait
daa
dec
xchg
adc
or
clc
shll
ret
daa
in
in
lcall
js
repz
jne
in
jmp
lahf
jae
mov
rolb
jo
es
cwtl
stos
aaa
sti
scas
push
inc
sbb
enter
scas
std
push
sbbb
aad
popa
ficoml
pop
push
push
ret
dec
pushf
sub
pop
lods
int3
sbb
xchg
inc
scas
or
adc
xlat
and
mov
mov
imul
aaa
js
sub
xor
repz
jns
iret
xor
xchg
jo
les
inc
dec
xlat
pop
sar
iret
cmp
add
push
scas
loopne
xchg
xchg
dec
pop
fwait
lret
insl
lcall
and
adc
shlb
test
mov
mov
lret
shlb
call
sbb
xchg
inc
into
scas
fisubrl
pop
je
adc
jns
sub
pop
stc
sbb
pop
js
lret
jmp
jnp
lods
push
dec
jnp
les
cld
aas
xchg
xor
das
in
pop
adc
lods
or
iret
push
aad
xor
push
in
and
shlb
mov
rorl
mov
push
fsubrs
dec
mov
jae
add
fdivl
mov
inc
mov
sbb
popf
sub
cltd
popa
xor
ljmp
scas
stos
push
imul
scas
mull
fisttps
mov
sub
adc
push
lods
test
mov
mov
mov
dec
and
dec
mov
jl
inc
out
dec
mov
mov
push
mov
iret
cmp
mov
sbbb
mov
cmp
aaa
mov
outsl
dec
mov
cmpl
test
sbb
mov
out
mov
loopne
shll
in
fstpl
or
std
push
pop
rep
je
pop
push
pop
xor
ss
test
jnp
aaa
and
mov
jns
xchg
mov
popf
sub
sub
divps
stos
cmpsb
cmp
ds
xchg
int
mov
xor
out
jl
jbe
call
notb
or
pop
cmp
loop
cwtl
cli
jb
test
pop
pushf
aaa
mul
inc
stos
mov
lds
sbb
add
repz
mov
dec
cli
dec
mov
loopne
add
fnstsw
js
xchg
fiadds
mov
popf
popf
pop
js
dec
lds
or
test
test
mov
push
lea
push
call
jns
scas
jne
inc
cmp
cli
stos
sarl
idivl
sub
push
in
sbb
add
addl
and
jne
jmp
mov
add
sti
in
lds
cmpsl
fwait
and
pop
adc
in
ljmp
mov
test
mov
adc
fwait
pop
sar
icebp
adc
out
xchg
xchg
xorb
shll
pop
add
call
icebp
mov
pop
sub
subb
imul
mov
repz
mov
inc
add
cmp
xchg
xchg
add
mov
xchg
movsb
xor
jge
add
xchg
popf
cmp
jno
fnstsw
cmp
lret
rcll
cmp
fistpl
pop
pop
mov
cltd
shlb
jns
pushf
xor
iret
pushf
add
add
push
xchg
mov
pop
sub
ss
inc
movsb
outsl
rolb
mov
mov
scas
dec
test
xchg
loope
inc
mov
pop
cltd
fisttpl
and
inc
outsb
cmc
mov
fwait
mov
and
pop
jbe
mov
or
mulb
and
xor
add
dec
inc
jge
adc
sbb
insb
loop
stc
hlt
out
shl
or
cmp
adc
call
sbb
shrb
dec
std
push
imul
inc
mov
jp
pop
sub
outsl
jne
lock
inc
stc
mov
in
pop
mov
push
or
cmp
and
xchg
sarl
icebp
fstpl
inc
lock
pop
aad
or
mov
mov
dec
lods
and
pop
pushl
movsl
dec
lret
addb
inc
and
dec
out
mov
dec
js
repnz
pushf
and
dec
stc
xchg
stc
xchg
mov
clc
data16
xor
stos
push
stc
mov
jbe
in
data16
popa
popf
fldcw
insl
mov
mov
pop
loop
rol
xchg
xor
cld
cmp
pusha
lock
cmp
jae
inc
jnp
mov
clc
adc
in
mov
dec
fsubrl
xchg
stc
dec
daa
enter
shll
scas
add
mov
in
ja
ds
or
push
aas
in
lret
and
adc
lahf
xchg
inc
mov
push
xchg
jge
xchg
jmp
mov
in
movsl
push
aad
das
mov
lcall
push
pop
jne
lret
adc
dec
std
subl
adc
cmp
je
test
je
out
xor
stos
mov
pop
dec
addl
js
inc
mov
sahf
mov
add
jle
scas
inc
das
xchg
dec
pop
adc
daa
xor
clc
jecxz
gs
or
adc
shlb
test
and
outsl
sub
incl
lds
sub
ror
popf
cmc
xchg
ret
push
lock
rcll
cld
movsl
test
push
repnz
inc
cltd
jae
sub
add
sbb
pslld
jns
test
mov
xchg
out
popf
outsb
idiv
mov
js
push
mov
push
cmp
aaa
inc
daa
push
sbb
lcall
jae
jae
lret
in
addr16
xchg
xchg
sbb
mov
jle
mov
mov
data16
mov
cs
xchg
aaa
cmpsl
mul
push
inc
fstpt
push
cltd
mov
movsb
push
sahf
idiv
push
es
jmp
mov
inc
inc
dec
mov
mov
lret
and
add
push
and
xchg
rorl
xorl
add
hlt
scas
sbb
inc
shl
loope
pop
push
out
data16
js
sbb
ss
xchg
shll
lds
and
fldl
lret
jg
movsb
or
andl
xchg
test
lret
mov
in
lods
sbb
int3
cmp
sub
sbbb
cli
sbb
imulb
cmp
in
sbb
xchg
test
push
push
add
js
push
or
mov
out
sbb
gs
call
out
ret
push
ds
lret
mov
gs
pop
sbb
pop
sbb
pop
cmp
mov
pusha
jns
and
mov
jo
add
out
in
bound
iret
inc
cli
dec
int
xor
inc
mov
or
xlat
cmc
test
xlat
jg
bound
test
cld
jge
ret
fsub
inc
mov
int3
repnz
ja
js
push
mov
aas
inc
mov
xchg
dec
in
pop
cmpsb
insb
sbb
and
dec
ds
jg
xor
fisttps
dec
aad
dec
cmp
pop
imul
jmp
into
scas
pop
mov
or
pop
fildll
mov
pop
inc
lock
fsts
jmp
imul
dec
inc
dec
mov
imull
aas
lea
ja
fwait
dec
adc
test
sub
dec
mov
das
cmp
xchg
inc
call
push
jbe
adc
ret
pop
pop
pop
bound
jmp
jb
lcall
fisubrs
aaa
xchg
sub
sub
lret
mov
sub
push
and
movsb
jp
lret
jg
sbb
inc
jp
mov
push
fwait
xchg
pop
std
add
imul
inc
mov
loopne
call
aas
andl
jg
and
cmp
das
movsl
sub
loop
out
pop
add
mov
mov
bound
jp
pop
icebp
ds
mov
nop
dec
into
adc
adc
loope
int
pop
dec
dec
mov
mov
jb
into
push
int
pop
sbb
daa
xor
mov
ljmp
cwtl
sahf
mov
cmpsl
inc
mov
inc
sbb
rcl
sub
lret
push
push
mov
iret
adc
repnz
mov
xchg
push
or
push
jecxz
jo
cmc
cmpsl
lock
stos
fdivrl
push
stc
dec
and
mov
in
shlb
jg
jne
mov
aam
cmp
fidivs
lds
inc
sub
jecxz
fsubrl
dec
nop
lods
mov
test
mov
jno
mov
or
mov
xchg
je
xchg
xor
add
push
adc
test
add
call
inc
push
cltd
outsb
mov
xor
add
mov
testb
jl
in
outsb
mov
mov
mov
aaa
jmp
pop
in
pop
int3
test
out
push
push
cmp
jb
popa
lock
push
ljmp
sub
push
fs
inc
adc
fists
out
das
sub
add
mov
mov
pop
dec
sbb
rcrl
lods
sbb
lock
aam
pop
imul
push
hlt
lret
sub
outsb
push
outsb
les
sahf
cmp
ss
cwtl
xor
push
cmp
stos
sub
sub
jmp
cmpsb
mov
inc
imul
jl
dec
cmp
sbb
pop
cmp
mov
adc
in
or
push
js
inc
and
aaa
xor
push
push
clc
dec
inc
pop
add
bound
cmpsl
cmp
test
pop
stos
shll
inc
sti
sahf
loop
lds
mov
push
outsl
dec
call
aad
sub
sarb
sahf
adc
loope
in
jl
push
mov
mov
push
mov
mov
or
inc
push
xchg
mov
loop
mov
push
popa
pop
test
rcrb
pusha
mov
nop
pop
scas
repz
call
mov
jns
jecxz
pop
sti
mov
mov
mov
int
rolb
rorl
xor
or
dec
iret
aaa
popa
inc
pop
and
push
push
cmpsl
mov
les
cmp
or
push
or
adc
dec
pop
mov
fdivrs
jecxz
in
add
sti
inc
mov
lods
push
cltd
das
test
sbb
jp
scas
xlat
inc
sbb
pop
add
iret
and
push
stos
lods
test
jno
fucomip
pop
lret
jmp
movsl
gs
rcr
fsubrp
pusha
cltd
les
push
mov
inc
jb
stos
lock
push
jg
out
mov
pushf
and
fiaddl
add
dec
and
data16
arpl
dec
add
sahf
xor
pop
jbe
inc
pop
insb
arpl
sbb
icebp
mov
test
and
lods
xchg
daa
push
negl
pop
shll
jmp
adc
fidivrs
pop
add
aaa
cmpsb
movsl
mov
addr16
decl
dec
push
jne
stos
mov
mov
loopne
xor
test
mov
xchg
in
loop
sbb
lds
movsb
or
push
dec
aad
inc
int
push
xlat
leave
pop
sub
int
jl
xor
add
jp
sbb
dec
sbb
xor
stc
mov
add
je
pop
mov
ret
and
xor
outsb
adc
jmp
xor
imul
push
addr16
mov
mov
mov
sbb
idivb
daa
mov
pop
lcall
mov
pop
mov
ficoml
fs
test
pusha
imul
scas
and
or
pop
jnp
loopne
rclb
icebp
inc
mov
dec
lds
faddl
fstpl
sti
nop
mov
mov
adc
jns
jno
leave
jae
sub
cmpl
cmp
js
repnz
fwait
enter
out
inc
dec
cli
push
movsl
das
cmpsl
mov
push
mov
mov
adc
adc
sahf
pop
and
bound
out
pop
es
push
push
dec
js
and
and
ficoms
jbe
lret
mov
ja
add
inc
push
out
xchg
movsb
repnz
sarb
pop
ds
fdivs
cmp
add
or
mov
adc
xor
jbe
xchg
orl
add
daa
in
scas
fcom
ficomps
add
icebp
mov
divb
out
dec
rolb
push
mov
popf
popa
cmp
mov
dec
shr
xchg
lods
stc
scas
and
std
stos
xor
adc
mov
mov
es
push
subl
jns
fucomi
xor
pop
hlt
mov
cld
test
lods
and
or
andb
call
add
in
pop
adcb
movsl
sbb
xchg
pusha
jmp
cmp
leave
lcall
outsl
test
cmp
jbe
cmpl
dec
mov
imull
aad
imul
fsubrs
mov
xor
adc
add
xor
jle
xchg
jnp
sbbb
in
mov
or
or
gs
sub
cmc
sbb
inc
inc
shrb
sub
xor
outsl
inc
push
xchg
inc
xchg
inc
in
movsl
or
sub
fs
mov
cmc
ss
mov
cs
cmp
cmpsb
pop
and
outsl
mov
leave
imul
inc
enter
push
add
xchg
cli
fdiv
imul
stos
test
jno
ds
les
and
rol
jge
push
pop
hlt
adc
out
in
cmpsl
insb
jno
add
js
jae
xchg
lea
lret
jl
movsl
fists
or
xchg
push
push
imul
adc
in
mov
outsb
jnp
enter
out
push
mov
or
gs
fwait
aaa
mov
sub
cmp
mov
pop
mov
dec
ds
stc
pushl
jle
pop
movsb
lcall
xor
sbb
adc
jp
mov
xchg
cwtl
leave
inc
add
push
push
xor
sbbl
push
stos
xor
push
cmpsl
out
cmpsl
lods
std
sti
cs
sbb
loope
icebp
adc
rcl
mov
or
xor
lods
fucomp
jge
nop
cs
jp
lods
ljmp
fcomps
out
inc
nop
pop
sarl
xchg
jle
movl
jl
divb
addr16
popa
test
aas
add
xor
xchg
cli
mov
mov
mov
push
ret
sbb
std
xchg
mov
inc
test
cmp
stos
mov
sarl
test
add
push
push
xchg
iret
push
pextrw
dec
lret
push
cmpsl
and
dec
cmp
inc
cmp
jnp
mov
ds
aad
orb
bnd
pushf
xor
test
aam
push
testl
out
or
div
les
aad
add
cs
cmpsb
ret
or
shrl
or
sti
xchg
inc
bnd
pop
xchg
pusha
cmpsl
adc
pop
pop
pushf
imul
xlat
outsl
xchg
loope
mov
mov
lcall
pop
mov
lret
dec
fs
movnti
xor
stos
add
fnstsw
jne
mov
jbe
jle
add
loope
dec
sub
and
push
dec
inc
cwtl
mov
mov
sub
lret
insb
sub
popf
sti
push
inc
mov
ret
insl
xchg
push
sub
jns
adcl
and
test
pop
rol
fcom
add
mov
and
rol
xlat
pop
push
aaa
shlb
pop
push
jmp
notl
xor
push
dec
cs
inc
ja
dec
test
jae
stos
or
jbe
pop
out
push
push
std
or
mov
scas
fstpl
dec
inc
and
test
pop
lock
ret
mov
pop
and
inc
and
sbb
out
jne
inc
andb
fs
movsb
cli
add
mov
aaa
or
jle
out
pop
jb
std
mov
add
lret
xchg
cmpsl
clc
imul
jg
or
sarl
movsl
stc
pop
je
lods
xchg
pop
mov
push
jl
in
hlt
cmc
addr16
mov
fnstsw
arpl
push
and
ret
sti
arpl
scas
jns
pop
push
push
in
out
sub
mov
lds
and
dec
fnstsw
inc
aad
jns
outsl
dec
insb
cmp
icebp
pushf
leave
sub
call
jp
dec
cld
cmpsb
adc
out
xorl
xchg
xchg
pop
lds
stos
push
mov
popf
outsl
fsubrs
xor
cmp
mov
sbb
xor
pusha
ja
cmp
mov
in
lods
scas
lret
pop
stc
dec
mov
outsl
mov
aas
jle
scas
and
or
dec
mov
ss
out
dec
xorb
inc
cmpsl
mov
daa
sub
stc
push
fs
push
jecxz
push
stc
add
jne
mov
and
les
in
sbb
pop
inc
sub
mov
cmp
test
cltd
xlat
je
cmp
jnp
xchg
lods
pop
outsl
insl
push
pop
pop
adc
lds
pop
imul
gs
scas
dec
mov
les
cmpb
sbb
mov
aam
icebp
mov
insl
mov
mov
push
cmp
iret
imul
test
out
push
loop
dec
pop
ss
fs
cli
mov
outsb
push
mov
inc
outsb
ffreep
xchg
mov
adc
sub
cmp
scas
add
js
les
cmp
mov
fisubl
and
push
pop
pop
xor
cli
inc
xchg
arpl
cmp
test
repnz
out
faddl
xchg
sub
push
lret
testl
xor
add
shrb
repnz
imul
insb
out
adc
add
jmp
lods
xchg
stc
cmc
cwtl
in
xchg
fimuls
aaa
add
xor
aad
push
scas
pop
dec
and
or
add
mov
pop
mov
xor
das
cli
xchg
js
adc
ret
hlt
inc
inc
repnz
repz
xchg
adc
ljmp
popf
add
loope
mov
adc
in
fsts
cmp
movsb
cld
lret
mov
xchg
std
jo
mov
push
scas
cmp
inc
mov
add
ja
push
lds
jecxz
lahf
fdivr
out
mov
arpl
int3
adc
test
fwait
jb
mov
in
push
inc
inc
xchg
scas
out
scas
imul
pop
and
push
cwtl
add
jg
lods
rorl
inc
enter
out
mov
dec
dec
fsub
cs
dec
rorl
hlt
mov
fmulp
adc
sbb
ror
or
fnstenv
jb
xchg
addl
dec
cmpsb
sub
mull
jge
nop
mov
aas
loopne
pop
test
add
fidivs
cmp
ja
cmp
nop
xor
jne
dec
pusha
movsb
out
cli
sub
jecxz
mov
in
xchg
sub
mov
loop
andb
xor
mov
jb
ficoms
adc
mov
push
aad
or
jge
scas
ret
jg
inc
lahf
orb
jbe
or
sbb
mov
sub
or
xchg
dec
clc
sbb
add
cs
push
sbbl
fisttpl
js
lahf
pop
sub
mov
xlat
and
pop
mov
jmp
enter
mov
lds
enter
mov
jl
shlb
adc
xor
data16
dec
pushf
call
or
jns
jl
shll
mov
shlb
bnd
add
cld
inc
outsl
xchg
mov
jno
cmc
jecxz
repz
adc
sub
sub
jecxz
cmpsl
mov
cmc
jno
das
mov
jno
add
sub
xchg
push
mov
push
sbb
or
sub
in
pop
and
testb
std
pop
add
fcomps
mov
popa
ss
ret
xor
pusha
and
rclb
hlt
xor
pop
add
mov
xchg
pop
mov
pop
push
sahf
mov
call
add
xlat
add
inc
int
jne
out
mov
ljmp
add
sub
mov
pushf
data16
inc
in
push
mov
push
in
mov
push
repz
popa
pop
inc
xor
cmp
fisttpl
inc
sahf
sub
mov
popf
testb
pushf
lahf
cwtl
aaa
repnz
adc
out
in
fiaddl
cwtl
rcr
sbb
and
push
sti
xchg
mov
jle
cli
scas
xor
dec
and
push
mov
ds
inc
inc
pop
lcall
cmp
or
mov
jmp
jns
enter
add
mov
fimuls
jb
fidivs
imul
inc
fisubrl
jle
ffree
add
cld
sahf
dec
les
dec
push
lock
mov
ret
test
jge
or
idivb
pop
fimuls
jp
jae
jp
jne
adc
add
and
pushf
sub
adcl
mov
inc
xchg
sti
xor
imul
loope
jge
dec
std
jae
test
sub
notb
and
inc
mov
aaa
out
sbb
aad
xor
test
mov
dec
dec
sar
lcall
fs
rol
lock
pop
xchg
dec
sbb
pop
loope
pop
ret
std
cmpsb
xor
cmp
sar
and
inc
fstpt
jge
jp
movsb
inc
push
arpl
out
jnp
fbstp
inc
arpl
mov
mov
push
cmc
outsl
nop
out
test
xchg
push
loope
xchg
jl
push
sbb
out
icebp
sub
rcll
rcr
sub
rclb
movsl
fcmovnbe
ficompl
add
leave
and
sub
mov
sub
push
ss
mov
ror
lods
mov
xor
outsl
es
inc
sub
mov
or
jno
js
sub
push
push
sbb
icebp
mov
sti
je
addr16
int3
movsb
mov
lret
lret
pop
rorb
stos
xor
roll
sub
shll
jmp
aad
mov
rcrb
pop
std
dec
inc
into
pop
test
pop
and
push
xor
mov
repnz
pop
xor
mov
fs
js
add
and
fst
inc
fcmovnb
jae
std
or
add
test
dec
test
jle
sbb
ds
pop
jbe
repz
push
mov
insl
lock
cwtl
into
shr
jge
pop
call
mov
sub
and
rcrb
sbb
jmp
mov
pop
movsl
cmp
adc
inc
jl
pop
shlb
mov
jno
dec
stc
ret
sbb
add
fstpt
add
ret
mov
popf
mov
int
push
js
add
scas
push
test
inc
roll
pop
sti
sti
push
psubsw
sbb
mov
dec
cmp
adc
or
sub
dec
out
testl
xchg
mov
mov
mov
sub
xchg
jbe
testb
xor
add
mov
adc
adcl
mov
ret
stc
adc
push
sti
cmp
test
hlt
mov
outsb
jbe
xchg
adc
mov
ret
add
inc
inc
dec
insl
cmpsb
mov
mov
sbb
loopne
pop
std
bswap
inc
push
dec
and
cmp
or
xor
fnsave
cmp
and
mov
out
cmp
lahf
inc
movsb
mov
cmc
mov
stos
jp
out
jb
xor
xacquire
loop
icebp
xor
jp
cs
inc
fldenv
ljmp
sub
inc
mov
lock
fs
xchg
xchg
add
les
sahf
mov
jle
dec
mov
xlat
aam
or
imul
push
je
bound
xor
mov
stos
ja
insb
repz
in
inc
mov
stos
lcall
pop
repz
mov
dec
scas
js
xchg
push
or
jle
loope
pop
out
push
hlt
and
addr16
aas
mov
push
add
add
rcll
stos
lahf
push
imul
loope
in
pop
push
mov
lock
mov
xor
addl
xchg
ret
shll
pop
cmp
cmp
adc
outsl
test
call
aas
sti
or
lcall
je
mov
xchg
add
aam
out
add
dec
lahf
mov
test
clc
aas
outsl
mov
outsl
decb
add
repz
test
insb
xor
stos
inc
lret
stos
scas
and
out
cmc
icebp
lods
sub
jge
fiadds
adc
adc
mov
loope
fisttps
lret
lds
mov
push
rcr
lcall
mov
fidivrl
xor
js
jnp
pop
cli
mov
mov
addr16
movb
jp
lret
dec
fs
mov
adc
in
dec
xchg
mov
test
gs
lcall
mov
faddl
dec
sub
or
rcll
out
int
lods
out
push
shrl
hlt
mov
call
enter
outsb
pop
inc
mov
stc
cmp
jmp
mov
scas
int3
iret
imul
sbb
jae
pop
stos
sub
cld
mov
fsubrl
out
add
out
test
sahf
aam
lea
xor
outsb
mov
dec
call
and
shll
jb
adc
fadd
js
dec
gs
repz
or
sub
out
pusha
loop
mov
adc
sub
bswap
into
mov
sub
pop
nop
inc
scas
inc
mov
jnp
push
stc
imul
out
cmp
aad
xor
mov
cmp
bound
test
mov
dec
nop
insb
push
jbe
arpl
mov
xchg
fdivl
cmp
adc
pop
xchg
and
inc
adc
fidivs
push
jg
ret
pop
test
push
xchg
xchg
imul
leave
aaa
adc
in
roll
mov
pop
je
repz
jo
cwtl
shl
and
mov
int
inc
cmp
xchg
pop
shll
jno
sahf
aam
add
sbb
or
fisubl
sbb
pop
pushf
out
mov
inc
sbb
popf
ljmp
jp
inc
sbb
addr16
add
xor
dec
pop
cmpsl
mov
loope
dec
pop
push
out
in
aad
push
nop
mov
or
push
dec
jno
std
adc
test
int3
jno
jp
xor
inc
xor
js
and
je
lahf
push
pusha
push
jne
test
sarl
mov
push
adc
push
xor
je
cmp
inc
stc
rclb
xchg
xor
push
dec
hlt
ficompl
dec
repz
xchg
into
scas
dec
pop
mov
es
cmc
test
scas
mov
call
dec
fldenv
ss
out
pop
mov
cltd
movsb
and
mov
or
shll
xorl
insb
icebp
je
pop
stos
pusha
sahf
loopne
pop
pop
ret
ljmp
lods
out
pop
daa
int3
cmc
lds
call
into
pusha
adc
out
push
adc
cmp
movsb
daa
stos
dec
fstl
pop
std
xor
xlat
rol
add
fnsave
jno
test
adc
je
cmc
andb
sbb
cmp
cmp
out
jbe
xor
lock
mov
stos
add
mov
push
push
push
aas
xor
call
jmp
addr16
mov
enter
pop
fcompl
jp
push
fisttps
cltd
cmp
shr
push
adc
pop
lds
xor
es
xlat
pop
jnp
jmp
icebp
jae
jns
jecxz
inc
mov
aad
dec
cmp
mov
in
popf
sbb
push
and
sbb
cmpsl
test
add
sub
xor
lret
xchg
test
mov
into
aaa
or
sub
stc
mov
pop
and
mov
adc
repnz
xor
dec
bound
adc
sbb
pop
jl
mov
pop
push
jo
cli
je
sahf
inc
cmp
jo
push
xchg
pop
jns
sarl
dec
lods
ret
xchg
jecxz
push
jnp
inc
mov
cmc
outsb
mov
adc
push
xor
dec
cmp
pop
lcall
and
gs
jecxz
add
mov
fstl
push
mov
jnp
pushf
cmpsb
push
mov
aaa
dec
fs
add
cwtl
cld
aas
pop
popa
sub
mov
aaa
mov
adc
aad
mov
push
and
daa
jne
xchg
sbb
and
xor
sbb
xor
xchg
pushf
xchg
mov
inc
pusha
pop
push
add
or
popf
lahf
les
in
ror
and
cmp
push
lds
pop
adc
popf
xchg
imul
aam
add
pop
cwtl
or
cwtl
or
and
int3
test
adc
dec
xor
js
add
sub
test
frstor
mov
sbb
push
jns
ljmp
stos
and
clc
jbe
mov
shlb
clc
add
inc
enter
and
insl
int3
and
push
mov
sub
mov
pop
rcrl
jno
les
xchg
dec
repnz
adc
setbe
sbb
loope
pop
adc
fs
ja
mov
ljmp
jmp
pop
ljmp
out
dec
mov
push
lods
rcr
fcoml
sbb
cli
rcrb
cmpb
in
das
popf
xchg
lea
scas
adc
outsb
movsb
xchg
out
jae
test
test
push
mov
subl
adc
jg
xor
jmp
call
cmp
jg
ss
sbb
sub
iret
xor
xchg
dec
nop
fildll
loopne
mov
dec
push
in
jmp
fdivr
pusha
lcall
std
daa
lock
and
mov
pop
sbb
inc
adc
clc
xchg
add
jo
fisttpl
push
sbb
int
fldl
rclb
jbe
push
ljmp
dec
js
lret
sub
sbb
pop
mul
and
jno
jne
pushf
arpl
bound
pop
lahf
imul
and
sub
add
notl
jno
cmp
mov
pop
jle
mov
fsubrs
mov
inc
pop
cs
fdivrs
jle
push
xchg
arpl
rcll
adc
imul
gs
sub
sarl
dec
lret
sbb
xor
mov
outsb
ret
insb
jl
loopne
pop
test
sbb
fdiv
inc
mov
ror
or
or
mov
dec
insl
cli
inc
jmp
loop
push
mov
movsl
jmp
lea
push
std
notl
xchg
cmpl
and
aas
jmp
dec
sub
mov
icebp
sbb
dec
jp
addr16
sub
pop
mov
lahf
js
or
mov
fisttpll
stos
pop
mov
mov
mov
xor
js
fnstcw
xor
loopne
xor
lods
cmp
jae
push
loop
movsb
xchg
jae
cs
pop
dec
aad
pop
or
stc
mov
sub
mov
enter
add
mov
roll
nop
es
pop
or
jmp
push
jmp
fmul
jo
mov
dec
idivb
mov
into
adc
dec
dec
insl
test
or
mov
push
xchg
cmp
int
add
pushf
mov
mov
cmp
xor
fstpt
mov
inc
shr
mov
jno
test
outsb
addr16
nop
sarl
out
push
fcmovbe
xchg
fsubrl
jmp
inc
mov
adc
adc
cmp
inc
adcb
mov
xlat
cmp
cmc
push
mov
in
aaa
mov
add
in
inc
and
mov
pushf
fistps
sbbl
mov
xchg
jae
ja
jbe
imul
cmp
xchg
call
xor
ss
popa
shrl
popa
loopne
mov
push
or
mov
test
inc
ds
and
pop
push
xchg
in
and
pop
xorb
adc
push
dec
sub
call
in
dec
loopne
inc
test
and
aas
idivb
in
lcall
jle
pop
icebp
or
scas
xchg
inc
sbb
subl
pushf
jecxz
push
mov
jbe
or
out
int
stos
xchg
sbb
jecxz
sub
int
aad
stc
dec
mov
dec
in
cmp
test
fdivrl
sbb
dec
jno
mov
imul
sub
pop
mov
inc
bound
out
dec
scas
mov
arpl
cli
daa
in
push
pop
cmc
nop
push
push
dec
rcr
jp
sahf
add
popa
popf
rcr
xlat
push
mov
cmpsl
or
popf
sbb
mov
mov
xchg
and
call
ret
repz
pop
cli
aaa
mov
jge
incl
in
mov
das
popf
out
add
rcl
fwait
mov
js
sub
xchg
mov
mov
pop
xor
xor
mov
push
mov
sub
ror
xor
test
mov
fisubs
loopne
mov
push
pop
fimuls
pop
shll
mov
mov
in
sbb
subl
test
scas
frndint
mov
stos
mov
insl
popf
sbb
cmp
dec
jecxz
test
jp
adc
jp
test
jge
nop
mov
xchg
lret
xchg
ret
lret
arpl
jecxz
adc
mov
in
fidivl
inc
in
and
lods
inc
sub
pop
shrb
cmp
test
fidivl
leave
push
mov
or
inc
or
pop
sahf
push
lcall
fprem
ja
in
add
sbb
push
sbb
and
pop
arpl
subb
popa
xchg
loop
inc
sbb
scas
xchg
out
mov
into
mov
ss
push
and
fcoms
fcompl
inc
xor
push
or
mov
mov
sbb
mov
mov
loopne
gs
testl
rcl
jmp
jb
test
mov
jne
fdivl
int3
aad
mov
jp
adc
cwtl
mov
dec
scas
pop
xchg
mov
scas
dec
stc
jae
scas
mov
and
test
or
add
test
cs
cld
inc
rorb
cltd
jae
sub
jmp
movsw
sbb
addl
mov
jmp
bnd
pusha
jmp
bound
and
mov
cltd
pushw
gs
mov
cmp
fs
push
clc
je
ss
cmpsb
mov
mov
pop
out
sbb
test
mov
in
paddq
adc
xlat
push
mov
inc
mov
push
inc
pop
sbbb
and
jl
xchg
or
out
shlb
mov
popf
pushf
adc
sbb
in
inc
dec
outsl
mov
shl
lret
aam
pop
fbstp
push
sbb
test
or
cmpsl
sbb
inc
and
adc
mov
pop
pop
enter
les
lret
or
imul
sbb
and
ror
add
jno
nop
ljmp
and
cwtl
sbb
pop
xlat
sarb
xchg
pop
sub
jb
xchg
in
hlt
cs
and
jbe
cmpsb
lret
out
sub
xchg
mov
rcrb
mov
cmp
cmp
cld
fnstenv
push
shrb
mov
sub
dec
and
sub
mov
pop
jne
dec
mov
mov
test
dec
push
xchg
adc
imulb
call
mov
in
xchg
filds
dec
dec
in
or
sbb
aam
in
ja
cmc
les
in
mov
cld
xchg
dec
pop
ja
lds
xlat
xchg
mov
adc
adc
push
mov
jae
test
in
subl
mov
andb
sti
loopne
pop
addr16
das
int
lods
arpl
cmc
xchg
loopne
push
cmp
cmp
mov
dec
mov
mov
aad
lret
std
ss
or
imul
pushf
or
mov
xor
mov
adc
pop
adc
rolb
adc
mov
aas
cmp
pop
xlat
add
fcmovbe
sbb
jmp
xorb
sbb
cli
xlat
orl
adc
pop
fs
or
and
ret
cmp
and
pop
cmpl
xchg
jmp
aam
and
sarl
dec
loope
fwait
arpl
mov
in
xorl
aaa
loop
fiadds
mov
push
xchg
dec
sub
xchg
cmp
repz
pop
inc
cs
lahf
stos
sbb
xor
pop
aas
mull
stos
arpl
xchg
mov
jo
inc
or
and
shlb
imul
repnz
inc
inc
cld
inc
jno
shlb
test
les
mov
dec
fidivrs
shrl
xchg
iret
sbb
add
outsb
rolb
dec
fsubrl
insl
aad
mov
ret
mov
pop
or
adc
sarb
orl
aas
out
lds
dec
pushf
outsl
xor
mov
mov
aas
or
cmp
aas
shl
out
xchg
aas
das
out
clc
clc
icebp
pop
out
subb
dec
sub
push
test
aam
imul
sub
std
insb
data16
dec
sbb
js
mov
rcrb
scas
or
add
mov
les
xchg
pop
xchg
aad
ljmp
dec
repz
mov
push
xchg
in
addr16
mov
mov
js
xor
mov
xchg
lret
int3
push
add
popf
shrb
fcoml
adc
inc
dec
sub
stc
testb
mov
pop
xchg
lock
jmp
dec
inc
push
mov
inc
sti
cmp
push
test
je
rclb
adc
sub
adc
inc
cmpsl
pop
push
push
outsb
std
or
rep
in
or
cmp
xor
loop
xlat
dec
gs
push
nop
add
sbb
mov
ds
nop
jp
push
fisubrl
or
stc
sub
dec
pop
pushf
mov
cltd
icebp
dec
xchg
pop
push
mov
dec
fwait
test
inc
nop
and
ret
jb
fsubs
inc
xor
fnstsw
add
mov
gs
fisttpll
adcb
in
shlb
ljmp
iret
mov
aam
dec
cmpsb
cld
pop
ret
scas
test
jae
sbb
lret
ds
and
jmp
enter
cs
cmp
es
jmp
dec
push
mov
fcomps
popa
outsb
sub
cmc
pop
jno
jecxz
sub
sub
js
xor
filds
outsb
jns
stc
loopne
in
adc
ret
fxch
push
push
jns
xor
jg
mov
mov
push
mov
in
gs
xchg
out
mov
mov
jae
pop
jns
mov
ror
inc
jb
icebp
dec
adc
pop
mov
pop
hlt
dec
inc
jo
pop
add
inc
imul
pop
and
arpl
aad
jo
push
ljmp
jb
cltd
jns
mov
push
in
cmp
stos
fisubrs
cli
shll
mov
and
test
pop
push
nop
cmpsl
cmp
mov
or
inc
mov
bound
testb
mov
pusha
pop
movsb
push
in
inc
push
mov
jl
les
nop
adc
jg
sub
ds
add
popa
scas
imul
movl
push
ds
mov
out
add
push
ja
repz
aaa
cld
jecxz
pop
iret
fbstp
xor
loope
mov
jp
stc
push
or
std
in
pop
leave
nop
bound
nop
jb
ss
cli
test
mov
inc
mov
insb
outsl
shr
les
adc
adc
fwait
sti
or
fwait
sbb
jge
push
faddl
sub
cmp
inc
adc
xchg
jmp
lret
ja
fdiv
clc
andb
sbb
add
cmp
jne
push
sbb
lret
mov
mov
adc
clc
mov
in
in
movntps
or
xor
xor
adc
push
push
neg
stc
mov
push
and
repnz
and
or
adc
shlb
fisubl
mov
push
xor
scas
fidivrs
inc
sbb
jns
fisubs
in
adc
popa
mov
pop
cmp
cmp
outsb
popa
push
push
mov
fwait
in
out
mov
fwait
or
sti
xchg
push
cmp
pop
in
fnsave
mov
shlb
mov
pop
push
dec
mov
loope
xor
pop
int3
inc
cld
out
cmp
loop
push
xor
sbb
imul
mov
mov
xorl
lret
cltd
jp
test
pop
sub
adc
mov
pop
mov
sub
xor
push
add
scas
int
cmp
adc
push
and
ss
fiadds
jne
fnstsw
dec
add
ljmp
sub
mov
int3
jmp
je
pusha
inc
xchg
push
push
addr16
lret
out
pop
xchg
pushf
mov
jl
loopne
addl
mov
mov
inc
repz
clc
mov
and
lock
insb
lods
sub
lahf
addb
pushf
std
pop
push
add
hlt
sub
dec
sbbb
mov
fsts
cmpsl
cltd
push
call
xorl
popa
jno
add
cmp
jecxz
sub
movsb
fnstcw
lods
loope
mov
mov
sub
sub
sub
sbb
xchg
pop
aas
pop
sarb
notb
movsb
xchg
dec
inc
mov
jae
pop
adc
data16
stos
jmp
xor
xchg
mov
mov
sbb
cwtl
lock
orl
mov
cs
arpl
mov
inc
mov
jno
pop
popa
pop
loopne
cmp
aas
fstpt
and
roll
mov
lcall
bound
adc
bound
xor
jb
in
shrl
lcall
xor
clc
xorb
push
mov
pop
testl
dec
pop
or
popf
icebp
jle
inc
adc
cmc
jnp
mov
push
sub
call
push
fbstp
add
ret
pop
loop
dec
jl
inc
shr
mov
mov
les
lret
cmp
out
jno
aad
movsb
cmp
xchg
loop
pop
js
cmp
push
roll
mov
mov
xchg
adc
cli
lret
jbe
pop
cmp
and
cmc
mov
xor
mov
les
xor
cmpsl
cmp
pop
push
ss
xor
xor
rolb
adcb
dec
lcall
cld
adc
push
int3
xchg
outsb
xchg
push
xlat
popf
arpl
es
es
add
aam
pop
pushl
fsubs
mov
rcr
pop
jae
mov
pop
fiadds
daa
fsubp
cs
outsb
adc
push
pusha
push
std
pop
mov
addl
adc
aaa
push
loope
or
fldt
cs
out
je
sti
dec
cli
mov
jmp
add
lret
push
mov
cltd
inc
mull
popf
add
enter
and
cld
add
outsb
addr16
mov
lretw
push
fimull
dec
fs
xchg
sarl
jl
sti
sub
pop
cmpsl
cmpsb
and
mov
sbb
sbb
mov
or
dec
fbstp
lcall
inc
dec
into
ljmp
push
add
sbb
ss
mov
pop
inc
sbb
imul
or
mov
and
repz
sub
into
push
mov
lcall
test
pop
mov
and
fcoml
enter
cmpsl
scas
xchg
fcmove
pop
mov
sub
orl
lahf
pop
xchg
cmp
lods
sahf
fadds
test
fmull
xchg
or
int
dec
test
ret
in
cld
mov
xor
push
ficompl
loop
sbb
dec
sbb
ret
daa
xor
lret
and
and
xor
ds
mov
push
sti
outsl
out
push
push
bnd
pop
test
lock
call
jo
es
inc
out
pop
and
pop
mov
hlt
jns
rcll
dec
mov
sub
pop
xchg
add
lea
int3
dec
mov
push
pop
loope
stos
leave
iret
xchg
mov
mov
dec
loop
repz
sbb
in
scas
xchg
sbb
mov
gs
decl
fidivs
ret
adc
mov
xchg
xchg
incb
mov
mov
lea
loope
pop
shl
nop
pop
nop
daa
mov
cltd
jp
mov
xchg
insl
or
loopne
cmp
sub
es
stc
ljmp
sub
and
outsl
xor
jmp
mov
adc
dec
xchg
sar
fwait
pop
leave
pop
mov
arpl
popf
inc
jmp
sbb
fidivs
ret
pop
mov
out
cmpsl
js
imul
add
pop
xor
and
out
pushf
mov
outsl
adc
out
push
roll
add
fdivs
orl
test
xor
pop
push
mov
adc
pop
dec
clc
dec
lret
mov
jmp
adcl
pop
aaa
cmp
into
mov
dec
xchg
push
mov
jne
xor
imul
sbb
test
fs
jp
fsub
loop
sbb
stos
sbb
inc
int
xchg
push
add
cltd
and
jle
mov
sbb
enter
xchg
gs
es
pop
adc
pop
arpl
leave
arpl
lds
cmpsb
sub
mov
xchg
mov
mov
js
orb
dec
xchg
xchg
jns
test
pop
sub
inc
xchg
mov
mov
mov
ret
out
ret
xlat
fwait
test
les
push
push
adc
adc
cmpl
inc
je
outsb
out
test
pop
push
cmp
mov
inc
sbb
loope
jns
in
movsl
cmpsb
es
movl
xor
add
cld
ret
inc
xor
ljmp
sbb
aam
test
ljmp
mov
lods
jns
dec
adc
dec
lret
pop
mov
push
lret
jp
out
nop
push
repz
imul
and
int3
loop
mov
imul
bound
movsl
push
std
push
inc
xchg
out
lcall
decb
stc
cmp
or
gs
stc
int
mov
outsb
iret
push
xlat
cmp
in
das
or
enter
xchg
xor
push
lret
leave
aam
lods
mov
into
jns
popa
cmp
sahf
lea
push
mov
adc
ja
xlat
test
xor
repnz
cltd
pushf
cli
into
mov
mov
out
xor
mov
add
jae
jmp
fdivrl
jno
dec
sbb
jnp
jl
cmp
lods
daa
ljmp
pop
pop
insb
popa
aaa
lds
mov
xchg
lahf
dec
enter
call
or
jge
scas
aas
push
cld
aad
ficomps
pop
xlat
ss
nop
mov
js
imul
lods
int3
in
test
jge
das
xchg
lods
je
pushf
jg
or
xor
xor
or
leave
cmp
test
fidivrs
xchg
push
mov
inc
aam
cmpl
xor
cmpsb
mov
imul
xchg
mov
cmpsl
cmpsl
imul
lock
cmp
dec
sti
xor
popa
xchg
lds
xchg
je
xchg
xchg
sbb
test
mov
test
out
test
xor
cltd
pop
mov
mov
lds
pop
lea
push
inc
mov
inc
mov
xchg
cmp
faddl
xchg
aam
and
mov
loop
movsb
xor
pop
push
lgs
push
adc
xor
test
movsb
aad
jg
mov
cwtl
shlb
push
pop
push
jmp
fbstp
loop
sbb
xchg
add
dec
int3
mov
stc
out
ret
loopne
or
jns
inc
dec
inc
push
pop
mov
push
hlt
movsl
nop
pop
addr16
jl
loopne
sbb
lahf
mov
pop
enter
repnz
sbb
and
cmp
push
jl
fwait
iret
jne
xor
adc
fnsave
cmpsb
xorb
mov
mov
pop
fidivs
mov
fldenv
push
push
jnp
dec
mov
xor
movsb
push
cmc
sbb
cmc
mov
scas
inc
mov
and
arpl
xchg
jp
scas
imul
jbe
and
or
inc
mov
aam
pop
pusha
hlt
sahf
adc
xor
ficoml
aas
repz
addr16
jmp
pop
jb
xor
push
dec
push
aad
mov
mov
add
mov
dec
fstpl
call
mov
cmpsl
out
aad
inc
xchg
pop
leave
out
mov
cmp
sbb
dec
pop
sti
mov
inc
mov
push
or
mov
mov
lods
rclb
add
inc
adc
fstpt
decb
xor
int
sbb
sahf
or
dec
movsb
cmp
lods
xor
xor
cmpsl
add
and
nop
pushf
out
in
mov
cmc
add
mov
adc
repnz
jbe
mov
data16
test
or
adcb
orl
mov
jle
pop
scas
int
fldl
jmp
pop
js
in
jo
mov
out
xchg
xchg
in
sbb
nop
insb
jp
lds
clc
jne
lock
jne
cmp
sbb
xor
adc
jne
pop
ficoms
insb
push
stc
add
sti
mov
sub
cltd
iret
or
arpl
shlb
xlat
addr16
xchg
ljmp
sbb
les
mov
xchg
lea
jnp
pop
mov
jno
xadd
stc
call
or
sub
repnz
push
scas
in
xor
cltd
dec
lea
cmc
cmp
push
adc
jo
mov
sbb
in
js
xchg
or
lods
mov
out
or
adc
mov
jp
out
pop
mov
pop
jmp
jnp
inc
add
insl
sub
cltd
mov
out
pop
stos
xor
xor
addl
out
fistl
sbb
cltd
push
xlat
rcrl
xchg
icebp
dec
inc
sbb
cmpsl
mov
scas
pop
bound
int3
gs
dec
mov
push
dec
lea
lods
add
cmp
repnz
pop
xor
loopne
outsl
inc
cmp
stos
daa
movsl
jbe
lcall
dec
sahf
add
xor
xlat
mov
xorl
jb
int3
cwtl
flds
xor
bound
jae
mov
sbb
sub
jmp
mov
int3
fwait
mov
add
dec
cmp
dec
push
and
loop
pop
adc
pop
leave
das
xor
xchg
rol
mov
xor
test
jno
icebp
cmp
inc
inc
jns
mov
inc
push
adc
push
es
jae
jecxz
jbe
push
in
out
pop
add
loope
cli
repz
cmc
sub
xorl
inc
xchg
lds
mov
icebp
jo
lcall
rolb
xor
xchg
jns
mov
js
movsb
and
inc
mov
or
es
in
ret
xchg
sub
ja
and
fmuls
aas
insl
sub
les
out
js
enter
and
add
rcl
test
jo
insl
inc
inc
decb
lret
bound
or
loop
test
mov
and
inc
mov
aaa
aas
inc
pop
mov
enter
lds
or
or
lock
sti
adc
out
repnz
popa
sbb
into
divl
xor
in
fdivr
ret
int3
mov
xchg
jae
leave
iret
mov
push
push
cmp
pop
push
cld
and
pop
push
outsl
cmp
jns
pusha
arpl
mov
adc
mov
jmp
jnp
sbb
lret
mov
popa
lds
jae
cmp
sub
dec
out
jae
lahf
push
dec
stos
dec
pop
mov
jbe
in
insl
andb
popf
mov
fisttpll
push
jge
xchg
mov
inc
out
mov
std
and
fists
mov
jge
fisttps
add
adc
cld
pop
adc
push
and
mov
rorl
jmp
movsb
mov
push
fwait
sbb
incl
movsl
jmp
imul
in
and
aaa
xchg
and
inc
scas
bound
movsb
mov
xchg
fistps
xchg
ds
data16
ret
dec
lods
xor
popa
shll
push
iret
hlt
xorb
mov
sbb
cs
enter
sbb
popa
jp
jns
push
and
into
fldt
and
inc
pop
adc
outsl
out
inc
push
mov
addr16
inc
sub
movsb
jns
ret
lods
insl
ficompl
ret
jmp
xor
in
mov
xor
and
dec
fdivr
out
fsub
xchg
cld
pop
cmp
inc
clc
adc
push
pop
cmp
mov
push
jl
fs
es
dec
nop
js
ljmp
movsb
sub
mov
mov
enter
add
sub
outsb
add
loope
insb
sbb
or
adcb
push
fsubs
cmpsb
fwait
fldl
rcll
das
mov
push
mov
stos
pop
xor
nop
cmc
enter
dec
aad
arpl
mov
sarl
mov
es
adc
jno
mov
nop
aam
xchg
inc
jl
iret
or
in
or
test
stos
out
mov
cmp
push
jb
cltd
ljmp
mov
cmp
or
jp
testl
push
sub
cwtl
mov
negl
pop
pop
push
test
jae
decb
dec
xchg
bound
jl
xchg
xchg
mov
outsb
dec
aas
adc
and
in
mov
fnop
ljmp
loope
fmull
dec
ss
mov
xchg
jp
dec
adc
inc
aad
stc
insb
sub
fsubr
xchg
in
imul
jmp
inc
pop
dec
sub
mov
mov
sbb
jns
addr16
xor
mov
lds
dec
and
movsl
push
pop
je
cmpsb
jmp
stos
jno
out
popa
add
cmp
xlat
cwtl
cmp
mov
jge
pop
outsl
int3
sub
and
sub
mov
sub
inc
add
sub
mov
lods
adc
sbb
js
stos
roll
pop
cmp
shrl
rolb
cs
fwait
out
add
or
cs
mov
sahf
jmp
jecxz
push
pop
cli
out
pop
and
add
repz
movsb
daa
sub
pop
jns
push
dec
popa
sub
test
pop
fnstcw
pop
add
sub
dec
mov
loope
in
pop
das
add
insl
pop
xchg
aas
loope
or
int
dec
outsl
sub
cli
negb
cmp
stc
rcrl
sbb
jns
ret
fwait
xchg
push
dec
je
xchg
pop
fisubs
and
in
mov
xchg
xchg
mov
scas
repnz
rol
cltd
shlb
mov
imul
add
shlb
inc
add
shr
or
cld
hlt
iret
push
xor
ja
pop
rclb
enter
push
cltd
adc
xchg
insb
lret
push
ljmp
aaa
jne
pop
mov
ret
sub
aam
les
jne
dec
movsb
xchg
scas
jle
xchg
pop
arpl
sub
push
add
xchg
lahf
les
fsubrs
sarb
push
sbb
adc
call
mov
das
fmuls
or
or
push
cmpl
cmp
scas
daa
scas
pop
ljmp
nop
iret
add
dec
cmpb
negb
cmpsl
icebp
mov
sub
push
hlt
add
xchg
and
mov
aaa
call
negl
es
inc
pop
jnp
sbb
pop
outsl
and
push
dec
cmp
mov
test
cmp
pop
nop
push
leave
aam
push
push
or
ror
shr
dec
adcl
pop
sub
push
xchg
mov
mov
sbb
sub
adc
fadds
dec
in
loopne
sub
fmuls
adc
out
pop
add
dec
push
repz
mov
fs
cmp
ljmp
insl
pusha
mov
test
outsb
adc
ljmp
outsb
dec
xchg
fmuls
sub
out
push
mov
or
mov
sub
xor
pop
push
lcall
rcrb
inc
mov
aas
adc
in
jne
movd
mov
xchg
xchg
in
inc
and
sbb
sti
mov
jo
sbb
out
push
aad
fidivrs
cmc
xorb
imul
fstl
push
sbb
xor
cltd
lock
mov
dec
lods
jae
lock
aaa
sbb
popf
mov
add
push
xchg
cwtl
push
xor
sahf
jl
sub
in
mov
adc
lcall
mov
jnp
pop
in
and
stos
orb
data16
repnz
shll
dec
sbb
arpl
insl
mov
lds
mov
cmpsb
std
sbb
pop
scas
shll
add
insb
jl
mov
inc
mov
rcrb
fwait
jecxz
fwait
das
sub
movsl
jp
fdiv
push
xor
shlb
or
xchg
or
mov
ds
sub
pop
pop
test
lds
lods
enter
push
pusha
int
out
add
and
jmp
cmc
lret
lods
xchg
scas
rcl
iret
mov
dec
dec
sbb
add
mov
lcall
sbb
faddl
add
and
dec
xorb
notl
cmp
lds
dec
stos
js
inc
dec
sub
loopne
std
scas
icebp
add
nop
cmpsl
cld
sbb
fs
jns
lret
fcmovnb
rcrb
inc
cmp
fxch
and
mov
outsb
push
lcall
hlt
dec
push
add
add
arpl
inc
jmp
mov
shll
mov
cmp
iret
stc
mov
test
cmpsb
lret
lods
sub
and
cmp
mov
mov
lret
mov
jp
scas
or
mov
call
sbb
and
cli
jns
xorl
and
lahf
loopne
xor
loope
sub
sti
adc
mov
sub
mov
outsb
push
dec
push
adc
pop
addr16
enter
xor
inc
dec
rcll
repz
ret
js
loop
push
in
mov
mov
sub
int
dec
mov
mov
dec
jae
fst
faddl
pop
aam
sbb
dec
push
mov
repz
aad
mov
jmp
shrb
or
imul
movsb
cmp
sub
jp
push
push
cli
js
xchg
pop
mov
mov
f2xm1
cmpl
jns
cmp
out
lret
fcmovne
xchg
fdivr
cmpsb
jge
lahf
pop
mov
mov
pop
es
jno
pop
fldl
xchg
stos
xor
push
adc
lds
aaa
dec
inc
stos
pop
enter
push
fsubrl
push
lcall
jnp
sub
stos
or
push
cltd
pop
insl
push
ljmp
adc
jns
int
cltd
faddl
in
push
lret
and
xchg
stc
fldl
xchg
xchg
frstor
cld
push
mov
cmp
mov
mov
orl
nop
xor
fcoml
mov
xchg
fsubs
mov
out
arpl
sub
ss
call
lea
or
add
fisttpl
outsl
incl
jnp
mov
and
scas
ret
test
js
sub
pop
mov
cmc
out
fstpl
arpl
adc
inc
out
mov
fwait
addr16
push
add
or
push
sbb
orl
mov
push
xor
hlt
add
out
imul
pop
aas
in
stos
cmp
pop
lods
das
push
cmpl
or
add
hlt
out
push
lods
or
dec
jle
inc
xchg
pop
lcall
insb
sbb
pop
sub
insb
js
repz
push
outsl
jmp
jnp
mov
push
test
in
or
xchg
sti
out
jp
jp
push
cs
add
in
pop
and
xchg
jbe
or
gs
insb
mov
xor
fidivrl
push
clc
and
lret
push
lcall
xor
inc
sti
push
clc
lret
lahf
jp
pop
jmp
sub
push
xchg
adc
pop
dec
inc
cmp
iret
sbb
dec
or
andb
or
aas
pop
lock
lret
cmp
ljmp
push
je
nop
dec
push
test
pop
out
lds
mov
test
ljmp
adc
hlt
aas
rorl
push
xchg
cmc
push
xchg
out
pop
loopne
pop
inc
and
xchg
stc
mov
je
jo
pop
ds
test
sbb
push
xorl
sbb
cmp
sbb
inc
iret
add
xchg
bound
push
dec
push
movb
jge
push
mov
negl
in
shll
push
cmp
pop
jae
outsl
scas
pop
sub
jb
sub
mov
fildll
sub
pop
cltd
insb
push
fcmovu
adc
inc
inc
or
or
add
push
sbb
mov
int
lds
dec
adcl
xchg
aas
insl
xchg
jo
push
popf
mov
mov
mov
mov
imul
movsl
fidivl
sbb
lods
mov
test
or
lea
adc
aad
loope
cmp
jecxz
xor
or
in
and
cmp
mov
mov
mov
xchg
pusha
test
mov
divb
in
push
sbb
bound
sub
or
loop
rolb
out
iret
xchg
mov
movsb
push
sub
and
test
and
hlt
push
out
inc
mov
mov
inc
iret
cmc
call
sbb
xchg
push
call
shl
mov
fs
stc
push
add
add
stc
mov
cmp
mov
jb
jle
mov
push
ficoms
mov
hlt
adc
subl
adc
fsubrl
in
dec
fdivr
ds
icebp
test
jb
jnp
jns
movsb
inc
push
dec
int
idiv
sbb
shl
fcmovnbe
test
mov
xchg
out
and
iret
sbb
sahf
mov
cmpsl
int
roll
jge
dec
adc
mov
mov
cmpsl
fldt
mov
mov
pop
mov
fbstp
clc
push
jl
addr16
mov
xor
adc
add
adc
mov
cmp
xor
negb
mov
shlb
in
jae
insb
cmpsl
lods
mov
pop
push
push
mov
in
sbbl
cli
imul
pop
cltd
cmp
and
arpl
xchg
sbb
incl
inc
dec
or
in
outsl
ds
dec
bound
add
cwtl
or
data16
mov
pop
js
pop
in
pushf
shrl
push
xor
rclb
xchg
and
xlat
jecxz
jp
add
ret
or
adc
imul
fistpll
in
loope
roll
sub
mov
and
movsl
jns
call
lods
incl
mov
cmp
inc
in
xor
add
and
adc
mov
lods
inc
sbbl
sbbb
ljmp
mov
fsub
lods
movsb
cmp
lcall
nop
pminub
ret
lahf
adc
ret
jl
dec
or
mov
adc
lcall
dec
push
lahf
push
leave
xlat
cmp
cmp
push
loopne
push
cmc
and
arpl
movsb
xor
sub
lahf
loopne
push
inc
xor
mov
add
adc
push
push
hlt
sbb
xchg
insl
cltd
and
add
xor
outsb
imul
inc
rcl
add
jae
shll
or
cmp
ja
popf
and
add
pusha
ss
jl
xchg
xlat
shrl
idiv
fs
fs
div
push
add
pop
xchg
cmp
push
pop
jecxz
xlat
xchg
data16
pop
stc
aaa
cmpb
cli
dec
mov
inc
add
out
adc
lret
jno
sbb
ret
sbb
adc
daa
lea
mov
mov
mov
jno
jmp
inc
stos
sbb
sbb
mov
xchg
and
jle
jle
lock
xor
push
add
bound
mov
ret
and
mov
cwtl
movsl
mov
jns
and
test
popf
dec
jecxz
pop
xchg
add
and
pop
in
cmc
ret
pop
sbb
aas
das
out
xchg
adc
mov
cs
adc
aaa
push
dec
xchg
sbb
pop
dec
fs
iret
mov
mov
lret
int
sub
xor
cmpsb
ljmp
add
int3
sub
xlat
jg
ficoms
inc
xlat
xchg
loope
pushf
inc
mov
insb
dec
mov
push
jecxz
leave
sbbl
imul
lods
bound
inc
mov
push
add
stos
int
rcll
inc
xchg
dec
sbb
test
and
out
outsl
adc
mov
cmp
je
inc
jbe
push
sbb
or
ja
dec
mov
mov
iret
and
cmp
cmpsl
sub
leave
sarb
lret
cmpl
imul
fisttps
mov
inc
xchg
pusha
filds
or
insb
xor
push
ljmp
or
mov
pop
xchg
repnz
lods
push
pop
lea
lock
or
jbe
pop
or
pop
shll
push
mov
push
mov
jne
cmp
fdivrs
and
subl
add
fs
inc
rclb
scas
cs
jo
mov
xchg
push
mov
es
cmp
cli
pop
divl
xchg
je
mov
adc
pop
mov
mov
fyl2x
test
xchg
mov
inc
paddd
xchg
sbb
mov
bound
lcall
jne
pop
pop
mov
sbb
daa
mov
push
es
shll
jb
jnp
add
test
inc
ret
push
push
jb
ret
cmpb
lods
sub
push
gs
add
cltd
mov
mov
test
jnp
adc
cmp
mov
incl
int3
fisttpll
call
mov
je
in
and
ds
mov
fsubl
fdivp
push
bound
mov
sub
mov
inc
xchg
add
xorb
cvtpi2ps
shll
pop
rcr
push
cwtl
icebp
ds
cmp
dec
in
inc
out
mov
aad
fsubrs
repnz
fcom
xor
xor
inc
scas
push
xlat
pop
xchg
nop
cmp
into
call
out
call
push
ljmp
lea
pushf
cmc
push
subl
mov
stc
into
out
subl
cwtl
mov
sub
mov
outsl
lods
out
inc
xchg
gs
cs
jecxz
mov
sahf
xchg
mov
shl
xlat
ss
xchg
shlb
adc
mov
inc
push
sub
xchg
pop
lea
cmc
cltd
mov
mov
mov
and
add
xor
jecxz
inc
dec
cltd
add
and
mov
data16
jb
mov
sub
aas
cmp
jbe
xchg
es
sub
sub
insl
xor
add
mov
jle
mov
xchg
sarb
pop
aam
testb
and
sbb
jmp
or
cld
adc
ret
int3
repz
fiadds
fcmovu
pop
fwait
and
xor
fs
das
push
add
fidivs
cld
fs
add
dec
cmp
aam
ljmp
adc
fwait
add
lret
xchg
mov
sti
int3
into
add
xchg
mov
mov
dec
push
push
testb
mov
inc
mov
push
mov
inc
out
xor
dec
add
or
movl
std
adc
adc
jns
pop
scas
sub
mov
add
jo
add
rcr
ja
cmpsb
dec
test
adc
lret
int
dec
inc
mov
lea
aas
lods
xor
subl
adc
adc
cmpsl
in
mov
cmpsb
push
in
cmp
xor
imul
daa
adc
add
xlat
les
cld
mov
stos
iret
std
test
push
cs
adc
pop
hlt
pop
out
lods
mov
das
sub
xor
js
pop
jl
ljmp
shll
sahf
arpl
add
fucomi
jecxz
sti
add
jp
sahf
je
mov
xchg
test
mov
push
push
inc
cmp
test
adcl
movsl
fs
jb
outsb
or
jns
mov
popf
push
outsl
lock
in
jne
mov
push
ljmp
scas
sbb
dec
repnz
adc
cmp
pop
inc
movsl
cs
push
cmpsb
dec
add
popf
jb
pop
dec
ret
mov
mov
cmp
xchg
mov
jle
xor
xchg
mov
push
sarb
fisubs
cmpsl
scas
loop
or
lock
cs
adc
bound
jle
mov
addb
dec
inc
push
add
lea
xchg
cltd
lock
insl
mov
mov
push
push
jns
mov
dec
adcl
pop
popa
jecxz
push
sub
jne
idivl
push
in
and
shrb
sbb
xchg
dec
es
loopne
aad
xor
jbe
mov
lret
push
out
lret
push
or
jmp
jmp
mov
jle
sbb
push
push
pop
cmpl
mov
lods
test
add
shlb
ret
and
or
mov
aaa
loopne
push
xor
mov
icebp
pop
fabs
popf
fisubl
mov
mov
push
iretw
xchg
iret
les
adc
or
jmp
push
repnz
mov
mov
popa
cmp
shrb
inc
insl
or
push
pushf
pop
jnp
rcrb
xlat
bound
stos
xor
fwait
dec
movsb
sub
or
dec
sub
js
mov
jnp
out
jb
insb
push
cli
leave
mov
icebp
mov
push
fisttpll
xchg
jge
imulb
jb
int3
pop
push
inc
fistps
sub
and
mov
jge
and
jae
dec
roll
xchg
adc
cmc
lret
scas
pop
xlat
stos
loop
and
bndldx
loop
dec
xchg
enter
ljmpw
daa
sub
inc
mov
cmp
mov
pushf
popf
and
imul
lret
sub
cmp
mov
adc
jmp
adc
add
fdivl
adc
mov
aaa
pushf
imul
bound
out
ret
pushf
call
adc
nop
mov
test
mov
jmp
sub
jecxz
scas
push
xchg
dec
rcrl
sbbb
xor
mov
stos
push
repz
jne
pop
push
or
cs
jge
mov
ss
jae
sub
push
out
mov
lods
fisubrs
lock
ljmp
stos
mov
cmc
mov
into
push
pop
imull
and
mov
xor
pop
cli
lret
inc
xor
addr16
sub
int
dec
js
or
dec
adc
repz
test
dec
jmp
sbb
push
mov
mov
sbb
addl
test
mov
aaa
mov
sbb
push
movsl
dec
scas
add
push
in
adc
mov
jle
enter
outsb
aad
sub
dec
pop
xor
enter
insb
inc
and
pop
dec
loopne
ret
cmp
mov
sub
cmpl
lcall
scas
pop
mov
lds
mov
push
loopne
sub
enter
sub
fcomip
rcrl
xchg
lret
sub
arpl
lret
sbb
sub
xor
push
imul
cmp
jmp
das
in
imul
test
pop
sarl
sub
cwtl
inc
mov
dec
mov
test
sbb
std
pop
movsb
push
outsb
ret
sarb
push
into
or
imul
fbld
sahf
or
pop
mov
mov
call
lahf
inc
push
sbb
repnz
mov
shll
mov
ss
inc
xor
add
das
xorl
xlat
pop
mov
push
dec
pop
pop
lret
xchg
sub
xor
daa
lcall
mov
lea
loopne
aaa
dec
test
push
or
arpl
addl
push
out
inc
scas
add
dec
xchg
int3
xor
mov
lahf
leave
insb
xchg
fdivs
test
ljmp
fs
jno
ss
push
mov
lahf
push
inc
ret
lret
push
mov
sbb
and
push
daa
or
pop
lea
dec
push
imul
jns
stos
out
jecxz
mov
clc
dec
mov
mov
test
out
jmp
adc
jbe
xchg
cs
push
out
jno
cmp
adc
jp
adc
jns
icebp
dec
out
dec
add
bound
xor
push
int
push
scas
lock
sbb
adc
test
imul
in
shl
outsb
cs
inc
int
repz
jo
or
jmp
and
add
ret
mov
mov
fdivrl
insl
jbe
push
lret
pushf
add
daa
and
mov
inc
mov
ret
dec
and
pop
fsub
xchg
add
mov
call
add
sha1msg1
lods
and
xchg
sbb
out
mov
js
xor
sbb
mov
test
inc
je
cs
movsl
mov
je
inc
or
test
out
int
xchg
xlat
ss
xchg
jge
mov
sub
ljmp
inc
jle
stc
pop
out
gs
stos
je
cmc
out
cld
xchg
ret
jb
js
lret
aas
xor
add
loope
cmp
mov
cs
cmc
and
stc
inc
sub
imul
ja
hlt
sbb
ret
jp
add
cli
sahf
or
lret
fs
icebp
lcall
jg
pop
push
xchg
jge
test
push
xchg
stos
and
mov
fsubl
pop
jmp
xor
mov
jp
inc
loop
rorl
testl
ljmp
roll
jo
xorl
add
jmp
sub
dec
push
in
sub
jge
test
dec
jno
push
je
mov
shrl
jle
ret
xchg
inc
mov
loop
xchg
nop
insb
aas
inc
dec
or
popf
xchg
jl
adc
fisubl
inc
or
cmp
xchg
lea
imul
out
cmp
test
push
push
inc
pop
das
dec
cmp
testb
decb
popf
mov
dec
inc
test
push
xchg
cli
jo
cmp
dec
jle
jp
push
jmp
sub
int3
dec
xchg
jle
add
test
icebp
andl
sub
stos
fdivl
sahf
lods
xchg
in
inc
pop
sbb
dec
out
pop
xchg
add
data16
mov
daa
pop
sahf
ret
xchg
cmpsl
xchg
jmp
pop
out
enter
data16
xor
cmp
or
sahf
pop
lahf
xor
push
jno
push
push
push
pop
jae
sbb
cwtl
mov
add
aas
jp
aam
mov
leave
mov
es
icebp
les
ds
jecxz
dec
add
xchg
adc
mov
mov
push
push
orl
jmp
les
inc
xchg
add
test
add
out
ret
pavgw
in
sti
and
cmc
pusha
mov
mov
mov
imul
loopne
or
jns
sbb
mov
pop
test
clc
push
or
jp
jmp
call
clc
pushf
scas
outsb
data16
iret
insb
in
popf
mov
lods
pop
sub
fsubr
push
inc
add
and
test
in
dec
das
addr16
mov
push
leave
test
xchg
mov
jmp
push
cwtl
sbb
dec
bound
movsb
pop
ror
jecxz
repz
jge
movsb
enter
lods
out
movsb
and
cmp
jle
push
gs
dec
sub
mov
jl
mov
sub
cmpsl
ret
or
mov
out
icebp
stos
fwait
enter
mov
sbb
loop,pt
add
push
push
imul
shl
xor
addb
or
fisubl
add
xor
adc
testb
and
xchg
push
mov
lret
or
ljmp
ficomps
out
cmpsl
dec
add
enter
push
int3
jno
mov
shrl
xchg
push
cmpl
mov
push
jb
push
inc
sbb
or
fwait
out
push
push
out
jg
aad
sarb
daa
and
out
insl
or
jb
mov
in
inc
mov
test
jge
push
andl
mov
xchg
in
loope
mov
inc
xor
fisubrs
cmpl
js
cmpsl
mov
add
stos
js
cmpsl
fnsave
outsl
ss
cmp
inc
movsl
cld
adc
rorb
rol
popf
xchg
pop
mov
enter
icebp
xor
pop
pop
add
aad
cld
adc
cwtl
cs
mov
les
cltd
inc
loop
push
pop
int3
or
and
xlat
insl
jge
pop
insb
movsl
mov
data16
add
roll
xlat
lds
je
jp
aaa
cmp
int
xchg
ljmp
mov
cwtl
mov
subb
dec
add
xor
jne
test
push
scas
daa
popa
xchg
enter
mov
or
lret
nop
movsl
pop
out
xchg
mov
mov
push
lcall
inc
inc
stos
or
nop
out
xchg
pop
mov
cwtl
jo
imul
lods
add
stc
jmp
mov
push
mov
mov
leave
out
jno
mov
movsb
test
or
repz
divb
lods
and
call
in
movsb
dec
das
and
in
mov
xor
push
test
out
out
scas
fisubrs
sbbb
orl
and
aad
push
add
xor
ret
orb
fdivp
fmuls
int3
add
inc
fcomps
addb
movsl
cmp
out
and
and
inc
nop
xor
and
mov
fs
into
les
mov
or
push
sub
int
inc
pop
sarb
rol
sbb
js
sbb
stos
mov
adc
and
popa
jle
and
sub
shrb
push
int3
and
jge
mov
aaa
imul
bound
adc
dec
test
ret
xor
push
mov
in
inc
mov
xor
stos
insb
std
or
mov
push
roll
mov
add
jbe
mov
leave
dec
xchg
or
mov
idiv
xlat
int3
das
adc
or
push
stc
pop
adcl
ss
cmp
pop
push
jmp
push
sub
icebp
rcrl
shrb
ret
dec
ljmp
iret
jo
add
push
sbb
outsb
mov
std
sbb
aam
movl
das
test
stc
xor
fwait
and
pusha
add
insb
enter
test
and
jl
mov
pop
call
mov
int
and
inc
mov
push
jle
dec
les
mov
push
test
mov
push
add
hlt
test
int3
int3
cld
movsl
pop
mov
mov
jle
push
xchg
sbb
sbb
in
in
into
test
mov
adc
sbb
inc
sbb
movsb
repz
cwtl
mov
icebp
ja
lods
or
rcl
loope
and
add
fwait
cs
pop
imul
push
adc
popl
ret
and
pop
cmpsl
loope
cmpsb
cmpsl
mov
jb
int3
es
jge
adc
mov
bound
dec
xor
adc
add
fprem1
cmc
xor
inc
add
stos
popa
mov
outsb
pop
add
dec
decb
call
mov
into
mov
pop
push
push
xor
push
out
ljmp
cmp
pop
jge
dec
orl
xchg
hlt
inc
cmp
pop
dec
fwait
mov
sbb
pop
sar
out
or
cltd
dec
shll
jp
jns
std
mov
adc
sub
ficompl
sub
inc
out
repz
bound
sbb
enter
push
xorb
adc
pop
jae
subl
lret
xchg
jmp
shlb
arpl
push
inc
mov
frstor
cmp
lahf
das
push
dec
nop
pop
inc
xor
cmp
jbe
out
arpl
ret
in
jno
repz
mov
adcb
icebp
xchg
xor
pop
inc
mov
lods
addr16
ss
insb
mov
cmp
fisttpll
dec
add
call
aad
nop
rolb
ret
mov
cltd
xchg
leave
scas
and
into
jge
out
inc
popa
mov
movsl
mov
cmc
stos
pop
ret
inc
cmp
inc
jl
loop
stos
test
pop
mov
into
sahf
lahf
jnp
xchg
push
outsb
push
inc
adc
fs
cmp
stos
mov
add
add
test
dec
inc
outsl
mov
mov
test
sub
push
call
push
arpl
scas
mov
inc
pushf
test
and
sub
sahf
mov
dec
scas
push
jne
jo
in
fst
inc
cli
jbe
xorl
push
and
xor
xlat
xchg
sahf
les
in
je
push
jb
pop
cmp
shll
pop
fdivrs
sbb
jb
mov
out
aam
cld
mov
xchg
mov
add
jbe
push
xlat
ds
lea
dec
mov
pop
shll
sbb
aam
in
xchg
dec
inc
adc
shll
dec
inc
sbb
outsb
fcoml
push
inc
pushf
ficomps
aaa
inc
xchg
stos
xchg
cmpsb
xlat
push
add
je
cmp
push
cmp
scas
cmp
fs
icebp
gs
adc
jecxz
sub
sbb
int3
jo
xchg
divl
loope
pop
jp
lods
leave
adc
bnd
mov
add
popf
sub
enter
adc
test
jb
sbb
sub
and
adc
cli
sarb
aaa
mov
push
jb
shll
lahf
adc
mov
shlb
dec
sub
push
daa
and
fwait
pop
sub
sub
call
xchg
repz
sub
fwait
shlb
cmp
aam
loope
xchg
mov
pop
lahf
int3
push
pop
pushf
shl
adc
add
aam
add
pushf
popw
xor
mov
dec
and
cmpsl
adc
pop
lds
pop
js
loope
xchg
xor
mov
and
rolb
push
pop
pop
push
rorb
lock
ds
js
inc
loope
cli
fcmovb
sub
sbb
sbb
in
bound
repz
das
xchg
mov
dec
mov
fstps
cli
jmp
inc
adc
mov
pop
es
mov
cmpsl
mov
or
stos
add
mov
adc
jns
shll
jmp
std
xor
lds
movsl
in
cwtl
mov
cmp
fistps
rorb
into
xchg
jg
xchg
and
subb
cmp
pop
shr
xor
pop
and
mov
xorl
icebp
pop
mov
inc
pop
jp
xor
ss
out
xor
mov
lcall
adcb
fimuls
mov
mov
mov
sub
xchg
test
sbb
leave
inc
pop
cmp
int3
mov
sbb
cs
mov
test
adc
jb
aam
jmp
lret
sbb
mov
cmp
inc
or
inc
daa
inc
dec
mov
ror
stc
mov
xor
mov
or
sub
cmp
cltd
cmp
shlb
push
mov
hlt
dec
gs
call
or
in
fs
jnp
mov
xlat
inc
xor
cld
adc
stos
sub
jmp
popa
pop
into
or
enter
push
idiv
test
fcoms
jg
repnz
jg
test
sbb
ds
hlt
inc
in
hlt
call
sbb
dec
popf
push
aam
xchg
and
mov
pop
sub
dec
xchg
movb
mov
cmc
movsb
je
scas
fwait
mov
dec
cs
xchg
loopne
jne
xlat
imul
incl
shrl
pop
jg
fcoml
add
jbe
testl
repnz
push
cmp
test
lds
pusha
mov
insb
loope
fsubp
push
mov
mov
xorl
adc
lgs
sbb
popa
add
std
out
into
sub
insb
lock
decb
iret
test
dec
aaa
mov
enter
jbe
inc
pop
int
popa
test
lds
jo
imul
jg
adc
cmp
mov
hlt
adc
dec
pop
xchg
dec
scas
fsave
fstpt
mov
jle
mov
test
std
insb
cmpsb
fisubrs
js
ret
ljmp
xor
pusha
iret
adc
xor
xor
cli
xchg
ret
enter
ret
inc
in
mov
xchg
fs
fmull
and
mov
addl
dec
mov
lcall
hlt
or
sti
pushf
sbb
mov
inc
push
push
call
inc
xchg
icebp
test
dec
subl
fidivl
lock
lret
mov
aad
fldenv
test
cmp
roll
lahf
mov
xor
ljmp
xchg
lahf
mov
mov
mov
sub
jbe
imulb
add
jle
int
pop
call
and
divl
xchg
lret
cltd
push
add
mov
push
push
lahf
sti
aas
addr16
sub
pushf
lret
jnp
adc
cmp
cmp
mov
mov
xchg
cli
xorb
jl
rcpps
sub
push
popa
cwtl
fstl
xor
les
dec
or
leave
outsl
mov
rcrl
lret
push
sub
pop
mov
cmp
add
fildll
inc
mov
repnz
xor
push
addr16
imul
add
and
and
dec
ljmp
scas
call
cmp
cmp
punpckldq
fistps
mov
das
jp
scas
cld
xor
shlb
mov
xchg
dec
pushf
gs
sub
rolb
pop
and
jns
jp
scas
arpl
xchg
add
daa
stos
dec
rcl
cmp
aam
mov
jmp
cmp
push
fsubl
adc
jno
je
jb
cs
inc
mov
movsl
in
xchg
popf
sti
les
inc
sub
ljmp
out
cmp
xlat
xchg
inc
clc
imul
aam
ret
das
sbb
mov
rclb
mov
add
pop
or
shrb
jo
adc
mov
or
das
xchg
cmp
mov
insb
pop
mov
gs
and
cmp
mov
rclb
mov
push
cld
rcrl
xchg
scas
mov
inc
sbb
sbb
divl
sbb
cmp
dec
fisttpll
mov
mov
xchg
pusha
test
add
mov
push
xchg
addr16
pop
and
ret
push
test
dec
push
mov
mov
sarb
out
rcrl
int
orb
pop
arpl
out
cli
mov
test
test
sbb
adc
into
data16
push
inc
dec
push
test
out
std
out
cld
int
mov
mov
sbb
and
shl
std
sbb
jo
mov
sti
rcll
cmp
cmp
cmc
pop
push
movsl
sub
and
jb
inc
imul
lcall
xchg
std
and
xor
incb
sbb
mov
aaa
dec
sub
ljmp
cld
mov
cmp
xor
popa
arpl
cmp
aad
add
dec
lock
cmp
in
jge
xlat
jb
int
jg,pn
into
clc
movsl
sub
jbe
push
dec
imul
mov
fisubrl
jmp
mov
int
int
adc
adc
addr16
jo
mov
push
jp
loop
hlt
shrl
int3
and
imul
addb
push
mov
outsb
stc
pushf
adc
out
inc
sbb
push
outsl
loope
data16
cs
sbb
imul
jbe
jnp
out
xor
loope
sub
stos
push
jbe
rorl
sbb
aam
sbb
punpcklwd
es
imul
add
aas
cmc
mov
test
xchg
cmc
push
xchg
xor
pushf
shll
fs
jmp
xor
mov
loope
daa
sbb
arpl
mov
pop
lea
sub
mov
clc
jg
xor
lcall
dec
or
cmp
pand
rcr
adc
aas
cmc
js
pushf
scas
cmpsl
sti
cmp
mov
jl
mov
dec
cmpb
xchg
jae
sub
lods
enter
or
adc
dec
push
push
arpl
mov
mov
nop
pusha
popw
cli
lret
pop
xchg
not
add
cmovs
mov
es
jecxz
imul
push
cli
stc
ret
pop
test
fnsave
aam
into
popf
jno
jg
xor
xor
sbb
call
and
mov
sbb
aad
int
mov
out
pop
fs
repz
add
fcompl
and
jne
out
lock
jne
ds
popa
inc
jno
cmp
jecxz
fcoml
jmp
cltd
push
xor
push
fpatan
push
or
push
mov
xor
test
adc
std
rclb
adc
add
adc
aam
shrl
hlt
or
icebp
mov
clc
or
mov
aaa
call
fwait
cltd
sbb
sbb
xchg
test
fcom
arpl
mov
ljmp
test
lds
insb
mov
xchg
push
adc
sbb
neg
mov
add
int3
pop
adc
aad
xor
mov
push
out
or
nop
test
negb
ret
les
sbb
gs
dec
lds
cmp
repz
inc
push
add
sub
xlat
cmpsb
mov
adc
mov
jae
and
jecxz
cmpsb
fsts
inc
push
movd
mov
cmp
dec
addr16
xchg
inc
aam
xchg
sbb
enter
sub
push
sub
adc
test
stc
jb
fcomps
pop
lods
fildll
or
outsl
int
data16
es
jge
xchg
add
bnd
fstps
xchg
out
mov
dec
inc
mov
shrl
and
sub
dec
jge
pusha
das
mov
mov
idivl
push
sub
add
mov
nop
sbb
xor
or
mov
pop
inc
adc
shlb
inc
test
xchg
cwtl
shl
pop
inc
pop
cmpsb
mov
stos
rorb
mov
clc
add
mov
pop
dec
andb
push
loop
aas
push
inc
push
and
dec
xchg
aas
adc
sti
loop
sub
pop
pop
sub
add
cltd
lea
xchg
call
cmp
sub
adc
pop
hlt
flds
sarl
ds
mov
inc
jo
cmpsl
int3
popf
inc
or
dec
popf
std
or
loop
popf
jecxz
scas
in
jbe
jle
or
cmp
inc
out
pop
cmp
mov
ljmp
cmpsl
xor
adcb
fidivrl
pop
mov
cmpsl
sub
in
cmp
int3
fs
in
rcr
mov
push
enter
inc
fs
test
testb
pop
scas
mov
in
mov
lds
inc
nop
roll
mov
addr16
sub
push
cmpsl
lahf
jo
jmp
and
mov
and
test
and
fwait
addl
xchg
and
notb
jge
fnstsw
push
pushf
repnz
pop
imul
cmp
int
loopne
daa
es
mov
xor
jle
cmpb
mov
mov
xor
in
fs
fidivrs
icebp
loop
repnz
cltd
jno
fnstcw
shrb
push
orb
cltd
xchg
pop
cmp
pop
mov
xor
imul
or
dec
push
out
nop
lret
or
lods
pop
bound
dec
jecxz
mov
js
mov
test
mov
sbb
es
daa
mov
hlt
inc
add
cmp
push
xchg
xchg
cld
lret
lea
xorb
sub
aas
lds
lret
sub
ja
jb
add
xor
push
out
inc
aad
add
lock
scas
xlat
jle
mov
dec
notl
push
in
mov
push
mov
call
xchg
push
pop
mov
filds
ljmp
imul
test
test
sub
int3
push
pop
adc
inc
push
in
call
jle
jl,pn
xor
mov
mov
sub
rorl
rcl
mov
mov
jbe
ret
mov
inc
sub
mov
cmp
mov
mov
mov
loop
mov
dec
icebp
and
dec
mov
push
cld
xor
jg
mov
pop
divb
dec
cmp
pop
cld
test
adc
test
pop
mov
pusha
jbe
cmp
popf
scas
mov
mov
test
and
sbb
nop
in
dec
jnp
int
ror
insl
aaa
mov
pop
push
pop
lods
mov
lds
mov
add
fldt
jg
sbb
xchg
jns
fwait
push
sub
fstl
jo
pop
mov
dec
pmulhw
mov
sub
cmp
and
cmpsl
sti
mov
pushf
push
push
ljmp
data16
pop
cmc
lcall
test
push
idivb
jge
add
mov
jle
lret
fwait
cmc
add
shrb
sub
or
sbb
nop
mov
mov
imul
adc
or
test
test
sbb
xchg
push
inc
mov
mov
add
pop
mov
xchg
push
xor
sub
xchg
jmp
ret
push
mov
lock
pop
andl
out
sahf
out
rol
mov
test
pop
gs
dec
mov
adc
xchg
cmp
ljmp
mov
sub
mov
mov
test
xchg
push
outsl
divl
bswap
in
inc
push
sbb
or
mov
xor
std
stc
sub
xor
inc
shl
stc
or
js
insb
aas
xchg
and
loope
aaa
ret
push
pop
adc
test
dec
push
subb
xchg
ja
popf
mov
inc
or
add
mov
adc
add
fiaddl
push
ja
inc
jbe
and
adc
pop
cs
jae
shrl
scas
insl
cwtl
cld
xchg
test
mov
mov
sub
push
insb
mov
inc
inc
pop
sbb
popa
or
xlat
shlb
or
mov
push
hlt
dec
mov
imul
ret
xor
mov
lods
shlb
cmp
int
or
jl
mov
rcr
jbe
stos
lret
push
xchg
test
or
into
scas
mov
fcomps
pushf
xchg
lcall
jb
lahf
cmp
mov
stos
and
xchg
dec
lahf
xor
sbb
leave
inc
orb
inc
mov
loopne
mov
pop
dec
test
jnp
cwtl
in
mov
adc
cltd
stos
outsl
lea
pop
mov
jmp
aas
aas
dec
dec
inc
adc
js
pop
pop
sub
gs
and
and
dec
daa
lock
xchg
repnz
mov
loope
jmp
cmp
cmc
jp
popa
xchg
negb
sub
push
adc
adc
inc
mov
push
push
mov
leave
dec
pop
xor
sub
mov
nop
add
dec
clc
mov
mov
xor
je
je
shll
adc
xor
push
bound
pushf
sahf
dec
iret
adc
pop
and
jl
in
data16
mov
xor
mov
push
inc
xor
das
leave
insb
xchg
xor
and
cwtl
xor
outsb
xor
inc
shll
pushl
adc
fsubl
lods
inc
aam
out
roll
pop
jp
push
test
pcmpeqb
dec
dec
push
out
mov
insb
fisubs
adc
xchg
push
xchg
mov
cwtl
movsb
mov
repnz
mov
inc
and
adc
sub
xor
jno
popa
aad
xchg
cli
test
mov
cmp
or
lea
popa
xchg
xor
adc
cwtl
sub
lods
jp
push
dec
imulb
out
es
ja
les
add
lds
sub
cltd
jno
pop
pop
cmpl
lea
sbb
pop
mov
inc
movsl
movsl
sub
or
sbb
xchg
stos
pop
cmp
ficompl
int3
mov
push
imul
add
lds
mov
fstpl
jge
data16
add
pop
inc
pop
jl
in
addr16
stos
xchg
andl
adc
sahf
insb
lcall
inc
aam
test
test
fldt
cld
pop
and
outsb
mov
cmpsb
pop
sbb
adc
sti
out
sbb
jb
and
pop
xor
mov
loop
mov
mov
lcall
pop
xor
lods
sahf
pop
push
adc
or
std
sti
pop
pop
sbb
lret
jle
dec
mov
jns
dec
and
inc
and
nop
iret
sub
mov
enter
lds
jge
subb
mov
dec
fstpl
xlat
std
jp
sbb
nop
jmp
cmp
and
pop
lcall
push
popf
sti
lret
movsl
pop
jnp
adc
lret
sbb
div
push
imul
movsb
jbe
adc
ljmp
test
ja
jecxz
pop
mov
push
lret
mov
flds
fistpll
inc
into
dec
pop
out
js
mov
xchg
cmc
ja
mov
in
jns
mov
or
out
popf
mov
jns
sub
je
pusha
pop
mov
sub
ds
int
add
mov
sbb
das
mov
pushf
xor
pop
adc
xor
loop
sarl
sahf
arpl
xchg
int
mov
mov
enter
jo
rolb
ficomps
pop
mov
add
add
or
iret
lahf
sbb
add
incb
int
sbb
inc
and
and
js
in
mov
xchg
mov
leave
stos
cmpl
out
cmpsb
icebp
mov
xchg
out
pop
pop
js
out
adc
xchg
arpl
fidivrs
cmpsb
push
dec
test
pushf
repz
test
lods
jge
aas
jmp
xor
and
into
gs
pop
stos
push
mov
fmuls
push
xor
adc
in
or
into
inc
push
test
imulb
sbb
xchg
mov
mov
adc
fidivl
test
fbstp
mov
mov
push
std
ds
xchg
cmp
insl
push
mov
inc
sub
call
into
pusha
push
scas
mov
gs
jb
dec
cmp
lahf
out
shlb
pop
xor
cmp
pushf
in
insl
insb
and
in
popa
fisttpll
insb
mov
rcl
lahf
jo
test
xor
test
sbb
stos
out
gs
mov
addb
push
xor
xchg
adc
xchg
popf
mov
dec
pop
inc
dec
movsl
gs
popf
mov
mov
add
xchg
out
lods
jmp
dec
stc
xor
repnz
aad
xor
jo
and
test
stos
push
fwait
movsl
outsl
jnp
cmp
addr16
pop
cmp
adc
mov
lret
lea
movsl
push
pop
movsb
push
adc
or
ja
xchg
je
and
icebp
pop
pop
mov
dec
pop
std
mov
stos
outsl
insb
test
nop
add
pop
dec
sub
xlat
js
xor
or
push
jb
push
inc
push
sub
lods
stos
xor
inc
pusha
pop
or
out
mov
push
mov
push
xor
dec
xor
pop
fstpl
fsubrs
enter
fldl
movsl
cmp
testb
loopne
test
inc
xor
les
push
sar
push
rolb
in
stos
in
add
out
psubd
mov
es
jb
paddb
int
and
int
xchg
lret
jg
jo
mov
mov
ljmp
push
sbb
mov
or
movsl
push
ret
insb
jmp
push
addl
in
lea
jmp
mov
stc
or
dec
xchg
dec
cli
xchg
mov
fldenv
aaa
pop
lea
repz
push
aaa
jle
adc
or
mov
add
cmpsb
fsub
inc
maxps
mov
mov
or
lcall
cld
mov
loopne
add
popf
adc
pop
mov
push
or
hlt
pslld
cmp
push
test
jmp
adc
iret
lock
pop
scas
insb
xor
pushf
in
cmp
cmp
add
icebp
mov
aas
inc
ret
sbb
sub
out
cmp
inc
mov
xchg
cmp
xchg
cld
cs
out
jecxz
cmp
xorl
cmpsl
dec
mov
cmp
and
push
fnstenv
lds
add
test
mov
cmc
mov
sub
nop
scas
push
fadd
mov
and
mov
mov
shlb
and
lods
decb
fnstsw
faddp
popl
xchg
pop
enter
add
jo
dec
lods
shr
mov
mov
jecxz
dec
xor
dec
push
popa
cld
jno,pt
lds
inc
or
pop
test
mov
cwtl
nop
rep
push
push
addr16
mov
xor
mov
mov
cmp
sbb
jmp
int3
inc
pop
mov
jns
xchg
cmp
mov
inc
icebp
rclb
or
jmp
fucomp
negl
and
arpl
cli
or
add
hlt
arpl
jle
fwait
es
mov
mov
adc
fdivrs
jp
fisttpll
insl
daa
and
cmp
sti
notb
mov
mov
pop
sbb
push
stos
push
subl
popf
mov
mov
popa
imul
fists
sub
fs
push
cld
pop
push
pop
ja
xor
or
mov
aad
fadd
mov
std
or
mov
dec
fstpt
inc
jg
sbb
in
inc
push
and
gs
xor
xchg
mov
mov
cs
cmp
xchg
mov
jge
inc
push
xchg
cmpsb
ret
cli
inc
add
inc
aam
push
pop
xor
xor
push
rol
mov
scas
outsl
cs
mov
xor
dec
inc
push
or
mov
inc
lock
leave
out
push
jne
out
xor
shlb
int3
mov
pop
ret
setno
add
lock
push
mov
movsb
push
movsb
lea
cmpsl
jae
xchg
mov
inc
cmpb
imul
xchg
scas
mov
lret
call
inc
jbe
pushl
inc
ja
movsl
jns
inc
nop
inc
sub
ss
int3
sub
push
ds
shl
or
jp
mov
xchg
adc
cli
or
enter
mov
mov
sbb
and
out
mov
stc
popf
jnp
shlb
and
sub
ret
cmpsb
clc
and
arpl
int3
jbe
test
lock
push
sbb
add
mov
cmp
cwtl
cmp
negl
pop
push
and
mov
pop
movsb
sahf
outsl
adc
mov
sub
mov
scas
xor
mov
ljmp
bnd
and
out
mov
or
fwait
bound
sbb
imul
dec
push
insl
movsb
sbb
repnz
mov
inc
dec
out
imul
pushf
fwait
roll
jl
aas
das
icebp
mov
pop
test
in
cltd
mov
mov
xor
fadd
mov
pop
cmpsb
jp
mov
jo
cs
pop
test
pop
mov
lods
lret
sbb
mov
mov
nop
inc
dec
cmp
testl
dec
jne
sub
mov
push
fisttpll
cmp
fdivl
imul
sbb
cs
js
test
adc
mov
sbb
jo
pop
inc
mov
out
sbbl
push
cmpsl
sbb
movsb
out
mov
push
pop
clc
out
aas
mov
iret
sti
daa
mov
sub
aaa
fisttpll
ficoms
xchg
in
loope
and
shlb
mov
xor
inc
mov
inc
mov
jns
and
add
outsl
movsl
idivl
pop
pop
sub
adc
stos
loope
mov
ja
ja
ret
div
fistpll
rol
lahf
sub
cmp
or
test
or
popa
mov
jbe
data16
push
sub
inc
or
sbb
xor
mov
xchg
js
jns
pop
popf
cmp
xlat
jmp
mov
mov
fcomp
dec
inc
mov
aad
and
lods
push
adc
xor
mov
das
and
xchg
cmp
ss
mov
lahf
repnz
add
les
jns
scas
push
sub
push
jle
pop
inc
test
cmp
mov
mov
repz
push
in
loopne
adc
add
fdecstp
pusha
aad
pop
mov
adc
scas
repnz
arpl
sbb
pop
js
daa
divl
adc
inc
cmpsl
int3
adc
pushf
into
sbb
jae
xchg
fmull
in
test
cmp
loopne
int
fnstsw
hlt
inc
je
add
leave
int
xchg
or
in
cmp
loopne
sub
xchg
cmpsl
loopne
xchg
xor
xchg
pushf
xchg
xchg
add
pop
push
repnz
cwtl
pushf
stc
daa
lods
arpl
lcall
mulb
jbe
pusha
fsubr
sbb
cltd
push
pusha
mov
mov
push
mov
sti
mov
cmp
loop
sbb
fistps
jp
lds
pop
in
std
bound
sub
mov
aad
lds
adc
aas
call
fidivl
int3
loop
je
mov
outsb
cmpsb
adc
rolb
or
pop
push
sarb
mov
xchg
fsubrs
repnz
jne
out
push
jo
dec
adc
add
sub
inc
dec
xchg
faddl
pop
cmp
xchg
aas
jo
cmp
mov
inc
into
repnz
cmp
xchg
push
mov
test
in
sbb
into
xchg
sahf
popa
xchg
daa
cld
pop
pop
daa
and
or
sub
repz
inc
jno
ss
mov
mov
nop
inc
into
inc
sbb
mov
repnz
lret
clc
jae
jbe
jecxz
jp
sub
in
insb
in
jne
jno
js
sub
aad
cli
or
cmpsb
dec
sbb
xor
andl
es
or
jbe
in
test
xchg
sub
lods
push
jle
add
mov
fs
rcr
push
les
sbb
dec
test
jnp
daa
cmpsl
cmpsb
and
in
frstor
pop
iret
cmpsl
adc
inc
add
add
add
mov
mov
imul
add
daa
adc
les
cmp
clc
popf
aaa
addb
or
mov
adc
sbb
ss
mov
mov
addr16
sti
sub
cltd
pop
fisubrl
inc
fdivrs
push
sahf
shrb
and
nop
daa
xor
lret
adc
xchg
adc
push
or
mov
and
add
pop
or
add
inc
inc
mov
xor
and
mov
or
fmul
imul
into
sub
imul
and
or
xchg
daa
cmc
or
lods
lret
jmp
cwtl
rep
jne
repnz
outsb
push
pop
mov
adc
jo
and
out
inc
sub
inc
popf
jmp
inc
pop
fimuls
in
jmp
pop
cli
pop
push
sub
push
push
subb
mov
jno
cld
xor
dec
sub
fiadds
dec
test
into
test
stos
out
jle
ret
mov
xlat
mov
aas
movsb
movsb
lock
lods
ret
stos
xor
pop
or
imul
push
frstor
sub
ja
aas
add
loopne
rcrb
cmp
jae
imul
sbb
addr16
push
dec
pop
jo
mov
sti
dec
xor
fisubrl
addr16
sbb
cmc
dec
in
clc
ljmp
pop
pusha
sub
adc
mov
or
pop
fnstsw
adcl
inc
imul
repz
in
cltd
int3
push
nop
pop
adc
xor
popa
outsl
push
fwait
dec
sub
sub
push
mov
sub
xchg
out
or
cmp
adc
cmp
daa
data16
xchg
mov
imul
stos
add
mov
data16
or
mov
pop
mov
jmp
repnz
lock
mov
xlat
and
int
sub
cmp
jno
mov
xlat
bound
lock
and
and
out
ljmp
or
ss
jno
lock
add
jg
clc
clc
fnstcw
fadds
test
sbb
lea
push
ljmp
mov
pop
movl
push
mov
pushf
or
in
arpl
xlat
ret
inc
lret
xor
mov
jecxz
xchg
dec
sub
movsl
mov
cli
movsl
inc
scas
idiv
not
das
or
sbb
out
psllw
sub
xor
out
fwait
mov
ds
leave
cmp
lods
push
addb
mov
sbb
lret
int
lock
dec
or
test
or
xchg
add
clc
or
daa
fs
sub
lahf
mov
data16
lahf
loop
std
sbb
mov
add
sbb
jb
add
fsubrl
mov
inc
inc
jnp
cmp
roll
mov
test
add
xchg
js
pushf
int3
xchg
add
cmp
scas
push
mov
add
aaa
int3
lret
popf
adc
cltd
push
mov
scas
repnz
adc
adc
pop
fs
cwtl
jle
add
cli
mov
sbb
sbb
push
jbe
dec
mov
mov
arpl
incb
test
cld
xor
xorl
sti
xchg
fbld
aad
sbb
call
test
nop
push
js
mov
add
sbb
js
adcb
stc
fisttpl
in
fcoml
stos
div
and
stos
push
sbb
fildll
pop
lds
jge
mov
xchg
mov
sub
dec
rcrl
cmpsl
cltd
shlb
mov
les
ds
jno
sub
and
and
dec
popf
lcall
jp
movsb
jmp
dec
sti
ss
jp
das
and
lret
mov
ja
or
stos
jb
fidivl
in
cmp
sbb
les
mov
cmp
jg
inc
cltd
inc
in
or
out
aas
sbb
jbe
add
cmpsl
sbb
cmpsl
ja
stc
mov
mov
push
sbb
pop
mov
stc
jne
xor
or
mov
icebp
cltd
pusha
xchg
shrl
pushf
xchg
ret
xchg
pop
sbb
sbb
xor
ror
lods
sarl
xchg
mov
int
rcll
out
add
movsb
out
mov
xchg
mov
pusha
jle
test
mov
pushf
fldl
int3
jns
xchg
cmp
add
pop
and
cmpsb
fldl2e
lock
dec
daa
shl
add
ret
es
add
pmaxsw
call
out
les
fsubl
push
pop
pusha
push
sub
pop
or
pop
sahf
psraw
xor
or
mov
popa
jo
clc
test
mov
sti
add
es
push
sub
in
dec
jo
out
adc
inc
dec
mov
ss
dec
in
mov
xchg
cld
jbe
push
das
or
push
lcall
sub
jl
mov
xor
pop
into
push
adc
jo
into
aaa
arpl
lea
xchg
xchg
dec
xor
sub
pop
jle
jle
xchg
and
mov
sbb
fs
into
jne
jb
mov
shl
outsb
fwait
iret
sbb
test
lret
in
push
push
shl
cmp
insb
loope
add
inc
and
mov
adc
and
inc
imul
xor
or
jmp
movsl
cmp
xchg
int
add
adc
xor
mov
push
test
push
xor
test
test
out
pop
xchg
ljmp
push
mov
add
aaa
push
mov
inc
sahf
jl
js
sbb
fwait
in
sbb
loop
mov
or
xor
or
pop
stc
gs
inc
push
and
cmpsl
ljmp
popf
sbb
push
mov
pop
pop
imul
les
jno
in
xor
mov
js
fisubs
popa
jmp
pusha
fistpl
xor
dec
mov
sbbl
push
aas
jmp
dec
mov
test
cmp
xchg
and
cmc
cmp
pop
push
dec
cmp
mov
or
sub
mov
sub
cmp
and
push
xchg
mov
hlt
push
xchg
js
dec
mov
je
mov
mov
clc
inc
and
dec
and
mov
mov
outsb
push
jmp
aad
jmp
fidivs
xchg
mov
jmp
stos
mov
hlt
pop
iret
fisttpl
aad
add
aaa
lock
or
mov
pop
xchg
jnp
outsb
dec
jl
outsb
inc
insb
mov
movl
ret
pop
pushf
cli
das
ret
icebp
cli
mov
cld
test
ja
ds
inc
les
xor
inc
notl
stos
xchg
xchg
add
push
mull
sbb
adc
ja
sub
icebp
xchg
xlat
cltd
pushf
jge
sti
jmp
cmp
jl
adc
push
outsb
and
movsb
or
cwtl
lcall
je
sbb
sub
sbb
push
xrelease
call
ljmp
std
cli
jbe
xchg
jge
jle
xchg
sti
or
or
das
cmp
mov
cmp
jl
and
fldl
xchg
sahf
cmp
dec
in
bound
aam
inc
add
sbb
cmpsb
jp
scas
fcoms
inc
push
and
into
cmp
dec
popf
incb
jne
mov
xorl
dec
xchg
arpl
add
adc
das
cmp
inc
repz
mov
inc
jl
cmp
xchg
jo
mov
xchg
push
pop
pop
clc
pop
jge
mov
arpl
and
orl
cs
hlt
imul
jg
dec
dec
outsl
push
test
pop
and
imul
pop
inc
sti
sub
inc
inc
cmp
add
pusha
out
aaa
cmc
ljmp
push
jbe
orl
dec
loope
mov
sti
sbb
loop
enter
ljmp
repnz
sub
fwait
push
js
lea
cmpsb
js
cmp
pop
mov
xchg
loop
sar
and
jbe
mov
xor
fsubr
lods
call
addr16
xchg
jno
mov
ffreep
js
bound
mov
rol
adc
or
outsl
and
aaa
inc
mov
sub
loope
adc
and
shr
sub
test
ret
mov
sub
sub
das
sbb
xor
xor
dec
cvtps2pi
jbe
inc
test
movsl
xor
sti
add
cld
mov
xor
xchg
pop
ljmp
pop
int3
aam
jns
shr
mov
cmp
fnsave
inc
xchg
loop
mov
aaa
insl
outsb
iret
and
jle
cmc
push
negl
ffreep
pushl
push
push
test
pop
xor
aas
ss
add
mov
test
xchg
adc
cmp
or
gs
out
pop
push
mov
data16
lgs
mov
jl
call
mov
adc
outsl
xchg
jmp
mov
mov
lods
lret
and
pop
nop
fwait
jl
std
shll
mov
movsb
dec
loope
decb
out
leave
nop
loop
das
aam
fldt
xor
outsb
shl
scas
shrl
loopne
sahf
repz
out
pop
mov
movl
nop
inc
add
xchg
mov
push
rorl
fistpl
loope
jnp
mov
cmpsl
out
lods
push
jb
pop
icebp
jnp
mov
pop
xchg
fisttps
int3
xor
mov
push
dec
hlt
mov
or
add
sub
inc
cwtl
mov
pop
sbb
dec
dec
dec
push
adc
clc
inc
sbb
imul
mov
or
mov
sbb
insb
test
or
sub
in
xlat
movsb
xchg
popf
dec
mov
mov
sbbb
mov
pop
shlb
mov
ja
sahf
or
dec
mov
aam
cmp
sbb
lret
mov
bound
orb
push
dec
mov
pop
fistpl
sbb
lods
data16
mov
outsb
and
pop
jmp
arpl
add
and
enter
stos
dec
imul
sub
mov
icebp
das
inc
pop
jb
shlb
sub
jbe
dec
std
jl
cmc
icebp
cli
xchg
rol
and
mov
xor
jmp
xchg
pop
mov
dec
pop
mov
jnp
cmp
dec
pop
push
imul
sbb
repnz
jb
sarb
mov
xor
dec
jno
iret
mov
mov
andl
out
lret
setns
pop
xchg
sbb
es
and
std
ret
daa
sub
stos
mov
testb
outsl
push
out
inc
fnstenv
ret
mull
rclb
jo
pop
sub
loopne
mov
sbb
mov
imul
cmp
jb
insl
pop
out
jecxz
xor
mov
mov
es
movsb
cmp
cmp
xchg
push
jno
xchg
loopne
subb
aam
ja
shlb
xor
mov
aaa
inc
push
xchg
pushf
or
ss
fsubs
dec
insl
dec
sub
jo
sub
push
dec
and
mov
xor
sub
shll
lds
jne
mov
mov
pop
add
xchg
mov
pop
pop
out
push
div
es
xor
fcmovbe
pop
aam
ljmp
add
xchg
xchg
push
mov
mov
or
mov
inc
lods
xchg
mov
xchg
aad
xchg
xor
mov
gs
faddl
push
rolb
call
iret
ficoms
loop
inc
popf
push
repz
xor
daa
jge
in
rorb
std
mov
bound
xor
inc
iret
add
lods
lahf
pushf
and
xchg
or
pop
movsb
popf
ja
movsb
ss
xchg
adc
pop
xchg
mov
movsb
lods
add
pop
andb
jle
jo
icebp
dec
frstor
fsub
xor
mov
lods
daa
insb
pop
mov
or
sub
sub
xchg
and
sbb
data16
mov
fnstcw
out
sarb
stc
ja
scas
test
add
insb
or
pop
imul
xchg
fmul
dec
inc
mov
xchg
mov
dec
rcrb
inc
das
jae
fwait
adc
mov
loop
xchg
pop
mov
daa
imul
in
xchg
inc
lea
mov
mov
push
and
sbb
jae
dec
hlt
mov
mov
lds
bound
movsb
xchg
xchg
icebp
lcall
mov
cli
pop
mov
test
adc
cmp
or
mov
xchg
aam
mov
sbb
sub
jns
inc
outsb
mov
jg
bound
ds
mov
int3
sbb
mov
iret
cmpl
push
mov
mov
pop
xlat
mov
sub
mov
sti
mov
rorl
cmpb
js
fmull
dec
mov
cs
fs
xchg
and
adc
nop
jno
and
dec
jbe
add
mov
test
dec
or
daa
incb
pusha
fnsave
ss
test
or
add
pop
sub
mov
ret
mov
fstl
dec
lods
test
adc
mov
orb
push
dec
cmc
xchg
or
mov
xor
sub
inc
mov
jb
push
popf
cmp
fmull
add
jmp
test
sub
stos
mov
mov
adc
mov
jmp
lcall
ds
fiadds
dec
cwtl
mov
pop
dec
movsl
subb
xor
jo
xor
aad
test
lods
and
add
mov
mov
adc
mov
aas
push
cli
dec
aad
or
cld
shlb
ljmp
xchg
xor
pop
fcmovnb
mov
mov
or
pop
pop
loop
dec
push
addr16
leave
push
pop
test
test
push
aam
adc
fidivrl
cltd
or
mov
jo
fwait
call
cmp
mov
push
test
push
and
dec
xor
dec
dec
mov
pushf
fcmovnu
inc
imul
pop
xchg
imul
xor
jno
mov
lcall
cwtl
xchg
int
mov
push
sbb
push
insb
xchg
inc
outsl
loopne
push
sarl
dec
push
sahf
adc
xor
cmc
roll
rorb
mov
push
shrl
adcb
sub
movsl
mov
jo
xchg
scas
mov
add
scas
icebp
mov
adc
push
inc
jecxz
push
loopne
jmp
mov
sub
sarb
mov
xchg
dec
fadds
add
mov
les
jge
out
out
shrb
and
insl
bound
adc
mov
call
leave
mov
xor
into
xchg
mov
fsubs
lret
roll
decl
jp
mov
xor
shll
fcompp
mov
sub
push
pushf
mov
shll
and
or
shlb
ja
stos
xor
mov
dec
test
push
mov
xor
jae
dec
loopne
iret
arpl
pusha
and
stos
lret
inc
es
loope
inc
fxch
and
inc
call
stos
outsl
sbbl
fldt
jbe
mov
add
xor
jbe
int3
insl
sub
ficoms
push
lcall
adc
adc
out
sar
cmp
imul
stos
inc
sbb
add
sti
cltd
add
popa
push
test
inc
es
call
pop
xlat
push
sahf
dec
mov
cmpsb
push
push
xchg
test
sbb
push
mov
fwait
out
sbb
cmc
insb
push
insb
repnz
pop
dec
mov
scas
push
mov
int3
mov
stos
pop
js
add
dec
cmpsl
pop
xor
mov
mov
stc
popf
stos
loopne
repnz
ds
jp
lea
sahf
or
ret
shrl
mov
insb
loop
mov
push
insl
adc
cld
cmp
testl
xor
and
cli
xchg
int3
cltd
pushf
xor
push
pop
adc
xchg
jge
cmovo
mov
xor
xchg
xor
sti
cmpb
push
lret
aad
out
pushf
push
push
adc
add
sub
lret
or
cmpsb
scas
jmp
sub
jmp
jbe
pop
cmp
outsb
ror
xchg
xchg
ljmp
loop
dec
cmpsl
cmp
lods
sbb
push
mov
ds
or
stos
pop
jno
pop
out
loope
xchg
ret
jnp
pop
loope
lahf
mov
arpl
mov
nop
or
ffree
mov
ja
outsl
das
das
leave
stos
les
nop
imul
jno
sti
sub
inc
in
adc
imul
push
mov
mov
push
cmp
jb
faddl
push
and
or
mov
dec
mov
mov
iret
call
push
icebp
ret
jp
xorl
ljmp
imul
mov
adc
add
mov
cmpsl
ljmp
stos
sahf
or
pushf
outsb
jne
lods
push
call
and
fmull
adc
fdivrl
jge
sub
cmp
sbb
fbld
mov
sbb
bound
dec
out
cmp
xchg
mov
imul
mov
subl
push
jno
sub
mov
push
dec
cmp
test
lea
dec
dec
push
in
pop
sarb
dec
pushf
adc
inc
dec
stc
xchg
add
jnp
loopew
icebp
push
xor
shll
or
mov
pop
mov
dec
xor
or
daa
les
and
jbe
gs
cmc
xchg
ret
out
subl
add
mov
xor
xor
pop
or
xor
lret
add
add
jno
fldt
push
iret
cmc
and
pop
insl
xchg
jb
push
cmp
icebp
or
lds
or
push
lock
movsb
jmp
xchg
inc
leave
mov
ret
dec
add
adc
sahf
and
mov
imul
or
out
cld
and
outsl
rclb
jae
mov
mov
sbb
jae
jg
push
sti
mov
mov
mov
int
adc
mov
sahf
les
ds
cmp
add
mov
xchg
dec
xor
test
scas
addr16
ficompl
test
pop
shlb
je
adc
or
mov
fs
vmwrite
push
jnp,pt
aas
jp
add
aaa
and
mov
jmp
ret
lods
pop
or
mov
sti
rclb
iret
lret
sbb
inc
inc
call
arpl
lcall
mov
xchg
and
fldt
in
and
sbb
jg
mov
mov
or
js
std
lret
or
lea
fs
or
or
minps
mov
mov
cmpsb
mov
xchg
xor
mov
repz
int3
pop
sar
inc
adc
stos
imul
mov
std
add
pop
rolb
push
jns
stos
or
js
mov
call
and
push
lret
push
stos
push
sub
push
mov
and
pop
sti
mul
cmp
stos
xlat
inc
and
cmpl
popa
sti
les
shll
xor
cmc
scas
add
jg
lock
dec
inc
xor
out
push
outsl
lret
adc
addr16
jmp
xlat
icebp
fdiv
pop
std
fwait
jle
jo
mul
xor
pop
pop
mov
imul
scas
or
add
in
bnd
xchg
mov
add
jp
xchg
xor
leave
inc
sub
mov
adc
pop
adc
sub
pusha
cmp
dec
sbb
nop
sbb
repz
pop
bound
scas
ljmp
rcr
enter
icebp
jns
insb
pop
mov
add
imul
sub
mov
sub
jg
shrl
lcall
dec
dec
lret
and
cwtl
lea
push
push
jmp
lahf
mov
dec
pop
ljmp
int
dec
sti
pop
fcomip
fmull
popf
xchg
add
idivb
cmp
lahf
cmp
pminub
aas
xchg
scas
jle
fiadds
fiaddl
pop
insl
mov
jb
xor
xor
push
mov
fwait
xchg
mov
dec
test
lahf
outsb
push
jl
shrl
iret
scas
mov
scas
cs
rolb
sub
mov
adc
mov
sub
mov
add
mov
jle
popf
and
xchg
or
hlt
and
sar
push
bound
js
xchg
js
addb
jmp
sub
out
fwait
jo
gs
and
ret
or
test
int3
js
jns
in
mov
dec
or
cmp
mov
shrb
sarb
or
mov
nop
fsubr
sub
cwtl
adc
mov
sbb
cmp
test
adc
push
and
int
fs
dec
lods
adc
imul
scas
or
out
ljmp
jne
ss
insb
xchg
xor
shrl
jmp
test
sbb
push
xor
push
orl
repnz
add
aad
cli
or
jne
das
dec
clc
xchg
jo
sub
stos
stos
add
cmp
inc
push
insb
mov
lock
inc
xchg
push
xor
inc
pop
adc
inc
ja
aam
jp
shll
mov
mov
enter
cmp
xchg
pop
xor
frstor
lock
and
mov
stc
dec
insl
test
sub
mov
xor
popf
jns
ficomps
lods
sbb
cmpsb
jne,pt
std
les
and
data16
mov
jo
pop
mov
mov
pop
les
cld
insl
mov
xchg
les
mov
mov
mov
pop
sbb
sbb
aam
or
inc
clc
outsl
rcrl
mov
data16
pushf
stos
test
leave
stos
sahf
es
sub
and
bound
sti
or
lds
filds
mov
aaa
into
push
pop
sbb
aad
lahf
cmpl
orb
fcompl
loopne
outsl
jmp
sbb
inc
jae
mov
push
lret
cltd
adc
mov
gs
ret
jg
push
sbb
hlt
in
clc
lcall
pop
roll
push
fs
mov
out
inc
or
adcl
mov
dec
fwait
lods
inc
data16
pop
xlat
loop
or
jno
les
stos
sbb
mov
add
xchg
sub
sbb
xor
sbb
mov
pop
jecxz
les
xor
mulb
jmp
jbe
popa
jl
inc
mov
jae
add
pop
inc
sbb
inc
outsb
jae
jmp
pop
jg
push
fs
jbe
jo
rorl
inc
mov
das
mov
push
add
or
mov
stos
mov
xor
mov
ja
notb
bnd
xlat
gs
mov
imul
add
pusha
xchg
test
inc
push
scas
jnp
out
mov
cmpsl
dec
in
pop
inc
nop
ja
lret
jge
mov
fldl
pop
adc
jp
stos
mov
hlt
repz
xor
mov
add
add
call
mov
aad
lret
pop
mov
push
add
scas
push
daa
add
movsl
push
inc
hlt
xchg
cli
mov
xchg
inc
sti
dec
xor
sbb
lcall
adc
faddl
testl
loopne
clc
mov
rep
dec
sbb
cmp
mov
cmpsl
mov
mov
jge
and
pop
inc
popa
pop
test
popf
jecxz
xor
fcmovne
stos
fwait
daa
out
scas
inc
mov
push
push
add
out
inc
sub
mov
mov
loop
mov
dec
mov
inc
mov
fbstp
rorl
je
je
jo
mov
sbb
or
mov
mov
push
xchg
mov
aam
lcall
andb
or
jb
repnz
call
jo
das
sub
and
repnz
push
es
xchg
rcll
or
aam
xlat
daa
cmp
jne
inc
or
int3
sub
dec
das
push
repz
mov
je
cmp
mov
mov
loope
sarl
and
adc
add
xchg
jbe
in
stos
cs
dec
fdivrs
mov
sub
stc
popa
sti
mov
adc
rcrl
pop
test
mov
xchg
arpl
loopne
mov
ljmp
mov
jg
dec
clc
insb
lret
cmpsl
adc
dec
sbbl
pop
sbb
aam
adc
sar
mov
sahf
cmp
cmp
push
out
adc
in
mov
pushf
lea
add
jo
dec
dec
add
xchg
cmpb
inc
xchg
mov
and
into
icebp
popa
adc
cs
daa
popf
fistps
jmp
iret
push
fcoms
imul
jl
lahf
mov
outsb
mov
inc
cli
mov
mov
adc
repnz
xor
or
push
push
lods
in
mov
andb
mov
ret
jp
int3
test
scas
xor
fmuls
cmp
inc
inc
adc
add
push
and
or
cli
jp
adc
mov
and
xchg
dec
aas
mov
and
push
jne
mov
jo
movsb
inc
imul
cltd
and
ds
fsubs
loope
or
rclb
test
inc
jg
push
ds
scas
fnstsw
xor
adc
leave
fisttpl
scas
cmpsl
rorb
enter
sub
mov
and
out
and
imul
fs
mov
arpl
sbb
xchg
dec
sbb
mov
and
jge
jae
add
insb
jl
adc
sub
inc
sti
lret
add
shlb
popf
and
imul
cmp
xor
popa
add
mov
fisttpl
or
or
jmp
shlb
cld
insl
test
ja
jbe
pop
ja
xchg
stc
push
popf
jmp
call
xor
adc
insl
and
jle
std
xor
mov
inc
push
xor
inc
daa
xchg
push
cwtl
pushf
pop
sbb
cmpsb
cmp
mov
add
pop
sub
ds
xchg
push
ret
xchg
inc
lods
int3
dec
cmpsl
jl
roll
out
dec
sub
add
fldl
imul
ja
sbb
call
pop
insl
xor
push
mov
ret
fmull
ret
xchg
bound
fucomip
jg
sub
xchg
lret
adc
imul
add
adc
add
or
mov
test
mov
data16
and
stc
ljmp
pop
andb
stc
add
pop
sub
mov
cmpsb
arpl
mull
fiadds
pop
pushf
aam
rorl
mov
mov
add
lods
mov
sbb
jb
or
outsb
lcall
mov
pushf
mov
fwait
popa
fwait
xchg
es
mov
pusha
pop
sub
xor
push
test
cmpsl
lahf
add
or
repz
loop
jnp
push
xchg
push
push
rorb
jp
and
adc
pop
pop
mov
mov
lret
lcall
aas
sub
mov
xor
lcall
stc
cltd
rol
enter
scas
in
int3
push
inc
push
inc
push
sub
cli
popa
jns
sbb
jge
scas
dec
pop
mov
add
inc
add
out
xchg
scas
and
sub
icebp
fwait
pop
xchg
fs
rclb
and
out
and
add
cmp
les
xor
cwtl
dec
icebp
out
aas
hlt
nop
xor
jl
or
add
aad
mov
scas
push
lds
jae
cmp
add
push
or
push
movsb
popa
orb
lahf
pop
enter
sub
lcall
rcrl
push
inc
pushl
ficoms
test
sbb
fimuls
xor
movsl
sub
sub
in
jo
mov
les
les
into
movsb
push
push
mov
stos
in
dec
sbb
mov
sub
fisubrl
pop
fnstenv
inc
or
pop
mov
adc
jnp
xor
push
inc
pop
out
lcall
add
aam
fistpll
and
ja
nop
stc
add
push
cmc
mov
ret
pop
gs
ds
sub
stc
add
decb
push
cmpsl
test
stos
aas
sbb
fistpll
or
inc
xor
ss
push
jl
mov
xchg
adc
cli
sub
jg
nop
jg
or
sbb
femms
mov
icebp
pop
jae
rclb
fnstcw
pusha
je
push
lods
xor
xchg
aad
cli
adc
lcall
imul
cltd
and
dec
dec
test
pop
daa
sarb
pop
or
popf
loope
out
scas
dec
inc
sbb
stc
repnz
fmuls
into
mov
or
dec
inc
icebp
pop
adc
lahf
insb
lahf
in
lret
stc
out
test
push
sub
sbb
cltd
scas
fldcw
mov
sub
pop
inc
push
cmc
add
fdivs
leave
push
aaa
inc
ror
outsb
or
repz
sub
push
das
ds
insb
dec
mov
jg
loopne
mov
adc
clc
sbb
outsb
ret
cmpsl
hlt
add
push
or
adc
mov
pop
pop
mov
dec
or
add
cmp
sub
push
sbb
enter
popa
stos
dec
scas
stos
pop
imul
cwtl
into
or
loop
mov
mov
test
enter
xlat
in
fnsave
mov
pushf
outsb
pop
jbe
add
leave
sub
pop
mov
cs
sbbb
ret
into
cmc
and
in
orb
mov
jmp
and
stc
add
mov
dec
jno
iret
aam
mov
jne
mov
insl
push
clc
pop
repnz
push
repz
outsb
mov
jbe
jmp
hlt
jb
inc
dec
push
mov
push
jmp
int3
repz
cmpsb
mov
rol
xor
loopne
add
scas
xchg
in
insb
iret
imul
lret
ret
push
std
mov
inc
hlt
arpl
push
arpl
mov
sti
pop
scas
jle
mov
push
pop
sbb
dec
cmpsl
aas
dec
popf
data16
mov
dec
andb
rclb
popf
aad
ficoms
mov
lcall
sub
popa
mov
test
jmp
movsl
pop
out
inc
psubusb
push
xor
lods
ret
jecxz
ret
fadds
popf
fsubs
dec
cmpb
lcall
out
and
push
mov
roll
cli
push
xor
pop
in
cwtl
cltd
jnp
cmpsb
pop
xchg
jo
mov
inc
les
out
jne
dec
rcl
hlt
hlt
popa
pop
fadd
add
and
rol
push
fs
sti
xor
cmpsl
pusha
stos
test
es
stos
repz
in
mov
enter
cltd
divl
push
fs
jg
ja
pop
xor
ficompl
aas
lock
inc
sbb
test
and
fsubr
aad
mov
pop
pop
test
xchg
ljmp
out
jbe
xchg
inc
jae
cli
push
push
outsl
fdiv
and
mov
add
inc
lret
aad
cli
andb
cmp
xor
in
movsb
dec
jo
inc
sbb
out
adc
jmp
pop
jbe
push
cli
push
sbb
mov
sbb
jl
decl
enter
or
or
sbb
jl
sub
fnstsw
jne
and
and
sub
dec
sub
dec
mov
xchg
cmc
xchg
sbb
adc
int3
jae
or
popa
cmp
mov
gs
adc
xchg
arpl
ds
jbe
gs
push
cmpsl
mov
dec
sub
ds
sbb
add
aad
mov
push
or
js
mov
gs
inc
xor
repnz
movsl
rcr
cmpsl
inc
mov
inc
std
or
jge
decl
std
sub
xor
xchg
or
or
xchg
adc
outsl
in
fidivrl
lods
stos
lea
arpl
ljmp
jbe
cmp
xor
mov
add
out
sahf
movl
jl
insl
lods
sub
gs
into
jns
lret
arpl
ror
cmp
addr16
fwait
xchg
mov
jecxz
and
data16
gs
repz
cmpsl
out
lahf
and
jl
lcall
push
loopne
inc
pop
jne
cltd
je
mov
ss
roll
sub
scas
push
and
dec
out
push
xor
adc
in
pop
js
or
std
xchg
xchg
xchg
push
xchg
sbb
pop
je
and
xor
fimull
and
notb
loope
fscale
arpl
lds
lods
and
cmp
cli
mov
out
or
cmp
jns
nop
inc
dec
bound
gs
mov
aam
and
cmp
data16
rol
mov
pushl
add
sti
mov
adc
ret
jbe
in
add
ljmp
mov
xor
push
xor
pop
stos
mov
pop
sbb
in
push
dec
sti
xchg
or
ljmp
or
sbb
jecxz
pop
pop
lret
pop
mov
push
adc
xchg
xlat
loop
adc
and
aam
jl
pop
inc
nop
mov
lcall
xor
insb
dec
roll
cmpsl
pop
xchg
mov
xchg
jnp
in
mov
push
scas
or
inc
rcl
xchg
testb
jbe
jb
or
adc
enter
push
push
sahf
lds
movsb
mov
jb
sbb
sub
hlt
jp
or
xchg
fstps
jge
push
frstor
in
outsb
xchg
fidivs
mov
fnstenv
push
inc
cmpps
push
icebp
mov
fmull
lock
xchg
stos
inc
nop
cmp
repnz
mov
fs
ljmp
xchg
loop
mov
xchg
push
jl
mov
add
add
fistpl
cs
xchg
inc
xchg
adc
and
mov
test
aas
not
adc
cmp
xor
nop
and
sbb
call
ds
lcall
xor
lock
mov
ja
testb
sbb
out
push
lds
sbb
jno
rcrl
inc
cltd
enter
arpl
jo
mov
mov
test
push
enter
dec
cmp
sub
push
mov
mov
mov
mov
push
mov
loopne
cld
test
lea
lea
add
andb
fstpt
push
mov
sbb
add
dec
in
cmc
jns
scas
dec
push
xchg
jno
fdivl
xchg
pop
lcall
pop
add
mov
xlat
cmp
mov
and
cwtl
add
movsl
lods
pop
sahf
sub
mov
daa
stos
aad
mov
ds
out
push
lcall
xchg
dec
aam
lods
sbb
lcall
xor
inc
mov
jne
mov
cmp
jne
push
mov
add
inc
sub
inc
aam
push
mov
rcl
loope
ret
mov
add
sbb
inc
int
pop
lds
leave
or
iret
fidivl
mov
loopne
mov
push
xchg
repnz
incb
imul
push
movsl
push
xchg
xchg
xchg
cmp
add
dec
dec
scas
je
lahf
aad
adcb
stos
xor
mov
or
jp
mov
ja
mov
insl
lea
das
push
iret
icebp
in
out
sub
mov
shll
sbb
ds
and
scas
jmp
outsb
dec
jecxz
or
fidivrs
jmp
stos
fidivl
mov
inc
testb
or
popf
lea
add
xchg
jge
cmc
jns
dec
incb
in
dec
rcll
sbb
sbb
inc
cmp
xchg
aas
jle
push
sub
sub
aas
and
mov
inc
lods
out
mov
mov
push
fimull
orb
in
ss
cmp
mov
or
pushf
ret
or
getsec
lods
or
push
sbb
cs
push
xlat
push
and
stos
ljmp
push
xor
repz
cmp
pop
mov
push
dec
mov
sub
hlt
add
in
pop
xchg
insl
int
mov
imul
and
cmp
xchg
dec
fldt
add
jae
fistpll
je
test
dec
jmp
mov
inc
sarb
hlt
ljmp
clc
xchg
cltd
cltd
inc
icebp
leave
mov
fs
mov
in
xor
sti
adc
adc
movsl
add
sub
cmp
sub
xor
add
sbb
push
ljmp
js
popf
jg
stos
inc
lods
bound
mov
dec
mov
adc
jne
testb
in
mov
inc
mov
pop
aaa
sahf
add
sbb
xchg
mov
aad
fisubs
stc
movsl
push
lcall
pusha
cld
cmpsl
cmp
mov
sub
out
jp
push
mov
sub
push
mov
push
mov
xchg
cmpsl
jg
ss
es
data16
fistpll
xor
xor
add
inc
enter
fwait
pop
jle
adc
lret
mov
mov
or
mov
repnz
mov
dec
cmp
push
in
xor
mov
cwtl
lcall
cmpl
inc
sbb
sbb
shlb
shll
fs
pusha
loop
mov
sbb
xchg
add
jbe
inc
push
lret
push
jp
popa
pop
in
daa
imulb
cs
or
sbb
mov
nop
cld
std
roll
lret
sbb
jo
int
movsb
clc
loop
sub
sub
bound
repz
scas
call
xchg
mov
out
dec
cltd
pop
and
or
jno
cmp
sahf
mov
mov
inc
mov
rclb
or
jecxz
fistpll
popa
sbb
dec
adc
repnz
or
ss
cwtl
addl
adc
dec
fcmovnb
dec
dec
out
or
jno
leave
pusha
arpl
mov
or
jecxz
loopne
push
cmpsb
and
sbbb
or
push
fnstcw
aad
inc
add
inc
out
jbe
xor
fidivrs
mov
iret
xchg
in
inc
mov
es
mov
outsb
jecxz
into
xchg
push
scas
icebp
daa
bound
jge
mov
jmp
sbb
cmpsl
std
pop
cmc
push
mov
xlat
mov
adc
inc
aas
nop
shlb
leave
push
popf
jmp
lahf
sub
sbb
hlt
sbb
clc
adc
add
imul
dec
cmpsb
push
stos
shlb
mov
push
mov
int
pop
sub
in
push
orb
fimull
mov
fistps
jecxz
insw
int
jb
int3
shrl
jns
xor
mov
xchg
jl
fnstcw
adc
xor
ja
js
push
dec
xchg
insl
enter
int3
loop
rcrl
ds
jo
sub
out
clc
or
fisubrs
dec
xlat
sbb
shll
mov
cld
dec
clc
mov
ljmp
stos
pop
or
lds
push
mov
in
lock
cmp
pop
fimull
mov
or
or
out
lea
cli
fcompl
jb
jno
sub
pop
fmull
in
sbb
or
lds
daa
xchg
sbbl
imul
test
add
add
lcall
push
mov
cmp
push
push
mov
incl
mov
pop
in
add
cmp
and
xchg
enter
push
loopne
sub
pop
xor
xor
ljmp
fucomi
in
cwtl
andb
aaa
pop
lods
sub
adc
fxam
mov
in
mov
push
mov
pop
aad
sbb
sbb
mov
xlat
jne
sub
xor
insb
push
sti
push
mov
push
pop
xchg
or
xor
insl
call
nop
repz
mov
mov
outsl
or
push
pop
hlt
dec
fwait
jg
add
sbb
lahf
aas
push
cli
add
ss
pop
xchg
imul
jo
std
test
mov
aam
aas
adc
bound
mov
loope
push
mov
in
in
cwtl
push
lcall
xchg
adcb
int
jg
xor
mov
pop
sbb
push
pushf
cmovne
sbb
addr16
mov
sbb
ljmp
cmp
int
inc
test
notb
outsb
stos
push
cmp
push
or
inc
and
xlat
dec
outsb
negb
cli
jecxz
inc
cmp
xor
push
push
testl
rcrb
fcoms
adc
push
adc
lods
das
clc
out
xchg
inc
add
jge
inc
and
fcom
jge
das
and
sbbb
xchg
andb
lods
xchg
hlt
ljmp
ljmp
repz
mov
cmp
repz
lret
rep
or
xchg
xor
in
mov
cwtl
pop
testl
stc
test
mov
jb
repnz
xchg
dec
aas
lods
shlb
mov
fistpl
imul
inc
std
xchg
nop
or
rorb
sub
mov
jbe
aam
push
ret
mov
ret
sbb
test
les
jle
call
and
in
pop
add
cs
imul
repz
adc
testb
incb
test
in
js
add
dec
sub
sbb
in
cmp
jg
jecxz
sub
dec
fsubl
jp
setge
inc
push
jnp
jle
cld
push
hlt
push
and
lahf
adc
push
cmp
jp
fidivl
popa
sub
ret
adc
ja
repz
cmp
push
xor
test
fcompl
pop
ljmp
pushf
jle
cltd
pop
pop
ss
insb
fimull
das
pop
scas
pushl
out
dec
cltd
out
sahf
mov
mov
cltd
dec
bound
xchg
in
scas
js
cmp
idivb
out
mov
sbb
insl
mov
dec
ljmp
or
xchg
xor
enter
mov
jne
sti
in
add
mov
pop
sti
out
cmp
push
mul
cmpsl
faddl
mov
rclb
push
in
adc
add
dec
pop
adc
cmpsb
loopne
pop
pop
jecxz
and
std
rcll
and
push
xchg
add
mov
push
mov
add
out
inc
pusha
push
ja
and
cmpsb
sub
pushf
call
lea
jle
ljmp
faddl
add
hlt
pop
xchg
data16
fldenv
xchg
loopne
sbb
mov
sbb
sbb
sbb
cmpl
and
fs
pusha
xchg
mov
pusha
insb
dec
popf
and
pop
subl
inc
push
sub
mov
iret
mov
icebp
inc
adc
jns
sub
pop
outsb
sbb
xchg
mov
jmp
adc
ror
js
xor
jg
in
adc
sub
aam
leave
cmpsb
ds
shll
lds
imul
fnsave
mov
repnz
sub
pop
arpl
adc
dec
clc
fwait
jecxz
sub
cs
mov
sbb
push
jb
cmpsl
or
xor
aas
insl
pop
std
movsl
mov
incl
into
ss
test
shr
out
mov
dec
in
lret
cli
ljmp
mov
subb
mov
imul
arpl
mov
imul
cli
fwait
pop
daa
insl
xor
sbb
or
jnp
pop
shl
shll
je
cld
push
test
mov
test
sbb
jo
pop
lea
ss
dec
sbb
jecxz
or
out
dec
stos
mov
stos
bound
cmp
sbb
loop
inc
mov
lods
sub
dec
fwait
or
mov
enterw
mull
aam
add
es
pop
les
jg
sbb
inc
pop
insl
fwait
shrb
aas
mov
inc
int
popf
adc
pop
pop
ret
xlat
lret
lea
movsb
push
lock
cmp
out
jb
int3
fadd
loopne
lea
orl
jmp
subl
icebp
lds
enter
xchg
lcall
add
pop
jno
or
mov
lahf
sti
lret
push
cmpsb
data16
pop
sbb
cmp
xor
add
pusha
mov
icebp
out
xchg
hlt
movsl
inc
jno
push
mov
out
imul
aaa
dec
movsl
out
jp
sarl
and
push
inc
dec
inc
push
jne
cmpsb
int
xchg
adc
jg
cmp
loopne
push
lods
xor
dec
ss
mov
mov
adc
mov
add
cmpsl
dec
aam
inc
lret
inc
jb
nop
outsl
out
sarb
dec
adc
sub
jmp
pushl
push
cwtl
mov
addr16
push
test
aaa
push
sbb
test
or
ret
push
dec
ficoml
and
pop
xchg
out
cmpsl
scas
xchg
mov
xor
sub
xor
sbbb
inc
and
lods
cmpsl
test
sbb
decl
stc
push
mov
push
push
inc
pushf
pop
ds
divl
xchg
adc
aaa
xchg
inc
imul
sub
ror
cmp
dec
add
cmpsb
out
shll
jb
mov
or
or
jp
jo
sbb
jmp
ja
push
jle
adc
xor
cwtl
and
jne
rclb
test
int3
xchg
ss
fmull
mov
pop
xor
test
inc
jmp
orl
dec
decl
loope
cs
das
or
cltd
fcomps
and
push
mov
jo
test
mov
xchg
push
int3
xchg
xchg
out
ret
jge
int3
inc
or
inc
and
adc
jae,pt
jb
pop
das
bound
stc
bound
lods
inc
jecxz
xchg
mov
cld
jns
ss
movsb
nop
dec
lret
jecxz
cli
and
sub
mov
add
jmp
jae
push
push
or
pop
in
mov
insb
stc
stc
scas
sbbb
lds
lcall
sub
adc
inc
and
pusha
push
or
xchg
movsb
jae
popf
hlt
xor
xchg
push
test
dec
dec
inc
test
jo
out
or
mov
push
ret
pop
iret
out
ss
call
js
movsb
out
rcrb
adc
repz
push
cmp
popf
jne
cltd
xchg
and
addl
shlb
notb
cmp
cltd
sbb
dec
cwtl
mov
pop
pop
js
iret
mul
xor
lahf
cmp
push
nop
dec
push
out
rcrb
aad
into
repz
pop
xchg
jns
inc
mov
pop
and
inc
int
fdiv
cltd
and
stc
daa
sbbb
aad
movsl
fisubrs
dec
push
jae
aam
jmp
push
sub
mov
fsubl
in
jno
cmp
add
mov
inc
in
das
dec
lahf
loopne
bound
pop
in
cld
inc
add
jg
test
inc
inc
add
cmp
push
insl
out
shl
xor
cmp
mov
pop
xchg
and
lods
fwait
jecxz
das
xor
pop
notb
out
dec
int
sbb
loope
xchg
ficomps
fists
je
negb
outsb
pushf
lods
fisubrl
push
inc
mov
popf
aad
or
push
mov
aaa
lods
mov
xor
out
sub
jmp
ss
not
nop
pop
mov
int3
and
js
movsb
leave
sbb
xchg
pop
push
push
add
dec
aad
and
aad
jle
lods
fadd
test
fstp
pop
xchg
sub
xchg
aaa
shrl
pusha
arpl
cmp
push
push
pop
scas
push
fld
and
shr
xor
sti
cmp
jb
movsb
ret
insb
je
cmp
mov
icebp
fdiv
cld
mov
mov
inc
inc
mov
push
lds
clc
sub
mov
inc
and
call
add
mov
lods
mov
mov
aad
sub
scas
aad
mov
pop
mov
mov
or
call
stc
jge
pop
xchg
lcall
ss
pushf
add
dec
adc
cltd
xchg
jns
sarl
dec
call
cmp
rolb
jo
dec
push
push
test
stc
outsl
push
add
out
imul
and
or
and
into
out
xor
push
jge
mov
sti
mov
mov
inc
cmp
fimuls
or
leave
test
adc
mov
loopne
add
jns
cmpl
imul
aam
mov
jge
mov
aam
mov
adc
dec
mov
pop
inc
push
rcrb
xorl
push
jnp
fimuls
cmpsl
nop
mov
les
movsl
mov
movsb
pushf
jp
aam
jg
stos
popa
enter
xor
xchg
das
inc
stos
out
inc
outsl
imulb
into
lea
mov
jo
lods
pop
les
popf
out
ret
push
pop
clc
imul
mov
sti
pushf
fwait
mov
ficoml
push
fldl
call
popf
push
xchg
adc
lret
adc
sub
xchg
cwtl
jmp
lret
shlb
jl
push
stos
dec
pop
mov
adc
mov
cld
push
dec
jl
xchg
xchg
xor
cli
movsb
xchg
push
ss
icebp
add
add
jb
pop
mov
movsb
xlat
pop
mov
fstp
lea
adc
inc
not
cmpsl
add
fstl
mov
ficoms
mov
or
cli
xchg
xchg
dec
push
sti
mov
mov
push
mov
fistl
stos
inc
cld
jle
rcrl
out
fbstp
icebp
mov
int3
mov
out
add
jno
mov
jmp
out
mov
mov
push
pop
test
dec
lds
cmp
mov
cmp
imul
xchg
mov
pop
add
repnz
push
add
movsb
jae,pn
rorb
pop
cmp
mov
inc
out
sbb
mov
mov
jmp
int3
add
lock
add
mov
cli
inc
xchg
mov
xchg
movsb
cmp
fnsave
pop
jns
push
idivl
ficomps
sbb
dec
mov
push
icebp
sbb
push
xchg
pop
xchg
sarb
sti
lcall
cmc
testb
adc
in
test
mov
push
push
in
mov
mulps
sarl
decb
or
xlat
and
inc
pop
pop
add
push
mull
cmp
push
fildll
sub
push
out
sbb
push
test
stos
sahf
adc
add
loop
shlb
xor
mov
sbb
sti
and
loope
and
repnz
inc
mov
push
cmpsl
sub
mov
push
fnstenv
mov
xchg
bound
mov
fcoms
or
xchg
dec
cmp
mov
lahf
and
loopne
into
call
sbb
dec
ficoml
ljmp
jecxz
out
idiv
repnz
lea
and
sbb
cltd
repz
iret
sbb
fsubrl
sbb
es
adc
pop
stos
jnp
cld
xchg
mov
mov
jge
repz
ret
cld
jmp
mov
and
or
jns
dec
jecxz
gs
scas
out
fildl
sub
pop
jne
popf
mov
push
inc
push
data16
inc
cli
or
lret
popf
in
icebp
adc
cmp
mov
and
adc
pusha
push
xor
mov
decb
call
or
pop
ret
push
jns
cmp
das
lods
stos
fstl
or
dec
mov
and
push
int3
arpl
aad
enter
pop
gs
outsl
inc
jmp
cmp
jle
xor
xor
clc
jg
mov
fwait
inc
xchg
push
push
pop
sub
lret
mov
cmc
sti
lret
std
mov
push
dec
jl
and
aad
jecxz
pop
cs
ja
push
jp
mov
mov
jne
mov
push
cmp
add
popf
push
in
notb
jge
inc
cmp
int
loopne
cmp
andb
or
sahf
dec
mov
push
add
test
out
dec
jo
inc
ficompl
jecxz
insb
xchg
mov
imul
or
cmp
and
jno
mov
cmc
xlat
jo
jno
pop
adc
out
sbb
out
push
scas
add
imul
arpl
mov
adc
shll
fistps
xor
sbb
aad
jecxz
stos
add
popa
lock
incl
int3
xor
xor
push
lds
pop
cmp
sti
xor
mov
sti
scas
and
fcoml
cltd
adc
aas
sub
push
clc
jns
cmp
and
call
and
sti
push
dec
push
shll
dec
je
lcall
jecxz
in
bound
jno
jo
shlb
loopne
mov
push
pop
mov
sub
mov
loopne
in
mov
sbb
imul
int
jmp
adc
ss
xor
add
fadds
mov
sub
rcll
int3
push
and
xor
dec
dec
xchg
add
sub
addb
mov
shl
in
xchg
jecxz
shlb
out
imul
je
mov
mov
cmp
mulb
cs
add
pop
cmc
js
jne
xlat
shll
ret
cltd
clc
and
cmpsl
mov
popa
shrl
fstps
or
pop
and
and
call
cli
movsb
sbb
dec
ja
testb
std
dec
in
cmpsb
sbb
cwtl
gs
repz
loopne
lcall
out
pushf
aaa
push
cmp
js
push
adc
loope
and
add
xchg
lret
cmpsl
pop
mov
loopne
imul
repnz
int3
xchg
cmc
mov
pop
pop
cmp
mov
add
inc
or
pop
and
pop
dec
push
pop
and
fsubl
jae
out
fldenv
xlat
jns
or
jbe
push
fstpl
xchg
ret
jns
dec
test
shrl
into
ret
shll
sbb
ror
cmp
xor
pusha
jg
stos
lahf
cltd
push
or
jae
flds
sub
push
push
in
push
stos
push
lcall
push
pop
scas
in
decl
jbe
bound
add
mov
mov
dec
push
in
movsl
sahf
push
je
test
push
xchg
stc
sbb
ja
or
xor
or
ret
or
sahf
sarb
cld
push
mov
leave
ja
lret
pop
scas
mov
cmp
imul
and
or
cmp
sbb
inc
sub
inc
and
cmpsl
adc
les
out
add
in
outsl
mov
push
lcall
cmpsb
movsb
pop
mov
std
add
add
adc
in
lret
push
mov
orl
add
out
arpl
push
dec
aas
lock
sbbb
pop
fwait
aad
mov
iret
shll
loop
lret
jnp
adcl
das
cld
cmp
and
enter
enter
push
rcl
clc
orl
jns
jp
push
dec
int
push
pop
xor
push
mov
mov
addr16
insl
bound
sahf
cmp
adc
push
xchg
xor
xchg
mov
mov
cli
pushl
stos
out
rcl
shrb
push
mov
mov
mov
xor
ljmp
enter
call
or
mov
movsb
or
mov
pop
sbb
cmp
cs
fsubrl
rcr
jp
clc
mov
outsl
movsl
ljmp
das
mov
push
adc
pop
and
inc
jl
push
addl
mov
cmpsl
cmpsl
jo
add
push
in
mov
inc
scas
and
fs
cmp
roll
cmp
cmp
mov
cmp
shrl
xchg
cld
pop
scas
ror
xlat
sub
xchg
and
enter
jne
push
das
idivb
fldcw
stc
shr
push
dec
lods
jbe
mov
mov
add
dec
or
fidivrl
ret
sub
insl
xchg
add
sbb
mov
or
aad
mov
xchg
jbe
cmpsl
push
inc
and
icebp
cmp
and
jmp
push
push
or
cmp
push
fbstp
dec
sbb
push
adc
sub
jp
fstpt
mov
mov
callw
adcb
into
sahf
xor
loope
pop
addr16
test
cmpsb
rcr
dec
rcl
outsl
shlb
hlt
dec
mov
or
mov
lcall
icebp
push
adc
bound
pop
movsb
jl
outsb
dec
dec
push
jg
ficomps
pop
adc
sti
inc
jae
pushf
ds
and
popf
add
bound
repnz
out
jmp
xchg
mov
sub
movsb
jo
mov
jno
loopne
dec
mov
pop
sbb
mov
les
test
mov
sbb
je
insb
shl
push
push
push
and
xor
sub
or
or
sar
mov
or
rol
lcall
testl
mov
in
mov
into
mov
adc
inc
push
loopne
xor
or
cli
pop
lods
arpl
nop
xchg
push
je
jo
int3
aam
add
aaa
repz
pop
jle
dec
pop
mov
mov
ss
ss
and
lret
jl
push
mov
push
stos
in
sbb
mov
xor
insb
std
or
in
cld
out
mov
push
in
lods
inc
outsl
bound
popa
sbb
xor
out
mov
shll
ret
dec
mov
inc
adc
adc
leave
dec
sbb
adc
outsb
cmp
lock
lds
jg
pop
ds
fsts
mov
xchg
and
push
out
mov
lcall
and
mov
stos
mov
and
rorb
int3
and
and
sbb
sarl
sub
jno
push
enter
and
or
push
cmc
bound
xchg
shr
out
popf
mov
push
fildll
ljmp
je
jl
lds
lea
cmp
xlat
and
adc
sbb
inc
jo
sti
int
popf
decl
ljmp
add
sahf
inc
add
xchg
jne
xor
outsb
ret
sbb
and
ss
push
sbb
inc
jo
xchg
fsubrl
icebp
ds
hlt
test
les
lret
xchg
testb
mov
fsub
and
stos
pop
or
jp
sbb
das
in
cmpsb
ret
in
jle
jbe
push
fidivs
fisubrl
bound
in
addb
jae
pop
or
adc
jg
dec
rclb
mov
out
sti
jmp
sub
mov
ret
or
and
loop
fadd
and
out
les
mov
sbb
xor
jp
das
sbb
jmp
mov
and
addb
mov
dec
stos
ss
sub
jo
idivb
out
mov
psubusb
rcr
dec
push
stc
add
popa
setb
sbb
mov
data16
out
jge
and
push
push
shll
jb
sbb
dec
sbb
dec
inc
add
xorl
mov
mov
stc
jge
xchg
std
xorl
pop
scas
das
sbb
push
aas
cmp
pop
inc
dec
scas
lea
dec
dec
fstpl
xor
or
pop
bound
or
lock
mov
out
mov
movsl
mov
or
xchg
sbb
cmpsb
add
movsl
sbb
push
in
stos
andl
inc
test
mov
stos
call
loop
cmp
dec
out
in
mov
test
test
imul
hlt
jmp
ret
xchg
jle
scas
sbb
dec
aam
mov
adc
xlat
push
sbb
nop
xor
xor
movsl
mov
adc
mov
stos
test
lret
int
mov
xor
rolb
lcall
test
push
test
inc
lcall
lds
pop
mov
mov
pop
cmpl
jno
jno
sub
xor
xor
je
pop
fs
push
arpl
cli
mov
clc
daa
push
xchg
xor
xor
pop
movsb
dec
dec
lods
cmpsb
cmp
je
out
rcrl
mov
jle
in
xor
stc
sub
adc
out
xor
outsl
cmp
push
fidivrl
xchg
lock
ret
stc
stos
mov
cmp
or
idivb
cld
xor
fs
pop
xchg
cmp
add
xchg
cmp
add
cmp
lcall
int3
sbb
gs
jmp
shl
jae
mov
jb
out
add
fnstcw
xor
jne
xlat
imulb
sarl
insl
fidivl
jg
pop
jno
jg
xchg
mov
mov
fwait
push
mov
xchg
adc
stos
out
movsl
inc
stc
cld
xor
inc
clc
push
sahf
adc
adc
pop
shlb
data16
data16
call
scas
arpl
jne
dec
lock
push
rorb
pop
out
jmp
adc
jne
cmpsb
mov
addl
sarb
mov
jo
js
cs
loope
inc
iret
or
aam
loop
std
cwtl
fadds
js
mov
pop
or
int3
mov
pop
lret
mov
jbe
push
fisttps
push
jge
in
mov
dec
addb
xor
xor
cli
fwait
pop
dec
jno
pusha
adcb
xchg
mov
ss
popf
in
aad
pop
mov
pop
sub
setns
push
fidivrs
cmp
pop
cmc
push
pop
in
cs
inc
pop
jae
jbe
sbb
ja
mov
loopne
mov
repnz
mov
and
lcall
mov
rcl
pop
mov
data16
dec
js
into
test
sahf
lret
out
xchg
jge
jno
hlt
jle
in
stos
or
repz
ret
data16
incl
jecxz
cmp
into
mov
sub
movsl
stos
enter
ret
push
jmp
lea
push
outsb
stos
shll
adc
xor
xor
add
stc
insl
jae
or
hlt
hlt
mov
mov
pusha
cmpsb
and
fidivrs
push
dec
imul
test
sub
aas
and
outsl
xlat
push
push
sub
shr
gs
add
je
aam
in
aam
or
adc
jge
ret
jb
inc
das
xchg
jno
test
movd
das
fiaddl
cbtw
fstps
lcall
dec
pop
repz
into
push
in
pop
lock
jo
mov
adc
ljmp
sbb
cltd
and
out
adc
neg
test
jmp
stos
jle
int3
push
scas
icebp
insl
and
wrmsr
nop
mov
scas
and
inc
lods
js
sub
push
adc
jb
lahf
fmull
inc
popf
les
sbb
idiv
dec
bound
out
xor
pop
or
cmpb
aaa
jmp
inc
push
int3
push
push
loopne
loope
roll
movsl
rorl
pushf
enter
int
xor
shlb
dec
adc
pop
inc
rclw
lahf
cltd
rorl
loopne
inc
and
pop
xchg
pop
add
or
cmp
arpl
cmp
aas
pop
cmp
cmp
icebp
ljmp
ss
sub
in
es
addr16
pusha
lods
cwtl
fildll
ret
or
mov
cmp
lcall
test
push
inc
pop
pop
loope
dec
cmp
aam
jb
lahf
or
test
pop
cmp
ljmp
shrb
cmpsl
mov
in
ret
cmp
mov
ds
lret
fs
fldl
and
pop
lcall
sbb
mov
out
xor
mov
mov
loope
stc
shlb
fidivs
stos
push
js
pop
mov
mov
les
shll
pop
shll
push
das
mov
dec
sbb
add
mov
xor
lds
or
lods
fidivrs
adc
sbb
inc
dec
orl
into
rol
rcrb
pushf
jo
add
push
dec
jo
jbe
inc
xchg
pop
jb
inc
js
xchg
sahf
inc
stos
stc
mov
xor
movsb
clc
decl
and
dec
push
daa
sarb
test
push
dec
adc
leave
xor
dec
push
jb
ficomps
sbb
lcall
or
xchg
dec
dec
or
incl
lret
imul
mov
mov
shlw
mov
dec
aam
std
test
test
sbb
push
out
ljmp
mov
ret
into
push
pop
shll
loop
pop
shll
mov
lods
test
sub
xchg
xor
add
inc
inc
out
popa
imull
dec
paddw
push
repnz
jecxz
shl
dec
pop
out
lods
cli
pushf
in
push
dec
scas
popa
and
mov
or
test
cmpsb
and
jecxz
lods
jg
xor
scas
dec
fwait
adc
cmp
cmp
pushf
or
adcl
fwait
ljmp
mov
push
in
xor
fnstsw
test
jbe
pop
rcrl
sub
and
test
insb
pop
cmp
ljmp
sahf
lahf
loop
inc
jb
push
sub
pop
fisubrs
out
movsl
adc
mov
in
dec
mov
inc
jae
inc
lods
jecxz
adc
push
outsl
sti
adc
addr16
ficoms
outsl
cltd
mul
stos
sbb
addr16
jo
xor
xchg
xchg
push
cmc
push
xlat
andl
adc
sub
sbb
pop
test
ret
rclb
sbb
xchg
bound
lret
jne
shll
and
mov
lahf
pop
shll
test
and
cltd
out
pop
mov
dec
mov
in
mov
dec
jecxz
rorb
add
sbb
jle
dec
adc
stc
and
rclb
or
in
mov
jo
lds
iret
stos
and
ja
sub
sbb
mov
in
dec
inc
jne
jbe
popf
dec
pushf
xor
movsb
jmp
jg
push
int3
gs
out
test
cmp
push
adc
mov
mov
cltd
xchg
mov
sar
pop
push
xor
pop
push
int
and
daa
scas
popf
jg
push
ss
outsb
push
push
loope
lea
pushf
mov
mov
pop
pop
sbb
in
cmc
push
lcall
jns
lret
mov
js
mov
movsl
stos
ljmp
and
test
add
enter
pop
cltd
pusha
aaa
xor
add
stc
jge
mov
inc
mov
or
push
cmp
inc
push
mov
pop
push
xorl
loopne
in
lds
mov
shl
out
sub
push
dec
sahf
and
sub
call
mov
iret
add
iret
cmp
sub
mov
push
mov
cmc
outsl
sub
xor
stc
adc
test
adc
push
inc
lods
jns
xor
adcl
int
ss
push
insl
mov
jne
shll
pop
push
xchg
xor
jl
jne
mov
mov
stos
mov
out
jle
rcrl
stos
cmp
insl
mov
mov
jo
pushf
mov
outsb
push
mov
push
insl
xor
stc
xor
sub
or
inc
subb
int
pop
xor
mov
lahf
jecxz
inc
jl
mov
cs
push
adc
jae
and
sbb
icebp
or
andb
int3
scas
insl
pusha
lods
iret
xchg
aaa
mov
out
adc
xchg
pminsw
ror
mov
leave
mov
and
mov
push
test
add
dec
pop
dec
out
push
in
jns
cmp
in
adc
jmp
call
push
das
mov
lea
add
fstl
xor
jne
iret
and
das
stos
imul
or
jecxz
hlt
lahf
pop
lods
cmc
jae
adc
hlt
cli
pop
jmp
pop
aad
sahf
dec
push
xor
fnstcw
jo
pop
sub
dec
xor
bound
test
xchg
pop
out
lret
das
jl
mov
pop
push
hlt
popf
lock
xor
daa
rcl
pop
cltd
add
scas
stc
pusha
adc
cmp
test
push
enter
pop
mov
imul
mov
push
cmp
fdivp
inc
clc
mov
fmulp
push
push
call
repz
aad
fildll
out
fs
rclb
adc
in
add
popf
push
cltd
xor
inc
iret
xchg
push
sbb
jb
add
insl
dec
cmp
pop
insb
fmulp
imul
mov
cmpb
rol
cmpsl
xchg
data16
leave
jmp
sub
xchg
out
push
decl
aam
scas
jne
stc
or
and
xchg
mov
xchg
mov
adc
out
ffreep
adc
sbb
mov
cltd
sbb
dec
mov
pop
cmp
cmpsb
inc
xchg
jnp
das
cmp
xchg
push
mov
into
adc
xor
mov
mov
rdpmc
push
mov
mov
jbe
jnp
out
popa
xor
aaa
dec
mov
add
sub
fisubrs
adc
dec
or
cmp
dec
jmp
loopne
lcall
xorps
mov
leave
jo
rorl
adc
push
fiadds
icebp
es
inc
outsb
pop
repz
xchg
ret
decl
sahf
arpl
and
lret
xor
sbb
stos
mov
aam
aaa
cmpsl
pop
pop
jb
inc
mov
aam
pop
mov
and
jmp
inc
bound
cmpsb
pop
xchg
iret
cmp
adc
mov
sub
sbb
jns
ds
popa
repnz
int
push
push
ret
mov
and
jo
pop
movsl
xor
xchg
lods
xchg
sbb
in
sbb
outsl
leave
inc
shlb
adc
adc
add
negl
movsl
inc
lret
pop
sbb
movsb
out
sbb
pusha
mov
sbb
xor
mov
data16
testl
pop
jmp
lock
jle
dec
cmp
jecxz
stos
pushf
scas
jnp
imul
pop
mov
xor
sub
ss
and
or
rcr
or
outsb
adc
inc
xor
jne
xor
xor
xlat
push
add
mov
sahf
inc
mov
clc
push
loopne
loope
mov
mov
shr
pushf
cmp
loopne
sub
jp
fisubrs
ss
fidivrs
cmpsl
sbb
jg
mov
adcl
mov
pop
scas
adc
jp
sub
cmp
testb
add
push
inc
fisttps
jecxz
jl
dec
dec
repz
sbb
popa
pop
mov
add
push
stos
push
xchg
or
add
xchg
sbb
and
pop
push
insb
ds
gs
test
fisubs
push
gs
out
cmp
jg
inc
jne
xchg
fwait
ror
out
shrb
adc
cmp
lock
ret
in
les
push
jmp
repnz
jl
or
cli
hlt
scas
cmp
shrb
inc
ret
or
mov
push
sbb
mov
daa
sbb
call
stos
int3
sub
adc
xchg
adc
sarl
dec
push
pushf
pop
lahf
or
xchg
ret
pop
mov
dec
pushf
xchg
inc
mov
test
repnz
cmp
adc
les
out
sub
bound
mov
pop
cwtl
sub
xor
push
lock
sbb
subl
add
int
sub
sar
cmpsb
xchg
xchg
repz
mov
jo
xlat
mov
xchg
sbb
insl
outsl
dec
mov
pushf
xor
sbb
push
pop
sbb
inc
jmp
shll
mov
int
cmpsb
cmp
lods
outsb
jbe
pop
popf
aad
sbb
hlt
lcall
in
in
sbb
jb
add
mov
or
lcall
and
sarb
out
ds
mulb
push
mov
pop
pop
cmp
sar
cs
push
stc
or
repz
out
and
add
and
lcall
leave
xlat
lret
push
cmp
push
and
dec
pusha
mov
loop
je
mov
inc
add
hlt
repnz
push
mov
pop
push
mov
push
pop
lea
movsl
xor
dec
imul
push
adc
test
push
cwtl
push
dec
push
push
xor
pop
xor
cmp
mov
cli
lds
jl
fcoms
mov
cld
scas
fcomps
cmp
jp
mov
or
jno
inc
mov
sbb
fdivr
add
sub
or
jnp
clc
or
push
into
in
push
and
fistl
xchg
hlt
stc
mov
pop
imul
js
mov
adc
dec
das
add
and
mov
dec
fcoml
test
or
mov
rolb
lahf
and
pop
lret
xchg
imul
divb
mov
andb
cmp
out
dec
icebp
mov
lods
xor
ljmp
std
cmpsl
inc
and
mov
inc
aas
sub
cmc
jns
in
ret
sub
pop
or
sbb
xchg
add
fcoml
lods
inc
xorl
in
add
subb
cwtl
test
cmp
mov
lods
popa
dec
and
mov
add
rcl
inc
ljmp
loope
fildl
inc
ss
sub
out
cs
hlt
sbb
test
lahf
sbb
bound
sbb
cmp
mov
pushf
jno
adc
mov
mov
sub
popf
lcall
sub
test
pop
cs
mov
jno
fldt
int
in
scas
cmpsb
or
fdivrl
in
push
sbbl
mov
or
test
sbb
push
pop
pop
jo
stos
hlt
ja
sub
sub
jmpw
adc
cld
sbb
xor
cli
test
rcr
lods
iret
sbb
jne
and
mov
shll
xchg
das
xor
jmp
cwtl
es
push
and
jb
sbb
pushf
dec
je
pop
xor
jg
cmp
adc
ss
adc
cmc
mov
or
and
mov
data16
sub
and
std
mov
stos
scas
test
inc
sbb
pop
inc
test
pop
sbb
pop
ds
mov
xor
adc
clc
stos
xchg
leave
sbb
mov
push
push
sbb
xchg
fs
sbb
inc
sub
pop
iret
shrl
loope
sub
sahf
ss
leave
xchg
into
push
aad
test
loop
fiaddl
mov
sbb
lret
xor
and
push
mov
jl
mov
jl
jg
adc
inc
add
cmp
push
adc
mov
jae
bound
in
xor
pop
mov
cmp
pop
add
in
push
lcall
or
cli
sub
lea
popa
mov
lea
sbb
or
into
lcall
inc
mov
pop
jnp
cli
mov
clc
hlt
push
lock
out
inc
xchg
jne
mov
stos
cmp
mov
imul
lahf
outsl
push
mull
shll
adc
inc
mov
mov
into
iret
inc
jns
xchg
loope
pop
or
jecxz
shrl
negb
push
jle
in
addl
lea
shr
test
imul
sub
dec
cmp
inc
dec
stc
sub
pop
mov
sub
das
xchg
ret
jo
dec
inc
outsl
adc
pusha
orl
dec
xlat
xor
pop
mov
mov
in
mov
adc
jae
xor
adc
popf
dec
xchg
mov
inc
inc
pushw
cwtl
push
dec
inc
nop
and
pop
jmp
mov
xchg
mov
dec
sub
or
rorb
inc
dec
out
cmpsl
cli
cmpsl
sbbl
sub
dec
pusha
mov
stos
jb
cld
cmp
andb
shl
imull
out
arpl
jp
inc
jp
sbb
mov
jnp
js
iret
or
mov
pop
xor
lret
and
pusha
lea
mov
int3
ret
and
push
add
mov
or
pop
mov
hlt
dec
xlat
jmp
cmp
leave
and
and
sbb
jns
xor
fsub
daa
cltd
mov
xchg
sub
and
inc
stos
xchg
mov
and
push
iret
jns
or
int3
sbb
aas
test
stc
aad
mov
es
xchg
scas
dec
ds
fisttps
xor
xorb
inc
xchg
enter
aad
mov
pop
mov
ret
aam
imul
cld
dec
shl
push
pop
jbe
lods
sbb
outsb
xor
dec
std
jb
repnz
sub
jns
pop
jle
lahf
js
cmp
in
pop
enter
aad
pop
lds
and
mov
sub
jmp
dec
mov
mov
test
sbb
sub
dec
jg
dec
xchg
std
scas
mov
psllq
out
mov
std
aaa
pop
loopne
or
or
aad
pusha
sbb
imul
jg
scas
inc
xchg
dec
jb
dec
scas
out
adc
jne
sbb
or
xchg
lds
add
pop
add
fcompl
fsubrs
cmpsb
addl
xlat
dec
sbb
push
cmpsb
xchg
cmp
sbb
dec
push
addr16
mov
cmp
push
mov
push
pop
icebp
pop
icebp
fldt
jmp
cwtl
jmp
clc
stc
mov
jno
or
mov
xchg
fwait
push
call
test
xchg
stos
xor
adc
jo
mov
xchg
mov
aam
or
js
mov
cmp
jb
mov
fwait
aad
fimull
pop
test
dec
jmp
push
adc
push
shrl
into
imul
pop
dec
adc
xchg
cmpsb
push
lods
mov
out
dec
dec
pop
cltd
ret
subb
inc
sub
push
sbb
je
jb
add
movsl
pop
gs
inc
clc
mov
inc
mov
mov
sbb
push
enter
push
add
mov
adc
aas
jl
cli
out
sub
sarl
sbb
xor
fimull
and
stos
insl
call
ds
push
mov
ds
insb
add
xchg
dec
xchg
jbe
inc
push
xchg
out
mov
and
mov
fdivr
testl
cmpsb
loop
ret
loope
out
je
inc
lods
rolb
inc
jbe
jo
leave
das
xor
pusha
stos
jne
jge
imul
add
sub
clc
jge
int3
test
and
cmp
lcall
rol
sub
pop
inc
out
out
fidivrl
js
and
pop
loopne
push
add
in
cmp
sahf
in
cmp
es
or
ret
push
and
push
lcall
in
mov
stos
pop
test
pop
loope
and
sub
mov
jno
test
push
inc
and
inc
sbb
out
xor
aas
inc
xor
es
push
sbb
hlt
and
inc
addr16
fstps
pop
fisttps
loop
movlps
mov
jns
scas
jae
aad
cmpsb
pusha
adc
stc
or
adc
aas
xchg
iret
ret
inc
ror
fnstsw
and
stc
and
int3
fiaddl
dec
out
mov
aam
cli
orl
loopne
pop
fsubr
sbb
fisubrl
insl
cmc
dec
cwtl
xchg
mov
mov
cmpl
enter
pop
push
cmp
or
cmp
in
ja
push
outsb
movb
fs
imul
xchg
lods
stos
xchg
arpl
sar
enter
xor
mov
adc
stos
int3
ja
mov
inc
jnp
pop
mov
clc
xchg
repnz
repz
out
lods
pushf
dec
cmp
sbb
cli
fisttpl
xchg
imul
roll
mov
lods
cli
imul
jnp
cltd
add
stc
pop
insl
sti
add
int3
out
push
jmp
jnp
push
in
push
fs
push
repz
rorl
dec
shrl
aam
push
test
jnp
sar
pop
into
fwait
ljmp
sbb
sbb
sbb
cmc
repnz
inc
fimuls
lea
mov
ret
cmp
mov
in
xchg
push
rcll
sbb
mov
or
movsl
clc
iret
and
into
sahf
out
mov
jnp
mov
jae
jo
xchg
aad
xor
pop
les
das
ljmp
popf
jno
pushf
sbb
pop
push
cmpb
lret
ret
mov
mov
lock
cwtl
in
out
mov
les
gs
push
jns
arpl
and
dec
jecxz
push
outsb
sub
push
xchg
sbb
jno
and
fbstp
xor
cli
outsl
inc
test
or
imul
iret
cmp
loop
ss
fimull
cmp
fs
cmpsl
jp
cmp
xchg
add
ss
push
jbe
fsubrs
adc
fs
inc
xor
loopne
movl
test
out
sti
mov
aad
xchg
sub
adc
mov
pop
movsb
aas
inc
jno
cmp
mov
outsb
mov
pop
xor
inc
sti
xor
out
mov
sbb
push
hlt
sbb
sub
push
stos
loope
mov
xchg
or
test
dec
insl
rcl
inc
adc
repnz
jle
arpl
jne
lret
dec
mov
gs
cwtl
pop
xchg
aam
cmp
pushf
mov
or
inc
xchg
xor
mov
movsb
test
sbb
imull
sbb
js
inc
gs
fisttps
sbb
add
inc
mov
mov
std
xor
xchg
jns
add
shll
sarl
pop
or
or
jnp
popa
dec
mov
pop
ret
movsl
stc
fistpl
arpl
ja
dec
aam
lods
xchg
mov
test
mov
loope
sarl
xchg
stos
cwtl
mov
dec
mov
cmpsl
mov
xor
pushf
js
scas
ror
sub
enter
pop
jecxz
xor
mov
lret
or
adc
mov
rclb
jnp
aam
mov
pop
mov
sub
pop
cmpsb
jmp
and
cwtl
inc
add
lcall
repnz
ljmp
popa
xor
rolb
cmp
dec
jnp
dec
shll
lcall
outsb
sub
clc
xor
mov
jae
jb
enter
inc
mov
add
inc
int3
dec
or
jb
xchg
lret
sub
mov
sbb
stc
cld
or
xchg
test
jmp
or
scas
inc
sbb
add
sbb
dec
shl
inc
jmp
fisttpll
into
adc
shll
pop
xorb
movsb
cmp
xor
xchg
out
bound
dec
push
push
mov
cltd
push
fs
sbb
xchg
pop
fisubl
movsb
mov
pop
fisubl
enter
mov
stos
repnz
lret
inc
jmp
mov
push
loopne
or
add
mov
iret
and
ds
fiaddl
fcmovnb
rorb
cmpsb
leave
mov
mov
aaa
lahf
cs
pop
adc
call
xlat
mov
mov
scas
lret
jns
dec
mov
test
fs
inc
cwtl
test
out
or
cmpsl
inc
adc
dec
jle
insl
testb
xor
test
adc
push
xlat
rorb
mov
xchg
mov
push
adc
cmp
pop
mov
add
pop
pop
hlt
jle
dec
pop
lea
and
xchg
aad
xchg
out
aam
mov
sbb
stos
jle
jb
orl
lock
push
jbe
mov
pop
aaa
or
mov
push
aas
jae
sbb
push
push
mov
stos
popa
int3
xchg
push
iret
inc
cmp
cmp
cmp
subb
repnz
hlt
addr16
data16
imul
pop
cmp
sub
xor
push
int3
stos
negl
es
enter
jb
jle
xchg
xchg
inc
hlt
fsubs
hlt
mov
int3
fsts
hlt
shl
jo
cmp
push
clts
adc
pop
and
sub
add
push
ret
rorb
inc
adc
inc
mov
xchg
rclb
pop
in
scas
push
imul
outsl
cmp
fidivrs
test
sahf
int3
nop
negl
int3
jmp
mov
outsb
out
sahf
or
bound
imul
inc
fs
jno
xchg
andl
adc
and
lret
fcoms
rcl
lods
scas
shl
pop
in
mov
xchg
mov
mov
add
inc
insb
mov
shlb
adc
cmp
iret
add
xchg
lock
std
jns
pop
jo
jp
push
lods
lock
fs
xor
push
add
or
fldl2e
mov
xchg
int
mov
mov
mov
adc
sbb
loope
xor
std
or
cmc
daa
addr16
in
pushf
or
mov
cmp
sbb
cmp
push
ja
sbb
push
fisubl
dec
roll
daa
addr16
jecxz
ret
dec
rclb
fwait
into
push
test
push
ljmp
ret
sub
xchg
in
cwtl
ljmp
loope
jge
ret
scas
mov
rcr
cli
mov
adc
mov
shll
xchg
and
sarl
xor
lret
pop
cmp
xchg
lock
and
sub
je
cmp
lds
pop
sti
push
lret
pop
or
and
dec
adc
fwait
sub
jns
mov
lret
xchg
in
sub
negl
fsubrl
imul
outsb
mov
dec
dec
scas
ret
mov
lods
add
fwait
jb
dec
sbb
inc
xlat
xchg
mov
bound
shll
fs
push
mov
xchg
lret
test
xor
cmp
pop
imul
mov
jge
jns
cld
in
hlt
xchg
addb
sub
aam
mov
push
add
mov
dec
loopne
insl
sbb
lahf
inc
xchg
mov
in
out
lods
dec
and
cmp
popf
or
shlb
cs
inc
inc
imul
sub
pop
out
dec
xor
mov
mov
icebp
cmp
subl
pop
shlb
loopw
xor
or
lcall
cli
scas
adc
sti
inc
sarb
xor
jp
sbb
lret
idiv
fisubl
test
xchg
repnz
push
shll
sub
mov
or
jge
loopne
add
out
sub
inc
mov
aad
lds
inc
repz
imul
dec
lods
aaa
add
mov
dec
cltd
stos
dec
loop
sbb
loope
orb
add
xor
pop
stos
cmp
push
or
and
je
clc
pop
add
mov
je
mov
jnp,pt
enter
xchg
movsb
sbb
inc
js
aad
or
and
clc
sbb
push
sahf
adc
jp
push
mov
aad
mov
lods
pushf
sahf
data16
in
aaa
jb
mov
mov
mov
inc
lods
fs
push
push
bound
mov
or
mov
mov
fdivrs
shrl
dec
sbb
rcl
add
je
inc
imul
mov
mov
arpl
ljmp
sub
add
inc
cmpsl
addr16
icebp
loope
dec
aad
hlt
add
or
cmp
cmp
ret
push
mov
dec
push
xchg
mov
jo
test
shrb
inc
lock
jecxz
mov
xor
lcall
xor
pusha
jge
sub
rorl
jge
add
or
rsqrtps
push
js
pop
imul
fildl
push
cmpsb
mov
cld
fyl2x
adc
xchg
shlb
push
cmpb
and
and
mov
hlt
push
cmp
sti
and
mov
push
jg
les
cmp
outsb
ret
leave
test
imul
dec
push
pop
sysret
sub
xchg
scas
and
adc
sbb
iret
insb
cmpsl
sbb
push
pop
iret
shlb
into
out
stc
push
adc
cltd
daa
orl
jmp
bound
dec
int3
fildll
mov
pop
and
inc
test
pop
insb
mov
loope
pop
sbb
js
pop
sub
iret
popf
test
outsb
fwait
xor
fisttpl
jle
sbb
pop
jbe
or
lret
outsl
sti
xchg
dec
cwtl
pop
mov
aas
mov
push
cmpsl
or
not
jnp
fldl
ret
dec
stos
xchg
scas
dec
mov
adc
jmp
push
mov
outsb
or
cld
aaa
sub
xchg
in
sti
imul
adcb
mov
push
popf
jae
orl
addb
inc
mov
into
leave
mov
mov
mov
dec
loop
inc
jl
cmp
lea
fsubl
out
lods
ja
xchg
push
cmp
stos
sub
loop
or
pop
adc
aas
push
es
movsb
jge
or
dec
shll
lret
jbe,pt
xor
add
cmp
jns
add
mov
outsl
cmp
xchg
imul
sti
notl
jecxz
scas
hlt
inc
push
ja
lcall
leave
mov
dec
push
cmp
pop
das
jg
loope
mov
sub
outsl
aam
mov
mov
hlt
fs
xchg
data16
mov
sbb
and
adc
cli
xchg
cmp
in
pop
mov
and
outsl
test
push
adc
sbb
and
mov
push
out
int
sbb
lds
xchg
push
or
push
out
lea
inc
cmp
jmp
mov
xchg
hlt
sbb
fucomp
push
ficompl
lock
jnp
dec
ds
shlb
imul
aad
sahf
movsb
mov
pop
test
or
xor
fsubs
mov
lahf
movsb
xchg
xchg
adc
imulb
lock
inc
jb
jae
stos
mov
outsl
stos
rcll
nopl
add
push
movsb
ljmp
push
jb
outsb
sarb
mov
es
pop
jg
pop
es
imul
jae
mov
inc
jmp
adcl
lea
ss
fmulp
cmp
mov
nop
or
jl
das
push
sub
push
in
bound
mov
sub
xorl
lret
aam
lods
add
adc
mov
add
inc
add
xlat
out
jno
inc
dec
mov
rcrl
enter
je
mov
jnp
and
pushf
xchg
or
aad
xor
or
jae
sahf
iret
mov
fdivs
fcmovu
enter
sub
and
xlat
iret
jge
push
mov
pop
dec
xlat
loop
inc
das
mov
adc
loopne
out
fsubr
lods
mov
test
cld
outsl
jo
push
notb
test
int
jmp
test
cmp
cmc
negb
mov
mov
pop
rcrb
sahf
es
jae
int3
andb
cmpsl
lahf
cmp
cmp
sub
outsb
out
xchg
dec
mov
cmp
outsb
mov
jle
outsl
iret
lods
out
jge
lods
mov
sub
mov
or
mov
sbb
loopne
jns
pminub
mov
ret
lea
mov
lods
ljmp
je
ss
lret
cmc
mov
in
pop
lcall
add
sub
loopne
rcr
pop
dec
int
jl
mov
fcmovu
and
xchg
ret
xchg
movsl
mov
xor
push
lods
mov
mov
dec
mov
sbbl
sub
push
ja
inc
subl
cmp
pop
lret
pusha
fiadds
repnz
lock
insb
dec
cmp
add
sbbb
xchg
mov
push
fistl
subl
pop
pop
xor
adc
ret
cmpsl
icebp
cmp
fwait
sbb
xchg
pop
lea
inc
sbb
int3
mov
or
js
in
cld
pop
icebp
lea
add
jo
fcoms
and
dec
test
mov
mov
scas
sub
jp
jge
clc
sbb
mov
jno
add
out
sbb
sub
and
mov
rorb
xor
or
cld
pusha
sbb
fsubrl
mov
nop
out
xchg
iret
sub
sbb
icebp
mov
sub
in
ljmp
mov
cmp
sbb
js
dec
mov
xchg
outsb
push
pop
adc
lcall
rorl
in
push
cmp
dec
cwtl
jle
stc
push
ret
and
fnstsw
jb
lahf
mov
dec
add
mov
inc
js
cmp
test
jmp
mov
dec
dec
aam
xchg
xchg
adc
or
mov
cltd
xlat
cmp
loopew
mov
or
repnz
pop
fisttpl
and
xchg
andb
add
addr16
popf
adc
cld
cli
xchg
leave
ljmp
jge
and
pop
nop
xor
jnp
jno
in
and
dec
add
push
sarb
push
test
jne
sub
add
mov
es
loop
mov
int
mov
enter
rorl
cltd
stos
test
or
fbstp
jns
xor
mov
push
fistl
sar
xchg
subb
xchg
mov
xchg
aas
mov
scas
lds
sbb
lret
inc
je
mov
sub
xor
push
mov
inc
mov
mov
inc
mov
lea
shr
add
mov
cmp
dec
out
loop
aaa
sbb
arpl
lock
fsubr
push
sbb
cmpsb
xchg
sub
fisubs
push
imul
cli
lock
es
lret
ret
in
data16
in
das
xchg
sbb
cwtl
mov
in
xchg
shll
stc
adc
fstpt
bound
and
les
enter
insl
and
rolb
xchg
pavgb
in
xchg
fisttpll
aas
addr16
mov
out
xor
notb
rcr
dec
sub
xorl
cmp
adcl
push
sbb
dec
add
xorl
sbb
mov
lret
shl
rcrb
jge
test
push
imul
outsl
std
ss
push
loop
adc
sub
mov
mov
mov
jp
ret
into
pop
mov
or
das
mov
aaa
xchg
sbb
fisttps
hlt
or
inc
pop
or
minps
jmp
jnp
in
lds
rcl
push
mov
push
outsb
sbb
fld
insl
ret
lret
xchg
adc
xchg
popa
adc
inc
jbe
in
hlt
dec
insl
pop
pop
mov
iret
jmp
pop
xchg
stos
testb
data16
int3
cmp
inc
and
and
and
lea
jno
dec
clc
mov
lock
daa
andb
jno
pop
inc
mov
stos
jg
cmp
lea
stc
sub
loopne
enter
add
inc
rolb
mov
stos
daa
fistl
mov
push
xchg
push
movsl
dec
pop
mov
and
push
sbb
adc
push
jbe
out
loope
xchg
lret
in
pop
loopne
add
xchg
or
sub
insb
test
xor
fimuls
lret
in
mov
jb
xchg
dec
lcallw
inc
and
add
sub
sbb
mov
dec
push
pop
push
mov
mov
push
call
shlb
and
push
jmp
fstpl
lahf
rcll
inc
dec
fwait
mov
fiadds
mov
jb
dec
mov
popf
push
mov
pop
loope
add
lds
outsl
inc
push
mov
test
push
sbb
sbb
push
aam
outsb
int3
shll
sahf
inc
xor
push
and
push
std
jg
aam
cmp
mov
ret
fidivs
cmpsl
add
repnz
mov
add
cmpsl
sub
arpl
mov
jle
mov
xchg
enter
test
jg
shlb
jl
add
clc
std
loop
addr16
add
sti
pop
and
pusha
test
popa
ljmp
add
sti
jnp
popf
outsb
les
icebp
pop
cmp
or
mov
sub
xor
mov
push
push
jg
push
lcall
cmp
loopne
or
jo
stos
aad
dec
decl
pop
xor
sub
inc
test
daa
loopne
add
cmp
aas
popa
dec
dec
jbe
ja
ret
jns
icebp
adc
jp
popf
aas
lret
ljmp
xchg
xor
pop
jne
mov
enterw
inc
rol
lgs
cli
nop
aam
sub
nop
sarb
imul
mov
push
inc
sub
in
mov
xor
fsubrs
shrb
pop
ja
adc
lahf
jo
jp
xchg
pop
arpl
sub
gs
push
add
mov
les
repnz
or
adc
mov
aaa
aaa
inc
sub
rep
sub
adc
stos
push
push
mov
pop
mov
xchg
mov
std
push
movsl
cmpsl
push
adc
les
mov
test
out
test
dec
test
sbb
repnz
repz
test
decb
das
xor
lret
ds
cmp
loop
sbb
fisttpl
out
jne
fcmove
mov
gs
clc
insb
xor
push
pavgw
cmp
xor
ds
ret
add
mov
mov
adc
out
leave
xor
repz
test
cmpsb
out
dec
pop
jne
sets
int3
adc
mov
clc
cmpsl
cmp
push
pop
shl
mov
sarl
fcoml
xor
ss
jo
cmp
lods
add
pop
push
mov
enter
mov
mov
inc
mov
xor
fcoml
and
dec
pop
dec
lock
xchg
add
shrl
aad
addr16
aaa
or
sub
insl
add
lret
mov
aaa
fcmovu
test
sarb
fwait
jecxz
mov
add
mov
hlt
mov
xchg
sbb
fildll
jle
inc
sarb
mov
stos
jae
mov
dec
or
add
or
push
pop
xchg
xor
lods
jecxz
push
mov
aam
call
sbb
in
cmc
lret
inc
scas
into
sbb
fxch
xchg
push
fs
ljmp
stc
mov
jnp
dec
imul
mov
xchg
jno
fisttpl
out
pop
cmp
dec
cli
lds
fidivs
mov
inc
mov
add
mov
out
push
jge
sub
pop
lds
or
mov
imul
sub
mov
fsubr
and
jecxz
mov
pop
mov
adc
cmp
ret
lret
cmp
mov
push
xor
ja
xor
repz
fists
fldenv
dec
aam
xlat
outsb
fistpl
test
cmc
gs
adc
mov
out
push
lret
cld
aad
mov
push
aas
fisubrs
xchg
insl
or
mov
bound
stos
mov
mov
mov
sbb
mov
push
aaa
repnz
add
cmpsb
scas
ret
out
xor
out
enter
pop
sub
mov
dec
xchg
pushf
dec
ret
jmp
stc
jo
jge
ret
test
xor
cmp
cltd
leave
xorl
mov
xchg
out
and
int3
pop
push
and
scas
lret
test
das
mov
inc
loope
mov
pop
pushf
cmp
cltd
jnp
xor
ror
xchg
insl
inc
mov
or
out
aaa
mov
adc
dec
add
push
lahf
sbb
inc
nop
gs
mov
mov
xchg
nop
iret
faddl
fs
push
xchg
sub
cmpsb
ds
iret
mov
mov
adc
insl
int
fcmove
pop
add
scas
dec
mov
push
clc
outsl
das
xor
ja
sub
lods
lods
insl
int
fsubs
mov
test
outsb
mov
aaa
jo
push
adc
dec
jp
xchg
lock
popa
aas
ja
and
int3
ss
mov
shrb
out
divl
nop
scas
loop
lods
jbe
xor
lods
fwait
test
lea
mov
inc
sub
cmp
insb
jae
hlt
rcr
add
xchg
test
inc
fnclex
jbe
incl
dec
inc
ss
sarl
test
fstpl
mov
dec
repz
cltd
rcr
cmp
call
in
jle
and
and
out
movsl
or
sub
cmc
stc
pop
mov
push
mov
rcrb
pop
sub
mov
mov
xchg
push
and
aam
jmp
imul
cmp
cmp
in
cmp
addb
dec
in
pop
xchg
arpl
lods
sbb
xor
mov
sub
or
mov
aaa
mov
js
xchg
pop
mov
pushf
cmpsb
xchg
insb
cmp
mov
test
aam
sub
insb
sti
push
test
in
cmp
cmpsb
fnstcw
out
inc
in
mov
pushf
mov
pop
retw
mov
in
insl
xor
lock
inc
popa
inc
in
test
lods
xchg
jl
pop
add
fildl
xchg
jae
mov
add
cmp
xchg
bound
sbb
cwtl
pop
jbe
je
sub
fcompl
aaa
xchg
mov
push
and
and
dec
mov
gs
mov
cmp
shll
push
lahf
xchg
shlb
dec
adc
gs
xor
clc
movsl
or
leave
std
pop
mov
mov
and
or
subb
mov
add
arpl
xor
aaa
lret
inc
mov
rcr
dec
xchg
add
sbb
cmp
dec
cmpsl
pushf
stos
cmpsb
cmpsb
mov
inc
andb
test
pop
mov
popf
pop
dec
icebp
fmuls
pop
and
aad
mov
dec
shrl
adc
cltd
lea
loopne
mov
xchg
rcl
loopne
cmp
mov
nop
mov
and
mov
xor
cmpsb
mov
sbb
mov
inc
mov
outsl
popa
rclb
imul
cmc
andl
lcall
mov
adc
and
fidivrs
sub
inc
push
data16
inc
and
imul
xlat
ds
orl
inc
mov
mov
lretw
add
scas
xchg
cmp
bound
orb
cmpsl
pusha
xchg
cmp
or
ja
jne
xchg
mov
loope
fwait
js
mov
cs
adc
mov
cmp
rcl
mov
add
sbb
cmp
or
fidivl
lock
cmc
imull
cmp
and
sbbl
call
aad
jb
fistpl
mov
sub
pushf
push
mov
sti
jecxz
repz
in
push
nop
lret
hlt
ljmp
es
mov
call
faddl
push
push
push
mov
and
mov
and
mov
and
mov
jbe
aas
jle
pushf
inc
movsb
loopne
ja
and
daa
sbb
idiv
sbb
mov
fwait
jbe
cmpsb
ret
ljmp
lods
in
hlt
aaa
shlb
jmp
and
stc
or
repnz
mov
out
jnp
mov
pop
insb
or
loope
dec
xorl
xor
insb
sbb
popf
clc
bound
cwtl
in
sbb
sahf
cmovae
mov
fistps
sub
mov
aad
mov
add
stc
pop
scas
inc
jae
shrl
cmp
shll
lret
xchg
subl
and
int3
jmp
mov
ljmp
mov
push
push
sbb
xor
adc
inc
ss
jno
and
dec
and
int
out
jns
push
jnp
aad
push
sbb
fcoml
lret
mov
ja
mov
push
jg
mov
mov
aad
or
mov
fisubl
and
insb
ret
repz
push
xor
inc
inc
and
fs
clc
int
mov
push
push
fsubrs
or
sbb
push
dec
les
test
cmc
aas
jge
or
inc
call
ss
or
cmpsb
xchg
jge
inc
mov
jae
stc
ja
jbe
insb
push
loop
jge
and
sbb
sbb
pusha
dec
push
add
ljmp
lret
cmp
jnp
test
stos
mov
sbbb
adc
cld
push
dec
mov
enter
dec
shrb
adc
es
jl
mov
dec
test
mov
repz
adc
into
into
aas
outsl
lahf
jns
mov
sahf
or
or
inc
push
push
sub
pop
inc
dec
xorl
cs
adc
arpl
sub
mov
or
cs
ret
loope
mov
pushf
sbb
mov
and
pop
je
outsb
cmp
repz
jecxz
jnp
pop
push
test
adc
push
mov
insl
adc
pop
call
test
arpl
lds
inc
out
or
test
pop
pushf
js
outsb
mov
and
fidivl
fadds
mov
pop
cmp
insb
lret
sbb
movhps
lcall
sub
fistpl
loopne
push
adc
in
pop
push
enter
insb
cmpsl
jl
fidivrs
xchg
jp
push
xlat
mov
repz
mov
jecxz
pop
jg,pt
insb
mov
jp
shrb
iret
test
adc
enter
cwtl
sub
lock
loopne
insl
inc
std
neg
cmp
sub
pop
lods
push
aad
outsl
jecxz
sbb
out
push
inc
mov
lods
or
enter
orb
adc
xor
loop
rcr
cmpsl
mov
add
fbstp
add
push
leave
xor
jmp
test
sbb
popa
cmpsl
dec
and
mov
jb
std
ret
es
mov
dec
rorb
iret
mov
or
sbb
sbb
leave
inc
mov
sbb
add
mov
jmp
dec
and
or
and
mov
setle
daa
sbb
aam
xchg
repz
cmp
sbb
mov
push
add
add
sub
xchg
mov
dec
xchg
adc
fstpt
pop
daa
repnz
imul
cs
in
insb
out
jae
sub
call
movsl
into
or
jg
out
xlat
cli
inc
dec
imul
jl
mov
cmp
jl
lcall
out
data16
jae
ljmp
jmp
int
aam
shrb
ss
mov
mov
adc
cld
cmp
imul
mov
pop
push
movsl
add
pand
incl
imul
stos
push
fs
mov
adc
pop
dec
cmp
dec
jmp
loopne
dec
mov
clc
inc
test
lds
test
test
aam
push
or
setg
ljmp
jl
pop
out
loope
sub
mov
inc
shrl
fs
stos
mov
dec
movsb
inc
in
sub
pop
out
mov
adcl
fwait
xor
pop
adc
xchg
ss
test
das
xorb
popa
xchg
mov
xor
pushf
pop
jae
sbb
repz
adc
rcl
movsb
sbb
add
add
mov
or
cmpsb
je
rcrl
call
test
xchg
cmpsb
adcb
out
rorl
out
int
sub
insb
or
nop
mov
jle
les
out
test
ficoms
xor
movsb
add
data16
sbb
sub
nop
aaa
aad
cs
aad
into
mov
and
in
pop
pusha
xor
push
not
scas
sbb
push
call
stos
and
xchg
in
lods
pushf
or
dec
push
inc
in
mov
or
sbb
in
test
shlb
and
xor
inc
xchg
arpl
leave
and
inc
stos
jnp
in
movsl
bound
into
into
pop
aaa
in
pop
out
jae
mov
int3
testl
lds
repnz
insb
or
push
loop
dec
mov
xchg
insl
xchg
push
out
data16
xchg
and
in
mov
push
push
lods
test
stc
enter
jbe
dec
ljmp
mov
sahf
inc
xor
outsb
pop
mov
add
push
mov
outsb
jnp
pop
push
or
fwait
pop
xor
sti
push
fcmovnbe
sub
out
jns
mov
add
xor
jb
jmp
iret
inc
stc
aam
pop
ror
stos
mov
push
out
mov
ljmp
xlat
mov
insb
or
into
pop
adc
add
int3
sahf
movsb
clc
bound
outsb
sbb
mov
leave
fidivrl
dec
or
and
stc
sbb
adc
into
adc
fisttpl
cld
cmp
sbb
ds
pop
sbb
sarb
out
cmp
imul
adc
add
sub
sbb
dec
cs
pusha
dec
ret
xor
syscall
jbe
mov
sub
and
inc
sbb
stos
and
cmc
sub
mov
add
incb
sbb
xchg
mov
lahf
mov
test
aam
mov
fucomp
jg
clc
cmpsl
hlt
scas
dec
addb
mov
dec
ret
jo
sub
subl
push
lret
cli
les
loopne
add
scas
push
sub
bound
mov
or
int
push
stc
mov
jmp
mov
negb
mov
lcall
xor
jb
cs
inc
cmp
dec
fwait
cmpsb
arpl
jae
sbb
xor
push
aad
mov
xor
movsl
dec
mov
sub
shll
fwait
xor
sbb
push
dec
movsl
cmpsb
bound
sahf
dec
mov
add
xor
lahf
add
add
out
sub
bnd
pop
xor
push
aad
out
mov
std
jle
pop
mov
shlb
lahf
push
out
aam
fmull
nop
pop
les
sti
xchg
jle
bound
jecxz
icebp
cs
inc
inc
push
aam
lods
push
pop
ss
xchg
inc
rorb
out
aad
mov
xor
mov
mov
mov
jo
dec
add
xor
loope
in
pop
mov
pushl
popf
sti
lds
mov
pushf
dec
paddw
lods
sub
cli
rep
aad
scas
push
or
cmp
xchg
or
and
adc
stos
cmp
js
jne
stos
sbbb
shll
add
jle
jno
sub
push
in
scas
iret
mov
adc
sub
lock
popa
inc
cmpsl
stos
fs
and
divb
and
inc
lcall
or
lods
push
aas
sbb
and
sahf
movsl
jl
sbbl
mov
popf
push
loopne
lahf
add
fwait
out
mov
sbb
std
je
cmp
mov
fcmove
pop
mov
or
setne
mov
push
push
xchg
pop
lods
or
pop
in
dec
sarl
pop
push
jecxz
xchg
pop
stc
push
push
pop
aad
mov
push
movsl
jl
xor
sbb
mov
cs
or
fsubs
sub
xor
mov
ret
jbe
cmpsl
and
iret
inc
add
pop
aad
mov
mov
test
jnp
xchg
mov
pop
jbe
push
mov
movsb
mov
and
outsb
xchg
ret
test
das
pop
lahf
scas
jg
mov
mov
and
lret
push
js
loope
dec
pop
xchg
pop
push
inc
mov
pop
inc
js
fisubrl
mov
test
jb
fiadds
cmp
xchg
test
popf
xchg
insb
cmpl
popl
adc
repz
xchg
jle
cmp
jmp
sub
ret
mov
aam
int
or
jb
stc
sub
cs
jb
out
sbb
dec
xor
adc
ffreep
lcall
movl
cmp
bound
dec
ffreep
push
cmp
cmc
sti
or
mov
das
adcl
and
cmp
fstpl
sbb
inc
mov
loope
into
leave
loop
mov
add
fists
sbb
push
int
ret
stos
adc
push
cmp
mov
lea
sub
push
imul
sub
lock
mov
sbbl
add
inc
stos
mov
js
pop
pop
mov
jg
inc
cs
jp
sti
jmp
mov
mov
jge
mov
nop
pop
lcall
pop
jae
cld
pop
mov
ds
inc
dec
roll
int
mov
adc
outsl
inc
sti
pop
repnz
lcall
scas
jb
ret
std
icebp
mov
stos
pop
pop
repz
cld
mov
adc
cmpsb
push
call
xchg
fwait
outsb
movsb
lods
mov
rcrl
pushf
in
lea
shl
push
adc
dec
jmp
gs
add
stc
bound
mov
sahf
inc
hlt
test
pop
clc
mov
inc
lods
mov
fcoml
sub
xchg
adc
and
adc
push
movsb
fwait
xchg
and
je
ret
jb
mov
cmp
xchg
