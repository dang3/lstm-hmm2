push
call
pop
cmp
jbe
cmpb
je
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
push
call
push
call
mov
movl
mov
mov
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
mov
dec
dec
mov
cmpl
jae
mov
movzbl
mov
and
movzwl
and
movzbl
add
mov
add
mov
jmp
push
push
pushl
call
mov
xor
inc
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
rep
call
push
call
pop
pop
leave
ret
lret
insb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
cmp
dec
inc
aaa
xor
ss
xor
ss
inc
xor
inc
xor
inc
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
inc
xor
dec
inc
xor
xor
xor
xor
inc
xor
ss
xor
inc
xor
inc
ss
ss
xor
ss
dec
xor
xor
inc
xor
or
ss
inc
xor
xor
inc
ss
xor
xor
inc
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
inc
xor
xor
ss
xor
cmp
inc
inc
xor
jl
xor
aaa
xor
dec
xor
cmp
aaa
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
ss
inc
xor
xor
cmp
xor
xor
inc
inc
xor
xor
inc
inc
ss
xor
jl
xor
insb
xor
jl
xor
aaa
inc
inc
inc
dec
xor
jl
inc
aaa
dec
xor
inc
inc
dec
insb
xor
cmp
xor
cmp
jl
inc
xor
inc
inc
xor
inc
inc
xor
inc
xor
inc
or
jl
dec
cmp
xor
or
inc
xor
xor
xor
inc
cmp
xor
xor
xor
inc
inc
inc
cmp
xor
inc
xor
xor
cmp
xor
jl
jl
inc
inc
inc
dec
inc
xor
inc
inc
inc
or
inc
ss
xor
inc
xor
insb
xor
inc
xor
xor
inc
inc
inc
aaa
dec
inc
inc
inc
dec
cmp
inc
cmp
inc
xor
inc
xor
inc
inc
inc
xor
inc
insb
inc
inc
inc
inc
inc
inc
cmp
cmp
dec
cmp
dec
inc
xor
inc
cmp
inc
inc
aaa
xor
inc
aaa
aaa
cmp
inc
inc
jl
or
inc
cmp
insb
aaa
inc
aaa
inc
inc
inc
jl
cmp
inc
inc
cmp
dec
inc
aaa
aaa
dec
aaa
inc
inc
inc
insb
inc
inc
dec
xor
or
inc
inc
je
and
cs
and
fs
xor
aaa
xor
jne
sub
ss
jb,pn
xor
xor
xor
xor
inc
xor
aaa
inc
ss
cmp
aaa
inc
xor
aaa
inc
cmp
xor
aaa
inc
inc
xor
or
jl
xor
cmp
dec
inc
inc
inc
cmp
or
dec
xor
xor
inc
inc
aaa
dec
jl
xor
dec
xor
aaa
xor
xor
dec
aaa
inc
insb
aaa
cmp
or
xor
xor
dec
inc
or
aaa
inc
xor
inc
xor
aaa
xor
inc
aaa
inc
aaa
inc
aaa
inc
aaa
aaa
insb
inc
cmp
xor
insb
or
jl
xor
cmp
aaa
xor
dec
cmp
inc
xor
aaa
inc
inc
ss
aaa
xor
xor
jl
inc
ss
xor
xor
dec
xor
dec
xor
inc
dec
inc
xor
xor
jl
inc
inc
cmp
xor
xor
inc
cmp
xor
cmp
cmp
inc
cmp
xor
cmp
inc
dec
xor
inc
xor
cmp
inc
xor
xor
or
inc
cmp
cmp
cmp
cmp
xor
jl
jl
xor
aaa
dec
inc
inc
insb
inc
xor
inc
xor
xor
cmp
or
cmp
cmp
xor
xor
xor
xor
inc
inc
inc
xor
cmp
cmp
xor
cmp
inc
cmp
cmp
dec
xor
inc
inc
xor
inc
xor
inc
cmp
jl
dec
xor
insb
inc
dec
inc
xor
inc
xor
inc
inc
xor
xor
insb
cmp
xor
xor
xor
cmp
xor
dec
outsl
bound
imul
dec
popa
xor
je
or
inc
imul
jo
popa
inc
push
imul
arpl
inc
xor
jl
inc
bound
outsb
inc
inc
inc
inc
xor
aaa
pop
inc
xor
imul
cmp
jb
jae
inc
popa
cmp
inc
inc
xor
xor
xor
pop
inc
xor
pop
bound
and
xor
aaa
jne
xor
cmp
inc
jae
je
xor
fs
cmp
bound
cmp
outsb
inc
inc
cmp
inc
insb
xor
inc
cmp
je
xor
xor
dec
outsb
sub
je
xor
xor
cmp
inc
xor
insb
cmp
inc
inc
xor
inc
insb
inc
xor
or
xor
xor
ss
xor
xor
xor
aaa
inc
outsb
outsb
xor
sub
dec
inc
cmp
xor
xor
inc
xor
inc
xor
ss
inc
xor
xor
xor
inc
cmp
dec
inc
cmp
imul
cmp
xor
inc
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
inc
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
inc
xor
or
inc
xor
cmp
inc
dec
cmp
xor
or
or
dec
cmp
cmp
xor
xor
cmp
cmp
inc
dec
xor
inc
xor
inc
xor
inc
xor
jl
inc
xor
xor
xor
jl
xor
ss
dec
xor
xor
xor
inc
jl
xor
cmp
dec
inc
or
cmp
xor
inc
cmp
inc
inc
xor
xor
cmp
xor
aaa
xor
insb
cmp
inc
xor
ss
cmp
or
cmp
inc
inc
inc
cmp
inc
inc
dec
aaa
inc
or
cmp
cmp
dec
jl
aaa
inc
aaa
inc
xor
inc
inc
cmp
aaa
cmp
dec
cmp
cmp
xor
inc
cmp
inc
cmp
dec
xor
cmp
xor
xor
jo
jns
jo
gs
push
inc
xor
push
xor
cmp
inc
jns
outsl
insl
fs
dec
cs
cmp
arpl
or
insl
fs
inc
inc
and
and
ss
inc
js
xor
cmp
inc
xor
cmp
arpl
gs
xor
xor
das
aaa
xor
imul
pop
cmp
outsl
jl,pn
imul
sub
cmp
inc
cmp
jae
inc
ss
inc
xor
jne
inc
xor
aaa
xor
xor
and
gs
xor
sub
xor
aaa
cmp
cmp
jb,pn
bound
inc
and
or
ss
outsb
cmp
xor
jl
or
xor
inc
cmp
cmp
cmp
inc
cmp
ss
cmp
inc
cmp
outsb
cmp
xor
xor
inc
ss
xor
xor
cmp
inc
xor
xor
inc
xor
inc
dec
ss
outsl
xor
cmp
xor
cmp
cmp
insb
inc
or
insb
inc
inc
xor
cmp
cmp
jl
cmp
jl
inc
cmp
xor
inc
dec
cmp
jl
xor
inc
dec
xor
dec
xor
inc
xor
xor
cmp
xor
jl
inc
xor
inc
xor
inc
inc
dec
xor
xor
dec
aaa
cmp
xor
cmp
xor
xor
xor
xor
cmp
cmp
insb
inc
xor
xor
inc
xor
xor
xor
xor
xor
aaa
insb
cmp
xor
or
xor
cmp
insb
inc
aaa
xor
or
inc
xor
xor
inc
inc
dec
xor
xor
inc
xor
xor
inc
inc
xor
xor
inc
xor
inc
xor
xor
jb,pn
jo
arpl
jl,pt
insb
dec
outsl
gs
cmp
jne
cmp
jl
xor
jbe
xor
dec
or
cmp
xor
imul
aaa
pop
bound
xor
xor
insb
inc
inc
arpl
xor
outsb
xor
xor
aaa
cmp
xor
or
jne
cmp
inc
inc
or
or
cmp
xor
cmp
inc
jae
xor
xor
jns
xor
aaa
outsl
xor
xor
or
inc
jb
xor
xor
xor
sub
xor
aaa
and
jb
js
outsb
outsl
arpl
xor
popa
cmp
je
xor
cmp
insb
cmp
inc
xor
inc
cmp
jl
inc
xor
dec
dec
inc
je
cmp
inc
xor
insb
xor
inc
inc
inc
dec
inc
or
xor
inc
cmp
xor
or
inc
dec
je
cmp
jl
xor
cmp
xor
outsb
inc
sub
dec
sub
inc
insb
aaa
inc
inc
cmp
dec
inc
xor
inc
cmp
dec
xor
imul
inc
xor
dec
xor
inc
xor
inc
inc
outsb
xor
or
inc
dec
cmp
xor
cmp
inc
inc
or
sub
je
and
jo
pop
gs
insb
and
popa
jns
jb
outsl
arpl
jbe
and
insw
pop
sub
gs
outsb
inc
and
jo
outsl
push
gs
push
outsl
inc
and
jb
pop
and
jae
outsl
xor
jae
gs
sub
jb,pn
jns
and
sub
xor
or
jns
popa
ss
jb
popa
xor
inc
cmp
imul
xor
inc
cmp
xor
or
inc
gs
sub
xor
or
xor
jl
xor
cmp
xor
imul
xor
cmp
inc
inc
or
cmp
xor
xor
jae
xor
gs
inc
inc
xor
cmp
cmp
inc
or
arpl
ss
xor
inc
inc
xor
outsl
je
cmp
xor
ss
xor
cmp
addr16
xor
xor
inc
pop
je
xor
arpl
xor
xor
cmp
imul
or
cmp
xor
cmp
aaa
inc
xor
xor
inc
dec
popa
xor
outsl
xor
jo
outsb
ss
inc
xor
xor
xor
aaa
ss
ss
ss
inc
ss
aaa
xor
xor
aaa
ss
xor
cmp
xor
ss
aaa
inc
xor
xor
ss
aaa
inc
inc
xor
xor
inc
xor
ss
xor
xor
xor
inc
inc
xor
inc
xor
xor
xor
ss
xor
ss
xor
xor
xor
inc
ss
xor
xor
xor
inc
xor
inc
aaa
xor
xor
xor
inc
ss
inc
ss
cmp
inc
xor
xor
cmp
xor
inc
xor
xor
xor
cmp
cmp
xor
xor
cmp
xor
aaa
cmp
xor
xor
xor
sub
jns
xor
gs
je
jns
imul
jo
and
inc
jb
cmp
or
xor
sub
bound
jb
pop
xor
push
aaa
cmp
inc
inc
inc
sub
bound
cmp
jb
outsb
je
outsb
jo
or
xor
pop
ss
and
fs
cmp
gs
insl
xor
outsl
cmp
xor
imul
cmp
ss
popa
sub
aaa
popa
arpl
or
xor
xor
js
xor
inc
arpl
popa
inc
arpl
and
cmp
cmp
ds
cmp
xor
xor
inc
inc
or
dec
inc
inc
insb
cmp
aaa
jge
imul
gs
jnp
and
imul
aaa
addr16
bound
jnp,pn
gs
bound
imul
arpl
and
cmp
jnp
sub
sub
xor
jge
and
bound
insb
xor
outsb
xor
and
and
sub
and
xor
and
outsl
and
popa
jnp
imul
popa
xor
and
sub
aaa
xor
insb
xor
sub
cs
sub
jae
and
jge,pn
addr16
xor
xor
jge
jae
jge
cs
jb
xor
push
pop
popa
jb
popa
xor
and
cs
arpl
jb
sub
jge
gs
and
insb
jae
popa
arpl
popa
outsl
xor
jne
outsb
pop
xor
sub
and
jne
imul
xor
jb
and
bound
pop
jnp
and
jnp
xor
addr16
xor
xor
xor
cmp
inc
xor
inc
cmp
aaa
cmp
xor
cmp
cmp
xor
cmp
xor
xor
xor
ss
aaa
cmp
cmp
or
cmp
cmp
cs
cmp
inc
cmp
inc
cmp
xor
xor
arpl
imul
and
and
arpl
insl
outsl
imul
and
insb
jge
sub
popa
sub
outsl
and
pop
bound
sub
popa
popa
gs
jb
cs
popa
push
sub
jae
imul
pop
and
imul
insl
and
and
xor
xor
cmp
inc
xor
dec
inc
xor
xor
inc
xor
xor
xor
xor
xor
xor
ss
inc
xor
ss
xor
ss
aaa
inc
xor
xor
ss
xor
xor
xor
ss
xor
aaa
xor
ss
xor
xor
xor
xor
inc
aaa
xor
ss
inc
xor
xor
aaa
xor
xor
xor
xor
xor
xor
dec
inc
insb
jl
inc
inc
inc
cmp
xor
xor
inc
ss
cmp
cmp
or
xor
inc
aaa
xor
inc
xor
inc
inc
or
xor
inc
xor
xor
xor
or
inc
dec
cmp
xor
xor
xor
dec
dec
xor
or
inc
xor
xor
xor
xor
xor
xor
jl
dec
xor
jl
inc
inc
xor
inc
xor
jl
inc
xor
inc
inc
inc
cmp
inc
insb
ss
ss
inc
aaa
xor
popa
je
or
dec
inc
aaa
or
aaa
inc
xor
imul
sub
inc
aaa
xor
inc
inc
inc
pop
inc
inc
aaa
cmp
aaa
inc
xor
xor
xor
ss
xor
jae
push
inc
inc
cmp
cmp
inc
inc
jae
cmp
gs
cmp
xor
dec
xor
dec
jo
dec
xor
inc
inc
aaa
aaa
inc
cmp
jl
inc
inc
inc
aaa
jae
aaa
ds
outsb
aaa
inc
or
xor
xor
aaa
inc
cs
jl
gs
inc
cmp
cmp
inc
inc
jl
cmp
outsl
or
cmp
cs
cmp
jae
inc
bound
xor
xor
aaa
je
arpl
arpl
xor
jl
cmp
xor
inc
inc
cmp
dec
or
dec
inc
inc
inc
inc
xor
xor
cmp
gs
xor
cmp
dec
cmp
xor
cmp
or
jl
cmp
aaa
xor
je
xor
inc
xor
inc
jae
jae
inc
cmp
cmp
js
xor
cmp
xor
cmp
jae
aaa
sub
jl
jp
aaa
aaa
xor
xor
dec
cmp
inc
aaa
xor
inc
xor
aaa
aaa
xor
cmp
inc
cmp
inc
or
push
fs
dec
popa
inc
aaa
xor
inc
cmp
inc
cmp
xor
inc
inc
cmp
aaa
inc
cmp
insb
xor
dec
outsb
xor
xor
xor
xor
je
xor
xor
xor
xor
cmp
inc
ss
cmp
inc
cmp
jl
dec
xor
aaa
xor
insb
jae
cmp
imul
insb
popa
cmp
insb
je
imul
ss
cmp
cmp
inc
jo
sub
inc
cmp
xor
outsl
inc
xor
gs
je
cmp
xor
insb
cmp
xor
xor
cmp
cmp
insb
xor
jae
ds
popa
inc
xor
xor
cmp
cmp
xor
xor
sub
inc
sub
sub
push
arpl
inc
cmp
jae
xor
ss
xor
dec
je
xor
cmp
imul
xor
outsl
and
arpl
cs
and
xor
xor
bound
pop
cmp
xor
and
gs
jno
and
outsb
jnp
jb,pn
jno
aaa
xor
popa
xor
ss
xor
pop
xor
and
insb
sub
imul
cs
jnp
and
sub
sub
arpl
xor
insb
and
jnp
push
pop
bound
push
outsb
cmp
cmp
sub
cs
jb
sub
cmp
and
xor
imul
sub
outsb
xor
jnp
xor
jge
arpl
push
cmp
popa
xor
aaa
xor
and
popa
xor
xor
xor
cs
outsb
xor
bound
dec
and
push
outsl
jo
xor
sub
insl
xor
xor
popa
or
cmp
data16
sub
xor
fs
cmp
imul
aaa
jo
cmp
and
and
and
and
xor
and
xor
jo
cmp
cmp
jne
gs
cmp
xor
dec
xor
push
cmp
outsb
jae
and
insl
gs
ds
xor
imul
and
jae
outsb
cmp
sub
fs
jb,pt
insl
data16
cmp
push
or
popa
and
and
jb
xor
and
and
gs
xor
cmp
push
push
push
popa
outsl
jb
xor
xor
cmp
and
cmp
aaa
dec
jo
bound
or
sub
cmp
bound
bound
xor
aaa
xor
inc
popa
aaa
xor
inc
popa
cmp
jb
push
cmp
cmp
gs
inc
cmp
jae
cmp
outsl
cmp
je
cmp
cmp
xor
insl
cmp
outsb
xor
cmp
push
xor
cmp
dec
cmp
bound
popa
xor
bound
pop
dec
inc
xor
inc
je
or
inc
and
outsb
outsl
imul
je
push
and
and
push
jbe
popa
sub
outsb
outsb
and
imul
imul
popa
and
outsl
imul
sub
popa
pop
jnp
and
cs
and
outsl
insb
outsl
jb
popa
and
gs
je
insl
push
sub
xor
insb
imul
inc
inc
xor
inc
xor
dec
jl
xor
outsb
inc
inc
imul
xor
ss
cmp
inc
jl
popa
dec
cmp
ss
and
inc
insb
imul
cmp
xor
xor
insb
outsb
popa
imul
cs
and
sub
and
sub
and
pop
sub
jnp
and
and
cmp
and
bound
imul
jnp
jnp
and
imul
and
sub
and
insl
jge
aaa
outsl
js
jne
pop
xor
jge
bound
jb
sub
xor
outsl
js
insl
jnp
jo
and
bound
jge
xor
bound
outsl
popa
insl
insb
bound
xor
jnp
sub
fs
outsb
sub
outsb
cs
jge
and
and
sub
jnp
xor
imul
jb
outsl
bound
gs
and
pop
outsb
sub
sub
xor
bound
bound
cs
sub
insb
popa
insl
sub
insb
jnp
xor
sub
push
bound
jb
je,pn
pop
pop
and
js
cmp
imul
popa
jne
xor
jae
xor
xor
sub
push
imul
cmp
jae
je,pt
xor
xor
popa
jo
popa
jo
xor
cmp
inc
xor
inc
cmp
push
pop
or
push
and
outsb
or
cmp
jne
or
outsl
xor
je
inc
outsb
sub
xor
xor
jb
cmp
xor
dec
arpl
dec
inc
xor
popa
xor
cmp
arpl
xor
xor
and
js
xor
gs
cmp
das
insl
inc
jns
aaa
arpl
xor
xor
xor
cmp
inc
cmp
inc
cmp
insb
xor
xor
inc
inc
inc
inc
inc
xor
jl
or
dec
xor
xor
xor
aaa
xor
aaa
dec
cmp
inc
dec
xor
xor
aaa
inc
inc
inc
cmp
inc
inc
inc
inc
xor
xor
xor
inc
jl
insb
inc
inc
jl
inc
xor
dec
dec
jl
xor
xor
xor
inc
or
insb
xor
cmp
cmp
xor
dec
pop
xor
jb
dec
cmp
xor
xor
insb
xor
xor
aaa
inc
xor
gs
insb
xor
inc
inc
inc
aaa
imul
aaa
cmp
je
jb
jl
inc
inc
dec
aaa
gs
xor
xor
jl
cmp
xor
cmp
xor
inc
xor
xor
xor
xor
aaa
jo
sub
inc
xor
xor
aaa
xor
dec
xor
cmp
inc
xor
inc
xor
inc
inc
inc
xor
jae
xor
je
xor
aaa
cmp
ss
ss
cmp
or
cmp
or
xor
inc
aaa
xor
inc
ss
cmp
cmp
xor
ss
cmp
jb
je
outsl
and
jb
xor
jae
je
data16
push
jb
insl
jb
cmp
je
and
gs
addr16
xor
jne
sub
data16
and
and
xor
jb
popa
cs
outsb
xor
je
and
je
imul
and
je
jne
dec
xor
dec
xor
xor
insl
xor
cmp
xor
or
cmp
or
xor
bound
xor
jb
outsb
outsb
popa
push
jae,pn
ss
outsb
and
and
popa
cmp
jne
cmp
outsb
gs
xor
je
cmp
gs
and
imul
cmp
xor
xor
xor
jl
xor
xor
xor
dec
xor
xor
inc
xor
or
xor
insb
xor
xor
ss
inc
inc
xor
inc
xor
dec
xor
xor
xor
xor
inc
jl
inc
dec
xor
xor
xor
inc
cmp
dec
cmp
inc
inc
xor
insb
inc
xor
xor
xor
xor
inc
xor
xor
outsl
push
xor
insb
outsl
gs
xor
xor
or
je
outsl
jbe
xor
and
dec
or
insb
push
xor
xor
and
jb
and
xor
arpl
xor
outsl
outsb
xor
imul
jb
insb
pop
je
and
cmp
or
outsb
cmp
xor
cmp
cmp
ss
outsl
outsl
or
push
outsl
push
imul
xor
cmp
popa
imul
xor
outsb
and
jb
jo
je
cmp
xor
insb
arpl
inc
xor
cmp
jl
inc
or
inc
inc
cmp
xor
inc
xor
insb
inc
inc
inc
inc
inc
xor
inc
xor
insb
xor
inc
cmp
aaa
inc
inc
xor
xor
jl
insb
sub
insb
xor
xor
inc
inc
dec
xor
jl
inc
aaa
inc
insb
xor
xor
xor
xor
inc
inc
xor
dec
aaa
dec
dec
aaa
cmp
xor
inc
inc
xor
xor
xor
inc
aaa
cmp
cmp
inc
dec
xor
inc
cmp
aaa
aaa
xor
aaa
xor
dec
aaa
aaa
xor
jl
dec
aaa
xor
xor
or
inc
cmp
aaa
xor
inc
aaa
xor
xor
xor
cmp
xor
insb
xor
inc
ss
inc
xor
inc
dec
inc
inc
inc
inc
je
inc
inc
xor
dec
or
insb
inc
inc
aaa
inc
dec
xor
xor
inc
inc
xor
xor
xor
cmp
inc
inc
aaa
dec
cmp
jl
aaa
aaa
xor
aaa
aaa
inc
xor
xor
xor
cmp
inc
xor
xor
xor
jl
dec
aaa
dec
xor
xor
inc
inc
cmp
inc
cmp
inc
aaa
insb
dec
xor
xor
xor
dec
insb
xor
or
inc
xor
inc
cmp
dec
xor
inc
inc
xor
insb
inc
insb
xor
cmp
inc
inc
dec
cmp
or
aaa
inc
xor
dec
jl
inc
cmp
inc
inc
dec
or
inc
insb
xor
cmp
xor
cmp
jl
cmp
or
insb
inc
dec
inc
xor
xor
aaa
xor
xor
or
xor
cmp
inc
cmp
inc
cmp
xor
cmp
xor
inc
cmp
or
aaa
xor
inc
inc
xor
jl
xor
inc
xor
xor
dec
inc
jl
imul
inc
xor
or
or
ss
gs
xor
cmp
xor
inc
inc
xor
xor
inc
inc
inc
xor
jl
gs
cmp
xor
dec
inc
inc
jb
inc
xor
xor
xor
xor
xor
bound
xor
xor
insb
outsl
inc
inc
outsb
cmp
aaa
inc
jl
xor
imul
inc
inc
xor
xor
inc
insb
insb
inc
push
xor
inc
cmp
cmp
inc
xor
dec
bound
jl
jbe
pop
xor
xor
insb
cmp
dec
or
inc
xor
inc
or
cmp
outsb
inc
inc
xor
jo
cmp
je
xor
xor
dec
xor
inc
inc
inc
xor
jo
xor
dec
inc
inc
cmp
cmp
xor
inc
jb
xor
xor
inc
bound
gs
xor
jo
xor
xor
xor
cmp
popa
inc
jne
jl
aaa
cmp
inc
inc
xor
cmp
cmp
outsl
xor
bound
gs
cmp
imul
xor
or
and
or
xor
arpl
gs
xor
and
cmp
cmp
data16
outsb
or
cmp
pop
data16
js
outsl
jae
xor
cmp
js
gs
jb
or
cmp
jb
inc
jb
outsl
bound
push
gs
jb
or
imul
pop
outsb
arpl
cmp
je
xor
jne
cmp
jne
jae
popa
and
xor
insl
data16
xor
jae
arpl
outsl
jae
dec
gs
jb
data16
arpl
or
or
gs
js
jne
and
dec
xor
insb
or
cmp
jb
cmp
xor
inc
xor
inc
cmp
cmp
inc
inc
dec
xor
xor
aaa
insb
inc
insb
xor
dec
dec
or
cmp
cmp
inc
inc
inc
insb
xor
xor
xor
xor
inc
inc
dec
inc
inc
inc
xor
inc
cmp
or
xor
inc
xor
inc
inc
insb
inc
inc
inc
xor
xor
inc
inc
dec
cmp
cmp
xor
xor
xor
jl
inc
cmp
xor
aaa
jl
inc
xor
or
cmp
cmp
or
cmp
inc
inc
xor
cmp
xor
inc
xor
jl
inc
xor
xor
inc
or
xor
inc
inc
insb
xor
insb
xor
inc
inc
jl
cmp
xor
inc
cmp
xor
inc
inc
xor
inc
xor
xor
insb
inc
inc
xor
inc
xor
inc
dec
xor
jl
cmp
dec
xor
cmp
inc
xor
xor
dec
xor
xor
inc
insb
jl
insl
insb
or
jae
cmp
outsl
jae
outsl
outsl
and
je
xor
jo
insb
bound
outsl
jo
cmp
outsl
outsl
outsl
je
outsb
arpl
imul
insl
insl
xor
arpl
je
outsl
and
or
bound
cmp
bound
and
jae
and
jae
and
xor
outsb
and
bound
outsl
arpl
outsl
arpl
imul
and
xor
imul
je
xor
and
je
arpl
bound
outsl
xor
je
xor
outsb
xor
arpl
bound
outsl
aaa
xor
outsl
outsb
outsl
outsl
insl
outsl
imul
and
xor
je
xor
and
arpl
and
bound
cmp
cmp
jo
cmp
and
insl
insl
cmp
cmp
xor
outsl
and
jae
xor
cmp
dec
aaa
inc
inc
xor
dec
inc
insb
dec
insb
inc
dec
xor
aaa
inc
aaa
inc
jl
inc
xor
aaa
inc
inc
inc
aaa
inc
inc
dec
cmp
xor
jl
xor
or
inc
xor
inc
xor
xor
cmp
inc
jl
inc
xor
inc
inc
dec
insb
insb
dec
cmp
inc
xor
inc
inc
inc
xor
inc
aaa
jl
inc
inc
aaa
inc
jl
aaa
jl
xor
insb
cmp
xor
dec
xor
dec
xor
inc
insb
cmp
aaa
xor
xor
cmp
inc
inc
inc
inc
xor
inc
inc
cmp
inc
inc
inc
inc
dec
inc
cmp
inc
xor
xor
dec
xor
inc
or
dec
cmp
inc
xor
dec
inc
dec
xor
or
inc
insb
aaa
inc
xor
inc
inc
cmp
or
xor
dec
xor
inc
aaa
cmp
inc
or
inc
insb
inc
cmp
jl
jl
dec
cmp
inc
inc
insb
inc
cmp
xor
inc
cmp
xor
jl
inc
inc
cmp
cmp
cmp
insb
inc
cmp
cmp
insb
inc
aaa
inc
inc
cmp
cmp
cmp
inc
or
dec
xor
xor
cmp
cmp
xor
insb
inc
cmp
inc
xor
cmp
inc
dec
cmp
inc
inc
aaa
cmp
or
xor
xor
xor
xor
cmp
xor
aaa
cmp
dec
xor
xor
xor
inc
cmp
jl
cmp
xor
inc
inc
inc
dec
xor
inc
jl
aaa
xor
or
xor
cmp
xor
inc
or
inc
cmp
aaa
xor
jl
dec
cmp
cmp
inc
aaa
cmp
inc
cmp
xor
cmp
xor
cmp
cmp
sub
xor
xor
jl
xor
cmp
cmp
cmp
cmp
cmp
inc
xor
je
dec
xor
inc
aaa
inc
cmp
xor
xor
aaa
inc
cmp
insl
cmp
inc
je
aaa
jl
dec
xor
gs
or
xor
dec
aaa
inc
inc
inc
xor
xor
inc
dec
cmp
xor
aaa
cmp
xor
xor
cmp
cmp
dec
cmp
sub
xor
aaa
or
xor
inc
xor
xor
inc
xor
je
xor
aaa
xor
xor
inc
xor
inc
inc
ss
xor
xor
ss
inc
xor
xor
xor
xor
ss
xor
xor
xor
inc
xor
ss
aaa
xor
xor
xor
xor
xor
ss
inc
ss
xor
xor
ss
inc
cmp
aaa
inc
inc
cmp
xor
ss
ss
xor
ss
cmp
xor
xor
xor
xor
xor
xor
xor
ss
aaa
aaa
aaa
cmp
xor
ss
xor
xor
ss
xor
xor
ss
ss
xor
ss
cmp
xor
aaa
xor
ss
inc
xor
xor
xor
aaa
xor
xor
ss
aaa
aaa
inc
xor
xor
cmp
xor
sub
and
insb
xor
jb
imul
gs
popa
and
or
je
and
jbe
xor
xor
and
jo
jae
and
cs
arpl
je
gs
pop
cmp
outsl
outsb
push
arpl
outsl
outsl
xor
das
jns
jb
outsl
or
and
jb
data16
xor
xor
insb
bound
popa
jb
or
and
or
insb
push
ja
or
bound
outsb
xor
xor
jb
pop
cmp
js
and
outsb
and
jo
cmp
xor
xor
pop
imul
imul
and
push
arpl
xor
xor
arpl
cmp
jne
je
je
xor
gs
dec
cmp
outsb
and
and
or
arpl
je
ss
outsb
jb
cmp
cmp
xor
push
xor
xor
dec
xor
or
cmp
xor
xor
xor
inc
xor
cmp
ds
cmp
pop
xor
dec
xor
popa
dec
cmp
aaa
xor
cmp
jl
inc
cmp
cmp
xor
aaa
inc
xor
cmp
xor
xor
gs
je
cs
pop
or
xor
xor
xor
inc
cmp
xor
outsl
cmp
gs
inc
ds
xor
cmp
inc
je
sub
cmp
inc
inc
sub
inc
or
inc
cmp
cmp
xor
xor
inc
aaa
aaa
xor
cmp
xor
cmp
cmp
jl
insb
xor
cmp
cmp
cmp
xor
cmp
xor
xor
ss
xor
dec
inc
xor
dec
insb
aaa
cmp
ss
cmp
xor
cmp
aaa
cmp
xor
cmp
inc
inc
aaa
xor
xor
xor
aaa
inc
dec
xor
inc
xor
xor
aaa
inc
xor
xor
ss
cmp
or
aaa
xor
xor
xor
dec
cmp
xor
dec
xor
dec
inc
or
cmp
jl
xor
xor
xor
cmp
xor
aaa
dec
inc
insb
insb
xor
aaa
aaa
xor
xor
xor
or
xor
xor
inc
dec
insb
dec
inc
xor
xor
aaa
insb
cmp
or
jns
xor
xor
xor
gs
bound
xor
xor
popa
fs
aaa
inc
xor
and
xor
fs
sub
cmp
or
cmp
inc
je
dec
pop
gs
or
jo
xor
dec
or
jo
js
jns
jns
xor
pop
cmp
and
imul
cmp
imul
and
xor
pop
cmp
jb
popa
xor
xor
and
cmp
xor
xor
xor
cs
js
xor
xor
push
sub
xor
data16
jae
aaa
cmp
imul
inc
ss
outsb
cmp
xor
cmp
inc
cmp
ds
js
cmp
dec
arpl
xor
xor
je
xor
cs
cmp
jo
imul
gs
cmp
jne
outsl
xor
xor
aaa
cs
xor
cmp
jb
aaa
and
je
cmp
cmp
sub
xor
xor
xor
pop
dec
and
je
xor
push
xor
outsb
je
xor
or
xor
or
jb
xor
jb
jb
data16
inc
xor
inc
outsb
xor
insb
inc
jae
xor
outsl
ss
cmp
inc
xor
inc
pop
xor
inc
jno
dec
ss
cmp
insb
insb
inc
cmp
cmp
jne
xor
inc
inc
xor
cmp
ja
pop
xor
ss
ss
xor
dec
cmp
xor
gs
or
cmp
inc
xor
xor
ss
jae
ss
xor
xor
inc
dec
inc
jne
ss
ja
arpl
inc
cmp
xor
inc
gs
inc
inc
inc
or
inc
inc
bound
xor
popa
cmp
je
inc
jl
inc
je
jae
ss
jbe
xor
popa
or
xor
or
jns
cmp
pop
or
xor
inc
inc
cmp
insb
inc
insb
cmp
xor
xor
inc
or
inc
inc
dec
jl
dec
dec
dec
inc
xor
xor
xor
dec
or
xor
cmp
xor
ss
insb
xor
ss
inc
xor
inc
inc
inc
inc
xor
cmp
insb
ss
inc
xor
jl
and
xor
fs
jo
xor
xor
imul
xor
and
popa
or
popa
dec
and
and
and
xor
jb
imul
popa
xor
outsb
je
xor
cmp
xor
jns
jae
gs
insb
popa
cmp
cmp
or
jno
cmp
push
outsb
jne
cmp
xor
ss
xor
xor
cmp
inc
xor
xor
cmp
xor
cmp
xor
ss
ss
ss
cmp
inc
ss
xor
xor
xor
inc
xor
inc
xor
xor
xor
cmp
inc
xor
inc
xor
inc
ss
aaa
xor
ss
xor
xor
ss
xor
xor
cmp
inc
aaa
or
xor
xor
cmp
xor
inc
inc
inc
xor
xor
inc
xor
inc
xor
xor
inc
cmp
cmp
cmp
insb
inc
cmp
cmp
inc
or
inc
inc
xor
dec
or
xor
inc
xor
inc
xor
dec
ss
xor
inc
jl
cmp
inc
inc
inc
inc
xor
dec
xor
inc
cmp
xor
xor
cmp
jl
dec
xor
cmp
xor
cmp
inc
xor
xor
cmp
xor
inc
cmp
dec
jl
dec
inc
inc
aaa
xor
xor
inc
cmp
xor
xor
cmp
jl
inc
xor
cmp
or
xor
xor
cmp
xor
xor
cmp
inc
inc
xor
xor
inc
dec
inc
xor
xor
inc
jl
dec
cmp
xor
inc
inc
cmp
insb
cmp
cmp
insb
cmp
ss
inc
dec
insb
xor
inc
ss
ss
cmp
xor
cmp
xor
inc
xor
xor
or
outsl
fs
aaa
aaa
cmp
ss
inc
cmp
aaa
dec
xor
xor
xor
xor
inc
inc
insb
cmp
cmp
xor
xor
ss
jl
xor
ss
dec
or
cmp
xor
xor
xor
xor
inc
xor
cmp
inc
xor
xor
cmp
insb
cmp
cmp
aaa
dec
xor
cmp
xor
xor
dec
cmp
cmp
inc
cmp
inc
xor
xor
cmp
inc
inc
inc
inc
inc
xor
xor
cmp
inc
cmp
cmp
inc
dec
insb
jl
xor
inc
cmp
inc
xor
inc
cmp
inc
xor
dec
insb
inc
or
xor
xor
inc
cmp
cmp
xor
dec
insb
jl
inc
xor
inc
dec
cmp
insb
inc
xor
inc
cmp
inc
xor
aaa
inc
dec
inc
or
inc
xor
insb
xor
cmp
cmp
cmp
inc
cmp
inc
or
or
cmp
xor
inc
jl
xor
xor
xor
cmp
inc
inc
cmp
cmp
cmp
inc
xor
cmp
cmp
dec
inc
cmp
inc
inc
xor
xor
dec
inc
cmp
xor
ss
cmp
xor
inc
cmp
cmp
inc
xor
cmp
cmp
xor
cmp
cmp
xor
inc
xor
jl
dec
xor
cmp
xor
aaa
inc
xor
inc
aaa
aaa
dec
xor
inc
dec
ss
inc
xor
inc
xor
xor
cmp
xor
xor
aaa
xor
dec
dec
xor
xor
cmp
inc
inc
or
cmp
or
aaa
inc
inc
cmp
cmp
inc
inc
xor
or
inc
inc
inc
dec
cmp
inc
cmp
insb
insb
cmp
cmp
xor
inc
xor
xor
inc
inc
xor
cmp
cmp
xor
cmp
pop
inc
inc
imul
xor
dec
xor
xor
cmp
inc
jne
cmp
inc
cmp
inc
dec
dec
inc
xor
xor
dec
inc
cmp
xor
xor
inc
inc
xor
inc
insl
dec
xor
inc
cmp
jl
or
xor
xor
cmp
inc
xor
aaa
insl
insl
xor
jl
inc
cmp
cmp
arpl
inc
popa
xor
inc
inc
aaa
cmp
xor
jl
cmp
cmp
pop
outsb
cmp
inc
insb
cmp
cmp
pop
insb
inc
inc
cmp
cmp
dec
popa
dec
cmp
dec
xor
dec
or
xor
insb
inc
cmp
xor
inc
or
xor
dec
cmp
xor
inc
inc
cmp
cmp
cmp
aaa
inc
inc
cmp
xor
dec
inc
inc
inc
inc
xor
cmp
inc
aaa
cmp
jl
dec
inc
inc
or
inc
inc
inc
cmp
inc
inc
inc
inc
aaa
aaa
jl
xor
xor
xor
inc
je
sub
xor
cmp
xor
xor
inc
dec
xor
insb
xor
cmp
xor
xor
xor
xor
inc
inc
inc
xor
inc
jl
xor
cmp
xor
inc
insb
jl
cmp
cmp
inc
xor
jl
inc
inc
xor
cmp
cmp
dec
insb
cmp
xor
cmp
xor
xor
inc
xor
xor
xor
cmp
or
cmp
cmp
dec
dec
jl
xor
xor
xor
xor
dec
xor
jl
cmp
xor
inc
cmp
xor
xor
inc
xor
cmp
xor
xor
inc
xor
inc
xor
inc
outsb
inc
xor
jl
cmp
xor
xor
dec
dec
cmp
xor
cmp
ss
cmp
inc
cmp
xor
inc
dec
inc
dec
jl
cmp
xor
inc
xor
xor
dec
xor
insb
ss
cmp
inc
cmp
insb
inc
xor
inc
xor
inc
inc
inc
jl
inc
insb
dec
dec
xor
cmp
inc
inc
or
inc
ss
or
inc
xor
inc
inc
cmp
cmp
inc
dec
inc
dec
dec
cmp
inc
inc
inc
xor
xor
jl
cmp
xor
jl
xor
inc
insb
inc
xor
inc
inc
xor
inc
xor
inc
xor
xor
xor
jl
or
cmp
xor
cmp
dec
dec
inc
xor
aaa
xor
inc
aaa
insb
cmp
or
cmp
inc
inc
xor
cmp
cmp
inc
xor
inc
inc
aaa
xor
inc
aaa
insb
inc
inc
xor
insb
inc
insb
or
aaa
xor
xor
inc
cmp
xor
cmp
cmp
inc
dec
dec
xor
xor
inc
cmp
xor
xor
inc
sub
aaa
aaa
xor
jl
aaa
xor
xor
ss
xor
xor
cmp
xor
xor
sub
insb
cmp
xor
xor
xor
xor
aaa
xor
dec
xor
dec
xor
dec
xor
dec
cmp
xor
xor
dec
xor
sub
cmp
xor
cmp
xor
or
aaa
cmp
je
jl
xor
cmp
cmp
xor
xor
inc
xor
inc
dec
dec
jl
xor
insb
cmp
outsb
xor
xor
xor
aaa
aaa
cmp
inc
inc
xor
insb
xor
xor
inc
cmp
inc
xor
xor
dec
cmp
or
xor
inc
cmp
jl
xor
xor
xor
aaa
dec
inc
inc
dec
xor
cmp
sub
and
outsl
sub
and
insl
fs
cs
jge
outsl
sub
sub
outsl
cs
bound
insl
popa
pop
bound
pop
jge
jb
sub
outsb
imul
jge
jae
imul
and
jge,pn
popa
insb
fs
outsl
jnp
outsb
sub
insl
sub
insl
jns
cs
popa
sub
insl
jae
outsb
popa
bound
jae
push
outsb
pop
insl
and
push
push
jb
outsl
bound
jnp
outsb
outsb
and
popa
pop
jnp,pn
popa
imul
jnp
gs
outsl
fs
insl
imul
and
jge
insl
cs
outsl
imul
push
je
je
insb
insb
cs
jae
bound
jge
imul
xor
and
outsb
je
imul
jb
insb
jae
and
jp
and
gs
outsb
popa
arpl
jae
or
gs
or
imul
or
pop
je
jae
pop
imul
insb
imul
gs
imul
jo
pop
jns
or
outsb
or
jo
outsw
pop
jns
gs
or
jne
or
bound
je
jo
jne
insb
je
imul
je
imul
or
arpl
or
outsl
arpl
popa
jne
outsb
imul
gs
or
fs
gs
pop
imul
jbe
data16
bound
imul
bound
je
fs
outsl
pop
je
je
jbe
pop
arpl
or
ss
aaa
xor
aaa
xor
cmp
xor
xor
ss
jo
aaa
jl
cmp
inc
xor
cmp
cmp
ss
cmp
dec
insb
cmp
inc
inc
dec
inc
xor
or
aaa
inc
xor
dec
inc
xor
xor
ds
cmp
inc
aaa
or
xor
dec
dec
xor
ss
xor
imul
cmp
aaa
xor
inc
xor
ss
inc
ss
xor
inc
xor
cmp
inc
and
inc
or
or
arpl
cmp
cmp
gs
aaa
inc
cmp
jb
pop
cmp
sub
inc
xor
pop
bound
aaa
gs
inc
jl
push
cmp
cmp
insb
cmp
cmp
inc
cmp
aaa
outsl
dec
cmp
xor
outsl
bound
gs
aaa
cmp
jb
jae
inc
dec
aaa
outsl
cmp
or
bound
je
bound
cmp
cmp
cmp
xor
cmp
pop
cmp
je
fs
jb
outsb
push
aaa
jae
xor
cmp
je
je
ss
popa
outsl
cmp
xor
cmp
insb
dec
jl
xor
insb
xor
xor
xor
xor
xor
cmp
cmp
xor
dec
xor
or
xor
dec
xor
xor
dec
xor
cmp
cmp
inc
xor
inc
inc
inc
xor
inc
xor
inc
inc
dec
xor
xor
jl
inc
xor
inc
inc
inc
xor
xor
inc
xor
insb
xor
inc
inc
xor
inc
or
jl
insb
inc
dec
inc
cmp
dec
xor
inc
xor
xor
inc
cmp
cmp
xor
xor
inc
xor
xor
xor
inc
xor
xor
insb
xor
dec
inc
inc
xor
xor
xor
xor
xor
inc
inc
xor
xor
cmp
insb
sub
push
data16
inc
pop
addr16
jbe
sub
cmp
jne
gs
inc
insb
jb
inc
inc
cmp
xor
xor
cmp
xor
inc
cmp
je
or
insb
insb
dec
xor
gs
jb
cmp
je
cmp
imul
inc
xor
outsb
jo
inc
jae
cmp
jns
xor
gs
cmp
xor
xor
xor
aaa
dec
dec
xor
inc
cmp
cmp
jb
inc
or
inc
inc
arpl
inc
cmp
imul
imul
inc
outsl
xor
xor
pop
je
cmp
inc
inc
sub
outsb
jae
outsb
aaa
outsb
xor
inc
inc
jl
cmp
cmp
outsl
jb
inc
je
outsl
aaa
xor
inc
inc
je
cmp
jb
outsl
xor
xor
cmp
cmp
outsb
xor
jne
xor
xor
inc
xor
xor
and
xor
cmp
xor
xor
cmp
xor
xor
inc
aaa
xor
xor
inc
inc
cmp
inc
cmp
or
cmp
cmp
inc
dec
dec
inc
inc
dec
xor
insb
inc
xor
dec
inc
or
xor
or
inc
inc
inc
inc
inc
xor
inc
inc
dec
dec
inc
xor
xor
inc
xor
xor
inc
inc
xor
xor
inc
cmp
cmp
xor
je
cmp
inc
inc
inc
xor
inc
dec
inc
inc
jl
jl
inc
inc
xor
xor
inc
inc
jl
inc
inc
inc
sub
xor
inc
inc
or
xor
inc
jl
xor
inc
cmp
xor
inc
xor
inc
xor
inc
outsb
cmp
inc
inc
xor
inc
or
bound
inc
bound
cmp
cmp
cmp
push
xor
popa
jl
insb
outsb
xor
je
inc
inc
popa
xor
ss
xor
xor
insb
gs
xor
cmp
pop
arpl
or
gs
inc
xor
xor
inc
outsl
inc
imul
cmp
jae
jb
inc
inc
jae
ss
and
inc
dec
gs
xor
jl
xor
xor
cmp
jl
ss
aaa
inc
aaa
cmp
dec
inc
aaa
inc
inc
inc
xor
inc
or
xor
xor
xor
inc
dec
inc
or
inc
inc
xor
xor
cmp
cmp
xor
inc
dec
xor
xor
aaa
cmp
xor
inc
inc
cmp
cmp
xor
dec
cmp
xor
xor
ss
inc
cmp
cmp
dec
xor
insb
cmp
xor
xor
xor
cmp
inc
xor
inc
aaa
dec
cmp
xor
cmp
inc
aaa
dec
aaa
inc
dec
inc
aaa
xor
insb
inc
or
xor
inc
inc
or
xor
inc
dec
jl
cmp
inc
aaa
cmp
cmp
aaa
inc
or
xor
dec
jl
dec
xor
xor
aaa
or
aaa
xor
inc
xor
or
cmp
xor
xor
cmp
cmp
ss
xor
cmp
inc
aaa
inc
xor
inc
xor
dec
je
xor
aaa
inc
xor
xor
inc
insb
xor
xor
cmp
dec
jl
inc
cmp
inc
xor
inc
inc
aaa
dec
inc
cmp
xor
dec
inc
insb
cmp
or
xor
xor
inc
dec
inc
xor
xor
inc
inc
xor
dec
cmp
xor
inc
dec
inc
cmp
cmp
dec
inc
inc
cmp
jl
inc
ss
xor
inc
cmp
insb
inc
inc
dec
xor
inc
xor
jl
insb
inc
ss
inc
xor
xor
xor
aaa
or
xor
xor
xor
jl
inc
inc
cmp
inc
xor
insb
xor
insb
inc
dec
xor
xor
inc
xor
xor
inc
cmp
cmp
xor
xor
inc
inc
xor
xor
inc
aaa
xor
jl
inc
xor
inc
or
dec
cmp
inc
inc
or
cmp
inc
xor
inc
aaa
xor
inc
xor
inc
aaa
xor
inc
insb
or
inc
inc
ss
xor
inc
inc
inc
inc
jl
or
inc
inc
ss
cmp
inc
xor
inc
insb
insb
xor
xor
inc
inc
dec
xor
inc
xor
dec
xor
inc
xor
ss
cmp
inc
xor
inc
xor
inc
or
xor
cmp
ss
dec
jl
inc
cmp
inc
aaa
inc
inc
or
inc
or
cmp
xor
inc
xor
inc
inc
inc
insb
xor
inc
inc
inc
inc
inc
dec
dec
dec
or
inc
inc
dec
aaa
inc
ss
xor
insl
inc
inc
je
cmp
inc
xor
cmp
dec
cmp
inc
sub
insb
xor
inc
sub
sub
insl
inc
inc
cmp
cmp
inc
insb
js
jl
sub
je
cmp
js
cmp
inc
outsb
cmp
insb
inc
xor
sub
xor
cmp
inc
inc
cmp
gs
xor
inc
cmp
dec
dec
cmp
inc
inc
insl
inc
inc
inc
xor
inc
inc
xor
je
insb
inc
xor
cmp
inc
inc
xor
dec
inc
inc
cmp
xor
cmp
or
cmp
insb
dec
xor
or
cmp
insb
xor
xor
inc
inc
cmp
inc
gs
inc
xor
je
cmp
inc
xor
xor
aaa
inc
cmp
xor
xor
jae
xor
jo
cmp
jae
xor
cmp
dec
jl
xor
xor
jb
inc
xor
inc
jae
aaa
inc
xor
cmp
cmp
jl
jae
xor
cmp
xor
cmp
xor
pop
popa
xor
xor
cmp
or
xor
xor
xor
inc
inc
cmp
cmp
jae
arpl
cmp
inc
xor
inc
inc
inc
jae
inc
je
cmp
popa
cmp
cmp
xor
aaa
xor
cmp
cmp
or
or
aaa
xor
jo
inc
sub
xor
pop
imul
jb
cmp
imul
sub
inc
outsb
cmp
inc
je,pn
xor
xor
xor
outsb
xor
insb
cmp
jb
cmp
aaa
cmp
arpl
inc
xor
inc
inc
xor
jns
inc
arpl
xor
cmp
inc
outsb
xor
aaa
cmp
jl
jl
inc
gs
inc
outsl
gs
xor
xor
cmp
aaa
ss
outsb
xor
inc
xor
dec
aaa
gs
inc
outsl
or
aaa
inc
aaa
imul
ds
inc
inc
inc
xor
inc
xor
aaa
inc
cmp
cmp
cmp
xor
inc
xor
xor
xor
xor
inc
inc
inc
xor
jne
gs
inc
inc
jae
xor
inc
dec
insb
inc
inc
aaa
cmp
xor
inc
cmp
xor
xor
inc
insb
je
xor
inc
dec
dec
xor
cmp
jl
xor
or
inc
xor
inc
cmp
inc
xor
dec
inc
push
xor
cmp
je
xor
cmp
inc
cmp
cmp
cs
inc
inc
xor
je
aaa
inc
ss
inc
pop
or
xor
inc
ss
outsb
ss
xor
inc
gs
cmp
inc
dec
inc
dec
xor
jl
xor
xor
gs
cmp
insb
cmp
xor
cmp
xor
ss
xor
xor
inc
cmp
inc
xor
inc
xor
sub
xor
push
inc
dec
or
inc
inc
xor
ss
insb
xor
xor
or
inc
inc
inc
inc
or
dec
cmp
inc
ss
je
cmp
xor
xor
inc
inc
inc
jae
ss
sub
dec
inc
xor
cmp
xor
je
inc
ss
insb
xor
xor
inc
xor
xor
cs
xor
inc
cmp
dec
xor
jl
jb
inc
jl
sub
cmp
dec
inc
js
inc
xor
inc
insb
je
ds
inc
inc
dec
xor
inc
dec
inc
dec
inc
xor
insb
xor
xor
jl
cmp
or
insb
inc
cmp
inc
xor
xor
xor
dec
xor
cmp
dec
inc
cmp
cmp
xor
xor
dec
xor
cmp
xor
or
cmp
xor
xor
insb
inc
xor
xor
jl
aaa
or
xor
inc
inc
xor
inc
inc
xor
xor
xor
xor
aaa
dec
xor
cmp
aaa
inc
xor
xor
cmp
inc
dec
or
inc
inc
xor
xor
cmp
inc
inc
xor
xor
cmp
xor
xor
xor
xor
xor
xor
inc
aaa
jl
insb
xor
jl
inc
xor
xor
cmp
inc
aaa
xor
inc
ss
xor
jl
ss
xor
cmp
dec
xor
ss
xor
xor
xor
xor
aaa
xor
xor
xor
inc
xor
dec
or
insb
xor
inc
xor
xor
xor
xor
xor
inc
xor
inc
cmp
cmp
jb
fs
data16
xor
dec
xor
inc
cmp
xor
jb
cmp
xor
popa
xor
or
insl
jns
xor
inc
xor
insb
xor
dec
xor
xor
inc
inc
inc
inc
inc
cmp
xor
inc
xor
jl
xor
xor
inc
xor
jae
xor
inc
sub
xor
data16
inc
xor
xor
inc
xor
cmp
xor
xor
inc
dec
xor
pop
inc
xor
gs
insb
cmp
jl
xor
sub
inc
xor
xor
je
inc
insl
xor
bound
gs
cmp
gs
insl
cmp
popa
inc
cmp
jns
inc
inc
inc
xor
xor
cmp
inc
je
je
xor
cmp
xor
cmp
outsl
outsb
arpl
imul
and
cmp
insl
cmp
xor
inc
dec
cmp
xor
xor
insb
dec
dec
cmp
xor
insb
insb
aaa
inc
xor
cmp
xor
or
aaa
insb
dec
dec
cmp
xor
cmp
xor
cmp
xor
xor
xor
inc
cmp
inc
cmp
inc
cmp
aaa
imul
xor
inc
inc
dec
aaa
cmp
inc
inc
aaa
cmp
cmp
gs
xor
inc
cmp
data16
aaa
cmp
xor
inc
je
aaa
cmp
cmp
inc
cmp
xor
or
xor
xor
aaa
inc
inc
inc
cmp
inc
xor
jl
xor
cmp
inc
xor
aaa
inc
jl
sub
xor
insb
inc
gs
inc
aaa
xor
gs
dec
inc
inc
aaa
jl
inc
cmp
jl
outsb
inc
inc
cmp
inc
aaa
cmp
js
xor
xor
xor
inc
or
inc
insb
xor
cmp
cmp
aaa
inc
cmp
xor
insb
inc
inc
inc
aaa
inc
cmp
cmp
jl
inc
inc
cmp
inc
inc
inc
cmp
cmp
cmp
inc
inc
xor
cmp
dec
xor
dec
dec
cmp
jl
xor
jl
xor
xor
cmp
inc
xor
cmp
xor
xor
xor
cmp
xor
xor
insb
inc
inc
insb
insb
xor
xor
xor
xor
or
xor
dec
dec
inc
dec
inc
xor
or
xor
xor
or
xor
inc
xor
cmp
insb
xor
xor
cmp
dec
xor
or
inc
pop
xor
xor
cmp
jb
or
cs
fs
jb
jb
outsb
and
je
aaa
popa
xor
cmp
outsb
jo
push
outsl
push
outsl
xor
insb
outsb
cmp
outsl
xor
jb
ss
fs
xor
xor
imul
cs
outsl
cmp
outsb
cmp
outsb
jae
imul
cmp
insb
sub
jb
cmp
cmp
jbe
insb
jae
xor
cmp
xor
arpl
dec
imul
xor
outsb
or
outsl
imul
je
xor
or
xor
xor
js
and
cmp
xor
imul
je
jb
and
cmp
or
and
aaa
outsl
or
and
gs
outsb
xor
and
imul
fs
xor
and
cs
gs
outsl
and
xor
imul
jb
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
insb
jl
inc
inc
xor
inc
xor
xor
inc
inc
inc
cmp
inc
inc
inc
dec
inc
dec
cmp
cmp
inc
cmp
xor
inc
cmp
inc
or
dec
inc
jl
cmp
dec
inc
dec
xor
inc
xor
cmp
xor
jl
xor
cmp
dec
xor
xor
inc
xor
xor
inc
inc
inc
inc
inc
inc
inc
insb
xor
imul
fs
cmp
dec
arpl
inc
imul
jb
je
cmp
outsl
imul
dec
pop
bound
inc
or
xor
outsb
cmp
inc
je
cmp
inc
inc
sub
inc
inc
aaa
jne
imul
popa
gs
inc
outsb
inc
dec
inc
inc
jae
xor
je
aaa
outsb
inc
jae
aaa
inc
cmp
cmp
pop
popa
cmp
dec
inc
bound
inc
cmp
inc
gs
insb
inc
cmp
inc
inc
xor
and
inc
je
jo
jl
cmp
inc
or
pop
inc
or
inc
je
inc
sub
inc
imul
inc
inc
inc
jb
jae
xor
gs
xor
xor
inc
xor
cmp
ss
or
inc
inc
cmp
outsb
xor
insb
inc
xor
arpl
jo
cmp
ss
xor
xor
outsb
cmp
inc
insb
cmp
inc
dec
inc
cmp
xor
xor
inc
inc
xor
inc
inc
inc
xor
xor
inc
cmp
xor
dec
inc
inc
ss
inc
xor
dec
xor
xor
cmp
xor
inc
inc
xor
jl
xor
inc
xor
inc
inc
inc
inc
inc
xor
inc
xor
inc
inc
inc
inc
inc
jl
dec
xor
xor
or
dec
cmp
xor
inc
xor
inc
inc
insb
inc
xor
jl
xor
xor
dec
xor
inc
inc
inc
insb
inc
dec
xor
xor
inc
xor
xor
inc
dec
inc
inc
xor
xor
xor
jl
inc
inc
inc
cmp
inc
xor
inc
xor
insb
xor
aaa
dec
inc
inc
xor
or
xor
inc
xor
inc
xor
inc
xor
inc
inc
cmp
xor
cmp
inc
dec
xor
xor
or
insb
ss
dec
dec
inc
inc
cmp
or
inc
xor
xor
jl
xor
xor
inc
inc
dec
insb
inc
jl
dec
inc
inc
xor
xor
cmp
cmp
inc
xor
jb
inc
inc
cmp
inc
inc
inc
popa
xor
je
aaa
insb
inc
inc
inc
cmp
ss
or
cmp
xor
xor
xor
cmp
inc
inc
jl
cmp
ss
xor
cmp
inc
dec
xor
or
or
ss
xor
xor
cmp
cmp
xor
aaa
xor
xor
xor
dec
inc
ss
inc
ss
ss
cmp
sub
dec
cmp
xor
inc
cmp
inc
xor
xor
xor
xor
xor
xor
or
or
inc
cmp
inc
inc
xor
xor
cmp
xor
inc
xor
inc
inc
inc
inc
inc
xor
insb
cmp
inc
inc
inc
cmp
cmp
or
xor
insb
inc
cmp
cmp
inc
xor
xor
or
xor
aaa
cmp
xor
xor
inc
jl
xor
inc
cmp
xor
jl
dec
cmp
xor
xor
jl
inc
xor
inc
aaa
inc
inc
dec
ss
aaa
aaa
inc
inc
inc
cmp
dec
cmp
inc
dec
xor
xor
inc
inc
cmp
inc
xor
jl
jl
inc
cmp
inc
inc
xor
xor
xor
cmp
xor
inc
inc
insb
xor
xor
inc
xor
xor
xor
push
insl
je
dec
ss
xor
inc
sub
xor
xor
xor
xor
xor
xor
aaa
xor
inc
xor
xor
xor
xor
aaa
je
aaa
cmp
cmp
cmp
dec
aaa
inc
xor
aaa
xor
xor
xor
or
xor
aaa
inc
cmp
inc
cmp
inc
aaa
cmp
xor
xor
cmp
and
outsb
popa
xor
sub
inc
insl
jo
je
jo
bound
dec
and
push
inc
cmp
jae
insb
sub
and
cmp
or
je
xor
das
push
jb
jb
popa
xor
je
popa
jne
imul
cmp
inc
pop
data16
cmp
outsl
xor
bound
je
or
or
xor
cmp
cmp
cmp
pop
cmp
popa
imul
inc
imul
jns
inc
je
imul
imul
imul
xor
jb
je
inc
outsb
imul
imul
or
js
or
insl
popa
insl
je
gs
gs
fs
jae
push
or
gs
pop
insl
fs
outsl
pop
jae
jb
or
je
imul
xor
gs
outsl
or
outsl
je
fs
outsb
jb
popa
gs
fs
jb
pop
or
fs
jb
pop
insb
gs
popa
outsl
outsb
imul
jae
outsl
gs
gs
gs
jb
arpl
je
imul
or
jae
or
popa
pop
insl
jae
fs
jae
or
jb
or
jb
jb
outsl
or
popa
insb
outsb
jne
pop
gs
popa
pop
je
push
pop
fs
pop
popa
imul
outsl
cmp
xor
pop
aaa
dec
xor
cmp
bound
xor
xor
sub
aaa
xor
or
inc
inc
inc
jae
xor
inc
cmp
xor
xor
inc
ds
xor
jl
inc
sub
xor
push
xor
xor
xor
insb
xor
xor
ss
xor
xor
cmp
xor
xor
or
fs
inc
imul
gs
inc
xor
xor
xor
cmp
cmp
xor
jl
xor
inc
dec
cmp
aaa
dec
cmp
cmp
inc
insb
cmp
xor
xor
cmp
xor
inc
cmp
inc
cmp
cmp
xor
aaa
inc
inc
xor
cmp
xor
xor
or
jo
popa
cs
push
gs
aaa
sub
sub
jo
arpl
xor
outsb
arpl
popa
xor
data16
xor
cmp
xor
xor
jb
je
aaa
outsb
xor
xor
outsl
jnp
fs
xor
cmp
imul
jae
aaa
xor
or
and
cs
xor
gs
push
bound
jge
je
data16
outsl
popa
gs
and
sub
insl
pop
jb
push
outsb
jae
jb
insl
imul
popa
sub
outsl
outsl
je
and
insl
and
and
outsl
insl
popa
insl
and
and
outsb
push
gs
push
popa
outsl
sub
pop
outsb
insb
pushw
pop
and
bound
pop
jb
insl
jnp
insl
imul
gs
outsb
outsl
sub
jnp
jge
and
xor
or
ss
outsl
or
cmp
je
xor
cs
cmp
push
and
outsb
xor
jl
ss
cmp
cmp
insb
or
inc
cmp
xor
xor
aaa
aaa
cmp
aaa
cmp
xor
cmp
xor
inc
dec
inc
or
dec
inc
cmp
inc
aaa
or
xor
dec
aaa
aaa
xor
inc
aaa
ss
xor
jl
aaa
inc
cmp
aaa
aaa
aaa
inc
cmp
cmp
xor
inc
xor
aaa
aaa
inc
inc
inc
dec
aaa
xor
insb
inc
dec
insb
cmp
xor
jl
insb
cmp
dec
inc
xor
inc
cmp
xor
inc
inc
insb
inc
inc
inc
inc
xor
xor
xor
or
cmp
or
inc
or
dec
cmp
dec
cmp
jl
xor
xor
inc
or
cmp
inc
xor
jl
or
inc
inc
xor
xor
inc
xor
cmp
inc
xor
dec
dec
xor
jl
jl
cmp
insb
inc
inc
inc
dec
inc
xor
inc
inc
aaa
inc
cmp
xor
xor
inc
dec
xor
cmp
inc
xor
inc
cmp
inc
cmp
inc
xor
inc
cmp
inc
inc
xor
aaa
xor
xor
xor
cmp
inc
xor
aaa
jl
insb
inc
xor
or
xor
xor
inc
inc
xor
aaa
xor
inc
inc
xor
xor
aaa
cmp
inc
cmp
inc
xor
dec
xor
jl
or
xor
inc
xor
xor
ss
aaa
inc
xor
cmp
inc
aaa
aaa
xor
aaa
cmp
inc
inc
aaa
or
and
ja
sub
data16
popa
jo
or
xor
gs
jb
jnp
jae
outsb
sub
bound
insb
gs
gs
and
outsl
and
arpl
outsb
jae
jae
aaa
gs
gs
outsb
xor
or
outsb
jae
popa
outsl
jb
je
pop
xor
fs
popa
imul
push
je
fs
outsl
jae
xor
outsb
imul
bound
gs
cmp
or
inc
sub
jo
jb
outsb
or
imul
jnp
arpl
xor
and
xor
outsb
imul
je
cmp
and
cmp
pop
pop
insb
push
outsl
and
data16
je
and
jae
jne
insb
xor
popa
cmp
and
gs
jae
insb
or
js
cmp
data16
arpl
and
outsb
xor
xor
sub
jnp
imul
inc
jl
insb
dec
inc
xor
or
inc
dec
dec
xor
inc
inc
inc
inc
xor
inc
inc
xor
xor
aaa
cmp
xor
cmp
inc
xor
dec
dec
xor
aaa
xor
jl
jl
xor
inc
xor
xor
insb
xor
xor
aaa
cmp
insb
inc
cmp
inc
insb
cmp
xor
inc
xor
xor
inc
dec
inc
inc
aaa
xor
xor
xor
cmp
cmp
inc
cmp
inc
cmp
cmp
inc
inc
xor
inc
jl
inc
inc
imul
bound
gs
and
outsb
insl
outsl
xor
jb
popa
cmp
xor
and
cmp
xor
cs
popa
ss
bound
insb
jne
jo
xor
xor
and
data16
popa
xor
addr16
ds
and
pop
dec
je
jne
cmp
and
or
jne
xor
or
xor
and
jb
xor
xor
jnp
outsb
cmp
cs
sub
ds
dec
imul
fs
xor
or
and
jb
xor
jo
imul
or
gs
and
je
cmp
push
xor
jae
jae
jge
outsb
jbe
jb
data16
gs
inc
inc
aaa
xor
dec
inc
aaa
xor
aaa
inc
inc
inc
inc
aaa
inc
inc
cmp
inc
or
xor
cmp
xor
or
aaa
aaa
cmp
insb
inc
or
inc
xor
cmp
xor
inc
or
xor
xor
inc
xor
or
xor
inc
xor
insb
cmp
inc
xor
dec
jl
xor
cmp
xor
insb
jl
xor
cmp
xor
xor
aaa
cmp
xor
inc
inc
aaa
jl
inc
inc
xor
cmp
xor
jl
jl
xor
xor
aaa
cmp
dec
xor
cmp
cmp
dec
inc
cmp
cmp
dec
xor
aaa
xor
aaa
xor
xor
xor
aaa
inc
ss
xor
xor
xor
xor
xor
xor
ss
xor
xor
aaa
xor
xor
xor
inc
xor
cmp
xor
cmp
inc
inc
inc
ss
xor
ss
xor
xor
inc
xor
xor
xor
ss
xor
xor
aaa
ss
xor
inc
inc
inc
xor
xor
inc
ss
ss
xor
xor
ss
inc
xor
xor
xor
xor
inc
ss
aaa
inc
aaa
ss
xor
ss
xor
xor
xor
ss
ss
xor
xor
xor
aaa
xor
ss
sub
dec
jl
je
je
sub
cmp
cmp
sub
sub
dec
xor
xor
xor
inc
fs
cmp
imul
xor
dec
dec
cmp
jl
jl
inc
inc
inc
inc
dec
cmp
xor
inc
inc
xor
or
dec
cmp
cmp
xor
inc
inc
inc
xor
inc
xor
xor
xor
xor
cmp
or
jl
ss
cmp
insb
inc
inc
cmp
cmp
inc
xor
xor
aaa
xor
cmp
dec
dec
xor
xor
inc
inc
dec
xor
xor
cmp
cmp
inc
jl
cmp
inc
insb
xor
inc
xor
xor
xor
ss
or
aaa
xor
xor
inc
dec
xor
or
aaa
xor
dec
inc
jl
cmp
aaa
aaa
jl
xor
xor
xor
inc
xor
inc
inc
xor
or
dec
xor
xor
inc
inc
xor
xor
inc
dec
xor
cmp
inc
insb
xor
inc
inc
xor
inc
xor
inc
inc
xor
inc
inc
inc
inc
inc
xor
dec
dec
inc
dec
inc
xor
inc
inc
xor
xor
xor
or
xor
or
ss
xor
inc
xor
aaa
xor
xor
inc
xor
xor
xor
xor
cmp
xor
xor
xor
aaa
xor
ss
ss
xor
ss
inc
inc
cmp
inc
xor
ss
xor
inc
xor
ss
outsl
cmp
jns
jb
cmp
outsl
insl
cmp
inc
or
push
gs
jns
xor
sub
xor
xor
inc
jb
jns
inc
dec
jbe
cmp
gs
inc
outsb
jae
jae
and
insb
xor
xor
pop
jns
cmp
je
popa
cmp
popa
addr16
outsb
xor
cmp
aaa
pop
cmp
jb
push
xor
aaa
outsb
pop
xor
bound
xor
and
xor
jge
xor
imul
jnp
and
imul
bound
and
bound
outsl
pop
jnp
jge
jno
and
insb
xor
jge
cs
cmp
sub
outsb
and
gs
imul
or
outsl
xor
arpl
cmp
aaa
xor
xor
bound
xor
xor
outsl
pop
imul
jb
xor
inc
jb
gs
inc
jns
jne
xor
xor
cmp
cmp
or
ss
ss
xor
inc
dec
jo
sub
pop
cmp
xor
inc
je
cmp
pop
cmp
inc
or
inc
cmp
xor
inc
je
das
outsl
xor
xor
aaa
js
pop
data16
fs
jae
xor
xor
jo
xor
arpl
insb
inc
dec
xor
inc
cmp
cmp
inc
dec
xor
je
jns
cmp
xor
inc
imul
xor
xor
arpl
xor
inc
or
inc
and
jl
xor
cmp
je
and
outsb
inc
xor
jb
or
xor
cmp
xor
and
popa
sub
dec
inc
inc
cmp
inc
inc
inc
jl
or
xor
xor
xor
xor
inc
inc
xor
dec
inc
cmp
dec
cmp
dec
inc
xor
xor
jl
cmp
xor
insb
xor
xor
xor
jl
cmp
or
dec
xor
xor
or
xor
cmp
inc
xor
dec
xor
cmp
xor
aaa
xor
dec
xor
inc
xor
xor
xor
insb
xor
xor
cmp
cmp
xor
xor
xor
xor
xor
inc
xor
xor
xor
dec
inc
dec
xor
xor
inc
xor
cmp
insb
xor
xor
xor
cmp
insb
inc
je
ss
sub
insb
dec
xor
jl
inc
xor
xor
or
aaa
xor
xor
cmp
dec
cmp
cmp
inc
cmp
xor
outsb
inc
xor
cmp
xor
xor
imul
aaa
inc
ss
je
or
inc
inc
sub
inc
cmp
xor
cmp
xor
insb
insb
dec
xor
sub
or
xor
inc
inc
outsb
inc
dec
xor
inc
cmp
inc
cmp
ss
or
xor
je
inc
inc
cmp
xor
xor
inc
dec
imul
ss
inc
xor
inc
inc
xor
xor
xor
inc
inc
xor
cmp
xor
inc
xor
sub
xor
insb
inc
cmp
inc
xor
cmp
inc
xor
xor
ss
inc
je
outsb
dec
inc
xor
cmp
cmp
cmp
inc
cmp
dec
xor
xor
cmp
xor
cmp
dec
inc
xor
inc
inc
inc
sub
inc
outsb
cmp
xor
sub
xor
dec
or
inc
inc
xor
inc
xor
cmp
xor
cmp
inc
xor
cmp
cmp
cmp
or
xor
cmp
inc
inc
cmp
jl
inc
inc
inc
inc
inc
cmp
cmp
xor
jl
inc
cmp
or
inc
inc
jl
xor
cmp
xor
insb
or
inc
xor
cmp
inc
dec
inc
cmp
cmp
dec
cmp
dec
dec
cmp
inc
inc
dec
inc
xor
inc
dec
inc
xor
ss
inc
xor
inc
insb
xor
inc
inc
or
inc
inc
inc
xor
inc
dec
ss
inc
insb
inc
xor
xor
dec
dec
cmp
cmp
jl
cmp
cmp
or
inc
inc
inc
or
xor
xor
xor
dec
inc
xor
inc
inc
inc
cmp
xor
xor
cmp
xor
xor
xor
xor
cmp
inc
inc
inc
cmp
insl
gs
or
imul
outsb
outsb
jb
xor
jae
outsl
xor
je
outsl
outsl
xor
or
je
or
je
gs
gs
je
imul
jae
arpl
dec
xor
imul
cmp
and
xor
jo,pn
imul
outsb
arpl
aaa
jb
ds
push
xor
cmp
xor
outsl
outsb
jo
gs
jb
outsb
xor
xor
imul
xor
xor
jae
dec
or
ja
xor
outsl
jl
inc
xor
xor
xor
insb
jo
jb
xor
xor
insb
xor
inc
inc
cmp
inc
xor
xor
xor
dec
xor
xor
inc
xor
aaa
cmp
xor
dec
cmp
cmp
gs
xor
xor
jne
aaa
xor
je
or
je
jae
imul
inc
inc
inc
xor
xor
xor
insb
xor
arpl
aaa
xor
cmp
inc
jb
inc
xor
jo
gs
xor
cmp
je
je
inc
xor
xor
xor
xor
inc
xor
xor
inc
cmp
je
xor
imul
cmp
inc
popa
inc
aaa
inc
xor
jl
xor
pop
insb
xor
imul
inc
inc
inc
jbe
cmp
xor
and
aaa
inc
xor
cmp
dec
ss
imul
xor
or
dec
xor
cmp
xor
dec
je
cmp
cmp
insl
cmp
inc
or
inc
xor
inc
inc
cmp
inc
inc
jae
xor
inc
cmp
inc
jo
cmp
xor
dec
xor
inc
jns
inc
dec
imul
jb
jl
gs
xor
xor
je
fs
inc
inc
insb
cmp
inc
pop
je
inc
jne
cmp
imul
pop
inc
cmp
cmp
inc
je
insb
inc
inc
jb
jae
cmp
inc
xor
cmp
xor
je
xor
cmp
inc
dec
cmp
xor
jne
jb
cmp
insl
je
xor
xor
inc
xor
insb
cmp
inc
gs
inc
cmp
inc
inc
inc
inc
sub
xor
inc
insl
gs
cmp
cmp
or
je
inc
inc
xor
or
inc
je
cmp
cmp
inc
or
xor
xor
inc
inc
dec
je
inc
cmp
cmp
cmp
insb
cmp
inc
cmp
inc
cmp
inc
xor
xor
xor
xor
xor
xor
ss
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
aaa
xor
cmp
inc
ss
aaa
inc
xor
ss
cmp
xor
inc
inc
cmp
jb
imul
popa
je,pn
and
sub
imul
outsb
and
push
je
and
je
outsl
insl
popa
insl
and
outsl
outsb
cs
insl
arpl
imul
bound
outsl
and
popa
je
outsl
pop
jnp
insl
pop
imul
push
jnp
sub
pop
jnp
xor
insb
insb
insb
and
sub
gs
pop
jge
jb
push
outsl
outsb
sub
outsb
imul
cs
insl
push
bound
outsl
outsb
insl
and
jnp
outsl
jae
push
popa
sub
and
jge
and
insl
outsl
push
imul
popa
insb
and
jb
sub
outsb
jge
and
imul
popa
jae
sub
insb
jns
outsb
insb
outsb
jge
jb
and
push
and
cs
dec
sub
or
inc
inc
aaa
inc
aaa
inc
xor
xor
aaa
aaa
inc
dec
aaa
aaa
xor
inc
inc
inc
inc
inc
inc
sub
aaa
aaa
aaa
dec
jl
inc
aaa
aaa
cmp
insb
inc
inc
xor
dec
aaa
xor
xor
xor
inc
dec
xor
xor
inc
xor
inc
xor
xor
xor
xor
cmp
cmp
je
inc
xor
pop
outsb
gs
cmp
xor
cmp
inc
xor
popa
cmp
xor
or
inc
insb
xor
jb
inc
xor
jb
jo
cmp
bound
inc
xor
inc
jb
ja
cmp
jne
popa
cmp
xor
insl
je
outsl
xor
xor
insb
xor
cmp
cmp
aaa
ja
xor
cmp
xor
fs
inc
insb
xor
dec
gs
xor
dec
gs
xor
xor
inc
inc
popa
jae
cmp
inc
xor
pop
outsl
cmp
gs
popa
cmp
cmp
xor
jae
xor
xor
insb
insb
aaa
cmp
inc
insb
xor
inc
xor
inc
cmp
inc
cmp
xor
inc
xor
dec
cmp
cmp
cmp
xor
inc
inc
cmp
inc
inc
xor
jl
xor
xor
xor
xor
xor
xor
inc
xor
xor
aaa
xor
dec
xor
xor
or
cmp
inc
xor
dec
dec
xor
inc
inc
xor
dec
or
inc
inc
sub
or
xor
jl
or
xor
inc
xor
xor
cmp
xor
xor
inc
or
xor
inc
inc
dec
inc
xor
inc
inc
xor
inc
inc
jl
inc
xor
inc
xor
xor
xor
xor
or
xor
insb
insb
inc
xor
jl
cmp
xor
xor
cmp
dec
inc
inc
xor
xor
inc
xor
inc
xor
inc
inc
xor
cmp
inc
jl
xor
jl
xor
cmp
inc
inc
inc
inc
dec
cmp
xor
inc
inc
insb
dec
inc
cmp
cmp
dec
inc
inc
xor
inc
inc
jl
cmp
xor
aaa
jl
inc
cmp
inc
xor
inc
inc
xor
jl
xor
or
cmp
inc
inc
cmp
inc
xor
cmp
inc
xor
inc
inc
inc
or
or
inc
inc
inc
dec
inc
cmp
xor
xor
cmp
inc
cmp
insb
dec
inc
xor
aaa
insb
inc
inc
xor
je
or
cmp
cmp
jl
inc
inc
cmp
inc
inc
xor
inc
dec
xor
cmp
xor
jl
aaa
inc
inc
xor
xor
inc
inc
insb
dec
dec
inc
xor
cmp
inc
xor
xor
inc
cmp
inc
xor
inc
inc
inc
cmp
inc
xor
or
inc
xor
inc
xor
inc
xor
cmp
inc
dec
insb
or
sub
inc
inc
inc
xor
inc
inc
inc
xor
inc
inc
dec
dec
cmp
inc
dec
cmp
insb
or
inc
or
xor
aaa
cmp
xor
xor
inc
inc
xor
ss
xor
ss
xor
aaa
ss
xor
ss
ss
ss
ss
xor
inc
inc
inc
ss
ss
xor
inc
aaa
ss
inc
xor
xor
inc
cmp
aaa
xor
xor
xor
ss
inc
ss
xor
cmp
xor
xor
xor
xor
xor
inc
xor
ss
inc
inc
xor
xor
ss
cmp
inc
xor
ss
xor
xor
xor
xor
inc
inc
xor
xor
aaa
xor
ss
xor
ss
xor
xor
ss
inc
inc
inc
xor
ss
ss
xor
ss
xor
inc
inc
inc
insb
inc
inc
jl
inc
inc
cmp
or
inc
cmp
or
inc
cmp
dec
inc
cmp
aaa
inc
cmp
inc
inc
inc
cmp
cmp
cmp
inc
xor
aaa
xor
aaa
xor
cmp
xor
xor
cmp
xor
dec
inc
aaa
inc
xor
xor
xor
or
aaa
xor
cmp
inc
xor
xor
jl
inc
jl
xor
insb
inc
inc
xor
inc
or
dec
xor
inc
aaa
aaa
inc
cmp
insb
cmp
dec
inc
xor
inc
xor
inc
inc
xor
or
jl
or
dec
cmp
insb
xor
dec
inc
aaa
xor
xor
xor
xor
xor
cmp
insb
inc
xor
xor
xor
xor
xor
inc
jl
xor
cmp
xor
aaa
dec
xor
jl
aaa
inc
xor
xor
aaa
xor
inc
xor
xor
xor
inc
xor
xor
xor
dec
xor
xor
xor
xor
dec
aaa
inc
xor
jl
inc
aaa
inc
xor
inc
cmp
inc
inc
dec
aaa
cmp
dec
inc
or
insb
dec
inc
or
inc
aaa
aaa
inc
xor
inc
sub
cmp
inc
cmp
inc
jl
sub
inc
inc
inc
inc
cmp
cmp
inc
aaa
cmp
je
xor
gs
jb
je
jne
xor
aaa
aaa
aaa
aaa
inc
imul
cmp
cmp
inc
jne
inc
arpl
or
sub
pop
xor
push
outsl
bound
inc
xor
jb
addr16
xor
jae
sub
gs
gs
jae
inc
aaa
sub
cmp
inc
je
cmp
pop
jl
pop
inc
inc
xor
xor
jae
je
jne
ss
cmp
inc
or
xor
cmp
insb
inc
xor
outsb
inc
inc
or
cmp
inc
xor
inc
xor
jae
inc
pop
je
xor
cs
inc
outsl
xor
cmp
cmp
dec
xor
inc
je
jl
xor
cmp
insb
inc
inc
jo
arpl
outsb
popa
jne
bound
gs
arpl
js
gs
popa
push
sub
and
addr16
insl
jnp
popa
insb
imul
cmp
inc
inc
aaa
xor
cmp
dec
inc
xor
xor
inc
inc
inc
inc
insb
inc
or
xor
inc
ss
cmp
inc
inc
xor
xor
xor
xor
dec
cmp
jl
cmp
inc
cmp
dec
xor
inc
insb
inc
dec
inc
cmp
xor
ss
xor
xor
inc
insb
ss
xor
inc
inc
inc
xor
ss
outsb
data16
sub
cs
imul
xor
gs
pop
je
xor
popa
imul
insb
and
xor
popa
cmp
je
insl
cmp
outsb
sub
xor
xor
sub
and
insl
pop
js
xor
sub
je
and
fs
and
outsb
insb
pop
gs
ss
js
je
aaa
insb
je
sub
sub
sub
insl
outsb
cmp
sub
jnp
aaa
sub
xor
inc
inc
cmp
cmp
inc
inc
inc
dec
dec
inc
inc
xor
inc
xor
xor
or
cmp
inc
sub
aaa
xor
xor
xor
xor
xor
ss
jl
inc
xor
xor
xor
jl
xor
inc
xor
inc
jl
inc
dec
inc
inc
inc
inc
aaa
insb
xor
inc
inc
inc
or
inc
xor
cmp
aaa
xor
aaa
aaa
inc
dec
inc
inc
cmp
xor
xor
xor
xor
dec
inc
inc
inc
inc
xor
or
xor
cmp
aaa
ss
jl
aaa
inc
cmp
dec
xor
xor
inc
xor
xor
xor
xor
insb
cmp
xor
xor
xor
dec
inc
dec
xor
ss
cmp
or
inc
xor
inc
xor
dec
inc
xor
inc
or
xor
inc
xor
xor
xor
inc
inc
dec
xor
xor
xor
inc
insb
xor
xor
inc
dec
xor
cmp
inc
inc
inc
xor
jl
inc
cmp
insb
xor
inc
inc
insb
inc
or
xor
xor
inc
inc
inc
inc
inc
xor
dec
cmp
xor
xor
inc
or
inc
xor
xor
inc
or
inc
xor
xor
inc
xor
xor
jl
inc
inc
inc
inc
inc
inc
inc
inc
jl
xor
dec
jl
inc
inc
xor
inc
cmp
inc
inc
xor
inc
xor
insb
inc
dec
or
xor
inc
xor
inc
aaa
xor
xor
inc
inc
cmp
inc
or
inc
inc
cmp
inc
cmp
xor
dec
cmp
dec
xor
inc
inc
ss
xor
inc
xor
inc
inc
inc
insb
xor
inc
inc
inc
inc
inc
insb
ss
or
aaa
dec
cmp
xor
cmp
cmp
inc
cmp
inc
cmp
xor
or
xor
dec
inc
inc
dec
xor
xor
dec
inc
inc
inc
jl
jl
inc
inc
insb
inc
cmp
inc
inc
cmp
dec
inc
inc
insb
insb
cmp
ss
inc
ss
inc
dec
inc
dec
inc
dec
xor
inc
xor
xor
jl
dec
xor
inc
inc
xor
or
inc
inc
inc
aaa
xor
inc
xor
inc
inc
cmp
inc
xor
inc
cmp
inc
inc
xor
cmp
jl
xor
xor
xor
inc
xor
inc
cmp
xor
cmp
inc
inc
inc
cmp
xor
xor
inc
inc
aaa
jl
inc
cmp
inc
cmp
xor
inc
inc
inc
inc
inc
xor
inc
or
cmp
inc
insb
inc
inc
inc
inc
xor
xor
cmp
cmp
inc
insb
inc
dec
dec
insb
inc
inc
dec
cmp
cmp
inc
inc
dec
inc
inc
cmp
cmp
jl
xor
inc
cmp
cmp
cmp
inc
xor
cmp
inc
dec
xor
xor
inc
xor
inc
inc
or
inc
dec
cmp
inc
cmp
xor
aaa
xor
inc
jl
xor
xor
inc
xor
inc
xor
dec
aaa
inc
cmp
cmp
insb
cmp
inc
jl
xor
or
xor
xor
xor
inc
inc
inc
cmp
inc
inc
dec
inc
xor
inc
xor
inc
insb
cmp
cmp
cmp
or
inc
inc
xor
inc
cmp
or
xor
aaa
inc
xor
dec
inc
cmp
dec
xor
xor
xor
aaa
dec
ss
insb
inc
cmp
inc
inc
inc
inc
inc
inc
cmp
inc
ss
or
inc
aaa
inc
jl
aaa
inc
inc
dec
inc
inc
aaa
or
xor
pop
xor
xor
or
or
jo
jo
cmp
je
outsb
jns
cmp
jb
xor
and
xor
jo
and
jb
cmp
popa
cmp
outsb
bound
arpl
xor
cmp
outsl
or
je
ja
and
jo
je
imul
xor
jae
popa
cmp
jns
popa
arpl
cmp
outsb
insb
arpl
outsb
jb
bound
das
push
push
popa
push
xor
outsl
popa
insb
ja
imul
xor
cmp
je
outsl
xor
xor
insb
xor
xor
or
xor
xor
inc
inc
xor
inc
dec
jl
inc
inc
xor
inc
xor
dec
inc
inc
xor
cmp
inc
xor
dec
inc
inc
inc
cmp
inc
or
inc
xor
xor
insb
inc
xor
jl
xor
inc
xor
xor
insb
xor
xor
xor
xor
xor
inc
xor
xor
inc
dec
inc
xor
inc
xor
xor
inc
jl
jl
inc
xor
inc
inc
inc
insb
insb
aaa
inc
inc
xor
inc
inc
xor
dec
xor
xor
xor
xor
inc
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
xor
xor
cmp
dec
aaa
or
cmp
jl
insb
dec
xor
inc
inc
xor
xor
and
cs
outsb
jo
imul
imul
outsb
insl
jo
jb
popa
jbe
jnp
imul
outsl
and
outsb
jnp
pop
jge
jnp
outsl
imul
je
popa
outsb
xor
imul
insb
jae
outsb
jb
popa
insb
sub
je
popa
outsb
popa
outsb
jge
jb
jge,pn
bound
sub
je
imul
jge
and
and
je
cmp
jb
jae,pn
popa
outsb
gs
insl
popa
pop
insb
je
jge
ss
jb
jo
insb
outsb
outsl
jae
arpl
outsl
push
jae
bound
je
jb
insl
pop
cmp
bound
cs
jge
outsl
and
outsl
imul
jb
insl
push
and
and
and
insl
cs
dec
je,pn
insb
outsb
jns
or
cmp
push
xor
popa
popa
outsb
and
popa
push
dec
or
jne
and
je
xor
xor
jb
and
imul
popa
jo
popa
imul
jae
jo
or
popa
xor
imul
xor
xor
and
dec
jb
outsl
gs
pop
push
cmp
xor
xor
or
je
xor
and
or
jl
xor
xor
xor
inc
cmp
xor
aaa
inc
xor
insb
xor
xor
aaa
xor
aaa
dec
xor
dec
inc
dec
xor
inc
jbe
pop
arpl
jne
inc
dec
xor
cmp
inc
ss
xor
inc
inc
inc
dec
inc
xor
cmp
inc
cmp
cmp
inc
dec
xor
xor
xor
cmp
xor
cmp
xor
inc
insb
inc
cmp
xor
cmp
xor
dec
xor
xor
aaa
dec
xor
inc
xor
dec
xor
dec
xor
xor
xor
dec
xor
inc
inc
inc
inc
jl
inc
cmp
xor
inc
or
or
inc
inc
xor
cmp
xor
inc
xor
inc
insb
cmp
dec
out
and
ss
mov
arpl
movsl
sahf
aas
mov
inc
outsl
insl
jmp
pop
sub
lret
jb
mov
int3
xchg
xchg
mov
into
loopnew
push
inc
xor
call
sub
jns
or
adc
push
in
je
das
out
aad
or
xchg
out
imul
rcrl
add
gs
pop
sahf
and
pop
popa
mov
sub
aaa
negb
mov
loopne
jo
pop
outsl
and
xchg
and
dec
ficoms
add
notb
pop
test
pop
psubusw
adc
inc
cmp
fmulp
jo
cmp
in
aaa
test
mov
insb
cwtl
shll
and
xchg
shll
aas
dec
sti
out
sbbb
mov
adc
lods
mov
adc
into
std
inc
insb
arpl
imul
mov
mov
sbb
and
push
loop
stos
cmpsb
jmp
or
dec
andb
jg
dec
jbe
sbb
mov
dec
lods
es
or
cmp
push
js
sub
xchg
test
les
fcom
xchg
inc
cs
ds
out
aas
xchg
aam
iret
loope
adc
stos
jge
ret
xchg
js
mov
jmp
jl
out
jle
push
hlt
xchg
push
in
pop
rcll
inc
adc
adc
adc
insb
mov
dec
sub
loope
jl
cmp
fidivl
xor
cmpsl
mov
push
sub
cmp
jb
pop
cltd
pop
call
sub
scas
push
in
xchg
jle
shl
dec
push
jecxz
aaa
ja
imul
xchg
xchg
lret
repz
adc
xchg
push
or
adc
mov
and
out
pop
add
jmp
or
test
xchg
cmc
dec
into
add
mov
movsl
test
cli
in
xor
das
lea
jb
push
rolb
xchg
dec
test
stos
fdivl
cmpsb
push
mov
cs
andb
rorl
jne
sub
cmp
repz
orb
pop
adc
aad
fs
aad
ljmp
cmp
or
sahf
cmp
rolb
jae
pushf
dec
sbbb
and
mov
or
mov
pop
test
pop
mov
outsl
ret
lahf
sub
lea
push
ds
fistps
xchg
add
lock
mov
xchg
stc
add
mov
pop
aaa
adc
pop
mov
adc
jp
sbb
dec
push
fisttps
hlt
adc
xor
out
loop
into
push
sarl
push
adc
mov
push
adc
mov
push
mov
push
cmp
loopne
sub
mov
dec
test
xor
cltd
fdivrl
rclb
mov
inc
popa
loopne
xor
bound
dec
lock
enter
or
dec
les
test
mov
imul
repz
xchg
cmp
cmp
cmp
fadds
dec
shrl
mov
out
adc
push
gs
addr16
adc
jmp
push
pusha
push
cmpb
or
pop
inc
cmp
dec
mov
pop
aam
adc
lock
das
aas
xor
cmp
ljmp
mull
cmc
add
lods
orl
add
adc
lcall
arpl
pop
in
repnz
cmc
mov
add
mov
lods
jg
cmp
xor
push
or
mov
into
fisttpl
jmp
push
loopne
add
cmp
cmc
movsb
lret
loop
xor
aas
hlt
adc
xorb
arpl
sbb
out
cmp
jg
js
jne
or
fmull
dec
pop
mov
cmp
and
cmc
pop
leave
fldl
mov
mov
sbb
divb
pusha
shlb
in
pop
subl
or
dec
mov
mov
jnp
ss
mov
shr
jb
xor
daa
fldt
cmpb
lahf
sbb
or
sahf
mov
std
dec
cmp
adc
or
mov
mov
inc
xchg
repz
in
or
add
mov
loope
ret
add
ret
inc
push
cmp
or
jp
lahf
and
adc
push
xlat
xchg
jmp
ja
test
adc
pusha
int3
cltd
imul
ret
add
std
les
sub
add
pushf
lcall
ds
mov
jnp
dec
rcr
stos
hlt
imul
or
cmpb
aas
fimull
jge
jb
sbb
jmp
std
mov
bound
gs
sbb
shll
sti
pop
or
bound
or
xchg
call
pop
sub
or
add
out
enter
negl
fstpt
lea
xchg
stc
leave
mov
sub
shl
xor
in
or
cmp
cmpsb
jge
cmp
dec
scas
push
and
test
pop
outsb
mov
hlt
test
out
mov
mov
cmp
xor
mov
jge
inc
loop
mov
inc
xchg
jmp
mov
xchg
jne
pop
ljmp
xor
sahf
add
out
out
stos
ret
sub
sbb
jg
insl
inc
mov
icebp
lds
mov
sbb
das
fcmovne
lahf
test
xchg
jecxz
loop
lea
cmp
mov
inc
insb
into
inc
stc
sub
call
cwtl
cmpsl
push
insl
ret
xor
mov
icebp
fwait
rcll
cs
aas
inc
mov
mov
pusha
mov
add
rolb
push
mov
cmp
cmp
fwait
roll
lret
insb
movsb
mov
inc
pushf
xchg
outsl
xor
jae
mov
add
loop
sub
mov
mov
es
fistps
mov
sub
std
fdivrs
dec
inc
sub
sub
mov
sub
roll
dec
sub
add
adc
sbb
xor
inc
inc
jp
je
shrb
pop
in
inc
loopne
mov
adc
mov
mov
and
sub
loope
popa
inc
pop
aad
cmp
fwait
xchg
cmp
adc
xor
sti
mov
enter
inc
mov
dec
or
xchg
mov
popf
mov
icebp
push
loopne
movsb
fistpl
iret
add
add
in
out
in
out
jo
mov
mov
mov
xchg
test
xor
in
in
lcall
mov
lods
xor
cmp
push
push
fisubrs
jo
lods
xchg
jmp
out
xchg
mov
xchg
mov
out
fsubrl
xchg
mov
fcom
test
jbe
enter
insb
inc
or
imul
add
and
insb
xchg
outsl
test
push
je
cmp
paddb
adc
xchg
push
mov
adc
jge
test
cmpsl
add
aam
add
ficompl
mov
cmp
and
das
mov
pushf
cld
cmp
loop
mov
jmp
pop
insl
lock
js
and
mov
movsb
scas
pop
in
daa
mov
add
cmc
cmp
pop
push
sub
je
mov
push
adc
sbbl
icebp
scas
xchg
mov
add
out
or
pop
iret
xlat
push
cmpsl
push
fdivrs
mov
xor
gs
add
pop
stc
or
movsb
cmpsl
repnz
arpl
je
mov
pop
insl
xchg
adc
idiv
hlt
rcrb
mov
sahf
aad
push
mov
adc
cmp
xlat
push
sbb
jp
pop
fstpt
lds
mov
sub
jl
lock
andl
call
cmp
scas
or
push
mov
xchg
cmpsl
psubusb
push
jge
leave
push
es
adc
lods
jmp
scas
stc
lods
das
sarb
sahf
nop
ret
lahf
mov
fldenv
xchg
es
or
jae
lahf
xor
mov
pop
test
lret
xor
mov
or
jno
pop
inc
dec
mov
lret
ljmp
cmp
cmc
mov
outsb
ja
adc
mov
sbb
jp
xor
fdivrl
lcall
rorb
pop
push
aaa
addl
add
and
mov
and
mov
push
lahf
add
mov
inc
pop
orl
loop
push
push
xor
setge
scas
cmpsl
hlt
xchg
pop
inc
call
ds
push
inc
pop
mov
or
sbb
sahf
jbe
cmp
add
inc
xchg
scas
mov
rclb
mov
pop
sarb
flds
or
mov
inc
jmp
or
fstl
mov
cs
inc
movsb
popf
lea
xlat
lods
xor
test
lods
cs
jmp
mov
xlat
push
aam
mov
scas
dec
sub
jne
test
mov
fisttpll
sub
in
es
scas
xor
pop
les
neg
pop
pusha
faddp
repnz
sub
lss
jge
bound
or
push
xor
aad
mov
arpl
pop
dec
xchg
and
mov
jp
mov
inc
lcall
jmp
test
sbb
pop
pop
mov
push
jmp
xor
inc
filds
je
add
push
not
fdivrs
mov
addl
pop
cwtl
and
cmp
cmpl
loope
cltd
xor
test
das
mov
arpl
call
pop
pop
lds
mov
call
jmp
subl
inc
ds
xchg
mov
push
cmpsb
jg
push
xor
xor
pop
test
push
mov
call
loopne
rolb
in
popf
clc
fcompl
or
mov
jbe
adc
aam
in
out
jecxz
and
in
push
xchg
mov
lret
fstp
jl
and
mov
pop
ret
dec
xchg
in
mov
or
jge
cmpsb
sbb
xlat
insb
loopne
jecxz
inc
lahf
push
and
notl
add
imul
pushf
fsubr
pop
ja
hlt
cmp
sub
aas
mov
lods
sub
fldl
xchg
faddp
xchg
cmp
sahf
push
xchg
movsl
or
sub
call
dec
scas
and
fldt
dec
aam
xchg
fimuls
add
push
ljmp
lds
cld
lcall
out
out
pusha
in
dec
out
loop
inc
shll
rorb
sbb
mov
imul
xchg
mov
inc
sbbb
mov
jnp
jg
dec
es
jnp
hlt
daa
push
mov
or
xchg
inc
leave
cmp
jg
sbb
sti
adc
aad
mov
pop
adc
adc
sub
out
mov
push
xor
orl
ja
inc
iret
ss
mov
in
mov
xor
mov
pop
inc
sbbl
test
daa
jns
mov
mov
sti
and
rcll
add
addb
mov
test
pop
pop
scas
cmc
in
push
sub
pop
push
div
inc
cs
pusha
cmc
out
psrlq
push
push
faddl
lods
ljmp
or
push
test
cmpsb
decl
fidivs
push
dec
push
leave
inc
cmc
insb
icebp
mov
jge
aas
xchg
mov
in
int3
cmp
and
add
mov
jle
pushf
xchg
fcomps
cmp
mov
fwait
jge
in
dec
jmp
push
xor
push
std
cmp
nop
decl
lods
inc
xchg
xchg
mov
pop
jg
gs
xchg
test
pop
movsl
ss
mov
adc
imul
push
mov
xchg
scas
jg
lock
jae
add
cmpsl
out
xchg
sub
lcall
sbb
mov
pop
sbb
push
ljmp
cli
lea
xor
mov
rolb
and
mov
push
popf
jbe
clc
xchg
aam
jl
lea
ficoml
mov
je
or
stos
dec
push
ret
add
imul
mov
jo
add
inc
inc
jle
dec
cmp
mov
insl
xor
and
push
or
push
popa
mov
sbb
mov
popa
adc
orl
mov
adc
inc
out
add
mov
cs
sub
fs
fcoml
lds
xchg
inc
imul
into
jmp
mov
mov
dec
cmpsb
mov
dec
std
cmc
cmpsb
and
aam
sbb
lret
ljmp
outsb
cli
jnp
inc
inc
imul
inc
mov
mov
add
cmp
dec
addb
jmp
mov
inc
cwtl
cmc
pop
sar
cltd
push
cli
clc
out
cmp
xor
pop
icebp
sbb
add
sar
in
repnz
mov
ljmp
fidivrl
jle
cmpsl
mov
shlb
adc
cmp
jb
dec
mov
xor
or
adc
jle
jp
scas
lret
jp
push
int3
dec
dec
sbb
call
hlt
ret
in
pop
push
hlt
dec
sbb
gs
pusha
sarb
push
ret
dec
pop
insb
cld
mov
imul
push
cmp
xor
push
loopne
xchg
xchg
dec
out
stos
call
push
stos
or
imul
sti
mov
and
xlat
int3
call
or
jno
out
adc
xlat
adc
mov
add
jnp
loopne
xchg
fwait
inc
rorb
or
mov
xchg
xchg
xchg
test
inc
xor
call
pop
pop
inc
call
inc
mov
cmp
movsl
jl
sub
xchg
fsubrs
lret
ret
mov
mov
or
cli
push
mov
mov
push
mov
clc
call
sbb
mul
adc
jg
lahf
cmp
lcall
pop
inc
jg
xchg
mov
sahf
or
mov
test
outsl
mov
mov
xor
neg
push
cmpsb
or
adc
mov
shll
imul
popf
imull
int
push
mov
dec
stos
popw
xchg
xchg
mov
int3
repz
jb
xor
out
push
add
jmp
out
mov
mov
push
mov
stos
jge
mov
movsl
or
cmp
daa
out
shlb
test
lea
mov
lea
and
inc
xchg
and
ja
dec
and
test
pushw
lcall
outsl
test
mov
loope
aam
mov
nop
jb
mov
test
mov
add
dec
mov
adc
jbe
aam
cmpl
jp
ret
add
xchg
mov
sub
xchg
cmpsl
ret
aad
cmp
add
cwtl
scas
hlt
sub
sub
jb
xchg
shrl
cs
lret
mov
adc
xor
cmpsl
sub
dec
xor
movsb
scas
scas
sub
mov
jo
xor
arpl
pop
inc
subl
aas
aam
aas
enter
mov
xchg
movsl
scas
pop
push
iret
or
pop
cmc
push
lods
add
imul
xchg
jae
cmpl
imul
mov
mov
sbb
or
adc
shlb
mov
cmp
jl
mov
call
dec
xor
mov
jo
gs
in
cmp
jmp
test
pop
mov
addl
mov
xchg
or
xor
stc
adc
leave
mov
aad
cmp
in
xchg
pop
mov
inc
xchg
lahf
dec
mov
dec
jae
and
xchg
mov
xchg
adc
inc
in
adc
push
mov
push
mov
fs
or
lock
push
add
enter
jl
in
in
test
mov
movsb
jo
xor
mov
push
gs
dec
popf
aas
push
int
movsb
addl
sti
lock
fstl
out
and
jmp
and
mov
dec
push
lods
add
dec
mov
int3
fistl
and
daa
xor
outsl
xor
jno
add
aaa
inc
mov
ds
xchg
xchg
inc
insb
xchg
and
jecxz
xchg
test
inc
add
or
mov
push
mov
andb
xor
dec
pop
or
jge
arpl
aaa
scas
in
jmp
cmpsb
int
out
mov
stos
mov
in
add
data16
mov
dec
mov
sub
push
test
addr16
sbb
cmp
jne
cmpsl
xchg
mov
cmp
aas
mov
movsl
shll
aas
xchg
scas
js
push
sahf
in
or
pop
mov
dec
call
shlb
xchg
stos
sbb
roll
cmp
int3
jb
jne
es
lcall
sbb
add
lret
push
cwtl
aas
mov
hlt
inc
inc
adc
sbb
mov
and
ss
sbb
mov
sbb
hlt
shlb
ret
xor
add
addb
insl
fs
lods
data16
xor
cmp
rcll
cmp
jp
sbbl
push
sahf
and
and
imul
stos
xchg
lret
vxorps
stc
call
push
and
push
pop
mov
test
inc
add
sub
repnz
pop
pusha
ds
je
neg
nop
push
test
mulps
sbb
inc
fimuls
and
mov
mov
jmp
mov
cmp
sub
or
xlat
pop
dec
inc
out
rclb
outsb
adcl
adc
cld
sarl
ljmp
cmpsl
cmp
inc
add
gs
js
icebp
pop
cmp
repnz
sub
js
outsb
adc
scas
adc
or
test
bound
fldenv
data16
push
inc
pop
aad
imul
mov
xchg
xchg
sub
leave
dec
mov
pop
aam
stc
fst
push
lret
repnz
cmp
xor
lcall
mov
mov
in
jecxz
pop
xchg
sbb
pushf
insl
mov
cmc
hlt
sub
lods
xchg
insb
stc
xchg
data16
sbb
aas
mov
shrb
adc
xchg
aad
or
cwtl
ret
add
adc
xor
sub
stos
int3
imul
inc
push
andb
mov
repz
out
inc
or
popf
loop
or
add
mov
std
loop
jp
and
xchg
or
pop
pushf
jo
clc
popf
faddl
jne
hlt
out
loope
xor
mov
out
jae
cmp
inc
mov
insl
lret
cltd
and
adc
mov
shl
gs
shlb
and
inc
lods
xchg
hlt
xchg
fstl
stos
xor
test
xchg
pop
aam
xchg
into
std
and
insb
pop
test
sub
stos
sahf
pop
pop
dec
arpl
jnp
pusha
mov
or
rcl
mov
xchg
clc
leave
xchg
mov
in
and
push
push
faddl
cmpsb
push
ja
daa
in
pop
mov
pop
lods
sub
jo
cmpsb
stos
out
sub
mov
sti
xchg
cmp
arpl
dec
jae
mov
dec
sarb
cli
sbb
push
lcall
nop
jnp
cli
adc
incb
rcrl
lock
sub
faddl
and
cltd
sub
outsl
repz
pop
lea
in
and
dec
ss
cs
inc
pop
jl
das
add
inc
rcrl
test
dec
cli
je
mov
fcomps
mov
mov
outsl
pop
mov
pop
fimull
lret
fildll
fwait
sbb
mov
mov
jno
mov
xchg
into
sbb
rclb
sub
in
fs
int3
xor
aas
std
mov
add
loope
jno
dec
xchg
mov
das
jmp
or
sahf
sbb
push
cmc
nop
iret
scas
fsubl
js
xor
cwtl
rolb
cmp
push
stc
imul
shlb
mov
test
sub
popa
mov
cmc
push
dec
movsb
idiv
in
jb
cwtl
scas
mov
xlat
andb
push
sub
push
jno
sub
and
mov
jge
icebp
pop
int
fs
and
es
mov
rcr
cltd
and
cmp
out
xor
xor
ljmp
add
adc
imul
xor
sbb
sub
mov
jle
inc
mov
sbb
fcoml
push
push
dec
sbb
inc
pushf
mov
mov
nop
lock
adc
dec
xorb
punpcklwd
add
std
flds
loop
xchg
addr16
loopne
and
cwtl
xchg
out
inc
adc
push
adc
fbstp
repnz
lea
iret
mov
test
ja
adc
pop
push
sub
lcall
andb
or
push
dec
mov
mov
sub
aaa
push
jge
stc
je
jns
sbb
mov
inc
in
sbb
test
add
pop
jmp
xchg
imul
lds
xor
imul
iret
jmp
add
pop
push
add
cmp
andl
cltd
fsubl
sbb
xchg
inc
pop
sbb
and
outsb
xor
xor
popa
pop
es
dec
xchg
fidivs
push
push
sub
test
xchg
jle
and
mov
cmp
or
stos
ret
ficoml
jl
cmp
sub
sbb
cmc
leave
lods
mov
out
or
adc
mov
or
in
test
pop
lods
jmp
xchg
rclb
jb
scas
mov
mov
jecxz
jl
fcompl
push
das
jl
pcmpgtb
enter
mov
or
lcall
fstpt
push
jp
mov
sti
xor
pop
jb
movsl
and
fstpt
jmp
psubusw
mov
jnp
cmp
ds
hlt
sub
xor
xor
and
xchg
int3
inc
fidivrs
out
shll
dec
shr
adc
xchg
aaa
ficoms
cwtl
daa
cmpsb
jmp
pop
sbb
push
push
xchg
and
pop
ficomps
rep
or
sbb
add
adc
pop
mov
in
lea
push
mov
or
jns
xchg
enter
jno
add
enter
sbb
mov
dec
pop
jbe
imul
stos
jbe
stos
xor
and
push
in
js
push
fisubrl
lret
stos
mov
cli
movsl
mov
push
or
das
xchg
rcr
inc
out
lret
jge
fcoml
stos
sbb
sub
lahf
out
cmp
flds
pop
add
cmp
nop
in
jg
mov
pop
xchg
repnz
faddl
jge
std
jno
stos
bound
imul
neg
pop
inc
jbe
mov
and
xchg
ret
sub
fisubl
test
into
xor
aas
dec
fld
fldt
in
sbb
sbb
adc
cmp
jle
xchg
jle
push
push
into
test
adc
or
add
fistpl
loopne
and
cmp
xchg
cmp
pop
sbb
dec
xlat
jg
in
popa
pop
fsubrl
xor
push
cmp
into
aas
ss
out
cli
test
mov
jne
ds
jns
fisubrl
cwtl
push
cmc
xor
mov
sarb
push
ret
cltd
stos
pop
cld
sbbb
sbb
imul
and
test
sub
jnp
imull
mov
mull
idivb
cmpsb
xchg
jmp
mov
push
movsl
push
out
lea
imul
gs
call
fadds
test
fnstcw
sbb
shrl
and
jae
shlb
js
movsb
jge
sub
lret
add
flds
ret
mov
inc
sbb
fldenv
orl
inc
stc
cwtl
nop
add
sub
adc
sbb
imul
imul
pop
xchg
jmp
sub
add
mov
or
stc
inc
ja
imul
fisubl
mov
in
test
jns
jae
rcrb
sbb
test
dec
pop
or
adc
mov
xchg
and
mov
mov
mov
cmpsb
cs
push
jge
mov
lcall
add
push
add
ret
inc
jecxz
movsb
push
add
add
sti
test
adc
loopne
or
aam
xchg
mov
lret
lds
fimull
pop
jnp
cwtl
pop
lcall
les
stos
mov
in
jecxz
repnz
sbb
sbb
sahf
cmp
jp
add
mov
hlt
inc
cmpb
test
fwait
jle
add
mov
imul
push
int3
call
xchg
stc
das
pop
sbb
xchg
cmpsl
adc
imul
jg
dec
loopne
mov
mov
mov
shr
mov
call
cwtl
in
das
push
stos
pop
imul
jge
out
ficoms
fwait
sub
mov
lods
jae
push
in
push
push
je
xor
push
adc
mov
push
fbld
movsb
sub
or
xor
mov
jne
pop
adc
jb
inc
popf
nop
mov
outsb
cltd
enter
jmp
push
cwtl
xor
mov
lret
push
jb
sbb
xchg
cmp
gs
push
mov
pop
xor
sub
push
pop
pushf
push
inc
sahf
cmp
fwait
inc
pop
mov
or
test
idivl
add
add
daa
dec
dec
jmp
pushf
aas
sbb
pop
inc
ds
push
jecxz
mov
fiadds
jmp
out
das
rol
jge
in
dec
xor
adc
inc
lods
jb
adc
xor
push
ja
je
jno
out
pop
or
adc
pop
cwtl
jg
fidivl
xchg
repz
ficompl
dec
sub
fcoms
mov
sbb
mov
call
lods
adc
jge
pop
dec
data16
jle
in
sti
pop
emms
mov
push
int
jno
adc
mov
xor
and
out
btr
mov
mov
pop
cli
or
enter
sti
loope
add
aad
repz
jge
stos
sbb
push
xor
pushf
xchg
incl
xchg
pop
push
mov
outsb
dec
ss
inc
out
setae
inc
xchg
gs
jo
push
je
xorl
sub
das
mov
mov
mov
ss
mov
lcall
cwtl
jae
inc
mov
es
push
lods
xor
pop
bound
add
cmp
bound
jo
sahf
jp
ret
mov
dec
add
xor
nop
mov
or
or
pop
mov
movaps
fldcw
scas
aam
mov
inc
mov
mov
fistpl
ja
cmc
pop
dec
test
jg
leave
ljmp
mov
adc
mov
sahf
xchg
outsb
cmp
negb
out
dec
cld
push
dec
jl
lcall
fstl
mov
repnz
pushf
mov
cmp
jns
cwtl
std
xor
adc
pop
imul
mov
xor
sub
ret
mov
ja
aas
test
mov
pusha
dec
loopne
dec
mov
xor
jne
jnp
rcrb
mov
mov
imul
clc
jmp
es
sub
es
push
jo
lea
xchg
cmp
add
sti
pop
xor
xchg
cmp
push
or
mov
push
divl
inc
repz
push
out
flds
cmp
or
or
cmpsl
adc
xchg
adc
mov
sarl
xchg
and
jg
mov
xor
fs
mov
arpl
jb
out
xchg
pop
xor
dec
push
lret
lret
pavgb
fdivs
jns
cmc
call
gs
test
je
push
jne
sbb
or
loop
jg
cmp
cmp
mov
daa
mov
mov
lock
xchg
pusha
rolb
sbb
fwait
adc
mov
stos
inc
mov
sub
and
cmp
push
arpl
stc
les
shlb
loop
test
or
testl
pop
sub
mov
aaa
test
imul
shrl
aas
daa
add
pop
mov
int
dec
cwtl
stos
mov
jns
xor
les
loopne
mov
adc
sar
ss
arpl
enter
psllq
push
sahf
xor
sti
ljmp
in
push
and
out
jle
nop
inc
aam
stos
les
xlat
leave
insl
cmp
stc
xlat
stc
mov
fdivl
mov
and
and
mov
outsb
xchg
inc
xchg
iret
xor
movsl
cs
in
cmpsb
fnstcw
fnstcw
repnz
test
mov
mov
mov
adc
imul
aaa
lret
cmpsl
xchg
into
jecxz
add
clc
cmp
push
pop
stos
jle
jne
push
dec
rcll
mov
cmc
fimuls
stos
inc
clc
bound
sub
inc
into
push
flds
xor
lcall
push
loop
add
dec
push
inc
inc
scas
cmp
imul
mov
outsb
aaa
dec
imull
xor
xchg
sub
fdivrl
enter
shl
lahf
add
imul
push
jl
int
push
push
jnp
jne
divl
mov
cmp
jae
in
imul
insb
cld
jbe
sti
jl
loope
xchg
mov
push
clc
fdivl
jae
cmc
mov
leave
inc
insl
aam
loope
stc
stc
sbb
xor
sub
mov
xchg
imul
xchg
push
adcl
in
addr16
sub
in
xor
mov
add
lods
fisttpll
int3
jg
push
stos
bound
lret
sbb
ret
outsl
daa
add
rcll
xchg
ffree
loopne
jg
sub
ss
adc
dec
push
cmp
jne
and
std
mov
and
add
pop
push
push
lock
or
loopne
push
mov
and
and
sub
and
stos
cmpsb
in
jno
shlb
cli
lods
sub
xor
cld
popa
dec
mov
test
jg
lea
or
xor
out
rcl
sbb
push
loop
dec
push
pop
fwait
jecxz
subb
pop
push
shll
dec
popa
es
xor
and
enter
jecxz
dec
dec
sub
sarl
hlt
cmp
pop
dec
mov
sbb
lods
mov
mov
call
or
std
gs
cs
lret
repz
push
ds
mov
adc
pop
jae
xchg
mov
sbb
adc
imulb
vandps
pop
push
dec
insl
add
add
or
adc
sub
divl
sub
mov
dec
stos
lea
ja
icebp
inc
mov
xchg
scas
pop
lea
idivl
sub
cmp
call
cmp
mov
xchg
xchg
aam
test
mov
lds
std
mov
cltd
pop
xchg
ss
xchg
int3
iret
cli
pop
cld
popf
jge
cmc
pop
fadds
in
aad
pop
orb
ja
call
sub
and
mov
jne
mov
shlb
sub
outsb
vmovupd
inc
decb
xchg
dec
mov
aam
push
mov
xchg
dec
les
inc
inc
jne
das
clc
jmp
inc
jno
movsl
add
dec
cmp
lds
dec
mov
sub
aad
pop
lea
fwait
or
push
mov
loopne
jo
inc
idivl
daa
or
imul
pop
nop
xlat
push
mov
es
add
inc
arpl
mov
pop
hlt
mov
dec
das
mov
xchg
fimull
divb
or
stc
push
int3
pop
mov
pop
and
ds
or
fisubrs
xor
int3
or
aaa
ljmp
lcall
fs
xchg
cltd
pop
stc
xchg
xor
lcall
fsubrl
mov
shrb
dec
add
add
dec
add
insl
movsb
sbb
lods
lock
ss
add
andl
popf
daa
mov
das
adc
lea
arpl
lea
sbb
push
mov
das
pushf
mov
negb
enter
jle
lret
cmpl
cmp
and
jae
stos
or
aad
mov
icebp
lods
inc
in
sub
cld
out
mov
dec
inc
daa
xor
sbb
out
in
test
out
pop
in
sbb
cmpsb
xchg
loopne
aad
clc
stos
and
push
mov
loope
pop
mov
add
out
or
pop
mov
test
imul
idivb
test
add
in
cmpsl
xor
jp
popa
shr
sbb
sahf
cld
outsb
xor
ret
xor
or
inc
cmp
sbb
or
sbb
fstl
sub
stos
mov
pusha
pusha
mov
outsb
push
outsl
mov
ss
ret
dec
jg
cmp
or
fwait
xor
xchg
movsl
and
mov
test
dec
sbb
ret
mov
sti
fistpl
add
ljmp
cmp
adc
ret
jns
jnp
mov
sbb
ds
push
pop
mov
int
xchg
add
mov
cmpsl
jmp
int3
add
loop
jmp
ret
in
insl
daa
scas
in
mov
pop
sbb
pushl
xchg
fidivs
repz
aaa
adc
push
faddl
jbe
mov
ds
clc
add
dec
shlb
xchg
cmpsl
nop
mov
addr16
jp
aaa
ja
test
or
jne
ret
pusha
lret
jbe
xchg
call
mov
test
into
cld
scas
fdivrl
cmp
test
xchg
xchg
cmc
jl
xchg
ljmp
out
pop
lcall
jecxz
stos
cmc
add
ds
mov
rorl
jnp
ds
pop
fstpt
xorl
mov
and
mov
cmp
mov
insb
call
pop
mov
or
loope
jbe
popf
popf
push
popl
cmc
test
fstps
ljmp
mov
arpl
cltd
test
sbb
stc
pushl
sar
lock
shlb
les
stos
out
je
or
mov
je
cmp
mov
int3
push
mov
jno
jmp
jnp
negb
lds
cmpsl
mov
mov
or
mov
cmp
scas
leave
jo
push
mov
loope
cld
test
aas
leave
and
or
xor
push
inc
mov
pop
orb
roll
cmp
pusha
add
push
nop
fistpl
cwtl
movsl
dec
bound
iret
cmc
and
mov
test
xor
and
fisubrs
cltd
loopne
cld
int3
sub
ja
int3
add
dec
insb
pop
addr16
sbb
ja
pop
or
adc
out
pusha
dec
andb
or
aas
xchg
ret
push
and
xchg
popa
or
mov
push
lea
sbb
je
xchg
mov
jbe
sar
push
adc
sbb
push
jg
add
cmc
jae
lahf
push
mov
leave
icebp
jecxz
imul
sbb
sub
popf
iret
mov
and
mov
mov
pop
sub
out
cmpsb
adc
lods
in
cs
mov
dec
mov
add
dec
call
pop
or
test
sub
or
jb
imul
aam
enter
mov
clc
in
jnp
loop
push
je
divl
mov
in
neg
dec
sti
xchg
sub
or
enter
jge
divl
cmp
pop
aam
jge
shrb
mov
cwtl
bound
push
adc
xchg
scas
dec
adc
imul
div
mov
or
repnz
iret
fwait
add
push
mov
movsb
leave
iret
decb
dec
inc
sbb
mov
loope
js
stc
sbb
loopne
orl
cmc
ja
pop
lret
mov
repz
fdivp
dec
jno
lock
fimull
jge
jge
xchg
movsb
push
fmull
jae
in
aad
shrl
cmp
pop
test
and
jp
dec
mov
mov
and
mov
movsb
in
and
push
hlt
xor
bound
and
and
mov
sub
adc
into
ret
xor
test
adc
push
cld
mov
or
jecxz
mov
adc
fstpt
cmpsl
dec
dec
ret
xlat
rolb
nop
xchg
cmc
cltd
and
nop
mov
dec
pop
aas
adc
rcl
lret
out
and
dec
xor
and
mov
adc
push
and
mov
repnz
push
sub
fistps
dec
push
ret
je
loopne
sbb
pop
add
je
jo
cmp
xchg
dec
outsb
fwait
cmp
popa
mov
dec
xchg
in
jg
fsubr
arpl
pushl
movsb
jp
mov
loop
cld
pop
test
daa
pop
outsl
rcr
pop
push
sbb
mov
shlb
jae
xor
cmp
std
stos
fnstenv
and
dec
pop
push
sbb
mov
insl
cmp
fwait
mov
fstpl
inc
sub
andb
cmpsl
out
jns
pcmpeqb
or
gs
push
iret
cmc
add
cmp
cmp
pusha
or
and
jbe
mov
popa
aaa
add
jno
cmc
inc
notb
mov
xchg
xchg
cmp
mov
lcall
fdivl
pop
inc
xor
lock
jl
fneni(8087
mov
in
or
xlat
adc
xor
jp
sub
out
pusha
and
or
into
shrl
cli
jmp
insl
pop
push
fdiv
mov
idivb
adc
jl
or
in
sbb
inc
mov
hlt
out
mov
js
stc
lea
std
or
loope
aam
push
fstpl
rol
subb
sahf
xlat
sbb
mov
sbb
mov
popa
inc
cmpb
xchg
cs
fbstp
push
mov
es
cmp
in
sarb
add
pop
mov
and
add
pop
in
inc
mov
cmp
xchg
jne
sbb
stos
cmp
push
jne
repnz
mov
push
mov
inc
cmpsb
sub
int3
std
pop
pop
mov
testl
leave
mov
sub
loop
mov
outsb
mov
push
loopne
adc
sbb
and
cmp
push
pop
pop
lahf
pushf
outsl
dec
inc
and
cmpsb
sahf
repnz
pop
sar
inc
mov
push
ds
cwtl
add
bound
imul
mov
mov
scas
and
lods
jg
fisttps
or
idivl
jle
inc
add
mov
icebp
mov
notl
sbb
cmp
inc
cmp
add
lock
std
in
pop
sub
and
push
adc
mov
inc
lret
mov
xchg
das
add
inc
cs
les
push
add
pop
sbb
xchg
xlat
adc
test
pop
fisttps
add
push
push
mov
shlb
ret
stos
jmp
shr
xor
outsl
push
adc
or
pusha
imul
int3
movsb
mov
std
fsubrs
adc
sbb
pop
addr16
fwait
mov
dec
popf
fs
cmp
sahf
pop
cmp
arpl
enter
sub
mov
or
cmpsb
fsubr
adc
aam
push
inc
dec
shrb
sub
lds
fiaddl
adc
inc
jo
rcrb
inc
sub
shl
pusha
data16
lret
cmpsl
leave
imul
daa
movsl
in
mov
rol
lods
push
ljmp
addr16
add
jmp
test
xor
scas
clc
push
ret
js
pop
push
add
out
mov
inc
aaa
inc
pop
sbb
inc
loop
mov
push
out
out
nop
mov
clc
cmp
jne
test
leave
ret
mov
andl
jmp
sub
push
ret
data16
imul
xor
sti
pop
std
sbb
push
push
xchg
and
out
fs
roll
and
push
jg
js
lock
sub
pushf
jp
sub
cmp
push
icebp
lods
jnp
push
pusha
cmp
pop
icebp
fwait
jmp
leave
jne
xor
mov
jbe
cmp
outsb
aam
jne
dec
sub
sbb
dec
call
and
test
rol
xchg
xor
das
mov
jmp
xchg
adc
loope
hlt
inc
push
cmpsl
rol
out
cwtl
push
push
rorl
lret
pushf
cmp
adc
and
test
push
cmp
push
push
dec
add
outsl
shrb
fcmovu
push
sub
mov
lcall
add
cmp
dec
dec
sbb
pusha
and
adc
xchg
jbe
pusha
lret
in
and
insb
jge
mov
rcl
lcall
nop
fs
sarb
mov
and
int
mov
add
xchg
inc
stos
fnsave
or
sub
test
add
cltd
cmp
pop
jg
mov
inc
lods
mov
mov
popf
cmc
cmpsl
int3
push
inc
xchg
daa
adc
and
scas
arpl
xchg
xor
adc
lret
and
mov
add
sub
mov
cltd
sahf
dec
xor
pusha
push
loop
je
stos
hlt
inc
pop
push
aaa
mov
bound
cmpl
fimull
fnstsw
xchg
jecxz
cmpsb
outsl
das
in
idivb
inc
mov
add
xchg
pop
or
fmull
aad
mov
mov
cld
into
enter
sub
mov
or
enter
ljmp
out
clc
cmp
xchg
or
int
xor
lods
fisubl
xchg
es
adc
std
andnps
push
jb
mov
push
jne
iret
rclb
out
xor
icebp
test
xor
jle
add
inc
das
push
mov
jne
sti
adc
jns
ljmp
xchg
sub
dec
lds
sub
dec
push
sahf
leave
js
and
xchg
jl
sub
fimull
lret
or
hlt
movsb
mov
jne
mov
adcb
dec
cmp
out
pop
sub
roll
adc
or
cmp
fsub
mov
loopne
dec
repnz
sbbl
popf
sbb
sbb
push
js
sbb
rolb
ljmp
sub
xor
cmp
pop
cmp
in
jl
lds
call
xchg
pop
push
jns
xchg
push
push
sub
xor
xor
fiadds
xor
test
adc
mov
mov
or
mov
adc
repz
stos
cmp
in
mov
jne
insl
inc
pop
js
ss
dec
inc
cld
je
push
dec
negl
inc
jnp
and
movsl
mov
rcrl
dec
mov
dec
or
mov
xchg
jmp
and
sti
clc
aam
ljmp
sbb
pop
gs
ret
or
push
sahf
jg
inc
jecxz
pop
jnp
jmp
bound
and
roll
dec
xchg
mov
lret
out
add
fs
bound
jmp
out
xchg
mov
stos
adc
sbb
pop
jns
ljmp
incl
xor
test
jmp
sub
mov
stc
fs
xchg
adcb
and
mov
mov
cwtl
in
cs
lahf
xor
cmpsb
xchg
dec
popf
hlt
scas
bound
inc
jo
lea
cmp
int3
lock
ds
imul
out
loope
shl
push
push
test
mov
imul
cmpsb
mov
dec
sub
mull
test
test
xchg
sub
in
mov
mov
cmc
or
dec
je
cmpsl
cwtl
pop
in
push
or
imul
jg
and
ja
cmp
mov
rcrb
int
jge
outsb
scas
ret
pop
loop
loopne
dec
mov
imul
add
ret
adc
frstor
out
and
in
pop
mov
mov
rclb
inc
pop
mov
cwtl
xchg
dec
imul
push
dec
add
fcoml
mov
pop
push
xchg
xchg
pop
dec
jae
add
adc
loop
xchg
ror
cmp
xchg
jp
mov
jnp
mov
jbe
aaa
mov
dec
arpl
jno
out
lahf
or
cmp
pop
or
pop
cwtl
leave
or
fsubrs
insl
fldt
lock
in
sub
shrl
xchg
push
fldcw
push
and
aam
and
xor
dec
sahf
inc
in
fimull
push
sbb
pop
and
test
loope
sub
sub
sbb
daa
inc
pop
mov
sbb
shll
sbb
lock
aaa
mov
add
mov
bound
xor
and
dec
mov
rol
out
int
popa
push
push
and
mov
out
data16
test
push
and
jecxz
sahf
cld
call
pop
push
je
in
adc
out
jp
in
push
xchg
scas
adc
in
add
lcall
fisubrl
movsb
aam
leave
scas
mov
cmp
push
out
or
push
xchg
dec
dec
fs
popf
test
loope
and
jle
pop
sub
xchg
int3
into
pop
push
push
outsl
xchg
inc
mov
jno
push
in
xchg
jbe
lods
mov
sub
add
add
sub
bound
or
pop
push
mov
test
push
test
jns
xor
sub
nop
inc
inc
inc
scas
inc
or
xchg
push
inc
loop
add
rcr
cmp
loope,pt
mov
mov
mov
inc
mov
imul
mov
xor
leave
push
fbld
lea
and
push
mov
xchg
dec
dec
cli
dec
pop
aam
ret
out
lds
insl
push
inc
pop
sar
sarb
repz
sbb
push
insb
xchg
mov
push
sbb
pop
aaa
cld
mov
mov
jle
pop
dec
mov
ja
lcall
sbb
ds
arpl
pop
mov
mov
rcrb
fs
inc
lods
call
mov
push
sub
fldcw
inc
dec
add
ret
movsb
dec
mov
insl
xor
call
ret
rorb
inc
arpl
imull
push
xor
mov
int
test
scas
xchg
flds
adc
rcr
cmc
jns
scas
ja
cmp
xchg
stc
push
mov
push
cmp
es
jne
mov
popf
jge
and
orl
pusha
mov
lret
pusha
into
out
sti
lock
inc
mov
adc
cmpsb
lods
add
xchg
adc
and
rolb
pop
jl
adc
jg
jg
jne
movb
vpxor
push
shr
cmp
rclb
gs
push
outsb
or
inc
adc
xor
lods
mov
ds
jne
or
in
pop
jg
int3
dec
fwait
jg
pusha
cltd
in
int3
mov
ljmp
lock
js
ret
push
push
int
push
icebp
jl
xchg
mov
mov
cli
jb
rorl
loopne
cmp
inc
or
fwait
in
subl
cmp
stc
push
lods
push
test
dec
cmc
enter
xchg
add
sub
aaa
add
popa
sbbl
fwait
xchg
cltd
and
mov
imul
int3
or
dec
add
in
loopne
lds
cmp
dec
js
mov
cmpl
into
lea
add
and
adc
pop
push
cmp
mov
movsb
aam
out
mov
sarb
pop
mov
fidivrl
lcall
jo
in
jp
out
fwait
adc
call
or
mov
fisttpl
popf
mov
les
ficoms
outsb
dec
pop
sub
test
clc
mov
mov
and
je
push
sahf
or
lds
mov
rcll
fbstp
mov
inc
imul
inc
in
cltd
pop
jle
sbb
or
inc
aas
repnz
jo
jg
inc
rcl
xchg
rcl
sti
inc
pop
xchg
sbb
rcr
pop
jmp
cmp
and
jl
ljmp
xchg
call
mov
cwtl
or
xchg
sub
ljmp
adc
mov
pop
mov
mov
stc
cmp
and
add
mov
pop
aam
aad
inc
mov
inc
xchg
sahf
stc
sub
inc
jmp
test
and
fisubrl
xchg
sub
mov
outsl
int3
mov
sub
sti
test
pop
leave
mov
sub
sbb
rorb
daa
fbstp
js
adc
lods
mov
mov
mov
sbb
dec
adc
add
popf
push
movsb
ljmp
inc
inc
aaa
xor
cmp
dec
out
mov
xchg
xor
shlb
mov
mov
mov
xchg
push
not
xchg
cld
sub
imul
sarb
push
mov
popf
mov
dec
dec
jb
or
shl
ss
in
inc
sahf
loope
test
or
push
in
jns
aaa
imul
xor
nop
pop
xchg
jno
popf
rclb
pop
pop
jg
sbb
jmp
mull
mov
andb
ret
or
push
dec
xchg
stos
dec
push
mov
ret
js
mov
sub
roll
stos
sub
xchg
sub
mov
std
mov
mov
mov
scas
sub
pushf
test
cwtl
push
ljmp
pushf
push
push
out
dec
loopne
pop
shlb
dec
or
inc
int
scas
fcoml
js
movsb
aaa
lea
inc
insb
pop
fcoml
mov
jae
sarl
inc
pop
ret
stos
sub
stos
aad
inc
enter
push
xor
sarb
mov
fsubrl
and
loop
cs
xchg
into
test
pop
xlat
out
lea
divl
pusha
dec
cs
jno
mov
test
xor
add
xchg
incb
in
int3
lods
add
ljmp
test
mov
enter
lds
dec
and
out
movsl
or
mov
mov
and
les
gs
hlt
xchg
enter
cmp
lcall
pop
ja
push
inc
test
imull
sbb
ljmp
aas
in
in
out
test
pop
shl
cmp
inc
pop
or
rolb
jmp
pop
rorb
adc
scas
mov
test
lods
fwait
scas
mov
into
adc
fiadds
stos
out
lret
inc
pop
xor
and
daa
addl
xchg
mov
xor
call
mov
push
mov
popa
xchg
pusha
jne
mov
outsl
insl
mov
ds
cs
push
std
inc
je
sbb
mov
xlat
and
imul
pop
mov
ja
push
fstpt
pop
inc
mov
loopne
fildl
sarb
les
out
mov
scas
adc
dec
movsb
enter
mov
adc
int3
sbb
shl
subb
stc
sub
test
xor
push
ret
test
mov
in
xor
cltd
sahf
movsl
nop
xor
jae
mov
pop
jns
sbb
dec
pop
pusha
mov
xlat
outsl
and
inc
mov
lahf
jne
dec
push
or
js
lods
xor
adc
add
jmp
ja
lahf
lret
dec
adc
popf
xchg
rcll
mov
cmp
fwait
inc
subl
lahf
incl
jl
jbe
loopne
adc
adc
xor
adc
mov
dec
fcomps
imul
int3
mov
in
xchg
pushf
incl
jg
jecxz
jge
xor
sbb
pop
ret
add
jo
mov
and
add
xor
adc
xor
inc
stos
fnstcw
stos
mov
jo
lods
insl
popl
xor
ret
pop
sti
cmp
hlt
das
cmpsl
lahf
sub
or
sbb
pushf
add
jb
in
xchg
loope
lods
dec
stos
notb
aam
ret
cltd
inc
xor
pop
mov
inc
jmp
cld
and
sub
jns
scas
xchg
insb
mov
cld
sbb
cmpsb
add
sub
flds
nop
insl
push
iret
aas
add
cmp
aad
xor
aam
ljmp
fstps
pop
ret
sbb
fs
rcl
out
gs
lret
add
pop
lret
decb
lds
xchg
fadd
and
loope
jp
cmp
cmpsb
xchg
filds
dec
xstore-rng
cmpsl
xor
add
jae
shll
xchg
mov
fistpll
ret
jno
nop
mov
mov
sbb
int
cvttps2pi
test
in
xlat
pop
fdivrl
enter
adc
cs
sahf
sbb
sbb
mov
dec
jno
insb
xorb
es
jle
mov
test
jo
jo
dec
cmc
pop
shl
push
adc
lahf
pop
imul
jne,pt
lea
jbe
sbb
jnp
sbb
aas
loope
and
mov
add
test
ljmp
push
adc
ljmp
pop
addr16
divb
push
mov
fnsave
fisubs
pop
iret
dec
sbb
loopne
push
dec
lret
sbb
inc
mov
inc
jb
jne
jmp
cltd
movsb
sub
jns
cld
js
fxch
inc
daa
jge
fidivrl
push
das
mov
mov
outsl
hlt
jo
xor
sub
jb
cmp
mov
mov
inc
je
outsl
repnz
inc
mov
cmc
out
push
gs
jbe
add
rcr
daa
scas
in
out
pop
insb
into
data16
lret
mov
xchg
dec
je
mov
hlt
fcomps
and
call
in
ja
stc
dec
fimull
fdiv
hlt
jle
dec
je
mov
sub
xchg
cs
les
lods
test
pusha
mov
pop
xchg
sbb
pop
inc
stos
mov
pop
xchg
int3
daa
mov
sub
mov
fiadds
roll
aas
arpl
xchg
jbe
out
scas
clc
mov
orl
cmc
orl
into
jo,pt
ss
cld
in
pop
bound
test
out
pop
das
jbe
adc
push
push
inc
adc
mov
dec
or
pushf
test
shrl
or
cltd
and
sub
cmp
xchg
sbb
ret
aas
pop
xor
pop
call
rorl
sbb
mov
mov
push
sarb
pop
or
daa
pop
sti
cmpsl
adcl
jb
lock
loope
push
mov
add
lret
cmp
pop
idivl
and
ret
xorl
movb
jb
out
mov
mov
repnz
cmp
mov
sub
lcall
xchg
jg
xchg
sub
iret
add
jmp
sbb
and
mov
mov
push
pop
mov
jno
xor
ds
iret
subb
sbb
inc
iret
push
lret
and
dec
fsubl
lods
jmp
jmp
adc
out
cmc
jl
mov
repnz
mov
hlt
and
lock
inc
jns
insb
push
xor
sbb
sbb
inc
push
enter
aaa
pop
in
idiv
out
movsl
mov
sahf
sub
movsl
mov
adc
adc
imul
into
dec
lock
cmp
sbb
popf
xchg
stc
push
add
std
pushf
sbb
lods
cltd
sbb
leave
dec
call
jmp
int3
dec
add
push
add
iret
test
cmp
cs
add
or
sahf
add
loope
les
inc
lret
push
je
rclb
mov
jmp
inc
nop
xor
jg
out
or
adc
shr
push
cmp
lret
xor
lods
scas
and
and
shlb
adc
pop
aad
vunpcklps
mov
xor
test
sub
jb
rclb
xchg
sbb
in
mov
not
pop
push
jns
sub
push
aaa
cmp
sub
imul
scas
and
xsaveopt
sub
fmulp
pop
jecxz
ja
std
mov
ja
push
push
in
popf
xlat
jmp
cmp
imul
iret
jge
sahf
aas
sub
sub
pop
sub
rolb
bound
call
dec
pop
mov
adc
aam
push
pop
pushf
imul
push
mov
xor
push
jmp
clc
les
cwtl
fwait
xchg
popf
jo
pop
adc
js
enter
adcl
popa
scas
adc
and
push
mov
dec
add
scas
lret
outsb
cmp
pop
aad
cmp
inc
call
test
inc
cltd
cmp
or
cmp
xchg
jnp
insl
mov
mov
aas
call
push
popf
iret
aam
aam
or
fnsave
cmp
or
cld
insb
sbb
mov
test
dec
pop
mov
in
arpl
mov
push
or
push
insb
push
cmp
jle
or
pop
cli
ret
lcall
jnp
pop
xor
adcl
add
xor
sub
jbe
adc
mov
add
mov
test
cltd
pop
pop
or
fs
jg
sbb
add
jb
aam
repz
or
call
xchg
adcl
sbb
shll
fists
ds
pop
fidivrl
dec
fildl
push
addb
xchg
out
movsl
std
cmp
lret
pop
sub
mov
add
gs
fwait
das
cmovge
xchg
or
adc
cmp
imul
mov
mov
ja
adc
jbe
dec
fidivrs
jecxz
test
stos
gs
add
sub
ret
mov
or
pop
sbb
mov
push
mov
push
cmpl
cmp
and
add
popa
repz
jg
pushf
addl
adc
or
lods
mov
cmp
call
sarb
add
mov
pop
xor
jbe
inc
fistps
mov
testb
mov
cmp
or
and
add
sbb
sub
add
xchg
into
mov
cmp
xor
xor
sbb
int3
adc
inc
cmpsl
push
pop
mov
push
or
pushf
push
cmpsl
aam
divl
add
bound
xor
movsl
cmc
movsb
loope
iret
cmpsb
lret
fidivs
dec
xchg
lcall
loopne
mov
insl
mov
test
sub
push
sbb
aad
or
or
add
loopne
in
sub
add
or
cli
sbb
cmpsl
push
mov
jns
push
rorb
xchg
inc
nop
or
shrl
jge
push
imul
ret
fcomps
adc
cmc
jb
mov
cmp
stc
xorl
dec
cmpb
and
jmp
test
je
std
pop
pop
and
mov
out
cmovs
fadd
cmc
sub
jg
mov
inc
sbb
movsl
mov
push
jl
xchg
push
outsb
sbb
mov
sbb
ja
pushf
jecxz
arpl
cmp
pop
lcall
cwtl
insl
and
pop
in
and
out
pusha
leave
incl
mov
pop
cmp
hlt
ret
mov
xor
fcompl
lods
jno
repz
andl
dec
fst
insl
or
add
jl
push
call
rcr
cmpsb
lock
push
mov
fadds
mov
aam
mov
mov
dec
adc
pop
rol
lret
sbb
lret
out
enter
repz
or
inc
clc
pop
xchg
scas
mov
sti
fstpt
cmp
idivl
movsb
xchg
xor
pop
dec
imulb
rol
insl
dec
inc
push
push
adc
addr16
hlt
cmc
lret
bound
push
xor
jb
gs
sub
add
add
es
stc
mov
lds
cmp
enter
mov
add
leave
and
rep
or
cli
imul
or
pop
adc
sub
push
inc
pop
jge
mov
xchg
mulb
mov
dec
mov
adc
pop
adc
fcos
dec
js
iret
mov
pushf
push
xor
sbb
fistpll
sbb
nop
xchg
mov
cs
cmp
inc
jmp
mov
fisubrl
add
cli
xchg
inc
call
sub
mov
popf
cmp
lcall
sub
call
mov
cmc
test
loop
aaa
jle
ljmp
sub
out
add
psubsw
dec
jno
xor
sbb
adc
outsl
bound
sti
cmp
jne
sbb
cmpsb
pop
xchg
fldl
push
jmp
push
pushf
mov
xor
out
xor
cwtl
imul
inc
stc
adc
push
lret
pop
jno
es
scas
mov
insl
cmpsl
push
rcll
xchg
jl
jg
xor
lods
sub
dec
mov
cmp
repz
push
push
cmpsl
sbb
lods
outsl
pop
and
decl
inc
lret
mov
orb
dec
sahf
jno
or
mov
ljmp
pop
inc
pop
pop
mov
outsb
mov
fidivrs
push
popa
dec
jmp
mov
lahf
arpl
sarb
adc
adc
dec
repnz
arpl
pop
add
lret
test
lds
ret
aaa
add
add
std
inc
sbb
test
add
clc
pusha
adc
das
test
movsb
loop,pn
xchg
subb
int
insb
or
cmp
lea
fadds
lds
push
mov
pop
arpl
addb
or
cmpl
jb
jecxz
lcall
cwtl
test
out
push
pop
into
or
data16
xchg
inc
push
xchg
scas
ljmp
mov
pop
and
stos
mov
sub
mov
inc
jecxz
sub
addl
adc
stos
or
outsb
outsb
dec
mov
jne
lahf
add
aas
ret
fists
decb
test
or
pop
mov
inc
mov
daa
adc
xor
ljmp
mov
inc
adc
out
repz
movsl
imul
inc
jbe
mov
shlb
mov
jecxz
sbb
das
sbb
std
stos
jl
or
js
pop
movsb
daa
lahf
add
mov
rcll
stos
repz
mov
sbb
into
jmp
test
int
out
in
vpmacsdd
shrl
inc
push
into
imul
xchg
inc
xchg
sub
mov
mull
pop
sub
ss
lret
mov
jbe
pop
or
push
cltd
xor
aas
loop
inc
pop
push
pop
ljmp
movsb
aam
ret
shll
dec
cltd
dec
stos
stos
test
mov
into
aas
sub
xchg
cmp
cmp
push
pop
daa
jo
xchg
cmp
repz
mov
jmp
rolb
dec
jp
hlt
add
jmp
pop
insb
mov
stc
sub
rcll
mov
cli
xor
enter
push
in
cmp
push
loop
jg
test
cmpsl
xor
lods
or
dec
inc
test
imul
inc
test
cmp
pop
fwait
or
ja
mov
loopne
arpl
sub
fdivrl
mov
sahf
cmp
sub
add
lret
mov
sbb
jge
xlat
mov
xor
push
push
and
les
outsb
cmc
imul
xchg
push
jge
push
xchg
jg
inc
push
and
icebp
lock
mov
cmp
or
pop
cwtl
outsb
xor
cwtl
nop
mov
dec
sub
fxch
xlat
fs
sbb
and
jecxz
mov
cwtl
add
mov
sub
aad
aad
adc
pop
iret
adc
cmc
mov
inc
sahf
outsb
jg
pusha
push
lods
add
add
pop
mov
jnp
ja
and
aaa
es
in
push
and
mov
jnp
jae
nop
fistps
xchg
cmp
xor
or
mov
rcrb
bound
jmp
mov
mov
lahf
dec
adc
push
inc
cmc
and
movsb
into
fucomp
dec
dec
push
dec
adc
aas
shl
stc
sbbl
mov
xor
jg
mov
xor
pop
in
and
mov
sub
push
jnp
shl
push
sbb
pop
in
add
in
xchg
mov
popf
lods
jb
out
dec
stc
imul
xor
sub
dec
xor
push
jne
outsl
and
mov
dec
pop
scas
iret
push
je
faddl
hlt
cli
cmpsl
mov
adc
mov
push
lods
mulb
movsl
add
inc
xchg
mov
test
jg
pop
stos
leave
adc
mov
std
shr
adc
jno
dec
sub
sbb
inc
cmp
out
jp
scas
or
adc
fidivs
or
push
pop
ss
mov
roll
xor
xor
mov
push
or
popf
push
popf
adc
dec
popa
es
imul
jo
mov
paddq
push
dec
in
mov
and
inc
jmp
lods
xor
mov
in
mov
dec
mov
push
xlat
orps
add
ljmp
cs
add
sbb
add
dec
enter
mov
dec
sbbl
pop
push
xchg
mov
leave
add
adc
rclb
push
sbb
fistps
dec
hlt
xor
push
mulb
push
out
push
ds
nop
push
jle,pn
push
and
ljmp
lret
fisubs
or
sbbl
pusha
fwait
jp
fsincos
add
mov
xor
inc
ret
jge
jmp
push
mov
push
add
ds
jb
mov
inc
add
lahf
dec
push
mov
inc
mov
jg
xor
fs
add
mov
mov
mov
sub
in
cmp
adcl
and
shll
cmp
test
cmc
push
mov
repz
loope
push
jle
push
push
mov
arpl
cmpsl
xor
loop
adc
call
and
popf
cltd
shl
xor
cmp
jb
aad
lea
dec
xchg
cmp
imulb
out
mov
xchg
cmc
jnp
aad
loope
xorb
and
enter
or
fs
jecxz
inc
cmpsl
pop
shl
and
pushf
jmp
dec
xor
xchg
out
jmp
push
mov
lock
xchg
fdivrs
lods
or
scas
and
fs
xor
add
fs
lea
lret
sbb
cs
push
pop
and
loopne
pop
push
das
and
push
in
jecxz
pop
adc
mov
xchg
sbb
js
mov
das
mov
inc
dec
divl
mov
push
es
rcl
jmp
push
into
add
sub
loopne
xchg
and
ss
lahf
leave
push
fadds
cwtl
leave
movb
sarb
mov
xchg
xchg
sbb
push
jge
mov
sbb
push
push
lcall
and
mov
mov
sub
subl
mov
sub
std
jmp
mov
idivb
adc
inc
inc
testb
subl
in
or
sbb
or
xor
movsb
mov
xchg
and
psllq
push
cwtl
cmp
in
lcall
adc
add
push
adc
cmpb
mov
scas
xchg
mov
jmp
jmp
cmpsb
aaa
aaa
sti
adc
mov
je
jo
fcompl
ficoms
xchg
pop
jmp
movb
daa
adc
aad
dec
inc
xchg
inc
ret
bound
fisubl
sbb
push
clc
sub
dec
loope
pop
imulb
lcall
mov
es
aaa
xor
sar
sarb
jmp
movsb
mov
out
add
repz
insb
lea
shrb
cmp
movb
push
sbb
sbb
mov
xor
or
movsl
push
and
outsb
popa
xchg
call
imul
push
pop
fildl
or
sub
cmpsb
loope
or
scas
sti
mov
lds
dec
sti
hlt
loopne
into
jl
jp
sbb
sbb
dec
xchg
mov
xchg
pop
mov
in
outsb
not
shr
imul
jb
sbb
sub
push
je
and
jmp
xor
sub
sbb
out
pop
lret
scas
cld
jo
mov
je
jns
ja
cld
fisttpll
mov
dec
add
mov
mov
scas
adc
xchg
das
mov
mov
rorb
outsl
mov
je
dec
arpl
pop
dec
adc
mov
or
push
les
push
push
jns
repz
fbstp
call
or
or
dec
mov
daa
xchg
lcall
pop
aad
loopne
or
push
mov
cmpsb
jmp
jnp
stc
enter
cmp
js
loop
push
pop
int3
ror
inc
pop
out
mov
rclb
shlb
jmp
inc
mov
fisubs
xchg
push
jl
inc
into
inc
inc
addr16
fstpl
pop
push
gs
or
jo
lret
adc
loop
test
movsb
mov
and
jo
andb
mov
fistps
dec
xor
xor
push
adc
xchg
cmpsb
pop
loopne
mov
jb
mov
insl
and
pop
out
adc
xchg
inc
enter
leave
aad
xchg
inc
inc
out
sbbb
dec
movsb
adc
add
stos
push
popa
sub
jns
jg
xor
xor
jnp
inc
mov
mov
aas
dec
push
and
xor
adc
andb
in
mov
inc
clc
test
jnp
shll
iret
mov
or
push
into
xchg
pop
xlat
repz
cmc
push
aad
push
out
in
subl
cmpsb
sbb
push
push
bound
add
adc
stos
rcrb
lock
je
loopne
mov
testb
xchg
rcrb
adc
inc
push
sbb
sub
mov
cmp
loopne
out
loop
scas
jp
inc
in
pop
mov
xchg
outsl
xchg
ret
dec
xor
lcall
or
or
jmp
dec
mov
rorl
in
daa
xchg
jp
sahf
jne
sbb
aaa
arpl
cs
adc
arpl
inc
inc
test
outsb
in
outsb
dec
dec
mov
fmuls
test
mov
jo
loop
adc
inc
movsb
add
push
add
sub
adc
add
leave
into
sti
dec
fcomi
add
and
fadd
push
stc
mulb
push
inc
xchg
pop
inc
mov
inc
xor
ljmp
cmpsl
inc
imul
or
cmp
movl
in
cbtw
out
in
popa
inc
not
movsb
inc
call
cmp
mov
xchg
fnstsw
xor
clc
sbb
pop
lea
xchg
icebp
jno
shl
ja
push
popf
pushf
sub
inc
push
xor
sbbl
mov
adc
inc
mov
fnsave
add
lahf
lret
and
jp
imul
or
imul
inc
mov
das
addr16
dec
xchg
push
mov
add
outsb
add
andb
jle
mov
or
roll
fsubl
sub
lds
shufps
xchg
push
gs
cmp
sub
adc
mov
ja
loope
rolb
test
mov
and
int
pop
test
or
icebp
add
rol
pusha
outsl
jae
xchg
xchg
xor
test
das
adc
cmp
xor
adc
jmp
sahf
and
loopne
jl
mov
inc
je
hlt
in
scas
int
mov
jge
xchg
xchg
xor
mov
inc
push
mov
xchg
push
add
pop
cmc
addr16
stc
pop
mov
sbb
push
sbb
flds
jmp
push
mov
or
jmp
in
dec
popa
mov
popf
or
mov
lock
sub
cli
mov
jno
sbb
cmc
imul
inc
cmp
gs
adc
incl
adc
loopne
lret
mov
test
pushf
push
cmc
adc
shlb
add
adc
xchg
push
lock
adc
bound
stos
jl
push
inc
dec
pusha
add
test
out
xlat
lahf
pop
mov
out
pop
leave
push
insb
popf
adc
mov
mov
mov
xor
xchg
jle
xchg
test
lods
and
imul
je
lds
imul
rolb
cld
mov
jb
xor
es
push
add
test
test
sub
sub
sbb
dec
fnstsw
mov
xor
cmp
xchg
push
xchg
fs
push
and
cmp
call
dec
iret
mov
pop
or
mov
sbb
les
inc
cli
pushf
stos
jp
imul
mov
adc
jne
out
out
cmp
sbb
dec
ret
mov
mov
lret
cmp
fstpl
push
loop
or
xchg
ss
and
cmpsb
sbb
repz
dec
je
mov
daa
jnp
push
or
in
fcomps
popa
scas
cmp
dec
pushf
scas
repz
stos
fists
lods
fidivs
or
stc
movsb
sbb
pop
out
adc
popf
es
stos
sbb
inc
mov
out
push
stc
inc
jnp
jecxz
sbb
shrb
xor
lahf
cmp
js
fmull
adc
mov
test
pop
into
pop
incl
imul
and
andl
ret
adc
je
inc
loope
and
xor
mov
repnz
dec
icebp
and
inc
sbb
ja
outsb
aad
das
pop
and
mov
fisttpll
lea
fsubrl
pop
or
stos
fwait
xor
dec
add
jge
jb
aad
mov
pop
and
int3
sbb
add
lock
sub
push
shll
xor
and
push
sub
jbe
ds
and
aas
pop
xor
xor
mov
das
iret
dec
mov
add
inc
outsl
loope
push
movsb
mov
insl
cmp
inc
jno
push
cmp
push
cld
adc
cmpsl
ljmp
add
mov
test
xchg
repz
adc
pop
cltd
push
pop
adc
jae
adc
cmp
into
negl
ret
push
out
xchg
ja
inc
cwtl
push
push
xchg
aam
idiv
pushl
add
and
scas
inc
das
shrb
jb
cmp
jge
adc
xchg
add
cli
movsl
rolb
pop
movsl
and
sub
mov
sbb
mov
mov
jmpw
mov
stos
sub
pop
inc
sar
jbe
dec
mov
jge
stos
dec
insl
stos
jnp
push
sbbl
jmp
cmpsb
popf
sub
icebp
imul
xlat
cmp
fxch
sbb
dec
imul
adc
cmp
aam
in
xchg
push
ja
loopne
out
fwait
sbb
lock
out
es
and
mov
xlat
and
int3
fidivrl
ljmp
sub
add
sub
or
jg
adc
cmp
mov
dec
push
cmp
mov
add
xor
imul
xchg
pop
pushf
mov
mov
and
cmp
xor
add
jle
mov
lret
shll
gs
clc
jle
loopne
mov
inc
in
in
push
cmp
shll
mov
cmp
lods
jg
out
inc
and
dec
hlt
lock
jmp
popf
sub
push
iret
pop
dec
inc
movsbl
lret
pop
lea
idiv
icebp
xchg
inc
ror
dec
jmp
cmp
sahf
adc
mov
scas
push
push
loop
movsl
sbb
pop
fnstenv
jecxz
call
inc
mov
push
or
cmovo
add
mov
or
loop
cs
popa
sub
lock
sbb
fmuls
movsb
mov
mov
mov
lds
jo
cmp
dec
cltd
icebp
jl
jns
shlb
lret
jae
cmpsb
pop
filds
cmc
test
negl
adc
sahf
push
add
insb
scas
and
std
mov
inc
sbb
mov
pop
mov
dec
fcomp
rcl
jmp
adcb
rcr
test
dec
xchg
push
and
adc
xchg
ja
pop
leave
xchg
xchg
std
mov
mov
cmc
dec
jmp
das
add
and
push
xor
ja
shrl
dec
lods
adc
add
lock
imul
or
dec
test
gs
outsl
jecxz
scas
dec
out
stos
adc
ss
fisttpl
popa
jl
arpl
sub
decl
adc
aad
pop
and
xchg
mov
pop
mov
push
jecxz
dec
ljmp
ljmp
jbe
out
mov
rolb
dec
popf
stc
add
popf
xchg
lods
sbb
daa
pop
xor
jl
pop
mov
inc
es
push
cltd
mov
mov
outsb
xlat
popa
sbb
hlt
iret
pop
adc
push
push
lods
fstl
cmpsb
or
adcb
ljmp
add
xchg
mov
iret
stos
stos
popf
loop
jecxz
cmc
or
xor
fisttpll
jl
cmp
jl
and
xor
cwtl
fstpl
mov
jbe
mov
sbb
cmc
mov
mov
jge
xchg
lcall
mov
inc
mov
inc
xor
loope
mov
imul
dec
in
fldt
js
xor
aas
fwait
sarl
xchg
repnz
gs
es
push
cmpsl
push
xor
pusha
sbb
ljmp
scas
mov
dec
cmpsl
jb
jne
pop
and
mov
arpl
mov
push
jmp
adc
jecxz
mov
or
and
movsb
pusha
popf
out
jne
mov
hlt
lcall
dec
loop
ja
pop
aas
fsubr
cmp
aas
mov
inc
mov
and
lods
cwtl
inc
popf
leave
mov
xchg
push
lahf
dec
std
add
cmp
dec
mov
bound
mov
sarb
adc
push
mov
dec
out
repnz
mov
lret
cltd
fwait
push
and
push
mov
adc
hlt
jo
dec
inc
in
xor
lcall
dec
cli
push
dec
xor
and
adc
mov
xchg
push
fnstsw
xchg
ret
in
mov
jmp
inc
scas
testb
xchg
jle
jne
cwtl
movsl
add
insb
mov
jl
push
in
jmp
jg
test
sbb
pusha
stc
in
sbb
lret
fwait
mov
pop
pop
mov
inc
leave
rolb
insl
shll
or
push
or
dec
jg
mov
shr
mov
jge
or
aaa
cltd
stos
cwtl
outsl
scas
test
adc
aas
mov
sbb
stos
sbb
xchg
loope
movsl
jb
cmpsb
sbb
push
cmpsl
int
and
dec
or
jne
pop
daa
std
sbb
iret
xchg
popa
or
mov
pop
repz
popa
sbb
or
test
adcl
or
push
cmp
fwait
cmp
inc
xchg
ds
push
lods
dec
xchg
fmuls
clc
cli
fildl
stos
add
xlat
sbb
mov
inc
js
notl
jle
inc
push
add
dec
and
sub
repnz
out
in
bound
sub
das
mov
nop
idiv
pusha
push
pusha
xor
insb
out
mov
sarl
cmp
and
cmpsl
xchg
pop
and
roll
cmp
ljmp
xchg
mov
cltd
nop
out
ja
xor
aam
shll
nop
mov
adcl
scas
negl
sbb
cld
and
jp
add
imul
cli
mov
and
test
mov
add
push
lock
jno
roll
jle
jmp
clc
xor
cmp
ds
or
mulps
and
aas
xchg
int3
xchg
xor
or
fimuls
xchg
inc
out
sbb
and
jb
rcl
xor
inc
pop
cmc
pushf
and
imul
mov
test
ret
pop
sbb
pop
cli
jno
and
ljmp
pop
sbb
inc
mov
add
lahf
loop
cmc
adc
lea
pop
jbe
push
mov
push
mov
in
mov
fiadds
sub
xchg
xchg
addr16
les
das
scas
cmp
fucom
aam
dec
test
fs
xlat
dec
dec
pop
mov
add
inc
shll
dec
aaa
scas
add
xchg
xchg
xor
sub
rcrb
mov
jecxz
push
lock
push
and
test
pop
mov
lods
lret
mov
sub
call
jg
popf
std
xchg
xchg
or
icebp
push
mov
mov
pop
daa
adc
int
sub
test
adc
add
xor
inc
push
fists
ret
and
orb
xor
icebp
aas
pop
mov
dec
lea
jo
mov
and
push
push
cld
lret
xchg
inc
cmp
add
xchg
mov
sbbl
and
lds
outsb
jnp
rolb
cltd
cmp
push
fiadds
push
xchg
xlat
and
jl
fidivl
out
xchg
jmp
lcall
cmpsb
aam
mov
mov
scas
dec
xor
push
xchg
mov
add
fildll
push
cltd
xor
lock
mov
dec
jnp
sbb
lret
ss
adc
pop
loop
mov
mov
xchg
adc
scas
rcll
add
push
inc
mov
jnp
rcll
mov
cmp
hlt
xchg
faddl
add
pop
push
push
aas
xor
mov
and
add
pushf
mov
imul
pop
mov
scas
xchg
scas
add
fistps
xor
fldenv
mov
rclb
push
fs
aad
mov
inc
and
xchg
sti
fstps
fs
cmp
pop
pop
add
push
shlb
xchg
xor
stos
pop
jne
shll
roll
pushf
mov
mov
xchg
xor
aaa
inc
adc
scas
daa
outsl
mov
std
mov
fwait
nop
adc
ja
inc
xor
lea
nop
mov
and
mov
xor
bound
into
lahf
or
std
or
ja
and
outsb
cmpsl
or
mov
jbe
cli
ss
inc
jg
rclb
push
popa
fsubs
ret
aas
mov
and
xchg
adc
insb
mov
andb
lods
or
jnp
mov
cld
xchg
shl
push
addl
ret
rcrb
dec
scas
push
xchg
test
mov
inc
jae
adc
or
fdivrp
inc
pop
jb
scas
mul
push
push
mov
inc
imul
inc
pop
xchg
inc
pop
dec
imul
jg
and
mov
cmpsb
ja
cltd
fistpll
sahf
sti
repnz
mov
mov
cli
mov
and
sbb
xchg
out
fs
xchg
xchg
loopne
fsubs
and
scas
pop
cld
sahf
push
inc
push
fmuls
xchg
jmp
push
cmp
dec
cmp
cmp
jae
repz
dec
sbb
mov
jb
in
repz
add
aas
aam
out
sub
or
xchg
mov
push
lcall
pop
dec
mov
shr
pop
in
sbb
hlt
lods
loop
int3
imulb
sub
bound
jecxz
push
dec
mov
mov
mov
dec
out
subl
mov
push
fsubrl
mov
xchg
cmp
pop
jecxz
inc
mov
mov
and
dec
and
mov
pop
push
pop
imul
dec
sti
and
xor
cld
sub
rorl
add
mov
inc
sub
xchg
es
addr16
sbb
push
push
jle
xor
shr
cmp
cmp
mov
dec
mov
cmp
add
pop
insl
inc
lods
test
pusha
mov
movsl
cmp
xchg
add
shll
mov
fdivrs
mov
repz
ret
aas
or
shlb
pop
int
ret
adc
aam
outsb
mov
out
loop
dec
loope
loop
inc
push
dec
subb
out
aaa
gs
push
in
dec
aam
inc
pusha
cmp
cltd
out
movb
in
into
dec
xchg
jg
sub
std
adc
mov
ss
mov
in
push
or
popf
insl
icebp
int
icebp
jb
cmpsl
jo
push
push
pop
mov
scas
out
mov
pusha
popl
jecxz
popf
imul
sbb
dec
jae
enter
rol
or
aaa
sarl
adcl
mov
fs
fiadds
cmp
or
ds
pop
cmp
lret
ja
dec
mov
rclb
pushf
lcall
adc
lea
jae
sbb
rol
fs
sub
lret
jns
cmp
ljmp
jns
mov
lea
jno
xor
imul
out
jns
mov
or
push
lods
insl
icebp
repz
aaa
mov
lods
xor
sbbb
daa
mov
mov
push
and
insl
imul
and
in
aad
jb
or
sbb
fsub
into
inc
cmpsl
arpl
fildl
data16
lods
push
gs
mov
xchg
sbb
pop
shll
rcrb
mov
icebp
adc
mov
loop
xor
jmp
aam
pop
loopne
mov
and
mov
aam
and
clc
lret
jge
in
xchg
mov
push
mov
lret
ret
sub
loope
lahf
push
jbe
shll
mov
inc
jo
and
es
add
sbb
and
mov
push
pop
test
mov
push
or
push
iret
sub
testb
inc
dec
movsl
and
mov
in
mov
cli
inc
xchg
mov
mov
mov
mov
aad
xcrypt-ecb
cmpsl
or
sbb
push
mov
insb
mov
aaa
faddl
add
push
sub
ret
dec
pop
sub
xchg
sbb
ret
out
repz
pop
push
outsl
mov
lods
pop
movsl
jne
add
xchg
filds
js
fwait
xchg
cmp
jp
clc
pop
sub
xchg
cmpsb
sub
push
andb
sbb
xchg
mov
out
dec
cmc
sbb
dec
daa
shll
jbe
rcr
and
shrl
sbb
sub
pop
clc
ret
sub
xor
dec
repnz
js
jbe
dec
imul
js
arpl
cwtl
push
mov
shr
iret
jecxz
xchg
push
push
sub
mov
cmpsl
lock
movsl
jg
loopne
mov
add
push
mov
shlb
cs
cmp
int3
fs
sub
jns
xchg
fs
xor
mov
add
daa
cmpl
inc
je
sub
sbb
sahf
call
add
push
mov
fldl
fcomps
cmp
push
int
push
push
test
inc
in
dec
fildll
leave
mov
jg
adc
xchg
out
cs
pop
fs
fisubl
jmp
test
cmp
jmp
mov
pop
lcall
jne
xchg
jle
aam
nop
inc
nop
ss
cmp
popf
out
push
test
fwait
sub
in
cwtl
ss
rorl
xor
and
int3
std
test
ja
cmpl
ret
push
dec
and
cmp
repnz
aad
cmp
bound
lea
sbb
out
jl
loopne
insl
scas
and
ljmp
test
push
stc
add
fists
and
fwait
and
add
test
mov
sbb
mov
test
add
hlt
dec
xor
mov
or
jb
push
dec
in
or
mov
mov
jmp
insb
repnz
loope
stos
in
stos
test
shl
mov
cmp
dec
sub
lock
into
add
dec
movsl
clc
lods
mov
push
insl
xchg
std
mov
stos
stos
test
push
dec
cs
fildl
adc
test
xchg
sub
adc
mov
iret
jo
lret
rcrb
int
mov
mov
arpl
mov
aam
sbb
xor
loope
dec
or
scas
js
jp
cmpsb
popf
inc
xchg
dec
int
aad
pop
inc
push
cwtl
std
fsubrl
std
dec
dec
and
jne
mov
jmp
inc
fsts
scas
xchg
xor
pop
push
mov
jmp
jae
out
into
sub
cmp
fnsave
mov
dec
test
sub
mov
in
push
aam
popa
pop
sub
leave
sbb
outsb
jbe
xchg
push
mov
mov
dec
xchg
adc
mov
push
scas
mov
addb
fwait
iret
pop
ja
rcll
nop
movsl
sub
xchg
lods
cmp
in
fisubrl
dec
add
mov
jmp
mov
dec
mov
dec
xor
jbe
xor
fisubs
fldl
ljmp
xchg
sub
sbb
cmp
ffree
shrl
xor
jns
mov
sbb
int
out
lods
jl
ficoml
mov
mov
or
inc
pusha
jnp
sub
pop
lret
outsl
iret
pop
mov
pop
push
cmpsb
jo
js
mov
jne
mov
or
push
pop
xor
lret
mov
dec
cmp
sbb
iret
sub
xor
outsl
inc
popf
testl
xor
fdiv
cmpsl
push
add
scas
icebp
aad
leave
sub
mov
and
daa
lods
cld
sub
push
pop
cld
mov
and
xor
nop
lret
shl
je
icebp
imul
arpl
pop
cs
xchg
rep
mov
sti
add
mov
xchg
sbb
jle
push
inc
sub
int3
adc
inc
test
bound
pop
push
cmp
call
mov
xchg
push
out
mov
test
dec
sub
or
inc
pop
xchg
sub
aad
hlt
lret
xlat
jns
pop
int3
dec
into
sbb
std
aad
mov
mov
popf
loopne
pop
jmp
mov
jb
lcall
negb
mov
pop
adc
sbb
pop
push
sti
mov
dec
jmp
sub
jne
scas
popa
jne
cwtl
xchg
inc
sub
or
std
aaa
loopne
pop
xor
cltd
inc
ja
divl
cmp
adc
nop
loopne
mov
popf
mov
imul
icebp
or
and
inc
cmc
ss
lcall
xor
or
sub
lcall
sbb
cltd
iret
leave
dec
push
push
xlat
leave
insb
sub
mov
test
adc
sbb
cmc
xor
xlat
es
dec
dec
mov
loop
dec
sbbb
jo
mov
inc
cmp
arpl
adc
cmp
int3
cmp
js
lods
sbb
cs
in
cmp
jbe
push
cmpsb
pushf
cmp
js
sub
mov
inc
cmp
sbb
and
pushf
pop
mov
sbb
outsb
rolb
subb
es
jno
mov
ret
inc
pop
dec
stos
cmp
push
xorb
lahf
dec
push
adc
daa
jo
cltd
inc
pop
adc
pop
outsl
mov
js
mov
add
fsts
pop
inc
stos
pushf
test
mov
loopne
es
mov
andl
pop
pushf
fildll
cmp
xchg
dec
xchg
inc
dec
loope
xchg
daa
call
cmp
xlat
loop
aad
js
sub
nop
fucomip
mov
loopne
js
insb
xchg
cmp
and
sbb
push
fsubrl
jp
add
xchg
scas
aad
dec
rcl
dec
out
inc
jae
inc
adcl
dec
in
fwait
xor
jl
setl
movsb
and
addl
or
mov
cltd
nop
cmp
ss
lods
inc
stc
xor
sub
mov
jae
xchg
mov
ret
iret
adc
sbb
jb
aaa
in
xchg
jne
jge
test
add
loopne
cli
divb
pusha
sti
push
ret
sti
ret
sarb
pop
loop
adc
les
nop
push
add
pop
cmp
insb
or
lods
sbb
push
push
movl
add
adc
cmp
pop
lahf
xor
pop
scas
sbb
scas
mov
pop
cld
mov
scas
dec
out
stc
out
int3
shlb
outsl
xor
sbb
les
rcrb
es
jno
stc
jbe
movb
cmpl
mov
mov
lahf
mov
test
sbb
fnsave
push
fdivr
pop
sub
sahf
out
pushf
fisubs
ljmp
push
imul
push
jns
jmp
stc
movsl
xor
mov
mov
sbbl
les
jmp
hlt
stc
stos
jecxz
jb
mov
adc
imul
lds
flds
jecxz
mov
adc
fldz
dec
xchg
mov
out
fistpl
nop
mov
inc
and
outsb
fdivs
xchg
jle
call
mov
ljmp
push
popa
cs
inc
sbb
daa
cwtl
cld
dec
jle
xor
sub
shl
repz
ljmp
pop
add
jbe
adc
inc
xor
push
lods
mov
cmc
sahf
dec
xchg
xor
sbb
jp
inc
lcall
loop
hlt
xor
add
push
or
add
std
sbb
inc
sbb
filds
push
movsb
mov
push
mov
mov
insb
fisttpl
mov
sbb
sub
xor
jge
push
inc
lahf
xchg
add
sahf
mov
cld
xor
int
cltd
mov
outsb
movsb
cmpb
lods
push
inc
mov
aad
rclb
in
jmp
loopne
jns
adc
loope
push
imul
lcall
sub
xchg
inc
mov
int3
clc
xchg
mov
adc
cmp
stos
and
fildll
inc
add
xchg
inc
add
sti
mov
xor
popa
mov
jmp
mov
add
push
mov
mov
jnp
fmul
mov
xchg
mov
or
repz
dec
insb
test
je
outsl
data16
pop
fstpl
or
pop
fcoml
pop
fisubl
jbe
int3
add
sub
lcall
jl
jno
xchg
inc
pop
in
mov
cvttps2pi
push
xchg
ljmp
pop
lahf
sbb
xlat
fwait
xor
sbb
mov
fisubrl
push
lret
fistpll
out
jbe
jle
mov
mov
int3
insl
mov
cmp
mov
jb
imull
imul
mov
gs
add
pop
and
add
add
mov
adc
ss
aam
cltd
inc
jo
dec
lods
stc
lret
adc
in
outsl
mov
aam
push
aaa
jmp
mov
cmp
sub
aad
test
out
push
ret
xchg
arpl
mov
in
fwait
test
enter
testl
out
ljmp
sub
xlat
mov
movsb
pop
xchg
xor
sbb
loopne
ret
setne
bound
adc
cmp
in
loope
test
mov
sub
das
push
subb
cmp
pusha
push
int
cmpsl
sbb
pushf
call
in
and
repz
cmp
adc
ds
inc
lret
vpunpckldq
fwait
loop
jp
mov
pop
in
pop
sbb
cwtl
hlt
sbb
das
sub
mov
xchg
into
cmp
xor
mov
or
jge
aad
fidivrl
imul
xchg
arpl
cmpsb
or
sbb
nop
popa
fildl
mov
gs
hlt
mov
inc
fimull
out
imul
out
shl
pop
nop
adc
lea
jmp
push
xor
pop
dec
hlt
add
xchg
jp
stos
adc
js
jmp
enter
fiaddl
xor
outsl
fldl
inc
in
pop
in
lret
fyl2xp1
lahf
in
and
jle
pusha
test
xor
out
xor
mov
mov
and
repnz
int
enter
mov
xor
inc
adc
dec
add
das
inc
push
imul
cli
aad
sub
aas
outsl
mov
pop
dec
jno
cltd
xchg
add
mov
lods
pop
and
mov
jl
dec
xchg
int3
loope
jle
mov
cmpsb
inc
inc
mov
jb
cmp
shrl
lock
mov
and
jecxz
xchg
sub
or
xor
adc
call
adc
popf
xor
mov
inc
movsl
inc
mov
cli
mov
inc
xchg
repz
and
sbb
mov
mov
pushf
mov
jae
vpextrw
or
outsb
jg
fcmovbe
adc
mov
pop
jl
inc
cmpsl
mov
dec
sub
lods
inc
mov
xor
testb
or
or
adc
aad
outsb
mov
adc
mov
or
mov
inc
jnp
jmp
add
test
xchg
add
in
nop
adc
mov
aad
mov
push
cmpl
inc
lds
adc
or
lahf
add
and
sbb
fimuls
aas
rcrb
or
jnp
jb
loopne
ds
aaa
ljmp
loope
into
pushf
pop
xor
and
adc
and
xor
xor
ja
popaw
mov
ret
aad
mov
loope
mul
xchg
xchg
dec
iret
sti
jo
cmp
data16
iret
lcall
aam
popa
arpl
into
sbb
push
sub
iret
sub
pop
outsl
cwtl
ja
lret
mov
je
dec
gs
mov
in
out
repnz
ljmp
aaa
or
nop
adc
mov
mov
jb
mov
adc
push
pusha
add
adc
lods
jo
paddusw
lret
add
inc
sub
push
sub
sti
test
mov
mov
push
push
xor
jmp
xchg
decb
loopne
iret
push
mov
test
push
jne
loope
xchg
sahf
sub
stc
sub
xchg
cmp
addr16
fistps
data16
xlat
cli
jne
xchg
ja
jno
aas
and
loopne
push
mov
or
sahf
test
pop
mov
dec
xchg
mov
inc
mov
std
rcrb
push
dec
test
out
cmp
hlt
sti
cltd
into
xchg
fs
inc
orl
add
sbb
shlb
push
cmp
pop
ds
loopne
jnp
comiss
xchg
fdivrl
adc
pop
inc
mov
inc
inc
push
mov
bound
adc
sbb
cmp
pop
pop
mov
dec
pop
cmpsl
cmp
icebp
outsl
sbb
cld
and
mov
insl
cs
test
test
mov
xor
ja
mov
js
jg
fwait
movaps
or
mov
fdivl
pop
das
test
andl
cmp
or
adc
push
dec
out
loope
push
lea
daa
or
ss
mov
cmp
cmpl
xchg
mov
dec
mov
sbb
sbb
out
clc
js
mov
dec
sahf
push
pushf
jp
jge
lahf
test
jecxz
mov
dec
enter
js
mov
imul
jge
and
jne
xrelease
lret
das
int3
sahf
mov
sbb
adc
cmc
mov
cld
inc
add
lret
xchg
notl
xchg
fcmovnu
into
adc
xor
xor
xor
dec
icebp
lods
popf
xchg
out
das
fisubs
iret
addl
jmp
das
push
jg
das
jl
inc
sbb
shll
push
aaa
ret
fwait
sub
into
pop
push
sarb
sub
xchg
rorb
outsb
fdivrs
pop
sbb
sub
inc
inc
pcmpeqb
adc
mov
lods
jp
mov
in
andl
je
lret
dec
cmc
sahf
divl
mov
push
mov
mov
js
outsl
push
ror
push
xor
xor
mov
insl
fwait
addr16
data16
addb
xchg
scas
daa
mov
or
lods
bound
rcl
das
add
xchg
cmp
cmpsb
or
cli
pop
outsl
je
in
and
jge
xchg
inc
js
filds
or
mov
mov
mov
cmc
adc
outsl
scas
sub
in
inc
pop
cli
xchg
or
add
aad
mov
mov
mov
inc
mov
pop
lcall
repnz
mov
scas
out
mov
in
sarl
popa
pop
mov
imul
sbb
or
pop
add
int3
mov
rcll
not
jb
call
mov
add
add
rcrb
cmp
cld
sbbl
cmpb
xor
add
inc
mov
dec
cmp
xor
repnz
leave
shlb
rcrl
aad
stc
loope
sbb
add
push
ret
jl
pop
pushf
cltd
outsb
cmp
push
jge
aad
mov
push
popf
stc
push
xchg
lds
inc
jecxz
addr16
dec
xlat
iret
dec
mov
add
test
sub
rolb
lods
fmuls
test
xlat
dec
pop
add
dec
aaa
pop
xor
lret
inc
fwait
test
lcall
mov
mov
add
imul
cmp
out
scas
sub
ret
push
ficomps
mov
jo
dec
xchg
aam
add
jnp
pushf
pop
xchg
xor
push
scas
aam
xor
clc
sarl
cmc
sub
push
scas
mov
cltd
fidivrs
sbb
xchg
cld
clc
xor
nopl
outsl
xlat
dec
subb
push
mov
ss
mov
jl
pop
aas
push
push
cltd
inc
adc
test
dec
sbb
push
test
mov
inc
push
fdivl
rcrb
adc
bound
xchg
jo
adc
add
mov
sbb
call
pop
insb
loope
aaa
in
dec
in
loop
cmc
jg
in
and
test
nop
sbb
test
sahf
sub
xchg
mov
mov
sbb
jnp
pop
fldt
cmp
sbb
std
sub
cmp
popf
fwait
mov
imul
movsl
push
insb
in
fsub
int3
testl
jp
adc
fldcw
dec
fisttpll
addr16
mov
scas
cmpsb
adc
mov
cmp
xor
sti
pusha
cmp
push
pop
adc
jle
icebp
sbb
xchg
mov
subl
fisubl
xchg
fists
imul
mov
cltd
ret
cltd
add
loop
mov
xchg
sub
jns
sbb
or
inc
sbb
movsl
fcomps
sub
cmp
jge
sbb
ja
out
xchg
scas
cmpsl
cwtl
xor
cli
popa
int3
test
cmc
sub
jae
jae
outsb
mov
int3
mov
xor
push
add
mov
sub
bound
and
into
pop
ficomps
lds
jge
xchg
push
add
in
push
fsincos
in
inc
mov
add
das
das
imul
adc
xor
dec
fcmovnu
sub
jbe
addb
scas
cmp
or
sbb
sbb
dec
sub
in
jno
xor
adc
or
and
and
fimull
push
sbbb
dec
test
js
stos
fstps
mov
xor
movsb
xchg
sub
into
xchg
fidivl
xchg
clc
lret
test
push
mov
icebp
cltd
mov
leave
mov
cmpsl
in
or
xchg
test
fnstsw
sbb
ja
xor
rep
pop
mov
ret
stos
mov
insb
xor
pop
sub
cmc
xchg
jnp
and
inc
test
add
cmp
mov
jbe
lock
loop
loop
daa
lds
insb
cmp
mov
orl
pop
leave
rclb
add
aad
mov
cld
cli
cld
lds
jecxz
push
imul
push
mov
pop
push
jle
jecxz
pop
pop
gs
xchg
mov
adc
sub
pushf
shll
push
shll
stos
enter
mov
ja
adc
jbe
repnz
jns
jle
fucomi
cs
inc
inc
jl
sbb
inc
pop
lods
sahf
ficompl
movsl
test
lret
push
lds
mov
add
mov
negb
and
mov
add
sub
mov
and
mov
test
into
movsb
mov
cmp
push
fsubs
std
push
xchg
daa
out
mov
jb
and
sub
and
stos
mov
leave
push
xchg
clc
fistps
push
std
out
sti
movsl
shrb
mov
fsts
sub
loope
in
push
cmp
ficomps
push
push
mov
add
inc
fiaddl
mov
dec
aas
jge
xor
jne
or
fisttpl
adc
out
icebp
xor
dec
push
inc
jle
and
in
gs
sub
rcrl
mull
into
outsl
icebp
je
or
jne
lcall
and
lahf
sbb
orb
out
cmp
sbb
add
dec
je
pop
dec
shrl
and
mov
cmpsl
cmp
pusha
stos
out
adc
jecxz
jecxz
adc
xor
cld
repnz
cmp
repz
sti
aam
leave
icebp
imul
dec
mov
lods
mov
sbb
mov
int3
mov
push
hlt
xchg
xor
push
pushf
sbb
arpl
clc
add
call
xor
sub
push
imul
jge
insl
das
sub
push
fists
outsl
enter
push
aam
pop
cmc
divb
cli
push
sub
push
jo
jmp
jp
gs
mov
or
clc
jnp
iret
adc
jg
xor
std
xchg
sub
mov
lods
add
pop
lods
add
lods
sbb
mov
pushf
pop
add
sub
push
insl
push
inc
push
and
push
xchg
repz
cwtl
pop
lret
mov
xchg
hlt
or
icebp
pop
sub
bound
cmpsl
or
test
jecxz
ja
lods
inc
inc
xor
pop
out
stc
pop
data16
mov
sarb
inc
add
cmpsl
push
jl
jb
cmpsl
lea
adc
jmp
jnp
xor
sbb
mov
lds
dec
test
mov
in
call
sub
sahf
addl
add
lds
je
stos
filds
std
out
pop
insb
aaa
push
xchg
xor
mov
sub
sub
jne
pop
add
mov
stos
sub
push
shll
xlat
test
push
dec
imul
sbb
fldenv
stc
add
sahf
xlat
pop
jecxz
xor
dec
adc
enter
and
lea
mov
pop
mov
cmpsb
xchg
adc
outsl
push
jmp
mov
out
dec
outsl
icebp
sub
mov
dec
mov
outsl
pop
movsb
mov
pop
insb
stc
repnz
out
stc
mov
aaa
mov
dec
or
cs
add
in
stos
mov
stos
add
xor
add
incl
push
in
cs
stos
lods
cli
mov
and
dec
mov
int
or
xchg
cmp
inc
lea
inc
push
inc
cli
mov
xchg
add
jno
mov
lea
rcrb
mov
sahf
xchg
or
imul
dec
inc
js
adc
add
addr16
outsb
cmp
mov
xor
push
sbb
push
sbb
lock
push
mov
adc
push
dec
cmc
or
fdivs
push
mov
cltd
in
xchg
leavew
mov
pop
lods
lds
inc
clc
les
fwait
outsb
fs
lcall
in
jne
jecxz
sub
mov
lcall
inc
or
hlt
mov
inc
xor
or
movsb
mov
loope
adc
jg
shlb
pop
lods
lds
int3
or
in
lods
and
lahf
cmpsl
in
pop
into
pop
sub
sub
sbbb
sbb
pop
adc
mov
jecxz
or
add
xchg
or
cmp
outsb
sub
aas
insl
mov
xchg
roll
xchg
test
in
rorb
in
mov
mov
xchg
jmp
sti
mov
or
sbb
inc
lahf
or
stos
in
pop
push
cmpb
icebp
ret
sub
cmp
and
int3
jnp
scas
pop
js
rolb
sub
inc
stos
int3
dec
jmp
jl
xchg
jno
aam
mov
dec
loope
mov
push
aas
je
les
test
icebp
mov
cmp
inc
fcomi
mov
ljmp
push
cmp
ss
pop
push
mov
dec
ss
sub
jne
out
sahf
dec
jge
lods
into
pop
mov
aam
jb
adc
cmp
and
push
mov
repz
dec
loopne
clc
mov
pop
arpl
fld
das
in
inc
fistps
jge
mov
mov
arpl
sub
adc
aas
fcomp
or
inc
xchg
add
xchg
pop
cltd
shl
cmpsl
popa
or
dec
out
daa
cmp
in
out
aam
enter
dec
jecxz
and
movsb
ret
xor
mov
or
add
jp
dec
mov
and
loopne
bnd
jae
add
cmpsl
jns
mov
cs
testb
test
ret
push
push
movsw
lock
xchg
xor
sub
ret
mov
jmp
jle
in
add
jg
mov
gs
dec
cld
int
pop
xor
outsb
dec
cltd
into
mov
arpl
xchg
movb
and
data16
popa
adc
sarb
cwtl
xor
pop
scas
xchg
jl
in
out
iret
lods
out
inc
iret
js
inc
call
inc
mov
or
mov
or
dec
jecxz
loope
mov
jp
mov
std
jnp
push
test
xchg
out
push
jmp
mov
mov
shl
sbbb
pop
es
add
imul
loop
and
out
or
loope
jecxz
arpl
mov
cmp
mov
jno
lds
addr16
ds
dec
jmp
fnstcw
xchg
imul
ja
into
addl
cmp
into
dec
sub
cwtl
mov
fiadds
testb
fcmovne
jnp
ret
mov
dec
into
dec
push
jp
cmp
and
cmp
and
push
push
sbb
shrb
lods
xor
jnp
mov
ds
push
xchg
inc
cld
in
cmp
test
mov
filds
push
pop
xorb
addl
mov
icebp
push
xorl
outsb
or
mov
stc
ret
push
push
xor
push
sub
lods
mov
or
mov
mov
sbb
movsl
jnp
fiadds
mov
mov
cli
stos
mov
pop
xchg
pop
pop
mov
fiaddl
mov
jecxz
mov
jo
and
in
mov
clc
movsl
jl
jne
mov
pop
lods
lcall
xor
sub
pop
mov
out
fldl
xor
push
inc
stc
sbb
lods
sbb
jno
and
pop
insb
or
bound
lret
popf
mov
push
pop
fldcw
scas
in
mov
sub
imul
int3
inc
das
mov
mov
lret
add
cwtl
in
add
lock
lods
sub
sub
das
fdivrs
lock
rol
add
sbb
dec
es
shll
sub
cmp
or
nop
mov
dec
or
mov
inc
jo
xchg
cmp
dec
imul
pop
mov
insb
sahf
lcall
add
jp
xor
les
xchg
movsb
stos
ss
push
push
sbb
sub
or
jbe
sbb
add
adc
popa
xor
xor
sub
xchg
lods
mov
xchg
or
dec
in
aas
ljmp
mov
sahf
insl
sub
xor
sarb
int
and
mov
push
xchg
je
mov
jg
inc
xchg
adc
mov
rcll
dec
adc
jle
inc
mov
cmp
aas
fcomp
fisubs
ja
cmp
lea
pop
arpl
imul
adc
popf
out
or
or
sbb
enter
es
incb
fmuls
lds
dec
or
loopne
ss
jno
scas
fistpl
sti
push
pushf
arpl
test
cmpsl
sbb
add
out
neg
je
jmp
std
or
and
dec
imul
add
jl
push
dec
inc
ds
push
rcr
je
cmp
mov
xchg
push
inc
xor
xchg
loope
scas
jmp
loope
shr
stos
addr16
xchg
addl
pop
pop
or
clc
mov
repnz
js
mov
aad
ficomps
fld
cltd
push
daa
xchg
mov
add
xchg
lea
paddw
mov
lds
xchg
rolb
addb
mov
push
call
push
icebp
xchg
std
iret
sbb
int
lock
outsl
xchg
sub
scas
pop
lcall
lds
loop
cmp
pop
jo
adc
xlat
sbb
les
sub
es
jecxz
mov
cmp
cmp
clc
mov
aaa
nop
mov
and
cli
sub
xchg
inc
imul
imul
sbb
sub
aam
mov
inc
fs
cmp
pushf
cmpsb
mov
or
pop
xor
mov
lea
inc
pop
out
add
add
dec
cmp
jecxz
xor
mov
loopne
ljmp
ret
xor
xor
movsb
pop
mov
lcall
fisttpl
sbb
xor
jo
cltd
aam
sub
mov
cmp
cmp
imul
movb
ret
in
jmp
lock
jg
mov
scas
jge
jecxz
dec
fisubrl
mov
lock
call
aaa
popa
pop
jecxz
leave
fists
pop
cmp
dec
mov
sbb
mov
xchg
rolb
push
pusha
sub
cmp
js
arpl
leave
push
sbb
daa
out
inc
add
dec
inc
ds
fcmovne
test
std
gs
push
mov
fucomp
iret
jo
jmp
outsb
in
add
pop
movsl
movsl
popa
cs
pop
pop
test
inc
outsl
iret
and
pop
xchg
fstpt
adc
clc
loop
lret
and
dec
add
sti
cmp
xchg
shlb
jo
inc
dec
fstpl
mov
shrl
ficompl
repz
or
adc
mov
jns
push
arpl
int3
mov
test
test
add
fildll
test
pop
hlt
mov
pop
rcl
adcb
rcrb
int3
gs
jno
std
push
int
jmp
jae
aad
outsb
sub
daa
shrl
sub
ficomps
mov
push
cmc
loopne
xor
cmp
test
pop
ja
iret
mov
std
pop
fadds
push
in
sub
in
push
jp
cmpsb
or
or
arpl
dec
loopne
loope
rcr
out
dec
sub
xchg
ja
icebp
mov
or
mov
movsl
js
mov
xchg
fsts
stos
xchg
xor
dec
sub
into
mov
push
das
push
lcall
dec
fwait
jns
stc
imul
jb
inc
jle
and
mov
out
cmc
lret
xchg
inc
in
fstpt
cmp
nop
movl
outsl
mov
add
mov
pop
xorb
dec
leave
in
sbb
int3
ret
andb
lret
adc
xchg
in
cltd
scas
mov
fwait
stos
sbb
cmp
sbb
pop
push
xchg
das
mov
pop
mov
cld
xchg
lahf
push
pop
or
das
dec
mov
mov
aas
add
jb
or
gs
push
xlat
std
pop
push
sbb
stos
pop
js
xor
daa
sub
mov
xchg
adc
lods
mov
cltd
fdivr
movsb
cmpsl
lea
cs
test
inc
lret
ds
mov
cmp
mov
int3
mov
xor
xor
xchg
push
fmull
jnp
push
mov
bound
mov
add
stos
adcl
mov
lret
lods
fsubrl
test
mov
dec
fcom
mov
pop
lods
xor
and
pushf
cli
push
rol
mov
jbe
test
stos
push
int3
adc
fisttpl
mov
add
subl
sub
aam
daa
movmskps
les
jne
sbb
insl
xor
arpl
cmp
mov
add
icebp
mov
outsl
mov
mov
sub
stos
cmp
jae
cmp
dec
test
or
pushf
and
jecxz
inc
pop
fmuls
incl
rcl
lahf
mov
inc
sub
shrb
int3
adc
sarl
rcll
mov
pop
into
clc
lock
movsb
shl
push
inc
mov
inc
test
cmc
xor
mulb
and
push
jl
incb
push
add
jg
out
xchg
sub
jmp
adc
cmpl
and
sub
sbb
cmp
shrb
xor
push
in
lcall
aaa
and
hlt
fs
clc
push
js
sbb
aas
daa
stc
add
nop
sbb
mov
xor
mov
pop
fsubl
xor
jo
nop
shlb
mov
rorb
pop
xchg
outsb
leave
xor
mov
cmpsl
cmc
cmc
and
xor
pushf
cmp
sbb
jmp
jge
sti
enter
adc
or
xor
aad
push
in
pusha
adc
and
xlat
sbb
cs
sbb
enter
loop
mov
fadds
lock
cmp
xor
mov
imul
fs
pop
out
dec
insb
icebp
push
or
xor
sahf
fwait
adc
jp
gs
sub
cltd
mov
aam
or
insl
in
xchg
jg
sbbb
scas
imul
and
ja
push
pop
ss
insl
cmpsb
jnp
or
lret
sub
popa
fs
mov
scas
movsb
in
lods
lods
push
pop
loop
push
test
push
leave
cmp
mov
jp
add
dec
cmp
inc
pop
pop
fbstp
test
sbb
adc
xor
ja
or
mov
fdivrp
adc
addl
cltd
pusha
cmpsl
mov
or
outsl
mov
xor
insb
lock
cli
add
aas
daa
lcall
testl
es
out
ret
cld
hlt
test
movsb
add
cmp
scas
rolb
push
dec
nop
pop
mov
loop
sti
xor
stos
sub
fiaddl
sub
rolb
mov
mov
arpl
and
popf
fstps
sbb
sbb
addr16
mov
loop
sbb
call
adc
jle
adc
lea
pusha
sub
or
dec
pop
push
js
and
cmp
in
pushl
adc
repz
hlt
sbb
imul
jecxz
xor
call
xchg
mul
jb
int3
or
xchg
ror
push
ja
or
in
fnstenv
pop
push
pushf
mov
nop
mov
mov
sub
rorl
ljmp
dec
and
outsb
es
or
je
movsb
movsl
imul
pusha
dec
test
ret
xchg
sbb
sbb
sub
lds
testl
addl
mov
gs
scas
or
pop
xor
mov
xor
push
cmp
mov
cwtl
out
pusha
mov
and
daa
and
test
xor
cltd
xchg
push
inc
jnp
mov
movsb
jecxz
cmp
mov
int3
inc
clc
push
mov
lock
and
mov
mov
fildll
xor
jg
sub
xchg
nop
adc
mov
loop
stos
jmp
repnz
jg
pop
cmpsb
inc
adc
pop
xchg
int
jno
sub
cmp
sub
pop
inc
aad
mov
stos
stc
mov
mov
and
dec
call
and
xor
mov
mov
pusha
stc
add
ja
insb
mov
mov
inc
ss
lods
pop
mov
fldl
mov
insb
xchg
andl
fwait
mov
cmp
or
jb
enter
jns
pop
sahf
dec
dec
and
lea
push
into
ficompl
sbb
sbb
sbb
and
or
cld
or
pushf
xor
mov
fldenv
mov
cli
cmp
shl
jnp
xor
jnp
push
dec
clc
xchg
dec
loopne
insl
inc
mov
cli
ret
xchg
cmpl
aad
pop
add
sbb
mov
notl
add
into
arpl
adc
lcall
dec
mov
add
mov
adc
fidivs
adc
test
sub
scas
shlb
push
arpl
lret
adc
xchg
imul
mov
cmpl
test
fsubp
add
lods
or
sub
mov
cmp
mov
fildl
sub
popa
push
sub
pop
out
xor
xchg
dec
aam
rclb
lods
pop
cmp
mov
adc
xor
jbe
xchg
lods
stos
shlb
fnstenv
jecxz
out
cmpsl
shr
mov
mov
jnp
jmp
pop
fstl
sub
movsl
repz
pop
test
outsb
lahf
xchg
insb
aas
jno
or
cmpsl
pop
movsl
mov
call
or
pop
lods
mov
stos
hlt
jmp
xor
les
sbb
negl
mov
xlat
int3
test
ret
cmc
rol
mov
pushf
push
jne
and
and
adc
jg
adc
ds
xchg
lea
dec
mov
mov
xor
mov
dec
or
aad
aad
push
inc
andb
and
jl
dec
mov
sbb
jo
out
sbb
xchg
add
sub
xchg
pop
mov
fstpt
sub
and
pop
ret
or
mov
dec
and
shr
repz
jbe
mov
ficomps
mov
das
in
fidivl
jle
jno
pop
mov
clc
int3
push
mov
cltd
sbb
out
cs
dec
jae
jg
lods
adc
cli
jmp
or
aas
lods
fxch
dec
inc
mov
push
shrb
add
in
push
sbb
aad
lret
mov
out
pop
add
data16
pop
jecxz
xchg
xchg
xor
sbb
xor
cmp
lret
inc
data16
ds
and
xor
dec
jo
repz
nop
outsb
call
aad
mov
lods
insb
xor
repz
jns
jl
out
xor
sbb
mov
scas
inc
jnp
xor
imul
das
push
insb
inc
andb
cmpsl
adc
mov
mov
jle
lcall
out
pop
pop
cmp
add
pusha
arpl
in
adc
jnp
sarl
jb
mov
jmp
movsl
nop
out
loop
out
in
mov
stos
hlt
or
sub
scas
xchg
in
jmp
or
pop
inc
cmp
dec
mov
test
cmpsl
add
adc
adc
mov
insb
in
subb
sub
mov
dec
sti
dec
fcomps
roll
sbb
stc
push
les
pop
push
gs
jo
cmc
je
aad
xchg
jg
cwtl
in
dec
adc
into
movsb
imul
sbb
inc
inc
cmp
mov
imulb
adc
or
rolb
leave
cmp
push
pop
jbe
or
hlt
arpl
sbb
mov
and
push
shl
or
pop
test
lcall
mov
and
ljmp
lea
add
xchg
inc
dec
pop
or
addr16
jp
fisubs
cmp
sbb
sub
inc
in
repz
mov
imull
add
sub
rorl
movzbl
cmp
dec
out
or
xor
mov
or
pushf
jno
sub
xchg
xchg
fs
ret
cmp
inc
push
mov
pushl
ret
jno
xchg
addl
push
shl
fmull
push
jl
jb
pop
adc
test
sbb
hlt
test
jo
ret
dec
dec
pusha
fadds
xchg
test
cmp
repz
cld
popa
aam
repz
push
imul
fcomps
hlt
fstpl
cmpl
add
push
outsl
push
aad
loop
insl
fucomi
or
imul
or
out
outsb
aam
pop
mov
aam
pop
add
mov
adc
repnz
lcall
fcoml
push
sarl
test
andb
and
dec
xor
pop
ror
sbb
mov
sub
jno
je
nop
and
lahf
mov
xchg
cmc
cmc
ret
pushf
repz
imul
ja
pop
movsl
movb
lahf
icebp
int3
and
adc
and
adc
cmpsl
mov
sbb
adc
or
push
loopne
sub
hlt
xor
orb
cltd
roll
fmuls
test
adc
cli
mov
test
xor
cmp
cmp
xchg
cmp
out
jmp
ja
or
mov
mov
imul
popf
xchg
inc
iret
loope
aaa
fstpt
xchg
jno
rorl
lds
ret
push
push
sbb
inc
adc
sbb
and
roll
lret
jge
pop
lahf
cs
lret
or
dec
xchg
mov
push
stos
lret
add
jl
push
aas
aad
sbb
loope
clc
rclb
mov
lods
mov
ja
push
cwtl
loopne
or
test
or
mov
test
arpl
syscall
mov
push
mov
jae
mov
std
cmp
push
sahf
ret
jbe
and
ss
loop
lock
sahf
pop
sub
push
andb
lods
push
xchg
ret
xchg
xorb
movsl
and
fs
sub
or
ret
push
incb
lret
rorl
jl
inc
idiv
add
shrb
dec
push
clc
sub
in
lea
mov
xchg
push
adc
push
xor
pop
movsl
pop
inc
inc
jae
push
loop
in
ja
add
cli
sub
add
adc
mov
fdivr
filds
shlb
popf
mov
imul
jmp
push
in
in
lods
mov
dec
and
cmpsb
or
push
negb
cmp
xor
ret
scas
ret
lret
mov
cli
mov
xor
mov
out
das
in
cmp
sub
icebp
inc
ret
mov
lret
and
sbb
pushf
sbb
stc
mov
rorb
push
lahf
mov
imul
daa
xor
ljmp
outsb
aad
popf
ds
add
insb
lods
pop
movsl
adc
fidivrl
fs
xchg
add
push
outsl
add
cmp
pusha
cmc
test
pop
mov
pop
pop
fmull
xor
add
adc
cld
adc
pop
repz
rol
pop
lret
push
add
push
sbb
and
repnz
negb
aad
fimuls
sub
jp
or
jns
sub
sub
int3
mov
mov
insl
fcmovnu
push
sub
jnp
mov
push
mov
dec
or
lods
ret
in
data16
pop
push
loopne
xchg
add
ret
inc
cmp
inc
push
lods
ds
popl
mov
dec
xlat
dec
sub
lock
ret
mov
adcb
push
ljmp
mov
adc
push
addr16
mov
stc
or
push
mov
dec
stos
cld
mov
sub
cmp
pusha
lods
cmpsb
stos
and
mov
fs
inc
cmpsl
das
cmp
xor
push
jne
popf
outsl
xchg
push
lret
js
fistpll
ss
pop
mov
push
int
xlat
fdivl
mov
scas
je
sub
test
pop
push
loopne
rorl
xchg
pop
out
or
std
adc
ss
sub
add
out
pop
add
lret
pop
jo
sbb
fiadds
lods
push
jl
mov
jns
jecxz
mov
xchg
int3
lds
int
pop
inc
pop
in
jmp
adc
test
xlat
cmpsl
into
adc
fiaddl
pop
mov
sub
int3
cs
jmp
punpckhbw
sti
pushf
rclb
and
add
xchg
loopne
and
mov
pushf
jb
push
push
mov
cmp
sti
pop
aas
xorb
mov
mov
jno
imul
fimull
pushl
push
pushf
jnp
push
dec
push
jecxz
mov
push
repz
dec
mov
lods
xor
cs
movsb
jbe
cli
pop
aaa
adc
mov
aam
ss
mov
aas
movsl
ret
mov
xor
in
cmpsb
aas
push
dec
and
outsl
mov
in
nop
ficoml
sub
dec
lds
dec
cmc
into
dec
pop
mov
dec
push
adc
xchg
insb
fsts
lret
inc
mov
nop
push
popa
cmp
and
repz
xor
std
enter
dec
mov
jl
adc
int
mov
push
mov
in
imul
jmp
sub
int3
sahf
pop
jle
add
cs
data16
lods
dec
push
aaa
xchg
jmp
mov
jge
inc
mov
js
mov
fdivr
cwtl
adc
mov
and
pop
sbb
hlt
jno
movsb
fnstsw
xor
mov
sub
mov
int3
or
sub
jecxz
loopne
les
lret
push
imul
cmpsb
inc
jne
mov
add
gs
mov
stc
mov
daa
loopne
lock
iret
in
mov
insl
pusha
mov
sub
adcb
aad
je
xchg
dec
push
lahf
cmp
je
insb
or
and
cmp
cmpsl
sti
xor
test
popf
pusha
jb
push
es
or
pop
add
mov
stos
mov
xchg
pop
inc
fsubs
movsl
aad
mov
lods
lods
dec
adc
sbb
and
dec
jo
aaa
jp
ja
subb
movsb
or
int3
roll
xor
out
out
or
scas
pop
sbb
dec
repnz
les
sbb
jl
pop
or
push
movsb
push
add
repz
cs
lea
add
push
jns
sub
and
inc
loopne
dec
bound
mov
in
sub
insb
in
insl
loope
ficompl
jno
xor
clc
mov
test
mov
enter
push
mov
or
jecxz
aad
bound
repz
movsl
outsl
sbb
int3
jp
add
dec
xor
cmp
mov
push
les
outsl
mov
insb
aad
repnz
xor
iret
popl
push
jmp
rorl
add
xor
jecxz
fsub
stos
or
adc
jl
sbb
pop
dec
test
sub
xchg
orb
lods
mov
add
jo
mov
ss
inc
pop
fcoms
or
dec
sahf
test
sub
call
mov
jno
add
push
movsb
pop
jl
add
divb
push
or
mov
les
jp
outsl
cwtl
scas
cmc
stc
test
scas
sbb
fistl
fwait
push
pusha
pop
scas
mov
js
jae
push
outsb
aam
sub
push
and
pop
add
dec
mov
cmp
dec
shll
es
add
adc
scas
push
or
int3
adc
hlt
xchg
and
shrl
aaa
pop
push
inc
mov
mov
push
jl
in
or
rcll
dec
inc
adc
push
shrb
pop
stos
bound
jmp
push
push
mov
mov
outsl
jmp
push
fcoml
add
push
test
std
ret
cmp
stc
movsb
jnp
cmp
enter
inc
insb
xor
pop
loope
pop
mov
xor
cmpsb
fsubl
push
or
je
sub
mov
pop
cmp
stos
divb
rolb
mov
sub
jecxz
mov
mov
jbe
fiaddl
mov
aaa
stos
movsl
sahf
mov
mov
jg
psubb
adc
nopl
lods
mov
pop
aad
cmpsl
xchg
test
addr16
aaa
je
push
push
cltd
jbe
and
jnp
mov
mov
xchg
mov
repnz
jl
mov
je
inc
fcompl
dec
jne
imul
lods
adc
push
leave
ljmp
dec
fidivl
adc
adc
inc
jl
push
data16
lret
jb
mov
dec
inc
inc
and
inc
shll
mov
popf
or
inc
dec
dec
mov
mov
test
dec
adc
lock
adc
rclb
sub
idivb
dec
arpl
pop
cmp
imul
iret
xor
xor
jo
ss
and
cmp
push
ret
pop
xchg
js
flds
sub
cmpsl
pop
jg,pt
dec
das
ja
ds
jnp
sbb
sarl
jno
add
sub
xchg
stc
mov
pop
adc
add
ret
in
fsubs
notb
fisttps
inc
inc
xor
and
in
inc
test
ljmp
sub
and
push
bound
dec
cmpsb
pop
dec
mov
dec
or
and
adc
sbb
sbb
sbb
add
sbb
xchg
cld
imul
mov
push
xchg
cmp
movsb
sub
mov
mov
mov
daa
pop
mull
call
pop
adc
outsb
rcrl
sub
mov
repz
dec
add
mov
dec
cwtl
outsb
mov
jg
xchg
cli
xchg
dec
nop
push
int
ja
xchg
rolb
fwait
les
and
cld
pop
or
and
call
dec
mov
mov
and
cmp
incl
insl
outsb
rclb
insl
xchg
add
dec
sub
sarb
popa
xchg
mov
jno
or
std
pop
push
ljmp
sbb
test
out
mov
aam
fstpt
les
mov
andb
and
es
lods
jmp
add
ja
pop
xor
add
leave
inc
shll
ja
sub
aas
mulb
cld
mov
ret
jne
fcom
push
xor
xor
xchg
int3
mov
pusha
mov
imull
xchg
stc
jge
outsb
add
int
lret
punpckhwd
adc
sbb
mov
and
shlb
push
mov
clc
adc
jne
jns
aam
fbld
and
add
push
loope
enter
ret
stos
mov
cmp
sub
or
insl
fisubrl
pop
in
add
outsb
adc
mov
mov
int3
ret
push
ljmp
adc
push
and
mov
cwtl
pop
lock
lret
enter
push
mov
mov
or
mov
xlat
shlb
pop
rcll
lea
jle
mov
jo
stos
rcll
ss
or
pop
adc
loopne
or
fists
cmc
jno
das
ljmp
push
mov
push
fwait
mov
das
pop
dec
xor
jmp
test
sub
xchg
insb
dec
aaa
test
in
inc
stos
pop
incb
std
mov
inc
dec
inc
jl
loop
ljmp
test
leave
test
es
sub
pop
cld
and
sbb
pcmpgtw
pushf
lea
adc
mov
inc
je
test
mov
mov
insb
sub
adc
cmpsb
rol
pop
pop
inc
and
add
lret
cs
cmpsb
shlb
imul
movsl
cli
sub
stc
sbb
jb
pop
sar
rep
repnz
mov
pop
pop
into
in
loopne
paddusw
cli
sti
lods
rclb
mov
in
and
rol
jmp
mov
add
adc
mov
cld
cwtl
call
add
add
cs
fwait
jmp
sub
lcall
jno
les
dec
adc
sbb
fwait
jnp
cwtl
in
mov
scas
jns
lcall
sbb
push
and
fcmovnu
lock
jecxz
xchg
insb
fiadds
push
xchg
sahf
cmp
sahf
fwait
sarl
adc
pop
sbb
fcom
mov
pop
push
jl
xor
mov
push
mov
xchg
pop
outsl
jg
aas
push
jno
push
jg
div
imul
push
inc
call
jns
mov
cmp
lods
inc
xchg
add
lcall
cmp
pushf
and
movsl
sub
pop
gs
mov
fdivp
aam
xor
gs
jae
sub
je
xor
hlt
push
shll
mov
mov
or
jmp
pop
lahf
addr16
inc
cmp
pop
ret
mov
and
fmuls
sub
push
mov
xor
ret
imul
hlt
lds
fwait
push
in
mov
in
cmpsl
xor
call
jb
hlt
pop
jge
test
frstor
ds
in
sahf
mov
insb
push
xchg
mov
sub
pop
push
inc
sub
jp
ljmp
lahf
xchg
mov
dec
fbld
clc
push
jbe
xchg
pcmpeqd
scas
stos
add
jb
sbb
cmp
enter
push
dec
icebp
sub
cmc
fs
push
push
int
and
imul
mov
fldl
scas
push
pop
xchg
je
cld
ljmp
add
call
dec
pop
sti
in
nop
test
test
or
cmp
sahf
push
shrl
cs
push
pop
mov
xchg
add
and
int
or
jmp
daa
xor
ss
dec
jle
pushfw
xchg
stc
test
adc
dec
or
neg
xchg
cmp
jo
pop
test
das
lods
lcall
shll
adc
sbb
xchg
jae
mov
outsl
or
mov
xchg
test
stos
inc
xor
sbb
mov
in
shll
mov
lock
orl
adc
mov
adc
or
sbb
jge
pop
jne
or
movsl
inc
and
xor
aas
pop
into
loope
jbe
pop
pop
jo
xor
or
sahf
pop
out
sub
cmpsl
and
lret
cltd
fadds
or
adc
out
pop
repz
pop
mov
and
xor
mov
orb
adc
aad
aaa
repnz
jmp
and
popf
pop
xchg
call
sbb
out
xor
sub
movsb
rolb
hlt
jp
jl
mov
fs
nop
aaa
mov
sub
fimull
je
icebp
pusha
clc
out
icebp
cmp
aas
imul
push
jbe
jp
xor
jb
cmpsl
stos
fistl
in
out
sti
cmc
das
mov
iret
fcmovne
leave
mov
test
out
scas
xor
push
enter
sub
popa
pop
scas
inc
sbb
mov
inc
and
jmp
sbb
lret
ljmp
lahf
shl
fwait
mov
pushf
addr16
gs
icebp
jg
cwtl
mov
sbb
outsb
inc
pop
out
mov
sub
pop
fldenv
repnz
fisubs
and
das
sbb
push
or
out
aam
shr
dec
mov
fstps
movsb
and
dec
test
mov
mov
pop
leave
mov
les
lock
mov
loopne
fstps
adc
das
insl
icebp
aad
push
mov
iret
ljmp
cmp
cltd
lock
and
fstpl
jb
inc
jp
adc
orb
decl
fs
adc
test
xchg
arpl
loop
push
pop
hlt
mov
pusha
rclb
inc
push
cmc
pop
sar
mov
outsl
dec
lea
out
addr16
adc
ja
repnz
aam
ss
popf
inc
pusha
repnz
mov
vpackssdw
lcall
mov
jl
shll
jne
jle
mov
push
orb
mov
mov
pop
imul
dec
mov
xchg
sub
cltd
push
cmp
je
js
mov
aas
or
notb
and
sarb
pop
jle
outsb
pop
push
insl
std
in
ret
cld
insb
push
out
push
pop
outsl
dec
jle
mov
adc
and
inc
popf
sbb
sub
xor
inc
adc
in
ror
pop
aad
mov
clc
cs
cld
xchg
lds
mov
inc
bound
test
mov
inc
xchg
jne
mov
aas
out
xchg
xor
ss
aam
lock
ret
fdiv
sub
shl
and
sbb
pop
cmp
test
test
xor
rclb
cltd
fnstsw
insl
jo
push
mov
test
js
repnz
out
nop
inc
popf
and
out
icebp
add
add
push
aas
mov
or
mov
and
inc
scas
fdivp
iret
mov
mov
repz
sbb
and
in
data16
sub
pop
cmp
mov
fchs
pop
loopne
das
jne
iret
or
rorb
call
sbb
add
stos
mov
jmp
insb
dec
icebp
mov
xchg
pop
jb
mov
out
sbb
je
int
push
les
jge
jbe
adcl
scas
adc
mov
jbe
and
mov
jo
add
push
cs
cmp
mov
cmp
out
lahf
adc
pop
lods
bound
xchg
sbb
adc
push
aas
ds
cmpsb
loopne
test
mov
orl
push
sbb
leave
out
jg
loopne,pt
pop
repnz
shlb
je
pop
stc
mov
clc
ja
mov
stc
xchg
icebp
rcr
xorl
sahf
xchg
imul
in
sbb
cmp
adc
mov
sub
lock
xlat
mov
push
mov
repnz
enter
pop
fadds
andb
sbb
sub
xchg
iret
xchg
push
fildl
jbe
dec
lahf
arpl
and
lcall
aam
mov
and
xchg
xor
xlat
movb
pop
arpl
mov
xchg
pushf
push
inc
pop
cmpsl
aaa
cmp
jbe
insb
and
dec
sub
addl
sti
ret
sbb
repz
aam
shr
jne
mov
jg
inc
push
daa
loop
push
cmp
shll
and
mov
loope
mov
ljmp
dec
sbb
test
adc
mov
iret
call
mov
movsl
mov
push
movsl
insb
inc
sub
or
jns
sub
out
or
lret
mov
out
pop
cwtl
aaa
adc
pusha
sbb
pop
lret
testl
fisubs
mov
ret
xchg
push
into
mov
lret
dec
ljmp
jg
push
jne
mov
adc
pop
mov
ret
dec
aam
rorb
push
sbb
shrb
mov
jge
add
xor
and
adc
xchg
inc
cmp
or
pop
push
xchg
cmc
cld
ret
test
mov
mov
mov
xchg
xchg
enter
jne
sub
jne
or
das
mov
repnz
push
fwait
inc
cs
shlb
or
xchg
out
add
xchg
xchg
outsb
loop
xor
pusha
and
subl
fbstp
add
mov
or
pop
je
xchg
stos
add
jns
pop
sub
bound
std
sbb
mov
mov
mov
sub
mov
adc
sbb
add
ljmp
cmp
lock
push
mov
jl
inc
jle
incl
pusha
lods
ret
cwtl
sarb
addr16
and
pop
fcomi
jge
xchg
pusha
push
sbb
jbe
repz
adc
imul
aam
pusha
pushl
das
jo
ja
test
out
pushf
cmp
jno
fisubrl
or
push
dec
insb
inc
dec
test
in
push
and
cmp
sbb
cmp
sti
and
push
out
fsub
loop
cmp
jae
lods
fisubs
mov
mov
ljmp
dec
or
xchg
mov
push
gs
jge
les
scas
rcrl
inc
ret
in
sbb
cwtl
jb
inc
adc
movsl
sbb
dec
or
or
mov
int
cmp
test
fldt
push
push
cmp
test
js
pop
cwtl
in
inc
cmp
cmp
inc
xchg
jge
mov
xor
cmc
out
mov
dec
int3
je
pop
adc
add
cli
cld
mov
nop
test
jae
in
cmp
inc
add
mov
jbe
dec
xor
jnp
stos
fdivr
or
movb
jno
test
out
dec
rcll
sub
out
mov
enter
sub
fstl
cmpsb
cmpsb
inc
xor
jle
sti
dec
repnz
mov
leave
and
lret
push
dec
dec
cs
test
mov
xor
jno
adc
xchg
je
pop
repnz
in
test
faddl
repnz
mov
out
push
lock
dec
cmp
fldt
js
cltd
addr16
int3
leave
out
mov
dec
cwtl
push
jo
fcoms
ja
sbb
movsl
add
sbb
std
jae
gs
jbe
mov
scas
pop
cmp
insb
fdivrp
sub
fld
and
shlb
into
pop
in
xchg
call
mov
inc
out
adc
fdivrl
out
mov
sbb
push
or
push
sub
dec
and
or
stc
jnp
mov
dec
mov
sahf
out
es
imul
sub
sbb
dec
clc
cltd
sbb
mov
jge
lahf
in
frstor
jae
test
jne
mov
push
aam
insl
jbe
das
add
enter
out
insb
shrl
mov
fs
cltd
push
sub
in
mov
orb
mov
sub
xchg
sbb
jmp
andb
inc
icebp
and
xlat
fisubrs
cmc
dec
int
lahf
scas
lcall
jg
repnz
add
add
pop
xchg
sub
fucomi
scas
adc
sbb
push
das
lret
daa
ja
shrb
fsubl
sub
jnp
sbb
out
cli
push
movb
cmp
xchg
and
insb
mov
adc
cmp
push
jl
add
je
dec
ss
test
std
pusha
pop
adc
push
or
mov
ret
or
sub
test
testl
aad
cmc
mov
fdivrs
into
cmpsl
fxam
push
outsl
cwtl
fisttpll
in
adc
in
sub
repnz
lahf
daa
and
pusha
dec
imul
lods
pop
into
addr16
cmpsb
orb
daa
mov
sbb
cmp
sbb
sub
push
popa
mov
xor
lret
addl
stos
loope
add
xor
xchg
add
add
in
rcrb
test
mov
jo
xchg
adc
cli
xchg
ret
xor
sub
mov
mov
and
icebp
push
sti
cmpl
gs
mov
lret
leave
rcr
repnz
pop
pop
les
sub
mov
mov
lret
mov
mov
mov
sbb
adc
add
jo
lret
jne
mov
mov
cmc
sub
je
add
inc
popa
fisttpl
in
rcll
fwait
cmpsb
imul
or
loope
lds
jge
xchg
jp
in
movsb
or
cmp
mov
test
fiaddl
sahf
enter
sub
cmp
mov
lods
or
add
repz
call
les
xchg
inc
stos
mov
hlt
inc
mov
in
mov
scas
xor
jecxz
push
xchg
cld
in
pop
or
pushf
lret
out
mov
mov
das
jo
adc
in
mov
inc
cmp
notl
daa
xor
add
stc
call
and
push
int
aas
loopne
jmp
jmp
imul
add
mov
cmc
ret
ds
test
push
outsb
adc
sub
pop
xor
push
mov
xor
nop
test
stos
mov
jbe
pushl
lods
pop
sbb
aaa
push
adc
stos
sbb
pushl
hlt
shll
jmp
mov
in
ret
mov
pop
mov
cmp
or
lret
mov
xchg
jecxz
xchg
mov
pushf
out
sti
fcoms
add
js
enter
mul
sbb
jbe
sub
or
xor
push
sbb
jmp
and
in
addl
jo
loope
inc
jne
cmp
pop
std
fucomp
pop
add
inc
or
fadds
fldcw
push
repz
mov
fsubs
lods
mov
scas
jecxz
jge
sti
dec
je
cs
pop
cwtl
xchg
xor
rorb
cmc
sbb
idiv
xor
stc
push
inc
imul
jmp
adc
pop
push
jp
xor
adc
lea
mov
sbb
dec
addl
mov
mov
aaa
xor
mov
sub
cmp
addb
mov
xor
and
add
xor
nopl
push
pusha
and
dec
push
or
add
cs
daa
es
pushf
movsb
movsb
mov
add
faddl
sub
push
push
loope
ss
pop
or
mov
les
jge
mov
xchg
push
lods
and
cmp
lahf
movsl
xor
movsl
imul
jae
jnp
hlt
sti
jmp
pop
xchg
pop
sbb
add
push
mov
jbe
addr16
aad
push
adc
cld
add
inc
in
jmp
dec
dec
jmp
xchg
add
cmp
xor
jne
or
and
sbb
mov
adc
in
mov
iret
push
ds
nop
cld
sub
jnp
mov
adc
push
adc
fsubrs
jecxz
orl
ret
mov
loop
je
repz
insl
divb
or
in
shl
or
lock
dec
mov
out
lock
lret
pop
pop
mov
or
pop
sub
mov
add
icebp
and
loop
xchg
push
fistps
push
sub
les
daa
rolb
jae
int
dec
xchg
sbb
xor
addr16
sbb
sub
fiadds
ds
and
xor
pop
push
test
repz
fistpll
arpl
cmp
jecxz
stos
das
sar
aad
adc
in
cwtl
enter
mov
jl
mov
push
mov
into
addr16
add
dec
jecxz
add
add
cmpsb
mov
or
adc
loop
push
add
add
bound
or
xor
pop
shl
xchg
pop
inc
jmp
std
int3
jnp
neg
xlat
mov
inc
jbe
orl
pop
adc
sbb
test
and
push
and
nop
lea
fldl
mov
iret
mov
inc
lahf
mov
test
mov
and
fwait
push
inc
mov
mov
aam
sahf
movsb
xor
icebp
fisubs
test
out
lock
cmp
imul
cmp
fs
popa
pop
jae
sbb
scas
rclb
mov
mov
mov
fs
pop
cmp
xlat
sbb
loopne
pop
ja
jle
cmp
shrl
inc
fs
movsl
in
mov
inc
inc
sahf
jge
out
mov
shr
push
jge
shll
jge
inc
and
or
out
mov
stc
lcall
rclb
imul
outsl
pop
push
cltd
adc
adc
clc
mov
pop
das
ja
in
cmpsl
add
xadd
mov
or
mov
sub
pusha
ret
ficoms
out
sbb
pop
fsts
es
pop
js
add
shrb
push
inc
adc
mov
out
fisubrs
pusha
adc
inc
fimuls
rclb
mov
sub
call
aad
ret
ja
jg
out
mov
inc
test
pop
mov
movb
mov
jbe
lods
inc
movsb
ret
test
dec
cli
insl
lret
adc
jbe
xchg
data16
iret
dec
fisubs
lcall
cmp
push
iret
inc
xor
pop
clc
or
rorl
mov
xor
out
sbb
xchg
xchg
gs
inc
sbb
loop
cmp
das
xchg
adc
or
cld
out
scas
je
dec
mov
push
jle
in
pop
sbb
sub
inc
or
push
subl
dec
scas
ja
push
out
jl
push
sub
xchg
mov
dec
popa
rcrb
pusha
js
sbb
sub
rclb
xor
or
std
lahf
xchg
cmp
cmpsb
jp
jl
cmc
xchg
sbb
ljmp
ret
and
sub
inc
push
aas
mov
and
mov
adc
call
js
shlb
daa
mov
outsb
inc
aas
inc
xchg
xchg
ss
jg
mov
pop
and
gs
ss
jmp
rol
movsl
jbe
shlb
pop
popa
sub
or
and
jbe
add
out
push
sti
cmpsb
or
mov
cmp
mov
test
jne
dec
dec
pop
loopne
rclb
pop
mov
or
or
clc
arpl
xchg
scas
cltd
adc
and
bound
popa
inc
inc
push
fisubs
cmp
jne
fcoml
inc
imul
jnp
fildl
pop
or
lock
imul
cmp
lods
mov
int3
inc
or
cmp
repz
pop
inc
or
or
outsl
push
cmpsw
jecxz
lahf
lcall
mov
xchg
shll
mov
jae
xchg
pop
sbb
xchg
dec
sti
sub
xor
test
mov
add
pop
xchg
jbe
adc
push
xchg
push
jg
or
mov
inc
repnz
push
inc
imul
push
mov
movsb
mov
cmpsl
inc
and
or
or
sub
cltd
xchg
jl
mov
xchg
push
dec
sub
icebp
and
imul
mov
xchg
iret
or
xchg
push
cld
in
mov
pop
mov
les
dec
cmp
movsl
push
xor
aaa
xor
sub
xor
jecxz
fcoms
jae
cmp
mov
pushf
pop
add
jbe
mov
dec
or
jecxz
cmpsb
push
cmp
xor
push
xchg
sti
cmp
cld
mov
notb
lahf
xor
mov
jge
bnd
sbb
inc
jo
repz
mov
test
mov
pop
stos
push
ret
mov
xchg
fsubrs
mov
nop
leave
dec
pop
andb
cmpsl
push
pop
mov
ss
loopne
out
jl
add
pop
das
pop
xchg
xchg
outsl
xor
mov
sbb
adcl
inc
ja
mov
push
adc
mov
repz
das
sbbl
and
push
dec
mov
sbb
cmpsb
in
ds
sti
lods
cmpsb
or
add
mov
rcll
scas
nop
int3
test
test
push
sbb
je
movsl
cli
mov
sub
gs
xor
inc
lods
es
dec
pop
je
mov
test
rcll
xchg
ljmp
mov
cmp
ss
sub
dec
ja
jno
ds
dec
xchg
jg
enter
mov
push
sub
in
test
jne
jo
mov
jae
and
ret
mov
enter
jb
and
adc
iret
sub
mov
lahf
mov
sub
popf
jle
loope
testl
out
ljmp
push
mov
loope
clc
xchg
mov
and
scas
cltd
sub
lcall
mov
or
adc
inc
adc
inc
daa
dec
mov
jmp
mov
mov
out
mov
js
mov
mov
pop
xor
inc
jnp
add
lea
mov
js
arpl
add
scas
bnd
or
and
ss
add
inc
mov
outsl
pop
notb
add
aas
std
cmc
lock
das
inc
xchg
int
xor
sub
hlt
dec
push
loope
push
add
pop
mov
gs
out
ss
in
dec
jns
push
xor
xor
loopne
mov
dec
jge
int
inc
iret
mov
adc
jl
mov
call
dec
inc
in
pop
cmpsb
aad
test
shll
ljmp
push
out
mov
jmp
xchg
xchg
cmp
jb
add
andb
jae
mov
inc
aas
dec
xchg
orl
divb
loope
test
pop
mov
push
mov
fdivl
je
das
jmp
lds
insl
imul
mov
mov
cmp
in
jno
xchg
testb
mov
ret
jle
xorw
adcl
mov
outsb
movsl
shl
test
jb
lock
divb
adc
jbe
dec
pop
pop
nop
outsl
lcall
or
cmp
pop
popl
pop
mov
add
add
cmpsl
or
push
js
xor
outsl
cli
jae
jae
push
push
add
pop
dec
jmp
xor
mov
inc
imul
mov
and
and
cmp
fiaddl
mov
jae
stos
jbe
mov
leave
repnz
adc
jg
outsl
push
in
or
or
cmpsl
mov
fidivl
mov
inc
adc
aaa
mov
ret
dec
insl
push
test
and
incl
daa
xor
and
out
hlt
xchg
adc
adc
into
dec
mov
push
mov
inc
fcmove
jge
loop
xacquire
jnp
push
push
arpl
call
repnz
xor
dec
out
mov
xor
aam
sahf
daa
xchg
scas
push
pop
cli
stc
popa
xor
xchg
scas
imul
push
fsts
faddl
jo
xor
loop
mov
jl
push
mov
out
hlt
out
clc
and
popa
roll
xor
subl
test
rcl
xchg
shrl
jns
jns
sub
test
fs
repnz
clc
ja
mov
cmp
jae
adc
xchg
dec
xchg
jno
imul
ret
push
mov
cmc
jg
jae
jle
cmpl
js
jns
jnp
mov
jo
pushf
mov
mov
pop
cltd
jae
repnz
xor
mov
jl
ljmp
orb
dec
mov
ds
addr16
inc
pop
jp
push
movsb
push
stc
sahf
sub
lds
pop
add
pop
repnz
lret
loop
cmp
jae
jno
pushf
mov
rcll
mov
subl
dec
xchg
test
mov
mov
jno
pop
popf
push
adc
or
int
mov
aam
jne
dec
mov
pop
dec
push
lock
xchg
stos
sbb
sub
xchg
or
mov
xor
xchg
xor
inc
and
jmp
ret
sub
push
rcl
popf
add
mov
push
rclb
loope
sbb
gs
lret
pop
pusha
fidivrl
xor
mov
sub
adc
pop
mov
push
sub
pop
mov
jle
aam
inc
mov
and
mov
jmp
add
xchg
push
xchg
and
jb
push
jne
ret
movsb
xor
stos
loopne
addr16
daa
mov
lret
push
push
mov
test
inc
mov
sub
pop
lods
sub
inc
and
jae
pop
lret
push
push
bound
push
pop
sbb
or
repnz
cltd
bound
iret
sub
or
xor
xchg
push
stc
stc
movb
cmp
test
test
push
hlt
ret
insb
adc
rcl
fnsave
in
cmp
clc
fnstsw
jl
fwait
push
sub
mov
addr16
and
xchg
xchg
lock
popa
sahf
or
and
pop
pop
lret
cmp
pushl
xor
jecxz
add
cltd
xchg
mov
aas
scas
cwtl
imul
inc
fistpl
call
pop
jg
dec
subl
xchg
cmp
shll
popf
cmpb
jne
test
xor
sub
test
dec
bound
lahf
xor
testb
inc
or
ret
sbb
sbb
bound
pop
xchg
pushf
push
add
rclb
in
push
addr16
lea
pop
mov
pop
xchg
inc
fsubrl
popa
out
test
popa
mov
jg
sbb
shr
and
outsb
mov
roll
fwait
push
mov
jl
mov
or
mov
mov
addr16
sub
dec
cmpsl
in
stos
lret
loopne
inc
xlat
jae
pop
inc
icebp
popf
xor
popa
pushl
test
ds
adc
adc
in
xchg
cmp
mov
dec
sti
pop
fstps
outsl
ljmp
cmpsb
add
imul
push
push
mov
iret
or
popa
outsb
jb
sub
sub
dec
push
lods
xchg
jecxz
pop
mov
in
push
out
out
lods
xchg
pop
cmp
enter
cmp
dec
movsb
cli
push
leave
xchg
mov
rcrl
push
and
or
outsl
add
fimull
mov
repnz
sub
rcll
mov
dec
and
and
ds
fidivrl
jmp
cmpsb
lahf
sub
repnz
cmp
sti
mov
pop
lahf
cmp
mov
sbb
xor
mov
inc
cli
sub
jecxz
mov
enter
inc
pop
pop
mov
es
outsl
fdivr
loope
std
imul
or
mov
aad
push
mov
out
inc
subb
xchg
test
or
jbe
jl
out
mov
lcall
or
mov
lret
lcall
cmpsl
popf
inc
enter
mov
xor
shlb
jo
fucomp
jle
dec
enter
dec
ljmp
and
mov
test
and
pop
fdivr
clc
push
rolb
jae
sub
xor
orl
jg
and
cltd
insb
adc
xchg
jl
clc
xchg
or
test
push
cld
or
dec
sti
add
push
xchg
enter
fstpt
and
sbb
pop
push
stos
mov
lahf
add
inc
jbe
pop
test
xchg
cld
bound
xchg
stc
inc
repnz
push
jecxz
bound
xor
sbb
vrcpss
dec
cmc
or
mov
inc
ljmp
push
loop
fstpl
xorb
in
lret
mov
rorb
pop
adc
inc
xor
outsl
sub
lcall
rcrb
lahf
icebp
movsl
ror
inc
sub
push
inc
xchg
dec
mov
cmp
lret
or
xor
or
outsb
insl
daa
mov
cmp
xlat
loopne
cli
fdivp
addb
addb
xor
push
push
dec
scas
hlt
or
and
lods
or
adc
lock
push
cmc
mov
rclb
int3
sub
inc
addr16
lds
and
cmp
inc
pop
orb
pushf
mov
jle
mov
imul
lcall
push
repz
js
cmovo
lret
fcoml
adc
inc
ret
andb
out
mov
daa
pop
inc
add
hlt
cwtl
xlat
jl
sub
jo
or
data16
sub
push
dec
jg
pop
push
cmp
loop
addr16
or
push
mov
mov
sbb
int3
std
jmp
lock
pop
imul
loopne
inc
mov
mov
add
and
add
orl
cmp
jb
fwait
xor
push
cmc
mov
test
insb
fldcw
and
mov
imul
mov
lret
movsl
jp
or
sub
loop
mov
sub
sub
cmp
sbb
xorl
pop
and
imul
add
push
mov
push
je
out
and
push
imul
sbb
lods
enter
sub
push
push
arpl
dec
or
inc
clc
add
add
sub
pop
das
pop
inc
les
sbb
xchg
push
fucomi
ret
and
cltd
mov
mov
ljmp
movsb
scas
decl
fsub
pop
mov
lods
test
xor
jle
decb
mov
add
cs
sub
loopne
lret
dec
adc
cmp
xchg
std
mov
lret
add
mov
shlb
in
cmpsl
or
mov
add
and
fsubrl
pushf
mov
jecxz
cmc
movsb
dec
cmp
fcompl
daa
or
push
pushf
out
lcall
nop
mov
loopne
cmpsb
pusha
sbb
test
xchg
imul
add
xlat
enter
jmp
orb
or
ret
sbb
mov
mov
add
mov
add
and
fstpt
scas
add
dec
inc
sbb
in
add
iret
jno
lock
jns
stc
pop
int
fisubs
rcrl
loopne
or
aad
cltd
das
lret
sti
adc
mov
mov
xchg
mov
pop
mov
mov
jae
push
aaa
fucom
movsb
leave
or
ss
imul
xchg
mov
sub
in
stos
push
xor
mov
push
js
int3
and
sbb
pop
lret
cmc
jno
jmp
sbb
cmpsl
fstps
loopne,pt
lcall
push
imul
push
push
cmp
adc
rcrl
push
rcrb
sbb
adc
jge
and
scas
fdivrl
mov
push
sbb
cld
ja
adcl
aaa
mov
int3
xchg
xorl
xor
mov
and
sbb
sub
repz
fwait
cltd
xchg
inc
je
ret
push
xchg
je
adc
push
adc
fadd
lcall
ja
push
mov
leave
stc
add
mov
adc
out
clc
ljmp
jb
jnp
xchg
dec
jne
push
push
call
addb
stos
pop
jp
repz
push
sub
outsl
fisubs
out
mov
cltd
pop
insl
jne
sub
outsl
inc
adc
addr16
cmp
add
sbb
jmp
jmp
ss
adc
adc
mov
xor
in
popf
addl
shll
pop
inc
mov
xchg
or
imul
jo
dec
and
push
pop
adc
lods
lods
mov
push
xchg
adc
scas
cltd
das
or
sub
jnp
cmp
push
push
std
inc
xor
mov
das
out
push
ret
pusha
cltd
lcall
jne
pop
lahf
sub
sti
push
adc
or
outsl
jge
fs
and
rcrb
xor
sbb
mov
push
in
dec
shld
and
jmp
out
push
xchg
sub
push
aam
add
fistps
lods
stos
cli
in
in
push
push
xor
push
out
adc
cmc
inc
pop
ret
lock
mov
test
push
add
or
adc
mov
mov
dec
data16
enter
iret
imul
add
xchg
je
push
jno
mov
loop
std
iret
adc
sub
andl
dec
clc
cmp
aam
roll
insb
mov
pcmpeqb
cmc
add
xor
shrb
mov
xchg
pop
pusha
mov
jbe
mov
aas
lret
xchg
jmp
cs
out
mov
jno
cmc
mov
pop
jg
inc
outsl
mov
pop
lods
mov
add
or
cmp
fnstsw
jge
test
jg
popf
imul
or
xor
insb
jne
inc
shrb
roll
loopne
xchg
cld
cltd
and
mov
pusha
stos
jne
les
in
push
jge
sub
xlat
cmp
xchg
andl
data16
dec
add
jb
jnp
mov
xchg
je
push
mov
xor
xchg
push
push
xchg
aad
xchg
in
int3
xchg
mov
sbb
mov
xor
int3
or
fwait
bound
or
gs
jmp
aam
xchg
mov
cmpb
loope
pop
jns
jp
xchg
cwtl
mov
arpl
add
mov
ror
es
mov
int3
test
inc
jne
xor
jo
leave
sub
mov
cwtl
out
pop
xlat
fcom
mov
pop
sbb
add
aaa
push
xchg
iret
sbb
mov
test
cmp
in
scas
aaa
and
jp
addr16
sub
jno
fxch
push
adc
xor
maxps
or
jo
stc
push
add
mov
and
cmpsl
fwait
cmpsl
insl
jg
dec
mov
sub
insl
outsb
out
pop
cmpsb
add
scas
outsb
lcall
adc
outsb
mov
out
insl
dec
cmp
xor
dec
inc
xchg
ja
add
or
mov
ss
and
mov
mov
bound
scas
xor
cmpsl
push
and
rcrl
jae
cmpsb
dec
or
daa
xor
sbb
lea
lods
cmpl
cmp
mov
sbb
cmp
out
add
dec
ret
pop
es
rol
leave
pusha
les
mov
or
in
push
mov
ja
or
sbb
push
xor
js
inc
cmp
and
dec
cmpsl
xchg
fwait
dec
inc
jno
popf
cmp
jl
sub
push
xchg
out
nop
out
xorl
xor
jge
aas
call
jecxz
inc
dec
in
popf
stos
xchg
hlt
dec
jb
fs
cmp
mov
jne
or
ljmp
ljmp
or
test
mov
movsb
sub
cwtl
mov
add
mov
test
lods
jle
sbb
dec
cmpsl
test
bound
cmpsl
or
hlt
dec
and
mov
mov
sahf
jle
test
stc
jg
xor
sbb
movsl
aaa
jge
mov
cmp
pop
pop
call
mov
inc
jp
add
mov
rcr
in
push
daa
or
mov
sahf
sbb
xchg
mov
jbe
and
mov
add
mov
inc
dec
fwait
mov
test
mov
rorb
std
add
into
test
aad
flds
jnp
les
or
ss
push
pushf
dec
mov
int3
mov
daa
xor
stc
stos
scas
sub
subb
ds
or
nop
push
pop
das
pop
and
sub
xor
divb
into
sbb
or
movsl
and
je
dec
cmpsb
shr
mov
popf
mul
pop
mov
je
sarb
pop
fs
pop
ret
sub
push
and
pop
pop
fisttpl
nop
cmp
into
cmp
mov
pop
jmp
fcompl
popf
pusha
mov
adc
popa
mov
scas
xchg
inc
dec
cmpsl
mov
mov
nop
mov
js
dec
adc
sbb
outsb
lahf
loop
stos
lods
aas
into
mov
ljmp
or
adc
mov
aas
bound
sub
sub
jnp
jl
aam
xor
xor
add
sahf
pop
sub
or
push
aas
dec
push
mov
iret
int
movsl
mov
cmc
shl
stos
inc
outsl
cwtl
pop
sarl
ret
push
jo
clc
outsl
mov
sbb
push
ljmp
into
pop
push
arpl
rcrl
lea
push
daa
pop
mov
out
dec
cmc
cmc
call
push
add
mov
stos
outsb
rclb
cmp
popa
addr16
or
dec
add
or
mov
sbb
pop
push
sbbl
xchg
xor
lahf
in
movsl
aas
mov
cmp
sub
adc
mov
cmp
cltd
add
mov
sbb
fcomi
mov
jns
mov
mov
cmc
pop
nop
movsb
mov
test
mov
decl
scas
in
and
leave
sub
xor
cltd
add
mov
dec
xchg
dec
lea
inc
mov
or
ljmp
sar
cmc
arpl
andb
lret
xchg
mov
bound
ss
dec
lea
inc
jecxz
repnz
ljmp
dec
mov
mov
inc
mov
in
push
shr
mov
fmull
and
inc
out
cs
sbb
pop
in
iret
in
and
dec
mov
cltd
imul
lods
test
inc
add
movsl
test
push
stos
or
jne
adc
lock
imul
pop
sarb
mulb
imull
xchg
dec
and
icebp
xchg
pop
sbb
ss
dec
mov
mov
rep
fisubrl
out
jle
pop
hlt
stc
or
cmp
lea
les
xchg
js
xchg
jp
adc
jg
mov
sbb
mov
out
das
cld
fs
outsl
pop
ret
jb
or
aas
add
add
sbb
lock
repnz
pusha
add
adc
xchg
mov
nop
inc
mov
mov
cmpsb
fwait
jl
std
adc
iret
test
testl
ret
shll
test
dec
movsb
push
lods
jnp
test
xchg
scas
mov
inc
sbb
out
push
mov
push
cs
inc
sbb
mov
les
xchg
paddusw
int3
arpl
icebp
cmp
add
test
rol
pop
mov
mov
sub
cmp
cwtl
cmp
inc
sti
adc
cmp
test
mov
lods
add
jnp
cmp
mov
add
or
shr
jle
push
adcb
mov
and
jp
int3
lods
cltd
fisubl
xor
cmc
xchg
mov
lea
push
loopne
lods
cwtl
iret
loope
jns
mov
mov
sbb
adc
fldt
jl
sbbl
ljmp
sbb
psllq
loop
cli
adc
cmpsb
subl
mov
xor
imul
stc
clc
mov
mov
xchg
notl
cmp
dec
xchg
mov
inc
hlt
mov
jns
push
push
clc
or
imul
shlb
enter
ljmp
xor
add
test
mov
testb
in
shr
pop
xor
and
sub
dec
or
call
out
and
and
xorl
popf
and
or
insl
mov
sbb
cmp
cmc
mov
clc
sub
je
stc
cwtl
aam
sub
jecxz
jne
cwtl
mov
mov
xchg
inc
out
mov
xchg
call
inc
rorb
add
sub
ja
mov
push
pusha
mov
add
in
jnp
lods
dec
popa
in
adc
insb
adc
push
test
imul
outsl
shr
stos
push
out
mov
or
imul
pop
jecxz
xchg
scas
pop
pop
and
in
les
hlt
cmpsb
jnp
pop
inc
out
pop
cld
pop
push
push
push
mov
xchg
cmp
pop
add
shrb
daa
sub
test
imulb
dec
jecxz
push
fcomip
mov
cmpb
dec
inc
dec
outsb
ret
push
test
aam
or
lock
xchg
xchg
cmpsb
or
or
sbb
adc
inc
insl
daa
jle
fwait
pop
test
or
notb
adc
mov
mov
sub
lods
mov
into
sub
sbb
call
sub
cwtl
xor
mov
pusha
sbb
inc
push
inc
in
dec
jne
or
ret
push
aad
fisubrl
add
lahf
fistpl
stos
or
push
hlt
sub
mov
leave
outsl
int
lahf
cmp
dec
push
sub
stos
xor
push
and
xor
fimuls
jmp
imul
jo
cmpsl
or
jno
mov
test
adc
mov
jno
mov
pop
aas
add
aaa
jp
aam
fstl
inc
jmp
dec
mov
lcall
dec
xchg
jmp
ja
xchg
jo
cs
out
push
fs
push
lods
xor
outsb
lea
sbb
xchg
adc
call
xor
mov
nop
sub
push
xor
sbb
leave
adc
enter
mov
xor
mov
push
push
cld
xor
out
xchg
jecxz
dec
dec
dec
shl
inc
loopne
loope
cmc
dec
ljmp
hlt
cwtl
test
jl
mov
mov
adc
mov
mov
or
add
sahf
enter
aaa
lea
stos
in
xor
add
jle
dec
or
push
sub
pop
and
call
out
stc
sbb
test
outsl
jnp
mov
push
adc
icebp
mov
push
inc
loop
xchg
int3
fildll
push
xor
fwait
test
rclb
mov
scas
and
pusha
fnsave
cltd
jmp
mov
lea
push
pop
sub
add
lds
and
stos
adc
loope
add
push
aaa
dec
insl
addr16
push
jbe
pop
pop
fstp
mov
and
mov
lea
outsb
repz
xchg
dec
or
and
das
out
xchg
mov
or
dec
repz
jno
repnz
mov
jb
fst
xlat
loopne
test
cld
sub
add
cltd
mov
cld
lcall
adc
bound
out
bound
dec
jbe
and
repz
push
addr16
jbe
jns
and
adc
sub
stos
sub
inc
sub
cmp
insb
mov
lds
imul
push
leave
cmp
mov
mov
out
icebp
fsts
adc
push
movsb
insl
sbb
mov
lods
cmp
xchg
loop
mov
sub
sarb
rcrb
ret
mov
sbb
mov
adc
sub
mov
jo
xor
push
fs
fisubl
sbbl
mov
push
jp
pop
addb
mov
dec
push
movsb
cmp
aad
push
jb
es
xchg
hlt
int3
into
movsb
pop
mov
mov
xchg
dec
mov
add
mov
add
repnz
pop
xchg
mov
push
aam
shr
dec
fs
popa
lret
xchg
gs
add
pop
xchg
inc
add
notb
test
sub
mov
stos
out
cmp
mov
enter
test
pop
addr16
data16
insb
pop
das
or
mov
adc
jg
cmp
xor
xchg
or
stc
fwait
mov
mov
stos
push
dec
in
addr16
or
jg
sub
lcall
stc
cltd
fwait
sub
in
repnz
push
mov
cmp
scas
jno
pushf
push
inc
enter
xchg
add
xchg
scas
and
pop
popf
andb
mov
dec
fcompl
sbb
aad
adc
bound
es
pop
mov
mov
jno
lea
jne
sub
das
cmc
daa
jg
adc
sbb
push
adc
test
iret
shlb
jo
adc
les
gs
neg
cld
add
cmpsb
fidivl
test
leave
push
fnstenv
or
cmp
call
mov
rcl
divl
jle
cs
mov
outsb
scas
cmpb
push
mov
jge
jo
inc
cmp
rcl
shl
xor
xor
or
aam
sbb
mov
out
sbb
cmpl
jmp
xchg
sti
es
push
pushf
out
test
xor
inc
push
rcr
sahf
ficompl
and
mov
push
mov
test
in
add
mov
push
cmp
pop
sahf
push
mov
enter
xlat
mov
mov
cmpsl
sbb
xchg
pushf
jae
add
loopne
sarl
and
loopne
sbbb
loope
inc
cmp
dec
mov
dec
mov
ja
push
stos
sbb
jge
dec
push
int3
add
lods
xor
fwait
cmp
iret
mov
pop
dec
orl
fsincos
pop
in
enter
in
divl
fwait
popa
outsb
xchg
lret
sahf
stos
and
dec
push
pop
or
fdivrs
rol
cli
fdivrl
lods
imul
decb
xchg
in
pop
jns
mov
jb
xchg
xchg
mov
frstpm(287
mov
loope
jns
cld
adc
push
nop
popf
mov
mov
mov
mov
sub
sub
add
iret
test
lods
xor
push
jo
inc
outsl
es
mov
nop
adc
je
sbb
sub
data16
jnp
sbb
xchg
fildl
inc
mov
pop
sbb
popl
test
dec
xchg
xor
cmp
aaa
cmpxchg
lahf
or
adc
add
xlat
cmp
add
add
in
sbb
add
and
dec
pop
out
shrb
jmp
gs
push
fimull
lock
ja
cmp
js
into
jle
inc
adc
dec
cwtl
es
mov
mov
addl
xchg
pop
inc
or
out
mov
hlt
ds
dec
push
jge
fmulp
sbb
inc
cwtl
test
ljmp
aaa
sub
jmp
mov
loop
mov
sbb
fdivrs
inc
mov
dec
insl
pop
lods
imul
cmp
sub
push
imul
in
push
mov
xchg
sarl
xlat
movsb
sbb
or
add
ss
enter
bound
jo
sub
mov
cmp
jge
les
sbb
mov
jo
xchg
data16
lds
mov
xor
sub
enter
icebp
xor
les
imul
fistpl
les
cltd
cmp
jp
fs
xor
inc
loop
stos
sbb
dec
xchg
imull
fs
and
fmul
lods
fildl
mov
call
xor
sub
gs
add
ja
and
out
or
push
inc
stos
mov
push
jecxz
mov
mov
push
mov
leave
add
adc
dec
das
fists
jns
push
add
jmp
pop
das
in
pop
scas
jle
test
rcrb
pop
movsb
cld
lret
adc
sbb
aas
and
sarb
pop
fs
insl
out
mov
ret
pop
dec
sbb
movsb
repz
adc
sbb
xor
xchg
pop
mov
mov
sub
and
push
and
ret
jns
inc
xchg
fdivrs
push
aad
cli
xor
mov
repnz
mov
cltd
arpl
rclb
push
jecxz
jbe
add
dec
stos
pop
mov
mov
dec
negl
cmpsb
mov
lret
testl
push
xor
idivl
mov
out
push
and
imul
daa
xor
data16
jle
mov
repnz
pop
inc
push
test
enter
sbb
stos
rorl
test
xor
dec
and
mov
sub
pusha
and
fisttps
incb
sbb
xchg
icebp
les
jmp
push
inc
jbe
inc
cltd
jb
pop
insl
and
push
sarl
xor
je
enter
mov
adc
mov
leave
fnsave
mov
adc
cld
outsl
mov
adc
sub
mov
sub
adc
gs
pop
test
sbb
inc
loopne
les
das
fildl
inc
cmp
xchg
mov
xor
rcrb
jle
mov
sti
clc
fcoms
inc
in
popa
loop
pusha
fbstp
cmp
aas
pop
aam
pop
jmp
stc
mov
mov
xchg
pusha
inc
test
push
sub
fstpl
cmpsl
cld
dec
addr16
pushf
adc
divl
mov
cmp
push
sti
dec
add
cwtl
outsl
and
mull
sar
xor
mov
pop
std
jmp
ljmp
iret
aas
push
outsb
leave
inc
sti
outsb
insl
sahf
ret
and
frstor
mov
iret
lcall
pop
sahf
adc
pop
fmul
addr16
fs
popf
data16
popf
icebp
movsb
jmp
aas
push
xor
in
test
push
sub
call
sub
cmp
in
sar
cmp
imul
push
push
scas
sahf
mov
inc
sbb
lret
fwait
stc
pusha
cld
or
push
inc
mov
add
xchg
jmp
sbb
data16
mov
dec
iret
lret
cmc
in
mov
ljmp
clc
test
cwtl
adc
push
ret
jp
mov
add
mov
push
xorl
pop
mov
dec
pop
mov
faddp
mov
jb
xchg
sub
lock
pop
outsb
jne
popf
pop
dec
xor
call
and
mov
mov
sub
push
jle
xchg
cmp
sub
mov
pop
test
adc
jmp
inc
in
jmp
push
dec
pop
push
jno
pop
mov
or
mov
iret
dec
sbb
add
xor
adc
jne
bound
dec
xor
pop
loop
es
lret
ret
clc
gs
adc
cld
sarl
sbb
push
jmp
aad
out
sbb
push
loop
ficomps
sub
xor
mov
fidivrl
mov
mov
cmp
ror
data16
test
jbe
bound
aaa
cmp
into
or
or
or
pop
push
xchg
das
add
mov
popa
or
dec
sbb
mov
loope
xchg
jb
jnp
outsl
cwtl
loop
or
jmpw
sub
stos
icebp
mov
or
rorl
mov
push
mov
pop
mov
cmpsl
rclb
xor
arpl
shl
lock
dec
fistps
idivl
jmp
lds
je
xchg
push
test
xor
mov
add
xchg
xlat
repz
stc
lea
add
sarb
cmp
inc
adc
sub
add
pushf
or
not
push
inc
push
adc
outsl
idivb
jmp
in
cmp
test
clc
cmpb
jl
lahf
pushw
in
enter
pusha
jl
xor
ja
dec
dec
int
or
pop
in
arpl
adc
outsl
ficoml
adc
jg
adc
dec
invd
loopne
les
into
and
movsl
mov
mov
test
ja
and
and
nop
jge
sbb
sbb
sarb
cmc
cmp
lods
dec
mov
daa
sub
imul
sub
mov
or
add
in
dec
inc
cs
fsub
add
jge
cltd
insb
popa
fdivrl
test
push
push
jno
sub
cmpb
pop
jle
lea
fstpt
inc
inc
pushf
out
rolb
sbb
decb
rorl
fnsave
fwait
pop
aam
cmpsb
hlt
roll
mov
sub
mov
fidivl
imul
push
shrb
cltd
cmpsl
sub
or
lock
std
sbb
loopne
xchg
push
cmp
jle
adc
xchg
dec
pop
jecxz
and
cld
test
mov
jmp
imul
shl
je
xchg
in
sbb
out
fcomps
testl
into
out
push
int3
mov
push
mov
je
or
repnz
lea
pop
sub
xor
int
in
outsl
insb
scas
hlt
push
rorl
loop,pt
sbb
mov
loopne
pop
ss
aas
mov
mov
int3
mov
setne
dec
mov
rclb
lcall
sbb
dec
mov
xor
adc
jnp
inc
jae
aaa
notl
mov
aas
fisttpll
in
dec
arpl
test
dec
pop
jnp
dec
out
mov
addl
jge
mov
xchg
test
pop
testb
mov
cld
xchg
inc
aam
adc
jnp
cmp
xlat
into
arpl
lret
mov
popa
push
jp
daa
test
shrl
and
mov
jno
xchg
call
fs
mov
mov
shll
dec
inc
int
add
xor
ljmp
cwtl
repz
aam
mov
jle
pop
rol
orl
xchg
idiv
ljmp
pop
int3
cmp
repnz
mov
in
scas
fisubrs
xchg
movsl
push
loop
andb
arpl
mov
imul
jle
scas
rolb
outsl
adc
shll
nop
ds
dec
adc
pop
nop
lret
and
and
adc
repnz
push
loopne
adc
pusha
or
test
rclb
cmp
in
add
or
icebp
jb
sbb
int3
dec
sub
xchg
ss
int
testb
repnz
mov
loope
adc
xchg
jmp
fwait
xchg
or
stc
inc
ret
push
pop
inc
cmp
test
adc
cmpsb
mov
adc
and
mov
and
dec
lcall
sar
mov
jbe
iret
mov
iret
dec
push
aas
jo
es
xor
jle
cmp
rcl
mov
loope
push
repnz
out
mov
std
stos
jle
lahf
dec
sahf
pop
mov
sbb
addb
mov
test
mov
lret
andl
imul
jp
xacquire
int3
pop
and
xchg
xor
pop
stos
push
popf
mov
jg
cmpsb
cltd
add
icebp
mov
jg
call
push
outsb
je
cmp
push
loop
cmp
movsl
mov
xchg
repz
cmp
sub
mov
out
mov
outsb
scas
fs
sbb
mov
outsb
stos
cwtl
cmpsb
xchg
adc
cmp
jnp
or
lahf
cmp
sbb
sbb
cmp
mov
daa
ret
mov
xor
jg
bound
and
shll
mov
cmp
ss
test
out
inc
mov
or
pop
and
xor
loopne
and
leave
cmp
idivb
xlat
push
into
aaa
cmp
ss
add
dec
pop
out
into
es
adc
insl
dec
and
or
decl
add
push
and
add
movsb
xlat
pop
xchg
sarb
movb
iret
ror
inc
cmpsb
sub
pusha
or
repz
jnp
sub
pop
mov
cwtl
add
test
ja
daa
lahf
and
and
pop
incl
mov
mov
ret
mov
inc
lahf
push
jo
sub
adc
xchg
andl
or
aam
into
push
jp
outsl
sbb
jg
or
sub
sbb
push
mov
adc
pop
sbb
js
cltd
and
xor
inc
je
repz
das
push
out
outsb
pop
in
scas
inc
lcall
cmp
sub
out
loop
aas
sbb
or
fsubrs
or
xchg
ret
sbbb
stc
scas
xor
test
ficoms
jne
repnz
imulb
sub
push
lea
sbb
rolb
push
mov
iret
ficompl
mov
sub
or
fadds
orl
push
shrb
mov
dec
sbb
adc
mov
jns
divl
mov
jg
pop
jp
je
ret
push
lahf
cmp
pop
mov
or
cmp
jge
scas
xlat
sarb
push
cs
mov
out
or
lret
pushf
adc
mov
sbb
mov
movsl
movsb
inc
rol
mov
xchg
inc
fcomps
jmp
pop
sar
fcmovbe
mov
das
les
mov
fnsave
jl
push
adc
sbbb
addr16
insl
out
insl
mov
mov
mov
or
xor
imul
ret
mov
xor
cld
xchg
aad
arpl
scas
adc
mov
adc
dec
sbb
xchg
imul
imul
in
ljmp
jb
xor
sub
arpl
xor
inc
jmp
push
lock
popf
nop
clc
pusha
sub
mov
test
out
or
scas
lods
addl
add
ljmp
mov
sub
mov
std
icebp
lea
popf
mov
and
or
addr16
pop
mov
add
mov
fisubs
jg
jno,pn
push
adc
mov
mov
fsubrp
xchg
lea
ret
fildll
mov
adc
pop
ja
lock
and
jp
sub
movsb
xor
jns
je
out
in
cmp
sub
rcrl
fcomps
pop
in
add
lret
push
sub
sbb
sub
fsubrl
xlat
mov
imul
sti
sub
push
sbb
jae
lret
mov
mov
pop
cmc
pop
push
mov
je
stc
inc
mov
adc
push
add
pop
sub
cmp
lcall
mov
stos
pop
retw
or
xchg
jns
cmpsb
test
xchg
nop
dec
ljmp
lahf
push
scas
rolb
mov
in
mov
pop
push
jbe
insl
add
sbb
or
sub
nop
push
push
fstl
jo
stos
cs
push
xor
iret
rorb
cmp
fs
or
push
push
mov
push
aaa
push
mov
adc
leave
pop
jmp
mov
cmc
sarb
xchg
xor
and
dec
enter
gs
aas
leave
out
das
inc
sti
es
popf
sub
cltd
int
push
in
mov
or
sub
ljmp
repz
out
lods
and
xchg
or
hlt
push
jnp
sahf
xor
pop
and
mov
pop
insl
sti
pusha
leave
into
add
les
lods
pusha
push
out
sahf
scas
xor
cmp
js
sub
pop
adc
adc
sti
xor
in
dec
xchg
push
jo
cld
pop
mov
into
test
xor
adc
pop
mov
add
jns
jg
cmp
push
or
gs
andl
les
or
lods
add
pop
lcall
or
std
inc
pop
sub
rcrb
cmc
mov
mov
ja
nop
mov
xor
sbb
jecxz
push
popa
sbb
or
repnz
pop
or
cmp
sub
loop
je
mov
add
adc
xor
mov
bound
scas
add
aad
jecxz
sub
ds
scas
jp
pop
mov
rolb
sub
inc
out
pop
dec
pop
inc
ret
dec
xchg
cmp
xor
popa
dec
jne
xchg
or
sub
jecxz
in
notb
addr16
int
int
pop
dec
jecxz
jnp
mov
xchg
stos
and
xor
bound
adc
inc
push
fimuls
mov
and
cwtl
orl
xchg
aas
xchg
pop
jge
leave
fidivs
inc
test
flds
mov
incb
adc
decb
push
push
cmpsb
mov
mov
lcall
ds
fisubs
push
mov
inc
out
inc
mov
lods
loopne
lret
lahf
pop
popl
icebp
imul
adc
push
jle
popf
shrb
loop
add
arpl
shrl
inc
xchg
cmp
xchg
lahf
fwait
mov
rcrl
ja
mov
repz
mov
mov
jecxz
mulb
dec
push
bound
fildll
dec
outsb
sub
fdivrl
stos
push
add
mov
xchg
or
push
xchg
fisubl
mov
add
jnp
mov
push
ljmp
rcr
inc
daa
adc
lds
adc
and
cs
jno
test
aas
sbb
adc
mov
mov
stos
jo
adc
xor
stc
stos
cmp
add
ja
add
fiadds
mov
stc
sub
cwtl
leave
push
pop
or
fistl
fiaddl
mov
push
pop
rcr
xchg
fsincos
cmp
push
adc
sub
pop
xor
fs
int3
popl
mov
mov
test
loopne
and
jns
mov
add
pop
jge
inc
mov
iret
lret
shrb
fwait
and
imul
orl
outsb
add
adc
and
and
inc
xor
cmp
aaa
imul
into
popa
pop
mov
cld
popf
pop
jae
in
or
pop
test
mov
and
mov
mov
popw
shl
es
daa
xor
out
ficompl
out
test
adc
mov
jp
lock
push
enter
mov
imul
xchg
and
and
xchg
repnz
push
shlb
popf
adc
mov
pop
fldenv
stos
mov
cmp
movsl
cmp
cmp
cmpsl
sub
testl
mov
lret
pushf
inc
out
arpl
repnz
les
fisubrs
mov
into
into
pushf
call
sbb
and
sub
imulb
aas
pop
rcr
shll
aas
adc
ja
fistpl
adc
cmp
pop
enter
out
dec
loope
lds
push
xor
shr
ds
fimuls
movsb
jge
loopne,pn
test
sub
repnz
jne
fistl
push
movb
jle
es
xchg
mov
and
mov
enter
in
jmp
push
aam
clc
cld
jecxz
and
push
push
lret
fsub
and
in
xchg
arpl
mov
mov
loop
jns
jbe
pushf
lcall
dec
jge
call
aas
rclb
push
bnd
test
sbb
aam
inc
inc
lcall
sbb
and
out
loop
pop
pop
mov
cmpsb
jae
ss
out
loop
fsub
cmp
in
nop
mov
lods
jp
ja
fucompp
pop
mov
add
or
push
mov
cmpsb
int3
or
mov
les
xchg
pop
sbbl
clc
cmp
sbb
popf
popf
insb
mov
sbb
jmp
repz
pusha
xchg
push
mov
push
jmp
sub
int
cltd
xchg
inc
xor
push
mov
int
mov
ss
cmc
and
sub
bswap
mov
int3
outsb
or
out
std
push
mov
dec
push
pop
ret
xchg
mov
lds
add
adc
in
scas
pop
enter
fisubs
jbe
bswap
xor
or
pop
int
aas
dec
xchg
mov
addr16
dec
inc
pushf
dec
xor
adc
inc
loopne
jge
push
xchg
in
xlat
repz
stos
insb
ret
pushl
bound
test
push
push
aaa
cmpsl
mov
lahf
out
aad
cwtl
jno
mov
rcrl
dec
out
and
xor
jo
mov
aad
pop
jbe
mov
scas
push
add
or
add
inc
dec
repz
or
mov
jecxz
mov
xor
pop
pop
push
mov
push
inc
aaa
das
inc
mov
fildl
sahf
test
dec
adc
add
scas
jae
xchg
out
dec
push
iret
sti
xor
xchg
jp
xchg
into
outsl
jne
or
notb
jge
test
jp
mov
or
dec
cwtl
rclb
insl
pop
sbb
sbb
repz
or
jo
fcom
sbb
vpshaq
subl
es
adc
loop
stc
mov
sbb
iret
es
mov
flds
mov
adc
subl
call
dec
popa
ffreep
lods
adc
jecxz
sbb
test
lcall
pop
or
cmpsb
xor
jmp
insl
nop
imul
inc
push
daa
loopne
cmpsb
add
popa
add
add
js
loop
into
cmpsl
gs
inc
repnz
jge
fiaddl
mov
xor
test
dec
jl
loopne
mov
sub
inc
xchg
and
scas
lcallw
push
xchg
mov
adc
test
dec
or
sub
add
ficompl
add
or
mov
popf
test
movsb
jae
mov
push
or
ret
mov
das
mov
xor
jecxz
inc
cld
dec
jp
mov
mov
jmp
or
nop
mov
mov
sbb
es
sbb
adc
jecxz
call
aaa
arpl
fdivrs
xor
pop
and
outsb
bound
call
push
ret
push
jge
push
push
divb
jmp
inc
xchg
cmpsl
pop
sub
add
adc
add
out
jo
xchg
enter
fs
mov
out
xor
inc
mov
repnz
xor
pop
sbb
lods
jnp
xor
and
jl
and
jg
or
pop
rolb
rol
push
imul
js
or
lahf
xor
or
adc
mov
shrl
outsl
dec
orb
pop
fwait
cli
cmp
outsl
out
mov
add
ret
stc
ret
mov
pop
in
loope
dec
fadds
mov
jne
xor
mov
xchg
rcrl
push
sahf
mov
mov
pop
test
mov
cmp
inc
punpckhbw
lock
pop
mov
mov
adc
add
ja
and
icebp
popa
xor
cmp
rcll
cs
stos
push
sub
bound
imul
pop
mov
sbb
loope
add
push
loopne
xor
inc
pop
rolb
inc
shl
sbb
inc
stos
flds
lahf
aaa
mul
cmp
ror
cmp
cmp
clc
cwtl
shll
pop
test
adc
cltd
and
lock
out
push
divb
jnp
mov
mov
and
fdivs
dec
sahf
movsb
mov
adc
das
and
lret
pop
mov
mov
inc
rolb
add
out
push
push
push
mov
aaa
xor
inc
aaa
cmpl
repz
enter
les
in
mov
xlat
repnz
decb
jp
rcl
pop
sub
mov
jecxz
push
mov
add
aas
pop
movhps
or
loope
add
scas
or
mov
pop
sbb
aam
enter
fs
and
pusha
mov
faddp
lods
outsl
adc
mov
xchg
mov
mov
andl
loop
imulb
repz
outsb
mov
push
add
loopne
mov
jne
stc
push
into
fldenv
orl
popl
or
adc
stos
movsl
lcall
ret
pop
inc
sub
shlb
sub
ret
pop
int
dec
add
xor
pop
and
dec
mov
adc
inc
jns
mov
flds
cmpsl
xchg
fs
xor
pusha
pop
and
adc
pop
adc
lcall
js
out
ljmp
mov
in
mov
push
shrb
ds
loopne
xor
or
push
jb
jmp
notl
and
mov
mov
push
ss
sbb
pop
sbb
pop
ret
ucomiss
test
ss
movmskps
cmp
pop
inc
fwait
pop
adc
in
mov
addr16
or
bound
adc
dec
push
dec
icebp
or
ret
icebp
dec
addr16
test
in
mov
cld
lcall
cmp
xchg
roll
xchg
jl
fildll
test
cmp
sub
sbbb
cmpsb
aas
sarb
jle
call
ret
xor
push
cwtl
js
push
mov
xor
sbb
sahf
sbb
rol
or
dec
testl
sbb
sub
and
push
jp
xchg
mov
lods
mov
fwait
push
jecxz
pop
xchg
mov
out
sub
mov
lds
or
lods
jmp
cmpsb
sub
das
sahf
test
xchg
or
rcrl
add
movb
lods
int
adc
std
xor
fwait
xor
in
mov
stos
adcb
sbb
dec
mov
out
add
popf
xor
dec
add
mov
pop
pushf
mov
mov
mov
sub
or
into
notl
ja
pop
out
pop
addr16
js
push
dec
pop
push
inc
inc
mov
pop
xchg
add
cld
xchg
mov
add
adc
xchg
sub
xchg
xchg
pop
es
pusha
push
hlt
pushf
xor
pop
inc
add
out
adc
sbb
loop
adc
mov
repnz
cmp
cwtl
mov
mul
pop
mov
mov
jge
rcll
iret
push
push
inc
dec
mov
out
xchg
push
lods
dec
xchg
lret
in
xor
and
cmp
jbe
xchg
out
aas
scas
push
in
pop
dec
xor
push
fiaddl
lods
lahf
push
movsl
jmp
pushl
dec
imul
int3
add
mov
pop
xor
adc
js
into
push
mov
pop
mov
mov
dec
in
cmpsb
mov
pop
and
and
call
aaa
cld
lcall
rorb
adc
icebp
or
bound
insl
adc
add
enter
into
add
clc
pop
and
push
sub
mov
fiadds
arpl
jmp
xchg
lahf
sahf
clc
xor
jbe
xor
xchg
dec
fcoml
cltd
dec
jne
out
into
test
push
sti
xlat
and
or
bound
pop
adc
icebp
pop
mul
sbb
leave
shlb
pop
lods
dec
insb
push
or
negb
repz
daa
cli
lea
sbb
fists
inc
fdivrs
pop
xor
push
aas
adc
inc
test
pop
pusha
add
lret
inc
imul
mov
js
adc
adc
adc
daa
mov
das
cmp
push
jo
and
jge
fwait
scas
lea
test
sbb
adc
xchg
mov
lcall
cmp
mov
xor
sbb
stos
lods
mov
mov
jmp
xlat
jle
mov
inc
cmpsl
sub
fs
sub
icebp
sti
fbld
and
cld
int
or
fcoms
hlt
ja
add
push
lds
inc
imul
mov
dec
push
jno
jge
mov
pop
mov
push
and
incl
pop
mov
xchg
jmp
fdivp
pop
adc
fdivrs
imul
out
and
sub
enter
dec
lds
pop
inc
xor
addr16
mov
addr16
aad
xchg
jbe
fisttps
idivb
lahf
jb
imull
push
inc
xor
fsubrp
ret
lahf
popf
mov
mov
in
jg
and
sbb
sbb
movsl
cmp
add
sbb
jbe
andl
fwait
add
adc
inc
xor
mov
mov
mov
jno
mov
pushf
cmpsb
ja
xchg
movsl
mov
ret
mov
dec
aas
ds
or
call
inc
sbb
and
sub
mov
cmp
push
push
xor
fadds
sbb
mov
cmp
cmpsb
fwait
pop
mov
push
and
jecxz
enter
push
lods
bound
mov
fcoms
fistpl
fildl
sbb
andl
dec
dec
negl
and
push
xchg
pop
out
xor
jbe
popa
cmp
dec
xor
rol
cmp
cwtl
lret
xchg
mov
jl
mov
pop
dec
dec
ret
push
sbb
mov
mov
sub
inc
into
mov
pop
jae
inc
dec
cwtl
push
mov
mov
adc
jo
xchg
cli
or
push
xchg
sbb
hlt
mov
sbb
andl
mov
repnz
mov
dec
sbb
push
and
mov
orl
out
outsl
jmp
mov
lcall
int3
mov
inc
jg
or
push
cmp
cmp
and
mov
negb
xchg
int3
mov
push
pusha
repz
add
addr16
sbb
push
pop
lcall
add
in
enter
sub
dec
leave
rcrb
out
rorl
rcrl
mov
adc
mov
inc
imul
lret
into
push
sahf
push
push
jmp
add
insb
addr16
rcll
push
test
xor
inc
mov
dec
pop
fistl
mov
lea
and
jecxz
mov
pop
call
mov
pop
jecxz
jp
push
xor
mov
movsl
xor
mov
movsl
or
int
imul
xor
js
push
push
addr16
ljmp
repnz
and
mov
mov
pop
lea
dec
lods
jbe
xchg
cmc
cli
mov
pop
adc
pop
movsl
cld
sub
and
pop
add
pop
inc
sub
cld
inc
outsb
inc
mov
mov
jo
stos
mov
mov
push
ds
leave
cltd
inc
insb
push
or
sub
mov
std
call
dec
std
imul
imul
int3
gs
mov
jecxz
inc
aaa
jno
repz
out
cmpsb
inc
mov
cmp
mov
adc
lret
xchg
jle
jle
in
push
insb
test
cmp
repnz
movsb
lods
addr16
js
loope
sahf
push
inc
stos
dec
ret
scas
movsb
xchg
lret
lcall
cli
repnz
insl
jge
std
or
loopne
dec
das
inc
addr16
jp
fld
mov
into
cmc
shrl
push
sbb
mov
loopne
push
icebp
jmp
inc
dec
hlt
adc
sub
pop
sbb
dec
out
dec
adc
push
cmp
jp
aam
in
mov
mov
cmpsb
fcom
pop
sbb
cli
jne
xchg
test
or
out
ja
cmc
cwtl
dec
mov
jmp
arpl
sub
fidivs
xor
add
dec
push
cmp
fisubrl
ss
push
sub
cld
push
adc
stos
sbb
xchg
gs
or
out
or
stos
les
jmp
mov
enter
fdivl
dec
push
int
jnp
clc
xor
push
sub
notl
push
inc
jne
aad
fs
xor
lock
sti
add
sbb
fstps
lcall
push
dec
mov
adc
mov
dec
jl
mov
inc
mov
pop
dec
icebp
inc
xchg
and
and
inc
mov
in
scas
dec
push
lret
mov
fnstenv
inc
arpl
xchg
cmp
bound
bound
mov
pop
adc
in
aad
add
sbb
in
push
jmp
fucomi
add
mov
insl
ret
fiaddl
fldt
xchg
and
cmpsl
movb
adc
int
cld
push
mov
jb
rolb
or
jno
and
iret
pushf
and
roll
add
xchg
mov
scas
cmp
dec
sahf
stos
mov
fcomps
mov
xchg
imulb
repnz
push
aaa
jge
adc
push
mov
mov
addl
mov
dec
ret
adc
scas
inc
jne
jno
addl
pop
testl
in
inc
lock
je
dec
sti
lret
addl
insb
stos
repnz
out
adc
ss
and
push
pop
je
imul
jle
sbb
inc
mov
xchg
mov
data16
aad
inc
scas
xlat
out
nop
pop
sahf
loop
pop
data16
repz
cltd
jle
push
in
and
add
rolb
ja
push
mov
daa
jle
js
dec
mov
mov
push
test
and
inc
xchg
xchg
pushf
scas
cmp
pop
push
sub
iret
mov
mov
in
mov
ja
stc
and
inc
xchg
jns
push
outsl
or
lret
xor
dec
scas
or
ficoms
data16
adc
pop
scas
data16
inc
pop
adcl
pop
pop
mov
ljmp
sub
rorl
pusha
mov
mov
fsubs
lea
movsl
or
push
jbe
and
xor
and
nop
jle
test
cmpsl
imul
dec
xor
in
cmp
std
sub
pop
mov
xchg
sub
push
pushf
movsl
shlb
push
das
or
dec
sbb
adc
mov
pop
scas
jae
cld
les
cmc
add
sub
xchg
sub
lret
loopne
jne
fsubrp
int
pop
fnstsw
pop
repnz
shll
test
pop
dec
adc
ret
xchg
xor
int
xchg
stos
addl
cmc
imul
dec
lds
rorl
rclb
jge
fsubr
fwait
jb
mov
cmp
leave
subl
scas
dec
das
sbb
push
pop
lea
and
mov
rorb
or
or
mov
sbb
mov
dec
and
gs
mov
pop
jecxz
jno
fcomp
popa
xchg
xchg
pop
rclb
gs
or
push
popa
or
mov
mov
andl
out
cltd
cmpsl
test
mov
fldenv
int
mov
fcomi
xor
and
sbb
pop
jl
daa
jmp
push
cmp
fnstcw
aas
call
pop
sub
and
out
mov
xor
mov
adc
fcmovne
xor
std
shrb
mov
xchg
cli
iret
cmpb
or
enter
xchg
js
aad
sub
bound
bound
and
pusha
mov
cmpsl
out
stc
hlt
nop
push
insl
sub
fwait
adc
jecxz
pop
push
mov
pushf
or
daa
jbe
out
fimuls
repnz
add
in
xacquire
dec
arpl
mov
call
pop
inc
dec
aam
cmc
sub
imul
push
dec
pushf
or
and
cwtl
arpl
lret
pop
aam
je
and
ds
xlat
lock
sub
fisttps
lea
add
mov
inc
movsl
insl
gs
cmp
ds
out
pop
mov
xlat
xchg
test
les
jne
add
shl
push
clc
add
imul
push
adc
mov
lret
andl
inc
test
mov
xchg
mov
mov
inc
test
jns
cmp
push
std
xor
imul
or
dec
mov
jb
ret
mov
aas
pusha
push
insl
dec
movl
xchg
mov
add
sbb
cli
in
mov
sbb
insl
sbb
iret
mov
pop
pop
clc
jl
add
add
add
popf
lea
pushf
sbb
mov
mov
xchg
test
xchg
push
sbb
ljmp
jge
xlat
mov
in
in
addl
cltd
dec
push
inc
movsl
int3
mov
jno
faddl
or
mov
arpl
sub
or
jae
push
sahf
jg
dec
mov
and
cmpl
aam
bound
clc
inc
lea
add
pop
jae
outsl
jl
inc
xchg
gs
in
sahf
jnp
sub
fwait
rcrb
loopne
and
mov
shl
push
cwtl
pusha
int
enter
and
mov
sbb
sbb
sub
sub
les
or
call
push
sbb
sub
mov
mov
add
mov
push
ret
enter
shrl
xchg
xor
in
cwtl
jne
jns
daa
jp
or
sahf
xlat
mov
adc
fwait
jnp
jmp
mov
mov
adc
sbb
add
sbb
sbb
fimull
xchg
xchg
mov
aad
sbb
pop
scas
out
adc
aad
adc
jp
idivb
sub
lcall
inc
and
mov
jg
mov
jb
mov
sbb
or
mov
mov
cwtl
jo
mov
fimuls
sub
push
add
cld
gs
das
int3
jbe
insl
sbb
mov
faddl
mov
mov
jg
push
cmpsl
imul
adc
in
inc
mov
add
int3
int3
outsl
sbb
mov
or
ljmp
push
push
fbstp
inc
lcall
dec
pop
lock
xor
cmp
pop
fmull
mov
mov
pop
pop
add
jmp
jae
leave
rcrl
sahf
jecxz
dec
es
xchg
pop
xchg
sbb
xchg
and
hlt
push
mov
arpl
jne
mov
lea
xor
or
mov
pop
add
es
pop
daa
movsb
rorl
incl
outsb
fcmovnb
in
xchg
adc
pusha
xor
inc
inc
xchg
xchg
fimuls
push
les
add
sub
add
sahf
bound
jp
je
sub
cltd
rcrl
outsb
xchg
jnp
nop
adc
xor
add
xor
mov
lret
sub
dec
cmp
or
push
inc
cmpsb
mul
and
mov
fstpl
xchg
mov
rcll
or
dec
insl
or
rorb
jns
out
shrb
dec
sbb
push
repz
lret
daa
pop
mov
stos
sbb
aaa
xlat
lods
aaa
sbb
mov
sub
clc
xchg
movsb
xor
into
sub
popa
shll
imul
mov
and
daa
xchg
bound
cli
xlat
add
xor
loope
aaa
mov
popf
cwtl
jns
xor
mov
dec
cli
and
dec
sbb
pushf
fcmovu
mov
scas
stc
aaa
sarb
adc
adc
fld
add
xor
rcl
push
int
and
fimuls
outsb
jp
inc
adc
xchg
mov
stos
mov
out
clc
rcll
fidivrs
ja
ret
int
stos
loopne
and
sbbl
jl
sbb
mov
or
ss
and
rorl
mov
shll
push
xor
arpl
popa
mov
ds
sti
ficompl
adc
and
lea
cwtl
lods
jp
ret
pushf
pop
cli
jge
cmp
sarl
pop
add
cmp
js
or
jmp
adc
and
mov
dec
pushl
add
and
loopne
cmp
and
bound
lds
inc
xchg
xor
pop
clc
cmp
lds
jno
add
adc
test
mov
mov
ljmp
push
mov
jmp
add
add
mov
into
push
xchg
xor
adc
xor
sahf
fmull
pop
dec
push
ss
and
mov
jae
or
int
data16
rclb
xchg
mov
adc
sub
xlat
ljmp
inc
push
mov
mov
out
loopne
rcll
enter
lret
push
dec
rcll
idivb
mov
pop
decl
ret
sub
popf
into
jl
into
pop
in
adc
mov
cltd
pop
adc
in
cmp
pusha
mov
cmc
out
push
and
aam
xchg
or
xor
adc
mov
roll
cmp
push
call
sarb
clc
dec
aam
inc
call
or
ja
call
sbb
test
subl
xor
push
mov
jmp
jno
mov
dec
jnp
add
sbb
push
sarl
sahf
shrl
mov
inc
mov
push
jbe
loopne
cmpsl
jne
movsl
and
xor
andb
jb
pop
out
sbb
aas
fnstenv
shll
inc
bound
inc
lods
push
fcoml
sbb
cli
insb
out
add
aas
stos
cmp
inc
sub
sbb
mov
jo
sbb
sbb
adc
xchg
inc
notb
fcoml
bound
cmc
sbb
inc
sti
mov
das
add
push
pop
cmp
pop
mov
mov
inc
imulb
mov
add
and
iret
sub
rep
mov
push
and
lock
jb
scas
js
sub
les
ss
or
dec
xchg
add
idivb
in
jb
dec
ss
aas
xchg
pop
and
idivb
push
jge
shll
out
call
das
fisubs
inc
stc
mov
das
xchg
xchg
stos
pop
inc
popa
lods
int3
fidivs
pop
orl
call
in
rcrb
mov
popf
cld
das
call
inc
sub
xor
adc
fsubrp
push
in
test
and
lahf
outsb
xor
pop
lock
dec
xchg
in
fnsave
lret
dec
sub
sti
dec
jg
and
lds
xor
test
or
sbb
pop
cmpsb
pop
pop
bound
jge
jbe
pop
xchg
das
xor
mov
mov
mov
mov
fnstsw
mov
push
sbb
jp
push
out
xchg
lods
mov
inc
adc
ds
mov
add
leave
clc
aad
inc
cmp
mov
ret
and
mov
in
push
lahf
in
and
std
addr16
or
scas
xchg
inc
mov
push
das
xchg
mov
das
push
jae
movsl
arpl
add
dec
mov
xlat
sbb
push
jg
mov
dec
cmc
adc
inc
push
popf
leave
fsts
add
fcomps
xchg
stos
bound
jnp
aaa
daa
mov
dec
push
xchg
hlt
ret
adc
bound
lods
shll
les
jae
lahf
pop
jl
and
pop
push
pop
fabs
adc
lahf
adc
push
clc
mov
sub
jb
enter
jmp
fs
and
push
fucom
cmpsl
ja
xorl
arpl
cli
insl
xor
add
movsl
arpl
cmp
sbb
call
jmp
ret
andl
push
loopne
push
mov
sub
aaa
mov
sbb
hlt
bswap
aaa
and
fdivs
push
and
mov
sub
stc
into
add
adc
shlb
iret
lock
lahf
imul
jmp
dec
lahf
jne
fidivrs
outsl
fwait
sub
or
dec
dec
mov
mov
pop
stos
mov
adc
jne
popf
std
lret
jno
mov
outsl
sub
xchg
jmp
hlt
pusha
or
dec
push
jmp
xchg
cli
cmp
sub
push
mov
loope
sub
cli
bnd
fcoml
fistpl
xchg
ljmp
aam
aas
in
std
shrl
insl
jnp
and
outsb
pop
inc
shl
inc
sahf
mov
stos
jae
mov
mov
fadd
enter
inc
jge
pop
ffree
shl
cmc
xchg
in
sbb
fadds
popa
xchg
out
insb
add
shrb
pop
fdivr
out
add
pop
iret
sbb
push
scas
cmpsl
xchg
fstps
sub
pop
shlb
xchg
jle
test
mov
cmp
mov
lods
add
int
xorb
cmp
ret
shll
mov
pusha
int
enter
jecxz
or
xor
into
pop
in
or
mov
addr16
gs
cmpsb
add
out
lock
lret
and
test
xor
or
cwtl
lock
divl
lods
push
incl
ret
daa
shlb
pushf
ret
mov
std
add
int
sub
add
decb
pusha
sti
cmp
out
loop
pushf
mov
pop
test
push
fistl
mov
ret
push
iret
repnz
sub
xchg
xchg
sub
xchg
push
mov
icebp
vcvttss2si
xchg
push
addr16
mov
push
div
ror
jbe
or
aaa
fstl
lods
sbb
cld
or
push
add
movsb
adc
inc
and
push
ss
lcall
popf
dec
pop
stos
inc
push
xchg
das
mov
cmpsb
inc
sub
sbb
popa
inc
repnz
cld
lea
int
sub
ja
dec
ds
insl
mov
js
pop
jbe
aad
xchg
mov
daa
outsl
mov
xchg
lcall
pop
xchg
scas
cs
add
xlat
aad
jecxz
repz
push
mov
popa
adc
arpl
in
jp
inc
lcall
mov
fldt
enter
mov
adc
roll
jns
movsl
adc
inc
push
add
mov
outsb
push
push
mov
and
push
jl
enter
in
movl
mov
stc
xchg
inc
cmp
call
add
fcoml
filds
mov
inc
cmp
fcoml
rcrl
inc
pop
cmp
cltd
sbb
fbstp
add
pop
cwtl
fsts
push
pop
inc
mov
mov
lcall
mov
sbb
repnz
sub
movsb
mov
ret
fs
fcmovb
repnz
xchg
and
sti
push
adc
stos
shll
clc
cmp
inc
cs
aaa
xorps
jns
into
fs
and
mov
push
cmp
dec
xchg
arpl
xor
gs
mov
lods
xor
flds
test
mov
push
adc
ficomps
pop
xchg
lods
ds
loop
sbb
mov
push
adc
xlat
std
xor
call
popf
sarb
int
data16
pop
fucom
sub
popl
adc
mov
xchg
sbb
aam
dec
adc
pop
pop
cli
adc
sbbb
out
add
popa
or
ss
lcall
add
cmpsb
stos
lea
mov
cmpsb
or
aaa
aad
mov
stos
mov
mov
arpl
cli
inc
adc
add
stos
pop
notl
mov
in
sub
loope
lahf
mov
mov
jne
jno
push
lcall
adc
icebp
pcmpeqw
mov
mov
mull
or
pop
push
pop
lret
pop
mov
xchg
les
cmpsl
cmp
clc
inc
add
mov
fstpl
pop
pop
outsl
jp
adc
outsl
lea
xor
imul
std
shr
test
mov
movsb
ret
icebp
imul
dec
outsb
xchg
xchg
inc
push
scas
mov
mov
dec
imul
mov
data16
mov
cmp
stos
sbb
pop
movsl
adc
in
mov
idiv
mov
in
pop
jp
mov
jno
adc
push
or
pop
mov
cmp
test
mov
adc
add
sbb
xchg
idivl
and
cmp
into
or
rclb
aas
sbb
push
xchg
cmp
lods
dec
mov
sub
outsb
mov
lret
mov
pop
cmp
sbbl
jl
repz
sub
jnp
mov
cmp
cltd
dec
xor
dec
out
xchg
hlt
add
pop
xchg
les
xor
repnz
in
jl
js
mov
fs
sub
sub
xor
xor
push
xchg
sbb
xchg
leave
or
mov
inc
dec
push
cmpsb
andl
pop
push
adc
or
push
adc
dec
subl
or
add
cmp
out
ds
test
push
inc
sub
cmpsb
mov
xor
and
add
xchg
pop
cld
cmp
pop
insb
imul
loop
pusha
movntps
aad
pop
xchg
jbe
int3
adc
jg
test
jmp
jno
fisubrl
cmp
out
xchg
loop
pop
mov
jb
jecxz
into
pop
ret
fdiv
inc
adc
or
or
shll
add
ss
add
push
cmpsl
ds
and
adc
es
xchg
lret
push
scas
inc
sti
int3
mov
outsb
lds
dec
mov
adc
add
cmp
pop
cmp
mov
arpl
fsts
es
daa
lock
test
ljmp
fwait
inc
sub
jecxz
jmp
cmp
dec
jbe
sub
in
rcll
mov
inc
enter
out
rcrb
push
cmp
mov
sahf
inc
nop
adc
push
jae
cs
lahf
jecxz
fdivrs
sarb
mov
fildll
push
sahf
push
jp
dec
jmp
mov
lret
test
mov
repnz
enter
cmp
loop
pop
jl
js
mov
xchg
inc
adc
adc
les
and
inc
push
mov
xchg
mov
push
pusha
into
mov
stos
push
aaa
pop
pusha
mull
add
fs
rcll
jge
cmp
push
mov
call
pop
xchg
mov
push
or
movsl
xchg
stos
mov
push
insl
fdivrl
stc
pop
xchg
pop
mov
xchg
stos
xor
fxch
es
add
mov
iret
jns
sbb
inc
xor
mov
mov
fisttps
stos
ret
and
adc
or
push
push
jno
xchg
fstl
cmpb
mov
fdivrs
test
push
stos
call
or
test
nop
mov
stc
sbbl
dec
dec
insl
cmovns
jns
daa
std
jne
adc
adc
inc
std
sti
xchg
mov
sahf
mov
push
pusha
inc
push
mov
shlb
xchg
repnz
dec
pusha
and
ss
jne
and
or
int3
xor
flds
cmpsl
push
pop
mov
sub
cmpsl
xchg
xchg
outsl
mov
stc
aas
pop
mov
lea
pop
incl
pop
mov
pop
pop
adc
mov
in
imul
mov
icebp
add
arpl
add
cwtl
lock
inc
orl
push
cmpsl
mov
std
jo
mov
add
outsl
sub
and
test
lea
and
iret
push
cmp
jmp
repz
mov
lcall
sbb
xor
lods
or
mov
or
xchg
mov
int3
dec
fcmovbe
stos
nop
adcl
add
xchg
jmp
dec
ljmp
adc
inc
div
dec
inc
xchg
loope
shr
stos
inc
xchg
adc
into
push
and
je
add
xor
rcrb
mov
pushf
sbb
enter
dec
mov
lcall
popf
sub
or
in
inc
mov
into
sub
or
movsl
dec
mov
fucomp
jns
jb
inc
mov
dec
outsl
in
ds
cmpsl
add
ja
sbb
mov
out
insb
add
and
ss
mov
mov
xor
jecxz
dec
and
mov
and
pop
lret
sbb
pop
dec
mov
add
pop
aad
xchg
add
fwait
mov
and
leave
pusha
out
das
adc
and
push
cmp
jo
mov
test
fwait
adc
popf
and
out
pop
stc
iret
popaw
cwtl
sub
pop
out
enter
dec
mov
dec
mov
icebp
and
pusha
sub
and
mov
pop
xor
test
sub
adc
pusha
xor
das
pop
adc
popa
sub
or
orb
pop
lret
or
xor
cmp
sahf
cmp
jbe
push
xchg
js
leave
pop
sub
ret
mov
arpl
test
push
ja
push
out
ret
add
lods
add
loope
xor
dec
das
cmpsl
sub
jae
fcmovu
pop
int
xor
imul
push
jne
mov
fwait
mov
rcrb
inc
xor
fscale
add
hlt
sub
adc
push
add
inc
call
filds
int3
mov
loop
add
sbb
xchg
xlat
arpl
jge
ds
bound
fldcw
lcall
imul
cwtl
test
dec
xor
xor
mov
dec
lret
cmp
add
loope
mov
xchg
jg
in
jmp
add
sti
aas
fs
adc
jmp
negb
imul
jmp
iret
cs
getsec
es
ss
testb
adc
inc
popf
lret
cwtl
push
pop
lds
cmp
daa
ret
out
jbe
lods
mov
pop
pop
cs
jnp
es
jle
pop
and
or
ret
lret
lret
loopne
outsl
xchg
dec
out
je
push
xor
add
adc
dec
inc
pop
dec
mov
jg
push
pushf
in
ds
and
cli
in
pop
fstpt
enter
xor
jg
jge
add
enter
xor
es
cmp
cmp
and
sub
movsl
addb
push
pop
sahf
ja
mov
xchg
mov
or
dec
jns
mov
shr
sub
xlat
adc
and
fs
jbe
jo
sti
jae
lret
and
mov
and
add
scas
xchg
cmp
add
push
clc
adc
mov
int
mov
xchg
rsm
rcll
arpl
add
rcll
add
insb
das
add
adcl
cmp
mov
jmp
fimuls
fisubs
xchg
mov
roll
add
xor
dec
jne
orb
and
fcompl
std
add
aad
inc
test
mov
out
out
arpl
fldcw
mov
mov
xchg
or
mov
stos
dec
loopne
cld
pop
jge
pop
cmpsb
cmc
sbb
mov
mov
rorb
xchg
shl
loopne
outsb
fimull
push
xchg
adcb
test
add
sub
addr16
adc
mov
xor
mov
and
or
fistpl
scas
xchg
addb
fcomi
or
pusha
mov
xchg
or
js
sbb
into
fildll
pop
adc
shr
mov
xorl
inc
add
pop
xchg
cmp
xor
sbb
jecxz
push
xor
jns
test
xchg
inc
ror
outsb
imul
sub
inc
lcall
enter
or
dec
lock
inc
imul
in
jo
mov
popf
push
pop
inc
push
xor
test
and
sub
jg
sub
ja
jne
loopne
xor
sti
in
lret
fsubl
stos
fdivp
jecxz
gs
rorb
popa
push
dec
sbb
add
mov
gs
imul
xchg
fstl
insb
mov
int
sbb
daa
and
xor
xchg
rorb
popa
sub
repnz
pop
xchg
hlt
jmp
sbb
divb
ss
cmc
jo
mov
add
int
lock
adc
cmpsb
sbb
stos
push
adc
aas
fldl
jnp
sbb
jnp
lods
ja
xlat
jae
dec
notb
mov
frstor
fs
mov
repz
sub
add
mov
fnstsw
fs
loopne
push
fstpt
dec
in
fst
and
loop
add
inc
daa
movsl
stos
xchg
lds
test
push
insl
mov
pop
lret
jmp
sub
fldenv
aaa
in
test
mov
repnz
sub
ror
je
jnp
jo
inc
dec
sub
sbb
adc
ret
add
push
lret
push
imulb
inc
xchg
dec
out
push
data16
push
dec
sbb
pushf
inc
out
enter
fdivrs
xchg
mov
push
add
or
sub
mov
pop
cmp
xor
movsb
aam
loopne
repnz
dec
sub
dec
loopne
enter
fs
mov
bound
jno
cmpsb
push
sbb
scas
mull
jno
sub
notb
jl
aaa
les
xor
mov
mov
scas
inc
mov
icebp
pushw
jne
arpl
stos
addr16
pop
test
in
mov
sbb
jns
fwait
push
aaa
fcomps
xchg
push
push
pop
insl
int3
fucomip
adc
into
repz
aad
and
popf
pop
fbstp
jns
sbb
js
inc
rorl
and
add
mulb
xor
inc
sbb
shlb
out
pop
nop
data16
lret
sub
mov
mov
outsb
xor
or
mov
in
hlt
mov
sahf
push
aas
ss
sbb
or
out
adc
in
xor
in
xlat
xchg
sub
mov
pop
leave
xor
das
and
add
mov
mov
jbe
outsl
pusha
jae
aad
fisttpl
cmp
mov
xchg
ss
shlb
bound
mov
cmpsl
jns
pop
in
les
fwait
dec
add
sub
sub
cmc
pusha
ret
lds
adc
cmpsb
sbb
stos
mov
cmp
mov
sbbb
iret
imul
int3
stos
stos
and
lahf
mov
insb
adc
push
cltd
jmp
xchg
dec
sar
clc
test
jnp
dec
stos
mov
and
push
out
pop
dec
mov
repz
data16
cmp
push
fldcw
push
mov
addb
add
shlb
dec
fs
loop
add
mov
into
ret
in
and
sub
push
and
mov
rol
mov
subb
inc
xchg
sub
jnp
mov
pushf
jne
xchg
data16
jl
sahf
mov
cmp
add
inc
and
pusha
stc
lret
cld
in
mov
pop
ret
pop
sub
es
xchg
jne
pop
mov
leave
xor
lret
popf
loop
std
cld
cli
dec
pop
sti
stc
push
mov
insb
push
cmpsb
ljmp
ret
xor
shrb
rclb
mov
jbe
cmp
js
xor
jne
pop
daa
out
mov
cltd
ljmp
adc
pop
push
pop
sar
cltd
mov
adc
sbb
call
xchg
lahf
aaa
sti
mov
in
stos
xor
push
push
ljmp
push
pop
fcomp
movsb
aad
xor
das
lods
mov
mov
jo
sub
xor
icebp
pop
call
push
divl
ja
push
mov
cltd
pushl
push
call
cmpsl
and
faddl
jne
in
jo
mov
jno
in
push
je
xor
in
adcb
arpl
sbb
hlt
xor
outsl
xchg
test
gs
xchg
shlb
daa
psrld
sbb
insl
fidivrs
xor
les
or
outsl
fdiv
nop
jmp
cltd
test
aam
and
mov
fmull
divl
mov
je
out
xlat
lock
add
fcompl
mov
push
popa
ret
sbb
push
inc
xor
cmpl
push
mov
lahf
fnsave
xorb
decl
push
fwait
push
ja
sarl
and
xor
jne
enter
mov
and
in
js
jmp
jmp
push
arpl
fsubs
loope
ror
and
mov
dec
or
stos
bound
pop
cltd
addr16
fiadds
and
test
ret
dec
popf
add
jg
mov
imul
pop
jne
pcmpeqb
xor
mov
cltd
or
es
sbb
and
adc
pop
add
xor
inc
pop
mov
mov
sbb
xchg
push
xor
add
fstl
imul
pop
xchg
sbb
fs
add
popa
and
push
js
mov
xchg
add
ds
pop
dec
sbb
cwtl
mov
stc
jmp
jae
imul
push
rclb
or
aam
sub
xchg
popa
fs
jbe
in
popa
stos
push
lret
add
sub
inc
sbb
pushf
cltd
ret
xchg
xchg
imul
in
arpl
cli
mov
xor
lods
es
xor
stc
or
mov
sbb
pusha
scas
push
sahf
rcrl
adc
ret
lods
jecxz
fidivs
out
aam
push
pop
imul
fwait
idiv
out
es
adc
js
pop
adc
add
mov
aaa
cwtl
add
pop
sbb
out
mov
into
gs
aas
fisttps
mov
cld
inc
mov
shrb
dec
shrl
imul
cmp
popa
adc
cmpsb
test
dec
gs
push
mov
sbb
enter
ds
clc
pop
imul
iret
ror
inc
pop
push
or
adc
sbb
inc
mov
les
ret
ja
add
cwtl
lcall
dec
push
pop
push
lret
cld
popa
sub
sbbl
mov
lds
dec
fisubrl
push
mov
pop
mov
xchg
cmp
pop
jnp
and
mov
es
fsubrl
dec
xchg
loopne
lea
inc
iret
cmp
and
incb
pop
arpl
push
pop
pop
push
lock
adc
add
mov
in
cltd
mov
bound
mov
aam
push
jnp
inc
sahf
xchg
add
loope
mov
outsl
movsb
pusha
xchg
je
or
dec
inc
fdivl
call
fisubrs
mov
lods
mov
push
pop
cmc
pop
push
inc
ss
or
mov
dec
xchg
adc
rorb
lock
rcrl
stos
fs
into
xor
cmp
test
in
inc
jb
add
ljmp
cmc
ss
xor
add
xchg
in
sti
cltd
in
sub
cmp
movsb
cmpsb
pop
adc
jg
mov
jecxz
jo
xor
push
das
divb
fwait
mov
adc
fmuls
stos
popf
lahf
cmpsb
adc
add
mov
add
sub
cmpsb
adc
jb
jle
pop
std
and
jmp
into
mov
lock
sbb
jle
cltd
sti
adc
add
clc
ffree
add
mov
sub
inc
sarb
mov
cmp
cmp
mov
js
jp
inc
pop
jbe
or
imul
push
adc
add
push
stos
jg
gs
sub
cmpsb
pop
xorb
fstps
daa
cmp
test
jecxz
sbb
jo
jl
cmpb
jnp
sbb
sub
mov
lret
mov
adc
cwtl
es
pop
lea
out
test
int3
fucomp
in
push
xor
shlb
sub
sub
fs
test
jecxz
xchg
or
aas
pushf
ret
mov
push
idivb
mov
mov
cmc
pop
pop
jge
popf
pusha
loope
sahf
mov
sbb
sbb
in
push
cmc
cmp
mov
ja
stos
inc
mov
in
push
clc
sub
inc
pop
push
add
in
shrl
sub
das
call
loopne
clc
pusha
ja
pop
jb
aad
and
loop
rorl
scas
cltd
in
ds
addr16
stc
insb
inc
in
mov
cltd
push
dec
fs
iret
sbb
fisttpl
xor
rcll
jl
and
mov
ja
dec
test
shrl
repnz
cs
mov
cmp
in
daa
xchg
xchg
enter
add
push
sbb
pop
xchg
lods
push
mov
adc
pop
xor
and
adc
and
imull
movsb
pushf
jne
cld
adc
xchg
bound
adc
mov
jp
pop
inc
cmp
or
call
aaa
orb
xor
fsub
jle
mov
or
push
outsl
dec
mov
adc
mov
sbb
loope
push
push
in
ret
or
cmp
pusha
out
loop
andl
add
test
lds
pop
sbb
push
adc
xchg
push
mov
fcomps
push
cmpsl
sbb
mov
pop
add
xchg
sti
pop
dec
cli
shll
ds
stc
dec
ds
or
mov
jnp,pt
and
fdivr
inc
sub
push
rcr
test
test
out
stos
outsl
outsl
std
imul
sahf
sbb
jnp
mov
mov
add
loop
inc
test
lcall
xchg
loope
lcall
hlt
lret
loop
and
in
out
rcrb
fldenv
jo
mov
jecxz
mov
push
xchg
sub
hlt
out
dec
pop
popa
int3
inc
pop
jp
ret
dec
xchg
push
xor
jns
adc
mov
cli
movsl
outsl
mov
jno
aad
idivl
and
arpl
in
mov
aas
mov
mov
jb
std
push
ja
xchg
aad
fs
icebp
andw
jns
lds
aad
cmpsb
mov
fmuls
shlb
xor
orb
mov
mov
push
into
in
fistl
jae
sub
fsubl
mov
enter
ss
xchg
in
mov
mov
xchg
gs
mov
iret
mov
clc
fsub
enter
lods
les
sub
testl
and
push
repz
inc
mov
leave
pushl
cmpb
push
mov
stc
repnz
push
fmuls
jbe
inc
push
loopne
jg
push
call
xor
mov
mov
add
movsl
lret
mov
jne
inc
in
outsb
int
cli
aad
jecxz
dec
mov
sbb
pop
cs
cli
sub
out
js
imul
pushf
push
test
ds
into
cli
and
fstp
out
jbe
sub
and
mov
jg
cmc
sub
mov
loop
aas
scas
push
cmpsb
mov
mov
in
mov
cmc
ljmp
psrlq
xor
jne
int
aaa
dec
mov
fcomps
imull
lcall
push
mov
jnp
cwtl
rcrb
stos
sar
icebp
xor
sbb
ja
push
js
out
jnp
or
ja
nop
incl
add
leave
call
addr16
aad
gs
jmp
and
vpcmpgtd
or
and
into
xchg
xor
incl
push
ror
adc
sbb
sti
pop
xor
mov
mov
fildl
dec
or
test
icebp
repz
mov
xchg
fstp
sahf
sub
inc
inc
pop
in
in
jns
or
hlt
dec
mov
hlt
popa
and
xchg
cmpsl
test
or
cmc
imulb
fistpll
scas
sub
and
lds
pop
data16
push
lea
mov
lods
lock
sub
lret
test
mov
xor
stos
mov
pop
test
out
cs
jbe
add
mov
xor
sub
add
clc
jl
cmp
mov
out
push
cmpsb
mov
leave
lcall
push
cwtl
out
lock
xchg
mov
cwtl
inc
scas
das
lea
loope
hlt
add
add
iret
das
inc
es
add
sarb
fs
adc
aaa
dec
bound
sbb
nop
test
cmp
dec
ja
outsl
fnstcw
jno
pop
xor
adc
or
ret
jle
add
fisubl
lods
mov
push
js
inc
mov
flds
jae,pt
push
sbb
frstor
adc
inc
jb
pop
roll
adc
sub
pop
pop
fiaddl
lods
shr
mov
push
adc
stos
mov
pavgb
mov
cmp
mov
int
pop
in
ja
dec
aaa
inc
xchg
xor
je
push
in
adc
xor
mov
out
mov
idivb
jno
pushf
lock
mov
and
sarl
sbb
push
mov
ret
xor
mov
fbld
nop
jg
mov
cmpb
mov
cmp
mov
and
lret
xor
xchg
jp
shr
fwait
loop
xchg
sub
push
or
sub
jg
cmp
popf
nop
and
ds
xor
leave
and
xor
and
xchg
or
jb
inc
jns
enter
das
dec
int
add
aad
out
aaa
mov
int
mov
test
fdivrl
pushf
and
call
imul
sub
sbb
adc
pop
mov
xchg
imul
add
push
ror
cmp
add
mov
xor
sbb
add
rclb
mov
std
pop
mov
xorl
sarb
jp
cmp
mov
push
pop
popf
push
fmulp
jo
js
fucomi
lcall
insb
push
pop
sbb
mov
loope
mov
sbb
ret
ljmp
enter
lds
mov
xor
into
push
pop
push
sahf
call
mov
movsl
push
stos
loopne
xor
xchg
loop
mov
add
int
dec
and
insl
mov
push
aam
dec
in
xor
enter
push
mov
dec
and
mov
mov
test
call
add
pop
jae
loopne
mov
mov
push
xchg
sbb
les
sbb
or
cld
mov
push
inc
aad
mulb
pop
in
gs
cmp
movsb
adc
and
cwtl
inc
shlb
mov
mov
mov
mov
push
push
aad
add
inc
push
enter
pop
test
int
mov
inc
mov
scas
leave
push
mov
xchg
popf
mov
mov
push
ss
xor
xchg
cmpsb
test
idivl
out
sub
add
rorb
push
jbe
shl
jbe
call
clc
stos
jne
mov
test
cmpb
vrcpss
push
push
push
sub
cmp
shl
call
dec
mov
pop
out
pop
push
callw
pop
out
fwait
decb
sahf
iret
sub
add
fldcw
hlt
cmp
adc
xchg
jmp
movsl
fdivrl
sub
fwait
movntps
lcall
pop
imul
pusha
sub
testb
push
mov
loop
mov
add
inc
cmpsl
out
or
sub
sub
imul
in
push
fwait
das
je
int
shl
dec
sbb
jo
imul
xor
mov
cmp
popf
add
fistpl
or
mov
and
fwait
xor
lods
mov
cwtl
adc
lret
and
bound
pushf
adc
push
cwtl
push
dec
fdivrl
scas
pop
call
lds
pop
sub
les
frstor
mov
out
xor
or
push
and
cmp
pop
repnz
pop
fldt
inc
cmp
mov
lock
pushf
into
jp
jno
ds
xchg
add
addb
mov
jmp
cmc
mov
int3
ret
enter
enter
stos
sbb
jbe
es
jl
xchg
jl
mov
add
mov
mov
cmpsl
push
add
lahf
jbe
insl
enter
xor
pop
xor
jge
in
repz
xor
dec
shlb
xor
mov
test
int3
aam
jbe
adc
push
jnp
sbb
dec
mov
pop
jp
daa
dec
into
imul
cmp
test
dec
push
lods
and
cmp
jae
movsl
push
and
push
hlt
imul
mov
and
pop
mov
cmp
mov
aas
testb
or
and
push
and
and
fisubrs
ja
rcll
xchg
outsb
loopne
add
cmp
dec
shlb
add
or
mov
sbb
xor
inc
cmpsb
fmuls
out
inc
jno
outsl
je
pop
push
push
out
xchg
add
push
inc
scas
xor
outsl
push
mov
and
clc
rorb
jecxz
mov
rcll
xchg
cmp
mov
pop
mov
rcll
bswap
ss
sti
sub
add
mov
and
in
daa
jle
or
stos
nop
adc
mov
adc
ljmp
sbb
jbe
add
push
cmp
add
mov
xlat
inc
mov
lret
push
imul
cmp
xor
mov
mov
mov
rep
js
aas
sbb
or
inc
push
cmpsb
fs
lret
cmp
iret
dec
or
out
jl
out
and
loop
jns
mov
out
lock
and
adc
mov
andb
mov
ret
mov
mov
enter
and
call
add
push
dec
aas
out
iret
adc
scas
add
cld
outsl
jnp
mov
fwait
dec
imul
out
lahf
or
add
adcl
xlat
into
nop
hlt
sahf
test
push
je
or
xor
aas
hlt
sub
pop
or
jecxz
lds
test
add
cmp
dec
stc
jp
sub
loopne
add
cmp
xchg
popf
jbe
sub
sbb
jo
cmpb
xchg
push
js
cwtl
inc
sbb
testl
insb
mov
adc
adc
ss
add
sbb
out
jg
mov
mov
aaa
xor
or
movb
jl
push
aad
inc
sahf
cwtl
jnp
cwtl
mov
push
fldcw
pusha
jle
sub
pushf
sbb
sbb
dec
push
mov
add
push
nop
lret
pop
xchg
xor
jg
adc
or
insl
cmp
ja
out
inc
jae
popw
out
scas
push
inc
cmpsl
jge
mov
mov
jmp
and
stos
daa
lcall
jns
dec
pop
stos
lock
xchg
mov
gs
adc
cmp
or
sbb
outsl
lods
xor
lret
sub
mov
lock
cli
push
push
adc
sti
xchg
add
pushf
pmulhuw
cmp
push
jno
lret
sbb
jl
or
inc
adc
inc
movsl
icebp
xor
xchg
or
cmp
ror
xor
insb
je
mov
das
and
fs
and
fistpl
xchg
or
cmc
mov
cmp
aam
js
cmp
pushf
push
shll
dec
adc
outsl
aas
sbb
adc
add
dec
outsb
gs
pop
fsubr
mov
pop
add
aas
mov
nopl
addr16
clc
mov
add
movsl
sub
outsb
sub
int3
mov
sbb
mov
jb
or
push
dec
lret
cmc
mov
jo
cs
sarl
lods
dec
push
inc
rolb
jns
jge
push
shrl
scas
imul
add
subb
loop
ret
and
arpl
mov
adc
dec
imul
cmc
or
pop
cmp
pop
int3
mov
add
and
hlt
adc
mov
ret
test
cmpsb
lds
popf
mov
sub
mov
xor
add
clc
aam
jmp
popf
mov
and
les
je
dec
cmp
cmp
imulb
add
inc
cmc
mov
hlt
iret
sti
jb
arpl
stos
adc
jge
or
sbb
cmc
push
jp
fsts
adc
lods
cld
add
in
shrl
fldcw
xchg
hlt
jg
fnstenv
adc
and
mov
cld
add
add
in
cmp
xchg
imul
enter
js,pn
rolb
ficompl
enter
loope
add
repz
mov
sub
inc
andb
jle
xchg
stos
ljmp
cs
pop
fldt
sub
lds
sbb
in
xor
mov
push
stc
jg
lret
lods
xor
ret
mov
outsl
jbe
push
mov
aad
test
inc
popa
cmp
mov
inc
and
xchg
loopne
cli
and
cmp
push
je
mov
int3
lahf
jae
mov
mov
and
into
rcrb
jne
fs
in
mov
jno
cld
cmp
mov
rcl
cmp
push
out
sbb
cmc
sbb
jl
push
sub
xchg
jmp
je
cmp
mov
popa
lcall
bound
test
mov
js
push
push
jmp
or
xor
jmp
mov
mov
cmp
sbb
mov
js
dec
add
and
jg
xor
psubq
clc
pop
inc
sub
out
mull
leave
fcmovnb
mov
dec
push
mov
mov
pop
or
or
scas
mov
lea
mov
pop
adc
es
xor
mov
mov
xchg
clc
daa
insl
lods
sub
add
xchg
mov
mov
or
jae
dec
fnstsw
jl
mov
je
and
arpl
and
push
xchg
pop
sub
imul
sarl
imul
shrb
in
sbb
pop
add
xchg
push
dec
sub
xor
ror
or
jl
test
xor
ds
das
mov
cmp
and
mov
mov
fimull
rolb
out
ds
jae
call
fidivs
inc
xor
pop
call
xor
inc
or
mov
inc
cs
aaa
iret
pop
or
lcall
pop
jae
xchg
lret
mov
and
mov
or
mov
xchg
xchg
add
inc
ss
addr16
in
sbb
cmpl
sub
lock
das
or
and
pop
jl
ljmp
or
or
insb
push
orl
sub
push
xor
shl
loopne
enter
jl
data16
adc
cmc
nop
lods
inc
ja
and
cmp
push
xor
movsb
movsb
pop
mov
pop
mov
adc
out
and
imul
cmpsl
loopne
push
not
js
lret
lahf
or
xchg
insl
pushf
cmp
icebp
dec
jne
stc
dec
sub
pop
lahf
popf
push
add
sahf
cmp
cltd
jns
xor
shll
nop
xchg
sbb
jmp
push
dec
test
andl
mov
scas
cwtl
cmpsb
test
fcompl
lret
cmp
push
xor
lock
lods
sub
stos
cmp
pop
scas
aam
cmp
subb
imul
insb
mov
sbb
pop
loope
repz
xor
adc
js
xor
mov
out
push
outsl
pop
xchg
mov
out
mov
inc
xchg
push
xchg
cmc
pop
aad
mov
fsubl
repnz
lods
and
dec
push
dec
stos
adc
xchg
jno
add
loope
movsl
sub
iret
je
push
xchg
adc
xor
push
or
mov
dec
cmp
std
js
mov
in
test
int
mov
sahf
cmpsl
movsb
lods
jnp
push
mov
test
push
enter
and
lock
dec
mov
and
push
and
cwtl
and
xchg
adc
inc
mov
lds
mov
pushf
mov
std
mov
jne
jbe
sbb
fcomps
push
lods
stos
lahf
inc
pop
mov
push
addl
sbbb
and
cwtl
mov
push
gs
sbb
push
sbb
xchg
cmp
jp
sub
xor
jb
shl
mov
dec
ljmp
fst
dec
cs
mov
fnstsw
pop
jle
mov
cmp
adc
cwtl
pushf
ret
jne
jmp
push
inc
jl
mov
push
sub
inc
jns
push
inc
jns
sub
push
dec
test
movsl
pop
aas
out
push
enter
js
cs
xor
inc
frstor
push
fdivs
mov
mov
stos
xchg
pop
mov
insb
sub
lods
add
xlat
xchg
out
imul
jo
shlb
push
sub
mov
popa
jmp
mov
sahf
cmpsl
subb
dec
push
sti
rcl
dec
subl
xchg
cmp
sbb
adc
push
xlat
xor
mov
xor
arpl
scas
jp
fnstcw
ja
fs
sub
dec
gs
lret
pop
mov
mov
mov
pop
push
jnp
adc
rorl
lock
int3
mov
stos
stc
mov
adc
pop
mov
popa
testl
sbb
cld
fstl
add
push
push
push
or
fidivs
in
imul
pop
inc
mov
lahf
mov
insb
xor
xchg
xchg
xor
cmp
js
movsl
mov
mov
scas
dec
xchg
push
in
sbb
les
subb
pop
jle
or
arpl
rorl
jl
push
sbb
daa
mov
outsb
js
pop
in
cmpb
les
loop
mull
xor
es
js
sbb
cmpl
jge
xchg
and
add
pop
cwtl
dec
ficompl
mov
lahf
xor
lods
fxch
or
test
enter
ficomps
fdiv
mov
lahf
in
or
push
das
ret
int3
push
mov
loope
inc
fwait
imull
jle
mov
dec
or
gs
dec
and
lods
pop
push
mov
adc
mov
fsubl
scas
jmp
shlb
pop
push
das
bound
pop
xor
pop
movsl
in
fwait
push
cmp
lret
mov
out
pop
insl
int3
int3
sub
sbb
cmp
je
cltd
repnz
inc
pop
cmp
cmp
das
xor
xchg
in
lret
cmp
sbbl
stc
std
mov
xchg
mov
inc
sbb
mov
mov
cmpsl
pop
mov
loopne
nop
jnp
lcall
outsl
pusha
test
outsl
out
int3
and
aas
pop
adc
cmp
ds
subb
leave
loopne
enter
jo
lds
loope
ds
daa
sahf
mov
nop
mov
jns
mov
cs
jo
add
adc
cltd
mov
dec
leave
orl
and
fsubrp
call
pop
lds
or
cli
lret
popa
dec
faddp
sbb
std
sub
pop
cmp
pop
dec
adc
push
and
add
dec
in
int
fiadds
es
hlt
mov
aam
jae
push
fwait
adc
adcb
mov
out
push
popa
cmp
adc
xlat
xor
inc
mov
nop
lods
inc
lods
cmp
fnsave
and
xchg
cmp
lds
dec
dec
add
sub
or
push
pushf
lahf
jge
lods
fcompl
xchg
and
push
inc
pop
insl
mov
sub
jge
cmpsl
in
cwtl
lods
cs
dec
in
xchg
cltd
ljmp
or
dec
push
lea
movsb
push
cmp
lods
mov
push
lock
cmc
js
cmpsl
sub
fwait
out
xor
arpl
xchg
daa
lahf
scas
sbb
popa
lock
std
iret
jns
or
and
adc
call
sub
xchg
lods
das
rorb
movsl
or
leave
mov
pop
add
jb
and
push
add
or
cmp
push
lret
ds
inc
cmp
cwtl
nopl
or
in
sub
dec
sbb
pop
cmp
loopne
lea
popa
inc
je
dec
pushf
in
jae
lret
gs
fucomi
insl
negb
sbb
push
test
adc
jne
enter
cmpb
dec
das
sbb
inc
xchg
xor
int3
mov
aas
push
add
mov
mov
mov
out
mov
sub
sar
or
xorl
push
dec
jl
fwait
mov
adc
add
cmc
std
jbe
bound
ja
loopne
cmp
mov
push
or
and
xor
mov
pop
insl
push
rcrl
cld
inc
mov
pop
mov
xchg
jb
in
lds
sbb
or
loopne
jae
lods
outsl
adc
xchg
cmp
iret
scas
cmpb
and
loope
cmp
inc
push
gs
dec
mov
inc
inc
subb
bswap
mov
outsl
and
pop
mov
mov
in
fisubrs
or
jge
pop
sar
dec
cmp
jns
into
pusha
sbb
mov
add
mov
icebp
jb
cli
mov
push
mov
mov
pushf
and
and
pcmpeqd
xor
pushf
dec
xchg
xor
imul
sub
jo
push
mov
aad
xchg
ja
lods
xchg
jns
in
imul
fisubl
push
in
ret
sub
dec
mov
dec
push
mov
xchg
xlat
std
mov
mov
and
cmp
in
pop
arpl
mov
push
jnp
jno
xor
push
jmp
aaa
pop
xor
xchg
cmp
or
sub
ja
add
mov
fidivrl
push
pop
cmp
in
jns
outsb
icebp
dec
and
movsl
sub
and
iret
inc
push
add
sbb
sbb
out
inc
les
fsub
mov
js
daa
xchg
mov
xchg
xchg
push
xchg
fsts
mov
and
in
xor
mov
xchg
lds
fcom
dec
aad
lods
hlt
insl
incl
jno
pop
inc
js
mov
push
out
sbb
mov
add
popa
mov
add
inc
les
add
or
sahf
push
push
jbe
rorl
push
pop
fwait
pop
pop
pop
ficoms
xor
scas
cmpsb
and
notb
popa
pop
jo
sub
pop
or
in
adc
push
imulb
scas
clc
mov
fwait
ljmp
xor
lock
add
mov
inc
mov
mov
loopne
add
fbstp
xchg
outsb
pop
addr16
pop
movsl
lret
mov
repz
xor
sub
mov
in
mov
call
xchg
je
cmp
xchg
dec
pop
outsl
sbb
popf
rorb
stos
xchg
mov
mov
push
mov
lret
ljmp
xor
out
inc
adc
dec
mov
jecxz
mov
push
loope
cmp
dec
stc
push
and
stos
sbb
inc
push
xor
in
fcompl
or
jl
inc
jge
imul
cmp
shrl
test
aad
mov
ss
adc
dec
push
pop
sbb
cmp
mov
imul
stos
cld
daa
adc
bound
xchg
xchg
js
popa
add
lock
inc
push
loop
ja
lods
in
or
lret
mov
test
adc
in
in
mov
bound
inc
xchg
pop
fstpl
inc
in
inc
fdiv
cwtl
or
push
xchg
ja
lahf
push
sbb
or
mov
jmp
add
mov
fsubrl
imul
pop
fisttpl
adc
sbb
cwtl
lock
xchg
xor
mov
aad
sub
test
and
cmp
in
lahf
pop
fwait
imul
dec
xchg
fwait
mov
push
jl
xor
shl
dec
int3
mov
movsl
cmp
sub
push
sbb
lock
out
dec
mov
cmc
mov
adc
test
add
fadds
ret
pop
jle
push
xor
xchg
xchg
sbb
lcall
and
xor
sbb
fwait
or
aas
or
xchg
push
adc
adc
cmp
sbb
mov
repz
aaa
and
or
sbb
sub
or
add
fsubrs
imul
pop
imul
add
xor
in
push
inc
test
cld
mov
daa
ret
pop
stos
scas
push
cmp
dec
loope
jnp
movb
and
scas
dec
mov
ret
aaa
test
dec
add
fnstcw
cltd
fucomip
pop
fdivrl
push
jle
cmp
add
pop
imulb
mov
lret
xchg
or
data16
adc
scas
lahf
iret
pusha
mov
addr16
and
jmp
in
fwait
mov
lock
into
or
cmpb
js
sub
jg
inc
add
rorl
sbb
push
inc
xor
imulb
je
dec
adc
lds
pop
std
mov
repnz
hlt
test
push
sbb
lds
outsl
adcl
sub
dec
and
mov
shll
imul
mov
add
ret
inc
int
xor
movsl
xchg
ret
inc
xchg
addr16
jbe
xchg
daa
inc
mov
fldl
sub
adc
out
push
dec
pop
loop
push
idivl
stc
pop
dec
mov
ds
jno
scas
mov
push
sub
add
in
in
xor
mov
dec
push
daa
jmp
cli
cmp
es
mov
bound
mov
sub
arpl
lods
xor
and
cmp
or
xchg
add
mov
mov
pop
iret
xor
repz
lahf
arpl
mov
mov
loopne
popf
pop
xchg
daa
outsl
imul
repnz
sub
push
in
fs
dec
xor
mov
loope
cltd
jmp
aas
pop
sub
jnp
or
in
lods
mov
sahf
jne
push
xor
adc
push
shrl
xor
hlt
dec
jb
test
sbb
lret
cmpsb
mov
adc
pusha
mov
test
mov
lahf
insl
mov
aam
sbb
mov
out
or
jnp
popf
sarl
cmp
flds
or
shlb
fcoml
mov
xlat
fwait
aas
adc
fsubs
stc
xor
sbbl
push
je
jmp
mov
cmp
jg
cmp
lcall
push
mov
push
cs
fbstp
cmp
push
cmpsl
loop
cmp
mov
addr16
xor
pop
hlt
pop
into
jl
cltd
push
and
cltd
cmp
dec
xor
xchg
loop
push
rcrb
adc
push
dec
inc
rol
addb
sub
sbb
data16
ja
and
iret
outsl
dec
push
cmc
bsr
and
pop
fimull
xchg
mov
cmp
les
sbb
lods
pushf
xchg
push
shl
bound
jo
jne
ret
pop
jmp
mov
arpl
popl
loopne
imulb
mov
je
and
pop
fs
pusha
xor
shr
lahf
cmpb
ljmp
fs
pop
test
xlat
mov
pushf
cmp
or
adc
cli
mov
mov
out
inc
cli
ds
bound
out
jns
cmp
push
and
push
hlt
fcmovnbe
xchg
pop
push
add
jecxz
in
rcrb
lods
out
mov
xor
mov
cmpsl
dec
js
cmpsb
ret
pop
sbb
and
dec
adc
dec
lahf
xor
popa
cld
and
test
outsb
inc
test
and
stos
push
cmpb
call
outsl
lret
mov
jae
sbb
stos
sub
push
jg
and
rorb
negl
scas
enter
pop
and
addr16
mov
xlat
cltd
and
pop
ja
mov
leave
aad
ficompl
cwtl
jns
jbe
andb
clc
adc
jle
push
cld
pop
xchg
shrl
push
testl
cmp
and
adc
sar
insl
mov
call
idiv
jmp
jbe
js
lds
mov
cmpsl
into
jnp
sti
lcall
inc
int3
fnsave
data16
cmpsl
test
fidivrs
sbb
jge
push
sub
loop
div
dec
rorl
mov
lock
push
pop
xor
or
test
jne
lock
adc
and
and
push
cmp
xor
pop
dec
rolb
and
xchg
mov
hlt
rcrl
mov
les
clc
flds
rclb
sbb
jg
mov
jo
in
jl
mov
cmp
test
mov
dec
outsb
outsb
lock
int3
push
pop
sbb
aaa
jae
sub
rorl
in
push
test
fcomps
pop
andb
mov
sbb
sub
insb
jp
xchg
inc
imul
dec
push
les
mov
sbb
or
sbb
test
scas
gs
jge
push
int3
ret
mov
fs
cld
and
fs
dec
lods
and
movsl
push
dec
cli
xlat
decl
xchg
scas
adc
push
sbb
sbb
sti
rorb
add
mov
mov
mov
aaa
stc
mov
mov
andb
pop
adc
std
das
cmp
sbb
gs
data16
adc
push
in
jl
out
push
inc
cmp
lret
mov
sub
push
shlb
adc
sbb
in
int
mov
es
aad
xchg
mov
arpl
adc
mov
lds
and
jnp
aad
cli
xchg
repz
xchg
ljmp
loopne
nop
add
imul
in
inc
jg
fcmovnb
adc
add
jp
mov
icebp
enter
and
adc
inc
cmc
sub
filds
mov
mov
sub
ja
xor
lahf
ds
rolb
xchg
addr16
pop
sbb
xor
dec
pop
mov
std
lahf
sbb
call
jae
push
push
fsubrs
mov
jno
mov
add
call
jb
add
mov
lret
xchg
lods
test
sub
jg
dec
dec
xchg
lods
cwtl
sub
add
jle
aam
adc
andb
imul
das
push
jge
mov
insb
or
aam
jnp
out
sbb
jecxz
dec
repnz
shlb
sbb
iret
in
pushf
pop
sub
jl
jg
rcrb
push
adc
dec
loopne
sub
mov
addr16
mov
jmp
push
and
sub
push
mov
or
adc
inc
std
sub
sub
aam
cmc
jl
push
jbe
sahf
mov
mov
dec
rorb
pop
das
xor
xor
ja
lods
dec
add
fisttps
jns
enter
in
inc
adc
insb
div
lock
lahf
xor
subb
fdivp
pop
push
push
mov
add
out
cmc
xchg
dec
mov
fidivrl
mov
divb
xchg
sub
scas
mov
xchg
mov
les
out
sub
adc
jb
jns
out
cli
jge
and
in
cwtl
cmp
xor
xchg
inc
call
fimuls
xor
push
sahf
or
mov
push
cmpsl
out
cmp
dec
pop
fdivrs
imul
stc
notb
popa
je
xorb
adc
mov
test
jb
test
inc
movsl
mov
lcall
cs
and
movsb
push
sbb
adc
adc
cmp
adc
fs
pushf
sbb
mov
xor
push
scas
push
bswap
insb
push
push
cwtl
cmp
mov
and
push
add
arpl
xlat
stos
cmpsl
xor
pop
pop
sbb
movsl
inc
mov
jg
push
mov
adc
xchg
leavew
mov
loopne
das
xor
sbb
sbb
pop
adc
xor
xor
lock
pop
cs
cmp
mov
aas
cmpsb
popa
push
xchg
cmp
cli
lea
or
cmp
lret
add
sahf
call
jae
test
stos
lods
mov
loope
addb
lret
inc
sub
ja
adc
loope
sbb
dec
inc
push
mov
cmp
mov
adc
rorl
dec
and
sub
sysexit
sahf
mov
dec
outsb
imul
leave
mov
lea
mov
jl
test
ja
sbb
jbe
pop
xor
push
xor
stos
inc
lret
fldl
scas
pushf
pushf
sbb
add
cmpsb
inc
out
push
inc
popa
xchg
imul
and
push
shll
jnp
scas
xchg
gs
insb
mov
stc
jo
push
or
or
inc
xor
test
mov
sub
cmpsb
negl
lret
loopne
cs
insl
sub
inc
rorl
cmp
jmp
sahf
or
jmp
cmc
popa
jge
jae
mov
hlt
pop
and
mov
sbb
xor
sub
or
js
imul
push
leave
mov
fistl
jge
mov
cs
adc
add
push
in
in
jmp
mov
or
jg
leave
jns
jecxz
adc
ficoml
loope
add
dec
mov
stos
push
push
or
addr16
cmc
sbb
pop
lahf
cltd
inc
sahf
and
lods
jo
cmp
pop
rolb
outsb
and
mov
lahf
test
int3
adc
and
test
xor
out
sbb
daa
mov
dec
xor
repz
cmc
jns
lahf
shlb
ret
lcall
xor
pushf
pop
dec
ret
push
cmp
aas
cmp
stos
mov
insl
stos
mov
cmp
rep
shrl
sarl
xchg
icebp
jp
gs
lods
insl
loopne
pop
xchg
xchg
test
fs
int
xchg
pop
je
cld
imul
inc
push
push
aad
inc
ljmp
mov
add
jnp
mov
loop
pop
mov
mov
scas
pop
rcrb
std
mov
mov
adc
pushf
push
sbbb
and
pop
mov
mov
repz
repnz
mov
dec
repz
mov
mov
adc
movsl
ds
jge
ljmp
lea
divl
xchg
lcall
aad
adcb
mov
mov
jge
movsb
push
sbb
pop
cmp
inc
sub
push
negl
lods
jge
push
mov
sar
aam
pop
pop
or
xchg
cmp
and
xor
ret
inc
addb
mov
movsl
fidivl
push
pop
cmpsb
mov
push
orl
out
jmp
jbe
stos
test
outsb
xchg
sbb
inc
cs
ds
dec
in
jb
mov
xchg
shrb
inc
lret
push
divl
ss
pop
ficomps
repz
mov
mov
pop
fwait
inc
push
mov
fstpl
iret
inc
les
xorl
insb
sub
ljmp
dec
xchg
ficoms
mov
ret
out
mov
mov
lods
rclb
pop
mov
push
mov
push
fwait
pusha
cmp
stc
add
pop
ljmp
gs
movsb
ss
aas
rcrb
mov
add
mov
xor
mov
jp
xchg
test
mov
ds
sub
cmc
sbb
mov
mov
mov
int3
add
in
cmp
or
sub
dec
test
imul
ret
mov
in
shlb
int
xchg
or
mov
out
jle
jo
mov
clc
outsb
jle
pop
add
or
sub
sbb
aas
mov
fsubl
vphaddbw
sub
mov
cmp
dec
push
pop
mov
xchg
and
test
outsl
fidivl
nop
sub
nop
ret
add
fwait
addr16
stos
out
mov
or
in
es
test
jbe
xor
test
aas
pop
push
ljmpw
icebp
mov
or
add
xor
call
sbb
out
mov
sub
push
ficomps
mov
jo
pusha
push
jp
hlt
mov
pusha
lret
sti
add
add
mov
pusha
pop
push
je,pt
or
loop
mov
adc
sub
repnz
dec
cmp
or
subl
xor
dec
icebp
dec
cmpsl
ss
dec
pushf
data16
fdivrl
sbb
test
mov
cmp
sbb
adc
sub
mov
mov
adc
cwtl
push
sahf
sub
cltd
out
popa
dec
cmpsl
lock
xchg
sar
cmpsb
adc
push
xchg
pusha
cwtl
mov
lahf
and
lods
push
lods
ljmp
xchg
aas
mov
inc
pusha
push
cmpsl
mov
adc
add
mov
mov
aaa
sub
fistl
add
shlb
test
push
aas
mov
mov
add
jp
gs
adc
leave
inc
out
xchg
ds
pusha
shrb
jecxz
repnz
cmp
mov
imul
insl
nop
inc
mov
dec
ljmp
lods
loope
ja
dec
pop
aad
enter
jae
adc
mov
sub
push
xor
sbb
mov
test
dec
lods
fildl
inc
dec
cmpl
rclb
mov
jnp
cmpl
addl
push
cltd
mov
cmp
test
roll
andb
mov
sub
mov
cmp
hlt
cmpsl
fs
cmpsl
sub
push
clc
fldcw
fimuls
xchg
sbbb
and
push
stc
mov
sub
std
out
outsl
inc
cmp
mov
pop
addr16
faddp
rcll
ss
push
or
add
js
cmpb
lret
adc
shrl
rclb
ds
add
jbe
push
int
gs
cmc
in
outsb
xchg
pop
cmp
pop
dec
push
leave
cs
xchg
and
ret
cld
pop
lods
ss
mov
pop
andb
cmp
add
imul
loopne
shll
cmp
scas
inc
add
leave
cmp
sbb
jecxz
xchg
imul
push
movsb
pushf
mov
rclb
push
cmc
fsubs
stos
cmp
shl
adc
and
outsl
iret
cmp
sub
das
sub
testl
test
movsl
xchg
lock
and
je
mov
fcomp
flds
dec
jl
cmp
inc
and
or
lods
cmpsl
das
jle
mov
adc
cltd
and
jno
les
mov
insb
push
dec
sbb
xchg
lret
mov
cmpsb
dec
xchg
xor
repz
pop
or
outsb
loopne
xor
pop
add
in
into
rcll
dec
loop
inc
inc
mov
cmp
rcrb
sbb
fwait
jae
sub
or
call
repz
push
lds
cmpsb
std
mov
xlat
jnp
xor
stos
outsb
and
decl
push
dec
xchg
xchg
aas
add
lds
sahf
clc
sarb
or
pop
inc
mov
fisttpl
pusha
push
loope
jne
dec
push
jg
addr16
in
add
mov
and
and
int
in
push
je
cmp
std
mov
or
dec
inc
cmp
out
add
stos
xor
stos
mov
mov
and
pop
pop
push
mov
jp
imul
cmp
mov
or
push
fistpl
filds
xchg
cmp
loopne
inc
pushf
rclb
out
pop
mov
mov
jmp
xchg
dec
sub
es
jbe
dec
lcall
jns
cmc
jle
fdiv
aaa
shrb
cwtl
aaa
fwait
inc
mov
pop
aaa
rcl
rolb
popa
sbb
jbe
scas
mov
in
aas
mov
pop
mov
daa
xchg
loope
xor
mov
jne
ficomps
andb
push
into
stc
pushf
xchg
cmp
jns
pushf
out
test
jne
es
lods
jnp
call
xor
xchg
addr16
sahf
cmp
dec
mov
sub
rol
dec
and
pop
cmp
test
xchg
inc
nop
lods
push
sbb
mov
sub
popa
testl
clc
sub
enter
popa
popa
and
add
scas
je
mov
sub
mov
shlb
adc
dec
push
mov
xchg
mov
sub
push
mov
mov
dec
xchg
daa
pop
pusha
push
rcl
mov
jae
push
jb
aad
rcl
xchg
pushf
sub
stos
mov
aad
sub
sub
xchg
cmpl
decb
stos
pop
loope
push
sbb
push
jno,pn
push
out
daa
adc
jge
stos
popa
add
jo
push
arpl
mov
adc
arpl
sub
or
xor
notl
or
repnz
outsl
clc
mov
shr
xchg
jecxz
ss
mov
mov
je
es
jmp
daa
adc
repnz
mov
outsl
xchg
pop
dec
lret
push
ret
ret
mov
sub
sub
repnz
je
into
addr16
divb
cmc
and
jae
nop/reserved
aad
ljmp
and
leave
cmp
pop
inc
fsincos
mov
out
inc
in
stos
mov
xor
pop
or
gs
iret
and
push
gs
xor
int
ret
jle
out
add
int
and
mov
jns
fistps
mov
dec
push
rcrb
jp
cmp
test
inc
divb
imul
ret
test
fcoml
std
and
aas
in
addr16
dec
fwait
aam
sub
cwtl
xchg
cmp
mov
adc
dec
lahf
xchg
push
push
pop
ljmp
mov
push
xchg
clc
mov
loope
dec
inc
in
nop
xchg
xchg
dec
loop
xchg
mov
cmp
cmp
and
jmp
js
sub
gs
pop
push
lahf
stos
mov
push
in
mov
aas
mov
stc
add
popl
arpl
gs
iret
mov
data16
jnp
jle
cltd
pop
shl
dec
pop
jnp
xor
and
dec
int
adc
adc
cmp
pop
mov
out
fsts
xor
out
pop
lret
mov
sub
ss
mov
out
ljmp
movsl
inc
ror
inc
das
hlt
loope
repnz
aas
push
add
pop
aaa
fsubp
or
js
lret
cld
cmpsl
jecxz
outsb
test
leave
out
rcll
xchg
adc
add
xchg
in
or
stos
lods
div
shrl
push
xlat
sbb
je
inc
int3
les
mov
mov
pop
push
leave
lea
sbb
aaa
sbb
mov
sbb
inc
pushf
stc
cmp
popw
xchg
add
icebp
and
dec
fs
mov
nop
stos
pop
gs
jg
out
and
rol
adc
dec
addr16
push
adc
hlt
into
into
xchg
push
adc
scas
in
gs
add
add
aam
lods
push
add
into
ja
std
testl
into
adc
lret
or
pop
dec
push
mov
das
cmp
mov
add
shll
sub
mov
stos
arpl
sub
pop
and
push
daa
inc
mov
inc
dec
xchg
mov
jl
mov
out
jb
xor
lret
fcomps
mov
stos
sub
xor
and
das
xchg
dec
jp
pop
mov
xchg
jno
enter
int
decl
fwait
push
fadds
push
test
into
aam
add
jo
sti
sti
lock
adc
jns
pusha
and
aaa
lcall
dec
call
mov
jl
or
xor
dec
pop
cmpsb
push
mov
mov
sti
stos
outsb
stos
inc
pusha
cmp
xchg
xchg
or
rcrl
cmpsl
push
sub
sub
mov
adcl
call
popf
cltd
mov
enter
dec
mov
popf
sahf
dec
cwtl
mov
popf
fsubs
jle
loopne
dec
iret
jae
cltd
fdivrs
fs
cli
xor
mov
pop
icebp
xor
pop
test
mov
arpl
mov
out
sbb
andb
out
out
inc
add
ljmp
out
arpl
and
jne
and
mov
pusha
push
mov
inc
pop
les
pop
subl
pop
in
push
and
push
popf
add
test
and
movl
xor
cmc
pop
test
mov
lods
or
sbb
sub
lret
lcall
cmpsl
repz
popf
push
cmp
sbb
shlb
hlt
mov
jmp
lret
sub
xor
rolb
pusha
or
inc
dec
xchg
je,pn
aad
in
lds
js
pop
push
flds
jo
xchg
inc
pop
fwait
cmpl
dec
xor
enter
jle
nop
je
pop
push
pop
add
cltd
or
into
sub
mulb
nop
std
shlb
mov
push
lret
popf
xchg
fld
pop
cmp
push
into
in
lcall
dec
test
jmp
idivl
test
and
inc
sbb
pop
repz
push
faddl
in
or
pop
popf
jbe
pop
mov
inc
push
pop
scas
filds
in
out
pop
mov
push
bound
fs
cmpl
add
push
cmp
ja
dec
in
and
dec
or
jg
cmp
testl
iret
rcrl
pop
push
dec
inc
cmp
jmp
fsin
lock
in
addr16
je
andb
pop
aaa
push
dec
add
cmpsl
cmc
scas
push
sbb
push
not
cmp
xchg
inc
dec
mov
nop
inc
and
outsl
cltd
sub
rcrl
idiv
sbb
rcl
addb
sbb
pop
mov
mov
ficomps
pop
testl
ljmp
arpl
pushl
call
ss
xor
adc
std
bound
clc
add
xor
push
leave
sub
sub
sarb
in
dec
mov
or
mov
push
push
jl
mov
repnz
cld
and
jp
in
add
push
push
insl
sbb
rorb
jb
loopne
mov
pop
lock
jecxz
pop
push
jo
jmp
repz
xchg
pop
lds
sbb
cmpsb
sbb
cld
cvtps2pi
lret
dec
pop
jmp
jge
test
in
jl
cmpl
out
xchg
iret
dec
dec
iret
jne
mov
shrb
pop
jbe
inc
out
ds
ficoml
scas
inc
and
xchg
fsubrl
das
lods
add
shlb
mov
imull
mov
xchg
jle
inc
sahf
bound
mov
sbb
inc
add
imul
test
pop
repz
or
jb
inc
hlt
repnz
and
jle
push
fldt
aaa
mov
jge
stos
pop
sub
sbb
mov
lds
xchg
pop
mov
ror
mov
push
pop
adc
xor
icebp
xor
and
pop
mov
cmpsb
aaa
sbb
xchg
sbb
mov
fidivrl
cltd
int
cmp
icebp
mov
mov
stc
es
mov
stos
add
in
mov
mov
in
sarl
inc
lret
mov
and
pop
mov
mov
or
insb
loope
lcall
pop
test
scas
les
inc
xchg
iret
repnz
push
call
imul
push
jle
jno
cmp
in
dec
jne
mov
jmp
mov
movsb
call
les
loope
in
xor
test
add
insb
hlt
nop
jg
dec
pop
insb
sbb
rcll
and
and
pop
rcl
jb
pop
and
mov
and
and
pop
mov
rorb
fdivrl
sbb
xchg
or
cmp
call
sbb
das
idiv
ss
push
xor
dec
js
add
inc
lods
lret
lods
cmp
jecxz
das
jb
mov
clc
pop
in
cld
cmp
imul
movsl
mov
pop
in
negl
add
into
inc
prefetcht2
pop
jecxz
cmp
outsl
gs
loope
xlat
jmp
push
rcrb
clc
rcrl
test
cmp
mov
movsb
jne
sub
inc
loopne
cmp
bound
inc
xchg
xchg
out
repz
cmp
fisubrs
out
adc
lret
andl
lret
vpshaw
nop
fdivrp
stos
push
pusha
xchg
dec
mov
push
das
addl
pop
pop
push
loopne
sbb
xchg
push
xor
lods
icebp
hlt
dec
push
inc
push
loope
mov
hlt
popf
jmp
add
and
jb
pop
in
dec
aam
shl
cli
cmp
mov
fldl
test
decb
jne
mov
outsb
cmc
movsl
inc
push
mov
mov
imul
jns
insb
mov
dec
iret
je
mov
int3
xchg
lea
inc
insb
jne
mov
mov
adc
andb
jns
push
xchg
ss
rcr
jge
sub
sti
xchg
fnstsw
jmp
adc
lods
jo
lcall
jo
out
sub
nopl
mov
imul
loopne
cmp
clc
movsl
sbb
adc
mov
pushf
lods
cmpsl
lret
push
ficoms
mov
into
xchg
mov
repnz
pop
cmpsl
sub
popa
pop
mov
insb
es
hlt
dec
mov
push
pop
stos
mov
jmp
sub
push
add
mov
int3
pop
jge
pop
pop
rorb
sbb
jp
pop
xor
push
jb
test
dec
cmpsb
or
mov
lock
in
pop
dec
xchg
clc
std
mov
xlat
dec
es
in
ret
andl
movl
loope
xor
lods
pop
shl
jae
jle
es
lea
push
not
push
std
push
jp
lds
pop
movsl
push
popf
fnstcw
sbb
jmp
or
insl
add
ret
stc
xchg
fucompp
insl
in
or
shlb
dec
int
pop
std
sub
lock
push
or
mov
ss
or
and
mov
cmc
ret
lahf
scas
dec
arpl
and
jo
aam
mull
stc
xchg
pop
xchg
iret
out
jl
lock
jmp
sub
mov
test
fldcw
add
cmp
pop
cltd
movb
push
add
inc
add
adc
ficomps
bound
mov
mov
sbbl
cmp
push
dec
mov
dec
mov
mov
fsts
dec
mov
sbb
ja
ret
xchg
adc
insl
jp
mov
or
mov
add
cmc
add
sbb
fsincos
jle
adcl
ja
inc
push
mov
xchg
add
add
aas
hlt
inc
jb
push
outsb
xor
loope
dec
xor
adc
loopne
mov
cmpsb
cmpsb
xor
and
aaa
ljmp
dec
or
shlb
stc
pop
pusha
loop
cmp
mov
jmp
call
loop
and
jge
cmp
dec
xchg
daa
jne
jo
push
mov
lcall
xchg
ret
sbb
or
outsl
addr16
sbb
jns
shll
mov
mov
shll
xor
and
adc
push
add
dec
lcall
adc
pop
aaa
xor
mov
cmc
in
icebp
mov
xorl
jo
dec
pop
xor
stos
jmp
inc
shrb
adcl
xor
dec
loope
scas
sub
lahf
data16
addl
or
test
fmull
dec
clc
inc
je
lahf
mov
sub
jmp
insl
sub
fcmovne
and
lock
inc
mov
aad
push
xchg
lods
fwait
call
mov
push
out
mov
fs
and
jmp
adc
mov
aas
xor
stc
adc
adc
mov
mov
xor
or
xchg
add
aam
in
aam
stos
pop
nop
pop
mov
cs
std
inc
xchg
inc
lds
popa
ds
sbb
xor
or
mov
pop
mov
push
ror
jmp
rolb
xor
push
loope
outsl
pop
ljmp
fptan
icebp
cld
xchg
pop
mov
loope
mov
mov
leave
and
sti
in
and
stos
sub
push
jp
xchg
dec
pop
xchg
add
imulb
dec
mov
loop
std
mov
cmp
inc
mov
jge
pusha
loope
pop
fucomip
out
lret
pop
lret
in
cmpsl
sub
aad
push
out
ljmp
and
xor
sbb
push
mov
lcall
into
xchg
scas
icebp
imul
ret
cmp
rcrl
push
scas
push
sub
jns
pop
mov
icebp
adc
ja
fisubrs
xor
test
jg
adcb
or
enter
ret
pushf
call
test
mov
add
xchg
std
icebp
loop
jns
xchg
hlt
aas
mov
jbe
and
add
les
or
jg
add
and
mov
lahf
shlb
dec
inc
dec
jle
idiv
add
pop
movsl
cmp
sub
mov
add
xchg
lods
shll
das
xor
xchg
add
inc
push
xor
popa
push
dec
insb
mov
mov
mov
xorb
inc
inc
popa
lock
orb
or
test
jbe
rorb
jecxz
fwait
jns
mov
cmp
cmp
int3
shlb
xchg
mov
pop
loopne
xor
je
and
jae
mov
sub
mov
push
cmpsl
cwtl
andl
xchg
aaa
xchg
fildll
shrl
and
sub
jo
sub
imul
and
xor
pop
add
fucom
test
mov
nop
fidivrl
and
pcmpeqw
movb
js
imul
out
shrb
pop
lods
mov
and
shrb
stos
jae
mov
outsl
add
or
cmp
frstor
repnz
xor
sub
mov
inc
fsts
mov
aas
inc
cmpsl
shll
in
insb
jmp
imul
dec
dec
sbb
pop
add
push
mov
mov
daa
xor
scas
sahf
pusha
xchg
fdivs
xor
add
push
or
adc
gs
inc
subl
and
aam
or
pop
stc
inc
outsb
mov
sbb
jae
mov
jo
rcll
jno
mov
pusha
sarb
repnz
mov
inc
dec
mov
in
and
outsl
hlt
ror
inc
mov
cmp
xchg
jnp
mov
and
push
cmp
leave
fiadds
push
int3
xchg
mov
sbb
mov
in
jb
xchg
fdivrs
outsl
inc
jl
sbb
int3
mov
cmp
loope
lock
jns
repnz
inc
mov
jmp
cwtl
sbb
xor
movsl
pusha
aaa
loopne
aas
out
and
lods
bound
sbb
mov
mov
pop
lock
xor
mov
xchg
jle
ds
push
xor
adc
and
call
jnp
insl
cltd
xchg
jns
fistps
int
sbb
inc
notb
dec
and
inc
push
mov
lock
add
xlat
dec
push
cmp
loop
and
hlt
cmpsl
pop
adc
fsubr
push
push
xchg
sbb
imul
sbb
into
das
and
sbb
xlat
mov
sbb
pop
in
pop
add
mov
nop
in
shll
mov
pop
cmc
xchg
aam
fisttpl
cmpsl
lods
inc
xchg
jmp
dec
cltd
xchg
sub
lahf
orl
dec
mov
movsb
jb
scas
ljmp
sub
mov
xor
and
mov
out
xor
jle
decb
loop
cmp
mov
xor
ss
pop
adc
aas
stos
clc
ja
dec
dec
fwait
adc
int
mov
bound
pop
and
jp
sahf
mov
out
mov
add
je
test
addr16
pop
je
xchg
inc
pop
daa
sbb
mov
and
aam
cmp
jecxz
aad
mov
loope
sub
sbb
cmp
ljmp
adc
sbb
mov
rorb
je
push
movsb
mov
xor
insl
fildll
aas
fists
xor
test
jecxz
jle
add
push
sbb
mov
fdiv
jle
nop
inc
xchg
add
ss
out
push
cmc
sub
nop
inc
mov
push
es
add
push
insb
or
outsl
test
xor
push
sti
inc
xchg
mov
lcall
xchg
lcall
push
nop
cmc
mov
cli
lcall
into
jmp
jmp
scas
shll
into
mov
mov
cli
shl
inc
stos
sub
mov
mov
jmp
inc
mov
movsb
jecxz
into
xchg
ljmp
sub
pop
add
stc
iret
add
and
enter
cmp
xchg
push
mov
pop
inc
inc
lahf
or
bound
cmc
mov
ss
or
jbe
jbe
mov
pop
push
stos
and
arpl
pop
add
out
pop
cmp
notb
inc
xor
mov
cs
and
push
inc
sub
jp
and
add
mov
mov
sarb
push
js
je
pop
and
xor
js
ret
lret
cwtl
mov
and
loope
jb
jae
and
cmpsb
rcrl
push
sub
test
sbbb
pusha
lods
scas
mov
ss
mov
mov
loope
aam
mov
mov
xchg
cmp
dec
popa
mov
lcall
mov
popa
subl
push
jne
jno
adc
jmp
add
and
xchg
pop
jbe
jnp
xor
aam
daa
ret
mov
mov
dec
pop
stos
sub
addr16
shll
mov
push
sbb
mov
addb
flds
stos
sub
cltd
fidivrs
pop
push
jbe
xchg
mov
adc
ss
pop
adc
adc
pop
pop
repz
dec
out
incb
loop
add
cli
in
aaa
pop
jg
mov
ja
mov
mov
cmp
xchg
push
or
xor
adc
outsb
fidivs
scas
jge
or
dec
push
gs
inc
inc
dec
adc
mov
jl
dec
mov
push
bound
xor
dec
or
insb
pop
je
fwait
add
insb
pusha
loope
adc
pop
jle
cmpsl
shll
mov
sub
enter
fbstp
movups
icebp
arpl
ss
sti
mov
mov
loop
push
out
mov
jae
loope
inc
jmp
push
cltd
pop
mov
mov
mov
out
dec
inc
inc
negl
dec
ja
xchg
movsl
in
shlb
inc
imul
loop
mov
icebp
fdivs
sub
inc
jae
xor
push
add
repz
add
sub
adc
lea
or
cmp
test
loopne
add
pop
aam
add
mov
aad
imul
jp
and
sahf
cmc
movb
dec
xchg
scas
jl
add
add
inc
loope
or
pop
imulb
fsubs
lret
xor
outsb
pop
mov
push
sbb
or
jmp
xor
pop
hlt
dec
and
outsb
or
push
daa
xor
dec
push
inc
divl
aaa
stos
sbb
xchg
neg
icebp
dec
arpl
mov
xchg
mov
mov
shll
ljmp
jns
xchg
jmp
push
pop
sbb
pop
xchg
jb
fildll
sbb
adc
inc
adcb
push
push
mov
aad
pop
mov
popl
leave
mov
sbb
scas
movsb
push
shrl
movl
pop
cs
int
inc
xor
sub
mov
push
adc
mov
cmp
cmp
shlb
mov
mov
jo
mov
push
xorb
mov
or
cwtl
es
in
out
nop
jl
fs
sub
xchg
hlt
mov
insb
ja
mull
mov
cmp
repz
jno
nop
out
push
or
call
push
in
enter
mov
jnp
xchg
sbb
lds
movsl
push
cltd
arpl
pusha
ret
mov
out
sub
push
push
inc
push
jo
lret
in
neg
and
sub
mov
popa
xchg
scas
scas
pusha
xor
sbb
insl
jns
jo
cwtl
inc
mov
pop
icebp
es
mov
mov
gs
or
sub
jge
cli
imul
fisttpl
mov
dec
or
movsl
clc
hlt
mov
int3
pop
scas
flds
aad
es
aas
add
dec
jg,pt
push
repnz
xchg
jae
fcompl
cld
xlat
scas
add
lods
adc
mov
addr16
imul
nop
sub
add
xchg
xchg
shlb
or
cmp
pop
sbb
and
and
icebp
aaa
sbb
movsb
and
sbb
lahf
or
add
lea
outsb
jle
ds
adc
sub
pop
test
inc
push
lea
pop
adc
lea
shl
mov
ss
sbb
daa
mov
push
inc
cmpsl
mov
loop
loopne
mov
fbstp
test
push
xor
and
push
jne
push
push
xlat
mov
mov
call
jae
roll
sbb
add
ja
xchg
adc
xchg
mov
imul
push
adc
mov
fisubs
sub
jp
adcl
flds
cmp
ss
stos
cmp
aad
xchg
aaa
jl
pop
mov
push
push
push
cmp
cmpsl
or
hlt
and
cmp
mov
pop
pop
xchg
dec
in
jg
mov
aam
test
pushf
mov
jns
mov
stos
into
xchg
lds
xchg
jne
scas
sti
xchg
in
xchg
scas
mov
mov
mov
push
sbb
mov
xchg
pop
loope
out
jne
out
loop
subb
mov
push
mov
movsb
push
nop
in
lods
adc
cmpsb
out
mov
xor
ss
movsl
push
dec
inc
aad
outsb
lods
and
aaa
mov
bound
dec
in
xchg
ror
xor
pop
jecxz
ljmp
mov
and
cli
jg
jnp
lea
pop
lret
push
shr
add
movsl
inc
or
push
addps
orl
mov
sarb
ss
push
cmpsb
arpl
test
add
addr16
cmp
ficomps
inc
pop
pop
cmp
cwtl
cmp
in
inc
jl
popa
and
xor
xchg
mov
test
jno
lcall
lods
movsb
out
pop
xor
inc
inc
stc
push
lcall
popf
ret
pop
and
mov
or
mov
sub
shlb
add
jo
inc
mov
jnp
cmp
in
dec
xchg
pusha
sbb
imul
mov
pushf
aad
dec
negl
xchg
jo
aad
insb
mov
jne
xchg
loopne
fwait
jle
or
incb
std
and
jno
jne
push
push
cwtl
rol
test
jnp
xor
out
adc
mov
pop
scas
xchg
lahf
mov
cmp
icebp
mov
ja
enter
scas
hlt
and
shrl
xchg
jns
lret
pop
je
pop
mov
imul
push
aad
add
in
mov
je
aam
and
insl
inc
sbb
xor
dec
dec
or
cmc
outsl
enter
jne
out
stos
and
mov
lock
jne
addb
cmpsb
loope
movsl
rolb
dec
mov
icebp
clc
jbe
dec
xchg
frstpm(287
fistpl
lods
cmp
lcall
dec
dec
jns
sub
sbb
cld
call
lods
cmpsb
xor
cmp
rcrl
loope
fisttps
inc
dec
jae
mov
clc
dec
mov
fldt
neg
sbb
sbb
add
js
pop
pop
mov
sbb
dec
inc
cmc
mov
xor
dec
int3
mov
dec
dec
clc
adc
sbb
frstor
dec
or
icebp
cmc
jle
cmpsl
pop
mov
fwait
mov
lcall
push
int
shrb
test
gs
sti
ja
ret
scas
push
dec
and
data16
idivb
gs
mov
mov
repnz
jne
adc
dec
cmp
les
je
or
into
xlat
mov
dec
dec
out
push
lock
mov
sbb
js
sarb
jg
mov
push
mov
push
ljmp
out
test
iret
lock
or
cmp
loopne
aam
test
arpl
adc
sub
pop
push
cmpsl
loope
push
and
add
or
dec
andb
in
std
jae
mov
cli
iret
mov
inc
or
add
mov
adc
roll
loopne
cmp
cmp
popl
push
inc
dec
xor
mov
and
push
pop
cltd
mov
mov
cmpsb
out
dec
loope
out
out
and
jmp
fmuls
lock
and
cltd
mov
fisubrl
sbb
roll
dec
pop
shll
cli
rcll
mov
pop
sub
das
sbb
push
orl
andb
cmpsl
bound
ja
fwait
or
inc
ja
xor
add
incl
pop
int
dec
cmp
sub
call
sub
add
xchg
dec
int3
push
in
push
popf
inc
push
push
adc
jl
addl
xchg
xor
push
mov
push
in
push
pop
jl
gs
movsb
mov
sub
enter
jl
xchg
inc
and
mov
rdmsr
push
shl
pop
mov
dec
jae
andb
mov
pop
mov
adc
sub
insl
in
es
push
push
add
cmp
jge
sbb
rclb
ret
cvtps2pd
dec
lock
mov
out
addr16
stos
outsl
mov
and
adc
movsb
aad
mov
fnstenv
popa
shl
das
push
ret
psllq
pop
add
mov
push
pop
xchg
lds
test
xchg
and
adc
adc
inc
aad
lret
push
jnp
lock
add
ja
call
xorb
sub
in
les
sub
dec
add
pop
push
scas
xor
test
mov
jbe
adc
sub
cld
std
pushf
xchg
in
cli
adc
fsts
adc
push
sub
sti
shll
xchg
inc
mov
dec
bound
jge
pop
mov
fdivs
lret
adc
mov
cmp
jg
enter
add
push
sub
adc
popf
lcall
sbb
mov
xchg
xor
es
add
lcall
lahf
ret
inc
jae
adc
aaa
pop
xor
or
pop
dec
sti
adc
sub
iret
repnz
xchg
jae
and
push
outsl
or
ss
jle
pop
sti
and
or
ss
call
ja
jl
push
ret
xchg
pop
xchg
outsb
lcall
hlt
enter
mov
mov
lahf
inc
mov
pop
rolb
cmp
jns
stos
xor
pop
nop
nop
xchg
xchg
fstpl
mov
frstor
stc
jp
inc
add
sub
mov
pop
dec
add
into
inc
mov
ljmp
adc
cli
sub
stos
sbb
pop
inc
jg
cmp
out
adc
jns,pt
adc
pop
cmp
add
and
push
and
add
jne
mov
adc
fdivs
pop
out
pop
xchg
mov
jle
mov
push
xor
cli
js
out
nop
mov
aam
pop
xor
push
testb
xchg
shl
out
pop
xor
cld
mov
lahf
adc
pop
in
xchg
add
pop
mov
jl
insl
mov
lods
push
dec
pop
call
aas
pop
jl
rolb
push
mov
mov
add
cmp
jno
add
movb
add
addl
lret
jmp
test
clc
push
xchg
pop
dec
imul
sbb
gs
mov
ss
ret
pop
adc
pop
lds
xchg
std
add
push
mov
mov
lds
mov
stc
dec
xchg
fbstp
cmp
lahf
sbb
jbe
int3
ret
lcall
ret
popf
lret
xchg
aam
ficompl
xor
mov
jne
adc
cmpsb
movl
sub
pop
add
aam
or
dec
hlt
mov
enter
outsb
dec
or
mov
pop
stos
push
inc
pop
push
cwtl
cld
scas
lcall
jmp
insb
or
dec
clc
xchg
pop
dec
mov
sub
scas
cmpsb
dec
dec
ss
mov
je
cmp
mov
sub
addb
aam
add
pusha
shl
or
push
pop
adc
mov
inc
sbb
fmul
cmpsb
rep
jno
jno
or
test
jae
jae
sub
or
enter
xchg
cmc
inc
mov
mov
sbb
test
push
lahf
lods
mov
subb
inc
stos
xor
lods
push
adc
rcrl
testl
push
in
outsl
jp
mov
cmp
sbb
int
enter
jb
jne
push
call
push
inc
sub
stos
loop
stos
push
decb
int
dec
ret
je
inc
cmpsl
add
inc
xchg
add
xchg
mov
adc
hlt
std
pop
push
call
add
insb
stos
test
mov
fisttps
inc
ret
imul
pop
mov
out
mov
xchg
cmp
mov
in
pop
jno
scas
xlat
mov
sub
push
sub
mov
adc
clc
out
inc
inc
imul
mov
outsb
cli
or
xchg
mov
mov
inc
push
das
jecxz
sub
push
imull
sub
scas
loopne
nop
pushf
mov
cmp
pop
xchg
push
shll
cmp
div
xor
mov
xorb
decl
aad
int3
jae
mov
lods
dec
stc
add
inc
pop
xor
cli
push
sub
cs
mov
push
pop
add
imul
mov
pop
movsl
xchg
jecxz
xor
inc
insb
call
jo
add
adc
lds
fidivrl
mov
cmp
fldcw
fimull
and
js
sahf
mov
imul
adc
out
addb
xlat
cmpl
push
outsb
inc
mov
sti
push
adc
adc
push
pop
ja
xor
push
mov
lahf
std
leave
adc
popfw
xor
xor
adc
fs
xor
dec
push
push
and
mov
int3
and
cmp
cmp
test
in
sbb
outsb
cmp
imul
mov
popf
mov
add
sti
outsb
xor
in
xchg
pop
addr16
fucom
data16
or
loop
and
lret
mov
iret
dec
mov
lcall
adc
mov
lods
or
inc
jb
idivb
lds
int
dec
pop
push
pop
mov
xor
in
jno
insb
and
inc
mov
imul
inc
shlb
add
aad
jo
loop
pop
sub
ljmp
dec
sub
aad
test
mov
dec
mov
imul
imul
test
or
mov
push
push
lret
mov
push
out
mov
sub
mov
repnz
sub
loope
leave
xor
mov
movsb
or
adc
cld
lock
mov
xchg
shrb
test
leave
or
cmpsl
or
xchg
push
jecxz
cwtl
and
inc
and
inc
mov
enter
jmp
mov
mov
inc
sti
sub
xor
mov
xchg
std
or
dec
xorb
mov
mov
xor
xor
push
pop
repz
mov
mov
pop
cld
and
inc
ds
mov
divb
fdivl
orl
pop
or
adc
adc
mov
add
out
mov
jecxz
pop
aad
pop
sub
pop
std
fwait
xchg
iret
loop
fs
les
fdivl
out
cltd
ficoml
mov
xor
push
call
jecxz
sub
push
pusha
popa
and
cli
adc
cltd
movsl
into
mov
mov
sbb
pop
ret
fnstcw
mov
fidivs
lods
push
xor
jnp
fnsave
sbb
mov
cmp
daa
in
jns
sbb
push
jno
notb
or
out
insl
ret
repnz
or
jnp
int
xor
loop
je
shlb
lods
ljmp
jle
lods
push
cmp
loop
dec
in
dec
aad
repz
mov
enter
push
repz
adc
outsb
mov
clc
xor
gs
sti
popa
test
push
push
xchg
xor
mov
into
popf
cmp
jnp
pop
add
push
aam
push
sub
lret
jnp
pop
inc
test
mov
sbb
push
movsb
aaa
xorl
ret
mov
lret
dec
fisubrs
push
dec
add
daa
loope
das
insl
imull
jo
cmp
mov
incl
pushf
add
aad
cld
pop
test
mov
pop
ret
mov
daa
bound
ljmp
mov
loopne
lahf
inc
sbb
popf
cmp
mov
sbb
sub
adc
mov
or
mov
sahf
xor
xor
xor
repnz
sbb
mov
jg
pop
in
aam
fsts
and
std
mov
sub
inc
movsl
fisttps
inc
xor
cld
inc
adc
mov
lret
movsb
stos
in
cwtl
gs
sahf
hlt
repz
aam
insb
jb
ss
mov
mov
mov
out
cmpsl
sub
hlt
ds
push
out
inc
mov
mov
mov
testb
std
jle
test
fwait
mov
js
outsl
jl
mov
mov
xchg
test
das
mov
aad
push
jae
stos
rolb
mov
fcomi
lock
mov
cmp
outsb
insb
push
shrl
adc
repz
mov
cwtl
xchg
sbb
pcmpgtw
lods
aam
loope
xor
fldt
mov
stos
xor
movsl
stc
test
dec
inc
sarb
loope
cmp
fsubs
xor
adc
movsb
pop
push
rcrb
aaa
leave
inc
jl
xlat
and
mov
lock
inc
aas
xor
adc
mov
adc
fiaddl
out
mov
pop
fwait
jbe
push
repz
inc
sbb
mov
pop
sub
mov
sbb
into
lret
lods
lcall
outsb
pop
inc
cmp
jg
push
imul
push
fwait
out
lea
jo
pop
loope
inc
lret
pop
add
test
cmc
push
push
jo
int
in
and
xchg
fistpll
mov
mov
sub
or
mov
insb
jns
idiv
mov
jge
mov
loope
mov
sub
je
nop
xchg
sub
test
inc
cltd
hlt
xor
pop
jo
sarb
push
and
daa
add
cmp
push
iret
pop
aaa
imul
and
lds
insl
jo
adc
outsb
clc
cwtl
lret
or
sbb
mov
xor
pop
mov
outsl
aam
popf
fistpll
outsb
std
sub
sub
in
xor
adc
jge
int
xchg
and
mov
int3
dec
pop
push
rcrl
xor
and
daa
leave
xrelease
jle
addr16
xchg
pop
sub
inc
dec
outsb
push
pop
add
mov
xor
or
mov
pop
mov
insw
pop
inc
push
rorb
cmpsl
cmpsb
incl
in
addr16
sub
roll
loopne
int
jbe
mov
insl
lea
or
ficomps
mov
or
pop
xchg
int3
lds
xchg
push
or
add
push
jnp
sub
fstps
pop
xchg
cwtl
repz
jge
mov
loopne
jo
nop
pushf
addr16
out
pop
out
jle
ja
lods
xchg
sub
in
adc
je
mov
push
inc
pop
in
rcrl
jg
stos
cs
pushf
fwait
repz
scas
out
cmpsl
testb
inc
test
jecxz
cltd
mov
xchg
outsl
fldenv
insl
and
mov
int3
sbb
in
test
push
dec
push
mov
mov
addl
push
cmp
mov
rcrb
xchg
fmuls
cmc
outsl
xchg
ret
mov
out
jecxz
jnp
adc
mov
js
jmp
jo
xchg
mov
add
stc
orl
shrb
jl
xchg
and
mov
dec
xchg
adc
out
dec
cmpsl
nop
mov
sahf
pusha
or
in
push
popl
aad
data16
add
adc
adc
mov
or
flds
loopne
fildll
int
lods
scas
ds
jne
fs
cmc
aad
sub
inc
call
stos
into
xor
int
aad
mov
inc
pusha
adc
and
insb
cmpsl
out
out
js
and
xor
imul
sbb
mov
stc
jb
mov
fdivr
daa
pop
push
dec
jno
sbbl
cmp
lds
xchg
dec
xor
and
mov
fsubp
pop
sub
mov
in
test
add
mov
imul
inc
out
test
dec
push
or
mov
test
daa
int
leave
loope
cmp
es
lock
jo
aad
pop
int3
loop
push
jne
mov
dec
hlt
out
out
cmp
lret
in
and
jp
jg
push
cmp
mov
call
iret
pop
dec
lock
aaa
pop
arpl
sbb
adc
incl
inc
lock
bound
dec
jg
cmp
aad
mov
fstpt
sub
push
movsb
movsb
xor
jae
xchg
mov
test
ret
iret
push
push
or
lahf
sub
jnp
dec
inc
mov
mov
xor
jge
subl
dec
mov
dec
rcrb
mov
cmc
sub
test
xchg
sbb
sub
out
icebp
insb
adc
pop
aad
sbb
sub
add
rorl
or
xchg
lahf
lret
pushl
mov
push
inc
mov
lea
jp
out
stos
and
lods
push
andl
dec
adcb
add
xchg
aam
pop
add
push
nop
repnz
leave
mov
inc
lret
pop
test
je
push
cmc
je
jle
das
jns
into
lret
mov
sti
adc
or
adc
inc
lcall
mov
pop
and
xor
repnz
cmp
pop
cmp
rcrl
cld
shrb
cmp
psrlq
xorb
push
xchg
xor
cmp
ret
test
dec
mov
fs
aad
or
js
adcl
dec
aad
fidivs
dec
int
jnp
aaa
ret
mov
push
arpl
inc
movsl
sahf
test
dec
adc
test
test
dec
das
fs
lahf
imulb
je
mov
loop
pushf
mov
shlb
pop
and
aas
gs
out
lods
mov
push
pusha
jnp
js
mov
pop
pop
sub
cmp
cmpb
out
test
popl
dec
scas
push
push
jno
inc
test
scas
insb
dec
inc
ss
inc
aas
inc
lods
sub
push
loopne
mov
jbe
or
push
aas
fisttpl
jb
jp
ds
or
sbb
out
movsb
mov
nop
aaa
inc
mov
mov
push
and
fists
push
inc
jmp
stc
mov
cmp
jmp
and
sub
pop
mov
std
dec
jecxz
or
out
inc
test
out
gs
lods
outsl
cmc
and
sub
jmp
bound
push
mov
decb
or
xor
adc
sub
out
push
push
sbb
cmp
xorl
mov
pusha
pop
data16
or
push
adc
fnsave
add
mov
mov
scas
out
add
pop
dec
sbb
rcll
cmp
mov
or
bound
sbb
sbb
sbb
lret
adcb
and
mov
pshufw
dec
test
or
xchg
mov
ret
jl
mov
pop
pop
iret
in
jne
and
mov
enter
inc
push
iret
popf
idivl
into
xchg
arpl
scas
stc
cmpsb
inc
adc
jmp
xor
pop
and
jl
sbb
or
subl
add
inc
or
inc
jge
mov
and
inc
sbb
inc
sbb
jle
sub
add
fiadds
add
nop
sbb
xchg
loope
mov
xchg
mov
dec
lea
mov
add
repnz
in
and
lds
ret
iret
dec
test
mov
cmc
into
mov
inc
and
je
bnd
jmp
pop
fcoms
pop
nop
push
cmp
ja
arpl
inc
into
push
lods
ljmp
cmp
pop
cmp
fs
inc
inc
mov
divb
and
cltd
cmc
xor
mov
test
lock
ljmp
mov
or
das
loopne
push
test
subl
mov
loopne
test
pusha
or
sub
xor
xor
pop
push
add
je
cmp
jmp
mov
aad
xchg
push
mov
leave
test
push
cmp
hlt
nop
cmpb
jl
inc
pop
mov
jecxz
sbb
ss
stc
mov
ja
sbb
mov
mov
rcrl
add
cld
sub
loope
add
pop
mov
sbb
daa
fstpl
dec
cmp
loopne
ss
mov
fimuls
pop
mov
iret
test
insl
loop
popa
pop
loopne
inc
mov
cmp
xchg
cwtl
int
dec
mulb
popa
ret
stos
sbb
shrl
arpl
mov
gs
add
stos
inc
mov
mov
or
add
cmpsb
adc
outsl
cmp
imul
push
lret
bound
mov
sbb
dec
xchg
mov
adc
adc
int3
mov
xchg
mov
rorl
popf
clc
push
test
mov
adc
ficoml
adc
xchg
mov
xchg
adc
popa
insl
pusha
stc
mov
lea
xchg
pusha
test
lods
imull
push
iret
push
shrl
cmc
push
or
in
repz
lods
or
sub
stc
sar
pop
decb
insb
test
push
testl
sub
dec
inc
dec
jno
test
adc
imul
aas
repnz
outsl
cmp
sbb
xor
lcall
js
xchg
jp
jge
insb
pop
in
push
daa
sub
loop
jae
popf
out
xchg
push
lea
lcall
jno
ljmp
mov
push
push
mov
ds
push
inc
orl
jl
pop
int
push
ret
xor
into
test
adc
in
mov
push
xchg
hlt
fisubrl
jo
pusha
pop
mov
sub
stc
call
lock
lcall
outsl
sbb
aam
divb
ret
lret
push
cli
into
jecxz
clc
mov
sub
movsl
fs
das
cmp
adc
sub
repz
push
rol
add
adc
in
jmp
push
mov
fdivl
nop
jp
in
sub
insl
dec
mov
add
cmp
stos
cmp
popf
and
jge
inc
adc
push
ljmp
inc
nop
pop
adc
adc
es
mov
add
insb
ret
mov
adc
jbe
mov
inc
aam
fdivs
mov
mov
inc
outsl
jb
ds
dec
stos
cltd
rolb
jp
lea
out
aaa
push
test
popa
inc
mov
pop
les
repnz
leave
sbb
pop
int
iret
lcall
pusha
xchg
push
sbb
dec
mov
ljmp
xchg
sub
pop
cmc
jo
xor
scas
lret
in
fdivs
pop
hlt
lods
rorb
scas
sbb
push
xor
mov
xchg
push
push
xor
scas
shrb
sahf
inc
loop
dec
mov
xchg
dec
jo
add
jmp
fadds
xor
lock
int3
inc
negb
jg
pop
js
fsts
prefetch
daa
mov
mov
pop
or
out
push
push
in
negb
add
xchg
inc
dec
push
adc
mov
jne
xchg
xchg
ja
pop
fisubl
mov
xchg
mov
je
movb
adc
je
mov
sub
das
into
test
sahf
shlb
js
out
dec
sub
cmp
inc
lods
out
frstor
mov
and
pop
or
sbb
outsl
insl
dec
push
cmp
daa
xchg
and
push
mov
fnstenv
pop
adc
add
pop
cmp
nop
out
cmp
xchg
push
cmc
cli
outsb
shr
aas
insb
fimull
push
fdivrs
les
test
pushf
and
pop
rorb
dec
mov
loopne
rcll
xlat
add
mov
xchg
sub
xchg
int3
push
das
xor
scas
iret
inc
push
lahf
pop
int
shlb
inc
repnz
add
je
sarb
cmp
push
inc
addr16
add
push
mov
cmp
pop
cltd
mov
jb
divl
dec
gs
jle
sti
lret
jno
pop
adc
mov
dec
adc
mov
loope
jb
push
je
xor
stc
ds
lcall
and
xchg
iret
xor
scas
lods
loope
jle,pt
mov
mov
stc
aad
int3
push
push
cmp
addl
outsb
push
test
xor
xchg
data16
ja
sbb
mov
xchg
outsb
sub
mov
inc
push
pusha
jmp
mov
sbb
mov
enter
sub
sub
mov
pop
cmp
lods
or
adc
cmp
imul
std
int
push
or
or
bound
add
mov
dec
pop
mov
fs
jl
mov
xorl
sbbl
sbb
adc
xor
cmp
xor
inc
lds
in
test
ret
adc
xor
mov
mov
sbb
jmp
mov
xchg
mov
add
popf
mov
add
je,pn
mov
lods
adc
xor
xor
mov
fistpl
into
enter
pop
mov
adc
das
ret
ret
or
into
add
xor
je
inc
ds
pusha
lcall
xor
add
insb
addr16
outsl
sahf
hlt
add
push
mov
movl
call
cmp
mov
ljmp
mov
dec
aas
cs
mov
inc
mov
add
sub
out
cwtl
fst
sub
divl
xor
cmpb
push
pop
jmp
aaa
push
mov
cld
inc
mov
lret
shlb
icebp
and
dec
cmp
and
in
jge
and
dec
inc
sub
jo
popf
sbbl
mov
je
daa
mov
dec
outsb
lret
inc
shlb
pusha
xor
inc
mov
pop
xchg
js
stos
ja
dec
and
out
or
xchg
das
mov
ret
push
cltd
add
aam
ret
pop
xlat
jae
or
ljmp
test
inc
fnstcw
loop
push
mov
mov
les
es
pop
das
test
push
mov
mov
jle
or
jnp
lods
jl
into
test
test
adc
jo
and
and
outsl
mov
cmp
rolb
hlt
push
push
sbb
loopne
loope
rorl
enter
dec
imul
jne
lcall
jge
repnz
or
lock
and
jo
mov
mov
imul
inc
fsub
jno
aad
mov
les
and
sub
jge
in
mov
out
aam
lea
adc
push
pop
addl
paddq
jl
out
or
xor
jp
inc
leave
iret
and
std
orl
inc
xchg
or
add
mov
ja
mulb
rorb
mov
xor
sub
es
jns
add
mov
xor
test
mov
cmp
push
fs
sub
bound
xor
xchg
jbe
icebp
out
add
xchg
or
pop
mov
mov
cmp
mov
xchg
shl
sti
or
lock
xchg
and
dec
mov
add
in
jns
or
mov
xchg
out
enter
mov
stos
jge
shlb
outsb
fistpll
xlat
push
int3
scas
mov
xor
stc
int
mov
int
pop
push
rcrl
fsubl
rorb
int
sub
inc
cs
es
fbstp
sarb
imul
jne
outsl
jbe
cli
cld
xor
dec
push
cmp
and
xchg
adc
push
out
adcb
xchg
shll
push
inc
call
rcl
xor
adc
add
cmp
clc
mov
popf
cmc
cmp
add
push
sub
addl
cltd
jle
in
clc
ja
or
hlt
imulb
inc
xor
push
mov
xor
add
and
icebp
xor
cld
or
loop
leave
ss
fidivl
sbb
sub
mov
hlt
lock
stc
sbb
jae
push
hlt
adc
in
and
push
xchg
push
jg
cmp
mov
insl
outsb
dec
inc
jl
pop
roll
clc
or
push
jo
pop
or
fisttpl
lcall
or
stc
cmp
fisttpll
idivl
shrl
dec
pop
in
stc
loop
lock
iret
aad
jnp
je
push
mov
xor
push
aaa
xor
mov
sbb
popa
clc
pop
or
test
mov
add
push
mov
loop
fisubs
push
pop
ss
stc
inc
xor
insl
push
andb
out
jo
add
repz
shlb
cltd
movsb
mov
sbb
jns
ret
ljmp
xchg
in
pop
jnp
pusha
popl
rcrb
ret
xchg
cmpsb
inc
xchg
lods
in
sub
adcb
xor
roll
xchg
mov
repnz
xchg
dec
mov
xor
outsb
ret
jo
inc
mov
cmp
jae
dec
fcomp
scas
imul
adc
sbb
mov
add
jge
inc
push
outsb
lahf
in
xchg
outsl
subl
xchg
or
push
push
clc
sarb
xchg
scas
rcrb
fcoms
inc
clc
dec
dec
jnp
mov
xor
sbb
adc
jno
push
mul
rol
jp
fdiv
adc
fwait
cmp
lods
out
outsb
or
mov
outsb
popa
or
call
inc
and
mov
aas
push
stos
sub
cmp
xor
call
fidivs
sbb
push
adc
add
inc
mov
sahf
pop
push
cmpsb
mov
test
lds
mov
decb
xchg
adc
das
jbe
inc
pop
jge
mov
dec
cmp
imul
shll
rcrl
xchg
cmp
adc
jl
movsl
cmp
cmpsb
inc
loope
imul
outsl
lret
rcll
jb
sbb
mov
mov
outsl
std
sbb
decl
jmp
es
mov
lcall
ja
xor
inc
pop
mov
inc
xchg
addb
movsl
push
add
push
pusha
jo
xchg
cmp
lahf
jecxz
pop
orl
xchg
into
jae
cld
pop
gs
stos
out
mov
jge
jl
stos
adc
sub
add
ror
orb
ja
xchg
arpl
jmp
mov
mov
or
inc
mov
hlt
inc
xchg
or
arpl
lret
mov
xor
push
xchg
jae,pn
inc
lods
xorl
adc
test
dec
orl
dec
pop
pop
cmpsb
fsts
and
jo
cmp
movsl
outsl
loop
loop
mov
cwtl
jge
pop
int
xlat
dec
and
dec
jge
pop
pop
and
lods
cld
jns
jge
in
das
je
add
mov
fcomip
lret
gs
iret
push
imul
pop
or
or
test
flds
fstpl
lods
aas
and
sbb
push
mov
les
and
xchg
lahf
push
es
xor
push
dec
dec
jns
rcrl
add
lret
test
leave
insb
xor
xor
call
mov
ficomps
test
call
cmp
leave
insl
in
fidivs
lahf
sbb
jb
sub
push
sbb
pop
imul
sar
js
iret
cmp
xor
nop
or
daa
ret
cmpb
jo
daa
or
testb
pop
mov
pop
pop
adc
mov
outsb
nopl
negl
shrl
call
insl
sub
push
aad
pop
add
sub
bound
xor
push
dec
aaa
fimuls
xchg
loopne
push
sub
pop
sub
mov
xlat
clc
sub
jl
inc
add
enter
fisubrl
dec
adc
adc
mov
shr
dec
ja
cmp
xchg
lds
cmpsl
out
or
popf
dec
xchg
insb
dec
jl
mov
repnz
add
pusha
cmpsl
lds
mov
fs
inc
adc
lods
adc
adc
push
imulb
jl
pop
cmp
mov
pop
iret
fidivl
data16
loop
adc
js
sub
aas
xor
sbb
ficomps
add
popa
xchg
push
sbb
aad
dec
mov
pop
pop
inc
inc
mov
mov
iret
or
dec
addr16
add
je
cs
lret
add
mov
or
ja
mov
dec
notl
mov
loop
push
inc
mov
mov
out
in
shlb
js
xor
and
mov
push
clc
xchg
mov
and
idiv
mov
nop
adc
mov
mov
mov
call
dec
imul
jo
add
jecxz
cmp
push
inc
pop
test
mov
stos
stos
mov
fisubl
mov
add
testl
rolb
rorl
bound
cltd
sbb
push
dec
inc
cmc
jp
ror
xchg
lret
mov
adc
jbe
cmc
mov
out
push
in
xor
dec
sahf
into
jnp
cltd
mov
mov
lods
cmp
and
push
and
imul
add
and
mov
cmp
cmpsl
scas
icebp
pop
sub
movsb
cmp
pop
popa
push
lds
loopne
dec
dec
mov
push
push
dec
jno
mov
add
pop
xor
in
cmpsb
sahf
aas
sub
jmp
insb
xor
pop
movsl
push
dec
jp
jne
inc
arpl
xchg
push
or
cmpsl
imul
ss
cmp
mov
jecxz
cmc
xchg
je
out
sbb
mov
sub
iret
out
test
sub
add
mov
aam
xor
in
sbb
stos
mov
fwait
adc
fs
pusha
pop
mov
jae
cltd
inc
dec
fldt
cmp
ret
out
pop
dec
add
add
push
pusha
lds
sub
push
mov
ret
jmp
dec
pop
out
aaa
cli
daa
pop
int
and
cmp
enter
cmp
mov
out
mov
adc
fidivs
mov
lahf
adc
mov
faddl
fcmovu
lods
dec
xchg
mov
rclb
xchg
jl
xchg
rclb
mov
add
sub
xchg
jns
dec
pop
cmp
push
or
mov
mov
and
lcall
sbb
push
jle
popf
sbb
mov
jge
or
sbb
hlt
adc
xchg
loop
push
pusha
cld
je
jne
or
ret
inc
out
mov
mov
shrb
sti
out
mov
mov
jecxz
sbb
out
mov
or
in
dec
fwait
mov
fistl
xor
add
loope
insb
fisttps
ret
mov
pop
icebp
sub
dec
xchg
lock
arpl
mov
dec
pop
adc
icebp
xor
jg
pop
test
clc
mov
insb
pushf
stos
cs
movb
xor
test
cmp
push
cmp
movsb
fs
stos
aaa
mov
dec
or
cmp
cmp
inc
inc
stos
dec
push
movsb
or
fwait
xor
lods
xchg
mov
scas
xchg
ret
dec
dec
inc
mov
or
pop
popa
fstl
or
xchg
xchg
jbe
cmp
ljmp
inc
adc
sbb
pop
xor
fld
dec
lret
int
mov
out
xchg
push
dec
pop
and
insb
jo
in
jo
and
dec
lahf
dec
pop
or
sti
fdivl
rorl
addl
in
adc
push
add
xchg
sti
jno
jle
scas
sub
dec
adc
mov
je
fildl
aam
mov
xchg
shll
sbb
icebp
mov
out
sbb
mov
test
jecxz
imul
jmp
popf
pop
push
dec
bound
test
push
xorl
ljmp
mov
ljmp
jecxz
add
sbb
lcall
clc
push
sub
inc
jno
xlat
cmp
xchg
std
adcl
mov
inc
mov
mov
aas
je
lods
dec
push
and
lods
fcoms
add
jmp
xor
cmpsb
mov
out
inc
sbb
or
cmp
imul
es
mov
jmp
imul
mov
clc
out
add
mov
cmp
sbb
push
add
rclb
xchg
decl
aad
sub
xlat
lods
xchg
call
inc
int3
mov
rol
clc
xor
sub
test
enter
out
jno
sbb
inc
cld
or
in
subb
cld
xchg
stc
sub
adc
mov
inc
fwait
or
sti
int
leave
push
mov
sbb
or
lods
rolb
mov
das
loope
gs
fdivr
sbb
ja
int3
pop
cmp
pop
mov
xchg
out
sti
dec
orb
jl
sub
or
push
sbb
cwtl
sbbl
and
pop
out
cld
jo
jae
maxps
subl
sub
daa
inc
and
std
jle
lods
or
pop
sub
inc
loop
sti
cmp
mov
std
cltd
xlat
xchg
pop
add
dec
ss
mov
fistps
mov
int3
mov
and
and
fmul
cmpsb
jns
enter
add
mov
and
mov
lock
xor
in
enter
sti
adc
shl
leave
add
pop
or
sbbl
cmp
push
mov
sahf
mov
mov
inc
fldenv
mov
leave
lret
pop
pop
imulb
dec
add
pop
jp
pop
mov
sbb
adc
addr16
dec
xlat
push
sub
push
ja
sbb
rorb
mov
push
dec
incl
or
sbb
daa
mov
dec
push
adc
mov
jl
incl
dec
enter
mov
and
sub
push
adc
mov
jno
jmp
cmc
xchg
and
popf
adc
add
icebp
mov
mov
jle
in
ds
fisubrs
inc
addr16
adc
fs
call
lret
scas
jo
rolb
pop
aas
pop
mov
sahf
dec
adc
xor
js
aas
in
pop
mov
mov
leave
fsubrs
test
movsb
imul
fwait
mov
loope
push
repnz
mov
sub
test
cmpsl
sbb
xchg
lcall
cmp
nop
sbb
sub
jnp
xchg
icebp
mov
adc
pop
mov
mov
fists
and
cmp
and
or
or
mov
or
jae
arpl
adc
into
stc
movsb
cld
xchg
fsubr
push
sarl
adc
ja
into
movsb
xorl
incl
add
in
mov
sbb
add
nop
adc
repz
fildll
mov
sub
jecxz
fisubrs
dec
jecxz
rorl
and
sub
ror
arpl
mov
push
and
cmc
push
push
mov
mov
sub
mov
push
jnp
mov
imul
pusha
mov
xchg
jge
pop
es
dec
adc
jecxz
and
dec
mov
pop
pushf
mov
push
ss
jnp
dec
or
jb
jbe
xchg
js
add
insb
xor
xchg
dec
fs
int3
clc
mov
divb
jmp
sbb
push
and
repz
pop
add
lds
inc
adc
cmp
add
testl
push
fiaddl
dec
push
add
jg
inc
cli
ja
lods
out
cmpsl
enter
push
push
xor
mov
push
pop
mov
out
fsubl
push
xor
lock
insl
sbb
lods
in
aad
cltd
into
repz
xor
fisubrl
jl
add
add
enter
cmpsl
outsl
xchg
or
popf
test
insl
jnp
jo
jge
pop
popf
adc
in
roll
pushf
pop
jb
xor
sbb
shll
dec
imul
shrd
aaa
xor
movsl
stc
jnp
fnstcw
push
add
bound
addl
mov
scas
pop
mov
inc
sub
roll
xor
or
leave
mov
or
cwtl
sub
scas
xchg
pop
jbe
ficoml
xor
jecxz
push
or
ja
mov
das
pop
lock
adc
push
pop
test
popa
jg
pop
cwtl
stos
sbb
jbe
pop
lea
sub
loopne
or
add
pop
scas
leave
jg
insl
mov
insl
gs
je
cltd
xor
jmp
ljmp
int3
pop
subl
iret
xor
adc
mov
iret
ds
dec
enter
jg
jno
ja
imul
pushf
cmp
inc
sahf
xchg
and
inc
cltd
repz
adc
out
push
inc
or
jbe
sub
xor
inc
inc
xchg
mov
scas
ret
jb
push
movsb
add
cmp
mov
loope
scas
stc
and
enterw
movsb
or
dec
xor
or
testl
movsb
add
fadd
jge
push
es
inc
cmp
test
mov
addr16
add
fdivrl
lds
sub
push
addr16
jnp
jo
pop
imul
jg
cwtl
sti
sbb
push
test
dec
mov
test
xchg
or
jmp
test
leave
addr16
mov
mov
jp
fisubs
imull
mov
push
inc
push
lea
ss
pop
sahf
cmp
sub
cmp
or
leave
fimuls
dec
mov
mov
inc
nop
fwait
xor
fnsave
inc
inc
xor
inc
stos
je
fcoml
adcl
dec
outsl
jl
loop
pop
sbb
sbb
cmp
mov
sbbb
scas
aaa
mov
and
dec
xor
xchg
stc
imull
fwait
jno
sbb
fstpt
cmp
cmpl
sbb
movsl
out
test
cmpsb
mov
aam
lahf
in
loop
movsb
lea
mov
mov
js
in
mov
lea
adc
dec
setno
cmp
dec
pop
xor
setns
out
out
xor
pop
mov
rolb
sbb
xor
movsl
outsb
test
pop
in
adc
push
data16
pop
mov
sub
mov
mov
mov
fs
gs
aaa
cld
push
and
out
adcl
rcl
dec
cmp
das
out
xchg
lea
add
into
xor
mov
xchg
sbb
add
inc
jno
dec
sbb
into
xchg
insb
sub
dec
fsubrl
das
into
jg
ret
or
sbb
mov
subl
xchg
cmpb
pop
stos
iret
mov
pop
rclb
fsubrs
test
jno
shll
outsl
add
popf
jns
fst
pop
cmpsl
mov
dec
and
dec
loope
or
xor
jl
or
push
sahf
adc
cmp
int3
jecxz
inc
into
pop
mov
xchg
adc
call
dec
mov
cmp
loop
mov
sub
lods
xorl
adc
stos
adc
jno
testb
jb
mov
jg
cld
dec
in
pop
xor
movb
prefetch
or
loope
lods
sub
dec
outsb
in
icebp
fldenv
jecxz
jno
adc
pop
cmp
loop
add
ficoml
inc
js
stos
fcompl
cltd
jae
inc
cmp
jne
pushl
fidivs
xor
cmp
ret
mov
dec
enter
jbe
clc
sbb
push
adc
sub
sarl
xor
add
aad
cld
lcall
popf
lds
scas
lret
add
sbb
push
pusha
lcall
pop
sbb
xor
leave
jbe
push
push
jp
xor
stos
xchg
xor
testl
sarb
sbb
cmp
push
out
in
mov
sub
es
mov
pop
iret
push
repz
in
push
push
fstl
jg
mov
fdivr
lods
add
call
pop
mov
inc
cmpsl
cmpsl
and
inc
jb
in
jg
std
add
cli
lahf
hlt
push
daa
cwtl
dec
lods
or
cmpsl
stos
or
sbb
push
lret
mov
cwtl
mov
shr
mov
jno
in
arpl
jae
jno
clc
cmc
rcr
or
lret
dec
mov
lds
jmp
adc
xchg
ss
or
xor
or
je
mov
pop
mov
cs
sti
and
popf
pop
pop
addr16
sub
add
inc
dec
or
xchg
rol
and
sub
iret
mov
mov
push
mov
push
xchg
jnp
jns
add
sbbb
xchg
mov
inc
cmc
fldl
inc
aam
sub
lret
jno
pop
dec
lods
push
imul
dec
push
and
add
out
push
clc
mov
sbb
ret
lea
call
ret
daa
cmp
jb
adc
add
xor
lods
push
mov
movsb
js
dec
and
jl
cmpsb
mov
push
fsincos
pusha
jo
jp
or
sub
push
mov
xor
add
pop
sbb
in
call
cmp
pop
fs
movsb
loopne
out
int
sbb
nop
lds
mov
aaa
into
in
mov
push
hlt
inc
pop
movsl
es
call
pop
arpl
stos
cmpsl
lds
cld
add
sbb
ficomps
push
mov
xchg
ret
aad
cmp
or
adc
ret
bound
movsl
cmc
mov
out
ja
pop
xlat
push
cld
mov
lds
jmp
imul
or
les
lods
push
pop
dec
enter
push
dec
inc
cmpps
scas
mov
xchg
dec
cmpsl
mov
das
push
mov
mov
aam
repz
add
movsb
push
insl
xchg
loopne
fincstp
mov
cli
or
fwait
or
pop
test
cmc
mov
test
fisubrs
inc
sahf
nop
dec
mov
jg
icebp
pop
push
jns
pop
arpl
dec
mov
mov
pop
mov
jae
pusha
in
vpcmpgtd
push
out
sub
stc
lahf
xchg
cs
sbb
cltd
mov
push
repz
mov
cmc
cmp
lret
adcb
out
repz
jp
das
loopne
mov
cmp
testl
and
stos
jle
subb
test
stos
sbb
ret
cs
shll
push
sbb
lods
pop
inc
aad
xchg
and
add
stos
insb
and
push
jmp
adc
xchg
movsl
xor
aas
hlt
mov
out
leave
xor
in
pop
insb
pusha
ror
cmpsl
cli
cmp
jecxz
pushl
pop
mov
push
lret
imul
sub
lods
insb
mov
sbb
addb
pop
hlt
fcmovb
dec
int3
add
sbb
cmpsl
xchg
imul
sbb
mov
scas
sbb
sbb
fmull
jle
in
ss
repz
sub
adcl
lret
xor
pushl
lock
je
rclb
cmp
mov
test
cmp
jno
cmp
mov
arpl
int3
scas
nop
xchg
dec
dec
cmc
mov
divb
gs
inc
lock
or
loope
fbstp
xor
sbb
cwtl
and
adc
jecxz
sub
pop
repnz
lods
xlat
ret
push
dec
outsl
xor
addr16
into
or
loopne
inc
push
pop
sbb
testl
and
xchg
inc
cmp
inc
cmpsl
fwait
dec
data16
test
pop
rcrl
mov
outsl
insl
je
and
sarl
push
push
leave
mov
jne
xor
fnstsw
push
call
loopne
or
sub
xchg
int
fsubrs
aad
xorps
cmp
pop
mov
pusha
test
outsb
addr16
xlat
dec
dec
xchg
xchg
stos
sbb
lcall
push
test
icebp
push
stos
stc
xchg
into
stc
imul
pop
jno
shl
sub
aad
outsl
fstpt
nop
dec
insl
in
or
mov
dec
mov
jnp
mov
add
sbb
jb
ljmp
dec
push
imulb
jb
xchg
mov
nop
mov
fucomp
mov
mov
pop
inc
sti
add
fwait
sti
addr16
dec
sbb
add
mov
push
sub
jae
pop
adc
inc
sbb
mov
mov
dec
daa
inc
fidivrl
iret
test
inc
jp
aad
cmc
invd
movsl
clc
or
outsb
jge
stc
pop
cmc
pop
movsl
cmp
ret
xchg
es
cld
dec
lret
xchg
scas
mov
inc
jmp
lret
fcoms
pop
stos
inc
jmp
inc
es
sub
xchg
mov
cwtl
mov
test
je
push
add
in
sbbl
adc
stos
and
xchg
inc
bound
mov
pop
sarb
icebp
sahf
and
aaa
mov
fstp
xchg
outsb
sbb
mov
jge
mov
fidivrs
cmpb
lds
mov
jns
dec
stos
adc
sbb
cmp
xor
incl
leave
mov
std
std
mov
add
call
fnstcw
jb
mov
test
push
xchg
jl,pt
mov
push
orl
mov
push
jg
jb
and
loop
imul
xor
cmp
lds
mov
sub
test
sbbb
add
std
push
mov
lret
decl
cwtl
lret
add
cmp
inc
and
cmp
ss
int3
jmp
sub
in
cwtl
outsl
test
push
outsl
push
xorb
and
stos
xchg
les
insb
ret
dec
or
mov
xchg
push
std
fdiv
call
xchg
xor
lods
mov
dec
mov
inc
jmp
rcrb
sub
mov
cmp
add
rorb
div
cmc
sub
jmp
sti
mov
sub
les
divb
js
cmc
arpl
in
mov
aad
jnp
insb
sbb
das
cltd
iret
push
inc
sub
popf
or
cmp
call
mov
add
inc
sbb
xor
xor
fwait
sbb
subb
incb
lds
xor
push
jb
call
jno
sbb
cwtl
xchg
and
jae
loope
adc
pop
loope
jecxz
stos
and
adc
lock
lods
jmp
xor
decl
outsl
pop
rolb
xchg
test
add
dec
je
add
add
outsl
js
mov
mov
mov
or
mov
jns
push
leave
jp
xchg
ficomps
and
and
cmp
jl
mov
fimuls
inc
test
add
inc
push
je
add
fdiv
arpl
push
test
mov
jbe
and
jo
mov
jns
jb
rcrl
sub
lahf
cmp
mov
popf
cld
push
insl
repz
mov
out
fnstsw
sub
or
mul
jmp
push
sbb
jmp
mov
xchg
test
mov
ljmp
cmp
mov
sbb
dec
and
inc
repnz
cmp
scas
push
cwtl
sub
lret
fmull
or
pop
jae
js
int
imul
push
pop
dec
adc
or
jp
mov
aaa
mov
xchg
mov
sub
cmp
test
push
xor
cmovno
jg
pop
dec
daa
adc
pushf
out
pop
int3
sti
adcl
test
pop
sbb
add
aam
mov
mov
fwait
pop
in
fistpll
dec
dec
insl
mov
xchg
fstl
push
push
cmp
mov
xor
adc
fwait
test
xor
push
mull
cld
hlt
or
sahf
mov
sti
insl
scas
dec
xor
push
mov
mov
inc
movsb
out
mov
icebp
mov
mov
dec
in
sub
xchg
ss
rcrl
and
out
aas
pop
out
loope
pop
mov
and
dec
inc
push
stos
mov
jno
dec
lods
dec
in
roll
movsb
aas
sbb
inc
dec
pop
sub
cmc
sbb
xchg
mov
mov
jge
xor
xor
lds
imulb
jb
inc
push
mov
insb
fwait
and
sub
in
jle
adc
cmp
in
cmp
xchg
pop
xor
repz
add
xorb
xor
or
push
inc
js
add
xchg
popa
lds
dec
mov
loope
add
ss
and
nop
mov
dec
mov
ss
jecxz
imul
cmp
movsl
scas
pop
sub
add
pusha
dec
int
pop
fs
mov
enter
xchg
dec
je
les
jae
pop
inc
in
mov
adc
insl
add
pop
and
jmp
into
mov
lock
or
insb
jae
jae
into
iret
sub
push
xchg
es
add
mov
scas
adc
pop
out
dec
iret
mov
loopne
pop
pop
imulb
mov
inc
bound
sub
pop
cs
add
mov
test
repnz
sub
enter
fs
addr16
int
test
ret
push
cmp
push
je
arpl
mov
sbb
add
popa
xor
pushf
mov
cld
fadds
xor
mov
cmp
popa
mov
sbb
xchg
popa
mov
mov
jne
sbb
lock
fnstsw
adc
addr16
aaa
add
mov
shlb
pop
ror
dec
nop
nop
into
inc
ds
pop
lret
fimuls
mov
xor
mov
mov
xor
in
adc
icebp
and
adc
or
push
adc
iret
pop
xor
cmp
ljmp
sti
sarb
push
loopne
aaa
sub
scas
pop
sbb
movsb
cmp
push
enter
and
fs
sbb
mov
jno
mov
push
lods
cmp
xor
adc
push
ss
pandn
inc
lcall
fs
dec
adc
rcll
or
xchg
xchg
cmp
std
mov
out
test
lock
in
jb
clc
imul
repz
imul
ljmp
mov
xchg
in
insb
jne
js
xlat
ja
mov
scas
ret
cmp
and
sbb
xchg
sub
jb
rcrl
or
push
and
jmp
cli
inc
cltd
xor
movsl
xlat
cld
push
sbb
inc
cwtl
andl
into
leave
cmp
adc
dec
mov
pop
xchg
push
rorl
mov
in
in
sti
outsl
lret
jecxz
push
sti
push
imul
imul
jp
pop
cmp
mov
adc
push
movsl
cmp
or
push
push
les
mov
mov
popf
loop
mov
add
fwait
rcr
int3
leave
or
jns
or
mov
mov
push
sbb
insl
jp
or
aad
arpl
pushf
ret
aas
pop
lock
lods
rol
or
mov
jo
repz
fiadds
push
iret
fs
push
ljmp
cmpl
clc
pop
dec
add
inc
popa
sbb
xor
lret
or
test
push
dec
lret
jecxz
pop
int
mov
or
call
imul
mov
test
inc
popa
addb
dec
incb
orl
cltd
cmpsb
cmpsb
loop
push
mov
out
xchg
clc
out
mov
add
out
repnz
xor
adcb
sub
adc
mov
inc
cmp
inc
jae
aad
cld
out
aas
pop
mov
lods
mov
or
sbb
cwtl
xlat
fsubs
bound
into
lods
pop
arpl
outsb
outsb
pop
cmp
sar
cli
and
xchg
pusha
mov
inc
in
rcl
dec
popf
fstpl
jae
pop
dec
sti
cmp
lods
mov
jo
and
into
aaa
add
bnd
mov
or
cmp
int3
sub
mov
je,pn
mov
mov
sbb
xchg
insl
iret
mov
mov
adc
and
mov
mov
insl
scas
loopne
sbb
repnz
mov
scas
sub
ljmp
out
stos
xchg
dec
push
mov
xchg
mov
cs
xorl
xor
pop
xor
jg
cmp
popf
scas
mov
sahf
pop
test
sub
pop
lcall
dec
push
enter
leave
addr16
adc
jne
dec
inc
inc
flds
mov
in
pop
jecxz
xchg
adc
mov
mov
outsl
sbb
mov
push
popf
sub
mov
jge
lret
adc
xlat
cmp
jmp
inc
adc
sbb
jb
ljmp
cmp
in
xor
mov
cld
mov
xor
and
mov
dec
mov
xchg
bound
inc
inc
xchg
mov
lcall
or
test
jp
jge
pop
jno
mov
mov
push
enter
inc
adc
or
lret
xorb
aad
jmp
mov
dec
rclb
mov
add
bt
aaa
or
adc
rol
pusha
or
cmp
adc
scas
in
ret
fwait
stos
push
inc
test
test
and
arpl
adc
movsl
and
jge
sbb
rclb
add
pop
and
xlat
std
cmc
lock
jge
cmpsb
dec
mov
shl
add
imul
sub
mov
sub
fcoms
jnp
adc
adc
pop
ds
xchg
jl
test
test
xor
out
lds
and
and
cmpb
rcrb
xor
daa
mov
movl
mov
push
and
lods
addr16
scas
bound
xor
cltd
in
hlt
cltd
out
int
mov
add
aad
or
int
mov
testl
xchg
mov
icebp
fwait
les
pop
jge
rcll
stos
cmp
inc
fiaddl
inc
lret
iret
cs
or
out
dec
imul
arpl
ss
add
or
insl
push
xchg
dec
pusha
cmpsb
and
jbe
test
repnz
loope
jle
xchg
cmpsl
jae
and
insb
mov
popf
push
jnp
pop
movsl
and
lods
cmpl
dec
dec
cwtl
add
xor
jns
lods
jmp
rorl
sbb
xchg
test
shrb
sbb
neg
jno
mov
jne
sub
aad
insb
jp
dec
dec
pop
mov
pop
inc
or
xor
pop
aam
test
scas
mov
pop
sarb
xlat
out
in
mov
add
ja
in
insl
fistl
inc
add
sti
dec
push
out
iret
pop
and
loopne
or
adc
push
mov
lret
iret
lea
xor
jns
cmp
push
aas
stos
aas
push
loopne
xchg
loopne
dec
sbb
icebp
imul
or
movsl
ficomps
push
push
push
pop
test
mov
pop
popa
loope
adc
push
icebp
jnp
repz
ljmp
xchg
fmull
and
add
sbb
fcomp
pop
insl
test
jbe
xor
loopne
cmp
sub
dec
push
push
jnp
stos
out
sub
jns
push
pop
xlat
pop
cltd
push
and
dec
dec
mov
inc
push
popf
inc
push
mov
push
add
insb
xchg
xchg
stc
dec
jecxz
mov
movsl
xchg
dec
or
cmpsl
mov
lock
xlat
repz
inc
dec
cmpsb
add
and
xchg
xor
mov
mov
adc
repz
cs
mov
inc
push
pop
dec
mov
jo
jns
rorb
in
iret
inc
and
mov
adc
fst
jg
aam
mov
mov
xor
scas
sbb
inc
in
push
sub
xor
fsub
dec
inc
shrb
jge
mov
xor
cmpsl
push
mov
insl
das
add
push
dec
pop
mov
mov
outsb
push
add
xor
int3
loop
pop
in
inc
frstor
pop
jge
or
xchg
andl
inc
pop
xchg
sub
lcall
lcall
or
cmpsb
and
pushf
sti
pop
xchg
xor
sbb
sbb
sub
add
mov
mov
jl
mov
imul
mov
cmp
cmp
xchg
inc
push
js
jp
in
test
arpl
into
push
xabort
lcall
pop
jnp
dec
push
loope
mov
sbbb
xchg
inc
or
jle
sub
sbb
dec
loop
xor
or
mov
stc
xchg
je
or
push
mov
pop
or
cmp
outsb
xchg
mov
inc
mov
scas
xor
iret
aam
mov
sub
popf
adc
nop
sbb
push
mov
fidivs
mov
and
cmpsb
outsl
add
sbb
jle,pn
fdivrl
push
call
xchg
push
xor
push
ficoml
mov
int
and
mov
push
adc
mov
loopne
int3
out
enter
sti
int3
adc
push
or
js
xor
leave
xorl
stos
clc
xchg
dec
popf
icebp
test
pop
pusha
loop
push
cwtl
fstl
bound
sbb
nop
lock
movsl
and
pushf
ds
jge
jae
fstpl
sub
lock
bound
test
sahf
loopne
fcompp
pop
into
stos
jecxz
out
and
mov
lret
push
cwtl
fdivrl
add
shlb
mov
adc
lcall
jbe
mov
jmp
dec
ss
add
mov
inc
sahf
cld
push
sub
loopne
fldcw
out
inc
nop
sub
pop
gs
popf
sbb
rcl
xlat
dec
add
jnp
pop
lret
mov
loop
sbb
pop
push
stos
add
or
push
pop
inc
mov
arpl
out
cs
cmpsl
ret
fcomps
pop
mov
jmp
clc
mov
or
cs
jb
lahf
shlb
pop
cmp
mov
aad
fimuls
mov
out
mov
stos
imull
inc
cltd
daa
mov
lahf
push
lret
lea
mov
cwtl
ljmp
mov
loop
sub
std
in
sub
imul
pop
mov
cmp
and
mov
and
icebp
and
fcmovu
repnz
cmp
sub
sub
fstpt
sbb
shlb
mov
shlb
jmp
pop
cmp
xor
and
or
mov
adc
xchg
scas
push
shl
add
pop
test
push
cmpsl
stc
cmp
inc
sbb
cmp
stos
dec
cmovne
mov
xor
mov
cmp
push
add
arpl
or
push
pop
jmp
mov
mov
inc
mov
adc
sbb
mov
jno
ret
pop
aas
out
fists
sarb
add
sbb
xor
cli
outsb
mov
xor
sbb
sub
sarb
loope
lret
push
ror
or
data16
xorl
nop
and
sub
aaa
jmp
push
shl
imul
inc
shlb
cmp
cmpsb
cmpb
scas
push
roll
mov
mov
mov
mov
leave
loope
orb
jae
out
jae
jae
lea
ret
loopne
mov
movsb
pop
xor
inc
stos
mov
pop
xchg
insb
lods
sbb
stos
mov
std
ds
mov
fs
test
or
loop
sub
mov
jno
iret
mov
push
scas
loope
mov
lods
push
sahf
or
stos
cmp
xchg
mov
fcoms
mov
in
sbb
sub
clc
int3
sub
sti
pop
fmuls
sbb
mov
jns,pt
dec
xor
inc
add
out
jmp
mov
or
in
cmp
orl
inc
out
sahf
ret
test
add
jb
jno
jge
ss
js
je
xchg
inc
or
ja
out
cld
or
cli
mov
movsl
mov
adc
rolb
addb
cmpsl
mov
fs
adc
pop
mov
js
mov
icebp
adc
repz
cltd
jo
sub
popa
popf
aas
test
loope
fstpl
xchg
nop
lcall
xor
loopne
notb
lea
and
sar
mov
add
sub
push
enter
push
repnz
cltd
lock
fildl
fcoms
jmp
sbb
imul
std
mov
and
pop
cmp
push
or
xlat
xor
mov
dec
arpl
mov
push
rcl
cmc
adc
aam
int3
mov
jnp
dec
stos
cld
test
fstl
es
or
fwait
andl
call
xchg
adc
lahf
jae
cmp
test
jno
clc
add
lcall
fwait
call
xchg
rcll
adc
push
ret
outsl
sbb
mov
adc
inc
scas
sahf
jns
push
in
repnz
cmp
jge
push
mov
xlat
loop
in
rcl
push
cld
and
repz
mov
and
rcrl
inc
cli
fcompl
sbb
inc
mov
out
out
shl
lods
mov
mov
das
xchg
ret
mov
mov
cwtl
orb
mov
sbb
inc
fwait
push
das
call
push
xchg
jle
fcmovnu
xchg
jno
test
test
nop
and
mov
push
negb
fimuls
out
add
pop
dec
imul
lea
pusha
cmpb
mov
ljmp
jp
push
pop
mov
pmaxub
jb
inc
in
dec
cmp
pop
jb
xchg
xchg
push
imul
pop
adc
dec
stos
or
imull
lds
push
jae
ret
xchg
mov
push
push
mov
add
call
mov
cmp
lea
jmp
bound
mov
movb
dec
fbstp
jmp
outsl
pop
xor
xlat
daa
arpl
inc
push
out
xor
sbb
cmp
ds
stos
cmp
testl
repnz
push
popf
int
mov
push
mov
iret
sbb
cmpl
xchg
push
jg
cmp
jne
sbb
mov
pop
mov
push
lds
lahf
inc
cmp
jo
outsb
arpl
cmc
into
je
push
iret
sub
lock
cmp
lcall
pop
push
cltd
daa
stos
sarl
sbb
jae
shl
iret
mov
sar
mov
data16
test
xchg
cmp
and
outsb
add
dec
jmp
inc
clc
mov
jp
fbld
sbb
or
dec
out
add
pop
or
xchg
sub
jne
mov
inc
dec
jmp
enter
ret
cmp
pop
iret
push
cmp
add
xlat
xorl
cmp
sti
pop
mov
and
ficomps
jge
leave
sub
in
xor
pop
sbb
nop
nop
add
sbb
add
lahf
lret
cmp
and
cwtl
aas
inc
inc
dec
movsl
or
loope
das
sub
cmp
inc
dec
nop
jb
xchg
rcrl
hlt
push
and
sbb
cmpsb
jmp
mov
jno
addl
arpl
push
pop
mov
repnz
inc
xchg
bound
aaa
sbb
fsubrs
movsl
movsl
push
cmc
sub
adc
outsl
xlat
cwtl
pop
fidivs
das
push
fdivs
mov
inc
repz
sahf
lods
push
push
mov
invd
es
call
mov
xchg
nopl
add
leave
shll
lcall
sub
sar
insl
cltd
add
movsb
mov
xor
add
inc
nop
aaa
outsl
ss
fdivl
imul
and
movsb
push
insl
xor
dec
testb
movsl
cld
ja
xchg
xor
dec
rorl
rcrl
cltd
jmp
mov
push
jb
mov
adc
mov
push
addr16
inc
movsb
aaa
mov
add
pop
or
iret
push
fcoms
xchg
repnz
fdivl
dec
scas
into
gs
loop
fdivl
pop
pushl
mov
jp
xchg
stc
xor
inc
ljmp
pop
lds
jns
sub
repz
xchg
into
int
sub
inc
cmpsl
mov
fdivrl
fidivl
pop
das
inc
jnp
xor
stc
mov
or
imul
xlat
adc
jne
jae
daa
add
sar
xor
xchg
pop
sub
lods
mov
sbb
popa
or
add
popa
jl
xor
fcoms
sub
dec
xchg
arpl
xlat
out
sbb
xchg
fmulp
mov
and
cmp
out
cmpb
leave
push
jne
mov
insb
aad
mov
mov
jne
call
pop
mov
xchg
jge
push
pop
fimull
shl
fistpl
cmp
inc
jbe
nop
test
cs
mov
fldenv
cmp
das
aam
and
adc
push
pop
and
lcall
sbb
jnp
jbe
lret
push
out
fnstenv
shrb
fisubrs
or
or
movsb
push
mov
mov
shll
popf
incl
rcl
int3
mov
mov
pop
loop
sahf
mov
cltd
pop
gs
cmp
and
jb
xor
push
mov
lods
push
repz
mov
xchg
sub
sub
xchg
cmp
lods
das
aad
xor
push
rcrb
add
inc
nop
mov
mov
push
loopne
mov
xchg
out
push
xchg
fwait
push
mov
xchg
js
adc
xor
lods
and
imul
cs
jg
add
mov
and
rorl
leave
jbe
lahf
jne
or
dec
data16
mov
daa
rcr
sub
outsb
pop
mov
push
out
dec
push
pop
outsl
pop
pop
xchg
mov
dec
sti
pop
mov
jg,pt
shll
push
cmp
js
psllw
in
cmp
mov
movsb
mov
push
pop
pop
xor
jne
push
dec
push
in
and
ja
hlt
add
loopne
sub
jnp
mov
dec
stc
leave
test
rorl
jae
jae
pop
sbb
imul
testb
fmulp
xor
ss
loopne
inc
add
scas
inc
dec
mov
rcl
cmp
or
test
mov
js
cmpb
push
mov
or
xor
xchg
or
xchg
scas
inc
enter
lahf
lcall
int3
sbb
sahf
or
mov
or
lret
lods
pop
xchg
xchg
push
outsb
pop
push
daa
xor
xchg
test
insb
addr16
xchg
xchg
out
lods
and
xchg
popf
out
xor
jg
pop
add
je
push
inc
sbb
imul
scas
idivl
ds
mov
call
mov
xor
test
inc
test
or
fidivrl
or
fadds
outsl
js
ret
and
inc
insb
cltd
pop
xor
adc
mov
data16
mov
xchg
lahf
pop
lods
aam
mov
in
mov
cmpsl
ret
mov
pop
enter
xchg
xor
inc
imul
test
sbb
dec
pop
jb
insl
xchg
xchg
xor
push
pop
addr16
xlat
movsl
mov
jmp
insb
shll
loopne
dec
outsb
nop
add
rol
ljmp
rcrb
sub
call
jp
cld
push
loopne
pushf
addl
sbb
je
es
xor
mov
mov
movsl
ficoms
sbb
ds
or
sbb
es
cmp
pop
and
xor
push
and
gs
adc
sahf
cmpb
xchg
mov
add
mov
adcl
inc
iret
out
addr16
lcall
or
or
pop
mov
repnz
mov
pop
mov
jnp
shrb
mov
std
jge
add
out
inc
das
jo
out
cmp
inc
add
ret
ss
pop
je
sub
cli
into
xchg
test
roll
cmc
lods
ja
dec
dec
mov
xchg
jnp
inc
mov
xor
mov
sub
pusha
lods
rcll
dec
mov
pusha
mov
cmp
mov
mov
add
ficomps
jle
out
iret
stos
rcrb
jge
dec
sbb
xchg
sub
mov
mov
lea
mov
popa
push
leave
sbb
jo
push
xor
jb
fucomip
and
dec
and
les
and
test
jb
mov
adc
mov
lcall
xor
lods
fs
sub
add
jb
or
sub
pop
push
imull
lods
rol
fstpl
mov
cmp
nop
inc
and
call
imulb
mov
loope
xlat
sti
imul
lock
sbb
test
mov
clc
adc
stos
rol
pop
inc
xchg
push
adcl
mov
rcrl
fsubrs
push
dec
pop
shll
dec
adc
daa
push
cmpsb
ljmp
pop
mov
cmp
cmp
mov
or
mov
mov
popf
cmpsb
fwait
dec
pop
jp
call
sbb
fdivr
idivl
push
sbb
xlat
shll
mov
sarb
mov
addr16
mov
test
test
leave
testb
ret
xchg
adc
jno
arpl
lret
std
xor
faddl
or
cmp
sti
insl
cld
cmpsl
fdiv
daa
mov
fnstsw
cwtl
mov
sub
mov
xchg
cmc
jle
push
mov
out
jne
adcb
mov
xchg
bound
cmpsl
sbb
notb
das
lods
mov
jge
xor
jns
jle
fdivl
add
adc
test
jmp
pop
push
dec
xchg
and
js
mov
xchg
mov
xor
jmp
push
adc
ss
adc
xor
data16
push
inc
sub
bound
mov
mov
je
add
add
mov
cmp
mov
or
dec
lea
sbb
sbb
rorb
daa
cwtl
mov
imul
adc
lahf
ret
and
divb
sub
rolb
shll
adc
mov
clc
lds
xor
repz
lret
std
icebp
stc
cltd
test
jl
add
or
arpl
mov
movsb
pushf
jl
cmp
in
addb
inc
cwtl
mov
daa
lea
push
shlb
jle
mov
divb
xor
mov
dec
cli
add
sub
lcall
mov
rcrb
hlt
aaa
aad
lcall
pop
sbb
pusha
add
inc
outsl
in
mov
rclb
adc
mov
and
mov
pop
arpl
pop
pop
fisttps
stos
dec
dec
popf
daa
dec
pop
in
push
iret
aaa
scas
adc
cmp
adc
je
inc
mov
addb
xor
cmpsl
xor
lock
cmp
or
and
cmp
inc
add
adc
loop
jo
sbbb
inc
jns
adc
loopne
xchg
xchg
loope
pop
mov
jg
jge
add
ljmp
xchg
xchg
scas
pop
mov
fsubrs
push
and
scas
loopne
das
loope
outsb
popl
lcall
jbe
push
push
fisttpll
aad
enter
xor
out
mov
js
cmp
aam
add
mov
aas
jne
jg
and
les
jnp
cmp
out
push
ds
dec
icebp
mov
iret
je
mov
gs
mov
popf
out
sub
aam
push
scas
inc
shlb
std
scas
scas
test
lret
add
clc
cmpsb
fwait
push
stos
mov
pop
inc
call
daa
pop
mov
jge
inc
jecxz
leave
cmp
xchg
push
sti
jno
mov
xor
test
dec
roll
inc
xchg
cld
pusha
and
jae
cmc
pop
mov
jnp
cmp
sbb
and
xlat
inc
insb
sbb
stc
or
sub
nop
and
mov
xchg
sub
test
xlat
fildl
or
ja
jge
enter
or
add
mov
mov
xor
mov
sub
jecxz
inc
jg
scas
imul
push
or
xchg
test
in
rcrl
sub
lods
adc
mov
jnp,pn
popf
mov
out
pop
out
enter
in
push
sbb
add
push
js
mov
xor
jns
test
jns,pt
xchg
dec
sub
shlb
gs
rcrb
xchg
insl
fdivl
pop
xchg
in
lock
gs
hlt
mov
push
inc
popf
rcrl
xor
movsb
pop
pop
ljmp
xchg
sbb
jecxz
subb
mov
or
insl
fdiv
outsb
ja
div
loop
insl
fisubl
aad
pop
sbb
les
cld
outsl
mov
pop
arpl
cmp
icebp
push
insl
xchg
mov
pop
xchg
in
fst
movsl
insb
push
int
pop
enter
mov
mov
fs
cld
pop
cmp
mov
adc
sahf
add
and
decl
xchg
add
cli
push
jns
lock
aaa
mov
jle
mov
sub
mov
jp
mov
add
mov
dec
dec
insl
sti
jne
sbb
cmp
mov
orb
push
subb
jbe
insl
movsb
inc
inc
int
fimuls
push
mov
push
pop
call
pop
xor
mov
adc
mov
xorl
inc
mov
push
test
push
movsb
out
cltd
mov
push
adc
ficoms
daa
pop
and
mov
out
mov
dec
daa
sub
movsb
mov
out
sbbl
shlb
push
add
nop
add
push
shlb
pop
fwait
sub
add
int
or
inc
xor
adc
jns
pushf
fucomp
dec
imul
loopne
mov
mov
add
rcrl
ds
outsb
jp
jne
xchg
movsb
jne
mov
xor
loope
in
mov
sbb
jg
mov
cli
jne
mov
lock
aad
stos
sarl
mov
int3
sarl
ret
cmc
pop
pop
push
pushf
mov
out
fmull
sbb
mov
hlt
push
cli
lds
pop
popa
in
dec
xor
sahf
xor
cmp
sahf
dec
or
and
cmp
in
xlat
ds
jbe
xchg
cmc
xor
mov
pop
cli
les
sub
daa
sbb
data16
sbbb
cmpl
pop
or
xor
orl
and
inc
xchg
pop
pop
adc
imul
adc
lcall
jg
adc
dec
hlt
subb
mov
mov
lret
out
jnp
add
jg
mov
ss
shlb
notl
int
ficoms
les
icebp
xchg
in
dec
les
and
js
cmpsb
and
sahf
mov
cmp
fldcw
repz
mov
xchg
sahf
mov
mov
dec
dec
mov
add
sets
and
pop
or
dec
and
data16
jle
cmp
mov
dec
mov
jnp
outsl
jo
aas
mov
xchg
cmc
push
pop
jne
mov
fdivs
mov
and
out
lcall
add
xchg
dec
popa
sbb
std
xchg
and
lret
mov
mov
cmp
mov
ret
mov
cwtl
andb
adc
insb
cmpsb
rcll
mov
pop
mov
addr16
xchg
xchg
shlb
mov
scas
test
test
push
xchg
out
jecxz
addl
inc
imul
cmp
andl
imul
int3
cmp
jge
ret
ret
test
add
lahf
mov
dec
cmp
test
cwtl
jne
dec
inc
loop
push
mov
mov
pop
mov
adc
inc
in
sbb
sbb
aas
cmpl
inc
aad
loop
push
add
movsb
iret
dec
dec
mov
ljmp
dec
stc
mov
jae
movsb
push
mov
pop
xor
push
xor
pop
in
xchg
fidivrl
cmpsl
sbb
sub
xchg
jge
pmulhuw
mov
and
aam
shl
imul
add
lock
mov
daa
push
mov
ret
jle
dec
xchg
mov
sub
mov
lods
nop
jnp
call
and
jle
out
shlb
inc
inc
or
insl
leave
fsub
pop
add
xor
dec
dec
out
mov
movsl
add
adc
cmpsl
jne
andb
mov
mov
xchg
xchg
mov
add
mov
scas
mov
pop
push
outsl
stos
add
add
out
rolb
lods
lea
ds
sub
add
test
and
sbb
inc
rcrl
stos
jle
cwtl
jbe
loopne
sahf
add
inc
cmpl
cmp
outsb
test
sbb
adc
cwtl
mov
iret
push
shr
fwait
bsf
nop
hlt
adc
mov
dec
in
mov
fs
jne
ljmp
cmc
hlt
or
das
nop
push
stos
scas
jb
pop
inc
daa
iret
cmp
minps
sbb
repnz
or
aaa
mov
nop
in
pop
xchg
ljmp
add
cmp
ret
inc
sti
lret
jo
aam
das
loop
push
movsb
or
sub
push
ret
dec
inc
push
pop
push
add
xor
pushl
pop
add
mov
and
jle
loopne
push
push
sbb
shr
loopne
test
popl
pop
test
inc
xchg
imul
fcomps
adc
jmp
mov
lret
outsb
mov
fwait
xchg
xchg
loope
je
int3
adc
pop
ja
mov
pop
jge
fisubrl
sub
fildl
das
negl
cmp
lret
jle
in
add
or
mov
sbb
sub
cmp
push
pop
je
mov
pop
ret
sarb
mov
ljmp
sub
add
lret
inc
fs
sti
push
sub
dec
arpl
popf
mov
jns
add
dec
push
in
jae
adc
stos
mov
icebp
adc
add
or
mov
pop
push
add
repnz
ss
in
sub
pop
test
cs
popa
in
mov
cmovge
push
xor
pop
mov
pop
mov
or
dec
stc
mov
cmp
fwait
cmp
frstor
push
je
mov
lret
mov
push
xor
and
or
lods
popa
out
mov
mov
incl
rorb
hlt
mov
call
mov
sar
add
dec
or
pop
push
mov
movsb
or
or
fcmovnu
lahf
pop
or
jmp
fadds
in
pop
dec
imulb
push
pop
sub
sbb
jb
loop
mov
mov
into
adc
or
out
pushf
dec
mov
sbb
out
icebp
shr
fsubl
add
mov
sub
xchg
mov
data16
jmp
ja
ret
push
adc
js
imul
dec
push
rcrl
add
adc
orl
cmp
lahf
mov
mov
mov
mov
imul
das
mov
and
loopne
das
mov
aam
push
mov
cmpsl
lcall
call
xchg
jg
movsl
gs
mull
dec
clc
sarl
or
xchg
push
sub
push
lcall
mov
sbb
jl
ss
fildl
mov
mov
and
cwtl
je
mov
add
ds
mov
cmp
adc
into
cmp
xchg
fmul
decb
dec
into
pop
push
jle
sbb
cs
push
sti
dec
add
cltd
lock
mov
jp
hlt
inc
in
imul
repz
popf
and
lea
lock
and
jg
imul
stc
aaa
xchg
mov
fisttpll
xchg
dec
push
gs
mov
cmc
rcr
mov
xor
ljmp
mov
fnstcw
aad
movsl
insl
xchg
push
sub
jl
out
stos
insl
mov
sahf
in
pop
mov
mov
sub
les
add
xor
imul
mul
loope
push
jecxz
pop
out
in
sub
cli
ja
xor
aas
inc
ja
fisubrs
std
stc
jno
mov
hlt
fistl
clc
out
or
cmpsb
les
pop
sub
pop
gs
cmpsb
stos
mov
aaa
xlat
sbb
mov
push
aaa
outsb
adc
lcall
push
aam
lea
mov
in
sub
mov
rcrb
jb
fs
ficoml
xchg
pop
lods
mov
sub
das
add
stos
jno
pushf
cmpsl
inc
mov
and
fiadds
jp
jmp
cmpb
cwtl
jp
cmp
popf
mov
mov
xchg
or
pop
xor
dec
lcall
adc
sbb
stos
iret
push
test
lret
cmc
or
mov
xlat
leave
sub
cli
cmpsb
dec
inc
sbb
cmp
jmp
jg
or
xchg
scas
cwtl
jb
add
dec
pushf
pop
fiaddl
cmp
sbb
repnz
jl
inc
stos
adc
fistpll
loope
mov
cmp
push
lods
sbb
push
jmp
xchg
sahf
cs
add
and
mov
mov
dec
push
popf
aam
movsb
mov
aam
js
jmp
pop
fdiv
mov
popl
repnz
mov
psrad
jnp
push
cltd
sub
sub
mov
xchg
lods
xchg
mov
jle
hlt
add
inc
add
cmc
imul
push
jle
stos
add
je
jg
add
aas
movsl
xor
iret
nop
dec
xor
test
xor
push
scas
sub
jbe
nop
rcrb
mov
fwait
andb
cmpsl
leave
push
dec
gs
rcrl
jb
cmp
xchg
movsb
les
nop
aaa
das
inc
je
rorl
sbb
jp
fucomp
repnz
bound
dec
lock
aad
ljmp
and
insb
punpckldq
imul
lock
lock
rcl
xchg
test
loop
push
clc
jecxz
sbb
sub
pop
mov
out
std
arpl
xlat
mov
push
sbb
mov
bound
mov
dec
pop
jecxz
cmc
fidivs
lcall
mov
lods
out
mov
out
ja
dec
xor
jns
dec
xchg
and
mov
jnp
ret
jo
push
mov
outsl
lahf
bound
add
adc
enter
xlat
cmp
negl
sbb
and
aas
pop
cmpsb
jle
mov
push
jle
push
insl
pop
lret
sub
and
out
hlt
test
ja
push
inc
fmull
arpl
dec
daa
mulb
inc
rclb
lds
sub
out
adc
and
imull
dec
or
fadd
xor
in
in
dec
or
jne
lods
mov
dec
enter
inc
ja
and
pop
lret
std
adc
push
test
loop
repnz
and
aad
gs
lahf
imul
inc
inc
icebp
inc
xor
and
xchg
xor
or
cmp
into
int3
int3
cmp
cs
jecxz
jmp
cmp
push
push
jo
sbb
xlat
dec
ss
arpl
add
xchg
add
stos
lods
in
aam
repz
enter
daa
lods
xchg
cmp
or
pop
pop
in
mov
pop
in
movsl
mul
cmp
mov
xlat
xlat
es
negl
int3
imul
insb
pop
movsb
cltd
aad
mov
fmull
ja
sub
push
popa
add
mov
and
sbb
test
cs
inc
movsb
ret
sub
or
add
ljmp
repnz
std
adc
jg
or
aaa
les
or
in
sbb
insl
cmp
mov
sbb
xor
hlt
xchg
push
mov
adc
mov
push
addr16
pop
adc
or
xchg
int3
mov
hlt
lret
mov
fnsave
lock
in
xchg
ret
call
jmp
push
out
push
jnp
lahf
jl
outsb
aas
lret
ret
dec
cmp
xchg
mov
rcr
imul
mov
xor
pop
lret
popf
out
cmpsb
cmp
cmp
cmpb
loop
repnz
repnz
sub
imul
jb
jmp
mov
and
sbb
sub
mov
lods
std
outsl
stos
adc
xchg
pop
mov
scas
test
repz
mulb
and
mov
xor
sbbb
shll
fwait
inc
inc
mov
repnz
and
cmpsl
sarl
je
nop
lret
pop
imul
cmp
inc
cltd
call
cs
lret
lock
sub
mov
subl
jp
hlt
adc
pop
pop
or
xchg
jno
faddp
mov
mov
add
xor
xor
sbb
dec
push
rol
std
pop
jb
andb
mov
mov
mov
loop
push
adc
in
jne
sbb
dec
dec
push
hlt
push
dec
insl
push
push
jnp
cmpb
add
sbb
add
dec
movsl
inc
adc
scas
repz
or
push
jge,pt
xor
xor
sbb
pusha
jnp
cmpsb
idiv
aad
mov
inc
insb
push
fucomip
add
inc
mov
je
and
stos
jmp
fs
push
adc
sar
fstl
pusha
addr16
cwtl
ret
ds
pop
xchg
dec
ficoms
mov
daa
rorl
and
add
push
add
test
repz
ja
icebp
call
and
addr16
cmpsb
add
lods
std
xchg
in
mov
mov
xchg
cwtl
or
stc
mov
fwait
ret
and
sbb
fnsave
test
push
je
jno
lret
push
call
sbb
clc
test
cmp
pop
outsb
jmp
add
add
cmp
dec
jb
stos
jle
cli
gs
outsl
cmpsl
adc
sbb
adc
mov
mov
fsubp
mov
pop
and
arpl
push
outsl
push
add
fwait
stos
int3
iret
imul
cs
inc
sub
ljmp
mull
sbb
sbb
cmp
rcrb
lahf
out
sbb
and
fmull
dec
mov
mov
xor
ret
cld
out
jge
dec
loopne
loop
pop
push
jecxz
mov
push
xchg
push
outsb
sub
cwtl
insl
mov
push
sbb
mov
js
add
and
sub
sub
lods
mov
in
push
je
repnz
xor
ret
or
cmp
cmp
push
jo
mov
shll
sarl
xchg
sar
lahf
push
cld
xor
or
inc
mov
cmp
push
movsl
mov
loopw
es
divl
lea
das
push
les
cmp
sarb
add
packssdw
inc
push
out
dec
xlat
mov
inc
sub
push
in
push
addr16
sbb
in
jmp
push
jecxz
sbb
mov
rcll
and
lods
add
mov
out
fisubl
icebp
xorl
or
sti
clc
jmp
stos
dec
jne
push
icebp
aaa
mov
sar
pop
push
push
and
repz
xchg
sarb
cmp
into
jb
lret
fidivs
mov
and
jle
dec
sbb
adc
push
or
lahf
pushf
jno
add
sbb
outsb
dec
xor
inc
addb
adc
push
pop
xor
or
pop
divb
movl
jbe
lods
sbb
xchg
jecxz
or
mov
pop
test
or
mov
mov
mov
inc
dec
xor
int
adc
add
pop
fadds
in
inc
sub
add
andb
jl
cmp
jl
and
xchg
xor
xor
leave
bound
ficompl
dec
das
fadds
push
andb
rcl
negl
xchg
pop
xchg
mov
rolb
adc
cmp
push
fsubrs
jne
ret
aaa
push
lods
fsubrs
cmpsb
xchg
or
pop
enter
and
fcomp
xchg
mov
fstl
adc
shl
andb
push
xor
arpl
daa
push
jp
dec
jp
inc
das
or
int3
or
lds
and
fchs
and
xchg
lods
hlt
popf
adc
js
adc
jl
sub
ljmp
cli
or
fcoml
xchg
xor
jb
sub
idivb
pop
adc
jno
shrl
xchg
adc
lods
shrb
sahf
fsub
daa
stos
jp
and
jmp
pop
dec
jns
insb
call
inc
ret
jb
fidivs
lds
pop
subb
stos
xchg
push
xchg
test
sbb
and
sbb
cmp
arpl
and
mov
popa
dec
add
xchg
lcall
cmc
movsb
pop
ret
jae
in
loope,pt
imul
popf
inc
push
out
adc
xlat
push
adc
xchg
movsl
gs
cwtl
pop
cmp
fstpl
push
mov
push
pop
push
pop
out
xlat
mov
addl
loope
push
dec
jns
loopne
shlb
cld
add
pop
or
rcrl
scas
lahf
sub
test
push
arpl
xchg
or
fldcw
outsl
int3
popf
adc
in
cld
adc
imull
pop
mov
fwait
sub
mov
dec
dec
inc
stc
imul
push
push
mov
flds
loopne
inc
mov
mov
pop
mov
cmp
mov
hlt
lods
jmp
lret
clc
ljmp
sahf
icebp
jb
mov
rcll
sbb
inc
xorl
inc
xchg
or
movsl
mov
sbb
ljmp
xchg
sub
sub
leave
dec
dec
test
out
add
ret
ficoml
cmpsb
pop
sub
add
lret
xor
popa
cmp
stos
stos
xchg
fcomi
mov
test
mov
sbbb
lods
int3
jb
ss
les
xor
lods
add
scas
push
xor
sub
push
mov
lea
add
sub
dec
lds
inc
pop
mov
mov
dec
pop
dec
pop
inc
clc
mov
std
jecxz
cmp
in
ljmp
xchg
and
jge
fs
and
loop
jno
mov
dec
dec
iret
jne
vmwrite
cld
stos
jne
lcall
sbb
and
lret
out
test
adc
pop
mov
mov
hlt
jmpw
xlat
mov
mov
inc
push
adc
cld
mov
arpl
mov
inc
into
cmpsl
push
sub
scas
or
sub
inc
movsb
insb
xor
cmp
lret
stos
sub
push
outsl
pusha
ds
mov
jle
aam
invd
mov
ss
cmpb
pusha
and
sti
sbb
arpl
add
xchg
in
pop
pop
push
mov
push
adc
cs
cli
addl
icebp
mov
push
add
mov
sub
lgs
icebp
int3
lds
aam
shll
rcr
ror
jg
loopne
insl
nop
sub
arpl
cmp
dec
lea
out
adc
or
rorb
mov
loopne
mov
sarb
aam
or
push
sahf
mov
push
cld
js
jnp
pop
lret
loop
jp
stos
sarl
jl
into
dec
scas
sahf
sarb
push
popa
cli
sub
cmpsl
cltd
fsubrs
shl
mov
cld
popl
cld
nop
inc
cwtl
daa
sub
inc
inc
test
add
jne
test
xchg
adc
leave
mov
stos
dec
push
add
shrl
jl
mov
mov
or
icebp
add
lret
ret
negl
fstpt
lea
dec
push
das
xchg
pop
loop
xor
xor
xchg
cmc
pop
cld
loope
mov
mov
aaa
hlt
mov
sbb
and
arpl
mov
std
aad
lahf
test
out
sub
aad
push
hlt
in
ljmp
adc
xchg
xlat
je
inc
cmp
subb
adcb
daa
xorl
cmp
or
xor
inc
sub
lock
push
outsb
int3
jmp
into
negl
and
or
in
addr16
push
push
pushf
or
shr
enter
sbb
ret
pop
popf
rorb
ret
cmp
das
jle
cmp
aad
dec
lea
movsl
sub
inc
test
add
outsl
mov
xchg
xor
sbb
add
popf
jecxz
lods
sub
sahf
mov
jno
pop
icebp
loope
mov
xor
xor
cmp
mov
inc
mov
adc
mov
ficomps
cltd
aaa
sub
jmp
dec
jge
lods
sub
adc
pop
mov
sub
inc
lret
pop
sahf
addr16
aas
jno
inc
dec
das
cmpsl
icebp
mov
ss
sub
xchg
jb
jmp
iret
mov
or
sti
cli
bound
ja
insb
test
mov
or
rcrl
ja
push
add
xchg
pop
push
aas
pop
les
cmp
scas
mov
out
sbb
add
dec
shrl
sub
push
push
icebp
lcall
xchg
sbb
or
sbb
or
mov
cmp
mov
or
fists
pop
insl
pop
je
push
pop
jp
and
mov
stos
bnd
mov
dec
and
mov
fsubs
jne
iret
cmp
xor
cmp
and
jle
pop
rcr
adc
adc
scas
push
mov
push
icebp
inc
sarb
sbb
jb
xor
and
jne
in
in
fdivr
idivl
pop
cmp
and
inc
mov
pop
inc
or
jae
or
mov
xchg
inc
cmc
rorb
xchg
mov
dec
ss
daa
push
mov
dec
cmp
ret
push
cmp
xorl
lock
loope
inc
sub
pop
dec
pop
mov
je
mov
xchg
dec
dec
jb
xor
mov
ret
sbb
dec
rcr
mov
add
test
and
pushf
cmp
jl
jmp
daa
call
fisubrs
xlat
sub
lcall
dec
outsl
dec
les
xchg
xor
mov
icebp
cli
add
cmp
lret
sbb
jae
mov
ljmp
mov
dec
jp
mov
and
out
ss
add
pop
mov
mov
mov
pop
pop
adc
scas
movsb
xchg
mov
jp
inc
dec
cltd
xchg
pop
shll
jbe
andl
mov
gs
fldl
dec
cmpsl
sub
sbb
add
dec
gs
movsb
fs
mov
push
push
add
repnz
jle
fldenv
je
xlat
xor
jge
xlat
fabs
cli
sbbl
ficompl
add
mov
stos
pop
stc
jge
iret
mov
pop
enter
xlat
mov
fdivrl
jle
inc
pop
adc
stos
xor
sbb
mov
test
sub
movl
lock
mov
push
mov
push
push
mov
gs
lea
push
fwait
pop
gs
push
stos
sub
leave
lods
push
rcpps
dec
adc
into
lret
xchg
xor
in
sub
xor
cmpb
jp
or
stos
and
std
aam
or
jns
dec
sbb
push
dec
lods
aaa
je
clc
push
dec
icebp
dec
cwtl
jg
dec
xor
push
dec
daa
repz
imulb
in
loope,pn
js
mov
movsb
inc
rol
sub
inc
jnp
sub
test
cmp
and
and
or
out
pop
stos
xor
adc
add
xlat
or
ret
mov
scas
push
loope
addr16
lcall
mov
sbb
lret
xchg
fsubs
in
pop
push
out
inc
pop
sar
mov
or
imull
ret
push
push
pop
pop
clc
add
in
xor
sbb
imul
dec
mov
lods
nop
ret
jp
sub
and
mov
inc
addr16
jge
repz
sbb
dec
lret
add
ds
addr16
cmp
ljmp
dec
fildll
les
pop
ret
mov
push
je
rcrb
xor
sub
pop
loopne
fwait
bound
adc
addl
pop
sti
dec
loop
daa
out
lock
pop
loopne
pop
xor
ficoms
mov
ds
cmp
lods
inc
add
out
inc
push
lret
push
sub
and
cltd
daa
xchg
pop
mov
cmp
mov
ret
adc
outsb
mov
idiv
mov
test
lret
jbe
stos
and
push
dec
pop
or
movsb
pop
xchg
enter
in
loop
jmp
inc
lahf
dec
lds
xchg
mov
scas
js
mov
adcl
pop
loopne
dec
sbb
ljmp
cld
cltd
shr
sbb
push
sbb
andb
stc
inc
and
lahf
hlt
inc
cmp
sti
pop
push
daa
and
xor
in
xor
jo
push
fmuls
fimuls
scas
inc
cwtl
xor
and
adc
inc
sbb
pop
mov
jnp
jnp
xor
cmp
in
xchg
jp
cltd
inc
dec
jnp
mov
pop
out
movsb
inc
stos
ret
aam
imul
xor
mov
inc
jl
sub
sahf
shlb
andb
sub
push
mov
cmpsl
inc
inc
test
pop
icebp
xor
dec
adc
jl
stos
repnz
push
sbb
mov
mov
and
push
stos
popa
mov
jnp
add
ret
je
lods
gs
dec
push
push
sbb
adc
dec
push
dec
repz
fs
fs
mov
xor
lret
lahf
fldl
mov
ss
add
jl
pop
imul
pop
jmp
movsb
xor
pop
push
rol
pop
xor
in
inc
imul
xor
jnp
inc
and
outsb
jp
lods
cs
cmp
adc
and
lret
scas
mov
shll
pop
jne
jecxz
push
test
cmp
orb
xchg
lods
xor
jl
test
xchg
push
lea
loopne
jecxz
sbb
mov
stc
inc
push
inc
ret
mov
fdiv
or
xchg
clc
fistl
xor
inc
cmp
inc
mov
daa
pop
stos
test
adc
adc
mov
cmp
enter
and
inc
clc
outsb
inc
add
xchg
jg
mov
rorl
dec
fsubs
xor
data16
xorl
mov
xchg
data16
xchg
lods
sbb
ds
aas
add
repnz
push
mov
jecxz
popa
pop
imul
adc
xchg
insb
jae
sahf
test
dec
sub
arpl
testb
pop
out
cld
pop
test
rcrb
xadd
jge
or
clc
out
clc
pop
cmc
mov
sub
mov
stc
sub
into
inc
pushf
pop
add
push
adc
es
jae
cmpsl
mov
nop
push
adc
mov
cmp
mov
xchg
xchg
mov
mov
bswap
mov
sti
int
inc
das
and
xchg
vpsadbw
test
jo
adc
jecxz
insb
or
mov
dec
ja
gs
in
cwtl
and
cs
scas
movsl
xor
lds
and
test
test
fstps
adc
pop
cmp
and
cmpsl
pushf
mov
jmp
sub
xor
sbb
pop
cmp
mov
mov
sti
or
push
mov
data16
sysenter
jae
xchg
mov
ljmp
jge
lods
jle
sti
paddusb
cmpsl
movsl
in
pop
sbb
xchg
fwait
inc
or
adc
dec
cmpsb
or
sbb
lret
test
insl
mov
shll
es
mov
pushf
sub
jns
in
push
cmp
das
test
gs
jns
fildll
test
stos
mov
mov
jle
and
daa
aad
in
mov
adc
and
xchg
aaa
xor
cmc
xchg
sbb
nop
repnz
and
jne
push
mov
or
clc
inc
into
loopne
ja
popa
sub
xchg
jg
out
xchg
or
jbe
mov
out
and
out
lahf
sbb
inc
mov
jle
push
inc
stos
je
mov
shrl
sbb
mov
xor
pop
mov
mov
in
jecxz
out
jb
push
stos
ja
and
bound
inc
sub
or
es
and
pop
push
in
repnz
add
dec
stos
adc
sti
adc
loope
fstp
mov
jl
scas
and
outsl
fsubp
push
pop
jno
inc
andb
stc
push
cs
loopne
xor
and
add
mov
ret
inc
adc
js,pn
aad
cmp
mov
ja
arpl
jne
push
add
imul
xorl
dec
jb
dec
dec
sbb
xchg
rcl
es
mov
scas
test
call
adc
insl
nop
push
and
aad
mov
movsl
sub
add
test
xlat
lock
divl
mov
clc
or
adc
fs
or
push
out
inc
xor
cs
adcl
xchg
xor
mov
xor
push
test
pop
pusha
push
xchg
inc
push
xchg
xor
xchg
and
xor
divl
jo
mov
nop
mov
pop
mov
orl
pop
shrb
iret
stc
mov
adc
pop
in
mov
in
mov
inc
sahf
xlat
jae
shlb
xchg
add
mov
push
cs
push
fwait
mov
jmp
add
xor
and
xchg
or
out
int3
mov
aas
jl
and
aam
jle
cwtl
push
mov
sti
lret
mov
mov
arpl
inc
sbb
mov
outsl
outsl
push
pop
jge
jae
stc
add
dec
test
hlt
mov
rcll
lods
hlt
or
int
aaa
sub
icebp
mov
cmp
or
enter
add
mov
cmp
mov
inc
jbe
mov
mov
movsb
test
push
mov
push
std
mov
out
cmp
rcrl
aas
iret
imulb
lea
push
push
sarl
mov
mov
or
lock
xchg
pop
in
xor
enter
mov
inc
aam
out
add
inc
sub
out
scas
push
push
mov
pop
cmp
lea
mov
scas
mov
ds
popa
mov
nop
mov
cmpsl
jno
cmp
dec
arpl
fldl
or
xor
or
mov
ss
jnp
ja
aam
ret
dec
imul
js
add
mov
imul
call
divl
push
pop
jl
outsl
pusha
xchg
add
out
cmp
cltd
in
je
cmp
mov
mov
push
mov
aad
mov
je
xor
imul
and
inc
jle
addl
or
jnp
mov
fisubrl
repnz
stc
or
inc
or
jnp
adcl
pushf
cmp
fisubrs
mov
scas
nop
or
test
dec
mov
mov
cmp
jl
out
adc
inc
sti
inc
xchg
imul
inc
fs
mov
fs
sbb
cs
nop
inc
xchg
pushw
mov
sub
in
dec
mov
stos
pop
add
xchg
jae
jecxz
dec
outsb
push
incl
stos
cmp
cld
daa
and
push
idivl
shr
sbb
jecxz
fildl
cs
js
rorl
mov
aam
fwait
outsl
mov
fnstenv
rol
sbb
ss
or
pop
cmc
call
inc
mov
mov
sub
xchg
sahf
sbb
daa
ret
clc
inc
jge
mov
add
xchg
testb
lods
cld
out
xor
sub
gs
jo
and
and
in
sub
dec
jne
repnz
popf
mov
loop
add
mov
adc
ds
dec
sub
sbb
mov
and
or
inc
imul
cmpsl
into
iret
add
mov
add
repz
insl
mov
jl
cmp
mov
sub
xor
inc
mov
add
push
scas
push
out
inc
cmp
add
sub
imul
cmc
xlat
ret
sub
aas
xchg
insl
inc
xchg
dec
add
or
test
popa
dec
push
pop
xlat
pop
add
in
arpl
jl
popf
sub
scas
cmpsl
insb
frstor
scas
jmp
pop
mov
adc
nop
mov
sub
inc
stc
jbe
push
int3
cmpsl
jo
pop
mov
and
aas
stos
test
pop
out
mov
test
and
ret
or
sahf
ja
pop
cld
cld
ror
lret
hlt
push
pushf
cmc
aaa
adc
aaa
jle
mov
std
inc
dec
in
dec
out
mov
in
frstor
pop
sub
addr16
jns
push
jmp
mov
stos
add
inc
jno
cltd
orl
mov
fs
or
ds
daa
or
addr16
lods
cmpsb
repnz
xor
mov
dec
les
mov
inc
gs
add
mov
fs
adc
insl
mov
mov
cmp
js
cmpsb
push
clc
jecxz
sbb
int3
add
in
mov
ret
stc
cwtl
cmpsl
mov
cltd
sti
add
cmp
jecxz
cmp
xor
sbb
pop
cmc
notb
xchg
fdiv
pop
push
dec
mov
pushf
or
xchg
push
cld
jecxz
out
pcmpeqd
mov
inc
out
mov
imul
mov
sub
mov
cmp
ljmp
mov
mov
unpcklps
pop
insb
cld
adc
jne
outsl
popa
lods
sbb
add
ret
les
into
lcall
jnp
push
inc
and
clc
movhps
mov
std
lcall
and
fsubs
dec
mov
push
inc
inc
pop
fs
xorl
mov
cld
pop
or
aad
pusha
pop
mov
pop
push
imul
push
frstpm(287
stc
repz
mov
cltd
fucomi
rclb
pop
mov
aas
loop
jp
adc
das
mov
test
ret
xor
jae
out
aad
push
inc
fstl
dec
mov
and
jecxz
aad
sbb
mov
loop
mov
aaa
dec
pop
mov
dec
sub
push
adc
mov
sub
jl
cmp
xchg
sbb
mov
xor
clc
ucomiss
add
in
out
mov
addr16
mov
movsb
dec
gs
pusha
ljmp
loop
jne
mov
or
cli
mov
jnp
xor
ss
xchg
sub
fcoms
xchg
imul
out
and
dec
bound
lret
or
cmpsl
sub
inc
aam
lahf
loope
in
cmpsb
push
sbb
or
or
xor
jno
mov
repz
divb
test
aaa
sub
push
rclb
sti
xor
jle
mov
lock
dec
fildl
enter
xor
leave
push
push
mov
test
rcrl
rorb
add
das
repz
imul
lods
fadds
in
xor
mov
push
aas
outsl
mov
pop
sub
nop
mov
bound
or
testb
jp
xor
fistps
and
aam
adc
into
loopne
stos
push
sub
cmpb
and
jg
pusha
inc
mov
icebp
scas
aas
imul
pop
add
out
sahf
insb
mov
mov
je
repnz
pop
xchg
adc
shll
jbe
jg
add
in
test
cltd
mov
pop
cmpsb
xchg
mov
hlt
sar
sub
jmp
fwait
add
mov
pusha
jne
lods
xchg
sbb
jp
mov
jnp
mov
sahf
add
lods
pushf
sub
lods
arpl
mov
sub
aaa
adc
jb
pop
loopne
popf
gs
fdivr
xchg
aas
int
pop
pop
js
test
mov
in
clc
inc
enter
js
dec
pop
subb
out
push
push
lret
fcmovb
iret
rorb
xchg
fdivl
stc
out
in
cmpsl
mov
out
scas
mov
nop
xor
loopne
cmp
pushf
cmovs
fadd
xchg
add
cmp
jmp
incb
xchg
or
adc
jne
data16
or
dec
aaa
in
inc
insb
jecxz
mov
loopne
xchg
push
and
pusha
inc
and
cmp
mov
fs
pop
andl
pop
cmp
xchg
dec
fistps
lret
mov
lds
dec
adc
mov
add
jns
dec
adc
fcoms
inc
lods
sbb
inc
cmp
mov
inc
dec
jb
add
mov
cli
lcall
and
jbe
inc
shll
std
cwtl
sbb
cltd
mov
mov
sub
shlb
int3
add
dec
sub
aam
addr16
subl
repz
sub
shl
dec
lock
arpl
dec
movsl
push
xor
pop
fisubrl
or
xor
sub
mov
mov
outsb
mov
xor
xchg
inc
or
cmp
adc
cmp
enter
sahf
push
lret
jmp
lock
movsl
js
dec
pop
std
popf
xchg
xor
adc
dec
or
insb
mov
rclb
bound
or
scas
lea
jmp
sbb
sti
lahf
cmp
xchg
dec
rcll
or
stos
test
mov
mov
cmpsb
mov
xor
jp
or
add
jnp
sub
inc
sub
xor
pop
jg
pusha
jnp
aad
daa
inc
sbb
adc
adc
sbb
jmp
push
mov
aaa
and
push
pop
hlt
mov
dec
in
xorl
popf
inc
and
aad
loope
call
fsubrs
add
mov
jecxz
rcr
pop
nop
push
ja
add
pop
gs
and
test
lret
out
aad
ds
xor
ret
cmp
repnz
push
mov
or
arpl
sbbl
imul
cmp
and
xor
dec
imul
mov
out
stc
jp
lds
mov
xlat
xor
lret
or
hlt
cli
loop
sahf
push
ja
xchg
dec
adc
xor
mov
and
inc
inc
cmpsb
fs
lock
push
pusha
jl
cmp
xor
cbtw
mov
jecxz
jno
add
add
pop
lcall
inc
das
sub
pushf
xchg
push
mov
ljmp
fstps
pop
rcll
sub
sbb
insb
out
mov
scas
in
mov
inc
sbb
mov
loopne
xchg
dec
fnstcw
test
lret
fimuls
outsb
xor
lods
sub
jnp
popa
mov
pop
mov
lret
stos
fildl
lret
sarl
and
ja
ficomps
in
and
xor
int3
cld
in
inc
hlt
or
push
cmp
dec
jp
xchg
sub
iret
test
aad
jo
cmpsw
xlat
xchg
mov
pushf
popa
stos
mov
push
cmp
add
pop
sbb
mov
add
sub
add
lret
orps
sarb
inc
int
testl
fstpl
sub
out
dec
pushf
mov
sbb
mov
fsts
push
add
jo
mov
mov
sbb
mov
aaa
out
in
loopne
xchg
cmc
pop
cmp
pop
cltd
in
lock
xor
xchg
sub
lahf
mov
adc
and
loopne
cmpsb
mov
add
cltd
incl
inc
mov
sbb
mov
gs
pop
cmp
inc
push
fistl
stos
inc
adc
dec
fadds
test
inc
push
aas
rcrl
sbb
xor
jmp
push
imul
add
jae
nop
cmc
fdivrp
xor
aam
pop
pop
pop
or
out
cmp
sbb
in
rol
xchg
and
xchg
jo
cmp
movsb
xchg
and
inc
add
inc
and
mov
arpl
adc
stos
cmp
shll
xor
and
pop
add
in
jne
add
lahf
dec
pop
push
mov
ss
js
bndstx
push
stos
push
pop
pop
aam
pop
cmp
jl
mov
movsb
add
ja
cmpsl
jne
movsb
sub
pusha
cmp
mov
dec
sbb
push
and
and
jae
jge
cmp
test
lods
cmc
mov
xor
dec
mov
dec
notl
cld
movsb
jae
pop
movsl
test
pushf
and
pop
sub
enter
out
push
sbb
test
push
cmpsl
dec
jle
arpl
cmpsl
add
rol
faddl
out
pusha
lods
leave
mov
loop
jmp
xor
popa
insb
cli
aas
idivl
sub
mov
adc
arpl
sub
adc
lods
shll
xor
xchg
sahf
jg
test
jecxz
adc
xor
cld
mov
adc
and
add
insb
mov
and
jnp
js
xchg
or
int3
imul
push
jl
ficoml
lret
jo
lret
sbb
aad
push
icebp
jmp
fisubrl
cmp
xchg
int3
push
mov
or
or
cwtl
jne
mov
lret
jbe
and
loop
xchg
mov
cmp
or
insl
or
mov
insl
mov
pop
push
mov
or
insl
push
lods
lcall
outsb
leave
push
jno
xchg
mov
jmp
jae
mov
mov
outsb
out
mov
bound
push
mov
pop
jl
repnz
push
and
inc
pop
ret
bound
ja
mov
and
cmp
jno
mov
sub
addb
hlt
enter
ret
inc
dec
xchg
dec
push
insl
shrb
and
mov
jecxz
xlat
jnp
push
dec
pop
jge
jne
in
lock
cmp
pop
add
add
inc
inc
aas
xlat
push
enter
outsb
cwtl
mov
xchg
mov
push
dec
mov
loopne
les
bound
xchg
test
call
fisubrl
movsb
or
add
and
mov
lods
lret
std
testl
loope
cwtl
stos
push
int
mov
loop
aam
loope
push
jp
sbb
test
mov
sbb
xchg
test
das
mov
push
cmc
in
cmc
sbb
stc
in
pop
ljmp
cmpsl
cmp
or
jp
popa
xchg
stos
pushf
push
pop
daa
inc
cmpl
addr16
ficompl
rcl
shrl
lret
push
and
add
loop
push
aam
pop
loop
es
sbb
popa
clc
repnz
pop
pusha
dec
int3
test
int
insb
and
sub
lret
leave
push
sub
sbb
sub
fcmovnb
mov
sub
dec
std
adc
and
jo
and
fcomi
movsb
jmp
test
loopne
shlb
repnz
int3
cli
and
scas
and
cmp
or
int
cmc
mov
or
cmp
lret
mov
lahf
or
add
ss
and
mov
or
xchg
mov
shl
out
and
push
out
sub
inc
and
add
or
sub
jge
cmp
mov
loope
shr
test
mov
int3
es
hlt
or
push
js
mov
adc
add
mov
test
mov
ds
sbb
mov
cmp
add
mov
push
sbb
cmpsl
ret
int
lea
push
push
loop
les
xchg
push
jecxz
nop
in
xchg
sbb
push
add
mov
and
lret
ljmp
test
jmp
nop
adc
ret
nop
xor
xchg
ds
bound
fisubl
adc
dec
push
mov
or
ljmp
je
and
aam
inc
or
pusha
test
imul
fwait
mov
xor
add
movsl
gs
mov
les
adc
fmuls
cli
cwtl
fistps
mov
xchg
outsl
fcmovnu
mov
arpl
mov
push
push
rcll
push
mov
outsb
cld
adc
loop
or
cmp
mov
scas
mov
or
or
dec
mov
les
pop
ja
pop
bound
inc
lock
xchg
push
dec
push
into
adc
cmp
test
scas
lahf
int
lds
jo
je
pop
sub
sub
shrb
adc
or
iret
adc
scas
movsb
ffree
or
mov
add
xor
inc
and
cmc
mov
sahf
xor
add
pop
sbb
test
ja
xor
daa
or
mov
dec
test
push
push
adc
gs
sub
and
sbb
insb
cld
movsl
ficompl
orb
ret
ret
repz
es
negl
mov
les
imul
mov
fisubrl
out
mov
es
jge
shl
add
cmp
xor
in
add
mov
and
adc
lea
outsl
and
subb
popf
inc
ds
push
mov
jne
std
ja
mov
mov
les
jnp
xor
loop
test
xchg
nop
out
push
dec
movl
and
lcall
mov
xchg
fsubs
imul
daa
dec
pop
mov
in
and
call
mov
mov
insl
add
pop
jp
pop
xchg
adc
and
sti
filds
push
add
push
mov
xor
dec
cmp
dec
lock
dec
xor
jne
push
data16
dec
mov
in
jns
xchg
jns
and
iret
lea
push
sbb
cmc
lods
stos
fdivs
loope
adc
sbb
pop
repz
scas
ret
scas
or
mov
jmp
insl
stos
push
cmc
lds
cmp
and
rcll
adc
int
lods
rclb
xchg
push
enter
orl
xlat
enter
into
sbb
fsts
int3
les
imul
insl
jle
enter
out
test
pop
cli
or
jno
mov
push
cli
movsl
out
faddl
mov
cmp
jp
mov
push
push
pushf
jge
outsl
shr
test
jle
pop
movsb
aad
xor
fwait
rorb
cmpsl
sbb
ja
pop
xor
fnstcw
jp
fisubrs
daa
add
insb
cmpsb
stc
xchg
xchg
mov
cld
add
in
cmp
movl
pop
loope
add
adcl
loopne
push
jo
imul
jae
add
out
ds
in
jbe
dec
lret
add
and
out
xchg
in
ret
mov
outsl
movsb
xchg
pop
xchg
push
lods
dec
sbb
pop
sahf
out
jo
push
addr16
xor
jle
out
adc
fists
shl
in
std
mov
xor
leave
add
lret
scas
ret
movsl
push
addl
xchg
stos
xor
xchg
xchg
gs
shlb
push
ret
arpl
mov
xchg
xorb
cltd
add
test
add
rolb
inc
inc
inc
cmp
inc
fdivs
icebp
xchg
mov
mov
mov
add
dec
mov
xchg
mov
push
stos
jb
repz
jg
lret
add
dec
xor
stos
mov
dec
push
add
out
xchg
cwtl
jge
bound
daa
ss
ljmp
inc
ret
sahf
aas
pop
in
mov
jecxz
xor
frstor
repz
push
addr16
mov
pop
cld
adc
mov
sbb
xchg
mov
out
icebp
fs
cmp
inc
lods
mov
ljmp
inc
loope
sbb
roll
adc
push
ljmp
mov
loop
xchg
jne
js
loop
flds
fdivl
cmp
mov
mov
xchg
fs
cmp
out
ss
int
popf
pop
adc
popl
das
lock
dec
dec
or
cmpsl
aas
xchg
jmp
loopne
jbe
inc
mov
fnstsw
mov
adc
sub
push
xor
mov
push
jae
sub
fistpl
outsl
and
in
movsb
mov
dec
ds
out
adc
mov
cmp
and
mov
xchg
lock
pop
sbb
cltd
add
mov
inc
fcmovne
inc
pop
xchg
addr16
inc
mov
adc
ret
fldt
jb
add
test
xchg
mov
add
dec
ficompl
lret
gs
jl
push
rorl
lahf
jne
stc
in
adc
xchg
fldlg2
dec
inc
mov
adc
mov
rcrl
pusha
xor
cmp
mov
and
cmp
xchg
ret
mov
pop
stc
stc
shll
movsb
pusha
repnz
push
push
cmpsb
jecxz
dec
shrb
shrb
cs
dec
jb
add
mov
lcall
xor
jecxz
pop
push
mov
mov
and
les
aad
das
outsl
mov
vfrczps
test
aas
bound
dec
mov
xor
push
push
adc
xor
mov
sbb
rcll
mov
jmp
mov
jecxz
test
pushf
cmc
bound
push
jb
stos
pusha
in
xchg
mov
in
push
pop
nop
sbb
int3
mov
pop
fidivs
lds
mov
js
xor
mov
mov
fsub
inc
les
or
cmc
in
outsl
stc
adc
mov
popa
mov
popf
jbe
les
sub
xchg
lret
rclb
movsl
push
movsl
adc
not
cmp
addb
or
push
dec
aaa
cmp
test
clc
movsb
daa
pushf
xchg
and
and
aad
xor
pop
jge
mov
outsl
in
xor
stc
jle
pop
ret
push
stos
cmp
jmp
inc
push
lock
jns
mov
or
xchg
and
lods
push
js
xchg
cmp
scas
mov
inc
mov
push
scas
inc
cmp
ja
stos
out
cmp
xchg
out
xor
push
sub
and
push
jo
sti
jns
or
xor
xor
aam
mov
push
cs
xor
pop
stc
les
sbb
arpl
addr16
jnp
or
mov
ljmp
lea
pop
stos
cld
pusha
and
andl
pop
cmp
cld
sbb
lahf
push
xor
test
loopne
lcall
mov
lds
mov
mov
fisttps
xor
lcall
mov
push
or
mov
sbb
mov
pop
mov
jg
out
insl
out
aaa
dec
icebp
subl
cmp
cmp
bnd
add
dec
xchg
scas
gs
sbb
xlat
int3
pushl
xlat
test
addb
sarb
rcll
shl
push
inc
push
lret
inc
lret
test
inc
aam
scas
and
xchg
aam
adc
and
sbb
and
scas
or
sub
push
enter
lock
inc
loopne
mov
lret
or
cmp
and
pop
stc
cmp
pop
mov
orb
mov
add
rolb
or
jbe
or
or
pop
shlb
icebp
cltd
adc
jg
jp
jl
push
fisttpl
cmpsl
outsb
or
push
xor
call
sbbb
bound
test
pop
rorb
sti
sbb
mov
test
push
in
test
out
test
pop
mov
call
shrl
test
into
sub
and
dec
xor
dec
jbe
add
dec
jo
sub
inc
ret
inc
inc
mov
push
jle
jnp
testb
add
push
std
or
jmp
sbb
loop
gs
cltd
in
push
arpl
push
mov
add
mov
mov
adc
xchg
push
add
mov
add
or
or
popf
test
in
inc
les
dec
fucomi
pop
mov
push
inc
test
mov
jl
clc
ret
inc
inc
jle
pop
sti
daa
xor
in
addl
les
mov
cmc
xor
add
cld
lret
int3
inc
sbb
nop
add
repnz
mov
sub
push
push
jecxz
sbb
leave
or
cmpsl
in
or
loopne
in
push
xor
mov
pop
add
sub
fisubrl
add
pop
ss
sub
xor
push
mov
sti
pop
arpl
je
sub
adc
push
xchg
inc
cmp
fwait
mov
pop
jg
xchg
push
inc
mov
jne
cmp
adc
cwtl
fcomps
mov
es
je
frstor
repz
out
push
and
push
xchg
xchg
int
inc
dec
stos
aas
inc
scas
addr16
shll
and
dec
jl
cmpsb
jbe
adc
xchg
ljmp
lret
les
inc
lcall
push
lods
push
ljmp
ret
repnz
pop
jmp
mov
pop
imulb
ja
or
and
or
mov
or
sub
aam
cwtl
cmp
dec
jae
add
jnp
cmp
and
imul
mov
lcall
jo
insl
cmc
mov
fisttpll
xchg
ret
int3
lea
pop
cmpsl
xor
mov
lods
push
js
push
jmp
stc
and
das
push
mov
adc
lahf
les
push
jg
mov
stc
stc
testl
lds
leave
adcb
movups
ljmp
xchg
pop
es
iret
sub
sub
decb
mov
loopne
xor
mov
push
xor
das
mov
sub
adc
xchg
push
and
nop
nop
dec
addl
mov
inc
les
xchg
out
cmp
inc
mov
lods
lock
inc
sub
jp
clc
mov
and
shl
int3
mov
rcr
mov
jmp
imul
cmp
pop
leave
mov
fimuls
adc
je
cmp
mov
mov
sbb
pop
ficomps
into
inc
cmpsb
js
movsb
pop
mov
loop
or
das
inc
jns
dec
push
pop
std
mov
jmp
std
aam
outsl
push
mov
mull
addr16
push
clc
dec
and
jbe
lock
in
test
jl
stc
iret
lret
push
xor
xchg
mov
mov
inc
pop
xor
incl
add
mov
add
jl
push
dec
nop
pop
mov
inc
in
jl
add
mov
mov
pop
cmpsb
jl
and
mov
add
add
imul
les
mov
icebp
into
jnp
cmp
insl
push
add
imul
cmp
js
push
fwait
imull
je
push
int3
inc
mov
lea
sbb
pop
mov
inc
push
out
xchg
std
mov
lret
sub
lret
push
xor
sbb
and
in
jmp
adc
loop
cmp
and
test
in
xchg
or
sub
nop
mov
loope
cwtl
andl
enter
mov
cmp
loopne
cld
lock
sub
aam
pop
out
pop
orl
mov
notl
jo
mov
add
subl
enter
nop
adcb
fldt
les
jnp
lahf
repz
ja
call
or
pop
adc
add
adc
mov
or
push
jg
je
loop
xchg
cld
popa
inc
addr16
and
ja
ds
mov
imul
in
insb
add
push
push
sub
push
and
jo
and
lret
orl
fsubrp
addr16
loop
cwtl
xchg
adc
mov
pop
xchg
adc
aam
jle
or
dec
inc
jmp
adc
test
xor
int
loop
ds
les
or
pop
outsl
push
jg
in
sbb
je
or
rcrb
je
add
scas
movsl
mov
les
insb
push
leave
popf
xchg
cli
sub
movsl
cli
es
mov
fiadds
repz
loope
jecxz
push
aaa
jbe
imul
jg
cmp
outsb
add
push
notb
sub
sahf
cmp
pop
push
mov
popf
mov
xor
enter
push
pop
jo
mov
lret
jne
xorl
cmp
push
mov
popa
and
sarb
add
ds
cmp
and
in
xor
and
push
mov
push
sbb
xchg
dec
and
outsl
jnp
push
das
inc
xchg
push
inc
add
mov
lods
adc
add
cmp
sub
sub
jecxz
into
enter
ret
jb
or
lahf
aam
cmp
and
or
mov
add
out
test
sub
push
jg
jge
cli
arpl
jbe
test
pop
push
fnsave
or
pop
xchg
data16
fdivr
scas
testb
xlat
gs
aad
xor
aas
mov
pop
inc
xchg
clc
movsl
sub
jns
add
movsb
sbb
sub
sbb
test
jbe
aas
arpl
mov
lcall
push
add
test
lds
mov
push
ja
shlb
xchg
enter
cwtl
movsl
mov
xchg
mov
xchg
mov
xchg
cmc
sub
mov
daa
pop
fbstp
and
sbb
pop
push
cmpsl
cmpb
adc
adc
imul
jmp
xor
enter
int
or
popa
and
sbb
xor
arpl
mov
daa
xlat
xor
sub
or
js
dec
outsb
mov
aad
and
out
faddl
mov
add
popf
jns
frstor
push
xor
add
push
xchg
ljmp
lcall
jae
cltd
dec
pop
fdivrp
xchg
xchg
sahf
rclb
fstps
inc
lret
xchg
mov
sub
inc
pop
popf
lcall
bound
std
icebp
xchg
arpl
push
xchg
dec
inc
jae
jb
mov
in
lret
jne
movsb
cli
xorb
cmpsl
call
cmpl
and
lods
inc
or
sub
inc
fwait
mov
cmp
cmpl
iret
jg
stc
mov
in
rclb
lret
push
mov
jmp
mov
in
leave
jmp
xlat
cmp
inc
sub
pop
addr16
xor
loopne
sahf
add
push
std
xor
adc
mov
mov
in
pop
pop
cwtl
sub
aas
std
mov
and
mov
jl
adc
dec
sub
cmp
call
hlt
adc
sub
test
sub
arpl
and
cmp
pop
pop
jge
push
xor
ss
lea
sbb
and
xor
icebp
mov
test
push
dec
xchg
aas
das
mov
adc
mov
mov
fistps
mov
pop
inc
jge
cmp
orl
out
stos
cmpsl
and
or
cs
stos
leave
inc
xchg
stos
pop
jbe
xor
xchg
outsl
cmp
or
fildll
or
arpl
xlat
adc
mov
and
lock
outsb
add
push
enter
jno
add
gs
out
xchg
xchg
push
lcall
pop
das
cmp
sahf
cmp
adc
out
cmpsl
add
loope
xchg
and
or
ljmp
push
inc
push
js
xchg
mov
ds
mov
push
out
mov
adc
popf
dec
cs
lods
jecxz
jecxz
in
notb
sbb
push
mov
cltd
push
jg
sbb
cmpsb
mov
ret
fcmovbe
push
mov
jo
and
xchg
aad
or
ds
mov
call
mov
cli
push
xchg
xor
mov
insl
in
pop
fidivrl
and
int
xchg
ss
test
imul
adcl
xor
movsb
clc
out
lock
popa
leave
loopne
mov
fidivl
jle
xchg
or
ds
mov
mov
lahf
and
lahf
jmp
rcll
int
mov
aaa
xchg
and
aam
jb
cmp
add
mov
iret
movsb
fnsave
repz
dec
gs
lret
mov
pushf
test
mov
imul
cli
inc
mov
adc
push
or
mov
push
jns
sub
and
add
jae
sbb
xchg
xchg
shr
jae
mov
xchg
js
inc
das
neg
sbb
mov
ds
shll
mov
repz
clc
sub
and
dec
jb
push
imul
addr16
gs
out
fucomip
mov
mov
add
cmc
sbb
xor
mov
stc
imul
inc
jecxz
aaa
cmp
in
in
aas
imul
jns
mov
mov
into
dec
loope
in
movsl
and
adc
push
rcll
push
inc
xorb
push
mov
add
dec
inc
popa
and
andl
adc
adc
cld
lcall
dec
std
jge
mov
test
add
loopne
mov
scas
mov
lcall
jmp
push
out
mov
xchg
xor
pop
aaa
mov
inc
mov
popf
das
push
mov
in
mov
out
sarb
cmpb
mov
rep
fxtract
mov
aad
aaa
movsb
enter
sub
repz
mov
test
mov
aas
sbb
push
jmp
adc
enter
insb
test
mov
mov
data16
adc
dec
pop
inc
test
fsts
and
jns
popf
xchg
addr16
or
or
idiv
sbb
fwait
or
add
jl
and
test
adc
jl
sub
add
xor
arpl
in
pushf
mov
or
and
and
xchg
jb
cmpsl
sbb
bound
jecxz
xchg
xchg
or
pop
shll
cs
adc
xchg
sbb
adc
mov
pop
ss
das
enter
decl
je
clc
daa
insl
jmp
adc
mov
clc
bound
or
add
aas
cmp
add
ret
cmc
fcoml
and
pop
mov
mov
push
mov
scas
out
aas
cmpb
xor
les
stos
fs
imul
xor
mov
in
jns
daa
sub
loop
mov
shll
xchg
cld
xchg
adc
les
pop
test
jmp
fsubr
sub
add
sub
insb
fs
imul
mov
dec
pop
jmp
stc
data16
sbb
in
shl
cli
inc
cmpsl
cmp
lret
adc
cmp
daa
loop
mov
in
and
je
outsb
ret
rorb
push
xchg
mov
enter
xor
pop
lea
mov
cld
push
lret
sbb
sbb
mov
or
fwait
pop
cld
leave
cmp
ja
mov
sahf
dec
pop
ret
add
les
fwait
jmp
adc
cli
pop
lahf
cltd
ljmp
and
xor
fistps
scas
xlat
xchg
push
sbbb
mov
fcomi
xchg
and
sahf
cmp
jae
popf
pop
out
inc
sub
test
and
cmc
out
xchg
jp
pushf
ljmp
push
mov
xchg
adc
sbb
mov
test
jae
jno
out
and
mov
imul
outsb
xor
and
jp
xor
jno
mov
pop
mov
pop
pop
mov
popa
sahf
dec
jmp
mov
pop
dec
inc
lret
movsl
cmpsb
add
cmpsl
cmpsl
xor
imul
push
mov
sbb
dec
cmp
pop
cmp
dec
and
push
lcall
xor
push
xor
sbb
sbb
xlat
orl
mov
xchg
adc
xchg
or
dec
add
pop
dec
jo
in
xchg
clc
loope
scas
cmp
pop
mov
es
aam
mov
std
sbb
lret
xor
mov
cli
out
push
mov
sbb
scas
jge
stc
cli
cmc
jno
pop
mov
not
dec
lcallw
mov
negl
mov
movsl
pop
rcr
push
and
sbb
xchg
in
xchg
mov
js
xor
addb
test
jnp
mov
loop
mov
mov
lods
push
lret
push
cwtl
jb
xor
test
push
push
leave
mov
mov
movsl
push
cmpsb
adc
sti
jbe
aas
bound
vpsrad
pop
push
shrl
fs
mov
insl
push
dec
pop
mov
cmp
inc
push
not
jmp
std
xor
insb
je
push
or
xchg
add
adc
stos
xchg
popa
sahf
movsb
cltd
int3
clc
je
pop
mov
int
addr16
out
jnp
push
lea
ljmp
sar
decb
adc
mov
loopne
push
sub
ja
pop
mov
adc
adc
std
xchg
popf
movsl
leave
cs
dec
pop
sub
ja
xchg
pop
lcall
sbb
aas
sub
pop
fcmove
movsb
je
ja
insb
push
in
addb
jbe
mov
pusha
mov
ljmp
xor
incl
movl
mov
pushf
arpl
fwait
jge
or
gs
addb
outsb
add
clc
mov
push
sbbb
cmc
sub
scas
leave
cwtl
sbb
lea
int
pop
pop
jp
inc
negb
jl
and
sub
dec
lods
iret
arpl
mov
dec
and
mov
sub
aas
cltd
jmp
cmp
lds
in
lahf
fildl
popf
adc
pop
std
push
aas
aad
lds
xchg
jb
imulb
js
mov
das
jns
mull
mov
mov
repnz
rcrb
push
add
sar
js
int3
in
push
jb
push
push
xchg
pop
mov
loope
push
push
fidivrl
mov
sbb
scas
nop
or
push
fs
addr16
popa
pop
sbb
pop
sti
add
jp
pop
insb
pop
mov
jbe
test
ja
ds
call
sbb
pop
mov
fldenv
sbb
test
sub
ret
cmpsl
int
aad
mov
push
pop
mov
mov
out
push
push
lahf
sbb
pusha
ja
arpl
xchg
dec
mov
jnp
std
mov
pop
xchg
shl
cld
mov
lds
fincstp
or
xchg
mov
xor
cmp
jns
jo
nop
call
pop
das
mov
out
mov
dec
outsl
dec
mov
mov
add
mov
sti
into
xor
push
jns
dec
push
fadd
mov
es
sub
addr16
push
ds
lea
mov
popa
sahf
jb
xor
mov
bound
xor
or
faddl
fmul
and
aas
add
sbb
in
in
push
adc
in
call
xor
stos
stos
and
loope
or
dec
and
jp
and
xchg
jle
test
sub
push
add
out
fisttpll
sub
sub
lea
lea
jmp
mov
enter
adc
xlat
loope
out
subl
jg
pop
mov
loop
xlat
sub
or
fsubr
cmp
outsl
ljmp
dec
or
pop
pop
sbbb
and
lahf
mov
jp
aas
sbb
and
hlt
movsb
jmp
lock
dec
push
jnp
ret
data16
fucom
cs
les
test
in
mov
iret
popa
mov
dec
mov
inc
mov
hlt
mov
mov
int
dec
scas
test
cmp
out
inc
imul
lahf
loope
adc
cmp
movsl
lcall
mov
jmp
addr16
sub
jbe
insb
push
sti
adc
sub
pop
pushf
mov
mov
cmp
sbb
into
push
sbb
dec
pop
sub
push
adc
fwait
sub
sub
add
mov
add
xchg
xor
pop
repnz
cltd
int
subl
cli
icebp
sbb
test
and
and
inc
dec
or
mov
mov
test
xor
adc
or
flds
dec
seta
pusha
or
shll
js
pop
inc
dec
add
lea
push
gs
mov
insb
sub
sub
push
jmp
das
fnstcw
loop
stos
mov
add
inc
das
pop
inc
dec
jp
fwait
out
int
sar
test
mov
fcomi
xchg
ss
testl
and
xchg
gs
adc
inc
fcmovne
pop
sbbb
cmp
pop
push
sub
movsl
andl
cmp
jno
xchg
mov
imul
scas
and
popf
je
or
push
ret
sbb
stos
js
movsb
gs
mov
shrb
pop
sbb
jl
andl
faddl
sbb
push
push
mov
repnz
mov
movsbl
sbb
xor
mov
push
divb
and
js
xchg
fcompl
cmp
and
sub
sti
mov
push
fs
lret
sub
rcll
adc
jb
mov
fadds
stc
mov
fldcw
add
mov
dec
adc
outsb
pop
ret
es
xlat
loopne
lods
aam
dec
fnstcw
pop
pushl
xor
mov
or
mov
fiaddl
popf
les
and
int3
pop
dec
jno
fwait
rcll
adc
inc
pop
cmpsb
rorb
jmp
cmp
cs
rcl
add
test
popa
aaa
push
fwait
data16
jno
in
adc
rcr
das
or
hlt
mov
and
mov
test
test
std
jg
stos
lods
and
pop
out
xor
ret
adc
mov
add
loopne
movsb
jl
fdiv
mov
xchg
dec
cld
add
icebp
push
xor
in
inc
pop
arpl
xchg
and
cmp
adc
jns
int3
sbb
dec
inc
mov
mov
sub
js
data16
sarl
testb
jae
or
mov
lock
xchg
xor
test
xor
outsb
or
xorb
nop
mov
cld
mov
cmp
sub
and
pop
clc
mov
stos
notl
xchg
sbb
pushf
and
adc
jge
cmp
lcall
outsb
or
notl
mov
xor
cltd
jge
pop
nop
sub
adc
fdivrp
add
adc
sub
inc
pushw
insb
cmp
and
xor
sub
pusha
sti
pop
pop
fisubrs
sbb
pushf
jbe
orl
fcompl
xchg
add
sub
xchg
push
lret
and
inc
inc
or
xchg
mov
mov
xor
sub
pop
dec
mov
add
sub
mov
fildll
sub
icebp
lock
xchg
jg
fidivrs
jge
sub
sub
push
pushf
push
dec
xchg
add
or
out
fs
dec
iret
ljmp
push
aam
movsb
out
sbb
push
lret
aam
repnz
mov
rcr
outsl
dec
or
stos
push
fwait
push
aaa
ds
jns
test
sub
fisubrs
jb
sbb
mov
xchg
xchg
cmc
adc
test
and
pop
pushf
adc
scas
push
add
mulb
xchg
aam
in
insb
stos
cwtl
int3
dec
and
mov
sbb
mov
out
dec
scas
sbb
sbb
iret
leave
lret
imul
loope
rcl
jno
out
addb
xor
xor
sub
notb
push
loopne
fnsave
xchg
into
lods
fcoml
lock
cmpsl
imul
out
xchg
inc
stos
insb
jae
and
jns
std
test
add
dec
inc
mov
stos
jo
lahf
add
cmp
jge
xchg
into
imul
out
int
adc
test
int
mov
movsb
in
and
stos
pop
aad
neg
clc
aam
std
xchg
lret
xor
test
dec
in
cmp
push
sub
cmpsb
lret
jns
add
mov
mov
adc
jge
notb
sub
dec
push
mov
mov
jp
cmp
out
or
xchg
inc
addr16
mov
or
mov
pop
jecxz
dec
mov
push
inc
jae
test
jmp
push
mov
stc
je
jmp
pop
jmp
inc
sarl
scas
ret
jle
scas
movsb
out
popa
add
mov
in
add
pop
pop
js
pop
nop
insl
aas
cmp
mov
mov
or
loop
inc
adcb
add
cld
ljmp
add
test
ds
inc
xchg
pop
test
jmp
dec
mov
xchg
sub
popf
daa
sub
xchg
imul
aad
mov
xchg
into
mov
js
cli
ret
out
nop
cltd
inc
int3
cmc
or
enter
sbb
pop
sbb
int3
int
inc
fwait
push
mov
push
dec
cmp
in
mov
das
fildll
pop
call
dec
outsb
movsb
dec
xchg
arpl
mov
incl
test
bound
push
in
fidivrs
mov
insl
outsb
sbb
xchg
pop
js
lcall
add
popf
and
cmp
mov
imul
addr16
xchg
not
rorl
imul
xchg
push
subl
push
ffreep
rclb
leave
scas
cmpsl
popa
xchg
sub
ficomps
dec
repz
mov
lock
xor
test
fs
test
mov
xor
pushf
imul
sahf
pop
and
stos
push
mov
mov
ds
xlat
into
and
cmp
test
mov
and
leave
and
pop
aaa
mov
js
rorb
pop
xor
lock
fwait
pusha
add
xor
mov
mov
dec
push
fsubl
xor
cmp
cmp
push
scas
ja
xor
mov
stos
push
xorb
andb
pusha
inc
jecxz
imul
jnp
add
and
mov
lcall
test
xchg
int3
sbb
jg
ljmp
jno
fcmovnbe
scas
repnz
inc
dec
mov
xor
dec
sub
sbb
cli
inc
push
cmp
xchg
inc
ficoml
data16
in
inc
inc
mov
movb
out
xor
push
imul
xchg
dec
dec
mov
and
xor
mov
js
call
pop
push
push
ss
gs
ficomps
xchg
push
arpl
and
sbb
es
jb
mov
je
push
and
sti
scas
fcompl
andl
insb
dec
cmpsl
into
mov
arpl
adc
and
xchg
xchg
int3
xor
sbb
jb
lret
xchg
loop
push
cmp
lret
sub
mov
pusha
loope
jno
pop
adc
addb
mov
sub
xlat
xchg
bnd
imul
out
cwtl
mov
stos
cmp
or
nop
push
stos
xchg
adc
mov
xchg
das
lds
aaa
inc
inc
jmp
push
adc
out
push
ret
push
ja
fnstcw
ja
push
sbb
push
gs
sbb
mov
mov
mov
mov
rol
xor
cmpsb
inc
test
outsl
in
add
jno
xlat
and
in
cmp
shrb
xchg
jno
sub
pushf
out
xor
xchg
xlat
shll
daa
mov
gs
rcl
lret
push
sub
ljmp
mov
jge
js
cmp
loopne
clc
cmp
inc
inc
sbb
mov
fstl
lret
sbb
mov
lock
sbb
push
imul
jne
xor
xlat
popf
aaa
inc
xchg
adc
xor
cli
cmp
or
push
inc
outsl
xor
mov
and
add
test
dec
mov
lcall
jmp
inc
rorb
leave
popf
mov
and
shlb
xor
push
inc
daa
xchg
sbb
xorl
mov
fisubs
movsl
inc
push
adcb
push
nop
inc
and
xchg
jb
enter
adc
ret
xchg
fidivrl
mov
enter
push
push
and
ffree
cmp
fists
mov
xchg
jo
mov
ret
mov
jl
cs
movaps
popa
mov
cmpb
add
xchg
inc
cmp
mov
lds
add
les
mov
loope
mov
mov
ret
insb
rcll
adc
movsl
add
es
das
push
add
push
xchg
jmp
aaa
cmp
cmp
mov
cmpsl
lock
imul
fistl
cltd
mov
test
cmp
out
nop
inc
mov
loop
and
dec
js
imul
loopne
shlb
adc
mov
dec
aam
mov
xor
push
out
adc
inc
jb
pop
std
pop
or
push
adc
xlat
xchg
mov
insb
pop
inc
jecxz
std
cmp
loopne
decb
jne
pop
aam
sahf
aad
cmpsl
push
add
incb
mov
jnp
out
pop
cmp
add
sub
mov
decl
daa
mov
sbb
push
mov
lea
rol
int
sbb
cltd
xchg
mov
fwait
mov
sbb
loop
mov
push
xchg
sub
lds
jno
pop
lods
ror
rolb
dec
loopne
sbbb
aad
mov
cli
mov
pushf
sahf
rcrl
paddw
cmp
dec
stc
cltd
cmpsb
inc
inc
fs
out
ss
jo
push
mov
adc
addr16
cmp
mov
xlat
mov
out
daa
aad
sbb
inc
fcomi
xchg
adc
inc
jl
sbbb
je
pop
gs
adc
jecxz
rcrl
enter
or
sub
fdivrl
and
lahf
sarb
scas
mov
fldl
dec
xchg
mov
push
pop
push
adc
push
aad
in
pusha
mov
mov
mov
data16
xchg
dec
mov
dec
fimuls
cmp
nop
add
mov
adc
adc
fnstenv
mov
dec
sub
test
push
mov
es
nop
shrl
inc
rcr
test
sub
hlt
mov
pop
dec
xchg
jbe
xor
lret
lock
xor
push
fimuls
mov
push
xor
sahf
mov
xchg
or
pop
dec
inc
adc
jno
lahf
jo
push
ret
imul
push
xorb
jnp
pop
fstp
inc
je
dec
int
sarb
inc
and
cli
xor
pop
and
loopne
rcrl
mov
nop
dec
and
jne
jo
jle
stc
and
movsl
pushf
adc
lret
and
pop
push
pop
jnp
test
inc
dec
orb
xlat
dec
ret
jmp
in
add
cwtl
popa
push
outsb
xor
cmp
cmp
sbb
popl
jbe
add
mov
fwait
xchg
xchg
push
inc
psrlw
and
cld
fbstp
or
xor
shll
inc
scas
and
sahf
js
stc
test
xor
xbegin
insl
into
mov
push
stos
movsl
xchg
idivb
fsubrp
hlt
mov
out
mov
inc
test
insl
sbb
bound
imul
add
and
xchg
mov
cmp
loopne
xchg
loop
mov
jmp
fdivp
cmp
cmp
shr
aas
inc
xor
fcmovnu
fidivrl
mov
into
jno
jne
into
or
cmpsl
sbb
sub
adc
pop
push
cmp
dec
rolb
mov
cmpsl
stos
xor
push
pop
out
xchg
cli
lcall
or
jecxz
pop
inc
dec
shlb
add
push
mov
in
sbb
mov
fwait
mov
inc
pop
mov
mov
adc
cmpsl
int
mov
pop
pusha
imulb
cwtl
pop
and
das
lds
push
insl
lock
pop
and
testb
stc
push
mov
fcoml
fldl
mov
movb
andb
cmc
popa
jne
cmp
cwtl
iret
sub
cmp
inc
gs
adc
in
push
xor
inc
rol
clc
mov
mov
cmpsb
push
rclb
pop
push
stc
ja
pushf
cmp
sti
sbb
push
rol
popf
push
add
les
rcrl
push
das
scas
js
andl
xor
insl
repz
cmp
cwtl
inc
stos
andb
jp
andb
cltd
insl
xchg
mov
dec
cwtl
sbb
scas
adc
std
divl
pop
daa
sub
popa
out
add
imul
jne
mov
and
inc
and
pop
insl
and
nop
aam
xchg
das
daa
out
mov
dec
jns
enter
push
jb
hlt
loop
test
xchg
fmull
or
push
add
pop
roll
pop
mov
notl
push
and
dec
in
xchg
aam
dec
xchg
jmp
or
out
adc
xor
cmp
or
cltd
nop
xor
xchg
adc
pop
aad
and
shlb
mov
cmpsl
mov
sub
or
xor
or
or
mov
ja
mov
pop
lea
and
das
mov
std
pop
fnstcw
dec
adc
data16
mov
push
out
add
pop
mov
leave
imul
jns
inc
mov
sbb
mov
cmc
and
in
mov
dec
jne
cmp
sbb
sbb
mov
mov
lods
scas
arpl
adc
sub
fcmovu
lret
push
sti
shrl
in
call
dec
leave
jb
mov
and
dec
or
fists
std
jmp
mov
imul
inc
jno
adc
pop
push
xor
mov
shl
in
mov
xlat
xchg
push
dec
mov
xor
cs
push
rcr
outsb
insb
lock
jge
cwtl
fdivrp
inc
sbb
fcomps
ret
adc
leave
jnp
inc
push
mov
jge
and
sti
rcll
jns
sbb
out
rcrl
lcall
mov
fldl
push
dec
xor
imul
mov
rcrl
ror
aad
and
daa
popf
stos
push
push
pop
push
jecxz
and
xchg
dec
fildl
imul
add
cmpsb
pop
fwait
sbb
divb
sub
loope
lea
fnstsw
adc
repnz
jl
icebp
mov
les
inc
jg
neg
adc
adc
sub
sub
fidivs
mov
sahf
lret
inc
cli
leave
dec
sbb
mov
scas
mov
dec
mov
hlt
inc
xchg
cli
mov
dec
repz
and
sbb
jmp
mov
mov
cmp
idivl
mov
jae
push
pop
sub
and
aaa
xchg
ds
jo
loope
aad
stos
inc
in
lock
and
pop
repnz
pop
mov
nop
sub
pop
dec
cmp
inc
xor
lea
mov
push
pop
lds
sbb
push
and
out
pop
aaa
and
in
adc
xchg
xorl
xlat
jmp
lods
push
adc
sub
bound
fistps
cmpsb
pop
lret
jb
aas
cmp
cli
setno
mov
sbb
pop
lods
add
dec
cmpsb
out
push
push
adc
jo
sub
inc
pop
pop
push
add
add
das
fldcw
loope
movsl
or
js
in
xchg
loop
pushf
in
fmuls
iret
popa
es
jb
loope
mov
ds
sti
mov
jae
jae
mov
into
fdivs
int
jnp
hlt
pusha
loopne
or
in
jmp
imul
pop
mov
pop
repz
in
leave
mov
int3
mov
jb
pushf
mov
aad
push
jo
xchg
inc
enter
cmc
sub
orl
outsb
es
ret
orl
addb
add
mov
fsubl
xor
in
adc
mov
lock
icebp
cmp
cmp
sahf
fbstp
shrb
mov
mov
arpl
pop
cli
push
dec
cs
mov
mov
or
mov
adc
xchg
das
rclb
test
in
stos
pop
mov
add
or
and
test
das
cmpsb
out
xchg
fdivs
mov
push
xor
mov
cmpl
lret
add
mov
pop
xor
inc
outsl
mov
cmp
in
dec
mov
jg
adc
fs
sbb
mov
cmp
rorb
lahf
aas
daa
jecxz
mov
lods
lods
xor
aas
dec
push
ss
mov
aas
mov
lods
fsts
insl
mov
xchg
aam
loop
lea
cmp
inc
insb
or
in
lcall
cmp
adc
pop
out
lea
xlat
mov
iret
lods
add
push
aam
pop
pop
ret
mov
stos
inc
xchg
stc
and
repz
mov
xchg
shl
repz
stos
ja
push
mov
dec
xor
mov
mov
pop
push
mov
cld
mov
data16
jno
leave
lods
daa
push
stos
mov
andb
stos
push
cld
and
push
xchg
lds
adc
int3
iret
push
sub
call
mov
cmp
cmpsl
sub
sub
test
arpl
push
mov
aad
scas
clc
sbb
addr16
clc
movsb
add
xchg
std
popa
push
sarb
xchg
fmul
xor
ret
mov
push
test
mov
dec
fwait
add
outsl
orb
clc
aas
aas
mov
and
mov
insb
inc
sbb
ja
call
mov
mov
xor
popa
dec
cmp
or
idiv
je
out
jb
out
cld
icebp
enter
movsb
ret
sub
repnz
out
xor
fsts
dec
sbbl
enter
push
fldenv
or
adc
push
jg
in
cmp
pop
fs
pop
mov
int
fdivrs
mov
mov
movsb
dec
cmp
xor
cmp
cmp
pop
scas
jle
hlt
xor
or
sub
xor
push
add
out
jmp
ljmp
std
mov
lcall
lods
sbb
scas
outsb
or
mov
push
mov
cmpsl
pop
xorb
cmp
cs
lahf
popa
adc
leave
cltd
addr16
ljmp
addl
xchg
scas
xor
or
gs
out
cmp
jo
movb
popa
popa
in
cmpsb
insl
push
mov
lret
aad
xor
sub
push
hlt
testl
aad
sub
inc
jmp
cmp
repz
cld
fnstenv
rcll
push
imul
aad
mov
sar
mov
mov
cld
aam
xchg
nop
pop
jne
addr16
jb
or
sahf
fs
pop
adc
into
mov
pop
int
iret
je
out
xor
jbe
pop
cmp
lods
lock
sti
sub
sbb
nop
loop
loop
add
out
and
jno
cs
lret
add
xor
xor
mov
jg
and
pushf
mov
out
test
popa
iret
dec
cmpsb
xor
lods
ret
mov
dec
mov
imul
loope
adc
cmpsb
insb
jae
fmuls
inc
insl
cltd
inc
arpl
ljmp
icebp
repz
jl
jp
bound
int3
or
push
clc
cmc
dec
jmp
push
cmc
or
cmp
cmpl
sbbl
movsb
les
jmp
sub
sub
xor
fimuls
and
fsubrl
repnz
int
hlt
jo
aas
sbb
pmulhw
pushf
cmc
jg
inc
out
test
and
pushf
data16
pop
fsts
loopne
adc
dec
inc
cmpsb
mov
stos
adc
out
test
xor
test
and
aam
popf
jbe
aas
cld
mov
sti
sub
pop
outsl
stos
lcall
call
jo
jo
pop
xchg
dec
int
outsl
in
and
push
idiv
mov
lret
arpl
mov
jns
xchg
inc
push
mov
sub
repnz
imull
push
test
rep
push
push
in
xorl
xor
xor
sbb
adc
and
mov
mov
les
cmpsb
pop
lock
jmp
js
out
sbb
inc
aad
dec
adc
inc
pushf
testb
popf
adcb
fsts
push
rcrb
cmpsl
icebp
dec
jb
nop
jl
sub
xchg
push
and
cmp
ljmp
sub
or
lret
cwtl
ja
jmp
stc
xlat
int3
cli
dec
rcrb
mov
and
sub
inc
hlt
cmc
push
xor
and
dec
mov
ss
xchg
outsl
sub
sub
je
lahf
push
inc
out
cmp
stos
add
xor
clc
lcall
pop
cmp
sbb
dec
add
xor
adc
repz
fists
or
adc
cmp
lcall
fcoml
icebp
lret
sbb
xchg
mov
inc
pop
push
shlb
arpl
push
mov
cmp
pop
lea
imul
iret
mov
and
pop
arpl
push
push
test
popf
mov
scas
js
or
push
jg
jae
push
lea
movsb
adc
movsl
insl
push
nop
pop
cs
js
mov
loope
xchg
loop
jge
fisttps
inc
mov
mov
add
xchg
test
dec
or
cmc
inc
out
popw
mov
xor
ljmp
dec
xchg
les
pushf
mov
push
cmp
faddl
lcall
xlat
imul
jl
jg,pt
push
lods
push
mov
sub
jge
repz
cmp
imul
dec
imul
cmpb
inc
xchg
add
loopne
jns
add
repnz
adc
push
mov
and
xor
insl
or
std
mov
xchg
mov
js
mov
scas
inc
and
inc
pop
or
mov
mov
sub
jecxz
jno
jne
aad
outsb
int3
out
fldl
mov
jg
shl
push
pop
pop
jae
ret
rcll
filds
iret
out
adcb
ja
xchg
into
mov
xchg
xchg
sbb
inc
cwtl
cmp
and
cmp
lock
push
inc
stos
loopne
mov
and
fldcw
cmpsb
orl
movsl
or
and
jns
adc
cltd
xchg
pop
pop
scas
clc
movsb
and
mov
stos
ja
xor
pushf
sahf
and
aas
in
out
and
mov
mov
decl
hlt
into
fldcw
mov
incb
lds
xchg
mov
int
nop
push
mov
stos
mov
push
sub
cmp
sub
push
adc
pop
jns
mov
or
frstor
cltd
xchg
xchg
loop
cmpsb
adc
fcoml
jno
add
inc
popa
push
ljmp
mov
adc
dec
cld
stos
xor
pop
data16
mov
sub
sub
xchg
and
mov
std
dec
lds
or
call
incb
insl
push
sbb
push
or
fistpll
jns
mov
cmc
mov
sub
loop
pop
mov
lahf
xchg
fisttpll
fimull
mov
adc
daa
pop
fldlg2
push
mov
xchg
cmpsl
loopne
ds
ss
lods
dec
add
test
push
adc
mov
xchg
and
sub
sbb
in
loope
insb
push
and
popf
lock
arpl
dec
jle
insl
jmp
lahf
sub
in
faddl
outsb
inc
lahf
dec
dec
push
aad
mov
pop
jne
in
jne
and
ret
ror
les
inc
push
jg
xor
aaa
lods
mov
ret
adc
std
cltd
iret
lret
push
cwtl
and
xchg
lods
add
and
cmp
mov
imul
data16
cld
jne
xchg
and
mov
std
and
cmp
test
pop
jle
scas
dec
pop
sbb
mull
push
sarb
call
repz
int
nop
sbb
sub
in
push
sub
daa
cld
push
sub
cmp
sahf
jns
out
leave
lcall
icebp
inc
outsb
jmp
lods
xor
scas
adc
or
and
and
pop
dec
sahf
in
sti
add
cmpb
call
out
in
fldenv
out
add
lods
mov
fstp
mov
mov
xchg
outsb
popa
stos
or
xchg
popa
sub
mov
out
repz
lds
into
stos
mov
xchg
cltd
or
cmpsb
xorb
mov
adc
jecxz
mov
mov
getsec
push
daa
jg
jmp
negl
cmp
out
lcall
push
dec
adc
mov
addr16
adc
shrl
lret
mov
jbe
daa
jno
add
js
test
pop
add
push
loope
sub
lret
dec
lods
aas
in
push
addb
pushf
push
incl
ljmp
mov
mov
sarl
push
dec
fstl
or
push
xchg
mov
jmp
gs
shl
mov
orb
cmp
and
scas
sbbl
cmp
pop
jecxz
sbb
xor
pop
jg
and
nop
mov
jecxz
pop
push
push
hlt
inc
arpl
ror
lea
mov
std
mov
bound
sbb
pop
mov
adc
add
movsl
sbb
mov
push
rep
mov
inc
sub
stos
js
mov
mov
xchg
pop
cltd
in
fiaddl
bound
ficoms
outsl
jp
out
sub
data16
das
insl
inc
xor
xchg
outsl
pop
jg
aaa
fisttpl
nop
loopne
bound
push
lds
stos
sub
mulb
xor
mov
push
xchg
cmp
sub
dec
out
jb
xchg
insb
add
mov
fstpl
mov
cmp
adc
repnz
lods
jp
filds
fsubs
gs
jbe
jne
mov
add
jg
pop
jmp
push
and
setnp
push
mov
popa
adc
inc
test
js
lods
inc
xchg
fs
adc
xlat
sub
cmp
dec
pushf
mov
jg
rorl
sub
inc
cmp
sub
mov
gs
iret
testb
js
mov
mov
div
cmc
arpl
pusha
cmp
cwtl
xchg
jbe
or
or
sbbl
jle
jns
outsb
bound
iret
shlb
adc
subl
xor
pop
or
stc
sub
mov
xchg
in
inc
or
fadd
push
xor
lods
mov
insl
int3
cmpb
stc
and
aam
add
adc
cmc
in
or
add
inc
jno
outsb
stos
insl
dec
xor
mov
mov
aaa
xchg
dec
xchg
mov
test
push
and
scas
stos
pop
pop
push
js
inc
jne
push
addr16
leave
in
dec
or
mov
insl
push
jmp
jo
lcall
les
dec
pop
loope
pop
jmp
adc
mov
mov
or
insl
aad
test
sub
clc
cmp
pop
dec
sbb
aas
hlt
out
jle
push
mov
fldcw
add
jg
jae
movsl
xor
mov
xchg
or
lds
insl
inc
repnz
test
cmp
cli
sub
mov
jb
push
add
cmp
pop
inc
jo
inc
sub
mov
push
dec
stos
push
pop
int
mov
push
push
lret
jg
xchg
mov
inc
int3
push
ret
pop
mov
in
add
aam
jno
sbb
push
cmp
in
cmp
int
pop
and
cmpsl
imul
mov
std
mov
push
insb
insb
int3
mov
out
xchg
and
mov
mov
xchg
sbb
inc
mov
xchg
dec
nop
pop
pop
mov
rorb
adc
in
mov
pop
pop
mov
add
inc
das
add
cli
mov
xchg
test
push
cmp
insb
adc
mov
jge
enter
ljmp
arpl
jecxz
mov
ficoms
or
add
ret
mov
and
xchg
call
mov
ljmp
in
stc
xrstors
add
sub
cmc
or
adc
fnstenv
cs
nop
subl
adc
xlat
stc
xchg
sbb
jbe
jg
sahf
xchg
and
or
rcl
shll
mov
ret
and
data16
and
lahf
loop
loopne
and
dec
xlat
aam
cmp
shrb
xchg
iret
inc
loopne
fcmovu
pop
jnp
pop
test
test
adc
jb
leave
add
lret
dec
shrl
jp
pop
jecxz
pop
into
insl
pop
cmp
outsl
xor
pushf
mov
or
dec
push
in
push
lock
std
xchg
push
mov
pop
push
fs
pop
or
ss
stos
dec
mov
mov
mov
cmp
sub
lock
ljmp
or
mov
fs
cwtl
dec
push
mull
mov
mov
notl
lret
fimuls
sub
int
cmp
out
cmp
xchg
adc
or
mov
jb
testb
popf
lret
adc
add
dec
xchg
or
inc
jns
dec
ret
sub
ss
push
cltd
push
ljmp
hlt
xchg
rolb
loope
fs
hlt
jmp
cmp
push
xchg
push
test
add
xchg
insb
push
sub
adc
stos
and
lcall
mov
push
call
scas
rolb
jg
xchg
mov
jp
mov
push
dec
test
cltd
jnp
dec
ret
xchg
jmp
out
clc
push
jp
and
jb
add
mov
and
inc
dec
test
fcomip
lods
dec
fmuls
iret
jg
jb
inc
dec
inc
sbb
repnz
pop
clc
xor
andb
inc
aam
fildll
lret
inc
mov
js
and
sbb
or
mov
xchg
xchg
aam
xchg
and
call
mov
push
mov
aam
sub
mov
je
incl
jne
fstpl
xchg
outsl
in
insb
jb
stos
and
or
cld
lods
loopne
sbb
or
testb
cmp
std
outsl
outsl
pop
jns
mov
lods
xchg
mov
cmp
add
testb
imul
pop
pop
mov
add
jb
loopne
lahf
lds
rorl
jle
cmp
lret
out
stos
in
inc
cmp
sub
mov
idivl
sub
inc
sbb
out
insb
in
movsb
cmpsb
call
shll
xchg
cld
lds
add
pop
cmc
xor
loop
cmp
push
pcmpgtd
out
mov
stc
es
sub
pop
sbb
insl
rcll
and
lahf
das
lret
mov
jbe
pop
push
ss
mov
mov
and
inc
loopne
mov
dec
jp
mov
les
add
rcl
fsubs
out
jo
pop
xchg
xchg
pop
aad
sbb
jge
xchg
mov
push
sub
pop
ss
imul
add
and
insl
lods
mov
mov
hlt
inc
xchg
xchg
mov
cmp
pop
jg
mov
dec
inc
xor
push
in
cmc
arpl
sti
jno
mov
push
adc
mov
push
sub
dec
or
ficoms
cmp
les
add
or
jmp
mov
pop
les
das
push
cli
test
cmpsl
cmpsb
pop
mov
ljmp
testb
out
ret
dec
cmpb
and
sbb
cmp
dec
out
mov
lds
jns
pop
xchg
shlb
push
popf
push
nop
sub
adc
pop
adc
flds
inc
xchg
ret
iret
stos
lock
mov
js
or
cmp
push
repnz
sub
jae
shlb
inc
pop
mov
mov
xor
cmp
fwait
ss
out
enter
jnp
push
into
dec
jg
idivb
add
pusha
out
mov
cmpsb
ds
ret
int
dec
popa
scas
pop
mov
shll
or
xor
xchg
shlb
adc
loopne
mov
push
xor
pop
lods
int
add
sbb
mov
ds
or
lods
cli
filds
cli
ds
fildll
pop
addb
adcb
ja
push
pop
addr16
and
inc
cmp
pop
adc
mov
sbb
or
mov
pop
repnz
lock
loop
out
notb
jmp
and
push
adc
fistpl
aas
clc
out
test
sti
adc
leave
mov
scas
fidivs
xchg
mov
arpl
int
jnp
adc
rsqrtps
xchg
out
mov
rcl
mov
ja
stc
mov
incb
out
pop
add
mov
fcmovbe
add
push
in
push
add
int
out
lea
lret
sbb
daa
jge
lcall
xchg
xchg
aad
aaa
sub
xor
pop
jle
repz
mov
fcompl
loopne
ret
les
adc
and
mov
pop
js
fstpl
movsb
dec
add
mov
fists
cmpsl
notb
fldenv
mov
inc
fnstenv
push
imulb
adc
sbb
pop
in
mov
xchg
pop
xchg
pop
jle
into
mov
add
je
xchg
clc
cli
xlat
stc
jg
fsubrl
popa
lods
and
xlat
xchg
les
ja
out
dec
repnz
jo
loope
scas
lahf
test
sub
mov
pop
cmp
xchg
les
jae
fmull
sbb
mov
xlat
lcall
lea
jae
mov
push
insl
ds
cld
pop
jl
or
inc
or
jo
cli
sbb
mov
cmc
leave
int3
and
sbb
out
clc
and
xchg
lret
cmp
dec
cmp
mov
mov
xchg
push
popa
es
lahf
aad
sub
cmpl
movsb
les
mov
mov
decb
call
scas
add
jne
and
movsb
test
mov
ss
call
je
ss
cmp
adc
xor
mov
mov
mov
sub
cmpsb
dec
in
inc
in
fstl
push
jp
xchg
int
jae
xchg
mov
insb
cmp
sub
push
sbb
pop
mov
outsb
sbb
sbb
mov
popf
add
js
fdivl
inc
sbb
or
jb
xorl
loope
mov
inc
les
out
aas
scas
rolb
je
mov
bound
je
popf
out
fdivrl
sbb
and
mov
add
adc
ficomps
adc
fbld
and
xchg
clc
and
cltd
repnz
js
cmp
arpl
cmpsl
ja
xchg
xchg
scas
sub
mov
push
cmp
mov
xlat
pushf
aam
enter
push
nop
shl
popf
imul
adc
movsl
jg
cmc
adc
daa
dec
fcmovnu
xor
xchg
mov
jo
lock
jmp
add
lods
push
pop
clc
inc
lahf
inc
pop
jo
and
push
jb
mov
push
pop
pop
add
roll
fsubrs
shlb
shrl
jne
xor
xor
add
xchg
push
push
hlt
dec
in
adc
sub
sarl
mov
push
mov
pop
inc
jp
adc
addr16
ret
out
pop
packuswb
sti
rorb
cwtl
scas
outsb
inc
mov
or
std
scas
out
idivl
dec
add
or
ljmp
sbbb
scas
inc
js
push
lea
xchg
scas
mov
and
sbb
mov
mov
xor
push
mov
push
adc
fwait
and
jp
sbb
xor
cmp
scas
sub
ficoml
test
cmp
into
or
xchg
or
call
iret
stos
mov
push
xchg
cmc
dec
jmp
cmp
out
adc
mov
cld
lcall
xchg
leave
lret
mov
mov
aaa
mov
mov
into
pop
add
pop
fs
xor
push
pop
fidivrs
loop
movb
mov
js
cs
push
add
inc
mov
pop
sti
pop
xor
es
insw
out
rolb
rcll
andl
inc
test
jbe
mov
or
and
mov
xchg
int3
mov
push
ds
adc
lret
jl
rcrb
ss
aam
fdivr
adc
sbbl
sub
scas
adc
stos
repz
cwtl
pop
nop
dec
flds
fisubl
imul
outsb
xchg
insl
stos
sbbl
enter
jo
vpmacsdql
sbb
mov
out
xchg
mov
ret
sahf
jle
jo
adc
adc
adcb
dec
sub
insl
repnz
inc
aas
mov
mov
or
xor
add
inc
inc
xchg
cmpsl
adc
inc
push
xchg
loope
or
outsb
pop
mov
xor
lret
and
loop
bound
jp
test
or
xorl
jo
push
mov
adc
jmp
jp
inc
jmp
loop
push
outsb
fs
data16
movsl
cmc
out
pop
and
aas
pop
pop
fisubrs
jecxz
xor
sub
lret
fstpl
in
cltd
sbb
scas
outsl
xchg
fst
sbb
xchg
vrcpps
push
icebp
xchg
inc
sbb
mov
jae
xchg
fwait
rcr
rcrl
mov
jb
xor
xor
pusha
adc
ss
nop
fsubrs
outsl
mov
mov
jle
js
dec
pop
mov
sahf
mov
ret
fucomp
aaa
lds
cmp
jns
mov
pop
dec
in
jbe,pn
in
lcall
leave
imulb
xchg
pop
call
test
push
ss
jae
xchg
iret
jae
insl
or
je
pop
adc
in
fisubl
add
cmp
sub
addl
mov
sbb
scas
sbb
push
pusha
pusha
rcll
push
das
loope
loopne
popf
insb
mov
xor
lock
pusha
cmpsl
aaa
cmpb
jp
inc
xchg
repnz
xchg
pop
cwtl
xor
lock
lods
push
jecxz
xor
jne
pushf
int3
test
mov
dec
mov
pop
cmp
mov
push
scas
or
inc
rcll
jo
mov
and
call
pop
out
test
js
es
popw
aad
movsl
adc
rcrl
sbb
int
jae
insl
daa
pusha
add
loopne
push
jbe
inc
pop
std
jp
aaa
std
pop
push
dec
and
sti
cmpsl
ret
pop
or
cmp
popa
cmp
popa
aas
push
pop
xchg
jae
inc
pop
call
sbb
dec
pop
cmpsb
push
dec
rcrl
fdivs
pop
xor
fldenv
adc
subb
mov
hlt
loopne
inc
xchg
pop
pusha
shrl
push
aaa
cmp
pop
insl
xor
pop
lret
and
imul
icebp
push
enter
xchg
jae
xchg
cmc
pop
cmp
xchg
xchg
into
fistl
out
ds
mov
or
icebp
lret
dec
push
rcr
jb
cmc
xchg
fildll
jl
sub
add
aad
push
mov
pop
sar
out
and
fwait
int3
cmp
sub
arpl
insl
pop
loope
test
push
add
sub
mov
fidivs
shlb
in
cmp
xchg
pop
mov
xchg
aas
sbb
test
sub
test
xchg
push
inc
push
in
adc
nop
sub
adc
sar
inc
fs
sahf
clc
fcmovbe
jbe
ret
popf
inc
icebp
mov
pop
fldenv
adc
pusha
push
fldcw
insl
in
mov
adc
test
fldl
push
push
mov
cmp
ljmp
xor
lret
js
or
es
adc
lods
ficoms
lea
cmp
int3
inc
push
outsb
mov
pop
cmpsb
andb
or
ret
scas
push
fnsave
and
or
pop
stc
daa
movsb
xchg
lods
daa
roll
mov
fsts
mov
cmp
jnp
ret
aam
inc
popf
dec
fdiv
push
lret
cli
xlat
xorb
adc
sbb
fdiv
and
or
test
sub
dec
nop
add
icebp
inc
push
loope
fs
dec
cmp
cmp
pop
jg
jecxz
ds
neg
push
mov
xchg
add
aad
add
and
xchg
shlb
dec
push
xchg
mov
movsl
addb
xor
xor
addl
sub
outsb
and
mov
in
icebp
pop
lahf
jo
imul
jge
aad
xchg
cs
mov
cmp
or
adc
ja
mov
loope
cmp
mov
or
in
xchg
inc
add
fsubs
into
cmp
jns
insb
popa
ja
inc
mov
test
add
xchg
test
jecxz
pushf
imull
mulb
jnp
cs
xor
enter
nop
orl
bound
xchg
mov
jecxz
sti
or
xchg
es
jp
mov
arpl
pop
decl
xchg
add
or
cmp
push
pop
sbb
les
and
xor
cmp
jmp
addb
aaa
push
lcall
loop
int3
adc
ret
push
add
lock
mov
pop
xchg
or
rorb
push
scas
or
shrb
mov
arpl
popa
fnstsw
loope
xor
and
pushf
xchg
stos
outsb
mov
fisttpll
xchg
push
sti
mov
fstl
out
rorl
popf
push
mov
and
mov
cmpsb
mov
sub
hlt
add
rcll
xchg
out
push
stos
in
push
aad
sub
pop
sub
xchg
mov
shr
cmpsb
stos
pop
outsl
inc
push
lods
xor
xor
pushf
inc
jp
mov
xor
cli
inc
setae
cmp
pop
lahf
inc
icebp
lcall
iret
out
pusha
dec
scas
movsl
outsb
sub
push
push
dec
fstps
cwtl
in
leave
or
dec
mov
push
mov
pop
cmp
pop
ret
pop
jb
adc
mov
cmpsl
pop
call
in
out
xor
cmp
out
outsl
and
sahf
das
adc
arpl
mov
sub
mov
mov
movd
push
dec
mov
fnstcw
mov
adc
fcomip
cmp
mov
and
jg
jl
fstpt
push
insl
es
jg
dec
roll
test
into
fsubs
or
mov
xchg
dec
fdivs
mov
ljmp
lret
xor
sub
or
mov
lock
add
jl
sbb
sahf
or
sub
out
sti
pop
pop
test
jbe
rolb
fst
and
jp
scas
decl
dec
push
xchg
cmp
cmp
adc
ja
mov
repz
dec
jne
cld
mov
int
pop
sub
adc
add
test
nop
or
dec
int
jne
mov
cld
jbe
fs
cwtl
adc
add
pushf
xchg
shr
scas
cmpsl
pop
loop
pop
orl
add
idiv
push
push
dec
inc
sti
shll
cld
fld
out
mov
adc
ds
fnstsw
cmc
adc
cmp
jmp
sub
mov
mov
adc
jmp
xchg
push
xor
adcl
aas
xchg
fdivl
xchg
dec
ret
enter
insl
mov
xchg
fcmove
fs
inc
pop
rorb
dec
adc
xlat
idiv
pop
addb
adc
cmp
dec
mov
into
pop
inc
dec
push
cmpsb
mov
cmp
out
jg
push
rorb
fucomp
add
cmp
mov
inc
xchg
aas
jns
push
inc
mov
repz
add
cmp
das
adc
out
mov
leave
rcrb
pop
and
mov
xchg
outsl
scas
sbb
inc
adc
mov
pushf
jl
inc
andb
pop
sbb
aaa
adc
shll
lock
or
cmpb
pop
cmp
cwtl
test
test
push
aaa
push
les
aad
shl
jle
sub
bound
faddp
mov
bound
sbb
mov
test
dec
xor
mov
stos
inc
sbb
adc
mov
sbb
xor
fs
inc
lcall
leave
int3
fbld
out
jecxz
jo
lds
ja
xor
xchg
cmp
lcall
mov
bound
je
add
cmpsb
add
pop
jmp
gs
adc
mov
cs
fldt
add
les
jns
jb
adc
jo
cli
ficomps
and
sbb
mov
ret
outsb
pushf
adc
and
sub
test
xchg
and
push
fs
inc
mov
jnp
icebp
shl
stos
push
mov
dec
out
add
inc
mov
rcr
cld
and
xor
daa
cmc
jg
pop
fldenv
test
add
jb
pop
or
nop
int
xlat
or
and
fs
cmp
mov
call
outsl
outsb
cmp
stos
filds
mov
dec
loop
clc
mov
fwait
xchg
scas
dec
clc
xor
rclb
jle
into
scas
out
jle
int
mov
ja
pop
or
sbb
outsl
loopne
add
mov
jo
adc
mov
push
cld
in
rclb
push
ljmp
pop
outsb
pop
in
jmp
pushf
je
lods
ds
sub
fisubrl
mov
lcall
ja
shr
or
mov
add
jns
flds
xchg
ret
mov
mov
sub
scas
or
fildl
stc
outsl
cmp
fisubs
ret
xchg
dec
mov
mov
js
or
enter
xor
push
cmp
sbb
pop
mov
gs
or
mov
pop
fnstsw
and
dec
fwait
dec
pusha
xchg
mov
enter
push
pop
stos
out
fstpl
xchg
cmp
push
mov
insl
lcall
sbb
sub
cmp
xor
enter
lahf
fwait
push
xchg
and
mov
ja
icebp
sbbb
and
dec
lea
sti
xchg
jo
fwait
imul
fimull
bound
repz
sahf
lds
xchg
push
fsts
clc
and
push
add
cltd
mov
sahf
movsl
cmp
sbb
cmp
fmull
es
pop
stos
push
stos
xor
dec
add
fdivl
pop
xor
loopne
loope
rolb
jne
add
and
jecxz
pop
fwait
clc
sbbl
lea
in
fcmovnbe
sti
mov
push
xor
sub
repz
int
and
dec
xor
xor
pop
mov
incl
dec
lods
adc
or
sbb
sub
inc
add
sbb
cltd
std
xchg
jne
das
mov
xor
and
outsl
rolb
movsl
xor
push
in
fstpl
not
popf
cltd
or
insl
pop
mov
cmp
jmp
push
and
add
cmc
std
pop
pop
insb
mov
lea
xchg
addl
iret
sbb
test
fistps
sub
in
loopne
icebp
pop
xor
cmpsb
int
inc
pop
push
pop
inc
inc
sarb
gs
jne
or
loop
mov
punpcklwd
add
xchg
push
cmp
dec
mov
or
inc
xchg
pop
cmpsb
mov
pop
insb
bound
xor
push
inc
mov
sbb
dec
call
pop
sub
cli
dec
pmuludq
xorl
cmp
add
add
xchg
mov
ss
repnz
cmp
movsb
add
pop
pop
in
cmp
cmp
mov
cs
push
or
push
fcomps
scas
dec
sbb
push
subl
mov
sbb
jne
jge
dec
add
xchg
inc
repz
xor
ja
mov
gs
loopne
shlb
ret
shlb
std
pusha
cmc
insb
rcrb
sahf
mov
lods
int3
fs
pop
push
xor
int3
adc
jo
pop
outsb
ss
push
inc
adc
mov
test
fildl
push
xchg
mov
mov
je
aad
cltd
add
or
inc
shlb
sbb
in
imul
add
fcomps
jb
mov
imulb
pop
inc
clc
pop
mov
fldcw
add
cmp
shll
test
mov
mov
fs
jb
sahf
adc
push
mull
sub
or
fsubrl
mov
fucomi
lods
shrl
pop
xor
push
mov
addb
sbb
scas
lds
mov
pop
stc
or
aad
mov
iret
std
adc
jmp
pushf
push
imul
setg
xor
das
repz
mov
loop
arpl
mov
insb
mov
adc
push
faddl
mov
jecxz
push
je
icebp
fsubrp
out
xchg
xchg
mov
shll
add
add
bswap
fcmovnu
cmpl
icebp
jbe
add
dec
lea
xchg
push
loopne
push
sub
add
xor
lods
jns
rorl
fimuls
mull
jp,pt
icebp
push
mov
xchg
add
rcll
test
dec
push
mov
lods
fldt
or
jne
add
or
fists
repnz
pushf
adc
cmp
cwtl
iret
pop
mov
dec
lds
shrb
dec
xchg
push
mov
inc
mov
fwait
sub
xchg
aaa
push
cmp
add
jae
aad
xchg
aaa
pop
adc
xor
add
les
sbb
and
mov
jb
and
cmp
ss
xor
mov
and
cli
push
xchg
notb
sti
add
fisubrs
dec
mov
sub
fnstsw
xorl
sbb
mov
fstpl
mov
jne
push
jge
add
test
jne
hlt
adc
ja
pushf
out
push
cmpsl
es
cmp
mov
and
mulb
cmp
push
and
mov
mov
dec
js
mov
iret
mov
bnd
icebp
xlat
inc
pusha
repnz
and
push
mov
sbbb
cmc
clc
rol
scas
shrl
mov
shll
movsb
ds
mov
pop
test
roll
sub
xchg
sar
ljmp
fwait
dec
xchg
xchg
cmpsl
add
fdivrl
dec
push
jp
mov
mov
jecxz
fwait
loop
sub
out
jle
in
mov
fdivs
js,pn
add
outsb
jge
inc
int
dec
push
add
xor
jb
push
or
lds
icebp
xchg
sar
and
sbb
and
mov
sbb
inc
sarb
cwtl
cld
repz
and
stos
xchg
pop
pusha
shll
popa
rcll
add
loop
call
lcall
mov
push
in
inc
pop
dec
fcmovnbe
insb
push
call
cmp
mov
push
nop
dec
aad
outsl
jmp
mov
and
rcrl
out
lret
mov
cmp
in
and
fstps
pop
or
inc
sbbb
les
cmc
ret
xor
lret
pop
cmp
icebp
push
ja
add
mov
je
movsl
mov
out
inc
xor
push
sub
xchg
inc
pop
add
adc
cmp
push
push
push
jge
icebp
mov
pusha
popa
fcmovb
out
mov
cltd
cmovb
xchg
test
sub
jecxz
aaa
sbb
test
push
mov
cltd
xchg
mov
rcrl
bound
sub
sub
jg
inc
inc
jno
cmpsb
aas
xor
xor
push
mov
xlat
mov
push
and
fdivrl
lcall
stos
sbb
xlat
sahf
daa
std
outsl
xchg
xor
lcall
lock
pop
mov
jp
in
rcrl
sub
xchg
push
cld
xor
pusha
or
lret
sub
mov
add
movsl
push
adcl
dec
and
cs
push
addr16
in
mov
adc
sub
cmp
sbb
loope
movsb
lock
jmp
cmp
mov
je
and
jns
cli
ffreep
lock
iret
jl
fnsave
xchg
xchg
testb
add
daa
xor
outsl
lret
stos
jg
out
out
jae
jne
mov
das
aas
inc
sub
popl
or
fisubs
test
push
enter
pop
ljmp
jo
xchg
mov
and
adc
cmpsl
dec
mov
sbb
adc
ds
inc
cmovp
dec
addr16
fs
add
sub
cmpsl
cmp
aad
ds
and
test
jmp
roll
xor
pop
mov
cmp
push
negb
dec
push
inc
movsl
fs
inc
jno
mov
test
jo
pop
dec
pusha
xor
std
or
cmc
ja
jg
movsl
sbb
and
inc
cmp
out
pop
insb
ret
ss
icebp
rcll
cltd
in
out
or
ljmp
aaa
ret
test
cmc
xchg
int3
sbb
mov
sbb
jmp
pop
mov
push
mov
cmpsl
out
cmp
cs
pushf
clc
aas
inc
fbld
xor
out
aaa
dec
mov
mov
pop
dec
pop
and
gs
out
imul
movsl
mov
fdiv
das
jo
inc
mov
xor
inc
ret
ljmp
or
pop
mov
cmpl
lods
pushl
mov
push
lea
pop
arpl
pop
xchg
fstpl
push
jg
push
test
dec
jle
sahf
rcl
test
push
and
sbb
sub
fwait
dec
hlt
inc
sbb
jecxz
js
and
out
lret
mov
xchg
jb
pop
jmp
outsl
shl
jle
enter
add
dec
divl
jns
sbb
lods
and
jo
int
sub
inc
icebp
in
ss
push
dec
jbe
adc
jle
gs
cltd
aad
iret
mov
gs
mov
lods
imul
fs
mov
dec
cmp
push
mov
aad
sbb
out
in
cmp
xchg
xchg
ljmp
ljmp
dec
jbe
and
cmp
and
sub
aad
lret
xchg
xor
loopne
not
outsl
push
sti
ret
mov
ja
test
xchg
es
bound
stc
aas
rolb
pushf
aam
mov
lcall
mov
or
repz
jg
mov
adc
inc
jge
adc
push
sub
inc
out
or
lahf
or
sets
mov
lret
popa
pop
and
jge
adc
add
xor
ds
lret
rdmsr
sbb
add
push
cmp
fcoms
xor
aaa
add
dec
or
pop
jecxz
and
sbb
rcrl
sub
sub
dec
sub
sub
lock
add
sbb
scas
xor
xchg
fstps
out
fildll
idivb
inc
push
rcll
push
jbe
mov
mov
bound
jo
je
jne
jo
mov
mov
or
outsl
jbe
cli
mov
mov
loope
fisubrl
push
mov
arpl
xchg
cvtpi2ps
je
xor
xor
or
sbb
jns
icebp
jo
movsl
jl
xchg
pop
inc
cmpsb
cld
rorl
mov
scas
mov
inc
push
and
arpl
adc
sti
mov
out
and
adc
js
out
not
xchg
fiadds
lea
lcall
cld
in
rorb
leave
add
or
jbe
cs
pop
pop
mov
sti
imul
xor
or
xchg
cmp
imul
add
jmp
scas
loopne
mov
movsb
adc
jge
cld
pop
pop
mov
jne
and
inc
negb
les
or
mov
addr16
push
pop
mov
mov
popa
adc
adc
leave
dec
cmp
mov
xor
xchg
sub
pusha
mov
gs
test
cld
xchg
mov
xor
das
sti
icebp
cmc
stos
mov
sub
xor
test
push
adc
in
lds
cmp
dec
jle
and
inc
xor
lret
mov
and
push
dec
or
push
call
imul
sbb
pop
mov
mov
sbb
outsb
or
mov
dec
int3
jle
ret
xchg
and
leave
push
scas
jp
mov
adc
cmp
in
leave
jg
stos
xor
stc
push
xor
shll
out
xchg
repz
fimuls
popf
das
divb
in
movsl
mov
scas
pushf
sahf
ret
mov
fs
and
dec
or
out
pop
xchg
xor
andl
movsb
movsb
mov
add
jp
sbb
xor
xlat
pop
xchg
aad
mov
loop
dec
adc
cli
inc
jno
lret
xor
sbb
sbb
dec
orb
inc
lret
sub
scas
rorl
mov
sbb
inc
into
aam
int3
fdivrl
or
outsb
and
test
push
lock
fisubrl
sub
sub
repnz
dec
leave
xchg
scas
push
orl
dec
inc
lret
aaa
inc
push
push
in
int3
push
inc
stos
mov
xor
inc
mov
inc
and
out
popa
dec
mov
movsb
sti
or
aad
adc
imul
outsl
ds
add
subl
mov
in
or
lods
inc
mov
cld
xor
sbb
sub
cmc
aas
sbb
xchg
sbb
lock
fdivs
jge
fmulp
enter
andb
out
sbb
or
or
pop
into
xchg
fwait
mov
ds
xchg
std
test
fldlg2
xor
mulb
mov
repz
mov
ror
dec
push
adc
pop
cld
and
loopne
sub
fnstcw
dec
data16
je
adc
push
int3
lods
inc
ret
mov
mov
stos
fidivs
sbb
ja
jne
jl
jmp
fnsave
bound
mov
jg
push
dec
addr16
dec
and
mov
pminsw
movsb
push
fdivrs
xor
fwait
je
xlat
cmp
hlt
enter
nop
pop
mov
je
stos
or
and
or
sub
push
xchg
cli
xchg
das
dec
dec
sbbl
adc
xchg
test
je
sub
pop
jp
jne
or
mov
ds
bound
jbe
xchg
ss
adc
in
mov
push
cwtl
cmp
push
jle
bound
outsl
mov
pop
bound
push
outsb
cmp
ss
cwtl
adc
ds
push
out
push
dec
jnp
sbb
mov
add
push
lods
movb
xor
int3
dec
jae
cli
ds
push
and
movsl
nop
in
inc
enter
jnp
rcl
andl
and
and
pushf
mov
pop
arpl
je
movsl
or
mov
push
outsb
mov
and
out
xorl
dec
mov
sbb
outsb
arpl
mov
lods
mov
add
nop
push
addr16
out
sub
int
icebp
or
jecxz
add
andl
push
out
sti
out
adc
mov
jecxz
inc
out
push
fldz
sbb
out
ftst
xchg
sbb
jnp
push
in
pop
pop
lods
cmp
sarl
cmpsb
mov
stos
imul
mov
ja
or
mov
jg
xchg
insb
jns
mov
cmpsb
xor
iret
adc
setg
je
popf
adc
fidivrl
into
push
pop
dec
inc
push
out
cmpsl
stos
sub
lea
and
ja
xchg
fsin
js
or
mov
push
push
dec
ljmp
and
jmp
lods
mov
daa
pop
mov
out
xchg
cmp
inc
es
jo
pop
xor
inc
test
outsb
insb
div
xchg
loope
mov
leave
sbb
mov
pop
xchg
fcoms
pop
add
add
fdivl
push
dec
test
addr16
rolb
jo
pop
xchg
js
sub
inc
dec
faddl
add
adc
stos
inc
adc
subb
dec
ret
xchg
pop
mov
adc
mov
int
xor
test
mov
call
lcall
stc
insb
rcll
xchg
sub
push
movsb
pop
pushf
movsb
sub
jmp
sbb
aas
mov
or
or
daa
icebp
sti
add
adc
jg
dec
add
mov
sti
inc
inc
mov
xchg
push
loopne
loopne
aad
sub
cmp
adc
mov
adc
mov
rcrl
js
adc
fwait
xlat
sahf
add
pop
pop
call
sbb
dec
shll
hlt
je
test
pushf
mov
sub
fildl
jmp
push
popa
pop
pop
out
inc
xor
xchg
ss
and
pop
ficomps
int3
das
or
dec
adc
sbb
dec
add
jnp
negl
cmpsl
icebp
movsb
jp
incb
mov
lds
cmp
inc
xchg
icebp
or
sub
out
ss
dec
cmp
in
add
xor
js
mov
add
outsl
cltd
iret
test
xor
out
dec
ret
stos
arpl
orb
outsb
xor
out
lcall
pop
xor
mov
cli
idiv
push
xchg
sub
push
push
or
cld
mov
jg
dec
push
dec
inc
scas
test
cmp
cmp
push
movsl
dec
lcall
js
jl
outsb
fnstenv
xchg
nop
jg
lea
cmpsl
loope
pop
inc
xor
cmc
pop
cmc
sbb
push
clc
xor
or
push
fbld
push
jbe
lcall
cmpsl
or
imul
jns
sub
add
rolb
leave
rorb
lods
dec
push
cmp
push
mov
rolb
cltd
loop
inc
movsl
and
data16
adc
mov
pop
inc
pop
adc
add
rclb
and
aas
mov
cmp
fdivrl
mov
and
mov
call
mov
hlt
loop
imul
test
add
sahf
das
cmp
jae
mov
fidivl
outsl
mov
lahf
repnz
push
sub
mov
out
cmp
cmp
aaa
shll
mov
jle
inc
push
cmp
adc
pop
shl
dec
popa
add
in
mov
in
rolb
sti
es
out
fbstp
adc
add
jg
fcompl
push
mov
fsts
bound
into
pop
inc
int3
int
in
dec
in
fsubr
in
divl
pop
out
das
dec
lea
mov
dec
inc
jo
xlat
mov
sbb
dec
inc
pusha
add
rorb
push
jmp
jp
shlb
inc
pop
push
stc
movsb
imul
pop
hlt
mov
sub
or
outsb
subb
out
sbb
mov
data16
push
dec
push
popf
int3
mov
xchg
xor
cmp
xchg
dec
mov
adc
stos
cwtl
insl
rcrb
inc
sub
push
dec
jl
cmp
pop
repz
orl
mov
jae
pop
push
or
roll
ljmp
loop
mov
cwtl
add
vpsubusb
mov
cmpsb
dec
andl
xchg
xchg
ret
jae
xlat
fcoms
jmp
cld
mov
and
fstpl
xchg
popa
outsl
dec
mov
and
orb
test
sbbl
lods
and
add
mov
inc
iret
dec
jo
sahf
push
mov
push
iret
mov
data16
push
mov
pop
test
push
shr
lods
lahf
pop
addr16
xchg
fs
and
fdivrl
ds
repnz
adc
in
xor
push
jnp
dec
adc
clc
cmp
pop
ss
mov
lods
ds
popw
adc
mov
adc
pop
in
sub
mov
dec
sub
pop
out
std
or
jge
dec
jmp
data16
and
push
ja
mov
xor
push
enter
iret
mov
push
xchg
xor
insb
int3
mov
test
sub
jb
es
push
cli
cld
fdiv
aam
scas
int3
xchg
divb
cmp
sub
out
cmp
add
out
mov
or
adc
push
dec
inc
stos
ret
daa
rorl
ss
in
mov
pop
stos
mov
icebp
jno
data16
out
jmp
hlt
sbb
ficoms
push
lret
frstor
mov
js
add
ds
pushf
sbb
cmpsb
or
int3
pushf
xchg
mov
aam
out
popa
sub
icebp
or
mov
std
mov
fadds
jp
in
pop
push
cli
mov
jl
bound
sbb
int
adc
aad
add
std
das
jmp
repz
cmp
clc
mov
xor
mov
mov
call
and
xor
aaa
repnz
or
loop
outsl
jge
xlat
adc
jb
xor
aas
dec
jge
push
xchg
imul
xor
test
dec
add
insl
or
cmp
dec
mov
shl
mov
sbb
or
call
mov
arpl
call
fadds
mov
jo
mov
jge
cmpsb
lea
inc
mov
sbb
fsubrs
gs
xor
cltd
fistl
mov
test
pop
adc
push
pop
xor
xchg
loope
int3
out
cmp
mov
sbb
into
cmp
push
mov
lds
ljmp
pop
daa
push
repz
mov
sub
pop
mov
or
push
mov
xor
mov
xor
lock
sbb
mov
pop
jo
sldt
xchg
adc
mov
push
push
xor
les
faddp
pop
mov
insl
xchg
push
cld
push
cmp
dec
sahf
sub
xchg
cmpsl
fistl
sti
mov
outsl
inc
enter
enter
sbb
in
aad
add
dec
lea
dec
sar
pop
lods
pop
orl
enter
inc
mov
sbb
xor
mov
xchg
xchg
dec
jmp
cmpsb
rcr
call
cmp
fistl
lret
jns
insb
push
or
cmp
mov
and
dec
jns
inc
add
mov
in
push
push
jns
xchg
or
inc
cmpsb
sub
fsubrp
push
xchg
pop
sub
add
add
stos
fildll
xor
call
int3
xchg
sarl
and
push
add
inc
fisttpl
cmpsl
pop
push
or
push
scas
out
dec
add
pop
mov
and
pop
imul
push
test
pop
xchg
add
xor
mov
test
mov
fnstcw
dec
xor
lods
mov
outsl
daa
fcoms
cmp
int3
cmpsl
pop
test
aas
xchg
movsb
push
xor
adc
push
xor
cli
in
adc
in
jne
bound
mov
push
jg
adc
fwait
jl
sbb
xor
repz
cmc
mov
inc
jno
inc
int3
adc
out
xchg
and
sbb
fwait
in
mov
or
mov
pop
add
fiaddl
sbb
and
inc
test
js
jbe
add
sbb
inc
xchg
cltd
test
pop
cmpsb
mov
lret
jns
jmp
push
jno
cli
test
xchg
mov
int3
out
xchg
test
xchg
cmp
int3
leave
dec
lea
pop
xchg
pop
aaa
jle
shll
dec
repnz
fdivs
dec
aad
dec
jne
xlat
data16
imulb
inc
push
mov
sub
sbb
ds
sarl
jle
jae
adc
cmc
daa
mov
jo
mov
iret
cmpsl
mov
jge
and
adc
xor
sub
xor
fisttpl
cmp
xor
lcall
ficompl
decb
test
jmp
sbb
cmp
shrb
mov
out
xchg
push
xor
ret
adc
jns
sub
sub
jp
pusha
xchg
dec
push
cltd
and
in
push
dec
bound
lods
stos
or
dec
test
gs
stc
xorb
arpl
adc
leave
mov
xlat
js
sti
push
mov
jno
mov
mov
test
push
insb
rclb
fbstp
lahf
pusha
lcall
shr
loopne
inc
int
dec
cmpsl
add
add
out
xchg
dec
mov
std
fists
mov
rolb
jo
incb
icebp
flds
insb
jle
cwtl
stc
test
decl
outsb
nop
sbb
xchg
out
in
sbb
daa
push
or
fildll
and
je
xor
pusha
fistpll
mov
int
add
push
push
add
ret
loope
jae
and
mov
push
insb
add
addl
and
xor
aam
mov
filds
adc
jge
cmp
notl
orb
lds
fistpl
and
fwait
inc
push
pop
adc
dec
mov
pop
cmp
rcr
fnstsw
lods
hlt
or
stos
jp
inc
mov
jnp
jg
mov
ja
lock
lcall
test
popa
and
xor
mov
jbe
mov
in
int3
pop
lock
dec
test
xor
das
cmp
ljmp
adc
sub
in
lods
dec
addr16
adc
and
sti
dec
sub
inc
enter
fs
lret
dec
xchg
test
aaa
aad
push
and
fstpl
fld1
xchg
push
xchg
mov
jae
in
ja
repz
jo
inc
push
xchg
mov
adc
adc
mov
arpl
or
cmp
mov
lods
sub
jb
jbe
sub
mov
sub
addr16
pusha
xchg
lea
das
mov
loop
int
mov
jge
jno
fsubrs
xchg
pushf
sbb
inc
or
add
add
or
lea
mov
and
dec
shll
adcb
stos
pop
sbb
mov
push
movsb
push
fcoml
int3
mov
xchg
movsb
fwait
lock
cltd
inc
jmp
arpl
mov
loope
in
push
dec
mov
pop
jne
clc
gs
pop
stc
lcall
bnd
push
hlt
push
and
add
out
jle
xchg
pusha
inc
into
add
je
jg
int
push
insl
xor
cmp
adc
je
ljmp
and
xchg
inc
fcmovbe
nop
xchg
mov
add
out
push
aam
push
or
in
fwait
push
fmulp
mov
fucomp
mov
fyl2xp1
mov
into
xchg
stos
sbb
fstpl
mov
sbb
mov
imul
cli
jp
jmp
adc
inc
jl
iret
test
mov
or
imul
mov
iret
or
pop
mov
push
mov
sbb
push
push
mov
add
pop
int3
xor
pop
or
jns
add
add
ljmp
push
lods
push
loopne
jo
add
out
or
mov
inc
pop
sbbb
jle
cmpb
mov
arpl
ret
add
adc
add
jae
mov
dec
jns
dec
addr16
ljmp
push
inc
add
xchg
adc
sahf
movsl
cmc
inc
sbb
sub
jmp
cmp
adc
mov
xor
pop
nop
aas
add
mov
iret
add
scas
sti
xchg
push
aaa
or
add
cmp
ljmp
mov
push
icebp
scas
cmp
mov
pusha
movsl
ds
js
rcr
dec
mov
push
and
pop
shlb
push
idivb
jae
sbb
inc
add
adc
mov
aas
clc
mov
out
fcmovb
pushf
pushf
dec
xor
sub
mov
lods
mov
nop
fsubrs
sub
fs
repnz
fwait
fs
xchg
test
shl
xchg
fwait
cmc
in
and
int3
push
std
sbb
lods
ljmp
fisttpll
xchg
pop
push
fwait
pop
jge
adc
xchg
and
shl
mov
loop
lock
repz
or
movsb
subl
sub
sbb
push
scas
cmp
andb
jp
xchg
fucom
shll
lret
pop
jg
inc
pop
popa
jmp
scas
or
sub
dec
icebp
cmp
pop
push
daa
mov
movsl
daa
lea
add
fnstsw
sbb
jb
adc
mov
pop
aad
mov
jb
cmpsb
cmp
inc
cmp
enter
mov
dec
pop
pop
test
jbe
mov
cld
add
inc
inc
xor
push
sub
js
loopne
sbb
movsb
bound
pushl
mov
dec
jo,pt
xor
ljmp
xchg
lcall
rcll
in
mov
jne
jl
test
int
aam
sbb
push
fidivrl
mov
arpl
aaa
sti
xlat
fdivl
call
inc
and
mov
hlt
in
repz
dec
xchg
mov
xlat
cmp
in
pusha
stc
cmpsl
fs
fs
jl
je
jae
jno
notl
dec
scas
adc
ds
fsubrl
loopne
jg
pop
out
or
jb
jo
sbb
add
lcall
jbe
std
divl
jge
mov
push
pop
sarb
push
repnz
mov
es
sbb
jle
xchg
sti
inc
imul
std
out
dec
xchg
jmp
mov
stos
jp
cmp
lret
cmp
add
jge
xlat
jge
imul
add
cmp
dec
sahf
cwtl
cmp
vmulsd
mov
stos
in
and
fmull
lea
lock
pop
xor
rcll
sub
xorb
pop
mov
add
dec
and
loope
popf
ja
pop
adc
idivl
jmp
xchg
fwait
pop
scas
cmp
mov
inc
mov
insb
pop
jp
xorb
mov
xchg
pop
cmp
xor
imul
adc
jne
jmp
subl
jecxz
push
leave
mov
and
dec
ret
xchg
pop
stc
insb
mov
push
enter
subl
insb
mov
je
xchg
aaa
xchg
xor
fnstenv
subl
add
push
test
outsl
push
push
add
in
xchg
mov
push
sub
and
test
xchg
scas
es
cltd
imul
sbb
jl
lret
mov
fadds
out
mov
icebp
xchg
fyl2x
mov
sbb
push
mov
dec
fisubs
xchg
push
xor
pop
lock
aas
add
xlat
fmul
ss
inc
test
adc
mov
cli
jp
sar
aad
sbb
pusha
outsl
mov
inc
pop
inc
insl
addr16
xor
jp
sbb
cmc
inc
les
imul
je
sbb
popa
mov
imul
add
fimuls
sub
imul
ljmp
loope
scas
loop
sbb
out
daa
lret
sub
loop
js
jnp
ja
sub
adc
and
add
jmp
push
mov
enter
inc
adc
xchg
sbb
in
mov
add
fadds
pushf
and
push
xlat
jg
sbb
rclb
aam
hlt
or
stos
ret
out
rol
push
adc
pop
adc
lods
mov
out
xchg
or
in
push
xchg
dec
notb
mov
int3
aam
aam
dec
ds
bound
mov
popa
xchg
stos
xor
dec
adc
dec
pop
int
jbe
xchg
int3
mov
sbb
jo
pop
xor
test
mov
mov
push
xchg
mov
mov
sub
flds
ss
arpl
arpl
dec
mov
add
or
pop
pusha
pop
shlb
push
pop
test
into
sti
and
inc
pop
xchg
jmp
xlat
dec
push
cmc
call
push
jo
jmp
sti
mov
xchg
leave
int3
nop
andl
lret
xor
stos
mov
mov
push
jno
push
out
push
pop
add
cmpsl
ss
std
bnd
xchg
fstp
mov
pop
nop
push
outsb
push
shl
add
sbb
xor
repz
dec
sbb
pop
push
cs
rorl
fdivrl
shl
imulb
pop
mov
fxch
xchg
cmpsb
mov
xor
pop
fimull
push
jmp
adc
bound
jg
and
shrl
sub
cwtl
or
jecxz
in
mov
xchg
gs
sbb
aam
insl
lods
aaa
adc
cmp
lahf
ret
and
test
lods
or
mov
or
int
je
in
frstor
push
push
jb
cmpsb
add
or
outsb
lahf
jns
jecxz
pop
mov
jae
jae
add
out
push
push
mov
adc
inc
dec
test
scas
mov
xorb
push
bound
rorw
pushf
cmp
dec
xor
cmpl
out
repz
push
loop
adc
shl
or
out
rorl
mov
sbb
pop
out
call
aaa
outsb
iret
test
lock
mov
push
mov
mov
loope
adc
std
push
mov
cmp
xchg
mov
ret
cld
lock
adc
cltd
movsb
xchg
das
inc
pop
sarb
leave
dec
std
dec
xor
fnstenv
and
jle
push
push
mov
int3
fs
add
aas
pop
jg
jo
inc
cmp
pop
icebp
jno
pop
cmp
inc
add
repz
dec
cs
jbe
dec
dec
data16
push
cmp
lret
jmp
or
je
push
xchg
mov
add
push
dec
dec
mov
sbb
push
cs
add
scas
or
cld
lret
push
mov
sbb
and
jo
push
in
pop
or
aam
popf
insl
fisttps
clc
fistpll
ja
mov
pop
xor
ret
mov
adc
cmpsl
les
jne
jge
aaa
mov
dec
ficoml
ss
mov
adc
pushf
adc
testb
push
mov
and
cmc
jo
or
mov
add
insl
out
xchg
pusha
stos
daa
fildll
push
dec
div
inc
adc
and
adc
dec
btc
jns
inc
inc
leave
sbb
call
push
mov
aaa
mov
cs
jb
dec
xor
fst
enter
out
sbb
scas
imul
cmpsl
mov
adc
out
lea
push
pop
pop
cld
dec
fists
dec
xor
stos
or
mov
mov
adcl
xor
jp
aam
jbe
sub
mov
xchg
negb
push
push
sbb
fidivl
and
cmp
cld
or
push
push
je
jmp
cmp
frstor
or
mov
jg
jge
adc
inc
sub
dec
inc
rcrl
xchg
sbbb
push
popf
sbb
dec
repz
push
xchg
sub
into
and
loope
cli
in
cld
repz
add
inc
add
push
push
mov
dec
cmp
xchg
xchg
and
mov
xor
adc
je
cmpsl
xchg
repnz
sub
and
add
pushl
pop
out
xchg
or
pop
loope
mov
jns
mov
int3
clc
add
dec
ret
mov
fcomps
or
outsl
sub
jo
sbb
or
jle
lock
rcrb
ret
jno
js
adc
xchg
rcll
pop
xlat
pop
leave
mov
pop
mov
jle
test
cmp
outsl
adc
movsb
mov
push
imul
jne
int
cmpsl
mov
popa
in
mov
pop
dec
jp
lcall
ret
mov
xchg
mov
and
daa
or
xchg
pop
imulb
jne
jb
mov
and
xlat
pop
mov
mov
inc
mov
pop
hlt
push
inc
pop
xchg
insl
sahf
sub
sbb
stc
cwtl
adc
stos
test
cmp
cli
insb
inc
stc
test
push
mov
mov
jge
mov
div
mov
push
xchg
jne
je
daa
dec
iret
sub
mov
lcall
jne
xchg
aad
or
std
cmc
jno
stos
or
mov
pop
pop
mov
mov
nop
cli
add
in
lock
ja
out
adc
cmp
sti
popf
xchg
popf
mov
movsb
cmpsl
js
cwtl
sub
icebp
mov
push
cmc
inc
mov
sub
je
stc
rcrl
adc
les
adc
add
push
add
fadds
mov
scas
cmpsl
mov
push
int
sbb
lock
cmpsl
lds
mov
enter
adcl
adc
std
bound
sbbb
push
popa
push
stos
xchg
and
mov
jns
dec
popf
cmp
insb
or
inc
mov
add
daa
or
jmp
or
test
cld
pop
std
jb
mov
jno
lock
jo
xchg
xor
mov
inc
xchg
inc
xchg
push
inc
mov
mov
add
inc
sub
jno
add
aam
shl
jp
lods
push
scas
jne
cmp
icebp
inc
aam
lcall
aad
push
adc
ficompl
sub
cld
imul
int
sub
sub
faddp
movsb
mov
addl
cld
cs
xor
sarl
or
out
jo
cmc
push
xchg
push
jmp
pop
cwtl
jp
icebp
inc
test
mov
push
or
leave
adc
sub
iret
jl
pop
cmpsl
cmp
es
inc
adc
jmp
fnstcw
ror
push
jp
jae
add
stc
sbb
push
push
cltd
mov
inc
in
std
out
sbb
clc
mov
sbb
cmpsl
andl
mov
push
adc
cmp
int
mov
sbb
js
ljmp
lcall
out
test
jae
lcall
push
mov
cmp
and
push
adc
jle
shr
jle
sub
xor
add
dec
aam
push
pop
push
xor
lock
sbb
ror
inc
popa
int3
orl
adc
sahf
adc
xor
mov
xchg
dec
imul
shl
addr16
xor
jp
jb
ss
jle
and
sti
sbb
cmpsb
or
pop
repz
loope
xor
sbb
jb
adc
add
xlat
dec
das
icebp
test
aaa
lahf
and
sub
adc
dec
mov
or
xor
out
jb
pop
ja
imulb
sahf
or
mov
jmp
sbb
addr16
imul
add
fisttpl
loop
iret
mov
fsubrs
shl
inc
testl
lods
sbb
xor
cwtl
fwait
jnp
mov
and
lea
sub
jmp
adc
popa
bsr
js
mov
ljmp
add
repnz
xlat
add
hlt
pop
pop
rclb
xor
xorb
jmp
mov
pushf
into
negb
inc
inc
mov
pop
jbe
cmpsb
xor
cmp
adc
insl
leave
or
mov
or
test
pop
rcll
stos
cmpsb
movsl
imul
ds
inc
xor
test
jbe
inc
jg
pop
ja
add
movsb
dec
fistps
pop
push
fsubrs
call
mov
popf
cwtl
and
rorl
cld
lods
mov
mov
inc
inc
lods
sbb
jnp
es
or
lock
sbb
outsb
inc
movl
repnz
jmp
aad
mov
stos
and
xchg
cmp
sbb
roll
mov
ret
push
sub
jne
push
jp
sbb
iret
sub
dec
cmpsl
imul
pop
xorl
pop
mov
jns
mov
stc
jno
imul
lcall
sarb
add
scas
jbe
push
adc
push
and
fcmovbe
jno
dec
mov
fidivs
add
dec
jae
in
mov
jbe
jle
sbb
das
lret
dec
xor
cltd
pop
fwait
add
xlat
jmp
jmp
mov
dec
pop
push
mov
pop
loopne
loopne
into
daa
stos
jno
add
jbe
push
ret
jo
stc
test
dec
and
inc
xchg
movsb
leave
xchg
and
mov
mov
sbb
mov
rcr
inc
cmp
daa
push
fcmovne
cmp
call
fistpl
inc
or
imul
inc
dec
bnd
sbb
or
mov
in
ja
jge
mov
or
in
dec
int
adc
pop
push
out
outsb
cwtl
jecxz
or
add
xchg
or
push
xchg
imulb
iret
push
int
jno
insb
pop
test
inc
aad
push
data16
lods
test
lret
inc
pop
das
sbb
cmpsb
pop
inc
popl
aas
jl
jg
sub
mov
lea
dec
sub
shrl
pop
mov
push
lock
aad
mov
aam
sbb
sub
mov
dec
add
ljmp
mov
pop
es
loopne
out
and
jnp
leave
hlt
push
das
ds
xchg
push
jg
lahf
xchg
xchg
js
bound
xor
clc
test
fistl
mov
clc
cmp
lea
jns
lahf
xlat
pop
and
sbb
movsb
lds
mov
jns
fstpt
dec
cmpsl
das
cmpsl
iret
jecxz
cmpl
add
xlat
ret
je
cli
adc
repz
jnp
pushf
adc
mov
xor
add
dec
xchg
loopne
mov
xor
aad
xchg
movsl
dec
xchg
xchg
incb
inc
out
mov
jmp
ds
inc
int3
xchg
out
or
pop
je
lea
pop
fwait
cmp
inc
xor
xchg
xlat
sbb
pop
jmp
jnp
lods
pextrw
add
push
sub
jo
push
je
test
mov
clc
aaa
fcompl
inc
jle
add
mov
nop
ds
pop
inc
jns
mov
xor
cmpsb
xor
cmp
inc
in
inc
fstpl
adc
xchg
and
out
dec
adc
cmc
lret
arpl
mov
add
jb
xor
stc
push
mov
fdivrs
pop
and
or
imul
ret
dec
popf
lock
test
pop
int3
cmp
and
cmc
push
inc
or
and
fiadds
sub
dec
loopne
clc
sbb
aaa
sub
xchg
cmc
jns
pop
ret
sbb
push
pushl
icebp
lea
int
jne
pusha
xor
sub
inc
pop
mov
mov
pop
mov
out
mov
add
sub
aam
mov
test
bound
repz
inc
sbb
jl
mov
cmpsl
mov
xor
cmp
xchg
mov
dec
jl
or
out
fildll
mov
repz
in
jae
mov
sub
inc
push
or
rcrb
push
mov
fadds
sbb
movsb
pop
loop
jno
pop
mov
xor
out
shrb
cltd
rolb
or
pop
push
push
enter
stos
fstpt
sarl
push
mov
fiadds
or
inc
nop
shrl
jbe
leave
fcompl
rorl
pop
pop
push
stos
mov
test
ja
pop
fsubp
scas
or
and
negb
pop
dec
in
ret
lods
out
adc
pop
sbb
imul
lcall
das
pop
jae
cmp
imul
js
adcb
es
xlat
or
push
fwait
in
cmp
xor
adc
lret
xor
out
test
xchg
pop
or
sub
into
xor
fs
mov
xchg
movsl
out
jne
pop
sti
dec
out
fnstcw
jl
dec
icebp
jl
outsb
dec
fs
sbb
lahf
push
sar
xchg
lahf
mov
es
or
dec
jae
add
sub
cmp
add
jo
mov
cli
sub
pop
pop
fstps
push
cmp
out
cmp
sbb
mov
xchg
push
mov
scas
jo
mov
inc
push
je
data16
into
fcoms
jg
test
popa
mov
jne
mov
add
jg
inc
or
flds
dec
inc
adc
roll
movsl
rolb
aam
adc
aad
and
add
mov
loopne
dec
dec
cs
rorl
pop
dec
sub
ror
loope
mov
daa
and
xor
push
cs
lods
push
jns
das
sahf
mov
mov
orb
push
adc
or
add
jb
jns
lods
mov
push
test
push
out
push
shlb
js
cltd
inc
xchg
inc
enter
jle
sbb
cmp
xchg
int
cmp
or
mov
cmc
nop
jno
sti
and
mov
mov
inc
push
xchg
mov
jle
jne
mov
in
fisubs
addr16
xor
adc
roll
int3
cmp
cmp
in
orl
movsl
or
cmp
mov
lea
mov
and
xchg
pop
jge
fchs
bound
dec
in
test
sbb
enter
fnsave
mov
fildll
rorb
cmpb
pop
add
jbe
in
filds
ljmp
movsb
sub
inc
lea
es
and
inc
mov
mov
js
icebp
inc
add
subb
sub
orl
push
div
and
les
lods
pop
cmc
cmc
xchg
mov
data16
adc
sbb
pushf
or
icebp
pop
pop
push
scas
call
inc
test
jg
fs
in
movsl
sub
sbb
leave
jne
js
sbbl
adcl
outsl
ljmp
bound
add
xor
cmc
imul
push
popa
mov
adc
push
xchg
push
jp
cmpsb
inc
lods
ds
push
aaa
dec
sub
sbb
add
movsl
fucom
xor
ss
mov
push
rcl
lods
cli
in
ja
roll
lock
in
sahf
scas
insb
push
inc
loope
outsl
push
jnp
fld
xchg
das
dec
xor
icebp
xor
xor
cmp
push
push
mov
jnp
adc
daa
jmp
inc
mov
fistps
imul
cmp
cmp
add
inc
data16
out
gs
jmp
fidivrs
mov
cmc
sub
sbb
or
addr16
rorb
ja
xchg
jae
push
hlt
or
arpl
dec
in
mov
push
dec
jns
mov
pusha
fnstcw
cmpsl
mov
jle
aas
addr16
xchg
mov
jmp
stos
mov
mov
sbb
and
sub
clc
test
imul
sbb
xor
push
iret
out
popfw
mov
cmc
mov
jnp
ss
cmp
mov
push
xor
hlt
add
lcall
gs
sub
mov
sbb
in
sub
jns
sub
lahf
mov
leave
mov
orb
pop
stos
mull
mov
repnz
jns
fsubrs
push
filds
jae
dec
dec
xor
push
xor
fnsave
popf
push
and
xor
iret
push
cmp
enter
push
nop
fldt
pop
std
out
pop
pop
loopne
mov
push
mov
and
mov
mov
gs
pop
or
mov
stos
lods
jbe
enter
sbb
pop
imull
repz
insl
push
xchg
ret
xchg
mov
mov
mov
adc
and
mov
in
das
ret
dec
xor
mov
dec
rclb
js
in
outsl
loope
xchg
test
aaa
enter
into
sub
iret
and
xchg
nop
mov
ss
jne
popf
sbb
daa
inc
xchg
xchg
sbb
subb
test
sub
pop
rcll
mov
clc
sub
cld
das
jns
repz
mov
add
call
cmc
insl
ss
leave
idivl
out
outsb
push
int
sub
pop
ljmp
pop
xchg
add
push
jo
pop
jbe
lcall
pusha
sahf
mov
repz
jg
xchg
cmp
aaa
out
in
mov
pop
jp
mov
or
dec
movb
fdivr
xor
jb
dec
pop
subb
adc
outsl
scas
jge
in
test
and
xchg
mov
into
cmp
in
mov
xchg
jne
xchg
pop
pop
push
int
fdivrl
data16
stc
add
cmp
push
les
sbb
ss
fwait
lods
mov
mov
sbb
gs
incl
pop
xor
inc
dec
xor
loopne
mov
cmpsb
inc
lock
lods
sub
in
add
cmpsb
and
mov
dec
mov
ljmp
imulb
sub
mov
call
xchg
pop
in
lret
push
movsl
lock
sbb
jmp
mov
mov
scas
gs
push
xchg
mov
add
mov
and
movzwl
push
fiaddl
dec
mov
fs
pop
dec
and
loope
idivl
cmp
mov
fs
xor
in
dec
fdivl
xchg
mov
out
pop
arpl
iret
pop
sub
inc
shrl
iret
push
mov
test
ror
mov
cmp
and
out
jecxz
cmp
and
xchg
je
jle
and
mov
jo
clc
mov
mov
fisttpll
cmp
and
cmp
cmp
cmp
push
mov
pop
cmpsb
xor
push
dec
xlat
sub
xor
adc
cmp
hlt
insb
sarl
push
push
lods
pushf
bound
mov
fstl
xorb
mov
cmpsb
movsb
lcall
out
pop
dec
lahf
loop
fbstp
decb
or
inc
push
aas
popf
int3
test
mov
cmp
cmovb
push
les
xlat
adc
out
das
out
lcall
push
mov
out
push
jmp
cmp
lods
sbb
int
and
cwtl
jge
inc
xchg
and
push
fisttps
jnp
xchg
mov
sarb
xchg
mov
cmpsb
icebp
adc
and
out
outsb
dec
mov
adc
insb
cmc
mov
jbe
xor
pop
arpl
sbb
mov
pop
ret
mov
mov
bound
cmp
das
aas
rorb
jb
or
push
rorl
mov
pop
je
in
gs
or
popf
and
out
pop
jle
mov
loop
pop
call
daa
jne
test
mov
xchg
ds
test
dec
movsb
push
inc
rorl
jo
call
jnp
popa
in
push
stc
es
push
gs
mov
lds
xchg
lods
ja
mov
mov
mov
test
mov
es
aam
shl
and
insb
ficomps
mov
cli
jecxz
inc
jne
nop
mov
or
test
rcrb
sbb
les
xchg
xchg
sub
jl
inc
int
aas
out
sub
data16
mov
in
popa
stc
std
insb
or
std
pop
mov
add
lods
mov
inc
out
push
inc
add
jp
lock
enter
ds
or
icebp
xor
and
jae
mov
outsb
dec
inc
add
rcrb
mov
outsb
jmp
or
mov
or
in
inc
ja
xchg
unpcklps
stc
pop
add
jmp
movsl
mov
cmp
sahf
test
cmc
push
sub
add
nop
adc
repnz
push
repz
movsb
test
ret
pop
adc
push
mov
incb
test
shl
push
sub
and
je
js
inc
mov
push
lcall
or
push
pop
mov
mov
test
mov
inc
sub
fmulp
mov
cmp
inc
sbb
fwait
sti
mov
mov
in
mov
mov
pop
cmp
es
dec
push
ret
enter
inc
loopne
cld
scas
fadd
dec
mov
movsl
stos
aad
out
pop
mov
xchg
dec
lcall
addr16
dec
add
push
dec
add
sti
xchg
dec
xlat
mov
adc
sbb
lret
hlt
sti
or
or
aam
push
mov
fwait
or
or
stc
add
or
mov
inc
aad
adc
cmpsb
push
mov
out
cmp
push
dec
mov
movsl
cltd
cltd
das
mov
in
xchg
push
xchg
mov
icebp
xor
xchg
add
pop
test
xchg
cwtl
insl
mov
loopne
adc
in
pusha
fsubrl
loope
data16
data16
addr16
mov
sub
mov
lret
cli
daa
ud2
add
jne
ljmp
xchg
jmp
cmpsb
rclb
out
fs
jmp
in
adc
call
add
inc
and
mov
xor
inc
adc
imul
in
rolb
and
xchg
mov
in
and
scas
shlb
shll
dec
and
mov
jno
rorb
sub
jne
inc
jg
cmp
aaa
out
pushf
mov
mov
pop
push
cltd
mov
mov
out
pop
jecxz
lretw
sbb
fisttpl
xchg
popf
psllq
mov
sub
outsl
mov
jl
cmp
push
push
cmp
cmp
sbbb
mov
adc
pop
jl
cmp
mov
jl
and
jmp
mov
jnp
pushf
js
push
shlb
addl
and
testb
xchg
push
mov
dec
inc
std
pusha
outsb
jp
mov
inc
loopne
inc
jnp,pn
repnz
sub
es
sahf
imul
pop
mov
adc
mov
sbbb
lcall
mov
movsl
sbb
push
jl
cmp
hlt
inc
shrl
xor
push
clc
dec
adc
mov
repz
arpl
negl
pusha
les
cmp
add
pop
mov
imul
dec
ret
jo
aas
mov
add
sarb
mov
push
xchg
mov
mov
mov
cwtl
cmp
cmp
add
jnp
rol
arpl
xchg
pushf
stos
xor
fwait
jb
xor
jae
stos
popf
test
cmp
dec
int
sub
loop
cmp
dec
aam
mov
adc
sarb
inc
sbb
adc
js
ds
mov
cmpsl
fnsave
dec
xor
movsl
jns
xor
repnz
xor
mov
imul
out
xor
jl
shll
sub
iret
mov
push
inc
movsb
push
lock
inc
or
push
aad
popa
movsb
icebp
push
ja
adc
mov
mov
cmp
test
pushf
and
test
add
sbbl
subl
scas
mov
pop
dec
dec
mov
enter
lcall
mov
neg
jae
pop
hlt
ds
push
cmc
imul
xchg
ljmp
out
and
scas
clc
push
repz
imul
aaa
and
jp
or
sbb
mov
and
popa
push
std
jl
add
sbb
or
outsb
push
lods
xor
inc
arpl
dec
insl
js
dec
in
mov
or
and
mov
addl
movsl
xchg
mov
rcll
shll
lret
mov
ds
add
jbe
mov
cmp
out
in
push
cwtl
ja
test
enter
clc
rcl
pop
lods
add
fs
push
pop
mov
icebp
push
das
cmp
pop
sub
push
mov
inc
adc
insb
cld
inc
xchg
sub
leave
push
push
push
mov
inc
cmpsl
insb
push
inc
push
aaa
dec
and
repnz
outsl
sarb
sbb
inc
popa
xchg
cmp
jo
movsb
iret
loop
lods
pop
lods
push
sbb
push
pusha
push
aad
loope
xchg
cltd
sub
pop
push
xor
out
aaa
add
lock
dec
outsl
add
mov
xchg
in
nop
mov
xor
xor
in
cmp
cwtl
clc
mov
stc
add
out
or
push
mov
xor
pop
pushf
pop
xor
stc
rol
std
push
repnz
cmp
ljmp
push
mov
sub
mov
es
sub
movsb
push
pop
shl
test
mov
pop
shrb
pop
xchg
aas
out
jns
movsb
mov
fwait
push
sub
fwait
out
fnstenv
js
mov
sub
jb
xor
mov
lahf
orb
and
cmp
pusha
lods
mov
jmp
pop
cmpsb
mov
mov
cmpsb
dec
push
sbb
and
sbb
fwait
add
dec
jns
ss
jge
mov
std
mov
add
dec
or
sbb
not
mov
cmp
and
push
shll
test
adc
popf
outsl
ds
and
insb
fidivs
push
sbb
jae
into
dec
push
sbb
pop
push
leave
jb
add
sub
loope
data16
adc
xor
int
stos
sub
sub
ficoml
outsw
mov
add
cwtl
mov
in
out
lods
sbb
jge
fists
js
mov
pop
sub
xchg
fwait
hlt
fcmovne
out
mov
imul
xchg
arpl
inc
int3
outsb
mov
sbb
mov
inc
subl
xchg
mov
lret
rcrl
pop
and
in
test
adc
dec
imul
das
ret
ficomps
std
js
imul
lret
add
or
fadd
jg
fistpll
rorb
jb
jo
pop
loope
push
jp
stos
aas
mov
pop
or
in
dec
xchg
ret
in
jl
sahf
mov
arpl
addr16
sbb
rol
mov
push
cmpsb
mov
xchg
cmc
lds
das
in
add
cli
push
jns
xor
xor
cli
shlb
inc
mov
mov
daa
cmp
sub
sub
leave
arpl
jnp
outsl
mov
shll
out
xchg
icebp
mov
add
jne
bound
jmp
mov
add
js
movsb
test
fdivs
push
push
xor
shlb
lods
shrl
movsl
mov
sbb
imulb
dec
cmp
sub
in
divps
mov
adc
xchg
xchg
jle
sbb
rorl
test
add
lea
pop
shrb
add
jle
sti
pop
test
aas
mov
in
pop
adcl
add
in
add
adc
hlt
xor
lods
cltd
lods
stc
mov
test
data16
in
ret
sub
adc
ss
pushf
dec
arpl
jne
inc
out
pop
test
outsb
inc
or
lret
sbb
cmp
sbb
fnstsw
push
and
test
test
mov
mov
pop
fucom
adc
push
les
cmp
lea
xor
rorl
loop
dec
out
xchg
cmp
jbe
pop
icebp
fldcw
xor
enter
out
push
fimull
xchg
mov
fisubrl
stos
mov
std
sbb
xchg
mov
pop
hlt
sbb
mov
jne
and
outsl
jmp
rcrb
pusha
xor
add
cmpsb
jmp
out
dec
pusha
xlat
mov
adc
mov
sbb
int
mov
sbb
addb
sbb
mov
mov
cmp
lcall
adc
sub
rcrb
and
inc
xchg
mov
xchg
inc
dec
nop
xor
das
mov
push
rcll
icebp
outsl
scas
xchg
pop
lds
lock
out
pop
in
xor
sahf
xchg
and
scas
cmp
std
cli
ret
dec
shll
out
pop
arpl
insb
push
loopne
lret
cmp
inc
outsl
mov
or
pop
push
mov
mov
mov
movsl
pop
arpl
dec
mov
inc
jp
dec
enter
mov
dec
lret
mov
stc
popa
or
mov
mov
sbb
vmread
in
dec
out
xor
fs
mov
mov
pop
pop
cli
mov
fbld
mov
push
or
mov
xchg
fildll
sbb
inc
bound
mov
jp
mov
inc
mov
jecxz
lods
or
or
or
loope
stc
cmc
and
imul
mov
dec
mov
scas
push
xchg
lret
inc
jne
fnsave
imul
aad
mov
fucomip
dec
sbb
pop
lock
fistl
jle
es
mov
cmc
xor
popf
les
dec
insb
icebp
andps
xchg
cmp
sbb
and
push
rcrl
jnp
lds
test
lock
inc
mov
ja
dec
movsl
push
pop
fstl
loopne
sarl
dec
add
je
out
sub
inc
rorl
int3
adc
lea
inc
mov
cmpsl
jmp
cmp
in
push
lea
lds
add
sbbb
rcr
lahf
sub
xor
das
imul
mov
dec
es
mov
hlt
xchg
orl
ss
xchg
daa
fldcw
out
jae
mov
and
jp
push
leave
adc
xchg
in
ljmp
mov
jo
cmp
xlat
adc
fs
push
subb
inc
test
test
aaa
cld
nop
or
repnz
hlt
fucomi
sub
fiaddl
dec
mov
push
push
lcall
cmpsl
iret
jecxz
mul
stc
outsl
or
pop
shll
test
and
add
pop
mov
imul
lahf
neg
push
shll
pop
sub
inc
add
cmp
pop
pop
add
aam
enter
mov
in
bound
lea
add
fistpll
lods
enter
and
mov
cltd
shll
cmp
and
push
push
imul
add
push
es
dec
xlat
xor
repnz
decl
in
idivb
dec
mov
ret
sbb
cmp
inc
nop
fdivr
aas
icebp
int3
enter
addr16
or
xchg
fldl
or
cmp
sbb
cmp
pop
mov
mov
mov
fldenv
mov
jge
ja
push
push
les
pop
push
loopne
cmpl
mov
mov
lea
js
or
scas
shrb
push
fwait
add
pop
dec
dec
sub
mov
xor
sbb
mov
push
mov
jmp
imul
xchg
arpl
repz
push
test
jae
hlt
fiaddl
adc
call
sbb
arpl
or
and
repnz
data16
lock
arpl
dec
or
xor
data16
sti
push
and
mov
lods
ds
mov
aam
je
jb
dec
add
loope
push
adc
mov
jmp
faddl
fsubr
stc
mov
mov
lcall
mov
clc
pop
sti
loope
cmp
jg
or
fucom
mov
dec
addb
cmpsl
sub
fisubrl
xchg
and
cmpsl
lahf
int3
mov
imul
aad
fwait
xchg
js
push
inc
jge
lahf
sub
mulb
inc
xchg
sti
int3
inc
and
jbe
mov
repz
pop
sarl
sub
iret
lods
out
cld
inc
es
pop
and
adc
cwtl
mov
addb
in
jp
daa
test
jbe
jne
shrb
dec
xchg
or
enter
lret
lret
mov
cmp
or
mov
movsl
push
lods
in
in
inc
and
ret
pcmpeqw
and
mov
mov
inc
mov
inc
and
fucomi
popa
into
and
mov
xchg
iret
test
loopne
cmpsb
testb
fxtract
mov
jge
sub
das
cmp
lea
inc
mov
das
mov
xchg
sub
dec
stos
mov
jge
mov
out
loope
ror
lret
in
call
pop
xchg
sbb
test
insb
xchg
jae
sbb
rcl
adc
xchg
adc
cltd
out
xchg
or
xchg
or
clc
fcomp
xchg
xor
cld
flds
leave
push
mov
jge
xchg
mov
add
jne
sti
out
xchg
xchg
mov
gs
fstpt
pop
inc
sbb
pop
and
add
sbb
loopne
ret
sbb
jecxz
mov
int
push
xchg
clc
add
pop
mov
mov
or
push
prefetch
or
cltd
cmc
jo
jns
jp
or
out
nop
jne
out
add
xor
lahf
imul
xchg
cmp
loop
sub
pop
ljmp
leave
fwait
addr16
mov
loopne
pop
lret
sar
jecxz
mov
dec
pop
sbbl
lret
and
lret
mov
hlt
movsl
insb
xchg
daa
popf
imul
inc
push
lret
dec
sti
cmp
addl
xchg
stos
rcrb
mov
stos
sub
shrl
add
rcll
mov
scas
push
mov
in
lods
repz
faddl
inc
aaa
push
cld
repz
clc
xchg
or
int3
daa
push
aam
fwait
jmp
xchg
sub
lds
fst
scas
out
push
out
out
push
in
pop
or
insl
cmp
xchg
stos
enter
lods
into
mov
xchg
fstpl
cmp
jbe
std
popf
pusha
mov
mov
scas
and
inc
cld
sub
jbe
adc
aaa
bswap
inc
dec
repz
or
adc
adc
push
xor
push
mov
jns
or
push
xchg
sbb
out
push
inc
xor
in
mov
jae
dec
add
xor
add
loopne
std
push
push
in
sub
xchg
imul
xchg
adc
or
sub
cmp
cli
test
push
clc
xorb
jge
xor
lcall
int3
fdiv
mov
dec
mov
outsb
dec
xchg
mov
sub
scas
jp
mov
dec
mov
test
ror
cwtl
add
lret
dec
cmpsb
cmp
je
rcrb
or
jmp
cltd
rdpmc
mov
push
cltd
icebp
into
mov
iret
cmpsb
subl
sub
jns
ret
xchg
xor
mov
sbb
and
push
mov
jnp
in
xchg
sbb
sarl
mov
cmpsb
sub
je
xor
sarl
loop
mov
ja
ljmp
xor
stos
leave
sarb
xchg
out
push
xor
jle
and
ret
pop
iret
mov
or
cmp
in
aad
inc
and
repz
lret
mov
jmp
dec
mov
in
cmc
inc
stc
jns
push
call
and
mov
lods
into
lret
popl
dec
inc
lahf
mov
dec
jge
fs
push
fldenv
cmpsl
mov
imul
xor
movsl
pop
ja
shll
cmp
or
subb
xor
js
add
fimull
inc
cs
and
push
xor
mov
fwait
js
mov
add
pop
sbb
hlt
faddl
lret
aam
out
push
sub
jge
sbb
out
testb
xchg
pop
push
das
in
lcall
sbb
dec
out
sub
mov
add
shrl
ja
mov
xchg
mov
sbb
and
movsl
daa
mov
test
fildll
dec
or
adc
shl
mov
hlt
je
lret
js
sbb
dec
lock
je
or
jno
cmp
jb
add
add
lods
sbb
lods
or
stc
pop
sbb
out
gs
adc
in
push
jae
pushf
ds
push
mov
mov
nop
in
mov
push
pop
or
pushf
sahf
ret
test
int
jmp
std
dec
testl
in
movsb
push
out
jge
xchg
rolb
mov
xchg
hlt
xchg
mov
jo
xchg
test
and
andb
decb
cmp
test
inc
mov
cmpsl
ret
lret
enter
dec
mov
inc
dec
in
cmp
cmpsb
rcrl
int
ficoms
adc
pop
adc
mov
sbb
out
aad
ljmp
outsb
pushf
sbb
mov
jbe
mov
push
or
cmp
adc
dec
mov
and
push
dec
js
dec
repnz
imul
xchg
cmpsl
aad
lock
mov
dec
push
daa
xor
mov
sub
fnstenv
jb
jl
cwtl
cld
rolb
loopne
dec
std
ucomiss
nop
sub
or
and
leave
in
sti
jb
in
notl
in
ljmp
jle
sub
lea
out
inc
xchg
adc
sub
hlt
insl
adc
shll
jecxz
and
pop
cmp
fdiv
xor
xor
nop
sbb
shrl
fnstsw
out
mov
adc
pop
or
jg
and
inc
movsb
outsb
mov
int
mov
shlb
jne
adc
imul
repnz
mov
loop
or
xchg
jnp
stos
and
gs
imul
imul
mov
mov
test
xor
in
push
cmp
fsub
dec
and
test
xlat
cmp
shll
hlt
mov
xchg
push
mov
imul
cmp
dec
lds
sbb
out
mov
sub
adc
sbb
repz
stos
out
call
mov
je
test
loop
pop
in
mov
push
ret
bndstx
push
loop
xchg
in
xchg
fldcw
in
push
int
inc
outsl
repz
xor
push
adc
cmp
jmp
push
xlat
enter
js
pop
popa
jl
or
test
sbb
push
push
std
jmp
lds
xorb
addr16
test
fwait
xchg
aam
mov
dec
jmp
dec
push
mov
bound
or
clc
mov
jge
dec
pushf
js
mov
sub
dec
fistpl
or
jg
dec
lds
mov
fstl
pop
lcall
popa
loop
xchg
pusha
out
inc
iret
inc
addb
test
lds
test
xchg
cmpl
sbb
subb
ja
pusha
iret
pop
or
mov
nop
sub
lds
jp
scas
rcl
cmc
mov
clc
dec
repz
cmpsb
adc
insb
xor
pop
xlat
shr
lds
mov
es
lea
jmp
shl
aam
xchg
sub
int
push
ljmp
pop
mov
pusha
pop
int3
stc
cwtl
xchg
xchg
mov
mov
inc
cmp
test
jecxz
xor
cmp
mov
loopne
pop
mov
addl
scas
push
cmpsb
nop
inc
mov
jne
test
daa
jnp
jne
cmp
and
cltd
xor
and
aad
jne
and
iret
test
mov
cmp
fwait
movsb
adc
push
fnstenv
mov
sbb
rcrb
jg
mov
xlat
cmpsl
add
pop
fistl
or
leave
cmp
add
stc
jne
cwtl
adc
fidivl
sahf
fcompl
ja
lret
inc
roll
dec
xor
pusha
inc
fisubs
lret
cwtl
sbb
push
sub
pop
sbbl
cmc
pop
push
adc
lods
sub
imul
cmc
jg
add
sub
jns
stos
push
xor
sub
xor
bsf
push
test
add
into
iret
sahf
test
iret
cmpsb
or
sbb
or
dec
pop
mov
jl
lahf
in
cmp
pop
insl
inc
push
push
je
or
lds
packssdw
ja
das
sbb
cmp
push
mov
xor
pop
mov
cmc
sarl
pop
dec
out
fwait
adc
mov
ds
fstpl
sub
fadd
push
lcall
jge
shll
mov
push
addr16
pushf
add
jae
mov
jbe
andb
mov
popf
mov
orb
out
adcb
xor
sub
and
cld
mov
test
sbb
mov
jbe
leave
mov
ficompl
fiaddl
gs
or
xchg
xchg
mov
movsb
dec
dec
mov
mov
push
cwtl
push
mov
rol
and
repz
ficoml
mov
sbb
cmc
int3
mov
push
bound
mov
jns
insb
fmuls
daa
out
jmp
in
test
mov
outsl
mov
xor
in
popa
je
fmul
notl
addr16
lods
push
inc
movsl
sub
enter
sahf
ljmp
adc
mov
sub
sub
roll
pushf
mov
popf
out
or
jg
inc
add
pop
pop
push
inc
test
subb
adc
mov
enter
xor
mov
and
addb
ror
pop
xor
xor
dec
insb
insl
xchg
adc
lret
mov
mov
or
inc
pop
sbb
sbb
mov
pop
scas
xchg
sbb
lea
shll
inc
sbb
inc
pop
pop
sti
filds
add
jns
loop
es
pop
mov
pusha
dec
mov
mov
or
add
bound
push
sub
shrb
iret
pop
mov
stos
push
sub
movsb
push
cmp
cmp
ffreep
imul
hlt
subl
cmp
mov
dec
jecxz
inc
in
mov
out
xchg
stc
lock
das
pop
pop
cmp
std
adc
or
adc
aam
xchg
call
adc
jne
test
data16
rcrl
mov
xor
mov
out
mov
addr16
repnz
pop
mov
repz
pop
and
pop
orb
jg
dec
sub
mov
cmpsb
dec
cmpsb
mov
sbb
sbb
xchg
cltd
xor
add
sub
aad
add
int
test
repz
icebp
int3
xor
cmp
out
or
pop
dec
fcmovnb
push
xor
push
imul
sub
outsb
lock
cmp
ret
sbb
mov
xchg
mov
add
and
jge
in
and
fsubs
cld
xchg
int3
or
or
inc
rol
jmp
xorl
cmp
js
clc
pusha
into
fs
ret
sub
and
test
add
testl
jns
dec
cs
pushf
add
adc
dec
loop
push
add
cmp
and
push
lods
inc
cmp
insl
in
xor
daa
or
notl
jmp
idivl
jno
ljmp
or
insb
addl
xchg
sbb
push
fdivs
push
int3
ja
fidivl
pop
movsl
out
outsl
xor
add
or
push
sub
repz
idivl
pusha
mov
xchg
mov
sub
call
enter
xchg
icebp
xorl
divl
in
or
mov
ss
notl
daa
sarb
push
out
hlt
and
ss
lods
sbb
push
repz
jmp
push
adc
insl
xchg
push
sbb
aad
mov
mov
push
daa
xlat
ds
out
dec
fisubrs
xor
inc
dec
std
mov
pop
push
fdivl
fiadds
xor
dec
fcoml
sbb
cltd
in
test
mov
pop
mov
dec
ffreep
aad
or
or
inc
xor
clc
cmp
fistl
pop
jg
and
sub
rorl
push
and
inc
scas
repz
int3
jmp
ret
les
jecxz
cld
pop
dec
cmp
cltd
cld
fisttps
loop
cs
cmp
adc
pushf
pop
stc
out
xchg
sub
loop
mov
fnstenv
adc
fwait
adc
xlat
ret
dec
sarl
mov
fucomp
xchg
cmp
mov
int3
decb
out
bound
inc
or
into
xor
fistps
lret
pop
mov
ficompl
int
je
xchg
lea
lods
enter
mov
mov
cmp
adc
ljmp
std
scas
cmp
loope
xorb
rorl
pop
lds
add
rcll
cmp
loopne
xchg
dec
add
dec
cmpsb
fildl
in
sub
nop
mov
leave
xor
shl
incl
jmp
popf
jae
adc
cld
in
jae
jge
pop
xchg
adc
imul
in
pop
outsb
add
rcrl
mov
mov
lret
lea
cmpsl
frstor
pop
faddl
xchg
decl
pushf
mov
pop
mov
dec
adc
jecxz
lods
pop
mov
push
aaa
into
pop
mov
lds
or
daa
dec
cmp
jecxz
dec
push
cltd
andb
sub
inc
push
popl
mov
push
jp
icebp
mov
negl
std
loopne
arpl
sub
cmpsl
sub
stc
jb
push
lahf
add
mov
inc
outsl
stos
mov
into
fisttps
inc
movsb
or
imul
jg
cmpsb
xchg
fcom
jns
or
cwtl
fisubl
xchg
fildl
mov
inc
nop
cmp
scas
and
inc
jl
out
push
js
fdivl
adc
mov
addr16
and
pop
mov
pushf
not
stc
hlt
arpl
jle
fdivrl
push
add
or
negb
push
mulb
loop
shrb
test
xchg
faddl
mov
scas
sbbb
jb
notb
mov
test
fmull
lock
cs
in
cmpsb
xlat
jno
pusha
iret
insl
mov
sbb
xchg
mov
mulb
gs
xor
jns
pop
push
fisubrs
mov
pop
jo
cmp
in
cwtl
cli
in
sahf
cmc
push
jae
aas
mov
lret
enter
loopne
je
push
dec
fiaddl
int
add
into
out
or
inc
mov
cmp
mov
add
popf
mov
or
bound
xor
pop
cmp
xchg
push
pusha
jo
pop
ficoml
xchg
rorl
jp
pushf
xchg
aad
mov
int
add
mov
or
pop
sbb
scas
popf
dec
xchg
aad
lods
out
mov
rcrb
adc
lret
insl
xchg
enter
mov
cmp
je
jo
sub
cmp
and
loope
xor
mov
pushf
loop
add
test
out
cmpsb
jo
es
pop
mov
add
cltd
stc
inc
mov
mov
test
cltd
enter
ljmp
pop
scas
cltd
leave
push
jl
ss
imul
lock
xchg
sahf
pushf
dec
popa
xchg
xor
cmp
and
decl
pushf
stos
jnp
or
lahf
xchg
fstl
popa
lock
out
mov
out
ficoms
cmc
xlat
cmp
adc
push
nop
lcall
dec
shll
bnd
push
inc
adc
test
imul
inc
adc
ret
das
push
pop
pop
cltd
clc
add
adc
cmpl
jge
repnz
imul
xchg
data16
add
xchg
and
cmp
out
repnz
xchg
mov
sbb
push
mov
add
ja
test
fwait
dec
mov
sbb
xchg
mov
dec
sbb
pop
clc
lods
repnz
dec
sbb
sub
jle
mov
pop
push
add
push
and
cwtl
or
jns
jle
adc
imul
mov
insb
cmp
outsl
push
call
addr16
sti
pusha
add
jmp
insb
nop
adc
cmp
jg
cwtl
test
ss
lcall
pop
mov
jns
lret
sbb
mov
shll
repz
pavgw
push
adcl
cmp
shlb
out
cmc
testl
gs
mov
imul
mov
scas
les
les
bound
jl
cld
mov
jmp
adc
sbb
jo
mov
jg
jl
mov
xor
dec
call
out
cmpsl
and
xchg
ljmp
lcall
jmp
cmp
pushf
cmp
lcall
rorl
pop
xchg
inc
jbe
cmp
sbb
cli
ficoms
ret
jle
mov
aad
in
dec
sbb
mov
mov
test
pop
add
fs
dec
clc
lcall
and
mov
lods
sub
push
pop
dec
jnp
gs
sub
notb
divb
lea
ds
lock
les
pushf
out
inc
in
in
rcll
xchg
in
pop
stos
pop
xchg
sub
repz
movsb
aaa
jle
pop
out
push
pop
hlt
stc
bound
jge
scas
sti
out
mov
sub
in
add
xor
aam
xor
cmpsb
imul
jnp
dec
subb
iret
sub
mov
pop
push
jg
ljmp
mov
in
push
cmp
jno
into
and
lock
jne
dec
scas
xchg
sahf
pop
ret
jns
in
mov
shll
pop
jbe
enter
pop
sbb
push
sub
scas
dec
bound
mov
pop
mov
out
divl
push
xor
jae
inc
mov
sbb
popa
imul
lea
loop
xchg
enter
nop
and
sbb
xchg
xor
xor
pop
test
gs
mov
popf
dec
mov
mov
jb
add
or
int
fwait
test
cmp
mov
pop
imul
cmc
movsl
pop
xchg
sarl
dec
sbb
mov
or
cmp
push
lret
iret
sbb
mov
pop
jecxz
pop
and
fbstp
in
mov
mov
mov
or
push
pop
fs
cltd
inc
or
insb
adc
push
pop
mov
lahf
mov
adc
lods
sbb
push
lahf
jae
jp
shl
cmovnp
mov
out
push
sub
fdivrs
jns
shrl
fidivs
mov
xchg
sub
push
das
sub
ficoms
popa
ret
lock
loop
xchg
push
fnsave
shr
aad
dec
jl
mov
lcall
outsl
cwtl
sarl
sahf
push
test
jmp
sarb
leave
fisttpll
add
mov
rclb
cmp
call
jo
add
pop
stos
stc
into
outsl
mov
sub
mov
mov
jbe
and
and
lret
out
fcompl
jns
cmc
loope
push
push
xor
cmp
adc
and
ret
sti
inc
fidivrl
or
cmp
in
in
jno
lods
jnp
adc
cltd
and
and
mov
icebp
mov
dec
push
cmp
int3
sub
fcompl
ss
shll
xchg
sahf
lcall
imul
mov
add
mov
sbb
into
inc
in
punpckhbw
flds
mov
jbe
dec
aad
and
fnsave
mov
and
jle
dec
aam
sahf
sbb
out
lds
in
adc
lahf
and
mov
cmc
sub
andl
push
ficompl
push
cmp
test
cmc
jns
push
adc
mov
iret
dec
lcall
add
inc
stc
dec
rorb
out
icebp
shl
subb
pusha
mov
outsl
sbb
mov
jge
and
adc
fwait
or
rorb
or
inc
in
jb
cmc
clc
push
out
ret
mov
pusha
lret
or
nop
push
loop
inc
imul
cltd
inc
aas
xor
lcall
fisubs
xlat
out
test
adc
jbe
aaa
std
pop
push
in
rolb
xchg
lea
dec
je
popf
add
aam
ja
loop
pop
push
out
or
xchg
subb
sbb
addb
sbb
leave
inc
sahf
mov
dec
mov
dec
sub
repnz
repz
das
test
xchg
out
pop
mov
fcmovne
mov
mov
xchg
and
cli
iret
mov
dec
or
xor
cmp
sub
push
inc
jmp
push
sbb
jp
out
in
xor
add
xor
lds
jmp
clc
and
adc
cmp
pop
and
shlb
sahf
xchg
mov
dec
notb
andb
jmp
pop
sub
inc
fwait
lret
stos
inc
adc
ja
test
mov
adc
mov
or
cmp
mov
mov
or
fistps
mov
adc
inc
mov
mov
jecxz
xor
jl
pop
pop
or
inc
xchg
addr16
sub
movsb
lds
stc
cld
xor
js
or
sub
mov
andl
shl
inc
mov
push
mov
insl
mov
daa
sub
insb
ljmp
mov
jns
add
dec
lahf
dec
scas
bnd
and
push
push
rcrb
aad
addr16
pop
add
popa
data16
or
daa
roll
or
sti
sbb
mov
mov
or
cs
movsb
xor
nop
sub
sbb
enter
sarb
dec
pop
pop
shlb
stos
and
adc
pushf
dec
sbb
rclb
mov
add
mov
in
mov
and
cmp
sbb
jb
cld
es
stos
and
idiv
shld
mov
addr16
jnp
imulb
cli
jns
or
push
dec
adc
push
ret
aaa
pop
mov
rcl
pop
sub
and
jne
or
out
addr16
hlt
sub
pop
jmp
scas
sub
push
divl
push
sub
popa
sbb
mov
dec
cmp
hlt
fsts
cwtl
fstl
mov
xchg
hlt
push
pop
insb
andl
push
mov
ret
or
insb
out
and
lea
out
movsb
dec
push
inc
sti
adc
test
std
les
and
jp
pop
cmp
and
ficompl
lds
sbb
enter
mov
in
imul
idiv
lds
xchg
push
stos
add
add
mov
jmp
notb
xchg
fisubrs
pushf
jle
mov
jne
sarl
cs
jnp
mov
out
popa
dec
push
stos
sub
std
hlt
dec
sbb
sar
push
aam
jmp
and
pop
xorb
fisubrl
inc
int
inc
inc
bound
dec
shll
or
rcrl
cs
inc
dec
dec
cwtl
and
mov
sub
dec
adc
cmp
test
notb
lcall
pushf
adc
outsb
push
sti
aaa
push
cmp
loop
jns
cmp
call
adc
out
adc
add
xchg
sbb
and
outsl
dec
push
faddp
adc
ljmp
fcom
std
pusha
imul
inc
inc
out
cli
push
push
daa
adc
cmpsl
sahf
adc
fmuls
inc
aas
mov
push
decl
xchg
pop
jp
xor
cwtl
add
lret
adc
cltd
ds
xor
les
clc
adc
xor
das
fimuls
mov
add
mov
xor
mov
cs
clc
outsl
adc
or
mov
icebp
mov
sbb
add
adc
fimuls
sub
les
mov
sbb
jle
sub
push
fimuls
mov
and
sub
mov
adc
pop
in
scas
rclb
jecxz
fcom
gs
and
jbe
mov
pusha
mov
or
mov
fists
lock
repz
test
shrb
mov
add
adc
in
lahf
push
clc
pop
out
pop
jnp
cmp
cli
push
fdivl
mov
ds
or
add
ds
out
xchg
insl
sbbb
loope
cltd
ficoms
lret
pop
jbe
gs
andl
outsl
xchg
addr16
fldcw
lahf
push
xchg
sbb
jb
inc
jae
div
ljmp
stc
jg
jmp
movsl
ficoml
data16
shlb
out
cld
mov
cmc
or
lock
aaa
cmp
xor
jo
mov
or
sahf
out
enter
ds
sub
lret
lods
int
inc
cld
inc
xchg
addl
movsl
mov
push
mov
outsl
nop
test
enter
mov
pop
xor
int3
sti
jecxz
push
sbb
out
lret
jne
lret
ret
cltd
cltd
outsb
inc
xchg
sub
push
mov
fidivs
cmp
mov
mov
test
dec
cmpsb
nop
jl
mov
push
mov
in
lds
aas
loope
push
sub
cwtl
cmp
jno
mov
xor
adc
dec
or
mov
loopne
data16
paddusw
and
cmp
pusha
jae
ror
mov
es
loopne
add
cmp
jno
cltd
xchg
dec
jg
cld
scas
add
sub
mov
mov
mov
sbb
fwait
mov
test
movsl
imul
mov
jnp
pop
lods
lods
push
sub
lds
pushf
push
or
sbbb
cmp
in
scas
jl
xlat
xchg
mov
adc
cmp
dec
mov
and
out
push
cwtl
call
je
push
jge
les
lea
push
sbb
xchg
push
nop
and
pop
mov
mov
push
sub
aas
lds
imul
jge
mov
loope
in
jbe
push
daa
nop
mov
mov
aaa
movsb
loopne
scas
fs
clc
mov
sbb
scas
xorb
loopne
gs
mov
and
pushf
stc
imul
inc
dec
mov
inc
and
insl
sti
jae
mov
outsl
fstpl
push
rolb
xor
jns
sti
fsubs
xor
lock
jl
lds
mov
and
or
aam
stos
lcall
cmp
mov
xchg
cmp
jno
icebp
or
loop
mov
bound
mov
mov
cmpsb
icebp
xor
push
cltd
sbb
jne
mov
pop
pop
out
aad
inc
xchg
push
pop
inc
xorl
sub
push
jne
popa
hlt
push
nop
xor
or
lcall
test
mov
pop
dec
cmp
subl
stos
test
pop
mull
data16
xchg
cmp
repz
or
loopne
push
ret
rorl
subl
mov
in
mov
notl
pop
add
cmp
stos
push
mov
aaa
mov
jmp
ljmp
insl
lods
mov
mov
dec
ret
imul
enter
mov
ret
push
xchg
sub
scas
adc
leave
push
inc
cmp
sub
push
dec
mov
mov
scas
das
int
cmc
bound
in
loopne
sub
popf
or
add
sub
or
out
push
push
add
test
dec
cs
pop
adc
mov
jnp
inc
das
jl
push
outsl
fidivl
xchg
push
xchg
push
dec
insb
mov
dec
cmp
pop
or
iret
shlb
cld
fcomps
mov
mov
push
jp
adc
pop
and
les
fisubrl
pop
jecxz
imul
xchg
add
mov
and
data16
insb
mov
loop
inc
pop
dec
testl
adc
fsubr
insb
cmp
adc
dec
pop
xor
cmp
sub
jle
ds
push
aam
ljmp
inc
inc
icebp
or
aam
hlt
sahf
inc
xchg
push
sbb
imul
stc
pop
jp
and
js
jge
sarb
fidivs
push
xor
std
xor
or
popf
lods
insb
addb
inc
dec
sbb
mov
les
loopne
jl
rorb
pop
xor
pop
mov
addr16
ret
mov
mov
fcomi
loopne
nop
arpl
movsb
test
cmpsl
sub
scas
push
or
push
mov
lods
popa
lcall
or
pop
jecxz
inc
call
movsl
inc
aam
in
in
jnp
sub
jge
std
int
mov
cmpsb
fldl
sub
mov
pop
or
pusha
push
int3
pushf
cmp
inc
mov
lea
sub
jp
aaa
xor
sbb
call
xor
pop
or
mov
and
adc
inc
enter
mov
cli
fisubrl
movsl
in
mov
aam
jae
andb
adc
adc
cmp
mov
push
or
aad
xchg
mov
adc
xchg
inc
adc
inc
cmp
or
shr
ljmp
xor
imul
jmp
push
add
lods
cmc
bound
push
ret
inc
in
jp
hlt
mov
pusha
in
out
popf
pop
pop
mov
adc
push
testb
adc
cltd
adc
mov
or
sub
or
test
mov
push
das
shlb
jl
cmc
lret
js
pop
and
shlb
inc
sbb
clc
pop
jmp
lahf
test
pop
lret
add
lds
mov
ss
stc
pop
sub
dec
mov
imul
rclb
lods
pop
sti
hlt
dec
pop
jno
sbb
sub
xlat
data16
dec
pop
int3
dec
sub
sub
pop
push
stos
jg
inc
xchg
cmp
in
dec
push
sub
jmp
sbb
pop
inc
jns
sbb
outsb
shrl
stc
push
inc
jmp
xchg
psubusb
ret
lock
add
bound
stos
nop
ret
jge
cltd
sbb
pop
data16
imul
call
xchg
in
inc
push
adc
sub
call
dec
inc
dec
sub
fdivr
add
mov
stos
cmpsb
fsubrp
loope
jne,pn
rcr
dec
xor
push
cmp
mov
mov
sbb
lods
loop
mov
sbb
and
das
nop
xchg
or
xchg
xchg
add
scas
cs
cltd
adc
movq
test
movsl
ret
push
roll
pop
pop
and
out
out
adc
push
iret
iret
outsb
push
ret
scas
dec
xchg
jno
mov
fistps
mov
jp
pop
addb
jno
pushf
lods
daa
mov
pop
cld
test
out
cmp
insb
pop
pop
mov
cs
popf
dec
fisubrl
adc
imul
mov
adc
inc
cld
stos
push
mov
push
stos
in
dec
add
cmp
cmpl
and
push
inc
cmpsl
pop
mov
cmp
adc
jo
jmp
add
je
or
xchg
cmp
inc
ja
adc
jle
lods
icebp
or
xor
lret
movsb
fildll
sbb
jb
andb
dec
mov
pop
call
bound
push
pop
push
push
call
pop
call
mov
insl
inc
xchg
mov
mov
imulb
ljmp
bound
dec
and
sub
push
fstl
les
sub
lret
cmp
mov
in
mov
fdivr
popf
cmp
inc
out
add
cmp
cmp
mov
cmp
pop
jbe
sub
add
sbb
xchg
or
xor
dec
mov
shll
mov
mov
lods
stos
or
or
lds
cmp
mull
cmc
pop
aam
adc
mov
or
adc
mov
movsl
jge
jns
mov
ja
push
flds
sub
mov
pusha
aas
daa
in
mov
lahf
jecxz
fimull
data16
test
and
xchg
sbbb
popa
popf
cmp
or
mov
or
rcrb
enter
xchg
js
stos
mov
cmpxchg
sar
test
ret
dec
fcmovnu
sbb
pop
loope
pushf
adc
sbb
jp
xchg
jmp
ljmp
scas
pusha
xchg
cmp
fs
adc
aad
add
inc
aam
adc
sub
movsb
ret
adcb
hlt
into
shll
cmp
scas
add
scas
mov
sbb
rorl
aas
xchg
shll
mov
addl
mov
out
jo
mov
imul
leave
push
add
fldenv
out
and
pop
cmpsb
dec
and
fld
ljmp
mov
insl
xchg
repz
js
or
mov
xchg
xchg
test
fwait
ret
push
int
cli
cmp
push
test
push
out
scas
add
sub
adc
xchg
sub
shll
arpl
sub
and
jno
or
jns
pushf
shll
mov
clts
jmp
fmul
in
dec
scas
stos
bound
aaa
or
aam
inc
sarl
les
dec
incl
movsb
loopne
dec
mov
jp
mov
ja
hlt
and
js
dec
fstl
dec
mov
mov
pushf
dec
add
xor
mov
stos
mov
enter
cmp
daa
cmpsb
pop
mov
xlat
inc
fisubrl
sbb
scas
mov
inc
dec
mov
scas
pushl
or
jno
xchg
pop
push
cmp
subb
mov
aam
mov
addb
pop
mov
shl
or
mov
test
lcall
sbb
cmp
pop
inc
and
inc
pop
loope
push
jb
cmp
cltd
pop
jnp
pop
lock
fcomi
jp
xchg
jns
cs
iret
hlt
mov
push
ljmp
shlb
adc
ret
in
jno
frstor
mov
decl
dec
pop
test
push
addl
cltd
sub
loop
sub
jle
sbb
mov
push
imul
cmp
dec
scas
xor
inc
inc
scas
aaa
fsts
add
mov
aaa
push
daa
and
fidivrl
cmp
aas
pusha
add
add
into
mov
xlat
aad
xchg
sbb
mov
test
push
mov
out
mov
aas
scas
jbe
sbb
xor
lcall
jle
add
cmpsb
shll
aas
orw
jmp
fnsave
inc
jp
dec
aad
neg
scas
into
sbb
push
inc
xor
shl
add
xor
sbb
push
xchg
xchg
jne
jp
iret
cmp
add
frstor
test
js
iret
cmp
push
aas
into
cwtl
iret
mov
aaa
out
jb
xchg
stos
mov
leave
mov
xor
orb
sti
sti
add
inc
test
jno
in
pop
lret
out
pop
pushf
loopne
jmp
lea
ja
in
sbbb
ds
jae
daa
and
test
iret
mov
in
cmp
inc
sbb
mov
movsl
sub
sbb
xchg
push
push
std
jno
push
lret
push
xchg
fbstp
jno
and
fists
loop
loopne
arpl
cmp
mov
scas
lahf
add
sarl
mov
jmp
std
subb
sahf
xor
faddl
nopl
fisubl
in
xchg
cs
loopne
dec
or
push
cwtl
mov
popf
mov
aaa
fildl
mov
add
sub
repnz
adc
xchg
pop
cmp
aad
pop
outsl
lret
fcomip
test
ss
in
xor
add
pusha
sub
adc
or
repz
je
xchg
xor
sbb
add
fmull
orl
fnstsw
add
jmp
shlb
cld
lret
or
mov
sub
cmp
mov
scas
arpl
add
adc
jle
push
out
pop
mov
roll
push
inc
mov
shr
lea
push
dec
or
jp
aad
adc
sub
mov
mov
rolb
lods
push
cmpsl
push
mov
mov
arpl
cltd
pop
mov
mov
dec
repz
xchg
aas
std
cltd
mov
and
push
mov
pop
rcrb
shrl
xchg
xor
sub
inc
xchg
mov
mov
xor
inc
in
mov
push
data16
jno
xchg
out
fwait
stc
imul
and
dec
stos
push
mov
sbb
stc
mov
mov
popf
jl
mov
outsb
mov
std
xchg
cmp
nop
adc
mov
pop
inc
mov
aam
pop
leave
ror
cwtl
pop
mov
xlat
scas
pop
mov
stc
dec
sub
adc
xchg
sbb
push
lret
pop
lock
in
jae
jmp
sbb
xlat
mov
test
cli
mov
loope
jmp
mov
ljmp
das
cmp
dec
aas
and
push
aad
push
cld
pop
in
lock
and
dec
loope
dec
add
shll
pop
ds
scas
fucomip
stos
pop
pop
mov
lods
mov
sbb
ja
sub
push
inc
jmp
mov
int
mov
or
xchg
mov
fs
in
mov
scas
callw
fbld
repz
jo
fisttpll
mov
pop
jb
aas
and
jns
mov
or
or
stos
js
ds
loop
sub
lahf
xor
push
adc
insl
rcll
lods
pushf
dec
shll
in
outsb
mov
bound
inc
sub
fmul
out
or
hlt
adc
popa
std
inc
and
dec
cmpsl
out
xchg
aam
dec
mov
movl
faddl
nop
pop
clc
mov
cmp
dec
jle
mov
push
sub
test
loop
pop
mov
xor
and
push
cmpsb
popf
xchg
pusha
pop
add
add
stos
adc
cmpb
ja
test
sbb
add
or
loopne
mov
cmp
mov
xchg
cmp
popa
sbb
mov
loop
test
sbbb
mov
cmp
mov
xor
sbb
int3
fwait
mov
xor
and
or
lcall
repz
lods
xchg
push
push
addl
add
into
fwait
xchg
jno
sub
and
js
add
push
ds
daa
mov
cmpsb
ret
loopne
sub
sbb
mov
rcl
cli
popf
xchg
push
cmc
fdivrl
jo
mov
sarl
imul
cmpsl
mov
aad
incl
imul
mov
inc
mov
cmp
or
xchg
iret
out
aam
fs
lcall
mov
xor
std
test
push
lea
popa
inc
cmp
enter
xchg
mov
xor
test
sbb
jbe
ljmp
cmpsl
xchg
inc
xor
test
pop
cmpsl
in
and
or
movsb
adc
mov
sbb
insb
addb
or
and
fbstp
mov
add
sub
cmpsb
stos
movsl
ljmp
fistl
ror
daa
push
sbb
int
rorl
fisubs
cld
jns
sbbb
add
stos
jge
dec
jb
jnp
jecxz
ljmp
inc
add
scas
cwtl
les
lds
sbb
mov
push
mov
mov
das
std
popw
inc
mov
repnz
pushf
and
int
jl
in
push
add
bound
call
dec
test
sub
adcl
outsl
adc
and
pusha
lods
mov
outsl
out
iret
cwtl
xchg
push
arpl
shl
add
xlat
cmp
inc
in
mov
fistpll
push
jle
addl
ss
xchg
mov
pop
aam
cwtl
sub
dec
out
sub
pushf
imul
daa
je
sub
cmp
jmp
jmp
dec
jmp
mov
mov
inc
divl
daa
add
push
ds
out
xchg
mov
popa
stc
ret
push
ja
mov
sarb
in
loope
sahf
clc
outsl
pop
or
sbb
aaa
int3
in
jmp
and
ljmp
dec
fnstcw
mov
mov
lcall
push
je
stos
push
pop
cmp
call
addr16
mov
test
ljmp
fld1
lods
mov
pop
add
push
rcll
push
push
fcmovnu
std
mov
sbb
mov
scas
scas
push
loopne
pop
out
mov
mov
adc
xchg
push
inc
add
jge
icebp
int3
arpl
jp
pop
inc
fadds
xchg
adcl
ja
incl
adc
inc
outsb
dec
fwait
scas
ss
test
cmp
imul
scas
dec
inc
push
push
sbb
sbb
pop
and
ret
test
shll
lods
add
or
mov
dec
data16
imul
int
negl
fimuls
jmp
orb
jbe
mov
push
dec
mov
loopne
jge
or
je
dec
and
pop
lret
stc
mov
mov
pop
imul
sbb
sub
jne
test
adc
shrl
push
dec
adc
add
sbb
pop
jl
enter
add
xchg
lds
inc
sub
mov
lods
pop
mov
test
sub
test
xor
or
or
lock
js
out
xlat
sbb
sub
fmuls
mov
mov
or
xor
push
ljmp
pushf
jge
add
fsubrs
sbb
cli
call
in
xchg
push
fstl
imulb
loopne
out
dec
aam
jb,pn
mov
inc
push
sub
dec
mov
sub
and
das
fs
add
subb
and
out
fdivrl
icebp
pop
dec
pop
scas
test
pop
lcall
xchg
cmp
jno
push
mov
pop
cmpsw
push
push
push
cmpsb
xchg
loop
or
insl
inc
xor
aaa
lcall
fldl
mov
push
pop
call
insl
mov
sbb
ja
int3
push
sub
fwait
cmp
jb
pop
push
rorb
fldl
out
je
push
sbb
stos
mov
mov
pop
mov
push
stos
call
orl
mul
ss
lahf
inc
and
aaa
push
lods
dec
mov
mov
stos
jecxz
mov
jmp
es
fsubs
or
jno
rcll
jno
push
pop
push
loopne
cld
lret
mov
mov
loop
sti
mov
lahf
cmp
pop
incl
sub
add
sbb
and
gs
mov
scas
push
sub
jae
sub
test
lods
imul
enter
and
jb
mov
andb
dec
je
mov
pop
int
ret
je
push
lods
mov
xor
push
cmp
bound
pushf
pop
sti
mov
loopne
ret
xchg
std
out
jno
or
dec
or
pop
inc
lcall
adc
cwtl
rclb
addb
xor
js
dec
cs
ss
aas
leave
mov
mov
daa
mov
cmp
dec
add
aas
add
mov
mov
push
les
or
mov
and
cwtl
data16
test
pop
insb
xchg
xor
or
out
jge
cs
mov
jbe
mov
loope
mov
cmp
xlat
inc
ljmp
insl
mov
dec
dec
mov
push
or
pop
fnsave
add
or
mov
cmp
or
or
js
pop
add
loop
xchg
loope
out
mov
pop
sbb
mov
in
ret
lahf
cmp
jae
pop
fsubrs
rolb
sub
cmp
cmc
mov
test
dec
decl
arpl
mov
cmp
adc
push
inc
adc
repz
dec
popf
and
and
jnp
mov
add
pop
insb
and
xor
pshufw
pop
rol
clc
sub
test
mov
and
scas
addb
pushf
xchg
jmp
add
sbb
and
fwait
add
in
aas
lret
subl
jp
add
jbe
sbb
imull
xor
mov
adc
cmc
repz
sub
nop
into
sub
adc
leave
arpl
lcall
jl
enter
movsl
xlat
mov
or
cs
lods
inc
lahf
je
or
add
mov
data16
test
lods
or
clc
push
xchg
popf
push
adc
mov
sbb
pop
aam
dec
aam
sub
sti
adc
mov
jmp
sub
mov
dec
repnz
test
sahf
push
xor
push
ja
fnsave
jne
hlt
sti
lock
or
or
lock
jmp
enter
inc
aas
inc
sub
push
cltd
fstpl
mov
stc
cmp
aaa
movsl
cwtl
insb
scas
inc
cmp
aaa
repnz
sub
aad
sbb
cltd
inc
insl
mov
gs
dec
lods
mov
xchg
jbe
mov
and
ret
cmc
or
bound
call
push
lock
lcall
popf
sbb
iret
lahf
or
push
and
fidivrs
out
mov
push
sarl
xchg
or
mov
pop
sbb
adc
je
xchg
sbb
push
sub
outsb
adc
rcr
ror
ja
cmp
pushf
int
mov
dec
int3
xor
ds
fidivrl
jl
ret
scas
sub
loopne
add
data16
fmul
fisttpll
jmp
std
bound
scas
push
push
sub
sub
mov
xchg
jg
jle
mov
add
ror
inc
mov
subl
jb
or
pop
pop
adcb
add
pushf
mov
aaa
jp
adc
out
cmp
sub
or
cli
mulb
movsb
or
mov
movsl
or
ljmp
and
fcomps
fsubrs
pop
fnstcw
fmuls
mov
mov
and
cli
xor
fmul
push
fwait
add
nop
pop
pop
inc
sub
cmp
push
push
imul
mov
sub
inc
or
ja
xor
push
xor
addr16
or
pop
imul
adc
sub
inc
popa
movsb
dec
daa
insl
int
movsl
mov
dec
jb
xchg
cli
cltd
rcrl
push
add
mov
pop
repnz
sahf
ret
lahf
jne
push
std
fldenv
push
loope
xchg
stc
clc
in
outsb
sahf
cmpsl
push
fstpt
mov
ja
mov
pop
cmpsb
jg
movsb
pop
out
adc
fldenv
sub
shr
mov
add
push
jnp
inc
or
pop
jno
outsl
mov
nop
lret
dec
adc
les
scas
sbb
call
xchg
std
mov
adc
js
test
mov
lahf
xchg
nop
mov
sbb
jge
dec
andl
insl
hlt
test
xchg
sub
pop
test
scas
movsb
test
inc
push
jp
sbb
loopne
addl
dec
mov
lcall
sub
or
xchg
sub
jle
repz
addr16
outsb
dec
push
gs
push
repnz
push
shl
fs
adc
pop
std
das
aaa
imulb
inc
fisubs
jp
inc
and
andl
into
shr
fldenv
xor
push
add
mov
jb
insb
sbb
xchg
iret
cs
jbe
movsl
mov
push
jns
cli
fisttpll
jecxz
xor
jb,pn
sahf
fbstp
push
outsl
lods
push
jns
adc
xchg
hlt
in
push
fnstenv
dec
push
mov
push
mov
ret
fsubp
in
das
xchg
xchg
mov
lds
stos
jle
xor
mov
sub
add
sti
push
jno
fbld
in
insb
fdivrl
addr16
pusha
and
inc
mov
mov
lods
add
add
test
ret
fisubs
jb
inc
mov
popf
aaa
add
test
pop
cs
dec
mov
ss
stos
in
cli
fsubrl
daa
outsl
or
or
jge
inc
sti
lods
pop
aas
jnp
psrlw
or
roll
cs
sub
mov
in
cmp
sub
fs
les
inc
dec
inc
push
pshufw
and
inc
inc
xorl
dec
in
xchg
int
aad
push
sbb
jb
xchg
xor
cmp
ja
inc
pushf
jle
push
int3
pop
push
out
cwtl
mov
dec
daa
xchg
push
and
xchg
jne,pn
mov
divl
or
cmpsb
push
icebp
test
mov
jmpw
aas
sub
scas
in
add
fidivs
fldcw
ret
ror
in
and
push
out
je
mov
aas
cmp
and
push
add
shll
iret
lret
mov
lret
js
or
sbb
mov
push
rcrl
fwait
mov
mov
addr16
lods
xor
es
loopne
push
cmp
loop
rcrl
add
xor
cli
sarb
lret
jmp
lret
mov
and
cltd
outsb
dec
bound
je
push
jmp
arpl
xchg
sbb
sbbb
push
loop
pop
mov
into
add
aam
cmp
jae
cmc
mov
daa
sub
fistpll
mov
std
mov
inc
test
js
rclb
std
dec
push
loopne
mov
das
out
mov
pop
test
add
ljmp
xor
leave
or
adc
les
flds
andb
sbb
jge
fistps
add
sbb
adc
je
inc
adc
cmc
gs
jg
lret
cmp
cmp
js
adc
xlat
mov
stos
add
push
lock
xchg
or
mov
or
mov
iret
or
data16
ficoms
push
test
test
inc
add
sbb
jbe
inc
inc
mov
or
sub
pop
or
je
xor
xchg
inc
and
jne
jo
addr16
aad
xlat
pop
dec
pop
ficomps
xor
leave
add
pop
dec
call
jg
push
sub
push
or
je
push
xorb
js
xor
outsl
mov
add
test
push
popf
adcl
xor
fwait
push
and
movsl
and
xchg
xchg
jle
daa
stos
mov
sbbb
mov
mov
jle
sbb
shlb
sbb
test
push
dec
bound
fwait
cs
push
inc
jp
push
jo
lcall
inc
or
xor
sbb
jecxz
in
sbb
mov
sbb
ds
in
jmp
cmp
ror
adc
sub
addb
add
leave
add
arpl
movsb
pop
push
push
lods
rolb
mov
push
xor
pop
je
insb
jo
ljmp
pop
stos
mov
scas
cmp
lock
adc
mov
iret
das
add
pop
push
mov
fdiv
cmp
fwait
xchg
fldenv
and
bound
pusha
mov
enter
dec
ljmp
push
in
jge
mov
out
xor
or
ja
jb
out
or
jbe
out
stc
fisubl
push
in
inc
xchg
outsl
dec
mov
jp
sub
cmp
aas
mov
dec
aad
pushf
push
shlb
pop
pop
jg
cld
inc
dec
xchg
and
adc
mov
mov
mov
pop
sbb
out
ror
sub
sbb
outsl
rcrb
icebp
sarl
into
cmpsl
fs
inc
rcll
into
fwait
sbb
test
xchg
sub
pop
int3
cld
stos
imul
loope
les
xlat
test
aad
pop
or
aam
stos
pop
stos
xor
sbb
or
ljmp
pushl
testb
lahf
data16
dec
ds
jno
dec
adc
mov
scas
mov
inc
ss
repz
out
cmp
cmpb
fcoml
in
ja
mov
xchg
daa
pushf
pop
fs
dec
test
fs
sub
decb
sbb
leave
push
rcrl
fwait
cmp
scas
dec
jo
jge
xchg
sub
test
push
orl
testl
aaa
aas
popa
inc
sbb
adc
icebp
dec
rorb
sub
mov
mov
jge
gs
in
push
push
cmp
push
sub
call
popa
jnp
mov
and
pop
ds
dec
imul
shll
imul
push
adc
bound
cmp
jne
jle
cmp
or
push
mov
sub
adcl
aaa
sarb
test
stc
mov
xchg
push
fucomip
add
push
and
mov
repz
sub
xor
push
lea
xchg
pop
out
aam
inc
mov
lcall
push
inc
pop
jmp
leavew
test
hlt
in
mov
jecxz
mov
mov
sbb
es
xchg
clc
mov
xchg
sbb
and
das
dec
sub
jg
or
shlb
mov
insl
push
mov
cld
mov
push
mov
mov
fimull
in
inc
or
dec
xchg
cli
scas
push
push
xor
sub
inc
sahf
fadds
loopne
es
mov
inc
add
add
sbb
mov
loop
lods
inc
mov
inc
and
mov
adc
sbb
es
push
jmp
jp
jns
ficompl
stc
xchg
xor
test
add
iret
jge,pn
call
lcall
or
push
dec
xchg
add
sbb
mov
sbb
push
out
mov
pop
stos
dec
imul
push
add
sbb
mov
xor
mov
daa
jbe
pop
add
lods
xor
cmp
addl
lods
loope
adc
gs
out
dec
fistl
jle
mov
xor
sbb
lret
inc
mov
mov
orl
inc
popf
xchg
dec
repnz
in
mov
pop
adc
and
dec
popa
mov
cld
dec
out
clc
push
xorb
cmc
sbb
mov
xchg
jge
or
mov
lds
dec
rcrl
inc
in
sub
inc
shlb
das
dec
cmp
daa
lahf
idivl
or
xchg
aaa
cmc
imul
pop
lods
adc
mov
add
mov
out
sarl
dec
cmp
jg
int3
jns
pop
and
mov
push
test
jno
or
xchg
lcall
lahf
jmp
shl
jmp
mov
lods
les
mov
stos
mov
sub
adc
cmpsl
jge
dec
sbb
aas
sbb
shll
sahf
xor
and
cwtl
mov
into
arpl
mov
jns
mov
xchg
shlb
lret
iret
test
scas
mov
ss
xchg
sti
lcall
push
outsb
insl
sbb
and
mov
mov
outsb
icebp
lock
mov
jnp
inc
xchg
ljmp
cwtl
movsb
neg
mov
and
adc
fwait
jle
xor
shrb
jl
pop
loop
cmc
stos
rcll
cmpsl
dec
je
insl
jns
popa
or
dec
xchg
sbb
mov
mov
stos
xor
lahf
cwtl
sti
popa
enter
inc
sbb
nop
add
mov
and
add
call
push
jnp
cli
mov
lock
xchg
outsl
pop
mov
sbb
mov
mov
jo
and
inc
add
ss
hlt
fstl
repz
pop
jle
test
add
push
scas
out
push
xor
dec
add
in
notl
mov
neg
stos
js
mov
mov
push
jns
aaa
xchg
stos
insb
add
xchg
mov
pop
or
adc
dec
push
mov
rcll
add
fstpt
jb
out
sub
sub
xchg
gs
push
jge
ljmp
xorb
cmpsb
lea
cmp
mov
psrad
ss
into
loop
fiadds
or
imul
lds
or
mov
jecxz
xor
push
lods
adc
pop
ret
xlat
loope
push
mov
lcall
out
fldenv
pop
lcall
jle
popa
in
add
movsb
xor
inc
jne
mov
out
mov
js
jae
push
nop
in
jb
or
je
mov
pop
push
push
xchg
je
adc
in
fnstenv
incl
dec
push
cltd
dec
mov
es
shrl
das
cmpsl
push
inc
cmc
ja
mov
daa
cwtl
add
cmc
dec
pusha
pop
in
add
ds
xor
cmc
mov
and
shll
xchg
jecxz
js
xlat
fsub
mov
nop
pop
mov
sarb
stos
and
cmpsl
aas
xor
mov
sbb
mov
add
sbb
lret
mov
add
mov
add
mov
aad
jb
imul
rorl
mov
aaa
add
push
fsubrs
loop
jo
pushf
popf
cmp
out
sbb
inc
xlat
clc
fwait
pop
xchg
js
loopne
sub
bound
mov
pop
ret
sbb
daa
sbb
and
in
inc
pushl
daa
adc
and
sti
rclb
dec
fs
inc
inc
mov
jl
mov
call
cmpsb
jae
pop
add
imul
jl
sub
pop
sub
pop
imul
xchg
dec
cmpsb
imul
sub
or
sub
shr
popa
loop
pop
out
aam
flds
pop
xchg
sbb
movsb
repz
hlt
and
movsl
int
xchg
ljmp
mov
xchg
xchg
jne
stc
lahf
cwtl
insb
gs
pop
rcrl
xchg
fstl
xor
leave
jp
lahf
leave
mov
adc
insl
rcrl
adc
push
mov
daa
rcrl
or
add
ret
sub
pop
es
pop
inc
sbb
xlat
sub
cmc
in
sbb
mov
jno
sar
jb
lock
xchg
xor
jbe
es
pop
scas
jl
pop
pushf
push
inc
xor
lahf
and
je
or
or
jb
or
push
mov
repz
loopne
and
movsb
cmp
fsubrs
lods
lea
imul
dec
push
or
mov
cwtl
dec
mov
mul
fcomi
sub
cmc
adc
out
dec
pop
cmpl
loope
and
xchg
add
nop
fs
subb
sbb
jnp
cli
jl
js
stos
jne
sub
xchg
push
popa
xchg
out
loop
pop
imul
cmp
mov
ret
pop
aaa
push
or
cmp
pop
inc
mov
hlt
pop
xor
jecxz,pt
push
mov
inc
lods
test
sub
dec
loopne
out
shr
xchg
cmp
pop
jne
push
stos
negl
aam
jp
hlt
loopne
in
lret
xor
imul
adc
hlt
aas
jb
or
je
jne
and
aam
sub
imul
mov
into
jmp
sub
data16
add
xorl
enter
stc
jg
dec
notl
or
ss
push
addb
add
in
mov
pop
js
dec
movsl
push
mov
cmpsb
pop
mov
fs
sahf
add
scas
sbb
and
divb
sub
lret
int
xchg
jb
push
pop
pop
lcall
cmp
jo
sbb
and
andb
scas
in
sub
cmp
clc
push
lret
stos
adc
mov
pusha
js
sti
int3
fwait
ljmp
call
sahf
repnz
fwait
inc
lods
push
mov
and
and
push
xchg
cmpsl
sub
mov
pop
mov
in
data16
fistps
mov
pop
dec
hlt
pushf
popa
and
aad
dec
lods
int3
xchg
push
mov
int
pop
adc
aam
jnp
mov
out
or
xchg
push
cmp
xchg
and
fsubrl
mov
dec
mov
push
jg
cmovp
add
std
sbb
push
xchg
xor
lcall
push
xlat
pop
cld
push
cmp
and
and
test
pushf
lods
and
jle
subl
dec
lahf
addr16
sub
popa
sbb
pop
mov
jmp
or
mov
jg
fistpll
addb
out
in
lods
outsl
add
xlat
aam
test
in
jmp
add
in
cmp
push
jns
xor
outsl
mov
sub
cld
xchg
xor
daa
lods
out
cmp
dec
xchg
add
cmp
ss
jo
sbb
stos
pop
mov
cmp
lods
mov
outsb
pop
jg
mov
xchg
inc
add
sti
into
jp
popl
popf
push
pop
jecxz
jg
lods
cmpsl
push
mov
fmul
popf
leave
fildll
mov
xchg
mov
test
mov
jg
outsl
pop
popf
enter
loope
sbb
repz
push
jnp
repnz
call
out
out
sub
push
cs
inc
push
jbe
sub
push
jae
scas
in
xchg
jl
inc
xchg
cmp
mov
jg
add
loope
lret
out
adc
call
xchg
fs
pusha
repz
fcompl
pusha
jne
popa
cmp
jp
mov
pop
fildll
loope
je
sbb
dec
ss
adc
add
gs
lds
lcall
and
sub
aas
test
in
imul
mov
or
cmc
inc
aaa
inc
cmpb
cmpsl
addr16
adc
pop
mov
pop
pop
icebp
test
mov
addr16
mov
sbb
jo
sub
xor
or
pop
adc
cmp
pushf
xchg
xor
adc
fnstcw
adc
mov
arpl
mov
bound
add
push
shrb
jne
iret
scas
in
hlt
adc
test
arpl
not
loopne
mov
clc
mov
mov
sbb
push
fstpl
xor
dec
shll
mov
cmpsl
testb
mov
mov
push
call
xor
mov
push
push
cmc
adc
jo
xor
or
sbb
pusha
sub
addb
pminsw
jge
cli
cmp
insl
sbb
leave
sub
jp
mov
lret
fwait
push
movsb
in
xor
cltd
push
sbb
pop
sarb
mov
xor
popa
pop
hlt
fcomi
out
pop
cmpl
xor
xlat
inc
dec
pop
jle
mov
xchg
jno
pop
dec
dec
inc
push
mov
mov
push
mov
flds
sbb
push
or
arpl
je
and
mov
xchg
mov
xchg
sbb
sub
mov
movsb
xor
sub
adc
out
mov
cltd
dec
jno
std
ret
jnp
and
je
xchg
mov
cmovo
dec
jl
add
lds
cmpsl
xor
sahf
inc
in
add
xchg
int
sti
les
ds
inc
inc
cmpl
shll
xchg
jb
xor
test
mov
lock
mov
xchg
cmp
out
cwtl
test
mov
mov
jae
jecxz
sub
ja
or
movsb
jge
cmp
push
mov
jp
jp
jns
jg
lret
inc
jg
roll
pop
push
mov
in
shlb
and
jo
jne
aad
mov
mov
sahf
dec
sbb
pop
outsl
cmp
pop
aad
hlt
movsl
insl
lds
lahf
fisttpll
dec
mov
aad
inc
xor
inc
fldenv
sti
mov
push
stos
pop
fsubs
inc
jo
lods
and
les
xchg
cli
sahf
jo
in
jge
mov
xchg
insb
jbe
out
jp
pop
mov
fldenv
out
mov
mov
cmp
aaa
jns
mov
filds
jbe
in
cs
test
cmp
mov
jbe
dec
mov
push
out
insl
movsl
cltd
loopne
dec
jae
mov
mov
sbb
in
push
pop
xchg
sbb
sub
nop
jb
adc
lods
and
jmp
lret
or
push
or
inc
mov
mov
sub
add
cmpsl
and
cmpl
mov
call
aaa
jo
cmp
jecxz
xchg
lahf
lret
dec
andl
pop
call
mov
lds
testl
mov
test
cmc
or
and
jbe
jl
add
std
lock
and
test
mov
mov
sub
and
ds
stc
mov
data16
mov
mov
stc
pop
stos
sub
xchg
iret
les
fnsave
scas
ja
mov
test
sub
gs
sub
mov
jnp
sub
cmpsb
fiadds
mov
sub
outsb
dec
push
pop
inc
in
add
imul
and
lea
dec
jae
rorl
mov
imul
std
or
jge
cltd
in
mov
test
or
and
jne
xchg
adc
jnp
leave
out
adc
jecxz
sbb
inc
int
xchg
andl
xchg
cmp
adc
push
sub
mov
push
cmc
mov
test
push
lds
pop
add
cmp
sbb
movsb
and
ljmp
xor
mov
push
mov
fdiv
add
arpl
dec
push
add
ret
push
loopne
pop
dec
sub
sbb
shr
xchg
iret
fwait
rolb
dec
ljmp
adc
cmpsb
mul
or
out
xchg
add
inc
ljmp
push
insb
dec
imul
jl
lret
add
mov
aaa
xchg
pushf
lcall
outsb
daa
inc
inc
lret
sub
mov
or
or
mov
int
hlt
and
aaa
popa
lds
sbb
int3
lahf
mov
dec
add
push
lcall
pusha
aas
mov
lea
pop
mov
cli
js
mov
out
pop
fnstcw
xor
dec
jge
packssdw
shrb
or
push
insl
call
or
in
dec
js
into
jg
call
add
out
inc
ja
xor
mov
inc
xchg
in
inc
in
lods
les
aad
loope
imulb
push
out
add
notl
test
pop
lds
dec
and
push
push
ret
sub
mov
mov
sahf
dec
inc
icebp
inc
ss
xchg
push
aas
push
mov
adc
cli
jge
jae
cld
addb
xor
dec
out
repz
push
mov
mov
sbb
mov
outsb
shr
popl
sar
fdivl
std
jnp
pop
scas
jecxz
out
add
jb
pop
and
mov
inc
sbb
sub
or
mov
into
fists
and
outsl
pop
fbld
lret
xchg
add
idivb
jmp
test
xlat
cmpb
add
mov
mov
jl
js
pusha
ficompl
iret
cmp
das
cmc
push
jns
ret
fisttpl
cmp
jbe
fsubp
adc
mov
dec
dec
cmp
mov
mov
inc
sbb
or
lret
loop
insb
or
push
xor
jno
sti
aas
xchg
negl
loope
fcomp
jg
ja
add
mov
push
pop
add
faddl
int3
popa
loope
xchg
out
js
stos
enter
push
mov
push
or
jecxz
and
or
clc
sbb
sarb
mov
mov
stos
test
jp
lods
call
mov
mov
stos
dec
sbb
mov
push
dec
or
imul
dec
xchg
adc
cmp
fildll
jae
cmp
or
jo
es
imul
loope
or
adc
stos
sbb
add
and
in
enter
or
cmc
pop
xor
sub
inc
js
fsubl
or
fstps
cltd
sbb
inc
dec
clc
jne
pop
decb
inc
loope
inc
sbb
vucomiss
push
ljmp
es
enter
and
jns
movsb
dec
out
scas
daa
cld
stc
cwtl
imul
mov
push
std
stos
insl
in
jns
dec
xor
bound
xor
xchg
mov
adc
xor
shl
loop
mov
push
imul
sbb
shll
fnstenv
shrb
fidivs
js
pushf
sub
negl
out
inc
push
xchg
popf
jo
daa
jo
add
inc
mov
roll
stc
mov
daa
push
ds
push
jmp
push
bound
xor
lods
scas
pop
loopne
jbe
jle
in
icebp
push
pusha
push
jns
stos
mov
sti
xor
fucom
mov
xchg
cmpsl
bound
out
frstor
daa
dec
mull
les
stc
mov
push
mov
repz
pop
fistps
adc
lret
daa
or
fisttpll
ja
jae
repz
xchg
push
inc
mov
inc
mov
and
imul
lock
fstl
adc
fsubs
inc
ret
inc
leave
movsl
lahf
add
dec
mov
imul
out
sbb
scas
fdiv
push
pop
mov
fsubl
pop
sub
xor
sub
enter
inc
rclb
jge
sub
cmpb
pop
icebp
jae
inc
lret
js
add
leave
mov
in
push
push
sub
stc
push
lret
dec
loope
cmp
xchg
pop
mov
sbb
repz
inc
cltd
dec
pop
sub
jg
inc
pop
cmpsl
cmc
stos
out
leave
arpl
test
les
rolb
pop
popa
cmpsl
ja
or
pop
mov
ret
rorl
sbb
dec
and
jb
push
pushf
push
aaa
js
sub
push
inc
ficoms
movsl
subb
and
mov
rcrl
pop
rcll
mov
cmp
xchg
icebp
rcll
add
push
xchg
cmpsb
jnp
push
jmp
push
cmp
adc
hlt
data16
or
lea
movsb
sub
or
je
or
popf
in
lea
cld
xor
xchg
and
cwtl
pop
pop
pop
insl
xchg
xchg
lret
add
std
sbb
lods
and
cld
adc
sahf
test
fcoml
jl
xor
sbb
scas
lret
repnz
out
dec
testb
cmpsb
int3
xor
cltd
adc
pop
incl
cmpsl
addr16
adc
rcrl
push
lcall
cmp
fadd
jmp
xor
jle
bound
push
xor
repz
popa
cmp
push
mov
lea
dec
aam
add
jp
es
movsb
mov
int3
xchg
xor
pop
xchg
push
cwtl
lds
call
dec
push
popf
pop
ret
cmp
out
adc
add
mov
arpl
or
mov
dec
popa
cltd
add
out
gs
push
scas
int
and
adcl
ret
scas
or
dec
loopne
nop
cmp
ror
popa
shl
dec
or
lods
fidivl
out
or
out
add
in
sub
shlb
rorb
xchg
cmp
subb
ja
pop
daa
ret
stos
stos
and
add
fsubrs
mov
adc
push
add
sbb
xchg
and
lock
pop
popf
lock
mov
jbe
inc
scas
xchg
lea
aas
out
xchg
sub
add
mov
pushf
xor
movsl
jns
push
mov
testb
inc
ds
imul
mov
scas
mov
cwtl
popf
roll
jl
mov
adc
in
lea
pop
xchg
xchg
dec
jp
cmp
scas
push
ficompl
xor
xor
mov
iret
int3
push
and
sbb
mov
lcall
xor
movsl
mov
cmp
xchg
cmc
mov
aas
mov
cmp
push
or
and
add
sbb
fs
mov
mov
ret
bound
jecxz
sbb
cld
add
repz
cwtl
mov
jmp
adc
rcll
xchg
scas
xor
xchg
mov
stc
inc
lret
aam
push
adc
mov
push
cmp
iret
movsb
popa
lahf
or
inc
mov
cmc
je
xor
icebp
mov
ret
mov
iret
mov
test
push
sbb
dec
jle
rcl
aas
paddw
mov
sub
int
stos
xchg
xchg
hlt
pop
pop
and
imul
add
cmpsl
adc
add
mov
inc
xor
inc
stos
mull
dec
mov
jae
pop
test
cs
mov
push
je
xchg
cltd
inc
fs
sbb
push
inc
xchg
ds
iret
and
call
lods
jo
in
add
in
sbb
xchg
mull
sbb
xchg
in
push
repnz
pop
xor
jmp
test
outsl
ret
and
fcmovnb
mov
frstor
inc
clc
iret
and
out
rorb
pop
decl
push
testb
dec
xchg
dec
cli
int3
dec
push
sub
subl
out
push
imul
pop
sub
push
cwtl
mov
sub
outsb
cltd
jg
sub
push
das
or
mov
scas
in
jl
in
and
jbe
cmp
add
sbb
jge
lret
xchg
jae
xor
adc
push
sbb
lret
test
dec
push
xor
in
sub
lds
sbb
in
cmc
lcall
push
pushf
adc
popf
imull
dec
jns
xchg
or
jmp
in
ljmp
insl
jg
data16
and
add
pop
sbb
adc
in
cmp
daa
mov
xor
iret
and
adc
test
shr
cltd
unpcklps
jno
rorb
sub
push
cmp
jp
out
shrl
lea
loope
arpl
inc
push
es
push
fsts
fcmovb
out
ror
sub
push
loop
fwait
int
push
sbb
adc
cld
inc
sahf
clc
dec
adc
xchg
imul
test
insl
insl
pop
fdivl
andl
push
xor
fsubrl
iret
shl
or
aad
cltd
add
sbb
lods
int3
aaa
push
out
mov
cmp
mov
jp
lret
hlt
jne
xor
cmp
xor
cld
fisubrl
mov
outsl
jecxz
je
test
adc
add
ss
mov
out
stos
ffree
ja
outsb
ljmp
and
dec
test
iret
or
es
aas
push
inc
subl
add
sub
or
scas
jno
inc
jmp
mov
stos
ret
dec
xor
lcall
push
jg
pusha
test
mov
loope
shll
mov
inc
add
rolb
ds
ret
mov
jo
lahf
xchg
mov
fildll
lods
das
js
insl
lahf
jmp
adc
push
xorb
push
and
ljmp
jns
insb
mov
inc
std
pop
orb
ds
subb
dec
je
or
aad
sub
pop
imul
paddb
es
jne
les
aam
daa
cmpsl
dec
loop
cs
sub
insb
mov
orl
dec
inc
add
sahf
mov
sbbb
sbb
repnz
enter
xlat
repnz
insb
rcll
or
mov
call
nop
inc
ja
xchg
es
enter
cwtl
cmp
pop
push
imul
es
sub
lcall
dec
mov
lcall
scas
cmp
fistpl
jp
ljmp
sbb
or
clc
push
in
ret
out
jb
xchg
mov
pop
inc
sbb
or
or
pop
popa
cwtl
fwait
mov
jne
loop
test
cltd
sbb
pop
jo
or
xlat
fs
das
xor
or
or
enter
in
push
add
scas
fiadds
scas
in
mov
test
and
and
pop
cmp
out
sub
out
jp
js
add
test
stc
mov
in
and
mov
js
jmp
in
or
je
pop
pop
fucomip
leave
and
sbb
jl
sbb
xchg
scas
mov
pop
jg
addr16
out
loop
cmc
sub
popf
test
jmp
mov
loopne
iret
aaa
xchg
femms
sbb
fwait
push
jge
fsub
sub
cmp
and
negb
incb
call
pushf
mov
ret
stos
sbb
cmpsb
pop
xchg
jg
lret
jg
mov
mov
shll
cmp
test
and
cli
in
outsb
mov
pop
add
push
sub
mov
ljmp
nop
jb
jle
cwtl
cmpsl
cmpsb
loope
insb
add
jecxz
xlat
mov
dec
push
sbb
in
insl
mov
loop
push
add
and
sbb
xor
icebp
stos
ss
sahf
mov
cmp
push
and
push
mov
aam
lock
loope
test
inc
sub
ds
and
loopne
cmp
add
mov
add
adc
or
ss
inc
sti
and
and
and
scas
xor
lea
jge
cmp
pop
adc
fists
push
rorb
lret
in
cli
inc
clc
inc
fisttpl
mov
fdivrl
cmp
or
add
ret
push
sub
sub
mov
xchg
aas
sbb
movsl
fsubp
shl
stos
addr16
jnp,pn
pop
and
scas
jp
cmp
and
hlt
push
xor
daa
or
mov
femms
shrl
dec
add
sahf
in
mov
mov
dec
sbb
incl
aas
mov
lahf
sub
imul
hlt
cmp
out
data16
ret
jo
loop
mov
ret
arpl
sub
mov
fmul
dec
push
push
imul
sbb
sti
imul
cld
daa
xor
outsl
mov
adc
xchg
addb
cltd
lahf
lret
lret
cli
pusha
jmp
push
cmp
mov
sbb
and
inc
cmp
je
adcb
jbe
inc
call
xor
mov
mov
and
sbb
leave
cmp
sub
inc
sbb
or
pop
xchg
out
fidivrl
ret
add
clc
pop
and
cmpl
fisubrl
adc
cmp
add
adc
fdivp
mov
scas
or
out
pop
out
pop
test
lods
or
add
mov
clc
dec
sub
cli
push
iret
add
mov
sbb
incl
jns
add
pop
int3
lcall
inc
mov
clc
lea
into
nop
sbb
insl
or
dec
mov
mov
pop
push
push
pop
inc
dec
jo
add
adc
cmp
mov
out
outsl
rcrl
pop
dec
subb
pushf
fisttpl
test
mov
aas
jb
sub
and
push
pop
mulb
jnp
cmpsl
iret
lret
daa
and
dec
gs
subb
rclb
jno
shlb
xor
mov
jge
rcrb
mov
xorb
stos
int
inc
cmp
cmp
bound
movsl
cmp
and
xchg
subl
insl
ret
xchg
dec
or
and
insl
fisubs
adc
loop
and
and
ljmp
inc
fcomps
push
xchg
add
dec
and
mov
fcompl
add
inc
dec
push
int
add
mov
sub
xlat
push
imul
cltd
into
push
adc
outsb
cmp
fwait
lea
sbb
icebp
loopne
fstl
test
ret
repnz
cltd
psllq
xchg
mov
push
pop
or
fadd
pop
gs
mov
dec
int
dec
xchg
lcall
or
pop
in
adc
out
testl
inc
outsl
and
out
nop
outsb
adc
ficoml
out
aaa
dec
sarl
add
fadds
les
adc
adc
cmp
mov
mov
and
mov
stos
rclb
sti
mov
cmp
shr
xchg
bound
add
mov
out
aas
xchg
int3
pop
or
outsb
sahf
cwtl
addr16
jno
cwtl
mov
adc
xor
inc
out
sub
mov
push
and
fnstenv
and
pusha
or
shll
add
adc
enter
fiaddl
out
filds
js
lret
int3
push
sub
pop
aad
inc
loopne
aas
cmp
push
sub
mov
lock
mov
push
inc
add
cmp
jle
xor
outsl
iret
push
das
inc
sahf
mov
xlat
and
mov
fsubp
dec
fnsave
add
aad
js
push
xchg
mov
stos
inc
ljmp
mov
mov
jno
aaa
xor
sahf
jle
add
sahf
in
lret
je
notl
xor
insl
pop
fdivr
inc
inc
pop
sbb
dec
jo
pop
pop
scas
andb
dec
addr16
call
jo
and
fstpt
and
loop
pop
loop
insb
sbb
ret
stos
test
fwait
js
int
jnp
add
or
push
push
sti
repnz
lret
shrl
jb
cmp
pushf
or
js
dec
movsb
je
mov
sub
jb
cmpsb
stos
addr16
ficoml
adc
lahf
add
xor
cmp
sub
xchg
inc
or
stc
xchg
inc
xchg
insl
cmp
sub
fs
ds
push
ss
js
aaa
mov
jnp
or
fisubrl
dec
adc
cmp
push
aam
jmp
xchg
dec
dec
lahf
cmp
out
sbb
mov
std
add
push
outsl
loope
lcall
sub
ret
adc
leave
mov
or
std
adc
xchg
lahf
or
daa
sbb
jae
adc
adc
cmpsb
shlb
push
dec
mov
popa
and
push
mov
adc
add
pop
mov
insl
clc
sarl
lds
push
out
scas
gs
pop
jle
imul
dec
cltd
lret
dec
xchg
inc
jmp
mov
jl
pop
push
in
mov
lcall
lods
and
loopne
inc
inc
xchg
ds
ret
sub
jmp
out
lcall
dec
pop
in
scas
orl
mov
dec
sbb
cmp
dec
mov
dec
inc
pop
mov
adc
xchg
mov
repnz
cmp
int
fs
cmp
jbe
mov
cmpsl
xor
fiaddl
sbb
sbb
jns
out
loope
ja
cmp
cmp
dec
sbb
nop
fs
mov
jge
xchg
mov
nop
out
cltd
xor
pop
jmp
push
xchg
push
dec
mov
adc
popf
or
loop
jnp
call
rorb
xchg
test
jecxz
sarl
mov
sbb
jns
adcl
or
pop
mov
imul
cs
xchg
and
outsl
pop
pushf
lds
xchg
mov
mov
xor
cwtl
ljmp
inc
out
pop
pushf
sub
out
push
dec
aaa
mov
dec
or
repnz
incb
arpl
orl
mov
loope
insb
je
sbb
or
outsb
adc
pop
xchg
add
lods
repz
rcll
add
loope
decl
xor
repnz
aad
loope
and
loope
jo
jg
lock
popf
mov
ds
adc
dec
mov
mov
jg
xlat
mov
and
fs
mov
nop
mov
loop
sub
test
cmp
ss
adc
je
push
data16
xchg
xchg
in
outsl
push
iret
repnz
sbb
imul
cmpsb
push
jne
adc
cmc
sub
idivl
sar
pop
sub
cmpsl
test
pop
or
scas
mov
rorl
in
adc
pusha
pop
push
fcoms
popf
popf
add
add
out
pop
rolb
sbb
insl
out
sar
out
and
pop
rcrb
stos
test
inc
xor
ret
push
mov
cmp
gs
jecxz
xor
mov
push
and
xchg
adc
xchg
xchg
decl
mov
imul
push
push
adc
ljmp
cmp
fcompl
in
addr16
xor
mov
and
outsl
orl
in
xchg
dec
scas
sbb
repnz
cmpsl
and
mov
add
jmp
ret
jle
int
repnz
es
sub
xchg
cmp
repnz
or
cli
pusha
sbb
xor
stos
mov
mov
jae
mov
sbb
insb
cmp
jmp
and
loopne
jg
jb
inc
add
shll
lods
mov
fnstsw
lea
mov
and
mov
xchg
sub
add
iret
std
sub
daa
dec
cmp
pop
and
je
jno
xor
push
push
popf
fldl
lock
mov
push
lret
and
inc
cmpsb
sbb
ja
pop
mov
mov
xchg
xor
shll
inc
xor
out
shl
xor
mov
push
pop
pushf
repnz
push
pop
push
and
testl
stc
test
adc
cs
sar
xor
cmp
ds
hlt
imul
push
leave
lods
lret
data16
cs
out
ret
dec
call
adc
mulb
fcomps
jnp
cli
add
out
and
scas
shrl
loop
loope
pop
or
fistpl
dec
js
faddp
push
or
sub
nop
rcrb
push
call
scas
shll
sbb
mov
sub
sbb
pop
add
push
pushl
pushf
jnp
inc
adc
push
arpl
insl
mov
std
clc
fisubs
lea
data16
roll
shrl
shlb
or
push
lcall
hlt
pop
mov
pop
adc
jne
mov
mov
dec
daa
mov
or
push
pop
sbbl
push
es
sbb
sub
out
notl
gs
ss
lock
ror
jbe
sub
dec
call
and
xchg
adc
mov
movl
shlb
lret
or
sub
push
push
pushw
bound
lods
dec
add
xor
inc
xchg
mov
in
or
adc
sub
shll
add
pop
subl
pop
gs
daa
mov
fcoml
or
jns
ret
mov
jo
out
and
pop
inc
aad
pop
xor
mov
imul
out
dec
push
push
je
inc
mov
and
pop
cltd
xchg
stos
scas
jg
sub
out
cs
aas
xchg
pop
add
in
dec
xor
stc
xchg
inc
mov
leave
pxor
jle
stos
dec
lret
or
in
push
sbb
jae
lea
push
fwait
ljmp
test
jp
dec
and
xor
inc
cmp
outsl
cmc
push
fstl
or
jg
arpl
cs
in
jle
xchg
idivb
nop
push
cmp
jmp
mov
mov
inc
mov
jle
mov
xor
mov
sbb
fsubp
cmp
push
clc
mov
sahf
sub
cmpsl
pop
in
inc
mov
call
dec
push
adc
fistpl
sub
add
xchg
sub
mov
loop
jmp
dec
adc
lods
int3
cmp
and
fldcw
out
rcrb
add
sbb
xchg
jnp
stc
or
mov
out
mov
lds
pop
mov
add
lret
mov
inc
stos
in
dec
clc
popf
dec
pop
mov
xor
push
pop
popf
bound
push
int
dec
push
sub
int3
push
xorl
adc
mov
stos
sarl
mov
cmp
or
xchg
loope
inc
xor
mov
jp
and
jecxz
test
iret
xlat
out
fdivr
xchg
js
lods
aad
sub
pop
sub
add
stc
imul
ss
in
fcompl
std
imul
mov
xchg
dec
mov
notb
push
and
fdivl
in
sub
xchg
jns
or
iret
mov
rorb
xchg
mov
xchg
lret
and
push
pop
aaa
xchg
dec
dec
sub
ficomps
add
sub
leave
cmp
mov
mov
iret
lahf
lret
and
inc
ret
mov
fimull
jno
mov
push
xor
pop
imul
cmp
mov
cmp
lcallw
adc
adc
or
dec
ret
inc
or
and
movb
pop
ret
xchg
or
sbb
pop
sub
xor
ret
ret
paddusw
xor
mov
cmp
popa
fstp
dec
sbb
mov
aaa
cltd
jne
xchg
or
enter
or
rorb
imul
bound
out
lods
sub
jp
sbb
aad
ret
dec
lock
xchg
lcall
sub
fnclex
add
ret
push
and
scas
and
xor
out
add
sub
jle
hlt
stos
mov
push
mov
pop
add
jo
inc
shl
add
pop
frstor
pop
in
icebp
fcmovnu
in
cmp
xchg
add
fsubrp
sub
sahf
xchg
es
and
pop
and
or
cmp
or
mov
adc
mov
inc
mov
or
sbbb
xchg
mov
xor
stos
adc
jo
addr16
lcall
mov
cmp
xor
pop
pop
scas
lea
int3
enter
cmpb
sub
jecxz
shll
xchg
iret
add
mov
dec
aas
mov
mov
out
hlt
mov
icebp
sbb
xchg
or
jmp
scas
test
in
mov
clc
xchg
dec
xchg
cmpl
push
cmp
xchg
mov
cs
movsb
incl
imul
push
cmp
es
mov
inc
cmpsb
lods
push
cmpsb
mov
push
sti
push
pushf
and
add
sbb
push
pop
sbb
jmp
stc
loope
int
leave
jmp
mov
int3
loopne
clc
xchg
in
inc
data16
push
push
fadds
mov
xchg
dec
popa
add
cmp
cmp
or
push
divb
loope
rorl
adc
js
into
xchg
xor
in
sub
and
jb
sar
loop
mov
push
sbb
leave
loop
push
lds
pop
js
or
sub
push
mov
adc
test
add
push
fnstcw
and
adc
cmp
or
push
leave
in
add
stos
rcrl
in
jg
dec
mov
mov
movsb
repz
dec
jo
fwait
out
daa
xchg
mov
and
mov
and
ja
mov
jle
lods
mov
out
aaa
lea
bswap
sbb
lods
lea
cmp
out
mov
jnp
daa
xor
xchg
jns
loope
das
lcall
adc
movntq
popa
loopne
sbb
mov
in
lcall
cmpsb
sbb
or
mov
pop
jns
push
and
test
inc
push
test
sbbb
aam
mov
enter
xor
mov
cmpsl
fmulp
cmp
cmpsb
pop
jle
aam
fldl2t
dec
lods
push
mov
into
rcrl
or
clc
and
dec
fldpi
enter
xchg
and
dec
mov
push
addl
loopne
xchg
mov
add
inc
rolb
cmp
cmp
iret
jecxz
rolb
xchg
cmpsl
mov
out
sub
repz
mov
add
mov
xor
push
jne
icebp
add
sub
jmp
in
push
add
mov
adc
or
fiadds
push
aam
ss
and
popa
push
dec
hlt
pop
clc
inc
call
cs
xchg
push
das
into
xor
push
pop
cld
nop
sbb
sbb
push
int
in
notl
lcall
xchg
cmpsl
repnz
push
or
mov
and
sti
mov
dec
pop
subl
push
cmc
xor
outsb
fs
cmp
mov
cmp
data16
je
mov
pushf
repz
out
sahf
mov
shll
push
mov
dec
jnp
fists
mov
dec
cmpsb
mov
pop
sahf
and
in
stos
pop
xchg
imul
cltd
jg
pop
xor
or
push
mov
sub
adc
cmpsb
daa
js
dec
push
js
sub
ret
mov
int3
pop
std
cmpsl
dec
int3
sti
mov
aam
loopne
test
mov
xor
mov
hlt
mov
lods
in
jmp
pop
call
int
jecxz
jnp
mov
push
stos
test
dec
dec
jmp
mov
insl
jecxz
roll
mov
nop
jbe
lcall
jns
rorb
xchg
push
mov
sbb
repz
fisubrs
test
mov
lock
outsb
inc
pop
xchg
pop
jbe
mov
in
pop
pop
mov
sbb
jb
mov
or
dec
mov
lods
push
in
mov
jmp
call
mov
add
jns
rcrb
inc
sahf
int3
jbe
mov
testb
adc
insl
push
pop
shrb
idiv
inc
xchg
out
push
xor
cmpsb
add
xchg
imul
fs
ja
sub
in
jecxz
push
mov
mov
lods
pusha
mov
rcl
pop
arpl
pop
adc
test
insb
mov
mov
and
icebp
cmp
xchg
adc
dec
sub
jecxz
ss
test
mov
cmpsb
imul
fnstcw
out
sub
aam
daa
es
test
mov
flds
fdivs
out
push
jge
pop
mov
imull
loop
xorb
mov
je
mov
cmc
push
cmpsl
or
bound
ljmp
xor
aad
xchg
xchg
das
aaa
aaa
icebp
xor
ret
pop
inc
add
rcrl
mov
fcoms
xor
push
insb
adc
lea
std
int3
mov
adc
les
xor
rcll
dec
outsl
fnstcw
push
sub
js
ja
iret
repnz
in
in
lret
sbb
imull
xor
pop
jns
inc
inc
decb
xchg
or
mov
cli
roll
add
cmpsl
mov
push
popa
fidivs
cs
icebp
sti
jle
pop
jecxz
ljmp
cmp
add
sbb
lds
cmpsb
push
stos
xchg
cmpb
inc
test
adc
mov
imul
lea
sbb
or
mov
pop
or
sbb
icebp
jp
dec
ret
fwait
pop
xor
mov
mov
xlat
rcrl
xchg
mov
and
xchg
xchg
xchg
mov
cltd
cmc
imul
xor
ror
mov
mov
add
jne
push
mov
xchg
xor
adc
pushf
xlat
rorl
or
mov
imul
dec
test
scas
dec
jo
jb
mov
xchg
repnz
insl
xchg
inc
mov
ja
ja
aad
mov
into
decb
and
adc
push
inc
fidivrl
stos
adc
insl
shl
addl
add
es
xchg
mov
push
xchg
or
js
or
xchg
or
mov
loop
ljmp
sbb
jmp
jnp
imul
jecxz
or
or
stc
lds
jne
lahf
cmc
mov
add
cmp
repnz
mov
or
scas
cmpsb
jmp
test
std
xchg
xchg
push
loope
ljmp
sbb
sub
je
in
ret
das
imul
movsb
cli
and
mov
or
cli
bound
jmp
cmpsl
xchg
das
pop
lods
test
lods
inc
into
add
nop
dec
xor
xlat
pop
add
sbb
test
pusha
aad
lret
faddl
out
das
pop
pop
clc
push
test
gs
jg
loope
mov
push
cmpsl
rolb
sbb
adc
rol
fsubl
mov
rolb
mov
aam
loopne
sbb
pop
popa
rorb
cmp
sbb
push
xchg
adc
cmp
sbbl
or
add
jl
scas
rol
xor
je
rcll
out
sti
idivb
sahf
fcoml
shrb
xchg
xchg
jbe
add
adc
clc
xor
rcr
dec
adc
adc
dec
cld
push
sub
mov
mov
sub
insb
mov
cmp
or
xchg
pop
std
ds
sbb
hlt
sub
xorl
jge
sub
xchg
ret
sbb
cmp
stos
ret
jecxz
mov
cs
in
sbb
int
jb
cli
pop
jl
cmp
sbb
cmp
repnz
adc
mov
fistl
mov
je
xchg
cmp
shrb
cli
into
das
mov
ret
cwtl
in
mov
pusha
cmp
push
addr16
jl
imull
outsb
sub
scas
ret
cmpsb
and
ljmp
pop
jmp
jb
test
into
push
jno
js
out
push
or
push
aam
add
mov
icebp
insl
jg
sub
and
movsb
movsl
mov
add
jns
jmp
shl
jnp
mov
cmp
loopne
aad
bound
jg
repz
jae
arpl
jne
mov
ficoml
int3
or
adc
nop
or
jmp
jnp
outsl
push
mov
xchg
stos
xor
cs
sub
adc
arpl
sbb
loope
lret
int3
ds
xchg
mov
jo
and
mov
dec
outsb
pop
cmc
fildl
mov
mov
ja
fldenv
mov
pop
pop
imul
je
stos
insl
pop
lods
adc
movsb
xchg
add
leave
outsl
xchg
xchg
adcb
dec
test
cli
jecxz
mov
ret
fsubl
into
inc
setne
fmul
cs
xchg
test
rcrl
pop
mov
push
icebp
dec
jae
dec
into
rdmsr
aam
or
push
subl
cltd
lods
clc
rcrl
cmp
adc
push
adc
sub
jo
xor
inc
mov
or
iret
outsl
mov
and
pop
mov
pop
lods
sbb
loope
cmpsb
pop
hlt
repnz
repz
push
mov
data16
push
es
cmp
mov
movsl
adc
push
mov
insl
pop
xor
stos
ja
popa
or
bound
jne
repz
cmpsb
sbb
mov
aas
sar
add
fiadds
jg
adc
dec
inc
sub
xlat
out
call
cli
fidivl
loope
loopne
lods
and
push
mov
xor
push
dec
mov
pop
push
xchg
js
mov
dec
mov
mov
js
out
mov
mov
jns
push
mov
lret
dec
stos
add
push
mov
jl
mov
adc
push
mov
mov
imul
or
shll
scas
push
add
inc
stc
adc
out
cmpb
pusha
cld
inc
mov
pop
cmp
sti
cmc
jb
int3
cmovno
pop
cmp
sub
push
mov
das
jmp
int
jne
fcoms
ss
push
sbb
lret
in
push
jnp
xor
stos
push
cmp
mov
fidivl
test
pusha
sub
and
push
clc
and
sub
mov
adc
loop
cld
add
les
into
or
mov
add
rol
mov
xchg
rorl
shrb
and
mov
es
cmp
cmp
push
jae
out
jbe
fisubs
int
cmp
xor
inc
mov
arpl
add
movsb
stc
xor
lods
mov
imul
jge
or
divl
xor
mov
xchg
and
cltd
and
out
addr16
push
adc
sbbl
mov
xor
imul
leave
mov
push
loope
mov
leave
out
ja
mov
fnstcw
or
mov
pop
test
cmc
out
frstor
outsl
in
mov
or
sbb
js
fiaddl
test
movl
cmpsl
cld
cmp
aam
xchg
push
ds
xor
or
into
adc
ss
cltd
mov
imul
cmp
sub
ret
adc
push
cmp
mov
test
mov
clc
lret
dec
jns
lock
in
les
pop
add
cmc
into
dec
sahf
cld
sub
sbb
stos
inc
jmp
adc
filds
pop
lcall
movb
mov
or
das
adc
enter
xor
ds
aam
imul
pop
mov
xor
dec
xchg
jnp
mov
dec
xor
mov
aaa
mov
shl
pop
mov
loopne
andl
cmp
xor
pop
sbb
mov
fdivrp
add
aam
std
cld
and
mov
pop
std
sbb
dec
test
lods
adc
mul
inc
mov
jp
movsl
lods
pop
fdivrs
inc
nop
sub
fwait
xchg
loop
call
stos
sahf
hlt
out
push
insb
sbbb
stos
jle
jo
sub
ss
xchg
xlat
sbb
add
js
lods
outsb
jmp
mov
lahf
xor
cltd
add
xor
enter
mov
mov
sub
push
stc
gs
fisubrs
cmp
pop
sub
pop
or
cld
push
lds
dec
mov
mov
inc
add
cmp
in
aad
push
add
jmp
dec
sbb
push
ljmp
sub
frstpm(287
data16
in
jmp
mov
xchg
cmpsl
lds
loope
xchg
hlt
stos
dec
sbb
fcom
negl
or
cmp
push
xor
out
nop
and
outsb
inc
das
mov
and
add
rcll
push
repnz
cmp
pop
ficomps
jnp
stos
out
lret
test
sahf
iret
mov
ja
or
loop
fildl
pop
jecxz
stos
cld
into
fistpll
dec
pop
or
push
inc
pop
lods
mov
sbb
xlat
scas
mov
sbb
or
xor
add
push
add
loop
cmpsl
push
int
into
ja
add
in
jae
adc
ret
adcl
or
lret
mov
sbb
shl
mov
das
and
mov
add
lock
sbb
lret
addr16
push
cmp
dec
popa
mov
repz
mov
std
insb
adc
jne
jo
xchg
enter
mov
xchg
ret
sbb
test
sbb
int
mov
lahf
fistl
fdivr
mov
dec
addr16
dec
xchg
aam
mov
in
inc
in
out
test
lock
and
pop
dec
xchg
into
notb
sete
fs
gs
aas
fnstenv
xchg
test
jp
mul
in
dec
cwtl
xchg
or
lds
inc
mov
jb
xor
push
cmp
stc
out
jb
mov
addr16
fs
sbb
adc
mov
mov
es
call
js
inc
add
fistpll
popl
movsb
mov
dec
out
xchg
hlt
xor
mov
pop
or
push
test
int3
icebp
cmp
pusha
and
andb
cmp
fidivs
mov
movsb
cmp
aaa
divb
mov
faddl
xor
int3
dec
mov
pusha
sbb
push
jecxz
lds
shll
push
pop
pop
loop
pop
out
pop
and
rorb
stos
or
sub
jecxz
mov
test
into
mov
sbb
sub
insl
fimuls
aas
sub
decb
sub
jnp
add
mov
or
jno
cmpsb
test
mov
cmp
pop
insb
mov
dec
ss
mov
data16
inc
mov
add
dec
push
sbb
popa
or
aad
inc
lcall
lds
mov
add
xchg
js
fnsave
loope
push
mov
xchg
test
popa
pop
mov
mov
mov
ljmp
stos
adc
push
rorb
and
jecxz
mov
push
aam
jg
push
dec
movsb
add
nop
arpl
jg
out
jle
jge
popa
mov
fdivrl
push
jp
sub
insl
lods
push
jno
outsb
andb
sbb
lcall
faddl
dec
cmpsb
inc
aaa
js
xchg
lar
ds
mov
or
jmp
cmpps
inc
sub
mov
push
repnz
jp
aas
push
sahf
imul
dec
in
push
ret
das
jmp
inc
cli
je
cltd
icebp
mov
sarb
pop
aaa
lret
push
push
pop
cmp
xor
sub
mov
mov
cmp
or
xor
sub
lea
sbb
testb
mov
lock
cmp
adc
add
roll
pop
or
inc
lock
mov
push
shrb
and
lret
bound
push
out
and
add
imul
daa
shlb
ljmp
mov
decb
jg
sub
add
mov
cli
xchg
sahf
xchg
dec
addr16
mov
loop
mov
fisubl
daa
loopne
cmp
push
sbb
mov
or
mov
addr16
push
lret
cmpsb
sbb
jne
mov
dec
fnstenv
data16
shrl
sbb
dec
inc
adc
push
loope
pop
dec
cld
jnp
insb
mov
push
sub
mov
in
cs
fsubs
das
sub
jmp
pop
or
ljmp
jnp
dec
cltd
movsb
inc
clc
cld
rcll
mov
push
jp
cmp
loopne
cmc
cmpsb
adc
stos
fninit
xor
cmc
jecxz
mov
or
dec
outsl
fcomp
arpl
das
dec
and
ss
fldcw
xchg
pop
pushf
mov
pop
ja
insb
scas
lods
jb
push
icebp
pop
bound
mov
enter
push
ds
imul
lods
pop
inc
out
jbe
mov
push
std
shll
pop
mov
mov
mov
mov
or
ja
cmp
iret
hlt
inc
movsl
lods
ret
fs
fmuls
and
sub
jns
shll
movsl
std
xor
scas
pushf
orb
mov
aam
enter
sbb
insb
insl
mov
lods
gs
psubw
outsb
and
xchg
test
ja
dec
cmp
bnd
or
and
sbb
push
clc
rorl
dec
test
imul
je
in
pop
daa
pop
cld
ss
addl
adc
dec
adc
icebp
cli
cli
and
xor
out
inc
adc
or
les
les
ds
xchg
shl
mov
jno
sbb
out
adc
sti
dec
movl
cmpb
jne
mov
mov
xchg
jb
inc
jo
add
je
idivb
adc
mov
bound
push
iret
aas
adc
int3
fstpl
sub
fbld
add
mov
mov
or
cmpsl
js
cmp
jp
repz
loopne
mov
xor
sti
icebp
repz
bound
mov
testl
in
fimuls
cmp
gs
ret
cmp
sub
push
pop
cwtl
bound
adc
push
bound
push
lret
stos
adc
or
aas
daa
fstps
cmp
pop
xor
sub
or
or
fwait
arpl
inc
aas
test
ss
in
in
iret
jno
inc
push
mov
out
jl
pop
in
dec
mov
das
out
fs
pop
pushf
test
movsl
fadds
add
subb
mov
push
pop
xor
push
in
mov
cwtl
inc
fbstp
mov
dec
dec
xchg
outsb
xchg
mov
mov
out
jns
adc
leave
pop
leave
cmpsl
or
insl
push
pop
jge
pop
push
mov
je
outsl
add
mov
or
dec
sbb
push
mov
mov
dec
pushf
dec
pusha
aad
imul
inc
pop
ja
cmpsl
add
decl
cmp
adc
and
dec
pop
sbb
pop
dec
je
repnz
cmc
imul
inc
or
dec
stos
shrl
xor
mov
dec
inc
in
push
jmp
push
ret
sub
jae
cs
outsl
aaa
enter
mov
data16
pop
sbb
aad
xchg
push
cld
dec
shlb
adc
cmp
addr16
cld
sub
scas
and
sbb
inc
nop
jmp
jbe
sub
lds
and
mov
pmuludq
sbb
pushf
xorb
sbb
insb
or
adc
sub
pop
lods
jo
mul
enter
stos
scas
mov
and
iret
sbb
mov
imul
mov
call
push
out
icebp
test
clc
lods
add
mov
fldl
xlat
pop
imul
cmp
xorl
jg
sbb
mov
hlt
mov
cmp
and
sub
mov
test
push
ja
jnp
jle
sbbl
lods
sbb
aas
and
xor
in
adc
dec
loop
pop
xor
xchg
or
loop
rcrb
and
adc
add
lods
sbb
jb
hlt
lret
mov
jns
shlb
jmp
mov
and
xchg
das
mov
int3
mov
sbb
into
dec
and
xlat
xor
adc
mov
dec
sbb
cli
flds
mov
sbb
repnz
mov
mov
lods
cmp
adc
pop
outsb
dec
cmovs
sub
popa
ret
and
je
fidivl
pop
push
xchg
into
insl
pop
inc
mov
xor
push
xlat
jl
mov
push
call
and
jnp
sbb
push
mov
pop
mov
clc
test
xchg
sub
jecxz
repnz
icebp
ds
mov
mov
cmpsb
pop
sbbb
xchg
daa
adc
repz
das
mov
lock
xchg
cmp
inc
arpl
mov
cld
mov
mov
clc
sbb
pop
shrb
test
inc
mov
subb
xor
cmp
jne
xlat
loop
stos
mov
cmpsl
mov
add
dec
out
and
mov
ret
mov
fidivs
imul
gs
push
prefetchnta
insb
adc
mov
xchg
mov
outsl
add
mov
sub
jo
jb
aas
pop
pop
sahf
xchg
jbe
loopne
dec
pop
xchg
jae
sbb
xchg
stos
pop
je
cmc
mov
add
dec
mov
aaa
aad
sbb
loope
and
pop
jl
sbb
xchg
ljmp
ja
movsb
movsb
cmp
or
lods
arpl
add
loope
or
test
repnz
push
test
scas
xor
mov
stos
jmp
popf
gs
popa
loop
imul
lcall
pushf
addr16
jo
ret
jmp
sarl
jp
insb
cmp
add
cltd
and
sub
and
push
mulb
loopne
cmp
mov
xor
ds
xlat
out
sub
mov
out
mov
scas
test
stos
sbb
mov
cltd
jle
addr16
xlat
cmp
ss
cmp
push
dec
mov
stos
aad
push
push
fs
aas
lret
dec
idivb
jo
mov
jae
cltd
or
ja
adc
jmp
push
xor
das
adcb
insl
cs
or
nop
pop
outsb
adc
lods
mov
mov
cltd
mov
mov
int3
xchg
inc
cld
xor
mov
test
dec
leave
push
sub
or
mov
pop
sbb
divb
add
call
push
stc
pop
mov
push
push
cmp
dec
push
cld
pavgw
add
cwtl
pop
inc
subl
insl
jmp
je
inc
mov
mov
out
dec
inc
shrb
ljmp
subl
gs
xchg
mov
pop
fsubl
push
decl
jno
pop
push
imul
dec
in
cmc
js
lret
adc
cld
insb
adc
mov
xchg
cs
mov
rcr
sbb
sahf
mov
ss
notb
popf
xor
mov
mov
std
out
gs
pop
jl,pt
movsl
dec
xchg
mov
mov
pop
dec
mov
xor
jne
adc
lods
pushf
rclb
push
sub
int3
xor
cmp
and
cmpsb
xchg
pushf
add
mov
jge
lea
fists
bnd
mov
jbe
shr
sub
mov
gs
aaa
and
test
xlat
daa
aaa
xchg
sti
outsl
pop
movsb
ljmp
loope
int
xor
call
pop
iret
es
idivb
pop
xlat
mov
inc
dec
adc
inc
mov
cmp
repz
fs
mov
out
int
in
pop
pop
dec
scas
mov
push
clc
or
ss
in
push
imul
sub
push
je
scas
es
and
loope
pop
outsb
outsb
sar
lds
dec
out
xchg
lahf
fcmove
test
fsubl
inc
call
pushf
adc
push
jne
lahf
pop
inc
lods
jo
je
jp
pop
dec
sub
addr16
sub
add
sub
sbbl
in
scas
push
shlb
add
je
push
sbb
loopne
in
test
movsl
dec
sbb
aad
aad
push
xchg
mov
imul
sti
lods
incl
lret
arpl
push
sbb
pop
dec
stos
xchg
cmp
pop
inc
jno
cmc
or
mov
mov
imulb
mov
jbe
sub
icebp
aas
sub
cmpsb
faddl
add
shrb
mov
cmp
or
in
sub
and
stc
fiaddl
arpl
adc
repz
andl
mov
insb
xor
js
dec
hlt
mov
mov
cmpsl
push
jbe
fidivl
out
pushf
adcl
daa
mov
mov
mov
or
ror
jne
cmp
dec
fs
inc
mov
nop
in
xor
mov
gs
hlt
jmp
aas
lods
dec
mov
outsb
jl
out
js
sbb
xchg
jnp
mov
push
mov
popa
and
xchg
mov
inc
lret
pop
adc
mov
lahf
mov
inc
and
push
xor
pop
fstps
and
ficoms
add
cltd
xlat
mov
movsb
mull
and
xchg
cmp
push
adc
xchg
lcall
loopne
push
mov
pushf
fs
mov
popa
fsubl
and
sbb
ficomps
daa
aam
adc
jl
and
in
push
inc
lret
ror
les
mov
sbb
push
pop
pop
push
inc
ss
shll
pop
pop
pusha
push
ss
jne
out
das
add
mov
dec
adc
inc
cld
pop
jg
pop
pusha
scas
dec
ret
pop
push
mov
dec
add
sbb
push
push
pop
int
mov
pop
rclb
in
and
cmpsb
loope
xchg
pop
fidivl
inc
inc
ret
loopne
shll
sbb
out
and
movsb
jle
jae
clc
pop
sbb
sub
push
add
test
sbb
mov
xor
movsl
pop
arpl
xlat
mov
jne
int
fildll
andl
jbe
adc
or
adc
out
loopne
lcall
jge
sbb
mov
repnz
dec
jns
in
cli
dec
call
or
or
adc
sbb
out
aaa
pop
adc
xor
xlat
aaa
fildll
mov
shll
ficomps
xchg
cmp
xchg
cli
je
xchg
sub
aad
sahf
inc
je
into
add
jo
xchg
mov
mov
leave
mov
popf
xor
scas
inc
mov
fcmovnb
gs
add
mov
ja
or
sub
xchg
in
pop
push
sub
in
leave
in
in
mov
mov
lret
sbb
mov
push
out
inc
scas
lcall
xchg
jbe
aam
push
es
mov
aad
xchg
jns
popf
xor
enter
test
out
sub
dec
stc
adc
jne
mov
bound
xchg
sarl
sbb
mov
jns
nop
outsb
outsb
lret
xchg
repnz
push
jb
cmp
lret
push
push
in
cmp
out
inc
pop
or
in
dec
adc
mov
data16
cmp
sbb
subb
mov
nop
sahf
dec
xchg
stc
xabort
inc
mov
jno
pushf
nop
inc
jne
pop
jo
cmpl
jb
scas
cmp
mov
inc
jle
loope
jb
pop
xor
pop
xor
pop
cmpsl
loope
rcr
es
mov
inc
or
imul
pusha
sbb
scas
fstpl
xchg
pop
popf
and
xchg
add
imul
enter
jg
dec
mov
das
cwtl
dec
adc
cs
call
xchg
outsb
aam
sub
scas
jo
ret
sbb
in
pop
add
lods
mov
aaa
out
mov
xchg
xlat
jmp
push
xchg
aam
scas
cmp
std
mov
cmpsl
add
imul
inc
in
push
lret
pop
mov
cmp
test
test
xor
sbb
add
inc
xchg
xor
rorl
xor
das
dec
imul
imul
stc
enter
in
inc
clc
arpl
mov
fidivrs
test
lea
xchg
cmp
fists
mov
out
popf
adc
dec
repnz
ja
mov
nop
lods
inc
in
jns
adc
xor
enter
xor
lea
jg
popf
jl
sbb
lds
test
inc
mov
jno
daa
outsb
adc
inc
xchg
sub
xor
push
xchg
push
fldl
roll
push
movsb
lock
xchg
fwait
or
loopne
jae
outsb
push
fldcw
rorb
sbb
mov
cmp
rorb
jno
xchg
es
jge
push
or
lahf
sub
ljmp
test
in
push
pushf
inc
fidivrl
pop
and
out
test
movsb
mov
in
insl
les
push
stos
dec
mov
popf
jecxz
sti
repnz
mov
mov
jo
mov
jo
ret
nop
sti
sbb
sub
pop
pop
std
stc
test
hlt
push
inc
inc
hlt
les
mov
ret
jecxz
pop
jmp
lahf
scas
mov
bndstx
pop
mov
cs
outsl
push
adc
push
xor
loope
xchg
mov
imul
stos
repz
mov
mov
nop
mov
sub
pop
int
xor
mov
mov
loop
or
mov
iret
jne
pop
cmpb
push
bound
jb
in
sub
jbe
mov
pop
pusha
scas
lcall
or
xor
jge
xchg
sub
mov
outsb
adc
mov
mov
lods
sub
jg
jecxz
inc
call
test
in
push
rcll
inc
and
and
sub
inc
dec
in
shrl
data16
dec
mov
mov
test
stos
stos
sbb
ret
cltd
enter
dec
scas
xor
fsubs
insl
leave
hlt
loope
arpl
or
test
cmp
orb
cli
rcrl
adc
mov
adc
repz
cmp
lahf
mov
lret
push
push
mov
clc
jnp
popa
mov
data16
sahf
mov
aam
icebp
xchg
jl
fildl
inc
mov
mov
lret
orb
outsb
fnsave
imul
andb
imul
xchg
cmp
inc
sub
lods
mov
mov
fmulp
ds
cs
add
sub
xchg
mov
dec
call
or
inc
push
lahf
add
add
push
loopne
cs
xor
fdivl
inc
mov
loope
addb
incb
mov
add
clc
sarl
bound
inc
scas
push
sub
lcall
lods
repnz
in
pop
jnp
je
stos
xchg
loopne
adc
jmp
loope
lahf
sti
jl
ss
popa
adc
scas
int3
gs
mov
add
push
sbb
sbb
or
enter
es
or
cmp
push
cli
out
js
push
stc
add
mov
xor
loope
push
inc
mov
sub
iret
popf
mov
pop
das
mov
dec
jge
sbb
inc
lcall
bound
out
xchg
jno
or
push
shr
or
mov
notb
loopne
icebp
adc
xor
push
stos
and
xchg
aad
mov
mov
push
push
aaa
mov
outsb
or
cmp
aam
mov
push
sub
clc
mov
lret
lods
icebp
mov
pop
jnp
inc
sbb
inc
mov
pop
out
stc
out
xchg
inc
leave
ss
leave
dec
cmp
push
mov
sbb
inc
xchg
lds
sbb
cltd
xchg
push
push
push
lods
mov
insl
inc
call
mov
add
out
adc
add
jbe
nop
pop
dec
fidivl
inc
and
adc
out
jg
aad
jae
std
inc
push
sub
push
adc
ret
sbb
mov
stc
mov
xchg
clc
mov
out
pop
lock
sbb
test
inc
scas
inc
out
leave
pop
pusha
or
into
jo
out
in
lods
mov
xchg
ds
inc
cmp
sbb
mov
xor
in
cmp
sub
ds
popf
mov
dec
xchg
dec
dec
and
adc
sbb
sbb
mov
cld
in
hlt
ljmp
lods
mov
push
loop
out
test
movsb
jne
cltd
and
pop
mov
inc
mov
movsb
out
push
fcmovnbe
mov
mov
fdivr
push
out
push
and
pop
clc
popa
push
mov
mov
popf
mov
std
mov
rolb
or
and
push
cltd
mov
popf
lock
stc
push
jb
pusha
jl
sbb
sub
xor
leave
sbb
sbb
arpl
cmp
xor
fs
loop
sub
pop
pop
inc
xor
jno
push
pop
adc
mov
aad
into
pop
sbb
and
adc
push
js
cmp
jb
sti
xor
sbb
inc
pop
ss
rclb
lret
sti
cwtl
push
in
shll
cmc
addl
pop
pop
sbb
push
shl
jg
dec
cs
xor
add
in
pop
dec
dec
scas
lea
fstpl
out
xchg
add
inc
push
jg
xor
dec
dec
pop
js
mov
rolb
stos
daa
adc
lock
fidivrs
inc
mov
push
cld
cwtl
sub
fidivrs
outsb
int3
sub
lret
adc
aaa
adc
ds
fucom
add
call
lods
adc
arpl
jo
mov
clc
xchg
adc
inc
lods
mov
xchg
pop
hlt
jmp
into
push
cwtl
mov
ja
cmpl
int3
hlt
sbb
adc
negb
add
call
lahf
mov
sbb
lahf
dec
mov
decb
cmp
add
pop
jle
or
push
aam
mov
leave
inc
xchg
add
adc
add
lahf
loope
ret
or
xchg
arpl
aad
xor
sbbb
xchg
mov
kandb
lahf
pop
inc
mov
mov
ss
repnz
in
adc
daa
insl
into
push
pop
fucom
movsl
insb
enter
fistpl
cld
cmp
fwait
and
sti
xchg
mov
mov
push
or
dec
sbb
sbb
pop
mov
pop
shrb
scas
mov
std
or
addl
inc
pop
in
mov
pop
mov
fistps
test
ja
mov
adc
push
rcrl
xchg
adc
scas
jb
mov
das
mov
mov
outsb
lcall
aad
in
je
add
inc
sahf
or
push
mov
jae
pop
lret
mov
iret
jecxz
pop
dec
mov
movsl
mov
icebp
or
mov
cli
shrb
mov
mov
add
push
inc
stos
movsl
cwtl
into
sbb
mov
ljmp
lahf
stos
pop
pushf
push
cs
push
stos
fwait
icebp
movsl
xchg
arpl
divl
or
xor
aaa
add
dec
mov
pop
mov
lods
leave
jp
fcmovnbe
shll
es
cmp
mov
popf
shlb
fildl
and
popf
fidivrs
xchg
or
test
aam
xor
pop
out
inc
dec
out
jge
pop
lods
xchg
cmp
outsb
cmpsl
and
les
push
lret
push
sub
arpl
jecxz
jp
out
rolb
fsubrs
pop
xchg
adc
xchg
xor
inc
inc
in
add
cmp
mov
adc
andl
test
jne
ljmp
mov
and
dec
repz
lret
cli
or
fisttpll
ror
movsl
jp
mov
xchg
sahf
jg
push
aad
aas
or
xchg
cmp
inc
add
xchg
rcll
ret
jecxz
mov
push
sti
popf
add
idiv
push
sub
and
inc
jmp
pop
adc
adc
sarl
cmp
xor
push
push
xchg
push
mov
insb
cmp
addr16
jo
push
mov
push
loopne
xor
adc
repnz
hlt
divl
mov
sbbb
movsb
push
and
xlat
shlb
pop
adc
mov
push
fldt
push
ljmp
cmc
loopne
ds
mov
xor
xchg
sub
jns
cmp
inc
mov
cmp
mov
lea
fldl
pushf
test
repnz
jg
sbb
mov
pop
and
push
mov
add
lds
inc
xchg
outsb
xchg
pop
pop
fdiv
add
pop
sti
lock
negb
xchg
je
bound
dec
ss
adc
cltd
xor
or
das
mov
mov
lods
or
add
mov
mov
or
lds
sub
dec
lds
mov
cmpb
jae
sub
mov
xchg
dec
jge
xchg
scas
inc
or
scas
fistpl
push
sub
mov
test
dec
xchg
pop
stos
sbb
add
pop
mov
mov
xor
jae
test
mov
jp
inc
push
scas
mov
mov
inc
in
mov
xchg
dec
jp
mov
shll
aas
dec
movsb
sbb
leave
repz
jae
sub
rcl
imul
arpl
das
mov
pop
inc
int
push
xor
cmp
scas
lret
testb
push
enter
mov
dec
push
pop
xchg
sub
lods
leave
fcomps
movsb
sub
in
lcall
mov
scas
stc
fstps
and
ucomiss
dec
push
xlat
out
scas
cs
test
std
mov
push
lret
jo
loop
ljmp
popa
ja
add
push
or
sub
xchg
and
outsl
cltd
sub
jns
into
es
ljmp
pop
dec
aas
mov
inc
fs
mov
in
test
call
mov
or
jecxz
in
dec
mov
pushf
xor
mov
jge
dec
push
lods
sub
mov
sbb
ljmp
mov
cwtl
jae
into
imul
lea
es
fists
nop
mov
add
int3
sub
fstl
mov
or
jecxz
and
fcmovb
inc
cmp
dec
cmp
movsl
out
cmp
ja
dec
outsl
cmc
push
icebp
or
nop
je
push
cmpsl
jmp
dec
adc
gs
outsl
mov
mov
in
clc
in
mov
xchg
cmp
icebp
adc
pop
loop
repnz
imul
popa
xchg
mov
xchg
add
xchg
sbb
addl
imul
and
repnz
mov
sub
ret
in
adcb
es
pushf
xor
xor
push
aaa
sbb
movsb
dec
decl
cmp
enter
jge
jge
adc
pop
lods
inc
mov
fwait
pop
or
stc
jle
pop
mov
leave
push
pop
or
add
icebp
cmp
xchg
lret
les
push
and
push
xchg
and
pop
push
jecxz
pop
mov
mov
pop
or
repnz
sub
push
fs
pop
push
xchg
adc
jge
pop
xchg
out
jmp
shlb
popf
cltd
mov
xchg
push
push
je
sbb
adc
jg
add
repnz
sti
sti
pop
add
sbb
negb
mov
xor
or
sahf
arpl
push
dec
sbb
push
jg
inc
sti
mov
mov
push
sub
add
shl
test
jecxz
insb
pop
mov
pop
jg
es
ja
outsb
rolb
repz
adc
outsb
mov
and
mov
sub
xchg
sub
jns
add
aas
fs
add
jnp
jp
das
sub
pop
bound
mull
ret
cli
sbb
enter
dec
test
push
lea
sub
int
jne
and
mov
adc
icebp
or
lret
shrb
sub
inc
push
sbb
int
inc
das
push
jge
jmp
mov
mov
add
jp
in
mov
pminsw
mov
fbld
mov
push
mov
shll
test
adc
dec
sbb
ljmp
fdivl
mov
adcb
pop
insl
xchg
pop
pop
dec
pop
popf
fstpt
pop
add
adc
icebp
test
inc
lods
xor
fisttpll
ret
aaa
popf
stos
sti
pop
iret
and
dec
add
inc
shlb
movsb
icebp
in
gs
cmc
dec
sbb
mov
in
jl
push
ret
rclb
std
scas
sbb
scas
jle
sub
adc
push
sbb
shlb
and
pop
xchg
arpl
sub
and
cli
ret
add
dec
or
fidivl
jnp
sahf
and
outsb
or
aam
jmp
int3
lea
fucom
mov
movsl
adc
fldl
xchg
stos
mov
pop
fisttps
mov
mov
ja
pop
mov
push
cmp
add
lds
cmp
xorb
hlt
mov
sbb
xor
sbb
and
lods
insl
jge
push
scas
js
lock
cmc
cmp
and
fdiv
dec
fnstcw
pusha
pop
mov
dec
test
arpl
inc
jl
lret
mov
and
mov
and
mov
in
addr16
inc
out
mov
shl
inc
or
dec
dec
lret
pop
sub
adc
pop
rcr
mov
mov
sub
xor
mov
sub
jb
fsts
mov
jb
push
and
jp
xchg
aad
pop
jmp
int3
jnp
fmul
int
jno
sbb
pop
loop
mov
or
lahf
out
mov
scas
sarb
fldcw
pusha
sub
js
mov
hlt
fdivs
imul
negl
jmp
pop
out
sarb
and
pop
cmp
into
push
and
cmp
and
cmp
lds
pusha
mov
adc
cmpb
icebp
push
cmp
imul
enter
mov
cmp
lods
dec
xchg
and
and
loope
push
mov
mov
xorl
js
pop
lods
cld
cmp
pusha
stos
jle
orl
test
fisttpl
dec
pop
aam
pop
dec
adc
outsb
cmp
mov
sbb
or
dec
loop
inc
sbb
out
jb
sbb
xor
sub
mov
std
dec
cmc
cli
in
adc
push
mov
pop
push
mov
or
push
and
icebp
xchg
or
sub
jge
lret
xchg
push
das
loopne
xor
cmp
fs
out
xchg
aad
lods
xor
push
pop
sub
ja
fnstcw
sti
loope
out
int3
pop
xchg
test
adc
push
int
xor
jne
or
lods
or
fwait
mov
xchg
pop
xchg
xlat
cmpsb
pusha
pusha
test
aas
lret
push
or
test
aaa
std
inc
addb
cmpsl
ficoms
jne
sti
cmp
test
repnz
xchg
cmpsb
rclb
jbe
mov
adc
ret
adc
xor
lods
out
cmpsl
mov
rclb
xchg
xchg
leave
pop
lcall
sub
out
ret
add
aaa
insl
and
cmpsb
push
cli
incb
mov
lods
mov
push
cmp
jns
adc
ds
cli
push
add
lcall
mov
movsb
sbb
jne
stc
shlb
xor
arpl
add
push
test
pushf
mov
xchg
pop
jbe
repz
mov
outsb
xor
js
push
gs
xlat
imul
leave
ficoml
mov
subl
cmp
movl
movb
sbb
test
mov
xchg
inc
sti
inc
inc
cwtl
ds
lret
dec
cmpsb
div
into
dec
cmpsb
pop
mov
lods
add
add
and
cmp
adc
jl
pop
es
ss
sbb
iret
aam
xor
movsb
or
popa
ret
mov
jmp
hlt
es
lods
stos
mov
mov
inc
add
in
and
xor
into
jo
pop
xor
xchg
dec
aas
lahf
loop
out
push
fisttpl
pop
lret
xchg
sarb
push
mov
mov
jecxz
mov
mov
ljmp
cwtl
adc
sbbl
jmp
sub
add
adc
ret
pushl
imul
call
lea
pop
ror
sbb
adc
add
add
adc
pop
push
and
mov
mov
add
or
pop
or
insb
dec
jmp
mov
pop
mov
adc
push
test
xor
clc
invd
or
add
xchg
stos
and
dec
iret
push
decl
add
rolb
push
push
sar
push
adc
jge
dec
push
clc
decl
pop
sbb
push
insb
insl
test
mov
push
push
je
dec
lret
lea
clc
mov
add
mov
dec
les
jne
mov
add
inc
sub
pop
add
lret
cld
push
mov
inc
mov
rolb
lea
movsl
insb
call
cld
adc
enter
jnp
mov
dec
fcoml
incl
push
test
lcall
add
dec
test
dec
push
push
mov
lret
cmp
testb
lea
cmp
push
or
dec
aam
jge
int3
call
movsl
mov
adc
cmp
mov
je
call
popf
inc
or
call
jle
push
mov
decl
inc
mov
decl
jo
and
negb
pop
mov
xchg
idivb
mov
inc
mov
test
pushl
decl
call
idivb
xorl
xchg
incl
pop
call
clc
xchg
call
cmp
rorb
or
add
je
jmp
pop
mov
aas
mov
jne
add
mov
sahf
imul
je
or
rolb
xor
jmp
mov
mov
call
test
mov
add
sarb
mov
add
or
jmp
or
call
cmp
or
je
fisttpll
mov
xor
mov
call
fnsave
test
or
out
add
movl
add
inc
push
xchg
lods
aad
addb
lcall
push
iret
call
call
xor
iret
jne
fisttpl
jbe
add
decl
ss
or
or
add
add
push
mov
jle
xchg
jmp
cmp
call
ss
push
jmp
adc
inc
fisttpl
jl
push
push
push
mov
pushl
iret
push
lret
pop
call
or
scas
inc
mov
add
gs
sbb
mov
incl
or
add
mov
jbe
sti
jge
les
mov
pop
adc
push
je
sbb
and
and
inc
and
inc
call
sub
add
les
push
cmpl
cmp
push
call
jmp
push
pop
adc
inc
adc
push
out
test
and
push
inc
call
je
sbb
add
or
je
and
and
add
incl
fisubs
push
je
decl
push
pop
decl
icebp
movsl
or
pop
addl
and
jne
movsl
movsl
addr16
aam
mov
je
lea
movb
lea
push
andl
or
add
call
movsl
or
pop
testb
ficomps
add
lea
jmp
inc
adc
lock
icebp
mov
mov
dec
inc
je
icebp
jecxz
call
shlb
add
push
rorb
pop
pop
ret
cs
test
je
add
incl
andb
call
mov
push
add
pushl
test
add
add
test
test
push
pop
add
je
jecxz
test
add
dec
add
je
mov
mov
shrb
add
adc
test
push
je
leave
add
add
push
jecxz
jecxz
push
and
call
incl
test
add
mov
jecxz
push
add
mov
addr16
mov
mov
push
ret
inc
pushl
mov
or
call
test
js
pushl
cmp
inc
jp
loopne
inc
mov
add
xchg
mov
rolb
inc
push
pushl
lock
addl
push
incl
adc
stos
lea
jne
push
or
dec
cmp
gs
in
jmp
lea
test
js
mov
iret
hlt
or
inc
test
decl
jne
inc
adc
add
sar
mov
add
add
addl
or
jo
add
sub
and
jne
scas
jmp
xor
mov
adc
or
ljmp
addr16
push
ljmp
push
push
call
out
dec
pushl
cld
adc
pushl
incl
loopne
or
scas
jne
je
pop
inc
jmp
add
mov
adc
or
push
out
call
ljmp
sbb
push
jne
test
leave
leave
jb
or
jns
addr16
rolb
scas
push
cld
push
push
jl
push
orb
cmp
or
enter
addl
or
orb
pop
jbe
out
pop
pop
or
out
aad
pushl
or
decl
pusha
cmp
addl
cmp
pop
aad
test
pop
pop
mov
jne
jmp
push
je
push
addr16
andnps
addr16
andl
dec
add
mov
mov
dec
jne
sbb
das
or
lea
and
dec
and
add
sub
and
add
pop
cmpl
add
add
inc
mov
andps
addl
jle
cmp
mov
test
add
js
mov
inc
sub
xor
adc
mov
inc
and
add
test
js
mov
add
mov
sbb
and
mov
addl
and
mov
add
rolb
sldt
inc
inc
inc
add
dec
fsubrs
and
inc
push
aam
shr
add
add
insb
gs
cmp
mov
inc
je
add
incl
or
test
add
leave
sub
in
iret
mov
test
scas
test
dec
int
inc
add
add
in
add
incl
add
lock
ud0
add
mov
add
jmp
push
adc
mov
add
push
adc
cmp
lea
pop
xor
add
add
ds
enter
jne
pop
call
dec
push
incl
xchg
imul
mov
in
rorb
push
fdivrl
jmp
jne
pop
or
pushl
xor
adc
jmp
jne
call
mov
mov
xor
jne
call
hlt
inc
mov
mov
add
decl
mov
dec
jmp
inc
test
pop
jmp
mov
ror
test
xlat
sar
add
shlb
in
leave
jns
and
call
dec
fildl
jmp
add
rolb
lea
test
push
cld
call
jmp
test
cmp
cld
and
mov
or
call
push
shr
dec
jne
call
addl
mov
loopne
clc
add
cmp
call
stc
in
rorb
push
jne
xor
pop
add
jbe
push
push
push
add
pop
xchg
bnd
jmp
mov
loop
inc
pop
add
les
push
addr16
push
addr16
jbe
orl
andl
adc
or
or
pushl
sarb
cmp
call
icebp
add
push
push
pushl
mov
call
mov
shrb
incl
push
push
xor
clc
shlb
push
lcall
call
incl
or
add
add
iret
and
loop
call
jbe
rolb
add
jmp
je
mov
incl
mov
push
enter
test
cmp
test
decl
mov
add
and
pushl
call
test
jge
sgdtl
push
and
or
addl
cld
add
and
push
add
je
ss
jmp
decl
and
add
push
jmp
incl
add
mov
xor
addr16
push
add
and
xchg
je
test
lea
jge
add
dec
cli
mov
jge
add
mov
je
decl
lds
je
adc
inc
and
add
add
cmc
loope
and
push
add
mov
lea
je
pushl
mov
imul
add
std
mov
mov
add
addl
add
jmp
sbb
mov
addr16
cmp
mov
rorl
shrl
call
mov
sarl
cmp
push
or
push
adc
test
inc
cld
dec
or
jmp
addr16
call
hlt
or
in
call
test
test
mov
shll
rolb
ljmp
push
