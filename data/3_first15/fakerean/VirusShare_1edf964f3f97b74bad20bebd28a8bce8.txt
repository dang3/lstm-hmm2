cwtl
mov
xor
mov
sub
lods
scas
push
test
popf
add
adc
loop
and
mov
push
bound
imul
mov
push
sub
xchg
pop
pushf
movsb
mov
ja
nop
cmp
dec
cmp
adc
loopne
inc
jno
lods
push
and
leave
out
hlt
jnp
jo
out
jmp
cwtl
vandnps
sub
imul
mov
dec
sbb
mov
sbb
mov
and
ja
mov
imul
inc
mov
cli
lea
call
and
jbe
rol
fists
out
cli
sbb
inc
call
mov
std
inc
idivb
std
arpl
std
pop
ret
add
mov
jns
or
pusha
adc
iret
rcll
or
out
pop
pop
or
pop
adc
mov
ret
out
pop
sbb
xchg
sti
das
cmp
xchg
std
mov
stos
cmc
xor
mov
sub
dec
or
aaa
xchg
mov
push
cmp
push
sti
movsb
call
in
ret
mov
scas
cli
aaa
push
adc
int3
pop
push
fs
push
call
lret
push
out
out
cmp
test
jmp
loop
out
and
lret
jmp
xchg
fistpll
sbb
iret
popa
cld
popf
movb
aam
push
repz
loope
xchg
into
or
jp
cli
shr
pop
clc
push
or
adc
add
or
test
fldenv
mov
cmp
and
call
je
push
sahf
mov
sbb
mov
sti
aaa
mov
jecxz
ds
and
add
mov
or
ljmp
add
daa
sub
icebp
push
mov
sub
jmp
std
sarl
popf
sbb
sbb
mov
cmp
mov
std
inc
pop
shr
cwtl
pop
ror
loope
mov
repnz
inc
lret
ljmp
test
mov
xor
out
and
xchg
sti
cmp
in
cmpsb
aad
fnstcw
mov
sub
jmp
mov
ljmp
xchg
jmp
push
mov
cmp
mov
clc
aad
adc
cmp
popf
cmp
call
cs
xor
mov
mov
out
and
mov
inc
mov
cmp
cmp
xchg
insl
rcl
shrl
sbb
nop
sti
ss
sub
mov
jle
add
out
and
sub
sbb
add
jp
ss
pop
cld
sti
mov
mov
push
sub
aas
or
out
and
fld
popf
xchg
mov
mov
iret
shl
int3
add
repz
push
or
out
and
fs
out
pop
mov
xor
mov
xchg
sub
int3
sbb
outsb
inc
inc
sbb
jo
call
sbb
outsl
call
sbb
outsl
aaa
lahf
lea
dec
push
dec
mov
xor
adc
and
ja
pop
nop
mov
sarl
sub
push
lds
adc
cmp
xor
ljmp
ja
or
xchg
roll
mov
pop
xchg
mov
mov
xchg
cmp
pushf
outsl
dec
clc
push
les
xchg
sub
outsb
outsl
insb
sub
xchg
add
mov
sbb
js
push
stc
xchg
pushf
pop
in
sbb
add
and
gs
enter
mov
xor
ljmp
call
in
jb
adc
outsl
pop
sti
sbb
sbb
sbb
lret
jae
je
jg
scas
rcrb
sbb
lea
insl
or
jge
pop
mov
jns
sbb
push
xchg
fdivp
cwtl
lea
lods
pop
and
push
or
push
jae
push
push
jle
xchg
lea
jle
xor
pop
xchg
iret
cli
outsb
pushf
cmp
lcall
adc
cmp
sub
and
xchg
insl
jo
rorl
in
jb
xchg
fisubrl
stos
fmuls
mov
arpl
jecxz
cmp
dec
fistpl
mov
std
xor
and
mov
sbb
bound
xchg
outsl
or
mov
insl
jo
aam
ja
or
xchg
xor
sbb
arpl
xlat
loope
pop
lods
or
mov
outsb
pop
jle
xchg
pop
inc
insl
jo
aam
loop
sbb
hlt
icebp
insl
dec
inc
sbb
rcl
pop
arpl
dec
in
aaa
adc
outsl
sub
cmp
jo
in
insl
or
mov
es
pop
and
test
push
jbe
pop
arpl
mov
int
pop
andb
test
push
sub
in
mov
and
mov
jl
jnp
ljmp
test
mov
cmpsl
adc
outsl
sub
xchg
dec
inc
mov
inc
enter
movsb
jae
pop
int
xchg
test
adc
add
and
jo
movsb
push
pop
pop
xchg
ficoml
adc
jl
iret
rcrb
xor
daa
ret
outsb
es
or
iret
jp
arpl
daa
in
sbb
enter
dec
lret
cmp
adc
andb
arpl
insl
mov
push
mov
repnz
arpl
addr16
mov
mov
fildl
xor
mov
pop
int3
hlt
cmpsl
mov
lea
jo
mov
or
sbb
jnp
lret
inc
sahf
push
dec
jge
or
cwtl
adc
in
lret
mov
jo
adc
outsb
jae
sbb
leave
cld
lea
or
test
outsb
sbb
xlat
outsl
outsl
movsb
push
out
xchg
cmp
adc
mov
adc
int3
mov
or
daa
mov
pusha
je
xchg
adc
and
fbstp
outsb
outsl
add
enter
outsb
outsl
xchg
pop
xchg
sub
shlb
mov
inc
test
aas
movsb
movsb
les
cmp
adc
or
jmp
jb
jmp
pop
xchg
jno
sub
lea
movsb
dec
ds
enter
movsl
push
cmp
and
rolb
xchg
pop
outsb
push
xchg
push
sti
or
insl
iret
mov
push
daa
adc
jb
outsb
outsl
mov
outsb
scas
mov
jb
loopne
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
pop
xchg
push
mov
dec
jne
fwait
jmp
mov
mov
sbb
aas
cltd
and
divb
or
xor
and
or
outsb
outsl
sbb
outsl
mov
jo
pop
imul
subb
sbb
outsl
jnp
pushf
push
mov
mov
sbb
outsl
mov
outsl
mov
outsl
mov
outsl
mov
mov
mov
outsl
mov
outsl
mov
outsl
mov
outsb
outsl
mov
outsl
mov
outsl
mov
mov
mov
outsl
mov
outsl
mov
scas
mov
outsl
mov
scas
mov
outsl
mov
outsl
mov
outsl
mov
mov
outsl
mov
outsl
mov
outsl
mov
mov
mov
outsb
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
in
movsb
insl
outsl
push
sbb
outsl
mov
jnp
sbb
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
inc
xchg
jne
mov
outsb
mov
mov
jnp
sbb
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsb
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
outsl
mov
mov
in
jmp
arpl
and
xchg
xor
test
add
into
xor
cmp
sbb
mov
sbb
bound
mov
add
adc
imul
movsl
jmp
jne
leave
push
shrb
xorb
decb
push
push
push
push
jle
jg
into
pop
xchg
sbb
fisubrl
insl
scas
mov
outsb
jo
pop
bound
pushf
push
jae
lods
add
cwtl
pop
movsl
vprotd
mov
mov
xor
outsl
pop
dec
sbb
gs
jl
cmp
jno
jge
xor
sti
xor
sbbl
push
stos
dec
mov
pop
cmp
test
dec
pop
mov
sub
arpl
aam
movsl
imul
xchg
inc
pop
fnstsw
addl
outsl
jl
pusha
push
mov
xchg
movsl
inc
inc
pushf
inc
push
les
or
std
movsb
push
mov
adc
sbb
push
mov
mov
outsl
and
mov
push
cmpsb
jbe
mov
pushf
or
les
sub
sub
lods
ret
leave
adc
inc
push
add
outsl
dec
jl
push
xchg
mov
outsl
hlt
push
sub
and
test
pushf
orb
pop
lret
add
or
outsb
add
movb
jo
mov
sbb
pop
rcll
popf
mov
sub
hlt
sbb
jb
xchg
push
jl
imul
add
adc
insl
call
outsb
outsl
mov
into
sub
mov
mov
dec
mov
mov
adc
sub
movsb
jbe
cmp
adc
or
inc
cmp
fsts
jb
sbb
mov
push
mov
jmp
je
outsb
jae
sbb
inc
mov
pop
dec
pop
mov
sub
imul
fdivrs
cmpsl
loopne
pop
stos
sub
lret
sub
sti
mov
inc
dec
mov
push
cmpsb
jbe
mov
push
stos
ret
and
mov
mov
fdivs
jae
negb
xchg
mov
and
mov
add
adc
or
jecxz
push
pop
aaa
cmp
push
sub
and
stos
or
jecxz
jbe
cmp
mov
or
outsl
call
sbb
jnp
pop
xor
ljmp
je
imul
clc
jnp
cmpsl
loopne
pop
stos
sub
xor
pop
inc
insb
sti
mov
inc
adc
jbe
mov
cmp
push
mov
jge
rclb
cmp
loopne
cmp
jl
adc
pop
cmp
pop
xchg
jne
pop
outsb
outsl
test
imul
pop
inc
mov
jnp
mov
mov
sbb
add
pop
jb
mov
rclb
mov
mov
dec
push
jb
xchg
dec
mov
push
and
insb
dec
jo
test
or
sbb
jae
mov
and
sbb
jae
ljmp
xchg
dec
sub
push
mov
pop
inc
mov
mov
popf
pop
stos
sub
mov
mov
inc
int3
sti
xchg
and
inc
cmp
mov
fisubrl
xor
ss
sbb
adc
pop
xchg
cmp
push
mov
pushf
and
sub
mov
aaa
popa
push
cmpsb
sub
ret
arpl
ja
or
stos
ss
push
lcall
mov
mov
pop
data16
pop
push
xchg
dec
fcompl
inc
mov
xor
ljmp
je
imul
clc
jnp
cmpsl
loopne
pop
stos
sub
xor
pop
inc
insb
sti
mov
inc
dec
mov
push
mov
dec
xor
std
push
mov
mov
sub
dec
push
pushf
mov
xchg
inc
lods
ss
mov
dec
outsb
cmp
xor
testb
jbe
cmp
or
pushf
inc
push
ss
dec
mov
mov
dec
push
sbb
jae
mov
adc
sub
movsb
jbe
cmp
adc
or
nop
daa
xor
pop
stos
dec
mov
es
push
stos
dec
sub
lods
cmp
push
mov
pop
jle
lcall
pop
xor
outsl
mov
cmp
xor
cli
dec
loop
jbe
cmp
or
mov
insl
mov
mov
fsts
shlb
push
sbb
jae
mov
fnsave
mov
mov
call
or
xor
outsb
outsl
jl
lods
cmp
xor
cli
dec
loop
jbe
cmp
or
mov
push
mov
sbb
mov
xor
jnp
arpl
outsb
shll
sbb
mov
pusha
pushf
cmp
imul
outsl
pushf
insl
andb
outsb
outsl
or
repz
sub
dec
push
ds
outsb
outsl
test
fnsave
xchg
outsl
pushf
popf
xchg
movsl
mov
push
push
fmull
jae
sbb
and
push
les
or
std
rclb
push
and
mov
enter
cmp
mov
lret
push
lcall
and
mov
mov
in
sub
inc
pop
mov
ljmp
xchg
jle
sbb
jp
mov
outsl
fcomps
cmp
add
cmp
test
add
aas
xchg
sbb
mov
nop
sbb
outsl
jl
rcrl
xchg
inc
pop
std
inc
sub
fwait
out
push
dec
sbb
jb
xchg
inc
mov
cmp
inc
dec
sti
mov
inc
dec
mov
push
cmpsb
jbe
mov
ret
into
mov
mov
sub
sub
mov
bound
sbb
jl
lret
jno
pop
pop
les
cmp
mov
cmp
insb
adc
xor
mov
ret
adcl
sub
js
jno
and
outsb
outsl
cwtl
call
dec
pop
mov
sub
imul
aam
adc
dec
bound
sub
ss
sub
mov
xor
out
xchg
rclb
imul
inc
std
popf
outsb
outsl
clc
jmp
lods
mov
dec
pop
mov
sub
imul
aam
adc
dec
mov
xor
and
shlb
dec
out
cmpsl
xchg
jae
cmpsl
inc
pop
into
cmp
xchg
mov
popf
pop
sub
or
sti
popf
imul
inc
ss
pushf
mov
mov
jg
pop
sbb
add
ss
xchg
inc
std
pop
or
inc
adc
and
dec
xor
mov
or
outsb
enter
lcall
xor
xor
stos
addr16
jb
loopne
rcrl
xor
mov
enter
jmp
mov
pop
popf
lods
in
mov
repnz
push
ss
mov
pop
mov
stc
cmp
jle
je
push
insl
lods
mov
jge
push
in
cmp
aaa
push
pop
mov
mov
jp
ficoml
ret
addr16
popf
les
push
jns
cmp
in
aad
cmp
mov
pop
xchg
out
scas
ljmp
repz
mov
and
mov
scas
or
jl
mov
shr
mov
ss
fnstcw
adc
mov
mov
int3
aaa
pop
jl
sbb
inc
mov
aad
or
dec
inc
xchg
scas
jle
sub
out
xchg
incl
push
mov
mov
jmp
fwait
add
push
hlt
or
out
mov
cmp
fs
lods
or
leave
fmull
pop
jecxz
xor
sub
scas
jb
test
in
in
mov
xchg
repz
push
pusha
inc
xchg
inc
out
lret
xor
xchg
sub
data16
xchg
jns
insl
aas
xor
push
jae
mov
mov
mov
cmp
adc
dec
inc
push
mov
imul
fldl
or
out
in
mov
or
push
in
pop
sbb
rolb
sbb
push
push
cmp
adc
jnp
xchg
dec
push
popa
cmp
or
fisubrl
movsb
push
xchg
jp
ja
call
jae
mov
aad
enter
mov
cmp
movsb
add
fsubp
push
xchg
push
inc
cs
sti
inc
inc
out
inc
jns
dec
lret
dec
data16
mov
insb
mov
ret
adc
mov
cmp
dec
ret
cmp
cmp
imul
cmpl
push
adc
jp
pop
cmp
and
in
adc
es
jb
xchg
push
mov
daa
jg
nop
aas
cmc
dec
out
pop
pmulhw
and
orl
outsl
cltd
insb
in
pop
es
cmp
jmp
mov
xor
mov
stos
and
test
adc
xchg
call
daa
mov
loop
mov
mov
xorl
fnstenv
xor
inc
or
inc
imul
pop
mov
add
cmpsl
jl
cmp
add
outsl
push
ja
into
sub
add
jb
out
cltd
fcoml
mov
inc
ljmp
fisttpl
mov
ja
in
add
ss
movsl
mov
push
jno
mov
call
je
incl
push
out
jecxz
arpl
loop
xor
pop
jno
fnsetpm(287
mov
rcrl
lret
push
fwait
arpl
shlb
arpl
es
pop
mov
lock
sub
mov
icebp
cmp
test
and
mov
lahf
xchg
out
pushf
lea
mov
jo
xchg
xchg
loope
pop
mov
inc
imull
mov
pop
jecxz
mov
mov
and
fidivrs
or
add
inc
sub
xor
mov
jmp
mov
sub
adc
fisubs
xorl
push
pop
out
jl
out
out
xchg
add
xchg
lea
inc
sbb
dec
je
rorb
lods
mov
push
dec
int3
jb
xor
fisttps
jno
mov
inc
movsl
cwtl
jge
xchg
jnp
mov
pop
mov
push
mov
mov
rcll
outsb
pop
mov
xchg
roll
dec
roll
pop
sub
or
push
xchg
or
fs
inc
addl
sub
popf
add
and
dec
std
sarb
leave
cmc
sbbl
add
gs
ret
xor
xchg
ret
pushw
ja
hlt
mov
jmp
mov
fwait
or
adc
and
or
cltd
mov
xor
and
push
cmp
dec
pop
sub
xchg
adc
push
xlat
push
lods
fstl
test
add
loopne
xchg
adc
fiaddl
mov
xchg
pop
and
xchg
or
addr16
push
fisubrs
push
aaa
ss
sub
inc
push
adc
bound
sbb
xchg
sbb
loopne
mov
daa
jl
xor
ret
lock
xor
mov
push
pop
mov
in
enter
rclb
xchg
xor
lea
scas
xor
scas
sub
push
sbb
mov
psubsw
sub
cmpsb
loope
push
out
pop
out
push
mov
mov
out
push
pop
sub
push
xor
imul
pop
or
and
enter
fs
dec
push
cmp
pop
add
cs
push
ds
xorb
enter
popa
and
into
cmp
arpl
icebp
xchg
cltd
cmp
movl
add
and
adc
mov
mov
cmp
and
pop
inc
cmp
hlt
add
rolb
int
xchg
xor
cli
jae
addr16
test
pushf
sub
jmp
movsb
lock
jno
pop
arpl
lock
fbstp
mov
pop
add
andl
mov
in
and
and
arpl
pop
inc
sbb
insl
in
test
cmp
xchg
int
sbb
loopne
incb
push
push
lret
mov
adc
mulb
push
xor
daa
cmp
insl
xchg
rol
fidivs
fwait
mov
mov
lcall
sub
ficompl
xchg
mov
pop
clc
pop
dec
or
dec
xor
inc
hlt
xchg
stos
hlt
scas
and
add
bound
mov
cli
mov
dec
or
stos
in
dec
aad
lods
jmp
pop
push
adc
cmc
shrl
push
push
out
dec
sub
jle
movsb
outsb
cwtl
repz
pop
je
jmp
push
nop
imul
mov
jmp
jg
mov
jae
cmpsb
pop
aam
jmp
out
or
call
jbe
add
push
cltd
mov
out
inc
std
mov
cltd
xor
movsl
or
in
aaa
xchg
and
xchg
pushf
dec
pop
xor
mov
data16
pop
sbb
fwait
cmp
lret
add
mov
in
jno
repz
sub
jne
jmp
mov
mov
cwtl
or
mov
adc
out
xor
mov
cmp
es
les
xchg
add
in
adc
in
dec
mov
xchg
fld
loope
jecxz
xchg
cld
inc
int3
lahf
mov
inc
mov
rolb
xchg
jnp
xchg
mov
repz
gs
mov
sub
jb
xchg
dec
inc
cmp
mov
and
cmc
nop
jle
sub
in
js,pt
or
add
hlt
adc
mov
or
mov
jno
mov
adc
scas
adc
mov
or
mov
mov
enter
fwait
test
jbe
insl
push
jecxz
inc
mov
push
pusha
lahf
out
adc
mov
shrb
pop
adc
sbb
ss
icebp
xor
leave
outsl
popa
out
sbb
jbe
enter
inc
pop
and
outsl
sbb
push
mov
dec
cmp
adc
aaa
rclb
dec
and
faddl
and
ja,pt
dec
int3
push
xchg
jecxz
add
mov
add
fsubs
xchg
adc
and
inc
jns
mov
insl
jbe
fnstenv
sbbl
inc
leave
inc
out
mov
clc
subb
cmpsl
pop
int
inc
mov
setb
mov
and
sbb
or
jecxz
in
push
pop
insb
adc
mov
sti
call
fsubs
pop
loop
scas
inc
pusha
test
sub
out
mov
mov
stc
and
pop
add
daa
cmp
xchg
cs
not
push
push
lahf
xchg
scas
aam
sbb
mov
dec
test
mov
icebp
push
xlat
shrl
and
or
dec
pop
pop
fsts
xor
add
fs
sbb
pop
aas
shll
ja
mov
xor
and
mov
call
mov
bound
sbb
imul
popa
jb
lcall
dec
test
test
mov
cmp
mov
push
movsb
add
loope
mov
stc
lahf
pusha
jmp
bound
jg
hlt
pushf
cmp
in
push
inc
dec
das
les
xchg
orb
xchg
mull
pushf
inc
dec
push
rorb
pop
cwtl
pop
mov
mov
lret
dec
inc
in
xchg
mov
jle
xchg
test
mov
push
mov
and
or
adc
fldenv
jmp
loopne
das
outsl
movsl
push
popf
rcrb
gs
pop
lods
mov
cmp
mov
mov
ljmp
hlt
ret
cwtl
outsl
sub
das
adc
add
mov
sbb
loope,pn
cmc
jl
ficompl
push
add
mov
mov
fdivl
cmc
ja
int
push
insl
je
mov
or
pop
xor
add
sbb
cmpsl
push
sbb
fstpt
nop
cltd
pop
stos
lock
fisubl
mov
push
and
xor
into
jmp
or
icebp
inc
ffree
shll
cmp
das
rclb
or
mov
push
hlt
xor
bndldx
and
push
fidivs
out
or
jg
jb
xor
cs
jnp
andl
fldenv
adc
test
popf
jnp
mov
cmpsl
push
cmp
jbe
push
xlat
les
les
mov
loope
test
cli
sub
mov
out
pop
stos
ficomps
mov
xchg
jo
rorl
aam
aam
cmpsb
ds
mov
dec
popf
xchg
stos
jae
pop
dec
xchg
xchg
or
cmp
mov
sbb
bound
in
popf
pop
dec
addl
cmp
or
mov
ds
ja
mov
push
adc
faddl
mov
and
or
and
leave
pop
movsb
pop
pop
or
movsb
mov
push
cmp
addl
outsl
jp
jge
mov
xor
xchg
sbb
push
adc
ljmp
je
jnp
xchg
popf
les
call
scas
fwait
xor
and
xchg
addr16
inc
dec
mov
arpl
inc
adc
or
jg
fidivrs
lea
repz
push
lock
jl
aad
adc
nop
movsl
pop
push
cmp
insb
xchg
jl
test
cmpsl
testb
in
pop
sbb
je
mov
push
in
sahf
and
pop
cs
lret
lcall
insb
outsb
test
inc
sbb
and
dec
es
subl
cld
aas
mov
fbld
mov
mov
popf
sbb
cld
add
fldt
imull
mov
shrb
xchg
pop
out
push
adc
es
sub
aas
push
inc
sub
seto
mov
hlt
cmp
cli
add
scas
pop
iret
inc
call
int3
scas
add
push
mov
xor
pop
js
enter
ret
and
ljmp
inc
inc
xchg
test
and
lret
mov
stos
jge
mov
scas
push
cmp
sbb
adc
jbe
loop
mov
iret
dec
negb
mov
idivb
adc
ret
ret
mov
scas
sub
sub
jmp
cli
and
stos
mov
stos
daa
mov
jmp
sbb
push
fldcw
vmovq
inc
xchg
lock
push
jge
mov
adc
mov
jb
push
push
aas
popf
sbb
add
stos
out
jb
adc
sbb
and
mov
cmpl
pop
or
jbe
mov
xchg
sbb
jo
aad
addr16
cmp
sahf
xor
sti
jbe
mov
mov
fisubl
or
and
stos
mov
loop
jmp
adc
subl
mov
cmc
adc
push
adc
and
in
movb
sub
xorl
mov
inc
pop
add
popa
push
out
das
or
movsl
fcoms
nop
mov
lret
or
bound
lock
and
push
pop
jecxz
xchg
push
paddq
inc
push
es
adc
iret
push
jecxz
push
xchg
shlb
pop
out
mov
pop
sub
push
test
pusha
fldcw
inc
or
cltd
das
in
pop
xchg
rcll
mov
les
or
xchg
mov
dec
lods
pop
xchg
mov
insl
idivb
xchg
outsl
hlt
nop
add
or
movsb
cmp
jmp
add
mulb
test
push
push
xor
dec
add
sub
shrb
inc
fbstp
push
pop
loopne
hlt
repnz
imulb
xchg
sbb
in
add
data16
fsub
add
jg
push
jo
loope
fwait
gs
jmp
aad
pop
nop
lcall
mov
mov
lret
pushf
add
lahf
jge
cmp
adc
and
adc
sub
dec
ret
jge
sbb
dec
mov
and
jbe
xchg
inc
fwait
dec
jle
mov
test
clc
push
scas
jle
lock
rorl
inc
pop
xchg
push
xchg
pop
adc
in
sub
push
out
sbb
pop
pop
jb
in
cs
mov
incb
movl
add
aaa
push
addr16
sbb
add
outsb
loop
scas
nop
subl
cmc
icebp
test
mov
fstpt
cmc
das
shr
in
dec
rcll
cmc
out
cmp
or
jno
sti
rorl
call
roll
push
movsb
leave
scas
daa
push
mov
cli
sbb
data16
sbb
jae
mov
push
jb
dec
xor
repz
int
and
pop
std
xor
adc
fwait
jbe
ret
jb
in
add
sbb
lods
repz
add
push
in
lods
push
out
push
pop
adc
neg
jbe
mov
push
pop
and
out
xchg
mov
call
es
cmp
adc
dec
cmpsl
or
push
pusha
sub
std
into
call
in
jg
xor
je
aaa
push
clc
mov
add
push
jne
ss
pusha
jbe
fsubl
pop
loop
mov
test
out
jne
mov
adc
or
hlt
xchg
cmp
mov
inc
and
sub
xlat
push
mov
data16
pop
push
shlb
aam
inc
movsl
mov
aad
jle
fnstenv
jns
pop
mov
cmp
aas
fmul
pop
mov
in
xlat
cmp
push
mov
insb
or
or
jle
push
stos
adc
xor
lock
imul
je
mov
pop
mov
cmpsb
and
inc
inc
addr16
cmp
icebp
pop
scas
mov
inc
xor
pop
cmp
ljmp
rorl
pop
loopne
out
cld
lahf
loop
adc
add
lods
jno
std
fstpl
dec
ret
dec
int
mov
aad
xchg
rcl
aam
movsb
das
loopne
jg
and
bound
nop
cld
push
fwait
shlb
ja
scas
or
fs
xor
jae
icebp
jbe
pop
into
jp
pop
test
and
lret
sahf
enter
cmpsb
repz
rolb
lret
jnp
lret
sub
cld
pop
pop
mov
loop
mov
adc
jnp
adc
jb
mov
jo
sub
push
mov
mov
cmpsb
push
mov
adc
cmp
dec
pop
jge
aad
out
jns
incb
pusha
dec
loop
and
mov
mov
xchg
push
lock
aam
mov
ror
cmp
sub
jb
test
aaa
stos
lods
push
xor
dec
push
sub
xchg
xchg
rcr
sub
dec
push
dec
lret
in
nop
fwait
adc
test
adc
sbb
aam
xor
iret
test
xchg
mov
xchg
xchg
mov
adc
adc
push
xor
loop
add
pusha
xchg
les
pop
jl
cs
cmpsb
test
jl
dec
adc
aam
lea
adc
fidivrl
fnstcw
push
adc
sub
aam
push
lahf
push
loopne
out
stos
push
bound
sarl
sbb
add
push
scas
jg
out
ljmp
or
jnp
add
mov
pop
scas
pop
subb
fsubr
ds
ss
jmp
push
xchg
in
pop
data16
xor
adc
dec
pop
push
loope
das
or
and
mov
adc
invd
in
mov
fcomip
inc
or
and
gs
pushf
adc
and
pusha
in
inc
es
stos
mov
lcall
scas
pop
xchg
sti
pop
cli
adc
fistl
or
ret
adc
inc
inc
rcrl
into
addr16
ss
cmp
jle
cmp
cli
clc
lock
adc
sub
xchg
push
mov
mov
inc
stc
dec
mov
sub
rcl
xchg
rolb
mov
mov
push
ljmp
xor
mov
stos
push
pop
mov
clc
aaa
mov
test
xchg
push
sbb
in
jp
out
mov
fbld
imul
fs
mov
or
mov
xchg
jb
in
mov
push
cmpsb
mov
cmpsb
dec
or
push
mov
lods
mov
or
sbb
mov
dec
cmp
pop
ja,pn
cmp
push
int3
xchg
pop
das
pop
jno
jo
ja
divl
fiadds
cmp
lods
xor
shll
stos
and
pop
push
rclb
loopne
xchg
js
adc
inc
call
jmp
roll
je
scas
sbb
ljmp
mov
or
stos
ja
cmpsb
add
jae
mov
es
and
vmread
enter
ror
cmp
mov
dec
data16
sbb
and
jge
xchg
roll
cmpsl
adc
iret
fwait
mov
cmp
sbb
adc
in
in
xchg
xor
cmp
pop
icebp
mov
fs
andb
insl
ja
fdivrs
sahf
cmp
ret
add
and
and
cmp
lea
incl
jl
or
pop
inc
sub
cmp
add
mull
xor
jmp
insl
push
pop
testb
mov
mul
mov
negb
adc
cld
cmp
pop
daa
dec
idivl
push
sub
xchg
ret
mov
stos
rorb
pop
ds
into
xor
js
movsb
out
out
and
call
xchg
sbb
in
testl
outsb
xchg
pop
aad
jmp
cs
sub
and
sub
pop
or
sbb
mov
mov
lret
enter
mov
das
jae
imull
pushf
imul
xchg
lahf
clc
cmp
pop
mov
sub
addr16
dec
and
inc
roll
adc
loopne
daa
sarb
test
ds
dec
dec
in
out
sub
xchg
add
pop
cmp
cld
cmpsb
daa
sbb
pop
bnd
ss
adcl
jns
notl
sub
adc
mov
sbb
sbb
iret
mov
pushf
push
outsl
stos
in
xor
bound
inc
jno
cmpl
or
cmpsl
cmpsb
cmc
int
sbb
push
andl
pushf
out
xchg
push
and
das
leave
sub
push
cli
jbe
sbb
xor
jbe
lret
push
xchg
jb,pt
adc
or
or
div
mov
das
pop
pop
mov
cmc
movsl
mov
aaa
inc
cmp
call
rcrb
inc
xchg
ficoml
xor
jnp
dec
es
dec
and
add
rclb
rcrb
aaa
lahf
adc
sub
rcr
jmp
adc
jne
ja
or
cwtl
adc
movsb
jne
call
out
jae
mov
inc
cmc
aad
xor
and
inc
loopne
and
inc
in
out
jne
adc
xor
pop
repnz
pop
and
push
mov
push
popf
dec
adc
lods
push
and
inc
or
mov
std
push
fmuls
add
xchg
insl
mov
jae
imul
iret
sbbl
outsl
cltd
sub
roll
negl
mov
jne
or
inc
push
imul
dec
rorb
push
push
lds
jne
lea
dec
mov
in
loop
aaa
push
fists
sub
or
or
sbb
fiadds
and
xchg
xor
lret
inc
push
push
aaa
bound
jae
jae
or
idivl
sbb
jle
lock
inc
sbb
lods
mov
mov
and
inc
daa
in
adc
fwait
ret
adc
hlt
cmp
inc
jo
xor
ss
aas
jae
pop
xchg
xor
loopne
daa
sbb
filds
adc
adcl
cltd
movsb
xor
rclb
push
ret
lock
mov
sbb
repnz
sub
je
inc
add
mov
test
inc
pusha
jo
mov
jno
sbb
nop
lods
fwait
add
jg
cli
mov
dec
fdivrl
jl
jmp
jmp
iret
push
xchg
jp
push
push
jmp
fs
or
cwtl
inc
cwtl
jecxz
mov
sub
lock
test
popf
pop
imul
mov
jl
test
jns
sub
adc
sbb
adc
imul
loopne
jle
sub
insl
or
or
and
and
addr16
dec
es
shll
jle
jp
andl
adc
mov
cmc
ds
xchg
nop
xchg
in
outsb
dec
ljmp
and
loop
inc
orl
repnz
or
lret
adc
xchg
aam
cwtl
jnp
xor
jmp
mov
xchg
mov
push
iret
or
cs
in
or
imul
sbb
js
xor
lock
movb
mov
and
lcall
jl
dec
add
sbb
repnz
push
and
mov
pop
pop
mov
push
test
stc
bound
add
es
int
xor
sbb
sbbb
mov
mov
pushf
lret
jo
into
xchg
add
sbb
mov
xor
je
pop
mov
imul
xor
lock
adc
mov
mov
cli
sub
js
sub
push
ljmp
stos
dec
sahf
dec
mov
pop
ss
ret
cmpsl
mov
or
or
mov
push
or
xchg
xchg
test
popa
loop
mov
inc
icebp
daa
and
test
xlat
aam
inc
call
push
fimull
imul
cmp
mov
and
sahf
mov
mov
or
lret
int
push
popf
in
in
push
mov
adc
and
jae
push
push
adc
leave
add
adc
or
inc
pop
imul
loop
leave
hlt
lret
pop
scas
sub
add
fidivl
dec
and
icebp
lcall
push
ret
cld
out
push
cmp
loopne
cmp
adc
push
clc
push
scas
xor
mov
dec
inc
mov
fcmove
icebp
cmp
ja
sbb
call
push
push
jo
inc
dec
out
add
pop
jge
ds
stc
cmp
pop
xchg
shrb
adcb
inc
daa
out
popa
into
sahf
dec
dec
push
jecxz
and
xchg
jb
fwait
mov
clc
xlat
cmp
mov
rcrb
int3
push
rcll
mov
rorb
fcmovu
dec
jg
mov
cld
stos
inc
call
out
jecxz
imul
iret
or
jbe
les
sbb
jbe
lret
jge
in
mov
inc
mov
mov
in
in
js
ljmp
jno
mov
fisubl
mov
mov
out
xchg
cmc
inc
shll
cmp
push
cld
subb
in
scas
xchg
cmc
ja
out
pop
dec
and
push
loop
and
cs
cld
xchg
add
pop
push
adc
ja
jne
jge
jns
decb
loop
in
ret
in
mov
adc
imul
dec
xchg
jae
lock
nop
or
fmull
loopne
sarl
jae
addr16
shr
repz
jle
adc
cwtl
jg
negb
add
stos
xchg
subb
rol
xchg
xlat
imul
call
cmovne
cmp
pop
xchg
daa
in
int
adc
test
test
pushf
mov
sahf
aad
xchg
in
push
jns
or
xor
scas
in
pop
xor
sub
mov
data16
nop
dec
pop
adc
add
lea
vpextrw
lds
or
mov
mov
sub
and
mov
fwait
mov
jbe
or
imul
aam
jg
sahf
idivl
xlat
mov
jae
mov
lretw
and
cmp
sbb
js
sahf
and
pop
daa
icebp
popf
test
adc
outsb
xchg
int
out
xor
movsl
push
xor
push
add
clc
and
push
movsl
das
ss
xor
ja
lods
pop
test
into
lea
fimull
push
push
aad
xchg
fidivl
loopne
cwtl
scas
xor
addr16
mov
std
adc
and
push
jg
jb
in
jne
test
xor
mov
adcl
fdivrp
negb
add
adc
in
dec
sbb
xchg
mov
sub
and
inc
push
loopne
and
jmp
lods
test
dec
add
add
mov
jae
sbb
push
dec
mov
shlb
xchg
aad
ds
push
cmpsl
xchg
out
jbe
dec
test
push
xor
mov
pop
dec
pushf
cmp
pushf
mov
sbb
sub
jo
negb
cmp
dec
pop
addl
addr16
sbb
adc
cmpsb
and
xor
cmp
cmp
jmp
xorb
sub
add
cmpsl
roll
aaa
add
dec
ss
test
push
add
jno
loop
jle
fs
sbb
lds
cmove
fdivrs
mov
mov
aaa
adc
mov
push
clc
idivl
sub
out
xchg
and
xor
xchg
dec
mov
repnz
mov
jmp
xor
mov
pop
lods
xlat
dec
push
pop
jecxz
pop
sbb
cmpl
outsb
cmpsb
sub
fisttpl
adcb
pop
mov
push
mov
mov
shlb
in
sub
push
cmp
pop
test
lcall
cld
outsl
pop
mov
arpl
outsl
js
sub
popf
cmpsl
mov
or
ficompl
popa
add
pop
mov
cmpsb
aas
clc
hlt
dec
sbb
lret
cwtl
lret
icebp
sbb
sub
pop
lea
aas
sub
lods
dec
sbb
and
sbb
xchg
jns
mov
lds
mov
cmp
push
add
push
or
outsb
or
lds
inc
gs
xlat
cltd
xor
sub
popa
cmpsl
stos
stc
jae
iret
xchg
xor
jno
mov
bound
popa
xchg
daa
gs
push
jae
or
add
into
test
jecxz
test
repz
pop
aaa
push
push
or
out
cmpsb
or
mov
aam
xor
jl
inc
xchg
adc
jae
ss
shl
xchg
mov
adc
sti
fadds
mov
mov
jge
dec
mov
test
stos
repnz
xor
repnz
movsb
jecxz
lods
test
fists
xchg
sti
pushf
and
jae,pt
aam
nop
mov
hlt
movsb
lock
lret
mov
mov
xor
pushf
xor
es
add
mov
mov
push
dec
adc
jp
jo
mov
lret
negl
scas
add
cld
push
nop
rcr
add
cmp
leave
xchg
imul
push
into
les
fwait
sahf
or
inc
xchg
nop
lds
shll
lcall
add
lahf
cwtl
xchg
xchg
insb
std
test
fdivs
cld
fmul
mov
pop
sbb
sub
in
dec
jb
jnp
push
mov
push
cld
pop
and
push
mov
or
xor
out
aad
xchg
cmp
xchg
shlb
stc
mov
iret
clc
aas
inc
loopne
out
insl
inc
fwait
pop
jbe
jle
sbb
cli
jle
dec
jnp
out
lea
loopne
add
xor
xor
mov
sbb
fidivl
dec
out
and
hlt
or
xor
shll
inc
add
aam
mov
pop
insl
mov
mov
scas
inc
stos
dec
in
lcall
or
and
mov
lret
and
leave
add
adc
dec
or
or
es
hlt
jb
sti
push
adcl
gs
aaa
ss
scas
leave
insb
dec
fwait
pop
out
loop
push
cmpsb
pop
sub
jbe
les
mov
sbb
std
gs
xchg
add
mov
jne
fs
or
orb
mov
mov
movb
arpl
call
push
mov
out
xor
lods
call
push
shlb
mov
adc
popf
in
movsl
movsl
daa
pop
sub
xor
cmp
mov
inc
mov
stos
xchg
xor
mov
jnp
add
pusha
xor
push
inc
jno
and
sub
in
lods
jno
pop
xor
mov
lret
adc
mov
add
lods
mov
adc
inc
or
push
mov
push
adc
sub
fimull
add
lock
mov
fs
dec
xor
xor
std
sbb
test
shrb
or
inc
dec
pushf
repnz
push
mov
push
jmp
shr
icebp
jmp
xchg
leave
in
stos
shrb
xchg
fildll
test
adc
xor
js
and
cmpsl
das
pop
xchg
fcmovnbe
mov
fstl
jbe
fldcw
cwtl
lret
pop
or
jge,pt
adc
popa
mov
stos
stos
out
pop
mov
js
xor
and
cli
loop
mov
call
mov
adc
lahf
fildl
sbb
jbe
lahf
movl
and
or
push
cmp
adc
out
xchg
in
mov
icebp
sub
push
and
jg
dec
pushf
push
imul
jp
cltd
xchg
outsb
out
xlat
xlat
andl
out
call
adc
out
lods
out
add
stos
daa
dec
stos
fwait
jecxz
push
push
xlat
les
ficoml
stc
push
push
inc
nop
pop
ret
cmp
int3
mov
fsubl
cmp
cmovne
adc
in
js
add
mov
xor
sub
scas
aas
pop
shlb
lcall
mov
mov
xchg
jge
and
dec
test
mov
repnz
rorb
jp
fistpl
inc
push
cmp
pop
cmp
xchg
pop
adc
adc
mov
mov
sbbl
push
iret
or
xchg
mov
les
test
push
or
push
hlt
int
arpl
in
cwtl
call
inc
enter
sub
gs
dec
call
jne
adc
sbb
rclb
and
adc
cmp
mov
push
stc
inc
push
popa
test
mov
mov
add
pop
fisubrl
inc
pop
xor
cmpl
incb
push
sbb
cwtl
sub
dec
test
out
xchg
lret
sub
gs
aam
dec
jb
popf
mov
stos
mov
sub
and
jb
cs
int
nop
and
jl
sbb
sti
inc
aam
stos
shl
xor
lret
mov
ds
gs
sub
push
out
clc
hlt
jg
cmp
pop
fiadds
inc
sbb
and
jns
cmp
cld
push
mov
push
jns
jo
adc
cmp
and
jmp
test
cs
fs
jg
add
lock
nop
sahf
mov
xchg
add
int
push
dec
loope
mov
and
loopne
inc
test
add
sti
outsl
cmp
and
out
leave
sub
out
rcll
push
mov
fisubrl
subb
movsl
dec
arpl
arpl
loop
mov
js
ja
adc
iret
pop
fidivrs
ror
mov
push
mov
push
xor
call
scas
xchg
dec
orb
xchg
into
lea
and
jbe
fildl
jbe
out
mov
shlb
das
jle
enter
cltd
mov
aaa
mul
orb
push
jne
sub
fs
stc
lock
xor
push
loope
call
rorl
and
cltd
ja
lock
fwait
lahf
add
sbbl
adc
push
cmp
dec
xlat
test
popf
cmpsb
mov
popf
fs
xor
lret
push
dec
cltd
arpl
cmp
popa
div
call
sbb
mov
in
mov
fnstenv
je
mov
popf
jbe
pop
dec
push
push
int
pop
sbb
out
and
xlat
mov
push
lcall
dec
inc
std
adcb
jne
test
insl
and
fildl
xchg
sahf
ds
jmp
subl
std
clc
stos
sbbb
iret
dec
in
rcll
pop
sbb
inc
dec
cmc
inc
push
addr16
cmpsl
xor
stos
filds
push
cmp
adc
push
mov
nop
out
addb
pop
push
xchg
in
cmp
sbb
inc
jp
bound
push
pop
jge
sbb
xchg
mov
movb
adc
xchg
lock
test
inc
pop
inc
fsubl
xor
mov
jbe
fbstp
arpl
les
push
fbstp
addr16
sahf
into
mov
cmc
dec
bnd
dec
out
push
sti
mov
in
ds
pusha
cmp
jl
aas
clc
mov
push
push
div
cld
mov
mov
int3
fxam
subl
jle
gs
or
or
fs
je
adc
mov
mov
imul
lock
and
add
push
aaa
sub
shlb
xchg
sub
mov
imul
ret
outsl
dec
iret
dec
das
xor
add
enter
pushl
cmp
test
ljmp
test
xlat
add
push
jmp
lods
mull
mov
and
xor
mov
sub
cmpsl
stos
adc
mov
aam
repz
mov
in
jp
jl
add
push
outsl
xchg
jbe
sbb
or
dec
cli
jl
and
arpl
sbb
push
cwtl
jne
mov
push
mov
dec
aas
aad
cmp
std
scas
adc
and
aam
ds
mov
pop
jnp
cmp
dec
pop
testl
loopne
mov
shlb
mov
push
in
mov
push
stos
xchg
fsin
xor
hlt
xorb
gs
pusha
enter
cmp
icebp
mov
or
testl
mov
mov
sahf
adc
into
in
xchg
push
inc
testb
fidivrs
cmp
mov
cwtl
fnstenv
cwtl
ja
testb
loopne
in
pop
mov
test
inc
test
lock
xchg
mov
out
pop
cmp
ror
cmp
jl
sbb
xchg
push
movsl
test
dec
jge
xor
bnd
lea
clc
mov
sbb
xor
loop
loope
xchg
jge
inc
outsl
aas
add
cmp
in
add
imul
cmc
sahf
mov
jae
js
dec
jo
lret
cwtl
add
sub
adc
lahf
pop
scas
out
es
jbe
cs
rclb
xor
cwtl
es
cmp
ljmp
cmpsl
add
mov
jmp
pop
lret
sbb
cmpsl
stos
xchg
fimuls
sbb
loop
daa
imul
mov
jg
test
mov
sti
icebp
shll
fldl
dec
adc
add
cwtl
adc
addr16
les
cmp
sub
lock
in
dec
sub
scas
xor
dec
pusha
push
subl
push
pop
pop
stos
and
push
dec
cmp
mov
clc
cmp
sbb
movsb
push
lcall
cmpsl
mov
stos
ret
cmpsl
and
mov
adc
jp
and
test
mov
pop
sbb
pop
pop
js
jmp
push
cmp
fists
push
push
inc
jb
push
mov
jb
in
mov
mov
xchg
andb
add
mov
lahf
cmp
jns
dec
mov
sbb
cmpsl
pop
int
fwait
mov
push
jecxz
xchg
scas
adc
out
leave
stos
push
ja
dec
cmp
sub
and
push
push
imul
adc
orl
dec
jp
mov
ficoml
daa
adc
fs
push
push
sub
mov
iret
pop
mov
push
xor
fdiv
out
xor
jo
jae
jo
inc
jb
mov
jmp
lret
add
repnz
mov
out
cs
in
enter
cmpsl
fs
es
cmp
dec
add
dec
mov
out
addr16
lret
aad
rcll
push
jmp
add
cld
ret
xor
sub
sub
aam
inc
push
lret
push
cltd
xor
pop
cmp
shrb
int3
stos
jne
xor
adc
xor
jmp
enter
out
mov
adc
loopne
dec
repz
xor
mov
and
out
icebp
rolb
pop
push
out
fisubrs
jle
mov
addr16
add
js
mov
mov
mov
cmp
shl
imul
mov
inc
cmp
sub
mov
popf
loopne
mov
pusha
jg
jns
pop
andb
cmpl
jge
mov
fcoms
dec
imul
dec
sbb
xor
cmpb
jae
stos
inc
test
xchg
or
in
dec
stc
fistpl
and
jnp
call
inc
popa
ja
xlat
mul
imul
add
adc
fs
mov
add
dec
hlt
loope
jne
push
fisttpll
mov
mov
test
loop
out
jmp
and
shll
dec
and
jmp
adcb
or
jmp
push
adc
add
mov
in
int
and
push
icebp
xor
xor
dec
mov
jle
xchg
mov
sbb
jb
repz
inc
out
les
insl
loope
xchg
addr16
jns
sbb
ja
sub
shrb
insb
outsl
stc
add
adc
inc
dec
or
repnz
push
mov
into
xor
js
popf
data16
fistps
ja
and
orb
lret
pop
decl
mov
or
cwtl
xor
gs
mov
sub
inc
mov
add
pop
push
pop
jo
pop
test
clc
ljmp
add
jp
push
dec
loope
jo
fnstenv
mov
fptan
push
or
leave
pop
cltd
mov
mov
rcrl
and
jns
adc
sti
lret
or
insl
sbb
iret
and
and
imul
movsb
cltd
or
mov
xchg
push
sbb
cltd
mov
and
mov
js
sarl
jl
icebp
adc
mov
mov
orb
movsb
call
xchg
and
inc
push
sar
stc
enter
jno
popa
dec
pop
ss
into
cmc
lret
mov
and
xor
cmpsl
mov
leave
mov
or
cmp
insb
ds
xchg
push
add
cmp
jo
lock
jg
pop
roll
int3
jno
test
xor
ds
adc
popf
movsb
mov
cwtl
sbb
add
dec
cwtl
sub
xchg
fidivs
int
daa
jne
xlat
dec
nop
add
cmpsl
aam
in
pop
mov
xchg
repz
cmp
sub
ret
mull
xchg
jnp
popa
movb
mov
cwtl
stos
fs
sub
cli
fldcw
arpl
scas
lret
push
xor
fcmovnb
inc
mov
stos
lret
test
jle
sahf
inc
pop
push
icebp
mov
mov
jns
xor
add
fnsave
sti
repz
pop
pop
div
mov
aad
pusha
lahf
push
mov
mov
pop
xchg
fcmovnu
jo
bswap
aaa
cwtl
and
mov
popa
cmp
cs
push
dec
icebp
testb
movb
and
sbb
mov
push
push
sub
jp
pop
fadds
or
in
mov
push
push
xchg
mov
push
or
sub
scas
dec
xor
test
push
hlt
fildll
add
sar
inc
inc
fcoml
inc
roll
scas
test
jle
mov
add
dec
sbb
dec
push
movsl
iret
jecxz
jae
jnp
dec
sub
scas
jns
lods
movsl
xchg
nop
dec
scas
pop
push
adc
pop
scas
jmp
xchg
ret
and
in
shlb
xor
push
mov
repz
sub
cmp
push
and
movsb
adc
jle
jb
dec
and
movsl
cmp
cmpsb
add
dec
cmpsb
repz
ret
mov
fnstenv
sar
aaa
subl
mov
pusha
loope
mov
mov
xchg
shrl
jae
outsb
cli
stos
xchg
hlt
movsl
sub
push
icebp
jle,pn
mov
inc
sbb
cmove
outsl
mov
lahf
dec
dec
inc
add
cmc
or
push
jae
pop
xlat
xor
mov
push
js
push
int3
dec
das
xor
popa
jns
sarb
outsl
add
pop
inc
mov
mull
push
adc
test
sarb
or
jae
mov
sub
mov
movsl
and
call
notb
insb
push
jno
loope
push
insl
outsl
sbb
xor
pop
sub
xorl
and
push
shll
sub
fidivrs
into
cli
mov
push
jp
pusha
in
notb
xor
push
fsts
fsubrl
gs
out
aad
out
jecxz
lods
adc
push
stc
push
nop
and
xor
pop
fcmove
jno
cmp
inc
std
lock
inc
fs
push
xlat
cmp
lret
repnz
and
mov
sahf
fs
inc
insl
inc
ficoms
cmp
loope
ficoms
jne
fs
adc
stos
out
lds
in
adc
insb
cmp
fwait
xchg
jmp
out
mov
dec
lcall
rcrb
cmpsb
xchg
pusha
sub
in
dec
leave
add
and
mov
cmpsb
jne
cld
dec
dec
fs
jge
push
dec
sub
sub
out
xchg
leave
pop
arpl
cmp
mov
add
pop
mov
push
sub
loopne
ret
arpl
daa
lea
inc
in
adc
cmp
fbld
fnstcw
mov
iret
loop
popf
push
mov
in
sarl
jne
cli
insb
or
xchg
sub
in
or
sub
or
xor
aad
test
ss
mov
sbb
fbld
std
dec
sbb
sub
mov
aas
push
and
sub
loop
orl
xchg
sar
dec
pushf
lea
sbb
jb
dec
adc
fiaddl
pop
push
jns
mov
inc
jmp
sub
hlt
mov
sbb
sub
xor
push
test
test
jmp
cmc
mov
shll
cmp
xor
fisttpll
cmc
movsl
aas
xor
adc
and
or
dec
mov
test
push
addl
or
test
xor
jge
fs
popf
inc
test
or
push
xlat
pop
leave
push
scas
inc
jl
mov
cmp
ds
cld
inc
out
pop
cmp
adc
push
push
testl
popa
push
xor
pop
cmp
clc
inc
test
imul
jno
push
out
add
iret
or
insl
dec
fwait
pop
fstpl
mov
dec
adc
add
movsb
pop
mov
xchg
gs
movsb
stos
popf
pand
mov
jg
ds
xor
add
imul
sbb
sub
jno
pusha
scas
sahf
dec
cmp
call
jb
loope
or
add
push
fdivl
mov
pop
sarb
movsb
push
push
fidivrs
std
ljmp
mov
leave
je
mov
sub
xchg
inc
pop
push
pop
daa
and
mov
inc
sbb
inc
jp
repnz
add
and
loop
stos
cmpsb
out
and
and
mov
rorl
mov
mov
lahf
call
xchg
mov
xor
xor
shlb
out
mov
ss
pop
pop
push
and
imul
pop
dec
and
cmp
insb
pop
insl
out
jle
outsb
mov
sbb
mov
pop
aaa
mov
lea
call
jg
add
mov
mov
mov
pop
inc
test
gs
ret
and
push
aam
and
cs
or
lret
lcall
fnstsw
push
cld
leave
call
pop
mov
ss
sbb
dec
sarl
or
jbe
jmp
das
xorl
imul
and
pop
out
adc
or
jl
shll
jns
outsl
push
sahf
inc
xchg
sbb
xchg
pushf
pop
roll
int3
inc
fistps
rclb
pusha
adc
add
adc
jl
cs
popa
dec
loopne
inc
push
lods
jo
fldt
cmc
icebp
sub
mov
fildll
rcll
std
ds
xchg
test
dec
arpl
sub
add
cltd
leave
push
sti
lock
jecxz
outsl
in
xorb
in
ficoms
outsb
add
ja
or
mov
push
pop
in
xchg
cld
adc
inc
lds
jp
push
lods
jnp
fldenv
cmpl
scas
loopne
jbe
pusha
mov
sti
fldenv
xor
sbbb
les
iret
mov
inc
pop
cmpsl
lahf
addr16
xchg
popa
push
inc
sbb
xchg
inc
cmp
loopne
xor
decl
dec
xchg
sub
adc
inc
xchg
pop
xlat
cltd
fucom
andb
jecxz
and
hlt
testb
pop
cmp
pushf
daa
in
mov
push
and
xor
inc
mov
and
add
ret
testb
ret
ja
jg
insl
mov
add
sbb
mov
jno
dec
push
inc
xchg
in
icebp
xchg
std
movsl
adc
lea
insb
enter
addl
pop
rcrl
fisttpll
jbe
mov
pop
adc
rcl
mov
xor
out
xchg
fnstcw
jle
or
dec
push
add
hlt
js
clc
sbb
and
aaa
mov
dec
cmp
dec
adc
mov
sbb
mov
xchg
inc
push
lret
push
or
mov
sub
cmc
push
arpl
pop
mov
cmc
mov
cs
imulb
or
and
xor
fwait
arpl
es
call
sahf
fidivrs
in
outsl
cmp
loop
cltd
stos
jb
xchg
adc
je
sahf
lds
mov
pushf
loop
jecxz
dec
negb
push
pusha
and
scas
loope
fwait
xchg
dec
aaa
jl
push
sbb
jne
cwtl
inc
je
dec
decb
push
inc
in
inc
jb
aad
sub
das
cmpsb
insb
mov
xorb
je
mov
add
xchg
mov
in
aas
xchg
or
dec
dec
es
arpl
int3
pop
lahf
or
sbbb
enter
xchg
and
icebp
sub
xor
sahf
pop
mov
or
aad
es
ja
cld
add
fs
inc
push
mov
cli
pop
mov
mov
imul
daa
je
jnp
loopne
in
xlat
in
jae
fcmove
xchg
push
lock
cmpsb
sub
mov
fmuls
scas
mov
pusha
fiadds
mov
mov
fwait
mov
xlat
sbb
inc
idivb
dec
stc
repz
mov
out
push
inc
orb
cmc
pop
iret
add
test
sub
test
mov
mov
xchg
pop
xchg
lods
outsl
adc
pushf
and
insl
fld
clc
dec
mov
sbb
and
or
jo
inc
out
push
xor
mov
fsubr
xchg
test
and
add
inc
test
movsl
add
push
cli
pop
add
xchg
cs
add
and
in
xor
clc
dec
popf
in
cmp
lea
and
add
dec
les
decl
movsl
loop
nop
iret
gs
ja
pop
decl
sub
outsl
sbb
les
push
cmpsl
aas
sub
adc
lea
xor
push
sub
cmp
cmp
pop
pop
jl
imul
and
lods
test
notb
mov
mov
pop
inc
add
stos
push
jge
adc
fisubs
scas
mov
pop
jns
ret
adc
cmc
sub
jmp
lahf
filds
adc
outsb
inc
mov
arpl
jl
sub
ror
mov
addr16
repnz
push
mov
aaa
inc
fistps
jo
test
xchg
adc
xchg
or
cmp
enter
push
adc
sbb
sub
push
push
jbe
add
xorl
test
lea
adc
lods
push
ret
add
mov
add
je
jp
dec
loope
je
mov
push
adc
dec
jg
sub
sub
rcrb
and
mov
xchg
push
arpl
adc
notl
sti
mov
hlt
rorb
xchg
cld
bound
repnz
pop
sbb
neg
daa
or
and
repnz
mov
icebp
xchg
enter
pop
int3
ret
jnp
popf
pusha
inc
lods
jecxz
cld
inc
push
mov
movsb
out
cmp
add
push
sbb
jl
mov
xchg
inc
and
mov
dec
icebp
hlt
pushf
das
aaa
jmp
sahf
push
jp
push
cmpsl
stc
mov
mov
sbb
fwait
loope
fcoml
xchg
and
cmp
and
cmpsb
and
push
mov
add
stc
into
sub
mov
movsl
pop
or
in
cwtl
xchg
testl
lea
je
test
add
jg
jb
das
mov
cltd
das
cmc
push
add
push
xchg
push
pusha
xor
cld
loope
dec
divb
or
push
mov
jle
bnd
mov
out
xchg
adc
dec
gs
mov
sub
dec
xor
fiaddl
dec
jl
xor
das
xchg
mov
mov
ja
mov
mov
hlt
push
pop
fnstcw
push
adc
and
aad
xchg
xor
repnz
push
hlt
xchg
cld
push
jg
ss
and
nop
xor
jno
icebp
sti
mov
xchg
clc
lret
pop
sub
divb
addr16
lods
sti
cmp
pushf
dec
in
mov
dec
int
cmp
in
popf
sar
push
push
mov
mov
lahf
cmpsl
push
inc
sub
enter
popa
adc
adc
push
pop
cwtl
rolb
push
les
addr16
jp
loop
int3
jmp
lcall
cmp
std
flds
nop
clc
cli
repnz
mov
xor
out
push
xchg
adc
xlat
int3
dec
loopne
and
ds
xor
repnz
in
ljmp
mov
pop
sbb
sbb
xchg
mov
push
jnp
xor
lret
cmpsb
enter
cmpsb
xchg
mov
jl
into
iret
mov
jl
ficomps
or
mov
and
loope
adc
sub
push
fsub
shlb
inc
jmp
jne
ret
and
add
fsubs
sbb
push
pusha
shl
fisttpl
sub
sahf
dec
adc
cmp
jnp
ret
adc
dec
loop
stc
push
sarl
lock
pop
jne
test
jo
mov
push
sbb
and
leave
repnz
movsl
sbb
mov
inc
outsl
mov
les
jecxz
and
jecxz
adc
icebp
xchg
add
pop
pop
fldcw
mov
fidivrl
and
ror
lods
loop
jmp
popa
cmp
repnz
jno
ljmp
loop
pop
push
mov
sbb
mov
push
out
cmp
cld
out
sar
hlt
lret
xor
jmp
movzwl
pop
dec
inc
pop
bound
xlat
inc
push
cmp
xlat
mov
idiv
in
shll
jmp
sub
in
jecxz
lcall
ja
xlat
test
or
adc
xor
stos
add
sbb
xor
sti
xor
pop
sti
test
cs
fimuls
mov
lret
xchg
sub
dec
shr
sub
dec
xchg
sub
sub
ja
or
xor
cmp
dec
inc
xor
daa
inc
push
mov
dec
and
inc
pop
repz
dec
movsl
add
and
fisubrs
fdivrs
pop
je
lods
jo
adc
test
jne
mov
scas
mov
icebp
cld
xchg
enter
xchg
xor
push
ja
jno
xor
rolb
leave
xchg
hlt
repnz
fnsave
cmpsl
cmp
mov
mov
sar
pop
sbb
rorl
out
ret
call
or
adc
sbb
sbb
push
insb
je
xchg
pop
outsl
mov
push
loope
fxch
out
pop
das
push
add
pop
xchg
ret
xchg
jge
dec
xchg
mov
fisttpl
or
std
or
sbb
stc
movsl
xor
jae
cli
fldl
in
pop
stc
lea
lret
or
mov
cmp
idiv
leave
add
adc
and
gs
mov
clc
xchg
push
nop
arpl
xchg
lock
aas
adc
xchg
test
cli
mov
dec
pop
mov
add
in
pop
xchg
mull
fstl
aad
push
bound
sarb
fimull
stos
pop
inc
sbb
jge
cli
stos
push
or
or
xchg
mov
inc
aad
lahf
fst
xor
mov
scas
arpl
mov
inc
xor
and
sbb
adc
add
shrl
movsb
subl
mov
add
jecxz
lret
push
call
mov
dec
dec
shll
pop
les
int3
ss
in
add
pop
xorb
cmp
dec
enter
es
int3
push
bound
cmpl
mov
push
mov
inc
enter
pop
mov
xchg
fstps
lods
sbb
adc
or
inc
mov
jmp
aam
repnz
push
cmp
mov
sub
loope
inc
das
cmpsl
les
stc
mov
sar
sbb
test
es
pusha
adc
outsl
sub
lea
xchg
cs
xor
pop
mov
push
aad
std
aad
iret
adc
incb
fiaddl
nop
popf
sbb
xchg
jecxz
cmpsb
insb
mov
loop
inc
scas
inc
insl
in
in
xchg
pusha
lods
rep
js
add
jmp
and
out
inc
cmpsb
push
inc
into
jmp
cmp
dec
or
pop
gs
jp
int3
sahf
jmp
mov
es
lea
mov
inc
dec
mov
xchg
pop
inc
jnp
mov
sub
lods
push
les
add
loope
notb
test
std
lcall
je
push
in
mov
sbb
jns
loope
fbstp
adc
pop
xchg
fnstcw
stos
imul
inc
aad
xchg
xor
iret
jbe
xchg
shlb
push
sbb
insl
loope
inc
fistl
adc
sarl
test
xor
push
push
adc
xor
pop
hlt
or
jnp
lds
cmpsb
arpl
sub
sub
and
icebp
jecxz
gs
pop
stos
loopne
inc
or
rcll
jns,pt
pop
lock
test
sbb
clc
mov
clc
cmp
cmp
lods
rep
or
lahf
jmp
scas
dec
mov
jo
jns
hlt
and
add
fsqrt
and
xor
add
inc
jnp
lock
and
out
out
adc
ja
ja
mov
arpl
jmp
jne
lock
push
cltd
jo
add
lds
mov
fadd
aaa
out
pushf
out
loope
jle
xor
ret
ljmp
push
mov
movsb
inc
cmp
loope
pop
enter
jae
mov
pusha
pop
add
adc
jo
cld
loope
sbb
gs
outsb
add
jge,pn
sub
mov
out
mov
shrb
lret
ljmp
fmull
mov
cmpsb
lcall
addr16
mov
loop
mov
cmp
push
jge
out
in
sbb
push
sbb
sub
cmpsb
test
in
inc
mov
in
pushf
out
andb
or
and
repz
ja
xchg
jle
push
and
enter
cmp
xchg
test
sarl
addl
xor
or
shlb
adc
pushf
sbb
inc
jne
lret
shr
in
lret
cmp
jge
inc
jl
lods
jle
fnstsw
or
ret
les
shll
sub
js
icebp
cmp
lds
pop
pop
fiaddl
pop
stos
xorl
repz
jnp
inc
pop
mov
insb
gs
cli
inc
jb
js
stos
or
rcrb
out
pop
inc
jecxz
rcll
or
test
cltd
fwait
aas
dec
adc
lret
enter
std
incl
in
inc
stos
sbb
dec
fimull
dec
mov
sbb
inc
push
mov
arpl
in
sbb
fmul
or
cmp
push
call
mov
pop
out
xor
call
mov
stos
pop
repnz
cmp
adc
adcl
into
call
dec
or
insb
jecxz
or
push
imul
clc
push
add
mov
repz
test
add
cld
dec
cmp
leave
xor
jmp
iret
xor
test
mulb
xor
shrd
les
and
mov
cltd
add
int3
sbb
or
jb
rcll
lock
call
add
pop
ss
dec
mov
ljmp
mulb
insb
stos
mov
jns
test
push
sahf
sarb
mov
push
xor
les
jge
mov
add
shll
and
add
cmp
cmp
pop
ficoml
jnp
push
loopne
insb
xchg
repz
sub
sub
pcmpgtd
sub
scas
aas
aad
sub
test
sub
xor
jecxz
sbb
sbb
sub
test
pushf
pop
jbe
stc
adc
push
stc
and
mov
mov
and
fcmovnu
cwtl
js
push
scas
enter
pop
repz
jnp
lea
test
out
in
pop
loopne
jle
add
dec
aam
mov
jns
jbe
pop
or
inc
sahf
sahf
mul
xor
push
dec
cltd
in
inc
les
and
js
mov
ret
pop
jne
outsb
xor
enter
push
andb
mov
outsb
xor
jge
je
add
inc
loope
insl
xchg
mov
mov
or
repnz
sti
jle
mov
subl
jo
and
adc
mov
pushf
loop
pop
inc
inc
xchg
push
xchg
add
jb
mov
xchg
fwait
rcr
into
dec
testl
add
adcb
scas
insl
adc
subl
mov
cs
push
cltd
or
adc
dec
adc
or
xchg
aas
ja
loopne
adc
popa
xor
scas
lcall
jge
iret
jae
pop
popf
mov
or
adcb
push
mov
mov
inc
inc
les
iret
dec
sbb
out
mov
jmp
cmp
xchg
cli
in
pop
fidivl
sahf
rol
jo
fucomi
test
rolb
mov
push
dec
adc
jns
adc
sbbb
outsl
xchg
cmc
pop
cli
loopne
mov
rcll
xlat
or
push
and
pop
shlb
aam
push
dec
mov
stc
insb
int
mov
or
mov
jnp
jg
and
bound
stos
and
movsl
mov
jae
imul
adc
roll
jp
adc
mov
add
mov
loopne
jmp
cmp
xchg
push
aas
push
aam
mov
mov
inc
sub
call
outsl
push
push
add
jmp
push
or
nop
mov
arpl
fxch
push
pop
ss
mov
ss
adc
out
arpl
push
cmpsb
out
mov
sbb
inc
sbb
scas
mov
in
mov
and
repnz
aad
or
push
fldenv
imul
popa
mov
and
xchg
or
jne
enter
ja
mov
push
push
dec
fbstp
mov
mov
mov
cmp
or
mov
ror
and
adc
cmp
lret
stc
pop
aaa
lahf
cmp
rcrl
test
mov
add
pushf
sarb
mov
lea
fistl
outsl
cmp
pop
or
and
jle
jno
mov
nop
imul
aaa
loope
inc
das
pop
push
in
cltd
std
pop
mov
mov
jg
dec
ljmp
add
fwait
rorl
and
pop
aaa
insl
andl
addb
testb
sub
cmp
jae
imul
test
hlt
xchg
jmp
add
xchg
mov
push
push
in
and
rorl
adc
and
in
lret
dec
repz
adc
jo
push
fcompp
mov
xchg
sti
clc
int
push
jns
fdivl
mov
jo
push
mov
ja
test
add
and
and
loopne
mov
mov
mov
mov
inc
and
dec
pop
pop
mov
push
jecxz
jb
lret
jge
xor
roll
das
xchg
pop
fwait
aaa
jg
xor
lret
xor
lea
lret
aad
mov
int3
mov
xor
sbb
inc
add
cmc
fmuls
dec
mov
xchg
or
pop
inc
popf
cmpsb
and
paddq
stc
and
cwtl
aam
jo
xchg
lret
sub
cltd
ret
mov
fbld
dec
loope
dec
fstpl
pop
and
cltd
in
sti
scas
test
and
into
adc
cmp
pop
adc
cmpsl
hlt
or
jg
dec
jo
andl
xor
mov
ljmp
cmc
hlt
icebp
mov
and
dec
add
loop
adc
dec
inc
mov
mov
xchg
mov
mov
lods
push
lods
xchg
xor
and
pop
push
popa
add
loop
mov
fwait
out
or
lahf
mov
cwtl
mov
mov
lock
cmp
cs
jbe
jp
test
out
lahf
test
loopne
out
or
fdivrp
repnz
pop
jle
cmp
mov
xchg
gs
stc
jo
insb
out
push
sbb
dec
out
repz
into
and
in
sub
xor
dec
inc
imul
pop
cli
jbe
and
push
dec
inc
test
add
paddsw
inc
adc
in
imul
cmpsb
xor
jbe
or
add
ret
mov
fwait
mov
sbb
sub
imull
sbb
stos
mov
sahf
cmp
fisubl
jno
sahf
jecxz
inc
repz
lcall
ss
inc
leave
jns
ds
out
push
sub
frstor
inc
ret
mov
rorl
mov
mov
xchg
adc
inc
imul
xor
rorb
or
inc
push
jl
mov
cltd
imul
xchg
and
scas
lcall
leave
jbe
or
jmp
lret
in
cmp
cmpsb
pop
lahf
cs
fsubrl
ret
mov
push
in
dec
subl
dec
arpl
cmpps
daa
hlt
mov
dec
xchg
test
fisubs
pop
cld
xor
insb
bsf
jg
xor
movhps
cmp
inc
jnp
sub
xor
xchg
cld
mov
scas
popa
fcoml
cli
inc
push
jae
mov
mov
pop
fwait
sbb
push
negb
cmpsb
mov
cltd
jnp
dec
add
sub
inc
xchg
int3
std
lods
loop,pt
cmp
rcrl
push
jb
in
fldcw
xor
cmp
ret
mov
frstor
pop
sbb
cli
or
nop
lret
scas
test
mov
xor
inc
lock
inc
decl
sub
adc
xchg
cmpsl
cltd
ljmp
mov
lock
jle
stc
jmp
scas
or
adc
rcll
xor
add
insl
jg
pop
aaa
fistpl
sbb
pop
popf
out
mov
ret
cmp
inc
sub
stc
adc
push
sahf
mov
lock
mov
pop
push
popf
fadd
adc
cs
jp
jp
xchg
dec
sub
test
sbb
popa
lahf
in
sbb
dec
daa
or
fisubrl
fst
sub
sbb
push
sub
rcrl
adcl
adc
cmp
pop
loopne
outsb
ja
les
inc
data16
lock
imul
inc
and
xchg
lods
inc
int3
lcall
mov
and
in
sub
mov
pop
dec
push
jle
mov
pushf
aas
je
lret
mov
lods
fsts
adc
addr16
or
sbb
xor
insl
or
and
or
xor
mov
outsb
jno,pn
push
sbb
in
dec
jmp
imul
cmp
fstps
arpl
in
fildll
push
pop
adc
jns
push
add
inc
and
ficoml
nop
test
lcall
adc
push
sub
sub
lds
cwtl
add
fs
andb
jl
adc
sbb
inc
cmp
push
xchg
jmp
fistpl
test
mov
inc
test
mov
addb
cld
mov
push
fxch
cmp
mov
push
jb
adc
sub
adc
repnz
push
ja
rclb
add
lcall
push
stos
push
insl
daa
mov
cmp
or
adc
icebp
popa
movsb
or
aaa
or
bound
sbb
adc
cmp
add
lock
xor
shll
xor
mov
inc
mov
xor
call
sbb
adc
ss
shlb
aam
jecxz
fistps
cmp
rorb
idivb
push
in
xchg
inc
mov
pop
in
push
lret
xchg
ss
mov
aas
xor
mov
sahf
cmovb
sbb
push
jecxz
pusha
mov
or
cmp
sub
dec
cwtl
pop
inc
and
and
push
fldcw
sbb
adc
call
fildll
cltd
leave
fisttps
shl
or
test
stos
ljmp
sub
inc
stc
lahf
outsb
dec
jl
pop
mov
into
fcomip
popf
lods
test
sub
lods
mov
dec
push
or
popa
je
mov
out
test
popf
mov
sahf
dec
mov
cltd
mov
push
xchg
and
cwtl
aad
shll
cmpsb
je
jge
pandn
xchg
stc
push
arpl
lret
pop
rorl
call
les
push
sub
jae
mov
aad
daa
lock
sub
je
adc
xchg
mov
jp
and
and
push
bound
imul
xchg
inc
mov
mov
scas
das
stos
test
or
push
in
sbb
lcall
test
xchg
dec
test
aas
mull
mov
inc
xlat
push
inc
dec
push
sub
jl
in
enter
loope
scas
ret
sub
js
jbe
xor
pop
xor
mov
or
sub
pop
mov
arpl
popf
adc
bound
pop
enter
sub
jmp
push
fimuls
mov
inc
push
imul
idivl
jp
dec
lods
popa
mov
sub
js
rclb
mov
inc
xor
inc
mov
push
fildll
jge
lret
xor
add
loopne
mov
lea
cmp
jmp
aam
push
xchg
test
push
ja
aam
adc
inc
jle
sub
xchg
mov
mov
lods
mov
shrb
inc
push
jne
popf
out
popf
faddp
stc
popf
xor
movaps
jns
push
fistl
mov
mov
xor
addl
fs
mov
cmp
push
out
lret
cmp
div
fistl
jno
std
cmp
mov
lods
mov
es
mov
mov
fsts
stc
mov
ss
pop
in
je
sbbl
das
ljmp
sub
jb
xor
add
push
add
jns
lock
int
pop
lods
insb
pop
mov
imul
aad
push
sbb
add
sahf
pop
jne
cmp
in
scas
jl
das
aam
push
lret
ja
dec
into
cmp
xchg
adc
push
dec
pushf
andb
push
cmp
cmp
aam
and
jmp
fwait
xchg
jecxz
movsl
cmp
or
add
cwtl
mov
add
loope
shlb
shrb
sbb
dec
std
and
dec
sbb
dec
jb
add
sub
fdivs
cli
jnp
hlt
lods
jno
sbb
push
jae
and
cmp
sar
fisubrs
rcl
test
mov
es
dec
stos
lret
into
mov
push
add
fs
fcompl
pop
mov
stos
cmp
or
mov
pop
fsubl
cltd
imul
mov
xlat
leave
dec
mov
mov
push
push
xchg
sarb
dec
pushf
sti
add
ds
test
fsubrs
aam
pop
push
ret
sbb
mov
fstpt
ss
ret
pop
dec
out
popa
mov
pop
xchg
fisttpl
daa
jle
pop
test
pop
xchg
jecxz
xchg
sub
cli
pusha
es
add
cmp
pop
pop
pop
mov
cmp
jecxz
mov
adc
mov
push
ret
pushf
jae
xor
sbb
sub
pop
jns
inc
mov
popf
mov
cmp
mov
inc
shrl
aas
ret
push
sbb
mov
pushf
into
inc
push
pop
xchg
rolb
hlt
ljmp
xor
sub
sbb
jl
fs
shlb
add
push
xchg
sahf
xchg
lret
jle
loope
dec
sbb
test
loop
adc
xor
jb
ret
cmp
jmp
fsubrl
movsb
stos
sub
insl
jb
jg
adc
sbb
sub
mov
aas
nop
mov
inc
ja
push
inc
jmp
lods
xlat
mov
std
out
xorl
mov
jne
out
outsl
shlb
jle
imul
adc
pop
mov
add
dec
in
jmp
call
iret
mov
xchg
ret
mov
imul
test
fiaddl
scas
out
jns
or
jp
enter
xor
pusha
out
xchg
lods
pusha
inc
sbb
or
out
loop
xlat
fwait
dec
pushf
jb
cltd
arpl
and
call
popf
jmp
or
xchg
aad
cmp
pusha
and
or
popf
jmp
xchg
mov
clc
or
push
add
jno
dec
lcall
sarl
out
sub
mov
addr16
mov
outsb
leave
jnp
xchg
cmp
cmp
enter
ljmp
cmp
adc
mov
jno
and
pop
test
aad
outsb
mov
jne
adc
mov
addr16
test
outsb
sub
sub
xchg
sub
jne
mov
pop
mov
loop
imul
dec
inc
out
xchg
cmp
jne
fwait
pop
inc
inc
sub
xchg
clc
aas
hlt
es
mov
rorb
call
mov
scas
aad
mov
daa
fmuls
mov
pop
inc
shll
dec
je
in
aad
inc
add
cmp
mov
test
subb
sbb
aaa
fnstcw
cmp
and
out
dec
mov
inc
adc
bound
xchg
mov
ds
add
jecxz
mov
sbb
cltd
pop
or
add
adc
lock
cli
xchg
push
mov
mov
xor
add
insl
outsb
incl
jecxz
sbb
xor
inc
sahf
in
in
scas
mov
scas
xchg
inc
jle
iret
cmp
push
add
jae
in
xor
sbb
orl
cs
jmp
loopne
icebp
sub
outsl
out
clc
mov
mov
dec
mov
aad
and
dec
out
or
or
hlt
add
mov
mov
test
fimull
insb
jle
mov
test
cmpsl
jmp
xchg
xor
mov
mov
mov
push
fwait
insb
pop
pop
popf
stos
out
push
out
inc
jmp
jbe
mov
fiadds
fistpll
sbb
inc
inc
cmpsb
fiaddl
call
ret
mov
sub
aam
add
mov
std
cmp
in
fst
adc
push
mov
dec
lea
lock
dec
das
out
push
out
pop
lret
cld
sbbb
mov
outsl
mov
stos
repnz
dec
in
js
inc
xchg
jns
sarl
int3
add
sbb
pop
shr
sub
sti
ret
inc
inc
std
mov
xor
test
es
sub
pop
pop
leave
movb
xchg
or
aad
in
and
cmp
adc
jmp
gs
enter
and
stos
int
sub
or
aad
inc
fiadds
pusha
inc
pop
stos
icebp
dec
les
int3
pop
sti
lods
sahf
dec
rorl
jb
aad
jle
addb
pop
leave
lea
fwait
insl
mov
popf
packsswb
mov
lcall
and
pop
inc
xchg
ss
sarl
sbb
rolb
cmpsb
ljmp
in
fcmovu
mov
into
mov
xlat
nop
cmc
pop
negl
sbb
push
iret
sti
data16
adc
pushf
rcll
cmpsl
aas
inc
xor
js
filds
push
xlat
loope
push
mov
pop
xor
or
xchg
cmp
xchg
jmp
dec
xchg
mov
xchg
jno
orb
cmp
cmp
call
inc
dec
out
aas
aam
das
cmp
shlb
cmpsb
mov
push
jnp
sub
popa
push
cld
pop
in
enter
bound
stc
xor
dec
loop
in
mov
scas
sbb
out
imul
mov
rcrb
std
pop
pop
add
ficompl
inc
dec
lret
push
aas
add
mov
sub
pushf
xor
pusha
out
inc
pop
mov
pop
sti
jnp
dec
int3
cld
dec
dec
sbb
andl
int
adc
mov
shl
loop
lods
cli
stc
pop
push
and
cltd
stos
cltd
and
cmp
mov
adc
out
xorb
push
pop
addb
jnp
pop
xor
xchg
loopne
push
divb
mov
mov
aam
ja
outsl
insl
aas
dec
das
push
xchg
xchg
jae
lret
imul
loope
nop
push
mov
add
pop
xchg
sbb
cmp
and
outsl
push
jns
mov
sub
xor
ret
shrb
add
mov
ret
leave
lds
imul
stos
mov
pop
and
sbb
cmp
sub
mov
sub
mov
xorl
push
pop
out
pop
or
and
mov
pop
pop
jns
mov
pushf
shufps
pop
lret
lods
es
add
sub
sub
mov
lea
jb
int3
xchg
dec
ficomps
repz
or
stc
jg
mov
cs
int
es
in
and
subb
pop
leave
push
cs
out
scas
aaa
xlat
int3
pushf
mov
pop
daa
xor
into
iret
xchg
adc
mov
pop
or
sub
lcall
and
xchg
or
negl
loope
shll
aas
pop
stos
shll
sbb
adc
jnp
mov
cmp
sub
mov
pop
jns
js
mov
xchg
jbe
cli
sbb
pop
test
dec
jbe
enter
pop
xorl
adc
inc
ret
pop
pop
pop
out
rorl
mov
mov
and
popa
jns
cmp
daa
fdivrl
movsl
cmpsb
lcall
lods
lods
mov
test
xchg
sub
adc
sahf
out
mov
dec
out
add
jmp
xor
jo
mov
add
mov
fbstp
test
xchg
sub
mov
pop
mov
stc
in
push
dec
lret
outsb
mov
xor
jnp
sbb
xchg
ljmp
cmp
repnz
mov
xchg
adc
imul
shll
mov
push
push
es
mov
jl
ficoms
int3
jae
addr16
popf
mov
mov
stc
cmp
mov
in
dec
xchg
lcall
mov
nop
xchg
mov
and
or
mov
mov
lds
out
in
int3
jbe
mov
out
jbe
xor
ds
and
outsl
fnstsw
pop
test
and
arpl
rcll
call
xchg
push
pop
or
stos
fucomi
sarb
inc
add
dec
dec
stc
push
mov
dec
insl
loope
daa
ja
mov
sub
or
jb
xchg
add
lods
test
cmp
imul
pop
ljmp
xchg
in
insb
fisubs
pop
aad
push
mov
iret
cmp
xchg
stos
pusha
cmpl
dec
adc
loop
pusha
loopne
cli
addr16
sub
mov
adc
pushf
push
sub
adc
js
cmc
pop
pop
sub
sub
mov
mov
push
pop
or
ret
jmp
aad
add
hlt
gs
cwtl
sub
jp
xchg
ret
pusha
pop
add
aam
xchg
add
xchg
jae
aam
adc
or
cli
and
xor
xor
jbe
gs
les
push
fistps
ljmp
insb
iret
je
xchg
loope
xchg
jecxz
fcmovb
adc
mov
xchg
icebp
adc
movsl
icebp
add
xchg
mov
cli
lahf
xor
mov
jecxz
add
je
xchg
jl
das
mov
scas
jl
pusha
mov
std
int3
fs
pop
xor
add
cmp
add
mov
push
mov
dec
sahf
push
add
pop
scas
push
jbe
adc
sbb
imul
sub
int
ficoms
push
popf
insb
in
scas
fs
iret
stos
jl
leave
les
enter
dec
and
and
mulb
push
cmp
or
push
sbb
andb
dec
xor
mov
das
or
cmp
cs
mov
fisttps
imul
jg
sub
call
mov
xchg
iret
mov
repz
cs
ds
and
icebp
popl
in
add
pop
adc
xchg
shl
and
jecxz
call
sbb
jo
xor
das
dec
push
mov
in
add
popf
mov
pop
push
push
xchg
cmpsb
test
dec
or
push
insl
pop
lea
xor
subl
rorb
hlt
rcrl
out
adc
rorl
adc
call
scas
and
popa
stos
ss
fsts
fcompp
inc
xchg
jno
dec
xor
cmp
in
loope
imul
lds
sahf
push
cmp
or
push
inc
cs
int
gs
add
shrb
mov
adc
mov
addr16
pop
lret
pop
outsb
insb
data16
out
daa
mulb
jge
pop
or
and
jecxz
push
std
xchg
call
jp
cs
pop
sbb
adc
sbb
int
inc
pop
in
push
mov
and
pop
cmpsl
add
xor
mov
bound
inc
xlat
mov
testb
mov
mov
jp
inc
lcall
jno
fwait
insl
mov
mov
outsb
std
flds
int
and
rorl
pushf
std
xlat
out
jb
hlt
int
insl
adc
test
popa
pop
add
cwtl
out
mov
xor
or
pusha
nop
inc
cmp
or
scas
xor
cmp
stos
or
dec
mov
cmp
xor
and
or
push
xor
pop
insl
fidivs
movsb
or
enter
scas
loopne
das
dec
stos
stc
fsubl
add
adc
jb,pn
rcrl
ret
push
out
push
mov
repz
and
sbb
pcmpeqw
lahf
aaa
or
add
shrl
lret
stos
xchg
sub
cltd
push
ret
outsb
gs
or
xchg
sub
mov
push
addr16
push
scas
jmp
mov
pop
or
xchg
mov
insb
ud0
in
xor
push
pusha
dec
test
in
xor
adc
mov
in
dec
sbb
push
or
insl
lret
in
and
loop
dec
mov
jge
push
or
sbb
pop
stos
icebp
mov
cmpl
int3
es
push
cmpb
and
nop
adc
sbb
hlt
xchg
inc
push
xor
and
inc
jecxz
mov
dec
mull
mov
jae
jl
xor
xchg
fdivrl
push
fwait
call
sub
lods
outsl
inc
jge
popf
jl
je
push
adc
adc
mov
xlat
mov
hlt
aas
pop
stos
jp
inc
pop
dec
roll
pop
jge
subb
iret
sbb
out
ss
movsl
int3
into
sbb
dec
call
cmpl
xor
push
popf
pusha
xchg
cmp
xchg
aas
and
mov
and
scas
test
in
int3
loope
hlt
or
add
dec
test
rcll
mov
mov
rcrl
nop
mov
jl
mov
sbbb
push
adc
fmuls
cmp
dec
jnp
sub
push
jbe
pop
cmp
rorb
adc
movsb
xor
in
test
push
xchg
xchg
sti
push
inc
jb
rol
sbbl
dec
sahf
imul
outsl
cmp
adc
and
scas
insb
icebp
mov
lock
add
inc
add
xchg
xor
sarb
sbb
jmp
sbb
mov
out
inc
pop
data16
xor
je
add
mov
cld
xchg
adc
inc
je
mov
dec
out
push
mov
dec
sahf
in
mov
inc
leave
into
pop
icebp
adc
mov
pop
das
jl
jg
mov
fs
push
ret
jg
and
xchg
xchg
frstor
pop
mov
sbb
pop
jl
loopne
pop
mov
popf
sbb
icebp
call
in
mov
scas
ja
insl
outsl
and
rclb
mov
loope
lods
repnz
test
sahf
mov
dec
adc
cwtl
xchg
sbb
mov
data16
xlat
loopne
pop
stos
mov
jbe
int
test
xor
frstpm(287
dec
mov
loope
and
push
enter
mov
lcall
mov
mov
xchg
push
and
cld
movsb
jne
daa
inc
decl
addb
sar
les
sbb
adc
mov
or
movsb
push
push
lods
jle
ja
mov
mov
lock
push
mov
cmp
adc
or
in
sbb
pop
cmp
dec
out
pop
test
inc
xchg
jmp
outsl
movsl
inc
popf
call
insl
stc
fstpt
andl
ss
mov
loop
jmp
jl
xor
mov
inc
out
push
js
loope
popa
adcl
jle
mov
fcomps
lock
mov
std
mov
icebp
lds
cmp
pop
dec
mov
and
cmovl
mov
dec
cmp
jae
jp
pop
mov
dec
cld
adc
clc
xor
sbb
pop
fistps
lahf
js
push
push
rcll
test
stos
fcoml
pop
mov
jge
sbb
cmp
in
xor
cmp
dec
lcall
or
xchg
mov
sub
mov
loope
rolb
cmp
or
inc
cmpsb
aad
push
ljmp
mov
inc
jmp
push
leave
ss
mov
pop
push
xchg
cmpl
jno,pn
inc
pop
push
xor
aaa
mov
stc
sbb
inc
pushf
sbb
ljmp
ret
outsb
xchg
loop
push
sti
mov
xchg
xchg
push
cmc
add
push
or
pop
cmc
std
nop
rclb
fwait
stos
repz
mov
add
pop
pop
mov
push
shrl
loop
das
ja
cwtl
popf
aas
aas
popf
gs
ljmp
loop
sbb
xchg
aad
test
push
sub
mov
ss
fwait
js
and
out
xchg
sbb
fisttpl
negl
jecxz
ds
mov
scas
test
pop
jmp
cmpsb
outsl
and
mov
jmp
adc
sbb
inc
mov
in
addb
cli
in
repnz
or
and
sub
lret
aam
push
adcb
add
mov
jnp
bound
and
dec
inc
push
leave
aad
lock
mov
push
mov
push
ja
or
test
add
filds
call
adc
add
xorb
xor
cmc
lahf
xchg
repnz
iret
mov
movsb
jle
inc
dec
xor
cmpsl
push
pushf
sub
aad
push
push
xchg
call
rcrl
test
hlt
icebp
and
outsl
cmp
ret
dec
dec
or
dec
sbb
mull
popf
sti
mov
imul
push
test
push
inc
arpl
sbb
mov
sbb
inc
in
aas
add
fcomp
add
jnp
mov
dec
out
push
xchg
cmp
xor
stos
mov
loop
sub
adc
mov
iret
push
dec
xchg
or
xchg
je
pop
pusha
or
sbb
pop
push
sub
push
add
jecxz
sbb
lods
gs
cmp
insl
cmpb
and
stc
cmp
dec
fsubrl
pop
or
ss
imul
roll
pop
lret
dec
test
dec
ret
fcompl
lahf
cs
jmp
or
orl
inc
add
arpl
nop
adc
imul
xor
popf
js
mov
xor
pop
rcrl
pop
mov
adc
cmp
icebp
sbb
loope
jo
cmp
jo
jno
popa
mov
push
ljmp
inc
enter
jmp
jg
cmp
sahf
loope
hlt
sub
xchg
mov
inc
out
loope
sarl
leave
aam
push
dec
lods
std
inc
inc
insb
gs
shl
or
cld
sbb
add
mov
psrlq
or
dec
idiv
mov
or
mov
dec
push
addr16
repnz
xor
int
xchg
inc
cmpsb
push
cltd
call
addr16
push
filds
xchg
mov
sbb
arpl
movl
jnp
gs
adc
fisttps
out
addr16
push
push
das
imul
mov
sbb
pusha
jle
ret
fdivl
cmp
mov
jb
push
jg
sbb
lret
insl
pop
out
scas
or
push
aam
sahf
repnz
aaa
clc
in
jecxz
ljmp
rcr
pop
gs
jns
insb
dec
loopne
adc
xchg
mov
or
xor
insb
mov
cmc
mov
sbb
mov
and
bndldx
rorb
dec
in
jb
stos
aam
cmpsb
xchg
into
inc
xchg
dec
in
mov
mov
aas
int3
lret
push
in
pop
jns
imul
dec
adc
sbb
pushf
push
aaa
rcr
xor
mov
mov
roll
repz
jge
cltd
xchg
cmp
xlat
dec
fs
and
jb
adc
sub
sti
mov
push
das
pop
outsl
leave
std
jge
cmc
and
cmp
dec
sub
nop
aaa
and
jnp
cmp
les
lret
sbb
jbe
sbb
sub
je
pop
sbb
pop
pop
or
and
and
mov
mov
scas
jmp
pop
hlt
repz
sub
dec
aaa
jle
push
jmp
mov
ds
fnsave
add
push
jge
ljmp
int
xorl
test
jae
lret
add
pop
clc
add
ja
dec
mov
sub
adc
add
mov
cli
out
jmp
adc
adc
test
mov
mov
jb
mov
mov
aad
xorl
gs
xor
mov
mov
popf
ficoms
mov
aam
mov
pop
outsb
test
out
lcall
sub
sbb
inc
popa
adc
add
mov
mov
sahf
inc
mov
mov
mov
dec
push
sarl
jns
in
dec
and
mov
adc
push
stc
sbb
ret
lock
adc
dec
jle
mov
aas
adc
and
inc
xor
dec
pop
in
cs
in
mov
xor
mov
sbb
out
adcl
jecxz
pop
mov
popf
and
lret
pop
dec
jns
pop
push
arpl
add
sub
mov
adc
lock
add
push
fsubr
movsb
pusha
cmp
add
mov
inc
push
and
push
inc
sbb
fnstsw
aad
repz
test
test
mov
xlat
inc
ret
xor
ja
mov
sub
and
ret
mov
push
sub
sbb
pop
fs
test
adc
rcr
frstor
ljmp
idivb
inc
xchg
hlt
sub
out
loop
sbb
sub
sub
shrb
loop
roll
sub
mov
mov
mov
xor
mov
mov
test
xor
movsl
cmp
stc
dec
xchg
pusha
inc
mov
inc
fildl
int
imul
add
leave
and
stos
xor
lods
inc
pop
cmp
sbb
push
call
lea
pusha
mov
pusha
mov
mov
xlat
jnp
std
push
or
jl
pop
call
or
inc
das
push
sbb
dec
jmp
movsb
movsb
cmp
popa
cld
jp
lods
fsts
addb
xchg
mov
mov
mov
xchg
scas
jl
xchg
repnz
jle
loopne
jbe
loopne
jns
push
iret
pop
je
xor
cmp
arpl
mov
push
and
fidivrl
or
sub
jl
pop
sub
inc
inc
push
jnp
inc
dec
fistpll
stos
stc
mov
ds
aas
mov
rorl
inc
push
mov
in
gs
icebp
daa
iret
mov
pop
shlb
inc
mov
jns
lahf
pop
cmc
test
fidivrl
cli
hlt
xchg
push
loop
jmp
dec
cld
arpl
in
sub
xor
mov
mov
pop
lea
xchg
std
xchg
cmp
cmp
push
xchg
or
sahf
dec
movntq
ficoms
inc
std
cmpxchg
xchg
jo
in
mov
fnstenv
pop
in
bound
nop
pop
cmpsb
jmp
jl
inc
sub
xor
or
stos
mov
sub
xchg
popa
mov
and
push
fmull
mov
adc
pop
gs
lods
mov
mov
push
sub
xchg
insl
cli
sub
insl
fadds
mov
fldenv
add
pop
jmp
or
ljmp
icebp
push
in
insl
call
movsb
jno
pop
insb
add
jbe
flds
xlat
mov
fcomps
fwait
rcrb
ljmp
int3
push
jb
cli
sbb
into
jp
mov
adc
lahf
cli
movsb
stos
push
push
cltd
arpl
es
and
ss
sbb
sbb
stos
cmc
fdivrs
fadds
mov
jo
sub
test
mov
imul
xchg
in
xchg
xchg
out
jg
and
or
clc
scas
incl
cmpsl
cmpsl
movsl
jmp
movsl
or
addr16
add
add
sar
adc
pop
xchg
push
push
sub
std
mov
repnz
nop
inc
or
bound
out
mov
pop
and
rorl
call
fcmovnb
ds
insl
jbe
addl
xor
fldcw
xchg
movsb
cmp
in
test
ret
ds
inc
lahf
xor
xchg
outsl
jne
pop
insl
mov
lock
je
in
fcoms
adc
ss
out
dec
xor
adc
mov
sbb
test
das
jmp
sbb
xlat
pop
pop
pop
add
lods
jge
push
popf
insb
mov
fimull
inc
pop
xchg
lcall
jo
aad
stos
pop
xlat
sub
addr16
in
ds
pop
sarb
mov
mov
sub
push
out
lods
mov
dec
les
push
jp
jg
sub
lahf
xchg
mov
xlat
sub
jge
rol
dec
pop
dec
xlat
pop
mov
add
ds
inc
fisttpl
jne
test
aaa
call
push
pop
jecxz
xor
in
jle
icebp
or
testb
scas
push
shl
inc
out
mov
cmp
lahf
add
cwtd
loop
xlat
dec
lds
ds
push
jns
and
cli
fs
jb
sbb
cmc
and
mov
inc
sbb
jecxz
out
pop
lods
jmp
push
push
xor
test
xchg
fimuls
ss
push
movsl
rcrb
fcomps
imul
aad
or
and
push
div
pop
mov
jl
mov
push
mov
and
mov
call
call
das
xor
data16
std
loopne
shlb
sub
cmp
inc
bound
cmp
clc
mov
pop
stos
imul
push
outsl
inc
mov
and
cmp
iret
lcall
mov
xchg
sub
or
push
pop
push
xchg
add
jmp
test
dec
dec
inc
cmc
dec
jne
cmc
imul
xchg
loop
mov
mov
add
ja
adc
xchg
sub
imul
scas
ja
sub
mov
and
mov
les
aaa
popf
mov
cld
xor
sbb
call
out
pop
mov
mov
mov
pop
movsl
sbbl
jmp
in
enter
adc
js
cli
add
lcall
add
mov
sub
xorl
or
js
xchg
inc
lgs
sub
es
jns
int
js
loop
sahf
icebp
shl
inc
or
push
daa
ljmp
cmpsl
adc
xchg
pushf
mov
lcall
inc
or
mov
cli
pusha
push
jle
test
sbb
ds
das
mov
les
push
jo
in
mov
pushf
pop
test
dec
scas
aad
mov
mov
mov
aaa
out
push
sbb
push
push
sub
sbb
pop
cmp
and
popf
dec
jg
ret
icebp
mov
jge
mov
push
or
lcall
ret
dec
or
jnp
mov
cltd
movsb
outsl
cwtl
cmp
loopne
iret
lahf
inc
push
push
pushf
pop
jae
or
and
jge
aam
cmp
push
cld
js
cmp
add
dec
sub
cmpsl
ja
inc
std
push
push
mov
push
in
add
lahf
lret
push
scas
test
xchg
shlb
cld
in
xchg
pop
inc
sbb
pop
adc
inc
pushf
or
aaa
lahf
loop
lret
xor
cmp
cmpsb
int
jb
insb
cvtpi2ps
adc
or
enterw
dec
lds
xchg
mov
xor
imul
out
push
inc
jae
pushl
sub
pop
lods
mov
pop
adc
and
mov
dec
push
cs
push
insb
je
and
insb
test
repnz
mov
cmp
in
mov
sbb
and
test
pop
mov
mov
push
es
and
mov
mov
jmp
pop
jp
negb
orl
cmp
mov
mov
add
enter
movsl
mov
xlat
fists
sub
pop
out
jle
fildll
or
out
mov
add
mov
mov
in
popf
xlat
insb
cwtl
mov
add
xchg
cltd
inc
arpl
xchg
pop
js
pop
test
in
addr16
mov
mov
aad
es
xor
push
fnstcw
test
inc
insl
inc
adc
push
clc
es
mov
or
mov
jbe
lcall
lahf
dec
test
cmp
icebp
cltd
rcll
in
aaa
subl
lea
sbb
dec
or
scas
jecxz
pushf
cmp
das
int3
outsl
cmp
ja
jmp
leave
xchg
add
in
jb
push
pop
inc
ja
in
pop
out
xor
and
mov
jb
in
pop
push
ficompl
cmp
lods
out
pusha
outsl
inc
dec
pusha
pop
pop
dec
dec
rcrl
or
lahf
stc
jo
daa
pusha
jbe
jle
outsl
mul
popf
pop
mov
add
scas
cli
cmp
imul
push
ret
int
icebp
sahf
pop
fnstsw
pop
negb
mov
mov
adc
pop
push
fnsave
pop
mov
in
data16
jl
cmpsb
jns
dec
dec
adc
mov
pop
sub
add
pop
push
sbb
out
mov
test
pop
in
fistpll
arpl
xor
cmpsl
push
jnp
adc
mov
add
pusha
inc
je
insb
out
lret
mov
xchg
and
mov
push
inc
add
pushw
or
mov
push
and
xor
xchg
jbe
test
or
jl
xchg
popf
rclb
inc
push
jnp
jmp
jbe
xchg
sbb
inc
sub
shll
sbb
mov
adc
push
push
jne
mov
sbb
shlb
mov
test
mov
std
sbb
iret
ss
sbb
pusha
notl
jbe
loop
adc
and
mov
fwait
mov
inc
ss
scas
ljmp
daa
cmpb
aaa
lods
mov
xlat
pop
repnz
sub
pop
cmp
adc
sbb
dec
sub
insl
pop
sahf
cvtps2pd
in
add
cmp
ja
test
pop
jns
lods
cmp
enter
fldt
stos
lock
clc
pusha
mov
test
int3
pushf
pushf
adc
push
mov
repnz
pop
aas
xor
sub
aaa
loopne
imul
mov
and
flds
mov
scas
mov
pop
cmp
add
jo
out
mov
in
sti
mov
mov
add
xchg
aad
cmp
cmp
iret
popf
mov
pop
sti
addr16
jp
mov
sub
mov
push
xchg
inc
xor
mov
push
add
out
or
pop
dec
dec
mov
xchg
adc
stos
in
loop
les
inc
in
push
ja
pop
inc
inc
push
mov
inc
mov
addr16
jge
mov
inc
add
popa
mov
cmp
jb
mov
cs
inc
jbe
in
push
cwtl
hlt
arpl
push
push
push
sbb
lock
cli
sti
clc
push
pop
dec
ds
adc
mov
aad
fsub
fst
dec
mov
push
shl
popa
pop
push
mov
cmc
cltd
xchg
lods
adc
out
jge
arpl
push
dec
adc
inc
fnsave
iret
enter
cli
cmpsb
mov
dec
mov
xchg
int3
xor
xchg
out
inc
subl
outsl
sahf
and
stos
pop
lds
dec
loope
or
sbb
dec
mov
pusha
pop
sbb
pop
dec
aam
test
push
sub
push
mov
xor
ljmp
enter
packsswb
unpcklps
xchg
jno
icebp
dec
test
lcall
pop
andb
hlt
cmc
bound
mov
adc
or
addb
add
fnsave
fsts
cmpsb
jb
xchg
xchg
dec
ds
ss
ret
jb
pop
je
or
mov
movsb
pushf
pop
or
pop
sbb
jmp
jge
sub
mov
loope
popa
inc
fmull
xchg
mov
paddw
push
push
loope
in
shll
xor
xor
xor
sub
inc
das
inc
adc
ret
shrb
stos
jecxz
mov
adc
cmpsl
push
xchg
fs
pop
imul
cltd
mov
or
mov
xchg
in
cmp
xchg
jno
mov
in
push
pusha
xchg
inc
mov
lods
shlb
leave
in
jnp
imull
daa
test
rcll
cltd
stos
repnz
or
mov
push
and
mov
cmp
mov
sbb
xchg
jne
lahf
test
fs
cmp
fistps
jmp
addb
fucomp
push
push
xor
test
jae
mov
out
sub
insl
and
cvtps2pi
ret
mov
jl
je
adc
mov
xor
fldt
xchg
in
das
mov
daa
out
sbb
jge
iret
pop
popf
shlb
lock
mov
inc
cmp
dec
in
int
and
mov
inc
mov
mov
push
push
mov
popf
mov
lahf
adc
and
sbb
cmp
mov
sub
shlb
mov
sub
ljmp
push
xchg
xorl
add
jmp
pusha
xorl
and
fsubr
repz
pusha
mov
aaa
pop
insb
or
mov
imul
sub
into
cli
pop
hlt
sub
ja
in
into
clc
and
mov
and
bound
insb
outsb
aam
cmp
xchg
inc
mov
push
or
inc
out
lahf
pop
sbb
dec
cmp
into
adc
cmpsl
sbb
jnp
test
cmpl
push
and
aas
enter
test
movsb
mov
jg
dec
loop
test
xchg
sahf
iret
data16
lds
mov
das
es
stos
or
aad
or
cmpsb
mov
lea
sub
loopne
popf
out
push
xchg
out
adc
mov
ss
push
int
lahf
push
mov
mov
jbe
xor
xchg
lock
shrl
mov
mov
mov
frstor
push
mov
sbb
dec
and
jmp
out
test
jmp
push
push
sahf
mov
fs
xchg
mov
fsubs
push
loope
push
sti
std
dec
cmp
inc
shll
pop
and
inc
repz
xchg
pop
add
xor
sub
fnstenv
mov
push
das
mov
jae
scas
dec
test
sbb
sub
add
pop
pop
pop
test
mov
aaa
in
sub
xor
int
insl
shrl
std
subb
mov
pop
cmp
mov
popf
pop
ret
add
data16
out
hlt
gs
out
sub
icebp
cmpb
out
ljmp
dec
out
push
insb
das
loopne
cmpl
scas
insl
or
imul
dec
lret
imul
pushf
adc
hlt
lock
lods
pop
cmp
xchg
lods
adc
cmp
xor
bound
xchg
shlb
loop
std
imul
add
jno
sbb
push
jns
arpl
inc
mov
bound
adc
mov
push
rcl
fdivs
mov
fnstsw
in
daa
test
stos
fwait
sbb
cmpsl
lock
or
jne
mov
xor
sbb
repnz
cmc
outsb
mov
std
in
cs
rcrb
adc
enter
rorl
sub
mov
mov
pusha
enter
xchg
in
sahf
jle
inc
xlat
mov
add
add
icebp
ds
pop
add
sub
arpl
std
pop
xlat
and
pop
jnp
adc
add
popf
cmp
stos
push
and
movsb
jne
sbb
cmpsl
xchg
sbbb
push
lea
mov
adc
push
je
sub
cmp
pop
js
scas
jbe
and
add
push
push
jecxz
dec
xchg
outsl
adc
leave
mov
into
stos
mov
call
andb
ficomps
mov
add
adc
mov
test
in
lret
lret
push
jbe
add
xorb
jl
mov
daa
push
jl
fiadds
shlb
inc
imul
fcmovbe
mov
cmp
fcmovu
fidivrl
das
aas
mulb
in
push
stc
cld
jae
out
sub
add
aam
mov
mov
das
mov
sub
add
sub
mov
shrb
shll
cltd
mov
mov
xchg
push
add
pop
cmp
pusha
and
dec
lock
jbe
xor
aas
sarl
xor
xchg
mov
mov
sahf
push
fld
mov
mov
xor
aaa
mov
push
sub
pop
mov
jae
sub
lcall
dec
xlat
cmp
lahf
iret
mov
adc
lret
or
inc
pop
ds
data16
cmp
arpl
jmp
and
mov
xchg
push
or
cmp
test
and
xchg
mov
test
ja
add
dec
sub
and
add
jne
or
pop
inc
push
jo
out
aaa
mov
jno
cmpsb
scas
out
jl
repz
insb
xchg
pop
pushf
sbb
add
shll
popl
mov
adc
addb
inc
and
adc
mov
xchg
sbb
sbb
cld
dec
mov
call
cmp
sbb
adc
pop
xchg
cmp
pop
movsl
leave
loop
lds
andl
and
in
icebp
push
int3
mov
inc
mov
push
and
pop
divb
dec
jo
inc
adc
add
stc
cmp
xor
out
or
add
mov
repz
mov
push
cmp
xor
lea
loop
dec
push
movsl
dec
jle
mov
pushf
xor
jns
clc
push
ds
jno,pn
lods
loop
stc
into
jp
push
inc
mov
sub
push
dec
enter
dec
mov
movsb
in
loopne
jno
cs
clc
push
out
into
and
repz
xchg
fbld
push
jns
xchg
sbb
xor
ficoms
nop
mov
mov
mov
xchg
jmp
scas
fstp
mov
decb
jb
shll
mov
int
shlb
imul
sahf
or
loope
inc
outsl
movsl
test
xchg
pop
test
push
adc
hlt
add
imul
cs
mov
in
test
inc
enter
decl
cltd
jae
or
jae
xchg
add
xor
decb
fs
inc
lock
sbb
std
or
push
aad
mov
outsl
xor
test
repz
test
push
ret
dec
adc
jae
das
mov
inc
test
mov
test
or
and
in
cli
int
int
push
mov
inc
mov
aaa
sbb
imul
cmp
fcoml
push
and
loope
cmpsb
adc
ret
pop
andl
mov
add
xlat
xor
and
clc
ffree
xchg
insb
imul
push
or
dec
pushf
sbb
add
cmpsb
mov
mov
outsb
mov
dec
sbb
mov
mov
mov
movb
dec
sarb
mov
aam
rolb
test
mov
fwait
or
stos
ds
or
out
dec
imul
add
call
mov
cltd
int
adc
mov
push
rclb
and
aad
mov
lret
sub
in
or
mov
bound
jg
push
sahf
lret
add
enter
jg
insw
dec
xchg
mov
and
sbb
mov
pop
stc
adc
into
jb
sub
add
ret
sub
jns
shll
sbb
or
push
push
push
and
jge
dec
scas
into
xlat
cwtl
aaa
add
push
mov
mov
in
cltd
out
inc
std
vcvtps2pd
nop
adc
pop
movsb
cmp
out
orb
nop
xlat
rclb
fistl
add
sbbb
ja
lret
mov
stos
in
fs
cld
lock
clc
mov
push
jge
in
adc
xchg
inc
dec
cs
sbb
or
ljmp
arpl
sti
lahf
sbb
scas
cmp
enter
aam
mov
mov
mov
and
jg
cli
sarb
imul
sub
sbb
lods
sub
jge
fwait
daa
cld
sbb
add
lahf
mov
pop
or
add
scas
shl
mov
rolb
call
cmp
lea
repz
int
out
aas
leave
fisubl
mov
add
ss
mov
addr16
stos
aam
mov
dec
xor
repnz
xor
xchg
roll
pop
xor
xor
fwait
fwait
int3
or
in
cmc
xchg
adc
sbb
mov
rcll
lret
shl
sub
andl
out
mov
test
sbb
push
ljmp
xor
xchg
sbb
push
shlb
jecxz
adc
loopne
imul
cs
rcr
test
push
jmp
loopne
out
jo
jg
inc
es
sub
jecxz
pop
xchg
dec
xchg
mov
push
and
jnp
mov
jge
adc
xchg
notb
or
xchg
stc
pusha
nop
jbe
dec
inc
xchg
pop
jecxz
loopne
cmp
in
pop
pop
pop
lahf
fdiv
and
adc
push
sbb
mov
dec
sbb
push
xchg
push
das
movsb
xor
aam
rcrl
test
adc
hlt
mov
inc
dec
stos
adc
cmpsl
push
jmp
or
fisttpll
adc
pop
adc
sbb
jl
jl
lods
cmc
imul
addr16
icebp
mov
jge
push
inc
pop
or
addr16
adc
lods
fstp
cmc
js
cmp
ret
cmc
pop
leave
rdmsr
sbb
xchg
jp
loop
andl
cmp
insl
mov
js
mov
inc
adc
ret
stos
inc
cmp
lds
js
mov
mov
jae
mov
cld
jne
data16
add
cmpsb
or
cmpb
mov
sti
adc
outsl
cmp
mov
inc
push
shrb
stc
lea
xchg
pusha
mov
pop
or
in
lock
or
inc
bound
xor
test
mov
dec
mov
pop
adc
add
mov
add
adc
cmp
int3
dec
push
push
jbe
mov
mov
outsl
imul
xor
sub
xlat
push
sbb
push
inc
notl
pop
movsl
fucomip
push
xchg
or
addr16
shlb
aam
stos
int
push
push
dec
fisubrs
adc
lods
adc
in
rcl
enter
jo
push
add
notl
outsb
cmpsl
jle
fiaddl
xor
fcoml
push
insb
sub
cmpl
mov
call
cmp
std
cs
or
push
shlb
jae
sbb
push
inc
movsb
pop
fadd
push
aam
add
or
xchg
xor
and
fildll
fisttps
jae
and
sbb
mov
xlat
mov
mov
xchg
push
pop
xchg
lcall
mov
add
aam
dec
popf
outsb
jl
out
out
xchg
into
pushf
cmp
pop
xorb
mov
dec
push
out
shrl
pop
arpl
movsl
jl
negl
jge
sub
cmpsl
ret
push
cmp
pop
ss
rorb
and
and
pop
lcall
inc
popa
pop
shll
or
bound
fdivp
add
fwait
xor
push
add
movsl
mov
sti
xlat
jg
jl
push
pop
dec
test
leave
and
stos
int
testl
pusha
imul
xchg
pop
pop
adc
adc
repz
push
and
push
xchg
scas
cmp
jg
das
sarb
xor
aad
adc
call
push
popf
ret
dec
rorl
lds
frstor
out
call
sub
jge
or
in
das
xlat
iret
fs
dec
adc
inc
ret
test
jmp
or
ljmp
add
lods
dec
sti
pop
lds
push
push
jecxz
sub
cli
repnz
in
xchg
xlat
jmp
push
popf
mov
pop
mov
mov
pop
or
cmp
in
xchg
rolb
cmp
jnp
sbb
and
fidivrl
andb
sti
mov
dec
movsl
pop
pushf
movb
or
jmp
cmp
lods
and
and
adcl
xchg
lods
or
out
decl
inc
push
push
sub
fstpl
cmp
jbe
lea
cmp
adc
jne
jns
imul
ljmp
popa
inc
and
xor
xorl
xchg
push
adc
inc
repz
dec
mov
movsl
mov
inc
out
sub
test
and
ja
lods
out
and
pop
jo
ffreep
in
add
mov
es
incb
push
dec
adc
jle
repnz
dec
mov
xchg
out
mov
mov
fisubl
cmp
add
in
inc
mov
dec
dec
mov
lods
xor
hlt
adc
mov
into
push
loope
mulb
call
jge
imul
mov
les
sbb
add
int3
fmull
inc
dec
repz
mov
test
add
pop
movsb
pop
dec
lret
adc
enter
push
or
jnp
int3
mov
out
add
xchg
loop
bound
mov
inc
or
pop
jp
or
or
leave
cmpsb
xchg
push
mov
ret
jne
mov
cli
mov
add
jb
pusha
mov
insb
inc
or
divb
fwait
jecxz
test
push
cmp
pusha
sub
mov
ss
or
arpl
test
jecxz
jl
shl
aam
repnz
mov
aam
pop
pop
ds
stc
mov
imul
pop
and
mov
adc
insb
mov
pushf
adc
lret
inc
arpl
filds
cld
mov
outsl
fcmovbe
lods
xor
sysenter
push
cli
jle
inc
add
dec
push
int3
pusha
inc
insl
lahf
push
cmp
outsl
aad
neg
out
mov
cmp
frstor
les
fwait
and
out
mov
sub
sub
enter
and
push
stos
aad
repnz
push
jnp
in
xlat
sahf
push
in
in
mov
pop
inc
jns
push
idivb
mov
das
aad
mov
jbe
stos
leave
inc
mov
dec
das
pop
roll
sub
sar
mov
sbb
aam
jb
loop
push
sub
pop
xor
imul
dec
adc
loopne
pop
push
or
mov
xchg
pop
sub
cwtl
jb
in
sbb
inc
sbb
xchg
mov
mov
pop
stos
andb
in
sub
dec
or
cmp
and
outsl
loopne
dec
inc
push
mov
fimull
cmpsw
in
popa
in
pop
push
in
aam
fistpl
pop
jmp
jmp
sahf
adc
mov
xor
push
dec
mov
cli
shrb
mov
adc
lock
out
into
into
gs
ss
shlb
mov
jg
loope
mov
fdivl
push
int3
xchg
fs
scas
xchg
test
pop
clc
insb
loopne
test
cltd
cwtl
rolb
push
or
and
inc
jne
xchg
in
jmp
mov
out
and
movsb
or
repnz
mov
fmuls
xchg
xchg
call
lea
gs
lret
inc
fnstcw
dec
xchg
jno
dec
adc
add
push
call
push
add
inc
clc
pop
mov
test
jb
ja
std
dec
jno
pop
dec
push
mov
iret
inc
jns
add
xchg
adc
dec
lods
test
popa
sahf
jne
dec
sub
in
sarb
outsl
es
inc
rcrb
xor
fsubs
dec
sbb
fnstenv
sbb
data16
pop
lds
jo
enter
lret
mov
adc
in
add
push
and
pop
pop
or
mov
fstpt
mov
push
jno
sub
fwait
push
and
fimuls
ljmp
sub
push
rcr
dec
not
dec
movsl
adc
cmp
or
mov
cmp
idivl
cmp
pop
leave
pusha
jnp
add
pop
aad
call
paddw
push
or
mulb
jae
cwtl
or
xor
mov
pushf
adc
scas
in
out
pop
inc
popl
dec
inc
jmp
push
mov
stos
jge
enter
jno
push
cmpsl
and
push
test
enter
fidivs
lock
arpl
sbb
mov
imul
movb
push
cltd
jmp
push
movsb
pop
add
adc
sub
cmpsl
icebp
pushf
pop
xchg
cmpsb
xlat
adc
repnz
jg
scas
adc
fstl
lcall
mov
xchg
cli
add
cmpsl
bound
lahf
ret
inc
mov
repz
mov
pushw
in
jg
mov
lods
xlat
or
testl
xchg
or
lock
jnp
lods
enter
mov
adc
add
mov
push
or
insb
xor
push
add
mov
scas
popf
in
and
adc
lcall
sarl
popf
daa
push
add
sahf
push
mov
push
cmpsb
dec
stc
hlt
jne
insl
or
in
pop
scas
push
repnz
lret
xchg
repz
mov
movsl
mov
mov
lahf
jns
adc
das
imul
add
or
outsb
fsubrs
sbb
movsl
mov
jno
lock
mov
sbb
mov
les
push
adc
mov
dec
mov
shr
cmc
mov
xor
jmp
hlt
test
cmp
icebp
xchg
roll
sbb
dec
dec
aas
cli
push
lods
mov
inc
outsl
adc
mov
push
lds
push
cmp
mov
mov
or
push
adc
fsubr
fwait
cmc
jmp
jno
pop
pextrw
sub
sarl
sti
loope
dec
inc
xchg
addl
fldenv
js
subb
fisubl
pop
xor
sub
push
insl
into
inc
jbe
add
ja
push
insl
test
xlat
fcom
cmp
xor
mulb
js
add
in
push
cs
sbb
addr16
pop
cwtl
dec
jne
std
sahf
inc
test
iret
out
sti
push
mov
fistpll
outsb
ret
adc
jg
or
jbe
sub
aaa
data16
insl
cmp
sbb
mov
test
lods
push
popf
xor
inc
mov
xchg
aad
popa
imul
jae
pop
arpl
pop
jmp
cmp
leave
hlt
sti
mov
or
cs
cld
dec
es
push
push
scas
addr16
je
pop
call
fisubrl
cld
loopne
out
insb
cld
or
push
data16
leave
jo
xor
dec
mov
popa
mov
loop
icebp
mov
push
push
and
xchg
jecxz
xor
in
int3
xor
ret
xor
jne
or
or
push
rep
xor
mov
mov
jl
cld
pushf
repz
lds
xchg
test
lret
inc
sbb
push
adc
test
es
xchg
cmp
mov
sbb
inc
lock
jl
bound
xchg
jl
mov
push
mov
xacquire
movsl
inc
lea
cmp
jecxz
cwtl
inc
cli
cltd
adc
push
fisubs
imul
dec
sub
addr16
cmp
and
into
in
jo
and
ficomps
pop
insl
inc
cmp
jmp
aas
mov
hlt
test
stc
xchg
and
dec
cltd
lea
push
mov
sub
inc
es
jmp
shrl
and
jge
shl
pop
xchg
daa
movsb
rcll
jbe
cld
adc
dec
xor
push
or
cmp
imul
fdivl
aam
rcll
push
shrl
mov
in
inc
insb
lahf
cld
jne
pop
mov
loopne,pn
pusha
stos
dec
pusha
fwait
adc
inc
cld
push
adc
dec
flds
add
add
into
ficoms
pop
push
and
cmp
aaa
mov
aas
cmp
adc
sarl
xchg
sbbb
inc
lea
sbb
iret
mov
xchg
push
and
es
and
mov
adc
std
sub
pop
negl
pop
jp
or
sahf
enter
push
pop
lds
aas
ficoms
sti
pop
shl
jge
dec
ja
mov
jae
test
push
sbb
mov
jmp
lahf
push
adc
sub
nop
ficompl
es
sbb
inc
ss
sbb
dec
dec
mov
jnp
int3
clc
movsl
mov
pop
xchg
mov
repz
cmc
out
ljmp
adc
or
sub
adc
shl
push
cmp
sbb
idivb
mov
mov
pushf
xor
push
pop
dec
jb
xchg
into
sbb
jno
or
stos
mov
and
adcb
inc
cld
push
ret
mov
int3
and
enter
jb
das
fidivrs
inc
dec
lds
rcll
push
fsubl
sbb
insb
xchg
out
inc
inc
cmp
mov
mov
aas
cmp
pop
popf
shlb
ja
sarl
mov
sub
cs
push
sub
pop
and
mov
adc
add
lds
lds
mov
testb
push
js
lea
mov
mov
ja
mov
dec
dec
pop
push
lods
test
cmpsb
fcmovu
int3
int3
xchg
add
cltd
aad
call
mov
insb
xlat
sub
jne
sbb
jg
lods
pushf
xor
vsqrtps
or
xchg
adc
xor
add
jle
jmp
dec
inc
mov
loopne
pop
jbe
pop
pop
es
std
test
or
jno
loopne
xor
aas
push
jecxz
jle
xchg
inc
pop
sarl
insb
out
inc
adc
push
mov
int
pop
out
add
les
loope
add
cs
fisttpl
imul
inc
push
lret
push
sbbl
lahf
addb
pop
scas
jp
xchg
jg
insl
arpl
xlat
addr16
inc
and
cmp
cmpsl
sti
cli
cmpsl
iret
stos
jle
in
jecxz
xor
leave
inc
pop
xchg
mov
push
popf
inc
aad
mov
sub
lds
and
lock
into
mov
push
lods
ret
cmpsl
sub
lcall
mov
sub
push
xor
repnz
lcall
imul
jg
imul
lahf
adc
cwtl
fsubrs
mov
repz
mov
push
jle
lret
adc
mov
dec
push
sbb
inc
or
or
fsubr
xchg
push
int
aad
mov
sbb
mov
std
lahf
push
loopne
ret
or
lock
xchg
mov
cmp
outsl
jge
addr16
lret
push
sbb
jl
lds
or
xor
add
cmp
dec
jl
and
bound
xor
push
or
mov
push
rcrl
dec
mov
xchg
xor
xchg
stos
into
and
mov
cwtl
lock
jo
xchg
in
mov
stos
jecxz
fimull
in
sbb
sub
out
jae
mov
and
lods
stc
shlb
cmp
jne
push
mov
mov
shrb
shlb
and
or
pop
or
ficompl
mov
or
or
mov
lea
cmc
pop
sbb
das
mov
xor
dec
idiv
lods
mov
cmpsl
clc
mov
pop
adc
rcrb
fs
cld
fisubl
lahf
int
js
dec
jnp
cwtl
test
inc
cmp
sbb
mov
jmp
mov
jbe
xor
xor
sbb
sub
sub
jg
mov
outsl
mov
das
addr16
pop
call
xorl
inc
push
jae
jle
pop
xchg
ja
push
loopne
int3
or
movsl
lret
stos
and
adc
in
pop
jcxz
pop
scas
add
sbb
mov
int
push
ret
mov
lods
dec
xchg
xchg
adc
imul
mov
inc
stos
int3
push
dec
cmp
xchg
jne
lahf
pusha
and
jge
fbstp
cli
jmp
bound
shlb
popa
or
lret
xchg
out
inc
or
xchg
out
lock
adc
xlat
adc
dec
xor
iret
jne
gs
fisubl
in
or
fdivl
push
test
or
aam
out
mov
cltd
or
dec
pop
inc
xchg
jmp
es
movsb
lds
xor
dec
ss
adc
inc
cmp
mov
or
mov
lahf
das
xchg
hlt
add
rorl
dec
ficomps
call
pop
repz
pop
and
dec
ljmp
int3
mov
xlat
mov
or
sbb
xor
mov
ljmp
jecxz
mov
pop
icebp
out
call
add
pusha
lcall
unpckhps
push
movsb
stos
into
cmpsl
mov
mov
and
into
mov
push
test
iret
pop
pop
xchg
jecxz
inc
lds
adc
inc
sub
das
mov
mov
pop
aad
sbb
in
mov
pop
dec
outsl
push
xor
je
loope
xlat
jns
sub
push
shll
int
testb
out
into
es
dec
fs
cmp
sahf
or
inc
out
outsl
mov
mov
lcall
popa
addr16
ja
mov
les
mov
and
inc
int
xchg
and
movsb
icebp
stc
in
movsl
fcomi
in
adc
movsb
sub
or
cmp
push
adc
nop
cmp
xor
or
lods
insl
fcomps
inc
and
and
psubw
test
cmp
movsb
push
hlt
hlt
pop
jg
jae
xchg
inc
jg
or
or
addr16
mov
xor
xchg
jnp
stos
or
fcmovbe
mov
push
clc
les
dec
dec
push
jp
lds
cmp
in
mov
xchg
push
push
mov
movsl
mov
sub
jecxz
mov
pop
pusha
in
fisttps
insb
test
lods
and
jmp
sub
outsb
ja
insb
das
xchg
rorl
xor
and
inc
out
frstor
or
filds
mov
dec
push
inc
mov
rcrb
imull
xor
push
push
loopne
int
call
or
and
stos
movsb
pop
jne
inc
aas
mov
or
or
js
mov
cli
sbb
dec
hlt
xchg
push
scas
scas
aas
sti
xor
xchg
sub
or
push
cmp
jge
cmpsl
orb
jmp
xor
jbe
adc
push
inc
inc
push
dec
test
mov
cmp
test
push
sub
loopne
add
das
in
push
jnp
jecxz
shl
jl
outsl
fldcw
push
call
pop
and
cmp
scas
sbb
dec
or
sub
popa
lock
or
iret
addr16
rorb
scas
or
jle
lock
insl
mov
mov
pushf
fnstenv
into
xchg
dec
pop
outsl
lods
mov
pop
out
mov
in
sbb
sub
das
sub
lods
and
add
dec
lods
mov
jecxz
out
faddl
mov
xlat
add
dec
ficoml
mov
mov
push
mov
dec
sub
loopne
fwait
lret
addr16
adc
cmp
fdivrs
mov
sub
lock
bound
adc
lcall
mov
fldcw
push
xchg
enter
movsl
out
pop
sub
sub
push
jmp
xor
jbe
imul
cmp
mov
pop
adc
sub
jo
dec
dec
in
fnstsw
rolb
aam
rcll
mov
push
je
dec
or
jnp
insl
jae
lcall
cmpsl
mov
pop
xchg
jmp
aas
mov
cmpsb
fstl
lret
insb
xchg
aam
mov
mov
nop
jo
nop
imul
pop
dec
mov
aam
in
and
adc
pop
pop
and
leave
sti
pop
in
rcll
insl
aam
sub
imul
push
dec
mov
add
or
ror
xchg
shrl
push
daa
stos
sbb
cmp
push
jb
cmc
insl
fcomi
fistps
jmp
jno
int
lea
xor
sbb
test
out
fildll
pop
mov
insl
icebp
xchg
aam
fdivs
dec
mov
inc
mov
ds
mov
cmp
add
sub
cmpsl
stos
in
mov
insb
data16
pop
fbld
xchg
xlat
movsb
test
sbb
inc
and
mov
repz
out
mov
inc
stos
or
aam
clc
jp
push
shrb
jbe
push
inc
inc
mov
scas
aad
rol
test
adc
and
mov
mov
sbb
fld
pop
mov
push
sub
das
sbb
adc
dec
leave
jg
gs
sbb
pop
into
test
fcomi
inc
aad
xorb
jmp
jge
mov
loope
mov
push
hlt
imul
pop
cmp
int3
add
out
cmc
mov
add
insb
and
mov
jle
mov
push
lret
xchg
jae
pop
in
pop
in
add
push
inc
sti
cmpl
test
push
and
repnz
push
dec
lcall
cmpsb
dec
cltd
mov
arpl
pop
jecxz
or
mov
and
es
das
hlt
mov
or
shll
dec
pop
and
pop
push
fnstenv
xchg
flds
imul
sbb
enter
mov
and
inc
adc
inc
sub
cltd
lcall
mov
inc
pop
nop
and
fldenv
ret
loope
adc
sub
out
testb
sbb
lret
outsl
ror
adc
inc
cld
jg
push
mov
arpl
out
mov
movsl
fstpt
xchg
xor
insb
adc
int3
xor
ljmp
xchg
push
divl
int
or
inc
and
jmp
daa
xchg
xchg
mov
pop
repnz
fs
xor
mov
decl
negb
xchg
cmp
or
jbe
arpl
mov
dec
pop
xchg
adc
or
xchg
or
in
dec
xchg
call
imul
mov
sbb
jns
cmp
sbb
cmp
jmp
out
mov
push
leave
mov
and
mov
ds
sub
xchg
test
rorb
loope
addr16
inc
imul
roll
jl
sahf
test
jae
movsl
hlt
or
and
adc
fiaddl
push
or
jne
jl
mov
fidivrl
and
xor
arpl
nop
mov
jo
add
mov
pop
jl
mov
cli
pop
pop
daa
inc
ret
mov
outsl
push
ret
lcall
mov
inc
sbb
cmp
sub
dec
inc
adc
or
push
nop
mov
mov
call
cwtl
test
lea
in
loop
mov
shlb
insb
pop
int
jb
rorl
adc
mov
sahf
fcoml
jo
and
inc
xor
sbb
mov
lea
in
and
repnz
popf
icebp
push
add
cmc
lcall
xor
testb
bswap
inc
mov
xor
aad
sbb
mov
xlat
ret
jnp
lret
push
xchg
out
or
mov
push
adc
shll
push
sahf
add
jo
pop
add
xchg
in
pop
xor
ja
lea
pop
test
in
or
xchg
jo
xor
xor
pop
jnp
lret
inc
xchg
mov
ret
or
lods
ss
mov
add
addr16
add
add
sti
ja
push
fsubs
or
jmp
lock
dec
leave
dec
int3
ret
push
insl
aad
mov
movsl
pop
neg
cmp
fld1
cmp
jo
mov
std
pop
mulb
icebp
mov
mov
xor
jnp
and
test
mov
pop
or
xor
in
fs
mov
scas
or
adc
mov
rorl
add
push
inc
mov
pop
sub
in
dec
stos
jae
nop
and
fldcw
add
repnz
xchg
mov
inc
test
xchg
cmc
mov
sub
sub
fcompl
push
xor
stos
movsb
bnd
enter
mov
jno
pop
xchg
fistl
xor
int3
mov
lds
xchg
adc
mov
test
xor
fisubrl
cmp
cmpsb
sarb
adc
sub
or
sahf
faddl
dec
loopne
fldt
sub
imul
outsb
adc
add
lahf
push
pop
jmp
aad
dec
push
insb
pushf
fimuls
pop
xor
lahf
cmc
push
rcr
xor
lods
outsb
mov
out
scas
or
mov
lret
aad
cmpsl
leave
lahf
pop
mov
mov
xor
in
add
push
lcall
inc
sbbl
add
xor
mov
shr
int3
jae
aas
or
popf
inc
fiaddl
movsb
jns
sbb
loopne
loop
aam
pop
mov
pop
xchg
bound
sub
mov
mov
loope
sub
outsl
cli
stc
lock
and
sub
xchg
in
adc
js
jae
das
fnsave
loopne
jno
add
add
and
shlb
pop
aam
dec
sbb
pop
xchg
mov
sbb
mov
adc
js
or
outsb
sub
mov
outsb
lea
sub
mov
pop
sahf
test
cmp
or
push
es
stos
inc
ret
hlt
popa
rclb
sub
ds
lcall
sbb
rcl
shrb
xchg
dec
cmp
pop
pop
mov
rolb
out
jle
and
daa
sbb
mov
dec
mov
inc
push
pop
out
inc
in
cmp
jb
in
xor
pop
test
cmp
into
je
and
mov
test
xchg
mov
stos
and
es
xchg
clc
jp
in
dec
mov
mov
inc
push
mov
test
push
out
rcl
rcl
nop
pop
add
shr
push
xor
jnp
in
es
mov
inc
push
dec
out
mov
mov
sbb
ss
pop
push
les
test
cli
jecxz
lods
pop
xchg
test
or
inc
pushf
pop
fdivrs
out
jns
sub
cs
jmp
popa
inc
mov
call
rcrb
xchg
sbb
hlt
lret
adc
call
repnz
inc
sbb
inc
dec
sbb
out
lods
stos
cmp
pop
les
test
xor
mov
and
mov
nop
negl
pop
pusha
stc
clc
jecxz
and
xchg
ss
addb
jb
xchg
dec
mov
es
aam
clc
lcall
test
iret
into
mov
xor
cmc
adc
nop
and
cmp
xchg
adc
jge
mov
xchg
in
inc
pop
mov
cmpsb
dec
xchg
aam
aad
pop
test
cmp
aas
inc
in
xchg
scas
xor
cmp
test
mov
push
and
cmp
mov
cs
jecxz
and
pop
arpl
mov
fldenv
push
mov
lahf
jmp
pop
lock
loopne
mov
push
dec
jne
lods
dec
push
jnp
xchg
mov
xor
dec
stc
rorl
scas
adc
and
mov
mov
sahf
rcr
cmpsb
dec
repz
inc
mov
inc
daa
inc
mov
cmp
into
imul
pop
xchg
mov
cmp
push
loop
jmp
xchg
sahf
mov
jnp
jecxz
imul
inc
jbe
fcomi
movsb
mov
call
bnd
cs
clc
sub
mov
ds
loope
out
pop
mov
int
push
push
pop
pop
mov
mov
add
xor
pushf
outsb
fsubrl
lea
mov
add
out
jo
out
lds
inc
pop
mov
cmp
sbb
adc
pop
adc
movsl
sbb
pop
andl
xchg
divb
dec
insb
mov
test
pmaddwd
movsb
jmp
leave
out
mov
push
out
xchg
scas
ja
inc
xor
stos
aam
push
xchg
test
mov
pop
daa
loop
shll
testb
xor
mov
lahf
cltd
add
pop
stc
sbb
scas
outsb
jne
leave
pop
fldt
push
jg
or
pusha
lds
orl
adc
ds
sbb
sbb
cltd
outsl
push
pop
mov
rolb
sub
or
fsubrs
leave
loopne
push
repz
mov
sbb
push
xchg
or
hlt
imul
std
xor
mov
lods
push
push
outsb
addr16
arpl
mov
xor
bound
mov
js
int3
or
inc
jo
inc
lock
pop
sbb
mov
mov
ficoml
jp
test
sahf
testb
outsl
imul
ret
testb
andps
inc
cmpsb
int
mov
add
rorb
mov
mov
in
dec
or
mov
inc
jno
xchg
out
not
cmpsl
iret
adc
fldcw
out
or
test
andl
std
aaa
dec
daa
and
inc
ret
xchg
out
jl
insb
fcmovne
fsubs
cwtl
adc
push
sub
or
das
sub
inc
sbb
pop
add
adc
pop
sarl
inc
out
iret
pushf
add
inc
cmc
xor
mov
cmc
daa
lea
das
or
jns
xchg
cmp
js
shll
pusha
fwait
sub
dec
dec
dec
sti
xor
clc
mov
mov
outsb
mov
jno
ret
or
inc
and
xchg
addr16
mov
add
pop
loopne
leave
mov
push
inc
or
mov
dec
fwait
in
adc
cmp
xchg
pop
inc
mov
jecxz
xor
jle
int
clc
xor
les
push
mov
jmp
sbb
idivl
and
mov
xor
gs
xchg
sbb
testl
cmp
pop
add
mov
in
jecxz
and
push
cmp
jle
mov
cmpl
pusha
rorl
cmc
fnsave
push
repz
sarb
mov
dec
jno
movsl
jp
mov
mov
sbb
mov
dec
xchg
pop
shlb
inc
inc
lret
scas
push
mov
std
push
out
rolb
daa
or
add
jns
pop
xchg
xor
or
push
pop
or
movsb
lea
push
or
jns
mov
xor
loopne
das
scas
mov
inc
pop
add
fbstp
js
into
pop
call
dec
stc
sahf
mov
mov
inc
lea
sbb
mov
stc
filds
nop
int
sbb
or
mov
in
add
stc
mov
and
loopne
mov
mov
sub
imul
into
pushf
repnz
jbe
dec
lods
mov
sub
adc
dec
lds
pop
adc
lahf
cmpxchg8b
fidivs
mov
lods
xor
add
dec
add
dec
scas
dec
nop
cmp
adc
rclb
rolb
sahf
jnp
dec
jnp
xor
mov
into
sbb
test
xor
or
ret
sar
pop
int3
mov
test
cmp
adc
jo
pop
fstps
cmp
stc
es
es
idivb
cmp
rcr
adc
fistps
stc
lret
scas
mov
outsl
in
jecxz
scas
and
mov
cmp
pop
je
fsubl
movsl
fstpt
in
push
das
ss
pop
adc
loopne
aam
add
jmp
jecxz
xor
arpl
rcll
aad
add
aas
adc
fwait
jl
xor
ror
addr16
push
in
inc
pop
dec
cmp
lahf
orl
xchg
lahf
fistpll
arpl
jo
push
scas
xchg
or
mov
adc
mov
dec
cmpsb
cli
add
mov
push
or
xchg
xor
outsl
jecxz
aam
rclb
sbbl
mov
jmp
aas
cmp
xchg
or
out
mov
jp
add
inc
rolb
fsubp
sbb
out
add
add
mov
sbb
jl
insl
les
call
lods
repz
sbb
cmp
mov
lds
lods
sbb
adcl
jmp
incl
pop
lret
jp
cltd
sahf
out
shlb
out
aaa
movsl
ljmp
in
jmp
addb
adc
movsb
mov
es
cmpsb
mul
mov
negb
inc
dec
xchg
dec
xchg
sub
lea
lods
fs
cmp
mov
loop
in
negb
jnp
fs
scas
es
les
pop
std
pop
mov
insb
xor
dec
adc
mov
sub
xlat
sub
sbb
divl
xchg
xor
add
pop
pop
cmp
ror
cmpsl
push
add
stos
pop
jmp
xor
sbb
repnz
mov
popf
push
pushf
in
sub
xchg
or
rolb
gs
push
mov
popa
das
lock
inc
es
adc
pop
in
pop
dec
into
pop
mov
or
mov
pop
jbe
mov
pop
scas
xchg
sub
ds
in
dec
cltd
pop
mov
mov
xchg
jg
ret
les
sbb
jae
test
xor
in
int
cs
or
repnz
pop
int
fidivrs
pop
mov
fcoml
cmp
jmp
cld
jae
pop
xor
les
loope
jl
push
aam
lahf
sub
je
or
sub
sti
pop
in
mov
jne
and
ret
pop
jg
cmpl
movsb
fsubrp
inc
int
push
inc
xchg
mov
dec
mov
mov
sarl
sbb
test
icebp
scas
and
imul
mov
push
or
push
jmp
in
push
and
mov
pop
sub
jb
mov
cmp
or
mov
and
xor
nop
pop
push
repnz
and
pop
jo
jne
add
out
mov
ds
aad
arpl
mov
jnp
or
xchg
push
or
pop
add
daa
dec
push
sbb
mov
jne
ljmp
daa
scas
push
in
push
out
mov
scas
or
outsb
sub
jmp
mov
test
adc
mov
xor
cmpsl
adc
push
imul
pop
xor
xor
lds
pop
xor
push
fcoml
mov
imul
mov
sbb
mov
jbe
adcl
sbb
les
pop
insl
out
enter
es
add
adc
mov
sbbl
lret
xor
lods
mov
mov
in
lds
mov
dec
jo
clc
ret
sbb
vmovd
dec
inc
pop
imul
data16
xorl
jge
ret
clc
mov
and
mov
cmp
insb
push
push
sub
loopne
cmp
sub
sbb
frstor
xchg
js
xor
push
bound
leave
xor
sahf
adc
mov
adc
xchg
jnp
in
int
add
in
leave
jmp
jle
mov
and
xchg
inc
addr16
cmpsb
add
movsb
inc
bound
adcl
fs
rol
fsubl
stos
dec
hlt
cmp
dec
sbb
adc
mov
xchg
xchg
mov
xor
jg
sti
fmull
pop
mov
pop
inc
xchg
in
daa
repnz
sahf
sbb
gs
lock
shll
out
in
xchg
jne
and
rorl
ja
adc
repnz
fidivs
insb
or
jp
daa
lret
lods
xor
imul
ss
insl
mov
inc
cmp
scas
pop
adcl
xchg
cmp
popf
imul
lods
rolb
sbb
sti
loop
push
dec
dec
nop
sub
mov
imul
or
popa
cs
scas
iret
mov
imul
adc
mov
and
popa
aaa
fcomp
arpl
jle
pop
cli
jbe
pop
ljmp
loope
ljmp
pop
or
mov
call
pop
mov
dec
mov
fists
pop
ret
jmp
ret
je
insl
in
shll
or
std
repz
or
push
xchg
pop
out
cmpsl
adc
int
jb
cmp
adc
fwait
push
mov
push
mov
jmp
jo
jno
pop
cmp
add
or
dec
push
mov
sbb
aad
ret
loope
arpl
cmp
push
cld
loope
jae
jmp
pop
or
cmp
lea
and
dec
adc
fisttpll
adc
adc
sahf
test
xchg
es
push
lahf
xchg
nop
repnz
mov
adc
sbb
nop
xlat
adc
les
pop
xor
sti
xchg
mov
arpl
ja
pop
sbb
pop
adc
jp
xchg
insb
ss
outsl
nop
xchg
xchg
inc
in
adc
xchg
sbb
inc
mov
mov
add
leave
push
sbb
int
mov
clc
bound
jecxz
ret
xor
cltd
xchg
cmpsb
sbb
icebp
add
pop
pop
jne
in
jbe
sti
in
iret
insl
pop
jae
adcl
test
stc
in
and
inc
jle
in
mov
pop
sbb
pop
push
test
push
and
addl
and
ret
jmp
push
das
insb
aaa
mov
adc
je
pop
sbb
or
push
adc
fadds
adc
dec
int
push
cli
cmpsb
ss
lods
inc
mov
fwait
incb
repnz
mov
js
ja
pop
stos
daa
mov
lahf
pop
mov
dec
ret
inc
pop
pop
clc
fistpl
mov
in
adc
xchg
dec
dec
push
pop
in
inc
mov
sub
push
insb
mov
cmp
sub
leave
sbb
mov
adc
xchg
fcmove
jo
and
xor
shrl
rorl
lds
loope
pop
test
sub
lahf
pop
dec
aad
popf
test
test
ret
outsl
mov
aad
dec
imul
mov
jbe
repnz
or
fstp
inc
and
notl
popa
jbe
std
inc
nop
xor
ror
push
divl
or
aas
int
mov
mov
cli
xor
repnz
xor
jle
pop
aad
mov
mov
stos
jb
int3
mov
and
rcrl
icebp
cmp
into
movsl
in
jp
pop
push
mov
subl
cmpl
push
or
popa
sub
push
pushf
sub
sti
xchg
and
pop
fldl
mov
cmc
sbb
cmp
outsl
stos
in
sar
jae
dec
frstor
jbe
xor
pop
mov
dec
popa
dec
sub
jns
mov
std
jecxz
mov
loope
test
or
mov
jp
push
mov
movsb
daa
scas
pop
sbbb
xchg
hlt
imul
and
aad
xchg
mov
popf
xlat
fldenv
inc
push
sbb
shll
out
and
testb
in
cmpl
add
mov
inc
mov
mov
call
stos
bound
lea
out
cmp
mov
mov
cmp
fs
jbe
jle
in
sbb
pushf
inc
mov
ds
push
pusha
sbb
push
pop
idiv
fcoms
or
dec
add
cmpsl
ss
aam
jge
dec
lods
xor
shr
xchg
dec
jmp
xchg
test
jp
out
jae
jo
dec
in
jl
xchg
jmp
xor
xchg
push
pop
movsb
faddl
scas
jbe
fs
and
fdivrp
sub
adc
add
clc
lcall
push
iret
mov
xor
fsubrs
mov
mov
std
or
popa
or
inc
test
hlt
push
xlat
mov
repnz
andb
in
xchg
sub
cld
ds
or
imul
jne
dec
add
jns
xor
shll
jg
xchg
fldt
mov
xchg
pop
popf
or
and
arpl
and
mov
and
pop
cwtl
or
shr
xlat
popf
sub
rorl
test
mov
inc
int
xor
sbb
mov
jne
push
stc
incl
jge
pop
testl
aad
imul
cmp
sub
jno
pushf
dec
and
pop
lods
mov
jecxz
jg
adc
cmovl
xlat
test
jb
add
loopne
push
push
ret
or
mov
fmuls
or
pop
sbb
fidivl
or
mov
negl
stc
in
pop
mov
jmp
add
cmp
orl
cmpsb
sbb
jecxz
cmovp
fmull
xchg
mov
sub
mov
aaa
dec
sbb
mov
sbb
cmp
in
sbb
xorb
js
mov
pop
shll
addr16
test
mov
test
sbbb
test
sbb
cmp
inc
pop
adcb
pusha
aaa
int
jns
mov
popw
shrb
pop
out
lock
jge
pop
and
hlt
shlb
jl
inc
ror
xchg
pop
xchg
mov
mov
sbbl
fwait
insb
stos
aad
mov
movsb
loop
pop
in
aas
jmp
ljmp
xor
xor
fildl
xchg
fimull
sub
js
sub
jg
rcrb
ror
jbe
cmp
jnp
test
pop
repnz
add
jle
jmp
push
je
stc
hlt
mov
sub
in
arpl
std
in
cwtl
lods
push
shll
inc
xor
cmp
or
xorb
fimull
cmp
jmp
jae
inc
sbb
enter
dec
adc
jne
pop
pop
lods
leave
leave
xor
in
loopne
dec
add
pop
inc
imul
shll
subl
dec
cltd
xchg
fnstsw
mov
adc
cmp
push
sti
sub
cmp
cmp
and
lahf
lods
xor
iret
ds
and
cmpsl
mov
cli
shlb
fdivs
push
and
rcrl
je
pop
stos
pop
cld
dec
push
mov
pop
addr16
xor
ljmp
clc
mov
sbbb
push
dec
stc
mov
hlt
push
mov
test
out
cs
out
mov
inc
notrack
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
nop
nop
push
call
call
mov
push
call
push
push
push
push
push
push
push
call
mov
call
mov
mov
mov
shr
call
add
call
call
rorl
call
mov
roll
add
call
roll
call
call
sub
call
notl
roll
add
pushl
call
dec
jne
call
pop
call
mov
call
pop
call
pop
call
leave
call
jmp
call
call
nop
