push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
pushl
call
mov
push
push
call
push
call
mov
mov
mov
movl
jmp
mov
and
mov
mov
xor
push
pop
div
push
pop
mov
shl
mov
xor
push
pop
div
push
pop
sub
push
pop
sar
or
mov
mov
sub
mov
mov
xor
push
pop
div
mov
mov
imul
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
xor
push
pop
div
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
mov
mov
and
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
int3
int3
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
cld
add
sahf
sub
into
xchg
scas
lock
das
sbb
cmp
call
test
mov
jbe
mov
jmp
sbb
cmpl
mov
xchg
add
cmpsl
pop
rorb
push
in
sbbl
xor
stc
pop
push
jp
or
repnz
or
or
dec
ret
aad
hlt
les
mov
and
mov
outsb
and
fmuls
es
cwtl
aad
push
adc
pop
xchg
int3
cmpl
fwait
and
fs
mov
lds
movsl
fstpt
fnstsw
mov
pop
adc
sarl
mov
daa
adc
mov
mov
rcll
ret
nop
sub
pop
call
fstpl
addr16
mov
and
js
dec
dec
cmp
aad
xchg
out
xor
aaa
fdivr
pop
mov
xchg
lret
hlt
pop
stos
xchg
xchg
jae
int3
mov
shrl
inc
out
mov
std
push
shll
pusha
nop
outsl
sbb
lea
cmp
loopne
ja
cmp
dec
out
or
lds
nop
mov
push
stos
mov
mov
lods
inc
jp
enter
movsl
push
cmpsl
int
inc
xchg
fldcw
stos
push
nop
mov
push
outsl
dec
jle
test
out
sub
push
cmp
inc
out
add
inc
dec
mov
xchg
jb
inc
jmp
icebp
jg
fsubr
jmp
pop
add
orl
push
mov
fcmovnbe
and
cld
pop
dec
loope
aas
adc
inc
pop
lret
add
andl
mov
xchg
add
sub
scas
lea
push
rorb
scas
cmp
arpl
and
and
mov
jg
or
aad
movsl
rolb
xchg
mov
dec
adc
push
dec
lret
mov
rclb
lret
ret
lea
mov
and
jb
sub
xchg
inc
sbb
mov
mov
jns
pop
lods
pop
inc
xchg
push
aaa
sub
adc
lds
adc
mov
cld
sub
scas
fwait
pop
xchg
aaa
ret
roll
ds
and
mov
repnz
jno
sub
add
jmp
cli
ljmp
mov
stos
pop
pop
addb
jmp
jl
sbb
add
insl
inc
imul
or
insb
mov
mov
or
loop
leave
push
push
xor
lahf
dec
xchg
mov
cmc
mov
loopne
ss
fidivrl
and
test
out
jne
pushl
sbb
jb
push
dec
shrb
xchg
xchg
jge
stc
or
xchg
inc
movsl
inc
sbb
sahf
mov
jnp
adc
jg
cmovb
psllq
inc
mov
insl
push
loopne
xchg
xchg
jne
push
out
xor
inc
rorb
enter
les
xchg
dec
mov
mov
es
mov
xorl
sub
sub
dec
cmp
outsl
mov
pop
inc
and
fbld
or
seta
gs
jae
rclb
add
aad
or
mov
mov
jb
addr16
dec
and
cli
pop
sbb
xlat
repz
sbb
bound
add
int
mov
out
add
push
scas
push
or
flds
sbb
in
and
cmp
push
fiaddl
outsb
subb
cmpsl
arpl
ljmp
cmp
mov
pop
jbe
repz
add
das
push
mov
arpl
xor
daa
adc
mov
adc
inc
fcom
ss
jne
mov
xor
aad
sbb
cwtl
mov
push
mov
out
xlat
pop
pop
push
add
or
shrl
push
jns
test
and
xor
lret
data16
fwait
xor
mov
sub
cmp
and
nop
mov
pop
mov
pop
add
mov
adc
lods
popa
filds
xchg
and
mov
insl
hlt
mov
mov
mov
clc
mov
push
sti
mov
std
push
inc
add
push
mov
stos
jae
dec
fdivr
and
pop
mov
std
sbb
dec
cmp
insl
imul
jne
std
push
xchg
fsubp
int3
cmp
mov
les
cmpsl
nop
sbb
inc
jmp
mov
push
jle
mov
or
stos
xor
pop
orb
cli
mov
mov
ror
or
jmp
cmp
pop
lret
mov
or
or
lods
inc
aas
dec
pop
adc
xor
orl
jmp
mov
inc
xor
aas
sbb
xor
mov
cmpsb
inc
outsb
popa
mov
or
adc
mov
inc
or
xlat
enter
ds
pop
into
mov
vpaddusw
pop
aaa
imul
icebp
std
or
bswap
ss
jl
cmp
pop
stc
std
aaa
xor
lret
pusha
cmp
add
popa
flds
jo
outsl
fucom
insl
fildll
lods
mov
nop
dec
ja
out
imul
push
sub
push
arpl
inc
lcall
shlb
sbb
or
sub
lods
loope
sarb
fbstp
mov
push
lcall
lds
jg
mov
push
xchg
xor
lcall
pop
mov
push
mov
adc
add
sarl
jae
pop
fdivrl
mov
lea
push
pop
ss
loope
mov
sbb
aad
nop
mov
mov
pop
divl
mov
add
or
sahf
xchg
jl
dec
xor
les
jmp
lock
push
ds
cmp
insl
test
pop
gs
xor
enter
cmpsl
jae
xlat
clc
mov
inc
aam
pop
clc
push
jae
jnp
addr16
and
std
xchg
or
sub
lcall
data16
jno
push
mov
rorb
fistl
cmp
push
mov
orb
mov
mov
pop
sub
push
lods
lock
or
mov
mov
pop
lahf
jnp
cmp
jnp
shl
movsl
lock
mov
in
in
cmp
mov
mov
test
xchg
sbb
data16
push
add
loopne
adc
pushw
mull
addl
imul
loop
sub
stc
push
and
jecxz
jl
aas
popf
cs
test
nop
stos
das
push
cmp
xor
mov
aas
pusha
sub
sub
mov
adc
pop
pop
in
repz
mov
adc
jnp
cmp
in
and
pop
add
lahf
mov
mov
xchg
jb
sub
cmp
rorb
jmp
and
fdivrp
sbb
shlb
mov
fdivr
mov
daa
fs
into
in
popa
pop
sbb
enter
ret
push
repz
jge
repz
rcrb
mov
push
js
std
in
arpl
cwtl
loopne
ja
xchg
mov
lods
and
inc
inc
jp
xchg
mov
orb
outsl
push
out
cltd
push
mov
add
mov
stos
pop
push
outsb
jae
sub
and
or
xor
mov
jl
jle
mov
movsl
xor
jmp
pop
xchg
lods
movaps
push
push
ret
loop
sub
fildll
lret
popf
push
ljmp
xchg
psubq
cmpsl
mov
ja
pop
fsts
pushl
movsl
iret
add
pop
cmp
push
fbld
jb
or
pop
cmpsl
sub
push
xchg
dec
repz
push
adc
out
jns
sbb
adc
daa
les
hlt
sub
add
inc
jbe
mov
xchg
jne
je
mov
inc
xor
out
arpl
sbb
mov
cmp
mov
addr16
int
data16
ja
out
dec
imul
out
nop
inc
in
jns
shrb
xchg
mov
add
xor
xor
push
push
sahf
rorl
sar
jmp
cwtl
sbb
fsubrs
and
rorb
sub
jbe
mov
dec
xchg
jo
sbb
fistpl
pop
scas
sub
cmpsl
mov
shlb
aam
and
mov
mov
stos
addps
xchg
fadds
mov
test
rclb
jl
sub
int
lsl
mov
faddl
add
and
cmp
std
lahf
stos
pop
sbb
xchg
xchg
pusha
mov
add
push
or
mov
and
sbb
dec
sbb
fnstenv
iret
rorl
movsb
inc
bound
rcrl
cltd
jae
outsb
sub
sbbb
sbb
jle
dec
rclb
inc
bound
mov
push
push
cmpsl
fdivrs
mov
push
sbb
shr
cmp
addr16
inc
pop
in
ret
and
int
ret
add
imul
push
push
popf
mov
popf
push
aas
mov
inc
xor
push
xor
bound
in
test
push
insl
push
out
and
lcall
xchg
hlt
in
sbb
push
int
mov
cltd
jecxz
inc
adcl
add
imul
iret
stos
mov
adcb
xchg
sbb
lods
cmp
mov
adc
out
es
pop
je
data16
adcb
cmp
mov
dec
aas
add
adc
inc
xchg
sub
loope
sub
iret
cltd
jecxz
fwait
or
mov
lcall
fwait
negb
in
inc
fistpll
mov
int3
test
aam
cwtl
pop
divl
lretw
xchg
sub
jne
add
sarb
fists
leave
add
js
ja
or
and
sub
int
jecxz
hlt
jb
adc
das
push
ds
push
push
cmp
pop
ja
fnsave
or
ret
xor
aaa
sub
ret
icebp
xchg
sub
out
fwait
je
and
ljmp
jle
inc
pop
insb
addr16
add
aas
xchg
pop
jnp
mov
pusha
xorb
sbb
je
orb
jp
shlb
dec
scas
jns
sub
sahf
sbb
lock
and
in
cmpsb
adc
call
or
out
xor
jae
movb
fnstenv
or
loop
xlat
adc
push
sahf
adc
xchg
inc
lret
dec
mov
pushf
test
pop
loopne
xor
cmpsb
dec
fisubl
das
jns
xlat
and
lods
push
mov
cli
xorb
dec
repz
adc
inc
add
movsb
cmp
pop
fwait
mov
mov
mov
lock
push
ret
inc
sbb
and
cli
mov
mov
lret
cmpsb
sbb
sbb
jle
xchg
in
loop
xchg
mov
sti
outsl
mov
mov
jl
cld
push
aad
xchg
and
pop
daa
xchg
pop
mov
xor
jp,pn
in
pop
jns
cmp
adc
fs
lea
lret
outsl
mov
dec
outsl
pushf
movl
pop
iret
cmpl
sbb
stos
test
sbb
sub
in
mov
sbb
clc
push
or
dec
aam
sbb
in
das
sbbl
ljmp
pop
addr16
sbbl
popf
loope
test
mov
data16
cltd
cltd
inc
or
lods
sbbb
in
xchg
and
jno
and
data16
iret
roll
xor
cmpsb
push
pop
loopne
mov
stos
sbb
xchg
sub
jecxz
lret
xchg
dec
cld
jmp
lret
or
hlt
fwait
sbb
jl
insb
shll
inc
mov
push
jle
dec
sub
dec
sarl
mov
push
js
in
push
out
xor
cld
out
mov
inc
and
jg
divl
jp
add
int3
xchg
fwait
lcall
fwait
mov
ret
bndldx
pop
add
or
outsb
lret
ss
loope
add
outsb
mov
add
dec
popa
clc
adc
pushf
xor
hlt
icebp
or
addr16
sub
push
in
push
xor
xchg
mov
ret
ljmp
sub
push
bound
jp
mov
in
push
incb
cwtl
push
jne
dec
jnp
and
adc
ret
jnp
adc
mov
jns
dec
sbb
mov
or
or
stc
cmpsb
dec
and
scas
pop
push
xchg
or
leave
sbb
loop
mov
jge
scas
sbb
dec
inc
xor
push
cmpsb
inc
cmp
sub
xchg
ja
mov
mov
das
call
and
or
les
call
ret
pop
mov
push
push
add
popa
inc
xor
mov
or
add
daa
fstpt
imul
and
dec
data16
aas
ds
push
jae
je
ror
aas
add
inc
clc
in
push
std
xchg
sbb
aad
push
jbe
add
mov
das
test
stc
mov
dec
jae
mov
fiadds
adc
sub
or
lods
es
mov
ds
adc
or
mov
jns
jg
movsb
push
jg
jmp
in
mov
jb
adc
frstor
sahf
fwait
mov
push
daa
pop
pop
in
imul
mov
outsb
cmp
mov
test
ret
inc
inc
adc
mov
and
int
mov
and
negb
mov
inc
das
xor
adc
bound
mov
mov
call
or
push
jmp
mov
cmp
sbb
in
and
dec
outsl
ret
or
pop
mov
pop
in
cmpsl
repnz
test
lcall
fcos
out
mov
inc
icebp
sub
and
lods
dec
pop
or
xchg
sub
popa
nop
daa
xor
and
jmp
push
mov
or
int3
outsl
ficompl
aaa
jae
push
popa
jns
xchg
popf
mov
or
jge
lret
out
dec
dec
mov
mov
dec
out
push
mov
mov
iret
in
lock
and
cmc
adc
es
fwait
inc
jg
or
inc
add
lret
out
cmp
xor
xchg
in
gs
iret
mov
cmp
into
popa
shlb
mov
adc
sub
lret
mov
ds
negl
xor
xchg
pop
cmp
and
in
pop
add
enter
jle
aas
adc
movsb
adc
cs
push
add
sub
data16
inc
inc
or
push
cmpsb
sbbb
pop
ljmp
pop
jbe
inc
arpl
insb
pusha
mov
mov
mov
lret
jmp
pop
subb
mov
mov
fdivl
mov
nop
or
test
push
sti
inc
cmp
add
inc
mov
add
imul
mov
dec
fiadds
mov
dec
je
out
xor
stos
add
jmp
popf
in
std
jno
inc
insl
mov
sti
add
xor
push
out
or
pop
lret
or
and
push
es
repz
les
dec
incl
std
int
or
mov
inc
inc
stos
jnp
cmp
fs
mulb
lret
dec
or
lea
ret
leave
inc
sub
mov
dec
xor
leave
xchg
mov
into
sbb
pop
inc
push
xorb
xlat
std
push
gs
popa
sbb
cltd
cs
mov
notb
aaa
jnp
adc
xorw
lret
xlat
in
inc
add
xchg
sahf
sub
aad
xlat
xor
js
out
mov
data16
sbb
pop
std
sub
mov
aaa
mov
jo
clc
push
in
cmp
sub
xor
aam
subb
clc
inc
jb
rorb
cwtl
lds
push
popa
fcomps
jmp
mov
repz
jne
cmpsl
addr16
in
insl
lock
mov
decb
mov
lcall
out
sbb
out
dec
jno
lock
mov
fprem
data16
lods
cli
scas
popf
cwtl
sbb
adc
add
lret
push
aam
outsb
imul
push
cmpsb
subb
or
pusha
lret
arpl
lods
iret
outsl
jmp
push
shl
lea
add
inc
lods
shrw
mov
xor
cmp
nop
les
popa
mov
mov
popf
fsubl
cmc
pop
or
xor
fmull
jo
data16
inc
pop
dec
inc
cmpsb
cmpsl
into
jno
lea
rcrb
mov
dec
cmp
inc
mov
imul
cmp
in
inc
outsl
testl
dec
sub
ds
jp
push
adc
loopne
repz
inc
shlb
dec
mov
loope
mov
sbb
add
ficompl
cmp
jecxz
out
adc
inc
nop
call
fdivrp
movsl
dec
push
sub
push
gs
inc
in
inc
jbe
mov
fsubs
pop
shlb
pop
test
je
jle
and
aaa
adc
mov
insl
pop
mov
pop
mov
jne
fildll
mov
cmp
testl
out
xchg
daa
pusha
sub
mov
sub
les
mov
mov
rcr
jp
add
insl
mov
sbb
pop
sbb
pop
sbb
mov
movsb
shll
jne
fcomip
sarb
gs
sbb
insl
outsl
sbb
pop
aas
out
or
xchg
loop
test
xlat
dec
mov
xchg
stos
jmp
cmp
ret
out
mov
lods
push
mov
icebp
inc
leave
and
cmp
shrl
cmp
ret
aas
inc
sbb
lret
push
push
gs
lds
sbb
xsave
ja
rcl
adc
mov
cmpb
xor
jmp
sti
aas
pop
jo
push
pop
scas
stos
push
jge
sbb
jge
ljmp
lods
xchg
jbe
mov
stc
pop
add
adc
sbbl
nop
sbb
call
in
push
pushf
pop
pusha
fwait
adc
pushf
add
pop
cmp
loop
cwtl
cltd
inc
cld
jne
lea
xor
int
pushf
test
leave
xchg
in
and
lcall
push
jg
repz
inc
inc
pushf
mov
aam
arpl
sbb
lods
mov
aaa
and
xchg
mov
inc
xlat
arpl
ja
xor
xchg
cs
insl
inc
pop
pop
js
sbb
int
lahf
mov
xor
or
lock
sbb
push
scas
aam
int
aam
cmp
mov
cwtl
push
sub
cmp
insb
cmp
push
js
sbb
mov
movsb
fimull
add
popf
inc
jmp
and
cmpl
push
jb
sbb
cmp
add
call
shl
push
negb
push
mov
subl
pop
in
insb
and
adc
jg
ret
lret
sbb
cmp
cli
xchg
cmp
lea
mov
inc
int
aad
ret
xchg
mov
ret
in
mov
or
pop
inc
xlat
xchg
sbb
inc
mov
mov
dec
out
jae
fwait
gs
movsb
jecxz
mov
setne
adc
mov
adc
push
pop
data16
or
jmp
test
test
push
dec
jnp
jmp
aas
sub
dec
mov
pop
mov
cmp
scas
mov
cmp
and
aaa
ss
fmuls
jl
sbb
dec
ret
sub
lock
mov
sti
pop
push
add
test
in
and
shlb
out
cmp
repz
ss
jge
cs
fisubrl
and
fisttpll
push
jae
lret
scas
sbb
insb
inc
xchg
xor
push
stos
mov
imul
pop
pop
mov
fstp
sbb
int
jmp
ficoms
movsb
pop
mov
stos
jno
std
js
add
sahf
xor
repz
adc
inc
mov
xor
pop
nop
sbb
jb
or
lret
mov
mov
pop
cmpl
mov
js
xchg
cs
std
xchg
inc
or
sub
xlat
bound
or
dec
adc
inc
push
xchg
pop
fmull
sub
inc
pusha
pop
outsl
ds
cmp
cmp
push
es
fisubrl
xchg
inc
out
in
out
fstpt
sbbb
lret
mov
xchg
mov
enter
repz
fimuls
shll
nop
jge
in
movsb
mov
ret
fwait
and
subb
testb
pop
pop
rorl
xor
popa
gs
jp
xor
stos
leave
outsl
cmp
cmpsl
dec
push
clc
pop
test
pop
repz
mov
jl
mov
mov
aam
les
push
andl
sti
fnstcw
jns
adc
daa
cmpsl
or
or
scas
adc
xchg
jl
push
enter
xor
dec
cmc
inc
jb
cmp
mov
mov
sbb
ljmp
push
and
adc
ljmp
dec
pushf
cmp
mov
out
add
jle
dec
push
inc
insb
pop
imul
and
cmp
rcll
scas
pushf
add
mov
sbb
stos
or
outsb
dec
lahf
xchg
ja
test
data16
shrl
lea
iret
xor
adc
mov
loope
test
push
pushf
adc
mov
jno
mov
leave
outsb
hlt
js
push
or
lea
cmp
xchg
iret
push
inc
lds
lods
scas
inc
mov
ds
jle
pop
adc
cmp
mov
ds
inc
inc
aas
xor
dec
outsb
clc
lods
xor
ja
lahf
icebp
sbb
js
add
hlt
adc
jns
in
fimull
pop
mov
mov
stos
cmp
cmpsl
pop
outsl
sub
into
nop
adc
jae
push
inc
and
and
mov
push
paddsw
sahf
nop
cltd
sub
ret
pop
and
push
cmp
fstps
inc
mov
out
test
or
sbb
add
loope
pop
push
jbe
sti
sbb
insb
xchg
ror
xlat
mov
pop
pop
daa
into
pushl
out
in
lret
mov
sbb
mov
out
mov
addr16
and
cld
add
jg
push
in
nop
popf
stc
lcall
sub
sub
shlb
pop
mov
cltd
pop
sbb
jbe
xchg
add
sub
and
adcl
xor
roll
in
jl
nop
inc
pusha
shl
movsl
fs
jne
cs
in
mov
push
xor
icebp
cmp
sub
or
sti
mov
rol
jecxz
cmp
jb
mov
pop
loope
lods
jge
shll
adcl
into
sbb
and
lcall
les
sbb
gs
pop
aam
or
lods
push
loopne
and
dec
in
mov
dec
inc
cli
sbb
pop
mov
push
cmp
addr16
and
push
mov
pop
mov
sbb
in
out
imul
js
cwtl
mov
sub
jle
shll
ds
xlat
dec
add
outsl
pop
xorb
jle
sub
hlt
es
mov
add
sbb
push
push
std
repnz
iret
ljmp
call
popf
roll
leave
mov
mov
xchg
repz
aad
imul
outsl
stos
je
cmpb
out
cmp
dec
clc
dec
stos
loop
and
cmpsl
mov
xlat
aad
jne
dec
push
outsl
out
ja
add
add
sub
insb
scas
jne
repz
sub
test
test
jle
rcrb
mov
and
sub
aam
add
cwtl
xchg
push
rclb
dec
pop
imul
lcall
jb
or
mov
mov
xor
aam
mov
rcll
jmp
outsb
xchg
push
in
divb
lods
cmp
sbb
add
mov
and
clc
mov
push
or
outsb
pop
sbb
pop
insl
ljmp
jne
call
mov
das
push
jo
fists
mov
aam
subl
out
rcrb
out
push
xchg
add
jno
inc
int
iret
cmp
cmp
aas
jg
push
push
jmp
mov
add
mov
cmp
mov
adc
aas
or
push
sub
cmp
push
divl
push
scas
js
cld
stos
outsb
in
dec
int
pushf
addr16
and
sub
push
cld
xchg
dec
js
cmp
inc
jo
jnp
mov
sub
sbb
outsb
mov
pop
xor
push
add
leave
test
stos
adc
mov
cltd
mov
daa
add
xor
outsl
mov
lcall
in
cmp
mov
inc
lcall
scas
out
lret
jne
testb
in
aas
popa
stc
out
lret
outsl
scas
pushf
add
cmp
mov
jg
test
stc
pop
ds
xchg
xor
cmp
sbb
inc
frstor
mov
repz
pop
mov
sub
lock
mov
pop
lods
rorb
or
pop
cld
out
mov
sar
jnp
pop
pusha
std
dec
lret
incb
dec
fisttpll
out
push
or
fsubs
pop
in
push
or
lea
lods
lea
fstpt
add
pop
push
js
fisubs
dec
out
jne
adc
sbb
shrb
stos
and
pop
jmp
lret
jle
add
pop
sbb
dec
xor
jge
call
testb
and
xchg
test
dec
sub
rol
push
push
dec
fists
and
xchg
test
pop
test
dec
jle
mov
jp
test
pop
xlat
cli
push
mov
and
cmp
xchg
mov
arpl
arpl
xchg
cmpsl
cmc
jbe
int
lea
mov
sbb
rolb
leave
aaa
popf
jecxz
cmp
mov
rcll
popf
xor
pop
adc
rcrb
in
decl
pop
movsb
iret
bsr
rorb
ficoms
lret
add
out
int3
js
loop
pop
and
xchg
in
pop
out
pop
loopne
and
leave
adc
push
ss
xchg
dec
xor
iret
sbb
clc
inc
movsl
test
stos
pop
daa
aam
xor
push
mov
fidivl
out
pop
sub
in
pop
arpl
lret
out
and
and
repnz
cmp
adc
jmp
lea
and
movsb
push
pusha
jno
fiadds
jb
push
aad
adc
outsb
dec
in
jae
fcmovne
mov
sbb
sbb
pop
rcrb
fsubl
and
insb
add
adc
out
daa
cs
std
fimuls
xchg
mov
pusha
mov
and
jbe
add
and
push
and
scas
ret
adc
divl
jne
or
push
sub
mov
xor
js
cmp
popf
mov
lock
xor
add
inc
aam
aad
sub
cmp
out
adc
mov
mov
xor
lret
ds
inc
cmp
addr16
out
popf
mov
aaa
imul
pcmpgtb
inc
pop
fcmove
sti
callw
jmp
and
mov
mov
bound
push
cmp
sahf
push
push
ljmp
out
movsb
in
xchg
push
jb
cmp
in
imul
sub
shl
mov
fimull
ror
aas
loope
int3
loopne
mov
frstor
out
pop
mov
sbb
out
pop
seto
test
push
insb
bound
xor
lods
and
aad
hlt
jg
mov
lods
cmp
cld
in
fwait
mov
dec
and
and
dec
dec
decl
jp
jb
dec
imul
and
cwtl
movsb
fs
mov
gs
cmpsb
leave
outsb
push
pop
add
gs
or
push
mov
rolb
pop
lret
inc
and
scas
loope
push
jns
je
sbb
and
out
and
sahf
cltd
xor
dec
pop
in
adc
fwait
add
test
mov
mov
into
sub
inc
jecxz
xor
adcb
mov
fimuls
xor
add
dec
mov
pop
into
inc
add
loope
pop
mov
pop
test
insb
push
fdivs
cmp
in
in
adc
scas
loope
push
or
pusha
dec
jns
mov
mov
pop
ret
pop
sti
inc
fwait
addl
movsl
out
insb
xor
shll
cmp
mov
mov
test
xchg
xchg
inc
popf
sbb
pop
add
aad
push
fstps
cmp
sub
xchg
mov
fs
in
push
andb
and
iret
cwtl
inc
adc
enter
push
and
cmpsl
rorb
leave
mov
int3
jp
aam
push
and
inc
dec
fidivl
mov
cs
pop
add
loope
sub
push
sub
loope
dec
pop
xchg
adc
test
push
scas
decb
addb
push
cmpsb
outsb
or
adcl
aaa
adc
pop
je
pop
ss
pop
jge
cmp
cmpsb
lret
test
rcll
sti
mov
movsl
std
movsb
mov
sbbb
loope
mov
or
sub
cmpsb
sub
outsb
ljmp
push
movsb
jp
cmp
je
push
jns
stos
add
test
pushf
jmp
fldcw
lret
pop
push
xchg
in
lea
push
mov
cld
jb
mov
das
dec
mov
mov
dec
shll
mov
inc
inc
cmpsb
xchg
dec
sub
push
lahf
icebp
mov
decb
clc
or
adc
jg
push
clc
icebp
push
jmp
jge
ret
inc
and
loope
dec
nop
and
jmp
out
pushf
and
cwtl
out
fistpl
mov
inc
lods
int
aaa
aad
bound
or
sub
push
in
mov
cmovae
lods
inc
xor
mov
dec
sbb
push
cmp
bound
and
js
jno
sub
insl
out
jge
push
in
pop
js
add
mov
stc
mov
mov
aam
jbe
mov
mov
mov
and
push
popf
push
mov
lock
pusha
fistps
add
mov
je
outsb
cmp
loop
fiaddl
insb
lods
cmp
xchg
lods
jmp
jmp
negl
inc
inc
mov
adc
pop
cmp
adc
or
popf
hlt
ljmp
xor
jl
mov
loop
sub
cmovne
inc
push
dec
mov
mov
cmp
jge
fmulp
push
fucom
or
rcl
sbb
dec
je
orb
and
out
and
fadds
imul
mov
dec
arpl
or
cmp
hlt
xor
mov
mov
outsl
inc
fsubrl
xchg
scas
daa
jmp
stos
fsubs
or
mov
imull
jg
fwait
sub
pop
push
jb
insl
cmp
sbb
aas
cmpsl
jns
inc
mov
shlb
hlt
sub
stc
mov
daa
mov
fs
sbb
xchg
inc
jge
add
in
sub
dec
and
mov
lret
lret
bswap
fdivs
lods
popa
xor
ljmp
jg
mov
sub
sahf
insl
aad
pop
sbb
setnp
jmp
adc
hlt
into
inc
dec
mov
pop
addr16
je
js
jge
in
mov
aad
jmp
div
loopne
push
out
pop
inc
icebp
test
stos
jnp
xchg
sarb
jmp
mov
clc
mov
ret
lods
ret
cs
inc
dec
push
add
cmc
fwait
sbbl
outsl
jns
cli
ficoms
pmulhuw
fsubrl
jecxz
repz
gs
popa
dec
jge
sarl
adc
jp
dec
fldcw
out
xchg
iret
fisttps
add
mov
or
aam
xlat
out
mov
aas
and
gs
lods
lock
cmc
inc
clc
inc
jbe
inc
lea
fiadds
stc
inc
mov
adc
and
and
push
insl
insl
lock
cmp
std
out
iret
add
int
fiadds
test
cli
fimull
or
xchg
pop
dec
jge
mov
test
int3
mov
into
je
lods
add
push
fcmove
ret
add
cli
push
mov
outsb
jne
and
dec
mov
out
adcb
scas
popa
es
pop
das
jo
imul
or
jecxz
mov
cmpsl
xchg
data16
xchg
aaa
test
outsb
jbe
xchg
sbb
cwtl
icebp
add
aad
jne
es
mov
andl
mov
mov
add
mov
inc
adc
lock
or
sbb
mov
mov
xchg
sbb
mov
xchg
pop
sub
mov
jmp
dec
fsubs
cltd
hlt
add
xchg
gs
push
push
cmp
call
jno
leave
mov
and
push
sahf
test
cmpsl
cli
cmp
mov
test
mov
inc
mov
jge
fistpl
andb
cmpsl
jbe
aas
stos
sub
mov
xchg
clc
lock
fwait
out
mov
push
inc
push
lock
into
jg
jbe
test
stc
push
cwtl
dec
sarb
mov
push
jae
aam
ja
sbb
ret
and
or
js
pop
adc
sbb
in
and
mov
in
and
push
shl
dec
jmp
sahf
xchg
cmp
fcomip
std
cmp
or
cmp
pusha
sub
push
dec
insl
int
add
sub
cmp
and
sbb
loopne
or
lods
pushf
enter
mov
fidivrs
dec
add
mov
or
clc
sbb
push
pop
sub
lcall
je
test
or
jae
call
pop
popl
sub
fsub
pusha
lds
jl
imul
ret
sbb
cmp
jnp
daa
jl
out
cmp
std
arpl
aam
sbb
lods
lahf
ja
sub
out
arpl
pop
cltd
sub
into
push
push
ret
xor
cmc
imul
pop
test
sbb
jg
and
xchg
out
mov
mov
inc
scas
adc
sbb
mov
cmpsb
orl
ja
adc
aaa
jo
and
mov
cmp
dec
push
cld
imul
xchg
frstor
pop
ret
fcoml
mov
jg
pop
imul
push
inc
pop
jmp
add
pop
xor
test
add
stc
mov
pop
jae
sbb
call
fwait
lret
sub
loope
insb
pop
mov
lret
jp
sub
xor
je
test
arpl
cmp
mov
pushl
sub
rcrl
int
push
pop
arpl
mov
popf
xchg
cmc
outsl
mov
sub
push
enter
mov
and
push
leave
or
xor
sar
sbb
mov
xor
stos
jb
pop
dec
ds
dec
push
lods
pop
leave
push
fwait
mov
or
mov
sbb
dec
jge
inc
mov
jp
or
sub
loope
jp
scas
not
push
inc
das
jecxz
cmp
aas
sbb
jae
push
push
sbb
sbb
mov
sub
pusha
sbb
adc
sbb
pop
inc
dec
pop
addl
add
out
popf
fldt
into
add
push
push
rolb
cmpsb
and
loope
test
repnz
sub
hlt
push
dec
mov
stos
sub
loope
enter
jl
jo
sub
fmuls
xchg
xorl
inc
daa
loopne
xor
fiaddl
add
and
sbb
addr16
setno
jno
jle
jecxz
push
mov
lret
rolb
sbb
mov
adc
xor
loopne
mov
lds
mov
fnstcw
inc
cmpsb
popa
aad
mov
push
sub
jb
add
jnp
sbb
mov
jg
push
and
xchg
lea
push
movsb
daa
in
inc
mov
adc
mov
pop
jmp
inc
and
test
lods
push
std
dec
jbe
movsl
pusha
stc
lods
fistl
out
nop
pop
dec
shlb
outsb
dec
cwtl
in
outsb
pop
testb
outsl
adc
xorl
notb
int3
dec
xchg
cs
pop
or
fwait
lret
loopne
mov
jb
dec
sarb
push
mov
mov
inc
mov
clc
sub
inc
mov
lret
adc
pop
mov
mov
test
sti
fs
rcr
xor
mov
es
dec
add
rorb
mov
and
aas
sbb
pop
mov
push
dec
subl
push
fwait
mov
and
rcl
jp
xor
out
push
adc
xchg
xor
ror
div
push
mov
aam
sbb
fnstenv
jae
ja
cmpsl
out
lcall
pop
stos
lds
jg
sarl
pop
in
cs
ja
mov
lret
push
pop
test
popa
cmpsb
lret
cmp
lods
xchg
adcb
or
stc
add
cli
pop
and
call
mov
or
into
sbb
pushf
or
sub
mov
add
lods
adc
push
xchg
push
out
mov
stos
adc
push
imul
fs
dec
mov
insb
faddp
jns
lock
int
int
es
dec
dec
aam
adc
push
jecxz
inc
pop
aam
out
xor
fnstcw
jo
adc
rcll
adc
push
stos
adc
movsl
inc
out
frstor
ret
pushf
ret
iret
sbb
je
sarl
shl
cmc
adc
vmread
push
out
mov
popf
pop
mov
xchg
repz
lahf
sub
xor
adc
mov
pop
sti
out
shlb
fnstcw
loopne
jecxz
sub
inc
cmp
aam
mov
and
ja
imul
loop
sbbl
cld
subl
push
in
pop
fwait
xchg
fdiv
jnp
in
mov
test
sub
mov
dec
xor
xor
dec
mov
pop
mov
mov
fbstp
mov
je
bound
cmc
das
sbb
jge
incl
push
dec
insb
addr16
pop
mov
jno
mov
push
clc
lret
hlt
pop
push
popa
imul
sub
inc
sbb
add
mov
xchg
out
jns
fimuls
adc
sbb
pusha
add
imul
sbb
fs
cli
mov
int3
sti
add
dec
mov
or
lret
cmp
insb
data16
fsubp
add
xchg
pop
fwait
mov
inc
iret
out
push
mov
inc
ret
dec
jno
shlb
inc
js
out
pop
loop
cmp
js
das
mov
inc
outsl
enter
push
daa
loopne
sbb
jmp
cmp
insb
dec
mov
push
xchg
cmp
cmp
call
add
sti
mov
mov
adc
pop
push
pushf
and
ja
enter
aaa
pop
jle
imul
pushf
cwtl
in
std
std
mov
xchg
xchg
dec
mov
or
or
cvtss2sd
push
push
push
lods
mov
mov
adc
mov
add
cli
jne
pop
pop
sbb
and
lahf
xchg
clc
in
cwtl
mov
xor
dec
popa
movsl
mov
push
adc
ja
dec
sahf
inc
int
pop
in
out
es
fstps
int
lods
sub
shlb
mov
cli
call
mov
aad
jnp
pop
aas
pop
jmp
data16
cmpsl
jmp
push
sub
fstps
push
mov
xor
mov
popf
push
addb
mov
inc
adc
jbe
leave
shl
sub
cltd
mov
inc
addb
or
inc
aas
jo
inc
mov
mov
mov
popf
out
pop
out
pop
sub
mov
mov
lock
mov
pop
js
mov
push
add
sti
cmpsb
lcall
into
cmp
jle
sub
pop
mov
std
lods
rcrl
mov
jns
je
xchg
add
imul
mov
lcall
mov
sbb
aad
mov
sbbb
out
fmuls
xchg
sbb
pop
ljmp
xor
cmp
xchg
repnz
xor
push
mov
pop
je
pop
inc
movsl
lea
mov
xchg
lret
add
stos
or
adc
sbb
das
mov
sahf
decb
inc
or
movsl
mov
push
sub
sbb
data16
mov
adc
in
stos
mov
roll
push
inc
xlat
jae
fistl
pop
jl
and
arpl
mov
push
inc
and
sbb
pop
fsubs
rcl
jl
leave
cmp
lods
mov
call
icebp
aas
lds
lret
add
push
pop
imul
fwait
inc
shll
nop
shl
notl
add
add
outsl
mov
push
aad
xchg
lahf
movl
js
cwtl
mov
cmpsl
out
pop
pusha
ss
fidivrs
mov
push
mov
das
lahf
aad
xlat
test
enter
movsl
pusha
jl
fucom
push
leave
mov
mov
or
test
sbb
inc
test
push
in
add
push
mov
and
cmpsl
dec
add
aas
push
push
pushl
divl
fldl
dec
cmp
jp
or
xor
dec
sub
popa
lock
jbe
sti
dec
mov
mov
cmp
gs
ret
jecxz
pop
sbb
ss
iret
rorl
jmp
testb
mov
xlat
in
test
shrb
scas
inc
imull
xorl
aad
push
or
xlat
xchg
pop
shlb
insb
cmpsl
sub
push
iret
rclb
jecxz
dec
push
push
fwait
push
out
inc
xor
cmp
out
lds
and
pusha
outsb
je
sub
adc
ror
sub
repz
out
cmp
xor
pop
bound
test
xor
shll
mov
or
shrb
push
xchg
inc
jmp
push
lods
dec
dec
jno
xor
lret
std
mov
and
xchg
jle
in
inc
dec
rcll
cmpsl
sbb
sti
mov
test
and
jge
xchg
push
test
pop
aad
ficoms
pop
jp
dec
imul
sti
add
xchg
push
mov
ljmp
int3
jmp
repz
mov
push
popf
push
dec
setno
jmp
stc
sbb
xor
jnp
pop
js
and
mov
push
xor
stos
mov
stc
sahf
aas
mov
cmpsb
inc
jp
std
in
pusha
add
sub
jno
js
int
pop
insl
std
into
nop
mov
push
std
cs
xchg
and
pop
lcall
push
aas
movsl
cmpsl
push
or
or
imul
hlt
in
hlt
popa
leave
divb
push
inc
jo
loop
cmpsl
js
out
enter
subl
cmp
add
and
mov
sub
fwait
dec
lahf
mov
push
cs
xchg
jae
int3
je
dec
jecxz
jge
std
cmp
push
push
icebp
inc
pop
inc
shll
push
enter
sbb
les
fcoml
jbe
aam
push
jo
jle
lock
cwtl
xchg
mov
lods
add
cmp
rcrl
out
xorl
pop
mov
push
mov
loopne
pop
mov
lods
add
incl
inc
xorl
sub
add
cmp
out
mov
pop
push
or
add
loope
pop
add
xor
sub
into
and
outsl
mov
or
inc
and
arpl
mov
push
arpl
insl
adc
or
cmpsl
add
cmp
jbe
sbb
push
sbb
daa
loopne
push
data16
xor
ror
push
clc
jae
ja
pushf
std
sub
aad
mov
dec
jg
aas
jbe
sbb
insb
movsb
jmp
xor
push
das
jno
jmp
or
and
inc
addr16
das
cltd
xchg
inc
lods
aaa
jg
sub
sub
inc
in
mov
and
incb
add
mov
ss
lods
stos
cltd
pusha
loopne
iret
sbb
in
in
push
in
insl
je
xchg
pop
ds
xchg
movsl
sub
push
mov
int3
cmp
lret
push
mov
loope
stos
fs
or
or
iret
scas
xor
pop
pop
pop
push
push
cli
pop
mov
insl
pusha
mov
cmp
sub
pop
jp
jp
push
inc
dec
mov
shrb
dec
scas
into
mov
push
ljmp
mov
test
int3
sub
lock
incb
push
fs
loop
lods
dec
cmp
jae
imul
jne
add
imul
push
aaa
imul
jbe
sub
or
jge
sti
popf
ds
fmull
jge
int
adc
cmp
imul
test
sub
jp
or
in
xchg
out
popa
rolb
pop
and
aad
leave
push
sbb
fs
and
xor
xchg
aam
xchg
inc
cmp
pop
stos
leave
leave
or
mov
mov
stc
orb
inc
lret
out
mov
into
pop
mov
adc
mov
rol
decb
mov
mov
and
jns
push
out
rorb
mov
scas
jno
jmp
mov
and
jnp
dec
mov
push
or
fwait
aam
xlat
call
add
cmp
adcb
mov
lret
cmpsl
add
mov
incl
pusha
lcall
push
leave
push
fsubr
jp
push
shlb
pop
stos
xchg
adc
xchg
gs
push
push
scas
roll
orb
pop
fsubs
inc
xchg
add
cmp
pop
jle
ss
push
fimull
adc
stos
mov
lret
mov
mov
mov
popa
push
adcl
xlat
lods
mov
es
stos
fcoml
xor
mov
das
je
rorl
xchg
mov
mov
adc
inc
mov
sub
mov
sbb
sub
jp
negl
inc
ss
aam
ljmp
negl
in
add
mov
orl
or
adc
imul
adc
jbe
mov
pop
bound
mov
mov
and
gs
mov
cmp
push
movsb
flds
xor
jns
xor
and
adc
jbe
mull
lock
push
cmpsl
xor
movsl
push
mov
cmp
lea
push
subl
adc
leave
push
jmp
inc
insb
dec
sbb
adc
loop
je
idivl
xor
lret
repz
adc
cwtl
mov
add
mov
fwait
mov
imul
sub
mov
and
sbbb
pop
and
jmp
jle
test
rdtsc
test
jp
std
ja
and
jno
adc
adc
leave
inc
sbb
lods
cwtl
xor
imul
inc
pop
inc
push
inc
push
sbb
mov
add
ss
add
arpl
gs
sbb
lds
dec
xor
mov
mov
enter
dec
jp
out
sbb
andl
lods
jmp
mov
sbb
js
rcrl
sti
incb
cmpsb
into
es
pop
pop
fisttpl
sub
ret
repnz
ljmp
or
inc
loop
ret
addr16
in
psubd
jmp
add
movsb
cmc
ds
add
mov
mov
mov
pop
jmp
push
push
pusha
mov
ffree
jne
arpl
icebp
mov
aad
push
inc
push
stos
mov
xor
and
in
lea
or
mov
jb
cmp
jb
popf
push
cmpsb
add
stos
xlat
and
adc
stos
rclb
push
add
add
movsb
push
sbb
or
adc
cmp
dec
dec
add
mov
je
data16
xor
mov
dec
out
pop
pop
sbb
aam
mov
xchg
sub
stos
mov
daa
and
xchg
cld
lret
xor
lcall
popf
scas
lret
push
mov
xor
aaa
cwtl
fstpt
mov
rcrl
jno
test
xchg
jne
int3
in
repz
pop
clc
rol
cmpsl
sub
sahf
ds
pop
in
sbb
es
in
dec
addr16
in
mov
out
jmp
jo
je
leave
inc
lret
mov
ljmp
fstps
pop
shll
xchg
xchg
fdivrp
and
cmp
add
pusha
stos
push
pop
pcmpgtw
push
mov
add
adc
fmull
and
mov
enter
or
jge
sub
and
js
jl
pop
sub
jp
fwait
mov
popa
sbb
shll
jne
daa
push
imul
cmp
cwtl
xchg
cmp
inc
or
mov
mov
das
xor
inc
lret
popl
aas
cli
jb
in
int
add
inc
clc
enter
fcmove
push
jle
jge
iret
adc
adc
fimull
rorb
sbb
mov
shll
inc
shrb
fwait
pop
xchg
add
sub
js
mov
call
dec
jo
out
mov
imul
loopne
cmp
mov
int
cmp
rcll
inc
ja
mov
inc
push
push
out
ds
jno
scas
jbe
dec
or
dec
aas
lea
aad
fcompl
les
inc
mov
int3
test
pusha
js
outsl
jmp
cld
cwtl
test
dec
loope
push
icebp
das
cmpsl
dec
sbb
fwait
es
lock
in
ja
inc
cmp
xchg
push
dec
stos
mov
xchg
xchg
xorl
dec
mov
ret
adc
and
inc
cltd
ljmp
pop
aaa
lcall
mov
mov
push
mov
arpl
sbb
push
repnz
sbb
xchg
push
pop
test
aad
dec
pop
push
lcall
clc
fiaddl
out
lock
push
imul
enter
movb
adc
xchg
cmp
loope
mov
int3
sub
adc
xlat
mov
aas
sahf
sub
cld
xlat
mov
add
mov
call
stos
ror
or
les
sub
xorb
mov
mov
jns
in
pop
pop
imul
lock
scas
jno
iret
int3
sahf
mov
arpl
jbe
sbb
mov
pmulhw
or
adc
lods
insb
jge
test
push
mov
enter
aam
mov
imul
sti
inc
pop
adc
in
sub
add
psubq
push
ss
mov
dec
shlb
mov
or
push
add
mov
mov
pop
cmpsl
xchg
mov
decl
jb
push
mov
xor
in
push
loope
es
sub
push
mov
cs
idivl
cwtl
dec
call
mov
addl
cmpsb
mov
rorb
adc
adc
push
repnz
inc
stc
pop
pusha
inc
imul
mov
nop
sub
push
and
mov
adc
and
xchg
cltd
and
dec
mov
and
addr16
add
cltd
outsb
dec
bnd
sbb
gs
fisubs
mov
out
adcb
in
inc
xor
out
pop
mov
or
repz
in
fwait
jnp
or
jne
dec
xchg
fwait
and
push
hlt
imul
into
lret
xor
aam
sbb
test
les
lret
cwtl
aas
in
imul
std
aam
imul
lock
pusha
addr16
or
dec
std
movnti
mov
dec
clc
pop
xor
repz
pusha
inc
je
xchg
icebp
fsubp
test
aaa
sahf
pop
lea
xchg
jl
sbb
or
push
outsl
andb
repz
dec
xor
addr16
clc
add
adc
rolb
insb
pusha
out
cmp
mov
push
add
xchg
setnp
push
rolb
js
enter
shrl
pop
insb
push
call
adc
and
cmc
mov
sbb
add
sbb
and
or
lret
push
nop
das
sbb
test
out
outsl
ret
jmp
mov
popf
sub
xchg
dec
bound
test
dec
mov
rcr
test
inc
lods
into
push
es
sbb
ret
push
mov
ja
jae
mov
and
xorb
jae
or
fldt
mov
test
aam
popf
pop
jl
inc
jb
out
cltd
xor
xchg
or
out
mov
shl
int3
lcall
cmp
push
scas
mov
gs
xchg
cmp
popf
mov
push
cmp
aaa
mov
fidivs
int3
iret
lods
push
enter
push
int3
arpl
sub
fnsave
xlat
inc
je
das
inc
push
mov
xchg
bswap
or
adc
pusha
out
into
xor
and
mov
stos
shrb
in
sub
out
dec
lahf
pop
fcomp
push
roll
imul
dec
pop
aaa
test
mov
jl
std
fwait
aad
sbb
dec
ret
cwtl
mov
fidivs
dec
pop
pusha
scas
pop
test
mov
sahf
or
in
xor
out
pushf
lret
jmp
gs
dec
xor
xchg
cmp
bound
inc
test
stc
mov
sub
iret
mov
int
lret
int
insb
pop
push
sti
or
int
js
andb
jecxz
cvtpi2ps
popf
adc
sarl
mov
daa
and
imul
mov
inc
je
dec
jb
mov
out
rcrb
jmp
fsubp
inc
or
out
push
jecxz
test
mov
test
pop
mov
loope
push
add
frstor
cmc
cmp
hlt
adc
xor
js
stos
sbb
in
fabs
test
xor
xor
pushl
imul
cmpsb
in
ret
int
sbb
lcall
push
xor
sti
push
in
in
mov
les
jns
bnd
hlt
xor
mov
jecxz
mov
loopne
in
push
dec
ja
xchg
or
mull
movsl
shr
enter
mov
pusha
cmc
lds
add
lock
shl
push
jge
clc
dec
outsl
sbb
mov
addr16
push
cmp
push
int
lret
andb
jg
shrl
hlt
inc
test
lods
js
dec
in
vpaddw
or
xchg
lret
xchg
mov
enter
sbb
imul
add
sub
dec
mov
pop
pop
mov
in
and
es
cltd
out
mov
mov
fidivrs
lret
pop
test
mulb
lret
adc
lods
inc
jg
bound
sub
adc
xchg
std
inc
out
pop
sub
popa
pop
cld
jg
aam
loop
pop
mov
inc
sub
adc
sbb
js
xor
std
jno
mov
cmpsl
in
aaa
loopne
pop
mov
leave
mov
adc
cwtl
ds
xor
jbe
sub
push
dec
shll
insb
aad
into
cli
imul
out
jno
or
xchg
mov
pop
mov
inc
jno
das
pop
jno
stc
xor
add
xlat
sub
sahf
or
xchg
sbb
test
in
mov
into
pop
jmp
aas
pusha
mov
mov
test
and
push
or
cmp
push
xchg
jmp
pusha
gs
push
push
sub
fs
test
adc
push
mov
inc
ljmp
mov
and
cmp
lods
addl
jo
sub
lods
leave
push
or
pop
test
cli
jne
adcl
adc
jg
mov
mov
enter
sbb
jns
lahf
test
inc
dec
xor
pop
mov
loope
dec
popa
pop
push
fdiv
jae
test
movsl
mov
ret
or
dec
sbb
mov
test
adc
mul
into
sbb
imul
sbb
adc
roll
fdivs
rorl
dec
xchg
int3
movsl
dec
dec
daa
sarl
int
fidivs
clc
fs
js
inc
mov
stc
lea
push
push
fwait
pop
mov
push
ds
mov
cmp
push
pop
scas
mov
lods
out
subb
xchg
stc
je
adc
sub
in
pusha
jmp
pop
pop
cwtl
fcoml
adc
mov
sbb
push
loopne
test
imul
xchg
and
pextrw
enter
jnp
in
xlat
mov
outsb
in
xchg
nop
mov
or
je
int3
in
inc
lret
or
pop
push
aas
or
push
repnz
xor
xchg
mov
fisttpl
js
add
stc
push
loop
dec
enter
add
sbb
lahf
pop
add
test
mov
mov
sub
psubd
mov
mov
lret
dec
imul
in
imul
push
dec
and
mulb
std
or
add
es
ljmp
sar
xchg
repnz
dec
mov
call
pushf
push
cmp
sbb
popf
mov
mov
fimull
negb
mov
lret
xchg
xor
loope
mov
dec
test
roll
cmpsb
pop
dec
shll
xchg
sbb
fstpl
iret
or
adc
xchg
inc
pusha
lcall
jmp
fdivrs
mov
mov
fisubl
and
add
add
je
insl
lods
lods
fists
stos
sub
adc
cmp
icebp
pop
lock
movsl
in
pop
xchg
mov
mov
mov
ss
xchg
cmp
cmp
ds
sti
inc
and
cmc
cmp
repnz
inc
pop
adc
inc
push
outsl
adc
in
cmpsl
dec
or
mov
cmp
fdivrl
loop
lea
stos
rorb
sbb
xchg
inc
push
test
ljmp
inc
fs
icebp
push
push
cmpl
jmp
loope
add
sahf
dec
sbb
push
into
dec
hlt
add
mov
mov
mov
mov
enter
negl
push
cmp
push
xchg
addb
sarb
adc
fwait
mov
js
and
cmp
mov
fisubrl
inc
push
add
add
inc
insl
push
inc
xchg
push
mov
sbb
aad
fs
push
push
hlt
xchg
adc
mov
jecxz
int3
inc
outsl
std
pop
xchg
push
xchg
xlat
xchg
je
pop
adc
sbb
insb
sub
jns
inc
lds
orb
xchg
add
out
add
cmpsl
test
xchg
adc
jnp
adc
push
dec
aad
mov
in
jecxz
sar
movsb
sti
add
cmp
mov
test
sbb
push
xlat
sbb
dec
sbb
popf
out
add
popf
repnz
in
sub
push
xor
cwtl
outsb
xchg
clc
xor
mov
dec
orl
add
test
sti
jmp
inc
sbb
testl
adc
sub
jge
sarl
jp
out
sub
xchg
movsl
popa
ljmp
aas
ror
pop
fsub
in
xchg
sub
jnp
pop
sbb
cltd
shl
test
xor
testb
sbb
adc
cmp
loopne
dec
test
repz
pop
xchg
int3
inc
cmp
aam
nop
or
sub
push
fstl
sbb
cs
std
mov
aaa
pop
cmpl
aas
stos
adc
xchg
movl
ficoms
scas
movsb
dec
cmc
push
dec
aas
rcrl
stc
lret
js
add
xorb
stos
lret
stos
or
lret
sahf
mov
add
mov
dec
loope
test
sbb
inc
shll
fidivl
loopne
add
cmp
pop
dec
stos
addl
jne
cmpsl
lret
mov
inc
dec
shl
pop
cs
mov
js
stos
insb
push
idivl
imul
incl
cwtl
jle
sahf
roll
popf
imul
or
pop
pushaw
hlt
les
or
dec
and
mov
ljmp
mov
jne,pt
push
repnz
sub
and
fwait
adc
push
push
imulb
in
dec
xchg
sub
lds
std
cmp
pusha
and
pop
test
repz
jecxz
push
or
mov
pop
mov
pop
push
mov
xchg
fnsave
mov
adc
loopnew
xlat
mov
mov
mov
int
jbe
add
les
cwtl
mov
daa
out
push
inc
jb
in
cwtl
mov
in
outsl
cmp
out
xor
popf
cltd
into
ret
dec
pop
cmpsb
ret
push
xchg
in
lods
cmc
das
les
push
and
outsb
daa
jns
mov
mov
dec
cmp
and
push
mov
add
insb
rcl
rcll
mov
pop
clc
lds
cwtl
mov
loope
lret
cmp
mov
xchg
lret
fisttpl
cmp
cmp
ret
inc
int
andb
rcrl
fdivs
jnp
sub
jle
jmp
shlb
pusha
xchg
ja
or
shlb
pop
ljmp
std
sbb
pxor
add
pop
pusha
xor
mov
dec
xor
pop
push
into
add
mov
push
dec
aam
std
pop
push
xor
repnz
lods
in
pop
imul
daa
adc
or
fnstsw
add
sbb
mov
iret
loop
mov
sarb
and
mov
mov
mov
push
insl
cmc
add
je
mov
mov
fadds
push
dec
add
lea
mov
aaa
jle
scas
cld
jl
cmp
adc
mov
ja
jmp
dec
sub
or
pop
insb
pushf
in
shr
push
and
addl
inc
sbb
daa
lock
xchg
cmpsb
repz
popa
inc
mov
sub
iret
scas
jmp
out
xchg
and
pop
test
add
ret
push
xor
pop
repz
jnp
fisttps
jp
popf
mov
in
icebp
jl
jns
das
or
in
rcrl
popf
mov
mov
mov
stc
lret
or
mov
pop
orl
xor
push
fimuls
add
adc
jge
insl
mov
pop
in
ss
das
or
sbbb
push
test
or
add
adc
mov
data16
ss
xchg
lret
pop
mov
fcoms
lds
xchg
push
out
in
lret
lret
mov
cmp
jle
mov
jae
clc
mov
rorb
ret
outsb
ljmp
xchg
sbb
mov
fsubp
fisttpll
mov
int3
repz
mov
add
mov
pop
stos
clc
mov
mov
cld
xlat
sbb
pop
movsb
fwait
push
and
jmp
notb
decl
test
sub
sbb
shr
mov
enter
addr16
xor
inc
dec
ror
cmpsb
push
jb
or
call
dec
clc
xor
add
lock
pop
inc
dec
and
xor
in
nop
clc
mov
push
aam
mov
jno
push
lret
jle
leave
in
call
jle
adc
pop
add
xor
jns
cmc
cmp
push
pop
or
jecxz
fidivrl
shll
jle
inc
mov
dec
ds
js
sub
cmp
push
sub
cli
notb
and
pop
mov
out
insl
push
and
rorl
xor
es
shrl
cmp
sarb
stc
sbb
and
in
cmp
divl
mov
cmovns
nop
clc
xor
unpcklps
lock
and
dec
sub
pop
cltd
scas
in
jns
inc
adc
mov
jnp
mov
inc
jmp
popf
fwait
mov
bound
adc
adc
test
pop
pop
push
aad
in
mov
push
dec
adc
stc
scas
and
pop
sbb
jge
shll
xorl
and
daa
shr
and
stc
shl
pop
xor
sub
rcrb
mov
or
test
ja
stos
mov
mov
sarl
push
sbb
clc
sub
inc
dec
inc
adcl
or
and
lahf
fistpl
mov
test
jmp
arpl
flds
mov
and
sahf
push
or
mov
mov
jecxz,pt
and
adc
aam
repnz
pop
ja
fisubl
adc
repz
ljmp
aam
add
movsb
addr16
or
inc
mov
jae
dec
imul
xor
xadd
out
add
imul
sub
enter
ljmp
jns
cmp
xlat
adc
lret
pop
mov
ljmp
xchg
loopne
pop
popf
js
jge
push
xadd
arpl
mov
cmp
sub
rol
cli
mov
lods
sub
nop
pop
mov
movsb
and
int
lods
sbb
xchg
js
sub
popa
and
mov
pop
mov
push
test
data16
sub
sub
les
sbb
push
push
fsubs
pusha
cmc
imul
xor
pushf
cmp
xor
clc
iret
mov
xor
sbb
mov
cmpsl
std
xor
ret
in
adcb
std
aas
das
out
add
jo
std
sub
stos
push
sbb
or
lcall
xor
cmp
xchg
mov
dec
jb
sub
rcl
mov
aad
repnz
xor
inc
cmpsl
mov
mov
pop
push
adc
or
test
loope
xchg
lret
xchg
fcompl
inc
or
and
dec
dec
jecxz
jns
scas
and
test
xchg
shlb
push
loopne
sub
call
lea
lock
add
loopne
es
dec
pop
addr16
lea
jne
or
mov
sbb
gs
pop
lahf
push
add
xchg
add
rclb
sbb
subl
sbb
cmp
cmc
xor
jnp
or
sub
mov
lods
push
in
and
inc
loope
jno
jmp
ljmp
out
jb
mov
enter
dec
cmp
cli
imul
dec
mov
dec
xor
mov
in
adc
push
js
testb
cmp
push
test
mov
jl
cwtl
push
inc
sub
dec
xor
repnz
inc
fidivrs
stc
or
or
lret
sub
pop
cmp
test
and
mull
int
pusha
jne
push
add
inc
mov
mov
sbb
std
movsl
cmpsl
rcl
push
sahf
lds
and
push
mov
xor
pop
inc
rolb
mov
out
xor
lret
cmp
or
inc
fsubrs
mov
cwtl
jno
fwait
das
int3
inc
adc
popf
mov
call
dec
mov
emms
xor
call
lea
adcb
pop
cld
cmpsb
mov
cld
roll
test
or
mov
mov
outsb
add
push
mov
dec
popa
stc
sbb
xor
mov
sbb
push
call
mov
cmc
mov
xor
dec
mov
and
mov
daa
adc
notb
roll
ret
mov
sub
xchg
rorl
push
sbb
pop
push
loopne
mov
insb
imul
mov
pop
popf
aas
jmp
or
ret
sbb
mov
or
or
imull
adc
fnstenv
pop
push
jl
aam
or
ss
les
push
mov
dec
jle
xor
lods
test
ss
out
pushf
fwait
add
pop
mov
shl
mov
es
cmp
dec
sub
adc
popa
in
dec
sub
aaa
cwtl
xchg
pusha
dec
pushf
pop
cmp
mov
add
fwait
mov
mov
xchg
mov
cmpsb
outsb
inc
and
sahf
add
pop
jmp
pop
or
cltd
and
dec
testl
inc
outsl
adc
cmp
in
lods
shll
pop
ds
sub
cltd
mov
jno
fwait
xlat
movsb
mov
mov
push
xchg
or
movsl
inc
xor
mov
add
add
and
pop
xor
ljmp
xlat
xor
add
inc
inc
lds
push
mov
cwtl
gs
xor
add
dec
fstpt
lcall
loopne
insl
lret
push
mov
lret
int
mov
push
cmpsb
sbb
xchg
stos
lods
or
cmp
jle
dec
pusha
cli
aas
mov
jnp
cld
cmpsb
adc
movl
push
lds
fwait
push
pop
xchg
cmp
pop
or
cltd
loopne
negb
fldenv
mov
cmp
xor
add
orl
xor
pop
jb
out
clc
popa
adc
xchg
jmp
imul
loop
push
pop
jp
dec
setae
cmp
js
dec
adc
mov
xchg
sarl
lods
xor
fidivl
push
daa
and
sub
test
sub
push
xchg
inc
in
xchg
adc
stos
mov
dec
outsl
cmp
pop
push
jle
pop
inc
mov
daa
in
movsb
add
inc
mov
jo
dec
rcrl
lret
lcall
cmp
test
jo
dec
iret
sub
shlb
sub
arpl
jecxz
mov
jnp
pusha
mov
inc
sub
ret
in
dec
rolb
fwait
out
pop
lea
pop
and
xchg
rolb
arpl
inc
sub
push
imulb
cmpsl
fs
mov
add
inc
test
pop
mov
and
jo
das
mov
in
test
push
out
outsl
loopne
or
test
or
sbb
daa
or
stc
jl
out
dec
cltd
or
mov
rcr
dec
add
push
ja
mov
sarb
ja
idivb
out
pop
sub
scas
out
pop
or
es
xchg
inc
push
ljmp
loope
out
or
bound
xor
sahf
inc
movsl
mov
pop
hlt
mov
daa
sbb
sub
mov
cs
mov
outsl
ret
jno
loope
sub
bound
push
std
sti
daa
pop
inc
mov
dec
out
sub
sub
jecxz
xor
mov
cli
int3
les
rcr
fmuls
imul
mov
hlt
sbb
jno
pop
ljmp
jbe
stc
push
mov
xor
nop
sarl
in
lahf
scas
ja,pn
ljmp
xor
inc
mov
popl
jno
cmpsl
call
in
mov
cmp
movsl
mov
xchg
cmpsb
stos
cmp
dec
loope,pn
aad
xor
pushf
jnp
xchg
popf
bnd
fcos
enter
icebp
fcmovne
leave
dec
jno
sbb
inc
mov
gs
mov
push
add
repnz
cmpxchg
stos
or
nop
sbbl
aaa
fimull
or
dec
pop
mov
xor
cwtl
or
cmpsl
int3
jbe
mov
bound
loop
mov
xchg
in
stos
pop
xchg
adc
or
mov
pop
int
mov
sbb
lahf
xor
sub
push
cmp
test
add
sbb
mov
mov
sbb
in
cmc
sbb
push
loope
cmp
into
lock
push
jno
xor
mov
imul
and
pop
cmp
jns
add
xor
pop
dec
xchg
lock
push
stc
xor
xor
leave
fadds
aam
push
xlat
adc
sub
or
test
jge
jge
cwtl
cmp
mov
sar
cld
cmp
mov
jno
jne
or
mov
in
or
lret
mov
and
and
in
inc
xor
in
jle
push
sub
pop
add
rcpps
arpl
or
je
mov
inc
push
movsb
call
jae
inc
bound
mov
pop
outsl
xchg
jp
and
scas
stos
fwait
lds
nop
xor
dec
scas
xor
mov
pusha
adc
jl
and
and
or
jae
xor
sbb
bound
sbb
js
jo
jl
cmp
xor
add
adc
fsubl
movsl
dec
xchg
jae
clc
fdivr
cltd
test
sub
inc
cmp
cmpsl
and
dec
mov
mov
sahf
aad
sbb
xchg
mov
and
out
jge
dec
out
scas
jp
lea
divl
push
in
mov
rol
push
or
out
mov
xchg
cwtl
fwait
cs
dec
nop
lock
jl
in
icebp
outsb
dec
jecxz
dec
cmp
mov
cs
test
arpl
pop
shlb
add
loope
push
aaa
sub
jl
in
mov
popa
xchg
sbb
push
int
out
cltd
ror
outsb
and
repnz
dec
cwtl
xchg
xchg
pushf
iret
fcomps
rorl
fmuls
mov
mov
cmc
ficoml
rcrb
aad
ljmp
pop
mov
scas
xchg
jno
adc
cwtl
hlt
push
movsbl
fstpl
scas
xchg
inc
movl
test
test
aad
pop
pop
inc
jnp
cmp
sahf
iret
shl
outsl
mov
mov
shl
out
inc
shll
xchg
fisubrl
imul
movsl
xlat
fdivl
cmp
sub
call
sahf
jno
sbb
dec
gs
int3
xchg
or
jle
xor
into
push
fsubl
lahf
mov
leave
int3
dec
jl
jge
push
xor
push
lret
lea
sbbl
lahf
aas
dec
ret
mov
adc
mov
jp
sbb
stos
dec
jns
jl
cld
aad
mov
mov
aas
sbb
outsb
jecxz
push
in
dec
cmc
testb
fdivrs
fadd
cld
pushf
into
dec
pusha
fs
insb
pop
lahf
inc
sub
out
jp
jge
jnp
or
pop
popa
into
repz
mov
popa
mov
lret
loopne
xor
repz
add
addr16
xchg
scas
cmp
int
cwtl
imul
mov
cli
sbb
fbstp
stos
mov
or
push
dec
pop
mov
mov
mov
incl
loop
fistps
scas
mov
adc
roll
pop
inc
mov
hlt
es
cmp
jno
sub
pop
xor
nop
push
mov
ret
popf
test
dec
dec
cmpsb
out
mov
jbe
hlt
mov
cmp
mov
dec
xor
sub
imull
test
mov
cli
pushf
into
jo
push
into
shlb
mov
outsl
jmp
xchg
inc
js
jle
lret
inc
shll
ss
lret
xor
pop
mov
out
dec
xor
mov
dec
loop
xchg
pop
pop
pushf
or
cmc
and
movsb
jg
xchg
mov
inc
or
push
dec
rorb
sbb
clc
add
ds
call
repz
data16
xchg
clc
pop
mov
push
fidivs
xchg
pop
cmpsb
rorl
adc
xor
xor
into
pop
cs
dec
push
mov
lock
mov
mov
inc
or
mov
add
dec
test
sub
test
out
fwait
push
sub
or
shrb
mov
cmp
lea
xchg
pusha
mov
sbb
jns
movsb
int3
xlat
cmc
add
js
repz
pop
loop
negb
cld
adc
fbld
dec
pusha
jg
or
jnp
or
fstpl
push
icebp
stos
aad
fistpl
mov
imulb
rorl
test
lods
lcall
in
icebp
inc
jbe
es
jmp
movsb
push
iret
add
dec
dec
or
mov
mov
mov
sar
jl
xor
sbb
imul
xchg
cmp
out
add
insb
cltd
cmpsb
popa
push
pop
push
lock
sub
cli
sub
aaa
sub
nop
loope
addb
int3
adc
in
in
mov
test
sbb
cmpsl
xchg
add
inc
data16
gs
adc
js
fstpt
mov
movsb
dec
add
xchg
imul
mov
add
nop
insl
mov
push
cmp
lret
or
or
fiaddl
insl
in
lock
not
add
sbb
mov
or
dec
lahf
mov
mov
js
add
sbb
sub
mov
mov
stos
adc
xor
inc
sub
das
mov
cmpsl
pop
cmp
movb
daa
mov
imul
or
push
popf
cs
outsl
aas
mov
popa
jns
xor
aaa
dec
xor
and
mov
in
call
int
adc
and
jp
push
or
sub
push
mov
dec
pop
jnp
cwtl
sbb
push
fcom
push
add
inc
cmp
cmp
enter
push
pop
cmc
in
jmp
push
xor
js
cmpsb
xchg
jns
test
or
hlt
jl
mov
sbb
fsubs
add
adc
xlat
lret
iret
add
outsl
ss
or
test
mov
test
dec
dec
lea
mov
iret
cmp
in
and
enter
xchg
ret
sarl
mov
dec
jge
xor
dec
sbb
fmuls
dec
dec
xlat
push
xchg
mov
in
insl
test
push
mov
cltd
add
push
ds
push
pop
out
adc
push
inc
jne
or
and
mov
ds
xor
into
sub
add
and
gs
cmp
rcrb
pop
mov
jae
xchg
ret
xchg
mov
mov
inc
jb
cmpsl
push
xlat
xor
pop
sub
addb
jbe
adc
bnd
int
push
or
loope
mov
mov
ja
fs
mov
mov
lret
sub
cmp
mov
les
push
rolb
pop
cmp
insl
jp
int3
mov
or
dec
lret
hlt
scas
movsl
cltd
push
cltd
dec
inc
mov
pusha
loopne
mov
sbb
xor
lret
mov
mov
pop
cld
test
and
sbb
cld
js
push
mov
mov
aas
xchg
mov
imul
js
sbb
lea
inc
xor
sub
xor
cmpsb
test
push
sahf
popa
jb
cmp
dec
inc
add
push
mov
cmpsl
ljmp
xlat
fsubs
aad
xchg
xor
cmp
loopne
stos
pop
cmp
xor
cltd
mov
ret
rorl
cmp
xchg
mov
dec
aas
push
inc
xor
es
adc
pop
es
jno
in
and
shlb
mov
loop
les
out
decb
in
mov
xor
adc
mov
push
or
popa
aaa
or
leave
dec
adc
lea
xabort
arpl
inc
adc
adc
xor
cmp
xchg
loop
fldcw
mov
jecxz
mov
pop
xor
or
insl
xor
dec
mulb
mov
xchg
lock
sbb
ret
int3
adc
jle
leave
xor
adc
sbb
inc
xor
cwtl
cmp
jnp
movsb
xchg
sbb
and
jl
adc
adc
xor
mov
lea
jmp
punpckldq
mov
ljmp
jle
and
les
out
popf
fistl
mov
mov
cmovp
addl
pop
inc
shlb
and
rorl
jo
test
mov
mov
cmp
flds
cmp
fists
fnsave
faddp
mov
lea
test
out
mov
pop
mov
sub
movsb
fwait
lret
pop
push
movsl
pop
sub
cmc
jns
xor
outsb
sub
sahf
xor
mov
mov
sbbl
rol
adc
push
mov
ds
mov
xchg
ljmp
adc
aas
fst
sub
or
adcl
mov
stos
sbb
inc
call
cmpb
fcmovnb
dec
pop
and
xchg
imul
xchg
ja
dec
xchg
lret
ss
movsb
jle
loop
into
mov
sbb
or
inc
mov
mov
lahf
shlb
or
sbb
mov
dec
out
push
test
sarl
je
test
cld
jo
jl
cld
add
out
cld
mov
addr16
ret
decl
mov
and
dec
insl
inc
pop
shl
mov
push
dec
ret
pop
pop
std
inc
mov
cltd
ffree
les
loop
mov
and
in
add
stos
jno
hlt
rcrb
push
lods
xchg
scas
mov
insb
xchg
outsl
lods
cmp
sbb
and
mov
mov
sub
call
cld
mov
pop
lods
mov
shr
pop
decb
add
lock
outsb
xchg
adc
in
fcmovnu
loop
mov
cli
cwtl
sti
or
mov
mov
pop
jbe
jno
les
mov
mov
ja
outsb
sbb
jmp
fldcw
dec
scas
mov
gs
sub
fwait
pop
xor
mov
imul
mov
xor
push
mov
ficompl
arpl
sbb
ds
push
jno
ret
lock
ret
lds
aas
cmp
sub
dec
cmpl
push
push
add
lcall
pop
or
rol
lcall
adc
cmp
jno
pop
test
inc
inc
insb
lea
or
enter
loop
push
js
subl
xor
je
dec
add
pushf
mov
adc
stc
mov
inc
je
mov
adc
dec
pusha
pushf
sub
xor
imul
mov
pop
test
cmp
ljmp
cmp
xlat
dec
insb
mov
sbb
push
aas
subb
in
outsl
test
lock
sub
push
inc
sub
jmp
xor
repz
push
movsb
jo
or
jp
loop
or
sub
adc
pop
ja
xor
gs
inc
out
lods
and
sti
lret
nop
stos
iret
pop
xchg
pusha
push
lcall
xlat
movsb
xchg
stos
jnp
out
push
sarb
fwait
mov
xor
stc
addr16
xchg
add
iret
aam
pop
sub
ja
mov
push
xchg
push
fmuls
push
scas
jno
jecxz
inc
movsl
int3
pop
shrb
lret
out
scas
hlt
push
push
inc
add
mov
stc
sti
pop
fsts
mov
xor
mov
adc
jg
aam
scas
into
inc
jl
inc
rcrb
sbb
adc
xchg
fmull
and
cld
pop
and
mov
pop
cmp
cmp
mov
icebp
add
cmp
add
sti
and
popf
push
push
lret
add
push
mov
xlat
ret
fstpl
fwait
aaa
loopne
jle
push
lcall
addl
mov
jnp
not
imul
stc
das
cwtl
push
inc
jo
repnz
ljmp
mov
movsbl
inc
test
push
fdivl
scas
inc
jbe
push
fwait
inc
test
pop
xor
arpl
xchg
bound
daa
ljmp
cmpsb
jmp
dec
cmp
mov
nop
xor
xchg
xor
test
scas
push
leave
out
cmpb
dec
cmp
xchg
lret
lods
dec
adc
mov
ret
out
in
jg
push
sbb
mov
push
mov
mov
ficomps
mov
xlat
mov
pushf
mov
or
jecxz
push
mov
pop
call
in
mov
and
jle
std
mov
jae
mov
cmp
cwtl
in
insl
mov
js
je
movsl
fwait
jae
xchg
pop
adc
imul
lods
jns
test
push
jno
iret
imul
inc
xchg
outsb
nop
cmc
test
xchg
ja
mov
xchg
sbb
add
fcmovnbe
mov
xchg
and
jmp
dec
fwait
mov
xor
cmpsb
ret
imul
test
insl
or
loopne
or
cmc
add
dec
jne
jmp
xor
stos
add
gs
orl
mov
xorl
xchg
dec
daa
cltd
jp
cmpsb
lock
stc
add
push
xchg
pop
aad
adc
adc
sub
cmpsb
stos
xor
loopne
rolb
adc
sbb
mov
aas
pusha
mov
es
lock
cltd
sbbl
mov
cs
push
sbb
mov
test
out
add
fisubl
stos
mov
or
loopne
dec
jae
pop
aas
jl
out
lcall
add
or
pushf
lea
enter
xchg
pop
rcl
mov
sti
mov
xchg
test
jmp
jo
fstl
pop
dec
stc
adc
cmpsb
mov
cmp
dec
aas
call
mov
jecxz
or
mov
jmp
pop
and
sbb
lock
ss
mov
add
xchg
xorb
push
mov
sbb
stos
mov
scas
insb
jne
out
cmpsl
je
lret
icebp
jbe
jns
addb
stos
jnp
fildl
lock
lea
out
xlat
mov
scas
sub
popf
je
int3
lods
mov
and
shrb
inc
clc
dec
sub
shll
cld
imul
mov
hlt
iret
pop
push
test
mov
or
push
adc
add
lods
xchg
pusha
pushf
icebp
test
cltd
inc
xchg
and
insl
pusha
mov
pop
je
or
sbb
push
insb
mov
dec
cmpsl
ss
sub
sub
push
arpl
jne
in
inc
out
mov
int
mov
arpl
data16
mov
aad
sbb
rcr
cmpsb
insb
addr16
js
stc
dec
ss
lock
xor
lods
add
pop
dec
mov
sbb
std
push
or
inc
dec
fbld
loopne
dec
xchg
cmpsl
jle
mov
pop
sub
or
jmp
adc
ja
js
outsl
adc
in
push
shll
and
mov
jb
sbb
inc
hlt
mov
testb
xlat
add
lea
sbb
push
cld
lods
push
scas
dec
push
outsb
inc
dec
cli
inc
jno
dec
mov
decb
cmp
call
xchg
mov
ljmp
add
jg
push
or
or
pop
cmp
push
or
gs
les
and
dec
mov
das
mov
in
shlb
pop
dec
test
and
sub
push
xor
add
adc
fistps
stos
js
and
addr16
add
lock
movsb
xchg
mov
push
scas
aas
push
mov
xchg
imul
push
push
jmp
fiaddl
or
adc
addr16
into
stos
lret
dec
mov
and
mov
pop
add
jnp
daa
adc
ja
fistps
out
test
add
es
sbb
bnd
pusha
pop
xchg
lret
xor
fmull
inc
cmpsb
leave
fbld
gs
fwait
adc
lds
pop
xchg
xchg
push
cmp
in
xchg
das
mov
pop
xchg
cmp
inc
seta
push
mov
jnp
cmpsb
xchg
push
rolb
mov
jl
mov
or
add
test
adc
mov
xor
out
add
mov
sub
shll
dec
lret
ja
push
jp
imul
idivb
jae
idivl
push
mov
inc
cmp
int
cmp
in
mov
sub
inc
in
jb
jo
or
mov
nop
jp
fwait
add
aaa
loope
imul
dec
scas
dec
mov
or
xchg
hlt
sbb
or
sbb
sub
test
lock
and
sbb
pop
push
rcll
test
ja
jecxz
outsb
adc
ss
xchg
bound
pushf
test
xchg
cmp
mov
or
getsec
xchg
lret
int3
in
mov
xor
cwtl
out
cltd
xchg
xchg
dec
js
les
inc
daa
fidivs
or
lea
dec
inc
mov
and
orb
xchg
adc
sub
orb
sub
mov
test
push
call
call
push
xor
xlat
xchg
push
fnstcw
rolb
dec
cs
sar
and
outsl
dec
cmp
add
mov
test
fimull
pop
pop
out
push
inc
jnp
dec
test
xchg
fldcw
roll
dec
cli
mov
mov
dec
flds
mov
xor
stos
aaa
pop
cmpsb
push
and
out
cmc
out
cld
push
lret
mov
add
mov
mov
xor
cmc
cld
pop
sar
inc
vshufps
into
jmp
lret
mov
push
out
movsl
cmp
into
xchg
cld
movsl
pop
xchg
cmp
outsl
imul
sbb
sub
clc
ljmp
leave
mov
clc
inc
out
pop
adc
or
sub
ljmp
mov
sahf
divb
jmp
xchg
popa
sbb
mov
addr16
xchg
inc
add
xchg
aam
je
or
jg
sahf
lea
fidivrs
lahf
dec
scas
mov
outsl
aad
pusha
mov
mov
mov
inc
xor
push
and
xchg
mov
push
aad
cmp
shlb
xor
les
div
dec
cmp
into
fisttpll
std
xchg
mov
mov
scas
pop
jg
hlt
pop
repz
mov
dec
in
ja
push
or
cwtl
hlt
enter
jmp
mov
cs
jb
jmp
fstpl
xor
push
adc
jns
aas
sbb
pop
and
pop
aad
jmp
jp
xchg
cld
add
inc
arpl
inc
fistpll
push
je
or
inc
adc
daa
mov
mov
sti
pop
add
and
lea
in
fadd
les
fisubs
and
mov
push
sbb
add
mov
cmc
hlt
pop
movsl
pop
push
mov
out
jp
fld1
iret
scas
cli
dec
xchg
lahf
fucomip
mov
adc
repz
dec
into
jle
test
mov
and
push
movsl
sbb
or
imul
xor
push
xchg
cmp
pop
push
xor
mov
ret
and
jmp
cwtl
jp
insl
ss
xchg
sarb
fwait
lret
dec
sahf
arpl
pop
fildll
and
mov
sbb
pop
cmc
fisttps
push
stos
outsb
stos
add
cmp
mov
or
cmpb
jae
xor
out
hlt
je
or
dec
jnp
and
push
test
dec
hlt
lret
cmc
jp
cmc
lds
insl
movb
jl
dec
mov
call
icebp
loopne
cmp
loope
lods
daa
jo
stc
mov
lcall
cs
cmpsl
and
push
popf
sub
xchg
das
push
lcall
div
sbb
stos
cmp
dec
lods
into
cld
sub
mov
inc
gs
push
sbb
mov
lahf
xor
sub
and
xlat
fistl
adc
mov
test
mov
jno
loopne
push
xchg
pop
rcrb
xchg
mov
repnz
mov
popa
xchg
adc
xchg
cmp
jmp
js
rolb
into
cmp
xchg
mov
dec
sbb
sahf
sbb
push
dec
or
pop
fldt
repnz
pusha
cld
jne
movsb
mov
mov
mov
ss
stc
es
fs
pop
mov
add
mov
ja
stos
mov
mov
addr16
ja
cmpsb
cmpsb
mov
jb
adc
stos
cmp
mov
cld
add
fidivrl
lea
xchg
outsl
je
sti
call
cmp
jecxz
sbb
xor
movsl
xor
lret
add
jnp
loop
inc
lea
inc
push
pop
test
mov
sub
ds
add
and
lahf
inc
arpl
mov
aaa
push
mov
cmp
xlat
clc
mov
xor
sbb
xchg
out
sbb
cltd
dec
call
in
int
and
xchg
or
int3
arpl
push
and
dec
std
mov
mov
icebp
aaa
int
fwait
mov
lar
gs
xchg
dec
inc
xchg
add
jp
jbe
mull
inc
push
adc
or
mov
lcall
and
mov
sarb
and
fs
mov
push
mov
lds
jle
stc
xchg
in
lds
imul
shlb
jo
out
test
and
push
pop
pushf
cli
and
mov
mov
fadd
cmp
dec
adc
movl
sub
lcall
mov
cmpsl
arpl
mov
popf
and
push
xor
jecxz
call
mov
xchg
mov
testl
popl
dec
aam
test
ja
pop
jp
mov
fwait
mov
iret
push
or
push
push
mov
mov
pop
push
mov
mov
cmp
out
notl
ljmp
add
xor
sub
jnp
jle
mov
daa
cmpsb
sbb
mov
mov
in
sbb
loopne
inc
gs
adc
imul
aas
adc
xor
jb
aam
jnp
mov
enter
inc
mov
pop
lret
mov
push
mov
outsl
ja
les
pushf
sub
rcl
jae
repnz
negl
xchg
and
sub
inc
or
std
into
and
aaa
cmp
in
rcr
adc
inc
add
pop
shll
or
fwait
sti
mov
lea
push
fcomps
adc
test
in
lret
xchg
inc
stc
xchg
arpl
movsl
add
ja
jno
add
stc
pop
fdivl
push
and
ds
push
dec
fcmovne
mov
xor
out
jp
mov
outsb
sysexit
push
xor
aam
je
cld
sbb
add
fstl
push
xlat
lret
push
popl
pop
mov
sbb
sub
lcall
aam
mov
xchg
adc
dec
dec
test
ds
dec
fsubs
in
xchg
lock
nop
pop
adc
fsubr
xchg
xchg
ja
push
dec
cmp
shlb
shlb
insb
out
jb
push
xor
dec
lret
enter
inc
push
xor
push
imul
adc
sub
pop
push
cmp
adc
cli
lods
lds
mov
and
hlt
xor
jp
cmp
adc
fs
popa
mov
fsub
push
xchg
or
pusha
aad
pushf
movsb
dec
push
shl
ds
insb
faddp
ret
inc
jecxz
sar
cmp
es
sbb
pop
in
pushf
push
popl
mov
sub
or
ds
fcmovnbe
out
or
inc
mov
mov
jmp
sub
fadds
mov
cmc
xchg
icebp
mov
adcl
aad
sub
xchg
clc
ret
out
add
repz
mov
fcoml
adc
insl
repnz
or
lcall
sub
lods
hlt
js
aas
js
jle
pop
icebp
mov
jnp
cmp
mov
ret
push
cld
jle
aad
xchg
sbb
fwait
or
mov
sub
js
fldenv
int3
adc
inc
inc
xchg
cmp
cs
lret
dec
shl
enter
mov
jae
jns
sub
cmpsb
add
sbb
adc
or
testb
movsb
xor
adc
pusha
shl
pop
out
shr
inc
mov
arpl
movsl
in
push
inc
mov
fdivl
mov
xchg
sbb
shlb
test
lock
aaa
outsl
out
or
mov
iret
call
pop
dec
pushf
dec
movsl
inc
jno
loop
or
sbb
mov
in
test
xchg
inc
aam
jnp
shr
test
or
jnp
aam
or
xor
aas
xchg
out
add
jecxz
loope
mov
pop
sarb
adc
sub
mov
in
xor
mov
cli
int
inc
push
jecxz,pt
mov
xchg
leave
and
adc
push
push
cmp
xor
fmul
adc
mov
xor
cmp
aad
sahf
loope
dec
adc
and
enter
cs
sub
rcrl
bound
in
xor
rcll
jo
and
pop
jbe
les
push
sahf
test
imul
push
pop
jnp
push
mov
mov
lea
mov
inc
or
pop
mov
push
shll
push
mov
pop
rcrb
mov
pop
xchg
pusha
fucomi
inc
test
jecxz
fists
out
xchg
lret
lea
jge
cmp
jecxz
int
jnp
xchg
jnp
sub
cmp
xchg
arpl
push
fwait
mov
dec
mov
sbb
or
bound
cmp
shl
pop
dec
adc
mov
push
imul
subl
bound
jp
out
dec
jg
and
xor
aam
xor
cmp
sub
rcrl
in
jle
cmpsb
fisubl
rcll
mov
faddl
jmp
inc
les
std
sbb
popf
pop
mov
popa
insb
push
push
cmpsl
mov
shll
cmp
add
jns
xchg
mov
inc
sbb
inc
out
dec
pop
pop
jo
dec
into
xchg
mov
popa
icebp
jecxz
movb
mov
std
xchg
jbe
add
insb
les
mov
aam
repnz
adc
sub
mov
pop
jno
out
sub
mov
pop
add
popf
inc
xchg
repz
xchg
mov
pop
add
stos
fisubl
mov
push
fidivrs
in
in
push
mov
jge
repnz
test
in
icebp
add
rorb
cmp
mov
add
or
out
or
adc
cltd
xor
mov
lret
sub
rorl
std
aas
mov
mov
icebp
sbb
lods
sbb
mov
repnz
cmp
push
int
andl
fwait
cs
jo
xchg
jp
or
imul
or
sbb
rcr
js
mov
or
jne
out
loopne
loopne
sahf
xlat
mov
pop
pop
mov
loopne
inc
test
fwait
lock
xchg
push
mov
aam
xor
clc
bound
cmp
test
pop
test
sub
xchg
or
fistl
inc
mov
in
xor
dec
fldenv
cmp
stc
mov
test
cmp
or
stos
cmp
pop
dec
mov
adc
out
int3
jno
out
lahf
jno
or
and
addr16
pop
dec
mov
out
pop
xor
or
or
sbb
scas
popf
push
out
icebp
pop
lahf
pop
test
aaa
push
leave
shlb
movsb
lcall
lods
aad
lock
addr16
ja
data16
push
in
xchg
int
mov
test
ds
push
lea
and
push
adc
adc
mov
cs
mov
flds
adc
mov
add
or
xchg
cli
test
sti
andl
lahf
dec
mov
and
push
repz
cmp
xchg
mov
sahf
faddp
aas
add
lret
movsl
inc
rol
mov
imul
xor
xchg
cmp
cmc
or
pop
in
pop
nop
dec
test
stos
adc
mov
popf
pop
push
cmc
loopne
filds
pop
jbe
icebp
pop
sbb
push
ljmp
rcl
fwait
ss
mov
xchg
mov
aad
ljmp
pop
rorl
or
inc
adc
scas
cmp
fcmovbe
sub
fmuls
pop
dec
xchg
es
mov
and
cltd
jecxz
cltd
mov
cmp
inc
imul
add
test
or
adc
mov
pop
daa
sbb
push
aad
inc
out
ss
xlat
fnstenv
cli
sbb
insb
dec
pop
dec
push
add
jbe
xchg
mov
aad
fs
xor
pop
orb
jle
push
xor
mov
rclb
shll
push
cltd
adcb
mov
xchg
mov
in
xor
adc
cltd
push
out
repz
lahf
adc
mov
cltd
insb
cld
adc
test
out
pusha
loopne
mov
xor
or
pusha
insl
pusha
xorb
mov
push
icebp
jo
xor
inc
adc
sbb
shll
dec
fisttpl
sbb
xchg
enter
popf
sbbb
cmpsb
xlat
push
add
js
imul
insb
adc
jb
adc
push
jl
pop
icebp
ds
stos
pop
or
shl
mov
sub
add
enter
pop
shlb
xor
push
or
or
xor
and
arpl
push
movb
cli
sub
xlat
adc
in
pop
test
cs
pop
repz
mov
mov
sub
sub
mov
jl
gs
dec
popa
clc
or
out
sub
test
jne
rcr
push
std
push
cmp
cltd
andl
jge
push
jmp
daa
andl
or
addb
and
xor
inc
and
clc
loop
pop
cli
popa
cmp
nop
pushf
mov
mov
mov
test
add
push
xchg
rol
pop
push
and
mov
sub
xchg
jmp
push
mov
push
cmpsb
xchg
ja
cld
push
xchg
loope
cmp
mov
and
aas
xchg
mov
cmp
cmpsb
add
cmp
mov
inc
jbe
xor
mov
scas
daa
pop
sbb
sti
scas
mov
xor
mov
mov
clc
repz
or
popf
popf
mov
addr16
test
jo
sub
jle
xchg
push
push
mov
pop
incb
test
repnz
xchg
addl
divl
cli
ljmp
push
jge
push
cmp
xlat
and
mov
pusha
insb
sbb
popl
or
push
jo
insl
aaa
dec
insb
or
dec
aam
jecxz
stos
and
icebp
pop
add
mov
sub
fbld
add
mov
push
xor
je
call
or
repnz
shrb
adc
push
jne,pt
fisubl
xor
imul
mov
add
fists
mov
mov
lret
rolb
mov
or
pop
cmc
xchg
fs
movsl
ljmp
lods
int3
loopne
mov
push
popa
divb
ljmp
cltd
fdivrl
mov
mov
test
push
loop
mov
mov
lock
push
dec
jecxz
xor
fistl
mov
mov
mov
iret
push
movsl
fnstsw
mov
push
stc
dec
inc
sub
mov
out
or
mov
lret
fldlg2
sbb
out
pop
mov
out
ljmp
mov
sbb
xorb
sarb
xchg
and
mov
xchg
test
and
bound
dec
into
adc
adcb
dec
test
sub
lock
and
jbe
cmp
xchg
xor
out
test
inc
mov
jbe
leave
fdivs
push
mov
jo
movsb
dec
aaa
cs
sbb
dec
in
pop
mov
in
add
shrl
push
add
adc
push
sbb
cmp
push
lret
ret
or
mov
mov
std
or
pop
cs
aaa
scas
je
sbb
pop
or
aam
pop
or
out
pop
mov
repz
subl
clc
or
pop
lret
loop
lock
mov
adc
outsb
lret
mov
cmp
divl
xor
mov
lret
repnz
sub
into
int3
xchg
sbb
pop
mov
fdivs
adc
fistpll
mov
inc
lods
ljmp
mov
mov
pushf
ss
fcompl
dec
mov
call
mov
xchg
lahf
sbb
lods
and
mov
xchg
call
je
adc
mov
bound
in
pop
and
enter
push
xor
jecxz
clc
xchg
loopne
rcrl
cltd
jns
or
or
int3
xchg
or
aad
sbb
mov
jb
push
xchg
push
or
adc
ljmp
adc
stos
mov
lock
js
mov
pop
jae
mov
hlt
pop
and
dec
nop
fstps
shlb
xchg
pop
xchg
mov
fadd
cmpsl
movb
and
xor
pop
push
mov
and
push
mov
fisttps
cld
fwait
xchg
lcall
pop
pop
xor
andb
push
push
movsb
loop
int
sub
cmp
jne
aas
in
push
xchg
cmp
insb
xor
jmp
lods
mov
inc
sti
movsb
or
pop
sbb
adcl
out
sbb
std
fucomip
xchg
mov
sarb
dec
sub
mov
xor
xlat
mov
jg
add
xchg
inc
inc
add
dec
inc
or
and
stos
jne
mov
mov
sbb
sbb
scas
inc
js
jno
divb
out
mov
sbb
jge
rorl
inc
xchg
push
add
jae
cmc
xor
push
add
and
push
loop
test
jnp
test
mov
int
and
rcll
pop
xor
add
popf
loopne
cmovnp
push
push
popa
scas
mov
adc
fadd
pop
fisttpl
dec
aam
push
mov
pop
outsl
mov
lea
je
and
lea
pop
adc
addb
fwait
sbb
aas
xor
aad
jnp
es
and
sarl
aam
setbe
push
mov
out
adc
inc
rorb
stos
xor
fcomps
mov
mov
dec
pop
adc
adc
cld
nop
and
inc
shl
das
jne
shll
insb
mov
shlb
sub
inc
mov
sbb
nop
stc
inc
lea
mov
fisubl
push
pop
pop
fnstenv
repz
out
push
xor
fldcw
jmp
popa
in
daa
pop
sub
test
lcall
ret
mov
hlt
xchg
in
rolb
mov
pusha
inc
lea
sbb
inc
bound
fadd
mov
push
or
popf
or
adc
into
dec
mov
sub
sub
lock
shrb
push
ljmp
push
cwtl
dec
inc
mov
out
test
dec
adc
scas
inc
dec
orl
nop
push
insb
mov
push
and
in
push
jmp
xchg
leave
rcrb
ret
insl
scas
lds
pop
sbb
pop
xchg
iret
mov
popa
mov
hlt
dec
adc
sbb
cmc
inc
fisubl
in
or
scas
xchg
sub
pushf
es
fnstenv
xor
jnp
rorl
sub
push
sbb
lret
jne
clc
inc
and
dec
in
pushf
popf
pop
jns
xor
insb
cmp
nop
jne
insl
pop
cmpsl
pop
mov
ffree
rorb
mov
mov
insl
pusha
loop
fdivs
pusha
jbe
push
sbb
out
add
cmpl
adc
inc
add
lock
jge
adc
shl
push
shll
add
cld
fnstsw
das
lea
dec
and
add
xchg
sbb
mov
xchg
push
imul
mov
sbb
ljmp
icebp
lcall
fbstp
mov
repz
mov
and
mov
adcl
andb
xor
inc
sahf
jl
mov
inc
xchg
jbe
jle
or
hlt
xchg
pop
or
fimull
pop
inc
fadds
icebp
mov
cmp
xchg
dec
dec
mov
stos
and
push
addb
add
push
aad
data16
popa
popf
icebp
lcall
daa
mov
pop
in
push
adc
mov
loop
mov
cmpsl
stos
int3
and
or
xorb
push
cld
mov
xchg
pop
sarb
mov
xchg
insl
add
inc
and
mov
out
sbb
aas
sbb
inc
movsb
mov
test
add
push
mov
inc
lahf
add
aam
xor
pop
mov
cld
push
add
orb
int
addr16
pop
mov
movsb
int
xor
jp
xchg
mov
xchg
mov
rcrl
push
enter
mov
adcb
sub
mov
movsl
mov
or
icebp
aas
iret
adc
push
pop
pop
sub
mov
push
jbe
jmp
pusha
pop
fcoms
je
popf
jno
or
inc
ja
pushf
out
scas
xchg
mov
addb
xchg
int
inc
movsb
stos
inc
addb
mov
cmovno
mov
cmp
fwait
cmp
repnz
push
mov
mov
sti
add
gs
jg
cld
push
and
adc
sbb
scas
and
xchg
mov
mov
fcomi
jmp
stos
mov
dec
jo
mov
bound
or
dec
out
shl
push
mov
add
icebp
push
xchg
and
jb
pop
out
outsl
cmpsl
pop
sub
pushf
lds
adc
xor
sub
push
push
or
cs
adc
aas
mov
push
add
roll
imul
fwait
jg
je
cmp
cmp
xchg
ret
jo
scas
arpl
lret
movsl
mov
jnp
mov
dec
loopne
xor
cmp
push
mov
mov
mov
cmpsl
xlat
fiaddl
sub
sti
and
pop
adc
js
mov
dec
cmp
test
and
xchg
rclb
arpl
fsubrl
jnp
repnz
test
xlat
xor
inc
outsb
xchg
aaa
fcoml
push
push
shlb
pop
mov
cmp
mov
int3
dec
stos
xlat
mov
ret
xchg
mov
xor
lret
adc
sub
mov
out
addr16
inc
mov
push
mov
je
push
sub
jno
ret
xor
mov
and
cmpsl
stos
popa
pop
sbb
and
pop
mov
ja
cli
rclb
jno
test
mov
cli
pop
push
and
out
cmpsb
sbb
mov
xchg
outsb
inc
adc
test
mov
rcl
lea
pusha
cmpsb
mov
leave
dec
in
lods
filds
xor
jb
subl
aas
fnsaves
or
das
inc
dec
push
shrl
cltd
sbb
sub
pop
fs
or
pop
mov
xor
inc
mov
fwait
iret
hlt
jge
mov
daa
inc
scas
mov
dec
lods
jne
insb
jne
movsl
cmpsl
aaa
or
popf
cld
jmp
icebp
jns
ss
sub
insl
test
daa
clc
and
lods
mov
jbe
popa
sbb
jecxz
shl
cmp
psubsw
icebp
inc
rorl
mov
xor
cmp
or
pushf
imul
mov
jne
insb
dec
flds
js
dec
or
push
mov
adc
out
xchg
das
mov
pop
mov
cmp
or
xor
mov
js,pt
xor
scas
hlt
cmp
movq
xor
ret
shrl
arpl
in
nop
sbb
jns
xor
pop
outsb
imul
lods
int
out
das
xchg
adc
adc
jne
int3
mov
xchg
dec
add
or
lea
mov
jg
adc
sbb
mov
daa
in
add
test
out
stos
sti
pop
mov
sub
hlt
aas
dec
lcall
xchg
mov
mov
inc
inc
jbe
arpl
and
jb
in
and
loope
js
dec
xor
cli
pop
cmp
insl
add
xor
test
shl
and
dec
add
ret
call
jecxz
sbb
ja
mov
push
hlt
xor
in
shl
scas
hlt
push
xchg
outsl
jl
pop
dec
pop
sub
sub
sub
mov
inc
rcll
mov
add
adcl
not
jl
into
sub
push
xor
andl
arpl
insb
pushl
push
lock
mov
dec
jnp
dec
cltd
mov
inc
lret
dec
xchg
loop
fsubs
rcll
xchg
sbb
notl
jmp
sti
jge
or
cli
addr16
jge
xchg
mov
sbb
clc
loope
notb
xchg
push
int
hlt
dec
pop
fiaddl
jl
out
mov
adc
pop
mov
shrl
mov
sub
mov
fildl
rcrl
out
mov
sub
jmp
mov
dec
fiaddl
outsb
out
fdivs
imul
mov
dec
add
mov
jno
sbb
jnp
inc
aad
iret
inc
and
mov
mov
xchg
pop
xor
aaa
fldt
inc
imul
or
pop
movsl
xor
iret
int3
fstpl
push
pop
stos
int3
adc
dec
in
test
lea
jae
ret
gs
adc
rorl
popf
mov
xchg
hlt
xchg
iret
lret
cmpsb
cmp
xor
fsubrp
sub
pop
out
loopne
dec
push
jae
cmp
mov
fildl
mov
push
in
mov
enter
fsubrl
push
jae
lods
stc
data16
in
inc
aas
stos
sbb
adc
inc
je
scas
sub
hlt
nop
clc
jg
adc
stos
push
cmp
loopne
test
add
dec
jae
ret
loop
pop
iret
hlt
les
or
push
pop
dec
or
xor
push
js
stos
ljmp
mov
push
or
repz
adc
mov
add
fnstsw
or
sti
pop
imul
mov
lahf
add
negb
mov
mov
ret
test
call
fwait
cld
add
fisttpl
mov
mov
dec
jb
xchg
inc
and
dec
pop
mov
xchg
ret
aas
lahf
sbb
cmp
cmc
adc
cmp
aas
adc
out
or
xchg
pop
mov
lods
inc
push
fcmove
cli
mov
cmp
test
sbb
cld
dec
add
sbbb
add
add
push
sub
or
pop
pop
or
add
scas
outsb
jp
ss
rcrl
pop
and
add
daa
and
cmpsl
addb
ds
pusha
and
cmpsb
pop
mov
xor
adc
imul
out
ljmp
sbb
pop
mov
ret
add
std
cmp
jbe
filds
xor
or
pop
sbb
jge
pop
nop
sub
push
test
dec
pop
mov
scas
sbb
ds
xchg
pop
add
mov
mov
andb
jecxz
jl
dec
pand
xchg
ds
or
ja
ljmp
insb
nop
ljmp
jno
pop
bound
lea
fnstcw
lea
push
mul
jg
mov
mov
add
dec
dec
rclb
into
or
sarl
out
adc
cmc
js
cmpsb
inc
es
pop
jne
nop
adc
lods
mov
lock
jge
ret
mov
ffree
xor
and
insb
std
xchg
push
das
outsl
lea
cmp
pop
ret
int3
out
je
lret
aad
addr16
pusha
icebp
adc
jae
hlt
xchg
mov
in
imul
mov
cwtl
insl
dec
jo
lock
push
clc
or
movb
or
repnz
pop
xchg
js
in
outsl
add
out
cwtl
mov
ficomps
leave
cltd
jnp
jle
in
mov
stos
jp
mov
out
lods
pop
dec
or
mov
jnp
movsl
inc
adcb
cmp
adc
add
adc
jo
xlat
insb
pop
pop
call
inc
push
cwtl
push
push
mov
sub
fistpll
add
or
jmp
dec
mov
icebp
mov
sarl
fsqrt
push
cmp
std
in
rol
cli
into
mov
sub
inc
or
inc
sub
adc
les
out
xor
sub
mov
cmpsb
adc
dec
in
pushf
mov
push
inc
sahf
sti
lcall
enter
and
sub
stos
cmp
mov
dec
pop
leave
movsl
std
testl
testl
xor
shl
or
fdivrl
movb
cmp
in
push
and
cmp
in
mov
rcll
inc
andb
mov
inc
aaa
sbb
shlb
out
xchg
test
push
cmp
lea
lret
ret
inc
insl
fcmovnbe
pushf
cmp
xchg
rorb
and
push
xor
xchg
push
xchg
test
das
jb
addr16
xor
in
repz
mov
fildl
cmp
push
and
or
adc
int
and
sub
jmp
mov
out
mov
push
mov
or
jl
das
push
push
xchg
sbb
roll
push
add
es
inc
fcomi
pop
and
subb
lock
iret
arpl
sub
idivb
mov
and
pop
cwtl
insl
scas
into
xchg
push
test
push
cmp
or
adc
or
jg
mov
insl
bound
sbb
repnz
add
nop
lods
das
outsl
mov
cmp
and
lret
jecxz
je
jl
mov
fwait
je
jns
dec
mov
mov
imul
cld
xchg
add
push
cmp
test
leave
cmpsb
pop
imul
pop
pop
fists
mov
loopne
mov
dec
cmpb
add
mov
iret
test
cltd
jnp
sub
jno
mov
and
jne
add
leave
or
ret
push
jne
pop
pop
stos
adc
shrb
mov
add
mov
scas
adc
scas
iret
dec
xor
ja
dec
ljmp
jne
in
lcall
out
pop
jnp
std
lret
mov
adc
movaps
insb
inc
out
xchg
lahf
mov
fldenv
xchg
in
cmpsl
sti
fsubl
xor
test
adc
aas
or
pop
xchg
mov
cmp
sbb
cmpsb
cmpsl
movsb
imul
gs
cmp
cld
cli
mov
adc
xchg
imul
es
popf
subb
pop
pop
mov
jmp
mov
push
xchg
outsl
mov
stos
mov
push
icebp
xchg
leave
repz
pushf
enter
push
push
lcall
inc
dec
jnp
cmpsb
jmp
mov
insb
scas
sbb
jb
cmp
nop
pop
dec
xchg
out
in
mov
mov
dec
icebp
add
in
push
aad
outsb
aam
arpl
and
shrb
shlb
pusha
mov
cli
popf
shlb
orb
pushf
int3
mov
add
sub
push
pop
fsubs
cmp
push
cmp
fldt
fwait
or
mov
jo
adc
mov
add
jl
in
dec
imul
push
leave
cmc
jle
or
test
outsb
jl
nopl
jp
add
cmp
es
inc
sbb
out
les
lock
and
insb
lds
mov
int3
mov
cld
sbb
aas
inc
stos
into
cwtl
cmp
mov
rol
sbb
jno
shlb
popf
xchg
mov
xchg
or
adc
dec
int
aad
xchg
sub
and
lock
fdivs
ficoms
out
xchg
lea
test
imul
and
xchg
rorb
and
sbb
gs
or
sub
test
sbb
mull
mov
push
mov
xlat
add
adc
mov
dec
sbb
pop
jno
or
xchg
mov
pop
push
test
fidivl
pushf
dec
enter
inc
push
pop
and
dec
and
popa
sbb
out
and
xchg
mov
mov
mov
mov
sti
mov
aas
pushf
loope
lcall
insb
xchg
xor
ret
and
jnp
dec
push
mov
mov
into
cmp
pushf
dec
mov
sarl
pusha
out
pop
insb
aad
cmp
cmp
out
imull
outsl
push
dec
clc
mov
jle
pop
addb
popa
pusha
jne
out
mov
filds
sarb
inc
dec
inc
mov
pop
adc
ljmp
scas
adc
push
insl
dec
xor
imul
aad
jnp
adc
and
lret
aad
dec
and
dec
mov
pop
cmp
xchg
adc
or
shrb
sbb
cmp
lods
mov
jnp
bound
sub
lods
cmpsb
out
add
xor
dec
pushf
jnp
ret
and
push
adc
add
dec
adc
inc
scas
sarl
jp
int3
xor
push
add
inc
jae
pop
sub
mov
jge
pop
cmp
or
push
adc
mov
lret
les
add
push
xor
jp
fidivrl
pop
sbb
mov
ret
xor
movsl
scas
iret
fidivl
gs
je
movsb
jo
insb
jmp
inc
add
xor
sub
movl
pusha
push
fsubrl
mov
dec
mov
cmp
dec
lret
jns
iret
push
cltd
je
and
push
mov
cld
int
into
jp
xchg
dec
cmpsl
push
pushf
int
fadd
inc
repnz
loopne
cmc
dec
cmp
pop
or
pop
dec
test
ljmp
mov
mov
cmp
pop
insl
jne
pop
fcoml
mov
adc
addl
fs
cli
mov
sub
push
lret
push
mov
pop
or
mov
push
push
push
mov
cld
lcall
jecxz
and
data16
inc
fstps
jge
inc
push
iret
pushf
sti
ss
xor
dec
jbe
lcall
and
minps
mov
imul
push
sub
ja
add
jbe
sbbl
hlt
cmp
in
jae
ds
test
push
ds
xor
repnz
lret
mov
sti
lea
xor
mov
imulb
dec
sti
dec
add
mov
mov
jbe
in
lock
sbb
loopne
or
and
mov
out
push
daa
rol
xchg
aad
idiv
jbe
xchg
mov
push
cmp
in
gs
leave
cmpsb
push
repnz
inc
stc
leave
mov
and
loop
mov
mov
inc
rorl
std
and
into
jbe
lea
push
rorb
ss
pop
cmp
mov
push
add
push
daa
ljmp
push
cmp
sub
shll
arpl
jbe
sbb
push
rorl
fdivrs
jg
mov
jns
dec
push
insl
adc
addb
loope
xor
mov
push
test
out
sbb
rolb
mov
ror
adc
xlat
xor
jmp
mov
adc
into
xchg
loop,pn
xor
jns
dec
aam
mov
repnz
and
dec
loope
inc
gs
repnz
adc
popl
lret
lahf
xchg
scas
loopne
mov
loopne
add
loop
xchg
add
and
lods
in
adc
jl
sahf
call
jge
stos
sub
sti
cmp
cli
aam
repnz
movsb
xor
jo
jbe
push
jp
xlat
test
push
add
repz
push
out
sub
or
je
rcll
lds
jmp
xchg
mov
lahf
pcmpgtd
lahf
je
enter
and
mov
jne
mov
lock
clc
xchg
adc
jmp
stc
cld
std
jo
movsl
stos
push
enter
aaa
sbb
fs
xchg
xchg
das
leave
fwait
loopne
pop
pop
outsb
lahf
jge
xor
mov
jb
jecxz
ds
pop
jl
mov
adc
push
adc
cld
xlat
jp
jno
pop
lret
hlt
ret
std
add
sbb
loopne
push
je
pop
or
outsb
jbe
sbb
or
cs
inc
fldcw
les
push
outsb
jnp
xlat
insb
jbe
loop
js
push
sahf
leave
cmp
outsb
orb
scas
fldenv
dec
sbb
cmpsb
sub
adc
inc
inc
xor
xchg
icebp
mov
mov
repz
adc
xor
xchg
test
jecxz
jae
mov
push
and
mov
and
mov
cs
push
movsb
xchg
std
daa
repz
xor
lock
adc
cmpsl
shll
mov
hlt
push
ret
out
jmp
movq
stos
sbb
dec
insb
nop
loope
cmc
mov
mov
fcomps
ja
inc
xchg
divps
xchg
sbb
nop
mov
jl
mov
ret
inc
mov
pushl
jge
dec
lods
or
aad
push
jns
push
xchg
jbe
mov
ss
mov
cmp
jp
mov
shl
or
in
sub
jl
xchg
dec
push
out
shrl
movsl
movsb
pop
sbb
subl
sub
inc
sub
push
pop
pop
mov
icebp
jb
loopne
loopne
jmp
sbb
mov
aaa
rclb
sub
outsl
jg
add
xchg
ret
cs
jecxz
outsl
fmull
lret
cltd
movsb
aad
aad
cmc
out
dec
loope
fstpl
or
inc
sbb
leave
jo
test
jp
popa
pop
xor
js
das
out
jno
outsl
push
xchg
popl
call
xchg
fwait
mov
jle
shlb
ja
in
adc
mov
es
pop
sbb
int
cwtl
inc
hlt
sub
and
adc
gs
mov
test
add
daa
sbb
pushf
and
mov
lods
sub
xchg
and
fldt
ret
data16
mov
mov
fldenv
cmpsb
mov
xor
mov
xchg
enter
in
lret
push
xor
mov
aad
cmp
inc
push
or
inc
repz
xchg
fdivl
add
fbstp
xchg
fwait
mov
push
xchg
mov
js
dec
cmp
loopne
mov
int
sbb
xchg
scas
sub
inc
pop
mov
xor
in
lods
stos
mov
jp
aas
sbb
wrmsr
scas
repnz
imul
test
xchg
jg
dec
insb
mov
shrl
jmp
aad
cmp
out
clc
scas
daa
enter
sub
adc
cmp
dec
ja
push
and
push
jg
pop
cmp
xor
iret
cwtl
subb
sub
and
repnz
aad
pop
sbb
shll
shl
data16
pop
mov
ljmp
scas
xorl
rcll
push
out
dec
test
out
mov
jl
add
cmp
mov
mov
push
nop
pop
inc
lea
jle
out
dec
push
inc
popf
inc
repz
nop
or
pop
cmp
mov
jnp
cmpsb
jo
shr
pop
xchg
xor
push
lods
lds
mov
push
adc
cltd
dec
push
jge
shl
push
xor
je
pop
inc
mov
pop
aad
mov
lods
pop
adc
mov
inc
popf
dec
and
clc
in
mov
es
add
ja
mov
addr16
call
sti
pop
jno
into
push
mov
clc
and
shlb
jecxz
sub
dec
push
dec
push
call
lock
xchg
aam
and
and
jecxz
jb
adc
loopne
enter
mov
push
jl
cmpsl
negl
rorb
andl
pop
mov
movsl
ljmp
out
sar
or
xchg
jb
mov
mov
jno
pop
dec
loope
faddl
sub
test
adc
out
lret
aam
int
les
out
pop
sub
mov
pop
push
sti
or
fistl
xor
cmp
mov
cld
jmp
subb
pop
add
sbb
add
popa
mov
js
adc
ja
inc
das
xor
add
aaa
push
pop
outsl
in
addl
xchg
enter
pop
jmp
test
fcompl
push
dec
cltd
out
mov
inc
jns
aam
sub
repz
and
bound
adc
inc
dec
clc
fsubl
sbb
movsb
cmc
dec
inc
and
xchg
fistl
sahf
lret
jg
xchg
push
fildl
sbb
mov
int3
pop
movsl
loop
cmp
xchg
dec
jge
jge
jbe
rcr
push
lea
mov
leave
fistps
lret
nop
mov
mov
data16
xor
adc
push
push
jo
cmp
popa
or
test
jl
loopne
xor
insl
xchg
outsb
imul
test
mov
jmp
cmp
subl
sbb
inc
nop
sti
fstpl
dec
fldcw
sbb
xchg
psubusb
pop
std
sbb
push
push
sbb
pop
push
mov
gs
pop
sbb
enter
dec
fisttpll
mov
pop
add
stos
sarl
orl
addr16
jb
adc
xor
mov
das
jne
mov
leave
mov
fldenv
xchg
data16
in
sub
lods
push
dec
nop
loop
jecxz
leave
and
jp
add
fdivl
cmpsb
sbb
pop
mov
stc
mov
adc
cmpsb
lcall
into
dec
mov
jg
frstor
insb
adc
or
out
out
and
adc
add
das
hlt
pop
inc
shrb
pushf
cmp
es
fucompp
mov
imul
mov
jle
shlb
add
out
stc
and
xorb
cmp
adc
stc
outsl
cmpsb
ss
sbb
data16
loopne
jno
adc
adc
push
add
gs
shr
dec
popf
mov
lahf
pop
ss
mov
jp
iret
sub
adc
mov
rclb
and
mov
pop
pop
cmp
mov
sbb
cs
int3
or
xor
xor
jbe
mov
push
scas
int3
pop
and
inc
jns
pop
sbb
jl
sub
jne
jl
cmp
pop
add
iret
mov
mov
popa
and
outsb
movsl
loop
addr16
pop
inc
jne
mov
shrl
jmp
lcall
ds
sub
cmp
dec
or
or
mov
int
add
daa
rclb
push
mov
lds
clc
pop
adc
call
xchg
jmp
cmpsl
or
bnd
xor
adcl
gs
pop
sub
adc
cmp
scas
js
sbb
sub
mov
into
or
cmp
inc
popf
pop
mov
add
cltd
mov
xlat
inc
bound
imul
mov
sub
aas
sbb
ror
out
ds
dec
leave
jp
movsb
dec
add
or
scas
cli
je
and
mov
pusha
and
xor
xor
and
cld
shlb
dec
adc
push
neg
sub
lock
xor
sahf
aaa
movsl
scas
in
xorb
sub
mov
popa
mov
jb
mov
mov
outsb
scas
jb
insl
mov
leave
mov
mov
dec
cmp
jns
fisttpll
shr
fndisi(8087
out
push
add
test
xchg
das
xor
jne
or
out
sbbl
ljmp
shlb
adcb
jge
ror
scas
pusha
bound
out
jecxz
pop
fsubrp
sbb
mov
cltd
inc
push
cmp
or
shll
mov
stos
jg
ljmp
insl
add
mov
pusha
ret
shr
ja
add
data16
ja
adc
sbb
shrl
addb
loop
outsb
roll
add
call
jb
cltd
fcompl
inc
add
lcall
sub
pop
in
out
cmp
xchg
call
ss
xor
cmpsl
and
xor
imul
loop
push
pushf
frstor
loopne
aaa
add
je
xchg
stos
xchg
and
subl
pop
inc
pop
jbe
add
stos
sub
sbb
xor
dec
push
clc
sbb
push
into
xchg
hlt
shll
in
xor
jl
pop
mov
cltd
jno
jnp
mov
xor
std
or
pop
aad
jae
faddp
and
popa
aaa
lcall
dec
or
inc
lea
ss
inc
movsb
push
mov
dec
cwtl
jnp
jbe
mov
push
mov
jnp
xchg
inc
and
cmp
mov
add
jnp
pop
adc
jp
stos
andl
mov
sbb
nop
push
sbb
adc
fldz
xchg
in
andl
movsb
sbb
pop
mov
push
push
sbb
out
mov
leave
test
js
fcomip
scas
xor
add
add
mov
dec
or
xor
shl
int3
xlat
sti
test
dec
adc
out
iret
xor
or
mov
and
loope
or
pshufw
xchg
popa
test
pop
inc
int3
add
aas
lahf
jne
addr16
mov
bswap
xor
adc
js
dec
pop
or
xchg
dec
jmp
movsb
dec
outsl
or
sub
mov
xchg
mov
or
inc
adc
mov
es
loop
cmpsb
jge
and
lock
icebp
or
xchg
mov
mov
sub
xchg
fmuls
fwait
into
jns
sub
test
dec
cmp
and
lods
test
mov
loopne
cmp
icebp
dec
das
jne
dec
leave
sbb
or
outsl
cli
mov
inc
pop
push
mov
mov
add
push
in
lret
cmp
adc
pop
jecxz
in
sbb
add
inc
loope
sub
popf
push
pop
push
into
dec
or
inc
sahf
insl
arpl
ja
jo
adc
adc
in
jge
les
loopne
pop
outsl
shufps
adc
mov
xchg
mov
and
test
and
push
xchg
out
and
out
sahf
adc
pushf
orb
dec
sub
mov
jnp
incl
xchg
stos
push
pop
jae
mov
jmp
inc
sub
data16
insl
in
je
cmp
mov
sub
xlat
mov
addb
pop
out
out
std
pop
xchg
adc
and
mov
push
xor
pop
xchg
lcall
mov
xchg
fildll
push
in
out
inc
cmp
pop
scas
das
or
mov
cmpsb
in
inc
push
je
pusha
jp
ret
leave
xchg
and
aam
adc
xchg
aaa
jno
fs
xchg
out
mov
loop
cld
rcr
mulb
sbb
jg
push
pop
pop
xchg
out
cwtl
insb
mov
jo
ljmp
and
mov
dec
out
and
pop
pusha
mov
jmp
mov
idivb
sub
int
xchg
adc
or
out
pop
cmp
loopne
cmpsl
frstor
outsb
outsb
mov
mul
dec
pushf
fistps
shr
mov
jns
mov
mov
sbb
sbb
sbb
sub
inc
lcall
lret
bnd
cmpsb
cmp
movsl
clc
jnp
stos
js
mov
sub
adc
add
fcomp
mov
dec
ds
jb
push
lods
fnstsw
pusha
inc
in
addr16
cmp
jp
sti
in
in
ret
add
mov
popf
lcall
and
hlt
seta
scas
dec
dec
mov
outsb
in
mov
dec
mov
nop
or
imul
std
jo
testb
cmp
subb
mov
mov
aam
call
adc
shl
mov
xor
mov
jmp
xchg
xchg
cmp
dec
jmp
rorb
mov
cmp
out
shlb
dec
inc
push
js
lahf
pop
sub
xor
daa
add
mov
icebp
les
aaa
or
and
push
cmp
das
shl
mov
mov
add
and
jae
sarb
loopne
out
ror
shlb
subb
xor
ret
xchg
jns
xor
dec
in
xchg
jge
fs
pop
push
out
xor
push
je
cmp
push
push
lret
daa
sub
inc
cmp
data16
fldenv
popa
outsb
arpl
xchg
inc
in
cld
inc
ret
mov
daa
test
in
cld
xchg
loope
das
xlat
push
and
pop
inc
pop
cwtl
cld
rorl
sbb
xchg
push
pop
and
in
fisttps
popl
xor
sbb
push
arpl
cmpsb
sbb
mov
mov
and
jbe
cmp
push
mov
je
loopne
mov
xchg
enter
pop
ss
sub
outsl
mov
sbb
sub
fstl
pop
jo
push
ret
adc
fidivrl
fs
scas
jo
adc
jb
mov
push
inc
scas
stc
inc
sbb
lahf
add
push
int3
or
mov
and
stc
cmp
xor
jmp
insb
rolb
push
je
stos
jg
pop
test
sbb
mov
jge
das
mov
outsl
xchg
nop
pop
mov
inc
dec
gs
test
lods
mov
mov
insl
lods
adc
jne
sub
aaa
jle
mov
cli
cmc
call
cmp
daa
cltd
data16
call
pop
les
fidivs
add
cmpl
inc
sub
imul
pusha
and
xor
pop
push
mov
cs
pop
cmpsl
inc
shrb
hlt
daa
sbb
xor
dec
xor
lds
jmp
sbb
nop
fs
cld
aas
and
dec
mov
pop
sbb
movsl
jnp
xchg
xorl
mov
xorl
or
insl
call
scas
shrb
jl
cltd
cmpsb
fstp
jp
icebp
scas
fimuls
mov
sbb
jb
addw
dec
adc
xchg
scas
inc
pop
xor
sbb
mov
flds
sarb
and
loopne
fwait
mov
dec
test
mov
jno
adc
bound
sbb
cmpsb
ljmp
bound
adc
fimull
or
lods
hlt
insl
fwait
or
in
xchg
sbb
cmpsb
daa
out
jno
data16
mov
ficompl
push
xor
mov
daa
mov
decl
inc
jnp
lcall
inc
test
adc
sub
dec
aaa
lahf
pop
jmp
out
xlat
fs
or
fadds
int3
leave
xor
test
ret
fs
outsb
dec
in
push
dec
pop
sbb
push
leave
push
outsl
scas
mov
pusha
adc
cs
push
add
jnp
les
mov
in
adc
and
shrb
xchg
jl
nop
pop
or
scas
ds
push
adc
xchg
dec
pusha
stos
adcl
je
cmp
sbb
movsb
pop
int
xchg
fnsave
mov
lret
push
call
xchg
mov
mov
lods
fs
mov
dec
add
add
add
ret
jo
in
or
shll
pop
fwait
sub
mov
mov
cwtl
mov
sarb
outsl
pop
lock
ret
insb
pop
push
mov
xor
jp
pop
cwtl
pop
and
imul
cmp
enter
scas
jg
out
or
sarb
inc
push
call
jg
mov
insb
push
rcll
push
lcall
sub
lea
mov
sub
fwait
jp
mov
and
or
mov
jno
in
jg
pusha
mov
nop
imul
xor
jecxz
dec
addb
popf
mov
cmp
imul
aad
jge
and
inc
cld
sahf
and
in
aam
mov
cmpb
adc
ja
movsb
lods
mov
stc
lods
arpl
sub
daa
in
mov
cmp
ljmp
cli
andb
es
adc
out
jb
dec
mov
out
xor
hlt
pop
and
sbb
outsb
mov
ret
dec
push
jl
mov
in
int
push
dec
enter
pop
nop
btc
rcrl
jp
jmp
or
cld
cmpsl
outsl
fistl
pushf
inc
adc
jne
stos
xor
orb
or
mov
pop
xorl
loope
and
mov
cmpsb
pop
and
mov
mov
sbb
dec
in
js
jno
in
cld
mov
sub
es
cld
sbb
add
jbe
pop
add
insl
mov
inc
jnp
inc
xchg
test
test
jmp
inc
sbb
xor
add
xchg
inc
mov
icebp
push
pop
out
xor
xchg
cltd
and
sub
test
jp
cmp
fimuls
sarl
mov
das
insl
bound
mov
jle
sub
mov
and
aad
or
outsb
dec
ret
and
imul
lcall
int
dec
mov
push
xchg
arpl
xchg
add
sbb
jmp
cld
mov
dec
and
xchg
ret
imul
fisubl
insl
adc
dec
mov
add
cld
sub
pop
xchg
add
ret
mov
movsl
loop
nop
push
jae
ja
pop
lods
xor
or
adc
mov
adc
dec
add
pop
imul
mov
pop
incb
ljmp
sbb
popa
das
and
jae
inc
aas
in
lahf
xor
jecxz
aam
adc
lret
faddl
cmp
filds
mov
mov
adc
cmp
data16
or
inc
cmc
jbe
and
mov
push
mov
pop
out
pop
in
jno
jg
rclb
sbb
dec
ret
push
orb
gs
pop
int3
push
jp
sbb
arpl
adc
jecxz
add
xchg
shr
fdivp
mov
in
fs
add
push
adc
mov
jecxz
cmp
inc
movsl
pop
mov
int3
xchg
mov
cmp
sub
stc
jmp
in
repnz
ljmp
fcompl
lret
call
rclb
pop
push
insl
dec
imul
jno
xor
add
inc
xor
fst
cmp
adc
xor
insb
hlt
pop
mov
push
mov
fdivrs
mov
inc
enter
jp
pusha
sbb
jnp
js
xchg
fildll
push
mov
ja
xchg
movsl
sbb
or
mov
xchg
cmp
mov
xor
cmp
push
or
push
inc
in
push
xor
lcall
repnz
sbb
mov
mov
cmpsb
xor
xor
aad
cmc
adc
xor
jmp
mov
mov
cmpl
stos
xor
outsl
xorl
lods
add
jp
fnsave
add
pop
adc
adc
sahf
scas
roll
call
lock
mov
sbb
xor
out
pop
dec
push
movsb
adc
testb
stc
movsb
cwtl
push
movsb
daa
sar
mov
js
jg
cmp
ja
ret
and
lahf
in
ljmp
sti
push
rcrl
push
pushf
mov
add
xor
lea
mov
push
je
data16
push
inc
push
inc
cmp
cmpxchg
hlt
pop
lahf
jge
cmp
dec
aas
rdtsc
mov
test
roll
rorb
xchg
cmpb
sub
and
pop
cmp
sti
add
cmp
lods
pusha
sub
push
xchg
out
and
and
pop
xchg
into
sahf
arpl
sarl
push
xchg
or
jbe
loopew
mov
scas
jg
fs
push
xor
fcos
adc
push
loope
ds
shr
sub
push
les
mov
inc
orb
xchg
decb
cmp
or
mov
out
xchg
negb
outsl
cltd
mov
ja
and
sbb
jo
push
inc
jge
adc
jp
mov
lahf
jge
mov
imul
push
repnz
push
sub
mov
repz
adcl
sbb
mov
cmpsb
and
mov
add
push
mov
add
inc
test
adc
push
cmc
inc
dec
outsb
add
cmp
cltd
scas
femms
pop
dec
imul
insl
pop
push
mov
out
mov
sub
cmp
mov
divb
cmp
mov
mov
ja
data16
mov
pop
sub
out
push
fmulp
test
add
push
test
mov
pop
js
mov
dec
imul
and
stc
incl
mov
sub
push
movsl
and
scas
pusha
sbb
and
fdivl
movsb
shr
push
or
stc
test
or
test
sub
sub
orl
xchg
jge
dec
jno
and
xchg
dec
pop
pop
out
push
clc
int
dec
test
cs
ljmp
xchg
pushf
mov
mov
add
dec
sub
scas
sbb
cmp
and
xor
ret
mov
adc
das
mov
fldl
sub
bound
das
or
addb
js
jnp
jle
jl
push
ror
jmp
repnz
movsb
movsl
inc
les
lods
pusha
push
ret
scas
sbb
jbe
pop
out
sub
jns
and
dec
out
rcll
sbb
or
rcr
pop
sbb
andl
in
push
pop
insb
xchg
sbb
jnp
lods
stc
fsubp
and
cmp
icebp
cmp
pop
or
sub
in
sub
cmp
dec
cli
xor
nop
int3
fildll
test
cmp
mov
hlt
lea
jbe
adc
aam
xchg
mov
jae
cmc
xchg
jecxz
movsb
sbb
inc
fistpll
aas
setg
dec
out
mov
pop
jo
mov
cmp
adc
bound
mov
fs
popf
mov
xchg
and
addr16
jecxz
jb
xchg
mov
dec
adcb
cmp
aaa
push
xchg
push
push
test
mov
adc
mov
cmp
add
xchg
ljmp
jb
scas
movd
stos
mov
xchg
pusha
add
sbb
or
sbb
add
push
lret
es
dec
add
pop
or
jle
fdivrl
push
push
jl
das
scas
inc
push
sar
enter
jo
and
sbb
cmc
xchg
fimull
je
je
or
out
xor
loope
iret
mov
imul
dec
sbbl
dec
movsb
cld
and
arpl
addb
ja
aas
adc
fisubs
imulb
mov
out
js
jnp
call
mov
mov
cmp
ljmp
and
mov
arpl
in
shll
xor
or
in
push
push
xchg
aaa
adc
cs
pop
sub
cmpl
xor
jp
in
dec
xchg
and
cmp
cmc
test
inc
lret
sub
ret
popf
or
rcrb
sti
inc
gs
fstpl
lret
ds
mov
cmp
std
push
cmpsl
pop
inc
xchg
add
pop
add
pop
fs
mov
scas
loope
mov
add
fimull
jnp
xor
pushf
sub
xor
push
jb
push
and
incl
and
negl
or
pop
bswap
mov
pop
out
adc
das
into
lret
push
andl
jl
movsl
and
mov
dec
aam
shll
xor
cmpl
les
fs
das
lods
stos
int3
adc
repz
call
insb
pop
push
fnstcw
mov
aaa
add
mov
xor
cmp
loope
dec
js
pusha
rcrl
cs
xchg
ret
stc
mov
ja
jno
inc
test
add
in
jp
enter
sbb
xchg
aam
push
stc
xor
push
add
mov
jb
cmp
push
cmpsb
jns
xchg
lods
and
subl
pop
aaa
lcall
inc
out
inc
movsl
jnp
mov
mov
mov
adc
loope
fsubrl
bound
scas
mov
outsl
jae
or
arpl
movsl
cmpsl
fimull
sahf
jp
hlt
imul
or
xchg
push
fldenv
sub
jnp
xchg
loope
push
pop
dec
pop
xchg
clflush
sahf
shrb
test
sub
in
inc
or
or
xor
divb
adc
push
mov
loope
xchg
add
ja
sub
xchg
ret
cld
ret
add
mov
data16
jbe
xchg
scas
orb
inc
xor
pop
das
notb
fcmovnbe
inc
fmull
int
bound
ret
hlt
xor
mov
inc
icebp
imul
push
filds
jge
std
mov
push
push
data16
leave
cmpsl
xor
out
inc
xor
pusha
data16
arpl
pop
pop
movsl
cmp
xchg
pop
jns
ja
sub
fnsave
pop
lods
movsl
xor
xchg
into
xor
mov
sahf
jl
jl
stc
test
rcrb
fptan
aaa
sti
sub
cmc
xor
pop
xlat
pop
cmp
data16
xor
mov
shll
insl
inc
movsb
cmp
mov
pop
mov
stos
push
outsb
je
rclb
aad
bound
xchg
dec
xor
ds
test
pop
mov
xchg
cwtl
fbld
push
cltd
mov
popf
xchg
mov
cmp
inc
es
sub
sbb
dec
pop
jle
xchg
mov
mov
cmpsl
call
mov
cmp
push
mov
cltd
dec
test
outsb
sbb
orl
xchg
mov
roll
jge
fcompl
sti
dec
sub
divl
in
out
mov
jno
fimull
fidivs
pop
push
mov
outsb
adc
dec
andb
outsl
mov
xor
cmp
xor
sub
pusha
mov
fadd
jecxz
enter
into
lods
inc
xlat
stos
mull
in
sbb
sbb
adc
xchg
mov
push
inc
inc
ds
xchg
xor
je
push
sarl
cmpsl
or
jns
arpl
cltd
cmp
movsl
push
add
sub
addb
cmpsl
pop
mov
push
int
mov
fsubr
xor
cli
or
cmc
ss
test
dec
push
pop
je
subl
sub
lret
or
les
fcmovu
out
mov
sub
loop
int3
aad
jle
aam
or
mov
or
and
rol
outsl
mov
adc
clc
mov
mov
sub
stc
push
pop
push
outsb
mov
movsl
xorl
push
imul
add
out
jp
add
mov
mov
add
shlb
imul
frstor
inc
dec
xchg
mov
adc
cmp
mov
loope
inc
adc
rclb
imul
dec
std
fcomip
sbb
and
inc
sub
pop
pop
add
xchg
mov
lahf
int3
or
add
test
bnd
stc
xchg
fisubl
or
idivb
out
xor
inc
jge
cmp
push
sbb
fildl
add
lds
das
xor
dec
mov
mov
sbb
push
lods
mov
sti
cld
rolb
pop
xor
inc
sbb
dec
sbb
fwait
cltd
or
jno
xchg
jp,pn
hlt
pop
cld
xchg
shrb
loop
and
or
adc
test
mov
rcr
or
jne
cltd
push
sbb
daa
and
decl
add
mov
add
pop
cmpsl
lods
lds
push
cwtl
mov
bound
adc
das
add
test
adc
cmp
repz
sub
inc
xchg
test
pop
shl
popl
add
push
pop
fadds
dec
mov
jl
repz
mov
add
pusha
fwait
mov
scas
insl
call
into
cltd
push
or
jne
enter
inc
loop
sub
sbb
xchg
or
add
mov
mov
jno
adc
and
arpl
mov
movsb
mov
or
jno
cmp
aas
in
roll
cmp
popa
xchg
scas
or
out
aaa
adc
push
dec
mov
sbb
jnp
fadds
push
jg
lret
pop
call
inc
sub
add
ficoms
loop
and
and
ret
daa
test
pop
pop
pop
loop
cwtl
jmp
pop
pop
aaa
push
cmc
shll
or
daa
loop
inc
mov
add
test
xor
xor
das
xchg
push
cld
sub
mov
adc
cmp
addl
stc
or
fstl
sub
iret
mov
insb
cmpsb
adc
cwtl
test
stc
rclb
dec
cmp
push
dec
sbb
loopne
and
mov
sbbl
inc
pusha
psignb
cmc
adc
fnsave
mov
jmp
shll
fidivs
adc
pop
add
xchg
jne
int
mov
negl
push
out
xchg
xchg
mov
mov
int
loope
mov
dec
lcall
sub
jns
insb
push
xchg
push
add
mov
mov
enter
xchg
pop
outsl
jl
pop
sub
jne
call
in
gs
jo
mov
push
cli
and
add
out
sbb
out
movsb
mov
xchg
sbb
idivl
call
leave
mov
adc
cmpsl
ret
or
add
cmp
mov
enter
lods
pop
int
mov
adc
in
push
pop
dec
cmp
add
movsb
jns
dec
pop
mov
mov
popl
das
das
push
arpl
sub
jne
sbb
pop
hlt
sbb
xor
push
loopne
jb
mov
jbe
jmp
in
push
outsb
daa
icebp
rcrl
and
add
and
cmp
repnz
and
shr
pop
push
negl
aad
fidivrl
mov
pop
dec
xor
ja
mov
xchg
mov
repz
jnp
mov
jl
cld
daa
inc
dec
pop
cmp
and
aas
popa
add
or
fisttps
movsb
insl
repnz
stos
mov
ficoml
push
add
jns
filds
cmp
pop
lret
mov
shrl
push
jns
dec
loopne
rcrl
mov
sbb
adc
repz
lock
push
jmp
fadds
add
lret
daa
test
clc
in
adc
mov
cmp
enter
sbb
scas
scas
in
or
leave
jb
or
in
scas
stos
mov
shll
and
pop
push
out
cmp
inc
mov
mov
daa
and
out
mov
sbb
leave
jge
in
fcmovne
test
ds
xor
mov
addr16
div
call
add
mov
cmp
jae
mov
adc
mov
pushf
out
aad
push
xor
dec
movb
mov
xor
add
shrl
xor
mov
mulb
inc
decb
add
dec
stc
jb
adc
mov
imul
in
xchg
inc
jae
lods
mov
jp
push
lods
push
xchg
repz
leave
imul
adc
cmp
or
mov
mov
or
dec
push
adc
mov
cmc
mov
out
pop
push
dec
incb
mov
mov
pop
xlat
int3
sbb
xlat
or
int3
push
mov
inc
mov
mov
xor
in
lret
cmp
jne
and
lea
icebp
push
test
imul
in
pop
cmp
lea
jge
jbe
jp
jo
out
int
mov
jo
nop
mov
outsb
bound
adc
shrl
lcall
pushf
dec
jl
clc
add
repz
mov
in
inc
mov
adc
cmp
fsts
xchg
xchg
inc
mov
lds
fmuls
sub
and
pushf
es
fildl
mov
imul
pop
dec
test
xor
es
arpl
pushf
sbb
cmp
add
pop
cs
mov
sahf
das
xchg
mov
inc
jg
push
add
setl
or
inc
int
xor
xor
sbb
mov
test
jecxz
orb
ljmp
xor
pop
sbb
jne
cmp
pop
or
mov
xor
test
fwait
sti
or
cmc
andb
or
dec
insb
fldl
cmp
pop
jbe
xchg
outsl
sbb
dec
test
sub
jae
xchg
popf
daa
cmc
movsb
test
icebp
test
dec
mov
test
xor
loopne
push
push
dec
movsb
aas
add
jecxz
jle
movsl
loop
enter
jne
and
mov
add
adc
and
pop
sahf
xor
mov
push
popf
lcall
push
cmp
jmp
mov
jg
jle
leave
jno
jbe
insl
popf
xchg
leave
xor
mov
fcompl
mov
or
xor
nop
pusha
std
add
or
aas
sti
pop
jge
shr
cmovg
cld
stos
rcll
scas
and
or
testb
push
jns
cltd
into
pop
add
sbb
fsubs
movsb
cli
in
sub
dec
jl
lods
lds
mov
xor
mov
inc
or
add
std
inc
subb
lods
inc
out
js
pop
and
imul
cwtl
pushf
jnp
rcr
dec
lods
pop
inc
mov
push
fs
loopne
jo
mov
and
jbe
jmp
aaa
dec
cmp
lock
pop
sub
clc
in
fnstsw
outsl
jl
xchg
js
adc
fdivr
shlb
jno
mov
xchg
icebp
and
pushf
add
push
adc
orl
andb
mov
stos
xor
imul
mov
addr16
fildl
shll
enter
adc
push
xor
or
shlb
fsubrl
aaa
push
sarb
hlt
xlat
test
jb
mov
mov
ss
push
sub
mov
iret
add
push
out
or
incl
adc
inc
stos
data16
icebp
pop
lea
pop
xlat
fs
sub
nop
lea
xor
jno
or
loop
and
in
mov
daa
out
int
dec
jl
enter
dec
iret
pop
push
push
adc
mov
das
jmp
mov
repnz
add
mov
icebp
mov
mov
fst
mov
xchg
mov
jge
jae
out
mov
pop
dec
sbb
rcrl
jae
xchg
jnp
or
pop
push
and
sbb
add
xchg
testb
arpl
push
out
inc
sub
das
sti
fsubr
mov
adc
push
inc
imul
loope
fnstsw
mov
les
inc
mov
push
sbb
adc
or
ret
push
adc
dec
jae
push
and
xor
mulb
arpl
movsb
popf
gs
cmp
xlat
pop
jmp
and
inc
pop
andb
xor
pop
xchg
mov
shrb
jp
gs
in
push
adc
jle
xor
pop
xchg
add
jno
loop
mov
jno
add
je
fs
dec
loop
mov
ret
adc
js
xor
jge
lds
add
arpl
js
lret
push
aaa
sbb
shll
sbb
xor
orb
loopne
addr16
mov
cmp
add
scas
shr
adc
push
into
scas
popf
into
daa
adc
mov
push
icebp
pop
jmp
addr16
mov
lret
add
xchg
into
mov
mov
mov
or
jb
pop
pop
arpl
pushf
cli
xchg
testl
mov
insl
mov
and
xor
iret
out
ret
fs
in
test
test
loope
pushf
add
test
cmpsb
pop
push
mov
imul
frstor
mov
iret
stos
jg
mov
xor
scas
mov
cmp
and
in
or
push
mov
jo
or
xor
fwait
test
mov
pusha
jae
fs
dec
jp
loope
fsts
lcall
jbe
sbb
add
add
dec
repz
insl
loope
cs
cmp
ss
cmp
push
or
adc
cmp
cmpsb
and
das
enter
jmp
out
xabort
mov
push
movsb
sub
xor
push
pop
and
inc
into
add
dec
cwtl
mov
or
pop
dec
jbe
jno
jno
mov
add
or
mov
iret
ret
mov
iret
jecxz
loope
repnz
push
sub
nop
out
jbe
mov
out
ret
ret
mov
xchg
mov
adc
push
in
push
sub
jmp
in
jnp
fldt
packsswb
lock
fnstcw
cmpsl
sti
mov
jg
pushf
test
icebp
lcall
pusha
rcr
inc
popf
and
inc
leave
xchg
shr
xchg
fs
sbb
push
add
or
clc
xchg
inc
pop
mov
ss
dec
add
dec
sti
sbb
aaa
add
into
nop
jo
ds
ret
pop
and
xchg
pop
fmul
jns
hlt
aaa
xchg
or
and
cld
addb
orl
jae
and
aaa
mov
adc
pop
movsl
fstl
ret
jp
iret
lcall
jp
mov
xor
movsb
call
inc
pop
sub
out
add
scas
push
adc
lret
stos
cmp
incl
push
cmpsl
push
push
sti
out
adc
xchg
jae
and
xor
fwait
sbb
push
push
xor
pop
shll
sbb
jle
pop
xor
les
push
dec
xchg
gs
sbb
fwait
sti
insb
stc
jb
mov
xchg
jl
add
pop
rcr
dec
enter
ficomps
lods
cmpsb
js
and
mov
mov
daa
sub
push
outsl
mov
pop
add
aad
mov
movsl
xchg
iret
and
mov
jg
jp
xor
mov
lds
dec
jp
popa
mov
sub
enter
mov
inc
ds
adc
imull
push
mov
dec
mov
mov
in
sub
adc
out
je
addb
cmp
sub
xor
lock
sbb
pop
fcoms
pop
xchg
fldt
popa
inc
sti
lret
mov
das
mov
add
pop
adc
sbb
cmp
hlt
pop
rcll
dec
push
inc
ljmp
loopne
icebp
shrb
cli
inc
pop
jnp
push
cltd
adc
lods
mov
enter
or
pop
outsl
xchg
mov
stos
or
lret
repnz
aad
repz
in
adc
jmp
mov
fwait
or
xor
dec
inc
rorb
and
cmp
rorb
aas
jl
jnp
pop
push
in
xor
movups
repnz
stos
daa
or
arpl
lods
insb
and
test
adc
sbb
jecxz
jmp
lret
push
in
rcll
dec
push
loopne
loope
sub
aad
adc
fdivp
adc
in
ret
cltd
movsl
mov
into
jb
lock
pop
test
fstl
push
stc
out
popf
nop
jle
xlat
inc
ficoms
pop
clc
and
leave
push
popa
and
mov
xor
sub
jmp
adc
sbb
push
dec
dec
lods
and
ss
ds
dec
push
cmc
pop
or
xchg
pop
gs
or
add
pushf
into
dec
jle
push
dec
inc
jns
mov
js
jno
and
sub
jns
in
push
fs
pop
xor
scas
cmpb
inc
xchg
out
or
and
pusha
cli
scas
aam
push
ljmp
aad
jb
add
push
pop
aaa
xchg
mov
push
mov
add
adc
jle
or
lods
lret
sbb
add
pushl
scas
push
ljmp
popf
jo
cwtl
ds
add
xchg
popa
pusha
lcall
mov
push
jle
sub
std
scas
dec
mov
sub
mov
out
sti
xor
mov
stc
push
pop
movsl
popf
daa
mov
xor
xlat
jmp
scas
cs
mov
fdivs
call
stc
mov
lcall
xchg
out
jb
or
outsl
test
inc
jnp
adcb
xchg
jae
pop
test
cli
add
push
leave
nop
lock
sbb
adc
outsb
cmc
pop
es
fwait
push
je
loopne
imul
lea
mov
xorb
mov
add
hlt
mov
mov
inc
add
movsb
ds
sti
fdivr
pop
jo
popf
adcb
imul
dec
shrb
shll
std
push
sbb
fidivrs
and
dec
mov
xchg
cmpb
adc
in
mov
or
xchg
xchg
aaa
or
xor
and
leave
adc
loopne
icebp
js
mov
xchg
sbb
les
mov
ja
jne
dec
mov
insb
arpl
cld
and
movsl
xor
test
rorb
iret
or
dec
sbb
orl
sub
mov
fsubs
inc
lahf
test
jb
jb
data16
jecxz
xor
lret
dec
pusha
mov
lret
loopne
adc
push
pop
adc
cltd
pop
clc
scas
push
popa
jge
loop
testl
rol
mov
mov
adc
jle
in
div
push
scas
roll
sbb
aam
ds
fdiv
movsl
lret
adc
lods
add
mov
push
add
and
cmp
push
push
fildl
lret
lret
mov
fisubrl
test
je
subl
lahf
jl
push
push
pop
pop
jmp
das
pop
outsl
add
scas
jns
data16
xchg
iret
addr16
lock
test
std
adc
pushw
mov
pop
addl
sub
lds
dec
lret
xchg
stos
or
sub
bound
jae
pop
adc
xor
mov
cmp
clc
je
iret
mov
mov
push
aas
or
loopne
mov
adc
xor
loop
out
jp
ds
sahf
inc
xchg
jle
loopne
xor
mov
addr16
cmp
mov
add
mov
cld
sub
sbb
outsl
xchg
sarb
push
xchg
out
mov
test
mov
xchg
lods
cmp
fisubl
lds
inc
jo
popf
test
xchg
or
ljmp
lock
jge
jp
ljmp
cmp
cltd
push
fsubrp
pop
test
test
aas
mov
ss
pop
dec
jns
pop
into
mov
sbb
mov
or
cmpsl
xlat
mov
scas
xorl
mov
bound
mov
pop
loopne
cmp
mov
das
jb
data16
shlb
nop
inc
pop
xchg
fidivl
out
inc
add
rolb
ret
repnz
mov
cltd
cwtl
sahf
jo
sbbb
mov
xorl
int3
xor
insl
cltd
cld
hlt
sbb
loope
mov
cli
push
mov
adc
fwait
popl
xchg
or
aaa
popl
mov
pop
xchg
into
inc
jge
push
pop
push
fstpt
mov
adc
mov
inc
sbb
inc
xor
mov
mov
fists
xchg
fadd
xchg
in
push
test
adc
mov
je
popa
ljmp
mov
and
push
fists
push
aas
pop
and
fcoms
es
add
scas
test
add
inc
pop
roll
jnp
iret
add
cmp
mov
inc
mov
sbb
dec
aaa
rcrb
jmp
jnp
cmpsl
add
xor
cmp
and
daa
xchg
mov
mov
xchg
dec
lock
loopne
jbe
sahf
sub
arpl
inc
mov
shr
mov
out
add
sbb
mov
in
sbb
jecxz
sub
popa
mov
sub
out
dec
lahf
loope
mov
mov
sarb
adc
cld
or
movsb
push
cmp
in
push
cmp
jbe
pop
sbb
jge
or
outsb
pop
mov
fnstcw
adc
mov
pusha
enter
jb
mov
jo
out
in
icebp
push
mov
xchg
mov
and
adc
les
sahf
add
mov
pop
and
pop
in
pop
mov
push
cmc
gs
imul
sub
cwtl
inc
pop
ret
stos
test
mov
push
or
cmp
add
xor
addr16
pop
mov
and
xor
push
jns
lea
bound
stos
mov
popa
xchg
pop
into
inc
iret
and
sti
inc
ljmp
fdivrs
loope
xchg
xchg
sarl
mov
mov
call
mov
pop
mov
fildll
dec
push
into
test
fwait
jecxz
lret
mov
xchg
or
fcmovb
jecxz
or
jae
leave
push
push
les
cmpl
xchg
or
jns
lods
add
push
cmp
adc
roll
mov
mov
call
fstl
pop
lcall
pop
adc
xchg
pop
mov
sbb
lods
fs
ljmp
test
mov
test
mov
lret
inc
mov
subb
fsubrl
sahf
loopne
leave
lret
dec
shl
aas
cmp
hlt
inc
ret
inc
jnp
divl
cmp
cltd
inc
in
inc
psrlw
lods
push
scas
insl
fstl
sub
leave
or
ror
dec
lds
lahf
adc
idiv
int
cltd
imul
adc
adc
xchg
or
popf
stos
hlt
mov
out
mov
mov
aad
jg
pusha
fcoms
out
add
mov
imul
inc
dec
pop
jns
or
enter
pop
ljmp
aad
or
push
and
data16
enter
pop
xor
xchg
js,pn
mov
xor
push
cltd
lods
cmpsb
xchg
mov
pop
fs
icebp
xchg
scas
or
add
mov
mull
aaa
push
push
es
bound
pushf
and
dec
xchg
dec
dec
lock
sbb
fsubrs
clc
pop
jge
test
roll
push
loopne
and
icebp
orl
popf
xchg
out
pop
stos
inc
mov
cmp
xlat
sbb
fcompl
popf
orb
hlt
mov
cwtl
push
inc
cwtl
mov
insb
insl
out
mov
dec
xchg
testl
vmovaps
xlat
pop
fmul
jl
jmp
jp
mov
lds
push
lret
sub
outsb
mov
jns
xorl
into
push
lahf
add
sbb
dec
dec
sub
cmpsl
xchg
cwtl
mov
cwtl
cmp
int3
sarb
push
or
outsb
enter
xchg
leave
push
add
mov
jnp
lods
sbb
inc
adc
pop
mov
cld
cld
dec
arpl
outsb
inc
js
fsubrs
or
lods
lds
sub
mov
repnz
sub
push
cwtl
jg
mov
or
insb
lcall
nop
xor
sarb
in
sub
add
mov
cmp
pop
loopne
ljmp
push
int
add
ds
pusha
mov
inc
lea
add
cli
mov
push
ss
bound
aaa
aaa
mov
push
sbb
shl
loop
fldl
sarb
or
ss
inc
mov
cli
movsb
xchg
shlb
addr16
daa
cmp
lods
pop
je
jae
fbstp
daa
mov
cli
cmc
and
movsb
popl
add
xchg
rol
std
xchg
dec
jmp
pop
fimull
in
repz
fscale
jmp
dec
push
push
wbinvd
std
ds
pop
fnstsw
adc
push
dec
in
adc
imul
jp
cmp
sti
test
cmp
cmovl
pop
mov
mov
lods
mov
iret
xchg
shrl
mov
ja
daa
add
in
inc
not
out
xor
xchg
imul
sub
pushf
shlb
stc
add
test
pop
jmp
fcmovb
mov
mov
sbbb
fildll
add
inc
out
sahf
in
je
push
cmp
xor
cs
mov
ja
dec
lods
push
inc
sub
sub
cmp
mov
fisttpl
int3
push
lods
aam
sub
adc
xchg
in
shl
or
insb
es
xchg
mov
gs
incl
add
or
jo
popf
andb
cmp
mov
jl
arpl
loopne
pop
lret
or
scas
push
sub
inc
mov
jecxz
insb
lock
ror
addr16
xor
ret
ret
shlb
or
popl
xor
adc
mov
or
test
aam
jnp
mov
aaa
or
adc
mov
xchg
stc
xor
adc
fadds
in
mov
mull
les
and
sub
and
push
in
jo
or
dec
xchg
mov
pop
insb
stos
pop
fisubs
push
scas
mov
dec
adc
add
inc
fldt
and
push
sbb
stc
and
jmp
aad
cmpsl
lret
ret
into
das
aas
lahf
gs
lods
mov
test
paddd
jnp
call
fisttpll
push
mov
xorb
scas
xor
push
push
xor
es
inc
incl
pop
dec
js
cmpsb
mov
jae
test
hlt
or
push
rorl
xor
into
ret
rorb
stos
enter
sub
mov
xor
jl
cmp
sbb
int
xor
and
out
cmp
daa
xchg
testl
mov
mov
push
scas
adc
js
sub
fs
lds
inc
sub
adc
gs
fdiv
xchg
mov
xchg
mov
cltd
pop
in
push
das
jns
or
add
mov
mov
notl
push
inc
add
scas
das
sbb
outsb
pop
xchg
ds
xchg
into
inc
push
add
js
and
xchg
data16
testl
push
jle
out
lret
mov
bound
ljmp
fisubrs
pop
jno
push
es
dec
shlb
cli
fmulp
inc
outsb
adc
test
out
js
push
mov
addr16
in
or
jge
jo
push
cmp
sbb
icebp
ljmp
or
cmpsb
xor
ret
push
add
push
mov
push
stos
fmul
cmp
ja
inc
pop
ret
fwait
pop
xlat
dec
sbb
inc
sbb
shl
and
inc
mov
mov
stos
std
push
mov
xor
rcl
into
iret
popf
sbb
push
inc
xchg
jo
mov
sub
jns
into
push
addl
lret
mov
insb
inc
push
idivl
or
lcall
add
or
add
add
fmull
mov
mov
inc
jge
push
adc
and
jbe
cli
movsb
test
or
jge
or
pop
dec
mov
adc
rcrl
std
lods
dec
dec
orb
insl
xchg
loopne
daa
leave
push
push
lret
ljmp
popa
fs
xchg
in
add
or
repnz
xor
or
mov
jecxz
jge
out
add
jecxz
pusha
ret
lret
dec
addr16
mov
mov
out
sahf
xchg
xchg
cmp
xor
sub
push
xchg
enter
popa
mov
inc
and
dec
push
adc
mov
fcompl
outsb
dec
inc
mov
hlt
xchg
aam
mov
stos
bswap
les
repz
fsubr
sti
mov
adc
sbb
mov
out
insl
inc
lret
jae
push
pop
cmc
test
pop
mov
jo
or
mov
xchg
jl
test
sti
fisubl
stos
les
test
daa
mov
push
jle
in
mov
dec
adc
test
push
mov
leave
cli
mov
lret
ja
and
pmulhw
inc
mov
sbb
xor
jmp
out
icebp
int3
scas
adc
inc
scas
icebp
shlb
or
out
out
cmp
sbb
push
xchg
clc
outsl
movsl
aam
enter
out
mov
push
dec
and
xchg
leave
xor
push
or
mov
mov
jl
nop
loop
mov
add
in
jecxz
mov
mov
test
push
fisttpll
inc
ret
addr16
and
lret
pop
xchg
jne
dec
cmpsb
not
xor
cmp
iret
jae
pop
xchg
push
cmp
inc
cmp
xor
enter
scas
xchg
cld
fdivp
adc
fst
daa
pop
cltd
roll
rcll
ds
sbb
jle
jp
scas
pop
pop
out
les
push
mov
into
je
cmp
lahf
add
lret
div
fcmovbe
dec
fldcw
cmpsl
shll
mov
ret
xchg
and
lcall
insl
jg
mov
push
fsubl
sub
mov
adc
loop
jb
fildl
and
in
cld
rcll
inc
sti
mov
pop
out
js
dec
call
ret
fldenv
mov
xor
mov
xchg
jmp
dec
ret
cs
imul
out
sub
int3
or
cmpsl
and
test
enter
push
push
icebp
les
fldt
cmp
fildl
xchg
lcall
add
mov
mov
lea
int3
lret
outsb
imul
fmull
in
iret
xchg
jmp
inc
mov
les
neg
sub
inc
aas
xchg
test
insb
xchg
mov
pop
inc
pushl
inc
jbe
cmp
add
jge
push
or
sbb
sti
mov
addl
lahf
sbb
mov
push
dec
dec
push
daa
cwtl
stos
int
test
pop
arpl
je
pusha
orl
ss
cmc
jne
das
call
pop
les
mov
push
sub
xor
mov
imul
add
inc
nopl
mov
movsb
out
push
dec
push
dec
mov
push
push
push
push
mov
cs
jno
xlat
aad
and
stos
testb
fcmovne
push
insl
cmp
pop
sub
mov
jbe
push
or
lods
push
cmp
into
pop
rorl
mov
cmp
and
xor
pop
std
ja
into
pop
mov
or
lds
rep
aad
adc
lea
popf
ficomps
je
pop
sub
mov
fiadds
in
mov
cmp
inc
in
imul
mov
popa
negb
mov
enter
inc
rorl
xchg
pop
adc
icebp
int
ret
loop
fs
xchg
add
sbb
enter
pop
adc
imul
inc
push
fisubrl
mov
jae
jno
or
adc
stos
arpl
mov
sub
sbb
jp
pop
aaa
movsb
jbe
sub
sub
jl
outsb
out
js
mov
icebp
gs
xor
mov
sub
pusha
ds
cli
and
outsl
dec
and
in
stos
mov
jno
pusha
push
add
idiv
mov
stos
jns
cld
and
jae
jge
add
shlb
sbb
xchg
nop
adc
cmp
sahf
mov
xchg
mov
jecxz
sbb
dec
lods
divb
cmc
and
xor
stos
and
out
sub
nop
lock
js
pop
inc
add
fnstcw
jns
call
leave
dec
shll
inc
ds
xchg
outsl
add
push
push
cmp
stos
xchg
ds
outsl
sbb
arpl
lret
pop
push
in
xor
lea
setp
mov
sbb
insb
lock
ja
sbb
sub
jl
sbb
and
das
pop
int3
gs
dec
lea
jae
xor
fidivrs
loop
mov
push
gs
mov
bound
cld
mov
xor
inc
jecxz
xor
movsl
fcmovnbe
adc
sbb
push
lock
and
pop
mov
sub
xor
insb
scas
and
scas
adc
out
mov
std
jl
ret
lock
sbb
add
and
test
outsb
add
mov
cmp
clc
pop
rol
sbb
movb
andl
xlat
cmpsb
mov
mov
jg
test
push
fnstcw
jp
pop
xchg
outsb
cmp
inc
jmp
movsl
enter
pop
insl
pop
sub
mov
out
aas
cs
scas
outsb
push
xchg
xchg
inc
pushf
cmp
and
scas
sbb
push
and
loop
ds
lcall
mov
sub
pmullw
movsb
shll
inc
pop
jl
cmpsl
mov
pop
mov
mov
mov
js
mov
gs
dec
xor
pop
cmp
mov
scas
ds
or
enter
push
mov
in
pop
mov
sbb
or
clc
push
cmp
sub
xchg
add
xchg
pusha
pop
clc
jle
mov
dec
imul
jg
and
pop
pop
pusha
rcr
jb
xchg
cltd
mov
in
iret
cmp
je
mov
xchg
or
push
cld
clc
push
jecxz
jo
add
outsb
push
pop
out
leave
aas
sbb
jl
push
in
shlb
in
jp
xchg
mov
repz
fs
push
bound
xchg
sub
jnp
dec
push
daa
mov
lcall
inc
xor
mov
aad
inc
sub
adc
ret
cwtl
push
mov
dec
add
imul
mov
in
bound
mov
add
mov
repnz
lods
orl
mov
jl
mov
sti
add
insb
fwait
ss
mov
adc
sbb
cld
call
test
aas
pop
cmp
sbb
repnz
push
push
call
jnp
mov
add
cmp
mov
xlat
orb
jl
rorb
addr16
pop
mov
sub
push
inc
push
and
adcb
mov
adc
cs
test
cmp
outsl
fwait
popl
lea
xchg
mov
outsl
leave
data16
pusha
push
ret
or
iret
xor
int3
dec
mov
insl
adc
mov
in
cmp
add
scas
mov
repnz
cmp
mov
ds
fs
icebp
in
ss
into
and
sbb
cmpsb
stos
and
aad
pop
sarl
out
mov
xor
xchg
scas
pop
ret
pop
in
dec
mov
sbb
or
fscale
inc
rolb
mov
mov
mov
mov
push
dec
call
or
cmpsb
xchg
jg
pop
shrb
inc
cmpsl
clc
sub
pop
add
adc
ds
push
addl
and
xchg
mov
adc
bound
jno
aas
fildll
jecxz
xchg
and
test
adc
ljmp
in
cmp
out
scas
sub
pop
mull
test
outsl
and
cmp
inc
push
inc
rcl
arpl
iret
insl
int
add
sbb
outsb
subl
and
pop
adcl
mov
ja
hlt
in
rcrl
jecxz
xchg
ret
lret
mov
adc
push
jne
mov
sub
jl
jmp
lret
mov
cmp
movsb
cmp
fbstp
cmp
in
loopne
iret
popf
mov
dec
cmp
mov
jb
push
icebp
push
cmp
mov
notb
dec
jne
add
js
mov
lea
das
add
pop
cmp
or
fldt
aad
adc
cmc
sbb
imul
mov
push
pop
push
inc
jb
add
cmp
lea
add
in
arpl
inc
inc
rcrl
dec
mov
cltd
and
jle
negb
ds
loopne
adc
loopne
bound
movsl
adc
js
pop
jp
adc
fcomps
repz
mov
or
push
mov
in
adcl
inc
xchg
nop
testl
xchg
cld
adc
popa
and
mov
xchg
inc
adc
mov
sarl
ss
push
mov
stos
ja
cmp
xchg
testl
out
ficomps
push
iret
fimuls
mov
xor
cld
inc
leave
stc
sub
xchg
ret
mov
xor
mov
jbe
adc
scas
cmp
jge
mov
pop
xor
or
fs
out
aam
and
pop
in
pop
loopne
cmpsl
cmc
adc
sub
jo
mov
arpl
mov
out
mov
dec
mov
sbb
std
or
cmc
in
jge
testb
inc
jge
push
mov
add
xor
xor
pop
notl
xor
pop
js
mov
scas
mov
dec
jmp
out
pushf
repz
cmp
and
shrl
dec
dec
sarb
daa
mov
inc
push
push
pop
into
dec
movsb
stos
mov
sub
jae
inc
lea
pop
or
dec
lds
xchg
jmp
into
push
cmpsl
mov
sbb
mov
mov
sub
add
rorl
icebp
es
movsb
lea
sub
fnstenv
push
ljmp
xor
jne
mov
daa
mov
repz
adc
xchg
sub
inc
push
mov
adc
loop
push
add
jl
pop
jle
inc
loopne
cmp
test
out
jg
fistl
ljmp
pop
dec
mov
dec
adc
and
mov
add
clc
jp
inc
add
xor
int
cli
push
leave
testl
hlt
xor
jmp
fadds
xchg
je
out
ret
xchg
jno
sbb
xor
idivb
xlat
ret
lds
mov
xor
pushf
sub
loop
int
enter
push
movsl
stos
xor
mov
cwtl
movsl
lods
fdivrs
or
mov
dec
add
dec
aas
inc
xchg
inc
rolb
fiaddl
dec
add
xchg
adc
dec
mov
and
dec
sub
adc
mov
les
outsb
xor
fidivs
push
push
pop
mov
add
rcr
mov
rcrl
orl
xchg
shlb
ret
push
je
xchg
add
push
int3
xor
or
mov
lahf
inc
fucomi
aas
cmp
or
xor
push
js
and
adc
xchg
push
jno
and
gs
jb
jne
loop
sub
shr
gs
dec
lret
jb
js
cmp
adc
sbb
lods
push
push
ds
int3
insl
dec
push
test
mov
out
jle
cld
fisttpl
cmp
xchg
xor
je
lcall
mov
imul
and
lcall
push
jmp
addr16
sbb
xchg
sbb
ljmp
pushf
int
inc
mov
pop
cmp
icebp
leave
sarb
leave
mov
xchg
fstps
cmp
arpl
imul
inc
jns
outsb
fs
gs
pop
std
or
movsl
addr16
sub
and
clc
loop
add
jo
clc
mov
push
lahf
mov
sbb
jb
push
icebp
sub
arpl
sub
lcall
and
aaa
cmpsl
and
push
jge
int3
cltd
or
shl
pusha
jbe
or
stos
jae
adc
popa
test
je
fnstsw
xor
cmp
call
lret
scas
lock
sub
dec
call
in
sti
adc
jl
lods
aas
lds
insl
andl
mov
out
lea
add
or
and
and
daa
call
sub
dec
inc
xorl
test
sub
in
in
xchg
rcll
mov
jg
sbb
push
mov
adc
inc
push
sub
xchg
call
inc
cltd
call
pop
mov
xchg
dec
out
shlb
fdivrs
lock
test
gs
mov
and
or
sub
xor
pop
or
or
hlt
mov
leave
jle
arpl
jns
jns
repz
sbb
or
inc
ja
push
mov
cmpl
cwtl
fwait
dec
or
cmc
xchg
test
imul
mov
into
fistpl
repz
test
lea
push
pop
dec
sahf
inc
push
add
aam
das
sti
xchg
into
push
cmp
sub
rol
je
shl
test
mov
xor
push
shrb
aam
insb
adc
jae
lret
xchg
clc
push
pop
icebp
popa
pop
sub
clc
push
loopne
addr16
dec
cmp
inc
xor
std
push
jb
adc
sub
sbb
mov
aam
int3
out
int
inc
repnz
rclb
xchg
mov
loope
inc
fldl
sbb
fwait
in
add
adc
roll
and
jmp
and
daa
popa
js
ja
sub
mov
in
andl
cwtl
and
clc
dec
jecxz
test
sub
xchg
setne
sbb
out
jae
cmp
inc
cmpsb
mov
daa
addr16
adc
jnp
adc
pop
mov
es
xor
test
popf
mov
xor
cltd
testb
push
push
or
adc
cwtl
inc
push
xchg
push
sahf
fimuls
mov
add
push
push
pop
push
or
sbb
sub
and
popf
aaa
fiaddl
adc
les
leave
mulb
push
jns
dec
push
xchg
pop
xorl
repnz
xchg
sbb
aad
xchg
jp
repz
shlb
cmp
hlt
mov
inc
pusha
cmp
sbb
enter
mov
ds
cmp
xchg
cmp
test
sahf
sub
movsl
aaa
stos
pushl
pop
andb
jae
and
fnstsw
loope
lret
iret
les
and
xor
or
and
gs
mov
add
test
xor
out
andl
aam
and
xchg
or
sub
pop
inc
pop
mov
or
fdiv
mov
hlt
cwtl
pop
push
adc
out
iret
pop
stos
shlb
shr
lock
outsl
movsb
push
aaa
das
sub
sub
roll
jno
shll
das
sbb
enter
or
jg
loope
je
push
lea
push
fninit
insb
ds
filds
inc
cmpsb
xor
ds
gs
mov
add
xchg
call
xchg
pop
cmp
push
insb
pop
mov
arpl
cmp
stos
pop
cmp
add
clc
mulb
xchg
test
sub
les
lcall
cmp
mov
add
inc
imul
mov
pop
xlat
xor
adc
divl
or
and
fidivrl
dec
les
sahf
fists
movsb
inc
repnz
or
cmpsb
cmp
aas
jp
rorl
in
out
sbb
nop
sbb
aam
xchg
imul
int
mov
arpl
pop
divl
call
sbb
mov
mov
cmovo
adc
insl
push
das
inc
push
jne
lea
push
into
mov
sbb
xor
fmul
xchg
xor
pusha
lahf
sub
add
popf
add
xchg
stc
pop
loope
sahf
mov
mov
loopne
rcl
ret
movl
add
or
loop
repnz
call
mov
in
xor
in
popf
xchg
es
sub
mov
inc
adc
or
push
ficompl
loopne
mov
hlt
push
lea
insb
mov
mov
cltd
lret
dec
aas
ret
dec
xor
sub
and
ret
or
jle
je
add
outsl
jg
out
mov
aas
push
data16
lock
sti
in
div
outsb
gs
pop
adc
js
movsb
outsb
int3
jecxz
mov
jnp
xchg
mov
int3
xchg
push
and
push
sub
lahf
popf
jmp
mov
outsl
es
adc
out
sub
cltd
lcall
mov
test
pusha
push
lods
push
sub
stos
call
in
mov
sbb
test
loopne
insl
sub
sub
cmp
and
in
jne
imul
xchg
mov
jo
mov
shl
adc
data16
lea
jp
test
ds
xor
and
xor
sti
test
cmp
jb
lea
inc
pop
shll
ficomps
mov
lret
shll
popf
lret
daa
lahf
push
sarb
ss
mov
leave
movsb
adc
mov
jge
push
mov
in
sbb
and
dec
pop
in
mov
ret
sub
out
fistpll
pop
pop
dec
mov
inc
fnstenv
in
xchg
mov
push
jae
jne
sti
insl
stos
add
cmp
mov
dec
cmpsb
dec
lock
mov
xchg
adc
inc
mov
push
cltd
idivl
pop
mov
mov
sbb
inc
adc
inc
rorb
pop
push
cmp
inc
stos
or
mov
shll
insb
xchg
js
int3
lahf
push
adc
ljmp
scas
cmp
and
shrl
hlt
faddl
push
fidivrs
pushf
push
mov
js
popa
xor
jge
cwtl
outsb
sub
mov
mov
sub
jge
xor
shlb
sub
dec
add
das
fs
lds
loop
arpl
in
sub
sbb
cmp
jg
ss
inc
dec
push
jo
jl
fadd
cs
sbb
loope
jno
add
cltd
pop
movsl
popa
cmc
es
and
adc
test
jmp
inc
sbb
movsb
fnstsw
mov
jae
pop
imul
sub
adc
sti
out
push
dec
lods
negl
imul
mov
sub
popa
aad
lock
ljmp
cmpb
pop
mov
xchg
es
mov
add
inc
aas
mov
mov
mov
cmp
jmp
xchg
adc
andb
mov
and
mov
push
push
xor
cmc
bound
dec
mov
nop
jns
inc
in
mov
pop
adc
ret
das
cltd
add
nop
push
add
in
push
outsb
sbb
xor
clc
jg
shl
inc
in
pop
or
es
or
movsb
aam
loop
call
push
mov
rorb
inc
sbb
xchg
cmc
push
daa
loopne
sub
cltd
inc
loop
aas
dec
and
jae
adc
push
test
mov
sbb
jmp
leave
mov
xchg
int3
fiaddl
pop
sarb
and
ss
dec
std
das
bound
gs
or
sbb
mov
jg
addr16
push
add
and
test
ds
push
into
push
adc
adc
mov
invd
mov
fstl
ret
inc
dec
xlat
fcmovne
cmp
jge
leave
mov
sbb
xor
gs
or
fs
jne
pop
jns
sbb
and
xchg
cmp
adc
xchg
cs
xor
add
int
push
or
shlb
das
stc
dec
pop
cmovae
aam
in
sbb
sbb
stos
cmp
lock
cmc
sub
xorb
pop
adc
movsl
inc
push
es
mov
jb
jne
movb
lock
or
pop
mov
jno
iret
fst
adc
push
sub
mov
sbbb
pop
addb
push
cwtl
orl
xchg
sbb
xor
push
imul
rorb
xchg
mov
movsb
and
inc
pop
pusha
into
icebp
js
pop
iret
ja
cmp
jb
nop
sub
jg
sbbb
cmp
xchg
jnp
icebp
adc
mov
sub
mov
sub
add
sbb
xchg
pminub
insl
out
sbb
adcl
mov
xchg
or
fbld
ret
in
xlat
pop
add
aas
int
adc
imul
or
sub
sub
out
loope
cmp
imul
push
mov
cmpsl
jns
cmp
pop
pusha
mov
stos
jns
stos
shll
sbb
cwtl
mov
cmpsb
repnz
or
sbb
and
bound
repnz
testl
inc
inc
lods
add
dec
repz
cmp
fcomip
daa
shll
es
out
lods
adcl
add
imul
cmc
sbb
std
lds
mov
call
mov
add
add
dec
filds
jo
lret
or
lock
push
jno
xchg
dec
int3
cmp
popa
xchg
out
add
dec
cwtl
ja
mov
jo
dec
add
icebp
sbb
cmpsb
lahf
fs
fdivrs
dec
aas
nop
pop
test
mov
dec
int
xor
sub
sub
test
in
ret
sub
adc
jle
sbb
push
mov
inc
mov
push
loop
adc
and
and
insl
push
adc
mov
stos
mov
fcomip
ficomps
mov
xor
mov
adc
and
cmp
xlat
xor
adc
repz
add
push
sub
andb
loopw
or
cmc
push
notb
mov
mov
push
cmc
pop
cmp
push
xchg
cli
repnz
push
xor
aaa
pop
iret
and
adc
rorl
cmp
popf
mov
lret
rclb
ret
jg
xor
rclb
pop
clc
ret
jmp
xchg
icebp
sub
mov
movb
test
in
xor
mov
dec
cmp
cli
mov
dec
sub
arpl
xchg
stos
xchg
push
inc
mov
inc
std
loop
mov
out
xor
adc
mov
out
aas
inc
xchg
jle
dec
into
cltd
faddl
sbb
xchg
dec
mov
fwait
stos
insb
movsb
add
mov
push
rcrl
mov
in
xor
shll
js
jo
dec
fisubs
fwait
ja
sbb
mov
dec
mov
lahf
or
test
inc
enter
lcall
push
xchg
into
or
testb
jbe
inc
push
dec
mov
xchg
test
sub
lret
sub
movsl
mov
mov
lds
jmp
mov
fistpll
ds
push
mov
out
mov
pop
ret
mov
add
stos
dec
ds
mov
shll
icebp
sbb
and
mov
pushf
pop
mov
cli
sti
mov
push
out
dec
mov
andb
aas
ja
pop
icebp
mov
fcomp
inc
pusha
fs
das
pop
pushf
cmp
cmp
mov
lcall
push
jne
cwtl
lock
inc
push
sub
addr16
loop
in
daa
pop
movsb
lods
xchg
push
cmp
xor
jno
dec
div
mov
mov
xchg
push
test
mov
jae
ds
dec
out
stc
lcall
adc
mov
repnz
popl
mov
mov
fcompl
mov
and
push
cmp
imul
and
dec
pop
mov
jnp
pop
test
jae
sbb
negl
pop
mov
xchg
mov
imull
pop
jecxz
sbbb
test
mov
jge
int
and
jo
or
sti
mov
pop
movsb
outsl
insl
movntps
pop
add
scas
xor
dec
decl
sub
fistpll
push
in
pop
jo
xlat
pop
js
push
push
xchg
repz
fs
int3
cmp
aad
adc
movsb
push
icebp
or
daa
mov
clc
fdivrs
mov
repz
adc
inc
aaa
fidivrl
and
nop
mov
cmp
pop
sbb
insb
mov
xchg
fildl
fcompl
int
sub
pop
loopne
mov
mov
in
push
xlat
fldlg2
shlb
cmp
fmuls
hlt
cmpsl
xor
ds
loope
and
shl
pop
int
mov
cmp
stos
cld
sbb
push
sbb
aas
negb
and
repz
outsl
cmp
scas
iret
call
inc
fwait
mov
mov
sti
clc
test
stc
cmp
add
jge
sbb
adc
orb
outsb
pop
mov
mov
test
popa
lret
mov
popa
rol
inc
loope
xor
lret
test
or
mov
dec
sbb
cmpsb
adc
push
shll
xor
dec
pop
xchg
sub
mov
lahf
repz
pop
in
dec
adc
lret
jo
out
fisttps
jecxz
sub
and
mov
cmp
xor
inc
push
test
out
aas
pop
or
cmpsl
mov
inc
adc
mov
pop
arpl
das
inc
psrld
data16
push
inc
mov
sub
leave
lock
fs
cli
mov
rcll
mov
sub
push
inc
dec
sbbb
xor
jg
movsl
ja
jae
dec
xor
adc
shll
mov
pop
ja
pop
ret
and
loopne
push
inc
fsubl
mov
adc
scas
repz
inc
mov
fbstp
jno
adc
test
cmp
jg
mov
pop
dec
push
push
test
inc
fcompl
mov
push
fsubrl
sbb
xchg
ja
or
jge
call
cltd
stos
and
mov
arpl
mov
imul
clc
xchg
adcl
cld
cmp
push
sbb
push
sbb
int
xchg
lcall
push
imulb
push
adc
cmc
add
es
aad
inc
movsl
mov
adc
jne
adc
mov
xchg
sti
and
push
iret
into
movb
xorl
inc
dec
jbe
mov
lahf
cld
fldl
mov
jmp
nop
leave
sbb
cmp
fdivrs
out
popf
mov
dec
je
or
lods
xchg
dec
repnz
adc
mov
out
jnp
cmp
and
rclb
dec
lods
ret
ja
cld
adc
adc
psubq
cmpsl
hlt
add
jp
adc
cmp
inc
pop
enter
or
sub
push
ljmp
inc
jg
enter
mov
dec
sub
adc
aas
xor
xor
enter
jbe
cltd
pop
inc
ds
in
inc
mov
sbb
xor
popa
addl
mov
ffreep
pop
add
ljmp
or
dec
jecxz
adc
cwtl
add
jmp
inc
xchg
fidivrl
repz
mov
out
call
arpl
adc
fimuls
mov
movsl
jge
in
pop
sub
push
pushf
jae
leave
push
mov
pop
stc
mov
icebp
xor
push
stc
adc
pop
outsb
les
sub
mov
and
jno
xor
dec
mov
ret
shl
inc
push
pop
push
jnp
nop
sbb
xchg
adc
cltd
xchg
sub
or
jno
xchg
cltd
mov
inc
push
in
mov
jno
fcoms
call
cmp
fbstp
insb
mov
stos
shl
add
nop
sub
repnz
add
xor
movsl
sub
rolb
add
dec
mov
pusha
jne
and
sub
pop
out
jnp
xchg
or
gs
sbb
cwtl
dec
rolb
daa
xor
add
pop
shrb
leave
inc
stos
mov
in
jmp
and
fsubrp
push
sbb
cmp
cmpsb
xor
lahf
sbb
lock
xchg
pop
icebp
dec
inc
test
sti
cmc
rorl
arpl
xor
adc
push
aaa
mov
mov
enter
dec
das
ss
pop
mov
or
lock
mov
jns
add
test
mov
imul
pop
push
nopl
repnz
pop
loopne
xor
push
inc
push
sbb
shll
aaa
push
ficomps
mov
movsl
test
xor
and
in
mov
dec
ficoml
movsb
arpl
mov
jbe
adc
test
sbb
adc
les
mov
subb
xor
mov
in
mov
repz
dec
inc
mov
cmp
pop
jns
jns
sbb
adc
jg
sbb
mov
mov
jno
movl
cwtl
clc
dec
xor
notl
sub
outsl
inc
sbb
rorl
push
sbb
jle
lods
aad
fstl
jae
inc
lcall
pop
mov
lahf
lcall
xchg
aam
sub
ljmp
inc
vmovss
jbe
fdivr
cmp
add
fsts
dec
cmp
sub
and
mov
pop
jb
mov
and
outsb
rol
xchg
jp
int3
enter
or
jb
cs
mov
pop
lret
mov
dec
mov
popa
cwtl
jg
test
or
lret
lcall
std
push
or
fists
leave
xchg
inc
stos
xor
fsubp
or
sbb
or
push
mov
shlb
mov
xchg
das
jl
add
adc
imul
das
mov
aad
add
cli
popa
dec
mov
xlat
mov
dec
sarl
cmp
in
mov
scas
push
imul
shrl
lret
jg
lds
xchg
dec
inc
aad
mov
in
subl
das
bound
and
inc
adc
lahf
jo
jbe
or
ja
icebp
pop
jne
push
ljmp
push
jmp
xor
bound
adc
fdivp
inc
and
cmp
in
into
dec
fnsave
xor
lea
pop
repz
or
xchg
aam
sbb
das
xchg
pop
push
lcall
or
sub
call
xchg
mov
jle
mov
ret
sahf
mov
insl
xor
mov
dec
xor
inc
call
test
xchg
adc
leave
insb
enter
adc
sub
inc
inc
jb
dec
jbe
jns
add
cmpsl
push
sub
xchg
xchg
fwait
adcb
das
cmpb
and
xlat
mov
stos
inc
fwait
dec
jno
imul
mov
js
sahf
in
lods
add
lcall
into
lret
xor
sub
outsl
or
xchg
mov
mov
xchg
scas
cmova
push
dec
in
repz
ljmp
and
push
mov
loop
push
loop
in
es
rolb
movl
shrb
sysret
es
cmp
sbb
in
and
shlb
xchg
mov
xchg
and
xor
jg
cmp
lea
jl
lods
sahf
mov
adc
pusha
cwtl
jp
mov
pusha
test
loope
jae
jp
adc
rcrb
sbb
cmp
popa
jp
lock
iret
sti
inc
sub
lret
and
ret
std
push
daa
and
ja
jp
push
mov
sbb
outsl
loopne
aas
into
xor
cmpsl
jmp
test
std
lret
mov
pop
daa
out
test
xlat
mov
into
xor
jbe
jecxz
aaa
inc
hlt
or
dec
jbe
mov
into
sbb
inc
pop
mov
push
test
pusha
dec
mov
add
arpl
imul
xchg
mov
mov
sbb
inc
cmp
adc
pop
call
inc
mov
popa
cmp
add
and
xchg
xchg
or
jbe
not
sti
out
out
imul
xchg
mov
addr16
je
sub
adc
add
dec
out
xor
inc
adc
jecxz
fisubrs
dec
cmp
mov
stos
iret
fcomps
sti
push
push
movsb
pop
repnz
xlat
add
push
loope
test
mov
inc
mov
inc
in
sub
shll
rclb
outsb
call
mull
inc
mov
mov
mov
pop
mov
loop
mov
inc
cmp
scas
ficomps
out
jae
addr16
xchg
roll
mov
je
and
jno
into
cmpsl
fldl
add
and
push
loope
add
push
cs
inc
xor
repz
cltd
adc
call
push
adc
mov
inc
lahf
cmp
cmp
and
fcomi
adc
in
inc
fisttps
inc
xorl
imul
out
dec
ss
idiv
mov
inc
outsb
leave
pop
mov
push
ret
dec
lret
jle
mov
int
or
pop
int
hlt
sbb
sub
pop
adc
mov
cmp
dec
push
xchg
cld
sub
xchg
jmp
fcmovb
xchg
add
pushf
dec
dec
loopne
mov
rcl
pop
push
adc
popa
adc
pusha
ret
adc
ror
arpl
mov
dec
mov
lret
in
int3
filds
out
jg
mov
orb
out
inc
pop
dec
scas
loopne
add
jb
mov
icebp
cmp
adc
lahf
insb
mov
mov
scas
jmp
jae
lods
adc
out
fiadds
rol
push
icebp
repz
or
pushf
sahf
dec
jne
jnp
push
sbb
aam
mov
adc
jmp
arpl
mov
out
adc
adc
push
or
pop
inc
leave
leave
xchg
out
rcrl
xchg
push
sub
inc
mov
adc
push
test
add
stc
jne
jb
jecxz
jl
fidivs
jle
add
les
ficoms
mov
sub
jl
test
je
and
std
dec
lret
sub
push
mov
push
sbb
pop
cmpl
push
out
ss
mov
outsb
stos
mov
or
sysexit
xor
fstpt
adc
pop
jo
pop
ss
cmc
or
data16
dec
mov
insl
sub
ss
push
in
xchg
fwait
loopne
fcoms
ret
inc
rorl
adc
adc
push
cli
xor
js
movsl
subl
push
jmp
sbb
add
fdivrs
flds
ret
pop
push
lahf
rcl
push
ljmp
mov
pushf
pop
inc
jl
jge
mov
cmc
adc
out
or
das
pop
mov
pop
lcall
adc
cmp
adc
loope
mov
test
sbb
test
call
xchg
push
mul
test
xor
icebp
movsb
push
sub
add
and
push
dec
xchg
enter
xchg
sbb
xor
stos
and
cld
sub
out
jno
dec
mov
adc
mov
bound
mov
mulb
mov
or
pop
push
ds
jg
cmc
lret
pop
sti
test
mov
in
into
or
jbe
stc
push
cld
xor
insl
push
cmp
inc
jg
rcrb
adc
pushf
push
in
xchg
cli
pop
aas
xlat
push
xchg
sahf
lcall
xor
fwait
jne
or
fisubs
rolb
or
push
cld
imul
shll
jbe
imul
and
in
repz
shl
js
dec
cmp
push
mov
sub
out
add
jae
inc
mov
nop
pop
cli
cmp
mov
sub
dec
test
sub
ffree
movsb
xor
fistpll
push
cmp
hlt
in
dec
fcom
mov
sti
inc
mov
push
mov
cmp
hlt
pop
ret
lret
mov
shlb
cwtl
out
fsts
sbb
pop
subl
ret
pop
shlb
ljmp
js
leave
pop
pushf
test
xchg
jne
js
dec
or
rcr
hlt
or
int3
or
sub
push
ret
xor
xorb
punpckhwd
adc
pop
gs
cmpsb
mov
call
dec
xchg
lret
insb
je
fcomps
int
scas
test
fcompl
mov
je
aas
in
test
and
jmp
inc
loopne
rorl
imul
insb
outsb
sbb
xor
and
das
iret
out
add
popf
into
add
push
sbb
fstpl
inc
mov
dec
adc
adc
adc
inc
lret
out
or
and
movsl
dec
in
xchg
ljmp
fldenv
mov
testb
and
push
add
mov
outsl
in
xchg
fisubrs
xchg
cmc
jo
and
ja
mov
fwait
cmp
sub
jnp
adc
pop
xor
jmp
jbe
pop
shr
sarb
int3
ljmp
and
xor
loop
negl
sbb
xchg
in
in
push
or
insb
pop
daa
jb
lahf
pop
pop
ficomps
dec
test
xchg
or
add
outsb
jo
xor
sbb
cmp
push
scas
stos
jl
pop
pop
idivl
lahf
xchg
loop
cmp
and
jg
adc
xor
jns,pt
jecxz
push
inc
out
jle
ret
shlb
cmp
cmp
inc
cs
repz
or
xor
xchg
xchg
xchg
dec
scas
fisttpll
arpl
jmp
mov
cmc
mov
out
rcrl
pop
jno
sub
inc
ja
mov
sub
push
sub
fsincos
mov
or
dec
inc
andb
sub
pop
push
movsl
cltd
repz
test
jmp
cltd
cmp
inc
aam
fbld
xlat
fistpll
adc
mov
leave
ljmp
sbb
loopne
hlt
push
adc
pop
cltd
jp
sub
or
cmc
xor
dec
out
pop
and
sahf
cmovae
aaa
adc
push
pop
xor
ja
mov
pushf
dec
ljmp
jne
xor
or
outsl
jns
lahf
push
mov
out
jge
mov
sbb
or
mov
imul
or
dec
add
mov
push
mov
adc
adc
pop
fstps
dec
sar
stos
data16
cli
popa
popa
mov
lock
jmp
sub
mov
jle
and
rclb
div
movsl
fwait
pop
fldt
push
loop
adc
xchg
mov
outsb
mov
clc
jb
xor
movsb
loopne
mov
data16
sbb
mov
push
pop
ja
and
ret
aaa
mov
lods
xchg
xor
fsubl
shr
inc
fistpl
mov
xchg
adc
and
fcom
cmp
adcb
mov
xorl
push
test
push
and
mov
data16
les
mov
ret
loopne
mov
pop
incl
imull
ds
lcall
mov
repnz
xchg
cld
jo
sbb
fwait
mov
mov
out
adc
test
jbe
jmp
adc
arpl
or
xor
inc
adc
jnp
mov
rorb
mov
xor
nop
push
sbb
or
movsl
mov
scas
inc
xchg
int3
popf
lods
and
sbb
cmpsl
mov
stos
jo
in
fs
xchg
or
gs
shlb
or
jecxz
push
out
lret
int3
fs
fcompl
test
push
sub
sbb
insl
mov
mov
pop
jns
adcb
dec
adc
mov
or
in
fldcw
inc
jg
mov
dec
dec
bound
jnp
aaa
stos
dec
mov
inc
xchg
xor
sbb
jecxz
aad
std
dec
adc
test
divb
mov
jg
add
push
mov
sub
mov
je
fs
mov
imul
sub
cltd
aad
les
and
adc
insl
xchg
xor
jb
xlat
imul
fs
dec
pop
add
cltd
addr16
inc
inc
sub
mov
lods
xlat
insl
out
cmpsl
lret
cmc
push
rol
out
xchg
aam
ffree
addr16
arpl
insl
enter
adc
add
movsl
gs
xlat
pop
push
notl
imul
pushf
das
inc
xchg
mov
rolb
mov
sbb
xchg
das
jle
sub
rcll
ret
mov
out
mov
adc
mov
fisubrl
rol
push
mov
mov
mov
add
testl
das
test
push
pop
sbb
sub
pop
and
lret
adc
jae
sub
into
aas
sbb
sbb
shr
imul
stc
jb
pusha
into
notl
mov
clc
mov
adc
sub
push
jnp
fsubl
xor
dec
cmc
inc
push
sbb
dec
clc
aad
adc
xor
dec
mov
sub
mov
mov
pop
add
inc
mov
pop
addb
sbbl
cmp
std
xchg
ljmp
push
insb
xchg
into
mov
adcb
sub
fs
jb
sub
push
adc
xchg
pop
mov
insb
sti
repz
ficoml
xlat
mov
rolb
push
les
ss
cmpl
push
xor
cmp
sub
cwtl
test
fs
jns
ret
lds
sub
or
lock
xchg
or
dec
adc
inc
das
dec
mov
addl
and
xor
pop
in
hlt
jnp
arpl
xchg
xor
push
inc
scas
enter
push
cmpsl
sub
push
xor
sub
repz
aam
ss
mov
dec
popf
cmp
xchg
test
pushf
or
das
fsts
push
xchg
sub
inc
gs
lods
sub
roll
mov
xor
imul
cld
ja
xchg
das
xrelease
adcb
pop
int3
lahf
xor
adc
pop
mov
scas
inc
mov
xchg
inc
xchg
outsl
inc
push
mov
push
inc
jbe
stos
sub
mov
mov
cmp
push
in
jge
adc
mov
fisubl
add
loopne
andb
sbb
xchg
and
mov
lods
push
loop
dec
clc
mov
daa
dec
or
push
arpl
xor
pop
mov
cmp
xor
cli
rcrb
repnz
ja
scas
jns
fldt
aaa
push
icebp
mov
mov
mov
sub
int
rclb
test
dec
imul
pop
in
or
pop
cld
push
xorl
jns
dec
int
jp
shrb
ljmp
mov
mov
shll
xchg
xor
into
mov
mov
test
fiadds
aaa
lock
xor
cltd
inc
pop
pop
sub
mov
jle
xchg
mov
jge
neg
popa
dec
icebp
loopne
xchg
iret
sub
xor
mov
xchg
pop
fwait
sbb
or
out
sbb
mov
pop
lret
and
insb
jmp
push
movsb
xchg
push
mov
scas
jmp
push
mov
xchg
roll
mov
mov
aas
mov
mov
cmp
mov
sbb
lea
push
xchg
lea
xchg
push
icebp
daa
pop
popf
repnz
test
push
mov
inc
mov
popf
inc
fistpll
test
imul
mov
inc
jb
shl
sbb
lock
loop
mov
insb
std
dec
jbe
inc
dec
mov
out
sarb
inc
mov
pop
sub
or
arpl
movsb
adc
adc
push
xchg
es
lock
cmc
mov
push
and
pop
dec
jecxz
dec
fsubl
fbld
cld
mov
adc
ret
jecxz
insb
dec
arpl
dec
mov
add
or
fwait
mov
das
gs
dec
in
cmp
repz
popa
push
jecxz
jno
lahf
repz
push
jne
clc
cmp
addr16
sysexit
es
adc
or
fisubs
int
stos
das
mov
test
sbb
stos
mov
jp
dec
or
jmp
inc
jb
push
push
cltd
inc
test
push
inc
pop
int
mov
xlat
cmc
push
xchg
xlat
pop
fiadds
loop
xchg
scas
in
push
mov
int3
inc
ret
cmp
jno
setb
jnp
shlb
test
xchg
xor
cli
lret
imul
scas
xor
loope
jae
xlat
test
mov
into
pushf
lcall
pop
add
or
aaa
shll
aas
dec
push
lret
test
push
sarb
add
adc
xchg
xchg
movl
rcl
mov
sub
sub
loop
sub
xchg
jnp
inc
rolb
hlt
and
insl
js
xchg
ss
push
leave
dec
jecxz
pop
shrb
jno
cmpsl
bnd
rcrb
cwtl
push
fnstcw
and
stos
std
dec
dec
movsb
pusha
leave
push
xor
out
arpl
enter
push
mov
outsb
aam
lea
push
fcoms
xor
mov
sub
mov
bound
pcmpgtb
enter
out
cmpsb
sub
sub
stos
and
fcomps
xchg
mov
movsl
xchg
ss
ds
xchg
cmp
stc
outsl
fsub
dec
ds
fadds
mov
pop
insl
xchg
mov
push
orl
mov
pop
insl
dec
iret
jo
subb
jae
mov
fwait
dec
out
dec
sti
sub
mov
add
ret
sub
lock
fimull
add
movsl
jae
cmp
xor
shll
push
push
ss
or
pop
jmp
andb
or
into
push
xor
jle
fwait
xchg
or
mov
or
fs
mov
or
add
mov
mov
push
jo
cwtl
xor
inc
sbb
mov
add
ret
mov
jnp
pusha
pop
sbb
dec
enter
xchg
ds
mov
mov
rclb
inc
nop
fstps
push
push
mov
movsb
push
clc
rorl
call
sub
bound
out
loop
sbb
aad
mov
adc
shl
cmp
and
sahf
out
inc
stos
pusha
mov
xchg
pop
inc
push
enter
mov
cli
and
push
movsb
push
call
cmp
addr16
movl
loop
popa
sub
cltd
adc
dec
lret
movsl
testb
lock
push
sub
sahf
mov
shr
jmp
and
mov
in
aam
out
or
sti
push
push
push
dec
in
rclb
sahf
aaa
and
data16
cmp
add
je
xlat
jp
mov
arpl
mov
sbb
mov
rorb
ljmp
add
inc
sbb
cmp
imul
out
imul
mov
pop
test
mov
adc
pop
aam
xchg
ret
mov
cld
xchg
inc
inc
hlt
push
and
in
jo
push
sbb
rcrb
jp
test
and
xchg
xchg
mov
in
pop
push
push
xchg
push
ljmp
aaa
scas
push
movsb
jno
lea
jbe
shlb
loop
sarb
stos
adc
jle
cmpsb
dec
add
cmp
in
push
sub
jo
and
lea
mov
data16
std
mov
daa
or
xchg
mov
push
fadd
enter
sbb
mov
pop
out
outsb
incb
xor
fwait
mov
sti
in
mov
adc
loop
and
push
mov
or
pusha
or
lret
popf
pop
not
shlb
push
andl
and
sub
stos
lods
je
je
mov
mov
rep
xchg
jg
push
mov
out
push
push
cmp
mov
push
hlt
push
xor
jg,pn
lock
sar
cli
inc
cmp
push
sbb
fwait
sarl
mov
shr
cmpb
loope
fildll
push
sub
faddp
outsb
cmp
dec
pop
pop
shr
push
mov
cmp
cmpsb
push
pop
mov
aam
pop
or
push
sub
or
lods
and
dec
gs
aad
into
adc
bound
shll
adc
cmp
in
jge
std
test
ja
scas
mov
inc
icebp
mov
stc
gs
sbb
dec
clc
rclb
inc
cmp
xchg
sbb
in
mov
xchg
jle
or
leave
jg
sbb
mov
pop
daa
outsl
mov
inc
adc
insl
sar
xchg
mov
mov
mov
or
es
cmp
sub
jo
out
adcl
mov
mov
mov
xor
push
mov
inc
pop
dec
test
mov
daa
stc
mov
aad
dec
aad
sti
pop
gs
push
int3
movsl
mov
mov
in
imul
andl
repz
out
test
fwait
out
loopne
fisubrl
mov
into
out
adcb
aad
xchg
daa
lret
sub
inc
xor
push
data16
movsb
movsb
fsubrs
in
movsl
xchg
outsl
mov
mov
aad
nop
and
idivb
adc
ror
push
cmp
cwtl
or
scas
push
jo
cli
pushf
jns
jl
shlb
pop
jns
xchg
or
adc
jl
decb
lret
cmpb
mov
xor
mov
xor
mov
fldt
mov
adc
mov
pop
popl
fs
repz
fwait
cwtl
nop
xchg
das
ror
icebp
js
mov
xchg
adc
inc
and
in
out
pop
pop
jns
mov
imul
dec
add
lcall
cmp
movsl
and
fidivrl
out
popa
pop
insb
mov
mov
push
jle
add
push
push
push
mov
mov
lds
insb
add
rol
mov
pop
hlt
push
mull
pop
cwtl
xchg
pop
pushf
xchg
je
jo
or
bound
hlt
stc
mov
inc
in
pop
into
push
mov
sarb
sbbb
xchg
not
add
das
dec
es
sub
in
mov
or
repnz
adc
inc
cld
imul
daa
xchg
and
jb
ss
fnstsw
test
loopne
and
test
mov
scas
and
lahf
xor
stos
das
outsb
in
into
or
shlb
mov
mov
loop
pop
fistps
arpl
repnz
loopne
adc
loop
pop
popf
pop
sahf
and
inc
mov
push
xchg
ljmp
mov
aad
lds
jo
sub
ror
jle
in
add
push
and
xor
in
xchg
mov
jno
lds
push
das
in
add
imul
adc
dec
add
push
mov
shll
xor
incl
add
sti
aaa
pop
and
popf
cmp
mov
scas
test
cmp
and
dec
ds
adc
lods
mov
push
stos
bound
stos
sti
inc
add
shlb
xchg
cwtl
or
pop
imul
nop
cmp
or
lods
push
mov
inc
push
dec
push
pushw
outsl
in
je
aad
push
sbb
aad
push
lods
rcrb
out
fdivrl
call
mov
or
xorb
shlb
cmp
lahf
xor
rcl
test
add
push
and
mov
int3
clc
neg
ror
call
int3
shrd
push
pop
jbe
addr16
fdivrl
insl
imul
pop
xchg
mov
lods
and
sti
jp
xchg
sbb
pusha
and
add
in
pop
cltd
inc
dec
ljmp
xor
or
xchg
mov
negl
lds
arpl
test
dec
sbb
mov
ja
rcll
mov
xchg
inc
ret
sbb
push
sti
in
js
mull
xor
inc
pop
inc
popf
rorl
hlt
mov
mov
inc
test
repnz
xor
cmc
insl
push
inc
xchg
or
divl
test
pop
aas
or
and
nop
push
mov
jl
cmp
push
into
xchg
lods
xor
call
jmp
pusha
add
and
addb
shll
or
cwtl
mov
imul
xor
adc
ljmp
pop
push
pop
fisubrl
push
in
sbb
out
xchg
mov
movsl
sti
xor
and
daa
sbb
cmp
or
fs
enter
pop
pop
push
shll
dec
xor
xchg
push
insl
imul
fldt
jmp
pop
pusha
popf
pop
xor
imul
mov
mov
and
adc
insl
loop
and
sub
clc
outsb
pushf
je
mov
sbb
mov
out
dec
mov
int3
out
push
push
out
and
in
stos
adc
sbb
mov
push
nop
inc
cmp
cmp
adcl
mov
fistpll
adc
or
cvttps2pi
popa
je
dec
inc
mov
mov
add
xor
mov
lcall
ja
jl
pop
dec
pop
ds
ds
aaa
filds
adcl
push
stc
mov
cs
xor
cmp
jp
jno
scas
xchg
fs
dec
js
out
roll
int
pop
cmp
mov
xchg
mov
and
add
add
push
lea
imul
pushf
sub
mov
dec
cmp
jle
inc
inc
pop
jle
adc
push
out
lock
jle
xchg
fmuls
std
sub
adc
scas
icebp
imul
xlat
or
fucomi
sub
lret
outsb
xor
xor
dec
jg
adc
fisubl
adc
cmc
push
add
push
les
pop
sub
test
inc
jecxz
mov
jns
fcmovnu
mov
roll
cmpsl
mov
aam
push
dec
shr
add
mov
test
sub
push
dec
add
add
das
lock
push
js
or
mov
cmp
pop
cld
dec
je
mov
mov
push
jge
sub
mov
mov
lds
pop
es
dec
sub
mov
sbb
add
mov
daa
xlat
or
fdivrl
addr16
mov
and
lds
cbtw
pop
fdivl
dec
dec
cmp
bound
sbb
gs
mov
cs
lods
xchg
mov
mov
lret
xor
sbb
neg
js
insb
dec
mov
xlat
xchg
test
test
cs
int3
push
mov
lods
mov
push
test
or
push
sub
jnp
pushf
fldcw
inc
jecxz
lods
dec
cld
orb
ret
mov
inc
mov
test
clc
push
popf
aas
shlb
mov
inc
imul
pop
push
loope
sti
or
nop
push
lcall
or
mov
adc
xor
fisubs
testl
fyl2x
inc
test
decl
sub
ja
pop
mov
sub
and
and
sbb
shll
popf
int3
sbb
repz
rcll
mov
mov
movsl
mov
adc
jb
pop
inc
jns
jecxz
inc
add
arpl
push
and
adc
jle
mov
mov
adcb
sub
cmp
sub
lret
cld
add
cwtl
aad
pop
cli
lock
add
fsubrp
pop
cltd
mov
adc
loopne
lods
fidivrl
lock
or
and
mov
and
cmp
push
sub
push
pop
test
sti
mov
fdivl
push
pop
dec
hlt
sub
pop
rorl
lods
fs
xor
cmpsb
sti
dec
sbb
clc
jns
cmp
lcall
cmpsb
adc
jb
lahf
add
push
xchg
fdivs
mov
ret
icebp
outsl
movsl
sbb
or
fs
vandps
and
repnz
ret
pop
push
and
mov
lret
imul
loopne
imull
add
or
mov
jbe
pushl
js
add
fsubrp
cltd
bound
repz
ret
out
in
push
push
jmp
dec
add
orb
mov
xchg
fidivs
and
negl
sti
adcl
jo
insb
imul
icebp
jae
les
aas
push
mov
movsl
inc
sub
cmc
sti
shll
lret
sbb
ret
in
jae
prefetchwt1
pop
pop
scas
mov
xorb
mov
add
cwtl
inc
sbb
inc
test
mov
sbb
add
std
pop
mov
pop
dec
std
call
jns
xchg
mov
sub
daa
sahf
add
insb
adc
in
rcl
xlat
mov
enter
xchg
fcomi
push
lahf
shr
test
call
adcl
mov
sbbb
sub
add
xorl
rol
push
outsb
mov
scas
pusha
jecxz
fmul
cmp
lcall
fnsave
push
lds
adc
gs
sarl
inc
sub
dec
adc
mov
push
ds
add
push
and
cmp
aad
imul
push
mov
push
inc
hlt
push
cmp
mov
inc
sub
mov
push
shlb
mov
pop
and
mov
in
ret
fisubs
repz
add
jl
pop
push
adc
xor
into
pop
jo
shrb
test
lcall
cmpsl
in
test
out
push
add
ja
shll
divl
pop
adc
mov
testb
mov
popa
in
cmp
mov
sbb
movsl
cmpsl
in
inc
ds
out
lret
push
jbe
xchg
cwtl
leave
addb
inc
dec
jl
push
loope
jmp
sarl
idiv
pop
stos
in
pop
bound
arpl
sub
loop
enter
sahf
movsb
or
movsl
mov
insb
or
sub
outsl
aad
in
scas
sbb
xor
sub
and
adc
cmp
xor
mov
push
pop
mov
xor
push
or
gs
aas
dec
adcl
orl
mov
mov
mov
push
push
sub
loope
test
mov
cmpsl
sbb
ljmp
jmp
in
enter
fwait
pop
jge
bound
xlat
loopne
cmp
mov
mov
pmuludq
jbe
xor
stos
out
inc
test
imul
push
rcrl
cld
repnz
ret
bound
sub
push
sbb
insb
xorl
xchg
mov
scas
jnp
ror
sub
rcr
or
lcall
pusha
jl
cmp
dec
pop
movsl
inc
and
or
sbb
push
daa
cmp
loop
inc
das
ljmp
pushf
out
lea
push
push
rcl
sarl
cmp
mov
leave
xchg
or
int3
dec
cmpsb
adc
ja
cwtl
insl
inc
test
push
out
out
mov
aas
xchg
push
inc
and
push
dec
lahf
or
or
mov
sub
lret
fstps
mov
sub
sbb
push
cs
dec
or
gs
pop
xchg
dec
imul
clc
test
aad
mov
mov
pop
loope
pushl
mov
nop
dec
jne
popa
lods
stos
dec
jmp
movsb
lcall
fisubl
and
mov
cmc
jge
cli
push
or
lock
mov
cwtl
enter
loope
ljmp
mov
xchg
rcrb
mov
dec
hlt
pop
mov
clc
ror
xchg
lahf
divb
clc
fistpll
repnz
lea
cmp
les
test
imull
lret
out
dec
mov
imul
rcrb
jg
cmpsb
fyl2x
movsb
add
mov
enter
jnp
int3
icebp
pop
je
cli
test
aaa
leave
add
rorl
push
mov
loop
or
mov
mov
sub
in
divb
adc
sbb
pop
add
je
call
cmp
and
sti
lock
push
sbb
or
xor
add
in
cmp
lret
xlat
fs
cwtl
and
out
mov
pusha
push
push
fidivl
sbb
mov
push
jmp
jmp
shrb
sbb
mov
daa
cli
cmp
jecxz
inc
out
and
lret
or
push
lock
leave
gs
dec
ret
inc
int3
pop
mov
push
mov
out
mov
push
andl
mov
rolb
aad
and
xchg
mov
test
inc
pop
and
fbld
arpl
nop
dec
dec
test
xchg
add
jae
cmp
iret
jmp
subb
mov
out
sbb
dec
xor
cmc
adc
and
inc
dec
or
repz
lea
iret
xchg
cltd
out
and
mov
fisubrs
testb
out
in
fisttpll
loop
loopne
jecxz
gs
int3
sbb
into
insb
jns
test
mov
sub
mov
sub
sbb
mov
or
fdiv
fs
push
in
xor
sub
cmp
inc
jge
xor
pop
fists
pop
mov
addr16
aad
pop
and
sbb
cmpsb
inc
dec
jo
outsl
bound
sahf
enter
mov
add
rcrb
push
aam
inc
inc
adc
or
mov
pop
add
or
scas
enter
dec
add
decb
js
inc
test
xor
cmp
fldenv
pushf
xchg
scas
rcrb
xchg
test
mov
mov
xlat
mov
in
add
cmp
sbb
fldl
xor
scas
fldt
je
mov
in
test
outsb
adc
sub
clc
cmp
mov
mov
push
lcall
in
sbb
inc
inc
rolb
imulb
inc
jge
ljmp
or
jb
pushf
pop
xor
repnz
adc
ret
iret
jns
or
les
aas
scas
or
sbb
dec
xchg
adc
cwtl
add
or
in
cmp
push
sub
dec
sti
popa
xchg
pop
xchg
adc
add
out
mov
inc
shrb
or
orb
push
jo
into
jge
mov
cmp
adc
insb
iret
into
lds
ja
out
mov
stc
mov
xor
shrd
movsb
sub
jo
xchg
repz
fisubrl
neg
popa
mov
cmp
lods
pop
jnp
jne
and
lahf
in
fildl
xchg
fcmove
xchg
cld
lea
mov
push
mov
cmp
mov
loop
call
cltd
pushf
xchg
in
xor
leave
adc
stos
lods
jne
lds
fcomip
mov
in
js
sub
je
repnz
xor
sub
fcmovne
dec
jnp
or
lods
jge
dec
mov
testl
inc
int3
lret
push
mov
push
out
dec
mov
rcrl
inc
and
mov
adcb
mov
icebp
fwait
adc
pop
xlat
stc
sub
ficoms
pop
push
hlt
jecxz
imul
les
insb
std
movsl
pop
fs
mov
push
ljmp
cmc
sarl
add
mov
lret
sbb
jmp
pop
inc
jb
adc
out
sahf
xchg
dec
sbb
dec
lcall
pop
sub
pop
push
add
ret
dec
ljmp
sub
cli
mov
push
mov
pushf
cltd
repnz
insb
push
xor
cmpsl
pmullw
lods
in
sbb
jbe
dec
jo
fldcw
das
sahf
adc
xchg
adc
leave
mov
in
js
insb
filds
jle
lods
adc
imul
dec
inc
cmpsl
or
jo
test
and
push
jle
bound
jecxz
dec
dec
hlt
lods
repnz
pop
aaa
xchg
jbe
lahf
push
push
lock
push
sub
mov
and
loopne
rorb
sub
jl
xor
sub
imul
movb
movsb
jmp
lcall
daa
mov
add
mov
xchg
pop
jmp
cmp
test
dec
test
aam
xor
xchg
push
mov
call
cmp
mov
ds
fidivl
dec
iret
pop
add
dec
dec
mov
insl
push
mov
test
sti
les
lcall
mov
mov
in
aaa
or
sahf
mov
pushf
mov
cltd
sbb
pop
push
mov
push
pop
iret
xchg
sub
xchg
dec
cld
sub
jno
adc
pop
enter
xor
pop
lds
mov
mov
xchg
in
loopne
mov
push
add
repz
sbb
loopne
mov
cmpsl
inc
jp
mulb
pop
popa
aas
push
sub
jl
add
loopne
jnp
xlat
popa
mov
xor
das
xor
dec
xchg
and
pop
inc
cmp
pusha
push
fistl
mov
fnstenv
jo
add
int
test
shrb
jae
cmp
cmpsb
notb
ja
rcrb
cltd
sbb
mov
dec
pop
xchg
push
mov
inc
lods
rclb
inc
and
xor
push
cs
jns
xchg
fwait
jp
and
push
or
inc
sub
fxam
call
lret
and
ljmp
add
sbb
jbe
push
jo
hlt
cmp
cmp
scas
push
pushf
daa
lds
sarl
repz
jmp
jecxz
mov
aad
test
lock
dec
into
sub
dec
outsb
or
clc
push
ss
flds
fwait
lea
jae
aas
lcall
popf
adc
ja
lods
aam
adc
and
nop
jecxz
ja
pop
cmp
lea
pop
cwtl
or
sahf
mov
xor
xchg
cmpsl
js
xor
and
mov
call
test
mov
inc
shr
fwait
aam
lods
cmp
adc
push
test
xlat
arpl
xchg
pop
sar
push
std
mov
push
xor
out
inc
ds
ss
cmp
mov
test
icebp
fcmovnb
sub
repz
rorb
shll
mov
xchg
cmc
in
xchg
sbb
test
cli
cli
jnp
fstpl
loopne
push
mov
xor
mov
adc
dec
fimull
or
fistpll
jbe
push
dec
arpl
mov
push
jns
sbb
mov
popa
sbb
jecxz
aaa
mov
xor
pusha
xor
in
add
push
and
cwtl
int3
ficoms
das
push
dec
mov
xlat
jl
jmp
into
cmp
push
insb
jno
mov
jae
je
sti
fs
sub
cmp
pop
aaa
adc
rcr
xor
es
xchg
sbb
out
nop
mov
insb
mov
xchg
loopne
scas
or
add
fnstenv
jae
pop
loop
xor
xchg
inc
sbb
iret
mov
or
neg
mov
jmp
add
or
enter
roll
stos
jecxz
push
push
popf
test
arpl
icebp
jmp
cmpsb
sub
mov
sbb
jnp
xchg
rcll
pop
lds
cld
cmp
pop
jg
jle,pn
mov
push
mov
mov
mov
sub
dec
push
shrb
stos
xchg
loope
mov
xor
xor
stos
aaa
rcl
xorl
jp
movsb
cmpb
imul
push
dec
jle
in
ret
cli
lods
aaa
mov
mov
call
dec
fldenv
jl
lods
adc
mov
fstpt
cmp
and
mov
inc
pop
fwait
addr16
xchg
dec
fwait
cmp
pop
call
xlat
gs
mov
inc
and
pop
stc
jns
adc
in
pop
push
xchg
and
sub
jnp
mov
add
clc
das
inc
pop
mov
push
add
shrb
push
push
inc
mov
inc
xchg
imul
mov
cmpsl
imull
mov
inc
test
xchg
fwait
add
mov
lahf
xor
xchg
cmp
inc
and
push
jns
scas
push
xor
push
cmp
cltd
cmp
xlat
mov
nop
xor
xchg
sahf
push
add
cmp
cmpsb
lret
push
scas
test
xor
jb
into
stos
cmpsb
mov
out
push
jge
mov
sub
dec
out
push
dec
jns
jmp
add
dec
or
mov
mov
sub
test
xchg
dec
jno
inc
cmp
cmp
push
mov
mov
dec
inc
dec
cmp
add
sub
ljmp
pushf
out
mov
add
jecxz
pushw
mov
lret
stos
pop
mov
push
scas
lahf
mov
test
xchg
mov
int3
sbb
sub
sbb
in
ds
gs
cwtl
les
outsb
cld
or
xor
outsl
mov
movsb
rclb
xor
pusha
dec
rcl
daa
je
or
jle
or
jb
cmc
add
or
pop
jge
mov
shrb
pop
lods
or
enter
or
xor
loopnew
pop
in
ret
lods
jns
ss
in
xchg
and
repnz
int3
lret
ficoml
mov
imul
xor
cmp
xlat
scas
jne
push
dec
mov
jnp
sub
lds
les
lds
jmp
sub
cmp
cs
xchg
or
mov
cmp
jb
addb
test
in
sar
pop
jns
movsl
outsl
les
fistps
lea
enter
dec
cmc
pop
cmpb
xchg
mov
addr16
mov
mov
push
lcall
subl
hlt
adc
jl
aaa
setg
inc
add
pop
cs
and
mov
scas
es
xchg
vpcomw
out
push
lds
fdivrs
adc
add
aas
cli
xchg
test
adc
mov
mov
movsb
mov
xlat
icebp
pushf
rcrl
pop
ja
stc
aad
sub
push
popf
push
fimuls
loopne
mov
fistpll
mov
xor
mov
in
cli
orb
rorb
cltd
xchg
movsb
push
cmp
call
mov
rcr
jp
sub
jno
jg
imul
fistpl
enter
cmc
add
mov
outsl
imull
movsb
hlt
inc
jae
cmp
inc
mov
inc
xor
in
mov
mov
adc
mov
add
aaa
data16
mov
push
jp
ds
cmpsl
das
insb
and
dec
es
fs
les
ljmp
push
stos
stc
xor
cmp
ret
sbb
sbb
in
sub
push
mov
xchg
shl
push
adc
notb
cli
cmpsb
into
xchg
xor
hlt
mov
jne
sarl
out
mov
push
mov
test
inc
testb
push
cltd
or
jo
icebp
mov
pop
cltd
mov
and
test
xor
pop
mov
out
jo
pop
in
cmc
xor
fistpl
sbb
imull
in
pop
push
cmovg
or
xchg
nop
sub
dec
xorb
jl
xchg
or
repz
mov
imul
loop
push
int
ljmp
lcall
negb
out
sbb
and
rolb
xchg
loop
dec
sbb
and
lods
cli
and
mov
push
adc
add
xor
outsl
aam
fidivrl
addr16
aam
gs
mov
negl
pop
out
sbb
ds
mov
outsl
das
mov
mov
sub
jp
jecxz
adc
fnsave
mov
lahf
pop
aam
cmp
add
pop
push
pop
daa
lock
push
fstl
inc
repz
movsb
stos
xchg
test
jecxz
test
js
movsb
adc
fs
push
test
rol
out
aaa
xor
iret
add
lds
loopne
std
in
lea
in
ret
icebp
mov
push
js
test
loope
in
daa
out
sub
addr16
cmpsb
add
xchg
mov
add
lahf
inc
movsl
jo
jl
mov
adc
add
mov
pop
inc
inc
pop
fstl
adc
push
jg
pmulhw
mov
ret
sbb
mov
mov
sub
or
lea
xchg
into
xchg
jg
out
js
mov
rorl
xor
push
push
or
into
fisubrl
add
outsl
push
test
rcl
insb
js
insb
das
push
dec
loop
aam
or
push
loope
mov
mov
mov
mov
out
xchg
es
xchg
xlat
repnz
je
scas
or
div
xor
or
push
lcall
popa
mov
jg
add
xor
aad
xor
inc
sbb
test
or
in
scas
adc
cmp
inc
push
mov
loopne
mov
call
mov
mov
xlat
movsl
test
gs
jno
pop
shlb
iret
inc
cltd
mov
sub
ljmp
inc
pop
push
aam
inc
insl
jbe
fiaddl
inc
lahf
mov
or
in
cli
xor
push
in
adc
dec
dec
sbb
ss
lret
xchg
and
test
mov
or
out
aad
mov
sub
loope
int
dec
roll
adc
dec
lret
jnp
inc
pop
push
roll
inc
pusha
fs
adc
pop
mov
fcompl
arpl
mov
call
dec
stos
lea
fidivrl
xchg
fwait
adc
mov
mov
push
insb
icebp
xchg
xchg
sub
add
out
push
mov
sbb
jge
rolb
je
jmp
xor
push
and
cmpsl
dec
rcrb
sub
fs
daa
mov
xchg
inc
mov
in
xchg
xchg
rcrb
jb
ljmp
addl
ds
cmpb
lret
fdivs
rorb
mov
push
popa
dec
mov
pcmpeqb
vcvtpd2ps
push
lods
lcall
mov
push
cmp
mov
in
clc
pop
xor
xchg
repnz
sarl
das
pop
mov
in
push
test
scas
inc
jo
ret
icebp
or
xlat
mov
sar
pop
fnstcw
pop
fsubs
mov
xorl
mov
mov
in
sahf
add
cld
mov
stos
je
mov
imul
jno
cmpsl
pop
lock
push
pop
sub
fptan
jp
repz
pop
ljmp
mov
xlat
or
cmp
scas
and
xchg
and
or
mov
shrb
adc
cld
push
xchg
mov
and
lahf
pop
cltd
ret
xor
sahf
mov
push
adc
imul
xchg
xor
add
pop
in
push
mov
hlt
insb
int
xchg
cmp
lea
xor
mov
imul
mov
jge
pushl
fwait
loop
movsl
mov
into
inc
sbb
mov
repnz
pop
mov
sbb
mov
in
push
repz
and
pop
inc
push
mulb
mov
testl
into
cmovl
lret
xor
add
loop
addr16
or
push
cmp
in
shlb
mov
xchg
push
out
cltd
ljmp
out
dec
mov
test
ljmp
shl
or
push
inc
cmp
and
arpl
inc
daa
loope
push
dec
mov
aaa
push
insb
xchg
in
lods
inc
add
je
shll
mov
push
adc
push
or
cmp
jmp
pushf
lcall
cmp
jb
in
insb
imul
jl
dec
push
into
movsl
imul
es
inc
lret
mov
mov
jno
or
sbb
ret
outsl
in
outsl
cmpsb
popf
and
rorb
sub
popw
push
push
mov
stos
push
adc
mov
mov
sahf
out
jno
mulb
mov
shll
fwait
aam
scas
cmpsb
jg
es
dec
inc
insl
movsl
jae
cwtl
dec
lea
pop
sub
mov
jmp
shlb
cwtl
xchg
call
aad
xor
sub
or
sbb
mov
in
jmp
or
lret
pushf
sub
stos
mov
pop
push
cmc
test
ja
add
cmp
jo
gs
div
imul
dec
sub
inc
lea
sub
xor
add
pushf
jge
dec
dec
jecxz
mov
repz
inc
jg
mov
insl
nop
sti
into
rcll
xor
sbb
les
cmp
fidivs
and
addr16
push
push
lods
add
je
xchg
add
aad
rcr
inc
xor
scas
aam
cli
outsb
enter
mov
fs
stos
cwtl
das
dec
dec
sub
add
in
loope
aas
add
sub
inc
es
dec
push
outsl
repnz
mov
push
scas
push
inc
sub
inc
jle
xchg
and
jo
pop
cmpsl
xor
jp
test
sti
add
addb
negl
stc
lahf
pushf
dec
fcoml
fsubs
clc
sbb
dec
int
jnp
ffree
pushw
stc
inc
divl
mov
cmp
lods
aaa
mov
pop
and
bnd
in
enter
and
test
cli
push
mov
pop
enter
and
inc
jae
ds
enter
jl
jns
jae
out
jg
jns
cmpsb
dec
outsl
jo
es
pushf
int
data16
jecxz
rolb
ljmp
xchg
xor
mov
mov
lea
adc
cltd
sarb
in
cltd
cmp
fildl
addl
lret
sub
test
arpl
sbb
jle
in
jae
sahf
rorl
mov
stos
rcl
pop
fsubrl
cmp
mov
orl
mov
xchg
add
push
repnz
fisubrs
cwtl
sbb
cltd
fbld
sar
ja
mov
enter
xchg
das
jae
test
cmp
lds
jns
sub
mov
or
sub
sbb
sahf
xor
sub
lcall
mov
pop
fs
cli
pop
push
cmpb
or
lret
popa
in
clc
mov
adc
test
ljmp
popa
inc
inc
sahf
or
mov
xor
xchg
rolb
bnd
std
adc
lret
cmp
and
pop
mov
ret
aaa
lret
inc
jecxz
pop
inc
pop
adc
add
arpl
mov
testb
mov
je
sub
rorb
cmp
mov
sbb
lret
and
push
mov
mov
out
ljmp
loope
in
lret
fadd
xor
cmp
repnz
xor
cltd
scas
adc
cmp
inc
push
push
adc
ds
cmp
hlt
ret
xchg
or
cmpsb
push
mov
xchg
or
lock
inc
pop
adc
adc
cwtl
push
push
xchg
pusha
lahf
ret
xor
pop
lds
flds
mov
outsb
inc
test
fstpt
test
out
les
jnp
pop
lahf
mov
aas
test
push
jne
insl
cmp
popf
out
int
cmp
jns
mov
jb
jb
pop
pop
jmp
jecxz
mov
dec
fidivl
sub
bound
fcmovnb
loope
rcrl
push
repnz
arpl
push
out
jno
dec
sbb
mov
mov
movsb
jbe
cmp
cli
and
dec
push
pop
mov
mov
addr16
mov
sub
push
mov
rorl
mov
push
push
imul
mov
adc
dec
mov
xor
mov
push
sbb
mov
jo
mov
pop
dec
mov
push
test
jb
mov
xchg
cmpsb
sahf
mov
je
jne
pop
mov
push
or
pop
stc
lcall
das
dec
call
repnz
mov
lret
outsl
push
mov
into
repnz
cmp
mov
dec
insl
dec
adc
aam
js
push
cmp
test
out
sbb
add
ljmp
add
test
adcl
loope
outsl
inc
push
loopne
leave
mov
cmp
int
lret
or
fs
push
mov
iret
ds
inc
int3
stc
adc
fldt
pushf
sbb
mov
mov
in
je
or
imul
sub
mov
sti
mov
pop
sti
cmpsl
icebp
and
mov
jl
mov
ljmp
adc
stos
shl
xor
mov
nop
add
add
das
cmp
stc
add
mov
sub
cmp
int
cmp
or
aaa
mov
imul
test
test
imul
popf
aad
in
jl
inc
push
sbb
mov
mov
ja
mov
inc
rclb
imul
mov
movsl
out
loope
jo
mov
test
lahf
push
pop
mov
mov
mov
sbb
pop
jp
int3
xor
gs
rol
mov
mov
js
loop
mov
dec
and
or
ret
inc
mov
and
sub
loop
fldenv
cmpsb
jp
xor
sti
and
test
addb
movsb
sub
andl
leave
lea
pmaddwd
fsubr
lods
sti
mov
fnsave
pop
into
rorl
je
mov
sbb
les
xlat
scas
in
js
ja
pusha
adc
adc
iret
sbb
popa
ja
dec
test
and
lods
sahf
shlb
jmp
xor
xor
popa
clc
xchg
popa
movsl
sub
xor
jb
sahf
cmp
xor
mov
nop
mov
in
je
push
jle
fbstp
sahf
inc
int
pop
stc
cmp
rolb
cmc
push
mov
fidivs
cld
jb
popf
imulb
arpl
sub
pop
loopne
nop
stos
stc
sti
dec
mov
adc
push
xor
cmpsb
scas
shrl
rorb
lods
mov
repz
jge
add
xchg
pop
adc
adc
jno
mov
jae
inc
cltd
pop
lea
mov
cwtl
dec
ljmp
sub
aad
shl
imul
dec
movsl
xchg
inc
push
loopne
call
call
cs
xchg
scas
sbb
pop
pop
push
lock
mov
mov
sub
ret
mov
xor
push
lock
mov
test
and
das
aas
jo
xchg
rep
mov
repz
das
add
cmp
repz
out
mov
push
sub
shl
push
sbb
mov
mov
xlat
inc
roll
iret
pop
dec
and
aaa
les
dec
out
mov
adc
or
push
ret
mov
jge
testb
data16
popf
add
cmp
xchg
xchg
pop
dec
into
add
push
adc
rolb
daa
cmp
mov
call
std
repz
addr16
or
fsubrs
mov
lods
out
add
int3
or
mov
lods
push
mov
sub
mov
das
push
aaa
adc
shrb
fdivs
inc
or
lea
popw
iret
mov
not
mov
sub
std
or
add
pop
cmpsb
push
mov
shlb
imul
movsl
mov
sbb
push
imul
stc
out
sub
mov
jle
lods
es
mov
sub
lds
insb
rolb
cmp
xchg
into
jg
icebp
or
pop
push
push
fisubrl
shll
repz
mov
ljmp
aaa
mov
sbb
test
xchg
dec
mov
fisubrl
stos
movsl
test
lock
sub
movq
shlb
sbb
ljmp
cs
sbb
ds
mov
es
push
cmp
dec
or
jne
push
pop
aad
pushf
jb
aam
andl
lods
pop
and
fwait
fs
dec
cld
iret
sub
push
dec
jge
nop
sub
mov
sub
mov
scas
mov
dec
mov
loopne
insb
cmpsl
daa
adc
xor
mov
scas
pusha
popf
sbb
mov
in
insl
ja
mov
outsb
sbb
ret
adcb
sub
xor
and
popa
arpl
push
ja
dec
pop
push
xor
shrb
fsubrl
inc
dec
pusha
loop
inc
in
lret
outsl
aaa
ret
sahf
leave
cmpl
bound
ret
and
sub
gs
iret
mov
adc
movl
rcll
in
test
push
lods
clc
scas
test
and
popa
jg
fs
adc
roll
mov
leave
in
pop
jp
jmp
and
in
ja
imulb
arpl
push
data16
pop
lds
dec
sub
scas
bound
cmp
push
aad
aaa
jo
inc
cmp
test
call
mov
push
fsubrs
mov
pop
int
fcoms
rcrb
pop
jl
add
cmp
fs
mov
mul
mov
imul
js
inc
stos
push
push
dec
loop
jne
push
and
and
push
movb
aas
rcl
lea
fisubl
shlb
fsubs
xlat
stos
movsb
cmc
mov
dec
int3
sbb
lock
add
movsl
inc
adc
test
sti
leave
sub
push
pop
cmp
fistps
adc
jge
paddb
fs
push
es
loopne
out
push
push
pusha
repnz
dec
cmc
std
mov
clc
movsb
sbb
sti
sub
xchg
cmpsl
mov
xchg
jmp
mov
push
cmp
lret
mov
mov
rcrl
pop
push
clc
mov
inc
sub
je
add
in
push
stos
stos
jg
gs
pop
mov
outsb
inc
mov
test
sti
cmp
mulb
movsb
inc
call
cmp
jecxz
mov
enter
lods
cs
add
cmp
scas
jecxz
movsb
out
icebp
stos
test
pop
nop
xor
adc
rclb
xchg
mov
inc
lock
inc
cmp
jne
mov
inc
mov
and
cmp
orb
nop
pop
lret
icebp
movsl
mov
ja
fisubrl
xchg
aad
test
imul
cmp
lret
ja
lods
lods
push
push
nop
andl
adc
mov
ss
dec
movsb
and
mov
inc
popl
push
cmp
mov
pop
push
push
repnz
xchg
ja
mov
mov
fcmovb
jno,pt
fsubs
dec
mov
movsb
orb
mov
fwait
in
sbb
dec
cmp
ss
ficompl
mov
scas
mov
adc
pusha
inc
xchg
sbb
xchg
push
and
imul
xor
or
inc
in
jo
push
mov
sub
rol
cmovno
nop
dec
stos
dec
lds
push
push
dec
int
push
sarb
fs
call
add
xchg
ljmp
sbb
adc
imul
pop
loope
add
rorb
stos
scas
push
dec
cmp
push
daa
insl
inc
fstl
outsl
orl
out
xor
outsl
test
mov
adc
dec
pop
stos
pop
lods
andb
iret
shr
cmp
jge
ljmp
add
cmp
aas
xchg
jp
adc
pop
add
jae
mov
pop
imul
pop
emms
inc
mov
jmp
cwtl
xchg
xorl
sahf
ljmp
aad
les
jecxz
adcb
leave
xor
and
and
insl
icebp
sub
insb
cmpsl
insl
sub
addr16
xchg
dec
push
stc
cwtl
fwait
rorb
ret
leave
nop
nop
xchg
and
stos
loopne
lahf
inc
out
test
das
pop
mov
sbb
sub
repnz
mov
inc
xchg
mov
sbb
mov
or
rclb
fisttpll
mov
sbb
pop
fwait
in
enter
out
dec
ljmp
xchg
aam
lock
xchg
cwtl
mov
or
imul
inc
ficomps
sub
insb
sbb
or
je
lret
cltd
xchg
test
ja
arpl
inc
stc
mov
cmpsl
mov
inc
inc
cmp
aam
sbb
in
push
std
xlat
pop
push
movsl
xor
sbb
sbb
mov
test
mov
imul
cmpsb
mov
movsb
add
dec
faddl
pop
jo
sub
sahf
cmp
cmp
aaa
int
cs
push
mov
pop
cltd
mov
xorb
out
in
cmpsb
add
imul
mov
clc
mov
cld
mov
inc
xchg
ds
and
xchg
dec
movsb
or
jmp
push
sub
lods
dec
ljmp
sub
aam
jne
and
sbb
adc
lcall
mov
pop
sti
lea
and
mov
andb
lds
out
mul
xor
mov
pop
jns
mov
faddl
adc
add
xor
aam
cmpb
subl
cmp
jg
test
pop
loop
push
dec
and
or
xor
push
rep
lcall
in
inc
push
insl
push
jne
shr
rol
ja
push
idivb
push
out
out
mov
lahf
or
jb
push
push
aas
xor
in
cmpsl
ret
out
orl
mov
mov
jae
sbb
dec
outsl
pushf
pop
mov
mov
inc
insl
test
sbb
inc
out
cs
jp
push
and
nop
in
mov
add
imul
add
icebp
xchg
mov
and
out
ljmp
mov
shll
iret
mov
popa
lahf
or
push
dec
jl
ror
sub
jne
gs
pop
jge
and
stos
push
push
inc
hlt
mov
mov
sbb
dec
mov
fs
je
mov
sub
aad
cld
xlat
lods
xchg
fucom
push
sbb
mov
jle
jne
test
jne
cmpsl
insl
add
cs
dec
dec
in
mov
sahf
out
push
pushf
int
mov
add
mov
jl
leave
fidivl
lcall
lret
xchg
lahf
lcall
adcl
adc
imul
movsl
push
pop
pop
into
scas
cmp
jns
js
daa
cmpb
ds
addb
adcl
jecxz
inc
dec
push
jnp
adc
mov
sarl
mov
repnz
pop
outsb
adc
cmpsb
pop
jbe
ljmp
insl
loop
movsl
cmp
stos
je
jnp
je
xor
jb
add
fsubl
test
sub
and
jp
inc
xor
lods
push
cld
xchg
or
sarb
fisttpl
fidivrs
sub
cmp
ror
cmp
sbb
jecxz
mov
gs
jno,pt
xorb
in
adc
cli
sub
sahf
push
jge
xor
jecxz
gs
call
in
xchg
sub
mov
jge
clc
or
add
imul
cs
push
mov
sub
mov
push
pop
sbb
pop
jle
les
xchg
or
rolb
jnp
daa
cmp
rcrb
sub
cli
inc
pop
inc
jnp
sbbl
dec
jmp
inc
sti
add
and
pushf
hlt
mov
outsl
cli
das
lret
data16
pop
xor
dec
mov
ljmp
mov
cmp
jb
ja
pop
andl
xchg
imul
outsb
lods
sbbl
xchg
in
adc
pop
imul
dec
jb
repnz
cltd
mov
mov
lock
orl
inc
push
cmp
arpl
sub
xlat
jecxz
pop
sub
adc
and
pop
imull
aad
push
jns
sahf
pop
in
int3
clc
mov
cmp
push
mov
xor
loope
mov
rcll
cmpsb
add
jg
inc
jb
jnp
cmp
sbb
inc
xor
adcl
xchg
insl
repnz
loopne
push
fwait
loope
fs
xor
popf
std
in
addr16
add
lods
rcr
jae
xchg
je
mov
jmp
sub
frstor
es
adcl
iret
aas
or
jbe
inc
add
xor
ja
sbb
adc
pop
add
testl
xlat
decb
cmp
xor
xor
scas
pop
incb
and
imul
xchg
mov
xchg
out
in
xlat
or
fcomi
xchg
int
repz
outsb
aam
dec
add
cmp
movsb
inc
dec
aam
pop
or
loope
stos
pushf
push
lods
jecxz
fadds
pushf
and
xor
and
xchg
sbb
add
sbbb
fisubrl
mov
in
and
stc
fistl
adc
mov
ret
aaa
test
mov
jno
mov
xchg
leave
add
push
xor
add
clc
inc
aam
pushf
pushf
xor
loopne
aaa
mov
pop
push
sti
mov
aad
fsubr
push
outsl
jle
xchg
clc
push
cli
in
dec
dec
jl
push
push
leave
pop
push
xor
rorb
or
leave
sbb
xchg
xor
push
and
jp
in
scas
and
inc
push
lret
add
sbb
in
rol
sbb
pop
mov
ss
rorb
and
rcrl
cmp
jno
jecxz
sub
xchg
xchg
sbb
xor
pop
mov
dec
lret
rcl
cltd
mul
or
sub
cmp
in
mov
nop
sbb
test
mov
jno
push
xor
int
ret
cmp
sbb
lock
xchg
mov
repnz
xor
xlat
test
rolb
lods
out
and
jl
and
xor
and
adc
jbe
push
shlb
shl
inc
push
mov
xlat
inc
dec
lcall
test
insb
push
test
cli
iret
cmp
in
dec
mov
arpl
or
jbe
sti
add
repz
sub
xor
adc
xor
sti
mov
xadd
aam
pop
xor
lods
loopne
pop
or
and
outsb
aam
or
lods
xchg
xlat
cwtl
cmp
and
push
cmpb
data16
pop
lock
call
adc
inc
pop
jo
jbe
rcl
fisubl
adc
sub
lahf
ret
and
inc
mov
mov
pop
xor
ret
push
or
test
idivb
push
pop
jl
loopne
dec
fdivrl
les
popf
popa
jle
arpl
mov
jns
daa
insl
or
je
push
outsl
loopne
idivl
cld
jle
mov
aas
cli
out
or
adc
insl
mov
mov
jp
mov
jnp
dec
sbb
aaa
mov
movl
cmpsb
dec
test
dec
cmpsb
cmp
sbb
icebp
icebp
jno
add
ss
pusha
and
push
mov
sbb
inc
xchg
test
subl
addr16
shlb
xchg
and
out
out
lods
aas
gs
aaa
repnz
insl
xchg
adc
das
cli
daa
das
xchg
stos
nop
int3
dec
mov
data16
jp
aad
ss
xor
mov
dec
add
into
pop
hlt
and
add
dec
sarl
imul
dec
loop
test
xchg
in
lods
lea
push
dec
notl
add
repz
sarb
outsl
addr16
or
mov
test
and
sarl
ss
das
scas
scas
pushf
cld
adc
mov
inc
fldcw
inc
cmp
fstpl
imul
rolb
out
out
add
inc
add
mov
out
xor
pop
fstpl
mov
ret
jmp
add
adc
mov
push
sbb
pop
xchg
repz
mov
outsl
xor
test
aad
enter
mov
sub
xchg
adc
mov
arpl
jnp
lds
lea
mov
mov
cmp
mov
aas
inc
les
xchg
mov
shrl
rcll
clc
sar
mov
clc
push
and
dec
sub
fcomps
add
nop
outsl
mov
xchg
lods
into
inc
daa
mov
in
imul
out
jg
mov
es
cmpsb
jns
shll
add
subb
mov
add
lret
mov
inc
int
fwait
in
dec
xor
sti
or
cltd
add
jecxz
lock
mov
test
sbb
in
insl
mov
lods
aam
pop
push
push
xor
aam
stc
adc
mov
add
in
add
jo
add
cmp
mov
rorl
xchg
shll
cmp
push
iret
and
iret
cmp
lahf
dec
sbb
dec
clc
and
cmc
jnp
push
out
pop
jle
ja
ret
fldenv
insl
sahf
xchg
pop
xor
orl
sub
jbe
rolb
rcrl
sbb
imul
cmp
jns
mov
leave
in
push
fwait
jno
push
shlb
push
push
sarl
xor
mov
insl
popl
popa
mov
sahf
test
je
or
scas
jecxz
mov
cmpsl
iret
sbb
cwtl
mov
xchg
fildl
mov
cwtl
enter
and
bound
aam
inc
arpl
or
mov
mov
movsl
and
out
push
out
ds
pop
xor
jmp
pop
daa
jle
aaa
bnd
push
jns
and
lcall
xor
mov
bound
cmp
out
inc
jl
mov
mov
mov
push
aam
dec
mov
jl
test
dec
and
jle
mov
pop
mov
pop
and
mov
test
cmpl
in
cmp
sbb
mov
xlat
addl
rcrb
sti
aad
xor
enter
xchg
jmp
sub
pop
lock
imul
pusha
outsl
mov
loope
mov
pop
outsl
pop
imulb
cmp
inc
into
ret
cmc
push
andl
or
out
inc
fisttpll
test
test
sbb
roll
dec
jg
adc
in
test
or
jno
xor
mov
orb
add
mov
mov
mov
loop
mov
leave
xor
mov
push
ss
inc
repz
daa
loopne
push
ret
sub
inc
mov
xor
in
data16
movsb
adc
sahf
pop
dec
clc
cmpsb
and
lret
mov
mov
sub
inc
and
lea
imul
stc
rorb
jmp
inc
nop
sub
mov
stc
adc
fstl
cmpl
add
jb
sbb
in
ds
popa
in
pop
inc
xor
popf
rol
inc
push
cmp
filds
cmp
jno
xor
mov
rolb
fisubrs
ljmp
aad
in
ret
xchg
in
cld
and
mov
int
xchg
adc
jecxz
leave
shrl
rorl
mov
push
adc
into
test
adc
in
lods
aaa
dec
xor
pop
cmp
test
stc
push
fwait
dec
adc
lea
cmpsb
and
cwtl
add
cmp
cmpl
mov
inc
pop
sbb
scas
adc
ds
es
loopne
aam
xor
ret
add
sbb
fcomps
mov
dec
xor
dec
xchg
adc
stos
xchg
jge
pop
mov
out
icebp
addr16
stos
addr16
jge
mov
push
mov
xchg
test
arpl
or
fdivrl
sbb
push
loope
gs
ret
mov
mov
or
dec
outsb
sahf
clc
sbb
mov
pop
push
mov
lds
out
add
and
cltd
in
cmpsl
stc
mov
pop
xcrypt-ecb
cmpsl
or
cmc
pop
cmp
push
and
and
dec
lret
outsl
fildll
adc
xlat
pop
pushf
out
push
lret
gs
inc
rorl
inc
in
inc
sbb
or
fstps
fwait
cmpsl
push
out
leave
stos
mov
or
mov
jno
xchg
daa
pop
cmc
mov
xor
xchg
pop
nop
adc
mov
push
rdmsr
mov
cmpsl
mov
into
movl
pop
and
xor
jle
cmp
inc
lcall
xor
lea
mov
test
rolb
orl
data16
out
add
xchg
call
add
dec
mov
xchg
add
movsb
push
and
stos
mov
push
hlt
stc
push
pop
ret
fwait
rorb
jb
out
sbb
fdivrs
imul
cltd
or
push
idivl
shll
movb
add
mov
push
push
pop
xchg
outsl
cmc
pushfw
lock
popa
rolb
leavew
lods
inc
aad
test
repnz
out
lahf
xchg
xchg
movb
xor
insl
mov
call
sbb
jg
popa
test
inc
add
jecxz
movsb
push
pmulhw
pushl
call
aad
popa
mov
jae
stos
fwait
jmp
stos
scas
push
adc
mov
sub
repnz
xchg
lods
pop
in
mov
pop
jb
jns
stos
inc
add
fisubrs
jp
jno
inc
lds
incb
jb
imul
cs
int3
das
push
lahf
clc
popf
fsts
nop
xlat
adc
loop
cmpsb
jno
sbb
adc
push
push
fnstenv
test
das
leave
mov
ret
jg
cmp
addr16
pop
mov
aas
adc
jge
aas
aad
mov
cmc
mov
cmp
add
dec
stos
fincstp
arpl
sub
mov
pop
sub
push
mov
imul
dec
gs
mov
std
stc
mov
xchg
push
add
cmp
lahf
repnz
call
fildl
pop
stos
jbe
stc
sbb
jb
aam
mov
pop
dec
out
inc
lcall
call
dec
call
xor
sub
ret
aas
mov
inc
and
lret
pop
pop
pop
inc
insb
mov
ljmp
sbbb
lods
pusha
scas
inc
stc
ja
ja
dec
ret
das
sub
sub
popf
mov
std
mov
int
cli
daa
inc
ret
and
mov
repz
jmp
lahf
pop
cmp
mov
lds
in
push
add
pushf
cmc
fcmove
cmp
insb
cmp
cs
xor
push
mov
sub
xor
push
pop
cmp
daa
outsb
aad
out
pop
dec
popf
pmaxsw
mov
mov
inc
ja
ja
sub
test
sbb
xor
cmp
mov
test
loopne
loop
loop
jecxz
std
pop
clc
subl
aas
in
fnstenv
inc
sti
xchg
fs
dec
ss
push
repnz
lods
das
and
push
push
aad
push
adc
sti
dec
dec
ds
insb
mov
les
ret
jnp
ficoms
loop
sub
sub
xor
out
sub
es
jp
cmc
jl
inc
imul
or
adc
jnp
dec
ljmp
jae
xor
imul
xor
lret
sub
rcrb
xor
sbb
or
cmp
dec
ss
adc
iret
mov
mov
aaa
push
jg
jmp
lock
jns
and
test
jnp
lahf
lds
sti
fcomi
scas
push
neg
cmp
pop
and
icebp
hlt
rclb
fucomp
pop
mov
into
mov
mov
data16
mov
or
mov
popa
sbb
cli
cmpl
and
fstps
int
inc
sub
pushf
popa
xlat
aas
shl
mov
repz
jno
sub
adc
cmp
jne
jl
sbb
aaa
imul
test
adc
dec
dec
pop
cld
ror
mov
dec
arpl
int
ret
fs
push
pushf
jae
and
out
and
mov
pop
ja
adc
xchg
dec
pop
inc
test
loop
in
fwait
dec
xlat
mov
nop
and
mov
jns
pushf
add
imul
lea
and
arpl
pop
jbe
mov
lret
mov
arpl
dec
cmp
inc
push
cmpsb
repnz
andl
dec
mov
adc
cltd
enter
xchg
fbstp
orb
jle
in
mov
cmp
adc
cltd
xor
add
clc
xchg
jmp
ret
cmp
push
in
xchg
xor
push
fdivs
cmp
sbb
add
mov
xchg
pop
loope
stos
call
pminsw
setp
sbb
adc
fldt
stos
mov
pop
aam
loopne
mov
and
inc
mov
push
xchg
or
xor
stc
ja
jge
xchg
aad
cmp
incb
mov
mov
cs
fdivl
call
outsb
loop
int
test
fmuls
clc
aas
out
add
in
cld
dec
out
xchg
cltd
mov
int3
cltd
fnsave
insb
mov
cmp
loopne
sub
insb
cmp
push
push
daa
mov
and
pop
jae
hlt
pop
aaa
xor
pop
jnp
je
pop
andb
sbb
mov
outsb
sub
cld
sbb
lock
cmpsl
ds
mov
jge
xchg
dec
stos
loop
test
loope
cmpsb
add
push
mov
rclb
and
popa
adc
mov
push
int
xorb
lock
xor
test
fs
cmp
jo
in
fbld
push
push
or
mov
push
sahf
xchg
mov
cwtl
out
es
stos
sub
aam
mov
adc
xchg
xor
jo
jnp
mov
mov
fistpll
fidivl
dec
add
rol
fists
and
lahf
call
ret
mov
jb
mov
push
std
jnp
adc
stc
mov
call
mov
clc
jnp
cwtl
push
cltd
sti
arpl
xchg
dec
lods
mov
jns
cmp
rorl
sub
fsubs
mov
mov
ret
mov
stos
pop
jecxz
push
mov
and
sarb
lea
inc
cmc
jp
cmc
push
or
or
stc
or
popa
mov
fisubrl
rcr
test
incl
std
cmp
int3
dec
scas
mov
fistpl
inc
inc
or
mov
push
mov
push
cs
inc
mov
mov
divps
arpl
adc
push
orb
mov
sbb
jns
jb
pop
lea
aas
cmp
emms
sahf
sub
xchg
test
lods
in
push
push
aas
aaa
push
push
iret
jb
pop
mov
lret
inc
insb
and
cmp
fadd
push
xor
pushf
pop
fidivrs
addr16
loope
add
fwait
daa
jo
imul
xlat
imul
dec
pop
rcll
or
adc
push
scas
lods
jle
lcall
cmpb
sub
mov
popf
lret
fnstcw
andb
adc
mov
adc
jg
out
test
fsts
adc
mov
xor
jge
mov
jmp
in
pop
or
jb
aad
shl
xor
push
je
aam
mov
imul
and
aam
mov
cmp
out
cmp
fimull
mov
frndint
aas
cli
dec
inc
jecxz
lods
xchg
xlat
sbb
aam
or
leave
mov
in
pop
icebp
mov
nop
out
inc
xchg
mov
rclw
aas
or
cmpl
clc
cmp
add
dec
fldcw
xchg
push
or
imul
cmpsb
cwtl
aas
repz
cmc
mov
shrl
cwtl
mov
out
xchg
jge
jbe
pop
or
jbe
je
in
xlat
xchg
es
mov
inc
daa
outsl
sbb
mov
push
mov
les
fsubs
mov
fisttpll
mov
inc
cmpl
jb
in
sbb
std
rolb
mov
ja
mov
jl
or
add
scas
nop
lea
ficompl
movsb
icebp
in
loop
add
xor
mov
out
enter
daa
sbb
or
pop
jg
xor
mov
sub
push
leave
jg
cld
ljmp
flds
xor
xchg
sbb
mov
sbbb
push
ljmp
sub
testl
mov
mov
ret
jbe
int3
pop
dec
xchg
mov
push
push
test
popa
adc
js
pop
sub
andl
and
sti
pop
les
mov
inc
stos
in
xchg
cmp
cmp
push
jle
stos
imul
nop
in
es
test
cld
pop
addl
ret
cmc
outsb
loope
fnstsw
iret
imul
sub
inc
xor
inc
movsl
mov
ja
mov
sub
das
and
test
jns
clc
add
aad
inc
dec
sbbb
sub
pop
repnz
adc
shl
leave
or
fxtract
fistpll
shr
dec
xchg
iret
cmpsb
or
pusha
sbb
in
loope
xchg
popa
mov
mov
xor
into
cli
mov
or
inc
push
pop
adc
repz
lcall
ret
jns
shll
je
fcmovnbe
js
shll
in
inc
fmuls
cmp
test
push
dec
push
mov
mov
inc
ja
or
xchg
adc
shrb
dec
sbb
lahf
loop
jnp
int3
leave
sub
mov
xchg
in
mov
jae
shll
mov
out
cmc
jmp
add
mov
xchg
pop
xchg
psraw
sub
fistpll
xor
das
or
mov
enter
push
jne
push
ja
test
mov
test
out
inc
cmpsl
jecxz
pop
ret
cmp
pop
pop
pop
outsb
or
mov
push
roll
adc
arpl
orb
cld
mov
push
ret
xchg
or
jbe
loopne
lret
ror
jecxz
or
scas
sbb
pop
decb
popa
fsubs
arpl
ja
jle
add
icebp
std
js
or
aas
imul
ficoml
sub
sub
adc
ljmp
adc
test
fs
inc
pop
xchg
sub
jg
mov
pop
cli
sub
sbb
inc
rep
push
mov
cmp
scas
cwtl
mov
xchg
cmp
mov
pop
fs
loop
punpcklbw
fs
ja,pt
xor
jne
icebp
orl
mov
cmove
inc
addr16
test
stos
stc
or
add
jecxz
jmp
stos
aas
fstpl
xchg
adc
insl
sbbb
sar
enter
push
dec
xchg
dec
cmp
xor
cmpsb
sub
fstl
mov
mov
icebp
cmpsl
jecxz
rcll
insl
repz
adc
cwtl
sub
mov
sti
jo
jge
mov
ja
sahf
jnp
call
pslld
sahf
mov
scas
mov
or
push
mov
sub
inc
cmp
push
mov
decl
pop
xor
mov
push
lret
mov
fsubl
mov
jmp
int
clc
imul
std
popf
jb
ljmp
es
lds
icebp
andl
add
loop
xor
add
pop
js
push
das
jle
stc
mov
jne
fcoms
inc
imul
or
fcomp
jnp
outsl
push
jge
add
fstp
fdivl
lahf
sar
pop
fbld
pop
es
repnz
enter
bound
jno
jb
testb
testb
push
mov
ss
xor
sahf
sbb
aas
cmp
test
jg
scas
cli
fwait
xor
sbb
testb
mov
push
and
pop
adc
in
call
xchg
cmpsl
mov
ffree
jne
inc
addl
xchg
push
in
cld
jg
push
xor
mov
mov
rcrl
cmp
sahf
pop
pop
jg
bound
and
sub
sahf
rcll
inc
fstpl
test
jl
inc
movsb
mov
mov
outsb
mull
adc
or
push
sub
aam
bound
xor
fldl2t
js
in
fidivs
stos
sahf
ljmp
mov
mov
jmp
fsubrp
mov
ja
sub
sub
sub
sub
push
push
stc
test
enter
imul
xchg
std
iret
das
test
xchg
adc
cmp
and
aas
adc
add
cmp
testb
mov
or
shl
or
dec
lds
mov
mov
jae
mov
outsb
rcrb
dec
sbb
xor
in
test
xchg
cmp
cmpsl
or
and
and
mov
add
test
roll
jnp
test
les
mov
push
xchg
dec
pushf
fwait
in
sbb
pop
pop
and
pop
clc
pushf
mov
sarl
jns
in
push
cmp
popf
fnsave
sub
ljmp
cltd
pop
outsb
and
or
push
xor
mov
fwait
xor
js
cltd
mov
pop
sbb
rolb
mov
mov
jmp
and
push
add
jo
and
inc
pop
mov
mov
scas
fucomip
lret
loope
insb
fstpt
sbb
mov
jbe
fucomip
cwtl
mov
mov
mov
jbe
in
xor
pushf
sub
sub
mov
in
inc
cmp
mov
sub
sarb
add
shrb
popl
mov
sub
fmuls
fimuls
sbb
data16
xlat
nop
push
stos
fwait
aas
cmp
iret
repnz
data16
popl
mov
aaa
rorb
sub
retw
sbbb
pop
xor
arpl
icebp
shrb
adc
xchg
scas
jbe
push
xor
icebp
jbe
lret
sbb
out
sti
push
xor
dec
push
mov
inc
adc
enter
leave
adc
data16
lock
fnsave
dec
test
and
popa
rorb
jbe
lcall
inc
mov
loope
mov
pop
xchg
stc
jecxz
and
mov
sti
andl
inc
stos
sbb
iret
data16
add
stc
dec
sbb
push
pop
push
sub
or
adc
cwtl
lea
xor
or
dec
mov
sub
mov
gs
or
xchg
enter
xchg
lcall
xchg
hlt
subl
sbb
push
cs
xchg
scas
push
out
mov
aaa
pop
mov
mov
addb
inc
add
pop
pusha
mov
gs
lret
mov
mov
adc
jmp
xor
ja,pn
outsb
sbb
sub
ljmp
jge
push
dec
adc
inc
clc
popa
out
xor
lret
popf
loope
shll
test
lods
shll
dec
mov
pushf
or
dec
pop
adc
test
sahf
mov
and
xor
mov
addb
sbbb
add
pop
cmp
outsb
and
or
aam
std
mov
cmp
jae
mov
lahf
pop
pop
data16
std
and
push
mov
fcomps
arpl
dec
mov
cmp
mov
push
stc
out
lahf
xchg
jbe
into
ds
fildll
fucomi
jmp
sbb
add
ds
mov
xor
jns
pavgw
or
popf
lret
out
or
push
std
jnp
xorb
push
xchg
add
cmp
mov
daa
xchg
in
jb
pop
add
fidivrl
pop
pop
and
dec
popf
or
hlt
add
pop
jo
int
lods
sbb
fcomip
adc
imul
xor
add
push
clc
sub
cli
cmc
lock
xchg
xor
out
loope
repnz
jno
jle
sbb
lods
leave
fdivrs
sbb
out
mov
sbb
mov
pusha
cmp
jmp
cld
mov
sub
cwtl
imul
cltd
rorb
scas
inc
jbe
mov
outsb
ficoms
in
imul
mov
in
cmp
sub
jg
pop
xchg
add
xor
mov
sbb
popa
in
out
in
mov
pushf
add
cmpsl
add
fscale
xor
popf
push
decl
jns
ds
cld
rcrl
mov
cmp
jl
arpl
xchg
jp
call
rclb
mov
addr16
or
push
scas
popf
jb
dec
mov
mov
scas
andb
cmp
adc
sbb
orb
data16
mov
pop
xchg
fwait
sbbb
dec
nop
jg
xchg
fdivs
or
pop
mov
sarb
cld
scas
cmpsb
xlat
in
test
nop
fs
sbb
mov
sti
insb
pop
ret
xchg
stos
daa
pop
jnp
test
sarl
push
push
in
or
mov
and
push
xchg
ret
xor
jl
mov
jbe
in
repz
inc
push
adcl
lret
ds
cmpsl
mov
cmp
test
rorb
fmull
pushf
pop
loope
test
insb
outsb
jno
xchg
mov
xchg
and
mov
mov
or
xchg
and
push
mov
xor
mov
pop
hlt
ljmp
popf
test
cld
pusha
popf
cwtl
cmp
js
cmp
das
out
hlt
outsl
roll
outsb
insl
sbb
xchg
jns
add
sub
in
sti
sbb
lds
cld
or
or
movsb
rcrb
push
cmp
xor
push
movsl
ljmp
or
mov
jge
iret
inc
adc
sbb
out
clc
scas
aam
outsb
or
push
cvtdq2ps
mov
dec
loope
icebp
daa
cmp
rclb
cli
xchg
xor
ljmp
pop
call
in
jbe
sub
mov
scas
enter
ljmp
test
adc
xchg
sub
mov
push
in
jmp
sub
popf
enter
mov
jo
icebp
inc
cmpsb
xchg
movsl
lods
mov
pop
call
hlt
test
in
pop
stc
sub
sbb
repnz
dec
int
inc
std
push
imul
aaa
out
call
dec
dec
das
jle
dec
jl
scas
sbb
in
dec
mov
fcoml
repz
adc
sbb
add
in
icebp
popa
jl
fs
pop
adc
popa
jge
mov
int
icebp
bound
nop
fadds
push
call
ret
sbb
popa
std
mov
jecxz
push
aas
stos
sarb
lods
or
adcl
out
lods
jb
add
xchg
into
xchg
xchg
jno
xor
in
or
fisubs
push
lods
imul
lcall
scas
sbbb
or
pop
mov
fs
push
cld
xchg
mov
cmc
cmp
cmc
or
push
imul
mov
push
lcall
push
mov
xchg
mov
xchg
xchg
pusha
sahf
ss
lea
stc
jle
mov
jns
scas
mov
in
mov
and
mov
or
fisttps
push
jge
movb
push
jbe
inc
stc
mov
push
jo
fstpl
addb
rcll
cs
pop
lahf
jno
cmp
pop
daa
mov
divl
cmpsb
xor
out
mov
push
fs
les
inc
cld
imul
jbe
test
mov
adc
andl
xchg
add
es
adc
pusha
push
nop
lock
mov
cwtl
dec
mov
add
out
add
stos
sub
jnp
int
out
inc
mov
clc
inc
sahf
jno
pushf
in
pop
cmp
mov
push
jl
or
push
sbb
mov
orl
push
xchg
cmp
das
in
ss
jnp
pop
or
or
mov
xchg
jbe
shlb
push
add
out
popl
sbb
jb
jg
scas
jecxz
out
int
daa
pop
mov
inc
sub
fisubrs
mov
or
jp
iret
icebp
lods
or
pop
or
roll
test
push
les
sbb
daa
pusha
mov
pusha
out
xchg
ss
pop
mov
push
xchg
inc
adc
push
sub
sub
mov
xor
es
iret
inc
jmp
or
sub
push
xchg
repz
or
sub
sub
jnp
out
mov
mov
rcpps
shll
xor
pop
push
mov
lcall
jmp
sub
mov
in
push
pop
mov
dec
jmp
jl
mov
sub
sub
xor
jl
xor
out
add
or
loope
call
add
cs
xor
cwtl
dec
dec
and
or
jo
xchg
mov
popa
mov
les
xor
adc
cmp
xchg
rcl
repnz
sti
cmp
cmpsl
lret
dec
push
mov
xor
iret
in
imull
leave
jmp
adc
outsb
pop
mov
aam
lock
std
popf
push
test
hlt
std
sti
jne
add
pop
fadds
mov
xchg
inc
lret
sarb
pop
into
fs
loope
fiaddl
mov
insb
test
xor
mov
icebp
or
orl
fbstp
sub
cmp
jecxz,pt
dec
iret
adc
bound
inc
std
lret
xor
loop
das
mov
mov
xchg
cli
fnsave
testb
mull
xorb
sahf
addl
jge
or
mov
and
mov
add
xor
jecxz
mov
or
push
lods
lock
lret
push
in
into
add
movsb
push
stos
lea
sbb
xor
loope
filds
fs
cmp
or
or
push
sbb
xchg
xchg
lods
ffreep
mov
mov
aas
mov
gs
pop
cltd
xlat
fs
scas
ljmp
mov
cmp
fcmovu
cmpsb
popa
jmp
push
dec
dec
fmuls
sub
out
xchg
and
adc
orl
into
es
popa
hlt
leave
pop
mov
icebp
add
fiadds
xor
push
jbe
bound
pop
jno
nop
sbb
test
test
mov
adc
leave
movsl
jne
lds
fstpl
xchg
ss
pop
sbb
call
push
add
cmpsl
dec
aad
fdiv
test
xlat
inc
mov
mov
lret
push
ss
addr16
xchg
imul
push
adc
pop
pop
cltd
sbb
pop
lea
int
sub
fistpl
xchg
inc
cmp
lock
mov
and
jo
cmpsl
ljmp
into
sbb
mov
sbb
sbb
fdivrl
pop
xor
das
jl
sub
mov
iret
addb
lcall
sub
mov
adc
das
and
cmp
push
mov
pusha
mulb
mov
mov
decb
fstpl
rolb
lcall
xchg
or
out
inc
push
jb
adc
sub
cmpsl
mov
jmp
pop
mov
add
dec
push
or
dec
outsb
das
test
orb
pusha
push
push
subb
test
mov
sbbb
dec
dec
sbb
push
adc
cltd
cmp
dec
hlt
add
xchg
mov
cltd
stos
fwait
lahf
sbb
push
pop
scas
cmp
xor
test
cltd
adc
dec
jno,pt
xor
clc
add
add
bound
lcall
sub
aas
fimull
adc
push
pop
orb
add
pop
mov
xchg
loopne
cs
rcl
in
shll
jl
lret
ljmp
sbb
pushf
add
adc
jg
pop
or
wrmsr
out
jge
imul
cmpsl
add
push
mov
out
dec
ljmp
mov
ja
cmp
dec
sbb
out
dec
adc
leave
xchg
ja
lcall
mov
inc
rcll
xchg
pop
popl
out
sbb
movsl
pop
push
lods
ljmp
pusha
test
mov
aam
daa
out
daa
push
xlat
lret
xchg
inc
out
gs
inc
mov
and
repnz
arpl
lahf
fs
mov
cmc
push
insl
ret
in
adc
dec
movsl
inc
jns
in
add
repz
pop
loopne
xchg
xchg
and
lds
mov
adc
jae
bound
fwait
and
jp
xlat
loopne
sub
and
dec
out
repz
lcall
ds
scas
addr16
ret
xor
xchg
cmpl
test
cmpsl
in
popa
fisttpll
jmp
adc
imul
rorb
cmpl
imul
mov
sub
jb
leave
xchg
xchg
cmp
test
sbb
sti
mov
mov
xchg
cs
push
cmp
cmc
ret
pop
and
push
arpl
movsb
inc
push
sbb
jnp
xchg
push
hlt
push
ret
sbb
sub
imul
lods
push
addl
sbb
out
cmp
pop
mov
scas
push
ret
pop
ficomps
stc
pmaddwd
js
in
sar
and
pop
lods
outsl
call
lods
lcall
sbb
inc
and
out
in
out
adc
pop
mov
popf
push
std
cmp
icebp
ljmp
mov
pushf
or
adc
lret
test
mov
adc
call
aad
ucomiss
lds
call
lods
dec
or
sub
mov
push
out
mov
popl
xchg
cwtl
push
mov
dec
push
leave
sub
insb
adc
jle
cli
mov
imul
jp
sub
pop
jne
inc
cmpsl
enter
inc
mov
and
mov
pop
mov
int3
les
jge,pt
jo
ja
mov
push
mov
pop
aas
mov
sbb
xchg
aad
xchg
mov
fistl
lret
push
dec
ret
cltd
add
xchg
pop
enter
mov
push
inc
push
dec
sarl
sub
and
repnz
imul
pop
adc
mov
fisttpl
push
loop
lcall
add
pop
ret
fnstenv
add
les
and
cmp
loop
popf
xchg
mov
lret
push
repz
faddl
pop
and
hlt
inc
mov
mov
cmp
xchg
jmp
and
les
mov
xor
imul
pop
aaa
fistpl
sub
pmaxub
ljmp
mov
mov
mov
out
xor
push
dec
inc
sbbl
cwtl
or
cwtl
mov
and
jne
leave
sti
sahf
cmp
and
xor
add
or
xor
jp
clc
add
adc
lock
insl
addb
xchg
cmpsl
stos
xchg
in
test
pop
cmp
or
and
adc
enter
dec
subb
fld
and
pshufw
xor
les
call
lods
fldl
out
dec
sti
and
xlat
xor
out
shl
mov
adc
jmp
imul
inc
and
jb
pop
sbb
mov
xchg
aaa
hlt
cmp
aad
adc
inc
int
int
repnz
daa
movsb
sarl
xchg
roll
inc
cmc
jecxz
addl
xor
insb
jp
mov
cmp
std
sti
les
aas
dec
fiadds
push
mov
pop
sbb
stc
cmp
out
jg
dec
mov
pop
push
jb
sbb
and
adc
jecxz
or
les
mov
in
inc
jmp
idivb
inc
lahf
cwtl
dec
xchg
andb
sbb
xchg
lahf
rorb
mov
popa
and
aad
cltd
xchg
repz
inc
scas
xlat
and
das
add
push
and
pusha
ds
and
push
cmp
lret
imulb
push
mov
or
push
mov
cmp
shll
mov
daa
push
xchg
imul
aad
mov
pop
out
leave
stos
imul
lea
push
int
xchg
or
ds
out
fsts
sbb
in
lods
inc
or
jle
sahf
mov
in
pop
jp
xchg
or
push
push
mov
sbb
imul
or
mov
sbbl
push
mov
pop
sbb
push
add
xor
sbb
nop
push
jmp
in
sbb
xlat
lods
pop
imul
rorb
pop
and
icebp
or
xchg
scas
inc
pop
pop
aas
sbb
push
pop
repz
push
jg
add
pop
outsl
pop
or
mov
lret
jle
das
sbb
dec
xor
gs
xor
mov
icebp
movsl
std
inc
and
cmc
fisttpl
add
scas
jmp
cmp
adc
push
mov
into
inc
fwait
mov
mov
push
sbb
push
and
ja
in
dec
das
loop
jp
mov
push
cmp
adc
pop
jo
popa
shll
loopne
imul
int3
imul
mov
jmp
lods
loopne
add
sub
dec
mov
fdivrs
insl
mov
leave
into
sbb
jl
pop
sahf
stos
insb
mov
mov
xchg
nop
popa
mov
aam
bt
xchg
push
neg
adc
xchg
repz
stos
lret
xchg
mov
into
sbb
mov
test
sahf
lahf
inc
jnp
sbb
xor
ret
inc
mov
in
jo
xor
pushf
inc
jbe
mov
into
mov
decl
jg
sbb
xchg
and
mov
or
popa
or
adc
enter
fs
xchg
or
inc
pushf
cltd
repnz
imul
pop
pop
ss
faddp
int3
sarl
stos
xlat
addr16
ja
orb
out
sti
pop
and
lds
in
or
test
sub
inc
inc
xchg
test
or
out
popf
arpl
jno
push
jnp
daa
in
mov
jle
jno
mov
mov
sbb
xor
dec
push
shrb
fnsave
ja
push
xor
sub
sbb
fistpl
push
movsl
ret
ja
pusha
mov
pop
jmp
mov
push
shl
mov
adc
int
scas
add
mov
sbb
out
jno
call
popa
dec
test
sbb
stc
pop
inc
dec
enter
bound
dec
in
push
jl
jne
xchg
dec
add
mov
fs
jmp
test
scas
rcll
or
xchg
pushw
fwait
mov
cltd
movsl
mov
rolb
jg
xor
fucomip
sub
cmp
cli
sub
inc
cmp
and
sbb
adc
or
push
cltd
clc
inc
mov
in
fnstsw
addr16
push
adc
xchg
xchg
xchg
push
adc
enter
sub
add
imul
dec
jbe
jl
jg
lcall
mov
sbb
fstpl
adc
mov
cli
push
xor
push
imul
mov
dec
pop
push
or
jmp
sahf
push
out
xor
lret
push
int3
int
mov
test
test
add
xlat
bound
popa
add
dec
fdivp
push
jae
pop
or
ret
adc
les
cmp
arpl
xor
sub
push
pusha
outsl
cli
ljmp
dec
cs
and
sbb
fdivr
dec
bound
and
movsb
insb
jo
xlat
xlat
popf
cmp
mov
mov
push
or
hlt
sub
popa
cmp
lock
inc
leave
inc
pop
dec
pop
fldt
roll
push
es
jne
sub
jp
mov
shrb
dec
pop
lods
sub
lcall
testl
hlt
pusha
aaa
jecxz
sti
sti
cmc
imul
sbb
test
inc
call
divl
hlt
sbb
add
movsl
aam
in
pop
icebp
pop
xchg
jp
lock
ror
push
lret
push
push
mov
cld
ja
jge
pop
inc
mov
add
jl
repnz
cmp
and
test
mov
aad
xchg
lea
or
sub
xchg
mov
insb
jg
dec
enter
jae
push
add
and
aam
das
adc
xor
stos
shll
je
mov
dec
xchg
cmp
int3
add
mov
cli
ja
jns
sbb
push
jle
xchg
inc
pop
and
je
push
stc
fidivrl
sbb
imull
inc
aas
xchg
pop
dec
inc
push
xchg
sbb
int
and
loopne
and
add
pop
scas
negb
out
outsl
push
inc
hlt
sbb
jne
imul
and
ds
jge
mov
add
add
push
shlb
add
push
jb
pop
mov
jle
lods
add
fldl2t
or
insl
sub
or
lret
fs
popa
leave
or
adcb
das
outsb
pop
jo
stos
push
inc
shrb
xor
or
lahf
xor
fisubs
mov
cmp
cmp
daa
sub
out
add
xorl
xchg
dec
pushf
arpl
cwtl
sahf
and
dec
jno
fsub
js
loope
fcompl
adc
ds
dec
pop
dec
push
pop
outsl
ja
cmpsb
mov
clc
add
dec
es
imul
out
xchg
mov
jmp
dec
mov
sbb
hlt
ljmp
sbb
mov
add
in
push
inc
inc
out
mov
xchg
jg
popl
and
or
loope
sub
lcall
ds
mull
lea
lret
inc
push
adc
movl
lods
outsb
mov
cmp
loope
mov
shrb
repz
pop
sbb
shll
arpl
mov
aaa
into
movntq
out
je
cmp
gs
sbb
cmp
sar
pop
or
sub
arpl
cmp
ret
imul
cmc
sub
aas
adc
push
test
scas
fstl
fstps
sbb
pop
inc
lret
inc
jno
pop
sub
mov
out
ficoml
cmp
inc
mov
fldenv
dec
mov
sar
int
in
loopne
lea
push
pop
loop
mov
lcall
cs
dec
sbb
sub
xchg
leave
mov
xchg
mov
pop
icebp
cmp
cwtl
sbb
push
push
mov
dec
arpl
sub
push
inc
inc
ficompl
stos
pop
push
mov
cmp
add
das
dec
test
cld
lock
in
xchg
or
mov
xor
leave
sbb
popf
sbb
in
dec
and
icebp
push
leave
out
lods
rcr
lahf
push
xchg
fisttpll
dec
cmp
inc
dec
inc
decl
icebp
jb
cmpsl
push
rcr
adc
adc
cltd
cmc
jle
add
mov
fimuls
inc
out
push
js
pop
xorl
fldcw
mov
arpl
push
lods
mov
push
ja
push
or
repnz
and
dec
jne,pn
inc
add
bound
and
cmpsb
lds
fcomp
xacquire
pop
dec
bound
bound
jmp
addl
movsb
inc
stos
ja
sub
les
lods
mov
lea
addb
out
test
outsl
sub
xchg
inc
into
subb
std
push
inc
leave
iret
iret
pop
xor
xor
sbb
addl
xchg
mov
insb
pop
cli
lock
addr16
mov
stos
leave
adc
jnp
or
xchg
jmp
mov
bound
shl
xchg
imul
sbb
int
roll
cmpl
in
sahf
nop
faddl
inc
test
sbb
jnp
add
nop
stos
xor
xchg
test
repz
push
pop
loop
xor
dec
push
mov
xchg
call
or
and
mov
jb
iret
daa
pop
jnp
dec
push
jnp
mov
out
fbld
jle
pop
out
enter
and
jno
jne
ret
cmpsb
call
cmp
mov
imul
jae
into
hlt
shll
adc
dec
clc
xchg
or
push
sbb
push
sbb
insb
pop
or
jae
xor
cltd
inc
lea
lea
cld
leave
sti
bound
ret
popf
loope
mov
cmpsb
dec
xchg
mov
push
mov
xchg
sub
movsl
imul
incb
and
stos
and
in
js
add
out
jb
in
les
pop
cmpsl
movsl
sarl
jno
sub
in
cmc
insb
xchg
into
rcrb
dec
adc
sbb
or
mov
mov
scas
sbb
out
lds
into
cmp
test
xlat
inc
std
pop
call
inc
insl
ret
stc
ret
mov
lcall
xchg
sahf
xor
cmp
lahf
pop
xchg
mov
inc
add
in
push
stc
sbb
into
lods
cmp
and
jge
rcrb
inc
and
push
sbb
sbb
loopne
jge
loope
push
sbb
arpl
dec
aad
loopne
xchg
ljmp
stc
xor
mov
insb
lret
pop
sbb
mov
cmpsl
bound
jbe
fadds
pop
sbb
cmp
cmpsl
scas
int3
jl
inc
jo
mov
popl
ret
fwait
push
aad
cmp
xorl
ds
fdivl
rolb
xor
mov
mov
lea
scas
xor
or
ljmp
and
sbbb
test
inc
adc
outsb
shl
call
shl
add
pop
push
jmp
mov
dec
ds
ss
sub
rcrb
outsb
ret
sarb
inc
aaa
insb
adc
add
jb
mov
movsl
mov
sbb
in
pop
mov
fsubp
inc
cld
or
or
ret
xor
lret
xor
leave
mov
out
in
or
lret
adc
push
or
add
mov
inc
pop
dec
mov
push
aas
dec
sub
dec
test
aam
addr16
insl
sbb
or
aaa
fidivrs
dec
clc
mov
arpl
cmp
push
and
adc
cwtl
shl
movsb
sahf
outsl
aaa
jge
pop
int3
jnp
popa
ljmp
daa
sub
movsl
mov
jb
sbb
cmp
mov
jge
lret
mov
std
jle
ret
push
push
mov
cmpsl
mov
pop
jnp
leave
and
shr
jb
cmp
clc
ret
sbb
cs
ror
jge
scas
push
fs
push
fnstenv
movsl
negb
lahf
aad
lds
jno
jmp
sahf
mov
mov
jle
and
stos
fwait
pop
insl
and
pusha
mov
dec
in
enter
leave
mov
fwait
inc
mov
jo
sub
or
pop
fistps
mov
pop
sbb
sub
push
push
mov
add
in
dec
mov
dec
push
adc
fcmovb
mov
jb
push
inc
and
jecxz
mov
daa
scas
outsb
enter
inc
push
stos
mov
lea
scas
in
inc
lods
mov
xlat
or
repz
rcrb
and
pusha
ljmp
or
repz
ja
pop
mov
les
std
pop
jecxz
aad
aaa
sub
repz
mov
sub
ds
xor
gs
lcall
test
pop
add
mov
scas
jp
xlat
adc
pop
bound
es
mov
push
fisubrs
test
push
inc
aad
push
and
std
test
inc
mov
xchg
cmc
aas
cmp
push
pop
mov
repz
je
loopne
mov
sub
js
popf
imull
and
jl
test
xchg
xor
pop
incb
clc
mov
mov
sub
int3
xor
call
or
mov
and
cmc
sub
pop
pop
dec
lahf
js
sbb
es
or
rcrl
push
lret
push
in
adc
xlat
add
jle
into
out
xchg
call
pop
cmpsb
mov
fwait
and
scas
xchg
stos
pop
jnp
mov
gs
inc
int3
lret
popf
jp
mov
pusha
dec
xchg
fsub
es
push
stos
ja
adc
push
inc
iret
inc
jo
int
jno
inc
mov
mov
cmpsl
add
add
int
mov
fdivl
int3
clc
cs
rol
inc
mov
sub
jae
js
lock
scas
icebp
int
xor
in
and
mov
cmp
insb
test
xchg
jo
in
mov
lods
cmp
xor
lods
dec
add
jne
hlt
mov
shr
sbb
pop
jmp
xor
jge
mov
jp
repnz
pop
inc
movsl
and
jmp
daa
int3
aas
jle
jno
int
jns
mov
daa
and
inc
inc
xchg
pop
inc
aas
es
sbb
xor
cltd
in
inc
mov
mov
cmp
jae
nop
popf
sub
or
cmp
aas
pusha
outsb
clc
mov
bound
jecxz
lods
psllq
out
add
sti
in
in
gs
add
shl
out
xchg
decb
es
sub
cwtl
lret
test
sahf
adc
movsl
pusha
popf
xchg
movsl
aam
inc
lock
ret
repz
cli
sub
xor
fistpll
mov
test
mov
cltd
dec
jae
adc
lret
mov
sarb
xchg
fbstp
or
enter
je
aad
inc
in
sbb
push
popa
mov
ds
hlt
dec
push
push
push
add
xor
cli
aaa
mov
in
push
sbb
sbb
test
sub
fbstp
xchg
out
mov
call
adc
cmp
cltd
pop
cmp
test
push
fwait
out
jg
int
push
ja
jmp
jb
sub
aad
dec
and
call
icebp
out
fcoms
pop
test
xchg
pop
add
out
call
aam
sti
movsl
xchg
adc
stos
test
sbb
add
xor
aam
sbb
push
orl
lret
and
xlat
ret
or
clc
jno
and
cld
std
insl
in
ds
repnz
or
test
mov
pusha
test
jg
mov
sbb
negl
int3
inc
shrl
inc
mov
sbb
add
xchg
movsl
or
xor
mov
cwtl
pusha
mov
add
lock
mov
or
mov
sub
mov
add
ljmp
ljmp
pop
mov
sub
jmp
mov
lret
scas
jno
in
mull
and
adc
bound
gs
mov
enter
fndisi(8087
arpl
xor
outsb
sub
add
shll
jge
adc
testb
add
mov
in
jg
xor
inc
rcll
dec
push
pop
popa
movsl
fidivrl
jo
loop
lods
mov
out
fcoms
lahf
xlat
dec
push
mov
or
xchg
mov
xor
rcll
loop
fiaddl
xchg
imul
sbb
push
pop
fldcw
out
dec
xchg
mov
bndstx
stc
push
arpl
idivl
xor
lcall
push
xchg
xor
arpl
mov
movsl
sbb
shrb
adc
jle
push
pop
fstl
push
sbb
loopne
sbb
ja
mov
jae
cld
lret
cltd
faddl
negl
xor
adc
mov
sbb
pop
adc
loope
subl
jmp
lea
push
and
adc
and
adc
lret
add
fcom
stos
and
nop
rcrb
loop
clc
lea
mov
cmp
andb
hlt
lock
imul
ja
nop
xchg
sub
or
jmp
pop
imul
ss
dec
jmp
aam
std
dec
xchg
jmp
jge
pop
dec
pop
stos
jecxz
mov
xchg
sbb
or
push
leave
mov
outsb
idivb
mov
jo
cmp
mov
loopne
sbb
mov
mov
fldt
icebp
or
xor
xchg
or
imul
mov
cmp
leave
sbb
ret
cmp
shrl
cld
mov
inc
pop
inc
test
movsb
jg
fnsave
xchg
aam
fs
jb
jb
pop
stos
in
in
lret
ds
test
xchg
cmp
or
sti
sub
test
aam
xchg
xchg
add
test
stos
push
shr
fisttpll
cmp
mov
sysexit
sbb
aas
in
jl
stos
je
movsl
mov
sub
dec
xor
ffreep
cmp
imul
pop
loop
jge
pop
cld
leave
jle
xchg
inc
shl
add
test
aad
fsub
xor
inc
xor
mov
sbb
jno
inc
pop
aas
mov
or
mov
pop
imul
and
xorb
dec
imul
andl
pushf
rclb
jmp
push
add
mov
mov
push
dec
cmp
mov
or
movsl
and
mov
add
fs
mov
add
push
loope
pop
fcmovnb
ret
repnz
hlt
out
xchg
xchg
adc
movsl
pop
mov
cs
ja
lea
popa
xor
jecxz
inc
jl
out
cmc
data16
push
push
cltd
pop
push
push
fists
mov
sbb
rcrb
jae
rcrl
sbb
adc
lds
mov
daa
jb
jge
int3
out
adc
fistpll
sub
fs
outsb
xor
stc
xor
mov
call
push
sub
scas
push
adc
movsl
int3
in
fwait
push
jb
fists
out
add
add
aad
lret
sti
mov
mov
cmp
push
or
ss
dec
icebp
nop
xchg
and
aam
jns
push
jg
mov
aaa
cmp
push
cmp
xchg
jmp
inc
pop
cmp
in
xchg
pop
repz
xchg
test
aaa
add
xchg
jo
xchg
iret
jo
push
mov
jne
push
dec
xlat
pop
test
test
add
inc
mov
mov
push
jle
add
jl
stos
pop
leave
jmp
out
aam
inc
adc
push
mov
push
add
xor
dec
jo
inc
xchg
adc
std
test
mov
out
jns
jbe
adc
jno
sub
or
mov
add
test
jl
pop
cwtl
std
pushf
jge
pusha
jmp
inc
sbb
push
add
sbb
insl
cmp
mov
test
mov
mov
lock
jle
mov
outsb
js
inc
cmp
push
nop
js
out
imul
ss
xchg
or
ret
dec
aam
loop
xchg
test
mov
and
rorl
push
xchg
lods
call
push
jnp
test
rclb
shrb
sbb
stc
test
jne
lock
mov
les
or
repnz
andb
pop
lcall
aam
inc
add
mov
fyl2xp1
xchg
mov
xchg
movsb
js
pop
mov
adc
cmp
sub
sarl
add
mov
in
mov
dec
lret
ljmp
fdivr
xor
lock
xchg
pop
jl
xor
mov
inc
imul
leave
idivb
push
popa
lret
into
pop
jp
sub
rep
mov
lods
xor
aas
jle
gs
or
popa
jo
and
mov
cltd
scas
add
inc
or
xchg
rolb
jne
into
mov
dec
out
ret
mov
test
or
mov
mov
mov
stos
cwtl
or
mov
jecxz
notb
cwtl
xchg
xchg
addr16
in
push
inc
pusha
mov
xchg
ss
mov
sbb
inc
lock
adc
rcll
std
stc
insl
lock
pop
inc
mov
shrl
pop
xchg
test
mov
add
inc
push
fistpll
fadds
pusha
add
dec
lods
inc
sub
cli
fmuls
mov
mov
jmp
stos
lcall
sbb
scas
jp
lahf
jne
ja
xchg
sbb
nop
mov
mov
and
push
cs
sbb
cwtl
sar
jbe
sub
mov
pop
stos
cmpsb
xchg
push
sbb
fadds
test
ret
cmpsl
lcall
xor
inc
ret
mov
sub
pusha
cmp
push
in
lods
push
inc
int3
xchg
mov
ficoml
jbe
repz
xchg
fistl
xor
mov
lock
fnsave
adc
lods
stos
lahf
std
cmp
jl
push
cmp
cltd
push
ljmp
clc
bound
pop
cltd
je
xchg
int
mov
push
pop
and
loop
fmulp
inc
mov
das
or
jge
ret
sub
test
aas
dec
lods
dec
dec
dec
adc
pop
dec
sbb
or
inc
int3
rorl
insb
push
inc
or
xchg
repnz
ss
mov
out
jo
xchg
sub
cmpsb
outsb
pusha
lret
adc
cmc
outsb
lret
aas
dec
fmuls
push
arpl
jae
xchg
fldt
stos
mov
out
inc
cmc
sarb
add
test
mov
dec
inc
xor
fcom
cmp
enter
or
jne
into
das
push
mov
insl
data16
icebp
pop
ljmp
lods
retw
fnstenv
and
mov
jae
xor
int3
outsb
in
dec
std
push
xor
shrb
mov
popf
jecxz
xchg
scas
dec
mov
pop
or
movsl
in
call
adc
push
jp
mov
cmpsb
data16
scas
xchg
inc
push
jecxz
popf
push
inc
mov
les
fstpt
dec
cltd
xor
or
inc
rclb
xor
add
das
in
sti
mov
arpl
dec
stos
outsb
loopne
dec
cltd
adc
dec
fmull
cmp
inc
rorb
pusha
mov
stos
ds
dec
jne
jbe
insl
negl
gs
test
dec
les
popa
sahf
jno
push
and
add
adc
das
mov
stc
pop
mov
mov
inc
and
mov
popa
enter
cs
out
js
push
or
dec
in
ffree
nop
adc
xchg
imul
jg
jecxz
add
sub
pop
into
outsl
xchg
and
xchg
sti
gs
add
sub
mov
or
flds
pusha
fdivrl
addl
fs
mov
sub
mov
and
sbb
adc
mul
mov
xor
inc
nop
test
mov
jnp
and
out
jle
jl
xchg
jmp
lock
jmp
cltd
cmp
cmpsw
outsl
dec
nop
jmp
shlb
dec
leave
xor
push
or
inc
xchg
xchg
pop
bound
inc
adcb
sbb
arpl
mov
dec
sarl
xlat
je
gs
inc
and
mov
add
pop
fnsave
dec
ljmp
cmp
psadbw
hlt
cld
xor
xchg
fs
lret
pop
pop
cmp
lret
xor
xor
pop
mov
push
or
and
or
imul
adc
jg
gs
lods
ja
and
je
pop
jo
and
jl
sbb
sub
pop
or
shll
and
mov
xor
imul
mov
mov
imul
jo
test
aas
clc
outsb
enter
in
sbb
repnz
jle
xor
jecxz,pn
in
add
jp
pushf
sahf
fcoml
addr16
sub
in
out
or
push
mov
out
sahf
fistpl
daa
addl
xchg
lret
jmp
sahf
pushf
cwtl
mov
pop
push
sub
sti
dec
push
aad
sbb
loop
sbb
addb
fildl
sbb
es
adc
or
adc
push
orl
adcb
int3
mov
out
jg
dec
sahf
push
cli
mov
shll
xchg
sbbl
fidivs
xchg
adc
xor
addl
push
test
jo
lds
add
aas
ret
jnp
jne
xchg
jae
jp
dec
or
les
push
sub
jne
mov
sbbb
aam
jecxz
inc
pop
lock
adc
pushl
mov
jne
pop
shrb
cs
loopne
les
cltd
mov
mov
dec
jnp
cmp
shlb
ja
in
cmc
fdiv
lods
pusha
repz
in
lods
dec
push
push
sbb
jecxz
pusha
mov
jp
mov
xchg
mov
in
jmp
and
sbb
inc
jmp
lahf
cmp
push
mov
inc
mov
push
dec
or
sbb
pop
popa
sarb
cli
pop
cmp
lret
lock
mov
jl
mov
push
xor
cli
pop
mull
ret
adc
mov
std
outsb
out
pop
push
test
outsb
rcll
rol
jle
lcall
test
inc
mov
cli
xor
xor
push
mov
mov
jl
popa
mov
xchg
jecxz
pop
push
or
pop
sub
or
xor
push
mov
mov
pop
cltd
sub
ljmp
sbb
xchg
ja
mov
cmpsl
cld
mov
lahf
ficomps
stc
mov
fisubrs
cltd
outsl
pop
push
push
daa
pop
cmc
dec
outsb
cwtl
out
mov
cmovl
ja
mov
lcall
and
leave
dec
in
lds
cmp
fimull
bnd
dec
aad
xchg
mov
add
push
adc
adc
icebp
add
iret
fwait
sbb
mov
cmp
add
inc
lret
or
pop
iret
loope
push
xor
jl
aas
push
and
inc
lcall
sqrtps
mov
hlt
jecxz
cmpsb
push
adc
inc
test
rorb
cmp
popf
rcr
dec
jo
jnp
adc
jae
outsl
jno
into
mov
and
sub
cwtl
fmul
std
jg
rcrb
cmp
stos
xchg
aaa
add
mov
xchg
lods
mov
jl
jg
arpl
fwait
lods
ss
repnz
sbb
fildl
in
sbb
sub
sbb
adc
inc
add
adc
shll
pop
addr16
cmp
xchg
arpl
gs
sbb
cltd
cmpsl
dec
andl
iret
push
ljmp
inc
stos
sahf
gs
dec
imul
in
inc
push
inc
jg
xchg
adc
rcl
xor
and
mov
es
inc
ss
mov
cwtl
out
mov
stos
cmpsb
mov
jae
xchg
inc
push
inc
and
ljmp
adc
loop
mov
enter
les
sbb
xchg
cmp
mov
or
inc
or
out
add
xchg
push
mov
mov
les
xor
pop
mov
sbb
xchg
inc
sarl
ficompl
in
aad
icebp
scas
xchg
fsubs
clc
jg
mov
dec
imul
sub
hlt
or
stc
dec
test
pop
test
shrb
add
dec
in
inc
in
filds
stos
aad
push
loopne
fwait
xchg
out
cmp
xchg
bnd
mov
out
cmp
push
push
mov
das
sbb
or
lcall
and
roll
pop
xor
pop
cmc
jge
push
adc
sub
add
jge
jbe
js
jmp
add
lds
xor
call
cmc
mov
mov
add
stc
test
fsubrl
add
pop
mov
inc
popf
pop
scas
loop
fisubrs
push
lock
aad
xchg
push
pop
test
mov
testl
int
incl
mov
push
xchg
stos
dec
push
xchg
mov
mov
xorl
add
add
jns
dec
js
cmpsl
les
mov
push
mov
xchg
sbb
leave
ret
mov
jle
adc
frndint
andl
inc
jbe
or
lret
pop
fs
aad
ss
or
pop
pop
into
lret
arpl
push
push
ficoms
xor
mov
fildll
push
mov
xchg
and
add
ja
cs
shll
jg
fwait
sahf
xchg
xchg
dec
mov
cmc
lret
jno
testl
adc
xorb
jge
xchg
add
dec
cltd
mov
into
jne
mov
in
cwtl
nop
cltd
outsb
lds
cltd
shrl
mov
popf
pop
pusha
insb
or
popa
inc
sbb
inc
cltd
sbb
cmp
or
sub
fyl2x
mov
pusha
mov
adc
xlat
push
xchg
test
inc
popf
xchg
dec
pop
stos
ss
aad
jle
push
mov
and
inc
ret
cmp
fnsave
scas
or
xchg
and
fcomip
std
sbb
in
jge
imul
push
sub
push
lret
mov
adc
lods
xchg
gs
shrl
mov
fcmove
add
sbb
icebp
mov
nop
sub
movsl
pop
test
outsb
jno
add
mov
out
mov
cmpl
aaa
test
jbe
inc
mov
int
or
cltd
lds
pop
data16
pop
jle
call
mov
lret
inc
jns
movsl
lods
add
xor
mov
add
ja
fiaddl
inc
sub
xor
mov
imul
dec
jnp
shlb
aam
sub
or
dec
push
pop
repnz
andb
xor
or
mov
adc
sbb
test
pop
push
add
mov
mov
nop
addr16
lret
adc
xor
hlt
iret
xchg
mov
jae
mov
lods
mov
mov
dec
push
arpl
rorb
push
push
inc
in
adc
xchg
inc
dec
fs
stos
xor
pop
filds
cld
insl
repnz
imul
dec
add
xor
mov
aam
jge
iret
out
push
push
out
lahf
xor
cld
inc
pop
cli
mov
ror
arpl
scas
js
push
out
enter
dec
mov
pop
jnp
test
mov
jmp
stc
push
aad
negl
cli
leave
call
inc
data16
ss
into
pop
push
jns
or
mov
jmp
jae
xor
pop
enter
cmp
cmpsb
jb
imul
add
and
dec
adc
pop
pop
xchg
pop
rcll
xlat
scas
arpl
dec
pop
in
sbb
xor
shll
mov
inc
or
hlt
in
pop
adc
xor
dec
stc
imul
rclb
sarl
xchg
jmp
pop
mov
pop
enter
add
ljmp
fmulp
dec
nop
movsb
arpl
clc
test
and
add
jo
inc
lret
clc
jae
adc
push
out
ljmp
and
fcoms
pop
sbb
scas
and
shrl
imul
lcall
arpl
add
pop
fisubrs
pop
je
popf
adc
mov
pop
pusha
imul
ret
shll
int
add
jo
push
sub
int3
loop
lcall
sub
sbb
lock
int3
lock
stos
aad
shrb
outsb
movsb
inc
rolb
dec
pop
test
add
jp,pt
inc
cmp
lea
aad
jl
bound
pop
leave
cmp
sbb
mov
je
mov
ficompl
bound
mov
mov
ljmp
mov
mov
push
dec
movb
jecxz
subl
cmp
ret
xchg
and
mov
or
lcall
or
adc
scas
add
hlt
aad
popf
dec
jmp
mov
lock
xor
push
or
je
fprem1
into
shrb
lret
cmc
push
movsl
xor
mov
or
xchg
push
mov
movsb
mov
lods
addb
nop
mov
mov
sbb
les
popa
push
push
sbb
sub
imul
mov
xlat
in
pusha
xchg
enter
ss
les
jno
pop
inc
dec
shrl
mov
sti
jno
or
jmp
ds
jo
loope
and
incl
xor
pushf
lock
mov
sbb
ja
push
push
mov
sbb
dec
sbb
sysret
gs
adc
lar
lock
movsl
stos
push
pop
and
xlat
mov
or
add
cli
sub
push
adc
pusha
fldt
fs
mov
aas
pusha
sbb
mov
mov
ljmp
xchg
jbe
pushf
push
pop
sbb
out
testb
je
clc
sub
push
inc
mov
xchg
jno
add
add
data16
stos
or
shl
daa
jns
mov
rcll
jp
pop
inc
inc
iret
jns
ss
cld
inc
mov
cs
jmp
jl
push
pop
mov
cmpsb
shrb
out
imul
lret
inc
outsb
int3
loopne
push
cmc
or
sahf
mov
or
gs
sti
sub
mov
movsb
push
mov
lods
adc
and
adc
adc
pop
aam
jb
pop
ret
loopne
cli
ret
std
sbb
and
sbb
mov
mov
xchg
repnz
push
jmp
adc
popa
jecxz
pop
xor
jno
jge
mov
push
shrb
inc
arpl
fmuls
inc
jg
xor
test
rorb
loop
jecxz
jns
pop
add
test
shlb
mov
add
data16
lahf
xlat
sub
in
fldl
add
cmp
jmp
jl
hlt
das
pop
inc
push
mov
stos
mov
adc
arpl
jb
xor
lret
je
and
mov
push
pop
or
jl
sbbb
mov
insl
sbb
mov
cwtl
pop
push
sti
dec
xchg
mov
cmpsl
mov
lcall
hlt
or
cmpl
test
push
add
jge
and
xchg
ret
sbbb
push
jne
pop
mov
mov
sub
sub
and
loop
inc
call
mov
lret
insl
dec
adc
xor
js
cmp
popf
fnstsw
lock
dec
jb
cli
xor
js
addr16
rcrl
and
mov
lods
enter
rep
in
pop
mov
decl
in
nop
shlb
lds
jno
xchg
inc
xlat
add
loopne
mov
hlt
sbb
loop
mov
popf
nop
push
bound
imulb
pusha
jg
in
sub
mov
mov
scas
ja
mov
dec
cmc
ds
int
pop
call
pop
fst
and
aad
dec
shr
cs
xor
out
cwtl
addl
lock
mov
xlat
arpl
pop
mov
mov
mov
or
data16
xor
ds
xlat
mov
inc
add
cs
dec
rcrl
aas
lahf
cmp
sti
mov
imul
aaa
push
inc
in
aas
fcoml
repnz
xor
rol
iret
sbb
add
sub
sub
leave
repnz
aaa
add
sahf
xorl
out
jg
fdivrs
or
mov
shll
lret
adc
out
and
mov
loope
leave
into
sub
sub
lret
call
add
push
outsl
subl
push
mull
xor
dec
ret
ds
hlt
scas
cmovb
int3
arpl
adc
and
xchg
xchg
shlb
xor
push
mov
stos
add
push
add
insb
cmp
or
mov
sub
jp
or
jle,pt
adc
mov
mov
push
xchg
incl
push
xor
dec
imul
dec
jo
int
mov
pusha
cmp
popf
mov
adc
fsub
sub
xor
jnp
enter
mov
stc
push
inc
cwtl
sub
inc
inc
lods
sarl
push
mov
xor
and
clc
jbe
inc
cmp
insl
jb
les
adc
pushf
dec
add
cmp
stos
mov
jae
inc
jmp
and
mov
pop
std
push
ljmp
pop
call
mov
and
xor
cmp
pop
add
shll
dec
add
and
adc
loope
lahf
and
cmc
aad
js
bound
es
mov
mov
mov
test
lods
mov
xchg
into
aam
or
popa
and
mov
xchg
shlb
movsl
xchg
xor
inc
jae
sub
rolb
lods
sbb
cmp
sbb
outsb
cmp
and
test
rcrb
int3
call
pusha
dec
lahf
mov
xchg
adc
pop
mov
xchg
pop
lret
pop
dec
loope
lcall
push
in
icebp
movsb
ja
mov
inc
rorb
xor
mov
dec
jno
dec
or
or
cmp
cmpsb
push
push
or
aas
mov
ret
popf
push
hlt
jae
jge
and
xor
pop
cmc
ret
mov
and
xor
out
fcompl
in
outsl
dec
lds
and
and
jno
in
xlat
mov
aam
pop
pop
mov
fs
add
repnz
test
fadds
ja
enter
aam
pop
cmp
cmp
add
leave
nop
mov
sbb
dec
mov
insb
sub
daa
mov
sub
repz
sub
or
outsl
or
inc
mov
sbb
push
cmpsb
scas
adc
pusha
and
pop
fldt
adc
add
cmp
into
mov
push
bound
ss
std
pop
pop
pop
jp
mov
add
bound
cmp
in
aaa
not
cs
mov
dec
jns
js
gs
rcl
xor
imul
loop
bound
sub
aaa
sahf
jp
nop
and
mov
shrb
fucomip
test
movsb
cmp
imul
cs
xchg
push
stc
xchg
jl
cmp
add
xchg
sarb
ja
pop
jl
dec
daa
subb
push
xchg
mov
int
flds
add
mov
aam
jb
mov
aaa
dec
xchg
jne
push
mov
or
xlat
pop
push
scas
jp
cmp
sar
mov
xchg
mov
rcr
lahf
jb
addr16
popa
in
cmp
add
mov
jle
jbe
call
sub
lret
xor
jae
insb
loope
and
sub
and
push
adc
lods
orb
jo
sbb
outsl
push
push
inc
int
xchg
daa
mov
sub
xor
cmc
arpl
cmp
pop
xchg
mov
or
mov
mov
xor
pop
std
mov
push
test
mov
movsb
push
jle
jne
add
mov
mov
ret
lds
or
mov
leave
nop
negl
mov
pop
lds
pop
addr16
leave
mov
out
dec
push
xchg
filds
lret
xor
mov
inc
push
addr16
outsl
jae
mov
and
popa
ss
push
mov
shlb
adc
hlt
ret
les
adc
xchg
call
mov
cmp
mov
adc
push
xor
in
mov
xchg
add
push
ret
aaa
sbb
lea
mov
je
sbb
daa
pop
pop
test
fstl
mov
sub
insb
test
stc
inc
pushf
sub
fsubrs
mov
adc
fwait
and
sbb
cltd
sub
inc
push
xor
jno
sbb
call
inc
sub
sarl
mov
sub
push
xor
fbstp
pop
lods
lret
mov
sbb
mov
xorl
lock
jge
aas
mov
in
inc
jb
in
mov
addb
stc
cmp
adc
fs
les
xchg
stos
cs
sub
sbb
movsl
dec
sbb
xchg
inc
lret
xor
and
int3
sub
mov
jno
xchg
add
cmpb
sub
popa
add
ss
push
cmp
push
and
cli
aad
lea
in
stos
out
xchg
divl
ret
out
or
pop
dec
cmp
sub
in
jns
out
sti
jo
lret
cmp
scas
out
mov
cwtl
mov
xchg
jno
test
in
jne
andb
leave
pop
ss
jne
mov
daa
out
fs
inc
scas
add
xchg
into
adc
adc
cs
pop
cmp
lahf
xchg
jl
mov
movsl
das
mov
pop
inc
sbb
sbb
in
cmpsb
add
je
sbb
add
subb
or
adc
or
inc
in
inc
add
inc
subl
pushw
dec
xchg
jecxz
and
mov
push
in
fists
ljmp
add
xchg
mov
insl
mov
sti
bts
cmp
pop
mov
dec
cmpsl
push
add
jno
adc
outsb
nop
pop
adc
pop
test
aaa
daa
fldl
pop
sub
jb
nop
mov
inc
fwait
cmp
jecxz
negl
jp
add
lods
add
lcall
je
sbb
xor
movsl
stos
mov
es
cld
and
mov
sbb
scas
int3
test
pop
scas
mov
sti
andb
cld
lds
bound
popf
outsb
cmpb
pop
fs
in
out
xorl
outsb
test
fadds
pop
pop
xlat
cli
mov
push
inc
nop
ljmp
aaa
or
js
mov
insb
sbb
fcmovb
nop
or
sub
pop
test
fisubs
jbe
adc
pop
aaa
jg
fnstsw
mov
push
add
xchg
in
jnp
insl
and
push
cld
clc
rcr
lcall
inc
test
xchg
cltd
inc
movsl
push
or
jmp
pop
sbb
inc
out
loopne
movsb
lods
test
pop
or
dec
ss
push
lret
dec
add
data16
inc
lcall
iret
scas
jb
ja
jp
std
aad
in
lds
sti
lock
and
ret
push
xchg
pop
stos
addb
and
sbb
or
popa
and
add
mov
lret
stos
lods
jp
add
push
loop
xchg
mov
adc
das
jle
mov
xor
out
sbb
mov
jle
icebp
xor
xchg
and
insb
fsubrl
cwtl
pop
xchg
nop
mov
pop
das
leave
in
data16
ljmp
lcall
push
dec
mov
pusha
rcll
out
inc
stc
test
leave
test
add
mov
cwtl
pop
jge
fldl
aas
sti
jb
mov
fists
fcom
or
mov
das
sbb
adc
jne
add
les
mov
pop
cltd
mov
mov
xlat
add
aam
mov
xchg
add
and
pop
repnz
xchg
inc
inc
add
pop
movsl
add
idivl
ret
rorb
cmp
xor
mov
cmpsl
cmp
lods
push
movups
lods
int
mov
or
sbb
pop
or
stc
xor
push
push
lds
out
popa
jge
les
push
dec
dec
icebp
and
pop
dec
popa
adc
clc
scas
lods
push
in
aas
or
fdivp
lds
js
arpl
jecxz
inc
pop
sbb
sbb
cmc
mov
add
sub
cltd
fs
nop
pop
xor
fisttpll
or
es
popf
jecxz
adc
out
and
push
xor
movsb
lahf
jmp
filds
jmp
and
add
sbb
fcomip
inc
xchg
xor
loope
push
sub
mov
repz
subb
loopne
loop
enter
xchg
pop
out
add
dec
rclb
sub
inc
mov
push
and
lret
xchg
das
sti
std
negb
ja
and
or
icebp
fwait
jp
pop
cmp
and
cmpsl
test
lea
scas
xchg
mov
lret
cmp
ret
mov
xlat
gs
pop
add
adc
push
fcomi
int
ret
fisubrl
lahf
aad
leave
sbb
repz
les
inc
out
and
jns
fs
dec
mov
pop
int3
push
inc
push
jno
in
cmp
jmp
fsqrt
mov
push
cld
mov
daa
jle
xchg
mov
scas
push
nop
stos
shl
cmpb
into
and
outsl
xor
add
out
push
in
sbb
je
sarb
and
adc
sbb
psubsb
pop
and
jle
mov
lock
xor
mov
cld
or
cmp
fwait
bound
lcall
pop
scas
sub
add
xor
mov
xchg
into
icebp
insb
fdivs
subb
test
sub
sbb
scas
daa
adc
mov
stc
int
daa
jb
repz
cmpsb
push
mov
test
add
popa
insb
adc
in
dec
mov
push
xor
cmp
rcrl
mov
dec
and
test
xchg
call
push
into
int3
mov
in
jmp
movsb
aas
xchg
xchg
popf
aam
add
mov
imul
or
xor
sub
mov
incl
movsl
mov
mov
jnp
test
inc
adc
in
xchg
out
aaa
jmp
xor
bound
inc
daa
fisttpll
jl
mov
test
ret
dec
insl
popl
mov
stos
mov
mov
inc
pop
scas
mov
fbstp
ja
sub
lods
cmp
fnsave
push
or
and
mov
xchg
pushf
nop
push
jnp
hlt
cwtl
rcrl
pop
test
icebp
xor
mov
sub
out
xchg
sbb
jne
mov
add
sub
sub
jnp
xchg
ja
stc
pop
mov
pop
xchg
mov
mov
sbb
jno
pop
inc
push
fcmove
ss
fwait
cltd
push
xchg
cmp
int
lret
daa
addl
add
push
sbb
and
bound
gs
push
scas
je
cmp
loope
mov
dec
ja
pushf
and
lods
test
inc
xchg
cmp
loop
fwait
aas
int3
cmp
lcall
jo
pop
jno
test
mov
ret
mov
jmp
orl
loope
mov
shll
popf
movsl
mov
fbld
lret
or
dec
sbb
add
js,pn
sbb
sbb
mov
in
mov
ljmp
int3
xor
or
xchg
jb
enter
cld
mov
dec
push
enter
inc
push
dec
inc
jp
adc
std
inc
enter
test
fwait
mov
pop
nop
sti
dec
data16
cs
xor
ja
arpl
pop
mov
or
std
adc
xchg
push
in
jl
xor
pop
out
testl
inc
mov
or
out
das
xchg
sti
icebp
mov
pop
jecxz
push
sub
adc
ljmp
xchg
and
cmp
cli
push
mov
sbb
lcall
adc
jne
orl
test
push
pop
mov
lods
lcall
movsb
rcl
scas
adc
test
ror
int
jns
mov
fmull
popf
fwait
push
aas
fdivp
in
cmpsl
jmp
outsb
jb
ret
sbb
mov
mov
push
ret
pop
ficoms
push
stos
and
ss
sub
push
dec
loop
fiadds
repz
es
xchg
or
sbb
inc
outsb
lcall
aam
es
sbbl
lock
inc
incb
add
call
imul
xchg
insb
test
in
cmc
cmp
cmp
sbb
imul
sub
cmpsl
inc
xorl
test
sbb
addr16
jno
sbb
mov
fbstp
leave
loop
jnp
into
fildl
dec
mov
jnp
jne
or
movsb
pusha
dec
jno
es
cltd
repnz
inc
in
dec
add
inc
pop
dec
xlat
add
insb
xchg
pmovmskb
pop
sarl
test
or
in
lea
push
jle
mov
movsb
adc
ret
out
sub
ljmp
xor
in
movsl
sub
inc
out
jmp
ja
add
repnz
fistps
das
inc
arpl
xor
sub
shll
pusha
mov
push
sub
int3
cltd
mov
adc
or
push
and
leave
jo
je
aas
mov
int
push
sub
dec
push
std
in
adc
push
cmp
xchg
cmpsl
in
into
lcall
push
add
push
prefetch
dec
sahf
jno
pop
and
jl
cmpsb
xchg
popa
sub
mov
inc
in
data16
xchg
mov
sub
jle
inc
pop
cmpl
cli
mov
fsubrs
test
lock
mov
xlat
jle
adcl
inc
ds
lods
sar
or
shrb
in
and
sub
push
adc
inc
mov
out
sub
nop
adc
mov
pop
repz
jg
add
dec
dec
pop
sbb
fwait
sbb
add
add
dec
enter
jmp
xchg
xchg
or
cli
and
flds
sbb
mov
cli
std
xor
lahf
ljmp
data16
dec
iret
mov
scas
in
ffree
and
or
dec
imull
sub
dec
dec
xchg
push
les
iret
arpl
outsb
dec
mov
ds
sbb
pop
je
movsb
enter
add
sub
sub
push
shll
test
push
icebp
jge
jl
hlt
add
int
into
sbb
mov
into
sub
jp
aas
fiadds
ss
push
call
mov
cwtl
push
mov
lock
and
dec
insb
inc
cmc
mov
leave
or
fdivrs
push
push
ja
shr
hlt
and
test
js
lret
sbb
jae
mov
int
sbb
in
sub
imull
xchg
xchg
sub
fidivrl
ret
mov
dec
pusha
mov
xor
xor
aad
aas
or
sub
xchg
fadds
xchg
stos
pop
iret
hlt
test
stos
sub
pop
ljmp
mov
xor
pop
int3
and
adc
xor
mov
jl
test
jmp
push
mov
rolb
cli
negb
jb
xchg
loope
lock
mov
mov
and
mov
fmull
fsts
lods
and
or
sti
add
jne
shrl
cmp
repz
mov
out
push
add
xchg
lahf
jecxz
mov
lahf
sbb
out
cmc
cs
ficomps
lods
repz
out
jnp
je
jns
stc
xchg
or
pop
stc
ja
ds
rcrb
gs
popf
jns
mov
out
push
sub
mov
ret
push
bound
pop
mov
loopne
or
pop
adc
jno
or
jno
adc
lds
insl
fwait
adc
jge
mov
jge
int3
fidivs
mov
jae
or
add
add
mov
in
cltd
imul
push
push
fnstenv
xchg
jge
stos
fs
nop
jb
cltd
cmp
mov
inc
popf
in
dec
mov
in
scas
ror
orl
mov
pop
sti
push
pop
testl
cs
test
add
and
mov
fstl
xchg
mov
add
arpl
aam
xchg
das
xchg
push
lock
test
and
das
fs
cltd
mov
leave
fs
into
add
pushl
sbb
aad
xor
mov
jl
pop
rorb
gs
sbb
addl
mov
in
mov
icebp
call
in
adcb
stc
cmp
test
inc
push
dec
xor
push
lds
sub
sub
mov
iret
xchg
pushf
adc
add
xchg
inc
push
ret
jmp
pop
pop
adc
sar
sbb
fidivl
not
cltd
mov
jle
inc
jo
shlb
test
xchg
adc
imull
popa
jbe
add
xor
mov
fldcw
sub
cmc
jmp
mov
loopne
mov
fmuls
or
test
ret
shll
sub
jo
fldenv
aad
bound
sub
pop
out
sub
add
mov
mov
mov
imul
bnd
inc
add
movsb
xchg
or
push
fisttps
dec
mov
icebp
clc
sbb
add
and
repnz
cmpsb
into
xchg
fdivs
in
mov
or
mov
popf
lds
loope
pop
mov
mov
testb
pop
insl
xor
in
loop
jns
sub
push
inc
xchg
or
into
mov
data16
cmp
push
sub
les
mov
sub
mov
cmp
mov
inc
mov
dec
out
add
cltd
repz
and
fsubr
push
dec
das
fstps
fcmovbe
pop
fdivs
jo
push
inc
pop
add
sbb
sbb
je
mov
sub
es
fnstsw
or
dec
imul
aas
in
jl
aam
test
lret
call
ljmp
dec
daa
arpl
jl
jnp
test
lret
pop
cmpsl
push
mov
xchg
out
int3
push
cmc
imul
pusha
rcll
pop
jbe
mov
lods
jp
stc
push
mov
ljmp
lea
pop
pop
lds
lea
jp
jmp
cmp
into
jbe
clc
shrb
and
pop
or
shlb
imul
jae
rcl
popf
stos
orl
jg
xchg
sub
adc
stos
inc
push
jae
cmp
test
ret
lods
clc
dec
xor
mov
notb
pop
jle
xchg
mov
arpl
inc
mov
sub
mov
dec
xchg
cmp
inc
and
push
ret
out
inc
jne
push
nop
adc
int3
inc
pop
mov
stc
je
push
mov
es
or
mov
addr16
mov
xor
cld
clc
add
cld
xor
and
push
call
out
mov
xchg
shrb
push
orb
inc
jb
xor
stc
std
les
mov
subl
insb
addb
lock
sbb
and
xor
pop
ljmp
xor
roll
pop
cmp
pop
push
jg
rcll
xchg
push
xor
adc
mov
in
fldl
dec
xchg
add
outsl
ret
pop
inc
lret
fstpt
aaa
adc
imul
mov
mov
sbb
je
jnp
repnz
xchg
sbbb
mov
sub
in
pop
cmp
dec
loop
dec
inc
das
jmp
arpl
and
sgdtl
xor
cmp
insl
arpl
in
add
ljmp
ret
xor
and
mov
fdivrl
out
stc
dec
subl
das
sub
cmp
fcmovbe
int3
pop
cmp
dec
scas
and
or
inc
push
out
fs
ss
int3
mov
sub
adc
cmp
xor
scas
scas
lret
adc
test
pop
mov
pusha
dec
jp
roll
in
out
inc
fsubrs
cmp
jp
outsb
pop
lods
mov
hlt
jno
mov
fidivs
sarl
js
test
aad
das
xor
mov
loop
push
sub
cmp
push
stc
xor
sbb
adc
push
shrb
inc
dec
lea
mov
inc
lcall
or
sub
lret
mov
sarl
and
test
popfw
xchg
xchg
mul
and
inc
repz
and
push
sti
inc
mov
pop
mulb
frstor
jl
rep
and
faddl
imul
push
dec
inc
mov
cmpsb
leave
inc
fsubp
pushf
mov
adcb
xchg
insl
dec
popf
lods
xchg
shr
add
insl
in
bound
mov
daa
mov
fwait
sahf
cmpsl
leave
and
fwait
or
mov
cmp
sub
cmp
dec
mov
lret
movsl
enter
das
add
cmp
jge
ret
or
out
or
push
cwtl
aas
inc
loop
mov
adc
pop
xchg
das
orb
fisubl
daa
sub
repz
aam
into
mov
call
clc
std
add
shlb
sub
pusha
test
cltd
pop
mov
into
mov
xor
xchg
sahf
mov
inc
push
cs
and
cmp
mov
pop
push
add
cltd
inc
mov
jne
adc
lods
sbb
xchg
and
sbb
sub
push
popa
sbb
in
ret
jo
or
aas
sbb
inc
xor
mov
stos
inc
sbbb
push
or
cmpsb
push
mov
mov
or
jnp
je
push
rol
sbb
bound
shrb
inc
xchg
pop
mov
sahf
inc
inc
insb
xchg
xor
into
imul
sub
cmp
dec
roll
mov
data16
mov
cld
sub
fistl
mov
mov
add
lea
jo
push
shr
inc
adc
cmc
aaa
rcrl
mov
add
aaa
addr16
scas
lcall
cld
adc
add
ja
mov
push
sbb
mov
hlt
call
sbb
in
adc
leave
add
dec
loope
stos
mov
jmp
jecxz
jnp
inc
jl
push
ret
push
dec
sub
mov
mov
push
sbb
in
lret
cmp
push
xor
lods
push
and
cmp
in
push
clc
mov
test
xlat
mov
mov
ret
nop
lcall
test
inc
loop
inc
push
pop
mov
xchg
mov
inc
inc
mov
arpl
fnstsw
jg
stos
shlb
cmpsb
pusha
mov
add
mov
imul
or
mov
jb
cmc
or
fcmovb
pop
jle
or
mov
jae
pop
push
fs
clc
jge
stos
pop
mov
inc
jb
mov
bnd
mov
lretw
cmp
dec
inc
out
in
imul
fdivrl
stc
mov
jmp
in
mov
ficoms
roll
and
leave
icebp
push
mov
sub
or
push
pop
ficoms
sti
xlat
ss
std
cmp
cmc
and
sbb
push
cmp
in
mov
inc
mov
or
jno
add
in
mov
or
clc
cmp
cmp
push
jmp
jl
pushf
aas
pop
inc
daa
cwtl
push
push
imul
in
xor
loopne
and
jbe
gs
test
fwait
imul
push
mov
int3
or
hlt
sbb
imul
dec
add
mov
imul
adc
out
jmp
and
xchg
jbe
mov
mov
cli
and
ret
popa
inc
sahf
jne
lods
and
test
aam
sbb
pop
sbb
fwait
xor
pause
pop
push
lea
adc
xlat
add
mov
xchg
punpckhwd
push
aas
test
cltd
lret
in
xor
pop
push
adc
jne
xor
inc
adc
lods
add
xchg
cmp
imul
xchg
pop
adc
sub
aad
xchg
or
xchg
xchg
iret
arpl
xchg
push
outsb
jns
sbb
pop
mov
jg
mov
push
jg
pop
and
enter
pushf
pop
mov
std
dec
pop
xchg
mov
aas
mov
lret
mov
in
push
xchg
xchg
sbb
mov
xor
mov
addr16
xchg
mov
cmpsl
or
mov
ret
nop
mov
mov
pop
aaa
sub
mov
addl
push
push
pop
adc
xchg
cmc
mov
push
mov
sbb
es
mov
dec
icebp
mov
adc
sub
out
fcompl
push
sbb
cmp
cmp
dec
cmpsl
lcall
in
dec
fcoms
mov
idiv
fdivrs
push
enter
shrl
jmp
cmp
sbbb
pushf
movsl
ret
dec
or
aas
pop
add
aaa
out
ret
cld
test
xchg
mov
inc
aad
pop
xchg
inc
cs
pop
mov
mov
cmpsl
xor
adc
adc
inc
sbb
mov
jle
loope
xchg
in
daa
stos
int
arpl
das
mov
nop
add
adc
sub
cmp
xchg
xchg
lret
nop
mov
outsl
arpl
cli
push
jae
aaa
and
stos
sbb
hlt
push
add
pusha
hlt
mov
fs
xor
fs
test
cmp
mov
mov
mov
push
mov
imul
popa
jg
outsl
mov
stc
clc
dec
fsubrp
cld
xchg
adc
rclb
push
xchg
jbe
jmp
push
lcall
sbb
mov
pop
add
fstps
inc
pop
xor
dec
movb
or
std
xchg
dec
pop
cwtl
sbb
stos
mov
hlt
sbb
mov
sbb
lcall
add
out
movb
gs
insl
shl
push
lret
push
pop
push
pop
xchg
fs
dec
mov
adc
add
in
stc
scas
test
repz
mov
cltd
nop
pop
mov
stc
sub
jl
cmp
mov
push
roll
mov
push
mov
ret
movsb
subl
xor
stc
add
fstl
int3
rcll
imul
mov
es
or
inc
ss
add
sbb
lock
jge
push
sbb
lret
mov
in
dec
xlat
mov
mov
or
jmp
xchg
dec
xchg
mov
xchg
xchg
mov
clc
xchg
mov
test
in
popf
push
inc
fmulp
clc
xor
jo
mov
jmp
aad
in
mov
cld
xor
mov
lock
outsb
and
bound
pop
xor
dec
and
sub
in
fsubrl
lahf
mov
je
out
adc
dec
jo
jae
jne
adc
fisubrs
ret
mov
xor
lea
dec
sub
add
dec
scas
test
ficoms
leave
or
sbb
mov
jg
pop
lcall
mov
fnsave
scas
pusha
push
xchg
xchg
imul
cmp
xchg
test
dec
sti
mov
test
or
mov
or
adcl
cmp
shrl
cmp
adc
jnp
lds
mov
mov
pop
enter
lcall
cmpsl
add
call
add
out
orb
mov
loop
rorb
or
add
inc
in
dec
in
inc
int3
roll
scas
add
cld
sti
mov
je
addl
test
mov
xchg
mov
cld
xchg
push
jns
mov
jnp
ds
repz
cmp
stos
adc
sbb
stos
cmpsl
adc
pop
int3
cld
jmp
test
xchg
mov
ja
add
movsb
or
sub
or
icebp
lods
outsb
adc
rcrl
adc
in
mov
mov
rep
lods
insl
ljmp
add
shr
mull
jnp
xchg
lea
fcomps
test
xor
aam
xor
jne
jne
cmc
mov
imul
adc
iret
aas
inc
ljmp
push
dec
xchg
fld
mov
fiadds
and
sbb
xor
aaa
fistpll
cmp
int3
mov
and
mov
insb
test
jg
int
je
iret
stc
push
cltd
jecxz
lods
out
pop
add
stc
mov
jge
lahf
enter
das
and
dec
int
shl
rcll
sub
lcall
cltd
fiaddl
cli
inc
lea
test
inc
jnp
push
ficoms
nop
fadd
lds
pop
cmp
mov
mov
out
mov
mov
lahf
popa
mov
cmc
dec
loopne
adc
xchg
add
rcrb
rcr
enter
add
test
mov
jmp
cmp
or
ja
dec
push
add
xlat
lcall
lods
cmp
xchg
mov
jg
mov
xor
inc
shl
xchg
dec
xchg
xchg
push
sub
jmp
iret
jecxz
dec
push
cltd
imul
out
xchg
or
data16
icebp
sti
lea
pop
cmp
addr16
bound
mov
fiaddl
push
lods
push
test
adc
fcoms
sub
xor
jns
xchg
sldt
jp
in
mov
mov
push
pop
push
cmp
jl
mov
and
inc
mov
inc
xchg
or
aam
fs
or
xchg
in
daa
movb
shrl
mov
insb
jl
sar
lret
jg
jnp
or
add
xchg
push
cwtl
push
jne
add
sar
push
xchg
pop
xchg
call
orl
hlt
lea
incl
add
xchg
out
std
mov
add
mov
cmp
or
loope
xlat
jns
mov
pop
or
test
jmp
jg
lock
and
pop
incl
fisubl
mov
mov
int3
mov
push
dec
dec
sbb
sbb
mov
int
clc
or
daa
out
test
dec
cmp
adc
sbb
mov
fcomps
jp
or
push
xchg
pop
add
pushf
sbb
shrb
testl
and
mov
pop
leave
cmpsl
lock
lock
dec
mov
scas
jg
adc
xor
hlt
sbb
jge
pop
imul
cmp
inc
pop
jno
clc
push
jmp
xor
fsubrs
jo
popf
cwtl
and
push
or
xchg
xor
roll
mov
add
and
aam
dec
pusha
jno
inc
outsb
cs
sbb
pop
cs
jle
cli
mov
das
leave
cmp
das
cmpsl
pop
sub
xchg
or
ja
das
mov
enter
out
aam
jae
shrb
aad
push
sub
adc
jmp
test
mov
mov
and
adc
pop
repz
cmp
mov
movsb
pop
shlb
scas
mov
sub
lock
xchg
mov
mov
adc
mov
call
stos
movsb
or
push
addr16
xor
fwait
pusha
mov
push
cli
pop
cmp
dec
adc
mov
popf
push
icebp
pop
cltd
imul
pop
fmuls
push
and
sub
jp
or
push
pop
mov
cld
jl
cmp
mov
and
iret
push
ljmp
insl
ret
in
add
cmp
dec
inc
pushf
stc
mov
stos
pop
scas
jbe
aaa
js
fidivl
cmc
sahf
xor
or
cmpsl
in
cwtl
outsl
and
aad
lcall
cmc
fwait
scas
lcall
les
pop
pop
out
sub
pop
push
pusha
push
call
mov
lock
cli
test
mov
fldl
out
jo
sarb
cld
push
dec
mov
xchg
dec
mov
push
xchg
add
mov
test
add
movsl
ret
cmp
or
cs
and
jmp
mov
inc
movsl
jp
movsb
pop
jmp
push
cmpsb
lock
sbb
xor
inc
push
jl
arpl
sub
jb
xchg
sbb
lock
ret
les
lret
xchg
leave
pop
repz
jl
repnz
add
rcl
je
movl
data16
push
push
jns
mov
push
into
inc
push
clc
and
xchg
sub
and
bound
fcmovb
cmpsl
hlt
dec
add
mov
mov
mov
jae
xor
xchg
mov
clc
and
jne
aam
out
mov
mov
sbb
lcall
popf
data16
sbb
xchg
lods
xor
rclb
nop
pop
pop
outsl
jb
jo
jle
hlt
out
cmp
inc
add
insl
orl
cmc
in
and
fs
popf
adc
jno
cmpsb
stos
stc
imul
dec
cmp
sbb
add
inc
xchg
jl
dec
and
xchg
popf
sub
push
pop
int3
or
aad
mov
pop
fisttps
enter
gs
test
test
in
bound
jns
inc
int
and
xchg
pop
sbb
or
in
dec
pushf
lret
test
test
rorl
fs
cmp
mov
jg
push
in
xchg
add
es
sbb
jno
mov
sub
insl
cmpsb
push
sbb
add
sahf
gs
cwtl
or
leave
adcl
sbb
and
inc
imul
xor
jle
out
out
repz
jmp
sbb
cmp
into
stos
fisubs
ds
sbb
ffree
jp
sbb
jge
or
inc
xor
adcb
shlb
lods
in
inc
mov
sub
mov
mov
pshufw
sub
push
xchg
enter
les
popf
mov
cmp
sbb
sub
cltd
dec
scas
filds
es
mov
jno
bound
mov
cmc
ret
test
out
sti
bound
inc
push
jg
jp
mov
push
aad
cmp
out
add
push
xor
dec
and
push
fcoml
lds
lods
lea
mov
sbb
sub
imul
and
cmpsl
stos
outsb
test
addr16
outsl
cmp
cmp
adc
inc
in
movsl
inc
lcall
hlt
mov
sub
inc
sahf
aas
cmp
jmp
repnz
daa
clc
or
jle
sahf
fidivrs
scas
je
aad
dec
dec
jge
jno
ja
adc
in
sbb
jns
insl
mov
not
push
sub
inc
mov
in
in
cmpb
sbbb
shrb
or
mov
hlt
push
cltd
es
xchg
test
sbb
xchg
rorb
pop
loopne
outsl
xchg
cld
das
xlat
jns
mov
sti
dec
aam
daa
mov
fldl
pop
pop
ret
movsb
sbb
cmp
data16
sbb
add
xchg
lahf
mov
sbb
aad
push
lods
fsubr
rcrl
and
jecxz
js
roll
loope
cs
insl
out
jp
fdivs
mov
daa
sub
adc
inc
clc
stc
jmp
cld
nop
dec
adc
insb
mov
dec
lea
add
xchg
dec
inc
in
pop
sub
das
test
out
add
dec
repnz
cmp
pcmpeqb
pop
or
push
out
stos
dec
sbb
xchg
ds
mov
mov
mov
popf
pop
inc
cli
daa
or
lahf
in
fisubs
cmp
pop
int3
sbb
sbb
push
pop
je
lods
out
hlt
imul
mov
push
pop
inc
xor
add
outsl
fiaddl
adc
lret
aam
jecxz
xor
stos
mov
lret
dec
mov
push
xlat
jg
push
xchg
dec
inc
pop
and
jmp
sub
aaa
and
je
and
mov
sarl
loop
fnsave
jns
nop
in
mov
push
ret
push
cld
movsl
incl
fbld
dec
xor
jnp
int3
sub
dec
add
mov
pop
popf
lcall
test
inc
js
add
mov
xor
push
mov
in
jb
pusha
sub
loope
push
xchg
mov
inc
xor
sub
push
mov
pop
or
in
inc
xchg
pop
fs
shl
lods
pop
clc
ret
or
mov
in
xor
imul
cmc
jl
arpl
das
pop
jb
xchg
fildl
dec
sbb
jno
pop
sub
adc
shl
in
jne
aad
pop
sbb
mov
add
dec
xchg
sbb
into
and
enter
das
jp
jbe
call
inc
inc
add
fistps
xchg
mov
or
push
jnp
mov
pop
mov
jmp
lds
dec
aam
add
pusha
iret
outsl
mov
xor
xor
test
mov
add
jp
sbb
pop
sbb
mov
inc
hlt
cltd
in
test
add
pusha
orl
xor
lods
shrb
dec
stos
jmp
mov
xchg
dec
sqrtps
jno
enter
cmp
jbe
mov
adc
and
pop
sbb
mov
push
sub
or
nop
xchg
enter
dec
mov
sub
pop
mov
mov
aam
cld
cmc
lock
pop
pushf
mov
lret
inc
sti
daa
add
arpl
pop
push
pop
addl
cmp
orb
dec
lds
push
iret
cli
cmp
fwait
adc
inc
gs
popa
in
outsb
pop
add
and
ficoms
mov
lods
popf
out
xchg
mov
fidivs
jmp
frstor
pop
xor
insl
pop
std
xchg
pop
sub
mov
sbbl
outsb
and
sbb
enter
mov
add
add
or
xor
in
jmp
sbb
push
adc
mov
fdivr
mov
mov
std
imul
in
mov
mov
js
ss
das
sbb
dec
mov
adcb
xchg
sbb
xchg
daa
dec
cmp
dec
and
dec
js
pusha
lea
adc
sarb
ficoml
inc
ja
mov
jecxz
xchg
enter
pop
aad
icebp
dec
push
pusha
inc
lahf
test
mov
sbb
push
aam
dec
in
mov
push
mov
iret
arpl
enter
nop
push
jl
xchg
mov
add
lcall
jne
pop
int
out
dec
test
inc
fistpll
sti
pop
dec
fistl
or
clc
mov
dec
aas
mov
inc
xchg
pop
mov
insb
and
fs
push
jne
jmp
std
jle
shlb
cmp
repz
test
ret
in
in
leave
insl
int3
ret
shll
jbe
in
mov
nop
push
loop
mov
inc
aas
repz
sbb
push
repnz
out
in
xchg
dec
sbb
nop
pop
andl
adc
cltd
xor
xchg
pop
ror
enter
push
adc
mov
sub
adc
xchg
cmc
dec
add
jmp
or
rep
cld
mov
pop
jecxz
inc
test
rcll
test
dec
xchg
lret
add
add
popf
hlt
mov
out
xor
adc
push
ret
mov
add
fwait
push
sub
int
jo
shll
pop
jbe
cmp
call
fdivl
adc
lea
sub
sub
jg
jbe
jne
jb
xchg
mov
xchg
nop
cld
add
and
inc
jno
pop
and
hlt
ret
ljmp
cmpsb
iret
and
lods
add
xchg
out
lcall
pop
jl
and
push
lods
or
pop
bound
outsb
inc
fmuls
push
jle
adc
shlw
push
mov
lods
fistps
pop
mov
push
xor
cmpl
sbb
add
mov
popa
pop
enter
repnz
adc
xor
cmp
xchg
and
dec
mov
loope
xor
mov
sub
and
sub
aaa
cltd
fiaddl
add
lods
arpl
icebp
push
jp
ror
and
jecxz
ror
push
inc
pop
mov
rcr
daa
push
lods
iret
test
dec
in
lods
pop
into
add
push
or
jnp
add
scas
mov
push
shlb
shll
cmc
aaa
adc
xor
push
mov
adc
dec
mov
inc
fs
and
inc
scas
in
test
mov
mov
iret
popfw
mov
or
add
dec
incl
mov
push
jae
scas
btc
xchg
jmp
dec
pop
mov
mov
js
scas
sub
xchg
jnp
add
adc
dec
repnz
leave
jae
or
dec
call
enter
push
shlb
pop
jae
repz
out
dec
push
out
je
inc
stc
sub
iret
cld
cmpsb
xor
loope
push
jae
sub
pop
xchg
leave
aam
xor
orl
repnz
adc
sbb
cmp
fdivs
dec
inc
pop
pop
jle
push
jmp
adc
push
sub
or
dec
inc
xchg
add
xchg
dec
or
movsb
dec
push
pushf
dec
or
test
mov
sub
add
movsb
aad
add
in
int3
mov
in
cmp
cli
add
mov
xchg
fstpl
jae
divl
fidivrl
ror
xchg
lods
in
pop
dec
fistpl
incb
scas
xchg
fdivr
js
push
dec
mov
mov
nop
aaa
das
pmaddwd
pop
test
fdivrs
jns
mov
cli
daa
aas
and
lret
adc
mov
lcall
rclb
out
xor
mov
xchg
jo
and
push
in
adc
cmp
addr16
out
gs
mov
jno
dec
fs
or
addb
sub
test
push
fsubrs
imul
jg
jl
xchg
pop
js,pn
pop
insb
sbb
xor
fdivs
arpl
rcr
sub
sub
lds
dec
or
cli
mov
mov
or
out
add
jle
les
push
xchg
inc
pop
jge
clc
cmp
jbe
inc
sarl
dec
cmp
sub
push
sbb
mov
sbb
loopne
jne
jge
xlat
js
lods
xchg
orb
dec
iret
cmp
bound
jmp
pop
jecxz
imul
stc
push
rorl
lret
pop
mov
add
pop
repz
outsb
mov
stc
xchg
jge
shlb
or
mov
testl
ja
or
mov
insb
jle
out
out
jne
test
and
jo
push
mov
xchg
dec
nop
rcrb
lcall
sub
mov
mov
inc
aas
int3
out
pop
mov
lds
insb
psllq
movsb
jne
mov
push
repnz
cld
nop
test
cmp
aas
test
decl
aad
out
jle
ror
aam
mov
sbb
je
les
fsubs
push
inc
aas
mov
sub
add
adc
xor
cmc
fcmovb
dec
and
fstp
std
lcall
stc
push
ljmp
lretw
test
and
js
sub
lods
mov
subb
dec
push
mov
push
sub
aam
popa
mov
pop
ja
pop
test
sbbl
cmp
mov
je
xor
leave
cltd
stos
add
mov
adc
cmpsb
add
movsl
pop
pmulhuw
rolb
loopne
mov
jg
popa
and
sub
mov
cmp
add
fldenv
mov
xor
scas
mov
lock
cmp
shr
mov
xor
mov
sub
ja
mov
pop
sub
mov
mov
xor
lods
lock
fcmovnu
and
int3
cltd
sub
cmc
sub
loop
jecxz
out
imul
dec
mov
and
dec
xor
rorb
sbb
mov
or
or
jmp
xlat
cltd
jns
or
inc
add
add
or
jle
in
aas
xor
sbb
cmp
pop
pop
leave
or
pop
cmp
int3
bound
in
inc
dec
and
daa
popa
movsl
arpl
inc
mov
insb
push
sbb
leave
lods
test
outsb
or
lcall
sbb
adcl
movsb
mov
sub
cmc
mov
loop
hlt
outsl
testb
mov
xor
push
dec
push
xor
xorl
mov
jmp
shl
cs
sbb
xchg
aas
mov
leave
push
shrb
jle
xchg
or
sub
mov
mulb
icebp
movsb
je
dec
dec
stc
sub
mov
pop
cld
sbb
mov
cli
xor
push
aam
sbb
adc
popl
add
sbb
out
inc
fcmovne
adc
pop
xlat
push
mov
ret
int3
mov
mov
aas
jge
pop
rclb
add
aad
gs
mov
dec
cmc
push
test
jb
adc
or
sarl
lahf
in
adc
das
pushf
clc
popf
dec
je
push
daa
fwait
dec
aaa
add
daa
das
dec
jno
ja
mov
dec
xlat
xchg
fadd
out
xchg
fistps
rol
clc
jp
scas
pop
leave
loope
out
cmp
jo
pusha
adc
add
dec
mov
inc
std
jl
inc
negb
jne
insl
out
mov
adc
ja
addl
and
cmc
inc
testl
xchg
mov
lret
push
jp
and
stc
jl
fmul
rorb
mov
insl
repz
jl
jae
mov
pop
jle
out
inc
push
fs
in
dec
xor
movsl
cmp
fstps
push
ss
or
in
pop
mov
clc
xchg
adc
data16
jnp
sub
cmp
or
cmp
xchg
mov
out
orb
sti
adc
call
cmc
and
mov
sar
mov
fucomip
std
std
das
and
push
shl
dec
xor
aaa
shl
cmpsb
rorb
test
mov
mov
scas
pop
sub
xchg
mov
sub
insb
and
insb
daa
mov
jns
add
jae
fst
jb
addb
adc
adc
adc
mov
adc
jae
test
jle
jmp
and
and
cmp
mov
int3
add
rol
aam
mov
repnz
pop
sub
dec
and
pop
mov
stc
shr
xchg
xchg
lcall
cmc
sbb
cwtl
add
push
dec
mov
mov
fildll
sub
inc
repnz
ds
jg
add
sbb
aaa
scas
ljmp
mov
xlat
jae
stos
fidivs
cmp
fs
and
outsl
aaa
cmp
mov
mov
jge
sbb
add
xchg
sub
ret
xchg
loopne
outsb
cmp
cmp
call
push
loope
push
inc
gs
rcl
xchg
out
push
mov
push
shrl
xor
and
es
add
inc
fcmovnbe
fisttps
jno
mov
jle
pop
cltd
call
bound
lock
sub
add
cvtps2pi
lock
fstps
mov
mov
mov
lock
xchg
xor
or
fwait
sbb
lahf
jl
sets
adc
ljmp
fisubrs
push
stos
jl
loopne
jl
pusha
cmpsb
cmpsl
and
popa
pop
and
pusha
pop
sub
and
add
mov
xchg
pop
cmp
mov
cmc
xchg
fwait
stos
pop
pop
fnstcw
sti
dec
adc
mov
jne
fistl
nop
jg
test
divl
adc
imul
inc
dec
add
mov
ja,pn
sub
in
mov
mov
mov
dec
cmp
packuswb
arpl
add
ljmp
int3
insb
xlat
pop
dec
in
jecxz
incl
movsl
and
mov
pop
js
push
mov
cmpsl
add
outsl
test
sti
jecxz
cmc
clc
mov
or
popf
cwtl
nop
adc
push
xchg
nop
adc
jle
ret
in
scas
rclb
sbb
int
call
cmp
jle
mov
in
or
fwait
inc
push
iret
xchg
js
mov
movsb
mov
push
inc
lods
pop
and
popa
loop
pop
inc
stos
push
lret
mov
push
mov
cmp
xor
pop
cs
test
push
popa
cmp
ss
and
ficompl
popf
inc
mov
sbb
jle
cmp
call
test
loope
dec
add
cmp
xorl
mov
out
inc
mov
push
xchg
inc
daa
cs
test
mov
add
push
inc
push
jl
cld
aad
pop
inc
pop
loop
rolb
sbbl
ret
push
push
pop
push
pop
loopne
xor
xlat
mov
rclb
mov
movsb
aas
mov
mov
mov
stos
jmp
mov
push
jno
xorl
mov
lods
das
lea
fstps
add
add
pop
dec
dec
cld
imul
loope
cmp
sti
rcrb
addb
inc
movsl
dec
addr16
sub
mov
addb
je
fildll
sarb
movsb
pusha
call
push
sarl
scas
dec
es
clc
sbb
pop
push
shll
push
xor
in
xlat
sbb
cmpsl
gs
jbe
das
imul
jne
loopne
cli
popa
stos
pop
or
jns
inc
adc
add
data16
xchg
stc
cmp
data16
lea
dec
mov
jo
jae
xchg
xor
mov
mov
xor
outsl
cmpb
popf
add
pop
jecxz
xchg
sbb
scas
lods
add
sub
sbb
mov
sar
sub
popf
sbb
xchg
scas
and
or
jp
enter
dec
fs
jo
jb
test
xor
pop
ficoms
pop
xchg
sub
jg
enter
pop
testb
sub
arpl
subl
daa
test
lret
addr16
aam
pop
cmp
clc
xchg
push
fcoms
add
bound
fwait
push
test
inc
sbb
popf
inc
je
cld
out
lds
lahf
fdivrp
lds
aam
lahf
mov
into
imull
shrb
sahf
cmc
push
sub
mov
aad
pusha
sub
inc
xlat
ficoms
lret
test
gs
push
fstpt
sub
fwait
into
lahf
jl
adc
or
lahf
adc
std
ret
enter
mov
clc
cld
shlb
rorl
sbb
fbld
xchg
fwait
jb
xor
or
mov
push
adc
jg
cmp
ds
sub
xor
das
repnz
pop
leave
out
fsubrs
fwait
pop
sbb
cmp
mov
stos
sti
jge
mov
pop
push
cs
mov
ss
mov
pop
adc
inc
and
js
or
je
and
push
dec
push
adc
insl
loope
pop
fidivrl
adc
lods
insl
push
adc
and
je
out
call
sbb
mov
scas
xor
mov
lahf
loope
inc
shrl
mov
cs
jmp
cld
aam
mov
sarb
cmp
inc
pop
mov
movsb
sub
xor
or
movsb
or
jge
imul
inc
xchg
xchg
das
lds
pop
outsb
scas
ja
loopne
sub
shll
repz
insb
pop
lcall
clc
lret
mov
aam
sbb
add
jmp
das
enter
loope
mov
cmp
xor
in
js
or
clc
daa
cmp
sub
add
out
xchg
xchg
inc
mov
stc
lods
mov
rorb
mov
cwtl
jl
jo
cmpl
repnz
push
outsb
fistpll
add
lds
pop
mov
jno
pushf
add
pop
sti
xlat
push
cmp
inc
xor
jns
scas
mov
jno
sub
jmp
mov
dec
mov
add
push
movsl
jmp
push
lods
sub
mov
fwait
daa
adc
push
ljmp
jae
xchg
aaa
xor
into
bound
jb
mov
xchg
out
hlt
sub
and
movsl
sub
test
and
rcll
sbb
mov
inc
cmpsl
sbb
and
imulb
stos
jo
ss
or
mov
inc
push
loop
inc
pushf
rorl
andb
xchg
lock
stos
adc
push
xor
popf
in
jns
push
and
sub
add
adc
hlt
push
inc
popf
push
lods
out
inc
mov
mov
fucomip
mov
mov
stos
or
aaa
bound
push
pop
bound
mov
cmp
jno
push
imul
iret
clc
xorb
les
and
dec
add
dec
subb
mov
js
dec
int
mov
add
dec
test
scas
push
xchg
sub
inc
or
pop
or
dec
mov
mov
imulb
xlat
mov
xor
sbb
movsl
jmp
jne,pt
arpl
lret
adc
xor
mov
adc
mov
jnp
divl
in
repz
nop
sub
xlat
dec
call
gs
fwait
or
test
mov
out
test
aaa
add
push
or
and
inc
push
shll
aad
jl
cmp
pop
mov
stos
insb
icebp
mov
xor
out
out
daa
je
sbb
movsb
inc
cmp
adc
push
bound
stc
xchg
mov
lret
cltd
xor
xchg
pop
loop
cmc
adcl
add
cli
add
js
std
mov
add
mov
push
inc
add
lods
mov
pop
jle
inc
lea
pusha
test
push
mov
out
mov
mov
ret
loop
daa
and
or
shl
inc
push
test
sub
fildll
imul
imul
lods
ja
and
in
push
and
add
sub
cmpb
and
mov
in
shrb
cs
or
mov
xor
push
mov
sbb
jae
xor
mov
xchg
arpl
sbb
add
xchg
jbe
dec
mov
mov
jns
jle
cmc
ret
je
sbb
pop
pop
pop
rorb
add
pushf
sarb
xchg
xor
les
mov
and
leave
cli
outsb
push
sbb
fs
add
xor
push
or
loope
popa
pop
xlat
inc
pop
mov
lret
adc
imul
add
push
loopne
dec
sahf
dec
popa
pusha
shlb
out
mov
sub
addr16
loope
data16
mov
cmp
jecxz
out
sub
jae
psrld
fnsetpm(287
inc
test
xlat
scas
dec
sbb
rolb
adc
or
jmp
sbb
lods
mov
dec
in
pop
push
cmp
pop
add
mov
push
push
clc
pusha
fisttps
xchg
or
pop
in
ljmp
rcll
inc
sbb
das
xlat
xchg
mov
shl
push
mov
mov
and
xor
das
add
test
xchg
pop
les
push
je
sub
cmpsl
or
mov
dec
dec
fmulp
dec
add
add
aas
inc
pop
popa
xchg
in
out
push
mov
repnz
add
notl
je,pn
setno
mov
inc
inc
imul
lods
lds
out
std
lods
in
rorl
cmp
inc
insl
adc
push
stos
fs
icebp
inc
xor
push
loop
stc
mov
sbb
mov
cli
ret
aaa
sub
or
mov
xor
dec
jmp
sub
mov
out
ljmp
push
inc
sbb
sarb
jb,pt
xor
lds
or
mov
mov
jle
aaa
lods
lcall
stos
jo
sahf
mov
sbb
test
scas
sahf
dec
shrb
adc
lods
inc
push
dec
push
pop
push
testl
mov
add
cmp
psubusw
dec
dec
cmp
fisubs
aam
stos
lret
je
iret
in
inc
push
scas
xor
lods
mov
pusha
add
add
aaa
out
sbb
or
mov
loope
out
and
sub
and
mov
repnz
rcr
and
xchg
int
aas
dec
imul
mov
inc
cs
and
jae
es
sti
xchg
mov
popa
dec
dec
shlb
sbb
cltd
mov
movsl
sbb
xchg
mov
jle
add
jae
clc
shlb
arpl
pop
jge
push
mov
std
sar
fwait
je
cmp
fmull
idivb
mov
or
push
or
xchg
divl
insl
lahf
jg
pop
mov
jecxz
mov
rclb
mov
xchg
popa
sbb
mov
pusha
push
out
and
or
add
mov
push
mov
idivb
xor
dec
clc
push
xchg
cmpsb
popa
daa
stos
adcl
jecxz
adc
loopne,pn
add
loope
pop
mov
pop
push
mov
xor
fidivl
jno
push
push
je
lret
mov
sbb
mov
pop
sub
xchg
call
stos
and
scas
sbb
lods
into
daa
je
sbb
mov
std
cmpsb
xchg
and
lret
test
iret
pop
cltd
loop
push
xchg
pop
rolb
mov
inc
daa
jb
or
cmp
mov
stos
sbb
mov
add
icebp
xchg
sahf
mov
int
add
xchg
je
das
les
xor
jno
mov
aaa
dec
dec
pop
data16
inc
xor
and
out
jecxz
jb
mov
call
leave
popa
sub
or
pop
mov
cmp
dec
dec
stc
lds
dec
jmp
xchg
fstps
fdivrs
imul
push
fstl
mov
outsl
pop
call
fwait
sbb
add
fmuls
repz
sahf
jno
mov
mov
adc
mov
push
std
inc
xchg
int
outsb
leave
inc
cmpsl
jo
xchg
cs
push
jns
sti
inc
cs
mov
inc
xor
sbb
lahf
mov
mov
cmp
mov
push
mov
xlat
sbb
push
jb
sub
mov
fcomps
je
hlt
xor
pop
int
mov
imull
sub
add
jae
mov
shll
xchg
jno
inc
and
lods
adc
cltd
xorb
mov
enter
imul
pop
in
into
lods
cmp
mov
jno
jae
add
xor
ret
imul
lret
loope
sbb
or
stos
jae
nop
and
cmc
sbb
adc
repz
push
aaa
add
les
into
sbb
add
neg
mov
outsl
xchg
dec
adc
push
add
lret
sbbl
cmp
mov
in
xchg
inc
or
mov
hlt
negb
dec
out
xchg
leave
xchg
lock
jg
dec
pop
lret
xor
mov
gs
test
sbb
or
popf
xchg
rclb
sub
pop
cltd
inc
loope
and
jecxz
or
push
js
dec
add
es
cmp
add
push
sbb
or
xor
into
inc
test
outsb
ss
mov
cmp
mov
mov
xor
fildll
arpl
mov
fisttps
push
aas
int3
lods
ss
repz
mov
gs
insb
fcom
int3
xchg
aad
lret
xchg
lods
into
adc
pop
xchg
mov
out
add
rorl
sbb
sub
cmp
int
imul
mov
out
cltd
dec
xchg
jmp
fadds
xchg
mov
popa
xor
push
cmp
pusha
rcrb
push
push
adc
test
enter
jns
addb
xor
insb
pop
sub
pop
sub
jns
iret
lcall
enter
aaa
pop
movsl
mov
fwait
pop
mov
mov
ljmp
xor
bound
aaa
inc
sarl
roll
mov
leave
or
mov
imul
pop
rep
insb
repz
std
sarb
js
jg
push
add
jecxz
xchg
out
insl
aas
mov
sub
xor
aad
jle
stc
cmp
scas
mov
imul
push
testl
xchg
xchg
jo
cmp
out
scas
pop
out
add
inc
xlat
insl
rcrb
into
cmp
enter
push
mov
or
cmp
xchg
jp
mov
mov
cmp
cmp
mov
or
push
pop
ljmp
xor
movsl
xchg
adc
push
ljmp
jecxz
lret
mov
or
pop
adc
call
nop
push
fsubrl
pop
sub
ds
add
sub
pop
in
add
aad
daa
loope
call
cmp
jnp
xchg
cmpsl
imul
xadd
orb
push
dec
xor
test
scas
test
fadd
mov
cmp
adc
xor
and
add
inc
sub
inc
cmp
cmp
arpl
inc
fiaddl
sbbb
xor
lcall
out
xor
or
loope
cld
clc
pushf
popf
mov
mov
jp
mov
xchg
pusha
mov
inc
idivl
cmp
mov
ja
rolb
xorb
int3
lret
jecxz
mov
xchg
push
ror
inc
inc
loop
xor
pusha
adc
mov
mov
and
dec
movsl
cmpsb
xor
sub
aam
mov
out
gs
jle
dec
daa
add
movsb
imul
mov
lret
add
rorb
push
les
repz
lret
xchg
sbb
mov
and
int3
cmc
imul
js
add
xor
jne
ret
adc
push
testl
outsb
in
cmp
jecxz
pop
aas
cmp
iret
rol
cmp
sub
inc
xor
incb
xor
mov
or
sub
jo
les
sub
test
sub
mov
mov
jno
push
push
fsubrp
pop
cld
gs
int3
repnz
jne
scas
and
jecxz
pop
mov
mov
int3
mov
add
mov
and
fs
mov
lcall
out
or
pop
cmp
push
add
sbb
cwtl
jo
shl
pop
popf
mov
push
cmp
and
sub
repnz
push
cmp
jns
or
cld
or
xchg
xor
out
push
enter
pop
aas
stos
mov
or
rcl
cmp
arpl
not
jecxz
xor
ret
mov
and
scas
out
test
cmp
mov
push
cmp
and
dec
arpl
icebp
adc
xchg
mov
push
stos
push
jmp
js
xor
mov
mov
sti
loope
lret
jmp
shll
pop
xor
lds
inc
popf
enter
cmp
inc
pop
sub
int3
lcall
mov
aas
xchg
arpl
sub
xchg
and
fwait
out
push
add
fcoms
add
in
fmuls
mov
clc
hlt
ljmp
mov
rcrb
mov
mov
sub
or
insl
jno
pop
fwait
mov
xor
in
popf
push
fisubl
out
out
movsb
pop
xor
outsb
xchg
pop
mov
xor
cmp
in
ret
int
aam
push
loop
dec
and
push
les
outsb
inc
add
or
sbb
int3
push
pop
pop
and
imul
lock
cwtl
aad
imul
sub
mov
pusha
xchg
xchg
pop
lahf
daa
jbe
jo
push
jp,pt
imul
xlat
mov
dec
sbb
add
out
xchg
sti
adc
jno
lods
sub
or
stc
cmp
sahf
gs
cmpsl
sub
push
jns
cld
shl
xchg
and
xchg
pop
jno
or
cmpsb
test
es
sbb
jmp
dec
popa
repnz
lcall
inc
inc
ds
popf
or
test
push
inc
out
aas
int3
ret
mov
add
in
sbb
imul
shl
and
push
test
push
add
mov
pop
mov
lss
jo
mov
ja
es
xor
push
fsub
cmp
mov
imul
pop
lods
outsl
iret
jbe
sahf
sti
mov
or
jns
test
mov
dec
imul
sub
xchg
out
outsb
mov
insb
adc
daa
les
sub
cmp
cmc
push
xor
jo
sbb
adc
xlat
ljmp
push
mov
push
outsb
adcb
ss
jp
aam
ret
mov
jno
iret
mov
scas
cwtl
in
out
cmp
inc
lret
loopne
xchg
out
pop
scas
lea
loope
sarl
sarl
pop
stos
add
mul
push
xor
mov
out
scas
pushf
leave
adc
xlat
mov
mov
pop
test
lock
das
sbb
sbb
push
xchg
cmp
ficoml
xchg
js
aam
jae
jg
in
and
inc
mov
pop
mov
std
ss
jecxz
dec
push
in
call
mov
push
push
inc
notl
and
jg
xchg
es
in
push
leave
mov
xchg
fld
and
mov
xchg
loopne
pop
inc
pop
icebp
mov
mov
dec
lret
mov
shrb
ds
cmp
pop
xchg
mov
std
imul
dec
test
or
and
sbb
shll
inc
shlb
jl
add
pop
or
xchg
in
scas
mov
popf
js
lock
mov
vpavgw
adc
hlt
dec
cmp
mov
or
jae
out
daa
jae
int3
pop
int
out
data16
scas
loopne
inc
fisttpl
idivb
test
jg
jp
addr16
dec
mov
xchg
jo
add
cmpsl
mov
gs
gs
pop
outsb
pop
gs
jg
lcall
and
or
or
push
orb
sbb
movsb
pop
mov
jp
test
fisubrl
xor
shlb
shr
mov
cli
cmp
xchg
add
mov
mov
call
je
lret
sbb
xlat
add
movsb
sub
mov
push
cltd
aas
fyl2x
pop
jne
xchg
mov
mov
sahf
cmc
les
and
jmp
and
fisubl
daa
and
xchg
xlat
notl
sub
cli
push
dec
sbb
ljmp
push
leave
cmp
push
mov
jp
pop
mov
pop
out
daa
xor
pop
outsb
lea
fisubrs
add
insl
sub
adc
mov
sti
movsl
orl
or
icebp
aam
call
rcr
daa
mov
mov
popa
inc
xchg
dec
pop
gs
mov
xor
cli
adc
dec
xor
mov
int
sbb
pop
pusha
int3
shll
jge
xor
pop
sub
cld
lock
fstl
jae
xor
les
add
mov
adc
adc
popf
xchg
adc
lea
gs
inc
jmp
mov
mov
faddl
adc
enter
or
les
xchg
xchg
test
cmp
mov
sub
xor
ds
push
mov
inc
mov
lret
movsb
push
adc
mov
or
testl
sub
loopne
push
mov
add
inc
or
pop
divb
popa
cli
mov
inc
int3
jge
imul
cmpsb
andl
notb
adc
cmp
movsl
fs
sbb
mov
ds
dec
fs
jnp
pop
jmp
sbb
into
loopne
std
jmp
push
fisttpl
insl
cmp
into
adc
xlat
xchg
loope
or
enter
mov
cmp
pop
jl
push
cli
push
cwtl
cmpb
pop
stos
fimull
imul
pop
mov
orb
pop
cmp
dec
shlb
call
push
inc
pop
cs
movsl
pop
cmp
sahf
xchg
adc
rorl
and
xchg
stos
je
call
lods
mov
mov
sbb
or
and
dec
mov
inc
sarb
popf
mov
cmpsb
push
and
adc
lahf
add
mov
test
jl
sub
add
insl
fldt
out
or
or
out
mov
jbe
decb
repz
outsl
jae
mov
cmp
in
out
push
pop
and
mov
adc
and
out
lds
int
xlat
jo
js
mov
jbe
or
cmpsb
xchg
push
rol
pop
test
mov
in
xorl
iret
cwtl
icebp
mov
incb
adc
or
add
adc
stos
xchg
xor
aad
push
popa
repz
or
inc
dec
in
cld
out
cltd
mov
dec
ret
ret
fs
and
fs
inc
xor
xchg
push
jmp
push
add
push
ja
add
push
pop
das
push
dec
mov
adc
mov
mov
fsubrl
pusha
test
icebp
cmpsl
lds
mov
inc
leave
arpl
sub
sbb
mov
sti
cmc
xchg
sbb
stc
adc
lcall
fists
sbb
jg
xor
shll
repnz
push
addl
stc
ss
cs
add
push
mov
das
call
out
jecxz
je
push
cmp
addr16
xchg
daa
leave
aas
stos
add
sbb
xor
fidivrl
jbe
sbb
pop
cmp
push
mov
xchg
xchg
in
mov
mov
push
push
xchg
daa
sub
repnz
pop
cmp
jo
cmpb
sub
jno
mov
fidivrs
loop
sbb
jns
rcl
loopne
mov
xor
xchg
adcb
or
aam
dec
enter
xor
mov
cmp
inc
add
push
sbb
pop
and
mov
fdivr
leave
adc
jp
out
jbe
js
xchg
cmp
cwtl
iret
mov
sarb
sub
sti
xlat
ret
mov
cmp
push
mov
stos
das
outsb
mov
shrl
jmp
adc
inc
or
divb
into
mov
push
xchg
mov
push
push
iret
popa
loop
test
adc
pushf
mov
cltd
xor
shlb
cmp
xchg
daa
mov
mov
inc
dec
movsb
icebp
adc
sahf
ficompl
mov
and
lea
test
xchg
mov
outsl
mov
lods
jl
inc
mov
cmpsb
leave
test
lods
inc
ljmp
pop
adc
push
js
cmc
divb
arpl
dec
jnp
dec
or
dec
mov
jnp
or
out
insl
mov
xorl
int
call
cli
xor
lret
in
aas
stos
fisubs
adc
int3
rcll
in
rcrl
adc
into
stos
aad
xor
adc
xor
cmpsb
ja
pusha
in
movsl
sub
loop
fs
pop
cmp
ret
pop
lret
das
stos
shr
xor
stos
popf
dec
cmpsl
arpl
add
push
repz
out
mov
mov
and
outsl
cmp
fbld
out
sub
in
out
inc
mov
xor
add
mov
int
xchg
pop
push
pushf
lock
lock
mov
imul
push
std
pop
pop
mov
mov
mov
jg
jp
clc
inc
hlt
or
push
pop
mov
pop
outsl
mov
dec
fs
dec
sbb
cmp
jne
ror
lock
mov
ja
mov
and
jp
testl
xchg
jmp
mov
pop
mov
push
leave
push
xor
push
test
popl
inc
fs
and
ret
test
dec
imul
mov
mov
pop
add
jmp
jg
inc
mov
lds
pop
mov
testl
adc
cmpsb
or
add
in
cmp
jbe
dec
loop
dec
scas
xor
xchg
imul
push
push
or
addr16
aas
pop
fisttpll
shr
outsb
pop
mov
hlt
rcrb
out
lods
std
ja
and
and
leave
pop
addb
cmpsb
daa
hlt
and
mov
aam
add
push
lcall
insl
and
out
cbtw
js
mov
xchg
in
pop
mov
mov
push
test
sbb
sahf
cmp
and
mov
adc
push
add
add
xchg
fldt
dec
iret
and
sbb
je
sub
out
pop
and
pop
leave
xor
bound
mull
xchg
outsb
lods
addb
fsubs
jle
stos
mov
xor
arpl
pop
shll
pushf
in
mov
lret
loope
jmp
andl
push
enter
dec
xacquire
ret
mov
aas
sbb
inc
and
and
push
cmpsb
pop
ds
popf
xchg
movsl
jbe
fwait
lahf
push
push
add
les
mov
jb
inc
mov
in
pop
mov
pop
dec
dec
roll
xchg
jle
xchg
shll
in
leave
mov
adc
icebp
mov
js
push
icebp
mov
pop
outsl
jmp
test
into
push
dec
fbld
ret
fcomps
cltd
movups
addl
pop
jl
lock
mov
mov
cwtl
pop
lods
loopne
pop
lods
pop
adc
lods
loop
pop
mov
repnz
mov
fistl
add
or
jmp
arpl
testb
and
jle
fidivrs
popf
fimull
xchg
dec
insb
aam
jo
dec
data16
lcall
xchg
cs
pop
lcall
movsb
in
orl
inc
lods
xorl
cmp
dec
and
push
pop
sti
in
popa
movb
pushf
nop
out
je
and
movsb
lcall
mov
insb
les
dec
and
jne
outsl
and
lcall
mov
jns
mov
mov
int3
mov
pop
je
push
jg
fiaddl
jnp
mov
and
out
stos
cld
sahf
fyl2xp1
adc
iret
dec
xchg
loop
inc
imul
cld
fnstenv
aaa
test
dec
ds
incl
add
stos
jnp
mov
jns
loop
sti
jno
lea
je
inc
decb
and
loope
dec
mov
sbb
test
push
inc
in
pop
or
icebp
pushf
stos
mov
mov
shl
lret
stc
push
orb
push
sbb
jmp
jno
jmp
mov
jno
jno
push
xchg
movsb
repnz
push
les
in
ds
inc
sub
gs
int3
xchg
mov
fistpll
xchg
and
xor
mov
mov
lcall
jecxz
gs
push
das
push
inc
add
mov
cmp
xor
pop
adc
mov
mov
xlat
aaa
imul
mov
pop
stos
sbb
pushw
push
sub
loop
aam
test
test
sub
aas
push
jmp
loope
sub
mov
rclb
cmc
aad
dec
fistpl
cltd
movsl
mov
push
mov
imul
hlt
and
cs
push
movsb
idivb
lods
xchg
or
dec
roll
add
pushf
incb
aad
andnps
inc
jge
mov
mov
inc
push
mov
lds
out
sbb
stc
aam
aas
imul
jnp
sub
jmp
std
shlb
mov
inc
and
lcall
ds
icebp
imul
inc
mov
add
or
add
in
cmpsb
pop
sub
xor
cwtl
cmpsb
pop
xchg
cmpb
sbb
sti
xor
xchg
xchg
bound
sbbb
mov
xchg
sbb
test
cmp
and
movsl
lahf
ja
int3
dec
or
push
inc
movsl
dec
adc
jbe
jecxz
and
nop
cwtl
jae
mov
cltd
imul
loop
mov
loope
rolb
shl
mov
sub
adc
push
jns
mov
push
insb
mov
insl
push
lds
mov
xchg
addr16
cmp
xchg
mov
lea
and
lock
rclb
xor
repnz
inc
imul
cmp
das
and
or
and
xchg
popf
mov
ret
mov
scas
push
out
std
cwtl
cwtl
scas
je
add
enter
sti
stc
in
jge
mov
iret
fcmovne
pop
lea
sub
in
add
scas
das
mov
movsb
ret
sub
mov
clc
mov
xor
pushf
in
or
push
daa
into
shlb
ds
xchg
fnstenv
jae
xchg
stos
adc
inc
into
mov
xlat
leave
scas
pop
movsl
int
lods
lds
sub
jne
pop
xchg
out
and
add
mov
pop
jne
in
xlat
lret
mov
mov
ljmp
rorb
test
xor
sub
sti
push
add
dec
mov
xchg
jmp
push
sub
clc
mov
lahf
hlt
jnp
jle
inc
call
fisubs
mov
out
gs
fwait
xchg
push
cmp
pop
mov
sub
pop
pushf
mov
mov
nop
lods
jbe
test
repnz
popf
jne
and
xorl
aam
out
add
cli
push
lret
int3
push
leave
cmp
ds
and
mov
mov
mov
mov
in
loope
inc
pop
push
aas
push
bnd
inc
std
cmpl
xchg
test
ret
in
adc
mov
test
inc
mov
and
sbb
or
cli
int
adc
aaa
int3
jo
dec
dec
mov
mov
ljmp
mov
add
fs
ljmp
and
inc
mov
mov
xor
leave
inc
loope
dec
fcompl
fdivrl
pop
xor
out
adc
sub
xor
repnz
pmaddwd
pop
lock
push
ret
jae
and
mov
pop
and
out
add
shlb
fidivl
pushf
mov
mov
iret
cmp
pop
dec
imul
cmp
mov
lret
xor
mov
daa
push
xchg
mov
sub
or
roll
rcrb
push
jg
inc
mov
pop
mov
jb
outsl
jno
dec
sbb
std
xor
shl
sbb
mov
adc
dec
shrb
pop
rcll
lds
sbb
repz
imul
stc
pusha
insl
xor
movl
test
nop
call
add
and
pop
xchg
mov
push
cmp
fs
aam
adc
aaa
push
cmc
jnp
xchg
cmpsl
add
out
jecxz
xchg
adc
loope
adc
test
repnz
lea
add
insl
fsubrl
stos
cmp
mov
mov
aam
cwtl
cld
mov
jb
jb
in
mov
pop
sbb
and
adc
pop
loop
sahf
inc
fwait
inc
adc
subl
int
or
or
inc
out
jmp
stos
inc
jno
jbe
scas
mov
pop
xchg
jecxz
pop
das
jno
es
test
and
mov
shrb
sahf
int3
mov
push
shll
xor
dec
xor
xor
ds
pop
gs
repz
js
mov
out
jb
adcb
stos
lods
leave
fisttps
in
stc
xchg
popa
jno
sbb
mov
shlb
adc
xchg
rorb
adc
dec
lods
pop
push
jmp
mov
sub
mov
les
pop
jge
cmp
ret
loopne
arpl
jmp
dec
mov
pop
mov
jmp
movsl
nop
out
test
in
inc
cmp
mov
cltd
adc
inc
add
xor
sbb
xor
push
stos
xchg
mov
push
loop
lret
mov
fdivrl
push
dec
jle
mov
cmp
in
popf
push
mov
shll
dec
push
out
mov
sahf
jnp
das
mov
jecxz
bound
lcall
scas
sbb
sbb
fsub
scas
imull
xor
xchg
mov
dec
dec
push
fnstenv
jb
out
shr
notb
ljmp
inc
ret
test
mov
push
icebp
insb
sub
and
mov
inc
lods
mov
or
lods
lea
xchg
and
faddl
xchg
rorl
outsb
pop
jnp
bound
jmp
rcll
jne
nop
mov
arpl
mov
aaa
stc
imul
ror
sti
push
ja
std
xchg
cmp
je
lock
mov
fisubrl
sub
lds
add
xor
push
mov
fstps
in
or
cmp
pop
xchg
ret
mov
push
rclb
xor
sahf
pop
inc
cld
mov
out
jb
push
test
mov
das
sbb
adc
push
out
pop
testl
sarl
cmp
dec
pop
cltd
push
cs
rcrl
pop
hlt
in
mov
imul
push
mov
push
xor
pop
dec
jb
stc
mov
dec
decb
xor
insb
je
jbe
mov
je
xchg
mov
xor
jl
imul
add
mov
jne
sbb
gs
sarb
cltd
test
ficompl
adc
adc
call
add
ljmp
insl
or
and
adc
inc
cs
adc
dec
insl
aad
jae
xchg
icebp
addr16
inc
jmp
jns
in
sub
fdivl
clc
outsl
fstp
les
inc
lahf
cs
rcll
cmpsb
mov
stos
push
jo
test
pop
fmuls
or
sbb
popa
sahf
lcall
cmp
dec
enter
dec
pop
dec
testl
loope
or
mov
cli
push
cmp
outsb
imul
cmp
stc
add
ret
mov
mov
jno
fildl
outsl
andb
inc
dec
jp
inc
jne
pop
dec
pusha
or
pushf
cmpsl
sub
add
fst
push
jmp
push
aaa
mov
addr16
jg
cli
xor
xor
sbb
and
jecxz
shrl
sbb
mov
mov
daa
hlt
popf
jl
push
sub
cli
cli
enter
mov
xchg
ja
fisttpll
ret
ds
cs
xor
pop
fisttpll
adc
inc
cmp
xchg
imul
adc
add
push
pop
loop
lods
cmp
dec
push
loopne
fsubrs
fwait
dec
out
adc
sub
mov
mov
adc
andb
mov
test
mov
sbb
mov
lock
sbb
int3
ja
in
into
push
or
mov
push
push
mov
mov
imul
xchg
mov
xchg
fmuls
xor
push
pop
sbb
ja
xchg
sbb
adc
movsb
jns
jno
lds
les
mov
xlat
lret
lcall
fnsave
xchg
xor
les
popf
cmp
push
out
sub
lods
pop
pop
mov
les
fsubrl
inc
inc
cmp
xchg
add
je
pusha
ficomps
mov
sbb
mov
addl
xchg
cmp
adc
filds
push
xchg
shrb
jne
pop
cmp
andb
test
adc
incl
mov
ffreep
pop
in
in
rcrl
jno
push
ds
stos
dec
les
jp
out
jns
pusha
pop
cltd
fld
lds
cltd
xor
mov
xchg
fistps
pushf
push
jns
and
inc
ret
sub
nop
lea
jne
pushf
jae
hlt
repnz
add
pop
cmp
fldt
dec
xor
stos
jb
xchg
pop
pushf
popf
lock
rcl
inc
mov
mov
popf
in
ss
mov
add
jno
leave
call
or
call
xor
leave
ds
fwait
cld
clc
sarb
inc
outsb
sub
call
xchg
sub
pop
mov
dec
sub
mulb
out
cmpsl
and
jl
adc
aaa
and
rolb
xchg
add
fdiv
inc
int3
push
cmc
push
push
fldcw
add
adc
push
xchg
popf
jp
mov
xchg
mov
jg
in
out
inc
cld
aam
push
cmpb
push
ds
out
pop
add
and
push
pop
out
and
jo
movsb
fneni(8087
pop
lcall
std
cmpsb
movsl
in
xchg
call
daa
fwait
mov
push
pop
sbbl
pop
shl
pop
ds
sub
adc
rorb
cmovge
jbe
bound
nop
fsts
jle
pop
outsl
and
lods
popf
sub
mov
stc
dec
mov
loopne
mov
leave
dec
mov
xchg
push
in
popf
xchg
xor
xchg
adc
lods
mov
aad
xor
lods
sbbb
movsb
cmp
pop
ficoml
repz
loopne
leave
imul
and
xchg
mov
ret
pop
adc
ja
scas
ja
jp
jnp
push
and
push
bound
ja
mov
and
cmp
mov
mov
mov
jmp
test
cmpsl
in
jae
push
mov
aam
std
and
cmp
xchg
arpl
decl
enter
repnz
outsl
hlt
xchg
fmull
lea
rcr
add
mov
mov
dec
cs
fdiv
ja
sbb
imul
sahf
sahf
xchg
hlt
fiadds
mov
jp
fisubrl
push
push
scas
pop
lods
push
sbb
inc
inc
popf
mov
mov
jb
mov
pop
out
dec
push
aam
enter
dec
dec
testb
repnz
mov
or
xor
mov
cli
popa
pop
sub
dec
push
xchg
aas
jmp
jb
imul
push
adc
int3
loope
push
ret
mov
lfs
sub
inc
dec
cmp
push
xchg
add
mov
in
inc
adc
test
test
scas
sub
mov
enter
xchg
mov
xchg
dec
in
cmp
or
cmpsb
lock
dec
movb
test
insl
negb
sbb
add
imul
fldt
push
out
jge
test
aad
and
jmp
sti
test
xchg
shll
ficoms
bound
cltd
pop
insl
mov
je
sti
insb
loope
cmp
es
mov
cmpsb
mov
movsb
xor
ficoms
scas
pop
xchg
cmc
aaa
mov
ds
loop
js
call
pop
push
mov
jb
lret
adc
mov
insb
nop
or
cmovp
iret
and
inc
pop
push
xor
movsb
mov
mov
leave
pop
lret
or
faddl
push
cmp
les
lods
add
lds
lcall
hlt
cmp
mov
and
dec
add
add
ret
pushf
fnstcw
push
and
push
scas
pop
cmp
cmpsl
scas
call
ja
jo
aaa
cli
fbstp
inc
xchg
movsl
mov
sbb
xor
stos
fldl
cmpsl
insb
scas
add
jmp
jnp
lret
jecxz
sti
shll
fs
cltd
pop
fwait
mov
out
pop
out
icebp
aad
hlt
stos
cmp
dec
push
inc
into
mov
mov
and
mov
push
insb
mov
arpl
movsb
xchg
outsb
loopne
push
adc
mov
fstpt
mov
sbb
test
js
inc
and
lret
mov
inc
daa
call
aad
or
jp
fdiv
pop
adc
fadds
mov
je
movsl
cmc
dec
sbb
in
and
lret
adc
mov
add
fs
ljmp
pop
mov
sub
sahf
xor
mov
cli
inc
int3
mov
insl
mov
xchg
jp
ljmp
cmc
in
or
fldenv
xchg
incb
test
sbb
fcmovb
inc
test
push
cli
subl
insb
push
andb
adc
mov
pop
lods
xlat
fistl
arpl
sub
pop
mov
xor
lcall
mov
push
fbstp
fldenv
mov
sti
lret
cltd
lahf
push
jne
inc
adc
pusha
aad
lea
xchg
xor
repz
push
rorl
loope
adc
sbb
or
shll
inc
push
test
pop
xchg
push
mov
sbb
xchg
jo
cmp
aaa
jae
mov
push
sbb
pop
fcomip
push
and
ljmp
push
xchg
fdivp
mov
jbe
mov
mov
jo
xor
int3
into
out
jle
push
sbb
icebp
cmpsl
cltd
jbe
cmc
daa
fwait
sub
pusha
fidivs
adc
lret
lcall
sub
daa
pop
fdiv
roll
rcrb
pop
mov
mov
addr16
inc
adc
sti
iret
jo
cmp
in
xor
mov
es
out
into
adcl
cmp
dec
cmp
sbb
sti
inc
cmp
bound
sbb
pop
and
mov
mov
stos
lretw
xchg
dec
and
fildl
rclb
xchg
mov
fstps
movsl
dec
adc
mov
pop
stos
lahf
mov
mov
push
mov
movsb
aas
rorl
mov
or
cli
or
inc
ss
add
dec
inc
mov
sbb
shlb
pop
and
cmp
in
cli
dec
ss
arpl
rorl
jno
jbe
xor
dec
push
dec
pminsw
fsubr
cmp
jno
adc
icebp
sub
je
and
mov
mov
loope
cmp
cmp
jp
repnz
int
and
insb
in
adc
lahf
mov
aas
push
jne
sahf
xor
jns
mov
push
les
xor
fnsave
push
or
imul
and
addl
xor
mov
inc
fwait
cmpsl
cmpsl
mov
and
xlat
ret
dec
or
push
push
jns
int3
adc
movsb
mov
jo
testb
pop
mov
inc
pusha
sbb
xorb
sahf
pop
lods
sarb
add
pop
mov
fcmovnu
mov
jmp
and
clc
mov
out
test
sub
in
ds
xchg
xor
mov
daa
shrb
push
aas
mov
imul
inc
or
lret
xchg
and
addr16
jmp
dec
mov
add
push
add
repnz
lret
rcl
push
and
or
dec
xor
or
lods
daa
out
sbb
das
mov
outsb
shl
ds
mov
xchg
cmp
dec
aaa
jg
mov
jns
jae
mov
mov
mov
icebp
js
fbld
xor
adc
pushf
jbe
lds
pop
enter
cmp
shlb
sahf
sub
and
jge
jmp
insb
dec
jecxz
pop
je
shl
push
lret
bound
mov
mov
pop
fdivs
inc
push
les
sbb
mov
test
lahf
aas
test
mov
fstpt
cmp
aad
xchg
cmp
xchg
push
lods
push
adc
adcl
inc
dec
or
sahf
sbb
lods
and
cli
das
pushf
mov
jle
and
sub
dec
lock
clc
jbe
inc
sbb
cld
inc
push
cmpl
jl
je
xchg
cmpsl
fcoms
mov
pusha
lret
xchg
pop
adc
sti
and
lock
testb
or
and
cmpl
out
popf
xor
add
sub
aaa
sbb
xchg
and
fs
xor
adc
pop
divl
bnd
clc
into
aad
jns
test
sub
mov
adcl
testb
in
push
pop
mov
xchg
jno
bound
ja
inc
mov
cmp
push
mov
jl
pop
xor
je
mov
pop
or
pop
int3
movsb
mov
xor
xchg
sbb
mov
pusha
arpl
mov
sbb
inc
jp
pop
pop
cwtl
pushf
mov
sbb
push
mov
dec
js
dec
push
lock
add
and
sub
push
loop
inc
or
sbb
lahf
sub
push
scas
icebp
dec
push
jae
sbb
test
rclb
lret
cmp
mov
xor
sbb
mov
dec
test
ret
outsl
jmp
sbbl
out
jle
mov
xlat
xchg
dec
sub
imull
ja
lret
sbb
xor
xchg
mov
fcomps
jge
je
repz
mov
fmull
add
lea
orb
insb
jle
xchg
adcb
enter
lret
push
sar
cmp
jne
dec
and
jp
push
pop
and
repz
cmc
in
sbb
sub
push
sarl
les
push
mov
mov
mov
and
add
dec
mov
and
nop
sub
lods
dec
push
adc
pop
xchg
push
idivl
pop
lret
das
adc
xlat
adc
imul
ret
xor
cmp
div
lds
jnp
or
ret
lods
scas
inc
lret
cltd
cmp
and
mov
jno
sub
enter
or
mov
xchg
fs
movsb
pusha
fldcw
ret
push
xchg
mov
movsl
adc
into
mov
fnsave
aaa
inc
dec
inc
xor
cmp
adc
sahf
shll
push
xchg
push
mov
mov
cmp
in
arpl
repz
lods
data16
pushf
mov
fistps
push
test
sub
cmp
je
popf
push
sub
leave
fbstp
mov
mov
loope
sub
in
cmp
push
ret
jmp
jle
mov
mov
icebp
mov
insl
dec
xor
xlat
imul
repnz
sbb
or
rcll
pop
out
mov
call
xor
xchg
inc
lock
cli
sub
shlb
loope
mov
mov
fwait
roll
dec
mov
xchg
xor
xchg
nop
in
leave
jecxz
rcr
in
pop
frstor
and
out
adc
jmp
and
xchg
pushf
mov
push
pop
imul
jno
xor
xor
mov
les
ljmp
mov
and
xor
in
in
dec
fcmovnb
mov
cli
lods
test
add
lods
daa
sub
call
pusha
xorl
and
xor
xchg
mov
ds
stos
mov
push
sub
jmp
xor
sbb
outsb
in
insb
icebp
or
cmp
mov
jo
add
out
leave
mov
rclb
shlb
aas
in
inc
clc
lret
negb
std
add
push
outsb
rcl
repz
lods
sahf
xchg
mov
mov
sbb
sbb
cs
fstps
and
imul
xchg
push
je
aas
sbb
push
fisttpl
cmp
iret
ja
ficompl
pop
dec
mov
jns
imul
cwtl
pop
out
movsl
inc
mov
mov
mov
mov
push
test
subb
sbb
pop
clc
fisubrs
test
xchg
push
xor
dec
test
mov
sti
rorl
inc
mov
ss
dec
cmpsb
push
fprem1
out
sub
jnp
adc
jp
test
and
test
dec
popf
in
xor
jg
cli
mov
xchg
mov
aas
fsts
xchg
rcll
mov
aad
push
jae
jbe
adc
push
pop
and
jle
lret
xchg
gs
test
dec
jb
inc
es
mov
negb
inc
cmp
cli
dec
nop
jp
cld
push
stos
mov
lods
int3
data16
and
xor
mov
mov
xchg
sbb
cmp
xor
sbb
in
xchg
int3
mov
xchg
cmp
inc
wrmsr
cli
movsb
mov
pusha
in
mov
test
and
lret
sbb
fistl
bound
and
clc
int
xor
or
pop
pop
add
dec
lock
add
dec
mov
lret
inc
dec
ja
inc
lea
add
std
clc
push
jns
sbb
pop
loop
fsub
xchg
mov
mov
sub
sub
fsts
inc
cli
sbbb
mov
les
int
or
mov
dec
xor
sbb
adc
xchg
cld
inc
cmp
sub
pushf
add
xor
mov
pop
inc
icebp
mov
fs
in
sti
xchg
dec
mull
pop
ror
push
adc
pop
dec
jg
inc
inc
mov
and
call
dec
or
nop
cmp
push
mov
lcall
lods
push
dec
dec
pop
out
sub
xor
aaa
in
in
mov
sub
dec
push
pop
xor
fldenv
push
add
adc
adc
fnstenv
arpl
mov
mov
out
xor
push
cmc
mov
jmp
pop
outsl
mov
movsl
push
mov
mov
lods
std
and
mov
sahf
pop
sbb
jbe
leave
mov
mov
in
call
mov
addr16
push
jae
and
inc
mov
mov
mov
fnstenv
and
cmp
imul
outsl
jne
jo
mov
adc
fst
imul
dec
loope
clc
and
mov
lahf
mov
lock
cmp
fucom
mov
mov
and
inc
cmpb
pop
out
popa
jbe
fwait
add
sub
mov
cmp
push
adc
mov
testb
fld
cli
out
leave
push
movsb
dec
lds
mov
xlat
add
pushl
adc
stc
ret
and
lods
or
test
dec
clc
jge
mov
movsb
lahf
mov
call
lret
fistps
adc
pusha
in
push
jo
ja
mov
pop
movsl
and
sbb
jne
cld
daa
jl
cmp
outsb
imul
mov
push
std
into
xchg
js
xor
je
cmp
mov
push
les
xchg
insb
test
sbb
lahf
xorb
mov
cmp
shlb
jle
rorb
mov
lret
push
stos
sub
dec
cmpsl
dec
out
ds
fnstsw
fcmovu
sub
in
xchg
sbbl
xchg
and
loopne
not
sub
popf
sti
push
sbb
fstl
fldenv
adc
shl
test
rclb
sub
mov
mov
hlt
in
mov
lea
rolb
call
stc
jp
outsb
jno
xchg
adc
scas
jg
adc
adc
mov
inc
jns
mov
jnp
cwtl
lret
fldl
mov
xchg
in
imul
jae
popf
lcall
adc
mov
xor
sbb
hlt
ret
dec
test
popl
push
mov
mov
ds
mov
sub
and
roll
mov
jg
cmc
imul
adcl
cmp
xchg
and
sub
pop
ljmp
push
rorb
pop
inc
insb
mov
push
dec
inc
xchg
pop
leave
test
jmp
sahf
shl
inc
mov
dec
rcl
or
mov
cmpl
adc
mov
cs
and
mov
imul
or
mov
cmc
mov
jno
and
faddl
mov
mov
cmp
sbb
ret
mov
lret
aam
shll
stos
shlb
out
mov
xchg
in
jle
mov
mov
loop
stc
pushf
ds
out
jns
ficoms
push
sbb
xchg
jae
mov
cmp
jb
inc
insb
jge
mov
test
mov
pop
shlb
mov
test
push
movsl
xchg
test
xchg
or
cmp
inc
outsl
xchg
aas
lret
mov
cmp
cmpsl
push
aaa
sub
leave
in
clc
xchg
jno
mov
adc
negl
roll
mov
call
mov
jno
sbb
ss
fbstp
jnp
add
stos
cmp
adc
mov
pop
rcll
out
add
jnp
xchg
cmc
ret
roll
dec
dec
push
out
cmpl
cmp
add
popf
mov
cmc
push
dec
bound
jg
pop
lods
les
test
es
pop
mov
insb
in
repnz
mov
dec
arpl
out
mov
int3
sarb
cs
mov
and
insb
cmp
iret
xchg
add
jl
xorl
cs
lds
fsub
insb
jno
mulb
pusha
adc
shlb
out
inc
das
sti
ficoml
push
in
and
sbb
inc
es
adcl
lods
jmp
mov
popa
fsub
dec
scas
sbb
fisubl
push
xchg
xacquire
in
push
mov
pop
inc
and
mov
addb
pop
scas
lods
xchg
dec
dec
repnz
aam
push
cs
test
inc
mov
xchg
daa
mov
arpl
mov
das
add
int3
push
push
xchg
mov
cmp
pop
sbb
jmp
pop
aam
bound
and
addb
xchg
xor
popf
inc
or
pusha
mov
jae
int
out
sbb
sbb
dec
test
xor
cmpb
or
or
adc
js
scas
insl
cmp
xor
imul
aam
pop
mov
xor
cs
out
mov
les
out
cld
cld
cmpsb
dec
filds
repz
jp
ret
xlat
incl
aad
push
add
aaa
mov
add
loope
pop
movsb
sub
mov
sbb
clc
mov
sub
add
rcrb
xor
inc
in
mov
xchg
dec
add
mov
mov
push
pop
hlt
jg
push
mov
cltd
in
cmp
xor
jle
or
push
dec
stos
std
sub
iret
mov
arpl
or
adc
lds
cs
pop
push
sbb
icebp
lds
imul
push
add
cli
push
inc
pop
mov
sbb
xor
pop
stc
mov
in
ljmp
les
out
movsl
push
or
push
xchg
pop
aad
repnz
das
add
stc
ja
cmp
arpl
rolb
or
testl
pop
cwtl
push
mov
cmp
insl
mov
pop
les
inc
sub
mov
and
fs
loopne
add
xchg
jecxz
test
mov
in
mov
lea
push
clc
push
inc
mov
push
lcall
js
fdivs
push
cmc
lret
add
int3
imull
out
xchg
aad
mov
addl
fistl
pop
adc
test
outsb
clc
sub
cld
in
cltd
ljmp
fsts
dec
and
roll
push
dec
ret
jl
fldl
mov
xchg
push
jae
mov
enter
in
add
nop
mov
addr16
bound
sub
out
movsb
hlt
ja
adc
leave
and
mov
xchg
mov
mov
sbb
pop
arpl
adc
and
addl
imul
xchg
push
jl
push
test
repnz
push
pop
mov
pushf
stos
popa
es
pop
sbb
and
xor
sbb
fwait
cmp
sbb
int3
mov
xor
mov
push
or
push
add
testl
roll
sbbb
hlt
sub
xchg
mull
out
aas
add
mov
inc
js
out
add
lods
loop
push
insw
arpl
add
icebp
insl
scas
jecxz
imul
ret
ja
pushf
inc
ret
sub
fdivr
popf
mov
aas
ja
ret
gs
mov
jnp
gs
pop
push
test
dec
jmp
ljmp
push
ret
mov
sub
inc
lret
fsubl
out
push
ss
sbbb
in
data16
mov
icebp
mov
fstps
mov
sarb
out
sahf
movsl
outsl
outsl
cmpb
add
lret
cmc
or
mov
in
jns
jle
dec
enter
or
lahf
xlat
scas
sbb
shrl
sub
in
push
xor
mov
xchg
xchg
cmc
insl
fwait
and
int
pusha
mov
inc
dec
xor
mov
mov
imul
cmc
inc
enter
sub
ret
push
sarl
outsb
lret
inc
xor
into
les
fsubrs
test
mov
ja
sub
cmp
loopne
inc
push
jg
les
pop
xchg
pushf
mov
or
mov
and
dec
out
jb
cld
push
jp
push
fnop
jo
ljmp
insl
jle
insl
push
jp
pop
xchg
cld
jg
cmp
inc
pop
imul
or
add
inc
xor
inc
sahf
jmp
scas
mov
xadd
cmpsl
jns
adc
jle
mov
stc
jns
or
hlt
imul
xor
fbstp
lods
popa
aaa
mov
and
xlat
sub
scas
outsb
lret
fcmovbe
js
pop
fsubrl
push
inc
sub
aam
add
mov
add
adc
pcmpeqw
and
mov
pop
push
loopne
rcrb
jp
scas
add
movsl
sbb
enter
in
cmp
xor
fwait
decb
mov
repz
mov
call
scas
outsl
xchg
lahf
jne
sar
mov
pop
out
jns
sahf
ja
xchg
pop
aaa
shll
daa
mulb
cwtl
pop
xchg
add
push
pop
jae
imul
sub
ret
and
nop
ja
adc
fldenv
lret
jle
daa
shrb
in
and
sub
inc
push
lock
inc
xchg
lds
pop
loopne
cmp
cwtl
push
mov
push
imul
pop
mov
and
xchg
addr16
xchg
into
or
out
mov
test
cmp
add
push
inc
sar
add
and
dec
cmp
sub
stc
cmpsl
iret
mov
inc
add
jo
sub
sbb
add
icebp
cld
in
js
lods
push
fidivl
fmull
mov
push
xchg
adc
xor
push
jmp
out
xchg
scas
test
mov
cmp
xor
dec
cmp
xchg
leave
pop
xor
add
mov
outsl
xor
jmp
outsl
popf
jg
cmp
addl
mov
and
daa
add
fcomps
bt
out
pop
ja
inc
pop
aam
fnstcw
pop
ds
pop
jg
cmp
inc
jbe
cmp
add
push
dec
jmp
pop
push
movsb
out
xor
mov
cmpsl
mov
shl
sbb
sub
mov
sub
sub
nop
or
cmp
imul
adc
and
rol
add
pop
mov
test
frstor
mov
xor
dec
in
rep
ret
fcmove
cmp
mov
or
fdiv
jmp
sub
dec
fdiv
jg
mov
lahf
clc
stc
xchg
out
pop
mov
sahf
fs
jno
jbe
pusha
adcl
adc
cmpsb
std
or
iret
call
sbb
xor
pop
sub
lahf
fs
xchg
in
add
jb
flds
push
jge
jg
push
xchg
pop
xorl
cltd
js
aam
inc
scas
mov
fs
lret
push
mov
mov
neg
cwtl
test
cmpsl
xorl
xlat
fnstcw
insl
pop
fwait
sub
addb
adcl
js
sahf
lret
fadds
or
mov
out
dec
mov
adc
sub
push
adc
insl
sub
sub
iret
adc
leave
cmp
inc
les
loopne
push
inc
xchg
call
xlat
add
fiadds
pop
hlt
xor
lahf
dec
aad
mov
int3
lock
insl
mov
or
mov
test
fisubs
xorb
test
and
cmpsb
nop
iret
sbb
push
add
js
sbbl
pop
ficoml
push
outsl
outsl
cmp
mov
pop
push
adc
adc
and
fsts
int
setnp
hlt
test
mov
adc
stc
adc
lret
mov
mov
mov
push
xor
pop
test
xchg
mov
xchg
andb
es
cli
aas
adc
xorl
in
sbb
std
inc
mov
inc
mov
insb
lahf
dec
mov
lcall
loopne
ds
es
jbe
add
xchg
push
inc
cltd
mov
test
dec
in
dec
jg
movsl
mov
ret
adc
xor
mov
cltd
js
xchg
add
divps
shll
push
mov
nop
dec
xor
ljmp
in
jae
lods
dec
arpl
leave
push
subb
inc
mov
dec
sarl
mov
inc
call
mov
aad
mov
push
xchg
sbb
shlb
jl
loop
inc
xor
inc
adc
sub
lcall
lods
inc
lcall
xchg
mov
xlat
dec
jae
pop
push
adc
mov
int3
and
shlb
and
jge
sub
mov
xor
cltd
std
and
jecxz
dec
mov
and
cmp
mov
iret
clc
push
daa
mov
test
jecxz
stc
push
mov
sub
loope
jb
jecxz
mov
push
and
jnp
pop
adc
outsl
lcall
adc
sub
pop
mov
mov
lods
and
mov
mov
jo
insb
mov
rcrb
andb
enter
add
dec
adc
xchg
pop
fucom
je
pop
cld
mov
repz
sub
adc
sub
mov
push
mov
dec
mov
jmp
enter
mov
dec
adc
xchg
ret
add
sahf
shr
adc
repnz
dec
cmp
out
xchg
idiv
mov
sbb
mov
adc
pop
ja
enter
pop
lcall
jns
int
sbb
push
inc
xor
ss
and
pushf
and
shrb
js
mov
lods
imul
jecxz
sbb
imul
movsl
inc
adc
lds
and
sub
adc
lea
push
xchg
pop
sub
js
iret
add
rolb
xchg
sbb
jecxz
aad
adc
jp
push
fldcw
adc
lahf
mov
arpl
fcomi
sub
xchg
dec
ret
add
lcall
cwtl
lods
jbe
int3
jns
sub
scas
xchg
js
dec
lods
jmp
jmp
jl
rol
mov
mov
roll
mov
inc
cmp
imul
and
les
mov
cmp
lods
clc
fwait
lahf
inc
jl,pn
es
int3
lcall
pop
mov
scas
inc
mov
sarl
adc
lahf
pop
dec
inc
ja
adc
dec
cwtl
cmpsb
cmp
sbb
fwait
mov
mov
push
lock
mov
ja
sub
push
std
dec
addr16
mov
pop
cwtl
clc
pop
nop
dec
pop
and
test
testb
jle
fwait
ret
jno
int3
insl
inc
shll
push
ja
test
lahf
jo
mov
lret
fists
cmp
rcl
es
je
cwtl
enter
pop
mov
cltd
cmp
inc
xchg
fsubp
je
or
pop
dec
ja
fdivrs
imul
ret
ss
les
les
push
test
int
sbb
nop
loop
xlat
fisubrl
dec
mov
stos
es
add
mov
negb
nop
cmp
lcall
xorl
popf
sub
cmp
pop
iret
jno
push
je
jge
mov
or
sbb
xchg
mov
mov
adc
ja
fs
and
jl
xlat
mov
mov
dec
popa
mov
jns
adc
scas
stos
mov
aas
fcomi
mov
adc
push
inc
push
sbb
pop
sahf
out
mov
dec
aaa
bound
dec
push
outsl
inc
add
cli
or
lea
fidivrl
adc
addr16
vmovaps
int3
aam
in
xchg
and
lods
out
call
das
dec
push
push
pop
mov
mov
push
push
pop
sbb
mov
cltd
ret
jbe
pop
xor
adc
push
dec
fld1
movsb
jne
pop
popf
fs
scas
hlt
addr16
jbe
sbb
das
dec
cmp
xchg
mov
cmp
inc
lods
lock
mov
adc
add
fldl
push
add
in
push
pusha
loopne
adc
leave
out
mov
mov
sbb
imul
xchg
pop
arpl
mov
sub
enter
inc
je
mov
mov
mov
fwait
jge
outsl
xchg
push
inc
adc
jbe
inc
inc
lcall
jno
pop
iret
add
jle
xorb
lock
sbb
iret
inc
jge
cmpl
fs
stos
xlat
pop
call
cmp
sub
addb
mov
bound
bound
push
in
daa
rcrl
push
arpl
scas
dec
clc
adc
mov
in
jae
pushf
cli
inc
mov
and
jle
sbb
rclb
aam
mov
aad
orl
sub
cld
in
mov
xchg
cmpsl
lods
mov
scas
pop
and
popf
mov
inc
int
mov
sbb
jge
push
fcmovnb
stc
fldl
icebp
sbb
cmpsb
ss
push
adc
add
and
roll
nop
jns
into
cmpsb
cld
jno
repz
in
sub
fs
ja
cmp
scas
mov
sub
arpl
pusha
loop
xorb
jnp
lret
sarb
aad
jno
xchg
push
int
cltd
fisubrl
test
xor
loop
repnz
pop
mov
adc
push
ret
insl
xchg
int3
daa
add
and
jge
or
push
lds
lcall
cmp
xor
mov
sbb
jg,pt
mov
jns
mov
fistpll
movsl
out
es
mov
pushf
and
mov
and
push
inc
int
xchg
mov
jbe
ja
adc
xor
inc
mov
jns
ljmp
adc
popa
inc
mov
jnp
mov
adc
fwait
xlat
jp
sub
lret
shll
add
jno
and
mov
sub
pop
jno
popa
clc
inc
dec
popa
mov
daa
and
rorl
sarl
outsl
and
into
lds
iret
fwait
inc
lock
cli
fists
pop
pop
and
icebp
fwait
push
mov
sbb
inc
dec
cmpsb
iret
test
mov
cmc
std
or
mov
mov
loope
jmp
sbb
pop
fldt
data16
outsl
imul
subb
addb
xor
sbb
out
and
dec
xor
addr16
cltd
mov
ja
push
jae
xor
inc
push
push
cmpsl
jl
loope
decl
out
insl
pop
sarl
and
add
push
pop
aaa
xchg
and
aad
pushf
cmpsl
rcrb
inc
sub
mov
in
add
mov
and
cmp
jecxz
notl
push
or
shll
jns
adc
addr16
adc
incb
pushf
cmp
pop
popa
int3
xchg
imul
test
inc
jns,pn
mov
xor
or
popa
mov
mov
mov
dec
lock
decb
cmp
sar
mov
cld
cld
jno
fbstp
pop
sbb
test
cmpsl
inc
ljmp
xchg
sbb
push
orb
mov
mov
orb
push
cld
push
push
test
fwait
adc
in
cmc
fimull
adc
in
mov
pop
scas
pushf
fldenv
fstl
repnz
out
into
out
or
or
adc
push
insl
jg
xchg
bound
sub
pop
das
jno
dec
lcall
add
leave
push
loopne
lret
cmp
push
ret
mov
nop
push
mov
mov
jne
mov
lcall
cld
scas
inc
or
add
loopne
xchg
push
jp
shl
xor
insb
lahf
mov
fbstp
or
loop
cmpsl
add
add
mov
pop
and
mov
out
and
jge
sub
push
inc
scas
or
and
fiadds
sub
mov
jne
ds
xlat
addr16
aas
ret
pop
inc
push
aas
ljmp
xor
enter
repz
or
lret
stos
into
repnz
push
jns
xor
loopne
mov
sbbl
or
jmp
pop
aas
mov
lahf
test
stc
cs
xchg
dec
das
in
loop
sub
add
stc
test
pop
lds
sti
cltd
testb
fimuls
cmpsb
js
es
into
pop
adc
mov
sub
aaa
daa
jne
test
dec
je
sub
jns
xor
cs
jle
mov
jno
shrl
add
pusha
bound
pop
mov
xchg
lret
sub
and
push
cmp
sbb
push
cs
pop
inc
mov
cmp
popf
sbb
into
scas
add
push
ss
mov
push
sub
ja
subb
mov
notl
jns
inc
into
dec
xchg
ret
xchg
das
inc
jl
xchg
pushf
movsl
das
cmpsl
out
shrb
mov
xchg
data16
sbb
jbe
leave
mov
or
inc
aad
sub
jo
push
js
mov
fstpl
push
enter
das
push
dec
repnz
dec
gs
sti
int3
mov
xor
xchg
scas
stos
cmp
loope
inc
inc
aad
pop
push
cmp
cmp
xchg
stc
shr
sub
sbbl
sub
cltd
insl
aam
aad
lock
aas
xlat
lock
lods
call
pop
mov
add
sbb
and
fisttpl
mov
stos
popa
or
lods
loope
nop
cltd
mov
inc
add
cs
xchg
sbb
pop
int3
sar
sbb
xor
iret
xor
in
mov
xchg
notl
pop
jno
movsl
jmp
or
pop
mov
in
sub
inc
fcoms
js
mov
pop
pop
fstpl
test
sub
test
aaa
xchg
push
jns
mov
sub
outsl
jmp
hlt
fisubrs
jno
and
jne
fildl
repnz
pop
jae
lods
adc
xor
ja
in
jns
fdivrs
mov
jno
es
stos
hlt
dec
scas
scas
lock
loopne
frstor
or
push
lds
mov
mov
and
and
dec
inc
shr
push
fdivr
and
xor
lds
inc
push
pop
sub
push
push
adc
dec
stos
mov
andl
imul
push
mov
scas
shlb
inc
push
cmpl
pusha
sub
repz
adc
inc
ret
jne
add
fs
gs
pop
mov
xchg
repnz
sub
pusha
sub
mov
fisubs
add
daa
mov
mov
push
lods
sub
daa
xchg
shll
push
and
js
push
int3
cmp
or
icebp
pusha
stos
scas
or
pop
cwtl
insb
mov
popf
mov
mov
pop
sbb
and
sub
dec
mov
orb
arpl
setg
dec
cmc
aad
jp
into
hlt
xchg
pop
popf
mov
dec
mov
out
jmp
mov
jns
dec
insb
push
and
or
xor
repnz
rclb
sub
je
adc
mov
xchg
inc
hlt
adcb
push
mov
imul
sahf
lock
mov
jo
dec
add
inc
xlat
fmull
aad
insb
iret
sub
lods
sub
adc
aas
loope
sbb
mov
mov
rcr
inc
lahf
lea
out
fstps
jns
aaa
pop
ror
mov
ja
mov
or
pop
xor
jle
jg
or
stos
push
call
add
push
jl
int
outsl
es
test
repnz
pop
into
sbb
in
xor
lods
add
adc
insl
push
int
je
sub
sub
pop
push
faddl
outsb
test
xorl
or
xchg
adc
arpl
lea
xchg
cli
sti
fwait
outsb
add
push
ret
data16
lock
test
sti
es
mov
aaa
jmp
mov
insb
jae
in
mov
jne
iret
imul
cmp
pop
cmp
popa
arpl
call
jo
gs
sub
sbb
adcb
adc
lret
inc
or
leave
mov
cmp
in
imul
sti
mov
and
ds
jmp
mov
ret
push
push
or
mov
loope
scas
sbb
lcall
xchg
fcoml
push
mov
repz
or
mov
ss
iret
fsts
es
in
out
das
loopne
push
ret
lret
sub
mov
gs
push
aas
add
rcr
push
mov
popa
mov
pop
lods
mov
iret
das
ret
data16
mov
push
in
pop
mov
xchg
sbb
sbb
cmp
stos
ljmp
xchg
adc
and
cmc
and
or
xchg
jp
ficoml
mov
jnp
jl
push
stc
add
cmp
sub
pop
inc
loopne
sub
rclb
xchg
add
mov
adc
add
lods
js
subb
pushl
jbe
xor
sub
into
popf
sub
inc
cmp
jmp
popf
add
movsl
sti
dec
dec
or
mov
mov
push
clc
cwtl
in
insb
cmp
push
xchg
and
jle
ss
int3
inc
push
add
in
rcl
adc
lret
shlb
and
mov
cmp
add
push
popa
sbb
lret
test
les
inc
adc
cmp
lcall
cmpsl
mov
xchg
cmp
int
pop
sti
aad
aaa
push
movsb
mov
mov
scas
and
xchg
adc
add
cmp
es
stos
iret
cmpsl
lods
in
jl
ficoms
cwtl
and
loopne
iret
sub
clc
sahf
popa
enter
push
incl
add
or
cmpsb
stos
mov
outsl
nop
std
push
add
js
stos
mov
mov
push
mov
jecxz
or
inc
sbb
fisubs
hlt
enter
por
xchg
adc
sub
xchg
inc
mov
sub
out
mov
xor
js
dec
ss
or
popa
and
pop
lcall
dec
addr16
and
inc
mov
cmp
cmp
test
and
in
pushf
mov
idivb
hlt
xchg
jp
dec
shlb
xor
pop
ja
dec
mov
jnp
add
or
das
iret
repnz
and
xchg
pushf
adc
mov
lds
jle
cmp
ja
in
stc
xchg
xor
insb
lcall
mov
outsb
lahf
inc
inc
xchg
sbb
popf
add
outsl
or
cmpsb
pop
dec
sub
pop
xlat
inc
mov
lret
xchg
adc
outsl
lcall
inc
cmp
gs
mov
mov
int3
mov
lret
add
jnp
mov
js
mov
push
insb
cltd
add
mov
mov
push
add
pop
ja
stos
xchg
aam
add
dec
jg
push
fmuls
outsl
cmpsb
cltd
imul
xor
and
sbb
pop
prefetchw
lcall
mov
rclb
loopne
sub
push
cs
scas
pop
pop
lea
adc
jns
hlt
mov
and
dec
mov
scas
into
outsb
mov
jb
dec
xor
pop
pop
imul
and
gs
and
cs
sbb
insl
dec
sub
stos
cwtl
ds
jo
cli
aad
fiaddl
cmpsl
jnp,pt
and
je
mov
jo
cmp
imul
jb
adc
into
mov
sub
mov
xor
xor
sub
ja
cltd
shrl
rcr
test
sub
cwtl
ficomps
and
mov
jl
enter
scas
push
out
je
and
xchg
out
mov
sbb
pop
rorl
movsl
push
dec
lock
out
mov
xlat
fisttpl
test
jnp
call
sub
shll
syscall
fidivrs
fisubs
rclb
ret
fisttpll
push
fisubs
or
sbb
dec
xorl
lds
dec
add
int3
or
jo
adc
mov
pushf
call
out
test
test
mov
jmp
push
aam
stc
stos
jle
stc
loopne
xor
pop
and
stos
dec
jecxz
sbb
in
cmpsl
f2xm1
jp
ss
ja
sbb
sbb
cmp
push
xchg
int3
mov
dec
push
icebp
lods
in
jmp
js
leave
out
mov
pop
imul
orl
xchg
jbe
pop
xor
mov
mov
mov
ffreep
lods
fmulp
push
xor
int
xlat
adc
jb
aad
in
inc
xlat
fldcw
adc
mov
out
fistl
arpl
push
pop
adc
sbb
ret
cmp
cli
sbb
dec
mov
dec
testl
jecxz
and
sbb
mov
test
adcb
in
jno
dec
popa
jns
arpl
insb
cwtl
lcall
or
sub
clc
iret
and
jmp
cmpb
ja
les
inc
jecxz
push
adc
stc
adc
or
cli
pop
loope
pop
lcall
inc
ret
mov
cld
lret
xor
mov
push
cmp
outsb
mov
adcb
xor
inc
jecxz
out
xchg
pop
adc
adc
aad
mov
push
int
sarb
adc
stos
or
push
mov
jno
lret
arpl
xor
sub
icebp
or
cmp
sbb
lea
gs
test
mov
lahf
cmp
add
insl
lcall
outsl
and
dec
xorl
adc
arpl
pop
sbb
add
jnp
mov
pop
aas
jo
jns
daa
mov
pop
inc
stos
add
das
mov
aas
pop
mov
cmp
mov
and
sbb
dec
cmp
jno
loopne
jns
sarb
loope
pusha
push
or
mov
popf
xchg
xchg
cmc
movlps
dec
push
std
inc
addr16
int
xchg
imulb
fisttps
stos
inc
hlt
aas
aas
mov
lea
in
idivb
es
jbe
adc
sub
mov
negb
decb
jnp
fsubr
aas
int
fstpt
cmp
aaa
shl
ja
dec
jbe
jo
add
out
das
mov
dec
hlt
fisubs
out
push
mov
jae
into
in
mulb
push
fmuls
mov
mov
mov
fcoms
push
lock
mov
mov
xchg
ja
cld
pop
lahf
dec
jge
insl
lods
scas
loopne
jno
push
ret
lahf
imul
mov
fmul
std
dec
aaa
jae
or
shll
cmp
push
imul
cmp
pushl
jns
loope
call
clc
divb
call
lods
xor
popa
jno
lea
dec
flds
xor
and
shl
dec
lock
fstp
test
and
leave
dec
jg
mov
aam
fwait
cmpb
adcb
loope
and
push
stc
test
jae
adcb
and
cs
jb
mov
adc
imulb
dec
adc
mov
xchg
arpl
popf
sbb
jo
ljmp
imul
mov
dec
jns
out
insb
mov
lahf
dec
cwtl
mov
out
out
and
xlat
gs
sti
mov
lret
outsl
das
lods
cmpsl
jp
push
fdivl
in
xor
clc
adc
mov
negl
out
sbb
int
mov
push
add
fists
jae
test
fdivs
insb
sti
inc
enter
out
imul
pop
data16
ljmp
popa
out
pop
sub
testl
ss
out
cltd
movsl
mov
mov
mov
sbb
ror
push
lahf
out
cld
xchg
push
fadd
add
xchg
inc
xor
loopne
rep
pop
ret
lock
pop
fmull
daa
into
outsl
aaa
mov
mov
mov
jae
stc
xor
das
jmp
jo
stc
imul
fwait
mov
dec
dec
pop
cmpsb
xlat
xchg
or
mov
pusha
ljmp
fcomps
inc
scas
mov
lahf
xor
jae
imul
adc
into
int3
aas
stos
inc
out
or
sti
inc
es
mov
iret
dec
lods
inc
cmp
adc
mov
orl
js
enter
aam
or
inc
push
cmp
mov
mov
imul
outsb
outsl
in
push
jb
jmp
push
int3
jns
push
jnp
je
leave
adc
cmc
inc
imul
cmp
jl,pt
pushf
sbb
add
mov
call
out
movsb
xchg
add
pop
das
mov
movsb
dec
mov
mov
loop
xor
mov
fisubrl
ds
ret
loope
or
test
hlt
push
cmpsb
adc
sub
adc
scas
ja
mov
dec
mov
xchg
fs
xchg
rorl
stc
fwait
jbe
lret
cld
jp
pop
mov
inc
xchg
in
mov
xor
test
ret
dec
jecxz
cmp
ret
dec
outsb
inc
sbb
xchg
mov
enter
stos
or
dec
dec
cmp
insl
mov
inc
testl
lcall
mov
test
stos
inc
test
sar
inc
imul
mov
or
xchg
clc
shll
call
dec
call
pusha
sahf
into
pop
mov
fs
and
sbb
movsl
in
dec
mov
cli
and
mov
sbb
mov
mov
inc
out
sbb
mov
cmp
mov
ja
shlb
add
pop
jmp
pop
pop
xor
rcr
jg
test
jge
popa
inc
jno
dec
out
jecxz
add
incb
pop
dec
mov
popf
scas
inc
push
shl
jae
jp
int3
jmp
cwtl
add
cli
stos
jle
lds
mov
mov
inc
fstpl
inc
out
mov
pop
mov
je
push
push
mov
inc
inc
ret
in
ljmp
popa
mov
adc
push
xchg
insb
pop
lret
aas
test
and
cli
dec
push
sub
pop
aam
sti
sbb
adcl
add
fidivs
mov
int
stos
inc
fadds
mov
enter
adc
push
push
test
mov
mov
dec
int
cmc
adc
xor
testl
negl
lret
data16
stc
push
call
pop
dec
push
jl
test
cmp
arpl
push
addr16
push
fcmovnbe
add
in
inc
inc
repz
bound
xchg
cmp
mov
vunpckhps
dec
pusha
inc
loopne
sbb
cmc
and
pusha
mov
sahf
dec
or
xchg
adc
cmp
push
leave
mov
cmp
adc
lods
push
push
mov
leave
or
inc
repnz
in
adc
int3
out
xchg
pop
cmp
loope
cs
mov
test
push
insb
mov
and
sbb
leave
stc
sahf
jg
lea
pop
pop
sub
inc
cmp
jne
sub
sub
jl
inc
push
fimuls
iret
lcall
lock
mov
push
mov
test
push
and
notl
fistl
inc
ret
mov
cwtl
jbe
push
mov
test
cmp
pop
mov
outsb
cmp
out
jmp
mov
in
push
pop
stos
mov
mov
sbb
iret
cwtl
jne
lret
testb
add
fistpl
cmc
jp
inc
in
mov
imul
xor
dec
js
outsb
sub
jb
sbb
push
and
stos
outsl
lahf
test
loopne
enter
mov
scas
cs
loop
mov
add
dec
add
jecxz
and
or
cwtl
dec
dec
push
mov
pop
fs
test
jae
shrl
mov
dec
add
mov
out
jmp
das
mov
push
iret
jge
xor
iret
cltd
mov
dec
mov
inc
sbb
nop
mov
adc
cmp
push
push
jmp
out
stc
jbe
test
cmp
sub
push
call
ret
popa
mov
jae
lcall
and
ret
mov
pusha
aaa
cmpsl
jmp
jl
push
std
repnz
test
jno
jle
sbb
in
dec
out
out
sub
pop
rcll
fidivrs
sti
adc
adc
mov
bound
xchg
shlb
in
add
push
xor
popa
pushf
fadd
jg
hlt
into
xor
fmulp
stc
mov
stos
mov
push
cmp
adc
cmpsb
sbb
mov
fildl
stos
fldenv
push
daa
pusha
out
daa
xchg
sbb
push
push
leave
data16
cwtl
das
add
or
xor
test
mov
in
rorl
mov
mov
lods
pusha
pop
hlt
clc
rcrb
or
xchg
dec
std
xor
xchg
ret
mov
lods
inc
sbb
add
sbb
inc
sub
dec
and
inc
and
clc
pop
jp
in
mov
and
rol
lahf
jl
test
rorb
icebp
xchg
or
xchg
add
inc
push
push
dec
inc
call
pop
imul
das
jb
sbb
xor
jecxz
scas
dec
nop
mov
mov
jecxz
aaa
lcall
sub
data16
cmpl
dec
push
mov
jg
xor
lahf
rolb
pop
mov
data16
sahf
lock
inc
jecxz
cvtps2pd
jns
stos
imul
out
sahf
push
mov
idivl
xor
inc
adc
test
pop
mov
xor
adc
dec
sbb
pop
loop
fwait
lods
dec
in
sbb
mov
andb
xor
stc
push
sub
jl
xchg
dec
mov
inc
mov
pop
enter
popa
loope
dec
andl
movsl
imul
bound
pop
int
and
daa
loopne
xchg
mov
dec
dec
clc
test
jnp
and
cli
sbb
jne
in
ds
sub
fwait
lret
repnz
jno
add
imul
cmp
nop
push
pop
out
dec
xlat
sbb
mov
in
lret
fisttpll
fnstsw
xor
popa
movsb
jae
or
xchg
popa
rcpps
lea
movsl
inc
repnz
ss
loopne
scas
iret
push
arpl
inc
rcrb
xor
stos
mov
pushf
xor
fbstp
js
lcall
adc
jbe
inc
and
push
sbb
push
out
loopne
sub
jno
cld
or
dec
or
push
clc
lret
cmpsl
shlb
loop
loope
adcl
ja
aad
jmp
insb
enter
lcall
add
repnz
aam
mov
push
add
into
push
hlt
lcall
adc
std
ret
sub
mov
pop
jns
cmpsb
xorb
add
ret
xor
sub
cmpsb
inc
cmp
loope
mov
jno
mov
test
jle
jp
bound
sub
inc
std
push
mov
xorb
std
sub
mov
push
in
xchg
loopne,pn
test
push
lea
insb
add
jp
mov
movsl
in
sub
scas
lahf
xchg
sbb
inc
xchg
test
or
mov
movb
in
shrl
fmulp
mov
jmp
in
and
cmp
stc
nop
or
pop
jne
jne
jb
push
dec
mov
loopne
les
mov
jle
mov
jle
mov
repnz
lock
pop
xor
inc
lret
insl
xchg
push
xor
cltd
push
adc
xchg
dec
mov
sarl
cmp
into
test
xor
loop
push
jle
mov
mov
and
sti
aas
je
jo
mov
je
sbb
pop
addr16
mov
add
jno
and
mov
jbe
pushf
loope
movsb
lods
cltd
mov
push
cmp
xchg
mov
dec
jns
push
jne
fnstsw
es
mov
es
sub
cmp
cmp
ret
rcrb
and
leave
xor
ljmp
cmp
ds
sub
ja
adc
dec
sbb
cmpsl
arpl
testl
sub
addr16
dec
dec
xchg
out
xor
jmp
mov
jge
outsl
sub
adc
jp
scas
mov
es
add
mov
jne
jmp
mulb
mov
push
dec
sbb
sub
call
mov
push
xor
popf
cmp
sbb
loop
in
sub
xchg
xor
addr16
xchg
adc
js
xchg
ja
shll
mov
in
add
pop
negl
and
repnz
fsts
inc
je
and
call
jp
lods
cmp
insl
fs
cmp
adc
dec
stos
ret
push
adc
mov
xor
sarb
mov
lds
enter
aam
pop
imulb
js
out
call
xor
push
outsb
cmp
daa
jns
sub
jecxz
or
rolb
xor
xorb
xchg
xor
test
cmp
in
out
leave
inc
fwait
push
mov
bound
cmpsl
xlat
push
pop
adc
bound
inc
mov
jg
cmp
or
add
lods
rclb
inc
xchg
cltd
call
push
lret
aaa
fwait
add
xchg
mov
mov
ret
jbe
das
mov
sbb
mov
in
add
gs
pop
mov
push
rcll
mov
push
mov
mov
and
xor
push
cmp
mov
fbstp
pop
fidivl
and
int3
fiadds
aaa
je
jmp
cld
xchg
stos
xchg
mov
or
in
mov
ret
sub
lahf
inc
ja
fmull
repz
test
adc
inc
xchg
and
add
xlat
pop
enter
pushf
dec
push
sub
push
dec
std
lods
push
fs
sub
and
sub
insl
icebp
push
xor
movsl
push
ret
jp
lea
test
push
outsb
fistl
mov
pop
cli
mov
mov
lcall
icebp
sbb
or
mov
add
stos
fldcw
movsb
jnp
sbb
divb
dec
and
dec
jno
shrb
push
fbstp
test
inc
out
push
mov
les
sbb
loopne
lret
jo
outsb
lds
cmp
idivl
movb
jae
pop
subl
shlb
inc
xor
adc
in
push
lds
push
add
mov
adc
rcrl
jg
in
sub
fstps
push
push
adc
xchg
xchg
xor
mov
es
mov
in
cmc
shrb
adc
xchg
push
loop
pusha
loopne
sub
lret
cmp
adc
pop
lret
xor
sbb
cli
lods
jg
loope
push
insl
hlt
es
int3
or
mov
push
dec
cmp
jne
jmp
pop
or
ret
lcall
dec
imul
and
test
and
test
inc
aaa
jp
adc
xchg
ja
popfw
insb
push
jnp
push
rol
movl
push
movsb
loop
and
fdiv
loope
and
cmpsb
aad
loopne
inc
daa
pop
and
xor
or
mov
das
inc
lahf
mov
jbe
sbb
es
jb
pop
or
popa
push
pop
sbb
notl
or
xor
testb
push
daa
aam
imul
jl
fstl
insl
mov
and
lcall
inc
mov
pop
shl
out
mov
or
mov
mov
sahf
mov
adc
imul
stc
push
xchg
leave
jecxz
push
mov
enter
mov
jne
push
push
and
push
popa
dec
push
adc
mov
sub
ss
mov
inc
cmc
xchg
rorl
addr16
pushf
mov
mov
outsb
inc
ret
xchg
cmp
movsl
sbb
inc
ud0
lock
xchg
mov
dec
mov
add
arpl
ljmp
std
push
cld
dec
cmpsl
int
sbb
bound
cmp
adc
incl
cmpb
sub
cs
or
leave
xor
jp
mov
add
inc
stos
push
out
adc
mov
les
loop
cmpsl
insl
test
jg
dec
test
xchg
xchg
push
sbb
sbb
cmp
repz
lods
or
jg
mov
sub
stos
xorb
addb
iret
or
rolb
loop
int
pop
jb
adc
xor
push
inc
cwtl
lds
jb
ffree
mov
test
jp
sub
mov
lret
bound
mov
xchg
jae
ret
pop
addr16
aas
jg
adc
push
stc
data16
cmpsl
pop
into
rorl
int3
test
xor
xor
add
mov
dec
mull
pop
insb
push
xchg
inc
lods
xchg
out
dec
mov
icebp
push
fsubs
mov
mov
jp
cwtl
sar
pop
std
dec
mov
pop
sub
cwtl
adc
movl
lds
lds
mov
jbe
inc
mov
xchg
repnz
fwait
clc
enter
mov
in
aad
mov
out
cmp
hlt
int
aas
adc
arpl
movsl
ss
mov
subb
inc
xor
xlat
push
mov
xchg
xchg
jge
fildll
xor
mov
stc
jg
sub
int
push
test
bound
std
xor
or
mov
mov
inc
dec
iret
xchg
data16
aaa
stos
push
arpl
and
xchg
jmp
cmp
pop
jecxz
loopne
inc
mov
adc
dec
pop
je
and
call
dec
mov
jo
pop
dec
jecxz
pop
fwait
pop
aaa
pop
push
sbb
insb
fsubrs
xor
add
hlt
mov
fldl
sub
sub
iret
out
jecxz
xor
cmc
or
push
fwait
xor
pop
jl
mov
cmp
ret
xchg
cmp
add
jb
repz
and
js
sti
push
push
lods
rorb
fsubl
mov
mov
jb
and
lock
add
lret
xlat
xchg
aam
push
push
dec
cmpsl
inc
insl
in
iret
js
movsb
pop
jle
or
push
mov
adc
sbb
and
lcall
into
xchg
aam
cmp
and
sbb
mov
fs
imul
sbb
jle
fimull
fistl
xchg
xor
js
out
stos
xchg
in
cwtl
or
cmc
inc
mov
aas
imul
sbb
into
rorb
xchg
add
fsts
es
lret
lret
in
rorb
push
mov
in
pushf
dec
movsb
dec
loope
in
cli
inc
cld
dec
lods
mov
ljmp
ficomps
inc
mov
fcoms
mov
gs
pop
loopne
hlt
pop
shrl
xor
mov
jle
sbb
shrl
mov
imul
add
adc
xchg
rol
mov
jmp
xor
in
dec
push
mov
and
mov
adc
inc
mov
scas
lds
mov
xor
outsl
hlt
xchg
adc
cwtl
loop
and
pop
insl
adc
int
pop
dec
push
popf
xchg
pop
mov
adc
mov
pop
les
push
fst
mov
sti
fiaddl
pop
and
scas
imul
int3
popf
fs
pop
sbb
rcrl
jecxz
adc
and
fwait
notb
loop
in
cmpsb
and
inc
cmp
adc
cmp
push
push
mov
pusha
nop
inc
add
jb
xor
insb
roll
lret
pushl
cltd
xor
mov
mov
fld
ljmp
pop
movsl
cltd
xchg
repnz
scas
sbb
or
ja
push
les
jae
sbb
xchg
fisubl
loope
out
mov
loope
int
push
lock
outsl
fimull
xchg
inc
sub
cmp
pop
mov
in
inc
cmp
push
push
jno
push
flds
and
and
xor
loope
test
dec
push
test
jge
ds
popf
cmp
pop
fwait
jecxz
push
mov
and
imul
mov
test
mov
bound
mov
or
icebp
test
or
andb
mov
push
jp
ja
das
ret
jge
mov
into
inc
add
jecxz
pop
push
insb
leave
sub
xor
pusha
dec
push
sbb
lods
ds
push
xchg
addr16
cltd
popa
inc
xchg
mov
dec
loope
hlt
push
sahf
ds
pop
out
scas
sbb
adc
mov
or
cld
repz
inc
xchg
fstps
add
sahf
divb
inc
mov
ss
lahf
mov
fwait
clc
inc
sub
leave
fs
push
xor
push
leave
and
stos
cmp
add
in
popa
jp
mov
mov
xor
into
subb
dec
loopne
mov
xchg
std
mov
imul
stos
inc
cmp
mov
adc
rcrl
jmp
xchg
jmp
imul
fadd
shrl
and
roll
mov
pop
or
movsl
pop
icebp
fdivs
ljmp
fiadds
scas
icebp
adc
fisubrl
clc
pop
pop
cwtl
outsl
inc
lcall
sub
aad
sbb
push
inc
imul
xchg
pop
fwait
cmp
ja
xlat
test
popa
or
leave
xor
cmp
es
movsb
xchg
loopne
xlat
outsl
outsb
cltd
push
mov
iret
xchg
fnstenv
jmp
stc
scas
lahf
push
popa
mov
lds
dec
mov
mov
and
adc
push
subb
movsb
jge
dec
sti
shll
cmpsl
xchg
popa
sbb
xchg
jne
mov
dec
xor
shrb
jbe
pop
mov
or
filds
rcll
test
fldenv
push
scas
in
push
cmp
inc
pop
les
mov
cltd
mov
sbb
pushf
jl
pop
sbb
cwtl
imul
int
cmp
adc
ds
or
jns
sbb
xchg
scas
adc
ret
or
mov
in
or
movl
pop
adc
pop
call
and
push
ffree
mov
inc
mov
int
mov
push
sbb
popa
and
pop
enter
sahf
xlat
mov
imul
test
dec
jmp
mov
xor
icebp
xchg
cmp
mov
jnp
sarl
outsl
sbb
mov
movd
sub
mov
xchg
repz
pop
or
mov
lcall
xchg
add
sub
jno
pop
mov
aad
dec
pusha
shrb
xor
sbb
and
bound
mov
sbb
stos
cmpsl
fisubrs
icebp
xlat
outsl
xlat
into
push
icebp
ljmp
sub
pop
xor
dec
pop
mov
or
insb
sbb
sub
test
pop
cmp
xor
mov
and
inc
sbb
fidivs
jo
decb
sbb
xchg
lcall
shll
shrl
insb
lcall
pushf
ljmp
jl
lea
stos
jo
repz
clc
inc
inc
cld
pop
loope
iret
repz
popf
push
push
jmp
cmp
mov
cltd
xchg
xorl
test
xchg
push
or
mov
push
lea
loope
jmp
pop
sub
int
push
and
inc
inc
add
xchg
insl
mov
or
lea
xchg
mov
push
pusha
jae
mov
xor
nop
movsb
add
out
leave
das
push
jl
cmp
mov
outsb
xor
add
inc
cmp
xchg
movsb
inc
cmp
and
mov
jle
shrl
push
push
adc
sbb
dec
sub
jnp
adc
mov
ljmp
insl
dec
inc
cmp
cmp
push
mov
call
adc
ret
pop
sarb
fldcw
and
push
sbb
xchg
cmp
xchg
pusha
xchg
movsb
sub
push
sub
cmc
or
and
jns
outsl
aaa
popf
inc
add
outsl
mov
fnstcw
stos
inc
adcb
mov
push
push
xchg
cld
lahf
add
hlt
cmovnp
xchg
roll
mov
pop
mov
push
stc
ss
pop
pop
pushf
xor
pushf
xor
out
scas
dec
push
aas
fldcw
stos
dec
pushl
aam
adc
lods
cli
mov
and
fwait
mov
mov
sub
xor
jmp
pop
repz
mov
xor
xor
inc
xchg
js
insb
xchg
mov
pop
sub
xchg
add
sbb
mov
cmc
cli
xchg
jae
sbb
arpl
ret
in
push
daa
pop
push
push
lods
jo
jne
mov
lahf
ret
push
mov
call
mov
ss
mov
ds
sbb
loope
in
jbe
sbb
inc
or
imul
cs
and
in
jno
mov
in
pop
mov
test
xor
mov
jb
dec
cmp
xchg
mov
sub
or
stc
pop
rcrl
add
dec
pop
jecxz
jbe
in
scas
out
stos
mov
imul
and
sbb
jge
jnp
les
inc
fcmovbe
pop
mov
sti
outsb
mov
mov
cltd
fwait
cmp
das
testb
inc
jmp
jmp
jl
push
add
sbb
add
test
sub
push
inc
pop
add
dec
dec
push
dec
pop
cli
push
pushf
int3
push
adc
push
mov
stos
sub
push
outsl
fidivs
cmp
or
lods
adc
xor
and
xchg
add
popa
popf
inc
lods
push
mov
xchg
es
adc
test
sub
jns
fldl
xchg
and
cmp
xchg
cli
lcall
or
xchg
dec
sbb
outsb
mov
test
in
rorl
push
dec
jmp
dec
outsl
js
int3
rorl
adc
jbe
movsb
ja
je
dec
pop
movsl
and
mov
arpl
lods
ljmp
lret
fmull
test
push
cmp
and
pushf
add
je
outsl
push
jle
int
inc
icebp
and
push
test
repz
pop
icebp
ret
subb
jbe
adc
push
push
cmpsb
sub
add
cli
cmpsb
push
jg
mov
pusha
repz
inc
mov
out
inc
insb
orps
add
xor
in
stc
mov
inc
xlat
js
sbb
out
aaa
clc
call
dec
fsubl
or
push
ljmp
inc
testl
daa
gs
out
out
and
push
data16
mov
fs
pusha
sbb
xchg
mov
test
test
pop
rol
fimull
pop
dec
cmp
xchg
loopne
lret
imul
clc
in
fcoml
lret
pop
scas
push
push
test
fwait
add
int
loopnew
sub
lcall
jl
and
lahf
pop
jbe
pushf
or
pushf
aam
sbb
inc
andl
mov
aas
mov
push
push
and
stc
pop
cmp
fwait
clc
mov
mov
lret
xchg
jo
dec
push
mov
add
or
leave
inc
push
and
je
loop
sbb
push
repz
sahf
mov
out
lock
sub
sub
jnp
mov
cmpsl
sbbl
insb
adc
lret
inc
push
mov
mov
mov
imul
sti
sbb
pop
jne
fisubs
or
xor
int3
int
pop
fstps
cwtl
gs
mov
mov
or
aam
xchg
cli
dec
setne
shr
stc
sub
jp
mov
mov
or
mov
sbb
loop
inc
adc
xor
push
jl
stos
add
fisubl
ror
and
cmp
ljmp
aaa
fisttpll
jne
cmp
inc
popf
pop
jne
and
and
jae
js
sar
data16
inc
push
or
add
in
push
cltd
fsubp
cmp
das
adc
in
mov
push
mov
sbb
lods
test
inc
adc
mov
mov
rcr
mov
cmpsb
add
adc
fcomps
dec
arpl
cmpsl
pop
dec
gs
fnsave
adc
xor
jns
fstpt
xor
jns
xor
push
jbe
into
out
mov
adc
and
gs
shll
lret
mov
xor
sub
adc
pop
inc
icebp
dec
inc
mov
hlt
leave
outsb
test
out
cmp
push
xchg
das
jmp
outsb
pop
insb
ret
push
dec
add
nop
ljmp
mov
dec
data16
cmc
xchg
add
leave
fwait
pop
mov
pushf
call
jle
divps
imul
das
aas
mov
loopne
and
adcl
cltd
dec
arpl
jmp
icebp
lea
xchg
stc
loopne
out
das
shr
xor
aas
loope
dec
mov
xchg
sbb
lea
cmp
ljmp
clc
cmp
sub
adc
lcall
iret
test
push
fisttpl
mov
popf
xor
jecxz
lock
fsubrs
inc
jg
std
pop
dec
jle
add
sub
xchg
stos
add
arpl
pop
jb
push
mov
xlat
add
je
rcll
or
dec
fmulp
fiadds
mov
shl
jmp
popa
lods
mov
outsl
or
cmp
mov
jl
lock
daa
mov
add
mov
cld
rclb
or
mov
xor
rcrb
xlat
ret
and
stos
pop
push
icebp
pop
movl
mov
imulb
dec
inc
xor
fneni(8087
jns
push
add
jnp,pt
mov
xchg
movsb
pop
or
jnp
pop
xchg
aas
clc
add
leave
pop
rol
pop
jb
int
inc
sar
and
xor
mov
dec
clc
shrl
pop
mov
icebp
cltd
dec
adc
rol
mov
mov
jg
bswap
xchg
push
rcrb
out
hlt
mov
jp
movsw
pop
add
pop
pop
and
int
pop
mov
icebp
inc
gs
xchg
data16
jno
mov
jnp
xchg
shl
inc
sbb
dec
jns
repnz
mov
and
jne
aam
inc
subb
lea
sub
sbb
mov
shlb
clc
mov
faddl
pop
std
call
cli
xchg
clc
cltd
or
insl
fs
sbbl
inc
je
add
and
movsb
push
std
out
jo
push
shl
mov
push
and
pop
mov
addr16
pop
pusha
push
cltd
cmp
jnp
movsb
int3
lea
fsubrs
std
dec
inc
pop
sub
sti
push
adc
cmp
xchg
mov
movsl
mov
sub
mov
cmp
lret
adc
pop
sub
pop
pop
add
xor
mov
jmp
push
dec
jl
xor
or
mov
mov
jo
icebp
int
mov
sbb
dec
hlt
ljmp
jg
xchg
movsb
sub
xor
push
fidivl
pusha
and
jno
jb
xor
jbe
in
and
shrb
cmpsb
xor
inc
ja
jo
add
push
sbb
stc
xchg
arpl
idiv
gs
out
cmp
shrl
mov
push
ss
scas
sub
push
cmp
rcrb
inc
mov
cwtl
xchg
insb
fwait
aad
or
out
jo
dec
dec
fwait
scas
xchg
sarl
xchg
xchg
aaa
in
daa
sbb
decl
mov
shr
push
pop
mov
mov
sub
fisubrl
cmp
pushf
pop
movsb
aad
and
xchg
out
xchg
and
fs
test
mov
dec
jmp
push
outsb
stos
stos
not
xchg
cmpsb
dec
popa
or
mov
and
in
push
or
sbb
push
cmovge
fisttpl
sarb
arpl
cld
fadds
inc
xor
outsb
mov
scas
or
xlat
ficompl
inc
cmp
fwait
mov
bound
jecxz
bound
into
jae
push
es
jne
sub
stc
js
jno
pushf
cmc
js
addr16
or
or
out
pop
lret
cmpsl
scas
int3
cld
push
fstp
ja
xchg
arpl
aad
push
add
jno
ss
data16
jmp
cwtl
xor
inc
scas
nop
lcall
push
jb
pop
ja
ds
in
fstps
clc
mov
out
pop
repnz
lds
push
cmp
lcall
pop
test
and
insb
lahf
cs
mov
call
sub
dec
add
movsl
add
and
fwait
mov
cld
gs
inc
lahf
adc
int3
popa
enter
fbld
mov
add
push
push
xchg
xchg
inc
inc
inc
scas
push
mov
sub
and
enter
jns
mov
pop
mov
push
cltd
cwtl
dec
cwtl
bound
xor
pop
adc
sbb
mov
lods
imul
popa
mov
and
cltd
and
add
lds
mov
mov
push
jbe
mov
pushf
add
sub
pop
lret
jp
sbb
add
or
dec
arpl
push
int3
mov
lret
xchg
mov
fcompl
adc
aas
jo
lcall
dec
add
and
xchg
test
inc
icebp
aas
out
popa
addb
add
and
mov
jmp
xor
lds
sub
popf
stc
lock
xchg
ret
aaa
int3
stos
sahf
fucomi
decb
popa
mov
jae
mov
in
jl
push
insb
inc
stc
xlat
mov
js
jp
outsb
stos
imul
jne
pminub
mov
jecxz
cmp
pop
shl
lods
inc
cwtl
xchg
movsl
and
lret
inc
mov
shll
aam
test
pop
sub
mov
cmp
jge
sub
imul
mov
addb
call
pop
jns
cmpsl
cwtl
xor
leave
xchg
pop
dec
xchg
pop
add
movb
sbb
std
cltd
pop
or
dec
or
push
mov
push
pop
sub
sub
pop
mov
lret
pop
add
mov
mov
fadds
xor
faddl
hlt
add
mov
xchg
pop
imul
in
xchg
jo
ficomps
push
or
mulb
inc
adc
aad
cmp
xor
cmc
pop
xor
add
subl
or
mov
out
outsb
fmul
add
lods
add
jp
stc
adc
xor
in
mov
bound
inc
negl
or
fstpl
sub
jmp
mov
mov
imul
dec
adcb
push
loopne
push
shr
int3
add
pusha
pop
lcall
inc
dec
pop
pop
push
fwait
test
shl
push
cmp
xchg
cli
std
sbb
or
jecxz
repz
nop
jmp
dec
sbb
adc
insl
ljmp
and
lahf
fsts
xchg
fwait
notb
adcl
in
das
sbbl
xchg
mov
or
sbbl
fcompl
xor
mov
repz
sub
nop
mov
cmp
xchg
add
mov
rorl
jnp
and
cld
adc
scas
add
loop
push
sbb
shld
cwtl
push
dec
fbld
jne
sti
in
mov
mov
lret
icebp
iret
iret
sub
pop
adc
cld
jg
pop
aad
add
aaa
xlat
pop
dec
push
mov
mov
inc
fisttpll
push
cmp
scas
imul
icebp
push
lea
push
cwtl
not
in
inc
and
jecxz
cmpsl
pop
jb
aam
js
sbbl
push
in
fnsave
in
shll
sbb
lret
call
dec
lods
jmp
mov
dec
out
mov
sub
orb
xchg
leave
inc
xchg
jg
lds
push
popf
xchg
pop
das
stc
and
mov
lock
and
pop
sbb
or
loopne
mov
ljmp
adc
mov
inc
loopne
cwtl
pop
inc
inc
ds
fildl
shlb
add
sub
addl
icebp
inc
xchg
mov
idiv
or
pop
scas
lods
arpl
sbbl
dec
dec
lods
jp
pop
add
mov
xchg
inc
jae
lret
lahf
fwait
movsb
iret
push
ds
or
daa
xor
test
push
ret
addr16
or
mov
mov
jle
push
fldl2t
leave
xor
out
ds
inc
and
stos
sub
pop
sbb
in
push
imul
inc
jg
push
add
movsl
cli
sbb
xchg
and
nop
in
cmp
fsubl
dec
mov
jmp
in
iret
mov
and
stc
xor
leave
and
mov
nop
adc
cmc
add
test
test
and
les
cmp
lock
mov
inc
cmp
sub
push
add
push
orb
or
mov
push
cltd
ss
pop
xor
adc
cmc
pushf
lods
repz
cltd
sarl
mov
sub
adc
fwait
push
lcall
sub
sbb
addr16
ljmp
inc
ret
push
jae
lods
mov
jmp
fwait
pop
push
incl
pop
xchg
mov
out
mov
movsl
cwtl
jb
push
push
lcall
arpl
inc
xlat
int
jecxz
and
js
loopne
imul
cmp
pop
pushf
pop
cs
push
xchg
jp
int
imul
xchg
jmp
jae
loop
xor
pop
sub
pusha
subl
in
inc
cmp
adc
sti
mov
insb
push
call
sbb
sbb
mov
jo
sub
push
daa
addr16
mov
aam
scas
inc
sbb
or
inc
and
ficoms
outsb
mov
and
xchg
imul
inc
in
inc
or
jno
mov
icebp
adc
pop
arpl
popa
sub
xchg
add
lea
aaa
mov
sub
xchg
scas
lods
cmp
sahf
jo
cmpsb
dec
sub
xchg
push
mov
hlt
stc
jmp
inc
mov
aam
in
cmp
sbb
push
outsb
xor
inc
lods
insb
lods
pop
fisttpll
add
repnz
add
ret
and
mov
aaa
inc
xor
repz
sub
push
nop
xor
push
push
js
loop
mov
loope
je
inc
push
jg
lock
popa
pop
in
inc
out
xchg
push
push
inc
xchg
jbe
pop
loope
int
or
lret
jbe
repnz
xorb
sbb
pop
or
xor
add
in
aam
cmp
or
fsubs
mov
test
and
mov
hlt
ds
dec
pop
cmp
cwtl
mov
xchg
jo
mov
clc
jne,pt
mov
pusha
inc
andl
sti
fiaddl
push
mov
nop
inc
jl
xchg
jb
jbe
add
ja
imul
cmp
push
inc
into
test
pop
and
inc
jecxz
add
inc
mov
mov
insl
or
leave
nop
push
lcall
xchg
in
xchg
clc
pop
xor
es
push
sub
dec
repnz
mov
xchg
sub
adc
sbb
sbb
lret
push
mov
incl
cs
mov
aad
and
sbb
inc
inc
aas
dec
mov
lret
adc
inc
andb
fmull
cmp
bnd
mov
in
inc
ds
jecxz
push
lcall
aam
in
mov
jno
stc
cmc
inc
sbbl
jns
mov
inc
sahf
mov
jg
arpl
test
cli
xor
xor
dec
jae
mov
and
mov
rolb
lcall
mov
jbe
cld
xchg
xor
call
cmp
cmpb
test
out
mov
movl
pop
test
xchg
enter
or
int
push
mov
add
imul
sbb
dec
pop
mov
iret
or
cs
pop
add
faddl
push
popa
mov
inc
aam
insl
jae
sub
aaa
xor
jl
xchg
popf
cmp
xorl
les
enter
add
sub
xchg
jecxz
cld
pop
mov
and
lahf
icebp
int
cmpsl
adc
mov
or
stos
mov
loope
rorb
aaa
inc
sbb
adc
sub
dec
fs
or
movsl
mov
adc
into
repz
inc
mov
mov
ja
inc
mov
adc
aad
pop
or
add
mov
hlt
lret
sub
cltd
ja
xchg
cwtl
daa
cltd
imul
mov
xchg
and
inc
je
xchg
sbb
add
out
xor
xchg
mov
and
mov
sub
xor
mov
scas
push
mov
leave
xor
pusha
int
lock
addb
ja
subb
cmp
cmp
xchg
mov
mov
xchg
cltd
clc
mov
rol
xchg
cmp
push
movsl
cmc
xor
clc
pop
orl
fcmovnu
mov
test
mov
push
in
cwtl
mov
or
or
mov
or
addr16
jb
bt
roll
bound
repnz
and
test
or
mov
testb
lret
imul
call
mov
xchg
cmpsb
jo
movsb
fisttpl
adc
das
mov
imul
movsl
ss
xor
std
clc
sbb
int3
dec
jae
int3
out
cli
test
lcall
inc
pop
jnp
sarl
inc
incl
mov
sbb
inc
pop
andb
fbld
mov
mov
in
pop
mov
leave
adc
shrl
cltd
ret
mov
cmpsb
cltd
add
inc
or
dec
xchg
cli
fstp
movsb
mov
jo
aam
clc
add
dec
mov
sub
or
cmp
scas
jecxz
dec
push
out
mov
mov
or
pop
loop
test
rorl
push
mov
cmp
mov
pop
bound
pop
xlat
jnp
das
call
fdivs
cmp
and
xchg
fsubrs
test
pusha
dec
loop
inc
push
lods
or
rcrl
mov
int
nop
stc
lods
adc
test
lods
inc
push
pushf
jg
xchg
test
xchg
out
lret
sub
inc
sbb
sbb
fildl
mov
sbb
call
lods
push
xor
das
dec
mov
lcall
cmp
idivl
cmp
popa
xchg
std
hlt
mov
dec
cmp
cmp
mov
pop
out
cmp
sbb
rol
icebp
movsb
push
sbb
mov
inc
into
lahf
icebp
cmpsb
jae
dec
test
inc
mov
pop
int3
mov
jb
adc
fs
shr
out
in
jae
adc
sbb
mov
dec
inc
aad
jmp
shlb
mov
sbbl
mov
ret
adc
js
jle
ja
fstps
mov
jbe
enter
mov
ret
sbb
xchg
xorb
outsb
jo
xorl
lock
test
and
add
jge
adc
sbb
gs
daa
adc
insb
xor
mov
jmp
mov
xchg
mov
mov
pop
shll
mov
rcr
inc
scas
int3
sbb
leave
popa
or
inc
leave
lahf
mov
divl
lret
nop
jne
push
mov
push
test
push
inc
mov
jnp
imul
cmp
sbb
mov
call
inc
ds
cmp
loop
sbb
shlb
ret
leave
xor
add
xor
out
jne
xor
mov
shrb
in
mov
xchg
mov
mov
sub
mov
inc
jbe
repz
aad
rcrl
loopne
jno
movsb
cmp
inc
dec
inc
xchg
push
and
dec
sbb
xchg
dec
test
xor
xchg
in
mov
ja
add
push
bound
popf
iret
hlt
icebp
jge
out
xor
mov
jnp
sbb
adc
outsl
push
imul
in
mov
repz
daa
aam
test
cmp
sbb
fs
mov
imul
sub
pushf
je
ret
sub
and
rcr
adc
lea
cs
mov
inc
sub
ss
fadds
bound
xor
aam
xchg
xchg
cmp
stos
mov
jge
call
out
fistpl
jmp
cltd
mov
rcrb
push
addl
popa
dec
inc
pushf
lea
sbb
ja
push
cmp
xchg
mov
sbb
push
jl
pop
xorb
jb
sub
xchg
aaa
xorb
xor
lods
jge
lds
int3
in
loope
inc
test
jns
cli
add
mov
mov
xchg
and
arpl
lock
pushl
andl
inc
pop
pop
stos
pop
add
mov
sti
and
movsb
dec
loop
orb
adc
inc
mov
imul
push
mov
add
mov
nop
mov
shlb
data16
icebp
add
push
push
mov
pop
les
roll
dec
enter
ds
xchg
inc
xorl
stos
add
mov
ror
cmpsb
sbb
push
xor
popf
or
out
or
push
enter
fidivs
sbb
out
mov
jns
cmp
dec
mov
inc
addb
dec
ret
and
popf
add
pop
cltd
and
in
inc
mov
and
pop
xor
dec
pop
lock
ret
mov
cld
xor
fld
movsl
xlat
shrl
or
push
pop
xor
mov
dec
lods
dec
inc
cltd
out
jmp
inc
dec
pop
dec
in
loop
imul
les
pop
and
das
in
sub
sbb
sbb
xchg
inc
sbb
pop
mov
or
jle
dec
mov
xchg
lcall
xorb
jo
roll
cmp
movsl
jle
sbb
mov
jp
jnp
test
fldt
fwait
insb
ret
push
jb
cmpsb
lcall
ja
mov
cmp
inc
cmp
lock
and
stos
mov
dec
mov
aad
lods
mov
sub
inc
push
push
xor
jns
rcrl
xchg
test
out
mov
add
insb
sbb
jecxz
popf
popl
or
nop
push
jb
push
out
sbbb
or
mov
aas
xchg
ret
jg,pt
mov
cwtl
repnz
dec
pop
sbb
in
inc
popa
in
mov
jo
adc
repz
repz
inc
dec
push
shll
mov
jp
sub
or
xorb
cltd
sti
fs
mov
push
sub
stos
jbe
fs
je
ljmp
mov
add
idiv
push
ss
aas
shl
mov
cli
inc
test
dec
jnp
ret
adc
in
out
mov
inc
push
pop
push
push
popa
add
fisubl
in
fistpl
push
into
inc
cwtl
push
das
inc
sub
out
mov
ja
xchg
sub
push
fcom
fistpl
fmuls
jo
sbb
add
lahf
pop
arpl
lds
cmc
mov
in
mov
out
xor
mov
arpl
pop
outsb
xor
sub
jmp
pusha
inc
dec
xor
fs
add
mov
jns
add
push
add
xchg
sbb
mov
dec
lods
mov
sahf
arpl
dec
sbb
push
leave
cmpsb
shrb
cmpb
das
insl
pop
cmp
scas
mov
pop
dec
xor
push
pop
popf
test
xor
in
lahf
push
push
shl
cld
add
outsl
push
push
xor
andb
jb
mov
sub
or
xor
cli
xlat
lahf
and
xchg
mov
inc
aam
inc
xor
xor
inc
xchg
cmp
js
lock
pop
xchg
imul
jmp
sub
jno
mull
lods
sbb
xchg
test
xor
pop
xor
jne
scas
js
out
jno
dec
iret
dec
add
sbb
add
or
pop
xchg
mov
pushf
ret
subb
sbb
jp
xchg
insl
sbb
jle
loopew
jno
xorb
xlat
or
fsubrs
iret
mov
cmp
test
ljmp
test
ss
cs
mov
movsb
sbb
test
sub
and
pop
sahf
fcmove
jns
pop
lret
add
xchg
push
ja
mov
sub
mov
xor
out
cld
xor
stc
gs
jne
add
mov
mov
sbb
lods
data16
stc
and
scas
mov
shll
in
cmp
scas
cmp
bound
xor
pop
pop
insb
xor
adc
cmp
fcoml
mov
les
adc
pop
push
push
into
testl
cltd
leave
mov
pop
addr16
data16
sbb
arpl
mov
push
lods
int
mov
sub
cmp
sub
cltd
add
jbe
cli
rolb
xor
jnp
dec
mov
les
jecxz
pusha
adc
mov
bound
popa
jae
mov
imul
push
cmp
arpl
xchg
pop
fisubs
jp
dec
xchg
xchg
les
inc
adc
call
or
lret
adc
mov
mov
and
out
in
shll
lock
xor
stos
loope
pop
orb
mov
add
popa
cmp
inc
push
aas
xor
inc
rorl
push
mov
cld
movsl
aam
imul
out
leave
inc
mov
ss
shrb
add
into
scas
lock
scas
loop
stos
sub
jo
xor
sub
scas
int3
aaa
inc
incl
adcl
fiadds
loop
add
pop
sti
lods
sbb
inc
iret
movb
jecxz
fidivl
or
imul
fstpl
mov
push
adc
mov
mov
mov
inc
push
loop
xchg
cwtl
inc
loopne
mov
sub
inc
out
imul
int
push
lds
and
xchg
sbb
inc
scas
adc
imul
cmpsb
test
test
dec
loop
fs
hlt
mov
jl
ja
sahf
loope
mov
ss
dec
outsb
xchg
xchg
out
cmpsb
mov
sub
push
andb
pop
sub
dec
dec
or
adc
shr
fisttps
nop
sbb
mov
add
xchg
inc
jmp
pop
cmp
or
lock
jo
out
aam
jb
out
push
cmp
push
mov
mov
xchg
cmp
pop
sub
imul
hlt
jle
ljmp
imul
popf
int3
cli
daa
dec
je
popa
outsl
mov
xchg
mov
push
repnz
push
sub
push
pop
push
mov
in
push
lock
stos
dec
inc
cmpsb
cltd
out
out
test
pop
loopne
int
lahf
lds
aad
loopne
rcrl
inc
aad
jo
xchg
stos
add
mov
iret
mov
sub
hlt
rorb
out
mov
dec
jae
pop
mov
adc
mov
stos
std
mov
dec
mov
imul
rcr
movsl
sbbl
mov
ret
mov
add
mov
mov
shrb
bound
insb
in
xchg
fistpll
cmp
pop
xchg
fldt
sti
and
int
mov
and
mov
push
push
rolb
bound
bound
loop
leave
jns
or
push
out
dec
add
jbe,pn
jmp
lock
cmpl
mov
fwait
out
iret
daa
fwait
xchg
pop
pop
adc
pop
inc
sbb
notb
cld
sub
push
xor
popa
xchg
push
jecxz
call
gs
pop
lahf
jmp
push
and
jmp
out
fisubl
jnp
push
and
push
sbb
or
out
rcrl
je
mov
test
stc
mov
xchg
push
sti
roll
cld
xor
mov
mov
mov
push
cmc
lret
jnp
imul
dec
sub
int3
in
sahf
mov
inc
mov
add
gs
int3
inc
lods
std
or
dec
repnz
fwait
push
xchg
call
mov
aaa
mov
xor
out
lret
inc
add
dec
cmpl
adc
divb
add
pop
nop
add
sti
fisubs
sahf
dec
dec
push
push
fcomps
ss
xchg
cs
in
inc
fsubr
fbstp
aas
xchg
test
jl
aaa
inc
in
jge
scas
adcb
outsb
leave
int
and
and
rclb
adc
rcr
jo
call
pushf
cltd
jb
push
mov
push
xchg
into
dec
fidivrs
or
sub
cltd
jnp
sbb
ljmpw
repz
cmp
cmpsb
push
xchg
out
fs
jmp
out
add
repnz
cmpsl
adc
and
mov
inc
std
jae
loop
mov
mov
push
fimuls
mov
and
aam
mov
or
punpckhdq
in
imul
mov
outsl
xchg
add
sub
scas
and
sbb
pop
mov
mov
iret
int
hlt
xorb
push
inc
jmp
xor
lret
rcrb
int
adc
sti
repz
xor
mov
ss
pop
insl
xlat
xchg
sub
or
mov
adc
dec
xchg
std
call
in
loope
icebp
outsb
push
loop
and
fidivl
sti
loope
sarb
data16
rorl
and
call
inc
jmp
adc
mov
adc
aam
js
pop
fdivr
cmp
ja
jb
addr16
and
shll
std
add
aad
ret
popf
and
loop
js
add
pop
gs
sbb
cmp
push
imul
cwtl
mov
ljmp
repz
dec
das
sub
negl
notb
fdivrl
cmovl
arpl
scas
pushf
lds
pop
insb
xchg
dec
popa
aam
push
mov
ljmp
fidivrs
pushf
xchg
inc
int
adcl
pusha
xchg
daa
pop
mov
popa
inc
fwait
inc
jge
test
js
mov
in
mov
pop
sub
jge
add
mov
test
inc
xor
aad
call
dec
dec
rcrb
mov
jne
dec
and
push
and
mov
into
mov
cmp
mov
ljmp
xchg
mov
jnp
xchg
loope
ret
subl
ss
xlat
mov
into
loop
in
xlat
dec
sbb
or
fwait
mov
cmc
cmp
enter
cwtl
ficomps
lret
test
mov
jg
dec
jecxz
arpl
pusha
add
add
adc
xor
sbb
lahf
js
loop
in
in
pop
aam
add
mov
loopne
push
scas
add
repnz
push
mov
lret
out
out
mov
fwait
arpl
jne
mov
adc
jne
inc
cmp
xor
scas
add
add
xchg
or
xor
push
out
jo
movsl
xor
push
dec
inc
pop
sbb
popa
xchg
push
xchg
xchg
cs
and
outsb
push
rclb
mov
mov
and
adc
xchg
mov
in
inc
arpl
jno
scas
xchg
adc
mov
add
lcall
jns
ja
cmpsl
mov
and
jl
xlat
pushf
lahf
sub
sbbl
sub
add
insb
jbe
outsl
or
les
outsl
cmp
mov
inc
xor
xor
into
pop
sub
std
pop
cmp
cmp
sti
mov
and
or
inc
stc
pop
mov
loopne
add
mov
sub
lock
push
inc
and
sub
inc
mov
pop
push
aam
pop
push
mov
in
jbe
add
insb
ret
imul
enter
jg
cwtl
gs
scas
push
xor
sti
dec
movsl
adc
fwait
dec
lahf
xor
es
and
add
cli
pop
mov
es
nop
lahf
rcrb
inc
push
add
gs
sub
sbb
shll
ficompl
in
pop
inc
pop
mov
xchg
test
fucomip
mov
loopne
bound
int3
cmp
loopne
int3
stc
test
sub
lahf
xor
sub
rol
push
imul
mov
out
pop
sub
push
ret
stc
je
lahf
push
cwtl
jno
lahf
sbb
pop
pop
mov
mov
xor
mov
test
pop
mov
inc
push
testb
iret
stos
test
idivb
push
and
adc
mov
dec
repz
jbe
adc
subb
push
adc
sub
push
and
jns
gs
shrb
xor
sbb
mov
mov
sub
or
fwait
shrl
inc
test
xor
imul
pop
call
leave
scas
inc
sub
pop
xorl
adcl
orl
xorb
lock
fwait
out
pop
and
bound
fsubs
js
aad
pop
sub
add
sahf
pop
jle
xchg
movsl
lahf
adc
or
sub
icebp
cmp
xchg
jnp
test
and
mov
scas
adc
jl
mov
rcl
adc
add
cmp
data16
pop
test
icebp
jp
shrl
push
bound
jns
push
les
lcall
cmp
push
cmp
frstor
adc
je
and
lods
std
dec
cmpl
scas
cld
xor
fs
pushf
dec
mov
sarl
scas
and
shll
fs
xchg
cmp
xchg
pop
pop
mov
test
imul
loop
mov
dec
xchg
and
loopne
or
insl
ljmp
mov
sub
int
sbb
enter
mov
ljmp
test
or
lea
dec
push
outsl
cmp
out
movsl
xchg
xchg
leave
sbb
adc
lods
enter
jle
fs
imul
xchg
jmp
in
xor
mov
cli
dec
dec
mov
ds
faddl
insl
add
std
lret
xchg
mov
inc
icebp
cmp
cmp
xchg
lods
and
movsb
hlt
and
mov
fldt
test
mov
roll
mov
ss
in
sub
in
cltd
xchg
jg
mov
mov
jl
fldcw
mov
push
mov
pop
imul
movsl
lds
xor
inc
inc
pushw
dec
inc
mov
imul
jmp
popf
popa
mov
push
fstpt
jnp
int3
data16
into
pop
inc
push
das
je
jecxz
xor
loopne
sbb
retw
inc
xor
stos
and
add
fldenv
mov
stos
into
xor
lods
inc
or
sbb
and
xor
cli
xor
push
outsb
data16
mov
cmp
inc
movsb
push
xchg
xor
cmpsl
jle
jmp
imul
jns
shrb
scas
bnd
sub
xchg
mov
cli
mov
dec
pop
jmp
cmp
mov
pop
call
inc
jns
xor
sbb
shr
fnstcw
push
call
int3
cmpsb
xor
pop
test
mov
cwtl
add
jg
push
stos
ret
adc
orl
bound
adc
push
dec
js
pop
pushf
out
enter
jno
std
cmp
enter
cs
sbb
xchg
push
lcall
jnp
xor
or
sti
sub
es
sbb
repnz
pop
stos
frstor
test
and
test
jnp
and
dec
xchg
clc
push
aaa
jle
cmp
xchg
or
sbb
xlat
cli
cmp
loope
inc
inc
dec
cmp
add
fcompl
lea
sbb
sub
xchg
fistps
cmpsl
ret
lcall
cli
aad
inc
insl
rcr
pop
cld
fucomip
mov
mov
inc
inc
rcrb
cmpsb
out
sub
inc
push
xchg
pop
xchg
imul
jne
jns
imul
std
ss
push
lret
xor
jmp
out
jecxz
and
xchg
sbb
loopne
cmp
sbb
ret
add
enter
jmp
dec
cwtl
pop
mov
adc
lock
xchg
aad
add
mov
xchg
dec
dec
mov
int3
sub
jno
jbe
jo
xchg
dec
loop
cs
dec
icebp
mov
in
std
jo
movsb
add
mov
xchg
iret
xchg
out
sub
jns
sarl
xchg
in
fisubs
or
ficompl
cmpsb
mov
and
dec
rorb
sbb
aad
je
fmuls
mov
out
mov
jp
push
fdivs
adc
xlat
adc
loopne
push
loop
enter
test
idiv
push
aaa
or
mov
pop
inc
adc
push
cmp
jle
xchg
xor
xchg
and
insb
jno
aaa
sub
in
xor
add
adc
orb
repz
jne,pt
mov
je
or
xor
mov
lods
sub
jmp
lea
mov
cmp
push
cltd
jno
cli
cmp
jmp
adc
jmp
icebp
mov
push
mov
adc
enter
insl
rorl
sbb
inc
gs
loopne
fsubrl
mov
out
mov
mov
shrl
jb
arpl
je
andl
lcall
sbb
in
add
popa
dec
inc
mov
and
sar
push
mov
and
pop
mov
test
add
pop
pusha
cmp
xrelease
inc
jo
iret
sub
in
pop
mov
inc
mov
push
mov
cmp
sub
jne
sub
mov
push
std
inc
leave
xor
mov
mov
pop
sbb
jmp
loop
frstor
jne
cmp
add
in
hlt
mov
dec
lret
loope
lods
sub
inc
mov
lock
jb
movsl
lods
ficomps
out
cltd
push
xor
ret
sbb
lock
mov
stos
jge
repz
lods
pop
and
adcb
jae
inc
dec
jno
addr16
jne
scas
mov
or
inc
in
jne
bound
loop
mov
cmp
aaa
lea
mov
sbb
out
mov
pop
and
aad
icebp
shrb
xor
jecxz
movsl
inc
das
rorl
data16
mov
mov
scas
adcb
stos
adc
enter
aaa
cmpsl
mov
mov
pop
stc
std
dec
mov
aam
out
iret
push
scas
adc
leave
add
outsl
addr16
jnp
push
aaa
lock
aaa
scas
std
popa
mov
ljmp
jb
sti
stos
inc
outsb
int3
adc
mov
das
adc
dec
outsb
xlat
cld
mov
dec
fidivs
xor
xchg
loopne
jns
push
dec
fisubs
imul
lds
in
sub
int3
adc
push
cmp
mov
push
mov
in
sub
jp
mov
xor
popa
dec
or
jecxz
adc
cld
insb
in
push
pusha
shlb
lods
pop
inc
sti
lcall
push
jb
xlat
adc
and
xchg
fpatan
dec
mov
jo
es
mov
cmp
add
adc
flds
and
fwait
sbb
cmp
dec
push
shrl
cmpsl
push
lea
dec
repnz
jb
notb
fwait
mov
mov
jbe
bound
mov
sbb
ss
std
sbb
js
dec
xchg
shll
xchg
js,pn
shll
adc
imul
add
push
stos
xor
in
and
pop
les
icebp
add
xchg
pushf
sbb
cltd
ficoms
pop
mov
cmp
push
sub
push
pop
lds
mov
pusha
out
clc
test
jg
icebp
or
data16
mov
mov
xchg
cld
or
sbb
shll
outsl
test
ret
mov
inc
jae
daa
sbb
mov
mov
mov
aas
js
jle
ljmp
mull
ret
xchg
in
or
adc
leave
js
lcall
out
xor
jge
mov
dec
sbb
pop
lods
imul
jno
pop
mov
cwtl
xor
insb
sahf
mov
mov
repz
jp
push
outsb
mov
fistpll
jecxz
rcr
popa
outsl
clc
inc
das
add
jae
sbb
std
inc
jbe
addr16
dec
mov
add
ret
adc
or
xlat
andl
sub
cmp
dec
rcrb
mov
mov
loope
add
ret
dec
lea
rclb
mov
inc
jo
xlat
jp
mov
xchg
ljmp
les
cltd
int
cmp
arpl
fimuls
pop
xchg
test
mov
clc
gs
inc
mov
push
inc
out
dec
mov
iret
cmc
or
sub
mov
pop
jns
add
sbb
sub
adc
inc
sbb
mov
fnstcw
cs
dec
cld
push
jnp
shll
jg
mov
dec
xchg
push
mov
mov
inc
ljmp
jnp
fiadds
and
or
add
rorl
addr16
hlt
mov
mov
jno
subl
pop
push
jmp
cwtl
or
cwtl
cmpb
rorl
cmp
aam
xor
test
adc
sub
push
mov
dec
int
cmp
add
mov
mov
in
stos
pop
pop
xorl
shr
sub
es
scas
subb
ficompl
cs
jge
setae
cmp
loop
cmp
or
sub
mull
xchg
mov
sar
pusha
cmp
jnp
sbb
push
sbb
push
mov
mov
or
icebp
or
fistps
inc
shlb
adc
pop
dec
clc
addr16
gs
pushf
stos
xor
aaa
and
pop
notl
pop
jnp
inc
adc
lret
cmpsl
out
xchg
clc
enter
aaa
jo
adcb
jecxz
xchg
cmp
out
mov
loopne
repz
mov
clc
push
mov
and
mov
xchg
fisttpl
bound
sub
popf
jbe
mov
daa
popf
pop
sub
jle
push
addl
roll
lcall
dec
inc
push
fsts
aam
sub
mov
cltd
cmp
enter
pop
dec
out
into
shl
cmpsl
aas
test
dec
scas
stos
xchg
and
push
rcrl
icebp
daa
roll
ss
cmp
inc
mov
push
pop
test
loope
sbb
pop
mov
jl
adc
cmc
cltd
mov
add
xlat
push
adc
mov
ficomps
rcrl
xor
nop
mov
xchg
cmp
sub
inc
and
je
out
jle
sub
ss
stos
in
test
mov
daa
add
xchg
mov
mov
cmpb
int
cmc
push
mov
inc
jae
cmc
push
fxch
pop
push
mov
or
imul
lds
sub
pop
xchg
pop
lret
addl
jne
push
or
pop
mov
pop
or
sub
in
dec
jl
iret
mov
pop
push
hlt
mov
ljmp
xchg
inc
ret
sbb
mov
stc
loope
sti
jmp
daa
in
and
insb
je
sbb
in
aas
mov
jne
and
pop
pop
push
mov
jnp
xchg
or
sbb
hlt
pop
imul
inc
pop
mov
movsb
sbb
cltd
jl
loopne
xchg
fiadds
ljmp
inc
fs
rcrb
xchg
mov
dec
idiv
jg
xor
scas
adc
push
neg
pop
shlb
bnd
mov
shlb
test
in
sub
inc
or
cmp
sub
hlt
inc
dec
cmp
mov
roll
xchg
jno
add
mov
cmc
cmp
test
jnp
cld
mov
jp
mov
sbb
addr16
shrb
push
data16
xchg
imul
push
aaa
pop
mov
sbb
pop
mov
lcall
mov
jno
hlt
cmp
mov
out
add
mov
jne
leave
loopne
dec
movsl
inc
and
outsb
inc
insl
ret
ret
jno
jbe
pop
inc
push
sub
mov
mov
gs
outsl
add
push
adc
mov
cmp
xchg
add
inc
clc
add
aad
mov
fnsave
scas
mov
in
jns
data16
imulb
mov
pop
cmpsb
adc
pushf
jo
imul
bound
in
cmp
std
push
adc
sub
stos
sahf
xor
insl
aas
cmp
leave
sub
cwtl
out
and
adc
mov
xor
ret
aas
clc
arpl
adc
lods
xchg
push
mov
outsb
inc
pop
pop
sahf
mov
add
mov
inc
enter
adc
insl
jle
xor
stc
or
cmp
ljmp
mov
out
call
rcl
inc
xor
lods
lea
inc
pop
jg
jmp
rcll
sub
dec
push
jg
pop
adc
add
scas
pop
adc
mov
push
jmp
jnp
fildll
pop
mov
fisubs
push
in
popa
popa
mov
mov
lods
imul
ficompl
or
mov
and
jmp
xorl
iret
push
lret
jb
xlat
lret
rorl
adc
movsl
mov
push
pop
les
sub
sub
test
mov
arpl
pop
add
mov
repz
sub
add
sbb
mov
xchg
cmp
jmp
add
cmpsb
xor
dec
xchg
adc
ljmp
divl
out
mov
scas
sbb
fistpl
push
mov
jle
fldcw
dec
add
ds
mov
xchg
mov
and
mov
add
jno
aas
xchg
sarb
pusha
sub
test
dec
movsl
dec
and
ss
int
fistpl
adc
test
xor
cmp
lea
jmp
roll
pusha
xchg
push
adc
cmp
pop
xor
xlat
fisttpll
pop
roll
dec
xlat
divb
inc
data16
xor
cwtl
mov
lret
mov
mov
js
fcompl
hlt
divb
jns
hlt
rorl
xor
adc
movsl
mov
outsb
add
add
scas
xor
ret
xor
stc
inc
jl
xchg
roll
arpl
sbb
stos
icebp
pop
xchg
hlt
push
mov
xor
mov
cmpsl
cmp
jbe
add
or
pop
pop
mov
xor
stos
add
fwait
mov
jle
lods
lds
push
sar
inc
xor
loop
mov
rorl
icebp
mov
mov
js
ret
jbe
xor
add
aas
mov
mov
add
xchg
sub
shr
pop
jp
cmp
push
das
sub
jle
in
sub
sub
fsubs
add
sbb
out
mov
mov
stos
mov
mov
adc
mov
int
pushl
push
in
ret
pop
xor
xchg
mov
mov
repz
stc
sub
and
out
pop
mov
push
cmp
aam
and
inc
out
fmull
sahf
push
fsubrl
lret
pop
jne
mov
test
jecxz
pop
outsb
xchg
jae
int3
sub
rorb
ss
out
repz
cli
add
or
adc
imul
shrb
lods
jmp
mov
sbb
sar
push
aam
push
xor
lods
hlt
mov
ret
xchg
cmpl
cltd
dec
pop
dec
and
dec
pop
jo
inc
rcll
bound
xchg
cmc
cld
in
mov
sub
inc
adc
addr16
push
es
adc
and
mov
mov
loopne
rcrb
sub
inc
jns
mov
mov
mov
lahf
xor
mov
pop
aam
mov
lock
sti
xor
cmp
sbb
in
out
dec
sub
dec
cltd
fsubl
gs
ljmp
in
jb
mov
dec
jg
push
js
mov
out
insl
in
xchg
pushf
aas
test
lret
test
in
repz
mov
cmp
std
pop
pusha
loopne
data16
aas
ds
inc
stos
mov
pushf
pop
cltd
pop
ret
adc
gs
mov
lret
cmp
and
adc
fisubs
and
pop
dec
imul
es
outsb
insb
pop
inc
mov
xchg
add
and
xchg
mov
add
aas
pop
pop
inc
push
aaa
pop
cmp
mov
js
mov
rolb
shrb
in
outsb
sub
sbb
lods
add
cmp
int3
icebp
and
pop
xor
insl
pop
pop
dec
cmpsl
movsb
mov
lcall
daa
jno
push
xorl
inc
jp
jg
cmp
inc
cmp
sbb
movsb
aam
out
pop
push
push
xchg
jg
inc
pop
int
add
inc
je
cpuid
test
dec
adc
xor
fistpll
sahf
inc
cwtl
subl
insb
push
adc
dec
add
cmovne
incl
in
adc
mov
and
push
pusha
insl
je
fadds
push
and
push
push
ss
adc
lds
sbb
repz
imul
jg
push
clc
not
push
ss
cmp
inc
pop
push
xor
or
cmpsl
dec
call
push
pop
aas
or
ljmp
jmp
dec
ficoms
movsb
adc
ret
xchg
mov
lods
lock
fistl
sarb
jle,pt
dec
push
addr16
sub
mov
jle
or
cli
mov
cmc
or
inc
int
pop
dec
sub
mov
mov
imulb
jns
gs
jo
or
movsl
dec
in
call
sub
sbb
push
adc
and
stos
loop
nop
jo
fsubrs
mov
mov
add
push
inc
adc
pop
cmp
iret
movsb
add
or
es
test
stc
cld
or
repnz
mov
movl
test
xchg
mov
mov
and
scas
idiv
inc
xor
add
sub
in
inc
xor
ljmp
jns
dec
incb
movsl
mov
sub
lret
lahf
cmp
hlt
test
popf
aad
bswap
aad
fs
loope
xor
jno
mov
es
mov
add
test
leave
push
or
xor
jecxz
cmp
repz
sub
cmp
ljmp
push
xor
insb
jge
sub
lods
mov
ret
inc
popa
into
adc
pop
cmpsb
sar
xchg
addw
mov
dec
pop
sbb
dec
mov
add
inc
mov
mov
addr16
in
push
jno
aam
stc
into
lret
pop
cmp
loop
ret
push
xor
mov
scas
fadd
xchg
or
jo
and
push
jns
jne
mov
xchg
inc
cmc
into
js,pt
xor
xlat
jg
mov
dec
jg
add
aam
shlb
cmpsl
je
stos
mov
lods
cmp
mov
xor
out
das
loopne
cmpb
into
xor
stc
test
stos
push
fiaddl
outsl
xchg
js
gs
inc
lods
mov
shr
xchg
jg
cmpsl
mov
xchg
mov
dec
cltd
inc
lods
jno
add
jl
xchg
enter
cwtl
mov
into
stos
in
inc
enter
out
mov
jl
jb
rol
shll
movsb
cmc
jmp
xor
jg
pop
repnz
jbe
inc
scas
cmpsb
mov
hlt
mov
cwtl
xchg
cwtl
ljmp
outsl
stos
sbb
test
into
into
and
add
mov
and
jo
push
dec
sub
jl
addr16
and
sbb
repnz
jb
test
pop
repnz
incl
sti
cmpsb
mov
sub
pop
icebp
outsb
mov
inc
jmp
xchg
add
xchg
test
dec
sub
xorb
pop
pop
push
xchg
pusha
mov
pop
push
add
xlat
mov
ljmp
sub
incb
scas
jae
aam
ss
pop
mov
aaa
fmull
dec
cmp
mov
mov
loope
cmpsb
add
xchg
ret
loop
rolb
jg
adc
leave
bnd
sub
push
cmp
sbb
mov
sub
add
or
dec
mov
aaa
lret
int
les
ss
dec
or
mov
sahf
scas
xchg
lock
in
mov
sbb
mov
lcall
mov
xor
add
test
pop
es
dec
mov
pusha
adc
inc
filds
movsl
mov
dec
lret
movl
pop
xchg
out
jle
sbb
lahf
ja
and
and
mov
sub
dec
mov
fs
ljmp
and
jle
mov
pop
mov
and
mov
push
insl
xchg
mov
ss
test
mov
cs
sti
bound
es
fnstsw
pop
mov
addr16
test
sbb
in
mov
mov
pop
call
nop
ret
iret
and
fstl
cli
and
xchg
jp
stc
filds
ja
push
stc
in
xchg
bound
pop
out
sub
pop
movb
push
test
loop
subl
movsb
xorb
xchg
js
xlat
inc
sti
lods
idiv
dec
lods
xchg
mov
mov
mov
scas
pusha
nop
test
aad
pop
jns
cmp
cmp
imul
jge
out
je
cmp
pushl
cmp
dec
push
pop
sahf
xchg
sbb
jecxz
ret
adc
scas
outsb
mov
aam
adc
jbe
das
jmp
mov
dec
adc
dec
popl
inc
dec
js
mov
pop
inc
inc
ss
jmp
push
dec
or
std
mov
sahf
scas
mov
leave
push
inc
and
rcl
mov
fisttpl
lcall
addr16
push
cld
out
and
into
sbb
std
xchg
adc
lods
repz
mov
cmpxchg
daa
fisubs
xchg
cmp
push
fwait
sbb
pop
fwait
popa
xchg
div
je
outsl
in
sub
or
lcall
into
add
lret
mov
pop
in
rorb
or
push
or
jae
jmp
in
pop
ret
push
fsubrs
add
cmp
push
xchg
iret
jecxz
cmp
add
push
fs
fidivl
add
pop
push
outsb
lret
xacquire
inc
mov
dec
lods
pop
push
mov
into
out
lret
movsl
lcall
mov
xchg
add
sub
jecxz
or
loopne
nop
sbb
mov
jecxz
pop
adc
mov
mov
mov
xchg
dec
xor
popf
and
inc
in
into
sbbl
sbb
mulb
dec
rcrb
fdivrl
aad
fidivl
rcl
lcall
mov
mov
sub
fldl
xlat
adc
cmp
mov
jnp
dec
lock
cmp
mov
sub
out
mov
das
mov
sbb
cmp
push
nop
add
pop
jp
inc
mov
inc
ret
aam
pop
lods
fnstcw
pop
in
int3
inc
mov
and
pop
jl
push
test
mov
cmc
mov
push
cmc
push
or
mov
or
imul
adc
repnz
ljmp
fdivl
aad
hlt
adc
xor
out
shrb
xor
dec
andl
mov
pop
cwtl
adc
xchg
xchg
pushf
mov
cld
push
push
push
inc
push
sbb
mov
rcll
outsl
push
hlt
aas
daa
jg
xchg
fwait
pop
int3
cmp
mov
cmpsl
ret
int
adc
fcom
ljmp
insb
addr16
xchg
out
mov
fwait
or
inc
arpl
dec
mov
or
cmp
jecxz
lret
or
aaa
pop
sub
mov
pop
jno
std
dec
scas
sahf
imul
ljmp
push
test
pop
and
pop
test
mov
scas
js
stos
test
unpcklps
push
dec
aad
popf
imul
xchg
add
or
xor
ja
cld
stos
and
lret
push
push
xor
adc
rorb
data16
rorb
gs
or
test
insb
ret
cmp
and
push
pop
cmp
inc
popa
pusha
fs
fucomp
pop
jo
outsb
xlat
mov
jmp
mov
sub
and
dec
adc
add
out
fs
mov
jne
and
sub
outsl
mov
insb
sbb
xchg
and
gs
jge
mov
sbb
adc
das
cmc
push
fnstcw
rorb
movb
push
lods
in
lea
enter
pop
into
neg
cmp
pusha
out
insb
subb
mov
test
xchg
rolb
cli
push
and
rolb
lret
jge
in
inc
mov
adc
push
xchg
cld
sub
dec
popf
push
or
aam
lret
adc
sub
sbb
and
inc
stos
sahf
or
adc
mov
addb
stc
sub
push
cmp
and
test
ret
mov
dec
cmp
lds
push
xor
les
jno
pop
lock
mov
fiaddl
stos
add
repnz
subb
in
and
out
loopne
and
xor
or
test
push
mov
dec
jl
fdivs
jp
test
cmc
js
inc
punpckhbw
mov
mov
or
mov
and
fnstenv
push
sub
mov
jg
cmp
xor
add
sbb
fdivrs
arpl
ret
adc
nop
cmp
data16
mov
enter
xchg
and
repz
cmp
sbb
add
ds
inc
test
scas
insb
lcall
daa
cmpsl
sub
sub
sbb
inc
push
js
aad
add
add
lods
cwtl
ret
adc
gs
add
pop
imull
shrl
repz
out
mov
adc
cmp
xor
jno
mulb
pusha
xor
push
loopne
add
or
add
subb
sbb
repz
fsubl
add
xchg
inc
mov
popf
jne
jge
mov
int3
push
pusha
addr16
sbb
dec
cli
adc
sbb
jne
jnp
jmp
xchg
push
cltd
shll
cmc
pop
jbe
pop
mov
ss
sbb
sub
es
cld
mov
out
mov
popa
jne
mov
xor
sti
xchg
pop
fcoms
jg
sbb
jno
mov
into
sbb
cmc
jle
loope
add
rorb
pushf
js
dec
cltd
adc
enter
arpl
movsl
mov
insb
pop
sbb
adc
stos
lods
nop
subl
addr16
pushf
or
test
pusha
fs
xor
fs
popf
xchg
sub
mov
mov
mov
or
js
jecxz
jmp
loop
mov
mov
adc
and
outsw
jo
fnstcw
pop
xchg
out
and
in
insb
add
xchg
xchg
int3
jnp
daa
push
and
cmp
sbb
adc
addr16
lret
xchg
daa
sbb
out
mov
aam
clc
lcall
xchg
push
addb
lahf
xchg
and
pop
insl
int
int3
mov
ljmp
cld
mov
mov
aam
in
idiv
sbb
pusha
lret
xor
sbb
or
sub
jb
cmpsb
test
dec
mov
es
in
mov
mov
push
mov
dec
xchg
or
ret
or
nop
jns
ret
je
xor
lds
test
shll
mov
sub
loopne
lea
push
push
ljmp
xor
mov
pop
loopne
mov
push
sahf
jo
adc
pop
cltd
xlat
pop
cld
leave
fcmovu
jb
mov
lret
bound
gs
or
shll
push
jecxz
dec
fcmove
pop
add
call
dec
mov
mov
add
pop
cld
pop
sbb
sbb
idivl
inc
xchg
jae
adc
faddl
sub
movsl
aam
ret
adcl
mov
or
out
arpl
in
cmpsl
cld
cli
je
outsl
mov
push
leave
push
jne
xchg
lock
mov
inc
scas
sbb
and
push
pop
loop
xchg
cmpsb
sub
mov
xchg
nop
sub
shrl
cmp
fisubrs
cmc
lods
leave
fdiv
popl
sbb
xor
dec
pop
and
xchg
loope
mov
imul
sahf
jle
aam
pop
js
call
aad
mov
icebp
jmp
int3
negb
stos
loope
les
dec
xor
adc
inc
xor
xchg
scas
loope
cmp
aaa
cmpl
jo
andb
movsl
gs
scas
push
jo
cld
sub
dec
dec
out
negl
and
or
jmp
cltd
lret
lock
dec
jne
mov
sub
sbb
inc
lock
xchg
repnz
addr16
push
add
pushf
je
in
mov
mov
cld
lcall
add
pop
fsubrl
and
xor
and
xchg
mov
jecxz
sbb
fidivs
mov
push
js
loop
add
imul
xchg
push
in
lcall
jle
rcrl
cltd
xchg
mov
push
dec
jge
das
cmp
test
jne
popa
mov
jns
xchg
movsw
jecxz
out
lret
outsb
jle
loopne
push
mov
stc
or
sub
mov
insl
add
insb
sub
xor
mov
xor
xchg
cmp
stos
mov
aad
fbld
or
or
in
rorl
xchg
icebp
ja
cmpsb
sub
call
repz
es
aad
mov
lahf
negb
fucomip
out
std
or
popa
dec
out
icebp
iret
inc
subl
xor
inc
stc
addl
pop
jl
pop
dec
daa
ret
aaa
jae
dec
lea
pand
test
imul
sbb
sub
inc
fsubl
out
inc
in
bound
dec
test
shrl
pop
lock
cwtl
cmpsl
jge
repz
shrl
repz
dec
mov
cmp
ljmp
call
inc
xchg
push
sbb
push
add
aas
out
push
movsb
out
and
inc
rol
dec
mov
sbb
cmp
outsl
cld
scas
cmc
hlt
es
xchg
mov
adc
pop
mov
int3
int
ret
xchg
inc
or
fisubs
pop
sub
popa
adc
or
xorb
ret
cli
icebp
cmp
pop
scas
sarb
int3
gs
push
sbb
fcomps
subl
cmp
pop
mov
push
jg
out
jo
shll
xchg
mov
cld
mov
stc
and
adc
mov
mov
rcll
cmpsl
ja
push
dec
sarb
ror
dec
cmpsl
cli
sbb
fnstcw
pop
xchg
sbb
xchg
sbb
es
popa
sti
stc
xchg
int
mov
sbb
dec
sub
push
mov
dec
mov
dec
jne
mull
pop
cs
pushf
and
or
call
jo
dec
inc
scas
inc
jecxz
call
mov
aam
test
cmp
push
sub
and
inc
clc
imul
fldenv
xchg
mov
add
test
in
stc
xchg
out
pop
shl
sub
or
or
mov
lock
icebp
fbld
dec
fldcw
das
jl
mov
and
sbb
jb
or
fadds
mov
mov
icebp
and
fistpll
iret
stc
pop
rol
or
in
sub
repz
pop
dec
pop
cmc
mov
and
mov
pop
pop
cli
test
call
fcoml
ret
cmpsb
mov
xchg
movsb
mov
add
test
daa
sbb
or
mov
cltd
adc
cmp
movsb
cmpsl
cmovns
cltd
jp
rcl
inc
adc
orl
stos
int
icebp
or
lahf
fdivrs
xchg
add
into
int
movsl
adc
cli
in
dec
sbb
lock
dec
add
sub
dec
in
out
cmp
mov
push
jl
ret
test
in
mov
xchg
xchg
inc
dec
jg
adc
mov
mov
arpl
mov
inc
daa
xlat
fsub
push
sti
cmp
push
inc
pop
imul
push
sub
sbb
inc
into
dec
in
addr16
cmp
mov
mov
push
pop
jae
jl
xchg
push
scas
int3
jle
jo
movsl
adc
test
cmp
cmp
xchg
addr16
jg
or
lods
lret
rcl
pop
bound
stos
in
or
pop
mov
clc
mov
mov
fisttpl
pushf
roll
imul
test
dec
ret
sub
dec
pop
jns
pop
xchg
std
push
xor
sub
xor
xchg
pop
mov
jmp
andb
mov
pop
test
cmp
repnz
popf
enter
push
jnp
loop
ret
pop
jl
out
pop
mov
mov
add
lods
ret
pushf
int3
int
popf
sub
mov
mov
jecxz
cmp
push
cli
dec
and
fistpll
filds
shl
push
std
add
push
fstpt
and
cwtl
cli
pop
stc
adcb
mov
jmp
dec
mov
fsubs
dec
in
push
xchg
mov
out
notl
clc
jg
orl
push
sub
mov
aas
pop
add
jbe
or
lret
or
or
hlt
icebp
push
test
xchg
nop
fisubrs
mov
push
outsb
test
xchg
push
dec
test
test
adc
test
xor
cld
sahf
cmp
ds
enter
inc
in
push
add
pushf
sbb
mov
adc
pop
xchg
scas
add
dec
shll
int3
pop
mov
pop
jmp
pop
push
out
mov
push
push
inc
jecxz
jge
scas
cmp
and
std
lahf
ret
pop
lret
push
mov
xor
popf
add
mov
les
adc
add
jns
divb
lods
insb
pop
inc
jnp
dec
popa
jo
fwait
xchg
xor
sub
mov
inc
clc
outsl
jno
repnz
adc
xchg
sbb
cmp
js
and
mov
add
push
mov
xor
mov
sub
mov
pushf
xchg
push
pop
push
test
icebp
pop
std
in
xor
xor
and
fndisi(8087
cmp
jl
xlat
inc
lcall
aas
les
repz
xor
pop
lods
xchg
sbb
mulb
fst
ja
inc
scas
jno
add
out
orb
sub
add
js
pop
pop
push
imul
cli
and
popf
sbb
jno
int3
jp
rcrl
push
out
inc
cmc
std
sub
out
adc
push
sti
fistpl
pusha
push
cmp
pop
push
mov
inc
movsl
fwait
stc
push
in
mov
jg
jne
add
push
adc
pop
fnstenv
icebp
xchg
popa
gs
pusha
mov
pop
jne
lret
jge
push
data16
add
in
les
dec
cmp
in
mov
or
stos
mulb
mov
test
aad
lcall
test
insb
rcrl
lods
into
aaa
dec
xor
lods
pop
mov
int3
xor
and
xchg
mov
in
stos
sti
lret
sbb
out
inc
mov
dec
jno
jle
and
ret
mov
push
cmp
rcll
out
subb
mov
push
xchg
dec
cwtl
pusha
pop
je
jae
aas
push
push
fmull
ljmp
sub
sbb
dec
cs
icebp
jae
sbb
lock
ljmp
mov
pop
jg
movsl
jp
imul
pop
lahf
cmc
cld
aaa
test
adcl
popf
pop
imul
add
cmpsl
mov
std
flds
popf
ljmp
xchg
jnp
pop
out
loop
mov
sbb
ss
ret
outsb
sahf
and
push
sbb
jns
out
fdivl
dec
in
adc
jle
inc
das
adc
pop
notl
pop
pop
add
dec
push
lods
pop
imul
xor
iret
in
inc
jle
xor
cmp
inc
aad
outsl
jl
dec
ret
mov
mov
cmpsb
push
cld
xlat
pop
dec
scas
scas
out
add
or
aas
mov
xchg
cmp
pop
cmc
icebp
ja
mov
out
push
cmp
pop
pop
sbb
aaa
fcmovne
mov
dec
bound
jb
pop
xlat
mov
aaa
testl
push
jmp
scas
fs
nop
or
popa
mov
addr16
ja
idiv
nop
lret
out
push
add
in
test
repz
pop
shll
xor
insb
pusha
sbb
in
xchg
xlat
shrb
mov
hlt
test
js
push
fstpt
dec
and
xor
gs
sub
push
lock
push
jnp
push
rclb
fisubl
dec
fcoms
pop
mov
sub
jg
insb
xchg
xor
mov
inc
testb
inc
lret
and
push
mov
out
push
pop
dec
fcompl
inc
dec
cmp
test
mov
push
das
fnstcw
imul
cmp
fidivrl
ja
or
rcrl
aaa
int
int3
fnstsw
pop
mov
aaa
pop
imul
arpl
stc
pop
aam
adc
sbb
stos
imul
lcall
pop
cwtl
out
in
mov
add
push
test
add
push
lock
cmp
sub
mov
sti
stc
aad
mov
push
pop
addr16
mov
mov
test
pop
sbb
lcall
add
xor
inc
mov
int
xor
je
jl
add
call
cld
adc
dec
int3
lahf
loope
jb
xchg
and
dec
xchg
sub
mov
test
pop
mov
outsb
push
pop
xchg
dec
sbb
sti
inc
mov
stos
daa
mov
shl
sub
in
xchg
add
push
imull
mov
aam
insb
pop
mov
test
repz
daa
test
xor
arpl
sub
rcll
aas
jg
add
adc
outsb
fildl
mov
adc
fidivrs
xor
or
mov
sub
or
nop
les
movsl
out
rcll
outsb
int
mov
jp
adc
mov
jne
cmp
cmpb
sbb
inc
cld
cmp
popa
sub
test
aam
cmp
lret
pop
cmpsl
add
mov
cwtl
push
mov
inc
imul
loope
ja
inc
sbb
sub
aaa
aad
sub
into
repnz
jmp
ret
shlb
dec
pop
jns
dec
or
leave
mov
adc
insl
and
out
rcl
pop
daa
dec
sub
in
add
and
jge
in
push
loopne
out
pusha
in
insb
aam
lock
mov
sbb
loop
std
mov
fcmovbe
stos
and
or
or
push
loopne
dec
iret
push
and
lds
push
leave
addr16
or
dec
dec
add
mov
cmp
imul
leave
adc
push
add
lret
cmpsl
and
xlat
in
pop
stos
pop
push
clc
sub
insl
mov
clc
in
mov
pop
lahf
add
mov
repnz
mov
xor
or
dec
sbb
cmp
sub
test
insl
ret
in
xchg
je
in
and
in
mov
and
lret
fisubs
fldt
inc
cmp
inc
rcl
push
test
push
mov
repz
xor
hlt
pop
mov
cmpsl
int
das
jne
push
data16
jg
mov
mov
sarl
cltd
arpl
adc
faddl
push
ds
data16
mov
mov
lret
lock
pcmpeqd
scas
pop
adc
mov
insl
or
imul
sub
mov
dec
pushf
dec
fstpt
add
dec
add
add
aas
or
psubusb
xor
ljmp
out
xor
push
enter
xchg
adc
outsl
inc
or
dec
rcll
push
xchg
xor
mov
and
mov
out
mov
pop
scas
lods
xor
xchg
lret
aad
and
or
hlt
movsl
fwait
sbb
pop
movsb
aam
xchg
cwtl
xchg
adc
push
pusha
arpl
insl
add
push
rcrb
xor
aaa
and
xchg
jecxz
jp
rclb
mov
dec
inc
jg
faddl
push
outsl
sub
sub
shlb
push
jmp
pop
mov
in
adc
ret
xchg
and
xor
insl
jle
jmp
sub
cmovg
sbb
adc
push
test
jge
adc
lcall
popa
sub
outsl
imul
outsl
bound
aad
and
lret
xchg
sbb
dec
sbb
pop
cmp
mov
sbb
jb
rclb
outsb
bound
repz
push
xchg
dec
cwtl
pop
repnz
scas
push
lret
adcl
add
stos
dec
dec
sar
fwait
push
rcr
ror
out
daa
mov
sub
aam
lret
xor
lock
push
pop
movsb
add
or
jge
jae
stos
jmp
int
and
subl
and
and
cmp
jg
push
or
addb
jne
std
rcrl
jbe
arpl
dec
xor
icebp
mov
je
psraw
xchg
push
inc
movsl
mov
es
cs
dec
ss
mov
pop
xor
dec
mov
inc
push
loopne
in
xor
xchg
and
fucomi
test
and
pop
dec
adc
push
sbb
add
xchg
cli
pop
mov
mov
lahf
or
rcll
adc
inc
lods
jb
dec
inc
js
or
hlt
inc
push
adc
bound
daa
pop
data16
fs
test
jle
inc
bound
ljmp
xor
add
push
addr16
push
add
out
adc
lods
inc
jge
and
dec
and
mov
adc
mov
inc
in
mov
sub
push
clc
popf
fnstenv
addb
mov
mov
xor
jnp
test
jl
sarl
inc
ja
movsb
mov
jns
addb
popa
int
or
testl
dec
pop
xorb
or
lods
repz
fistpl
and
inc
xor
pop
notb
and
mov
push
xchg
push
loope
and
addr16
jecxz
xchg
xor
aam
lahf
pop
pop
xchg
lock
mov
stos
hlt
out
adc
sub
das
jb
aaa
cld
ss
mov
rcrb
les
mov
out
pop
pop
xorl
sbb
xchg
dec
sti
jmp
inc
int
rolb
push
mov
sbb
push
adc
cmp
pavgw
mov
outsl
pop
out
cwtl
insl
sbb
fprem1
sub
std
flds
xchg
sub
fcom
in
or
sbb
scas
adc
mov
cmp
fdiv
dec
mulb
mov
fbstp
adc
ljmp
cld
das
shrl
daa
adc
xor
ret
push
fisubrs
aaa
mov
dec
pop
cmp
hlt
movzbl
xor
mov
les
pop
fldl
cwtl
cmpb
inc
cmp
pop
popa
jecxz
fistps
adc
sub
call
movsb
lcall
jbe
test
cs
push
jecxz
call
fldcw
je
sub
mov
mov
shlb
inc
push
inc
push
jge
orb
mov
push
jno
arpl
aaa
sbb
cli
lods
test
pusha
adc
jns
cwtl
xchg
xchg
sarb
fwait
rcr
addb
fwait
adcb
cmpb
pop
inc
sbb
pop
xchg
daa
sbb
and
cli
and
pop
aad
xorl
xchg
push
aas
iret
nop
aas
shrb
push
sub
jle
lret
data16
mov
push
rorb
imul
loope
and
shl
es
xchg
ficoml
mov
ret
dec
sbb
lds
mov
inc
arpl
cmp
cmpsb
insb
dec
daa
mov
mov
mov
loop
jbe
mov
pop
in
int3
mov
push
and
insl
out
mov
les
sub
stos
outsl
push
js
int3
push
xlat
jnp
loop
popl
sahf
push
imul
pop
ret
int
test
mov
fcmovu
out
nop
cmpsl
xchg
mov
jbe
fldl
mov
cmp
jns
push
sub
xchg
daa
xchg
stos
inc
jne
shr
jnp
or
out
and
push
int3
enter
insl
pop
push
fisttpl
and
inc
lcall
test
sub
xchg
push
scas
push
mov
ficompl
push
fidivrl
out
or
insl
in
or
dec
fucomi
xchg
fstp
mov
cmp
inc
mov
int3
inc
cli
scas
inc
fwait
shl
xchg
jbe
aad
mov
adc
or
mov
inc
jle
sbb
inc
sbb
in
fcomip
dec
andb
sbb
iret
and
cmp
gs
sbb
test
mov
xchg
push
sbb
sarl
pop
cltd
xlat
xchg
mov
daa
lcall
jecxz
push
pop
xchg
dec
mov
out
inc
sub
mov
and
sbb
mov
fs
xor
int3
lret
xchg
push
test
pusha
clc
pop
xor
xor
sbb
inc
popa
aaa
jne
jbe
push
push
pop
inc
pusha
pop
movb
pop
out
push
xchg
push
pop
and
jb
mov
mov
cmp
mov
or
xchg
dec
dec
fbld
xchg
cmc
sahf
jmp
flds
xchg
fldl
in
frstor
dec
and
addr16
jae
sti
add
ja
imul
sar
mov
call
xchg
and
push
pushf
sti
iret
lret
and
pop
movsb
xchg
loop
iret
lods
aaa
stos
jmp
subl
aas
enter
les
inc
pusha
enter
es
adc
or
aas
aaa
xchg
mov
loope
inc
jmp
mov
stos
cltd
sub
xorl
lea
out
les
mov
shll
test
xor
push
add
mov
lea
scas
sub
push
dec
adcl
fadds
or
test
aas
out
scas
xchg
sub
mov
iret
inc
test
mov
mov
jp
adc
sub
mov
inc
outsb
jae
push
fisttpl
pop
movsl
sub
repnz
call
imul
dec
adc
and
xor
shr
mov
lahf
mov
gs
sarb
cmp
and
lods
mov
xchg
mov
ret
ljmp
jg
add
movsb
or
sti
pop
push
arpl
bnd
imul
mov
xchg
pushf
incb
inc
mov
into
adc
std
jp
es
stc
stc
outsb
mov
add
loope
add
mov
adc
pop
ret
fsqrt
jecxz
dec
repz
xor
out
xor
call
in
push
adc
inc
cld
test
frndint
sub
mov
mov
sahf
pop
mov
pop
mov
add
cmp
out
push
sub
int
dec
mov
add
xor
cmp
cmp
pop
add
or
mov
and
scas
jle
mov
mov
and
cmpsl
sahf
test
dec
jnp
sbb
in
jbe
xchg
mulps
iret
or
xchg
roll
lock
xor
sarl
shlb
adc
clc
cmp
xchg
lea
mov
aas
rcl
or
push
daa
dec
pushf
xchg
and
cmp
cld
inc
test
out
cmp
hlt
mov
adc
imul
icebp
sub
lock
imul
fisubs
push
and
and
push
jb
xor
test
dec
loop
pop
fs
int
iret
sbb
repz
testl
mov
sub
push
jno
aad
mov
add
xchg
jmp
sbbb
pop
mov
das
pusha
push
fxch
sbb
stc
xor
movsb
in
int3
pop
or
orl
inc
add
call
clc
sub
int
int
icebp
divb
sbb
xor
lods
jmp
stos
lds
es
cmp
flds
repz
movsl
mov
addb
sub
push
imulb
out
lods
enter
pop
hlt
sbb
push
in
je
mov
mov
xchg
pop
loope
jmp
sti
stos
lods
lds
ljmp
or
sysret
mov
sub
push
les
add
out
or
pop
push
js
lock
stos
outsl
mov
jnp
sub
test
mov
push
shrb
add
int3
mov
push
cld
inc
jle
sub
mov
mov
ret
test
stc
insb
or
xchg
sub
shll
movsb
aas
jg
or
cmc
cltd
jae
sbb
stos
sbb
es
out
jb
inc
aas
shll
insb
into
daa
into
jns
mov
es
repz
pop
mov
idivl
and
jge
mov
sbb
jo
jecxz
xchg
cmc
sbb
pop
int3
scas
pusha
lock
adc
sbb
cmp
idivl
not
jns
cmp
xor
xchg
adc
add
pop
pop
pop
mov
stos
xchg
mov
je
jns
cmp
push
cmp
into
mov
pop
repnz
jl
sbb
jge
fidivs
jp
push
inc
sub
out
mov
push
fimuls
xlat
cmp
jle
inc
es
adc
xchg
std
iret
push
push
ret
in
jne
cs
jb
in
int3
push
pop
or
cmp
add
repz
fnstenv
xor
sub
and
and
mov
add
xor
mov
mov
out
pusha
mov
cmpsl
sahf
xchg
dec
push
pop
jbe
jno
pop
int3
xchg
cld
mov
jmp
roll
or
xchg
jp
mov
arpl
xor
mov
call
lods
in
les
push
sbb
sbbl
xlat
adc
lret
lods
icebp
outsl
sub
jg
xlat
orl
pop
jge
mov
mov
sub
ret
addl
xchg
inc
mov
cmp
pop
or
das
mov
into
add
jmp
enter
dec
enter
and
lcall
je
pop
dec
sbb
outsl
test
lcall
xchg
clc
cmp
and
xor
int3
or
es
iret
sbb
jo
scas
xchg
aam
mov
scas
jbe
dec
or
xchg
jns
jmp
in
lahf
inc
dec
and
arpl
mov
lock
jo
push
daa
or
mov
in
je
ds
push
push
sub
je
negb
add
pop
test
addl
enter
imul
mov
xchg
call
sub
scas
or
inc
mov
mov
fsubrs
or
fwait
adcl
ret
xor
mov
mov
xchg
sbb
outsb
clc
or
repz
das
dec
imul
and
dec
adc
int
push
popf
lret
cmp
push
push
mov
movsl
scas
out
test
jo
cmp
fisttpl
mov
dec
sub
mov
in
cmp
fcompl
cli
fcompl
in
mov
cwtl
cmp
bound
lret
mov
fmuls
mov
outsl
in
pop
ds
sbb
out
fxch
daa
addl
mov
mov
insl
push
sub
cmpsl
out
xor
cmpsl
repz
cmpb
add
add
fistpl
lahf
sub
dec
sub
imul
mov
fmul
in
cmp
nop
sub
adc
jl
aas
push
les
mov
and
jns
push
mov
adc
jl
out
call
mov
movsl
sub
sti
int3
and
and
xor
jle
movsb
ja
xchg
aas
loopne
and
ret
cltd
stos
mov
and
fnstenv
mov
cli
xchg
dec
test
cs
outsb
fisttpll
sbb
cmp
out
insl
cli
pop
add
es
cwtl
and
jbe
icebp
repz
adc
outsl
fisubs
test
aam
pop
icebp
inc
fst
push
adc
pop
inc
loope
sbb
push
mov
or
lods
icebp
xchg
inc
rol
ljmp
pop
mov
repnz
dec
gs
das
add
cmp
ljmp
std
or
aaa
xchg
jecxz
push
fs
daa
jne
add
out
xor
xchg
cmp
inc
dec
adc
pushf
mov
sbb
cmp
dec
movsb
mov
mov
lret
mov
mov
sbb
xchg
pop
xchg
mov
aam
sub
and
cld
mov
lods
xchg
nop
pop
mov
gs
xchg
jge
gs
or
sub
mov
jae
mov
dec
sub
adc
cmp
into
les
push
cmp
nop
je
outsb
and
mull
cmp
push
dec
and
or
dec
jnp
and
aad
aaa
push
popf
pop
xchg
imul
test
push
popa
rorb
cld
int
push
push
movsb
lock
push
and
faddp
insb
and
xor
pop
hlt
insb
sub
cwtl
loop
dec
adc
enter
stc
dec
mov
sbb
cli
mov
lock
cmp
rclb
pop
dec
mov
aad
push
sub
push
xchg
dec
mov
and
and
jae
aaa
pop
pushf
and
imul
pop
in
and
lcall
rclb
dec
leave
ljmp
rcr
loope
outsb
mov
incl
inc
add
xor
test
test
jecxz
xor
in
inc
xor
aam
and
mov
lods
mov
add
mov
les
in
dec
rolb
mov
sub
out
cwtl
inc
cmpsl
pusha
sub
mov
lock
aaa
inc
mov
xchg
fnstcw
call
jne
inc
popf
add
out
pop
nop
adc
hlt
enter
fisttps
add
xor
xchg
cltd
xchg
ljmp
js
cmp
push
mov
mov
je
ret
jb
ror
std
leave
dec
loope
mov
outsb
pop
test
insb
dec
inc
xchg
mov
hlt
dec
cwtl
rol
jne
sub
lods
add
loope
inc
pop
hlt
pop
mov
pusha
test
add
push
lods
jnp
orb
aas
ja
test
int
mov
and
lods
xor
aam
push
fs
dec
imul
popf
sub
mov
sub
outsl
xor
imul
fbstp
push
or
lods
enter
mov
iret
cmc
es
jmp
pop
testb
out
frstor
cmpsl
das
sbb
mov
dec
idivl
mov
and
dec
xchg
jns
fstps
ja
fstl
repnz
pop
or
jle
in
mov
fdivrl
js
dec
xchg
jle
popf
dec
scas
ja
jo
jo
cs
js
pop
in
insl
mov
jmp
jg
adc
repz
mov
add
seto
mov
push
or
mov
lods
sub
mov
fcomp
mov
and
xchg
loop
sbb
inc
negb
dec
cmp
je
inc
out
and
xor
or
ss
push
leave
cltd
cld
push
mov
leave
and
aaa
add
jl
dec
or
push
and
inc
enter
mov
cwtl
push
pop
js
push
sbb
rclb
adcb
pop
inc
mov
insl
pushf
sub
movsl
or
sbb
inc
pusha
mov
lcall
in
pop
sub
jg
push
jnp
nop
xchg
ss
insb
jle
or
into
cwtl
push
je
adc
stc
loop
imul
jp
inc
jmp
jg
jle
sub
pushf
cmp
xor
pop
aad
xor
lcall
sub
in
mov
mov
inc
jmp
pop
or
mov
and
adc
xchg
in
std
cltd
call
movsb
ffreep
repnz
xor
insb
es
aad
stos
push
push
repz
push
leave
or
inc
rcll
sub
decl
sub
out
dec
inc
je
rcr
fstpt
xchg
xchg
movsb
icebp
dec
iret
data16
adcb
test
mov
sub
mov
or
repnz
jecxz
in
sub
pop
int3
lock
mov
inc
je
push
adcl
push
aaa
lret
dec
jg
int
hlt
xor
sbb
scas
xor
lock
mov
push
lods
sub
lret
dec
idivb
rclb
movsl
or
popf
insl
lea
jne
loop
dec
xor
mov
xor
popf
sbb
shrb
jge
js
mov
lret
push
movsb
inc
jmp
pop
sub
xor
dec
sbb
add
inc
add
or
or
dec
push
xchg
shrb
and
xor
or
sti
xchg
push
aad
lcall
dec
or
sbb
dec
sarl
addb
stc
dec
aas
clc
push
aad
pushf
cmp
addl
rol
adc
popa
loopne
inc
popa
dec
fdiv
or
fsubrs
or
xchg
addr16
jne
xchg
popl
scas
jbe
sahf
push
scas
pop
nop
push
xchg
aad
xor
fimuls
push
enter
addr16
sbb
cmpsl
hlt
jle
xor
inc
push
mov
jge
or
xchg
cmpsb
adc
inc
inc
lea
push
mov
cmpb
data16
mov
scas
dec
fnstcw
jbe
adc
test
loopne
test
or
je
xchg
out
adc
and
das
call
inc
sub
mov
nop
add
inc
mov
int
mov
push
mov
pop
iret
popa
and
repz
push
cli
stc
sahf
cmp
sahf
icebp
lock
lret
xchg
int
adc
or
and
dec
out
add
in
cmc
jnp
mov
fisttpll
xchg
in
sub
pop
les
rclb
dec
fists
scas
pop
test
test
enter
mov
jo
movsl
dec
or
sbb
inc
mov
movsl
popa
lahf
inc
icebp
xchg
out
ret
xor
lods
add
outsb
mov
mov
ror
jge
mov
icebp
xor
in
outsb
and
dec
jl
add
and
sub
daa
loopne
xchg
pop
popf
jbe
icebp
popa
ret
push
mov
mov
lahf
mov
jl
call
push
jg
add
bound
lods
jle
popf
cmpsl
lahf
call
jb
mov
sub
imul
pop
repz
in
and
or
in
jno
and
imul
icebp
xchg
int3
int
in
dec
or
cmp
add
jae
nop
dec
pop
mov
adc
jnp
bound
cmpl
inc
call
pop
xor
in
or
jae
cmpsl
out
xor
jle
call
insl
pushf
fucom
push
insb
mov
mov
inc
inc
or
mov
loope
fildll
fistl
sbb
les
mov
xchg
repz
or
xchg
jl
and
neg
sti
push
add
jnp
mov
imul
mov
cmpsl
pop
hlt
outsb
dec
jne
mov
inc
and
lock
push
iret
sbb
xchg
cmp
xchg
pop
pop
push
xlat
and
imul
mov
push
in
add
lock
mov
iret
dec
jns
and
in
ss
jge
jg
bound
fistl
insl
or
mov
pop
fchs
and
divl
inc
jp
loopne
push
and
add
rorb
push
adc
add
ds
add
cmpsb
aam
pop
mov
and
imul
call
orb
scas
inc
incl
call
mov
jae
repz
pushf
sub
adc
adc
push
repnz
or
push
add
and
fstpt
mov
jp
sbb
test
lahf
movl
cmp
inc
dec
sbb
shl
popa
pop
and
sub
mov
xchg
shll
pop
imul
push
sub
ficoml
jns
fildl
or
push
jo
sbb
sub
inc
insb
jae
scas
xchg
iret
mov
pushf
push
incb
inc
sub
mov
sub
push
mov
test
inc
add
mov
insb
push
arpl
enter
clc
dec
das
sub
xchg
sbb
jp
xchg
jne
push
jg
arpl
adc
mov
in
sahf
loop
jl
or
dec
pop
arpl
sub
inc
push
ret
rorb
lea
xor
xor
div
test
or
insb
sahf
fcompp
dec
in
xor
add
mov
sar
jne
add
scas
and
or
dec
jle
push
add
mov
test
push
mov
inc
jae
in
sub
sbb
push
pop
jns
repz
sub
xchg
mov
movsl
or
or
cmpsl
insb
jb
loopne
push
add
inc
inc
cmpsl
mov
dec
push
iret
das
int3
icebp
lahf
jns
and
adc
xchg
imul
inc
sub
push
dec
cmp
fisubrl
mov
flds
jle
dec
jo
test
scas
and
pusha
cltd
fwait
push
insb
sbb
in
or
js
jecxz
xor
mov
js
gs
adc
push
daa
aas
adc
cmp
push
xlat
or
ds
cmp
test
sub
and
add
arpl
les
mov
xchg
mov
add
add
xor
loopne
inc
mov
sbb
fisttpl
adc
addb
loopne
loopne
mov
and
test
and
icebp
pop
dec
sbb
pop
xchg
repz
mov
sbb
mov
push
push
and
fcomp
and
bnd
or
push
stos
pop
lock
dec
insl
push
and
mov
sahf
subl
addr16
adc
mov
lea
jnp
aas
jmp
inc
push
or
pop
push
outsl
add
dec
cmp
sub
push
icebp
and
mov
movsb
dec
sbb
decl
and
jnp
jmp
shlb
lahf
scas
pop
addl
mov
mov
ljmp
jg
test
fstps
in
add
aam
lret
sub
add
in
shll
sub
or
pop
xchg
loope
outsb
cmpsl
mov
mov
aas
bnd
rcll
sbb
jg
inc
mov
lcall
addr16
mov
pop
mov
iret
mov
cmp
loop
jl
xchg
jne
ldmxcsr
mov
dec
add
mov
js
imulb
enter
cmpsl
scas
jecxz
shr
in
jnp
pop
lret
dec
in
lea
pusha
repz
cs
xchg
lea
mov
popa
mov
in
sub
push
gs
outsb
fwait
loop
sahf
mov
xchg
dec
adc
ret
and
or
lea
data16
and
mov
fs
rolb
mov
iret
jne
or
and
inc
pusha
jae
push
dec
cmpsl
mov
mov
xchg
fisttpll
pop
jns
inc
mov
adc
movsl
cwtl
imul
dec
iret
pop
inc
in
mov
mov
xor
and
movsl
xchg
into
outsl
mov
bound
sbb
mov
mov
fbstp
mov
repnz
push
loopne
push
xor
or
lret
sub
mov
fs
xlat
stos
test
mov
shrb
cs
int
mov
jg
es
imul
push
out
cmp
aas
adc
add
fwait
mov
out
cld
xchg
in
ret
in
push
shlb
dec
push
mov
sti
pop
out
or
pop
test
xchg
decb
jecxz
xor
sbb
jo
dec
inc
push
lds
fisttps
pushl
jns
shrl
pop
dec
xlat
sub
xchg
or
jl
and
pop
jge
fwait
adc
out
stos
adc
inc
pusha
out
cmp
add
xchg
outsl
inc
adc
in
xchg
ja
pop
mov
jb
lds
outsl
cwtl
xor
jb
jmp
movsb
out
inc
adc
out
cmp
scas
adcb
popa
adc
push
xor
ljmp
jg
fistl
scas
sub
mov
jg
ficoms
push
mov
lods
pop
scas
mov
dec
xchg
inc
call
xor
bound
adc
cld
jg
and
data16
in
mov
cmp
lahf
jmp
jns
adc
sbb
sub
mov
pop
in
rcrl
sbb
pushf
or
adc
inc
repz
jnp
fidivl
pop
insb
add
mov
mov
mov
jbe
jb
std
fs
clc
scas
data16
adc
dec
push
jae
shlb
xchg
arpl
xchg
fistpll
mov
outsl
in
loopne
sub
adc
dec
popa
in
mov
sbb
mov
ret
mov
sub
fistps
add
repz
fs
push
push
inc
push
sub
mov
repz
andb
test
imull
pop
pushf
jl
dec
xchg
mov
fnstsw
push
pop
pop
push
xor
sahf
fdivrl
jp
addr16
push
fldl
sub
xchg
movsb
cld
mov
xor
push
cmpsb
test
jmp
pop
sbb
mov
mov
mov
loopne
js
shr
jno
push
out
mov
cmovp
push
sbb
dec
je
inc
add
sbb
mov
xchg
hlt
aas
jo
cmpl
les
inc
call
xchg
xchg
xlat
ret
imul
popf
out
push
sbb
dec
popa
mov
xor
in
mov
int3
jns
dec
push
push
rclb
inc
repz
cmp
add
sub
push
push
mov
insb
addr16
enter
out
push
js
xchg
and
mov
cmp
mov
shrb
js
mov
popf
push
imul
xlat
inc
adc
and
lcall
arpl
or
iret
mov
and
adc
mov
iret
icebp
cmpl
scas
xchg
sub
mov
jl
test
mov
cltd
lret
xchg
js
in
loopne
adc
xchg
jae
icebp
push
out
andb
cmpsl
and
daa
pop
cld
fs
mov
testb
adc
push
adc
cli
daa
loope
cmpsb
int
mov
mov
rcll
dec
in
test
sbb
sbb
dec
cmp
lds
pop
pushf
les
dec
mov
outsb
push
push
lcall
xorl
jb
inc
cmp
pop
aas
rolb
lcall
loope
jmp
mov
imul
lfs
mov
stos
outsl
mov
cmp
mov
pop
xor
iret
pop
movsb
daa
sub
push
data16
adc
xor
push
xchg
cmp
sub
lahf
add
movl
push
mov
sbb
mov
imul
sub
xor
cmp
add
jecxz
bound
test
shlb
fs
nop
mov
sbb
sub
cld
jo
jnp
and
lods
fiadds
cs
mov
lods
andl
fimuls
or
pop
mov
test
testl
mov
sbb
fbld
mov
mov
xchg
int3
int3
out
repnz
push
mov
fdiv
pop
movsb
adc
mov
arpl
mov
push
std
inc
inc
jb
call
fstl
aas
inc
push
and
inc
fdivrs
jp
mov
insl
and
or
cltd
inc
outsb
jno
into
aad
add
jp
cmp
pop
scas
jno
add
xadd
cmp
jbe
and
jns
popa
and
test
xchg
mov
cmc
add
dec
mov
or
sbb
cmp
mov
add
jmp
fdivs
add
les
sbb
sbb
cmp
xor
and
mov
repz
mov
test
pushf
fs
mov
sub
or
pushf
mov
jg
fcmovnbe
pop
stc
arpl
mov
sar
or
loope
cmp
push
out
add
sbb
out
test
cmp
sbb
imul
pusha
dec
xorb
imull
mov
inc
mov
xchg
lret
inc
push
decl
imul
repnz
and
dec
mov
mov
dec
aam
inc
dec
pop
sub
test
std
mov
jge
push
je
push
and
cwtl
mov
adc
jmp
fsubs
sbb
pop
adcl
sahf
inc
js
jb
mov
push
data16
dec
xlat
push
test
mov
stos
xor
lret
mov
outsl
cmp
gs
jns
xchg
sbbb
xchg
ret
repnz
jge
xlat
push
stc
push
popf
mov
mov
and
pop
xchg
arpl
sub
and
call
pop
mov
popf
icebp
mov
jns
lahf
mov
inc
ret
inc
cli
fucomip
popf
dec
hlt
cmp
and
mov
mov
inc
push
ljmp
sub
js
cmpsb
xchg
fists
outsl
or
roll
dec
lret
adc
bound
imul
insb
aas
and
lret
or
push
lret
scas
sub
fcompl
xlat
popa
cmpl
cli
mov
push
popa
xor
mov
mov
test
adc
pop
mov
testl
lea
icebp
pushl
js
outsb
fildll
add
mov
out
pop
subb
data16
cmp
popa
imul
stos
lods
dec
ficomps
and
dec
mov
sbb
stos
add
pop
lahf
fidivrl
jmp
in
dec
icebp
xor
movsl
mov
fcompl
ret
add
int
cmp
push
or
xchg
cmpsb
and
outsb
int3
rorl
stos
push
mov
add
test
in
mov
xchg
adc
cmp
aad
pop
lret
cmp
pop
xchg
push
xchg
and
mov
ret
jp
sub
lods
jb
lahf
movd
negb
aam
idivl
in
subl
insl
dec
out
daa
jl
inc
jns
sbb
dec
sahf
or
icebp
xor
lods
xor
jbe
ljmp
push
or
sub
xchg
shll
adc
xacquire
fs
adc
or
mov
addr16
push
dec
cmp
imul
xlat
hlt
test
int
fwait
stc
push
and
lea
and
inc
mov
push
dec
mov
fists
popa
cli
test
jl
and
ss
sbb
pusha
mov
mov
xor
xorb
inc
stc
leave
pop
mov
dec
adc
jg
icebp
imul
jns
mov
or
push
rcrb
pushf
sub
inc
inc
lcall
add
dec
xchg
add
dec
clc
mov
clc
add
sbb
out
inc
aam
pushf
xchg
rcr
and
jp
cmc
pmuludq
incl
or
push
cmp
sbb
pop
rolb
mov
pop
cs
shlb
roll
jb
inc
mov
fcoms
mov
outsl
mov
adc
lods
adc
inc
test
test
leave
jae
divb
and
adc
xchg
xchg
pop
out
mov
jb
add
es
sbb
mov
pop
mov
clc
cmp
sbb
enter
or
mov
mov
push
aas
fldcw
push
in
shrl
adc
push
hlt
faddl
cwtl
hlt
pop
repz
xor
xor
mov
out
adc
push
mov
cmp
jnp
mov
sub
dec
and
cmp
cmp
in
jl
mov
int3
mov
adcl
rcl
psrlw
sbb
cmp
pop
push
shlb
mov
cmp
fdivl
in
mov
jle
icebp
out
mov
mov
mov
xchg
mov
push
and
mov
enter
enter
adc
pop
or
jg
ds
xchg
cld
or
test
push
insl
add
cld
push
add
adc
mov
int
inc
idivl
pop
xlat
repnz
inc
fcmovnu
pop
add
enter
xchg
jns
decl
std
inc
mov
rcl
pusha
int
add
scas
or
lahf
and
dec
inc
stos
pop
fstps
push
lea
cltd
bound
mov
dec
sub
mov
push
sarl
dec
shll
mov
push
ss
push
aad
adc
aaa
jmp
fucom
push
xor
pop
adc
idiv
inc
sub
sarl
push
jne
pop
popa
push
mov
xor
sub
stc
lods
pop
mov
aad
mov
push
fs
jp
push
and
imul
seta
adc
data16
lret
and
pop
lods
xlat
cmp
push
lods
adc
inc
xor
jo
mov
add
jecxz
lcall
inc
stos
add
ja
push
adc
into
orb
sbb
inc
fdivs
pop
xor
push
sti
mov
jecxz
les
sub
cmp
nop
mov
or
jno
xchg
xchg
dec
dec
jb
cld
mov
mov
pop
dec
mov
pop
adc
imul
xor
lcall
out
mov
icebp
mov
fdiv
in
jge
mov
xchg
sbb
jb
test
inc
pop
or
into
test
push
sbbb
mov
xchg
pusha
cltd
xchg
enter
lret
les
and
sti
shrb
subl
lret
sbb
stc
aas
fcomip
mov
xchg
mov
aam
cltd
push
je
rcrb
push
add
sub
flds
push
mov
sahf
inc
xlat
jb
hlt
adc
pop
xchg
jo
out
mov
cs
add
fisubrs
stc
rcrb
sar
das
in
in
movsl
lahf
push
add
inc
test
jle
pop
cmp
aam
stos
popf
mov
in
scas
repnz
mov
das
dec
fwait
dec
leave
std
or
and
into
dec
mov
lcall
das
lea
jnp
and
dec
mov
cmp
pop
sub
add
xchg
outsb
addl
orb
addr16
in
out
imul
push
test
in
daa
shr
xchg
push
fmuls
fdivp
imul
cli
mov
dec
push
push
inc
push
add
lret
mov
outsb
inc
sti
xor
mov
inc
push
lret
xor
inc
mov
xchg
lock
fiadds
aaa
ds
mov
mov
sub
pop
jnp
bound
cmp
xchg
sahf
popf
mov
loop
or
in
std
mov
jno
inc
test
mov
inc
cld
add
add
push
jmp
pop
jg
sub
shrl
add
xor
pop
inc
call
dec
cs
adc
xor
imul
in
adc
call
add
and
add
test
inc
fwait
lret
std
push
or
sub
mov
push
pop
fidivrs
shll
inc
arpl
mov
xchg
mov
dec
dec
lahf
loope
notl
pop
xor
xchg
dec
iret
int
mov
xchg
imul
mov
mov
js
inc
arpl
mov
test
gs
sbb
popa
mov
adc
jl
push
pop
adc
dec
and
insl
pop
adc
sub
ficoml
frstor
scas
pusha
movsl
push
sti
sti
stos
std
cmp
arpl
xchg
sahf
or
and
ds
movsb
repz
movb
notl
test
cltd
loopne
pop
mov
and
push
cli
sbbb
jne
cmp
inc
xor
lret
mov
bound
stc
cmpsb
push
push
loop
jo
jl
xor
adc
dec
xchg
ss
pop
jo
pop
clc
jnp
xchg
iret
in
outsl
iret
mov
xor
sarb
add
or
inc
inc
xchg
dec
vmovntps
inc
or
fabs
ret
dec
jge
inc
rep
push
xchg
addr16
mov
jge
cmp
icebp
mov
xchg
stos
js
and
cmpsl
jmp
or
xchg
cmp
pop
iret
scas
outsb
pusha
and
pop
inc
jmp
push
enter
jno
or
loope
dec
ficoml
mov
inc
pop
lahf
push
sahf
mov
xchg
imul
adc
not
push
xor
sub
iret
cmp
add
add
jne
test
cmp
mov
sbb
pop
cmpsb
add
test
in
and
adc
or
pop
test
arpl
into
out
andl
out
insb
fdivrl
fstpl
or
fsubrp
int3
mov
xor
cmp
dec
outsl
lock
insl
int3
popf
fistpll
dec
imul
lcall
movsb
mov
push
pushf
je
pop
addr16
imul
rolb
mov
inc
pop
cmpsb
aam
cmc
add
mov
xchg
add
nop
test
add
jg
xor
lods
popf
pusha
inc
daa
adc
jg
aaa
out
xchg
or
and
inc
fs
push
adc
and
pop
cli
and
lock
inc
fists
loopne
nop
lea
in
test
adc
arpl
add
xchg
jnp
dec
fildll
pop
cmp
jmp
fimuls
fadd
sbb
push
add
pushf
pop
aas
fs
cld
adc
mov
jo
lret
test
test
clc
xor
sbb
xor
ja
out
test
sti
push
jp
mov
rol
push
inc
mov
add
sbb
lea
jb
push
adc
rcl
je
push
addr16
mov
or
jnp
fmuls
sub
xlat
leave
xchg
mov
pop
pop
xchg
punpckhbw
xchg
mov
stos
sbb
ss
fs
loope
testl
cmp
andb
cld
cmp
out
or
loop
dec
xchg
or
lock
mov
clc
mov
xchg
xor
xor
inc
movsb
sbb
pop
xchg
loope
jge
aas
or
sub
jo
or
or
dec
cmp
sub
lods
mov
xor
and
jecxz
stos
scas
aad
add
add
xlat
and
daa
sbb
push
jne
lds
pusha
leave
icebp
dec
mov
test
pop
movsb
xchg
push
pop
movsl
push
cwtl
mov
jnp
cmp
push
mov
and
icebp
cmpl
mov
inc
dec
pop
dec
out
std
xchg
dec
cld
mov
sbb
mov
pop
push
mov
mov
stc
fwait
nop
out
push
outsl
icebp
jle
mov
call
lods
data16
pop
hlt
dec
sbb
inc
lcall
je
add
and
mov
jg
pop
fbld
and
or
pop
rolb
pop
jp
loop
cmp
cmp
repnz
gs
stos
orl
js
adc
bts
mov
dec
jl
push
xchg
popf
imul
out
jae
mov
int3
dec
arpl
jae
fcompl
call
test
icebp
fisubl
mov
dec
push
aas
add
pop
lret
dec
inc
dec
adc
sbb
sub
js
adc
popf
cli
loope
and
gs
ss
push
test
mov
jle
cli
outsl
lret
mov
or
cmpsl
push
push
outsl
faddp
sti
ljmp
ret
push
dec
das
pusha
fisubl
mov
fnstsw
mov
mov
push
shll
loop
rorb
jae
jge
shrb
fsts
sti
push
xlat
aas
and
and
pop
out
loope
xor
out
movsb
adcb
mov
mov
ljmp
mov
add
cmp
es
or
sbbl
xchg
fdivl
in
jge
loope
push
jbe
jp
ror
add
cmp
push
pop
mov
mov
mov
jg
and
cli
mov
les
xchg
in
vprotb
cmp
insb
push
adc
mov
push
ljmp
xor
nop
dec
cld
cmc
or
cmpsb
mov
fldcw
jo
jmp
sbb
adc
sub
fisubl
inc
lock
shl
pushf
sub
or
ja
xchg
arpl
cmpsl
add
clc
adc
call
sbb
test
cmp
icebp
push
popf
fimull
orl
shlb
pop
dec
mov
pop
jp
movsb
jb
mov
mov
lahf
mov
daa
inc
sub
lds
mov
mov
sub
sbbb
jo
jge
stos
or
push
jne
or
movb
mov
decb
movsb
adc
jmp
imul
ljmp
xchg
lahf
in
aaa
pop
ret
aam
xchg
fdivrp
fldcw
inc
pop
or
shrl
jl
mov
xchg
clc
and
xor
sbb
mov
or
or
cs
xor
mov
and
daa
and
inc
sub
aam
mov
cmp
jb
test
pop
sbb
add
lods
ficoms
fisttpl
hlt
hlt
inc
test
aaa
mov
fistpll
mov
ss
mov
jbe
imul
mov
jp
push
repz
les
mov
mov
inc
roll
roll
and
out
pushf
nop
ds
or
daa
mov
lahf
mov
dec
subb
lea
mov
or
dec
and
int3
jge
sbb
cli
lods
in
sub
aaa
imul
cmc
push
cmp
aad
push
rorb
sub
sti
mov
outsb
mov
test
adc
inc
add
xlat
xchg
pop
push
int
push
shll
cwtl
or
icebp
mov
rorl
mov
popf
shr
mov
inc
mov
sbb
and
dec
out
push
xchg
sbb
ret
mov
out
mov
ljmp
out
xchg
xor
jae
adc
push
pop
rolb
jecxz
mov
fists
bound
push
mov
mov
mov
jb
sbb
insb
idivl
sub
jg
fisttps
pop
stos
pop
cwtl
stos
push
push
mov
push
jno
mov
push
inc
jne
mov
test
insl
pop
icebp
sbb
lds
movsl
loop
mov
and
addr16
jl
adc
movsb
clc
or
gs
rcrb
pop
cs
andb
in
sti
mov
jno
push
and
mov
stos
pop
sub
xchg
xchg
fistpl
stos
cmpsb
out
mov
in
jb
nop
mov
dec
jp
fdivl
mov
sahf
sub
inc
pusha
cmpsl
inc
cmp
aas
fwait
xor
xchg
cmpsl
fsubl
inc
aad
mov
mov
scas
sahf
lock
loopne
sub
push
es
jle
lds
jbe
pusha
mov
xor
arpl
cmp
cltd
int3
popa
fildll
xchg
int3
jmp
jnp
add
shl
xchg
lahf
fiaddl
pop
jle,pn
out
cmpsl
pusha
or
aaa
jp
mov
je
mov
bound
xor
add
ror
xchg
push
dec
cwtl
jg
add
je
fcomps
mov
mov
inc
call
bound
cmc
mov
imul
push
jno
mov
push
dec
mov
dec
loope
fmuls
jnp
mov
iret
mov
mov
xchg
addb
xor
loope
popf
xlat
cmp
push
sub
pop
gs
cmp
testb
shl
mov
jo
pop
push
popf
in
sbb
xor
out
push
cmpsl
insb
adc
insl
mov
pop
inc
lods
shr
lcall
ficompl
pop
aaa
test
inc
cmp
mov
pop
je
ss
jns
xor
add
test
call
repz
sbb
lret
lock
aas
push
nop
pop
xlat
call
shrl
mov
out
lret
dec
pop
jmp
cmp
popf
lock
sbb
mov
mov
cmp
xchg
jne
adc
pop
inc
adc
push
shrb
sbb
mov
jle
dec
icebp
and
jl
mov
dec
xor
mov
xor
xchg
sahf
push
adc
orb
rorl
pusha
out
xor
dec
or
ljmp
cmp
cmp
es
lahf
test
jg
sti
push
push
mov
repnz
adc
mov
aaa
add
mov
or
mov
jle
test
cltd
dec
sub
mov
into
adc
sbb
xchg
stos
push
aaa
push
test
bound
roll
in
addr16
aaa
es
pop
lcall
out
mov
loop
jnp
push
movsb
ret
xor
add
cmp
and
mov
or
push
pushf
xor
into
out
sahf
lock
popa
jmp
and
jge
jbe
ja
jnp
int
flds
pop
push
test
cmc
cwtl
in
mov
aas
out
or
imul
push
call
ds
stos
popf
jp
cmp
insb
push
mov
pop
jbe
sub
dec
and
test
test
pop
cs
ret
mov
loop
in
dec
jge
push
movb
xor
push
shll
cmc
xchg
mov
aaa
insb
adc
fsts
aad
incl
repz
js
cmpsl
pop
pop
cmpsl
out
pop
iret
daa
out
enter
loopne
sub
popa
add
xor
pushf
adc
das
dec
lahf
mov
mov
xlat
jne
jnp
xor
add
sbb
push
leave
cmp
sub
jge
mov
rol
jmp
and
subl
push
std
adc
add
mov
lock
push
insl
ficompl
jne
and
xchg
ja
add
cltd
out
addr16
mov
aas
ja
gs
jb
dec
push
xor
jae
inc
xor
push
insl
iret
xlat
mov
push
mov
inc
push
xchg
lret
pushf
outsl
enter
je
dec
push
sub
dec
push
test
sbb
or
rcrl
pop
stos
xor
jmp
lock
popf
add
push
sub
lods
dec
xchg
push
pop
jge
mov
sub
test
fsubl
test
sub
jl
enter
add
adc
aas
bnd
adc
inc
popa
or
shll
in
inc
mov
pop
loopne
jmp
in
and
cmp
and
add
mov
mov
loop
jle
arpl
jmp
inc
pop
ja
aam
mov
add
repz
aaa
adc
pop
outsl
xchg
adc
and
and
iret
jae
push
cmp
pop
std
sbb
popf
jo
mov
xchg
aam
sbb
push
popa
inc
test
cmp
ljmp
inc
je
pop
repz
fmulp
xchg
hlt
sub
jbe
ds
shrl
andw
and
loop
rcrl
or
xchg
lcall
add
or
pusha
mov
mov
ret
outsb
jmp
dec
scas
jae
xchg
fs
sbb
dec
jl
sbb
mov
and
popa
push
xlat
js
dec
adc
push
xchg
cmpsb
xchg
add
jmp
add
pop
inc
xorb
in
js
fucom
lret
popf
xchg
in
mov
je
inc
sub
jnp
fidivrs
jb
mov
rcrl
or
fwait
jl
cmp
adc
dec
into
mov
mov
cmp
cli
loop
xchg
xor
clc
dec
push
jge
dec
loope
pop
jbe
imul
jnp
lock
fldt
jno
xchg
mov
jo
lahf
or
sbb
movsb
cli
pop
pop
sub
jle
pop
pushf
mov
dec
clc
ja
jne
shlb
lahf
into
movsb
xor
or
cmp
mov
hlt
sub
fldl
ja
cmp
jae
movsl
mov
xchg
adc
dec
xor
xor
push
pop
popa
push
test
out
lea
in
adc
mov
inc
mov
adc
fimuls
lods
bound
sbbl
jbe
sti
mov
insl
xchg
fistps
cmc
int
shr
adc
clc
jb
sbb
dec
pushf
icebp
xchg
add
jge
inc
adc
push
shrl
add
outsb
les
xchg
cmp
orb
outsb
clc
mov
sbb
shrl
add
aam
imul
ljmp
in
inc
xor
mov
lock
cmp
aas
shll
adc
lea
pop
pop
xor
adc
sbb
shrl
xchg
pop
dec
hlt
or
or
sub
xchg
cmp
xlat
pop
xchg
cwtl
scas
stc
pop
mov
mov
insb
push
jmp
cmpsl
xchg
adc
sub
test
subl
mov
in
in
fadds
test
sbb
fsubl
pop
xchg
push
xchg
incl
jl
mov
mov
xlat
lret
in
sarb
les
ficompl
or
sub
not
popf
seto
int3
nop
test
in
cmovle
out
mov
xlat
icebp
adc
sbb
pop
cmp
cmpsb
inc
mov
jle
fisubrs
sub
cmp
stos
lods
xchg
adc
daa
push
aaa
gs
and
repnz
pop
mov
ljmp
or
mov
int3
movsb
jnp
sub
stos
cli
in
inc
repz
jp
jne
adc
jge
dec
mov
scas
inc
dec
cwtl
xchg
mov
inc
cmc
bsf
out
jl
pop
pop
add
scas
mov
shr
sti
and
sub
lods
jl
jo
inc
iret
mov
xchg
cmpsb
mov
daa
sub
into
nop
pop
ret
sbb
sub
out
pop
jbe
jl
jbe
jecxz
adc
test
pop
cmp
test
cmp
cmp
dec
and
stos
mov
inc
dec
add
mov
ja
rcl
adc
rolb
pop
cmc
inc
and
push
insl
inc
mov
fsubs
xor
or
adc
xchg
lea
adc
jg
ret
arpl
pop
test
stos
out
rorb
jbe
pushf
mov
add
shl
rsm
push
push
sub
push
loopne
in
movsl
push
mov
out
leave
add
movsl
cs
xor
popf
ljmp
mov
aas
je
js
xchg
mov
jns
fdiv
orl
pop
insl
mov
jmp
mov
movsl
cs
and
cwtl
mov
out
pop
dec
xchg
and
push
cmpsb
pusha
in
lea
xor
rcrl
push
into
loop
fbld
movl
rol
imul
fmuls
jmp
loopne
xchg
nop
xchg
and
cmpsb
je
std
add
call
loope
dec
ss
pop
sbb
jp
fstpl
push
cmp
icebp
xchg
mov
xchg
lsl
mov
movsb
push
xchg
add
test
fisttpl
lahf
mov
mov
sarb
in
sub
cwtl
mov
insb
rol
aad
addr16
sti
jnp
sarl
std
cmp
adc
pop
adc
in
mov
stos
push
daa
push
mov
push
ljmp
mov
or
jnp
mov
aaa
dec
jmp
fadds
lods
push
test
cmpsl
movsl
std
cltd
push
negl
dec
xchg
jnp
orl
add
pop
xchg
and
sub
jg
js
dec
repnz
out
xor
adc
int
rorl
sbb
call
pop
xchg
popa
mov
push
notl
jmp
fstpl
mov
in
hlt
outsb
rclb
xchg
cmpsb
int
dec
mov
subl
dec
push
cmp
mov
imul
gs
movsb
push
pop
xor
and
xchg
sahf
cmp
mov
int3
jmp
lcall
mov
sub
mov
mov
dec
cmpl
andb
repnz
and
ljmp
cli
jns
punpcklbw
jae
stos
xor
dec
push
or
cmc
insl
bound
loop
outsb
mov
out
dec
in
sbb
int
imul
jne
repnz
addb
cmp
mov
or
cmpsb
jne
xchg
fwait
sbb
sub
adc
sti
fsin
cwtl
pushf
xchg
mov
sub
lea
out
cmp
nop
pop
aam
jmp
je
shll
int3
cmpsb
lods
pop
cmpl
sub
inc
nop
pop
jnp
into
in
xchg
popf
xchg
push
mov
out
hlt
dec
push
push
into
dec
mov
repz
push
inc
pushf
call
leave
push
mov
daa
mov
mov
mov
mov
rcll
add
out
cld
sub
or
int
jnp
outsb
dec
xor
aad
aad
cvtps2pd
in
out
mov
lret
xchg
enter
cmp
out
je
pop
ja
popa
mov
orb
out
adc
sbb
dec
loop
lcall
idiv
sbb
inc
or
xor
sub
sub
mov
stos
fwait
pop
adc
mov
out
sub
cmpsb
push
fmull
sbb
arpl
add
mov
lock
loopne
mov
jnp
in
and
or
nop
rep
sub
or
mov
jge
jl
sbb
lahf
sbb
jb
enter
xchg
add
mov
cwtl
push
push
setb
shlb
xchg
pop
movb
arpl
jns
sbb
outsb
dec
mov
sbb
insb
mov
out
mov
imul
lahf
shll
push
cmp
push
inc
stos
inc
aam
mov
push
push
fadds
and
cmp
adcl
fs
push
xchg
shll
mov
jae
pop
inc
cmp
nop
loopne
imul
mov
hlt
xlat
fbld
jae
cmpsl
cmc
jmp
mov
jg
in
cld
push
mov
scas
enter
rorb
jle
push
outsl
inc
imul
clc
arpl
jbe
dec
int3
lret
push
aaa
cmp
add
dec
iret
mov
dec
insl
xor
in
outsb
popa
cs
xor
popf
arpl
movsl
cmp
sbb
popa
jbe
cld
push
data16
push
jl
stc
adc
scas
fistpl
sub
lds
sub
dec
mov
mov
or
fidivl
movsl
shlb
mov
gs
inc
dec
loop
inc
subl
leave
xlat
leave
jle
sbb
pop
pop
cltd
xor
test
stos
mov
sub
jb
or
mov
pop
jle
push
mov
fildl
ret
mov
lods
xchg
inc
dec
push
das
sarl
mov
and
fisttpll
inc
stos
imull
jbe
pop
cmc
push
push
xor
inc
adc
mov
imul
roll
nop
xorb
inc
inc
loope
out
jbe
push
add
in
jne
mov
and
mov
hlt
cmp
dec
imul
pop
xchg
cmp
roll
sbb
and
in
popa
enter
xor
dec
xchg
jg
dec
inc
pop
xchg
mov
dec
bnd
lcall
mov
sbb
loopne
dec
jecxz
mov
into
lock
cmp
sbb
mov
outsb
test
mov
dec
in
lods
notb
mov
ljmp
add
data16
stos
mov
sbb
or
pop
cwtl
push
push
xchg
scas
mov
jl
mov
mov
mov
je
adcl
mov
adc
add
fs
mov
adc
repz
jle
mov
add
notl
out
and
lcall
outsb
cmp
mov
enter
addr16
add
jge
pop
scas
ds
xchg
push
mov
inc
pop
aaa
test
xchg
movl
adc
int3
outsl
imul
enter
cmpsl
mov
arpl
add
outsb
jae
inc
jp
pop
mov
aad
fs
icebp
mov
cs
fwait
xchg
fbld
inc
shll
xor
lret
test
test
mov
add
push
xor
mov
gs
ljmp
enter
jl
aaa
pop
mov
cmp
into
inc
xchg
jns
adc
mov
faddl
je
dec
ret
subl
xchg
adc
popf
xor
pop
in
xor
dec
pop
dec
dec
jns
in
push
ljmp
lds
pop
and
sbb
dec
scas
sbb
gs
fdivp
aaa
jno
push
fsts
les
mov
ficomps
aam
hlt
ret
cmp
cmp
mov
cmp
mov
jbe
xchg
push
xor
adc
mov
or
jbe
movsl
mov
xchg
or
call
xchg
aad
sub
xchg
add
dec
jge
and
stc
xchg
sbb
mov
xor
cmp
mov
cmp
iret
das
push
push
outsl
or
nop
dec
or
jmp
enter
dec
mov
out
jns
inc
adc
mov
test
pusha
dec
outsb
xchg
mov
dec
lock
cld
insb
push
pop
push
dec
std
sarb
bound
push
test
cltd
adc
fistpl
mov
wbinvd
mov
stc
dec
cmpsb
shll
push
mov
sarl
mov
pop
shrb
sbb
xor
pop
mov
and
cmpsl
xor
pop
inc
mov
cmp
push
pop
or
jmp
scas
adc
data16
push
mov
repz
cmp
getsec
call
cli
sbb
jb
mov
jbe
jmp
mov
and
inc
add
dec
push
hlt
jecxz
fnstenv
cmp
mov
popa
repnz
clc
sub
jnp
shl
mov
jge
das
adc
xor
jb
pop
outsb
ljmp
and
cld
adc
mov
lcall
push
pop
dec
adc
scas
push
fldt
imul
adc
ljmp
js
out
push
add
xchg
insb
adc
scas
dec
in
ds
sub
xchg
pop
xor
dec
in
cmp
sbb
movsb
or
jge
cld
xchg
shl
loope
sbb
sub
cltd
aaa
lea
mov
ret
popf
aas
dec
in
popf
es
inc
mov
enter
pop
and
add
cmp
int3
addr16
add
push
and
addr16
lods
mov
stos
imul
sbb
sbb
dec
xchg
fwait
data16
push
xchg
mov
cmp
lds
test
adc
jge
pop
pop
aam
xor
pop
add
lock
sub
cld
jns
pop
push
insl
test
mov
push
cwtl
daa
sub
xchg
or
xor
push
inc
bound
or
dec
jo
lods
inc
mov
jns
xor
dec
in
aaa
dec
pop
sahf
jp
in
jge
mov
push
xchg
lods
jns
mov
stos
cld
imul
sti
lock
jmp
mov
loopne
push
in
fstl
push
pop
and
jmp
fsubs
cmp
jns
lcall
jg
pop
or
repz
push
jmp
xchg
dec
insl
or
pop
adc
mov
imul
pop
or
adc
dec
mov
xlat
adc
ljmp
dec
mov
xor
fwait
dec
and
jbe
imul
xchg
xchg
jg
ret
cmpsb
push
aaa
xor
rclb
mov
ja
ficoml
ret
cmc
pop
fiaddl
and
dec
mov
xchg
push
add
or
test
cmp
jne
inc
pushf
mov
sbb
out
and
pop
dec
dec
xchg
lods
xchg
pop
negl
dec
lods
insb
jne
dec
loop
loopne
adc
movsl
cld
out
lret
loope
or
inc
in
bound
add
and
add
mov
cmp
push
aam
pop
xlat
dec
pop
mov
add
xor
cmp
nop
loopne
call
dec
inc
mov
imul
clc
loope
sbb
shrl
add
daa
mov
loope
std
in
gs
jbe
mov
jl
mov
insl
lds
mov
mov
add
into
xor
ret
enter
leave
addr16
sarb
push
push
mov
push
adc
xchg
push
fiaddl
fmull
inc
push
ss
and
cld
add
pop
les
mov
test
bound
es
lods
sub
sub
mov
sahf
aad
and
fcoml
push
gs
xchg
scas
mov
inc
xor
dec
cmp
in
dec
cli
or
imul
dec
add
ja
and
push
jmp
es
sbb
push
jp
into
icebp
lret
mov
mov
inc
lods
xor
pop
fistpll
cmp
scas
xchg
fisttps
jge
and
inc
inc
xchg
ss
mov
mov
or
pusha
in
stc
nop
out
xchg
push
dec
fwait
adc
sub
and
pushf
and
in
fstl
adc
test
cmp
sub
ret
xor
shll
pop
ffree
xlat
lret
inc
in
cmp
aad
xchg
dec
cltd
mov
jmp
dec
inc
xchg
jge
into
int3
out
adc
push
fsubr
popa
in
pop
aaa
mov
jnp
test
in
je
je
jmp
into
sub
and
and
fmull
sub
push
mov
inc
nop
adc
test
add
sbb
jno
out
fisttpl
aaa
inc
mov
adc
mov
sbb
aaa
test
mov
or
aas
decl
cmp
mov
test
jge
subb
mov
dec
adc
cmp
bound
lahf
fldcw
xor
sbb
xor
mov
ret
push
icebp
out
out
xchg
push
dec
lea
cmp
loopne
mov
cmp
fcmovnbe
inc
clc
mov
adcb
aad
add
push
adc
jl
pop
dec
faddl
clc
shrb
lds
pusha
add
int3
leave
popf
inc
add
cmp
xor
arpl
and
aad
push
popf
mov
pop
pop
mov
lods
xchg
xchg
sbb
cmp
mov
arpl
popa
imul
rcl
popf
add
xchg
dec
mov
jp
xchg
jecxz
inc
cmp
xor
sbb
lret
into
jp
lods
pop
movsl
push
fistpll
fs
adc
lahf
adc
add
adc
push
repnz
cmp
mov
mov
out
inc
pop
inc
std
mov
fiaddl
pop
sbb
push
push
inc
cwtl
fsubl
out
inc
lea
rorb
shrl
clc
or
dec
lret
int3
mov
cmp
sub
inc
jecxz
stos
movsb
push
mov
out
inc
mov
imul
jnp
pop
xchg
and
cwtl
mov
fiaddl
sbb
addr16
sbb
into
test
lock
push
jmp
mov
mov
pop
out
adcb
jbe
jae
cltd
stc
hlt
shr
xor
or
shrb
jns
push
iret
iret
mov
xchg
jne
enter
dec
or
clc
divl
inc
push
or
jnp
insb
in
rcl
mov
fnstenv
mov
lock
lock
hlt
pusha
gs
inc
cmc
lret
pushf
or
push
aam
test
inc
mov
aaa
cmp
jp
push
shrb
subl
dec
xchg
cmp
rcrl
js
jge
or
inc
and
mov
cmp
mov
fcoml
sub
xor
cmp
mov
sbb
mov
mulb
xchg
pop
sub
xor
test
aam
push
cwtl
push
cmp
fsqrt
cmpsl
mov
stos
cld
popf
xor
imul
aas
outsl
aaa
in
xor
inc
imul
dec
and
faddl
dec
mov
inc
les
test
imul
dec
repz
lret
lcall
cmp
popa
cmp
and
fidivrs
mov
cmp
mov
call
stc
fisubl
sub
mov
mov
mov
sar
xchg
and
or
scas
fisubrl
stos
out
mov
inc
push
insb
push
inc
jle
sub
cmc
fimull
sub
sti
call
into
aam
rcr
mov
or
imul
lcall
pusha
cmp
push
push
push
or
xchg
in
subb
cld
insl
into
push
xchg
shlb
cmpsb
mov
idivl
in
mov
out
arpl
popf
mov
cmp
ret
sub
out
hlt
mov
rolb
neg
int
sahf
and
pop
push
shrl
inc
push
insb
xor
lods
push
lods
dec
xchg
popa
sub
push
xchg
icebp
sbb
pop
adc
push
hlt
test
iret
sarl
mov
jp
or
jne
add
dec
rcll
adc
flds
sti
popl
mov
push
test
inc
in
cmp
cltd
fs
adc
cmp
sub
lcall
or
loopne
inc
sbb
lea
ret
and
inc
and
ret
adc
icebp
dec
cmpsl
scas
cltd
je
sbb
je
loop
push
adc
add
dec
or
scas
push
push
cli
movsl
pushf
cmc
xor
sbbb
push
cltd
pop
imul
aas
mov
cli
repnz
mov
movsb
in
addr16
adc
inc
fcoms
jge
in
jo
dec
adc
inc
aas
or
xlat
push
mov
sbb
xor
ljmp
sbb
rcll
negl
bound
das
mov
ret
pop
cmc
jne
pop
test
jle
mov
adc
jnp
fnstsw
or
in
push
mov
in
lret
lahf
iret
sti
jnp
shlb
lock
xlat
mov
and
xlat
roll
xchg
mov
sarl
xchg
jl
pop
adc
sti
cli
and
stc
inc
mov
shrb
in
mov
stos
adc
inc
dec
lahf
sub
xor
cmc
mov
test
loope
lods
in
sbb
cmpsl
mov
push
outsb
mov
dec
sbb
push
stos
sbb
mov
in
push
stos
jb
shll
cmp
out
sub
sbb
bound
mov
mov
cwtl
pop
lcall
movsb
xchg
pop
add
and
inc
sbb
js
hlt
jge
mov
in
dec
add
cltd
arpl
adc
stos
inc
push
ss
fstpt
dec
xlat
mov
gs
lock
test
aad
aaa
mov
icebp
add
clc
or
aas
ljmp
dec
stc
add
sbb
stc
xor
imulb
adc
nop
arpl
xor
sub
push
jl
nop
mov
dec
mov
mov
xchg
lock
xchg
xchg
imul
aam
and
adc
or
jae
outsl
adc
lret
xchg
add
xchg
rcrb
aaa
adc
fwait
cwtl
data16
dec
push
es
ror
movlps
sub
insb
cltd
jle
aam
fwait
cli
cmc
jb
cmpsb
mov
bound
mov
aas
xchg
mov
fs
lds
negb
insl
lods
pushf
pop
call
loopne
xor
push
imul
push
in
mov
or
cld
icebp
or
mulb
nop
popf
push
pop
sbb
and
or
cmp
popf
scas
add
shrb
sub
xchg
stos
pop
mov
cli
inc
inc
aam
xchg
add
stc
test
dec
jmp
xlat
add
adc
mov
icebp
inc
arpl
and
xor
mov
aas
sub
scas
in
shrl
loopne
mov
adcb
jnp
xchg
scas
in
or
dec
ret
xchg
push
and
stc
pop
jl
push
fnsave
push
loopne
or
xchg
fwait
push
adcl
lods
xchg
scas
push
insb
lock
jge
popf
shlb
xchg
je
testb
mov
repnz
loop
stc
std
call
pop
xchg
jns
jle
and
outsb
jp
xor
cmp
jecxz
pushf
js
pop
ljmp
sub
dec
hlt
and
adc
or
lock
xchg
pop
es
mov
mov
push
ja
sub
enter
dec
outsl
add
and
xor
mov
inc
mov
cmp
bound
fnstcw
jl
sub
inc
mov
lret
loop
outsl
out
lcall
das
sub
push
xchg
mov
flds
sub
test
mov
jecxz
mov
jo
fnstenv
ficoml
aad
xchg
push
mov
addr16
and
xchg
xor
adc
jb
aaa
or
addr16
and
adc
out
les
fwait
iret
fwait
mov
outsb
mov
dec
add
lcall
sbb
jge
rcll
xchg
in
cltd
adc
popf
stos
cmp
jae
into
test
pop
stos
inc
and
mov
test
ret
sub
xchg
inc
fdivr
ja
pusha
outsb
push
or
icebp
daa
nop
hlt
dec
mull
fiaddl
in
sub
add
nop
jb
imull
cld
pushl
ret
sbb
jnp
popa
xor
inc
scas
mov
rorb
push
add
inc
sub
xchg
cld
shll
or
add
add
push
aaa
popa
sub
adc
push
sub
in
mov
cmp
cmc
popf
sbb
cmp
push
adc
addb
add
jl
or
scas
aam
mov
dec
xchg
mov
lcall
adcl
mov
lret
push
xchg
imul
orb
xlat
push
adc
mov
sub
mov
adc
mov
cmc
std
pop
sbb
dec
aam
jb
sbbl
sbb
or
pop
xchg
scas
rorl
jno
stos
jmp
dec
fiaddl
lock
in
or
scas
jle
adc
push
dec
jle
mov
repz
mov
xchg
popa
outsl
sub
pop
iret
cmp
add
pop
jno
push
and
sbb
sbb
push
xor
xor
push
mov
loopne
jno
aas
fistl
stc
cmp
mov
std
cld
push
roll
call
sar
dec
data16
rcr
adc
inc
adc
lock
sub
jns
shl
jae
push
arpl
call
pop
mov
mov
imul
in
shlb
adc
cmc
cmp
sbb
mov
jl
xor
jmp
push
in
insl
mov
pushf
or
and
cmc
mov
movsb
mov
ds
lds
inc
adc
imul
cli
jecxz
andl
pushw
cmpsl
mov
lcall
fcmovne
push
sbbb
mov
push
roll
in
out
imul
insl
add
shlb
rolb
fdivrl
jg
loope
inc
add
scas
enter
add
flds
or
or
pop
push
cli
jns
icebp
stos
das
push
pop
xor
dec
add
int3
push
mov
daa
ja
mov
mov
xchg
mov
pushf
test
faddl
inc
icebp
adc
cli
xor
repnz
push
sub
pop
jle
lods
call
adc
fisttpl
pusha
mov
gs
cmp
addr16
arpl
pop
nop
mov
sub
add
adc
pop
cltd
xchg
leave
push
mov
outsl
cmp
addb
leave
adc
cmp
jne
mov
cli
lods
push
outsb
sbb
sbb
sbb
repz
fbstp
jge
ret
pusha
adc
lds
cs
ljmp
cmp
inc
push
xchg
mov
cmpsb
stos
lods
dec
hlt
dec
shll
inc
push
rclb
pop
jne
inc
bound
mov
daa
jp
push
mov
into
les
mov
xor
out
repz
mov
popa
lods
jb
push
movsl
adc
push
mov
mov
hlt
and
aas
pushf
add
daa
clc
ficoml
scas
mov
imul
mov
popf
test
pop
loope
or
push
mov
popa
mov
das
mov
lahf
sbb
int
adc
lahf
cld
cmp
xchg
jmp
lods
out
cmp
stos
lods
arpl
push
in
jae
imul
add
cmp
pop
or
cmp
lcall
mov
int3
sub
sbb
sti
repz
add
inc
xchg
jo
ror
dec
lret
inc
adc
pop
enter
mov
mov
pop
mov
inc
push
inc
jle
xor
sub
aam
jg
and
sbb
adc
mov
push
dec
mov
push
pop
and
pusha
pop
cs
jnp
mov
add
lods
xchg
insl
in
sub
loopne
gs
hlt
push
mov
lret
pushf
insl
shll
cltd
icebp
and
mov
ret
pop
inc
clc
pop
scas
mov
fimull
aaa
push
lea
inc
mov
pop
and
adc
push
xchg
hlt
cs
pop
xor
sbb
in
pop
adcl
inc
pop
jo
sbb
test
cmp
cmc
sub
stc
mov
out
or
push
fs
xchg
in
push
js
sub
and
fisttpll
inc
push
arpl
xchg
xchg
lret
out
stos
bnd
add
das
lret
cli
jae
lods
push
mov
sub
jg
add
pushf
cmpl
cwtl
scas
jge
idivl
and
pop
gs
je
testb
or
push
mov
jbe
xorb
movsb
pop
out
dec
mov
push
nop
das
stos
and
insl
dec
xor
adc
sub
xor
push
add
adc
or
testb
rsqrtps
inc
xor
loopne
push
jmp
sbb
pop
sbb
out
insb
jne
into
stc
pop
add
enter
push
lret
lret
jne
aaa
daa
push
lock
xchg
hlt
daa
xchg
fstpl
clc
sti
inc
jge
pop
jo
xchg
scas
push
mov
jne
rcrb
ljmp
xchg
pop
xor
and
xor
cmp
fs
jo
cmp
pop
inc
test
pop
sub
fyl2x
jle
bound
and
xchg
clc
lods
inc
in
pop
in
pop
loop
jns
ljmp
mov
call
movsl
scas
in
das
int3
jle
loope
mov
and
mov
pop
mov
pushf
enter
lcall
jp
pushf
sub
dec
and
ret
mov
xor
adc
add
cmc
mov
pop
fcmovnu
outsb
insb
mov
jg
jne
inc
add
mov
inc
sub
fs
push
stos
dec
mov
push
push
das
push
pop
sub
ljmp
jp
mov
and
dec
lock
pop
int
movsl
outsb
add
fmull
jl
add
daa
iret
dec
xchg
std
sbb
cli
andb
jno
cmp
or
pop
insb
mov
push
push
out
lods
push
push
mov
in
cmpsb
jne
pop
sub
push
aas
mov
out
xchg
cmp
clc
or
inc
insb
cmp
lcall
push
mov
jg
jnp
insl
aas
decb
repnz
jbe
xor
ret
iret
adc
push
jno
jo
test
mov
das
addr16
int3
in
cmp
add
sub
pop
cmp
jp
loop
xor
std
insl
pop
mov
sbb
cltd
negb
and
mov
aam
push
pop
adc
jae
mov
cli
mov
mov
iret
movsl
sub
dec
pushf
push
cmpsl
fprem
arpl
or
inc
cwtl
sbb
daa
shrl
pop
sbb
js
jp
sti
mov
or
js
aam
mov
pushl
sbb
pushf
cmp
mov
or
or
int3
and
fs
shll
ljmp
hlt
jp
loop
cmpsl
cli
pop
xchg
call
dec
hlt
test
js
cmpsb
ficoml
rorb
enter
mov
lods
mov
out
fildl
cmc
dec
cmp
sub
cmp
push
outsl
adc
rorl
and
xor
xorl
mov
shrl
fcom
test
jns
cwtl
mov
rorl
push
ds
js
mov
jbe
jo
scas
enter
inc
lods
imul
incl
inc
pop
xchg
or
inc
and
repnz
pushf
jp
imul
mov
insl
call
repz
into
idiv
or
mov
or
jae
sub
mov
es
pusha
cmp
xor
imul
lahf
dec
push
lea
xor
mov
int
iret
pop
subb
sub
dec
mov
mov
mov
sahf
pushf
jmp
subl
sbbb
xor
push
sbb
pop
std
sub
pop
pop
cli
add
jge
fstps
inc
mov
pusha
pop
cld
xchg
pop
push
jb
and
in
cli
inc
popf
out
mov
iret
inc
ret
test
cmp
repnz
jmp
dec
roll
or
dec
dec
and
jns
leave
arpl
mov
mov
notl
aas
pop
gs
scas
jbe
sbb
ljmp
push
and
outsl
les
dec
not
imul
je
inc
and
inc
or
mov
cmp
fsub
dec
fidivl
int3
cs
ficompl
or
inc
pop
push
lret
jmp
mov
mov
add
dec
mov
mov
sub
xor
push
shl
lret
or
sub
pop
pushf
xor
popf
pop
call
fistl
pop
mov
out
scas
xlat
out
sarl
loope
sarb
dec
dec
jp
pop
xchg
sbb
lds
out
dec
add
test
cmp
out
push
pop
cmp
cmp
adc
iret
aas
nop
xchg
out
xor
pop
mov
bound
jle
idivl
pop
shlb
xor
lret
jns
mov
dec
lret
jne
mov
int
mov
outsl
xor
mov
pop
sbb
xchg
xchg
pop
jo
hlt
mov
sub
ret
dec
insb
mov
jb
inc
sti
xor
push
push
loope
test
insl
and
je
fldenv
roll
pop
sub
push
stos
nop
sub
bound
push
sbb
cmp
hlt
jne
or
sbb
sub
into
pop
xchg
rorl
fnstenv
mov
push
dec
and
addl
mov
jne
cmp
inc
add
sub
or
mov
inc
adc
sub
and
push
jp
pop
push
mov
fldenv
test
stos
cmp
mov
xchg
das
call
inc
dec
mov
aad
je
pop
push
ret
addr16
push
xorl
mov
fcomps
cmpsl
fisubl
adc
sahf
xor
inc
xchg
cmpsl
dec
adc
or
mov
adc
pop
push
mov
imul
into
jno
ja
push
out
aad
push
rcrl
aam
gs
push
call
test
sbb
call
int
hlt
inc
test
int
mov
out
mov
shll
adcl
adc
test
sahf
cld
leave
fmull
cli
adc
jne
data16
popf
pop
out
in
mov
push
add
test
les
add
out
loope
xchg
int3
rcl
dec
aad
adc
mov
sub
loop
dec
stos
inc
mov
rolb
push
jmp
das
and
cwtl
or
shll
jge
pop
push
adc
xchg
or
dec
adcb
add
cmpsb
mov
cmpsb
loopne
aad
iretw
pop
in
inc
notl
adc
push
icebp
dec
inc
clc
lods
xor
stos
out
ud0
xchg
xor
mov
jle
pop
gs
nop
lds
movsl
into
ret
mov
xor
xlat
jmp
nop
mov
push
pop
data16
mov
mov
sub
lods
movsb
test
adc
lods
cmp
sub
int3
out
cmp
inc
cs
adc
cld
push
push
or
repz
out
mov
bound
out
scas
jmp
xor
pop
jnp
and
mov
cmp
xor
rolb
cmp
jg
inc
sub
rol
jb
push
ljmp
fs
mov
adc
popa
jns
xchg
inc
loopne
push
fisttps
xchg
cmpsl
scas
inc
push
into
scas
ds
imul
mov
xor
dec
adcb
pop
add
push
xlat
stos
xchg
sti
cmp
jmp
scas
and
cmp
xor
lahf
aam
nop
sbbl
or
cmpsl
xchg
rcrb
mov
jne,pn
or
idivl
jmp
test
xchg
test
adc
bound
and
stos
mov
outsl
shrl
orb
mov
sbb
inc
cmp
mov
xor
pop
inc
pop
push
mov
jle
adc
jo
imul
loopne
shlb
lea
scas
jo
dec
imul
mov
or
dec
push
daa
mov
pop
out
rorl
push
outsb
push
stc
rcr
mov
push
add
clc
and
int3
outsl
add
xor
adc
xor
push
pop
mov
fdivrp
cmc
dec
adcl
mov
lea
lret
cmpsb
jae
inc
into
dec
xchg
lret
lret
pop
popa
mov
loop
mov
adc
je
test
adc
in
and
arpl
daa
mov
sub
adc
loopne
xor
dec
fcoml
cs
cmp
mov
movsl
and
jecxz
insb
pop
std
xchg
xor
arpl
cs
or
sbb
or
jmp
mov
cld
sbb
dec
mov
mov
sub
mov
outsl
inc
mov
mov
pop
inc
adc
fcoms
arpl
scas
inc
outsl
cmp
dec
cmpb
es
or
movsb
clc
adc
sub
aad
mov
lock
or
sub
test
neg
clc
ret
fldcw
dec
lret
jo
mov
cmp
mov
cmp
das
jg
ja
fildl
sub
call
out
aaa
adc
jge
and
mov
bound
add
in
idivb
push
and
sub
xchg
add
insl
xor
mov
incl
push
mov
push
jo
fwait
add
push
and
movsb
xorl
popa
negb
xor
inc
adc
andl
jle
inc
les
mov
mov
push
int
or
pop
add
mov
addr16
iret
fs
rorl
and
in
stos
test
sbb
loope
loopne
sbb
xchg
pop
jp
sub
xchg
fcoms
ret
and
fdivr
jge
test
dec
cmc
or
loopne
sbb
ret
js
test
in
sbb
sbb
sub
dec
movsl
daa
std
push
dec
shrb
sub
scas
data16
fsubl
lock
jmp
repnz
call
adc
mov
pop
fisttpl
into
and
sbb
hlt
sbb
andb
sar
arpl
inc
sub
xor
add
pushf
inc
loopne
cmpsl
gs
pop
adc
mov
fisubl
mov
mov
jne
or
hlt
push
inc
call
fnstcw
scas
lea
mov
fisubs
mov
push
pop
sbb
icebp
fmuls
pop
mov
fcmovbe
jl
jbe
and
push
adc
sbb
jp
insl
imul
punpcklwd
fidivs
mov
cmp
inc
lock
clc
rcrl
sub
cmpsb
gs
xor
add
lret
sub
mov
xchg
cmc
xchg
mov
cmpb
aad
push
dec
mov
ud2
insl
std
fdivs
jns
push
mov
pop
adc
adc
test
adc
pop
fdivl
les
dec
mov
and
fiaddl
orl
or
pop
inc
and
sub
insb
fwait
xor
fwait
fwait
ja
in
pop
rclb
cltd
cmp
jl
mov
mov
adc
adc
jae
jmp
sbb
lods
add
xchg
sahf
stos
out
out
or
js
push
shl
adc
mov
fisttpll
testb
add
fbstp
aam
loope
jae
into
bound
nop
push
and
pop
sbb
idivb
aaa
add
scas
mov
adc
loopne
movsl
movsb
repnz
test
mov
mov
daa
fs
rcrb
movsb
or
push
nop
xchg
pop
mov
inc
jnp
push
adc
icebp
or
sbb
add
fldt
test
fistps
cmc
rorl
xchg
mov
lahf
and
add
stos
or
mov
int3
dec
jmp
sti
les
pop
sub
sti
cmpsl
aas
pop
xchg
inc
push
push
or
repz
sub
jmp
negb
les
inc
aad
inc
jnp
mov
in
cmp
jae
movb
dec
dec
and
notb
test
xorl
mov
jge
adc
insl
nop
aaa
pop
push
mov
fsubs
mov
sub
aas
mov
push
dec
lcall
cmpsl
ret
insb
cmp
dec
xchg
sub
add
dec
jnp
popa
movsl
add
subb
loope
shrl
fstl
sub
dec
stos
pop
jb
push
xchg
adc
sbb
lret
les
mov
jg
fs
in
xchg
ljmp
adc
push
pop
lret
push
or
cmpsl
xchg
jns
ret
xchg
je
sub
xchg
add
bound
cmp
pop
xchg
and
bound
pop
dec
sbb
jns
push
call
xchg
cltd
cmp
and
jp,pt
cmp
lock
pop
pop
insl
push
pusha
jns
lods
push
push
jns
push
mov
pop
add
mov
and
sbb
out
mov
lock
repnz
out
xchg
add
movsb
daa
into
pop
andl
jns
mov
lods
mov
pop
int
mov
ljmp
sub
push
sub
loope
dec
jne
jp
mov
pop
popf
push
sbb
push
xchg
sub
xor
jge
icebp
mov
pop
loopne
mov
jnp
leave
clc
or
inc
jge
push
xchg
and
cmp
and
call
fstpt
rorb
movsb
mov
and
sub
outsb
movsl
jle
jae
xor
repz
aas
shlb
shrl
pop
mov
mov
xor
xor
lret
fs
dec
aas
stos
adc
mov
cmp
lret
sbb
scas
mov
repz
pushf
mov
jge
inc
sahf
and
leave
add
fmul
fidivrl
sbb
in
xor
pop
xchg
mov
cmp
xor
je
insl
pop
dec
bound
aaa
pop
lret
jno
add
shrb
fdivl
shlb
inc
mov
push
in
scas
cmp
sub
jge
jo
andl
push
dec
clc
cld
pop
adc
and
mov
ret
push
adc
imul
jle
jne
je
adc
es
inc
arpl
xcrypt-ecb
lcall
sbb
cmpsl
sbbl
loop
sbb
ret
sbb
xchg
pop
mov
cwtl
pop
cltd
in
dec
push
movsl
cmp
mov
out
or
xchg
mov
adc
pop
add
push
dec
mov
xchg
cmp
jbe
pop
mov
and
cmp
jmp
mov
pusha
fisubl
aas
roll
pop
push
ret
call
dec
out
mov
fiaddl
sub
les
mov
mov
sub
test
rol
ds
cmp
mov
sub
mov
fldl
xchg
je
mul
pop
cld
mov
add
lea
xor
js
mov
clc
push
mov
bound
push
rcll
mov
int3
or
icebp
xchg
xor
aaa
lea
cmp
inc
pop
mov
test
nop
addr16
sar
sbbb
imul
fildll
dec
add
push
dec
mov
int
pop
mov
push
stc
mov
fiadds
push
aas
fimull
pop
in
lds
jmp
jns
lea
cmpsl
mov
call
dec
cmp
mov
and
lea
inc
outsb
daa
mov
mov
sbb
push
enter
add
stc
jle
inc
hlt
cli
xor
xor
call
cltd
or
in
and
xchg
cs
pop
ficoms
push
xchg
les
xchg
cmp
std
outsb
mov
sub
mov
sbb
xchg
out
mov
mov
outsl
inc
dec
cmp
and
ds
mov
roll
push
ja
mov
mov
std
loop
dec
aad
outsb
aad
shrb
or
outsb
into
cmp
pop
mov
sbb
push
push
ja
gs
inc
add
mov
aam
sbbl
add
cltd
pop
lds
sub
ds
sahf
rolb
rorl
fiaddl
or
dec
pop
jae
cmp
sbb
mov
test
out
call
sub
leave
xchg
xchg
push
xor
cld
push
fstpt
push
rcrb
mov
push
out
dec
push
pop
lret
or
fidivs
inc
mov
dec
pop
bound
cmp
add
shll
cmp
std
jge
or
scas
subb
test
andb
shlb
mov
into
adc
jle
sub
dec
jecxz
sahf
pushw
out
imul
xchg
popf
jp
lcall
pop
out
mov
ficoml
punpckldq
pushl
mov
pop
add
cltd
add
or
clc
or
stos
dec
ljmp
jae
fmull
mov
mov
and
push
mov
mov
xchg
daa
inc
lahf
dec
pop
jecxz
mov
mov
inc
test
jne
mov
gs
psubusb
test
negb
and
adc
lcall
cmpsl
incl
loope
mov
and
and
push
test
rcrb
adc
cli
std
push
fstpl
in
push
andl
adc
scas
jo
pop
add
jns
adc
les
add
adc
pop
bound
mov
jle
shll
mov
and
inc
fsubrp
shrb
cwtl
mov
adc
insl
dec
xchg
std
adc
mov
push
or
xchg
mov
lret
adcb
dec
cmp
add
dec
loop
pop
or
das
cmpsb
in
sbb
inc
stos
sahf
sub
out
jmp
sub
sbb
mov
cs
xchg
lock
mov
ret
xor
andl
dec
lock
clc
and
and
lret
je
xchg
jmp
js
sub
push
mov
push
push
mov
and
xor
cltd
or
mov
xor
aam
cmpsl
pop
sbb
in
gs
ficomps
dec
shll
sbb
or
pop
das
scas
cwtl
jmp
shr
cmp
arpl
iret
int3
fs
loopne
loopne
imul
jno
sarb
into
jg
push
leave
ret
sbb
pop
jo
out
jb
pop
inc
jbe
pop
pop
add
mov
pop
ret
or
cmpsb
push
adc
nop
pop
dec
call
mov
mov
adc
push
jnp
lret
add
pop
je
bound
jmp
jns
xor
mov
adc
loope
xchg
pop
int3
add
inc
xor
movsl
mov
fdivr
and
pop
in
dec
in
sar
hlt
inc
jmp
xor
jmp
cltd
iret
jle
push
out
sahf
dec
adc
jl
or
cli
int3
xor
popa
fdivl
out
push
jnp
dec
test
cmp
into
jl
inc
stos
mov
cltd
addb
sub
movsb
cs
fidivs
adc
pop
lods
push
jns
cmc
pop
push
pusha
cmpsl
push
mov
loope
call
inc
sub
repz
xchg
xchg
sub
movsl
or
rcll
inc
jmp
pop
push
mov
cmpsb
pop
xlat
or
frstor
mov
out
ds
es
mov
out
inc
nop
repnz
movsl
out
stos
pushl
aam
xchg
sub
push
loope
bound
pop
cld
mov
jle
inc
icebp
outsl
cltd
ss
push
notl
ret
add
sub
int3
and
repz
xchg
sub
sbb
and
js
xchg
mov
mov
mov
push
sbb
and
mov
mov
sub
inc
inc
inc
cmpsb
mov
add
or
adc
mov
push
les
push
mov
jns
dec
pop
sti
pop
int3
or
rcr
divb
notb
mov
lcall
jne
js
cmc
loop
pop
push
add
int3
xor
mov
mov
rcll
xchg
cmc
pushf
inc
mov
jo
jnp
enter
test
cwtl
add
movsb
dec
push
stos
incb
das
xchg
inc
inc
dec
jnp
pop
shrl
int
xchg
cmp
mov
pop
pop
xor
jns
xor
jge
and
or
fistpll
pop
xor
js
fistpl
lahf
loope
dec
jo
cmpsl
push
jmp
mov
into
mov
add
sub
add
mov
and
xchg
out
sbb
jl
dec
aam
jle
pop
repz
outsl
movsl
xchg
lret
ret
xor
aad
xchg
mov
and
loope
push
sbb
or
loope
mov
inc
ja
inc
xor
jecxz
mov
pushf
pop
or
jmp
clc
sti
cmp
insl
mov
lret
nop
jle
sbb
pop
leave
js
imul
cmpl
pop
ret
xor
adc
xchg
push
int
mov
les
and
or
xor
ja
add
cmpsl
je
aad
outsb
jle
decb
imul
fcmovnu
and
nop
add
jle
shlb
imul
pushf
cmpsb
out
cmp
and
sub
mov
inc
cltd
or
andl
mov
insb
pop
jmp
push
jne
xchg
xor
adc
std
adc
popa
sbb
test
fadds
test
scas
mov
mov
stc
jae
fcomp
adcl
je
lret
dec
push
sahf
imul
mov
mov
sti
lods
mov
mov
adc
sub
ja
xor
jl
jp
dec
sub
mov
dec
pop
jg
or
push
sub
or
xchg
push
adc
lahf
in
mov
mov
in
add
lcall
gs
movsl
mov
out
xlat
sbb
cld
ja
ss
add
jge
pop
ja
mov
cmp
stos
daa
and
scas
cmp
xor
lock
out
mov
movsl
jbe
mov
sbb
ds
or
mov
xchg
mov
scas
dec
clc
dec
cmp
stos
andb
sbb
pop
cmp
aam
adc
dec
sbb
push
es
les
rclb
fidivl
jbe
mov
loop
cmp
std
mov
pop
aad
data16
xchg
cld
jbe
int
lods
cmpsl
mov
cmp
sub
nop
dec
mov
mov
ljmp
leave
sahf
mov
inc
imul
dec
cmc
ds
xchg
pop
test
sub
out
dec
pushf
fs
dec
fstpt
stc
test
jo
test
adc
leave
xchg
out
or
sbb
pop
dec
jp
dec
push
sarl
icebp
pop
shr
xchg
jb
inc
xchg
sub
aaa
mov
mov
cmp
mov
jns
movsl
dec
out
cmp
out
pop
fs
sub
mov
xchg
movsl
push
mov
neg
imul
sbb
xchg
hlt
lods
cld
int3
mov
dec
in
cmp
cmpsb
ret
mov
sbb
mov
add
int
in
fs
ljmp
xor
shr
lret
ss
inc
sbbl
dec
jmp
addl
in
cmp
mov
dec
out
popf
xor
test
jbe
movsl
cltd
loopne
fwait
pop
ficomps
xor
lds
mov
lahf
mov
das
and
xchg
dec
pop
int3
push
mov
adc
les
arpl
stos
push
and
push
mov
aaa
push
xor
dec
adc
sbb
mov
leave
push
gs
xchg
nop
mov
aas
aas
lret
ss
call
jl
fwait
xor
dec
add
imul
pop
cs
je
push
xchg
sti
mov
ds
out
mov
das
sub
push
mov
js
iret
mov
mov
or
lcall
inc
jmp
dec
mov
mov
cmp
leave
fs
and
pusha
adc
jmp
lock
push
sarb
gs
fiadds
sub
js
xor
mov
sbb
sarb
jne
sbb
leave
pop
xor
pop
jnp
adc
je
xorl
test
cmp
pop
jnp
outsb
push
mov
sbb
mov
sbb
call
repnz
jecxz
sti
and
lret
mov
mov
out
sub
or
pop
testb
push
and
leave
pop
lret
scas
sbb
mov
ret
pop
mov
cmpl
enter
xchg
negl
lods
insl
rol
xor
mov
adc
psubq
adc
xor
cmp
sbb
push
jne
rcrb
pop
xchg
dec
inc
movsb
icebp
jo
gs
lods
push
fsubl
test
or
imul
insb
mov
loope
jns
or
enter
xchg
mov
adc
sbbb
scas
xchg
pop
mov
cld
xchg
sbb
jne
test
test
add
enter
push
push
sbb
jmp
lds
pop
jmp
sub
stc
mov
or
pop
cs
inc
cmp
shll
pop
lret
hlt
jle
dec
cmp
cmpsb
js
adc
mov
push
adc
xchg
rclb
fildll
test
push
imul
sbb
dec
jg
push
xor
shlb
cmp
jnp
adc
enter
jecxz
add
pop
push
cmp
pop
shlb
fmull
out
adc
jle
jne
subb
mov
push
mov
insl
add
ds
jo
xchg
sbb
loope
push
fidivrs
movsl
sahf
lahf
fisttps
out
shlb
jne
adc
push
test
adc
stc
mov
mov
cmp
stos
jg
nop
pop
adc
jno
aad
imul
xchg
inc
jbe
pop
out
xchg
test
pop
dec
daa
stos
xor
shlb
mov
lret
cmpsb
shlb
data16
dec
push
repnz
add
mov
jns
sub
in
push
jo
mov
xchg
jmp
bound
test
dec
inc
lods
inc
adc
sbb
sbb
outsl
gs
add
cs
push
test
push
pop
add
inc
std
dec
imul
push
test
and
xchg
push
popf
dec
ret
push
cmp
pop
dec
mov
and
pop
pop
mov
insl
fcmovb
aam
dec
xchg
jecxz
xchg
and
outsl
negl
outsl
xchg
dec
addr16
inc
lods
mov
fcoms
and
imul
dec
pop
cmp
stos
dec
add
jo
sbb
fwait
adc
pop
shll
push
cmc
mov
pop
mov
mov
push
inc
leave
xor
lret
or
sub
push
or
xchg
orl
sbb
inc
popa
fmull
xchg
ja
xor
fcompl
mov
push
adc
es
outsb
add
pop
and
or
lock
ds
jge
lock
mov
jnp
push
cltd
fidivs
mov
jno
jp
xchg
sahf
mov
push
sbb
jne
mov
xchg
rolb
data16
add
pop
mov
mov
jae
pusha
mov
push
js
out
enter
adc
roll
test
rcll
sbb
lods
or
insl
mov
adc
and
sahf
xchg
inc
dec
rorb
xor
push
stos
sub
mov
or
rcll
pop
outsb
arpl
nop
ds
hlt
jmp
push
scas
das
insb
outsb
lds
cmc
push
lods
insb
ljmp
divb
xor
sbb
sub
js
mov
shr
insb
dec
arpl
lods
inc
cmpsl
aad
dec
mov
cmp
clc
imul
lods
ret
daa
mov
inc
cmp
push
add
cmc
iret
test
lcall
imul
sub
fstpt
das
xlat
addl
jecxz
inc
mov
js
sti
sbb
inc
mov
xchg
nop
dec
es
pop
cmc
mov
mov
xchg
imul
rclb
pop
lock
ljmp
jmp
insl
stos
sub
pushf
dec
mov
add
push
pusha
or
adc
or
les
sahf
in
lds
cmp
sub
int
xchg
insl
shl
ljmp
xor
mov
and
xor
mov
test
int
loopne
sub
pop
pop
movl
sbb
lods
xchg
lods
pusha
mov
testl
pop
test
popa
jle
mov
and
aad
xor
aas
add
sub
test
push
jns
mov
cmp
in
fucomp
push
sub
aas
sub
pop
aas
add
pop
iret
lahf
xchg
push
movsl
ja
add
test
jl
push
dec
xor
mov
dec
shrl
outsb
cmpsl
cmp
xchg
sub
enter
mov
sbb
mov
repnz
pop
pop
add
test
fnstcw
popf
loope
pop
loopne
mov
imul
ss
loope
iret
inc
sbb
or
mov
lock
jbe
in
sbb
add
stos
inc
mov
xchg
nop
jnp
lds
pushf
xor
rolb
jecxz
pop
loope
out
cwtl
cwtl
mov
mov
movsb
sbb
jg
or
cmp
mull
cmpsb
cmp
divb
cmp
ret
loopne
insb
push
js
leave
sub
sahf
aas
pusha
jle
adc
mov
lods
xchg
mov
pop
fstpt
add
icebp
pop
inc
pop
pop
jnp
dec
adc
out
dec
dec
mov
shr
push
je
add
add
push
sbb
test
lods
jge
in
xchg
fwait
sbb
mov
ljmp
ja
push
xchg
je
or
jg
pop
lea
jno
cmpsl
fld
add
in
out
imul
cmp
add
pop
push
imul
cmp
lret
adc
test
mov
arpl
loop
cmp
sub
ficompl
mov
pop
sbb
cld
mov
sbbb
mov
xchg
mov
call
adc
push
sub
shr
dec
popf
pop
xchg
test
ret
inc
push
push
gs
lea
sbb
fidivl
mov
fisubs
jge
sub
addr16
fidivl
addr16
call
sub
imul
andl
mov
xchg
cltd
movsb
cmp
jno
xchg
out
fildll
lret
jp
mov
shl
arpl
mov
aam
and
icebp
mov
add
in
movsb
xor
cmpsb
cmp
jmp
xchg
jne
jmp
fucomip
pop
in
pop
push
int3
mov
sbbb
data16
mov
xor
inc
movsl
jno
jp
mov
cld
hlt
stos
sbb
mov
in
mov
sbb
je
mov
dec
push
sbb
aas
test
mov
sub
xorb
and
insl
cmpb
xor
xchg
and
sub
mov
cmp
outsl
int3
pop
imul
int
jb
xor
les
jecxz
sti
dec
xor
stos
sti
or
pop
ret
push
mov
and
adc
adc
xchg
ds
cltd
jg
insb
cmp
call
pop
insl
ret
dec
mov
lret
xor
std
jae
xor
jp
into
and
cmp
xchg
push
das
out
cmpsb
sahf
dec
aaa
int3
nop
in
loop
cmp
dec
fnstcw
add
icebp
out
sub
loopne
and
dec
or
adc
aas
loopne
or
outsl
call
and
cwtl
jl
cmpsb
enter
leave
add
popa
push
push
aaa
jns
sarb
or
roll
and
loope
sbb
mov
mov
xchg
outsl
mov
lock
into
insb
std
repz
pop
fnstsw
and
adc
shrb
or
ret
popf
cmp
sbb
cmc
inc
adc
pcmpgtw
xchg
cmpsl
lcall
dec
push
loope
sub
cltd
cmp
dec
jbe
imul
rorb
ret
dec
lods
fimull
fadds
pushf
movsb
xchg
jbe
out
lea
xchg
sbb
movsl
shll
dec
add
repz
xor
fisubrl
into
sbb
into
ficompl
aaa
sti
fistl
push
cmc
jp
sub
jmp
ljmp
cli
shll
add
sbb
and
and
dec
shl
lret
sub
cld
ficomps
int3
jp
cmp
mov
std
sti
cmp
dec
jb
mov
dec
and
push
pop
cwtl
jl
inc
lret
pop
and
jb
incb
mov
sbb
xchg
cli
mov
aaa
cmp
push
pusha
daa
pop
jl
add
xchg
imul
inc
or
in
testl
jb
fistps
and
sub
push
push
mov
xchg
bound
test
dec
test
sub
rcll
pop
cmp
pop
out
popa
iret
gs
or
les
fidivrs
mov
mov
pop
add
cmp
dec
lods
mov
cmp
and
lea
add
imul
mov
loopne
or
rcrb
ret
outsl
xchg
inc
add
xchg
faddl
sbb
addb
push
hlt
fwait
xchg
push
orb
in
lods
sbb
mov
scas
adc
lods
pop
cmp
jle
lret
test
or
rcl
and
out
xchg
cmp
or
out
push
mov
mov
scas
xchg
and
jns
ss
dec
push
add
push
ret
xchg
push
ja
lods
clc
das
rcll
in
cltd
pop
mov
jnp
xor
divl
add
aas
shll
push
shrl
mov
outsb
xchg
push
ucomiss
lret
sub
xor
pop
inc
iret
inc
push
xchg
xchg
push
xchg
subb
sub
call
fbld
cmp
subl
jmp
add
push
dec
push
ret
xchg
shlb
addr16
nop
sbb
or
mov
dec
fstpl
test
out
adc
push
das
in
fnstcw
xlat
dec
mov
mov
sarb
push
xchg
adc
scas
cmpsl
inc
pop
dec
repz
xchg
mov
js
pusha
mov
mov
das
rsm
fdivrl
mov
inc
pop
addb
inc
cmpsb
mov
xor
and
ret
and
xchg
xchg
mov
inc
orl
jmp
pop
int3
mov
cmp
mov
hlt
out
std
cs
xor
pop
scas
scas
pop
call
fistpll
loopne
sti
sub
les
adc
pop
xlat
xchg
ja
push
jno
push
arpl
push
or
pop
aas
ss
pop
adc
add
and
pusha
outsb
test
loopne
push
sub
test
push
mov
outsl
bnd
shlb
dec
cmp
mov
sub
mov
push
leave
mov
xor
jle
adc
mov
aad
movsl
mov
add
aad
int3
xchg
cmp
inc
mov
mov
push
sub
lret
jno
mov
test
mov
jmp
push
push
test
xor
mov
lea
mov
lahf
jle
sub
mov
clc
dec
dec
out
ret
pavgw
scas
mov
popa
push
or
lret
shll
lods
lods
movsl
jp
cmp
imul
xchg
loopne
sbb
xchg
add
dec
in
jl
testb
jl
rorb
jmp
mov
xchg
cmp
iret
in
mov
pop
or
xor
xor
cmpsb
mov
push
mov
jns
or
jmp
imulb
adc
or
or
sub
lods
mov
decb
cmp
or
jno
mov
push
fnstsw
ss
xor
push
push
or
dec
scas
aas
adc
sbb
mov
data16
outsl
add
in
mov
dec
sahf
cmpsl
xor
icebp
or
push
adc
fsub
jns
cmp
nop
movsb
movsl
test
ljmp
mov
popf
push
mov
sub
add
sub
sub
mov
dec
and
mov
bound
orl
out
pop
adc
or
cmp
sbb
sahf
cmp
inc
int
pop
lods
cltd
add
dec
add
sbb
stos
jns
fmuls
mov
xchg
dec
cwtl
xchg
push
daa
fmulp
in
repz
mov
mov
pop
ret
jb
aad
into
dec
aas
or
daa
jge
clc
push
jecxz
cli
test
lcall
lds
inc
mov
sbb
in
push
mull
stc
popf
or
or
test
out
dec
fcomip
pop
ja
test
jge
adc
add
test
mov
gs
cmc
xlat
cltd
lcall
jb
imul
inc
push
scas
mov
mov
movq
cmp
lea
pushf
jnp
lods
add
mov
inc
test
inc
inc
je
fisttps
rcl
rorb
in
or
cmp
movsl
in
int3
int
xor
add
xlat
or
daa
test
mov
mov
lds
inc
pop
mov
mov
jno
test
mov
xchg
pop
or
sub
mov
sub
daa
scas
cmp
push
mov
outsb
mov
cmp
bound
fadds
or
mov
jbe
daa
je
subb
nop
outsb
rcrb
std
push
mov
bound
and
push
test
ret
bound
inc
test
sbb
xchg
push
jnp
jb
ja
jge
ja
mov
ret
dec
setge
xchg
std
arpl
jecxz
shrl
ret
push
mov
out
mov
sahf
sbb
jg
enter
adc
fistpll
or
insb
cltd
lock
xchg
inc
push
bound
std
jb
arpl
mov
or
inc
adc
jecxz
repnz
inc
jmp
sub
or
push
xchg
pop
fcompl
sbb
fs
adc
js
mov
in
jne
dec
cmc
sub
cmc
cmpsb
lods
dec
push
andl
imul
and
adc
das
mov
lods
stos
imul
outsl
cmpsb
insl
insb
mov
pop
add
js
add
pop
adc
mov
push
in
add
jne
loope
rcll
and
cld
daa
cs
fwait
inc
pop
mov
outsl
xor
sub
in
add
mov
stc
ret
inc
jbe
jge
add
lea
jle
pop
lahf
test
dec
xchg
push
xor
int3
push
pusha
jno
jmp
push
push
xchg
sahf
stos
ret
insl
std
or
mov
gs
int
mov
pmuludq
fsubl
dec
jb
ret
gs
or
int
jnp
push
push
sbbb
mov
mov
jmp
pop
sbb
inc
mov
das
add
jecxz
jle
sbb
pusha
push
lahf
mov
dec
push
or
addr16
jp
xor
jnp
mov
jb
and
divl
das
xor
cmp
sbb
mov
jb
adcl
push
aam
test
aas
jl
mov
stc
mov
mov
testl
jae
outsb
add
mov
jle
lahf
sbb
sub
or
mov
daa
sbb
nop
adc
add
add
out
pushf
jo
aad
and
sbb
mov
xchg
aas
dec
cmp
adc
daa
clc
jmp
mull
fucompp
cwtl
mov
push
mov
pop
sbb
xor
xorb
mov
out
jnp
pop
sub
add
xchg
push
dec
imul
mov
cmpsl
movsb
lock
dec
pop
stos
shll
ss
cmpsl
out
or
xor
out
loope
outsb
les
push
cwtl
mov
arpl
push
sbb
xlat
mov
jge
xchg
and
add
js
repz
dec
aam
jns
jb
inc
push
leave
addr16
inc
fidivs
adc
or
movsb
push
xchg
mov
and
data16
mov
push
icebp
fmul
mov
aam
sbbb
dec
mov
loope
test
daa
mov
scas
dec
add
jae
imul
enter
xlat
push
out
leave
imul
jns
mov
stc
sbb
into
and
sub
sbb
rorb
xchg
fucom
sbb
dec
jmp
imul
mov
fisubrl
sbb
ja
push
test
insb
aaa
bound
mov
pop
movsb
mov
mov
mov
sahf
rcll
cmp
mov
call
push
sub
jmp
movsb
sub
jl
daa
mov
pop
in
push
cli
testb
adc
mov
fs
xor
inc
jno
push
imul
fldl
adc
rcr
xlat
lcall
scas
mov
jno
dec
movsb
or
mov
aam
xchg
inc
outsl
jp
sbb
or
lea
stc
ficompl
shl
and
insb
push
ss
cwtl
lock
mov
ret
adc
cld
out
mov
push
out
jb
cmp
jae
mov
int
ret
jg
stos
aam
icebp
insb
aad
inc
and
cltd
mov
cmpsb
jne
bound
movsl
repnz
push
xchg
adc
jae
addr16
iret
xchg
sbb
push
mov
mul
loopne
push
imul
pop
lahf
adc
in
push
jns
mov
cli
cmpsl
cmp
pop
int3
xchg
xchg
in
xlat
mov
insl
push
mov
inc
xor
scas
aas
add
mov
dec
xor
sub
jb
int3
dec
sbb
testl
jg
or
les
clc
jmp
mov
adc
jmp
dec
sub
into
sub
push
adc
sar
pusha
jle
jb
adc
cltd
xor
mov
push
mov
div
imul
pop
cmp
jo
and
mov
dec
std
shlb
and
bound
push
mov
ss
jl
and
ret
fstpl
adc
mov
xchg
push
mov
test
pushf
pusha
in
std
sbb
inc
sbb
jmp
cmc
aam
lcall
sub
addl
dec
dec
insl
push
sbb
rol
or
shlb
pop
outsb
movsl
aam
dec
lea
mov
int3
cmpsb
adc
inc
cmp
mov
and
jb
fldcw
adc
lods
out
loop
sub
ja
cmp
and
nop
jae
and
insb
sub
test
mov
xor
push
xchg
int3
ret
out
je
xchg
clc
movl
add
pushf
inc
cmpsb
in
push
push
mov
inc
aam
inc
cli
pop
addl
and
ja
sahf
loope
outsb
mov
loope
push
or
nop
mov
out
lret
stos
mov
test
inc
pop
push
inc
jmp
and
es
lret
jae
lcall
or
lds
nop
mov
pop
xor
jno
mul
dec
cmpsb
sbb
sti
cmc
clc
cmp
jae
xchg
js
into
jle
mov
sahf
orl
fildl
adc
into
mov
adcb
and
idivl
clc
rcll
mov
push
pushf
fmull
addr16
lcall
push
or
push
lahf
movsl
sbb
call
sbb
in
or
or
inc
jnp
movsb
mov
xor
enter
jge
nop
insl
xchg
cmp
sahf
cld
pusha
mov
or
mov
pop
fistpl
sarb
movb
sbb
or
pop
js
or
out
xor
dec
shrb
out
or
in
pop
fcoml
imul
and
pop
cmc
pop
out
jle
xor
mov
scas
lods
outsb
pushf
push
sti
xor
lret
cmpb
pushw
sbb
lret
mov
arpl
inc
xor
pushf
arpl
sub
cmp
fidivs
jne
repnz
xor
std
push
jp
js
negl
xor
jle
aas
and
add
js
push
xchg
dec
cld
aaa
inc
inc
nop
or
xor
pusha
mov
stos
loop
push
push
xor
inc
xor
xchg
pop
stos
add
test
sub
sub
add
mov
popf
xor
inc
xor
clc
in
test
sub
pop
pop
dec
inc
mov
in
xlat
inc
outsb
xchg
add
jno
shrb
pop
add
dec
cmc
shlb
scas
mov
cli
shr
in
fld
aas
dec
shll
mov
lcall
ja
ret
pop
idiv
ja
sbb
addl
repnz
shrl
mov
sbb
mov
mov
dec
out
das
lock
sbb
or
adc
mov
call
ja
cmp
push
leave
mov
scas
pop
jecxz
add
xchg
pop
sbb
inc
dec
push
mov
rorb
das
nop
pop
push
jmp
dec
lods
jmp
mov
clc
in
dec
push
rolb
loopne
fimull
repnz
popf
fidivrs
cwtl
test
stos
sbb
xor
lcall
fxch
inc
xor
cwtl
and
aas
sub
movsl
xor
test
xchg
daa
rolb
je
lods
daa
pushf
jp
mov
je
addb
fdivr
jge
test
mov
xorl
pavgb
dec
xchg
sub
aas
and
jmp
imul
lods
xchg
xchg
iret
lcall
jmp
cmp
ficoms
and
das
lret
fbstp
inc
cltd
ljmp
and
pop
hlt
out
mov
pop
push
sub
dec
mov
inc
rcl
sub
les
cltd
dec
out
das
mov
mov
xchg
or
sbb
pop
data16
ret
mov
inc
int
gs
dec
jecxz
je
jge
dec
ror
mov
popf
xchg
sbb
mov
pop
adc
dec
mov
inc
sbb
sub
ss
dec
sti
stos
imul
enter
pop
push
push
das
mov
int3
mov
sub
in
sbb
xchg
inc
inc
popf
mov
cmp
enter
push
sbb
movsl
mov
in
stos
movsl
inc
dec
repnz
cltd
out
mov
xor
inc
rorb
add
outsb
iret
ja
and
sbb
mov
jmp
mov
dec
xor
out
je
shrb
pop
pop
jmp
sub
push
sbb
and
sbb
sub
imul
pop
mov
fsubrs
mov
es
cmpsb
xchg
rcr
push
push
gs
or
xor
mov
arpl
push
dec
lock
or
xor
mov
push
std
aad
and
mov
pop
insb
fistl
in
dec
mov
lret
clc
or
cmp
into
ret
add
push
adc
add
sbb
fimuls
add
das
inc
fisttpll
shll
enter
fwait
iret
pop
and
insl
imul
lods
cmpsl
cli
sbb
mov
and
mov
cmp
shlb
loopne
push
addb
pop
mov
xlat
push
mov
sub
cmp
int3
and
stos
vpunpckhwd
dec
adc
shlb
repz
push
push
jmp
outsl
pop
cld
insb
xchg
push
mov
js
test
sub
jb
aas
test
cmp
pop
shlb
and
push
or
add
sub
lcall
movsb
mov
divb
das
gs
std
add
andl
int
repnz
xrelease
lret
and
scas
sub
mov
mov
jmp
add
sub
out
mov
loopne
dec
repz
or
push
jo
inc
mov
mov
jmp
xchg
jns
mov
outsl
movsl
cmp
jae
lret
dec
stos
jl
test
mov
cmp
inc
outsl
pop
fcompl
jae
push
dec
cmp
mov
insl
fcoml
negl
and
sub
xorb
push
add
push
gs
sbb
pop
shlb
cmc
js
sub
adc
lods
daa
stos
fnstsw
xor
dec
je
xchg
cmp
fcomi
cmpb
mov
pop
sbb
fisubrs
mov
test
pop
or
test
pop
cs
sarl
imul
push
cld
lcall
lahf
rcr
push
jbe
rolb
sbb
test
imul
mov
sbb
lock
pop
add
fnstenv
mov
sahf
test
xchg
and
cmp
mov
insl
outsb
insb
sarb
clc
sub
daa
mov
mov
sbb
mov
loopne
adc
dec
push
cmp
pop
out
pushf
stos
and
test
mov
loop
js
clc
lods
mov
repz
mov
hlt
mov
xchg
mov
data16
xchg
dec
fstpl
push
int
das
lods
gs
xchg
add
int
pop
lcall
icebp
insl
push
popa
jg
sbb
cmp
outsl
inc
outsl
jecxz
inc
lret
out
mov
adc
sub
fistpll
ret
bound
test
xchg
xchg
int
lret
xchg
pop
loope
js
int3
mov
mov
out
or
sbb
jecxz
out
sub
push
cld
xor
out
imul
shll
imul
and
mov
nop
xchg
repnz
lea
filds
xchg
push
fistpl
ret
in
pushf
add
mov
gs
xor
in
jle
test
and
or
ret
add
cltd
sbb
inc
pop
int3
jo
and
pop
fstps
mov
movq
das
mov
jg
gs
jmp
cmovp
das
sahf
mov
push
dec
scas
daa
jmp
mov
sbb
lods
das
out
ja
mov
pop
repz
std
xchg
test
neg
enter
rclb
mov
mov
sbb
push
call
xchg
or
pop
adc
dec
cs
ds
insl
insl
fildl
xchg
mov
adc
xlat
or
clc
inc
jae
stc
pop
xchg
sub
lock
push
int3
mov
bound
ja
mov
xor
dec
out
pop
adc
pop
out
fdivrp
shll
add
shlb
add
sbb
mov
movl
dec
arpl
and
rcll
fsubp
rcrl
xor
scas
cli
rol
repnz
jnp
or
ficompl
outsb
shll
fidivrl
imul
scas
jge
out
push
add
aaa
push
test
lods
pusha
pop
rcrb
repnz
and
pop
and
mov
sbb
lret
mov
aaa
pop
or
xlat
adc
push
push
insb
mov
mov
leave
cmp
push
mov
push
int
mov
shlb
pop
add
bound
pop
shrb
cwtl
popa
in
loopne
or
adc
jnp
and
dec
aad
clc
movb
xlat
cwtl
mov
test
push
ret
pop
and
cld
or
pop
pop
xchg
push
xor
or
in
mov
cmp
pop
fwait
sub
ret
ljmp
out
sub
xchg
sbb
cmp
or
sbb
mov
mov
mov
sti
jmp
stos
fisubl
and
lea
addr16
cld
icebp
add
sub
cmp
stos
push
or
jae
and
mov
jo,pn
cs
lret
push
roll
cmp
dec
ds
icebp
lods
inc
repnz
insl
cmp
aaa
sbb
fcompp
jb
add
push
mov
dec
jb
les
sub
mov
out
mov
sub
leave
stos
mov
jge
loopne
mov
cld
popa
mov
mov
add
js
mov
mov
pusha
mov
cmp
pusha
leave
shlb
ficoml
and
out
into
movsl
add
xchg
aaa
jnp
jbe
push
and
inc
lea
xlat
push
add
cld
scas
outsl
ljmp
inc
leave
pop
mov
cli
mov
lcall
jle
rolb
outsb
sbb
pop
add
cmp
out
cmp
pop
and
je
xchg
xchg
outsl
pop
add
jecxz
sbb
and
arpl
sub
out
xrelease
iret
sub
frndint
pushf
cli
idivl
xchg
insb
sub
ljmp
xchg
sbb
sbb
push
or
sub
push
setge
add
mov
insl
rcl
in
or
mov
std
and
adc
popf
in
add
and
or
test
xchg
adc
and
sbb
aam
fdiv
daa
into
jno
dec
aas
push
insl
inc
insl
aam
xor
or
cmp
cmc
cmp
fdivs
inc
sub
sub
xchg
daa
or
fnsave
pop
sahf
aam
lock
daa
mov
out
stc
or
stos
hlt
or
adc
jb
aad
push
inc
enter
mov
xor
mov
cmp
jg
lcall
das
mov
test
fidivs
pop
inc
cmp
js
jcxz
mov
sti
pop
int3
xchg
and
xchg
jne
push
xchg
addr16
dec
popa
add
mov
mov
xchg
lods
lret
gs
les
movsb
adc
cld
mov
xchg
sbbb
inc
jbe
dec
pushl
xor
mov
add
push
mov
cmp
into
imul
mov
push
adc
jmp
xor
ljmp
lahf
inc
loopne
inc
cmc
fwait
shlb
sahf
incl
popa
adc
dec
cmc
push
arpl
push
or
imul
pop
shl
lods
pop
mov
loope
sbb
andb
push
cmpl
imul
mov
cltd
pop
push
xor
les
cwtl
mov
idivb
lcall
test
mov
aaa
lods
jb
daa
movl
loop
xchg
out
rclb
inc
cmpsb
call
jecxz
loopne
mov
or
dec
xor
cmp
das
jae
jle
xor
ss
stc
dec
xchg
mov
arpl
lea
mov
mov
jno
mov
cmp
jns
sub
gs
and
jno
push
mov
je
xchg
inc
movsb
shll
push
inc
out
scas
in
cltd
mov
into
imul
cli
stc
repz
sbb
xchg
jno
cmp
cmpsb
mov
cmp
jb
push
addr16
lcall
repz
test
adc
sub
xchg
bound
push
jae
jo
pop
mov
inc
mov
test
push
test
outsb
inc
jae
clc
push
test
pop
or
data16
or
mulb
add
adc
les
push
out
mov
shll
aam
lret
shl
push
pop
dec
imul
faddl
push
int3
jae
sub
das
mov
repz
jo
adc
fisubs
push
into
popa
fists
out
xchg
sbb
or
inc
mov
andl
cmp
and
xchg
das
sbb
sti
pop
adc
sub
stos
je
lods
mov
jecxz
dec
sub
shrl
cmp
mov
add
add
pop
push
out
adc
rorl
or
mov
dec
icebp
sub
push
ror
in
add
push
push
sub
cltd
xor
stos
or
out
pop
adc
call
dec
push
leave
bound
pushf
mov
fdiv
shlb
in
jns
xor
pushf
dec
nop
mov
hlt
js
adc
daa
inc
xor
loope
add
fistpl
mov
inc
or
cli
sbb
push
iret
lock
add
out
mov
pop
lahf
mov
fwait
push
adc
dec
mov
sbb
dec
xchg
xchg
getsec
and
jae
xchg
in
aas
bnd
mov
outsb
pop
mov
push
mov
sbb
sub
sub
cld
sti
pop
iret
int3
inc
sub
gs
nop
jae
inc
scas
test
shr
imul
fiaddl
inc
mov
mov
and
test
popa
movsl
adc
xor
data16
xor
push
insl
sbb
xchg
inc
lods
jle
and
out
ret
stc
xor
sbb
shr
fcomps
stc
sub
inc
mov
push
mov
je
cmp
adc
shll
in
sub
fwait
jmp
inc
rcl
add
jns
dec
sbb
arpl
xor
fidivrs
lret
shl
or
pop
mov
lods
jg
idivb
jge
dec
cli
sbb
dec
popw
nop
imul
adc
scas
fldt
push
std
mov
shll
dec
jp
mov
insb
arpl
sbb
mov
es
or
mov
jmpw
xor
or
inc
mov
mov
and
daa
mov
sti
cmc
jp
sub
stos
mov
cwtl
jge
dec
or
sarb
and
mov
mov
and
mov
jne
mov
ds
or
sub
lahf
scas
out
movsl
mov
dec
stc
shlb
stos
jp
cmp
test
or
sub
cmp
popf
cltd
add
aaa
rcr
xchg
imul
in
fsubr
int3
fsubr
insl
push
sbbl
repz
or
xor
adc
add
shlb
pop
jb
lds
loop
movsl
cli
jb
and
aam
out
jecxz
aad
dec
xchg
lcall
xor
bound
mov
xor
xor
je
ljmp
push
lahf
mov
pop
ret
gs
test
pop
jo
ret
adc
sbbb
inc
or
sbb
sbb
loop
mov
arpl
inc
sarl
dec
dec
and
adc
xor
mov
mov
insb
or
xor
gs
gs
aad
xchg
inc
aas
test
sbbl
arpl
xor
jae
pop
add
lock
hlt
test
push
mov
cs
push
cmpsl
lcall
lret
push
shrl
push
mov
mov
cmpsb
pop
sbb
je
adc
or
pop
popa
repz
test
mov
inc
pop
pop
jne
cmp
push
push
or
adc
jnp
adc
or
shl
popa
hlt
or
imul
testb
adc
ss
dec
cmpsb
test
mov
and
repnz
leave
mov
out
and
fwait
or
pop
adc
sub
repnz
inc
push
sbb
fs
pop
sbb
jnp
inc
out
ret
jo
daa
lock
or
adcl
adc
and
ljmp
and
cmp
cmp
push
shlb
lret
in
mov
push
lods
inc
rcrb
jo
mov
xor
mov
loopne
divb
push
lret
test
add
cmp
push
sub
in
les
dec
add
jmp
or
pop
inc
sbb
mov
lea
pop
icebp
pop
push
jae
fucomip
loop
xchg
jb
mov
add
inc
clc
lcall
jmp
inc
loopne
dec
jae
dec
xor
mov
lret
neg
mov
in
mov
movsl
pop
shl
cmp
cmc
call
cmp
and
or
ret
aam
mov
sbbb
sub
ds
cwtl
nop
ret
shld
mov
stos
add
jnp
cmp
bound
ficompl
jp
pop
scas
sub
or
mov
or
jo
mov
in
rclb
test
xchg
lea
or
mov
aad
pop
cmp
pop
xchg
jl
jb
gs
shr
jle
insl
cmpsb
cmp
jns
mov
jl
push
clc
repnz
or
imulb
mov
test
fnstcw
inc
adc
push
pushf
ss
and
push
fldenv
das
stc
stos
add
ret
popa
mov
push
jnp
out
rol
sbb
and
or
out
xchg
lcall
pop
jbe
dec
sub
adc
aaa
xor
pusha
and
inc
jmp
jns
stc
xor
mov
mov
add
sti
cli
sbb
sub
mov
insb
ret
out
add
movsl
push
cld
fidivs
lret
gs
loop
loopne
in
adc
jo
xor
out
imul
sahf
jl
sbb
daa
ljmp
push
jge
icebp
pop
add
xor
pop
mov
xchg
jne
outsb
imul
jge
lea
test
mov
jl
ds
mov
rcrl
add
out
jp
and
idivl
nop
jmp
aaa
aas
mov
jo
repz
push
mov
xchg
stos
add
lods
popf
mov
cmp
mov
insl
int3
and
adc
jmp
iret
ret
enter
lcall
movsb
movsl
test
mov
stc
xchg
dec
lods
cmp
jg
xlat
mov
mov
xchg
sbb
lds
lods
add
and
jg
rcl
push
xchg
adc
push
cmc
inc
jmp
cltd
pop
fisttpl
leave
cmp
cli
xchg
popf
adc
fucomp
stos
or
test
inc
out
loope
fldcw
inc
xchg
clc
loop
frstor
je
jae
js
lahf
mov
push
test
out
shrl
adc
fwait
xchg
mov
xchg
leave
cwtl
jnp
xor
and
jo
lock
push
enter
inc
lods
jmp
repnz
es
mov
mov
in
test
mov
pushf
stc
loop
jb
into
ss
or
and
lds
test
inc
pop
push
xchg
shlb
mov
enterw
and
and
in
jmp
int3
loopne
mov
and
out
or
in
cli
cmp
rcrl
mov
jg
push
sahf
and
mov
scas
push
sub
and
cmp
mov
mov
in
insb
push
out
insb
sti
fsub
sbb
xlat
inc
mov
push
lods
inc
xchg
sub
push
fs
das
mov
jo
lahf
pop
popf
add
mov
je
addr16
cli
mov
xor
xorb
popf
lret
pop
jp
push
pop
pop
stos
add
aaa
into
mov
push
push
jmp
pop
outsb
repz
cmp
call
in
mov
push
add
add
rcrl
scas
jae
ficompl
push
pop
leave
sti
jbe
std
pusha
jl
sub
pop
popl
mov
mov
xchg
inc
pop
xchg
xchg
cmp
cmp
pop
inc
add
ficompl
pop
jns
xchg
push
lahf
dec
jns
aam
adc
pop
addr16
dec
jae
add
pushf
out
sbb
test
add
add
pop
or
shr
idiv
or
jmp
in
in
mov
imul
es
mov
fcoms
add
test
dec
lds
cli
dec
loop
mov
scas
dec
mov
dec
lret
dec
ss
mov
sbb
inc
xchg
scas
cmp
rcrl
jns
ret
push
push
xchg
lret
mov
fmulp
adc
adc
movsb
mov
xor
push
clc
jmp
clc
sub
xor
fistps
gs
popf
jae,pn
jnp
bswap
leave
rcrl
fmul
xor
mov
fcmovne
inc
inc
ficoml
push
xor
cmc
jg
sub
je
jg
mov
add
call
sub
push
enter
dec
imul
adc
xor
les
jno
addb
xchg
push
mov
ret
outsb
adc
jae
ficoml
cmp
aad
jmp
mov
cmp
add
sbb
mov
fbstp
mov
rcr
imul
fwait
push
paddq
imul
adc
xchg
icebp
nop
jb
mov
lahf
add
in
jle
xchg
push
and
add
out
xchg
in
addr16
test
aam
mov
popa
inc
xor
stos
inc
ret
mov
add
inc
jle
js
mov
sbb
insb
pop
dec
outsl
je
mov
outsl
push
cmp
lods
xor
mov
fists
jne
lcall
cmpl
not
mov
mov
in
mov
add
xchg
rorb
cmpsb
stos
mov
xchg
mov
xor
jg
inc
cli
ds
xor
cs
xchg
cmc
mov
ss
lcall
mov
mov
inc
mov
add
and
mov
jl
inc
in
mov
pop
pushf
or
mov
cmp
inc
xor
jle
or
add
cmp
xchg
daa
out
cli
loope
scas
push
incb
mov
in
or
inc
pusha
mov
idivb
into
xor
dec
inc
mov
jg
sbb
popf
add
mov
aas
add
push
xor
adc
sbb
push
sbb
loopne
xchg
test
cmc
sbb
mov
test
lret
sbb
popa
aaa
les
ss
lods
mov
hlt
scas
popf
das
out
cli
xchg
rcl
cld
mov
xchg
scas
mov
sti
frstor
sbb
int3
adc
sub
fiaddl
sbb
sub
xor
ja
test
das
loop
pop
repnz
mov
imul
mov
stos
clc
pop
rcr
add
pushf
test
ljmp
cmpsb
clc
enter
pop
xor
sub
push
dec
and
pop
stos
mov
add
std
push
aaa
stos
add
inc
clc
jecxz
cwtl
into
addr16
js
jbe
push
cmp
loop
scas
out
mov
jae
sub
fdivs
cwtl
mov
lret
sbb
xchg
mov
in
out
mov
cmp
sarb
xchg
das
mov
mov
enter
hlt
dec
adc
ret
xchg
shl
mov
and
call
mov
loope
push
cmp
orl
popa
movl
xchg
clc
cmpsl
mulb
cltd
lahf
fcompl
in
inc
movsl
push
dec
ljmp
insb
ret
mov
adc
loop
add
ljmp
lret
shl
pop
stc
pop
mov
push
pop
lcall
mov
xor
test
dec
mov
ss
xor
int3
add
fs
and
push
and
enter
xchg
add
fldenv
insb
ds
dec
adc
mov
xchg
mov
dec
std
jbe
jecxz
subb
push
data16
cmp
out
mov
xor
adc
adc
pop
cmpsb
push
adc
xchg
sub
insb
test
roll
sub
inc
pusha
enter
adc
mov
xchg
xor
cmc
ljmp
cli
idivb
lret
out
push
ja
xchg
pop
pop
xchg
int
jl
dec
jmp
popf
test
es
and
xchg
mov
les
ljmp
outsb
or
sbb
jge
imul
cmp
jl
es
pop
in
sbb
mov
rolb
or
repz
sbb
jmp
add
cmpsl
ljmp
adc
sub
movsb
mov
mov
jle
pushf
jbe
inc
inc
fidivrl
in
add
push
or
inc
add
sbb
divl
les
in
loop
xor
leave
xchg
add
mov
lret
add
fbstp
mov
xchg
jp
push
mov
mov
insl
push
movsb
dec
int3
les
aas
test
xchg
mov
jecxz
dec
insb
insl
int3
sbb
lret
outsl
mov
add
xchg
xor
push
adc
adc
sub
inc
xchg
xor
fsubr
fbld
popf
fwait
mov
mov
xor
push
inc
arpl
and
mov
loop
ret
cmc
push
adc
fdivrl
stos
inc
jp
jecxz
cmpsb
sub
mov
pmaddwd
movzwl
fdivrs
lret
pop
sub
mov
mov
push
addr16
pop
or
outsl
iret
pop
jae
adc
adc
cmp
pop
inc
imul
cmp
dec
xchg
push
jmp
xor
inc
fdivl
js
inc
cwtl
mov
das
jne
mov
orb
insl
push
aad
in
bound
les
push
push
scas
js
and
cmp
mov
pop
mov
ror
sub
dec
arpl
mov
add
add
sarl
or
loop
or
or
or
dec
out
or
dec
aad
mov
es
xor
jmp
pop
add
daa
xor
lds
cli
and
sub
out
inc
dec
ja
sub
aad
push
inc
xlat
aaa
sbb
mov
sbb
add
cmp
xor
aas
sbb
xchg
into
dec
and
fldenv
cmp
mov
push
jns
xchg
adc
mov
bound
in
xchg
std
or
xchg
sub
dec
adc
sbb
jbe
lock
or
mov
daa
popa
lea
mov
sub
jl
in
into
into
cmp
jmp
outsb
stc
mov
cwtl
lahf
mov
lea
push
jp
jne
out
out
dec
fcompl
add
inc
jle
xchg
jns
jmp
xlat
add
add
pushf
fs
ficoml
add
jecxz
ror
push
mov
cmp
push
lods
lcall
es
popw
and
fxam
mov
ficoms
aam
loopne
cmp
jnp
mov
pop
fnsave
add
daa
sbb
idivb
rcr
dec
add
mov
repz
xchg
insl
jnp
insl
sbb
add
pop
jns
add
add
inc
outsl
xchg
insb
dec
scas
hlt
movsb
imul
iret
mov
add
sub
sbb
scas
dec
cwtl
vmwrite
movsb
scas
clc
xchg
push
pop
gs
push
or
lret
lea
jmp
xchg
dec
out
cmp
ret
imul
loop
jae
xchg
test
pop
nop
dec
xchg
pop
stos
jno
push
dec
adc
ret
or
mov
cmc
dec
or
cmp
xorl
or
mov
push
xor
js
push
mov
inc
icebp
xor
lock
push
mov
mov
outsl
ret
cltd
cmp
das
shlb
sub
daa
mov
cmp
lret
hlt
bswap
lret
push
fnstcw
dec
jp
mov
ficoml
insb
or
mov
pop
mov
int3
ja
push
call
push
inc
push
lret
xor
int
mov
cwtl
pop
pop
mov
hlt
push
push
fnstenv
out
bound
jge
hlt
inc
pop
xor
mov
sub
and
or
xchg
pop
cmpsl
ja
mov
aaa
movsb
ss
pop
add
xchg
pop
cmpsb
sbb
mov
add
pop
cmpsl
xchg
sbb
addr16
mov
int3
out
shll
lods
push
in
mov
in
lock
ja
out
out
call
stos
ret
loopne
xor
inc
imul
sahf
xchg
and
pop
iret
addr16
and
mov
jmp
sub
jecxz
lret
sbb
add
jno
sbb
pop
push
in
pop
cmpsl
insl
lods
pop
push
pop
mov
insl
mov
addr16
push
jg
jno
jmp
test
xor
jo
cmp
icebp
xor
lahf
adc
push
or
mov
add
les
loop
iret
mov
add
or
jns
test
loope
aas
dec
mov
pop
fisubs
hlt
inc
movl
dec
add
aad
rorl
mov
pop
xchg
xchg
stos
stos
fdivr
fistl
mov
fimull
push
add
mov
sub
sub
xchg
add
adc
add
lret
outsb
repnz
xor
imul
retw
outsb
sbb
mov
jp
es
sbb
lcall
lea
dec
mov
inc
xchg
pop
cmp
daa
out
mov
cs
out
mov
push
or
cmp
movsl
subb
fwait
repnz
icebp
xor
loopne
nop
sti
popf
inc
and
cmpsl
test
jge
lock
pop
pop
pop
sbb
cwtl
out
and
cmp
jg
test
jb
frstor
lcall
add
jnp
add
adc
mov
gs
push
scas
jl
loopne
fwait
mov
sub
int3
pushf
loopne
aaa
nop
lret
sarl
jae
cltd
sub
adc
jbe
cld
push
adc
addr16
incb
push
rcrb
movsb
sub
lock
ret
adc
mov
out
pop
movsb
xor
mov
rcrl
mov
xchg
les
call
mov
out
es
sbb
and
pop
movsl
adc
es
popf
mov
add
mov
adc
pop
cltd
mov
int
pop
jmp
icebp
sbb
hlt
movsl
fwait
and
pop
jnp
xchg
mov
stos
xor
in
and
fs
push
repnz
into
enter
daa
inc
inc
lock
xchg
stos
pop
mov
pop
fstl
into
xchg
in
pop
insl
mov
mov
adc
imul
cmp
pop
sbb
jmp
popf
fwait
arpl
daa
dec
xor
mov
and
ja
xchg
daa
pushf
add
gs
push
cmp
dec
jg
cltd
shll
clc
cmpsl
testl
lret
hlt
cld
xchg
cmp
test
mov
push
mov
test
xchg
rolb
adc
test
pusha
adc
popa
in
in
mov
mov
cld
push
dec
sub
pusha
ja
pop
sub
imulb
ljmp
add
xor
or
mov
or
jb
and
loop
dec
ret
sub
adc
flds
std
jnp
aas
sahf
sbb
pop
fstp
icebp
inc
mov
das
adc
fistpl
push
sbb
jl
jecxz
and
pusha
sbb
dec
cmp
jmp
mov
sub
jb
nop
sbb
mov
andl
jbe
int3
sub
aam
out
cli
mov
jb
aas
jne
imul
jp
and
out
jno
movsl
jecxz
lds
push
jmp
mov
mov
add
sahf
mov
mov
decl
int
cmp
push
or
mov
dec
sti
dec
hlt
std
repnz
push
jecxz
imul
mov
add
movsl
jl
mov
lods
je
ja
imul
bound
fidivl
pop
push
nop
data16
sbb
jle
scas
fldcw
pop
and
mov
fidivs
ljmp
xchg
addr16
das
lcall
add
jl
xchg
nop
data16
mov
pop
adc
inc
jbe
jo
dec
pusha
mov
jns
out
pop
repnz
test
cltd
popa
mov
mov
adc
shlb
xchg
ja
mov
adc
mov
fwait
es
xlat
adc
das
or
add
inc
dec
dec
in
push
adc
push
fmuls
ds
adc
loop
sbb
add
popf
sub
cmp
adc
adc
ficoms
fstpt
cmpsb
leave
cwtl
mov
pop
cs
stc
jns
sbb
push
dec
les
mov
and
popf
lods
push
jmp
sub
out
jl
aad
sahf
mov
or
nop
jge
lods
add
jo
leave
push
loope
pop
push
in
notb
jmp
roll
lods
mov
adc
and
adc
adc
lds
mull
sub
aad
push
pushf
mov
les
sbb
and
mov
xor
pop
mov
jne
fdivl
push
mov
pop
inc
sbb
dec
gs
mov
add
lret
xor
int
adc
lret
imul
fs
add
js
jl
pushf
rcl
lret
xchg
scas
mov
lods
sbb
mov
loopne
aaa
gs
bts
cli
mov
and
mov
xchg
mov
jle
lock
dec
pop
inc
xchg
sub
sub
jae
imul
movsl
jbe
jbe
adc
adc
pop
xchg
jmp
in
jg
incl
cltd
sbb
unpckhps
out
pushf
cmpsb
jle
mov
cmpsl
movsb
jb
sub
jns
push
push
or
mulb
xchg
aaa
lock
ret
mov
loope
sub
sbb
inc
loopne
enter
stos
ja
inc
rclb
push
xchg
andb
fistps
adc
jns
ds
push
push
jb
mov
cmpsl
mov
and
adc
sub
out
push
std
jns
inc
addr16
pop
sub
and
sbb
mov
adc
mov
jae
dec
mov
cmp
push
inc
popf
iret
imul
pop
fmuls
mov
push
mov
clc
fisttps
mov
pop
outsb
stc
mov
and
dec
dec
xchg
cmp
inc
mov
sbb
js
add
or
and
add
out
mov
cs
pop
mov
icebp
imul
adc
je
divl
sub
ljmp
sub
add
fmul
dec
jmp
dec
lods
mov
out
jns
sub
mov
lret
push
adc
mov
cmp
adc
push
lock
inc
shl
pop
scas
dec
pop
loopne
mov
mov
mov
stc
in
dec
xorl
in
ret
in
fdivrl
popa
or
scas
push
scas
imul
mov
push
lret
andl
out
enter
int3
cmp
in
test
movsb
outsl
or
jmp
jle
loope
sbb
mov
divl
inc
out
adc
sbb
pop
xchg
cs
and
adc
mov
mov
sub
mov
ja
pop
jg
sub
aas
test
out
jo
imul
es
jns
sbb
mov
daa
int3
mov
inc
and
cmpsl
push
ficompl
xchg
pop
insl
jae
lcall
ret
pop
enter
sbb
add
fwait
adc
int
xchg
fists
xor
shr
dec
lea
inc
pop
ficoms
inc
ret
sub
es
dec
ss
cmp
or
sbb
lods
test
xchg
shl
and
push
movsb
mov
push
mov
mov
orl
aas
repz
sti
push
xor
addr16
scas
out
fistl
mov
and
inc
repnz
xchg
xorb
xor
insb
cs
dec
and
out
cltd
sahf
test
in
adc
push
or
and
fcmovnb
mov
push
lods
xchg
cli
cltd
push
call
sti
sbb
addr16
add
add
or
rol
xlat
int
cmp
cmc
cmp
repz
push
or
loopne
jl
std
sahf
jg
mov
and
inc
push
je
add
mov
sahf
push
les
fcomps
jg
insb
xor
mov
cmc
adc
jmp
loop
jg
iret
jge
xor
jmp
push
fwait
cmp
imul
pop
sub
movsb
xor
fmuls
leave
jb
jb
aam
sti
int
jno
jg
icebp
pop
push
sbb
filds
in
ss
xor
mov
jno
lret
lret
jl
dec
jecxz
sbb
in
inc
and
adc
in
or
xchg
push
sbb
pop
xorl
movb
add
jl
aad
xchg
jns
cmc
adc
and
roll
push
pop
xchg
ret
cvtpi2ps
push
jnp
mov
and
out
pop
mov
and
cmp
sub
add
outsb
in
mov
repz
and
lahf
ret
repnz
sbb
mov
out
and
push
sub
jb
je
jl
fadds
lods
inc
stos
pop
mov
jle
sbb
stc
or
or
lret
mov
push
sti
add
xor
and
into
push
enter
or
adc
push
mov
fnsave
stos
emms
and
bsr
pushf
popa
les
and
push
stos
ds
fs
mov
and
add
das
cmp
mov
mov
adc
lock
pop
xchg
stos
les
adc
inc
lcall
sahf
inc
dec
pusha
push
mov
icebp
mov
mov
popa
aas
adc
jmp
mov
sbb
xchg
push
mov
lret
mov
imul
int
test
adc
scas
mov
jne
inc
in
loopne
pop
mov
pop
in
mov
clc
xchg
xor
dec
bound
pop
test
xlat
fs
stos
and
inc
rcrb
out
testb
xchg
xchg
stc
addr16
fstpt
push
outsl
mov
xchg
add
pop
xor
mov
ret
sbb
loopne
movsl
mov
inc
loop
cmp
lahf
ficoms
mov
inc
or
add
push
add
cli
addr16
xor
sahf
pop
cmp
xorl
scas
sub
xchg
or
mov
out
loop
add
push
jge
aam
cmp
add
mov
jbe
lcall
sub
dec
aam
push
push
or
pop
shlb
shl
lods
or
pop
aad
pop
push
popl
test
or
in
scas
xorl
xchg
jg
fs
sbb
sti
push
or
call
iret
jmp
push
cmp
jb
dec
or
in
aas
icebp
es
xor
das
int3
lods
mov
loopne
mov
movsl
shll
cmc
jmp
sbb
xlat
push
mov
and
inc
sbb
dec
cmpb
xchg
fbld
bswap
int
push
out
test
nop
scas
and
scas
in
in
xchg
stos
les
int3
or
jns
jg
mov
dec
sub
mov
jo
sub
sti
add
cltd
and
rep
push
jns
out
inc
in
ja
mov
popa
push
fs
lahf
push
out
xor
in
test
mov
out
pop
dec
dec
gs
les
jge
es
faddp
dec
leave
dec
iret
lcall
fildl
or
push
test
push
pop
adc
add
lods
das
aam
aas
fdivr
sbb
pop
mov
dec
add
inc
aaa
cltd
push
mov
pop
sub
in
lods
shlb
add
add
cli
sbb
sub
sar
dec
xorl
scas
call
xchg
xor
mov
pop
push
rcrl
mov
and
xor
cs
pop
push
arpl
fldenv
ret
pop
mov
and
inc
test
or
pop
dec
aaa
cmpsb
push
lock
mov
mov
jnp
inc
cld
mov
test
lods
mov
es
pop
addl
bound
jnp
insl
imul
data16
add
jns
cmpsb
lahf
insb
daa
cmpsb
sub
xchg
or
in
imul
mov
ret
iret
dec
mov
or
ret
lret
adc
orb
idivb
icebp
aad
mov
out
hlt
mov
or
jns
cmp
into
pop
fmulp
clc
or
adc
dec
outsl
or
or
popa
sub
std
push
imul
jp
push
mov
outsl
sbb
jo
aas
mov
cmp
mov
xchg
cld
cmpsb
jl
mov
aas
xchg
xchg
push
mov
nop
mov
mov
into
jb
int3
incb
aaa
jge
mov
mov
adc
int3
xor
das
add
add
arpl
add
cwtl
rcrl
mov
pop
mov
add
sbb
mov
fstpt
dec
inc
cmp
ja
sub
adc
inc
pop
cwtl
mov
pop
push
dec
add
andb
add
into
mov
sbb
movsl
mov
in
jmp
stos
in
jecxz
mov
cld
adc
mov
xor
xchg
dec
jnp
add
xor
gs
dec
xchg
ret
mov
sbb
push
in
stos
mov
aaa
lds
scas
push
adc
mov
lahf
lret
cmp
enter
pop
mov
cmpsb
inc
mov
lahf
sbb
sub
xchg
push
push
das
test
adc
and
jg
insb
jecxz
es
push
sub
outsb
xchg
fildl
cmp
mov
add
mov
jb
ficomps
mov
pop
loop
push
mov
inc
push
cmpsl
mov
add
stos
mov
les
icebp
stos
jp
int3
cmp
mov
push
dec
xlat
sbb
pop
mov
mov
mov
scas
jnp
mov
shll
cmp
mov
adc
jmp
mov
adc
gs
in
lea
negb
pop
fildl
pop
mov
cmp
pusha
aam
mov
aas
dec
sbb
cld
hlt
scas
mov
mov
mov
inc
ljmp
adc
cmp
jge
xchg
xchg
pop
enter
jne
xchg
imul
sbbl
push
and
test
lcall
dec
add
jp
movsl
loopne
push
das
or
loopne
mov
add
ja
pop
andl
xor
mov
pushf
pop
arpl
add
pop
orl
adc
shrl
push
sti
mov
push
push
pop
test
lock
and
and
insb
jno
fists
cmp
ja
pop
mov
lds
push
or
xchg
stos
and
add
fdivrl
fistpl
push
inc
add
push
sarl
sti
pop
addl
rcll
flds
in
pop
and
push
test
shrd
dec
mov
aad
test
gs
pop
repz
adcb
add
loop
mov
xorl
pushf
je
push
cmpsb
adc
in
mov
outsb
xchg
xchg
hlt
jmp
fisubs
jae
sbb
lret
mov
shr
test
pop
mov
testb
jge
insl
clc
out
add
in
mov
pop
cld
lcall
adc
cmp
dec
in
ds
les
xchg
jge
or
dec
inc
jae
cmp
test
jg,pt
jno
xchg
sbb
int3
and
mov
int
into
jl
mov
rol
stc
test
fisttpl
mov
arpl
pop
dec
ljmp
leave
dec
push
gs
out
jbe
mov
jl
jne
or
pop
xor
jns
adc
cwtl
mov
ljmp
cld
imul
or
push
gs
mov
stos
js
adc
test
test
fisubrs
test
test
dec
fildll
mov
stos
pop
lret
pop
sub
cmpl
std
test
outsl
movsl
xchg
sbb
shl
inc
jne
scas
add
flds
iret
shlb
pop
pop
iret
xchg
mov
hlt
in
lahf
mov
mov
xchg
addr16
pop
sbb
dec
mov
cmc
dec
imul
and
cmpsb
popf
jg
das
out
cmp
fwait
jp
repnz
inc
push
dec
adcl
adc
imul
jno
les
adc
and
iret
out
nop
aaa
test
inc
mov
lahf
push
ss
mov
push
mov
mov
adc
xchg
jl
sbb
add
mov
repnz
sub
add
in
fadd
xor
jl
xchg
sbb
out
sub
out
mov
cmp
outsl
add
xor
inc
mov
dec
aas
leave
imul
sbbl
lret
jl
jmp
std
mov
aaa
mov
sub
jns
enter
jmp
js
fldl
pop
and
inc
clc
adc
test
addr16
shll
push
arpl
cmp
pop
icebp
push
push
sub
lods
pop
pushf
into
inc
fidivs
push
mov
mov
mov
dec
jnp
test
das
adc
xchg
xchg
out
or
rcrb
mov
lds
ret
jbe
pop
pushw
xor
daa
gs
xor
push
scas
loop
jb
ss
leave
adc
lods
aaa
lahf
xlat
sbb
push
fdiv
stos
xor
add
pop
xchg
popf
out
push
mov
nop
out
aaa
call
jp
cmp
cmp
mov
inc
nop
mov
pop
or
scas
popa
push
add
insl
popl
add
cwtl
xor
or
or
dec
out
aas
loope
push
xchg
testb
add
or
xchg
inc
iret
adc
cs
pop
outsl
lahf
ret
roll
repz
adc
sub
test
int
aad
sub
inc
mov
pusha
or
sub
into
pop
mov
lods
repnz
das
adcb
in
jle
in
aas
adc
cwtl
shll
and
push
jmp
sub
mov
int3
inc
cltd
gs
outsl
ljmp
leave
and
out
in
popf
or
xor
push
sbb
push
daa
sahf
sbb
pop
imulb
fucomi
xchg
imul
aaa
scas
and
ds
inc
out
xchg
cmp
cmc
mov
push
stos
dec
xchg
cwtl
add
push
and
pop
and
in
mov
mov
cltd
mov
lods
inc
in
push
lods
sbb
addl
mov
ss
sbb
push
in
std
rclb
push
lods
dec
cmp
loop
mov
pop
loopne
jmp
pusha
das
pusha
shll
jp
daa
dec
mov
ja
xchg
jg
push
inc
inc
push
jecxz
mov
addb
mov
mov
outsl
iret
sbb
jne
lcall
xor
ret
into
addb
pop
push
sub
mov
sahf
cwtl
sub
int3
xchg
cmp
xorb
xchg
fst
xchg
pop
mov
in
cmp
and
lcall
adc
xchg
stc
into
into
test
subb
cmpb
fcmovnb
sahf
push
inc
push
or
fcomip
and
repz
mov
cmovns
cli
or
nop
fwait
pop
in
cmp
add
jmp
adc
mov
xchg
inc
jecxz
fs
mov
pusha
nop
add
mov
add
inc
mov
xchg
clc
push
data16
mov
sbb
pop
jmp
sti
push
adc
push
and
stos
ret
lret
sbb
or
loop
cmpsl
gs
cmp
lds
sbb
xor
pop
and
pop
lock
jg
sub
jne
pushf
mov
push
push
push
sub
mov
and
pop
add
test
aaa
mov
lret
aaa
pop
adc
les
imul
pop
mov
iret
jp
and
jnp
inc
cmc
and
and
loope
cmp
mov
xor
mov
mov
out
dec
adc
call
mov
lods
andl
mov
mov
mov
hlt
jmp
sbb
pop
push
repnz
ljmpw
popa
pushf
jb
aas
test
push
xor
push
pushf
jg
or
xchg
inc
jmp
fwait
leave
mov
fidivs
fmul
adc
xchg
sar
repnz
sti
and
xchg
cmp
in
or
lahf
lods
hlt
mov
imul
insl
ds
sbb
scas
pushf
xlat
sub
enter
add
mov
imul
pop
dec
inc
pop
inc
lret
sbb
lahf
and
xchg
ss
pop
aas
xor
roll
pop
xor
xchg
mov
mov
adc
mov
sbb
dec
scas
mov
sbb
add
aad
out
push
add
in
push
mov
fsubl
sti
testb
cld
mov
jecxz
in
scas
xchg
hlt
pushf
jnp
sbb
jnp
popa
sarl
mov
loopne
out
pop
xchg
rcll
cmpsl
and
cwtl
insl
rcll
mov
ret
sti
and
mov
jmp
scas
and
pop
arpl
decl
dec
adc
cmp
cmpsb
or
outsb
rolb
decb
push
loopne
dec
jge
stc
shrb
and
mov
les
ss
jp
push
dec
fstl
enter
testb
call
mov
xchg
xlat
mov
mov
push
sarb
les
mov
inc
sub
ret
addr16
cmpsb
bound
loop
xchg
push
cmp
or
jecxz
pushf
fldl
aad
jge
cltd
loopne
clc
jbe
bswap
xchg
mov
add
xor
idivl
fwait
imul
xchg
add
push
dec
dec
dec
jno
add
jns
cmc
ds
dec
shlb
mov
shl
idivb
xchg
lea
sub
jno
push
xor
xchg
xor
pop
shl
adc
pop
inc
cli
fldcw
add
and
mov
xchg
cmpsb
ds
mov
jmp
jne
jo,pt
out
xchg
cmpsl
ja
jl
sbb
loopne
jmp
xchg
cmp
sbb
add
and
js
or
jo
xchg
push
daa
adc
jb
lcall
pop
insb
xor
mov
mov
insl
imul
pop
cmp
xor
adc
sub
ja
sbb
enter
pop
in
xor
dec
push
aad
or
clc
out
adc
dec
fldcw
or
jmp
pop
add
sub
rcl
mov
sahf
push
imul
fsub
aad
rcrb
mov
sbb
jno
jl
in
inc
rclb
out
push
push
mov
adc
pushf
pop
and
push
out
pop
and
jne
notb
xchg
adc
insb
add
stc
popf
cmpsl
test
adc
movsb
pushl
dec
xchg
xor
pop
test
jmp
cmp
idiv
xor
arpl
pop
lret
dec
or
ljmp
sub
icebp
daa
adc
sahf
mov
jbe
mov
xchg
aam
jae
adc
leave
pop
clc
ror
xchg
lret
xor
daa
cmp
es
inc
push
out
adc
pushf
outsl
insb
popa
ljmp
daa
mov
cmpsb
fcompl
lret
xor
in
or
xor
lds
mov
rolb
and
fisttps
fdivl
scas
add
or
sbb
incb
and
xor
fdiv
jns
mov
roll
inc
lret
gs
mov
stos
cmp
jne
dec
adc
lods
shlb
and
and
aas
cmc
popf
sub
add
aam
daa
ret
cmp
xchg
dec
lea
fimuls
lods
cld
andb
fwait
jp
add
xor
in
movsl
or
xor
aad
call
test
jl
fwait
ret
or
std
inc
addr16
add
sub
pusha
ja
pop
lret
das
dec
pop
insb
call
push
sub
mov
in
xor
push
dec
add
mov
mov
pop
fbld
scas
cmp
pop
nop
rorb
out
cli
nop
adc
out
sbb
dec
xchg
das
or
jbe
mov
mov
out
sub
xor
lods
adc
mov
push
fnstsw
pusha
aad
inc
test
jmp
push
ret
ss
xchg
push
fsubs
jae
jns
jl
arpl
push
push
pop
scas
mov
and
fdivrs
cmp
ss
xchg
pop
jmp
rorl
mov
inc
test
cwtl
sahf
pop
or
adc
or
push
push
and
and
pop
inc
mov
jae
xchg
mov
mov
incl
jecxz
dec
jnp
xor
repnz
xor
fcoml
or
inc
inc
dec
das
popa
test
dec
out
or
push
das
jp
aaa
mov
nop
mov
fisubs
xlat
sahf
and
loop
pushf
mov
addr16
jns
es
cmp
insl
sahf
cmp
test
popa
pusha
and
dec
insb
and
push
jl
in
fisttps
stos
daa
fstpt
pop
mov
data16
dec
stos
sahf
icebp
sub
push
lcall
mov
sbb
js
test
pusha
mov
lahf
mov
dec
pop
aam
mov
mov
lods
mov
push
and
adc
xchg
mov
stos
movsb
fbld
btc
mov
pop
stc
addr16
nop
filds
je
rolb
loop
push
test
loopne
jne
adc
xchg
mov
xchg
mov
adc
xor
xchg
inc
loopne
bound
inc
jnp
jbe
inc
shlb
or
fnstenv
ljmp
test
roll
mov
mov
push
orl
mov
and
sbbb
push
cld
fistpll
xor
ficomps
or
and
xor
lods
mov
shrw
inc
scas
sbb
popa
cmp
mov
push
in
dec
test
cmpsl
sub
xchg
jnp
cmpsl
gs
cwtl
rorb
ljmp
test
cmc
and
stos
mov
push
mov
pop
inc
stos
mov
out
sub
ret
dec
xchg
or
js
clc
lods
ror
mov
bound
mov
in
ret
hlt
loope
ds
dec
mov
mov
jmp
fdivr
push
sub
rolb
or
shrb
jl
jmp
jmp
lcall
shrb
notb
insl
rolb
fcomps
mov
mov
dec
push
sbb
pop
loope
js
jl
scas
adc
adcb
insl
leave
sub
sub
fwait
push
pusha
sahf
push
movsl
enter
xor
out
mov
or
or
popa
cli
ret
mov
mov
lea
fnstsw
or
add
dec
add
push
add
jle
mov
fdivrl
dec
push
iret
and
inc
andb
push
scas
loopne
movsl
fcom
pop
cs
and
add
jb
adc
aas
add
jmp
dec
adc
adc
subl
outsl
adc
cmp
sub
fnstsw
sbb
xchg
int
or
enter
notb
in
fbld
loopne
dec
dec
add
ds
das
push
sub
inc
pop
pop
xor
jno
jl
sbb
dec
push
hlt
mov
es
dec
rcrb
mov
stc
push
stos
test
xchg
or
mov
aam
mov
sbb
test
mul
test
lods
add
push
or
dec
or
xor
popa
sarl
outsb
mov
rcll
inc
jecxz
arpl
and
xchg
in
xor
sbb
stos
std
pop
imul
adc
cwtl
push
or
cmp
fbstp
inc
iret
xchg
out
test
mov
nop
flds
pop
pushf
loope
hlt
and
icebp
addr16
push
inc
cltd
dec
out
cs
mov
jl
in
xor
shll
test
mov
mov
or
out
xor
aam
jb
dec
push
sbb
sbb
sbb
jbe
jns
rcll
mov
gs
ljmp
lods
shll
cmc
lcall
cmp
scas
inc
sub
xor
mov
pop
inc
outsb
in
push
hlt
movsl
push
or
pop
lock
sbb
fnsave
pop
push
bound
mov
cmc
mov
incl
jbe
cmp
shrb
sbb
movsbl
mov
mov
sti
inc
data16
in
jg
aas
imul
jge
pop
inc
mov
mov
in
mov
jl
xchg
in
ss
pop
insb
jmp
js
popf
cmp
jo
loopne
subb
test
imul
scas
pop
or
fstps
orb
jns
adc
lcall
jmp
pop
fimull
rorb
fwait
ja
cmp
push
xor
gs
cmp
xlat
and
sub
paddsw
loope
xor
push
pop
and
test
cmc
xchg
xchg
out
mov
mov
xchg
shlb
jae
pop
mov
fisttpll
imul
daa
inc
sub
add
popa
in
call
cwtl
mov
in
jns
jo
mov
push
cmovnp
sarb
jmp
or
mov
mov
fst
xor
cmp
addr16
sbb
cmpsl
nop
xchg
shrl
data16
cmp
add
jb
pop
into
cli
pop
outsl
stos
in
sti
cmpsl
xor
arpl
sbb
out
adc
cmp
dec
and
xchg
and
and
xor
scas
sbb
push
arpl
mov
popf
cwtl
loope
fs
sbb
jns
lcall
and
add
cmp
jp
jo
pop
xchg
push
pushf
pop
mov
or
lock
dec
sahf
sti
xorl
orb
cmp
xor
les
inc
mov
sub
add
push
pop
mov
shrl
pop
bound
sub
cmpsb
sbb
or
arpl
dec
or
scas
xchg
push
testl
shll
jl
into
inc
pop
lods
cmp
bound
repnz
test
pop
jmp
popf
mov
int
mov
push
xchg
adc
out
iret
add
cmp
rclb
lods
int
or
pop
mov
adc
fmull
loop
mov
das
stos
dec
out
je
insl
shrl
push
adc
jae
daa
push
xchg
jbe
cmp
sarb
xchg
dec
imul
push
dec
in
enter
or
sbbl
test
clc
add
lcall
ljmp
push
xlat
ja
mov
outsb
jecxz
add
icebp
and
xchg
mov
roll
mov
lahf
push
dec
insl
jg
lds
mov
or
sahf
mov
sub
push
dec
mov
fsubr
in
enter
cmovo
test
pop
js
jmp
testl
sbb
cltd
mov
push
and
flds
rcl
sbb
or
add
dec
inc
mov
fucom
lds
mov
lea
div
or
cltd
dec
xor
js
insb
daa
pop
adc
or
scas
dec
popa
je
push
xor
aam
pop
and
data16
sub
sub
sbb
ds
popa
mov
mov
mov
pop
insb
shlb
das
scas
jno
sbb
or
lods
mov
mov
push
jge
sti
cmp
outsl
push
xchg
ror
adcl
xor
add
push
dec
hlt
outsl
pushf
add
addr16
out
dec
mov
add
jp
addr16
sbb
xor
mov
push
or
push
lods
inc
pop
aad
jo
mov
add
xor
gs
push
imul
aas
imul
mov
xor
add
mov
mov
mul
or
or
push
adc
sub
xchg
dec
or
aaa
arpl
out
mov
fsubs
xor
push
xchg
inc
nop
movsb
mov
out
int3
lret
inc
repz
jb
loopne
cwtl
fistpl
mov
out
stos
test
sbbb
mov
sub
sub
es
icebp
push
jne
cmpl
inc
hlt
add
mov
movd
xchg
inc
sub
insb
movsb
test
sub
mov
mov
das
out
dec
in
xchg
jne
mov
jnp
jge
or
dec
xchg
arpl
inc
inc
add
mov
aam
clc
mov
mov
pop
stos
push
sub
xor
iret
cmpsb
mov
push
xchg
into
std
push
sub
jne
sbbb
xor
lcall
rol
in
push
pusha
or
subl
in
int3
bound
cwtl
sarl
fistpll
or
lock
pop
daa
mov
les
mov
inc
mov
mov
xchg
jle
inc
fwait
mov
mov
and
call
inc
and
inc
imul
out
inc
out
mov
jmp
mov
insb
jg
push
scas
mov
inc
jl
mov
cmc
jnp
push
sbb
mov
clc
cli
jmp
add
ficoms
aam
outsl
xor
add
inc
and
sbb
xlat
xor
rorl
jb
loopne
push
pop
jbe
inc
pusha
and
mov
sbb
mov
jbe
or
dec
xor
jb
lret
rclb
into
pusha
inc
and
psubusb
pop
leave
mov
sti
add
adc
jnp
fmul
jecxz
adc
xchg
shll
pop
cmp
and
sti
fsub
xor
dec
jnp
in
dec
cmp
cli
sbb
dec
movsb
inc
outsb
pop
mov
or
std
mov
mov
mov
addl
cmp
xchg
pusha
hlt
or
in
imulb
dec
nop
mov
push
out
mov
nop
in
jae
cmpsb
or
je
bound
push
sub
cmp
sub
fdivr
loopne
lcall
jp
mov
out
add
arpl
shrl
mov
or
xchg
sbb
test
addr16
push
popa
adc
dec
mov
dec
mov
test
xor
ljmp
jmp
mov
pushf
sub
mov
pop
push
sbb
mov
mov
push
and
rorb
xlat
push
or
stos
dec
dec
mov
and
cmp
nop
jle
repnz
jnp
jle
adc
test
jl
push
xchg
arpl
sub
jns
sti
adc
cmp
aaa
ret
jno
inc
cmc
pop
test
sub
aas
cmp
xchg
imul
sub
or
push
in
popa
cs
je
jecxz
testb
call
scas
push
pusha
push
mov
pop
push
sbb
into
pop
pop
jg
or
movsb
out
rcll
sbb
mov
sar
push
xchg
sbb
nopl
jl
pushf
in
mov
inc
popa
jbe
adc
sbb
notb
iret
je
push
lret
jno
xlat
imul
mov
add
or
adc
out
add
sub
call
cmpl
jl
sti
sahf
jns
or
ss
mov
mov
dec
sub
sbb
das
notb
cmp
fists
dec
rclb
pushf
in
bound
cmp
push
movzwl
mov
fmuls
jg
out
jnp
push
sub
push
ds
sbb
scas
push
mov
adc
stos
cmp
movsb
jecxz
mov
repz
xor
dec
mov
jle
mov
push
mov
adc
je
cwtl
popa
xacquire
push
loope
xlat
mov
xor
cli
sahf
inc
roll
mov
lret
test
pop
mov
cmp
dec
mov
jle
cmp
inc
mov
outsb
xor
in
add
fwait
loope
popf
adc
inc
xor
xchg
push
xchg
pop
jmp
test
or
dec
repz
cmpsb
push
rorl
xor
inc
mov
fbstp
mov
xchg
aam
or
sub
sub
loop
xor
ffree
push
ficompl
mov
jle
sti
aas
aaa
loop
sahf
clc
adc
sub
cmp
xor
jno
addl
loop
mov
in
push
leave
jg
cmp
mov
cmp
movsb
inc
inc
das
and
jb
movsl
ljmp
and
jb
imul
adc
cwtl
xchg
aas
hlt
pop
and
add
mov
test
sbb
cs
add
testb
push
ffreep
jle
adc
and
daa
adc
pop
push
shlb
roll
aaa
push
in
mov
push
mov
xchg
loop
inc
adc
cli
or
mov
cmp
in
or
and
pop
in
inc
lods
ret
iret
mov
inc
push
stos
data16
aas
sbb
lock
imul
int3
xchg
add
pop
fsubl
xchg
popa
je
lcall
push
aad
push
div
mov
and
or
xchg
mov
popf
push
es
add
cmc
xchg
push
jle
mov
int3
sbb
pop
ja
inc
mov
out
add
cwtl
in
jbe
arpl
pop
scas
gs
mov
bound
inc
popa
mov
add
cmp
jns
insl
and
adc
ds
hlt
icebp
and
popl
test
idivl
xor
pushf
bound
jb
or
pushf
out
sub
roll
subb
call
je
stc
or
sarl
mov
mov
adc
mov
outsb
inc
or
lret
cmc
jmp
stos
push
daa
test
adc
insb
lods
mov
test
sbb
mov
lock
hlt
jl
loope
jb
int3
xlat
arpl
mov
pop
sti
xlat
ss
ja
fcomip
out
cmp
lock
callw
or
sub
loope
rolb
sub
sbb
jge
and
aad
mov
and
add
dec
xchg
test
mov
mov
ret
fmul
push
out
pop
inc
icebp
pop
ljmp
inc
adc
jns
fstpl
leave
push
mov
ss
adc
add
inc
xor
sub
jp
push
cltd
xor
adc
adc
xor
loope
jns
push
push
fsubs
pop
sub
sub
test
add
sub
ror
mov
fbstp
push
das
cmp
test
adc
sub
sbb
cwtl
loopne
addr16
pop
mov
mov
stos
loopne
fwait
xchg
sub
pop
pushf
hlt
adc
inc
rcr
dec
into
xchg
mov
jo
xlat
sbbl
lods
mov
xchg
js
mov
mov
mov
pop
and
inc
inc
ret
shrb
jo
aad
lahf
aas
push
push
es
lret
push
stos
repz
cltd
xchg
push
lock
loop,pn
xchg
mov
cmpsb
mov
sbb
je
je
inc
lock
fbstp
mov
cld
pop
or
jg
int
push
and
push
ds
test
jns
pop
lds
xor
cmp
cli
leave
sub
ljmp
movsl
insb
lahf
mov
lock
rcrl
outsl
pop
xlat
pop
inc
iret
or
arpl
mov
pop
shlb
inc
pusha
hlt
popa
xor
mov
pop
lods
addr16
inc
rclb
add
sbb
mov
xchg
sarl
inc
fldcw
bound
test
sbb
push
inc
std
mov
movsb
dec
ljmp
loopw
jmp
nop
xor
negl
fdivrl
hlt
mov
push
pop
dec
mov
nop
cmp
push
pop
mov
imul
mov
push
mov
je
stc
push
pop
push
cs
xor
test
jne
cs
imul
push
iret
dec
insl
add
jmp
cmp
dec
mov
bound
pushf
xor
into
push
xor
jns,pn
adc
inc
adc
dec
cmpl
or
mov
jle
jns
mov
push
sub
das
leave
mov
in
sarb
aaa
out
ficoms
sbb
repnz
dec
sub
xor
push
mov
cmpsb
sub
xor
push
xlat
add
dec
or
pop
scas
mov
and
jge
fsubs
lock
paddd
nop
sub
subb
gs
mov
dec
or
jecxz
imul
xor
or
mov
das
cs
and
push
and
fsubl
pop
sub
mov
pop
shrb
les
inc
mov
mov
rcrl
dec
push
mov
xchg
fwait
or
fwait
mov
add
xor
fnstsw
daa
xor
aad
jmp
in
cmc
xor
jl
sti
jg
dec
ljmp
adc
lods
scas
push
mov
fmulp
andb
int3
jle
iret
lea
stc
push
xchg
push
sub
mov
aad
imul
ss
fdiv
decb
adc
dec
push
and
data16
repz
xor
lea
out
mov
push
rcrl
leave
lret
cmc
jbe
cmpl
mov
push
pusha
fstpl
pop
mov
outsb
xlat
mov
jge
inc
loop
shrl
in
stos
mov
or
loopne
adc
cmc
jb
sbb
imul
ja
addb
dec
lcall
neg
js
mov
push
jge
inc
push
jbe
and
aas
mov
fadd
jns
inc
xchg
jecxz
push
cmp
adc
lahf
dec
jo
mov
push
jmp
stos
and
das
pop
int3
nop
outsb
mov
push
es
mov
dec
dec
jnp
sbb
xchg
stc
push
inc
sbb
sahf
pop
dec
jp
push
cmpsl
test
cmp
sub
sbb
cld
or
out
or
sub
outsb
adc
xor
insl
repz
push
push
dec
or
or
mov
and
push
fs
and
add
dec
ja
mov
stc
jl
push
jp
adc
dec
je
add
imul
pop
and
dec
rol
xchg
in
pop
call
loope
insb
push
mov
int
test
loop
daa
adc
push
sbb
adc
sbb
jl
add
jns
xchg
xorb
mov
vcvtsi2ssl
sub
hlt
subl
pop
mov
test
jbe
adc
push
lds
std
jg
mov
rclb
inc
negl
jecxz
fldcw
lret
push
mov
push
push
insl
iret
and
fisttps
arpl
pop
mov
popa
dec
inc
movsl
data16
jle
rcl
ljmp
jb
ja
cmp
aaa
shrb
xchg
lods
js
xor
lods
pusha
and
insl
xchg
gs
movsl
adc
fidivs
sbb
sbb
inc
adc
jecxz
cwtl
loopne
or
mov
mov
stos
lds
mov
cmp
adcb
and
sub
mov
mov
cmpsb
adc
lds
leave
cli
xchg
addr16
ljmp
stos
popa
mov
loope
sub
aaa
push
loopne
pop
outsl
fmuls
cmp
pop
dec
clc
out
or
rclb
push
adcl
js
int3
add
lea
in
mov
and
popf
pop
jge
mov
pop
push
adc
mov
cmpsb
push
out
rolb
aaa
in
icebp
pop
cmp
push
in
aaa
sbb
pop
repnz
mov
cmp
lods
scas
dec
and
xor
int
jl
inc
outsb
int3
sub
dec
stc
jns
cmp
test
or
or
callw
dec
mov
fimuls
test
out
xchg
sub
or
push
xlat
insl
jge
add
mov
cmp
add
xchg
push
pop
mov
adc
jae
add
mov
movsb
popf
mov
sbb
sbb
adc
push
dec
sbb
dec
popf
mov
push
jmp
stc
je
andl
aam
movsl
or
mov
mov
fwait
push
jecxz
and
xor
ja
out
adc
outsb
sub
sti
pop
movsl
mov
dec
mov
movsb
in
inc
shlb
mov
bound
sub
pushf
mov
push
sbb
aaa
inc
negb
hlt
shrb
aam
jl
ds
fnstenv
shlb
iret
enter
xor
mov
mov
mov
inc
loop
cmp
sub
stc
in
repnz
add
jns
stos
mov
fisubl
sarb
in
jl
xchg
pusha
xchg
mov
loope
insb
jle
ret
pop
pop
dec
fcoml
hlt
xor
mov
adc
adc
mov
mov
fimuls
ljmp
adc
je
cmp
adc
add
inc
or
repz
mov
sub
jecxz
push
out
aaa
cmp
xor
dec
xchg
pop
testl
js
ds
push
cmp
push
shrb
cs
mov
pop
cmc
cmp
jno
adc
roll
xorb
adc
add
push
loopne
xchg
or
cltd
in
rorb
mov
or
loopne
insl
dec
nop
orb
xor
adc
iret
cmpsb
mov
enter
rorl
lret
mov
mov
shrb
into
lods
fwait
out
std
pop
push
mov
sbb
iret
jns
jb
mov
enter
insb
stos
mov
sbb
jmp
rol
pop
cwtl
push
sbb
cwtl
lock
adc
mov
insl
shl
xor
pop
out
data16
fbstp
push
inc
fistpll
mov
sbb
aam
and
dec
subl
test
cmpb
cmp
gs
scas
mov
mov
mov
mov
pop
sub
ret
loope
ljmp
loopne
push
icebp
arpl
in
mov
insb
test
jne
std
mov
xchg
pop
pop
fildll
dec
sbb
sub
in
cmpsl
out
mov
inc
loopne
daa
fcomp
in
subl
push
cmp
jle
fnsave
mov
fidivs
mov
icebp
sbb
or
mov
mov
ds
jecxz
mov
xchg
mov
lods
add
jecxz
out
sub
fbstp
push
cmp
test
ja
int
sub
ss
xchg
push
and
pop
or
dec
mov
push
lods
add
pop
jg
movsl
push
sbb
lret
rorb
scas
inc
sti
push
out
add
push
aaa
lods
xchg
popa
fucom
cmp
xchg
adc
sub
cltd
jge
jmp
adc
dec
sbb
mov
pusha
xlat
mov
add
out
int3
in
mov
nop
in
push
xchg
clc
sbbb
sahf
add
adc
add
inc
dec
call
mov
add
sub
mov
int3
sub
sbbl
xchg
sub
jmp
js
pop
mov
test
cmp
test
pushf
pop
inc
sbb
cmp
xor
xor
xchg
mov
xchg
pop
cli
mov
add
adc
pop
inc
lock
pop
lock
scas
push
push
cmpsb
xchg
ret
lret
repz
xchg
ret
stos
clc
rcrb
inc
jne
xor
xor
adc
push
outsb
outsl
mov
dec
mov
sahf
stos
mov
inc
or
das
xchg
adc
icebp
scas
pushf
xchg
lahf
inc
push
lret
jecxz
and
push
cwtl
lea
mov
add
sbb
adc
imul
out
jnp
push
xor
mov
add
ret
xor
cltd
clc
fdivrl
outsb
test
cwtl
sbb
ret
mov
pop
leave
xor
stc
xchg
ror
sbb
and
pop
push
pop
sub
adc
in
dec
sbb
cli
cmp
imul
out
dec
mov
loope
sahf
aam
ret
cmc
and
jg
ds
lods
sbb
jmp
pop
lods
mov
mov
sub
mov
xchg
ret
mov
pop
mov
mov
imul
cmp
jbe
mov
add
adc
pop
lds
mov
testb
movl
sub
andl
mov
outsl
pop
lock
dec
adc
arpl
cltd
push
dec
inc
xor
pushf
call
cmp
lret
in
adc
xor
inc
and
pop
and
pop
and
pop
mov
add
int3
xchg
inc
pop
lods
push
push
pop
fsubp
arpl
roll
mov
dec
sbb
hlt
sub
lret
pop
rclb
push
xor
add
fs
or
pop
mov
ds
or
push
pop
add
leave
movsb
push
jbe
mov
mov
mov
jb
cmpsl
or
pop
sahf
xor
xor
lret
stos
xor
fbld
cmp
rclb
mov
cwtl
jne
pop
ret
jmp
iret
mov
lock
dec
test
pop
cmpb
mov
inc
loope
lret
push
lds
sub
mov
xor
jns
fwait
dec
push
adc
popf
scas
pop
push
and
xchg
dec
mov
ds
arpl
xor
pop
pop
jb,pt
notb
out
lods
xchg
cmp
or
cli
in
out
sub
xor
insl
gs
push
fdivs
fidivl
jge
mov
and
jle
sbb
push
mov
outsl
test
pop
sbb
push
xlat
fcoms
pushf
mov
lods
cmp
icebp
addb
aad
inc
out
push
mov
pop
mov
lods
fdivrl
int3
sub
jmp
rorb
push
arpl
sti
aad
loope
mov
movsl
bound
out
push
xlat
mov
jge
mov
gs
gs
mov
jno
or
push
sub
or
pusha
dec
add
push
cmc
push
in
cltd
push
lcall
mov
xor
movsb
aaa
hlt
sbb
mov
add
sbb
roll
mov
xchg
icebp
pop
inc
addr16
inc
xchg
xor
mov
mov
sbb
push
out
mov
pop
adc
mov
leave
cmp
je
mov
push
mov
fildll
call
popa
dec
or
ss
outsl
or
mov
outsb
jae
pop
adc
cwtl
cmpsb
pop
pop
mov
xor
cmp
and
mov
mov
and
scas
loopne
hlt
xlat
xchg
dec
jb
push
cli
push
pop
pusha
inc
lods
xor
jge
test
mov
mov
leave
bnd
push
pop
mov
jb
movsl
nop
adc
das
test
jae
add
adc
and
clc
mov
dec
call
lahf
inc
mov
movsb
dec
lods
add
pop
push
push
mov
mov
inc
and
mov
in
lcall
jecxz
jg
data16
stos
jmp
fstpl
aaa
adc
fsubs
arpl
adc
es
and
jb
pushf
into
rcrl
jns
push
inc
adc
sahf
xchg
add
adc
or
inc
lcall
dec
inc
stos
sar
cmp
bnd
adc
stc
xchg
stos
xchg
lock
mov
daa
lea
cmp
adc
out
movsb
inc
inc
jp
inc
xchg
mov
mov
jp
xor
push
inc
cmp
or
ret
xor
loope
jns
jp
push
clc
clc
mov
out
and
add
daa
ficoml
fwait
mov
popa
dec
ljmp
jbe
mov
test
add
fdivrl
nop
int3
cmpsb
addr16
jnp
push
mov
inc
push
iret
push
shll
jno
mov
mov
stos
icebp
in
shr
adc
popf
pop
xchg
clc
enter
ss
pop
imul
les
rcrl
or
xlat
aas
fcomip
inc
inc
pop
sub
das
repz
pop
dec
out
adc
xchg
cmpl
push
fwait
cli
mov
pop
ret
jle
adc
xchg
and
movsl
dec
dec
cmc
insl
cmpsb
lret
cmp
mov
enter
jge
pushf
add
sbb
ljmp
sub
cli
scas
lret
aaa
aaa
je
add
out
xor
mov
gs
inc
stos
xchg
and
outsb
gs
test
xchg
mov
out
jmp
repnz
rolb
cld
ret
push
lahf
lock
push
or
and
pop
test
icebp
aam
je
xor
or
and
lcall
repz
int
fistps
scas
mov
lock
mov
aaa
jnp
scas
inc
lods
xchg
ds
dec
call
jp
adc
pop
test
jns
test
sub
jo
outsb
and
push
mov
push
push
dec
add
or
xor
daa
inc
xchg
sbb
pop
je
dec
sub
outsl
negb
xchg
aam
mov
fcomps
rorb
fucomip
mov
rcll
inc
pop
jle
cmp
push
dec
notb
jecxz
pop
or
sub
adc
pop
or
sarb
aas
mov
cmpsb
ss
pop
jns
das
mov
xchg
inc
ljmp
cmp
nop
sahf
dec
daa
jb
push
push
mov
jle
mov
sub
outsb
jo
mov
das
dec
and
imulb
dec
arpl
add
mov
push
inc
sbb
mov
jge
mov
cltd
stos
and
pushf
mov
jge
scas
sub
outsb
xor
cli
pop
and
ss
ds
test
mov
add
lret
fmuls
xor
fdivs
xor
clc
ret
mov
mov
repnz
xor
hlt
mov
lahf
movsl
mov
loop
fs
pop
subb
outsb
or
and
rcrb
mov
xchg
xor
mov
mov
cld
lods
arpl
jno
test
push
cmp
mov
xor
lock
sub
mov
or
jmp
xor
dec
mov
pop
scas
repnz
pushf
lds
add
jmp
pusha
mov
cmpsl
cmp
ret
loope
mov
aaa
mov
sbb
inc
jb
add
xchg
pop
and
ja
scas
cmp
and
repz
aas
or
ret
ret
ja
adc
jl
ljmp
xchg
call
dec
pop
xor
mov
sub
movsl
clc
dec
es
xchg
dec
stc
add
ljmp
push
lcall
and
aad
or
lcall
mov
pusha
ljmp
cmp
or
sub
leave
mov
jnp
mov
dec
enter
sbb
pusha
push
sbb
adc
fs
mov
loop
les
pop
fyl2x
das
clc
fs
mov
or
push
enter
pop
mov
add
lods
std
xchg
nop
pop
es
and
pusha
sbb
xor
jno
repz
insb
xor
in
pop
sbb
dec
xchg
ds
lret
mov
fcomps
pop
mov
push
call
or
js
std
je
ror
dec
jns
xchg
add
inc
aad
push
ret
and
mov
in
sarl
out
negl
jmp
test
hlt
push
push
jmp
movsb
mov
mov
mov
les
cmp
aad
or
cmp
in
sub
js
ljmp
adc
jo
scas
roll
jmp
mov
mov
or
push
inc
pop
jo
cli
neg
cs
jae
jns
aaa
cwtl
or
ja
xor
shl
mov
mov
sar
mov
sub
rcr
adc
jbe
xchg
fadds
pusha
test
stos
push
xlat
mov
stc
mov
xchg
iret
stc
bound
cmpsb
imul
je
mov
clc
push
xor
cmp
xor
jl
test
fstl
lea
out
stc
or
xor
frstor
movsb
sbb
cmp
sbb
cmp
xor
pusha
xorb
inc
pop
je
lahf
push
push
add
pop
and
mov
dec
mov
dec
inc
mov
clc
lret
or
fisubl
hlt
inc
or
ret
dec
notb
arpl
shrb
bound
inc
gs
in
cli
cltd
lret
lret
data16
xchg
and
insb
addr16
lcall
popf
popa
inc
jp
js
xor
xchg
enter
fstps
and
mov
adc
test
pusha
incb
int3
jg
cmp
push
mov
lret
mov
and
add
cmc
and
jecxz
rcl
add
sub
mov
loopne
add
jno
ds
jae
push
pop
mov
outsl
out
push
and
in
add
dec
xchg
aas
adc
ret
push
pop
pushf
jmp
push
mov
fcomi
adc
add
push
sub
or
adcb
lock
inc
fisttpll
repnz
and
gs
cmp
fsin
pop
lock
in
cmp
sub
ja
loopne
daa
pop
mov
andb
ret
iret
mov
xchg
insl
enter
test
insl
rcrb
je
jno
mov
mov
jg
cli
xchg
fisubrs
sbb
push
clc
push
jg
add
aaa
push
adc
das
jbe
add
jae
xor
push
fxam
adc
movsb
dec
nop
out
push
fst
and
adcb
jle
clc
dec
pop
insb
sbb
pusha
add
mov
inc
call
jmp
xchg
lods
dec
fdivr
jp
sbb
cmp
data16
xchg
sub
xor
ret
mov
mov
repnz
dec
cmp
cmp
lods
jg
in
enter
jb
fcmovb
sbb
movsl
pop
pop
mov
outsl
jg
push
jno
loopne
mov
daa
out
jae
rol
mov
lcall
fmul
aad
sub
pop
mov
jg
int3
iret
jl
in
cmp
loop,pt
sti
pop
hlt
push
sahf
dec
fstps
push
mov
pop
dec
xor
mov
sub
add
add
sub
dec
aas
mov
arpl
and
xor
in
call
inc
in
xor
add
mov
mov
enter
mov
push
shrl
in
test
xchg
push
pushf
xor
addb
in
cmc
sbb
cld
insb
pop
das
in
sbb
jg,pt
push
pop
out
add
repz
pop
arpl
int3
or
mov
xor
mov
imul
push
jne
push
dec
adc
cmp
xchg
cmp
pop
aas
hlt
mov
sbb
stos
push
in
pop
std
push
push
or
lret
cli
movsl
xchg
imul
xor
inc
iret
cmp
mov
das
sbb
pop
jl
jo
mov
cmp
sub
addl
or
test
xchg
or
sbb
enter
shll
xchg
in
dec
or
fisttps
ret
sbb
sub
repnz
jecxz
cmpsl
aad
mov
xor
inc
mov
xor
mov
sbb
add
mov
jns
imul
push
add
movsl
add
scas
sbb
shlb
addr16
outsb
sahf
xchg
movsb
imul
jle
dec
ret
div
lret
sub
or
xchg
pusha
sbb
int3
outsl
mov
aam
xchg
sbb
inc
mov
sbb
aam
adc
cmpsb
cli
stc
xor
push
cmp
into
jp
enter
inc
adc
scas
jecxz
insb
iret
jbe
and
push
inc
jp
sub
jo
push
xor
movsb
hlt
sbb
shlb
push
bound
mov
movsl
and
xor
insb
sbb
leave
lods
add
fisttpll
dec
loopne
xor
lds
int
sarl
test
scas
push
add
adc
jp
xchg
lahf
mov
aas
pop
and
cmc
inc
lock
push
imulb
xor
jae
lods
jbe
xchg
mov
ret
cli
mov
jp
xor
adc
inc
pop
xor
ret
adc
mov
mov
adc
add
jno
outsb
jno
dec
or
dec
xor
push
mov
imul
shlb
movsb
push
decl
dec
jecxz
mov
jge
idivl
ret
mov
mov
xor
clc
push
push
sub
pop
aas
hlt
insb
jecxz
or
leave
cmpl
negl
cmpsl
in
sbb
adc
mov
and
shlb
shrl
ja
jb
mov
cs
pop
into
loope
and
inc
xchg
sbb
into
sbb
andb
clc
dec
mov
arpl
cmp
jecxz
ljmp
add
nop
loop
push
or
les
lret
ret
adc
mov
aad
add
in
mov
aas
add
push
pusha
or
sub
mov
ret
dec
stc
rep
or
adc
mov
push
popa
das
lods
cltd
mov
push
mov
adc
sbb
dec
jbe
dec
mov
test
xor
pop
popf
pop
jge
sub
inc
xor
rorl
sub
adc
mov
ljmp
ret
loope
adc
movsl
mov
mov
or
push
loopne
pop
push
xchg
pop
sbb
outsb
push
bound
dec
inc
aaa
je
sbb
test
xchg
dec
rcrb
cmp
ret
fisubrl
inc
dec
push
dec
fiaddl
ds
lcall
cmp
add
repz
dec
jmp
loope
push
shr
push
pushl
hlt
loopne
push
xor
test
xchg
clc
aaa
sbb
jl
jp
mov
rcr
push
xchg
es
test
mov
cmp
scas
rcll
jo
mov
push
cli
cmpl
adcl
xchg
cmc
inc
fdivr
jne
mov
xchg
mov
hlt
sbb
push
or
push
adc
inc
add
push
pop
sti
or
movsl
mov
mov
data16
xchg
fistps
addr16
or
cmp
xchg
dec
pushf
xor
push
dec
mov
sub
stc
push
mov
mov
mov
popf
fidivrl
rcr
xor
add
mov
dec
int
aaa
repz
pop
pop
lahf
jno,pt
js
das
lret
mov
mov
and
movsl
rcrb
adc
popf
fsubs
add
jmp
aaa
jl
das
repnz
pop
je
in
or
push
subb
jbe
mov
ds
xor
jge
dec
dec
lahf
pop
or
sub
bound
dec
push
clc
push
add
fidivs
mov
lods
mov
and
ret
mov
mov
in
pop
imul
jg
sub
aas
shlb
pop
or
pushf
scas
daa
pop
data16
fidivrl
mov
mov
pop
inc
stos
mov
xchg
push
pop
push
std
xor
call
rcrl
cmc
adc
outsl
or
sbb
pop
inc
jl
jp
nop
sbb
add
cmp
lret
mov
push
scas
xor
push
lods
decb
out
daa
clc
inc
std
filds
sub
outsb
arpl
cmp
add
mov
das
lds
shrl
imul
out
xchg
dec
fcmovnbe
or
popa
ds
mov
rorl
rcl
loope
iret
pop
inc
adc
jne
mov
lcall
aam
mov
cmp
stos
mov
repnz
cmp
sub
mov
cwtl
jg
mov
mov
aas
sub
into
pop
add
jnp
push
rcl
aas
and
adc
and
ja
icebp
mov
xchg
mov
and
subb
xchg
dec
in
jecxz
or
dec
loop
push
enter
imul
shlb
pop
stos
or
xchg
lcall
repnz
mov
aas
dec
popf
sti
fisttpl
movsb
jp
push
or
and
mov
xchg
clc
xorl
add
sub
js
sbb
xor
pop
sbb
das
ss
ret
shrb
das
push
sbb
je
into
movsb
sbb
testl
cmp
jb
adc
scas
or
fiadds
push
lods
leave
fwait
arpl
inc
call
dec
pop
cmp
pusha
xor
lods
push
jo
mov
les
inc
lcall
cltd
push
adc
pop
xchg
cmpsb
sbb
jae
cmp
mov
sub
test
sub
push
dec
push
mov
mov
or
jle
pop
lahf
scas
push
push
add
out
mov
mov
lret
ljmp
sbb
and
push
add
cltd
sub
sbb
js
gs
mov
negl
incl
xor
xchg
mov
xchg
sbb
aad
inc
js
jp
sbb
inc
hlt
pop
outsl
inc
pop
cmp
inc
repz
jge
and
sbb
pop
mov
sbb
aad
das
push
dec
lods
mov
ret
aad
adcb
cli
lods
push
push
das
cmpsb
mov
rcrl
pushf
sbbb
add
fistps
addb
xchg
pop
mov
inc
lods
add
xchg
sub
aas
dec
scas
sbb
cltd
js
jle
nop
movsl
push
pop
inc
jno
into
jp
xchg
jno
or
jno
mov
mov
shlb
bound
jle
into
imul
inc
lahf
leave
fstp
cmpsl
out
shrl
jmp
sbb
add
mov
mov
mov
pop
lods
mov
lret
push
mov
and
int3
mov
cmc
repnz
add
dec
xor
cltd
stos
sahf
les
and
incb
lock
sahf
out
cltd
xor
je
adc
lahf
pop
jl
xchg
xchg
subl
mov
dec
repnz
cmpsb
es
adc
mov
pop
lsl
mov
aas
xchg
gs
mov
push
mov
xchg
xchg
sub
xchg
ljmp
mov
or
repz
push
mov
mov
push
mov
imul
repnz
xchg
adc
ja
outsl
cbtw
psraw
jo
push
adc
loope
add
pminsw
popf
shlb
aaa
int3
jbe
rorl
lret
or
jb
push
or
out
ret
cmc
sbb
lock
and
out
adc
jmp
rcl
xchg
adc
pop
push
pushf
jnp
push
add
rclb
cmp
cmp
mov
push
shrb
sub
adc
ljmp
adc
mov
loopne
aaa
aad
push
sbb
jnp
mov
subb
jbe
ror
jp
mov
ja
outsl
movsb
jmp
popl
mov
rolb
outsb
xor
notl
cmp
cmp
push
push
icebp
sub
insb
in
cwtd
xchg
xor
pop
or
fldt
cld
jmp
out
xlat
cmp
out
dec
push
xchg
test
dec
mov
dec
aaa
mov
add
negb
dec
or
gs
daa
pop
push
aaa
es
stc
jne
mov
inc
mov
sbb
insl
adc
mov
stc
int3
sbb
aam
mov
mov
adc
push
sub
dec
adc
xorl
out
dec
stos
sub
add
arpl
dec
movsb
aas
and
add
jnp
dec
lock
cs
lahf
fisttps
mov
jne
movsl
pushf
hlt
aam
lods
andl
scas
lock
push
lret
hlt
fidivs
xor
movsl
lea
xchg
adc
jae
or
mov
pop
jo
sub
shll
sbb
cmp
roll
ds
jmp
sbb
mov
pop
mov
lahf
insl
jb
add
push
outsl
sbb
lods
fs
mov
pop
xor
fdivrl
cli
fdivr
mov
push
xchg
fsin
mov
ja
fldt
fwait
lock
mov
fildll
data16
lods
xchg
pusha
inc
and
cmp
add
or
jo
lods
cli
jnp
add
in
sbb
scas
test
shrl
pop
mov
sub
cmp
adc
xor
dec
dec
test
stos
mov
lcall
and
xchg
and
sub
enter
sub
out
pop
loop
pop
jbe
inc
push
lahf
xor
mov
icebp
push
idivl
aam
xor
jo
in
xchg
fcoms
imul
dec
ficomps
imul
andl
dec
mov
adc
xor
push
int
cmpsb
push
scas
jns
mov
sub
int3
mov
mov
adc
repnz
ret
insb
jmp
fisttpll
movsl
mov
adcl
fstl
or
add
push
out
dec
out
mov
push
push
mov
cld
push
push
xchg
mov
inc
lods
push
pop
push
mov
rolb
dec
mov
jb
mov
push
inc
mov
push
xchg
mov
movsb
fisttps
cmp
push
mov
cmp
outsb
roll
dec
int
push
frstor
jge
sbb
pop
sub
or
mov
movq
out
clc
pushw
mov
js
xchg
mov
xchg
jnp
repnz
pop
in
insl
mov
gs
or
cmp
dec
gs
roll
ljmp
lods
jns
xor
outsb
movsl
mov
or
out
fs
aad
loope
aam
mov
mov
jae
sub
jg
hlt
adc
sahf
xor
xchg
fs
pop
ja
cmp
push
xchg
dec
xor
leave
cmp
sub
or
and
negb
rcr
pop
pop
xchg
dec
out
aaa
daa
lret
cmpsl
scas
ror
dec
push
and
out
pop
shl
sub
fstpl
jmp
sti
push
jge
push
jl
lea
cmpsb
aas
loop
jmp
add
shrl
repnz
xchg
xchg
jge
cmp
into
jo
call
sub
mov
and
enter
test
or
pop
dec
push
mov
rcl
test
jns
push
mov
xchg
push
imul
pushf
adc
es
pop
stos
mov
je
pop
insl
xchg
idivl
cld
mov
fisttpll
xchg
mov
int3
or
stc
in
mov
scas
adc
xlat
mov
repz
push
int3
adc
sbb
out
call
xchg
outsb
pop
cli
fs
test
mov
pusha
inc
outsb
shl
or
dec
aam
or
xorl
aas
bound
cmp
out
outsl
pop
ds
mov
mov
mov
nopl
xor
gs
jmp
ss
popf
dec
and
popa
adc
mov
xor
and
lods
push
repz
repnz
cli
pop
push
xor
cmp
adc
jle
adc
xchg
cmpsb
arpl
mov
ja
negl
mov
add
es
popf
bound
lods
lret
pusha
lods
or
sub
popa
in
sbb
gs
insl
jae
mov
cmp
jnp
jp
mov
add
jmp
fwait
inc
sub
jne
mov
jmp
dec
ja
fstpl
int3
dec
enter
push
sbb
xchg
add
pop
jecxz
test
pop
mov
shl
add
mov
loopne
dec
ljmp
test
in
xor
stos
jbe
mov
push
or
out
xor
ret
roll
mov
stos
xorb
sub
test
mulb
sti
xchg
es
sub
pusha
dec
xor
in
dec
dec
scas
movsb
add
leave
xchg
jmp
loop
xor
or
xchg
and
adcl
cmp
cmp
adc
loop
lcall
mov
inc
call
mov
sub
push
sahf
sbbb
ljmp
sbb
in
stos
mov
xor
out
test
add
lds
dec
loopne
dec
test
sti
cwtl
ljmp
sti
add
mov
int3
xchg
clc
loope
jo
test
add
mov
lret
cmp
or
fistl
dec
lock
or
mov
xor
pop
popf
scas
cwtl
mov
mov
loopne
rcrl
loope
mov
mov
jmp
frstor
xchg
jle
arpl
stos
std
imul
cmp
dec
call
leave
popa
cmp
gs
or
jo
and
xchg
and
sti
xchg
inc
out
lods
les
pop
aad
fsub
mov
addr16
fldenv
adc
addr16
jns
xchg
in
mov
imul
or
pop
mov
push
std
shlb
imul
dec
mov
je
mov
lcall
mov
rolb
fiaddl
push
les
or
dec
adc
mov
mov
push
outsb
mov
lods
sarb
add
mov
das
pop
sub
arpl
ss
out
sbb
inc
mov
test
andb
bound
fists
push
mov
push
adc
daa
adc
xchg
test
mov
jnp
pusha
mov
dec
push
mov
lahf
pop
push
mov
pop
gs
fdiv
movsl
cmovle
leave
xchg
xchg
movsl
sbb
lods
lods
ror
ret
mov
aam
outsb
jge
scas
enter
mov
loopne
mov
fists
outsb
sbb
cmp
jp
aam
sti
or
pop
xor
mov
mov
dec
fcmovnb
push
inc
mov
insl
test
insl
mov
imul
ret
push
pop
sbb
mov
fdivs
in
jg
out
sub
xor
push
or
sbb
in
rol
jl
push
sti
repnz
repnz
or
fistl
jb
orl
lahf
xchg
lea
adc
push
mov
xor
adc
or
jmp
or
insl
add
repz
lret
mov
hlt
pop
xor
clc
sarb
inc
dec
push
mov
lret
hlt
cmp
jp
sub
sub
aad
dec
jmp
xchg
mov
shl
adc
mov
es
jecxz
mov
and
and
call
pop
add
cmp
cld
daa
mov
sub
fwait
mov
push
xchg
mov
cmp
xchg
pop
arpl
or
mov
cmp
jecxz
jbe
cmp
push
push
dec
pusha
js
dec
push
loop
or
cli
and
xchg
jg
sub
adc
movsb
pop
out
adc
mov
push
insl
mov
dec
cs
xor
nop
jbe
call
jmp
mov
hlt
push
cmp
arpl
adc
pop
stc
cs
fisubrl
data16
cld
cmpsb
mov
lods
push
int
lret
popa
fcomps
jns
pop
movsl
loopne
lea
fstpt
subb
xchg
fstpl
jbe
loopne
scas
dec
ds
dec
loopne
inc
push
dec
outsl
data16
push
pop
inc
inc
add
xlat
inc
jmp
in
mov
arpl
insb
sbb
mov
fwait
ds
mov
cmp
movsb
sbb
pop
dec
push
mov
and
inc
mov
or
xlat
fdivp
ljmp
lret
sbbl
leave
dec
stos
sbb
gs
aaa
in
mov
in
xor
jns
jmp
xchg
cltd
xor
repz
push
test
mov
and
stos
loope
sub
inc
mov
mov
and
dec
add
fs
js
int
gs
dec
out
rol
pop
enter
jp
pop
into
ds
in
dec
sbb
jnp
and
and
lds
lret
in
or
cmpsl
mov
fnsave
jno
mov
cmpsb
fisubrs
ljmp
popa
cmp
jmp
clc
dec
cmp
push
xchg
loope
test
add
jae
and
pop
dec
and
push
adc
out
mov
inc
xchg
add
loope
cmp
cltd
in
inc
mov
xchg
test
addb
ret
xchg
jb
outsl
dec
dec
or
out
mov
in
movsb
jo
sbb
dec
adc
xchg
sbb
cmp
fwait
out
mov
sbb
addr16
sub
and
ss
cmpsl
cmp
cs
shll
and
push
mov
mov
jmp
dec
mov
mov
inc
nop
out
xor
xor
or
je
cmp
adc
outsl
fldt
xchg
fs
add
in
out
or
insb
or
mov
jle
ret
icebp
andl
call
insl
push
jmp
lea
cwtl
dec
sub
iret
mov
daa
inc
mov
mov
repz
inc
in
inc
mov
in
add
or
dec
jp
out
jecxz
cld
ret
adc
sub
adc
xchg
push
dec
pop
nop
outsb
jb
movl
fsubs
fildl
movsl
or
sbb
ja
mov
xor
lret
gs
or
push
scas
iret
stos
xor
loop
scas
cmp
pop
mov
jbe
test
rcrl
mov
jae
dec
imul
daa
rorb
xor
mov
mov
mov
xchg
cmpsb
mov
fidivs
mov
xchg
popf
cwtl
and
pop
push
and
movsb
sahf
or
jb
xor
pop
add
xorl
inc
cld
pop
pop
test
xor
lods
xchg
dec
test
sub
inc
out
pop
cmpsb
out
out
aam
sub
mov
pop
lahf
mov
and
popf
scas
inc
pop
mov
pop
les
mov
push
clc
cmp
mov
cmp
sbb
pushl
mulps
stos
push
mov
and
cmpsl
je
cmc
in
and
shll
ficomps
cmp
cmpxchg
jge
mov
data16
sub
call
jae
shrb
adc
shrb
cmpsb
fldt
xlat
test
sub
and
rorb
jp
cld
lret
push
sbb
clc
xor
shlb
ss
jo
out
fmuls
mov
mov
mov
loop
mov
pop
or
or
mov
xchg
mov
pop
sub
mov
loop
outsl
decl
cld
dec
mov
xchg
cmp
push
pop
retw
negb
jmp
mov
mov
mov
sbb
sbb
shrl
inc
movsl
dec
int
int3
sti
and
mov
fcoml
icebp
jnp
shll
adc
lods
fdivl
sbb
cwtl
inc
pop
enter
call
jl
xlat
rcll
js
dec
add
push
mov
je
enter
add
adc
adc
insl
test
lods
inc
cmp
pop
mov
add
jae
cmp
pop
dec
movsl
fnstenv
jge
xlat
mov
ljmp
xor
fists
sbb
lahf
cmp
in
add
jno
sbb
int
sub
jae
out
push
into
sub
fistps
cmpsl
stc
push
dec
lock
mov
sbbl
into
xchg
addr16
fbld
mov
stos
rorl
outsl
leave
pop
mov
repz
add
jne
jmp
jmp
pop
sbb
fisubrs
push
test
lods
outsb
xchg
xchg
sarl
mov
bound
push
in
add
add
arpl
insl
inc
cmp
test
test
adc
loope
bound
push
int
lods
mov
and
jnp
lock
dec
arpl
andl
or
add
pop
add
ljmp
arpl
cmp
inc
mov
test
addr16
pop
xor
xchg
or
lret
mov
inc
mov
lea
or
out
xlat
adc
cmpsb
mov
data16
lret
inc
add
or
pop
sbb
out
inc
stc
lods
lahf
aas
jmp
mov
clc
imul
cmp
shll
jmp
pusha
fsubs
cmp
cmp
fsubrl
sbb
sbb
push
aaa
shlb
stos
cmp
sbb
std
mov
jno
lahf
add
xchg
dec
data16
mov
jp
ficompl
test
pop
in
and
lret
pop
jg
les
das
cld
mov
inc
mov
iret
jg
lret
or
sbb
inc
jns
les
int3
in
out
cmp
inc
mov
push
orb
xchg
xchg
and
mov
cmc
jns
mov
scas
outsb
xchg
fs
bound
fidivs
adc
add
andl
push
out
push
fwait
mov
cmp
sbb
sub
test
sbb
mov
insl
je
add
mov
add
aam
mov
or
inc
fimull
mov
addl
mov
xchg
les
dec
mov
or
cmp
shr
adc
pop
mov
rorl
addl
adc
or
pop
mov
jp
fcmovne
test
dec
sbb
mov
sarl
sbb
rolb
movsl
push
and
dec
and
in
sub
lock
movsb
scas
ja
xor
mov
shrl
arpl
push
lcall
and
pushf
setno
ret
push
sub
push
push
or
lcall
subb
in
mov
cmp
inc
push
mov
cld
push
arpl
ficoms
jmp
movsb
mov
loop
insb
cltd
and
lods
adc
push
mov
adc
pop
jno
or
lds
fmul
cwtl
xchg
add
or
push
xor
sub
inc
inc
sbb
pop
push
dec
jo
push
adc
repz
pushf
dec
enter
icebp
or
int3
cs
cmp
mov
mov
int
xor
scas
mov
pop
jp
jne
sub
jle
sar
jnp
pop
mov
jns
pusha
mov
arpl
sbb
iret
xchg
fldl
arpl
dec
and
clc
scas
inc
jl
repz
mov
ss
jmp
nop
mov
lock
es
and
lret
addr16
std
and
jp
mov
sub
in
adcb
push
pushf
xchg
mov
enterw
push
fimuls
or
inc
es
fcomps
sub
mov
lar
add
int
xchg
jge
xchg
addl
and
dec
xchg
aas
in
call
rorl
pop
sub
cmc
mov
iret
loopne
loop
test
rcrl
sbb
sahf
mov
mov
adc
out
js
aas
xor
or
fwait
inc
ds
fwait
or
jp
pop
mov
movsl
gs
inc
fisttpll
fists
shlb
lret
sbb
jb
flds
jmp
mov
lock
jle
pop
adc
xor
int
imul
gs
frstor
fidivs
imul
repz
jae
adc
sbb
lea
xlat
sbb
in
jge
mov
push
dec
jne
jg
sarl
pop
cmp
mov
sub
pop
add
pop
ret
add
std
shrb
pushf
mov
lock
mov
gs
mov
clc
xchg
inc
adc
xchg
sbb
sub
jg
inc
add
jbe
out
sub
push
fstpl
scas
xor
lds
inc
lret
icebp
cmp
sbb
push
xor
pop
mov
jmp
mov
jno
addb
std
mov
out
inc
and
mov
out
sti
jo
fistpll
sahf
jb
xchg
lock
jge
and
cld
jle
test
dec
jbe
jae
insl
and
mov
movsl
dec
loope
out
or
cltd
push
ljmp
push
or
add
lea
repnz
mov
xchg
inc
sti
xchg
ja
mov
jne
push
ja
mov
inc
fcmovu
aas
fisubs
pop
sub
scas
sub
test
outsl
les
jno
adc
mov
mov
inc
cmp
rolb
xor
test
dec
cmp
popl
sub
jne
inc
sub
mov
xchg
add
push
out
xor
faddl
test
jmp
push
add
jle
push
mov
or
lret
push
movsl
jb
test
stos
and
test
push
orl
cmp
xor
scas
inc
lds
repz
repnz
les
test
imul
cld
pop
jg
jg
test
sub
dec
pop
dec
xor
test
mov
sub
es
sub
push
pop
adcb
sub
push
aad
fidivl
cmpsl
iret
xchg
jns
aaa
pushf
mov
jnp
push
cmc
rcl
leave
arpl
push
movsb
adc
or
xor
shrl
or
ficomps
pusha
cs
jns
and
pop
pop
daa
test
mov
subb
xor
fcomp
ja
xchg
out
cmp
addb
stc
stos
jae
in
loop
add
in
push
mov
xchg
and
inc
add
jb
fwait
and
jb
pop
ret
or
enter
pop
jnp
lods
add
sub
jmp
mov
mov
movsl
inc
ds
mov
dec
inc
or
mov
add
loop
add
adc
or
xor
loope
ret
sti
and
pop
xchg
push
xor
sbb
out
inc
or
add
xchg
fimull
pop
ljmp
mov
mov
jno
aas
in
stos
out
aas
cld
popf
bound
fists
cmpsl
xchg
jl
decl
loop
in
pop
nop
mov
inc
in
xchg
aas
cmp
mov
divb
out
leave
pushf
mov
dec
imul
xor
icebp
and
scas
add
xchg
mov
push
rep
je
xchg
fidivrs
test
sub
adc
outsb
cwtl
push
popl
mov
loopne
mov
push
cltd
sbb
cmc
and
stc
leave
push
push
out
sub
jnp
outsb
push
jl
xchg
out
lds
adc
mov
dec
xchg
scas
int
mov
outsb
int3
dec
insb
sub
sbb
and
push
jp
adc
xor
lds
push
and
movsl
or
inc
mov
daa
sahf
lret
sub
sbb
xor
push
test
arpl
jne
call
cmpsl
stos
dec
stos
lret
jmp
pop
fstpt
rcrl
scas
lock
and
pop
and
out
fcomp
mov
lds
sbb
and
data16
dec
inc
mov
sub
sbb
js
xor
movsb
xchg
mov
fnstsw
lods
mov
and
pop
in
dec
mulb
xlat
addr16
jle
pop
add
popf
sub
add
adc
and
mov
movsl
push
fwait
pop
jg
and
das
xor
js
out
lds
xchg
in
bound
std
jne
push
cmp
push
adc
xchg
jnp
mov
push
pushw
jae
inc
mov
xor
mov
cs
jne
add
aaa
sbb
dec
or
sub
pop
mov
add
fbld
xchg
lods
shlb
aaa
xor
xlat
sbb
les
into
pop
negb
lods
mov
aam
sti
xorb
cmpl
repz
fsubl
adc
into
sahf
dec
and
pop
cmp
xchg
dec
scas
dec
dec
outsl
jne
adc
dec
pop
and
inc
mov
dec
mov
repz
hlt
lods
ss
leave
jge
popa
mov
stos
es
popf
fwait
mov
pusha
sbb
dec
push
test
into
mov
arpl
add
mov
mov
dec
pop
mov
je
push
aas
mov
rclb
and
mov
pop
pop
mov
add
mov
shll
and
lds
and
repz
pushf
xchg
addr16
out
pusha
add
popa
sbb
jecxz
mov
push
push
sbb
jge
rorb
pusha
hlt
dec
or
and
cmpsl
inc
insl
xchg
lods
aaa
jnp
and
es
clc
xor
inc
sub
adc
rep
jecxz
or
jmp
push
add
lea
lret
mov
loope
fwait
sbbl
sub
pop
xor
sub
nop
dec
cld
or
cmpl
fists
cmp
cmpb
outsl
es
sbb
out
or
pushf
popa
mov
xchg
cmp
mov
sbb
jnp
lds
mov
das
sub
test
inc
mov
outsb
sarb
popa
pop
xorb
mov
subl
scas
sti
scas
xchg
in
int
jo
mov
cmpsb
idivl
ret
push
and
les
lods
xor
fcmove
div
bound
pop
stos
sub
add
xchg
cld
leave
andb
aad
cmpsb
xchg
pushf
stos
cwtl
or
xlat
ja
scas
push
inc
lods
xchg
or
iret
inc
pop
fstps
jp
push
mov
push
mov
fsubrp
movsl
xchg
movsl
imul
adc
fwait
mov
push
xchg
pop
sub
cwtl
lea
call
dec
out
push
dec
out
orl
push
pop
in
xchg
mov
sbb
cltd
mov
hlt
adc
adc
push
sub
shlb
adc
jae
sbb
or
gs
cli
lahf
push
aad
aam
push
mov
xor
lret
jle
cmc
mov
mov
das
mov
or
repz
lea
pop
mov
ss
pop
scas
jb
cmp
jle
cmp
or
sar
xchg
inc
dec
xchg
adc
out
xor
aaa
loop
aaa
sbb
xchg
or
jbe
mov
add
push
iret
or
inc
rcrl
jnp
fstpl
pop
stos
repz
jecxz
mov
shl
test
cld
xchg
out
cli
add
int
pop
xchg
ja
push
rorl
fldl
and
xchg
pop
shrb
fcmovb
sbb
xchg
jmp
scas
jge
sbb
or
fcoml
stos
pop
adc
fstpt
loope
cld
inc
mov
or
icebp
dec
jg
inc
testl
daa
movsb
inc
xchg
shll
shlb
and
nop
add
aas
adc
pop
dec
jnp
addr16
data16
enter
inc
xlat
pop
or
cmp
or
mov
push
add
mov
das
je
loope
arpl
and
sbb
sub
inc
cmp
cmp
test
int3
ljmp
adc
cli
pop
fbstp
lock
jmp
aas
inc
roll
push
mov
mov
lcall
cmpsb
cmp
or
hlt
or
dec
adc
cmp
inc
cmp
dec
add
imul
push
fwait
scas
addr16
push
in
push
aad
mov
cmp
in
xor
mov
test
dec
mov
sbb
xchg
loope
mov
fidivrs
sub
mov
cs
lds
cs
outsb
loope
mov
sbb
lret
xor
testb
add
pop
popa
add
cmp
popa
sbb
xor
xchg
pmullw
dec
add
push
adc
shlb
and
cli
jge
aas
dec
xor
sbb
cld
mov
je
mov
add
pop
lea
or
shr
sbb
mov
sbb
sbb
sahf
in
or
in
icebp
loope
out
das
out
jns
sahf
pop
shll
jmp
in
js
loopne
and
jbe
insb
cmp
or
push
divb
aaa
jg
addb
mov
in
imul
arpl
mov
in
xchg
or
add
sbb
inc
adc
jmp
out
mov
sti
push
push
out
cmp
pop
xchg
jle
lods
or
fmull
mov
or
sub
jnp
loope
xchg
orb
jb
dec
xchg
dec
mov
nop
dec
xchg
dec
pushf
jmp
cmc
xchg
fs
scas
dec
adc
push
sbb
xchg
xchg
in
add
xor
lock
movsl
xchg
shll
hlt
inc
jmp
imul
dec
ror
mov
jo
test
stos
mov
nop
push
xchg
cmp
in
and
xchg
mov
mov
xlat
pusha
xor
push
sahf
sub
mov
das
arpl
mov
imull
mov
mov
cmc
imul
rorl
pop
cmp
inc
stos
call
sub
adc
xor
jl
add
arpl
js
arpl
adc
sub
jge
je
mov
aaa
mov
bound
leave
shll
mov
mov
mov
testl
mull
out
hlt
cmp
jno
pop
push
xchg
mov
xor
popa
stos
arpl
aas
mov
jb
cs
out
addb
inc
data16
sbbl
int3
and
enter
in
int3
dec
pop
imull
and
mov
pop
push
lahf
out
cmp
inc
xchg
xchg
or
cmp
stos
lret
bound
sub
adc
sahf
gs
daa
adc
lods
js
mov
repz
in
imul
lret
imul
jle
adc
pusha
testl
call
xor
dec
cmpsb
mov
pop
sti
or
xchg
arpl
pop
insl
mov
jb
fdivr
daa
jp
jbe
rclb
enter
inc
or
add
mov
cmp
test
adc
frstor
or
jo
call
mov
stos
mov
pop
push
cmpsb
pushf
add
mov
lock
subl
pop
outsl
mov
mov
addr16
xlat
or
fidivrs
lods
es
push
fildll
cmp
mov
mov
sahf
ret
or
mov
pop
adc
cmp
rolb
adc
push
jecxz
xchg
add
sub
int3
cmp
mov
fstp
pop
aam
in
enter
mov
leave
cmp
pop
lea
mov
mov
leave
cmp
sbb
mov
dec
add
push
lret
fs
adc
adc
mov
lods
jge
jb
dec
pusha
jl
test
mov
xor
cmp
and
shll
stc
call
cltd
adc
push
bswap
outsb
xrelease
mov
jmp
mov
test
push
lock
jnp
jmp
dec
imul
dec
mov
out
fs
jo,pt
addb
nop
push
xor
loopne
sub
and
fs
mov
das
imul
and
sbb
les
mov
sahf
lea
fadds
inc
cmp
imul
xchg
fnstenv
xor
and
jmp
sub
out
cmp
pop
cmpsb
mov
dec
pop
jle
sti
nop
mov
std
sub
pop
ret
in
add
cmpsl
xor
movsl
jb
sub
dec
push
hlt
inc
sub
adc
jo
and
xchg
scas
insl
ret
rcrl
sbb
dec
ss
jne
mov
lock
aas
mov
stos
mov
je
in
jne
jp
mov
push
daa
stc
imul
scas
aad
pop
cmp
ficoms
nop
rcll
sbb
push
ret
movb
out
adc
fistl
repz
sbb
fcmovb
or
js,pn
mov
mov
outsb
push
cli
into
mov
xchg
mov
and
pop
sti
bndstx
daa
scas
xor
arpl
iret
push
xchg
movsb
stos
pop
loop
cld
jo
sahf
mov
outsl
lcall
ss
flds
adc
mov
cmc
jb
add
jns
imul
leave
mov
std
and
xchg
in
popa
push
roll
sarl
mov
mov
movsl
mov
cmp
inc
in
mov
inc
sbb
in
jae
pop
icebp
add
add
aam
xchg
xchg
fmuls
push
loopne
testl
std
pop
push
mov
sub
adc
decl
iret
movsb
and
aad
icebp
into
lahf
cltd
cmp
fcompl
mov
mul
push
jp
add
arpl
jg
pop
out
jnp
adc
add
addr16
lods
cmp
call
pop
push
fwait
and
stos
or
out
cs
adc
and
and
shrb
pop
bound
sbb
dec
iret
out
lods
sub
adc
cmp
pop
mov
xlat
mov
mov
adc
pop
dec
ja
push
lcall
lcall
and
mov
lods
out
add
sub
rorl
mov
out
push
fwait
jae
test
mov
out
shr
test
add
pop
stos
in
xchg
bound
test
xchg
jl
sbb
or
cmp
push
push
inc
jo
les
into
loope
push
sbb
mov
ret
adc
test
pop
xchg
mov
fstps
mov
nop
imul
aad
popf
cmpsb
aas
jo
xchg
dec
xor
inc
mov
dec
mov
outsl
movsl
imul
outsl
out
rcll
adc
xchg
lea
js
fisubrs
mov
pop
iret
pop
push
addr16
push
mov
pop
jbe
jp
into
mov
jne
mov
or
cmpsl
fldenv
je
outsb
shlb
cs
cmp
lcall
aas
in
lcall
or
ja
adc
jp
mov
jne
xchg
sahf
mov
xchg
mov
stc
insl
cltd
adc
aad
adc
sub
jl
out
or
pop
add
sub
fldl
sbb
stos
mov
loop
popa
xchg
scas
xchg
imul
add
shll
jns
mov
jne
cmp
pop
cmp
inc
inc
push
mov
push
or
push
stc
adc
pop
xchg
repz
cmpb
mov
pusha
mov
push
out
jo
test
adc
cmp
fmull
mov
out
in
mov
lods
dec
outsb
int
popa
push
xchg
and
xchg
leave
inc
cltd
push
mov
push
mov
adc
fists
iret
cmp
insl
pop
nop
mov
inc
lret
cmpsl
imul
aaa
or
cmp
arpl
ss
pusha
fsubr
and
enter
adc
outsb
mov
nop
xchg
sti
repz
sub
pop
xchg
cmpsb
push
pop
fnsave
sub
scas
xor
jp
and
fs
xchg
scas
mov
rcrb
sub
cmp
add
movsb
jne
or
or
sbb
out
sarb
lods
push
mov
jae
sbb
adc
xor
sub
fdivrs
cmp
pop
call
cwtl
les
sub
mov
scas
enter
xchg
iret
dec
popf
pop
jle
jae
rcrb
xor
push
cmp
cmp
aas
cmp
sbb
outsb
jmp
dec
shll
mov
popf
jmp
mov
loope
sbb
movsl
push
or
jmp
in
sub
xor
xchg
pop
push
inc
mov
gs
es
fcmovnb
stos
dec
std
shl
adc
sub
fistpll
hlt
sahf
and
jle
jmp
mov
sbb
sbb
sub
xor
out
jg
hlt
pop
fistps
mov
dec
or
jb
in
loopne
outsb
jmp
push
lret
or
fwait
aaa
lock
inc
dec
xchg
cmc
add
add
sub
testb
outsl
and
sub
inc
mov
rcrb
test
and
xor
and
and
or
or
js
inc
in
pop
shlb
fs
nop
push
mov
dec
lods
jl
jns
mul
aam
fnsave
jp
adc
xchg
and
fdiv
or
cmp
and
add
sbb
or
dec
pop
shll
pusha
leave
push
lea
fdiv
ljmp
repnz
mov
cmp
in
aaa
dec
adc
add
repnz
movsl
bound
aas
push
inc
ret
inc
mov
jmp
loopne
mov
lcall
jbe
sbb
leave
push
mov
push
xor
pop
sub
mov
ret
sarb
imul
inc
sbb
sarb
mov
xchg
or
punpckhdq
jecxz
bound
push
cmp
sbb
orl
in
push
ret
in
xor
lcall
mov
xlat
push
sahf
inc
sbb
cmp
sbb
enter
lods
mov
cmp
lret
cli
es
xchg
andl
mov
jae
jge
ja
xor
sbb
int3
out
pusha
xchg
mov
scas
mov
fwait
mov
stc
mov
lds
add
fisttps
cwtl
cmp
push
sbb
test
mov
test
xor
and
int3
add
mov
or
cs
sub
test
add
ret
inc
orb
pop
cmp
cmp
xchg
xchg
pop
or
test
shll
mov
ret
jbe
popf
rcrb
lret
xor
outsl
jb
push
push
jle
xchg
out
push
xor
loop
push
jno
js
popf
dec
mov
mov
mov
lds
jo
femms
dec
xchg
or
sarb
sbb
ret
jb
sbb
loopne
ret
inc
adc
cmpl
add
or
dec
mov
jns
sbb
lock
ss
push
xor
sbb
in
and
dec
stc
push
cmp
pop
in
inc
pop
push
jmp
cld
rolb
pushf
and
das
xor
mov
mov
adc
xchg
lcall
ja
shll
mov
imul
pushl
fs
cmp
lret
jl
loope
sub
cmpsb
mov
lock
test
pusha
fs
enter
std
in
mov
or
ss
in
movsb
cmp
mov
cmc
sub
push
in
outsb
mov
movl
sub
mov
ret
ret
mov
or
sti
das
ret
jp
cmc
mov
sahf
out
pop
xchg
or
add
ror
imul
sub
into
shrl
push
mov
ja
lods
cltd
ret
fmuls
in
inc
ljmp
icebp
mov
das
and
rorl
popf
mov
scas
push
ljmp
stc
sub
cld
inc
cmpsl
mov
sbb
cmp
pop
lods
ret
or
inc
rorb
dec
aaa
cmp
mov
test
push
jl
mov
nop
enter
out
mov
fwait
test
adc
stos
jmp
and
divl
mov
dec
clc
mov
sbb
pop
pop
mov
xchg
jge
pushf
loop
lods
fs
ret
push
push
pop
aas
js
fiaddl
push
push
les
dec
aaa
incb
jle
cmp
lret
add
insb
xorb
dec
lea
xlat
jmp
adc
lock
fidivs
imul
cmp
clc
clc
addb
lds
loopne
scas
fdiv
xchg
subl
scas
imul
add
ret
push
lds
add
sub
lret
lret
push
xchg
dec
mov
iret
into
push
mov
lahf
arpl
jo
sti
leave
into
call
in
clc
jnp
mov
mov
jo
cmpsb
xor
inc
sub
xchg
shr
aas
or
push
in
idivb
inc
mov
cmc
clc
xor
xchg
pop
es
adc
dec
jecxz
push
mov
fs
ret
and
movsb
pop
repnz
inc
mov
sub
out
idivb
xor
les
inc
mov
xor
sbb
mov
push
lds
ds
mov
mov
or
stos
pop
imul
dec
in
pop
out
daa
mov
stos
cld
dec
mov
xchg
daa
xchg
movsl
sbb
and
sahf
pop
jl
flds
fnstenv
icebp
push
dec
int3
repz
fsts
dec
sub
in
mov
cmpb
loopne
mov
nop
mov
dec
inc
out
ret
test
cwtl
xor
jp
test
cli
cmp
dec
rol
fmulp
les
sti
mov
xchg
loope
xchg
pop
cmpl
sub
mov
fwait
mov
jb
or
insl
jb
xchg
jne
rcrb
pop
sti
push
outsb
sbb
add
daa
mov
pushf
jmp
xchg
iret
dec
lock
push
data16
sbb
sbb
mov
ja
sub
shrb
sub
mov
pop
movsl
test
adc
sbb
and
xlat
push
sub
inc
jno
in
or
mov
and
xlat
lcall
scas
stos
fnstenv
cmc
iret
push
inc
cmpsb
mov
push
xlat
outsb
in
push
pop
mov
mov
dec
repnz
int3
cmp
jae
ficompl
das
fildll
sub
cli
out
addl
fcomps
aaa
les
jo
push
cmp
mov
and
lret
push
ljmp
rcrl
add
cmp
push
ss
xor
pop
shrb
adc
jne
pop
and
xchg
iret
xor
mov
fcomps
fwait
mov
jae
imul
fcompl
bnd
mov
std
jne
cmp
stc
insb
xor
iret
push
imull
adc
rorb
aam
sbb
int3
fidivrl
mov
into
xchg
call
mov
ret
xbegin
addr16
lret
mov
loope
out
jbe
cld
jl
ds
cmpsl
adc
popa
pop
ror
in
iret
std
mov
in
out
inc
pop
bound
stc
stos
fnsave
lcall
sbb
notb
mov
xchg
adc
je
and
adc
cmc
sub
popf
xchg
dec
push
xorl
scas
push
xchg
xchg
out
or
mov
call
sbb
push
stc
sti
pop
adc
mov
fs
rolb
xor
out
insl
xor
stos
push
or
cmp
jb
fmuls
dec
leave
movsb
push
jge
out
rorl
cmp
lods
xchg
lret
out
pop
cmpsl
xor
jne
dec
and
es
xchg
imul
xor
ret
cmp
dec
inc
icebp
push
pop
incl
popa
sbb
sub
dec
ficoms
mov
fwait
and
jle
sbb
cmc
jle
xor
int
cs
repz
sub
sub
popf
sub
push
mov
scas
sub
enter
push
sub
ljmp
shlb
mov
addr16
jo
xor
add
ret
or
push
add
cs
mov
enter
sub
orb
mov
mov
mov
pop
jb
sahf
rclb
xorl
icebp
mov
jle
call
sub
lcall
mov
or
lret
push
clc
pop
imul
push
dec
aas
dec
inc
cmp
xchg
xor
xchg
and
sbb
test
lds
push
inc
mov
cmp
mov
sbb
xchg
out
and
ljmp
lcall
jbe
cmp
sarl
outsl
mov
pop
jmp
xchg
out
int3
enter
rcrl
jmp
mov
push
xchg
mov
mov
das
mov
mov
pop
lds
mov
dec
inc
imull
and
or
jb
inc
mov
daa
cmp
or
stc
pop
cmp
loop
je
xchg
sub
fs
push
negl
les
shrl
jnp
movsl
push
shlb
adc
add
addl
mov
jmp
sub
aas
ds
dec
jmp
and
mov
icebp
outsb
in
std
mov
add
shrl
add
xor
mov
icebp
xchg
andb
pop
int
lret
push
inc
js
pushf
cmp
loopne
imul
jecxz
xchg
push
std
sub
xchg
movsb
mov
push
adc
xchg
xor
xor
lret
leave
int3
inc
adc
leave
in
jne
mov
xchg
mov
fs
in
adc
ret
adc
repz
add
mov
fwait
jge
iret
stos
fisubrs
sub
cmpsb
stos
inc
js
sbb
push
rolb
cltd
lock
scas
pushf
ds
push
mov
mov
fisubs
lcall
pop
sqrtps
or
xorl
xor
pushf
movsb
adc
inc
mov
lahf
test
cwtl
xchg
or
mov
fwait
movsb
in
inc
and
imull
loop
sbb
xchg
pop
inc
jae
or
or
in
cli
push
pop
pop
xor
jg
int
addb
stos
fucom
sbb
jae
lahf
cmpsl
cli
dec
notb
ja
inc
mov
test
xchg
inc
outsl
xchg
call
shlb
imul
dec
mulb
push
js
pop
sub
ja
cltd
xchg
mov
fldcw
dec
mov
cmc
inc
xchg
fldenv
jnp
cmp
mov
dec
jne
rcll
adc
push
inc
testl
popa
xor
fcomps
sub
and
iret
pop
divl
out
subb
add
ret
enter
fsubp
add
add
add
divb
pushf
adc
and
fstpl
xchg
pusha
xor
lea
adc
out
push
inc
insl
pop
shll
shlb
orl
push
jmp
dec
pop
add
inc
mov
jl
fldl
ja
gs
lea
jge
dec
les
and
and
sti
lret
push
es
and
cmp
push
sub
dec
xor
push
xorb
mov
adc
mov
repz
aad
loope
lret
mov
jecxz
fdivs
mov
push
push
js
lea
cmp
repz
lret
cmpsl
mov
cmc
mov
mov
cmp
pop
sub
dec
xor
arpl
inc
lret
repnz
dec
rorb
arpl
pop
sub
or
push
xchg
call
cmc
decl
mov
lock
add
arpl
jmp
je
mov
push
pop
sahf
lods
cmp
pop
xchg
rcll
sub
or
fisubs
insb
pop
daa
jo
jl
in
es
js
cmc
xchg
cmpsb
inc
adc
test
sbb
scas
and
dec
pop
scas
enter
push
sbb
addl
aam
dec
or
scas
lods
cmp
mov
pusha
dec
mov
int3
movsl
test
push
pop
shlb
xor
leave
cs
testb
mov
clc
push
mov
into
sahf
and
jecxz
lea
add
mov
mov
xchg
add
cs
in
dec
or
insl
shrl
fyl2xp1
ret
add
xchg
dec
outsb
aad
add
mov
iret
xor
mov
icebp
sbb
push
imul
sbb
inc
jl
inc
push
mov
mov
shl
jae
inc
pushf
jno
xchg
fisttps
stc
xlat
add
inc
mov
test
lds
iret
mov
sti
nop
leave
stos
test
out
inc
push
mov
push
data16
push
ds
mov
mov
xor
fnstenv
dec
cld
iret
lds
pop
mov
negb
adc
pop
xor
clc
mov
icebp
or
mov
and
mov
test
fnstsw
dec
fdivl
add
inc
cmp
cltd
xor
lahf
jmp
adc
and
and
mov
cli
xchg
push
fisttps
scas
dec
mov
lds
sti
in
and
push
mov
sahf
push
mov
xor
push
sub
icebp
hlt
movsb
ret
inc
out
inc
xor
jle
lds
mov
jo
add
nopl
mov
aas
mov
sub
pop
mov
mov
add
add
ret
les
js
and
jecxz
and
jb
cmp
jecxz
mov
imul
jns
outsb
cmpsb
fs
popf
nopl
int3
xor
jecxz
jl
cld
pop
push
sub
hlt
sub
add
ljmp
push
out
lock
adc
clc
and
lods
jb
dec
dec
mov
dec
or
sbb
int
inc
mov
sahf
ljmp
jl
hlt
add
jo
in
cmp
stc
add
repz
loop
arpl
pushf
ja
in
in
aam
sub
gs
mov
push
mov
pop
fistl
lods
bound
jno
insl
mov
xchg
pushf
rolb
inc
das
fisubl
mov
cli
loopnew
pop
inc
jmp
lock
sbb
ds
rcll
xor
test
sahf
arpl
mov
push
pop
add
mov
mov
repz
jno
repz
sbb
cmpb
js
sub
mov
push
loop
mov
sub
pop
fidivs
cmp
mov
add
stos
subb
add
jge
cmp
aaa
out
movsb
sahf
sahf
mov
inc
pop
lods
or
cmp
jge
dec
enter
sbb
ds
add
dec
push
xcrypt-ofb
cmpsl
lods
fwait
cmp
xchg
mov
popa
pop
test
cmp
sbb
push
movsl
in
and
addr16
outsb
mov
mov
cmpb
scas
pop
dec
mov
mov
or
lcall
cmp
pop
pop
ficomps
dec
xchg
cltd
stc
out
or
insb
fwait
mov
imul
push
push
jp
faddl
popf
clc
pusha
ds
xlat
mov
sbb
mov
xor
mov
inc
js
cmp
aad
aas
push
xchg
in
jge
fwait
lds
mov
cmp
or
movsl
adc
xor
in
insb
jg
iret
into
jle
mov
fcomi
lret
out
inc
mov
clc
roll
adc
adc
test
cmp
cli
mov
jo
shll
xor
gs
push
out
mov
dec
cmc
adc
pop
add
inc
movsl
xchg
aam
adcl
fiaddl
out
ret
outsb
push
stos
push
data16
mov
popf
xor
inc
xor
inc
movlhps
xlat
imul
jecxz
insb
jb
iret
int3
sbb
data16
scas
inc
pop
mov
xchg
insb
jb
popa
mov
or
push
and
mov
adc
aas
mov
aas
xchg
iret
call
push
cmpsl
lret
scas
rcll
call
inc
jle
mov
out
adc
or
loope
inc
out
cmp
sbb
mov
outsl
call
rolb
testl
xor
fsub
push
cmp
fstpt
lea
negl
inc
in
sbb
jmp
mov
inc
mov
popl
imul
mov
xchg
sahf
addr16
jl
pop
sti
jne
xchg
movsb
aas
insb
test
clc
xchg
jp
dec
add
cmp
or
sub
mov
mov
or
adc
inc
fldenv
inc
xor
imulb
jge
stos
pop
mov
es
insl
cltd
jae
imul
ja
cmp
add
roll
cs
aas
sbb
or
outsl
rorl
jno
add
and
add
sbb
mov
cmpsb
pop
pop
push
fcoms
sub
into
pushl
sub
mov
mov
jnp
adc
xchg
adc
dec
cwtl
stos
sub
inc
xlat
adc
insb
movsb
mov
push
xchg
push
mov
call
outsb
cwtl
mov
push
sarb
ror
xor
fistpl
adc
cmpsl
adcl
dec
das
int
mov
mov
pop
cli
jl
push
roll
xor
nopl
inc
jb
rolb
repz
je
or
push
cmp
inc
cmp
dec
jno
lods
and
in
scas
jmp
dec
out
xchg
sahf
mov
add
push
or
jnp
mov
lods
nop
add
lret
aaa
adc
std
lret
popf
mov
mov
pop
pop
or
adc
xchg
or
dec
add
push
adc
hlt
jb
fdivp
add
and
clc
or
pop
dec
addr16
mov
mov
mov
mov
inc
outsb
sbb
add
cld
test
add
das
pop
movsl
hlt
call
pop
and
iret
test
into
add
mov
add
xchg
xor
xor
sti
and
push
push
sub
js
xchg
enter
pusha
pop
mov
pop
in
push
or
out
test
inc
fists
sbb
dec
push
dec
add
inc
stc
les
mov
stos
or
jb
mov
jge
lea
push
shlb
push
push
xchg
rorl
push
mov
or
xchg
movsb
stos
mov
insl
push
mov
test
sub
test
lods
dec
cwtl
dec
scas
and
lcall
movl
pushf
mov
sbb
dec
out
sub
les
pushfw
imul
lods
or
bound
jae
movsb
inc
jnp
jb
stc
inc
sub
cmpsl
adc
sub
scas
es
cld
stos
ficoms
sub
mov
pop
jae
xor
jns
dec
adcb
clc
lret
shll
data16
gs
stc
cmp
inc
lods
std
mov
dec
mov
mov
js
lahf
xchg
adc
add
dec
xchg
mov
adc
nop
cwtl
xchg
loopne
daa
mov
sub
xor
lds
into
icebp
push
lret
hlt
cwtl
mov
insl
jbe
nop
adc
aas
jnp
subb
sbb
cmpsb
cmp
sub
jle
dec
push
fstpt
roll
sub
lcall
jbe
pop
adc
cmpsl
sbb
push
fwait
adc
icebp
fsubs
sbb
and
test
js
xor
out
rcr
dec
repnz
ljmp
aad
imulb
subl
or
icebp
enter
pop
int
pop
mov
pmaxsw
or
enter
push
push
sbb
mov
in
and
arpl
insl
movl
sub
add
shll
fidivs
jge
bound
sub
push
and
into
or
push
xchg
mov
loopne
mov
mov
in
mov
push
imul
push
pushf
adc
cs
dec
or
into
cs
cmp
lock
pop
movsb
push
pop
popf
pop
push
adc
outsl
orl
cmp
dec
xor
ss
and
out
sbb
cltd
std
xor
fwait
xor
sub
xchg
js
jg
add
adc
push
sub
jl
jl
enter
jnp
aad
das
mov
xchg
int
jo
mov
pusha
lock
ss
cmc
and
ror
push
rorb
jg
divl
sti
mov
mov
fwait
mov
sbbl
loope
ds
and
dec
test
je
jmp
sbb
pushf
push
out
jp
cld
add
neg
jl
les
and
jae
cwtl
pop
fisttpll
fcmove
aas
cs
sbb
and
add
mov
jecxz
lods
ss
movsb
xchg
xchg
subb
arpl
or
int
ret
mov
add
add
mov
aam
push
into
shl
jo
ds
push
mov
cmp
imul
jns
seta
into
vandnps
out
das
sti
pcmpeqd
xchg
lock
jmp
or
pusha
idivl
pop
xchg
adc
jg
dec
std
outsl
stos
sbb
cmpsb
adc
dec
cli
sahf
pop
jnp
pusha
mov
or
pop
fnstsw
mov
mov
mov
ret
leave
sti
adc
pop
mov
aaa
sbb
aaa
lds
push
sbb
xchg
cmp
jno
sbb
and
jns
or
jg
sbb
nop
adc
lret
test
inc
je
mov
and
loopne
sar
xchg
mov
xchg
push
lcall
fwait
mov
test
push
mov
and
fistl
lret
jle
cld
test
mov
and
into
stos
pop
xor
sub
lahf
es
add
and
scas
and
outsl
insl
scas
ret
xchg
and
in
imul
cwtl
nop
xchg
ja
not
cmc
or
mov
mov
in
dec
aas
xchg
add
sbb
mov
subb
add
and
es
mov
nop
popf
add
inc
xchg
lods
cmp
in
xchg
mov
rcr
push
jns
pop
int
icebp
in
adcb
sub
mov
push
dec
scas
inc
aam
jo
inc
popf
aam
jne
push
repnz
or
test
adc
fs
push
daa
in
mov
lret
cltd
popf
cmc
scas
add
mov
int3
add
mov
fs
mov
insb
fimull
stos
or
in
adc
push
movb
ret
inc
pop
fucomi
dec
imul
mov
cmp
rcrl
add
pusha
jmp
lods
dec
mov
inc
inc
pop
pop
iret
mov
movsb
pop
in
cmp
into
and
hlt
cwtl
add
xchg
orl
sbb
sub
jl
adc
adc
loop
push
enter
add
in
testb
push
xor
insb
add
adc
cmp
add
inc
stc
xchg
adc
test
adcb
fcoms
int
popf
movsb
and
sbb
ret
and
jb
test
arpl
and
or
push
and
js
jge
mov
dec
jp
sahf
je
and
xchg
int3
sbb
icebp
jmp
cmpsl
xchg
dec
or
lods
std
jg
aam
das
jle
in
add
out
imul
shrl
dec
pop
icebp
outsb
sahf
les
xor
sbb
subl
movsb
js
jl
push
int
push
nop
xorl
out
pop
adc
outsl
xor
inc
orb
sub
or
cmp
mov
jb
in
xlat
cmp
sub
ret
or
outsb
ljmp
adc
push
add
push
std
addr16
cltd
cmp
insb
fdivrs
aaa
leave
cmpsl
mov
fwait
cmp
or
hlt
mov
notl
mov
pop
aam
or
jbe
test
and
add
inc
lea
std
mov
mov
ds
jge
test
jb
lds
cs
mov
dec
add
iret
mov
xchg
fs
mov
subps
sbb
add
sub
loope
repnz
int
push
mov
mov
cmpb
stc
sti
hlt
adc
test
inc
repnz
sub
inc
cmpsb
filds
outsl
lock
lods
stos
adc
dec
dec
cmp
test
pcmpgtd
xchg
xorl
fwait
or
adc
inc
out
sahf
sub
cmp
jbe
add
cwtl
fs
add
inc
lds
jno
cltd
pop
cmp
mov
loop
xor
ja
sub
sbb
push
adc
icebp
out
out
mov
dec
xchg
inc
repz
xor
mov
pop
or
cltd
adc
xor
lret
pop
sub
mov
mov
lds
aad
jbe
out
andb
adc
js
and
and
add
sub
cmpsl
jno
lret
mov
je
es
dec
int3
push
hlt
sbb
mov
sub
jmp
pop
stos
or
adc
xchg
fldenv
ja
frstor
std
dec
shl
pop
xor
test
or
mov
push
popa
outsl
aad
call
jbe
adc
dec
adc
movsl
mov
fsubr
outsl
test
mov
out
adc
mov
test
or
int
jae
clc
shlb
inc
in
jo
pop
lods
lods
jb
push
sbb
inc
movsb
sub
add
fucom
ja
push
sbb
dec
out
retw
test
add
out
cld
sub
inc
iret
add
inc
clc
mov
ffree
lret
mov
sbb
pop
int
pop
fstpt
fs
and
xchg
inc
psraw
fildll
ret
xchg
sahf
add
xor
scas
jae
mov
aad
ret
jl
mov
repz
ljmp
inc
xchg
dec
xor
outsb
roll
mov
jg
mov
cli
mov
nop
sub
aas
jne
xor
imul
fmul
cli
mov
imul
or
xor
pop
xchg
daa
js
jl
rorl
mov
call
scas
jns
jnp
push
clc
insl
jmp
mov
loop
icebp
dec
sarb
out
addl
imul
rclb
daa
aas
cmp
mov
sbb
sbb
sub
jbe
cmp
shlb
hlt
jb
lock
in
test
out
xchg
jp
xor
or
and
pop
jnp
int3
lods
out
enter
in
mov
in
lahf
or
sub
mov
fadd
fdivr
xchg
lret
pop
sti
std
popf
lcall
cmp
pushf
mov
mov
jmp
push
mull
cmp
mov
stos
mov
mov
mov
pop
jg
cmpsb
mov
lret
in
push
insb
jb
cmpb
popf
sub
xchg
and
loope
dec
mov
popf
adc
mov
push
mov
pop
adc
push
mov
pusha
lds
xchg
int
fwait
sub
movsb
out
push
sub
cwtl
mov
or
sub
bswap
movsl
js
adc
stos
mov
mov
push
clc
mov
fdivp
xchg
enter
push
test
sbb
or
push
cltd
je
mov
leave
aaa
imull
jns
xor
jae
push
outsb
xor
test
sub
loopne
imul
inc
xor
xchg
mov
push
xor
negb
mov
aad
mov
pop
icebp
and
fs
inc
lret
adc
mov
mov
xchg
mov
ficoml
sub
in
sbb
aas
push
xchg
xor
movsl
shlb
sti
xchg
js
lock
xor
push
in
aaa
jecxz
push
sub
idiv
add
outsb
mov
sub
ja
insb
push
aaa
dec
addr16
fldenv
xchg
cmp
sbb
mov
cmp
fwait
xor
inc
cmp
inc
arpl
pop
or
bound
shlb
jno
jns
test
pop
adc
ljmp
repz
and
ds
int
or
xor
mov
repnz
jmp
fstl
lods
jbe
shlb
add
or
out
jae,pn
inc
out
jo
fwait
icebp
sarb
add
pop
push
dec
adc
aad
mov
movsl
mov
xchg
lods
xchg
pop
or
or
fcoms
lahf
dec
shrl
es
xchg
lock
pop
bound
in
ret
cmp
cwtl
dec
in
cmp
lret
mov
dec
xor
scas
and
push
stos
push
xor
test
adc
xchg
mov
jmp
sarb
lods
xchg
popf
adc
inc
call
cmc
insl
jno
jbe
xor
inc
insb
push
mov
mov
cmp
add
inc
fistpll
xchg
faddl
sub
or
jle
test
aad
adcl
xchg
fidivrs
mov
clc
jbe
cmp
fdivrs
mov
clc
push
mov
daa
addb
aas
insl
and
dec
sbb
sbb
cmp
and
sub
dec
inc
inc
fnstsw
mov
sub
sub
sub
test
sbb
frstor
push
mov
mov
adc
hlt
or
test
add
in
push
mov
cmp
pop
lea
xchg
push
fidivs
sar
xor
mov
fistpll
test
cwtl
mov
addl
jl
pop
insb
jb
scas
pushf
cmp
cmp
sbb
mov
arpl
cmpsl
inc
out
fimuls
push
hlt
imul
lcall
nop
pushf
negb
xor
hlt
inc
sahf
in
jmp
sahf
pop
dec
inc
ret
or
cs
push
js
jno
aaa
loop
sbb
xor
dec
and
push
mov
adc
inc
loopne
dec
gs
out
jbe
push
jl
pop
inc
push
ret
pop
pop
mov
sub
in
pop
das
aaa
movsb
ss
dec
dec
mov
leave
jnp
xor
sahf
sarb
pop
aaa
pop
mov
movsl
movsl
mov
shll
out
xor
nop
adc
and
in
inc
sbb
cmp
data16
lret
mov
cli
jg
mov
icebp
sub
lcall
aam
fadds
adc
mov
movsl
xor
insb
cmpsl
pop
mov
mov
jb
xor
ljmp
xchg
test
pop
mov
and
leave
mov
ss
test
push
cmp
es
aas
aaa
loope
dec
enter
xchg
mov
fiadds
mov
shr
mov
sbb
pop
insb
jnp
ss
aas
sarl
lea
jecxz
call
das
cld
fnstenv
fcmovne
inc
inc
jmp
adc
loope
or
pop
cltd
mov
lea
push
dec
fisttpll
scas
hlt
repnz
in
dec
lcall
out
cmp
repz
sbb
xor
mov
outsb
add
das
add
xor
cmpsl
adc
test
mov
ret
repnz
lcall
push
mov
daa
push
push
and
mov
jg
mov
shlb
js
push
mov
mov
insl
xlat
mov
jmp
or
in
mov
flds
mov
add
into
aaa
sbb
pop
dec
popf
and
icebp
sbb
dec
fucomi
xchg
je
jbe
dec
mov
subl
int3
cltd
stos
les
aam
jge
notb
ftst
into
sub
loopne
push
sti
lret
adc
shlb
outsb
cmc
andl
incl
sti
inc
mov
add
cmp
scas
stc
cmc
push
rcrl
mov
adcl
xchg
adc
xorl
xlat
mov
jo
mov
fidivrs
into
subl
xchg
xor
incl
dec
pop
push
notl
imul
roll
fstps
test
xchg
xor
es
and
ret
iret
xor
xchg
enter
pop
jne
int3
stos
loopne
insl
mov
dec
aam
push
jo
cli
std
push
add
fmuls
test
push
in
xchg
push
dec
adc
outsl
dec
add
test
jge
xor
mov
aam
lea
shlb
add
adc
in
cltd
cmp
cmp
lea
int
enter
inc
adc
fmuls
scas
push
movsl
sub
in
push
push
nop
data16
push
repnz
adc
orb
movsl
dec
dec
nop
xchg
insb
mov
lret
cmp
pop
repnz
sub
int3
mov
dec
int
out
or
cmp
lcall
lret
dec
xchg
pop
fwait
stc
push
ficoml
data16
out
bound
add
sahf
xor
pop
stos
scas
or
ja
ja
push
mov
out
lods
hlt
imul
push
jge,pn
xor
data16
cld
dec
push
imul
cmp
pop
es
pop
or
repnz
frstor
or
jg
insb
jae
xor
and
adc
lock
xor
add
cli
sbb
ror
adc
in
mov
jne
mov
test
lret
fprem
adc
cli
lock
es
lret
iret
bound
popa
push
mov
pop
jne
or
fcompl
push
test
das
jno
lret
bswap
insb
nop
and
icebp
int
in
mov
xchg
dec
out
push
imul
pop
inc
jbe
sahf
sbb
rclb
movsl
in
mov
inc
loop
sub
pop
sar
or
stc
popa
scas
js
pop
or
fiadds
stos
lret
test
cmpsl
and
sub
sbb
xor
loopne
cmp
dec
cmp
push
and
flds
int
and
xor
pop
jno
fs
pop
mov
pcmpgtd
rcr
add
fsubrl
cld
ljmp
sbb
femms
enter
pop
xlat
add
fildll
lret
insl
shrb
or
jno
sub
int
fiaddl
clc
aam
mov
into
jmp
and
insb
xor
mov
sub
jae
popa
push
mov
shll
testb
ljmp
pop
mov
xor
sub
ret
mov
cmp
push
jno
loope
mov
leave
mov
mov
mov
jmp
mov
or
mov
push
loop
or
xchg
hlt
jle
mov
mov
add
sbb
xchg
imull
movsb
fbld
pop
fcmove
add
add
js
xor
mov
jecxz
dec
cmc
jae
clc
jb
and
pushf
ja
ljmp
decb
es
adc
push
inc
adc
negl
ffree
add
xchg
inc
pop
add
and
pushf
sub
dec
and
add
xchg
add
mov
fisubs
jl
loope
pop
jns
xchg
mov
or
in
mov
sbb
ret
fldl
dec
adc
ds
aad
scas
mov
je
push
insb
lds
hlt
and
push
mov
stos
scas
test
jb
fwait
xor
xchg
and
rclb
cmpsl
shlb
sahf
add
sub
inc
add
dec
scas
loopne
xchg
and
ret
adc
mov
cmp
add
loop
data16
jl
mov
sbb
es
cmp
fs
push
sbb
sbb
mov
xchg
jnp
icebp
les
aaa
out
or
repz
scas
inc
movsb
cmpsl
and
xchg
xchg
xor
divb
push
roll
sahf
add
or
pop
ret
push
outsb
adc
cli
sbb
sub
cmpsl
testb
lret
test
mov
outsl
roll
fdiv
pshufw
and
ds
jl
or
test
pop
add
mov
adc
insb
mov
mul
pop
xchg
mov
mov
add
leave
outsl
inc
hlt
fmulp
mov
sti
arpl
adcl
scas
xor
or
cmc
jno
and
and
add
into
aam
mov
data16
push
in
sahf
hlt
sarb
xor
push
movsb
push
cwtl
mov
adc
lds
test
mov
push
xchg
ja
sbb
cmpsl
or
jne
and
js
ss
fmul
mov
xlat
push
lret
mov
outsb
stc
sahf
dec
and
fdiv
push
and
dec
aaa
jo
repnz
sub
jne
sbb
les
sbb
mov
cmp
push
push
mov
repz
into
aas
or
xor
pop
inc
xlat
push
iret
push
imul
popa
insb
cmp
mov
mov
sbb
mov
jnp
jns
sub
aad
xchg
push
adc
stos
cmp
lret
add
jb
imul
mov
adcb
mov
test
ret
mov
inc
ljmp
and
push
cmp
push
jo
mov
mov
stos
and
test
pop
dec
call
fstps
cmp
mov
fnsave
leave
push
jl
dec
mov
stos
push
and
fs
loopne
dec
scas
incb
jae
cmpsb
push
inc
out
sahf
cltd
mov
adc
push
loopne
pop
or
push
shrb
ficomps
cmp
push
fidivs
test
mov
or
lret
jbe
mov
orl
xor
cs
dec
imul
xchg
pop
ljmp
mov
jmp
push
and
adc
push
mov
xor
in
mov
inc
repz
ret
mov
fwait
das
int
shll
cld
push
and
and
or
enter
or
fimuls
cs
and
mov
push
mov
inc
and
ficoms
mov
pop
addr16
mov
mov
mov
outsb
add
add
pop
jb
mov
mov
xchg
test
outsl
ds
inc
test
cmovg
dec
cmc
adc
sub
and
sub
daa
test
xor
leave
lret
xchg
pop
mov
xor
shrl
fwait
xchg
push
mov
add
cmp
or
sub
nop
bound
and
jo
je
sub
fldt
push
mov
cmp
int3
negl
pop
cmp
jae
je
fldenv
test
sub
popf
leave
movsl
inc
dec
pop
cmp
adc
int
fwait
stos
inc
repnz
adc
push
notb
or
fiadds
adc
jne
data16
pop
movsl
test
mov
push
and
rclb
push
xlat
cmp
int
mov
enter
sbbl
decb
cli
shr
sub
sbb
add
in
jle
movsl
leave
das
pop
cmp
jae
sbb
enter
mov
jp
jmp
leave
je
add
stos
fcomps
out
sbb
arpl
int
fcmove
xor
push
lret
or
jo
fsubrl
xchg
mov
sti
fisubrs
addr16
mov
mov
lahf
jg
sub
cmp
xor
add
or
enter
adc
jnp
clc
inc
xchg
sbb
adc
and
out
lea
cmp
cmp
sbb
inc
jecxz
xor
in
adc
mov
adc
mov
and
rclb
mov
jo
jmp
test
pop
cmp
mov
movsb
pop
in
mov
pop
push
lods
and
jg
pop
add
mov
or
adc
push
aas
mov
imul
les
jp
xor
nop
jns
inc
call
or
pop
lds
dec
inc
enter
jns
lods
lea
das
pop
outsb
xor
xor
pop
mov
dec
xchg
adc
es
pop
imul
dec
fmull
lods
push
out
imul
test
dec
repnz
roll
sub
nop
dec
aas
mov
xchg
jl
push
test
adc
push
int
add
cwtl
icebp
inc
mov
out
into
mov
push
out
imul
orb
aad
imul
bound
iret
sub
dec
pop
push
add
cmp
push
sbb
roll
mov
jl
cmp
out
or
pop
imul
loope
mov
push
push
movsl
pop
mov
imul
cmp
sub
and
and
sub
shlb
leave
fiadds
cld
cwtl
fidivrl
nop
and
sbb
loop
je
dec
sbb
cmpsl
or
movsl
rclb
jo
test
fwait
mov
push
xchg
sti
rolb
mov
mov
or
pop
xchg
jmp
mov
icebp
and
loope
sti
mov
flds
je
fstps
cli
setne
repnz
mov
imul
cmc
testl
ficoms
pop
lret
and
add
sti
dec
repnz
xor
jmp
inc
fisubs
ss
pop
jle
cld
out
or
and
cmc
xchg
jne
sub
push
int3
imul
pop
cmpsl
sub
test
std
pop
dec
add
mov
popa
sbb
mov
cmpsb
ljmp
xor
push
add
insb
xor
push
outsl
xor
and
rcrl
fistpll
mov
xor
dec
in
sbb
jne
lock
add
xchg
popf
jne
sub
scas
aad
mov
adc
inc
add
lds
adcb
test
inc
pop
inc
cmpl
scas
cmc
rolb
dec
test
xchg
sbb
jecxz
sbb
hlt
dec
adc
dec
push
lds
aaa
mov
pop
loop
push
inc
mov
xchg
jbe
sbb
icebp
sbb
test
cmovb
popf
mov
cmp
sbb
or
inc
dec
loop
xor
xchg
push
sbb
rol
sbb
push
pop
in
and
mov
cmp
ljmp
mov
aad
xchg
out
jl
push
inc
xchg
mov
insl
stos
and
jne
pop
and
dec
femms
sti
or
in
cmp
std
fs
xchg
out
or
mov
dec
nop
into
jle
jae
mov
jns
int
sub
sbb
data16
xchg
and
push
jbe
adc
shlb
or
jo
cld
sub
sub
cmc
lcall
lcall
popa
test
cld
jb
sbb
mov
inc
insb
add
pop
push
aas
movsb
or
mov
push
mov
dec
test
sub
test
sbb
leave
subl
arpl
mov
sbb
inc
lret
lret
sbb
ret
test
pop
enter
icebp
sarl
pop
out
adc
fcmovnb
sub
jecxz
push
push
add
lds
xchg
out
shrb
arpl
repnz
jnp
decb
daa
dec
or
inc
cwtl
xlat
xchg
aad
xchg
test
mov
inc
xlat
push
mov
or
scas
pop
das
mov
add
pop
cs
out
jns
xchg
loop
loop
jno
mov
lahf
insl
or
lods
hlt
adc
push
je
mov
cmp
push
std
shrb
popa
add
dec
mov
out
mov
cld
pop
pop
scas
sbb
jmp
sahf
jnp
push
sub
inc
pop
adc
xlat
xor
insl
jle
mov
fbstp
loop
out
sbb
jmp
testb
fbstp
rcr
and
mov
mov
pop
inc
enter
out
div
out
cs
push
and
sbb
push
pop
cli
mov
pop
pop
in
jns
dec
shl
inc
ret
sub
xchg
iret
or
rcll
ljmp
push
add
cmpsb
mov
data16
and
push
mov
shlb
xchg
pop
jnp
stos
mov
mov
hlt
mov
jge
push
pusha
shrb
arpl
fistl
jg
inc
jbe
or
inc
incl
insb
lcall
adc
je
xchg
push
mov
dec
test
mov
rcrb
scas
nop
clc
jb
rorl
jmp
outsl
test
cwtl
cltd
push
dec
mov
popf
rcrb
and
inc
inc
dec
and
stos
sbb
xor
mov
or
sub
add
add
mov
pop
dec
imul
loopne
jno
sbb
icebp
xchg
sub
sti
xor
jmp
pop
add
and
or
hlt
fucomip
and
inc
xor
mov
pop
mov
push
setno
fcmovnb
ljmp
sbb
push
jo
int3
lods
stos
mov
add
and
adcl
lea
shr
pop
and
lods
inc
push
out
sbb
jmp
cmp
mov
movb
pushf
inc
jns
pop
jne
or
and
insl
adc
xor
or
fcoms
jne
imul
jb
loop
mov
pop
stos
imul
and
pop
std
inc
xchg
out
leave
push
xor
sub
mov
mov
insb
xor
sbb
sbb
cmp
jge
xchg
add
int3
mov
out
mov
xchg
scas
ds
push
push
xchg
xchg
push
rorb
cmp
cmpsl
pop
mov
aaa
sti
int
add
push
out
mov
iret
pop
sbbl
call
repnz
cwtl
xchg
lock
cmp
lahf
jbe
mov
mov
pop
xchg
cmp
push
scas
sub
jno
fnstcw
sbb
jb
push
das
dec
add
inc
inc
sub
popa
sub
aaa
stos
sbb
xor
mov
pushf
mov
or
fiadds
or
pop
push
push
dec
iret
daa
push
nop
icebp
push
cli
push
pop
xchg
std
sub
pop
jb
dec
push
push
imul
mov
insb
xor
mov
cli
cmp
and
jns
push
jns
rolb
pop
out
outsb
jo
mov
mov
fisubrs
fwait
sbb
ds
cmpsl
adc
mov
pop
pop
into
mov
or
clc
dec
sahf
mov
mov
mov
jmp
jecxz
movsb
xchg
rcrb
inc
inc
out
loopne
arpl
rcrb
inc
fwait
jecxz
xor
sbb
lock
cld
repnz
push
cltd
or
and
mov
jbe
jle
mov
je
sbbb
pop
sti
je
dec
mov
xchg
sub
stc
lock
lea
int3
push
sbb
inc
movsb
mov
mov
jmp
out
pop
scas
adc
in
int
fwait
test
test
adc
cmp
adc
sbb
mov
jl
repnz
lods
mov
jo
push
xchg
lcall
and
aam
addl
cmc
lret
into
int
sub
push
punpckhdq
cld
xchg
pop
cwtl
flds
push
ficomps
and
bound
andb
push
jmp
aad
dec
dec
mov
rolb
arpl
dec
adc
jge
xchg
adc
out
mov
mov
in
movsb
sahf
popf
inc
out
or
cmp
push
loop
inc
push
dec
movsl
jg
shll
ja
jb
push
movsb
gs
sarb
jae
mov
test
scas
andb
inc
mov
adc
ds
mov
jo
loope
inc
sub
pop
and
push
loop
pop
jo
cwtl
dec
and
push
or
xor
add
mov
sahf
cmpsl
bndldx
jl
bound
inc
xchg
lds
ret
cmp
sahf
jge
dec
out
mov
sbb
rorb
inc
cmp
sbb
int3
inc
cli
and
pop
mov
fstps
dec
mov
cmp
and
ja
shl
mov
sbb
sbb
pop
outsb
dec
in
lret
outsl
insl
addr16
sti
jo
cmp
aas
xor
psubusw
jnp
jns
jp
push
and
ljmp
testl
pop
sub
dec
sub
loopne
mov
popa
and
xor
push
aaa
inc
cmp
gs
xor
lret
ljmp
sbb
dec
insb
imul
clc
lret
sbb
xchg
mov
filds
or
in
mov
xchg
rol
add
gs
push
aaa
mov
repz
cltd
pushf
push
scas
ficoms
add
adc
fwait
fs
loop
add
xor
lret
call
xchg
lock
adc
data16
aad
and
data16
mov
in
rorl
dec
jns
push
fisubrl
inc
jb
leave
cmp
sbb
inc
fsubs
cmp
lea
daa
dec
sbb
pop
jno
xchg
dec
dec
pop
cmp
sahf
loop
or
push
repz
lea
aad
pop
pop
inc
pop
int3
fstpl
add
mov
mov
cmpsl
sbb
mov
cmpsb
mov
stc
mov
cmp
call
shll
imul
jnp
pushf
xchg
in
std
add
sbb
pop
insb
sbb
dec
fdivl
xchg
mov
dec
pop
sbb
movsb
cltd
pop
jmp
cmp
sub
psubsw
xorl
xchg
lea
ret
shrl
mov
orb
repz
dec
inc
push
insl
or
lahf
sbb
ss
push
in
xor
inc
dec
jo
roll
insb
lods
or
in
inc
aas
and
sub
and
jle
push
ds
add
pushf
adc
and
mov
test
mov
sbb
jl
pop
cmpl
pop
aam
mov
aas
mov
adc
lea
arpl
shlb
mov
pop
push
subb
scas
cmp
inc
in
daa
jae
in
stc
jmp
inc
and
inc
or
ja
ljmp
xchg
or
pop
sbb
fstpl
sbb
popf
mov
pop
cmpsb
fs
jnp
jecxz
mov
mov
outsb
jmp
les
cmp
aad
xchg
mov
cmp
xchg
pop
jle
cmpsb
push
xchg
mov
jnp
hlt
lret
pop
mov
cmc
mov
loop
sub
sbb
ja
imul
mov
jb
clc
pop
pop
ljmp
dec
cmpsb
sub
movsl
mov
pop
fmull
bound
test
xor
cmpsl
jmp
leave
xor
out
inc
fldt
lret
mov
xor
out
add
add
dec
push
xchg
cwtl
insl
popa
cmp
shl
cmp
xor
je
popa
repz
pop
stos
xchg
leave
aad
ret
add
jecxz
sbb
into
pop
push
gs
adc
xor
inc
out
xchg
aad
mov
sbb
outsb
push
pop
push
sbb
pop
out
aam
adc
and
pop
movsl
inc
or
mov
insl
jnp
xchg
int
dec
jg
sbb
cmp
adc
jno
lea
mov
jl
push
mov
pusha
idivl
rorl
inc
loopne
rclb
dec
xchg
adc
and
ljmp
sub
pop
xstore-rng
cmpsl
inc
in
adc
movsb
xchg
inc
into
cmp
pop
pushf
jne
inc
or
xchg
jg
movsl
jecxz
adc
pop
mov
mov
imul
nop
out
lods
pop
mov
dec
jne
movsl
sysenter
xor
jb
jl
xchg
sub
and
mov
push
outsl
and
inc
mov
mov
sub
pop
cmp
mov
call
jmp
cmp
sbb
popa
inc
std
ja
or
add
mov
daa
push
pop
xor
mov
add
insb
push
or
sub
fmull
pop
dec
mov
add
cltd
add
sahf
xchg
mov
dec
sbb
aam
ret
or
lret
mov
pop
mov
les
int
jp
lret
sbb
pop
adc
adc
fisubrs
mov
lcall
push
pop
mov
push
cwtl
popa
jg
mov
xchg
aas
daa
dec
adc
int
repnz
jmp
sub
pop
imul
sbb
mov
mov
jns
lret
or
cmpsl
notl
ss
and
cmp
imul
xchg
pop
xchg
cwtl
pop
pop
lods
jge
jecxz
xor
mov
mov
repnz
lcall
stos
jns
movsl
push
shlb
fadds
scas
jnp
push
mov
or
pop
mov
pushf
imul
in
out
scas
or
adc
or
mov
jbe
je
call
sub
loop
leave
dec
or
into
push
lds
iret
sbb
in
dec
stos
mov
and
loop
dec
jge
cltd
fisubs
inc
jg
movsb
mov
add
fwait
pop
and
gs
xchg
push
mov
mov
fnstsw
cmc
push
inc
inc
cmpl
or
xchg
sub
push
sbb
stos
xchg
rolb
inc
or
and
lods
push
inc
jmp
sarb
cmp
nop
jb
add
stos
test
cld
cmp
lcall
or
mov
jecxz
mov
aaa
push
dec
jl
shl
mov
shl
clc
xchg
pop
add
shlb
jae
push
adc
adc
pop
rol
xor
into
push
lret
call
push
js
mov
dec
in
dec
mov
push
xchg
jecxz
sbb
push
push
sub
mov
rcll
lea
test
mov
pop
fwait
aad
aad
add
dec
mov
imul
dec
decl
jo
sbb
cmp
out
add
movsl
xor
sbb
cltd
les
sub
cmpb
push
decl
orb
jecxz
pmaxub
sbb
push
mov
test
lds
nop
jecxz
sub
das
dec
icebp
dec
xor
sbb
shll
aad
pop
mov
add
mov
cmp
lock
adc
clc
lahf
dec
mov
inc
sbb
and
and
fstpt
lcall
push
xor
push
nop
jecxz
ds
fistps
leave
mov
lcall
aas
stc
mov
and
mov
xchg
mov
push
das
dec
stc
fsubrs
lret
shrl
lret
movb
adc
inc
pop
hlt
clc
cmp
data16
mov
clc
call
insb
push
mov
push
inc
mov
mov
icebp
push
sub
xor
mov
ss
dec
sbb
pop
or
aad
bound
inc
int3
idivb
jns
outsb
push
push
push
fbld
xor
aaa
sahf
push
inc
and
mov
dec
fmul
je
mov
lock
in
lret
icebp
notb
mov
xchg
cs
pop
fidivl
scas
jbe
mov
jo
cli
js
out
sbb
sbb
shlb
cmp
adc
imul
test
call
xorl
js
daa
xor
pop
mov
and
iret
or
leave
and
lret
mov
test
pop
inc
pop
sub
xor
scas
xor
xchg
cmp
std
pushf
adc
jmp
inc
hlt
adc
stos
jg
jmp
int
mov
mov
lahf
inc
enter
mov
xor
xchg
loop
pop
lods
cwtl
jg
pop
xchg
inc
mov
adc
test
dec
jl
pop
xchg
jns
lcall
les
push
test
test
or
in
dec
push
aam
xor
aaa
push
and
imul
and
fnstsw
jl
movsb
scas
push
fiadds
adc
imul
sahf
pop
xor
jg
jo
test
jmp
sahf
cmp
dec
mov
aas
fcoml
push
adc
das
cmp
iret
inc
fs
add
push
or
ds
sbb
bound
mov
sbb
sbb
cmp
aam
or
cmp
mul
out
call
mov
jb
or
hlt
in
inc
lea
imul
stos
xchg
cltd
mov
test
jae
dec
sbb
cltd
mov
ljmp
dec
cld
sub
adc
sub
jg
aaa
fbstp
xchg
add
mov
loop
pop
mov
push
loop
inc
mov
mov
pusha
test
insl
xlat
lret
mov
cli
xor
outsb
xchg
lods
in
pop
fistpl
push
pop
jmp
rep
and
add
add
jo
mov
xchg
jns
add
pop
mov
sub
sar
inc
mov
push
imul
dec
xor
mov
and
add
and
or
mov
sbbl
fs
lret
jnp
out
sbb
mov
jb
pop
sbb
leave
scas
xor
sbb
sub
pop
cwtl
cwtl
mov
adc
mov
add
inc
mov
and
ss
movsb
scas
rorb
fldenv
mov
call
adc
call
jae
push
test
mov
icebp
dec
cld
ljmp
sbb
mov
or
pop
mov
dec
sub
mov
and
out
or
add
out
cmp
sbb
rcrl
andb
or
fisubrl
push
dec
stc
in
cld
xor
cli
push
push
mov
ror
fwait
orb
aaa
ret
addr16
add
mov
je
mull
push
pop
mov
xchg
mov
enter
pop
lahf
int
mov
dec
xchg
jbe
scas
scas
lea
inc
ficoml
jns
pusha
sub
xchg
mov
push
and
icebp
jmp
test
bsf
sbb
or
mov
rorl
pop
ds
sub
cmp
or
loope
int3
rorb
lods
mov
sub
lock
cs
mov
jne
in
push
sti
xor
push
lea
push
std
out
xor
add
sub
out
loop
mov
pop
popf
inc
fdivl
je
mov
jmp
mov
icebp
aas
aas
sub
jp
mov
adc
sbb
ljmp
push
jecxz
icebp
cmp
fcmove
ficompl
ljmp
xor
or
js
sahf
loop
fistps
dec
mov
mov
adcl
xchg
push
jne
sti
xor
push
fstl
sar
cmp
push
ret
js
sbb
mov
xor
sub
in
stos
cmp
insb
push
or
dec
das
loop
pop
mov
xchg
jl
outsb
dec
sbb
adc
lock
lcall
or
push
mov
inc
sub
les
rcrl
jb
and
repz
inc
xlat
pop
and
dec
popa
add
add
mov
repz
stos
xor
sub
sbb
dec
mov
les
pop
push
stc
jge
cmpsb
mov
jge
pop
es
sbb
jp
xchg
ds
repz
mov
loop
xorb
lahf
inc
jg
cmp
mov
es
into
fnstsw
nop
rcr
mov
push
jg
mov
test
and
fdivrs
int3
xchg
jg
or
shlb
pop
and
sarb
mov
mov
adc
xchg
sti
pop
stos
aas
jecxz
mov
lcall
push
fcomp
add
lahf
sub
sarl
es
out
mov
in
mov
adc
int
or
inc
adc
cmp
push
push
add
in
dec
test
sub
call
sub
sahf
sbb
lcall
bound
push
xlat
fwait
aas
mov
hlt
sbb
fcomps
jno
xlat
sti
push
movsl
xchg
aaa
enter
fincstp
mov
insb
xadd
and
das
jmp
js
pop
or
push
push
inc
sub
cltd
adc
xor
or
cmp
add
lahf
push
dec
pop
andb
sbb
pop
mov
jns
pop
je,pt
pop
pushl
outsb
ret
sbb
inc
mov
xchg
mov
pusha
gs
lds
or
outsb
xchg
pop
mov
and
and
cmpsl
push
xchg
sahf
cmpsb
dec
daa
fsubp
fcoms
aad
in
add
scas
dec
adc
sti
hlt
fstpt
mov
mov
es
push
inc
and
adc
int3
daa
pop
sbb
pushf
pop
and
pusha
dec
pop
gs
mov
adc
cltd
sbb
adcl
add
jno
pop
jge
adc
push
pop
aam
into
shlb
out
sarl
in
mov
adc
pushf
add
push
mov
sbb
dec
pop
out
or
add
popf
mov
pop
push
pop
mov
lahf
and
lcall
push
fnstcw
punpckhdq
jmp
insb
pop
inc
es
push
add
jne
jnp
lahf
imul
cs
mov
stos
sub
mov
test
in
jge
stc
fldl
jmp
jp
mov
dec
xchg
hlt
fisttpll
scas
repz
fists
jne
adc
sar
int3
bound
idiv
addl
test
sbb
aaa
daa
fnsave
sahf
sub
stc
sbb
shll
mulb
adc
push
xchg
jecxz
daa
lahf
mov
or
or
ds
lea
jbe
pop
test
int3
mov
fnstsw
mov
xchg
xor
mov
pop
loopne
inc
fnstenv
cli
ja
stc
push
stc
mov
daa
pop
lock
insb
inc
xchg
out
or
push
mov
jae
shll
addr16
sbb
fnstsw
jne
mov
add
or
xor
push
sbb
sub
push
adc
dec
call
sub
sub
sbb
mov
int
push
insb
cmc
jnp
mov
aad
dec
sub
insb
inc
ss
out
add
cli
and
sbb
cltd
lock
cmpsl
pop
sbbl
mov
xchg
sub
cltd
lds
roll
gs
jmp
cmc
movsb
sbb
xor
xchg
je
xchg
shll
push
pushf
in
lds
add
or
int
lods
imul
mov
int3
sbb
xor
add
hlt
adc
xlat
andl
mov
push
cmpsl
movsl
in
iret
inc
xchg
and
popf
pop
sbb
paddusb
pop
mov
jmp
xor
mov
and
ja
xlat
into
mov
shlb
ja
add
sbb
int
jg
ret
cli
xchg
cs
test
outsb
fcmovu
fcmovb
popa
sub
xor
mov
push
sub
and
insl
jecxz
leave
dec
dec
sub
sbb
lret
add
jb
xor
xchg
xlat
js
les
or
sbb
imul
leave
pop
push
add
fdivrp
xor
dec
or
mov
mov
ret
sbb
scas
inc
movsb
mov
pop
pop
inc
mov
lea
jno
mov
jbe
xchg
and
jecxz
push
jno
push
sti
add
xor
and
dec
add
push
rorl
shl
in
popa
or
sti
inc
nop
sub
scas
loopne
adc
lret
rcl
or
xchg
add
cwtl
in
adc
clc
mov
and
fsub
sarl
mov
in
push
enter
repnz
adcb
or
and
scas
cli
push
aad
out
shlb
add
jg
stc
xchg
sbb
roll
xchg
leave
sbb
xchg
pushf
cwtl
ret
std
lret
in
xor
jmp
or
xor
jo
sub
mov
in
into
addr16
jo
sub
rorl
jp
or
sub
adc
dec
testl
dec
aaa
fildl
test
ret
inc
cmp
cwtl
jecxz
fidivrs
mov
mov
pop
movsl
ja
inc
mov
mov
les
jbe
mov
xchg
imul
dec
mov
mov
flds
mov
xchg
test
lods
mov
mov
aam
pop
inc
stos
xchg
or
sub
jnp
cmpsl
sbb
pop
sub
push
dec
jns
outsb
fst
iret
xor
lret
mov
or
sbb
inc
repz
clc
inc
jae
cmp
sub
sub
jg
cmp
pop
dec
sti
mov
lods
les
add
stos
lods
mov
pop
aad
xchg
inc
clc
leave
stos
sub
gs
xor
mov
xor
in
cltd
addr16
fucomip
xor
testb
cmp
push
and
ljmp
mov
xchg
jmp
jge
mov
sbb
push
push
mov
fcoms
adc
and
mov
adc
mov
cli
push
cwtl
outsb
imul
mov
aaa
imul
bound
xor
lahf
test
insb
and
dec
pop
xor
lds
outsb
pop
arpl
xchg
pop
push
lock
stc
mov
arpl
mov
inc
mov
pop
mov
mov
jle
push
adc
mov
in
aas
sbb
fisubrs
xchg
pop
gs
push
fwait
loop
hlt
sub
jo
leave
mov
or
das
adcb
sti
push
test
mov
inc
sub
ret
cmp
int3
xchg
mov
ljmp
add
xchg
aaa
scas
dec
jl
ret
cmc
push
aas
loop
xchg
xor
hlt
dec
shr
pop
pop
rcrl
mov
lds
arpl
xchg
push
and
push
add
pop
and
jo
mov
jae
pop
mov
inc
dec
xor
in
mov
or
jns
in
mov
pop
ret
and
rcr
sbb
dec
shr
outsl
stos
flds
sbb
pop
xor
and
aaa
jns
push
and
sub
popa
sub
int
adc
dec
pop
iret
pop
loope
add
fldz
xchg
sub
dec
sarl
mov
sub
int3
sbb
mov
repz
lods
mov
mov
imul
inc
adc
sbb
sub
nop
je
out
divb
xchg
push
adc
lods
out
in
insb
jecxz
inc
or
subb
dec
jb
xchg
xor
lahf
stos
fwait
js
push
push
or
out
and
subl
push
mov
add
aad
movsl
out
and
or
pop
mov
sbb
pop
sub
dec
call
and
and
mov
outsl
scas
fdivl
xchg
jg
push
xor
jno
xor
ja
push
rcrl
jp
pop
pop
pushf
icebp
or
in
mov
jnp
les
ret
push
push
lods
mov
jl
cmp
aas
in
idivb
repz
jno
xchg
push
fsts
rcrb
std
repnz
mov
fidivrl
inc
incl
popf
sbb
sub
mov
sub
mov
arpl
mov
adc
out
mov
lret
sub
imul
insl
mov
int
dec
adc
xchg
lret
inc
daa
jbe
xorb
or
and
cmpsl
push
push
fidivs
inc
scas
xchg
lods
add
add
mov
xor
movsl
inc
sbb
adc
out
lcall
pop
ja
aas
mov
fistps
call
inc
out
lods
std
iret
stos
daa
psllq
pushl
lahf
das
sahf
and
lret
or
or
inc
test
pop
outsb
jmp
inc
fsubrp
mov
push
lea
mov
loop
bound
aam
dec
push
inc
inc
and
cmp
xchg
inc
sub
and
cli
inc
sub
into
dec
xlat
scas
icebp
arpl
sbbl
enter
in
and
xchg
test
enter
jl
inc
in
cmc
xor
push
jg
jbe
lea
sub
imul
test
pusha
sub
lds
push
pop
sub
mov
sbb
sbb
in
std
or
mov
or
call
test
mov
shr
cmpsl
decl
add
sub
dec
addr16
mov
dec
pop
push
mov
mov
es
xchg
pcmpgtd
nop
add
push
inc
push
and
fs
or
in
cmpsl
outsl
xchg
xor
je
pop
inc
out
clc
mov
and
inc
push
into
xor
lret
mov
cld
mov
inc
ret
push
fcompp
add
repnz
icebp
mov
xchg
jae
cwtl
xor
fwait
inc
inc
shll
jp
mov
jmp
and
imul
js
mov
addr16
pushf
inc
cmc
ret
out
sub
cli
test
popa
mov
or
adcb
jp
ljmp
xchg
mov
std
repz
lret
test
jbe
ds
dec
mov
aad
dec
push
ret
iret
jl
xor
frstor
testl
mov
stos
jnp
jg
push
dec
aaa
pop
call
imul
js
and
decb
pusha
jnp
aas
out
pop
cld
xor
loop
dec
orl
xchg
call
test
outsl
mov
test
and
jb
ret
int
loopne
jmp
push
xchg
cmp
jle
inc
insl
addl
mov
dec
js
jmp
jg
fisttpl
lahf
lea
into
cmp
or
jmp
lock
sbb
mov
cmp
fimuls
enter
mov
shll
insb
sahf
sti
pop
dec
push
sub
sarb
fs
jle
adc
xchg
mov
xor
fildl
inc
xor
cmp
xor
ja
xor
jp
and
or
mov
cmpsl
cmp
gs
mov
in
rorl
and
ja
insb
fldl
scas
jne
mov
push
cltd
jb
out
mov
xor
sbb
add
jo
outsl
dec
das
inc
dec
lahf
testb
lcall
push
shl
ljmp
cmpsl
js
es
cs
into
ljmp
dec
sub
sbb
lcall
repz
lret
dec
fnstsw
jge
adc
dec
jne
jle
mov
or
mov
scas
mov
pusha
dec
add
fldt
shrb
adcb
mov
ja
imul
cwtl
test
insb
add
leave
jge
pop
out
inc
out
sub
jle
cmp
shrb
in
inc
es
cltd
mov
xchg
je,pt
sbb
clc
dec
mov
stc
mov
popf
inc
insb
sbb
sbb
add
xchg
imul
push
dec
test
out
jns
gs
fcom
sub
sbb
outsb
cltd
shll
stos
sbb
sahf
dec
test
loop
add
and
adc
xlat
sbb
icebp
or
sub
cmp
ret
mov
insl
pop
pop
fmuls
push
and
push
sbb
outsl
outsb
dec
nop
scas
xor
and
mov
jge
scas
mov
icebp
push
sub
xor
inc
mov
ja
dec
cli
push
jb
mov
xchg
enter
and
fistpl
addr16
xchg
hlt
pop
fbstp
imul
or
scas
pop
roll
cmp
mov
sbbl
push
lcall
add
xor
xor
jge
or
aam
mov
mov
scas
rol
xor
xor
int3
mov
and
daa
fisubrs
jp
es
in
sub
sbb
iret
imul
sti
ja
arpl
sub
jb
fdivp
adc
int
sub
sub
int
add
mov
repz
outsl
cmpsl
xchg
in
push
add
in
bound
out
jecxz
xchg
jae
ficomps
scas
sub
sbb
jbe
clc
fwait
dec
add
xchg
call
stos
sbb
arpl
test
mov
mov
jp
cmp
in
pop
push
lods
mov
xchg
and
in
xchg
mull
in
mov
or
cmc
aaa
jbe
ja
lret
movsb
adc
push
sbb
add
into
push
or
mov
xor
dec
mov
ret
cmp
xchg
or
outsl
cvttps2pi
sbb
pop
lods
add
int3
mov
fbld
test
fsubl
sbb
dec
push
jb
ret
jbe
jno
push
sub
or
shl
int
and
loope
js
rorb
xor
aam
frstor
hlt
and
mov
cmpsl
aam
adc
pop
xlat
jne
pop
popa
adc
ja
mov
aaa
rolb
or
ljmp
into
movsb
jg
mov
jbe
jecxz
repz
ss
push
addr16
mov
xor
ljmp
mov
mov
dec
cmp
jg
sbb
in
or
jne
cmpsl
fsub
mov
inc
sbb
aas
out
or
pop
into
inc
daa
daa
out
dec
mov
pop
push
adc
fs
xchg
lea
xor
es
push
sub
mov
insl
or
inc
cmp
inc
jno
jp
xchg
mov
incl
jns
xchg
mov
pusha
cmp
jbe
sub
cli
xchg
xor
repz
idivb
jb
aad
jle
and
jo
and
fadds
push
fcomps
mov
lds
popf
mov
mov
roll
sbb
and
adc
nop
jmp
mov
addr16
repz
cmp
mov
inc
sti
inc
adc
out
push
mov
fcoml
add
xchg
xchg
or
sbb
add
xor
psllq
test
dec
mov
cld
add
mov
test
addr16
pop
dec
push
lret
rcrb
lret
rolb
xor
sbb
or
dec
hlt
mov
xchg
jne
push
fbstp
sub
pop
or
hlt
sub
imul
enter
xlat
or
xor
dec
jno
sbb
xchg
popf
dec
push
stc
roll
cltd
or
pop
dec
xlat
inc
xor
jge
scas
rorb
dec
or
cmc
mov
loope
dec
dec
lds
cwtl
jl
adc
dec
hlt
mul
jne
jo
test
icebp
aam
mov
mov
flds
test
data16
and
and
sbb
lcall
mov
addr16
rorb
mov
sahf
and
jne
jno
or
inc
insl
mov
mov
push
scas
mov
push
push
rcll
call
jg
out
shlb
push
or
outsl
add
dec
dec
mov
hlt
out
movb
cmpsl
and
push
cmp
and
sub
mov
es
push
imul
jne
xor
popf
fstpt
pop
call
fiaddl
rorb
adc
enter
nop
xlat
addb
loop
xchg
repz
shr
add
adc
cs
pop
sub
sarb
pop
sub
mov
insb
cmpsb
fisttpll
sahf
cmp
out
rorb
xchg
insb
xor
ret
mov
add
and
std
adc
cmpsb
dec
push
xchg
dec
mov
xchg
cmp
push
les
sarb
aad
add
test
mov
mov
shll
mov
repnz
and
scas
sub
icebp
pop
rclb
pop
push
mov
mov
sub
incb
aas
cld
cs
leave
enter
test
sub
call
jns
xor
dec
outsl
dec
pop
and
js
inc
mov
ss
popf
inc
rcll
aaa
mov
or
xchg
mov
mov
ret
fidivl
in
loope
push
xor
sub
push
es
stos
fsubrl
imull
lcall
pop
cmp
inc
scas
jle
lea
inc
mov
jl
aaa
popf
and
dec
push
imul
pop
lret
inc
or
repnz
inc
test
test
jmp
jmp
das
insl
adc
and
sbb
pop
or
xor
scas
adc
into
rorb
notl
sub
cltd
pop
mov
add
xchg
mov
sbbb
mov
cld
inc
add
fsubl
mov
loopne
shlb
es
scas
movsb
test
mov
sarb
in
adcb
fdivrs
xchg
stos
jno
insl
mov
cmp
push
xchg
popa
pop
and
pop
push
push
cmp
jb
mov
inc
leave
jb
ret
fsubrl
pop
inc
dec
jecxz
adc
subb
rcrl
and
dec
jg
sub
push
pop
mov
or
lcall
xchg
inc
mov
mov
fdivl
sub
mull
ds
mov
das
xlat
fdivs
data16
pop
jbe
push
insl
popf
lcall
fsubp
int
sbb
inc
shll
ljmp
cmp
or
movsl
xchg
add
cmp
jmp
es
addr16
jae
mov
rolb
xchg
sbb
jl
ja
push
pop
xabort
ja
add
xchg
push
push
cmp
sbb
ficoms
lret
pop
out
aad
pop
vmovups
js
lods
inc
dec
pop
addr16
lret
movsb
fsubl
and
addl
outsb
add
ds
clc
sbb
es
sbb
aas
jl
or
inc
mov
shl
sbb
push
fldt
int3
aam
fsubl
jnp
arpl
jbe
mov
add
call
pop
sbb
and
adc
xor
ja
dec
xlat
or
ret
loop
mov
iret
cmp
sub
jo
andl
test
push
mov
daa
push
xchg
cmp
pushf
pop
push
add
cs
pusha
out
xchg
and
xchg
push
leave
mov
adc
in
adc
adc
pop
lret
inc
shrb
add
ds
sbb
daa
jl
dec
mov
fs
lds
aad
mov
xchg
insl
xlat
mov
mov
push
sub
clc
xor
or
stos
je
arpl
mov
pusha
jmp
mov
mov
loope
in
xor
jbe
or
rclb
mov
sbb
sub
push
jno
stc
sub
fs
inc
ja
sub
lahf
dec
fcmovnbe
add
adc
mov
or
adc
xor
stc
loopne
pop
test
xor
jle
jns
movsb
xchg
insb
loope
pop
jns
lods
notl
inc
push
addr16
jno
in
or
sub
adc
lret
sbb
sub
jg
dec
addr16
mov
pop
dec
fprem1
in
xchg
ds
push
filds
xchg
mov
rcl
jnp
inc
test
add
cmp
push
fwait
pop
cmp
mov
or
mov
sahf
fs
sbb
push
iret
lods
dec
dec
rorb
push
iret
ficomps
xlat
out
fistps
xor
add
ds
ret
and
sub
dec
loope
pop
jns
lret
push
jo
sbb
pop
int3
push
dec
cmpsl
ror
cmp
or
lock
clc
shlb
lret
add
test
push
call
jmp
jle
repz
jle
mov
jp
fdivl
jmp
xor
sbbb
outsl
cli
cmp
mov
push
xchg
push
test
mov
daa
ljmp
mov
mov
adc
jne
or
adc
pop
mov
inc
enter
outsb
push
xchg
lret
push
in
test
das
pop
je
add
lea
pop
mov
loopne
scas
cmp
push
inc
ds
inc
incb
jl
dec
lods
xor
pusha
cmc
daa
cmp
mov
lods
incb
pop
addr16
sub
cmp
push
out
pop
pop
hlt
mov
dec
in
popa
xchg
cmp
insb
and
sub
subb
data16
push
xchg
popf
mov
fstps
fisttpll
lret
addr16
mov
jmp
ja
push
inc
outsb
jns
or
test
clc
and
mov
pop
icebp
jecxz
jmp
loopne,pn
or
int3
int3
and
push
ror
jb
into
pop
nop
jae
scas
popl
dec
lock
jns
mov
jb
test
mov
fists
mov
add
or
arpl
test
or
lret
insl
and
add
pop
cmp
pop
js
mov
std
mov
mov
rolb
push
mov
jne
cld
mov
das
lret
aas
sbb
outsb
pop
pop
sbb
or
test
mov
rcrb
adc
sbbb
insb
inc
xchg
imul
ret
mov
popa
lds
dec
movsl
daa
push
mov
jmp
cmp
stc
mov
jmp
push
cmp
fistl
sub
mov
test
dec
lock
push
mov
mov
aam
ljmp
add
mov
cmp
leave
loopne,pn
pop
ljmp
jbe
dec
xchg
or
and
lcall
xor
mov
adc
jb
roll
mov
int3
fsub
add
sub
test
pop
xor
int
xor
aas
dec
outsb
inc
mov
xor
je
cmpsl
push
jecxz
je
sub
nop
icebp
popa
rcll
sub
inc
btc
mov
pop
xor
adcb
test
push
and
iret
dec
cmpsb
jne
adc
iret
add
xor
add
cltd
je
xor
xchg
in
push
mov
divl
mov
aas
cmpsl
cwtl
jecxz
adc
or
mov
sub
mov
inc
inc
xchg
rol
call
in
mov
xor
and
in
jae
mov
xor
xor
addr16
fdivp
lahf
shl
fwait
aaa
jnp
or
jnp
dec
das
xchg
add
leave
sub
fnsave
fwait
dec
arpl
push
sbb
adc
mov
js
cwtl
mov
cmpsl
pop
push
push
fcompl
in
xor
icebp
push
aad
sbb
xchg
push
loopne
push
pop
adc
loop
sub
mov
cmpsl
mov
xchg
cmp
imul
mov
pushf
ljmp
push
ret
mov
xor
xchg
ds
pop
pop
icebp
cs
clc
icebp
inc
xlat
test
outsl
clc
insl
push
xlat
not
jmp
out
leave
std
pop
std
bsr
test
mov
lods
lea
mov
inc
pop
ljmp
jne
nop
leave
cmc
shrb
adc
jo
into
call
push
movsl
mov
sub
ret
mov
fdivl
inc
scas
hlt
repz
pushf
or
push
jmp
jns
cwtl
ret
mov
ret
cmp
or
lock
sbb
ja
dec
bound
jecxz
xor
inc
mov
cmc
push
nop
movsb
shrl
mov
xchg
push
pop
sub
cmpb
jle
xchg
mov
jp
mov
lahf
fdivrl
int
sub
inc
and
sub
push
out
push
xor
jg
push
xchg
xor
cltd
and
and
testb
hlt
call
sub
mull
xorb
adc
and
rcll
or
test
leave
xor
arpl
leave
clc
sub
xor
lret
push
xlat
mov
mov
shlb
xorl
lds
mov
mov
pop
add
pushf
fisttps
xchg
xor
aas
lock
push
mov
dec
cmp
icebp
inc
inc
iret
cmp
mov
xor
jg
lods
push
sbb
idivb
mov
pushf
add
sbb
test
push
add
into
std
cmp
xor
movsl
sub
stos
mov
cld
add
enter
out
pop
lahf
aam
ret
add
test
leave
imul
cmp
out
jecxz
xchg
cwtl
push
outsb
add
push
pop
mov
movb
mov
mov
cmpsl
das
ffreep
xchg
js
imul
pop
call
sahf
je
call
add
dec
in
loop
jge
sbb
add
movsb
or
or
jp
push
ljmp
dec
sbb
call
jmp
add
cmpsl
fsubs
les
lcall
adc
int3
inc
dec
bound
fs
xlat
pop
or
popf
mov
fisubs
test
stos
push
gs
cwtl
cmpl
jle
out
out
and
lcall
cmp
jo
pop
nop
rolb
push
jnp
sbb
or
xor
mov
pop
orl
lea
movsl
dec
jnp
test
push
jnp
and
push
movsl
push
imul
ret
xor
mov
or
out
pusha
mov
sub
dec
jmp
xchg
mov
lahf
pop
test
lods
inc
pop
lock
lds
cld
or
dec
mov
xchg
decb
nop
jle
repz
lock
sub
xchg
pop
inc
cltd
cmpsl
aam
push
push
inc
scas
lds
and
movsb
dec
sbb
loopne
xchg
dec
mov
add
xchg
xchg
test
cwtl
inc
pushf
pushf
mov
std
xlat
stc
xchg
xor
pop
push
fisubrl
mov
test
negl
add
cmp
sbb
cmpb
aas
repnz
sub
xor
scas
out
push
dec
xchg
or
push
pop
and
cmp
nop
movsl
or
and
xor
loope
sbb
dec
push
push
jle
inc
int
pop
nop
pop
pop
scas
mov
outsl
and
cmc
dec
mov
mov
test
push
call
das
mov
jno
sub
pop
add
outsb
shll
adc
xor
insl
sub
call
mov
mov
and
imul
and
scas
aas
test
lods
das
jge
xor
jb
pop
add
dec
adc
push
pop
std
pop
mov
pop
jne
mov
xlat
filds
mov
mov
lret
or
adc
pushf
test
or
daa
pop
dec
sub
rcll
insb
lods
cmc
testb
rcr
and
xor
mov
mov
mov
pop
popa
outsb
mov
jmp
daa
push
lcall
call
mov
push
cmc
fisttps
jae
out
mov
xchg
aad
dec
sub
out
leave
xor
repnz
or
mov
jb
jge
inc
pop
fisubrs
jmp
or
push
imul
dec
fistps
add
xchg
and
pop
mov
out
cmpsb
lcall
add
xor
or
jge
mov
cmp
xorl
loopne
cli
xchg
cmp
inc
in
mov
or
mov
rolb
movsb
cwtl
sbb
sub
jge
push
dec
adcl
sbb
enter
mov
cs
mov
repnz
sarb
ret
shlb
cmc
add
dec
ss
adc
or
push
lds
dec
xchg
in
mov
cmpb
inc
mov
loopne
add
cmp
sahf
mov
movsb
int3
or
jb
xchg
sbb
rclb
jge
repnz
iret
lods
cmp
pop
cmp
jns
inc
mov
fcomp
rorl
xor
in
adc
adc
scas
sub
fsubrl
and
or
cmp
dec
cmp
clc
outsb
mov
cmp
jecxz
fadd
repz
xchg
int3
daa
or
in
xor
push
fisubrs
pop
int3
inc
jb
pop
mov
pop
mov
sbbl
into
pop
add
pop
cwtl
pushf
movsb
fistpl
mov
xchg
dec
jp
repnz
xchg
imul
into
sub
xchg
dec
loop
cwtl
stos
sbb
dec
sbb
cwtl
dec
mov
pop
add
dec
mov
jb
fidivs
incl
stc
movsb
jmp
jnp
pop
jne
xchg
mov
inc
aas
or
jns
int
das
rep
push
mov
data16
mov
imul
aas
ret
push
orl
loop
ficompl
mov
les
sub
add
js
add
and
pushf
fldl
je
xchg
xor
inc
cmpsb
and
roll
das
fs
xlat
jns
mov
and
mov
mov
lcall
or
jmp
insb
jb
inc
inc
mov
js
xchg
xor
xor
mov
jb
outsb
and
pop
dec
pushf
insb
adcl
and
ds
pop
mov
mov
pop
push
push
mov
mov
xor
push
push
add
ljmp
lahf
push
pop
add
push
push
push
addr16
lds
cmp
dec
push
loop
data16
xchg
insl
inc
adc
xchg
test
pop
scas
iret
dec
sbb
inc
cmp
inc
mov
dec
pop
mov
in
push
lret
lods
movsl
xlat
out
lret
popa
jmp
insl
sbb
pop
and
adcb
mov
test
push
fists
lret
cwtl
out
fldenv
lret
sahf
es
lods
lret
outsb
xchg
lds
xchg
mov
hlt
incl
sub
ret
sti
outsb
lods
pop
scas
jae
fildll
loope
cmpsl
out
jge
fidivrs
push
roll
jmp
mov
mov
mov
mov
xchg
rorb
in
fs
fiadds
push
std
mov
movsb
je
call
shlb
data16
dec
xor
scas
outsl
push
mov
rorl
inc
mov
lahf
inc
sub
das
jmp
mov
test
cmp
sub
xor
int
andb
inc
sub
xor
dec
movsb
sti
xchg
or
mov
sub
in
inc
mov
add
mov
stos
loop
jbe
pop
ja
fdivs
sarb
insb
inc
xchg
outsb
sub
fisttpll
imul
mov
or
inc
lds
push
cmp
scas
orb
gs
bound
mov
jle
pusha
cld
mov
dec
push
push
mov
test
xchg
mov
iret
sbb
jnp
cmp
fidivl
addr16
push
mov
nop
xchg
aas
add
mov
out
fwait
sahf
pop
jmp
mov
lea
iret
scas
sahf
cmp
fiaddl
add
test
fidivrs
int3
mov
push
lcall
xchg
ljmp
xor
gs
lea
add
sub
xchg
sub
inc
and
jbe
pushf
xchg
sub
xchg
imul
gs
ljmp
mov
jbe,pt
popa
xlat
adc
push
pop
adc
js
sub
xchg
push
inc
adc
mov
jmp
sub
dec
jnp
dec
dec
bound
xchg
fldcw
xchg
nop
push
movsb
jne
inc
rclb
loopne
outsb
es
test
mov
je
clc
lods
imul
dec
imul
lea
push
roll
cmpsb
das
mov
add
mov
push
add
mov
ror
sbb
or
push
sbb
xchg
sti
insb
cmp
aas
jns
push
sbb
mov
popf
pop
xchg
sarb
xchg
mov
fiadds
scas
lahf
out
lock
ror
xchg
push
pop
dec
mov
aad
ret
inc
int3
xchg
repz
pop
jb
jb
in
lds
outsl
jo
sub
jl
mulb
lea
add
xchg
aas
add
xor
cs
outsb
jb
bound
mov
adc
loop
inc
sarl
nop
jae
mov
jno
jg
cmp
mov
fldl
xor
jbe
xchg
cmp
dec
mov
nop
inc
xor
mov
mov
or
mov
xchg
cld
sub
mov
aad
pop
test
lods
mov
push
test
out
and
push
in
test
xchg
je
sub
cld
pop
sbb
cmpsl
jno
jecxz
xor
mov
inc
dec
out
incb
dec
add
dec
pop
leave
and
mov
mov
js
imul
lea
fnsave
lahf
dec
pop
lock
jnp
stos
mov
pop
sbb
lret
dec
xorl
mov
iret
andb
push
push
leave
push
decb
fsts
shrl
sbb
data16
xchg
sbb
xchg
cmp
adc
je
sarb
movsb
inc
lods
test
lcall
xor
iret
arpl
sahf
mov
add
lret
js
push
test
mov
insl
sbb
fsubrl
pop
inc
push
out
xlat
inc
popf
pop
push
or
insb
mov
push
and
mov
lds
sbb
lock
xlat
inc
cmc
iret
out
cld
push
sarb
scas
repz
into
push
loop
xchg
push
lods
fwait
leave
mov
fbstp
sub
sbb
vmovlpd
cmp
inc
xor
stc
push
xchg
sbb
dec
enter
icebp
int3
daa
mov
fistl
cld
jmp
stos
jno
xor
dec
test
inc
push
rorl
mov
mov
inc
jnp
int
cmpsl
cmp
fincstp
dec
mov
add
xchg
les
and
jecxz
mov
pop
sbb
push
push
push
pop
cli
fsubrp
inc
sub
adc
in
or
clc
inc
ja
jl
xchg
cmp
stos
fists
int
clc
cmc
popa
lods
sub
je
es
mov
cmp
mov
jl
push
pusha
pushf
mov
scas
loopne
rcrb
dec
or
pop
jae
adc
imul
xchg
mov
es
aas
sti
cmp
jp
cmp
adc
adc
lret
sbb
mov
jmp
std
xchg
sti
lret
loope
or
loop
mov
testl
addl
jmp
push
shrb
jb
add
jno
jmp
jle
jno
jg
lods
xchg
inc
mov
xchg
pop
add
xchg
cmp
mov
xchg
mov
sbb
repnz
sahf
rorl
lret
jo
jno
sub
arpl
repz
addr16
pop
mov
jp
add
into
cli
and
test
mov
sbbl
xchg
inc
stc
decl
imul
cmpsb
dec
dec
xor
mov
loopne
cwtl
jle
in
jns
std
and
fldcw
cmp
in
adc
xor
repz
pop
dec
out
les
adc
adc
stos
stos
andl
jg
dec
mov
jno
out
inc
aas
fimuls
add
loop
dec
fdiv
adc
mov
lahf
lret
jae
dec
psubw
je
out
pop
iret
gs
dec
cmp
xchg
mov
cwtl
cmp
imul
add
sub
pop
xchg
xchg
pop
ds
add
pop
jne
mov
cmp
xor
push
loope
or
xchg
pop
adc
out
xchg
push
add
cmp
addl
scas
push
push
jmp
mov
lret
adc
ds
jmp
jp
ja
or
repnz
xchg
mov
mov
cmp
stc
push
iret
pop
mov
insb
mov
push
adc
cltd
jmp
mov
shlb
xchg
daa
test
dec
and
dec
cmc
lahf
inc
mov
jns
sbb
dec
jo
in
cmp
and
test
push
rclb
inc
cmp
push
mov
adc
mov
mov
iret
vpunpckhqdq
cmp
aas
adc
in
add
cld
pop
dec
in
sbb
adc
jp
xchg
dec
inc
and
test
out
adc
xor
aad
push
and
or
movl
xchg
ljmp
insb
ret
std
popa
dec
popa
mov
imul
sbb
adc
xchg
ljmp
loop
and
icebp
or
lret
lret
pop
lea
fwait
mov
xchg
inc
insl
pushf
push
aas
pop
jno
pop
das
mov
dec
sub
popa
xchg
call
mov
adc
cmpsb
cli
push
jmp
xchg
inc
sbb
rcrl
xor
mov
insb
fildll
jp
call
xor
xor
lret
stc
xor
ss
xchg
sbb
nop
dec
or
mov
cmp
pop
std
cmc
div
dec
mov
aam
fisubs
je
test
pop
mov
adc
in
push
std
and
leave
cld
stc
mov
adc
push
lds
stc
xor
sarb
push
scas
idiv
and
sahf
jge
mov
xchg
fs
hlt
sub
idivl
into
lock
xchg
pop
mov
hlt
inc
stos
andb
dec
pop
mov
add
push
pop
jns
outsl
adc
mov
jbe
lea
xor
call
insb
das
cmpsl
push
dec
daa
cmp
incb
addr16
push
je
ret
push
or
frstor
pop
repnz
sarl
jae
adc
mov
mov
mov
hlt
sti
mov
push
xor
inc
ret
fldl
shrb
sahf
adc
lret
std
fnstcw
bound
les
sahf
fisttpll
add
gs
adc
sahf
add
nop
movsl
dec
lret
les
pop
arpl
shll
sub
jno
xchg
popf
cmp
mov
sub
mov
sar
js
sub
scas
and
in
cmp
mov
and
cs
scas
les
or
mov
scas
or
inc
pop
mov
ret
jle
das
sub
mov
fdivp
adc
cmpsb
lret
pop
insl
mov
or
xor
xchg
stos
hlt
cld
std
push
out
into
jp
lea
xor
clc
xchg
mov
dec
test
and
xchg
inc
enter
repnz
ja
mov
inc
lock
or
aam
leave
fmull
cmp
sbb
pop
stos
push
bound
fsubr
sub
dec
jle
ss
sbb
sub
pop
lret
or
sbb
lods
repnz
icebp
xchg
aaa
shl
imul
fildll
test
in
sbb
dec
arpl
pop
shll
push
ror
hlt
xchg
jle
lret
mov
sub
or
je
mov
enter
sub
icebp
or
adc
adc
mov
lea
ffree
or
cmc
push
sub
lahf
addr16
in
mov
fstsw
mov
scas
sarl
lea
or
push
sbb
push
outsl
sub
movsl
sbb
je
fimull
leave
dec
xchg
ret
fsubs
clc
xor
push
mov
cmc
dec
popf
add
negb
shrl
mov
int
cmp
fs
sub
mov
cmp
nop
add
cli
adc
push
call
std
xor
flds
lods
xchg
inc
xor
in
mov
cmp
add
aam
movsb
dec
dec
lds
jno
cmp
cli
popa
xor
add
jge
inc
mov
dec
mov
scas
rorl
dec
popf
lahf
rclb
and
pop
xchg
std
xchg
clc
aam
xor
jg
mov
cli
xchg
fildl
sbb
jno
jmp
jl
and
xorl
cmp
jmp
shlb
testl
stc
test
pop
lods
pop
xchg
xchg
cmp
xor
sub
nop
pop
pop
rorl
jle
shrb
ljmp
pop
jo
int
xchg
push
sub
pusha
hlt
iret
sub
sub
xlat
sbb
pop
lea
inc
bound
stos
mov
stc
lcall
jns
cmpsl
cltd
les
sbb
cmp
scas
dec
adc
xlat
push
sbb
lea
mov
pop
adc
stos
lret
mov
jle
je
test
xor
pop
mov
xchg
jne
inc
pop
popa
mov
jmp
in
dec
sub
and
stos
xor
mov
hlt
addl
repz
mov
jecxz
jg
or
enter
push
sub
mov
and
test
mov
mov
xchg
loope
aas
gs
ror
test
ficoml
add
and
outsb
jne
cmp
xor
das
pop
mov
xchg
sub
sahf
ljmp
loop
movsl
iret
mov
bound
xchg
xlat
out
out
xor
dec
ret
arpl
inc
xor
mov
hlt
or
lods
pushf
fidivs
mov
mov
mov
lods
clc
rolb
lea
jb
mov
out
into
sbb
fadds
dec
jae
lret
ficoml
push
jl
sub
add
mov
xchg
mov
inc
pop
cwtl
mov
adc
cltd
scas
lret
mov
jecxz
adc
mov
fs
lcall
push
and
arpl
or
adc
outsb
lods
add
push
push
movsl
mov
mov
add
sub
jnp
loope
cli
shrb
pop
adc
stc
push
sbb
add
cwtl
popf
dec
enter
inc
aaa
adc
clc
pop
insl
cmpsl
mov
mov
mov
jg
mov
adc
fcomps
inc
dec
push
ss
jno
pop
hlt
pop
pop
xchg
add
ret
jmp
mov
jecxz
les
push
enter
out
or
into
pop
jmp
fcomi
loop
push
push
ffreep
call
lret
xchg
sbb
notb
cmp
pop
jb
mov
shlb
cs
and
mov
push
das
or
push
test
inc
adc
test
inc
sti
mov
icebp
xchg
dec
ja
mov
test
or
dec
xchg
mov
mov
fstpt
hlt
cmp
mov
and
jmp
add
aas
lret
cmpb
and
fxch
pop
add
pop
mov
pop
or
xlat
cld
xchg
xor
add
imul
jp
stc
pop
lock
es
adc
mov
or
insb
pop
mov
ljmp
in
icebp
jg
add
sub
dec
mov
movb
xor
xor
stos
cmp
pop
stos
or
pop
push
pop
jb
dec
jge
fwait
cmp
lcall
and
int
insb
jne
xchg
pop
add
faddl
xchg
xchg
cmp
enter
push
lods
push
dec
cltd
mov
fsts
lcall
sbb
mov
lods
int3
stos
pop
mov
dec
cmpsb
inc
or
inc
popa
mov
cmp
jg
push
push
lds
adc
js
push
fiaddl
jecxz
into
pop
aam
je
addr16
sti
add
int
push
and
cmp
push
add
scas
int3
push
and
add
inc
daa
test
push
push
cmp
les
enter
testl
repz
jb
inc
add
push
mov
xlat
push
pop
or
xchg
call
mov
test
mov
pop
repz
mov
fcoms
pop
mov
inc
rolb
jmp
jp
jo
xor
sbb
mov
jl
shll
in
cltd
icebp
add
les
mov
pop
daa
inc
or
cmp
cmp
sub
hlt
fdivr
je
adc
rclb
add
rorl
pop
pop
cli
ljmp
fmull
in
fidivl
int3
mov
adc
push
icebp
out
adc
out
mov
sub
mov
sbb
dec
add
in
outsb
inc
adc
jne
jg
xor
loopne
testl
rcll
or
fcmovb
inc
js
daa
cmp
outsb
push
sbb
push
adc
mov
dec
outsb
push
sub
cmpsb
jmp
gs
repz
cli
or
imul
push
lds
jecxz
cmp
mov
clc
adc
push
fildll
ret
rcrl
mov
xor
add
loope
mov
push
pop
inc
jae
popf
adc
je
mov
inc
rcll
or
cmp
xor
stos
loopne
xor
dec
fs
call
jle
cmp
push
jnp
adcb
mov
mov
or
ds
loopne
lea
or
adc
xchg
push
test
call
and
andb
test
aaa
inc
addr16
pop
mov
xchg
mov
or
cli
shr
inc
mov
cmc
popf
push
cmp
lods
inc
jmp
aas
daa
mov
xchg
pop
lret
std
dec
ret
shr
push
cmc
sub
outsb
pop
out
loopne
shll
mov
xchg
pop
icebp
push
je
cmp
push
and
or
push
mov
mov
stc
inc
jb
mov
xchg
dec
push
and
add
loope
push
sub
sarl
sti
test
and
mov
adc
test
dec
adc
js
nop
mov
mov
std
xchg
out
gs
and
cmpb
lods
sub
sbb
inc
inc
sub
mov
std
adcb
xchg
pop
xor
dec
out
ss
test
les
sbb
cwtl
mov
and
sbb
pusha
outsb
sti
push
dec
std
or
aaa
mov
iret
jns
std
jl
mov
jp
inc
loope
outsl
and
icebp
cwtl
dec
stc
mov
aaa
mov
shll
cmovl
mov
inc
imul
pop
movb
mov
in
jnp
loop
xor
scas
xor
cmp
loope
fs
notl
pop
push
out
data16
xlat
pop
xchg
notl
or
mov
repz
jb
decl
pop
aad
and
mov
mov
push
jns
cld
loop
add
dec
jecxz
push
xchg
cmp
cmp
test
xor
lds
scas
or
icebp
push
or
clc
shrl
cmpl
inc
in
cs
lds
sub
dec
xor
mov
dec
scas
fldenv
repz
lds
xchg
out
jecxz
ret
xchg
pusha
or
pop
imul
mov
pop
pop
ficoml
repz
hlt
or
sbb
rol
movsl
xchg
fnstenv
pop
out
mov
call
movsl
data16
mov
clc
cld
ss
popf
inc
adc
leave
sub
add
outsl
pop
pusha
cwtl
into
mov
in
cli
insl
call
gs
or
mov
cmpsb
jbe
out
dec
outsb
inc
mov
ret
xor
mov
mov
lret
rsm
inc
sub
sub
test
push
repz
mov
xlat
jo
pop
mov
sub
arpl
daa
push
add
shl
ds
push
adc
std
enter
xchg
cwtl
sub
inc
add
fcoml
stc
scas
push
jge
pop
push
sbb
btc
inc
test
xchg
and
sub
cmpsb
mov
mov
inc
ss
cmp
daa
xlat
push
sbb
mov
xchg
or
sbb
scas
addr16
push
jp
add
adc
sub
aaa
jno
pop
jnp
test
cmpsl
and
mov
jae
push
mov
nop
jae
std
and
xchg
jns
add
jg
add
push
or
inc
cmc
dec
or
lret
and
pop
inc
movsl
out
dec
jge
sahf
cmp
sub
xchg
add
add
std
out
lret
outsb
and
mov
jmp
outsb
gs
and
cltd
movsl
fnstenv
hlt
cmp
xor
shrb
jne
dec
nop
out
loopw
leave
jg
cmp
lret
int3
jb
xchg
mov
adc
int3
iret
inc
jns
hlt
leave
mov
sub
push
add
mov
scas
pop
pop
ret
leave
les
xor
movsl
loopne
aam
addb
jno
imul
pop
mov
cmp
sub
cmp
aad
rclb
leave
jmp
lahf
pop
divb
jecxz
icebp
add
push
cs
das
mov
cltd
inc
mov
and
imul
dec
jb
jl
adcb
mov
scas
add
sub
add
lock
mov
xchg
jo
mov
ret
outsb
sub
loope
mov
jnp
push
and
push
lret
mov
push
stos
adc
dec
mov
adc
cwtl
mov
mov
clc
xchg
dec
mov
jo
sub
sbb
xchg
xor
xchg
or
pop
aaa
into
daa
xlat
stos
test
sub
sub
and
inc
out
fwait
and
js
aam
rorl
ror
ja
cmp
shlb
push
lods
scas
push
test
mov
fchs
adc
call
mov
jmp
xchg
inc
mov
jnp
arpl
xor
mov
cmp
mov
das
add
pop
adc
push
imul
scas
jnp
pushf
or
pop
xchg
dec
pop
xor
mov
psubusw
dec
movsb
mov
repnz
jle
mov
sbb
fwait
aaa
push
mov
mov
icebp
push
jle
jl
jle
add
test
xchg
aas
sbb
dec
sub
pop
ret
jmp
ficoml
inc
cs
sbb
addl
test
sbb
mov
mov
leave
sub
stc
imull
adc
xor
push
push
mov
xchg
div
mov
test
imul
dec
mov
jecxz
lret
mov
stc
inc
lea
sub
add
jp
xchg
in
out
rolb
lods
lock
cld
xor
sbb
cmp
ffree
shr
sbb
mov
stc
scas
popa
popf
sbb
xor
mov
add
mov
repnz
fs
jmp
sbb
maskmovq
mov
ljmp
ljmp
push
into
xchg
mov
cmp
mov
inc
push
mov
andl
fwait
add
out
mov
sub
das
jo
sub
lret
add
stos
scas
das
jl
sub
test
out
mov
cmp
mov
mov
mov
push
mov
push
pop
sarl
cwtl
lahf
and
leave
scas
mov
mov
sbb
jmp
or
cld
imul
pop
lods
mov
shl
out
or
pop
in
mov
push
popl
ss
es
stc
and
fwait
and
mov
pop
mov
jge
and
cmpl
je
adc
dec
and
addr16
sti
lcall
notl
jg
jo
add
jmp
rcrl
xor
add
mov
adc
adc
cli
xchg
push
out
outsb
mov
aam
jae
cmpsl
movsl
enter
and
mov
xchg
cmpsb
stos
pop
and
mov
xor
das
aas
out
call
sbb
scas
fimuls
out
adc
cld
das
sub
ds
push
and
jg
jl
mov
jmp
iret
cmp
rol
pushf
repz
xchg
loopne
push
and
loopne
mov
mov
es
cwtl
paddd
or
or
ja
lds
add
stos
ss
cld
mov
push
ret
aaa
mov
in
jno
jno
jne
xor
repnz
push
arpl
mov
pop
xchg
inc
xor
mov
aad
cli
ss
mov
add
out
or
popa
mov
ds
fbld
in
in
shrb
push
in
movsb
psraw
clc
test
lea
sub
loopne
lret
test
in
add
cmp
std
in
xor
and
sbb
lret
add
push
mov
out
fwait
adc
outsl
cmp
push
xor
cmp
inc
bound
lea
pop
adcb
pop
out
or
and
rclb
pop
aad
xchg
mov
inc
cmp
xchg
pop
loope
adc
and
inc
ret
repnz
loope
mov
scas
jecxz
in
inc
jbe
mov
addr16
arpl
jmp
pop
xor
andb
xchg
sbb
sub
or
pop
addr16
sub
dec
fcmovne
mov
push
mov
scas
clc
and
sub
xor
lahf
push
aaa
sub
xchg
xchg
dec
lock
lock
je
jmp
cmpb
dec
mov
daa
adc
mov
mov
inc
jge
popa
prefetcht2
sbb
cld
push
sub
cmpsl
fadds
ljmp
shlb
repnz
lock
sbb
dec
mov
adc
aad
mov
mov
mov
sbb
add
cmpsb
pop
das
mov
mov
roll
and
rcrb
jo
xor
jle
or
cmovnp
enter
cmp
mov
dec
fs
stos
aaa
sbb
and
mov
push
mov
les
push
lea
cmc
mov
or
mov
flds
mov
xchg
leave
gs
dec
cmp
cltd
fcmovb
adc
jae
jns
and
xchg
and
lea
and
inc
jno
push
add
add
shll
and
lea
fldl
jbe
sbb
out
dec
cmc
dec
cmp
pop
inc
xorl
xchg
mov
adc
js
aaa
jne
dec
movsl
call
mov
cs
or
icebp
xor
pop
mov
jmp
pop
lock
dec
repnz
test
wbinvd
mov
jbe
xor
out
push
jge
rcrb
jo
aas
sub
insl
inc
adc
dec
adc
fldcw
mov
adc
rorl
add
jo
pop
int
push
mov
dec
ja
mov
popl
hlt
lods
push
mov
sti
cld
cli
xor
stos
push
mov
mov
out
in
mov
ret
call
mov
lret
test
push
mov
sbb
xchg
sahf
jg
xchg
lcall
orb
pop
outsl
push
out
mov
sub
cmp
pushf
jo
sub
mov
dec
cmc
loope
aas
ja
hlt
lea
ljmp
or
mov
ror
jge
pusha
xorb
jae
mov
ljmp
imul
sub
mov
insb
imul
add
out
cltd
lds
pop
cmp
push
or
push
lea
push
jmp
insb
inc
in
movsl
push
pop
xor
xlat
aam
add
shlb
mov
jmp
scas
pop
je
add
or
inc
mov
dec
cltd
into
sarb
pushf
adc
xor
fisubs
jb
fsubl
xchg
mov
adcb
inc
rol
push
ret
stc
test
mov
xor
xor
fsubl
push
outsl
sbb
outsl
add
daa
xchg
inc
push
test
subl
and
nop
and
cmp
fidivrs
sbb
xchg
jnp
mov
sub
xchg
push
enter
in
xor
cld
inc
or
push
ret
lods
fbstp
nop
mov
pop
popa
push
push
outsl
stc
inc
outsb
sahf
mov
sti
xchg
std
pop
pop
push
cmp
inc
xchg
xor
dec
adc
movsb
mov
mov
ss
insb
fwait
sahf
cmpsl
imul
insl
dec
stos
add
outsl
shl
lock
xchg
out
outsl
cltd
ror
out
xchg
bound
js
mov
das
andb
sub
aam
push
xchg
ret
jle
sub
or
jp
lods
jg
stos
cltd
push
icebp
test
ret
add
sahf
and
lods
das
jl
sub
shrl
into
cmp
mov
dec
sbb
mov
xchg
sahf
and
xchg
cwtl
xchg
lods
ss
add
mov
adc
cs
mov
aas
rorb
lods
mov
sub
stos
mov
sbb
das
cs
icebp
int3
mov
lea
ds
clc
aaa
pop
ds
pusha
dec
jno
std
das
push
mov
xor
push
aas
add
inc
jmp
into
xor
mov
mov
inc
leave
fsubrl
aas
ja
jns
pop
pop
mov
stc
lcall
das
idivl
icebp
cli
das
xchg
les
ja
sbb
outsl
inc
sbb
ss
ds
ljmp
adc
push
mov
xor
and
pop
inc
and
mov
inc
std
jnp
sub
sub
sbb
cld
mov
mov
and
mov
mov
ficoms
cmp
decb
mov
je
or
mov
hlt
insl
dec
out
sti
dec
iret
movsl
fldt
mov
pop
jge
pop
jae
add
add
negb
jno
xchg
and
iret
test
gs
movsl
nop
aaa
add
mov
subb
je
cmp
xor
ret
push
push
jmp
mov
and
pop
ret
xchg
jle
mov
fmulp
jo
mov
mov
jno
jae
out
psubw
scas
sbb
data16
push
pop
insl
mov
fdivrs
adc
jae
mov
xor
int3
loop
jb
mov
hlt
xor
aad
dec
mov
jge
pop
rcrl
sub
inc
and
mov
or
or
or
jns
sbb
or
in
jmp
enter
mov
in
pop
pop
inc
jns
jecxz
jns
fists
push
pop
push
mov
cmp
or
or
rcll
sub
movsl
mov
add
mov
push
stos
or
mov
add
idivl
xor
xlat
mov
pop
aas
mov
or
dec
jb
mov
ss
into
aas
dec
xchg
pop
sub
add
mov
les
inc
test
mov
jno
insl
xchg
add
adc
pop
mov
dec
sbb
jl
in
insl
jg
jmp
push
sti
or
in
cmc
sub
shlb
test
lahf
jnp
lods
dec
dec
sbb
dec
cmp
ret
add
shll
xor
rol
cmpsb
mov
add
insl
popa
push
mov
rcr
jno
sub
mov
aad
jg
xlat
add
enter
lea
inc
xchg
lret
mov
xor
cmp
mov
add
cs
movsb
test
fists
inc
ljmp
cmp
xchg
push
sbb
xor
lret
xor
jo
push
and
imul
pop
mov
mov
int
xchg
jmp
or
xchg
jl
imul
cmpsb
jne
rol
std
and
hlt
mov
into
jns
push
jo
jne
pop
jae
jmp
push
sbb
sbb
addr16
pop
jg
orl
dec
lret
repnz
cmp
pop
dec
jb
push
or
xchg
jge
and
mov
sbb
arpl
outsl
xchg
cld
add
push
lods
popf
int
out
movsl
outsb
fsub
pusha
mov
push
js
cmp
and
and
lods
js
adc
xchg
mov
scas
ds
mov
xor
inc
lahf
inc
test
cli
aam
test
ds
std
push
testl
push
rclb
pop
dec
rcl
std
xchg
lcall
or
daa
pop
and
ss
sbb
js
mov
cmp
dec
or
mov
clc
cmp
fs
jbe
push
inc
or
shlb
xchg
out
pop
mov
loopne
mov
sub
cmp
in
cmp
adc
jne
pop
nop
sub
in
xor
rolb
insl
imulb
and
test
or
sbb
lahf
xchg
pop
mov
mov
push
ficoms
test
inc
mov
xor
mov
dec
test
mov
inc
shr
lret
add
and
lcall
jae
fsubrs
push
mov
aad
add
inc
rolb
lods
lods
jl
mov
push
leave
loopne
and
leave
loopne
je
pushf
repz
test
das
or
iret
stos
sti
aaa
push
pop
testl
cwtl
jmp
mov
mov
popa
divb
negl
push
mov
pop
leave
mov
jecxz
fldenv
shlb
xlat
fcoms
popa
test
push
pusha
mov
movsl
push
push
into
lods
iret
dec
dec
mov
stc
mov
dec
leave
rclb
ret
mov
int3
cmpsb
sahf
lds
flds
push
fistpl
fs
xlat
cmpsl
das
and
movsl
dec
clc
pop
lock
cmp
ret
or
cmpsl
scas
insl
outsb
inc
dec
rolb
and
push
aas
fimull
pop
push
add
lock
or
inc
push
xor
lcall
ja
push
in
lods
cmp
stos
and
leave
stos
pop
add
mov
aaa
xor
fstps
mov
jbe
add
pop
clc
gs
insb
sbb
xadd
jb
xorb
jbe
cmp
pop
xchg
loope
arpl
lds
mov
mov
mov
adc
sbb
movsl
dec
push
jo
inc
test
pusha
add
jp
jge
jbe
cld
aad
cld
popa
pop
fdivl
xor
xor
lods
dec
mov
jns
mov
cmp
inc
cmp
push
add
or
and
sub
xor
jbe
fidivrs
or
xor
mov
ljmp
repz
icebp
and
push
mov
adc
fstpt
adc
mov
and
push
cltd
jb
ret
repz
addr16
or
mov
adc
cmpsl
add
and
mov
cltd
cmp
push
insb
fistps
pop
sub
scas
jnp
pop
xlat
cmp
xlat
jb
adc
gs
imul
stos
or
pop
adc
inc
xlat
std
cmc
jg
and
adc
mov
je
adc
fdivr
inc
shrb
jp
aas
push
sbb
test
aam
inc
movl
leave
mov
pop
out
test
sti
test
daa
imul
xchg
inc
adc
inc
dec
lea
aaa
sti
mov
movsb
fstpl
cmp
stos
adc
out
inc
cmp
mov
add
jl
cli
loop
xlat
fidivs
mov
and
xor
ja
ret
cmpsl
xor
in
xchg
test
imul
jb
and
pop
lock
cltd
movsl
or
mov
movsb
insl
or
mov
js,pt
dec
lret
sahf
push
das
inc
rol
push
int3
mov
push
mov
ja
nop
outsl
mov
adc
dec
fwait
enter
xor
out
or
scas
sbb
xor
lahf
jo
xchg
jbe
pop
or
pop
push
jb
imul
pop
les
or
jae
mov
cltd
cmp
cmp
push
flds
cli
iret
rorl
mov
adc
or
or
fcmovb
bound
fs
adc
stos
arpl
push
mov
stc
imul
inc
leave
jmp
stos
test
mov
sbb
cmpsb
pop
inc
pop
jmp
cwtl
inc
cmp
subb
mov
push
adc
pop
and
dec
movsl
mov
xlat
pop
cmpsl
mov
push
and
das
in
cmpb
fcmove
pushf
cmpsb
lods
lods
or
cmp
not
mov
pusha
sbb
sbbl
inc
stc
inc
enter
fs
pmuludq
mov
xor
ret
dec
loop
jno
pop
mov
fisttpl
jge
sub
icebp
push
dec
xchg
fistl
lods
push
xor
aad
pop
inc
mov
jnp
dec
push
or
lea
ss
call
cltd
mov
pop
popf
mov
dec
ds
clc
or
xor
gs
js,pn
dec
cltd
adc
loopne
outsb
sbb
add
mov
push
xchg
das
and
cmp
dec
mov
mov
xchg
xor
jbe
shr
pushf
call
paddq
jno
sahf
mov
popf
mov
adc
cmp
roll
dec
fldcw
mov
mov
mov
mov
push
stos
mov
addps
xchg
icebp
and
aad
leave
inc
popa
xor
insl
mov
scas
pushw
mov
scas
xchg
or
mov
sti
out
loope
mov
xchg
adc
jne
imul
outsb
mov
push
lods
inc
mov
and
cli
lds
inc
jge
icebp
or
mov
jbe
aaa
es
and
pop
dec
sub
inc
fdivrp
out
stos
cld
fstpl
mov
sbb
xor
pop
mov
fidivs
mov
loope
repz
mov
es
addr16
mov
js
jl
jno
and
jbe
lret
adc
pop
ret
sub
addr16
add
rorl
out
cmpsb
ljmp
inc
add
rcrb
adc
dec
cmp
mov
fucomp
outsl
lcall
or
notb
popf
lds
sbb
pop
std
imul
dec
sbb
add
inc
xor
cmp
adc
cmp
lock
fistl
sbb
ds
sti
mov
test
enter
pop
mov
or
and
mov
lods
movsb
mov
mov
scas
out
sarl
jecxz
movsb
inc
std
stos
leave
cmp
push
roll
mov
adc
inc
scas
push
rcrl
and
dec
mov
ljmpw
mov
in
push
xchg
rcrl
sbb
push
jle
popf
push
aaa
add
adc
adc
lods
or
add
adc
in
insb
ss
iret
push
shl
dec
mov
or
push
int
add
or
nop
jg
add
xchg
push
dec
pop
incb
dec
xlat
dec
adc
outsb
in
mov
ljmp
cmp
inc
add
sbb
jge
testl
into
dec
hlt
out
inc
add
test
in
mov
push
sbbl
and
cmc
jle
sahf
push
push
jecxz
pop
mov
mov
jo
adc
jge
cmp
pop
mov
jmp
ret
cltd
pop
mov
out
pop
cld
add
mov
push
call
xor
cmpsl
aam
mov
pop
fs
icebp
mov
inc
push
jp
mov
adcl
ret
sub
icebp
js
outsl
popa
sahf
xlat
push
xor
inc
dec
hlt
mov
adc
cld
jbe
inc
movsb
shrb
mov
call
push
rcrl
sti
push
xor
in
hlt
mov
int
jecxz
rorl
mov
pop
or
test
data16
jno
stc
dec
iret
enter
jno
sahf
in
clc
jns
push
scas
out
repz
sbb
testb
sarb
sbb
sbb
mov
flds
std
mov
std
xchg
rolb
sbb
scas
data16
shlb
add
das
stos
in
sub
xchg
push
fwait
push
xchg
cmpsl
int3
mov
sbb
cli
ret
sarb
movsb
lock
mov
jmp
rcl
push
jno
mov
ss
sbb
in
cmp
adc
dec
pushf
call
mov
int3
mov
jae
outsb
push
adc
sbb
addl
repz
xchg
xor
insl
adc
xor
or
movsl
mov
cmp
inc
stos
in
aaa
das
mov
fisubrl
or
js
adc
push
lahf
pop
ljmp
jne
test
lret
dec
sbb
mov
rcrb
in
pop
fidivrs
add
int3
inc
fsubl
adc
scas
jge
or
jl
adc
xchg
pop
loope
mov
pop
lret
jns
icebp
push
lea
sub
mov
or
lret
inc
sbb
pop
ds
cmpsl
push
push
aad
mov
loopne
mov
lea
mov
cmpsb
stos
and
cmp
jge
xchg
xchg
xchg
jae
rcrl
sar
fwait
call
dec
xchg
aaa
dec
dec
pop
scas
jb
lock
mov
lock
or
add
mov
adc
rcr
test
cmpl
mov
mov
mov
out
sub
xchg
pop
mov
adc
int3
mov
dec
lcall
pop
iret
sbb
popf
outsb
mov
sub
fists
add
cmpl
mov
xchg
stos
inc
dec
adc
andl
je
push
pop
scas
push
fidivs
pusha
es
rcrl
mov
sub
inc
adcl
cmpb
les
in
mov
xchg
por
mov
cli
pop
sarb
mov
es
outsl
rolb
sti
inc
and
outsb
pop
push
movsb
xchg
lock
dec
ret
jmp
pop
sbb
pop
mov
mov
pop
mov
iret
movsl
dec
push
fldt
jp
dec
sub
inc
adc
ror
aas
mov
aad
aas
pop
lods
ret
cmpsb
inc
lock
cmp
data16
fidivrs
lods
movsb
loop
pop
fdivl
negb
xor
adc
or
xor
imul
push
or
mov
cmc
xchg
xchg
dec
aad
rcrb
mov
inc
lds
ret
and
lods
xchg
arpl
xchg
ret
xor
jbe
mov
xchg
stos
jo
xor
add
jge
mov
add
push
roll
out
inc
sbb
xorl
lret
mov
fcomp
incb
les
mov
pop
inc
mov
push
push
rcr
fstpt
and
or
xor
push
or
aam
xor
jg
stc
inc
cld
add
jmp
std
cli
mov
cli
adc
pop
pop
aad
clc
add
inc
movsb
cmp
lret
sub
inc
and
sarb
inc
and
add
xchg
std
mov
inc
cmp
jno
mov
push
mov
imul
mov
test
shrb
sbb
fadds
adc
sti
adcb
mov
or
ficompl
cmpsb
js
mov
loop
jle
add
scas
jmp
scas
rorb
dec
adc
outsl
xchg
xchg
or
fdivl
adc
stos
xchg
lret
inc
xchg
stos
xchg
or
clc
loop
icebp
scas
pop
cld
stos
push
jne
sub
cli
stc
or
rcl
nop
inc
cmp
int
bound
imul
dec
jmp
je
in
popf
or
xor
push
xchg
push
inc
pop
mov
pop
mov
mov
pushf
in
aas
out
testl
aaa
sub
repnz
cmpsl
std
loope
jnp
jg
lret
and
xor
cs
inc
jne
and
cmp
push
movsb
xchg
jmp
sahf
mov
jo
mov
cmp
fucomip
push
push
xor
and
stos
pop
arpl
push
fcoml
mov
cmp
jge
dec
jl
sbb
and
mov
or
cld
add
push
lcall
fisubrs
xchg
mov
or
orl
out
lock
fisubl
cwtl
lcall
push
cs
dec
lock
jmp
popl
adc
int3
or
xor
aam
out
inc
es
jbe
or
pop
mov
mov
jp
in
mov
data16
add
cmpsl
out
sahf
or
dec
xchg
jl
nop
adc
push
test
rcl
aas
das
imul
push
mov
inc
push
outsl
cmp
cmpsl
adc
pop
enter
imul
add
dec
pusha
aaa
mov
lret
pop
or
movsb
stos
into
mov
mov
fmuls
call
les
adc
mov
outsb
notw
mov
inc
add
pop
arpl
ljmp
push
mov
fisttps
cmp
cmp
cli
adc
into
adc
sbb
or
sub
cltd
jb
in
leave
nop
loop
sub
sbb
lcall
xchg
sub
add
pop
jno
and
sub
and
outsl
mov
adc
lea
dec
xor
xor
push
sub
cmp
ja
sbb
mov
mov
ds
add
movsl
inc
sub
sub
mov
jp
sbb
push
sub
or
daa
fcmovne
jne
out
cmp
scas
inc
idivb
mov
sub
xchg
mov
test
xor
out
add
insb
mov
fldenv
out
cmp
fwait
jle
daa
xor
insb
push
jns
loop
out
or
cmp
or
xchg
loop
enter
imul
pop
clc
add
sbb
or
jns
pop
dec
push
xchg
or
scas
jp
cmp
xor
push
std
dec
cmp
xchg
out
push
add
or
rol
mov
mov
pop
call
inc
call
es
adc
fidivl
loop
push
fimuls
pushl
enter
test
fdivrs
dec
jp
cmp
movsl
sub
push
lcall
adcb
mul
lret
dec
dec
dec
cmp
mov
jnp
data16
js
hlt
add
data16
nop
out
push
fcom
or
jle
fldt
lock
mov
dec
popf
or
movq
cmove
data16
ss
cwtl
push
xor
shll
xor
popf
xor
fs
in
mov
mov
cmp
outsb
and
loopne
pusha
xorb
lods
leave
push
aaa
aam
inc
stos
jg
in
cmp
cld
or
jns
in
adc
mov
loope
orl
mov
xor
cmp
rclb
jne
sbb
rorb
jecxz
jb
stos
inc
ja
imul
in
nop
mov
add
jae
add
push
xor
scas
adc
xchg
xorl
nop
xchg
xchg
daa
orl
out
push
ljmp
lret
cmpl
push
and
mov
push
cmp
add
cmp
ljmp
sub
xchg
lods
shlb
imul
faddl
shrl
push
in
inc
pop
add
pop
jg
imul
sbb
movsl
xor
xor
loop
mov
lret
pop
cld
inc
fidivrl
fs
and
xchg
fisubrs
jo
or
push
mov
mov
fsubrl
cli
xor
inc
inc
sbb
add
adc
sti
int3
add
movsb
xor
jae
fldt
cs
hlt
inc
sbb
insl
xor
mov
pushf
push
pusha
je
jne
aaa
in
add
std
sub
adc
call
mov
lea
push
ds
call
sbb
cs
add
jbe
out
bound
push
cvttps2pi
adc
shr
adc
xchg
icebp
scas
nop
dec
iret
add
mov
aaa
mov
cmp
mov
outsb
loope
push
mov
cmp
mov
and
pop
stos
xchg
cmp
ss
pop
mov
subb
mov
imul
rcr
fmuls
pop
sbb
lods
cwtl
fisttpl
inc
rorb
scas
cmpsl
ret
fbld
inc
mov
inc
sbb
in
insb
dec
sti
popa
mov
pop
sbb
shrb
mov
lret
imul
roll
mov
test
lods
inc
idivb
jns
dec
dec
lret
mov
jmp
hlt
mov
andl
fisubs
sarl
out
jmp
gs
addr16
aam
dec
mov
insl
or
sbb
push
cmp
iret
add
inc
loope
xor
and
in
push
pop
inc
lahf
jle
push
data16
iret
and
cmp
adc
add
or
pop
in
lret
sti
data16
mov
push
xor
mov
enter
aam
mov
int
in
and
push
or
inc
jb
inc
mov
cld
imull
mov
mov
mov
adc
orb
out
cmpl
bound
adc
imul
mov
gs
xor
popf
push
js
jno
shl
loope
test
adc
gs
pop
int
adc
xchg
rolb
scas
xchg
test
jbe
jae
push
sub
mov
push
clc
es
loope
push
pop
cli
xchg
and
jl
cmc
sbbl
xchg
mov
testl
fwait
dec
stos
adc
lahf
aam
aad
dec
stos
int
mov
movsl
lock
lods
jl
and
pop
jmp
jle
lret
fimuls
out
loop
lret
inc
repz
dec
fbld
or
mov
dec
pop
sbb
xorb
std
rcr
push
adc
mov
cli
jmp
adc
jbe
xor
jo
jne
cli
mov
mov
cs
movsl
lock
insl
inc
push
pop
pusha
push
jecxz
gs
mov
bound
in
pop
jmp
jb
jae
pop
mov
add
stc
aad
or
or
test
test
xor
out
js
cmp
movsb
rcl
testl
stos
sahf
dec
in
scas
jmp
int3
jnp
and
in
ljmp
mov
inc
pushf
out
mov
pop
daa
int
pop
adc
mov
lcall
fsubl
dec
pop
fstpl
jnp
or
or
inc
rorb
and
inc
cmc
dec
test
mov
fistl
sbb
es
bound
mov
in
scas
ljmp
xchg
dec
cwtl
sub
push
shll
daa
jg
sbb
lods
into
xchg
sbbl
stos
jae
mov
ds
aam
xlat
lds
rcr
adcb
ds
xchg
jg
xchg
xchg
daa
imul
addb
xchg
mov
dec
shrl
popf
jbe
push
adc
mov
jl
or
popf
lret
dec
xchg
bsf
adc
xchg
lea
xchg
sarl
xchg
js
pop
push
filds
jecxz
jbe
adc
inc
js
xchg
or
dec
enter
cltd
daa
xor
das
cli
cwtl
sub
insb
pop
add
mov
mov
pop
decl
test
cmp
jp
cmp
insb
out
les
lods
jg
push
das
out
cld
rcrb
jp
push
add
xchg
xchg
and
jp
je
fsubrs
jecxz
xchg
mull
mov
out
popa
lret
adc
xor
pop
xchg
dec
aas
popf
idivl
jl
popa
and
inc
inc
xor
aaa
dec
cmpb
inc
adc
adc
jns
shl
lods
aam
insb
dec
and
jle
std
rorl
mov
into
fldl
xor
call
mov
inc
scas
add
sub
push
and
push
inc
aam
dec
pop
push
xchg
lret
pop
and
mov
inc
mov
push
jecxz
fcomps
insl
mov
cmpb
lods
jne
lret
flds
in
add
int3
sbb
out
sub
ljmp
out
xor
shlb
insl
cmp
notb
repnz
popf
je
mov
sti
dec
fisttps
icebp
push
aaa
arpl
arpl
movl
lods
and
adc
jmp
xor
xor
add
xchg
xor
lea
mov
rol
pop
or
test
cmp
push
pop
rcl
fistl
pop
test
xlat
push
aas
in
mov
fists
in
push
repz
push
mov
fstpt
and
in
sbb
cmp
sbb
ljmp
inc
xchg
ss
inc
lea
outsb
jb
xor
inc
adc
shrb
mov
jmp
push
ficoml
cmc
add
mulb
pop
lea
out
loop
test
sub
mov
lcall
sbb
leave
mov
mov
mov
push
and
and
test
inc
sbb
and
xor
aaa
movsb
adc
jge
jae
std
shr
jge
inc
out
and
sbb
mov
pop
jbe
aad
loope
daa
fs
andl
push
sbb
inc
pop
sbb
pop
adc
gs
pop
jg
cltd
dec
inc
pop
dec
lods
enter
popf
lods
imul
out
xor
out
pop
jbe
lods
inc
sbb
pushl
ljmp
mov
or
ds
idivl
out
or
rcrb
movsl
mov
xchg
lea
data16
sahf
test
pop
aad
fistpll
punpckhbw
inc
fs
mov
repnz
add
pop
out
mov
es
xor
xor
lcall
jl
add
xchg
das
stos
adc
xchg
push
test
add
js
cs
pop
insl
mov
xlat
nop
rclb
push
jge
lea
stos
dec
push
rclb
and
sbb
sti
xor
sbb
xor
cli
jno
mov
icebp
fdivl
ret
sbbl
xchg
xor
test
jle
andb
sti
and
push
inc
add
push
xchg
adc
sbb
jbe
aaa
int3
popa
mov
jg
inc
push
add
fisubl
stos
out
fwait
inc
adc
aam
stc
int3
mov
mov
test
jo
sahf
jns
inc
inc
or
mov
pop
mov
scas
push
dec
mul
xor
sbb
mov
inc
pop
outsl
jmp
or
xorb
fistpl
pop
cmc
pusha
and
or
mov
jecxz
hlt
loop
pop
stos
inc
adc
push
xchg
ss
into
sub
jae
inc
xor
subb
xor
add
xchg
or
flds
push
in
jne
cmp
push
out
repnz
pop
in
stos
mov
aas
jnp
pushl
rorb
movsl
sbb
nop
ret
insb
cmp
out
cmpsb
or
popf
jp
sub
or
mov
add
pop
xchg
lret
push
push
xor
pushf
add
pushf
test
mov
test
pop
fsubrs
icebp
inc
adc
sahf
mov
push
sub
cmpb
sub
cwtl
xor
mov
out
add
jo
mov
cmc
jb
sub
popf
shrb
jg
cmc
lock
cmp
test
jno
dec
push
xor
jmp
mov
add
test
cli
ss
jbe
xor
dec
jecxz
sbb
xchg
call
enter
cli
gs
andb
jmp
into
push
pop
inc
inc
fs
bound
jno
rolb
mov
pop
mov
xchg
add
lahf
jecxz
in
ds
sahf
pop
lods
mov
in
test
or
mov
xchg
imul
in
fimull
jno
mov
rcrl
leave
pop
fisubs
jmp
out
ds
icebp
add
push
and
fwait
jle
stc
shlb
xlat
cmp
and
jmp
jmp
dec
popa
stc
add
fidivs
push
xchg
mov
call
inc
jp
aas
roll
adc
cmpsl
and
push
mov
stos
mov
inc
sahf
inc
sub
outsb
rorl
pop
fwait
scas
push
inc
push
imul
in
dec
xchg
push
jnp
adc
sbb
mov
jp
or
jmp
pop
lods
aam
fwait
icebp
mov
mov
mov
scas
mov
in
int3
loopne
xchg
mov
mov
adc
xchg
mov
jecxz
fimull
movsl
mov
cmpsb
and
xchg
pop
jns
leave
mov
cmp
fbld
sbb
iret
pop
xlat
lret
sub
jl
out
and
lds
inc
push
popf
mov
pop
and
mov
sbb
sbb
push
mov
add
or
mov
mov
in
insl
cwtl
loop
sbb
xor
sbb
xchg
adc
jge
ret
in
call
icebp
mov
sub
call
in
enter
in
mov
mov
out
lahf
repz
enter
jbe
insb
rorb
orl
sbb
sti
das
cld
or
loop
lret
add
clc
inc
inc
popf
cwtl
cmp
sub
shrb
sbb
push
mov
sbb
repnz
cli
inc
leave
pop
adc
pushf
ficomps
mov
test
mov
jno
pop
iret
out
lcall
pop
sub
subb
lods
cs
rcrb
mov
push
pop
fs
lret
dec
jno
data16
arpl
xor
xchg
jns
jp
clc
stc
add
push
movsb
pushl
add
cmp
or
mov
jne
fdivl
cmpsl
jmp
fstpl
adc
enter
mov
jo
out
mov
sub
faddl
test
push
pop
insb
push
aaa
xchg
pop
jl
dec
pop
sbb
sbb
hlt
xchg
lret
mov
repnz
dec
lods
cmp
pop
sub
mov
scas
mov
mov
test
popl
movhps
ret
fsubrs
ret
dec
loop
cmpb
rcrl
mov
fwait
gs
jp
mov
and
xlat
xor
bnd
test
add
push
jecxz
add
mov
lahf
sbb
or
fiaddl
sti
push
mov
addr16
inc
pop
insb
and
fcomi
les
mov
jecxz
lds
pop
pop
inc
xchg
lcall
mov
mov
dec
xor
nop
or
xlat
pushf
add
ja
cmpsb
into
and
pop
or
jmp
cmp
mov
add
cmpsl
pop
mov
mov
out
movsb
arpl
add
nop
pop
fstl
out
jmp
mov
mov
push
popa
inc
sub
sub
mov
xor
fdivrl
in
aam
push
fdivrl
push
pop
and
mov
icebp
and
mov
imul
adc
adc
or
imul
fistps
mov
mov
loop
aad
mov
aaa
out
lea
cmp
fmul
cmpsl
add
jb
test
or
pop
cli
cmp
xchg
fcompl
pop
iret
mov
mov
xchg
mov
insl
data16
ds
fstpt
dec
inc
add
out
enter
bound
paddusb
push
xchg
iret
pop
imul
jns
jo
adc
pop
das
mov
ljmp
push
add
jge
movsl
jg
ja
mov
add
in
xor
sbb
lahf
lock
sbb
and
pop
and
addb
loopne
xor
jmp
and
fwait
xchg
and
mov
adc
sti
lcall
das
fdivp
subl
ljmp
int3
xchg
mov
and
add
or
push
mov
jg
xor
cmp
and
roll
jecxz
scas
enter
xchg
stos
and
xor
xor
pop
mov
xchg
mov
dec
jb
rcr
inc
cld
das
or
in
cmp
clc
and
add
imul
inc
dec
repnz
ljmp
stos
testl
in
lcall
add
int
addr16
leave
jae
cmpsl
add
loopne
add
push
cltd
mov
xor
popa
ficomps
outsl
aad
pop
xlat
rcrl
jl
imul
mov
cli
dec
cwtl
mov
lods
inc
xor
mov
pop
sbbb
adc
sbb
jns
flds
mov
js
subb
mov
push
mov
sbb
sar
cmp
inc
lea
les
mov
lock
inc
pop
mov
mov
xchg
cli
adc
clc
imul
movsb
cld
sahf
sti
js
in
int3
movsl
mov
lods
loopne
insb
mov
insl
mov
add
aas
adc
mov
lock
jb
imul
adc
and
loop
jmp
mov
mov
iret
ds
adcl
jl
enter
xchg
fdivrs
and
les
aam
arpl
pusha
adc
xchg
aam
sbb
or
mov
mov
lods
mov
out
push
xor
xlat
rcrb
cwtl
mov
mov
pop
cmp
ds
pushf
sbb
xlat
pop
movaps
mov
and
gs
mov
jo
or
das
sbb
pop
test
xchg
inc
test
push
enter
clc
xor
aad
adc
sti
subb
xchg
cmp
iret
iret
cmp
js
push
mov
sbb
cmpsl
ss
in
fistpl
inc
das
or
popa
outsl
int3
nop
push
shl
mov
jae
pop
iret
cmpsb
mov
jle
cmp
sub
popa
or
loope
mov
into
test
ret
jle
jne
jl
jmp
in
push
mov
mov
cmp
jl
jge
pop
test
push
dec
cmp
lahf
or
or
mov
and
adc
test
or
inc
cmp
sub
add
jae
mov
xchg
adc
mov
dec
lret
push
loope
imul
bound
filds
imul
iret
jo
xchg
sub
nop
pop
sub
push
xchg
cmp
push
lcall
and
lds
xlat
sub
push
pop
sarb
shll
cmp
divl
out
push
xchg
jecxz
pop
mov
mov
adc
push
andb
and
call
adc
xchg
mov
add
and
movsb
mov
pushf
icebp
xor
sub
daa
scas
sbb
jae
sbb
addr16
nop
mov
push
or
xor
leave
out
in
pop
cld
shll
out
xchg
shrl
add
addl
aad
sub
popf
mov
std
mov
or
push
add
popa
xor
jle
jno
sarl
jmp
fbld
rclb
inc
xor
mov
inc
call
stos
mov
mov
sub
lret
iret
add
pop
fucom
stc
in
mov
rclb
inc
daa
sub
fisubl
push
cmp
fld
dec
xchg
ss
dec
mov
sub
cmc
cs
push
inc
lock
pop
lret
pop
fmuls
scas
inc
aam
jge
cltd
imul
jno
cmc
jmp
push
or
data16
imul
scas
daa
pop
test
push
jno
rcr
fcomi
xchg
mov
mov
and
mov
or
std
add
lahf
test
lods
aaa
xor
xchg
xor
ja
enter
pop
xchg
sbb
cld
xor
xchg
add
movsl
xor
ss
shll
ja
ds
and
hlt
push
jmp
push
push
cmp
pop
lds
out
ret
pop
jl
jge
rclb
fiadds
sbb
inc
jmp
mov
xchg
jecxz
mov
dec
pushf
pop
mov
out
or
out
and
mov
ret
xor
xor
roll
cli
sbb
pusha
or
fcoml
jne
jl
jo
rcr
or
add
sbb
cld
mov
pop
jl
aas
fucomip
sub
repnz
xor
mov
cld
idivb
sub
mov
adc
cmpsb
loope
outsl
ss
push
lods
cwtl
jo
add
mov
aam
fbstp
mov
inc
push
inc
test
cmp
sti
in
xchg
mov
loopne
mov
fwait
es
loop
pusha
mov
fisubrl
leave
pop
fists
imul
rol
inc
dec
out
xchg
jmp
mov
mov
imul
fisttpl
dec
jo
es
dec
ret
mov
inc
pop
mov
pop
call
sbb
fdivp
sbb
dec
sbb
fstps
cwtl
js,pn
int3
lret
fwait
xchg
jmp
mov
movsl
daa
sbb
test
push
in
insb
jmp
jne
enter
arpl
xchg
popf
or
in
mov
jno
divl
scas
aad
xchg
or
add
xor
push
pop
cs
cwtl
adcb
in
rolb
or
add
adc
dec
loope
addr16
lea
xchg
loope
and
fs
loope
sti
insb
mov
jb
pop
imulb
jmp
das
cmpsl
xchg
mov
andl
and
sahf
lret
or
repnz
adc
cmpl
addr16
sub
cli
insl
jb
push
rclb
in
cmp
add
ret
dec
int3
pusha
jns
shl
leave
test
mov
fadds
xor
jb
sbb
pop
and
xor
out
dec
lods
hlt
outsl
shll
out
pop
cs
push
pop
bound
lea
lret
push
adc
mov
cld
sbb
jnp
psrad
fnstcw
lahf
test
subl
ja
pop
pushf
jnp
jns
mov
inc
xchg
mov
cmpsl
cld
cmp
mov
jb
mov
lock
inc
mov
loopne
add
out
repnz
mov
ret
and
cltd
xor
popf
call
cmc
je
orb
icebp
lret
out
dec
pop
shrb
and
adc
cmpsb
insl
mov
and
xchg
push
lock
jmp
jnp
and
pop
jecxz
and
cld
nop
mov
mov
sbb
das
rclb
in
scas
movsb
aad
and
lahf
gs
aaa
js
push
imul
add
jge
push
in
jmp
push
add
out
scas
stc
dec
std
shll
in
fbstp
in
dec
insb
int
mov
loope
mov
nop
adc
lahf
imul
rcrb
test
lods
cli
les
mov
and
sarl
mov
ret
hlt
in
mov
idivb
inc
inc
cwtl
adc
mov
fcmovb
cmc
pushf
in
and
out
in
sub
lods
xchg
push
aam
aas
jo
sub
pusha
push
loopne
fists
or
add
add
in
inc
vpaddusw
and
pop
adc
xor
out
inc
lahf
stc
xchg
cmp
sbb
cmp
add
push
fsubrl
das
inc
mull
js
jg
nop
adc
data16
lret
jb
pushl
dec
adc
add
sti
xor
mov
int3
push
loope
inc
outsb
out
pop
jb
inc
inc
cmpsl
sub
in
cmp
xchg
aad
xchg
repnz
ret
mov
push
add
jmp
loop
sbbl
pop
cmpsb
out
sub
adc
in
jmp
aam
test
push
dec
jo
adc
loopne
mov
xor
popf
sbb
pop
out
jmp
test
fidivrl
sub
std
push
push
fsubs
gs
gs
out
or
jns
cmp
and
mov
and
dec
push
mov
sub
jo
test
pop
sub
or
jo
movl
cs
sub
xchg
mov
les
push
mov
imul
data16
mov
mov
mov
bound
xchg
leave
pop
mov
or
push
adc
jbe
lahf
cltd
stc
inc
ret
fsubs
sahf
add
or
icebp
fcomps
pop
mov
je
lret
mov
imul
loopne
ja
mov
xchg
xor
das
mov
andb
mov
add
icebp
cmc
addl
push
jno
dec
pop
xchg
and
imul
decl
jns
mov
pop
pop
loopne
ror
cmp
bswap
stc
pop
cmp
std
into
mov
pushf
call
push
cltd
sbb
lea
mul
sarl
push
into
mov
mov
mov
or
inc
mov
daa
sbb
or
std
pop
js
mov
or
movsb
mov
xchg
push
cmp
psubsb
js
inc
xchg
ljmp
inc
pop
hlt
aam
bound
pop
in
add
jb
mov
imul
mov
jmp
push
jae
jne
bound
xor
jnp
push
fcomps
push
mov
inc
ror
mov
scas
mov
lock
fistl
push
cmpsb
insl
mov
call
xchg
pop
popf
lret
sahf
xor
mov
dec
out
in
rolb
icebp
sbb
icebp
adc
push
daa
pop
clc
pop
pop
inc
adc
dec
insl
mov
sub
lret
adc
insl
dec
test
inc
test
mov
push
clc
stc
arpl
lods
fisubrs
negl
jne
dec
adc
imul
cmp
pushf
in
and
push
in
cmp
repz
iret
mov
fwait
push
cmp
jge
pop
cld
daa
pushf
push
sbb
fistl
nop
jbe
mov
popa
jmp
jmp
in
mov
movsl
daa
xor
dec
mov
shlb
roll
pop
push
cltd
insb
daa
adc
orl
dec
sub
fiaddl
dec
lret
je
fdivr
cmpsb
pusha
shrb
cwtl
shll
sbb
icebp
outsb
sbb
pop
lods
jecxz
arpl
andb
adc
mov
jg
cmpsl
pop
pop
nop
popf
dec
sti
int
mov
mov
sahf
lret
loope
fstpt
addr16
mov
aad
stc
xchg
adcb
fstl
and
jge
sbb
jmp
nop
sub
fstps
and
and
nop
push
cmp
mov
cmpsl
sub
mov
cmpsl
xchg
pop
add
jmp
inc
xchg
movsl
sbb
lods
mov
out
fistl
cld
cwtl
add
sub
mov
in
pusha
rolb
xchg
sbb
or
gs
out
mov
or
outsl
cmp
stos
aaa
cbtw
push
xor
daa
inc
or
dec
pop
adc
jecxz
ret
or
insb
outsb
and
add
inc
je
jl
cmp
cmp
popf
dec
jmp
push
push
pop
icebp
ss
jno
ja
add
pop
adc
outsb
sbb
pop
std
inc
not
stos
ret
cmp
ja
jae
lahf
mov
sub
push
in
mull
ja
inc
cmp
cmp
sbb
es
xchg
out
mov
dec
vmovntdq
mov
fstl
std
fsubrl
cmp
mov
pop
xor
fcompl
insb
cwtl
dec
add
jg
add
jae
or
roll
xchg
lock
adc
ljmp
in
mov
sar
xchg
fdivr
test
int3
mov
jge
pop
pop
xchg
aam
hlt
push
xchg
enter
into
jle
and
xchg
xchg
sarb
lock
mov
test
movl
xchg
lods
mov
pop
adc
mov
je
sub
sub
cmpsb
cmp
mov
inc
sub
inc
dec
movsb
mov
and
and
movsb
xchg
push
in
mov
subb
call
hlt
xor
in
xchg
mov
es
call
lods
pop
aad
mov
cmpsb
cltd
mov
inc
movsb
popf
in
mov
pushf
push
fstps
jmp
inc
scas
cmp
ss
adc
sbb
mov
sar
jbe
push
jmp
insb
stos
faddl
scas
fisubl
enter
lock
dec
arpl
pop
sbbl
inc
pop
jle
jbe
push
outsl
aaa
cli
push
mov
cmp
mov
ret
or
and
roll
into
inc
dec
subl
lcall
adc
out
mov
int
push
dec
mov
rol
rcrl
push
or
cli
jbe
testl
mov
add
ret
jne
enter
adc
xchg
out
jns
lahf
push
or
inc
mov
scas
adc
pmulhuw
aam
jno
add
pop
add
je
push
push
jecxz
std
mov
sbb
push
orb
dec
cmpsl
aas
cltd
scas
xchg
dec
into
cmp
cmc
test
mov
sub
sbb
sbbb
aam
dec
in
xor
inc
popa
das
mov
or
push
add
pop
jno
call
inc
mov
mov
or
ret
fldt
and
push
adc
cmp
xor
and
xchg
aaa
jns
ja
sub
adc
or
cmp
adc
cs
lret
shl
jge
add
cmp
repnz
dec
jecxz
sub
mov
jle
stos
and
iret
mov
lock
pop
xchg
lahf
dec
fs
ret
push
lcall
lahf
cmp
lods
push
fistpll
xor
push
push
out
pop
xchg
dec
add
xor
mov
sbb
add
adc
pop
or
cli
mov
push
jmp
std
fldcw
enter
ja
xor
dec
sbb
dec
xorl
and
pop
mov
pop
cmp
mov
ss
pusha
dec
mov
xchg
out
cmpsb
adc
icebp
pop
sahf
adc
hlt
outsb
addb
ret
pop
xchg
or
cmp
cmpsl
xor
shll
repz
cld
push
mov
gs
lret
js
sub
or
pop
ret
arpl
xchg
jmp
or
and
xchg
pop
mov
or
mov
inc
lcall
mov
or
adc
nop
and
pushf
cmp
test
cmp
imul
repnz
push
movsb
dec
ds
inc
and
adc
mov
fldcw
jno
push
pop
adc
or
nop
inc
xchg
into
out
es
add
aad
cmc
mov
dec
xor
xor
lods
or
aad
in
ja
ss
fbld
fildl
jb
dec
sti
sub
mov
mov
outsb
add
insl
repnz
xchg
fisubrl
ljmp
int
dec
xchg
sbb
cwtl
pop
cwtl
jmp
push
repz
stos
lock
pop
push
loopne
rorl
jnp
xchg
inc
test
adc
fdivr
pop
xor
push
lcall
push
xchg
dec
mov
subl
and
imul
sbb
iret
or
push
ds
aas
push
inc
out
jp
jo
scas
imulb
sarb
or
jne
lret
fadd
cmc
push
adc
pop
inc
dec
lahf
push
insl
jns
jo
leave
mov
lock
xchg
test
test
es
xchg
call
pop
xchg
jmp
adc
xor
sbb
pop
cwtl
lret
ret
test
mov
inc
and
push
xor
fadds
cmpsb
cmp
jo
pop
testl
mov
mov
std
add
loop
or
aad
sbb
jno
in
mov
or
lahf
aas
std
icebp
push
or
adc
push
ret
out
and
mov
daa
or
cltd
and
int3
cs
addr16
into
jae
jns
xor
jo
aam
out
xchg
xchg
add
scas
pop
testb
stos
pop
addr16
mov
inc
adc
xor
popl
loope
pop
lahf
mov
xchg
adc
inc
and
bound
mov
sbb
jno
mov
sbb
dec
and
xchg
movsb
jecxz
cmp
les
shr
in
scas
test
cmp
fmull
and
dec
xor
pop
fxch
test
mov
aas
or
cwtl
mov
mov
out
adcb
cs
add
test
jae
push
mov
mov
dec
in
jecxz
pop
stc
push
aaa
mov
rcll
and
pusha
daa
pop
jecxz
push
imul
pop
aas
mov
popf
cmp
jnp
xor
outsl
xchg
jbe
push
xchg
insb
stos
out
test
push
push
movsb
add
jb
pop
mov
xor
subps
stos
inc
pop
ret
and
push
lock
jno
rcll
aam
jno
cwtl
jae
aas
test
cmpsl
xchg
xor
lods
mov
push
in
dec
sub
xchg
lods
sti
rorl
pop
sbb
sub
js
fcomps
mov
xchg
add
hlt
xchg
jb
pop
and
popl
in
add
lahf
lods
inc
int
push
cld
push
push
lds
mov
or
add
sub
adc
test
inc
lods
cmp
pushf
jg
mov
fstl
sbbl
xor
xchg
adc
mov
sub
dec
hlt
jl
test
mov
sub
jbe
push
addr16
mov
jge
sub
xor
add
jmp
daa
call
push
test
int3
xchg
stos
dec
pop
lock
test
xlat
in
xor
inc
cltd
inc
loopne
xlat
sbb
rcrl
dec
dec
in
mov
xchg
int3
and
addr16
cmpsb
loope
movsb
push
ds
dec
popa
sbb
int
xchg
and
xor
pop
sahf
cmc
fcmovb
pop
mov
out
cmp
jno
aad
not
mov
mov
setl
adc
sarl
filds
mov
adc
jle
jne
in
or
stc
cli
mov
imull
xor
ret
cmp
outsb
xchg
jo
fisubrs
pop
mov
sbbb
push
inc
sbb
je
jne
mov
cltd
call
fidivrl
add
mov
or
pop
cld
jae
jecxz
jno
ljmp
and
mov
cwtl
data16
fnstenv
and
pop
or
jmp
gs
inc
nop
icebp
cmp
cli
pop
mov
stos
xor
pop
rcll
adc
cmc
addb
mov
cltd
and
and
bound
xchg
stc
imul
cli
pop
xchg
sbb
andl
xorb
sbb
mov
pop
push
mov
sahf
add
sbb
jnp
cwtl
mov
mov
imul
int3
inc
pop
mov
das
mov
jnp
cs
push
popa
movsl
clc
scas
pusha
push
fsubrl
push
mov
leave
inc
mov
lods
dec
lods
loopne
fadds
ss
mov
lcall
loopne
inc
ret
cmpsl
add
xor
call
fwait
imul
push
jnp
aam
pop
pop
nop
push
xlat
sahf
add
cltd
mov
cmc
dec
movsb
or
mov
mov
out
mov
sbbb
mov
sbb
sub
push
or
ret
adc
out
fdivl
xchg
clc
shl
push
xchg
mov
mov
subl
inc
xor
mov
shl
mov
jne
adc
pop
sub
dec
cli
fwait
push
push
icebp
out
dec
jne
shll
mov
dec
frstor
ds
shlb
test
lods
mov
into
jp
frstor
dec
cwtl
add
push
gs
sub
jle
adc
dec
push
and
popa
cmp
xchg
jnp
gs
cmp
mov
clc
cmp
mov
push
stc
in
faddl
sbb
pop
pop
sbbl
fistl
and
lahf
add
jns
movsl
int3
pop
mov
lods
je
scas
test
inc
add
in
push
mov
popa
out
mov
clc
jl
jbe
jb
adc
call
adcb
cmp
adc
sbb
inc
call
pushf
and
mov
or
test
add
andb
lcall
popf
ret
sub
push
jl
icebp
pop
int3
lods
add
push
arpl
test
js
jp
add
outsb
cmpsb
sbb
int
dec
add
std
adc
insl
test
jne
and
jbe
ds
jno
das
dec
push
xor
pop
xchg
sub
push
xchg
in
pop
pop
popf
mov
nop
inc
addr16
out
ror
lcall
jns
in
pop
ss
daa
sbb
out
push
xchg
sahf
cwtl
pop
repz
push
sub
mov
sub
adc
mov
ret
ljmp
out
jmp
adc
sbb
ss
mov
cltd
enter
xchg
cmp
fdivs
ja
or
push
sub
cs
loopne
int3
cmpsb
sub
xor
push
jmp
lods
rcr
notb
fsubr
push
pop
enter
test
lods
pop
add
mov
push
and
cmpsb
leave
or
cmp
loopne
xchg
in
inc
add
adc
push
shrl
mov
jb
ljmp
jge
push
push
sbb
rolb
pop
lea
outsl
test
cmp
loopne
call
mov
repnz
clc
pop
jb
aaa
xor
mov
ss
or
gs
xor
pop
enter
xor
cwtl
or
in
mov
sbb
mov
cmpsl
push
outsb
bound
xchg
std
sahf
mov
mov
mov
popa
inc
add
sbb
push
mov
loopne
pop
xchg
in
push
pop
mov
lret
sbb
push
xchg
cmpsb
mov
les
push
scas
cmp
sbb
inc
cli
sahf
aas
loop
jno
popf
push
repnz
daa
js
les
mov
pop
pusha
sbb
shrl
mov
mov
or
inc
dec
repnz
mov
jg
dec
xor
mov
xor
cwtl
mov
cmpsb
xor
jl
rolb
and
mov
ja
dec
push
rcrb
cmp
adc
int
xchg
lea
clc
xor
aas
jmp
js
addl
xor
and
sub
andl
adc
adc
ja
stos
and
mov
sbb
or
das
xchg
sarl
rorb
or
stos
or
leave
jmp
cs
push
xorb
imul
and
jbe
mov
xor
out
test
mov
xor
mov
dec
aam
pop
inc
lret
and
or
jg
fstpl
fdivl
notl
lods
rclb
mov
pop
sti
inc
sub
and
adc
sbb
addl
pusha
jp
push
in
fstps
daa
add
push
hlt
mov
xchg
add
roll
xchg
jl
test
ds
adc
push
call
sbb
adc
jmp
adc
xchg
push
lea
push
fdivp
fdivrp
and
adc
push
sbbb
xchg
int
mov
cwtl
push
push
sbb
mov
out
sub
loope
mov
and
jmp
je
xchg
push
xor
fnstenv
xchg
mov
stos
fsubrs
negb
mov
clc
cmpsb
mov
or
sub
pop
and
cmpsb
insl
fs
inc
add
imul
pop
fisubs
xor
cmp
sahf
push
int
sbbb
lahf
xchg
popa
outsl
fs
lahf
mov
inc
int
xchg
inc
cltd
lcall
cmpsb
xchg
mov
or
push
pop
loopne
repz
sbb
stc
out
mov
out
jge
ret
pop
pop
std
out
or
inc
jae
out
lock
imul
push
leave
fists
leave
cmp
mov
in
arpl
pusha
pop
test
cltd
push
xchg
adc
lock
pop
jecxz
std
stos
icebp
cmc
adc
pop
adc
inc
mov
arpl
inc
sbb
jle
sbb
mov
test
and
sub
add
or
sub
inc
ljmp
xor
icebp
or
incb
mov
jg
cmp
jmp
aam
daa
or
jno
out
add
mov
loopne
push
mov
jns
shl
cmc
mov
cmp
xchg
sub
inc
test
jge
imul
outsb
mov
push
mov
test
sbb
dec
jno
repz
dec
or
outsb
insl
arpl
mov
stos
stc
mov
inc
pusha
imulb
outsb
shlb
jae
into
out
insl
std
ret
adc
scas
adc
inc
out
or
and
shll
arpl
ja
loope
xchg
leave
mov
inc
movl
iret
jmp
push
scas
adc
and
jecxz
push
stc
push
add
leave
push
and
and
lods
into
sub
mov
mov
pop
movzbl
jmp
sahf
into
pop
nop
push
test
adc
icebp
mov
in
out
call
jl
mov
pop
les
cmp
enter
ficompl
push
imul
adc
xchg
lea
xchg
js
mov
aas
jne
adc
jno
and
ret
sub
cs
aam
in
ret
vmwrite
cmp
adc
push
nop
stos
sub
xchg
jg
jle
cmp
aam
add
cmc
adc
sbb
imul
fdivs
test
ret
push
scas
aas
and
cmp
pop
dec
push
xor
test
or
sub
aaa
pop
in
xchg
punpckhdq
xlat
stos
and
add
cs
in
lahf
roll
and
popa
adcb
test
loopne
inc
in
fnstcw
fsubrl
mov
fcompl
push
das
sub
cs
pop
mov
lock
xchg
subl
pusha
push
js
ljmp
inc
and
lahf
ja
lea
xor
xchg
mov
pop
dec
iret
mov
and
ds
daa
outsl
insb
inc
ja
enter
pop
xor
mov
xchg
mov
mov
add
sub
ss
sti
scas
cli
add
xor
jns
into
dec
aas
andl
scas
jne
subb
inc
test
pop
pop
cs
jbe
mov
andl
movsb
lea
ret
sub
aaa
mov
enter
ficoms
les
cmp
leave
push
fs
mov
jae
leave
and
lcall
push
out
mov
inc
xchg
inc
shll
aad
call
push
xchg
lret
mov
adc
repnz
cmp
fwait
pop
cld
pusha
sbb
push
outsl
mov
in
mov
ljmp
in
mov
loopne
cld
add
inc
xchg
lcall
out
repz
xchg
rorl
adc
sbb
popa
scas
mov
or
lret
stos
movsb
pop
fcom
or
jecxz
mov
xchg
gs
test
adc
adc
dec
pop
mov
mov
xbegin
or
or
mov
js
jo
mov
xchg
dec
dec
stos
dec
sbbl
leave
push
mov
addr16
mov
ljmp
jnp
mov
repz
out
aad
inc
pop
add
negb
lret
jmp
inc
lods
push
jnp
and
xchg
mov
addb
test
fldcw
mov
push
lea
mov
scas
pop
mov
jbe
xchg
pop
jmp
out
push
mov
mov
xlat
cmp
lcall
inc
or
enter
xor
jnp
pop
hlt
fwait
ss
in
mov
fnstsw
insb
or
lahf
in
dec
vmaxpd
or
mov
iret
inc
xchg
stc
cmp
cwtl
xor
mov
test
add
xor
add
loopne
jbe
lret
mulb
je
xlat
mov
cmp
lret
pop
pop
xchg
add
sbb
xlat
fcompl
stos
fdivs
nop
lea
sbb
pop
xchg
pop
repnz
daa
aam
and
arpl
ljmp
js
inc
mov
add
mov
cmpsb
sbb
cmp
xchg
clc
iret
addl
mov
loop
popf
fldl
xchg
xchg
cmp
or
pusha
push
iret
pop
cmp
daa
adc
jb
inc
ja
je
push
sub
xor
mov
test
xor
stos
push
lods
faddp
iret
lahf
imul
in
mov
mov
xchg
cwtl
adc
test
out
mov
xchg
rclb
push
fistpll
stos
inc
mov
jg
and
pop
movsb
aam
mov
jmp
outsb
push
clc
and
adc
loope
orb
mov
push
xor
mov
test
adc
sub
pop
add
add
xlat
repnz
cmp
jg
lcall
loopne
sub
add
inc
pusha
jl
sbb
ja
pop
push
inc
xlat
mov
lods
sar
mov
fsts
repz
fwait
sahf
shlb
xor
test
rolb
push
and
cltd
je
jns
mov
jns
mov
push
fistps
rorl
in
jmp
cmpsb
jne
or
fsubrl
cld
int3
and
das
mov
movsl
jle
mov
mov
mov
xor
sahf
and
pop
idivl
xchg
aam
es
inc
pop
out
stc
jne
in
sti
ds
sub
fmuls
ftst
mov
add
cmpsl
iret
add
fidivs
lahf
jo
scas
pop
das
mov
repz
dec
inc
out
sub
mov
inc
push
pop
push
dec
cs
adc
jo
or
hlt
add
push
inc
iret
cwtl
jg
jl
jo
or
cmp
jns
pop
fisttps
stos
lods
sub
add
imull
ljmp
jo
mov
push
mov
sbb
in
lock
or
decb
inc
in
test
cmc
xchg
pop
mov
xor
inc
lock
push
test
lods
bound
mov
mov
adcl
dec
clc
xchg
sub
movsl
inc
pop
mov
sub
in
sub
dec
inc
mov
xchg
xchg
popf
xchg
cmp
scas
pop
into
push
pop
sbbl
xchg
cmc
iret
pop
xchg
pop
imul
cmp
xchg
shrl
xchg
push
pop
cmp
inc
mov
inc
and
inc
xor
ja
sbb
out
sub
pop
add
or
outsl
add
hlt
ja
in
xlat
dec
xor
mov
push
add
out
push
xor
inc
pop
push
dec
mov
jb
je
fistpl
lds
or
xor
test
sbb
daa
mov
dec
outsl
fwait
xor
xchg
sub
lea
or
movsb
fisttps
and
inc
and
dec
cmpl
sub
push
jmp
int
fcmovb
cmp
and
pop
push
xchg
add
inc
insb
lcall
in
test
lds
repnz
mov
pop
pop
mov
mov
sti
insl
xchg
add
add
cmp
inc
js
and
out
mov
scas
xchg
and
and
cmp
add
sub
mov
mov
xlat
ret
movsl
mov
in
dec
and
mov
pop
stc
movsb
out
inc
jo
cmp
pop
sbb
lea
stos
cmpsb
push
mov
push
movsb
out
stos
pop
and
sub
rol
pop
orb
daa
insl
sti
iret
aam
push
push
xchg
jl
dec
ret
xchg
scas
mov
bnd
int3
in
ret
lock
into
scas
iret
cltd
mov
mov
lods
push
pop
push
adc
subl
mov
out
call
inc
cmp
add
out
mov
dec
call
aas
xchg
and
das
xorl
lea
pop
push
xchg
pop
mov
test
cwtl
jecxz
inc
sbb
stos
dec
arpl
inc
lret
xor
cmp
pushf
sub
stos
sahf
js
sbbb
and
adc
ljmp
sub
adcl
loopne
and
repz
adc
test
arpl
loop
out
std
adc
pop
fwait
cmpsb
repz
ss
pop
pop
jae
jecxz
add
mov
adc
dec
pop
mov
push
jmp
dec
mov
jle
xor
pop
data16
cmc
mov
xchg
jae,pt
popl
adc
push
mov
sbb
inc
cmovge
xchg
test
outsb
and
pop
hlt
imul
ds
sbb
and
stos
pop
or
imul
adc
fmuls
xchg
xor
bound
fisubrs
pop
jbe
jno
and
mov
or
stos
in
cmp
subl
mov
pushf
scas
mov
into
push
jle
sub
pop
shrb
gs
cld
pop
mov
mov
mov
pop
jns
negl
cli
xor
bound
xchg
adc
ret
xchg
cmp
notb
stc
test
jmp
orl
mov
aas
lods
cmp
push
divb
dec
cmp
gs
nop
sar
out
push
jb
jo
aad
mov
sub
mov
in
push
mov
ja
lret
sarl
cmp
dec
jmp
inc
push
dec
ret
mov
push
mov
test
ljmp
pushl
stos
add
dec
lods
in
and
pop
cmp
jno
mov
cmp
popf
adc
les
push
pop
pusha
sub
xor
jecxz
pop
lret
push
pop
mov
xor
cld
and
adcl
pop
xor
jb
inc
adc
ficompl
xchg
aas
das
pop
in
sub
adc
mov
fldl
dec
enter
popf
mov
mov
mov
mov
cmp
push
mov
inc
pusha
add
sbb
mov
and
add
push
in
addr16
sbb
or
jp
push
push
push
int
outsb
xchg
or
or
in
xor
inc
scas
push
fsubr
xchg
popf
mov
pusha
mov
lret
push
cltd
jecxz
clc
mov
mov
loop
out
jecxz
push
fnsave
popa
dec
movsl
rorl
stos
in
pop
stos
mov
xchg
pop
outsb
xor
lea
add
cmpsb
adc
ret
sbb
mov
cmpsl
mov
xchg
or
test
mov
cltd
cmpb
mov
cltd
mov
hlt
sub
cs
push
fidivrl
jae
pop
and
aad
int3
scas
push
lods
sarb
ret
iret
arpl
adc
bound
outsl
jnp
mov
loop
ret
xchg
dec
test
pushf
pop
mov
mov
jno
xor
mov
and
jnp
outsb
adc
inc
pop
xchg
mov
push
icebp
gs
add
jne
int
std
icebp
mov
mov
jno
shlb
fs
mov
out
and
jae
leave
cli
cmp
clc
sahf
fmuls
mov
int3
js
sbb
xchg
adc
es
addr16
xchg
push
dec
mov
or
mov
aas
push
push
mov
ss
sub
jo
sub
sub
sbb
daa
cmp
push
out
repz
ljmp
mov
and
pop
cli
idivb
mov
lods
lock
mov
dec
inc
add
inc
sbbl
test
mov
fidivs
sub
jecxz
sbb
mov
negb
sub
sbb
xchg
int3
call
jns
or
aam
push
sar
sub
cmp
sub
js
int3
inc
jmp
adc
fldenv
mov
mov
out
dec
adc
dec
push
sub
jb
or
push
add
stos
mov
repnz
sbb
out
pop
or
cld
lods
in
xchg
cltd
or
mov
mov
sbb
cmpsl
ss
iret
popl
mov
scas
cwtl
adc
stos
mov
xchg
sahf
mov
and
push
test
das
or
repz
xor
loop
leave
roll
add
repnz
push
push
hlt
add
dec
xor
fidivrl
add
jae
ljmp
clc
mov
insb
testl
add
add
mov
jmp
cmp
lock
in
mov
cmpsl
jbe
js
ret
add
shl
xlat
cs
iret
stc
mov
sub
inc
icebp
adc
out
xor
pop
ss
test
outsl
aaa
mov
or
push
cltd
je
loop
sbb
mov
sarl
mov
data16
inc
push
aas
fwait
add
sbb
xorb
pop
loopne
mov
sub
push
inc
cmpsb
xchg
xor
idivb
out
inc
dec
dec
mov
push
mov
scas
xor
pop
pop
inc
pop
ret
dec
jo
jne
out
pop
adc
ds
ret
rcrl
mov
shlb
js
push
lret
int3
add
and
cmp
lret
sub
jns
xor
ljmp
test
or
mov
sbb
stos
pop
ret
xchg
lahf
pmullw
cmp
mov
ja
call
sub
mov
mov
enter
popa
add
mov
mov
jo
inc
test
dec
mov
shlb
mov
jbe
xchg
jg
aad
pushf
nop
mov
push
out
std
aas
adcb
pop
mov
fwait
movsb
ret
es
loope
mov
jp
jp
lret
aam
jg
or
cmp
stos
addr16
aaa
push
sbb
lret
scas
popf
and
mov
dec
test
fsubs
fsubs
loope
lcall
lods
pop
add
out
add
push
adcb
pushf
test
mov
stc
mov
mov
mov
pop
and
cmpl
enter
jbe
lds
clc
xor
dec
adc
pop
sbb
int3
xchg
push
fisttpl
and
lcall
stos
popf
ss
outsl
jle
jp
inc
aas
popa
jae
ja
pop
pop
mov
arpl
add
lds
fcomp
mov
movsl
shlb
adc
adc
add
mov
lock
orb
rol
ret
jge
fistps
sub
sub
mov
pusha
sub
xor
jno
xchg
outsl
cli
hlt
rcrl
sti
cli
pusha
jbe
inc
dec
icebp
out
add
cmc
sub
inc
sub
lock
aas
inc
enter
inc
mov
cmpsl
femms
push
imul
data16
and
lahf
mov
cmp
xchg
add
jns
jg
ds
iret
xchg
xchg
addr16
in
xor
sub
shl
ljmp
or
adc
mov
sub
or
xchg
cmpsl
add
mov
pop
out
mov
fiadds
jne
xchg
adc
jecxz
sahf
shlb
cltd
cltd
icebp
mov
loope
insl
flds
dec
add
push
xor
jbe
pop
pop
es
shrb
testb
call
mov
mov
pop
push
push
dec
xchg
jg
inc
mov
mov
dec
in
mov
and
push
iret
out
jae
mov
xchg
cmp
fwait
call
xchg
lods
fimull
sub
fld
test
and
mov
repz
xor
es
movsb
inc
es
xor
cmp
ja
cli
popf
sub
ret
out
and
xor
fcomip
scas
sbb
ljmp
mov
ficoms
pop
imul
mov
fdivr
mov
pusha
inc
xchg
lock
int
outsl
xchg
adc
xchg
mov
mov
dec
es
ret
out
les
cmp
outsl
mov
jno
or
adc
sub
adc
dec
subl
or
fidivrl
mov
jl
or
movsl
test
push
cmp
test
cmp
adc
push
fucom
stos
dec
pushf
push
or
adc
xchg
in
sbb
jecxz
pusha
mov
cmp
bound
jnp
push
out
test
push
xchg
add
inc
xor
sub
and
lods
test
add
mov
cmp
loopne
and
arpl
mov
lods
xchg
int
jns
rcrb
or
mov
stc
lcall
jb
clc
inc
and
push
add
and
movsl
imul
xchg
fimuls
loope
lods
sbb
mov
fadds
popf
mov
test
and
adc
pop
jne
inc
mov
cmp
sbb
sub
aad
adc
mov
dec
push
pushf
push
add
test
fs
rcrl
inc
xchg
mov
mov
mov
jge
jge
popa
faddl
or
fstl
push
popa
movsl
lock
bound
aaa
cmp
or
arpl
and
in
test
call
pop
sub
pop
xchg
inc
stc
mov
adc
pop
dec
repz
nop
aam
pop
cmp
lock
and
push
insb
sbb
in
cmpsb
loopne
inc
mov
jp
lock
mov
cmp
je
outsl
xchg
dec
mov
into
sbb
imul
bound
fiaddl
lds
and
inc
add
in
and
dec
movsb
sbb
inc
scas
imul
stos
push
repnz
mov
jmp
xchg
and
sbb
jo
add
aad
lock
outsl
inc
xchg
jns
lcall
add
in
inc
out
or
mov
jno
jo
cltd
pop
call
jmp
and
lret
sbb
gs
inc
push
cmp
ret
xchg
xchg
pop
fsts
dec
xchg
jb
repnz
shll
sub
mov
xor
mov
cmpl
call
popa
mov
loopne
jns
xchg
jne
leave
push
mov
movsl
add
jecxz
mov
cs
mov
jge
xchg
or
pop
leave
dec
mov
shl
and
pop
push
repnz
ret
push
push
inc
mov
aaa
lods
test
mov
ret
push
and
add
cmc
mov
sahf
mov
pop
add
lahf
ja
mov
ret
adc
je
in
inc
fs
rcrl
iret
mov
push
enter
ret
popf
popf
arpl
cmp
fmull
fidivs
or
dec
sub
clc
lea
in
iret
int3
pop
gs
sbb
lds
xchg
mov
cmp
inc
scas
fiaddl
ja
lahf
sbb
ficoml
cld
pop
cmp
lcall
aam
or
cmpsb
jno
test
repnz
mov
jg
inc
insl
pop
mov
adc
repnz
mov
mov
pop
jo,pn
imul
punpckldq
mov
dec
xchg
xor
push
ret
mov
in
jge
fstl
insl
sbb
ljmp
or
mov
je
mov
dec
lcall
push
pop
xor
ficomps
fwait
pop
sbb
fwait
inc
mov
jl
leave
lds
sub
repnz
ds
mov
cmpsb
and
ss
dec
cmpsb
daa
jns
cld
xchg
mov
test
xor
mov
and
add
mov
js
xchg
iret
pop
call
adc
leave
ret
jmp
int3
ljmp
imul
shr
mov
add
test
cmp
pop
sub
dec
loopne
fwait
jmp
push
ds
xor
pushf
xor
int
jbe
data16
and
push
mov
sub
imul
mov
lea
xchg
sbb
sbbl
sbb
add
or
jmp
lret
xor
ror
pop
inc
scas
pop
lock
mov
movsl
fs
out
roll
mov
cmpsl
in
add
jbe
repz
mov
pop
bound
add
bound
popf
push
cmp
cwtl
inc
jo
stos
push
popa
ljmp
negl
into
and
test
mov
dec
xchg
jns
fcoml
js
xchg
loopne
push
out
loope
test
out
xchg
mov
ljmp
push
inc
je
fbstp
and
sub
imul
dec
mov
mov
add
lods
dec
sub
and
xchg
pop
movsb
lcall
mov
adc
xor
sbb
mov
push
repnz
lds
push
lcall
mov
pop
test
cli
lahf
inc
cwtl
iret
xchg
and
xor
dec
stc
sub
jbe
adcl
rclb
jae
shrl
shlb
adc
repz
popa
and
fisubs
fldl
push
out
pop
add
sub
fbstp
fwait
repnz
arpl
js
adc
adcl
add
hlt
pop
mov
cs
lret
js
add
popf
aaa
cmpsl
pop
push
bound
loopne
jp,pn
rol
and
div
js
jg
int
jge
push
adc
negl
mov
or
fsubs
in
lock
mov
scas
rdmsr
xchg
sti
xchg
xlat
mov
xor
loopne
lret
jns
lahf
xchg
testb
jae
xor
xchg
imul
test
testl
xchg
adc
fcompl
push
nop
test
lea
push
pop
test
pop
cld
aad
push
loope
dec
shrb
std
int
inc
aaa
add
push
jbe
cmp
adc
repnz
daa
jp
js
inc
mov
add
shr
mov
out
xchg
les
sbb
sahf
or
in
fwait
cmp
lahf
mov
inc
sbb
pop
pop
sub
rorb
xchg
mov
out
xor
pop
mov
test
js
inc
aas
ficomps
sub
mov
out
addr16
mov
mov
sub
ret
mov
test
ja
gs
fucom
mov
ljmp
sti
mov
inc
daa
xchg
mov
mov
mov
fadds
push
imul
sbb
and
aas
xor
movsl
pop
hlt
mov
and
xlat
mov
push
aam
leave
enter
int3
or
mov
std
mov
mov
cmp
cmp
and
jae
sbb
xchg
mov
fsubrl
adc
mov
mov
in
push
test
out
stos
loop
jecxz
mov
imul
fimuls
jecxz
push
fisttpll
mov
test
jnp
ljmp
and
adc
and
xchg
in
rcr
sub
gs
ret
stc
xchg
and
mov
and
push
test
mov
ja
pop
repz
sti
scas
addb
outsl
js
call
dec
pop
popf
pop
push
fstps
push
mov
shl
pop
jne
aaa
mov
movsb
push
rolb
shr
in
cmpsb
jne
xchg
xchg
in
xchg
add
pop
or
sbbl
add
jmp
xchg
dec
aas
mov
push
fsubr
xor
or
sub
cltd
lea
mov
aad
daa
mov
inc
cltd
jo
pop
adc
lcall
clc
adc
dec
dec
xchg
pop
arpl
loope
dec
sbb
je
push
add
and
into
inc
dec
imul
xorb
add
shlb
push
mov
sarb
pop
push
add
cmpsb
loopne
subb
or
jb
mov
ficoml
sbbl
loop
xchg
or
shll
test
test
or
lret
push
jmp
cmpsb
loop
push
or
fisttpll
add
push
mov
leave
xchg
pop
or
mov
dec
gs
in
je
pop
mov
mov
cmp
rol
aaa
mov
mov
mov
xchg
sti
or
test
push
cmpsb
cmc
out
cmp
outsl
bound
decl
adc
adc
xchg
xor
push
fcmovne
jl
mov
hlt
lret
outsb
sbb
adc
mov
pop
imul
lcallw
mov
pop
mov
jmp
push
outsl
pop
insl
fsubl
sub
push
sub
popf
jmp
jp
iret
inc
clc
adc
repnz
fsts
pop
or
jne
and
int3
aad
jbe
inc
adc
outsl
dec
add
lahf
inc
xor
clc
out
cmp
js
ret
ljmp
xchg
aam
scas
cmpsl
adc
push
sub
lods
cltd
pop
int3
imul
pop
push
seto
lods
shll
mov
call
loope
arpl
je
sub
test
shrb
add
in
sub
sub
cmp
or
sub
cmovs
push
jae
or
or
sahf
fldl
cmpb
int3
mov
sub
mov
mov
mov
mov
repnz
jl
push
adc
xor
ss
loopne
shr
and
jbe
fldt
mov
mov
orb
or
in
jbe
jnp
xchg
fidivrs
xchg
cmpsl
xchg
mov
addr16
jo
imul
call
mov
fcoml
lods
add
mov
cmp
push
xchg
je
pop
xor
mov
out
and
es
xchg
movsl
out
sub
jnp
jbe
fs
shll
int3
jge
inc
dec
inc
sti
or
ss
add
cmc
test
xor
jnp
mov
or
cmp
insb
mov
dec
jmp
push
int3
test
je
repz
rorl
mov
aam
test
sub
subl
test
lods
jecxz
mov
jns
fisttpl
and
pusha
cmp
and
jne
inc
mov
incb
pusha
fdivrs
lds
shl
jle
pop
repnz
dec
mov
sahf
push
test
pop
or
cli
in
ret
add
outsb
negb
std
stc
std
pop
outsl
test
jmp
jns
popf
sbb
mov
mov
cmp
mov
dec
mov
mul
in
int3
lds
push
sub
mov
cwtl
ja
xchg
stc
mov
jne
xchg
mov
addr16
or
lods
mov
xor
mov
lock
incl
xchg
outsb
movsb
adc
shlb
jge,pn
cli
lods
sub
cmp
outsl
push
cltd
pop
push
stos
stos
cld
mov
push
cmpb
hlt
ds
sub
sub
mov
shll
xor
and
test
insb
jp
shr
pop
pop
popa
jns
fnstenv
jb
dec
repz
sti
test
push
addr16
inc
jbe
mov
shrb
and
pop
xorl
cmc
or
cltd
xchg
stos
adcl
out
test
adc
or
mov
add
adcl
stos
sub
pusha
and
inc
cltd
adc
enter
add
jmp
jg
in
sti
aad
sbb
psubusw
cli
int
jb
pop
ss
and
jmp
xor
or
out
out
cmpsl
adc
and
pop
sub
outsb
mov
sub
cmp
sub
clc
out
xor
loopne
push
shlb
or
fidivl
rcll
adc
cmp
push
xor
popa
imul
lcall
mov
lret
iret
int
push
popa
idivb
or
pusha
mov
mov
sti
jl
inc
or
sub
ficoms
mov
lahf
insl
dec
add
add
pop
xor
xor
pop
je
mov
dec
mov
in
sahf
icebp
sub
fsts
jae
loope
or
ret
fstps
lahf
xchg
aaa
ret
mov
into
xor
inc
ljmp
adc
lret
jnp
jg
arpl
lcall
sti
iret
aaa
mov
das
mov
test
lret
sub
inc
push
xor
leave
cmp
adc
sub
fstl
add
lret
scas
pop
pop
xchg
and
ret
cmp
clc
xchg
leave
pusha
sub
inc
adc
sti
mov
sti
xchg
mov
add
mov
das
jns
outsb
pop
mov
add
jae
rcl
pop
out
lret
js
cmc
enter
inc
or
inc
cmc
fwait
or
adc
and
rcl
insb
dec
or
add
insb
pop
xchg
shll
xlat
stc
movsl
mov
jg
xchg
cwtl
bound
sarb
out
cli
cmc
add
shlb
xchg
adc
and
jg
mov
popl
push
sub
test
sbb
jg
sub
in
mov
jns
mov
push
stc
adc
daa
mov
subl
fstps
inc
mov
scas
mov
ss
mov
pushf
mov
rclb
rorl
in
jl
js
out
xlat
popf
cs
xchg
mov
ret
or
jnp
mov
repz
mov
push
push
xchg
add
ja
mov
rdtsc
mov
aas
pushw
hlt
testl
sbb
and
scas
push
and
and
pop
xchg
jmp
loopne
jnp
mov
notl
mov
cmp
das
inc
loope
ja
xor
pop
adc
sbb
mov
inc
stos
mov
sbb
push
cmp
push
lret
xor
cmpsb
stc
jecxz
dec
sbb
pop
inc
repz
lret
pusha
cmp
pop
pop
fs
cmp
pushf
and
jb
notl
enter
movl
add
push
inc
mov
cmp
mov
xchg
gs
cmp
aad
dec
sbb
pop
pop
dec
int3
sar
add
nop
out
inc
and
ret
cmp
leave
scas
xor
pop
and
adc
sar
sub
dec
sub
pop
sahf
dec
pop
or
movsl
fs
pop
xor
aam
push
iret
push
sbb
push
cmp
subl
cli
pop
test
aas
cld
fsts
jecxz
xor
repnz
or
dec
stos
mov
lock
or
or
rolb
push
cvtdq2ps
xchg
jmp
sub
xchg
jmp
sbbb
subl
sub
hlt
in
popf
xchg
fwait
sub
in
out
pop
pop
mov
sub
cmc
jns
pop
xlat
or
sbb
dec
xchg
dec
std
dec
jne
rolb
cmpsb
rolw
notl
xchg
push
sub
cli
insl
mov
add
add
pop
loop
or
sub
pop
js
sub
push
jns
pop
icebp
xor
push
mov
xchg
mov
mov
test
cmp
not
inc
outsb
cli
movsl
icebp
nop
jge
in
and
pop
and
fisttpl
xchg
dec
push
lods
jp
xchg
mov
ret
dec
or
in
dec
filds
fnstsw
sbb
ficoms
inc
push
in
mov
push
ja
fiadds
and
testl
cmp
jno
stos
cmp
inc
adc
jne
push
movsl
mov
daa
sahf
pushl
sbb
sub
or
test
mov
push
fstpl
xchg
scas
imul
jae
inc
call
ljmp
or
jb
or
lahf
rorl
or
out
in
adc
sti
lahf
ds
add
jge
leave
push
rcll
mov
add
jnp
test
je
pop
and
dec
or
mov
out
jno
xchg
sahf
sti
out
xchg
mov
jnp
sahf
mull
mov
cmp
sbb
icebp
rclb
scas
lock
fidivrl
push
inc
push
mov
push
xchg
fnstcw
adc
hlt
cmp
roll
test
dec
stos
jle
and
push
fwait
insb
arpl
push
xchg
xchg
sti
mov
ret
and
push
sbb
sarl
clc
and
or
mov
jno
lds
cwtl
stos
scas
pop
test
cld
adc
iret
in
jb
fucomp
push
cmp
push
adc
js
dec
clc
stc
out
and
sbb
stc
add
mov
jne
cld
and
insb
bound
and
jnp
mov
pusha
adc
shl
sarl
xchg
and
xor
dec
add
lret
addr16
dec
nop
xchg
repz
and
sub
in
stos
js
enter
ds
mul
cmc
cmp
pop
insb
inc
dec
jne
inc
mov
push
cld
jmp
pop
sbb
mov
jbe
push
int
cmp
push
pop
dec
xchg
inc
mov
inc
fidivl
movsb
sub
pop
jge
hlt
mov
mov
pushf
in
adc
xchg
in
lods
cwtl
test
fildl
fwait
push
or
je
jo
shl
mov
iret
movsl
bnd
mov
sub
adc
xlat
sub
dec
push
xchg
push
push
cmp
hlt
lret
ret
cmpsb
xor
adc
fists
popf
lods
push
fisubrl
jo
in
aas
ljmp
mov
movsb
sbb
or
nop
sti
leave
aaa
inc
dec
sub
dec
insb
icebp
mov
out
iret
insb
inc
xchg
rolb
repz
inc
stos
fidivrl
lock
add
lret
or
clc
fs
sub
cmp
aas
xor
dec
jbe
adc
addb
leave
lea
cmc
shll
dec
mov
sahf
sub
cmp
shll
mov
mov
fwait
imul
jecxz
dec
jge
in
orl
add
add
jp
push
clc
stc
jecxz
pop
cltd
push
sbb
mov
jle
dec
jo
pop
push
decb
rol
loopne
sbb
test
je
mov
pop
test
das
mov
f2xm1
stos
les
loop
mov
outsb
lahf
std
sbb
imul
lahf
sub
outsl
lods
js
negb
sbb
shrb
inc
aaa
mov
jecxz
call
leave
sar
mov
shrl
pop
fsubl
ja
pusha
adc
inc
mov
jbe
ja
mov
sbb
lea
dec
popa
out
andl
int
sub
adc
jnp
and
or
add
inc
fldt
jne
cmp
pop
sub
lods
mov
sub
mov
fldcw
repnz
aas
pop
shlb
push
jb
test
push
out
cmp
mov
xchg
mov
sbb
ret
insb
ficoml
bound
inc
rolb
outsl
cmpsl
or
adc
push
jae
jbe
enter
addb
mov
push
xchg
ffreep
pop
mov
hlt
pop
dec
mov
enter
jb
fwait
adc
movb
repnz
add
sub
dec
popf
pushf
outsb
pop
call
daa
sub
xchg
jg
jnp
push
pop
xchg
jle
push
mov
mov
xchg
mov
mov
cmp
cmc
pop
fisttps
xchg
pop
scas
jb
aad
xchg
lods
jbe
pusha
pop
rorl
mov
std
add
xchg
xor
push
ja
jmp
addr16
leave
pop
sbb
adc
fdiv
pop
shrl
push
int
cmp
xchg
push
jno
add
cwtl
mov
pop
pop
loop
mov
jne
sbbl
sbb
fwait
sbb
push
dec
orl
shl
sub
adc
cmc
out
mov
mov
insb
loope
loop
mov
push
sbb
in
mov
lock
adc
sahf
push
xchg
loope
or
lods
imul
jle
jl
es
xor
frstor
or
nop
mov
inc
mov
daa
and
jne
push
dec
fs
roll
addl
movsb
add
fwait
rcrl
dec
adcb
inc
or
cmp
mov
xor
push
cmpsb
and
scas
mov
pcmpgtb
xor
leave
mov
mov
sbb
inc
or
ret
ss
mov
jp
ret
cmp
sbb
jg
inc
popa
sbb
push
icebp
imul
mov
ret
les
mov
push
lret
and
fwait
ds
stc
push
add
cltd
jge,pt
adc
in
lods
or
call
add
test
xor
inc
inc
mov
sub
jp
loopne
pop
mov
dec
popf
ds
notb
cmp
ds
and
stos
xchg
or
stos
mov
or
xor
popa
sbb
xor
lds
jmp
pop
fsub
lret
sub
in
out
std
inc
cmp
sub
test
test
clc
loop
inc
mov
sahf
dec
jl
lcall
sub
cmp
lahf
cmpsb
jo
js
in
xchg
negb
jo
mov
add
call
lret
inc
mov
push
int
xor
cmp
movsb
test
jle
leave
comiss
cmp
pop
das
rolb
pop
and
mov
xchg
push
sti
jno
push
or
test
dec
xchg
mov
dec
repz
jb
jge,pt
test
jp
inc
sahf
adc
subb
sub
adc
add
orl
int
dec
out
pop
unpckhps
and
lds
nop
pop
xor
repz
jmp
pop
mov
jg
sarl
scas
jl
mov
mov
mov
icebp
pop
xchg
mov
xor
cli
out
or
stos
pop
jp
pop
clc
insl
push
ret
push
lret
pop
sub
adc
sub
jge
sub
out
sub
jae
push
call
ljmp
adc
in
and
pop
cmp
sbb
adc
mov
add
les
popa
pop
ret
mov
xchg
pop
in
add
sbb
arpl
pop
sbb
cld
mov
int3
inc
and
adc
lods
movsb
and
push
aas
and
cmpsb
push
mov
push
imul
pushf
mov
ljmp
andb
aam
aaa
xchg
dec
dec
adc
or
out
lds
dec
into
xor
movsl
cmp
nop
dec
mov
mov
lds
cmp
cli
jo
push
jno
xchg
push
cwtl
sarb
stos
outsb
insb
mov
jo
test
in
push
cmp
mov
cmp
testb
int
fs
int3
mov
jb
push
xchg
mov
add
mov
jle
push
push
or
mov
xor
rclb
call
cmc
mov
jg
jb
xchg
pop
int3
in
mov
jae
mov
rcll
inc
hlt
ss
mov
aam
jae
clc
sub
cmp
iret
xchg
push
popa
in
in
inc
scas
mov
and
and
sbb
leave
rorl
dec
ficoms
mov
stos
mov
adcb
or
mov
fdivp
xchg
and
push
cmp
adc
arpl
in
mov
dec
xchg
jbe
cld
imul
out
loop
leave
hlt
out
cmp
cmc
and
or
or
das
xchg
sbb
cltd
lods
movd
sub
jle
mov
pushf
push
mov
lcall
int
sub
cmpsl
xchg
or
mov
dec
pushf
mov
hlt
dec
pop
jno
mov
mov
sbb
adc
and
dec
push
in
jecxz
pop
cmp
fdivrs
add
in
mov
cld
inc
cmovne
adc
push
aaa
inc
jnp
pop
mov
int3
test
into
aaa
ficompl
cli
imull
or
add
xchg
out
and
testb
adc
push
imul
in
popf
xor
and
push
pop
inc
popa
push
sbb
jg
cwtl
mov
mov
add
repnz
aaa
lcall
lahf
or
in
hlt
roll
fildll
xor
mov
pop
xlat
xchg
and
mov
push
dec
aaa
mov
fisubl
sbb
and
cwtl
ss
cli
push
push
jl
aas
xchg
andl
or
or
in
mov
test
andb
mov
lea
cld
jge
aas
inc
inc
test
push
cmc
daa
xchg
lds
lods
adc
cmp
andb
and
xchg
je
xor
add
pusha
and
mov
jno
out
loope
fidivrs
mov
xchg
out
mov
add
mov
flds
push
lds
and
daa
pop
lret
add
dec
fdivr
ret
xor
push
and
push
and
and
mov
lcall
mov
adc
pop
js
stos
fnstcw
bound
mov
xor
movsb
xor
jno
jmp
ljmp
ret
int
icebp
push
in
jnp
test
lret
jns
sub
and
dec
inc
add
dec
dec
push
adc
add
test
sub
repnz
xchg
jae
sub
sub
pushf
mov
loopne
scas
xchg
dec
scas
int3
ret
xchg
or
xlat
sub
fcompl
pop
mov
pop
dec
ja
cmp
xor
cwtl
in
jb
sub
xchg
jno
xor
sbb
lock
scas
in
xor
mov
or
sub
cmp
dec
ja
pop
hlt
xor
or
adc
jae
rorl
mov
imul
mov
mov
jle
adc
rcll
inc
xchg
jno
testl
int
les
repnz
jmp
scas
popf
lock
mov
je
push
mov
add
aaa
adc
fisubs
sbb
sbb
lea
inc
xchg
es
shrb
xor
or
pop
jmp
mov
sub
aad
mov
jp
or
stc
jp
cs
add
or
jns
and
mov
out
fstpl
sbb
sub
mov
dec
inc
daa
xchg
push
mov
xor
jb
std
lret
sbb
add
push
push
outsb
or
loope
aad
aad
inc
les
ret
lret
jg
lock
cmpsl
and
bound
xchg
push
loopne
and
xchg
sahf
fiaddl
das
xchg
jae
inc
or
inc
in
mov
add
addb
jb
adc
cmp
out
andb
jae
sbb
sbb
les
mov
add
and
jb
lea
fcmovnu
xor
mov
stc
scas
push
sbb
pop
pop
pushf
js
ret
xor
enter
mov
mov
mov
dec
dec
jbe
or
mov
dec
xor
insb
ljmp
scas
mov
add
test
adc
out
int3
dec
xor
js
lret
test
mov
mov
loop
xchg
clc
push
jno
gs
add
repnz
inc
adc
push
and
mov
push
cmp
jge
out
mov
mov
dec
jmp
orb
outsb
lret
jae
shrl
test
test
shrl
dec
xchg
xchg
cmpsb
pop
mov
push
xchg
sbb
or
nop
lahf
stos
jno
je
cmp
mov
dec
jle
aaa
or
jne
fldenv
cmp
push
jnp
mov
popf
and
or
mov
push
adc
add
xchg
pop
mov
dec
popa
jg
push
mov
xchg
das
adc
jnp
mov
pop
mov
out
mov
xchg
inc
sbb
ljmp
rcrl
insl
mov
leave
xor
push
outsb
test
mov
mov
mov
addr16
aaa
push
mov
sub
mov
call
out
push
push
pop
sbb
cmp
rcll
xchg
sarl
cmp
into
rcr
sbb
test
mov
push
adc
imul
jne
jge
adc
inc
or
cmp
pop
jmp
pop
je
cmp
rolb
lods
ror
outsl
aam
jbe
lock
push
in
stos
out
lock
and
int3
cmc
mov
adc
std
jo
sub
cmpb
lcall
dec
int3
xlat
cmp
or
mov
mov
dec
xchg
sub
push
and
dec
dec
andl
xchg
cmp
mov
int3
add
inc
add
es
sub
mov
push
dec
aas
cmp
les
enter
inc
or
fucomp
or
lock
scas
test
mov
hlt
push
fidivrs
out
xor
jp
push
daa
movsb
scas
inc
mov
lret
sub
adcl
mov
add
pop
add
divb
ds
call
fnstcw
ss
push
test
cltd
and
mov
or
pop
test
lock
xchg
mov
popf
fwait
mov
push
dec
xor
mov
fsubl
push
mov
popa
mov
aas
xor
mov
data16
sbb
sub
test
xchg
pop
ja
xor
fsubr
dec
rorl
orb
inc
jmp
nop
xchg
inc
incb
cvttps2pi
imul
mov
jno
aaa
int3
dec
fwait
ret
xchg
imul
daa
leave
sub
add
xchg
and
jl
sub
loope
pop
and
xchg
jecxz
jge
sub
out
lcall
push
mov
pop
sarl
add
cmp
pop
xchg
cltd
lods
pushf
push
icebp
jp
or
and
push
imul
shll
in
test
jge
dec
je
pushf
fsts
or
stos
mov
mov
push
or
lret
pop
xchg
push
mov
pushf
add
call
or
mov
cli
jne
out
insb
stc
mov
or
pop
fisttpll
stos
aam
dec
mov
jg
cli
push
inc
sahf
or
je
adc
sahf
xchg
xchg
push
push
jo
or
cmp
test
mov
sbb
test
jmp
jle
or
mov
cwtl
add
xchg
mov
mov
ret
cmp
movsl
mov
movd
mov
pushf
mov
repnz
cmc
mov
mov
icebp
cltd
cmp
pop
clc
mov
cli
movsb
sbb
push
clc
dec
out
sbb
xchg
pushf
mov
orl
pop
xchg
xchg
ljmp
sbb
stc
push
loop
sub
or
inc
out
mov
leave
dec
ror
push
pop
int
or
iret
pop
call
mov
in
sub
jmp
inc
inc
pop
fists
sub
repnz
jge
pusha
mov
adc
sbb
mov
pushf
inc
dec
inc
enter
aaa
lcall
loope
xchg
adc
jo
mov
rcr
pop
adc
mov
ss
es
arpl
stos
rorl
sahf
jmp
adcb
sarl
clc
mov
je
add
das
sub
jno
inc
adc
insl
out
inc
gs
xchg
push
inc
mov
cmp
or
push
push
ds
xchg
mov
movl
rolb
push
rcrl
movups
or
mov
mov
add
in
mov
or
pop
pop
mov
mov
pop
aaa
sar
fsubrp
or
js
jge
pop
pusha
dec
subl
mov
shl
dec
iret
and
cmp
xchg
xorb
test
cmc
jb
sti
pop
fisubs
dec
sti
fs
imul
jp
repz
pop
bound
mov
in
clc
dec
jmp
mov
imulb
sbb
mov
add
xor
in
ja
xchg
cmp
leave
mov
jbe
xor
ret
outsb
std
data16
sub
or
push
inc
add
cld
dec
dec
dec
into
es
lcall
cli
pop
sti
int
pop
sub
xchg
adc
or
sti
jns
mov
push
pop
repz
data16
pop
dec
pop
add
repz
sub
aaa
dec
aas
dec
mov
loopne
or
std
cmp
popa
inc
sub
inc
pop
mov
dec
push
loop
xor
idivl
stc
decb
adc
inc
jbe,pt
or
shrl
mov
xchg
daa
xchg
sarl
loopne
and
dec
jne
into
rcll
nop
jmp
lock
jbe
daa
outsl
jl
xor
outsb
subl
jo
cmp
ffree
dec
aam
dec
pop
das
pusha
aas
notb
jne
call
cli
sub
push
jle
jmp
push
addr16
xor
insl
lds
xor
mov
lahf
popa
test
iret
pop
ljmp
icebp
aad
or
loope
fs
push
in
cmp
pop
inc
les
in
mov
rcrl
xor
dec
or
fwait
ds
pop
in
pop
addb
fwait
call
pusha
xor
jl
sbb
jbe
js
shl
add
shlb
xor
sub
add
in
aam
cmc
push
in
pop
cwtl
cmp
loopne
add
mov
push
mov
dec
mov
xchg
dec
mov
inc
scas
cmpsb
adc
mov
int3
cmp
jecxz
scas
add
neg
sub
xorl
mov
popf
xchg
cmp
rclb
or
imul
std
in
insb
jbe
movsl
add
and
push
cld
push
sarl
fistpl
or
or
jp
addl
adc
inc
jno
push
cld
pop
ffreep
or
xchg
out
add
or
xor
cmc
push
pushf
cmp
mov
or
repz
or
push
sub
scas
cwtl
mov
or
adc
ret
mov
sub
xchg
mov
cltd
lret
mov
push
pop
fsubl
dec
ljmp
sub
out
inc
int
xor
mov
or
subl
aam
sub
hlt
or
adc
ljmp
nop
xchg
out
ja
mov
jae
push
shlb
out
cwtl
or
lret
mov
scas
dec
enter
inc
in
shll
xchg
vmread
fsub
in
cmp
int3
xor
insb
cld
and
mov
inc
repz
outsb
insl
pop
outsl
or
daa
mov
lds
inc
mov
stos
movsb
adc
xor
int3
fimull
adc
shlb
or
inc
sub
dec
jnp
data16
cmp
cmpsb
mov
inc
mov
xor
faddp
push
mov
enter
push
cwtl
push
push
push
pop
imul
stos
mov
lds
cli
adc
int
repnz
and
out
or
movsl
mov
push
dec
jge
mov
push
clc
xchg
and
pusha
negb
jmp
cld
test
add
ss
ljmp
rol
jle
iret
jmp
ds
dec
out
push
lret
dec
mov
sarl
rcr
das
in
pop
push
jl
scas
xchg
loopne
sub
inc
test
mov
lret
jb
shrb
add
dec
jle
insb
sbb
or
cltd
xchg
mov
push
decl
or
mov
insb
xchg
movsl
cmc
pop
sbb
arpl
outsl
mov
loope
or
mov
mov
cli
or
jnp
aas
arpl
into
fwait
scas
adc
pop
inc
sub
add
sub
outsl
inc
xchg
movq
cmp
sarb
fwait
lahf
jg
jle
idivl
cmp
mov
out
or
cmp
sbb
pop
mov
mov
mov
jecxz
lds
aam
jecxz
sbb
add
sbb
in
mov
data16
popa
movsb
push
mov
shrb
sarb
clc
nop
in
dec
push
sarb
gs
inc
call
icebp
push
dec
arpl
ja
adc
pop
clc
aas
pop
out
icebp
push
shll
jbe
stc
stc
mov
lcall
add
sahf
mov
divl
adc
jbe
xorl
xchg
inc
cmpsl
lods
ds
dec
sbb
fisubs
mov
clc
out
imul
aam
inc
or
adc
xchg
mov
js
or
and
stos
enter
pop
or
mov
cmpsl
inc
adc
clc
orb
pop
scas
push
stos
xchg
xchg
enter
cmp
mov
fisttpll
jp
mov
subb
mov
cmc
sbb
fidivrs
ljmp
mov
hlt
popa
and
mov
adc
lahf
dec
jge
jle
movb
xor
lock
icebp
cld
dec
pop
xchg
push
sbb
js
iret
adc
mov
loop
sbb
fisttps
test
cmp
shrb
sbb
ljmp
les
sub
sti
cmp
pop
inc
test
mov
mov
call
in
lods
mov
filds
into
lret
push
not
pop
jecxz
mov
out
clc
out
inc
ffree
lahf
adc
cmp
xchg
adc
das
pop
mov
inc
mov
mov
mov
aas
cmpsl
enter
in
outsl
jo
arpl
cmc
add
cmp
jg
hlt
movl
jmp
jno
inc
cmp
cmpb
sarb
ds
xchg
movsb
pop
fistpl
psubq
mov
xchg
and
movsb
imul
or
je
filds
xor
in
sub
in
rcrb
inc
fiadds
push
sub
xchg
dec
dec
out
stc
daa
aas
fsubs
pushf
enter
adcb
out
and
decl
aad
dec
ss
ficoms
comiss
gs
or
roll
adc
and
mov
enter
and
dec
mov
les
int3
pop
int
stc
inc
iret
mov
in
jo
or
xchg
adc
pushf
jle
aam
xor
mov
mov
test
xchg
mov
xor
mov
mov
rclb
jle
lds
in
mov
jo
cmpsb
lret
pop
andl
xlat
call
cmp
rol
mov
cmp
xchg
aam
test
or
push
andl
sub
jecxz
and
sub
add
sahf
jle
dec
popf
inc
fsubp
xchg
adcb
cmpl
pop
mov
insl
mov
or
jns
push
sbb
pop
pop
mov
clc
jle
loopne
mov
fiadds
sbb
mov
xchg
popf
mov
and
pop
sbb
jbe
mov
aaa
bound
inc
shlb
pop
sti
xor
cs
out
push
sbb
inc
out
loop
mov
and
ss
stos
or
lret
jle
pushf
sbb
mov
filds
mov
je
add
push
xor
cmp
mov
bound
and
pop
or
popl
xchg
lahf
and
xlat
mov
nop
arpl
mov
aam
out
in
out
push
dec
movsb
dec
test
out
aad
mov
push
sbb
pop
ficoms
mov
sub
pop
inc
out
inc
inc
movsl
adc
out
adc
mov
jo
fs
shrd
mov
mov
inc
dec
notl
ficoms
fisubrl
mov
shrl
pop
mov
cmp
les
xor
test
dec
sub
sub
push
cwtl
or
sets
aad
sub
stos
xchg
mov
mov
mov
subb
lds
lret
jnp
pop
adc
mov
cmp
test
cmpsb
jb
imul
pop
mov
xor
imulb
jns
insl
repnz
jae
add
xchg
mov
pop
sbb
push
cmp
push
iret
mov
aaa
lcall
inc
inc
xchg
sti
jecxz
cmp
xchg
dec
in
jmp
aad
lock
push
pop
inc
mov
outsl
call
push
mov
jl
sti
or
cmp
mov
cmc
addr16
cmp
insb
xor
dec
pop
cmp
mov
dec
and
dec
stos
shl
shrb
cmp
shll
ror
jne
inc
push
dec
testl
loope
inc
sbb
lock
and
push
movsb
pop
jle
int3
xor
dec
mov
test
pop
pop
repz
scas
mov
out
inc
fisttpl
add
pop
repz
sti
int3
lret
mov
mov
test
fidivrs
jle
xchg
cmp
xchg
inc
sbb
pop
int
push
insl
or
sbb
test
and
outsl
mov
mov
push
je
clc
pop
pop
pop
out
add
adc
adc
pop
movsl
int3
imul
pusha
scas
cs
int3
lock
mov
push
mov
lcall
jno,pn
sbb
push
sbb
mov
or
testb
cli
mov
enter
jmp
dec
push
mov
mov
aad
inc
inc
call
lahf
repz
gs
mov
push
and
inc
jmp
std
mov
out
hlt
pop
shlb
pop
cwtl
sbb
mov
leave
inc
subl
jae
pop
pop
sub
mov
ljmp
fstl
loopne
sbb
sub
sti
outsb
in
std
lret
inc
jo
mov
pusha
lds
mov
repnz
not
xor
or
scas
stos
pop
mov
jo
testl
in
sub
pop
test
es
bound
cmp
loop
mov
xor
mov
sbbb
movsb
sbb
rol
jbe
mov
lea
xchg
pop
jb
rcll
in
mov
xchg
inc
mov
adc
js
inc
mov
add
jnp
out
jp
or
sub
xchg
shlb
xchg
cmp
imul
es
mov
jecxz
mov
pop
in
mov
jmp
cmp
stos
fsubs
lods
mov
leave
inc
leave
jns
inc
into
fwait
insl
jle
cli
dec
mov
aam
cmpsl
gs
loopne
add
scas
jge
ret
lods
int
dec
jb
adc
jl
aaa
sbb
sbbl
or
add
fcoml
mov
je
repnz
in
cmp
js
inc
xchg
cmp
sbb
mov
mov
dec
jmp
popf
add
jle
imul
insb
test
lods
rcrb
into
mov
iret
jne
cmp
jge
lods
test
cmc
cmp
dec
addl
xchg
movl
mov
cwtl
pop
scas
sbb
imul
xchg
xchg
pop
ret
xchg
call
dec
int3
sti
lcall
jp
add
xchg
and
pop
push
xor
ds
sbb
or
lods
xchg
pushf
mov
cmp
cmp
ljmp
sti
mov
andl
add
flds
mov
pop
lods
add
fisttps
testl
ljmp
pop
xchg
cmpsb
rorb
xchg
dec
jmp
insl
mov
insl
fiadds
outsl
incl
cmp
mov
jmp
mov
cmpsl
inc
adc
xor
or
xor
in
lret
popf
adc
loopne
jle
lods
mov
insb
cwtl
test
or
es
mov
pop
push
adc
mov
roll
cmpsl
pop
nop
and
push
mov
aas
out
cmp
jb
leave
push
mov
dec
and
jae
xchg
movsb
mov
test
cmp
pop
mov
push
sub
movsl
out
mov
cmp
sti
ja
inc
inc
add
enter
xchg
dec
out
sbb
or
fnstcw
das
mov
add
icebp
pop
mov
cli
pop
pop
lock
or
les
xlat
sub
cmpsl
bound
sbb
mov
mov
add
data16
outsl
test
push
sub
inc
repz
rcl
push
xchg
imul
bound
and
sbb
pop
adc
sbb
aad
push
jae
insb
enter
pusha
std
lds
add
mov
dec
inc
jae
out
adc
dec
testb
std
push
mov
mov
jnp
lcall
cld
adc
cmp
hlt
je
inc
roll
rol
popf
mov
repz
ljmp
sbb
jmp
lods
cmpsl
xorl
jne
xor
scas
cmp
push
add
and
imul
jle
jp
sbb
scas
mov
adc
and
and
adc
popf
add
cs
std
push
lea
jb
push
orl
pop
mov
subl
outsb
gs
or
int3
jno
or
and
dec
fimull
xchg
in
aaa
sarb
dec
ret
fiaddl
push
sub
push
dec
and
movsb
rolb
add
sub
ja
ss
dec
cmc
fbstp
loopne
mov
sbb
dec
jge
push
iret
mov
inc
inc
cltd
and
fbstp
fwait
and
inc
aad
test
mov
push
jo
add
add
mov
mov
cltd
jns
mov
imul
popa
lock
pop
mov
and
mov
xchg
loope
xlat
mov
shr
in
out
repnz
loope
and
and
xorl
mov
mov
fwait
mov
clc
movsl
aad
adc
dec
int3
ljmp
hlt
iret
loop
ret
lock
jne
into
stos
loope
dec
call
outsl
cmpsb
inc
mov
aas
ds
ffreep
cld
xorb
pop
in
ret
in
jae
and
dec
lcall
mov
or
mov
pop
subb
inc
inc
popa
fisubl
lock
or
xchg
jns
and
int3
cmp
ftst
push
fcomps
push
enter
xor
adcl
iret
mov
fmull
mov
xor
gs
shlb
and
sub
mov
xchg
arpl
mov
iret
inc
or
dec
test
pusha
test
sub
and
mov
add
inc
sub
inc
mov
add
mov
fists
into
xchg
push
jmp
xchg
push
cmpl
mov
inc
cli
dec
xor
jge
shll
fsubr
or
and
and
mov
stos
jp
je
aas
mov
xchg
gs
push
cwtl
icebp
fs
jl
out
dec
stc
das
ss
jle
pushf
les
rcll
aam
sti
xchg
js
dec
xor
mov
add
sti
pop
mov
iret
cmc
enter
mov
dec
xchg
xor
mov
xlat
fldcw
sub
int3
jmp
mov
push
pop
rcl
lcall
nop
or
jo
cld
insb
xor
or
mov
mov
popa
xchg
mov
xchg
movsb
std
in
mov
sbb
ret
sub
push
dec
sub
es
addr16
sbbl
sarl
jb
fists
pop
adc
fdivl
cli
jg
push
jl
push
scas
mov
inc
fwait
xchg
lods
sahf
xor
dec
add
push
or
xchg
fstl
mov
adc
hlt
jbe
popf
inc
arpl
mov
jb
in
cmpsb
das
xor
mov
vpmuludq
jl
inc
mov
lahf
ds
mov
mov
dec
aad
push
in
mov
add
pop
fcoml
cmpsl
shll
imul
dec
fildll
cmp
inc
shlb
call
lea
mov
inc
test
jnp
jl
sbb
cmp
jl
cltd
outsl
cmpsb
adc
ds
outsl
and
dec
sahf
icebp
in
xchg
std
xlat
xchg
faddl
pop
inc
les
adc
xchg
out
fildl
aas
cmc
cmp
cmpl
call
push
mov
cmc
inc
sub
loop
mov
imul
jp
es
test
fdivrl
int3
pushf
xchg
adc
aad
mov
xchg
cmp
incb
lcall
cmp
das
imul
inc
sahf
loop
mov
loopne
outsb
notl
mov
fsubl
cmp
mov
daa
pop
sbb
cmpsl
mov
dec
pop
or
sbb
push
mov
pop
mov
mov
adc
stos
popa
xchg
incb
outsl
vdivpd
or
push
test
rcll
push
add
add
xor
sbb
dec
lret
movsb
cltd
pusha
leave
sbb
pop
mov
imul
sub
sub
or
fcomp
or
lret
push
imul
push
mov
pop
rcl
insb
dec
adc
sub
cmpsb
xor
mov
cmovnp
add
add
pop
sub
enter
inc
push
divl
sbb
loopne
inc
popa
ret
shll
pop
sbb
mov
cwtl
mov
mov
jmp
stos
xorb
frstor
sub
cmpsb
popf
pop
or
sbb
imul
jo
ljmp
push
fstpt
and
fimuls
out
dec
inc
icebp
inc
and
ljmp
sbb
jp
ljmp
daa
sarb
push
inc
push
sar
sti
testb
and
dec
inc
mov
lea
pop
leave
stc
inc
sar
inc
repz
xor
movaps
jno
cli
outsl
mov
adc
inc
imul
pop
call
inc
fwait
mov
into
cs
mov
loop
mov
adc
adc
ss
clc
js
sbb
popf
jle
popa
or
inc
adc
addr16
test
js
pop
mov
sbb
sbb
mov
shll
movsl
leave
mov
or
leave
inc
mov
jecxz
sbbb
jl
pop
rcll
add
int3
jge
add
sti
mov
lea
and
sbb
push
test
lock
aas
cvttps2pi
aaa
sbb
popw
mov
test
push
loopne
mov
jne
mov
rcr
jnp
cld
test
push
es
stos
xchg
ds
idivb
inc
cltd
in
xchg
mov
fisttpl
ljmp
jbe
add
ret
and
dec
jmp
fstps
inc
and
pop
ds
pop
cltd
dec
sbb
lret
imulb
mov
jnp
sti
outsl
inc
jmp
cmp
jo
daa
pop
fs
pop
sbb
cmp
fidivl
hlt
insl
enter
mov
jmp
test
mov
aas
push
cmp
loope
out
rcll
mov
sub
cmp
add
jp
cmp
clc
push
dec
and
cmc
pop
mov
dec
sahf
or
cwtl
les
pop
and
imul
push
sbb
sbb
popa
popa
jne
js
mov
test
xor
loop
cmp
nop
push
aam
lds
push
pop
hlt
mov
jae
pop
xchg
push
adc
jnp
dec
push
jnp
sti
xchg
dec
sub
pop
push
loopne
movsl
dec
and
jge
je
adc
sub
adc
or
out
cwtl
mov
into
scas
fisubrs
fisttpl
rorb
sbb
lahf
movsl
sti
add
rcl
iret
and
dec
inc
ja
dec
mov
mov
aas
fnstsw
xor
adc
cmp
mov
shrl
mov
in
iret
adc
sub
dec
insb
ret
lods
dec
jo
hlt
fcompl
stos
sahf
roll
sub
push
mov
jecxz
sub
xchg
fs
sbb
inc
mov
add
shlb
cmp
mov
cmpb
test
mov
xchg
jbe
sbb
cmp
in
les
jg
pop
mov
jne
icebp
pushf
mov
shrb
xchg
jmp
inc
iret
mov
sbb
lds
in
leave
adc
sbb
test
adc
cmp
cmp
jecxz
out
xchg
mov
lods
mov
xor
clc
loope
and
cmpsb
ljmp
adc
ret
jns
addr16
out
xchg
scas
pop
adc
inc
pop
sbb
iret
out
enter
pop
std
and
lcall
push
clc
or
jmp
add
mov
sbb
mov
addr16
mov
in
mov
mov
pushf
push
cmp
int
pop
aas
out
and
mov
xchg
mov
adc
mov
adc
inc
sub
punpckldq
shll
cmp
fdivr
aas
rcrl
sbb
sti
scas
and
jl
or
cmp
inc
mov
jmp
add
insl
jge
inc
cltd
scas
lret
enter
mov
jl
and
int3
cld
pop
cmp
cmp
or
in
lret
pop
scas
sbb
mov
stos
mov
inc
fcoms
popf
push
add
push
idivb
jns
and
out
pop
int
mov
arpl
je
popa
cmp
test
cmp
cmp
and
aas
shll
or
xor
push
and
pop
test
int3
sbb
mov
mov
mov
out
out
popf
daa
xchg
push
iret
add
pop
push
mov
enter
pop
add
or
cmp
lahf
enter
mov
sahf
dec
jl
xchg
add
mov
test
lock
je
insl
jge
mov
scas
aam
sbb
fcomip
adc
dec
test
cmp
add
loope
mov
sub
and
loopne
fst
xchg
fstp
mov
pop
gs
xchg
add
mov
lret
push
push
add
mov
out
and
inc
lcall
push
imul
nopl
ds
inc
xor
jb
and
push
adc
adc
call
fidivrs
lret
fbld
scas
or
mov
mov
jl
mov
xor
jmp
pop
fbld
sbb
dec
test
and
pop
sahf
sbb
mov
xchg
gs
lds
cmpsb
jb
dec
lods
xchg
jmp
jmp
mov
in
loopne
rcll
in
xor
cmp
sahf
mov
xor
cs
sub
or
addl
fmull
push
jmp
cmp
adc
sub
dec
mov
pushf
sbb
pop
xor
js
fistps
xor
adc
xor
ret
jae
sbb
ds
fldpi
cli
shrb
inc
das
testl
pop
mov
xchg
pop
push
xor
rorb
fidivrl
push
xlat
lods
lock
push
pop
xchg
sti
pushl
mov
aas
sub
hlt
inc
inc
lret
mov
mov
mov
repz
scas
subl
mov
mov
gs
lds
pop
cmp
push
pusha
mov
fists
cmc
mov
rclb
stos
adc
sbb
cmpsb
xor
cmp
and
pop
test
push
push
xchg
imul
iretw
push
push
into
cmp
shll
cli
sbbl
aam
jmp
rcrb
loop
sub
cmc
dec
mov
jp
dec
ljmp
cli
jb
inc
movsb
pop
add
stc
stos
and
repz
mov
add
dec
dec
loopne
fdivrl
mov
imul
jmp
pop
push
mov
cmpsl
jbe
or
xorb
xchg
nop
movsl
pop
sbb
faddl
jmp
mov
iret
mov
xlat
add
mov
ljmp
or
xor
sti
mov
rcrl
aaa
stc
jno
inc
jae
pusha
or
jge
jo
aas
in
jae
xchg
and
jecxz
cltd
insl
lods
jle
cli
movd
lret
dec
shlb
repz
mov
sub
sbb
sub
cmpb
out
dec
cmp
inc
loope
in
sub
insl
loope
jle
cmp
ljmp
xchg
shll
or
test
mov
push
gs
mov
and
imul
xchg
jae
aaa
subb
cwtl
adc
and
mov
mov
cli
xor
mov
pop
pop
ret
fdiv
sub
push
sub
fisttpl
or
out
bound
fsubl
rcr
fsubrs
sbb
push
adc
xor
and
jne
sub
insl
addr16
jmp
jmp
fdivs
mov
out
inc
push
jle
mov
sbb
dec
dec
loope
ret
mov
jnp
mov
and
popa
xchg
movl
mov
ljmp
sub
aam
in
push
or
lock
inc
rorb
mov
push
movsl
gs
push
nop
or
push
stos
pop
hlt
fnsave
outsl
es
cmp
roll
mov
scas
outsl
daa
into
mov
sbb
jnp
incb
adc
sub
cmp
pop
mov
ss
ret
mov
pop
jnp
rol
imul
mov
inc
imul
nop
dec
sbb
in
jb
cmpsb
mov
add
aaa
xchg
adc
inc
xlat
sub
mov
sahf
push
inc
repz
adc
repnz
ds
fs
aas
pusha
pop
inc
fwait
clc
jl
sar
pusha
sub
cmpsb
imul
decb
bound
inc
sbb
mov
sahf
mov
xor
cs
andl
arpl
push
enter
and
push
ret
leave
int3
lcall
lods
adc
pop
pop
dec
jmp
add
orb
xor
adc
repnz
sub
dec
xlat
adc
jae
mov
xchg
mov
aam
sahf
cltd
jg
jo
sub
xor
and
xor
cmp
ret
push
mov
add
lahf
jl
les
xor
inc
inc
and
and
adc
repnz
in
cmp
mov
rcrl
pop
mov
jb
lret
lods
push
jp
mov
mov
iret
pop
stc
mov
add
sahf
iret
and
cmc
lock
fistpll
xor
sbb
pop
pop
xlat
lcall
inc
or
ret
rcrl
xor
and
fistpl
push
sbb
pop
cmp
and
or
xchg
inc
call
mov
lcall
mov
movsl
mov
dec
xor
add
xchg
xchg
mov
sahf
sbb
dec
pop
dec
fildl
sbb
roll
mov
and
push
cmp
es
dec
inc
dec
outsl
cltd
out
int
jo
out
call
pop
es
cltd
decl
inc
iret
sbb
push
push
cmpsl
aad
addr16
incb
out
shlb
movsb
in
and
xchg
cmp
xchg
inc
mov
adc
mov
scas
cld
ret
arpl
or
inc
sub
sub
lcall
cwtl
dec
jg
push
sub
push
imul
test
lock
xor
incb
movsb
mov
fs
xchg
lahf
cmp
out
scas
pop
loopne
jle
sbb
inc
loop
fs
dec
andb
jo
jae
int
push
jnp
enter
pop
stos
popl
fisubl
push
movsb
je
xchg
mov
mov
loope
dec
jge
mov
rolb
jae
mov
mov
mov
sbb
mov
arpl
aad
daa
jp
insb
stos
mov
pop
mov
xchg
jge
xlat
push
inc
movsl
bound
lret
daa
lock
dec
loopne
adc
or
int3
testl
and
mov
jp
pop
push
add
imul
ret
insl
cmpsb
pop
test
roll
ret
mov
dec
inc
mov
cmpb
ja
aas
xchg
pop
lea
sub
inc
daa
pop
mov
loop
in
sti
xor
insb
mov
int3
and
je
cmp
jbe
arpl
or
popw
mov
mov
ljmp
movsl
fimull
dec
frstor
sbb
inc
jecxz
add
and
sub
popa
out
not
lret
mov
shll
in
insl
mov
and
mov
and
mov
in
jp
jno
and
jmp
lods
push
leave
pop
rcrb
cmpsb
push
jge
push
pushl
jae
scas
mov
vcomisd
or
and
mov
je
jb
xchg
dec
inc
fstpt
lahf
push
or
pop
mov
popl
cld
ss
push
sbb
cld
sub
lret
dec
lret
test
mov
mov
jg
sub
shrl
dec
mov
mov
outsb
push
sub
adc
into
int
aas
mov
inc
mov
repnz
popf
aad
xchg
jb
les
fistpll
mov
pop
fiadds
loope
aam
jb
jmp
add
hlt
dec
sub
jp,pn
pop
cld
inc
outsb
imul
adc
test
out
sub
icebp
push
sub
loop
xor
int
lahf
test
out
push
mov
cld
inc
jo
push
xor
stc
push
std
jne
xorl
push
xchg
add
inc
inc
jae
cmpl
xchg
ljmp
in
fldt
test
out
test
adc
and
loop
aad
ret
cmp
pop
ss
mov
cmp
or
and
testl
es
pop
mov
add
ss
push
lea
xchg
call
add
sbb
push
mov
sbb
repnz
mov
pusha
add
push
xor
xchg
or
in
arpl
pop
inc
call
mov
mov
sbb
inc
pop
ljmp
test
pushf
dec
and
lret
or
mov
std
mov
fists
pushf
enter
loopne
fadds
dec
das
xorb
mov
or
sahf
push
push
mov
mov
aam
lock
into
scas
mov
cmpsb
mov
cs
movsb
cmpb
mov
jns
dec
loopne
sub
mov
sub
je
iret
dec
cmp
pop
out
adc
das
popf
push
xor
lret
jmp
push
adc
adc
adc
jge
sarb
inc
sbb
pop
add
stos
insb
push
push
lret
popf
xchg
int
add
outsl
adc
inc
cli
fdivrl
inc
iret
stc
lods
out
xchg
sti
shlb
or
sub
xor
mov
sbb
pop
idivl
je
inc
cli
mov
insl
inc
adc
jp
cmc
and
pop
push
divb
mov
orl
ret
and
xor
push
cmp
popa
or
jecxz
mov
ret
xor
lret
mov
pop
cmp
insb
sub
adc
or
inc
call
dec
pop
add
xchg
pushf
pop
or
lods
in
cltd
sarb
adc
mov
sub
loopne
lret
mov
pop
pusha
dec
sbbl
xor
loopne
in
pop
push
ficoml
aaa
repz
in
xor
xchg
sub
flds
ja
xor
es
jmp
ret
leave
pop
xlat
loop
sub
cmp
mov
sbb
adc
stc
test
aas
or
sbb
sub
and
loop
xor
sbb
int
xlat
les
or
enter
icebp
pop
les
mov
clc
add
fbld
scas
stos
and
int3
push
popf
mov
mov
mov
sbb
arpl
pop
lahf
pop
nop
pop
adc
loope
andl
sub
sub
pop
aaa
das
sub
and
loop
inc
jo
dec
and
mull
movsl
sub
sbb
sub
xor
mov
cmp
push
jecxz
or
adc
cmp
sub
cmp
xchg
cs
xlat
cmp
cli
data16
jo
leave
cmpb
sbb
add
dec
inc
testl
loop
push
add
ret
or
push
in
pop
mov
je
rclb
jo
repnz
xchg
push
fwait
jbe
lods
mov
es
fstl
scas
out
xchg
jns
cmc
imul
cmp
xchg
fadds
mov
inc
cs
pop
lods
daa
pop
cli
outsb
sti
arpl
shrl
and
test
jle
sbb
mov
stos
aas
or
das
icebp
rcll
dec
call
leave
int
dec
lcall
nop
pop
sar
pop
fidivs
lret
adc
pop
add
in
ds
repz
jp
aaa
stos
repnz
fistpll
les
push
fldcw
dec
sbb
in
ret
push
loope
or
jae
pop
rcr
xchg
ds
jle
pop
sbb
jle
adcl
ss
fstps
mov
popa
dec
cmp
sbb
in
pop
mov
aam
sbb
fists
ffreep
dec
inc
int
arpl
dec
bound
popf
xor
rcl
fptan
push
ja
adc
cltd
outsb
fcmovu
mov
mov
hlt
mov
and
leave
and
adc
loopne
inc
push
mov
push
and
xor
adc
loop
jmp
xor
icebp
lods
pop
or
sub
cmp
frstor
mov
popf
scas
sub
push
push
xchg
and
push
fwait
int
push
add
ja
push
in
sarb
adc
xchg
xchg
dec
jmp
push
xchg
repnz
icebp
faddl
les
pop
cwtl
or
lret
inc
push
pushf
mov
out
lcall
andl
push
inc
and
divl
pop
push
inc
fistl
adc
sbb
xor
adc
repnz
andb
pop
dec
pop
sbb
loope
test
adc
push
jge
add
xchg
dec
xchg
insb
sbb
je
pushf
mov
xor
xchg
imul
push
out
and
insb
mov
pop
aas
xchg
loop
and
cs
lock
xor
lcall
add
stos
daa
in
cmp
mov
add
sarb
xor
add
mov
sub
rorb
test
sbb
dec
je
lods
dec
cmp
movsb
rcrl
test
aad
sub
int3
mov
mov
in
dec
pop
int
dec
out
mov
stos
fwait
mov
les
loope
and
jp
add
push
dec
hlt
push
sub
mov
popa
and
enter
xor
inc
ret
and
push
out
mov
sbb
and
int3
push
cmp
das
cmpsl
push
jns
insb
dec
fldenv
push
xor
push
pop
push
push
movsb
sub
add
pop
jecxz
adc
inc
pop
xor
jnp
mov
pop
mov
push
fbstp
adc
cmp
push
mov
and
mov
push
jns
cmp
jnp
outsb
xchg
or
sbb
int3
dec
xor
or
mov
add
jno
add
or
inc
fwait
sub
ror
and
sbb
and
outsl
mov
repz
rclb
adc
mov
sub
lcall
in
pop
rcrb
imull
push
cmp
xor
sub
add
mov
or
mov
pop
nop
inc
jge
scas
push
rorl
pop
dec
push
jbe
rcll
nop
adcl
xchg
push
out
mov
fisubs
lock
fbld
pop
mov
mov
mov
nop
cmp
mov
pop
pop
xchg
aad
inc
jo
mov
loopne
jb
outsb
mov
mov
cld
dec
repnz
xor
lds
movsl
scas
push
mov
sbb
cmp
cmc
imul
dec
cmp
push
lock
out
in
lahf
clc
cmp
fstpl
sbb
pop
mov
fsubl
jnp
mov
or
ficompl
gs
mov
mov
or
test
push
sbb
xor
and
insb
icebp
aaa
cmpsb
mov
aaa
mov
mov
lds
negl
xor
iret
mul
and
in
jmp
mov
orl
in
jae
add
push
mov
mov
or
cwtl
arpl
mov
dec
addl
call
lahf
shl
inc
dec
dec
mov
pop
mov
xor
sub
addr16
into
sahf
dec
lcall
repz
in
aad
push
pop
fnstcw
xchg
jnp
xchg
adc
mov
jl
add
dec
xchg
pop
int
outsb
idivb
pop
aaa
pop
and
rcrb
div
mov
sub
sbb
jg
sahf
sub
rorb
bound
decb
cmpsl
pop
loope
fcmovnbe
insl
hlt
dec
sub
mov
andb
xlat
and
adc
addb
fdivrl
push
test
mov
movsb
mov
sbb
packuswb
jmp
xchg
mov
and
mov
movsb
aas
shll
add
lahf
andps
sbb
inc
or
adc
add
dec
aam
pop
add
sbb
ret
out
xor
loope
loop
out
sub
fnstenv
lret
mov
scas
and
nop
mov
push
pop
arpl
sub
and
sbb
mov
aas
and
inc
fmull
pop
xor
cmp
inc
mov
xchg
fisttpl
inc
out
arpl
cwtl
frstor
pop
aas
sbb
jl
pop
decl
sub
cltd
scas
jo
and
inc
divl
testb
xchg
or
cmp
idiv
les
in
mov
popf
and
gs
mov
inc
lds
xchg
sbb
in
cmpsl
test
or
insb
or
pop
cmp
xor
lock
cmp
sbb
shrl
push
loope
mov
sahf
and
adc
pop
arpl
mov
cmp
faddp
fwait
sub
dec
mov
jae
jae
xchg
idivl
mov
fildll
push
push
imul
adc
movsl
adc
sbb
repz
or
mov
das
cwtl
jns
aaa
fcom
pushf
pop
cmp
dec
int
inc
sbb
pop
fwait
insl
xor
jbe
and
sbb
lcall
lret
aam
pop
sbb
mov
mov
push
sbb
dec
pop
mov
shlb
xchg
leave
lea
add
sbb
adc
xchg
iret
jne
dec
and
inc
dec
std
out
mov
or
sbbl
inc
aam
sbb
cld
xchg
test
sub
ljmp
out
mov
ror
cltd
lcall
or
adc
sbbb
jg
mov
jb
rorb
dec
jb
inc
mov
lds
addb
test
lds
jle
lcall
iret
xchg
push
or
sahf
sbb
push
nop
xorw
in
pusha
mov
movl
test
test
push
into
pop
jge
dec
sub
in
adc
adc
sti
sbb
and
outsb
out
pushf
dec
pushf
pop
cltd
inc
lock
stc
jbe
xor
lret
mov
xchg
xchg
mov
test
add
xchg
add
rclb
mov
inc
lds
leave
pusha
sarl
imul
mov
add
out
scas
jae
jo
gs
mov
ljmp
and
xchg
xchg
adc
xor
imul
scas
jo
out
dec
pop
dec
sti
aaa
jge
mov
dec
repz
lcall
leave
cmp
or
xchg
lea
jmp
jp
test
mov
pop
repz
imul
shlb
loope
mov
cli
test
mov
mov
scas
add
adc
dec
cmpsl
aas
cmpsl
mov
inc
sbb
in
add
call
shlb
push
pushw
pop
repz
je
inc
mov
mov
lods
cmp
push
mov
lahf
in
orb
scas
lea
roll
or
dec
repnz
mov
in
sub
pushf
or
mov
leave
xor
enter
mov
xchg
frstor
mov
stos
add
lods
sub
mull
push
lods
xchg
cmc
gs
mov
pop
add
mov
push
xchg
es
or
aad
adc
fprem
jle
inc
xchg
fiaddl
ss
aam
mov
mov
popf
adcb
ficoml
mov
xchg
hlt
or
es
or
stos
jnp
inc
dec
stos
pop
jg
cli
and
add
push
mov
jge,pn
stc
xchg
nop
call
cmpsb
popa
mov
adc
dec
sti
stc
ds
inc
es
int
jb
repz
and
pop
sti
xchg
xor
movsl
cld
divb
inc
pop
out
push
gs
dec
jne
fistpll
xchg
repz
or
sbb
jmp
pop
sbb
out
mov
mov
out
test
out
fcmovb
iret
xchg
jecxz
in
and
rclb
sahf
lret
adc
push
insl
pop
je
lods
outsl
xchg
mov
and
cmp
scas
sbb
jge
ja
dec
into
inc
sahf
sbb
jmp
pop
les
pusha
jnp
cmp
loop
xchg
mov
int
sub
lods
repz
leave
insb
push
mov
xor
lea
repnz
sub
sbb
sub
jae
or
add
jo
push
int3
adc
loop
movsb
inc
or
pop
lcall
popf
cmpsl
addr16
int
add
add
sahf
cmpsb
call
mov
xor
sub
sub
popa
lret
gs
arpl
adc
neg
cmpsb
daa
cmpsb
jae
mov
cmp
test
inc
cmp
sub
jmp
jno
jo
xor
mov
xor
out
push
add
add
cmp
js
xor
cs
repnz
push
xchg
jmp
popa
out
adc
ljmp
cmpsl
adc
add
gs
loope
jmp
mov
sarl
pop
lods
pop
into
adc
jmp
scas
push
mov
mov
pop
jns
mov
cmpsb
sub
pushf
adc
sbb
fdivrs
mov
in
adc
or
cmp
xor
fnstenv
mov
sub
push
shlb
aaa
cmp
imul
test
pop
add
mov
cmpsb
or
dec
pop
leave
fisttpll
repz
cmp
roll
adc
outsb
inc
mov
rorl
mov
and
jns
mov
inc
jno
movsl
lret
ja
sbb
enter
or
xchg
jb
and
jae
adc
outsb
jge
fnstenv
push
je
rorl
dec
xchg
mov
aad
jecxz
fwait
mov
pop
das
pop
aas
adcl
ret
test
mov
iret
add
jp
jl
into
mov
pop
and
adc
xor
inc
ficoml
or
sbb
scas
xchg
inc
in
fstps
fstl
roll
push
lods
sub
xchg
dec
cmp
jno
jge
mov
stc
mov
jns
scas
cs
out
lahf
outsb
lods
mov
dec
jmp
cmc
in
mov
test
ds
sub
add
out
lahf
xchg
les
jmp
cltd
cmp
iret
or
jnp
out
push
test
sbb
test
mov
dec
cmpsl
cmpsb
mov
add
stos
lcall
adc
or
aad
mov
leave
loopne
test
call
loope
jge
pop
sbb
cwtl
dec
dec
sbb
out
mov
daa
adc
pushl
jl
cltd
xorps
jmp
leave
in
jbe
rclb
syscall
cmp
or
cmpsl
imull
mov
ds
xchg
iret
cli
xchg
lods
add
jae
xor
out
pop
push
xor
sub
add
test
lods
jns
call
and
mov
test
mov
add
int
xlat
xorb
or
fnsave
jg
aam
inc
mov
mov
in
ret
mov
xchg
mov
dec
or
or
xor
fmull
add
ds
jecxz
sub
mov
jnp
sti
loope
sub
xchg
jo
ljmp
vmread
pop
pop
push
ds
sbb
mov
cltd
xor
rcrb
fcomps
pop
xor
mov
adc
repz
xor
nop
push
or
arpl
test
test
gs
cmpsl
shll
ret
movsl
sahf
decl
jp
ljmp
imul
mov
mov
clc
xor
sub
imul
push
lock
popa
mov
dec
mov
or
or
push
add
or
aas
das
daa
jns
loopne
cmp
jecxz
dec
imul
sbb
or
outsb
aam
jo
cld
cwtl
imul
in
push
mov
mov
repnz
cld
xchg
lds
test
dec
pushf
cmp
test
adc
pop
ja
xor
cmp
pop
add
pushf
xchg
mov
push
call
lcall
ret
movsl
in
dec
sub
pop
mov
push
dec
pop
sbb
ds
xor
insb
aad
sub
cld
mov
adcl
xchg
push
aam
jp
mov
notl
imul
xor
insl
sub
cmpsb
xchg
cmp
pop
pushf
jg
pop
dec
repz
mov
mov
shl
jle
mov
ret
xchg
xlat
inc
or
or
test
jg
jae
pop
push
mov
push
cmovb
add
mov
add
inc
test
pop
fs
int
lock
push
or
mov
iret
rcrb
dec
dec
int
insl
lock
inc
pop
pop
cmpsl
cld
ss
sbb
jmp
divb
dec
lea
jmp
xlat
stos
stos
push
dec
fildl
cmp
jbe
xchg
mov
mov
out
ficoml
or
shrb
int3
xchg
negb
pop
mull
out
pop
popf
or
insl
cs
sbb
imul
dec
push
mov
push
sub
pop
test
and
idiv
sbb
das
sarb
xchg
mov
lods
and
sub
push
mov
in
pusha
shlb
or
cli
mov
xor
insl
push
fdiv
lret
cmp
cmpsb
push
iret
mov
cmp
pop
dec
out
jle
and
lret
negb
pop
nop
or
hlt
stos
gs
fildl
insb
xlat
stos
xlat
jnp
fs
arpl
xor
mov
xchg
push
ret
cmp
in
fnsave
adc
cmp
int
sar
inc
inc
jno
xor
outsl
mov
jbe
fisttps
pop
mov
pop
inc
pop
xchg
pop
shll
testl
dec
jae
jg
insb
cli
jb
inc
ret
je
or
comiss
cli
xor
fidivrs
or
pop
addr16
ja
lods
xchg
lret
mov
mov
and
jg
mov
sbb
or
fs
out
fidivs
dec
test
mov
in
pop
mov
jne
adc
mov
cmpsb
xchg
test
xchg
mov
das
or
in
inc
xor
outsl
sbb
in
imul
rcrl
fcoml
iret
leave
dec
js
out
cmpsl
mov
imul
pop
in
xchg
test
jg
adc
in
sub
or
pop
fwait
inc
dec
pop
push
mov
dec
add
cmc
pop
stc
jl
out
push
outsl
pop
daa
push
stos
sar
adc
fisubs
dec
cmp
stc
shl
test
aas
inc
mov
pop
xchg
and
lret
stos
inc
jge
ja
ja
dec
shrb
pushf
push
mov
mov
dec
dec
je
rorl
cmp
dec
je
mov
repz
inc
out
inc
add
xchg
dec
pop
xchg
cmp
or
aas
cmp
jmp
call
test
pop
bound
outsb
mov
mov
out
mov
int
push
ljmp
lcall
fstps
insb
sahf
cmpsl
ljmp
sub
rorb
inc
insb
inc
dec
inc
xchg
or
rol
ret
sbb
or
rcpps
out
sbb
lahf
sub
shrl
xchg
fwait
xlat
mov
je
lret
mov
adc
negb
jmp
fwait
xchg
xlat
mov
xchg
cmp
lods
imul
jns
inc
xchg
add
ficoms
popa
shrb
fsubl
sub
mov
sub
mov
mov
mov
dec
jmp
jae
push
std
dec
cmp
push
imul
testb
adc
and
lods
mov
fs
out
punpcklbw
mov
inc
push
lods
xchg
sub
je
arpl
adc
stc
mov
mov
les
test
or
es
pop
jno
xchg
lods
inc
mov
ror
inc
fisubl
scas
and
cmc
in
aad
mov
daa
jns
imul
idivb
insb
adc
popf
xchg
insb
push
mov
loope
aad
pop
leave
ret
inc
jmp
dec
test
jne
enter
push
fcompl
sub
repz
mov
xchg
mov
outsl
inc
lods
or
push
mov
adc
into
loopne
mov
mov
pop
sbb
pop
test
pop
xor
mov
or
shll
jno
jbe
mov
idivb
in
cmp
shr
aad
dec
push
dec
xchg
enter
cli
dec
lods
push
outsb
and
aad
out
dec
pushf
out
dec
mov
dec
pop
mov
mov
xor
lock
mov
add
pop
adc
ljmp
pop
cmp
inc
jecxz
xor
rcl
fnstsw
sub
test
cmpsl
pop
daa
lds
orps
jge
add
xchg
lods
pushf
mov
jg
and
mov
jecxz
and
fldcw
scas
fstps
mov
ja
mov
xor
jns
push
inc
enter
repnz
cld
jge
out
dec
inc
or
ret
in
jnp
lret
push
sub
mov
ficoms
add
adc
mov
mov
scas
mov
or
sub
fbstp
loop
scas
and
cmpsl
aas
inc
xor
pop
push
adc
xchg
pop
in
dec
test
mov
ficoms
fistpl
or
lcall
test
xchg
sub
out
xchg
sub
add
idivl
cmp
loopew
ret
pop
pop
push
in
and
lods
jo
xor
ja
cmp
leave
jnp
aaa
shlb
xchg
add
int
test
movsb
test
sbb
sub
andps
mov
inc
sbb
lods
sub
mov
push
cmc
mov
xlat
xchg
test
cmc
pop
push
adc
add
mov
mov
test
xchg
add
notb
scas
mov
adc
cwtl
ret
loope
inc
aas
lds
pusha
cmp
pop
repz
mov
sub
in
cwtl
jb
das
fdiv
sbb
inc
mov
push
hlt
dec
vpacksswb
pop
mov
jno
cmpsl
loope
mov
add
mov
cld
cld
xor
pop
clc
inc
mov
ret
inc
push
and
sahf
inc
or
adc
jo
inc
adc
pop
xchg
inc
add
sbb
jae,pn
shrb
test
call
xchg
add
push
movl
adcl
popa
push
jo
or
mov
push
xor
fucomp
insl
in
movsb
mov
outsl
loopne
int
mov
or
pop
divl
add
mov
je
xlat
repz
loopne
mov
add
loop
idiv
add
mov
xor
mov
outsl
mov
dec
ss
orb
push
ds
add
clc
push
into
orl
sub
sbbl
mov
jg
fadd
xchg
xor
jp
or
cli
jb
addr16
inc
sub
jge
rcl
sub
adc
lret
es
rorb
pusha
inc
cmp
out
mov
pop
nop
ljmp
std
sub
cwtl
pushf
into
int3
pop
inc
cli
mov
fcomps
loope
mov
pusha
iret
daa
cmpltps
jp
shll
xchg
mov
jge
xor
xor
in
pop
inc
push
insl
lock
bound
push
addb
pop
fwait
jne
and
inc
pusha
cmpsl
mov
xchg
mov
adc
icebp
sub
adc
neg
inc
ret
sbb
dec
daa
fsincos
test
xchg
cmc
data16
add
mov
push
fimuls
xchg
mov
mov
js
or
and
mov
mov
push
jmp
movsl
jae
mov
or
stos
push
jl
push
push
mov
inc
sbb
int3
lods
mov
mov
mov
bound
sub
ror
loop
ds
call
pop
mov
xorps
les
or
push
push
sti
push
cmp
icebp
test
sahf
push
xchg
inc
sbb
out
push
sbb
jmp
pop
xchg
sbb
xor
lods
loop,pt
out
and
cmpsb
xor
js
stos
pop
test
xchg
sub
pop
jmp
jns
outsb
imul
or
ss
jmp
imul
sub
jle
sbb
testb
sbb
into
in
dec
xchg
sbb
insl
xchg
xchg
mov
cmp
sub
push
andb
sti
dec
test
leave
insl
jne
sbb
mov
add
outsl
add
cwtl
mov
arpl
cmp
and
cmp
xor
jo
loope
jge
nop
and
rorb
or
fstl
test
mov
inc
addr16
push
mov
jle
xor
pusha
popa
shll
adc
sahf
arpl
xchg
adc
stos
mov
mov
push
jl
push
out
out
push
sahf
and
jb
fwait
sub
sahf
cmp
mov
leave
loopw
jl
adc
ret
out
or
push
jle
outsb
add
lret
dec
or
movsb
pop
pop
je
lods
dec
ss
xchg
dec
dec
ret
cmp
jo
dec
test
inc
test
mov
pop
daa
cltd
jecxz
lea
pushf
insl
cmp
jp
icebp
shlb
arpl
in
ja
jae
int3
iret
xchg
inc
mov
inc
dec
test
mov
xchg
dec
or
call
shll
jbe
xchg
leave
and
fcompl
mov
hlt
sub
pop
out
cli
gs
stos
dec
xchg
icebp
pop
imul
das
sbb
xchg
orb
sub
lret
call
popf
in
xor
sahf
dec
dec
ss
jo
and
cli
xchg
hlt
lods
jg
pop
addr16
icebp
in
push
or
sbb
mov
and
sbb
dec
in
pop
xchg
sti
cwtl
rcrb
aad
into
dec
or
xchg
xchg
lea
popa
sub
xchg
ret
inc
cmpsb
lock
add
mov
mov
rcrb
sub
stos
imul
sarl
mov
ljmp
fcmovu
cltd
xchg
push
negl
add
adc
fdivs
push
xchg
lret
aaa
cmp
cmpsl
ja
pop
mov
pop
pusha
adc
fwait
push
or
iret
aad
add
in
add
cltd
and
popa
push
push
icebp
rolb
popf
add
shl
jl
push
test
popf
dec
sub
insb
aad
rorl
cmp
or
pop
add
enter
fisubl
std
stos
mov
sahf
inc
repnz
jmp
xchg
ljmp
loop
mov
repnz
cmp
jge
mov
pusha
test
push
arpl
cmc
ficompl
aas
mov
jmp
popa
mov
out
es
mov
mov
data16
aas
hlt
mov
jmp
out
mov
cmp
out
aas
out
aas
push
jmp
outsl
dec
es
mov
mov
adc
xchg
cltd
mov
inc
cmp
pop
add
leave
fisubs
mov
xchg
xor
fdivp
push
mov
int3
xchg
xchg
fsubrp
iret
fisubrl
cmp
mov
mov
lods
cmp
pusha
les
in
fistpll
popf
sub
inc
add
lea
pop
pop
mov
mov
scas
and
aaa
ljmp
mov
jmp
lock
jbe,pt
sti
push
movsl
sub
icebp
cmp
add
push
aaa
cmp
pop
daa
lcall
es
mov
sub
popa
arpl
repnz
sahf
mov
adc
repnz
pop
rorl
pop
push
inc
aas
in
cld
aaa
sub
adc
shlb
push
push
pusha
push
subl
repnz
sbb
jmp
or
jne
xor
es
lds
sahf
dec
dec
mov
dec
xchg
ficomps
es
cmp
fsubrl
cli
gs
mov
cmp
jle
sub
pop
push
mov
pop
and
xchg
xor
add
jo
pop
xchg
lahf
int3
inc
pop
stos
push
mov
lds
loope
pop
mov
movsl
or
xchg
faddl
movsl
or
adc
mov
outsl
jne
or
dec
aaa
setae
push
data16
sub
loope
subl
xor
cwtl
add
into
pop
xor
cmp
push
mov
je
or
and
lock
repnz
add
jbe
or
aam
mov
add
sub
adc
mov
xlat
imul
mov
mov
stos
mov
lcall
leave
in
mov
cmp
insl
xchg
sub
lds
adc
lcall
sbb
push
dec
dec
test
jle
sahf
push
jnp
cmp
outsl
dec
movsl
ret
pushf
or
add
sub
mov
pop
js
pop
xor
jne
cmpsb
shl
jo
push
dec
ficompl
notl
shll
pop
push
cmp
lods
fs
xchg
mov
fisubl
or
push
jmp
pop
jl,pn
pop
imulb
mov
add
cmp
pop
stos
xchg
or
rorl
sub
in
pop
les
imulb
out
dec
xchg
push
fistl
mov
push
and
pop
jg
mov
shll
popa
pop
adc
mov
rcl
loopne
jbe
inc
xchg
data16
xor
les
add
fmull
dec
xchg
cmp
jae
leave
bound
xchg
mov
cld
movsl
push
mov
adc
and
adc
xlat
or
xchg
or
jle
in
cs
pop
mov
int3
sahf
das
sbb
push
je
and
pop
mov
fwait
mov
or
ud1
pop
jg
leave
ss
js,pn
xor
pop
mov
decb
int3
xchg
cmp
push
cmp
adcl
add
sbb
fistps
mov
push
xor
test
jle
jl
jmp
adc
xchg
dec
cmp
inc
test
scas
dec
dec
arpl
push
das
push
jl
jl
ja
aam
add
dec
or
pop
in
sbbb
xchg
dec
fimull
lcall
xchg
fmull
cld
cld
dec
xchg
inc
negb
push
xchg
xor
cmp
dec
or
mov
arpl
in
shrl
mov
or
mov
fs
jnp
adc
jecxz
mov
mov
add
dec
cltd
sub
push
and
push
int
js
test
aaa
and
cld
and
xchg
mov
addr16
mov
data16
insb
pop
or
pop
xchg
imulb
dec
shlb
js
adc
cmp
or
sbb
rcll
xor
pop
sub
stos
xchg
and
outsb
sbb
inc
pop
scas
sbb
adc
ds
mov
loopne
pop
or
cmp
bound
push
repnz
push
jecxz
inc
push
or
and
cmpsb
push
mov
or
xchg
and
mov
mov
sahf
stc
scas
cli
rclb
add
push
add
push
pop
ds
cmp
aad
ret
ljmp
or
jecxz
jns
add
dec
jo
pop
out
push
outsl
and
mov
fs
push
inc
pop
shlb
mov
jmp
and
data16
mov
sti
push
movsl
in
fimuls
mov
xor
ret
ja
ja
push
mov
mov
push
enter
xor
int3
jns
jmp
loop
push
popa
xor
cs
aad
add
cmpsl
loope
xchg
scas
xor
int3
xor
aad
inc
mov
rclb
xor
mov
dec
jge
lock
mov
subl
in
mov
cpuid
es
clc
inc
xchg
jae
fisttpl
imul
js
lea
adc
cld
sbbb
mov
xchg
sub
lcall
sbb
jmp
mov
loopne
inc
and
shll
mov
mov
lock
xor
dec
icebp
and
sti
dec
mov
mov
pop
jbe
xchg
js
xlat
sub
cmc
inc
mov
cwtl
sti
sub
aad
push
push
in
mov
xor
pop
jb
leave
jge
pop
sub
lret
aad
out
lods
cmpsl
jg
test
pop
jae
jmp
test
xchg
jg
jp
fstl
jmp
sti
daa
cs
xor
jne
or
hlt
or
jecxz
aas
sub
imul
xchg
scas
orb
icebp
inc
xchg
fists
dec
je
pop
jl
mov
jecxz
pop
ja
xor
pusha
lahf
lods
inc
push
push
in
sarb
pop
inc
lods
mov
dec
mov
or
pop
push
cmpb
ljmp
dec
into
pusha
jmp
jp
cwtl
dec
ret
add
aam
sbb
mov
arpl
js
int3
cmpb
in
add
mov
adc
push
xor
stc
mov
adc
and
add
dec
mov
mov
loopne
jl
cmpsl
xchg
cmpb
and
fiaddl
aas
xor
xor
call
pop
mov
pop
dec
pop
in
or
mov
movb
mov
cld
push
orl
pop
fistpl
xchg
cs
jmp
pop
clc
add
ljmp
push
add
or
jo
inc
sbb
iret
pop
aas
or
or
pop
mov
in
movsb
dec
cltd
adc
add
mov
cmp
mov
mov
stos
movsl
int
loopne
clts
push
mov
test
sub
stc
hlt
test
imul
test
jmp
popf
shlb
loopne
movsb
dec
adc
aas
scas
outsb
cmp
in
int
mov
in
inc
addb
call
sub
mov
sub
cmp
xor
xchg
cmove
add
cwtl
push
mov
inc
lret
popf
loope
decb
jo
mov
pop
imul
mov
hlt
out
sbb
add
lret
mov
pusha
mov
jecxz
sbb
aaa
fisubrs
imul
or
mov
jg
sbb
aas
adc
neg
add
xchg
mov
add
pop
xor
and
mov
enter
ss
fwait
xchg
fstl
or
pop
scas
dec
in
adc
cmpsl
mov
cld
inc
movsb
dec
lods
inc
std
dec
or
pushf
scas
mov
std
adc
xchg
int3
hlt
jns
xor
lea
dec
or
ljmp
fbstp
mov
mov
and
sbb
pop
mov
mov
lahf
and
push
into
rol
test
js
sub
movsl
sub
sub
fwait
fs
push
push
loop
push
mov
cmovp
or
mov
mov
fwait
out
gs
mov
inc
sbb
pushf
cmp
fnstsw
push
dec
pop
add
repz
leave
fstps
test
mov
insl
mov
mov
ljmp
mov
mov
movsb
push
jno
adc
inc
leave
dec
mov
dec
movsl
aam
or
call
push
cld
mov
andl
or
sbb
jmp
add
lahf
adc
std
mov
and
cmp
mov
push
cmp
push
push
mov
call
xchg
stc
xor
imul
push
jle
jns
test
xor
in
sbb
push
loop
mov
adc
ss
divb
xchg
imull
dec
pop
aad
out
cmp
mov
push
roll
inc
hlt
call
rcrb
xor
rorl
mov
xlat
inc
jl
pop
mov
sbb
fidivrl
xor
rolb
cld
mov
cmp
out
fstl
outsl
push
pop
das
gs
sbb
mov
dec
xchg
notb
sbb
inc
jnp
sbb
ds
subb
xchg
mov
sub
rcrl
testb
sub
xchg
loopne
sub
in
ds
pop
cmp
cltd
push
fiaddl
pop
xchg
aas
cmpsb
ds
negb
lcall
insb
cmp
dec
inc
sbb
jle
out
mov
inc
pop
jb
cmp
pop
pop
xor
sarb
scas
inc
inc
mov
jne
add
xor
sbb
jl
xchg
xchg
jl
lahf
lds
jg
push
stos
mov
pusha
jg
aam
dec
mov
sbb
push
insb
testl
insl
sahf
mov
movsl
dec
and
test
test
push
pop
cmpsl
adc
aad
data16
loope
mov
leave
and
shlb
fs
cmp
mov
jmp
loope
popf
mov
pop
inc
sahf
push
cmc
xor
movsl
test
jecxz
test
icebp
daa
dec
push
mov
cltd
mov
loop
xchg
enter
sbb
lock
shl
xchg
jbe
je
mov
ljmp
les
jp
arpl
jecxz
rorb
dec
xchg
pushw
xor
cmp
xchg
ds
sub
mov
xchg
pop
insb
ss
cld
and
cmp
pop
ds
mov
pop
iret
rol
cmp
mov
ja
iret
fidivrl
or
lods
daa
and
jb
stos
pop
pop
xchg
mov
cmpsl
arpl
xchg
leave
xchg
mov
jne
sub
roll
push
xor
aas
pop
test
xlat
icebp
jle
out
mov
jns
xor
mov
jae
jmp
sub
dec
push
add
js
cmpl
outsl
mov
xlat
push
movsl
pop
cwtl
sbb
stc
mov
mov
sti
push
ret
outsb
mov
cltd
loope
jno
lret
out
popa
dec
popa
mov
subb
lret
jno
hlt
pop
insb
mov
into
cld
stos
mov
jge
insb
cs
cmp
jecxz
arpl
add
gs
xor
dec
cmp
inc
fdivrl
mov
dec
mov
push
psubusb
or
icebp
push
and
cld
shrl
or
mov
gs
dec
push
mov
inc
imul
test
mov
add
popa
aam
loope
lret
icebp
pop
pop
mov
mov
stos
in
dec
lret
mov
add
iret
or
out
and
lods
cmp
pop
fdivrp
sahf
int3
movsl
mov
loopne
jecxz
and
loope
mov
push
push
idivb
cmc
mov
add
enter
sahf
mov
popa
fwait
mov
lods
sbb
mov
cmp
sbb
xchg
cmp
gs
pop
aam
ret
xlat
pop
jne
add
testb
or
in
pop
jle
clc
xor
mov
pop
add
dec
pop
dec
out
iret
dec
jb
fs
mov
or
ja
push
call
decl
fwait
addb
es
xchg
and
mov
insb
push
outsb
cwtl
lock
rcrl
lock
fucomip
add
dec
mov
fucomi
inc
aaa
ja
jno
sub
jno
inc
jns
subb
out
pavgb
je
dec
xchg
lods
bound
and
dec
mov
dec
lock
in
adc
xchg
mov
lds
fadds
fbstp
loop
lods
add
pop
aaa
ret
mov
and
or
and
test
daa
pop
repz
pop
mov
lea
mov
pop
sub
mov
xchg
cmp
sbb
pop
pop
sbb
rcr
cmc
inc
mov
pop
jg
jnp
mov
cmc
jns
sbb
popa
cmpl
mov
pop
mov
adc
jne
mov
jns
int
sbb
sbbb
imul
push
push
push
addr16
repz
lods
fisubs
dec
mov
shl
outsl
insl
cmp
imul
lock
inc
addr16
jb
pop
sbb
lea
push
aaa
xor
pcmpgtb
andb
aam
rcrb
sbb
sub
gs
jecxz
mov
pusha
cmp
pop
cmp
lods
aad
sbb
std
cmpsl
rcrl
xorb
inc
push
outsb
pop
cmp
das
hlt
jl
pop
out
mov
or
popa
jo
pop
ret
hlt
stos
arpl
ss
lret
call
xchg
push
add
mov
repz
mov
imul
inc
iret
mov
shlb
xlat
ja
mov
into
out
push
movsb
lds
cs
loopne
push
add
and
mov
inc
lods
in
test
das
jnp
or
lds
inc
scas
ror
not
dec
aaa
ret
add
test
jecxz
js
xor
sub
mov
or
jo
insl
out
add
cmpsl
jmp
push
and
lock
push
outsb
dec
push
xchg
repnz
fwait
xor
ja
xor
leave
cmpsl
imul
jo
cmp
out
and
adc
mov
jbe
sub
add
add
mov
push
mov
xor
fs
mov
sbb
ljmpw
rcrb
inc
jo
imul
jno
adc
inc
pop
aad
pop
dec
push
mov
dec
mov
or
je
mov
lods
ja
or
lea
mov
not
adc
sub
cmpsb
xchg
stos
repnz
or
or
add
int
cs
das
pop
das
xchg
cld
inc
and
aaa
cmc
mov
inc
notl
sarb
sbb
add
pusha
xchg
mov
fimull
rcll
sbb
aad
pop
fadd
imul
int3
mov
jbe
jmp
fs
adcb
mov
clc
int
mov
fldcw
inc
outsl
shrb
jbe
inc
cmpsb
mov
lcall
cmp
mov
sub
iret
fs
sarl
jge
les
pop
les
xchg
mov
out
add
jge
fbld
xchg
dec
jne
mov
ljmp
add
push
lds
negl
add
jle
and
ss
mov
dec
pop
and
jge
sbb
in
lret
call
sub
push
stos
arpl
mov
call
rclb
pop
test
inc
xchg
sub
sbb
adcb
add
and
ja
test
imul
mov
outsb
popa
pop
cmpsl
cmpsb
sbbb
push
scas
lret
jae
add
jl
jge
mov
cmc
out
dec
add
inc
xlat
iret
scas
ja
mov
sub
stos
je
popf
adc
sub
or
ds
icebp
das
pop
fadd
cwtl
jle
and
mov
xor
xchg
fildl
lds
jge
mov
push
push
jge
add
add
dec
loopne
pop
push
jge
inc
mull
cmp
xorl
or
mov
xchg
pop
pop
sub
pop
add
icebp
dec
bnd
xchg
stos
jl
pusha
and
fisttps
stc
lret
add
mov
push
test
sub
sbbl
fiaddl
inc
pushf
addr16
mov
icebp
scas
adc
jp
sbb
mov
pop
popa
enter
hlt
jle
add
mov
fstps
out
xor
xchg
lret
cs
add
pop
push
mov
fucomip
adc
out
aas
add
push
cltd
mov
and
jbe
lods
movsl
decb
in
into
lret
ss
es
inc
and
ss
mov
mov
fnsave
test
mov
sbb
loop
add
cmp
add
lret
and
add
in
and
add
jo
push
adc
movsb
mov
sar
fwait
and
or
lods
out
dec
out
xchg
xchg
cmp
xchg
shrb
nop
test
mov
push
adc
xchg
leave
fidivs
xchg
pop
shrb
inc
xchg
inc
filds
sbb
cs
rcll
nop
int3
jecxz
adc
or
jmp
xchg
mov
out
les
push
mov
call
mov
bound
mov
mov
push
lds
cld
loope
dec
xchg
cmpsl
cs
xchg
cs
dec
mull
stos
aam
sbb
and
pop
sub
xchg
lea
and
mov
lret
jle
cmpsl
mov
loop
pop
lcall
adcl
lods
int3
cwtl
sbb
xchg
mov
xor
lock
sbb
inc
sbbl
dec
insl
fsubrs
mov
sub
pop
jno
daa
mov
in
in
pop
sub
sar
ret
jae
mov
sbb
xchg
sub
adc
mov
sub
mov
movsb
xchg
push
cwtl
je
xor
popa
leave
mov
enter
or
testb
xor
sbbb
dec
xchg
js
dec
pusha
push
shrb
lock
mov
dec
xor
pop
ror
mov
into
mov
jae
pop
push
push
or
lods
fiadds
clc
clc
mov
pop
inc
loopne
dec
adc
xchg
jbe
cmp
jecxz
data16
sbb
mov
setl
sahf
jne
inc
mov
mov
and
and
xor
in
movb
sub
sub
jne
ret
mov
das
xchg
jecxz
sub
cltd
ljmp
out
mov
arpl
cltd
loopne
adc
cmp
rcrl
daa
cmpsb
pop
inc
or
aam
es
stos
std
addl
adc
sbb
into
add
loope
jl
sub
mov
xchg
stos
mov
mov
lea
dec
cld
push
jns
add
idivb
scas
mov
ja
fwait
test
outsl
push
xor
stc
arpl
dec
mov
iret
mov
int
in
shrb
mov
shrb
mov
cmp
lahf
add
xchg
idivb
cs
inc
sbb
jmp
pop
adc
gs
mov
dec
xchg
pop
mov
cmp
jle
mov
xor
pop
push
fwait
cltd
sub
xor
cs
dec
xchg
popa
icebp
call
es
rcrb
dec
cs
repnz
addl
xor
stc
mov
jnp
repz
add
mov
sbbl
jp
sub
or
mov
ret
cmp
dec
sbb
orl
add
jae
push
add
adc
lods
adcb
jmp
fsub
shll
adc
add
mov
sub
clc
cmp
data16
hlt
orb
mov
xchg
pop
sbb
adc
sub
rolb
int
xor
mov
dec
jge
sbb
sbb
mov
ror
inc
out
lret
push
out
sub
outsl
mov
loope
xor
pop
js
dec
pop
or
mov
push
in
pop
in
lret
mov
dec
adc
addr16
cmc
add
mov
hlt
insb
push
cmp
sub
pushf
pop
push
pop
sbb
adc
dec
cmp
inc
ljmp
das
jne
rcrb
adc
xor
pop
rcr
mov
roll
insb
call
push
xchg
sub
cld
test
rclb
xor
or
sub
in
inc
stos
mov
out
push
pop
pop
movsl
stos
int3
andl
sbb
mov
sub
push
sbb
jno
insl
addb
imul
sub
add
jnp
imul
cmp
fistpl
test
pop
cmp
pop
xorl
pop
xchg
and
fwait
fwait
in
jns
lret
repz
into
shrb
sub
clc
dec
or
sbb
xorl
push
xor
push
push
test
je
mov
bsf
add
cld
lahf
xlat
mov
lahf
decb
xchg
push
das
and
mov
cmp
imul
leave
push
cmp
je
cmp
in
push
jb
call
jecxz
xchg
dec
and
jle
jge
pop
mov
inc
lea
pop
push
icebp
inc
data16
xor
push
mov
stos
inc
mov
inc
pusha
jae
jae
movsb
cmpsb
lcall
popa
ss
jne
or
in
sbb
mov
fcomps
mov
pop
push
dec
xchg
sub
jle
push
aam
test
out
das
dec
ret
xchg
pop
ljmp
or
insb
mov
or
fdivrs
push
mov
jbe
call
nop
mov
addr16
sbb
and
shrl
cmp
jne
push
add
mov
lock
or
repz
shlb
and
mov
das
icebp
mov
pop
jne
inc
xchg
movsb
ljmp
pop
mov
sbb
insl
repz
or
int3
sbb
dec
js
adc
daa
lahf
pop
mov
ss
or
xor
xchg
loopne
stos
xchg
xor
lods
out
adc
xchg
rorb
lock
add
mov
or
repnz
push
lahf
inc
fisubrs
and
dec
inc
ds
stc
or
out
push
addr16
xchg
insb
testl
cmp
pop
pop
mov
push
sbbl
dec
fdiv
mov
mov
scas
scas
mov
mulb
das
jmp
add
sbb
aam
adc
xchg
mov
cld
pop
xor
push
and
xor
xor
les
rorl
and
mov
mov
push
call
pop
and
jmp
fcoml
cmp
mov
je
cld
mov
xor
add
sub
call
call
inc
add
inc
inc
shlb
adc
repnz
shrl
int3
xor
cs
shll
in
cs
xor
dec
mov
insb
push
sub
lret
adc
sbb
fisttpll
fistpl
in
std
or
pop
mov
lret
pop
cwtl
pop
mov
sub
jmp
push
dec
pop
or
mov
aam
jge
lods
or
pop
inc
push
mov
fsub
push
xchg
je
jno
icebp
stos
sbb
cs
cmc
clc
push
iret
cmp
aam
add
lret
pop
mov
cmpsb
sbb
cmpsb
mov
pop
out
popa
dec
test
add
adc
cwtl
jns
cmp
push
cmp
jnp
sbbl
xchg
push
shrb
cmp
js
aas
lods
xchg
adc
fmuls
sbbb
or
xchg
in
jbe
mov
jnp
xchg
ss
call
pop
ss
dec
mov
adcl
xchg
inc
sub
mov
xchg
mov
mov
and
push
ds
mov
mov
arpl
dec
cmp
jno
decb
pop
fiaddl
inc
cli
mov
and
sbb
pusha
in
mov
or
loope
dec
sub
dec
fiaddl
lods
clc
mov
mov
lahf
outsb
fxch
pop
xor
ret
loop
stos
cmp
les
mov
pop
mov
xor
mov
inc
lret
push
xlat
pop
inc
cli
gs
fldcw
inc
pop
push
test
andl
push
pop
mov
push
or
pop
or
imul
daa
dec
test
roll
sbb
jno
test
jnp
xchg
pop
pushf
dec
ret
fildl
ljmp
adcb
lods
bound
mulb
mov
negl
aad
mov
adc
pusha
push
inc
lret
pop
test
dec
repz
pop
cmp
movsl
mov
and
dec
cli
mov
call
out
clc
sub
mov
or
fbstp
cmpsl
flds
loop
int
mov
inc
out
movsl
cmp
nopl
aad
dec
aas
sub
movl
out
xor
jle
mov
outsl
test
addr16
sti
fiadds
addr16
dec
xor
fiaddl
popa
xchg
pop
repnz
in
iret
inc
inc
cs
out
mov
cmp
mov
xor
orl
add
insl
lret
in
mov
adc
mov
pop
inc
insl
or
iret
xchg
mov
data16
mov
cli
mov
adc
dec
or
or
sub
frstor
inc
sub
mov
xchg
mov
out
xor
mov
fwait
ret
movsb
ret
jecxz
or
ds
test
dec
cmp
xchg
sbb
xchg
adc
mov
or
adc
jle
or
inc
enter
push
out
push
push
mov
out
add
xlat
or
cmc
mov
adc
outsb
dec
fsubp
mov
mov
or
jae
lock
sahf
push
rcrl
and
out
pop
aam
imul
mov
faddp
mov
push
cli
push
cmpsl
jp
xchg
out
out
ret
test
cld
cmp
push
insb
or
shlb
xor
or
cs
push
jae
aaa
fisttpl
and
xchg
aam
add
bound
inc
cmp
lods
out
pop
outsl
xor
dec
cmpsl
dec
mov
in
adc
mov
mov
popf
sub
pop
cmp
xchg
and
adc
imul
dec
in
adc
pop
pop
insb
jge
jno
out
lahf
les
mov
push
xchg
imul
cmp
sbb
or
sbb
sbb
sti
mov
cmp
in
dec
in
hlt
outsl
add
in
push
push
call
and
sarb
mov
mov
inc
fsub
pusha
cmp
xchg
fstpt
out
xchg
test
out
dec
lock
jmp
and
lods
loop
jb
pop
push
mov
adc
jb
mov
mov
test
out
out
or
inc
pusha
jg
cmp
ljmp
sub
mov
leave
add
insl
bound
test
or
addb
fwait
xchg
or
xor
inc
push
test
insb
mov
add
mov
and
or
icebp
adc
mov
and
xor
ja
push
xlat
loop
mov
jo
clc
cwtl
je
cmp
fldl2e
test
or
mov
fwait
ljmp
outsl
sbb
addb
adcb
and
cmpsb
mov
pusha
pop
stos
add
shr
shlb
mov
cmpsl
push
or
adc
xchg
in
aaa
sbb
scas
jbe
push
add
xchg
lret
stc
idivb
lds
mov
xor
scas
xor
push
mov
ss
xchg
and
cmp
cmpsl
dec
out
xor
lods
mov
lock
mov
cltd
sbb
sub
ror
cmp
aad
sbb
push
in
cmp
adc
or
cmp
mov
into
push
sbb
test
cs
in
sub
add
push
insl
pushf
pop
push
sbb
stc
test
sar
je
jnp
xchg
fstps
push
test
fsubrs
lods
jnp
test
out
popa
cli
jae
pop
xchg
scas
je
rcrl
mov
leave
lock
fcoms
cltd
aam
stc
or
incl
maxps
push
add
inc
test
scas
mov
xchg
pop
popa
insb
inc
notl
adcl
adc
hlt
test
cld
mov
adc
cmp
and
fisttps
dec
mov
adc
mov
out
mov
sti
test
inc
ror
jmp
rcl
pop
jle
call
rep
or
inc
ljmp
int
out
cmp
jecxz
test
lods
cmpl
test
ja
addb
dec
clc
pop
lcall
xor
sub
mov
mov
or
lret
push
bound
dec
xor
in
pop
ljmp
cmp
jb
adc
mov
ljmp
faddl
mov
insb
stos
ljmp
pop
jnp
cmpsl
test
movsl
je
mov
faddl
fistps
xor
fcmovb
out
adc
adc
sub
push
popa
loop
jmp
xor
mov
enter
push
inc
ljmp
aad
jl
xchg
lea
fnstsw
xor
push
mov
fsubs
mov
out
jecxz,pn
jb
fnstsw
mov
pop
sbb
add
xor
jge
push
sbb
mov
cs
sbb
push
sub
lea
xor
rcl
and
dec
mov
mov
dec
sbb
ss
cmp
or
mov
xchg
push
iret
sbb
and
mov
mov
jae
or
mov
mov
mov
in
mov
or
or
movsl
pusha
aas
inc
cmp
mov
mov
sub
mov
je
or
and
aaa
pop
cmc
mov
mov
pop
push
cmp
aas
pop
add
mov
jmp
shrl
sub
add
sti
or
xor
das
sahf
sub
xchg
cmp
push
jnp
lahf
test
stos
xor
or
xor
dec
aas
pushf
out
sbbb
loop
mov
popl
adc
insl
imul
aaa
jmp
mov
negb
jp
sarb
mov
pop
repnz
sub
insb
mov
insl
scas
test
and
pop
sarb
pop
mov
enter
sub
jp
push
shll
mov
test
push
adc
jne
jo
mov
out
lds
jl
jmp
fcmovnu
or
mov
or
imul
cmpsb
mov
xchg
nop
or
jns
pop
push
add
adc
pop
addr16
pop
ret
aad
sbb
pop
mov
fisubrs
add
xchg
imul
dec
stos
ljmp
dec
pop
rclb
daa
and
test
ss
out
xchg
mov
mov
or
fmuls
popf
lret
and
inc
mov
xorb
jo
jl
mov
stos
roll
rorb
lcall
cmp
mov
outsl
pushf
jge
test
sti
rcl
mov
fisubrs
mov
cmp
das
or
mov
mov
sub
jge
jmp
inc
push
dec
iret
arpl
push
add
push
mov
test
xchg
out
xlat
lcall
jnp
and
es
pop
adc
iret
or
nop
stos
aaa
dec
test
inc
sub
and
jle
or
push
sbb
imul
mov
out
pop
pushf
ret
in
cmp
sbb
mov
ss
dec
iret
sbb
pop
cmp
and
mov
out
lea
dec
xchg
inc
ret
jns
push
or
jecxz
jl
cltd
sub
cmc
lahf
stc
rolb
daa
stos
jno
clc
scas
mov
sbb
jp
int
icebp
pop
jge
loop
fidivl
push
jnp
arpl
loope
mov
mov
or
jge
and
daa
cmp
clc
movsl
cs
push
xchg
adc
push
jecxz
pop
or
lods
and
int
stc
mov
outsl
inc
mov
sub
and
test
mov
repz
dec
aas
stc
mov
push
pop
insb
add
cmp
jo
lods
mov
pop
das
bound
and
jle
xchg
fxch
stos
and
add
mov
ret
out
pushf
test
les
pushf
inc
sub
test
arpl
ret
mov
pop
ja
pop
xchg
aad
daa
mov
pusha
or
cmpb
pop
inc
pop
adc
out
and
jae
push
sbb
mov
fst
xor
inc
scas
jp
jae
movsb
jp
pushf
cmp
cmc
push
jae
xor
jmp
ss
js,pn
mov
mov
mov
lahf
int3
jp
lds
popf
xor
lock
sbb
or
out
xchg
adc
sub
jne
lahf
xchg
adc
enter
leave
lods
popa
mov
sbb
and
mov
lahf
in
mov
dec
icebp
loopne
pop
add
stos
jp
mov
loopne
dec
scas
int
pushf
loopne
std
fstl
cmp
inc
test
lods
jb
cmpsb
fnstcw
pop
pushf
cmc
movsb
jae
jnp
in
test
scas
cld
jbe
test
mov
inc
inc
mov
shll
popf
push
hlt
mov
movsl
es
dec
daa
out
mov
push
mov
xor
push
add
js
dec
leave
insb
jnp
mov
xorb
insb
cmp
movsb
and
inc
outsl
jae
sub
sbb
dec
cld
push
scas
out
sub
xor
cltd
cli
fwait
mov
add
lahf
mov
movsb
jno
popa
loope
mov
and
sub
dec
setno
xchg
cmpsl
mov
and
and
xchg
jnp
clc
cld
mov
fcoms
scas
lds
lods
mov
enter
ja,pn
or
or
adc
push
push
mov
and
push
sub
loope
int3
xchg
add
xchg
mov
test
xlat
lds
add
out
xchg
or
test
adc
sub
fbstp
scas
mov
xchg
sahf
pusha
add
pop
mov
mov
mov
rolb
push
arpl
xor
cmpsb
pop
mov
and
es
sti
fsubs
aam
add
xchg
mov
and
mov
and
jae
aaa
js
mov
cmp
pop
pop
sti
fnsetpm(287
in
add
in
jp
jge
xchg
push
imul
jae
rorl
mov
inc
jmp
cmp
ja
pop
push
js
mov
std
jp
insb
jge
cs
push
fldt
aad
mov
cwtl
xorb
mov
hlt
mov
pop
test
mov
in
xor
cld
test
jge
es
dec
loopne
add
add
adc
cmp
or
scas
and
sub
xor
fs
jmp
pop
adcb
mov
xorl
mov
xor
add
pushf
pop
mov
ljmp
dec
jecxz
sbb
test
and
mov
push
jne
repz
loope
push
ret
cmp
mov
sub
cmp
insb
loop
add
xlat
pop
mov
sub
insl
inc
and
push
shll
stos
loopne
push
dec
inc
push
push
popa
nop
nop
stos
sub
xchg
pop
sub
shlb
inc
fnstsw
pop
aas
enter
jp
jnp
and
or
leave
repnz
mov
pop
pop
add
cmpl
stc
in
jno
xor
pop
cmc
cmpsl
mov
pusha
subb
push
sbb
fstp
add
aad
jbe
lods
or
sub
xchg
adc
cmp
xchg
add
mov
mov
push
inc
push
jmp
or
jns
jg
mov
loope
sub
ljmp
mov
int
cli
push
pop
cs
cmp
lcall
sub
scas
xchg
insl
out
lret
mov
jo
mov
pop
jo
int3
mov
das
mov
add
dec
sti
in
sub
add
pop
cs
or
insb
mov
add
push
mov
or
ret
imul
jne
xor
ss
push
cmp
push
mov
fwait
clc
xchg
loope
int3
cmp
mov
mov
or
fwait
push
push
fnstsw
mov
hlt
arpl
aas
gs
in
mov
mov
sbb
inc
and
addr16
into
daa
hlt
xor
pop
les
mov
push
xchg
pop
adc
insl
sti
dec
adc
push
enter
xorl
sub
jae,pt
rcr
icebp
xchg
sbb
fsubs
inc
mov
mov
fsubrp
pop
or
in
cld
leave
inc
jne
movl
cmp
lods
in
js
pop
inc
bound
pusha
fidivrl
ficomps
into
xlat
sbb
jae
push
mov
and
lcall
xchg
push
pusha
pop
call
adc
dec
mov
or
out
ret
mov
mov
push
ds
std
push
jne
xchg
cltd
dec
testl
popa
outsb
jb
jg
sbb
sbbb
xchg
test
mov
dec
inc
mov
adcb
mov
mov
rcrl
mov
dec
sub
mov
shll
inc
bound
xor
jmp
push
inc
sub
xchg
adc
aas
cmp
fldenv
jle
add
cmp
stos
int3
push
sub
js
xchg
push
xchg
imul
jge
pop
push
pop
inc
sub
dec
and
dec
cli
sub
mov
pop
and
jnp
mov
mov
mov
shll
fdivrl
iret
repnz
bound
call
jns,pn
xchg
imul
xor
lcall
adc
xchg
aad
ret
jno
dec
jge
mov
or
pop
jmp
and
inc
pop
ret
jl
adcb
mov
pusha
add
adc
sub
pop
sbb
in
pop
mov
lahf
sbb
iret
jg
jg
out
int3
in
inc
mov
lret
and
mov
add
xchg
xchg
fsubrl
ror
mov
cmpsb
cld
or
cmp
inc
pop
sarb
ret
cs
lods
int
pop
popa
push
xchg
int3
fisubrl
decl
mov
mov
mov
xlat
jbe
nop
add
sahf
xor
cli
fs
jmp
jmp
outsb
mov
jne
movsb
push
in
add
fsubs
out
xchg
mov
daa
mov
iret
iret
jg
fidivs
je
es
push
push
add
push
pop
aaa
mov
xor
mov
lret
xor
dec
xor
or
int
and
pop
out
jmp
inc
add
insb
lret
push
sbb
push
stos
arpl
test
imul
push
mov
sub
je
jle
mov
dec
pop
mov
and
inc
adc
xor
hlt
inc
mov
mov
mov
cltd
scas
push
and
or
jp
pop
cli
push
mov
push
adc
stos
clc
lea
mov
push
mov
cmpb
mov
stos
or
dec
outsl
shl
mov
in
push
push
jmp
sbb
out
scas
xchg
pop
cs
sarl
mov
in
leave
lods
push
and
jb
inc
out
fidivs
push
and
fdivrs
stc
fwait
dec
in
pop
jb
jmp
cmp
fucomip
loopne
inc
pop
cmp
add
movsl
cs
pop
mov
mov
outsl
sub
popa
lea
mov
es
into
std
sbb
fs
aas
sub
mov
pop
popa
pushf
popf
sbb
cmp
icebp
dec
and
ror
out
xor
imul
push
jae
out
xchg
add
mov
mov
and
sbb
frstor
xchg
sbb
sub
mov
loop
cmp
push
and
shl
loope
sbbl
inc
lret
ret
dec
sbb
fwait
sbb
fdivr
repnz
stos
push
mov
adcl
js
out
add
loop
es
xor
aas
add
add
scas
add
shrl
lds
je
pop
scas
pop
and
push
les
mov
je
mov
ja
sbb
aaa
adc
sbb
js
sbb
sub
out
jb
mov
push
out
mov
pop
mov
push
shll
jl
pop
sub
push
jno
dec
sti
ss
jae
test
jl
push
arpl
push
imul
push
inc
xor
imul
pop
dec
jp
pop
sub
outsb
fiadds
jge
inc
cli
inc
jg,pn
nop
xor
test
fnstsw
mov
push
jb
cmpsl
scas
mov
leave
je
adc
out
mov
movsl
stos
movsb
test
dec
push
arpl
cmpsl
mov
ja
and
lods
pop
cmp
arpl
fwait
add
loope
mov
adc
dec
std
sub
inc
adc
out
add
jnp
xchg
cmp
push
out
mov
loope
fs
inc
cmc
cmpl
psubsw
shrl
push
jns
add
or
lea
cld
xor
push
pop
ret
xorb
sbb
mov
xchg
add
fstl
xor
js
add
scas
mov
pusha
insl
daa
addr16
mov
mov
and
and
into
pop
xor
fwait
gs
std
fmul
ljmp
pop
loope
dec
or
and
cmpsl
lods
sub
or
push
cltd
push
or
push
adc
call
ja
in
data16
sub
mov
sti
fdivs
lret
addb
or
inc
movsb
test
int
loopne
adc
cmp
mov
jb
xchg
push
xchg
fdiv
jecxz
xchg
mov
cmp
push
test
add
dec
std
cmp
push
sub
cmp
insl
fs
cmpsl
mov
outsb
jo
in
or
xor
add
dec
mov
sbb
add
sub
insb
and
mov
xor
push
pushf
add
inc
in
mov
inc
int3
stos
jmp
clc
sbb
sar
sti
push
push
dec
xor
xchg
test
push
rolb
jge
lods
loop
cmc
fsubs
push
xchg
cmp
in
ds
aam
jl
add
xor
and
andl
out
dec
add
mov
fdivs
jo
mov
dec
out
adc
push
popf
xor
mov
add
test
and
ljmp
or
orb
shrb
lds
and
jp
psllw
lock
imul
pushf
dec
stc
negb
mov
addb
mov
xor
and
pop
jmp
jmp
mov
test
mov
pop
lods
jno
loope
xchg
pop
scas
test
jno
ljmp
xor
cmp
add
cmp
pop
jnp
sti
jmp
rcl
and
movsl
and
test
dec
push
lods
lods
push
mov
push
jg
xchg
jmp
lahf
call
mov
fucomp
jle
jbe
mov
testl
lock
sahf
cwtl
inc
mov
add
inc
sahf
leave
pop
test
movsb
mov
fistpl
xchg
pusha
mov
out
and
cmpsl
jnp
or
or
lds
push
mov
inc
mov
add
fistps
add
xchg
xor
push
mov
push
dec
fbld
sub
les
cmp
in
inc
jmp
jg
sbb
xchg
outsl
and
pop
loopne
cmc
loop
in
clc
mov
adc
pop
push
ss
data16
adc
lods
mov
repnz
push
push
xor
add
rclb
xchg
xor
xchg
pop
sub
cmp
dec
adc
jecxz
jo
jl
cltd
dec
gs
lods
les
clc
loope
pop
push
cwtl
push
add
push
sarl
scas
incb
add
inc
push
mov
test
mov
lahf
sbb
mov
mov
pop
jp
jno
dec
out
popf
add
xor
int
lds
fldcw
and
jg
adc
push
fs
pop
repz
pop
xchg
xchg
push
cmp
dec
mov
mov
and
lcall
outsb
xchg
dec
add
inc
sti
jbe
or
rcll
mov
mov
jle
cmp
fidivrl
and
push
addr16
jne
aas
fldcw
mov
ficomps
sbbb
arpl
shrb
cmpl
testl
insb
popa
and
rolb
add
add
adc
adc
in
sbb
inc
push
cmp
popa
pushf
mov
pop
divb
jbe
cld
addr16
xchg
fiaddl
mov
jp
fdivrs
or
loop
mov
mov
rclb
push
sti
loope
xor
mov
movsl
jo
ret
cmp
cmpsl
push
xchg
or
mov
sub
orb
aas
or
dec
cmpsb
or
fmull
sub
push
and
cwtl
lea
adc
jb
imul
or
out
subl
push
cmp
loopne
imul
push
icebp
js
sti
add
cmpsl
jno
filds
in
xor
xchg
xchg
mov
cli
popa
shll
adcb
aaa
adc
or
xlat
fisttpl
xor
xor
mov
in
xchg
push
pop
mov
or
hlt
mov
push
sbb
outsl
outsb
or
subb
ljmp
imull
xor
fists
sbb
int
pop
xchg
push
cmpsb
sbb
mov
aad
popa
pop
push
jle
dec
loope
rorl
shlb
jno
mov
jne
mov
jb
shll
xchg
ret
xor
ja
sti
push
xchg
dec
ficomps
and
push
push
leave
fistl
bound
je
jb
imul
push
push
rorb
add
mov
adc
add
cmp
inc
pop
daa
pop
dec
push
add
inc
stos
mov
add
xchg
not
mov
mov
or
aad
push
insl
daa
dec
cmp
lret
sti
push
xor
inc
idivb
bound
in
movsl
aad
sti
jnp
xchg
lret
and
inc
arpl
lret
shll
leave
jp
lret
xor
arpl
inc
fcomip
ret
and
pop
mov
mov
iret
mov
sbb
sub
cmpsb
test
in
fucomi
nop
cmp
dec
enter
lods
or
jp
jge
push
ret
testl
mov
inc
add
movsb
dec
rcr
out
mov
popa
mov
sbb
mov
lret
stc
fimull
jg
imul
fmul
loop
test
fsubrs
insl
jl
lods
scas
jae
mov
xor
jne
add
lea
nopl
mov
ds
or
push
out
or
test
inc
jecxz
sahf
mov
ret
mov
sahf
lds
je
cmp
pop
xorb
int
adc
inc
testb
jno
push
gs
adc
inc
cmpsb
push
insl
mov
push
rcrl
mov
sbb
mov
ja
aaa
aam
gs
rolb
in
cmp
and
or
and
in
lock
arpl
fwait
lcall
je
sbb
popf
mov
sub
add
fidivs
lret
sti
arpl
movsb
dec
push
insl
pop
faddl
cwtl
push
mov
lret
scas
aam
pop
int
mov
and
js
rcrl
cmp
push
push
out
jmp
mov
aad
mov
pop
sahf
push
push
daa
movb
dec
jmp
cltd
out
mov
or
jne
pusha
fldt
fisttpl
or
and
mov
mov
mov
jge
mov
cmpsl
rcll
arpl
dec
xlat
addb
sub
das
push
and
out
xchg
add
or
inc
ss
inc
mov
dec
stc
enter
sbb
cmc
lret
or
xchg
lahf
scas
xchg
loope
test
xchg
xchg
in
dec
push
insb
pop
or
imul
ret
ret
jle
andb
inc
cmp
aaa
jo
cs
cmp
mov
jmp
mov
fnstcw
hlt
xor
or
dec
lahf
movsb
sahf
sahf
sbbl
pop
jg
xchg
mov
inc
hlt
adc
mov
and
dec
roll
mov
pop
sbb
orl
mov
push
and
xchg
ficompl
jb
insb
add
or
push
ja
stc
mov
out
mov
repz
and
xor
push
aam
outsb
push
add
push
mov
fistl
or
add
rolb
mov
dec
jmp
cmp
xchg
test
int
shl
fsts
pop
dec
push
dec
xor
cmpsb
out
pop
ja
mov
inc
adc
cmp
in
pop
in
xor
insb
cmpb
das
sub
lods
fsts
hlt
ret
jne
add
ja
test
push
sahf
das
mov
adc
repnz
adc
sbb
xchg
popa
add
imul
sub
and
pusha
ljmp
push
pop
imulb
hlt
jmp
adc
adc
ljmp
cmpsb
rorb
dec
jne
icebp
cmp
popa
or
dec
icebp
gs
xchg
repnz
jnp
and
and
movsl
stos
cs
into
and
icebp
aad
int
sbb
sbbl
lds
cli
cli
mov
or
xor
jp
and
sbb
mov
inc
outsb
cltd
call
enter
sub
inc
adc
jb
or
lods
xor
daa
rol
mov
xchg
cmp
sarb
mov
mov
cli
aas
pop
adc
out
xchg
xchg
stc
ljmp
inc
xchg
add
inc
and
mov
xor
mov
ja
fs
sbb
insb
pop
pop
mov
inc
lahf
lock
add
xchg
stos
imul
or
rorb
mov
cmp
push
pusha
or
sbb
jecxz
aad
or
insl
dec
xor
popa
sbb
shr
imul
or
xchg
push
dec
or
mov
out
rorl
or
imull
jecxz
cwtl
and
cwtl
nop
test
mov
xor
dec
or
fimuls
jbe
or
push
test
pop
fidivs
fistl
insb
sbbl
push
sbb
sti
add
shlb
clc
mov
push
mov
pop
mov
cmp
data16
mov
jge
scas
ficoml
xchg
mov
rolb
pop
mov
leave
aas
mov
mov
out
xor
pshufw
lock
xchg
sbb
push
aas
sub
or
addb
cmpsb
sbb
adc
ds
xor
mov
cmp
xchg
cli
cmp
inc
push
je
aad
add
or
sbb
mov
jp
cltd
nop
push
movsb
ret
sub
sbb
cwtl
push
cltd
insl
dec
ds
jo
pop
inc
mulb
mov
out
push
pop
scas
mov
mov
mov
rorl
xlat
mov
sbb
stos
cmp
test
std
pop
ds
dec
sarb
push
xor
repnz
stos
fidivrs
mov
cmpsl
xchg
jns
mov
xor
jnp
pop
push
lret
mov
add
mov
dec
jecxz
aas
xor
aaa
inc
sub
mov
cmp
cs
pop
cwtl
xchg
pop
aad
mov
adc
adc
xchg
popf
pusha
std
jae
faddp
jl
dec
pop
das
aad
xchg
lret
roll
sub
push
fidivs
mov
push
les
scas
ret
lret
testb
cmp
addb
insb
inc
daa
mov
scas
sti
or
sbb
jo
sub
test
lods
mov
mov
je
xchg
jbe
push
je
pop
stos
and
push
imul
xchg
int3
int
sbb
jns
out
push
and
out
lds
pushf
fsts
movsl
not
or
mov
lds
adc
and
jbe
sbb
pop
aas
bound
dec
pop
add
cmp
dec
lcall
loopne
divl
repnz
mov
cltd
pusha
xor
fcomp
cmp
pop
jns
mov
sbb
mov
jg
cmp
mov
jg
rcrb
mov
sbb
pop
sbb
xchg
inc
gs
out
mov
mov
outsl
insb
mov
fildll
popa
pop
push
pushf
and
arpl
outsb
inc
sub
fwait
mov
xor
sti
gs
imul
stos
test
jo
jno
sarb
je
dec
and
xchg
repz
push
ss
push
mov
sub
dec
les
aaa
or
mov
push
movsb
cmp
push
repz
stos
out
mov
pop
cmp
push
dec
fldl
ja
sti
pusha
lds
sbb
inc
dec
pop
pop
popf
imul
xchg
das
add
nop
mov
mov
adc
jmp
leave
ds
loop
add
cwtl
push
cltd
shrb
rcl
sub
mov
dec
js
push
sbb
int3
push
jb
xchg
lock
aaa
sbb
pop
outsl
xchg
int3
push
mov
ficoml
mov
mov
gs
dec
sub
push
xchg
enter
xor
cmp
orl
dec
jecxz
out
sti
out
jae
popa
sbb
mov
ds
mov
jbe
mov
mov
dec
ss
cwtl
xchg
int3
sub
xor
arpl
push
cmp
mov
sub
dec
ljmp
es
push
inc
call
loopne
jg
xchg
leave
scas
outsl
shlb
movsb
pop
ds
bound
repz
cli
jb
lcall
sub
ja
or
mov
push
sbb
fmull
inc
inc
xchg
pop
push
mov
popa
pop
hlt
cli
or
mov
lods
int
fiadds
stos
into
or
ds
push
cli
xor
loop
imul
push
or
inc
in
aam
push
or
and
shll
aad
mov
add
test
push
xchg
and
inc
lods
push
and
xor
mov
arpl
outsb
jmp
bound
mov
cld
insb
int3
dec
xor
ret
movsl
jno
xchg
out
ss
dec
jbe
fwait
mov
enter
insb
xchg
cld
dec
enter
and
add
insb
mov
cltd
fistl
and
pop
inc
mov
testl
in
mov
je
enter
into
push
cmp
fnstenv
test
cmp
nopl
cmp
pop
dec
inc
xor
ss
jg
xcrypt-ofb
cmpsl
push
out
mov
lock
pusha
and
pusha
cmc
pop
dec
sub
gs
es
repz
iret
fdivrl
in
out
out
push
ja
arpl
push
sub
sub
shrb
dec
pop
dec
cmp
jbe
pop
test
fldenv
addb
push
or
ljmp
hlt
push
dec
fistpll
or
sub
in
jo
cmp
mov
ret
pop
adc
or
sti
lahf
or
add
mov
xchg
adc
sub
xlat
xor
jle
lock
cmp
test
adc
js
je
leave
sbb
das
mov
add
jnp
addr16
sub
ds
test
dec
add
in
push
and
out
push
test
xor
jg
jmp
jl
inc
aaa
jg
jp
leave
pop
mov
pop
pusha
mov
cwtl
clc
int
xchg
xchg
adc
or
lock
dec
xlat
int
movsl
stc
mov
roll
decb
add
lock
mov
xor
add
test
sub
fdivrl
mov
test
add
cmp
iret
jp
fwait
cmc
movsb
push
in
sub
cmpsb
xchg
scas
push
outsb
icebp
jns
hlt
cli
and
stc
test
fmuls
push
pop
or
loopne
jl
lock
gs
loopne
cmpsl
or
movsl
adc
lcall
mov
mov
lret
into
or
add
lea
testb
mov
imul
fwait
xor
mov
jo
movsl
jl
aas
test
ljmp
fistl
lret
leave
mov
mov
push
add
enter
xor
push
inc
ds
jb
imul
lea
fwait
push
mov
mov
jne
adc
pop
pop
mov
lahf
fists
cld
xchg
loopne
or
sub
jg
test
and
xor
ljmp
mov
sbb
push
das
bound
fwait
jns
lock
ret
insb
mov
mov
mov
pop
jg
clc
dec
mov
test
jns
inc
rcr
filds
shrl
cmp
stos
mov
ljmp
inc
int
test
lods
test
aas
mov
mov
fcmovnbe
cmp
inc
lahf
inc
aam
adc
jae
sarl
jmp
xor
and
sbb
jbe
or
mov
cmpsb
cmpsb
lock
jl
cli
out
or
push
mov
popa
pushf
out
insb
xchg
sub
mov
adc
inc
faddl
enter
push
scas
sub
xchg
pop
loopne
xchg
cpuid
out
test
adc
pop
repnz
and
call
fdivl
test
fiadds
pop
adc
sbb
inc
push
in
addb
lahf
and
sbb
imul
aaa
mov
mov
cltd
mov
sbb
fidivs
cmpsb
cmpsl
fstpt
dec
jp
nop
nop
cmp
aam
lea
int
mov
loope
lret
push
adc
shrl
or
jnp
sub
sahf
push
and
rclb
xorb
mov
inc
jno
cs
push
out
sti
popf
mov
lcall
gs
imul
and
lock
add
cli
hlt
add
pusha
mov
inc
lcall
push
cmp
push
subps
mov
adc
test
shrb
sub
adc
add
mov
lret
and
jmp
and
adc
aaa
test
jbe
xor
sbb
mov
pop
rorb
or
lahf
mov
pop
les
ljmp
mov
pop
push
fbstp
cmp
inc
sub
ret
jmp
scas
jbe
adc
add
fsubrl
and
cmp
jnp
push
xor
add
add
mov
cmp
nop
es
add
fs
je
sub
mov
in
mov
xor
sub
mov
rol
mov
pop
lea
rorb
ret
sub
pop
add
cmp
rcl
test
mov
and
mov
lea
loopne
ja
dec
negl
mov
or
loope
sbb
int
fwait
dec
imul
out
pop
shrl
or
push
push
cmp
lock
push
pop
add
push
xor
movsl
ljmp
or
fstpl
jbe
clc
addps
sbb
into
push
pop
aaa
lahf
jns
inc
out
repz
loopne
mov
or
xacquire
sahf
sbb
xchg
stos
push
js
inc
jge
lods
pop
rcrl
push
push
jge
ss
and
insb
into
jge
push
sub
jae
xor
ds
push
jb
adcl
cmc
inc
push
xchg
iret
jns
mov
xchg
inc
add
lods
sar
mov
push
mov
cmp
pop
push
pop
out
pop
lea
dec
test
inc
ret
fistpll
into
sub
scas
hlt
les
push
in
push
xchg
dec
mov
and
fiadds
dec
jmp
xor
jp
jecxz
inc
div
std
pop
sahf
pop
inc
add
sub
in
xor
push
jmp
inc
push
sub
cmc
jns
in
ljmp
jne
inc
push
in
xor
push
hlt
xor
sbb
dec
mov
mov
call
add
sbb
lcall
mov
adc
lret
mov
cltd
mov
dec
jbe
cmp
imul
addr16
cmc
push
out
repz
push
dec
dec
clc
fiaddl
cli
js
pop
rclb
sti
mov
add
imul
out
rcrl
cmp
push
sbb
ret
shlb
mul
cmp
incb
mov
out
jle
nop
sub
scas
repnz
xchg
mov
push
cmp
loop
mov
lcall
out
add
mov
adc
jnp
imul
sbb
js
fildl
clc
mov
imul
pop
inc
xchg
xchg
js
out
lea
pop
inc
cs
add
pop
and
mov
leave
out
inc
jnp
sbb
jne
pushf
pop
test
push
jmp
testl
pop
lahf
sbb
test
adc
push
test
xor
icebp
pop
inc
cltd
adc
insb
shr
mov
push
sti
mov
inc
push
nop
mov
or
ljmp
popf
fdiv
mov
cltd
push
pop
int
xor
or
push
jl
in
in
mov
js
test
adc
sbb
adc
in
cli
xor
test
pop
shll
aam
rcrb
in
mov
hlt
pop
mov
cltd
pop
shrl
scas
xchg
imul
in
and
scas
inc
pop
js
arpl
jmp
mov
addr16
ror
dec
cltd
or
pop
inc
or
in
sbb
mov
outsl
pop
mov
cwtl
and
in
lahf
and
xchg
out
sbbb
xor
or
pusha
dec
and
pop
stos
movsl
hlt
bound
xchg
and
sbb
or
inc
in
ljmp
dec
or
jae
mov
push
or
nop
shlb
mov
lcall
mov
mov
lret
scas
fcomps
or
stos
push
test
xor
lods
push
pop
fcoml
imul
sbbl
and
and
sub
out
pusha
dec
insl
and
fcomi
push
inc
xchg
cmp
inc
mov
or
add
push
fcompl
mov
pop
cmpsb
data16
mov
push
lods
push
add
ljmp
sub
or
push
fisubrl
jg
mov
pop
subb
sub
outsb
mov
push
bound
jg
jmp
stc
xchg
add
jo
in
add
mov
xchg
mov
add
int3
cmpsb
repnz
pop
mov
inc
jp
test
iret
test
js
sahf
and
add
add
data16
popa
cmp
xchg
ret
mov
bound
andl
nop
insl
mov
into
cmp
cmpsb
in
sub
mov
mov
mov
outsb
bound
pop
cmp
fcmovu
outsl
js
scas
xchg
or
sbb
jae
push
inc
inc
inc
pop
sbb
movsb
addr16
iret
cmpl
sbb
sbb
call
fidivrs
out
sbb
mov
test
jle
cmp
xchg
adc
sbb
push
xchg
adc
cmc
jg
jno
test
ret
cmp
mov
insl
inc
lcall
cmp
out
xchg
icebp
hlt
rorl
pusha
call
adc
mov
cmp
imul
ss
fcomps
hlt
cmpsb
cmp
daa
cltd
inc
test
xor
mov
jp
and
adc
push
mov
in
out
jp
lcall
mull
popf
mov
mov
insb
les
jnp
stos
or
cld
xchg
jmp
sub
jmp
daa
data16
movsl
mov
je
imulb
lods
lcall
inc
sahf
outsb
sub
enter
insl
inc
inc
cmp
insb
jb
repnz
add
es
stos
xlat
in
rorb
mov
in
and
add
ljmp
jle
stos
stos
push
push
aam
scas
cwtl
mov
aam
add
cwtl
addr16
mov
aaa
sub
xchg
and
outsl
in
jno
xor
shlb
mov
test
stos
xchg
push
jecxz
in
ret
bound
push
fildll
pop
adc
loop
or
cmp
sub
adc
inc
xor
add
jns
insb
push
inc
lret
ja
mov
adc
idiv
pop
xor
pop
ror
leave
xchg
aas
outsb
jg
imul
mov
lcall
jg
aas
pop
mov
push
ds
cmp
das
imul
inc
lret
inc
cltd
jb
hlt
cmc
mov
scas
dec
cli
ja
pop
bound
loop
mov
pop
adc
loopne
xchg
dec
out
clc
les
inc
and
mov
jno
insb
imul
imul
pushf
inc
es
cli
clc
imul
jbe
xchg
mov
lret
movsb
cltd
inc
in
push
negl
inc
xlat
jle
les
clc
aad
es
rol
in
or
xchg
aam
add
fcoms
test
mov
or
mov
mov
cmp
sub
shlb
fbld
sub
xchg
fs
clc
int3
sti
cmovl
lret
sub
hlt
mov
pop
jecxz
push
inc
ljmp
lea
sti
dec
out
je
dec
ljmp
push
scas
popa
iret
jmp
dec
push
mov
lock
or
inc
cmp
or
test
inc
lcall
insl
inc
ds
gs
icebp
inc
aaa
ljmp
nop
loope
insb
dec
pop
cmc
out
cmp
and
ja
ss
loop
test
sub
and
sysenter
ficoms
call
testb
scas
add
mov
loope
push
out
sub
sbb
and
data16
ljmp
push
repnz
fs
push
sub
ret
or
push
jb
das
inc
mov
or
clc
fcompl
divb
imul
add
cltd
imul
call
lret
pusha
or
inc
adc
daa
push
ljmp
add
outsb
dec
xchg
jmp
pop
cmpsb
fsubl
fldenv
jge
nop
push
pop
push
in
push
mov
add
cmpsl
mov
pop
decb
aas
daa
repz
pop
xor
fldcw
sub
mov
cltd
mov
imul
or
fsubrs
lret
cmpxchg
cmp
arpl
xor
xchg
sti
inc
int3
jne
mov
mov
imul
jmp
mov
lret
iret
js
lahf
or
sbb
je
shlb
stos
cli
pop
mov
jecxz
lock
fs
push
mov
rcl
xchg
lahf
iret
xor
adc
xchg
pop
adc
fdivrl
xchg
lock
cmpsb
inc
jl
pushl
cmc
dec
or
out
call
fsts
out
dec
in
insb
rol
cmc
rol
stos
sbb
test
lret
cld
sbb
ds
insb
popf
xor
ds
aaa
xchg
cmp
hlt
adc
lahf
pop
pop
lret
lret
and
or
mov
mov
xchg
hlt
std
or
xchg
push
jecxz
addr16
jno
dec
fildll
sti
stos
mov
lcall
jecxz
mov
pop
pop
out
lret
or
and
iret
jl
xchg
mov
jle
aas
dec
add
inc
mov
js
cmp
mov
pop
ds
mov
dec
fdivrp
jbe
inc
pop
mov
sti
leave
movsb
pusha
gs
xor
adc
jnp
fnstcw
mov
shrb
jne
gs
mov
and
imul
and
mov
inc
es
cmpsb
mov
enter
mov
mov
mov
adc
xor
adc
rcrl
xor
fisubl
sbb
xor
repnz
mov
sub
adc
xor
sbb
or
cmp
mov
out
scas
testl
cmc
mov
lret
loop
cmc
rcr
imul
or
xor
out
adc
adc
ret
and
lcall
fadds
sbb
lock
negl
cld
in
fadds
aam
push
les
ja
sbbb
bound
in
push
mov
es
push
sahf
jp
pop
dec
cmp
xchg
jne
enter
mov
pop
pusha
xlat
jo
add
jnp
push
cmp
in
push
push
loope
les
data16
pop
mov
mov
pop
mov
pop
mov
clc
xchg
mov
loopne
bnd
and
adc
nop
fisubrl
pop
mov
jne
or
loop
cmp
push
mov
sub
enter
or
cwtl
jg
dec
push
or
jl
daa
ljmp
inc
push
aad
cmp
ljmp
cmp
sbb
lods
lds
cmp
cmpsb
mov
sbb
movsl
adc
movsb
inc
adc
std
xorl
push
imul
xchg
gs
xchg
push
inc
scas
sub
lcall
mov
or
arpl
mov
call
sub
mov
call
jne
ja
or
lds
and
scas
sub
insb
or
enter
inc
jge
dec
and
adc
test
pusha
push
sarl
push
xor
cmp
xor
xchg
fiadds
ljmp
dec
loop
subb
push
add
popa
daa
lock
popf
jmp
xor
insl
lods
daa
clc
test
pop
imul
dec
hlt
dec
adc
jne
jl
adcl
sahf
std
sbb
divb
ljmp
lds
jno
xor
xlat
icebp
ja
xlat
xor
add
cli
xor
loop
and
cmp
xor
mov
cmpsb
push
mov
leave
push
bound
out
fsub
and
ds
sub
xchg
aad
adc
clc
adc
push
insl
sub
rorl
test
inc
mov
inc
dec
ss
mov
ljmp
outsb
imul
xor
repnz
xor
lock
loop
or
and
push
imul
mov
lcall
rorb
push
inc
inc
push
cmpsl
sti
sub
pop
idiv
jnp
mov
subb
sti
pop
testb
add
arpl
int
adc
fdivrs
sub
fadds
rcrl
xor
cmp
push
imul
les
push
rclb
lea
cli
aaa
dec
mov
mov
aam
jle
ds
adc
icebp
inc
repnz
push
psubsb
mov
xor
aas
inc
out
pop
scas
adc
or
rorl
lahf
sub
sub
not
fcompl
andl
lahf
pop
notrack
pusha
ja
fidivl
mov
lahf
cli
fcmovb
shlb
out
push
adc
xor
jo
or
jne
xor
ds
sub
push
push
pop
fsubr
loop
inc
rcr
int3
ret
pop
mov
push
inc
imul
cld
add
push
repnz
stos
push
shl
movsl
orl
and
adc
shl
sahf
sub
mov
jae
test
mov
push
inc
imul
cmc
fstpl
stos
fisubrs
pop
lcall
outsl
mov
mov
repnz
lret
cld
push
jbe
les
les
sbb
je
ss
xor
pop
fiaddl
push
dec
mov
push
sbb
and
outsb
dec
shrl
loopne
jns
sbb
ret
scas
or
add
lods
cli
lods
pop
enter
push
inc
jge
mov
pop
mov
inc
cwtl
sub
sub
xchg
or
loopne
dec
xchg
mov
and
and
cmp
and
negl
xlat
lds
push
testl
sub
push
jecxz
mov
adc
popa
mov
sub
out
cmp
push
lds
lahf
push
daa
hlt
inc
cltd
in
and
push
and
test
xchg
aad
xor
shlb
mov
adc
pop
loope
xor
in
mov
mov
jg
xor
test
gs
adc
test
fs
jp
jmp
shl
lahf
and
adcb
shlb
inc
pop
nop
sahf
cmc
pop
jo
mov
jne
mov
test
sub
lcall
xchg
rcl
dec
mov
pop
lcall
and
add
sub
push
jbe
ss
cmc
shrl
outsb
push
xor
fs
negb
movsl
mov
out
dec
add
outsl
and
int3
gs
insl
mov
imul
fisttpll
pop
les
pop
mov
ficoms
fmul
add
jl
sub
xchg
xor
mov
inc
and
es
std
enter
into
test
xchg
jp
mov
xor
mov
lret
mov
mov
daa
ds
les
aad
and
inc
stc
mov
sub
pop
dec
clc
mov
dec
cli
push
inc
xchg
mov
xor
mov
dec
cmp
sarl
push
arpl
mov
mov
mov
cmpsb
fbld
movsl
lahf
cltd
into
and
xchg
in
scas
shrb
cwtl
add
sbb
pop
jge
negb
mov
cmp
xor
mov
nop
stos
hlt
dec
enter
aaa
push
aam
mov
mov
cwtl
rcll
lret
dec
ret
dec
hlt
pop
and
and
in
mov
jl
ret
push
repz
dec
movl
sbbb
out
sub
push
cltd
sbb
mov
sti
cmc
pushf
xor
sarl
sub
cmp
push
insl
mov
xchg
lret
loop
mov
inc
lahf
or
jno
push
mov
fsubp
testb
add
fsubl
sub
cmp
mov
push
mov
xchg
inc
icebp
lods
xchg
std
insb
mov
cmp
pop
add
mov
pop
adc
inc
jnp
in
jmp
hlt
out
aam
dec
fstl
fcmovbe
hlt
stos
xor
test
sub
inc
iret
test
jo
je
inc
aam
out
ss
jnp
dec
mov
xchg
push
and
push
gs
nop
les
ret
cs
or
jno
mov
push
fbld
xchg
dec
mov
bound
mov
aad
xchg
mov
push
cmp
and
cmpsl
mov
xchg
add
jmp
mov
jnp
mov
adc
jecxz,pt
into
insl
xchg
dec
cmp
fbld
and
mov
or
xchg
adc
adc
out
mov
xor
cli
rep
cmp
adcb
push
bound
sub
cs
jae
push
outsl
push
insl
fs
fwait
jle
mov
popf
cmp
jecxz
lret
fcompl
or
gs
dec
push
cld
jae
ljmp
and
shr
inc
or
and
fs
lods
sub
push
cmpsb
out
fmuls
and
jbe
cli
xchg
adc
ret
mov
adc
popa
pop
cmp
mov
jno
push
dec
lcall
xchg
popa
mov
and
or
inc
push
cmp
cmp
and
shl
add
pop
dec
sbb
add
xchg
cmpsb
inc
mov
mov
adcb
cmp
daa
pushf
cmp
pop
mov
test
add
in
mov
mov
insb
das
sahf
ret
in
add
jl
mov
sahf
rorl
aam
in
ret
sahf
cmp
pop
aaa
leave
or
adc
cmpsl
stos
mov
cvttps2pi
fsubrl
sbb
nop
test
add
mov
rorl
mov
iret
cmp
or
xchg
cwtl
mov
enter
mov
out
sbb
loopne
xchg
subb
repz
sub
dec
push
sbb
stos
scas
dec
fsubrs
and
mov
mov
pavgw
ret
out
scas
cli
fwait
call
pop
mov
cmpb
int
pop
sar
fstpl
sarl
mov
aaa
jnp
or
sbb
scas
addl
pop
bound
sbb
movsl
xor
xchg
xor
hlt
fadd
sub
dec
cli
cmc
add
or
and
sub
mov
dec
nop
mov
push
insb
inc
in
in
mov
lahf
or
add
jge
and
std
add
test
jmp
mov
out
xchg
mov
clc
popf
in
enter
sub
addr16
cmc
subps
xor
mov
loope
cmpsb
insb
outsl
out
sub
and
cli
lods
inc
inc
push
push
sbb
stos
test
sti
lods
fisubl
add
xchg
cmpsl
push
sub
into
mov
repnz
pop
out
aaa
cld
mov
cmovs
addb
adc
dec
aam
dec
adc
int3
xor
iret
mov
lahf
outsb
imul
cld
gs
lds
fidivrl
mov
and
ja
jp
test
cmp
cmp
out
in
push
mov
pushf
add
inc
mov
jno
jnp
cmp
sbb
jae
cwtl
lods
mov
lcall
not
out
fimull
nop
mov
movsl
test
or
sti
aam
mov
ja
inc
pushf
orb
icebp
and
lea
jns
faddl
stos
xchg
adc
push
int
iret
scas
cmpl
add
fldcw
mov
mov
int3
push
and
in
sub
cmpsl
loopne
outsl
cmp
scas
data16
scas
out
pusha
push
mov
or
test
push
leave
add
push
mov
mov
lea
sbbl
shll
daa
mov
inc
popf
idivb
pop
sub
add
xor
insb
ret
call
imul
lds
cmp
daa
fwait
addr16
adc
sbb
fs
cmpsb
jle
insb
mov
add
sti
lret
or
scas
pop
adc
mov
lcall
cmpb
gs
pop
cwtl
jecxz
xlat
in
and
xor
adc
je
jecxz
cmp
xor
dec
cmp
aad
cmpsb
aaa
movsb
clc
movl
adc
addb
pop
sub
push
call
dec
mov
and
mov
cmpl
inc
adc
lock
pop
int3
lea
inc
test
orb
stc
dec
adc
or
and
fldt
xchg
adc
ss
sbb
mov
shll
out
sbb
sahf
fsubrl
fadd
fs
and
xor
xor
cld
add
mov
ficoms
mov
sbb
jb
ret
mov
repnz
pop
into
dec
xor
inc
cmp
in
rcrb
add
or
aas
and
fildl
cmc
cmpsb
jle
mov
and
cli
lods
push
push
sbb
mov
leave
fadds
repnz
imul
mov
mov
or
push
mov
divb
mov
lcall
lods
leave
imul
leave
mov
cs
dec
and
fisttpll
adc
lret
pop
fcmove
pop
sbb
add
roll
cmc
pop
divb
add
scas
mov
jbe
aam
fbld
jne
das
rcrb
ret
js
data16
out
jns
xchg
cmp
imul
fs
adc
xchg
xor
loop
jbe
push
addr16
pop
sub
xchg
pop
pop
push
ret
loopne
jne
sbb
icebp
xchg
inc
je
sub
loop
mov
mov
imul
pop
pushf
add
int
xchg
jnp
psrld
cwtl
insl
popa
popf
dec
xchg
mul
jle
add
pushf
pop
loop
mov
out
dec
or
jg
jmp
incb
fsub
scas
mov
sub
arpl
in
adc
mov
sbb
jmp
mov
pop
jns
or
push
fmull
fsub
pop
dec
xchg
int3
rorl
call
lret
adc
outsb
test
icebp
popa
cmpsb
std
push
push
mov
rcr
iret
push
push
test
insb
repnz
roll
xorl
inc
ret
adc
jns
fisttps
mov
int
decl
cld
jmp
inc
push
test
out
xlat
mov
push
mov
in
out
and
les
mov
sahf
dec
add
mov
push
push
sub
or
data16
fistpl
cwtl
call
out
push
fstl
cmp
mov
sbb
push
xor
inc
fbstp
push
pop
push
ret
cmpsb
dec
and
cmpsl
sar
ss
pop
adc
mov
addb
ret
inc
es
dec
jno
add
bound
lods
es
aas
pop
push
mov
xlat
sub
ret
das
push
in
cwtl
jo
inc
outsb
out
cmp
out
stos
adc
ror
insb
mov
push
sbb
add
xor
test
push
sub
ficompl
adc
inc
sub
push
mov
jne
or
out
ja
cmp
pop
mov
nop
inc
das
pop
adc
adc
mov
popa
cmp
leave
test
enter
insl
es
jmp
or
es
movsl
push
jle
cmp
xchg
dec
lcall
jg
test
out
lods
mov
lea
mov
push
fbstp
sub
out
les
push
roll
fsubrs
adc
jns
insb
test
xor
and
ffree
jno
dec
mov
sub
lock
fnstsw
dec
cmpb
dec
std
or
das
or
data16
not
fwait
popf
pop
nop
out
push
jne
std
mov
sbbl
cmp
sbbb
std
fcoms
add
rcr
sbbl
dec
aad
fbstp
int
add
dec
sarl
mov
loopne
icebp
cmp
jo
xor
loop
sub
pop
adc
pusha
out
gs
iret
add
pop
mov
inc
stc
pop
mov
repz
rorl
stos
pop
add
enter
mov
lcall
icebp
inc
mov
dec
jp
pop
sahf
inc
or
sbb
rol
inc
sub
xchg
lret
push
into
mov
pop
cld
movsb
call
dec
dec
cmpsb
sub
std
sbb
add
xchg
xchg
jl
dec
mov
dec
cld
dec
lret
cmp
fldl
xchg
dec
or
ja
out
mov
pop
mov
inc
int3
fs
push
in
jno
cli
hlt
sarl
int
xchg
mov
jg
cwtl
pop
push
les
push
mov
push
movsb
sbb
inc
loope
ret
daa
sub
sbb
fimull
push
bound
push
xor
das
add
xchg
ljmp
pusha
jg
sbb
fcoml
popa
mov
test
popf
rcrl
push
mov
shll
pop
cli
shlb
and
addr16
push
filds
in
aas
sub
dec
add
clc
inc
jl
iret
push
or
mov
xlat
sub
or
aas
push
pop
xchg
push
push
mov
aas
addr16
out
jl
dec
jno
daa
in
adc
inc
mov
cmp
push
fs
nop
filds
call
adc
xor
dec
pop
je
adc
jmp
push
repnz
jg
sbb
mov
jnp
rcrb
inc
or
cmp
hlt
clc
movsl
sti
sub
sbb
stc
popf
mov
or
sub
or
mov
fstl
out
xor
cmp
adc
xor
sahf
sbb
dec
outsl
mov
mov
cmp
fldl
pop
shl
add
sbb
mov
mov
popf
and
cs
pop
sub
daa
mov
out
test
outsb
pop
data16
pop
or
lods
repz
pop
jae
cmp
adc
mov
bound
xchg
rolb
mov
push
mov
fldcw
mov
sbb
sbb
call
xor
gs
xchg
mov
lea
or
xchg
jmp
aad
push
sti
inc
lock
in
jecxz
pop
movsb
push
xchg
xchg
mov
xor
dec
xor
xor
outsl
aam
inc
cld
sub
repz
popw
js
test
xor
mov
lahf
pinsrw
outsl
leave
icebp
jge
in
xchg
jge
incl
jl
push
repz
lret
mov
xchg
or
push
shlb
mov
cmp
movsl
add
and
cmp
xor
cmp
mov
fcoms
addr16
jmp
mov
mov
arpl
and
inc
fdivrl
in
hlt
jl
mov
mov
dec
and
loop
mov
push
jg
shl
inc
movsl
mov
fs
inc
push
or
cmp
insw
pop
insb
test
xchg
dec
loopne
in
inc
into
jge
dec
pop
and
daa
adc
outsl
add
or
cli
in
lds
inc
repnz
insb
mov
shr
dec
or
daa
dec
push
and
cmpsb
pop
cmpsl
xor
push
fcmovnu
push
sbb
pop
sbb
into
mov
dec
fwait
testl
add
mov
inc
push
adc
xchg
xchg
ljmp
hlt
pop
add
fsubrs
fsubl
lcall
mov
int3
mov
mov
inc
xor
jnp
dec
or
in
rcrb
cvttps2pi
test
gs
cltd
mov
aam
mov
nop
jae
ds
lods
iret
mov
bound
mov
sahf
mov
test
mov
movsb
push
int
pop
mov
cltd
xor
jmp
aad
and
aaa
lret
in
sub
int3
jo
sub
pusha
dec
and
in
mov
sarl
sub
push
jle
xchg
movsl
xchg
inc
mov
in
lods
arpl
lret
cmpsb
test
iret
insl
mov
and
inc
out
xor
mov
clc
jae
mov
xlat
cld
pop
mov
mov
sub
mov
out
pop
cmp
cmp
mov
and
mov
insb
in
push
lods
sbb
adc
xchg
scas
iret
pop
sbb
mov
mov
repnz
fbld
mov
gs
add
xor
in
add
or
dec
fsts
xchg
or
fsts
lock
ja
pop
inc
mov
popa
or
es
mov
movsl
xchg
and
inc
jae
dec
xchg
pop
shll
int3
sbb
test
sub
mov
fistpl
and
adc
sbb
lods
xor
out
pop
addr16
jo
add
aas
jns
push
jecxz
lret
xchg
push
ror
or
pop
cmpl
mov
push
scas
rcll
push
shll
rol
fistpl
outsb
ljmp
dec
rolb
mov
cli
mov
ljmp
loope
xor
push
and
sbb
or
xor
shll
cmpsl
cwtl
sub
xor
dec
das
xchg
mov
xchg
imul
nop
into
mov
loop
pop
mov
cmovbe
xchg
movsb
popf
dec
in
insl
ss
loop
xor
test
ret
inc
xchg
adc
sbb
call
mov
pop
subl
or
mov
fstps
adc
roll
fldt
adc
sbb
inc
dec
repnz
cmp
push
push
jl
repnz
jle
mov
add
cmp
xchg
pushf
hlt
mov
push
out
loop
divb
ds
daa
inc
pop
out
cld
dec
and
mov
jb
movsl
inc
adcl
stos
call
push
stos
fisttps
xor
fidivrl
adc
pop
call
lds
dec
or
mov
and
pop
cmc
loop
jb
pop
js
jl
and
adc
decl
mov
cli
sbb
mov
sbb
decb
ss
mov
mov
cmc
stc
sbb
mov
dec
xor
lds
andb
cmp
rolb
int
mov
movsl
jge
pop
add
xor
add
or
lahf
or
cld
mov
jg
iret
gs
push
movsb
shlb
jl
cmp
out
loop,pn
sbb
pushf
js
dec
mov
movsb
cmc
mov
push
pushf
sub
mov
data16
lods
subl
lods
repnz
lods
scas
das
jbe
shl
data16
mov
jp
mov
pop
xlat
dec
lock
push
loopne
dec
pop
loopne
insb
movsb
cli
mov
daa
mov
ss
sub
cmovne
dec
lret
imul
adc
add
ljmp
rcll
lcall
pusha
arpl
push
add
jo
outsl
insb
lds
test
shrb
xchg
rol
in
gs
mov
push
pop
test
aad
cmp
popf
cwtl
cli
jo
adc
xchg
dec
jge
andb
adc
aam
lods
ljmp
pop
adc
add
jge
or
mov
mov
jecxz
jge
or
inc
mov
xchg
idivb
push
lods
rol
push
pusha
jecxz
mov
xor
push
push
andl
lret
aad
mov
in
pop
mov
sbb
sbb
mov
mov
test
movsb
jo
in
cmp
jl
dec
fiadds
addr16
pop
dec
scas
cli
jo
mov
lret
xchg
shl
lea
jecxz
ret
les
mov
sub
push
cmpsl
int
pop
lds
sahf
cltd
call
nop
rorl
jle
fs
mov
jg
jb
repz
or
adc
scas
fdivrs
stos
addr16
cld
out
add
sbb
les
les
fidivrl
leave
mov
ret
pop
stos
movsl
mov
daa
sub
dec
sbb
sub
fbld
jns
ja
cmp
hlt
mov
sub
mov
mov
cmp
push
mov
mov
xchg
mov
cmpsl
mov
xchg
push
nop
push
sub
cmp
fs
adc
dec
xor
lea
pop
adc
gs
xchg
xor
fidivl
arpl
xchg
cli
stc
fnstsw
int3
fs
inc
dec
out
in
add
pushf
out
bsf
lds
xor
lret
subl
sbb
repz
sbb
stc
sbb
inc
jno
in
xchg
cli
fcmovbe
push
rcll
jecxz
pop
push
push
jp
cld
fmul
push
cmp
cltd
test
adc
xor
mov
pop
das
arpl
mov
in
sbb
in
dec
cmc
orb
lahf
rol
rcrl
jl
inc
sub
pop
xor
pop
loope
sar
fdivrp
shll
movsl
lods
cmp
inc
in
fwait
rorb
inc
inc
in
jnp
shlb
popa
pop
in
cmp
adc
or
pop
test
push
mov
adc
cwtl
jno
add
int
movl
call
xor
fdivl
cld
jp
sbb
dec
insb
push
inc
pop
xchg
nop
cmpsb
stc
in
mov
lret
int
out
cltd
rclb
aaa
sub
ficoml
push
nop
pushf
loope
sbb
add
jle
adc
inc
popa
push
lret
cmp
dec
pop
dec
jo
lds
add
push
jmp
dec
lret
sbb
dec
cld
sub
dec
inc
lar
dec
popf
push
in
inc
jnp
inc
ret
xchg
cmp
sub
pop
cmp
xchg
das
and
gs
sub
inc
adcl
sbb
mov
sti
lock
push
mov
jg
jns
popf
mov
iret
or
inc
sahf
ror
jno
iret
xchg
sarl
cmpsb
and
push
xlat
aam
loope
or
mov
fdiv
lret
scas
jnp
fdivl
stos
cmp
push
lock
stos
pushf
sub
and
test
push
movsb
inc
faddl
aad
or
shll
cmpsb
and
or
std
jecxz
in
cmp
mov
scas
mov
das
mov
xchg
fwait
imul
inc
xor
jecxz
das
lock
jmp
in
lea
and
test
fsubl
movsb
gs
mov
and
lahf
adc
je
es
call
inc
jo
xchg
mov
nop
mov
clc
adc
or
pop
std
add
inc
out
out
lods
aam
mov
orl
dec
push
mov
es
mov
sub
sub
mov
test
mov
loope
iret
jl
mov
adc
push
push
fimull
aad
pop
sti
mov
cmp
stos
fisubs
mov
xchg
test
lahf
sbb
xor
inc
sub
and
stos
dec
xchg
dec
lret
rcr
and
xrelease
pop
call
xchg
insl
jl
add
test
mov
in
mov
dec
loop
mov
sbb
xchg
pop
cmp
jmp
push
js
ret
je
add
cs
adc
lret
int
jbe
mov
pandn
jg
aam
and
and
mov
fdiv
mov
into
cli
fistpll
les
jno
out
jo
addl
dec
xchg
xchg
rol
pop
fistps
out
inc
jl
push
jo
jae
icebp
movb
mov
or
repz
loopne
xorl
stos
pushf
in
mov
adc
xchg
push
cmpb
xor
fmul
jnp
sub
in
movsl
movsb
ret
pop
mov
inc
push
stc
std
adc
cmp
lea
fisttpll
jo
sbb
test
popa
pop
stc
inc
dec
imul
jb
push
mov
lods
and
test
mov
jno
int
sbb
mov
hlt
dec
xchg
and
mull
hlt
lods
hlt
or
xchg
add
mov
xchg
and
mov
out
frstor
in
arpl
inc
in
pop
push
mov
test
add
and
mov
xchg
enter
sub
loop
adc
lcall
cmp
cmpsl
popf
dec
adc
lret
jnp
or
jg
in
pop
arpl
mov
hlt
shlb
cltd
mov
xchg
or
lcall
mov
idivl
pop
enter
decb
stos
inc
in
xorb
adc
mov
adc
xchg
mov
out
fcmovb
push
mov
push
stc
shlb
lods
rcll
data16
jnp
repnz
mov
cmp
add
cmp
aaa
insl
in
loopne
jl
xchg
or
jae
sbb
mov
cmpsl
sahf
enter
add
arpl
inc
mov
sub
loopne
jne
jne
roll
ret
cmp
leave
xor
xchg
cmpsb
fcomp
jmp
jo,pn
insb
into
push
dec
xchg
insl
cmpsl
mov
stos
add
sbb
mov
cmc
mov
cmp
inc
aaa
inc
push
shlb
adc
add
push
imul
push
sbb
pop
stc
push
xor
jae
jne
fmull
fstpl
in
in
push
dec
addr16
sbb
jp
int3
inc
pushf
jecxz
das
cmp
sub
pop
out
ud1
push
sub
aam
mov
dec
inc
ljmp
mov
sbb
out
and
mov
jno
bnd
xor
dec
xor
mov
jnp
or
mov
jg
or
pop
es
pop
or
insb
cld
sub
lret
rep
add
aaa
loop
ds
push
stos
sahf
std
clc
sbb
insl
sbb
adc
out
pop
sbb
xchg
sahf
push
mov
push
loope
mov
adc
push
stos
jb
and
mov
inc
xchg
stc
push
inc
push
push
call
add
ja
jg
fchs
add
cmp
fwait
imul
cmp
push
ret
fistl
aaa
bnd
mov
add
or
pop
cmpsb
fstpt
and
arpl
sub
xor
xor
xor
imul
mov
mov
scas
mov
inc
cmp
pop
shl
fwait
inc
inc
push
jo
cmc
fmul
popf
xchg
inc
dec
push
mov
and
dec
add
mov
or
push
dec
fnstcw
sti
push
mov
rol
out
imul
mov
add
push
xchg
hlt
jecxz
fidivrs
jmp
xchg
pop
ja
jnp
jge
xlat
or
clc
in
dec
lahf
sub
sbb
scas
jbe
or
mov
iret
lods
mov
mov
adc
mov
vmwrite
cwtl
call
jnp
dec
pop
fnstsw
repz
xor
out
ror
jne
xor
jecxz
cmp
mov
dec
dec
sbb
repz
push
push
mov
dec
jg
dec
divb
test
and
xchg
or
fwait
jae
jno
adcl
arpl
mov
jno
or
mov
xor
xchg
pop
xchg
mov
lea
xchg
push
lods
push
xchg
pop
lahf
lock
dec
mov
inc
mov
xchg
lds
xlat
lahf
pop
sti
je
cltd
pop
aam
pop
dec
pop
fidivl
repnz
sbb
mov
ljmp
mov
dec
popa
inc
push
cmpsb
outsb
fldl
test
add
test
scas
fisttpll
in
jae
stos
xchg
leave
and
add
out
adc
dec
jns
jb
les
cmp
ret
pop
inc
popa
jl
mov
shll
rclb
sahf
mov
imul
jp
call
imul
out
push
mov
jp
push
sti
mov
loope
js
pushf
push
cmpsb
add
pop
mov
repz
insb
sbb
in
mov
js
in
add
xchg
lods
incb
aas
pushf
or
push
adc
decb
mov
add
and
dec
sahf
in
out
add
test
sub
push
dec
sub
or
test
push
cs
js
adc
xor
jae
xchg
sarb
mov
aad
mov
lea
jg
pop
loope
jp
call
or
sub
jno
jb
or
xor
cmp
aaa
inc
cli
mov
mov
rcll
lea
sbb
ss
dec
mov
gs
int
add
sbb
xchg
adc
pop
stos
xor
xchg
and
push
es
cmp
lods
int
push
or
push
testb
mov
and
aas
ja
dec
in
in
jmp
fdivr
fidivl
push
push
jl
out
hlt
xor
test
or
mov
mov
add
adc
and
gs
sub
and
popa
scas
pop
mov
xor
mov
pop
sub
stos
lret
movsl
mov
pop
cwtl
sub
push
sbb
in
ljmp
mov
or
jg
adc
es
push
inc
popa
sbb
call
adc
xor
push
ret
inc
xchg
push
insb
inc
cmpl
jp
xor
cmp
push
popa
adc
push
out
sub
sbb
jns
imul
fdivrp
ss
push
jl
xchg
out
mov
insl
iret
icebp
outsb
jecxz
test
adc
and
ljmp
fistpll
int
jbe
incb
popf
xchg
in
sub
mov
repnz
add
fisubl
or
aam
data16
mov
jp,pn
cmpsb
test
cltd
xchg
push
mov
sub
repnz
int3
sub
mov
int
pop
mov
fbstp
dec
xchg
shll
outsl
das
cld
pusha
ret
call
cmp
outsb
xchg
mov
sub
insl
push
ja
mov
movups
sub
adc
repnz
fisubl
xchg
cmp
adc
int
xchg
lcall
jns
inc
sbb
cmc
pop
add
aas
addl
and
sbbl
cmpsb
mov
rcll
or
mov
out
xor
pop
les
jno
fists
insb
loope
out
movsl
cmp
add
sbbl
and
jmp
inc
icebp
mov
push
cmpsb
pop
adc
mov
mov
fimull
out
pop
jl
addr16
sbb
xor
mov
imul
mov
xchg
xchg
scas
test
jne
leave
pop
cmp
out
int
dec
cmpsb
or
scas
sub
call
xchg
bound
lea
mov
add
test
adc
sbb
test
sbb
cli
pusha
adc
or
rclb
cmp
aam
pop
lds
mov
adc
xor
mov
add
out
add
movsl
sti
sub
cmpsl
push
xchg
push
js
add
jnp
pushf
dec
jl
mov
pop
inc
movsl
minps
cltd
xchg
movsl
aam
and
std
jecxz
pop
pop
lret
jnp
sub
mov
add
or
cmovo
inc
popf
xchg
addb
xlat
hlt
shrb
push
addb
xlat
dec
fbstp
scas
int
cltd
ds
push
adc
push
push
movsl
ljmp
sub
pop
mov
ret
pop
or
decl
inc
sbb
lea
pop
xor
inc
pop
in
loop
sub
push
fs
cmc
and
repnz
and
pop
xchg
out
sub
insl
xchg
loope
xor
fs
xor
sbb
fstpt
fwait
sub
cmp
in
xchg
jbe
xchg
rcrb
push
mov
or
aam
rorl
pop
sub
cmp
xchg
jo
fcompl
stos
or
rcl
outsl
int
pushf
pop
xor
xlat
xor
ja
js
inc
sub
mov
mov
push
pushf
and
jne
pushw
cld
push
xchg
fildl
jnp
in
bnd
push
lods
mov
les
aas
cmp
jnp
das
fcmovne
dec
and
lods
repz
outsb
gs
movsl
std
jo
xor
jle
out
mov
jecxz
cs
jb
loope
pop
clc
lret
lds
je
add
sub
outsl
orl
dec
loop
sbb
ret
int3
hlt
push
cmp
xor
stos
in
loope
shlb
push
shll
pop
adc
jmp
lahf
cld
addr16
cld
pop
addr16
push
repz
add
rcrl
push
subl
push
inc
push
push
or
pop
cmp
minps
bound
sahf
ret
fiadds
push
sbb
sbb
int3
jl
stos
data16
insb
je
arpl
daa
mov
sbb
push
mov
cmp
xor
pop
jle
jno
sub
inc
sbb
inc
cmp
leave
xor
stc
pop
div
je
in
dec
hlt
dec
mov
add
add
lds
inc
pop
sbb
pop
cmpsl
xlat
or
push
dec
cmp
push
dec
int3
mov
cmp
pop
pop
jle
xchg
inc
dec
xor
adc
sub
int3
adc
mov
mov
negb
out
rol
call
cmp
dec
leave
cmp
pop
movsl
lds
mov
hlt
cmpb
ss
cmp
cmp
pop
jb
shrb
je
incl
inc
out
dec
sbb
lock
cltd
pop
sub
mov
pop
mov
aad
mov
push
and
popa
cmc
pop
and
addr16
pop
mov
jl
in
dec
shl
add
or
xchg
pause
xchg
js
fdivrl
push
or
outsb
icebp
or
ds
nop
int3
fists
cmp
aad
jbe
inc
popf
bound
fimuls
mov
mov
add
idiv
sbb
xchg
ret
xchg
bound
popa
ret
outsb
cwtl
pusha
call
mov
sarl
xor
rcr
xor
or
xchg
pop
push
push
inc
fisubrs
jge
and
jno
xor
sbb
cmp
push
dec
popf
movsl
faddp
cld
das
or
ficoml
xchg
notb
sbb
addr16
fadds
sahf
jne
ja
pmuludq
in
adcb
mov
mov
lahf
and
adc
mov
and
mov
call
and
or
xchg
das
sub
fnstsw
js
xlat
fmull
xchg
icebp
xor
mov
inc
xchg
aas
push
enter
xor
dec
sahf
rcll
andl
hlt
js
add
or
loop
push
mov
jne
xor
not
cmpb
inc
xchg
sbb
push
jg
mov
inc
sub
aam
ret
lock
icebp
xlat
mov
pop
jmp
dec
repz
add
insl
inc
and
push
dec
push
hlt
push
outsb
or
clc
mov
into
popl
xchg
cltd
jle
movsl
xchg
ss
pop
xchg
mov
push
mov
mov
fdivr
hlt
push
aas
and
adc
stc
jae
or
mov
lock
fstl
cmpsl
mov
es
sub
xor
hlt
fidivs
cld
cmpsl
pop
mov
pop
mov
scas
ja
mov
adc
add
or
repz
sub
xchg
pop
addl
and
enter
shll
fidivrs
outsl
inc
stos
clc
adc
mov
mov
sbb
push
dec
mov
mov
rolb
out
and
xchg
mov
jbe
cld
rorb
inc
jmp
cltd
or
std
je
sahf
shlb
int3
out
in
fidivrl
test
push
mov
jge
mov
push
popa
outsb
xor
call
mov
stos
push
push
ds
das
sbb
in
cmpsb
imul
xor
pop
lahf
ja
jbe
cmp
movsb
xchg
lcall
leave
cmp
adc
in
mov
dec
fsubrl
or
adc
adc
add
mov
inc
push
mov
leave
das
push
movsl
jmp
adc
fisubs
fcmovne
movsl
ret
sbb
mov
or
jnp
adc
aam
push
jnp
jge
and
cmp
mov
pop
inc
add
and
jbe
xchg
movsl
sub
xor
push
mov
mov
adc
sbb
cmp
incl
dec
or
adc
std
dec
insl
xor
jnp
test
lret
cmpb
shr
div
sbb
add
jecxz
sbb
mov
loop
ds
push
mov
jecxz
jge,pt
xchg
add
mov
mov
and
es
adc
xchg
js
fdiv
push
fwait
add
pop
mov
mov
add
ds
xchg
xor
pop
dec
and
imull
lods
mov
out
fwait
loopne
push
aam
push
pop
rcr
cmp
pop
and
insb
imull
push
inc
out
cltd
das
cmp
or
pop
bound
mov
or
in
scas
ss
je
dec
outsb
cmp
testl
xchg
mov
jno
push
jecxz
mov
stos
mov
push
enter
jns
pop
dec
jecxz
mov
sbb
xor
popf
sahf
fs
icebp
aad
inc
clc
cld
xchg
xchg
loopne
mov
fistl
push
loopne
cmp
leave
cltd
jmp
push
push
bound
dec
xchg
fsubl
aam
jg
mov
pop
cmpsl
es
mov
adc
or
pop
andl
sub
inc
test
xchg
jnp
fnstcw
mov
mov
clc
sub
daa
xor
mov
jns
int3
inc
jno
cld
cltd
xor
push
sub
clc
lret
lock
mov
adcl
sub
sbb
inc
adc
push
and
xchg
lcall
lock
push
jno
adc
sub
push
xchg
mov
sbb
xchg
rcl
mov
push
pushf
sub
xchg
or
and
push
mov
pop
js
mov
jns
bound
or
nop
mov
xchg
lods
test
std
mov
cmpsl
test
and
jl
inc
imulb
hlt
mov
int
or
jbe
mov
test
cmp
sahf
or
decl
jb
push
rolb
push
push
push
jns
push
aas
and
lret
cmpsl
mov
mov
mov
pushf
in
jg
aam
adc
cli
jne
jne
adc
jns
cltd
rcr
mov
xor
push
stos
mov
out
loope
andl
add
out
inc
and
sbb
sbb
icebp
adcb
mov
and
repz
lahf
stc
test
xchg
sbb
out
push
and
mov
xchg
push
std
mov
or
adc
call
data16
ret
mov
jecxz
arpl
lea
nop
add
mov
int
jne
fstpl
out
dec
jg
test
gs
out
insl
inc
inc
adc
dec
mov
movsl
test
add
push
in
inc
sbb
cmpsb
call
lcall
lahf
bound
in
sbb
sahf
dec
mov
push
push
push
and
stos
pop
aaa
clc
and
imul
dec
jmp
jo
rorb
cmpsb
ljmp
sarb
mov
cli
xchg
jb
shrb
jp
stos
shlb
fimull
sbb
in
fsub
test
sahf
dec
push
loope
and
xchg
leave
cmp
out
rolb
jp
lods
push
adc
mov
std
out
mov
sahf
clc
jbe,pn
enter
cmp
das
in
mov
xlat
arpl
stos
test
imul
es
xor
push
mov
add
sbb
mov
fisubrl
or
rclb
xor
movsl
nop
cmpsb
adc
pop
idiv
inc
xchg
and
xchg
out
cld
inc
push
jg
subl
mov
test
pminsw
dec
cmp
repz
inc
xor
testb
mov
push
dec
lret
adc
pusha
xchg
aas
add
push
push
jb
inc
add
pop
and
movsb
xorb
xor
sub
insw
dec
imull
push
xchg
mov
add
xchg
push
insb
mov
call
mov
test
icebp
xlat
leave
push
js
cmc
arpl
inc
push
stos
push
fcmovu
dec
sbb
out
xor
xchg
loopne
or
mov
sti
roll
mov
stc
xchg
mov
frndint
sub
fistps
test
xchg
or
adc
add
push
push
leave
push
das
xchg
movsb
push
sarb
fldcw
and
push
ljmp
imul
testb
mov
shlb
js
int3
ret
movsb
sub
test
pop
cmpl
mov
mov
and
shrb
lods
ficoml
das
addr16
push
lea
xchg
pushf
push
push
push
lock
leave
sbb
aas
and
adc
pop
mov
jae
insl
dec
cmp
fstpl
shr
pusha
dec
pop
data16
sbb
fimuls
ja
cmpsl
adc
sub
xchg
testb
add
fnstsw
arpl
xor
inc
popf
dec
push
jge
divl
or
mov
or
bound
sub
ss
js
adc
and
xor
xchg
sbb
lret
lret
sbb
aad
fisubs
xchg
add
ret
xor
fisubs
orl
pop
loope
dec
mov
adc
sti
and
lock
xlat
shll
cmp
setne
jo
int3
adc
jae
ljmp
dec
fwait
lods
inc
cld
xor
cmp
out
icebp
rclb
add
subl
jmp
loop
and
jg
lds
cmp
push
fcoml
push
test
aam
mov
mov
mov
push
aas
ss
dec
lret
add
scas
das
shlb
sub
sub
pop
hlt
fwait
push
lods
imul
inc
mov
jmp
xchg
lea
aam
loopne
outsl
lret
jnp
cmp
and
daa
ret
es
cmpb
jle
and
es
xor
xchg
mov
lods
neg
out
cmpsb
in
adc
out
cmc
fldcw
mov
es
mov
hlt
dec
jns
movsb
mov
jae
push
lret
sbb
outsl
in
add
das
loopne
jg
jp
mov
pushf
adc
mov
loope
repz
in
xor
jg
into
ljmp
insl
jbe
jge
add
ret
in
popa
aad
mov
shrb
mov
int3
testb
mov
or
xor
out
inc
daa
mov
int3
loope
mov
das
popf
mov
or
sbb
or
jg
or
mov
mov
pop
psrlq
fisubrs
cli
mov
push
testl
mov
jne
insb
cld
lods
scas
test
xor
sub
ffreep
mov
jmp
sbb
movsb
xchg
orl
stos
mov
insb
jmp
stc
rorb
aaa
pop
xchg
scas
in
aaa
mov
ds
in
cmp
mov
mov
stos
mov
inc
fbstp
stc
mov
outsb
cmp
pop
adc
or
ja
inc
addb
xor
jecxz
cmc
lcall
inc
fwait
icebp
pop
jnp
data16
incb
mov
mov
cmp
fisttpl
jl
mov
leave
adc
mov
inc
xchg
jle
cmp
or
sti
cmc
mov
xchg
pop
lret
xchg
icebp
dec
xor
dec
xchg
pop
xchg
jle
inc
iret
lret
xor
xchg
call
out
mov
jl
pop
imul
jns
lods
sbb
test
inc
inc
dec
negl
mov
je
ss
adc
fiaddl
cwtl
cmp
sti
push
sub
hlt
pop
js
cmpsl
xor
cld
mov
jno
sti
mov
mov
test
inc
fdivrl
call
iret
lods
sub
imul
addr16
add
dec
arpl
push
or
ds
mov
jp
mov
xor
xor
push
or
or
arpl
inc
and
lods
stos
imull
mov
cmp
sbb
inc
lea
xchg
cld
mov
cmp
repnz
push
jns
or
incb
mov
jl
aas
xchg
adc
mov
and
inc
xchg
call
test
into
adc
dec
inc
test
shrl
inc
sbb
pop
imul
pusha
and
and
in
bound
int3
dec
jl
xchg
mov
fdivr
mov
insl
lret
or
xchg
lret
imul
jne
enter
iret
xchg
add
scas
mov
sbb
scas
lods
push
lahf
push
mov
or
mov
ret
movsl
call
dec
mov
jnp
rcl
pop
movsl
leave
pop
inc
push
jmp
push
dec
push
fisubrl
loop
push
pop
push
xchg
xchg
addb
cmpsb
int
js
jnp
sahf
subb
lret
mov
jae
fwait
incl
xor
hlt
pop
cmp
jns
add
insl
cmp
xlat
int3
clc
flds
cwtl
mov
nop
jnp
aad
inc
pop
adc
nop
pusha
aam
add
pop
out
icebp
add
push
adc
aam
ja
mov
add
inc
sub
dec
or
or
mov
mov
ficoml
loope
jbe
ss
ss
les
out
mov
clc
in
xor
nop
icebp
insb
ss
jne
jecxz
call
loopne
mov
pop
cmc
mov
add
inc
jg
jne
sub
add
push
adc
cld
inc
incl
shlb
inc
lock
incb
add
mov
stos
sub
fldcw
xchg
dec
mov
aaa
mov
xchg
jae
push
push
jp
pop
rorb
lock
mov
scas
into
push
repnz
lahf
xchg
mov
nop
push
fdivl
cmpsb
pop
mov
sbb
aam
jo
dec
xchg
jge
adc
cmpsb
fwait
rcl
popa
insl
cli
add
or
xorl
aad
push
xchg
push
shrb
cmp
mov
dec
xlat
xor
movsb
sub
gs
dec
call
cwtl
sti
and
sub
in
adc
aad
fbstp
or
mov
push
push
add
int
adc
imul
push
xchg
lea
cmpsl
ja
push
push
mov
and
test
scas
add
dec
xor
cmp
pop
adc
clc
fstpl
add
or
adc
cmp
and
jecxz
xchg
dec
mov
sub
mov
xchg
cld
push
mov
adc
rcl
inc
ja
adc
nop
dec
lret
lods
jb
repnz
inc
movsb
mov
sbb
xchg
jmp
outsl
gs
repz
jp
xor
arpl
in
lea
enter
push
mov
inc
into
jb
cmp
ljmp
xor
or
cli
insl
leave
out
xchg
and
nop
pop
xchg
sub
xor
cwtl
mov
mov
pop
pushf
mov
lea
push
enter
mov
mov
add
aas
jg
add
xchg
or
xor
xchg
repz
inc
push
mov
stos
std
es
push
or
mov
cmp
pop
shr
jnp
call
and
popf
xchg
mov
jmp
mov
or
pop
mov
ss
xlat
sbb
jmp
mov
mov
in
movl
mov
mov
sub
jb
enter
test
dec
jae
out
dec
inc
pop
iret
jbe
cmp
rcll
jle
les
cmp
imul
push
mov
add
aaa
out
dec
jmp
jnp
or
fbld
das
jg
inc
xor
add
add
xor
inc
xor
stos
cvtps2pi
mov
xchg
das
arpl
pop
outsl
ret
cmp
adc
leave
jnp
and
or
adc
mov
into
mov
lret
xor
dec
popf
pop
inc
xchg
sbb
cmpsl
xchg
jnp
sub
jb
and
mov
lcall
mov
imul
cld
ja
dec
pop
jmp
inc
sub
dec
mov
test
and
xchg
inc
sahf
adc
mov
sub
xchg
jbe
out
ficompl
cltd
stos
or
jo
cmc
pop
push
mov
push
pop
aad
pop
cwtl
mov
je
cmp
loope
xor
les
outsl
imul
push
sbb
sub
and
shlb
fsub
adc
xchg
push
shrl
add
mov
push
movsl
popa
repz
cmc
pop
movsb
mov
lea
pop
cmc
or
aad
leave
ljmp
movsb
jne
and
adc
add
pop
mov
scas
imul
add
inc
fwait
inc
repz
mov
add
loop
test
out
xchg
xchg
inc
movsl
dec
sarl
pop
inc
xor
fdivrl
loopne
jns
dec
loope
pop
push
sub
mov
dec
ss
sbb
dec
das
lods
cwtl
push
dec
test
or
in
cld
iret
push
inc
jnp
mov
cmpsb
push
xchg
xor
mov
sbb
xchg
add
and
xchg
mov
xchg
test
jns
and
sub
pusha
pop
jge
inc
nop
cwtl
into
sbb
bound
cmp
push
or
repz
insb
loopne
dec
pop
lret
xchg
mov
loop
pop
jnp
cmp
aad
js
cmp
push
jnp
inc
cmp
ret
les
jae
adc
pop
decl
inc
xor
inc
outsb
stos
push
pushf
add
add
rcr
scas
fdivr
fs
sbb
test
inc
adc
mov
lods
ss
mov
cmpb
dec
xchg
push
adcb
sbb
jbe
pop
inc
rcrb
mov
scas
mov
mov
add
in
nop
ljmp
icebp
xchg
fdivs
mov
shll
dec
scas
insl
xchg
pusha
xchg
cmpsl
xchg
das
cmp
loop
cli
mov
imul
mov
inc
and
mov
and
dec
push
aaa
daa
xchg
pop
aaa
loop
sbb
lds
push
pop
out
mov
mov
mov
pop
adc
movsl
xor
dec
pop
xor
push
and
inc
xlat
xlat
sbb
insl
arpl
gs
or
mov
sahf
testb
hlt
jg
repz
dec
mov
je
adc
fs
xor
add
xchg
ljmp
xchg
push
sub
inc
dec
push
ds
mov
pop
sub
sbb
test
andl
setg
sub
jbe
popf
int3
sub
aad
push
je
imulb
xchg
push
adc
inc
xchg
mov
in
pop
arpl
add
test
and
sbb
mov
xchg
xor
dec
xor
lret
xchg
icebp
jl
and
adc
subl
pop
stc
cmp
xor
mov
arpl
in
inc
fdivs
push
dec
xor
imul
push
dec
je
push
inc
push
ret
std
test
push
lods
dec
jmp
fiaddl
loopne
lret
shlb
mov
push
xor
mov
sbb
cmp
iret
mov
and
mov
aas
dec
pop
push
mov
sub
mov
adcl
jge
cmpsl
insl
or
push
jg
in
and
jbe
push
cs
sbbl
mov
sbb
fsub
lods
lods
mov
cmp
dec
jns
pop
ficompl
push
push
lret
sub
lahf
xchg
aaa
xor
jne
addl
insb
into
jecxz
insl
lea
mov
cs
fisttpl
cmp
mov
jnp
push
mov
mov
cltd
rolb
cltd
push
scas
inc
jecxz
arpl
mov
in
mov
dec
mov
out
mov
lods
cmp
clc
mov
xchg
cmpsb
and
lock
fsubrl
pop
pop
loopne
into
and
mov
sbb
cltd
xchg
out
inc
xchg
add
into
ljmp
fld
movsl
stos
aas
roll
jecxz
xor
lock
outsl
insb
jb
movsb
mov
rcll
in
xlat
test
cwtl
push
aam
lahf
dec
stos
push
xor
in
jae
ror
cwtl
ss
test
ret
adc
inc
aaa
aad
sub
cmp
inc
xchg
in
add
imul
jl
and
mov
sbb
and
lods
sarl
xchg
jbe
sub
scas
rcrb
gs
mov
pop
inc
push
movsb
or
inc
sti
sub
pop
pop
in
filds
sub
sbb
lods
sub
push
pop
inc
cmp
or
cwtl
fnsave
jl
test
dec
aaa
nop
cmp
pop
sub
lcall
sbb
or
mov
roll
pop
popa
xchg
sbb
cmp
mov
xchg
sbb
in
jno
push
fs
sbb
pop
mov
mov
xchg
sbb
insl
or
dec
out
sti
es
push
pop
bound
icebp
push
imul
mov
enter
push
iret
repnz
gs
mov
mov
inc
in
fnstsw
sti
jb
in
test
mov
ds
loop
stos
cmpsb
mov
cmpb
testb
jp,pn
pop
jb
in
add
cmp
stos
das
pop
dec
mov
insl
fiadds
mov
loope
clc
xor
pushl
imul
sbb
sub
out
test
sub
sbb
ljmp
mov
neg
pop
push
cmc
mov
cwtl
push
stos
and
xor
pushf
pop
loope
sarb
repz
shrb
and
aas
adc
loope
push
mov
xchg
out
xchg
aas
out
mov
jnp
inc
lds
pop
xchg
prefetch
js
aas
cmp
mov
into
sbb
add
push
push
mov
mov
dec
xlat
cld
out
sti
repz
add
movsb
pop
fistpll
jns
in
fistpl
dec
sbb
in
shrl
push
je
push
xchg
mov
out
sbb
popf
ret
hlt
ror
ret
loop
insl
push
iret
scas
lds
dec
and
loope
pop
scas
cmp
mov
xchg
scas
sarl
std
fld
dec
dec
add
inc
mov
jbe
out
jl
stos
jmp
bound
mov
adc
cmp
popf
loopne
dec
fisubrs
in
sar
imul
dec
pop
decl
add
dec
cld
pop
mov
mov
push
mov
inc
fs
dec
xchg
fmull
bound
sti
movsl
pop
jne
adc
out
rcl
push
cmp
scas
pop
sbbl
mov
mov
xorl
clc
cmp
add
es
cmc
push
cmp
mov
mov
ret
pop
out
in
repnz
rcrb
add
push
lock
scas
jl
test
inc
sbb
enter
inc
xchg
mov
sub
add
out
fcmovbe
lcall
cmp
pop
jne
and
mov
dec
jae
xchg
jmp
ja
dec
sub
xchg
addr16
ret
mov
xchg
jg
xchg
push
xor
add
rcl
imul
and
fwait
imul
mov
jl
add
xor
cmpsb
subl
movsl
aas
pop
mov
xor
adc
mov
or
lcall
aas
enter
xor
test
pop
mov
sub
jg
sub
or
inc
and
and
push
and
xchg
mov
push
loope
inc
lds
xor
lret
push
lods
xchg
cmp
add
pop
sub
lcall
pop
xchg
js
xchg
cs
pop
mov
or
popa
icebp
mov
test
jecxz
dec
push
jl
jnp
test
dec
loope
xlat
mov
push
in
cmpl
pop
pop
mov
pop
mov
mov
int
sbb
ds
popf
sti
inc
lahf
jg
xchg
mov
nop
mov
popa
outsb
and
nop
aas
jb
jns
cs
xchg
loopne
xor
jp
lret
loope
adc
inc
inc
mov
or
faddp
stos
mov
or
cmpsl
jmp
push
or
add
or
mov
push
cmp
adc
out
out
lods
aad
push
aas
jnp
push
adc
rcll
cmp
push
dec
iret
fwait
stos
mov
xor
clc
daa
cmpsl
push
ret
stos
aam
stc
loopne
inc
xor
jb
adc
push
push
xor
jg
or
stc
jnp
jno
jb
loop
mov
sbb
add
loope
test
pop
hlt
push
or
rolb
pop
imul
test
ja
dec
out
outsb
inc
cmp
cltd
add
out
xor
stc
push
outsb
pop
xor
rcrb
mov
add
cmp
xor
lods
and
or
inc
mov
jae
push
es
sbb
xor
imul
mov
sub
xchg
push
rcrl
rorb
mov
fwait
movsb
scas
lcall
and
inc
mov
xlat
dec
bound
jg
popa
jbe
sbb
shll
sbb
xor
cmp
xchg
jmp
test
xchg
and
cmp
shr
xchg
push
mov
pop
lods
stc
test
test
repz
pusha
les
or
dec
loop
mov
jle
test
stc
cli
sub
sbb
jb
into
data16
mov
fwait
dec
mov
jg
aaa
adc
add
pusha
adc
out
jmp
and
call
inc
jns
sbb
add
add
pmullw
into
scas
dec
push
xchg
sti
cmp
das
mov
mov
inc
ljmp
enter
inc
hlt
push
aas
jecxz
cmpsb
shll
push
pop
jp
push
push
dec
sbb
imul
clc
sub
clc
jp
out
arpl
pop
fs
mov
xchg
fwait
add
fs
sub
test
scas
call
mov
fistl
shlb
inc
jg
cmp
xchg
insb
push
popf
mov
imul
xchg
mov
in
ljmp
stc
adc
mov
cmp
xlat
fwait
dec
and
and
sti
jnp
jmp
inc
mov
pop
sub
jecxz
dec
std
cmpsl
cli
fcomp
out
test
jmp
es
push
outsl
mov
test
or
les
pop
ss
add
bound
add
push
xlat
iret
bound
mov
ss
bswap
add
mov
pop
int3
int
lahf
lods
gs
mov
mov
cmpsl
mov
mov
out
lea
inc
pop
push
inc
inc
and
lcall
adc
mov
int3
dec
mov
xchg
outsl
mov
xor
xchg
jecxz
cmp
push
lahf
inc
sub
in
push
aas
arpl
mov
clc
inc
adc
mov
shlb
add
inc
aaa
arpl
je
test
loopne
sub
insb
aaa
add
push
in
pop
out
insl
jge
mov
jne
mov
test
adc
fldenv
mov
test
sub
cld
mov
fs
dec
lahf
xchg
insl
sub
inc
test
or
sub
jns
std
add
loope
mov
cwtl
adc
mov
dec
ss
int
pop
in
and
lea
iret
pop
inc
pop
shl
adcb
inc
cld
mov
btr
std
lahf
cmp
push
add
outsl
inc
jle
mulb
mov
stc
je
mov
popa
mov
es
leave
sbb
pop
es
iret
dec
fwait
les
negl
gs
test
jmp
test
sub
hlt
lret
add
and
ljmp
push
and
dec
rolb
pop
jmp
iret
or
pop
pavgw
sub
movsl
cmpsb
mov
ss
cwtl
pop
in
movsb
daa
pop
pop
stos
pop
xor
push
pop
cli
mov
rcrl
mov
add
cld
cmp
adc
sbb
jp
pop
xchg
clc
lds
and
adc
lds
xor
mov
mov
fwait
push
mov
loope
cli
out
adc
lea
dec
sarl
lock
and
js
mov
push
lahf
and
fiadds
lahf
arpl
xchg
jb
or
inc
mov
and
sbb
mov
push
xor
mov
jle
dec
sahf
adc
mov
mov
push
outsl
nop
lcall
cs
imul
enter
jnp
adc
push
cmp
and
orb
inc
repz
mov
add
popa
clc
dec
or
loop
popa
aad
popf
push
adc
mov
dec
fwait
pusha
fisubl
insl
xchg
cli
jmp
lcall
fwait
js,pt
cld
add
add
ja
adc
xor
pop
sbb
imulb
sbb
sub
push
in
adc
mov
pop
mov
mov
orb
leave
into
push
fnstenv
push
rol
push
daa
dec
mov
fnstenv
cwtl
sub
dec
out
jecxz,pt
movsl
cmpsl
fdivs
pop
decl
movsl
inc
and
mov
sub
js
jnp
or
push
jo
push
add
pop
pop
nop
pop
je
push
sbb
insb
cmpsb
adc
div
pusha
mov
mov
scas
insl
mov
push
xchg
mov
mov
inc
daa
mov
add
cli
sub
dec
dec
cld
shll
or
cmpsl
add
inc
stos
ljmp
pop
movsl
lahf
mov
cwtl
popa
mov
jl
cltd
sub
cld
ss
pusha
pop
shl
je
orb
popf
popa
loopne
and
push
xchg
cmp
xor
insb
iret
data16
jno
lcall
pop
mov
adc
xor
mov
bts
decl
inc
or
add
outsl
mov
push
inc
hlt
movsb
dec
xchg
repz
and
cli
lea
mov
arpl
xor
xor
jl
int
hlt
lahf
inc
in
add
adc
adcb
fwait
test
pop
push
jbe
add
push
ja
inc
ficomps
mov
mov
dec
jmp
outsl
mov
sbbl
dec
mov
ret
mov
add
ret
dec
mov
call
dec
inc
or
scas
push
in
push
cli
jno
xchg
mov
push
or
dec
loope
jp
iret
mov
negb
cmp
pop
dec
jns
jnp
cwtl
xchg
sub
sub
js
push
cld
pop
xchg
aad
arpl
add
xlat
in
cmp
test
sub
pop
movsb
fs
fnstcw
in
hlt
xlat
sub
pop
xchg
repz
xchg
or
mov
aas
and
or
es
outsb
aad
lock
popf
adcb
cmpsl
icebp
inc
or
fdivr
mov
xor
pop
iret
sbb
or
xor
cmp
pop
inc
cli
mov
scas
loop
mov
enter
or
inc
dec
imul
dec
out
in
cmpsb
test
pop
cmp
stc
xor
push
sbb
pop
dec
xchg
sbb
adc
mov
mov
or
std
loope
ds
icebp
fstl
adc
scas
sub
mov
or
movsb
aad
out
loope
rcll
fisttpll
mov
xchg
or
fbstp
out
or
subl
stos
mov
sub
mov
push
adc
add
out
lds
push
mov
movsl
jmp
mov
popa
subl
repz
pushf
sub
or
or
inc
mov
hlt
pusha
push
popa
mov
xchg
mov
jmp
and
sub
inc
lcall
push
adc
ljmp
sub
fmull
lahf
xchg
mov
dec
rcll
ret
std
lahf
add
cs
mov
daa
in
into
pop
jo
mov
mov
push
lods
jg
xor
ljmp
and
mov
mov
jae
cmp
jmp
mov
and
in
mov
and
lock
aaa
pop
arpl
add
imul
and
push
dec
dec
cwtl
dec
add
clc
lods
inc
sbb
std
pop
xchg
mov
xchg
cli
push
aaa
hlt
jl
in
mov
mov
subl
out
fdivs
lock
scas
testl
int
pop
rol
dec
jo
jmp
adc
aaa
cmp
fs
mov
and
or
lcall
mov
jnp
lret
mov
movsl
aaa
movsl
mov
shlb
mov
pushf
stos
outsl
fildl
sbbl
mov
cmp
in
lock
dec
sub
pop
subl
xchg
mov
jo
mov
mov
mov
sarb
add
cmp
div
data16
sbb
addr16
insb
push
popa
inc
inc
mov
or
imulb
mov
cmpl
cmp
je
fistl
xchg
cmp
fnstcw
ss
mov
sub
dec
dec
adc
add
jmp
sbb
fistpl
mov
movsl
clc
mov
gs
mov
outsl
call
lods
adc
cmp
mov
push
in
adc
inc
pop
dec
push
or
push
xchg
jnp
scas
cwtl
mov
stos
addr16
cmpsb
mov
cltd
fidivrs
pop
cmp
xor
call
test
mov
mov
jl
inc
pop
ret
add
mov
sub
call
in
mov
imul
sahf
es
fadds
pop
mov
lods
mov
xchg
and
call
and
nop
test
push
shll
gs
xchg
inc
adc
or
sti
or
loop
sti
xchg
testb
cmp
jge
sbb
jno
sub
inc
out
adc
ljmp
cmp
mov
in
daa
stc
in
stc
push
add
dec
cwtl
xchg
jns
in
xchg
insb
jne
fldt
fs
push
mov
xor
ret
cltd
xor
bnd
insb
stos
aaa
stc
aad
fstps
lods
mov
pop
test
call
mov
xor
add
inc
out
aas
pop
adc
dec
push
ret
mov
cmp
and
or
stos
pusha
mov
int3
movsl
pop
stos
inc
or
shrl
sub
negb
add
dec
test
push
sti
mov
or
adc
jae
xchg
outsl
je
iret
xchg
pop
out
xor
jecxz
test
or
cs
mov
aad
pop
push
enter
xchg
mov
push
push
pusha
dec
jle
movsl
push
popf
mov
xchg
inc
lods
mov
insb
jl
imul
in
call
xchg
lds
mov
stos
divl
jge
sti
std
in
lahf
repz
shll
sub
scas
mov
xor
xchg
mov
xchg
roll
in
inc
lret
dec
cmp
outsl
fnstenv
push
inc
js,pn
shl
mov
outsl
sub
lahf
xchg
cmp
xchg
push
daa
pop
fistl
or
push
add
ror
pop
add
lock
js
loopne
loop
inc
bound
ja
cld
mov
aas
add
call
idivb
jnp
test
push
or
push
inc
les
movsl
mov
dec
int3
test
lods
push
cli
outsl
push
and
out
popa
mov
sbb
push
sub
imul
add
stos
fldt
add
mov
mov
scas
push
outsb
mov
xorb
aas
pop
mov
fdivrl
movsl
hlt
xor
inc
aaa
fcmovne
push
cmp
xor
sbbl
or
jbe
pushf
and
xor
mov
jp
ljmp
dec
enter
xor
pop
imul
gs
jo
rcll
push
mov
repz
loop
inc
movsb
lahf
cmp
shrb
dec
rcl
pop
stc
inc
loopne
add
add
or
test
in
sub
ss
test
sbb
into
inc
nop
fdivrp
xchg
cwtl
push
mov
or
mov
fsubs
pusha
mov
push
inc
aas
sbb
jle
mov
lea
clc
jno
test
insl
add
lret
push
inc
iret
or
dec
dec
jg
push
cltd
mov
or
xchg
mov
add
incl
xchg
or
xor
inc
subl
mov
loop
test
les
mov
sbb
push
sub
jle
mov
shrb
pusha
push
cmpsb
add
inc
mov
jmp
push
fprem1
pop
jmp
movsl
andl
call
insl
mov
jns
in
test
adc
addr16
sbb
inc
push
cltd
or
arpl
ljmp
jecxz
das
loope
mov
test
lret
add
fstpt
inc
lods
aad
imul
cmp
cmp
and
hlt
cmp
add
add
scas
or
xor
clc
adc
scas
or
inc
pop
fsubrl
inc
daa
or
sbb
pusha
fwait
add
adc
inc
js
dec
bound
bound
testb
adc
jge
lock
jl
add
enter
cltd
and
pop
icebp
rcl
repz
hlt
dec
mov
pop
les
push
sahf
jl
dec
sub
push
cwtl
mov
mov
jae
add
fucomi
aad
mov
mov
test
push
push
les
push
hlt
les
mov
imul
push
jbe
and
and
mov
daa
in
jo
mov
and
sbb
rcrl
ljmp
add
adcl
cmpsl
xor
inc
jnp
es
imul
mov
shlb
out
sarb
loope
es
and
dec
jbe
mov
lret
push
cli
imulb
js
lahf
pop
push
mov
adc
sub
or
cmp
roll
mov
aad
fstpl
ret
ret
hlt
and
aaa
clc
pushf
test
mov
in
popa
xor
cmp
or
or
pushf
xor
ret
mov
cmpsl
movsl
dec
pop
sub
sub
lcall
stos
rolb
in
sbb
dec
sub
jge
sbb
dec
out
repnz
mov
mov
call
add
inc
xor
fwait
mov
inc
fldt
sbb
or
out
jbe,pt
fstps
fs
mov
outsb
fldt
jle
fistps
movsl
sub
popf
jp
lret
cli
mov
mov
or
inc
jae
shr
pop
pushf
in
mov
sub
jae
cmp
mov
pop
mov
or
xlat
les
and
popa
push
sub
in
or
loopne
out
push
inc
test
sub
cmc
mov
dec
outsl
inc
out
fcmove
dec
leave
jp
inc
mov
inc
inc
sti
xchg
lcall
loop
jmp
sarb
or
es
lahf
pushf
jle
pop
xor
dec
imul
pop
pop
jg
add
imul
popa
lcall
push
pop
int3
mov
test
or
and
jns
xor
aam
fwait
rolb
push
bound
jge
and
stc
punpckhdq
bound
sbb
mov
lahf
xchg
repnz
sarb
jl
lret
sub
inc
sbb
inc
insl
dec
mov
loopne
test
mov
or
mov
mov
jbe
and
pop
or
fwait
dec
cmp
jge
sti
sub
stos
mov
daa
pop
sarb
fsubl
lock
stos
int3
mov
sub
mov
addr16
push
add
jecxz
pusha
sarb
daa
cmp
into
dec
clc
mov
adcb
out
xor
push
cmpsl
xchg
jne
mov
and
inc
fnstenv
xchg
push
mov
sub
hlt
mov
mov
gs
into
jno
mov
pop
mov
std
pusha
pop
dec
scas
lahf
fisubrs
aas
add
in
xor
inc
daa
sbb
rsqrtps
clc
fwait
test
lods
push
iret
call
lds
rcl
mov
popa
jae
xchg
out
xchg
sub
jecxz
inc
pusha
or
scas
sub
pop
in
xor
and
or
adc
outsl
fs
mov
add
andl
or
xchg
icebp
xor
mov
adc
out
add
sbb
pop
jmp
push
or
sbb
aaa
sarb
js
lahf
ffreep
je
mov
cmpsl
xor
in
xchg
xor
sbb
mov
pop
out
call
fistl
pusha
xor
test
mov
or
stos
popa
test
sahf
or
dec
loope
xchg
mov
bndldx
rorl
dec
xor
fmull
adc
or
pop
xchg
push
mov
ret
mov
push
mov
xlat
fwait
xchg
mov
or
or
jns
inc
and
mov
test
rcll
hlt
push
inc
jp
ret
mov
jmp
je
jle
lahf
cmp
push
imul
xchg
add
popa
aad
mov
push
push
cld
cmp
push
adc
xchg
imul
add
dec
test
push
xor
call
pusha
sti
or
mov
xor
sbb
xor
clts
lret
push
xor
push
iret
mov
mov
popl
adc
or
jl
sbb
sbb
pop
xchg
in
out
xlat
cmp
jb
int
fldl
fcmovnb
cld
mov
jmp
xor
jno
fidivl
cmpsb
ljmp
pop
and
je,pt
cmp
inc
daa
cmc
js
push
clc
push
loopne
sub
nop
or
incl
xlat
negb
mov
popf
scas
sub
pop
out
lret
cs
cmp
scas
mov
testl
js
mov
and
xorb
punpckhbw
out
cmpsb
adc
hlt
push
mov
smsw
cmp
jno
test
cld
mov
outsl
shlb
sti
sub
inc
je
out
mov
stos
and
jbe
mov
xchg
sub
jmp
fwait
cmp
or
stos
cs
xor
repnz
scas
adc
push
movsb
pop
nop
cmpsl
dec
push
cmp
add
sub
divb
inc
loope
jmp
outsb
mov
into
adc
fistl
xchg
xor
sub
sbb
mov
dec
cld
std
push
es
mov
pushf
xor
cltd
popa
add
mov
pop
inc
jl
add
jo
nop
into
pop
sub
aaa
sbb
scas
dec
fistps
and
pop
movsb
stc
mov
inc
aam
mov
rcrl
jg
pop
inc
jle
cmc
imul
mov
jle
cmp
pop
pop
push
push
stos
add
push
in
jle
dec
inc
xor
cmpb
push
add
dec
xor
xchg
test
sbb
jns
adc
sbb
add
cmp
xchg
js
push
xor
cmp
in
adc
push
and
negl
sub
sub
aaa
iret
add
cmc
and
cmpsb
cmpsl
bound
or
test
pop
imul
movsl
push
in
cli
inc
pmulhuw
lret
sbb
jb
push
cmp
pusha
out
add
in
gs
or
sub
dec
mov
mov
cwtl
cmp
mov
cltd
inc
or
jecxz
dec
adc
cwtl
mov
mov
enter
xchg
out
xor
sarl
mov
jns
lahf
int3
adc
cwtl
inc
cmc
push
xchg
xchg
adc
sbb
mov
mov
nop
dec
fidivrl
out
imul
cli
aaa
ret
mov
mov
cli
ja
sub
pop
cs
stos
push
mov
xchg
scas
enter
mov
sub
repz
xor
cmp
inc
cmp
or
adc
cltd
mov
xchg
js
adc
add
mov
hlt
xchg
sbb
roll
adc
dec
jge
jmp
loop
iret
xchg
scas
or
mov
scas
stos
ret
fldt
jb
push
xor
mov
repz
in
cmpsb
xchg
mov
shrb
shlb
aaa
sbb
adc
gs
mov
mov
pop
inc
cmpl
mov
pop
pop
lret
hlt
ljmp
pop
pop
aaa
and
dec
sub
ja
adc
sbb
mov
dec
mov
jno
mov
mov
iret
mov
sbbb
add
and
push
pusha
jne
xchg
outsl
ret
or
xchg
jbe
je
xchg
test
mov
sarb
xchg
lret
shll
add
aaa
add
jmp
aad
inc
jp
dec
notl
sti
xor
lea
sub
adc
and
into
fdivrp
ret
js
xlat
inc
mov
and
mov
sbb
cmp
call
inc
loope
int
nop
mov
xchg
stos
push
push
mov
push
lods
arpl
jns
movsl
cmp
push
in
ds
add
pop
and
les
test
add
add
iret
adc
pop
pop
inc
sti
sahf
outsb
std
into
adc
daa
mov
cmp
pop
clc
pusha
xchg
jmp
ja
ret
fdivrp
mov
movsb
sub
adc
push
dec
inc
lcall
or
add
rcl
sbb
cld
mov
xor
lds
pop
out
ss
and
clc
xlat
clc
and
sub
lret
sub
movsb
fistpl
inc
sub
lret
fadds
mov
pop
sahf
cmpsl
mov
fidivrl
test
pop
inc
dec
mov
rol
or
xchg
add
dec
sbb
out
push
mov
push
xor
dec
or
flds
cld
and
cmpsb
stos
mov
push
mov
jl
icebp
and
pop
ror
lcall
insb
stos
imul
out
repnz
aaa
add
pop
adcl
mov
cmp
daa
sub
icebp
add
xchg
pop
daa
sub
loopne
and
dec
ret
outsl
xchg
or
mov
pop
aaa
mov
lret
iret
push
or
pop
jne
xor
inc
stos
fdivl
fwait
and
push
add
mov
xchg
jmp
mov
xor
mov
push
imul
ja
xor
icebp
dec
sbb
jns
mov
dec
add
push
mov
jne
jnp
hlt
pop
icebp
push
dec
rcll
xor
aaa
jle
jno
mov
insl
popa
lock
mov
add
imul
insb
inc
es
aaa
jno
rolb
mov
xor
lar
iret
pusha
and
dec
popa
sarl
cmp
in
mov
lret
jb
jg
mov
push
push
loopne
pop
pop
cld
rcl
mov
or
addr16
xor
sub
xor
roll
jnp
adc
mov
or
jl
test
cld
or
inc
mov
es
jnp
jmp
inc
push
adc
or
or
rcr
mov
push
adc
shlb
test
cltd
push
hlt
pop
mov
mov
test
dec
scas
add
mov
mov
or
add
popa
mov
push
add
imulb
fidivrl
ds
jae
pop
hlt
ljmp
jmp
pop
aaa
mov
pusha
aaa
fwait
inc
xchg
mull
dec
mov
aad
call
lret
out
fidivl
loop
gs
fdivl
fnstsw
mov
or
pushf
lea
sarb
cs
es
inc
lock
cld
cmc
outsl
stos
mov
in
mov
jns
add
xchg
dec
mov
pushf
xchg
xor
in
aas
jp
dec
add
sbb
pop
aas
icebp
inc
pop
mov
lds
rol
sub
mov
lret
mov
inc
lcall
jo
decb
mov
leave
mov
icebp
push
ds
popf
cwtl
cmpsl
add
sub
imul
dec
add
mov
mov
wbinvd
and
insl
pop
call
sbb
in
ja
sub
fwait
js
cmc
fs
push
int3
push
hlt
mov
xchg
xchg
inc
divl
adc
aaa
adc
enter
mov
call
inc
nop
pop
jmp
jge
outsl
push
sub
lret
push
lds
mov
or
movhps
test
mov
sbb
xor
int
lods
testl
inc
adc
or
idivb
mov
fnstenv
sub
mov
cmp
fldcw
in
out
or
fsubrs
imul
or
inc
inc
adc
xchg
pop
pop
fwait
xchg
sti
xor
xchg
add
popf
rorb
cmpsb
cmp
fsqrt
and
sbb
insl
mov
test
dec
cmpsl
aaa
aas
sbb
cmp
test
fbstp
ficoms
rorb
addr16
in
push
je
sbb
jo
lods
pop
jl,pt
fiaddl
cli
jo
hlt
gs
adc
test
aaa
mov
lahf
xchg
fstps
mov
push
and
jae
adc
sub
imul
xor
dec
cmp
dec
jno
dec
pop
cwtl
jb
sbb
mov
add
pop
fcompl
icebp
cmp
test
mov
sub
insl
jae
mov
shlb
push
test
sbb
lds
jl
sbb
pop
xchg
xor
cmpb
loopne
dec
xchg
sbb
xor
adc
and
sub
xchg
mov
mov
cmpsl
inc
jns
in
xchg
popl
xor
outsl
xchg
pop
stos
and
aaa
sbb
divl
pop
dec
stc
sahf
fisttpl
adc
mov
cmp
inc
xor
loop
and
mov
orl
incb
fs
orl
mov
cmp
mov
iret
xor
loope
or
cltd
stos
or
int3
or
imul
sub
adc
xor
inc
or
jle
bound
imul
out
pop
jnp
add
mov
jnp
or
and
pushf
fs
imulb
add
adc
push
pop
ficomps
mov
xor
insl
inc
pop
in
popf
lret
rorb
in
add
mov
div
push
jp
and
test
sub
scas
aaa
and
mov
jmp
into
push
jb
mov
mov
lock
jne
jno
sub
scas
ja
fnstsw
cltd
es
xlat
add
push
fiaddl
test
push
ret
je
sub
push
and
jbe
cmp
out
cmp
fs
aas
ss
ja
out
cmp
push
shl
out
stos
insb
and
inc
xchg
mov
sti
push
xchg
jecxz
xchg
xor
daa
push
lea
sub
lea
test
lea
cmp
inc
fcomi
loope
aaa
lret
xor
mov
outsb
push
aad
int3
daa
jp
push
and
sub
outsl
jg
cwtl
inc
ror
inc
sar
in
enter
pop
mov
enter
and
sti
ret
jmp
xor
in
and
sbb
fidivrl
xor
cmp
xchg
pop
xchg
add
or
dec
sub
push
popf
mov
fwait
pop
mov
xor
jle
jg
xchg
js
xchg
mov
aad
cmp
mov
ss
call
mov
jecxz
in
rolb
sbb
loope
mov
mov
jle
inc
lcall
inc
add
jno
jnp
mov
push
cmpsb
push
jbe
lds
cmp
sub
xchg
out
adc
dec
jb
loopne
and
repz
push
nop
xor
cs
cld
inc
or
push
rol
fs
or
add
jl
outsl
outsb
iret
push
mov
mov
add
push
je
mov
mov
rclb
pusha
out
jo
xchg
testb
mov
push
aas
cwtl
lcall
xorl
mov
sbbb
mov
fstpt
push
aas
call
dec
xchg
push
imul
or
dec
movl
leave
mov
sbb
cli
push
mov
imul
adc
fcmovbe
jo
fimull
mov
inc
xor
pop
cwtl
push
movsb
fistpl
stc
sbb
aas
and
sti
jbe
inc
lret
push
or
ret
repnz
stc
outsl
addr16
xchg
jmp
or
mov
rcrl
or
loopne
jnp
cld
leave
mov
inc
insl
sbb
or
mov
xor
test
cwtl
or
cmpsl
insl
aam
inc
xlat
add
sbb
and
daa
fidivrs
shlb
in
test
fs
inc
mov
add
mov
fcmovu
jnp
js
ss
cmp
mov
in
or
jb
sbb
jg
imul
movsl
inc
out
in
xchg
into
sbb
cmp
shl
in
add
aaa
adc
sub
xchg
sbb
mov
scas
push
notl
iret
mov
mov
pop
iret
in
dec
sbb
add
cwtl
int
and
cwtl
sar
stc
je
xchg
leave
lcall
xor
out
fnstcw
js
out
jp
lret
rclb
pop
mov
inc
ficomps
sub
std
sbb
rcrb
add
mov
and
sbb
xor
bound
fs
das
movsl
adc
xor
dec
aaa
cld
bound
stos
and
mov
pusha
out
sbb
out
add
cwtl
fists
push
and
shrl
ljmp
add
pop
das
mov
jne
rcl
adc
xor
sub
insb
jne
cmp
mov
push
fucomp
pushf
or
push
rclb
cmp
loopne
lods
pop
xor
sbb
fcomps
push
add
mov
cmp
aas
int
nop
repz
xor
adc
in
jae
pop
mov
stos
ret
and
dec
fistl
jbe
out
das
adc
stos
jb
jae
mov
cmc
mov
mov
inc
ljmp
shr
int3
iret
dec
test
aaa
fnsave
test
arpl
aaa
cmp
mov
bound
add
xchg
mov
stos
xlat
mov
adc
into
enter
sbb
addr16
push
pop
lock
mov
push
insb
ja
shl
aaa
mov
jmp
cmp
dec
mov
xorb
mov
popf
mov
lds
sbb
pushf
mov
push
leave
jmp
outsl
call
push
scas
in
push
pop
adc
in
xor
jae
scas
push
in
mov
or
mov
les
popf
jmp
pop
and
adc
push
mov
cmc
jp
inc
or
arpl
cltd
cwtl
cltd
daa
pop
mov
arpl
mov
cmova
xchg
sub
xor
pusha
shl
mov
jno
cmp
add
xor
xchg
aad
dec
jge
ret
add
adc
xor
sbb
xchg
adc
mov
and
push
shl
jno
mov
fwait
cmpsl
jb
ret
lcall
pop
pusha
movsb
jo
nop
add
aas
mov
sti
add
jno
and
adc
lahf
push
push
mov
jp
punpcklbw
push
jge
mov
mov
mov
repz
pop
pop
test
iret
cmpsl
lgs
or
sub
cmp
xor
pushf
out
jns
mov
pop
adc
cltd
mov
ja
push
pop
cmp
pop
loopne
jp
mov
shll
pop
cmp
arpl
ds
scas
xchg
repnz
mov
aas
and
mov
push
fldl
or
movsb
mov
dec
ret
and
or
adc
sahf
dec
fldln2
xchg
std
lods
xchg
xor
mov
lea
cld
pop
xchg
mov
je
push
lock
xor
mov
repnz
int3
mov
add
push
jns
lock
jecxz
outsl
nop
lret
mov
test
inc
dec
es
cmc
repnz
mov
dec
insb
clc
es
pusha
mov
rcl
jp
sub
cwtl
pop
jmp
stc
ljmp
push
or
push
data16
pop
cmp
ss
jle
pushf
ds
inc
jecxz
pop
push
leave
lds
aam
sub
subl
jb
mov
aam
ret
cltd
pop
out
mov
add
popa
es
aam
hlt
cli
sbb
or
std
jnp
pop
push
fmul
pop
int
add
lcall
cmpsl
mov
out
pusha
sub
das
xchg
les
and
or
insb
dec
test
mov
add
in
adc
push
jo
dec
jne
sub
into
out
sahf
pushl
mov
icebp
int3
pop
test
mov
and
sahf
cmp
mov
mov
push
ljmp
mov
movsb
loopne
add
repnz
fbld
cmpsb
add
movsl
xor
pushf
aaa
cmp
mov
popf
mov
pop
fsts
mov
data16
adc
imul
sub
movsl
xchg
mov
mov
jnp
ja
cmp
jg
push
sub
shr
lods
lcall
xchg
loope
xorl
es
icebp
inc
lock
jbe
push
out
mov
xchg
lds
lret
xchg
push
pop
fld
mov
repnz
scas
icebp
jb
popw
xor
es
add
mov
mov
sub
iret
enter
push
data16
cwtl
push
push
cmp
add
shrl
push
adc
add
addb
sbb
es
jno
push
pop
inc
adc
dec
insb
or
mov
rcrl
fmuls
out
stos
leave
call
push
mov
xorl
out
xchg
pop
icebp
dec
sub
jp
xchg
in
arpl
scas
gs
sbb
cmp
cmp
mov
dec
mov
mov
int
pop
mov
mov
push
lcall
hlt
lds
scas
push
cmp
mov
scas
mov
lods
test
mov
scas
icebp
inc
fstpl
cld
jmp
and
loopne
sbb
xchg
adc
jne
xchg
push
pop
test
int
call
out
jae
lar
imul
insb
mov
mov
mov
pushf
daa
repnz
ss
or
pop
sar
test
pop
stc
lds
pop
mov
or
adc
cmp
dec
fmull
popa
lret
pusha
popa
mov
pop
in
pop
push
sub
stos
aad
es
iret
stos
ret
pop
cmp
and
imul
mov
daa
mov
add
dec
xor
dec
pop
adc
jecxz
lcall
cmpsb
adc
out
inc
inc
pop
loopne
in
push
sahf
push
ret
add
iret
jmp
out
or
xchg
or
imul
imul
mov
jge
sub
imull
adc
pop
mov
sbb
mov
push
push
mov
add
xor
dec
pop
mov
jne
cs
fdivl
insl
mov
inc
jg
jg
rolb
cmpsl
hlt
dec
xchg
add
sub
inc
push
jns
mov
cmp
pop
lock
xor
jb
sub
fs
int3
fs
inc
or
outsb
cmc
test
pop
std
jbe
xor
and
push
arpl
out
sti
std
out
xor
jbe
push
popa
cwtl
mov
adc
jg,pn
shrb
sub
adc
stc
and
mov
dec
mov
dec
lds
cmp
movsb
cmc
or
leave
adc
jg
bound
mov
jns
lods
imul
xor
nop
cmp
push
sti
mov
add
jne
jbe
mov
in
mov
mov
xchg
xchg
mov
mov
bound
jmp
inc
sub
cmp
cs
pop
cld
mov
fwait
push
int
dec
lock
ret
push
jle
mov
test
outsl
cltd
pop
and
scas
xchg
push
pop
pop
xchg
jge
xchg
aaa
push
movsb
sbb
and
jge
adc
addr16
mov
clc
pop
subl
pop
in
inc
aam
cld
cltd
adc
xor
repnz
add
cmc
or
lods
jl
jmp
sbb
cmp
lret
pop
xor
push
aam
or
addl
repz
cmp
mov
pop
mov
dec
xchg
lea
push
repnz
inc
sub
fstl
adc
mov
ss
orl
stos
jae
insb
das
adcb
adc
pusha
xchg
in
cmpb
xchg
adc
ficompl
fwait
add
pop
or
mov
out
ficoms
lds
pushf
mov
xlat
out
add
test
inc
lds
stc
in
push
and
dec
mov
push
push
mov
pop
dec
inc
std
xor
add
stos
fisubrs
or
cmp
jne
call
cs
ret
mov
out
cmp
ffree
push
call
addr16
jne
push
adc
test
cwtl
pop
adc
dec
or
cmpsb
mov
pushf
pop
fucomp
mov
lret
addr16
and
mov
jecxz
push
cli
in
je
sarl
inc
xchg
pop
clc
push
add
mov
push
test
jb
repz
xor
call
xlat
mov
mov
ds
jle
inc
out
jl
lds
jmp
inc
lods
mov
out
lds
lea
scas
faddl
inc
test
and
pop
cld
incb
das
imul
mov
dec
push
xor
js
push
inc
jo
nop
aas
inc
test
adc
sub
jb
dec
push
jns
jae
xchg
stos
adc
imulb
pop
sub
jle
cli
stc
dec
jmp
notb
mov
mov
pop
lahf
push
in
dec
mov
adc
push
mov
pop
loop
out
jecxz
mov
mov
imul
popa
or
cmc
push
mov
xor
and
cli
fisubrl
sub
jl
adc
xor
inc
cmp
adc
sbb
fcoml
pop
xor
sub
cmp
bts
cmp
insb
movsb
bound
or
or
das
fstl
xchg
and
popf
mov
pop
les
loopne
sti
daa
shr
push
mov
dec
sbb
push
sbb
add
cmpsl
test
xchg
je
mov
adc
test
fcompl
cmp
sbb
insb
mov
nop
dec
scas
sahf
add
mov
xor
jmp
cwtl
arpl
inc
fistpl
inc
and
andl
lret
add
imul
sbb
aas
ja
adc
ss
mov
popf
inc
push
sbb
sbbb
bound
xchg
xor
inc
xor
jmp
jmp
pop
cmp
and
es
test
insl
jbe
mov
cmp
xchg
sub
ja
lock
push
xchg
shlb
push
aas
outsb
push
adc
loopne
lock
mov
aam
test
sub
mov
pop
xchg
xchg
je
push
mov
or
mov
xorl
imul
mov
mov
test
jl,pt
cmp
popf
xor
pusha
add
push
and
jae
notb
jp
lods
mov
lahf
inc
pusha
aam
xchg
or
rorl
lea
adc
test
lds
xchg
xor
add
xchg
or
pushf
out
or
imul
pop
fsub
push
fstpl
push
addr16
mov
mov
lock
aad
filds
outsb
sub
xchg
xchg
test
lret
mov
mov
mov
enter
or
pusha
rolb
sbb
bound
add
sub
stos
push
mov
pop
movsl
dec
fisubs
daa
pop
dec
xchg
xor
jg
clc
sahf
mov
add
push
ficomps
lods
ljmp
jecxz
lds
mov
sahf
leave
hlt
cwtl
mov
andl
mov
push
xchg
jo
jb
pop
das
adcl
mov
fisttpl
adc
je
cwtl
push
mov
or
inc
pushf
adc
fwait
lret
pop
sub
rclw
movsb
mov
movb
iret
arpl
jb
pop
cmpsb
ss
popa
mov
vpacksswb
mov
add
jns
aaa
insb
or
gs
imull
jmp
dec
lds
in
xchg
rclb
stc
cld
es
pop
test
inc
into
lea
mov
add
xor
pop
cmp
imul
orl
adc
cmp
js
jo
daa
or
push
repnz
mov
cmp
jne
cmp
inc
movsl
pop
adc
xor
addl
sbb
jb
dec
mov
jg
jb
testl
cmp
mov
xchg
addb
mov
mov
mov
movsb
pusha
scas
fucomip
addb
repz
fiadds
js
test
or
dec
addr16
stos
shlb
aam
dec
lcall
leave
sbb
mov
popf
arpl
shl
or
pop
mov
mov
add
sbbb
inc
fiadds
dec
jb
jne,pn
lea
sbb
push
dec
jbe
xor
mov
push
push
sub
sbb
xchg
sahf
jg
in
imul
pop
out
nop
cmc
pop
mov
jecxz
mov
mov
dec
loope
iret
cmp
mov
push
push
dec
mov
adc
lahf
aas
or
mov
add
ja
leave
andl
mov
aam
rcrb
cli
or
test
push
or
ret
scas
lods
add
mov
xor
data16
pop
pop
mov
jg
dec
mov
aam
or
lret
cltd
xchg
pushf
lcall
jno
mov
fsin
xchg
xchg
repnz
movsb
add
scas
ficoml
cmp
dec
xchg
mov
test
lcall
daa
push
cmp
lret
fidivrs
stos
mov
frstor
inc
movsb
cs
sbb
sbb
sbb
inc
mov
cmp
mov
push
ret
ficompl
test
mov
mov
push
inc
cmpsl
push
pop
insb
or
rclb
jl
nop
fstl
bnd
in
movsb
mov
inc
and
xchg
xchg
push
loope,pn
push
js
mov
out
movsb
xchg
ljmp
shrl
incl
scas
int3
xor
sbb
push
iret
call
mov
or
test
xchg
cmpsb
add
outsl
add
movsl
rcl
inc
adc
xchg
mov
inc
pop
mov
pop
sbb
or
or
pop
jg
subb
adc
scas
xor
arpl
shrb
dec
ss
movsb
nop
push
pop
or
xchg
inc
xorb
cld
dec
inc
loope
add
mov
shlb
ds
ljmp
and
cld
jp
lea
loop
mov
enter
or
ds
insb
jb
pop
cmp
fstps
or
bound
xchg
or
xor
mov
mov
push
repnz
fs
mov
adc
mov
mov
js
clc
mov
out
jge
es
call
and
in
jo
mov
into
jecxz
stos
lods
push
mov
pusha
mov
mov
pop
pop
and
pop
fmuls
pop
or
inc
sbb
mov
cltd
insl
imul
insl
or
mov
ja
sbb
dec
lock
jns
jle
imul
push
in
lods
stos
pop
insl
pop
cld
mov
clts
xchg
popf
mov
stos
in
adc
pop
xchg
leave
sub
pop
test
int3
mov
jmp
sub
nop
cmp
fwait
stc
test
adc
jbe
jnp
das
sbb
sti
shlb
rcrb
dec
and
jmp
pop
addl
sub
mov
push
in
test
bound
loopne
push
fprem1
int3
sbb
jns
push
push
je
xchg
or
inc
jmp
add
mov
xor
dec
iret
sbb
sbb
cmp
mov
or
mov
xchg
jne
fsubp
arpl
and
sub
mov
addl
mov
je
cmp
push
cmp
xchg
and
and
lret
rcll
mov
outsl
out
pxor
jb
xchg
cmp
out
sbb
mov
insl
int3
lcall
loop
or
adc
and
adc
popf
xor
and
mov
xor
cmp
mov
ja
lods
mov
cmpsb
lea
fsts
clc
xor
cmp
cmp
cmp
ret
shrl
push
mov
dec
push
lret
dec
cmpsb
popa
xor
mov
xchg
push
cwtl
cwtl
and
je,pt
js
lods
inc
test
cmp
loop
and
cmp
rolb
jle
xor
xor
ret
leave
lods
adc
addl
add
sub
mov
or
test
aaa
or
add
fs
mov
lods
pop
je,pt
test
mov
cmp
adc
xor
push
fisubrl
jb
push
sarl
cmp
xchg
and
lcall
pop
nop
incb
aaa
mov
rcll
imul
filds
xchg
inc
and
pop
call
fwait
xchg
sub
sbbb
repnz
mov
decl
sbb
aas
mov
dec
addl
stos
mov
sbb
mov
push
movsl
sub
sub
std
int3
mov
adc
dec
add
jb
popf
stos
sbb
adc
mov
cs
mov
xchg
fcoms
jge
or
mov
cmp
pop
lcall
jecxz
cld
adc
push
mov
bound
test
cltd
cmpsl
adc
sbb
or
lock
test
imul
inc
dec
rorb
sahf
adc
cltd
sbb
mov
adc
int
mov
inc
int3
out
ret
cld
les
outsb
enter
push
shrl
jl
mov
stos
push
js
push
mov
sbb
add
mov
mov
test
dec
jmp
rcll
je
lock
mov
inc
xor
lret
inc
movsl
ret
add
add
stos
sub
mov
lds
lret
pop
mov
inc
call
lds
jg
pop
mov
inc
sahf
hlt
out
sub
jmp
adc
adc
jo
mov
adc
aaa
pop
adc
jp
test
movsl
mov
dec
dec
js
iret
xor
pop
dec
xchg
lea
loope
pop
cmp
mov
sub
aad
imul
add
test
fidivl
fidivrs
in
add
inc
in
enter
mov
jnp
out
xchg
dec
fiaddl
cmp
jle
adc
adc
stos
sbb
and
std
xchg
aad
mov
subl
pusha
xchg
cld
movsb
test
iret
lcall
shr
xor
or
stos
int3
sub
pop
orl
and
or
orl
sar
aad
fmul
jle
imul
sbb
adc
hlt
jmp
adc
sbb
ret
fidivs
push
sub
push
xor
aaa
xchg
mov
int
xor
pop
in
sbb
push
jge
push
dec
push
inc
push
mov
fdivl
adc
xor
jo
pop
inc
clc
inc
adc
dec
jge
and
sti
cmp
scas
aam
mov
ret
repnz
arpl
jbe
jmp
push
es
repz
aam
jae
dec
loop
pop
and
nop
std
rclb
xor
or
popf
or
out
test
iret
out
ret
sbb
push
inc
fcoms
sbb
xchg
inc
push
add
inc
fcomps
pcmpgtw
adc
dec
mov
js
adc
add
shrb
or
nop
dec
adc
cld
les
jle
pop
in
frndint
adc
push
cmp
inc
sbb
repz
movsb
popl
iret
dec
fwait
stos
and
adc
out
test
ret
xlat
cltd
popf
int3
adc
jp
cmp
jo
stc
xchg
mov
adc
jbe
rcrl
push
inc
mov
cmp
stc
jmp
je
shrl
dec
lret
adc
pop
mov
mov
out
mov
cmp
sti
adc
jo
dec
sub
cmp
gs
cwtl
jbe
popf
push
daa
lock
xchg
jmp
jo
in
push
xchg
iret
jl
mov
test
test
lock
movsl
pop
sbb
pop
push
and
insl
repz
sbb
pop
jne
jecxz
into
push
add
shrb
fcmovnbe
lock
jo
out
sbb
jmp
jl
inc
pop
xor
enter
in
sbb
xor
stos
jp
push
push
cs
subl
inc
add
cmp
in
fs
scas
sub
aad
pop
fsubrl
mov
stos
xor
dec
shrl
lds
cmp
gs
push
sub
mov
in
xlat
mov
ljmp
mov
xor
mov
movsb
xchg
cmp
fsubr
ljmp
loopne
add
gs
inc
cli
sbb
pop
lret
push
repnz
adc
push
sub
sub
xchg
pop
das
add
ret
add
shrb
and
pop
out
dec
pop
adcb
mov
xor
sbb
xchg
popa
push
pop
aas
push
jne
lret
mov
fs
inc
sub
mov
cmp
xor
pop
lea
ficoms
push
subl
std
les
mov
inc
outsl
pushf
lret
repnz
cmp
mov
and
nop
and
jge
or
xor
jnp
popa
xchg
cmp
inc
sub
mov
imul
jbe
pop
pop
scas
inc
mov
jnp
shrl
mov
xor
shll
test
rol
push
sub
lds
lock
pop
pop
int3
pop
mov
cli
or
data16
jge
mov
rcr
push
into
cmpsb
push
in
jbe
mov
push
insb
cmp
ficoml
cmc
outsl
adc
in
fistl
dec
xchg
lods
mov
jl
repz
ror
in
lret
jle
ds
sub
cltd
adc
rorl
inc
aas
dec
inc
leave
mov
jb
mov
shl
push
fildll
add
clc
sub
adc
aaa
aad
and
aam
add
lsl
mov
and
adc
xchg
ret
jbe
jmp
inc
subb
cwtl
aaa
lods
adc
cmp
mov
mov
in
mov
popa
int
xchg
inc
rclb
push
xchg
loope
xor
insb
rclb
test
sbbl
int3
jg
xlat
loopne
repz
imulb
push
and
add
add
mov
push
pop
jae
sbb
adc
ss
fisubrs
gs
icebp
jae
das
test
xchg
jne
rcr
xor
cwtl
mov
les
cld
adc
and
mov
ljmp
data16
xlat
bound
mov
sub
sbb
adc
push
jnp
jge
push
pop
dec
mov
mov
cmpsl
mov
pop
sub
rcrl
sbb
aad
or
cmp
add
push
inc
stos
inc
inc
popf
dec
hlt
lods
pop
sbb
lcall
out
cmp
or
sti
into
incb
xlat
push
dec
inc
icebp
enter
loop
mov
mov
imul
sbb
sub
jecxz
dec
and
rol
push
std
cmp
pop
sbb
pop
or
test
outsl
and
mov
mov
push
xchg
jno
jp
dec
sub
jmp
pushf
mov
pop
fimull
sti
mov
in
xchg
cwtl
xchg
dec
fcmovnu
sbb
push
out
nop
cmp
in
dec
in
or
test
inc
mov
lcall
or
addb
int3
mov
jo
popa
js
jo
push
push
push
jb
cmpsb
mov
cltd
or
dec
ret
shl
in
sbb
test
inc
fwait
xchg
rolb
lods
loopne
push
xchg
js
jne
mov
fimull
mov
fsubs
cmpsl
bound
inc
add
adcb
call
bound
xchg
sub
push
jge
idivl
subb
outsb
imul
ljmp
and
lods
in
xchg
mov
ret
push
xchg
push
xor
js
lret
fcoms
jecxz
mov
push
in
pop
jecxz
jae
and
mov
push
and
std
pop
push
in
stos
inc
push
lds
xchg
bound
mov
leave
dec
jno
scas
mov
out
sbb
push
cwtl
pop
mov
out
sti
inc
mulb
insl
push
cld
insl
mov
ljmp
mov
jg
mov
push
popa
aad
mov
in
fwait
mov
gs
and
int3
filds
loopne
in
loopne
jge
push
mov
jne
shlb
lods
xchg
jmp
add
loope
scas
mov
push
xor
stos
in
out
mov
xlat
xchg
jb
pushf
xchg
or
mov
and
xor
aad
xchg
dec
ljmp
lods
jno
or
sub
mov
jo
bound
or
scas
mov
pusha
push
outsl
nop
xchg
hlt
mov
adc
sub
pop
lods
add
lods
icebp
push
adc
lods
rol
pushf
sub
dec
pop
cmp
jno
and
mov
xorl
mov
fsts
insl
push
fisttps
jecxz
xchg
test
bound
cvttps2pi
add
or
and
push
jmp
sbb
inc
out
pop
cli
pushf
mov
fstpl
rcr
xchg
inc
into
call
movl
bound
sbb
xchg
addr16
scas
or
sub
daa
jno
push
ds
sahf
inc
jge
pop
push
add
test
test
sub
mov
sbb
inc
cmpsl
push
sub
ret
add
xor
push
fistl
rclb
into
adc
ficoml
push
cwtl
lods
ror
cltd
push
sarb
punpckldq
mov
lret
xor
adc
jg
aad
xor
sbb
sbb
out
loope
xchg
add
sub
mov
mov
jg
adcb
and
sahf
jl
mov
mov
testb
pop
inc
push
xor
repz
sarb
mov
mov
sub
mov
repz
sti
out
mov
jno
mov
fs
into
adc
mov
fistl
sub
pop
popa
shll
iret
sub
lods
scas
andb
out
mov
outsl
pusha
or
jb
mov
push
jnp
mov
and
push
pop
nop
adc
hlt
jg
cmp
xchg
icebp
push
dec
cmp
frstor
or
out
adc
test
push
popa
adc
out
fdivp
test
dec
and
std
jge
dec
shl
pushf
mov
xor
or
call
sub
cmpl
mov
adc
out
adc
cmc
mov
movsb
inc
lods
dec
into
test
pop
push
je
lret
jecxz
cmp
adc
fisttpll
aaa
sbbb
cld
js
gs
sbb
fmull
inc
filds
loopne
mov
mov
ss
sbb
add
push
in
mov
inc
sbb
dec
sbb
out
cmpsb
jns
popa
lods
fs
adc
pop
sub
adc
hlt
mov
in
pop
push
xlat
insb
xlat
clc
js
mov
arpl
leave
or
pop
pop
xchg
jp
add
mov
dec
movb
mov
xchg
and
stos
imul
movsl
adc
dec
sbb
enter
add
ret
mov
jle
mov
fs
loopew
ds
push
jne
adc
jo
or
or
es
fwait
mov
jb
nop
ds
xchg
mov
cmp
push
cmp
dec
xor
lds
cmp
jp
xor
mov
dec
push
xchg
dec
stc
mov
pop
inc
sahf
mov
or
shrb
push
xchg
jle
jo
and
push
inc
mov
fsubrl
mov
mov
dec
imul
stc
mov
in
sarb
in
imul
adc
ja
out
adc
arpl
sti
jle
jmp
and
jl
cmp
jmp
sbb
xor
pop
jle
test
push
jecxz
bound
rcl
add
in
popa
push
mov
push
mov
lds
mov
push
lds
je
scas
dec
loopne
or
gs
pop
pop
jl
inc
mov
stc
and
movsl
cmc
shl
fnstenv
pop
xchg
jl
jae,pt
fsubrs
dec
dec
sti
std
rorl
pop
clc
inc
imul
outsl
mov
mov
loopne
pop
jae
fisttpll
test
sub
outsl
sbb
shll
jae
popf
icebp
clc
sbb
push
cli
bound
mov
dec
in
call
bound
imul
mov
inc
xchg
sub
inc
xchg
int
stc
dec
int
dec
ljmp
ret
mov
add
mov
leave
push
mov
xlat
bound
jl
fcoml
fsub
jbe
and
jp
icebp
clc
jl
scas
cmpsb
mov
add
mov
or
rclb
test
sbb
dec
and
sbb
call
jns
daa
dec
or
xchg
mov
push
stos
xor
pop
pushf
sbb
arpl
jp
imul
push
pusha
adc
adc
xchg
ja
loopne
and
sbb
mov
dec
aad
clc
push
aaa
aaa
xchg
add
inc
add
adc
adc
or
and
sar
dec
xchg
in
adc
push
in
inc
mov
sbbb
lock
les
inc
iret
add
insb
out
cmpsb
loop,pt
mov
ficoml
test
fs
dec
add
dec
cltd
fs
fwait
cli
cmpsb
insb
loope
adc
sti
jne
xchg
jbe
ret
std
es
cmp
out
call
imul
xor
bound
inc
loope
les
inc
in
cmc
or
pop
daa
mov
or
lahf
gs
or
movb
arpl
ss
test
pop
shrl
pop
addr16
mov
mov
cmpsb
cli
mov
dec
mov
lret
lods
xor
xchg
imul
stos
mov
sub
pop
xchg
shl
mov
add
cmp
lock
inc
push
cs
out
mov
subb
fs
jns
mov
inc
test
popl
push
into
ljmp
ror
xor
sub
orb
std
add
jp
and
outsl
jno
scas
adc
xchg
adc
andl
push
jbe
cmc
sbb
add
mov
and
mov
add
pop
mov
xchg
addb
mov
in
aam
rcll
mov
dec
xchg
outsb
push
pushf
scas
jmp
sub
stos
pop
sub
popa
xchg
fildl
dec
push
std
lret
scas
jae
sub
or
arpl
fbld
lret
mov
roll
ret
sub
popf
push
add
push
filds
lock
mov
push
das
inc
lret
lahf
xor
mov
push
push
sub
jno
aas
jecxz
test
pop
xor
shrl
roll
addl
arpl
mov
inc
xchg
icebp
hlt
or
xchg
or
mov
int3
inc
in
divl
fucom
sub
dec
or
arpl
pop
xchg
sbb
adc
and
fsubrs
addl
fcom
ficoms
fwait
inc
test
dec
imull
jg
xor
push
inc
imul
fisubrs
lea
adc
bound
movsl
cltd
dec
xchg
xor
xor
sbb
push
sbb
jae
mov
push
mov
or
add
fidivrs
lahf
les
inc
jmp
mov
xor
out
test
cld
add
call
and
jno
cmp
in
adc
scas
push
adc
jns
and
mov
leave
inc
fbld
clc
add
cmc
in
nop
push
cmpsl
incb
insb
xchg
aas
jae
pop
cmp
popa
call
cmpsl
dec
test
push
or
arpl
push
push
aas
sub
jge
testb
clc
inc
push
dec
xchg
add
xor
dec
pop
pop
popa
cmpsl
clc
mov
mov
adc
lret
adc
clc
sbb
repz
jnp
sti
xlat
mov
xlat
rcrl
mov
xchg
jae
mov
add
mov
nop
add
mov
incl
in
add
mov
dec
or
add
xchg
sbb
popf
add
push
jle
push
sub
das
sbb
dec
push
je
bound
xor
sub
rcl
les
fwait
popf
mov
xchg
addl
mov
je
cli
insb
cmpl
aad
pop
cmpsb
lret
sti
ja
ret
popf
xchg
add
sahf
lds
mov
jno
repz
pop
inc
iret
push
inc
or
mov
inc
mov
cmpsl
and
add
out
test
push
jnp
shlb
sahf
lods
pop
test
xchg
xorl
pop
xor
add
and
sbb
sbb
test
mov
lret
fs
cmc
mov
pop
inc
iret
test
loopne
in
push
aad
clc
mov
imul
pop
push
add
loop
aas
mov
sbb
pop
flds
xchg
fdivl
jmp
mov
pop
pop
inc
push
cltd
xchg
inc
sahf
ror
and
pop
arpl
adc
repz
and
xchg
sahf
movsl
adc
cmp
stos
aaa
scas
xor
int3
aam
dec
push
pop
xor
aaa
call
sti
pop
outsb
shll
aas
add
add
outsb
dec
cmp
outsl
push
sub
ds
nop
dec
aas
inc
mov
xor
push
jle
leave
fimull
dec
rcrb
sbb
iret
jl
cmpb
pop
fs
pop
jo
add
aas
repnz
jb
xor
cmpsb
out
pop
mov
mov
xor
push
lcall
and
stos
sub
ror
inc
dec
jmp
cltd
inc
sbb
and
xor
ljmp
pushf
jle
test
push
icebp
out
call
jbe
and
or
jbe
in
nop
imul
or
or
jo
insb
push
movsl
xor
ret
sub
das
mov
xor
daa
stos
lods
fwait
or
push
in
push
inc
pop
mov
mov
adcl
xchg
or
push
gs
add
push
xor
loop
xor
adc
push
pop
xchg
cld
add
jge
cwtl
jb
loop
int3
add
cmp
jecxz
adc
jg
lods
adcl
cmp
adc
sbb
cli
aam
popf
ljmp
sub
mov
lret
enter
in
adc
je
repz
mov
int3
xor
iret
mov
jae
jbe
test
dec
cmp
js
dec
out
adc
jmp
lret
in
imul
lods
sub
xchg
imul
aaa
and
nop
mov
fwait
sbb
dec
je
jle
es
inc
test
push
shrl
fdivr
or
imul
jo
push
push
cmp
sbb
push
mov
fsubrl
mov
adc
cmp
js
in
push
repnz
mov
pop
or
push
or
sub
bound
jnp
ffreep
dec
roll
testl
sbb
mov
jp
fildll
scas
mov
or
sub
or
add
sbb
test
mov
jp
pop
aam
jns
xchg
fsubrs
sub
cmp
int3
pop
cmp
popa
outsb
lret
xorl
jae
aas
and
dec
mov
and
sbb
jo
stos
mov
int3
imul
sbb
sbb
call
mov
push
stc
or
xor
stos
addr16
add
addr16
gs
mov
sbb
gs
int3
xor
xor
fidivrl
cmpsl
push
testl
or
pop
pop
lods
out
xchg
dec
pop
pop
sar
push
pop
out
nop
push
xchg
mov
jae
int
in
mov
enter
cmp
push
pop
push
test
in
mulb
pop
jne
in
sub
clc
mov
xchg
jg
fsubrs
adc
loope
mov
and
cmpb
or
mov
es
xor
or
xor
fidivrs
or
cmpsl
cmp
int
xor
fcomps
sbb
lods
repz
xor
int
into
sub
xchg
jmp
cmp
sub
pusha
ja
pop
addl
les
sbb
lret
aad
jno
xor
or
insl
push
into
add
mul
insb
xor
pop
cmp
enter
faddl
sub
jl
cli
jmp
cmp
mov
cmp
inc
ja
jmp
andb
aam
cli
bndldx
sub
test
rol
imul
push
add
fdivrl
mov
std
out
cmpsl
xchg
mov
lret
xor
dec
or
cmc
sbb
pop
in
arpl
cmc
mov
cld
xchg
add
sbb
mov
lret
push
jg
cmpsb
inc
pop
cli
rol
xor
fadds
lret
nop
out
mov
arpl
jle
jae
aas
divb
add
ja
jge
mov
jnp
pop
popf
rclb
iret
flds
xor
cmp
cmp
mov
xor
loope
out
pop
es
dec
lods
pushl
movsb
add
lret
mov
into
adc
loop
add
fisttps
les
test
adc
jle
dec
fwait
pop
and
stos
mov
fisubs
ds
and
jnp
stos
sti
lcall
sub
or
inc
lock
outsb
xor
cmp
test
add
inc
stos
pop
sub
icebp
out
aad
lods
cmp
push
mov
loope
mov
dec
je
push
cld
adc
std
push
or
jp
dec
int3
imul
fstpl
mov
outsl
pop
cmp
jae
cmp
fadd
mov
mov
andb
sub
xor
cmp
add
jecxz
sahf
push
push
je
push
shlb
out
jl
mov
pop
cmp
rorl
or
jp
xor
test
mov
aaa
loopne
ja
fidivrs
xchg
cmpsb
xor
aam
or
jge
aaa
xor
imul
adc
xor
push
mov
popf
pusha
adc
call
push
sub
cmp
dec
rcll
jp
es
fmuls
js
fwait
mov
dec
dec
mov
jno
mov
imul
popa
mov
cs
scas
pop
movsl
pop
sub
mov
repnz
mov
push
int3
mov
xchg
or
push
fwait
jp
cmp
test
imul
jg
mov
add
inc
jmp
les
repnz
ret
lahf
mov
ficoml
test
pop
cmc
addr16
dec
mov
call
push
std
or
repz
sub
int3
mov
xchg
jbe
test
es
inc
add
sahf
mov
es
adc
loop
stos
and
push
shll
rcll
test
xchg
scas
dec
in
out
and
dec
sub
mov
sbb
sub
mov
int3
and
icebp
aam
mov
ret
aam
fadd
lds
pop
sbb
adc
xchg
ja
cltd
mov
movsb
movsl
imul
add
mov
in
add
xchg
mov
jne
push
or
xor
jae
rorb
icebp
sub
push
dec
add
xchg
mov
add
lahf
sub
cmp
test
cmp
push
push
cmpsl
mov
lods
inc
or
jl
out
rolb
sub
and
cmp
out
sbb
movsb
or
shl
jecxz
imul
cmp
jmp
cmp
or
push
adc
xchg
xor
xchg
cmp
scas
pop
repz
sub
lea
aad
lods
enter
mov
sub
shll
cwtl
push
pop
cmp
inc
in
dec
scas
sbb
int3
in
ja
xor
lock
xor
add
jmp
push
int
in
sbb
jmp
xchg
pusha
mov
and
jmp
popl
adc
scas
mov
stos
jbe
rcrb
jle
in
xchg
cmp
add
sbb
add
add
jle
enter
add
xchg
cmpsb
and
leave
in
inc
hlt
sbb
ret
cmpb
int3
cmpsl
xor
pop
pop
mov
dec
cmpsb
pop
repz
imul
mov
xchg
popf
mov
leave
cmp
sub
subl
popa
fsubrl
mov
lea
sub
or
fdivs
rcr
lods
insl
je
or
adc
popa
test
mov
mov
add
mov
sub
push
test
outsl
enter
inc
cmpsb
loopne
cmpsb
out
mov
push
add
jo
imul
add
cmp
cld
sbb
mov
inc
jo
fdivr
mov
mov
mov
mov
adc
dec
cmpsb
insl
push
cmp
adc
pushf
fnstenv
pop
gs
mov
fdivr
popf
fists
sub
dec
push
cmpsb
ja
mov
pop
adc
loopne
pop
sub
or
stos
outsl
jmp
fisttpll
int3
xor
ret
ffreep
mov
daa
fdivrs
aas
dec
jb
xlat
pop
out
push
push
out
nop
lret
daa
push
int3
je
mov
cmp
mov
add
cmp
or
aam
push
enter
je
push
imul
and
movsl
jge
mov
pushf
sbb
push
xchg
mov
mov
push
inc
inc
push
mov
data16
jp
test
mov
jne
andl
in
cmp
xor
xchg
notl
mov
lods
nop
push
repz
add
mov
dec
jge
in
or
testl
inc
or
add
nop
test
test
mov
leave
xor
push
jo
jno
rorl
decl
pushf
sbb
loop
jno
mov
adc
movswl
stc
jp
shll
xor
xor
or
ljmp
dec
inc
push
xor
mov
xchg
inc
xchg
jb,pn
cmp
lahf
mov
jno
popa
add
xor
pop
loopne
sub
mov
mov
inc
push
xchg
mov
xchg
mov
inc
test
xor
loope
aad
ja
bound
fiaddl
test
rcll
insl
mov
aaa
and
jle
sub
dec
and
pop
and
jp
mov
sbb
lock
arpl
sbb
mov
jge
dec
mov
or
adc
cmp
and
fsubrs
insl
jle
inc
xchg
add
sbb
aas
sti
dec
mov
int3
and
cmp
push
vmread
daa
jle,pt
dec
push
shlb
jl
loopne
loop
scas
sbbl
hlt
inc
mov
mov
sub
inc
jno
orl
sahf
dec
jns
xchg
add
aas
call
hlt
nop
jne
mov
aas
dec
aam
adc
popf
sbb
sarb
add
sub
test
outsb
jne
adc
in
adc
sub
int3
test
stc
stc
in
cli
mov
adc
in
js
stos
rorl
mov
jnp
pop
faddl
dec
cmp
inc
icebp
faddl
xor
je
imul
in
fs
cmpsb
lret
cmc
inc
mov
mov
pop
sbb
jmp
clc
std
mov
hlt
int
rorb
cmpsl
inc
fdivp
dec
clc
or
addr16
stc
aas
add
pop
or
in
dec
rcrl
subl
jnp
out
jl
clc
xor
mov
xchg
push
sub
hlt
popf
nop
jecxz
call
xor
iret
mov
cli
fstpt
mov
ja
and
dec
inc
ja
imul
push
mov
pop
sbb
sub
mov
mov
in
push
xchg
jl
loop
pushf
add
or
mov
mov
sbb
add
call
push
out
push
outsl
mov
cmp
mov
jge
pop
popf
xchg
fsubrs
loope
aaa
loop
and
xor
aaa
inc
xor
mov
xor
insl
push
int
fidivrs
popa
movsb
mov
xchg
ss
sub
mov
lods
jp
popf
arpl
rcrb
shl
inc
js
test
push
pop
fwait
and
mov
xchg
cmp
jle
in
shrl
insl
gs
jae
fcoml
jmp
fs
xor
int
ss
pop
add
pop
mov
jb
pusha
pop
bound
jnp
adc
test
test
popf
subl
push
sarb
mov
add
mov
scas
in
sti
push
xchg
inc
iret
add
out
out
clc
aam
sbb
mov
rcrl
adc
stos
or
mov
mov
bound
scas
mov
lods
add
adc
xchg
das
fmull
and
push
adc
leave
adc
cs
jle
addr16
sahf
rcll
jne
inc
jecxz
mov
inc
cmp
jbe
fstpt
mov
sbb
aas
stc
jbe
ja
add
xor
loopne
pop
stos
shll
jno
push
insl
loop
and
adc
sbb
dec
test
call
add
setle
push
std
push
mov
loop
mov
sbb
jo
pop
xchg
mov
jae
mov
jne
sahf
lods
enter
xchg
sbb
push
mov
ds
sbb
sub
orb
jp
sub
mov
jl
pushf
sub
cmp
sahf
mov
js
outsl
sbb
adc
adc
nop
add
fidivrl
test
std
mov
mov
xchg
int
adc
xchg
or
jnp
hlt
cmp
pushf
cmp
or
xchg
mov
and
fiadds
clc
dec
fwait
icebp
js
jbe
jbe
mov
scas
push
test
pop
and
stc
sub
lcall
out
cmp
fsts
push
dec
fdiv
mov
add
push
sbbl
ret
jge
and
or
mov
aam
add
pop
cwtl
cmp
pop
dec
sub
rorl
fdivrl
cli
dec
and
push
xor
mov
jae
cmp
sbb
sbb
jo
je
fiaddl
and
mov
sbb
aas
fs
out
shll
dec
mov
cmpsl
out
or
je
sti
push
fnclex
push
xorl
jp
xor
jns
push
add
inc
sub
rcrb
addr16
lea
sbb
mov
jl
int
sbb
fidivrl
js
add
pop
cwtl
out
mov
mov
jb
std
and
xchg
and
push
sub
push
push
mov
dec
dec
loopne
test
add
and
aam
or
sbb
pop
jns
or
and
scas
loopne
stos
cmp
adc
sbbl
and
jecxz
lods
pop
sbb
xchg
add
stos
jo
or
lea
mov
idivl
push
mov
adc
jbe
mov
lods
nop
mov
xchg
or
lods
rclb
mov
sub
cmp
push
scas
dec
les
decl
sti
xchg
outsb
sub
jmp
jecxz
dec
fldcw
dec
lret
repz
sbb
ret
jl
je
ret
pop
fidivrs
into
inc
jmp
xlat
aad
lods
xor
loop
jo
out
mov
mov
mov
mov
ds
lods
data16
push
inc
cmpsl
add
fstp
inc
and
cmpsb
fwait
cs
jp
sbb
xchg
lea
mov
aam
cwtl
out
adc
js
popf
mov
scas
xchg
call
jl
jno
fcomp
dec
add
inc
cmp
lods
mov
mov
pushf
pop
pop
pop
cs
dec
inc
scas
xor
shlb
and
jb
xor
outsl
lds
in
test
dec
jl
cltd
xor
in
adc
or
cmp
in
mov
ljmp
loop
adcb
daa
rorb
fimuls
xor
inc
pop
mov
xor
jmp
xor
sub
stos
in
movsb
xchg
and
andb
mov
dec
es
sbbl
add
call
popf
call
xchg
test
cwtl
push
loopne
sarl
repnz
xchg
mov
dec
cmpl
daa
inc
or
add
add
stos
aad
push
dec
lret
cmpsl
ret
fdivs
sarl
and
mov
push
xor
mov
es
and
dec
adc
or
les
adc
sbb
dec
out
mov
xchg
out
fwait
pop
push
xor
jp
mov
push
mov
xor
dec
mov
in
sub
xor
jecxz
out
lods
pop
setnp
test
jb
and
xchg
adc
jb
insb
ror
test
sub
repnz
pop
movsb
int3
pop
inc
rorl
stos
mov
jge
into
jp
sbbl
rcrb
lahf
mov
lret
test
push
loop
pop
xchg
stos
jecxz
imul
fwait
jne
add
rcll
shll
and
add
cmp
sbb
xchg
mov
je
push
lret
shlb
push
and
inc
cmp
mov
or
mov
es
mov
jnp
imul
mov
xlat
jne
cltd
lahf
mov
loop
jns
dec
icebp
movsl
sti
xor
orl
adc
stos
arpl
mov
mov
int
mov
xor
push
dec
je
xor
inc
mov
cli
mov
jmp
lahf
cld
jl
andb
inc
shrb
inc
cltd
jg
pop
loopne
sbb
enter
pop
stos
add
mov
loopne
mov
setp
enter
stos
jge
mov
jbe
mov
fildll
icebp
in
mov
jnp
pop
notl
inc
addb
ds
push
ud1
dec
mov
inc
inc
outsb
mov
mov
dec
negl
pop
outsl
stos
nop
sahf
daa
xchg
sub
fldenv
fsubs
sti
push
pop
pop
push
fs
notl
push
pop
or
lea
dec
jns
dec
xchg
sbb
daa
aad
jb
subl
xchg
add
jp
cmpsb
sub
sbb
sbb
rorb
adc
test
dec
stos
sub
xchg
mov
push
cltd
stos
sbb
and
sbb
lret
ret
loope
js
das
and
roll
sub
dec
mov
push
dec
sbb
and
pop
dec
addl
lret
mov
dec
inc
adc
cmp
sub
and
sbb
sbb
mov
sbb
xchg
push
fs
mov
leave
adc
or
fucomp
in
pop
xchg
es
add
cmp
bound
jns
cmpsb
mov
mov
add
or
bound
insb
sbb
and
fdivr
sub
xor
mov
fwait
ss
mov
xchg
adc
addr16
xor
das
mov
bound
subb
and
repz
outsb
mov
or
lods
add
jns
xchg
jp
std
mov
sub
xchg
shrl
adc
add
pusha
bound
pusha
inc
loop
pop
or
adc
pusha
sub
test
xchg
sbb
jp
insl
cmpb
push
push
mov
es
lcall
add
cmc
mov
push
mov
jl
imul
push
loopne
mov
sub
adc
jl
and
and
dec
adc
mov
adc
movsl
xchg
pop
scas
lods
dec
out
mov
cmp
mov
xchg
jecxz
aaa
fisubrs
push
mov
adc
lods
test
sub
addb
lcall
adc
cmp
nop
cmp
mov
cli
or
daa
sti
jne
je
xchg
mov
cmp
pop
sub
push
and
pop
cwtl
nop
jae
aam
sub
stc
dec
sub
das
pop
inc
sbb
rcrb
pop
test
mov
mov
loopne
cld
pop
mov
mov
bound
sub
or
aam
cli
jge
insb
imul
aam
stos
pop
jecxz
cmp
xor
fsubr
fiadds
iret
xor
call
mov
adcb
xchg
add
lret
fdiv
jb
xor
cmp
inc
jo
out
fnsave
loopne
neg
mov
lcall
inc
mov
insb
xchg
inc
xchg
adc
mov
jg
dec
mov
pop
into
mov
mov
test
out
sub
shr
xchg
xchg
jnp
pop
fisubs
fmuls
mov
push
push
push
ljmp
out
mov
push
addl
sub
xabort
lock
lcall
outsl
sub
sub
dec
xchg
push
bound
jle
xchg
loope
lock
scas
or
or
jne
pop
xchg
mov
push
mov
and
stos
ffree
push
mov
shl
pop
dec
sbb
repnz
jle
rcll
dec
shl
inc
pop
mov
rcll
call
pop
sbb
ficompl
arpl
sub
xlat
dec
je
push
jle
xchg
inc
add
dec
lea
aam
mov
std
inc
nop
cli
and
jg
sbb
movsl
test
push
sbb
rclb
or
push
jle
cmp
or
insl
add
sub
adc
test
jmp
pop
imul
into
push
outsl
mov
int
and
or
push
andb
orb
and
add
ret
popa
sti
pop
fistpl
jo
test
sbb
je
data16
push
test
fcomps
pop
jmp
inc
xor
pop
loopne
push
int
ja
into
sub
mov
mov
xchg
stc
inc
fwait
cmc
lods
mov
cmp
cmp
sub
add
jno
push
or
sti
push
scas
mov
jnp
push
insb
test
add
and
inc
ret
adcb
dec
push
insb
hlt
sbb
aas
or
ss
lcall
push
adc
test
sti
fwait
aam
pop
in
push
loope
das
mov
insb
aaa
mov
testl
test
mov
cmpsb
call
mov
setle
sbb
sbb
lods
dec
fcoml
dec
jecxz
push
in
rcrl
lods
cwtl
pushf
mov
iret
cmpsb
pop
addl
int3
jb
and
push
push
out
xor
loope
pop
jge
adc
dec
insb
inc
pop
das
xor
nop
and
xchg
das
test
xlat
push
mov
and
mov
jo
incb
call
xchg
xchg
add
adc
sbb
mov
por
mov
mov
pop
pushf
xor
leave
insb
lahf
out
push
pop
dec
xchg
add
and
fstpt
loope
jne
and
dec
dec
cltd
and
mov
cmp
ret
mov
cwtl
xchg
movsb
jae
test
pop
fsincos
in
push
cmp
daa
call
out
push
lock
mov
cs
loop
mov
or
xchg
out
jbe
sub
sbb
stc
stos
out
cmpsb
sub
fldenv
enter
lret
inc
cmp
imul
lock
iret
hlt
add
je
or
pop
or
pushf
cltd
movsb
cli
or
xor
inc
add
ja
pushf
xor
add
cmp
or
cmp
btl
mov
out
push
out
loopne
push
adc
xchg
adc
push
mov
imul
inc
jb
fwait
notb
clc
out
xchg
sbb
and
push
cld
or
fwait
sub
scas
dec
sub
lret
ret
arpl
push
inc
push
push
insl
aas
insl
inc
fisttpl
cmp
sub
cli
shl
pop
mov
insb
rcrl
lcall
sub
or
imul
stc
mov
scas
xchg
inc
inc
in
mov
lods
xchg
std
ret
rorb
inc
fwait
es
inc
xchg
and
aas
sbb
pop
dec
inc
fists
sbb
push
add
push
push
filds
add
test
fucomp
lret
ss
in
inc
sbb
sub
mov
push
scas
or
das
jns
shlb
in
pop
push
cmpsl
pushf
push
jo
sbb
mov
jns
jns
mov
or
mov
dec
pop
or
testb
scas
aaa
xor
pop
mov
cli
pop
mov
jnp
pop
and
lea
add
cli
inc
xchg
mov
testl
sub
aaa
pop
and
aad
dec
aas
cld
cmc
jl
dec
ss
dec
test
sbb
lcall
lds
cmc
je
fwait
insb
push
sahf
jecxz
adc
xchg
add
push
add
arpl
cmp
sbb
push
sub
sti
fnstcw
xchg
dec
rolb
cs
adc
mov
lcall
mov
xor
gs
push
les
adc
push
lahf
insb
mov
scas
or
pop
shll
xor
mov
pop
call
mov
cmp
fsubrl
hlt
dec
dec
adc
xorl
aad
shll
push
sub
fldt
sarl
mov
mov
loopne
fidivrl
lods
test
cmc
xlat
data16
cmpsl
or
cmp
jmp
cs
add
add
hlt
and
test
push
xchg
mov
and
sub
xor
jecxz
xor
push
sub
popa
dec
push
mov
pop
fs
roll
mov
in
outsl
xchg
cmp
in
insl
adc
jmp
push
mov
add
jbe
int3
gs
test
pusha
outsb
xchg
or
pop
pop
shlb
cmpsb
hlt
es
jecxz
outsl
std
aaa
and
pop
jmp
imul
cwtl
idiv
jmp
es
ss
add
mov
pusha
fiadds
xchg
push
addr16
adc
jnp
and
sti
push
loope
or
mov
sahf
shll
lods
cmp
dec
stc
pop
add
dec
jo
cltd
add
jns
fs
inc
ret
adc
bnd
push
lock
fwait
je
fs
nop
mov
mov
push
ja
mov
pop
dec
insb
gs
js
arpl
in
push
ds
dec
std
sbb
inc
int3
push
daa
icebp
adc
fwait
sub
int3
add
push
decl
adcl
insl
mov
repz
mov
ret
sub
mov
ja
ds
pop
xor
push
pop
jmp
js
mov
sbb
icebp
add
xchg
jmp
xor
popf
mov
testl
xlat
das
sbb
lret
lret
in
mov
cwtl
lds
cmp
inc
stos
in
stc
bound
xchg
adc
push
scas
pop
js
sub
push
lret
dec
arpl
lea
or
push
dec
mov
mov
lock
lea
repnz
jne
ss
aas
xchg
xchg
pop
or
cmp
sbb
shlb
enter
insb
ss
cmp
pop
sbb
xor
dec
dec
lret
pop
jl,pt
pop
xchg
mov
inc
outsb
xchg
jnp
mov
rcrl
dec
cmpsb
ja
stc
sub
jl
fimull
pop
add
fnstenv
in
test
add
aam
sbb
cmp
popf
psrlq
into
lods
sub
cwtl
mov
xor
stos
inc
aam
fsubrl
ss
pop
jl
les
push
pop
repnz
repnz
add
push
loopne
subl
dec
mov
adc
fbld
mov
pusha
or
popf
mov
xor
bound
jno
dec
psubq
jl
push
cmp
dec
adc
mov
xor
je
les
push
es
in
xor
lcall
in
sbb
imul
mov
lret
mov
push
and
xchg
push
into
dec
jge
inc
jle
stos
fadds
mov
cmpsl
repnz
nop
jns
cmp
pop
ret
cmp
inc
addr16
push
int3
dec
shlb
inc
pop
jbe,pt
pop
imul
xlat
ja
xchg
xchg
mov
sub
outsl
sbb
mov
mov
insb
int3
mov
icebp
adc
aaa
adc
dec
mov
cwtl
jno
sbb
ljmp
movsb
outsb
xor
adc
jbe
adc
sti
cmp
jno
inc
subb
pusha
xchg
mov
les
sahf
dec
stc
xor
or
sbb
mov
sbb
mov
jmp
stc
xor
jo
cwtl
pop
add
inc
xor
mov
pop
sub
ds
aas
mov
mov
fidivs
sbb
in
cmp
cmp
push
test
push
mov
addb
cmp
xchg
stos
movsl
lds
add
push
xchg
lds
inc
int3
data16
pop
test
inc
or
jp
fidivrs
outsl
cmpsl
repnz
outsl
arpl
sub
xchg
in
insl
dec
xchg
cltd
test
and
or
fldl
in
sub
rcr
xor
dec
lods
adc
push
xor
stos
push
inc
insb
int
pusha
fbstp
fwait
loope
or
js
mov
arpl
jne
adc
or
or
sbb
sbbl
out
lds
jo
insb
push
jo
xor
std
mov
add
lods
insl
adc
dec
dec
out
or
pop
aas
xlat
mov
cmp
sbb
xor
push
dec
bound
mov
ljmp
or
push
and
addr16
mov
add
and
adc
out
es
jns
pop
stos
xor
or
push
neg
mov
sub
jno
add
es
push
or
xor
add
cmp
repz
push
mov
cmp
xchg
mov
xor
insl
cwtl
mov
or
xlat
mov
in
mov
inc
push
into
cmpsl
in
je
cmp
push
aas
incb
xchg
fistpl
adc
popa
mov
push
dec
loopne
in
ds
test
sbbb
push
aam
xor
imul
sbb
or
sbb
jno
jp
aam
and
cli
xor
test
adc
ror
fiaddl
cmp
inc
xchg
ja
sbb
jecxz
fisubrs
push
jecxz
ljmp
nop
dec
es
jge
test
mov
jmp
sbb
dec
fdivr
sbb
das
adc
int
push
jne
das
shrl
sbb
adc
mov
sti
int3
push
xor
fdivr
iret
xor
mov
sub
sub
movsb
adc
cltd
xchg
push
inc
add
inc
dec
movsl
int
push
mov
lcall
push
cmp
scas
sub
and
lock
jbe
sub
cmpsb
out
sbb
pushf
inc
jne
lods
cmp
mov
int3
mov
das
push
mov
adc
imul
or
mov
cld
lahf
jge
mov
cmp
xor
ficomps
pop
sbb
loope
mov
or
addb
imul
xchg
dec
adc
cli
push
out
lret
clc
mov
and
loopne
adc
sbb
fiadds
xor
cli
sub
xchg
cmp
cmp
mov
xor
xchg
jp
jb
data16
mov
data16
scas
add
jle
sub
popa
adc
inc
out
pop
mov
sub
add
repz
bound
test
pop
movsl
in
ret
ret
and
push
stos
clc
lahf
repnz
and
sahf
daa
xor
jmp
clc
dec
std
outsl
dec
adc
mov
out
inc
cmpsl
mov
ret
out
xor
xchg
adcb
notb
lcall
rcr
lcall
xor
leave
or
mov
flds
xchg
lds
out
int3
std
push
movsl
daa
pop
jns
das
or
aam
stc
cmpsl
ret
sbb
inc
jo
addr16
loopne
idiv
out
dec
rorl
sbbb
fdivs
int3
or
loope
das
inc
fwait
arpl
pop
mov
push
outsl
xlat
pop
add
out
test
cmpsb
dec
mov
sub
js
xor
and
andb
cld
xor
sub
sub
hlt
orl
loopne
and
sbb
push
hlt
or
adc
push
in
pop
mov
mov
das
lcall
lahf
mov
negb
cmpsb
dec
cmp
out
hlt
stos
jne
aam
pusha
pop
dec
inc
sbb
xchg
and
cmp
mov
out
bound
xchg
pusha
or
pop
in
sbb
mov
les
clc
and
mov
shlb
rcl
cmp
incl
push
das
adc
inc
mov
mov
fs
repnz
out
nop
sub
mov
or
rol
push
mov
in
adc
mov
addr16
fcompl
mov
xor
lods
add
xchg
movsl
ret
ret
hlt
sub
jbe
lods
imul
or
nop
add
add
in
jle
jmp
add
movb
fcom
je
sbb
adc
pop
ljmp
test
jno
scas
jbe
in
inc
icebp
jecxz
jle
inc
test
cmp
cmp
test
mov
push
mov
lahf
mov
scas
jns
out
mov
ljmp
je
scas
mulb
mov
xchg
sbb
pop
and
or
ss
outsl
sbb
lods
cmp
xor
jne
cmp
sbb
stc
jno
addr16
pop
sbb
int3
push
and
scas
mov
fs
mov
loop
xchg
dec
iret
jecxz
leave
add
aas
xchg
or
imul
scas
mov
nop
hlt
cmp
lret
jns
lahf
imulb
or
loopne
insl
jmpw
xor
lods
lea
inc
sub
cld
adc
cltd
add
movsl
or
mov
in
sbb
lcall
pop
mov
mov
jnp
jno
leave
test
cmpxchg
xchg
xchg
imulb
pop
mov
inc
push
lret
testb
pop
into
mov
add
lods
xor
scas
insl
lcall
cmpb
xor
insl
out
inc
ret
dec
fyl2x
cmp
and
hlt
les
pop
clc
in
hlt
mov
dec
lods
imul
fdivrs
es
jb
lods
mov
mov
je
jno
and
scas
xlat
cmp
add
popf
lret
popa
call
rcl
aad
lods
scas
push
inc
inc
daa
add
repz
mov
jmp
insb
int
sbb
push
mov
pop
stc
mov
gs
mov
mov
divb
loope
lret
xor
int
sub
sbb
add
cmp
ja
adcb
repnz
outsb
sbbb
sub
push
dec
sbb
add
add
movsb
stos
pop
das
mov
push
jbe
sbb
sti
mov
inc
inc
in
and
ljmp
test
mov
mov
cs
sub
ss
sti
repnz
mov
jp
pop
sbb
mov
lret
adc
pop
inc
dec
bound
dec
add
aad
ret
mov
test
lock
je
loop
in
pusha
sub
mov
ds
test
jmp
cmp
cs
mov
aas
ss
dec
mov
hlt
scas
incl
push
mov
pop
repz
iret
jno
into
adc
mov
mov
push
xchg
jge
and
cmp
and
shl
and
out
je
pop
mov
jecxz
mov
imul
mov
icebp
data16
fdivs
mov
mov
mov
push
add
xchg
or
int
push
data16
add
in
dec
jle
mov
push
fiaddl
xor
inc
lret
lock
xor
sahf
adc
pushf
in
lods
mov
xor
add
out
jo
push
push
and
push
ljmp
pop
mov
stos
lret
orb
jo
cltd
out
aas
cwtl
sub
pop
mov
not
pusha
in
cmpsl
insb
dec
movsb
repz
fsubs
pop
punpckldq
cmpsl
pop
pushf
sub
test
push
std
lea
int
xchg
xchg
pushf
arpl
add
inc
inc
mov
jno
or
add
push
enter
jle
movd
hlt
lcall
ss
xchg
xor
mov
xchg
aaa
ds
and
andb
pushf
mov
add
cwtl
sbb
cld
nop
mov
jge
sbb
test
imul
test
ljmp
xchg
mov
inc
addr16
into
pop
or
vmovdqu
add
mov
pop
gs
cmp
inc
inc
pop
xor
pop
fwait
xchg
mov
mov
push
arpl
icebp
xorb
dec
dec
imulb
cmpb
cmovp
rcl
cs
cmp
push
stc
adc
pop
fiaddl
inc
pushf
dec
inc
loope
sub
loopne
sub
cmp
push
addb
icebp
pop
xor
aas
fsubrs
andl
pop
jp
add
scas
ja
adc
cld
ds
outsl
add
and
repz
cmp
mov
adc
cmp
and
das
aam
fstpl
and
push
add
jecxz
mov
cmp
lcall
dec
pop
jo
cmc
sub
ss
cmp
pop
sbb
imul
push
dec
adc
mov
and
addb
sub
mov
cmp
inc
jne
jnp
adc
test
cwtl
mov
repnz
mov
add
ret
cltd
jno
loopne
push
shll
and
pop
enter
sub
push
ja
roll
nop
or
ja
xchg
xor
adc
clc
call
mov
lret
mov
jne
outsb
fdivl
popf
jmp
or
xor
idivb
fs
jb
jle
pop
and
imul
ficomps
xchg
push
mov
xchg
sub
js
xchg
jp
addr16
and
pop
das
in
outsl
xchg
dec
push
shlb
loopne
aam
fsubrl
cmp
push
xchg
sbb
mov
lahf
push
inc
jecxz
cmp
insl
pusha
push
sbbl
mov
xor
adc
dec
cmpl
hlt
dec
mov
out
in
mov
test
fsts
sar
push
xchg
loop
mov
ljmp
jge
jne
cmp
aas
fildll
mov
push
sbb
jp
fistpl
mov
imul
xchg
xor
inc
cmp
pop
outsb
call
mov
pop
icebp
rcl
pop
sti
sub
or
cltd
inc
imul
fsubs
pop
xlat
stos
sbb
inc
adc
sarb
or
pop
mov
jno
sub
int3
arpl
jno
add
adc
mov
pop
dec
push
push
xchg
or
sub
adc
jns
mov
ljmp
mov
sbbl
clc
mov
sbbl
jg
cmp
and
fcmove
xchg
pop
xchg
jp
adc
sub
mov
subb
dec
test
add
into
mov
sub
xor
sub
fdivrs
inc
out
enter
test
testb
sarl
repnz
imul
sbb
loope
push
cmpsl
cmp
xchg
xchg
jnp
pusha
ja
movsl
mov
pop
mov
xchg
cld
in
int
mov
sub
not
xchg
add
ss
xchg
or
dec
mov
mov
or
add
inc
mov
mov
cld
and
mov
sarl
adc
test
dec
stos
add
pop
adc
cmp
add
cmp
jae
mov
fdivs
repnz
rol
movb
sub
xor
fnstenv
stos
cmpsb
cwtl
mov
or
aam
cmp
iret
and
adc
scas
dec
push
pusha
insb
in
lds
hlt
lds
decl
ret
stos
cmp
les
clc
loope
jmp
pop
out
je
adc
or
icebp
sub
mov
push
les
test
push
jbe
cmc
xor
sbb
lahf
add
cmp
sub
mov
stos
outsl
cmpl
bound
test
add
test
test
sub
pop
popa
aam
call
scas
jl
sbb
push
adc
cs
fadds
xchg
inc
popf
cwtl
lock
pop
daa
sub
mov
mov
xchg
xchg
lea
or
ret
push
fwait
pop
push
inc
gs
lods
sahf
inc
jbe
aaa
jnp
dec
popf
scas
cmp
lret
pop
scas
push
pop
in
mov
imul
xchg
or
ja
shlb
insb
call
push
sti
movsl
aam
mov
lods
mov
or
ret
mov
cmpsb
mov
pop
and
push
jns
stos
mul
mov
ss
mov
or
mov
mov
movsl
mov
xor
mov
xor
mov
sbb
pop
fidivl
and
push
popa
sub
jae
andl
arpl
leave
test
cli
inc
jge
push
pop
add
xchg
jecxz
cmp
shl
hlt
sbb
sbb
push
pusha
or
iret
hlt
inc
jns
sub
jl
call
sbb
jle
shll
fiadds
mov
inc
mov
std
loopne
outsb
test
or
inc
call
nop
dec
clc
dec
sub
mov
in
xor
fbld
push
xor
notl
test
shlb
jns
jb
cmp
fcmovnbe
jecxz
enter
pop
gs
mov
mov
push
cmp
mov
ja
enter
cmp
lret
or
xlat
dec
jno
lret
or
rolb
jecxz
inc
dec
lcall
or
mov
pop
push
mov
or
outsl
cmpsb
loope
xor
lret
dec
shlb
movsb
push
pop
pop
std
int
xor
cwtl
stos
mov
std
or
orl
jb
cmp
hlt
adc
bnd
inc
xor
test
ss
mov
lahf
in
out
add
jno
in
movl
mov
xchg
jne
sbb
pop
out
cwtl
jns
dec
insb
jns
pop
scas
testl
in
repnz
jbe
push
mov
xor
or
paddq
sub
fcoms
mov
movsb
cmpsl
jae
imul
cmp
lods
or
scas
js
add
ret
mov
jne
pusha
push
mov
data16
imul
repz
fadd
xor
dec
xor
add
xor
pop
movsl
cltd
mov
cmp
loopne
sub
out
mov
lret
lods
dec
pushl
int3
sti
xchg
imul
pop
mov
fwait
call
adc
aam
fidivrl
sbb
shlb
in
repnz
pop
movl
push
adc
sub
add
sti
cmc
daa
cmpsl
gs
pop
push
hlt
mov
push
xchg
adc
push
insl
sbb
outsb
jae
add
adc
ret
adc
test
jecxz
inc
jno
cmp
adc
and
into
adc
fcoms
call
insl
jge
jnp
jnp
sbb
inc
fcmovne
stos
xor
add
pop
fstps
jl
sti
ficoms
cld
dec
sti
stc
jb
loop
cli
cld
lods
dec
stos
jg
add
leave
stos
aam
stos
cmp
int3
pop
mov
push
mov
jmp
imul
push
fstps
jp
cmc
in
out
adc
adc
dec
mov
testl
addr16
push
sbb
lahf
xlat
sbb
lcall
jbe
fcoml
dec
or
pusha
xor
cmp
jecxz
dec
xchg
mov
jb
sbb
bnd
push
roll
mov
adc
and
andb
loope
bound
cmpsl
mov
fs
sbb
mov
dec
push
or
aad
add
addr16
pop
pop
sub
rclb
jl
cmc
push
je
jbe
out
ret
movsb
add
sbb
rclb
das
rclb
aam
xor
movsl
idivl
scas
outsl
dec
sub
jne
push
bound
pop
fsubs
and
les
jno
mov
lods
test
xchg
je
add
stos
push
jmp
imul
pop
mov
xchg
sub
fwait
sbb
xor
cmpsl
push
lock
mov
in
add
clc
sub
add
pop
mov
jecxz
or
int3
mov
push
je
stos
int
cmpl
int3
pushf
adc
rolb
sub
leave
call
or
insl
sbb
xor
je
jno
mov
xor
movsl
jecxz
dec
test
lret
mov
daa
pop
in
div
repnz
test
icebp
mov
jmp
lock
pop
test
adc
fmuls
call
pminub
inc
mov
jns
andb
or
shr
jne
testb
pop
or
movsl
shlb
mov
cld
cmp
or
je
pminub
not
inc
xchg
or
jne
or
sbb
lods
js
mov
jle
xchg
fcmovb
push
clc
or
xchg
mov
sbb
fisubs
xchg
lods
xchg
cmpsb
pop
pusha
xor
out
loopne
scas
icebp
add
loope
mov
ss
push
int
cmp
ret
inc
in
lcall
faddl
inc
or
cmpsl
add
push
mov
in
cltd
aaa
sub
fs
hlt
pop
popa
dec
jnp
popf
adc
cld
and
cmp
lret
pop
or
sub
loopne
mov
dec
add
inc
mov
add
outsl
repnz
gs
ret
cld
out
mov
mov
jmp
adc
cmpsl
outsl
or
aad
popa
andb
mov
sbb
pop
jb
push
loop
jp
cld
xor
xor
xchg
orb
xor
add
test
mov
xor
fldpi
mov
ss
xchg
mov
pop
mov
fsubrs
mov
lods
ljmp
rorb
jp
jno
push
adc
mov
and
mov
movsl
in
stos
add
pushf
sbb
inc
xor
adc
jge
shl
inc
rcl
xchg
jecxz
xchg
inc
rorb
into
xor
pop
lods
pop
fisttpl
adc
inc
test
adcl
xchg
aaa
imul
out
add
fldl
imul
fld1
mov
pop
mov
test
test
xor
dec
rorl
and
jp
andl
ficoms
sub
aas
sub
into
clc
ds
xchg
mov
cmp
pop
out
dec
std
pop
cld
ljmp
mov
inc
jg
push
add
addr16
jp
iret
jecxz
scas
imul
pop
jle
adc
icebp
push
inc
insb
add
or
mov
fdivrl
in
pop
push
in
cmpsb
mov
mov
adc
xchg
hlt
push
push
pop
neg
mov
cmp
pop
nop
dec
or
sbbl
or
xchg
lret
or
mov
scas
ja
enter
daa
push
aas
or
sbb
xchg
or
xor
and
mov
add
add
rclb
xchg
or
jo
sub
jge
bound
std
clc
mov
cmp
push
rcrl
addr16
push
test
xchg
aas
ljmp
mov
ljmp
lods
test
lret
idivl
mov
mov
loopne
sbb
out
call
les
dec
xchg
je
outsl
fxch
mov
scas
dec
or
jg
xchg
adc
vmaxpd
mov
shrl
mov
jmp
dec
test
jmp
mov
fnstsw
scas
mov
jo
add
inc
int3
inc
mov
js
sbb
mov
mov
push
in
inc
xchg
rorl
or
icebp
lcall
daa
adc
push
repnz
in
cld
frstor
leave
lret
push
or
es
lds
lahf
sarl
sub
xlat
mov
or
pop
jne
lret
sbb
daa
dec
test
adc
in
das
lcall
add
insb
sub
push
arpl
and
xchg
and
stc
sbb
into
in
fiaddl
pop
adc
inc
push
popa
inc
pop
out
jmp
pop
out
outsl
adc
xor
mov
into
push
add
jo
nop
cld
and
cmp
cld
mov
jmp
dec
add
xchg
xchg
dec
nop
fcomps
jo
lcall
xchg
lret
aad
or
xchg
mov
sbb
mov
pop
mov
call
xchg
daa
into
adc
pop
loopne
hlt
push
aas
jne
dec
cwtl
je
xor
push
sahf
add
dec
enter
je
mov
adc
or
test
inc
push
aam
mov
lret
enter
cld
out
fwait
xor
rcrl
inc
aas
test
sti
mov
js
cmc
lcall
sub
in
jmp
add
mov
cmp
in
mov
neg
inc
adc
sbb
pop
cli
inc
xchg
lea
testl
mov
xor
imul
js
adc
mov
loop
mov
adc
jmp
lods
jmp
fbstp
out
sbb
dec
repnz
xchg
stos
je
filds
pop
fcmove
repz
jno
cwtl
pusha
cmc
and
test
or
fs
add
xorl
fimuls
lcall
xor
sbb
std
popa
cmpsb
xchg
jecxz
adc
ret
aad
icebp
insb
out
movsl
pop
rorb
loop
adc
call
pop
arpl
xchg
jb
dec
sbb
std
pop
icebp
pop
scas
movsl
cld
aas
mov
lret
xlat
inc
sbb
shlb
add
inc
sub
rcl
jecxz
jp
xor
rcr
mov
xor
xchg
or
ljmp
fstpl
icebp
mov
cmp
jge
push
fstps
sarb
push
jp
lds
popa
mov
sti
xor
add
xchg
ret
dec
cmp
clc
call
cmp
push
push
sub
inc
fdivl
pop
pop
pop
outsl
js
ja
mov
pushf
shrl
fsubs
repnz
fnstcw
cmp
ds
xor
pop
sub
xchg
sbb
repz
stc
ret
mov
mov
leave
pop
inc
insb
and
shll
fstpl
add
call
jmp
push
addb
fildl
hlt
jmp
sbb
and
dec
push
push
negb
xor
mov
lret
notl
call
in
adc
sbb
cwtl
pmullw
jp
add
loop
in
int
ss
cld
bound
mov
out
add
add
push
jge
out
stos
mov
cltd
xor
cmc
loope
adc
imulb
xor
inc
mov
xor
add
lock
in
adc
pop
xor
pop
lret
cmp
les
ret
leave
xor
and
and
adc
jl
and
fildll
jbe
or
inc
inc
sbb
push
in
repz
sub
imul
mov
jae,pt
enter
movsb
jmp
sub
or
les
in
adc
dec
adcl
add
inc
subb
pop
cmpsb
stc
or
cld
pop
fsubl
xchg
pop
cmp
test
sbb
push
imul
add
popl
xchg
jl
push
xlat
mov
inc
push
dec
int
add
aas
pop
mov
push
xchg
sbb
jmp
je
cwtl
stos
jnp
ss
xchg
or
mov
fisttpl
or
inc
cwtl
dec
jecxz
movsb
mov
push
sbb
push
sbb
jg
sahf
data16
dec
push
outsb
mov
push
lds
in
sub
lret
dec
ss
mov
outsl
js
push
xchg
mov
test
push
lcall
fdivrl
cwtl
inc
mov
jbe
sti
push
sub
fwait
aas
orb
stos
mov
rolb
loop
jge
cltd
leave
jmp
mul
out
stos
int
incl
dec
lods
mov
mov
pop
das
jnp
insb
xor
dec
lods
add
pop
sbb
cmp
std
popa
pop
test
xor
ja
dec
movsb
mov
inc
rol
xchg
adc
fnstenv
aaa
sbb
aaa
jb
mov
inc
out
lock
sbb
hlt
in
mov
repz
mov
dec
testb
and
call
pop
std
jl
subl
pop
xchg
inc
outsw
out
xor
inc
mov
cli
aam
insb
dec
daa
cmp
and
bound
push
xchg
outsb
mov
sbb
lahf
pop
aad
pop
push
pop
sbb
jp
sbb
mov
fldcw
xchg
rorl
in
jae
sub
sub
push
mov
iret
pop
inc
mov
popa
cltd
outsl
cld
jo
shrb
pop
sub
push
xchg
jnp
adc
mov
lahf
cmp
mov
inc
push
jns
in
or
jae
lret
xor
sub
cmp
xchg
add
mov
cwtl
xchg
inc
mov
add
out
add
pop
faddl
xlat
push
add
loop
iret
outsl
enter
mov
shrb
xchg
lods
jp
add
movsb
ja
dec
sbb
stc
sub
xor
xchg
fcmovnbe
jbe
cmc
cmp
je
push
add
sahf
push
iret
mov
cmp
xlat
inc
and
out
dec
gs
dec
mov
ret
push
es
xchg
xchg
cmp
pusha
sub
xor
mov
stos
movl
fdivs
andl
xlat
jle
mov
add
into
xor
inc
int3
lock
int
mov
fiaddl
adc
jne
jnp
cmc
movsb
inc
int
fmull
dec
hlt
mov
cmovno
pop
push
jb
and
sbb
out
jbe
mov
stos
addr16
sbb
inc
xchg
jno
out
or
int
push
mov
test
repz
dec
pop
mov
xrelease
add
mov
xor
pop
insb
in
popf
add
push
faddl
popa
sbb
and
in
mov
addr16
pop
stc
lret
mov
cmp
sbb
lret
mov
sahf
dec
rcrb
in
es
ja
divl
cmpsl
fs
ja
or
lods
jnp
xor
add
xlat
pop
adc
leave
lods
fldcw
push
and
mov
xor
mov
xor
fwait
insl
outsl
xor
lahf
outsb
pop
jp
iret
cmp
push
lea
jp
rcrl
lock
out
jecxz
in
cld
insl
movsl
pop
and
mov
fbstp
jae
push
xchg
cmp
jnp
mov
and
pop
clc
shll
gs
push
push
cld
jp
pop
push
pop
lret
aaa
mov
shlb
aad
jne
daa
cs
mov
inc
mov
test
lock
fisubl
pop
add
mov
xor
adc
leave
fstl
cli
fsubr
shrl
lret
enter
push
js
dec
mov
lcall
inc
fadds
or
inc
mov
pop
in
stc
sub
lock
adc
jle
pop
sbb
push
xchg
sub
jmp
mov
std
xchg
loopne
out
dec
mov
or
fcmovnbe
std
and
mov
incl
lret
xchg
loop
adc
mov
xchg
push
in
pop
push
push
lds
jo
sbb
call
inc
es
sahf
xor
push
mov
prefetch
out
dec
fs
fbstp
sbb
dec
cld
std
pop
imul
jecxz
jns
in
add
out
sbb
je
push
push
arpl
and
mov
adc
sbb
shrb
mov
dec
and
dec
sti
divl
add
inc
jb
loopne
sbb
sub
fcomp
xchg
or
mov
mov
leave
mov
in
pop
js
adc
dec
insb
push
push
dec
adc
push
mov
add
dec
scas
mov
in
in
rcrb
jp
hlt
mov
add
imul
test
pop
movsb
sbb
lahf
pop
add
out
xchg
dec
sbb
mov
ja
aaa
mov
and
or
gs
xchg
or
das
cmpsl
lret
push
cmc
push
fmul
cmp
mov
cmp
inc
int
jnp
mov
xchg
rcll
push
sbb
sar
addl
xchg
pop
test
inc
sarl
jo
out
aas
movsl
int3
sbb
cmp
les
dec
xchg
into
out
andl
mov
negl
cmpl
cmp
mov
sub
inc
in
push
mov
gs
pop
or
sbb
data16
sub
inc
adc
mov
sbb
lock
fimuls
add
dec
jg
cmp
push
jg
icebp
fcomps
nop
jge
fwait
movsb
and
bound
pop
push
xchg
int3
or
push
cmc
xor
or
and
movsb
push
push
fdivrs
imul
push
pop
jge
or
or
pop
repnz
in
mov
movsb
mov
pop
fsts
dec
jnp
mov
mov
mov
fsts
mov
add
andl
test
push
ja
mov
add
aas
ret
xchg
cld
push
test
fsts
das
scas
popa
xor
cmp
inc
mov
movsl
sahf
jge
sub
outsl
daa
cwtl
push
hlt
movsl
sbb
mov
gs
mov
xor
push
dec
outsl
inc
repz
or
pop
xor
push
das
pusha
clc
xor
pop
push
xchg
out
push
lret
rcrl
push
mov
pop
cmovp
inc
pop
aad
jecxz
aam
into
inc
call
mov
icebp
fiaddl
scas
movsl
test
clc
or
ds
sbb
mov
xchg
outsb
pop
push
xchg
pop
loop
test
out
vrsqrtps
lret
mov
mov
cmp
jne
jl
or
or
mov
cmp
mov
outsl
repz
or
pop
in
gs
push
ret
testl
call
and
add
inc
sbb
out
hlt
fisttps
add
bound
sbb
dec
sub
mov
xchg
sub
jo
cmc
fs
adc
loopne
mov
xor
les
clc
mov
ja
pushf
imul
test
cmc
movsb
dec
and
xor
xchg
imul
int
into
bound
pop
lret
inc
in
addl
into
sbb
test
sbb
pop
xchg
nop
cmc
dec
sbb
mov
popa
cmp
cltd
rcrl
mov
rol
xchg
pop
cli
test
mov
in
xor
lds
xchg
dec
or
jae
push
mov
adc
cmp
mov
stc
push
out
mov
test
add
jp
fisubs
mov
movsb
and
jle
jl
inc
jb
sub
test
push
stos
jg
out
mov
cmp
data16
jnp
scas
dec
mov
inc
movsb
add
scas
fcmovu
fwait
xor
test
stc
fwait
push
add
dec
divb
icebp
bnd
xor
js
mov
insl
mov
add
lods
dec
fs
and
sub
in
icebp
aad
cmp
pushf
dec
sahf
fs
fmuls
cmpl
bnd
and
daa
repnz
and
inc
mov
xor
or
cmpsl
mov
call
cmpsb
cmp
xchg
fstpl
stos
shll
cmp
jmp
sti
and
bswap
dec
mul
mov
jle
xchg
mov
jg
sub
mov
ret
sub
or
inc
loop
mov
inc
mov
jno
in
insb
jge
jbe
mov
add
xor
adc
cmp
sbbb
mov
imulb
loopne
cmp
das
in
mov
hlt
loope,pn
jns
test
push
xchg
ja
mov
cmp
int
push
push
cltd
inc
inc
xchg
dec
dec
xchg
mov
or
fisubrs
mov
xor
loop
cld
xor
mov
push
push
ds
leave
testl
and
iret
mov
sbb
and
cmpsb
dec
mov
mov
dec
push
sbb
mov
int
outsb
js
xlat
dec
test
popf
jb
cmp
clc
lret
xor
es
popf
ljmp
xor
mov
adcb
ds
aad
std
sbb
jle,pn
lea
dec
insl
mov
addl
fstpt
cli
addl
pop
pop
push
jae
loopne
dec
push
xor
out
jbe
push
add
out
push
jmp
push
dec
scas
pop
lods
sub
mov
je
adc
xchg
push
xchg
addr16
scas
mov
xchg
imul
in
aam
lea
inc
ds
out
xor
setl
mov
and
or
xchg
sbb
fwait
push
push
out
add
cmp
cmp
dec
jmp
sti
rcrl
repz
scas
lods
test
ds
das
or
lret
lods
js
notl
inc
add
out
dec
jmp
outsb
lcall
add
or
sbb
movsw
lahf
mov
inc
sub
pop
push
imul
jb
sarl
sub
dec
push
adc
fisubs
push
mov
stos
insb
test
jo
xor
jg
and
aaa
sub
divl
push
stos
add
cwtl
les
sub
xor
mov
mov
daa
out
test
enter
sub
shlb
mov
xor
fsubs
sub
ret
sub
ror
jns
lahf
call
mov
cld
add
lock
xor
and
repz
cmp
sbb
out
cmpsl
add
movsb
out
enter
xchg
sub
in
sti
jecxz
bound
cmpsl
xchg
call
shrl
jbe
insb
push
roll
into
rclb
dec
mov
icebp
push
jbe
insl
in
ficomps
cmp
jae
in
xchg
aaa
xchg
pop
xchg
xchg
fidivrs
jno
cmp
lds
lret
adc
mov
mov
dec
adc
enter
inc
xor
loop
add
or
jne
jne
cmp
dec
arpl
pusha
mov
arpl
out
outsl
push
lret
sahf
je
test
sbb
mov
adc
inc
dec
cmp
xchg
popa
push
mov
stos
lret
cmp
jbe
shll
pushf
sbb
and
decb
scas
xchg
jl
sar
je
adc
jno
rolb
pushf
aam
jg
fldenv
fisubs
es
test
mov
xchg
mov
iret
lds
arpl
inc
into
sbbb
sub
mov
add
jl
jae,pn
mov
jnp
jmp
les
pop
jmp
repnz
out
jnp
lahf
ljmp
decl
mov
sub
repnz
mov
sti
out
or
ret
xlat
mov
mov
hlt
cmpl
rol
or
mov
xchg
jae
dec
fiaddl
pop
filds
repnz
out
pusha
mov
pop
div
in
pop
mov
adc
push
push
das
push
cmp
push
mov
pushf
fwait
cmpsl
test
xor
outsb
cmp
pushf
ds
test
fildll
xor
push
loop
jne
pop
ffreep
inc
xor
xor
movsb
pop
mov
call
xchg
dec
sahf
shll
mov
fisttps
dec
pop
enter
icebp
mov
imul
andb
insl
orb
repz
scas
rep
xor
ljmp
xor
cmp
aad
jle
cmpl
pop
adc
push
cmp
jb
rcrl
divl
adc
jp
cld
movsb
cmp
xchg
jb
movsb
pop
mov
jle
push
or
push
sub
cli
nop
int
dec
sbbb
dec
inc
push
xchg
pop
mov
popf
lds
xchg
sub
xor
mov
arpl
cmp
ficompl
jmp
xchg
std
inc
mov
jb
sub
inc
dec
jp
add
das
clc
push
popf
addr16
pop
movsb
push
movsl
or
iret
outsb
int3
xchg
repz
jns
lea
aad
popf
mov
mov
or
arpl
roll
or
aad
dec
jno
stos
pop
push
mov
imul
inc
push
mov
mov
cmc
inc
mov
cld
insl
xchg
cmc
inc
aad
sub
nop
xchg
pop
aad
mov
ljmp
loopne
add
or
cmpl
and
inc
xchg
fs
and
pop
enter
pop
in
lock
jae
add
xchg
inc
inc
stos
lcall
out
popf
jo
or
imul
mov
dec
arpl
add
mov
jmp
mov
jae
ffreep
pop
shlb
ret
mov
cwtl
add
aam
fsubrs
xchg
test
pop
jne
imul
sub
mov
clc
int3
mov
fisttps
je
sub
stos
and
adc
lret
cwtl
scas
jge
out
adc
enter
jnp
cmp
shlb
sbb
xor
shll
lret
movsl
jb
cmpsl
sarb
cmp
inc
cmp
or
gs
jmp
pop
stos
and
mov
jle
popa
mov
shrl
dec
adc
das
shlb
stos
test
push
cmp
add
insl
cmp
lcall
je
pop
adc
xchg
bound
adc
xchg
jmp
and
jmp
jle
daa
push
and
xchg
ds
imulb
push
push
cmp
mov
pop
loopne
in
push
call
adc
dec
into
adc
mov
and
cmp
xor
sub
xlat
pop
scas
cld
mov
es
dec
inc
lret
sbb
movsb
repnz
push
xchg
sub
inc
dec
prefetchw
push
inc
xlat
inc
fsubrl
fcompl
movsb
xor
pop
mov
mov
orl
sarb
mov
cli
int3
cmp
push
repnz
jp
outsb
lea
cmp
pop
insl
fldcw
fs
inc
cmp
cmp
into
mov
or
sbb
xor
jp
sarl
cmp
mov
fld
out
cmp
add
xchg
imul
cmpsl
outsl
scas
aaa
rol
ss
iret
es
xor
cmp
fists
jne
pop
ja
inc
push
xchg
fcmovnbe
mov
sbb
pop
add
mov
mov
xor
pop
jmp
lods
mov
mov
pop
out
xchg
fnstenv
loope
inc
cmpsb
sbb
mov
data16
stos
mov
sub
xchg
cs
pop
repnz
loopne
push
mov
sub
lods
add
outsl
xchg
pop
jno
js
subb
push
add
mov
std
and
add
int3
push
fcmovnu
or
lds
lods
push
mov
popl
nop
sbb
pop
scas
cmpsl
xchg
push
and
or
movsl
pop
push
or
cmpsb
ss
mov
jae
dec
test
xorl
in
addr16
sub
push
out
test
lret
insl
out
popa
sbb
pushf
outsl
dec
xor
mov
in
and
mov
repnz
clc
ljmp
or
test
or
or
rorl
jo
xchg
add
sub
ficompl
dec
fnstcw
mov
xor
mov
push
bound
lock
xor
leave
inc
mov
cmp
mov
add
xchg
test
gs
stc
arpl
in
inc
inc
pusha
xchg
mov
mov
sub
fstl
add
cmc
cmp
pusha
push
mov
add
xor
pop
and
push
mov
inc
out
jl
push
mov
lock
adc
or
into
jae
std
cmp
imul
mov
xchg
mov
dec
jnp
inc
or
mov
aam
xchg
xor
dec
push
int
pop
mov
jb
pop
sbb
test
shll
xor
addr16
dec
push
or
inc
mov
stc
add
xor
sbb
sub
test
mov
mov
sub
or
arpl
add
bswap
dec
movsb
out
outsl
ljmp
xor
adc
aas
insb
sbb
inc
insl
popf
lret
icebp
xchg
cmp
test
fldl
sti
in
or
movsl
std
movsl
add
ja
das
sbbl
loop
add
fstps
cltd
clc
push
das
scas
cmc
pop
dec
mov
fwait
inc
adc
or
scas
clc
call
sbb
mov
aad
or
mov
pop
dec
add
daa
sbb
sbb
sub
sbb
ja
stos
xor
nop
mov
jmp
jnp
popl
rolb
adc
cwtl
mov
pop
loopne
js
mov
xchg
rclb
jge
dec
or
fwait
js
inc
pop
and
mov
jmp
popf
cwtl
out
and
pop
psubq
sbb
jle
test
mov
jle
pop
ja
pop
sub
jo
xchg
add
adc
sub
enter
ljmp
mov
sbb
popf
cmp
pusha
call
adc
fxch
imul
lods
jmp
xchg
sub
jl
ja
popa
pop
push
addr16
negb
cmp
insl
xor
mov
aas
inc
add
cmc
scas
aad
inc
cmp
adc
mov
add
imul
ja
add
push
sbb
in
popa
fwait
mov
leave
idivl
imul
or
mov
aam
mov
es
sbb
cmpsl
cmp
in
notb
add
cli
fsts
fwait
add
pop
xor
or
mov
loope
pop
pop
das
es
fists
cli
xor
scas
lds
test
jecxz
int3
xor
mov
lock
pop
lds
inc
pop
in
xor
popf
or
adc
rolb
rcrb
loope
rol
xor
cmp
push
inc
ror
in
push
movb
sub
loope
dec
xchg
je
sarb
paddb
or
push
cmpsb
lock
push
stc
sub
sub
movsb
mov
xchg
je
add
xchg
loop
xchg
mov
das
ljmp
mov
mov
pusha
pop
aam
jno
pop
out
jecxz
lcall
insl
std
jne
lret
das
sub
loopne
leave
hlt
sbb
out
scas
add
mov
mov
xor
loopne
push
add
mov
mov
dec
js
dec
and
inc
jge
jg,pn
fldenv
xor
cli
pop
sti
jl
dec
out
mov
cmp
loope
ret
xor
ds
ds
out
jne
mov
jle
ret
xchg
testl
decl
int3
js
ss
das
stos
mov
dec
cs
arpl
lds
dec
sub
leave
push
inc
xor
push
adc
mov
in
in
sub
les
insl
aas
sbb
xchg
repnz
adc
mov
lods
pop
jmp
mov
xor
lret
or
pusha
push
fstpl
fsubrl
add
sub
jp
hlt
ret
push
outsb
aam
insl
jae
cmp
ds
pop
push
aad
mov
inc
pop
xchg
iret
pusha
sbb
mov
andl
insl
adc
insb
sub
mov
idiv
xchg
sti
push
lods
jl
jne
loopne
repz
add
popf
std
xor
fimuls
mov
or
sbb
loopne
lds
xchg
jl
push
sub
dec
mov
inc
movsl
aaa
shrl
test
fldcw
push
mov
mov
insl
ret
cs
sub
inc
lret
repz
stos
lahf
stos
rorl
arpl
jne
pusha
push
inc
pop
push
jl
mov
pop
scas
push
pop
push
inc
ss
aad
test
dec
add
cmp
adc
lea
test
dec
xchg
xchg
add
mov
mov
jae
inc
scas
ja
insl
adc
pop
insb
adc
xchg
lcall
repnz
mov
outsb
imul
push
push
or
xchg
out
aad
and
pop
mov
inc
sahf
push
movsl
lret
test
out
dec
lcall
push
inc
mov
test
jmp
xchg
jl
out
mov
or
push
push
sub
mov
iret
ljmp
sub
add
mov
jmp
xchg
pusha
je
pop
cmp
aam
dec
push
push
test
inc
ficoms
adc
adc
cmp
sbb
leave
subb
and
dec
andb
repnz
in
pop
in
pop
das
cmp
xchg
into
jl
popa
fimull
incl
stc
seto
fldt
xchg
ret
fwait
and
adc
jo
and
pushf
dec
test
jge
testb
or
inc
and
in
mov
shl
cmp
js
negb
mov
popf
cs
push
mov
mov
dec
jge
js
lcall
xor
jecxz
int
dec
std
cmp
sbb
xchg
aas
push
and
es
dec
add
sbb
cwtl
fiadds
xor
les
adc
or
add
rorl
fsub
or
xchg
ret
mov
push
or
dec
icebp
xchg
mov
push
dec
loopne
cmpsl
out
or
cli
test
mov
fs
jle
xchg
pusha
add
arpl
cmp
or
jae
insb
repnz
jo
and
mov
mov
test
mov
cltd
cmpsb
add
cmp
test
fs
xor
les
mov
jno
roll
add
xchg
xor
frstor
xchg
push
jb
push
or
add
pop
dec
ljmp
cmp
sbb
popf
mov
mov
sub
xchg
mov
cmp
xchg
roll
adc
push
add
mov
stc
or
ds
cli
mov
adc
pop
jae
fucomip
fistl
and
jno
sbb
xor
out
mov
pop
sti
fwait
sub
lea
mov
loop
pop
imul
rorl
fs
shl
adc
pushf
sbb
or
daa
xor
or
lock
adcb
jne
adc
out
or
movsl
fcomps
inc
imul
sbb
ds
in
push
sbb
add
dec
xchg
aaa
scas
jle
out
jae
in
test
dec
cltd
in
fs
add
lret
les
outsb
add
insb
cmpsl
pushf
mov
cwtl
enter
mov
out
loop
jg
test
daa
push
shrl
jb
fdivrl
push
jg
pushf
cmp
jns
call
divb
xor
pushf
inc
adc
popf
outsb
cmp
in
out
int
xchg
pop
xchg
and
mov
mov
lods
xchg
dec
and
idivl
xlat
fld
adc
push
or
out
or
lods
mov
xchg
and
pop
mov
sub
test
adc
pop
dec
mov
fnstcw
cmc
jae
stos
out
pop
or
xchg
jmp
push
or
les
cmpsb
dec
fldenv
hlt
scas
pop
mov
call
out
jmp
stos
into
dec
enter
or
aam
pushf
imul
xchg
xchg
mov
je
pop
mov
jecxz
adc
sahf
and
clc
js
daa
fs
lret
arpl
and
cmp
jle
xor
test
sbb
rclb
pop
add
or
mov
stos
out
add
pop
inc
adc
lret
jge
aam
imul
movsb
pop
or
pop
or
gs
pop
cmp
pop
pop
movsl
lcall
xor
aad
jmp
add
negb
les
mov
push
notl
popf
xor
mov
aaa
lods
dec
fmull
pop
mov
xchg
cmpsl
add
pop
dec
aad
pop
cs
adc
sahf
jmp
fisttps
xorl
test
mov
or
push
xchg
pushl
jno
pop
or
leave
mov
xor
push
sbb
xchg
or
mov
pop
mov
push
repnz
mov
insl
mov
push
cmpsb
repz
and
jmp
in
jbe
in
mov
jnp
jnp
leave
fs
arpl
push
lock
jl
arpl
pop
insb
xor
js
jno
mov
sarb
jbe
xor
pusha
jmp
pop
sti
xchg
aad
es
xchg
loop
mov
push
xchg
pmulhuw
pop
stc
push
pop
xchg
imul
test
xchg
or
cmp
adc
mov
mov
mov
dec
fpatan
enter
add
addb
push
pop
mov
out
add
negl
cmp
sub
adc
cmp
test
cs
imul
cwtl
ljmp
scas
dec
cmp
jb
sbb
out
mov
sub
add
push
and
or
lods
lret
adc
cli
fs
pop
stos
or
into
sbb
orb
add
jne
ss
aad
and
xchg
mov
or
aam
jmp
dec
lds
jp
lock
sbb
sbb
cmc
jle
xchg
adc
inc
sub
and
or
idivb
and
xchg
mov
lahf
icebp
testl
addr16
ds
jo
dec
mov
push
push
lods
lret
lods
inc
je
lock
sbb
lods
lahf
out
nop
aam
dec
aam
add
lock
xchg
mov
test
les
shl
mov
xor
or
jbe
mov
xchg
cmp
jle
add
andb
mov
jmp
dec
pushf
pop
stos
lods
inc
lock
sub
inc
push
jg
cmpsl
seta
inc
jmp
jmp
inc
adc
mov
push
push
push
xchg
out
mov
lcall
gs
cli
pop
aaa
stos
fisubl
mov
fildl
out
js
hlt
xor
cmp
push
out
push
cmpsb
mov
mov
loopne
cmpsb
out
mov
mov
out
mov
or
sbb
negb
mov
into
dec
out
in
mov
leave
int
xor
dec
pop
lock
sarb
int3
jne
xchg
in
push
shrl
inc
notl
data16
cmpsl
imul
jle
dec
mov
dec
mov
xor
stc
ficoms
aad
fisttpl
sbb
inc
popa
fcomp
mov
shrl
inc
jp
pop
jnp
lods
sti
sbb
mov
lcall
mov
and
sbb
add
cmp
mov
dec
jns
shl
and
call
jae
fsubs
jns
in
inc
jl
ljmp
adcl
pop
inc
imul
or
pop
sti
ret
in
push
xchg
outsl
sub
pop
fdivrl
sub
out
cmpsl
out
pop
cli
jmp
ret
lods
mov
jb
loopne
sbb
and
ret
addr16
sub
test
imul
sbb
loop
data16
fs
test
roll
ficomps
mov
mov
mov
call
je
and
ror
ds
jnp
ret
push
aaa
xor
iret
mov
cli
pusha
inc
jge
imul
ret
push
cs
mov
ret
int3
out
testb
add
dec
loopne
movsl
push
mov
movntps
cmp
sub
test
or
in
jl
mov
lock
mov
cmp
gs
orl
push
jecxz
add
lock
push
negl
xlat
sbb
xchg
out
and
xchg
add
jne
jbe
xlat
lret
xchg
int3
aas
lds
nop
cli
gs
xchg
outsl
push
ss
lret
lock
nop
push
out
sbb
cwtl
pusha
push
add
leave
inc
mov
jns
lret
mov
lods
movb
mov
icebp
mov
push
sub
xorb
mov
dec
stos
mov
scas
mov
mov
loop
mov
in
mulb
int
xchg
push
arpl
inc
inc
pop
adc
mov
aas
and
stc
sar
xor
mov
xchg
cltd
fdivl
fstl
jmp
js
lods
push
xor
and
lock
adc
xchg
rorb
loop
push
out
aam
fstl
xchg
arpl
fildll
clc
push
dec
aam
mov
and
mov
adc
jo
out
addb
mov
loope
adc
adc
insl
jmp
inc
cmpsb
test
adc
sbb
out
adc
pushf
and
out
es
leave
imul
push
mov
pop
popa
sti
dec
fbstp
mov
adc
push
test
ret
add
xchg
outsb
rcrl
mov
add
xor
fistps
jo
mov
cmp
push
sub
sbbb
je
enter
fisttpl
pop
or
xchg
cld
push
mov
fdivs
cmpsb
mov
dec
popf
push
cld
cmpb
je
adc
test
stos
mov
rcrb
push
mov
leave
pop
mov
push
pop
mov
sti
iret
arpl
xlat
aam
pop
xchg
lahf
div
lods
lods
sub
das
decl
enter
mov
push
decb
jmp
push
jb
fsubl
jmp
or
add
xchg
push
inc
mov
push
cmp
bound
lahf
lea
pop
inc
xor
faddp
fstp
mov
adc
sbb
div
pop
call
hlt
mov
daa
and
add
sub
cmp
mov
push
dec
js
lds
test
add
iret
test
mov
pop
sarb
call
scas
dec
adc
pop
mov
dec
fs
jae
mov
call
xor
push
je
mov
add
int3
ja,pt
inc
pusha
mov
pop
repnz
mov
and
xchg
scas
outsb
or
lea
jne
sbb
dec
pop
add
loop
pop
jb
fists
sub
out
xchg
insl
mov
in
jne
gs
popa
outsb
dec
rcrl
jmp
or
mov
nop
not
or
repz
add
jecxz
shl
enter
sub
pop
mov
loopne
mov
lea
rclb
mov
pop
push
cmp
ljmp
jae
push
pop
addr16
pushl
push
xchg
ret
xor
dec
scas
mov
xor
push
test
dec
bound
and
xor
filds
adc
adc
fcmovb
pop
add
mov
xchg
or
xchg
and
and
cmc
and
and
mov
out
hlt
mov
or
popf
mov
fwait
pop
jge
xchg
mov
dec
and
and
or
rcrl
pop
mov
sbb
xor
inc
cmc
mov
inc
pop
jecxz
loop
stc
subl
xor
std
and
pop
xchg
adc
imul
fsubs
and
negb
cmp
stos
jns
xchg
enter
cmp
xchg
gs
aad
pop
repz
add
xchg
push
cmpsl
add
mov
mov
movsb
ss
outsl
negb
xor
jne
pop
fwait
mov
sub
je
loope
aaa
ds
leave
pusha
jnp
int3
mov
roll
jno
xlat
popf
or
repz
lcall
out
inc
loope
mov
in
sub
test
jmp
sbb
mov
std
clc
loopne
into
sub
sub
mov
cmp
cs
sbb
and
xchg
jno
dec
sbb
aam
in
nop
test
sub
sbb
stc
movsb
jecxz
movsl
xor
movsb
rorb
int
sub
or
inc
dec
add
add
or
xchg
outsb
jg
or
nop
pushf
jns
inc
std
jl
scas
mov
cs
test
js
push
inc
stc
nop
cwtl
lahf
dec
js
movsl
xchg
and
loope
stos
pop
mov
test
add
add
pop
pop
xor
jp
fmuls
adc
mov
cwtl
scas
test
cmp
lahf
cmpsb
mov
jbe
dec
push
out
dec
push
or
addr16
dec
hlt
clc
lods
test
push
test
mov
dec
popa
fsubl
out
mov
jae
sbb
mov
mov
das
mov
pushf
out
cmp
loopne
sub
mulb
pop
es
mov
movsl
ret
pop
call
std
shl
pop
jp
adc
in
xchg
in
stc
pop
icebp
adc
imulb
xchg
imul
mov
mov
and
jns
ds
or
arpl
push
jp
outsb
ficoms
lret
es
movsb
loop
inc
in
add
adc
push
xchg
dec
sbb
cmp
cmp
or
cmpsl
add
test
add
out
xlat
clc
dec
fwait
xchg
dec
pusha
imul
or
inc
movsl
lret
sbb
jmp
hlt
aam
inc
sbb
ror
subb
fimull
and
or
fnstenv
fdivrs
mov
or
jp
out
movsl
loop
loope
add
imul
hlt
cwtl
fldenv
pop
inc
lcall
add
or
sahf
mov
add
mov
fwait
loop
push
sti
sub
icebp
roll
inc
mov
ljmp
dec
xor
push
or
pop
out
sbbb
arpl
dec
jge
dec
mov
jae
ja
inc
imul
pop
aaa
add
dec
loope
cmp
js
ljmp
call
push
mov
idivl
rol
adc
mov
paddd
cmp
lods
lds
mov
stos
and
mull
icebp
lahf
or
dec
test
jnp
lods
insl
sub
pop
movb
leave
enter
and
mov
movl
addl
fs
dec
dec
lret
jge
add
cmp
pusha
insb
or
loop
sbb
sub
jae
jbe
stc
sar
movsb
and
pop
jb
rclb
inc
add
xchg
mov
out
cltd
and
jns
std
sub
pop
ret
icebp
ds
cmpl
cmpsb
adc
test
xchg
repnz
and
xor
js
cmp
mov
mov
jne
jl
pop
push
enter
xchg
push
jecxz
test
loope
xchg
add
jnp
mov
ja
loope
stc
mov
add
xor
std
addr16
je
out
rcll
mov
push
je
mov
in
lods
cltd
or
inc
and
push
lea
xor
or
je
hlt
call
pushf
adc
clc
repnz
or
jae
xlat
iret
lods
call
xchg
inc
js
inc
jg
mov
test
sbbl
push
push
out
dec
gs
clc
and
xchg
inc
inc
add
sbb
les
fcmovne
sbb
fiaddl
leave
repz
mov
fsubrp
mov
rolb
bound
add
dec
arpl
idiv
mov
push
jmp
push
lods
dec
mov
outsb
sbb
cmp
daa
or
fs
or
inc
insb
imul
push
push
lret
popf
mov
ja
leave
icebp
loope
sti
repnz
xor
loopne
add
les
dec
lea
jno
mov
es
xchg
mov
out
mov
push
shr
pop
imul
popa
les
adc
mov
pushf
nop
imul
daa
and
in
lret
stos
add
jle
iret
pop
inc
pop
jge
add
pushf
cmp
xlat
add
in
add
mov
mov
sbb
in
dec
add
add
bound
inc
cmc
push
or
loop
xor
scas
adc
xor
das
hlt
push
pop
mov
ljmp
aas
cmp
sub
sbb
icebp
mov
into
rcl
loope
hlt
sub
jns
out
data16
dec
mov
mov
test
sub
push
mov
ret
fbld
ss
sahf
xchg
cs
add
mov
out
sub
cmp
jnp
in
pop
sahf
mov
sbb
test
dec
aam
pushf
sbb
mov
lds
add
add
sbb
and
shlb
sbb
movsb
fstpl
adc
rcrl
cmpsl
mov
daa
jp
scas
or
adc
jb
dec
push
pop
insl
xor
out
aas
bound
mov
mov
ja
jno
jo
ss
sbb
fcmovu
pop
or
jle
stc
negl
rcrl
pop
stos
push
sub
rol
push
cmpsb
mov
addr16
mov
dec
scas
or
dec
xchg
in
inc
and
xor
out
push
movsb
mov
sbb
imul
and
cmp
mov
jns
add
insb
das
push
mov
xchg
popa
mov
imul
hlt
mov
add
jne
ljmp
add
xchg
jnp
sbb
loop
lret
adc
popf
cmp
ret
xor
ds
in
push
xlat
xor
sbb
lcall
imul
cmp
pop
jo
movsb
xchg
lods
out
loop
adc
pop
or
addl
sub
arpl
fcmovb
test
xchg
add
rcll
aaa
xchg
pop
adc
cli
js
sbb
or
jb
loopne
sub
test
or
bnd
or
lds
sub
outsb
mov
push
adc
push
sbb
mov
pop
lea
js
sti
inc
cltd
repz
and
inc
sbb
hlt
enter
add
pop
test
fistl
push
jns
push
subl
insb
or
jmp
lahf
rorb
in
dec
test
jns
xor
loop
sbb
call
inc
imul
fiaddl
jae
rcrl
pop
mov
lret
sahf
pop
push
rclb
mov
test
jo
dec
dec
jp
lds
cmp
jb
enter
jo
addb
pop
scas
test
add
adc
test
mov
arpl
jl
mov
inc
jne
jp
pop
push
jno
rcll
imul
sbb
jo
stc
mov
clc
sbb
mov
push
sbb
test
push
jno
and
add
aaa
jmp
loopne
test
xor
scas
xchg
fimull
or
adc
pop
adc
rcrb
lea
rcrl
mov
sub
mov
mov
outsl
sub
sbb
xor
sub
rcrb
repz
lahf
jl
mov
scas
stos
adc
xchg
push
mov
mov
xor
add
xlat
and
push
and
int3
arpl
jecxz
mov
jbe
xor
mov
test
inc
xorl
std
cs
lret
mov
rcrl
and
insb
movsb
and
inc
mov
repz
fisubl
ficompl
cmp
les
mov
xchg
pop
insb
popa
das
stos
cmpsl
jmp
dec
nop
mul
mov
fdivs
and
jb
and
ja
repz
push
xchg
jb
pop
lods
and
es
cmpsb
sub
adc
push
dec
enter
lods
jb
out
lret
pop
and
jecxz
or
pop
inc
push
std
xor
sub
mov
mov
mov
and
cmp
inc
xchg
jle
out
mov
push
mov
pusha
mov
data16
rcll
xlat
iret
popf
stc
mov
xchg
push
jbe
arpl
sahf
int
jmp
push
enter
loop
shlb
fdivrl
mov
popf
cmp
xchg
lcall
js
mov
or
outsl
mov
scas
test
lock
mov
dec
jno
adc
negl
sbb
push
cmc
xchg
mov
stc
popa
jo
addr16
shrb
mov
xor
jmp
adc
jae
test
xor
sahf
pop
adc
sub
pop
sbb
mov
rolb
jne
subb
or
jmp
insb
or
mov
inc
sub
popl
mov
jle
mov
js
push
js
aaa
out
mov
pop
sbb
add
jnp
inc
dec
sbb
push
jne
and
dec
adc
rclb
fdiv
aaa
mov
inc
ja
mov
cmp
ja
dec
pushf
sub
xchg
shl
adc
hlt
or
dec
or
clc
jb
mov
rolb
lcall
aad
jnp
in
arpl
stos
mov
inc
aad
mov
cltd
cmp
out
and
fldl
xor
fs
stos
hlt
xchg
mov
loopne
push
dec
inc
xchg
incb
es
cmp
dec
arpl
jno
das
xor
mov
cmp
pushf
rcl
and
xchg
shlb
hlt
jg
dec
and
adc
std
stos
hlt
pop
mov
lods
sub
dec
shlb
cmp
roll
pop
ds
sub
ret
inc
mov
and
pop
imul
stos
jns
mov
sub
sub
push
cwtl
or
inc
jmp
mov
inc
aam
aaa
push
enter
xchg
add
jbe
pop
pushf
cmp
dec
cmp
sub
std
cmp
mov
sub
addr16
or
test
mulps
shrl
pop
dec
inc
test
insl
call
mov
inc
xor
lret
pop
sub
sub
jg
fists
mov
and
mov
test
add
dec
pop
mov
pop
inc
jno
pop
inc
dec
scas
imul
adc
xchg
add
push
aaa
and
es
arpl
push
jbe
jecxz
and
jb
filds
out
sub
clc
bound
insl
popa
add
push
in
dec
cmpsl
cwtl
lret
lahf
xchg
xchg
in
fstl
mov
dec
sub
xchg
adc
push
pop
xor
fmuls
jae
pop
lods
mov
sbb
adc
fnstenv
rol
mov
xor
lahf
pop
mov
ss
and
scas
pop
xchg
pop
inc
out
lock
jne
out
loope
mov
stos
sahf
mov
je
cmp
ljmp
xchg
add
sbb
or
dec
mov
cmp
jmp
xchg
std
inc
fidivrs
call
jns
xchg
enter
cli
out
push
push
lahf
xchg
pop
loope
and
stc
rcll
insl
cmp
repnz
mov
mull
inc
mov
hlt
lock
bound
mov
or
pop
fisubl
jne
repz
fnsave
hlt
sahf
mov
shrb
sti
pop
enter
mov
push
repnz
inc
aaa
ds
fimuls
in
daa
cmpsb
cwtl
loopne
gs
ficoml
mov
fwait
push
mov
imul
dec
or
mov
xor
test
insb
sub
test
sbbb
xchg
jb
insl
and
scas
scas
xchg
sbb
loop
jb
out
adc
cltd
dec
xchg
fdivl
ret
sbb
addr16
mov
icebp
fwait
add
cli
cmp
sbb
pop
mov
xor
pushf
xor
mov
xor
out
in
lods
mov
mov
stos
cs
add
mov
iret
mov
mov
dec
das
loopne
lea
out
mov
mov
test
lods
mov
insl
xor
notb
movsb
push
loopne
call
mov
or
mov
rclb
pop
enter
lahf
repz
add
mov
cmp
jnp
sbb
stos
cmp
shlb
xor
inc
jb
mov
xchg
clc
js
mov
sahf
dec
scas
dec
enter
sbb
addl
dec
pop
cmp
js
jecxz
leave
fdivr
outsl
inc
or
jbe
or
mov
decl
jns
ficoml
out
popa
pop
cmp
rolb
push
xlat
out
iret
lret
rcrl
out
mov
shl
call
mov
ja
jecxz
inc
or
push
add
in
mov
dec
sbb
in
adc
gs
adc
popa
inc
jns
ss
notb
mov
push
shlb
sub
mov
xlat
sbb
test
cmpsb
jae
je
imul
push
fiadds
ja
inc
subl
jo
fcmovbe
sub
push
jns
sub
les
jg
ret
cmp
sub
out
mov
mov
subb
inc
jns
xor
cmpsb
aas
popa
cmp
cmp
movsb
fsubrs
or
cs
loopne
rcrb
inc
leave
fisttps
stc
push
fldcw
stos
lahf
or
fsubp
adc
add
movb
inc
inc
std
cmp
shrb
dec
adc
fnstsw
dec
add
dec
inc
pop
test
in
xchg
jg
push
dec
mov
or
repz
sub
jnp
jmp
dec
mov
and
xlat
jge
dec
movsl
notb
jmp
ljmp
cmp
dec
fistl
adc
fisubl
mov
or
in
das
push
jecxz
lods
sti
cmp
outsb
rol
sbb
lahf
leave
adc
and
lcall
push
mov
cmp
push
jecxz
jb
or
sub
test
push
push
sbb
jnp
or
movups
test
sub
mov
imulb
dec
sub
dec
outsl
and
xchg
inc
xchg
pop
push
push
add
mov
mov
mov
sub
sahf
adc
mov
xchg
int3
fucom
adc
dec
sub
mov
cli
aad
fnstsw
adc
lock
and
push
push
sub
fsin
and
imul
adc
iret
aaa
xchg
call
add
or
std
int3
mov
addl
in
std
cmc
bound
mov
aad
popa
int
and
cmp
sti
subb
outsl
xor
inc
adc
adc
sbb
jbe
jnp
mov
fwait
decl
cmp
and
lods
js
loope
cmp
insb
add
movsl
pop
popf
or
sarl
adc
mov
push
inc
lods
xchg
repnz
xorl
mov
push
rorl
jl
mov
pop
icebp
jnp,pt
sub
pop
test
sbb
pop
or
test
mov
sub
mov
sti
shl
dec
ds
insl
les
out
outsl
dec
push
mov
data16
je
push
dec
xchg
cmp
test
push
lahf
xor
cmp
mov
jg
in
movl
and
ljmp
out
dec
pop
mov
and
and
sti
adc
outsb
or
sbb
jno
daa
insl
out
push
adc
sub
mov
cmp
push
mov
push
test
sbb
out
stos
in
add
inc
loope
test
xor
jg
test
mov
in
jp
push
hlt
jnp
shll
sarb
mov
add
lahf
inc
sahf
pusha
pop
push
mov
js
mov
cltd
out
int
repz
aas
arpl
add
stc
jnp
mov
sbb
pop
arpl
loop
dec
dec
pop
stos
xchg
popa
pop
inc
repz
jo
je
or
and
mov
fcmovu
adc
push
push
inc
stos
add
sub
mov
xor
mov
outsb
and
data16
pop
jmp
lds
jl
loop
pop
jp
jp
loopne
imull
jae
mov
mov
out
aad
jns
mov
adc
ret
maskmovq
divl
jle
mov
pop
add
ficoms
roll
subl
adc
divl
sub
aaa
pop
jae
sub
cli
mov
in
std
adc
sub
gs
sbb
fs
loopne
adc
inc
enter
pushf
cmpsl
sbb
jge
jmp
jo,pt
cmpsb
pop
dec
lds
les
pop
adc
xchg
sbb
dec
mov
push
jb
mov
aam
into
or
sbb
mov
lahf
sbb
test
add
mov
aas
addr16
daa
and
dec
or
fsubrl
dec
adc
dec
jno
ds
mov
mov
das
insb
out
je
mov
sbb
dec
add
repnz
movsb
mov
xchg
and
sarb
pop
pop
das
push
jno
ds
xchg
lret
mov
ror
in
add
mov
cmp
jb
dec
sub
mov
jo
shrl
pop
jae
sbb
xchg
dec
imull
mov
xchg
mov
cmpl
lret
lods
daa
leave
movsl
insb
test
cwtl
dec
repnz
jp
insl
enter
pop
jae
adc
aaa
gs
bound
popa
fdivl
andb
pop
int
mov
inc
xor
lahf
int3
mov
and
shlb
pop
adc
fdiv
mov
fcoms
push
mov
mov
cld
loop
lock
ljmp
repz
mov
dec
push
stc
mov
fistpll
adc
icebp
inc
in
loop
mov
scas
fidivrs
shr
mov
stc
cmpsb
jae
int
testl
mov
jno
cmpl
outsb
out
cmpsb
sub
add
jb
xlat
aad
test
test
mov
fst
aaa
fs
int
out
push
rcrl
fcmovu
mov
mov
sub
dec
sbb
jo
shlb
add
pusha
lock
adc
sbb
mov
pusha
sbb
das
enter
mov
int3
gs
xchg
xchg
jge
pop
cmp
test
push
mov
mov
stos
lret
popf
mov
jmp
push
mov
sbb
subl
push
mov
push
or
aam
lods
shl
xchg
sub
stos
es
inc
int3
xor
pop
test
bound
insl
in
out
repz
fsub
cli
push
addps
ret
test
lods
mov
mov
call
testb
and
mov
mov
negl
sub
mov
dec
in
fidivs
in
and
popa
pop
idivb
and
mov
out
pop
xor
stc
ldmxcsr
jnp
daa
add
dec
inc
inc
adc
mov
cli
ja
dec
and
fwait
iret
jecxz
inc
outsl
lods
mov
les
movsb
or
sbb
mov
xor
lahf
sub
push
imul
xor
fs
scas
add
push
add
icebp
push
in
dec
rorl
mov
pop
test
fdivrl
mov
out
sbb
nop
push
inc
xor
mov
dec
in
aad
int3
mov
shlb
xchg
cmp
or
out
pusha
and
addr16
rcl
fwait
movb
jnp
mov
pop
pop
add
lea
jmp
and
das
aaa
jl
xchg
das
pop
xorb
xor
shll
add
popf
xchg
pop
arpl
jns
andb
dec
popa
int3
adc
jnp
sbb
mov
in
push
dec
xchg
pop
movsb
sub
loopne
mov
or
jle
cmpsb
cld
stos
push
xor
mov
pop
pop
addb
loop
xchg
mov
adcb
inc
iret
add
aas
sti
adc
inc
or
dec
push
dec
stos
ds
jo
imul
mov
rorl
stos
nop
mov
nop
rorb
push
test
daa
cld
mov
repnz
scas
outsb
data16
xchg
les
jb
clc
inc
aad
mov
test
pop
mov
inc
mov
lds
xchg
mov
xor
pushf
faddl
and
mov
test
je
or
cmp
loopne
jns
daa
ljmp
or
ret
sbb
int3
xchg
inc
nop
jno
add
fstl
or
clc
rcrb
outsl
mov
adc
dec
cmp
insb
sub
mov
push
jecxz
pop
insb
icebp
xor
sbb
lret
jo
stc
cli
xor
mov
int
mov
cmp
xor
mov
fxch
push
into
pop
adc
cltd
mov
jmp
in
rorl
gs
lods
or
jae
loop
mov
sahf
jne
jb
test
in
imul
les
cmp
nop
or
mov
or
testb
pop
outsb
popa
fwait
sbb
or
pop
push
fs
add
ja
or
mov
xchg
xchg
jle
sbb
je
cmp
out
cltd
testl
shll
mov
pop
mov
jmp
pop
ja
nop
mov
add
ror
ljmp
jl
stos
repnz
cs
mov
lahf
and
xchg
add
mov
loopne
xor
ficompl
ftst
mov
push
out
repz
push
and
lods
test
xchg
xchg
lods
lea
xchg
hlt
mov
leave
pusha
xchg
adc
ljmp
cmpsl
stos
outsl
mov
fnstsw
lcall
fmul
sub
callw
into
dec
sarl
push
pop
bound
dec
mov
xor
aad
adc
out
and
and
sbb
push
iret
popa
popf
adc
aaa
pop
xor
adc
jb
or
cmp
mov
and
cwtl
je
in
jnp
movsl
or
sub
mov
xor
or
jge
pop
test
insb
and
mov
mov
std
leave
cmp
dec
jmp
cmp
jmp
aaa
sub
pop
add
nop
loope
adc
and
cmp
arpl
mov
mov
loope
divl
loopne
xor
pop
in
push
shrl
xchg
dec
cmp
into
mov
xor
roll
outsb
rol
pop
sysexit
pop
adc
in
out
cmpsb
push
lock
movsb
das
lods
pop
mov
pop
inc
lods
pop
jmp
cli
xor
push
pop
sub
xchg
ja
dec
lods
pop
or
popa
pop
jnp
insb
icebp
pop
dec
mov
cmp
sub
sti
je
sub
orb
insl
sar
lds
ror
cmpsl
rclb
cs
jg
adc
and
mov
std
mov
mov
cwtl
dec
jecxz
lret
jae
mov
xor
pop
jp
test
mov
push
mov
idiv
xchg
lods
sbb
jo
sbb
mov
adc
out
push
add
sub
or
pop
pop
and
jne
pop
stos
cwtl
inc
roll
add
jae
mov
je
movsb
jge
xchg
pop
clc
pusha
push
shll
cmp
mov
out
ja
adc
pop
outsw
jns
test
daa
pop
ret
popf
fdivrs
test
insb
push
cli
dec
jb
andb
xlat
pushf
in
cmp
cs
stc
imul
jnp
adc
or
mov
dec
push
rcrl
scas
test
fstpl
cld
mov
loop
mov
nop
js
and
add
bound
mov
ljmp
pushf
inc
jl
fisubrs
dec
pop
loopne
mov
mov
stos
cld
jg
pop
cmp
jb
pop
stc
mov
popa
and
inc
lds
loope
pop
pop
add
pop
mov
add
gs
arpl
out
out
scas
xor
jge
loop
das
mov
lock
orl
cmp
fcoml
cmpsb
or
pop
dec
jbe
xor
lret
outsb
xchg
sub
data16
inc
scas
or
and
xchg
imul
andl
lahf
movb
loope
or
inc
mov
shlb
mov
inc
repnz
sbb
push
mov
test
sbb
ja
jae
gs
cmpb
or
pop
lea
test
xchg
in
fnstsw
repz
ja
jmp
fidivl
mov
mov
scas
cmpsb
ss
mov
inc
pop
imul
push
and
insl
idiv
xchg
or
mov
rcl
es
or
hlt
cmp
jbe
xorb
sub
xchg
and
add
popf
rcrb
add
push
sub
pop
fbstp
icebp
push
lret
pop
data16
or
scas
mov
jb
stc
in
adc
and
sbb
mov
add
cltd
loopne
push
cmc
imul
cmc
in
dec
testb
ret
pop
repz
sub
pusha
inc
addl
cld
dec
arpl
sbb
jb
adc
push
push
movsl
mov
scas
push
pop
mov
cmp
xor
mov
jl
dec
xor
imul
mov
mov
xchg
pop
or
cwtl
int3
xor
stc
mov
dec
jle
pop
xchg
int3
xor
out
push
dec
and
mov
add
icebp
mov
inc
sahf
imul
bnd
mov
mov
pop
or
dec
xlat
and
mov
ds
fisttpl
or
test
das
fwait
cmpsl
loope
pushf
mov
lds
pop
out
pop
lret
xchg
or
jp
sub
xchg
das
stos
mov
cmp
ljmp
xchg
out
loopne
xor
nop
sub
mov
scas
popf
cwtl
sbb
out
add
xchg
sub
aaa
stos
mov
call
ljmp
xchg
cmp
aas
scas
dec
add
mov
push
or
sti
jo
push
rcrl
std
daa
into
pop
xor
mov
in
adcl
loope
mov
out
test
or
div
mov
popa
aas
cmp
cmp
add
mov
inc
xchg
cli
xchg
test
pop
pusha
mov
adc
sub
dec
stos
push
or
popa
mov
aaa
xchg
push
icebp
ja
mov
push
imul
popa
cmp
sahf
pop
xchg
scas
es
into
dec
jnp
scas
sbb
pop
loopne
sub
and
imulb
xchg
xchg
js
jo
addr16
imul
fnsave
inc
in
cmc
fwait
adc
or
aad
or
rcr
pop
xor
loop
jnp
hlt
mov
stos
cmp
cmp
lcall
pop
fcomip
mov
sbbl
push
push
adc
popa
rorb
inc
sub
daa
and
push
add
push
aam
cli
in
cmp
int3
mov
std
sub
inc
add
setno
fwait
outsb
std
leave
push
into
adc
jns
scas
mov
fcmovnb
cmp
in
xor
xchg
inc
adc
pop
sbb
fwait
out
pop
sub
fbld
fcmovnu
mov
sbb
lret
pop
dec
push
cmp
adcl
lret
pushf
fisttpl
lcall
and
lret
and
jnp
add
stos
xchg
ret
cmp
and
dec
movsl
repz
shll
add
add
shl
and
data16
loopne
sub
jno
andl
fcompl
out
mov
push
xor
sar
and
jns
inc
sti
xchg
int
gs
mov
rorb
clc
jbe
stos
shll
cs
mov
ret
add
add
mov
cmpsl
mov
xchg
imul
outsb
shll
orb
cmp
mov
int3
fcmovbe
out
pop
mov
sbb
dec
or
or
dec
mov
cs
xchg
mov
gs
or
ret
sbb
pop
addl
cld
dec
mov
push
or
cli
push
adc
dec
sbb
popf
dec
aad
psraw
sbb
mov
mov
adc
sub
jp
mov
mov
ficompl
aaa
dec
or
stc
pusha
bound
cli
stc
adc
mov
xchg
imul
clc
pop
leave
mov
nop
and
and
imul
roll
jb
or
loop
pop
ja
cmp
int
jno
push
mov
dec
dec
mov
mov
xchg
xor
je
into
push
cmp
loope
stc
dec
inc
ret
clc
jmp
loop
sub
jbe
test
pop
fwait
jae
lret
data16
fcmovbe
push
out
add
arpl
mov
mov
push
mov
mov
mov
into
mov
test
mov
cmpsb
loop
adc
and
mov
cltd
jne
sbb
idivb
add
popf
or
lret
cmp
pop
xchg
ja
mov
and
adc
inc
xorl
arpl
sub
mov
mov
cmp
out
adc
and
gs
push
es
leave
xchg
push
cli
sbb
loop
leave
push
add
mov
cltd
test
imull
push
inc
lret
out
psraw
orl
mov
push
fs
fmuls
nop
inc
pop
lods
push
add
dec
mov
pop
and
xchg
call
adc
add
jl
pop
lahf
mov
pop
test
test
ja
flds
xchg
das
sub
or
and
sub
mull
xor
or
xchg
pushf
aas
inc
xor
and
inc
jb
push
mul
sahf
pop
push
add
dec
mov
push
mov
leave
mov
push
data16
xor
lret
pop
ret
mov
mov
adc
push
push
rol
sahf
in
inc
add
ficoms
jnp
jns
push
sbb
pop
dec
leave
mov
pusha
pop
jp
popf
jg
mov
outsl
popa
aad
push
adc
xchg
mov
icebp
jae
xor
sub
repnz
fdivrl
int
fstpt
jp
scas
cmp
push
jae
lds
das
lahf
fadd
stos
hlt
shlb
mov
lock
ds
mov
and
ficoml
minps
push
sbb
cmp
cwtl
pop
mov
sub
sbb
js
mov
fdivl
int
add
icebp
jp
xchg
cs
dec
mov
scas
ja
addr16
push
sbb
push
movswl
inc
gs
mov
jmp
popa
sbb
xchg
xor
jmp
adc
cwtl
xor
push
js
xchg
xor
adc
sbb
and
push
rcrl
push
adc
xchg
cmp
pop
pop
cmpsl
pusha
adc
in
xchg
adc
adc
in
cmp
stc
lea
inc
pop
xchg
mov
imul
fs
or
aam
or
mov
aaa
insb
pusha
mov
xor
mov
fistpl
sub
lock
arpl
imul
lock
lods
pop
dec
lret
and
cmpsl
or
xchg
xor
sub
add
add
es
cmp
in
jle
aam
rclb
xchg
std
cmpsb
xor
adc
adc
aas
test
popa
sub
push
test
ds
loopne
daa
or
cltd
shrb
push
xlat
jecxz
dec
cmc
cmp
add
in
mov
mov
rorb
aad
or
jns
xchg
cmpsb
inc
and
lock
pop
xlat
cli
int3
fsubrs
fwait
lret
or
ret
add
stc
inc
loop,pt
add
add
gs
repz
shlb
cmpsl
ds
cs
inc
adc
repnz
aad
je
andl
sbb
mov
imull
lea
and
insb
dec
add
xchg
dec
inc
xor
pop
testb
fldcw
es
add
xchg
xchg
je
call
dec
lods
sahf
cmp
mov
mov
sub
xorb
sbb
sbbl
mov
and
xchg
inc
insl
or
pop
jns
mov
iret
jg
sub
jle
fwait
jmp
jns
or
test
sbb
icebp
sub
fbstp
cmpsb
nop
and
fistps
push
pop
rorl
or
shrb
mov
pop
jg
inc
es
into
push
mov
or
push
pop
add
push
mov
mov
cmc
push
pop
fisttpl
xchg
mov
test
mov
jnp
mov
xchg
nop
sbb
xor
aaa
mov
pop
sbb
and
pop
jmp
leave
adc
mov
jmp
pop
mov
repz
jmp
or
adc
dec
xor
insl
inc
jg
fidivrs
fs
stos
adc
dec
cmpsb
cmp
and
cmp
add
in
dec
fistps
push
cmp
sbb
fcompl
jmp
shll
add
mov
or
rorb
adc
insl
out
mov
jno
lret
dec
pushf
test
nop
jae
or
xchg
sub
insl
or
inc
inc
sub
pop
out
int3
movsl
mov
test
xor
sub
ficoms
sub
pop
repz
in
iret
jne
lcall
sub
cmp
xchg
stos
adc
mov
repz
call
outsb
inc
scas
pop
sti
into
and
sub
adc
pop
push
dec
mov
enter
mov
test
jb
push
pop
xchg
pusha
cmpsb
pop
push
sub
push
xchg
sbb
adc
pop
clc
dec
mov
lods
pop
mov
je
dec
ror
pop
jo
sbb
xchg
dec
cmp
adc
enter
test
pop
movsb
ja
inc
sub
ja
rcrl
mov
data16
dec
sub
jb
and
hlt
clc
ljmp
mov
inc
shlb
lods
adc
mov
js
push
xor
nop
inc
js
xlat
push
push
pop
jb
cmp
frstor
jp
sbb
add
xchg
inc
sbb
pusha
xlat
mov
lret
add
push
lea
push
or
mov
sub
aad
mov
jns
jecxz
lret
movsl
sub
inc
or
xor
mov
mov
mov
loopne
pop
sbb
cmp
push
cmp
aas
xor
inc
mov
pop
xor
scas
pop
push
sbb
inc
fbld
mov
outsl
jecxz
iret
lret
push
je
adc
jge
stc
mov
mov
hlt
rcl
dec
xchg
cwtl
xchg
cmpsb
in
into
mov
fsubr
push
in
push
ffreep
mov
dec
adc
in
jge
pusha
mov
lea
outsb
sbb
ror
mov
popf
lret
mov
dec
popf
repnz
or
sub
pop
mov
sbb
gs
call
int
lods
int
icebp
imul
cld
jge
xchg
xor
push
jge
adc
lcall
mov
jl
stc
pop
lods
jbe
insb
mov
pop
push
pavgb
shlb
stc
xor
pusha
and
test
lret
push
sub
mov
ds
out
rol
addr16
int
pop
pop
in
in
decl
or
fnstcw
cld
inc
std
cmp
imul
iret
aaa
mov
and
sbb
imulb
inc
mov
stos
jbe
cld
pop
jbe
cli
cs
movsl
cmp
adc
dec
sub
loope
out
lds
in
notb
in
out
mov
add
mov
fildll
pop
mov
testl
aam
jno
add
mov
inc
cmc
pop
adc
sbb
sub
pop
add
adc
xlat
das
stos
mov
or
push
sbb
jge
jmp
ljmp
setnp
inc
and
fwait
dec
mov
lods
out
int
push
mov
jns
icebp
popf
xchg
and
sub
lcall
popa
mov
sbb
sarb
ljmp
xlat
in
mov
test
mov
repz
dec
mov
imul
add
mov
mov
push
shrl
test
clc
or
fcmovbe
lret
adcl
in
aam
loopne
push
lahf
lret
mov
cmp
pop
mov
push
mov
lea
shrl
sub
inc
sbb
and
ja
mulb
push
mov
sub
cmpsb
and
loopne
int
xor
pop
jmp
mov
or
xchg
add
push
rol
push
add
popf
xchg
negb
adc
sbb
lds
dec
adc
sub
mov
fcoml
xchg
cmpsb
mov
inc
add
aas
or
shrb
push
enter
sbb
jg
sbb
and
dec
sarb
pusha
jge
jp
popa
aad
call
sub
pop
xlat
test
xchg
adc
std
jg
or
jne
jns
orb
arpl
adc
hlt
not
stos
out
shrl
leave
scas
or
pop
inc
jne
cmp
pop
int3
jg
movsl
dec
clc
leave
ja
xorb
stc
stc
fsubs
dec
add
mov
cld
dec
jmp
fisttpll
daa
les
test
xchg
mov
or
push
fidivrl
xor
dec
mov
std
mov
xor
into
mov
sbb
testl
xchg
lret
stos
pop
fsts
xor
lds
pop
lahf
fs
ja
xchg
cmpl
js
movsl
call
ret
xchg
cmp
adc
sbb
lcall
outsb
xchg
add
int3
sbb
mov
push
aam
aad
les
movl
push
test
incl
mov
jmp
xorl
push
or
ret
iret
fs
jo
dec
stos
mov
cmp
and
pop
leave
adc
pop
mov
push
push
jno
cmp
add
push
mov
push
inc
xlat
add
add
fstps
dec
mov
sbb
stos
push
in
push
sbb
ret
sbb
add
sub
out
cmp
mov
xor
mov
ds
adc
int
test
cmp
add
aam
xchg
sbbb
add
fdivl
sarl
pushf
mov
mov
and
inc
mov
jl
jmp
pop
scas
ret
fldt
push
or
inc
sub
adc
add
push
arpl
into
out
and
popf
das
pop
push
ror
lcall
inc
lds
pop
lds
popf
aaa
mov
mov
inc
lock
mov
sahf
adc
das
gs
jbe
aaa
xor
leave
push
leave
mov
dec
sbb
mov
iret
or
repz
inc
sub
insb
sub
jmp
xchg
lcall
xor
adc
out
mov
jae
fidivl
inc
adc
test
test
lahf
sbb
aad
push
dec
jnp
ss
push
cli
std
repnz
pop
mov
rcll
sub
std
mov
lods
inc
aas
mov
jg
movsb
or
int
mov
pop
mov
xlat
mov
push
sbb
or
mov
lret
xlat
sub
and
in
shr
lret
sbbl
movb
fmull
call
xchg
mov
sub
test
jmp
xlat
mov
daa
cmpsb
movsl
xor
mov
ret
rcl
scas
jne
cltd
lret
jno
xor
cmpsb
js
fs
in
sub
mov
and
lods
lock
add
and
jnp
push
dec
loop
int3
scas
or
push
repnz
and
ficompl
cli
jo
xchg
lds
add
loope
xchg
cmpsl
lret
xor
xor
out
cmpl
push
daa
mov
cli
mov
sarb
add
xchg
popa
sbbl
push
sub
rcl
test
hlt
mov
and
inc
cmp
repz
testl
scas
nop
sub
or
cld
xchg
fwait
es
popf
add
test
mov
pop
inc
or
xor
inc
cld
push
xor
jns
test
jo
xor
push
push
fst
sub
icebp
popa
xor
js
or
inc
mov
jle
add
xor
lods
inc
xchg
loopne
pop
in
shlb
and
insb
push
dec
fidivs
dec
and
mov
out
sbb
or
loop
mov
push
movsl
jecxz
jno
jae
outsb
out
sbb
adc
xchg
mov
aad
add
popa
sub
inc
aaa
mov
imul
push
sbb
sub
notl
jo
and
cli
addr16
pop
pop
jmp
lcall
ror
inc
xor
push
test
adc
push
xchg
mov
outsl
lret
fldcw
andb
mov
adc
add
sbb
stos
push
jp
cs
jecxz
adc
mov
imul
popl
mov
cmpsb
and
sbb
pusha
inc
bound
test
cmp
cmp
popa
movsb
adc
fiaddl
aas
fadds
cmp
ret
lcall
jmp
sti
xlat
in
test
sbb
outsl
test
mov
dec
je
test
andl
xchg
lret
mov
adc
mov
xchg
shll
fwait
sti
in
adc
dec
iret
cmp
xor
out
popa
jnp
stc
test
mov
sbb
daa
fs
xor
je
pop
ljmp
add
and
hlt
ds
and
les
adcb
inc
stc
orb
repz
lea
xchg
outsl
jo
xchg
hlt
cmp
sub
xor
sbb
in
aad
in
push
icebp
sbb
shrb
lea
cltd
push
xor
insl
push
dec
pop
pop
insl
sub
out
cmpsl
inc
or
adc
in
ror
repz
add
xor
fst
xor
add
pop
xchg
ffreep
xor
rcrl
outsl
call
stc
ljmp
scas
inc
mov
mov
movsl
rorb
sub
lods
cmp
loope
lea
in
cwtl
out
push
dec
dec
adc
and
sbb
xchg
icebp
ret
push
sbb
rcl
jne
sti
cmp
xlat
jmp
loop
mov
cmc
cmp
repz
sbbl
mov
les
sahf
xchg
out
xchg
push
shll
push
mov
pop
data16
pop
lret
call
imul
jp
cwtl
test
leave
sbb
lock
pop
push
xlat
movsb
mov
scas
aam
xchg
outsl
test
jle
mov
es
insl
mov
fs
test
jl
xor
adc
in
mov
repnz
lcall
xchg
addr16
xchg
adc
ja
fwait
jge
inc
cli
push
nop
shrb
push
imul
int
cwtl
stc
aad
ret
push
xchg
rcrb
pop
stos
xor
and
cmc
jns
cld
xchg
bound
mov
bswap
and
movsl
inc
xchg
xchg
push
int3
call
fcom
rolb
scas
aad
cwtl
push
repz
add
mov
jge
aas
xchg
fldcw
fwait
xchg
push
testb
xlat
movsb
jmp
pop
in
sbb
mov
mov
lahf
xor
dec
and
inc
fcmovne
stos
test
sub
jae
lds
out
in
sub
or
out
jl
push
sbb
xchg
in
nop
xor
idivl
shll
pop
xchg
je
xor
orps
xchg
nop
popf
bound
sbb
sub
loopne
sub
rorl
repz
xor
lods
negl
inc
mov
sbb
ds
frstor
stos
in
pop
xorl
add
mov
inc
mov
mov
mov
xchg
ret
cli
outsl
lahf
scas
aam
mov
fiadds
inc
sub
repz
mov
jmp
inc
ljmp
mov
arpl
add
sub
test
pushf
mov
incl
into
push
add
cltd
pop
jge
mov
mov
hlt
fsubrl
shl
xor
dec
push
movsl
in
test
and
xlat
jnp
mov
dec
xor
mov
sbb
test
call
mov
js
adc
getsec
lcall
sbb
push
jmp
pushf
stc
mov
outsl
fdivrs
and
lods
shrl
js
insl
or
lret
or
push
mov
clc
inc
mov
mov
add
sub
mov
or
dec
cmc
out
mov
cmp
adc
pop
adc
popa
stos
push
jp
jge
gs
mov
repz
jae
lcall
xor
sub
inc
mov
testl
addl
inc
scas
pop
enter
mov
xor
and
sbb
sbb
jnp
sub
imul
out
ss
sub
adc
int3
movl
outsb
fbld
add
mov
nop
xchg
sbb
test
call
into
mov
sub
push
outsb
pop
cmpsl
test
sahf
outsl
jg
mov
adc
imul
mov
sub
stos
mov
adc
and
mov
add
mov
sub
cmp
loope
stos
add
sub
jo
out
xchg
xchg
lods
inc
int
mov
fbstp
mov
loopne
dec
or
and
jl
mov
lods
and
mov
mov
sub
cmpsl
xchg
icebp
add
mov
or
adc
js
fistpl
mov
add
pop
mov
push
fildll
lret
arpl
sub
jo
sahf
xlat
mov
xor
in
popf
je
xchg
mov
imul
mov
test
mov
jl
iret
push
mov
aas
add
repz
cmp
sub
xor
pop
add
ss
fisubl
cli
mov
cmc
arpl
shlb
sbbl
enter
iret
call
data16
xchg
xchg
push
movl
stc
adc
cli
enter
hlt
mov
leave
aam
scas
ficompl
add
xor
cmp
push
ljmp
inc
jg
or
shll
mov
cli
mulb
dec
lea
pand
sahf
das
aas
pop
pop
stos
sub
xor
push
push
cmpsb
lret
insl
lods
pop
inc
xchg
xchg
sub
xchg
sbb
cmpsl
out
mov
lcall
sysret
pusha
adc
pop
loope
addb
popa
nop
mov
sbb
mov
push
sahf
es
or
int
testl
mov
out
mov
imul
cli
test
dec
jle
cmpsl
in
cltd
mov
adc
pushf
mov
add
push
push
pop
xchg
sbb
jbe
nop
xor
jmp
fnsave
jbe
sbb
adc
int
lahf
insl
rclb
mov
leave
into
fstpt
test
or
imul
jbe
add
jmp
orb
div
in
add
cmp
cltd
sbb
xchg
add
mov
mov
cmp
ret
les
scas
rcll
jecxz
clc
jno
and
add
add
jo,pt
divl
test
mov
pop
loope
and
aaa
xchg
pop
pop
pop
xor
sbb
lods
jns
std
pop
test
inc
pop
adcl
dec
ds
push
test
mul
fs
icebp
xchg
mov
dec
and
add
fisttpll
aad
call
adc
jl
push
lds
test
pop
popl
cmp
clc
cmc
or
divl
aad
insb
pop
outsl
or
pop
in
push
dec
mov
jns
mov
nop
nop
cmpsl
cs
movsb
aas
xlat
push
stos
add
mov
rclb
ds
mov
faddl
mov
fs
mov
leave
aas
enter
jns
adc
mov
pop
xchg
in
pop
popf
repz
xchg
jg
push
jns
nop
addr16
imul
mov
jo
enter
out
loopne
movsl
arpl
or
xlat
cld
popl
rorl
mov
lcall
out
inc
aaa
aam
into
xorl
stc
cmc
jo
cmpsb
mov
inc
fdivrs
pusha
jne
in
std
aas
lret
sbb
es
das
add
testl
or
mov
loopne
rorb
inc
int3
mov
pop
insl
cltd
cmpsl
test
cmp
adc
fdivl
cmp
cmpsl
lret
adc
je
inc
push
mov
ljmp
lahf
pop
mov
fildll
xor
shrl
or
int3
lcall
je
rol
in
ds
shl
xchg
imul
inc
pop
push
aaa
sub
mov
sbb
jno
inc
mov
and
push
push
adc
jg
fsubr
dec
mov
adc
jb
mov
cmc
xchg
mov
or
ds
hlt
xchg
xchg
mov
and
pop
lods
orl
dec
inc
rcll
adc
jle
fstpl
mov
xcrypt-cbc
cmpsl
aad
mov
pop
push
scas
ret
xchg
shll
ja
jmp
out
or
dec
cmp
loope
pop
fidivrl
pop
daa
add
add
inc
pop
rcrl
das
daa
mov
dec
pop
lret
stos
jnp
movsl
mov
insb
sbb
fsts
ja
mov
in
and
outsl
sbb
xor
jno
outsl
jno
jmp
dec
ret
imull
cmpsl
inc
mov
cltd
add
sub
push
out
mov
push
add
test
data16
adc
xchg
or
inc
testb
jl
ss
add
xchg
call
push
fisttps
test
cld
xor
mov
leave
adc
leave
fdiv
scas
mov
cmpsb
int
pop
lods
jecxz
cltd
lret
shl
cmp
sub
fcmovnb
xor
ret
cli
mov
lods
loopne
push
sub
push
sub
mov
mov
in
mov
popf
aam
addr16
and
adc
xor
jbe
lods
sub
pop
stos
adc
or
out
cwtl
or
push
xor
clc
cli
sbb
and
dec
push
mov
ficompl
dec
xchg
in
in
clc
ss
pop
rcl
mov
rorl
inc
stos
call
mov
mov
pop
xor
fnstenv
cmpsl
loopne
xchg
insb
mov
cwtl
sub
mov
adc
dec
jmp
sub
add
add
fists
xor
jno
lods
mov
sbb
inc
mov
sub
adc
sub
shll
cld
jmp
mov
lahf
std
rcrl
les
or
sub
pop
xor
sbb
jmp
std
lcall
comiss
test
outsl
xchg
push
jp
in
lret
int
aad
sub
mov
pushf
std
push
fisubrl
mov
hlt
and
cltd
fimull
add
jb
sub
inc
sbb
jo,pt
or
xor
sub
ljmp
cmp
cli
sbb
rcll
fsubrl
daa
pop
mov
or
aam
or
ljmp
leave
hlt
dec
and
xchg
js
xlat
lock
aad
push
repz
dec
pop
xor
xchg
inc
pop
js
inc
sub
jnp
into
addr16
loop
mov
mov
adc
inc
ljmp
or
push
mov
xchg
pop
fbstp
xchg
ds
xor
xor
mov
mov
outsb
lea
clc
pop
fnstsw
pop
mov
sub
les
push
xchg
pushf
ficompl
sbb
repnz
pop
mov
xlat
cmp
lcall
popf
in
pop
fwait
add
pop
mov
cmc
dec
enter
mov
cmc
xor
shrb
mov
sub
rclb
and
and
out
test
lcall
adc
sbb
cmp
rcl
fucomi
mov
mov
in
lret
inc
push
insb
cmp
mov
cwtl
xor
mov
pusha
enter
jno
je
or
nop
movlps
or
mov
and
push
dec
je
inc
cwtl
fistpll
xchg
in
push
out
cwtl
pop
sub
push
test
sbb
pop
loopne
fwait
subl
mov
adc
lcall
popf
scas
or
repz
ljmp
andl
pop
xchg
shlb
in
xchg
outsl
mov
iret
sub
dec
shrb
jge
andb
ret
movsb
adc
testb
fistps
out
test
or
and
aad
sub
pop
decl
jmp
mov
divl
and
fs
pop
arpl
and
cs
std
add
inc
push
test
ja
jmp
das
pop
and
pop
sti
scas
ret
add
mov
sbb
cmp
push
lea
icebp
shrb
in
add
pop
cmp
iret
mov
das
gs
jl
mov
pop
mov
pop
decb
in
jle
lods
lret
lock
jg
inc
lods
andb
mov
rcrb
fmuls
or
pop
lahf
push
and
iret
jmp
jmp
sub
sbb
outsb
out
cltd
mov
addb
addl
sub
xor
dec
add
or
dec
loopne
sbb
sub
fwait
jle
out
in
inc
ss
mov
mov
push
gs
push
jbe
jb
out
jo
inc
pusha
xchg
push
popf
into
punpckhbw
call
out
ljmp
jp
shrl
fisttpll
xchg
sub
subb
outsl
xchg
addr16
xlat
push
xchg
lds
std
imul
in
cmp
addr16
mov
and
cmp
das
cmc
push
push
int3
pusha
jbe
pop
sub
outsb
inc
mov
mov
sti
mov
dec
jmp
lds
sbb
pop
int
inc
stos
test
test
mov
hlt
lods
dec
mov
push
aam
jnp
xlat
mov
rcl
fcoms
dec
mov
bound
aaa
jno
cmc
sbb
insb
fidivrl
movsb
bound
mov
xchg
xor
incl
push
pop
mov
sub
jno
ret
fnsave
jb
scas
ds
push
mov
test
cwtl
push
stos
jmp
cmp
call
repz
pop
enter
ficompl
stos
and
xor
int
dec
mov
push
inc
andl
cmp
and
jae
lret
cmp
add
cmp
std
stc
popa
push
add
jae
aad
addr16
mov
insl
into
sub
repnz
popa
add
out
enter
xchg
fwait
rcrl
leave
sbb
mov
xchg
xchg
jb
insb
jno
pop
lock
pop
outsb
xchg
dec
push
daa
inc
orb
mov
add
sub
sub
outsl
cmc
cmc
repnz
repz
ds
adc
jne
push
aas
xor
or
inc
inc
lret
loop
mov
push
pusha
pushf
fsubs
insb
rclb
pop
dec
sbb
xor
add
push
push
sbb
into
xor
roll
cmpsb
aas
xor
rclb
or
pop
dec
test
push
sti
sbb
fisubl
adc
cmp
lea
xchg
insl
xchg
out
scas
dec
jecxz
mov
mov
xor
or
or
cmp
hlt
loopne
stc
mov
mov
mov
lret
pop
rorb
cmp
mov
inc
stos
xchg
insb
dec
cmpsl
jno
inc
mov
int3
js
icebp
pop
cmp
mov
add
mov
fisttps
or
cmp
gs
ret
push
push
xchg
dec
push
es
adc
inc
aad
insl
rorb
sub
sbb
dec
mov
add
mov
test
mov
scas
jbe
cld
pop
lahf
cld
cmp
push
cmpsl
nopl
mov
call
adc
aas
pop
outsl
aaa
outsb
mov
sahf
sub
data16
leave
and
aaa
jne
fld
push
ds
fisubrs
scas
jmp
call
punpckldq
ror
ret
and
mov
popa
or
gs
scas
xor
nop
fmuls
xor
out
mov
ret
mov
push
xchg
or
jns
daa
sbb
bound
bound
dec
outsb
leave
lahf
loopne
push
cli
mov
jmp
int3
push
sarl
jmp
push
xchg
daa
mov
xlat
pop
psrld
inc
push
and
ror
cmp
in
push
rcrl
mov
pop
mov
add
les
mov
fwait
jecxz
loop
push
repz
outsb
mov
call
mov
mov
sbb
in
lods
mov
lods
rolb
cmp
inc
outsb
sub
in
inc
add
inc
mov
roll
jl
push
xchg
dec
sub
cmp
lahf
shl
adc
jmp
outsl
mov
lods
mov
loop
adc
xchg
push
lods
ret
mov
ret
sti
push
and
pop
cmp
mov
repnz
nop
jbe
sub
iret
jmp
dec
es
mov
mov
mov
sti
mov
je
imul
pop
dec
add
and
push
add
mov
nop
xlat
inc
test
hlt
lds
add
dec
add
add
mov
jbe
jne
int
mov
xchg
jbe
xchg
sub
mov
mov
fwait
xor
inc
push
inc
out
inc
cmpsb
adc
mov
inc
xchg
push
stos
mov
adc
mov
loop
sbb
and
cmp
aad
cmpsl
push
cmc
adc
mov
js
jne
repz
dec
and
sub
fldl
mov
add
fmuls
or
lods
xor
mov
xor
std
push
sub
jmp
std
mov
lahf
sbb
icebp
dec
cmp
sub
add
call
cmp
out
popa
sbb
mov
call
out
mov
pop
rcrl
inc
add
pop
sbb
out
neg
fisubl
push
add
push
js
out
ret
xchg
clc
adc
jg
add
inc
in
leave
dec
mov
les
pop
popf
push
pop
jp
jmp
lods
inc
out
loopne
mov
sub
xor
stc
lret
ret
inc
push
and
out
sbb
cltd
push
lret
adc
pop
xchg
loop
jl
cmc
loop
aam
pop
add
enter
bound
jnp
cmp
std
inc
ret
pushf
mov
jge
inc
pop
out
insl
xlat
mov
shlb
imul
movsb
out
jle
push
in
lret
scas
adc
mov
xor
cmp
ja
sti
mov
test
dec
mov
cs
mov
jnp
xchg
inc
adcb
jnp
incb
repnz
or
jge
or
sbb
test
fadds
mov
and
pop
dec
cld
in
push
sbb
inc
or
mov
mov
inc
cmp
xchg
cld
mov
jl
int
adc
jbe
dec
or
shlb
repnz
ds
jne
imul
movsl
es
dec
sahf
pop
movsb
push
inc
mov
and
inc
out
mov
mov
test
pop
shrb
xchg
adc
stos
jmp
jl
lahf
sbb
fwait
ja
xchg
xor
add
ret
jno
arpl
je
fs
fistps
xchg
and
push
scas
mov
mov
arpl
jae
rolb
in
addr16
das
fs
push
mov
jge
ds
adc
mov
sbb
mov
iret
mov
jl
sahf
ss
in
or
cld
jge
add
in
cli
out
movsl
and
add
andb
dec
in
or
std
dec
jmp
mov
xor
or
cs
xchg
out
test
xor
xor
sbb
xchg
cmc
add
xchg
add
int3
push
rolb
cmp
dec
dec
push
push
push
jge
xchg
add
aas
or
jo
adc
sub
bound
cld
shr
cmp
leave
sti
lahf
jns
lods
mov
decb
sbb
sbb
repz
xchg
pop
sub
mov
arpl
shrl
lret
xchg
jbe
or
repz
push
testl
sub
jle
repz
mov
sub
lods
or
stos
out
cltd
outsl
cmp
jo
inc
xchg
xchg
mov
int
mov
jb
or
in
pop
jge
mov
push
jp
fs
test
or
and
xor
push
pop
sub
sbb
lret
mov
dec
sbb
pop
cmp
add
sbb
enter
jbe
xchg
ja
cmpsl
add
xor
or
loopne
xlat
cwtl
and
das
lods
dec
sti
push
jae
cltd
adc
popa
cmpsl
push
sub
out
push
ljmp
bound
adc
lods
arpl
push
pop
push
enter
lods
lret
addr16
inc
ret
sti
popf
pop
adc
sub
xchg
out
out
negb
jno
add
lods
mov
pop
inc
ljmp
pusha
imul
aad
push
imul
fidivs
test
addl
sub
mov
shll
and
cmpsb
xabort
divl
mov
stos
rolb
pushf
inc
in
inc
aas
sub
outsl
imul
pop
js
jmp
jno
call
sbb
int
add
imul
inc
or
cmp
cmp
dec
inc
mov
ror
popf
pushf
enter
out
pop
in
cmpsb
lret
mov
mov
stos
and
cmp
pop
mov
adc
fiadds
cs
nop
mov
mov
shl
mov
fidivs
push
cmovle
adc
enter
arpl
pop
xor
sub
xor
addb
mov
cmc
mov
fldcw
ljmp
in
decl
and
test
sahf
fwait
mov
rcrl
lcall
xor
add
or
aad
stos
fistps
jecxz
cmpsb
incl
cmpsl
aam
addl
repnz
enter
cmp
xor
fwait
pop
push
sbb
imul
es
dec
shlb
pop
stos
mov
imul
in
in
inc
lods
imull
ret
shll
mov
call
push
mov
adc
xchg
data16
jmp
add
ss
cmp
scas
pop
imul
popf
cli
adc
je
cmc
in
imul
and
sar
sbb
xlat
aaa
cld
xchg
cltd
inc
imul
mov
xlat
and
push
or
mov
jmp
mov
xor
in
repz
mov
inc
jmp
cmpsb
shrl
pop
dec
jg
push
outsl
fdivrl
jne
in
xchg
pop
mov
mov
dec
push
and
cmc
jae
and
mov
popa
bound
cs
mov
push
push
adcb
dec
dec
cmpsl
pusha
pop
or
mov
sbb
daa
add
jnp
mov
addr16
insb
cwtl
sbb
mov
nop
out
push
fisubs
movsl
repz
adc
mov
inc
or
rolb
inc
adc
pop
popf
ffree
fmull
icebp
ja
dec
ss
into
in
push
daa
lret
insl
ds
es
repz
cmp
xor
lds
stos
or
popa
outsb
gs
out
cli
xorb
sub
lret
adc
rcll
and
in
dec
roll
cmp
jns
enter
jecxz
test
aaa
lds
dec
mov
loop
push
push
xor
daa
jbe
outsl
ss
jns
sbb
nop
dec
fsubs
stos
push
sbb
scas
addb
testb
clc
jmp
sbb
add
lock
lret
cmp
xchg
add
jo
mov
popa
or
adc
cli
outsb
sbb
imul
lea
jb,pt
adc
lret
push
fistl
pop
loopne
addl
pop
dec
movsb
or
cmpsb
shlb
pop
add
ja
add
daa
aam
shll
shrb
es
mov
fsubrl
pop
jmp
push
jns
mov
and
ret
cwtl
stos
pop
xor
or
arpl
sahf
pop
add
jmp
test
inc
jg
shl
sub
sbb
inc
mov
ja
call
fcompl
xor
pop
imul
clc
push
rclb
sbb
adc
add
cwtl
mov
sbb
cmp
jne
cmp
pusha
jb
addr16
mov
les
xor
lcall
jnp
adc
and
insb
test
pop
rolb
fwait
xor
lods
loope
loopne
ret
mov
mov
fcmovnu
ret
lock
xchg
fadds
mov
mov
xor
xor
enter
jb
call
inc
arpl
rcr
stc
add
sbb
int3
jbe
ljmp
ja
xorl
roll
mov
and
and
adc
cld
es
sbb
aas
scas
lret
jnp
sbb
pop
int3
mov
xchg
daa
lcall
jnp
sbb
inc
insb
mov
jle
mov
xor
cmp
stos
loop
je
mov
xlat
jbe
repz
cmc
shll
cmpsl
leave
mov
aaa
dec
movsl
mov
cmpsb
fldt
fstpt
mov
inc
xchg
out
lahf
xchg
std
push
inc
cltd
fistpll
push
mov
pop
sahf
inc
shll
pop
add
ret
lds
jb
bsf
movsb
push
cmpsl
inc
out
inc
iret
ret
inc
xchg
iret
jnp
cmpsl
mov
sahf
stos
adc
aad
das
test
lds
fxam
std
stc
sbb
arpl
nop
mov
test
scas
xlat
mov
cwtl
in
inc
xchg
push
iret
sbb
repnz
xchg
adc
pop
xlat
xor
ljmp
cmp
dec
xor
push
icebp
add
leave
ljmp
dec
out
xchg
or
int
hlt
mov
out
imul
and
pop
rcrb
jae
sbb
jg
arpl
dec
push
les
ljmp
stos
cltd
ret
loopne
lods
push
outsb
inc
adc
iret
jp
stc
or
mov
bound
pop
inc
mov
adc
shll
jmp
xor
add
insl
mov
int
scas
push
and
test
call
mov
out
movsb
inc
mov
pop
pop
cli
mov
sub
push
ds
in
or
fisttpll
es
mov
pusha
inc
not
sbbb
jbe
iret
inc
repz
in
test
mov
sbb
inc
rol
and
aad
sbb
mov
aam
xchg
das
js,pn
pop
fldcw
subl
cmp
sub
mov
popa
int
lods
test
or
inc
pop
or
call
popa
xor
aam
fcoms
xchg
mov
mov
shll
mov
push
cld
in
bnd
push
rcr
inc
push
mov
pusha
pop
lods
push
adc
dec
adc
shll
or
cltd
aas
jge
mov
jo
mov
inc
dec
cmp
and
mov
int
cmp
and
int3
mov
pop
repz
hlt
jne
cli
fldenv
in
push
xor
sahf
pop
xlat
add
scas
ror
fs
xchg
add
orl
add
int3
ljmp
loopne
movsl
lods
lret
sub
iret
xchg
mov
mov
enter
and
stos
sbb
call
in
add
pop
sbb
mov
adc
mov
and
stc
fnstsw
pusha
mov
dec
jge
fsubr
inc
sahf
into
ss
sub
inc
lret
pushf
cmp
mov
ret
push
inc
repz
push
add
int3
mov
and
das
std
xor
push
adc
inc
test
xchg
ds
cmovp
in
lret
dec
out
jns
cs
shl
push
rorl
mov
pop
mov
inc
sbb
jbe
inc
jb
sub
divb
hlt
cmp
ss
popf
adc
cmp
scas
lock
es
jb
and
jecxz
movsb
sbb
cmp
jge
mov
mov
mov
jb
stc
pop
jmp
jb
pop
dec
shrb
jl
call
lret
and
mulb
lcall
push
adc
test
mov
les
pop
fstpl
leave
test
fistpl
inc
jno
push
lods
xchg
loop
and
repnz
add
pop
loop
cmp
push
inc
lea
pop
jecxz
sbb
jge
mov
push
pop
cld
std
add
ret
jg
fiaddl
mov
mov
inc
nop
jp
xchg
inc
mov
mov
in
sub
inc
imul
stos
inc
adc
int3
mov
lock
scas
ljmp
cltd
mov
jge
popa
inc
jo
iret
and
adc
into
push
lea
outsb
fidivl
mov
or
mov
fsubrp
addr16
shll
mov
or
dec
enter
sub
mov
adc
adc
xor
jns
adc
mov
xchg
icebp
adcl
sub
sbb
in
popf
call
jnp
out
sub
jecxz
mov
ja
lahf
push
dec
xor
pusha
add
dec
arpl
rcrb
dec
cmp
xor
scas
fwait
inc
sub
cmp
lds
add
cwtl
add
sbb
mov
stos
xor
loopne
jne
mov
pop
dec
cs
add
dec
mov
fsubr
add
ud0
shlb
test
aam
xorl
imul
daa
pusha
negb
fmull
xchg
aaa
jecxz
mov
loope
pop
outsl
sub
mov
loope
ljmp
adcb
int3
rcll
lea
ljmp
enter
sbb
sbb
push
jnp
or
ds
mov
dec
daa
cmpsl
iret
insb
lret
loopne
pop
mov
mov
mov
adc
xchg
mov
lret
inc
mov
sbb
mov
mov
or
jno
cli
and
ja
sbb
arpl
pop
adc
iret
data16
ds
insl
sub
sbb
data16
out
inc
pop
add
dec
ja
pop
and
test
cmp
testb
int
psubusw
mov
inc
pop
imul
pusha
je
ds
aad
jnp,pt
mov
inc
addr16
addr16
lds
or
bound
xchg
sti
sub
in
popa
rcll
xchg
and
jnp
inc
or
call
adc
ss
ja
gs
clc
cmc
or
js
xchg
sti
rolb
rcrl
push
dec
jnp
lds
push
xor
and
mov
jo
jmp
rorl
dec
movsb
and
push
lock
leave
mov
sahf
fiaddl
mov
repnz
pop
sub
lea
inc
nop
cwtl
es
ljmp
aam
mov
jno
lods
mov
das
fimuls
or
xchg
xchg
in
sarl
dec
xor
jg
pop
les
mov
test
fisubrl
stos
pop
dec
ds
rclb
in
jecxz
add
adc
sbb
in
stc
add
ds
add
lret
pop
imulb
dec
subl
adc
jmp
nop
dec
je
push
jmp
mov
mov
sti
mov
insl
push
xorb
add
add
adc
call
imul
and
bound
mov
jg
xchg
lret
adc
pop
sbb
fwait
xchg
adc
lock
cmp
push
jae
sub
jp
push
shll
inc
dec
adc
mov
and
outsb
aam
pop
jp
shll
test
and
enter
cmpsl
popf
subb
jmp
push
cmp
rcll
xor
sbb
add
daa
inc
lahf
push
inc
xchg
pushf
pop
mov
add
rcrl
jne
push
mov
xlat
pusha
std
jbe
ja
dec
iret
jg
hlt
push
cmp
in
pop
loop
lods
inc
out
je
xor
jmp
lret
push
dec
pop
jecxz
dec
xchg
jle
pop
aas
cmpl
mov
fists
out
inc
daa
addr16
das
mov
mov
mov
cmc
es
js
xchg
pushf
sti
xchg
push
stos
cmp
sub
ljmp
lcall
orl
nop
mov
aaa
mov
mov
lods
lods
insb
lds
dec
loope
scas
outsb
adc
cmp
insb
sbb
cmpb
or
loope
lretw
xor
fiadds
daa
in
xchg
insb
xchg
sbb
mov
clc
loop
push
xor
rcr
mov
movsl
scas
xlat
shll
jb
pop
dec
sbb
inc
shl
and
sbb
ds
ret
out
enter
mov
pop
lea
pop
and
in
mov
push
mov
aas
sub
pop
mov
repz
iret
xchg
icebp
pop
andb
dec
adc
dec
pushf
xchg
gs
arpl
gs
jno
mov
outsl
sahf
jb
pusha
mov
xor
pop
dec
xchg
movsb
cmp
out
pushf
adc
lds
js
jp
push
add
add
sti
adc
aad
cmpsl
divb
or
dec
pop
dec
int3
mov
popa
or
mov
stc
add
xor
sub
pop
mov
fsubs
push
fsubs
imul
out
mov
add
mov
jle
and
aad
push
sbb
mov
xor
xchg
xor
sbb
cmpsl
das
add
les
inc
inc
int
test
lods
mov
cmc
and
lcall
or
sbb
xchg
insb
ret
xchg
loop
or
push
mov
mov
movsb
in
clc
pushl
movsb
push
xchg
insb
sarb
cltd
pop
lds
movsl
addr16
mov
xchg
jmp
movsl
and
and
pop
stos
adc
les
xor
rcll
pushl
xor
add
push
cwtl
cmc
imul
mov
mov
pop
pushf
insl
fbld
arpl
push
out
stos
es
jle
imul
inc
adc
xor
leave
cmpsl
stc
ss
sbb
dec
xor
imul
scas
cmp
insl
lret
leave
push
sbbb
cmpsl
xchg
inc
mov
sub
xor
xchg
mov
test
pop
icebp
addb
pop
aaa
stos
dec
fisttpl
scas
stos
scas
sbb
adc
pop
xchg
mov
fwait
lds
imul
test
aad
xchg
sub
cmp
xor
xor
add
lret
push
out
jne
das
adc
dec
pop
js
xchg
mov
add
lods
jo
xchg
pop
mov
pop
jl
mov
mov
jp,pt
mov
add
lret
cmp
mov
xor
stc
pop
pop
std
outsb
jnp
jg
mov
es
into
cmp
imul
rorl
cli
mov
outsb
in
mov
cs
stos
mov
int3
out
mov
add
jnp
insb
test
cmp
rcl
data16
mov
dec
mov
mov
inc
rclb
cltd
in
stos
jp
xchg
xchg
pop
pop
dec
lds
nop
adc
sbb
add
cli
sti
pop
dec
out
out
cmpsb
jp
push
stc
push
sub
cld
lret
les
cmp
hlt
xor
inc
sbb
dec
hlt
xor
movsl
sub
rorl
cmpsb
popa
mov
adc
mov
sub
xor
jo
cmp
add
mov
mov
add
sub
xchg
sahf
pop
daa
xchg
call
sti
mov
jle
add
mov
inc
xchg
inc
cmp
shl
push
shrd
ror
idivl
mov
lcall
mov
ss
and
popa
into
jo
inc
int3
and
sub
jbe
dec
push
std
sbb
fwait
push
fs
xor
fisttps
fldcw
rorb
jp
fistps
test
pop
jnp
and
jmp
lret
in
jecxz
movsb
movsl
dec
pop
pop
roll
adc
xor
arpl
sbb
dec
fdivrs
add
jmp
mov
push
dec
outsb
pop
lea
mov
jae
sti
jae
iret
inc
xlat
ret
push
pop
ret
pop
xor
mov
test
push
sbb
or
xchg
arpl
aad
add
rcrl
mov
cmpsl
in
das
or
adc
fs
mov
xlat
xchg
leave
repz
sbb
and
jo
push
pop
iret
scas
mov
mov
mov
sbb
pop
mov
lcall
cmp
jnp
lahf
mov
jg
pusha
dec
shrl
stos
pop
orb
loopne
xchg
call
cli
stc
mov
push
addr16
xlat
pusha
fisttps
ficomps
sbb
dec
dec
adc
negb
mov
subb
mov
mov
out
xchg
orl
mov
inc
pop
pusha
xor
cmpsb
jns
jno
mov
xor
mov
jmp
cwtl
clc
mov
push
gs
push
sbb
fisttpl
dec
shl
rolb
out
sbb
inc
add
push
shll
cmp
sti
inc
mov
out
jmp
icebp
int3
and
iret
adc
xchg
mov
add
push
push
mov
inc
mov
xlat
lods
jge
divl
fxch
out
subl
lods
inc
fcomps
push
mov
add
mov
mov
push
xchg
and
mov
sub
pop
sub
adc
test
roll
sbb
or
inc
jl
rorb
fs
mov
add
test
lahf
cmpsl
inc
je
stc
lods
and
ret
shrb
lcall
out
mov
int3
inc
ror
mov
cmpsl
in
ss
mov
stos
cmp
push
push
idiv
push
shrb
leave
xchg
into
push
stc
add
or
sub
add
and
lock
mov
pop
sbb
sbb
es
subl
push
ret
lods
and
jle
adc
inc
push
mov
pop
pop
jg
adc
sbb
push
mov
rcrl
subb
dec
lea
mov
mov
cmp
mov
mov
jecxz
inc
pop
jns
sbb
or
and
outsb
outsl
roll
gs
outsb
mov
movsb
in
jne
decl
jecxz
and
fmuls
mov
dec
pop
push
sti
out
mov
xchg
sbb
sbb
jle
inc
push
pop
sbb
xchg
int
cmp
loop
out
insl
cmp
insb
jmp
ret
outsl
push
cwtl
ss
mov
in
jb
and
aaa
fsubrl
cmpsl
in
push
pushl
jns
push
jmp
or
int
jne
add
in
jo
iret
mov
test
jmp
push
push
cwtl
xchg
pop
rcr
xor
inc
lods
sbb
loop
repz
pop
and
cmp
xchg
ror
nop
js
push
mov
nop
jo
das
shlb
dec
jg
mov
or
lds
outsb
mov
inc
aam
or
mov
inc
rol
sub
jle
dec
loopne
jne
scas
sub
stos
test
stos
rorb
push
sub
call
and
int3
xchg
jle
test
por
js
shl
add
pop
lods
pop
mov
shrl
xchg
popf
cltd
out
inc
roll
jge
je
call
mov
icebp
jg
mov
jecxz
cmpb
int
insl
push
out
or
pop
sahf
into
jmp
inc
es
mov
mov
fisubrl
push
push
xchg
adc
shrl
adc
dec
dec
or
sub
fcomps
add
stos
add
mov
xchg
cltd
sub
dec
or
mov
or
jle
jecxz
cmp
push
imul
ret
lods
cltd
add
cmp
mov
es
fprem1
out
arpl
notb
mov
orb
sti
mov
mov
xchg
leave
mov
cwtl
mov
into
adc
add
or
pop
push
fists
nop
xor
cs
in
aam
out
cmp
stos
pusha
das
or
lahf
daa
leave
jne
cmp
sub
mov
nop
in
mov
icebp
push
in
dec
and
ret
test
jne
popf
sub
dec
ljmp
push
inc
mov
xchg
mov
scas
ds
cwtl
iret
xor
lret
jecxz
push
mov
je
pop
aam
in
rorl
push
in
aam
test
cltd
data16
jne
inc
add
mov
dec
mov
addb
add
imulb
inc
mov
dec
lahf
mov
sahf
adc
push
mov
movsb
in
and
and
insb
js
je
fs
stos
lods
jbe
int3
data16
es
pop
dec
pop
test
repz
in
pop
imul
shlb
iret
sbb
ds
test
add
mov
inc
push
icebp
rclb
jp
out
in
dec
pushf
test
xchg
movsb
jbe
testb
xchg
lret
sub
inc
add
lea
fidivrl
lock
adc
pop
mov
mov
push
and
jbe
adc
repnz
in
jl
jl
daa
or
xchg
xor
jge
mov
inc
cwtl
lods
bound
out
and
xchg
andl
push
mov
mov
push
idiv
out
pop
idivb
fcomps
mov
mov
or
jo
mov
push
cli
test
pop
mov
pop
in
sahf
adc
aad
bound
jmp
cmpb
pop
repnz
jb
out
xlat
pop
lods
shrb
cmp
adc
aad
inc
sub
repnz
lcall
xor
add
movsl
fldl
sbb
into
push
and
sti
aam
mov
outsb
adc
xchg
fwait
in
insb
adc
cmp
rcl
adc
shrb
lcall
jl
cld
lods
pop
sbbl
jl
inc
fsubrl
sahf
add
stc
pop
adc
pop
punpcklbw
leave
mov
mov
sbb
stc
outsb
lret
shr
add
ljmp
ret
dec
and
movsb
push
jmp
inc
lods
loopne
sub
daa
lahf
dec
xchg
loopne
cmc
aaa
sbb
mov
and
add
jo
ret
cmc
sbb
adc
adc
imul
daa
shr
dec
mov
inc
and
or
dec
jle
dec
sahf
ror
dec
xchg
mov
mov
mov
sbb
hlt
and
and
mov
inc
rcll
cmp
imul
aam
adc
stos
or
jae
scas
mov
sbb
daa
jnp
jno
in
mov
inc
mov
xlat
es
mov
bound
insb
cmc
cli
pop
sub
fwait
dec
cld
xor
nop
push
and
sub
lcall
jg
push
add
mov
call
and
stc
out
out
jno
add
movsl
sbb
int
inc
mov
lcall
cmp
lea
aaa
sub
aaa
stos
cmp
xadd
sti
lahf
lcall
dec
outsb
push
in
pusha
shlb
fildll
popa
cltd
orl
pop
mov
mov
sub
xor
mov
in
stos
lahf
push
lahf
ret
push
ja
into
dec
xchg
arpl
loope
cli
adc
push
xchg
cmp
pop
sbb
sbb
jmp
stos
push
push
xor
je
outsl
jne
adc
pop
sub
in
shll
std
ficomps
sub
mov
mov
rcrl
insl
rolb
nop
shll
sub
repz
fstpl
sub
and
shll
out
mov
push
lea
rorb
or
scas
mov
imulb
stos
lret
mov
mov
pop
mov
divb
loopne
push
test
in
pusha
push
jnp
rolb
js
cmpb
mov
sub
adc
outsb
sti
outsb
jno
out
rclb
iret
shr
ja
mov
xchg
jg
test
xchg
dec
xchg
sarb
cwtl
stc
notb
and
mov
bound
mov
outsl
ffreep
adc
ja
dec
mov
test
or
fisttps
adc
out
aad
push
and
lret
jb
loope
js
add
sbb
lahf
ljmp
lahf
outsl
jle
lahf
pushf
cs
lcall
insb
call
cmp
mov
decb
xorl
pop
popa
lret
hlt
jae
scas
mov
add
outsb
les
out
jle
imul
mov
sbb
adc
into
or
stos
mov
sahf
pop
aad
add
xor
shrl
mov
movsb
mov
xor
in
add
neg
mov
aad
push
inc
shlb
out
test
and
rorb
fmuls
cmp
cmp
stc
xor
loop
dec
sbb
jp
sbb
push
into
xor
loope
shl
push
sarb
pop
fisubl
dec
mov
rclb
xlat
cs
add
push
and
scas
lods
iret
pushf
push
scas
dec
push
out
repnz
mov
push
std
add
lods
mov
mov
sub
pop
pop
cli
shl
xor
pop
and
and
js
ds
leave
xchg
xchg
mov
inc
clc
aam
mov
adc
addr16
add
lods
pusha
lods
jle
sub
lret
adc
call
cmp
push
jae
and
cmp
into
mov
les
je
stc
cmp
add
stos
js
pop
lcall
outsb
cmp
lret
xor
lds
repnz
stos
inc
jae
xchg
add
enter
pop
jno
sub
cld
sbb
cmp
clc
adc
out
shr
lock
das
into
inc
sbb
sub
or
or
mov
push
mov
mov
and
clc
lahf
sub
loopne
shll
inc
jbe
movsl
mov
push
xchg
mov
fildll
nop
inc
mov
movsb
mov
pop
out
imul
test
push
loope
xor
lret
jnp
push
xor
push
push
out
aad
mov
mov
jbe
mov
fdivrs
or
jne
insl
dec
add
pop
fsubs
in
dec
sbb
cmp
dec
mov
xor
lods
adc
sbb
cld
pop
xor
pop
mov
xchg
mov
or
add
sbb
lock
dec
and
pushf
ficompl
es
xor
mov
xor
arpl
mov
in
jecxz
xchg
test
push
andnps
inc
imul
scas
add
cmp
fmulp
pusha
or
scas
insb
push
jmp
aas
pushl
int
test
fmulp
vpsubq
push
and
push
jbe
pop
sbb
fildl
fwait
in
sub
popf
add
jp
out
movsl
and
pop
sarl
fcomps
mov
sub
pop
dec
mov
xlat
dec
fwait
jl
cmp
jecxz
cmp
filds
das
pop
add
mov
or
sbb
push
xchg
xor
lcall
mov
test
adc
fnstcw
rdmsr
rcl
xchg
movsb
sub
inc
out
pushf
test
mov
push
sub
call
mov
mov
pop
jmp
mov
aad
mov
ss
dec
loope
or
ljmp
and
mov
dec
in
test
pusha
push
jle
dec
add
xor
test
in
outsb
jmp
cld
fsts
movsl
and
lret
mov
fdivl
aaa
cli
ja
jns
scas
jae
cmp
dec
mov
lea
hlt
mov
out
std
adc
icebp
lods
pop
jmp
push
je
mov
add
jge
mov
xchg
mov
popa
arpl
out
mov
pop
push
lcall
movsl
sbb
fisttpll
push
xchg
mov
adc
aaa
data16
dec
mov
shl
jg
popf
mov
mov
hlt
mov
sbb
push
xor
pop
mov
pop
notl
push
push
mov
shrl
dec
sub
outsl
inc
pop
and
jmp
andl
sbb
xchg
andl
leave
sbb
xor
add
leave
push
sbb
ja
cmp
adc
xlat
sub
popf
adc
push
inc
jmp
stc
xor
sbb
push
testl
lcall
mov
mov
push
nop
pop
rolb
mov
int3
inc
out
and
lock
inc
inc
dec
icebp
or
popf
pop
xor
lock
mov
lods
pop
jp
in
pop
jle
js
add
loopne
fs
or
outsl
xchg
cmp
cmp
push
notb
cmp
dec
jno
enter
push
fisubrl
mov
dec
adc
mov
daa
mov
sbb
push
cmp
dec
cmp
lea
mov
in
ljmp
fisubrl
mov
insb
scas
fnstsw
xchg
mov
daa
data16
jns
sub
or
pop
arpl
ds
outsb
mov
fsts
jne
push
pop
and
cmc
dec
push
sbb
xchg
mov
sub
xchg
leave
loop
aad
scas
mov
fldt
jne
stc
mov
adc
add
inc
sbb
fildl
mov
sti
or
ret
or
xchg
lahf
cmp
or
rorb
lret
fidivl
addl
cwtl
adc
enter
or
rcr
cmp
shll
jns
leave
out
int
ret
mov
mov
push
xor
cli
adcl
adc
call
aaa
mov
adc
fstpl
call
lret
jl
mov
pop
mov
lahf
mov
add
aad
push
gs
lret
jle
insb
sub
pop
mov
imul
rclb
add
mov
arpl
mov
push
add
sub
mov
repz
push
adc
jo
out
lods
mov
fisubl
gs
call
sub
clc
les
dec
sub
test
pop
xchg
lcall
push
adcb
mov
fiaddl
mov
sti
je
pop
icebp
pop
cmp
in
into
cmpsl
pop
aaa
in
rcrb
mov
std
call
mov
jmp
clc
cs
inc
das
cmpb
cld
fnsave
jne
pop
in
and
push
cmp
scas
mov
xchg
lahf
and
movsl
mov
aad
mov
push
dec
and
dec
mov
or
mov
icebp
inc
loop,pn
addr16
stos
out
pusha
lret
adc
xor
pop
cmp
inc
push
mov
sbb
rclb
adc
push
add
mov
lret
push
or
mov
ret
jno
push
dec
cmc
push
xchg
and
add
sbb
mov
and
dec
push
mov
push
jno
dec
push
xchg
fimuls
pop
pusha
jb
ljmp
sub
push
inc
out
adc
xor
insl
aas
mov
dec
add
mov
popa
push
mov
add
repz
jnp
inc
pop
mov
mov
mov
mov
test
mov
mov
jo
test
and
sub
mov
je
repnz
xchg
mov
fldenv
mov
push
xchg
add
add
mov
xchg
add
push
xor
cwtl
icebp
jle
dec
ret
out
mov
push
aas
pusha
fisttpl
ret
mov
xchg
jnp
cmpsl
popf
xchg
xchg
addr16
jo
loopne
jle
fldcw
cmc
and
popl
sub
sbb
fistl
in
xor
insb
lahf
aas
sbb
push
outsl
xchg
dec
mov
lea
gs
fwait
mov
pushf
sahf
inc
cmpsl
pop
decb
popf
cmp
fisttpll
movsl
adc
sub
scas
pop
pop
pop
iret
fimuls
mov
shll
pop
jecxz
and
aas
je
jle
add
add
outsl
lcall
shll
xor
push
and
sub
repz
mov
push
cwtl
push
xchg
add
movsb
mov
icebp
inc
orb
lcall
inc
out
xchg
cmp
pop
and
dec
pop
mov
cmp
dec
je
jge
jns
lods
mov
pop
test
push
mov
mov
nop
and
xor
insb
mov
or
xor
test
loop
sub
jbe
mov
jmp
jp
les
std
sub
test
int
xchg
mov
mov
sbb
jo
insb
inc
inc
pop
jbe
xchg
fcmovu
adc
mov
jmp
mov
in
aad
pop
add
fdivrs
pop
cmpsl
and
aad
fistpll
pop
jg
and
or
scas
andb
mov
push
imul
pop
call
and
ficomps
xor
lock
data16
cld
push
mov
xor
pop
pushf
push
add
mov
loopne
or
and
xchg
push
sub
mov
inc
insb
push
cmp
iret
push
dec
gs
out
pop
or
pop
mov
xchg
loop
push
loope
xchg
scas
lahf
lock
pop
sub
loopne
adc
rcrl
sbb
push
push
in
dec
pop
cmpsl
mov
and
sbb
push
mov
xor
push
jbe
mov
mov
and
xlat
lret
dec
ficomps
inc
jmp
sub
sahf
xor
jb
mov
push
sub
lret
inc
pop
fidivs
push
outsb
push
add
xor
pop
pushf
ljmp
cmp
cmp
jns
add
push
push
mov
pop
loop
mov
sbb
pusha
jecxz
mov
pop
pop
push
cmp
pop
insl
in
pop
out
pop
leave
ret
push
mov
push
leave
mov
push
in
inc
loopne
xchg
pop
mov
fdivrs
xchg
lahf
jge
xchg
in
push
jae
aam
mov
pop
int3
leave
cmp
sti
mov
xor
and
leave
sbb
cmpsb
out
stc
push
fwait
xlat
aaa
push
stos
lds
fs
movsl
xor
or
aas
xor
cmp
scas
or
js
rolb
adc
xorl
lcall
sub
clc
lahf
cmp
imul
add
push
pop
add
push
aad
pop
add
add
push
xchg
fmuls
sbb
dec
icebp
imul
fcompl
push
mov
pop
data16
xor
outsl
je
dec
dec
cmpsb
jb
cli
pop
fnstsw
xor
lea
aaa
cmp
out
push
fisubrs
fidivs
push
cs
cltd
and
lahf
cmp
fistpl
fdivrs
pushl
lods
cmc
outsl
mov
mov
jge
adc
sbb
push
cmp
pop
pop
roll
int
push
enter
and
sbb
setnp
jne
scas
test
dec
lcall
adc
stc
jge
xor
cld
mov
mov
nop
and
setbe
daa
arpl
fldcw
cmp
in
dec
ret
jmp
xchg
loop
iret
sbb
sbb
nop
scas
xstore-rng
cmpsl
push
hlt
pop
cmp
ficomps
js
mov
jnp
pop
int3
and
std
iret
lea
movsl
add
cmpsb
cltd
popa
add
aas
cld
cmp
incb
jb
sbb
mov
cli
xchg
jmp
dec
pushf
mov
xchg
add
test
dec
adc
push
inc
inc
and
adc
inc
dec
sub
jb
cmpl
imul
jle
inc
out
jge
rorl
xchg
jle
lsl
inc
lea
and
sbb
dec
fdivl
pop
cmpsl
loop
mov
sub
mov
mov
xchg
xor
jne
les
iret
iret
std
cli
mov
pop
pop
in
add
xchg
xor
repz
sbb
sub
fcoms
add
mov
cltd
push
jecxz
jl
or
xor
subb
mov
sar
lods
sub
dec
pop
xchg
psubsw
mov
out
lcall
dec
iret
pushf
push
call
sbb
fiaddl
jecxz
int
rclb
sbbl
sbb
mov
xchg
jp
cli
dec
xor
insl
jecxz
mov
or
in
ljmp
dec
mov
and
leave
sbb
adc
sub
xor
idivl
sbb
push
inc
popa
or
pop
out
inc
pop
jge
pop
push
test
jbe
jae
js
wrmsr
addr16
jbe
dec
xchg
mov
mov
das
in
fcompl
repnz
daa
pop
mov
jmp
ss
cmp
aaa
jl
cmpsl
inc
xchg
sarl
adc
push
mov
cld
pop
mov
adc
xchg
ficoms
in
inc
pop
fnsave
out
cld
push
fidivrl
flds
loop
lahf
or
addr16
shr
pop
out
pop
loopne
movsl
inc
push
jae
mov
aam
mov
cmpsl
sbb
rclb
dec
xchg
adc
sub
movsl
sbb
mov
adc
mov
mov
sub
mov
xor
xor
std
pop
add
lea
out
jne
addr16
dec
aas
xor
sbb
idivl
dec
adc
fs
push
inc
adc
aas
mov
jle
out
inc
push
mov
cld
xor
js
push
pop
sbb
out
jmp
aad
jne
add
testl
sub
push
lret
mov
add
dec
add
fdivs
in
mov
mov
and
dec
pop
mov
adcb
push
xchg
adc
mov
test
icebp
mov
xor
in
pop
arpl
mov
lret
mull
xor
lcall
jnp
leave
sub
add
fcoms
int3
shl
push
scas
sarb
int3
cli
sbb
push
scas
mov
jecxz
repz
repnz
popa
pop
add
cmpsb
jb
mov
mov
or
fistps
pushf
mov
pop
cmpsb
stc
fmul
and
ljmp
add
mov
add
aam
and
insl
jg
push
add
in
scas
test
mov
nop
push
jmp
pop
xchg
or
popf
addr16
dec
mov
jne
pop
push
loope
call
rep
imul
mov
mov
lcall
outsb
jp
fstps
into
dec
mov
or
inc
mov
dec
inc
ja
mov
inc
push
in
cmpsl
xor
int
and
sti
sbb
mov
cmp
xor
cmpsb
fcmovnu
mov
int3
or
ljmp
cmp
cmp
iret
call
pop
cmp
pop
or
xchg
mov
lcall
test
xchg
jmp
cmp
loop
jo
mov
ss
outsb
and
jno
cmp
jbe
and
and
xchg
decb
sahf
subb
sbb
push
pop
mov
insb
sbb
and
add
mov
test
add
fstp
mov
cmpsb
jl
mov
outsb
lock
imul
mov
inc
fwait
mov
aam
out
test
ret
sbb
testl
pusha
cmp
xchg
sub
add
adc
mov
jg
add
inc
cmc
bound
insb
mov
fsubs
jecxz
jno
cwtl
aaa
xor
mov
mov
stos
fisubs
stos
mov
pop
leave
into
and
xchg
repnz
ds
repnz
pop
pop
adc
mov
dec
xchg
or
mov
stos
pop
jae
test
iret
out
aad
mov
push
ds
je
cld
scas
pop
aas
push
xchg
loop
lahf
ficoms
inc
push
cmc
mulb
shll
scas
out
jae
shlb
dec
jns
sbb
mov
out
add
mov
mov
mov
push
cwtl
das
movsb
cli
outsl
imul
pop
mov
jae
loopne
mov
insb
mov
xlat
pop
and
call
cmp
push
push
jo
loopne
gs
jl
cmp
out
daa
shlb
sub
jle
mov
fistpl
mov
add
xchg
add
cwtl
xor
pavgw
mov
mov
pop
pop
xchg
jl
jecxz
xchg
jnp
jb
jp
push
fbld
pop
dec
pop
imul
sub
sbb
adc
or
bound
mov
loop
mov
mov
mov
in
xor
inc
mov
mov
inc
pop
lods
inc
jge
lods
insl
inc
add
jae
movsl
repz
sbb
std
add
cs
xlat
testl
pop
xchg
test
xchg
insb
std
mov
mov
push
add
movsl
mov
lea
xor
orb
rclb
lret
jne
or
sub
lcall
sub
inc
adc
ficompl
pop
or
push
repz
testb
mov
test
lret
jmp
rorl
mov
outsb
xchg
sbb
jge
cmp
jo
sub
ret
in
mov
xchg
inc
jl
mov
test
repnz
out
shlb
ret
push
loopne
push
push
xchg
ror
mov
jbe
inc
leave
stc
mov
in
lcall
ljmp
enter
daa
push
pop
xor
clc
nop
movsb
xchg
leave
dec
in
movb
rcrl
popf
cmpb
mov
mov
mov
sbb
pop
shll
dec
lahf
fildl
movsl
pop
mov
pop
push
outsl
outsb
pop
shr
pop
nop
jnp
loopne
mov
sbb
push
lgs
mov
stos
fsubrs
pop
dec
xor
jb
mov
insb
jecxz
jmp
jbe
int3
jmp
je
imul
fs
hlt
loop
and
movsb
inc
jp
push
testl
jb
mov
mov
insb
lock
sbb
repz
mov
in
push
enter
rol
cltd
dec
inc
movsl
adc
mov
daa
mov
sarb
mov
xchg
sahf
inc
and
clc
loop
xchg
popa
fnstsw
repz
nop
loope
mov
arpl
add
stc
pop
push
ja
pop
movsb
dec
pop
mov
xchg
lahf
es
cmp
sbb
mov
adc
push
call
push
xchg
pop
xchg
pop
mov
push
sbb
pop
jno
shll
push
adc
adc
and
fcmovne
push
pop
cmp
cmp
stos
test
mov
xchg
dec
scas
shl
in
popf
sub
jl
cmp
ja
popf
push
inc
jg
pop
pop
inc
fldt
jmp
dec
push
iret
ret
fisubrl
push
jg
cltd
mov
push
sti
fcoml
jge
cmp
jp
dec
adc
mov
jne
cmc
jnp
divb
xchg
outsl
scas
je
cmp
dec
shlb
sub
sti
xor
shl
cmpsb
mov
fstpl
testl
mov
mov
pop
aam
inc
test
sub
popa
call
test
lods
or
cmp
push
or
push
mov
jns
push
jle
dec
int
fsubl
mov
sub
in
aaa
inc
fcmovbe
mov
out
jno
ja
rcl
mov
stos
fiadds
movsb
cld
and
xlat
cmpsl
dec
enter
xchg
int3
ljmp
movsl
xlat
andl
test
or
pop
push
xchg
jge
xchg
addl
lret
jae
pop
lret
mov
cmpb
ret
jns
jns
loop
ja
into
push
repnz
xchg
repz
jnp
dec
outsb
dec
imul
sbb
fs
dec
mulb
sub
xor
add
push
shr
xor
lret
add
mov
xor
adc
cli
adc
inc
dec
pop
mov
adc
pop
sbb
arpl
stos
rorl
bound
jmp
call
aam
das
aas
jp
ffree
pop
mov
fcmovu
icebp
sub
cmp
pop
cltd
jmp
lsl
js
push
icebp
rorl
and
pop
fldl
mov
lods
pop
cmp
xor
sub
xchg
daa
and
sbb
xchg
mov
imull
xchg
cltd
mov
dec
pop
lock
jg
data16
cltd
sbb
hlt
pop
call
fistl
push
xor
mov
sti
push
sub
cmp
jle
add
aaa
adc
sbb
clc
jns
pop
sti
jmp
mov
and
cli
cli
lea
jae
icebp
xor
test
xor
int
or
mov
test
daa
dec
xchg
popa
xor
add
jno
cmp
mov
adc
xchg
inc
test
dec
div
xchg
and
push
xorl
sub
ljmp
aad
xchg
add
test
imul
pop
out
adc
add
repz
jl
fucom
xchg
mov
loope
dec
push
cmp
xchg
or
and
xor
push
cmp
andb
mov
sub
jge
mov
push
adc
icebp
cmp
fsubp
and
mov
lahf
mov
cmp
and
adc
xchg
dec
hlt
xor
lahf
ljmp
sub
dec
push
jecxz
imul
outsb
dec
push
fdivrl
cs
ret
cmp
xchg
jle
push
cld
aam
mov
idivl
sub
inc
and
and
andl
into
inc
scas
jns
dec
std
push
loope,pn
ret
out
mov
inc
fidivs
xor
sbb
fnstsw
movsb
outsl
mov
insl
xchg
insl
je
xchg
aam
lock
cmp
dec
in
ds
sub
xor
xchg
sub
jg
dec
imul
enter
sbb
inc
insl
in
outsb
mov
pop
addl
xchg
stc
movsl
outsl
adc
xchg
fucom
enter
inc
je
xor
pop
or
push
out
or
and
push
rcl
loopne
sub
push
shrb
mov
push
adc
inc
out
insl
sub
int3
pop
pop
xchg
filds
or
dec
icebp
jae
or
mov
cmpsb
int3
cmp
jne
ret
icebp
mov
mov
decl
xchg
pop
aas
je
add
movsl
stos
cmp
fisubrs
pop
pop
pop
int3
dec
aas
subl
dec
arpl
add
sbb
fisttps
bound
jg
jno
inc
xchg
and
iret
mov
or
or
fistl
aam
shr
insl
xchg
jbe
jbe
imul
mov
in
cmp
xchg
lahf
mov
js
add
mov
scas
cmp
sbb
out
or
in
outsb
push
and
and
xchg
sti
cmpl
int
push
push
mov
xchg
dec
and
mov
enter
repnz
mov
sbb
jmp
dec
or
and
dec
mov
das
mov
sahf
int
rcrl
rorl
aam
jp
push
sbbl
outsl
inc
dec
imul
push
fnstcw
and
addr16
js
dec
sbb
mov
dec
dec
mov
jo
loope
jae
jl
sbb
fidivl
cmp
xor
data16
or
or
leave
mov
mov
xchg
inc
xchg
push
add
sbb
lock
push
mov
loope
mov
dec
sbb
test
pop
aam
clc
out
loope
aas
call
loop
cmc
inc
pushf
fidivrl
jecxz
adc
pop
ficoml
or
je
lret
jge
repnz
arpl
gs
cmp
mov
ret
sbb
int
fwait
adcb
out
lret
aam
bound
adc
out
lret
rcrb
ret
push
push
sub
inc
xchg
mov
shl
push
arpl
lock
push
cmp
rcr
sub
xlat
std
data16
std
xor
jecxz
sbb
jle
pusha
out
mov
cmc
test
jp
dec
sbb
sub
xlat
pop
push
pop
add
popf
negb
int
fstps
sahf
jl
cld
pushf
jmp
push
int3
loopne
leave
or
mov
std
outsb
imul
push
popf
add
xchg
stos
outsl
in
jo
jno
xor
xor
sub
aad
jbe
stos
loopne
mov
inc
fldl
lea
push
and
adcl
lds
or
adc
iret
xchg
lods
and
call
add
mull
push
lret
aad
xchg
jnp
mov
inc
rcl
or
add
pop
mov
je
mov
es
lret
test
rolb
pop
adc
or
mov
loopne
pop
cltd
mov
aas
mov
pop
out
cld
pop
mov
mov
jbe
ret
aad
test
and
imul
cmp
mov
dec
test
cmpsl
dec
aad
popf
jb,pn
or
sbb
sub
in
rolb
cmp
push
data16
outsb
iret
xchg
in
and
sub
test
jle
repnz
xchg
mov
inc
xchg
mov
cltd
sbb
or
jl
mov
or
push
std
jbe
das
cmp
push
sbb
aaa
aad
adc
iret
jmp
pusha
inc
stos
rorb
add
pop
icebp
jnp
mov
call
ljmp
cmpsl
push
test
or
lret
push
sbb
mull
or
iret
mov
mov
scas
addl
mov
push
or
xlat
addl
jle
mov
decl
add
stc
cld
iret
shlb
test
insb
cltd
fadds
popf
jmp
push
test
or
dec
daa
jne
jge
inc
mov
inc
je
dec
xor
inc
mov
rorl
and
andb
dec
cld
aas
cs
lds
pop
xor
xchg
clc
aas
sbb
xor
ljmp
int
aaa
mov
xchg
sarl
test
repnz
xlat
roll
sahf
scas
test
das
stos
inc
xchg
xlat
in
jmp
int3
aam
adc
xchg
stos
imul
es
jp
mov
and
imul
fdivl
outsl
into
cltd
or
mov
xchg
stc
into
and
mov
cld
or
xchg
jge
sub
stc
adc
fisubrl
cld
shrb
jecxz
in
repz
add
push
bound
insl
popa
inc
ret
jne
dec
ljmp
fs
push
repz
cli
ss
cmp
add
xchg
jo
dec
imul
in
pop
xor
dec
pop
movsb
jae
push
int
cmp
lcall
cs
shll
adc
andb
test
sub
orl
xchg
bound
insb
sub
xlat
sbb
test
dec
int
inc
mov
push
in
jle
cld
popa
test
jno
mov
lcall
pop
and
add
fsubl
dec
or
data16
inc
enter
fs
mov
popf
insb
mov
ljmp
aam
insb
or
es
jmp
lock
dec
adc
ss
hlt
push
sub
aaa
int
xchg
fildll
mov
lds
movsb
lods
sbbb
lods
inc
xchg
das
jnp
inc
inc
lret
imull
in
repz
jmp
add
lds
dec
fwait
jg
fwait
jmp
jno
add
test
pop
push
shll
xchg
daa
hlt
test
or
lods
push
fmulp
aam
out
mov
pop
je
mov
cmp
fildll
je
add
sub
adc
flds
and
and
ss
ja
dec
sti
iret
jle
xchg
repnz
push
push
jp
xor
sub
push
imul
push
mov
stos
pusha
inc
std
test
jmp
in
ret
push
les
cwtl
jg
mov
enter
cmp
adc
jnp
push
pop
enter
mov
adc
es
jne
mov
cmp
fiadds
jle
gs
xchg
fistpl
jmp
mov
dec
sbb
jae
jo
xchg
mov
cmp
mov
ljmp
cmp
sbb
inc
rorb
out
adc
xor
jp
mov
jp
loop
push
lods
iret
sub
xchg
js
jg
mov
in
jnp
inc
rolb
sub
imul
mov
mov
test
rcr
test
mov
jge
xchg
and
push
and
xor
mov
decl
add
insb
in
int3
ljmp
push
xchg
inc
ret
lock
gs
adc
int
cmpsb
jle
insl
mov
inc
scas
das
fistps
jo
pop
xchg
fdiv
sbb
les
cmp
aam
sub
bound
xor
mull
dec
dec
out
mov
out
std
xchg
mov
dec
jns
rcl
int
arpl
jle
or
mov
int
cmp
dec
iret
fstps
daa
push
icebp
in
test
jns
fsubs
mov
mov
lret
rclb
jg
loop
gs
lret
xchg
jle
test
pop
sub
pop
xor
mov
mov
and
testb
sbb
inc
ja
imul
clc
popa
cmpsb
pop
lock
mov
aad
cmp
mov
aam
jle
sub
push
std
push
fmulp
std
cli
push
pop
adc
push
stc
xchg
insl
or
jle
sahf
lret
dec
es
push
fwait
imull
fsubp
xor
mov
pop
ror
dec
scas
mov
fidivrs
xor
dec
push
call
out
jmp
leave
enter
mov
out
movsb
mov
push
cmp
xor
daa
inc
loopne
dec
sarb
mov
jb
pop
push
push
or
or
mov
lock
mov
jb
mov
out
fwait
in
shlb
imul
xchg
push
js
cmp
pop
icebp
shlb
xlat
sbb
sbb
popf
mov
jge
aaa
xchg
adc
push
cwtl
std
movsb
mov
jns
test
ja
cwtl
lcall
popa
mov
mov
xchg
sub
mov
or
bound
adc
dec
xor
xchg
js
jbe
and
push
sbb
pop
xor
push
xchg
dec
jnp
xchg
test
xor
jbe
int
sub
push
ljmp
fmull
jbe
push
outsl
daa
repz
out
mov
sub
ja
mov
gs
imul
sub
sub
and
ret
dec
add
bound
cmpsl
ss
rcl
repnz
sti
adc
dec
dec
mov
iret
das
sbb
sbb
cmp
lock
cs
push
sbb
mov
into
ds
aas
mov
mov
cmp
lds
and
push
aam
repnz
call
pop
mov
pop
gs
in
adc
sbb
aaa
loop
leave
cli
lea
mov
ljmp
testb
mov
sub
xchg
sti
jecxz
imul
sub
loop
bound
xor
mov
cld
cltd
adc
cmc
das
push
push
xchg
mov
xor
mov
mov
sub
call
lods
in
lahf
and
cmp
call
mov
jb
xchg
adc
pop
add
jbe
xchg
out
shll
xor
dec
add
enter
hlt
cmp
add
dec
mull
inc
add
incb
aam
push
ljmp
inc
xor
fwait
dec
mov
pop
inc
insl
lahf
mull
xor
add
jecxz
dec
push
negb
inc
inc
cmpb
sbb
insl
sbb
int
dec
fnsave
jmp
shrb
mov
mov
mov
mov
arpl
mov
repz
xchg
mov
test
mov
push
mov
popa
jo
pop
jno
xor
jae
dec
xor
pop
cld
sub
adc
imul
xor
sahf
insl
add
dec
inc
jge
pusha
movsl
inc
insl
push
jl
sub
lcall
jns
xlat
jne
inc
adc
loope
cs
inc
push
cmp
out
pop
das
or
rorl
xchg
fs
lea
mov
hlt
mov
adc
cmc
pop
ret
jbe
mov
mov
aam
imul
fcmovnb
push
rorb
notl
add
push
insb
int3
ds
ret
sbb
mov
test
mov
aad
out
test
adc
mov
mov
mov
outsb
sub
int3
xlat
fs
cltd
fcom
enter
jo
dec
ret
add
xor
push
sbb
bound
sub
call
push
pop
cmp
popa
nop
stos
sub
push
das
mov
jae
push
adc
sub
test
push
jne
jg
ret
imull
push
adc
ds
js
pop
scas
or
mov
repnz
jo
das
stos
pop
mov
pop
fnstcw
leave
repz
sub
dec
mov
pop
rcrl
add
call
loopne
sbb
int
dec
sub
dec
movsl
lret
jae
mov
adc
xor
pop
push
pop
push
inc
jl
cmpsb
mov
sub
add
add
pop
add
loop
inc
pop
add
push
dec
insl
dec
or
and
lahf
push
dec
icebp
cmp
pop
adc
inc
mov
dec
cltd
cs
push
out
fbstp
fs
sbb
cmpsl
addr16
and
insl
push
pop
divl
or
lea
sbb
mov
push
push
mov
loope
shll
int
mov
or
adcb
in
push
aas
dec
lcall
fstp
mov
lods
cmp
enter
sub
or
imul
or
or
xor
mov
movl
xchg
pop
and
push
cmp
mov
aam
outsl
stos
sahf
stos
into
inc
sbb
out
cmp
shrb
gs
dec
movsb
shl
test
call
lds
push
repnz
sub
jo
and
push
inc
ficomps
jle
int
xor
jb
vpperm
mov
and
xor
out
cwtl
in
add
sub
ljmp
popa
sub
hlt
fs
aam
push
cmc
mov
out
jmp
mov
movsb
rcll
pop
test
lods
data16
and
rolb
mov
lcall
push
pop
out
inc
cld
sbb
mov
sahf
inc
fsubrs
push
jne
imul
mov
inc
push
adc
push
jl
loopne
int
jp
mov
add
jp
test
jo
xchg
mov
mov
cmp
adc
ds
out
push
or
push
jmp
mov
stos
pop
and
fadds
std
and
loopne
xor
push
lea
mov
js
test
outsb
sbb
std
dec
sub
inc
mov
mov
cltd
ljmp
cmp
loop
addr16
fbld
push
pop
cmp
cmc
jo
mov
mov
xchg
outsl
xchg
dec
les
mov
xor
sub
int3
repnz
push
sub
and
hlt
push
dec
add
fsubrl
cs
mov
clc
push
int3
pop
or
add
xor
jne
and
pop
mov
mov
mov
jmp
fiadds
adc
xchg
inc
insb
icebp
or
test
in
daa
pop
ljmp
out
mov
cs
jge
jb
jo
jo
lods
xlat
xchg
xor
das
stos
data16
xlat
jae
sbb
dec
and
cli
pop
cmp
mov
mov
lahf
xor
add
and
dec
xlat
testb
mov
dec
or
mov
call
jge
or
mov
lret
xorb
outsb
inc
subl
sub
lock
mov
mov
cli
cmp
cmp
lcall
imul
or
xchg
imul
popa
cmp
cli
push
data16
iret
arpl
stos
pop
jg
popa
cmp
pop
xchg
add
mov
clc
mov
enter
xor
push
loopne
bound
push
xor
mov
scas
dec
fidivrl
mov
fld
mov
imul
es
imul
jmp
mov
das
and
mov
imul
shlb
add
bound
stos
add
cld
pop
push
pusha
hlt
loope
xor
and
mov
jbe
add
jmp
sub
or
mov
movsl
clc
add
pop
xor
mov
orl
inc
mov
out
sub
inc
daa
cmp
es
dec
repz
push
addl
jns
jno
pop
and
int3
mov
notl
mov
xchg
jmp
mov
call
imul
dec
les
rcrb
gs
mov
push
dec
xchg
sarl
inc
rorb
mov
jmp
jno
cmpsb
testl
insl
pop
xlat
pusha
pop
or
dec
clc
mov
adc
loop
insl
in
pop
int
xchg
rep
and
rcll
dec
xchg
pop
xchg
xchg
outsl
xchg
xchg
xchg
nop
test
jnp
fdivrs
movsb
push
xchg
sbb
sub
push
fs
ss
mov
adc
or
mov
jl
jbe
stc
push
inc
dec
enter
hlt
in
ret
int
dec
out
ljmp
repnz
sbbl
jns
and
add
test
mov
cld
push
dec
cs
push
icebp
mov
or
insb
adc
adc
sub
fsubr
sbb
out
inc
inc
and
fcompl
xor
sbb
les
jg
xor
std
jae
mov
inc
imul
mov
aam
fs
sbb
push
imul
imul
call
pop
popa
adc
push
mov
nop
xor
jb
inc
repz
sub
xchg
ret
mov
es
dec
sub
sbb
lods
cli
into
sbb
or
movsl
xchg
scas
lds
jb
not
ljmp
out
stc
in
and
cmpb
sti
push
orl
xor
xchg
push
push
dec
test
jge
das
xchg
xchg
jb
sub
mov
insl
test
sbb
shll
add
add
aaa
and
das
mov
adc
test
aas
enter
fcompl
outsb
int3
shl
mov
cmp
imul
mov
or
push
sub
shlb
jle
xor
xchg
add
mov
in
enter
ds
sub
loope
test
pop
xor
inc
xor
das
bound
add
inc
inc
adc
and
adc
das
pop
inc
pop
mull
cmc
sub
mov
xor
add
jae
mov
mov
push
xor
xor
imul
adc
mov
loop
shll
mov
vmovss
out
lahf
pop
push
mov
mov
test
jl
fisttpll
les
push
test
nop
dec
sarb
movsb
xchg
xor
sbb
lahf
popf
xchg
jle
mov
jo
sahf
in
sti
or
xchg
xor
dec
fyl2x
jp
jle
mov
add
bts
push
repz
daa
dec
cmc
std
into
mov
xchg
lcall
add
hlt
push
xchg
arpl
lcall
aaa
pop
shll
ror
dec
mov
aaa
addr16
cmpb
call
add
mov
dec
dec
cs
in
cmp
add
sub
mov
les
ds
pusha
pop
fisubl
mov
push
ss
jno
filds
dec
jge
imul
fcoms
je
dec
mov
jae
sahf
fidivrl
jle
jno
and
ss
jb
lret
sbb
dec
xchg
fiadds
push
cmp
xor
fisttpll
test
sub
and
and
jo
in
xchg
mov
ja
fisubl
lret
std
fcoms
add
pop
clc
addb
mov
sub
xchg
xorb
inc
test
sub
call
and
sarb
sbb
pusha
push
push
stos
cwtl
adc
pop
cmpsl
aad
mov
jno
movsb
xchg
xor
lret
or
fwait
outsb
sub
sahf
movsb
rclb
or
adc
sbb
mov
sub
cmp
pop
pop
or
jmp
imul
mov
out
outsb
mov
aaa
loope
loope
mov
out
imull
mov
jo
and
mov
push
iret
xchg
pop
sub
push
imul
mov
sub
push
mov
or
sbb
pandn
adc
xlat
test
mov
ja
jp
scas
mov
or
xor
or
mov
lea
loopne
mov
daa
mov
cwtl
jge
ret
cltd
lods
mov
sub
fprem
inc
and
mov
stos
ds
mov
or
add
add
lock
dec
daa
dec
out
push
adc
imul
jmp
out
bound
inc
add
fsts
push
call
add
xor
jp
ljmp
lds
mov
fisttps
jnp
lods
inc
addr16
insb
lcall
xchg
mov
xchg
add
and
test
sub
or
mov
cld
ret
adc
cmc
mov
int
mov
lcall
sti
pop
sbb
jge
test
adc
push
test
rclb
mov
jno
cmc
push
in
daa
ja
lock
xchg
movsl
out
cmc
test
xor
adc
dec
ret
sti
and
cmc
ds
cmp
pop
sti
test
aam
lea
rolb
inc
cmpb
ret
shrl
test
cmp
sbb
cs
repz
scas
lods
movsb
and
ror
data16
out
xor
xor
ds
sub
fsubr
xor
scas
xor
aaa
cmp
outsl
out
push
mov
ss
das
inc
mov
pushf
ret
in
sub
dec
and
or
mov
stos
cmp
jg
cmpsl
out
sub
lcall
or
xor
movsl
imul
push
pop
xlat
mov
inc
lock
sub
jle
rcrb
std
fisubrl
in
and
or
jo
hlt
sub
stos
cmp
aaa
movsl
sbb
negb
jb
test
or
add
cmpsb
sub
fsubr
or
fcomip
fdivrs
pop
ljmp
jecxz
and
test
xchg
xchg
nop
das
dec
xor
dec
push
xchg
pop
ja
in
xor
mov
jb
loope
lahf
addr16
dec
lcallw
clc
imul
or
lock
mov
cmpsb
adc
mov
push
call
inc
ret
mov
push
push
aam
pop
stos
xor
sub
add
pop
les
into
mov
ds
adc
mov
lds
shl
jle
movsl
call
ljmpw
sbb
jg
inc
lock
int3
testl
mov
outsl
clc
jb
enter
jge
aam
je
xchg
cmp
mov
push
jb
pusha
adc
pop
addr16
xor
push
mov
cmpsb
ret
lds
cli
adc
mov
sti
addr16
xor
jge
jg
arpl
pop
lret
pop
xchg
or
mov
cli
xor
pop
out
lea
cs
in
cmp
into
xchg
push
pushf
cmp
loope
adc
inc
jg
movsb
popa
into
dec
add
stc
sub
das
sti
sbb
mov
faddl
pusha
pop
lahf
push
and
imul
jg
je
pusha
loop
inc
pop
aas
dec
and
or
js
add
xchg
inc
mov
test
popf
pop
jns
loopne
mov
push
in
out
aad
or
mov
sbb
repnz
loop
sbb
xchg
dec
lret
fnsave
lahf
out
dec
xchg
add
sti
jl
movsl
sarb
xlat
and
outsb
jnp
popf
rorb
daa
jmp
loop
mov
dec
iret
pop
jo
popa
cmpsb
sar
and
sub
cmp
mov
aad
or
popa
ja
nop
xlat
mov
pop
repz
cs
ljmp
out
jecxz
mov
pop
sbb
mov
jge
in
lea
cmpl
jle
fidivs
hlt
push
dec
aas
cmpsl
push
stc
inc
and
cmp
sbb
test
test
ret
lret
and
cmp
les
jp
in
cwtl
or
jns
fcomp
xor
shlb
xchg
shll
push
sbb
lods
fwait
pushf
rolb
fidivs
sub
je
or
les
leave
std
mov
out
rcll
int3
mov
lcall
pushl
lret
pop
and
fidivs
jp
pop
in
jno
pop
cmp
or
pushf
stos
mov
mov
push
pop
mov
inc
lods
dec
mov
jo
adc
pusha
push
pop
push
in
stos
mov
in
push
inc
ljmp
es
xchg
not
arpl
mov
xor
adc
stc
dec
mov
xchg
jecxz
jbe
mulb
cmpsl
xor
bound
mov
lods
pop
jb
jnp
add
test
fucomip
loope
mov
sbb
rorb
aam
sbb
dec
sub
jb
in
jnp
ljmp
loopne
je
push
stc
mov
roll
lea
jne
cmp
subb
mov
push
mov
mov
add
xor
ret
clc
jbe
imul
daa
mov
sbbb
insb
mov
dec
div
dec
sarl
lods
outsb
sti
and
out
add
push
movsb
outsl
lods
lahf
add
xchg
push
cmp
xor
adc
or
and
xchg
sbb
xor
cmp
cmc
dec
mov
push
sbb
jmp
cs
jmp
repz
shrl
sub
loop
js,pn
fldenv
jecxz
sub
xchg
in
out
daa
xchg
jnp
sub
int3
sbb
sbb
xchg
cs
sbb
movsb
sub
ds
int
movsb
std
aad
stc
pop
inc
xor
xchg
mov
sarl
mov
push
push
xor
push
add
xor
push
testl
movsb
pop
pushf
rolb
mov
dec
xchg
gs
and
push
mov
out
icebp
push
ret
mov
shrl
mov
jge
and
mov
inc
stc
sub
repnz
jmp
jns
or
sub
push
faddl
push
adc
or
mov
lea
mov
pop
mov
push
ds
jne
sub
scas
inc
adc
out
sub
mov
adc
mov
pushf
lods
outsl
les
mov
ret
int3
lods
ret
push
sub
in
xchg
jb
fstl
pop
leave
stos
or
shrb
pushf
ficoml
divb
mov
and
pop
gs
push
mov
out
adc
pop
rorl
xchg
cmc
dec
aad
cmc
sahf
mov
bnd
mov
cmp
pushf
in
iret
and
dec
push
pop
sub
cli
mov
iret
mov
aaa
enter
adc
jp
dec
xchg
add
fwait
xor
cmpsb
fidivl
jnp
jmp
dec
mov
in
outsb
inc
mov
dec
push
or
sub
in
cmp
push
xor
orb
jbe
dec
aad
cwtl
push
mov
bnd
xchg
xchg
lret
sti
out
sbb
adc
add
sbb
fwait
in
sbb
cmpsl
lea
into
ds
mov
cmpsb
rorb
jecxz
mov
nop
ret
push
pop
mov
mov
out
mov
xchg
fidivrs
mov
popf
sbb
sbb
mov
xor
mov
leave
mov
out
xchg
push
xchg
sub
or
scas
aad
std
das
xchg
call
lods
xor
das
leave
pop
and
nop
and
aas
fildl
dec
dec
fidivrs
push
cli
dec
mov
cmc
test
jl
jecxz
test
scas
inc
ja
mov
pop
or
cmp
cmpl
int
pop
mov
imul
call
and
out
dec
fstpl
cmpsl
sub
add
jnp
int3
xchg
lea
jge
mov
mov
pop
cwtl
jne
roll
mov
arpl
sbb
cwtl
adc
mov
cmp
fwait
mov
pop
inc
inc
mov
iret
jp
fs
pop
mov
xchg
xor
or
cmp
out
nop
mov
adc
jecxz
enter
jns
aam
push
cld
adc
sbb
sar
push
mov
jo
cmp
popa
fimuls
mov
sub
mov
bound
mov
xchg
mov
and
jge
inc
sub
movsl
cltd
sbb
aad
mov
enter
mov
mov
pop
mov
pusha
loopne
sub
sbb
mov
inc
subl
adc
scas
mov
mov
hlt
ljmp
adc
aas
pop
cmpsb
push
mov
cmp
stc
addr16
mov
ljmp
mov
sti
test
jmp
inc
movsl
mov
cs
popa
or
xchg
mov
ret
xchg
push
inc
mov
sbb
xor
cmp
xchg
inc
insl
jle
shll
sti
mov
xchg
jge
mov
mov
test
mov
test
xchg
and
fmul
xor
insl
push
jecxz
ret
jns
pop
inc
pop
cmp
pop
pop
insl
push
test
sbb
mov
stos
insb
jecxz
les
arpl
mov
xchg
adc
pop
enter
push
jns
xchg
sub
xor
dec
push
dec
cwtl
out
ja
adcl
imull
outsb
mov
sarb
mov
ja
in
mov
je
dec
xchg
sub
push
lods
mov
int3
aas
pop
stc
or
hlt
mov
inc
sbb
cmpsb
divb
xchg
xchg
movsb
cld
orb
cltd
adc
mov
or
mov
icebp
xor
cmpsb
repz
mov
fstps
imul
push
mov
jne
sbb
popf
outsl
and
xor
mov
jg
fs
mov
cmp
sahf
mov
js
mov
and
push
push
cltd
xlat
popf
bound
jb
lcall
mov
jbe
mov
sbb
adc
leave
aam
imul
loope
aad
pop
cmp
shll
scas
insb
cmpsb
xchg
jge,pt
and
push
addr16
add
lcall
ret
ror
call
add
adc
mov
lret
out
sbb
imul
cli
pusha
rclb
jnp
lret
mov
testl
mov
lods
xchg
jecxz
cltd
sbbl
xchg
and
xchg
aad
movsl
into
mov
mov
negb
and
in
je
in
push
sti
fdivrl
mov
arpl
testb
adc
loopne
inc
pop
fs
icebp
icebp
lret
push
or
add
mov
xor
mov
add
iret
jmp
sub
aaa
cmc
stos
push
add
jbe
cmp
sbb
jle
push
mov
insl
inc
sub
sub
xor
jb
mov
das
mov
ss
popa
push
scas
fisubrs
sbb
pop
aas
inc
push
rcl
inc
sbb
add
idivl
shll
cmp
notb
and
inc
or
clc
jb
dec
lcall
dec
bound
xchg
push
in
sbb
inc
or
and
mov
outsl
lods
icebp
movsb
out
adc
add
add
out
push
xchg
xchg
mov
in
xor
fstpt
in
testl
mov
jns
push
xor
and
leave
jnp
jmp
mov
push
add
sub
lods
pushf
xlat
into
inc
js
and
movsl
mov
rol
ss
push
out
js
or
dec
dec
jb
test
scas
daa
pop
sbb
fnstsw
les
cltd
push
int3
stos
push
daa
lcall
inc
adc
sbb
movsb
and
add
movsb
sbb
das
out
mov
add
scas
mov
and
dec
push
pop
loope
pop
and
test
data16
hlt
sub
fs
push
add
xchg
lock
scas
addr16
inc
scas
pusha
xlat
ljmp
lret
cmpsb
scas
iret
pop
subl
fidivs
sub
in
inc
std
inc
sub
iret
xlat
mov
xchg
xchg
inc
sbb
mov
mov
daa
imul
leave
mov
xor
push
sbb
jmp
mov
adc
fs
and
sti
sbb
cld
rcll
aad
add
dec
pop
mov
stos
jnp
orb
shlb
ljmp
imul
mov
int3
aas
out
test
jnp
ss
push
mov
pop
rorb
cmpl
jne
jne
repnz
pop
push
sbbl
es
push
in
xor
mov
sbb
sbb
xor
and
aam
mov
andl
sbb
pop
fildll
xor
jp
jp
push
and
loop
cmp
xchg
ficompl
lcall
scas
or
ds
jecxz
dec
fwait
jns
xor
cltd
xor
mov
test
dec
insb
inc
and
imul
mov
aaa
loopne
add
sbbb
mov
js
stos
lock
adc
outsb
inc
sbb
lret
push
lcall
adc
imulb
cmp
pop
pop
xchg
sub
cmp
xor
jnp
call
call
push
dec
mov
inc
testl
mov
ljmp
inc
loop
pushf
out
push
imul
cmp
imull
mov
mul
scas
loop
lcall
pop
pop
adc
popf
sub
push
xor
int3
stos
cwtl
xchg
push
lea
jo
sbb
add
frstor
or
ret
movsl
pop
imul
sar
xchg
gs
fs
push
sub
dec
jl
addl
shll
fcompl
shr
mov
inc
dec
xchg
es
xchg
pop
adc
xchg
test
push
cmp
pop
out
adc
ss
xchg
sub
push
mov
sbb
xor
sbb
les
lret
int3
int3
leave
cmp
xor
in
call
loop
adc
sbbl
stc
add
mov
pushf
ror
pop
scas
movsl
sbb
lock
inc
cmp
data16
test
and
jns
pop
push
jae
loop
jge
sub
pop
gs
fcomps
mov
pop
push
movsb
in
or
mov
push
pop
je
pusha
pop
xor
cmpb
in
push
lretw
imull
into
and
dec
pusha
mov
push
pop
popf
fstps
push
test
lret
jge
xchg
fwait
mov
fimuls
mov
xor
int
popf
popf
bound
sub
sbb
mov
pop
add
leave
insl
pop
inc
sbb
rorb
pavgb
cmp
scas
into
aas
push
xchg
add
aaa
testb
mov
fimull
jmp
enter
sahf
stc
mov
icebp
jo
incb
fcmove
inc
dec
push
inc
and
inc
xchg
jnp
aad
jecxz
sub
outsb
lods
jo
movsl
cmp
sbb
rcrb
xchg
movq
push
dec
cmp
cmc
dec
mov
std
int3
int3
jp
fdivr
in
test
into
xor
mov
and
inc
push
scas
pop
mov
sub
adc
dec
lret
aad
dec
cltd
pop
call
jno
inc
add
movsb
jle
sbb
ficomps
xor
xlat
sbb
mov
or
or
sbb
les
inc
xor
addr16
xchg
out
mov
dec
adc
mov
adc
jge
lods
cmp
ds
jl
enter
lahf
pop
clc
out
mov
dec
mov
int
out
pop
rol
inc
xor
push
dec
adc
enter
sub
pushf
fildll
lahf
rcrl
dec
pusha
insl
sub
scas
fwait
pop
push
push
dec
icebp
mov
mov
pop
std
or
pop
push
repnz
aaa
xchg
fisubs
mov
and
mov
inc
or
test
cli
in
popf
xor
stc
scas
cmc
add
repz
pop
cmp
mov
or
jecxz
movsb
sub
pop
and
es
fimull
dec
mov
outsl
scas
mov
jl
cmpsb
pop
jge
sub
xor
push
push
jg
add
les
not
cmp
xchg
notb
jp
popa
ss
jecxz
int3
dec
adc
stos
sub
mov
push
or
mov
lock
mov
pop
test
inc
rol
inc
xchg
shrb
dec
adcl
jmp
pop
dec
in
insl
or
out
stos
in
push
fstp
faddp
add
jae
test
push
add
push
scas
jb
cmp
ret
adcl
pop
stos
xchg
sahf
not
sti
mov
mov
bound
sbb
in
adc
sahf
add
push
icebp
push
push
test
mov
out
or
ljmp
lcall
add
jno
xchg
ret
inc
fcmovb
int
push
ret
and
xor
in
std
fsts
lahf
lds
inc
sub
pop
inc
rclb
test
push
inc
mov
sbb
sarb
inc
mov
pop
cmpsb
movups
testb
cmp
or
push
sarl
push
mov
sbb
mov
mov
test
inc
sub
push
rcll
mov
lret
cmp
jecxz
dec
outsl
adc
pop
fidivrs
out
stc
test
push
les
pop
mov
dec
sub
xchg
lods
jg
aad
push
insb
xor
sub
adc
xchg
dec
sbb
hlt
call
ss
stos
and
jo
stos
icebp
mov
cmp
push
fwait
stc
data16
in
flds
push
xchg
ds
mov
js
push
xchg
xlat
mov
scas
mov
add
xor
mov
fistl
jge
push
cld
scas
and
mov
xor
test
push
push
call
fsubl
fsubrp
xor
xchg
in
cmp
mov
push
addr16
loopne
push
sbb
ja
cmpsb
pop
inc
lods
sbb
mov
push
jno
lea
lods
fimuls
sbb
xchg
dec
arpl
push
in
shl
lock
test
test
jnp
mov
mov
call
insb
insb
push
mov
data16
mov
xchg
sub
lret
push
test
iret
das
xor
loop
fsubs
es
add
arpl
mov
dec
leave
xchg
jle
leave
jmp
fstps
mov
data16
push
aas
fs
leave
xchg
inc
pop
xchg
and
mov
scas
mov
int
xlat
icebp
into
xchg
je
clc
inc
loopne
or
aaa
cli
test
mov
inc
stos
addr16
insb
xchg
pop
imul
add
test
lock
das
push
out
push
xorl
jg
mov
popa
dec
sub
fstpt
and
push
xchg
incb
fld
mov
push
jbe
jns
jp
jmp
pusha
insb
int
xchg
add
inc
mov
push
andl
sub
mov
jnp
fwait
in
xor
dec
dec
sbb
mov
lods
test
mov
xor
mov
fstpt
inc
and
outsl
mov
jmp
sbb
into
mov
insl
pop
and
inc
mov
mov
dec
add
add
ja
add
pop
mov
pop
pop
push
lcall
add
xchg
lcall
sub
test
push
pop
sbbl
jo
sub
bound
cwtl
loop
push
mov
rcr
xchg
or
lea
pop
jmp
aam
sub
and
add
jbe
jb
in
push
lret
dec
loopne
sbb
ss
stos
pop
jns
in
lock
xorl
sbb
in
dec
sbb
xor
or
out
aaa
addl
sub
or
jno
cwtl
call
or
and
inc
je
fnsave
pushf
jnp
add
enter
test
jo
xor
xor
scas
test
scas
imul
mov
xlat
and
mov
sbb
sahf
in
fmull
inc
test
arpl
jl
sub
mov
je
xor
stos
sbb
call
pop
dec
int
xchg
movsb
dec
mov
sbb
lret
mov
mov
cli
xor
stc
and
or
lods
sub
in
xchg
xor
mov
ja
in
movsl
fsts
aam
in
sti
out
mov
daa
dec
dec
lea
pop
aas
cwtl
or
or
pop
add
hlt
jno
xchg
fbld
push
test
xor
jb
out
sub
sahf
int3
mov
cmp
inc
iret
or
mov
movsb
mov
cmp
and
push
out
and
push
sub
sbb
mov
shlb
lret
cmovno
adc
jae
daa
je
enter
div
sbb
mov
inc
mov
xchg
outsl
es
fistpll
xchg
jl
in
sub
shlb
mov
lcall
int3
xor
popf
jmp
add
fidivs
insl
cmc
mov
jne
icebp
ss
test
je
inc
sbb
or
iret
subl
daa
pusha
mov
inc
sbb
mov
dec
int3
cmp
hlt
xor
rclb
out
dec
mov
rol
mov
and
outsl
mov
dec
push
adc
add
icebp
xor
inc
out
inc
in
frstor
push
cltd
shlb
dec
popf
push
cmp
cmc
sbb
int
and
outsl
inc
lock
int3
add
mov
cmp
scas
mov
ret
mov
ljmp
push
mov
aaa
jo
stc
lds
dec
imul
adc
insb
sub
adc
movlps
inc
push
push
mov
xor
mov
call
std
or
inc
pop
add
mov
cld
cmp
mov
cltd
outsl
xchg
dec
movsl
xchg
fadds
imul
popl
dec
xor
adc
or
loopew
sbb
aam
cmp
pop
jnp
mov
push
std
cmpl
add
sbb
mov
les
xor
data16
xor
mov
dec
pop
cmp
jbe
mov
xchg
sub
lods
push
or
and
mov
rcrl
push
scas
loopne
xchg
xor
push
jmp
int3
adc
into
je
mov
pop
mov
shlb
and
in
add
ret
jae
mov
pop
mov
mov
push
inc
adc
pop
push
push
sub
lret
jle
xor
mov
notl
push
sbb
adc
fistl
xor
fcmovu
push
call
shll
leave
jg
inc
loopne
stos
and
xchg
inc
out
negl
gs
sahf
dec
mov
jae
jo
sbb
sar
jne
insl
ret
jge
stos
outsb
sti
imul
fmull
inc
outsb
fnstsw
in
xor
mov
mov
fwait
cs
bound
cwtl
leave
and
sub
xchg
jne
shr
ds
sub
shll
gs
das
mov
jmp
mov
inc
out
jbe
sbb
out
lds
xor
push
add
push
lock
clc
enter
shlb
sub
insl
mov
test
imul
sbb
push
movsl
outsl
aam
adc
mov
push
enter
shll
or
daa
pop
pusha
adc
inc
js
fsts
inc
push
sahf
xlat
cmp
jbe
jecxz
notl
mov
xchg
jle
cmp
cld
notb
dec
push
fwait
dec
jbe
out
leave
repnz
dec
xchg
int3
out
cmpsb
std
sub
xchg
pop
jae
add
repnz
test
sub
add
push
mov
movb
add
insl
aaa
lret
add
fs
dec
in
ja
adc
cs
jge
pop
sar
ss
sub
mov
in
mov
rol
dec
mov
int
sub
sub
scas
int3
push
jp
mov
das
sub
mov
or
call
aad
xchg
adc
std
add
push
xchg
in
push
sbb
cmp
sbb
addr16
inc
inc
mov
mov
xchg
aam
mov
call
jno
cmp
sub
jle
xor
out
lret
cmpsl
movsl
xchg
aas
dec
scas
sbb
icebp
movsb
push
roll
xchg
inc
or
outsb
fistl
jno
inc
push
aaa
mov
das
fdivrs
inc
inc
cmpsl
mov
inc
mov
fmulp
filds
and
pop
out
movb
fdiv
cmpsl
loopne
out
cwtl
out
test
mov
out
outsb
subl
imull
dec
call
jns
jns
call
lods
movsb
rol
pop
cmp
mov
out
in
pusha
xchg
stos
jge
pushf
pop
mov
and
xor
stos
inc
movsb
cld
lock
cmp
dec
lcall
mov
and
push
frstor
dec
pop
jno
mov
push
scas
ffree
mov
dec
inc
cwtl
iret
xchg
pop
mov
push
or
cmpsb
leave
or
shrb
test
mov
sub
test
mov
adc
xchg
pop
mov
mov
dec
pop
sub
jmp
jne
cmp
ret
xchg
sub
ljmp
dec
es
adc
psubq
bound
add
adc
lcall
sub
cltd
mov
arpl
rorl
int
or
lds
dec
addl
outsb
pop
push
loopne
outsl
cmp
cmp
gs
adc
and
push
repz
shrb
shll
mov
loopne
push
mov
mov
popf
fidivrl
movsl
and
push
and
add
imul
and
shll
and
mov
add
out
fs
jo
fdiv
jns
jbe
jmp
std
sarl
push
data16
data16
cmp
imul
cmp
inc
out
mov
mov
in
ja
push
das
cmp
cmpsl
mov
cmp
sub
xchg
xor
mov
scas
mov
adcl
inc
mov
adc
inc
xlat
add
sbb
stc
and
ja
xor
popf
mov
aad
pushf
add
add
jmp
mov
jmp
xchg
aas
out
ds
push
cli
int3
jb
inc
imul
pop
add
push
pop
dec
outsb
in
jmp
sub
and
fcoms
cmp
stos
or
popa
mov
sub
add
test
dec
mov
xlat
cmp
ds
or
bound
fwait
out
add
ret
inc
in
outsb
cmc
loope
and
cld
adc
in
popf
inc
je
in
pushf
jae
sarb
or
sbb
lcall
lcall
pop
jbe
inc
xor
leave
lds
xor
cmpsb
mov
sar
mov
xor
fsin
mov
mov
push
mov
divb
cmp
xchg
testl
xchg
inc
dec
dec
mov
cmp
push
cmp
xor
imul
das
aad
in
jne
and
vmovd
aad
in
out
xor
daa
lret
sbb
sbb
jo
adc
bound
notb
mov
jno
sub
popa
mov
xchg
je
enter
scas
dec
in
notl
hlt
mov
daa
inc
lret
mov
arpl
das
out
push
loope
icebp
mov
stc
cwtl
imul
in
notl
mov
les
push
jmp
push
or
mov
es
lcall
or
mov
inc
orb
cwtl
sub
cltd
jo
repnz
scas
jl
mov
cmp
xchg
btc
adc
movb
das
aad
stos
loopne
dec
mov
xchg
insl
in
pop
sbb
jl
fisubl
clc
outsl
jne
or
flds
xchg
aam
dec
xchg
roll
in
icebp
int3
loope
clc
mov
adc
iret
mov
mov
fcomp
test
insb
into
sub
lods
insl
sbb
arpl
mov
aas
ret
dec
ret
cmpsb
sbb
jle
push
int
pop
sub
fildl
test
add
dec
and
sub
mov
fstpt
xor
stos
lods
push
cltd
fcoms
dec
inc
aaa
test
adc
and
push
sbb
movb
jnp
fbstp
fsts
mov
bound
lahf
xchg
add
data16
cs
mov
daa
push
jge
fwait
inc
jne
sbb
sbb
jle
cmp
lahf
ja
push
jecxz
fcomip
pop
pop
dec
adc
jecxz
sbb
das
or
mov
shll
dec
inc
push
cmp
jmp
lods
ret
fs
fldl
hlt
xlat
and
lea
adc
sbb
movsl
sub
loopne
dec
jl
js
std
dec
sub
mov
jle
repnz
inc
in
jne
adc
pxor
adc
jmp
shlb
out
or
push
lahf
mov
lret
test
mov
pop
in
push
loope
mov
cli
fstpt
xlat
orl
rorl
dec
pop
jle
sbb
push
stos
jge
jl
lock
mov
mov
push
dec
scas
les
arpl
push
cmp
xor
lods
aas
cmpsb
and
call
lds
scas
dec
test
insb
and
push
add
lock
sub
jbe
pop
xor
dec
cmpsb
in
loopne
adc
push
fwait
test
sub
lfs
jns
sub
or
or
adc
or
lock
fincstp
add
push
out
shl
pop
scas
xor
sub
call
out
or
lock
clc
psubsw
xchg
loopne
push
cmp
ss
jne
mov
movsl
test
mov
icebp
add
jns
jnp
daa
pop
push
dec
imul
push
out
test
out
leave
jge
add
xchg
or
push
adc
lds
dec
cwtl
sbb
out
adc
sti
jmp
jb
insl
out
sbb
gs
mov
sub
out
and
daa
inc
clc
sti
jo
add
xchg
fcoml
jp
mov
jns
pop
mov
inc
enter
push
fbld
lods
jge
andl
xor
dec
addb
in
cmc
push
inc
sbb
fnsave
mov
inc
nop
cwtl
cwtl
lahf
xchg
push
mov
add
xor
rcr
fstpt
jmp
and
aas
push
xchg
xor
movsl
jo
orl
xor
stos
enter
out
dec
push
xchg
push
pop
xor
or
sub
data16
dec
mov
inc
daa
enter
fs
dec
test
mov
xlat
inc
shlb
sub
std
xchg
xchg
jnp
dec
xchg
daa
dec
sub
les
push
test
mov
jnp
mov
mov
bnd
outsb
pushl
xor
jns
insb
std
or
jb
aad
mov
js
lret
shll
or
cs
dec
push
sub
lods
cmpsl
in
sub
push
xchg
icebp
lcall
xor
dec
into
divb
mov
xor
xchg
out
stos
adc
inc
scas
add
pop
cmp
dec
scas
cmp
cmpsl
cld
cmp
mov
or
imul
cmp
loop
pop
loop
sub
imul
mov
pop
stc
pushf
push
xchg
mov
enter
mov
mov
test
or
fisttps
stc
mov
or
dec
imul
pop
jle
jg
add
call
jmp
xor
inc
cmp
or
xor
and
or
mov
arpl
mov
dec
out
dec
jno
hlt
xor
mov
fcmove
cmpsl
arpl
inc
in
add
mov
add
ffree
lea
and
filds
sbb
mov
cli
or
test
cmp
fwait
xorb
xchg
xchg
sbb
insl
icebp
call
inc
pop
push
pusha
popa
jnp
arpl
sub
lahf
push
mov
or
in
dec
xchg
and
pop
sbb
jbe
int3
or
push
insl
outsl
mov
lds
cmp
jle
test
loop
in
repnz
ret
das
cmp
fwait
rep
jno
dec
jae
test
int
inc
out
rorb
jg
mov
insb
adc
push
sarb
mov
and
outsl
jg
cmp
loopne
pop
mov
into
pop
mov
call
addr16
lds
in
cmp
stc
xor
mov
ss
jecxz
mov
shl
ret
insb
jge
and
xor
mov
mov
cmpsl
cmp
imul
dec
in
nop
and
rorb
loop
pop
inc
adc
mov
popf
sub
mov
je
sub
aad
ds
xor
les
add
and
inc
push
dec
rcl
dec
and
jecxz
pop
pop
mov
adc
mov
jns
movsl
pop
or
lods
aaa
push
jg
mov
sub
and
sub
mov
fists
addr16
mov
fistps
into
dec
outsb
out
jg
sbb
sub
lahf
outsb
shlb
push
mov
adc
or
pextrw
pop
adc
cmpsl
ret
adc
push
outsl
push
sub
imul
fisttpll
nop
mov
jmpw
add
push
scas
push
xchg
psrlq
adc
or
testb
xchg
out
add
xor
ret
xchg
cmp
or
or
dec
jb
movsb
mov
jbe
xor
aas
cmp
sbb
imul
shufps
pushf
jecxz
cmp
and
add
sti
push
leave
sub
test
js
dec
mov
enter
fisubrl
cmpsl
add
jmp
das
dec
rcrb
xor
hlt
hlt
movsb
push
leave
push
xchg
loop
test
fwait
mov
jmp
mov
loop
mov
int
loopne
scas
sub
cmpsl
in
mov
ret
sub
loope
sar
mov
repz
or
mov
test
ljmp
dec
xchg
mov
push
push
cmp
sbb
loopne
add
stos
xor
xlat
pop
inc
dec
xor
pop
jb
mov
loope
and
inc
cmpsl
sub
in
sub
mov
shr
lods
jecxz
mov
mov
scas
mov
xchg
mov
sete
xchg
add
stos
xchg
dec
cli
decl
push
scas
outsb
sub
and
or
pop
and
cmpb
cmpxchg
dec
int
andl
cs
mov
or
mov
and
push
cmc
in
test
fisubrl
enter
pop
cmpb
ljmp
jecxz
test
sbbl
add
and
cmp
or
mov
jmp
aad
push
mov
bnd
call
push
or
xor
add
int
mov
ret
lods
jns
push
movsl
or
pop
jg
adc
mov
dec
rol
lea
dec
xor
mov
mov
loope
in
pinsrw
daa
sbb
lea
mov
movsb
dec
jecxz
shrl
add
push
push
mov
mov
xor
mov
lea
mov
push
cmp
lods
jno
dec
push
jns
dec
or
fnsave
adc
test
xor
dec
push
dec
fcmovbe
lahf
into
arpl
lea
imul
movsb
ss
inc
xchg
out
das
sti
push
xor
add
lods
test
ret
mov
das
data16
fcmovnbe
ja
mov
jp
and
mov
jns
dec
push
mov
jp
in
inc
dec
mov
jp
jnp
dec
push
mov
cmpsb
sbb
and
push
jo
enter
adc
gs
adc
push
or
xchg
add
loope
pop
fs
lock
in
or
xchg
adc
jg
and
jle
lock
stos
out
sub
sbb
adc
jge
xchg
inc
or
imul
jmp
add
sbb
loopne
jne
enter
add
dec
xchg
adc
es
outsb
ficomps
xchg
sub
int3
cmp
cltd
push
fwait
and
or
sbb
jmp
leave
les
mov
mov
mov
adc
sub
mov
hlt
dec
sbb
xchg
inc
js
movsl
adcb
add
ljmp
pop
pop
cmp
lret
mov
fdivl
jmp
fmuls
xchg
lods
xchg
hlt
add
cld
stos
mov
addr16
mov
mov
ficomps
aaa
outsl
add
xchg
mov
in
ret
fstl
and
ss
shrl
mov
jno
push
lahf
bound
test
loope
frstor
rolb
jae
ja
and
jne
insb
shll
sub
sbb
in
lcall
out
adc
bound
repz
sbbl
popa
int
fdivrs
cmp
mov
pushf
lods
outsb
jo
pop
fistps
sbb
movsl
xor
lahf
jmp
gs
jecxz
lock
xchg
mov
mov
jne
dec
mov
mov
or
pop
test
js,pn
jnp
pop
sbb
adc
test
lea
icebp
xchg
or
jl
xchg
cmp
push
pop
pop
mov
je
xor
xchg
push
daa
mov
lahf
test
dec
test
stos
dec
dec
pop
push
fstl
lretw
xor
push
inc
jnp
bound
enter
inc
out
mov
in
cmp
scas
push
stos
outsl
mov
inc
out
ss
iret
out
jno
push
or
sbb
cmpsb
sub
mov
mov
xchg
or
mov
pop
add
xorl
das
dec
scas
stos
aad
fmull
addr16
outsl
shlb
push
push
hlt
insb
and
sbb
pop
loope
mov
gs
pop
nop
pushf
push
ds
sti
jne
loop
jecxz
ljmp
xor
inc
cmp
add
out
and
inc
push
xchg
out
push
sub
sub
sbb
cmp
adcl
dec
loop
push
jle
testb
add
sbb
fdiv
add
aad
mov
dec
adc
js
pop
outsb
fsub
dec
popf
das
movl
cs
inc
push
aaa
call
aaa
add
xlat
rcr
mov
jmp
dec
dec
ffreep
xchg
ds
xor
lahf
sbb
mov
gs
inc
lret
mov
mov
adc
stc
into
outsb
sub
add
cmp
cli
aam
push
lcall
lar
pop
cmp
nop
mov
mov
cmc
mov
addb
ljmp
repz
dec
ljmp
mov
out
push
push
inc
push
adc
lcall
outsb
call
push
xor
mov
rcrl
mov
push
add
and
mov
inc
push
lret
sbb
mov
cmp
pop
lret
aam
pusha
es
mov
fstpt
inc
out
loop
js
in
cmpb
nop
mov
pop
out
sbb
js
xchg
add
xchg
xchg
jbe
add
sub
leave
dec
add
fwait
das
bound
mov
sahf
negl
lcall
pop
call
cmc
sbb
andb
mov
push
fdivl
push
cwtl
jne
stc
xor
cmp
mov
xor
add
add
scas
dec
adc
cli
movhps
icebp
xor
add
insl
inc
pop
cmp
popf
dec
dec
nop
cld
pop
movsb
inc
ret
and
push
xchg
push
repz
in
inc
ret
and
add
sub
pushf
mov
mov
popf
pop
imull
xchg
cltd
mov
loope
mov
fmuls
test
test
js
and
gs
adc
adc
outsb
or
pop
popa
add
fs
jge
imul
mov
mov
pop
push
outsl
gs
inc
movsb
xor
inc
popa
shlb
inc
addb
pop
je
push
fiaddl
sub
cmp
outsl
adc
xlat
sbb
or
icebp
pop
sbb
lret
call
aam
push
sbb
xchg
sub
shlb
mov
repnz
xor
cwtl
cmpsl
xchg
pop
inc
sbbb
push
inc
fsts
popf
gs
mov
in
stos
add
sti
pop
mov
inc
das
cmc
cmp
call
or
xor
test
into
xchg
pop
inc
push
rorl
in
pop
out
pop
inc
cmpsb
add
pop
rorl
push
dec
mov
push
nop
add
fldl
xor
add
andl
add
and
test
xchg
mov
pop
mov
lds
adc
stc
push
cmp
test
or
cld
sub
shl
mov
test
xchg
stos
in
addr16
dec
dec
or
stos
or
xchg
jne
insl
adc
jecxz
rcr
mov
dec
xchg
pushf
fdivrl
or
pop
pop
movsb
jbe
xchg
ds
rcll
mov
xor
in
pop
aaa
fcomp
decb
pop
pusha
les
movsl
xlat
in
test
push
sbb
dec
mov
mov
inc
mov
or
clc
or
fldl
inc
push
or
add
adc
xor
xlat
cmp
dec
xchg
icebp
mov
sbb
pop
push
imul
clc
push
testl
out
mov
icebp
mov
dec
add
push
aad
fdivrs
iret
pop
add
xchg
sbb
out
test
or
jecxz
sub
sub
and
imul
push
loop
aas
fcmovu
mov
cli
xchg
insl
mov
add
repnz
or
cltd
mov
int
push
dec
pushf
inc
mov
fsave
ret
inc
jge
mov
or
rol
in
xor
xor
sbb
dec
jne
icebp
out
pop
rcrb
adc
aas
icebp
and
ja
adc
test
mov
mov
mov
add
out
test
push
add
out
sbb
pop
jns
sbb
jnp
bnd
lcall
ja
pop
jg
out
push
mov
addr16
mov
movsb
pop
lds
mov
adc
data16
pop
sub
add
aaa
loopne
sub
and
mov
and
cmp
sub
ljmp
xchg
xchg
loop
sbb
mov
mov
or
cmp
fimull
inc
shll
in
sbb
lret
jle
mov
lods
outsl
dec
pop
jmp
in
mov
sbb
rolb
mov
sbb
dec
mov
mov
sbb
add
inc
js
dec
rorl
and
push
test
pop
fistps
stc
es
shlb
cmp
imul
mov
mov
mov
or
dec
jae
aam
mov
ljmp
add
push
test
xchg
les
dec
pop
pop
mov
jle
xchg
ds
in
adc
pop
pushl
mov
mov
add
xor
in
mov
pop
cmpsl
xchg
pushf
ffree
push
jo
pop
mov
into
sub
xor
pop
test
lock
iret
push
cmp
ss
and
sahf
popf
jne
jg
push
fisttps
insb
or
aaa
push
push
mov
sub
int
dec
push
in
mov
out
inc
sbb
mov
mov
pop
in
mov
outsl
pushf
mov
inc
dec
pop
testb
push
push
scas
xchg
lods
aas
sbb
jle
xchg
sbb
jno
pushf
mov
add
sbb
mov
jmp
or
pop
cld
mov
xchg
sub
js
jno
push
jbe
call
pop
cmp
out
pop
inc
xchg
imul
out
adc
cmc
pop
dec
pop
out
popf
call
xchg
xor
add
jmp
mov
mov
xchg
pop
lds
cmc
xor
and
cmpsl
cld
push
mov
jmp
or
cmp
cmp
flds
jecxz
sti
push
pop
dec
aam
popa
jbe
dec
neg
sarl
nop
stc
test
imul
sti
xor
xchg
mov
lcall
notl
js
mov
mov
outsb
int3
sub
push
mov
push
sub
push
sbb
add
inc
lea
dec
sub
xchg
ss
cs
xchg
and
int3
incl
pop
xor
add
scas
or
repz
jo
sbb
xor
add
jae
or
xchg
cltd
ljmp
fwait
xlat
add
push
add
gs
mov
and
ficoml
mov
cmp
sbb
lock
outsb
lea
ror
add
mov
outsb
cmp
cltd
fiadds
stos
xor
jbe
adc
push
ss
dec
movsl
add
mov
inc
mov
push
mov
or
in
inc
mov
in
in
push
aad
mov
push
jmp
fsubs
aas
popa
jmp
out
mov
sarb
cmpsl
inc
cltd
dec
adc
sbb
xor
cltd
pop
arpl
repnz
inc
xor
xor
ljmp
mov
cli
sahf
dec
cltd
sub
enter
ljmp
int
pop
das
xchg
or
cmpsb
clc
or
add
loop
pusha
lahf
lods
or
mov
fdivrs
outsb
mov
iret
mov
and
inc
and
inc
mov
mov
shlb
adc
cmpsl
mov
outsb
jno
into
sbbb
in
sbb
dec
outsb
dec
outsb
out
pop
xchg
mov
arpl
dec
jae
ds
add
rclb
test
ret
push
jg
xchg
ljmp
pop
sbb
mov
js
push
xor
and
add
in
outsl
jns
mov
mov
in
fdivs
mov
dec
lods
clc
cmp
push
mov
dec
iret
xor
jne
xchg
loope
sarl
aaa
dec
xchg
push
mov
xor
add
imul
icebp
popa
test
cld
mov
push
sbb
mov
daa
mov
sub
inc
jb
loopne
mov
xchg
push
dec
xlat
imul
jbe
sub
push
push
jbe
pop
fstl
push
insb
and
inc
jecxz
jecxz
mov
cmc
jge
mov
icebp
repz
ljmp
sub
lahf
xor
sbb
gs
jno
xchg
xlat
leave
cmc
int3
mov
push
jno
xchg
movsl
mov
repz
mov
fbstp
or
outsb
negl
xadd
xchg
fs
inc
lock
mov
sub
mov
or
stc
jge
cmp
fdivrl
pop
mov
or
pop
sti
dec
cmpsl
sti
in
dec
mov
popf
in
idivl
or
pop
testl
add
rorb
push
les
mov
or
adc
icebp
cmp
mov
jl
test
call
std
lods
mov
cmc
lds
cwtl
and
mov
xor
imul
insb
mov
scas
out
pop
inc
xchg
imulb
cs
pop
sarb
push
pop
pop
loope
sub
cwtl
xchg
inc
imul
lret
lock
jb
mov
int
lods
mov
sahf
and
imul
inc
scas
fidivs
popa
sbb
sub
adc
jno
test
sbb
mov
cwtl
pop
mov
pop
jge,pt
mov
dec
mov
inc
push
cmp
or
push
pop
fcmovnbe
jbe
call
mov
or
jnp
sbb
sub
aas
mov
sub
fwait
push
jecxz
repz
xchg
ljmp
rcl
das
add
lods
pusha
bound
enter
jg
enter
pop
cld
movq
int3
scas
xchg
sbb
loop
repnz
jmp
xchg
push
jle
xor
push
sub
stos
repz
mov
jge
movsb
cmp
cmpsb
and
nop
aas
mov
nop
cmp
das
and
out
mov
cmp
mov
notb
lods
inc
lret
inc
popf
xchg
and
ds
aad
std
fs
in
cmp
pop
aad
das
shlb
sti
sbb
ss
mov
sbb
cmp
cs
enter
cwtl
loopne
xor
outsb
or
into
mov
outsl
adc
out
es
pop
jl
out
push
popf
lock
shll
adc
pop
inc
push
test
fsubs
aas
and
subl
popa
sbb
and
add
mov
pop
push
nop
lret
fmuls
inc
fcoml
in
adc
ss
mov
loopne
cli
dec
or
mov
data16
scas
cmp
das
jne
and
insb
xchg
xor
inc
mov
pushf
testb
sbb
adc
ja
cmpsb
xor
clc
outsl
sbb
ljmp
cli
sbb
std
negl
enter
push
jno
xor
dec
jecxz
out
in
or
inc
or
leave
sub
popa
jb
inc
sbb
dec
dec
adc
cwtl
ret
loop
mov
jbe
dec
pop
aaa
ds
mov
outsb
jnp
add
and
arpl
push
add
inc
pop
fidivrs
loopne
xor
add
and
dec
mov
mov
aad
jnp
aam
ret
inc
rcl
xor
lods
push
pop
xchg
xor
xlat
bound
add
ljmp
mov
jne
scas
xor
add
add
pop
or
es
fwait
dec
xchg
push
ret
dec
cld
inc
inc
loop
stos
xchg
jmp
mov
xchg
std
lret
pop
or
fsts
imul
sub
cwtl
cs
scas
cmp
xor
inc
or
xor
repz
scas
mov
mov
pop
test
pop
push
mov
lahf
and
pusha
mov
sbb
das
icebp
xor
add
cwtl
test
sub
push
pop
sti
lcall
and
jp
push
push
loop
push
inc
leave
sti
jae
and
stos
xchg
or
jmp
insl
dec
jp
xlat
mov
cmp
push
les
ss
xchg
xchg
stc
adc
fsubp
push
cmp
mov
pop
or
cmp
mov
pusha
fcmovnbe
movsl
lahf
dec
sarb
sbb
push
std
fs
adc
fcomps
mov
xchg
ljmp
sub
stos
dec
mov
out
jne
cmp
shlb
lret
push
mov
mov
shlb
jg
xchg
mov
adc
lahf
cmp
outsl
inc
shrb
jno
and
lods
sbb
pop
sar
enter
mov
push
sub
das
nop
push
repz
jmp
and
dec
mov
or
jns
push
dec
jbe
sub
ret
shll
adc
push
lret
aas
mov
popa
test
jp
inc
mov
fcmove
mov
mov
mov
sti
lcall
setbe
jecxz
and
mov
rorl
jmp
call
push
dec
test
xchg
push
and
pop
mov
push
insl
xor
loope
in
pop
ja
add
push
in
fildll
shll
enter
xchg
push
test
std
lret
xlat
jb
push
lods
rcll
insb
clc
mov
lock
scas
lds
cmpsl
lahf
sbb
pop
lret
out
xchg
mov
inc
xor
sub
mov
mov
inc
dec
repnz
inc
and
ljmp
jbe
cmp
or
int3
lcall
mov
adc
mov
fbld
mov
inc
push
test
movsl
cmp
mov
xor
jge
cltd
inc
pop
pop
sti
and
jg
stos
icebp
cmpsl
push
and
data16
push
dec
inc
cmc
cld
scas
inc
jp
lock
addr16
push
es
mov
ficompl
jecxz
add
rorl
fwait
ror
inc
dec
shll
fdivs
in
loop
adc
cwtl
stc
mov
jnp
cmp
sbb
cmp
sbb
stc
sbb
test
std
jmp
push
cltd
ss
push
cld
add
mov
sub
lea
ss
cltd
mov
dec
xchg
jl
call
adcb
push
daa
adc
fistl
cmc
add
cmc
andb
fisubs
mov
mov
jp
cmp
mov
xchg
test
inc
cmpsl
shlb
jecxz
andl
push
inc
mov
cmp
int3
mov
cmp
add
in
daa
cld
imul
jae
mov
scas
nop
mov
xchg
std
loope
or
into
cmpsb
sbb
scas
xchg
pop
test
xor
es
and
pop
dec
shll
sbb
sub
fs
decl
mov
roll
bnd
add
mov
push
call
mov
cmp
outsb
add
pop
xor
lret
add
ds
test
leave
dec
push
adc
in
movsb
std
mov
inc
into
int3
dec
jb
xor
aad
push
out
dec
pop
add
call
les
and
xor
mov
push
adc
mov
pusha
push
push
in
mov
pop
inc
loope
iret
adc
lcall
stos
sub
jle
movsb
daa
pop
sub
into
cmpsb
dec
dec
mov
mov
jl
and
nop
daa
adc
popf
cmp
xchg
jl
mov
jp
xchg
ds
jge
dec
inc
jp
roll
dec
idivl
pop
je
lods
call
push
or
movsb
out
cwtl
ja
or
ret
mov
stc
jns
push
sub
movsl
cld
fs
xchg
inc
mov
shlb
ljmp
xor
hlt
pop
ljmp
xlat
nop
xor
mov
jmp
imul
push
mov
mov
imul
hlt
mov
sti
inc
mov
out
sub
xchg
lods
sub
fdivrl
dec
inc
ret
sbb
jge
mov
cmpsb
shll
fisubl
lahf
pop
mov
out
jmp
rcll
pop
pop
or
fcoms
pop
stos
mov
int3
arpl
loop
test
popa
addr16
sbb
jmp
jle
lds
ret
rcll
cs
pop
xchg
popa
popa
in
sub
test
mov
or
dec
jecxz
push
xor
call
pop
jne
out
push
sub
mov
int3
rcll
cmp
rcrl
xchg
jne
xor
fmull
pop
pop
pop
pop
fcoms
cwtl
cmpb
adc
mov
and
push
sbb
repnz
push
jnp
lret
dec
xchg
xchg
mov
jg
mov
into
mov
cmp
fstps
shrl
movsl
xchg
out
mov
mov
out
roll
outsl
mov
jmp
mov
and
xlat
out
pop
push
enter
or
pop
cmp
cmp
rcrb
dec
or
and
in
mov
jmp
loop
clc
or
lds
cld
mov
sbb
mov
sahf
mov
xchg
adc
stos
lret
pop
dec
pop
gs
mov
xor
outsl
or
pop
mull
test
sub
mov
jecxz
push
insl
out
jecxz
pop
cmpsl
xchg
adc
jmp
iret
push
jo
lcall
mov
stos
xlat
stos
lea
stc
ret
inc
mov
xchg
mov
sub
jnp
sti
pop
ret
nop
int
incl
mov
mov
ds
dec
popa
js
or
shlb
repnz
in
setle
outsl
or
and
notb
jl
jnp
int3
xchg
mov
pop
dec
inc
pop
sbb
outsl
cmp
imul
pop
vandps
leave
and
movsl
js
in
and
inc
jl
adc
lock
in
adc
cmp
dec
push
scas
lds
shrl
jmp
jle
or
sbb
test
mov
test
fmull
dec
and
inc
jp
mov
pop
jp
xor
js
ss
mov
sti
aas
je
jno
dec
rcll
mov
into
mov
gs
ljmp
mov
push
in
shlb
mov
inc
adc
leave
incl
inc
imul
push
dec
lea
daa
push
ret
movsb
movsb
sub
push
xor
les
das
add
cmp
cmp
repnz
orb
add
mov
cmp
xor
mov
sub
je
mov
mov
or
mov
cmp
push
stos
mov
sub
cs
shlb
xchg
ds
inc
and
out
push
push
ljmp
add
je
scas
rclb
test
dec
aaa
rorb
aaa
lahf
icebp
bound
ds
cmpsb
enter
add
pop
mov
push
mov
imul
push
jno
test
jecxz
jmp
mov
sbb
loope
xchg
cmp
mov
fmuls
mov
cmp
adc
stos
lock
adc
push
sbb
push
cmp
icebp
pop
testl
xor
test
pop
lods
dec
xchg
arpl
adc
ror
sub
aad
mov
mov
pop
cmp
pop
jmp
int
test
test
insl
mov
outsb
cmp
dec
or
mov
jnp
int3
cmc
in
push
jo
stos
fdiv
cmp
cmp
pop
push
roll
je
leave
fldl
push
cwtl
xor
cmpsb
adc
movsb
leave
std
sahf
adc
jno
pop
dec
pop
cmp
sbb
loopne
mov
cmp
in
clc
mov
js
test
mov
dec
das
pop
or
pop
cmpsl
jle
or
test
xor
xchg
out
pop
pushf
jp
mov
aas
pop
dec
push
xchg
push
xor
or
gs
jecxz
ds
pop
imul
loopne
dec
pop
and
in
add
xchg
and
inc
cmp
mov
adc
push
pop
mov
or
xchg
cwtl
xchg
pop
sub
stos
mov
cmp
xor
xor
cmp
inc
and
mov
sbb
inc
jo
stc
mov
adc
out
inc
popf
pop
inc
ljmp
mov
int3
jbe
andb
inc
out
mov
outsl
push
add
out
cmpsl
dec
adc
imul
push
jmp
push
loope
pop
pop
ds
lahf
sub
cmc
jmp
aas
es
cmp
test
cmpsl
gs
xchg
cmp
dec
adc
sub
fiaddl
jo
sbb
cmp
mov
sub
push
jb
nop
int
cmp
mov
push
sbbl
pop
jmp
dec
mov
scas
add
sbb
xor
jo
nop
or
in
aas
syscall
jge
dec
outsb
xchg
xchg
push
mov
add
push
push
stos
xchg
out
jne
inc
cmp
sahf
dec
xchg
push
gs
imul
dec
lahf
icebp
jns
call
movsb
into
arpl
mov
xchg
sbb
xor
pop
xlat
cmc
cmp
and
xchg
outsb
ret
inc
sbb
arpl
aaa
les
inc
rcrb
sub
mov
and
mov
rcrb
icebp
mov
jmp
in
pusha
mov
rolb
flds
sub
mov
adc
mov
or
fdivrl
cmp
rolb
xchg
mov
fisubs
sbb
add
push
filds
fwait
enter
add
popa
leave
fsts
int
frstor
imul
fs
pop
loope
mov
bound
jp
dec
or
mov
inc
pop
adc
xlat
push
repnz
je
addr16
jb
pop
test
sbb
stos
paddb
stos
dec
aad
cmp
inc
and
lcall
sub
xor
ffree
fstpl
mov
inc
mov
inc
cmp
outsl
pop
push
je
pop
dec
jp
nop
in
mov
jo
add
dec
dec
inc
aam
xchg
lea
out
ljmp
dec
or
xor
inc
outsl
sbb
jb
cmc
int3
in
pop
mov
les
mov
icebp
ja
inc
fwait
mov
xchg
cmp
sub
and
xchg
imul
pop
inc
dec
jnp
test
mov
cmp
xor
xor
iret
push
inc
inc
test
js
idivl
je
add
test
sahf
scas
push
mov
mov
jmp
shlb
xor
stc
xchg
lcall
xchg
push
pop
mov
in
push
xor
inc
movaps
mov
pusha
and
xor
jecxz
xor
movsl
ficoms
lock
into
and
push
jno
sbb
jmp
mov
ljmp
jnp
fildll
xchg
mov
fcoms
addl
mov
mov
decb
xor
adc
movsb
ja
bnd
cmp
icebp
outsl
test
mov
xor
arpl
rorl
aaa
xor
add
fdivs
je
js
xchg
lock
jecxz
jg
inc
int3
pop
addl
jmp
dec
fwait
mov
clc
pop
cmp
mov
idivb
pop
jp
cld
and
cmp
test
inc
xchg
push
inc
mov
aam
jb
inc
jecxz
pop
std
mov
xor
stos
test
sysret
cmp
cmc
hlt
imul
xchg
ret
lahf
lret
push
add
jge
jmp
sbb
xor
push
fwait
lods
mov
push
sbb
mov
jae
sti
push
xchg
xchg
sub
aas
sti
cmp
sub
insb
xor
cltd
into
xchg
xlat
pop
mov
les
repnz
jns
push
adc
lcall
je
mov
cmp
aaa
cmc
pushf
pop
divl
in
incb
mov
mov
sub
out
cltd
fidivrs
pop
cld
andb
mov
mov
sbb
pop
adcb
pushf
xchg
push
sahf
mov
push
xor
push
rcl
rcl
or
push
lea
test
push
lret
fidivl
and
loop
sti
aam
mov
and
in
das
lods
xor
add
xabort
push
loope
call
mov
stc
pop
jbe
int
outsb
lcall
insb
out
lcall
lahf
mov
sub
cmpsl
add
aam
ja
fstps
enter
fistl
cli
push
sub
xchg
loop
pop
xchg
mov
and
sbb
das
imul
push
jns
insl
mov
ret
mov
out
mov
mov
mov
cltd
outsl
or
dec
lcall
jo
aaa
bound
or
stc
dec
and
fcomps
xor
add
xchg
push
pop
xorl
xchg
aaa
ds
or
and
lock
out
andb
divb
ja
pop
inc
xchg
sub
inc
ret
inc
dec
jns
popf
mov
movsb
jne
inc
cs
test
xchg
push
cld
add
sbb
negb
jl
in
loope
fnstcw
pop
mov
repnz
push
xchg
in
mov
cmp
pop
in
jnp
pop
mov
cmovge
dec
xchg
push
push
jg
arpl
adc
mov
fdivrl
push
pop
cmp
in
pop
inc
add
test
sub
data16
lcall
xor
daa
movsl
sub
xor
push
push
jecxz
cmp
insb
hlt
push
sub
out
bound
cmovno
jge
pop
test
inc
xlat
and
and
adc
mov
in
scas
mov
shrl
mov
andb
movsl
and
dec
mov
in
or
sbb
cli
loope
xchg
lret
pop
popf
ss
mov
mov
pushw
push
sete
jbe
mov
imul
mov
fists
aad
movsl
repz
xchg
roll
sub
aas
sub
adc
mov
cmp
adc
cmp
pop
inc
and
je
jns
inc
add
shlb
cmc
enter
sbb
and
int3
dec
jo
push
in
jl
jle
aam
cwtl
lods
js
sbb
lahf
ja
jle
dec
stos
xchg
fstpl
pop
lahf
cltd
jmp
cmpsl
ss
sbb
sub
mov
dec
stc
shlb
aas
inc
adcl
in
in
push
je
push
add
ret
sbb
out
loopne
sbb
inc
or
xor
lret
ljmp
push
lods
push
iret
mov
cmpsl
test
aaa
repnz
mov
mov
add
push
popf
popa
popa
jo
mov
dec
repz
insb
stos
pop
sub
das
jnp
fisubrs
adc
pop
jp
pop
and
nop
ja
rcll
lods
leave
adc
xor
leave
mov
ljmp
out
scas
dec
xchg
mov
xor
jae
jge
and
sbb
ds
rcl
sarl
jb
cmp
fidivrl
dec
sti
jg
outsb
insl
lock
daa
mov
cmp
inc
mov
rolb
popf
sbb
and
sub
insl
cmpb
xor
pop
std
shlb
jae
shrl
dec
daa
jecxz
jb
movsb
xchg
dec
dec
call
add
rcll
sbb
int3
pushf
ret
inc
cld
add
fisubrs
mov
nop
jb
pop
jb
sahf
xchg
shlb
popf
push
enterw
mov
aam
xchg
jb
xchg
mov
sbb
or
imul
add
jnp
push
xor
sbbb
movsb
movb
fdivrp
xchg
inc
sub
dec
mov
jmp
negl
je
push
mov
sbb
sub
pop
shlb
lret
jne
mov
fwait
gs
fmull
ja
sbb
inc
call
call
pop
into
inc
insb
jns
dec
in
and
push
jp
inc
add
and
loope
cmp
fdivrl
cltd
testl
jns
xor
js
adc
adcl
js
push
addl
cwtl
adc
push
outsl
push
dec
adc
sub
and
xor
push
popa
cmp
xor
jo
rcrb
pop
loop
add
inc
ljmp
and
pop
jge
push
and
outsl
inc
cmp
cli
push
or
sbbl
cmp
add
sbb
sub
je
push
pop
mov
dec
inc
dec
adc
imul
jnp
mov
es
add
push
divl
sbb
cmc
cld
mov
movsb
sbb
push
inc
outsb
push
jl
mov
imul
and
and
fstl
adc
adc
movsb
std
and
mov
jnp
fimull
clc
sbbl
xchg
cwtl
test
cmp
or
test
push
out
push
push
adc
call
mov
fs
add
sbb
add
sbb
mov
lret
ss
add
mov
and
pop
call
inc
popf
pusha
popf
rcrl
or
push
dec
loopne
sarl
sub
cmp
stos
cmp
fsubrl
xor
imul
loopne
inc
adc
cltd
mov
inc
or
mov
jle
sti
mov
sbb
lods
cmp
dec
sti
stos
push
inc
dec
dec
mov
cmp
nop
mov
adc
inc
fstp
outsb
leave
movsb
push
popf
sahf
insl
out
sub
insb
xchg
jbe
daa
roll
jmp
stos
jp
jecxz
mov
aad
push
adc
xchg
pop
out
pop
hlt
gs
daa
out
push
inc
pop
mov
xchg
lock
sbb
sbb
mov
cltd
nop
mov
lods
or
imul
xchg
cmp
jns
jmp
lret
call
fisttpll
pop
scas
jae
xchg
sbb
pusha
xchg
lret
pop
mov
mov
push
inc
jo
jmp
or
inc
cli
xchg
mov
or
repz
hlt
stos
and
lds
inc
push
adc
xchg
repz
sub
je
popf
insl
pop
sahf
mov
and
shll
sbb
movsl
push
cwtl
lret
inc
movsl
fcoms
es
andl
inc
pop
or
into
push
outsb
xchg
cld
call
add
add
dec
je
add
sbb
cs
mov
jbe
mov
sbb
lahf
imul
enter
mov
adc
lret
fcmovu
xor
pop
jmp
mov
pop
xor
loope
push
push
hlt
cltd
in
xchg
lcall
jb
inc
hlt
sub
or
dec
lret
leave
sahf
xchg
lds
into
out
mov
mov
iret
jae
aaa
sub
push
push
mov
sahf
jo
cmp
add
dec
sbb
fldl
jmp
or
aas
xor
pusha
jecxz
push
adc
adc
push
sbb
cmp
jae
ss
xchg
mov
dec
xor
inc
js
imul
pushf
mov
negb
and
xchg
xor
dec
fsts
shlb
repnz
sahf
decl
adc
test
mov
push
xor
cmpl
movsb
scas
cmpsl
fwait
pop
test
enter
or
stos
lcall
cmpsb
inc
mov
inc
mov
repnz
jmp
xchg
mov
sub
jg
jge
jb
or
jns
rcrb
pop
xchg
popl
je
inc
andb
jb
mov
outsl
test
or
xor
incb
cmp
arpl
sbb
push
dec
inc
and
sti
cmpl
jle
pop
in
aad
add
clc
jg
mov
push
popf
dec
jp
adc
jo
add
test
mov
in
or
or
mov
mov
aad
subb
dec
shrl
out
mov
jg
fldt
jge
lock
sub
cmpsl
push
mull
notl
leave
and
lock
in
or
push
shll
lret
push
lcall
or
mov
cmpsb
lods
dec
mov
test
inc
push
cwtl
mov
sbb
jge
jle
lret
mov
and
mov
xchg
ret
sub
sub
repz
push
dec
xor
mov
ss
pop
and
push
out
jle
insl
fwait
jne
je
push
pop
mov
or
or
cmp
shll
xchg
add
mov
add
movsl
adc
arpl
repz
mov
aam
or
rcl
aas
jo
mov
mov
aas
ja
int
int
bound
and
add
cmp
leave
in
dec
lret
push
mov
xchg
xor
or
mov
sub
pop
test
addb
jbe
dec
shl
push
test
sarl
ljmp
outsl
sub
lahf
or
push
cli
test
mov
xor
pop
scas
or
leave
push
cmp
in
out
ret
out
jge
push
arpl
mov
outsl
mov
push
push
sbb
gs
cmpsl
lods
test
mov
push
dec
add
repz
sti
mov
in
jbe,pn
test
daa
jp
jle
push
pop
and
lds
lahf
or
out
inc
sbb
mov
mov
fcmovne
iret
pop
shr
or
inc
loop
inc
push
fisttps
cltd
jmp
js
inc
inc
lcall
dec
in
sub
dec
ret
jno
push
inc
nop
adc
mov
out
mov
dec
pushf
and
push
ret
sbb
mov
test
push
stos
test
adc
mov
out
inc
sbb
push
das
and
jb
cmp
push
mov
int
cltd
push
movsb
idivl
sub
mov
xchg
inc
dec
xchg
xchg
and
sti
sub
mov
cmp
xchg
push
cmp
adcb
add
movsb
outsb
lock
fcompl
cmp
mov
jb
push
mov
insl
sub
pusha
mov
push
jo
cltd
int
add
jne
testl
hlt
sub
pop
fidivrs
mov
jno
and
outsb
push
test
cmpsl
test
sub
add
dec
inc
jge
popf
subl
rcll
push
mov
add
or
push
fucomip
adc
fisubrl
mov
into
lods
inc
fistpll
in
xrelease
data16
out
xchg
clc
push
pop
sub
fcmovnbe
jmp
pop
aad
int
ror
outsl
add
lret
out
pop
cs
cmp
push
mov
shlb
and
xor
fcompl
cmc
cmp
ds
sub
cmp
mov
int
ljmp
push
and
fldt
mov
dec
movl
xchg
jb
dec
imul
add
push
pop
jns
ficoms
mov
add
int3
jne
clc
mov
into
inc
data16
fwait
inc
leave
bound
pop
sub
sub
jl
stos
sbb
mov
je
sub
clc
cmp
std
ss
fs
mov
mov
imul
xor
cwtl
loop
adc
popf
push
sbb
bnd
test
sub
sahf
enter
mov
lods
repnz
sub
sarl
cwtl
es
sbb
mov
mov
lods
or
push
aam
outsl
mov
mov
rolb
ja
mov
fs
je
add
shr
insb
ret
xchg
mov
xor
in
mov
push
popa
push
cmpsb
xor
sarl
scas
outsb
mov
ljmp
roll
pop
int3
mov
xor
jmp
jae
xlat
xor
outsl
iret
int
mov
add
inc
mov
jnp
ficoms
ss
test
and
fstpl
sbb
add
daa
xlat
fidivl
pop
jmp
xor
repz
cmc
imul
shr
jg
aaa
mov
adc
out
jno
inc
sbb
xchg
dec
orb
fisubrl
mov
setne
cltd
xchg
lods
xor
sti
in
es
scas
shlb
enter
adc
mov
inc
mov
cmp
stos
jbe
test
cld
dec
dec
xor
xor
cmc
xchg
mov
nop
mov
cmp
call
and
xchg
rcll
mov
adc
sbb
push
scas
iret
xor
sub
scas
mov
leave
push
int
inc
xchg
fsub
sub
or
insb
daa
adc
add
aas
or
mov
jb
mov
xor
xor
cli
mov
or
sarl
push
lcall
adc
xor
mov
dec
stc
lds
inc
jns
xchg
add
pop
decl
mov
icebp
ret
imul
push
mov
idivb
sbb
adc
add
loope
inc
lds
repnz
mov
movsl
jle
insl
stc
stc
enter
out
aas
pushf
dec
fbstp
lahf
jp
pushf
add
in
lock
lods
pop
pop
outsb
add
popa
mov
cmpsb
ret
adc
pop
sub
ret
mov
lret
xchg
mov
dec
fists
pop
inc
sbb
dec
in
sub
testb
test
ljmp
jp
ds
mov
cmc
es
shll
cmp
cmp
dec
push
out
lds
clc
xchg
mov
dec
push
bound
pop
mov
cwtl
and
xor
mov
loope
adc
pop
mov
inc
test
test
fimuls
push
outsb
repz
dec
push
ss
gs
outsl
jno
lcall
lret
ss
in
dec
mov
jge
outsl
pop
mov
fistpll
xchg
adc
fwait
sbb
aas
fs
dec
mov
dec
rorb
fmulp
add
test
and
test
pusha
and
pop
xchg
shl
mov
inc
int3
in
jecxz
jp
xlat
sbb
push
push
and
push
popl
dec
sbb
cmp
xchg
addr16
or
mov
ja
mov
xchg
sahf
sub
insb
stc
nop
xchg
jbe
cmc
das
shrb
int
lock
in
stos
int3
out
pushw
outsb
xor
aas
data16
and
loopw,pt
aas
push
cli
cmc
dec
or
out
cs
push
loope
leave
int
mov
mov
mov
ds
dec
xchg
aas
mov
gs
jnp
mulb
dec
sub
cmc
rclb
inc
int
xor
pop
cmp
in
popf
test
fs
icebp
jmp
in
cmp
sbb
jnp
xor
int
dec
cld
lock
imul
sub
pop
addl
fdivs
syscall
cmc
lods
fs
test
mov
enter
sbb
pop
mov
jb
fsub
orw
xor
ja
pop
insl
inc
loopne
fnstcw
pushl
pop
ret
mov
pop
inc
cmpsb
xchg
cmp
std
inc
arpl
xchg
lock
mov
ficoms
insb
jg
pop
fiaddl
xchg
outsl
xlat
dec
adc
xchg
scas
cmp
sub
movb
addr16
aaa
int
pop
cmp
bound
mov
int3
and
mov
emms
sahf
mov
in
add
fcmovu
and
mov
push
adc
mov
push
sbb
mov
jb
pop
mov
in
and
faddl
cld
dec
aas
sub
xor
loopne
ss
and
insb
mov
es
jno
inc
clc
mov
cmp
es
ret
in
mov
pop
pop
cmp
sbb
test
fcmovbe
push
push
popf
shl
inc
sub
mov
jl
pop
int
out
insl
shlb
xchg
into
rol
dec
and
mov
ss
aaa
xor
dec
cmpl
pop
inc
push
insl
jmp
dec
test
xchg
adc
cld
js
jmp
jbe
mov
fldt
mov
fiadds
inc
in
jg
ja,pt
pop
push
push
test
lock
mov
mov
jmp
cmp
aad
xchg
inc
push
dec
dec
movsb
pop
pop
xchg
adcl
aad
outsl
dec
stos
addl
inc
push
inc
adc
std
mov
div
pop
jns
inc
fsin
sbb
mov
push
push
inc
popl
mov
scas
sub
in
mov
fdivl
aaa
fucomip
inc
in
pushf
mov
inc
mov
std
mov
mov
sbb
push
xor
add
cld
cmp
data16
inc
cwtl
pop
pop
filds
dec
cltd
les
lret
or
xor
and
in
imul
stos
add
push
jb
cmc
in
cmp
clc
jno
popa
pop
bswap
xor
cmpsl
pusha
movsb
inc
mov
add
rclb
fisttps
add
push
jle
mov
jno
lcall
add
sbb
push
out
sub
int3
sub
jmp
movsb
test
cli
pushf
icebp
int
xchg
xchg
cmpsl
rcrb
fisttpll
sahf
or
hlt
push
lock
in
cli
sub
dec
mov
test
ds
icebp
imul
push
dec
jl
and
pop
push
mov
clc
mov
sarl
retw
nop
adc
mov
adc
push
xlat
pop
jb
cli
push
mov
out
shlb
lds
int3
push
dec
xchg
mov
imul
lock
loopne
daa
imull
cmpsl
pop
add
cs
insb
dec
out
jecxz
lahf
cmp
fmull
jb
inc
inc
filds
xor
and
ja
jno
subb
push
jb
scas
rorl
rcrb
cs
xchg
mov
adc
pop
divb
mov
inc
jno
in
into
dec
imull
fucomi
sbb
xchg
push
xor
xchg
xor
in
inc
add
out
mov
inc
scas
add
scas
xor
adc
pop
shrb
in
inc
add
adc
xchg
orb
or
movsb
int
pop
enter
imul
xchg
inc
push
int3
test
pop
lcall
das
add
jp
fdivs
push
out
aaa
jbe
in
inc
inc
lret
mov
jae
lret
pop
icebp
cmp
repz
inc
sub
add
rclb
mov
or
inc
jmp
jge
xor
sub
out
out
lcall
mov
cltd
test
pop
loope
loop
insb
dec
hlt
jbe
mov
dec
imul
lods
mov
mov
sbb
jge
pop
insb
insb
dec
jne
fcom
push
pop
les
xchg
jns
push
xchg
into
push
mov
add
out
sub
out
pop
inc
mov
or
add
cld
imul
and
fsubp
scas
jp
out
fsubs
cwtl
cmp
fcmovnb
out
xor
cmp
fninit
test
pusha
push
inc
sub
ret
lret
call
inc
lock
inc
jo
inc
dec
push
shl
int3
iret
mov
mov
rep
test
out
push
int
leave
add
mov
mov
push
jle
arpl
inc
test
xor
mov
add
add
or
mov
icebp
movsb
fstpl
add
ds
in
push
mov
mov
loope
xchg
int
imull
xchg
push
data16
add
jnp
sub
popf
mov
stos
int
jae
xor
test
mov
sub
mov
nop
mov
add
mov
cmc
mov
and
pop
inc
add
push
cmp
xorl
jp
lods
iret
xorb
frstor
jg
fsqrt
mov
mov
mov
nop
mov
lret
push
mov
jle
and
mov
enter
mov
into
jb
and
imul
or
xorl
adc
lahf
lret
cmp
shrb
fistl
fadd
dec
mov
filds
sub
mov
fnstsw
or
push
fldl
xchg
mov
mov
test
mov
mov
mov
pop
jb
cmc
nop
inc
xchg
sub
enter
mov
call
jle
xchg
inc
andl
cmp
xor
sbb
push
mov
mov
test
jecxz
mov
dec
loope
dec
jl
mov
mov
push
imulb
aad
pop
xchg
scas
lds
dec
enter
aas
jge
or
dec
pusha
addr16
sbb
jb
outsl
dec
xor
xchg
xlat
add
out
fcompl
lret
cmp
xchg
test
orl
out
imul
jl
insb
xor
lods
jl
lret
mov
jo
rolb
cltd
cvtps2pi
xor
bndldx
add
add
rol
sti
or
cmp
push
dec
aaa
mov
jp
sbb
xlat
lret
mov
mov
stc
cli
push
jne
push
test
mov
shlb
xchg
pushf
clc
jg
cmp
dec
ja
sti
mov
jns
sbb
xchg
xchg
mov
or
mov
jae
jmp
fisubrs
test
fcmove
cwtl
jp
pop
cmp
xchg
repz
or
pusha
out
dec
sbb
stos
and
shll
ret
dec
addr16
push
subb
pop
xchg
xchg
out
push
bound
pop
lcall
sub
push
out
out
sub
cmp
addr16
outsl
ret
mov
test
and
or
shrb
les
push
add
mov
fwait
repnz
in
pop
dec
dec
mov
mov
lods
inc
pop
push
fwait
push
lret
roll
ret
call
mov
pop
pop
lock
add
in
sbb
lods
lret
jns
aaa
les
test
imul
mov
insl
adc
xlat
and
jae
mov
dec
jae
xchg
je
inc
xchg
sbb
mov
mov
cwtl
orl
test
inc
cmp
sub
dec
xor
hlt
sbb
add
test
nop
or
iret
out
sbb
and
mov
push
data16
or
imul
test
es
sub
inc
gs
cmp
jne
inc
push
mov
mov
cmp
mov
mov
fmuls
cli
lahf
jmp
and
mov
or
ret
add
sbb
inc
test
xchg
outsl
in
lret
call
lahf
and
xchg
lods
in
sti
imul
iret
sbb
mov
mov
xchg
push
pop
add
adc
xchg
lds
lds
dec
loopne
into
mov
mov
jne
xchg
xor
scas
adc
jns
adc
cmp
jp
pop
cmp
mov
movsb
add
scas
std
fnstcw
ret
cmpsl
mov
scas
mov
push
aas
cmp
in
and
addl
inc
addr16
test
lock
mov
adc
mov
ret
lods
hlt
cmpsb
and
dec
lea
inc
and
adc
movsl
xchg
movsb
adc
fs
jecxz
out
les
aas
adc
loopne
mov
mov
call
sub
sub
negb
xor
jecxz
mov
subb
hlt
cmp
ud1
inc
hlt
in
jbe
pop
mov
call
xchg
or
or
test
adc
lea
cld
adcb
out
mov
dec
add
arpl
fsts
daa
jl
or
call
cmp
or
sub
cmp
mov
jns
fcmovbe
pop
push
stos
sbb
in
or
mov
pop
dec
rclb
into
inc
add
ret
add
sbb
xchg
mov
test
mov
or
add
pop
and
popa
adc
sti
insl
dec
aam
je
imull
mov
imul
fsubs
aaa
lahf
outsl
std
out
dec
mov
add
pop
cmpsl
xchg
sub
pop
frstpm(287
out
mov
hlt
push
adc
mov
lcall
je
mov
repnz
out
dec
mov
or
in
mov
data16
test
cmp
data16
xchg
popf
dec
inc
lret
jno
or
imul
mov
jno
xlat
sbb
add
sti
jge
mov
test
inc
das
push
imul
cmpsb
aaa
and
add
mov
lcall
loopne
stos
xor
pop
repnz
dec
ret
mov
loopne
ljmp
sub
cmpb
std
sub
mov
or
cwtl
std
sbb
mov
es
or
fnstcw
lock
das
out
dec
add
lret
pop
sub
loope
repnz
cs
adc
mov
mov
faddl
push
clc
mov
fnsave
pop
es
or
aad
repz
or
or
ljmp
push
fldenv
movsb
frstor
fsubl
push
jmp
xor
mov
fldl
xor
test
sbb
cmp
stc
into
cmp
jg
mov
int
or
adc
cmpsb
js
shr
int3
movsl
mov
add
or
sub
add
mov
cmp
imull
lret
leave
stos
rclb
cwtl
cs
shlb
mov
xchg
mov
jno
mov
incl
add
lahf
call
jnp
push
pop
and
push
out
inc
imul
aas
add
mov
js
sbb
sbb
sub
movsb
sahf
stos
scas
enter
cmp
mov
std
sti
or
inc
mov
mov
gs
outsl
loopne
push
and
push
sbb
or
out
les
sti
xor
out
push
je
jae
adc
dec
pop
jo
test
sub
insb
or
fwait
in
sti
stos
dec
iret
hlt
sbb
mov
cwtl
and
pop
inc
mov
cmovg
adc
out
dec
adc
lcall
xchg
insb
sbb
imul
push
jecxz
sub
xchg
cs
dec
loop
sbb
jl
inc
sbb
fs
sbb
scas
fildll
aam
add
int
cmpsl
repz
negb
push
in
mov
ret
and
sub
pop
fisubrs
and
xchg
dec
push
mov
bound
cmc
pop
enter
into
add
dec
adc
jmp
call
into
clc
jnp
nop
repnz
push
movsl
icebp
je
mov
push
cmp
in
mov
wrmsr
outsl
mov
out
xor
push
sbb
dec
adc
or
negl
stos
dec
mov
mov
push
push
jb
xchg
arpl
mov
mov
mov
xor
mov
inc
inc
lock
sbb
fs
inc
pop
push
and
cmc
or
mov
or
insb
or
test
mov
imul
cmc
push
jb
clc
sub
and
jns
cmp
aas
xor
mov
sar
leave
jmp
jns
mov
xchg
sbb
lds
sti
fcmove
fs
xchg
lahf
scas
outsl
cld
in
loop
das
fwait
dec
sti
leave
je
out
shll
jecxz
fiadds
xor
sub
addb
pop
mov
pop
jno
add
std
dec
dec
lahf
xlat
xor
sbb
sar
pushf
rorb
outsb
inc
pop
dec
cmp
aad
adc
fisubrs
lock
test
test
pop
icebp
ja
mov
out
outsb
shrb
sub
inc
loope
and
inc
nop
mov
sub
xor
adc
pop
cmpsl
xor
mov
int3
mov
stc
inc
mov
cmp
inc
in
testw
out
mov
add
dec
lfs
or
jl
add
push
addr16
mov
pop
mov
mov
dec
jno
cmp
mov
push
iret
jge
lret
aam
test
sahf
cmc
and
ror
lret
mov
mov
aam
incl
pop
icebp
pop
pop
std
push
cld
rcll
pop
push
and
je
cli
in
popf
mov
ja
je
les
sarb
inc
mov
mov
gs
insb
inc
cmp
aad
mov
adc
pop
pop
add
dec
mov
jb
sub
xor
or
mov
or
mov
sbb
rol
xlat
and
bound
imul
or
cmpsb
test
hlt
add
sbb
and
lds
cmc
enter
aad
mov
test
jg
arpl
dec
mov
stos
pushf
daa
push
jne
mov
adc
aad
andb
mov
imul
popf
imul
push
test
out
add
xchg
leave
sbb
lret
stc
rcll
add
fstl
sub
dec
hlt
push
rcl
movsb
jmp
sub
mov
das
cwtl
outsl
test
scas
int3
in
push
or
imul
adc
popa
into
nop
out
sbb
aam
xchg
aaa
cs
sub
adc
das
repz
pop
sbb
adc
push
and
adc
stos
jae
pusha
repnz
or
push
cs
pop
outsb
inc
fiaddl
push
mov
dec
push
out
stos
mov
mov
jmp
out
add
inc
cltd
int3
out
lods
ror
xchg
mov
insb
jg
repz
test
mov
xor
mov
ja
or
push
aaa
loop
cltd
mov
pusha
sub
cmpl
pushf
ds
aas
movsl
push
ljmp
mov
int3
into
shrl
mov
cmpsl
push
lea
mov
xor
jl
sbb
iret
outsl
mov
pushf
outsb
adc
dec
cwtl
inc
pop
push
fsubl
int3
mov
fidivl
dec
in
sbb
adc
hlt
stos
mov
ja
hlt
inc
fwait
mov
repz
fisttps
fidivl
in
or
adc
jle
jg
inc
loopne
or
mov
jecxz
push
inc
and
lahf
lret
lret
pusha
cmp
mov
push
loop
ss
dec
inc
adc
xlat
sub
push
imul
mov
ret
sub
add
lret
movb
scas
loopne
mov
xchg
popf
push
test
imul
mov
stc
jecxz
mov
out
pop
dec
daa
push
mov
cwtl
lret
inc
shll
in
xor
loopne
add
fisubrs
cmp
cwtl
shll
mov
mov
mov
adc
add
fildl
dec
dec
pop
xchg
cmp
jbe
sbb
mov
dec
es
and
in
xchg
dec
xlat
popf
and
and
inc
das
dec
aas
cmp
xchg
xor
push
and
mov
in
lea
mov
add
sub
lret
inc
jb
pop
insb
jmp
pop
dec
cmpsl
ds
mov
clc
lea
ds
outsl
sbbl
into
in
int3
loopne
push
dec
and
sub
sarb
push
ret
dec
lahf
inc
repz
mov
stos
cmp
lret
push
add
jmp
mov
cs
mov
hlt
das
sbb
mov
mov
or
and
loope
cmp
dec
mov
jne
lods
mov
cmp
fs
lods
push
repnz
cwtl
cmp
cmp
cld
stos
imul
push
mov
pop
dec
rcrl
cvtpi2ps
jle
and
in
and
insb
sbbl
inc
inc
sub
mov
into
sub
clc
loop
mov
sbb
mov
cmp
shlb
mov
sub
std
lea
popf
lret
jmp
divl
cmp
into
mov
je
mov
fs
add
or
je
fcompl
push
cmp
pop
dec
mov
aam
jns
int3
push
sub
and
pop
dec
xchg
adc
outsl
mov
jge
dec
movsb
and
dec
js
stc
jmp
mov
mov
pop
and
addr16
clc
mov
sbb
sbb
xchg
dec
repz
fdivrl
mov
call
adc
mov
arpl
adc
addr16
xor
fldenv
stos
int
std
cld
aam
sub
pusha
add
lret
mov
or
loope
nop
or
imul
sbbl
inc
arpl
test
mov
scas
shrl
mov
lcall
pop
mov
repz
jns
and
jle
stc
enter
cld
out
cli
dec
js
pop
fldl
enter
repnz
mov
xchg
daa
mov
pop
cmpsl
add
dec
or
or
pusha
sahf
sub
adc
fldt
les
out
sbb
fwait
xlat
xor
cmc
jbe
dec
call
add
xor
jmp
mov
xchg
pop
xchg
sub
daa
outsb
popa
lock
push
repnz
mov
xchg
mov
cmp
stc
repz
sub
scas
pop
fidivrl
dec
inc
xchg
addb
aam
xchg
sub
dec
pusha
xor
mov
xchg
jmp
push
pop
or
mov
loop
je
and
cmp
std
lret
mov
pop
mov
push
cld
dec
pop
movsl
cli
clc
mov
rolb
ret
mov
leave
mov
jo
pop
lods
and
dec
push
hlt
sub
xchg
add
inc
xchg
sbbl
push
push
cltd
div
inc
les
and
mov
dec
outsb
or
stos
pop
xor
scas
jno
enter
push
add
clc
add
add
xchg
cli
mov
push
jg
in
pop
test
ljmp
mov
pop
ja
xchg
jle
std
pop
mov
xchg
mov
mov
in
pop
inc
loopne
jo
xchg
jnp
test
mov
clc
lret
inc
mov
or
cmp
std
inc
scas
add
or
push
test
ja
leave
in
cmp
fistl
and
jne
jnp
out
and
mov
mov
ja
pop
mov
outsb
mov
jmp
jp
ficomps
push
call
push
arpl
mov
arpl
mov
lods
mov
xchg
insl
popa
mov
sub
push
sub
cmc
pop
pusha
test
stc
scas
rol
push
lds
cmp
popw
inc
adc
iret
jne
mov
dec
mov
es
adc
inc
mov
pop
mov
dec
not
sbb
pop
adc
mov
lds
inc
aas
and
outsb
mov
mov
sub
loope
mov
fistpll
cltd
adcb
cltd
and
lahf
add
stos
ret
sbb
es
xor
cs
jns
arpl
xor
dec
aam
divb
out
aas
push
xchg
lods
and
das
nop
std
or
xchg
mov
lea
shrb
add
call
daa
add
je
cmp
xchg
or
int3
jg
fsubrl
fwait
xchg
xchg
cmp
adc
sub
aas
hlt
leave
dec
jle
out
xchg
xlat
jp
xchg
sar
sahf
jns
data16
andb
dec
dec
icebp
lret
imul
mov
cli
xor
or
divb
inc
fcmovb
mov
lods
jnp
das
fs
lock
pushf
pushf
dec
mov
mov
cs
mov
push
cmp
andl
fxch
lret
stos
scas
push
daa
add
add
out
cltd
pop
call
in
or
jmp
mov
push
sub
cmc
fistl
mov
sub
mov
pop
jg
andb
ds
ja,pn
jmp
cmp
in
jns
push
push
mov
fs
cmp
push
jle
and
fldl
sub
inc
cmp
cs
cmpsb
mov
aad
test
xor
jecxz
ret
pop
and
add
xchg
mov
sub
dec
xchg
and
xor
jno
rclb
sub
mov
mov
pop
stos
xchg
arpl
mov
outsb
insl
fwait
adc
xor
ret
add
cmp
add
push
bound
mov
data16
add
outsb
push
xor
repz
mov
aas
fdivs
sbb
push
push
addr16
pop
adc
cmpsb
and
fs
jns
filds
xchg
mov
addl
sbb
adc
and
cld
mov
test
pop
stos
xchg
lret
nop
mov
fwait
cld
xchg
dec
je
pop
inc
cs
push
mov
aam
test
dec
cmp
je
inc
ss
inc
mov
pop
out
mov
pop
fisubl
mov
mov
push
lods
addr16
push
lahf
cs
jns
scas
adc
and
jbe
adc
jle
cmp
push
in
call
inc
mov
xchg
int
or
mov
sub
add
aas
push
sub
sahf
adc
sbb
cmp
inc
in
stos
mov
addl
cld
adc
jmp
sbb
out
pop
das
sub
popa
push
jb
icebp
xor
ja
fldcw
rolb
and
int
lcall
mov
sub
repnz
mov
fnstenv
sbb
jb
pop
cmp
and
sub
stc
mov
loopne
mov
out
xchg
mov
repz
mov
loop
jnp
mov
push
fst
sbb
xlat
addr16
les
inc
jb
ret
scas
xchg
xor
negb
xchg
pop
and
cli
shrb
mov
add
mov
inc
in
out
loope
xchg
add
ljmp
jle
mov
pop
mov
or
jnp
sub
xchg
mov
and
mov
xchg
sbb
testl
sub
sbb
lea
shrl
mov
cmp
jno
dec
dec
pop
mov
leave
call
cmp
dec
xor
cmp
enter
pop
add
mov
dec
mov
shl
rcrl
or
imul
shrl
fs
mov
bt
sbb
xor
loopne
sahf
and
lds
je
aam
and
iret
sbb
cltd
sar
dec
dec
or
mov
fs
push
xchg
outsl
lret
pop
movsb
push
dec
in
pop
mov
mov
flds
es
leave
test
js
stc
insl
or
jae
repnz
jp
fwait
sarb
jecxz
mov
push
shl
repz
dec
xlat
sbbl
jecxz
mov
jmp
outsl
int3
sbb
xchg
daa
sahf
xor
inc
mov
fdivs
or
pop
mov
fadd
icebp
cmp
in
repz
jecxz
sub
xchg
in
xchg
hlt
test
mov
add
jne
jnp
in
scas
enter
les
mov
or
stc
sub
cmc
jp
pop
xlat
stos
sbb
jmp
xchg
stos
ret
xchg
sub
and
cld
ret
and
and
adc
std
push
and
add
sub
ljmp
sub
jo
jae
sbb
xor
call
enter
pop
pop
adc
cmpsl
call
fldl
jg
push
cmpsb
enter
push
leave
roll
push
mov
in
ret
nop
aas
dec
fdivrs
stos
jns
xor
cmp
jb
in
xchg
and
dec
adc
dec
lods
xor
pushf
cltd
inc
adc
cmp
cmpsb
lret
sub
xchg
sti
inc
lret
xor
mov
ja
adcb
push
mov
nop
stos
push
and
mov
push
jae
mov
lods
push
cs
lcall
scas
jg
xchg
shl
cs
test
mov
lahf
add
inc
repz
scas
lahf
mov
add
jno
idiv
loop
outsb
cmp
mov
inc
adc
filds
in
loop
ret
jmp
mov
mov
addb
mov
jle
sbb
xchg
test
mov
jne
inc
lods
and
or
lret
adc
inc
pop
and
ja
cmc
lret
aam
adc
cwtl
loop
inc
jmp
stos
push
or
pop
pop
pop
and
mov
lds
inc
xor
sbb
bnd
scas
jl
jp
xchg
outsb
dec
das
xchg
jmp
daa
outsl
scas
lods
daa
lahf
stc
adc
xor
popf
inc
pop
lcall
stos
lods
pop
insb
xor
and
ljmp
jp
adc
adc
or
out
insb
in
jecxz
push
mov
sahf
popf
lret
scas
lret
cmp
nop
fcomip
pushf
add
ret
lock
aam
bound
rorl
add
int3
divb
imul
pop
fidivrs
lahf
jl
int3
or
mov
ret
cmp
icebp
aad
les
dec
gs
adc
cld
fsubrs
push
mov
xchg
pop
lods
push
in
inc
and
in
repnz
jns
xor
or
and
inc
sbb
pop
lock
mov
mov
cli
xor
inc
aaa
sub
cmp
dec
lock
push
mov
mov
mov
push
fistpl
cmp
sarl
lods
out
push
mov
and
ljmp
into
testb
jbe
ret
sub
xchg
sbb
xchg
jp
pop
push
adc
sub
jne
xchg
jmp
push
flds
fwait
cmp
dec
divl
adc
and
rcll
mov
xor
push
clc
dec
insb
mov
sbb
xchg
pop
pop
fdivp
aad
sub
adc
push
lret
cmp
dec
les
mov
int
and
pop
sub
dec
pop
fs
cmp
push
daa
mov
adcl
movsl
and
pop
mov
sbb
out
pushl
popa
movsl
mov
pop
xorl
jnp
aas
std
push
das
pop
rclb
and
ret
mov
xchg
or
or
ret
call
lea
sbb
xor
iret
mov
xchg
imulb
xchg
pop
cmp
out
push
mov
jb
xchg
xchg
sub
popa
cmp
mov
pop
xor
enter
sbb
and
jge
fucom
or
jmp
jge
out
pop
shrb
pop
fisttps
addps
aas
xor
pop
jno
push
and
push
xor
jp
push
inc
ss
lods
idivl
adc
lods
sahf
pop
adc
sarl
icebp
jne
and
xor
lock
mov
fucomip
or
es
in
push
and
mov
push
push
cmc
xchg
sub
fwait
lret
push
ljmp
clc
cmc
mov
mov
and
bound
jp
add
jnp
mov
ja
mov
rep
lock
movsb
popf
lret
cmc
out
pop
test
test
bound
sub
cltd
cli
mov
call
pushl
add
adc
pop
repnz
lds
scas
xor
pop
ret
or
mov
ret
decb
aaa
jno
repz
jl
lea
add
pop
xchg
out
lods
cmp
stos
lds
cmp
xor
cltd
jmp
jge
adc
dec
or
pushl
sbb
mov
aad
push
xchg
push
out
popa
mov
mov
add
pusha
mov
insb
push
xchg
cmp
xor
shrb
out
or
out
outsl
adc
push
inc
push
out
cmp
clc
pop
leave
les
xchg
mov
push
xchg
push
lods
outsl
rorl
out
stos
pop
dec
adc
jle
sub
in
addr16
and
cmp
je
mov
or
lds
push
jae
or
jp
push
out
add
or
leave
lds
shrl
dec
in
out
mov
addr16
xor
repz
std
call
add
into
pushf
pop
inc
mov
mov
jg
push
insl
imul
push
shl
cmc
in
sbb
in
mov
insb
icebp
jge
repz
jno
sbb
leave
sub
iret
jne
rcrl
mov
gs
dec
mov
test
aas
mov
scas
sub
lds
popf
and
jge
dec
pusha
hlt
sub
add
jnp
std
adc
xor
mov
inc
aam
push
add
xchg
insl
add
je
inc
rclb
lods
and
iret
rcl
sub
cmpsl
fisttpl
packssdw
xchg
mov
test
arpl
fcompl
decl
lcall
fnsave
push
mov
clc
cmp
aam
adc
add
cmp
push
shl
sub
arpl
and
cmp
lcall
fwait
lcall
sti
push
and
sti
sti
add
into
jp
xchg
rol
cwtl
cmpb
lea
arpl
divb
xchg
push
add
xchg
and
into
cmp
aas
aam
mov
pop
cli
jo
aaa
ret
xor
and
lds
aam
sbb
and
mov
fwait
das
ds
add
pop
loop
mov
sarb
incl
sub
jp
out
cmp
int3
mov
adc
xorb
adc
push
and
inc
in
decl
adc
movsl
sahf
dec
adc
test
ljmp
mov
cmpsb
fstps
sbb
push
xchg
jl
popa
movsl
pop
aad
iret
push
stos
or
sbb
mov
inc
gs
mov
int
adc
sub
ficoml
js
pop
roll
inc
add
adc
in
adc
mov
aam
fwait
jecxz
jmp
xor
bound
ret
pop
leave
xchg
mov
or
jmp
ret
inc
jg
sbb
xchg
cli
or
dec
jecxz
aad
add
cs
std
jp
lcall
int
imul
lret
movsb
insb
fistpll
sbb
cmp
mov
xchg
adc
mov
sub
jae
xor
repnz
xor
mov
lret
mov
push
push
out
popa
cmpsl
cld
aam
jle
ret
fsubs
ljmp
mov
xchg
dec
mov
add
call
out
sub
inc
lret
push
inc
push
mov
xor
jbe
or
pop
out
mov
xor
bnd
or
jbe
pop
xor
hlt
adcb
jne
scas
xor
xchg
mov
inc
sub
faddl
sbb
wbinvd
fiadds
and
pop
inc
push
sub
xchg
imul
fistps
push
arpl
jbe
push
xchg
bound
arpl
jge
shrl
sbb
mov
test
sbb
xchg
inc
pop
bound
and
or
lahf
sti
xchg
fadd
fsubl
adc
xchg
popf
adc
test
adc
lea
adc
xchg
insb
imul
cmp
loope
push
in
addr16
aas
fdivr
and
ds
jnp
inc
mov
cmp
xor
test
mov
clc
leave
mov
int3
xor
test
inc
inc
sarb
jb
frstor
xchg
in
mov
andl
dec
mov
addr16
popl
clc
jnp
dec
xor
stc
adc
add
punpcklwd
dec
jns
pop
repnz
mov
sbb
add
idivb
dec
ret
test
sbb
fdivl
in
jnp
repz
cmc
stos
mov
testb
lret
loop
dec
jge
adc
ds
pop
sar
mov
dec
lahf
mulb
outsl
or
jle
lret
xchg
sub
and
sbb
jnp
and
call
push
in
push
fsubrs
cmp
sbb
mov
xchg
push
mov
adc
inc
loop
pop
cmpsb
in
shlb
leave
pushf
data16
mov
cmp
cmp
mov
das
pop
fs
jge
int
inc
xchg
xor
test
jecxz
mov
rcrl
mov
add
xchg
ret
sbb
mov
es
or
movsb
jp
shl
push
inc
adc
jmp
icebp
in
inc
loop
mov
sbb
mov
mov
xchg
imul
mov
xchg
stos
cmp
gs
ret
dec
aad
ja
add
stos
iret
sub
scas
add
inc
adc
aas
je
sti
jbe
mov
mov
addr16
cmpb
inc
push
sti
pop
cli
fbstp
mov
mov
xchg
push
inc
pop
or
enter
cli
jne
aam
lods
std
lea
test
loope
sahf
mov
xchg
ljmp
fstp
dec
push
push
out
or
mov
jle
inc
jg
popa
mov
push
pop
out
sti
sti
cs
movsl
aas
ja
mov
stos
xchg
jbe
or
sub
sbb
js
int3
xchg
jo
fwait
inc
push
in
scas
outsb
inc
and
imul
pop
pop
imul
push
stos
leave
andb
loopne
ss
lock
mov
cmp
cld
aas
int
cmpsb
xchg
test
pop
shlb
push
rolb
cmpsb
daa
mov
ss
aam
sub
jo
ja
push
jecxz
loope
inc
adc
mov
and
testb
outsb
loop
test
xchg
mov
push
and
fistpll
add
xchg
add
push
leave
or
jo
fwait
inc
pop
jnp
stos
filds
loope
mov
mov
clc
dec
or
loope
mov
rcll
adc
mov
jb
je
pop
test
lret
scas
lods
ja
dec
leave
out
mov
push
pop
sahf
inc
or
addr16
xchg
dec
shr
daa
ja
pop
pop
sbb
int
jl
mov
test
jae
mov
fdivl
sbbb
adc
call
and
mov
gs
xlat
shlb
fmuls
cmpl
movsl
imul
xorl
push
mov
push
leave
or
aas
dec
xor
fsubrl
out
fnstcw
dec
cmp
dec
mov
pusha
jns
jecxz
lret
testl
orb
mov
mov
inc
xor
int
mov
lahf
mov
mov
lods
test
xor
fdivrs
int3
cld
sub
mov
xchg
ud1
jle
xor
cli
inc
test
mov
xor
mov
lock
ret
shl
paddb
pusha
pushf
mov
cs
lods
shll
cmp
mov
ja
fstpt
cld
jnp
fst
in
mov
cmpsl
mov
sub
mov
insb
xchg
xchg
add
mov
call
outsl
or
js
cmp
sbb
cld
cmpsl
out
shlb
xor
addl
sub
ljmp
seta
sbb
ljmp
sub
sub
xor
sub
push
gs
clc
icebp
xor
dec
aam
push
call
and
mov
aam
imul
pop
enter
aam
lock
negb
mov
add
aam
xchg
pop
dec
pop
or
hlt
and
and
in
out
scas
sub
pop
pusha
mov
in
aas
rcl
cli
inc
test
sub
cmc
enter
out
or
dec
fsqrt
lret
push
dec
jmp
enter
shr
jns
adc
loopne
jne
adc
xchg
push
jbe
xchg
leave
cmp
cld
popa
cld
inc
xorl
adc
dec
std
inc
fwait
xchg
xor
xchg
xchg
xchg
cmp
mov
jle
pusha
ret
jecxz
dec
jae
test
fstpl
mov
pop
clc
mov
cli
dec
mov
out
dec
insl
cmp
movsl
test
addr16
out
pop
mov
outsl
cld
jbe
and
pop
pop
xchg
dec
jecxz
pop
mov
sub
test
enter
sub
pop
cmp
or
mov
mov
outsb
testl
test
push
roll
sbb
push
dec
adc
fwait
push
repz
mov
and
jne
cwtl
les
or
xchg
aaa
insb
lods
in
daa
stos
xor
test
shll
mov
sbb
push
mov
sub
xor
sub
xrelease
ljmp
add
shr
call
popa
xchg
dec
cli
xchg
mov
outsl
out
out
sub
test
fdivl
dec
adc
cmp
lea
je
pusha
movsl
inc
test
cmp
xor
sub
push
outsl
xchg
push
jo
sub
inc
mov
fnstcw
es
jnp
insl
or
xchg
insb
mov
bound
dec
xchg
mov
in
fildll
and
sbb
xor
inc
mov
loop
iret
mov
mov
sub
xchg
aaa
xchg
add
insb
mov
pushl
mov
xchg
test
pop
je
inc
test
xchg
dec
call
lret
mov
dec
inc
insb
cmpsl
and
inc
call
push
mov
les
jb
jp
imul
sbb
cmc
mov
inc
add
pop
adc
outsl
jnp
pop
call
pop
inc
sub
cli
shrl
sbb
xor
cltd
jecxz
insb
mov
test
or
pop
ja
xor
fmuls
stos
loopew
sbb
dec
popa
aas
scas
and
mov
sub
fdiv
lahf
sti
and
insl
xor
dec
pop
lret
loopne
out
jb
pop
shrb
jno
fsubrl
dec
divb
popl
jb
div
jmp
leave
mov
mov
pop
aaa
lods
outsb
imul
push
pop
jp
sbb
xor
icebp
loopne
jle
ss
dec
in
mov
ds
mov
notl
pop
scas
in
jle
jnp
sbb
clc
jno
out
rcrb
jae
jmp
in
add
push
lods
xor
sbb
inc
inc
xor
fwait
pusha
repz
pop
mov
mov
lret
xchg
movb
andb
mov
mov
shll
test
int
movsb
mov
je
aad
inc
xlat
cmpsl
push
cmpl
mov
outsb
add
xchg
jecxz
nop
or
cmp
xchg
sbb
sub
xlat
cmp
cli
mov
jne
dec
add
daa
lods
mov
push
arpl
dec
mov
daa
fldenv
movsl
lcall
sti
clc
jbe
stc
adc
lret
outsb
stos
or
insl
int3
mov
sub
fstpt
test
lds
cmovb
aad
jg
add
cmpsl
mov
in
rcrl
jns
clc
bound
pop
jmp
mov
test
sub
lods
mov
out
jmp
stc
push
adc
mov
testb
mov
cmp
lcall
mov
fs
rol
xchg
lahf
xchg
ds
aas
inc
jbe
xchg
arpl
js
icebp
je
bound
call
dec
rcrb
std
xor
imul
and
and
adc
xchg
add
roll
and
jnp
fcmovu
addb
lods
les
stos
push
pop
jnp
jp
cmp
adc
xor
fcoms
jno
mov
cmp
cmp
popa
cmp
test
pop
cltd
stos
in
cmpsl
add
rcrb
loop
pop
sbb
je
out
fisttpll
and
cmp
jl
xchg
jns
jl
outsl
testl
shlb
outsl
fldenv
aam
push
fwait
dec
and
mov
ret
xor
out
fisttpl
cs
setg
mov
int3
clc
add
mov
shlb
xchg
dec
insb
xor
mov
pusha
mov
jp
insb
aaa
test
stc
xor
out
and
dec
dec
jg
add
sti
lret
fmul
xchg
jne
cmp
rcr
sub
scas
js
inc
dec
dec
insl
fstps
cmp
or
test
dec
arpl
ficompl
pop
and
outsl
fs
pop
mov
movups
incb
test
data16
movsl
push
orl
jl
lods
icebp
xchg
lcall
andb
icebp
ds
aad
pushl
xor
xor
repnz
inc
and
mov
mov
pushf
and
cmpsl
jmp
lds
push
cmp
push
push
lods
aad
loopne
faddl
xchg
sar
fldl
inc
push
jae
sub
mov
xchg
popa
mov
sub
mov
inc
mov
test
xor
xchg
mov
insl
sub
out
mov
pop
cmp
mov
ret
loop
cli
push
cmp
xchg
jl
aam
sbb
cmpsb
xchg
xor
jle
iret
inc
sahf
dec
ja
clc
jmp
lahf
jnp
fcmovnu
inc
cmc
repnz
or
jae
mov
jns
sub
addr16
sbb
mov
ds
dec
pop
sub
mov
sub
mov
pop
fisttpll
shlb
fstp
insl
xchg
inc
lock
bound
ret
cld
xchg
xor
loop
mov
out
in
or
das
mov
fwait
mov
cs
lods
insb
clc
movsl
mov
mov
push
xchg
leave
aam
mov
and
call
mov
insb
lahf
mov
jl
xor
adc
inc
lret
imul
adc
mov
fucomp
popf
sarb
cmp
pop
imul
cmpsb
jmp
into
insl
sub
outsb
sbb
jno
sbb
mov
mov
inc
mov
add
xchg
loop
jecxz
shl
fisttps
dec
adc
push
lahf
shrb
inc
mov
xchg
jne
inc
test
clc
mov
xor
enter
add
push
cmp
jle
xchg
sbbl
lahf
xchg
icebp
les
mov
jl,pt
mov
shr
xor
jo
inc
daa
push
js
inc
push
cmp
stc
or
pop
adc
jl
push
sub
mov
dec
ss
pop
lret
lret
ficoms
roll
push
inc
ret
push
push
fcompl
push
dec
popf
mov
nop
pop
pop
mov
shlb
pop
fbld
stos
xor
stos
cmc
jg
xor
jno
mov
dec
outsb
sub
push
inc
test
xchg
sbb
andl
sti
push
inc
test
lret
cs
dec
xorb
movsl
add
outsb
cmpsl
outsl
ret
mov
mov
out
push
gs
mov
push
hlt
ret
cmpsl
jns
pop
ja
dec
mov
add
cmp
cmpsl
jl
xlat
lock
js
roll
xor
push
mov
int3
mov
xchg
dec
jnp
adc
repnz
mov
mov
push
cmpl
inc
repnz
or
adc
or
rorb
bound
fldt
mov
mov
add
into
jl
jbe
jno
jne
jmp
adc
dec
jge
dec
xlat
leave
stc
scas
scas
push
dec
int3
je
mov
fsubrs
js
out
or
lret
icebp
ja
lock
out
push
lock
jge
xor
push
repnz
push
das
push
cld
pop
shr
and
idiv
xor
adc
jb
push
sbb
push
lret
fs
dec
mov
adc
ret
push
stos
pop
arpl
push
scas
pusha
icebp
inc
ja
gs
out
inc
and
push
sbb
mov
mov
mov
in
loop
mov
aas
rorb
repnz
xchg
dec
mov
cmpsl
fcompl
jnp
push
lret
cmp
call
cmp
dec
out
cld
inc
clc
push
and
lea
add
ja
je
pusha
pop
outsb
dec
push
or
push
mov
ret
xor
jmp
fwait
or
mov
fwait
sbb
js
lret
jae
jbe
leave
dec
cmp
fiadds
popf
cmpsb
push
mov
xor
call
jo
aas
xor
shll
orb
in
inc
jbe
push
mov
ss
adc
inc
scas
popa
pop
sahf
jmp
stos
stos
inc
fsubs
fidivrl
fwait
es
add
and
pusha
out
cmpsb
inc
mov
mov
jg
mov
pusha
outsl
mov
mov
push
xor
gs
xchg
std
aam
inc
daa
int3
inc
std
testb
icebp
movsl
jns
sbb
mov
in
rcrl
dec
or
rcll
rolb
dec
outsl
pop
stc
fcompl
in
cmc
xchg
sar
inc
out
push
xchg
mov
ret
pop
jno
and
lea
xor
imul
stc
js
ret
fwait
pop
loop
fnsetpm(287
jb
fisttps
xchg
fidivs
js
inc
and
leave
subb
int3
sarb
pop
mov
lea
mull
sbbl
add
mov
cmp
pop
push
cld
test
sahf
push
enter
outsb
sbb
arpl
jp
aad
mov
rolb
inc
fcmovnb
cmc
dec
scas
lock
aas
jb
jmp
inc
dec
out
insb
test
negb
adc
xchg
mov
daa
push
sub
push
cli
lahf
cmp
iret
or
rorl
pop
push
or
lods
adc
or
popf
leave
mov
lret
mov
imul
push
sarb
stos
sbb
add
and
cmp
not
adc
cmp
jle
add
xchg
add
cmp
mov
add
dec
cmp
in
flds
ret
push
pop
out
xor
xchg
arpl
les
pop
imul
cltd
pop
pop
or
mov
stc
xchg
fimuls
mov
jne
popf
and
ljmp
das
es
int3
sbb
cmpsl
jne
or
rcrl
js
outsl
andl
bound
cltd
js
adc
xor
inc
pop
addr16
sbb
mov
pusha
pop
push
sbb
add
shlb
xor
es
jae
add
sbb
mov
xchg
mov
lret
pop
loope
lods
push
js
xor
stos
cmp
xor
jp
mov
and
jne
lods
scas
pop
js
lods
ja
and
push
jne
mov
push
xchg
test
add
add
js
leave
iret
pop
icebp
mov
lahf
add
test
out
mov
and
push
ror
push
aas
outsb
nop
gs
jae
xchg
cmp
sbb
jmp
jp
dec
stc
push
outsb
xchg
sbb
xchg
adc
stos
xor
xchg
popl
mov
dec
fstpl
in
inc
or
movsb
leave
cmc
int3
idivb
loope
cltd
nop
jo
sbb
pop
movb
sub
test
pop
sub
add
lea
jbe
sti
ret
popf
or
xchg
bnd
cmp
adcb
push
scas
pop
sbb
xlat
xchg
add
iret
cld
mov
adc
jmp
push
mov
shll
mov
xor
popf
dec
dec
subl
insb
push
push
adc
in
ret
pop
jb
adc
pop
dec
mov
bound
mov
xor
mov
in
cmp
sbb
stc
es
mov
add
rorl
nop
jbe
inc
push
hlt
test
add
sarl
insl
dec
enter
mov
ljmp
cwtl
push
and
pusha
popa
push
loopne
jmp
mov
sbb
jecxz
rorl
mov
ret
sub
xor
sti
popa
mov
mov
mov
fdivl
insl
pusha
shll
cmp
lret
mov
xchg
sahf
mov
adc
sbb
push
push
in
lods
pop
cmp
cmp
adc
out
lret
shr
dec
shll
in
inc
rorl
les
std
inc
sahf
addl
into
mov
lret
xchg
out
rclb
arpl
imul
fstpl
xor
ds
outsb
push
out
jnp
inc
pusha
addr16
sti
divb
pop
leave
jecxz
stos
and
lahf
cmpsl
loope
cli
rorl
aad
inc
inc
test
in
mov
push
stos
xor
sti
pushf
sub
push
and
mov
add
mov
jg
mov
out
imul
jg
mov
popa
mov
rorl
insb
jg
inc
add
in
add
insl
inc
notb
adc
test
mov
aas
outsb
or
pop
outsl
pop
mov
mov
mov
sbb
notl
fdivs
test
push
add
rorb
ljmp
inc
inc
jl
aaa
dec
stc
sbb
and
pop
popf
pop
popf
pop
call
push
aaa
fstpt
cmp
lods
mov
mov
mov
lds
daa
and
pop
mov
mov
add
mov
push
shlb
cmc
xchg
cmp
pop
mov
inc
and
cwtl
jbe
imul
push
mov
stos
or
cli
stos
or
adc
or
push
dec
stos
sub
sub
inc
add
in
adc
cmp
fildll
lret
clc
add
out
push
lret
cmpsl
or
dec
xor
clc
pop
mov
pop
nop
mov
mov
clc
inc
insb
popf
sub
mov
xor
xor
repz
int3
mov
in
sub
dec
into
jp
add
dec
ret
fidivl
aaa
push
ss
xor
nop
clc
sbb
shlb
dec
lahf
and
xchg
ds
mov
push
sarl
imul
mov
out
pop
out
insl
mov
pop
pop
enter
aam
popf
inc
int3
popa
daa
mov
pop
xchg
lcall
push
inc
add
and
add
adc
jo
imul
inc
lahf
sub
in
outsb
scas
mov
js
leave
lods
test
and
jb
mov
xor
adc
ljmp
mov
adc
divl
aas
pop
ljmp
and
cld
pop
in
xchg
mov
nop
inc
adc
xchg
inc
outsl
in
push
sarb
dec
adc
shl
inc
cmp
pushf
shlb
mov
mov
out
int
aas
or
adc
pop
lods
mov
push
jp
into
fwait
mov
push
and
add
xchg
push
sbb
cltd
xor
lods
into
mov
and
mov
jae
daa
mov
push
shl
pop
sti
or
push
jmp
ss
cs
shll
not
mov
fwait
inc
xchg
dec
aaa
in
dec
or
pop
xlat
je
xlat
cltd
mov
scas
jp
gs
daa
mov
stc
rcr
jnp
pop
lcall
int
sahf
mov
ds
out
mov
cli
or
jnp
inc
clc
ss
ja
mov
popf
pop
out
bnd
mov
notb
or
inc
idivl
mov
shr
movl
adc
das
push
cmpsb
rcrb
mov
dec
add
rclb
mov
addr16
pop
push
dec
mov
clc
xchg
hlt
cmp
mov
jg
add
pop
and
mov
sbb
add
pop
stos
dec
rorl
pop
mov
ljmp
stos
repnz
sbb
nop
cmp
dec
inc
stos
mov
sub
sub
cmp
sbb
es
popf
or
jl
pop
lret
push
mov
insl
mov
test
push
icebp
movsl
arpl
cld
cmc
jne,pt
mov
xor
and
pop
and
mov
pop
inc
mov
xchg
popa
mov
lds
add
mov
gs
push
lcall
pusha
mov
cmp
jg
and
fldt
pop
jge
mov
inc
xor
popa
subl
stos
pop
mov
add
outsl
mov
out
push
mov
jbe
lcall
inc
bound
pop
inc
sbb
push
cltd
test
cmp
jns
lods
xchg
sahf
cmp
push
xor
adc
idiv
stos
sbb
jmp
push
shlb
lock
sub
stos
sbb
into
cmp
dec
test
or
pop
repz
jo
dec
aas
lcall
sub
mov
decl
mov
or
lock
adc
add
insl
pusha
xchg
movsl
testl
fucomip
and
lea
lret
lods
pushf
sub
mov
mov
push
sub
sub
add
lods
cmp
cmpsl
cmpsl
shll
pop
push
stos
cmpsb
repnz
mov
mov
sub
clc
mull
or
dec
mov
jb
inc
fiadds
movsl
adc
jno
in
scas
adcl
mov
ror
xchg
mov
nop
mov
addr16
mov
mov
mov
dec
cmp
cltd
mov
or
mov
lods
push
cld
mov
fisubl
lahf
or
jo
xor
in
cmpsb
out
cmp
loopne
sti
sub
leave
cli
addr16
mov
movsl
jg
scas
pop
add
and
gs
pop
xor
xor
fs
mov
xchg
lcall
and
or
and
movsb
outsl
cmp
mov
adc
jne
jo
jp
out
adc
loopne
aas
js
stc
and
gs
repz
adc
pop
push
xchg
popa
cmpsl
insl
lea
push
cld
fdiv
fisttps
cli
or
jecxz
movsb
lcall
hlt
aad
popa
push
mov
push
push
lock
stc
and
xchg
into
pop
sbb
orb
jne
bound
mov
pop
mov
jb
adc
loop
loop
xchg
push
jmp
ret
aas
sub
scas
xchg
pusha
jno
xor
inc
aaa
std
js
movsb
stc
or
test
repnz
mov
push
cmp
sub
mov
fadds
ffree
call
je
xchg
fs
rcl
xor
sub
bound
jmp
add
lret
testl
negb
repz
cmp
mov
rcrb
adc
cmp
icebp
inc
mov
loop
mov
adc
nop
add
add
pop
roll
in
data16
iret
adc
insl
int3
dec
mov
add
stos
sbb
lock
hlt
push
adc
or
clc
sub
mov
lret
call
xchg
sbb
fldenv
mov
outsl
mov
insl
inc
xchg
mov
sub
sub
data16
cmpb
jbe
or
add
popa
inc
stos
mov
stos
sbb
fsubr
ljmp
out
cmp
cmp
in
and
mov
jns
jg
pop
sbb
cmp
inc
popf
mov
js
sbb
cltd
sbb
and
jp,pn
cmp
jmp
lock
adc
add
sbb
mov
ror
fcoml
lret
enter
mov
ret
je
cmpsb
dec
in
nop
cs
xor
xor
jmp
or
pop
push
xor
dec
inc
out
jnp
push
test
and
std
mov
add
movsl
add
adc
or
fmull
cmp
push
lcall
repz
imul
movsl
xor
cmp
add
jnp
lods
push
jbe
sbb
sub
int
inc
inc
bound
stos
dec
jne
test
jge
mov
out
in
adc
dec
sbb
push
mov
fildll
cltd
cmp
xor
shrb
cmp
add
mov
loop
sub
mov
ret
inc
cmc
and
in
std
mov
xchg
jp
scas
stos
xchg
and
iret
cmpsb
into
aas
lahf
xor
mov
mov
ja
or
es
pop
shl
lea
pusha
fildll
das
cmp
cld
bound
mov
js
sti
in
push
xchg
dec
out
test
aam
or
call
xchg
outsb
adc
and
xor
xor
and
mov
mov
ror
mov
sub
loopne
pop
mov
push
sbb
jno
jbe
ficomps
jle
dec
mov
idivb
pop
push
leave
rcl
push
rcl
jo
add
addr16
hlt
in
mov
dec
sbbb
jnp
fistps
lock
das
xchg
pop
dec
shrl
xchg
sub
mov
shl
addl
cmp
sbb
pop
mov
and
inc
test
inc
inc
cmp
xlat
mov
mov
in
imul
mov
subb
xor
xlat
cli
cmpsb
insl
jg
sbb
iret
pop
cmp
xchg
xchg
bound
mov
orb
std
push
sbb
jbe
dec
sbb
sub
push
shll
pop
pop
xchg
add
iret
filds
call
repnz
notb
dec
and
pop
pop
imul
call
nop
pop
clc
out
cmp
orb
sbb
cmp
daa
pop
lcall
insb
lahf
mov
mov
aas
mov
je
pop
mov
arpl
push
xchg
pusha
lcall
dec
push
imul
fdivrs
xorb
pop
test
jl
or
out
sub
xor
lods
arpl
pcmpgtd
mov
in
nop
pop
mov
sub
or
dec
movsb
cmpsb
inc
and
int
cmp
rclb
jbe
dec
pop
call
call
pop
fnclex
sub
and
movsb
fs
sti
leave
sub
fnstenv
sub
pop
mov
sub
jl
xchg
mov
repz
les
mov
mov
dec
je
ss
addr16
adc
sbbl
adc
das
inc
stc
lahf
lods
sub
fldcw
pop
jne
outsb
inc
mov
jge
pop
loope
iret
test
insl
fs
cmpsb
loop
mov
popf
arpl
rorl
mov
mov
sub
in
insl
addr16
sbb
ja
jge
mov
xlat
dec
lea
jmp
shl
insl
fistps
in
cmp
loopne
rcll
pop
sbb
jp
decl
test
add
jo
leave
and
das
push
adc
fs
out
add
lcall
dec
call
add
sbb
lret
mov
lock
in
mov
test
pop
cmc
xchg
scas
pop
xchg
out
in
jo
jecxz
mov
fmuls
lock
adc
in
in
out
push
sahf
jge
scas
not
into
aaa
es
add
test
sbb
mov
daa
adc
leave
xchg
dec
and
add
and
aad
ja
lock
pushf
xchg
jae
mov
iret
pop
mov
mov
sti
and
shrl
out
addr16
stos
cmp
icebp
pop
pop
mov
std
out
call
test
push
es
sub
xchg
cwtl
or
lock
xchg
popa
adc
ljmp
repz
xor
inc
jmp
or
sbb
or
cmp
pop
mov
gs
jmp
test
xor
jbe
fisubrs
enter
mov
jns
pop
pop
dec
mov
cltd
jo
gs
xchg
enter
dec
mov
mov
xlat
jp
push
jae
push
or
aam
mov
lahf
fsubrp
push
add
mov
jl
loope
jbe
insl
fs
pop
pop
sub
sbb
xor
sbb
ja
mov
and
mov
cmpsl
cmpl
jg
push
jmp
jno
sti
jne
mov
fnstcw
xlat
sbb
testl
cmp
sbb
call
push
and
mov
popf
sahf
mov
orl
fistpl
jmp
test
ss
pop
inc
dec
dec
pop
fmuls
xorl
enter
pop
pushf
jp
or
daa
mov
sub
fisttpll
testb
out
nop
gs
mov
jns
rorl
fs
mov
sbb
jecxz
jg
adc
mov
das
lea
ret
push
inc
in
cmp
push
sti
cmp
fs
fistl
mov
cmp
ja
call
pop
jmp
jl
repnz
jnp
xchg
loopne
cmp
push
adc
fwait
loope
mov
sbb
cmp
xchg
push
add
stos
jo
mov
fistpl
or
in
fcomps
xchg
mov
jb
out
xor
enter
pop
shrb
mov
push
xchg
inc
daa
sarl
fwait
lea
ret
sbb
insb
rcrb
ds
ds
fcmovu
push
jae
mov
adc
ret
cmp
nop
jge
dec
insb
aaa
mov
lods
mov
inc
lods
add
mov
xchg
in
push
in
sub
cmpsb
scas
je
mov
xchg
xor
add
mov
inc
loope
push
jb
mov
loope
inc
cmc
push
popa
dec
xchg
inc
mov
inc
jle
xchg
cld
dec
sahf
lea
inc
add
dec
adc
push
icebp
gs
sub
mov
and
cmc
dec
mov
repnz
stos
mov
je
push
add
pop
mov
mov
mov
pop
push
mov
scas
pop
jno
mov
insl
cwtl
imul
inc
jl
jbe
pusha
test
xor
push
xchg
jno
push
les
std
xor
test
xchg
dec
pop
jo
adcl
fdivrl
jne
inc
lret
les
sub
cmpsb
jmp
xor
rcl
aad
out
cmpsb
jae
pop
popa
dec
or
repz
fcomip
jae
test
adc
ror
mov
mov
fcoms
out
mov
mov
pusha
pop
add
push
loope
dec
ja
popf
jns
pop
lods
stos
cli
fistl
push
imul
mov
aaa
pushf
adcb
das
movsb
add
mov
add
imull
repnz
xor
loopne
adc
fldcw
dec
add
fsubrs
cli
mov
mov
lock
add
jb
out
adc
sub
mov
stc
push
add
loop
adc
mov
xor
pop
xor
adc
cmpsb
rclb
lcall
sahf
mov
pusha
push
outsb
mov
mov
jbe
cmp
add
add
push
sbb
add
sbb
inc
push
fnstenvs
pop
and
stos
fisttps
xor
call
adc
cmpsb
jmp
addr16
or
cmp
bound
sub
cmp
mov
adc
movsl
fwait
movb
scas
into
dec
pop
mov
data16
xchg
and
sbbl
dec
cmpsl
cld
cmp
mov
push
mov
dec
repnz
fiaddl
and
stos
push
daa
mov
mov
sbb
cmpsb
pop
sahf
lods
mov
jae
je
rclb
and
pop
or
ja
ja
mov
jl
sub
test
push
push
mov
stc
shrl
xor
sub
inc
bound
inc
adc
sbb
cltd
les
jl
push
sub
repz
xor
dec
sbb
or
pop
add
sub
add
inc
add
jl
mov
push
xorl
adc
add
dec
fs
imull
pop
rorl
add
and
imul
jl
mov
mov
mov
cmp
lahf
insl
cmp
sti
jns
jno,pn
jno
stc
push
je
daa
movsl
repnz
jmp
fwait
xchg
mov
test
jle
ret
and
push
mov
cmp
ss
test
out
mov
fcomps
pop
jge
pop
push
push
in
insb
sbb
cltd
out
lahf
mov
cwtl
cmpsb
fldt
or
pop
rol
sti
aas
icebp
xlat
xchg
fwait
cli
xor
test
jbe
xor
sbb
cmp
adc
mov
rorl
ss
xchg
out
jecxz
jecxz
add
in
lods
xor
sti
mov
cmp
stos
rorb
jo
adc
test
iret
cmc
js
nop
lahf
lds
sbb
jmp
add
aas
xchg
fisubrl
inc
adc
xchg
ja
mov
pop
cmp
mov
inc
push
inc
clc
outsl
jle
push
scas
pop
mov
test
inc
popa
jae
and
cli
pusha
mov
jno
mov
lcall
andb
test
icebp
adc
xor
push
bound
sbb
mov
and
icebp
rolb
pop
and
xchg
ret
fidivs
out
pushf
jge
fildll
pop
ss
xchg
pusha
mov
aad
fdivp
adc
iret
inc
cs
dec
les
repz
jp
scas
inc
rclb
stos
xchg
es
ffree
xchg
fnsave
fidivl
or
mov
test
mov
das
sub
test
ds
add
push
jp
jl
xor
cmp
out
lock
sbb
andl
mov
sbb
aas
sbb
in
pop
js
inc
imul
outsb
push
fildl
cmpsl
loop
stos
add
sbb
jne
xchg
fldenv
data16
jne
jge
and
mov
cmpb
push
xchg
or
and
ficomps
push
xor
lock
xor
cmp
cs
jecxz
mov
stos
cltd
mov
or
or
push
jb
push
arpl
xor
dec
push
ljmp
lahf
push
mov
addr16
jae
aaa
insl
out
stos
es
adc
pop
and
sbb
leave
loopne
cmc
sbb
scas
sbb
loope
xor
jns
aad
push
add
jmp
pushf
repz
lds
stos
xchg
xchg
lret
sti
xor
sbb
push
and
outsb
nop
dec
loope
data16
jns
sub
xor
mov
lea
loopne
mov
or
push
imull
sbb
jge
xchg
int3
rorl
sbbb
ret
shld
outsb
mov
cmp
push
pop
or
sti
lret
sbb
xor
ljmp
add
cs
cmc
clc
mov
xchg
filds
rep
mov
xchg
mov
cltd
mov
orl
mov
mov
mov
inc
add
cmp
and
jns
jne
pushw
jp
mov
sti
adc
in
cmp
mov
cmp
cmp
mov
je
mov
pop
je
sub
hlt
sub
sbb
cmp
dec
dec
adc
mov
addl
xchg
push
adc
lock
test
adc
jecxz
jmp
bound
subl
pop
out
frstor
in
sbb
mov
mov
pop
iret
or
jno
and
push
imul
jb
lret
sarl
mov
xor
inc
lock
cld
sti
inc
aaa
pusha
scas
rcrb
inc
mov
xor
push
dec
mov
ficompl
es
push
cmp
mov
lcall
cld
xchg
stc
mov
sub
rcrl
lds
pusha
mov
movsb
and
push
iret
pop
cmp
call
pop
mov
fnstcw
push
out
add
gs
inc
fidivs
call
inc
int
popa
dec
sub
jge
icebp
idiv
xchg
les
dec
mov
fwait
testl
loope
cmpsl
push
outsl
imul
pop
sub
fsubs
test
imul
sbb
and
cltd
cmc
pop
out
xor
jbe
les
lds
inc
xchg
ja
jb
arpl
ss
mov
inc
mov
je
xor
cmp
mov
lret
or
test
cmp
dec
lods
or
in
shl
adc
addb
sbb
imul
or
movsl
daa
xchg
mov
rorl
pushf
hlt
xor
dec
jl
out
addr16
mov
fdivs
scas
dec
jecxz
mov
mov
in
dec
int3
cmp
add
js
mov
mov
pop
mov
jg
mov
jl
mov
dec
adc
pop
mov
jmp
lock
mov
push
mov
lock
mov
mov
inc
xchg
pause
cmp
in
negl
adc
int3
jg
je
xchg
repz
scas
out
in
pop
pop
mov
and
jle
lds
mov
xor
push
aaa
cmp
iret
sub
or
cmpsb
lea
mov
jecxz
in
jge
pop
in
sub
icebp
int
jp
sbb
and
enter
cmp
roll
xchg
xchg
mov
or
jnp
push
sti
pop
outsb
inc
and
daa
fidivl
pop
cmp
add
enter
out
xor
sub
sub
clc
rcll
icebp
call
pop
test
dec
dec
leave
cmp
push
xor
adc
push
push
jp
out
adc
jg
lea
enter
pop
xchg
adc
jb
jle
cltd
fs
push
out
outsl
jno
xor
or
and
test
loope
fiadds
push
rcrl
pop
insb
rol
fiadds
and
not
mov
mov
xor
repnz
push
or
dec
out
add
insb
push
testl
inc
push
data16
mul
out
jne
repz
jle
push
popa
jb
ret
sti
dec
and
mov
out
adcb
gs
lods
cmpsb
insl
int3
scas
shrl
pop
fisubrs
call
push
ret
xor
outsb
mov
sbb
outsl
rorb
jne
or
inc
mov
add
jae
shr
cmp
ficoms
jp
dec
pop
sub
scas
xor
test
fistps
out
in
mov
push
cmp
jmp
mov
jl
inc
clc
add
pop
nop
xchg
or
adc
cli
cmp
sub
mov
and
lock
xor
jno
mov
mov
cs
out
test
pushl
daa
arpl
movsb
add
out
pop
call
iret
popf
xchg
lahf
cltd
and
xor
data16
loopne
jno
lahf
pushf
in
popa
mov
andb
or
push
ljmp
rcrl
xor
jo
push
mov
xchg
or
enter
sbb
mov
pop
fcoml
sub
mov
std
adc
arpl
pop
mov
jmp
cmpsl
push
dec
dec
jge
cmp
ffree
shll
lret
jo
pop
pop
cmpsl
and
das
shr
pop
xor
jnp
into
xlat
cmp
arpl
sub
dec
inc
fdivs
or
in
loopne
xor
mov
scas
push
xchg
aaa
outsb
fisubl
movsb
mov
lea
or
pop
inc
movl
xor
sub
mov
fwait
pop
and
push
jp
and
and
outsl
mov
push
loopne
push
sub
cmp
xchg
push
jmp
ret
dec
jl
out
adc
inc
add
clc
aas
pop
pop
push
das
mov
xchg
mov
arpl
imul
movsb
add
inc
jo
sub
xor
cmp
aad
inc
add
fstps
cld
in
jmp
cmp
cmp
mov
ret
xor
fdivl
jg
pop
mov
loop
mov
pop
mov
bound
aas
out
fbld
addl
ja
mov
push
mov
sbb
pop
and
adc
jle
in
push
das
add
push
movsl
adc
in
push
add
shrb
inc
lahf
jp
and
lds
into
test
sbb
int3
mov
mov
mov
xchg
jecxz
dec
adc
sbb
loop
sub
sub
sbb
push
dec
ljmp
int3
dec
test
enter
push
popa
pop
sbb
repz
scas
insl
fcmovb
cmp
iret
jnp
jnp
jge
pop
xchg
andb
xchg
mov
jnp
js
notb
xchg
jns
mov
jno
out
fistps
hlt
or
fdiv
in
es
adc
dec
rcll
int
lret
push
jp
int3
add
jb
lds
scas
sbb
pop
sub
jmp
decb
test
jmp
inc
pop
mov
add
mulb
cmpsb
cmp
je
adc
cmp
push
loope
jl
mov
lret
push
mov
jb
lahf
mov
in
push
xchg
adc
test
fistps
imul
loope
sarl
mov
mov
int3
sub
mov
sbb
shll
lret
xor
arpl
lahf
add
mov
rcll
sub
scas
mov
and
inc
mov
imul
das
sub
mov
loope
jne
fcoms
lcall
shl
pop
jle,pt
daa
stos
test
mov
dec
and
fstpl
xor
insl
adc
call
sbb
adc
xchg
clc
into
add
fdivrs
pushf
push
int3
shl
shll
mov
and
xlat
lahf
add
dec
push
cltd
xor
sbb
cs
dec
pop
addl
inc
mov
add
aas
mov
bound
push
mov
dec
mov
jmp
push
por
push
sub
out
sub
aam
jmp
pop
jbe
push
jge
mov
lea
insl
cmc
push
sbb
outsl
push
mov
adc
movsb
repnz
loope
sub
repnz
xchg
repnz
jne
jae
sahf
inc
xchg
lret
mov
mov
mov
stc
push
shll
aad
cwtl
jmp
mov
outsb
push
pop
pop
insb
loope
and
dec
mov
aas
daa
test
roll
xchg
inc
cmpsl
xor
mov
jno
mov
mov
adc
aaa
hlt
lret
sarl
jp
dec
insl
pop
xor
jnp
movsb
jecxz
sbb
mov
loopne
cmc
shll
lds
lods
loopne
mov
sub
sub
mov
or
cld
xor
mov
xorb
jbe
inc
jb
jbe
das
js
jo
sub
testw
or
dec
and
push
test
cmp
stc
jbe
or
inc
bound
sub
add
mov
xor
into
mov
loop
scas
sbb
mov
jle
repz
leave
repz
mov
jmp
data16
sbb
cli
stos
icebp
push
aam
jb
mov
push
fucomp
jge
jae
out
sbb
cmp
lahf
icebp
lods
adc
xchg
xorb
ljmp
jbe,pn
push
test
rcl
cld
push
pushf
mov
xchg
js
and
or
sbb
add
mov
mov
xchg
imul
in
jne
push
mov
sbb
iret
or
xlat
out
cmp
pop
sbb
je
lock
fs
dec
or
in
add
sub
fadd
sahf
fld
xor
jle
fdivl
lcall
add
sahf
pop
aas
int3
data16
out
fninit
ss
push
xchg
inc
pusha
shr
subb
fistl
and
hlt
rolb
and
stos
jle
mov
mov
push
and
mov
jle
fisttps
insb
leave
and
dec
mov
aad
cmp
mov
mov
lret
mov
loop
jmp
leave
aaa
scas
or
and
push
lret
adc
xchg
pop
in
inc
mov
cmpb
jle
cwtl
clc
dec
cmp
xchg
lds
push
daa
outsb
and
cmp
xchg
push
push
xor
mov
mov
add
dec
daa
add
fmull
xchg
xchg
cmp
test
mov
add
or
jl
cmc
arpl
popf
sbb
cltd
mov
out
sahf
mov
je,pn
pop
jno
leave
xorb
or
das
xchg
pop
push
sub
rorl
sbb
lret
push
add
add
cld
adc
fisttpll
rorb
pop
mov
aaa
adc
out
int3
leave
sbb
and
push
scas
stos
hlt
sbb
icebp
popa
insb
sbb
push
test
test
inc
call
in
adc
xchg
daa
jo
push
iret
das
ss
enter
cmp
adc
xchg
pop
pop
jecxz
push
push
sahf
adc
addl
or
test
mov
xchg
mov
xor
mov
lock
mov
stc
cmpsl
cwtl
or
imul
mov
xor
les
sub
ret
mov
mov
pop
fmull
mov
aad
xor
aad
repnz
repnz
popf
inc
lock
orl
adc
sub
rorb
mov
dec
add
xor
mov
out
movsl
dec
lods
pushf
sbb
popf
bound
push
push
ja
or
cmp
cmp
out
sbb
pop
mov
cld
clc
lcall
stc
xor
push
mov
add
jns
ret
mov
scas
imul
fcompl
insl
enter
inc
cltd
sbbb
mov
jnp
clc
cmpsl
jge
mov
cmc
sbb
pop
scas
movsl
pop
jp
add
cmc
and
ss
loop
push
sub
inc
sbb
push
pop
push
popf
dec
bound
cld
push
mov
pop
rol
dec
jle
icebp
add
scas
addr16
mov
lcall
and
and
mul
repz
adc
mov
ss
imul
xor
rorl
push
clc
and
pop
mov
pop
mov
cmp
loopne
scas
sbbb
das
out
enter
outsb
ds
test
dec
popa
lods
mov
mov
lds
cmp
mov
movsb
cmpsl
mov
or
add
pop
lds
jno
jnp
cmpl
sub
pop
nop
inc
test
xor
mov
pushf
cmp
pop
push
mov
mov
xor
stc
sbbl
dec
into
stos
mov
arpl
add
scas
outsb
addr16
or
add
push
push
mov
fldt
orl
cmpsl
mov
sbb
into
sbb
sbb
add
xor
popf
sar
iret
test
xchg
cwtl
cmp
ljmp
inc
test
add
adc
add
cmpsb
or
fidivrl
nop
aad
jb
outsl
xchg
xor
jp
das
or
daa
lods
mov
mov
mov
cmp
repnz
ret
repz
sti
mov
je
orl
jg
sub
mov
cli
jo
aas
dec
sbb
adc
pop
add
pop
inc
jp
mov
xchg
ljmp
jnp
or
xor
jo
xchg
sbb
cmpsl
sub
js
fwait
jp
addr16
pusha
inc
lret
rcrb
adc
rorl
jne
loope
jmp
mov
push
inc
daa
pop
js
push
popf
imul
xor
xor
mov
xchg
filds
xchg
jb
loopne
mov
mov
xor
push
dec
adc
xor
mov
jmp
adc
popa
insl
jbe
jno
push
xor
pop
adc
jnp
push
js
andl
add
ja
cld
inc
pop
stos
into
xchg
lds
or
fsub
daa
inc
bound
add
xor
xor
inc
movsl
xor
mov
and
pop
cs
xor
mov
scas
mov
cmp
pop
dec
paddd
mov
pushf
jns
and
inc
xor
ret
ret
dec
and
jae
mov
mov
or
add
stos
cmc
mov
and
lock
andb
imul
stc
pop
xor
xchg
jge
pop
stos
lds
mov
mov
aaa
movsb
jb
mov
or
loopne
and
inc
xor
div
cld
into
cmpsb
ret
imul
push
test
inc
push
sub
inc
roll
lret
sbb
les
cs
add
dec
push
pop
out
xchg
loop
cmc
sub
stc
fidivrs
inc
jl
push
inc
mov
fildll
xor
jno
mov
jecxz
fcoms
or
inc
in
sbb
xchg
or
mov
adc
sub
mov
repz
xchg
mov
mov
fdivr
mov
adc
and
and
push
jne
sarb
lahf
mov
mov
fbstp
rorb
or
sbb
lret
jp
repnz
js
mov
jle
aam
xchg
nop
fcomi
xlat
xor
clc
push
hlt
leave
sbb
mov
mov
out
mov
js
sbb
arpl
sub
in
mov
icebp
fidivl
cmp
xor
mov
adc
jae
leave
xchg
xchg
and
ret
test
movsl
and
int
popf
into
pop
xchg
bound
mov
mov
rcl
in
cmp
rcr
sbb
lcall
xor
mov
push
or
dec
inc
lret
aaa
cld
xchg
jns
fists
imul
add
jmp
int
mov
or
dec
push
xor
lret
loope
cltd
ja
outsb
out
lret
mov
inc
sub
jno
add
loope
or
das
movb
notl
int3
mov
push
movsb
mov
xchg
push
jmp
stos
adc
fistps
je
fidivrs
outsl
leave
sbb
ss
cmp
inc
sahf
and
mov
out
jg
loop
outsl
jge
ret
insl
jae
lock
sub
pusha
rcll
lahf
pop
add
popf
sbb
jecxz
lret
ds
mov
push
pop
std
js
adc
stos
xchg
ja
fdivs
movsl
pop
in
movsl
enter
mov
pop
inc
sti
add
into
out
outsb
clc
push
dec
lods
sub
orb
das
xor
in
dec
mov
js
sbb
gs
pusha
add
sbb
dec
loop
loope
shl
mov
das
and
push
je
daa
push
cmc
xor
xchg
pop
roll
push
data16
jl
mov
in
adc
shll
xor
jne
repnz
clc
sub
sbb
jmp
pop
sub
fs
rclb
jbe
loope
or
jle
mov
lret
icebp
inc
dec
cmc
adc
enter
sbb
sahf
inc
das
cmp
decb
cmp
cmp
in
xor
ljmp
pop
mov
sub
sahf
daa
mov
dec
mov
outsl
lahf
and
jno
inc
lahf
inc
lcall
sarb
in
and
rolb
lcall
mov
fstpl
mov
sbb
loopne
xor
mov
inc
jnp
push
aaa
scas
add
pop
ret
jg
lods
inc
clc
daa
ss
mov
jge
or
and
ret
cmp
push
xchg
pop
jno
test
inc
or
iret
rorl
scas
cmp
xor
stos
jge
insl
cmp
jmp
in
jge
dec
lret
mov
popf
pop
mov
add
adc
jp
or
inc
adc
mov
fiadds
cmp
sbb
mov
ljmp
and
out
or
xor
out
push
data16
leave
ficomps
cmp
xchg
push
jecxz
sarl
cmp
and
nop
movsb
push
or
popa
sbb
andb
scas
add
mov
clc
test
rcrb
add
not
dec
dec
push
pop
inc
add
mov
ljmp
dec
push
enter
imul
lret
push
xchg
loope
icebp
call
fists
push
or
xor
xchg
leave
xor
stc
cmp
dec
push
push
cmpsl
jg
jp
andb
pop
fistpl
sbbb
dec
shr
jbe
push
sbb
xor
xchg
push
je
push
push
cmpsb
mov
cltd
fldl
int3
xchg
push
mov
sahf
jge
add
popa
jp
shl
out
ret
or
dec
mov
loope
inc
cld
push
xchg
outsb
shrb
lods
or
popf
mov
and
mov
cwtl
addr16
xchg
rcr
shll
jo
sbb
inc
push
xchg
sub
imul
cmpsb
das
lock
stc
jne
insl
cmp
pop
adcl
pop
fs
lcall
xor
or
sub
adc
pop
aas
daa
ficoms
and
shlb
scas
xor
insl
imul
aam
add
loop
test
sbb
inc
dec
cmpb
xchg
lret
pop
insb
xor
and
mov
data16
fwait
sarb
jg
mov
jle
lcall
pop
in
pop
push
cwtl
rcll
or
shlb
lds
mov
sbb
jno
sub
outsb
shll
incb
jmp
cs
pop
jmp
mov
imul
lods
dec
mov
mov
cmp
inc
jb
push
loope
les
xchg
ljmp
wrmsr
and
sub
sub
inc
mov
pop
jno
aaa
add
das
movb
and
mov
insl
add
and
inc
mov
pop
fidivs
test
mov
push
mov
dec
or
clc
pop
and
adc
jo
pusha
mov
fcmovbe
gs
outsb
ss
cli
and
add
das
xor
ror
push
vcvtpd2dqx
cltd
icebp
test
ljmp
fstps
sbb
repnz
aad
outsl
jecxz
cld
lds
sub
sti
mov
mov
sbb
popa
leave
and
js
lds
pop
xchg
insb
dec
jecxz
fs
out
xchg
mov
movsb
jns
sar
in
scas
iret
pop
icebp
mov
leave
fs
push
sbb
mov
in
sarl
pop
lock
dec
cltd
stos
int3
push
and
mov
fists
repnz
fdivr
or
movb
add
inc
ljmp
into
xor
pop
pop
aam
inc
sbb
mov
jle
or
pop
call
xchg
add
mov
adc
shl
hlt
jae
mov
or
xorl
in
sarb
xor
lret
test
shl
dec
jg
in
mov
jg
cmc
sub
mov
rol
xor
subl
mov
dec
mov
lret
mov
daa
mov
in
and
mov
addr16
fcmovnb
cmpsb
movsb
loop
in
mov
xchg
jno
jecxz
xchg
push
loope
mov
shr
pop
test
movsl
pop
inc
aaa
or
mov
xor
lahf
push
inc
imul
sbb
ficoml
sarb
push
push
pop
imul
lds
cmp
inc
ja
and
repnz
cmp
lods
push
popf
cmpsl
xchg
push
int
ret
xor
fbld
les
fnstcw
inc
in
pop
xor
fcomps
xor
ret
inc
mov
jmp
pop
enter
inc
mov
shlb
inc
lea
pop
xchg
sub
sbb
or
mov
cld
cmpsl
xchg
inc
push
dec
xor
xlat
jmp
movsl
clc
mov
mov
mov
aas
adc
pushl
leave
in
sub
add
cmp
pop
pop
xchg
or
pop
arpl
lods
mov
in
push
nop
test
jg
sbb
mov
shrb
xchg
loop
decb
adc
sbb
pop
mov
aad
pusha
pop
rorl
sub
cmc
push
ret
je
pop
push
shrb
fwait
xlat
mov
mov
or
mov
mov
xor
sbb
mov
jle
jnp
xchg
arpl
scas
inc
xchg
in
xor
add
sbb
test
les
outsb
xor
jne
cmp
movsb
lcall
mov
add
jle
jae
xchg
pop
inc
ret
fidivs
dec
lcall
mov
lods
test
adc
mov
repnz
fsts
mov
mov
mov
or
mov
aaa
mov
mov
cmp
bound
nop
cmp
dec
xchg
ss
push
cmp
insb
scas
pusha
jno
mov
in
mov
mov
mov
dec
daa
loop
push
mov
jp
pop
mov
xchg
sub
inc
fcompl
in
movsl
rcrl
and
aas
movsb
mov
inc
psubusb
mov
xor
fdivrp
cli
lock
insl
lret
and
pop
ss
mov
lock
ret
dec
sbbb
cld
js
call
aad
mov
out
test
pop
dec
jl
jae
xor
mov
inc
jg
jmp
mov
fwait
add
sub
ljmp
lock
pop
into
mov
jo
mov
sbb
pushf
xchg
or
adc
notb
imul
mov
stos
mov
push
mov
pop
add
into
push
mov
jge
cld
sbb
das
and
cmp
mov
js
sbb
push
out
out
in
neg
sub
lods
call
ret
mov
daa
mov
add
fdiv
jne
pop
xor
test
nop
add
jecxz
std
cmpsl
ja
nop
jle
xor
loope
add
imul
loopne
adc
and
mov
cmp
fstps
and
sahf
daa
fisttps
push
xchg
sub
ss
mov
xorb
and
adc
push
mov
pop
scas
ljmp
jno
mov
mov
mov
xchg
fwait
test
add
xchg
pop
call
dec
data16
lock
push
mov
mov
sub
insl
imul
cmpsl
mov
daa
sahf
xor
xchg
out
xchg
test
mov
sbb
mov
stos
aam
add
or
in
nop
pop
fs
sbbl
js
inc
mov
mov
fwait
cmp
dec
or
adc
pop
fwait
in
pop
popf
lret
sub
js
push
jmp
in
in
and
xor
inc
js
xchg
xor
outsl
mov
repz
cmpsb
hlt
sub
push
xor
pop
popa
sub
jg
fcmovnu
frstor
js
pop
xor
pop
jecxz
ljmp
lods
jnp
sub
aas
sbb
daa
sbb
adc
mov
ret
js
std
push
icebp
adc
push
stc
push
mov
push
movsb
aam
ljmp
sub
push
aaa
lcall
sbb
push
sub
sbb
dec
jne
mov
mov
cmp
leave
adc
addr16
jno
into
andb
mov
sub
test
inc
cmpsl
mov
aad
and
out
loop
mov
lock
shll
aam
scas
loopne
dec
mov
lods
inc
and
xchg
jns
lock
faddl
xchg
inc
fcomip
and
xor
sub
jbe
rcll
mov
fstps
add
or
cmp
loopne
inc
pop
popf
ljmp
cmpl
sub
or
outsl
xchg
mov
leave
xor
xchg
dec
sahf
adc
or
lret
rcrb
lds
in
mov
pop
int3
test
push
xor
xchg
push
js
mov
test
push
fcomi
xchg
and
sbb
cmp
inc
repnz
dec
int
test
fisubrl
push
cmp
popa
jmp
adc
push
das
lds
clc
into
cltd
adc
cs
pop
sbb
into
and
jae
dec
xor
outsl
popa
jl
adc
mov
out
add
sub
add
nop
jp
hlt
dec
inc
rolb
imul
xchg
nop
sbb
fcmovnbe
loopne
xor
cltd
mov
pop
dec
int
jae
push
int3
fwait
mov
and
pop
mov
jp
mov
mov
movsb
shlb
out
inc
mov
jbe
mov
js
mov
dec
jecxz
push
pop
lock
dec
cwtl
push
jge
mov
push
pop
or
inc
xor
xor
and
add
arpl
sti
fcmovnb
cmp
mov
lods
jl
icebp
push
ret
jbe
sub
add
lea
fldl
cmpsb
inc
incl
mov
sti
cmp
insb
add
add
add
fdivl
nop
arpl
negl
inc
mov
mov
xor
orb
add
push
stc
add
rorb
popf
stos
push
lods
dec
xchg
or
in
sub
aad
insl
pop
mov
xor
sti
cmp
dec
subl
jl
ss
lret
sub
push
push
jg
cli
mov
pop
mov
cs
inc
xchg
pop
sub
cmp
dec
cld
add
call
repz
fimull
mov
pop
fcmove
push
lret
mov
lcall
sti
scas
cmc
xor
mov
jmp
sbb
sub
loopne
jge
xchg
daa
xchg
pop
mov
jb
insl
je
int
add
rcr
aad
adc
mov
pusha
les
das
mov
jbe
jecxz
jp
lahf
sub
out
clc
popf
scas
js
sub
out
testb
sbb
mov
pop
add
iret
add
dec
je
cmp
mov
ret
sub
mov
and
and
adc
inc
sbb
fists
sbb
or
pop
adc
add
jecxz
adc
outsl
xor
dec
cmpsl
jo
mov
push
cld
out
and
sub
pop
mov
cmp
stc
jae
adc
js
jbe
xor
faddl
imul
cmp
push
bnd
mov
push
lods
ds
push
adc
lahf
adc
mov
insl
sahf
jno
cmp
push
je
inc
sbb
fistpll
cmp
or
pusha
adc
jns
insl
cld
mov
adc
jecxz
into
ds
inc
sbb
xchg
or
in
fsubp
in
inc
sbb
dec
push
into
adc
mov
xor
mov
and
dec
mov
adc
scas
pop
imulb
test
mov
and
sub
cmp
jnp
sub
push
jmp
pusha
jecxz
stos
mov
add
pop
xor
and
dec
loope
pop
lcall
mov
clc
cmp
lcall
xchg
or
out
clts
jns
popa
jcxz
repnz
or
mov
pop
adc
sbbb
clc
outsb
ja
xchg
xchg
sbb
mov
mov
or
cs
into
inc
push
sti
clc
jne
aas
rorl
mov
out
ja
popf
enter
adc
mov
ljmp
js
fbstp
mov
into
bnd
aaa
roll
push
movsb
das
out
push
scas
and
jl
decb
inc
cmp
imul
cmpsb
call
add
mov
jnp
and
mov
gs
mov
lahf
js
lds
lcall
rorl
imul
or
scas
mov
pop
adc
mov
stos
cmp
mov
cmp
inc
out
adc
xchg
jns
stos
jns
mov
push
pop
ror
mov
bound
pop
sbb
adc
push
out
mov
xchg
shll
inc
cmp
lahf
sarb
pop
imul
adc
mov
ret
in
sbb
stc
in
js
jae
mov
add
std
das
mov
xchg
cmp
pop
std
gs
jmp
mov
xor
push
pop
sbb
lret
iret
stc
sbb
pop
xor
jno
mov
lea
and
and
pushf
aam
jle
push
sub
ja
in
iret
xchg
and
xchg
fwait
pop
sbb
gs
sub
push
cld
idivb
rol
jecxz
fsubrl
fstl
xor
add
adc
aad
pushf
mov
inc
shlb
and
sbb
fcmovbe
cmpsb
ficoms
pushf
cli
push
fistpl
mov
std
subl
adc
int3
leave
dec
loop
jecxz
rorl
xlat
add
dec
xchg
xchg
movsl
sub
arpl
ret
jae
and
cmp
sub
cmpsl
pop
push
clc
repz
rorl
jae
js
inc
hlt
xor
push
xchg
jg
and
sahf
mov
pop
adc
ret
das
iret
clc
aaa
ror
mov
pop
mov
mov
xchg
shlb
cld
sub
movsb
xor
orb
pop
pop
dec
les
movsl
pop
push
xchg
push
std
das
pop
call
jno
nop
xchg
add
add
xchg
adc
push
jnp
js
mov
into
cli
stos
inc
fsub
jg
push
call
iret
dec
xlat
mov
and
cld
movl
fstpl
iret
aad
push
fidivrs
lcall
fildl
sub
pextrw
inc
test
mov
pop
mov
or
jecxz
jnp
les
inc
add
jae
lds
mov
jle
shlb
dec
popa
and
push
xorl
jb
add
dec
ffree
rcll
or
shll
cmp
icebp
popf
xchg
mov
out
imul
and
pop
pop
jp
rclb
adc
and
not
jg
and
mov
adc
mov
push
popf
and
imul
and
ret
aam
mov
xchg
pop
sub
inc
xchg
loop
lods
sub
and
aam
int
push
mov
pusha
aad
pop
lcall
sbb
std
clc
mov
test
clc
aas
dec
sbb
mov
jmp
add
bound
and
fdivp
inc
stos
mov
pop
jmp
sub
jno
loop
ja
je
mov
pop
push
pop
sbb
xor
pop
sub
jo
inc
or
adc
push
cmp
or
adc
daa
fldl2t
add
pop
adc
es
sarb
fnsave
sub
enter
stc
add
jno
out
por
and
in
sub
push
mov
sar
mov
pop
test
cmp
lods
dec
fdivp
aam
xlat
sub
add
pop
es
cld
pop
jle
cmp
jno
repnz
add
mov
jo
inc
xor
xchg
outsl
and
and
ret
sbb
clc
dec
lret
mov
test
lcall
pop
loopne
stos
subb
mov
or
jmp
sub
sbb
and
imul
adc
dec
push
lods
movsl
sarb
mov
sub
movsb
push
add
push
sarl
add
mov
cwtl
lahf
popf
jnp
mov
and
in
pop
nop
add
pop
xchg
scas
and
dec
repz
dec
and
add
lods
mov
inc
xchg
in
mov
pop
push
cwtl
dec
stc
ss
rorb
inc
mov
xor
pop
loop
and
push
aas
ret
mov
mov
jne
lcall
or
sbb
cmp
pop
mov
cmpsb
hlt
dec
arpl
mov
shll
enter
mov
lods
mov
jle
push
test
fistps
jo
ficoml
adc
or
imul
jle
xlat
jb
mov
and
push
stos
mov
push
cmpsl
hlt
dec
mov
ret
out
adc
mov
push
inc
jno
int
cld
cmp
loop
in
addb
aas
int
ss
pop
and
shlb
outsl
out
xor
xor
mov
aas
aaa
lods
push
jle
and
and
out
add
add
xor
ret
inc
in
jp
pop
adcl
ljmp
loop
xorb
inc
hlt
adc
push
fnstcw
xlat
mov
or
inc
ja
add
add
mov
fsubrl
adc
loopne
pop
jle,pn
dec
pop
outsl
jl
xor
mov
cmp
fnstsw
gs
xor
pop
pop
icebp
push
enter
pop
sbb
mov
imul
popa
pushf
push
popf
adc
je
jo
jb
mov
adc
cmpsl
ss
fidivrs
mov
sub
sbb
orb
lahf
xchg
repnz
jmp
adc
mov
mov
mov
leave
pushf
sub
jge
data16
sub
dec
add
ljmp
in
sahf
push
addl
cmp
outsl
xchg
push
ljmp
aam
out
cmpsb
push
push
lcall
movsl
cmp
pop
jg
fucomip
jno
mov
jo
mov
xchg
jmp
mov
paddsb
mov
das
lret
push
ss
lea
cs
xchg
ficomps
movsb
mov
test
fwait
cmp
rol
sbb
jo
mov
call
or
add
aas
jbe
arpl
divb
out
cmpsl
mov
add
iret
jp
icebp
cmp
mov
js
aas
imul
sahf
std
pop
ret
cmp
pop
and
sarb
je
clc
xchg
popa
scas
test
in
xor
pop
pushl
sti
cli
stos
repz
dec
xchg
jne
jno
mov
and
sub
dec
dec
stos
push
sahf
pop
xchg
das
out
je
pop
outsb
pop
xchg
sub
idivl
repnz
sbb
lahf
dec
sub
cs
xchg
scas
mov
mov
daa
xor
push
mov
xchg
lock
iret
xchg
xor
adc
pop
mov
loop
dec
and
test
lock
fsts
sbb
mov
ds
dec
push
popf
mov
push
or
mov
mov
mov
lods
xor
stc
sbb
pop
sarb
mov
pop
popf
sub
mov
add
xchg
or
mov
loop
pop
out
clc
or
pushf
stos
cmp
sub
sbb
push
mov
mov
rcll
and
and
stos
repz
std
and
and
inc
mov
pusha
aaa
out
jbe
pop
insl
lret
dec
cmpsb
fidivs
fcmovnu
dec
aaa
test
lcall
mov
addr16
or
nop
mov
mov
fs
in
or
pop
inc
xor
add
cmp
call
push
mov
mov
pusha
js
inc
sbbl
push
dec
add
lcall
cld
xchg
ret
loope
scas
fs
fdiv
lcall
add
mov
jle
adc
sub
mov
sbbb
ret
rorb
or
lcall
cmp
pop
jg
lret
mov
mov
call
inc
and
push
or
xorl
mov
xchg
movsl
aad
xchg
mov
mov
xor
or
ficoms
push
nop
jne
bound
imul
aad
cmpsb
dec
ss
xchg
in
rcrl
paddd
dec
sub
mov
add
jmp
adc
out
dec
sub
inc
xchg
das
sahf
bound
and
cmp
lret
push
cld
aas
and
pop
adc
in
fsubs
pop
xchg
adc
dec
test
daa
jb
sarb
lahf
dec
imul
insb
out
push
dec
sti
cmp
sbbl
das
hlt
mov
out
stos
push
push
std
or
jle
scas
mov
outsb
push
dec
loope
mov
shlb
mov
repz
out
ja
filds
and
fmuls
and
jecxz
or
stos
mov
repz
jmp
push
dec
jg
rorb
jbe
shrl
iret
xor
adc
jae
push
cmp
mov
pop
shl
aaa
sbb
mov
out
push
push
hlt
pop
xlat
jae
and
sbb
xor
pop
addr16
xchg
mov
adc
js
or
clc
andl
and
nop
inc
in
cmp
out
push
inc
cmp
or
sbb
jp
pushf
in
sbb
idivb
add
or
popl
cli
sahf
mov
cs
dec
outsb
dec
or
mov
push
dec
adc
fnsave
sbb
mov
lods
mov
sub
inc
std
push
mov
mov
sub
inc
call
dec
nop
loopne
inc
push
mov
sbb
xchg
movsb
mov
std
loopne
xchg
mov
rcl
mov
mov
out
fsubrl
push
sarb
mov
rol
cmp
sbb
lock
mov
pop
dec
and
xor
je
popa
mov
bound
jmp
lahf
jecxz
fnsave
test
fucomp
cmp
push
adc
jle
jl
ljmp
jp
notb
clc
test
rcrl
mov
add
dec
scas
pop
int3
add
and
and
daa
daa
cmpb
dec
mov
jecxz
enter
nop
jmp
insb
loopne
mov
sub
add
inc
sub
insl
cs
sahf
lods
mov
out
or
arpl
inc
ds
clc
lock
pop
test
cmpsl
jmp
push
ficomps
jge
cli
sbb
mov
inc
popf
jns
fdivrp
rorb
push
jmp
cmp
iret
pop
out
dec
inc
ss
dec
bt
outsl
pop
insb
cmpsb
xchg
hlt
int
scas
insl
cmp
lods
cmp
repz
sub
lock
mov
movsb
rolb
fcmovnbe
mov
aam
jge
pop
mov
fdivrs
les
push
and
sub
mov
xchg
daa
xor
sbb
dec
cmp
mov
cmc
add
arpl
dec
sub
test
je
adc
pop
arpl
scas
mov
int
fadd
cmpsb
sub
lock
mov
into
mov
sbb
mov
and
pop
mov
adc
std
add
call
movsl
or
les
sbb
popf
jmp
aaa
imul
inc
leave
mov
decl
ret
popf
sbb
xor
cmp
mov
sub
or
inc
or
xchg
lock
je
repz
jmp
and
leave
hlt
insl
fdivs
jbe
pop
jle
jp
test
and
cmp
fcoml
or
mov
stc
mov
add
dec
stos
sbb
jno,pn
pusha
orl
xor
adc
push
add
sarb
mov
mov
test
fbstp
cs
adc
sbb
and
xchg
incb
jmp
test
loop
neg
daa
pop
and
xchg
add
sub
pop
aas
xor
stc
sahf
jb
xor
or
push
sub
mov
imul
out
popf
scas
rol
imul
and
xchg
or
pop
mov
inc
std
jl
jle
lods
xchg
pop
push
dec
xchg
js
das
arpl
cli
es
jnp
xchg
into
dec
push
decl
sbb
jmp
pop
jg
es
mov
fiaddl
imul
jae
in
call
mov
scas
mov
flds
cmp
stos
dec
or
jb
int
mov
push
push
dec
and
mov
mov
sbb
or
je
scas
out
aas
sub
insb
dec
mov
cmc
mov
push
mov
jle
subl
cmpsl
dec
mov
insb
mov
sahf
ds
xor
sub
jmp
test
cmp
pop
popa
or
mov
lahf
cld
xor
push
sti
popl
outsb
push
dec
sbb
ret
sub
xchg
pop
gs
je
mov
gs
push
xor
outsb
ret
xchg
fs
outsb
inc
or
imul
rcrl
push
inc
int3
pushl
cmc
repnz
jns
sub
dec
xchg
add
cld
mov
int
popf
sahf
mov
aad
adc
push
add
jbe
jns
and
xor
pop
gs
cmpsb
loopne
scas
lock
test
mov
pop
scas
fdivrs
pop
and
fnstenv
adc
jle
rorb
scas
scas
cmpsl
xorl
xor
cmp
leave
cmp
arpl
mov
push
add
aaa
add
xor
sbb
decl
imul
cmp
mov
cmp
das
and
shlb
add
or
fidivs
shll
ja
adc
lea
pop
dec
js
jo
mov
dec
cmp
fisttpl
inc
cld
in
dec
sub
add
mov
dec
lock
jp
jne
xchg
mov
inc
jb
iret
add
mov
push
mov
mov
jne
in
jle
dec
cwtl
and
jno
arpl
je
add
shl
xchg
nop
sar
dec
das
pop
loope
das
add
sub
mov
aam
pop
and
lods
fbstp
enter
mov
dec
mov
je
lea
popl
out
nop
mov
loope
dec
pop
loopne
or
pop
mov
call
les
imul
jb
leave
bnd
cmp
std
in
mov
xchg
lret
adc
cmpb
pop
mov
dec
test
sbb
lock
or
mov
inc
inc
add
enter
lahf
lret
shlb
sarl
pop
stos
xor
aaa
sbb
dec
pop
mul
nop
popf
ljmp
xlat
rcrb
push
cmpsb
and
test
imul
sbb
fs
or
jns
lea
or
pop
clc
adc
out
sti
jne
imul
xor
outsl
mov
cmpsb
mov
aas
dec
sub
rcr
outsl
sub
testl
mov
loopne
mov
fidivrs
movsb
insb
jne
inc
jmp
xor
aad
push
test
mov
pop
jbe
mov
mov
imul
add
enter
je
push
jmp
xor
mov
cmpsb
push
cmp
aad
adc
faddl
push
mov
dec
xchg
jp
insl
dec
mov
out
cld
sbb
aam
mov
das
sub
jo
fwait
lea
jns
dec
pushf
mov
sub
iret
jno
sbb
cmp
sub
mov
test
out
stc
cmc
imul
ret
fistl
push
nop
sbb
icebp
push
sub
add
pop
mov
mov
jbe
or
jo
pop
das
popf
inc
stc
pop
movsl
add
mov
insl
pop
decl
jns
sub
cmp
jmp
pusha
jno
fadds
ss
jl
nop
enter
sbb
or
inc
dec
adc
dec
pop
lock
neg
mov
roll
cmp
divb
adc
hlt
inc
mov
popf
push
pop
push
sbb
mov
jge
out
pop
rcrb
jne
cmp
lock
lods
orl
je
sub
mov
pop
pop
mov
stos
into
mov
mov
xchg
addb
aas
pop
cmp
and
hlt
jne
lods
gs
insb
inc
jo
adc
loop
jl
mov
xor
imul
mov
cmp
enter
in
pop
or
dec
mov
xor
test
pop
mov
add
fisttpl
push
in
pop
stc
test
pop
and
fxch
imul
fdivrs
jno
mov
xchg
sbb
jno
iret
gs
inc
mov
fisubl
cmp
fcompl
je
xchg
out
lea
imulb
or
push
shrl
in
push
repz
sbb
addl
pop
stc
mov
adc
mov
rcl
dec
adc
bound
and
mov
fstps
movsb
fbstp
arpl
outsb
inc
mov
aaa
adc
sti
jo
sahf
ss
xlat
mov
lret
mov
xor
out
and
or
and
adc
adc
push
icebp
sub
fmul
add
xor
sbb
dec
cmp
xchg
mov
push
or
or
ficompl
push
cli
addb
inc
int3
mov
adc
les
imulw
rep
push
mov
clc
adc
mov
or
xlat
jg
xchg
cmpsb
ds
add
xor
out
or
or
inc
mov
cwtl
outsl
test
mov
sbb
bound
les
xchg
sbbl
in
mov
add
loopne
xlat
movsl
add
pop
xor
movsl
les
stc
pusha
stos
daa
pop
repnz
mov
push
pop
pop
cmc
lret
push
loopne
movsb
js
scas
testb
test
adcb
and
dec
or
pop
xor
jb
mov
dec
out
stc
inc
mov
lahf
inc
pusha
and
movsb
inc
dec
icebp
lret
repz
negl
imul
dec
jecxz
lea
jo
push
ja
aaa
cwtl
inc
jmp
mov
push
or
xorl
ret
mov
cmp
jns
in
fadd
insb
fidivs
adc
mov
imul
pop
or
out
lea
jo
out
insl
fmulp
out
roll
clc
sub
cmpsb
add
enter
dec
mov
inc
push
mov
hlt
inc
pop
mov
pop
pop
jmp
and
and
or
je
cs
les
add
push
add
cmc
inc
and
adc
arpl
push
lcallw
scas
xor
ja
movsl
pop
pop
mov
fcompl
pusha
shl
data16
out
jge
ss
repnz
pop
out
jp
pop
cmp
sbb
jg
out
push
test
into
fsubrs
cmpsb
push
popf
scas
cs
sub
cli
push
sbb
popa
stos
imul
nop
icebp
push
cmp
or
cmp
add
or
lds
mov
cmc
xchg
sub
fidivs
mov
xchg
adc
cmc
test
test
or
push
mov
lahf
stos
negb
in
xchg
jns
adc
push
ljmp
popf
xchg
hlt
or
bound
or
and
mov
jb
dec
xor
pushl
mov
adc
into
pop
dec
pop
xchg
xchg
push
inc
or
mov
mov
pop
test
jl
ret
iret
cmp
push
mov
xorb
out
das
jbe
jl
aas
addr16
lret
adc
push
xchg
imul
insl
or
out
in
mov
addr16
lahf
sarl
std
mov
loope
aad
sub
outsl
jnp
lahf
push
into
jl
sbb
fs
push
cmp
fs
mov
enter
icebp
jl
pop
pop
jg
lahf
jne
jg
push
dec
jge
and
pop
mov
out
jo
rcll
push
add
outsb
push
mov
pop
loope
mov
gs
bound
or
cli
bnd
cmpsl
test
cmpsb
stos
je
pushf
pushf
movsl
out
mov
and
jo
testb
jb
sub
insb
mov
xor
pushf
jnp
inc
test
xor
mov
sub
sub
sbb
pop
popf
push
push
dec
gs
scas
pop
push
imul
idivl
imul
test
xor
cmp
outsb
out
popa
cld
jo
imul
add
aas
add
add
sahf
test
or
enter
inc
sbb
nop
dec
ds
add
fs
jmp
mov
mov
cmp
xor
es
jp
xor
or
scas
fnstcw
insl
inc
dec
pop
fisubrl
sbb
fadds
adcl
sbb
sub
out
add
adc
fistpl
cmp
dec
sub
dec
loopne
test
jae
lret
aaa
xor
xorl
out
out
adc
imul
out
imul
aaa
in
cmp
stc
test
in
push
mov
dec
dec
lret
jp
mov
ret
lret
ret
push
mov
das
pop
test
stos
sbb
xor
inc
mov
push
jecxz
inc
push
fwait
rcll
jp
outsl
inc
jno
ret
cmp
or
xchg
jbe
mov
inc
mov
jmp
sub
push
cmc
mov
daa
xchg
jp
movsb
fs
sahf
xor
pusha
cli
in
ss
xchg
stos
mov
mov
pop
pusha
out
xchg
scas
push
and
lods
mov
rcl
adc
ret
pop
add
cmp
insl
test
xor
inc
invd
aas
mov
out
jp
inc
mov
and
scas
cmp
inc
xchg
or
xor
in
aam
jecxz
nop
pop
cltd
mov
xorl
stos
push
out
mov
mov
mov
cmp
push
push
popa
sbb
xchg
scas
mov
dec
out
mov
and
mov
ja
mov
xchg
mov
rorl
fs
pop
push
in
fisubl
adc
lahf
xor
jecxz
negb
sub
mov
repnz
out
fnsave
mov
out
mov
mov
cld
or
lretw
xchg
movsl
fistl
leave
jnp
xor
jg
sub
ret
cmpsl
xor
divl
mov
cltd
or
pop
sub
rcr
mov
xchg
sbb
popf
daa
jp
push
in
or
xor
addb
xchg
cld
pop
or
cmc
mov
fidivrs
lcall
inc
add
andb
cmp
dec
es
mov
shl
pop
das
xchg
gs
push
insl
mov
inc
arpl
int3
jb
mov
je
std
push
dec
xor
incl
std
add
inc
xor
mov
or
add
rcrb
negl
outsb
mov
mov
or
imul
fnstsw
test
xlat
add
inc
cli
or
setge
and
sub
imul
sub
jne
test
jle
lahf
fistpl
jge
mov
mov
sub
mov
mov
movsb
cld
push
and
sti
movsl
inc
pop
pop
push
xchg
jle
adc
in
xlat
movsb
int3
lcall
xchg
push
movsb
iret
popf
in
icebp
mov
movsb
cmp
inc
xchg
in
and
push
popf
and
adc
hlt
xchg
clc
add
mov
ret
roll
sti
dec
sub
push
int
in
je
cmp
pop
add
mov
in
add
add
sub
adc
mov
fwait
mov
das
pop
lods
pop
xchg
xchg
adc
cmc
aad
es
xchg
repz
inc
pop
jge
nop
and
fidivrl
mov
pop
lcall
lds
sub
lock
loop
adcb
jg
xchg
fdivrs
ja
out
adc
daa
ljmp
leave
mov
mov
mov
std
or
test
imul
ss
mov
iret
mov
push
or
push
jl
lahf
stos
inc
stc
jg
inc
loopne
data16
or
stc
fwait
sbb
mov
in
adc
sbb
loope
ss
in
jl
rolb
pop
add
cmpsb
xchg
pop
fcmovne
lahf
and
fisubrl
cmpsl
rcr
out
cli
xorb
fcmovb
fdivl
stos
or
ret
rcl
popa
test
lret
lret
movsl
push
inc
repz
mov
pop
into
adc
bound
cli
mov
dec
xchg
xchg
sub
scas
shlb
mov
sub
lods
clc
jecxz
punpcklbw
stc
pushf
and
cli
loope
fnstcw
adc
push
lods
push
ljmp
add
rcl
enter
push
pop
or
cmp
repnz
mov
cld
xchg
add
aam
aam
mov
and
push
mov
inc
sbb
sbb
jae
adc
mov
xchg
aam
int3
ja
out
stos
enter
cmp
adc
pop
push
out
push
imul
pop
push
insb
ss
sarb
out
adc
cmpsb
sti
out
imul
loop
add
xlat
push
pop
insl
add
shlb
inc
jne
popa
imul
sbb
jl
mov
hlt
std
cmp
pop
movsl
jnp
hlt
jp
push
or
xchg
cmp
pushf
inc
pop
dec
jecxz
addr16
lret
adc
sahf
and
scas
xchg
test
lret
call
sub
sbbb
out
cli
xchg
sub
xor
mov
clc
dec
jne
pop
pop
mov
loope
lret
imul
xor
mov
outsl
mov
aam
jno
mov
push
mov
mov
pop
shrl
push
xor
fwait
imul
stos
cmp
popf
pop
push
mov
loop
ljmp
push
daa
adc
pop
sbb
inc
inc
mov
or
push
xor
mov
dec
push
jl
mov
add
fsub
push
clc
mov
fisttps
jbe
mov
or
adc
jne
xor
scas
jl
jge
pop
repnz
jmp
out
pop
rcll
push
or
jne
call
and
xor
mov
jl
cmp
xchg
stos
xchg
xor
jae
mov
sbb
dec
test
pop
adc
push
orl
mov
mov
push
mov
push
pusha
sub
pop
mov
xchg
add
inc
mov
lret
andb
vmovhps
sbb
push
inc
test
jne
pop
push
pop
stos
and
addl
inc
sahf
in
mov
fists
mov
push
movl
xchg
or
push
mov
jns
mov
js
lahf
jmp
xorl
mov
out
aad
lods
mov
fsubrl
imul
inc
sbbb
cwtl
je
xchg
pop
lods
push
push
ss
inc
outsb
cmp
or
dec
subb
or
scas
popf
lock
js
pusha
mov
jecxz
inc
scas
jnp
cmpsb
mov
mov
push
xchg
das
xchg
pop
ja
loop
and
les
das
dec
shll
or
and
in
pushf
inc
repz
ljmp
repz
outsb
fidivrs
push
jnp
jbe
push
dec
fstps
pusha
sbb
shlb
loope
stos
mov
jno,pt
mov
adc
movsb
sahf
pushf
xor
and
aam
jae
push
mov
mov
push
gs
dec
jnp
out
xlat
mov
je,pn
das
push
dec
fwait
dec
sbb
inc
leave
dec
loop
das
pavgb
cmp
adc
test
and
iret
pushf
adc
adc
adc
mov
outsl
dec
jecxz
das
mov
scas
mov
xor
inc
out
or
hlt
addb
mov
adc
sbb
push
mov
aaa
testb
or
cmp
sub
mov
arpl
sub
stos
jns
push
aam
add
stc
jo
jnp
stos
add
xor
add
pop
mov
repz
fld
fs
outsl
cmp
mov
sar
stc
sub
les
daa
or
mov
inc
adcb
pop
stos
jl
ret
lret
or
in
in
in
or
xchg
sbb
pop
mov
outsb
and
ja
add
ret
lock
fidivrl
xchg
repnz
repnz
scas
adc
add
xor
aam
icebp
inc
sub
stos
xor
dec
xchg
mov
cld
inc
notb
mov
pop
sbb
pop
cld
xchg
or
cld
cmp
fs
or
mov
sbb
stos
je
cmpsb
enter
ret
cwtl
cvtpi2ps
aaa
jbe
sbb
lods
cmovg
push
jo
mov
in
jbe
jno
daa
mov
mov
push
lods
cmc
mov
add
sti
lcall
mov
adc
cld
popa
leave
jge
shl
cmpsl
sub
scas
xchg
xor
mov
xor
fsubrs
lods
adc
out
jno
xchg
in
xchg
daa
adcl
mov
cmc
jp
jns
jecxz
cmp
pop
pop
mov
jge
mov
sub
add
cmc
and
push
cmpsl
cmp
mov
pop
outsb
stos
lahf
inc
jle
nop
in
cs
pop
mov
jmp
sub
pop
inc
decl
push
fcmovnbe
and
int
dec
adc
fldl
call
xor
pop
and
ss
jbe
bound
inc
faddl
jle
mull
jecxz
aam
lods
movl
mov
div
in
jns
sub
clc
push
inc
push
ljmp
hlt
repz
cmpsb
cwtl
xchg
in
out
stos
jnp
cld
out
loopne
in
adc
cmp
in
js
repnz
mov
ret
dec
leave
add
movsb
adc
sti
arpl
pop
lods
aas
ljmp
stos
jnp
sahf
mov
js
push
xor
out
mov
mov
inc
adc
xchg
roll
rolb
cs
push
push
enter
nop
lds
push
leave
jmp
test
outsl
push
inc
pop
movl
dec
stos
loopne
or
or
nop
xlat
sbb
or
rolb
lret
negb
mov
adc
cmpsb
ret
dec
or
out
mov
xchg
or
push
inc
outsb
dec
xor
xchg
adc
jo
scas
aas
test
cmp
add
dec
push
mov
cmpsb
divb
sbb
rcrb
jae
addr16
outsl
pop
ljmp
inc
inc
dec
fadds
jg
mov
mov
adc
sbb
subl
jbe
jmp
js
mov
or
xor
mov
clc
out
fcomps
inc
insl
sahf
xchg
lahf
aas
fmuls
pushf
xor
es
mov
in
jl
in
in
jbe
cli
lret
mov
push
ja
enter
fcmove
add
orb
xor
stos
test
outsb
es
pop
pop
sub
popa
push
xchg
mov
loop
xchg
loope
fwait
pop
or
jl
push
mov
leave
mov
ret
push
enter
cli
hlt
push
xor
test
cs
mov
add
sub
push
cmpsb
dec
cmp
mov
dec
or
inc
mov
xchg
xchg
inc
cmp
fidivs
mov
aaa
pop
mov
xor
rolb
push
jbe
ror
jl
test
fistl
lods
mov
mov
pop
xchg
jb
push
jl
or
fstpl
xor
pushf
add
pop
mov
out
sarb
stos
fdivp
fwait
daa
lret
mov
jmp
dec
into
mov
out
sti
mov
pop
idiv
fmuls
xlat
subl
sbb
sbb
int3
dec
mov
ss
pop
in
mov
pop
das
rcl
adcl
cli
and
shll
subl
xchg
jecxz
dec
das
jno
icebp
cli
inc
push
adc
addb
es
sti
jg
or
mov
add
shl
rorl
stos
loope
ret
imul
jns
stc
ret
ss
cltd
lods
xor
mov
arpl
pop
xor
jmp
inc
out
loopne
dec
xor
add
cmpsb
aad
cmp
repz
jbe
push
nop
push
lods
rcr
mov
nop
jp
dec
adc
dec
xchg
add
push
mov
jmp
sbb
arpl
add
fisttpl
cmp
ljmp
sar
sahf
cltd
or
mov
icebp
out
mov
gs
scas
leave
jae
push
pop
in
dec
jge
lods
fists
cmpb
mov
mov
pop
and
aad
popf
or
pop
inc
loopne
ss
xor
push
push
jmp
ja
gs
ss
xchg
mov
mov
or
dec
inc
and
adcb
in
cmp
je
sti
xchg
in
add
mov
popa
dec
sti
inc
rcrl
cmp
or
and
icebp
aam
stc
xchg
test
mov
ret
mov
pop
adc
inc
shlb
pop
ljmp
jle
negl
mov
pop
inc
pop
xchg
add
out
js
dec
xor
add
mov
sbb
fnstcw
std
fxch
adc
shr
add
rorb
aas
xchg
mov
and
jecxz
add
gs
das
mov
sub
fdivp
fcoml
or
repnz
outsb
int3
push
ljmp
sub
std
sub
popf
pop
loope
inc
xchg
push
cmp
mov
cmp
ja
adc
inc
stos
fnsave
inc
fimull
daa
ficoms
mov
and
ret
push
insb
mov
rcrl
scas
inc
addr16
gs
inc
icebp
rcl
das
mov
faddp
jae
cld
push
fidivl
push
lock
imul
daa
pop
pop
stc
cltd
xchg
hlt
lds
xor
inc
xor
ret
xchg
dec
sahf
push
data16
mov
scas
out
daa
rcrb
or
push
add
pop
mov
mov
pop
sbb
mov
das
push
and
dec
adc
xor
testb
or
pop
xor
dec
sti
mov
pop
push
pusha
aad
js
fdivrs
xchg
outsl
rolb
out
sub
jne
xchg
out
jecxz
jno
sub
sti
push
mov
popf
jecxz
pop
mov
aad
lret
stos
sbb
mov
adc
roll
inc
sbb
loope
insl
addr16
rcrl
dec
lret
les
xchg
adc
fimuls
arpl
push
xchg
inc
sub
insb
sub
xor
pop
push
jp
andl
add
nop
nop
mov
insl
stc
mov
dec
popf
insl
rcrl
cmp
push
sbb
jmp
movsl
jns
or
mov
xor
sbb
scas
xchg
or
jmp
xor
mov
pop
or
mov
js
xor
xchg
aaa
push
sub
mov
out
and
scas
lcall
mov
sub
enter
inc
add
in
and
xchg
add
push
imul
pop
pop
sbb
imul
mov
mov
movsb
mov
insl
arpl
xor
xchg
jnp
fsts
out
es
dec
cmpsb
sbb
jae
mov
pop
push
pusha
inc
insl
cli
push
mov
push
inc
xor
jo
outsl
sub
push
cld
push
mov
xchg
pushf
cmp
lods
movsl
add
int3
xchg
fldenv
in
fnstenv
loopne
movsl
dec
mov
testb
inc
lea
xor
ret
jb
lret
cmp
cmp
out
ret
mov
pop
push
mov
push
je
mov
xchg
add
test
mov
sti
adc
fucomp
and
mov
dec
add
in
insl
mov
mov
cmp
iret
das
andb
or
stc
std
clc
movsb
lods
pop
or
dec
push
mov
inc
loopne
jns
add
sub
shlb
xchg
in
in
mov
and
pop
popa
hlt
xor
xchg
dec
popf
pop
dec
or
ret
sub
into
pop
xor
lds
test
push
mov
faddp
inc
addr16
sahf
adc
fdivs
sub
inc
out
mov
mov
lret
lds
or
gs
sub
adc
xchg
mov
push
and
popf
cmpb
mov
add
push
add
jno
cmc
push
cmpsl
test
sbb
add
xlat
jns
notb
mov
xor
cmp
xchg
dec
xor
sub
cmc
sub
mov
pop
lahf
xor
ja
dec
pop
lcall
lock
dec
xchg
movsb
inc
es
nop
mov
cmpsb
mov
push
imul
aaa
subps
cmp
aas
test
in
or
lods
cmc
cmp
mov
cmp
aad
imul
fldl
dec
out
scas
test
xchg
mov
into
popa
fdivs
pop
jb
sahf
lret
int3
cmpsb
cld
cmpsl
lds
bound
cmc
lds
testb
push
std
cmpsl
lock
fsts
push
negl
ss
out
sbb
push
loop
in
inc
shld
add
xchg
lods
fabs
mov
mov
lock
xchg
add
or
vunpcklps
jge
dec
test
inc
insl
cmp
jns
adc
shrb
sbb
xor
ljmp
add
dec
into
popf
xchg
mov
sub
dec
rcll
add
imul
inc
sub
lret
push
lods
sub
dec
adc
mov
push
ss
add
mov
cmc
push
gs
add
and
pop
mov
cmp
or
cwtl
mov
sub
cmp
daa
sub
inc
aam
fsubrp
adc
mov
mov
or
sbb
and
pop
mov
pop
sbb
xchg
negl
stos
push
adcl
sub
push
ret
mov
pop
sahf
aaa
cmp
imul
inc
push
out
pop
xchg
in
dec
xchg
lock
or
dec
xor
aaa
shrl
rorl
jecxz
adc
and
add
pop
test
mov
mov
push
in
mov
icebp
test
lcall
inc
decb
testl
lock
mov
xchg
xor
xor
cmp
pop
push
repnz
out
or
cltd
jne
mov
imul
push
fisubrs
outsl
cmc
xchg
loop
sbb
pop
dec
jae
dec
pop
fistpl
or
or
jg
xchg
xor
lds
inc
clc
sub
and
xor
popa
and
jne
mov
imul
imull
mov
jns
jle
std
add
jmp
lret
pop
outsb
shrl
adc
cmp
dec
mov
rcl
out
les
sti
jne
push
jb
xchg
out
into
insl
mov
nop
mov
mov
ret
push
mov
mov
loopne
cmp
ljmp
inc
js
jae
adc
push
hlt
mov
mov
fcoml
jnp
insb
cltd
and
and
sbb
daa
push
aad
jns
xchg
cmp
decb
add
insb
and
adc
insb
adc
repnz
sbb
scas
fists
call
incl
or
cmp
and
adcl
fldcw
inc
inc
add
ja
adc
mov
pop
cmp
test
and
adc
mov
aam
scas
adc
ds
lea
jno
aad
mov
mov
mov
insb
push
and
out
scas
jecxz
add
push
mov
aaa
add
call
inc
mov
cwtl
sub
lock
cmpsl
inc
pop
or
sub
push
stc
ss
adc
in
lahf
stos
mov
xor
mov
pop
in
xlat
shlb
pop
add
test
adcb
inc
cs
adc
dec
cwtl
add
test
adc
mov
outsb
push
push
outsb
push
fs
adcl
pop
and
arpl
test
cli
or
mov
xchg
rep
sbb
inc
sbb
lret
xchg
cmpsl
or
push
xor
insl
shll
dec
arpl
fwait
pop
scas
sti
cwtl
jns
xor
push
cmp
lahf
icebp
ljmp
les
mov
js
test
adc
insb
test
jns
out
or
add
sbb
xchg
ds
and
mov
faddl
mov
inc
cld
iret
sbb
cmp
popf
shl
roll
xor
mov
insb
jbe
test
sub
xchg
or
adc
rcll
jne
adc
add
clc
jl
lcall
mov
inc
lcall
xchg
jg
outsl
lds
imul
pop
loope
data16
pop
test
mov
lret
xchg
arpl
lods
add
dec
xchg
scas
outsl
addl
sub
mov
pop
adc
jnp
sbb
in
push
mov
aam
leave
shr
sub
inc
jg
sbb
pop
rorb
cvtps2pd
sub
rorl
fcompl
in
mov
inc
and
xchg
les
jp
inc
mov
aas
andl
jns
xchg
pop
push
movsb
js
mov
out
ljmp
xchg
stos
rclb
js
inc
clc
lahf
in
lahf
sub
push
fucomp
movsl
mov
test
mov
mov
mov
scas
adc
jne
test
js
nop
inc
cli
jno
xchg
mov
cmp
sbb
or
inc
daa
imull
pushf
sub
icebp
ffreep
out
lods
or
sbb
mov
mov
pop
mov
or
push
leave
mov
mov
dec
jl
sbbb
sub
mov
out
jg
push
cwtl
cmpsb
sbb
mov
inc
xchg
sbb
ret
add
mov
mov
push
jbe
ds
jg
inc
mov
dec
mov
mov
adc
rorl
in
push
jb
cmpsl
movsl
outsl
repz
mov
jecxz
das
out
add
testb
fnstcw
rorl
jmp
jmp
sbb
les
cmpsb
xchg
jo
mov
jg
xchg
or
dec
jp
sub
cmp
movsl
dec
cmp
push
xchg
shrl
mov
inc
mov
dec
addr16
in
das
sbb
push
fcomi
in
clc
jo
xchg
xchg
jb
mov
mov
push
in
add
mov
cwtl
loopne
jecxz
adc
enter
into
aam
or
in
test
mov
push
aaa
scas
rol
xor
imulb
pop
jl
rcr
cmp
adc
pcmpeqb
push
jbe
sahf
or
cmp
adc
jge
out
dec
cli
fisttps
pop
shrl
icebp
call
xor
orb
in
imul
inc
sbb
std
mov
xor
xor
fbstp
pop
jmp
adc
mov
mov
stos
add
jb
shlb
push
push
xchg
aam
jl
add
cmp
or
fstps
lods
pop
insb
fwait
pop
icebp
pop
out
add
mov
jge
xor
jbe
inc
ja
adc
sub
or
cwtl
or
sahf
push
mov
add
xchg
hlt
mov
aad
clc
bound
movsl
cltd
xor
es
mov
cli
inc
mov
and
mov
mov
sub
loope
loope
sub
mov
mov
dec
ds
inc
pop
pop
hlt
xor
sbb
rcl
jbe
out
push
pop
mov
mov
or
fiaddl
pop
mov
rcr
popa
outsl
cmp
nop
jge
adc
dec
scas
mov
mov
jmp
or
in
push
cmpsl
cmc
pop
hlt
lahf
testb
mov
or
xchg
outsl
xlat
dec
psubusw
xorl
and
dec
not
cmp
ret
test
mov
sub
daa
test
mov
pusha
pop
jo
pop
insb
in
sti
pushf
fmuls
int3
dec
fs
fsts
push
xchg
xor
jmp
mov
mov
xor
nop
fs
fiadds
dec
push
or
xor
sti
aad
movsl
pop
mov
jl
sbb
xor
mull
sub
add
dec
in
insb
sti
jb
loopne
add
mov
dec
std
jo
shll
mov
xchg
out
inc
imul
mov
and
xlat
push
call
xchg
sbbb
pushf
mov
cld
ljmp
mov
xchg
in
sarb
mov
daa
outsl
lods
mov
sbb
ds
movsb
lods
mov
lock
dec
and
loop
jb
pop
not
out
das
xchg
mov
icebp
loopne
xchg
or
je
mov
and
out
add
clc
cmp
mov
and
lds
mov
shl
enter
insb
out
fnstsw
add
sub
sub
push
push
mov
mov
movsb
push
repz
xlat
xor
out
mov
adc
mov
sub
pop
out
or
outsl
fsubs
jno
roll
mov
in
incb
pop
dec
lds
xchg
mov
jecxz
arpl
sbb
std
mul
out
das
adc
dec
jnp
inc
mov
jno
and
jb
dec
sub
sub
jl
sbb
fcompl
adc
bound
outsl
xchg
fs
cmp
dec
and
jmp
pop
mov
sub
movsb
cmp
call
movsl
mov
ja
or
out
fidivl
cs
insb
push
neg
cmpsb
jns
pop
add
or
scas
or
mov
sti
mov
cmp
jge
add
and
inc
int3
push
cmp
sbb
inc
inc
xor
adc
popf
das
hlt
mov
or
mov
xor
xlat
in
cmp
jge
cmc
mov
and
out
sub
in
mov
or
sti
test
adc
cmpsb
sub
pushf
movsl
xchg
cmpsl
add
out
inc
out
inc
sbbl
imul
pop
dec
ret
fs
add
xor
imul
or
dec
push
mov
mov
push
outsb
dec
adc
mov
lods
lcall
icebp
sub
ds
cs
or
cvtps2pi
and
inc
cmp
das
push
cmp
cmp
rol
fstl
lds
or
pop
push
xchg
inc
inc
nopl
sahf
adc
push
xchg
dec
pop
xor
rcrb
push
xchg
int3
mov
push
fisubrs
cwtl
push
stos
addr16
dec
mov
loopne
add
pusha
xchg
sub
push
or
pop
repnz
push
out
mov
pushf
pop
pop
sub
mov
inc
fsub
lcall
adc
xchg
sub
sub
and
aaa
roll
iret
jl
or
test
out
jecxz
fwait
pop
cmpsl
das
loop
inc
jg
xor
int
daa
sarl
or
cli
inc
fs
insb
cli
pop
dec
in
dec
ret
cli
push
inc
push
pop
and
xchg
outsl
jno
xchg
or
adc
test
pop
and
sub
add
enter
enter
out
scas
test
push
cli
pop
movsl
test
sbb
ret
or
or
or
or
test
adc
arpl
dec
mov
mov
push
pop
xchg
xchg
shl
in
add
xchg
cwtl
in
das
push
paddq
mov
pushf
std
push
imul
cmp
aas
sbb
ds
or
gs
push
add
mov
clc
fisubl
and
leave
pop
sub
test
and
pop
and
xor
in
nopl
lcall
clc
punpckhdq
addr16
dec
test
aas
int
fsts
test
adc
iret
int
decl
xor
aas
mov
mov
dec
mov
gs
push
mov
push
push
mov
xchg
mov
sbb
test
ficoml
in
or
jo
adcb
dec
pop
sub
and
iret
lret
push
arpl
mov
cmpsb
jae
das
push
call
lcall
inc
iret
aad
les
hlt
xchg
push
push
in
fwait
jecxz
push
cmp
dec
loope
jns
stos
jb
das
cmp
xor
mov
fnstsw
popa
vphaddwd
shr
mov
rcrb
roll
imul
xchg
mov
stos
std
ds
dec
loop
adc
adc
inc
movsl
rcrb
js
jp
out
mov
in
mov
xor
cmp
popl
pop
sbb
sub
stos
imul
xchg
mov
cmp
jge
inc
mov
mov
fstl
jb
mov
jg
sub
add
push
lcall
clc
push
sbb
xlat
sub
or
loopne
and
movsb
sbb
push
cmc
mov
lds
les
pusha
and
pusha
lret
adc
fs
pop
xor
adcb
ds
push
popa
pop
pop
popf
lahf
test
arpl
mov
fstl
mov
dec
mov
test
scas
out
jb
pop
cld
mov
lret
std
xchg
icebp
cmpb
ret
ja
pop
push
sub
push
and
mov
insl
cld
aam
and
dec
cmp
rcrl
and
jne
subb
sbb
adc
pop
push
ss
ja
inc
push
adc
and
mov
add
ud2
shll
push
test
out
cmp
push
push
mov
fimuls
insl
mov
mov
fstl
aad
inc
shlb
xlat
mov
stos
xchg
xchg
daa
jne
sti
xchg
cmp
mov
pushf
xor
pop
test
xchg
inc
cltd
inc
sbb
xchg
xchg
jb
sub
iret
dec
xorl
mov
xchg
fiaddl
push
mov
aad
mov
jmp
jnp
aas
mov
test
data16
and
dec
adc
jae
xchg
inc
jo
mov
push
enter
xchg
sub
mov
push
mov
push
or
xchg
add
js
or
mov
imul
jmp
testb
std
sbb
js
stos
cmp
cmp
nop
xor
push
loope
popa
loopne
std
xor
pop
push
sbb
out
into
dec
out
mov
inc
push
mov
lock
ss
push
add
imul
jp
test
mov
fidivs
push
test
mov
adc
call
sarl
inc
fwait
jge
and
stos
fst
mov
and
enter
pusha
dec
mulb
cmp
ja
shrb
mov
shrl
into
pop
push
or
pusha
aaa
jns
sub
outsb
mov
push
xchg
sbb
std
dec
and
sbb
mov
aad
nop
push
lea
or
pop
push
aas
outsb
test
sbb
jnp
js
cs
push
xchg
mov
jmp
mov
mov
and
loope
mov
cmc
or
popf
cs
dec
aam
pop
dec
adc
in
mov
les
imul
mov
test
or
pcmpgtw
push
jmp
inc
ss
cmp
repnz
mov
push
bnd
push
arpl
xchg
loope
add
pop
cli
cmp
dec
popa
mov
idivl
dec
sbb
xor
pop
dec
cltd
jp
gs
dec
push
std
pop
test
mov
push
add
or
inc
ljmp
test
arpl
pop
sbb
mov
xchg
sub
int
nop
jbe
scas
lcall
pop
jb
shll
rclb
repz
stc
es
cmpl
popa
mov
and
mov
dec
push
or
sub
rcll
lock
or
movsb
loope
fldpi
jne
or
jbe
mov
ljmp
jle
pop
lahf
out
cmp
daa
hlt
xor
mov
push
jbe
in
call
test
dec
jge
push
xchg
or
mov
cmp
pop
mov
in
pop
lcall
add
push
dec
jnp,pt
xchg
sbb
sti
pop
and
push
push
pop
xchg
movsb
aas
fildll
pusha
dec
ss
inc
outsb
inc
out
in
xlat
fwait
es
int3
adc
cs
notl
out
fcoms
negb
stc
sbb
dec
xor
cmp
pop
push
xchg
fucomp
jmp
push
test
pop
in
push
mov
loop
jecxz
mov
sbb
jns
lret
push
xchg
dec
es
mov
ja
jb
fildl
pop
lock
incb
lea
add
cmp
cmc
mov
push
push
xchg
ss
lret
xor
popf
in
sub
or
add
mull
inc
in
push
into
lods
rorl
imul
mov
mov
cmp
mov
insl
pop
xchg
sub
sbb
arpl
sbb
mov
or
lock
mov
mov
sub
jne
ja
cmpsb
push
mov
cmp
jg
dec
jge
fadd
cmp
push
and
pop
and
mov
mov
loop
clc
call
cmpsl
inc
xor
mov
scas
sub
fidivrs
fbld
mov
shrl
mov
jo
loopne
mov
pusha
popf
lock
xchg
inc
repz
std
lea
mov
xor
pop
pop
inc
cmc
ret
mov
lret
add
dec
add
in
stc
sbb
ret
xor
fdivl
dec
and
sbb
xchg
mov
rolb
and
aaa
mov
es
xchg
dec
lods
imul
fs
adc
popa
mov
cmpsl
add
add
lods
neg
push
lcall
inc
push
sbb
rcll
outsl
ret
cmc
xchg
fbstp
adc
jge
repz
mov
xlat
mov
cmp
hlt
mov
mov
stos
jae
fstpl
cmp
add
xor
xor
mov
jbe
xor
pop
stos
pop
les
sbb
pushf
popa
mov
test
aas
dec
cmp
add
testl
idivb
jae
adc
sbb
or
jbe
testl
add
add
lods
sub
and
sub
sarl
and
ret
bound
mov
push
sub
jbe,pn
push
dec
xor
mov
mov
and
sti
pop
mov
xor
lret
repz
mov
jmp
shll
lock
out
sti
or
pop
and
mov
jns
or
enter
int
mov
mov
fcmovne
les
aaa
and
lret
out
xchg
pop
les
loopne
jo
push
fldl
sahf
lcall
fmuls
jns
lods
mov
or
sbb
lds
mov
ret
les
jmp
roll
popf
pop
and
popa
int
adc
loopne
popf
sub
fcoms
testl
jno
mov
xor
ja
daa
and
fs
fbld
and
adc
int
lret
imul
cltd
gs
sbb
pop
aaa
rolb
xchg
sub
mov
push
lds
lahf
jg
jecxz
cmpsb
das
mov
les
add
popf
aaa
pop
lock
xchg
push
cmp
cmpsb
or
jl
mov
insl
push
sbb
inc
inc
cs
mov
gs
out
clc
stos
pop
frstpm(287
pop
xor
js
pop
pop
lods
add
aam
sarb
enter
jle
adc
data16
push
in
jae
aaa
das
shlb
je
sub
dec
mov
std
pushl
or
sbb
jb
mov
fildll
seto
pop
rorl
push
faddl
push
cli
dec
jae
shl
xchg
dec
stos
cmp
pushl
add
test
bound
cwtl
add
or
xchg
rcll
cs
xchg
dec
ror
imul
xor
cmp
lock
ror
out
adc
jbe
dec
clc
push
sub
jecxz
xchg
shll
mov
cld
sub
ljmp
push
fisttpl
dec
or
ljmp
pop
icebp
push
je
loop
shlb
push
gs
fmull
testl
es
popa
pusha
jno
sub
push
mov
in
div
pop
fsub
sub
pop
mov
pop
push
push
mov
in
adc
add
xlat
clc
push
pop
add
idivl
rorb
ds
jne
xlat
pop
xchg
pop
or
cwtl
popa
jecxz
sub
out
sub
adc
stos
scas
xor
sbb
cmp
sub
cmp
pusha
adc
adc
xor
mov
or
adc
fwait
test
pop
leave
jp
ret
xor
jns
out
push
jmp
mov
push
loop
fbstp
jge
xchg
stos
enter
xchg
ror
pusha
xchg
test
pusha
sbbl
cli
ja
ret
outsl
push
add
adc
divb
or
les
lds
pushf
pushf
push
insb
push
gs
xor
sbb
jp
mov
shll
aam
nop
repnz
dec
xchg
lahf
adc
int3
out
enter
cmp
mov
cmpl
jae
test
das
adc
and
ret
sbbb
rol
outsl
jne
insl
add
int
fwait
pop
rorb
sbb
cwtl
lret
and
xor
dec
test
xor
clc
or
and
fdivs
dec
sub
test
aad
xchg
lret
jmp
negb
mov
in
cs
and
bound
shll
dec
sub
pop
cmpsl
test
mov
out
test
or
pushf
xchg
test
pop
test
and
dec
jmp
jmp
xlat
xchg
aas
scas
fwait
dec
mov
rorb
sti
in
jns
out
aam
iret
pop
cmp
dec
sub
add
stos
lods
aaa
out
jge
clc
addr16
xchg
mov
aad
adc
cwtl
fs
mov
les
mov
scas
dec
aaa
cmpl
xlat
push
jmp
inc
mov
xor
test
add
je
pushf
push
cmp
ficoms
pop
sbb
add
out
hlt
repnz
mov
lret
cmp
fcompl
in
cmc
cs
out
je
jae
fcmovnbe
test
sarb
mov
rorb
loope
mov
ss
mov
movsl
dec
iret
in
push
sbb
xor
aas
mov
cmpsb
mov
push
mov
push
dec
xchg
test
xor
outsb
push
pop
dec
jge
jne,pn
mov
das
popa
or
mov
inc
mov
das
mov
js
add
loope
fcmovnb
std
test
hlt
ficoml
cmp
dec
repnz
jae
int3
pop
xchg
pop
int
sbb
sub
dec
or
insl
mov
push
das
je
xchg
inc
fnstcw
mov
cmp
mov
ficomps
flds
mov
rol
or
sub
xor
mov
push
jge
psrlq
cwtl
push
dec
iret
cmc
mov
mov
imul
xor
test
mov
rcll
jle
fwait
sahf
call
lock
mov
jne
or
lahf
mov
mov
mov
xchg
call
push
shr
shll
jns
ja
repz
in
jb
ljmp
int
cld
std
pop
sahf
bnd
andl
shrb
pop
push
call
repz
mov
test
cmp
ret
lret
enter
mov
pop
loop
sbb
xlat
add
jne
sbb
mov
mov
sbb
push
incl
and
outsl
hlt
push
cmp
or
mov
and
leave
cmp
jl
and
in
fdivrp
icebp
call
pop
add
les
and
fwait
pop
rcrl
lock
dec
xchg
fwait
movsb
pop
adc
push
mov
fstl
jb
fs
test
rolb
lods
jp
es
cs
int3
into
gs
jg
shlb
lahf
iret
pop
push
mov
pop
and
jno
and
aaa
call
or
mov
jne
out
fcmovb
or
shlb
xor
xor
aas
insb
arpl
push
dec
and
pop
jb
push
push
adc
les
jb
je
cmc
xorb
in
or
cmpsl
add
sti
sahf
jl
fstpl
or
sbbb
int
mov
es
dec
imul
mov
mov
pop
jae
lds
mov
fimuls
adcl
push
sbb
mov
fcoms
xor
xchg
mov
into
cmp
loopne
cmp
pop
fcomi
insb
xchg
cli
or
xor
or
pop
leave
cli
inc
xchg
lods
outsb
es
mov
and
push
push
mov
push
push
inc
jge
cmpsb
daa
xchg
mov
mov
lods
pop
movb
mov
sbb
outsl
and
xor
stos
popf
les
jo
pusha
cli
dec
rol
rcrb
xchg
xchg
test
je
lret
mov
push
mov
stc
push
mov
inc
mov
jp
in
xchg
movsl
push
pop
push
push
sub
rcr
repz
daa
nop
pushl
mov
sti
imul
outsl
dec
out
mov
jo
xchg
cmpsl
lret
cmpsb
filds
dec
jp
dec
inc
sub
push
mov
xor
add
sahf
in
cli
jle
es
inc
inc
mov
sub
adc
jl
gs
fwait
in
cmp
aaa
add
dec
lahf
daa
fucomip
outsl
xor
mov
mov
dec
repz
out
nop
cmp
insl
enter
and
or
pop
pop
jmp
mov
loop
mov
out
xor
and
aaa
subb
pop
int
xor
inc
mov
add
arpl
lret
or
je
sub
cmp
arpl
stc
add
fnstcw
mov
sahf
ret
inc
incl
xor
cmp
jno
push
in
pop
test
hlt
cmpsb
push
movsl
repnz
adc
jg
adc
add
pusha
repz
cmc
xchg
cmpsb
cmp
shr
cltd
lods
into
sbb
jp
stos
mov
and
jne
sbb
pop
movsb
test
xchg
xlat
daa
pop
or
adc
cmp
nop
jb
sahf
xchg
mov
fsubrl
cmpsl
lods
movsb
inc
ds
lods
xor
push
shlb
hlt
add
or
aaa
xlat
je
and
pusha
sub
les
or
xchg
mov
xchg
outsb
ss
xor
int
popf
dec
repnz
and
sbb
or
mov
lahf
stos
into
fwait
add
jecxz
mov
int
pop
movsb
mov
mov
add
cmp
mov
jns
faddp
mov
xchg
insb
in
ds
lods
sub
das
sub
adc
fisubrl
sbb
sbb
out
ljmp
adc
hlt
ljmp
aas
dec
loope
xadd
xor
sub
xor
fistl
xor
jmp
and
xchg
and
sti
pop
es
lds
mov
outsl
inc
or
push
cmpsl
in
rcrl
xorl
pop
sbb
adc
ja
das
out
sti
sbb
fst
popa
adc
mov
adc
push
mov
adcl
dec
cld
or
ret
adc
lock
lods
dec
std
adc
dec
xor
arpl
mov
xchg
ret
inc
das
loopne
sub
adc
fildl
into
mov
jno
pop
add
repz
repnz
leave
sub
dec
or
push
or
outsb
xchg
dec
loop
pop
mov
sub
xchg
int3
or
mov
movsl
fwait
test
in
fiaddl
mov
push
xchg
mov
arpl
es
mov
sbb
in
pop
or
cmp
or
in
xchg
mov
movsb
clc
out
orb
cmp
add
push
decl
gs
movsb
cwtl
inc
sub
lcall
xor
or
mov
fldenv
pop
sbb
sub
jnp
and
jmp
ds
push
push
loop
mov
jl
daa
iret
out
out
iret
mov
inc
pusha
repz
mov
mov
enter
test
mov
fucomi
imul
add
xchg
or
add
ret
repnz
inc
imull
push
mov
mov
mov
mov
add
mov
mov
enter
and
addr16
mov
repnz
cltd
daa
shrb
test
mov
push
add
push
xchg
mov
sbb
jns
ret
push
popf
mov
pusha
mov
sbb
pop
mov
and
sub
cs
lea
cltd
push
sub
mul
sbb
dec
repnz
scas
cmp
loopne
scas
fsubs
inc
adc
outsl
out
sbb
jb
rol
dec
cmp
addr16
sar
jmp
ret
pop
popf
ret
jl
sbb
mov
or
pop
and
mov
pop
pop
mov
dec
ss
dec
cmc
into
sub
inc
icebp
test
mov
dec
ret
int
pop
mov
mov
inc
scas
leave
jl
jb
dec
mov
int3
or
mov
test
push
xor
pop
ss
pop
adc
out
pop
jbe
and
cmp
stc
pushf
fmuls
loope
insl
lods
xchg
push
cld
lret
xor
add
push
or
xor
mov
js
cmc
outsb
fcmovu
jo
iret
loopne
testb
adcl
add
mov
push
mov
fwait
cmpsb
adc
inc
aad
mov
mov
test
or
xlat
push
sub
and
in
ljmp
add
xor
mov
in
nop
lret
rorl
call
pushf
sbb
rcrl
fs
insb
outsl
inc
or
mov
nop
xchg
int
fcmovu
int
xor
sub
adc
jbe
and
bound
mov
mov
rcll
ss
test
jno
imul
sub
sbbb
xchg
jp
out
pop
inc
test
popf
addb
sub
aad
sbb
jne
ss
push
mov
mov
stos
sub
add
ficompl
fistpl
call
test
dec
int
pop
add
jb
sub
leave
rcr
test
movsl
cmc
xchg
adc
je
adc
dec
out
or
fwait
pop
fwait
inc
sbb
xchg
add
xchg
in
jo
movlps
addr16
fsubp
fstps
dec
adc
int
sahf
pop
cld
lret
or
add
pop
int3
or
fdivrl
popa
orl
jae
mov
inc
pusha
out
rsqrtps
jmp
je
or
cmpsb
or
jno
add
jbe
out
jmp
dec
xlat
pop
push
lods
mov
mov
lahf
sub
xchg
fisubrs
pop
sbb
divl
imul
adc
enter
sbb
out
outsl
jle
adc
mov
mov
ret
xor
adc
mov
fs
lret
jl
adcb
bound
mul
dec
push
push
xchg
pusha
inc
add
fcoml
scas
fmull
jne
test
sub
outsb
xchg
xor
addr16
and
add
pop
loope
negl
jbe
hlt
sbb
test
inc
jo
imul
cmp
mov
add
das
insl
jmp
sub
repz
jnp
mov
sub
ds
lcall
les
jecxz
inc
adc
out
or
test
jge
popf
add
or
and
mov
call
add
ret
cli
negb
imul
rolb
cmpb
notl
adc
out
mov
adcl
jp
inc
lods
pop
mov
clc
aaa
sbb
add
push
dec
adcl
movsb
mov
mov
mov
insl
push
ret
mov
push
or
inc
test
pop
in
imul
clc
rcl
pop
fucomp
stos
fs
repz
shll
inc
jae
mov
mov
gs
imul
inc
ss
pushf
dec
enter
jp
sub
sbb
enter
test
lds
pop
mov
pop
xchg
mov
les
add
int3
adc
push
jns
add
xchg
mov
cmpsb
push
mov
sbb
jl
inc
mov
aaa
xor
push
cmp
leave
sbb
xchg
sbb
dec
pop
add
pop
mov
test
mov
cmp
sub
loopne
mov
ja
or
dec
shrb
dec
jecxz
mov
gs
push
cs
or
testb
outsl
rcrl
iret
icebp
mov
adc
jle
add
outsl
sub
gs
inc
and
cmp
stos
mov
or
add
add
jb
ds
push
cmpsb
or
dec
mov
cmp
out
nop
ds
mov
shll
xor
stos
xchg
and
cmp
xchg
dec
jne
mov
and
jae
adc
out
push
inc
lods
aam
jle
cmpb
addr16
mov
pusha
sub
jno
jg
fsubs
xchg
outsl
imul
shr
xchg
lahf
repnz
pushl
mov
cmpsb
jo
mov
aam
push
pop
and
cwtl
ss
xchg
sbb
jo
and
jl
insb
sbb
aaa
test
insl
rcrl
mov
sbb
ret
test
ret
leave
xlat
ret
repnz
call
adc
jne
jg
jne
shl
scas
lods
xor
pop
and
pop
push
andl
or
sahf
call
cmp
insb
push
pop
xchg
sub
adc
ret
xlat
xor
jnp
xor
pcmpgtd
outsl
fwait
insl
inc
xor
gs
push
mov
pop
push
pop
or
push
sbb
daa
inc
jo
sbb
lret
repz
test
lahf
fwait
out
iret
adc
inc
ficoml
and
js
or
add
cli
xchg
pop
test
dec
inc
lcall
mov
ljmp
imul
in
pop
into
xor
out
inc
lea
dec
insb
and
xchg
aas
cmp
lret
and
sahf
cmp
sub
jne
sub
or
lods
inc
cld
notl
jbe
cmp
xchg
mov
int3
cmp
sbb
push
subl
pop
in
rcrb
test
stc
mov
adc
jne
mov
xchg
out
test
sbb
mov
pop
or
add
loope
jns
gs
shlb
int
arpl
in
add
andl
sti
lods
lret
push
mov
out
out
cld
insl
jne
pop
mov
call
int
sbb
and
mov
in
subb
daa
xchg
ret
shrb
cmp
aam
and
fimull
pop
sub
lods
ret
das
inc
mov
mov
mov
movsb
adc
pushf
mov
inc
outsl
pop
aas
insb
sahf
mov
xlat
inc
movsb
ffree
and
cmp
mov
fdivl
xor
cmp
repnz
xchg
mov
add
je
push
push
stos
mov
insl
and
mov
test
lods
test
popf
sahf
and
je
je
xor
pop
dec
loope
jo
mov
sub
sub
add
es
cmp
int3
adc
movsl
mov
rol
mov
jmp
mov
decl
mov
pop
pushf
pop
xor
clc
lods
mov
rcl
mov
sub
mov
and
outsl
xchg
push
adc
sbb
rcrl
in
add
mov
jb
xor
pop
jl
not
sub
mov
xchg
xchg
sti
cs
in
cmpb
push
sub
arpl
sbb
shlb
add
fstps
dec
pop
push
dec
jge
scas
add
popl
dec
mov
jb
repz
outsl
mov
call
sub
je
xchg
jmp
mov
and
xchg
xor
sbb
fnstcw
cltd
rcll
or
into
mov
rsm
dec
sbb
mov
vpsubb
xor
cmp
sub
and
std
mov
aaa
mov
sub
lgs
cmc
fsubs
sub
sub
popf
add
mov
imul
cmp
and
xor
aaa
mov
jecxz
sbb
adc
xchg
dec
mov
dec
and
adc
mov
mov
cmpsl
in
xchg
jo
repnz
xor
push
mov
frstor
mov
inc
cmovb
pop
push
cmp
and
jbe
cmc
in
in
jns
icebp
cmp
mov
jmp
mov
pop
xor
cmp
out
xchg
fcomps
std
filds
scas
push
out
push
test
mov
leave
adc
sub
ret
pop
cmp
in
push
rcrl
aad
fwait
push
ja
mov
sub
ss
outsl
popa
xor
lock
sti
push
imul
jnp
aaa
jno
outsl
push
sahf
dec
jns,pn
push
call
repz
fisubrs
leave
imul
notl
leave
dec
je
or
stos
jg
bound
mov
scas
sti
pop
test
addr16
nop
jno
xor
int
sahf
xchg
pop
aaa
push
loop
add
or
sub
adc
movsl
icebp
xor
imul
cmp
jmp
or
orl
pop
jle
dec
out
jl
cmp
insb
ss
cmpsl
inc
add
push
pop
jle
xchg
stc
and
push
sub
out
enter
cmp
popf
or
and
cld
xlat
jle
add
add
sbb
aad
loope
sahf
inc
mov
xchg
es
shrb
iret
fnstcw
add
sub
xor
test
mov
std
pop
inc
add
call
mov
insl
push
out
xchg
inc
sub
pop
xor
nop
jo
and
call
sbb
ffree
ss
frstor
idiv
pop
xchg
xchg
roll
sub
jecxz
xchg
movsl
lahf
pushf
sbb
popa
imul
ror
out
jne
pop
and
pop
dec
jo
push
dec
inc
push
je
push
lahf
inc
cmp
lret
push
jle
adc
and
jns
jns
shrb
cmp
mov
mov
mov
adc
mov
xor
gs
test
jmp
xchg
out
stos
scas
data16
in
leave
outsb
xor
sarl
or
xchg
and
lds
subb
divl
jbe
movsb
adc
mov
ficomps
inc
sub
in
cmpsl
pop
dec
inc
and
pusha
cmp
sbb
and
scas
cli
pop
pop
add
mov
or
stos
pushf
cmp
jg
pcmpeqd
fwait
loopne
in
mov
mov
mov
dec
loopne
xchg
repnz
repz
popa
jb
scas
adc
dec
jo
lahf
mov
xchg
imul
xor
mov
xchg
sti
jmp
test
enter
mov
scas
pop
push
inc
aaa
add
fistl
xor
movsl
lcall
cmp
ja
sub
sub
scas
mov
sti
lret
ss
sbb
push
dec
cmp
mov
push
cli
and
aas
xchg
xchg
out
inc
sub
or
mov
leave
inc
xchg
lea
mov
xor
pop
jbe
andb
ja
ret
xchg
jle
cmp
test
pop
add
das
and
sbb
test
mov
stos
pushf
lahf
test
loope
xchg
repz
clc
xchg
mov
fwait
pop
xchg
sbb
je
outsb
mov
repz
lds
jmp
sbb
and
ret
add
push
push
push
mov
sbb
dec
pop
aaa
nop
arpl
cmp
in
adc
stos
flds
sarb
mov
test
xchg
into
loopne
das
movsb
and
push
jnp
imul
mov
mov
mov
cmpb
out
push
sarb
mov
add
pop
sbb
not
popf
subl
testb
insb
data16
in
push
lea
sti
xchg
ret
fcompl
and
xchg
mov
fisubrl
iret
imul
inc
jo
pextrw
insl
sub
mov
std
cmp
mov
inc
push
sti
popa
pop
xchg
xchg
aam
stc
push
and
dec
int3
pop
jae
sbb
cmp
hlt
sti
or
cwtl
mov
popa
push
and
dec
sbb
icebp
pop
and
incl
dec
lock
and
lret
push
adc
cmp
mov
repz
stos
mov
movsl
lea
xchg
and
shrl
mov
in
repnz
loope
mov
add
mov
testb
loope
je
out
add
push
fcmovnbe
pushf
sub
test
fisttpl
lods
jbe
call
pop
or
rorl
push
jg
sbb
xchg
ficompl
dec
rolb
or
xchg
xor
into
aas
cli
or
cs
mov
inc
mov
xchg
cmp
or
in
pusha
lret
daa
mov
outsb
inc
xchg
bts
loope
shl
ss
cmp
lods
push
cmp
cmp
jmp
shl
xchg
and
mov
lds
xchg
or
es
xchg
out
inc
push
loop
xchg
xchg
inc
aam
or
mov
add
and
or
and
cmc
pop
cmp
dec
or
sbb
sub
hlt
sbb
xor
je
mov
xchg
arpl
in
aam
shrb
cli
fwait
orb
xor
mov
mov
mov
xchg
sbb
adcb
lret
dec
and
into
and
sbb
ds
sbb
sahf
mov
xchg
jg
add
push
fs
aam
mov
push
dec
sbb
les
jbe
push
imul
pop
orb
cmp
in
loope
mov
mov
add
aas
imul
lahf
push
inc
lds
call
addr16
cmp
negl
mov
xchg
test
fxam
jl
or
jge
ss
add
mov
mov
cmc
daa
mov
xchg
mov
pop
add
test
pop
insb
arpl
inc
and
mov
dec
mov
push
push
cld
pop
jg
and
jg
ret
sub
in
and
mov
mov
loope
daa
jmp
std
jle
cmpsb
jle
test
mov
test
negl
cmp
loop
je
repnz
jns
inc
xorl
outsb
push
xor
leave
movsl
inc
test
cli
xchg
or
mov
xlat
adc
dec
int3
mov
je
jb
cld
jb
pushf
xor
call
imul
test
es
stc
add
or
mov
call
pop
push
cwtl
sbb
mov
ret
mov
xor
mov
xchg
sub
xchg
in
insb
cli
setg
pop
gs
pop
aas
add
nop
shll
add
mov
dec
dec
adcl
xchg
add
cmp
ds
xor
pop
popf
shrb
jns
scas
jle
inc
sbb
pop
pushf
sub
inc
in
cmpb
xchg
sbb
ljmp
enter
in
jnp
or
xor
ret
pop
dec
iret
jmp
lcall
jg
sahf
xchg
mov
jno
jmp
sbb
insl
pop
mov
xor
or
cs
xor
cmpsl
vmwrite
ja
inc
popa
into
testb
ret
test
pop
jno
hlt
dec
les
outsl
aam
std
pop
inc
fists
mov
mov
push
aad
lods
add
mov
ss
jo
cmp
or
clc
inc
xor
movsb
rclb
pop
xor
dec
mov
cmp
mov
std
mov
ds
xor
in
inc
subb
jnp
xchg
idiv
cmpsb
js
and
or
lock
dec
aaa
pop
das
mov
lea
mov
mov
out
sbb
je
sbb
add
xchg
sub
xchg
cmpsb
scas
test
push
dec
sub
pushf
mov
ret
adc
cmp
sbb
cmp
fs
je
mov
xor
dec
add
mov
jbe
pop
enter
xchg
bound
sub
mov
fstpl
cmp
lods
out
and
push
or
fdivs
inc
loopne
data16
mov
movsl
lahf
dec
je
and
inc
flds
cmp
fcmovnbe
inc
aas
imul
icebp
andl
mov
pop
int3
mov
mov
bound
lret
cld
pop
sub
dec
or
sahf
inc
jg
pusha
mov
pop
js
xchg
push
dec
xor
pop
ss
out
inc
cmpsl
push
mov
sub
fmuls
pop
clc
dec
cmpsl
add
jo
incl
ficoms
imul
mov
adc
je
pop
mov
dec
sbb
int
scas
pop
out
jmp
cmpsl
jae
je
mov
jp
cli
mov
xchg
push
clc
stc
out
fwait
pop
inc
clc
hlt
push
add
xchg
int3
inc
push
pop
sbb
mov
cmp
push
bound
add
fcmovne
pop
mov
rorb
lock
xor
dec
fstpl
push
mov
outsl
cld
pop
mov
xchg
dec
cmpsl
or
jmp
ljmp
out
lds
sbb
scas
add
into
inc
xchg
in
push
adc
cld
cli
lahf
and
out
mov
dec
repz
mov
ljmp
stos
loopne
jle
inc
and
es
jae
es
sub
xchg
push
clc
leave
xlat
jns
inc
dec
or
daa
insl
fnstsw
gs
xchg
xchg
sub
add
ds
pop
xchg
ret
sarb
dec
mov
push
in
sub
and
jecxz
mov
fadds
sub
cmp
xchg
stos
adc
fisttpl
repz
iret
xchg
sbb
push
sbb
sarl
sbb
int3
mov
pop
aaa
pop
inc
in
scas
lods
mov
xor
xchg
adc
inc
jb
adc
cs
jmp
sub
cmp
mov
mov
push
inc
jno
adc
ret
push
fldcw
and
inc
mov
sbb
cmp
mov
inc
into
cmp
fsubrs
adc
jo
inc
sub
inc
or
das
pop
ret
xlat
leave
fs
xchg
push
sub
ret
xor
das
jle
test
cltd
movsb
xlat
and
out
jg
insb
or
jmp
test
xor
mov
push
in
push
pop
outsl
mov
or
xchg
negb
jns
jbe
in
cmpsb
mov
loop
dec
or
jl
adc
lret
sbb
cld
filds
bound
adc
or
add
xchg
or
sub
fmuls
dec
fistl
nopl
xor
les
sub
and
fimull
or
push
std
push
sbb
or
out
out
test
or
cli
push
adc
shll
shlb
mov
or
mov
mov
pop
mov
aam
add
pusha
sub
das
pop
sub
dec
ret
popf
mov
mov
pusha
push
aad
mov
popa
inc
push
mov
mov
mov
add
mov
sahf
sbb
movsl
shll
int
mov
es
pop
gs
int
adc
xor
pop
jg
loopne
mov
addl
js
je
outsb
mov
push
xorb
push
outsb
or
mov
shrl
js
push
push
push
popf
xor
jb
addr16
in
in
ds
aas
mov
lret
clc
jne
jb
clc
ss
pop
mov
adc
mov
pop
push
mov
mov
scas
and
test
in
cmc
inc
into
ret
and
sbb
cli
leave
lcall
sub
hlt
inc
xchg
das
cmp
nop
je
aaa
cmp
xor
or
mov
and
int
push
test
pop
pop
cmp
leave
jmp
lret
add
and
mov
popa
cmp
mov
fwait
pop
sahf
jo
lds
cmc
sbb
cmp
repz
jge
sub
lret
jb
adc
test
dec
das
loopne
adc
sub
or
insb
pop
les
sbb
sub
sahf
rol
js
shrb
xchg
sbb
daa
jl
or
lods
test
sbb
outsb
mov
inc
xchg
pop
mov
sbb
popf
movsl
mov
adc
lret
add
sahf
lods
cmpsl
leave
adc
test
ret
fidivs
lds
mov
outsl
xchg
jge
cmpxchg8b
int3
sbb
adc
icebp
roll
int3
xchg
or
xchg
inc
roll
pop
testl
sti
nop
ss
add
nop
cmpsl
mov
or
adc
jbe
cmp
sbb
pop
mov
mov
or
mov
fs
inc
clc
fdivrs
lods
in
jecxz
push
xlat
inc
cmp
sbb
xlat
and
lret
inc
and
jo
push
stc
js
lea
pusha
mov
icebp
stos
inc
mov
rcll
lods
jb
sbb
mov
out
cli
push
test
icebp
dec
test
jge
mov
lds
aas
stos
pop
cwtl
mov
inc
rclb
mov
inc
cmp
and
xor
insl
and
inc
inc
filds
inc
inc
lcall
jo
mov
jl
mov
or
in
sub
jl
leave
enter
xor
cld
xor
imul
arpl
movsl
into
push
ljmp
inc
imul
or
scas
testb
addb
mov
aas
mov
inc
cmp
cmp
ret
push
test
ret
mov
mov
mull
cltd
push
push
fwait
cmp
outsl
or
push
fnstsw
outsb
call
inc
icebp
xchg
mov
xor
outsb
bound
jbe
out
out
mov
cld
or
lahf
push
mov
call
scas
add
les
push
pusha
divb
add
fwait
sbb
ja
mov
push
loop
push
aad
dec
jmp
cmpl
loope
pop
stc
ljmp
add
mov
inc
push
cmp
add
mov
pushf
adc
and
xchg
jo
inc
adc
into
insl
xlat
mov
add
mov
jecxz
int
aaa
push
inc
jno
js
cld
int3
ljmp
test
roll
mov
jo
sub
test
inc
dec
ret
push
out
cmpsb
xchg
test
dec
xor
out
pop
iret
pop
cmp
xchg
jnp
cld
pushf
xor
fwait
jecxz
movsb
mov
in
aad
int
cmc
sahf
fcomps
or
adc
icebp
les
test
int
imul
pop
movsl
add
inc
lock
loop
int
repnz
jb
pop
adc
pop
xor
popa
sub
jbe
add
or
mov
adc
and
xchg
xor
es
pop
out
adc
dec
and
repz
jecxz
jns
shl
fmull
dec
pop
dec
dec
mov
stos
pop
cmp
rol
ds
pop
jle
mov
int
sahf
and
adc
repnz
mov
adc
mov
lea
sahf
xchg
sub
xlat
xchg
jl
jle
cmpsl
push
cmpsb
push
ficomps
lea
mov
pop
lock
js
rcrb
and
sbb
ljmp
mov
lock
in
arpl
sarb
jnp
in
bnd
ja
stc
ja
xchg
jle
mov
cmp
push
dec
jae
enter
jmp
mov
pop
pop
loopne
cmc
cmp
out
nop
icebp
xchg
mov
inc
mov
mov
push
push
sbb
out
inc
cli
dec
sub
xchg
adc
popf
fidivs
out
lea
dec
lods
js
and
rol
sbb
xchg
loope
sub
data16
mov
sub
mov
mov
in
popa
push
xchg
sbb
mov
jo
and
clc
outsb
adc
jp
iret
mull
pop
fnsave
and
xchg
fwait
jle
cmp
dec
or
sub
bound
addr16
pop
mov
push
inc
test
xor
ret
imul
mov
sub
fnstsw
icebp
inc
cmp
mov
fldenv
sbb
js
and
lcall
push
add
out
in
mov
cmp
test
out
push
or
adc
cmc
or
sti
push
jb
xor
cmp
pop
fbstp
lret
xchg
xchg
push
ret
cmp
mov
rorb
leave
jb
jg
add
mov
add
pop
mov
push
aam
mov
testl
rorb
and
stos
inc
and
mov
test
in
mov
jp
and
inc
jns
mov
mov
dec
fs
dec
testb
inc
mov
aaa
in
les
dec
push
test
ja
cmp
call
mov
add
pop
mov
in
jge
movsl
adc
push
mov
add
inc
sub
sbb
pop
add
aas
xchg
es
inc
notl
push
xchg
stc
cmc
scas
pop
ja
fidivrl
inc
aaa
mov
mov
cmp
test
ljmp
in
inc
mov
daa
xchg
jl
cltd
ret
push
jno
int3
push
in
push
stc
xlat
test
xor
xchg
cmp
jecxz
out
mov
add
cltd
inc
lea
and
sub
push
mov
or
es
adc
addl
scas
in
data16
dec
imul
mov
mov
push
lcall
pop
push
adc
mov
sbb
jbe
cltd
sbb
stos
mov
xlat
idivb
push
pop
daa
andl
pop
and
sbb
test
pusha
pop
jno
inc
mov
add
imul
mov
and
bound
jge
add
outsb
add
push
xor
int
pop
dec
mov
and
fdivrl
sub
or
ret
push
imul
shrb
dec
jl
dec
or
mov
mov
int
cs
push
sarb
fstl
and
shlb
jbe
loop
stos
into
addr16
cmc
pushf
sbb
fnstsw
fldcw
jne
mov
jno
or
inc
nop
jnp
cmpsb
jb
inc
fisubrs
scas
xchg
aaa
mov
cwtl
jecxz
mov
jae
jo
movsl
pop
decl
mov
jg
call
xor
add
add
cmp
sub
imul
cmpsb
sub
sbb
xchg
inc
pop
out
std
fwait
decb
xor
mov
out
xor
xor
jnp
movsl
in
aas
call
push
jb
xchg
sub
cmpl
pop
add
or
and
dec
test
lds
push
pop
clc
shll
setg
jbe
inc
lock
jle
jne
shl
js
outsl
or
pop
mov
test
lods
mov
or
xchg
sti
and
loop
or
cli
xchg
loope
test
jns
aam
stos
imul
xor
dec
test
lea
cmp
aas
in
push
pop
xor
pop
out
in
mov
sbb
mov
pop
adc
fs
pushf
jp
mov
nop
test
pop
stos
mov
subl
mov
jg
jg
int3
pop
push
pop
stos
adc
push
lds
mov
arpl
inc
lret
lods
sub
imulb
lock
push
fdiv
cli
movsb
lods
shrl
outsl
out
das
outsb
outsb
adc
ss
mov
loope,pt
cmp
imulb
xchg
mov
sarl
rorb
xchg
mov
inc
imul
in
ja
pop
sub
pop
pushf
rcll
shll
fs
verr
xchg
in
loop
mov
mov
xchg
add
dec
push
dec
add
fimuls
insl
ficoml
xchg
js
pop
pop
or
mov
loop
and
jg
lods
xchg
inc
ds
stos
sub
xchg
cmpsl
mov
lret
andb
cmp
paddb
mov
lahf
ds
cmp
fmul
add
add
dec
lea
iret
loopne
mov
mov
xor
mov
nop
xor
testb
arpl
addb
pop
mov
imul
test
rcll
pop
imul
xchg
pop
xchg
push
lret
push
xchg
xchg
bound
sub
leave
add
add
movsb
jb
addr16
dec
adc
mov
ret
pop
rorl
or
fmuls
mov
loope
negl
icebp
adc
and
sbb
mov
dec
cmp
jne
or
sbb
xchg
sub
outsb
dec
mov
orl
loope
das
mov
and
cwtl
or
or
push
stos
mov
adc
push
inc
js
jb
sub
inc
adc
ljmp
xor
daa
jno
cmp
daa
enter
adc
mov
inc
xor
push
leave
xchg
filds
cli
sub
mov
mov
rcll
popa
lahf
push
or
adc
fdivrl
sti
cmp
call
enter
mov
mov
xor
push
fcom
and
and
scas
mov
gs
aad
jp
jnp
sub
nop
and
mov
xchg
lahf
lcall
mov
enter
xchg
jns
jmp
shrl
cwtl
xchg
mov
lcall
loopne
xor
cli
add
into
mov
inc
or
lahf
cs
faddl
std
push
daa
sub
xchg
sub
cmp
pop
shrl
mov
icebp
cltd
pop
push
icebp
fisttpll
out
rolb
repnz
lds
add
and
and
ljmp
xchg
pop
and
mov
sbb
xchg
lcall
dec
mov
idivl
ds
hlt
sbb
wbinvd
rol
sbb
jp
jnp,pt
cld
fdivp
adc
xor
xchg
mov
dec
stc
or
out
addr16
movsb
psadbw
sbb
sbb
jp
sbb
stos
mov
out
jne
pop
inc
lods
dec
dec
orl
push
test
pop
pop
push
mov
test
jecxz
xor
or
mov
scas
push
loopne
mov
mov
loopne
sub
or
mov
jb
jno
dec
jo
push
jb
jns
shl
jbe
aad
mov
jbe
xlat
daa
jge
jg
add
push
sti
pop
sub
xchg
clc
add
mov
push
lret
pushf
xchg
decl
sub
xorb
shl
dec
fisubl
outsl
mov
mov
xchg
cltd
cmp
in
sti
loop
adc
add
in
mov
jge
in
fdivrs
icebp
xor
inc
nop
sub
push
into
subb
mov
and
push
mov
negb
adc
push
mov
loopne
mov
inc
sbb
mov
add
and
adc
inc
inc
out
pop
je
cmp
icebp
mov
push
loope
push
cld
push
xchg
sbb
aaa
das
sbbb
add
addr16
cmpsb
stos
cmp
adc
mov
outsl
outsl
pop
mov
lock
push
mov
dec
les
add
xchg
daa
push
into
rep
clc
add
push
dec
lea
rcrl
insb
or
lods
setb
flds
cmp
cwtl
mov
sbb
iret
fs
add
mov
scas
hlt
ss
cmp
or
filds
int
minps
mov
test
stc
sbb
nop
test
push
sub
push
cmc
adc
inc
cld
subl
cmp
sbb
cmp
adc
adcl
mov
xchg
jp
xchg
mov
mov
cld
jg
xor
mov
xchg
jl
mov
sbb
arpl
lds
xlat
dec
xor
pop
repnz
jns
sbb
int
dec
cmp
xchg
jo
push
enter
add
mov
clc
mov
sbb
push
sarb
mov
add
loopne
inc
sbb
in
pop
jne
dec
or
adc
xchg
pop
insb
inc
jno
push
mul
in
adc
mov
sbb
cmp
lock
pop
or
in
outsl
pop
jb
inc
lfs
ljmp
test
push
xor
inc
mov
adc
pop
js
add
push
lret
je
aas
outsb
jmp
cvtpi2ps
lahf
mov
sbb
pop
mov
mov
les
jg,pn
and
pusha
push
pop
inc
clc
jne
jle
inc
aam
pop
mov
hlt
mov
subb
sub
lret
lahf
sub
sbb
inc
mov
out
mov
shl
aam
test
or
xchg
jle
ficomps
push
aad
mov
call
jle
nop
popf
and
push
pop
inc
jl
sahf
pop
out
cmp
rcrb
jb
test
ret
jl
repnz
sub
icebp
fistpl
cmp
sub
sbb
pusha
push
adc
push
imul
push
xor
repz
scas
inc
ljmp
in
jns
xchg
fdivr
mov
aas
push
sti
push
enter
jnp
xchg
outsb
loope
sarl
mov
push
out
dec
shlb
jnp
pop
loopne
lcall
es
push
adc
mov
xchg
jnp
shrb
inc
jae
mov
dec
mov
sahf
out
xchg
int3
cmp
push
fwait
lock
ret
out
rol
sbb
sahf
push
and
xchg
and
inc
mov
or
pop
insb
lds
sub
clc
shll
jno
mov
fcmovnb
insb
roll
fidivrl
jbe
std
es
fsubl
pop
xchg
orl
push
xlat
adc
das
mov
lret
leave
ljmp
out
mov
cld
out
mov
sub
push
sbb
sarb
out
nop
and
leave
movsl
repz
pop
dec
mov
dec
inc
and
xchg
inc
nop
and
jae
mov
jl
imul
dec
dec
test
or
jae
cmc
adc
jp
cli
aaa
push
sub
sbb
stos
cwtl
loopne
cwtl
repz
xchg
imul
lock
call
cmp
shrb
sub
je
push
bound
dec
fcomip
mov
add
rorb
and
loopne
jmp
or
add
dec
lea
sub
push
sbb
and
test
icebp
scas
add
fnsave
lock
pop
push
lods
or
adc
jmp
ja
test
sbb
jnp
xchg
inc
dec
and
fstpt
cmp
and
mov
fnstsw
adc
add
xchg
inc
stos
inc
pop
cmp
sbb
pop
pop
aad
jne
insl
mov
cld
push
cmp
gs
lods
mov
aas
hlt
bound
nop
fcmovu
lahf
pop
cmp
and
int
repz
push
xlat
mov
mov
adc
inc
cmp
ss
adc
fwait
pop
and
mov
push
scas
xor
adc
inc
int
pushf
push
xor
or
mov
mov
test
loop
or
cmpsl
vpaddd
inc
or
jns
push
notl
sub
push
sbb
xor
jmp
sub
addl
shrb
gs
repz
pop
ss
xchg
mov
aad
inc
and
xchg
adc
les
fwait
into
loopne
rolb
inc
mov
subl
cmp
das
pop
cld
es
ljmp
pop
dec
lcall
repz
xorb
push
mov
adc
js
js
rolb
mov
push
xor
or
js
cld
dec
pop
pop
int
fdivrl
jmp
sbb
aas
dec
movsl
add
test
push
mov
das
fwait
out
or
out
stc
ret
xchg
mov
mov
call
jne
mov
adc
push
movsl
ds
out
or
in
je
insl
cmp
jbe
xchg
test
inc
gs
fcoml
jecxz
jl
and
jne
jmp
in
fmuls
dec
mov
jp
sub
fdivrl
les
sub
or
xchg
pop
inc
daa
cs
sub
loope
flds
test
lret
jb
mov
push
sub
dec
lds
fiadds
add
and
lds
int
xlat
and
dec
jecxz
lea
ss
dec
dec
inc
add
test
push
loop
ficompl
ret
pop
mov
pop
rcll
dec
rclb
aas
idiv
xchg
push
movsb
mov
sub
test
ret
fisubl
lods
push
or
cwtl
pop
mov
sarl
in
jmp
add
lods
inc
sub
mov
jp
mov
add
outsb
cwtl
adc
push
or
pop
scas
sbb
push
ds
inc
clc
aam
mov
ja
mov
cwtl
aas
or
cmp
mov
cmp
cmp
repnz
mov
fwait
mov
or
mov
loope
call
cld
popa
test
or
or
sub
push
aas
jbe
xchg
cmp
xchg
adc
hlt
lds
int
cli
ret
pop
loop
mov
mov
lods
ret
lcall
daa
fadds
xchg
movsl
sbb
mov
or
fldt
into
inc
push
add
adcb
ja
popf
test
lcall
lods
push
flds
fcmovnb
mov
add
jecxz
fwait
lahf
inc
jnp
movsl
dec
add
jge
mov
jb
movsl
push
pop
aad
jae
pop
mov
mov
mov
decb
cld
lds
ret
shl
shrb
sbb
and
outsl
repnz
push
ljmp
lods
ror
mov
push
outsl
inc
scas
dec
aas
lret
filds
dec
popa
jns
sbb
sub
out
cmp
jg
mov
sahf
cltd
out
jge
int
pop
pop
push
or
xchg
clc
xor
inc
sub
xlat
xchg
adc
inc
cmc
push
jbe
lods
pop
call
inc
dec
inc
cmp
shlb
adc
clc
ja
mov
scas
fiaddl
mov
sub
adcb
sub
dec
sub
mov
or
push
icebp
out
cmp
dec
addr16
scas
fistpll
aad
imul
hlt
and
mov
cwtl
sbb
js
repz
xchg
push
or
jns
dec
jmp
xchg
pop
fstpt
xor
idivb
cwtl
pop
ja
mov
push
inc
sbb
enter
incb
dec
rcll
fstl
sbb
or
xchg
dec
inc
leave
clc
gs
xchg
push
mov
or
enter
push
dec
add
pop
or
adc
dec
pop
fcoms
push
aaa
push
and
sbb
mov
adcl
lret
lret
sbb
xor
xor
pop
in
jnp
pop
es
in
stos
push
mov
repnz
xlat
enter
lea
mov
push
imul
pop
clc
jecxz
mov
adc
std
jg
add
sti
fnstsw
cmp
sub
lods
lods
js
pop
cli
daa
mov
ror
movsb
cmp
cs
cmp
dec
sub
cltd
aaa
cmp
shrb
pop
out
pop
jl,pt
test
cmp
push
mov
push
add
outsl
in
call
and
push
jg
mov
out
sub
jl
and
sbb
fldl
mov
or
je
loop
in
test
fwait
mov
scas
mov
in
and
xchg
outsb
xchg
adc
pop
mov
in
cmp
ret
add
cmova
push
movsb
stc
ds
stc
sbb
adc
pop
enter
pop
sub
mov
and
sbb
cltd
mov
pop
sar
sub
mov
repz
sbb
mov
jo
cwtl
hlt
cmpl
dec
subb
cmp
mov
jb
xchg
inc
add
sbb
inc
aam
add
xor
push
imul
ss
fildl
mov
xchg
ljmp
inc
popf
mov
mov
sbb
in
mov
inc
mov
ljmp
xor
jns
aaa
inc
cmp
dec
mulb
xor
lds
repnz
mov
fmuls
pushf
int3
xchg
xchg
ljmp
inc
mov
fnsave
or
xchg
decb
jp
aas
jecxz
jns
add
lahf
loopne
sahf
mov
popf
fstpt
pop
sub
mov
push
pop
imul
push
sbb
cmpsl
popa
push
pop
popf
ja
stos
jb
imulb
adc
adc
scas
push
imul
stos
popf
roll
xor
jae
test
lds
lcall
inc
push
mov
cmc
jecxz
sbb
movups
stos
insb
mov
jo
xchg
mov
test
or
repz
popf
repnz
jnp
or
sub
mov
pop
sub
and
daa
jb
inc
cmp
dec
adc
and
adc
mov
scas
jne
pop
xor
push
jp
or
xchg
nop
pop
mov
ret
scas
add
mov
xchg
dec
add
or
loopne
mov
out
repnz
or
add
iret
pop
ficompl
movb
ds
test
adc
in
mov
sarb
pop
lods
stc
inc
and
mov
xchg
pop
jne
roll
shll
sub
rorb
push
stos
pop
and
js
fdiv
lret
in
popf
sbb
cmp
gs
jno
sbb
fisubrl
stos
adc
pop
mov
and
addl
xchg
jb
mov
mov
imul
adc
lods
sbb
pop
mov
mov
repnz
add
insl
call
jmp
mov
cmp
inc
arpl
mov
and
lret
mov
sub
xor
mov
adc
jge
std
ficomps
mov
scas
mov
xor
repz
lss
pop
pop
mov
inc
cwtl
daa
jl
mov
inc
mov
ljmp
fldz
push
arpl
pop
inc
psrlq
and
and
pop
add
inc
mov
adc
mov
decb
mov
mov
push
test
mov
xor
push
mov
cmp
dec
dec
pop
and
inc
pop
fnstenv
mov
lcall
or
push
aam
popf
or
add
jge
and
xor
into
mov
notl
push
out
xchg
lret
in
fiaddl
xor
sbb
out
data16
ljmp
mov
xor
push
push
sbb
out
add
movsb
xchg
popa
aas
into
testl
les
mov
fisttpll
mov
inc
frstor
les
mov
repz
xchg
js
add
ljmp
cmp
mov
push
les
sbb
lahf
ja
movsb
shrb
xchg
stos
gs
mov
sbb
mov
scas
sub
shlb
inc
dec
pop
cli
out
insl
pop
fstpt
shrd
shrb
mov
test
mov
mov
idivb
mov
cmp
pop
imul
dec
pop
je
fidivrs
orl
lret
or
push
mov
jge
pushf
mov
lret
xchg
lds
fdivr
xlat
xchg
jle
lock
lcall
ret
hlt
or
cmp
cmp
and
iret
dec
adc
mov
out
jno
fwait
lds
inc
jne
imul
aaa
xchg
lahf
sub
insb
mov
mov
cmp
jo
lea
push
sbb
lods
or
sub
das
cltd
cwtl
xchg
inc
lods
loopne
fisubrl
cld
movsl
adc
in
mulb
lods
jns
hlt
jbe
mov
push
add
movsb
xchg
stc
rcr
pop
mov
insl
or
cmc
mov
push
lods
mov
xor
adc
mov
push
test
sti
and
and
push
cld
mov
mov
scas
ret
sub
xor
call
gs
sub
icebp
je
sbbb
and
inc
cmp
inc
push
push
frstor
loopne
movaps
and
lret
roll
insb
scas
add
rcrl
mov
inc
jns
pop
push
stos
dec
es
sbb
loopne
pop
pop
clc
or
mov
pushf
or
jno
les
fsubs
test
push
mov
rcrb
shrb
and
sahf
fisubrl
repz
lock
push
mov
mov
and
cmp
jl
xor
and
jecxz,pn
ja
mov
pop
push
fidivrs
inc
iret
and
xchg
call
stos
pusha
dec
enter
sti
sbb
shl
iret
mov
sub
sub
int3
xor
sub
xor
das
loopne
data16
jle
lods
mov
js
or
lea
mov
jb
gs
push
mov
push
mov
shlb
mov
jp
dec
fildl
dec
ror
push
inc
xor
mov
jno
jno
pusha
dec
jmp
loop
sbb
xchg
or
xor
inc
mov
pushf
mov
push
stc
out
nop
jge
pop
lock
push
mov
popa
and
mov
lods
jecxz
lahf
cmp
inc
dec
pop
mov
add
inc
out
xor
mov
pop
push
cwtl
hlt
pop
lods
testl
inc
cmp
in
xchg
push
adc
mov
adc
or
adc
mov
cmpsb
cmp
cli
add
leave
mov
xchg
sub
lcall
stos
imul
mov
sahf
js
call
push
jecxz,pt
xor
insb
sahf
jl
cli
clc
arpl
mov
mov
xor
in
dec
negb
repnz
sbb
movsl
add
adc
push
inc
ret
sbb
pop
sub
cmp
mov
jmp
jno
mov
pop
divb
sub
dec
jne
repnz
xchg
arpl
popf
xchg
sub
and
mov
add
cmpsb
nop
fisubrs
fs
bnd
add
out
icebp
jne
mov
xchg
icebp
incl
out
cltd
sahf
pop
cmp
enter
das
add
pop
inc
pop
loop
sub
sub
pop
pop
sub
pop
ljmp
dec
xchg
xor
lock
test
clc
mov
sub
lds
and
out
stos
jnp
outsb
sbb
pusha
addr16
or
sub
das
leave
movsb
and
sti
mov
lea
lret
xor
pop
xchg
sti
mov
push
repnz
xchg
pop
shrl
sbb
push
push
ss
subl
mov
lcall
into
fstp
dec
ja
mov
je
xor
mov
test
sahf
jle
sbb
fdivrl
ret
movsb
and
sbb
in
gs
xchg
lea
je
movsb
mov
cmp
push
push
sbb
and
clc
sub
add
inc
and
xchg
sbb
fucom
xor
and
jl
jne
mov
and
icebp
jmp
add
cli
or
lret
daa
lret
les
sahf
lcall
cmpsl
ljmp
cmp
test
add
addr16
push
repnz
mov
lret
mov
cld
repnz
repnz
jno
subl
ret
scas
call
in
or
inc
mov
push
shlb
pop
inc
stos
fisubrs
aaa
js
jo
pusha
daa
sub
inc
sub
loope
lods
mov
xchg
mov
xchg
inc
xchg
adc
pop
xor
mov
in
cs
push
sbb
andb
cmp
fwait
push
sub
inc
mov
imul
inc
dec
jl
cmp
jmp
test
dec
test
and
call
sti
fwait
xchg
add
sbb
mov
popa
ss
mov
sbb
mov
pop
les
popa
push
jo
mov
jae
hlt
fsub
mov
es
fimull
cmp
outsb
fwait
dec
std
lea
rcrl
stc
push
xlat
loope
add
imul
std
decl
test
cmp
inc
leave
jo
mov
aad
adc
gs
daa
loope
pop
push
popf
dec
sbb
stc
mov
fnsave
and
fcom
pop
dec
hlt
enter
pop
sbb
pop
xorl
ja
inc
fisttpll
push
fcom
xor
out
lcall
stos
insl
or
or
mov
xchg
and
push
inc
shr
xchg
pop
lock
mov
les
pusha
dec
jg
setge
add
mov
mov
rol
jge
sbb
insb
jno
jp
lods
cmp
sbb
and
popf
cli
mov
mov
sub
xor
das
orb
adcb
cmp
inc
and
jmp
push
lods
mov
dec
adc
jns
xchg
arpl
mov
or
inc
jns
and
dec
push
repz
and
das
adc
push
xchg
jae
scas
cmpsl
sbb
leave
stos
dec
push
mov
mov
repz
adc
jg
popf
into
jmp
adc
fidivrs
mov
enter
push
sub
push
call
adc
add
push
or
cmp
arpl
and
ss
lea
push
add
or
frstor
lret
add
ds
add
movsl
cmp
ret
ret
negb
xchg
fstpl
lahf
jle
pop
popa
mov
aam
mov
push
jae
andb
daa
pop
jae
or
jg
cltd
dec
mov
lods
out
dec
out
mov
aaa
sub
cmc
in
or
sbb
cld
fwait
jecxz
or
fmul
rcrl
lods
mov
pop
pop
push
xchg
insl
inc
cmp
test
sbb
mov
push
fs
test
push
inc
stc
lret
repnz
dec
cmp
and
insb
pop
add
and
dec
cmp
cmp
mov
dec
mov
and
icebp
out
lock
test
xor
testl
mov
cmp
scas
ds
rol
mov
imul
sub
in
fwait
sub
enter
sbb
shrl
rcrl
or
adc
cmp
flds
push
mov
roll
jnp
sahf
aaa
aam
std
mov
sub
mov
cld
jbe
xor
test
ret
cmp
mov
imul
jo
ficoml
xor
stc
cmp
mov
adc
into
gs
test
loopne
pop
dec
sbb
sbb
enter
mov
sbb
xor
pop
arpl
xor
xchg
push
repnz
mov
fsubs
pop
popa
loop
add
add
ss
push
xor
fmuls
inc
xor
xor
jnp
dec
in
jle
push
sub
loopne
jmp
insl
lods
push
addr16
in
cwtl
loopne,pn
ret
add
popa
stos
mov
push
lods
push
in
and
add
mov
icebp
pop
rolb
dec
leave
out
ret
pop
fdivs
jae
mov
dec
sarl
mov
push
add
sub
xor
add
lods
mov
fs
inc
out
add
inc
add
in
cwtl
inc
jb
inc
pop
mov
loope
pop
sbb
xor
leave
mov
shl
loope
xor
or
addb
dec
pop
test
scas
popa
mov
pop
cwtl
sub
adc
mov
lock
xlat
mov
mov
mov
pop
aaa
lret
and
lds
sbb
add
orl
sub
negb
popa
fisttpll
adc
cltd
push
jbe
inc
aam
mov
clc
test
sbb
mov
pusha
iret
xorb
or
jle
xlat
xchg
iret
sub
stos
xor
sbb
popf
mov
orb
subl
xchg
stc
ret
mov
lds
or
jge
lret
icebp
jns
sub
mov
movsb
mov
fadds
idivl
jmp
jge
and
scas
pop
xchg
push
inc
sub
mov
iret
mov
jecxz
push
mov
cmc
sub
cs
cltd
test
popf
cwtl
mov
pop
pop
icebp
pop
inc
loope
popa
cmp
mov
sub
or
sbb
out
lea
fs
insl
pop
lea
mulb
aam
add
ljmp
mov
push
cwtl
sbb
mov
and
xchg
insl
push
xor
pop
and
push
mov
inc
mov
orb
push
jae
xchg
adc
cmp
rclb
icebp
in
sbb
xchg
aam
ja
mov
xchg
cld
xchg
leave
or
popf
jno
cs
orb
pop
mov
arpl
or
jo
jb
les
test
ljmp
lret
adc
push
dec
add
jl
add
push
test
inc
push
adc
cltd
das
xor
cmp
mov
sbb
jg
pop
fbld
jnp
or
nop
or
push
sbb
lahf
adc
mov
cmpsl
fucomip
adc
push
ret
test
mov
jp
or
or
mov
hlt
int3
mov
popf
pusha
pop
pushf
movsl
dec
push
ljmp
lret
test
test
sbb
jnp
repnz
cli
outsl
cltd
xor
sub
or
mov
dec
cmpl
mov
cmp
and
nop
mov
xlat
in
inc
and
sbb
fisubl
add
into
out
mov
jb
sub
sbb
popa
leave
dec
mov
mov
and
movsb
sbb
cmpsl
sbbb
mov
inc
cmpl
popa
mov
xchg
sti
lds
pop
test
das
cmp
xor
and
and
mov
in
mov
xor
xorb
ja
shl
insb
push
fiaddl
pop
or
mov
dec
mov
cmpsl
in
lock
sahf
inc
orl
test
ljmp
push
mov
jo
xchg
fs
mov
jecxz
dec
pop
mov
or
mov
inc
xchg
test
xchg
inc
jo
testl
jnp
push
js
loopne
lods
aam
push
or
in
pop
loope
add
mov
add
scas
push
lret
push
mov
pop
outsl
or
aad
xchg
fisttpl
adc
push
push
pop
into
fwait
add
rclb
sub
gs
jecxz
lahf
mov
dec
test
xlat
xlat
xor
xchg
xor
sahf
fildll
in
inc
mov
stos
lock
pop
push
test
sti
mov
das
xorb
into
movsb
stc
subl
mov
test
pop
push
xlat
mov
jmp
call
dec
cmc
xor
jnp
mov
shr
mov
or
mov
xchg
fcomi
ret
add
lds
xchg
in
cmp
cmp
cmp
into
push
cmpsb
inc
mov
push
xchg
and
and
mov
adc
push
frstor
jns
and
jno
sbb
xor
add
xchg
jmp
cmpsb
push
and
jnp
xchg
push
mov
inc
loopne
imul
popl
rep
push
mov
fwait
cmp
outsb
out
mov
flds
les
loope
cmp
xor
jecxz
mov
mov
lock
inc
mov
pusha
inc
scas
je
lods
iret
call
jl
int3
fistps
ja
data16
jo
push
aas
js
in
aad
loope
jne
adc
cmp
aam
sahf
cmp
leave
in
and
fldcw
xchg
hlt
or
add
adc
std
mov
in
lods
pop
stos
arpl
push
xchg
cmp
mov
mov
js
or
add
inc
aam
cwtl
fadds
hlt
push
lock
sbb
xorl
xor
and
xor
imul
and
inc
sub
fcomps
cld
jecxz
inc
xchg
xor
pushf
mov
fs
pushf
sti
nop
gs
data16
test
movsl
pusha
xchg
outsb
dec
popf
loope
cmp
orl
cmpsb
xchg
inc
add
xor
mov
adc
lahf
sbb
shll
add
loopne
insb
fisubs
push
cmp
sbb
in
std
sbb
or
in
insl
push
mov
and
clc
fcoms
in
and
ss
loope
les
arpl
in
shl
xor
out
lret
lods
clc
mov
shrl
in
xchg
jno
xor
ja
jecxz
push
fldcw
lret
jle
add
out
sub
push
sbb
shlb
mov
mov
adc
sbb
mov
int3
popa
lret
rcrb
add
lahf
mov
mov
dec
jo
fsub
xchg
or
sbbl
lcall
add
jne
push
adc
push
jae
xor
or
rorl
mov
cwtl
add
xor
les
adc
movsb
and
pop
sarb
scas
lahf
xchg
xchg
sbb
and
dec
jmp
fadds
scas
sub
push
sub
xchg
sbb
inc
rclb
mov
mov
or
aam
lcall
inc
mov
jbe
xchg
xor
sbb
repz
mov
push
pop
fdivrl
jl
mov
fwait
xor
lods
sub
pop
in
fcomps
into
in
or
icebp
xchg
repz
cltd
aad
mov
enter
dec
test
ja
dec
popf
xchg
or
scas
pop
sub
jnp
inc
inc
mov
test
push
sub
in
cmpsb
aaa
push
jle
aaa
lret
jp
mov
faddl
in
add
test
daa
inc
dec
pop
sbb
xorb
mov
and
loop
enter
mov
push
fnsave
pop
jno
xchg
inc
mov
test
outsb
fldenv
fldz
insl
in
out
push
and
dec
mov
test
cwtl
inc
push
idivb
cmp
outsb
insb
pusha
add
popa
adc
cmp
or
sarl
mov
mov
rcr
push
test
jmp
push
mov
out
mov
fldl
jno
sbb
pushl
lea
cld
dec
mov
popf
pop
mov
outsb
cmp
and
frstor
add
or
scas
mov
mov
sub
daa
into
xchg
push
xor
stos
cwtl
hlt
cmp
repz
xchg
sti
les
pop
popa
repnz
addr16
ja
in
mov
xor
and
or
bound
test
out
arpl
sbb
jb
sbb
repz
push
jmp
mov
fcomi
push
mov
cmpl
xchg
push
inc
push
pop
mov
loop
add
pusha
cmp
fldt
flds
rclb
xchg
les
push
or
xchg
dec
popf
in
cmp
add
adc
test
imul
pop
cld
xlat
and
scas
pop
and
sbb
jb
xlat
mov
jno
dec
add
sbb
jecxz
inc
sbb
stos
aaa
sbb
jg
repz
jp
int
mov
xchg
fbstp
stc
mov
xor
das
xor
dec
push
mov
xlat
sub
mov
stos
jno
rclb
pushf
out
push
fidivrs
push
sar
push
dec
jmp
push
ror
adc
inc
jae
aaa
jns
arpl
dec
int3
iret
std
push
fidivrl
sub
mov
lcall
icebp
js
mov
cwtl
ss
or
sti
adc
pop
inc
ret
inc
sbb
jecxz
out
push
pop
mov
and
mov
mov
outsb
push
add
mov
mov
add
and
inc
push
fwait
dec
push
out
cli
inc
inc
jo
insb
add
mov
mov
lret
jno
dec
mov
push
mov
jnp
pop
call
ret
dec
push
or
and
mov
stos
jno
xchg
xchg
mov
scas
mov
or
out
inc
pusha
inc
aas
addr16
sub
jle
loop
or
mov
add
adc
pop
shr
clc
jecxz
fmuls
loope
fwait
nopl
xchg
mov
ds
adc
sub
cmpsl
mov
dec
aad
jl
pop
pop
mov
notb
inc
out
sub
dec
rcr
lea
inc
dec
mov
aad
cld
mov
sbb
sbb
mov
dec
arpl
xor
shrb
aad
push
fwait
sub
addr16
pop
test
push
mov
xor
xor
mov
and
pop
adc
mov
mov
xchg
pop
mov
psadbw
mov
adc
call
add
and
sbb
mov
das
and
jb
xor
fucomi
test
pop
cld
inc
in
pop
test
sub
movsb
adc
pushf
push
cwtl
pop
shlb
out
stos
jo
loopne
jecxz
ret
out
cmp
fsub
dec
out
rol
das
sub
lock
mov
sbb
mov
fcompl
add
push
movsb
sub
jp
fdivl
fsts
mov
mov
mov
sub
mov
stos
div
movsl
ljmp
testb
fwait
insl
mov
sub
orb
sub
push
sahf
addl
jge
cmp
rcl
in
xchg
mov
fildll
push
dec
xor
inc
cmp
aam
push
mov
jb
jae
mov
xor
cmp
ret
pop
xor
aaa
mov
inc
es
stc
xor
push
ds
test
sub
incb
ja
adc
xchg
jb
xchg
adc
aad
das
mov
and
xchg
out
add
out
dec
or
loopne
mov
mov
icebp
aam
inc
stc
test
push
fs
ds
stos
jmp
or
add
fs
je
mov
outsw
mov
jne
fs
mov
sbb
dec
xor
sub
push
jle
imul
and
jg
dec
mov
and
loope
or
and
ret
movsb
aaa
frstpm(287
sub
cld
lea
into
pop
jp
hlt
bound
cmp
mov
rcrl
xor
and
es
jmp
add
jg
test
adc
dec
mov
pop
inc
je
cmp
mov
inc
pop
dec
inc
cmpsb
jg
dec
dec
cmp
push
clc
dec
xor
adc
aaa
mov
imul
inc
cli
into
fs
cltd
push
push
test
push
mov
cmp
mov
pop
test
aam
cmp
lods
fstp
out
mov
jo
cltd
mov
inc
out
xor
stc
call
mov
push
mov
insb
repnz
adc
insb
xorb
mov
int3
xor
negl
notb
xor
pop
push
adc
and
jne
add
js
adc
scas
mov
add
jne
jl
inc
aas
repnz
mov
in
ret
xchg
das
xor
ficomps
pusha
mov
or
std
inc
sbbb
sbb
xor
sub
sub
adc
mull
popf
in
sub
and
lcall
in
push
sub
in
add
mov
mov
ret
subl
cli
das
xor
adc
cli
ljmp
mov
stos
sbb
xor
sub
aaa
push
adc
repnz
lods
mov
fldt
insl
arpl
testl
mov
iret
inc
fisttpl
mov
xchg
bnd
jnp
cmpsl
cmp
repz
xchg
sbb
enter
incl
dec
cmp
rorb
mov
stc
addr16
sub
or
test
cld
dec
nop
dec
dec
mov
inc
pop
ja
insb
dec
mov
nop
ljmp
push
dec
in
adc
mov
loopne
or
xor
loopne
negl
mov
mov
and
insl
adc
stc
int
iret
aaa
fs
push
notl
test
shrb
int
jbe
loope
xlat
out
test
cmp
int
rcrl
fimull
mov
es
mov
adcb
xor
in
add
push
clc
cwtl
pop
push
jbe
mov
sbb
adc
mov
fimull
loop
loope
subb
or
or
adc
dec
nop
in
jno
stos
mov
inc
adc
push
mov
test
push
icebp
xchg
sub
jne
sbb
fisttpll
movsb
sbb
jb
add
insb
mov
pop
leave
sbb
add
js
xchg
mov
movsb
out
push
mov
push
jl
jecxz
jl
dec
push
xchg
fcoms
iret
jecxz
shlb
aas
mov
xor
add
mov
loop
sbb
mov
iret
cwtl
lcall
and
test
lret
add
in
add
xorb
add
ljmp
int
jmp
cmpsb
jge
cmc
das
jg
lea
sti
dec
sbb
push
cmpsb
dec
ret
adc
sahf
add
cld
test
mov
jl
fisubs
arpl
clc
inc
pop
repnz
inc
mov
repz
popa
or
int3
jae
in
add
sub
cli
push
cmp
ss
push
dec
push
gs
cs
sub
insb
inc
push
pop
push
ss
lahf
add
fs
xchg
movsl
dec
int
sub
mov
mov
je
push
hlt
jb
push
popf
insl
fs
mov
movsb
add
subl
in
dec
dec
movsb
int3
les
insb
call
shr
mov
mov
cld
push
fcomi
testl
sbb
int3
scas
int3
pop
loopne
dec
outsl
mov
mov
push
mov
loope
push
hlt
mov
jmp
mov
cmc
scas
fucomip
adc
in
rcll
pop
jne
es
push
inc
mov
nop
sti
jmp
mov
lret
sub
and
sub
xchg
add
inc
les
out
int3
arpl
or
ja
xor
push
fisubrs
inc
inc
jo
push
add
mov
iret
jb
cmp
add
fmull
dec
xor
add
xor
fs
sbb
sub
inc
ret
or
sub
push
mov
cmpsb
shlb
js
dec
nop
dec
jns
or
movsl
cmpsl
dec
ret
push
in
insb
push
mov
in
in
fmul
cmp
xchg
cwtl
cmp
or
daa
jne
iret
test
test
mov
xchg
inc
cmp
mov
adc
mov
test
inc
ss
push
pop
push
addl
cmp
sbb
call
push
mov
mov
adc
push
xchg
sbb
je
push
mov
pmuludq
fucom
mov
or
add
cltd
cld
pop
and
xchg
xchg
xor
push
dec
iret
push
nop
daa
dec
test
fwait
mov
loopne
xorb
test
xor
in
xor
jecxz
notl
int3
sub
mov
test
inc
add
cltd
dec
es
movzwl
lret
lea
jmp
daa
gs
mov
push
inc
cmpsl
mov
pop
scas
int
fdivs
pusha
pop
mov
fiadds
mov
cltd
xchg
addr16
mov
imul
shr
pushf
fmull
mov
fiadds
xor
iret
in
cld
lret
movsb
ror
push
out
movl
aad
dec
xor
shrl
mov
ret
mov
push
mov
mov
jbe
and
inc
pop
movsl
adc
sub
xor
popf
mov
shl
mov
test
es
leave
sub
mov
mov
fsubrs
sbb
outsl
jne
pop
sbb
cmp
div
mov
fldcw
ret
call
cmp
roll
jge
in
cmp
test
or
cmp
nop
or
dec
jp
pop
pop
jl
ljmp
subb
jbe
pop
mov
jae
mov
fistl
and
pop
arpl
lds
repz
mov
and
cmp
jle
fstpl
mov
aas
pop
push
test
loopne
sub
vcomisd
sbb
xchg
lret
push
daa
jnp
mov
repz
mov
lret
insl
push
jae
and
xlat
sub
inc
mov
mov
mov
push
inc
xor
clc
dec
outsl
pop
inc
push
insb
or
xchg
ret
and
add
scas
jmp
push
mov
test
dec
insl
cld
push
stos
aam
pop
jl
xchg
in
mov
inc
mov
in
add
imul
mov
loope
arpl
fldcw
je
ljmp
jecxz
jns
cltd
int3
insl
jge
out
mov
out
imul
int3
dec
aas
stos
shrb
das
cmp
mov
sbb
mov
push
sub
xor
and
mov
loope
adc
roll
mov
mov
jge
lret
hlt
inc
add
int3
fcoml
add
fcmovnu
sahf
popl
outsl
imulb
jmp
xor
lock
cmpsl
int
mov
xchg
addr16
ljmp
push
xchg
mov
dec
inc
stc
iret
or
loop
xchg
xor
enter
xchg
ljmp
jno
in
mov
sarb
nop
arpl
push
fnsave
adc
sub
xchg
andl
adc
push
mov
pop
push
out
test
jmp
jb
mov
mov
xchg
test
lret
fsts
aas
xor
in
inc
mov
and
das
cmp
in
pop
pop
xor
inc
movsl
pop
mov
and
lret
mov
int
lahf
cmp
cmp
negb
lods
pop
jno
xchg
cltd
out
xor
sub
adc
aam
ds
sub
pop
mov
cmpsl
pop
lds
imul
and
aam
mov
gs
xchg
aas
sub
xchg
loopne
xor
mov
mov
nop
sbb
div
pop
in
xchg
gs
or
out
loope
shr
loope
sub
and
dec
mov
clc
repnz
and
sahf
arpl
cmp
int
xor
inc
call
das
repnz
repnz
sarl
fcompl
sbb
push
pop
aas
fistpll
pusha
icebp
jae
and
jmp
jp
lret
test
xlat
xlat
andl
push
adc
xor
orb
sbb
je
add
roll
add
clc
movsb
xor
fs
mov
dec
sbb
scas
add
icebp
push
arpl
bound
dec
aam
and
add
loope
adcl
lea
xor
jmp
out
adc
push
cmp
popa
int
out
dec
or
xchg
sub
xor
adc
or
shl
sub
mov
jae
ror
int3
clc
cmc
test
dec
add
sbb
pop
aam
xchg
xchg
jmp
or
ljmp
das
iret
dec
xor
sub
insb
aaa
es
push
aas
mov
mov
sbb
sahf
lret
loope
mov
fiadds
pusha
fwait
pop
in
cmp
dec
ljmp
add
jne
scas
jo
fisttps
pop
jae
movsb
mov
shrb
mov
pop
xchg
outsl
push
mov
fwait
dec
pandn
bound
add
hlt
sbb
lock
outsb
movsl
outsb
nop
movsb
dec
mov
dec
shr
xchg
das
mov
pop
notl
xor
cmp
in
xchg
dec
ds
cld
fdivrs
and
jb
lock
shll
add
inc
sbb
xchg
stc
dec
fistps
iret
aad
push
add
jge
movsb
inc
pop
push
pop
aas
jecxz
das
dec
dec
fwait
in
adc
enter
push
cmp
sub
xor
mov
sub
inc
sub
daa
jnp
inc
daa
xchg
nop
mov
mov
in
jl
mov
inc
pop
in
repz
repnz
popl
mov
iret
mov
mov
adc
xor
dec
pop
fadds
jo
cmp
adc
cmp
out
mov
lock
sbb
sbb
xor
adc
vcvttss2si
jge
mov
xchg
dec
pop
aam
pop
push
daa
fsubrs
inc
sahf
mov
dec
lret
adc
movsb
loopne
pusha
and
mov
inc
scas
cmp
fisttpl
dec
out
divb
add
mov
push
sub
xchg
and
sti
ljmp
pop
xchg
mov
test
pop
cli
es
sub
adc
xor
dec
pop
push
dec
cmc
xchg
push
js
in
cmpsb
mov
push
in
fs
xor
adc
cwtl
and
sti
cmc
cltd
or
sub
cmp
xor
test
or
push
subl
out
adc
cltd
cmp
rclb
cs
add
adc
xor
ret
push
adc
push
xor
arpl
push
dec
pop
pusha
cmp
rep
bound
in
pop
sahf
gs
push
fiaddl
lods
aaa
lods
sub
dec
enter
lods
pop
pop
jns
dec
pop
test
pop
dec
xchg
push
mov
ret
jne
mov
jno
in
sti
sbb
aad
xchg
scas
outsb
pushf
adc
or
stos
xor
mov
jg
pushw
lret
hlt
cmpsb
xor
xchg
fabs
aam
pop
jp
sbb
and
push
inc
loop
and
das
ret
pop
xchg
sub
lcall
fistpll
xchg
insl
in
mov
lret
mov
outsl
ljmp
mov
push
jecxz
rcl
test
cltd
fldcw
aad
daa
jl
fsubrl
dec
push
sbb
jmp
incl
icebp
push
in
jp
mov
mov
std
imul
xchg
test
movsb
add
sbb
test
xchg
sbb
movsb
imul
push
add
ljmp
es
out
insb
xchg
clc
iret
repnz
dec
sbb
pop
test
cmp
cli
jl
js
adc
lret
sub
jl
adc
fwait
pop
dec
cltd
sarb
cmp
in
ss
addr16
xlat
orl
and
daa
or
cmp
mov
add
mov
stos
pop
cmp
fsubr
push
rcrb
ret
sbb
xor
add
xchg
xor
add
mov
adc
and
lret
mov
add
ret
sbb
rcrl
aaa
stos
xchg
xchg
cmp
lea
xchg
stos
inc
ds
push
inc
or
adc
das
pop
and
or
push
push
lgs
inc
xorb
shll
jg
jb
xchg
les
mov
inc
push
sarl
pop
cmpb
cmovae
cli
outsl
mov
imul
in
enter
xor
xchg
rorb
insb
push
movsb
ret
xor
dec
dec
cmp
adc
popa
leave
and
sub
jp
pop
and
sti
punpckhbw
mov
dec
cmp
out
test
jbe
inc
mov
adc
test
nop
dec
mov
aad
adc
ss
movsb
xchg
sub
xlat
cs
mov
jno
jp
fists
addr16
xlat
xchg
cmpl
inc
call
pop
cmp
xlat
or
cmp
movb
loope
ljmp
stos
sub
push
jae
sbb
pusha
xor
loop
aam
jmp
pop
jns
mov
mov
imul
fs
mov
shlb
hlt
mov
movsl
mov
and
or
icebp
or
jns
int3
add
cs
into
add
mov
fwait
push
sbb
lock
out
or
fdivrp
lcall
or
fwait
cmp
cwtl
adc
fdivrl
scas
cmp
mov
ss
sbb
inc
cmp
std
scas
mov
xchg
push
push
xchg
inc
adc
in
xlat
jp
lds
add
stos
fsts
pop
jp
lcall
loope
enter
in
pusha
add
and
gs
cmp
adc
lds
shll
mov
test
rcl
dec
icebp
dec
js
jne
sub
rclb
fcomps
ja
lods
xchg
push
pusha
rorb
sbb
pop
mov
xor
xor
pop
je
imul
mov
addr16
imul
or
adc
or
pushf
mov
dec
mov
jmp
push
fxtract
lds
inc
xorl
push
jp
jns
and
ss
shrb
jnp
push
mov
hlt
or
dec
pop
xor
push
data16
xchg
outsb
adc
jg
clc
out
psubusw
aaa
out
nop
mov
scas
ja
mov
stc
orb
push
in
int
pop
mov
xor
inc
inc
ret
add
cld
mov
pop
insl
adc
push
test
lock
xchg
inc
pop
orl
ljmp
pop
pop
cmpsb
jge
sarl
jle
pop
lret
mov
jp
loop
rcrl
insl
cs
and
pop
add
das
mov
push
dec
ljmp
xchg
int
jecxz
sahf
xorl
mov
nop
in
or
push
mov
sahf
icebp
add
sbb
inc
dec
xchg
pop
daa
mov
mov
sbb
clc
mov
mov
lea
inc
cmp
dec
test
and
cld
es
or
jmp
shr
repz
cmp
movsb
add
ret
scas
xor
push
cmpsb
insb
loopne
sub
leave
ja
pop
add
dec
stos
ss
or
add
add
push
jl
fidivl
pop
pop
sbb
je
mov
jecxz
jb
ja
inc
je
pop
fmul
sti
stos
dec
pop
dec
and
cmp
push
lcall
icebp
sub
xchg
lock
xor
addl
dec
lea
mov
cmc
decl
add
inc
mov
sbb
xor
sti
adc
inc
sbb
jge
imul
xorl
jmp
imul
aad
lret
mov
xor
in
out
xchg
negl
cmp
outsb
add
jle
pop
ret
jns
push
cmp
rcr
dec
push
addl
cmp
xor
push
test
or
stos
mov
sub
js
ja
shr
outsl
xchg
call
jge
sti
jns
lret
js
lea
fmull
cwtl
pop
push
xchg
xchg
jns
mov
or
xor
inc
xor
cmp
cltd
and
ljmp
xchg
inc
fidivl
push
xchg
mov
xchg
leave
cmp
imul
dec
pop
mov
cmpsl
sbb
push
mov
scas
inc
jno
mov
xchg
mov
jmp
and
push
data16
sub
movsb
fadds
xchg
pushf
std
add
mov
subl
out
xor
inc
sti
into
ret
mov
rcll
mov
xorb
jnp
out
push
dec
out
mov
imulb
inc
ljmp
adc
xchg
add
flds
adc
inc
in
xchg
adc
gs
cmc
bound
dec
jg
mov
insb
xchg
ljmp
jbe
pop
jo
test
cld
shrb
xor
out
push
nop
cmp
in
xchg
test
mov
repnz
mov
icebp
xor
pop
sub
sub
push
or
sub
scas
clc
fs
fldenv
lea
out
sbbb
fnsave
add
fs
add
loopne
in
ss
mov
pop
stos
loopne
inc
shrb
cmpsb
inc
jno
jnp
mov
shrl
mov
mov
sbb
sbb
aad
pop
ficoml
mov
test
sub
dec
adc
call
push
cld
add
inc
mov
mov
inc
aam
stc
inc
int
outsl
mov
push
push
rcll
pop
sbb
cli
push
ret
out
imul
push
mov
adc
faddl
imul
mov
lret
loop
push
add
mov
sar
cmc
dec
stc
push
mov
or
xchg
push
fnstcw
sbb
shl
add
pop
xor
mov
xor
arpl
dec
xlat
xchg
pushf
or
jno
pop
lret
push
scas
push
stc
out
js
cmp
ds
in
jo
mov
outsb
ds
adc
add
xchg
test
hlt
pop
push
sub
jb
inc
shr
mov
inc
mov
shlb
sbb
sbb
xlat
cmp
hlt
jp
inc
push
xchg
push
lds
mov
outsl
in
add
sbb
mov
pop
mov
in
jo
jp
andl
leave
pop
sub
cmp
mov
cwtl
hlt
ret
int3
jmp
jbe
lods
or
mov
sbb
dec
xchg
jl
mov
mov
sbb
jns
bound
or
pop
in
mov
inc
sarl
push
mov
xchg
sti
and
bound
xchg
ret
fimull
lods
inc
sub
cmpsl
lret
mov
mov
inc
push
xchg
pop
stos
or
test
xor
mov
test
add
xor
outsl
pop
popa
loop
rcll
rcll
sub
dec
pop
aaa
aaa
es
jp
cmp
arpl
imul
icebp
sbb
pop
sub
pop
mov
arpl
push
movsb
daa
cmpsb
add
jmp
push
mov
push
cwtl
dec
mov
mov
lahf
aam
dec
inc
dec
das
mov
js
sub
push
lods
or
push
in
mov
adc
mov
inc
aas
fs
rolb
adc
jle
gs
mov
mov
cs
outsb
stos
sbb
ficoms
pop
xchg
sbb
stc
jl
sbb
jne
andb
mov
divb
lods
aad
sub
pop
mov
xor
lret
js
lds
loope
jo
in
cltd
mov
lods
xchg
scas
ret
adc
mov
jge
ret
adcl
lods
pop
nop
xchg
inc
rol
or
imul
call
sub
sub
jae
je
mov
or
pop
inc
mov
or
icebp
add
mov
jle
in
and
aad
dec
rcrb
stc
cmp
inc
repnz
cmp
pop
and
test
mov
sahf
pop
lahf
fstpt
xor
aaa
or
adc
loop
sbb
push
add
lds
fwait
mov
popf
shrb
dec
fsubrl
cmp
cs
cs
aam
mov
dec
or
and
rol
popa
xchg
pushf
sub
inc
push
xchg
jg
movsl
push
insb
mov
ficoms
mov
scas
rorb
gs
push
and
dec
push
lea
pop
mov
out
std
ljmp
inc
xlat
and
dec
gs
aaa
fidivrl
xchg
stos
roll
lret
test
sbb
xlat
ljmp
push
xor
add
imul
out
and
lret
arpl
movsl
out
cmp
scas
push
out
or
jg
loope
add
adc
stos
fidivs
call
lcall
and
xchg
aaa
imul
jns
dec
subb
mov
jae
inc
sbb
fnstsw
faddl
xchg
inc
jg
xchg
fdivp
inc
jl
mov
push
movsl
mov
outsb
cmpsb
popf
sub
lret
aaa
jno
movsb
lret
inc
fs
xor
inc
xchg
int
loopne
pop
xchg
outsb
or
movsb
push
inc
lret
or
sbb
stos
mov
add
stos
xor
push
add
fnstsw
pop
mov
mov
mov
leave
cmpb
in
mov
std
cmpsb
out
and
pop
adc
movsl
fnstcw
punpckhbw
jb
stos
jno
push
cltd
jl
jo
xor
inc
stos
outsb
inc
pusha
hlt
pop
ds
xor
mov
jnp
push
cmp
leave
xor
xchg
pusha
mov
jl
notl
pop
lods
sbb
xchg
mov
bound
mov
dec
sbb
add
pop
pop
inc
jbe
mov
andl
xchg
dec
inc
push
mov
repnz
fisubl
outsb
mov
cmp
cmp
int
inc
inc
pop
cmpsl
cmc
and
mov
cmp
adc
dec
fisubs
jmp
cmp
nop
xchg
pop
das
jno
out
outsl
dec
jge
out
jl
and
xor
addr16
sbb
add
add
mov
inc
aam
sarb
sbb
sarl
pusha
xchg
and
sbb
mov
sarl
fsubs
sub
sbb
and
xlat
push
addr16
fs
xlat
lret
int
js
push
and
mov
subb
stc
les
jae
cmpsl
sub
andl
mov
sarb
les
addr16
sbb
outsl
lock
scas
out
xor
push
pusha
sub
mov
scas
pusha
mov
or
fs
xor
div
lods
inc
mov
ss
lods
mov
mov
inc
push
andb
icebp
mov
repnz
pop
fstps
insb
jno
ds
push
in
sahf
mov
mov
inc
sbb
lock
fstl
pop
mov
int
outsl
popa
mov
xor
push
outsb
jnp
clc
std
jmp
sbb
cmp
adc
jmp
shlb
ret
mov
lret
inc
ja
and
gs
push
std
mov
sub
mov
dec
popf
ds
nop
das
stos
xor
sub
push
in
jno
jo
adc
sbb
mov
xchg
push
jge
mov
adc
push
adc
dec
mov
xchg
cmpsl
js
clc
jno
jnp
push
push
stos
cmp
out
mov
xchg
sbb
mov
mov
inc
or
movsb
fsubr
daa
mov
stos
inc
mov
arpl
lcall
int
fdivs
in
movsb
mov
data16
rcl
push
push
outsb
lods
arpl
insb
add
popf
dec
jno
test
das
test
adc
scas
pop
in
pop
outsb
dec
push
das
cmp
jo
push
push
xorb
mov
jo
cmp
jnp
test
mov
sub
xor
test
repnz
xorb
imul
xchg
ficompl
mov
repnz
mov
pop
lret
js
push
xchg
movsb
mov
fwait
arpl
sub
gs
cmp
jmp
and
iret
push
sub
in
outsb
aad
inc
roll
xor
pop
xchg
shlb
int3
divb
lahf
inc
ja
lods
mov
adc
ja
std
jecxz
sbb
sub
inc
fdivrl
out
fisubl
mov
push
adcb
cmp
ss
mov
push
dec
lock
lret
int
repz
push
jg
sub
pop
in
cmp
mov
cmc
data16
jbe
dec
aad
fsubrs
jns
js
stos
in
call
inc
roll
inc
mov
jae
xchg
cmpsl
scas
jno
test
jo
int3
sub
add
mov
das
cmp
xor
and
sub
cmp
pop
out
cmc
stc
lds
repz
cmpsb
add
or
lcall
popa
int
rolb
jno
adc
fnsave
mov
shr
loope
and
jne
out
or
fs
lods
lahf
arpl
or
xchg
pop
call
jle
pop
orl
push
sbb
popf
es
lahf
pusha
fisubrl
cmp
es
mov
mov
rclb
push
cmp
push
hlt
stc
inc
mov
sbb
adc
int3
add
xor
mov
je
data16
mov
push
xchg
mov
lret
mov
mov
scas
fdivs
push
adc
jbe
lock
cmp
pop
pop
or
dec
xchg
inc
and
loope
ljmp
mov
js
cmpl
nop
sarb
xchg
or
push
pushf
ds
adc
dec
rcll
in
inc
mov
dec
data16
mov
std
test
lcall
pop
adc
xor
pop
pop
xor
jl
xor
cmp
xchg
into
mov
data16
stc
mov
test
sbb
push
xor
xorb
mov
jae
stos
add
out
mov
inc
pushf
jp
cmp
jg
pop
leave
xlat
cmp
sbb
jg
shl
pop
dec
adc
insb
aad
pxor
daa
sti
lret
sbb
out
push
cwtl
xchg
dec
in
loop
push
push
mov
iret
fwait
jmp
daa
adc
dec
lcall
cld
ret
mov
rcrl
hlt
rcll
hlt
sbb
into
out
sti
daa
rcll
inc
je
jmp
inc
mov
adc
out
xchg
rol
mov
adcb
push
lea
push
in
imul
mov
cltd
rcll
lods
stos
andl
jb
dec
loopne
cmpsl
mov
cld
sub
pop
adc
nop
mov
enter
dec
jno
and
pop
idivl
sub
jl
fdivrl
push
xchg
add
es
mov
pop
xor
and
sub
pop
mov
sti
inc
fsubp
jmp
inc
jmp
add
sbb
ja
inc
cmp
jmp
aam
cmc
fld
xchg
sub
or
sti
xchg
xchg
sub
pop
dec
sbb
leave
pop
push
es
iret
xchg
arpl
sub
arpl
xchg
out
mov
sub
sbb
xlat
and
mov
mov
pop
gs
stc
sahf
adc
mov
push
dec
dec
mov
pop
lahf
roll
sub
stos
movsl
flds
aaa
xchg
lret
mov
dec
xchg
push
xchg
or
ds
fsubl
mov
dec
xchg
shr
sub
sbb
lock
xchg
out
lret
testl
cmc
lea
or
out
lcall
cli
inc
mov
sbb
push
call
inc
notb
lods
mov
fimuls
dec
sbb
jbe
clc
sbb
push
adc
flds
and
push
stos
add
mov
in
xchg
scas
push
movsb
out
jl
or
repz
mov
pop
cwtl
outsl
mov
or
js
aas
mov
rcrb
pop
push
subb
mov
mov
push
out
scas
xchg
divb
subl
mov
inc
daa
xlat
movups
mov
jmp
shr
mov
in
cltd
pop
ja
repnz
popf
pop
imul
pusha
inc
mov
test
push
adc
and
or
cmp
cmc
cld
jmp
cmp
sbb
fadds
shll
nop
hlt
mov
dec
shrb
push
pushf
xchg
sbb
jg
aas
or
jb
stos
sbb
sub
xchg
mov
into
insb
dec
jne
lcall
cs
cwtl
aad
mov
scas
mov
add
pop
sbb
je
ret
sbb
fdivrp
daa
fcomps
or
mov
imul
sub
in
jg
repnz
add
in
ja
cmp
mov
hlt
and
pop
jns
dec
push
push
fstps
ret
pop
pop
fcompl
pop
mov
or
mov
repz
cmc
icebp
jns
jge
sarb
shll
mov
jns
cmpsb
add
dec
pop
jge
pushf
push
insl
xchg
inc
and
mov
out
dec
js
cld
mov
mov
inc
mov
pushf
insb
jmp
pop
jb
push
adc
mov
adc
stos
cmp
movl
push
aad
mov
popf
cmpsl
and
mov
push
stos
aam
mov
notl
jnp
in
sbb
dec
enter
orl
or
dec
hlt
jg
lahf
jmp
push
mov
pop
mov
out
dec
xchg
dec
ds
adc
cltd
jbe
ljmp
out
sti
js
mov
cmc
jae
popa
dec
int
data16
mov
movb
rol
add
repnz
into
mov
test
pslld
sub
fwait
in
inc
mov
sub
test
cmpsb
push
insl
movsl
dec
cmpsl
pop
xor
jle
and
les
cmc
adcl
ficompl
sbb
and
mov
and
jl
cs
inc
into
iret
mov
add
adc
es
pop
gs
jmp
movsb
or
repz
mov
mov
call
imul
aam
out
into
fimuls
int
out
mov
loope
push
add
repnz
repnz
mov
in
cmp
lcall
cmp
loopne
add
loope
add
or
mov
sti
shrl
push
sbb
xor
fmull
scas
or
pop
mov
ja
xchg
sub
mov
popa
scas
jecxz
push
test
add
dec
filds
rcrb
add
or
adc
jno
aam
push
mov
aam
mov
xchg
sub
ret
add
stos
sbb
repz
push
mov
and
fisttps
add
call
pop
fs
mov
imul
fldenv
data16
jmp
pop
cli
push
movsl
jmp
sarl
xor
mull
cmp
pop
iret
jle
movsl
enter
or
jecxz
outsb
in
and
ds
and
pusha
arpl
jnp
insl
daa
jmp
or
repnz
outsb
mov
mov
add
sti
add
pop
cmp
lret
out
je
mov
inc
cmp
mov
shll
stos
or
iret
ds
mov
js
insl
ficomps
iret
sarl
leave
daa
pop
xor
add
jns
jns
in
xor
je
cli
or
pop
cmp
mov
repnz
cmp
popa
inc
inc
outsb
xchg
mov
sbb
es
jmp
and
mov
pop
jl
insb
arpl
movsb
xorb
inc
pop
ffree
push
insl
out
adc
jnp
fisubl
ds
cltd
test
stos
push
outsl
stos
sub
sub
and
mov
in
cmp
popa
mov
movsl
pop
mov
sbb
test
daa
mov
push
xor
mov
pusha
aas
in
and
dec
xchg
fisttpl
xlat
dec
sub
cmp
test
imul
jle
adc
pop
ret
fnstsw
cltd
lods
ror
addb
cmp
lea
mov
xor
mov
dec
inc
pop
outsl
ret
ja
fisttpl
xchg
int3
jle
out
pusha
xchg
in
mov
inc
cmpsb
mov
sbb
les
idivl
xor
movsl
push
loop
ja
add
or
cmc
imul
lods
sbb
mov
aas
mov
ds
pop
push
divl
lods
add
shrb
int3
aaa
sti
jno
mov
out
in
cmpl
mov
loop
movsb
test
sub
xor
int3
lds
pop
insl
adc
lret
call
inc
mov
repnz
imul
sbb
std
ljmp
sub
das
push
inc
pop
out
mov
sub
or
push
dec
enter
imul
pushf
pop
lods
add
in
adcl
xchg
rol
ljmp
mov
mov
incl
fidivl
or
dec
daa
loop
mov
mov
add
cs
mov
lret
add
fisubs
push
xchg
inc
inc
cmp
xor
mov
ret
lds
lds
or
fdivs
pop
or
push
inc
les
lock
jne
shlb
and
negb
mov
mov
mov
lcall
dec
mov
push
dec
sub
iret
xor
enter
in
mov
loope
enter
out
push
or
in
sub
call
call
xor
js
adc
pusha
out
sbb
jg
adc
xchg
mov
ficoms
icebp
in
addr16
stc
repnz
pop
ret
pop
pop
sub
cld
clc
out
test
repz
pop
add
fcmovnbe
mov
pop
cmc
xchg
lcall
jg
jp
or
jl
call
std
shrb
mov
pushf
movsb
push
sti
or
out
aas
mov
comiss
cmp
test
mov
mov
pop
mov
call
sub
fnsave
mov
mov
adc
hlt
and
std
leave
subl
mov
mov
push
adcl
jg
cmovg
jmp
cmp
fbstp
shll
xor
dec
sti
sbb
jle
movsl
push
rcr
out
jbe
adc
push
push
sub
sbb
adc
enter
test
lret
xchg
inc
inc
es
xchg
or
mov
loopnew
inc
cmpsl
cmp
aas
lret
sub
ljmp
ds
repnz
ret
cmp
test
inc
sub
cmp
jae
fimuls
or
inc
ss
nop
jmp
dec
mov
mov
das
jb
shrl
stos
xchg
out
add
jecxz
jmp
test
mov
nop
sarl
pop
les
or
mov
inc
test
into
push
push
call
pop
pop
jg
test
popf
lcall
fstps
gs
jae
js
adc
es
pop
mov
inc
icebp
adc
adc
mov
loop
sahf
cld
movsl
add
faddp
cs
das
mov
mov
add
lcall
mov
inc
movsb
xchg
and
fwait
jge
out
mov
push
ret
or
xchg
fwait
adc
clc
mov
jbe
les
out
jae
rorb
in
testl
pop
in
lea
out
push
lods
xchg
sub
and
inc
adc
add
cmp
inc
mov
bound
cmc
jno
mov
xchg
mov
mov
js
jae
loope
pop
popf
mov
sahf
cli
xor
sbb
mov
rolb
or
out
mov
ja
aam
call
inc
mov
movsb
or
insl
mov
pop
pinsrw
pop
mov
mov
xor
data16
in
sub
sub
fcomip
scas
pop
or
in
pop
cwtl
mov
jae
sub
ret
in
and
push
pop
xorb
push
sub
loopne
mov
xchg
xchg
enter
dec
sbb
gs
mov
jle
repnz
mov
lods
and
mov
dec
lock
lods
lcall
cs
mov
leave
in
mov
xchg
rep
dec
popf
mov
lcall
dec
cld
sahf
stc
and
stos
inc
or
ss
add
dec
ljmp
add
outsl
lds
add
mov
cmpb
lcall
je
incb
pop
cld
lods
or
repz
add
dec
movsb
in
fisubrs
stc
mov
push
cmpsl
fdivr
lret
jno
mov
ret
in
repz
in
push
mov
psraw
int
bound
pop
push
sbb
into
out
outsb
mov
jne
mov
cmp
icebp
nop
testb
xchg
in
inc
dec
ja
repnz
xchg
dec
in
repnz
or
test
cmpsb
decb
mov
push
stos
insl
pop
ss
pop
cwtl
fucomip
and
lock
loopne
mov
push
notl
pop
ds
or
mov
sbb
outsl
popa
aas
inc
pop
lret
ds
xor
xor
mov
cmpsl
xor
cmp
lock
mov
and
push
inc
mov
push
shl
lret
daa
xor
xlat
lock
fwait
pop
sub
mov
adc
mov
pop
addl
mov
mov
or
fnsave
outsb
insl
sarb
cmp
jmp
mov
aad
and
mov
std
adc
jmp
and
rorb
sarl
jle
dec
and
testb
pop
pusha
sbb
cs
xor
xor
dec
repz
lods
sub
in
sub
out
ja
dec
xchg
mov
pop
mov
aad
mov
fsts
gs
mov
xorb
xlat
insl
ficoms
lock
cmp
pop
xor
or
pop
enter
and
xor
movsl
mov
adc
xchg
cltd
sbb
ja
das
dec
dec
cmp
arpl
sbb
scas
test
test
pop
adc
test
fidivl
imul
or
sbb
div
dec
loop
scas
data16
mov
loope
dec
rol
loope
jns
inc
out
and
loope
outsl
xchg
cvtps2pd
fadds
push
cmp
in
and
sbb
xchg
mov
push
inc
ja
pop
pop
int
jnp
jo
push
jnp
xchg
mov
mov
pop
pop
fxch
popf
insb
or
int3
movsb
jae
xor
stos
lret
jnp
add
pop
or
lea
ljmp
out
subl
and
mov
mov
jns
xor
mov
lock
and
cmp
scas
fmuls
and
push
pop
mov
and
push
cmp
ja
dec
xor
pop
pusha
cmp
dec
or
nop
sarl
adc
div
inc
test
je
jno
mov
shlb
in
mov
jp
cmpsb
xchg
xacquire
dec
aas
test
mov
das
or
fidivs
jg
add
lods
fnstcw
mov
lcall
push
and
ljmp
or
hlt
xor
mov
add
push
jo
hlt
cltd
sti
xchg
or
test
pushf
cmp
arpl
mov
out
mov
dec
jl
lcall
inc
shll
xchg
orb
cmp
jae
inc
pop
jp
add
dec
xor
jno
mov
cmp
mov
jbe
xor
repnz
je,pn
mov
xchg
iret
pop
mov
add
mov
jecxz
sub
outsb
jns
mov
mov
insl
aam
scas
mov
and
or
xchg
mov
push
es
int
cmp
std
test
pop
push
and
xchg
test
icebp
call
outsb
xor
cmc
xor
jns
push
fcmovu
jno
nop
cmc
cwtl
dec
xchg
hlt
sbb
gs
clc
xlat
mov
shl
pop
int
shrl
movsl
adcb
daa
add
mov
jge
imul
dec
pop
pop
sbb
and
cli
xchg
jne
stos
push
push
dec
mov
mov
insb
addr16
sub
mov
jo
adc
sbb
movsb
and
xor
in
push
lods
not
and
sbb
clc
jmp
push
jbe
and
mov
pop
daa
xchg
iret
push
mov
and
mov
cmp
in
push
dec
inc
pop
jge
or
adc
mov
mov
cmp
std
in
ja
in
add
and
inc
adc
push
stos
push
mov
enter
cmpsb
inc
ljmp
or
in
iret
movsb
pop
or
mov
mov
jne
fcmovb
push
xchg
loop
pop
jno
jl
push
xor
imul
lds
movsl
fcom
pop
cltd
scas
fildll
fisubs
sbb
fs
int
cmp
mov
mov
fs
cmp
fwait
lcall
movsb
dec
add
orb
clc
pop
pop
addr16
insb
movsb
sbb
sbb
fmul
and
xchg
int3
ljmp
call
and
add
idivl
add
mov
cmp
into
bnd
cmp
cmpsb
dec
imul
jg
cmp
shr
lahf
addb
dec
push
pop
roll
jne
mov
mov
cmp
popf
xchg
dec
xor
add
lahf
test
test
and
outsb
in
andl
add
out
out
push
fildl
cmp
cmpsl
aas
pop
xor
jb
cmp
nop
loope
dec
imul
pusha
enter
mov
movsb
out
jg
fisttpl
das
rcl
mov
inc
dec
movsb
das
jnp
fnstsw
mov
xlat
jl
shrb
jmp
stos
fwait
push
in
cld
pop
inc
jbe
sub
xchg
push
aas
push
mov
adc
mov
mov
mov
push
jns
flds
icebp
cwtl
fildl
push
push
mov
inc
je
sbb
adc
push
lahf
inc
out
imul
push
add
push
sub
adc
inc
sub
dec
xchg
aaa
push
clc
rcl
out
std
mov
inc
xchg
jns
je
aam
xchg
or
or
mov
cmp
outsb
iret
fisttpl
xor
je
test
xchg
js
lahf
cwtl
idivl
xorb
jae
addl
add
or
xchg
mov
lahf
pushf
xor
sub
es
jmp
lods
jb
imul
popa
jne
pusha
push
call
aad
push
testl
or
in
in
sub
push
xchg
ret
and
lcall
rcrl
jo
push
or
mov
xchg
xor
and
push
aaa
icebp
leave
iret
cmp
mov
mov
repnz
add
cltd
test
xlat
push
out
mov
les
push
std
pushf
aaa
ret
data16
adc
sbb
sbb
dec
data16
and
mov
sub
or
sub
pop
lock
lds
jg
jae
push
movsb
outsl
daa
inc
filds
bound
sub
lcall
inc
test
push
jmp
cltd
xchg
add
sbb
in
xor
pop
inc
outsb
sub
insl
push
scas
adc
leave
rcll
pop
mov
fcomi
adc
add
setnp
adc
jne
push
fnsave
adc
dec
mov
mov
aad
push
insl
js
lret
enter
jle
inc
and
sahf
fsubrs
in
into
xchg
stos
fiaddl
dec
jne
jp
sub
mov
add
fldcw
sub
mov
cmp
xchg
fildll
test
jno
jmp
push
in
arpl
mov
jecxz
nop
xchg
sub
std
sbb
jnp
inc
ret
rolb
test
mov
add
ja
mov
or
ret
and
aad
cmp
movl
cmpsb
xchg
inc
cmp
imul
test
int
mov
jbe
iret
jno
lcall
mov
jecxz
js
popa
ljmp
xchg
xchg
or
scas
add
into
aad
mov
add
ja
xlat
pusha
sub
push
xor
and
xchg
js
or
inc
iret
inc
imull
sbb
rorl
mov
gs
fldenv
lods
xchg
aaa
sub
jne
dec
aas
pop
mov
add
xor
fnstenv
movsl
or
and
push
jle
xchg
hlt
cli
mov
dec
pause
mov
test
cmc
mov
cs
lods
jge
loopne
xor
and
xor
scas
dec
sti
dec
xchg
mov
mov
aaa
add
mov
xor
dec
or
jb
and
fsubrs
dec
sbb
test
shrl
in
push
mov
imul
es
and
ljmp
dec
sub
icebp
pushl
push
mov
daa
jg
fidivrl
inc
mov
mov
orb
pop
adc
xchg
add
icebp
ds
inc
fdivrs
int
movsb
outsl
push
pop
aad
es
push
cmp
icebp
imul
dec
addr16
rorl
in
add
sbb
lds
bound
adc
pop
mov
add
testl
or
gs
fwait
mov
jns
iret
and
in
lea
xchg
mov
ljmp
loope
jl
xor
lea
xchg
xor
xor
add
iret
test
push
out
sub
je
je
daa
jg
and
jp
xlat
lret
pop
dec
pop
xor
rorl
das
aam
ja
fld
cwtl
or
pop
fldenv
rcrl
sbb
or
ss
dec
ss
cwtl
sub
inc
fdivl
mov
push
add
iret
hlt
ja
outsb
inc
ret
cmp
jg
push
mov
lea
push
and
ds
mov
pushf
jnp
add
jmp
cmpsl
mov
add
cmp
or
fcmove
pop
add
xor
jmp
fsubrs
sub
push
pop
imul
jno
jbe
int3
dec
or
push
or
inc
xchg
cmc
mov
fsubr
int3
sbb
add
jecxz
sub
cmp
std
inc
xchg
test
mov
lea
mov
sub
push
out
pop
push
cld
mov
aam
scas
lahf
repnz
incb
inc
test
and
imul
pop
jmp
mov
cltd
cwtl
out
adc
push
jp
insb
sbb
repnz
cmc
out
cmp
jns
pop
int
cli
pop
mov
dec
std
test
cmp
cs
jle
inc
dec
inc
fxch
lods
in
roll
lods
stos
dec
lea
mov
cmp
sbb
ds
enter
aad
hlt
mov
into
jno
xchg
mov
sub
pop
adc
shlb
movsl
dec
mov
lods
or
loop
cld
push
rorl
repz
fstl
and
and
xchg
xchg
inc
bound
rolb
into
rcl
cmovb
xor
sub
inc
iret
imul
or
sbbl
imul
jae
leave
xchg
cmp
in
cld
push
in
stos
and
cmpl
adc
xor
xchg
sbb
scas
mov
jl
fistpl
or
lcall
ljmp
movsb
aad
and
or
pop
mov
jmp
fnstenv
ljmp
enter
or
jp
inc
lcall
aam
popa
or
mov
or
add
pusha
es
dec
sti
sbb
imul
sbb
daa
notl
mov
pop
pop
mov
add
rol
mov
pop
aaa
xor
mov
mov
test
test
mov
jl
in
enter
aas
xor
add
jbe
pop
lcall
js
xorl
xor
jmp
scas
in
jl
lods
mov
inc
xchg
dec
sbb
xchg
add
and
mov
xchg
add
repz
xchg
testb
emms
lds
cmp
fsubs
pop
int3
cmc
sbb
mov
lahf
es
pop
pop
mov
lock
lds
cmc
mov
cmp
jl
adcl
cmc
mov
jne
mov
cli
sbb
loopne
lea
call
push
aaa
int
fs
mov
mov
scas
test
shl
movsb
aaa
cltd
sbb
ret
in
scas
arpl
out
pop
and
pop
nop
call
mov
pusha
push
outsb
xor
int
sub
sbbb
pop
xor
js
xchg
fwait
adc
add
ljmp
das
xchg
testb
mov
out
mov
in
jbe
xor
fidivrl
in
jb
pop
jns
adc
lock
je
jg
bound
aas
xchg
xor
ljmp
adc
imul
or
es
adc
lahf
push
test
repnz
sub
mov
dec
shrb
loopne
xor
adcl
daa
into
mov
dec
pop
std
sbb
or
das
andb
xlat
inc
cmp
adc
jg
ds
jns
push
outsl
pop
mov
and
into
xchg
das
inc
cld
cmp
popf
notb
mov
sbb
scas
and
repz
jno
sti
lock
dec
dec
adc
jae
mov
sub
lret
or
fstpl
lret
xor
xor
movsl
push
daa
lret
dec
adc
sbb
and
xchg
sub
call
push
sub
lahf
dec
dec
dec
lret
jp
ja
push
pop
fs
dec
mov
sbbb
mov
mov
mov
and
int
nop
mov
and
add
movsl
cwtl
or
js
ss
pop
outsb
mov
sarb
sbb
cmc
sub
in
or
mov
aaa
mov
mov
jbe
rcr
stos
xchg
jmp
repnz
cmpsb
cwtl
add
push
loop
lret
mov
jle
lret
jb
jl
mov
arpl
leave
xor
push
loope
push
add
in
stc
sbb
or
pop
sub
cmp
mov
lea
fdivrs
dec
cmp
jmp
push
mov
push
mov
fistl
adc
mov
mov
mov
sbbb
jbe
pop
jae
je
psrad
push
movsb
push
lret
or
fidivs
dec
mov
pusha
xor
jmp
fbstp
iret
test
in
leave
insl
les
lock
daa
les
and
xor
repnz
pop
leave
repnz
jmp
xor
or
rorl
dec
outsl
in
loope
dec
xchg
ret
mov
push
jo
adc
leave
addr16
arpl
sbb
xorb
sbb
int
adc
push
rol
std
sti
fwait
cmp
test
mov
or
cld
jbe
and
xor
sub
icebp
dec
xchg
leave
sti
inc
cli
inc
hlt
test
test
adc
and
lea
lods
test
scas
ja
dec
shr
or
js
xchg
pop
push
std
sub
lea
push
ret
mov
sar
add
push
test
pushf
sbb
push
dec
pusha
lahf
andb
in
mov
xchg
mov
jno
inc
xchg
lret
imul
and
aad
pushf
fnsave
xor
lock
adc
xor
inc
adc
imul
rorl
fwait
or
leave
lcall
sub
repz
jge
sarb
mov
sbb
jno
stc
stos
ret
cs
pop
testb
jecxz
jnp
cmp
lret
or
jg
sub
jle
xchg
push
insl
cs
cli
jmp
imul
cs
inc
mov
fstpt
xchg
mov
loopne
mov
mov
aas
leave
jmp
roll
lcall
jae
popf
jbe
data16
pop
shll
mov
sub
pusha
loope
insb
loope
es
sub
push
dec
ret
jl
dec
mov
iret
adc
add
shl
push
sti
data16
jne
test
sub
push
mov
xor
sub
scas
mov
faddp
repz
mov
rcrl
mov
mov
fmulp
pop
inc
lret
std
push
sbb
int3
imul
jp
fwait
test
test
ret
push
mov
pop
cli
jns
mov
push
xlat
repnz
mov
jne
add
and
fldt
push
push
sarb
xchg
fisubs
loop
cmpsb
jo
jmp
sub
enter
push
call
insb
gs
repnz
xor
xor
mov
xor
xorb
repz
cwtl
lahf
ss
out
std
jb
test
mov
cmp
stos
pop
imul
dec
ja
pop
jns
shll
aaa
addr16
ret
repnz
adc
and
jge
xor
stos
sub
les
popa
fwait
test
fiaddl
lret
fisttpll
and
aas
push
hlt
mov
rolb
iret
repz
call
je
jmp
adc
imul
xchg
leave
stc
loop
mov
pop
shrb
xchg
add
lock
mov
int
inc
sbb
fldt
andb
mov
pop
sbb
push
dec
jmp
dec
sub
adc
in
push
pop
mov
fcomps
mov
loopne
xor
mov
loope
mov
jp
inc
xor
dec
sub
pop
addl
dec
rcr
adcl
or
ret
mov
mov
mov
sbb
cmp
jmp
fnsave
aam
ss
in
pop
mov
call
test
lods
clc
jae
cld
lret
xor
pop
xchg
stc
jno
sbb
ja
dec
add
unpckhps
in
mov
ljmp
hlt
mov
pop
shll
fs
lods
fdivrl
cmp
fcmovnu
fsts
mov
lcall
sbb
jmp
mov
nop
cpuid
test
loop
mov
and
sub
sbb
arpl
jge
jle
jo
xor
inc
lods
negl
push
pusha
imul
out
fcmovbe
mov
rol
sti
lock
mov
fnstenv
sbb
fs
xchg
jge
jae
mov
adcl
push
inc
mov
scas
sbb
mov
sarl
jmp
add
dec
mov
lods
add
xor
imul
imul
jge,pn
mov
insl
xlat
out
jge
mov
mov
sub
mov
push
enter
mov
sub
adc
sub
repz
movsl
addr16
into
jb
push
ljmp
pop
loopne
push
cmp
sub
mov
das
jmp
jno
ret
and
adc
push
in
inc
pop
pop
adc
push
mov
cmp
pop
push
sar
sub
sahf
sub
stc
or
mov
add
shrw
inc
mov
push
push
mov
lods
pop
into
sub
ljmp
lods
addl
jmp
fwait
pop
xchg
push
cmp
jns
cmp
jle
pushl
cld
jbe
in
inc
out
popaw
mov
add
jnp
sub
aas
leave
adc
dec
jnp
out
inc
incl
cmp
fcmovb
in
gs
in
lods
das
mov
and
imul
xchg
decl
pop
cmpsl
js
add
mov
lods
dec
daa
jo
inc
fistps
mov
mov
and
shlb
cmp
add
mov
testl
adc
ds
xor
int3
fidivrl
ror
mov
aas
add
adc
addr16
addr16
cmp
movsb
push
jp
in
stos
push
jg
or
fstps
stc
push
jp
lea
xor
daa
cmp
aas
dec
mul
test
fprem
push
add
mov
push
mov
repz
mov
imul
rcrb
or
cmc
mov
insb
and
mov
div
jns
mov
lods
mov
xlat
clc
mov
call
inc
jge
and
rcl
push
popa
pusha
icebp
pop
dec
dec
adc
stc
xor
push
lock
sub
repnz
dec
push
add
add
mov
sbb
xor
or
inc
call
lds
sbb
movsb
pusha
daa
rolb
mov
pop
cmc
jge
in
mov
movsb
xchg
out
mov
dec
adc
add
mov
lahf
adc
push
fdivs
or
ret
mov
add
ljmp
inc
daa
out
sti
lcall
jecxz
stc
scas
add
sub
mov
jnp
inc
or
mov
outsl
leave
les
ja
in
loopne
adc
mov
push
stos
fisubrl
mov
pop
dec
mov
rolb
mov
fnsave
xor
pop
jmp
add
pop
xor
sbb
bound
lahf
les
or
in
adc
sbb
aas
aad
cmpsl
sub
mov
sahf
sub
push
js
mov
mov
and
mov
add
jge
pushf
jbe
std
push
jnp
int3
inc
lods
test
and
sbb
aaa
into
xor
addr16
push
popa
mov
int3
or
mov
mov
dec
shl
popf
cmpsl
dec
mov
adc
fisubs
and
inc
push
add
xchg
adc
jl
psllw
mov
xor
mov
sub
imul
xor
mov
cmp
inc
dec
push
fstpt
fs
push
and
and
outsb
insb
cld
lahf
test
std
or
jmp
rcll
into
push
sub
mov
dec
sub
aaa
std
shll
xchg
mov
notb
jns,pt
sub
ja
sbb
lds
std
pop
int
es
cmp
mov
in
xchg
adc
cmpsb
xchg
sbb
push
sub
push
lock
mov
dec
cs
das
jmp
adc
sahf
mov
in
push
in
sar
and
sub
pop
scas
pop
test
clc
dec
test
arpl
adc
dec
fldt
movsb
jge
xchg
sub
inc
xchg
add
test
sub
mov
mov
mov
lret
out
hlt
fbld
addb
add
test
adc
sbb
push
ret
and
push
ds
fld
xor
xor
pop
cmc
jecxz
cmpsl
nop
sbb
xchg
test
adc
adc
xor
jno
jb
aam
jp
inc
cltd
pop
stc
sahf
adc
pop
pop
and
sub
xchg
mov
pop
cmpsb
ss
movsb
push
adc
int
jae
mov
push
pusha
aas
rcr
imul
in
ss
fidivrl
addr16
ret
push
popa
cmc
adc
lcall
sub
adc
sub
ss
mov
rcll
xor
es
push
in
fstpt
movsb
aam
mov
data16
sub
jne
mov
xchg
imul
aad
mov
out
sbb
out
push
mov
fnsave
mov
testl
ja
push
xor
inc
xchg
adc
inc
bound
xorl
in
fildll
jl
andb
loop
jl
push
jge
int3
pushf
lock
outsb
pop
adc
int
xchg
repz
or
test
pop
adc
out
add
xchg
insb
push
pop
incb
mov
lahf
and
or
mov
fsts
or
or
adc
inc
rcrl
aam
loopne
mov
xlat
mov
sub
mov
jne
addr16
push
xchg
mov
out
jo
pop
mov
jle
cmpsl
add
jecxz
lods
mov
les
js
push
sub
adc
add
enter
jmp
mov
ret
leave
inc
lods
push
std
dec
pop
out
dec
fcmovnbe
adc
xchg
mov
push
jecxz
mov
hlt
push
cld
hlt
daa
in
loopne
dec
xlat
cmp
ds
fiadds
jns
sbbb
sbb
icebp
mov
shr
mov
jb
xchg
dec
dec
gs
add
mov
add
in
xchg
mov
je
lahf
add
xchg
mov
sbb
and
mov
xchg
cmp
xor
xchg
ss
pop
nop
sub
addr16
sbb
subl
faddl
arpl
insl
das
lods
xor
loop
mov
test
jp
ret
idiv
test
mov
cmc
fcoml
jp
inc
xor
shlb
or
xor
and
flds
cwtl
mov
lcall
dec
xrelease
push
mov
aam
adc
jmp
push
jle
call
aaa
repnz
cmp
and
cltd
cs
push
int
test
bndstx
cltd
je
xchg
movsl
jg
movsb
sbb
test
mov
arpl
loope
mov
repnz
mov
push
inc
shr
xchg
mov
add
or
fcomi
sub
loop
ss
and
add
ret
sub
add
mov
jb
push
mov
jecxz
jle
push
std
fimuls
mov
enter
push
leave
pop
jp
cld
sbb
nop
fistpll
push
push
call
fistpl
aaa
and
inc
test
mov
sbb
mov
dec
xchg
adc
repnz
pop
ret
hlt
repnz
cmp
xchg
xchg
in
cs
mov
push
cwtl
lds
jnp
inc
jmp
cwtl
loope
cmc
push
loope
aam
cld
inc
sub
test
dec
lret
pop
orb
test
in
and
aaa
mov
pop
push
mov
and
scas
jnp
mov
mov
jmp
adc
pop
xchg
xor
cmpl
xchg
loopne
ret
ret
mov
nop
adcb
ss
mov
pop
jecxz
test
loopne
cmp
add
push
js
pop
pop
push
mov
jno
fildll
repnz
pop
mov
sub
push
popf
xchg
add
xor
adc
scas
mov
mov
push
jmp
sub
sbb
pop
inc
jecxz
jmp
pushf
adcl
vpsllw
pop
sbb
test
inc
pop
push
pop
xor
jmp
push
subb
and
xor
xchg
out
xchg
xchg
sub
push
mov
stos
test
shlb
push
dec
shrb
sbb
mov
pusha
daa
adc
mov
arpl
inc
lahf
aam
xchg
mov
addr16
arpl
push
outsl
fdivrl
mov
out
repnz
mull
jle
mov
jns
movsb
fldenv
jl
mov
fmuls
imul
addr16
sub
dec
sub
rcrb
mov
cmpsb
inc
mov
mov
scas
pop
test
mov
xchg
pop
mov
push
das
and
adc
psrld
sti
and
mov
inc
out
les
inc
mov
mov
scas
adc
ret
je
aad
sbb
add
xchg
into
out
cld
xchg
xchg
mov
cli
sub
lahf
pop
adc
pushf
mov
mov
scas
fdivl
xlat
pop
iret
movsl
mov
pop
shl
mov
cmp
push
xchg
xor
or
pushf
in
lcall
outsl
fneni(8087
mov
push
jbe
fisubl
lock
jp
mov
ret
pusha
sbbl
clc
xor
adc
je
mov
leave
bound
inc
out
sbb
loope
push
hlt
pusha
bound
push
or
adc
gs
inc
das
mov
popl
mov
test
push
mov
icebp
in
pop
jbe
cmp
cmp
push
addr16
jle
push
and
lcall
js
daa
lret
dec
iret
and
mov
outsl
sbb
xchg
or
push
push
ljmp
push
push
out
rorb
addb
iret
jl
fmulp
scas
pop
sub
shll
adc
and
addl
cmp
andl
jl
fs
xchg
fisubs
adc
bound
adc
push
lcall
mov
push
ror
jo
sti
lds
jg
icebp
imul
jg
xchg
fnstenv
dec
fisttpll
pop
les
test
lcall
out
aaa
ror
es
mov
push
sahf
jne
xchg
mov
push
cmp
xor
sarl
mov
add
sbb
mov
inc
stc
loopne
mov
movb
enter
shl
inc
push
outsb
pop
clc
dec
pop
push
xchg
pushf
push
sar
int
mov
insb
pop
jle
sbb
mov
pop
pop
mov
sahf
mov
push
push
sub
divb
mov
stos
dec
inc
sbb
insb
int
lods
lea
pop
in
repnz
out
jne
xor
jo
subl
out
daa
xor
lret
push
or
add
push
mov
dec
test
sbb
add
mov
js
pop
testl
xlat
mov
test
sub
sarb
pop
inc
xchg
sbb
xchg
dec
xor
fadds
mov
xchg
out
jnp
loope
add
xchg
fwait
and
imul
push
bound
out
sub
sub
and
mov
cmpsb
stos
mov
xor
sub
xchg
out
scas
enter
mov
cmp
sbb
push
mov
nop
add
outsb
fists
mov
xlat
jb
jae
push
mov
pop
sub
outsb
xlat
add
xchg
test
fwait
inc
pushf
cmpsl
cmp
push
loope
push
arpl
push
inc
pop
cmpsl
lock
cmp
testb
js
aas
sti
sub
rolb
decl
int
bound
or
lret
gs
pushl
popa
xlat
dec
addb
cmp
repnz
filds
cmp
xor
inc
dec
xor
push
ja
in
add
inc
pop
jle
inc
xchg
subb
insl
and
adc
push
test
shr
scas
dec
shl
pushf
xchg
nop
in
sub
test
mov
mov
dec
pushf
enter
cmp
sbb
inc
push
sub
mov
add
nop
xor
push
popa
leave
inc
or
add
adc
and
aaa
ja
test
gs
xchg
inc
xchg
repnz
aas
repnz
lret
push
push
sbb
xchg
pop
fwait
dec
push
std
jae
cmp
and
outsl
sbb
xchg
add
rcrb
xor
data16
sub
mov
mov
cs
sub
fs
cltd
mov
lods
mov
xchg
sub
std
pop
push
popf
inc
mov
xlat
mov
sarl
jno
push
cmpsl
mov
test
or
pop
push
movsb
std
add
add
int
mov
sbb
sti
in
cmp
and
ja
cli
loope
xchg
mov
outsb
and
mov
insb
lea
jle
adc
std
xor
mov
sub
jno
sub
push
sub
sbb
mov
dec
hlt
sub
sbb
shlw
rorb
call
rclb
inc
mov
cmp
xor
test
or
mov
iret
popa
repz
push
mov
jbe
xchg
mov
out
mov
cli
lods
hlt
incl
push
into
repnz
mov
mov
adc
adcb
cld
enter
jnp
sub
mov
out
push
sub
and
jnp
sub
xchg
xchg
xchg
mov
lock
loope
movsb
mov
cli
dec
pop
stc
jg
push
clc
inc
imul
inc
mov
addr16
pop
mov
fidivl
dec
cmpsl
push
push
test
in
xor
jle
cmpsb
in
xor
pusha
sti
fwait
ds
jmp
cmc
fst
int
in
cmpb
ja
jae
xor
cmp
ja
es
mov
cmp
es
cmpsb
xchg
inc
add
adc
xchg
mov
push
xchg
ja
js
aaa
jle
mov
lock
mov
outsb
lcall
jno
xchg
xchg
test
xlat
cli
jnp
rcr
push
pop
sub
push
aas
sub
dec
movsb
jae
xlat
je
outsb
sti
mov
cmp
pusha
js
mov
out
jbe
adc
and
mov
jg
push
pop
pop
jmp
inc
mov
adc
fbld
cmpb
dec
das
sbb
test
cmp
sub
movsb
push
movsl
pop
div
ja
pop
mov
dec
ljmp
mov
jae
iret
sub
ja
cmp
sahf
out
jae
xor
push
pop
and
sub
sub
jns
cmp
fisubrl
stc
push
sub
or
mov
dec
cli
inc
inc
inc
cld
mov
add
cmpsb
lea
xor
inc
xor
hlt
negb
leave
dec
lock
xor
out
insl
repnz
mov
std
sub
clc
adc
inc
dec
push
rcrb
push
ficompl
mov
pop
repnz
and
jge
and
aas
pop
mov
pop
cmc
inc
stos
gs
push
negb
xlat
jb
fs
pushl
xor
std
sub
scas
aad
pop
push
jnp
pop
sub
es
test
push
dec
sbb
mov
data16
xchg
mov
dec
movsb
or
fs
bound
out
push
pop
scas
push
mov
jl
adc
push
adc
mov
ss
push
lods
push
popf
xchg
dec
dec
in
cmp
rolb
add
rcr
adc
call
and
frstor
xchg
fcomip
faddp
cmp
scas
xchg
push
cs
fcompl
xor
out
mov
rcll
xchg
ror
rcrl
cmp
test
lock
lock
not
shlb
push
xor
mov
jne
roll
int3
jp
push
sbb
add
fmuls
lock
lock
xchg
mov
xor
rcll
pop
scas
push
out
popf
adc
dec
std
or
pop
sti
jge
xor
xor
cmc
jg
movsb
mov
sbb
test
sbb
mov
aas
and
inc
test
cwtl
ja
fistpl
push
movsl
cmpsb
popf
jg
mov
sub
fiaddl
gs
out
xor
daa
inc
scas
fidivrl
loopne
mov
jle
ljmp
sbb
int
add
orb
fwait
pop
mov
fstpl
jo
push
mov
pop
dec
into
push
push
jno
pop
loop
push
outsb
and
in
addr16
sti
jae
test
movl
xor
imul
mov
jbe
add
lea
jne
jl
mov
jb
jb
arpl
add
sahf
push
mov
rcrb
pop
out
adc
imul
arpl
or
push
or
pop
stos
cs
dec
nop
dec
mov
imul
add
and
clc
inc
sub
xlat
cmp
mov
jae
xchg
mov
xchg
add
or
ds
adc
in
bound
jecxz
mov
clc
std
add
adc
mov
or
test
stos
mov
push
sbb
mov
fcoml
add
pop
pop
adc
mov
out
cmp
or
leave
adc
pop
add
adc
movsb
fwait
jmp
mov
jmp
cwtl
inc
xor
pop
out
jle
push
in
mov
sbb
daa
push
out
test
pusha
fucomip
lock
sub
pop
aad
test
or
xor
andb
mov
icebp
lcall
or
sub
lods
adc
add
sub
cmpsl
sbb
into
pop
cs
test
xor
xor
and
insl
popf
sbb
shrl
movsl
out
pop
sub
or
jle
movsb
pop
sub
pusha
xor
test
inc
shr
mov
and
mov
inc
and
lret
insl
pushf
out
and
jo
decl
pop
imul
mov
inc
pop
mov
sub
push
xchg
dec
inc
into
adc
pushf
fdivl
jo
push
sub
pop
xchg
mov
mov
in
je
lret
inc
idivb
and
test
push
mov
orb
fs
pop
mov
imul
ljmp
lock
xchg
xor
sahf
xchg
push
aad
fbld
out
lcall
out
xchg
sbb
js
aad
adc
pushf
hlt
aad
adc
out
addr16
aad
out
pop
xchg
sbb
adc
in
mov
inc
sbb
mov
cmp
add
lahf
xor
inc
xor
mov
pop
adc
mov
int
clc
push
sbb
mov
into
jl
insb
hlt
mov
addr16
aaa
insb
push
sti
enter
jge
lahf
out
xlat
dec
scas
scas
pop
dec
jp
addr16
outsb
int3
gs
mov
adc
scas
and
dec
mov
and
leavew
stc
fbstp
cmp
js
inc
fisubl
pop
inc
cld
iret
enter
pop
into
mov
fists
pop
pop
mov
push
jle
dec
mov
dec
fidivs
xor
add
pop
in
and
stos
pop
jl
ljmp
xchg
and
test
mov
lret
push
jl
pop
lods
scas
mov
push
add
gs
pop
popl
ja
pop
imul
lods
dec
pusha
pop
jg
call
dec
out
and
pop
rcrl
test
cmc
lock
push
push
mov
lods
out
sarl
cmpsl
jbe
push
xchg
inc
flds
jae
mov
push
imul
inc
pushf
adc
rcll
sub
pushf
adc
in
xchg
xchg
int
mov
enter
inc
cs
cmp
add
andl
adcb
lods
mov
or
xchg
or
mov
pop
xlat
cwtl
pop
pushf
aas
bound
or
fs
xchg
add
arpl
shrl
xor
test
ljmp
movsb
cmp
inc
xchg
out
and
js
mov
scas
add
lds
lock
aad
std
mov
adc
lods
pop
fisttpl
pop
sbbl
xchg
cltd
mov
or
or
roll
movsl
cmp
cmpsb
mov
fisubrl
mov
fisttps
data16
leave
push
xor
int
push
je
xchg
and
mov
dec
sbb
loope
xchg
imul
mov
cmp
xor
mov
test
adc
jnp
jle
ret
jo
jecxz
push
or
shll
inc
movsl
push
jmp
repnz
mov
shrl
out
push
xchg
stos
cmp
movsl
lds
dec
repnz
pop
inc
jb
sbb
add
dec
iret
ret
fiadds
lret
scas
sarb
fdivr
rol
hlt
sahf
jbe
in
orb
dec
repnz
mov
dec
pop
adc
dec
ret
pop
lds
and
shll
jnp
sub
out
and
xchg
pop
or
xchg
or
dec
jge
stos
lea
push
lret
loop
pop
pop
sub
mov
sahf
pavgb
sbb
call
and
sbb
add
test
or
and
mov
rcr
or
movsb
inc
and
or
xchg
pop
jb
jbe
pop
repnz
push
std
pop
stos
mov
mov
push
jno
mov
inc
cwtl
into
lock
ficoms
jae
or
outsl
jbe
ficompl
dec
loop
sub
lahf
out
insl
mov
cmpsl
sbb
adc
lcall
mov
aaa
xorb
cmp
xor
das
mov
inc
adc
rorb
rcrl
sub
cmp
movsb
loop
repnz
mov
arpl
ja
movsl
sbb
mov
shl
insl
mov
mov
inc
inc
push
or
dec
lcall
push
push
cmp
adc
nop
pusha
add
mov
jbe
sbb
shll
mov
push
fisubl
xorb
lret
xor
subb
and
jp
scas
lret
shl
outsl
jmp
aad
repnz
jb
jno
out
push
arpl
in
std
aam
xor
mov
pop
jno
xchg
orl
cltd
push
popf
loop
xor
loope
push
mov
cltd
add
fidivrs
shrl
cmp
mov
adc
adc
insl
cmpl
ds
insb
hlt
lret
aaa
insl
ds
aas
mov
pop
and
cmp
lret
pusha
mov
or
lods
add
inc
aad
jb
pushf
fnstcw
sbb
cmp
jns
std
sub
adc
out
pop
daa
mov
jg
inc
int
jg
hlt
cmp
fstpl
filds
daa
repnz
mov
pop
repnz
call
cmp
pop
and
adc
loope
mov
or
mov
out
add
call
scas
or
push
int
add
add
decl
jne
fcom
adc
test
sub
sahf
and
pop
cmp
and
and
scas
dec
in
mov
js
sbb
fsub
sar
cli
stos
insl
xchg
cmovge
inc
push
idivl
jle
xor
popf
daa
shr
push
or
push
mov
jl
bound
pop
fstp
cmpsl
pop
adcl
iret
push
push
mov
sbb
or
push
mov
jb
push
or
mov
fwait
nop
dec
scas
xor
movsb
sub
je
shlb
ret
loope
pop
andl
lock
jnp
in
incl
jle
xor
mov
mov
outsb
xor
in
pop
mov
pusha
push
mov
push
lods
ret
lea
cmpsl
ret
jns
adc
or
dec
scas
xor
mov
jno
push
js
sarl
or
nop
test
in
or
add
push
mov
int3
mov
das
mov
inc
into
iret
loopne
jbe
sahf
dec
sbb
cmpsb
push
mov
iret
add
out
mov
sub
sbb
jae
sbb
pop
mov
filds
push
negl
arpl
mov
cmp
outsb
pop
inc
mov
cmp
inc
mov
fucom
js
mov
nop
int3
dec
pop
das
sub
xchg
sarl
loope
pop
es
rclb
cwtl
cmp
add
push
mov
mov
int3
xor
lods
xor
pop
xchg
mov
jecxz
aam
inc
outsl
cld
mov
sub
jecxz
ja
dec
das
add
cmpsl
push
ljmp
pop
fwait
std
ljmp
cmp
cwtl
out
cmovae
jne
sub
push
enter
mov
hlt
sbb
mov
popa
mov
daa
lret
cmp
mov
jo
into
stc
cmp
stos
mov
mov
or
inc
jle
dec
fidivrs
pop
stos
xor
sub
xchg
inc
cltd
mov
subl
sbb
push
pop
or
lcall
sub
push
loope
test
mov
jle
sub
adc
fisttpll
mov
xor
rclb
xor
dec
dec
xchg
cmp
mov
inc
mov
call
cmp
mov
mov
pushf
jo
sbb
mov
push
xor
cmpsl
lea
inc
jg
aad
outsb
pop
into
fwait
out
sbb
xlat
pop
push
push
inc
mov
nop
cmp
incb
jle
sub
xor
ret
jae
mov
xlat
hlt
sub
mov
pusha
dec
loop
lahf
xchg
dec
testl
cmp
jge
mov
in
cmp
push
outsl
mov
lcall
mov
sub
add
cli
hlt
sbb
inc
nop
insl
jg
fisttpll
adc
mov
pop
call
push
or
daa
mov
in
mov
pop
icebp
out
sbb
in
inc
mov
fcomps
enter
arpl
stos
aaa
mov
lret
ret
bound
xor
repz
mull
roll
std
imul
cmp
and
jbe
lea
adc
or
fs
adc
stos
lcall
dec
rdtsc
pop
call
and
mov
xchg
adc
pop
arpl
out
jmp
and
enter
adc
mov
mov
mov
in
push
addr16
in
lcall
movsl
shrl
ja
push
scas
inc
cld
ja
sub
pop
sarb
rcl
jg
or
rolb
rcrb
out
clc
add
ss
lds
cmp
ficomps
xlat
in
sbb
lcall
adc
out
andb
xchg
scas
lcall
push
insb
xchg
scas
cmc
loope
xor
push
cld
outsb
push
xor
push
push
fstl
sbb
xchg
adc
xor
inc
push
loope
jne
fildll
push
imul
cmpl
test
xor
mov
inc
movsl
lret
sbb
hlt
mov
dec
inc
cmpsb
cmp
lahf
movsl
inc
mov
imul
fwait
je
into
shrl
in
stc
int
rcrl
push
cmp
in
add
cmp
popa
dec
test
xchg
sub
sub
xor
or
add
push
lret
imulb
xchg
insl
out
sub
fsubr
mov
repz
int
aad
test
xor
inc
test
sbb
movsb
aam
das
mov
jno
sub
mov
mov
inc
inc
push
test
fdivrl
sub
sti
adc
sbb
std
repnz
cli
mov
and
arpl
push
ret
and
test
aad
scas
pop
dec
cmpl
push
mov
outsb
sbb
adc
xor
xor
aas
add
mov
mov
mov
mov
lods
cs
jae
pop
mov
movsb
lods
cwtl
pusha
sti
mov
stc
repz
push
testl
push
das
add
add
sbb
lcall
mov
repnz
mov
xchg
test
or
add
mov
iret
nop
mov
ficomps
jae
lds
mov
test
adc
mov
jmp
push
ret
inc
bndldx
jl
jmp
push
cmc
call
push
out
cltd
jne
and
or
add
cld
sub
pop
shll
push
addb
adc
test
add
adc
es
and
mov
mov
dec
mov
repz
jne
in
dec
inc
adc
daa
add
mov
scas
aad
aam
mov
stc
pop
jmp
lds
test
gs
ss
test
pop
test
mov
and
add
das
das
adc
mov
sbb
add
xor
aad
lods
sub
inc
xchg
ret
fstps
mov
or
pop
sahf
leave
push
sarl
inc
and
lods
mov
pop
xchg
sub
in
and
sbb
in
inc
shl
ss
adc
out
shll
aaa
loopne
pusha
stos
repz
inc
xchg
leave
and
dec
mov
jg
fsubr
add
mov
mov
mov
sbb
loope
lret
inc
xchg
cltd
fsub
mov
lret
subl
ljmp
test
std
pop
rorl
fsub
movsl
popa
mov
notl
cmc
int
imul
inc
iret
nop
cmp
ljmp
pop
addr16
push
inc
and
push
dec
js
aam
arpl
sbb
movsl
jp
mov
ret
lea
adc
test
int3
add
mov
inc
jae
push
inc
scas
sahf
rcrb
stc
loopne
or
mov
sub
js
dec
arpl
adc
cmp
andl
jbe
dec
fwait
shrb
jecxz
loop
iret
aam
xor
aas
test
das
push
fadd
lds
xlat
mov
loop
mov
xor
mov
xchg
xor
add
inc
lret
call
sub
dec
cmc
test
or
push
pusha
mov
fildll
sbb
sub
scas
test
lahf
lods
imul
add
jge
cmp
fstp
jge
daa
mov
int3
xor
enter
pop
jo
inc
lods
mov
sbb
sub
xchg
loop
sbb
jo
inc
fcom
lock
push
add
call
shlb
and
pop
sbb
mov
loope
cmpsl
lret
cmpsl
fs
dec
jg
js
cmp
int3
adc
xlat
ss
mov
lcall
dec
sub
in
gs
js
and
mov
mov
movl
mov
shll
or
sbb
lods
sti
lock
mov
mov
int3
shrb
aam
sbb
xor
testl
inc
adc
gs
xor
jo
shlb
in
mov
jmp
icebp
test
xchg
add
test
clc
fucomi
out
mov
in
push
scas
mov
or
popa
dec
dec
sbb
pop
daa
rep
das
sarb
jle
mov
btsl
cld
or
adc
mov
call
mov
xchg
mov
jns
jns
repnz
push
add
das
sbb
arpl
leave
sti
mov
mov
dec
mov
popf
test
and
sub
cwtl
mov
test
les
xor
movsl
adc
jbe
add
js
inc
xchg
jle
dec
mov
addr16
das
jle
test
fdivp
pushf
inc
mov
test
sbb
pop
cmp
jb
loope
leave
decl
dec
push
lods
sbb
outsl
ret
mov
cmpsb
jo
outsb
jb
and
rorl
xchg
pop
jecxz
pop
inc
cmp
std
int3
mov
inc
xor
sub
orl
lret
mov
in
or
xchg
fsubrs
mov
ret
ja
mov
call
mov
mov
mov
or
jo
aad
jl
adc
ret
adc
mov
aam
sub
inc
movsb
sti
pop
push
pop
and
pop
bound
ljmp
addr16
iret
out
imul
pop
cld
xchg
adc
or
add
mov
or
pop
jmp
cmp
and
jo
adc
xchg
or
pop
and
cmp
enter
lcall
jnp
mov
cmp
sahf
xor
jo,pn
mov
mov
and
scas
xchg
jns
sti
outsb
out
xchg
push
or
clc
inc
cli
or
in
add
push
sub
sahf
lcall
rol
xor
push
inc
sbb
mov
jae
mov
data16
jecxz
mov
xchg
fbstp
mov
std
push
push
push
adc
mov
ret
push
or
push
lock
push
daa
sub
adc
or
adc
int3
ss
xor
mov
mov
or
adcl
jno
je
jg
nop
inc
movsb
jl
inc
mov
repnz
shlb
xchg
pop
insl
pushf
adc
outsl
mov
divl
leave
idivl
rcll
jb
sbb
insb
add
mov
xchg
mov
fadds
stos
icebp
mov
cmpsl
dec
push
loopne
cwtl
mov
aam
and
insl
loope
es
cmpsl
pusha
into
lahf
data16
leave
sbb
inc
cli
lahf
inc
sub
and
inc
or
cs
mov
or
push
dec
aas
cmp
andb
push
mov
lcall
pop
subb
in
sbb
add
cld
fimull
lret
call
cmpsb
fucomip
mov
lcall
int3
icebp
or
xchg
jmp
lods
inc
xor
shl
and
fidivrl
sbb
sub
adc
push
outsl
ljmp
out
push
or
mov
cltd
shll
enter
xchg
mov
xchg
mov
fcomps
sahf
xchg
dec
mov
xor
cmp
jle
sbb
xlat
test
xor
stos
ss
es
mov
xor
imul
push
ljmp
xor
sub
out
daa
pop
jp
ljmp
pop
cmc
mov
mov
movsb
mov
repz
lea
jae
mov
xorl
sbb
mov
movsb
aam
push
jg
imul
jne
arpl
fadds
es
outsb
rcrl
cmp
insl
pop
jmp
push
mov
scas
cmpsb
aaa
mov
cmp
jne
dec
sbb
dec
xchg
push
jmp
mov
push
sbb
mov
filds
xchg
mov
mov
pop
out
je
xlat
cmp
adc
arpl
jno
sbbl
data16
scas
cld
jge,pn
jecxz
dec
sysenter
dec
sbb
mov
mov
adc
test
jge
arpl
data16
loopne
pop
ljmp
outsb
scas
lahf
push
push
mov
fincstp
sbb
add
mov
xor
xor
rcll
pop
pushf
or
push
pushf
test
out
xor
dec
cltd
filds
pop
mov
mov
mov
mov
pop
std
pop
lds
adc
lds
push
push
leave
ss
xchg
aas
dec
xor
cld
mov
xor
stc
je
aad
mov
stos
jnp
shll
xchg
push
pusha
jae
xchg
fcompl
pop
outsl
mov
lds
in
mov
mov
push
gs
xchg
clc
test
and
mov
scas
jmp
mov
add
mov
test
mov
cs
pop
and
mov
xchg
pusha
pusha
mov
fmul
xor
addr16
hlt
fstl
mov
mov
shr
jno
jo
mov
hlt
pushl
add
ja
scas
aas
mov
push
test
push
adc
jp
cli
or
adc
jns
and
imul
mov
loopne
pop
mov
jge
cmp
leave
or
mov
and
inc
sbb
sahf
dec
lcall
mov
xorl
lods
mov
adc
cmpsl
inc
mov
mov
sarb
jmp
xchg
mov
je
cmp
lret
add
lods
inc
into
inc
inc
sub
fst
mov
mov
xor
repnz
jb
stos
add
je
cs
sbb
cli
jae
fimull
das
cld
loopne
or
xchg
push
das
jns
xor
push
sbb
js
aas
scas
xlat
enter
push
sub
ljmp
mov
jae
rorl
jl
sub
xchg
insl
lods
pop
adc
adc
outsl
out
pop
shlb
push
mov
js
dec
or
leave
cmp
sbb
xchg
ret
jnp
inc
adc
inc
test
mov
subl
mov
add
fildl
mov
dec
shrb
test
cmp
out
xchg
out
pop
mov
pop
in
popa
insb
repnz
jle
bound
push
xor
sub
or
xlat
inc
clc
cmpsb
sbb
add
pop
insb
mov
dec
out
in
in
lods
jno
repz
shll
stc
push
out
and
xlat
add
shlb
mov
xor
pop
pop
cli
out
xchg
shlb
xchg
cmpb
add
sbbl
mov
jno
push
stc
imul
fs
jae
jmp
call
sub
subl
out
cmp
and
sub
sbbl
dec
divl
dec
repnz
nop
insl
clc
inc
or
in
imul
jnp
fdivrp
cltd
adcb
push
aaa
lret
into
and
orps
jge
popa
sub
mov
pop
out
shlb
in
cltd
or
or
and
mov
push
imul
int
idivl
jecxz
rorl
xor
mov
push
cwtl
push
add
xor
and
rcll
data16
aaa
pop
lret
fistpl
roll
imul
std
andb
hlt
test
dec
sbbl
fisubl
xchg
jl
cmp
xor
dec
test
hlt
pop
call
fidivrl
xor
fwait
xchg
mov
mov
cmp
mov
std
jns
bound
or
dec
das
xchg
dec
out
lods
ds
mov
and
pop
loope
mov
stos
sbb
add
ret
fwait
add
addr16
push
lods
jno
push
xor
out
mov
and
sbb
movsb
push
shlb
push
jmp
sub
fldl
xchg
ret
xchg
jnp
mov
or
pop
sbb
ja
jmp
mov
icebp
imulb
je
adc
or
sbb
add
aaa
or
mov
adc
push
push
jg
or
inc
cld
cld
jb
jg
push
bswap
jecxz
and
xchg
imul
es
mov
out
sahf
inc
or
insl
repnz
cmp
fdivp
cmpsb
cmpsl
push
loop
lahf
arpl
sbb
and
sbb
pop
jne
pushf
add
jb
mov
fsub
add
xchg
imul
sbbl
stos
clc
sub
or
inc
dec
out
push
cli
cmp
repz
sahf
push
sbb
xchg
xchg
divl
push
cmp
mov
lahf
addr16
mov
mov
adc
ret
lods
sub
push
test
xor
sub
idivl
add
andl
push
push
xchg
out
lods
push
out
add
shlb
pushf
pop
xchg
rclb
outsb
mov
mov
lods
out
cli
fs
test
jmp
xor
cmp
jmp
in
imul
std
mov
sti
outsl
mov
adc
pop
cld
movsb
adc
xor
shll
mov
rcr
mov
stos
fiaddl
test
loopne
test
xor
jle
mov
sbbl
mov
mov
iret
std
fisttpll
pop
call
add
mov
call
movsb
inc
push
xor
xchg
mov
pop
add
lods
sarb
or
mov
ds
lock
lock
and
and
mov
aam
cmp
xchg
add
das
stc
pop
mov
pop
cltd
push
repnz
xchg
xchg
xchg
mov
inc
jae
call
pop
mov
lds
fcmovnb
or
cs
add
bound
mov
frstor
and
pop
mov
cli
shll
cmp
push
jge
push
jbe
mov
lds
mov
jo
push
jge
testl
aas
xor
aas
mov
enter
pop
mov
rcl
mov
lahf
jb
cmc
dec
ja
ror
data16
stos
sbb
out
sbbb
jo
shrb
repnz
shlb
or
out
test
mov
in
scas
or
jns
insl
in
xor
scas
push
divb
int
jge
clc
pop
xchg
and
fwait
push
lcall
adc
jb
lods
leave
ss
cmp
das
stc
les
aaa
add
jg
insb
lahf
hlt
cli
idivb
adc
pop
sbb
lock
or
sar
dec
imul
dec
es
xor
jb
add
into
xor
loope
xchg
iret
mov
dec
xor
jle
insb
jmp
push
add
xlat
cmpsl
sbb
fwait
sub
cld
movsb
cmpsb
subb
repnz
or
shrl
aaa
push
or
pusha
lret
adc
jne
popa
and
es
es
pusha
fstp
inc
loopne
lds
or
inc
sub
sub
mov
in
mov
in
or
jno
xchg
cld
xor
arpl
pop
jle
out
push
cmp
ja
aas
jp
sbbb
maxps
xor
loop
push
lods
add
xor
jno
cmc
popf
mov
sub
or
adc
movsl
insl
adc
aam
adc
jge
add
ret
leave
into
sbb
out
sub
xor
pop
insb
lret
stos
push
jbe
ja
pop
adc
ljmp
test
aad
jns
jp
in
mov
jg
call
and
push
insb
rorb
test
outsl
add
inc
jo
mov
and
push
rcrl
dec
stc
dec
or
xchg
mov
je
sbb
mov
iret
dec
lret
inc
into
add
loope
jmp
sbb
fisubs
add
or
sbb
cmpsb
inc
mov
insl
movsb
loopne
mull
mov
pusha
push
loopne
pusha
pushf
add
push
test
push
mov
and
fldz
and
pop
inc
cltd
xor
inc
in
jmp
cli
add
repz
dec
pop
std
out
add
jg
jecxz
leave
movsl
cltd
add
mov
out
out
xchg
fcmovnb
xchg
shrl
pop
sbb
and
dec
out
sub
cmp
pop
ljmp
xor
jbe
mov
incb
mov
mov
cmp
lds
push
mov
shr
cmp
fistps
and
lahf
push
adc
ds
pop
std
clc
lods
mov
adc
dec
mov
sub
icebp
push
xchg
push
and
sub
pop
mov
outsl
nop
movsl
cs
cmp
add
fnsave
xor
pop
out
push
test
and
or
jne
mov
mov
or
mov
insl
sbb
mov
int3
lcall
test
lds
mov
or
jns
jecxz
pop
sub
inc
sub
test
adc
mov
xchg
ja
or
and
out
imul
outsl
outsb
jne
cmp
incb
cmpsb
lcall
scas
xchg
inc
out
adc
mov
ds
or
or
push
inc
fcomi
push
xchg
or
push
inc
rcrb
xchg
lret
push
push
sbb
into
mov
mov
into
jge
xchg
aam
sbb
pop
jne
push
sbb
sbb
cmpsb
test
mov
jle
aad
jge
add
mov
movsb
xor
cld
out
out
cmc
or
inc
popa
push
mov
cmp
sbb
add
stos
push
inc
ret
and
aad
fneni(8087
cs
mov
std
aam
pop
lea
cltd
nop
test
mov
scas
pusha
cmp
jg
subb
dec
sub
dec
mov
fucomp
cmp
fwait
cwtl
push
mov
or
pop
hlt
add
cwtl
test
sub
test
jp
mov
fiaddl
xlat
lock
adc
loopne
adc
js
sbb
xlat
stos
ss
cmp
inc
dec
ret
repnz
outsb
cmpsb
fmuls
repnz
jp
or
sti
ds
cwtl
pop
lret
xchg
sbb
pop
loope
outsl
dec
test
lods
out
shlb
arpl
gs
lds
subb
xor
movsb
xchg
insb
or
pcmpgtw
mov
into
out
fstpt
fld
into
pop
int3
xchg
and
jecxz
mov
ret
jecxz
mov
and
mov
enter
in
adc
outsl
jbe
push
adc
and
lcall
cmp
stc
push
dec
mov
push
push
das
out
fistpll
xchg
inc
pushf
jno
loope
mov
adc
out
imul
jp
ljmp
imul
sub
lds
loop
pop
les
or
push
std
rcl
in
rclb
mov
iret
fdivl
ja
mov
dec
call
lea
sbb
mov
bound
and
or
jl
icebp
pop
out
sbb
movsb
in
or
imull
xchg
or
push
add
hlt
into
mov
inc
xchg
call
adcl
mov
and
mov
pusha
jb
adc
cld
stos
outsl
imul
xchg
inc
adc
sti
mov
cs
push
sub
rorl
and
fdivp
push
adc
jmp
jle
push
and
jg
jbe
loope
cmc
fiadds
insb
ret
and
outsl
jns
das
dec
insl
mov
imul
xchg
js
dec
lret
in
adc
mov
pop
es
adcl
dec
mov
add
enter
cmpsb
or
jbe
fimull
pop
aas
sub
sar
mov
addl
mov
insl
lret
rcrb
lods
addr16
arpl
dec
lahf
aad
outsl
fsubrs
in
inc
movsl
mov
push
xorl
cmp
mov
xchg
insl
roll
lahf
xor
xor
xor
jp
mov
repz
add
cs
and
mov
sbb
push
add
test
pusha
lret
aad
or
movsl
repz
daa
arpl
sub
or
xor
and
mov
movsl
or
sbb
hlt
pop
mov
inc
paddusw
and
clc
and
dec
in
adc
lods
mov
mov
mov
mov
fidivs
dec
xor
fbld
out
fucomip
sbb
je
aam
xorl
lods
inc
stos
push
enter
outsb
xchg
fimuls
lahf
nop
loop
das
jno
movsl
mov
inc
xchg
ffree
pop
or
movsl
sub
mov
rclb
mov
push
in
adcb
push
xor
push
out
sbb
fwait
pop
adc
sbb
je
jp
sub
push
dec
pop
sub
addl
mov
xchg
in
push
inc
xchg
je
ds
notl
pop
mov
test
pop
cmp
jns
push
fdivrs
xchg
mov
in
addr16
jb
jmp
cmp
bound
pop
shll
popa
fiadds
pop
fildl
sbb
and
rclb
xor
xor
or
ret
and
cmp
cmp
repnz
adc
mov
xor
icebp
mov
sub
push
das
adc
pop
movsb
dec
xor
out
and
mov
imul
inc
cmp
mov
out
filds
mov
jecxz
in
lds
fisubl
loop
sbb
out
and
out
jb
adc
or
push
ret
mov
pop
addr16
push
inc
scas
and
jb
shrl
outsb
adc
outsb
je
lcall
dec
mov
jg
sbb
fwait
sub
xchg
in
das
inc
lret
jmp
mov
pop
mov
in
inc
lea
cmp
xchg
lea
repnz
std
jecxz
sub
lcall
in
cmp
decl
inc
lods
iret
push
mov
or
xor
shl
pusha
add
inc
leave
mov
rolb
add
fbld
pop
mov
push
add
icebp
mov
mov
mov
cmp
sbb
push
pop
jg
mov
stos
into
mov
sti
xchg
shr
ret
in
test
test
lahf
repz
xchg
jnp
repnz
cltd
mov
adc
lods
jne
test
insb
xlat
push
cmp
mov
enter
lsl
inc
dec
enter
add
sbb
adc
push
ljmp
push
dec
in
add
adc
and
or
cmpsl
adc
xor
xchg
sbb
push
xchg
popf
adc
sbb
mov
rcl
hlt
lds
mull
fists
cmpsb
xchg
adc
or
mov
dec
push
jno
aas
xorb
mov
fwait
ret
mov
nop
mov
ljmp
sti
dec
pop
add
mov
jo
mov
aad
mov
std
mov
test
lret
int
mov
js
ret
cli
mov
and
xor
mov
fdiv
xor
ret
lcall
sub
mov
lea
add
adc
fsub
mov
mov
inc
add
inc
enter
jle
xchg
stos
jg
jg
sbb
jg
test
or
nop
test
push
les
lret
xor
and
in
push
mov
jle
or
adc
popa
sub
cltd
leave
sti
mov
cs
push
daa
out
xchg
rcrb
leave
iret
jns
jae
pop
adc
adc
subl
shll
ficompl
mov
cmp
add
dec
cmpsb
js
insl
cmp
xchg
xor
jns
jp
mov
and
fistpll
adc
jne
cs
adc
cmp
and
lods
and
rcll
xchg
xchg
inc
inc
lds
xor
push
nop
cwtl
outsl
pop
popf
inc
or
cltd
or
ja
pop
and
ss
push
sbb
leave
ret
mov
mov
test
jg
inc
stos
cltd
pop
test
jb
imul
push
movsb
or
adc
mov
sti
jg
mov
inc
sub
nop
fimull
mov
pop
pop
addb
push
fsubrl
and
ds
stos
addr16
push
xor
and
pop
fdivr
aam
testl
ficompl
xor
cmp
lods
enter
insl
popf
jge
arpl
ja
nop
xchg
lods
repz
addr16
mov
lds
movsb
out
jp
add
xchg
out
hlt
incb
insb
inc
pop
pop
mov
icebp
ljmp
xchg
inc
xchg
pop
popf
inc
adc
dec
shrl
call
xchg
or
cmpsl
sahf
subb
xchg
mov
sub
sub
shrb
leave
inc
mov
mov
call
push
mov
int
xor
jl
leave
rcr
rcrb
inc
inc
les
sbbl
push
jle
xor
jb
xor
in
cmp
xchg
rorl
ffree
test
cld
cs
pop
mov
std
add
repz
inc
ds
inc
inc
or
divb
or
xchg
cmpsb
int3
movsb
js
scas
add
seto
mov
les
push
xchg
fiaddl
ror
repnz
arpl
pusha
inc
push
loop
roll
pop
adc
ret
xchg
aam
mov
mov
imul
xor
dec
fs
in
sub
jmp
mov
or
rcll
mov
push
out
mov
sub
push
arpl
ds
push
stc
mov
xchg
mov
adc
cmp
in
leave
das
mov
add
rcll
jecxz
mov
sbb
adcl
or
dec
ret
test
push
sub
int3
fdivp
push
or
xlat
sub
mov
shlb
mov
mov
xchg
mov
xor
jmp
push
aaa
rorl
mov
jl
sti
xchg
pop
scas
push
or
pop
xor
outsb
gs
push
xchg
js
cli
adc
scas
cmpsb
pop
adc
or
mov
out
out
cltd
pop
and
adc
sbb
pop
xor
stc
loope
loopne
movsl
cld
sbb
inc
or
out
dec
popa
sbb
cmp
sub
iret
idiv
xor
dec
jecxz
jmp
mov
cmpsb
jae
xchg
mov
leave
adcb
and
xlat
pop
decb
lock
in
or
xchg
ljmp
in
iret
scas
imul
rclb
sub
cs
jmp
rcrb
adc
call
repnz
inc
mov
add
mov
jmp
sahf
jg
jae
popf
repz
icebp
or
jg
loopne
lds
push
lret
shll
ret
std
pop
jns
repz
loope
sub
push
lea
punpckhbw
decl
lret
sub
mov
or
pop
mov
push
jnp
mov
cmpsb
xor
imul
xchg
mov
cmp
jns
idivl
push
fistl
jp
and
pop
leave
rcl
xchg
or
mov
push
les
icebp
les
addr16
inc
lods
add
push
insl
mov
push
fcoms
mov
mov
sub
pop
push
push
mov
cs
jns
add
sarl
std
dec
sub
sbb
cmpsb
popa
sub
push
jp
cwtl
fbld
jnp
push
arpl
push
mov
leave
test
xchg
insl
mov
arpl
mov
mov
push
stos
stos
lock
adc
aad
in
or
jg
dec
sbb
fsubs
mov
mov
js
insb
cmp
arpl
jns
dec
push
adc
les
rorl
adc
cmp
data16
into
or
push
rcl
shrb
or
sub
and
and
mov
mov
mov
xchg
sub
mov
mov
xlat
cmpl
aaa
sub
lds
aad
sarl
push
jbe
pop
addr16
or
cmpsl
fcmovnb
shl
out
mov
cmp
stos
mov
dec
bound
data16
sub
add
pusha
cmp
push
xchg
push
lods
mov
leave
xchg
stc
mov
js
fs
mov
and
and
out
cmp
cmp
jns
adc
pop
inc
imul
stc
arpl
or
outsb
xor
adc
vpsllw
das
ss
bound
std
daa
insb
fadd
dec
sbb
out
repnz
loope
jb
cmp
call
pop
push
dec
jle
push
mov
fcom
adc
hlt
fsubr
pop
xor
add
nop
or
data16
mov
mov
cmpsl
jmp
rcll
bt
das
push
sub
sbb
xchg
fyl2xp1
call
test
loop
mov
into
mov
test
mov
and
jne
pop
ret
jmp
add
and
sti
daa
stos
ds
or
outsb
sub
mov
cli
repz
pusha
jl
clc
push
es
fsubs
popf
arpl
jmp
inc
pusha
lahf
mov
into
popf
out
filds
out
or
into
cli
cmp
mov
add
outsb
add
and
fmul
in
cmp
or
leave
sub
cmp
jb
test
sbb
sahf
inc
es
out
xchg
leave
ret
mov
leave
mov
inc
xchg
shrb
jno
repnz
sbb
idivb
mov
sarb
adc
push
sbb
mov
cwtl
pushf
insl
or
xor
popa
lods
xchg
inc
in
sbb
mov
inc
outsl
mov
mov
and
das
jne
xchg
push
nop
dec
push
mov
mov
pop
adc
inc
scas
loopne
out
add
enter
out
call
rorl
outsb
sbbb
nop
mov
jno
cmp
cmpsl
inc
hlt
andl
negb
sti
xchg
test
aaa
xor
inc
inc
dec
inc
repz
mov
mov
sbb
inc
adc
bnd
pop
es
inc
jp
rcll
add
pop
xlat
idivb
ss
xchg
mov
fdiv
dec
adc
out
scas
sahf
xchg
iret
pop
aad
cltd
jo
add
add
in
xchg
outsl
ret
mov
sbbl
inc
test
inc
gs
fcmovb
cmp
adc
pop
mov
jae
xchg
inc
push
out
divl
add
ss
js
adc
jbe
sbb
lods
mov
mov
sbb
jb
inc
adc
jge
sbb
jnp
push
call
sarl
loopne
jecxz
inc
xor
add
das
and
bound
fnstsw
loope
bound
movsb
cmp
imul
mov
jno
mov
or
or
and
shl
add
int
xchg
leave
cld
rclb
jnp
cmp
inc
cmp
call
sub
loopne
iret
xlat
jb
mov
mov
fimuls
adc
int3
js
enter
pop
aam
xor
xchg
pop
les
ret
leave
scas
stos
aam
pop
es
cmpsl
insl
sbb
mov
aad
adc
jg
fs
ret
lods
cvtdq2ps
rcl
and
lea
cmpsl
cli
fwait
orb
repz
push
out
jno
nop
fsubs
or
mov
aam
iret
je
fidivrs
xchg
mov
gs
mov
jno
stc
aaa
adc
hlt
inc
sub
xchg
cmp
cld
ja
insb
out
mov
add
shlb
and
push
sbb
pop
stos
shll
cmpl
xchg
in
inc
je
cmpsl
push
sub
fadds
in
sub
inc
sub
mov
cmp
ljmp
iret
sbb
push
mov
sarb
or
add
fnclex
inc
mov
outsl
dec
dec
lahf
test
and
sahf
jl
ljmp
out
mov
cs
sub
out
testb
or
notb
lods
rcrb
mov
cmp
call
test
lds
ret
ret
dec
push
rep
fs
iret
in
xchg
pop
frstor
adc
out
sbb
jns
fbld
and
adc
xchg
cmp
aas
call
sub
mov
xor
lds
test
orl
jno
scas
inc
push
lret
xor
jp
leave
xchg
fwait
xor
aaa
je
lret
repz
jae
dec
sub
xchg
add
nop
dec
clc
pushl
jl
pusha
inc
mov
push
inc
dec
pop
cs
mov
mov
xor
jno
outsb
xchg
sub
mov
mov
sbb
ds
inc
sarl
fstps
std
cmp
into
adc
jo
mov
lds
mov
add
in
cmp
lds
mov
mov
xchg
in
inc
sub
icebp
aam
mov
pop
sub
cs
cwtl
mov
add
cmp
jae
cs
out
test
idivl
addb
push
xor
pop
xchg
sub
aaa
fiaddl
fs
scas
in
gs
mov
ret
stos
aaa
mov
xchg
cmp
add
ja
push
daa
test
adc
and
fwait
add
mov
xor
lock
cmp
orb
lods
dec
jo
push
xor
js
sub
cmp
pop
push
jno
pop
cmpsl
mov
dec
fimull
add
lret
xor
cld
fldt
lock
mov
lcall
mov
stos
repz
into
shlb
jg
adc
insb
in
outsb
mov
daa
popa
mov
lcall
cmp
je
xchg
mov
mov
js
or
sti
into
out
mov
es
in
aad
cmp
inc
test
mov
push
pop
jmp
inc
sarb
int3
dec
faddl
mov
push
pushf
aaa
pop
pop
jmp
fiaddl
xchg
test
addl
xor
pop
sub
stos
or
push
mov
mov
fimull
cmp
mov
ret
pop
stc
mov
fstpt
scas
mov
roll
cltd
pop
sub
add
cmp
nop
jmp
inc
jge
cli
ficompl
inc
in
pop
push
adc
lock
lahf
add
jae
xchg
ret
add
jns
xchg
cmc
shrb
arpl
aad
xor
int
popa
test
outsb
loope
rol
or
sub
inc
cli
cld
inc
shrl
push
fimull
or
jb
mov
test
movsb
sarl
jg
mov
cmpsl
out
inc
mov
or
int3
loope
stos
lock
sti
iret
mov
jae
jns
ljmp
mov
in
jb
or
pop
int
xchg
dec
call
call
cmpsb
inc
add
pshufw
jae
dec
mov
mov
mov
mov
imul
call
sub
cmp
pushl
jmp
dec
push
scas
mov
xchg
mov
dec
aad
fisubl
push
sahf
ja
pop
cltd
cld
je
mov
sub
sbb
mov
inc
popf
dec
lret
fidivrl
lods
pusha
xor
andl
out
adc
adc
xchg
fs
out
into
jmp
dec
bnd
stos
dec
jecxz
pop
and
push
pop
push
in
adc
jnp
pop
aaa
cwtl
insl
icebp
or
xchg
int
add
adc
bound
out
lret
and
cmp
notl
mov
and
inc
add
lods
scas
and
sub
ret
loopne
inc
fidivl
scas
addr16
popf
mov
pop
stos
pop
sbb
in
insl
shll
call
andb
leave
scas
es
lahf
dec
lret
add
and
dec
sbb
imul
je
add
pop
cmp
aas
cld
xchg
bswap
or
call
frstor
sub
inc
loopne
mov
pop
mov
and
pop
insb
addl
ljmp
and
rorb
or
test
stos
sbb
inc
inc
add
xchg
fsubr
lret
mov
jo
test
rcrl
dec
mov
fadds
out
jnp
and
jnp
jnp
xchg
test
jmp
test
rorb
out
cmpsl
inc
sub
adc
movb
and
ret
and
addb
pop
xor
add
add
cltd
push
jns
push
fstl
push
mov
leave
jb
inc
cld
les
and
and
hlt
pop
mov
cmp
jg
xor
sub
ds
jecxz
lock
or
pop
add
out
xor
sbb
jo
stc
enter
fiaddl
stos
pop
mov
ds
inc
gs
lahf
mov
inc
mov
pop
ljmp
dec
pop
fisttpl
ret
xor
cltd
adc
mov
fisubs
mov
and
xchg
push
mov
cmpsl
aas
out
add
xor
fdivl
pop
jg
js
pop
mov
cmpb
pop
push
loope
sarl
mov
cmpsl
lcall
je
stc
leave
call
push
pop
shlb
je
or
test
lahf
pop
imul
incl
jo
arpl
adc
movsl
mov
cltd
movsl
jo
mov
jle
jge
cltd
lret
rol
add
sbb
enter
sahf
mov
cmc
add
sti
lcall
or
or
sub
std
jge
movsb
jl
iret
test
adc
mov
sub
xchg
sub
xor
mov
pop
sbb
daa
inc
mov
pop
dec
pop
lret
xchg
and
or
xor
popf
scas
cmp
testb
stos
sub
pop
test
inc
je
sti
dec
inc
aaa
pop
movsl
xchg
iret
fisubl
add
aad
pop
shl
xor
out
insl
aam
stos
in
rep
xchg
stc
mov
ret
mov
test
pop
ret
enter
mov
cmp
cmc
shrb
sbb
mov
push
sbb
mov
push
les
and
aam
add
push
inc
and
les
xchg
mov
sbb
xchg
dec
repnz
clc
add
aam
mov
mov
neg
mov
sub
stos
mov
test
mov
mov
sub
xorl
loope
pop
test
lahf
cmp
cwtl
cmpsl
test
jg
stc
pushf
rcrb
add
aam
lds
cli
sub
jbe
fldcw
pop
xchg
dec
sub
outsb
lods
clc
mov
shr
enter
cmp
test
pop
out
pushf
in
aam
lea
outsb
leave
daa
jb
cld
push
insl
rol
ljmp
push
aam
cmc
aaa
mov
mov
add
pusha
pop
fmull
add
test
gs
notb
iret
mov
lcall
jbe
and
push
dec
xchg
inc
dec
xchg
fnstcw
mov
mov
pop
out
dec
or
dec
lds
xchg
push
lock
loopne
mov
add
shrb
push
ljmp
add
testb
mov
int
aam
or
dec
adc
dec
mov
fsubrl
mov
mov
lea
test
in
mov
and
sbb
mov
jecxz
and
call
orb
adc
out
push
and
sub
push
std
lods
pusha
jg
or
addr16
sbb
in
sub
mov
dec
in
out
cltd
mov
mov
enter
je
in
jle
lods
mov
add
popf
mov
xor
scas
jb
push
pop
ja
ror
adc
inc
fcomps
movsb
cld
es
ret
fwait
jl,pt
dec
xchg
adc
aaa
inc
sub
xchg
mov
or
lock
mov
gs
inc
mov
mov
imull
jmp
adc
sbb
sbb
stos
add
rorl
pop
or
lock
pop
insb
push
mov
cs
cmp
push
sahf
bound
jp
stc
push
xor
rclb
mov
stc
rcl
dec
mov
imul
movsb
ds
les
popf
fnsave
jo
and
lea
xchg
popa
jae
mov
mov
les
out
sbb
push
cmpsb
adc
sub
adc
je
scas
xchg
ret
pop
fadds
sarl
les
mov
xorl
xchg
in
imul
dec
std
out
bound
js
add
pop
sbb
pop
add
pop
aaa
ficomps
push
xchg
hlt
mov
test
xchg
dec
mov
ret
and
std
sti
stos
and
insl
cmp
or
sar
xchg
dec
pop
jg
or
je
cmpsl
mov
in
test
imul
mov
rcr
cmp
and
cltd
mov
inc
lcall
lds
push
lock
leave
loop
mov
push
jb
call
rcr
clc
jle
jl
push
stos
jg
mov
sbb
add
mov
es
out
cwtl
fistpl
das
mov
aaa
sbb
mov
jne
jae
adc
pop
jmp
pop
push
ud2
push
inc
sti
mov
mov
mov
jnp
cmp
outsl
nop
pop
push
popf
out
xchg
xor
loope
add
add
or
or
jmp
xchg
mov
fistl
in
or
fisttpll
call
subl
xchg
jg
ja
inc
inc
mov
add
lock
cmp
loop
dec
mov
fldl
clc
lods
test
sahf
fs
or
lods
lret
jp
pop
ret
dec
adc
add
dec
movsl
xchg
jb
and
fwait
cmp
lret
jge
mov
fcmovnu
lock
addb
add
jl
or
cmp
jno
jb
xor
jae
add
dec
pop
int3
add
clc
adc
sub
movsb
add
sarl
outsb
push
sub
and
push
scas
fsubl
loope
hlt
ss
jg
adc
xchg
dec
insb
rorl
pusha
sbbb
inc
cmp
mov
stos
frstpm(287
ss
inc
sbb
aaa
int
push
add
lret
adc
ljmp
sub
xor
das
jno
sbbb
jne
pushf
daa
mov
mov
gs
sbbl
arpl
or
popf
insb
dec
jb
aad
and
cmp
ret
iret
scas
xchg
pop
jle
dec
adc
inc
sbb
push
pop
mov
xchg
into
mul
andl
nop
pop
adc
jl
push
or
sbbl
js
push
push
push
adc
sbb
test
mov
stos
sub
pop
stos
push
fstpt
push
fsubrl
cmpl
or
repz
in
jle
hlt
enter
jnp
int
lods
loopne
mov
and
mov
data16
bound
mov
mov
xor
fcoml
addl
mov
out
pop
mov
jle
test
pop
outsl
jmp
aaa
stos
mov
icebp
cld
ds
scas
xchg
scas
or
ret
loop
adc
jae
dec
dec
push
jecxz
jns
insb
xlat
or
stc
mov
sub
fidivl
xchg
jg
sbb
xlat
push
sub
adc
jbe
clc
and
aad
mov
insl
mov
dec
cmp
jne
add
xchg
rcl
fcoms
out
add
cld
jnp
hlt
xchg
mov
adc
int3
pop
jg
sahf
cmpsl
repnz
adc
icebp
push
or
icebp
fcompl
mov
pop
jne
call
fs
dec
inc
lret
lea
cmp
sub
dec
and
sbb
dec
or
mov
jecxz
stos
dec
pop
xor
insl
mov
sub
stc
js
sbb
mov
jnp
aaa
jle
push
pop
out
push
ljmp
or
hlt
mov
add
outsb
lcall
jp
test
mov
adc
loop
repz
in
arpl
in
mov
shlb
add
enter
xor
cmp
jecxz
test
out
enter
xchg
add
dec
ja
jbe
pop
xor
fildll
adc
push
sti
inc
mov
jg
mov
sbb
and
pop
mov
xchg
and
mov
mov
and
push
int3
mov
push
outsl
jnp
push
sti
mov
outsl
out
stos
and
pop
lret
fs
in
or
in
fs
adc
inc
xchg
cmp
cmpsl
adc
fs
mov
or
addr16
dec
dec
push
leave
aam
rcll
or
push
divl
loop
int3
mov
scas
dec
mov
sti
call
addr16
gs
aam
push
test
push
repz
push
adc
or
in
mov
pop
je
xchg
in
and
faddl
lret
jb
scas
nop
and
test
push
mov
xlat
sbbl
cmp
mov
sbb
int
cmp
cmpsb
aam
int3
xor
repnz
cmpsb
sub
adc
stos
in
test
loope
ja
inc
imul
xchg
jge
jno
and
ljmp
loopne
inc
xchg
push
pop
aaa
mov
mov
inc
mov
sbb
push
aaa
cltd
fwait
ss
popa
shll
inc
push
ljmp
fisubrl
sbb
dec
adc
js
lahf
leave
cmpsl
dec
shll
arpl
ficoms
addr16
xor
fidivs
push
nop
test
push
sub
pushl
mov
pushf
or
movsb
add
dec
incl
mov
ss
push
xor
loop
mov
jns
or
adc
sti
in
mov
add
lds
cli
rcrl
fsubl
js
cmp
ja
jbe
int
mov
dec
pop
loopne
lock
lds
pop
lret
iret
mov
push
scas
push
sbb
movb
mov
sbb
sbb
sub
or
cmp
sbb
bound
jb
pushf
fcmovnb
shrb
stos
mov
je
add
xchg
addl
nop
nop
aaa
pop
cmpsb
aas
lods
lret
les
jp
adc
dec
sbb
inc
test
iret
enter
testb
lock
icebp
or
testl
rcr
push
iret
leave
jg
in
xchg
xor
and
xor
xchg
mov
jmp
and
xchg
outsb
push
fidivrs
push
out
inc
insl
cmp
lret
mov
dec
push
sub
scas
cli
cmpb
mov
iret
xchg
dec
mov
jns
stos
adc
sti
mov
adc
or
in
in
add
xor
mov
sub
xor
test
mov
in
mov
dec
mov
jl
xchg
subl
adc
or
xchg
in
mov
test
dec
nop
push
sub
push
pop
addb
popl
jb
sbb
xchg
jle
cmp
mov
xchg
out
insl
jl
icebp
fnstcw
adc
xchg
stc
sbb
call
dec
add
ret
sub
in
lcall
stos
adc
sbb
fs
out
and
push
inc
cmpsl
pushf
sti
mov
and
mov
cmpb
adc
add
mov
repnz
cmp
repnz
mov
or
pop
out
movsl
daa
mov
sti
sub
fstps
dec
mov
enter
fs
push
cmp
leave
jno
pop
xor
dec
cld
fidivrl
push
roll
fs
loopne
push
iret
mov
mov
inc
repz
adc
jnp
rorl
pop
out
stos
push
bound
adc
test
pop
sbb
sub
popa
cwtl
or
rcr
jno
addr16
xchg
aad
push
pop
push
stc
mov
ret
aam
pop
sub
js
push
in
mul
stc
addb
subb
cmp
cmpsb
inc
jo
pop
scas
mov
jmp
jl
sahf
subl
subb
mov
mov
mov
or
inc
pop
ljmp
enter
repnz
xor
add
addr16
pop
cmp
xorb
pop
jp
xor
mov
mov
adc
inc
dec
inc
ds
add
pop
mov
mov
ja
fcomp
fidivl
mov
orl
fwait
ss
in
mov
pop
fcmovu
or
inc
jle
stc
out
push
adc
bound
cmpsb
bswap
data16
and
bound
leave
imul
inc
add
lock
jno
sti
into
cmc
loope
js
pop
xchg
and
icebp
dec
mov
or
imull
int3
cltd
movsl
cmpb
cmp
mov
cmp
aam
mov
or
in
sbbb
pop
add
insl
ljmp
or
dec
jecxz
int
or
call
xchg
idivl
cs
ret
dec
test
aas
pop
cmc
mov
sar
imul
push
jne
rcl
pop
and
test
add
lahf
mov
inc
inc
push
push
pusha
pop
dec
xor
inc
inc
inc
lods
push
popa
push
out
imul
jbe
mov
inc
call
mov
cltd
adc
jns
dec
jmp
arpl
cmp
xchg
inc
insb
mov
pop
test
sbb
mov
pop
mov
pop
cmp
and
xor
cmp
inc
inc
adc
mov
pop
inc
insl
test
push
cmp
mov
mov
mov
push
xor
pop
pop
cmpsl
cmc
and
dec
sub
into
fistps
out
add
push
jbe
mov
jno
jbe
xchg
jge
jno
test
xchg
adc
xlat
mov
push
mov
jno
les
in
or
scas
push
push
xorl
in
xor
mov
or
popf
adcb
sahf
dec
fs
outsb
in
adc
divl
sti
pop
call
jmp
inc
mov
mov
pop
bswap
inc
inc
adc
dec
add
decl
pushf
out
aam
push
mov
push
pop
leave
sbb
icebp
gs
adc
out
push
stos
aaa
xchg
xor
adc
mov
sub
daa
ljmp
imul
shrl
or
and
cmp
test
lret
mov
lods
gs
sbb
in
pop
shll
xchg
push
mov
xchg
nop
or
jne
xor
jnp
add
loopne
add
adc
mov
xchg
clc
and
or
mov
test
ret
imul
dec
jmp
fs
insl
mov
rcll
clc
push
xlat
jl
sbb
xor
dec
sub
dec
mov
nop
xor
leave
push
pop
push
test
push
outsl
sbbb
clc
xchg
inc
pushf
inc
dec
inc
pop
dec
lcall
adc
negl
movsl
lret
call
xchg
mov
mov
sahf
xchg
stos
or
add
and
mov
repnz
std
btc
or
or
lods
cli
adc
cmpsb
iret
add
jae
xchg
sbbl
and
testb
add
imull
xchg
pop
dec
inc
jge
xchg
and
out
pop
punpckhwd
push
lods
sub
push
mov
rorb
mov
push
push
add
push
int
fsubs
cmpsl
divb
inc
jae
icebp
out
xchg
popa
cmpsb
push
dec
and
push
pop
mov
loop
mov
les
sub
xor
std
out
adc
loopne
dec
jo
out
cs
cmp
xor
push
xor
hlt
mov
mov
fdivrp
repnz
push
out
jne
in
outsl
sbb
orl
ds
das
mov
sahf
movsl
jnp
sub
insb
lret
test
adc
call
fbld
xor
or
aad
jl
and
or
mov
add
insl
mov
sub
adc
jmp
lcall
mov
mov
adc
lds
or
or
loopne
stos
xor
xchg
xchg
mov
cmp
mov
ja
movsb
adc
pop
mov
push
add
and
xor
jno
xchg
mov
aam
outsl
call
xor
push
stos
syscall
jp
xchg
jp
js
dec
fidivs
jmp
jns
dec
xchg
lahf
repnz
imul
cmpb
ljmp
inc
cltd
mov
decb
push
or
stos
xchg
fs
push
inc
fs
jmp
popa
jno
push
inc
xorb
sub
sbb
jb
pop
xchg
sti
mov
ret
adc
dec
pop
inc
leave
mov
nop
dec
xchg
cmp
cmp
xor
lods
movsl
js
pop
mov
stos
das
pop
sbb
or
mov
xor
sbb
xchg
loopne
xor
jl
and
or
xchg
addr16
popa
popa
testl
je
dec
lods
mov
pop
adc
add
xchg
test
out
notb
outsl
shll
imul
call
movsl
idivb
frstor
and
in
inc
jns
cmp
xchg
sub
mov
scas
mov
xor
inc
mov
out
pusha
sub
and
push
push
xchg
mov
inc
cs
xchg
das
lea
imul
pop
jg
pushf
stos
mov
jmp
jecxz
pop
sub
pop
std
nop
xchg
cmp
and
pop
or
add
enter
mov
mov
repz
jb
xor
aaa
inc
fcomps
xor
les
pop
lret
pabsw
xrelease
jge
scas
loopne
and
in
mov
lock
pop
aas
comiss
mov
lahf
xor
int3
leave
or
sub
daa
xchg
daa
je
and
dec
push
xchg
sbb
aam
scas
cmp
iret
xchg
sbb
sub
in
mov
inc
insb
cmp
cmpsl
adc
pop
in
mov
adc
lret
mov
decb
cltd
pop
sbb
scas
ficoml
scas
into
mov
xchg
and
xchg
lock
pop
sub
scas
shlb
scas
mov
lahf
lock
lret
andl
fdivs
rorl
out
mov
movsb
dec
jno
dec
xor
pop
or
pop
mov
jnp
hlt
cmpsl
mov
iret
es
adc
adc
pop
pop
dec
dec
fimull
mov
int3
jo
cmp
mov
faddl
or
fists
cmp
insl
insl
cs
sub
popf
insl
jecxz
mov
pop
cwtl
das
jne
add
jmp
imul
in
xchg
mov
retw
data16
sub
jmp
mov
fcomps
enter
out
pop
gs
mov
cmp
sbb
pop
and
add
sbb
mov
cmpl
mov
jmp
lods
add
xchg
test
scas
dec
push
xlat
push
aas
push
bnd
cmpsl
int
stos
iret
test
fstps
js
imul
int
aas
push
inc
jecxz
fsubrs
sbb
sub
aam
xchg
pop
hlt
outsl
mov
adc
imul
fnstenv
ds
xchg
ficoml
dec
lahf
mov
dec
push
idivb
in
cmp
test
sub
dec
xchg
sub
or
xchg
std
dec
pusha
pop
dec
xor
jae
out
xor
mov
mov
mov
in
pushf
shlb
jl
fdivl
lahf
ljmp
lahf
sub
mov
mov
roll
loop
and
inc
jge
stos
xor
ret
xchg
inc
call
pushf
adcb
stos
les
popa
and
inc
cltd
call
stos
cwtl
aaa
flds
out
pusha
cmpsl
push
or
xlat
call
lret
xchg
jno
push
cmp
mov
mov
adc
lcall
nop
lcall
lods
add
jbe
sbb
bound
loop
aas
mov
leave
inc
cltd
stos
push
fwait
xchg
xor
or
mov
mov
in
jp
lds
aam
xlat
pop
call
push
add
lret
and
out
adc
jnp
xchg
push
dec
cmpsl
lret
jp
inc
push
les
jno
in
out
fldl
aad
push
shll
sub
insb
jge
faddp
lods
insl
in
data16
cltd
stos
jns
fbstp
jo
xchg
mov
dec
outsl
xchg
sbb
mov
ja
mov
add
mov
xchg
mov
popf
fldenv
xor
je
bound
inc
hlt
lahf
jecxz
jae
jmp
cmc
pushf
cltd
cwtl
loope
fld
mov
pop
push
mov
push
jecxz
out
push
lods
pop
mov
loopne
fxch
movsl
mov
cmp
pushf
or
test
xlat
add
test
add
sub
add
sbb
loop
iret
xchg
mov
test
addr16
mov
pop
jp
lods
or
mov
ror
insb
sbb
mov
es
jbe
mov
xchg
mov
mov
ror
sub
stc
jl
iret
jns
xchg
imul
outsb
lcall
dec
xchg
dec
inc
inc
popa
fisubrs
mov
dec
stos
insl
jmp
rclb
adc
dec
jmp
fists
mov
dec
pop
jno
imul
ror
or
sub
test
mov
call
test
cmpsl
out
lods
mov
add
subl
push
or
add
and
cmp
mov
aas
enter
leave
enter
into
push
add
cmc
ret
mov
mov
jbe
inc
pop
fsubs
loopne
lock
loopne
dec
test
bound
cltd
outsb
ficomps
dec
mov
shrb
xlat
adc
mov
jnp
lret
std
inc
test
or
add
add
mov
sub
into
insl
iret
lret
push
mov
sbb
daa
mov
adc
ja
inc
sub
sbb
xor
mov
call
xchg
cld
in
mulb
shlb
scas
mov
push
out
push
repnz
ljmp
in
pusha
jnp
and
mov
jmp
pop
mov
ja
mov
mov
icebp
cmp
fwait
and
add
and
popa
popa
sarb
imul
movb
fs
test
icebp
fidivs
xchg
or
pop
jecxz
push
imul
pop
test
fdivs
add
pushf
cld
ret
pop
xor
xchg
hlt
mov
in
das
mov
dec
lret
scas
cmp
loop
lcall
dec
add
pop
push
add
xor
mov
test
adc
cmp
rcr
andl
push
sub
lahf
fiadds
xor
test
xor
mov
outsb
add
mov
sub
in
push
cmp
sbb
xchg
gs
jmp
push
mov
cmp
adc
negb
jg
pop
gs
mov
pusha
sti
outsl
mov
sub
lcall
xchg
fistpll
xor
jl
test
push
mov
orb
addb
mov
les
and
sbb
sub
jmp
std
fisttpll
xorb
mov
dec
or
push
or
fisubrs
fcomps
sbb
jb
inc
ss
mov
loopne
xchg
jp
fwait
pusha
test
movsb
push
xchg
mov
inc
imul
mov
push
cmp
fyl2x
negb
or
and
imul
iret
and
faddp
pop
mov
push
jae
push
hlt
cld
or
scas
testl
sbb
test
dec
jmp
aam
ds
push
mov
repz
ret
lds
sub
in
push
stos
stos
xchg
xchg
aas
mov
cmc
outsl
insl
insb
in
cmc
cmp
push
and
addr16
mov
test
mov
add
sub
fiadds
mov
jae
cmp
fisttpll
jl
mov
jl
fnstenv
dec
dec
xor
mov
push
out
mov
mov
aas
decb
inc
jle
xchg
enter
ja
fwait
in
cltd
aas
dec
sub
fwait
mov
mov
jecxz
xor
push
inc
iret
mov
mov
fimuls
out
lahf
icebp
outsb
fs
mov
mov
ds
adc
pop
sub
xor
xlat
fs
jne
pop
stos
movsl
vmovhps
and
cmp
notl
adc
sarb
mov
out
out
jg
stc
les
cmp
mov
aas
mov
insb
and
jmp
add
xchg
or
int3
sbb
imul
xchg
and
loop
aas
lock
leave
mov
adc
xor
fs
xor
xlat
inc
lods
sub
ja
je
std
std
outsb
cwtl
insb
ret
aam
call
mov
xchg
cmp
xchg
mov
lods
pop
cmp
xor
mov
lcall
scas
fstp
rorb
incb
daa
arpl
test
lods
insl
idiv
adc
add
dec
xchg
cli
mov
gs
push
jne
xor
ss
clc
mov
stos
xchg
cld
loop
pop
test
sub
pop
jmp
outsb
int
repz
mov
orl
inc
mov
hlt
push
jo
test
lret
cmp
pop
add
flds
xor
leave
pop
or
in
je
les
enter
in
pop
je
pop
cli
stc
mov
xor
xchg
jle
cmc
push
mov
add
mov
js
xchg
jbe
leave
sbb
xlat
push
rcrb
fcoms
mov
in
jo
mov
cs
shll
fcmovnu
cwtl
add
pusha
mov
cld
xor
or
repnz
aad
or
out
out
js
xor
sbb
lea
push
mov
mov
push
mov
adc
or
repz
xor
cmpsb
enter
cmp
mov
mov
sbb
cmp
dec
es
notb
jae
ds
arpl
push
cmp
popf
mov
pop
fdivs
or
sbb
xor
pushl
ds
test
pusha
add
shlb
mov
adc
and
xchg
notb
lahf
pop
outsb
data16
popa
mov
cs
jmp
dec
cmpsl
dec
mov
clc
inc
mov
adc
lahf
adc
sti
dec
cmp
sub
mov
cmpl
jmp
inc
roll
fwait
stos
iret
nop
dec
je
mov
inc
roll
add
push
cmp
mov
mov
cltd
pop
bound
fildll
dec
idivb
push
divl
loopne
cwtl
mov
jo
fidivrs
into
push
mov
aas
sti
ja
in
mov
pop
mov
push
mov
dec
lret
bound
xchg
add
push
outsb
cmpsl
xchg
push
rcll
pop
cmp
pop
ds
imul
xor
bound
mov
xchg
dec
outsb
pop
dec
stos
dec
inc
jne
push
push
negl
lcall
out
adc
out
je
dec
cmp
push
push
adc
out
and
push
push
cwtl
fbstp
fwait
aad
lock
push
jb
dec
ss
mov
pop
clc
sbb
mov
dec
push
push
cmp
pop
mov
fsts
outsl
jns
popa
sar
mov
and
imul
adc
pop
jecxz
mov
std
jecxz
dec
jns
int
xchg
adc
ja
adc
adc
jmp
push
idivb
outsb
and
fwait
pop
and
pop
in
mov
pop
fwait
push
std
push
int3
scas
or
adc
cmp
pop
js
ret
adc
dec
add
push
mov
xor
mov
xchg
xchg
sub
and
and
cmp
mov
xchg
inc
jne
mov
jg
jnp
imul
mov
in
outsb
hlt
out
es
iret
push
fyl2xp1
dec
enter
and
lahf
bnd
js
dec
push
cmp
xor
jl
push
jne
pop
ret
dec
inc
mov
test
into
mov
insb
aad
jae
popf
les
incb
insb
sbb
mov
mov
shlb
mov
shrb
inc
daa
and
call
push
sar
ss
lret
rcl
lret
lea
mov
aas
outsw
sub
out
cmp
sbb
pop
out
xchg
pop
jae
pop
fisubl
in
cwtl
test
lods
pop
jecxz
fldcw
mov
fst
ss
mov
aam
mov
shll
imul
aaa
pop
fdecstp
cmpsl
dec
cs
jnp
mov
lods
fildl
mov
xchg
pusha
jmp
add
mov
fists
enter
lcall
movsb
adc
xlat
pop
pop
jo
int3
or
dec
les
add
push
sbbb
lret
pop
in
test
cmp
aad
sub
inc
loop
mov
push
push
mov
sub
or
mov
mov
aaa
cmp
sbb
add
or
les
ds
push
sti
dec
ds
sbbl
loop
insb
daa
mulb
das
pop
mov
dec
jbe
jne
push
mov
addr16
and
sbb
repz
mov
push
hlt
bound
inc
jmp
adc
add
dec
mov
or
xor
cwtl
or
lahf
in
fisubs
add
dec
cli
ljmp
cs
mov
loop
jno
or
imul
out
mov
sbb
add
movsb
sbb
dec
mov
fisubl
data16
jbe
ds
pop
mov
dec
sbb
lods
jno
enter
adc
dec
pop
or
hlt
or
lret
aaa
jecxz
mov
faddp
outsb
sub
xor
mov
mov
insb
pusha
daa
aas
xor
mov
fnstenv
xchg
or
mov
pop
jne
cmp
fwait
add
lret
test
jecxz
jmp
dec
inc
push
std
imul
rcll
dec
mov
xchg
je
xchg
add
pop
popa
cmp
push
jmp
jns
lods
imul
lcall
hlt
into
cmpb
leave
jp
repnz
or
fcom
and
rol
leave
push
mov
scas
mov
insb
out
ja
add
iret
pushf
roll
dec
rolb
clc
dec
sahf
sbb
rcrb
repz
or
in
and
stc
xchg
scas
jbe
and
lods
ss
push
add
xchg
idivb
jbe
icebp
sub
or
loopne
mov
dec
cmpsb
sbb
jb
jnp
loopne
fucomip
cmpsl
bound
mov
jb
inc
lret
or
mov
loop
sbb
mov
out
out
bound
mov
enter
outsl
push
xchg
out
rcrb
cmpl
insb
pop
push
addl
sub
push
inc
xchg
inc
jnp
shll
daa
jg
jo
mov
xchg
in
pop
jns
shl
push
push
lret
pop
ljmp
lea
adc
test
mov
and
jns
into
ljmp
sub
xor
loop
add
shlb
popa
mov
pop
aam
push
add
xor
or
addr16
das
repz
call
or
xor
incb
ss
test
pop
mov
mov
sbb
and
sti
xor
sbb
push
mov
ret
jbe
in
dec
call
mov
orb
loopne
dec
pop
ret
dec
mov
mov
ret
out
and
ja
or
rolb
cmpsl
arpl
or
mov
sahf
fucomi
ret
xchg
or
push
cmc
les
and
xchg
xor
out
pop
mov
outsl
push
sti
dec
into
xor
imul
jge
inc
mov
fimuls
push
add
int3
sbb
xchg
mov
or
mov
and
jbe
mov
mov
pop
sti
imul
fidivrl
xor
mov
pop
add
or
inc
add
dec
or
int3
sbb
pop
cwtl
adc
popa
in
add
ss
mov
pop
out
dec
subb
xchg
icebp
sbb
nop
out
mov
nop
ljmp
out
dec
jne
pop
outsl
add
sub
push
xchg
pop
sti
aad
xor
jb
xchg
push
mov
push
repnz
test
daa
xor
push
adc
inc
in
inc
dec
cmpsb
and
in
data16
sbb
add
or
cmp
dec
cmp
mov
xor
fcmovnbe
jne
pop
stos
loope
in
mov
cmp
inc
mov
call
repnz
mov
add
jae
std
dec
dec
pop
jecxz
call
ljmp
mov
adc
sub
rcrb
scas
in
into
jge
test
test
add
les
push
and
jbe
xor
mov
dec
pusha
movsl
sub
cli
jns
arpl
mov
into
xor
jo
pop
out
cwtl
ret
inc
hlt
jo
lods
xor
adc
movsl
mov
jno
test
cmpsb
std
pop
mov
sbb
dec
in
imul
and
and
pop
jbe
enter
testb
sub
adc
orw
xor
or
push
aas
sar
dec
add
shl
cli
stos
sbb
xchg
mov
movsl
scas
in
inc
cmp
ja
xor
into
sub
popf
mov
mov
cmpsb
mov
xor
insl
enter
sub
shl
jle
or
ss
inc
sbb
imul
dec
scas
fimull
xchg
jp
pop
cs
xor
and
pop
in
std
xor
or
fnstcw
mov
cli
js
mov
xchg
aaa
lahf
mov
push
adc
lahf
push
pop
push
loop
jns
push
mov
jmp
adcl
xlat
and
mov
lahf
pop
lret
lods
mov
push
pop
int3
add
outsl
or
cmc
dec
or
fmul
cld
pop
cmp
mov
repz
push
mov
mov
int3
mov
fs
cmpl
mov
mov
or
pop
hlt
repnz
and
jbe
pop
or
and
cmc
mov
fninit
divl
cltd
jbe
sub
add
sub
pop
mov
xchg
ret
sbb
cli
xchg
ds
loope
ret
add
sarl
xor
or
cmpsb
mov
mov
push
jmp
sbb
pop
in
shl
divb
adc
and
popf
xor
fiaddl
repnz
or
xor
xchg
ljmp
mov
cmc
mov
ds
loopne
imull
adc
jle
inc
mov
mov
push
enter
cmpsb
ljmp
pop
and
or
mov
std
popf
lahf
push
add
pop
mov
sbb
out
push
dec
out
xlat
ds
xor
cmp
lods
mov
into
dec
xchg
cltd
popa
out
xor
inc
inc
repnz
add
pop
add
jns
adc
mov
xchg
aas
mov
sti
fcomip
xor
or
test
fisttpl
bound
adc
push
ror
or
inc
scas
or
andl
lds
popa
and
sarl
or
scas
lock
push
inc
aam
mov
push
outsb
int3
into
jae
or
sbb
inc
movsl
popf
cwtl
xchg
cmp
adc
fbstp
pusha
add
pushf
jno
mov
mov
push
aaa
iret
add
test
dec
addr16
dec
clc
out
cld
imul
pop
sbb
or
sbb
dec
jge
xor
adc
lods
into
nop
jp
or
or
add
inc
in
mov
cli
mov
cmpsl
pop
std
sub
xor
adc
jb
jecxz
adc
aaa
push
push
std
mov
xor
fldl
stc
push
test
inc
cmp
fcomp
loopne
ret
outsb
ljmp
mov
inc
inc
jbe
add
clc
lods
fiadds
adc
test
dec
or
sbb
out
rorl
xor
push
addr16
push
popf
test
sbb
jno
js
push
js
jnp
cltd
inc
jp
aad
aaa
into
testb
mov
or
pop
and
cmp
push
dec
popf
cmp
jle
xor
xor
cmp
jmpw
aaa
pop
addl
dec
enter
adc
jne
stc
mov
push
push
pop
out
cld
xchg
mov
push
push
ret
cmpsl
push
cmp
dec
scas
jnp
imul
push
and
sub
rcr
mov
fimuls
and
push
jp
fcmove
xor
xor
mov
js
add
leave
clc
sub
mov
stos
imul
jp
aad
sti
push
pop
mov
xchg
stos
and
aas
stos
es
sti
push
lods
fcoml
add
mov
pop
jbe
pop
or
bswap
xchg
int3
int3
mov
xor
or
mov
scas
adc
jnp
notl
fidivl
inc
push
mov
test
mov
divl
mov
test
push
ja
mov
outsb
sbb
data16
cli
add
lds
adc
cmp
sti
shrb
push
imul
cmp
cmp
addr16
cmc
arpl
sub
xchg
and
insl
rcll
fistpl
scas
push
popf
cmc
lahf
jb
repnz
xchg
mov
push
lret
and
fists
cmpsl
push
mov
stos
fsubrs
mov
aam
mov
das
adcl
or
sbb
ds
icebp
adc
fistpll
jbe
in
cmp
movsb
aam
dec
xchg
jbe
rolb
or
adc
sbb
dec
pop
jae
mov
sbb
inc
in
loop
xchg
mov
sahf
mov
sbb
lcall
int3
xor
and
rcr
xor
repz
and
push
push
lcall
pop
stc
lea
push
fists
aas
push
ficompl
dec
aad
cs
sub
xchg
repz
iret
jmp
aad
mov
sbb
cs
testl
inc
dec
mov
mov
hlt
adc
xchg
mov
lods
jg
dec
idivl
leave
push
lret
mov
add
aas
popa
push
push
aad
inc
lods
mov
mov
adc
enter
mov
pop
rcr
stc
orl
sub
subb
sbb
pop
lret
inc
popl
cmp
call
add
mov
pop
mov
add
repnz
or
cli
push
lcall
push
shlb
scas
pop
ficoms
loop
lret
dec
add
inc
xor
xchg
mov
lret
or
sbbl
jle
and
in
data16
rolb
test
fwait
out
cmp
mov
movsl
jnp
loope
outsl
test
xchg
adc
ds
ss
push
mov
xlat
ljmp
fwait
pop
xchg
and
adc
inc
idivb
cmpsb
mull
mov
adc
lea
bound
aaa
lret
je
int
cmp
mov
cmp
inc
push
push
in
pushf
fisubrs
adc
cmp
inc
imul
popa
sub
dec
iret
loop
adc
push
lds
cmp
loopne
push
test
jb
mov
dec
sub
push
sbbb
pop
jbe
sbb
clc
dec
inc
cwtl
sbb
test
incb
shll
sbbb
pusha
dec
roll
pop
stos
pusha
ljmp
and
fsubrs
das
sarb
jbe
or
divl
push
test
mov
inc
inc
dec
pop
movsl
xor
push
pop
call
shl
icebp
fwait
inc
add
in
sbb
lcall
mov
xchg
cmc
xor
pushf
dec
push
mov
loope
cwtl
mov
outsb
in
nop
popf
adc
push
loopne
in
aas
adc
cmpsl
sub
mov
sti
xor
xor
cmp
pop
and
gs
cmp
andb
adc
into
xor
lods
aaa
pop
adc
insb
fidivrl
test
fisubrs
mov
xorl
cli
ja
jl
jle
mov
out
sahf
lret
jp
xchg
lahf
adc
pop
mov
and
cmp
daa
cmpb
ror
out
pop
push
or
xor
jne
nop
jnp
lock
pop
test
adc
xchg
mov
push
or
xor
outsb
jmp
loop
imul
add
cmp
inc
xchg
mov
fcomps
test
std
or
jbe
divb
fcoms
jge
mov
sbb
fcomps
sbb
jg
pusha
mov
sbb
xlat
xchg
mov
cli
test
into
jg
xchg
test
icebp
cld
mov
inc
mov
out
xor
lds
or
pop
adc
in
add
mov
sbb
arpl
jbe
fimuls
ljmp
test
mov
inc
mov
xor
push
inc
xchg
mov
inc
adc
mov
adc
pop
cmc
sbb
outsb
fadd
rcr
xor
xlat
pop
test
add
inc
pop
adc
add
push
lods
add
and
js
and
data16
add
rorb
push
out
nop
pop
mov
lret
xchg
mov
sti
jbe
cmc
jae
dec
pop
popa
lds
sub
test
inc
cmp
or
lret
sbb
stos
pusha
jb
cmc
xchg
or
dec
shl
jl
sub
add
outsl
lods
jno
mov
mov
xlat
rcr
pusha
add
stos
cmp
mov
and
mov
mov
aam
xlat
jb
bnd
or
jl
cmc
mov
jns
dec
bound
cld
sbb
sbb
add
mov
out
and
pop
call
pop
pushf
cli
inc
test
fcmovnb
stos
xchg
push
cmp
lock
rclb
xchg
lret
dec
or
jmp
jmp
dec
insb
lods
push
jne
outsb
mov
pop
movsl
out
inc
cmpsb
mov
cmpsl
mov
aas
ficoml
push
mov
and
mov
imul
paddq
jge
xor
cmp
inc
ja
outsl
test
xor
or
mov
sub
call
std
test
dec
adc
sbb
movsl
ret
sbbl
dec
mov
and
test
dec
sbb
lods
jne
add
push
lea
pop
test
test
mov
es
sahf
push
sub
je
orb
mov
jecxz
mov
cmp
je
les
movsb
xor
and
xor
ljmp
jl
ljmp
xor
aad
cmp
fwait
mov
es
mov
call
and
and
jg
push
nop
pop
adc
add
or
mov
jo
pop
push
mov
inc
xchg
push
sub
push
les
out
xor
fsubr
repz
jle
mov
pop
addr16
jo
je
mov
int3
jp
inc
mov
inc
mov
mov
jp
jmp
movsb
adc
sub
add
jge
iret
add
cltd
and
dec
push
jno
cmpsl
js
cmp
lea
shrl
push
lret
sbb
inc
cmpsl
jp
or
mov
fwait
push
fcoml
jge
das
mov
lds
lock
mov
xor
loope
lods
mov
bound
pop
xchg
or
jle
pop
xor
ja
jno
test
push
sahf
arpl
cltd
sar
xchg
in
sarl
jp
aam
outsl
test
xor
imul
test
test
and
xor
and
arpl
ss
shrb
in
adc
fwait
sbb
inc
sbb
push
xor
jmp
xor
cmp
cmpsb
jns
mov
imul
imul
test
clc
mov
into
dec
scas
pop
or
mov
dec
cmp
test
and
xorb
js
jmp
fwait
cmp
inc
fidivl
imul
test
jle
cld
mov
add
jns
mov
pop
aad
adc
lcall
loop
xchg
mov
push
cwtl
fldt
jecxz
mov
cmc
cmp
xor
andl
in
fdivs
dec
data16
sub
xchg
insb
test
push
insl
mov
js
or
aaa
jo
cmp
in
and
es
inc
roll
enter
mov
fsubl
mov
and
jg
mov
popf
dec
push
add
in
push
gs
push
and
lret
adc
ja
ss
data16
xchg
jbe
sub
jmp
daa
je
xchg
push
outsb
jno
imull
test
cwtl
cmpsl
jle
dec
jno
jns
out
add
loope
pusha
mov
into
insb
push
enter
xor
rclb
loopne
lods
cmp
xchg
jge
in
js
adc
dec
mov
cmp
cs
pop
iret
sarb
mov
mov
mov
popa
xor
pusha
xchg
data16
pop
pop
jbe
dec
mov
inc
fdivrs
cmp
mov
divl
and
push
out
dec
sub
cmpsb
jb
cmp
mov
outsb
jno
out
data16
push
shrl
add
mov
jnp
mov
shlb
mov
inc
jecxz
into
out
in
stc
xor
xchg
lods
movsl
je
mov
sub
adc
push
pop
adc
das
add
pop
scas
xchg
push
sub
add
jle
fistpll
xor
pop
shlb
mov
test
inc
dec
inc
xchg
push
orl
ja
cmp
out
pop
xor
xor
xchg
sbb
shr
adc
fs
sbb
sbb
jle
mov
stc
mov
adc
mov
int
sbb
pop
inc
fimuls
inc
add
adc
jbe
pop
aas
and
xchg
sahf
push
call
dec
sub
sti
scas
pop
scas
mov
out
mov
mov
xor
test
sub
scas
test
cmp
fcompl
mov
lock
inc
mov
push
leave
repz
dec
lret
rcrl
test
fsubrs
rol
pop
sbb
testl
inc
dec
rolb
cwtl
sbb
mov
xor
pop
in
mov
in
movsl
lret
addr16
inc
out
cmp
notb
add
mov
mov
fdivrl
shrl
cld
fwait
inc
test
cld
push
sub
jp
fcomps
cmc
sub
outsb
aas
push
lods
adcb
push
sbb
mov
int
divl
dec
in
movsl
cmc
arpl
mov
ror
mov
and
sub
gs
mov
lods
add
js
bound
call
shrl
fldt
pop
mov
sti
sub
mov
add
jne
dec
in
xchg
outsb
push
bswap
dec
aaa
popa
cli
mov
mov
push
lret
es
pushf
mov
sbb
dec
dec
movsb
nop
jg
fwait
adc
gs
cwtl
inc
cmc
push
mov
cmp
outsb
rolb
adc
sbb
push
jns
jns
mov
popf
sti
fwait
inc
mov
jp
dec
push
lods
sub
jno
movsb
mov
movsb
jns
pop
stos
call
jg
sub
stc
imul
cmp
arpl
mov
in
lahf
adc
scas
fmull
loop
lods
in
lret
fnstenv
inc
insl
aam
add
lcall
adc
jg
sbb
mov
pop
and
sbb
mov
and
test
xor
orl
cs
xchg
mov
dec
in
sti
or
push
xor
jns
ret
mov
les
mov
or
mov
scas
test
mull
cmc
repz
mov
push
cmp
mov
enter
shll
mov
or
mov
jmp
movsb
pop
imul
rcrl
push
in
xchg
sbb
je
int
lret
pop
test
out
mov
mov
adc
idivl
sti
inc
and
out
cmp
insb
xor
sbb
call
jo
ljmp
sub
ror
aam
fcomip
fs
push
xchg
out
cli
jp
xchg
ret
sbb
loopne
cwtl
cs
push
mov
cmpsb
adc
mov
ljmp
or
frstor
mov
adc
push
cli
sarb
std
subb
filds
pop
inc
add
xchg
xor
mov
lods
add
jns
inc
lret
pop
xchg
enter
cmp
mov
push
adc
test
adc
inc
sbb
push
dec
and
fsts
notl
pop
pop
xor
sbb
lcall
pushf
adc
push
add
cli
lds
add
mov
test
neg
mov
ret
lea
and
iret
adc
gs
or
jge
or
mov
in
fs
mov
pop
daa
stc
pop
pop
pop
shr
inc
fisubrl
push
lock
sbbl
outsl
mov
dec
jb
jl
lods
in
mov
cmc
adc
add
imul
gs
sbb
add
cmp
push
add
mov
cld
sub
push
gs
cmpsl
cli
mov
push
mov
jg
and
add
jge
popf
mov
mov
cmc
xchg
xchg
fadds
fldcw
mov
and
es
fisttps
xor
test
test
imulb
adc
mov
pop
cli
std
add
fwait
cmc
sbb
pop
cmp
push
pop
sub
addr16
lret
dec
clc
adc
imul
add
mov
push
or
les
lret
loopne
xor
repnz
mov
ds
rol
dec
lods
rclb
jae
inc
mov
mov
cmpsl
mov
or
test
mov
dec
ret
iret
xor
adc
fisubs
fistl
or
jmp
std
iret
adc
xchg
mov
add
jecxz
push
test
repz
clc
pop
adc
lret
repnz
cltd
outsl
hlt
mov
jno
lock
out
or
add
lret
pop
lea
loopne
jge
sub
cwtl
mov
add
cmp
and
cmp
mov
ret
inc
push
cmp
int
inc
add
mov
insl
movsl
and
fwait
sub
inc
dec
mov
rolb
and
cmc
aad
xor
stos
sbb
mov
fwait
in
scas
loop
jle
roll
push
cld
xor
fsubl
pop
testl
adc
movsb
aam
and
mov
fucom
dec
ds
test
into
add
cld
sub
fs
jmp
cli
aas
gs
repnz
rcrb
shl
arpl
xor
inc
xchg
pop
mov
cld
mov
pop
inc
mov
stos
pop
adc
out
pop
shl
mov
jecxz
fdivs
loopne
insl
cmp
pop
mov
ss
inc
in
xchg
addr16
or
adc
ds
mov
pop
pop
enter
adc
inc
and
cmp
jmp
dec
adc
xor
xchg
aaa
xchg
repnz
lea
sarb
inc
imull
push
inc
je
std
imul
xchg
sub
roll
and
icebp
rcrl
enter
mov
loop
sbb
stos
addr16
clc
push
stos
pop
xchg
dec
mov
das
ss
or
test
leave
notl
ret
shrb
movsb
and
cmp
inc
adc
loopne
fistpll
xlat
jle
mov
inc
push
xor
stc
imul
sbb
dec
inc
mov
jecxz
popa
std
push
mov
testl
inc
jle
push
out
loope
push
push
dec
mov
fsubs
sbb
xchg
aaa
push
icebp
mov
and
xlat
lret
push
and
cmp
in
das
fldl
pop
insl
or
je
adc
xor
and
cmp
scas
movsb
mov
ficomps
daa
test
scas
adcb
sub
leave
adc
insl
or
mov
dec
mov
add
stos
into
jl,pt
aad
mov
sub
sbb
mov
xchg
adc
cmp
test
add
sub
cli
movsl
push
dec
mov
pusha
xor
jle
in
rcrl
cmp
enter
ds
scas
leave
mov
xchg
movsl
outsb
pop
add
ror
popf
iret
adc
lcall
xchg
js
fbld
adc
dec
inc
or
call
adc
andl
fwait
push
shl
push
push
cmp
rcrl
add
pop
arpl
jns
push
push
xor
or
dec
cmpsl
mov
sbb
aas
add
lahf
in
das
xchg
or
xchg
mov
and
jns
lock
jecxz
ds
add
or
and
pop
pop
nop
pushf
mov
popf
cmc
push
mul
mov
xor
pop
mov
and
pop
negb
dec
std
xor
push
lods
push
push
sarl
mov
jo
mov
subb
cmp
or
sbb
mov
movsb
sbb
shl
or
aaa
xor
xchg
jg
testb
pop
xor
pop
dec
xchg
push
mov
mov
sub
adc
dec
cmp
aad
stc
clc
ret
sbbb
mov
pushf
mov
jle
mov
push
cmpsl
leave
inc
mov
dec
shlb
push
push
leave
les
xor
add
pop
pop
mov
cmc
das
filds
movsl
aad
pop
rorb
jnp
out
inc
fistpll
outsb
insb
xchg
sbb
adc
aaa
movsb
or
xor
pop
dec
mov
add
stc
sahf
sbb
fs
test
mov
dec
adc
jmp
push
inc
mov
loop
shl
or
xchg
iret
mov
pop
cli
popa
cmp
aaa
push
ss
pop
xchg
lahf
pushf
mov
pop
adc
gs
cli
nop
push
mov
fnstcw
xor
jno
jnp
xchg
add
aam
enter
arpl
push
arpl
or
popa
lret
out
pop
mov
mov
insl
mov
lds
insb
imul
dec
fcmovbe
ljmp
adc
dec
xor
push
jbe
dec
out
sbb
aam
jl
icebp
repz
shlb
pop
insb
hlt
mov
aam
jne
scas
sub
push
sti
xchg
pusha
xor
arpl
fucomi
enter
movsl
mov
xor
push
adc
loopne
lods
jnp
daa
inc
adc
fdivl
repnz
jge
clc
lods
sub
pop
lods
ret
push
sub
stos
adc
lahf
sti
xor
xor
xor
xchg
out
or
lret
jle
fmul
and
imul
push
test
cmp
push
rorb
push
and
les
stos
cmp
pop
shld
in
pop
xchg
mov
ss
cld
lods
xor
shlb
lahf
out
jecxz
push
xlat
xchg
xor
roll
dec
bound
arpl
frstor
cltd
scas
pop
rolb
push
aas
inc
dec
fs
repz
fdivr
aaa
les
shrl
outsb
mov
or
or
jo
push
xchg
rorl
xchg
out
test
lods
sub
test
stos
push
fistpl
stos
daa
cli
cmpsl
out
mov
hlt
popa
scas
add
int
mov
cmp
scas
imul
inc
mov
notl
sbb
icebp
repnz
cmp
inc
fcomi
ja
popf
mov
fistl
fisubrl
lods
shll
add
pop
cmc
testb
in
aam
xor
cld
mov
xor
or
sbb
pop
push
sub
gs
xchg
push
push
adc
mov
testl
pop
lret
lret
cmp
jl
jp
lds
mov
or
inc
ds
mov
insb
cmp
push
cmp
sub
fwait
and
icebp
or
cwtd
mov
enter
mov
xchg
mov
lea
adc
hlt
ljmp
ror
cmpsb
xor
xor
jb
leave
xor
and
lea
leave
inc
aas
pop
push
cmp
test
jg
pushl
repnz
xor
pop
jae
mov
and
lcall
out
decl
dec
sub
stos
mov
out
adcb
or
add
jge
iret
pushf
outsl
idivb
out
dec
adc
mov
repnz
inc
xchg
push
int
xor
or
incl
ss
cli
mov
sbb
lcall
je
iret
xor
add
xor
mov
ja,pn
inc
push
lods
arpl
mov
aad
les
jno
and
mov
mov
jmp
ljmp
mov
stc
arpl
xor
jae
aad
in
ficomps
cmp
into
out
cs
js
call
push
shl
nop
cmp
dec
in
jl
popa
xor
fwait
mov
jno
sub
popf
jns
in
rcrb
sub
jmp
in
push
jne
cs
out
xor
pop
fldl
das
cmpsb
cmp
das
fsubrp
mov
jp
xchg
sbb
repnz
imul
xchg
addr16
add
xor
adc
mov
out
xchg
push
sub
fcmovne
leave
inc
and
inc
repz
inc
mov
jmp
sub
out
inc
sbb
mov
and
out
jecxz
cmp
fisttps
cmpsb
sbb
or
mov
pop
dec
out
inc
xlat
rolb
and
addr16
pop
stc
push
out
cmp
and
cltd
pop
sbb
xor
mov
stos
pop
arpl
and
sub
mov
testb
sub
out
add
mov
icebp
push
rol
ds
dec
shll
out
adc
loope
or
aas
dec
je
popa
cmpsl
mov
shr
push
adc
sbb
je
xchg
push
fcompp
cmpsl
xchg
enter
aaa
add
and
and
or
cmpsl
push
or
les
mov
xchg
pop
pop
pop
in
stos
or
lock
xlat
mov
ficoms
sbb
and
lods
out
fcoml
jnp
mov
idiv
movsb
out
fisubl
stos
xor
mov
imul
inc
dec
es
xor
push
outsb
jb
sbb
mov
in
es
int3
add
jne
mov
sbb
push
adc
jge
xchg
xchg
inc
fwait
mov
mov
test
addr16
inc
mov
inc
int
fisubrs
sbb
inc
and
sbb
sub
out
fistps
and
pop
or
cmc
mov
clc
cltd
and
jne
fiadds
clc
push
je,pt
inc
sbb
out
xchg
lret
bound
in
jo
lret
push
jnp
xchg
jbe
sbb
push
das
mov
rolb
leave
add
cmc
dec
mov
dec
and
push
rolb
shlb
push
hlt
dec
adc
mov
and
xchg
test
leave
pop
cmp
jnp
insb
data16
aaa
cmp
add
and
mov
or
popf
push
push
js
scas
fdivl
fwait
shr
mov
arpl
sbb
mov
jl
movsl
mov
stos
xchg
aad
ds
test
mov
stos
out
lret
ficomps
out
or
sub
adc
cld
iret
sub
outsb
lea
cld
cmp
shl
shrb
cmp
leave
pop
sbb
ret
scas
sbb
loopw
addb
jae
pop
pop
mov
addr16
addr16
decb
call
popf
mov
imul
cli
or
aam
xchg
mov
mov
loopne
push
dec
ret
lds
lods
sbb
mov
xor
jbe
pushf
xor
sti
cmp
hlt
cmp
add
je
repz
add
jl
or
loopne
ds
sti
inc
filds
shll
mov
cwtl
xchg
jns
inc
cmp
add
rorl
out
mov
bsr
mov
xchg
mov
push
lea
mov
cld
int3
and
fmuls
sti
mov
out
sarb
cmovb
or
dec
lahf
pusha
jbe
repz
xor
adc
xchg
lea
sbb
xor
mov
sbb
sahf
cmp
inc
dec
mov
pop
pop
mov
mov
cltd
adc
popf
jo
jmp
je
lea
mov
cltd
dec
mov
pop
insl
test
cmc
or
fsubrl
loope
fcomps
mov
stos
lret
jb
rcrl
xlat
push
inc
je
fldz
mov
fdivrl
lahf
xchg
popf
push
push
lahf
cmpsb
out
push
sub
lock
ss
lock
aaa
add
divl
pop
ljmp
jae
mulb
shl
bound
arpl
cmpsl
movsb
inc
jl
lods
rorl
jmp
mov
sbb
hlt
ffree
mov
idivb
insb
mov
sarb
adc
ljmp
inc
sub
shlb
mov
test
sub
lods
add
and
ret
adc
push
popf
test
xchg
sbb
xchg
xor
cmp
ja
aad
xchg
xchg
jecxz
push
xor
and
cmpl
xor
xchg
pop
sahf
test
xorl
shl
xchg
dec
xlat
pop
and
jle
fildl
add
adc
lock
subb
inc
iret
mov
gs
adc
add
jno
test
sub
push
add
adc
test
rcrb
lret
sbb
jmp
push
xor
pop
mov
inc
incl
mov
sbb
cmp
mov
jg
ret
sahf
cmp
mov
sbb
dec
jl
stos
out
xchg
add
jg
mov
shrb
scas
addr16
fstps
inc
shl
iret
lock
fildll
jne
and
movsl
jo
ljmp
or
stc
and
jecxz
jecxz
out
push
ret
fsubs
popa
pop
fwait
mov
clc
jo
mov
aam
repz
mov
rol
es
aad
hlt
mov
in
jg
repnz
cmc
das
mov
dec
cmp
sarb
mov
movsb
aas
mov
add
xor
cli
andb
sub
or
sti
rcrb
jno
pop
add
pop
icebp
cs
adc
xchg
shrl
jge
mov
inc
lods
inc
push
xor
pop
and
pop
add
pop
ss
mov
jno
dec
cmp
out
add
test
push
push
or
mov
dec
insl
sbb
add
cmp
ja
pop
mov
call
adc
push
xchg
or
mov
bound
lahf
mov
and
stos
aaa
push
mov
faddl
aam
cmp
mov
scas
fcompl
add
xor
inc
cmp
leave
xor
popa
jo
lock
or
xchg
add
pop
cld
pop
jns
test
inc
pop
cltd
mov
ret
pop
jg
shll
inc
int3
mov
leave
shl
push
bound
adc
hlt
inc
mov
push
ror
dec
clc
adc
lret
cmpsb
inc
lcall
mov
pop
or
jne
sub
jecxz
inc
dec
lret
cmp
xlat
decb
push
rorb
push
jo
ds
ss
jmp
sub
push
in
lock
jbe
add
loop
jge
idivl
add
and
add
aam
aaa
nop
dec
mov
inc
movsl
xchg
scas
aad
rclb
out
and
sub
mov
adc
rorl
and
adc
rcll
repnz
aas
push
nop
out
kandw
les
xor
sub
pop
or
push
ljmp
pop
aas
out
movl
shll
ja
insl
and
fisttpll
mov
loope
cmc
or
inc
push
lock
mov
push
sub
pusha
je
cmovno
push
mov
sub
scas
cmpb
jge
fs
fbld
mov
das
aas
dec
push
aaa
andl
scas
loopne
xlat
test
jmp
outsb
sbb
bound
in
aad
mov
push
pop
sub
mov
cli
lcall
jl
out
push
ret
pusha
adc
mov
and
fs
nop
add
sub
jae
sub
loope
inc
lahf
jmp
xor
or
mov
push
outsb
lea
das
lret
fdivrs
or
dec
push
xchg
push
les
dec
lods
pusha
sub
ret
adc
jnp
out
dec
in
mov
enter
fs
lret
xchg
sbb
xor
call
repz
xor
lret
jp
repz
out
add
cltd
fldcw
ret
add
mov
das
xabort
push
sbb
jmp
push
mov
lea
leave
shll
lock
xor
fsubrs
aaa
mov
push
js
add
sub
gs
xchg
in
push
cwtl
cli
add
testl
mov
pop
insl
cli
dec
jmp
inc
mov
stos
push
in
mov
dec
lcall
add
aad
dec
test
xchg
add
mov
ret
loope
sbb
aad
sub
js
pop
je
dec
cmp
iret
jle
insl
mov
lds
repz
and
ss
xor
leave
mov
add
outsl
out
iret
mov
fistpl
aas
fadd
sbb
pop
mov
mov
pusha
or
lds
dec
repnz
dec
in
mov
dec
pop
pop
js
lret
shl
cld
xchg
cld
fildll
arpl
mov
xchg
fcmovb
jnp
nop
icebp
pop
cs
and
outsl
mov
push
ficoml
add
lods
adc
data16
lret
sub
outsl
cmpb
stos
jg
in
inc
mov
lcall
adc
cmc
xchg
cmp
aaa
ljmp
fs
mov
aas
jp
sub
ret
cmpl
mov
add
imul
xor
ds
mov
lock
xor
dec
insb
mov
mov
cmp
gs
mul
add
pmuludq
fdivr
out
aam
shlb
jb
test
xchg
mov
mov
call
jl
std
ljmp
adc
lds
pop
scas
mov
jecxz
push
mov
xor
lea
and
pop
loopne
adc
lds
mov
inc
fbld
sub
ret
jmp
mov
mov
loopne
cli
lock
sbb
mov
jecxz
cli
mov
add
and
jnp
cmp
jl
les
lods
mov
mov
cld
iret
push
orb
jb
inc
push
sub
xchg
jge
add
mov
sar
cltd
cs
adc
inc
pop
lods
fsubs
fwait
test
imul
pop
scas
movsb
sub
mov
xlat
mov
cmp
xchg
push
mov
adc
dec
xor
aam
xor
sub
xor
push
lahf
ret
mov
les
jo
cmp
sbb
xor
jl
pop
xchg
or
outsb
loope
cli
jns
mov
out
in
lds
leave
cmpsl
jno
cltd
scas
inc
incl
aam
js
insl
xchg
push
test
jne
bound
rclb
dec
ret
lds
mov
add
and
jecxz
pusha
lds
xor
jl
out
gs
cwtl
movsb
and
pop
rorl
lock
subl
in
aaa
cmp
inc
aas
ret
or
push
xchg
cmpsl
jecxz
xchg
fs
mov
mov
sbbl
and
stos
xor
fiaddl
pop
push
out
xchg
jl
mov
movsl
jg
imul
nop
dec
inc
clc
xchg
rcrb
xchg
stos
push
add
ds
cltd
lds
cs
mov
lahf
fcompl
and
es
fldenv
mov
test
and
out
mov
mov
in
inc
hlt
add
jnp
rcrl
lret
and
cwtl
test
fucomi
xchg
inc
or
push
xor
lods
xchg
jmp
mov
and
mov
xor
add
movsl
adc
cltd
sub
add
adc
cmp
jge
add
mov
iret
mov
insb
push
stos
das
pop
mov
subb
outsl
mov
and
xchg
inc
ds
dec
sub
movl
or
or
mov
sub
ret
inc
xorb
int3
xchg
lock
and
pop
adc
ss
push
call
lahf
xor
pop
aaa
mov
das
arpl
repz
insl
push
iret
shlb
stos
scas
incl
cmpsb
jns
cld
imul
clc
sbb
and
push
rol
shrl
enter
popa
and
jns
fsubl
loop
pop
push
rol
call
cltd
fstp
addr16
stos
mov
cmc
push
adc
jbe
push
adc
sub
sbbl
inc
loop
jp
js
scas
mov
push
add
xchg
sti
jnp
push
test
mov
and
xor
mov
add
jb
cwtl
call
add
mov
push
mov
imul
adc
fimuls
aas
icebp
bound
out
mov
xchg
jge
push
scas
mov
cltd
sbb
xor
ds
frstor
cmp
sub
test
aam
enter
jbe
mov
lret
inc
lods
sub
xchg
xor
aaa
inc
inc
cmc
outsb
xchg
add
stos
sbb
call
mov
cmc
movsl
push
stos
mov
and
push
mov
loope
mov
lds
jno
and
add
leave
push
mov
and
dec
testl
cmc
push
mov
sbb
clc
jl
mov
loopne
mov
mov
rcrl
fs
and
mov
jecxz
dec
sbb
jp
cwtl
outsb
add
stos
jg
or
sbb
sbbb
pop
sub
dec
call
outsb
mov
xchg
aaa
dec
in
add
or
push
sub
xchg
sub
or
div
push
sbb
ja
bswap
mov
xchg
pop
btc
sbb
adc
adc
add
mov
ljmp
sti
insb
jl
das
rorb
xor
push
cmpsl
jnp
inc
stos
jmp
aad
test
push
pop
loop
sub
jge
pop
pop
jge
jl
adc
cmpsb
outsb
lret
xor
ja
and
sbb
jge
popa
enter
mov
cli
iret
lods
sbb
cwtl
loopne
sub
jmp
ret
and
out
popf
lods
mov
push
mov
in
aaa
push
pop
adc
sub
xchg
pop
lods
jno
and
xor
mov
jb
or
push
test
sbb
aas
add
pop
lods
in
adc
dec
lods
adc
mov
loope
pushf
pop
sahf
cwtl
inc
scas
mov
int
cmc
data16
dec
mov
add
in
mov
or
pop
push
or
fwait
pop
push
rcll
not
pop
gs
mov
pusha
jo
insb
test
stos
xchg
mov
or
cmpsl
mov
mov
add
fmulp
cmc
iret
loop
in
push
mov
add
sub
aam
sbb
icebp
add
rcrl
adc
out
decb
sar
push
ss
shrb
test
fstpl
pushf
jne
lahf
dec
daa
in
into
mov
cmp
jbe
xchg
sbb
inc
push
jo
mov
loop
shl
or
fdivs
xchg
jp,pn
push
jge
mov
or
adc
aas
jg
cli
mov
sar
int3
cmc
cmp
adcb
jp
cs
scas
push
xor
and
mov
xorl
xlat
or
addl
setno
dec
push
test
insl
cmp
into
mov
das
imul
cld
xchg
cld
out
mov
adc
sbb
in
aas
pop
pop
fdivl
sbb
addl
ficompl
push
lahf
mov
lret
add
cmp
add
xchg
pop
push
xchg
jno
daa
pop
nop
dec
leave
loope
sub
lret
sub
pop
xchg
int3
ret
in
ljmp
jp
and
rcrb
lret
clc
cmpsb
cwtl
xchg
shr
jg
mov
aad
nop
cmp
mov
movsb
mov
sbb
data16
inc
mov
and
fdivrl
xor
lahf
xchg
mov
pop
bnd
push
inc
lock
push
fsubs
mov
pop
jg
orb
sbb
mov
mov
inc
jne
clc
sub
mov
xor
sub
fs
ss
frstor
push
lcall
les
loop
push
fsub
out
dec
and
popa
sub
and
pop
stc
cwtl
mov
addr16
movsb
sbb
sub
jl
rol
mov
xchg
insl
fimull
iret
mov
test
adc
xchg
mov
repnz
test
jg
je
fwait
push
adc
sub
adc
cltd
mov
mov
mov
in
push
mov
call
mov
cmpsb
pop
dec
rclb
inc
pop
addl
push
mov
outsl
sahf
fstl
sbb
ret
sbb
xchg
sbb
xchg
mov
sti
arpl
lret
nop
lock
or
add
cld
dec
jbe
jb
and
push
inc
iret
xchg
scas
xlat
bound
loop
jmpw
xchg
dec
cmpl
inc
cmp
je
outsb
insb
mov
xlat
clc
cmp
roll
cmpsb
xor
add
cmp
pop
lea
out
and
xchg
popa
or
xchg
dec
mov
bound
cmc
cmp
xchg
cmp
and
nop
dec
mov
movsb
ret
mov
sbb
stc
aam
jne
inc
fnsave
cmp
cwtl
imul
xchg
lahf
test
mov
loope
dec
das
jmp
sbb
fwait
mov
jl
sbb
repnz
stc
or
or
mov
jge
out
dec
ds
in
gs
and
xor
mov
fsubrl
or
shl
mov
pop
cvtpi2ps
ja
in
inc
cmovne
popf
addl
sbb
xchg
dec
movsb
mov
inc
sbb
arpl
push
fisubs
xchg
cli
fwait
aaa
jns
addr16
dec
das
dec
js
rolb
loop
mov
movsl
das
sub
jnp
insl
xor
pop
int
dec
pop
push
and
call
inc
aas
ds
out
imul
int
push
fisubrl
in
and
ret
cmpsl
sub
xchg
mov
in
stc
stc
lock
mov
mov
sarb
imul
dec
pop
mov
xchg
fldl
jnp
inc
mov
pop
in
pop
std
inc
or
adc
and
dec
test
leave
daa
mov
pop
movsb
push
jl
dec
xor
test
mov
xchg
adc
stc
sbb
mov
inc
push
test
push
and
cltd
xchg
jmp
push
lret
ss
shr
lret
mov
sbb
push
cmp
push
push
push
cld
lds
repnz
arpl
mov
and
inc
pop
sub
stos
les
stos
je
pop
pushf
cwtl
mov
sti
das
out
aaa
loopne
adc
add
leave
outsb
inc
xchg
neg
pop
out
cltd
sbb
test
mov
dec
adc
lahf
notb
dec
pusha
cmc
imul
cmp
inc
mov
popf
imul
fisttpl
xchg
test
mov
push
je
scas
test
add
jbe
jge
pop
xlat
orb
lret
add
dec
ret
mov
sbb
ss
mov
mov
mov
push
mov
inc
dec
arpl
or
fcoms
je
imul
into
cmpsb
pusha
sub
loop
sbb
mov
push
loopne
cmp
add
adc
iret
pop
movsb
popa
and
pushf
ljmp
push
stos
imull
jmp
bound
cmpsb
xchg
mov
ud0
sub
loopne
ret
sub
mov
push
xor
in
mov
je
jmp
out
mov
adc
loop
imul
jecxz
cmpl
test
clc
adc
ljmp
punpckhdq
jo
leave
xchg
out
push
aaa
in
loope
xchg
pop
iret
jo
sbb
fists
xor
pop
xchg
lea
or
insb
xlat
jg
xchg
mov
lds
fcmovne
imul
sbb
in
cmpsb
filds
shll
scas
lahf
or
add
mov
inc
or
mov
jmp
stos
aaa
jle,pn
es
xchg
imulb
mov
jae
sub
adc
sbb
cwtl
cmp
cmp
mov
and
out
jg
dec
mov
mov
push
sub
sub
loop
mov
jb
frstor
aad
ljmp
arpl
imul
sahf
ds
xlat
cmp
sub
scas
es
lea
std
js
jno
mov
shll
aam
sarl
cmp
fisubs
std
cmp
jb
mov
pop
inc
push
xchg
mov
pop
cmp
dec
out
mov
jne
shll
push
lods
cmc
movsb
dec
fdivrs
pop
rcl
inc
inc
nop
add
scas
jnp
ljmp
out
cmp
mov
mov
add
les
mov
dec
push
into
mov
pop
mov
dec
das
pop
jnp
ds
jbe
dec
mov
sti
iret
fimuls
push
mov
inc
mov
inc
cmpsb
ja
out
mov
gs
pushf
loop
ret
mov
ljmp
sbb
js
sti
shll
cld
sbb
daa
js
mov
loopne
sbb
jge
in
jnp
loop
les
rcrb
divb
adc
mov
leave
and
jbe
mov
bound
movsb
xor
add
repnz
push
mov
xor
mov
stc
jl
pop
adc
clc
or
jg
pushf
sbb
ret
addr16
shl
mov
in
sarb
jbe
data16
repnz
adc
adc
out
or
or
aas
clc
dec
std
in
and
out
jnp
pop
sarb
mov
out
sbb
and
fildl
mov
mov
mov
jge
movsb
add
sub
and
pop
movsl
add
out
jns
jmp
lods
push
adc
idivl
xchg
pop
loopne
enter
xchg
stc
rclb
shl
pop
adc
aaa
pop
xchg
shlb
cmc
lahf
andb
mov
pop
xor
pop
mov
and
jno
std
or
mov
leave
daa
sarb
loop
mov
loope
repnz
pop
mov
out
cmc
jns
popf
cmp
mov
loope
aam
bnd
push
sbb
out
les
aas
cmp
jecxz
push
or
aam
out
lret
cmp
rcl
movsl
out
stos
mov
pushl
inc
ret
push
mov
rcpps
cmc
or
xchg
daa
inc
fnstsw
xchg
fldl
fwait
shll
and
lahf
sbb
loopne
pop
cmp
divl
adc
jl
pop
jl
xor
daa
cld
mov
scas
cmpsl
xchg
pop
sbb
add
mov
in
pop
lret
lcall
pop
mov
loop
mov
mov
ljmp
mov
sbb
or
jns
xchg
test
adc
sub
mov
mov
sbb
mov
inc
enter
mov
sbb
idivb
movb
xor
scas
jbe
sbbl
and
inc
sbb
jecxz
cld
push
push
push
dec
ljmp
xchg
int
orb
push
or
movsb
push
movsl
push
or
cli
lahf
pop
mov
jecxz
es
jno
pop
xchg
clc
pop
daa
cmpsl
fcomps
inc
mov
mov
popf
xlat
push
jle
sub
out
sbb
xorb
or
pop
pop
dec
dec
sbb
xchg
aam
mov
ds
push
push
in
sbb
jl
ficoml
push
or
ljmp
xor
push
test
daa
mov
dec
pop
lret
ret
dec
lea
fistpll
les
das
adc
imul
in
stc
xor
push
mov
clc
xor
inc
adcl
movsb
mov
cmp
loope
subl
pop
inc
sarl
test
push
sub
sbb
ret
fdivrl
add
rclb
mov
jecxz
mov
stos
es
sub
addr16
xchg
inc
cltd
clc
out
rcrb
aas
mov
das
xor
sbb
add
test
dec
outsb
fnstenv
add
and
adc
mov
cmp
adc
enter
sub
push
rcr
mov
push
push
xor
jl
cmp
mov
in
cmc
pop
xlat
cmp
push
scas
push
popl
insb
mov
add
cld
dec
insl
push
dec
imul
outsb
sub
lret
cmc
aas
or
push
out
sbb
cli
dec
imul
in
cmp
and
pushf
jnp
sarl
mov
cmc
add
xor
sbb
sbb
cmp
mov
or
adc
xchg
xor
cmpb
fidivs
mov
mov
add
icebp
inc
in
psllw
sub
sbb
sub
stos
in
mov
popf
cmpsl
scas
or
out
out
imul
cmpsl
pusha
dec
int3
jbe
lea
hlt
cmp
les
xchg
xchg
lcall
push
arpl
mov
fstps
cmp
mov
imul
dec
mov
jl
scas
int
mov
xor
mov
add
fwait
jge
std
stos
fldenv
push
fldenv
lahf
or
icebp
data16
pop
adc
mov
adcl
hlt
xor
shlb
outsl
aam
mov
jb,pn
cli
dec
test
out
aaa
xchg
push
fnsave
sub
nop
mov
xor
lret
aas
mov
add
sbb
push
rcll
and
sbb
jbe
xchg
lea
int
push
push
pop
push
cli
mov
mov
push
sbb
into
xor
adc
pop
xchg
enter
sbb
loope
rolb
movsb
test
cmpsl
ret
lret
push
adc
xor
push
mov
dec
adc
data16
fldcw
repnz
ret
imul
jae
popa
roll
sahf
inc
les
nop
push
cld
sub
pop
fcomp
jo
dec
sbb
mov
xchg
or
cmc
lods
jge
shr
push
push
push
sbb
xchg
dec
xor
mov
push
jae
add
in
mov
loopne
cmp
dec
in
adc
mov
jo
bound
orb
aaa
xor
fmull
imul
dec
cmc
mov
sub
imul
das
out
lahf
imul
dec
mov
mov
movl
jae
or
cmc
cmp
ljmp
test
es
push
jnp
aas
mov
scas
adc
movsl
mov
sub
jmp
fildll
adc
data16
fildl
es
cmp
cmp
cmp
inc
xchg
rorb
ds
jge
insl
or
aas
leave
cmp
mov
push
add
cmpsb
push
adc
fs
xchg
es
jl
inc
sbb
jecxz
js
imulb
repnz
mov
adc
xor
sti
out
sti
inc
loope
push
addb
inc
mov
les
pop
dec
and
or
push
xor
out
in
xchg
divl
dec
jp
daa
iret
dec
je
push
add
orl
aam
stos
xchg
fsubrp
lret
rcr
out
in
lret
stos
iret
and
inc
pop
imul
out
ret
push
sub
jge
xchg
mov
push
mov
and
lea
rolb
pop
and
push
or
or
icebp
jbe
add
add
test
fmuls
test
lret
aam
insb
jge
pop
xchg
ret
jnp
mov
out
and
cmp
adc
push
das
push
pop
scas
lods
test
iret
xchg
cmpsl
jle
jnp
cmp
mov
aas
enter
out
push
jne
xchg
lret
or
repz
daa
add
cmpsl
test
insl
lods
inc
sbb
bound
or
cli
shrl
sbb
cmpsb
out
sub
lret
sqrtps
xor
lcall
ret
or
addl
dec
add
daa
xchg
adc
mov
int
aaa
pop
out
dec
add
mov
pop
idivl
mov
roll
cmp
dec
push
mov
or
jnp
jmp
aas
loope
add
sub
push
push
cmp
cs
in
pusha
mov
outsl
add
inc
or
repz
in
mull
push
pop
xchg
repz
lock
pop
xchg
cmpsl
les
lock
jecxz
mov
je
out
pop
rorl
ret
fisttpl
ljmp
push
or
cmp
inc
sub
sub
les
inc
into
xor
out
and
xor
jae
sti
add
cmpsb
sahf
mov
mov
test
inc
add
out
int3
push
mov
ret
aaa
push
decl
mov
or
enter
cmc
sub
push
lods
call
and
ret
aaa
xor
sub
repz
mov
sbb
outsb
aaa
mov
lock
mov
loopne
mov
jg
loop
repz
mov
and
jnp
xor
faddp
mov
dec
lods
sbb
fstps
scas
mov
fstps
dec
push
les
mov
repz
jnp
add
test
cs
in
xchg
leave
test
lcall
dec
popa
pop
movsl
sti
inc
clc
test
xchg
jno
mov
jle
out
fidivs
mov
pop
sar
xchg
push
xchg
pop
rcl
push
inc
add
cmp
fsubl
dec
test
cwtl
rolb
repnz
adc
dec
mov
cmc
bound
stos
repnz
and
inc
rcll
xchg
shrl
jmp
jb
dec
dec
fnstsw
add
out
test
or
jge
pop
adc
aaa
loope
decl
test
push
jp
jge
sbb
pop
and
in
push
jp
dec
cmc
adc
add
mov
aas
and
pop
cmc
jmp
repnz
xchg
bound
add
sub
mov
subb
push
ja
jb
jmp
pop
jae
lahf
in
andl
in
call
xorl
adc
inc
jecxz
mov
mov
rcrl
and
cmp
rorb
jmp
or
push
sti
lds
push
lea
dec
jbe
dec
mov
xor
lea
pusha
sbb
icebp
mov
scas
mov
cmp
inc
xchg
cmp
ja
sti
dec
pop
ljmp
shrl
addb
outsb
xor
mov
pop
adc
rclb
add
adc
cmpsl
sti
loope
int
shlb
push
fwait
xor
or
stc
faddl
lcall
sub
xlat
xchg
push
negb
push
xchg
cmp
iret
pusha
dec
js
out
sbb
aad
cmp
and
jnp
pop
cs
mov
mov
negb
lods
into
add
std
sbb
pop
lret
push
popa
lahf
or
subb
orl
cmp
js
in
push
lahf
ficoms
add
or
push
cli
sbb
mov
lcall
nop
mov
cwtl
push
jae
mov
movsb
inc
adc
mov
repnz
mov
xchg
pop
fs
aaa
jno
cld
imulb
fstpl
mov
xor
pushf
imul
adc
loope
or
inc
jb
daa
es
cmpsl
fdivrs
stc
repz
jecxz
jecxz
fcom
scas
sbb
jle
mov
popa
adcb
jl
pop
aam
subl
cld
cmpsb
xlat
dec
pop
push
and
imulb
push
dec
cmovle
andl
xchg
bound
xor
fptan
or
outsl
jns
jb
subb
decb
test
dec
sarl
fnsave
int3
int
int
sub
in
mov
addl
dec
in
out
loope
lret
pop
in
pop
jl
and
fnstsw
idivl
or
loopne
ss
dec
push
mov
fs
sub
sbb
and
push
pop
cmpsl
mov
inc
loop
int
xchg
push
mov
inc
dec
push
xor
adc
xchg
or
jns
das
and
xchg
ja
and
stos
add
fisttpll
popa
arpl
jbe
shll
inc
mov
jbe
fs
push
add
pop
xchg
mov
into
popf
out
xor
push
cmp
loope
sbb
data16
cmpsb
int
inc
pop
ret
inc
or
cmp
shrb
sbb
mov
mov
ljmp
dec
movsb
mov
lods
push
ja
sbb
lahf
dec
orb
pushf
lods
fldl
inc
icebp
out
push
push
hlt
mull
int3
sub
mov
inc
xchg
push
lahf
pop
enter
add
fiadds
jl
xor
add
ljmp
adc
jmp
add
iret
outsl
jl
sarl
pop
lods
add
out
add
pop
fistpl
mov
and
cmp
add
inc
pop
arpl
insl
clc
insl
push
adc
mov
add
movsb
fstps
push
cwtl
add
scas
xchg
xchg
pop
shlb
out
into
xor
lea
sbb
mov
pop
sarl
pop
xor
in
mov
insb
add
ljmp
jmp
xor
pop
push
out
xchg
xorl
adc
fs
mov
stos
sub
lret
add
pop
enter
imulb
push
xchg
fcmovnu
ljmp
movsl
pop
repnz
js
mov
ret
test
and
sbb
or
f2xm1
popf
jp
sub
idiv
or
rcl
aad
jle
flds
mov
pop
dec
movsl
cmp
jbe
fistl
cmpl
std
push
xchg
imul
sub
add
and
xchg
mov
fsubs
lret
data16
lret
repz
in
in
iret
mov
lret
dec
movb
dec
sbb
or
mov
mov
cmp
mov
cwtl
iret
icebp
cmpb
jge
out
jne
test
aam
into
and
mov
xor
test
mov
or
out
add
adcl
arpl
pmullw
outsb
flds
cmpsb
les
jns
push
aad
in
push
out
pop
roll
shll
sbb
lcall
filds
icebp
sbb
int3
xor
clc
imul
jbe
je
fcomps
push
sub
lods
popf
inc
pop
call
and
fidivs
mov
nop
pop
mov
pop
pop
call
xorl
dec
jbe
stc
lds
inc
adc
aaa
sbb
add
xchg
sub
cmp
ja
cmpb
int3
inc
push
sbb
mov
cmp
pop
lods
mov
lods
int
sbb
les
sub
mov
pop
push
sarl
pop
js
adc
int3
mov
xor
into
emms
lea
cmp
andl
sbb
and
xchg
adc
int
jb
sub
dec
cmp
jmp
pop
push
fdivr
out
orl
outsb
push
xor
xchg
pop
call
jne
xchg
mull
mov
mov
pop
cld
imul
es
mov
inc
dec
mov
or
lret
jne
xchg
and
push
loopne
movsb
mov
loop
and
lds
jg
or
lret
notl
scas
int3
mov
stos
jecxz
mov
inc
inc
clc
sbb
inc
leave
mov
cmp
movsb
push
fiaddl
ficompl
rcrl
mov
push
sbb
xchg
stc
push
cmp
pop
mov
outsl
call
jl
iret
aam
xchg
jp
pushf
hlt
loope
nop
pop
fstpl
push
test
ds
sub
sub
in
mov
mov
js
xchg
in
mov
scas
push
add
jmp
mov
and
xchg
sahf
fisubl
add
mov
adc
inc
sub
inc
bound
sbb
sbb
lods
xor
and
or
popa
cwtl
stc
popa
push
push
push
jge
push
dec
aaa
pop
out
addr16
sahf
mov
repz
ja
add
sbb
and
aas
mov
dec
add
ret
lock
mov
cld
inc
mov
lods
lret
fucom
lcall
lods
mov
in
test
mov
inc
push
jecxz
les
bound
and
or
and
out
mov
xchg
xor
dec
les
loop
ja
mov
xchg
fstpl
stos
add
sbb
xchg
push
icebp
mov
aam
imul
fmull
insl
subl
outsl
mov
lock
inc
and
mov
cmp
inc
sbb
dec
jbe
cld
or
repnz
pushf
mov
cmp
cltd
imul
cmp
cli
test
fstpl
pop
sub
scas
bound
cmp
jns
inc
or
or
in
insl
outsb
dec
jl
xchg
cmp
pusha
or
pop
adc
out
test
jns
xchg
je
cmc
mov
mov
dec
jb
push
mov
jl
mov
pop
xor
add
shll
or
sub
rcrb
add
add
test
orl
sahf
lea
out
pop
mov
imul
and
loope
ds
outsb
cmpsb
push
fiaddl
out
mov
je
out
push
addl
lds
mov
pop
je
sarb
cli
mov
pop
hlt
mov
fs
ljmp
mov
mov
dec
bnd
push
clc
nop
mov
int3
inc
pop
adc
cmc
negl
cmp
inc
push
sub
adc
repnz
test
lods
lahf
sub
adc
insb
loopne
push
mov
loopne
or
xchg
pop
xchg
pop
fistps
fs
xchg
add
mov
sarl
adc
fadds
jae
aad
cwtl
leave
adc
mov
dec
pop
adc
pop
push
push
out
rorl
mov
into
stos
outsl
dec
xchg
orb
sbb
test
ljmp
fdivrl
push
ret
in
pop
int3
pop
push
imul
icebp
jbe
pop
push
adc
push
xchg
jg
cmc
js
cmp
shrl
cmp
and
push
cli
and
pop
shll
cs
or
shrl
stc
aas
loop
mov
jns
call
mov
cwtl
jnp
mov
es
call
sbb
mov
imul
or
fimull
adc
or
out
sbb
mov
add
xor
bound
fildll
dec
rol
sbb
shrb
dec
push
fnstcw
shll
ss
dec
fbstp
cli
adc
dec
ljmp
push
fdivrs
xchg
or
jmp
jns
ficoml
psllw
sarl
filds
scas
adcb
inc
inc
lea
scas
cmpsb
loop
jl
nop
xchg
dec
or
jns
xchg
push
pop
bound
fcoms
mov
jge
push
and
in
ds
pop
xchg
sbb
js
arpl
pop
sub
aas
xchg
mov
add
cmpsl
mov
or
lret
pop
pop
push
xor
movb
int
loope
pop
inc
inc
not
pop
nop
jbe
mov
push
mov
mov
insl
aas
sbbb
lods
scas
adc
and
sub
cmpsb
rolb
insl
and
add
dec
mov
data16
cmp
jg
pop
dec
mov
jo
mov
imul
loope
mov
daa
cmp
and
aam
mov
int
sub
sar
push
dec
popa
lock
enter
hlt
or
xor
sub
popf
leave
pop
xor
cmpsb
mov
push
pop
or
mov
jecxz
sbbl
xor
movsb
adc
xchg
sti
push
es
lds
shrb
pop
inc
mov
inc
fs
icebp
test
and
jbe
imul
in
mov
out
scas
out
mov
cmpsb
cmp
push
daa
aaa
sub
mov
push
adc
scas
cwtl
mov
mov
dec
push
cmc
fisubl
nop
mov
fwait
jbe
dec
or
add
push
mov
pushf
aam
mov
sbb
repz
out
lret
jo
xchg
data16
add
in
xor
in
and
aad
aas
lret
fwait
xchg
sub
out
pop
loop
push
mov
nop
mov
fsubl
out
mov
or
sti
in
data16
push
xchg
das
and
das
insl
dec
js
stc
sti
jg
je
aam
adc
sub
cmovne
mov
mov
push
adc
mov
out
scas
cmp
out
sarl
idiv
movsb
cltd
jl
sub
dec
jb
add
jge
sbb
push
cmpsb
cmp
pop
clc
inc
mov
cli
mov
sbb
add
insl
jle
adc
roll
mov
jecxz
add
outsb
xor
push
scas
rol
sbb
ret
das
jo
inc
ljmp
xchg
mov
in
test
shll
jbe
jnp
lods
dec
mov
push
add
mov
mov
mov
stos
jbe
adcb
xlat
add
mov
call
push
leave
ja
push
negb
sub
daa
push
outsb
sahf
jo
push
stos
or
fs
or
add
cld
jge
adc
dec
rcr
in
lds
mov
insb
out
xor
adc
test
out
add
stos
xor
daa
or
mov
sbb
lea
cmp
mov
push
int
gs
cmp
push
leave
sub
cmc
arpl
pushf
test
pop
iret
dec
push
les
and
or
jp
jl
dec
adc
mov
adc
mov
insb
push
jecxz
mov
pop
push
push
test
je
cmp
sub
add
jno
adc
mov
aaa
pop
pop
repnz
outsl
pop
mov
das
stos
rcrl
sub
push
mov
dec
sub
sbb
lret
push
addr16
das
xchg
das
cmp
stos
cmp
xchg
filds
jmp
dec
fisubrl
lea
std
dec
mov
movsl
leave
ja
and
push
mov
jbe
push
mov
lods
in
popf
pop
xor
lods
sub
sub
ljmp
dec
lods
cli
les
jnp
jl
mov
adc
xchg
mov
rcrl
push
mov
xor
jmp
mov
movsb
js
push
cwtl
dec
mov
push
sbbl
push
rcl
fs
xor
sub
dec
xchg
pop
pop
sbb
gs
sbb
adc
nop
mov
insb
mov
in
inc
mov
sti
and
jg
pop
test
lret
jbe
push
jo
sar
cmp
inc
sub
xchg
int3
cmpsb
loopne
xor
cld
dec
clc
jnp
or
mov
jl
mov
and
loopne
clc
lds
or
les
mov
pop
xlat
inc
mov
xorb
aad
jbe
jae
xchg
xor
out
cmp
mov
mov
xlat
bound
pop
pushl
jle
repz
jge
fdivrl
mov
test
push
and
rcrl
lret
jb
clc
fimuls
fsubrl
inc
push
negb
scas
or
loope
cli
subb
idivb
adc
fistpll
xchg
xor
cs
cli
call
sbbl
xchg
rcll
ret
sbb
cmp
sbb
cmp
in
rorb
stc
jecxz
mov
daa
ret
mov
shl
cld
aaa
sbb
dec
fdivp
mov
adc
mov
pop
rcl
push
and
shrb
and
dec
daa
dec
cmp
leave
xchg
adc
jp
cmpl
push
push
mov
jb
loopne
int3
mov
aas
popf
idivl
movsb
xchg
and
mov
orl
jns
sti
daa
pavgw
jb
ret
std
mov
or
addl
dec
mov
pushf
and
jno
mov
mov
gs
jns
and
into
js
sbb
sbb
pop
insl
out
jae
xchg
mov
cmc
xlat
aam
cmp
jle
in
mov
repz
insb
sub
fbld
sti
arpl
ja
loope
jb
jb
insb
ret
mov
sbbb
fmul
leave
cmp
popa
pop
and
or
xor
roll
xchg
pusha
jns
pop
jno
inc
pop
lds
push
jmp
adc
pop
jne
imul
xor
cmp
clc
mov
xor
push
sahf
jl
push
cwtl
or
loopne
outsb
andb
dec
mov
xchg
and
and
pop
rcrb
into
enter
adc
or
push
and
filds
xchg
pop
add
mov
sahf
mov
mov
and
mov
inc
pop
sbb
scas
int3
and
push
pop
mov
rolb
and
bound
xorl
rcl
sahf
push
mov
test
or
mov
adc
push
fwait
or
es
push
jle
jmp
test
cmp
sub
push
into
xchg
lods
cmp
arpl
push
out
xor
cli
or
sbb
xchg
mov
pop
lock
or
jmp
nop
sub
mov
out
cld
mov
fwait
mov
loopne
lods
push
add
pop
jbe
and
les
pop
fldcw
sub
sub
jnp
dec
cli
cmc
jnp
add
movsl
push
and
out
cmpsb
mov
sahf
cmp
cwtl
or
imul
lods
add
xor
lods
add
push
fimull
ret
hlt
push
adc
jge
ror
test
and
or
xchg
cmpsb
jecxz
lds
dec
iret
jp
imul
mov
sub
mov
dec
xchg
mov
clc
jo
call
aam
dec
add
or
popa
push
outsb
jmp
jae
hlt
pop
xor
in
cwtl
cmpsl
pop
in
sub
pop
repz
daa
fldt
jae
loop
ret
add
sahf
add
pop
cmp
fnsave
xor
decb
inc
rorb
aam
lahf
ljmp
orl
xchg
jg
ljmp
dec
out
and
and
rcll
loope
inc
negl
cmp
mov
push
cld
dec
adc
push
xor
sahf
push
in
add
sbb
sub
jo
adc
inc
cmp
fldenv
push
xor
stc
mov
or
divl
cmp
inc
hlt
inc
and
mov
jp
andb
mov
inc
or
loopne,pt
orb
jp
mulb
mov
dec
pop
xor
mov
fucomip
sbb
xchg
mov
insb
clc
ja
mov
leave
popa
js
xchg
cmp
jno
lods
mov
das
jmp
mov
popa
repnz
add
sahf
data16
push
repz
push
jmp
xchg
in
notb
cld
cmp
mov
or
mov
int3
mov
nop
and
sub
jmp
inc
fbld
and
int
movsb
sbbl
sbb
push
ret
add
outsb
fwait
dec
movsl
cmpsl
insl
ja
push
xchg
or
ljmp
lret
inc
push
movsl
pusha
jmp
mov
xor
jg
push
jno
nop
int3
inc
pop
jno
cmp
imul
adc
xor
jbe
std
push
aas
leave
mov
add
xchg
jecxz
cld
xrelease
push
leave
mov
ljmp
pop
pop
cmp
sbb
adc
sub
sub
cmp
repz
lret
push
in
in
dec
and
jmp
sbb
sbb
out
cwtl
push
ror
or
gs
repnz
pop
sbb
xchg
ret
out
lret
jbe
xor
in
into
jmp
mov
mov
inc
cli
sub
push
cmp
adc
pop
lahf
sub
arpl
sub
xor
jg
xchg
gs
and
insl
mov
mov
js
pop
ss
push
dec
xchg
push
adc
push
push
andl
es
pop
movsl
xchg
je
push
push
fimuls
xor
push
jo
xchg
fstl
cmp
arpl
mov
sbb
mov
cld
or
paddb
movsl
int
xchg
cmpsb
aaa
dec
stos
push
push
int3
inc
inc
insb
xchg
adcb
and
sbbb
or
scas
ds
inc
mov
imul
or
xchg
das
out
daa
popf
loope
cmp
cmpsl
add
cmpsl
aam
xchg
jo
jge
loop
test
jae
mov
pop
movsb
adc
popa
repnz
lods
fstp
in
cmpsl
in
test
adc
or
daa
xor
mov
xchg
scas
adc
js
iret
aaa
mov
ret
daa
mov
clc
ljmp
pop
mov
jnp
lods
jb
out
lods
cmpsl
xchg
xchg
ja
insl
iret
iret
pop
sub
dec
add
jne
cmp
leave
sub
adc
adc
xor
into
adc
push
ret
and
nop
sub
mov
leave
inc
sub
xchg
and
mov
mov
rcr
jns
js
push
push
jae
push
ds
movl
in
arpl
jne
outsl
in
mov
inc
ja
test
pop
out
or
sarl
pop
mov
in
cmp
ss
aas
test
mov
fwait
mov
shlb
rol
cmp
das
xor
adc
dec
jae
adcb
addb
int3
jno
pusha
inc
fcmovu
cwtl
das
push
out
jo
ret
sbb
aad
fbstp
imul
jge
push
xchg
adc
ret
jae
fdivs
adc
mov
jae
sbb
inc
xor
das
dec
sahf
daa
mov
push
mov
lea
iret
push
mov
push
je
sbb
int3
sub
repz
ljmp
dec
xchg
mov
ja
mov
test
xchg
pop
push
bound
lret
fyl2x
dec
aas
jp
mov
add
mov
pop
loopne
fbld
mov
fldt
xor
mov
mul
sbb
xchg
popf
sub
xchg
pop
sbb
insb
aam
aam
mov
fwait
mov
in
jnp
int3
imul
mov
inc
add
and
xchg
xor
xlat
jne
mov
mov
fistpl
jbe
xchg
mov
test
int
push
lret
mov
and
int3
stc
xor
mov
cwtl
aas
xlat
mov
in
rcll
outsl
mov
xlat
pusha
sub
fmuls
mov
cmpl
inc
cmp
js
mov
sti
pushf
pop
sbb
pusha
lahf
test
pop
push
movsl
sbb
jge
add
fisttpl
insb
bound
dec
sub
popf
jno
mov
pop
fldcw
sbb
sub
stos
or
mov
aas
fcmovnu
icebp
jbe
push
mov
inc
mov
sub
mov
pop
dec
int3
dec
xchg
das
sbb
out
popa
jne
push
cmp
stc
sbb
push
jmp
out
sahf
imul
lea
stos
loop
dec
dec
imul
repz
cld
mov
cmp
out
push
fnstsw
lea
into
jne
and
pop
adc
jecxz
mov
test
sbb
adc
add
sbb
sahf
jnp
mov
leave
fsubs
rcl
iret
aas
repz
jmp
or
sub
aas
es
int
mov
decb
rolb
dec
jno
pxor
call
notl
pop
mov
xchg
scas
jno,pt
in
xchg
sbb
jns
leave
jae
pop
mov
push
incb
popa
jne
mov
pop
jecxz
xchg
mov
fucom
or
out
addb
dec
je
mov
imul
jl
and
dec
xor
in
mov
xor
jns
push
out
push
add
push
pop
or
jg
cs
inc
ficomps
js
inc
pusha
jnp
aam
mov
inc
aaa
ds
dec
sub
pop
jne
mov
out
cs
adc
jns
mov
pop
mulb
out
mov
insb
jno
add
lret
jno
xchg
sbb
xor
stc
test
test
mov
adc
dec
inc
cmc
lahf
in
out
adc
sti
mov
and
mov
add
or
mov
inc
inc
lahf
jmp
mov
jno
push
into
lret
mov
scas
pop
jg
into
scas
lods
ret
repnz
ret
pop
stc
add
stc
inc
add
xchg
cmp
rcrl
jg
mov
dec
lock
mov
vpunpckldq
aas
inc
push
lahf
sbb
arpl
rcr
shl
fcoml
mov
jno
ds
mov
mov
sbb
push
pop
dec
adc
loope
das
sbb
and
aam
push
outsl
lods
sbb
pop
shll
inc
sub
xor
sarl
stc
nop
or
add
push
push
gs
inc
cmp
in
pop
adc
push
mov
xor
stos
int3
rcrl
xchg
out
aad
jmp
adc
sbb
jbe
mov
and
dec
js
insb
pop
insb
mov
add
cmp
push
xchg
fucomp
mov
mov
stc
leave
je
push
ret
mov
movsb
push
dec
in
mov
lahf
lahf
dec
push
jno
jnp
loopne
mov
mov
rcr
cmp
inc
adc
lods
sbb
int3
xlat
pop
push
ljmp
xchg
dec
adc
fdivrs
push
fisttpl
adc
pop
pop
out
pop
pushf
nop
das
in
inc
jmp
bound
jb
xlat
or
stos
lret
repz
mov
and
push
popf
mov
pusha
divb
scas
pop
daa
clc
je
mov
jnp
push
xchg
adc
sub
add
sub
stc
mov
test
mov
or
push
test
inc
icebp
and
adc
and
ljmp
mov
fucom
pop
and
xchg
or
idivl
sub
xchg
outsl
adc
out
xchg
cwtl
and
das
and
pop
or
dec
js
mov
roll
orl
adc
jg
mov
into
jo
out
lea
jno
adc
sbb
imul
iret
add
add
mov
icebp
push
repz
inc
xchg
insl
pop
xlat
lahf
push
aad
pushf
shrb
cmp
jl
mov
ret
aaa
sbb
iret
dec
notb
fisubl
pop
dec
adc
and
sti
insb
sbb
cmpsl
cwtl
outsb
repz
in
mov
aam
mov
dec
push
scas
rcll
xchg
mov
jno
dec
sub
cltd
test
xchg
adc
daa
cmp
pop
inc
and
cmpsl
jb
inc
test
and
xchg
cwtl
cmp
adc
xchg
xor
movsb
adc
cmp
lods
ror
mov
gs
push
jmp
mov
jo
mov
sarb
sahf
sbb
lea
pop
pop
outsb
and
out
insb
inc
dec
pop
mov
faddl
mov
push
mov
sbb
call
call
stc
push
loop
inc
cmp
push
adc
pop
and
xor
pop
xchg
ret
and
lds
adc
jmp
cmpsb
cmp
mov
push
add
mov
cwtl
mul
dec
out
popl
insl
stos
ss
push
insl
ret
push
scas
mov
rcrb
mov
pop
mov
cwtl
flds
mov
fidivl
cmpsl
push
pop
mov
fwait
pop
movsb
scas
lods
xchg
mov
lret
scas
xchg
sub
inc
mov
and
cmpsb
xor
int
out
addr16
repz
mov
lds
movsb
popa
ljmp
call
jmp
clc
xor
cltd
add
cmp
xchg
std
push
sub
mov
ja
dec
push
dec
fiaddl
mov
insb
jno
pop
int3
lea
inc
cmp
mov
aaa
add
lock
cld
xor
arpl
mov
jg
pusha
mov
cwtl
out
stos
movsl
out
std
divb
je
std
xor
xor
mov
mov
outsb
jle
sub
lret
mov
jmp
sub
adc
push
mov
fcompl
fnstsw
fiadds
cmp
or
sbb
pop
pushf
pop
pop
fwait
mov
xor
jmp
push
sub
pushf
hlt
xor
fcmovnu
and
push
sbb
aas
sub
incb
or
adc
push
bound
mov
rcr
add
and
mov
add
das
push
xor
or
xchg
add
mov
arpl
jno
cmpsl
dec
or
cmpsb
adc
xor
fidivs
lods
lock
cmpsl
jp
adc
sbb
in
outsl
mov
and
imul
mov
rcl
xchg
test
mov
call
cmp
and
clc
mov
out
cmp
and
cmc
mov
daa
les
mov
push
popf
filds
pop
lods
fsubl
loope
aad
mov
xor
inc
popa
xchg
pushl
cld
sbb
movsl
sub
stos
pop
jns
daa
pop
loope
add
mov
jnp
mov
in
jmp
out
call
pop
add
pop
jne
and
and
jmp
lds
inc
lret
cld
stos
shlb
out
mov
jl
leave
fcmove
jmp
popf
lcall
xchg
dec
mov
pop
inc
test
inc
in
jge
xor
dec
mov
push
ds
in
stc
sbb
or
out
cmp
clc
rcrl
jp
jns
lret
lea
dec
and
pop
test
sbb
xchg
adc
sbb
pusha
or
pop
sub
xchg
xor
stc
sbb
mov
push
sbb
push
jmp
je
frstor
ljmp
adc
iret
xor
push
fcomp
mov
dec
loopw
jnp
sub
xor
xor
cmp
and
out
sub
mov
or
mov
nop
subl
jmp
jb
outsb
add
rclb
pop
push
bound
dec
cmc
daa
push
adc
xor
jb
and
mov
mov
pop
in
pusha
leave
imul
inc
aad
fsubrl
ret
mov
and
pop
sub
das
adc
mov
jbe
pop
push
aaa
fldt
inc
pop
outsb
adc
mov
icebp
push
and
jno
popa
in
fsub
dec
pop
stos
fwait
xchg
add
jnp
dec
xor
cs
push
rcll
mov
sbb
push
mov
std
or
push
test
or
push
dec
loope
call
adc
cmp
dec
nop
aad
jnp
push
dec
dec
rclb
push
lock
mov
or
xor
add
in
into
and
js
inc
mov
pop
lret
lahf
and
in
xchg
adc
pop
push
ljmp
andb
lds
notb
fisubrs
dec
je
adc
in
mov
jge
imull
pop
push
push
leave
int
jb
jmp
xchg
cld
arpl
inc
in
pop
push
bnd
ja
mov
xchg
pop
push
enter
jmp
jns
mov
in
movsb
dec
sbb
scas
insb
subl
imul
hlt
adc
les
in
lcall
pop
dec
scas
add
sub
dec
cmp
repz
inc
xorl
jle
iret
inc
cli
mov
mov
in
sbb
jecxz
xchg
ficomps
les
cmp
popa
sahf
sbb
pop
add
loop
sub
pushf
psrld
jmp
movsb
mov
jb
lods
sub
data16
imul
ret
xchg
inc
call
mov
insl
insb
inc
cli
aad
fimull
clc
xor
popf
imul
lods
xchg
add
cwtl
stc
fnstsw
pop
jg
ret
andl
fs
mov
or
push
add
roll
sti
sbbl
xchg
mov
xchg
xor
movsl
and
and
cwtl
sbb
mov
add
lods
cld
outsl
mov
mov
push
xor
sti
sbb
std
pop
loopne
js
scas
out
lret
fisubrs
enter
fisubs
mov
mov
adc
sub
cltd
push
sbb
sbb
mov
push
cmp
in
fildl
cmp
imul
es
inc
push
ja
rolb
testb
push
mov
and
lahf
leave
add
mov
adc
or
and
into
and
or
xchg
popa
in
push
sub
daa
mov
ss
nop
add
lahf
pop
nop
mov
push
dec
arpl
pop
shl
pop
loop
jl
sub
mov
bound
enter
inc
mov
sub
or
std
cs
adc
push
shlb
push
pop
pop
rcl
ljmp
add
inc
rcrl
sub
adc
cmpsl
xchg
shll
sarl
int
jne
and
mov
pop
jg
xchg
shl
fsubrs
lcall
mov
mov
xor
scas
incl
jmp
push
jmp
cltd
mov
inc
cmpsl
inc
cmpl
mov
dec
hlt
pop
pop
lods
jge
cli
dec
outsl
sar
outsb
sbb
sub
sar
pop
rorl
xchg
sbb
push
mov
push
jo
pop
imul
cld
add
add
fnstcw
das
nop
lret
lahf
push
mov
add
pop
fs
mov
mov
js
cmp
fisttpl
xchg
arpl
lock
mov
arpl
cwtl
lock
mov
adc
subl
jl
push
mov
sbb
int3
push
mov
mov
pushf
or
cmp
shrb
inc
scas
pop
popa
mov
xor
add
in
inc
fidivs
adc
fldl
fnstenv
out
cmp
psrlq
repnz
iret
imul
push
sbb
mov
push
lds
pop
push
inc
xchg
enter
adc
add
xchg
shl
adc
lahf
or
test
jg
lods
add
xor
push
xor
lods
mov
sbb
pop
dec
xor
mov
mov
inc
hlt
adc
imull
out
in
ret
dec
mov
xor
jno
add
lea
inc
mov
test
movsb
int
jmp
dec
xorl
xor
cld
mov
shlb
xchg
xchg
mov
lock
sarb
dec
addr16
dec
in
imul
push
push
inc
arpl
in
in
jge
push
xchg
dec
push
fists
imul
out
pop
inc
mov
add
inc
rcrl
push
test
cmp
and
lods
outsl
clc
cmp
outsl
pop
fwait
mull
xchg
mov
mov
jb
push
setg
jge
lea
enter
arpl
out
iretw
mov
cli
jl
icebp
js
mov
in
xor
lahf
mov
mov
xchg
mov
jb
dec
mov
xor
call
pop
adc
mov
or
mov
outsb
sbb
mov
dec
dec
jge
dec
pop
mov
jae
mov
xor
jg
filds
fldt
cli
fsts
adc
inc
pop
dec
xor
sub
in
mov
cmp
mov
imul
push
cmpsl
out
push
inc
popf
mov
sbb
shlb
xor
data16
jge
pop
std
insl
mov
mov
dec
dec
add
sub
lcall
push
out
out
sti
mov
push
xchg
sbb
push
data16
je
lock
or
arpl
int
xchg
stos
addl
xchg
pop
sbb
ret
mov
xchg
iret
popf
mov
lea
jns
aaa
test
lret
lahf
sub
rep
mov
ljmp
cltd
cmpl
adc
dec
mov
vmwrite
mov
popf
aad
jne
xor
mul
test
pop
mov
imul
stos
mov
ds
stos
lods
je
aam
adc
pop
mov
fstpl
lock
cmp
imul
jg
pop
jnp
lock
das
jle
mov
xchg
rol
dec
xchg
loope
mov
xchg
loopne
push
into
fsubrp
xor
jo
jno
aaa
adc
clc
lock
mov
jecxz
loope
aaa
jne
mov
xor
rcrl
adc
xlat
test
or
lcall
cmc
inc
sbb
sbb
ss
ja
push
xlat
in
jbe
shll
jnp
jnp
cmp
push
std
pop
fdivrs
mov
rep
jne
out
ret
mov
fwait
mov
es
pop
movsb
mov
mov
or
jnp
movsb
sub
xor
pop
ljmp
pop
shl
dec
sbb
xor
pop
scas
dec
cli
xchg
test
cmp
pop
add
lds
jge
mov
shll
mov
add
popa
aad
sarb
lds
mov
mov
int
jnp
jb
leave
mov
clc
add
outsb
loopne
pop
shrb
cmp
aaa
loop
adc
cmpsb
cmp
or
das
leave
mov
in
mov
push
xor
int3
jmp
outsl
outsb
hlt
lcall
push
and
xor
xchg
out
aaa
jno
call
mov
mov
pushf
scas
cmpsl
xchg
ljmp
sbb
ja
aad
lret
jg
mov
or
pop
repz
popa
jecxz
loopne
cmpsl
xor
push
mov
dec
mov
push
loop
inc
jo
int
scas
fidivrs
and
js
xchg
mov
pop
mov
dec
fisttpl
xor
clc
test
dec
jns
mov
out
or
incb
insl
ja
cwtl
fisttpl
mov
ret
xchg
repz
out
xor
jns
pop
scas
xor
or
cmp
cli
aas
lahf
aaa
out
mov
mov
push
ss
mov
lcall
dec
adc
shrb
cmp
aaa
stos
daa
xchg
push
dec
lcall
mov
cltd
sbb
stos
push
lods
je
cmc
stc
pop
push
cs
pop
inc
out
mov
popf
in
pop
scas
adc
fcomps
jae
pop
jne
and
sarb
out
stos
sbb
mov
mov
ficoms
mov
lret
jnp
outsb
adc
ljmp
xchg
fimuls
cmp
mov
loope
push
lahf
xor
test
push
loop
out
jnp
mov
sub
mov
add
add
add
push
aad
adc
xchg
mov
out
jae
xchg
out
aaa
push
mov
popf
push
sbb
push
pop
das
push
loop
inc
xor
mov
mov
jle
inc
dec
pop
mov
stos
add
insl
jmp
add
dec
mov
ret
pop
dec
pop
push
daa
in
daa
out
jge
inc
mov
jns
jb
cmp
sbb
adc
mov
xchg
lcall
out
fidivrl
negl
mov
add
stos
inc
inc
add
iret
rolw
add
loop
stc
adc
cmpsl
adc
push
push
push
jns
std
push
cwtl
decl
sub
adcl
jmp
mov
ss
mov
push
mov
lea
loop
mov
lcall
rcl
xchg
test
push
dec
sub
adc
and
aaa
cli
xchg
aad
dec
dec
mov
push
xchg
dec
int3
push
cmp
lret
les
out
cli
mov
cwtl
pop
scas
pop
jg
mov
inc
rcrl
lret
or
xchg
mov
or
test
and
insb
mov
scas
int
xchg
mov
fsubl
jo
int3
inc
or
xchg
cwtl
divl
sub
inc
out
add
sub
loopne
mov
fisttpl
xchg
cmc
cmp
add
or
mov
mov
cmp
mov
popf
mov
dec
testb
mov
idivl
outsl
popf
cmp
pop
addr16
clc
sub
ja
scas
enter
dec
mov
aam
and
arpl
sbb
pop
jp
mov
xor
pop
xchg
movzbl
ds
jp
subb
rorl
movsl
fdivl
and
xchg
imul
test
xchg
cmp
cmc
mov
pushf
jb
inc
roll
push
pusha
adc
mov
sbb
pop
dec
cli
xchg
xchg
inc
dec
and
jbe
out
xchg
inc
in
jecxz
daa
gs
rcll
adc
movsl
nop
fcom
leave
addr16
pop
push
nop
test
das
stos
and
mov
ljmp
xor
xchg
adc
pushl
ljmp
in
inc
lret
jmp
push
cltd
repz
and
ficoms
mov
cmp
ja
mov
xchg
rcl
sarb
add
mov
fs
subl
push
jns
xchg
cmp
mov
mov
inc
or
sti
jl
mov
aam
xchg
sti
push
xchg
repz
pop
ja
xor
ss
mov
inc
pop
lock
inc
lock
orl
ja
add
ret
insb
jbe
fdivr
out
ret
es
adc
hlt
cmp
addl
fisubs
cmp
ss
mov
mov
pop
pop
sub
outsl
loop
cmp
xlat
cmc
push
cltd
or
scas
or
and
xlat
das
arpl
adc
or
xorl
call
inc
leave
pop
mov
adc
mov
xor
aad
xchg
jecxz
ret
sub
pop
cmp
call
imul
xchg
dec
xchg
ret
adc
pop
pop
mov
jno
sub
mov
cmpb
adc
xor
xor
int3
ficoms
sahf
xchg
jo
fwait
mov
push
push
dec
movsl
push
cmpsb
xor
dec
inc
mov
mov
in
adc
or
sub
add
push
or
icebp
outsl
aas
jecxz
movsb
and
mov
test
jb
cmpl
dec
jnp
andl
shrb
sub
xchg
xchg
in
or
js
scas
leave
gs
dec
dec
mov
sbb
test
je
xchg
outsb
mulb
mov
xor
pushf
iret
nop
lahf
pop
push
pop
add
adc
mov
jle
pusha
mov
pop
xchg
sbb
je
pop
ror
fwait
sub
add
or
in
or
push
sbb
mov
push
push
mov
cmc
neg
xchg
scas
aaa
fistps
xor
jae
loop
gs
jb
fcoml
loop
xchg
fwait
pop
xor
mov
or
cmp
xchg
mov
test
pop
jecxz
mov
out
jg
ljmp
cmp
adc
addr16
hlt
pop
insb
inc
fstl
sbb
xchg
xor
cmpsb
fdivs
push
into
or
gs
sub
mov
pop
ret
xor
inc
cmp
imull
mov
adc
pop
push
ret
mov
sbb
test
or
daa
xor
and
xor
aam
repz
add
jmp
dec
jns
hlt
sub
js
mov
das
popf
push
loope
repnz
mov
or
iret
bound
mov
adcl
lret
vmread
xor
jnp
repz
add
lock
fwait
bound
int
mov
mov
aam
mov
inc
xchg
int
and
in
jne
cli
scas
daa
lds
ljmp
imul
dec
adc
sbb
pop
pop
in
rcrb
pop
outsb
jl
dec
shl
divb
push
arpl
imul
push
pop
aaa
aas
pusha
jns
scas
mov
sub
sbb
push
shlb
ficomps
pop
inc
mov
or
push
and
dec
mov
xor
mov
cs
in
cmp
mov
add
fwait
rcl
mov
add
and
and
out
cmc
pop
dec
cli
subl
xchg
jns
or
imull
jp
aaa
adc
adc
pop
jno
aam
sub
int
into
adcb
cli
outsl
or
push
push
sbb
fidivrs
scas
mov
mov
movsb
outsl
dec
pushl
and
inc
sub
testl
into
fwait
in
jb
rcrb
repz
push
sbb
lahf
mov
xchg
adc
pop
loope
fcmovu
pop
aam
jmp
ljmp
sbb
jne
sub
mov
inc
pop
pusha
jb
mov
inc
push
or
dec
dec
fnsave
dec
push
lods
loope
sub
cmpsb
stos
dec
sbb
push
inc
hlt
imulb
mov
jb
push
stc
or
bound
out
xor
movsb
pushf
mov
jae
or
mov
mov
bound
mov
push
fdivl
xchg
inc
nop
not
outsl
xlat
in
and
aam
repnz
cs
xorl
loopne
sbb
por
cmpl
sbb
cld
push
jmp
imul
dec
stos
ljmp
ret
jbe
js
xchg
js
xchg
addr16
lea
cs
sbb
xor
or
mov
test
xchg
mov
scas
xchg
loope
pop
test
test
push
push
or
shll
loope
data16
leave
int
sbb
pop
xchg
push
ret
ss
je
pop
jb
inc
dec
sub
cwtl
jb
out
mov
and
xchg
pusha
mov
jl
xchg
mov
das
in
aaa
leave
popa
lret
repz
rcll
xchg
movsb
sub
out
sub
rcrl
adc
cmpsb
fiadds
mov
out
cmpsl
repz
xor
aam
out
pop
repnz
pop
mov
or
repz
mov
insl
adc
xchg
adc
push
jnp
lock
icebp
jecxz
lcall
dec
aaa
or
dec
cmp
push
add
inc
pop
repnz
and
mov
push
pop
ja
lds
jl
add
mov
mov
jae
mov
sub
cld
test
aam
and
push
arpl
cmc
call
pop
popa
out
xchg
imul
addr16
dec
clc
jle
dec
sbbl
cmp
or
mov
xchg
mov
scas
or
cs
push
jl
xchg
test
cmp
sbb
test
stos
or
ret
jle
divl
xor
xor
lods
sbb
push
add
xor
sti
mov
lcall
or
push
sub
ja
mov
and
int
add
stos
aas
adc
pop
test
dec
push
incb
cmpsb
sbb
pop
pop
or
test
inc
mov
call
cmp
push
jb
daa
stc
stos
into
in
pop
je
sub
scas
int3
push
out
or
mov
or
js
cli
js
push
dec
mov
orb
inc
aad
mov
push
xchg
and
mov
inc
fiadds
adc
in
pop
loope
mov
mov
push
clc
jne
and
mov
data16
js
add
or
stc
xor
pusha
pop
bound
das
push
andb
add
call
inc
fstpt
push
pop
sarl
out
and
imul
bound
adc
add
neg
scas
mov
out
push
fnsave
jg
aaa
lret
mov
cltd
mov
jo
mov
cmp
in
inc
xor
ja
aaa
loope
addr16
mov
and
mov
outsb
dec
shrl
loope
cmp
mov
pop
jmp
loope
mov
mov
nop
adc
lret
xor
iret
adc
or
iret
fmull
adc
mov
lods
les
cmp
call
pop
ret
orb
dec
repz
iret
popa
lods
lcall
stos
andl
out
sti
lea
mov
sub
jp
inc
cltd
push
cmp
mov
mov
sub
xor
pop
out
inc
daa
nop
mov
mov
in
xchg
ss
cmp
adc
pop
mov
out
pop
and
add
mov
xchg
sub
dec
sbb
xchg
mov
xchg
push
outsb
adc
and
into
cmp
mov
mov
in
das
dec
nop
push
add
outsb
lods
mov
in
or
and
add
insl
cmpsl
iret
lea
inc
pop
mov
push
hlt
inc
and
js
gs
xor
sbb
ja
pusha
addr16
jns
test
mov
in
sbb
into
outsl
add
xchg
movaps
add
sbb
js
mov
sub
jle
cmpsb
and
lods
out
mov
sbb
dec
lret
cmp
das
imul
add
sbb
jmp
aas
sub
push
push
jo
sbb
xchg
test
das
bound
xor
jne
jle
add
fcom
cmp
push
hlt
ljmp
testl
out
lods
sub
jmp
sbb
je
mov
push
clc
sbb
es
cmp
addr16
xlat
ret
incl
sbb
ljmp
xchg
mov
xchg
mov
lods
add
sbb
inc
and
push
in
and
pusha
mov
jecxz
mov
xor
xchg
ret
sub
jns
push
mov
into
jg
add
jecxz
mov
mov
jae
jecxz
sub
sub
mov
sbb
add
sarl
arpl
add
lock
ja
mov
lcall
cmp
inc
jb
xor
mov
pushf
pop
outsb
out
rcrl
push
lock
xchg
adc
outsl
nop
pop
pusha
pop
inc
xchg
stos
push
aaa
aad
adc
and
ficoms
je
push
xchg
adc
stc
stos
sub
jge
negb
mov
in
inc
sahf
pop
or
inc
pop
cmp
and
jae
inc
outsl
call
shrl
xor
lds
mov
fadds
in
jmp
mov
fwait
out
push
lret
or
inc
or
enter
gs
out
aad
inc
mov
mov
mov
test
jl
data16
cmp
add
mov
xchg
mov
fimull
xor
movsb
popf
adc
fwait
outsb
or
cmp
mov
sbb
adc
dec
mov
and
shlb
or
inc
clc
stc
xchg
inc
loopne
xchg
xor
sbb
scas
aad
movsl
jecxz
std
repz
jg
adc
mov
aam
aaa
dec
mov
cld
mov
xchg
fst
add
xchg
pop
in
out
jl
lods
divl
dec
sub
inc
pushf
ss
xlat
inc
insb
scas
inc
jo
ret
xchg
xor
ret
push
es
out
jp
cmp
hlt
jg
inc
adc
cmp
dec
jmp
and
shrl
inc
mov
dec
pop
sbb
dec
clc
pop
xor
cmpsl
cltd
push
add
push
das
mov
fldt
ss
mov
or
pop
xchg
cmp
xchg
clc
je
mov
fs
cld
jle
cli
lahf
jmp
sarb
ljmp
pop
mov
mov
and
in
mov
pop
mov
mov
jmp
cmp
mov
push
sub
mov
roll
xor
xchg
out
jnp
in
and
orb
incb
stc
jecxz
out
pop
xchg
adc
sub
xchg
mov
mov
bound
jl
testb
int
mov
out
mov
push
call
adc
cmp
mov
push
jno
or
push
xor
popa
and
mov
scas
out
add
ja
sub
jb
jnp
dec
inc
inc
call
lds
dec
mov
popa
inc
sbb
push
test
xorl
pop
pop
cmp
inc
xchg
mov
pushf
mov
std
loope
add
fisubrl
add
mov
xlat
cmpsb
add
ds
mov
gs
out
ja
out
xor
or
push
andb
sahf
dec
test
inc
mov
stc
xchg
jge
repz
movsb
inc
jmp
lods
mov
mov
lcall
jl
jg
fldl
das
jno
lods
sub
and
sahf
lret
call
loope
inc
jae
dec
sbb
fists
push
sbb
js
dec
cmp
mov
jmp
dec
loope
xchg
push
aaa
mov
add
repz
iret
push
pusha
and
es
das
int3
inc
imul
xchg
dec
pop
roll
push
jb
mov
popfw
push
adc
daa
jge
mov
xor
idivl
lahf
add
lcall
mov
push
xchg
int
push
je
mov
sbbl
ja
jge
sahf
dec
cmpsb
sbb
or
fists
xchg
and
xchg
movsb
or
inc
jl
xor
fisubrs
dec
dec
push
filds
insl
sbb
imul
loope
gs
and
push
or
mov
js
mov
scas
int3
mov
call
test
or
mov
mov
xchg
xor
jmp
push
xchg
add
jno
add
fs
sbb
dec
cmp
xor
insb
push
outsl
jne
add
cmpsb
and
pop
loope
pop
or
ja
lret
pop
movsl
shll
push
add
aaa
fbld
in
out
scas
dec
test
cs
test
out
push
shrb
cs
mov
negl
lds
dec
pop
sahf
pop
enter
sbb
les
imul
mov
jecxz
push
adc
sarb
ss
hlt
or
in
aas
repz
in
push
iret
mov
adcl
mov
scas
test
repz
jns
icebp
lods
xchg
popf
pop
nop
sbb
jnp
in
stos
cmc
xor
pop
es
push
jnp
sub
or
push
mov
mov
hlt
mov
movsb
imull
negl
push
adc
inc
ss
inc
fldcw
icebp
ret
idiv
or
cmc
dec
sbbl
pop
push
loop
mov
lret
push
popa
xchg
lcall
sti
or
loope
pop
add
sub
loopne
rol
pop
pop
jmp
out
cmp
jns
mov
push
xchg
pop
clc
rcrb
mov
mov
jbe,pn
scas
jmp
lds
inc
loopne
and
dec
ja
in
enter
jmp
ss
inc
sub
push
mov
fildl
fs
inc
gs
push
nop
or
in
cmp
mov
cmp
movzwl
cld
popa
or
or
push
push
cmp
outsb
lods
lods
sti
rol
in
xor
and
popf
jae
push
pop
mov
xchg
jne
xor
loop
pushw
mov
cmp
xor
out
pop
adc
mov
test
sti
cmc
mov
mov
xor
std
xlat
push
shrb
cmpl
dec
push
xor
repnz
lds
imul
mov
mov
adc
in
push
into
dec
cld
jno
push
lock
xor
es
sahf
nop
loopne
xchg
test
inc
fistpl
imul
jnp
push
inc
pop
cs
fwait
or
xor
mov
test
mov
pop
xor
mov
sti
push
mov
ds
xor
dec
lods
test
test
push
cltd
mov
jnp
jnp
sub
ljmp
scas
loopne
and
ret
filds
jne
or
sub
mov
loope
arpl
pusha
fs
dec
adcl
test
sbb
mov
mov
jge
pop
dec
xchg
fcoms
test
mov
daa
sub
sub
or
out
sub
int
dec
or
cmpsl
and
loop
nop
mov
pop
ljmp
enter
out
push
movsl
xor
movsb
stos
nop
lcall
and
sub
mov
popf
adc
lcall
jb
push
sbb
lahf
out
dec
sub
test
pop
fisttpll
jns
add
dec
cmpsb
repnz
push
aam
mov
jae
aaa
jb
push
xor
xchg
fidivrs
cli
xor
sub
push
clc
add
sbb
mov
pop
aam
pop
test
popf
sahf
sbb
lods
in
mov
pop
fsubrs
mov
and
mov
mov
sbb
outsb
xor
push
or
mov
roll
pusha
push
rcl
dec
shll
outsb
inc
das
popa
fisubl
sbb
xchg
inc
enter
xor
shll
push
lret
inc
xor
ficomps
loop
sbb
dec
outsb
mov
lock
ss
and
xchg
xchg
cmp
pop
jne
mov
dec
pop
lds
and
jae
push
jl
xlat
and
mov
out
mov
push
or
in
pop
jge
pop
push
lods
call
pop
pop
xor
fisubrs
call
and
fwait
je
out
pop
js
mov
pop
mov
repnz
dec
push
daa
aam
movb
or
push
int
xor
xchg
jecxz
mov
jge
repz
aam
imul
call
outsl
popf
idivl
lock
sub
sub
add
fs
outsl
inc
cmpb
sbbl
test
icebp
adc
add
stc
aad
loop
mov
cltd
leave
inc
add
movsl
movsl
push
pop
outsl
or
push
test
je
ja
out
jbe
add
or
pushf
xchg
xchg
sbb
jnp
jae
inc
test
or
rorb
popf
hlt
jae
add
cmp
xchg
mov
rcrb
lea
popf
lea
dec
jl
js
ljmp
outsb
dec
push
shlb
push
das
hlt
xchg
mov
mov
popa
adcl
xlat
mov
js
xchg
inc
sahf
aas
imul
rcrl
push
test
call
cs
push
mov
mov
jl
fsts
fcomp
add
and
out
adcl
in
or
sahf
mov
xchg
mov
mov
jne
inc
push
mov
cltd
jmp
pop
out
inc
push
ret
std
fidivrl
and
push
mov
out
inc
pop
hlt
cs
push
scas
xor
push
jno
adcb
cltd
fwait
ljmp
ret
loop
ret
cmp
out
mov
jl
inc
xor
mov
sub
repz
sbb
lret
cld
adc
call
repnz
punpcklwd
pushf
ss
inc
sbb
mov
mov
stos
mov
push
or
sbb
jne
or
lock
mov
and
adc
mov
or
xlat
cli
push
pop
push
fstl
sti
inc
xor
daa
push
jecxz
int3
testb
push
stos
adc
stc
icebp
and
inc
add
xchg
iret
addr16
jne
and
mov
into
imulb
sahf
and
out
adc
mov
fbld
mov
mov
daa
fsub
jno
push
and
rolb
in
dec
inc
pop
add
mov
push
int3
add
mov
cmp
push
dec
cmp
xchg
iret
enter
pcmpeqd
loopne
icebp
rcr
call
icebp
push
push
cld
inc
rcrb
pushf
mov
scas
mov
cmpsb
add
inc
dec
inc
pusha
out
pop
mov
cmpsb
movsl
rcl
dec
jae
fisttpll
mov
add
dec
stc
fidivl
sbb
cmp
pop
mov
sbb
stos
mov
mov
std
dec
sub
adc
sti
mov
and
add
mov
mov
loopne
mov
fidivs
rcr
test
js
inc
add
mov
popa
xor
mov
testl
pushf
add
lods
lock
mov
mov
mov
ss
lea
jg
xor
std
imul
add
gs
mov
arpl
pop
adc
adc
outsl
mov
cld
xor
in
xchg
in
dec
in
lret
adcl
lods
add
in
cmpsb
xchg
dec
daa
movsl
je
imul
xchg
add
daa
arpl
dec
inc
xor
gs
xchg
and
jnp
adc
hlt
mov
adc
mov
xchg
aaa
push
pop
in
mov
or
ljmp
fldcw
xbegin
sub
push
paddd
cmp
mov
or
test
or
cmp
cmpsb
out
outsb
xor
test
int
addr16
into
rcll
nop
and
and
fs
adc
shll
add
je
std
int
mov
and
js
sbb
clc
dec
adc
pop
cwtl
scas
mov
dec
adc
add
mov
xor
mov
jo
in
dec
mov
inc
or
dec
lcall
mov
or
add
sub
pop
cld
repz
int
cmpsl
mov
xor
gs
inc
pop
xlat
mov
inc
xchg
inc
add
sahf
std
rolb
dec
ja
cmp
jp
sbb
pop
jb
mov
data16
ja
js
xchg
and
movsb
xor
xchg
sbb
orb
and
leave
cmpsb
daa
arpl
sub
js
test
xor
inc
repz
icebp
lock
or
xchg
lods
xchg
and
dec
mov
xchg
loopne
xchg
cmp
and
fcompl
out
test
insl
je
mov
cmp
mov
mov
scas
xchg
push
insl
push
fldcw
push
pushf
cwtl
jns
gs
stos
outsl
sbb
shr
dec
out
stc
jge
sbb
test
test
enter
stos
bound
fucomip
dec
or
outsl
inc
xchg
pop
bound
ds
sub
test
push
xchg
push
and
jne
cld
dec
or
enter
mov
lock
dec
add
add
xor
pop
xchg
mov
mov
lds
push
inc
and
gs
mov
push
outsb
cmp
std
jns
mov
cmc
lahf
and
pop
dec
enter
cmpsl
fiadds
mov
arpl
adc
xor
fidivs
xchg
mov
ss
in
mov
pop
mov
push
adc
in
jge
subb
loop
cmc
popa
xchg
xor
cmp
icebp
popa
ss
mov
call
out
cwtl
mov
mov
cmpsb
lea
adc
xor
repnz
and
inc
or
repz
push
es
es
add
sbb
dec
sub
and
cmp
out
push
dec
dec
lahf
push
pop
test
aas
dec
xchg
xchg
in
aas
cmp
mov
bound
testb
pmulhw
sub
lea
das
fdivl
pop
divb
repz
jae
dec
or
cmp
mov
test
add
stos
or
sub
and
mov
pop
sti
sbb
push
insb
out
and
rcr
test
cwtl
std
data16
mov
push
faddl
sbb
sub
arpl
mov
mov
sub
pop
and
nop
stos
pop
fcomi
sub
and
mov
cs
dec
stos
jne
mov
xor
adc
mull
add
or
int3
pop
hlt
fmulp
rcrl
mov
or
adc
popf
hlt
ss
mov
dec
xlat
ret
stos
shr
mov
andl
loopne
ds
aad
fisubrl
adc
lea
jle
push
jae
out
test
adc
repnz
sbb
mov
cltd
in
notb
imul
pop
stos
add
xchg
fistpll
mov
and
sbb
xchg
popf
bound
mov
sbb
dec
lret
cwtl
push
pop
inc
jo
mov
sub
fcmovb
jbe
daa
imul
inc
mov
loop
jmp
scas
adc
lds
xchg
mov
jge
hlt
xor
out
aam
test
outsl
add
inc
pop
or
jns
shl
adc
push
mov
inc
add
pop
sub
xor
adc
jb
xchg
inc
dec
aad
mov
add
mov
ds
cmp
or
mov
sti
test
push
lds
addr16
cmp
ret
imul
mov
test
and
cmp
jp
jmp
lea
inc
mov
loope
outsb
lahf
mov
outsl
lds
push
push
dec
mov
movsl
jb
int3
mov
dec
push
dec
sbb
cmp
stos
mov
stos
mov
movsb
cmpsb
outsl
mov
xchg
hlt
jg
loope
arpl
inc
cs
mov
inc
pop
mov
mov
shlb
mov
cmpsl
sub
sarl
xchg
jecxz
xchg
sub
sbb
mov
mov
insb
cwtl
test
out
xchg
js
xorl
push
sub
ljmp
movsl
sti
sub
sub
enter
cmp
aaa
cmp
and
in
inc
jmp
sub
sbb
inc
icebp
popf
mov
mov
arpl
jmp
push
mov
fcoms
adc
adc
bnd
into
push
add
push
and
aad
cmpsb
mov
daa
out
pop
inc
adc
mov
pop
movsb
add
inc
mov
or
pop
mov
or
imul
stos
mov
leave
adc
ss
aad
xor
xor
push
bound
ss
shlb
or
mov
adc
lahf
stc
sbb
xor
jmp
data16
fwait
adc
push
adc
mov
add
mov
push
mov
add
inc
dec
pop
mov
and
sbbb
push
fistpl
leave
pop
push
inc
in
imul
sbb
bnd
fdivrs
add
test
lea
mov
cltd
popa
in
idivl
in
sub
btl
scas
js
pop
gs
mov
gs
and
push
push
pop
fcomi
cwtl
lcall
in
imul
in
or
mov
mov
shld
sub
iret
jp
mov
bound
hlt
lods
jno
mov
push
xchg
std
les
inc
push
cmp
pop
adc
xor
inc
cs
add
fadds
mov
lods
addl
test
fimull
cs
pop
test
jle
sub
ds
mov
leave
cmpl
aad
and
cmp
gs
je
mov
aad
mov
mov
xchg
addr16
clc
pop
pop
adc
cmpsb
mov
ret
lea
mov
sahf
pushf
lahf
sarb
pop
push
jbe
dec
sub
leave
or
cmpsl
das
inc
push
mov
outsb
sub
jae,pt
jnp
jmp
inc
repnz
or
les
test
or
je
mov
sbb
into
hlt
insl
cs
js
dec
cs
mov
inc
icebp
mov
push
fwait
cli
dec
es
xor
addr16
nop
inc
push
nop
mov
mov
and
xchg
sbb
jmp
cwtl
mov
aad
bound
jnp
int3
and
test
jb
std
dec
lahf
cmp
je
jecxz
add
lea
das
push
repnz
mov
inc
out
push
xor
fldt
out
xchg
out
loopne
fs
data16
inc
inc
jbe
iret
mov
cmp
mov
mov
jmp
jge
xchg
mov
pop
and
xor
movsl
aas
jmp
push
test
ja
add
incl
mov
mov
int3
daa
inc
cs
in
aas
rol
and
pop
mov
ficompl
push
out
mov
push
leave
pop
jo
mov
sbb
cmc
gs
movsb
jle
das
lods
icebp
imul
fcoms
mov
pop
inc
int
mov
dec
push
push
pop
push
cmc
outsl
into
adc
mov
add
js
fbstp
lahf
and
mov
push
lret
insl
adc
aad
xchg
mov
subb
and
cmc
mov
fs
dec
je
lahf
sub
cs
roll
call
test
dec
and
cmp
pop
out
test
aaa
orb
les
and
jno
mov
mov
stc
jno
mov
imull
int3
pop
mov
loop
mov
lret
ljmp
xor
mov
dec
in
gs
ja
scas
add
repnz
ljmp
push
jb
nop
xchg
xor
pushf
int3
push
in
loopne
movsl
ljmp
sbb
jae
jnp
jae
mov
xchg
adc
dec
jns
pop
sbb
int
js
push
fsubs
push
sub
mov
popa
mov
cli
popl
imul
mov
out
jno
sub
and
sbb
in
cwtl
cli
lods
xchg
add
shl
sbb
dec
mov
push
push
sub
inc
dec
jecxz
or
inc
jmp
add
inc
arpl
add
movsl
jnp
addr16
shlb
xchg
ret
mov
rorl
xchg
es
sbb
lret
idivb
repnz
js
inc
fcmovnb
ret
and
push
cmpsb
xor
mov
inc
ss
subb
popf
int3
xchg
cli
cli
push
sub
pushf
out
jl
outsl
out
add
xchg
ss
push
insb
int3
fwait
and
sub
push
je
adc
xor
movsl
test
mov
adc
pop
lret
mov
aaa
movsl
adc
mov
xchg
dec
cli
jne
cmp
push
hlt
addb
mov
leave
push
mov
pop
inc
jl
ret
push
and
loope
dec
mov
jno
add
adc
scas
mov
je
xor
test
xor
sub
jb
in
jb
xor
outsb
inc
inc
scas
add
xlat
inc
adc
mov
enter
and
addr16
mov
repz
lods
push
scas
imul
push
jne
ja
push
push
scas
icebp
hlt
bound
add
push
mov
pop
imul
inc
and
je
ja
ret
in
in
xor
mov
xchg
xlat
lods
mov
and
jl
cmp
sub
lahf
cmp
jle
or
out
sahf
inc
xchg
xchg
cmp
sbb
insl
xor
pop
push
jle
iret
imul
mov
mov
imul
cmp
pusha
sarl
push
jg
pop
test
test
inc
or
adc
add
pop
ret
xor
mov
pop
shll
or
xchg
jb
sarl
inc
pop
fisttps
loopw
loopne
jmp
inc
outsb
enter
jp
loope
pop
inc
flds
test
pop
cmp
jl
fldt
xchg
mov
mov
jmp
pop
jmp
rorl
jmp
lods
repnz
sub
fwait
cmp
fiaddl
daa
imul
push
or
pushl
lahf
repnz
push
sub
mov
in
enter
or
jecxz
ja
lea
pop
fwait
jbe
fsubrl
rcrb
xlat
add
cmp
mov
add
inc
outsb
fs
hlt
push
lock
sbb
or
pop
xor
push
mov
int
ljmp
and
dec
loop
or
mov
sahf
les
fdecstp
xchg
jae
lods
pop
dec
and
add
pop
js
jae
jae
mov
std
mov
enter
iret
mov
dec
xchg
fistl
pushl
jmp
push
addb
pop
jmp
les
hlt
idiv
out
cmp
movsl
mov
jbe
push
mov
pop
add
adc
push
fisubl
mov
pop
xor
cltd
xchg
jo
adc
xchg
repnz
leave
jns
cmp
int
pop
and
fwait
cld
mov
shll
push
lcall
and
push
mov
pop
inc
call
adcb
les
cs
fwait
jne
mov
pusha
adcl
in
dec
mov
or
enter
fildll
xchg
sub
sbb
into
jg
leave
mov
in
sahf
add
stc
or
pop
cmp
jecxz
shrl
adc
bound
addr16
add
std
adc
sbb
xor
xchg
test
loop
rcr
sub
je
mov
ja
insb
mov
aam
mov
xchg
fmull
sti
ss
xor
stos
push
xor
ja
inc
push
loopne
scas
push
jge
test
xor
shlb
fsubrl
js
xchg
insb
es
xor
cmp
fwait
in
mov
insb
js
data16
pop
sbb
pop
push
sub
pop
fists
aaa
imul
cmp
pop
popf
push
mov
pop
aam
test
daa
insb
dec
jle
inc
pop
jp
fcomps
or
jg
popf
pop
adc
mov
pop
lods
pop
sub
je
div
loop
sub
das
mov
add
jp
cmp
push
stc
jl
fdivl
adc
out
xchg
xchg
in
cmp
xor
mov
mov
in
mov
dec
test
sti
mov
pop
cmp
and
push
and
add
dec
jl
add
and
add
imul
inc
nop
xor
fistpl
fnstsw
pop
adc
sub
stos
test
outsl
insb
mov
popf
out
jl
das
dec
cltd
sbb
lods
lock
test
testb
pop
and
mov
mov
or
cltd
jo
test
addr16
mov
xchg
xchg
ret
sub
jecxz
sbb
xchg
mov
and
dec
fcomp
repz
lods
sbb
ret
jecxz
pop
addr16
and
in
out
jne
sti
jae
ljmp
jno
pop
push
jmp
frstor
andl
call
pop
xacquire
bound
test
dec
sub
stc
push
dec
and
mov
mov
adc
lds
mov
xor
mov
xlat
popa
sahf
and
push
or
cmpsl
jmp
cld
test
cmpsl
jl
jne
dec
mov
mov
frstor
sti
lahf
sbb
mov
hlt
ljmp
lds
in
mov
dec
xchg
adc
mov
fsubl
std
mov
or
add
das
shrb
dec
sbb
xchg
mov
int
fnstenv
outsl
mov
leave
mov
jl
popw
icebp
lret
mov
push
sti
aas
cmc
bound
in
xor
out
dec
and
imul
lret
dec
mov
and
insl
test
outsb
or
outsb
aaa
inc
cld
xchg
add
mov
xor
popa
repnz
cmp
pushf
xchg
jb
mulb
lea
or
xchg
jo
int3
scas
cmp
adc
popf
pop
popf
adc
xor
inc
xchg
out
cli
push
pop
andb
jecxz
sbb
lods
outsl
cld
enter
mov
outsl
push
in
stc
je
push
mov
mull
dec
cmpb
lds
mov
fbld
jnp
loopne
or
or
shrl
imul
lock
fldcw
gs
mov
inc
gs
mov
and
dec
jo
lret
jns
dec
mov
xor
dec
cmc
mov
and
cltd
mov
jle
scas
adc
mov
xor
movsb
rcll
mov
cmp
fwait
imul
mov
mov
addr16
outsb
or
jo
xchg
push
mov
lods
inc
fsub
mov
scas
negl
loope
inc
jns
push
adc
in
insb
in
xchg
mov
mov
cs
sub
les
shrb
mov
pop
in
je
xchg
mov
fwait
push
jo
fldenv
ret
aaa
cmp
jae
jg
test
xor
mov
xor
rorb
or
outsb
adc
mov
subl
pop
bound
aam
push
dec
cli
stc
inc
or
adc
mov
pop
push
jp
repnz
xor
cld
out
inc
adcb
test
sub
je
and
int
lret
or
dec
mov
orb
nop
cmp
mov
xchg
aam
jl
es
stos
adc
push
lds
in
xor
nop
jecxz
mov
mov
mov
iret
imul
in
xchg
dec
rcrb
fbld
aad
push
jns
scas
loope
lahf
add
outsl
je
mov
jl
data16
lods
hlt
mov
jo
mov
inc
scas
mov
sub
push
jo
lods
dec
jge
fbld
rol
pushf
sbb
mov
cmp
dec
pop
pop
cmp
mov
cmpsb
inc
jle
and
lds
push
loopne
mov
and
cmp
dec
lds
fst
gs
and
jp
inc
jno
xchg
stos
xor
mov
pop
stos
mov
mov
sub
mov
mov
fisttpl
push
mov
xor
movsl
or
adc
or
push
push
inc
stc
xrelease
mov
cmp
je
inc
xchg
and
push
ret
mov
sbb
lock
sbb
mov
cmpsb
mov
push
xchg
push
inc
fsts
mov
pop
jle
cmp
insb
ret
dec
pop
test
cmpsl
insb
movsl
jmp
fisubrs
out
repz
adc
xchg
stos
ja
mov
jmp
rcl
cmp
daa
repnz
cmp
movsl
push
pop
ljmp
mov
jo
rcll
and
fcoml
repz
ds
xor
xor
mov
mov
popf
sub
dec
jl
jmp
xchg
jle
sbb
xlat
mov
aam
cmc
fldt
xor
adc
bound
mov
mov
xor
mov
sbb
xchg
gs
addl
enter
xor
cmp
movsl
outsl
adc
inc
inc
daa
mov
and
push
into
push
stos
movsl
rol
sbb
dec
movsl
add
insb
rcr
jbe
pop
lret
int3
xor
les
add
dec
out
cmp
mov
dec
aam
jns
push
or
neg
xchg
pop
std
mov
adc
lcall
shrl
push
lods
jecxz
cmpsb
push
fdecstp
out
lods
outsl
enter
lea
mov
lret
xor
js
sbbb
fbld
and
scas
inc
xor
test
out
cmp
imul
fiaddl
iret
jl
cmpsl
addb
sub
xchg
jo
jnp
push
push
out
sahf
jns
pusha
pop
sub
sahf
pop
add
mov
jo
cmp
add
fimull
out
pop
in
mov
dec
mov
outsb
mov
and
incl
adc
pop
pop
in
fdivr
pop
mov
ret
in
pop
inc
js
ret
cmpsl
inc
sbb
jno
pop
fs
lods
mov
mov
xchg
fisttps
push
mov
or
cmc
lea
sbb
push
xor
fwait
cmp
in
pop
popa
pop
fdivs
adc
les
push
aad
jl
or
jb
mov
mov
pop
int3
pusha
mov
dec
pop
icebp
scas
sub
mov
loope
cmp
push
sarl
xchg
lahf
lds
inc
mov
stos
mov
mov
inc
test
mov
cmp
aas
fs
mov
jae
insb
test
cli
int
orb
ret
add
inc
pop
imul
mov
jmp
mov
adc
mov
or
inc
inc
push
cwtl
loope
push
fidivl
inc
adc
dec
or
mov
imul
cmp
call
mov
pusha
les
lds
outsl
and
add
xchg
add
test
in
jmp
pop
xchg
add
out
stos
femms
mov
pop
or
and
in
xchg
xor
mov
adcb
sub
call
stos
repz
jl
popa
and
fstl
cmp
mov
cmp
sub
in
lahf
fdivrl
mov
lcall
insl
jnp
iret
loopne
sub
fcomi
mov
cmpsl
imulb
lret
aad
mov
aas
jmp
jo
test
mov
leave
cmp
in
popf
adcb
jle
out
mov
popf
cmpsb
test
ret
mov
push
mov
lock
shl
pop
pop
mov
and
shll
jp
ret
dec
xor
push
insb
push
movsb
bound
insb
mov
rep
fldl
or
lea
imul
push
out
in
and
xchg
arpl
jnp
jo
les
shlb
int
dec
xor
ds
pusha
clc
mov
or
in
repz
je
cli
adc
dec
lahf
nop
leave
pop
mov
xchg
xchg
cmp
lock
scas
jns
or
cmp
popa
out
add
jnp
adc
mov
lcall
nop
into
xchg
into
xor
jns
mov
scas
repz
adc
psubusb
sahf
push
movsb
insb
inc
xor
push
adc
scas
xchg
add
int3
outsb
rorl
lret
loope
dec
inc
push
aad
repz
js
popa
lret
pop
movsl
ficoml
in
in
sbb
push
imul
dec
enter
cmpsb
loopne
cld
push
in
adc
pop
xchg
sti
aas
adc
outsb
adc
hlt
xchg
aam
leave
push
or
test
xchg
out
cmp
xchg
push
sbb
mov
stos
jecxz
lcall
pusha
in
pop
ljmp
pop
sbb
sub
jmp
fiadds
cmpl
pop
ret
push
pushf
mulb
xlat
and
xchg
aas
loopne
cwtl
adc
and
lret
cmpsl
sbb
jns
mulb
push
popa
lods
popa
movsb
cli
xchg
mov
ds
out
call
fwait
jbe
mov
nop
test
mov
sbb
mov
mov
xchg
xchg
xchg
sbb
mov
pushf
pop
xadd
fcomi
push
lret
push
cmp
and
mov
mov
and
inc
dec
xorl
push
cmp
pop
jo
sbb
ja
std
imul
sbb
jbe
inc
lea
je
es
sub
or
lret
cmpsb
lods
test
movsl
sub
jns
cwtl
xor
mov
or
pusha
lret
pop
or
fsubrs
pushf
fistl
rolb
sbb
inc
and
push
shll
xchg
jbe
push
jg
sbb
fdiv
pusha
adc
call
xor
xor
popf
sub
xor
adc
enter
cli
xor
sub
cmpsl
sub
leave
lock
decb
cmp
xchg
push
dec
jp
mov
xorl
jl
popf
sub
add
mov
push
bswap
movsl
test
lock
mov
cld
push
je
out
sarl
mov
sub
sbb
insl
sahf
jnp
or
xor
adc
pop
outsl
lea
add
pop
jge
das
push
pop
dec
repz
iret
inc
xchg
jns
es
inc
aaa
shrl
mov
xchg
pop
push
push
notb
sbb
out
fs
dec
mov
push
mov
push
push
call
inc
dec
pop
nop
out
xchg
inc
out
mov
fldenv
and
insb
cmpsb
add
mov
lahf
push
std
and
mov
xchg
rolb
or
sbb
pop
dec
sub
inc
out
ret
pop
cmp
inc
push
and
lods
sub
js
push
int3
into
mov
pop
popa
pop
pop
aaa
xor
mov
push
ret
nop
in
int
xor
cmc
fs
jo
adcb
lcall
cmp
lea
inc
jo
dec
mov
fwait
repnz
jb
frstor
dec
rcrb
mov
xchg
fisttpll
rcrb
lods
movsb
add
test
aad
das
aaa
bnd
lahf
cmp
mov
cli
rolb
out
test
in
push
jb
movsb
lock
enter
dec
out
adcl
fmull
bound
jno
cs
stc
stos
mulb
ret
adc
scas
call
dec
sbb
scas
in
jl
inc
lods
jge
int
pop
sbb
inc
sub
dec
xchg
insb
rorb
dec
push
test
add
iret
push
lea
out
loope
sti
mov
cmpsb
stos
test
in
xchg
adc
out
data16
test
mov
mov
insb
xor
jp
mov
dec
jbe
fbld
xchg
and
out
mov
adc
sbb
ret
push
movsl
sub
sarb
jl
mov
mov
lods
pop
inc
sub
dec
add
cmpl
inc
lods
mov
adc
mov
lods
sahf
add
xor
rcrb
fwait
jmp
cwtl
pop
sbb
pop
cmc
testl
pop
faddp
adc
inc
loop
sub
xchg
xchg
mov
hlt
jo
push
add
in
xchg
test
andl
pop
xor
mov
fidivrs
test
mov
ret
nop
out
xchg
inc
cmpsb
push
adc
or
jnp
cmp
dec
xchg
cmp
or
jne
mov
test
cmp
lahf
std
loop
cwtl
shlb
add
das
fmul
push
in
insl
adc
not
sti
enter
roll
sti
jno
mov
sub
xchg
add
inc
lret
push
test
gs
movsl
mov
jnp
xchg
pop
cmp
add
sbb
fucomip
cmp
dec
cld
aas
popf
sarl
inc
cs
sbb
pop
pop
pop
in
aad
jne
mov
dec
mov
xor
or
fadds
push
inc
push
dec
sbb
xor
jl
arpl
les
aaa
mulb
xchg
adc
lret
cli
xchg
testl
add
cli
xlat
cmp
mov
ficoml
sahf
pop
push
outsl
pop
cli
mov
loope
andl
inc
cli
subb
cmp
call
sbb
sbb
mov
imul
cmp
sti
jle
push
rolb
mov
notb
roll
jbe
pop
daa
stos
fstp
incl
sub
sub
loop
loop
xor
sub
fadd
jl
jge
pop
mov
shlb
mov
data16
adc
xor
or
sbb
xlat
fnstcw
dec
lcall
lcall
aas
lds
mov
jns
cmp
push
push
sub
mov
fs
sub
jp
bound
addr16
call
scas
adc
cwtl
andb
insb
xlat
enter
push
lret
inc
mov
mov
push
aaa
outsb
pop
inc
pop
mov
mov
inc
int
scas
daa
push
out
inc
imul
sti
xchg
sbb
scas
xor
or
adc
jno
jmp
sbb
adc
sbb
and
movsl
inc
lods
movsl
xadd
je
loop
adc
fwait
adc
test
push
lods
xlat
cltd
int3
xor
sub
mov
leave
aaa
xor
pop
daa
enter
cld
gs
nop
lcall
sub
cmpsl
cld
bound
sub
jg
cltd
push
or
mov
cmp
popf
pop
jge
cmpsb
xchg
ds
pop
sbb
mov
mov
inc
mov
push
lock
xor
ss
int3
inc
mov
les
pop
js
iret
in
sub
mov
push
and
sub
pop
or
mov
lock
gs
add
mov
out
pop
or
aaa
ja
push
adc
cmc
mov
pusha
push
mov
xor
out
mov
rolb
xlat
ds
sahf
and
bswap
xchg
push
insb
inc
add
ljmp
adc
clc
sbb
sub
lea
test
push
call
inc
stos
xor
decb
cmp
or
push
popf
aam
int
cmpsb
out
fsubrl
setge
xchg
stos
movsl
stos
xchg
repz
imul
jecxz
inc
jmp
cmp
push
movsb
rcll
xchg
test
jo
add
andb
push
movsl
daa
pop
jnp
mov
or
mov
cmp
add
xchg
adc
mov
sub
push
add
sti
jae
aam
push
add
in
mov
xchg
scas
fbstp
jg
inc
sub
loop
xchg
sub
mov
sub
pop
fs
xor
xchg
lock
sub
pop
dec
dec
or
sbb
gs
add
mov
inc
mov
or
cwtl
test
lret
insb
xor
enter
fiaddl
loop
scas
rcll
scas
or
cltd
mov
sub
cmpsb
lret
mov
mov
dec
aaa
popa
or
xchg
out
push
test
jge
or
push
lahf
jno
pop
jmp
ljmp
and
addb
cwtl
int3
out
js
enter
and
lea
in
iret
ljmp
jl
in
cs
dec
pop
jbe
jmp
lds
xor
mov
cmp
andb
push
add
cmpsb
inc
or
ss
fwait
ja
xchg
jnp
addr16
add
jle
imul
mov
lds
stos
jle
xor
fdivrs
cmpsl
inc
imul
pop
outsb
rcl
fistpll
test
pop
xlat
repnz
pop
push
push
add
gs
scas
pop
cmp
aad
lahf
adc
iret
xor
jno
sbb
test
rcrb
or
pusha
xchg
cltd
xor
jecxz
mov
adc
jnp
dec
pop
xchg
adc
jmp
and
mov
ljmp
inc
xchg
movlps
ret
stos
add
sub
pop
xor
test
fdivr
mov
and
jns
insb
out
xchg
pop
loop
call
ljmp
pushf
ja
lods
jo
out
mov
je
lods
cmpsl
shll
jo
in
jns
mov
xor
scas
lock
push
add
adc
lods
push
in
unpckhps
inc
std
mov
rcl
xchg
fcoml
sub
and
add
xlat
xor
add
dec
loopne
iret
in
aaa
sub
mov
dec
mov
addr16
add
les
imul
xor
push
loope
mov
stos
pop
aas
test
lcall
adc
shrl
xchg
ss
sti
inc
mov
mov
pop
cld
pop
push
sahf
mov
addr16
mov
daa
daa
xor
andb
cmp
jmp
sub
testb
fisttpll
mov
fisttpl
mov
sub
push
movsb
mov
inc
adc
aas
lds
dec
mov
out
pop
fmulp
adcb
int
rcrb
jb
pop
xchg
cmpsb
sbb
cmp
sub
ds
inc
push
pop
out
addl
js
out
mov
bound
sbb
mov
mov
xchg
push
add
shrd
lds
push
mov
ficomps
hlt
lret
mov
cs
mov
insb
in
mov
xor
stos
movsl
test
fisubrs
mov
lea
icebp
iret
add
dec
xchg
mov
enter
push
iret
xchg
addr16
add
dec
sub
xor
and
dec
icebp
outsl
or
or
lods
push
and
adc
mov
dec
push
pop
push
loop
or
psadbw
cmp
mov
jmp
jns
fnstcw
pop
jmp
sub
add
xchg
and
jns
lds
lods
and
pop
addl
sub
dec
fdivr
add
push
mov
int3
sbb
mov
push
and
fidivrs
stos
fbld
jb
outsb
mov
sbb
fldt
adc
xor
push
push
or
cmp
outsl
addb
loopne
mov
mov
sahf
stos
dec
cmpsb
push
sub
mov
test
xchg
push
pop
add
jns
insl
stc
hlt
adc
ds
push
cli
fs
inc
sbb
testl
push
push
cmc
imul
test
push
mov
iret
js
xorb
lret
cmp
pop
and
and
xchg
jno
cltd
mov
jge
adc
fdivl
clc
and
lahf
adc
xor
push
jne
dec
cltd
xchg
bound
and
movsl
pop
scas
pop
xchg
or
mov
insl
mov
fprem
inc
popa
int3
popf
int
mov
mov
adc
aas
xchg
push
js
lods
out
incl
or
inc
scas
pop
rorb
mov
mov
inc
cmp
mov
fidivl
mov
or
pop
repnz
cmc
sub
leave
add
test
mov
lods
xchg
cmp
push
int
imul
jns
dec
enter
stos
hlt
sbb
and
pop
pusha
adc
push
shrl
clc
ss
std
mov
or
push
adc
lret
clc
jecxz
rolb
insl
test
mov
shll
test
shrl
dec
cld
in
adc
sub
test
aas
adc
push
add
xchg
xor
or
fwait
popa
xlat
dec
push
xor
cmpsl
cmpb
stos
xchg
fiaddl
push
and
incb
sahf
push
lret
dec
mov
test
test
xchg
xchg
mov
pop
lcall
sub
and
push
mull
lods
lahf
cmpsb
add
adcb
jle
fistpll
outsb
pop
push
jno
ret
dec
push
clc
or
xor
mov
pushf
shlb
inc
add
adc
mov
enter
pop
loop
in
mov
add
hlt
mov
dec
ret
test
lds
and
mov
dec
imul
pusha
and
jp
mov
xor
shlb
lea
mov
dec
add
mov
fstpt
jecxz
xchg
cmp
pop
pop
mov
sub
dec
mov
out
mov
xchg
xchg
mov
clc
and
loope
or
jmp
data16
shrb
push
es
fisubrl
mov
popf
in
and
mov
lcall
popf
jne
aas
mov
adc
sti
fldl
cwtl
jp
pop
xchg
xchg
mov
aaa
repnz
cld
mov
cmpsl
lods
push
inc
xchg
add
std
inc
rcrl
je
arpl
imul
aam
sub
dec
push
mov
cld
pop
sub
push
adc
les
cmpl
rol
test
lret
cmp
fs
lcall
sti
loop
pop
push
aas
push
or
jno
cld
cwtl
daa
sub
scas
fidivrs
mov
mov
or
out
rcll
insl
inc
rolb
or
outsb
mov
sub
add
jne
cmp
popa
add
xorb
sbb
lret
lds
arpl
add
test
add
pop
sub
movsl
mov
incl
fsubrs
jae
sbb
xchg
fcoml
je
sbb
dec
addr16
mov
jg
es
frstor
into
jbe
and
mov
imull
push
sub
add
ss
pop
bound
sub
insl
xchg
setne
lret
adc
dec
leave
mov
ret
add
sbb
in
cmp
sub
and
loop
mov
adc
or
daa
scas
and
je
lds
into
repz
testb
mov
mov
sbbb
testb
xchg
lock
cltd
fs
lods
mov
int3
pop
subb
les
enter
xchg
out
orl
jp
sbb
push
inc
addl
lea
insb
ds
xchg
and
icebp
and
stos
popa
mov
or
test
ds
mov
cmp
fiaddl
bound
push
adc
scas
les
push
or
ret
sbb
lahf
xchg
repnz
icebp
data16
repz
fsubr
dec
mov
lret
loop
std
push
imul
sub
stos
arpl
jbe
or
xchg
std
dec
inc
add
pop
sbb
jae
add
jge
sahf
cld
fldt
fldt
dec
xchg
or
lds
jge
sub
out
xchg
insl
sbb
sub
pop
dec
cmp
jmp
mov
mov
add
test
icebp
lret
add
lahf
fldl
lret
push
jbe
and
jb
jnp
push
fdiv
inc
jmp
and
xlat
pop
icebp
xchg
pop
out
cmp
xchg
mov
sub
sti
fdivr
rcrb
lds
test
adc
sub
imul
mov
faddl
aas
lock
pop
mov
jnp
imul
or
dec
in
sti
adc
cltd
xchg
jbe
sbb
add
mov
dec
jecxz
fisttps
repnz
call
ficoml
xchg
mov
jne
sahf
jns
mov
mov
test
push
adc
fnsave
jno
sub
lds
add
xchg
fbstp
ror
fisubs
mov
jmp
movsb
lock
or
insl
jne
and
js
test
inc
cmp
jecxz
or
in
pop
add
add
fdivp
sbb
or
mov
lcall
add
add
pop
mov
movsl
dec
pop
xchg
lret
sbb
dec
or
add
outsb
subb
cmpsb
adc
popf
pushf
xor
xor
xchg
mov
and
add
cmp
mov
mov
mov
ljmp
imul
loope
sti
mov
jo
sub
test
sbb
and
push
dec
adc
pop
sbb
int
push
leave
imul
or
cmp
in
inc
pop
fsubrp
out
outsb
jle
incl
imul
pusha
pop
ljmp
jnp
je
cmp
test
sti
lds
stos
cmp
negl
mov
fneni(8087
icebp
icebp
stos
mov
leave
xchg
rcll
sbb
or
fcmovnb
pushf
scas
not
adc
inc
dec
lahf
int
push
inc
mov
cmpsl
cmp
insl
pop
sbb
pop
cmp
test
lret
cltd
and
and
ror
mov
aaa
test
sub
int
insb
pop
xchg
mov
inc
mov
popf
movsb
cmp
orps
xchg
movsl
jnp
outsl
or
popf
and
movsb
sbb
mov
add
push
pop
sbb
test
cmpsb
pop
xor
mov
lcall
mov
mov
xchg
fldcw
jecxz
sbb
mov
push
adc
stos
push
in
mov
aas
out
stos
and
sub
cmp
enter
sub
sbb
ret
mov
xchg
shll
xchg
adc
jno
cmc
fwait
jno
mov
jle
push
jo
inc
mov
aas
adc
mov
insb
xchg
or
add
push
faddl
test
pop
jecxz
movsl
push
in
pop
push
xor
jns
dec
shrb
xchg
xchg
mov
fsubrp
pop
leave
add
out
gs
pusha
rorb
jae
add
imul
mov
mov
dec
dec
sub
xor
push
cmp
xchg
fmull
les
jae
cmpsl
sub
push
test
lock
fiadds
mov
sub
sbb
lock
push
xlat
testb
popf
xchg
push
xchg
aas
push
push
scas
lods
popl
adc
inc
js
mov
add
sub
xor
sbb
lea
mov
ljmp
add
outsl
fdivs
adc
mov
jbe
mov
xor
ret
adc
mov
xchg
sub
pop
adc
in
shl
pop
or
jo
vmovapd
pop
cs
cli
scas
mov
dec
add
adc
hlt
xchg
aam
or
and
cmpsl
push
sbbl
sub
data16
pusha
add
xchg
je
xchg
fsts
aas
cltd
cmp
cmp
jmp
jp
ja
and
das
xchg
fistps
jne
imul
dec
es
icebp
outsb
aas
xchg
cmp
push
fdivs
mov
sbb
scas
jnp
ja
ljmp
ret
sbb
imul
shl
je
adc
cmp
fidivrs
addb
filds
push
inc
adc
sahf
aaa
mov
dec
dec
ja
maskmovq
idivl
sbb
cltd
shr
sbbb
jo
out
orb
mul
jns
or
add
ja
cltd
pop
mov
pop
iret
inc
xor
or
nop
rclb
or
push
or
out
ficoml
cmp
dec
rolb
fidivrs
inc
stos
mov
cltd
decb
iret
pop
and
arpl
lret
cld
repnz
jb
loopne
test
push
mov
ret
xor
inc
cmp
push
fnstcw
push
fstl
fs
and
add
repnz
push
cwtl
fildl
pop
icebp
hlt
data16
rolb
lcall
call
int
ljmp
add
aam
aam
mov
jne
outsl
je
cmpsb
xor
sbb
xchg
mov
aad
outsl
out
mov
cmp
mov
mov
stos
into
xchg
dec
call
pop
pop
imulb
jns
mov
and
lods
and
lcall
mov
or
push
scas
lods
jge
ja
mov
int
stc
jo
jg
xchg
cli
fsts
sti
xor
shrb
cmp
or
sbb
fstp
adc
jnp
lds
mov
mov
je
xor
fsts
adc
aas
jae
test
adc
mov
into
popa
fidivl
mov
cmp
repz
dec
lea
xchg
fists
sbb
mov
mov
xchg
cld
adc
push
sbb
push
or
push
xor
mov
jb
mov
fidivl
or
jmp
cmp
and
divl
mov
sub
jns
sbb
out
inc
xchg
jne
jo
aad
mov
jb
rcrl
stos
pusha
jno
je
mov
insl
jmp
mov
pushf
inc
leave
lcall
sub
mov
pushf
cmp
xor
popf
cmp
mov
sub
mov
mov
dec
pop
mov
sbb
mov
shl
and
xchg
jg
icebp
ret
dec
mov
jns
in
int
mov
je
xor
lahf
loop
jnp
daa
xor
lret
push
icebp
xor
mov
and
push
sub
xchg
mov
out
outsb
bound
repz
negl
xchg
push
mov
pusha
or
push
call
cmp
add
xchg
inc
or
rcrb
pop
pop
mov
call
jle
fdivrs
jecxz
jge
sub
int3
push
push
ret
adc
sbb
scas
arpl
xchg
dec
fbld
sbb
adc
pop
sub
shll
add
dec
arpl
rcll
cmp
lods
ja
loop
imul
sbb
lahf
inc
inc
imul
mov
inc
cmp
dec
jo
sub
pop
clc
sub
push
mov
cmp
mov
push
xchg
sub
jns
jge
iret
jle
aam
sub
rcrb
ljmp
rorb
xor
shll
lret
sbb
adc
fwait
repz
lahf
jl
xor
adc
repnz
push
mov
add
jmp
pop
mov
push
inc
push
out
jg
gs
in
repnz
pusha
repnz
dec
stos
jge
insb
add
gs
cmp
gs
jl
jae
les
int3
or
mov
push
and
fxch
out
out
enter
shll
xor
dec
push
imul
adc
in
bts
cmpsb
dec
cmc
dec
out
add
cmp
in
xor
sbb
sub
fs
out
mov
inc
and
cmc
lods
test
xor
nop
mov
icebp
inc
stos
ss
dec
mov
mov
pusha
mov
outsl
mov
icebp
test
out
or
mov
rcrl
xor
xchg
xor
pop
outsb
add
movsb
pop
pop
in
cmp
daa
rcl
mov
repnz
into
aas
pop
out
test
popa
mov
inc
scas
xor
push
sti
dec
jb
cmp
push
lds
sub
addb
dec
addr16
dec
les
cmp
fldt
sub
jnp
jnp
and
stos
add
popa
push
leave
subb
pushf
adc
nop
das
add
push
fwait
pusha
mov
arpl
mov
xchg
call
push
in
test
xor
mov
sbb
lods
dec
call
imul
hlt
push
das
xor
in
mov
out
xchg
lret
inc
or
pop
pusha
sub
jnp
jbe
or
ret
adc
xchg
adc
imul
jmp
outsb
nop
mov
jae
jno
je
movl
dec
mull
xchg
inc
out
xorb
mulb
cli
adc
lods
sub
xor
or
mov
movsl
adc
cmc
lret
inc
fs
cmp
mov
cltd
bound
or
inc
push
jg
mov
int3
pop
mov
in
push
dec
push
inc
fs
mov
mov
out
pop
cmpb
loopne
push
dec
lret
xchg
cltd
xchg
insl
addr16
fcmovu
data16
out
jb
sbb
mov
pop
daa
add
sahf
cltd
xchg
sub
iret
pop
rcr
xor
inc
cmp
enter
sbb
addr16
inc
dec
and
dec
add
fbstp
dec
lahf
fcomps
sub
ja
push
inc
adc
or
push
lods
pop
sub
lahf
jo
fucomp
inc
sbb
sbb
jg
jecxz
sub
mov
repnz
imul
out
pop
xor
mov
pop
xor
jo
es
nop
in
mov
pushf
mov
mov
pop
cmpsb
inc
inc
xor
fstpl
xchg
push
call
hlt
mov
pop
lods
or
mov
inc
movl
test
icebp
andb
lcall
movsl
out
enter
lds
rcrl
fwait
xchg
mov
aam
or
cmp
int
stos
push
push
cltd
pop
sbb
push
jbe
bound
sub
and
mov
test
mov
sbb
inc
xchg
clc
mov
les
in
ljmp
and
mov
mov
inc
pusha
cli
dec
mov
lods
lahf
call
fldt
adc
fwait
lods
or
adc
movsl
push
ljmp
mov
dec
dec
xchg
cmp
or
mov
mov
shlb
imul
cli
int3
jecxz
push
and
fnstenv
fildll
inc
out
cwtl
sub
push
cmp
mov
mov
lret
daa
mov
int
fcomps
or
aad
sub
or
mov
out
imul
out
xchg
push
sahf
push
popa
sub
xor
repnz
loopne
aam
and
lret
fidivs
in
xchg
dec
fisttpll
dec
arpl
dec
in
inc
mov
mov
inc
add
out
cmpb
sbb
mov
jae
mov
jp
dec
xchg
dec
mov
jne
bound
push
je
cltd
inc
pop
negb
xchg
pop
into
fnstcw
push
test
jo
add
jnp
dec
lret
out
jo
xor
pushf
loope
push
fists
loop
mov
jecxz
je
sbb
mov
mov
jb
push
outsl
xchg
mov
inc
jae
movsb
jb
and
into
fs
xor
and
mov
xchg
add
inc
xor
lahf
mov
pop
or
cs
pop
or
push
insb
dec
pop
movsl
push
mov
xchg
mov
ljmp
sub
inc
mov
movsb
adc
out
ret
pop
roll
push
pop
mov
push
aam
sarl
sahf
mov
ficoms
and
imul
pop
cmp
mov
push
addl
ja
jp
aam
js
jp
add
inc
cmc
inc
roll
mov
cmpsl
pop
mov
sub
adc
int3
add
and
clc
xchg
pop
adc
cmpsb
andb
xor
jae
mov
inc
jmp
sbb
push
xor
ret
jmp
notb
mov
addr16
push
in
mov
sbb
xor
outsb
shl
std
pop
push
out
fsts
xchg
pop
int
xchg
test
xchg
add
scas
inc
mov
lods
xor
sub
ds
inc
add
icebp
or
push
clc
outsl
js
daa
push
scas
jecxz
mov
outsl
popa
sub
and
adc
and
adc
popf
pop
and
pop
scas
pop
add
fincstp
fldcw
mov
shrl
sbb
or
aad
scas
jns
inc
fld
bound
pop
jb
pop
ret
push
or
sub
mov
jbe
gs
das
les
ret
or
sbb
sub
call
cltd
jne
pop
rcrb
outsl
mov
bound
pop
es
mov
jp
test
dec
jo
out
roll
and
and
fidivl
or
out
nop
shrb
test
dec
lret
pop
stos
mov
mov
jp
add
or
mov
in
pusha
mov
cmp
out
and
lods
sahf
pop
and
adc
bound
in
pop
dec
fists
or
and
lds
mov
pop
jecxz
pop
mov
xor
sbb
lock
mov
aaa
iret
mov
adc
or
sahf
push
sbb
aam
mov
xchg
push
dec
aas
jmp
int
dec
cmp
jmp
ret
mov
movb
xchg
int
mov
in
aam
in
jp
pop
inc
add
jo
sub
pop
fwait
clc
mov
push
pop
es
arpl
inc
mov
cmpsb
or
lock
ret
inc
cld
popa
movsl
ret
lock
mov
dec
pushf
ret
mov
fnstsw
cmp
imul
shll
push
mov
in
enter
mov
or
push
mov
mov
cmp
negl
lds
and
jmp
stos
fcomip
lret
jb
enter
push
popa
sub
loope
xchg
into
dec
sub
ret
push
sbb
mov
dec
sahf
cmpsb
out
rorb
insb
stc
jp
push
enter
or
lahf
mov
out
mov
lea
mov
stos
mov
inc
ret
dec
mov
pop
fwait
push
icebp
ficompl
fwait
ret
ds
dec
cmp
xchg
call
cmp
xchg
jno
stc
mov
inc
or
cltd
mov
adc
or
adc
push
in
mov
or
dec
mov
fwait
lret
jae
and
hlt
jp
jecxz
cmp
ss
out
xchg
add
dec
insb
pop
or
pop
dec
subb
cmp
movsl
imul
pushf
adc
sti
cld
cmp
push
xchg
inc
adc
out
inc
dec
fs
decl
or
nop
push
or
jg
loopne
aad
pop
and
mov
testl
xor
adc
out
loop
jg
mov
sbb
or
es
dec
mov
jb
shlb
jns
jg
add
insl
sbb
cld
std
les
sbb
daa
into
push
in
sbbb
pop
scas
arpl
push
popf
inc
icebp
mov
xchg
test
mov
xor
sub
sub
mov
add
lcall
dec
pop
dec
fisttps
mov
gs
pmulhw
std
jb
push
divl
sti
lret
inc
ficoml
xchg
add
and
mov
and
fisubl
push
jge
jne
push
sbb
out
fsubs
movsb
es
test
sbbb
inc
and
in
inc
mov
sub
bound
jmp
mov
and
push
aas
pushf
xchg
push
sub
test
dec
repz
lods
ss
aaa
pop
dec
jecxz
jb
neg
test
fmuls
pushf
aaa
cmpb
xchg
aad
add
imull
cwtl
out
cld
push
and
mov
and
inc
xchg
loope
lahf
jge
rorb
jns
mov
mov
mov
mov
mov
jmp
sub
inc
sarl
pusha
dec
aad
sub
adc
mov
iret
inc
repz
insb
or
dec
adcb
push
aaa
add
pop
movsl
ja
cmp
std
ss
out
packssdw
nop
push
add
and
adc
out
dec
mov
inc
hlt
mov
clc
add
outsl
push
loopne
movsl
mov
inc
xor
pop
clc
in
push
test
into
mov
loop
ja
push
mov
in
xchg
add
add
jmp
mov
nop
push
xchg
test
bound
ja
jp
xor
jae
out
xchg
frstor
xchg
gs
xorb
pop
jl
xchg
and
or
fcompl
add
mov
cmp
ja
popf
or
ds
push
outsb
sbbl
loopne
pop
jae
jle
fidivrl
add
movsb
pop
outsb
mov
fdivrl
jg
mov
jmp
ret
hlt
sbb
scas
pop
or
sbb
add
adc
fidivrs
adc
andl
sbbl
push
xchg
push
push
dec
test
push
push
popa
xor
mov
aaa
sbb
cmp
sub
jg
add
cmp
dec
clc
dec
sbb
cli
dec
jge
mov
lret
gs
push
xchg
data16
push
test
and
dec
adc
and
jmp
clc
pushl
mov
or
pop
xchg
pop
mov
mov
mov
sbbl
loopne
int
mov
pop
xchg
sbb
mov
and
popf
les
jne
ror
sti
cmpsb
push
add
adc
notl
pop
xor
push
and
add
sub
lea
mov
aad
mov
fcmove
push
cmpsb
add
pop
jnp
sub
pushf
mov
shrl
add
jno
adc
mov
outsb
push
adc
mov
inc
int3
das
inc
push
sub
mov
lods
popf
out
mov
dec
les
cmp
rorl
mov
hlt
call
push
add
inc
push
cs
push
inc
mov
xchg
or
pop
mov
scas
ja
cmpxchg8b
movsl
mov
in
icebp
pop
push
fldcw
test
pusha
mov
pusha
pop
jne
xchg
sbb
mov
aas
out
out
insl
repnz
xchg
pop
insb
sub
ret
and
or
or
sub
inc
test
mov
movsb
sti
dec
shlb
fadds
sbb
lods
ret
sbb
mov
call
pushf
and
ss
cltd
aad
add
and
cld
mov
mov
or
js
pop
fisubl
jo
sub
and
or
cmp
xchg
popf
icebp
sbb
push
dec
std
imul
rcl
xor
pop
add
adc
sbb
xchg
push
and
xchg
pop
sbb
enter
sub
in
sbb
or
test
push
inc
sbb
lret
sub
je
adc
inc
gs
test
loop
mov
jge
into
mov
add
or
xor
add
cli
test
sbb
jl
loope
xlat
xchg
pop
je
pop
sbb
push
enter
ret
dec
cmp
inc
mov
and
iret
or
lret
sub
sar
jp
pop
movb
cmpsl
fwait
push
scas
arpl
push
pop
test
inc
dec
popl
jle
or
mov
in
out
xor
iret
outsl
xchg
cmp
inc
adc
stos
test
inc
mov
mov
rcrl
push
shll
mov
inc
dec
adc
aaa
push
jo
dec
pop
cmp
sti
push
lea
and
stc
clc
loopne
pop
jnp
out
fstpt
addl
ljmp
push
and
sti
mov
mov
adc
mov
mov
lret
sub
cmp
js
fidivs
sub
into
jp
bound
xchg
fwait
gs
inc
or
mov
and
jns
popf
cwtl
in
xchg
jnp
cmp
mov
sbb
pop
sahf
mov
loope
xchg
popf
stos
push
or
test
outsb
fs
cli
xchg
push
mov
daa
movsl
mov
movsb
or
pop
imul
dec
mov
mov
orl
and
add
subb
push
pusha
xchg
test
mov
ds
or
xor
bound
scas
icebp
pop
popa
adc
iret
push
inc
in
xchg
mov
dec
push
mov
mov
jle
pushf
cmp
mov
icebp
pop
xchg
xor
or
enter
jg
pop
sub
jp
mov
fs
xchg
lds
shrb
mov
pop
cs
add
adc
xchg
je
cmp
sahf
push
jnp
adc
inc
inc
lods
das
fisubrl
ret
dec
push
mov
cmpsb
dec
mov
clc
sub
or
push
stos
cmp
add
push
mov
out
dec
scas
jl
test
mov
shrl
outsb
loop
outsl
enter
xchg
push
xor
mov
into
out
fbld
lret
mov
hlt
roll
sbb
mov
je
xchg
xchg
dec
in
test
lods
cwtl
or
repz
enter
into
or
aaa
mov
or
xorb
sbb
popl
xchg
push
jl
add
and
cli
mov
jle
or
ret
pop
lods
cmp
sbb
test
dec
jmp
mov
cltd
push
xor
nop
popf
loope
xor
jmp
in
cmp
jnp
xchg
inc
sarl
idivb
pop
fisubs
and
push
sti
xchg
or
popa
push
push
insb
outsb
pop
lods
imul
mov
sub
dec
cmp
insl
outsl
mov
jmp
push
out
cli
jmp
jae
mov
cltd
dec
outsl
ja
scas
pop
push
dec
out
xchg
cmp
aaa
into
jg
lahf
mov
pop
filds
xlat
icebp
add
adc
jo
cmc
pushf
jg
js
dec
loop
add
data16
mov
test
mov
push
xchg
sbb
fdivr
das
popa
ss
pop
mov
pop
int3
mov
scas
inc
cmpsl
enter
cli
lea
imul
add
shll
lock
sbb
lcall
in
cmp
sub
push
lds
jne
cmp
into
xchg
or
leave
push
fnstenv
je
xchg
sbb
out
inc
and
pop
imul
shll
add
vunpcklps
cmp
push
xchg
mov
dec
subl
add
sbbb
fsubs
jae
ret
lods
and
jg
dec
or
push
xchg
ljmp
arpl
or
out
jecxz
loop
dec
shrb
ret
repnz
xor
in
call
inc
pop
outsl
mov
xlat
aam
xchg
xlat
loope
dec
or
push
and
inc
mov
or
adc
and
push
dec
push
cwtl
push
mov
pop
cmpsl
shrb
loopne
jno
mov
jno
cmp
scas
divl
int
and
xor
repnz
js
xorl
shr
lret
cmc
or
bound
mov
pusha
enter
jns
lods
lret
cmp
mov
xor
in
cmpl
cmp
xlat
int
push
xchg
and
pop
lcall
dec
ficoml
xchg
jg
arpl
fsubl
fstpt
loop
movups
add
je
into
jns
mov
or
mov
dec
cmp
into
mov
xchg
add
jne
sbb
sbb
stos
jo
incl
outsl
push
lods
xor
sbb
push
xor
and
xlat
jae
adc
arpl
cs
xor
aad
mov
pop
jo
dec
mov
jo
subl
push
out
shll
adc
sbb
mov
into
arpl
jnp
jbe
arpl
pop
aad
jae
stc
sub
mov
aam
pop
into
test
cltd
les
scas
pusha
add
mov
bound
cmpb
imul
lret
adc
or
icebp
cmpsl
jle
scas
cmpsl
ljmp
mov
mov
decl
or
mov
push
arpl
into
sub
xor
into
daa
out
fcomps
cmp
out
rorl
mov
jbe
ficoml
mov
das
mov
mov
xchg
fsubrp
movl
inc
fisubrs
xchg
loope
pop
xchg
dec
xor
adc
adc
bound
sub
xchg
add
sub
jno
int
xchg
dec
mov
inc
cwtl
mov
sub
aas
or
dec
test
mov
les
mov
lds
test
push
mov
or
ds
or
test
xlat
xchg
adc
das
pop
xchg
jbe
ss
test
push
sti
pop
sub
adc
cltd
add
pop
jg
mov
stc
xchg
or
cltd
cmpsb
xchg
pop
sub
add
in
rol
mov
mov
jo
outsl
cmp
mov
push
adc
or
pusha
xor
mov
test
dec
fprem
int
shrb
lret
rcrl
test
mov
push
push
out
jg
cmpsl
mov
addr16
dec
jno
add
push
repz
aam
pop
push
lea
fistps
je
mov
push
out
gs
mov
cs
sub
inc
mov
lcall
icebp
dec
adc
ja
int3
dec
mov
out
insl
fdivs
mov
test
push
or
es
stc
out
ds
andl
mov
xor
lcall
movsl
stos
cmc
repz
incb
jns
mov
cmc
stos
sub
jns
cmp
mov
daa
test
push
andl
dec
adc
pop
inc
dec
push
lret
or
push
out
decb
push
daa
scas
cmp
or
xchg
cmpl
call
pushw
and
adc
cli
jl
xchg
scas
fsubrl
jb
andl
stc
or
lret
dec
xor
push
mov
cli
pop
dec
push
jmp
mov
dec
push
adc
and
gs
pop
cmp
mov
or
and
mov
sti
mov
jo
pusha
jne
mov
pushf
mov
loope
or
xor
repnz
or
adc
outsb
xor
nop
imul
test
popa
les
sub
movsb
cwtl
jne
adc
xor
mov
test
fmuls
lcall
ja
scas
mov
push
jo
push
push
sub
dec
hlt
nop
aaa
jecxz
xor
aad
mov
into
out
mov
dec
out
jecxz
xchg
lret
icebp
inc
and
xor
loopne
ds
inc
arpl
sub
aas
popa
pushf
mov
sub
enter
sub
add
fadd
aas
push
js
js
sub
stos
lahf
pusha
xor
pusha
pop
or
or
sub
pop
xchg
andb
shlb
lahf
jmp
jne
inc
fldt
dec
or
rcrl
arpl
pop
cld
ret
in
insb
and
xor
add
lock
ret
call
shl
in
xor
jb
push
pop
cmp
rolb
cmp
aaa
std
lahf
jecxz
cmp
and
push
dec
dec
pop
mov
mov
cmpsb
popa
ret
sbbb
or
cmp
cmp
inc
call
cld
in
fbstp
add
das
jmp
mov
jb
xchg
shll
or
and
lods
lods
adc
add
andl
mov
repz
scas
cwtl
push
insl
rcrb
test
mov
mov
ja
sbb
pop
xchg
sbb
test
fisttpll
mov
or
mov
and
aaa
in
lret
sub
push
lret
fdivs
int3
xchg
ret
out
cmpsb
int3
loop
fiaddl
out
shll
dec
aaa
testl
adcl
pop
repz
int
sbb
mov
jno
pop
xor
fmuls
loop
bound
and
lea
adcl
enter
inc
es
push
imul
mov
sbbb
repz
jl
sub
jmp
hlt
dec
daa
mov
pop
pop
div
int
imul
add
in
insb
mov
push
jne
sbb
mov
mov
fdivl
stos
xor
aaa
mov
adc
pop
jecxz
pop
or
xchg
loop
lahf
mov
into
test
loope
jg
adc
icebp
add
or
aad
pop
mov
add
mov
out
roll
sbb
fs
cli
sti
inc
shll
jns
cld
dec
cmp
pop
lock
dec
xlat
adcb
jb
pop
daa
imul
jne
mov
sbbb
jecxz
int3
mov
inc
pop
sti
outsb
mov
ret
adc
mov
dec
icebp
mov
cmp
mov
mov
or
and
dec
and
sbb
mov
out
pop
push
pop
xlat
enter
inc
jne
inc
adc
popa
mov
jae
xor
mov
call
mov
cmp
cmpsb
add
jns
cmp
push
mov
xor
jns
dec
fldenv
inc
xor
xchg
stos
iret
lahf
aam
mov
mov
inc
mov
push
mov
scas
lea
fcompl
push
mov
je
cmp
mov
aaa
xorb
lods
pop
test
popf
xchg
aaa
scas
jecxz
pop
and
sub
mov
xor
aas
fiadds
jg
mov
aaa
mov
pushf
imul
iret
and
xchg
fisubl
rcrb
outsb
rcll
stc
daa
icebp
jae
inc
repz
mov
cli
int3
jo
jge
jl
pop
adc
je
scas
jmp
popf
mov
iret
xorl
mov
call
push
push
iret
sub
imul
mov
push
pop
ljmp
sub
mov
loope
imul
lret
mov
jg
or
gs
mov
outsb
push
in
lods
and
in
or
pushf
mov
mov
push
stos
into
rcll
mov
push
pop
xlat
int
test
loop
test
lret
push
ljmp
or
dec
test
shrb
sahf
pusha
mov
jo
push
mov
dec
imul
push
test
in
and
roll
sahf
pop
and
jae
fists
fsubl
mov
and
lret
jge
mov
xorb
inc
lods
ljmp
xchg
push
int3
and
or
daa
mov
push
xchg
pop
subl
xor
out
pop
iret
test
decl
jge
addr16
add
loopne
mov
jg
dec
cmpsl
jl
xor
scas
pop
mov
out
insl
or
jo
mov
and
js
lods
cmpsb
ret
push
mov
cmp
push
sub
push
cmpb
mov
dec
out
xor
inc
jnp
add
sbb
call
jl
inc
out
jns
cmc
jp
subb
inc
jnp
dec
mov
es
add
data16
mov
xchg
sbb
lock
popf
nop
arpl
or
imul
mov
adcl
jl
or
push
cmpb
fcoms
mov
and
movsb
mov
aad
testb
push
sub
mov
aas
into
movsb
js
aad
cltd
xchg
test
addb
push
push
pop
ljmp
ja
lcall
push
sub
mov
xchg
mov
mov
cmp
xlat
cld
cwtl
ror
mov
adcl
jl
outsl
sbb
pop
mov
jae
lods
cmpsl
push
jnp
std
rorb
mov
loope
sbb
or
ss
jae
push
mov
xchg
jmp
repnz
das
shlb
dec
jle
icebp
int
jb
fsubrs
pop
push
pop
xor
cmpsl
sbb
push
scas
mov
mov
xchg
pop
bound
adc
inc
xchg
jmp
jb
push
ja
push
mov
les
les
pop
mov
decb
adc
mov
jmp
ja
mov
xchg
in
ss
adc
sub
fists
data16
mov
loopne
or
mov
idivl
jbe
cmp
adc
fimuls
andl
dec
lds
lock
mov
out
cmp
inc
cmp
push
clc
popa
call
or
negl
call
insl
scas
sahf
rorl
push
jp
stos
cmp
xchg
fistpll
movsb
fisubs
jno
jmp
adc
call
ret
xor
cmc
mov
push
outsb
in
repz
inc
call
mov
icebp
xchg
sbb
and
mov
aaa
into
jb
dec
iret
and
sysret
in
add
add
mov
and
add
or
mov
sbb
xlat
insb
in
adc
cli
imulb
lret
outsl
scas
push
cmp
insl
sti
cmc
adc
push
and
sbb
insb
dec
mov
jecxz
cmp
into
cmp
jne
addr16
inc
mov
pushf
ljmp
inc
loop
pop
outsl
pop
lcall
pop
or
or
lret
sbb
add
mov
pop
push
and
ljmp
push
sub
pop
cmp
mov
pop
pop
push
inc
cs
jge
cli
movsb
jge
mulb
mov
arpl
push
inc
or
xchg
cmp
xor
cmp
inc
jl
mov
in
mov
lcall
pop
push
ret
or
xlat
inc
bound
jecxz,pt
pop
mov
int
mov
cltd
or
je
cmp
adc
cmp
mov
frstor
int3
sbb
jnp
sbbb
pop
mov
cltd
das
jbe
inc
jg
pusha
in
pop
pusha
in
cld
pop
jbe
loope
jl
pop
ja
xchg
hlt
add
and
mov
gs
jecxz
int3
inc
mov
in
arpl
dec
popl
sub
dec
push
and
lret
cmpsb
xchg
iret
pop
push
test
mov
adc
push
fcoml
or
jg
lcall
cwtl
inc
mov
and
lret
dec
ret
push
mov
cmpsb
das
loope
adc
pop
adc
dec
out
xor
bound
movsl
add
imulb
mov
mov
or
mov
fxam
les
scas
sbb
dec
pop
pop
pop
cmp
add
in
leave
out
add
iret
push
shll
das
inc
out
jne
xor
lods
mov
or
jmp
sub
mov
sti
mov
int
out
cmpsb
dec
out
pop
or
jbe
bound
add
mov
jbe
aas
loopne
out
push
test
negl
adc
adc
std
or
fs
insl
pop
movsl
lcall
aas
cli
add
sbbl
inc
jg
sbbl
xchg
es
call
add
push
cmpsb
add
inc
ret
ficompl
push
xor
xor
xor
jp
aaa
shll
sbb
push
rcl
pop
and
adc
inc
pop
lcall
push
loop
push
jl
pop
inc
push
add
xchg
nop
call
and
es
xchg
push
adc
xchg
ret
int
mov
jle
fwait
or
loope
adc
or
mov
add
add
jb
insb
imul
fildl
push
dec
pop
cmpsb
adc
push
jns
push
jl
roll
add
icebp
ficompl
test
aaa
jns
adc
inc
pop
pop
xchg
mov
xchg
fists
ss
call
and
or
inc
ds
lcall
shlb
sbb
daa
mov
in
cmp
mov
cmp
add
lcall
scas
ja
fidivl
xor
adc
lret
adc
push
in
or
xor
mov
dec
jo
scas
shll
std
xor
sbb
push
inc
jnp
lock
mov
enter
mov
mov
adc
push
ret
and
inc
ficoml
push
pop
shrl
mov
cmp
xchg
lods
test
test
rcrl
cwtl
xchg
lcall
push
jo
loopne
cli
cmp
jl
cmp
test
jno
push
mov
popf
add
outsw
fbstp
push
add
pop
addr16
or
pop
inc
mov
in
fbstp
mov
fisubrl
mov
stc
fdiv
loop
imul
sarl
or
cmpl
pop
mov
cwtl
push
pop
dec
cmpsl
sarl
cmp
or
or
push
insl
shl
jae
adc
dec
jle
scas
ljmp
cmpsb
scas
mov
repz
mov
and
dec
pop
nop
and
dec
scas
mov
dec
mov
adc
sub
add
pop
mov
daa
fisubl
jle
mov
cld
aam
mov
sbb
stos
pop
add
dec
adc
test
int
clts
lds
xor
xchg
call
scas
jecxz
sbb
push
dec
enter
xor
push
mov
add
adc
mov
jp
sbb
push
push
bound
js
sbb
ret
xchg
sub
jl
xchg
inc
inc
fsubl
punpckhdq
xor
xlat
xchg
mov
movsb
add
push
andl
mov
and
mov
ja
and
xchg
push
pushf
lods
sbb
sub
pop
and
push
dec
and
fmuls
or
hlt
lahf
ds
sarl
sub
jg
mov
dec
das
pop
loopne
pop
out
cmp
push
sub
out
xchg
jle
dec
mov
jb
loop
push
lods
fistpl
jl
aad
out
fisttps
jecxz
idiv
fs
jl
xchg
fcompp
fcomps
std
push
mov
adc
adc
into
dec
push
xchg
mov
push
lret
fstpl
mov
pop
scas
mov
add
dec
mov
shll
push
adc
mov
imul
test
push
jbe
cmp
stc
pop
sbb
push
movsb
stos
cmc
mov
inc
xchg
dec
fidivrl
insb
ficomps
push
and
sbb
dec
adc
aas
shlb
in
lock
test
das
pop
mov
xchg
mov
lahf
mov
cld
sbb
das
jp
pop
mov
insb
dec
cmp
pop
scas
and
cmp
sub
ss
les
shl
enter
scas
cmp
xchg
out
cs
into
cltd
mov
sbbb
pop
in
sbb
addr16
shll
push
jnp
idivb
pop
dec
inc
sub
mov
in
rcrl
lods
add
addr16
dec
ja
dec
aaa
dec
das
xor
inc
mov
pop
cmp
mov
and
mov
lock
dec
test
mov
push
data16
notl
enter
mov
mov
loop
das
out
loopew
sarb
popl
mov
test
flds
addl
shrl
aad
movsb
mov
adc
scas
rcll
xchg
es
popa
divb
fs
xchg
or
pop
xor
cli
es
daa
push
gs
push
inc
xor
cli
es
in
sub
mov
mov
sub
mov
out
xchg
fistpl
cmp
xor
inc
push
pop
bound
test
jl
dec
lds
mov
hlt
mov
lcall
adc
sbb
repnz
mull
mov
pop
sbb
inc
jle
in
cmp
test
mov
add
jae
push
repnz
add
mov
mov
scas
out
movsb
jmp
adc
push
push
jecxz
loopne
pop
fidivs
sub
das
push
and
cmp
dec
cmp
add
cmpsb
sub
daa
inc
mov
lahf
adc
pop
xor
negb
add
cwtl
push
aad
leave
cmp
mov
pop
fcmovnu
cmpl
loop
cmp
aad
xchg
inc
das
lock
ds
mov
lret
or
adc
icebp
int3
mov
pop
arpl
mov
sbb
mov
push
fistpl
xor
push
inc
jmp
ss
cs
loope
addb
dec
mov
pop
les
dec
hlt
in
xlat
int
addl
dec
inc
xchg
mov
and
dec
call
cwtl
aad
mov
pushf
fs
or
imul
jmp
cmpsb
mov
sub
hlt
test
inc
mov
mov
pop
pop
pop
or
sub
and
xor
shrb
jae
push
cmp
mov
xchg
pop
jb
push
cmp
push
sub
or
bound
leave
jnp
rcrl
shl
cmp
push
mov
mov
fimull
push
pushf
inc
sbb
out
addr16
psadbw
loop
pop
ret
imul
inc
inc
pushf
outsb
dec
push
pop
mov
push
push
out
popf
pop
data16
decl
loope
pop
mov
pop
int3
ret
in
pop
cmp
xor
icebp
or
repnz
push
pop
pop
or
xor
adc
mov
sub
lret
mov
sbb
nop
std
aad
mov
pop
insb
ficompl
mov
or
sbb
pop
fidivrs
aam
and
scas
mov
pop
adc
xor
mov
push
mov
push
push
pop
bnd
and
pop
mov
int3
stos
stos
neg
inc
das
ret
stos
bound
subb
insb
mov
fisubs
imul
inc
xchg
inc
add
sub
lret
fwait
dec
bt
mov
sub
enter
loope
push
test
fs
push
iret
lods
sbb
scas
xor
es
incl
arpl
push
mov
push
addl
xor
adc
sbb
xor
xor
filds
xor
loopne
outsb
aas
insl
push
imul
sub
pop
mov
mov
sub
nop
cmp
call
movsl
sub
cmp
jae
dec
jle
adc
sub
lahf
outsl
sub
fwait
and
sbb
out
adc
push
sarl
pop
out
repz
sahf
lods
scas
xchg
out
insl
and
cmpsl
pop
cmp
sub
lcall
lock
sar
dec
rcrb
mov
add
cwtl
lret
sbb
sbb
pop
mov
inc
bound
mov
stc
jne
jnp
inc
mov
in
dec
xor
fcompl
and
inc
int
inc
cwtl
andl
lret
cwtl
or
paddb
pop
inc
jl
in
cmp
pop
pop
or
jmp
imul
jbe
dec
cwtl
dec
cld
adc
cmpsl
fmull
movsb
addr16
int
lds
mov
mov
add
popf
imul
xchg
xchg
shll
out
jb
push
mov
sti
pusha
jno
dec
or
pop
lcall
test
inc
inc
push
ljmp
out
scas
adcl
ret
aad
lock
cmp
jo
icebp
ret
daa
lea
add
mov
inc
ljmp
stos
inc
sbb
and
lahf
jl
jl
pop
or
popf
mov
pop
pusha
cmp
inc
mov
and
push
inc
pop
pop
add
xchg
out
jns
or
or
sahf
sti
sub
or
mov
push
sbb
into
sbb
imul
adc
daa
dec
nop
outsb
cmpsl
inc
pop
sub
in
in
mov
mov
test
int3
mov
push
adc
or
shr
loope
push
ror
test
inc
pop
ret
mov
shr
fistpll
test
enter
frstor
jl
jmp
xchg
mov
orb
or
add
out
iret
cmp
hlt
aas
dec
push
mov
mov
jp
mov
je
jo
addl
insb
sub
mov
jno
ljmp
and
jne
inc
aam
sbb
push
jmp
fadd
mov
pop
push
adc
push
cld
pop
cmp
lcall
popa
dec
jae
pusha
mov
in
and
mov
cmp
cmp
js
mov
ficoms
stc
sbb
xchg
leave
popf
cltd
xlat
movsb
push
ret
mov
shl
sbb
cmpsl
adc
insl
or
jl
sbb
and
fs
or
xchg
sbb
mov
out
dec
sub
leave
sahf
jb
push
cmp
jne
mov
out
add
dec
pop
sub
xorl
push
dec
mov
sub
out
inc
pop
pop
imul
mov
inc
popf
imul
pop
sbb
out
jb
orb
mov
and
rorl
ss
jns
inc
insl
jmp
icebp
jmp
or
outsl
jmp
mov
movsl
pop
test
mov
call
xor
enter
mov
iret
mov
cmp
mov
inc
sbb
mov
data16
mov
repnz
jp
mov
mov
movsl
test
aad
push
cltd
shl
dec
sbb
jle
lods
sbb
mov
xchg
adc
push
leave
inc
sbb
or
or
xchg
sbb
jp
outsl
fcoms
adc
fcompl
mov
cmp
fs
mov
test
and
idivl
dec
lods
rcll
xchg
and
mov
cli
movl
dec
adc
mov
test
jmp
inc
mov
jecxz
test
jns
es
push
jo
ret
jecxz
push
or
into
xchg
inc
add
push
add
xchg
sarl
cltd
mov
sbb
insb
pop
sub
cmp
pop
jp
aad
pop
lock
xchg
shlb
insb
xchg
ljmp
sarb
shr
mov
pop
lods
mov
dec
xor
stc
int
lock
dec
das
cmpsb
xchg
xchg
pop
xor
rclb
decb
je
in
fstpt
mov
les
out
and
das
xor
lcall
sub
sbb
test
push
int
hlt
mov
ds
ja
add
mov
pop
cli
mov
mov
add
popa
xchg
dec
in
dec
mov
or
lock
movsb
jb
jge
loope
add
clc
or
lcall
pusha
cmc
pop
inc
or
aas
mov
pop
adc
mov
stos
push
push
js
cmp
add
js
mov
add
in
mov
mov
inc
mov
faddl
test
loope
sbb
adc
or
add
pop
out
jp
mov
and
test
inc
add
sbbl
fsubrs
jno
add
mov
arpl
ljmp
stos
jno
mov
repnz
add
or
sub
rorb
cmp
decb
mov
out
stos
lds
dec
and
mov
sub
ret
insb
ret
scas
decl
dec
movsb
sub
aaa
cmc
add
push
or
sbb
mov
xor
and
sbb
scas
xor
popa
adc
sarl
dec
mov
and
call
lds
in
cli
in
in
bnd
sbb
and
pop
sbb
push
mov
sub
mov
imul
inc
inc
sub
and
add
or
iret
cmpsb
sbb
sahf
add
aad
mov
lock
pop
mov
fsubl
nop
dec
es
pop
jne
xchg
cmp
mov
push
push
inc
mov
cltd
push
sub
mov
pop
dec
pusha
cmpsb
shrl
or
mov
sub
dec
cs
mov
es
inc
mov
arpl
int
cmpsl
das
mov
ss
lret
add
out
mov
cmpsl
xor
cmpsb
add
xorb
dec
or
les
adc
repnz
dec
add
mov
push
hlt
movsb
pop
push
cmp
xchg
adc
or
das
cld
jecxz
frstor
adc
cmpb
std
ret
bound
fstpl
sbb
cwtl
cs
into
inc
xchg
push
cmc
push
aaa
addr16
cld
in
sar
add
dec
adcb
pop
loop
pop
xchg
lods
push
fsubrs
decb
testb
insb
int
or
inc
cmc
fistl
rolb
sahf
idivl
push
bnd
mov
cmpsb
fstl
inc
xchg
les
test
sbb
cmp
in
std
lods
and
add
insb
bound
sub
aas
push
ss
pusha
sbb
adc
pop
or
ja
lods
xchg
dec
das
jo
arpl
fimuls
les
xchg
push
dec
inc
xchg
pop
mov
xor
fwait
outsb
sbb
inc
and
xchg
cmp
lcall
add
cmp
push
push
dec
hlt
sbb
xor
sub
cmp
cmc
shl
or
or
and
loop
stos
adc
jb
bound
mov
mov
adc
add
xor
mov
nop
jae
mov
out
pop
sub
int
js
jmp
jae
out
push
inc
fmuls
jecxz
mov
xchg
adc
loopne
stos
or
out
adc
jp
dec
and
jno
test
push
dec
xchg
mov
inc
or
out
imul
ret
inc
fnstcw
jae
inc
mov
subl
sbb
in
test
shl
leave
xor
adc
add
add
and
inc
movsl
arpl
dec
mov
xchg
mov
and
sub
push
cmp
sbb
andb
dec
mov
push
mov
ja
mov
push
adc
mov
test
jecxz
sbb
jmp
inc
shlb
pop
stc
push
shrb
sahf
sub
or
lcall
std
inc
pop
sub
stos
daa
addr16
movsl
sbb
xor
push
sub
movsb
and
ss
and
out
pop
lret
ret
cmpsl
add
nop
loop
insb
divl
rolb
sbb
maskmovq
notl
orb
jp
sbb
sub
test
push
jns
jmp
cmc
add
add
push
or
jmp
mov
push
aad
sbbb
xchg
stc
xchg
cmpsb
in
js
cmp
mov
mov
fstpl
sub
cmp
idivl
movsl
fisubrs
cld
lods
cmp
pop
xchg
mov
sub
mov
mov
adc
ret
mov
push
mov
das
leave
dec
shrl
jnp
push
orl
push
xlat
fucom
icebp
jle
push
les
sbb
xchg
scas
push
xchg
mov
fwait
mov
mov
sub
sahf
mov
leave
ljmp
add
add
pushf
dec
mov
jecxz
aaa
xor
sbb
clc
leave
mov
push
jbe
pop
lahf
jle
pop
xchg
push
lods
clc
fwait
mov
ret
arpl
aaa
add
scas
or
loop
push
dec
scas
dec
insl
mov
pop
mov
out
sub
push
cmp
xor
mov
lret
shl
into
mov
xchg
inc
fucomip
dec
sbb
mov
imulb
int
mov
jae
bound
jmp
scas
sub
stos
popf
mov
int3
push
jmp
ds
rcl
cli
jge
cld
jg
popf
push
repz
jb
mov
cmp
jb
dec
inc
lock
cmpsl
lods
mov
push
arpl
call
adc
in
lcall
and
dec
test
jbe
je
cs
dec
addl
cltd
lret
aad
sbb
mov
or
je
scas
mov
lods
sahf
mov
ret
mov
add
ds
and
and
mov
cmc
ret
daa
ret
test
push
push
push
stos
cmpl
loopne
nop
int
add
cmp
inc
dec
leave
pop
mov
lods
cmc
adc
add
aaa
aaa
or
xchg
xchg
out
mov
hlt
rcrl
mov
loopne
ss
insl
inc
lea
in
jne
pusha
xor
out
in
lock
lock
addr16
aaa
cli
ror
and
mov
inc
sbb
leave
lcall
ss
cmp
negb
adc
cld
daa
sub
push
xor
mov
push
jge
fdiv
xchg
xlat
sub
pusha
adc
push
aaa
jmp
xchg
mov
sbb
fptan
push
into
sub
mov
lcall
and
lods
out
shrl
cs
dec
adc
push
lcall
adc
inc
fsubrs
std
cmp
pusha
test
ss
and
stc
clc
mov
or
rcll
cwtl
ljmp
mov
pop
pop
fwait
xchg
xchg
mov
cmp
or
jp
cmpsl
mov
dec
test
test
lock
jnp
rcrb
mov
jg
mov
mov
inc
jp
xchg
insl
mov
nop
push
js
aaa
mov
movsb
sti
add
xchg
mov
enter
insl
inc
dec
fildl
ja
cmp
xor
out
adc
cmp
test
jbe
cli
mov
fs
xchg
dec
jmp
fstpt
repnz
insl
cmc
cmp
xchg
fs
mov
inc
pop
sub
icebp
cli
xchg
cmp
cs
push
sahf
push
iret
ja
push
jl
test
cli
and
cltd
or
adc
fistps
aam
neg
add
mov
push
fdivrl
leave
add
pushl
imul
adc
adc
mov
pop
dec
xchg
inc
or
pusha
ret
rorb
dec
pop
xchg
out
adc
mov
orl
inc
mov
jne
cltd
outsb
mov
push
jle
cli
xor
add
cmc
xchg
push
fisubrl
push
cmp
add
les
js
incl
cld
fidivs
ret
xlat
xor
dec
aas
and
loopne
pop
cs
mov
xchg
loop
lea
jne
add
fwait
sub
mov
mov
cmpsb
hlt
fnsave
inc
cli
daa
mov
push
sub
adc
int
add
sbb
add
xchg
adc
std
fstps
and
sub
cwtl
add
enter
or
push
pop
loope
mov
lret
mov
mov
or
out
repz
rcrb
int3
addr16
mov
std
mov
les
test
mov
lcall
fisttpll
xor
mov
jae
std
je
aaa
enter
inc
shll
inc
jne
lods
mov
sbb
lret
shlb
fs
or
or
and
daa
add
lret
mov
fnsave
sub
loope
loop
scas
add
and
pop
jb
aad
xchg
xchg
rcrl
dec
and
shrl
or
adc
pop
inc
scas
jo
out
mov
xchg
popf
pushl
lds
mov
int3
push
cwtl
adcb
data16
outsl
mov
jns
negl
in
inc
and
cmp
aad
jle
add
push
xchg
mov
cmpsl
mov
imul
fsubp
add
adc
cmp
and
and
jne
int
negb
sti
ljmp
movsb
inc
icebp
pusha
mov
sub
mov
js
je
out
pusha
pop
stos
aaa
aam
ret
bound
adc
mov
or
imul
pop
in
test
fnstcw
inc
sbb
or
cwtl
mov
pusha
inc
out
sbb
std
mov
pop
fildll
lds
add
lock
and
xchg
mov
rep
out
cmpsl
cmpsl
fisubl
pusha
pushl
iret
daa
cmpsb
ljmp
adc
dec
push
pop
or
in
loop
stc
jb
lock
cmpsl
adc
and
out
ds
push
mov
out
dec
inc
jbe
jnp
idivl
mov
test
pop
or
adc
cld
dec
jnp
hlt
cmpsl
stos
popa
lcall
cmp
pusha
in
shl
adc
hlt
and
shll
roll
cmpsb
xorl
xchg
mov
mov
icebp
pusha
cltd
xchg
inc
sub
outsb
shlb
mov
sti
cld
and
pop
icebp
and
adc
out
sub
add
sbb
fcoml
leave
shll
cld
sbb
mov
mov
add
daa
pop
mov
stc
filds
mov
lahf
push
movsb
push
push
fstps
push
shrl
xorps
cmpsl
jae
pop
int3
scas
push
dec
movsl
sbb
inc
mov
test
jno
or
cmp
dec
dec
fmul
inc
push
cs
scas
js
arpl
in
in
call
inc
rolb
cmpsl
mov
pop
mov
divl
sbb
mov
cwtl
cmp
pop
int
mov
jo
mov
and
sahf
jl
pop
adc
sub
sbb
in
arpl
fcoml
pop
cs
pop
movsl
dec
ret
dec
fsub
mov
loop
dec
fstpt
adc
dec
jl
add
push
aad
dec
jecxz
mov
sub
ljmp
pop
scas
repz
add
stc
call
int
and
jecxz
sub
sbb
and
cmp
mov
mov
sub
mov
call
out
jnp
js
loopne
scas
ret
outsb
sub
out
rcll
stos
xor
fists
scas
jmp
mov
inc
repnz
xchg
lcall
sub
fdivrs
pop
stc
xlat
jmp
aam
cli
jle
xor
sbb
pop
std
xchg
lods
cwtl
push
sub
ljmp
push
sub
test
pop
push
addl
shll
add
idivb
jno
xor
and
pop
fcoms
and
ret
ror
xchg
sbbl
pop
push
mov
add
test
pop
nop
subl
add
sbb
out
xchg
lea
insb
das
or
mov
pop
fistpll
lods
shrb
adc
in
mov
or
hlt
inc
sti
orl
pop
sub
mov
js
cs
mov
es
sbb
pop
ret
dec
inc
ja
fldenv
mull
pop
xorl
xchg
jno
adc
and
lds
imul
lds
cmp
dec
cmp
mov
push
pop
adc
or
jl
sub
pop
fisttpll
inc
push
lods
xorb
and
and
xorl
jge,pn
mov
rolb
mov
mov
dec
out
cmpsb
outsl
mov
outsl
mov
cmp
int3
or
aam
pop
std
xor
sbb
pop
sub
adc
out
xor
inc
mov
imulb
push
movsl
fisubrs
xor
hlt
jnp
popf
pop
push
push
sbb
leave
wbinvd
sub
inc
mov
jbe
rclb
xchg
sti
pop
ja
mov
xchg
sbb
out
jnp
sub
push
int
lcall
and
add
adcb
insb
js
int
ja
add
stc
lock
fdivp
adcl
cmpsl
pop
test
pop
and
jmp
dec
loop
repnz
push
stc
push
add
pop
sbb
add
fsubp
popf
pop
mov
jge
arpl
out
jp
outsl
out
mov
inc
pusha
xorb
roll
xor
leave
fidivl
mov
aas
fstpl
in
es
mov
mov
clc
mov
mov
inc
pushf
inc
in
sbb
xchg
xorb
jae
insb
es
push
fwait
jmp
lods
mov
jbe
inc
test
lock
das
daa
inc
mov
ljmp
mov
or
loop
pop
mov
shl
popf
fadd
jge
pop
aaa
pop
callw
arpl
jl
dec
and
sub
sub
cmp
into
daa
jne
mov
rcll
xor
jecxz
xchg
xor
sarl
mov
or
mov
adc
inc
add
div
aam
add
mov
mov
loope
add
jno
les
inc
push
shlb
add
add
or
rcrl
stos
xor
pop
movsl
jns
jns
pop
mov
mov
cmp
cmpsb
pushf
cmp
lods
mov
adc
mov
mov
mov
mov
cltd
std
cmp
sbb
rolb
call
mov
out
in
loope
test
adc
mov
xchg
imul
pop
jecxz
cmp
mov
push
add
cmp
jmp
fistpl
pop
out
xlat
ljmp
adc
imul
pop
push
xor
ret
mov
mov
testb
and
and
xor
jmp
mov
dec
sbb
icebp
and
test
mov
out
pop
mov
call
ffree
xor
xor
xor
xor
and
push
incb
enter
and
xchg
dec
dec
loope
cld
mov
stos
movups
test
adc
ficoms
insl
mov
jnp
push
sub
pop
pop
adc
or
call
sub
in
push
mov
xchg
cmp
adc
and
scas
in
inc
aad
push
out
push
ret
lock
xchg
pop
pushl
cli
push
loopne
into
pushf
mov
shl
sub
scas
pop
pushf
mov
fisttpl
scas
xchg
icebp
pop
mov
cmp
dec
push
hlt
or
sub
test
out
test
adc
cmp
sub
jno
addr16
mov
testb
adc
ds
xor
adc
aam
dec
punpcklwd
testb
test
ljmp
mov
outsl
inc
sub
ret
aaa
jno
std
push
ljmp
popf
pop
pop
mov
push
je
js
jae
or
adc
or
sbb
xchg
jge
pcmpeqw
pop
jg
leave
cs
mov
aaa
pop
dec
hlt
cmp
outsb
into
inc
shlb
out
dec
mov
cs
dec
push
es
adc
loope
dec
fisubrl
mov
jecxz
fdivs
mov
cmp
movsl
imul
push
movsb
mov
jge
lock
dec
insl
jge
and
divl
insb
jb
fnstsw
xor
test
int3
push
xlat
repz
divl
jg
mov
fwait
stos
xchg
mov
sub
subb
or
add
mov
scas
cmp
add
add
adc
mov
cmc
std
xchg
imul
xor
jp
loop
cs
data16
stos
shl
arpl
push
sahf
call
sbb
sbb
mov
and
je
cmc
jbe
shll
mov
cli
push
les
fldcw
out
imul
in
jo
sub
push
xchg
stos
pop
sub
pop
clc
mov
jns
cmpsl
call
imul
sbb
xor
ficoms
fmuls
dec
or
or
xchg
inc
xor
gs
stos
mov
stos
mov
push
push
sarl
aaa
jl
pop
inc
mov
and
mov
dec
bound
inc
xchg
sahf
into
dec
negb
arpl
sbb
xchg
sti
xor
pop
mov
cli
mov
fdivl
loope
xchg
cmpsl
mov
mov
push
or
jbe
mov
fsubl
enter
or
jmp
and
arpl
xchg
sbb
jb
pop
fst
xchg
jns
add
xor
sbb
pop
gs
push
mov
cmpl
add
shlb
pop
mov
pop
push
mov
mov
add
dec
sti
int3
notb
ret
xchg
and
xor
mov
insb
push
xor
and
lods
xor
pop
movb
mov
pop
clc
dec
push
jp
and
xor
flds
inc
add
pushf
cli
push
push
xor
push
aas
mov
lods
mov
jbe
lds
fidivrs
in
arpl
rolb
sti
xlat
jb
jno
es
push
dec
sub
test
push
push
ret
subb
xor
inc
ljmp
sti
out
adc
jp
jo
aaa
adc
add
test
jecxz
mov
push
mov
aaa
mov
cmpsl
repz
ret
inc
and
shrb
out
add
rcrb
sub
xchg
xchg
mov
vmulpd
jmp
out
ficoms
arpl
clc
xchg
push
cmpsl
cmp
vpaddw
mov
jg
cmpsb
fidivrl
xor
inc
pushf
xor
loopne
pop
push
xor
sahf
pop
imul
cltd
in
dec
sub
pusha
push
fdivrp
push
sbb
out
mov
push
xlat
mov
inc
test
in
pop
xor
mov
test
push
stos
sbb
lahf
das
icebp
jb
inc
jbe
add
jae
push
stos
sahf
xchg
mov
jle
imull
push
mov
push
mov
popl
jge
iret
aam
or
fndisi(8087
mov
mov
inc
loop
orl
fadds
inc
rclb
popa
inc
insl
sub
fdivl
popa
push
shlb
mov
out
dec
pop
sahf
es
shlb
hlt
mov
jb
push
sbb
in
add
fldt
lea
stc
sbb
in
shll
xlat
or
mov
jno
js
int3
dec
lahf
jmp
pop
xchg
lods
rolb
push
inc
push
cmpsb
lea
loop
movsl
jmp
mov
xor
aaa
inc
ljmp
bndstx
sbb
fwait
out
gs
loope
das
pop
pusha
popf
pop
mov
mov
aad
xor
or
add
pop
xchg
push
xchg
lock
or
roll
cs
and
cmc
pop
inc
mov
nop
ret
cmp
inc
adc
inc
gs
xlat
sub
imul
daa
sbb
mov
shll
push
insb
out
dec
pop
pop
sahf
mov
pop
into
pop
aam
xor
insl
clc
adc
push
jg
pop
fisubrl
jmp
sub
and
out
mov
fidivl
in
fs
cld
in
cmp
push
dec
int
cmp
push
adc
cmp
xchg
mov
int
je
dec
push
int3
cmp
xor
icebp
mov
cmp
ror
imul
sbbl
mov
lcall
push
gs
dec
mov
out
push
data16
xor
add
xchg
stc
pop
push
sub
int
outsb
mov
leave
mov
xor
push
dec
push
jl
jb
sbb
lods
sbb
and
xchg
das
call
ja
outsb
ss
pop
cwtl
cltd
sub
out
push
cmp
jb
sar
xchg
jo
mov
sti
mov
jg
je
mov
sub
imul
mov
mov
jno
ss
add
xchg
std
push
in
cs
fs
xchg
pop
cld
pop
pop
or
adc
cmp
sub
test
aas
mov
in
xchg
cli
cmp
aam
add
mov
call
add
push
or
or
dec
movsl
sbb
jns
fiaddl
sbb
jne
xor
fadd
or
mov
out
mov
jb
push
jb
mov
cmpsl
roll
inc
rorl
hlt
stos
repnz
outsb
cmp
sbb
movups
std
popa
popf
mov
pop
pushf
int3
call
ds
aam
cltd
dec
pop
data16
cld
inc
and
xor
mov
jae
fadds
or
jecxz
fcoml
cmp
sbb
ja
dec
add
std
daa
mov
data16
add
sbb
fs
mov
loope
pop
js
jns
adcl
les
sub
lcall
mov
jns
add
add
fwait
fs
ljmp
je
jl
inc
fwait
cld
pop
or
add
enter
addl
pusha
testl
loop
jne
or
mov
sbb
test
fistpll
push
andb
push
cmp
lcall
cltd
jo
and
int3
mov
sub
add
dec
fldl
xchg
in
mov
sub
cmp
add
inc
cwtl
xchg
pusha
into
dec
insb
mov
pop
arpl
call
loope
push
into
call
and
cwtl
in
jp
aaa
or
sahf
push
ja
or
out
and
ror
xchg
fistpll
div
pop
mov
iret
lret
and
mov
clc
leave
aaa
ja
sbb
aas
nop
mov
lahf
pop
xchg
bound
sbbb
sahf
push
add
outsb
and
sub
cwtl
xchg
test
and
je
hlt
and
mov
inc
mov
sbb
hlt
pop
cmp
fs
hlt
imul
int3
cs
fwait
adc
test
outsb
fxch
xchg
sbb
in
dec
xor
roll
xchg
sbb
and
and
inc
xchg
je
xor
mov
gs
jns
das
jne
imul
and
mov
mov
test
xor
inc
jg
aaa
ret
test
dec
imul
push
sub
cwtl
and
sbb
pushf
in
fnstenv
lods
addr16
setbe
adc
lret
mov
push
popl
dec
sub
ret
jbe
xchg
mov
pop
sahf
ljmp
fidivl
orl
loopne
sbb
inc
and
jmp
sbb
push
hlt
jmp
ror
inc
inc
mov
jb
cmp
mov
inc
test
or
xchg
xchg
dec
loopne
mov
jge
imulb
gs
ss
scas
fiadds
js
pop
scas
cmp
pop
jae
push
pop
pop
adc
sub
aas
dec
add
add
cld
call
xchg
sub
es
add
addb
les
mov
inc
out
lea
push
mov
and
imul
imulb
pop
repnz
mov
sub
pop
pushf
leave
jmp
pop
ja
into
movsb
jnp
call
jns
pop
loopne
mov
or
inc
aaa
add
mov
sahf
xchg
loope
pop
movsl
aas
sti
loop
imul
imul
rcrb
sbb
out
fldcw
in
cmpsb
inc
je
int
mov
repz
or
or
les
out
aad
mov
add
cmp
xor
stos
sarl
in
xchg
sbb
ret
dec
sahf
gs
sbb
int
aam
call
and
inc
stc
cmp
iret
mov
mov
adc
cmc
pop
and
fidivl
leave
cmp
mov
iret
push
cs
flds
in
cmp
hlt
aam
or
pushf
cmpsl
mov
sbb
daa
loope
xor
mov
imul
fiaddl
jae
inc
pop
fwait
mov
add
or
fdivl
push
pop
out
mov
xor
je
imul
inc
mov
ljmp
xchg
in
incb
sahf
push
aaa
test
pop
xchg
sub
inc
ret
insb
inc
jae
ss
adc
into
iret
gs
andl
pop
jno
aam
sub
inc
or
out
or
xor
pop
jns
push
sti
add
dec
dec
push
and
pop
mov
int
shlb
push
popf
xchg
sub
shll
imul
sbb
sub
push
ljmp
add
sahf
cmp
sbb
cltd
mov
jb
sbb
cltd
pop
std
fsubrl
nop
cwtl
cmp
mov
add
adc
xchg
lea
stc
mov
pushf
add
pop
add
add
xchg
shll
or
ret
xchg
flds
lcall
repz
icebp
mov
jmp
loope
lock
lods
inc
inc
jge
xchg
je
and
jmp
fistpll
popa
sub
dec
repz
ljmp
in
imul
dec
mov
jnp
repz
add
test
mov
adc
jp
push
cmp
scas
xchg
add
add
shlb
xor
ret
orb
sub
sub
inc
in
iret
fcom
rorl
daa
lahf
loop
pop
jecxz
popf
push
mov
add
xor
pop
mov
test
push
jge
push
std
push
in
adc
jbe
mov
pop
into
insl
popf
xor
add
xchg
fists
aas
ret
sub
jmp
daa
fwait
mov
mov
lods
pushl
loope
inc
and
cmpsb
imul
push
xchg
test
mov
cld
or
flds
addr16
xlat
sub
dec
push
rorl
mov
cmpsb
imul
add
cmp
ds
imul
outsb
mov
ja
dec
xchg
mov
and
fdecstp
into
data16
mov
nop
call
dec
push
sub
jae
and
into
mov
sub
cmp
mov
sbb
mov
js
fsincos
or
push
cmp
or
gs
push
xor
loop
jo
adc
add
xor
cmp
stos
out
outsl
adc
mov
mov
mov
aas
call
fwait
jns
adc
inc
mov
out
insl
xor
test
mov
leave
mov
dec
pavgw
sbb
and
ljmp
pop
xchg
mov
xchg
pop
push
mov
fucomip
pop
pop
dec
xor
add
sub
in
mov
scas
ljmp
fstpl
pusha
pop
int
cmc
aam
cmpsl
out
and
mov
addl
lea
adc
sahf
sbb
xor
outsb
les
test
ss
lock
push
push
nop
js
ficoml
mov
into
jmp
mov
xor
mov
cmc
sbb
sbb
enter
pop
out
test
mov
mov
inc
in
pop
mov
sbb
cmpsb
jns
add
in
pop
and
aas
jns
mov
mov
sub
shl
xchg
push
imul
cmc
aaa
aad
pop
pop
push
jl
xor
pop
call
push
sub
sbb
mov
shrl
add
lret
sarl
adc
ss
addr16
pop
ja
lret
imul
mov
sub
dec
imul
call
push
mov
xchg
mov
jo
cld
pop
cmp
inc
loope
mov
mov
cs
sbbl
adc
push
jmp
notl
dec
lock
lock
js
push
test
out
arpl
and
daa
pop
push
pop
repnz
push
mov
je
adc
inc
pop
test
leave
mov
dec
es
in
or
repnz
xchg
cltd
test
popa
in
mov
sub
rorb
das
movsl
push
cmp
xchg
mov
ss
punpcklbw
cmp
xchg
mov
xlat
test
mov
inc
addr16
enter
pop
pop
ret
push
mov
iret
adc
cmp
or
jg
loopne
sahf
cmpsb
add
or
or
jbe
sbbl
mov
lods
jle
pop
xchg
mov
push
cs
cs
sub
sub
push
add
pop
inc
inc
repz
push
stc
rolb
scas
xchg
and
xchg
mov
ret
pushf
pop
das
add
clc
push
pop
jl
inc
add
bnd
pop
push
aaa
sarb
lds
subb
inc
sub
pusha
jp
and
fimull
jmp
fisttps
xor
add
lds
and
in
mov
fsubl
rorb
cltd
dec
push
mov
mov
jl
aas
push
jmp
and
dec
imull
add
dec
mov
scas
add
lea
cmp
sbb
mov
mov
push
dec
dec
add
test
pop
sbb
jge
mov
inc
in
sub
fstsw
push
ficoms
mov
jne
out
mov
fcompp
mov
fidivrl
pop
cwtd
pop
push
sub
pop
in
je
cmpsl
jbe
mov
mov
xlat
fs
add
out
push
inc
ljmp
iret
inc
push
jnp
scas
pop
fnstcw
ror
rcll
xor
adc
and
mov
stos
mov
or
cld
xor
lret
adcb
inc
aam
sub
pop
icebp
insl
dec
xlat
rcl
pushl
adc
sbb
scas
push
daa
xor
mov
jnp
dec
lcall
mov
sbb
adc
sbb
and
out
test
clc
push
or
ljmp
vpcomuq
stos
out
outsb
and
or
or
jno
imul
xor
sub
jno
mov
cltd
and
pop
mov
je
or
mov
xchg
xchg
push
pop
leave
sub
testb
mov
cwtl
xchg
xchg
popa
and
inc
and
rclb
scas
mov
jl
add
out
inc
rcrl
verw
stos
enter
movsl
mov
inc
add
mov
popa
out
es
sti
push
mov
or
repnz
cmp
out
pop
dec
testl
mov
push
mov
mov
mov
lods
add
mov
nop
daa
outsl
mov
cmpsl
xor
pop
outsl
cmp
mov
in
add
out
movsl
xchg
lds
jmp
inc
push
mov
mov
xchg
dec
push
or
imul
or
data16
mov
std
mov
inc
sub
adc
adc
addr16
idiv
in
mov
pop
sti
xchg
cld
fmull
out
pop
ret
push
sbb
jae
cmp
outsl
mov
add
mov
imul
aad
pushf
sbb
clc
add
inc
jb
and
sub
lods
je
add
mov
mov
cmp
mov
xchg
mov
ja
jle
sbb
pop
push
xchg
ja
orl
ficoms
and
mov
add
jle
ret
sahf
in
xor
xchg
inc
loope
fdivrp
mov
mov
leave
inc
push
xor
scas
jbe
stos
xchg
hlt
fstl
scas
inc
mov
in
push
in
jns
xchg
insl
xchg
sahf
fsqrt
pop
sbb
sub
outsl
sbb
or
iret
repz
scas
icebp
aas
and
pop
and
push
fnclex
fcomps
jmp
pop
or
lock
lahf
xchg
mov
add
leave
and
ja
inc
fidivl
lahf
sbb
or
clc
sub
cmp
ret
and
sti
out
test
imul
jne
or
cmp
dec
cmp
outsb
out
and
in
loope
lock
mov
mov
dec
xor
movsl
cmp
hlt
mov
cmpsl
outsl
mov
sbb
ljmp
push
sub
pop
pop
shr
cmp
mov
iret
sub
jecxz
into
pop
or
hlt
xchg
in
data16
pop
aaa
and
mov
test
dec
mov
test
adc
xchg
xor
inc
cmp
std
neg
and
jns
pop
cli
stos
jno
and
pop
mov
fwait
sub
push
lock
jne
inc
dec
pop
cmpsl
mov
xchg
push
cmpsb
leave
dec
mov
les
arpl
pop
ja
mov
pop
and
insb
mov
rcrl
cltd
mov
fimuls
nop
jecxz
inc
pop
xor
fisubl
pop
pop
lret
leave
adc
in
cmpsb
fsubs
pop
push
repz
add
fcompl
les
and
daa
xchg
jb
call
sahf
in
xor
lcall
jp
push
repz
subl
stos
pusha
in
dec
lds
xor
inc
pop
test
das
gs
out
std
shl
adc
mov
mov
sbb
push
push
mov
popf
inc
repnz
rorl
cli
pop
sub
enter
bound
sbb
movsl
xchg
les
fimull
test
sub
call
inc
inc
mov
dec
and
push
mov
mov
sub
xor
mov
dec
jns
cltd
lret
or
bound
es
call
fmuls
push
ficoml
mov
dec
stc
cwtl
fwait
sub
stos
xor
pop
or
sub
inc
in
mov
lods
mov
and
insl
sbb
adc
aam
loope
pushf
popa
mov
cmp
cmc
clc
cs
test
add
lods
scas
js
fstps
sbb
fsts
and
cmp
cld
andb
cs
jbe
sbb
shrb
ror
xchg
mov
repnz
jle
pop
ja
pop
inc
int3
sbb
movsl
xchg
inc
movsb
or
inc
xlat
mull
in
ret
mov
cmc
dec
cmp
push
xor
and
outsl
ds
test
mov
sbb
and
jecxz
pop
adc
dec
and
add
shl
mov
push
mov
sbb
dec
cwtl
cmp
jo
mov
faddp
loop
cmp
mov
inc
test
movsl
inc
movsl
cmp
mov
xchg
xchg
repnz
mov
mov
xchg
ret
xor
shrl
jecxz
xor
adc
and
push
pop
dec
jmp
ss
sub
cmp
loopne
mov
movsl
jno
hlt
pop
xor
jbe
ret
sub
inc
xchg
xor
negl
sub
mov
mov
add
or
in
popf
adc
pop
aaa
cld
cmpsb
dec
pop
dec
sarb
loopne
scas
scas
in
add
pop
mov
shr
int
adc
rcr
xchg
arpl
push
call
fimuls
and
dec
xchg
in
arpl
inc
sbb
imul
sbb
mov
inc
jb
mov
jne
or
and
rorl
dec
shlb
dec
or
mov
jg
inc
xchg
enter
mov
out
pop
push
lret
jecxz
cmc
ficomps
mov
int
xchg
xchg
sub
ljmp
fimuls
push
sub
xchg
repz
add
jl
mov
jns
loop
bound
imul
mov
les
jmp
push
xor
jne
les
jb
mov
push
sub
mov
mov
aas
sbb
mov
dec
outsb
jecxz
xchg
inc
mov
das
pop
or
push
call
mov
aad
movsl
jbe
mov
rol
jae
iret
push
test
movsb
insl
dec
cmpsl
inc
mov
call
adc
jle
movzbl
jne
gs
add
adc
stos
ja
adc
sbb
sbb
mov
sarb
dec
imul
cli
fmul
in
lcall
in
push
sub
jb
mov
dec
clc
jge
js
rclb
jb
push
dec
inc
sub
es
push
jne
xor
mov
sbb
stos
addl
add
std
negl
dec
cmp
mov
cmp
mov
add
out
aam
lds
inc
sub
and
inc
mov
push
and
fdivl
es
shrl
outsb
lcall
rcrl
push
testl
jmp
fadds
into
sbb
xchg
jmp
fwait
daa
sub
stos
or
inc
mov
lods
jl
xchg
mov
dec
mov
jg
cmp
or
sub
jg
ret
imul
stc
xchg
clc
xchg
repz
xchg
sbb
jmp
jmp
sub
nop
and
in
pop
outsl
div
pop
pop
into
xchg
lds
jns
movsb
sub
pop
add
in
xchg
fsubrp
jnp
and
loop
mov
mov
fstpl
fnstenv
popf
mov
int
ja
outsb
jb
xchg
jns
mov
jno
test
xchg
xor
lods
fcoms
cmp
push
es
stc
loope
xchg
lret
lock
mov
dec
inc
ficoml
cltd
loopne
add
in
sahf
sbb
gs
rorb
mov
in
jnp
pop
jmp
pop
pop
mov
lock
push
mov
fists
xchg
mov
lds
add
js
cmp
pusha
test
mov
dec
pop
imul
or
add
adcl
scas
lock
sub
ds
movsl
ret
mov
adcl
fmuls
add
outsb
cmp
leave
iret
mov
xchg
inc
les
popa
imul
test
add
fucomp
cmp
fdivrs
hlt
pop
test
mov
pop
push
cmp
cmc
arpl
popa
mov
mov
jge
in
or
mov
out
into
fnstcw
push
addl
jmp
fidivrs
dec
dec
in
and
ljmp
mov
aam
outsb
dec
adc
arpl
arpl
sti
jnp
sub
cwtl
pop
push
arpl
in
stos
mov
add
pop
gs
scas
stos
or
loop
shll
movsl
insb
cmp
xor
idivb
sub
sub
push
push
cld
hlt
jge
and
mov
mov
negb
cmpsb
sub
mov
or
xor
fs
loopne
inc
or
push
jmp
push
jns
xlat
cmp
sbb
cmp
insl
fists
loop
and
lea
imul
aam
xchg
lock
arpl
je
mov
adc
lea
out
mov
movsl
lahf
cmp
dec
adc
test
jge
or
cli
jp
cmc
in
mov
xchg
popa
int
mov
imulb
add
jmp
dec
sbb
pop
and
cmp
or
lock
inc
mov
out
push
adc
mov
jo
mov
mov
cs
iret
pusha
rol
mov
pop
xchg
sub
dec
outsl
dec
pop
cwtl
pop
arpl
loopne
add
mov
idivl
fcomi
das
sub
pop
addl
sahf
mov
test
idiv
movl
jmp
rcrl
mov
or
push
aad
icebp
mov
dec
xlat
pushf
fimuls
leave
stos
jl
lret
ror
push
andl
jge
lcall
pop
sarb
jmp
es
push
inc
push
pop
push
out
test
mov
aaa
gs
jne
add
dec
popf
lods
in
jmp
push
in
push
push
clc
fstl
sub
lods
xchg
mov
repz
xor
stc
test
cmpsl
leave
mov
js
or
lds
scas
out
sub
mov
push
repnz
push
out
test
inc
add
cmp
xlat
pop
addb
addr16
inc
xlat
lret
aaa
in
push
xchg
add
hlt
mov
xlat
enter
and
pop
and
inc
int
mov
or
movsl
enter
out
push
ja
ds
cmp
icebp
mov
adc
popa
stos
insl
or
jno
cmpb
pop
dec
outsl
test
rclb
pop
push
and
cmpb
daa
sbb
insb
add
dec
add
push
xor
mov
jg
bound
jl
jge
test
and
cmp
push
and
aas
adc
inc
sbb
fimuls
jmp
out
push
aaa
hlt
adc
xchg
lds
pop
push
adc
xchg
test
mov
jo
outsb
mov
std
push
data16
ds
mov
rorl
jnp
dec
sub
mov
fwait
lahf
aad
sub
loope
pusha
sahf
adc
xchg
pop
lods
arpl
add
dec
mov
pop
cmp
cld
mov
sarb
outsb
outsb
ret
shlb
push
jbe
push
aaa
push
pop
or
insl
mov
pusha
push
cmpb
and
mov
dec
scas
shll
mov
dec
add
fisubrs
cmp
pusha
push
cmc
pop
jnp
xchg
lret
jne
cld
push
xor
xor
test
xchg
ret
xor
je
ljmp
or
inc
push
xor
jmp
sbb
jae
sti
scas
jns
mov
js
mov
inc
xchg
mov
xor
lcall
push
insb
mov
mov
int3
pop
mov
lahf
push
loop
adc
jbe
sbb
mov
xchg
ds
jmp
in
jmp
dec
dec
int3
mov
cli
aaa
xlat
inc
leave
lcall
lret
fs
into
movsl
push
or
inc
shll
aam
dec
into
dec
lock
push
add
fbstp
cli
sub
ljmp
ljmp
stc
inc
popf
push
nop
sbb
or
cli
pushf
movsb
or
add
rorl
loope
andl
push
mov
testl
jl
sahf
dec
loopne
popa
loope
jae
insb
adc
das
mov
sbbl
cmp
or
pop
aas
cmp
fcmovbe
out
test
inc
fsub
xor
or
mov
push
xor
mov
jmp
inc
repz
xchg
pushl
cmc
mov
or
mov
rol
adc
test
sbb
aas
imulb
out
nop
aaa
cmc
push
std
mov
stos
push
imulb
outsl
mov
shrl
ljmp
xor
xchg
xchg
fstpt
inc
fidivl
ds
sti
mov
lock
inc
jo
aad
mov
pusha
jg
lods
in
shlb
lret
mov
int
ficoms
jne
je
popa
add
cmp
imul
add
xchg
cltd
pop
ljmp
push
cs
aad
je
xchg
push
movsl
hlt
scas
or
ficoms
cmp
cmove
pop
scas
add
sub
sub
xor
jno
mov
push
add
aad
out
dec
jp
xchg
xchg
bt
adc
adc
cmc
movsl
fimull
push
jge
jb
mov
loopne
push
mov
gs
stos
mov
ror
add
cltd
test
push
test
xor
pop
rcr
mull
aad
loope
jnp
shlb
push
outsl
test
jns
in
test
data16
and
jne
xor
popf
je
and
dec
jge
test
loop
dec
xor
push
xchg
enter
jns
jl
or
cmp
hlt
test
sahf
cld
insl
out
sbb
jbe
pop
hlt
adc
shr
addr16
aas
fwait
lea
repnz
and
jbe
mov
into
and
add
mov
arpl
push
movsb
sahf
sbb
xchg
dec
insl
lods
dec
out
rcrl
jge
dec
pop
int3
ja
jns
aaa
sbb
insb
adc
and
mov
call
loop
andl
loope
fcompl
iret
imul
aas
notb
lret
dec
cmp
iret
mov
jns
jnp
imul
cmp
rorl
sub
inc
inc
cmp
xchg
aas
xor
mov
pop
ret
mov
sub
imul
out
and
push
in
jae
push
xor
out
jp
test
mov
dec
cmp
pushf
fldt
sub
mov
nop
into
stos
push
push
mov
push
and
andb
data16
js
jmp
cmc
mov
repz
lea
dec
mov
cltd
popf
dec
xor
lea
shlb
cmp
cmp
movsb
mov
imull
cli
and
or
mov
lods
fnsave
mov
and
mov
dec
mull
int3
mov
jmp
inc
cmp
push
mov
mov
mov
pop
fimuls
das
test
std
jno
lret
ljmp
loope
addr16
pushf
enter
sub
jmp
inc
stc
imul
and
sahf
jns
add
into
jp
divb
pop
daa
dec
pop
out
push
jae
mov
test
out
mov
daa
out
aas
mov
pop
push
sbb
push
leave
push
adc
pop
pop
aas
xor
stc
xchg
adc
push
cmpsb
push
loop
mov
mov
and
mov
enter
repnz
xchg
sub
inc
push
mov
push
inc
cmp
fsubrl
mov
nop
lret
push
adc
mov
rol
push
fsubrl
mov
mov
jbe
test
in
sub
sbb
mov
iret
push
jle
outsl
bound
sub
int3
or
push
outsb
cli
sub
and
adc
sub
pushf
mov
push
movsl
jns
imul
inc
pop
adc
push
dec
stos
xchg
xor
bound
sti
ret
rcrb
mov
fsts
insl
das
popf
xchg
les
cwtl
mov
stc
roll
pushf
cmp
jo
out
mov
cld
mov
es
xor
lods
loope
insb
ret
inc
mov
add
jns
dec
or
test
out
fiadds
cmp
pop
dec
test
testl
dec
or
cli
xor
aad
dec
dec
add
scas
mov
mov
clc
cmp
gs
das
mov
dec
jb
adc
inc
pop
mov
sub
xchg
mov
mov
popf
movsb
arpl
lcall
add
adc
mov
lret
mov
jae
icebp
cmp
fcomps
popf
pop
stos
mov
aas
jge
or
adc
cmp
or
shrl
sub
jle
dec
mov
faddl
jp
mov
faddl
ret
test
mov
xchg
outsb
xchg
sbb
inc
sbb
fsubrl
js
mov
jl
cli
fstpt
ficomps
mov
loopne
push
ds
dec
cmpsb
repz
inc
pushf
cmp
add
cmp
mov
in
faddl
mov
adc
cwtl
mov
rcll
cmp
fldt
scas
add
push
cmp
adc
ret
jmp
sbb
outsl
cmpsl
and
pop
leave
push
or
imul
pop
filds
ret
or
mov
pop
lret
cmp
addr16
lcall
aas
loope
add
add
stos
hlt
stc
jo
ret
js
lret
dec
jbe
pop
leave
push
mov
les
std
dec
adc
sbb
xchg
sbb
dec
pop
push
push
shlb
adc
inc
jl
sub
sahf
mov
cmp
or
and
aas
push
arpl
div
pushf
movsl
inc
xchg
sub
cmpsl
pusha
adc
cmp
cmp
mov
insb
outsl
pop
fs
inc
mov
addl
pop
adc
cmp
dec
jne
hlt
inc
loope
subb
jns
sbb
test
fsubrs
mov
cmp
inc
adc
subl
sarb
sub
jg
jns
sub
fsub
fists
outsl
and
sbb
out
adc
sarl
mov
sbb
xchg
add
pop
sbb
mov
mov
rorl
sbb
cmpb
in
mov
movsb
push
les
push
pusha
mov
outsl
mov
cmpb
cmpsb
mov
mov
push
lods
inc
shr
xorl
add
xchg
out
scas
jo
lahf
sbb
mov
sbb
in
pop
adc
jge
jl
jb
pop
scas
arpl
lds
dec
das
sub
shl
outsb
iret
and
dec
cmpsl
lds
pop
notl
push
in
pop
pop
sbb
in
lods
mov
jo
xor
fs
xor
call
inc
outsb
test
popa
bound
mov
fadd
sti
dec
repnz
sbb
call
ds
xchg
test
mov
pop
cltd
inc
lods
test
or
xchg
mov
out
push
sbb
jecxz
stc
and
sarl
and
push
xlat
pusha
leave
add
xchg
mov
into
aas
or
es
sub
fcoml
pop
jg
nop
pop
leave
push
xor
fnstcw
cmp
or
sbb
fsubrl
rcll
or
cmpb
cmp
imul
mov
nop
imul
sub
shll
pop
add
xchg
jbe
cmpsl
sahf
stos
inc
xor
cmp
cli
mov
xlat
mov
pop
sbb
lods
push
jge
mov
add
fisubl
leave
push
andl
dec
je
jno
cmp
mov
in
dec
ret
dec
cmp
inc
pushf
xchg
inc
sbb
adc
outsb
scas
sub
das
imul
cmc
insb
jae
in
push
jb
cmpsl
nop
sub
mov
in
enter
mov
pushw
lods
std
push
lods
cmp
cltd
scas
adc
rcll
mov
fistpll
gs
into
sub
outsb
mov
shl
mov
sti
xchg
das
mov
out
lods
or
xor
push
clc
cmp
dec
inc
scas
int
dec
dec
add
jge
jle
imul
pop
mov
out
push
aaa
mov
aam
push
xor
pusha
jge
cli
add
aad
arpl
mov
loopne
pushf
out
cwtl
cmp
repnz
dec
push
test
push
jo
pop
enter
add
push
xchg
test
popf
jne
add
or
addr16
stos
add
or
sbb
sarb
cmp
jae
imul
out
or
xchg
jo
jmp
cli
popa
in
inc
push
dec
std
cmp
imul
ja
ja
cmpsb
sub
dec
mov
lea
dec
sub
or
push
xadd
hlt
and
sub
call
lea
cmp
adc
loope
mov
pop
out
mov
cmpb
arpl
nop
and
push
ret
or
loopne
mov
cmp
rorb
xchg
fldl
or
push
stos
insb
in
xchg
aam
and
sub
inc
lret
ss
xchg
sbb
mov
or
test
divl
gs
ds
repnz
aas
fisubrs
mov
test
sub
popa
xchg
mov
pop
xchg
sti
xchg
sbb
pop
enter
jns
ret
daa
push
mov
or
lods
xor
aam
daa
jmp
jno
inc
fucomi
xor
xchg
repz
orb
mov
jl
popa
mov
mov
ja
adc
mov
jnp
call
mov
testl
addl
cmp
hlt
cmp
pop
mov
jns
xchg
push
mov
fldcw
sub
lock
add
imul
pop
add
insl
jnp
movb
or
dec
mov
arpl
mov
in
test
orl
pop
enter
es
in
pop
insb
jmp
hlt
pop
push
mov
gs
cmpsl
inc
std
add
mov
enter
popf
dec
ficompl
mov
adcb
lcall
movsl
push
xchg
lcall
mov
out
add
xchg
pop
es
test
test
sbb
jno
frstor
stc
push
dec
hlt
in
xor
push
or
jp
les
mov
dec
lret
pop
sbb
jmp
lods
adc
stos
and
mov
jp,pt
mov
jle
orl
popf
pushf
sbb
jb
pusha
stos
or
daa
int
mov
scas
inc
sub
rclb
lret
adc
out
lock
xlat
scas
jmp
adc
sahf
test
lods
cwtl
xchg
fcompl
mov
fsubrs
sarl
sub
aam
mov
xor
add
les
lods
xchg
xchg
inc
sbb
mov
loop
subb
movsl
push
push
in
daa
push
jae
push
mov
xor
inc
movsl
push
test
xor
mov
lret
mov
iret
sahf
mull
in
je
mov
lret
imul
fwait
aaa
test
jno
pop
call
sahf
and
dec
mov
mov
jo
fdivrs
cmpsb
adcb
fs
xchg
pop
xchg
cmp
data16
js
pushfw
sbb
ret
and
fidivs
std
add
cmpsl
lahf
inc
imull
imul
cmp
andb
cmp
lret
fwait
inc
dec
xchg
add
jbe
clc
xlat
ret
leave
sti
bswap
cmp
cmp
mov
add
pop
cld
cs
push
je
cld
je
ret
mov
test
push
popa
sbb
add
push
mov
mov
pop
inc
push
call
push
xchg
and
push
iret
pop
icebp
fstpl
insl
jae
notl
roll
mov
in
test
xchg
stos
popa
cld
jmp
gs
and
or
push
lea
mov
xlat
insb
and
in
or
or
cmp
or
ret
cwtl
int3
dec
cmpsb
in
out
and
int
jge
clc
mov
fcoms
js
lods
leave
push
pop
push
iret
cmp
stos
mov
xchg
std
insl
data16
movsb
loopne
fiaddl
fwait
and
hlt
sub
int3
stos
gs
gs
mov
xchg
jbe
xchg
inc
mov
inc
xchg
out
mulb
fistps
lcall
xchg
or
test
inc
and
mov
mov
frstor
xor
or
pop
test
mov
sub
and
sub
insl
and
pop
and
pop
xorb
push
inc
stos
mov
adc
xor
xor
sbb
scas
mov
or
xchg
jle
fs
das
mov
xor
cmp
dec
int
sysenter
mov
cmp
mov
pusha
addr16
insl
xchg
jge
jp
mov
pop
dec
and
push
and
fsubrs
jb
ret
jecxz
pop
sub
sbb
and
movsb
sub
scas
push
scas
and
notl
test
inc
jmp
shll
js
mov
pusha
popf
cmpsb
sbb
add
test
pop
into
sbb
movsb
out
shlb
or
fcmovu
xor
pop
int
mov
xlat
insl
and
popl
out
popa
xor
and
notb
daa
stos
sbb
jmp
inc
nopl
subl
sbb
push
push
in
dec
mov
lahf
sbb
inc
gs
fs
push
mov
xor
lahf
sub
mov
fidivrs
jo
jge
pop
xchg
addb
fwait
sbb
add
push
xchg
outsb
mov
push
add
mov
inc
or
fistpll
movsl
xchg
icebp
shll
jge
push
cld
pop
in
jg
mov
cmp
xor
adc
sbb
lds
mov
or
mov
pushf
cld
push
inc
jnp
movsb
jns
jp
inc
or
jns
or
or
pusha
fldt
push
sti
cmp
aam
inc
mov
test
subl
into
add
xlat
aam
push
movsl
mov
push
pushf
mov
data16
clc
in
mov
arpl
lret
lret
sbb
ud0
jecxz
adc
orl
ss
mov
lret
repnz
xor
pusha
sti
addb
shl
xchg
movsb
adc
pop
sub
dec
imul
stc
add
adcl
ret
pusha
icebp
mov
add
ljmp
repz
mov
daa
clc
push
mov
mov
sub
popa
out
or
lods
shrl
jnp
cmp
sub
sbb
mov
movsb
testb
cld
pusha
jo
movsl
out
xadd
leave
cmp
movsl
xor
mov
mov
add
add
repnz
stos
fbld
pop
roll
adc
adc
rorb
pop
les
adc
ja
xchg
rcrb
fcmovnbe
inc
ret
pop
mov
jne
mov
cmp
add
adc
daa
ret
insb
mov
lea
cli
or
dec
out
xchg
mov
sub
jae
das
icebp
xchg
negl
xchg
mov
add
pavgb
iret
mov
js
test
imul
outsl
pop
push
lds
cmp
push
xchg
pop
ja
cmpsl
lahf
xlat
adc
sbb
leave
repnz
mov
sbb
cmp
test
fwait
les
movsl
mov
push
push
sahf
pop
mov
mov
daa
imul
movsb
hlt
cmp
mov
fnstenv
out
jno
shr
ja
pop
cli
dec
jbe
cmp
shl
xchg
mov
test
sbb
xchg
pop
mov
repnz
movsl
fwait
adc
aam
jb
cmp
lock
test
es
psubb
std
cmp
decl
mov
or
sarl
push
and
cmc
sub
xchg
dec
xchg
sbb
mov
das
adc
stos
ds
jmp
rcrb
inc
les
push
inc
inc
sbb
cld
mov
popf
sbb
push
std
dec
sahf
xchg
mov
mov
add
or
fldl
insb
ret
and
sub
add
sti
cltd
rcrb
jp
inc
sbb
adc
push
sahf
stos
mov
adc
repz
mov
shrb
sbb
adc
bound
aas
stc
stc
lcall
test
pusha
fistpl
xor
add
outsb
lds
sbb
lds
push
scas
cmpsb
je
pop
jl
pop
push
inc
or
ficoml
lock
dec
imul
cmp
cld
add
push
push
adc
in
mov
adc
ds
test
stc
movsl
jbe
mov
cs
add
sbb
xor
pop
cmp
imul
clc
mov
popfw
sub
sub
inc
lods
and
cwtl
loop
push
pop
add
dec
add
fs
incb
outsb
loope
mov
mov
nop
pop
and
and
cmp
shrl
lret
insl
or
dec
adc
fwait
popf
hlt
lods
or
fstpt
mov
outsb
cli
push
aaa
jecxz
xor
cmc
aam
inc
mov
or
mov
mov
xchg
aam
fnstsw
push
test
test
sahf
movsl
add
jg
out
mov
popfw
aaa
insb
dec
mov
or
clc
ud1
jb
and
adc
mov
aad
in
jb
call
lret
add
iret
icebp
push
loopne
xchg
lock
int
adcl
pop
push
add
xchg
mov
movsl
insl
dec
andb
imul
lret
adc
out
stos
adc
push
or
cmpsb
js
ljmp
cli
mov
cs
fcompl
fs
sub
xchg
add
in
jle
cmovno
inc
or
sbb
shrb
mov
jo
xor
hlt
rcl
dec
jg
or
inc
dec
rcrb
sub
mov
push
arpl
pushf
cmp
or
adc
loop
ljmp
ret
and
cmp
hlt
pop
stos
loope
loope
stos
cltd
ficomps
inc
fcmovu
outsb
fwait
pop
leave
pusha
and
pop
pop
jo
cmpsb
punpcklwd
cmpsl
cmp
xchg
mov
outsl
pop
test
int3
mov
push
lea
adc
imul
aad
cmp
ds
stos
fdivrl
sarl
mov
pop
jae
rcrb
cmpsl
out
jl
jno
jnp
ljmp
lret
jo
adc
std
mov
aam
adc
mov
into
movzbl
push
pusha
mov
add
xchg
inc
add
dec
psadbw
push
test
int
mov
jge
sbb
ds
xchg
dec
sbb
sub
outsb
lret
in
int3
xchg
aam
xchg
fisttpll
dec
inc
xor
test
sti
jbe
mov
inc
movsl
fwait
sub
adc
cli
cld
adc
lahf
sub
test
add
and
cwtl
sub
imul
orb
in
lods
or
stos
dec
gs
popa
jmp
mov
call
and
xchg
or
fwait
fwait
mov
lock
mov
fnsave
cld
subl
daa
imul
jne
scas
adc
mov
jl
sbb
cmpsb
loop
ror
fisubl
pop
and
cwtl
xor
cmp
mov
fldenv
jb
in
int3
and
xor
je
mov
or
adc
fisttpll
aad
or
icebp
call
imul
jno
cs
mov
add
jge
std
popf
mov
xchg
out
jns
push
repz
mov
mov
dec
pop
jno
int3
jnp
push
adc
std
cmp
fldpi
and
xchg
lcall
in
xlat
inc
lods
jno
push
aaa
popf
mov
mov
sub
dec
xor
mov
and
int3
hlt
arpl
cmp
ret
jmp
push
lds
mul
push
jmp
push
mov
pop
sbb
lods
leave
dec
inc
xor
pop
mov
test
or
in
imul
sub
in
fwait
xor
pop
shr
xchg
cmp
pop
stos
push
lcall
cmp
mov
cs
hlt
pop
lahf
insl
adc
lods
js
aam
out
call
pop
and
ja
outsb
shll
mov
inc
outsb
fwait
dec
mov
xchg
mov
jnp
popa
sahf
push
xchg
arpl
jbe
add
sub
dec
mov
xchg
or
push
and
mov
jb
idivb
mov
sbb
push
cld
imul
jnp
inc
test
push
or
loope
xor
xchg
xor
adc
dec
cwtl
mov
insl
pusha
movsl
mov
lods
jns
add
clc
and
clc
push
fcmovnb
push
mov
js
pushf
jne
sbb
enter
xor
sub
or
push
iret
adc
push
xchg
cld
adc
xor
repz
pop
or
sub
xor
loope
mov
pop
sbb
aas
addr16
add
ljmp
gs
mov
in
add
inc
inc
push
jne
shll
dec
mov
arpl
jmp
out
pop
adc
push
cmp
loop
shl
nop
and
mov
jg
push
dec
adc
imul
insl
je
pop
js
sub
and
adc
sub
aad
fnstcw
ret
xor
leave
pop
xor
or
outsb
out
mov
pushl
inc
mov
push
jmp
mov
xor
mov
xlat
sub
push
mov
add
shr
jne
jge
add
push
neg
cwtl
ds
in
dec
cmpsb
aam
jo
xor
add
dec
clc
out
testb
xchg
nop
dec
stos
es
leave
push
dec
stos
dec
nop
xchg
rcrb
xor
push
lods
add
cmp
inc
filds
insl
push
fidivrl
es
xchg
int
dec
mov
sahf
rcl
movsbl
daa
leave
lock
divb
xlat
rclb
mov
in
mov
idiv
das
bound
stc
rcrl
into
loop
cmp
xor
mov
cwtl
ret
test
adc
insb
inc
push
pop
adc
notl
and
or
jns
dec
shll
sub
aad
sub
mov
sbb
dec
shrb
test
pop
and
cmp
nop
daa
out
jnp
stos
jnp
sbb
repnz
lods
xchg
or
dec
stos
jmp
sub
movsb
faddl
je
mov
adc
mov
inc
push
nop
xor
dec
push
jnp
mov
push
dec
mov
jg
mov
aam
push
sbb
and
fiadds
pop
jp
fnstenv
dec
movsl
jle
sti
jb
repz
in
scas
dec
sbb
pushf
mov
inc
psubb
ret
xor
push
divb
lds
scas
and
imul
pop
cld
pop
push
idiv
mov
mov
mov
xchg
add
xchg
vmovupd
pusha
jle
jle
jae
repnz
stc
in
je
std
xor
int
dec
scas
std
or
cmpsl
popf
mov
push
std
les
aad
xchg
adc
mov
push
popf
aas
push
mov
xlat
movsb
adc
mov
and
das
jae
iret
add
add
push
xchg
gs
lret
or
add
andb
add
cli
insl
mov
xchg
pop
jle
mov
stos
pop
push
test
sbbb
cmp
out
aas
out
jb
push
rclb
add
imul
jmp
int
fwait
shlb
mov
sti
lods
sbbb
push
fcompl
loop
cmpb
or
scas
mov
inc
lea
cmpb
loope
pushf
loop
or
xchg
dec
add
enter
scas
lahf
lea
push
xchg
lahf
mov
pop
lods
out
sbb
lock
ljmp
loop
adc
aam
lcall
bound
loopne
cmpsb
imul
push
sbb
mov
push
add
mov
push
in
mov
xor
test
mov
add
stos
add
cmp
jns
enter
rcll
aas
mov
shrl
inc
ja
shlb
xlat
int
jg
rclb
int
sarb
daa
out
mov
jp
or
dec
push
test
mov
scas
sbb
in
pop
xlat
inc
cmp
cmpsl
loope
and
and
call
fnsave
jle
mov
in
sbb
imul
cmp
pop
and
sbb
js
add
pusha
clc
and
push
arpl
mov
outsb
dec
mov
inc
inc
imul
imul
adc
mov
xrelease
fucomip
push
cmpl
xor
and
movsl
lods
and
loop
mov
mov
out
pop
ljmp
fidivs
push
dec
out
rorb
outsb
jmp
xchg
movsb
loope
fimuls
mov
sbb
les
add
hlt
inc
nop
cmp
stc
stos
and
in
cmp
mov
mov
enter
xchg
divl
js
dec
idivb
xor
stos
fs
xchg
std
and
iret
rolb
sahf
decl
imul
and
js
dec
xchg
cmp
shr
sub
pop
sar
adc
out
js
add
jnp
imul
dec
aaa
ljmp
mov
sub
ja
rolb
adc
cmp
das
xor
imul
push
aaa
insb
cltd
mov
pop
movsb
gs
in
test
shrl
mov
cmp
inc
cmp
inc
stos
ljmp
cmpsb
popf
sbb
pop
pop
pushf
test
cmp
mov
push
mov
push
sub
push
ret
rclb
mov
push
and
sbbl
dec
pop
pop
push
dec
dec
cmp
cmpsb
into
sar
fdivs
add
or
xchg
aad
sub
out
shl
mov
pop
lahf
push
insl
aas
pop
push
iret
mov
es
in
bound
xor
jle
xor
sti
adc
lahf
into
cmp
popa
add
push
and
sub
cltd
xor
in
sub
pop
fstps
jne
fwait
in
sarl
or
fstps
cmp
lods
lods
jmp
in
stos
jne
hlt
sub
pop
sbb
lods
lds
sbb
and
sbb
mov
sbb
pop
jl
test
hlt
jle
out
and
stc
mov
jb
sbb
sub
adc
xor
arpl
and
or
rolb
lds
inc
or
mov
or
in
test
dec
pop
repnz
mov
cmp
add
pop
movsb
mov
sarb
pop
mov
push
rorb
in
nop
pop
jmp
pop
xchg
mov
in
cld
fcmovnb
add
int
add
or
clc
xor
daa
imul
mov
jl
test
js
lahf
jg
stos
int
add
xor
cmpsb
imul
dec
inc
arpl
adc
or
les
mov
xor
adc
or
pop
pop
mov
lds
fs
nop
push
imulb
push
xor
test
pop
pop
pop
cmp
add
repz
int
repz
cwtl
hlt
push
iret
in
in
out
push
push
mov
pop
xchg
pop
cmpsb
loop
xchg
enter
and
xchg
fimull
daa
and
out
pop
mov
push
lods
ja
jmp
jge
mov
add
fbstp
out
arpl
or
ss
and
dec
cmp
jmp
mov
inc
pop
add
out
bound
jno
inc
outsl
pop
stos
or
stc
hlt
inc
in
rorl
pop
fisubrl
cmpsl
notb
jb
push
arpl
in
mov
fcom
sahf
inc
in
std
movl
mov
cs
addb
rcl
push
mov
jp
icebp
std
in
push
mov
mov
out
int
sbb
lahf
dec
ficompl
lcall
mov
adc
call
sbb
or
mov
insb
xor
adc
jl
push
dec
xchg
data16
xchg
into
pop
mov
pop
inc
push
rolb
rolb
pop
in
outsl
stos
stos
xchg
xor
add
pop
pop
imul
testl
cli
gs
jmp
xorb
add
fisttps
jmp
sti
jmp
daa
add
push
divb
dec
dec
fidivs
pop
nop
or
or
mov
ftst
mov
stos
cmp
out
ja
add
pushf
xor
mov
cltd
mov
scas
js
lds
cmp
outsl
shlb
jno
xor
enter
popa
mov
and
shl
loopne
movsb
pop
mov
mov
push
sahf
lea
sub
xor
adc
jae
dec
dec
call
outsl
dec
adc
bswap
dec
mov
arpl
lret
jg
xor
inc
mov
cmp
xchg
push
sub
mov
pushf
shl
add
xchg
lods
icebp
sub
push
jmp
mov
push
aaa
clc
jge
arpl
cmp
loope
arpl
cs
mov
pop
sarl
push
sbb
adc
and
data16
jmp
rclb
std
xchg
and
sub
pop
mov
mov
inc
and
mov
stc
push
xchg
jne
sub
adc
rcr
or
mov
sub
shlb
dec
data16
xchg
inc
mov
and
xchg
es
shlb
lods
movsb
push
jg
mov
lret
adc
pop
xchg
cmp
arpl
mov
out
xlat
daa
xchg
dec
pop
jp
and
xchg
pop
lret
out
inc
lods
push
dec
push
sub
mov
insb
jbe
mov
shrl
daa
mov
push
jecxz
out
mov
jno
jnp
ja
or
shrb
icebp
int3
adc
mov
aam
lret
cmc
add
lret
pop
mov
mov
out
fidivrs
cmc
inc
xlat
push
pop
and
loopne
mov
or
aas
jge
jmp
mov
mov
jge
cmp
xchg
test
enter
inc
jl
xchg
outsb
push
pushf
in
jle
push
mov
push
mov
jb
xchg
jno
mov
mov
sub
mov
pop
das
push
adc
add
fstpl
xchg
mov
out
pusha
and
ret
scas
inc
pushf
sub
jp
sub
nop
or
je
out
pop
push
mov
mov
cltd
cwtl
sbb
pop
push
imul
je
mov
add
jge
push
lcall
or
xchg
jmp
and
pop
cmpsb
push
repz
lods
push
stc
enter
andl
sti
or
sub
cld
inc
xor
rorb
ss
mov
adc
lcall
push
xchg
and
sbb
mov
mov
daa
xchg
fs
fsubrl
pop
inc
jge
aas
push
pop
cld
sbb
call
mov
pop
push
out
push
stos
push
add
fistl
sub
decl
pushf
cltd
jle
push
pop
xlat
cmc
pusha
inc
les
fisubrl
cld
inc
jl
inc
pop
fisubs
lea
movsb
xchg
aad
fsubrs
pop
adc
adc
add
adc
imul
inc
sub
pushf
scas
jo
hlt
lods
push
in
addb
push
aam
jmp
fsubrl
lahf
mov
xlat
outsb
stos
test
pop
enter
and
std
das
xchg
fwait
ret
xchg
adc
mov
or
and
jle
sub
adc
cmp
imul
pop
mov
xor
or
push
sub
and
icebp
adc
loopne
push
cmp
sar
adc
xchg
arpl
mov
aam
jge
push
negl
mov
dec
ss
jge
mov
cmp
xor
into
jb
add
mov
shr
cld
add
cmp
vfmsubsd
sbb
inc
addb
pop
nop
mov
orb
push
popf
sub
sub
or
adc
xlat
daa
loope
fsubl
int3
dec
jns,pt
and
dec
mov
pop
adc
in
add
inc
mov
cs
jnp
shlb
and
mov
imul
jmp
clc
add
fstl
adc
iret
test
daa
mov
jecxz
dec
xor
aaa
xchg
ss
roll
fnstenv
je
sbb
mov
jmp
js
repz
sbb
fs
dec
mov
stos
in
imul
ljmp
nop
or
sbb
sbb
inc
inc
loope
sbb
in
mov
cli
mov
leave
in
pushf
in
adc
out
sbb
fcomps
rorl
in
dec
cmp
push
fs
push
addl
je
aas
popa
dec
mov
imul
inc
pop
or
add
cmpsb
ljmp
mov
jnp
leave
pop
js
das
sbb
enter
mov
into
push
mov
xchg
push
lret
and
push
ja
sahf
pop
pop
dec
xlat
nop
sahf
lea
shr
or
scas
mov
or
mov
inc
test
out
insl
push
ss
hlt
std
sub
js
mov
add
or
mov
xor
insb
gs
dec
and
jge
pop
testl
lea
outsl
adc
pop
es
cmc
lret
test
mov
and
leave
ror
sbb
xlat
add
fcomps
stc
cmp
cmpsb
xor
inc
xlat
arpl
cmpsl
cmc
add
pop
roll
xchg
inc
xchg
xchg
push
cmp
movsb
imul
or
jecxz
mov
push
mov
rcrb
cmp
inc
lret
iret
sub
jmp
insb
int3
and
sbb
dec
js
lds
lahf
sub
aaa
cs
or
lcall
inc
xor
enter
movsl
scas
jmp
fidivs
jae
repnz
push
nop
pusha
lret
xor
fsubrl
sahf
mov
cmp
pop
out
shlb
xor
nop
sub
lock
sbb
and
fisubl
and
mov
and
lahf
mov
mov
outsb
imul
add
sub
xchg
cmp
stc
mov
inc
jnp
movsw
outsb
out
out
fcmovb
shll
jae
pop
push
pop
xor
mov
insb
out
pop
mov
cmp
xchg
cmc
mov
adc
cmp
pop
mov
imul
pop
or
mov
dec
clc
xor
push
xchg
icebp
in
sub
out
icebp
pop
loop
mov
int
dec
mov
lods
cld
mov
mov
lret
jl
stc
sarb
xchg
inc
adc
loopne
xchg
cli
push
lahf
js
fbstp
mov
push
shl
xchg
test
or
testb
xchg
add
xchg
in
loopne
xchg
daa
pop
xor
xor
fsubrl
fcmovnu
dec
aas
ss
incl
cmpsl
jo
fstpl
inc
mov
and
test
mov
push
js
jae
ja
pop
and
lret
push
cmp
sbb
movsl
pop
jp
scas
repz
mov
insb
add
add
stc
dec
sub
or
fistps
movsb
sub
adc
iret
cmpsb
add
pop
and
xchg
mov
pop
aad
cmpsl
dec
push
jb
dec
dec
mov
divl
mov
fs
push
inc
lods
mov
inc
cmp
and
cs
insb
xchg
stos
sbb
gs
dec
mov
orb
test
jb
mov
push
dec
pop
out
loope
arpl
scas
inc
xchg
mov
xchg
cwtl
mov
jge
rorl
rcrl
in
mov
stc
pop
or
pop
pusha
dec
or
daa
inc
int
movsl
mov
ds
fwait
jmp
mov
ljmp
inc
mov
test
test
aam
fldt
pusha
arpl
cli
ds
mov
and
pushf
les
adc
or
fistpl
jmp
mov
inc
popa
in
outsl
or
mov
ljmp
or
push
loope
sub
xor
aam
cmp
jbe
insl
mov
loop
pop
movsb
add
add
xor
jl
icebp
pop
pop
dec
lret
ss
in
push
pop
jmp
data16
mov
adc
add
mov
pop
sub
or
mov
ss
lcall
mov
dec
adc
sbb
xchg
or
sbb
mov
push
ljmp
dec
out
pop
les
in
mov
or
mov
sub
loop
rcl
push
pop
cld
cli
inc
je
test
pop
pushf
cmpsl
loopne
pop
push
cmp
xor
push
cmp
stc
dec
add
mov
icebp
rclb
testb
mov
cmpsb
cmp
or
sub
mov
dec
ljmp
cmp
fimull
dec
jae
pushf
cli
inc
pushf
inc
mov
xchg
cmc
stc
cld
mov
adc
mov
mov
aaa
sub
mov
loop
fsubrl
fstl
das
test
inc
movsl
movsl
lods
cmc
icebp
mov
mov
inc
rclb
cmp
pop
clc
rol
repnz
or
out
adc
enter
out
bound
ret
jno
fstpt
pop
push
pop
inc
dec
aas
insb
mov
or
das
mov
push
adc
test
push
push
imul
addr16
or
jb
cwtl
outsb
xor
pop
cmovle
xchg
cmp
xor
fucomip
push
cmp
lcall
arpl
lcall
lcall
inc
jb
mov
mov
leave
in
mov
hlt
cmp
dec
fsub
enter
das
adc
popa
shll
xchg
sub
incb
sahf
cmp
push
test
out
popf
xor
sub
and
add
insl
or
inc
lds
adc
dec
data16
mov
stos
cwtl
outsl
test
addr16
loope
int
sub
pop
or
jle
and
mov
xchg
out
shlb
mov
ja
ss
mov
int3
cwtl
mov
pusha
iret
push
push
xchg
cmp
test
sbb
mov
push
ljmp
jne
or
and
xchg
icebp
or
xor
flds
jns
xchg
push
adc
outsb
imul
in
jo
mov
js
sub
dec
jne
scas
sahf
in
stos
ret
pop
nop
sbb
push
mov
aam
mov
mov
fwait
xor
cld
pushf
xchg
std
and
or
xchg
cmpsb
mov
outsb
mov
xchg
mov
movsl
dec
test
xor
push
pop
xchg
aam
pop
pushf
and
fcomps
ljmp
hlt
push
add
scas
pop
or
jb
dec
movb
and
stos
inc
mov
adc
loopne
mov
mov
mov
std
inc
outsl
es
imul
add
push
adc
aaa
arpl
nop
rolb
sbb
lds
cmp
pop
cmc
mov
cltd
repz
add
sbb
int
mov
andl
inc
fnstenv
cld
push
push
sub
movsb
mulb
xchg
adc
jmp
enterw
pop
mov
cmp
sbb
dec
lock
jae
xchg
sahf
daa
dec
push
pushf
pop
ja
adc
push
lret
mov
out
sub
dec
push
ja
jbe
outsl
loop
mov
sbb
lock
ljmp
pop
iret
add
pusha
xchg
stos
xchg
push
pop
cli
dec
nop
cltd
iret
cwtd
lret
cmpsl
inc
sub
jge
inc
jge
sbb
stos
add
js
sti
je
ds
mov
fidivrl
dec
jns
pop
sub
stc
cmp
sub
and
icebp
int
aas
scas
mov
sub
sbb
test
call
jl
loope
cmp
push
cli
or
sti
lret
call
jp
jl
push
insl
inc
stos
add
and
outsl
pushf
mov
cmp
jp
outsb
cmpsl
and
push
adc
inc
add
stos
push
mov
push
sub
lcall
and
cmc
xchg
adc
loopne
aam
mov
dec
sub
stos
enter
xor
inc
nop
sbb
stos
and
cmp
mov
std
and
sbb
popa
add
push
ds
mov
enter
mull
sbb
jb
lods
pushf
sbb
je
jge
lods
xchg
sub
sub
push
adc
mov
mov
dec
subb
sti
mov
std
fstps
inc
cmc
repz
fsubrl
sub
data16
and
fs
sbb
fdiv
xchg
sub
xchg
push
jae
repz
jae
faddl
and
fsub
xchg
leave
movsl
pushf
mov
sbb
cmp
dec
xor
sbb
hlt
push
lods
jg
fucomip
xchg
mov
push
or
jbe
in
cmp
push
mov
jecxz
rcll
adc
or
xor
stos
nop
xchg
and
roll
xor
int
add
xor
sbb
mov
aam
cmc
pushl
ljmp
std
js
pop
xor
daa
pop
mov
dec
ficoms
faddp
adc
fwait
mov
push
xor
loop
dec
mov
xor
outsb
shlb
adc
jle
sub
rorb
andb
mov
dec
mov
mov
sti
or
inc
gs
out
mov
pusha
cmpsb
gs
or
fwait
xorb
das
xchg
int3
mov
mov
pop
mov
sub
dec
and
mov
scas
cwtl
lods
push
xchg
lods
push
xchg
sub
mov
test
out
inc
ret
sbb
push
xchg
dec
clc
adc
inc
add
je
mov
push
cmp
es
cs
enter
int3
xor
sbb
hlt
adc
dec
and
add
jle
addl
jge
lock
popa
ret
jg
push
pop
mov
xlat
push
xchg
push
sbb
jno
call
cli
test
dec
int
popf
clc
fdivrs
das
cmp
insb
adcb
xchg
or
ret
dec
inc
adc
cmp
push
mov
mov
jno
mov
divb
mov
lods
jnp
jg
dec
add
imul
jl
pop
pop
mov
or
lahf
es
push
rol
or
jg
inc
add
push
xchg
cmpb
mov
push
jmp
pop
pop
add
or
gs
hlt
xor
dec
or
jnp
test
ds
mov
fnstenv
add
xor
jb
out
test
fidivrs
and
lods
repz
mov
mov
imul
pop
in
inc
arpl
repnz
push
or
mov
sub
cmp
cs
pop
fdiv
rol
gs
cmp
jns
add
jae
cmp
sub
cli
div
sub
aaa
pop
push
xchg
add
xchg
wbinvd
decb
lods
imull
popf
jmp
cmp
pushw
lret
std
add
lds
jg
fisttpll
iret
jmp
shlb
movsl
imul
out
repz
xor
dec
or
adc
lock
sbb
fcompl
sub
in
and
dec
test
sub
dec
dec
or
aas
mov
add
dec
pop
in
xchg
jecxz
xchg
or
and
push
push
inc
int3
pop
add
cmp
stos
xlat
and
ja
xchg
mov
ja
inc
and
rclb
loope
sub
inc
push
sahf
nop
push
cli
jmp
mov
pop
mov
jecxz
mov
jecxz
push
jne
cwtl
popf
iret
adc
imul
mov
mov
adc
leave
ss
call
pop
mov
lcall
call
popa
mov
mov
push
shrl
cmp
mov
pushf
sbb
xor
adc
mov
jg
adc
in
jne
dec
lcall
dec
jnp
mov
movsl
pop
dec
faddl
out
out
or
popa
add
aad
andl
xor
loope
fs
int
out
outsl
xor
subb
mov
idivl
cli
add
push
pop
mov
push
mov
mov
imul
adc
push
out
mov
add
and
or
add
ret
shll
test
into
xor
and
cmp
mov
xchg
push
mov
push
ds
sbb
stc
das
movb
push
aaa
das
jle
je
push
arpl
lds
lods
in
mov
cmp
imul
in
sahf
adc
xor
cltd
or
mov
xchg
inc
pop
aad
sar
in
addr16
inc
adc
in
xchg
or
and
repnz
bound
pop
hlt
xrelease
filds
clc
xor
cmpsb
mov
xchg
es
mov
or
push
popa
into
pop
or
int
xchg
sbb
aam
mulb
test
lea
push
sarl
mov
shrl
pop
cmpb
loope
fisubs
mov
popf
sbb
rorb
push
mov
fcompl
mov
or
mov
mov
js
jge
xlat
shrb
ss
int3
inc
aad
jnp
outsb
jns
sbb
fimuls
or
insl
mov
mov
scas
mov
adc
fbstp
in
into
std
ret
or
or
movsb
add
push
or
in
mov
sub
push
or
lahf
fbstp
inc
push
das
mov
test
dec
jecxz
aas
mov
ja
cli
add
add
adc
pop
int3
lret
fs
xchg
lock
mov
sub
push
fdivl
jae
outsb
xor
cmpsb
push
inc
fstl
xchg
mov
clc
dec
and
xchg
inc
push
dec
adc
xchg
fcmovb
pop
nop
int3
into
sbb
xor
add
js
push
outsl
lcall
inc
pinsrw
mov
push
int3
ficomps
jl
adc
leave
xchg
xchg
scas
in
maxps
xor
sub
push
mov
pop
movsl
adc
push
addl
lods
sbb
ficoms
fs
add
cs
cmp
mov
sahf
out
pop
adc
dec
pop
jae
dec
nop
cld
or
test
sub
sahf
subb
jae
mov
lahf
pop
or
imul
hlt
push
mov
add
jbe
jbe
cmp
popa
xor
insl
push
popa
cmp
and
adc
out
notb
mov
in
out
pop
or
cmp
jbe
pop
adcl
xor
xor
out
int3
cmp
andl
push
sti
cmpsb
cmp
adc
dec
jnp
test
sbb
mov
aaa
push
mov
mov
int3
in
pop
das
xlat
lret
jle
or
mov
dec
push
inc
xchg
lds
js
xor
int3
mov
pusha
inc
adc
ret
imul
sbb
mov
stos
and
outsl
imul
lcall
mov
mov
pushf
aad
or
lahf
xor
pop
ja
mov
sbb
pop
xor
xchg
insl
dec
bound
push
mov
gs
sub
adc
sarb
es
sub
sbb
mov
nop
sbb
pop
enter
mov
idivl
mov
loope
or
adc
adc
ret
repnz
lods
imul
pop
fwait
mov
and
inc
jo
dec
sbb
mov
ds
test
xchg
mov
inc
mov
xchg
inc
sahf
pop
xchg
sbb
sbb
shlb
sbb
psubsw
sti
sub
pushf
stos
addr16
pop
adc
cmp
xchg
sub
idivb
out
or
test
xchg
inc
fists
adc
cs
xchg
enter
pop
dec
lret
pop
int3
faddp
call
adc
dec
adc
add
push
cmpsb
jae
pusha
sarl
lahf
push
inc
outsb
dec
loop
push
cmpsl
mov
jl
mov
cmp
mov
stos
mov
dec
je
add
icebp
dec
jle
xor
jl
je
clc
jnp
lods
xorl
rclb
rcll
mov
sbb
fbld
clc
stc
lret
inc
addr16
mov
jne
pop
mov
add
leave
roll
push
and
data16
shr
push
mov
imul
lret
push
fisubs
in
mov
jae
gs
jl
imul
lret
cmp
add
addr16
cwtl
jl
fildl
and
add
add
ds
test
cltd
sbbl
or
dec
addr16
lods
mov
es
fcompl
imul
xchg
jbe
dec
and
and
push
js
loope
rol
shl
pusha
add
or
cmc
cmp
js
push
add
lret
das
ret
lret
rolb
cmpsl
lahf
popa
cmpsb
adc
test
inc
xchg
jg
addr16
xchg
adc
adc
sahf
adc
add
dec
jnp
lea
and
les
inc
repz
sbb
mov
repz
fiaddl
add
mov
add
lea
fisttpl
xchg
jp
mov
jp
aaa
mov
xor
pop
xchg
sbb
push
adc
add
add
pop
xor
sbb
dec
pushf
rclb
sub
xor
pop
sarb
std
mov
pop
cmc
xchg
cld
fs
std
jb
lea
shr
shlb
jge
repz
xchg
mov
cmp
jo
adc
jb
cwtl
loope
rcll
dec
and
jne
jns
ret
mov
mov
dec
mov
mov
insl
add
adc
out
push
xchg
imul
lret
fwait
nop
lret
jb
aas
nop
aad
imul
and
inc
cmp
inc
outsl
andb
inc
dec
loop
mov
gs
lds
pop
or
mov
es
flds
ret
add
pop
jg
aas
inc
sbb
adc
divl
mov
gs
push
ret
mov
cli
outsb
jg
cmpsl
cmp
push
sbb
popa
xor
jb
push
and
adc
lock
inc
pushf
fisubl
xor
pop
and
daa
lcall
lret
push
mov
and
mov
inc
rclb
cmpb
xchg
xor
push
inc
outsb
mov
aad
push
jns
adc
dec
dec
or
sbb
adc
sub
mov
repnz
xchg
pop
into
dec
mov
outsl
jmp
aam
pushl
jp
or
stos
int
cmp
in
jae
cli
inc
add
aas
jge
fistpll
pop
mov
out
ljmp
mov
test
inc
xchg
scas
out
cltd
adc
test
adc
xor
lahf
mov
inc
es
mov
outsl
sub
add
pushf
push
shr
cmp
std
or
je
jnp
es
popa
inc
ss
push
outsl
and
mov
sbb
sub
inc
ret
andl
jge
mov
jne
ds
push
adc
int3
nop
add
enter
insl
jp
lods
into
adc
sbb
imul
xchg
test
jo
in
xchg
jmp
es
test
mov
sar
jle
imul
mov
jp
xchg
aas
cmp
mov
mov
inc
push
testl
mov
and
mov
andb
decl
loope
ficoml
xchg
daa
je
enter
or
hlt
int3
in
jmp
inc
add
repnz
or
mov
fimuls
xchg
imul
push
fistps
iret
dec
push
or
ja
sub
imul
ficompl
testb
pop
and
rorb
pop
xchg
movsb
cmp
cli
xor
dec
dec
and
dec
push
aam
adc
xchg
fistpl
fstpt
jmp
push
es
bound
cli
icebp
mov
das
push
jns
mov
push
add
lret
call
jle
aaa
cmp
jae
dec
mov
push
cwtl
addr16
jmp
psubsb
sub
cmc
adc
xor
inc
xlat
mov
jecxz
loop
inc
add
inc
adcl
mov
ljmp
int3
out
fidivrl
mov
push
dec
cld
mov
cmp
hlt
int
dec
mov
dec
or
aaa
test
xchg
icebp
addr16
pop
jno
enter
mov
push
mov
test
cli
add
mov
cmp
in
mov
lret
popl
mov
xchg
cli
push
and
xor
mov
sbb
pop
mov
scas
xor
js
mov
and
int
pop
jmp
cld
inc
pop
data16
jns
or
aad
js
test
inc
lods
sahf
loop
test
les
aas
lock
in
addr16
out
out
das
mov
cmp
mov
push
cmpsl
leave
jb
mov
out
fwait
mov
es
lods
pop
sbb
rorb
int
lock
dec
add
add
out
in
cmp
shlb
mov
mov
mov
jae
push
lea
add
rcr
iret
sub
dec
mov
clc
adc
ret
sbb
lret
xor
in
adc
shrb
adc
sub
scas
int3
cltd
test
out
dec
das
jo
jns
lahf
sbb
sub
cmc
push
ret
loop
cmp
xor
cmpsb
xor
js
push
pop
sbb
sbb
stc
mov
mov
addr16
pusha
xor
iret
mov
call
mov
loope
cs
imul
aad
push
hlt
cmp
fsubs
pop
pop
or
aam
adc
xchg
dec
filds
aad
fs
xchg
mov
pop
inc
or
mov
push
or
and
insl
cmp
sbb
std
push
mov
mov
add
das
insl
loop
or
pop
fucomp
mov
adc
data16
pop
cmc
xchg
insb
sti
and
xor
test
jae
lods
insl
push
es
mov
jle
mov
rcrb
sbb
ret
xchg
inc
jns
pop
and
xchg
push
pop
addb
adc
pop
xor
popa
rcrb
jle
jb
adc
test
push
inc
mov
pop
inc
data16
shr
pop
test
out
jb
adc
shrb
hlt
inc
jge
test
aad
xchg
sahf
jecxz
jg
das
scas
lods
pop
mov
aad
push
push
mov
or
sub
xchg
in
out
mov
mov
push
jmp
push
push
push
ss
fwait
jge
gs
loopne
dec
shll
es
out
repz
test
in
aas
xchg
cmp
inc
ret
adc
fcoms
lret
dec
mov
cs
lods
mov
dec
out
or
jmp
dec
mov
dec
lcall
pusha
sbb
sahf
stos
mov
inc
xchg
movsl
and
xchg
and
adc
xor
dec
push
mov
cmp
rorb
or
xlat
movsb
out
scas
xchg
lret
mov
jecxz
and
ds
push
mov
cwtl
push
adc
shll
and
cmp
mov
mov
dec
loopne
or
push
jg
cmp
push
lods
lret
sahf
push
add
mov
nop
inc
xor
jb
inc
out
rolb
mov
mov
and
incb
mov
mov
push
push
leave
imul
cs
sub
jecxz
lret
cltd
sahf
sbb
and
mov
mov
ds
xor
mov
sub
popf
sarb
ret
mov
pop
jne
hlt
loope
mov
mov
ja
add
mov
sub
and
xlat
push
mov
pusha
xor
xor
xchg
pop
fsts
std
movsl
adc
shlb
adc
push
mov
fisubl
push
in
cwtl
out
loope
insb
xchg
out
shrb
push
mov
cmp
mov
add
in
cmc
or
test
push
push
repnz
lock
mov
lods
bound
push
nop
push
mov
btr
xor
dec
lea
adc
sub
xor
adc
js
rol
mov
call
enter
arpl
xor
pop
xor
mov
cld
popf
jo
leave
push
cli
cmpsl
or
push
add
in
arpl
add
add
adc
mov
and
inc
jno
pop
push
int
fs
mov
jno
cmp
ret
xor
imul
les
repnz
sub
popf
mov
cmc
sbb
inc
push
inc
push
sub
std
pop
xor
xlat
xchg
dec
pop
outsl
dec
aad
add
or
xor
ja
call
lods
xor
scas
in
fldenv
sbb
mov
imul
xchg
dec
sub
shll
enter
cli
or
pop
imul
or
xor
or
ret
inc
scas
xchg
ljmp
aam
jbe
nop
xchg
xor
dec
sub
pop
mov
andb
xor
pop
add
ds
sbb
imul
daa
lods
sbb
loope
adc
push
adc
push
jl
mov
and
push
pop
sbb
dec
sbb
mov
shll
push
jne
popa
add
sbb
add
iret
and
js
outsb
xchg
pop
cmp
push
lret
in
outsb
mov
or
add
orl
sbb
cmp
push
fcoms
or
adc
sub
xchg
add
mov
cmp
xchg
es
fdivs
xor
repz
lret
clc
mov
cmp
repz
mov
xor
jno
lcall
int3
pop
or
test
mov
mov
mov
xor
mov
add
lods
adc
in
jg
dec
mov
scas
jno
mov
and
xchg
push
add
enter
jne
and
ret
jle
mov
sub
jg
push
push
jp
gs
fimuls
or
jbe
inc
add
rcll
ja
jne
gs
xor
hlt
flds
adc
rorb
rcrl
lahf
orb
lods
out
mov
xchg
or
and
adc
rcrb
aam
adc
mov
jns
adc
push
mov
hlt
adc
stos
mov
popa
cmp
lods
adc
cs
add
sbb
xor
mov
and
xchg
and
push
test
mov
cmpsl
mov
xor
hlt
sub
jl
pop
add
or
cmp
dec
mov
pop
add
cmp
pushf
or
and
aaa
into
sbbl
mov
mov
cltd
andb
enter
sbbl
jmp
ret
lret
inc
jno
pop
cmp
add
mov
sbb
rol
mov
iret
push
es
cmc
gs
insl
pushf
fwait
dec
paddsb
shrl
lds
xor
mov
ret
jno
add
into
sahf
add
adc
mov
jge
mov
pop
and
xchg
clc
xor
cmp
jl
fs
out
mov
jg
in
imul
ud2
ja
cltd
stc
jo
out
mov
outsb
jno
andb
pop
sbb
sbbb
shlb
and
in
or
jo
inc
push
xchg
ljmp
imul
es
sbb
sub
je
outsb
pusha
sti
fwait
sub
movsl
jge
mov
out
or
jne
add
pop
dec
iret
add
mov
int
pop
push
mov
push
adc
lods
push
lahf
fidivl
sbb
push
das
mov
hlt
insb
roll
lds
cwtl
xor
js
xlat
and
shll
xor
inc
nop
push
arpl
mov
dec
and
mov
mov
inc
inc
cmp
xchg
fwait
inc
std
shrl
mov
inc
out
ret
inc
sbb
mov
test
jo
dec
fistps
mov
add
imulb
data16
sarl
pusha
in
pop
fmull
fsin
bound
inc
sub
add
pop
andl
inc
mov
inc
sub
xor
aaa
mov
cmp
daa
aaa
mov
jb
add
pop
fs
daa
mov
shll
push
sub
mov
rolb
popf
fldl
mov
repz
lods
repz
fwait
jns
xor
movsbl
sbb
or
rclb
sbb
iret
sub
add
test
shrb
cmpsb
daa
cmp
pusha
mulb
dec
push
outsl
scas
imul
sub
pop
mov
and
movsl
repnz
rcrl
dec
mov
push
push
dec
call
pop
in
mov
mov
xchg
sti
mov
xor
or
idivl
xlat
ret
dec
lods
iret
mov
andb
push
sti
and
mov
idivl
frstor
lea
scas
and
mov
or
stos
xchg
int
aaa
es
and
pop
mov
es
sti
sarb
and
inc
sbb
aaa
fistl
addr16
xchg
fs
enter
loope
xor
cltd
dec
sti
fucomi
jbe
pop
push
lea
lds
mov
or
iret
stc
arpl
push
fistpll
ficoml
addr16
fsubl
inc
sbb
test
push
or
fmuls
jmp
pop
and
sub
pop
mov
cmp
dec
mov
bound
and
lea
jp
cmp
sub
cmpsb
test
ljmp
jle
xor
xor
sub
inc
mov
or
stos
xor
inc
js
mov
das
xor
sbb
sub
test
inc
ret
cmpsb
movsb
xchg
mov
test
xchg
cmove
hlt
fld1
inc
in
sub
xchg
pop
sbb
sbb
mov
add
jg
sbb
xorl
xor
int3
test
adc
push
sub
jl
test
nop
loopne
ljmp
in
adc
xchg
and
stos
enter
iret
data16
aaa
imul
mov
add
cmp
lds
rol
dec
mov
out
xchg
stc
stc
add
inc
movsl
outsb
add
inc
sbb
adc
push
roll
add
out
adc
inc
mov
dec
out
jg
sub
sub
dec
dec
push
pop
repz
jge
movsb
or
insl
mov
stos
xchg
cmp
pop
mov
push
push
push
sbb
jnp
lret
pop
mov
add
ja
push
xchg
push
xchg
and
add
push
lcall
xchg
mov
leave
hlt
mov
mov
lods
cmp
jnp
and
in
inc
mov
fdivp
ja
pop
outsl
lahf
jl
shl
inc
jle
test
daa
test
in
dec
mov
pop
push
cmp
fmuls
jbe
movsb
cwtl
mov
pop
out
or
mov
xor
and
push
and
scas
xchg
inc
and
push
ret
mov
sbb
pop
scas
cmp
inc
mov
mov
xor
enter
jno
movsl
insl
subb
and
inc
add
mov
mov
mov
inc
xor
iret
es
fnstcw
adc
mov
decb
pop
dec
and
jne
mov
sub
fimull
aad
shrb
pop
sarl
sti
bound
aad
xchg
in
xchg
enter
std
fs
ret
xchg
loope,pn
mov
jne
mov
cmpb
mov
dec
testl
xchg
inc
xor
or
mov
mov
andb
cmp
out
dec
pop
or
fiaddl
jge
cmc
shl
ljmp
xchg
call
jb
shl
mulb
out
scas
mov
fadd
lock
idiv
sbb
xchg
test
adc
popf
cwtl
cmpsl
pop
inc
mov
enter
and
pop
cmp
fnstcw
or
mov
aas
adc
dec
xor
cmp
das
mov
push
dec
sbb
inc
jecxz
inc
xchg
in
cmpsb
mov
imul
pop
js
and
jno
push
ret
add
cmp
sbb
call
or
bound
bnd
mov
jecxz
and
aam
jmp
mov
inc
push
ds
mov
sbb
outsl
scas
push
in
pop
cli
push
pop
mov
mov
aam
jae
or
push
rol
push
add
ret
inc
adc
pop
outsb
jo
xchg
and
insl
fadd
fwait
add
gs
cltd
jge
fs
sti
sbb
jae
imul
fwait
xchg
mov
idivb
add
xchg
xchg
or
testb
or
mov
sti
sub
daa
push
sarl
xor
add
lret
sub
mov
pause
pop
fnstcw
arpl
dec
cmpsb
mov
jmp
lret
inc
and
adc
sub
dec
sti
addr16
mov
test
push
pop
js
xor
loop
in
in
jge
pop
inc
or
or
call
lods
inc
sub
or
lcall
mov
xor
repnz
sub
rcll
sbb
dec
js
cmp
imul
jg
push
sub
inc
or
cmpsb
mov
enter
scas
xor
cmp
or
ret
add
cmp
push
mov
mov
clc
hlt
movsl
dec
cltd
pusha
cwtl
and
push
push
xchg
jmp
dec
add
sbb
push
addb
scas
mov
loope
xchg
pop
mov
mov
mov
pushf
dec
gs
cli
pop
fwait
das
mov
pop
inc
push
pop
or
xlat
mov
adc
mov
ja
popf
test
pop
psubsw
mov
data16
shr
sub
lods
jnp
xchg
lea
fwait
aaa
int3
stc
mov
int3
frstor
pop
and
push
cld
lahf
dec
ss
cmp
test
push
jecxz
and
stc
fstps
pop
cbtw
popa
push
bnd
insl
mov
stc
jmp
add
xor
insb
xchg
hlt
movsl
sbb
out
push
imul
xor
rcl
jnp
imul
stos
pop
ljmp
lods
sti
inc
and
lods
ror
jmp
and
movsb
pop
scas
movsb
lret
or
fsubs
addb
popa
fisubrl
mov
clc
push
sbb
sbb
and
push
mov
pop
xlat
push
xlat
jmp
pusha
cmp
pop
mov
or
ret
imul
pop
adc
lret
sbb
inc
imul
inc
push
mov
lock
loop
test
sahf
fcompl
mov
add
xchg
testl
out
push
add
imul
or
fwait
in
or
jnp
shll
xchg
mov
push
mov
mov
mov
dec
lret
ljmp
je
xor
movsl
dec
add
cmpsb
fsub
dec
gs
or
fisttpll
nop
mov
sbb
outsb
in
jns
inc
and
jl
fidivrl
push
fisttpll
mov
xor
dec
ljmp
pop
je
push
mov
pusha
add
lret
mov
mov
in
addl
jle
outsb
xchg
jl
in
cld
cmp
cmp
test
pop
sbb
pop
xor
jns
ret
jmp
mov
sub
add
add
insl
stc
inc
mov
cli
mov
pushf
out
sbb
pushf
cmp
jb
data16
fwait
out
aam
gs
in
int
aaa
mov
sarl
out
imul
cltd
mov
mov
push
lock
loope
jmp
stc
movl
sbb
cmc
iret
in
xchg
es
xchg
dec
in
and
mov
addr16
test
jns
sti
or
sub
adc
mov
mov
or
and
andb
push
add
fisttps
add
in
loopne
hlt
fwait
leave
adc
push
stos
cli
push
sub
clc
in
mov
mov
ret
int3
cmp
dec
mov
add
dec
jbe
repnz
dec
ret
shll
call
xchg
jb,pn
xor
pop
mov
inc
loop
negl
jp
jns
fisttps
test
retw
into
and
xchg
xor
inc
mov
mov
dec
jl
lock
push
divb
das
inc
sbb
scas
sarb
or
or
bswap
mov
fwait
adc
inc
and
jnp
cs
push
frstor
in
dec
push
push
mov
arpl
movl
stos
xor
addr16
arpl
adc
movsb
sahf
mov
mov
sbb
scas
adc
push
xchg
jo
push
repz
jbe
push
lock
adc
movsl
xchg
cmpsb
js
rclb
cmp
xor
out
insb
jle
das
xchg
sbb
pop
adc
fs
aam
push
js
pop
lods
xchg
test
hlt
loop
cmp
pop
rolb
mov
dec
cwtl
js
test
cmc
test
jno
mov
rcl
fstpl
lahf
mov
pop
pushl
mov
dec
push
push
jbe
push
pop
shlb
jle
in
mov
pusha
mov
jle
test
cltd
lahf
push
hlt
jg
out
xchg
ficompl
cmp
les
loop
sar
test
sbb
mov
mov
fisubs
xor
in
jmp
mov
or
ss
mov
xchg
ret
jae
mov
inc
cmp
xchg
sub
aam
hlt
js
pusha
fbld
xchg
cmc
lcall
inc
dec
add
xchg
mov
popa
jne
adc
cltd
xor
sub
jecxz
xchg
mov
movsb
or
sarb
int3
pop
mov
sbb
pop
mov
cmp
sub
dec
cmc
sub
and
loopne
dec
stos
loopne
adcl
sbb
jp
rcl
sub
xor
repz
jns
rcl
mov
sbb
cmpsb
mov
push
sub
adc
jp
fdivl
cmp
sub
dec
shrl
dec
jnp
lret
popf
in
jl
jae
fimull
or
psubb
dec
gs
dec
mov
dec
push
pop
cmpsl
push
dec
jle
std
inc
sub
mov
not
pop
dec
orl
xchg
jbe
jo
loopne
xor
outsl
decl
fimuls
mov
repnz
shl
push
inc
sbb
out
test
cmc
std
jnp
mov
les
pushf
in
push
xor
sbb
cwtl
xor
mov
cmp
mov
arpl
and
sahf
add
push
or
push
push
push
gs
push
loop
imul
outsl
inc
inc
setnp
imul
push
scas
sahf
or
ljmp
shlb
lss
cmp
ja
jne
out
pop
or
mov
sarb
int3
in
jle
lahf
repnz
fildll
sub
mov
mov
mov
xchg
sbb
jl
adc
pop
adc
test
es
ljmp
gs
lock
repz
jns
and
adc
sbb
mov
jnp
mov
xchg
sbb
jge
adc
mov
loopne
inc
jecxz
fdivr
es
push
cli
jnp
mov
add
xchg
xchg
and
adc
and
and
jns
in
jmp
push
aas
arpl
xchg
repnz
add
sub
lret
jmp
insb
inc
add
daa
arpl
les
or
pop
mov
cmp
push
and
or
lahf
insl
pop
testb
cmp
mov
mov
mov
fdivp
ja
jne
mov
cmp
xor
and
jns
int
or
sbb
push
xor
or
adc
int
adc
jb
out
pop
sub
xor
push
xlat
jae
mov
andl
pop
jl
in
test
pop
shrl
cmpsb
icebp
push
jns
xor
shl
mov
or
lods
lock
push
mov
mov
test
push
jbe
or
out
fabs
mov
mov
daa
out
inc
into
out
pop
jp
sub
xchg
xor
sti
into
stos
fbld
dec
mov
repnz
rolb
push
adc
rcrl
xchg
jmp
test
push
adcb
pop
xchg
das
js
add
orb
sub
mov
mov
out
aam
xchg
or
pop
jl
inc
push
mov
outsb
sbb
mov
jns
int
cld
sbb
fimull
push
pop
lods
icebp
dec
lea
adc
cltd
sbb
bound
rcl
jb
lahf
fimuls
inc
fnsave
addr16
jmp
mov
loopne
cmp
mov
andb
and
les
mov
pop
mov
jnp
nop
adc
xor
dec
cwtl
dec
cmp
pop
in
xchg
mov
aad
shr
outsl
pop
cmpsb
hlt
xor
xchg
mov
xchg
pop
adc
inc
out
ja
pop
fwait
push
movsl
mov
push
repz
out
add
push
adc
dec
lret
cmp
pop
jo
rclb
arpl
jecxz
insl
loopne
pop
pop
xchg
adc
mov
sub
sbbb
push
jae
push
scas
mov
mov
inc
push
into
mov
sub
xor
outsl
pop
jle
jge
fs
cltd
jnp
mov
mov
or
enter
fwait
add
mov
out
scas
cmpsb
lcall
imul
and
jg
lods
rcrl
adc
push
inc
xor
adc
xchg
dec
push
jge
ret
scas
and
fildll
or
and
repnz
test
pushw
in
loopne
cli
mov
fsubrs
dec
cmp
cltd
adc
ja
fildll
push
mov
in
dec
dec
fld
stc
adc
mov
pop
lahf
jl
cmpb
jae
inc
clc
mov
popa
mov
cmc
xor
fstp
loop
cs
pusha
orb
dec
dec
mov
aas
andl
xchg
sub
in
imul
lcall
adc
inc
and
adc
cld
mov
add
int
adc
cwtl
dec
cmp
pop
push
or
jmp
leave
or
jg
or
cs
sti
jg
sbb
mov
push
jecxz
das
es
mov
adc
pop
xchg
pop
popf
push
pop
pop
lds
daa
mov
icebp
pop
and
ljmp
cmp
nop
adc
xchg
push
iret
stos
scas
xor
test
aas
jge,pt
sti
ljmp
pop
mov
sahf
dec
inc
nop
dec
xor
addr16
das
jmp
adc
mov
std
nop
das
push
push
mov
adc
cmp
jo
xchg
push
cltd
mov
push
jb
jmp
mov
movsb
pushf
jnp
icebp
mul
and
xchg
pop
loopne
jb
xchg
aad
push
insl
push
sbb
insl
aas
mov
jle
scas
xchg
jp
mov
in
adc
mov
outsb
sbb
lods
xchg
cmp
ret
lods
push
and
push
repnz
popf
cmc
jno
mov
lods
cmp
xor
call
aas
mov
add
mov
sub
mov
pop
pop
ljmp
or
ss
dec
sbb
out
adc
xchg
inc
test
sub
xchg
adc
outsb
fdivrs
insb
inc
inc
ds
sbb
in
sarl
inc
ljmp
push
cmpsb
sub
add
jecxz
insb
sbb
inc
fisubrs
decb
xor
mov
rcrb
pushf
sbb
push
arpl
out
jecxz
mov
jae
xor
bound
mov
ljmp
lods
pop
test
mov
adc
or
push
aaa
cmpsb
aam
les
push
mov
out
add
cli
xchg
test
mov
jb
in
push
or
lds
lret
and
dec
mov
aas
icebp
mov
sub
sti
push
les
in
insl
pop
es
hlt
xor
insl
rcll
in
icebp
and
lock
pop
jp
adc
imul
test
sub
movsb
cld
mov
dec
xor
mov
cmpsb
insb
ljmp
push
mov
das
vmread
sub
mov
dec
xor
cmp
sbb
adc
aaa
imul
sbb
lods
dec
fcoml
mov
cmp
rcrl
xchg
sbb
add
pop
pop
in
vdivss
dec
inc
stos
lods
xlat
not
dec
fdivrl
mov
sub
rolb
movsl
push
int
shlb
pop
add
mov
popf
gs
in
cmpsl
leave
inc
lcall
dec
jne
push
pop
inc
hlt
push
jnp
jae
rcrb
shlb
push
je
mov
cmp
push
pop
push
dec
jo
jle
xchg
xlat
push
dec
push
and
sahf
fadd
out
imul
and
cmp
repz
movsl
cwtl
incl
add
fldz
inc
mov
pop
jge
jmp
sarb
push
mov
ja
bound
push
pop
cmpsb
jge
out
pop
xlat
pushf
xor
add
xor
mov
seta
push
bound
fucomi
push
scas
inc
leave
adc
iret
dec
pop
sbb
push
scas
sbb
jb
sbb
pop
dec
mov
sarl
sti
mov
jl
shlb
jmp
jl
sbb
mov
insb
mov
push
pop
sti
hlt
mov
sub
mov
mov
mov
stos
ljmp
dec
jecxz
push
push
daa
pusha
and
lds
xor
jno
add
mov
push
rcll
aad
mov
xlat
sbb
gs
sbb
inc
mov
pop
mov
adc
lods
fidivrs
push
inc
outsb
vminsd
and
pushf
adc
out
adc
mov
std
xchg
mov
or
fsubr
cld
mov
outsl
xchg
xchg
fistpl
jo
and
mov
add
fstpt
addr16
adc
cmp
mov
push
xor
inc
mov
insb
jge
adc
mov
pop
jle
mov
ret
sti
or
mov
mov
nop
test
or
dec
into
stos
push
jle
xchg
push
repnz
jmp
iret
xor
add
pop
inc
mov
fdivl
es
sbb
cltd
mov
inc
cld
repz
sbb
sub
push
dec
in
adc
cmp
mov
fwait
daa
sub
cmp
movsl
mov
xchg
jae
fnstcw
lods
in
add
or
lcall
mov
xchg
lret
inc
sbb
js
outsb
mov
dec
ss
outsb
cld
gs
iret
add
ljmp
movsl
mov
push
cmp
shll
push
inc
std
das
sbb
aad
mov
cmpsl
jne
lds
jno
std
rclb
cmp
pop
sbb
bound
add
fs
push
int
push
in
daa
xchg
sub
mov
mov
and
inc
dec
and
mov
inc
or
in
push
mov
rcrl
insb
test
dec
jp
ja
mov
int3
mov
mov
mov
mov
out
cmpl
movsb
jno
pop
lcall
xorb
jne
insl
mov
movsb
adc
stc
ret
add
adcb
mov
ret
adc
cmc
mov
int
stc
lds
shr
aad
cmp
adc
cltd
movsb
out
lahf
inc
gs
fstl
in
push
pop
cmc
add
mov
js
rcll
sub
lcall
mov
push
jecxz
mov
mov
push
add
cmpsb
pop
jmp
xchg
popf
sub
sbb
sub
pop
fsubs
sbb
jnp
aam
pop
mov
sub
stos
lret
xchg
mov
cmp
dec
mov
insb
pop
fwait
add
mov
add
flds
xchg
imul
scas
pop
stc
jecxz
jno
jmp
jns
mov
xor
cltd
cmc
push
mov
movb
rcrl
sbb
fildl
pop
test
sbb
sbb
xor
dec
out
add
das
imul
xor
add
mov
inc
xchg
int3
pop
and
mov
adc
repnz
mov
pop
popf
xor
adc
shll
sahf
xchg
add
xor
push
mov
xchg
insb
push
iret
fs
jge
scas
fidivs
test
and
adc
cld
lret
mov
and
xchg
fs
std
fstpl
stos
dec
mov
mov
dec
hlt
in
in
and
push
call
pushf
dec
sub
adc
cmp
pop
aas
repnz
dec
pop
fildll
mov
inc
les
outsl
push
sbb
imul
xor
dec
add
lcall
stos
sub
imul
inc
popf
hlt
mov
js
mov
dec
aam
and
mov
arpl
xchg
add
adc
sub
shrb
cld
xchg
aas
jns
popf
inc
imul
jge
sbb
dec
mov
dec
and
push
daa
sbb
sahf
cs
or
adc
lahf
push
cmp
mov
jb
pop
sbb
cmpsb
mov
dec
scas
jbe
clc
mov
ja
dec
add
hlt
or
dec
inc
mov
xor
js
test
xchg
inc
dec
pop
cltd
lahf
jg
data16
mov
out
lret
xchg
out
xchg
mov
repnz
dec
insl
pop
cwtl
and
mov
xchg
inc
int3
stos
jecxz
lahf
scas
loop
lea
sub
push
sbb
insb
cmp
daa
jnp
clc
mov
test
and
push
or
xor
jmp
in
aaa
pop
dec
and
cltd
mov
sub
jne
lahf
lret
mov
pop
push
mov
movsb
pop
shll
add
insb
shrl
pop
jbe
jno
nop
pop
jg
outsl
aas
sbb
ja
or
shll
mov
sub
daa
gs
push
cmp
xchg
repnz
adc
lds
notb
or
jae
inc
lods
and
dec
sahf
clc
insb
inc
test
or
or
pop
outsl
adc
adc
jne
fisttpll
jg
dec
adc
jecxz
rcrb
fisttps
cmp
and
pop
repz
lods
mov
loopne
inc
nop
xchg
xchg
lret
pop
dec
and
faddl
mov
testl
int3
pop
lcall
ret
pop
or
and
inc
stos
lock
mov
push
daa
int
repnz
leave
mov
aad
stc
enter
lods
xchg
repnz
inc
push
insb
pop
imul
jmp
mov
and
fmuls
pop
dec
rclb
pop
mov
mov
aas
pop
pop
addr16
in
adc
mov
pop
mov
lcall
push
push
add
inc
pop
das
xor
jecxz
cmpsl
xchg
xbegin
mov
mov
lods
and
xor
mov
mov
outsb
cs
or
fwait
inc
jge
add
inc
jbe
jne
shrl
adc
add
imul
popw
call
aad
fsub
sub
push
push
fwait
and
and
xor
add
adcl
xchg
enter
lea
mov
in
mov
fcmovb
outsl
jae
mov
call
clc
lods
jge
call
in
loopne
incb
pushf
jl
xor
add
xchg
in
mov
pop
scas
adc
out
sbb
in
cli
dec
mov
pop
pushf
dec
popf
fs
sub
xchg
pop
std
fimuls
ja
sbb
mov
mov
addb
add
or
shr
leave
icebp
scas
sub
mov
out
cmpsb
lret
sahf
push
mov
adc
loop
mov
test
xchg
mov
sub
mulb
out
bound
popf
daa
ljmp
insb
popa
scas
jl
mov
test
daa
xor
cmpsb
out
dec
out
idivl
push
and
jbe
pushf
fdiv
pop
adc
push
addb
fistl
popa
cld
push
xor
cltd
imul
push
addr16
pop
push
test
insl
inc
aad
jmp
cmp
subl
dec
mov
loope
bound
push
xor
ds
decl
sub
mov
sti
nop
mov
in
rcr
xchg
xchg
push
shll
mov
push
out
jmp
push
and
jg
ja
mov
addr16
std
lahf
pop
icebp
mov
fpatan
jo
and
push
cld
enter
and
pop
mov
dec
mov
mov
sahf
jb
imul
lret
out
cld
fs
out
add
cmp
repz
sub
out
add
add
inc
outsl
cli
or
les
leave
jg
mov
pop
xchg
and
dec
adc
inc
mov
push
mov
jns
dec
jp
xor
imull
sub
pusha
adcl
mov
fs
jecxz
xchg
aas
sbb
cld
and
std
jecxz
enter
loope
sbb
jb
insl
adc
in
pop
icebp
push
jp
std
add
in
jo
lea
fsubrp
stos
nop
fsubrl
push
mov
or
cmp
xchg
mov
popf
push
pop
outsb
dec
pop
rcll
lods
adc
jge
jmp
imul
cmp
int
test
add
xchg
decl
sub
mov
insl
jg
iret
jecxz
out
std
inc
ljmp
adc
lock
test
sbb
jmp
sbb
sbb
dec
xor
sub
shll
adc
cs
bound
xor
xor
and
pop
xor
sub
inc
xchg
ja
inc
setb
cmp
loopne
adc
int3
decl
fistpl
fistps
fsubrs
and
idivb
adc
lret
ret
push
and
sub
jne
add
imul
mov
roll
mov
je
out
out
mov
out
addl
rorl
and
cmp
dec
cld
dec
mov
clc
pushf
cltd
icebp
dec
cmp
sti
stos
mov
mov
mov
or
ljmp
fistpll
arpl
test
mov
push
jns
repnz
push
ljmp
sub
pop
rcrl
out
ss
dec
push
sub
shrl
sub
cmpb
dec
pushf
popf
inc
int3
cmp
mov
mov
mov
add
loopne
cmc
sbb
jge
jle
fcmovb
mov
push
jo
inc
sbb
xchg
imul
lcall
pusha
je
adc
stos
mov
ss
cmp
xor
push
push
or
fwait
out
mov
dec
stc
mov
lods
cvtpi2ps
cmp
stos
std
jno
lods
xorb
mov
add
jge
mov
pop
or
or
aas
sbbl
out
mulb
and
add
push
pop
lahf
lods
int3
lret
push
sti
cmp
ret
mov
mov
daa
push
hlt
ljmp
sbb
add
mov
jmp
loopne
cltd
dec
mov
out
cmp
pop
adc
cmp
repnz
inc
fs
xchg
dec
or
mov
jns
test
decb
mov
cmp
out
add
sarb
xchg
dec
xlat
cmp
jle
push
xor
inc
rcrl
sbb
adc
sbb
popa
mov
push
cltd
push
jle
out
subl
es
movsl
cltd
mov
imul
jbe
dec
test
jge
adc
mov
dec
xchg
into
inc
arpl
cld
jmp
or
sbb
loopne
cltd
std
stos
push
mov
push
or
xchg
or
fdivrs
in
pop
test
cmp
mov
mov
mov
outsl
xchg
leave
inc
out
loopne
lea
sub
out
mov
movsb
xchg
xchg
lret
cs
cmp
es
pop
test
xchg
push
dec
lods
mov
pop
stos
iret
or
inc
xchg
push
fs
pusha
push
loopne
lock
pcmpgtb
cwtl
sti
mov
sbb
es
mov
shlb
hlt
push
xor
ret
scas
arpl
sbb
xor
pop
or
fsubrs
repnz
fldenv
jo
inc
add
inc
mov
iret
cmp
scas
inc
repnz
inc
jbe
call
and
das
push
mov
repz
cmc
inc
add
movsl
rolb
jg
lahf
xchg
outsl
push
adc
lds
jbe
das
push
jnp
push
iret
stos
cltd
sub
ss
push
inc
cmp
fcoml
adc
pop
xchg
sub
xor
xor
add
jae
cmpsb
sbb
xchg
mov
inc
cltd
and
andb
rclb
fsubrs
dec
mov
lret
popf
enter
fimull
cmp
sub
out
mov
jbe
aas
addl
cli
lods
ljmp
test
iret
dec
sbb
rorb
xchg
imul
mov
cld
cmp
pop
mov
mov
or
inc
mov
sbb
mov
push
sbb
inc
inc
cmp
leave
xor
repnz
sbb
rolb
cmpsb
jo
mov
mov
pop
jmp
das
test
sysenter
and
and
xchg
sub
ja
sti
test
int
and
popa
adc
aam
mov
mov
out
dec
xor
xchg
add
push
push
data16
repz
or
adc
or
jle
in
roll
lds
xlat
xor
xchg
add
xor
divb
jl
pop
xchg
jecxz
sbb
fbstp
xor
addl
add
stos
mov
jne
popa
push
pop
cmp
int3
lock
aam
or
mov
lds
xor
push
gs
cwtl
sbb
add
push
aas
div
insb
shll
pop
adc
pop
arpl
inc
sahf
les
adc
mov
dec
push
enter
lret
mov
adcl
bswap
into
mov
or
xchg
std
fiadds
jmp
xchg
push
pop
sbb
lahf
push
xchg
xor
xlat
and
fisubrl
ror
or
ds
jg
arpl
dec
xorl
daa
push
mov
loopne
push
pop
mov
call
sbb
cmc
pop
idivl
add
sub
sub
add
addl
dec
sahf
lcall
std
jno
outsl
cmp
andl
jl
lock
cmp
lret
outsb
je
inc
les
mov
cmp
cmc
cmp
adc
idivb
cwtl
addb
sbb
jge
add
iret
xor
sub
bound
ljmpw
in
mov
push
loopne
push
hlt
pop
pop
fildll
data16
adc
fstpl
cmp
insl
jbe
push
mov
dec
xchg
mulb
or
push
add
or
lods
jae
ljmp
sahf
push
lahf
loope
push
cld
jg
sbb
xor
pop
jecxz
lods
fstps
adc
out
adc
xchg
dec
pusha
xorl
movhps
push
or
sbb
imul
imul
xor
subb
inc
iretw
jg
add
lahf
arpl
lock
in
jp
inc
fcoms
or
add
test
cmp
call
lret
pop
ret
addr16
fwait
sarb
mov
mov
out
shlb
pop
pushf
imul
popf
xchg
dec
push
repz
ret
pushf
dec
xchg
inc
cmpsl
mov
or
jmp
fs
jp
cli
out
xor
test
mov
sbb
rcrl
mov
data16
testb
test
mov
mov
jo
pop
pop
pop
mov
pusha
fisubs
adc
jb
mov
cs
ds
sub
lock
test
aad
jnp
mov
pop
sub
xchg
fisubrs
inc
cwtl
movsl
dec
test
in
sub
jge
push
mov
cmp
push
sbb
imull
xchg
add
sub
push
pop
mov
inc
daa
xor
repnz
shl
jbe
add
pop
negl
pop
leave
cmc
inc
add
repnz
aaa
aad
gs
cwtl
lahf
in
xorl
or
mov
fcomps
cld
addr16
orb
in
jno
xchg
xor
das
push
cmp
jge
sbb
mov
out
iret
pop
aam
adc
sbb
in
lret
das
daa
lcall
lods
idivb
lret
rcrb
or
mov
dec
cwtl
fsubr
shll
push
sarb
xor
ss
sti
mov
sub
push
mov
cmpsb
xor
mov
mov
push
jo
test
push
sub
fwait
into
pop
mov
xchg
xchg
jne
stos
cmp
aam
sti
lock
and
dec
fisubs
shll
lcall
outsb
xchg
xor
xor
jnp
aam
mov
cltd
mov
pop
cmp
je
and
jb
push
bound
jno
lods
mov
aam
les
and
insb
xchg
cmp
xchg
aad
pop
and
in
mov
aad
jmp
outsb
pop
push
stos
js
push
shrb
pop
addr16
cmp
jmp
repnz
daa
fisubl
hlt
sti
inc
inc
or
call
sub
or
push
cli
add
test
std
jle
mov
push
push
mov
adc
push
jle
movntq
sbb
jne
in
cs
test
test
mov
popf
inc
xor
mov
inc
outsb
cwtl
pop
inc
hlt
xchg
mov
divl
fists
mov
pop
and
in
mov
adc
insb
add
lods
push
mov
pop
int3
inc
or
sbb
sahf
lret
ljmp
roll
lcall
int3
mov
sbb
ja
mov
scas
arpl
push
jl
mov
cmp
aad
jmp
mov
lcall
test
ret
fbld
shrl
mov
adc
mov
xchg
stos
gs
lahf
bound
lods
mov
mov
cmp
lods
test
lock
mov
insl
push
push
ja
or
cmp
dec
jbe
mov
in
aas
inc
in
cmp
into
inc
mov
ja
jmp
out
sbb
inc
pusha
int
aas
scas
sbb
push
cmp
movsb
sbb
add
mov
iret
clc
sub
iret
mov
dec
sub
mov
inc
in
push
mov
mull
mov
mov
dec
jmp
fwait
into
into
jmp
ret
xor
mov
sbb
stc
dec
inc
dec
cmp
ffree
push
arpl
pop
mov
cmp
add
fs
xor
test
mov
jo
or
cs
mov
dec
push
dec
test
adc
pop
inc
cwtl
mov
mov
mov
sbb
add
add
xor
jnp
adc
xchg
sahf
sub
inc
xor
das
enter
fsubs
cmp
rolb
into
outsb
sbb
icebp
insb
bound
int3
xor
add
js
dec
inc
test
add
retw
out
shlb
push
flds
dec
je
add
mov
test
stc
jo
or
pop
xchg
cmpsb
and
inc
add
fsubrp
fwait
ss
loope
sbb
mov
lods
stos
test
fsubs
je
cli
mov
jae
jnp
inc
jg
pushf
xor
ja
daa
xchg
inc
sti
ja
in
sbbb
mov
adc
pusha
push
mov
int
pavgb
jmp
ljmp
dec
pop
pop
mov
or
inc
je
dec
push
xchg
xchg
mov
aam
add
lea
js
jecxz
fmul
daa
dec
mov
and
loopne
call
lods
mov
les
sbbl
lods
pop
push
push
xchg
into
int3
jb
xchg
cmc
fistpl
fsub
xor
xlat
mov
sub
or
repz
cmp
push
dec
pop
sti
imul
lods
xor
xchg
sbb
sbb
xchg
adc
xchg
add
mov
shll
cltd
jp
cmp
jne
mov
jnp
add
mov
rcrl
cmpsb
scas
pop
adc
sub
loop
stos
popa
movsb
mov
mov
enter
or
sbb
arpl
out
mov
aas
out
ljmp
mov
stc
fcmovnu
pop
dec
test
push
push
mov
pushl
pop
orl
daa
ret
adc
iret
leave
pushf
dec
cwtl
and
xchg
in
mov
push
or
and
pop
pop
jg
cmc
push
sti
pop
jle
sarb
in
into
daa
call
jno
add
mov
stos
sub
leave
and
stos
pop
div
outsl
pop
mov
loopne
lret
je
ret
xor
in
in
mov
fwait
movsl
dec
push
sbb
pusha
mov
xor
fwait
mov
mov
imul
dec
adc
cmp
popa
cs
mov
ret
das
andb
mov
in
and
xor
movsl
push
shlb
add
data16
push
push
pop
jno
ljmp
sbb
pop
add
cmp
js
sub
add
ror
pop
sbb
xchg
push
dec
cmc
cmp
sub
stc
and
js
add
fmuls
pushl
sbb
sbb
mov
ret
ret
mov
cmp
add
or
rcr
push
adc
inc
xor
divb
push
scas
stos
or
xchg
ret
orl
push
cmp
xchg
xchg
mov
sub
pop
test
movsb
pop
xor
cmp
add
ss
outsb
daa
fimull
adc
mov
or
dec
xchg
cwtl
add
add
dec
cmp
orl
sarb
xor
testl
inc
jecxz
insb
insl
mov
mov
or
mov
mov
sub
lea
mov
daa
jp
mov
inc
daa
cwtl
les
mov
jecxz
loopne
outsb
cs
jnp
pop
mov
pop
xchg
repz
adc
cmpsl
push
pop
jge
lea
jecxz
mov
rorb
pop
loop
sbb
popa
or
stos
mov
popf
ss
adc
inc
add
mov
adc
leave
mov
das
test
inc
loope
test
sbb
jecxz,pn
shll
add
pop
push
push
sbb
cmc
cli
ds
add
cmc
and
adc
jge
push
data16
in
sbb
enter
jl
les
mov
push
jno
loopne
ljmp
mov
jmp
test
cmp
das
mov
push
loopne
bound
notb
sarb
repz
push
dec
mov
imul
int
cwtl
lret
cmp
repz
jnp
sub
mov
jl
shl
hlt
adc
push
rsqrtps
dec
ja,pt
call
movsl
and
sub
data16
mov
mov
add
xor
or
cmc
fistl
daa
mov
nop
lock
push
add
jb
imul
push
aaa
outsb
fs
xor
pusha
leave
mov
rcpps
out
sbb
push
sub
pushf
aas
add
and
fwait
lds
and
ror
nop
stos
and
clc
inc
faddl
lret
cmc
aas
jl
cmp
xchg
gs
pop
jne
gs
inc
sub
mov
jne
das
pop
lea
ss
push
mov
dec
xchg
std
mov
stos
cmp
sbb
lcall
scas
jle
fistps
test
jmp
ficoms
push
stc
ds
js
in
add
or
mov
adc
and
and
and
mov
pop
inc
mov
cmc
fstp
into
mov
push
jp
sarl
negb
sarb
mov
subb
push
jecxz
and
fistpll
cs
aaa
rcrb
adc
sub
push
imul
movl
arpl
mov
aam
mov
ficomps
push
test
in
dec
popa
push
cli
bound
push
or
cld
add
sbb
mov
adc
cmp
test
pop
mov
push
jo
je
mov
lahf
pop
push
popf
jns
test
cmp
fcmovnb
testb
cwtl
mov
mov
lahf
or
jmp
cmp
add
xchg
sti
icebp
test
imull
repnz
push
imul
lods
ds
add
shll
jo
inc
hlt
adc
sbb
mov
decl
cmpb
sbb
js
add
arpl
pop
dec
imulb
push
call
adc
mov
test
lock
in
bound
jle
movsl
lds
test
pop
pop
aaa
adc
bound
movsl
push
iret
ret
sahf
xor
fwait
sbb
jmp
sti
jb
pop
icebp
in
mov
xchg
dec
arpl
std
inc
fists
mov
mov
mov
pop
adc
mov
mov
mov
or
jecxz
mov
mov
and
push
daa
aas
xchg
sub
inc
dec
mov
push
xor
hlt
inc
xchg
or
sub
fsubl
xor
cmpl
lret
sbb
ljmp
xor
or
mov
cs
std
mulb
cmp
ror
pop
or
dec
test
cs
arpl
jno
enter
fdivr
rorb
xchg
jmp
nop
jecxz
sbb
mov
adc
and
cmc
mov
pop
mov
test
out
dec
push
mov
mov
insb
mov
xor
cmp
inc
lds
push
popf
movsb
sti
ljmp
insb
es
clc
xor
rcl
fmull
lock
pop
int3
repnz
cwtl
shlb
inc
repz
gs
jg
sbb
push
adcb
dec
jl
mov
addr16
and
jmp
push
adc
jmp
xor
adc
xchg
stc
xchg
dec
mov
outsl
cli
cmp
xor
mov
push
sbb
pop
cmp
mov
push
test
pop
xlat
icebp
shlb
outsl
lock
aad
dec
or
pusha
push
orb
add
dec
mov
cmp
push
push
inc
mov
decb
fimull
or
mov
push
ret
mov
xor
imul
stos
jnp
ss
jmp
add
adc
adc
imul
lahf
jp
pop
mov
inc
cltd
jbe
loope
dec
in
xchg
roll
ja
mov
adc
fs
pushf
inc
scas
xor
inc
push
mov
mov
push
inc
int3
xor
mov
push
push
test
in
cmc
or
aaa
xchg
test
pop
mov
int
or
dec
in
cmp
shll
sbbb
pxor
fisttps
push
xchg
inc
fildl
jno
daa
inc
pop
clc
pop
pop
sub
jp
add
xchg
or
aad
xchg
out
mov
dec
pop
mov
enter
push
mov
jno
jg
incl
sub
inc
stc
mov
pop
or
outsl
add
push
andb
inc
cmp
mov
ret
jnp
pushf
xchg
cmpsb
mov
add
mov
fwait
sub
push
and
sub
add
add
jb
icebp
repnz
sbbb
jg
aas
je
lods
mov
lock
shlb
call
movsb
lret
sahf
out
pop
pushf
idiv
aaa
jge
adc
out
mov
rcll
into
sahf
push
test
add
lcall
addr16
out
sbb
int3
gs
mov
pop
test
pop
push
popf
in
aam
jbe
rolb
pop
push
fistpll
pop
xchg
aaa
test
sub
fs
js
cmp
lret
cmc
and
lret
cwtl
imul
push
lods
call
cmp
adcb
lcall
sahf
imul
jmp
cmpsb
int
aas
daa
jns
cmp
mov
bound
push
xchg
pop
insb
scas
in
push
stos
mov
mov
jb
hlt
imull
cmp
cmp
push
jl
jnp
cmp
test
lea
rcll
fwait
jmp
sbb
lahf
ds
mov
jmp
test
inc
pop
mov
scas
pop
fisubs
add
cmp
push
mov
dec
nop
xchg
fimuls
jp
addl
roll
dec
bound
aad
mov
inc
mov
mov
sbb
shlb
pop
ret
scas
cwtl
or
mov
stc
adc
mov
fsubrs
repz
into
cmp
lahf
stos
pop
pop
test
lahf
push
fimuls
test
or
je
adc
and
push
dec
lret
mov
push
add
inc
push
add
or
inc
lahf
push
inc
adc
mov
dec
dec
fstps
loope
addb
subb
inc
mov
pop
test
cmpsl
inc
push
cmpl
mov
das
jbe
js
notb
rcrl
cmp
pop
xlat
pop
jmp
lock
dec
jle
jae
cmp
xchg
in
mov
inc
and
ret
jae
adc
inc
lahf
and
inc
sbb
push
or
mov
mov
icebp
xor
pop
dec
addl
sbb
push
mov
lods
xor
shl
es
and
movsl
lods
inc
cwtl
or
stos
test
test
jge
nop
or
shlb
pop
sbb
out
bound
jg
xor
enter
idiv
sub
inc
cmpsb
das
dec
ret
mov
mov
mov
and
aad
sub
ja
xchg
shlb
dec
leave
push
test
gs
pop
pop
sub
cmpxchg
xchg
xchg
or
push
cmc
mov
ljmp
and
js
or
xchg
mov
or
mov
sub
outsb
sub
add
jl
cmpsb
mov
ret
clc
lods
mov
and
fcom
xchg
sub
cmp
dec
mov
cltd
xchg
xorl
push
mov
stc
les
insb
xor
sti
jo
test
pop
in
fstps
pop
call
xchg
sbb
aaa
shrl
mov
pop
pop
xchg
xchg
fidivl
rorl
mov
je
aaa
cmpb
loop
lcall
jl
dec
mov
pop
jecxz,pn
add
andl
mov
sbb
and
roll
movsl
mov
loopne
push
adc
popf
cmp
shll
int3
cmpb
or
icebp
push
daa
mov
sub
and
sub
and
fucomip
inc
sub
xlat
and
fcmovu
or
mov
fimuls
push
repnz
cld
sub
scas
test
aas
aad
dec
xchg
mov
adc
imul
jge
push
fwait
cld
sub
jle
imul
pop
cmc
lods
mov
mov
sbb
or
pop
xchg
sarl
inc
mov
and
aad
and
mov
cmp
sub
add
jge
cmp
ficomps
rorl
add
pusha
call
push
aaa
stc
xchg
dec
das
insb
lahf
lods
dec
or
lret
enter
fwait
push
mov
pushf
lock
xchg
scas
out
andl
rcl
adc
out
ljmp
push
addr16
cmc
data16
pop
pop
pop
cmpsb
jb
rcrb
arpl
jb
cmpsl
inc
dec
in
and
cmpsl
mov
dec
push
mov
inc
icebp
mov
push
add
pop
mov
mov
jne
outsl
jb
dec
adc
loope
push
mov
orl
pop
and
fsubr
imul
repz
fcmovnb
pop
mov
lret
push
into
add
in
cmpsb
arpl
xchg
xchg
in
xchg
mov
in
xchg
lods
in
inc
pushf
add
add
add
pop
aaa
pop
mov
push
imul
sub
out
xor
pop
idivb
out
lea
imul
push
jge
cmp
fsubs
fwait
cmc
sarl
idivb
inc
in
jo
sbb
adc
sti
or
and
xchg
inc
push
mov
cmc
xchg
jge
gs
sbb
pushf
out
xor
sub
pop
add
roll
mov
add
inc
loopne
stc
mov
push
sub
shlb
insl
mov
ret
inc
je
xchg
inc
popa
daa
xchg
jecxz
hlt
inc
or
mov
test
push
lods
xor
push
cwtl
dec
inc
gs
mov
aam
mov
cmp
out
pop
shrl
xorl
xchg
cmp
push
repnz
jl
inc
adc
pop
shlb
mov
sti
mov
adc
sahf
jecxz
cmp
inc
icebp
and
pop
mov
test
and
cmp
outsb
cmp
vmovntps
cmp
loop
sub
xchg
ror
sbb
push
jae
lods
cmp
pop
outsb
or
mov
aaa
pop
pop
push
add
lret
pop
faddl
scas
sub
lds
jl
inc
mov
fs
pop
test
mov
mov
sub
push
xor
je
iret
cmp
aam
dec
mov
sbbb
es
out
sub
inc
scas
ss
lods
xor
push
and
inc
loope
dec
pop
loope
pop
inc
jno
je
scas
sbb
and
mov
cltd
pop
xor
mov
add
aam
int
ficoml
xor
inc
test
and
mov
sub
add
iret
sub
cmp
mov
mov
mov
mov
xor
cld
xor
mov
insl
ljmp
or
sub
and
aam
inc
jmp
sbb
adc
in
mov
test
sub
or
lock
sub
mov
add
xchg
pop
insl
xchg
insb
test
mov
outsl
sbb
dec
das
and
xchg
icebp
pusha
xchg
mov
ds
out
out
cmpsl
xchg
subl
aaa
loopne
insl
cmp
std
xchg
inc
in
xor
stc
loop
cmc
xchg
push
cmpl
shl
jp
mov
ret
pop
jnp
sub
into
xchg
xor
mov
std
in
jmp
fwait
jl
cli
jno
icebp
outsl
mov
mov
outsb
and
xchg
push
cltd
test
sbb
mov
iret
and
roll
cltd
cmpsl
popf
jno
enter
xor
pop
inc
ret
mov
xchg
adc
dec
fidivl
mov
out
cmpsb
push
fmuls
in
adc
mov
loop
dec
xor
roll
lea
dec
andl
inc
ret
xchg
dec
and
in
out
mov
mov
sub
sub
cmp
lahf
cmp
les
test
sarl
dec
enter
sub
jge
xchg
xchg
mov
sub
push
mov
or
mov
sbb
jmp
push
and
dec
andb
sbb
mov
test
pop
cmpsb
fldcw
ret
xchg
cs
adcb
sahf
outsb
shrl
add
lret
sti
stc
mov
mov
push
or
adc
bound
adc
sbb
out
lret
xor
mov
mov
scas
lret
adc
jns
lds
pushf
lods
loope
mov
fsubs
mov
outsb
insl
shl
hlt
stc
std
popf
lods
dec
faddl
mov
push
fists
mov
add
cli
cli
mov
data16
pop
pop
ljmp
aas
push
adc
adc
ja
aas
or
das
fistl
clc
xchg
or
and
mov
mov
mov
xchg
or
sub
out
in
test
leave
mov
stc
xchg
cmp
cmp
lods
shll
or
sbb
loope
push
mulb
cmp
cld
sbb
and
sbb
inc
jp
int
cltd
cmp
rorb
shrb
sub
aas
cmp
adc
pop
aaa
mov
mov
stos
pop
and
push
xor
lcall
or
idivb
jb
fstps
xor
mov
push
push
ss
je
xchg
test
pusha
lret
xor
out
leave
ja
add
cltd
sbb
divb
cmp
cwtl
frstor
xor
add
push
or
xchg
adc
or
les
add
jns
mov
hlt
insl
in
xor
por
test
and
jmp
and
movsl
jg
jae
stos
xchg
push
add
cltd
push
in
pop
in
dec
and
jns
cwtl
pop
dec
cmp
pop
push
adc
add
pop
mov
add
push
testb
inc
and
clc
mov
ljmp
pusha
inc
inc
mov
mov
sub
sub
xor
sub
arpl
jp
push
sub
inc
xchg
rcll
cmp
lods
or
xrelease
add
dec
sub
mov
in
out
xlat
push
pop
inc
add
mov
sbbl
or
test
rorb
inc
or
xor
lret
push
andl
cmc
mov
sub
mov
dec
mov
mov
ljmp
cmc
lea
mov
cmp
lahf
push
or
fisttpl
mov
dec
or
mov
mov
push
inc
cwtl
test
add
cmpb
cmp
lcall
aam
dec
outsl
cmpsb
aaa
cmp
sub
int
push
invd
jae
cmp
movsl
sbb
outsl
pop
inc
repz
xlat
add
cmp
pop
mov
cld
xchg
inc
fs
pop
leave
sahf
fstl
dec
xorl
fwait
test
loope
push
adc
and
mov
dec
sbb
cmp
adc
ja
fsts
sub
insb
xchg
pop
add
pop
lds
pushf
rcl
enter
jae
sbb
insb
mov
rorb
push
push
popf
mov
bound
test
sbb
adc
xchg
and
cmp
sub
rcll
jbe
loopne
lods
sub
push
fwait
mov
mov
cmpb
enter
mov
insb
popf
sbb
cs
loope
pop
nop
jg
inc
movsl
test
stos
into
dec
cmp
insb
loopne
daa
movsl
xor
or
dec
push
aaa
das
inc
jmp
jnp
inc
or
ja
inc
out
xchg
iret
push
jns
mov
pop
out
lods
ja
mov
int3
sbb
push
mov
ljmp
xchg
push
inc
add
adc
xchg
inc
aad
xor
outsl
add
iret
xchg
and
lret
enter
mov
cwtl
or
add
adc
push
dec
insl
adc
mov
mov
sub
repnz
add
push
divl
push
xchg
sahf
ljmp
test
sahf
push
cli
cmp
mov
mov
std
mov
in
icebp
int3
shrl
ret
and
scas
loope
dec
cmp
cld
add
xchg
fnstcw
test
roll
scas
cmpsl
xor
xor
pop
jg
jno
icebp
pop
and
dec
cltd
or
cmp
push
movl
push
lret
mov
loope
sub
ret
nop
add
fcompl
inc
imul
pop
mov
pop
ret
lock
mov
push
jno
add
mov
nop
mov
je
and
les
mov
add
pop
push
pusha
and
sbb
loop
and
jbe
jne
add
push
sub
mov
repz
jno
or
push
fnstsw
or
sbb
sub
ret
push
push
sub
mov
sbb
addr16
jg
pop
clc
fcoms
roll
add
aad
stos
add
mov
out
xchg
jle
pop
ret
xchg
and
xchg
mov
lret
inc
mov
add
mov
out
outsl
sbb
divb
shrb
push
and
loop
mov
xor
pusha
leave
negb
fildl
sarl
adc
pop
and
sub
dec
mov
mov
or
into
xorl
add
mov
nop
push
sbbb
dec
dec
mov
loopne
enter
rsqrtps
push
sub
push
fs
xor
xchg
dec
or
lret
mov
mov
mov
icebp
push
int
addl
cltd
mov
mov
adc
movsb
dec
iret
aaa
les
rol
stos
or
bound
sbb
movsb
inc
dec
loop
push
xchg
xchg
jl
jmp
dec
es
leave
xchg
add
femms
leave
and
xor
push
sbb
mov
or
sahf
or
mov
test
xor
jle
mov
int3
inc
sub
mov
rcr
add
add
sbb
mov
decl
test
xor
jmp
adc
arpl
iret
ret
loopne
mov
pop
or
cltd
pop
rorb
lcall
popf
lds
cmp
jb
arpl
fildll
inc
outsl
inc
mov
xor
icebp
pushf
enter
pop
lret
fwait
bound
jmp
testb
imul
mov
sbb
push
jo
push
add
rorb
and
mov
movsb
jge
push
js
inc
in
repz
out
cmp
mov
out
fwait
cmpsb
mov
gs
sti
sub
hlt
mov
inc
dec
jno
xchg
or
jecxz
cwtl
hlt
shlb
and
cmp
dec
pop
into
dec
dec
call
pop
pop
or
lock
cmp
mov
pop
and
push
sub
sbb
cld
mov
addr16
pop
imul
jge
nop
das
in
mov
mov
stc
lahf
movsl
loopne
sub
out
or
xchg
mov
lods
sahf
pushf
sbb
inc
pop
addr16
das
insb
dec
mov
pop
or
mov
push
mov
mov
lcall
mov
or
dec
aaa
faddp
sbb
enter
test
mov
adc
jp
add
adc
popa
or
jmp
fs
push
xor
adc
shrl
inc
sub
int
pop
scas
jecxz
subb
fstl
dec
rcr
cmp
jp
fdivrp
dec
xor
pop
outsl
in
pusha
jnp
lahf
lret
push
call
xchg
and
insl
in
in
insb
jbe
add
jge
es
orl
mov
in
outsl
icebp
in
insl
ss
mov
loope
sahf
adc
adc
xor
inc
int
imul
mov
xchg
cli
ss
mov
adc
jo
pop
push
aas
push
pop
fsubs
ds
es
in
jns
cmpsl
out
ret
xchg
mov
add
dec
insl
push
cmc
inc
inc
pop
xchg
push
jno
aam
movsl
enter
fcoms
js
sub
aad
out
push
nop
cmp
pusha
es
adc
lcall
stos
dec
inc
clc
outsb
mov
inc
adc
jb
sub
cmc
push
sub
and
cmp
rcll
push
sub
out
repz
test
mov
iret
fdivrs
mov
int3
cmp
cmp
mov
test
inc
cmpsl
cmp
sub
lret
movsl
outsl
cmp
call
xor
lret
and
les
sub
orl
mov
lds
imul
pop
jge
out
or
pop
sarl
test
cwtl
test
cwtl
lret
mov
sahf
or
mov
lods
ljmp
gs
add
and
stc
movsl
sub
stc
add
fisttpll
mov
jbe
sbb
aaa
xchg
add
sbb
ret
mov
pusha
mov
lret
jmp
xor
daa
xlat
hlt
push
and
sub
add
dec
cmpsl
insb
arpl
cltd
mov
ficoml
dec
sub
xor
xchg
pop
scas
cmp
mov
imul
fcoms
test
and
mov
jno
jmp
adc
jo
push
enter
cmp
shll
push
iret
dec
or
dec
inc
mov
jp
dec
ficomps
rcl
shlb
repnz
dec
in
cli
aad
nop
adc
mov
rcrl
test
not
sbb
jae
and
jle
or
mov
sub
ja
mov
popa
dec
out
lcall
out
stc
les
mov
dec
lods
add
mov
sub
jne
divb
les
add
rolb
fdivrs
leave
dec
or
je
cmp
hlt
in
pop
cmpsb
and
je
and
out
dec
push
push
push
pop
dec
or
jbe
inc
iret
stos
leave
std
fnstsw
lods
xor
iret
scas
fildl
test
mov
adc
inc
mov
mov
scas
push
xchg
jno
jo
inc
push
push
inc
xchg
lahf
adc
inc
in
adcl
inc
sbb
mov
fisttpl
adc
mov
jae
cld
clc
add
cmc
popf
cltd
xor
daa
call
fists
mov
mov
nop
scas
popf
insl
pop
rcll
les
inc
pop
scas
add
pop
cmp
lds
dec
adc
cs
mov
mov
sbb
add
adc
testl
test
push
in
fisttpl
andl
pop
ljmp
lret
cmp
aas
pop
ret
pop
jae
stos
and
sub
sub
push
push
pop
sbb
mov
idivl
mov
jns
mov
ljmp
dec
stos
cwtl
cmp
xor
cvtps2pi
mov
or
xchg
mov
push
aaa
cli
add
add
movsb
xchg
xchg
xor
dec
pop
or
roll
movsb
jecxz
sub
arpl
jns
mov
pop
dec
repnz
sbb
sbb
pop
movsb
xor
sub
pop
cmpb
jae
pop
adc
push
jns
add
mov
or
inc
sbb
in
mov
sub
popa
mov
daa
mov
lret
in
mov
fldenv
mov
out
and
movsb
jne
daa
rcl
mov
stc
loop
movsb
jbe
mulb
out
xor
push
push
scas
xchg
add
psubb
movsb
in
mov
jp
shrb
enter
test
mov
cmp
ljmp
fldl
adc
mov
or
cmp
adc
arpl
sub
fucomi
sub
xchg
push
mov
adc
ret
fs
ss
or
push
cmc
dec
fcoml
data16
daa
dec
clc
add
push
repnz
add
in
sarb
xor
fwait
dec
aad
inc
dec
cmp
add
shlb
das
por
push
sbb
int
add
lods
mov
adc
fnstsw
and
bound
ret
xchg
xchg
fdiv
sub
lods
icebp
negb
pop
pop
push
push
stos
mov
ljmp
lret
lret
pop
cli
push
outsl
jae
cmp
or
push
jnp
rorl
jge
mov
fcmovnu
pop
out
adc
js
hlt
stos
rcl
data16
pop
push
cmc
lret
ficomps
mov
hlt
shlb
dec
ja
cltd
fdivrs
mov
fbstp
mov
ds
loopne
mov
cmp
pop
outsl
sbb
adc
jbe
push
aam
or
jl
add
push
jp
sub
mov
push
sbb
outsl
into
sub
xlat
dec
int3
sub
clc
or
jo
ficoms
aad
cld
cmp
mov
pop
movsb
push
jle
mov
mov
shlb
sbb
add
sub
repnz
push
jp
sbb
push
loopne
push
xor
dec
sahf
adc
xor
ljmp
leave
cs
call
andl
jmp
ljmp
push
mov
inc
outsl
adc
inc
or
shrl
shr
xchg
gs
fiadds
jp
je
shll
add
cmpsb
or
pop
into
inc
shll
xor
adc
mov
enter
ljmp
xor
cmpsb
jo
imul
mov
mov
int
mov
jnp
inc
ret
cmp
mov
fbstp
pop
repnz
mov
les
jecxz
sub
stc
in
mov
mov
jae
les
scas
mov
mov
bound
cmp
sub
fwait
shlb
je
cmp
push
lods
vmovss
and
add
or
in
leave
outsl
outsb
pop
sarb
jl
or
in
outsb
push
out
push
sbb
dec
sbb
adc
das
or
nop
outsb
sbb
mov
ret
outsl
test
addb
fsubs
sahf
mov
and
xchg
sub
adc
xchg
outsl
stos
cwtl
pop
movsb
sub
dec
jmp
cmpsb
ja
adc
test
loope
mov
and
and
jb
cmp
dec
aas
jno
xchg
inc
cmp
das
sub
adc
push
jmp
and
jge
jp
jb
lea
sub
adc
and
in
fdivrs
sub
jo
xchg
push
jne
mov
and
cmp
inc
dec
loope
rorl
push
jmp
js
push
adc
lret
bound
sub
sbb
cs
sub
push
loope
in
insl
fistpl
jecxz
cmc
lods
adc
sbb
cmp
push
add
int3
or
add
leave
xchg
jns
adc
shlb
repnz
push
add
into
ss
pop
in
jo
xor
mov
cmp
sub
jae
mov
mov
stc
sub
xor
jecxz
movsb
imull
jecxz
pusha
aaa
aad
push
nop
imul
push
sub
pop
cvtpi2ps
inc
mov
imul
ljmp
and
cmpsb
pushf
or
mov
mov
test
and
push
lods
pop
cmp
stc
dec
xor
push
mov
aam
and
pop
jge
in
into
sar
sbb
xchg
dec
xchg
or
or
insl
cmp
xor
stc
push
push
mov
stc
pop
add
hlt
add
test
dec
leave
insl
adc
add
test
xor
mov
mov
cmpsb
js
imul
jns
clc
int3
xor
outsb
cmpsl
popa
mov
int3
and
pop
sti
lock
pop
cmpsl
dec
pop
add
fisttpll
pop
imul
and
insb
jg
dec
in
jmp
xor
mov
adc
push
sarl
shlb
adc
sub
pop
das
inc
out
in
int
hlt
dec
test
jmp
sbb
and
aad
hlt
aas
sub
int3
ret
movsl
ret
jno
bound
loopne
adc
dec
imul
mov
cmp
dec
das
insl
push
pop
mov
ret
adc
or
jp
divl
rclb
pusha
sub
mov
push
sbb
mov
add
pop
fstp
pop
incb
test
ljmp
xor
hlt
or
aas
or
push
dec
data16
add
mov
jo
add
cmp
movsb
add
sub
out
loopne
icebp
xor
aas
cmp
jg
push
imul
out
jns
scas
xchg
mov
cs
pop
adc
movsb
stc
cmp
mov
push
dec
jne
push
cltd
cmpl
inc
jo
or
and
dec
rclb
xor
and
adc
add
sub
mov
test
mov
flds
ret
push
xor
test
push
cltd
fwait
daa
jae
shrb
mov
or
rcr
sub
sti
sbb
xchg
dec
test
ret
sub
cmpsl
fsubr
xor
je
fidivrs
xchg
cld
mov
mov
mov
loopne
sub
jle
and
pop
mov
pop
cmp
adc
scas
jo
pop
iret
dec
xchg
xlat
cmp
xlat
cwtl
push
iret
pop
add
jmp
push
jb
xchg
push
into
repnz
insb
mov
xlat
add
insl
or
jo
andb
pop
cltd
sbb
inc
mov
test
xlat
pop
not
add
dec
inc
xchg
dec
mov
mov
jne
push
xchg
add
jecxz
mov
pop
mov
clc
pop
pop
cmp
lret
sub
adcl
or
stos
cmc
xchg
cld
xchg
mov
aad
adc
sub
arpl
inc
push
inc
rorl
push
out
xchg
loop
outsl
repnz
inc
pushl
nop
push
mov
mov
sub
cs
loop
aad
mov
pusha
sbb
jae
xchg
push
and
adcl
pop
les
adc
lret
jnp
loop
push
rcrb
mov
fwait
push
iret
xchg
les
xor
fs
out
fstl
dec
jmp
pop
push
jecxz
push
ret
lods
and
mov
and
dec
push
mov
in
xchg
and
pop
arpl
adc
lcall
and
rclb
out
int3
inc
fistps
out
in
lcall
pop
fidivrl
dec
and
stc
xor
ror
mov
popa
int
adc
jmp
test
and
popl
push
lret
sbb
std
fidivs
sbb
in
mov
push
and
ss
jmp
mov
sbbl
xor
and
ret
xchg
insb
mov
lret
xchg
mov
es
imul
int
test
test
jg
arpl
xchg
clc
lcall
inc
fldcw
mov
jne
push
test
push
pop
jns
mov
jle
cmp
imul
pop
dec
jnp
fiadds
movsb
aam
lods
insl
mov
fcoms
arpl
mov
mov
or
cmp
push
repz
mov
cli
stos
loopne
icebp
shl
fisubrs
cmc
sub
ljmp
add
adc
jge
daa
into
repz
and
cmc
jecxz
popa
dec
into
inc
fwait
xchg
fwait
aam
ds
xor
icebp
xchg
sub
enter
cmp
mov
xor
setg
cwtl
sub
cmp
mov
mov
xchg
mov
popw
push
out
fbld
and
dec
icebp
or
shl
and
add
mov
xlat
and
scas
mov
les
lods
insl
aas
popf
sbb
leave
sahf
into
decb
mov
sbb
jbe
popf
call
movsb
xchg
outsl
fcoms
pop
xchg
hlt
inc
cmp
ljmp
les
dec
mov
cmp
or
sub
sub
in
stos
mov
hlt
fs
push
xchg
inc
test
xor
mov
or
sahf
adc
jne
jmp
bound
push
push
push
dec
loope
jno
repnz
incl
cmp
std
loop
push
cmp
insl
test
mov
pop
mov
sub
sbb
mov
pop
in
sbbl
cs
or
les
ja
lret
sub
outsl
cmc
repnz
ret
xchg
xor
jb
mov
ret
in
lea
xor
mov
lahf
xorl
mov
in
lods
sbb
dec
shlb
push
add
sbb
sub
andb
mov
stos
and
xchg
add
loope
jnp
adc
xchg
push
call
int
repnz
xchg
popf
push
xchg
out
imul
mov
call
lods
pop
or
repnz
cmp
or
ja
dec
scas
xchg
icebp
aad
sbb
fldcw
stos
mov
mov
mov
insl
addr16
adc
jle
mov
pushf
jb
shlb
lods
pop
pop
and
pop
shlb
and
or
add
addr16
gs
sub
adc
jno
mov
add
xchg
mov
xchg
lea
mov
add
mov
inc
out
jbe
xchg
add
xchg
test
inc
movsb
loop
add
push
mov
loop
das
push
orb
addb
add
xor
in
xchg
popa
xlat
inc
repz
mulb
pusha
out
aad
xor
repz
jg
pop
inc
imul
pop
dec
out
fstpt
in
clc
sbb
and
div
push
sti
sub
jo
lods
fistl
or
into
cmpsb
js
mov
into
ljmp
mov
xor
scas
xor
jecxz
add
cli
ret
popa
imul
push
bound
jbe
movsb
repz
stc
repnz
push
inc
sub
fmull
cld
dec
stos
inc
insl
mov
out
scas
pop
fistl
jl
inc
or
pop
push
cmc
in
cmpsb
xchg
xchg
loopne
rolb
dec
lds
ja
test
push
and
mov
fists
xchg
jmp
inc
xor
pop
xor
in
and
xchg
xchg
pop
and
repnz
stos
loope
insl
push
and
mov
dec
loopne
and
and
aas
jecxz
inc
and
xchg
out
popa
cvtps2pi
call
fisubrl
push
cmc
mov
mov
aad
push
xor
pushf
cmp
sub
loopne
cmpsb
aas
mov
lret
and
ret
xchg
clc
mov
pop
cld
stc
jmp
jmp
push
enter
mov
je
sub
stos
dec
sbb
push
imull
add
xor
jg
jbe
and
xchg
stc
add
xchg
adc
decb
adc
xchg
push
iret
inc
xchg
test
xchg
repz
icebp
pop
out
sub
pop
fst
lret
ds
mov
jo
repnz
ja
sbb
dec
push
pop
fiadds
shll
or
xor
shrb
xrelease
mov
mov
lock
push
push
pushf
stos
sbb
scas
mov
pop
jmp
mov
cld
xchg
fs
jns
sti
aad
jp
or
das
iret
mov
jno
push
adc
cmp
inc
nop
sbb
mov
sarb
pop
sbb
mov
jmp
cmp
mov
pushf
jge
imul
xor
add
pop
jo
ficompl
jne
enter
ficoms
rcll
in
pop
xor
dec
insb
cmp
jbe
jae
les
pop
gs
test
jae
add
sub
jns
jge
loop
out
xchg
test
jmp
lods
lods
daa
daa
push
and
pop
push
pop
cld
cld
ret
lahf
cs
push
je
outsb
mov
punpckhbw
pop
mov
sub
xor
cld
mov
ficoms
xor
add
jl
adc
movsb
scas
pop
sub
lret
and
dec
cmp
jae
orl
lcall
ret
mov
in
dec
push
cli
cmpsl
jo
int3
and
xchg
push
lock
shrb
or
xor
ret
cltd
ljmp
mov
imul
cmpsl
aad
call
jl
gs
test
and
movsb
sub
mov
or
pusha
add
mov
ds
out
fsubrs
push
jg
dec
xor
push
push
push
sbb
test
mov
outsl
cmp
cmp
jae
adc
addr16
cltd
push
mov
push
push
cwtl
mov
mov
inc
sub
out
ret
in
add
add
or
jmp
hlt
int
shlb
xor
out
cmp
test
xor
adc
aas
ja
fdivr
sub
loope
add
hlt
cmp
jb
aas
inc
push
loopne
dec
lea
and
xor
scas
jbe
fstpt
inc
xchg
stc
push
sarb
out
enter
lret
or
mov
into
xchg
subb
mov
and
push
xor
ret
test
mov
sub
test
cs
outsb
stc
enter
ss
daa
repnz
mov
pusha
lret
fbld
movsb
push
lret
push
ljmp
in
and
add
jae
loop
les
cmp
or
add
sub
dec
sbb
cmp
aas
scas
cmp
jecxz
in
push
test
xor
mov
inc
roll
leave
dec
testb
test
dec
lret
jmp
out
aas
jb
push
pop
lods
insb
mov
das
pop
mov
mul
push
and
xlat
push
popa
pop
inc
push
andl
or
popf
fdivl
xor
mov
in
faddl
div
ror
mov
mov
popl
jg
xor
xchg
jns
fistpll
in
push
dec
mov
in
scas
mov
push
scas
adc
dec
lods
ja
fucomi
xor
imul
nop
sbb
push
leave
sbb
call
sbb
mov
loope
sub
pop
add
push
loop
insb
stc
xchg
mov
fistps
ss
cltd
dec
stos
iret
or
dec
and
sbb
insb
cmp
mov
in
aaa
les
push
aam
mov
lds
ss
lea
inc
mov
mov
ficompl
into
cwtl
and
pop
out
test
push
lods
stos
js
lock
xchg
int
push
fcomps
rclb
cmpsl
call
xchg
sbb
shlb
pop
arpl
mov
cmpsb
xchg
jp
xchg
mov
addr16
aad
dec
jns
lret
dec
or
lds
inc
imul
adc
sbbl
dec
adc
pop
pop
sbb
imul
pop
stos
pop
mov
imul
in
xchg
xchg
nop
xor
adcb
jnp
decl
popf
and
and
or
data16
pop
popa
out
inc
fidivrs
push
sbb
adc
lods
aam
mov
add
pusha
adc
test
pop
arpl
std
negb
pop
cmp
pop
scas
frstor
adc
jno
or
lret
add
aas
add
fs
imul
jne
add
repz
push
dec
aaa
fistl
cmp
sub
scas
and
scas
lea
mov
fimuls
rcll
movsb
pop
or
inc
sub
fucomi
inc
lret
jo
popa
jmp
pop
push
dec
enter
repnz
inc
sahf
jo
push
pop
scas
in
shl
and
sbb
gs
lcall
xchg
insl
sub
xchg
in
leave
lds
or
leave
rsm
mov
dec
pop
push
sub
scas
hlt
jnp
xchg
xchg
test
outsb
adc
jmp
mov
test
cli
lea
out
out
pop
add
jns
jno
sahf
jecxz
jmp
xorl
jns
lea
dec
lods
mov
cmc
fnstcw
add
lock
sahf
sub
add
inc
xor
dec
mov
incl
and
pop
in
insb
lret
xchg
cltd
int3
in
xchg
mov
jae
cmp
fidivl
std
in
or
lods
jbe
lret
cwtl
test
mov
inc
xor
mov
arpl
into
jge
xchg
jle
aas
sti
cmp
rcl
pop
sahf
adc
jno
out
jmp
cmpb
dec
cmp
pusha
jp
scas
jp
out
nop
sub
negl
inc
sbb
dec
push
mov
dec
fistps
fists
pop
jne
adc
bound
out
stc
pop
std
rolb
and
out
mov
les
inc
jmp
push
sbb
inc
ret
push
jg
inc
outsb
mov
sti
testb
movsl
jecxz
adc
mov
iret
gs
nop
and
shll
loope
inc
lcall
loopne
pop
pop
mov
aas
pop
stc
xor
and
arpl
mov
lock
sar
ljmp
enter
bnd
and
jg
mov
negl
jne
cld
jle
cmpsl
cmp
rcrl
call
adc
repz
mov
sub
negl
js
inc
or
sbb
xor
addl
and
cmp
mov
xchg
dec
test
xchg
call
add
cwtl
xchg
mov
ds
inc
xor
sub
dec
push
push
mov
fimull
xchg
arpl
push
jo
test
push
inc
lret
fs
in
pop
jg
xchg
jbe
out
decb
xchg
push
cmpsl
aad
popa
inc
sub
push
xor
into
into
stos
add
gs
insb
lds
adc
pop
cmp
or
mulb
repnz
xor
in
out
clc
pop
subl
pop
sbb
icebp
popa
fcmovne
adc
mov
arpl
shrl
adc
xchg
add
jns
scas
and
cmpsb
insl
dec
in
pop
sub
rclb
inc
rcrb
jge
xor
mov
adc
inc
inc
je
cmpsl
cmpsb
mov
mov
cmp
or
sub
inc
cs
push
mov
cld
fwait
into
outsl
aas
push
cmp
or
shrb
addb
push
jne
pop
stos
test
pusha
jl
insl
sti
imul
loope
stos
jg
std
imul
sbb
xor
pusha
cwtl
out
aaa
fbld
add
add
cmp
inc
mov
lahf
pop
add
sbbb
mov
cmp
pushf
stos
xorb
fidivrl
lret
outsb
jb
jg
sbb
mov
mov
mov
adc
es
pop
call
cmp
imul
xchg
or
hlt
lock
movsb
addr16
jnp
jno
rcl
ljmp
or
daa
or
iret
cwtl
mov
aaa
cmp
jmp
pop
cmp
sub
cli
cld
daa
ds
mov
mov
loopne
out
adc
jbe
lds
xor
mov
into
aam
sbb
sub
mov
fnstsw
push
add
mov
jp
push
fsubrs
push
push
adc
shrb
rcrl
mov
sbb
push
test
jl
mov
adc
dec
sub
xor
jbe
icebp
rcl
cmpsb
divl
lock
mov
adc
mov
out
mov
je
popa
dec
push
mov
arpl
and
cmp
sti
inc
sti
scas
adc
xor
in
push
cmp
jbe
mov
or
insb
and
jo
out
sub
push
rorl
adc
add
test
pop
jecxz
cmp
jae
loop
push
stos
das
in
sub
out
lock
subb
lods
imul
pop
iret
cs
out
mov
into
mov
jmp
fists
aaa
lds
or
sub
pushf
bound
sub
lret
inc
or
sub
cld
pop
div
sub
arpl
les
rclb
xchg
loope
repz
icebp
mov
pop
lea
or
adc
or
mov
mov
xchg
lds
iret
sbb
inc
js
pop
and
sbb
leave
and
rcl
sbb
scas
int3
insb
mov
pop
pop
mov
out
rcrb
dec
cmpsl
push
enter
and
and
or
or
out
enter
mov
sbb
sbb
mov
cwtl
mov
sti
lahf
sub
bound
scas
xchg
mov
out
fcompl
cmp
sub
or
stc
adc
xor
jecxz
test
jno
dec
inc
test
dec
js
test
iret
neg
jnp
enter
jno
push
rolb
jo
mov
iret
sarl
movsb
imul
sbb
xchg
or
mov
mov
in
xor
insl
sti
mov
icebp
sub
xchg
shll
stos
jp
pop
out
ret
pop
fnstsw
popf
mov
push
movsl
mov
xchg
cmp
enter
hlt
movsl
insb
sub
mov
mov
xchg
lret
xor
mov
lret
xchg
sbb
jno
dec
push
std
mov
add
rcrb
push
gs
jp
int3
xor
out
mov
add
aam
push
pushf
leave
jb
jnp
dec
out
stc
mov
xor
add
or
cmp
push
dec
fnstcw
mov
jbe
scas
repz
mov
push
in
stc
fldcw
xlat
add
adc
jns
mov
push
mov
test
das
cli
mov
jno
cmp
into
adc
cmp
cmp
adc
lods
adc
or
dec
mov
repz
add
and
pop
dec
outsl
mov
jge
add
rorl
dec
push
dec
enter
hlt
aas
mov
or
pop
addr16
mov
sahf
xchg
sahf
stos
inc
push
dec
sbb
add
addr16
fwait
adc
or
int
push
hlt
movsb
out
jb
jno
lret
cwtl
mov
jg
ret
inc
test
mov
cmovp
movsb
jns
cmp
stos
add
or
repz
mov
cwtl
dec
mov
xchg
cmp
cmp
stos
xor
ljmp
dec
jae
andl
and
xchg
push
imul
roll
inc
xor
mov
leave
fcomip
pop
pop
inc
add
push
dec
mov
add
in
lret
xchg
fstps
scas
or
cmp
je
adc
mov
jecxz
insb
jp
mov
xchg
pop
inc
xor
js
dec
fxch
in
clc
and
mov
stc
popf
pop
jo
pop
jno
mull
jae
jae
cmpl
cli
jp
jbe
sub
mov
xor
fstl
cmpl
mov
mov
popa
jmp
icebp
jne
xchg
add
add
xor
neg
inc
movsl
lods
icebp
and
push
lret
fnclex
repz
push
mov
in
and
or
imul
mov
pop
mov
ret
js
mov
mov
xor
cmpsl
sbb
sbb
inc
jne
sti
movsb
scas
jmp
es
scas
mov
and
test
push
outsl
sbbl
mov
push
xchg
cwtl
pushf
sbb
es
outsb
dec
je
or
dec
xchg
lret
sub
and
ss
xor
movsl
int
test
xchg
rcll
and
sub
daa
pop
inc
fldt
shlb
and
ret
adc
xor
sub
sbb
testl
cmp
dec
imul
mov
shll
fldenv
mov
shlb
jne
lahf
add
xchg
in
cmp
and
div
mov
int
lsl
xor
lcall
dec
in
push
adc
rclb
in
fs
fstpt
ficompl
ret
cmp
les
add
in
adc
push
dec
imul
cltd
mov
pop
scas
jb
lahf
ljmp
cli
jecxz
xlat
jp
mov
movsl
mov
imul
sub
xchg
or
fdivrl
in
addr16
push
inc
iret
dec
call
popa
and
push
xchg
shlb
into
mov
sahf
mov
xchg
push
push
sub
mov
lret
xchg
cli
ret
ds
push
movsl
movsb
and
pop
fidivl
xor
dec
mov
push
scas
aas
in
fcomip
pushf
sub
es
push
aad
arpl
push
xchg
fsubrs
pop
lds
xlat
popa
iret
repz
push
rcll
nop
push
mov
cmp
xchg
push
rolb
jns
std
test
lahf
sbb
lods
push
outsb
sbb
lds
push
std
cmp
ret
lahf
jo
mov
lea
push
sbb
pop
sub
sbb
pop
and
repz
les
sbb
imul
mov
mov
mov
stos
insl
jmp
push
xchg
hlt
cmpsb
push
mov
fsubrs
mov
adc
and
push
aas
fimuls
jnp
jl
shlb
scas
jne
js
push
cli
ds
test
scas
dec
mul
sbb
aas
dec
add
mov
mov
jl
fists
pushl
inc
adc
addr16
mov
sahf
cld
jo
jl
mov
mov
shll
sub
scas
or
or
ret
cwtl
sub
lcall
dec
dec
mov
jae
adc
push
loop
cmpsl
mov
add
test
and
or
int
jle
or
loopne
int3
test
out
jecxz
xchg
mov
sbb
fdivs
push
pop
pushf
ret
je
loop
arpl
xchg
repnz
test
pop
inc
xchg
mov
push
adc
pop
mov
out
addr16
scas
jbe
jle
mov
xchg
je
lods
lods
jle
cs
imul
out
inc
into
and
mov
shrb
lea
pop
pop
loopne
in
mov
xchg
inc
jmp
insl
jae
mov
jecxz
dec
ss
out
fisttps
sub
push
mov
dec
movsl
sub
out
add
cli
push
hlt
cwtl
std
pusha
leave
imul
or
test
mov
jp
push
push
popa
mov
or
imul
rcll
mov
mov
dec
mov
xlat
jb
divb
or
mov
cmp
cmp
clc
inc
repz
push
jg
in
stc
xor
inc
pop
dec
mov
or
adc
jb
cwtl
push
push
pop
pusha
aaa
push
aaa
mov
ret
aad
pop
mov
sub
lds
mov
mov
imul
and
jp
xor
mov
mov
xchg
sub
inc
movsl
std
rcrb
jmp
pop
pop
hlt
or
jno
into
xchg
ss
ror
es
pop
into
mov
dec
mov
fadds
int3
add
test
loopne
jb
inc
push
or
jge
dec
lret
stos
push
outsl
xchg
lahf
xor
mov
adc
lods
pop
jae
jne
lea
mov
mov
popf
pop
and
push
in
lock
out
cmp
fwait
dec
ds
cld
fisubrl
pushf
push
pop
ds
add
xor
fisubl
cs
mov
push
movsb
dec
and
pop
in
mov
jae
xchg
and
js
in
or
jmp
sub
and
sarb
mov
mov
add
loop
and
jb
xor
mov
clc
jecxz
out
shl
xchg
icebp
xchg
repnz
push
sbb
cmpsb
cmpb
test
std
mov
sbb
add
lret
cmp
adc
push
out
insl
enter
xchg
in
loope
arpl
mov
mov
xor
out
ds
shlb
jp
popa
inc
push
xchg
cmc
nop
sbb
popa
outsl
ja
cmpsb
es
mov
aam
mov
dec
in
inc
call
push
xor
cld
int3
sarl
xchg
rcll
pop
imul
test
jge
outsl
cmp
or
adc
xor
mov
mov
fmulp
sbb
mov
data16
fwait
leave
lcall
sti
lods
sub
or
addl
cld
lea
xchg
dec
stos
loopne
xor
mov
out
dec
mov
jecxz
loope
jo
ja
push
mov
ss
dec
sub
cmp
dec
jno
dec
sahf
mov
repz
sbbb
hlt
cmpsl
lea
mov
xchg
ja
call
sbb
test
lret
xchg
sahf
in
das
in
pop
fldenv
cltd
add
fsubl
jmp
add
adc
rcr
sti
lods
lcall
jmp
xor
mov
xchg
repz
or
std
xor
shlb
aad
sbb
push
test
out
es
sbb
inc
pusha
fcoms
jmp
insb
cmp
icebp
mov
pusha
dec
pusha
ljmp
imul
ret
fwait
test
mov
mov
jg
clc
adc
mov
jnp
push
mov
sbb
adc
cmpsl
lds
adc
adc
jnp
stc
inc
mov
into
mov
xchg
call
pop
cmc
push
push
fcomp
push
imul
dec
addb
outsb
adc
in
dec
sbb
ficoms
outsb
loopne
cmp
mov
jmp
cs
sbb
mov
das
xor
shr
inc
xchg
jnp
push
jl
mov
mov
jne
movsb
adc
jnp
cltd
push
adc
mov
xchg
imul
jbe
decl
popa
pop
add
lahf
inc
cmp
movsl
fstpl
fs
and
pop
lock
int3
xor
inc
lcall
xchg
mulb
sub
dec
mov
loope
iret
nop
inc
inc
outsl
loopne
pop
add
repnz
mov
add
or
push
sbb
jecxz
aad
in
fucom
int
xchg
out
add
xchg
and
insl
xchg
and
out
push
dec
jg
leave
inc
mov
push
mov
or
jns
mov
mov
adcl
jae
jb
shlb
cmc
das
sbb
ret
out
push
adc
xchg
dec
mov
push
jne
dec
jg
sub
ja
jne
lods
outsl
mov
jo
xor
stc
dec
arpl
scas
push
push
pop
cmp
sub
xchg
pop
add
push
sub
fldenv
nop
jb
stos
add
out
test
std
repz
jnp
sub
je
cmp
stc
add
dec
arpl
stos
cmp
inc
popa
sub
push
mov
mov
xor
mov
pop
rol
push
inc
inc
fwait
inc
pop
jl
and
call
into
xchg
push
sub
cli
pop
sub
std
and
loopne
cmp
cmp
lods
movsl
dec
xor
out
ret
jmp
pop
xchg
xor
cmpsl
xchg
sbb
ss
xchg
xor
cmp
xor
popf
inc
in
cld
lcall
add
repz
ret
insb
and
pusha
add
jg
hlt
xchg
jns
xchg
or
push
imul
shlb
mov
pop
pop
mov
out
cmp
gs
jbe
push
jae
mov
sahf
jge
arpl
inc
lahf
iret
sbb
lretw
ret
cmc
xchg
subl
loopne
add
fmuls
dec
pop
mov
jbe
mov
jge
push
and
insl
fmulp
ljmp
add
mov
add
pop
sub
mov
pop
repz
add
xchg
inc
dec
mov
ror
xchg
shrl
and
ljmp
mov
out
adc
leave
jns
rcr
lahf
mov
xor
incb
cmp
and
add
and
movsl
loope
out
xchg
push
pop
lahf
test
push
jns
jl
and
cmp
gs
cmp
les
push
sub
fmuls
repz
fincstp
mov
lods
xchg
cs
push
inc
cwtl
mov
ret
aad
jno
add
add
mov
hlt
std
pop
or
fcmovbe
rorb
sub
arpl
mov
xchg
push
fwait
push
cmpsb
sub
cmp
mov
xor
cld
mov
xchg
test
and
mov
lret
lret
adc
lahf
mov
insl
inc
pop
sbb
jl
out
mov
in
loopne
sti
ret
gs
lea
lods
or
ds
insl
psubsw
pop
cmp
and
mov
sbb
inc
push
mov
dec
jmp
cld
int
cmp
sbb
dec
cwtl
sub
cmpsl
data16
xor
inc
sub
sbb
cmp
sahf
fmulp
lcall
mov
dec
sub
jg
cli
jae
pop
xchg
xchg
outsb
jecxz
out
push
fs
push
push
lods
imul
cmp
xchg
lahf
xor
jne
in
aaa
fistl
ret
mov
sahf
mov
fcmovu
leave
jae
cmpsl
fcoml
sub
sarl
mov
loop
add
sar
lahf
dec
and
fnstcw
movsb
js
inc
jg
jle
push
sub
dec
mov
adc
jmp
push
add
or
cmp
iret
pusha
test
jnp
fimull
xchg
daa
stc
sub
insb
adc
sbb
dec
jb
dec
inc
lret
or
push
push
push
or
jge
divb
push
cmp
sbb
push
movsl
cld
sarb
mov
sub
shll
adc
imul
repz
hlt
xor
xchg
mov
movhlps
sbb
daa
lock
dec
sub
faddl
sub
push
pop
push
push
ret
pop
jmp
in
push
insb
and
cmp
dec
sahf
loope
aam
je
leave
jp
jns
mov
adc
loop
pop
test
push
and
push
dec
dec
pop
cmp
adc
fwait
addr16
inc
cwtl
lcall
call
xor
imul
lahf
repnz
mov
jb
cmc
mov
mov
mov
es
add
or
bound
mov
mov
adc
push
nop
adcl
das
lods
jnp
mov
imul
rorl
jmp
rcr
lret
xlat
jg
in
push
dec
mov
mov
das
mov
out
mov
mov
iret
js
stc
dec
xor
xor
iret
fiadds
mov
mov
test
les
cmp
pop
into
pop
jne
adc
mov
and
sub
inc
aas
pop
push
fiaddl
mov
or
inc
in
dec
rcrl
xor
ljmp
pop
cmpsl
jmp
sbb
adc
xchg
or
jmp
mov
loope
stos
adc
and
dec
shlb
xlat
mov
xchg
push
or
pop
mov
pop
sbb
adc
ljmp
mov
jne
movsb
dec
xor
call
adc
in
lret
mov
push
push
lret
mov
mov
add
and
mov
lea
and
mov
pop
andb
dec
mov
bound
push
leave
sub
cmp
les
fisttps
push
add
add
stos
mov
xchg
idiv
xor
mov
in
popl
mov
fs
paddusw
faddl
in
sub
sub
pusha
push
lods
pop
sbb
cmp
xor
aas
out
pop
mov
stc
fwait
xchg
idiv
pop
jmp
add
dec
cmp
xor
inc
sub
int
jg
push
out
mov
push
inc
dec
pop
test
xchg
and
in
mov
jne
mov
mov
aas
pop
pop
repnz
jge
sti
mov
xchg
outsb
in
or
jae
and
out
inc
mov
sarl
pop
jno
cmpsl
jl
out
mov
leave
inc
imul
dec
cmp
iret
xchg
and
in
mov
outsb
xchg
xor
push
add
xchg
and
mov
inc
loop
add
pusha
jmp
dec
or
rcll
dec
dec
test
mov
test
pusha
cmc
sub
inc
nop
iret
xor
xchg
mov
or
adc
hlt
insb
push
lret
inc
xchg
bound
mov
test
idivl
aaa
ret
cmp
jno
mov
sbb
add
shrb
xchg
lea
rcrb
fldt
movsl
mov
jge
bound
dec
pop
xor
sbb
bound
imul
pop
pop
stc
clc
pop
xchg
sbb
xchg
dec
bnd
sbb
sbb
push
sub
cmpb
mov
push
cli
sub
xchg
jno
dec
cmp
mov
mov
or
scas
mov
mov
jmp
or
ds
or
lcall
fcomps
mov
mov
cmp
sbb
xor
insb
lock
jl
add
int3
pop
mov
test
jp
mov
dec
inc
push
call
sbb
lcall
ja
mov
dec
movsl
repnz
lea
xchg
popa
cmpsl
stos
mov
imul
ds
and
jae
mov
js
and
pop
cli
or
rcll
jmp
jo
dec
dec
jecxz
psubd
push
iret
jecxz
xchg
xor
mov
or
cmp
jmp
push
movsl
add
sbb
jecxz
lea
mov
or
xor
jmp
sbb
cltd
cmp
adc
test
sti
nop
and
pop
lods
aam
out
add
negb
inc
inc
loopne
inc
and
mov
outsl
mov
popa
pushf
pop
mov
dec
mov
inc
mov
pusha
aaa
inc
inc
sbb
das
or
inc
adc
lret
inc
popf
jmp
or
pop
out
nop
scas
pop
xor
pop
fcom
xchg
scas
and
xchg
jmp
ljmp
pusha
clts
sbbb
rorb
or
inc
push
inc
pop
es
movsb
cs
hlt
je
ljmp
cmp
inc
mov
pop
push
xchg
test
xchg
cld
and
movsb
jno
imul
clc
adc
test
mov
push
aas
pop
dec
mov
add
mov
jo
xchg
sti
std
sub
repnz
cwtl
jp
pusha
add
cmc
rorl
lods
dec
cmpsl
push
lcall
cmp
loopne
pushf
or
dec
fistpl
xchg
lock
pop
and
mov
dec
dec
xor
mov
cmc
inc
xchg
inc
icebp
shlb
stc
or
mov
bound
iret
outsl
mov
push
daa
sub
lahf
mov
icebp
sbb
imul
jecxz
xlat
jg
dec
xchg
enter
or
lret
cmp
hlt
push
inc
sbb
pop
mov
imul
aas
and
icebp
mov
adc
or
jbe
push
test
test
out
fsub
and
enter
inc
push
ret
and
leave
adc
pop
js
clc
sbb
out
adc
add
mov
sarb
ret
loop
lcall
outsb
ret
int
fcoms
mov
rorl
xorl
push
loop
adc
orl
or
in
sti
clc
inc
jecxz
pop
add
pop
and
cmove
stos
lcall
iret
add
out
push
add
dec
mov
dec
ja
sbb
push
dec
mov
sub
xor
or
mov
ret
imul
cmp
imul
cld
daa
jne
stc
lret
cltd
sbb
ret
aad
bnd
fstpt
idivl
leave
aad
mov
mov
adc
int3
js
aaa
dec
int
or
pop
out
insl
push
cli
push
push
lock
cwtl
adc
fs
fidivrs
sub
sbbb
and
cmp
xchg
sbb
sbb
rcr
sbb
popf
pushf
pusha
mov
icebp
outsl
lcall
jg
jecxz
mov
push
and
sbb
adc
pop
in
popa
inc
lods
shrl
movsl
xchg
lahf
stc
xor
and
jg
adc
movsb
sbb
pop
mov
or
xchg
out
or
push
cmc
pop
lds
lods
push
mov
cld
gs
xchg
test
lret
fs
leave
fndisi(8087
call
orb
dec
push
push
loope
out
inc
outsl
fiadds
stos
push
das
aaa
jl
dec
sbb
cli
into
pop
scas
xor
enter
loope
jle
dec
adc
mov
and
push
inc
jp
mov
cli
xchg
mov
lds
mov
pop
fnstsw
mov
imul
sbb
pop
mov
xchg
repnz
jmp
pop
cmpsl
das
dec
inc
push
in
test
js
les
xchg
inc
popf
mov
mov
dec
aas
mov
mov
imul
insb
xchg
into
scas
sbb
roll
jae
xchg
sbb
and
je
lret
repnz
aad
sbb
jecxz
sub
add
push
dec
lds
xor
fsubrl
mov
dec
jle
push
push
stos
test
sbb
sub
jae
leave
shll
cwtl
inc
test
cld
fistl
cltd
iret
or
test
jb
aas
lods
xor
push
pop
push
ss
ds
ljmp
fs
sbb
cmc
pushf
pop
dec
mov
into
fs
sub
mov
fst
and
sbb
pop
push
lods
adc
xchg
add
fwait
dec
dec
dec
loopne
test
inc
cmp
sub
sbb
jecxz
or
adc
gs
lcall
shr
lret
mov
nop
movsb
leave
xor
xchg
push
nop
or
lahf
jg
nop
pop
loope
enter
add
shrb
xchg
push
xor
ja
daa
dec
js
and
out
xchg
push
push
mov
mov
into
fs
mov
dec
add
hlt
or
adc
sbb
scas
xchg
shl
fwait
push
and
and
bound
out
in
shll
pop
lods
loop
cmp
cmp
sub
xor
push
mov
pop
out
sar
sbb
loopne
rorb
movsl
adc
xor
xor
jmp
xchg
cmp
addl
lods
and
cmp
in
test
xor
mov
in
jecxz
mov
lret
mov
daa
negl
add
ljmp
lock
adc
ss
aad
push
sti
jb
mov
rcll
in
pop
hlt
mov
ds
push
out
cld
mov
cmc
pop
jns
pop
mov
div
insb
mov
adc
mov
push
sti
hlt
dec
xchg
lret
xchg
aas
paddb
inc
aas
mov
not
xlat
push
ljmp
stos
cmp
cmpsb
pusha
push
lahf
push
pop
dec
faddl
je
mov
enter
into
sbb
ds
adcb
jmp
jb
lods
sbb
jo
stos
je
pop
add
and
xchg
fisttpl
stos
inc
out
or
mov
mov
jle
int3
rorb
jmp
andb
and
inc
sub
xor
sarb
push
lahf
fcompl
jb
movsl
mov
iret
in
push
imul
push
ret
adc
int
cwtl
int
stos
dec
mov
stos
pop
mull
mov
jb
xor
dec
scas
and
and
push
dec
cmp
mov
repnz
jns
push
inc
mov
xchg
push
push
ds
fmul
cs
out
sub
xchg
lods
xchg
sbb
dec
add
push
pusha
mov
push
fcompl
test
xchg
out
jl
lock
inc
mov
out
sub
aam
stc
dec
adc
ds
adc
lret
xchg
test
ss
dec
mov
mov
cmp
stc
or
mov
xlat
pop
popf
pushl
cmpb
pop
gs
cmp
lcall
bound
lds
outsl
jge
push
adc
mov
and
jecxz
push
dec
pop
shrb
and
dec
cmpsb
xchg
mov
ljmp
cmp
out
push
loopne
imul
notb
lea
or
add
jbe
push
dec
and
fdivr
jmp
xchg
add
push
cmp
in
and
fnsave
xchg
mov
out
mov
mov
dec
imul
mov
pop
xor
pop
dec
xor
lret
into
arpl
pop
fistps
int
dec
jnp
cmp
loope
inc
jne
inc
scas
mov
cli
and
repnz
dec
popa
pop
movb
jb
ret
add
jge
ljmp
cmp
pop
sahf
jns
pusha
xor
test
ljmp
lcall
negb
sbb
fstpl
jne
loop
sahf
movsl
mov
ja
lea
mov
cmp
or
fs
mov
adc
pop
jg
jmp
stos
pop
push
test
sub
push
inc
dec
xchg
aaa
mov
sbbb
fnstsw
sub
adc
stc
in
inc
xor
aad
sub
lcall
lahf
cmovo
sbb
sarl
pop
aaa
sbb
and
inc
std
push
filds
test
jecxz
outsb
sbb
cli
int3
xor
add
repz
xchg
inc
loopne
daa
lcall
loopne
cwtl
mov
xchg
xchg
mov
dec
xor
dec
xorb
mov
jb
push
lds
repz
push
pushf
repnz
mov
sbb
cmp
pop
leave
push
or
dec
jno
cli
jb
jp
adc
push
mov
ss
int3
pop
pushf
inc
mov
mov
mov
xor
or
fwait
mull
sahf
jae
inc
sbbl
shlb
pop
fdivrs
and
inc
lods
shl
int3
neg
in
lahf
push
lods
lds
sub
inc
pop
stos
lods
into
lea
es
mov
cmpl
inc
test
pop
inc
mov
rcll
ret
and
mov
outsl
adc
jmp
out
lea
push
scas
lods
xchg
pop
xchg
push
pusha
sbb
jno
movsb
jae
rclb
cmp
movsl
lock
push
hlt
shlb
add
pop
dec
cltd
adc
cmpsb
add
in
jb
loop
lcall
scas
inc
pop
movsb
xor
insb
sub
xor
sbbb
cmc
or
rorl
aas
cmpsl
aas
push
mov
mov
test
mov
int3
jb
pop
adc
daa
or
cmc
pop
cs
mov
mov
jne
sub
mov
fadds
aad
adc
push
pop
sbb
or
out
outsb
push
mov
pop
sub
mov
jne
mov
sub
sub
subb
orb
adc
orb
subb
xchg
popa
mov
sub
and
pop
gs
mov
loope
repz
sub
or
in
mov
cli
rol
lcall
mov
adc
pop
loop
data16
pop
lods
pop
sbb
jmp
bsr
ds
push
fsts
in
or
test
mov
pop
ss
mov
sbb
icebp
aam
sbb
xor
shlb
cmpl
inc
jle
jmp
aad
jl
call
in
out
mov
adc
dec
sub
xchg
mov
mov
pop
pop
in
xor
in
imul
mov
jg
push
add
xchg
testl
push
fisubs
clc
dec
cltd
sub
iret
sub
pop
jo
xchg
or
out
mov
pop
call
add
loope
adc
mov
or
fimull
mov
mov
inc
pop
daa
push
jmp
test
imul
gs
jmp
popa
xchg
xor
pop
fisttpl
repz
xchg
addr16
or
push
bound
xor
pop
clc
leave
call
lahf
ficoms
sbb
ss
nop
jns
in
push
test
mov
mov
mov
popf
xchg
stc
and
mov
in
cmp
dec
pop
aam
pop
data16
cmpsb
popf
mov
pushf
sar
adc
xor
pop
addb
add
mov
pop
dec
mov
add
negl
pop
loop
mov
inc
push
fimull
xadd
iret
xchg
cmpsb
std
lds
sbb
pop
xor
and
push
push
push
mov
dec
mov
xchg
push
xorl
cmp
mov
sar
popa
ficoms
mov
test
cld
adc
xchg
jp
push
rorb
cmp
je
ds
and
inc
push
sti
in
or
incl
jno
repnz
lock
cmc
hlt
sub
lcall
fsub
leave
pop
nop
into
and
mov
or
jns
mov
dec
rep
jb
jp
imul
in
jo
add
test
repz
fnstenv
or
cwtl
dec
stos
pop
inc
cmc
pop
xchg
dec
mov
sub
in
stc
lcall
inc
gs
cmp
dec
jbe
and
icebp
gs
inc
cmp
sub
dec
add
pop
mov
sbb
mov
roll
adc
pusha
push
mov
sbb
repnz
xchg
sbb
add
cmp
movsl
jne
lock
or
jns
inc
inc
or
xor
xchg
mov
pop
insb
fdivrl
push
pop
cmpsb
or
fcompl
sbbl
std
je
xor
and
and
ja
inc
jo
int3
bnd
pop
iret
arpl
bsf
xor
cmp
add
nop
inc
xor
cmc
xchg
push
xor
mov
add
dec
cli
std
in
es
mov
mov
mov
or
repz
or
sarb
dec
outsb
fists
push
gs
ret
pop
pop
push
pop
test
cmp
and
jl
rcrb
repnz
leave
fimuls
in
ret
nop
pop
daa
fldl
and
xchg
push
outsb
cwtl
in
cltd
in
mov
mov
adc
xor
mov
push
sbb
adc
into
pushf
dec
movsb
xor
add
push
or
sub
or
cli
daa
push
fimull
xchg
adc
sar
pop
xor
jl
js
ljmp
mov
push
fcompl
sub
xor
lds
leave
mov
xchg
push
scas
pop
jb
fdivrp
add
inc
lds
push
in
int
aas
enter
jle
repz
movsl
push
aaa
add
lods
ficoml
out
lods
jmp
jge
lds
pop
add
jge
lods
or
loope
mov
cmpsb
sbb
xchg
xor
decb
stos
fsubrl
test
dec
sub
add
adc
mov
cli
mov
daa
ljmp
lret
xor
cltd
push
xchg
push
lahf
add
mov
mov
in
lret
mov
add
sub
movl
xlat
adc
mov
cmc
jle
gs
sbb
test
xor
sub
mov
push
or
xchg
dec
xor
push
sbb
inc
sub
mov
ss
pop
gs
mov
mov
inc
cltd
xchg
pop
sub
insl
sbb
mov
xchg
jmp
push
jnp
call
adc
lret
lock
jnp
jae
mov
sbb
sbbl
pop
jle
test
test
ds
cmpsl
jge
jns
rol
aaa
push
les
stos
jle
and
fs
push
pusha
stos
adc
loope
rclb
lds
mov
mov
xor
mov
push
push
leave
imul
test
dec
loope
icebp
pop
stc
sub
inc
rcrb
test
jmp
push
std
clc
xor
sbb
loop
push
ss
push
dec
sub
push
inc
lock
int3
adc
rcl
std
pop
dec
aas
popa
dec
pop
sub
imulb
shll
pop
adc
inc
daa
leave
sahf
jbe
daa
xor
sub
aas
mov
xchg
jno
sarb
mov
cmp
jmp
out
push
pop
xchg
mov
loopne
push
adc
int3
pop
clc
fnstsw
dec
mov
mov
leave
out
fwait
and
addr16
mov
jo
jnp
gs
mov
mov
repnz
xor
loop
mov
into
addl
pop
data16
cli
xor
add
scas
sbb
sahf
sarl
fcmovnbe
push
jae
mov
test
xchg
jo
pop
decl
push
mov
adc
inc
in
bound
adc
stc
sti
movsl
repz
adc
roll
mov
lret
mov
mov
or
sub
pop
lret
cld
or
lock
daa
imul
pop
out
dec
or
mov
push
and
stos
ds
dec
or
push
cld
jmp
mulb
dec
jmp
cld
dec
dec
daa
daa
pop
jnp
mov
stos
jg
call
dec
repz
loope
pop
adcl
ficoms
push
movsb
lods
out
dec
or
xor
aas
xor
push
or
cmp
or
mov
add
mov
mov
lds
js
mov
xchg
popa
pop
cmpsl
mov
pop
sti
enter
bound
outsl
mov
xchg
ja
scas
scas
sbb
les
dec
mov
je
mov
push
dec
out
mov
inc
pop
loopne
inc
popw
xor
out
lds
mov
inc
daa
xor
lods
push
add
fwait
pop
pop
fisubrs
cltd
ljmp
xor
mov
push
repnz
add
dec
inc
push
jnp
idivl
and
jecxz
gs
bound
andl
fldcw
in
stos
xchg
mov
xor
repnz
daa
out
enter
int
rclb
push
jg
jnp
push
aas
add
mov
loopne
adc
loope
movsb
call
jbe
mov
sti
fdiv
inc
movswl
clc
cmpsl
mov
pop
jnp
jb
mov
fistps
fs
mov
add
ret
mov
out
dec
or
je
xchg
inc
mull
bound
mov
pop
mov
outsb
cmp
shrb
popa
leave
mov
sahf
jno
sbb
xlat
fildl
xchg
aad
fcomps
add
ljmp
cmp
mov
je
repz
lret
in
push
fwait
andb
and
jge
cmpsb
fldl
dec
ret
loop
pop
xchg
fdivrs
sbb
push
mov
mov
imul
rorb
icebp
jle
xor
xor
out
xchg
lds
sbbb
push
insl
jnp
mov
xchg
les
mov
jl
inc
negl
push
insl
sbb
hlt
and
sahf
dec
xchg
orb
jl
fldenv
movnti
cmc
out
lock
adc
lea
mov
dec
pop
sbb
sbb
addr16
adc
dec
mov
add
adc
popa
jecxz
arpl
stc
outsl
repnz
xor
mov
test
shrl
xchg
pop
out
cmc
adc
jg
xchg
mov
ret
lcall
sub
push
jmp
les
rcrl
add
lahf
pushf
lock
loopne
cld
gs
lret
loopne
dec
jae
and
mov
fistps
pop
adc
int3
les
fbld
and
hlt
dec
pop
and
dec
pop
xchg
pusha
pop
jg
imul
iret
cmpsl
inc
mov
popa
sub
pop
sbb
dec
push
out
sub
pop
daa
aaa
or
cmp
lret
fcoms
pop
jbe
sub
cmpsb
loope
aas
ja
mov
pop
cmc
aaa
mov
push
divb
stos
testl
aam
inc
jle
rclb
dec
inc
icebp
std
sub
and
out
push
insb
mov
add
loop
ljmp
fwait
jbe
aad
arpl
arpl
inc
lcall
or
mov
clc
fcomps
pusha
mov
xchg
cmpb
dec
sbb
fsubrs
shlb
lods
mov
dec
jb
hlt
cld
push
xlat
pop
and
insb
mov
pop
mov
add
popf
inc
rsm
arpl
fs
cmpsb
xchg
push
mov
and
jbe
repz
cmc
push
loop
push
ljmp
mov
push
in
xor
pop
pushl
push
imul
fs
ja
ret
arpl
movsb
out
dec
pusha
lea
fld1
dec
movb
fisttpl
adc
adc
hlt
sbb
mov
frstor
and
leave
inc
psubsb
pop
shl
adc
leave
and
fisubl
jg
les
add
je
push
frstor
imul
cmp
test
decl
mov
cmp
in
xchg
gs
mov
test
cld
sti
imul
rcrb
std
push
imul
fiadds
jle
insl
stos
out
jo
pop
mov
xor
pop
xchg
insb
inc
mov
rorb
inc
add
xchg
xchg
ret
mov
cli
xchg
loopne
mov
and
lods
ss
xchg
dec
add
and
aad
sbb
frstor
sbb
outsb
test
outsb
inc
cmp
mov
inc
push
xchg
cmp
in
outsb
mov
cltd
mov
scas
push
in
adc
xchg
out
inc
les
and
aam
imul
sbb
or
pop
xor
inc
sbb
and
sbb
jns
ret
add
add
mov
cmc
pop
subl
scas
aad
push
test
sub
inc
or
or
xchg
inc
and
jg
int
outsl
dec
or
mov
add
in
les
push
fisttpll
inc
pop
scas
jg
and
inc
and
sbb
and
sbb
dec
mov
addr16
jo
orl
sahf
pop
add
and
in
push
sbb
movsb
mov
lock
sub
add
pop
jl
pop
cmp
stos
popf
adc
imul
pop
inc
sahf
mov
inc
xchg
sar
adc
pop
mov
orl
pop
sbb
popf
adc
ret
and
mov
lods
pop
xchg
push
shrb
loop
xor
push
mov
ret
cmpl
lcall
mov
lahf
lods
loope
sub
ret
inc
mov
fwait
pop
push
int3
and
repnz
pop
mov
lret
std
fwait
decb
cmp
dec
call
rcr
jle
pop
mov
cs
out
dec
movsl
leave
dec
loopne
adc
shlb
dec
clc
movsb
jmp
ds
mov
in
das
mov
sub
and
or
add
dec
mov
dec
add
xchg
and
clc
dec
movsb
jbe
test
sbb
jg
std
mov
jl
int3
add
imul
inc
lods
addr16
adc
add
push
das
mov
and
or
push
and
test
test
insb
sarl
addr16
adc
dec
hlt
imul
out
loop
or
dec
cmp
xor
pop
mov
mov
jle
jle
sub
mov
xchg
les
push
rol
repnz
pop
fimuls
movsl
sbb
leave
add
push
xchg
adc
mov
jo
into
pop
scas
xor
mov
aam
aaa
dec
pop
data16
jnp
xchg
sbbl
mov
xor
xchg
sbb
imul
sub
pop
bound
ds
out
mov
and
lock
daa
push
leave
xchg
test
xchg
bound
pop
pop
push
cwtl
and
out
stos
int3
cld
mov
movsl
sub
es
adc
mov
xor
ret
cmpsl
cmpsb
outsl
iret
push
xchg
mov
in
xlat
pop
xchg
jecxz
mov
mov
mov
pop
in
inc
inc
mov
addr16
outsl
test
dec
jge
xchg
insl
test
dec
cld
jns
aaa
push
lds
push
test
or
mov
sahf
loopne
cltd
ret
std
stos
lods
cld
add
or
lods
pop
sub
cmp
dec
leave
gs
ja
jge
clc
and
dec
push
push
pop
out
fnsave
scas
push
sub
outsb
insl
out
cmpsb
mov
dec
dec
fistpll
ds
in
pop
test
jle
add
lds
xchg
push
icebp
fwait
aam
insl
jl
and
mov
fildl
std
sbb
rorb
es
and
mov
aaa
push
rclb
xor
call
jbe
xchg
imul
sub
jmp
subl
fcoml
ds
cmpsl
not
jae
inc
lods
pop
lret
jb
imul
rol
lock
adc
push
adc
movsl
jmp
in
sub
or
jne
xlat
inc
and
inc
jp
and
inc
fbstp
sbb
ljmp
ds
push
cwtl
cmp
jmp
inc
sbb
push
cli
sarl
repz
sub
testb
and
mov
adc
lret
mov
dec
cmp
cmpsb
mov
sti
movsb
pop
adc
mov
test
ds
or
repnz
shlb
sarb
in
shl
sub
sub
imul
cmp
xor
xchg
mov
jmp
mov
inc
push
arpl
in
or
sahf
mov
fnstcw
fsubrl
sub
fiadds
daa
es
jne
in
rol
lret
or
andl
loop
push
jmp
and
negb
int3
lds
mov
cmp
pop
jge
cli
adc
or
lret
stos
lret
ds
dec
fidivrl
push
pop
pop
rorb
rcll
jne
push
int3
mov
clc
mov
aaa
icebp
push
jnp
fisubl
cmp
insb
pop
mov
mov
fisubrs
pop
mov
cmp
sub
int3
inc
jle
vpmacswd
cmp
fcomip
rcl
pop
insb
sbb
jne
add
lret
mov
call
cmp
push
rol
loop
jecxz
and
lds
mov
adc
std
lds
dec
stc
mov
sahf
sbb
mov
mov
dec
mov
cmpsl
test
xchg
ljmp
jecxz
test
pop
out
sahf
scas
mov
jecxz
mov
jecxz
lahf
mov
dec
push
int3
test
repnz
mov
sub
push
and
je
mov
ljmp
mov
and
cmp
mov
cltd
push
xor
mov
mov
xchg
dec
xor
push
out
imull
lds
mov
push
imul
mov
jp
push
rol
fs
push
dec
fcmovbe
pop
nop
or
popa
jns
lods
mov
out
and
scas
xlat
aam
jns
mov
loop
fdivr
std
call
pop
scas
lahf
jmp
inc
mov
push
mov
pop
push
sub
cmpsl
pop
push
inc
or
sbb
mov
mov
test
pop
cmp
popf
inc
xchg
std
inc
and
out
int3
xchg
cmp
imul
sbb
cmp
pop
inc
loop
lds
mov
outsb
jmp
cmp
imul
loopne
test
sbb
adc
fs
xchg
aaa
mov
sub
int
and
icebp
lods
push
lea
push
dec
xchg
lcall
cli
mov
xchg
bound
adc
rorl
aad
gs
xlat
or
xor
std
mov
in
sbb
in
sbb
fbstp
pop
cmp
pop
std
loop
lret
subb
cmp
repz
jno
mov
jmp
dec
or
jl
sbb
sub
add
orl
cmp
mov
push
daa
roll
add
es
outsl
gs
pushf
dec
cmp
fldl
pop
ds
lahf
imul
cmpsb
pop
lea
jns
dec
or
and
cmc
pop
repz
cld
jge
push
scas
mov
sbb
in
das
repnz
outsb
not
aaa
xchg
and
push
push
in
jno
dec
add
push
mov
pop
and
lcall
inc
rol
mov
les
inc
jne
pusha
pop
fistpll
xchg
lcall
fisttps
inc
into
out
sbb
pop
push
je
in
ljmp
mov
pop
fnsave
icebp
lret
mov
ja
mov
push
dec
cmc
adc
loope
cmp
insl
incb
aam
add
cs
xchg
or
xor
add
dec
pop
loopne
cmp
js
push
xchg
leave
jle
push
add
sbb
sub
ds
fbld
jmp
jmp
test
lret
scas
stc
jnp
loop
push
sub
mov
push
sbb
int3
cmp
out
ret
loope
sahf
mov
popa
out
test
insl
je
push
call
fcoms
mov
sarb
mov
inc
gs
pop
mov
mov
or
nop
add
mov
sbb
mov
mov
mov
fcomps
rcll
and
jae
xor
nop
push
ss
pop
dec
pop
sbb
or
dec
jecxz
pop
insb
sbb
cmp
mov
test
jle
leave
in
or
insb
push
xchg
xor
mov
stos
pop
mov
adc
jb
out
xchg
xchg
push
fld
fsubp
insb
adc
nop
xchg
adc
jmp
mov
out
dec
out
out
sbb
jb
jne
arpl
cmp
sbb
cs
cmpsl
out
xchg
test
rorb
jmp
sbb
cmp
sub
test
xor
mov
aaa
add
pop
mov
inc
notl
mov
mov
repnz
xchg
pop
pop
sti
or
jo
jo
iret
sbb
js
fchs
enter
sar
sub
jnp
pop
pop
lcall
inc
xlat
nop
jne
xor
ficoms
daa
mov
pop
stc
fidivs
mov
cmp
adc
dec
sbb
lahf
or
add
scas
pop
mov
jle
test
xor
shll
sub
fcomps
cltd
pop
push
aas
in
mov
push
mov
std
xor
es
clc
jb
arpl
cld
pusha
push
fwait
adc
repnz
jecxz
cs
clc
sub
in
pop
in
enter
clc
imul
mov
xchg
and
inc
inc
add
push
jl
mov
insl
movsb
mov
lret
icebp
inc
lahf
mov
data16
sub
cmp
sbbb
outsb
inc
adc
inc
jns
xor
and
in
lret
or
jb
inc
insb
mov
sarb
xchg
push
ljmp
pop
out
pop
cld
out
pop
xor
mov
mov
mov
push
out
rclb
nop
mov
inc
xor
ds
add
loopne
jmp
jmp
mov
sti
mov
stc
leave
add
sub
pop
cmc
stos
lea
test
loopne
scas
out
push
std
sbb
lds
and
mov
arpl
sub
mov
xchg
xor
mov
lahf
pusha
test
jg
test
test
clc
fidivrs
repnz
or
imul
fsubrs
mov
fistl
add
jae
mov
int
add
jmp
inc
ret
jne
in
and
repz
sti
pop
jno
inc
jp
jns
sti
mov
in
aam
sbb
nop
insl
jo
or
mov
popf
add
mov
arpl
repz
jae
jmp
test
nop
jg
fnstcw
filds
aad
adc
pop
cmp
mov
pop
subb
pusha
and
jb
in
leave
inc
lcall
cwtl
jle
jl
push
xchg
orl
lds
push
mov
push
adc
add
adc
xchg
jno
push
xor
xchg
ret
sbb
leave
sbb
adc
into
mov
pop
mov
int3
xor
popf
add
addr16
mov
xchg
mov
add
xorl
push
push
cmp
adc
inc
adc
hlt
cmp
xchg
sbbb
mov
bound
nop
shl
loop
arpl
dec
test
fcomi
and
mov
xchg
sbb
sub
insb
mov
lds
jge
int3
jne
subl
incb
jae
lahf
dec
sub
or
aad
sub
mov
cmp
mov
adc
push
mov
stos
or
dec
mov
jns
fsts
stos
mov
lret
adc
push
jnp
push
mov
mov
loope
dec
lret
jne
pusha
jae
xorb
sub
dec
xor
inc
aad
addr16
inc
sbb
ja
scas
mov
or
fcomip
dec
xor
ljmp
adc
dec
ret
pop
adcl
xchg
xor
hlt
adc
adc
lcall
int3
cmp
test
cli
repnz
sub
xchg
cmp
clc
popf
dec
inc
adc
js
or
stos
outsl
mov
cs
nop
jo,pt
cmp
fdiv
testb
jg
aam
gs
bound
repz
pop
mov
or
mov
insl
stos
jecxz
movsl
aaa
data16
leave
lock
shll
es
imul
pusha
sbbl
icebp
jno
or
mov
jns
jo
mov
push
or
stos
cltd
iret
addr16
aam
and
mov
inc
pop
scas
in
pushf
addl
std
dec
mov
adc
sub
out
lock
push
imul
into
and
inc
adc
xchg
xor
lahf
adc
addr16
and
push
popf
popa
and
daa
ljmp
jp
fistl
shr
cs
xor
sub
test
rorb
or
test
cmpsb
vcvttps2dq
xlat
mov
out
sbb
fs
dec
rcll
mov
std
popa
popf
pop
and
lods
aas
push
sub
adcl
testb
imul
sbb
ret
mov
lea
push
jns
cmp
pushf
sbb
add
jb
cld
mov
push
stos
pop
inc
das
icebp
and
into
test
ljmp
addr16
pop
or
lret
mov
scas
rorb
inc
xchg
test
xor
xor
mov
pop
add
js
lds
jne
data16
js
xor
cmp
mov
movl
pop
loop
ds
sahf
mov
enter
stos
cs
fdivrs
mov
out
bound
and
jne
xor
fsubrs
clc
bound
mov
inc
add
mov
sbb
sbb
ds
mov
and
cmpb
cwtl
jle
into
jecxz
in
outsl
mov
cmp
push
insb
push
adcb
cmpsb
fcmovnu
fs
nop
xor
mov
inc
dec
inc
sbb
xchg
out
xor
mov
imul
subl
sbb
pushf
les
push
or
xor
mov
and
leave
jmp
xchg
dec
pop
dec
xchg
dec
dec
sbb
adc
int3
mov
jns,pn
pop
fildll
adcl
cltd
not
test
push
jnp
ljmp
xor
pop
mov
inc
xchg
loopne
out
lea
xchg
inc
mov
decb
push
inc
push
mov
test
xchg
arpl
mov
and
sbb
shl
movsb
stc
loopne
pop
xchg
jnp
insb
out
mov
movsl
es
sbbb
xchg
mov
iret
int
shlb
mov
loop
fst
fwait
shlb
cmpsb
sarl
clc
fdiv
cmp
mov
jmp
rorl
repnz
arpl
movsb
fs
ss
test
into
pop
imul
inc
cmp
pop
repnz
pop
jge
xchg
pop
pop
loope
idiv
aaa
test
je
lods
xor
lret
orl
ja
jle
aad
cli
int
lret
popf
ja
lds
jl
jmp
pop
cli
sbb
jp
jle
dec
xor
sbb
adc
sub
call
xchg
ss
cmp
mov
lods
jge
adc
push
add
scas
ror
das
jg
aaa
or
aas
push
mov
lock
stos
inc
or
pop
int3
jl
mov
mov
xor
add
add
mov
filds
or
into
rorb
jns
mov
mov
sarl
popf
adc
jmp
cmovne
ss
and
pop
outsb
loopne
xchg
mov
shrb
cmpsl
in
outsb
jb
xlat
out
fwait
jmp
jbe
fs
ljmp
lcall
lcall
pop
cmc
jmp
xor
xchg
pop
mov
ja
in
xchg
cld
mov
scas
cmpsl
cmp
dec
fbstp
push
mov
or
jns
xor
js
rcr
insb
mov
sbb
push
lods
sub
in
popf
xchg
iret
into
and
lock
xor
adc
dec
xchg
jae
mov
bound
push
ds
add
add
fwait
mov
gs
mov
fsub
lret
fmul
sub
je
sub
fmul
inc
leave
cld
pop
daa
dec
add
adc
dec
popf
xchg
andl
sub
loop
push
cltd
gs
push
mov
xor
sub
dec
fs
inc
lds
icebp
pop
jmp
fidivs
sbb
inc
pop
loope
lahf
adc
aaa
inc
aaa
lock
pop
decb
in
test
cmp
std
daa
incl
cmpsl
mov
sub
cs
push
fcomi
out
add
ret
fimull
and
lods
push
ss
into
sarl
hlt
mov
lods
sub
push
insl
adcb
test
insb
addl
paddw
loope
imul
or
push
add
lret
push
mov
inc
aam
lahf
fsubr
inc
lds
fidivl
sbb
jnp
lcall
jb
popf
pop
in
jbe
cmp
aad
cli
lea
pop
aam
lret
inc
test
jns,pt
int3
mov
test
cmpsl
or
xchg
dec
jae
repnz
xor
out
cmp
xchg
outsl
xor
cmpsl
stc
and
shlb
adc
in
inc
popa
fiaddl
pop
xchg
xchg
insl
adcb
nop
sti
jp
inc
pop
stos
addr16
xchg
inc
pop
fwait
lret
iret
mov
mov
lret
push
cmp
cmpsb
lea
sbb
repz
lcall
cmp
je
xor
std
flds
cmp
adc
int3
sbb
dec
and
adc
bound
add
je
test
dec
mov
mov
call
notl
mov
repz
pop
push
fisttpll
fstl
cmpsl
add
jbe
xchg
outsl
and
pop
es
mov
cmp
gs
jecxz
mov
icebp
test
xchg
rclb
rcrl
add
rorb
imul
jnp
dec
sbb
fbstp
xchg
sbb
push
jbe
lret
movsb
pop
repnz
stc
lds
jge
gs
mov
aas
inc
xchg
dec
pop
and
mov
call
push
loop
loopne
das
in
inc
lahf
add
lock
or
sbb
fistps
pop
mov
out
mov
mov
fstpl
sub
push
leave
mov
dec
adc
dec
scas
add
xchg
mov
pop
lock
pushf
std
xor
insb
movsl
aad
ja
lock
aad
out
cwtl
mov
push
mov
sahf
es
out
pop
inc
push
pop
push
sbb
iret
xor
pushf
jae
sbb
popa
xchg
fcomip
sbb
mov
clc
pop
cmp
mov
outsb
je
and
popa
mov
test
add
cmc
out
std
adc
das
flds
loope
outsl
inc
lds
aaa
sbb
lds
pop
jns
push
test
adc
mov
movb
xchg
jbe
and
cmpsl
dec
pop
cs
sub
mov
in
ret
lds
fimull
add
mov
pushf
cmp
cmp
hlt
cmp
sbb
cmp
jb
es
xor
push
sbb
gs
add
jl
orl
lds
inc
mov
add
aas
les
out
stc
dec
cmp
lds
pop
cmp
jns
outsl
filds
cmp
testl
mov
iret
mov
add
in
fistpl
push
pushl
test
icebp
push
test
cwtl
das
daa
xor
aam
push
adc
bound
lahf
jmp
lea
adc
inc
jmp
pop
lds
mov
cltd
in
inc
mov
push
rcrb
inc
fdivs
lea
dec
daa
test
fistl
sub
sbb
mov
push
push
fnstenv
mov
test
pop
mov
sub
xor
sub
cmp
fdivrs
aas
cmpsb
pop
cmp
loop
add
inc
loope
test
jl
and
shr
xor
xchg
and
ljmp
aas
outsl
dec
xor
lea
or
cs
pop
push
mov
jb
jbe
mov
hlt
xchg
out
xorb
and
cmp
dec
das
ds
repz
push
pop
xor
mov
dec
dec
mov
push
cmp
mov
pop
add
and
pop
insb
int3
std
xor
inc
in
xchg
jae
les
fisttpl
pop
inc
bound
or
jbe
mov
dec
jle
nop
std
sbb
jne
lods
sbb
mov
cmp
fabs
imul
jmp
iret
mov
jp
lock
inc
subb
dec
jmp
arpl
mov
or
push
aad
xchg
xchg
inc
popa
and
in
movsb
lods
icebp
bnd
push
out
sbbb
fldl
adc
orb
mov
popa
mov
sbb
icebp
push
mov
out
ljmp
cmp
outsl
stos
icebp
sub
dec
sbb
test
xor
cmpsb
mov
stos
push
sub
addl
subl
or
lods
ret
or
sahf
xchg
cld
add
adc
mov
outsl
jb
push
jb
mov
mov
pop
xchg
ret
xor
adc
and
fidivl
jae
sbbl
or
mov
sbb
pop
aas
and
fbstp
cmp
xlat
dec
mov
push
iret
lds
andl
iret
test
cmp
push
movsl
lods
bound
loopne
sub
int3
rcrb
xor
arpl
pop
or
jle
mov
mov
mov
mov
cmp
mov
ss
test
aaa
das
cwtl
cmp
push
cmp
shrb
jne
clc
xor
xchg
sub
arpl
xchg
pop
dec
loop
xor
fs
daa
jno
pop
sbb
repz
xchg
jge
rorb
inc
dec
xor
pop
test
xchg
mov
xchg
iret
mov
mov
movsl
iret
xchg
cld
sbb
add
sub
push
mov
sub
cli
in
scas
pop
add
lahf
jmp
xchg
das
in
out
add
push
xchg
dec
xchg
cmp
adc
jae
xchg
sub
cmp
mov
aas
iret
pop
adc
dec
add
pop
enter
mov
popf
fcmovb
dec
sub
lret
enter
popa
or
lods
pusha
dec
jl
xor
ljmp
scas
stos
aaa
jbe
lahf
call
mov
sub
xchg
ficoms
sbb
cmpsb
cmp
push
mov
or
mov
or
or
bound
xchg
ret
arpl
aam
push
push
sbbb
pop
lret
sahf
andb
jbe
jl
cmp
decb
ret
punpckhbw
jb
out
negl
fldl2e
sub
or
sub
add
frstor
xchg
jno
repnz
add
rcrl
in
push
dec
imul
test
jle
mov
cmp
push
in
xor
lock
xor
je
mov
scas
cld
lret
pop
jmp
inc
sub
sbb
push
pop
test
mov
orl
sbb
jb
jge
outsb
imul
sbb
or
stc
pushf
inc
jmp
dec
xchg
push
pop
and
dec
or
push
pop
movsl
mov
aad
lock
js
in
add
rclb
adc
lret
loope,pt
clc
cmc
ss
push
sbbb
mov
aam
or
call
or
in
push
scas
nop
test
repz
dec
sub
xlat
lock
jo
data16
cmpsb
mov
sub
mov
jl
lock
out
push
push
arpl
notb
test
jbe
mov
insl
push
push
clc
aas
mov
into
add
mov
xchg
push
divl
pusha
lea
and
ret
adc
pop
inc
imul
jmp
add
mov
xlat
push
mov
or
mov
pop
cmpsl
push
mov
cwtl
jbe
scas
lcall
mov
jecxz
ja
sarl
addr16
fadds
out
cltd
and
cld
xor
push
push
or
popf
nop
ret
fcomps
add
and
jno
popf
nop
jne
inc
rcrl
xchg
rcr
jg
outsb
pushf
je
and
fs
or
mov
xbegin
sub
aaa
pop
or
in
inc
add
out
xchg
in
pop
sar
mov
push
pop
jne
mov
add
pop
add
addb
lcall
or
inc
jle
push
or
cmp
pop
pop
aaa
movsb
dec
hlt
push
xor
jnp
inc
mov
aad
outsb
enter
rorb
mov
cli
in
push
hlt
mov
mov
inc
mov
push
push
pop
xchg
xchg
jge
lcall
jg
daa
lods
and
daa
call
aas
sub
cs
fwait
lret
movsl
cmc
jbe
mov
cmpsl
sbb
inc
xchg
or
cmp
femms
pop
andb
pop
mov
push
push
repz
xor
lea
mov
xchg
call
lea
stos
stos
adc
jnp
test
loopne
loop
xor
aas
pop
xchg
jmp
stc
shrb
cli
pop
sub
sub
daa
cmp
sbb
test
jge
lret
sbb
shlb
and
movsl
and
mov
mov
fnsave
sub
jae
in
xor
fs
sbb
add
or
cs
sbb
pushf
pop
ret
jg
movzbl
je
daa
sub
mov
fwait
adc
sbb
sub
sub
lahf
push
lret
das
push
js
xorl
gs
cmp
mov
call
into
mov
or
hlt
mov
xor
test
ret
sahf
ds
lret
pop
jae
jl
es
or
jmp
repnz
cmp
insb
dec
mov
dec
mov
sub
pop
cmpsl
ret
add
mov
lock
pop
cmp
jns
in
rep
jb
dec
es
cmp
iret
adc
add
iret
pop
xchg
in
xor
xor
shrl
lods
aaa
pop
call
dec
mull
imul
cltd
mov
outsl
inc
lcall
mov
jecxz
push
cltd
cmp
arpl
movl
mov
aad
pop
mov
leave
dec
fstl
xor
les
sbb
sysexit
aam
or
imul
int
daa
or
push
mov
and
dec
sbb
js
aaa
stos
mov
inc
sub
xlat
push
arpl
test
push
addr16
in
popl
outsb
inc
bswap
int3
orb
push
sbb
faddl
mov
ret
cld
ljmpw
div
clc
jo
xchg
bound
xchg
cmpsl
icebp
mov
mov
into
cs
adc
aaa
xchg
sub
mov
bound
sbb
gs
jae
xor
repnz
inc
push
sbb
inc
mov
and
sub
dec
adc
jl
dec
loope
xchg
mov
mov
icebp
imul
xchg
mov
mov
ret
pop
xchg
imul
jbe
cmp
movsb
leave
call
jmp
mov
aaa
shll
push
dec
fwait
sti
imul
aad
pop
dec
push
fs
pop
rcr
movsb
jl
jmp
add
ret
fld
and
jl
xor
scas
into
jb
lahf
fsts
sbb
and
push
sub
mov
xchg
inc
xor
mov
mov
ds
sub
xlat
jmp
out
test
mov
ljmp
scas
rorb
sub
iret
fists
ret
inc
xchg
dec
cli
mov
fisubs
adc
jecxz,pn
jae
rcll
or
xor
out
pusha
mov
orb
outsb
sbb
add
adcl
imul
jae
jp
sahf
sbb
loop
jp
scas
sbb
cmp
mov
or
xchg
add
enter
mov
addr16
test
cmp
pop
mov
inc
jnp
cwtl
cmc
adc
js
adc
sub
xor
pop
and
pop
dec
mov
pcmpgtd
orb
ret
sub
aaa
sarl
je
mov
mov
dec
fsubl
adc
mov
fstps
ja
lea
jbe
popf
out
orl
mov
push
cmp
jge
insl
and
rolb
add
cmp
cs
xorb
mov
test
xor
xor
mov
inc
sub
mov
sbb
sar
mov
in
ret
mov
jnp
xor
cmp
add
das
mov
jo
jne
dec
sbb
rcll
jge
pop
jno
fldenv
sbbl
sbb
pop
int3
loope
pusha
int3
cmpsl
fistps
xchg
mov
mov
andb
dec
sub
movsl
sbb
popa
push
pop
and
loope
scas
or
ljmp
icebp
sub
imul
inc
cli
daa
pop
mov
call
call
lods
push
cmp
push
dec
ljmp
das
jb
xor
insb
mov
xchg
cmp
cmp
mov
cld
cmp
xchg
sbb
xchg
fsubs
ja
push
cmp
subb
xchg
stc
shlb
imul
push
mov
iret
push
cmp
or
mov
sbb
add
sbb
mulb
mov
in
add
out
push
test
out
pop
dec
test
and
je
subb
push
out
xlat
push
dec
leave
ret
xchg
imul
out
mov
jmp
out
and
jo
cmp
jle
dec
add
aam
and
cmpsl
insb
mov
adc
icebp
sbb
jle
xchg
cli
jp
fistpl
xchg
pop
ret
lods
inc
pop
cld
je
adc
jbe
push
std
shll
imul
sbb
inc
arpl
add
je
rcrl
dec
or
or
ret
or
xchg
sar
test
repz
cmp
mov
notl
rorb
fldcw
jecxz
shll
xchg
push
push
pusha
adc
mov
iret
add
mov
or
adc
loope
sbb
xor
jo
jne
inc
pusha
imul
stc
pop
in
mov
dec
int
aaa
push
test
daa
mov
pushf
xchg
bnd
aaa
rorl
pushf
jo
movsb
ret
jne
notl
cmp
sbb
push
dec
fdivr
call
push
mov
mov
cmpsl
mov
lahf
stc
jle
iret
hlt
gs
test
fwait
pop
mov
cltd
std
popf
pop
lea
daa
sub
test
mov
pop
push
fmul
inc
iret
cld
mov
fstps
aas
jnp
pop
jmp
les
dec
xlat
xchg
xchg
outsb
push
adc
mov
dec
xchg
xchg
stc
pop
and
adc
jecxz
adc
or
test
push
adc
imul
pop
xor
mov
cwtl
push
fldl
in
cmpsl
mov
in
or
cwtl
ljmp
xchg
mov
jno
add
in
push
pop
sti
dec
xchg
jp
je
mov
pop
inc
mov
aam
jno
mov
jl
pop
mov
scas
or
jo
push
dec
decl
jno
ja
jns
inc
inc
imul
out
xchg
push
out
or
call
mov
mov
sbb
notb
lahf
xor
negl
push
sub
jg
int3
ds
or
inc
and
sahf
loopne
pop
fisttpll
sbb
scas
scas
push
popf
jno
mov
pop
mov
mov
mov
or
sahf
lods
adc
mov
lret
loope
lahf
cmp
xchg
pop
loop
fists
inc
dec
ret
rcrl
push
jmp
idivl
adc
push
xchg
std
sbb
pop
int3
or
push
cmp
fadd
imul
enter
enter
jge
mov
ljmp
loopne
out
lods
int
pop
sbb
mov
pop
je,pt
pop
enter
or
pop
add
mov
int3
mov
rcrb
fstl
fsubrs
mov
dec
cltd
push
out
jne
ret
dec
jmp
push
in
sub
addr16
sahf
mov
adc
push
pop
cltd
push
shlb
inc
mov
add
stos
mov
cmpl
adc
mov
mov
push
push
lcall
mov
sub
imul
dec
cmp
or
loop
cmpsl
mov
mov
imul
test
test
sub
pop
mov
in
out
inc
in
jg
shll
pop
sbb
or
inc
pop
jmp
and
outsb
pusha
sbb
outsl
jne
ds
js
arpl
xor
cmpsl
push
iret
and
scas
mov
xchg
pop
mov
cmpb
push
push
inc
inc
push
movsl
sbb
adc
and
push
out
and
add
or
xor
fwait
insl
nopl
lods
mov
inc
es
dec
cli
xchg
jnp
adcl
mov
shll
mov
sahf
xor
iret
and
mov
xchg
mov
sbb
dec
sub
das
xchg
gs
dec
int
push
fs
cmp
jo
push
outsl
imul
jno
aas
ds
mov
inc
fadds
jae
jmp
pop
add
in
lods
data16
lret
push
sub
fisttps
in
lahf
dec
dec
scas
mov
and
cmpsl
pop
mov
mov
loope
shr
aam
or
adc
into
push
push
js
movsb
sbb
inc
or
add
push
push
cmp
sbb
cmp
push
xchg
adc
add
adc
xlat
in
mov
cli
loop
cmp
lcall
inc
xchg
mov
pop
test
cmc
mov
nop
daa
xchg
adc
daa
in
ja
sub
xchg
push
mov
add
jg
jg
jle
mov
mov
es
cmp
add
andl
out
jmp
xchg
mov
scas
mov
add
leave
lret
adcl
movsl
push
or
inc
dec
lds
push
mov
ret
xor
mov
or
jb
pop
vcomisd
ljmp
inc
or
fs
push
cmp
jmp
pop
mov
mov
fiadds
mov
or
ret
cmc
pop
aaa
ss
mov
inc
loop
jmp
mov
add
das
loope
jecxz
mov
and
sbb
dec
mov
sbb
pop
sub
stos
scas
popa
sub
divb
nop
repnz
shr
inc
pusha
out
scas
aam
mov
sarb
loopne
fstl
push
loope
andl
inc
add
cmp
ljmp
pushf
sbb
lods
pop
daa
hlt
into
pushf
sahf
inc
and
inc
imul
mov
push
xchg
cmp
inc
sbb
adc
test
jmp
jnp
mov
lret
mov
ret
lods
flds
fdivs
sub
xchg
es
pop
movsw
sti
mov
inc
dec
sbb
sub
pusha
and
fstpl
ret
sbb
push
imul
outsl
cmc
sbb
mov
std
cmp
mov
add
jae
adc
inc
cs
xor
add
lahf
inc
lods
std
pop
xchg
dec
aam
pop
jmp
lods
cmpsl
addb
into
ret
loopne
adc
ljmp
je
xchg
jne
inc
cmc
movb
add
xor
push
mov
dec
lcall
call
in
xor
fs
stos
jo
xlat
jo,pn
dec
fs
adc
or
movsb
and
mov
jecxz
sub
xchg
jmp
cmpsb
sub
xor
jo
pop
push
cmp
repnz
add
and
pushl
fdivr
ja
mov
sub
xchg
scas
scas
bound
data16
inc
lret
and
out
push
fcoml
mov
das
push
mov
jg
xchg
push
mov
imul
add
sahf
mov
push
inc
mov
ss
dec
icebp
or
add
and
add
repz
and
mov
sub
cmp
xchg
fs
outsb
loope
dec
jecxz
repnz
fwait
sbb
je
cld
cli
xchg
push
hlt
popa
les
ss
inc
and
pop
dec
leave
lods
add
scas
mov
pop
mov
add
ret
jp
lea
cmp
sarl
jp
add
test
jae
xchg
in
jno
xchg
inc
xor
and
xor
mov
adc
ret
push
repnz
jge
xchg
imul
jns
imul
insb
dec
ret
xlat
inc
call
lock
pop
leave
notl
daa
pop
push
repz
pop
cwtl
in
add
mov
addr16
sbb
pop
inc
add
cmp
sbb
into
jno
xchg
pop
jge
jg
ja
push
bnd
bound
pop
fprem
jo
lret
mov
cli
xchg
pop
mov
movsb
and
out
insl
hlt
or
sub
dec
outsl
mov
addr16
icebp
sbb
in
sub
pop
sub
decb
push
cmc
and
inc
sbb
loopne
xor
std
stc
daa
mov
popf
adc
inc
pop
xor
neg
int
jg
sub
dec
push
ret
inc
pop
or
dec
loope
sub
cltd
sub
shr
repnz
stc
gs
add
out
pop
add
fdivrl
incl
fldenv
xchg
movsb
mov
pop
cli
adc
cmc
dec
pop
pop
push
cmp
in
shrb
sub
aam
inc
mov
gs
push
test
inc
sbb
lds
mov
xor
sbb
cmpb
icebp
nop
mov
outsl
sbb
fimuls
xchg
imul
test
into
subl
jo
jns
xor
into
push
push
mov
iret
jmp
loope
xor
lds
and
fcmovne
pop
outsl
pop
sbb
das
push
jno
jl
aam
popa
and
mov
rol
scas
jecxz
push
pop
insb
mov
pop
xchg
loope
jne
sbb
leave
sbb
lods
jne
lcall
dec
jp
pop
mov
and
enter
mov
jo
cwtl
cld
sahf
gs
pop
and
data16
movsl
in
pop
sub
xchg
or
cmp
fsubrp
out
iret
mov
push
add
enter
das
cld
xorl
xchg
test
fwait
or
les
std
insb
mov
cli
decl
repnz
inc
xlat
jp
roll
sbb
cmc
lods
ret
sbbl
fisttpl
cmp
and
test
aaa
inc
add
fnsave
int3
or
add
sub
or
int
xor
imul
jne
mov
xor
ret
stc
fiadds
test
shll
xor
or
sbb
popl
add
int3
mov
cmp
cmp
sbb
inc
hlt
movsb
inc
scas
imulb
int3
cmpsb
xchg
arpl
lock
and
mov
leave
cs
jbe
sub
je
xor
out
cmpl
mov
loop
xchg
push
sbb
sbb
jno
rcll
mov
rcr
mov
in
iret
je
shll
and
fs
dec
mov
sbb
sbb
movsb
clc
or
mov
mov
movsl
xchg
repnz
in
and
jmp
jl
decb
xor
mov
sbb
fnsave
scas
jns
pushf
xor
stos
out
mov
sbb
dec
pop
les
push
mov
xor
adc
fidivrs
mov
fucomi
jp
dec
dec
jl
xchg
xor
insl
xchg
out
ljmp
jns
mov
mov
fwait
das
cli
test
xchg
fwait
sbb
pop
jmp
jno
pop
jne
daa
ret
and
ret
mov
pop
lods
iret
cli
leave
lret
push
xchg
sbb
xchg
mov
shll
mov
xchg
cmp
into
adc
jg
imul
cmp
adc
and
sbb
mov
inc
or
data16
mov
ss
div
sbb
sbb
call
add
pop
adc
mov
or
mov
sahf
jmp
sub
arpl
dec
incb
icebp
xchg
jbe
cmp
xor
jmp
bound
cld
popf
or
shlb
jnp
popf
pop
jns
sub
into
daa
insl
fs
sub
ljmp
call
in
negb
scas
cmp
out
divb
mov
or
push
push
out
adc
and
mov
test
adc
mov
dec
mov
sti
dec
das
inc
adc
jge
outsl
and
stos
mov
movsb
rcr
fcmovnb
push
fwait
sub
js
fidivl
insb
mov
es
stos
adc
jo
xor
xchg
mov
aam
repz
mov
sub
jo
jge
pusha
jge
xor
insb
jo
xchg
je
xor
dec
in
incb
sbb
shll
mov
inc
adc
add
lret
stos
mov
mov
adc
scas
xor
call
xchg
lods
sub
cld
jmp
xchg
or
or
adc
cmp
popf
fstps
mov
xchg
mov
xchg
adc
jno
push
mov
jecxz
clc
inc
inc
xchg
add
subl
inc
sti
inc
inc
mov
mov
aam
das
jecxz
push
pop
inc
inc
ds
pop
aas
mov
mov
sbb
leave
push
aam
es
cmp
sbb
jmp
xchg
lahf
cli
xchg
mov
fdivrp
or
scas
sbb
imulb
xchg
inc
dec
add
insl
in
xor
dec
inc
mov
xchg
pop
xchg
imul
and
out
jmp
sbb
roll
loopne
jae
xchg
add
xor
xor
xchg
pop
sbb
rorl
sbb
cmp
cli
and
ret
in
popa
lahf
lds
jg
pop
jo
push
inc
test
or
sbb
in
data16
cmp
shl
add
ret
cvtps2pd
xlat
stos
repnz
xor
arpl
out
out
xchg
xchg
lahf
inc
data16
add
test
mov
loopne
xchg
loopne
insl
sbbl
jp
mov
jo
fsubr
add
test
cmc
mov
sahf
sbb
cmc
sub
popa
jnp
in
lock
push
pushf
inc
push
std
adc
mov
mov
nop
xchg
aam
fs
int
sub
das
shl
std
dec
leave
imul
ss
daa
ret
cmpsb
in
fs
loope
lcall
adcl
jb
mov
adc
rorb
jecxz
popf
cltd
dec
sti
xor
jp
cmpsl
insl
or
in
xchg
in
rcl
in
jge
xchg
xor
sbb
sub
push
testl
dec
and
mov
out
jno
cmp
shll
inc
hlt
cmp
movsb
out
mov
pop
notl
dec
fidivl
jecxz
adc
and
ja
insl
dec
repz
jl
cld
and
loopne
cmp
jmp
repz
mov
lods
fdivl
mov
add
rcrb
dec
data16
popa
mov
inc
or
inc
es
insb
pusha
je
xor
cld
outsl
sbb
loope
mov
or
sbb
xor
bound
sbb
out
and
mov
mov
jecxz
loop
jo
cmpb
cmpsb
mov
xchg
pop
loopne
ret
xor
xchg
push
sub
pop
inc
sbb
inc
sbb
aam
std
sbbl
loope
cmp
mov
jp
push
inc
adc
popf
inc
fsts
fistps
lahf
and
jle
dec
push
imul
stos
xorl
adc
add
add
xor
sbb
add
sub
pop
and
push
cmpsl
dec
adc
sbb
pushl
mov
out
rolb
shlb
jmp
cli
out
les
lret
jmp
mov
pop
ja
das
cld
icebp
add
gs
mov
pop
push
stos
push
or
mov
xchg
fdivrl
add
popf
in
out
sub
clc
cmpl
xor
shrl
xchg
fwait
pop
push
mov
loop
jle
negl
fwait
stc
icebp
aad
sar
add
or
loop
adc
mov
add
shlb
adc
adc
xor
fdiv
leave
ja
pop
jp
stos
xor
jnp
dec
jb
std
decl
sbb
dec
scas
mov
jo
or
and
xchg
or
cmp
test
repz
inc
ja
enter
leave
es
mov
movl
mov
inc
xchg
ret
mov
mov
in
mov
mov
notl
mov
fcoms
shr
imulb
je
mov
int3
xchg
adc
fwait
mov
mov
ret
or
xchg
add
adc
jae
das
mov
pop
ret
mov
cltd
jmp
mov
cmp
xor
add
xor
shl
jb
in
icebp
in
lods
mov
leave
das
bound
xchg
out
fcmovu
lds
aas
subl
adc
mov
jo
sub
jle
sub
lret
popf
pop
adc
fsub
repz
xlat
ljmpw
test
aas
cmpsl
dec
lods
leave
mov
ds
mov
jo
dec
pop
popa
or
mov
adc
and
xchg
cmpsl
les
push
or
repz
push
mov
loopne
cmpsl
shll
aas
lret
add
rsm
movsb
jecxz
push
sub
rcl
lds
fsubrs
push
xchg
cwtl
cmpsl
fs
cmp
fistl
mov
xor
loop
je
adc
icebp
stos
or
xorb
adc
and
enter
mov
mov
jno
cmpsl
inc
adc
and
dec
jno
or
adc
sti
and
ss
out
out
jmp
mov
enter
pop
mov
dec
cmp
pop
adc
sbb
in
mov
arpl
mov
jo
out
push
loopne
popl
shrb
xor
push
fimull
fidivrl
add
fisttpll
roll
ret
sbb
adc
mov
insl
inc
out
pop
sbb
dec
test
je
mov
and
lods
add
mov
xlat
sub
pop
mov
mov
xchg
jle
cmp
cmpl
push
and
and
mov
pop
ja
push
stos
push
outsl
and
mov
and
pop
sub
mov
jb
xor
lods
sub
fiaddl
negb
push
cmp
dec
nop
daa
and
loope
enter
std
mov
out
fisubs
pusha
or
lods
dec
push
adcb
inc
push
jbe
push
in
push
sbb
xor
cmpsl
test
adc
or
pop
lods
mov
insb
js
scas
sub
push
lret
inc
push
pop
out
pop
mov
movsl
aad
cmp
popf
cmp
mov
enter
outsl
fsts
mov
stos
jne
add
je
push
ss
adc
lds
pop
jl
push
sub
xor
dec
fisubs
push
dec
xor
push
je
push
frndint
ljmp
pusha
shl
jae
sub
fs
bound
lcall
inc
inc
andl
and
jnp
repz
fxam
dec
xchg
adc
fistpll
stos
cs
push
mov
cmp
and
xor
mov
dec
cmpsl
lock
mov
xchg
mov
incl
xchg
xor
jg
xchg
repnz
sub
and
lcall
add
push
adc
pushw
das
adc
and
adc
and
sbb
sub
ljmp
and
cmc
mov
pusha
mov
push
sbb
aas
sub
mov
out
sub
push
test
xlat
cmp
cmc
pop
sbb
fbld
jne
repz
lock
mov
xchg
mov
out
into
sarl
jo
mov
sbb
imul
stc
dec
pop
test
pop
in
nop
jecxz
rcl
test
mov
sbb
loop
inc
push
jno
cmc
or
push
ret
nop
outsl
xchg
lods
xor
loopne
dec
pop
repz
cmp
lods
cmpsl
sbb
mov
ret
adc
ljmp
js
xchg
fistl
outsl
loopne
push
rcr
push
cmp
ds
push
pop
cmp
ret
cmc
movsl
push
pop
ret
arpl
push
roll
add
outsb
mul
or
cmp
push
mov
out
or
fadds
inc
xchg
inc
xchg
adc
and
orl
lods
popa
jno
imul
clc
addr16
sub
mov
stos
sti
test
jmp
int
sahf
fcmovu
cmpsb
adc
pusha
and
sub
inc
and
lods
pop
xchg
sub
or
pop
or
mov
inc
pushf
inc
pop
or
jg
add
cmp
mov
adc
negb
push
sub
jnp
leave
adc
push
xor
sarb
dec
dec
mov
inc
aam
xchg
stc
mov
sahf
and
jbe
xchg
subb
sarb
lcall
loop
adc
pop
sbb
or
cmp
jae
das
cmp
test
outsb
ret
sbb
ficompl
je
mov
and
es
push
inc
fsubl
pop
jno
lret
adc
sbb
lock
push
mov
js
ss
mov
call
mov
shrb
fwait
mov
cmp
mov
mov
stc
mov
xchg
repz
push
daa
push
or
or
or
outsl
jae
sbb
inc
jae
adc
cmp
into
sub
mov
popf
aam
in
les
lea
mov
dec
fdivrs
push
fcomps
xor
mov
pop
sahf
pop
test
cmp
add
rcll
jno
jae
in
sbb
imul
mov
jl
mov
cmc
sub
push
imul
and
rclb
dec
test
lea
push
ds
jp
xor
pushf
mov
loope
jnp
fistpll
int
in
or
cs
xchg
fs
dec
jnp,pt
jns
notb
dec
or
fwait
xchg
outsl
jmp
add
inc
das
push
fistps
mov
mov
je
sub
outsb
adc
xor
es
pop
adc
mov
into
jbe
xlat
mov
sbb
and
sub
xchg
mov
addb
sub
adc
nop
notb
and
or
and
dec
add
je
xchg
fildl
and
shrl
sbb
mov
lcall
xor
mov
pop
or
add
dec
sub
mov
lret
into
rcll
fs
nop
cltd
mov
sbb
popa
add
and
pop
xchg
mov
adc
fdivl
sub
inc
fcmovb
out
push
in
cmp
loopne
pop
stc
out
cmc
push
push
fcompl
sub
cmp
rcr
and
or
and
push
add
xor
sub
aad
cwtl
or
leave
in
jmp
and
xchg
dec
std
sub
push
call
les
andb
cwtl
test
mov
mov
imull
add
sub
sbb
xor
daa
std
mov
fwait
jg
std
mov
pop
inc
push
xchg
mov
data16
jnp
out
iret
fadds
cmp
sub
add
pop
call
sub
lock
xor
sbb
arpl
dec
or
pusha
shl
ja,pt
lahf
mov
cld
jle
test
xchg
cmpsl
bound
clc
jns
xchg
leave
and
mov
push
mov
aaa
cld
mov
mov
clc
pop
lcall
or
lret
push
xchg
ja
mov
add
repnz
inc
loop
add
push
cmp
jns
cld
scas
inc
ret
or
mov
adc
rcrl
lds
push
sbb
mov
roll
aas
mov
mov
push
testb
pop
jo
cmp
aas
lea
jb
adc
jg
lahf
or
or
pusha
into
call
cwtl
orb
adc
movsl
out
shll
add
push
xchg
subl
xor
xchg
test
xchg
mov
repnz
xlat
jno
cmp
ljmp
outsl
adc
sbb
dec
mov
mov
lods
sahf
pop
jg
lods
lcall
pop
dec
push
in
pop
shlb
mov
sti
leave
cwtl
mov
or
mov
mov
mov
sub
dec
cmp
pusha
mov
lods
cmp
in
xchg
jge
mov
or
gs
sub
fldcw
xchg
jmp
mov
gs
xlat
xchg
pop
jmp
sarl
mov
mov
mov
lahf
cmp
mov
fwait
dec
sbb
fmuls
shrb
into
mov
sbb
lock
lds
and
dec
btr
int
test
pop
int
fs
mov
fwait
xor
leave
xchg
xchg
inc
sbb
lret
push
xchg
pop
mov
sbb
push
sbb
scas
cmc
and
into
mov
imul
push
call
aaa
loope
mov
add
sbb
fs
push
add
mov
inc
dec
clc
mov
sarl
orb
mov
pop
sbb
xor
mov
jp
push
pushf
les
incl
or
into
mov
mov
and
les
adc
loop
mov
test
add
movsb
inc
push
cwtl
mov
adcb
mov
xlat
lret
imul
and
shrb
and
shll
mov
cltd
jmp
aam
mov
cmp
xor
andl
popf
mov
sbb
movsl
lret
cs
inc
adc
fiadds
xor
call
inc
jecxz
lock
pop
add
cmp
rcrb
imul
sub
lock
cmp
sarb
rclb
mov
pop
dec
fcmovbe
cwtl
pusha
rcrl
aaa
adc
dec
decl
pop
pusha
pushf
andb
rclb
aas
xor
pop
mov
xchg
inc
xor
and
mov
push
in
cmp
sahf
aad
mov
leave
dec
ds
push
xor
or
xchg
mov
adc
xchg
or
sub
add
push
xor
xchg
fiadds
outsl
cmc
in
lahf
aas
push
fsubs
cltd
movb
pop
lahf
movsb
sub
aaa
cmpsb
dec
jmp
out
fcmove
aad
popf
dec
sub
stc
cmpsb
jmp
pop
mov
mov
std
and
ja
cmp
jo
push
sub
scas
cmp
sub
xchg
push
adc
sub
fdivrs
push
lock
test
aaa
or
mov
fnstenv
in
popa
inc
pop
push
push
cs
aam
cvtps2pd
mov
dec
lahf
add
jns
in
test
sub
xor
jno
xlat
push
push
inc
xchg
pop
cwtl
adcl
and
cwtl
adc
ja
jl
xlat
pusha
lds
lods
jmp
shll
or
lods
movsb
inc
dec
push
jns
nop
push
push
sbb
cwtl
sahf
inc
or
test
fimull
loop
loope
pushf
lods
arpl
dec
mov
test
mov
cmp
test
dec
mov
ljmp
and
cld
dec
icebp
popa
fisttpll
mov
out
rorb
stc
shrd
sahf
inc
xor
push
or
sahf
mov
adc
stc
or
xchg
out
push
pop
test
test
gs
jne
mov
fsubl
in
pop
push
ret
add
xor
mov
sub
loop
stos
outsb
push
pop
int
and
sbb
push
sbb
inc
xor
ret
sub
xchg
int
rcll
dec
xchg
std
test
movl
inc
add
inc
jo
lods
xor
pop
pop
xchg
or
pop
nop
or
jo
xchg
idiv
test
test
or
xor
xchg
inc
lock
scas
ljmp
inc
in
outsl
xchg
cli
push
dec
imul
gs
imul
lds
cwtl
rcll
mov
push
sbb
in
mov
out
dec
xchg
fwait
js
jne
push
cmovnp
cwtl
popa
and
adc
jb
push
cltd
inc
mov
inc
push
push
lcall
push
movsl
shrl
push
pop
inc
mov
loop
fists
mov
sbb
ja
push
xchg
sub
or
inc
jmp
sbb
mov
jl
cld
jle
fistl
and
push
jge
mov
scas
lahf
dec
push
out
xchg
push
outsb
mov
inc
mov
testl
mov
dec
or
xchg
push
out
push
fistpl
mov
add
int3
les
xchg
shl
cmp
movsb
pop
in
aad
or
jmp
xor
loopne
out
insl
mov
pop
mov
push
stc
dec
xchg
add
mov
out
cwtl
and
lods
ljmp
mov
ds
hlt
iret
lds
ja
jmp
iret
xorl
pop
or
cmp
js
cmp
mov
mov
push
fisubs
popf
mov
mov
adc
scas
fwait
inc
scas
ss
push
inc
mov
mov
jne
mov
pop
xor
cmp
mov
shrb
mov
dec
xlat
scas
or
cld
outsb
mov
add
jge
insb
sbb
lea
mov
and
pop
dec
jbe
int
enter
mov
leave
clc
dec
insb
pop
mov
sub
or
xrelease
fistpll
pop
shrl
sti
test
add
test
jmp
push
push
sub
sub
test
ret
mov
lods
into
ja
cli
add
cmc
pop
mov
jo
outsl
cs
in
test
add
dec
adc
dec
orl
push
adc
dec
and
ljmp
jecxz
pop
clc
scas
call
aam
movsl
or
icebp
inc
sti
pop
fsubl
into
outsb
mov
stc
pop
jno
and
jo
in
xchg
pop
push
addl
stos
decb
push
xchg
js
bound
push
dec
mov
ret
test
loopew
cs
dec
cmc
int
fbstp
push
push
scas
fxch
jno
pusha
clc
inc
in
test
scas
inc
xor
mov
push
dec
in
lret
lret
jns
cmp
xchg
sbb
into
sbb
fstpl
in
out
mov
cltd
scas
das
call
das
cmp
rcpps
popa
cs
out
jecxz
stos
mov
sahf
loop
xchg
test
sahf
inc
push
xor
inc
ss
or
inc
cmp
ficoml
data16
xor
adc
dec
inc
scas
cmp
pxor
aad
les
cltd
add
sub
sub
mulb
jns
addr16
adc
sbb
mov
dec
loopne
insb
or
ds
push
movsb
jmp
lock
movsl
stos
push
adc
jg
mov
sub
fidivl
mov
jno
out
jb
in
pop
mov
xchg
dec
lods
out
sbb
inc
mov
in
outsb
fwait
xor
out
push
sub
jecxz
dec
mov
mov
fcoms
into
add
mul
or
sbb
push
or
popa
popf
loopne
decl
add
hlt
mov
jae
mov
movb
adcb
jne
in
shll
ss
pushf
sbb
and
dec
mov
push
sub
clc
sub
js
ficomps
adc
pushl
push
stos
push
cltd
js
add
jge
xchg
mov
das
mov
jae
mov
jl
mov
or
jmp
dec
inc
lret
scas
cwtl
dec
clc
pop
lods
push
adc
jle
nop
push
ljmp
out
or
cmpb
push
outsb
dec
inc
daa
sub
jg
es
dec
jno
loopne
mov
inc
addr16
test
movsbl
loope
pusha
sarb
into
xchg
std
clc
popf
test
mov
inc
mov
or
mov
call
into
inc
addr16
sti
pop
sbb
sbb
add
cmp
cltd
jl
or
mov
jg
pop
fwait
int3
ret
dec
ljmp
inc
scas
sub
xchg
fnsave
mov
xor
loop
outsl
add
outsl
xchg
loopne
repz
pop
inc
fs
loopne
sub
sbb
mov
push
repnz
lods
addps
jbe
jmp
fcompl
cmpsl
and
aad
sti
stos
lcall
nop
pop
pop
mulb
int3
lcall
jg
mov
mov
mov
cmp
das
jb
ret
inc
out
fwait
outsb
outsl
aas
aam
mov
and
outsb
mov
outsb
out
mov
out
inc
outsb
imul
hlt
loope
or
popa
pop
jno
adc
jbe
or
loope
dec
mov
shrb
mov
pop
outsb
jg
outsl
mov
es
inc
ljmp
sti
jmp
push
popf
cmp
inc
sbb
push
test
add
mov
jns
cmpsl
cmpsl
bound
pop
push
stos
mov
ljmp
push
int3
mov
outsl
lods
das
movsb
jecxz
or
call
pop
leave
aas
int3
mov
das
pop
stos
mov
in
xor
sub
pop
mov
ret
out
push
mov
stos
pop
pushf
adc
jns
pop
pop
insl
xor
dec
jbe
aad
insl
push
push
int
clc
dec
push
add
xchg
mov
adc
shlb
fwait
cmp
in
jae
adc
aas
cmp
jb
sahf
scas
popa
sbb
mov
push
out
jmp
shl
cmpsb
cmpsl
out
dec
in
pop
test
sbb
sti
outsl
cmc
dec
into
test
sbb
inc
ficoml
sub
mov
sub
sbb
mov
lret
out
out
xchg
enter
movsl
out
mov
cmp
insl
push
cmp
aaa
or
inc
lock
xor
push
mov
movsb
xor
int
mov
pop
scas
jns
cmp
mov
out
loopne
add
shll
scas
pop
push
xor
out
push
push
lock
jne
stos
imul
out
imul
sbb
je,pt
pop
iret
mov
or
ss
test
cmc
ret
rcl
pop
fcmovnu
mov
lods
inc
mov
inc
sub
hlt
mov
clc
in
pop
scas
cmp
in
adc
adc
and
push
cwtl
xchg
bound
cwtl
xchg
push
dec
pop
cmp
mov
add
push
cwtl
add
add
dec
mov
and
and
add
mov
adc
test
in
push
sbb
and
jbe,pt
jmp
mov
hlt
and
bt
call
sub
push
xchg
hlt
sub
lock
adc
jb
mov
mov
sub
scas
add
push
sbb
inc
sub
call
lock
xchg
sbb
das
push
je
xor
fsub
cmp
mov
in
add
aas
xchg
imul
lcall
inc
and
and
push
frstor
jg
cmpsb
pop
test
xor
adc
imul
lds
int
push
sarl
xor
or
fldcw
aam
jp
mov
sahf
fs
pop
mov
xchg
jecxz
xor
out
push
outsb
les
es
pop
stos
sub
movsl
jmp
jg
mov
int3
js
pusha
rcrb
lcall
jo
lods
stc
test
mov
aam
and
add
scas
and
iret
dec
mov
xchg
push
cmp
jae
ffree
adc
sub
int3
mov
mov
enter
mov
sub
xchg
add
lock
adc
push
mov
test
jecxz
xchg
xchg
and
xor
cld
dec
jl
sbb
xchg
movsl
push
pushl
in
repz
inc
xor
xchg
sub
xchg
xorl
inc
imul
lret
daa
pop
xchg
inc
pop
cmp
loopne
push
bound
push
popf
xor
adc
into
je
lds
ja
jl
and
aas
lret
jns
mov
dec
xchg
pusha
lcall
cmp
adc
xor
fildll
insb
pop
gs
jo
mov
out
clc
test
movsb
sbb
rcrl
adc
leave
cmp
mov
xlat
pop
inc
outsl
lcall
push
mov
sbb
in
into
jns
jmp
stc
mov
inc
addr16
or
test
mov
xor
mov
out
int3
xlat
aas
mov
cltd
add
and
fisttpll
pop
lock
scas
mov
fwait
xorb
mull
xchg
push
pop
ss
sub
push
cmp
mov
dec
bound
rorl
xrelease
fsubl
mov
lea
xor
xor
jg
clc
or
sub
jmp
push
and
push
jns
sub
js
notl
ljmp
les
imul
fcompl
add
xor
jp
stc
jns
add
ret
subl
mov
pop
or
add
mov
inc
or
xor
dec
push
cwtl
shlb
adc
dec
sbbl
xchg
mov
in
dec
sahf
xchg
popa
push
cld
pop
pop
mov
aad
push
sbb
add
inc
fs
mov
popf
xchg
popf
xchg
cld
push
mov
dec
stc
nop
dec
hlt
and
jecxz
mul
cli
push
fwait
loope
stos
sbb
sbb
lods
loopne
xor
mov
jl
mov
xchg
movsb
mov
sbb
bnd
decl
xchg
sub
into
loope
das
jecxz
xchg
add
decb
outsl
jl
pop
movsl
lret
cltd
rol
mov
push
lret
in
mulb
jge
mov
and
cmp
pop
imul
jl
jle
in
push
sub
pop
push
lret
add
adc
mov
lcall
mov
sbb
inc
sbb
scas
mov
clc
mov
fimull
adc
jp
mov
xor
addr16
mov
scas
adc
fcoms
arpl
jnp
add
cmpsb
test
push
dec
jbe
jns
push
add
inc
dec
outsb
stos
sub
stc
pop
inc
ljmp
sub
inc
adc
cwtl
jb
sub
gs
fs
mov
cmp
loopne,pt
xchg
gs
icebp
ficomps
enter
mov
inc
cwtl
mov
movsl
fwait
inc
adc
xchg
adc
imul
dec
dec
cmp
daa
insl
adc
adc
leave
fs
mov
sbb
cmpsb
pop
dec
mov
dec
nop
shl
mov
push
xchg
sub
xor
xor
fcompl
dec
cmpsb
or
fsubrs
cli
xor
adc
movsl
lods
push
loop
faddl
jns
shlb
mov
fdivl
adc
bnd
sti
rcrl
clc
out
test
mov
outsl
subl
cmc
cld
loop
jecxz
dec
dec
pop
cmp
filds
mov
loopne
xor
cwtl
mov
inc
mov
or
or
and
loopne
adc
rcr
xor
mov
or
jno
push
jae
ret
adc
dec
pop
mov
jle
cmpsb
clc
aaa
adc
mov
fsubrs
lods
shll
bound
bound
fimull
push
jbe
shrb
leave
mov
imul
and
insb
cmp
aam
cmp
xchg
mov
inc
std
jnp
and
fs
sbbl
mov
adc
mov
xchg
aad
jo
bound
push
mov
push
pop
sub
jle
jg
fsubl
and
adc
sbb
out
fcomi
shll
mov
jbe
inc
jns
push
mov
or
or
pop
arpl
fldcw
lcall
xchg
es
and
nop
dec
fldl
shll
xchg
aad
inc
aam
lret
addr16
push
adc
test
repnz
icebp
inc
test
in
fs
icebp
and
sub
pop
xchg
cmp
daa
addl
mov
xchg
lds
leave
push
cmp
jnp
addb
sub
repz
rclb
and
bound
pop
leave
mov
fcmovne
sub
out
mov
mov
sbb
add
and
addl
je
mov
das
fwait
jnp
aad
insl
arpl
jmp
mov
xor
sbbb
pop
jecxz
inc
call
mov
arpl
cmc
xor
dec
lods
mov
subb
into
cmpb
mov
cmp
or
mov
addb
imul
scas
scas
pop
add
sub
cmp
dec
dec
pusha
add
rcll
bound
fiadds
xchg
dec
fs
lods
pop
sub
add
ljmp
test
mov
cmp
lret
int
movsb
sub
cltd
xor
lret
push
ja
lret
mov
add
sbb
dec
in
std
ret
sub
and
and
cli
mov
int3
jge
popa
inc
pop
out
sbb
pop
int
pop
jmp
push
jmp
call
jl
sbb
pop
lds
sub
cmpsb
push
mov
cld
xlat
and
sub
mov
notl
in
dec
mov
stc
lds
xor
cmp
popa
in
ja
inc
loope
adc
imul
cmp
pop
jmp
gs
pop
inc
and
cmp
mov
sbb
pop
pop
sbb
fsubs
jne
shll
xor
mov
mov
fsubr
lds
fisubrs
cltd
or
mov
rcll
loopne
aas
das
dec
and
jnp
sub
addl
or
dec
xor
jg
sbbl
imul
test
outsb
arpl
xchg
xor
and
xor
push
out
mov
xchg
or
and
out
jb
cmp
es
fisttps
test
aam
jecxz
scas
movd
in
xchg
xchg
dec
loop
outsb
sub
sahf
rcr
xchg
xor
push
inc
es
rclb
mov
rsm
fisttpl
and
xor
std
sub
enter
adc
ds
outsb
sub
adc
xchg
pop
iret
in
outsb
or
in
popa
sub
in
adc
dec
xchg
xchg
fildll
nop
cltd
imul
ds
mov
dec
dec
mov
in
dec
andl
in
mov
pop
dec
or
insl
xor
lahf
shlb
adc
out
add
jecxz
jnp
rclb
pop
arpl
aas
add
and
cs
jmp
aaa
call
adcl
and
and
in
dec
mov
mov
push
test
jl
daa
mov
push
cmp
dec
jbe
shl
test
or
nop
enter
inc
lahf
aaa
sub
mov
mov
jnp
js
cmp
fdivl
lcall
and
fwait
imul
fadds
fwait
arpl
xchg
test
dec
inc
add
fmuls
adc
pop
lds
jo
mov
sub
aad
cmc
mov
repz
and
add
in
adc
mov
mov
fisubl
loop
roll
pop
jne
or
cmp
dec
vmovupd
and
adc
mov
push
jnp
lods
mov
imul
inc
cmp
jp
or
inc
sarl
fwait
mov
fs
cmpsl
and
adc
mov
push
scas
or
out
out
les
or
pop
rcr
mov
push
add
movsl
rorb
ja
xlat
sti
popa
cli
mov
add
sub
idiv
pop
movsb
adc
mov
in
or
push
xchg
lods
adc
jo
sub
fstpl
jg
aaa
fsubrl
mov
ja
mov
scas
dec
add
add
jp
in
dec
mov
xchg
repz
fwait
dec
dec
sub
fldt
jg
jne
leave
sbb
or
adc
lret
mov
ja
sbb
loopne
dec
sub
sarb
xchg
sarl
in
sbb
push
fwait
into
movsl
mov
cs
out
mov
cmp
jmp
filds
inc
je
movsb
fdivrs
test
sub
jo
repz
add
mov
gs
leave
cmc
test
xchg
in
in
mov
iret
jns
rcrl
cmp
std
daa
sbb
mov
and
mov
push
pop
sti
pop
fsubrs
decl
sub
pop
sbb
mov
push
dec
je
je
push
sbb
mov
shlb
jecxz
pop
movsb
js
cmpl
adc
cmp
aad
aad
jp
pop
cld
enter
sbb
enter
sbb
mov
pop
mov
dec
adc
inc
fcoml
pop
cmpb
cmp
fcoms
jne
jae
aas
cmp
imul
mov
hlt
jl
jb
adc
mov
or
add
repnz
lds
xlat
icebp
cld
stos
jbe
fistps
cmc
dec
xor
pop
mov
dec
push
dec
jb
push
mov
and
and
sbb
push
mov
dec
out
repnz
popa
mov
xor
dec
mov
and
push
fistpl
lret
xchg
outsl
jmp
jle
jmp
xor
adc
cmpsb
pop
dec
lods
xlat
xor
sbb
mov
sbb
addr16
loopne
add
int
inc
cmp
out
push
jb
aad
aaa
mov
pop
cs
jl
stc
inc
loop
or
dec
or
loope
cltd
jge
cmp
jno
xor
leave
ret
nop
xchg
xchg
and
addr16
dec
fnstenv
adcb
test
mov
push
ja
fs
aas
imul
xchg
mov
mov
jbe
sbb
pushf
jmp
das
pop
mov
xor
pushf
and
into
call
add
pop
aas
bound
dec
test
push
out
les
xchg
andl
lea
rcll
or
mov
and
or
pop
and
pop
dec
mov
lds
in
sbb
push
add
jle
xor
fsub
mov
and
pop
add
and
sahf
jmp
inc
js
or
mov
mov
lea
xchg
dec
data16
sub
push
popa
xchg
nop
mov
xchg
sub
jl
ljmp
call
sub
int3
test
jecxz
or
stos
cmpsb
dec
sbb
dec
scas
adc
out
out
xor
push
push
inc
jo
xor
frstor
ret
fsubrs
jle
dec
jbe
aad
cmp
mov
push
inc
mov
les
push
fcompl
and
arpl
daa
jmp
mov
lds
notl
inc
jle
or
pop
sbb
pop
jp
fidivl
cld
jecxz
pop
cmp
fisubrs
push
js
inc
sbbl
mov
add
sbb
js
sahf
mov
add
sbb
sbb
sbb
call
fsubl
cli
sbb
sub
or
pop
inc
push
sub
jne
aam
je
mov
jbe
xor
cmp
ljmp
mov
or
aam
mov
inc
or
decl
jmp
arpl
gs
mov
shr
sub
das
jge
popf
fs
or
nop
or
pop
xor
lret
lods
mov
xor
sbb
jmp
add
paddsb
push
stos
push
xor
test
fldenv
dec
leave
cli
add
shrb
lret
lret
fsubrl
jno
sub
popf
pop
sub
push
xchg
push
jp
test
pop
test
push
les
fnsave
mov
dec
stos
orl
out
test
lock
pop
or
mov
dec
pop
imul
adc
fs
pop
aad
xchg
push
push
pop
inc
push
xchg
mov
xchg
ljmp
pusha
addr16
pop
or
shll
out
test
pop
lret
adc
push
mov
add
in
cltd
or
sti
sub
xor
mov
dec
out
cltd
cltd
mov
lods
movsb
push
adc
les
jge
pop
lods
xchg
pop
mov
jmp
imul
jge
fiaddl
mov
js
into
cmp
push
xor
xor
mov
loope
shll
imul
insw
lcall
daa
cwtl
sti
pop
inc
testb
dec
sub
mov
push
dec
enter
push
push
dec
mov
hlt
inc
out
sub
pop
insb
movsb
arpl
dec
sbb
in
sbb
pusha
jmp
xchg
fstpt
cltd
imul
test
xlat
loopne
xchg
xchg
call
iret
fcom
out
enter
xchg
nop
xchg
bound
hlt
movsb
lods
hlt
icebp
add
test
add
sbb
into
and
adc
sbb
push
in
rcrb
scas
sub
push
push
mov
xchg
cld
arpl
mov
lods
inc
mov
add
xor
push
mov
sbb
sarl
cwtl
in
mov
jnp
xchg
movsl
mov
push
int3
shrb
clc
mov
in
mov
shrb
add
xor
mov
dec
jg
subl
mov
jmp
push
out
in
outsl
fstps
dec
inc
mov
cmp
and
inc
cld
push
pop
mov
mov
mov
mov
cs
sub
or
sbb
add
pusha
fldcw
adc
fwait
lea
sarl
leave
pop
pop
mov
mov
push
incl
clc
inc
rolb
lods
xor
lock
aas
push
pop
mov
lahf
jge
jbe
mov
clc
sub
mov
loope
inc
mov
push
cwtl
xchg
mov
xchg
out
pusha
shrb
push
sbb
in
ljmp
mov
outsb
jb
xchg
cmp
push
pop
ljmp
xchg
mov
xorl
aaa
mov
cmc
pop
and
dec
mov
test
mov
ds
jns
scas
inc
fwait
mov
push
rol
std
loopne
adc
fidivl
test
xchg
lret
pop
dec
aam
push
icebp
cmp
adc
inc
or
or
jmp
stc
lahf
ficoms
add
cld
push
cmp
stos
dec
xchg
xlat
jnp
or
mov
mov
je
jmp
and
push
filds
popa
push
aad
ret
cltd
mov
sub
in
outsb
andl
lock
outsl
sub
jb
sbb
mov
popa
or
shlb
ss
adcb
xor
push
cld
stc
fildll
out
rorb
jmp
sbb
fisubl
fidivl
addr16
mov
fs
and
mov
mov
aad
in
aaa
mov
ret
lcall
test
mov
or
dec
push
mov
jne
add
push
push
mov
je
movntq
ret
fistpl
pop
inc
shlb
cli
scas
cmp
shrb
pop
sub
rcl
mov
pop
adc
add
dec
insb
or
lret
bound
adc
test
imull
cmc
cmp
enter
lea
sbb
testl
sub
fidivs
outsl
mov
popf
dec
clc
jg
jge
jo
jecxz
push
addr16
repz
sub
aas
stos
dec
add
loop
cmp
pop
pop
pusha
sbb
jne
mov
xchg
sbb
xor
mov
pop
sbb
push
sbb
push
std
rclb
lret
push
cmpsl
mov
in
and
lcall
out
xor
push
gs
inc
enter
cmp
mov
mov
add
repz
mov
jp
mov
inc
fiaddl
out
sub
mov
xor
sub
add
push
mov
scas
pop
rcr
add
sub
loope
icebp
ss
ljmp
jno
imul
pop
pop
out
mov
std
jge
push
xchg
lea
or
dec
ljmp
push
fistps
stos
js
ror
sti
jne
data16
out
xor
fiadds
fldl
stos
xchg
xchg
xchg
push
cmp
jae
sbb
xor
xchg
pop
pop
pop
push
fdivr
gs
push
dec
mov
int3
nop
mov
jecxz
outsb
arpl
xchg
push
leave
push
lcall
mov
in
xchg
push
in
pop
adc
or
cmp
out
lds
pop
testl
aam
fcompl
das
pop
sbb
iret
lock
in
push
push
push
push
outsb
imul
imul
stc
or
mov
xor
repnz
jle
outsl
add
push
dec
adc
and
xchg
xchg
sbb
dec
lock
jecxz
mov
cltd
add
mov
push
inc
inc
mov
inc
cmp
or
int3
ret
mov
xchg
in
dec
scas
or
sbb
out
pop
xchg
aas
das
test
inc
mov
shl
std
ja
adc
clc
jae
fnstenv
sub
mov
scas
dec
adc
sbb
ds
pop
cmp
int
dec
mov
push
js
sbb
cmc
and
cmp
filds
nop
shrb
sbb
das
outsb
cmpsb
mov
dec
orb
mov
shl
ret
pusha
xchg
inc
pushf
mov
cli
push
mov
jno
pop
inc
mov
cmp
or
es
pop
adc
jns
inc
lods
push
xlat
dec
nop
push
jo
mov
pop
sbb
inc
pop
push
inc
call
lret
shll
or
cmp
mov
mov
bound
jle
cmp
pop
sbb
pusha
imul
xor
lods
std
xor
daa
cltd
and
jg
push
mov
adc
dec
mov
inc
scas
test
nop
in
xlat
mov
int
inc
jp
xor
xchg
mov
insb
ss
pop
inc
sbb
daa
xchg
fnstenv
scas
insl
push
add
push
mov
popf
and
out
fisttps
scas
jmp
mov
andl
inc
jb
cmp
movsb
pop
gs
clc
cmp
scas
adc
pop
pop
or
adc
lea
pop
rclb
jo
stos
test
ss
sub
push
je
inc
sti
shll
push
xchg
inc
or
xorl
mov
push
shr
lret
ljmp
adc
sbb
cmpsb
jb
push
and
pop
jne
inc
icebp
ljmp
outsb
shlb
pop
sub
ds
out
in
mov
scas
add
mov
idiv
fiadds
fidivl
add
in
out
pop
test
std
push
add
mov
xor
jne
sub
mov
dec
push
std
push
add
insb
inc
jae
mov
dec
out
sub
clc
mull
mov
push
sbb
enter
pop
xchg
pop
mov
sub
and
cmp
cmp
lcall
mulb
mov
int
test
addr16
jae
sub
pusha
mov
out
jle
mov
ss
mov
mov
adcb
into
xchg
mov
inc
cmp
movsl
xor
or
addr16
mov
add
cs
or
sbb
je
js
push
iret
aam
repz
out
sub
outsl
dec
lods
or
mov
push
ret
ljmp
sti
cli
inc
fcmovnb
fsubp
cmp
jo
imul
mov
inc
sub
add
cmp
push
adc
push
pop
and
mov
dec
pop
clc
stc
mov
sbb
mov
cli
scas
lock
js
adc
mov
xchg
iret
and
aas
aad
out
mov
mov
push
cld
loope
push
insl
inc
cmpsb
xchg
or
shll
movsb
lea
mov
xchg
aam
cmp
mov
idiv
int
xchg
xlat
sbb
jle
inc
jge
jge
xchg
fldcw
sbb
add
sti
jge
xor
and
mov
pop
hlt
jnp
push
adc
mov
movsb
ret
inc
cs
inc
in
jb
xchg
mov
mov
arpl
or
in
xor
sub
shlb
xchg
mov
ljmp
mov
test
jge
or
addr16
fld
add
shll
in
stos
pop
fsubs
les
out
in
or
cmpsb
xchg
daa
push
inc
sahf
out
movsl
and
aas
pusha
inc
or
gs
in
cli
dec
adc
sub
inc
sbb
xchg
sbb
push
lcall
mov
add
xor
xchg
mov
dec
stos
and
xor
sbb
pop
xlat
and
xchg
stos
xlat
push
push
fimull
adc
cmp
and
push
xor
sbb
jge
mov
jno
inc
mov
adc
xlat
scas
mov
xchg
mov
xchg
fwait
lods
outsl
mov
addb
pop
mov
push
imul
outsb
js
into
lock
enter
jb
jo
mov
ret
push
pop
lret
dec
mov
movsl
shll
clc
mov
insb
pop
push
sub
dec
push
stc
mov
xchg
jne
sahf
neg
imul
fs
xor
sub
faddl
mov
and
or
cmp
and
fcomi
je
mov
adc
sub
int3
xchg
sbb
or
mov
mov
dec
or
sbb
and
daa
lea
out
in
xor
addr16
and
push
mov
add
fstp
xchg
aaa
jo
or
lods
adc
jge
xor
ja
mov
xchg
out
fcoms
sub
cmpl
mov
arpl
jb
inc
inc
dec
sbb
pop
cwtl
push
adc
xrelease
cmp
dec
mov
cmp
popf
mov
cmpsb
into
mov
add
jnp
xor
pop
jb
mov
mul
mov
push
mov
dec
dec
test
adc
insl
adc
insb
dec
and
sahf
pop
xchg
arpl
movsl
add
in
imul
pop
xchg
loope
stos
gs
push
stos
lea
lds
into
mov
dec
push
ds
xchg
call
adc
loop
test
int3
jp
sub
mov
xchg
mov
mov
jge
xor
in
sbb
aad
pop
in
ret
clc
sbb
test
pop
dec
in
cmc
pop
dec
mov
pop
sahf
test
jno
jmp
sbb
sbb
mov
lcall
scas
sub
js
loopne
cmp
dec
dec
ret
in
dec
jmp
cmp
jl
pop
add
in
cmp
push
and
stos
test
mov
add
sub
sub
lods
dec
cmp
xor
lods
push
jl
xor
pop
cltd
outsb
ficoml
out
mov
xor
cmp
cmp
and
mov
clc
rcl
imul
and
fimuls
mov
repnz
xor
pop
mov
out
clc
test
popa
mov
xor
sbb
in
shll
scas
pop
clc
loop
pop
jae
sbb
int3
or
xchg
addb
pop
sahf
jns
stos
loope
mov
push
jmp
jno
rolb
xor
dec
cmpsl
add
jnp
outsl
scas
int
push
jecxz
flds
mov
pop
shll
nopl
jb
shll
ds
push
push
add
clc
push
les
inc
jge
xlat
inc
push
arpl
adc
fs
cltd
cmp
add
sub
and
fcomps
enter
add
movsl
fiaddl
in
enter
rcrl
movsl
loope
inc
rorl
lret
inc
or
ljmp
xchg
cld
inc
mov
mov
call
ds
and
jmp
jecxz
mov
cmp
ja
lcall
add
mov
pop
loope
rol
add
ret
pop
out
cmpsb
sbb
fwait
and
push
divb
mov
frstor
mov
mov
pop
mov
pusha
inc
test
xor
xchg
out
stc
push
inc
daa
sub
push
or
xchg
mov
das
or
cmpsl
addr16
push
inc
and
in
std
icebp
mov
lock
popa
add
ret
hlt
sub
jmp
inc
jae
pop
je
push
push
mov
inc
pop
adcb
outsb
push
adc
cmp
pop
mov
test
add
clc
and
out
lock
inc
cmpsl
loope
scas
jecxz
push
or
pusha
add
out
dec
testb
fistps
imul
xor
mov
loopne
mov
jnp
pop
shl
or
mov
imul
pop
fld
xchg
les
mov
adc
imul
xchg
cmp
cmp
lcall
imul
dec
xlat
sub
aas
push
xor
push
subb
inc
idivb
jecxz
cmpsl
and
divl
mov
cltd
sbb
out
iret
mov
or
out
repz
mov
fdivrs
jp
dec
or
int
fstp
sub
or
mov
test
and
outsl
ja
xchg
inc
push
sub
sbb
jbe
loop
push
xlat
sub
rorl
mov
pop
inc
dec
shll
gs
dec
sahf
shlb
xchg
pop
shlb
cmpsl
xor
push
mov
iret
pusha
sub
fidivs
mov
adc
adc
test
nop
into
xchg
pop
mov
call
call
xor
add
das
ret
adc
shrb
ds
push
in
mov
test
adc
xor
cld
int
inc
mov
push
mov
cltd
jo
xor
jecxz
adc
xchg
les
dec
jno
jecxz
cli
nop
jmp
imul
mov
cmpsb
decb
sub
pop
add
jbe
dec
mov
lods
cmc
fstpt
push
cmp
stos
and
cs
pop
movsl
mov
mov
les
dec
push
push
cmpsb
jl
iret
std
fistpll
cmp
lahf
arpl
sub
pinsrw
aam
movsb
stc
sub
leave
or
sahf
sbb
mov
iret
test
and
rcl
jne
lock
les
xor
idivb
jmp
call
dec
arpl
aam
jg
icebp
mov
push
or
xor
jp
adc
jl
bound
xchg
adc
cmc
test
ret
sub
or
pop
cmpsl
lds
pushf
fisttpl
push
xchg
out
rorl
cmp
addr16
addr16
test
mov
inc
sbb
mov
xchg
rorl
xchg
sub
cmp
add
pop
mov
jmp
sub
sbb
pop
or
inc
ds
cmp
shrb
or
mov
adc
mov
push
xlat
and
xchg
fwait
rorl
mov
push
sbb
sarb
push
or
js
jo
mov
std
mov
cltd
outsl
jg
dec
push
mov
xlat
js
in
mov
inc
andb
cmpsb
fadds
xor
fwait
mov
mov
or
in
rorb
dec
mov
xchg
in
adc
mov
fs
jge
ds
jecxz
mov
lret
inc
subl
adc
shlb
negb
mov
mov
push
and
je
or
lret
xorl
stc
mov
or
and
loopne
cmc
pop
dec
xchg
add
movsb
mov
add
mov
lock
adc
sbb
mov
pushf
push
pop
int3
adc
lcall
dec
mov
add
les
in
shl
xor
pop
jmp
rcrb
jg
gs
ret
mov
arpl
js
dec
sub
rolb
out
stos
add
lock
sahf
outsl
lock
into
add
add
clc
or
dec
pop
and
mov
adc
add
sti
cmpsl
xor
pop
movsb
stos
xchg
repnz
and
lret
incb
popa
xchg
insl
pop
cmp
sub
in
loope
or
fdivr
jne
out
sarl
mov
test
inc
loope
cltd
in
sub
bound
sbb
rolb
mov
pop
outsb
hlt
cmp
fmulp
lods
pop
in
fisttps
int
and
int
sub
fisttpl
mov
dec
xor
cmpsl
add
sub
sub
shrl
cs
lahf
xor
addb
jno
outsl
pop
mov
cmpsb
or
xchg
xchg
enter
pop
pop
cmp
xor
fstpt
mov
cwtl
or
fidivs
in
fistl
ljmp
xchg
js
sbb
std
sbb
jg
arpl
dec
dec
jb
adc
add
fadds
and
int
jb
fstl
xorb
mov
dec
mov
sarl
sub
mov
mov
les
ficoml
mov
xor
xchg
sbb
outsl
popa
or
iret
cltd
or
inc
or
add
push
into
mov
mov
ja
fadds
jge
dec
ds
test
out
mov
es
sahf
fdivl
out
cmp
cwtl
pop
dec
mov
mov
in
stc
mov
in
ss
mov
jno
arpl
addr16
dec
and
incl
rorl
push
insl
int
jle
mov
scas
adcl
fldl
xchg
aad
jmp
mov
dec
cmc
mov
cmpsl
xlat
outsl
je
subl
cmp
std
js
adc
fwait
arpl
push
cli
nop
mov
jno
mov
int3
push
fisttpl
in
or
sbb
dec
sbb
mov
pop
sbb
leave
dec
xchg
adc
js
push
push
cmp
mov
pop
xor
jae
rcr
fstps
mov
fadds
int
jne
jbe
xor
lret
js
sub
ja
sahf
inc
or
stos
or
xchg
movsb
ret
ds
clc
push
push
in
add
add
push
scas
into
lods
and
in
pop
adc
imul
mov
rorl
fwait
pop
add
movsl
xor
push
scas
mov
push
push
repz
ljmp
test
and
cwtl
repnz
mov
ss
xor
lea
push
cs
add
xchg
lods
jmp
inc
xchg
cmp
mov
shll
cmc
das
lea
xchg
gs
fidivs
int3
cmp
xor
adc
mov
push
push
cmp
adc
in
fsubs
lods
mov
imull
sbb
cmpsl
sub
jnp
and
jb
fistpll
das
fcmovu
cs
mov
xchg
jae
or
enter
mov
out
push
notb
sbb
hlt
int
push
fbld
pop
jge
or
or
dec
jo
inc
in
mov
and
into
cmpsl
pop
fcomp
xchg
lods
call
sbb
lds
cld
cmpsl
xlat
jmp
ficoms
sarl
inc
fidivrl
pop
jmp
and
aam
imul
leave
jp
inc
ret
pop
pop
dec
mov
insb
outsl
adc
aam
stc
adc
sub
pusha
js
cmpsb
call
inc
xor
adc
pushl
add
and
push
fstpt
pop
sbb
ret
outsb
js
cmp
movsb
lds
push
jge
loope
in
dec
mov
add
cmpsb
push
pop
mov
cltd
and
ret
xor
cld
data16
push
push
jl
pusha
lcall
out
in
jecxz
aas
ja
jl
or
lret
pop
ds
cli
fwait
cmp
sbb
jmp
mov
or
mov
xor
pop
and
mov
xchg
pop
insb
pop
dec
mov
xor
dec
test
adc
out
add
rolb
clc
pop
xor
repnz
jge
mov
in
mov
mov
xor
dec
lods
push
mov
imul
sbb
scas
xchg
add
jae
shrb
icebp
dec
push
sbb
xchg
daa
pop
aas
data16
ja
mov
js
pop
add
leave
scas
inc
je
cwtl
lcall
daa
cmp
icebp
cwtl
adc
dec
mov
cld
jae
sub
hlt
mov
sub
or
in
imul
xchg
aad
pop
inc
fsubrl
push
rorb
cld
lods
fsubl
push
mov
mov
push
out
push
push
adc
xor
adc
sub
inc
fists
jmp
es
pop
in
sbb
xor
push
lods
es
mov
push
lahf
jge
jp
outsb
testb
arpl
shlb
xchg
sti
repz
cs
push
xor
jno
ja
add
out
pop
push
fcmovne
subb
lods
adc
adc
stos
aad
mov
insb
dec
shl
push
pop
add
xchg
dec
pop
cmp
lds
call
fimull
or
popa
and
scas
int3
push
mov
shll
inc
in
adc
push
lea
mov
xchg
xor
and
scas
ja
xchg
fwait
inc
mov
and
fwait
insb
sub
imul
test
sub
adc
mov
in
mov
ja
stos
mov
outsb
lods
fdivrs
icebp
push
stos
aaa
cmpsb
jns
push
xor
iret
sub
cmp
pop
mov
sub
cmp
mov
mov
int
pop
insl
or
scas
lds
jg
dec
xchg
dec
repnz
sbb
into
lret
xchg
cld
cmp
divb
mov
out
testb
xchg
jbe
jg
or
scas
cld
ss
cltd
lds
mov
lock
sub
or
xchg
std
sub
out
ret
repnz
cmp
fistl
sub
push
or
add
jge
shl
not
add
jecxz
dec
dec
movsl
cmp
cmp
dec
xchg
mov
test
jle
jbe
add
mov
pop
xor
or
xchg
lds
jnp
sub
jmp
rcrl
pop
jg
xor
push
int3
push
lret
adc
jp
into
mov
cld
jbe
faddp
jb
scas
jne
lret
and
mov
push
daa
gs
jecxz
loope
xchg
xor
sub
aad
test
fldcw
pop
clc
push
loop
lret
insl
sets
jg
push
lock
nop
pushf
jne
pop
out
mov
in
hlt
out
sub
pusha
xor
adc
push
mov
mov
xor
mov
adc
sbb
xlat
or
js
inc
arpl
mov
jbe
scas
cmp
inc
push
inc
outsl
xchg
sbb
and
fwait
xchg
mov
incl
xor
scas
pop
je
fs
adc
dec
inc
in
mov
mov
roll
adc
shlb
and
push
push
and
insl
cmp
push
and
aam
sub
out
jmp
xor
jge
adc
xchg
sub
mov
mov
push
mov
pop
lds
inc
add
jmp
loopne
pop
imul
xor
xor
and
dec
fimuls
mov
and
les
cmp
rolb
faddp
push
ja
jb
aaa
push
pushl
cwtl
ret
and
out
fldl2e
fs
push
test
rcll
outsb
loope
movsb
push
mov
xchg
push
pushf
xor
shrb
cltd
jecxz
sbb
xchg
pop
xor
mov
das
dec
pushf
mov
or
jle
fwait
aam
mov
sbb
cmpsl
mov
inc
addr16
fisubrl
mov
out
icebp
adc
das
imul
and
add
add
jns
cmp
mov
rolb
shll
pop
pop
vmread
andb
into
jmp
sarl
filds
pop
mov
int
jmp
push
insl
mov
dec
xlat
pop
push
lods
xchg
shll
cmp
pop
xor
or
xor
sub
cmp
or
add
test
enter
repnz
push
mov
push
inc
fidivrl
cmp
cmp
scas
cld
call
push
push
aas
mov
test
jl
pop
jae
inc
or
test
sar
loopne
into
ret
inc
mov
jae
jecxz
xor
adc
lods
mov
nop
cmp
cmp
rcr
leave
push
jnp
pop
ja
mov
cltd
xor
out
shll
hlt
js
rorl
in
lods
out
popa
ss
stc
push
inc
xchg
rep
or
aad
push
stos
dec
jge
xchg
adc
insb
add
pop
das
sarb
or
jo
xchg
inc
lea
jecxz
ss
fimull
popf
jp
push
in
mov
sub
fwait
cmp
push
fcmovnbe
arpl
push
ss
mov
nop
je
nop
sahf
ret
dec
loop
xor
add
add
gs
or
mov
add
xchg
das
or
sub
aaa
mov
mov
imul
test
ret
pop
mov
inc
sub
adc
add
rcl
mov
ja
mov
mov
pop
jb
packuswb
push
int
push
mov
fdiv
subb
jns
adc
ret
xor
stos
das
mov
scas
daa
add
push
mov
dec
imul
int3
shll
es
pop
hlt
cmp
push
mov
or
scas
xor
and
inc
push
sbb
or
pop
mov
aad
xorl
adc
sub
pop
jmp
adc
and
les
aam
mov
or
mov
inc
aaa
into
xchg
mov
int
imul
lea
scas
cmp
sbb
iret
mov
ljmp
int3
mov
push
xchg
jg
cmp
mov
inc
push
fildll
pop
lods
jecxz
stc
das
cmpsl
cmp
jae
int3
sbb
jb
sbb
mov
mov
jge
mov
cld
pop
fdivrp
imul
clc
jae
jl
add
lret
jg
outsl
into
sub
adc
out
lea
movsb
es
fimuls
lret
mov
repnz
cmpsb
dec
mov
js
and
dec
test
in
in
jmp
outsb
stos
out
addr16
sbb
jbe
orl
cs
and
lea
push
scas
mov
push
mov
dec
out
cmp
repnz
mov
add
in
test
je
aaa
sbb
ret
hlt
push
xchg
mov
jg
add
scas
xchg
int
inc
scas
add
loopne
mov
in
push
lret
push
mov
mov
sub
into
push
add
xchg
and
jge
adc
mov
xchg
xorb
aam
dec
dec
iret
outsl
mov
ret
xchg
mov
push
push
loop
adc
xchg
imul
xchg
pop
fisubs
mov
and
push
mov
in
dec
mov
add
xor
cli
fstpl
scas
shrb
loop
sbbl
clc
mov
inc
es
dec
daa
or
add
lret
popa
repnz
mov
fsubrs
push
ja
dec
sub
inc
int
mov
xor
gs
lea
leave
imul
in
out
bndstx
mov
xor
popa
scas
xchg
xor
lahf
push
fwait
inc
jl
mov
pushf
sub
fildll
adc
mov
test
mov
cmp
cmpsl
mov
out
mov
add
pop
sub
cmpsl
enter
dec
test
add
cmp
test
lock
aad
cmpsl
fdiv
inc
je
lret
adc
addl
adc
adc
or
jbe
xchg
in
loop
inc
js
hlt
xchg
jl
pop
adc
mov
add
shlb
pop
aam
ljmp
pop
stos
test
bswap
incl
xchg
push
mov
inc
sub
adc
jns
adc
imul
push
sti
fistpll
jl
scas
add
mov
les
push
ljmp
xchg
xor
jge
mov
lahf
mov
icebp
xor
mov
jae
lret
lods
popf
fsubp
pop
cmpsb
mov
sbb
ficoms
mov
mov
repnz
popf
cmpsb
mov
sub
cs
push
outsb
std
cwtl
inc
sbb
cld
jb
lret
subb
leave
popa
sub
cmp
inc
dec
jmp
xor
out
and
insb
sbb
shrl
gs
and
cmpsl
adc
push
sub
ja
jmp
pop
shl
or
faddl
sbb
pop
shll
xchg
sbb
test
out
dec
adc
je
xor
xlat
mov
dec
adc
or
cmp
imul
add
mov
test
es
ljmp
mov
xchg
dec
jae
data16
call
jmp
mov
sub
fildll
or
jle
ret
pusha
cmp
inc
xchg
lret
cmc
push
mov
add
dec
insl
adc
pop
fstpl
in
mov
negl
and
hlt
xlat
dec
jecxz
or
jnp
cmp
fsubrp
icebp
mov
inc
sub
cmpsl
aaa
int
adc
adc
imul
dec
mov
movsl
clc
pop
cmp
jmp
mov
scas
push
arpl
and
das
filds
mov
and
dec
xlat
inc
or
pusha
rclb
icebp
adcl
pop
push
xchg
pop
or
lret
lock
daa
fcom
enter
bound
scas
and
fidivrs
hlt
pusha
xchg
inc
stos
adc
jnp
add
inc
icebp
mov
push
or
inc
inc
and
iret
jl
rorl
fisttpl
add
bound
scas
sarb
sti
and
sub
mov
addr16
icebp
push
in
xor
jl
fiaddl
ljmp
or
test
lods
pop
test
cwtl
adc
cwtl
jno
xchg
jecxz
add
push
cltd
cmpsb
mov
cltd
dec
int
jge
sbb
lea
stos
dec
test
shll
les
fcomps
mov
leave
stc
mov
pop
adc
inc
cmpsb
lret
mov
mov
mov
xorb
mul
sbb
das
cli
in
lcall
xor
cmp
ss
xor
xchg
add
adc
mov
push
mov
mov
dec
adc
mov
xchg
out
lret
mov
fsubr
xchg
test
sti
sbb
cmp
rolb
push
mov
enter
stos
nop
jle
inc
or
les
into
frstor
cli
jmp
and
jno
call
orb
loope
sti
cmp
jg
out
mov
mov
outsl
add
lret
inc
jp
push
cltd
mov
das
pusha
xchg
jns
lret
inc
jl
fs
stc
lret
sbb
mov
mov
push
jnp
dec
and
jg
nop
mov
mov
cmpsl
cmp
aaa
shlb
loop
mov
sub
lock
nopl
psubq
pop
cli
std
fs
mov
mov
mov
mov
xchg
or
jne
test
cmc
mov
xor
andb
popf
jmp
mov
pop
mov
mov
jmp
cwtl
sbb
mov
cmpsb
pop
fbld
push
das
xor
imulb
mov
xchg
mov
sub
mov
rcrb
outsl
mov
jns
fisttpl
cmp
adc
mov
bound
jnp
nop
sbb
mov
cmpsb
mov
sbb
jge
les
rol
stos
pop
insb
ss
jecxz
adc
cmpsl
jns
mov
out
sub
sbb
cmp
push
sub
xchg
mov
push
and
pop
pop
nop
mov
in
xchg
les
adc
mov
lret
stos
xchg
clc
adc
ds
test
add
jmp
fildll
cld
cmpsl
xchg
or
cld
xlat
jb
test
dec
ret
xor
jno
push
lret
and
out
sub
out
sarb
fisubl
lret
lahf
mov
push
cld
mov
stc
stos
les
dec
push
cmp
popa
cmp
inc
lods
push
rorl
cmp
fsubrl
add
or
je
movsl
cmp
inc
ret
dec
lock
or
mov
mov
push
xchg
fdiv
or
jmp
push
fwait
xor
lods
adc
faddl
ja
sub
and
or
lea
or
ret
int3
xor
arpl
sub
add
push
jbe
adc
push
inc
mov
sahf
test
pop
jb
sub
inc
mov
add
xor
outsl
jne
bound
sbb
enter
mov
cs
push
mov
xchg
mov
pop
mov
mov
add
pusha
jl
add
or
aas
test
xchg
test
and
jecxz
adc
cld
sbb
sarl
test
xchg
mov
or
mov
shl
mov
xor
jns
stc
addr16
push
outsb
and
add
fimuls
call
adc
dec
push
subb
mov
sti
das
out
sub
mov
lods
dec
rolb
ret
ja
sub
shrb
jne
add
mov
cltd
aad
ja
mov
xor
pusha
dec
jbe
sub
xchg
jmp
das
pop
shll
push
in
push
pop
stos
xorl
inc
jno
rcrl
jo
stos
lds
xor
dec
cld
shlb
pop
decb
icebp
lds
jns
out
rcll
mov
xor
and
js
mov
aad
dec
jo
sub
sub
lea
nop
cmp
mov
das
mov
int3
xchg
jge
and
mov
jle
andl
fcoml
mov
js
cmc
in
or
or
add
add
adc
ljmp
nop
add
sbb
mov
adc
loope
jge
fxch
add
sti
data16
shl
mov
js
fsubrp
cmp
inc
inc
push
push
cmpl
out
fdivrs
inc
out
arpl
cwtl
jp
mov
jne
dec
and
sbb
inc
xchg
jae
mov
mul
pop
mov
mov
mov
fwait
pop
out
lds
add
mov
push
nop
jne
xor
in
adc
pusha
test
or
fdivp
xchg
and
push
das
sub
mov
pop
inc
adc
call
mov
shlb
mov
pusha
lock
faddl
loop
leave
in
sarb
pop
divb
jne
xor
repnz
lret
mov
ficomps
jp
sbb
arpl
xchg
sub
mov
imul
jmp
pop
shl
movsl
test
jmp
mov
ja
shrb
pushf
imul
fcoms
mov
xchg
lods
push
movsb
in
fwait
fs
push
inc
add
jecxz
xor
xchg
popa
jne
pushf
repz
or
jle
repnz
ss
sbb
test
mov
sub
adc
cltd
adc
roll
addr16
bound
xchg
dec
xchg
mov
cmp
adc
xor
dec
testb
inc
test
push
sbb
ficomps
xchg
sar
lret
sub
aas
add
outsl
mov
xchg
pop
mov
inc
inc
ds
lret
cmp
fldt
mov
xor
stc
cltd
push
push
clc
sahf
adc
push
lock
jp
repnz
dec
mov
into
push
cmp
dec
rol
and
in
ja
or
lds
cld
fldcw
push
xorb
mov
add
jp
cmp
mov
and
pop
and
add
cmp
or
je
pop
adc
ret
clc
loopne
hlt
inc
push
sub
inc
or
mov
imul
mov
std
dec
sbb
test
add
out
pop
cmp
imul
xor
gs
nop
test
push
or
dec
je
xchg
daa
enter
shlb
sarl
lahf
sub
adc
aad
pushf
lea
or
cld
call
out
lret
push
mov
std
adcb
jmp
stos
in
sbb
pop
cltd
stos
push
daa
gs
scas
sbb
loop
pop
lret
fucomi
popf
inc
mov
jb
je
dec
mov
mov
mov
xor
test
cmpsl
inc
aad
ds
and
sub
cmp
into
xor
popa
stc
mov
and
inc
push
fwait
sbb
pop
adc
mov
xchg
in
js
ja
ss
test
cwtl
sub
pop
jnp
push
push
adc
cwtl
cmpb
jnp
mov
mov
test
and
mov
std
jb
sahf
pop
dec
mov
jecxz
cmp
pop
ss
pop
fdivrl
cltd
subb
inc
ret
ret
cli
repnz
mov
fisttps
mov
popf
inc
pop
jecxz
add
out
enter
repz
pop
push
add
mov
mov
rclb
fnstsw
stos
shl
adc
aad
fwait
add
sub
cmp
dec
lds
push
fsts
mov
xchg
gs
lods
add
pop
scas
out
inc
sub
enter
jbe
xor
xor
in
dec
mov
sbb
push
jae
dec
mov
jb
xchg
mov
inc
stc
xor
or
fsubrl
cltd
mov
and
fstps
adc
lods
inc
mov
in
mov
in
dec
xor
lahf
sbb
lock
inc
mov
adc
les
pop
lods
shll
jne
mov
cwtl
ljmp
jge
mov
sbb
ljmp
fiadds
jmp
scas
ja
ud1
cmpsb
test
dec
test
add
scas
clc
dec
or
hlt
adc
adc
ret
xor
popf
sub
dec
dec
popf
mov
push
adc
pop
mov
stos
pop
scas
pusha
mov
int3
ja
rcll
lock
mov
mov
cwtl
push
jns
mov
test
mov
cmp
sub
gs
aaa
stos
aad
sbb
stc
mov
jne
xchg
repnz
bound
mov
xor
mov
xor
aam
into
ds
add
icebp
lods
xchg
mov
pop
push
pop
mov
sub
and
inc
sub
pusha
pop
cmpsb
jl
sbb
aaa
push
aad
lods
negb
ljmp
cltd
push
pushl
jo
aas
ficoms
lret
xchg
inc
test
jge
pop
dec
push
or
jge
sahf
push
sub
xchg
rcll
inc
adc
sub
fwait
inc
jge
in
jae
je
repnz
mov
jp
pop
loope
out
xor
in
cmpsl
test
jp
pop
fwait
and
add
dec
ret
mov
fs
movsb
mov
inc
cmc
mov
push
sub
mov
inc
insl
adc
push
cmc
movsl
inc
sahf
stc
loop
and
fiaddl
dec
cmp
aas
test
rcll
inc
xchg
xor
pop
cmp
cmp
dec
loopne
and
pop
mov
jg
push
int
lock
xchg
ror
fmull
loop
cwtl
cmpsb
mov
mov
fisttpll
testb
adc
jb
sbb
dec
imul
sub
cmp
adc
out
mov
test
ficompl
bound
pusha
mov
sahf
push
loopne
push
adc
sahf
loope
imul
mov
stos
sbb
fimull
push
inc
mov
pop
cmp
cld
adc
mov
jp
inc
add
out
inc
mov
loopne
scas
movsb
dec
test
jae
or
push
xchg
lcall
loop
mov
push
lock
cmp
mov
outsb
cli
sbb
adc
push
xchg
mov
sub
adc
pop
je
cmp
dec
je
or
xor
push
xor
notb
xchg
adc
sub
sub
dec
mov
mov
sub
sub
fnstenv
cmp
and
mov
fs
push
jb
sub
ret
shrl
out
fwait
leave
leave
sbb
jmp
clc
xor
cmp
stos
mov
clc
mov
lods
xorl
negl
pop
xor
xchg
pop
aam
in
pusha
add
or
xchg
lcall
out
loop
popf
or
loopne
mov
and
shrl
jg
pop
dec
jno
or
flds
pop
and
mov
mov
mov
pop
rcll
test
jle
push
sti
sti
push
fwait
add
mov
shll
into
sub
inc
hlt
adc
push
dec
lea
or
xchg
aas
jbe
xlat
or
fstl
ret
clc
lret
test
cli
sarl
mov
adc
pushf
fwait
ss
add
jge
xchg
jge
jge
daa
dec
push
aam
jp
and
inc
lea
xchg
mov
fcomps
hlt
lds
inc
es
pushf
dec
lahf
inc
outsl
mov
enter
dec
add
mov
dec
das
add
xor
mov
das
xchg
or
cld
arpl
arpl
jge
aad
xor
test
ljmp
mov
test
leave
jns
sub
rcrl
stos
test
push
idivb
loopne
push
or
les
sub
in
push
sub
push
xchg
std
popa
lahf
leave
push
inc
notb
shll
jae
xchg
scas
and
xchg
jmp
ljmp
fadd
incb
lock
mov
sub
stc
loopne
sar
test
pmuludq
sti
push
pushf
and
out
out
ffree
ljmp
pop
push
pop
sbb
cmpb
ljmp
dec
sub
sub
dec
jle
and
lret
int3
cmp
xor
or
jge
mov
es
mov
imul
and
cmpsl
cltd
jmp
xchg
fstpt
dec
ficoml
out
jo
mov
dec
jo
movq
call
pusha
shll
out
or
nop
cwtl
imul
and
mov
push
mov
loope
adc
adc
cvtps2pi
imulb
and
rcr
jle
aam
gs
push
in
mov
add
xchg
or
shl
sbb
lcall
out
or
pop
mov
shr
fistps
out
jbe
out
adc
xor
jae
out
mov
push
mov
je
les
into
mov
icebp
xchg
add
inc
mov
pop
mov
push
mov
cmp
mov
out
sbb
lahf
inc
sti
or
mov
stos
mov
dec
ret
fcmovnb
jo
mov
mov
push
test
adc
rorl
lahf
subl
sahf
int3
insl
cmpsl
call
mov
das
outsl
inc
sub
dec
lea
and
cmpsl
push
push
jmp
sub
adc
outsb
fbld
jnp
sub
fildll
enter
xor
sub
insb
xchg
lea
hlt
jg
dec
mov
jp
mov
popa
lcall
roll
push
inc
cltd
movsl
into
mov
in
sub
sub
loope
cltd
inc
popf
loopne
inc
sub
test
scas
pop
pushf
sub
or
sarl
mov
sbb
cltd
sbb
mov
pop
andb
mov
sub
jae
lahf
jge
push
scas
push
test
aas
lcall
mov
je
push
cli
xchg
jnp
shrl
push
mov
mov
pop
lahf
mov
push
sbb
repnz
data16
aad
inc
rcrl
cmp
sub
loopne
jge
popfw
imul
jl
push
ret
dec
add
mov
das
ss
xchg
gs
dec
sbb
stos
inc
add
cmc
sub
pop
cmp
std
rclb
decl
xchg
sahf
ret
adc
pop
inc
sbb
adc
pop
jns
pushf
int
jae
xchg
xchg
sub
mov
and
dec
jg
leave
push
mov
movsl
orl
repz
cli
aas
cmp
cmp
push
insl
test
fidivs
aaa
and
push
movl
mov
ljmp
lcall
les
jle
ret
xchg
dec
loope
insl
add
sti
dec
addr16
mov
add
jmp
adc
data16
mov
or
push
xchg
sub
nop
dec
jb
data16
pusha
inc
out
stc
mov
adc
mov
push
jmp
mov
add
sbb
cltd
xchg
sbb
push
push
cmp
add
cmp
and
mov
mov
xchg
loopne
das
jbe
mov
xchg
cmp
movsl
inc
dec
repz
addr16
jno
mov
push
mov
cli
pop
imul
or
dec
sub
add
icebp
or
shrb
pop
cmp
adc
cmc
lds
movsb
xor
add
lds
popf
cmp
xor
lret
jb
sub
stc
jb
mov
jp
add
mov
jge
add
and
cld
gs
aad
call
cmpsl
adc
movsl
stos
and
fisubrs
cmp
sub
inc
cmp
xchg
test
fistl
dec
or
mov
push
fucomp
fs
add
sahf
sbb
push
test
dec
enter
test
pop
jae
insb
or
inc
mov
mov
cltd
rcrl
mov
mov
xchg
mov
jmp
movsl
sbb
in
xlat
adc
dec
jg
dec
repnz
mov
in
jne
loopne
cmpb
cwtl
push
fisubrl
imul
xor
inc
cli
scas
scas
mov
clc
xor
sbb
aas
mov
movsb
push
and
jecxz
cmp
iret
rorl
loop
das
pusha
ds
xor
bound
imul
gs
lds
mov
push
mov
movsl
dec
ds
imul
mov
pushf
call
in
xchg
repnz
shrb
cmp
lds
lds
movsb
or
outsl
add
outsl
push
insl
in
iretw
or
sub
shlb
cmpsb
xchg
daa
add
movsb
test
mov
in
mov
jmp
sbb
jne
xchg
out
ljmp
inc
popa
or
pushf
mov
mov
lret
pop
xchg
mov
sub
mov
test
mov
pop
xor
sbb
mov
flds
jmp
push
add
dec
dec
in
or
rcl
mov
es
sbb
cli
data16
xchg
fcomps
mov
popa
xlat
mov
mov
sbb
lahf
in
push
sarb
push
mov
xor
and
xchg
jg
imul
pop
insb
mov
inc
xchg
ljmp
div
mov
cmp
xchg
pusha
dec
and
loop
faddl
loop
sub
lods
lock
sub
sahf
mov
cmp
xlat
orb
jb
inc
or
pop
adc
addl
mov
pop
mov
shrl
lea
xor
nop
add
add
pop
das
call
fnstenv
jne
mov
mov
rcrl
sbb
js
push
cwtl
cmp
aam
aaa
push
cmp
and
inc
pop
sub
rol
sti
loop
fs
test
inc
mov
push
fstpl
jp
out
in
add
add
xchg
rcr
imul
inc
push
dec
jp
lret
mul
test
popl
stos
pop
jp
les
mov
lds
aaa
cmp
sub
dec
cmp
sub
add
fcmovb
arpl
push
push
and
push
lock
inc
sub
int
das
fdiv
cmc
xor
jmp
inc
pop
mov
mov
mov
outsl
push
mov
adc
ds
dec
fisttpl
addl
sbb
mov
sub
add
fmull
jg
push
cld
stos
mov
ds
pop
xchg
xlat
inc
cmp
xor
fdivrs
in
scas
rcr
pop
imul
test
test
andw
fcomip
inc
jnp
mov
ret
sub
mov
aam
sti
inc
pop
mov
mov
enter
ror
xchg
sbb
mov
fildll
pop
and
cmp
sub
divl
iret
dec
imulb
cs
loop
inc
jmp
push
les
in
filds
push
aam
mov
jnp
dec
test
push
les
cmpsl
repz
loope
mov
pop
sbb
push
adcb
dec
ja
lods
xchg
or
cwtl
lods
pop
mov
cltd
sub
and
push
mov
repnz
xchg
push
mov
xchg
bound
dec
add
mov
test
sub
insb
xchg
addb
and
je
addr16
mov
add
test
jge
sbb
ret
or
pop
das
cld
movsl
push
repnz
xor
jbe
sbb
pushf
lods
mov
mov
xchg
incl
es
mov
test
dec
jno
jmp
dec
or
out
mov
sub
ljmp
add
xor
call
jne
xchg
sub
into
mov
pop
add
movsb
adc
jae
sar
sbb
test
sbb
stos
clc
mov
bound
adc
pop
mov
pop
mov
cmpb
loope
sub
cs
cmp
test
add
imul
shll
jae
xchg
pop
jns
mov
add
jge
cmc
out
inc
stos
add
inc
add
call
test
pop
clc
jecxz
xchg
lret
dec
bound
shll
pop
imul
out
sbb
dec
mov
imulb
xor
push
cmpxchg
push
fcmovbe
loop
and
and
shl
add
ret
mov
fsubrl
stc
jp
aad
scas
push
xchg
xchg
xchg
jae
cs
ss
sub
stos
sub
std
xchg
xchg
fs
push
mov
shl
mov
cmp
sbb
aam
fdivl
cmp
pop
mov
call
pop
mov
inc
lcall
mov
inc
push
inc
add
cmc
out
das
jp
icebp
or
mov
es
mov
adc
ret
dec
xlat
jge
jo
push
rcll
pop
ds
jae
mov
cs
cmpsb
and
int
loopne
out
dec
jp
push
dec
stos
js
or
mov
pop
pop
mov
push
les
push
push
adc
lods
jne
dec
pop
out
push
mov
mov
ds
repnz
and
inc
mov
and
sub
je
xor
sub
jle
xchg
pop
adc
mov
adc
bound
lock
leave
inc
or
fnstcw
aam
mov
adc
rorb
jg
lret
mov
jbe
and
sbb
insl
pop
pop
shll
clc
xchg
mov
lahf
pop
je
push
fiaddl
fmuls
shll
popf
xchg
insb
pop
test
pop
xor
mov
insb
out
out
in
pop
sbb
sbb
ja
push
or
loope
xchg
mov
jns
out
dec
mov
dec
cmpsb
stc
repz
jne
stc
sub
mov
and
xchg
mov
xlat
cmc
mov
gs
in
xor
xor
cmpsl
add
loop
and
and
xchg
pop
jb
xchg
xor
add
aaa
cmp
outsb
fwait
xor
mov
jae
cmp
cmp
sbb
mov
decb
bound
das
sbb
push
xchg
dec
lods
out
sub
or
adc
daa
out
mov
nop
push
cmp
mov
dec
adc
or
mov
push
xor
xchg
push
mov
lcall
adc
cmpsl
dec
jg
lds
stc
push
mov
push
rcrl
popf
mov
in
lcall
sub
int3
xlat
xchg
xchg
sub
ret
jo
pop
cmp
in
xchg
add
pop
mov
inc
je
adc
pop
rorb
push
cli
call
pop
jns
movsb
jnp
dec
fcomi
jmp
test
fisubrl
fcompl
lods
mov
insb
std
or
push
jg
push
sarl
push
pop
jl
push
dec
fs
daa
xlat
xchg
pop
jno
sbb
repnz
fwait
cwtl
mov
loop
pop
cld
shl
xchg
sub
nop
fldt
pop
lea
xchg
dec
cmpsl
aam
sub
xor
mov
pop
pop
push
mov
fsubs
lds
ds
mov
test
leave
jb
xor
mov
mov
mov
inc
dec
and
fidivs
push
enter
call
pop
add
mov
ja
sarl
cmp
jns
mov
cmp
mov
insl
stos
repz
outsb
aad
rcl
ret
xchg
lcall
jb
hlt
outsb
lods
pusha
add
cmpsl
or
push
mov
cli
dec
nop
mov
test
ret
inc
dec
xor
push
cmp
les
xchg
add
xchg
mov
bound
cwtl
icebp
sbb
clc
fldenv
mov
pop
shlb
mov
inc
stos
lea
and
inc
mov
rcr
ljmp
dec
fbld
adc
shll
adc
and
bound
sahf
stos
call
cmp
cmp
aad
sbb
mov
ds
fildl
xchg
aaa
out
in
aad
xor
outsl
fisttps
mov
popa
aam
sbb
out
add
pop
pop
jmp
scas
adc
bound
ljmp
out
movsb
mov
sahf
jo
jp
push
mov
jns
loop
pop
jnp
add
pop
push
push
notb
js
mov
mov
dec
jae
push
cmc
xchg
cmp
inc
sbb
stc
adc
js
notl
fmull
sbb
inc
pushl
loop
stos
dec
dec
mov
lret
push
pop
push
out
movsb
dec
ss
data16
rorl
jo
sub
cmp
js
leave
adcb
jge
cmpsb
mov
dec
mov
aam
push
cmp
jp
dec
cmp
fs
adc
in
jno
lods
cmp
xchg
int
inc
dec
pop
enter
pop
pop
fadd
addr16
xchg
inc
outsl
fidivs
adc
cli
cwtl
xor
inc
mov
xor
sub
orb
into
sub
stos
and
fs
arpl
mov
jbe
dec
jnp
xlat
adc
push
iret
xorb
js
rorb
pop
dec
sahf
pushf
push
mov
and
insb
pop
fs
adc
int3
or
repz
pop
rcll
repz
mov
pop
or
test
xchg
mov
les
es
xor
aad
lods
ljmp
int3
push
stc
cmpl
xchg
add
jecxz
push
ret
cld
fisttpl
loopne
jmp
in
mov
jbe
jb
clc
lret
pushw
push
push
pop
repz
lds
sub
or
mov
push
and
mov
and
mov
xor
hlt
mov
adc
stos
shlb
pop
mov
mov
add
xchg
and
movsb
inc
ss
mov
stos
loopne
orb
mov
push
mov
adc
and
xchg
adc
in
sub
fsubrp
cmp
popa
cmp
stos
xchg
cltd
inc
cld
mov
lds
push
cld
xchg
add
adc
out
mov
js
test
cwtl
jb
sbb
repz
mov
jne
icebp
insl
push
lds
les
jae
cmc
aad
or
and
mov
mov
incl
mov
mov
pop
mov
ds
inc
stos
mov
lahf
xchg
mov
inc
jle
out
cld
js
adc
jae
add
sub
shll
xlat
sub
repz
push
adc
int
dec
mov
in
jg
xchg
lahf
out
cmp
divl
mov
xor
mov
mov
aam
add
push
hlt
add
lahf
daa
sub
sahf
xchg
sbb
sub
and
imul
out
xor
xchg
xor
mov
cmp
fs
stc
mov
cmp
mov
push
push
mov
sbb
sub
sbb
sub
imul
rcrl
idivl
mov
fldl
cmp
adc
add
or
inc
cs
sbb
xchg
lahf
xor
shrl
iret
adc
je
pusha
and
mov
cs
jbe
insb
cs
cmp
std
inc
sbb
xchg
xor
mov
mov
jnp
ja
leave
bound
adc
sbb
cmp
add
adc
test
mov
and
mov
scas
ds
or
mov
scas
jno
sub
and
cmp
cld
inc
mov
mov
and
push
cmp
xchg
je
cltd
sti
shl
cmovge
cmp
mov
out
rorb
mov
or
or
ss
xor
ss
ret
mov
rorb
inc
cltd
adc
roll
aad
inc
gs
or
imul
mov
outsb
cmc
clc
push
push
aaa
xor
inc
repz
inc
push
in
adc
mov
pop
std
test
lds
ret
ror
mov
sbb
push
xchg
push
dec
test
aaa
push
push
inc
mov
cli
ficomps
inc
jnp
or
push
sub
and
xchg
and
sahf
mov
int
sahf
paddsw
xor
fisubrl
fwait
or
aas
mov
stc
and
xor
jnp
lcall
mov
test
mov
inc
push
mov
loope
and
insb
cs
adc
iret
push
stc
push
push
sar
call
jae
icebp
jge
jnp
inc
movsb
or
call
flds
test
aas
or
jo
mov
adc
dec
cwtl
sub
xor
add
jle
sub
imul
cmp
fisttpll
sbb
stc
test
pop
and
pusha
adc
ja
cmc
movsl
pop
push
insb
push
xchg
cltd
out
inc
mov
xchg
into
xchg
imul
or
mov
mov
rol
in
mov
inc
xchg
bound
daa
dec
xor
popf
int
mov
adc
cmc
and
xchg
mov
lret
mov
xchg
arpl
into
cmpb
push
cmp
dec
insl
mov
adc
out
xlat
movsl
shlb
in
inc
scas
add
fsubrp
pop
push
lods
into
pushf
call
inc
inc
xchg
add
es
hlt
and
cmpsl
or
inc
addr16
fisubl
jmp
into
out
dec
push
je
pop
inc
cld
aas
mov
fisttps
jmp
pop
dec
imul
ret
fnstcw
xor
nop
dec
pop
xorb
jge
arpl
dec
dec
mov
repz
sbb
repnz
or
rorl
mov
test
pop
outsb
cltd
pop
aaa
add
outsl
xchg
mov
sbb
add
xchg
dec
fsts
call
subl
test
add
push
sub
js
jge
incl
mov
gs
mov
jae
clc
fistpll
push
mov
xor
push
inc
cli
idivb
xchg
mov
stos
dec
enter
das
aam
out
movsl
push
inc
jge
in
lods
xchg
test
inc
sbb
repnz
inc
sahf
dec
outsb
jmp
mov
cmp
fsubr
mov
pop
or
sbb
adc
mov
call
ljmp
mov
daa
mov
adc
enter
int3
ret
adc
pop
loopne
cmc
aaa
xor
mov
adc
test
jbe
stc
xor
icebp
xchg
xchg
pushf
in
push
scas
nop
jmp
data16
jae
sub
and
mov
cmp
mov
aam
sbb
jle
jo
ret
push
adcb
adc
and
cmp
sahf
push
mov
lcall
mov
fdivl
out
push
mov
adc
pop
dec
sub
imul
sti
pop
sub
ds
cwtl
jbe
lods
in
xchg
mov
sub
add
fs
push
push
or
lock
adc
xlat
in
insl
imul
into
mov
xorb
pop
pop
pop
arpl
jnp
inc
pop
call
mov
adc
int
mov
hlt
sub
int3
test
jnp
loop
jae
push
cmp
push
icebp
mov
sub
mov
and
push
xor
gs
fwait
aam
stos
fdivrs
iret
dec
daa
imul
dec
aas
pop
mov
std
fwait
cmpl
mov
xor
push
adc
loop
dec
pop
xchg
jecxz
cmpsb
out
mov
stos
push
and
or
ficoml
sbb
mov
cmpb
loope
cmpsb
popa
ss
hlt
inc
iret
daa
dec
pop
dec
cltd
jg
dec
dec
mov
sub
mov
xor
push
cmpsl
xlat
imul
push
sub
sub
fildl
ds
push
sub
aas
out
dec
xchg
les
aad
cmp
loop
hlt
mov
enter
and
add
int3
lcall
adc
xor
pop
pop
inc
jae
fwait
gs
jae
xor
cmp
dec
push
mov
pop
imul
sbb
xchg
fisttpll
mov
out
add
icebp
mov
sarb
dec
ret
fnsave
push
sub
sub
gs
add
jge
ror
push
push
shll
scas
insb
rep
dec
mov
xchg
lods
xor
out
sub
xchg
mov
jno
loop
jbe
icebp
add
cmp
adc
fldenv
pop
mov
lods
sahf
and
cltd
loop
xor
stos
call
sarb
mov
xchg
xchg
and
arpl
ljmp
cmp
dec
push
fs
lret
inc
add
push
xor
scas
xor
nop
jle
test
pop
cltd
popa
sahf
push
mov
push
xchg
xor
stos
repnz
jns
cwtl
inc
jl
and
push
out
outsb
push
lock
or
sub
xchg
adc
pop
loop
fucomp
sub
lret
cltd
and
xchg
mov
jmp
repnz
scas
pop
subb
testl
add
and
and
push
popf
mov
ret
jge
or
inc
mov
mov
mov
mov
fsubrs
jae
sarb
mov
adc
xchg
mov
ds
adc
out
out
arpl
js
fnstsw
sbb
mov
jge
mov
aaa
inc
mov
sbb
stc
xchg
push
pop
push
mov
mov
sub
fwait
cmp
inc
ret
movl
mov
lahf
stos
push
das
fnsave
loopne
idivl
fidivs
fisubrl
sub
jle
fdivrs
push
sub
rol
inc
les
repz
mov
sbb
mov
lods
out
dec
imul
popa
decb
outsl
jg
pop
cmc
and
or
ja
movsb
push
push
push
jb
push
js
movsl
imul
int3
mov
pop
or
push
pop
mov
rolb
inc
dec
mov
shrl
push
inc
xchg
and
int3
popf
out
fsts
shlb
pusha
ja
aaa
popa
push
pop
inc
xor
add
mov
jno
or
std
rolb
adc
mov
dec
int3
or
adc
jne
fstps
popf
push
pop
sbb
das
cmp
ret
mov
adc
xor
movsl
mov
movsb
pusha
popf
jns
sub
lods
ret
inc
das
sbb
add
cmc
sbb
leave
outsb
cmp
inc
out
nop
aad
and
mov
orl
leave
lds
clc
jbe
mov
mov
sti
and
mov
push
fldl
leave
enter
mov
jb
mov
cmc
xor
rol
fcmove
inc
daa
or
xor
aaa
mov
popa
addb
xchg
push
rcrl
xor
adc
mov
inc
shr
inc
repnz
stos
or
mov
pop
push
mov
fildl
data16
loop
mov
mov
push
pop
aad
jns
and
dec
icebp
fnstenv
arpl
pop
or
ds
adc
cmp
push
sub
aad
lea
fists
std
or
leave
es
push
andl
push
xchg
xchg
loope
lds
jp
xor
sub
testl
cmp
push
jae
pusha
testl
adc
addb
cltd
jl
test
filds
scas
xchg
or
js
push
lret
xchg
mov
sbb
fistl
rolb
inc
testl
cld
lock
hlt
xlat
adc
dec
outsb
mov
add
and
mov
stos
xchg
lahf
loope
cmp
xor
sahf
sbb
fldcw
test
sbb
sbb
push
fs
add
and
cmp
add
adc
push
arpl
and
stc
cmp
push
inc
cmp
icebp
push
ficompl
fcomi
mov
lods
mov
and
aaa
dec
pop
xor
push
xor
out
negl
faddl
mov
add
in
sub
jbe
mov
lahf
fldt
jns
aam
add
outsb
dec
shll
mov
adcl
mov
addr16
xchg
std
push
dec
dec
xor
push
scas
push
mov
aad
xchg
in
mov
das
xor
pop
jp
mov
lret
fcom
add
push
cmp
jo
jge
int3
xchg
push
repz
cmpl
inc
mov
cmp
into
pop
inc
clc
cmp
jns
sbb
and
and
cmp
fwait
dec
sarb
clc
rclb
inc
clc
lods
repnz
push
out
mov
jns
adc
xabort
out
cmpsl
sbb
jnp
inc
subl
leave
jne
inc
addl
xchg
mov
test
in
xchg
mov
lahf
pop
push
push
enterw
or
xor
push
xor
pushf
out
int
cmp
es
mov
add
inc
jg
ds
incb
popa
sub
xorl
pop
imul
sub
cmp
mov
sbb
popf
mov
out
cli
sbb
aam
jbe
in
call
jp
rcrl
out
push
push
clc
out
icebp
jmp
rcrl
cld
ror
dec
js
pushf
dec
fs
mov
pop
scas
jno
jns
mov
xchg
into
out
sahf
jb
fistpl
int3
jo
push
sbb
orl
fidivrs
loopne
pop
fnstcw
insb
pop
fs
add
lea
sub
push
stos
in
xchg
movsb
outsl
mov
stos
popa
dec
add
rcrl
fwait
mov
fs
orl
pop
push
pusha
icebp
xor
lods
pop
dec
insb
rcrb
xchg
imul
mov
jp
leave
lods
or
test
mov
pop
outsl
dec
sub
xor
xor
add
mov
or
or
adc
data16
add
repnz
or
cltd
cmp
push
je
xor
dec
aaa
and
out
lea
inc
adc
or
int3
sub
mov
ds
mov
bound
adc
sub
and
aad
inc
adc
es
ja
xor
pop
loopne
aam
pop
sub
mov
jg
arpl
das
add
jb
dec
push
test
lods
fcomps
xchg
fs
stc
adc
or
mov
insl
stos
fdivrl
inc
jno
call
jmp
xchg
dec
xchg
in
cmc
mov
les
and
pop
imul
xor
test
adc
cli
nop
xorl
lods
sub
xor
cmp
lods
sub
test
dec
push
out
ss
push
cli
fxam
push
rol
aas
mov
mov
cmp
xchg
xchg
sub
movsl
ret
xor
mov
push
mov
fdivrl
mov
in
andl
das
and
loop
dec
lods
int
jmp
pop
push
pop
cmp
movsb
pop
ficompl
adc
repz
or
push
sub
jge
test
inc
ljmp
mul
jae
arpl
ja
nop
mov
push
mov
cld
cmp
jg
dec
scas
lock
imul
js
mov
jnp
sbb
xchg
data16
sbb
pxor
jno
mov
rcl
int3
data16
adc
das
cld
dec
jbe
rclb
mov
inc
cmp
dec
lock
mov
lea
adc
dec
pushf
inc
add
mov
mov
loop
jmp
dec
adc
aas
pop
scas
aas
ja
and
xor
sub
ret
in
add
lods
clc
pop
fstps
and
repz
sub
or
mov
fs
mov
sub
xchg
int
clc
or
inc
fidivl
mov
inc
mov
or
out
nop
mov
idivl
and
inc
cmpsb
pop
adc
popa
push
jg
xor
pop
mov
and
hlt
aad
shlb
ds
jge
mov
and
das
jns
lds
ljmp
lods
xor
adc
imul
or
jmp
in
and
mov
sub
flds
cmp
inc
jno
sub
mov
scas
cmp
mov
add
adc
mov
push
push
jns
fildll
dec
sahf
ficomps
and
mov
ja
imul
adc
jno
sbb
leave
test
add
sbb
popa
stc
aam
jbe
push
jl
dec
fwait
imul
dec
mov
shl
mov
outsl
lods
cmp
inc
iret
repz
xchg
out
aad
ja
mov
pop
inc
mov
jbe
faddp
add
sub
enter
sub
xchg
and
jl
addl
pop
movsb
xchg
dec
add
or
lcall
mov
insl
aam
xor
test
xchg
adc
dec
lahf
xchg
daa
and
sub
xor
mov
mov
cmp
or
mov
stc
push
xor
rcl
ds
leave
cmp
sbb
mov
aas
fdivp
inc
cmp
sub
ret
and
fcompl
add
scas
lock
adcb
inc
add
ret
dec
es
jbe
jmp
cmp
aam
in
pop
pop
sbb
adc
lcall
pop
jge
scas
xor
sar
int3
cmp
add
inc
adc
xchg
popa
sub
pop
adc
arpl
xchg
orb
inc
push
int3
fsubrp
popf
fimull
lcall
jle
rorl
stos
mov
pop
stos
sbb
ret
pop
pop
insl
inc
mov
jae
adc
push
lds
mov
fimuls
cli
js
lods
jnp
imul
mov
inc
mov
add
fs
test
lock
nop
mov
add
and
imull
mov
or
add
and
sub
pop
flds
push
dec
mov
sub
int3
cmc
stos
xorb
testl
cmp
scas
xorb
xor
repz
addb
inc
dec
loop
fucom
cli
mov
sub
lret
std
lods
ja
sbb
cld
dec
rorl
ljmp
or
pop
sti
fwait
inc
cmp
adc
xor
jg
insb
mov
loop
and
rcrb
sub
test
sbb
mov
rorb
lods
and
add
jns
loop
fistps
mov
movd
cmp
rorl
or
in
fdivs
pop
jl
int3
orl
fimuls
int
pop
movsl
lret
filds
sub
mov
jnp
insl
ss
mov
mov
outsb
lcall
fsubrs
pop
faddl
fcomps
push
dec
in
mov
movsb
fwait
call
fs
stos
jae
bound
sbbl
mov
mov
pop
cmp
imul
mov
ret
and
std
mov
fs
sub
out
mov
rclb
in
mov
adc
aam
mov
andb
nop
and
xchg
xor
pop
out
shl
fmull
mov
sub
aas
add
in
push
in
fcmovnb
jmp
loopne
mov
pop
mov
jle
incb
fcomps
or
xor
sahf
mov
mov
add
pop
xlat
jnp
pop
cmp
cwtl
sbb
mov
sbb
imul
mov
test
fdivrp
push
inc
movsb
movsb
lcall
sarb
cmp
lcall
mov
sbb
xchg
fwait
cmpb
aas
shl
cmp
stos
sbb
iret
out
cmp
popl
cmp
xor
je
insl
incl
outsb
fwait
cli
mov
ficoml
xor
out
push
and
cwtl
repnz
scas
pushf
xor
loope
xchg
mov
jle
adc
xor
in
dec
mov
pop
or
test
pusha
jns
add
lods
and
test
aad
aam
push
loope
push
div
notb
or
push
cwtl
test
adc
sub
add
xchg
sbb
mov
adc
inc
xor
inc
lea
push
movaps
loopne
mov
std
aam
out
pop
inc
mov
out
rolb
sbb
mov
aam
mov
xchg
je
pop
scas
ret
xor
or
fdivrs
xchg
and
mull
test
lret
aam
fs
addr16
rcl
jno
cmp
ja
mov
lods
in
jp
and
into
loopne
jge
cli
ror
aas
nop
push
imul
scas
jmp
imul
dec
fwait
test
jge
add
clc
sub
addb
hlt
pop
pop
enter
or
jbe
sarb
rorb
mov
aam
inc
repz
fadds
mov
sub
push
hlt
jb
dec
ret
icebp
pop
inc
js
adc
mov
mull
xor
sti
mov
xchg
add
lea
pop
push
push
and
scas
shr
cmp
sbb
xchg
test
shll
mov
bound
adc
mov
mov
jne
pop
sub
in
dec
and
ret
adc
push
jle
icebp
pop
clc
call
push
sub
leave
dec
push
arpl
inc
jnp
fiadds
out
mov
loope
push
sub
fwait
and
inc
fdivrp
rcrb
adcb
dec
and
into
mov
jmp
push
inc
dec
inc
sbb
xchg
sub
jl
cmpsb
add
test
jl
xchg
fdivl
inc
mov
xor
rcrb
into
sar
dec
mov
xchg
xor
cmpsb
fwait
pop
lcall
pop
jmp
pushf
mov
and
testw
mov
push
aam
cmp
mov
cmpsl
and
ds
outsb
addr16
push
jbe,pt
sub
cmp
fiadds
mov
sbbb
add
sbb
mov
in
stos
divb
in
pop
add
or
cwtl
push
mov
mov
mov
jo
addb
mov
fidivrl
cs
shl
inc
imul
xchg
movsb
cmpsl
addb
cmp
adc
rclb
dec
icebp
arpl
mov
xor
xchg
xchg
xor
call
mov
push
arpl
sbb
jg
jb
push
push
fdivl
pop
scas
fnstenv
ljmp
xor
stos
sub
sub
xor
and
jecxz
in
repnz
addr16
jmp
xlat
sub
mov
jae
and
dec
ret
aad
ret
sub
cltd
adc
adc
push
xor
data16
aas
ss
mov
sbb
xor
mov
cli
dec
mov
idivl
repnz
fldcw
xchg
test
les
out
call
mov
ja
aas
jp
xchg
imul
inc
jl
sub
add
adc
fwait
decl
jne
adc
lahf
aam
bound
adc
xor
es
mov
mov
enter
adc
pushl
iret
push
xchg
xchg
aad
add
add
fidivl
or
sbb
pop
sub
sbb
push
pop
inc
xchg
mov
mov
mov
dec
mov
push
iret
sbb
sub
sub
mov
inc
push
sahf
dec
lods
std
mov
inc
mov
testl
shrb
or
movsb
cmpsb
or
pushf
inc
pop
jne
sub
mov
out
loopne
jp
mov
add
mov
pop
mov
das
inc
addr16
adc
aam
stc
add
mov
lret
xchg
dec
push
xlat
push
enter
js
sbb
mov
lods
test
xor
dec
inc
sub
pushf
fs
push
inc
adc
push
lret
sbb
imull
sbb
shll
in
and
pusha
cmpsl
in
addl
daa
inc
cld
popl
inc
cwtl
insl
outsb
jp
ljmp
ds
sbb
imul
popa
mov
fdivrs
imul
push
ds
sub
divl
mov
xorb
ds
lock
and
std
sub
or
outsb
lods
repz
mov
insl
dec
sbb
xor
inc
push
sub
cmpsb
sbb
cld
rcl
mov
pop
ret
mov
mov
add
stos
add
movb
imul
shlb
test
and
cs
inc
push
loop,pt
fs
adcb
jecxz
mov
jae
repz
mov
imulb
adc
jbe
int3
stos
out
dec
shl
call
xor
mov
jl
xor
cmp
jne
add
imul
out
jp
dec
loope
insl
out
addr16
out
push
es
jge
jle
sbb
out
cli
adc
inc
cli
insl
jl
fldcw
add
repnz
imul
lods
and
add
clc
mov
clc
jbe
xor
mov
push
sub
or
adc
insb
jp
daa
outsb
cmp
pop
call
push
std
sbb
jl
mov
sbb
or
push
jne
ret
xor
and
fcoml
mov
into
mov
cmpsl
jb
add
dec
push
fistl
je
inc
pop
adc
and
xor
mov
outsl
out
and
mov
sarb
out
arpl
sahf
pop
inc
sbb
aaa
dec
fidivl
xchg
jbe
sub
outsb
cmp
mov
inc
push
out
call
add
mov
icebp
ljmp
inc
call
shr
call
inc
xchg
ja
and
mov
lret
insl
xor
sbb
push
adc
mov
clc
push
ss
inc
sub
mov
push
or
sub
inc
push
js
scas
fcoml
out
js
gs
mov
jg
and
stc
call
stos
inc
push
outsb
jp
wbinvd
stos
sub
stos
fwait
pop
subl
call
dec
lret
mov
notb
dec
push
je
stos
negb
std
mov
pop
lods
out
mov
bnd
add
xchg
mov
call
outsl
scas
ljmp
nop
icebp
jmp
add
xor
es
push
cmp
mov
idiv
cmpsb
inc
mov
push
push
movsl
inc
inc
mov
cs
sahf
pop
inc
push
inc
inc
popa
lahf
mov
xchg
jge
jle
mov
lods
push
pop
pop
gs
push
and
pop
push
test
in
cmp
lea
fnstenv
mov
lahf
xchg
cmc
sub
hlt
clc
arpl
add
aad
rcl
mov
imul
les
dec
push
xor
divb
outsl
xor
jmp
push
sbb
stos
stos
push
sub
inc
ficoml
dec
ljmp
sbb
data16
int3
xsha1
cmpsb
into
movsb
xchg
cmp
stos
xchg
jae
push
addb
stos
push
shr
ja
call
jno
pop
fwait
sub
mov
leave
mov
mov
scas
pop
pop
inc
mov
mov
les
clc
scas
lcall
add
pop
jb
roll
imul
jno
push
mov
jmp
incl
pop
mov
xor
mov
repz
mov
sahf
jmp
out
mov
aas
sbb
or
loope
xchg
mov
cmp
jmp
or
and
and
insl
lods
mov
xchg
push
lods
cli
lret
mov
inc
sti
pop
lret
xchg
pop
adc
jge
bndstx
jmp
xor
pop
pop
ret
xor
lods
xchg
xchg
mov
lret
fadds
pop
push
data16
xchg
in
clc
inc
fs
sub
lock
jge
jmp
cmp
sbb
shrb
aam
jmp
add
inc
mov
or
cmp
push
xor
aaa
fldcw
push
mov
xchg
decb
pop
shl
adc
inc
movsb
pop
test
or
and
sahf
arpl
inc
xor
je
ds
popa
mov
cltd
sub
jo
cmpsl
aad
push
add
test
push
rcr
add
cmp
mov
mov
mov
adc
test
fdivrp
bound
js
push
decb
repz
popf
pop
fdivs
jp
cmp
test
sbb
mov
sub
jno
hlt
test
jo
xchg
inc
aad
mov
xor
jecxz
lea
adc
mov
sahf
pop
inc
mov
adc
push
scas
mov
orb
test
bound
lock
mov
jge
mov
test
push
xor
repnz
add
cmp
push
lods
in
sub
pop
xor
cmpsl
mov
lods
add
mov
std
pop
jnp
and
cld
mov
pop
mov
cmp
and
clc
addr16
repz
iret
push
repz
mov
aam
push
xor
cld
js
fwait
push
sub
and
orl
jmp
imul
loope
lods
jge
pop
popf
jge
subb
push
jg
fidivrs
cmp
dec
das
pop
sahf
or
mov
je
ficomps
adc
inc
in
fimuls
jg
jge
outsl
xchg
or
jp
es
icebp
inc
jns
fs
add
repnz
dec
roll
adc
dec
add
fistpll
ja
sahf
mov
push
add
mov
int
sbb
lds
in
rcl
in
mov
imul
push
mov
mov
movsl
inc
and
ja
adc
or
mov
idiv
fucomp
and
aam
mov
mov
dec
mov
push
or
inc
or
mov
loop
mov
adc
xchg
dec
lea
adc
xor
mov
loop
mov
and
xchg
pop
int3
rclb
pusha
rcrl
and
sub
and
fcoml
shl
mov
mov
fsubl
or
dec
mov
pop
lret
je
push
lret
cmp
xchg
jmp
daa
push
and
mov
into
cmpsb
mov
pop
or
ds
imul
cld
inc
xor
test
push
je
lock
sbb
imul
aaa
dec
lcall
popf
inc
xor
mov
insb
dec
xchg
gs
daa
ret
jge
mov
pop
jmp
shl
dec
jle
cmpsb
and
adc
sub
aaa
mov
cmpsb
mov
loopne
jns
pop
jb
fsubrl
pop
mov
inc
jmp
in
arpl
add
pop
test
push
fsubrl
fists
or
daa
test
jle
in
jae
push
mov
add
sti
inc
or
push
fwait
xchg
dec
stos
out
sahf
dec
insl
jae
sbb
mov
lea
icebp
and
movsb
dec
cmp
add
and
ljmp
mov
push
sub
push
aam
adc
icebp
adc
pop
xor
and
je
sub
repnz
hlt
sub
ljmp
pop
xchg
scas
mov
xor
iret
shr
lock
jmp
js
sbb
jle
data16
fs
xchg
xchg
xor
icebp
cmp
mov
xchg
sub
gs
xchg
mov
stos
mov
stc
push
icebp
imul
push
push
loop
enter
jecxz
add
add
mov
mov
cmp
fdivl
rclb
sbb
jmp
add
ss
mov
adc
pop
in
xor
pop
jecxz
push
jae
mov
sbb
or
std
xor
loope
pop
xlat
popf
sbb
and
adc
xor
add
jno
add
out
fmull
mov
fidivrl
outsb
xchg
inc
aad
cwtl
movsl
fidivs
or
jl
test
arpl
std
icebp
cld
push
and
mov
add
sub
jae
cmp
add
dec
in
fistl
jo
lret
inc
orl
adc
filds
adc
int3
in
lret
in
inc
loopne
into
je
test
cmpsl
rclb
dec
test
idivb
test
cltd
stos
jae
jge
xchg
lea
mov
enter
bound
jle
rcrl
fistps
in
pop
arpl
pop
push
pop
shlb
xor
adc
xchg
out
sub
jl
jmp
insl
cmp
mov
fistl
inc
es
sub
sub
dec
xor
adc
cmp
xchg
daa
sub
and
jno
pop
out
add
mov
in
push
push
mov
push
in
aad
mov
ret
push
les
adc
adc
push
cmp
add
adc
fstpt
int3
ret
push
outsb
gs
mov
and
data16
sti
clc
mov
std
push
jne
pop
je
int3
inc
push
sbb
test
fidivrl
pop
out
inc
inc
test
orl
mov
outsl
adc
push
insb
push
mov
inc
clc
cmpsb
sti
loop
sub
sbb
andb
mov
lock
pop
push
dec
jle
std
int
sti
mov
mov
incl
pusha
mov
xor
sbbl
cmp
mov
xchg
mov
std
fs
or
push
icebp
clc
mov
fmull
dec
sbb
jmp
ret
fistpl
and
stc
adc
jmp
ljmp
sub
divl
testl
js
pop
into
mov
cmp
cmp
cmp
fsub
jnp
jg
in
add
fucom
clc
test
ss
ret
lret
jl
sub
dec
mov
push
lea
cltd
movsl
xor
sub
jg
xchg
cs
mov
outsl
mov
xchg
sub
cld
mov
test
cmp
mov
aaa
hlt
es
cmc
xor
ss
into
or
loop
rolb
lahf
lret
mov
stos
sbb
gs
test
fidivrl
rcl
xchg
push
lock
cmp
orl
xchg
nop
adc
test
jo
sub
mov
sbbl
movsl
fcmovnu
int
fcompl
aas
mov
mov
cmp
fimuls
cs
vpackssdw
cwtl
shlb
push
or
pushf
hlt
mov
scas
push
sti
sbb
xorl
lea
add
push
push
mov
xlat
xchg
arpl
outsb
adc
out
cmp
jbe
xor
push
push
cmpsb
mov
lcall
mov
imul
mov
movnti
adc
bound
stos
ret
mov
clc
imul
sbb
lods
xchg
arpl
and
sbb
cs
or
movb
mov
lret
adcl
ljmp
xchg
arpl
cmp
or
pop
stc
jnp
pop
mov
jnp
inc
mov
movsl
sbb
jne
outsb
nop
rcr
jg
jecxz
push
lret
adc
popa
xchg
add
sbb
sbb
dec
rorb
stos
cmp
lea
xor
sbb
lcall
fisttpll
sbb
inc
ljmp
and
mov
dec
sbb
rorb
jge
ja
sarb
mov
xchg
stos
and
or
ret
mov
pop
addr16
pushl
cmp
imul
pop
or
push
in
dec
or
pop
pop
dec
mov
sbb
in
jp
cltd
xor
scas
sub
mov
fnstenv
and
or
mov
insb
lahf
dec
arpl
push
adc
pusha
pop
pop
lea
ret
push
pop
iret
jl
inc
sti
lea
add
adc
outsl
shl
xchg
negl
inc
ret
or
lds
imul
stos
push
hlt
xor
jl
js
add
sahf
mov
push
push
out
mov
sub
js
and
cmp
sarl
push
cmp
mov
dec
fdivrl
icebp
pop
mov
aam
pop
dec
iret
je
push
scas
jle
sub
or
push
mov
in
jle
cmp
or
adc
clc
pop
sbb
cmpsl
or
aaa
imul
jno
js
mov
movsb
aaa
adc
ss
mov
push
fcmove
iret
dec
bound
or
cli
and
mov
cmpsb
mov
dec
movsl
adc
les
push
stos
jg
or
add
lods
call
xor
and
repz
inc
fs
sbb
mov
push
fnstsw
adc
test
aaa
stc
lcall
scas
xor
dec
or
loopne
fwait
cmp
jnp
xchg
js
push
and
sbb
mov
arpl
adc
cld
loop
push
or
stc
dec
jae
lret
xchg
jno
cmp
fxtract
jmp
mul
lret
in
pop
inc
mov
inc
and
incl
pop
jecxz
jle
lea
or
fiaddl
rolb
int3
cmpl
subl
xor
mov
inc
dec
lds
test
or
mov
pop
adc
or
rolb
les
push
ror
ret
stos
push
pop
xchg
psrlq
sahf
test
or
mov
pop
movsb
pop
outsb
add
fcompl
jno
jb
lods
add
push
fsubr
fcmovb
pop
xchg
or
inc
sahf
js
insb
jg
cli
ja
mov
mov
pop
rcr
ljmp
cmp
stc
setnp
int3
jne
push
jg
and
add
inc
into
and
scas
imul
xor
out
add
in
imul
adcl
es
aaa
mov
mov
cmp
js
or
shrl
lcall
out
dec
dec
leave
mov
jge
add
leave
arpl
mov
das
sbb
mov
sub
pop
dec
pop
mov
sahf
cmpsl
stos
mulb
mov
mov
adc
fadd
cwtl
int
out
pop
pop
cmp
or
push
mov
xor
orl
and
cmp
adc
cmp
add
mov
push
test
arpl
sbb
xor
cmp
jg
in
jo
test
jle
fildll
jb
and
inc
mov
pop
sub
adc
mov
mov
dec
lcall
sub
out
jae
clc
xchg
mov
out
mov
jle
mov
test
mov
xor
mov
and
aad
mov
sbb
ret
and
xchg
xchg
outsl
daa
jae
popa
repnz
add
fiadds
pop
xchg
in
dec
add
sub
jge
push
pop
and
jne
popa
subl
adc
push
sbb
inc
aas
push
jo
nop
jge
jecxz
sahf
bound
imull
test
faddl
rol
sub
fld
push
jp
push
es
mulb
std
add
pop
ret
test
mov
cmp
mov
xchg
insb
stos
out
sub
push
and
mov
and
das
and
les
pop
shlb
les
in
repz
jbe
pusha
dec
loope
xchg
mov
mov
xchg
insl
pop
cltd
cmpl
in
sbb
loopne
out
sti
shlb
or
lea
cmp
push
lcall
lret
push
adcl
sahf
jb
aam
and
sbb
rcrb
mov
adc
jp
stc
testl
shl
xchg
idiv
mov
adc
cmp
ret
fwait
mov
or
jge
dec
ljmp
and
cmpl
push
sti
dec
in
insl
pop
add
test
sub
ss
mov
dec
fwait
mov
mov
in
dec
movsl
jle
mulb
mov
sbb
arpl
jmp
pop
pop
jmp
mov
out
sbbl
das
fisubl
adc
sbb
inc
fs
ret
ja
lcall
jae
inc
cmc
mov
mov
iret
lds
test
movsl
pop
xor
and
jno
mov
xchg
mov
cs
jl
scas
push
inc
jle
xchg
jo
repz
fs
stos
orl
adc
push
xor
jae
jmp
out
aas
cmp
jno
hlt
cltd
xchg
ret
stc
xchg
cmpl
jbe
in
pop
xor
push
loope
test
lock
cmp
loopne
into
push
outsb
repnz
jno
pop
cmpl
cmpl
int3
mov
insb
int3
cmp
adc
dec
sbb
mov
xlat
cmpsb
lret
out
insb
sub
adc
decb
out
idivb
sti
inc
mov
pop
aam
repz
xchg
out
mov
out
inc
lods
stc
mov
pop
inc
pusha
mov
push
sub
jle
xorl
pop
dec
in
rcrl
fisttpl
xchg
xchg
sahf
or
movsl
mov
sub
data16
lock
sbb
mov
sbb
xchg
pop
lock
mov
mov
insb
mov
ss
mov
cld
mov
or
push
sbb
rclb
popl
insb
jecxz
xor
test
ret
in
mov
iret
or
shl
mov
push
lahf
outsl
loop
xor
pop
inc
popf
pop
int
cwtl
push
in
aad
cli
push
repnz
and
cmp
icebp
push
lods
or
mov
and
or
dec
add
icebp
outsb
sub
aad
inc
sbb
push
adc
inc
repz
pop
and
mov
jl
xchg
mov
nop
in
insb
cmp
arpl
fucom
leave
push
stos
mov
cmp
mov
sbb
ficoms
popf
leave
not
xchg
pushf
xchg
mov
cs
dec
xlat
cmp
and
rcrl
push
les
subl
push
mov
push
stos
sarl
jecxz
aad
loopne
jbe
icebp
aad
cmpsb
mov
sbb
imulb
sub
adc
or
fdivs
andl
cmp
cmp
mov
sub
dec
or
xchg
mov
inc
loope
push
clc
push
pop
fs
in
repz
and
insl
jle
add
dec
pop
inc
pusha
cmpsl
in
nop
sbb
mov
emms
mov
faddp
rcll
mov
outsb
in
call
sub
sahf
cmpsl
or
push
cmp
xchg
jecxz
sub
mov
push
das
popa
sbb
sbb
pushf
xor
lods
hlt
pop
out
push
mov
mov
mov
add
add
xor
sbb
and
dec
daa
sub
mov
inc
fwait
lret
imul
arpl
jp
push
pop
pop
cmc
std
daa
movlps
js
mov
jmp
dec
loope
sub
push
in
out
lods
fildl
fidivrs
cmp
lcall
pop
xchg
sbb
push
into
test
pop
mov
test
inc
arpl
mov
pop
fdivr
pusha
cmpsb
test
add
imul
push
add
xchg
xchg
callw
or
fbld
pusha
xor
in
aaa
mov
xorb
pop
scas
cmp
cmpsl
dec
das
fdiv
mov
ss
scas
shll
fwait
cli
negb
dec
push
push
daa
or
sahf
sti
xor
imul
mov
mov
sub
das
in
dec
sub
or
out
nop
jp
xchg
pop
inc
inc
sbb
pop
fwait
xorl
lahf
pop
clc
xor
mov
cld
sub
push
jecxz
cmp
mov
pop
lret
dec
loopne
icebp
pusha
mov
mov
cld
cmp
xchg
test
enter
xor
cmpsl
loop
insl
test
mov
rcr
and
add
dec
inc
mov
add
cmp
mov
pop
cmp
mov
sbb
mov
ljmp
testl
mov
pop
xchg
add
daa
add
cmp
in
cld
pop
cmp
push
xchg
sbb
das
imul
jnp
pop
jns
xor
rcrl
subb
dec
into
mov
imul
cld
movsl
adc
ljmp
pop
mov
xlat
inc
mov
outsb
testb
mov
push
xlat
into
sti
mov
xor
sbb
aam
sbb
sub
inc
test
repnz
mov
sbb
cmpsb
lcall
xchg
xchg
std
int
push
data16
gs
adc
xchg
jle
xchg
xlat
decb
stos
cmp
int
cli
sbb
xlat
cmp
icebp
movsb
jle
scas
adc
push
and
add
leave
sub
test
sahf
xor
pushf
bnd
or
xor
mov
ljmp
mov
cltd
cmp
imul
sbb
pop
xchg
js
ds
in
dec
fistpl
and
loopne
sub
mov
fstl
mov
push
ds
lods
aas
adc
leave
sub
and
arpl
pop
or
jb
push
fwait
das
inc
test
loop
roll
scas
xchg
jb
push
scas
inc
cli
xlat
fsubrl
mov
dec
fnstsw
xor
cli
adc
mov
out
xchg
pop
dec
inc
lret
push
test
aam
test
jno
test
cmpb
push
jl
dec
sti
add
call
call
dec
ret
dec
imul
sub
sub
jo
adc
xchg
in
mov
xor
lcall
int
rcr
mov
sub
mov
sbb
push
out
mov
rclb
push
cmp
fstl
arpl
stos
dec
testb
fsqrt
push
pop
xchg
mov
lcall
shr
mov
aas
pop
test
clc
stos
call
fdivrl
adc
dec
out
mov
sbb
lcall
xchg
sub
outsl
lods
es
popf
decl
cltd
icebp
popf
cld
jno
xchg
lcall
jg
sub
jl
sahf
es
adc
sbb
xchg
fstps
cmp
push
pop
loope
addl
xor
popa
roll
jae
pop
jb
mov
sub
repz
mull
pusha
adc
sub
push
mov
and
rorb
call
stos
jecxz
push
mov
lock
ds
mov
aas
je
gs
mov
inc
ret
leave
testb
rcr
push
push
inc
mov
popa
sahf
dec
push
pop
mov
pop
mov
xchg
scas
ljmp
test
loop
testl
loope
hlt
nop
aam
inc
jns
sub
cmpsb
pop
pop
xchg
int3
leave
jge
cmpl
push
ficompl
imul
pushf
push
stc
fwait
lods
ljmp
jecxz
lods
dec
ret
cmpsb
sub
dec
inc
testb
pop
cmp
cmp
aam
in
push
pop
repz
jmp
cmpl
imull
add
call
add
mov
jo
jne
xchg
inc
mov
sbb
sbb
add
and
add
mov
push
in
lods
jno
inc
test
mov
sub
std
mov
xor
mov
icebp
mov
dec
jb
stos
add
add
fcom
movsb
xor
lahf
jge
enter
fbstp
js
jmp
ja
mov
mov
fildl
mov
mov
addb
inc
orl
pop
fs
xlat
jle
lods
mov
jb
cmp
add
push
dec
lahf
movsl
mov
aas
outsb
fld
ljmp
rcl
push
es
jge
inc
leave
push
inc
negb
sbb
insl
xor
pop
sub
sahf
or
cmp
push
adc
mov
aad
jmp
push
xor
loope
adc
mov
lcall
dec
sahf
push
xor
mov
rcr
sti
test
or
lock
orl
jae
sbb
mov
jb
mov
mov
add
push
mov
adc
fwait
jb
push
inc
push
mov
movsl
fcoml
adc
movsl
mov
xor
add
lods
popf
jns
fistpl
cld
in
stos
add
mov
daa
or
add
cltd
cmp
je
lock
cmc
das
mov
cmp
mov
rorb
mov
inc
and
push
mov
pop
sbb
dec
fisubrs
out
xlat
testb
sarl
jl
dec
mov
dec
dec
dec
jbe
scas
mov
push
stos
xchg
mov
xor
dec
inc
sbb
shrb
addr16
ss
lret
push
jmp
xchg
movsl
mov
out
out
arpl
aad
cld
push
xchg
fcomps
out
stos
and
jge
adc
lock
and
fistps
push
push
pushf
add
sub
imul
cmp
mov
dec
lds
adc
fstps
jl
mov
testl
sub
and
inc
push
dec
add
cpuid
push
ds
jne
cmp
call
mov
lods
mov
xor
mov
scas
fldl
mov
dec
add
hlt
mov
es
testl
and
das
push
ret
xchg
pop
lcall
test
inc
xchg
js
pop
mov
les
and
sbb
cmp
fsubrl
pop
aaa
pop
xchg
in
in
lods
jp
pop
dec
add
mov
imul
sbb
and
dec
push
jnp
into
out
cmc
jnp
or
add
add
mov
mov
ret
cmp
roll
mov
mov
pop
push
test
clc
inc
xor
je
outsl
lret
cwtl
or
pop
stos
fs
mov
or
and
and
mov
or
ljmp
adc
xor
sti
cmp
int3
mov
stos
ret
xlat
movups
sbbl
fcoml
aaa
test
mov
jne
and
mov
ret
xor
and
lds
dec
jbe
rorl
es
mov
pushf
enter
loop
pop
nop
pop
daa
outsb
mov
and
sahf
inc
mov
pop
sub
xchg
add
pop
xor
fistpl
divb
mov
mov
ffree
icebp
and
repz
bound
dec
and
mov
sbb
adc
aad
sbb
stos
into
pop
sub
imul
insl
mul
nop
fmuls
movsb
cmp
stc
inc
pop
sbb
jbe
or
fprem1
in
lods
sbb
cmp
aad
aaa
movsl
sbb
mov
stos
mov
cmp
adc
mov
push
aaa
mov
ljmp
shl
jl
movsb
aas
push
mov
aaa
push
pop
mov
mov
mov
adc
jle
adc
out
add
mov
leave
pop
push
xchg
push
lret
popa
push
jo
repnz
and
pop
enter
mov
sub
mov
call
push
cs
ja
mov
pushf
xor
pop
sub
shll
dec
xchg
loope
mov
lret
psubb
cmpsb
xchg
imul
in
cmc
push
stos
leave
sarl
das
psubsw
cmp
jae
lods
iret
inc
mov
mov
scas
xchg
mov
sbb
insl
jmp
pop
pop
pusha
je
in
mov
in
mov
cmpsl
and
adc
sbb
loop
xchg
fwait
push
mov
push
loope
jmp
loope
jns
nop
adc
cli
ljmp
xor
xchg
mov
and
in
pusha
push
std
in
push
pop
sub
cmp
out
mov
leave
js
inc
dec
icebp
mov
fs
jle
push
inc
inc
test
or
jecxz
dec
rorl
pop
ds
insb
dec
cwtl
jae
push
xchg
mov
mov
insb
pop
jne
pop
addr16
sub
and
pop
ficoms
pushf
pop
add
sub
subb
jae
leave
push
js
popf
addl
add
inc
mov
icebp
adc
adc
jmp
daa
pop
cmp
sub
loopne
aaa
cwtl
inc
aad
push
mov
mov
imul
pop
addl
pop
cmp
sub
popa
mov
dec
push
xchg
cmp
adc
hlt
dec
pusha
xchg
cmp
xchg
repnz
int
pop
dec
ret
mov
sub
test
inc
cli
and
pop
lret
test
mov
mov
and
flds
negl
or
sbb
out
popa
pop
imulb
ret
mov
rcrl
push
and
insl
jle
adc
or
cmp
add
outsl
cli
and
cmp
data16
pop
cmpsl
shrl
ljmp
pop
sbb
int3
lods
mov
mov
sbb
lea
nop
mov
xchg
mov
jne
iret
loop
ror
ss
sbb
repz
lcall
fwait
dec
repz
xor
out
arpl
xchg
inc
xor
dec
jmp
fucomip
push
es
fisubrl
mov
sub
push
add
add
rolb
sbb
adc
sbb
jge
leave
xor
jae
xor
insb
ss
ss
pushf
fwait
xchg
push
cld
adc
rcl
or
mov
dec
push
out
insl
mov
jmp
sbb
mov
movsl
jbe
cwtl
dec
mov
or
add
outsb
pop
inc
repnz
jl
mov
jecxz
test
and
push
dec
scas
mov
push
in
dec
mov
push
call
cmp
lds
lock
inc
shr
push
aaa
enter
out
gs
xchg
push
insl
stc
lret
inc
push
mov
pop
add
rcrl
lcall
push
sub
inc
das
dec
xchg
addr16
mov
sub
pop
das
cmp
scas
adc
and
out
nop
push
jns
jnp
insb
testb
lea
xor
cmp
ret
fldt
aas
dec
jae
iret
mov
xor
sub
fmul
add
mov
xchg
ror
dec
imul
or
xor
cmp
sti
pop
aas
ret
adc
dec
cld
cmp
xor
jns
imul
gs
sub
mov
xchg
pop
push
loope
fmuls
lcall
sub
addb
inc
sbb
das
jle
scas
add
jecxz
fldl
or
ret
das
test
sub
outsb
lahf
sbb
mov
dec
mov
cmp
mov
adc
jmp
mov
int
fdivs
mov
cmp
pop
aam
leave
ret
mov
mov
repz
inc
lret
mov
and
mov
mov
xor
mov
and
movsb
test
cwtl
imul
xor
fnstsw
xchg
and
inc
test
ss
mov
pop
cmc
out
test
aas
loope
mov
icebp
adc
leave
cli
cs
pop
lret
ret
adc
xchg
lock
aad
mov
cmp
fisubl
jnp
out
dec
ds
or
push
mov
shll
into
dec
idivb
jmp
fs
popa
flds
int
aam
and
and
xchg
inc
packssdw
call
xor
push
or
xchg
mov
sbb
cmp
xor
fs
lret
out
gs
outsl
lods
test
imulb
mov
xchg
jno
push
xor
out
mov
js
leave
lcall
in
push
ret
lods
dec
outsl
jae
hlt
std
lods
aas
daa
xchg
dec
scas
and
xchg
cmp
mov
nop
shl
inc
cmp
push
mov
into
sub
or
adc
and
push
out
fistps
xchg
je
jns
repnz
cs
add
addl
fwait
mov
arpl
repz
scas
dec
jns,pn
jo
cmp
and
jl
cli
mov
je
pop
xchg
loop
data16
and
rep
cmp
adc
or
sbb
mov
aam
icebp
mov
lret
cmpsb
sub
out
out
push
mov
push
mov
adc
push
adc
xor
ss
out
aam
inc
je
fstpl
mull
push
lcall
push
dec
clc
je
fsubs
pop
popl
cwtl
out
insb
pop
and
in
mov
mov
les
stos
pop
aad
nop
movsl
repnz
inc
jb
loope
push
imul
sbb
push
fstps
dec
mov
fstps
outsb
lahf
lret
jae
push
addr16
imul
test
xor
imul
in
lret
mov
lret
mov
lods
inc
ret
xchg
mov
mov
lods
test
add
cmp
pusha
cmp
sbb
ds
xchg
sub
push
mov
int
scas
test
outsb
dec
mov
loopne
pop
imul
std
pop
aam
mov
shr
insb
pop
stos
xchg
or
fidivrs
arpl
mov
cmp
in
repz
jle
fldenv
push
or
scas
je
pop
sbb
mov
dec
xchg
mov
jns
mov
imul
fimull
clc
add
lret
cmp
and
mov
cmp
sub
dec
jp
cmp
leave
popa
cltd
cmp
xchg
sbb
sbb
jge
test
sbb
lcall
xor
ja
xchg
push
jae
xchg
mov
xchg
sbb
sahf
fstpl
xor
sbb
pop
jecxz
popa
jns
mov
flds
push
aaa
xchg
cmpsl
in
xcrypt-cfb
cmpsl
movsb
adcb
mov
push
or
fistps
loope
aam
add
aam
jb
xchg
or
les
mov
mov
jnp
sahf
jl
enter
dec
ja
out
mov
lea
inc
aaa
inc
inc
jmp
je
mov
or
jnp
cmpsl
daa
in
dec
rcl
dec
daa
jno
fsts
in
out
out
jne
sbb
dec
adc
push
sub
sti
inc
xorb
sub
and
mov
popf
mov
lods
jecxz
inc
aas
mov
enter
in
lds
sbb
dec
into
inc
imul
inc
mov
mov
cmp
sbb
repnz
push
sbb
jo
inc
or
inc
jg
xor
out
sub
rcl
cltd
insb
xor
cmpsl
aaa
inc
in
mov
adc
inc
cmp
lock
sbb
cs
in
mov
sub
cmpsl
add
imulb
adc
jae
push
xor
cld
jl
test
dec
cmp
mov
jmp
push
sbb
stc
jmp
repz
xchg
jmp
fisttpl
dec
mov
gs
cmp
lcall
or
cmp
cwtl
inc
sub
jns
mov
sub
dec
icebp
addl
xchg
xor
sub
jns
add
cltd
fistl
adc
add
and
inc
or
mov
dec
imul
jge
fdivrl
mov
sub
pusha
pushf
imul
adc
adc
sub
jne
jbe
fwait
daa
negl
xchg
ficompl
mov
inc
js
cmc
mov
es
lods
inc
inc
add
loopne
adc
aaa
mov
xchg
je
sub
test
push
aad
nop
gs
ljmp
mov
push
cli
mov
pusha
mov
jnp
imull
in
imul
arpl
push
sbb
aaa
xchg
xchg
dec
push
jmp
outsb
adc
js
mov
arpl
dec
scas
lret
sub
push
lahf
cmp
je
icebp
push
into
push
je
leave
sahf
mov
mov
popf
stc
in
fldt
mov
pop
repz
cltd
xlat
cmpsb
dec
cmp
icebp
enter
enter
jge
movsb
and
popa
nop
icebp
cli
sbb
pop
push
repnz
mov
push
mov
sbb
jno
push
cli
xor
lods
fimull
pop
pop
push
xchg
insl
ss
movsl
in
outsl
loopne
lcall
xor
lods
pop
push
ljmp
lods
testl
ret
adc
rcrl
xor
mov
ja
add
jns
mov
adc
adc
bound
mov
mov
sbb
mov
jp
xor
faddl
repz
or
in
and
mov
sahf
iret
pop
inc
sahf
aaa
in
out
fwait
lret
jnp
jne
lds
inc
xchg
xor
xchg
pop
std
fdivs
lods
and
pop
mov
leave
shrb
mov
adcl
in
iret
js
insb
stos
out
xlat
jo
xor
dec
data16
test
outsl
pop
pop
adc
cs
xor
xchg
loop
cmpsb
lret
icebp
sbb
cmpsb
lret
lods
iret
das
iret
lcall
pop
and
jbe
xchg
xchg
pop
dec
iret
inc
push
bound
ja
pop
stos
cld
lcall
pop
in
rcr
and
leave
dec
cwtl
dec
out
pop
push
xor
out
and
push
jg
adc
add
jmp
mov
mov
jbe
jno
mov
clc
xor
ljmp
ror
stos
pop
sub
jbe
add
out
xor
jle
push
sarb
hlt
pusha
je
shlb
xchg
scas
xor
pop
or
call
leave
or
mov
mov
fisubrl
cld
dec
jmp
imul
push
sub
ljmp
decb
ja
xor
loope
icebp
pop
sbb
bound
xorl
ror
das
stos
mov
aam
and
inc
xor
or
mov
int3
lahf
jae
cmp
dec
ret
mov
sti
sar
xor
ds
mov
and
and
push
pop
inc
mov
jecxz
out
add
dec
sbb
in
or
pop
test
cmp
hlt
movntq
xchg
repz
movsb
enter
and
movsl
shlb
adc
add
adc
xchg
sbb
xchg
inc
mulb
pop
push
lods
adc
xor
loop
nop
sbb
push
xchg
aam
fcoml
pushf
out
std
xor
rcll
cmp
push
mov
add
std
or
mov
lcall
cwtl
lcall
inc
dec
insl
test
testb
cmc
sbb
sahf
lods
aas
inc
add
pushf
adc
xchg
imul
in
pop
int
fs
aaa
inc
stc
daa
xor
xchg
scas
jge
ret
lret
cmp
xor
popf
cmp
pop
lods
mov
xchg
xor
or
jbe
xchg
subb
test
faddl
jae
adc
xor
lock
mov
into
dec
das
add
cmpsb
dec
mov
inc
in
adc
lock
cltd
dec
mov
adc
pop
imul
mov
xor
lret
adc
data16
jge
inc
cli
jae
xor
pop
enter
popa
movsb
xor
rcr
fwait
hlt
adc
movsb
or
pop
stos
data16
lock
mov
jae
push
pop
int
cmp
and
sub
adc
xor
iret
sub
insl
out
ja
inc
insb
jb
or
ja
cmp
inc
jbe
sub
movsb
clc
mov
insb
cmpsl
pop
ljmp
rcrl
ret
bswap
arpl
loope
sbb
xchg
cwtl
and
sbb
aam
arpl
fistpll
shll
js
out
add
test
imul
cmc
jmp
jg
adc
popf
pop
inc
fbstp
mov
cwtl
data16
sbb
jae
mov
inc
pop
in
lock
movsb
dec
fisubrs
and
ret
mov
mov
mov
pop
xor
lahf
sub
pop
push
stos
xchg
loope
mov
and
sbb
add
xchg
or
push
add
and
pop
xchg
add
mov
lock
jmp
insb
out
rclb
hlt
clc
xor
lret
mov
mov
testb
push
adc
hlt
pop
test
mov
aaa
arpl
mov
jle
pop
cmpsb
loop
mov
add
and
ficomps
call
iret
test
cs
jp
xor
arpl
cmp
es
pop
mov
out
mov
bound
inc
mov
xchg
xchg
xchg
fists
incl
bound
loope
enter
or
cmpsl
out
xchg
mov
cmpb
xor
cli
or
jae
test
repz
outsl
lret
xor
xlat
push
imul
outsb
push
in
fildll
jp
dec
movsl
xor
std
mov
jnp
lcall
sub
dec
fidivl
xor
sbb
fmull
jmp
mov
xchg
jecxz
mov
jge
push
jno
aad
inc
push
ja
out
aas
mov
outsl
stos
mov
sub
mov
pop
jnp
inc
test
sub
sub
scas
stos
ja
sub
and
lret
loope
mov
jns
add
stos
lock
add
xor
imul
cs
jae
dec
test
lea
outsb
aaa
mov
data16
into
mov
ja
test
cmpsb
stos
loope
shl
outsl
mov
dec
pop
sahf
jp
loope
pop
das
lods
aaa
incl
xchg
push
mov
pop
and
out
orl
push
ds
mov
rclb
call
and
adc
daa
pop
pop
mov
repz
ficoml
ja
or
nop
popa
jecxz
lret
sbb
mov
xchg
xor
ret
jns
mov
pop
xchg
scas
or
mov
xor
xchg
ret
aas
jle
shrb
ljmp
fdivp
andl
push
aas
pushf
insl
psraw
jae,pn
adc
mov
into
test
xchg
out
rclb
push
test
jg
and
or
lock
mov
test
jb
sub
mov
xor
je
popa
in
push
jmp
movsl
inc
shll
xor
or
jle
add
std
ds
xor
inc
popa
adc
inc
add
jl
add
mov
test
sub
loope
or
or
idivl
mov
sti
xchg
pop
clc
mov
jl
pop
aaa
push
sub
fnstcw
xor
ljmp
jge
jbe
sub
mov
popf
or
fdivrl
adc
cmp
shll
dec
lret
add
cmp
lret
jge
lock
out
or
mov
push
shrb
out
loop
shll
fldl
sub
or
xchg
or
push
xorb
paddw
out
jae
aad
in
and
mov
testb
cmpsl
sub
stc
ds
stos
push
cmp
je
aas
inc
movb
fwait
pop
mov
imul
xor
or
adc
jmp
mov
push
or
jmp
push
cltd
xor
sbb
loop
jo
cwtl
outsl
pop
fdivrl
shll
inc
rcrb
push
cwtl
inc
mov
xbegin
addl
push
push
scas
gs
add
fiaddl
push
xor
xchg
rcrl
ds
shlb
cmp
add
and
pop
dec
add
out
lods
js
adc
push
xchg
add
cli
fisubrl
nop
loop
movsb
lock
test
loop
mov
add
mov
adc
std
daa
stc
push
sub
sbb
data16
hlt
dec
mov
or
sbb
mov
je
xchg
andb
push
push
add
ret
outsl
test
xor
lret
scas
mov
sbb
fisubl
add
decl
loopne
fidivs
daa
cmp
inc
scas
mov
into
mov
scas
cmp
int3
add
mul
xor
mov
add
lds
mov
pushf
xchg
out
mov
xor
push
pop
inc
test
es
cli
or
rclb
mov
out
fldt
pop
rcrl
xlat
leave
aaa
jl
ja
dec
inc
sahf
xchg
and
xchg
aaa
mov
dec
push
icebp
clc
add
les
inc
jmp
cli
arpl
cmp
inc
mov
test
pop
and
flds
mov
inc
xlat
cmp
jne
mov
pop
pop
inc
js
xchg
cmpsl
dec
push
addr16
sub
pop
jno
jbe
sar
mov
cltd
pop
ret
pop
les
cmpsb
jmp
push
xchg
or
shlb
sahf
fldenv
push
mov
insl
inc
xor
inc
repnz
mov
sar
sub
dec
divb
and
shr
lahf
or
loope
inc
das
dec
lcall
sub
outsb
cli
gs
loope
jae
outsb
out
pushf
xor
add
insb
adc
adc
xor
push
pop
cmc
push
or
mov
test
test
notl
adc
popa
dec
add
repz
sub
dec
jnp
clc
inc
test
jp
jle
pop
pop
aam
outsl
addr16
pop
insl
xchg
and
nop
dec
add
add
pop
cmp
int3
xor
xor
mov
or
popa
push
test
jns
mov
jmp
cmp
mov
rcrb
je
pop
dec
loop
aam
add
outsb
push
mov
push
mov
pushf
inc
sub
mov
jmp
shlb
aam
pop
adc
aad
test
mov
int3
lds
in
push
bound
cld
fcmovnb
insl
leave
jne
shlb
insl
adc
test
and
add
cwtl
mov
add
and
and
movsl
push
clc
cmp
mov
sbb
push
jb
xorb
std
lock
outsb
or
mov
dec
and
adc
arpl
or
jmp
xchg
dec
fcomps
into
adc
dec
es
sahf
cmp
gs
inc
or
repz
lock
sti
int3
into
push
loope
lock
and
push
jno
jae
and
cs
mov
and
js
push
or
sbb
jbe
leave
push
out
pop
aad
xor
jb
push
pop
stos
dec
sub
test
push
pop
cld
inc
cmp
fstpl
out
pop
jo
loope
insl
cli
mov
adc
test
xchg
iret
lahf
push
and
cs
jp
aaa
test
gs
cmp
lods
aas
shr
mov
aam
inc
outsb
jmp
mov
fsubs
mov
and
movsb
xlat
jbe
push
lods
xchg
int
lock
es
pop
add
adc
fsts
xchg
sbb
lds
loop
mov
dec
gs
cmp
sbb
push
mov
in
mov
jg
xor
movsb
fwait
sbb
pop
xchg
fidivs
outsl
loopne
jne
iret
repz
fldl
lods
pop
dec
and
adc
jle
cmp
mov
loopne
sub
jg
nop
dec
adc
in
outsl
or
pop
sub
inc
adc
fdivrs
test
and
mov
push
out
mov
loope
or
hlt
sahf
and
mov
das
adc
jmp
fdivl
out
or
dec
mov
sbb
les
push
psubq
mov
or
mov
dec
nop
call
xor
sub
adc
outsl
add
dec
push
roll
xchg
push
dec
dec
outsb
sub
jns
sahf
lret
mov
pusha
and
ja
rcll
scas
cmpsb
subl
push
xchg
mov
mov
test
lea
out
mov
sti
adc
aaa
and
add
or
nop
repnz
mov
jg
push
xchg
jbe
sub
or
int
mov
std
jb
pop
je
inc
mov
adc
pop
cwtl
in
sbbl
out
push
lods
fidivrl
cs
addl
jecxz
push
insl
or
xor
int3
pushf
cmpsb
or
ret
jg
inc
out
shrl
push
xor
arpl
jo
sahf
or
ret
mov
and
mov
std
push
fimull
call
aad
push
out
sarb
int
es
fsubrs
leave
insl
addr16
repz
dec
ret
ficoml
or
pop
shlb
and
push
pop
or
stc
mov
mov
sahf
jge
lds
or
inc
or
pop
in
push
sti
out
xor
ret
add
jmp
jnp
fwait
test
adc
fstl
push
stos
inc
jno
test
jnp
lret
leavew
insl
lea
idivl
dec
aaa
add
xchg
cld
shlb
xchg
es
mov
sbb
iret
insb
hlt
pop
lcall
int3
outsb
dec
das
orl
cmovp
sub
adc
jp
adc
adc
in
push
mov
loopne
jae
jb
arpl
gs
int
sbb
je
dec
lret
andb
push
iret
adc
inc
push
fisttpll
adc
jle
dec
xrelease
jnp
rorb
mov
jg
inc
and
hlt
mov
scas
insl
lds
hlt
dec
xor
jmp
and
pop
ljmp
push
mov
mov
mov
imul
xor
dec
popa
fs
xchg
cmp
arpl
stos
insb
inc
stos
lcall
adc
stos
jge
and
movsl
in
adc
outsb
push
push
jg
add
jg
ret
fld
popa
or
xlat
lea
mov
mov
cmp
cs
adc
mov
adc
jecxz
lds
mov
mov
fs
addr16
push
int3
je
andb
aaa
inc
inc
test
push
rorl
cli
push
fwait
cmpsb
cli
inc
xor
dec
sti
notb
out
adc
xchg
mov
lahf
adc
dec
xchg
rcl
or
sbb
lods
sarl
addr16
pop
aad
insb
xchg
jge,pt
jmp
push
mov
sti
sti
or
cmpb
es
xor
and
icebp
pop
imul
call
sarb
rcrl
test
aas
dec
and
jmp
xchg
bound
sbb
add
push
cmp
jbe
add
jmp
pushf
rclb
rcll
and
enter
fisubl
adc
sub
xchg
imul
lods
fwait
xor
daa
xchg
jmp
add
popa
inc
das
dec
jp
popl
or
mov
lret
cmp
insl
cs
mov
mov
daa
shl
mov
push
mov
stc
scas
sbb
xor
mov
push
xchg
sahf
mov
nop
jmp
sub
jp
arpl
mov
ds
inc
cs
sub
hlt
imul
mov
and
lret
mov
xor
pop
je
mov
shrb
psraw
inc
jl
loop
int
push
jge
sbb
lcall
jp
lahf
out
pop
adc
pop
andb
xchg
add
imul
mov
add
rcrl
mov
xchg
sub
rorl
pop
lret
or
sarb
scas
ja
push
in
adc
outsl
dec
insl
arpl
je
std
or
sbb
outsb
mov
mov
jae
icebp
mov
xchg
ljmp
mov
push
push
call
sub
repnz
movsb
imul
cmpsb
sub
in
add
jmp
lds
ds
test
add
ljmp
fisubs
push
stos
fbld
test
dec
xchg
das
adcl
sub
sbb
int3
shl
mov
and
pushf
cmpsl
sub
cmp
insb
out
sub
mov
loopne
test
mov
insb
add
dec
sti
adc
addl
negb
pop
mov
fucom
popa
cmp
pop
aas
xor
int3
out
push
cmp
stc
pop
inc
add
sub
add
ret
test
mov
mov
inc
repnz
xchg
jb
dec
fs
test
enter
lods
out
loope
mov
popa
pop
pop
cmp
adc
and
stos
ja
pop
in
imul
mov
xchg
mov
inc
ljmp
in
mov
jl
jmp
leave
out
push
lods
outsb
push
out
cld
adcb
aam
jno
cmc
ja
add
mov
or
mov
push
or
pop
adc
inc
xchg
mov
xor
sbb
jle
dec
dec
mov
out
mov
and
add
fbld
cmp
mov
orl
daa
int
and
jae
mov
mov
mov
mov
dec
cmp
jns
loop
sub
xor
dec
xchg
cmpsl
push
pusha
ljmp
repnz
iret
jnp
ret
nop
into
imul
sarb
sub
cli
pop
mov
les
mov
out
insl
out
scas
fwait
lahf
loope
adc
fdivs
push
dec
mov
push
andb
push
orl
lahf
lock
pop
sub
lock
out
in
xor
mov
adc
pop
stc
jo
enter
inc
inc
fwait
cmp
mov
mov
sub
jns
sub
insl
es
mov
mov
outsl
inc
outsb
mov
fiaddl
xor
push
push
pop
sbb
aaa
mov
sbbl
inc
mov
cmp
in
push
test
adc
lods
jno
iret
inc
lret
cmp
inc
neg
out
rcrb
lea
jne
scas
inc
inc
fldcw
inc
inc
add
jns
sti
inc
and
and
outsb
jmp
dec
out
sahf
out
or
push
or
inc
sbb
add
loopne
or
sub
xchg
sub
sti
mov
aaa
shrb
sub
cmc
mov
insb
in
add
pushf
data16
xchg
test
imul
cmpsl
ja
insl
sbb
ficoms
sbb
and
jmp
aas
ss
test
push
mov
pushf
js
mov
xchg
jge
or
enter
sbb
out
and
or
adc
push
adc
inc
inc
xchg
push
mov
push
mov
xchg
lock
mov
dec
dec
lods
dec
pop
test
aam
cmp
fldcw
cmpsb
and
sbb
scas
or
sbb
push
in
cmp
xor
or
dec
dec
test
fcmovne
pop
data16
pop
and
sbb
push
insl
xchg
jl
push
xor
lahf
or
xchg
pusha
pop
loopne
ljmp
inc
std
dec
sbb
xchg
rol
lods
xor
jge
inc
and
lcall
mov
orl
sahf
push
bound
push
xchg
iret
adc
je
xchg
rcll
cmp
lods
daa
jnp
mov
sbb
and
stc
mov
jge
in
nop
sub
cmpb
stc
fmull
push
int
bound
and
ret
adcb
cmp
jae
cld
loop
pop
lds
stos
test
mov
sub
gs
add
pusha
movsl
jmp
xor
lock
popa
dec
dec
mov
lods
sbb
mov
adc
add
xlat
cbtw
pushf
push
xchg
dec
repnz
cmp
jle
movsl
jo
call
dec
push
shll
push
xchg
push
adc
push
dec
js
cli
sbb
cmc
cmc
cmp
sub
add
xchg
mov
sub
repz
popa
test
mov
cld
mov
cs
sbb
jmp
dec
add
clc
daa
idiv
sbb
ss
jl
mov
data16
jp
jo
pop
scas
cltd
mov
es
fs
or
dec
mov
clts
test
add
adc
loopne
inc
aam
int3
mov
in
into
and
sub
inc
jp
mov
in
pop
leave
sub
fisubl
sarb
mov
stos
sub
dec
xchg
pushf
in
sub
sbb
or
add
xor
ret
fldl
mov
mov
pop
outsl
pop
in
add
test
pop
and
xchg
pop
adc
outsb
popa
jno
fistps
jae
je
adc
scas
sbb
lods
or
cmp
mov
ljmp
cmpsb
and
daa
scas
out
out
pusha
dec
dec
adc
not
in
popf
stc
dec
retw
inc
fcom
sahf
cmp
test
cmp
mov
adc
rolb
imul
test
push
aas
cmp
dec
sub
leave
jecxz
into
push
dec
or
mov
in
xchg
setno
call
mov
js
mov
add
jo
insl
pop
sti
or
push
push
negb
call
dec
sub
test
pop
ds
movsb
test
jg
xchg
mov
imul
mov
adc
rcr
or
mov
lret
popa
xor
mov
loopne
mov
jp
lahf
rorl
xchg
lods
jo
xchg
push
scas
gs
not
mov
xor
pop
shlb
rorl
test
jbe
sub
das
add
fcoml
and
insl
es
shrl
mov
mov
dec
jnp
mov
xor
rcrb
pop
pop
lahf
int3
jns
push
xor
jb
mov
cmpsb
sub
xlat
adc
xor
imul
mov
cmp
pusha
sbb
orl
mov
je
mov
stc
xor
or
arpl
sti
into
sbb
addl
mov
sub
ret
and
or
push
addr16
push
push
idiv
dec
adcl
dec
mov
inc
cmpsl
inc
push
les
sbb
push
cmpsl
lock
push
and
jl
aas
cwtl
mov
pop
pop
and
xor
mov
imul
pop
pop
aam
jle
mov
ds
lahf
push
jno
std
jge
mov
and
and
push
ret
dec
xor
push
in
mov
xchg
bound
xor
daa
loopne
inc
mov
aam
dec
in
lret
leavew
and
jae
lret
xchg
xor
push
lock
lock
lods
je
adc
les
adc
aad
mov
mov
lods
adc
loopew
jno
dec
xchg
imul
sub
in
mov
push
xchg
xor
push
push
mov
cli
inc
cld
xor
sti
and
dec
scas
fwait
mov
in
in
push
bound
lods
out
jp
jae
or
jae
push
sti
inc
sbb
mov
sub
jo
push
mov
push
cmp
out
sahf
dec
xor
int3
bound
xchg
enter
in
jp
test
sub
adc
das
cwtl
add
negl
imul
jae
cmp
adc
leave
ja
lret
fisttpl
cmp
popa
jecxz
out
hlt
jnp
clc
xchg
into
adc
adc
jl
inc
imul
xor
ss
inc
outsb
arpl
inc
add
cmpsb
and
int
sub
xchg
or
sbb
xchg
mov
xchg
cmpb
pop
mov
adc
or
pushf
add
pop
xchg
ds
mov
and
cli
sub
inc
mov
mov
xchg
mov
dec
xor
inc
and
mov
aaa
dec
sub
lods
dec
push
push
incl
and
cmpsl
mov
lcall
iret
push
mov
sub
adc
add
loopne
sub
xor
mov
loopne
pop
out
push
cs
push
xor
dec
jnp
scas
arpl
stos
movsl
pop
test
pop
add
repz
cmpsb
jns
stc
and
out
xlat
xchg
xor
jg
add
test
sub
loop
in
xor
aas
pmaddwd
xchg
lea
pop
jmp
push
sbb
lcall
lds
sti
repz
insl
enter
sbbb
mov
fucom
mov
icebp
add
outsb
jge
je
fs
push
push
and
or
lahf
sub
dec
push
into
imul
mov
call
adc
movsb
ud1
lahf
out
ljmp
rorb
mov
mov
mov
sub
mov
add
iret
movsl
dec
in
xor
adc
xchg
jle
push
pusha
daa
inc
sbb
lcall
add
popa
addr16
in
sbb
rcrl
repz
xchg
ret
out
out
mov
cmp
sbb
jmp
gs
pop
mov
movsl
mov
in
xchg
xchg
scas
pop
sub
dec
xor
inc
stos
xchg
sbb
jp
add
imul
jns
fs
mov
cmp
das
scas
enter
fmulp
in
cmp
xchg
fadd
add
xor
fs
shll
insb
pusha
xchg
xor
je
sti
mov
sub
loopne
cs
outsb
call
sbb
push
pushf
insl
into
jge
sbb
add
ficomps
sub
test
leave
adc
pop
sbb
stos
dec
pop
cmp
ret
repnz
sti
jnp
mov
bound
insb
push
ret
std
in
fwait
mov
aad
and
popf
data16
insl
loop
lahf
fldln2
adc
icebp
jge
popf
repnz
sub
sbb
mov
xchg
push
cmp
lcall
jne
imul
icebp
rcr
mov
and
push
dec
mov
mov
in
adc
mov
in
and
stos
cmp
rcrb
sarl
lods
or
call
sub
and
jmp
dec
xor
and
pusha
and
add
jae
lahf
push
mov
pop
jns
rcrb
jmp
inc
repnz
add
iret
stos
and
pop
and
movsb
rorl
and
dec
mov
inc
sbb
inc
es
scas
add
pop
inc
sub
mov
in
inc
or
daa
repnz
mov
push
xchg
jmp
pop
add
sarb
mov
cmp
arpl
adc
cmp
jg
jge
push
jecxz
add
mov
test
iret
lret
mov
xor
int
mov
fwait
dec
cli
out
push
aam
into
bnd
push
out
rclb
xor
jp
cli
sbb
add
fistpll
ja
xchg
out
xchg
jmp
sub
cwtl
push
ljmp
mov
lahf
jne
lret
xchg
jae
bnd
cmpsb
dec
and
add
insl
xlat
cmp
push
inc
or
mov
and
rcrb
fwait
xor
add
dec
cld
inc
mov
cmpb
and
stc
xor
push
mov
test
mov
int3
mov
cltd
sub
sbb
int3
pushf
fwait
das
lret
stc
push
sahf
repz
cmpsl
aaa
mov
popl
lret
push
fidivrs
push
lret
js
mov
sbb
jp
jmp
jb
les
data16
ficoml
inc
int
shl
negb
loopne
lahf
or
fsubl
sarl
addr16
inc
mov
out
mov
cmpsl
out
sub
add
xor
dec
push
lods
add
xchg
pusha
aaa
mov
push
sbb
stos
dec
ficoms
aaa
das
sbb
cld
adc
and
lret
pop
insb
cmc
pushf
jge
movsb
out
and
xchg
cli
cmp
push
push
mov
sub
aaa
mov
adc
cmc
sub
in
pop
shr
adc
and
sbb
sbb
cmp
mov
ss
cs
pop
sbb
adc
cmp
mull
pop
iret
sti
cmp
adc
jle
out
jecxz
dec
dec
and
jg
and
xchg
mov
rolb
inc
andl
jecxz
push
adc
mov
push
dec
sub
lods
cmpsl
ror
test
jb
imull
mov
add
xchg
jb
movsl
lahf
mov
cmc
fidivrl
arpl
test
faddl
and
xchg
jb
dec
mov
inc
scas
cmp
or
push
jp
ljmp
ljmp
stos
cmp
insb
jnp
push
sbb
int3
push
pop
cmp
jg
inc
adc
sbb
pop
mov
mov
pusha
sti
xor
rolb
push
add
aad
popf
roll
lcall
jg
jge
div
leave
jbe
sbb
adc
movsb
adc
and
test
mov
call
pop
pop
fisttpl
aad
pop
lret
inc
ljmp
jp
cmp
xchg
mov
cmp
mov
mov
mov
sub
dec
mov
dec
cs
int
jle
mov
das
or
fs
aad
mov
adc
test
cmp
xor
es
or
loop
adc
inc
xchg
negb
fsubrl
js
stos
mov
fs
sub
or
add
sub
fninit
testb
pop
mov
dec
and
ss
mov
pop
or
dec
xor
fildll
out
adc
test
inc
or
lock
xchg
inc
xlat
push
notb
push
lahf
outsl
loopne
dec
pop
in
das
mov
rcr
and
int
enter
push
mov
or
mov
xor
or
cli
pop
mov
or
in
insl
and
popa
ffree
and
out
adc
push
roll
into
mov
rol
lods
ds
adc
bound
not
push
icebp
jmp
sbb
mov
mov
in
push
push
icebp
les
fimull
pusha
cmpsl
sbb
stos
fwait
inc
cmpsl
push
cmp
lret
xchg
lds
enter
scas
cli
scas
mov
cmpsb
sub
pushf
sbb
cmp
scas
rcll
mov
pop
into
or
xchg
push
add
jl
xor
ljmp
loope
or
add
test
arpl
out
icebp
pop
int3
cmc
orl
jmp
and
gs
neg
xchg
lcall
mov
sub
fsubl
cmp
jmp
int
and
movsl
fimull
sbb
das
lock
jg
and
sbb
fsts
shlb
dec
test
sub
aad
cmpsb
push
sub
outsl
pushf
lahf
fdiv
cmc
inc
popl
insb
mov
rcll
lods
test
fsubl
xor
fists
dec
jge
sbb
fs
sbb
inc
rcrb
dec
mov
sub
iret
cmp
enter
data16
mov
lret
cmp
int
loope
je
out
imulb
add
mov
pop
movsl
sub
pop
test
iret
mov
test
popa
sbb
add
sub
mov
lock
mov
stos
inc
jns
xor
bnd
push
push
neg
lea
mov
dec
or
push
jmp
gs
push
aam
mov
les
sti
in
mov
and
notb
adc
repnz
nop
fwait
lea
and
mov
pusha
inc
out
add
or
loop
push
std
cmp
dec
and
test
and
xchg
ret
inc
nop
pop
and
sti
mov
jl
push
test
pop
cmpsl
xor
xlat
push
mov
iret
stc
movsb
sbb
xor
aam
arpl
adc
and
push
dec
decl
xchg
pop
sbb
dec
test
mov
xor
mov
in
push
pop
std
and
jecxz
dec
mov
or
scas
loopne
std
sub
pusha
sti
cmp
rclb
lods
in
and
fcmovu
rcr
stos
loope
scas
out
xor
cmp
push
cmpsb
sub
mov
dec
dec
xchg
push
lret
mov
jmp
pop
ljmp
cmpsb
sahf
xchg
aad
enter
test
mov
shrl
mov
sbb
push
daa
and
loopne
test
add
jge
fimull
mov
jo
and
xchg
mov
les
call
roll
sub
xchg
xor
pop
mov
in
mov
xchg
adc
das
lods
pushw
pusha
ret
push
or
loop
xor
xchg
enter
scas
pushf
pop
xchg
jae
or
arpl
adc
inc
test
jecxz
pop
movsb
loopne
sbb
sarl
enter
xchg
popl
xor
cmp
or
or
jns
rolb
jmp
mov
bound
push
js
idivb
cmc
dec
ljmp
push
jne
dec
in
add
jge
cmp
into
mov
add
xchg
jecxz
fimull
xchg
and
sub
xchg
and
jbe
mov
mov
test
int
stos
push
cmc
ficomps
lds
push
pop
sbb
jo
mov
push
mov
or
mov
fmul
lea
aas
ret
sahf
lret
sbb
jge
cld
jle
add
je
test
sti
xchg
rorl
dec
push
jne
push
cmp
push
stos
bound
push
add
dec
jo
push
xchg
mov
mov
sub
movsb
mov
sub
add
pop
add
or
xchg
push
test
pop
xchg
sub
movlps
add
leave
jo
sbb
rorl
adc
arpl
inc
dec
ffreep
jbe
movsb
push
js
sti
subb
sbbb
leave
shl
ljmp
pop
xchg
mov
pop
mov
sub
sbb
cmp
idivl
mov
pop
in
mov
cli
sti
icebp
xor
loopne
pop
addl
mov
or
push
and
or
stos
cmp
iret
imull
pop
mov
das
pusha
mov
push
arpl
hlt
and
scas
les
cmp
fwait
and
mov
dec
insl
xchg
incb
movsb
loope
and
cmp
push
daa
scas
mov
cmp
xor
sbb
xchg
push
jmp
loopne
jnp
cli
mov
ja
mov
pop
or
fs
mov
test
sub
push
hlt
inc
xor
dec
in
fistpl
rclb
jbe
and
and
jnp
lods
xor
cmpsb
mov
repnz
xchg
pop
shrl
fs
addr16
repz
push
cmp
test
ds
gs
ret
sbbl
int
and
or
sbb
jecxz
popf
lods
stc
add
test
or
loopne
push
mov
sbbb
and
lret
sbb
test
or
sub
sbbb
mov
mov
mov
mov
in
sbb
insb
ror
imul
mov
icebp
out
inc
cmc
mov
sahf
push
push
ljmp
xor
mov
sbb
mov
repz
xchg
scas
sub
xchg
fmul
test
fistps
cwtl
adc
dec
or
jg
jnp
js
push
enter
push
repz
inc
pop
pop
adc
out
inc
dec
rep
sub
sub
std
adc
dec
push
adc
xor
icebp
jp
xchg
sub
and
push
and
xchg
pop
adc
jmp
adc
sbb
mov
mov
jae
jbe
push
adc
imul
loopne
loope
ret
mov
xor
dec
mov
aam
sbb
pop
cs
lcall
andl
fwait
and
jp
lret
in
outsb
xchg
movsb
imul
scas
cmp
leave
and
fs
adc
pop
xchg
faddp
xor
push
notb
jns
cwtl
jae
xor
pop
shrb
insb
test
ja
pop
neg
sbb
cwtl
icebp
push
jb
adc
out
or
mov
and
xor
mov
pop
sub
push
popf
repz
insb
fistl
mov
jge
popa
mov
jae
jne
xlat
push
cs
and
add
ds
cs
or
cmp
mov
cltd
in
cwtl
ss
push
call
jns
lods
add
jl
dec
mov
mov
mov
sbb
pop
popf
xor
push
sbb
dec
inc
popa
fsubl
subb
sbb
testb
pop
aas
adc
adc
push
cmp
int3
mov
sub
mov
jne
xor
mov
xchg
mov
ljmp
and
mov
add
mov
insl
dec
mov
cltd
sarb
and
pop
pop
jns
mov
xchg
arpl
aaa
push
mov
jae
add
ret
sub
dec
fwait
push
add
adc
inc
push
inc
jmp
sub
gs
mov
js
call
inc
jg
in
sub
frstor
clc
and
jecxz
mov
xor
jne
pop
icebp
out
sub
scas
fidivl
push
nop
repz
leave
imul
mov
sbb
dec
mov
adc
stos
loopne
or
insl
movsb
or
mov
sbb
push
hlt
pop
mov
push
jae
or
cmp
xchg
push
dec
rclb
loop
data16
repz
mov
pusha
sbb
pop
int3
dec
push
jnp
mov
cmpsl
mov
fcomps
xchg
jae,pn
hlt
sbb
outsl
popf
adc
pop
dec
jmp
in
fildl
ja
and
xchg
xor
dec
inc
lds
cld
imul
call
ret
add
int3
mov
das
aam
mull
popa
mov
mov
lds
lds
addr16
cmp
mov
dec
mov
shlb
cld
sbb
cmp
mov
mov
out
cld
movsl
mov
js
jnp
or
dec
sub
call
mov
sbb
dec
mov
lock
jnp
arpl
cmp
push
incl
xor
aaa
push
cmp
mov
jp
inc
adc
xchg
jmp
les
mov
test
sub
and
in
inc
nop
call
pushf
repnz
loop,pn
gs
jb
pop
and
jnp
jp
js
inc
adc
push
xor
adc
xchg
movsb
jl
enter
sbb
push
xchg
arpl
pop
shlb
inc
rorl
mov
pop
jecxz
pusha
adc
mov
jmp
mov
pushf
xor
dec
xor
dec
and
repnz
cmp
dec
stos
pushf
fimull
in
loop
sbbb
mov
mov
jbe
sub
jnp
fadds
shrb
lock
jle
lods
insl
jge
dec
fisttpll
and
insb
cwtl
push
in
inc
xor
sbb
out
fsts
jg
lea
or
adc
loopne
xor
mov
lock
outsb
rcll
inc
xchg
fisttpl
shrl
in
imul
loope
ret
clc
mov
jb
shrl
or
dec
mov
iret
cmp
jg
inc
mov
cltd
in
jecxz
push
pop
fcomi
das
ds
and
add
shrl
push
scas
sub
pusha
fadds
and
dec
pop
js
xchg
jp
xchg
jle
test
mov
mov
lods
push
push
and
inc
es
mov
addr16
enter
mov
jp
mov
call
and
orb
push
mov
jp
aad
push
push
mov
xchg
test
mov
cmp
scas
in
xchg
movsl
ds
jne
out
mov
in
scas
sbb
fsubrs
inc
ja
adc
stos
xor
jle
jg
adc
xchg
jg
inc
inc
aad
hlt
jnp
jecxz
cmp
pop
loope
push
mov
dec
and
mov
xchg
push
sub
add
dec
push
cmc
or
ss
cmpsb
lods
mov
and
mov
xchg
rcrl
mov
andb
xor
das
mov
call
jo
fcoms
add
dec
inc
add
pop
xchg
or
aad
or
inc
sub
aam
xlat
js
les
pop
sahf
jl
jecxz
mov
pop
dec
cltd
jno
add
mov
add
mov
or
ds
test
and
ror
mov
shlb
xor
push
cmc
lods
dec
mov
or
xor
dec
jg
dec
cld
adcb
pushf
mov
lret
das
adc
xor
sbb
mov
push
movsb
xor
inc
int3
movsl
cli
xchg
dec
lea
add
inc
lcall
mov
inc
push
jno
mov
out
xor
sbb
leave
loope
movsb
jno
xchg
mov
jmp
fstpt
icebp
cmp
cli
mov
cltd
mov
xchg
lods
pop
mov
loopne
adc
dec
repnz
inc
jo
lret
mull
out
dec
ret
pop
or
jle
ja
imul
rorb
adc
repz
arpl
dec
dec
mov
scas
clc
pop
imulb
mov
mov
and
push
sbb
loop
scas
jae
jnp
push
dec
in
add
pop
and
setnp
pusha
sbbl
aaa
mov
out
stc
lcall
jb
shrb
mov
and
cmp
jge
mov
out
pop
push
mov
loope
mulb
xor
out
scas
inc
pop
test
lret
loopne
xchg
cmpsl
cmpl
add
and
ja
fs
pop
inc
ja
xor
lock
enter
mov
inc
pop
xchg
mov
shll
adc
xlat
mov
ret
xchg
inc
mov
test
iret
push
in
into
sbb
push
push
and
ja
imul
sbb
xchg
add
pop
sbb
pop
cs
lea
dec
jo
sbb
mov
fwait
es
je
dec
out
add
mov
lahf
insb
stc
mov
add
repz
mov
add
rcl
cmc
enter
cmp
cmp
mov
ret
flds
add
jmp
fdivs
pop
adcl
and
arpl
push
insl
xor
adc
lods
popf
pop
xor
cmc
inc
divb
or
xor
mov
shrb
shrb
and
fildl
das
mov
and
bound
int
mov
fsts
aaa
stc
fnstsw
sbbl
js
out
sub
stos
mov
mov
cmpsb
add
lret
mov
dec
cmp
push
or
mov
sahf
adc
push
lret
xor
inc
in
lcall
cmc
in
adc
push
or
add
subl
mov
push
sahf
aam
int
mov
jo
add
in
repnz
lret
mov
mov
popa
push
add
xchg
fdivrs
idivl
out
push
clc
insb
sbb
sbb
jb
mov
jl
addb
add
jl
mov
mov
adc
fs
adc
sub
mov
enter
xor
mov
lds
rorb
daa
and
lds
in
les
jno
scas
data16
test
pop
rcrb
mov
adc
clc
inc
push
dec
mov
inc
sbb
mov
push
mov
out
jae
decl
cltd
in
cmp
sub
lret
jne
push
jge
adcb
mov
repz
sbb
pusha
daa
inc
fstl
fcoms
mov
cltd
pop
pop
sbb
or
int3
add
cld
popa
mov
dec
add
push
push
xchg
sbb
inc
cmp
pop
pop
icebp
sub
mov
xchg
mov
sub
jns
jnp
movsl
push
in
addr16
or
sbb
push
mov
add
das
pop
push
mov
cwtl
jo
mov
mov
aaa
jne
or
push
repz
and
les
xor
dec
xchg
movsl
jp
sbb
sbb
mov
fmuls
fistpll
xlat
in
shlb
stos
aam
pop
out
sbbl
xchg
sbb
mov
sbb
mov
test
aas
fsubrl
sahf
or
cmpl
fwait
xor
mov
and
push
xor
popf
xchg
xchg
cmc
jno
mov
daa
dec
jno
call
push
lahf
outsl
aas
adc
mov
ljmp
call
shl
add
jle
adc
les
xchg
xchg
out
pop
pop
jnp
sub
jl
sbb
sub
mov
daa
mov
bound
xor
or
cld
jno
sub
std
mov
push
sbb
xchg
dec
push
les
push
cmp
cmpsl
and
aas
lahf
adc
jmp
xor
push
test
xchg
jge
pop
aaa
stc
mulb
lret
push
push
imul
cmc
sub
fs
leave
sbb
mov
dec
ret
push
ds
sbb
mov
mov
jne
out
into
outsb
adc
jns
fcmovnb
sbb
jge
xchg
daa
popf
mov
xor
xchg
cmpsl
mov
cld
repnz
jl
mov
mov
sub
xor
and
dec
xor
xchg
sbb
adc
scas
add
mov
push
jg
cmpsb
repz
loope
dec
in
pop
subb
mov
mov
sub
fcmovnu
mulb
lcall
xlat
xchg
cs
mov
stc
scas
imul
popf
fs
jno
mov
out
push
bound
fcompl
adcb
jns
mov
stos
mov
and
pop
lret
xchg
pop
cmp
fisttps
arpl
in
movsl
mov
sub
call
xor
jl
and
jbe
lock
and
loopne
fcmovnu
lret
add
xor
adc
pop
mov
in
pop
aas
outsl
or
add
in
clc
sbb
ljmp
aam
cmp
out
es
data16
nop
dec
mov
mov
sbb
add
bound
jo
adc
aas
adc
cmpsb
sbb
bound
inc
ficoms
adc
jno
cmpsl
ds
or
inc
xchg
sub
pushf
push
test
sbb
aas
loopne
in
mov
lock
lret
sarl
push
test
outsl
adc
push
jb
xchg
cmp
xchg
sbbl
jo
inc
roll
scas
in
stos
fwait
jae
or
mov
into
in
inc
repnz
lods
sub
push
sar
push
jb
mov
push
test
push
fisubs
or
aaa
cmp
or
sti
jge
aam
int3
hlt
sbb
pop
sub
or
adc
stc
mov
pop
shll
fcompl
mov
pcmpgtd
cld
test
sbb
jbe
xor
cmpsl
inc
test
sti
cmpsl
leave
fimull
xor
add
nop
repz
inc
negb
lods
aaa
push
xor
xor
jns
push
das
cld
add
add
lret
pop
sub
into
iret
sub
ljmp
inc
jl
xchg
pop
fildll
add
leave
mov
sbb
adc
add
jmp
aaa
xchg
cmp
mov
outsl
in
and
mov
cwtl
jge
lock
lcall
out
fbld
sub
test
mov
jno
jnp
inc
sahf
add
int
iret
push
je
xor
mov
gs
mov
push
shlb
addr16
call
adc
pop
pop
mov
dec
or
xor
mov
mov
xor
mov
sub
lea
and
adc
cmp
jbe
int
aaa
test
ret
sub
and
mov
les
test
xlat
test
lcall
aas
lods
or
daa
popa
mov
cld
sbb
sub
sti
push
mov
pushf
mov
cmp
rclb
mov
adc
mov
neg
push
sbb
aas
xchg
jle
mov
sbb
ja
cmp
and
sti
out
mov
push
sbb
or
mov
test
push
jne
sub
cltd
xor
mov
mov
xor
add
dec
jmp
pop
pop
dec
push
pop
mov
jbe
shlb
mov
int
jmp
jb
loop
fucomi
outsb
push
push
add
xor
nop
loope
inc
aaa
mov
inc
mov
pop
push
loopne
adc
jns
lds
lods
xchg
or
stc
push
insl
push
call
stos
in
pop
adcl
push
fbld
pop
dec
popa
imul
aas
xor
leave
adc
lods
sbb
ljmp
or
cmc
stos
in
fists
cli
test
mov
xchg
mov
aas
sti
cli
pop
mov
xchg
outsb
and
pop
shrb
sub
push
fstpl
mov
inc
jge
sub
js
adc
push
adc
mov
rclb
jnp
in
mov
movlps
imul
pushf
jae
ds
xor
xchg
pusha
outsb
daa
iret
mulb
pop
mov
psubw
xchg
out
out
mov
pusha
push
mov
lods
mov
pushf
addr16
cwtl
mov
out
lret
arpl
push
xchg
rcll
out
jp
inc
jle
imul
mov
dec
jmp
outsl
mov
or
mov
lods
sti
push
cld
sbb
mov
loop
les
cmp
jbe
mov
dec
ss
push
fistps
xchg
mov
dec
xor
fimuls
push
xor
lahf
out
andb
cmp
out
arpl
pusha
les
pushf
ret
and
pop
popa
in
xchg
sub
jne
mov
rorl
xchg
fwait
inc
int
xor
pop
popf
scas
jl
xor
jp
cli
pop
lds
leave
or
jmp
sahf
cli
mov
add
in
sti
pusha
icebp
inc
icebp
mov
leave
cmpsl
mov
cmp
mov
call
jmp
mov
das
imul
pop
push
sbb
fdivp
psrlq
movsb
mov
or
mov
rolb
push
in
jecxz
gs
cmp
push
shlb
sub
movsl
les
jp
xor
mov
push
push
and
pop
cmp
pop
mov
xor
push
negb
jnp
fisubl
lret
popf
mov
xor
sbb
jo
adc
popf
sti
fld
xor
popa
sub
js
fidivrl
rcll
hlt
test
xchg
nop
popa
rclb
cmp
add
iret
mov
bound
dec
pop
mov
mull
test
fdivl
lods
inc
dec
inc
sbb
sbb
push
pop
adc
repnz
push
or
inc
cmp
movsb
cwtl
push
fbstp
das
ja
dec
xor
imul
mov
js
nop
xor
mov
in
mov
in
daa
pop
imul
test
aas
sahf
push
push
sbb
jae
imul
data16
cmp
pop
xchg
push
add
mov
cmp
icebp
xor
mov
andb
sarb
dec
adc
sbb
clc
mov
push
jns
push
xchg
in
jnp
stc
shll
lods
mov
add
iret
sub
push
xchg
xchg
jno
pop
and
es
daa
cmp
mov
lret
mov
cmpsb
mov
lahf
mov
sub
cli
jns
inc
into
xor
orl
ljmp
adc
jb
sub
leavew
lcall
jmp
pusha
movsb
lods
scas
cmp
jge
sub
push
test
mov
sbb
mov
aad
int
out
in
add
data16
push
mov
jb
dec
inc
int
orl
mov
mov
aam
add
sbbb
inc
adc
pop
cld
and
jb
pop
push
adc
stos
cmp
adcb
push
loopne
xor
add
mov
jp
cli
mov
xorb
scas
mov
add
daa
aas
mov
jmp
subl
int3
add
ja
repz
mov
or
sar
jns
push
inc
pop
push
repnz
mov
imul
testl
jnp
lret
jne
mov
jg
push
xor
sbb
dec
xchg
nop
pop
cmc
orb
mov
outsl
mov
test
add
pop
and
pop
jp
push
shll
adc
loop
jmp
out
test
sub
lea
pushf
leave
aas
xlat
pop
aas
mov
adc
sbb
push
push
psllq
xlat
ljmp
inc
jne
xor
pop
dec
push
add
dec
cmp
mov
xchg
fadd
sbb
clc
sbb
fisttps
ljmp
movsl
sub
add
and
out
inc
push
arpl
pop
dec
cmp
push
call
and
xor
dec
mov
ljmp
xchg
jl
push
mov
dec
gs
jecxz
js
rclb
jmp
adcl
rclb
aam
pop
or
adc
mov
rcrb
sub
outsl
xor
sub
outsb
mov
lahf
fcomp
out
pushf
sti
lret
int3
cmc
call
aam
sti
mov
push
bound
xchg
out
stos
insb
mov
pop
add
ljmp
add
dec
inc
inc
imul
push
or
cmc
xor
xchg
out
mov
inc
mov
mov
lock
mov
ds
xchg
sub
repz
sbb
add
lret
lret
mov
push
mov
sti
xchg
mov
ficoml
adc
gs
enter
in
cmp
add
adc
add
addr16
scas
jne
cmp
insb
inc
dec
mov
lret
mov
in
jne
adc
addr16
dec
outsb
cmpsl
mov
aam
fwait
mov
popa
insb
pmaxsw
inc
popf
inc
push
or
aaa
adc
stc
cmp
add
pop
and
bound
movb
mov
cmpsl
stc
aam
jp
push
insl
dec
sbb
scas
mov
jmp
pop
rclb
scas
pusha
subb
test
pop
cmp
mov
stc
sbb
int3
xchg
sub
dec
inc
sahf
negb
out
push
je
sbb
xchg
imul
mov
lds
fdivp
icebp
push
inc
cmp
cmp
xchg
adc
leave
cmp
jb
mov
shll
arpl
shll
inc
rol
scas
cli
jg
push
fcomp
push
inc
jo
lret
sbb
push
loop
push
mov
ja
sub
lock
xchg
adc
sub
jno
pop
push
shll
popf
push
arpl
incb
loop
ss
packsswb
dec
push
fisttps
inc
xor
adc
ds
hlt
push
loope
sub
xor
stc
lcall
in
push
add
loopne
inc
jg
xchg
adc
jno
mov
push
mov
lods
push
dec
test
test
jnp
imul
jb
insb
dec
or
or
push
loopne
cmpsl
outsl
fisubrs
dec
aam
add
jnp
scas
pop
das
shll
sbb
jb
xchg
or
sub
jecxz
test
in
mov
mov
test
jne
test
aam
scas
mov
out
icebp
popf
xor
adc
and
push
jns
imul
push
mov
push
cmp
pop
mov
pop
ficoml
fcomp
or
add
jne
mov
and
sub
test
xchg
mov
or
and
sub
pop
xor
into
and
mov
add
pop
cmp
adc
idivl
pop
pop
in
repz
outsl
std
jae
add
jp
jnp
or
xchg
push
sbb
nop
cmp
loop
inc
out
push
xor
sub
cmp
mov
push
pop
lds
cmp
push
jno
ja
loope
pop
push
push
or
add
mov
mov
ret
jle
mov
pop
xchg
or
pusha
in
mov
shll
jl
mov
inc
leave
lock
outsl
mov
pop
xchg
clc
pop
das
mov
adc
pop
stos
lock
pop
mov
bound
ljmp
std
cmp
cmp
out
xor
xchg
sub
jmp
adc
mov
push
or
js
loop
insb
lea
mov
jnp
add
insl
out
push
test
or
cmp
xor
and
ja
hlt
mov
cltd
mov
shrl
lahf
xchg
test
push
mov
out
jp
dec
stos
cmp
add
xlat
iret
icebp
pusha
mov
in
mov
mov
add
xchg
jmp
lahf
popf
mov
jns,pn
test
xchg
sbb
popf
lret
in
mov
inc
xor
inc
pop
mov
enter
js
sti
mov
push
pop
adc
inc
mov
or
xor
pusha
and
jne
mov
cmpsl
jbe
jecxz
dec
jle
stos
out
xchg
adc
das
shrb
outsl
repnz
scas
int3
inc
dec
in
cli
jp
subb
movsl
push
xor
push
add
subl
jge
adc
mov
les
jno
sub
inc
dec
fidivl
jg
lods
jnp
xor
jno
repz
jnp
lret
bound
vcvtps2pd
ffree
add
stc
pop
mov
lret
cwtl
xchg
int3
sub
xor
xor
mov
sbb
out
adc
mov
aaa
pop
lods
ret
scas
add
inc
xchg
or
dec
enter
pop
mov
repnz
je
jmp
scas
lods
clc
sub
mov
sub
je
dec
add
lret
iret
and
inc
fisubl
loopne
push
sub
out
xchg
sahf
gs
inc
das
frstor
mov
dec
enter
sahf
lods
pop
and
stos
push
popa
mov
repz
out
cmc
cld
shll
frstor
fsubrl
sti
lods
lods
push
outsl
cltd
jb
stos
addr16
ret
xor
repnz
daa
lock
sub
mov
ficoml
and
out
cli
dec
mov
xchg
inc
fucomip
push
pop
bound
rorb
push
lods
sahf
andb
jle
data16
mov
lods
andb
xlat
popa
sbb
inc
mov
in
iret
or
mov
dec
xor
test
jmp
or
xor
fdivrl
nop
in
fs
mov
mov
adc
ds
fdivl
mov
jecxz
inc
sbb
fwait
ja
and
inc
mov
mov
xchg
push
cvtpi2ps
hlt
adcb
mov
cmp
jbe
jbe
ss
dec
jns
inc
ja
push
std
enter
imul
xchg
lcall
cmp
testb
stos
pop
mov
cmp
loop
xchg
pop
mov
mov
ret
out
sub
in
push
testl
inc
dec
movsb
outsl
jns
rol
xor
rol
out
out
dec
add
mov
shll
lret
fimuls
aam
outsl
or
sbb
cltd
gs
or
lods
xchg
mov
iret
xchg
dec
call
aas
xor
daa
mov
ret
and
fwait
pop
sbb
pminub
mov
inc
add
stos
jp
stos
push
mov
pop
in
mov
mov
xchg
jb
or
mov
ja
popa
jp
lods
out
stos
mov
stos
pop
adc
fnstenv
dec
gs
sbb
sub
repz
repz
fstpt
cmc
dec
pop
shrl
jle
lcall
pop
ret
outsb
mov
lods
hlt
dec
or
fistps
lods
mov
pop
push
into
xlat
mov
scas
push
insl
pop
sub
jmp
and
fnstcw
sub
dec
scas
daa
call
sub
sbb
insb
xchg
imull
test
add
mov
into
xorps
mov
mov
ret
mov
subb
ficoms
outsl
les
jae
sub
cld
pop
xor
sbb
mov
and
pop
jno
mov
mov
xchg
mull
fs
xchg
aad
int
mov
push
insl
mov
jge
pop
std
aaa
mov
cmp
aaa
cmp
shlb
push
das
pop
hlt
movsl
jl
xor
enter
jg
pushf
fbstp
adc
cs
sub
test
xchg
inc
push
or
inc
mov
movsl
push
mov
test
sbb
mov
fstl
out
mov
adc
enter
nopl
aas
fwait
jle
mov
push
cs
xor
dec
ret
inc
scas
mov
pop
mov
or
test
jo
lret
sbb
lret
movsl
jbe
outsl
fidivl
lcall
mov
or
inc
bnd
sbb
jno
push
scas
push
sub
sub
mov
aam
outsb
xchg
jnp
lods
aaa
add
pushf
aad
sbb
xchg
arpl
rorl
and
mov
in
xchg
aam
push
lcall
ja
into
add
jb
cltd
lret
sbb
mov
sbb
mov
enter
in
pop
aaa
cld
sub
cmp
sbb
test
cmp
adc
sub
lret
or
jmp
inc
mov
in
popa
inc
pop
inc
test
mov
ja
negb
xchg
mov
aam
arpl
lock
imul
and
nop
imul
rorl
mov
mov
imul
mov
and
jb
ret
aad
mov
push
jmp
xchg
sbb
ret
cmp
imull
das
aad
insb
leave
jmp
sub
movsl
jns
cmpsl
pop
push
cmpsl
test
dec
test
ret
fistpl
xor
pop
sbb
dec
repz
adc
cvtps2pd
mov
les
or
pop
sub
jmp
push
pop
xchg
in
and
outsl
mov
scas
call
xchg
imulb
xor
cld
add
aaa
add
icebp
cwtl
xor
lods
addr16
cmp
das
aas
mov
pop
sbb
xor
test
push
lds
sub
push
cwtl
shll
mov
xchg
adc
outsl
sahf
imul
jns
push
sub
inc
int
xor
mov
and
decb
inc
and
lds
icebp
cmc
sub
or
rolb
sbb
sub
cmp
jl
mov
sbb
push
lcall
mov
outsl
pop
mov
sahf
rorl
adc
iret
jnp
cld
loop
add
and
push
ja
lock
dec
mov
and
inc
xchg
jbe
mov
mov
mov
scas
rcrb
add
sub
and
sarl
and
xchg
xchg
loope
add
pop
pusha
scas
pop
cmp
xchg
mov
out
lds
ret
movsb
cltd
mov
icebp
pop
add
push
lahf
out
fdivp
dec
rolb
insb
dec
and
stos
int
mov
mov
das
aad
sub
xchg
andl
dec
gs
jbe
test
add
std
jnp
sbbb
dec
add
fldcw
les
mov
mov
dec
pushf
sub
jnp
mov
jnp
add
and
dec
cmpsb
test
test
leave
adc
add
ret
fdivrs
sub
bound
push
mov
push
popf
push
mov
add
mov
jnp
shll
std
out
movsl
sub
sbb
pusha
stos
pop
xchg
daa
pusha
movsb
pop
repz
sbb
inc
je
insl
les
ja
cmp
movsl
dec
loopne,pn
xchg
or
push
jnp
add
shll
mov
sub
xchg
push
lret
jno
pusha
lods
iret
push
push
cmp
inc
lcall
inc
mov
jo
mov
es
cmp
imul
fnstsw
loope
ret
jbe
pop
jge
lods
pusha
ret
xor
outsl
iret
jb
xchg
sbb
lcall
test
in
mov
jge
adc
js
pushf
or
mov
jo
lods
or
pop
and
adc
stos
sbbl
pop
mov
lahf
icebp
add
std
jl
xchg
push
mov
pop
push
rcl
sub
fld
dec
out
jp
sahf
aaa
enter
jmp
aas
in
outsb
sub
xchg
nop
jb
arpl
push
mov
cmp
pop
cmp
push
daa
int
adc
jp
lahf
push
jb
test
adc
push
popf
or
mov
xchg
inc
pop
dec
push
into
sbb
xchg
jb
push
loop
mov
in
jg
scas
dec
inc
icebp
add
in
pop
push
out
or
subl
fucomp
push
test
xor
lock
addr16
cmp
jno
stos
pushf
and
lea
ljmp
aas
pop
loop
or
aas
xlat
lahf
lcall
jbe
cmpsb
mov
sub
inc
fstpl
pushf
ffree
icebp
and
mov
xlat
jnp
loopne
mov
jp
ret
stos
mov
sbb
inc
sbb
nop
movsb
imul
and
sub
jbe
fwait
mov
sub
push
ja
xor
repz
xor
cmp
lock
mov
mov
cmp
cmp
xor
aam
adc
pushf
cmp
iret
fst
cli
cmp
and
enter
xchg
push
pop
mov
test
xor
fcoml
data16
clc
ds
push
fdivrs
push
std
mov
fidivrl
stos
xor
ret
stos
pop
cs
cld
pop
mov
out
in
ret
push
and
add
call
outsl
lea
cmp
scas
pop
jge
jecxz
ja
pop
mov
adc
les
add
mov
and
xlat
js
ret
and
mov
xor
rorl
loopne
push
pop
icebp
not
xlat
push
lret
inc
push
scas
cmp
imul
cmp
cmp
cmp
aad
add
adc
adc
shll
cmpsb
xor
shrb
xchg
push
mov
pop
lcall
adc
xchg
mov
mov
add
fnsave
fidivl
jmp
lret
aas
push
leave
imul
push
sbb
adc
fistps
inc
mov
add
push
dec
cmpsl
in
and
mov
xor
adc
pop
xchg
shll
dec
adc
inc
call
cmp
pop
stos
mov
push
fwait
ret
adc
push
mov
je
cli
shlb
loope
adc
pop
mov
xor
test
out
sbb
imul
jnp
adcb
in
stos
sub
jno
or
mov
and
pop
loopne
sub
dec
stos
arpl
popa
inc
xchg
hlt
fcmovu
testl
mov
cmpsb
outsl
outsb
mov
xor
rcll
mov
xor
imul
jbe
jecxz
les
fisttpll
les
push
mull
stos
cmpsb
or
je
push
mov
sbb
dec
inc
jbe
jne
scas
or
sub
subl
or
loop
roll
popa
jge
dec
mov
sbb
cs
mov
cli
mov
fidivl
sbb
push
cmp
jle
lds
in
xchg
sbb
push
or
xchg
dec
push
pusha
adcb
sub
xor
adc
sbb
out
adc
out
or
into
ret
rclb
jb
pushf
repz
test
jmp
fwait
pop
adc
stos
aam
hlt
lret
lea
arpl
or
sbb
mov
mov
push
sbb
add
dec
cmp
enter
xchg
pop
fs
add
cli
hlt
dec
iret
mov
add
xchg
enter
pushf
mov
outsb
xchg
or
push
insb
or
lahf
push
mov
jp
clc
xor
movb
outsl
incl
push
movsl
mov
mov
jl
mov
push
test
jl
mov
mov
fnstsw
jnp
cmp
add
gs
fidivl
cmpb
lret
flds
ljmp
dec
mov
inc
mov
inc
fmull
inc
in
ret
push
inc
cmpsl
loopne
lds
push
pop
mov
ja
sbb
add
lcall
mov
les
out
imul
ja
shll
lea
aaa
mov
xchg
or
mov
mov
inc
idivb
out
add
popf
lds
pop
mov
or
pop
inc
push
cmpl
pop
shll
inc
fists
inc
jno
and
pop
cmp
stos
jb
dec
pop
movsl
hlt
mov
xor
addr16
xor
add
mov
pop
cld
jge
jecxz
sbb
inc
mov
or
imul
pusha
xchg
int
lea
add
lods
cmc
inc
rol
push
cs
add
in
jmp
test
sbb
ret
adc
rcrl
loop
dec
in
popf
out
loopne
jmp
scas
in
mov
clc
cs
sti
pop
add
repnz
inc
mov
pop
dec
fstpl
arpl
adcl
jne
inc
inc
sub
pop
adcb
lcall
lds
repnz
mov
ret
insb
in
arpl
push
fcoml
or
ss
add
sub
mov
int
xchg
imul
call
pop
insl
sarl
jno
inc
sti
mov
outsl
sahf
dec
jae
jp
test
nop
popf
dec
mov
adc
jecxz
sbb
mov
scas
mov
xlat
or
je
push
adc
jo
das
inc
lahf
xrelease
lret
test
mov
push
push
pop
mov
dec
cs
or
repnz
push
jg
pusha
xor
fs
and
adc
push
inc
clc
cld
sub
es
dec
ss
loop
scas
inc
xor
ret
mul
test
fsubr
inc
xchg
pop
in
mov
adc
pop
cli
aam
cs
aas
cmp
push
in
js
inc
dec
push
xchg
sub
in
mov
das
in
mov
addr16
and
dec
xchg
cmp
das
iret
in
push
dec
adc
push
ja
pop
data16
inc
xor
test
enter
jg
xchg
ljmp
mov
or
mov
and
iret
adc
leave
push
adc
notb
vmwrite
cmp
mov
jno
orb
dec
lret
ficoms
xor
stos
mov
jmp
jns
or
ret
add
and
mov
mov
jecxz
pop
lcall
js
mov
jne
ljmp
cmp
scas
dec
loopne
mov
cmp
popf
mov
dec
stc
je
addr16
mov
lds
mov
push
inc
fisubrs
mov
rolb
push
rcr
int
sub
int
in
testb
movsb
adc
sub
imul
leave
dec
jns
enter
cmp
je
xor
inc
xchg
or
test
inc
xor
xor
cmp
inc
xchg
or
adc
pop
push
fimull
mov
jno
aam
jb
int3
push
sub
into
daa
test
mov
test
dec
pop
xchg
mov
adc
xchg
iret
sub
sbb
ljmp
push
pop
lock
push
add
loope
jo
pushf
sbb
ret
pop
sti
out
cmp
mov
jp
sarl
enter
xchg
js
loopne
cmp
aas
leave
sbb
orl
mov
cli
mov
daa
or
ret
movsb
lcall
push
sbb
ljmp
ficoms
mov
mov
jae
or
mov
sbb
and
repz
and
es
loope
mov
bound
cmp
push
jge
inc
adc
call
adc
les
mov
pop
sub
mov
fidivrs
dec
inc
loopne
jb
fmuls
test
data16
ret
addr16
push
jp
sbb
rorl
xor
pop
push
jb
and
inc
dec
push
in
xor
xchg
adc
scas
into
les
insl
sbb
inc
mov
inc
out
out
cld
pop
ljmp
movsb
scas
push
push
push
sub
scas
xorl
in
fwait
jns
mov
call
dec
cmpsl
aad
inc
and
sbb
ret
dec
sub
rclb
xor
rep
sub
fucompp
cmp
aaa
loop
mov
scas
movsbl
cmpsl
or
xor
data16
adc
dec
test
or
push
aas
sbb
mov
pusha
add
sbb
lock
popa
mov
xchg
mov
sub
mov
in
mov
jmp
dec
xlat
pusha
inc
mov
sub
or
cmp
push
pop
cli
xor
jp
lock
cmp
jno
xchg
je
cmp
bswap
dec
or
fldt
pop
insb
xchg
jb
jle
push
dec
xchg
aad
je
xchg
mov
hlt
test
shr
jb
cmp
jbe
scas
enter
mov
mov
dec
leave
jnp
je
mov
mov
pop
sahf
mov
insl
outsb
xlat
push
cmp
cmp
mov
popa
and
jl
jge
pop
pop
jbe
aad
in
andb
xor
add
stc
fcmove
daa
scas
and
and
inc
and
sti
pop
mov
test
add
push
mov
dec
jmp
add
sub
fldt
or
add
sub
and
popf
cli
pop
cmp
arpl
mov
push
loope
pop
adc
sub
fimull
stc
add
aad
flds
and
outsb
pushf
pusha
xor
sub
add
out
mov
hlt
and
mov
loope
lea
push
inc
and
rcrl
movsl
adc
fwait
pop
jbe
aad
stos
cmc
in
aaa
pop
and
or
fldcw
push
mov
adc
add
or
fsts
lret
das
arpl
jp
xchg
aad
add
movsl
mov
mov
aaa
mov
test
lcall
ror
sarl
sub
jmp
mov
cld
cmp
lods
mov
out
jne
mov
mov
pop
push
lods
repz
dec
lods
test
xor
test
dec
add
int3
int
test
jl
das
jno
adc
js
mov
sahf
ficompl
inc
xchg
negb
xor
mov
call
mov
and
or
clc
mov
fists
fwait
movsbl
ljmp
fistpll
jb
ds
or
inc
pop
iret
dec
mov
outsl
push
cmp
ss
out
nop
mov
xchg
mov
lock
lret
adc
gs
test
rcrl
add
lcall
inc
cs
xor
addb
aas
adc
xchg
or
std
rcrb
leave
fldl2e
cmp
cmpsb
and
pop
mov
mov
mov
or
jge
mov
adc
addl
inc
sbb
popa
shrl
jo
mov
leave
out
xchg
inc
xor
lods
sub
or
pop
adc
mov
sub
pop
pop
fwait
pop
lds
imul
or
loope
push
sub
fldt
test
adc
enter
mov
or
stc
xor
and
scas
sbbb
ljmp
ret
bswap
or
xlat
pop
out
addr16
push
cltd
add
cmp
in
add
jbe
adc
daa
jb
cld
sub
mov
mov
push
enter
enter
sub
call
dec
add
call
xor
inc
mov
jnp
xchg
or
push
movsb
mov
mov
rcrb
sub
mov
mov
scas
push
xchg
xchg
jp
dec
jle
or
fwait
mov
pop
xchg
xchg
jo
push
push
shlb
and
imull
repnz
nop
pushf
mulb
ljmp
jl
hlt
popf
not
cltd
stc
pop
xchg
outsl
pop
pop
adc
test
fwait
adc
xor
mov
jbe
scas
scas
dec
rorb
xlat
imul
xor
add
lock
test
loope
lds
test
sarb
jmp
fsubr
jmp
fnsave
xor
sub
cld
push
xchg
jmp
fwait
sub
adc
sbb
scas
lcall
sbb
lahf
cmc
or
or
call
cmp
stc
mov
and
enter
std
push
add
xchg
call
ljmp
or
dec
mov
popa
mov
dec
inc
das
jge
add
xor
enter
ljmp
fcomip
out
jae
lret
mov
orl
cs
shl
rorl
rolb
add
pop
test
lds
shrb
ljmp
lock
dec
dec
icebp
dec
shll
inc
inc
mov
and
mov
mov
sub
mov
mov
es
enter
js
mov
sbbb
xchg
into
cmp
mov
cmp
dec
gs
aam
inc
xor
idivl
sbb
mov
scas
lods
or
adc
jno
les
jb
cmp
jg
dec
in
or
push
das
loop,pn
pop
fisubrl
jg
push
or
mov
lock
jnp
mov
push
mov
rcrb
into
xor
lcall
or
dec
icebp
or
int3
sbb
cmp
sub
jae
jnp
mov
arpl
add
cmp
cmpsb
data16
mov
movsb
mov
xorl
out
sti
xchg
pop
mov
add
fistl
dec
fucomp
dec
jl
bound
adc
iret
adcb
insb
xchg
aad
dec
mov
sbb
js
mov
int3
mov
jo
popa
jb
pop
lds
mov
int3
xor
hlt
int3
daa
push
mov
sub
inc
inc
fs
jle
das
jge
xlat
sbb
mov
xor
jl
and
mov
stos
aad
or
decb
andl
adc
fimuls
pop
lea
pusha
fcomip
test
mov
inc
icebp
or
sahf
rcr
sub
ret
scas
fisttps
mov
inc
pop
cmp
scas
icebp
push
push
mov
pop
and
adc
push
and
jmp
leave
cli
mov
addr16
add
in
imul
push
in
xlat
mov
lret
mov
mov
xchg
xor
fcmove
call
movsl
dec
hlt
cmp
iret
mulb
xor
xchg
mov
cmp
addl
inc
out
or
test
mov
push
jae
inc
mov
jo
cmp
push
les
xchg
jae
adc
outsl
jae
out
in
push
mov
jl
cwtl
jns
in
push
sbb
xchg
ja
mov
jmp
xchg
and
xchg
jo
sub
mov
mov
imul
outsb
sbb
mov
fidivrs
ljmp
pop
sbb
dec
test
xchg
push
xorl
fs
inc
stos
jecxz
xchg
xchg
xor
in
mov
pop
sbb
adc
loope
push
xlat
xor
mov
jne
sub
jmp
inc
loop
push
lea
xchg
mov
fs
call
insl
adc
jnp
stos
mov
pop
jne
pop
lods
stc
dec
aas
dec
es
mov
sub
hlt
shll
cmp
mov
decl
pop
inc
sub
xchg
cmp
aad
cli
jmp
mov
xchg
jnp
and
jae
mov
out
jae
xchg
jle
pop
xchg
cmc
fnstsw
add
sbb
xchg
xchg
inc
and
or
ja
hlt
rclb
mov
andl
mov
inc
cld
outsl
mov
or
or
icebp
xor
test
sub
sarb
sbb
sbb
sbb
push
aad
stc
and
sub
adc
inc
dec
sarb
adc
imul
dec
mov
cmpsl
inc
lahf
push
jbe
out
dec
sub
pushf
into
sbb
add
jno
pop
mov
or
insb
sbb
jbe
xchg
gs
stos
push
mov
sub
shll
inc
andl
lahf
outsl
mov
lock
cmp
arpl
cmp
mov
lock
push
data16
jmp
pop
mov
insl
mov
fndisi(8087
scas
xor
mov
iret
iret
cmp
mov
dec
jbe
fiadds
push
mov
push
cwtl
stos
xchg
or
mov
imul
andb
push
push
nop
inc
sbb
push
xor
sti
imul
mov
sub
insl
outsb
pop
movsl
xor
cmp
gs
sub
sarb
inc
adc
insl
pop
cmpb
jb
or
sub
jns
dec
xchg
jecxz
arpl
adc
jbe
hlt
clc
scas
dec
mov
inc
xor
lcall
fsts
sti
inc
and
aam
push
scas
mov
cmpsl
mov
mov
sub
jne
pop
jmp
vprotq
shll
sub
jno
cmovno
mov
mov
pop
cmpsl
xchg
mov
cmp
roll
rolb
xorb
xor
fisubrl
repz
rolb
mov
icebp
inc
call
das
cwtl
or
mov
cli
or
test
es
mov
loopne
xor
sbb
imul
add
mov
insb
mov
push
out
push
cmp
xor
or
push
xor
daa
in
repnz
lock
jb
mov
pop
adc
cmc
sbb
xchg
xlat
daa
dec
outsb
sbb
test
xor
jge
inc
es
mov
cs
aaa
repnz
cmp
data16
push
movsl
jmp
cmc
pop
push
push
adc
xlat
lahf
dec
mov
mov
lea
ja
into
jno
data16
and
jmp
mov
into
shr
pop
test
repnz
xor
mov
outsl
adc
jns
push
mov
fs
repnz
sbb
xchg
in
in
ret
pop
mov
sub
das
cmp
dec
std
or
gs
push
sahf
pop
pop
xchg
cltd
jb
add
adcl
or
je
cld
arpl
adc
jnp
mov
std
dec
ret
out
jne
xor
pop
ljmp
mov
daa
sti
mov
pop
psubusb
push
and
xchg
shlb
ss
out
fwait
add
mov
dec
ljmp
mov
js
or
or
and
popf
and
xor
mov
les
mov
push
mov
cmp
mov
pmaxsw
movsb
dec
push
hlt
pop
movsl
cmp
xchg
mov
mov
dec
cmpsl
sti
dec
mov
in
stos
inc
adc
int
loopne
mull
lahf
cs
mov
inc
leave
mov
add
jle
adcb
addr16
xchg
jo
xor
sbb
lods
sub
daa
stc
idivl
adc
les
insb
xchg
mov
sbb
or
and
addl
rorb
xchg
and
pop
inc
mov
push
int3
addr16
push
xchg
out
push
enter
or
pop
fucomp
shl
or
leave
out
jle
or
cmpsl
dec
or
or
outsl
popf
sbb
ja
and
lea
cmpb
inc
pop
cmp
dec
jg
mov
adc
cmp
ljmp
orl
dec
andl
and
icebp
xlat
sub
xor
jmp
in
jo
or
fistps
xchg
daa
daa
mov
push
dec
ja
dec
pop
mov
lods
sub
movsl
add
movsl
add
cld
rcr
cltd
pop
data16
out
add
decl
pop
in
pop
mov
andb
loope
iret
jb
mov
adc
and
mov
ljmp
jle
mov
pushf
movsb
pop
scas
jp
xor
mov
or
jp
push
push
lret
jns
hlt
adc
das
mov
sbb
das
push
adc
dec
rorl
lahf
mov
pop
xor
lcall
popf
bound
pop
loopne
or
jnp
addr16
jle
xor
lock
loope
call
test
add
mov
push
mov
scas
lock
jp
mov
add
aaa
clc
negb
xor
jge
push
jne
xchg
jae
movsl
mov
mov
and
loopne
xchg
pop
scas
ret
push
cmpb
fldenv
inc
scas
les
iret
pop
pop
mov
mov
push
daa
and
cmp
xor
fwait
mov
mov
xchg
mov
cmp
fcompl
in
inc
xchg
adc
shrb
adc
sbb
pop
sub
decb
hlt
mov
push
test
int
sbb
loope
xor
push
or
push
push
movlps
dec
aaa
movsl
pop
push
mov
mov
sub
push
lea
mov
repnz
loopne
outsl
add
out
mov
mov
pushf
inc
mov
pop
sbb
mov
and
shrl
pop
or
insb
in
mov
mov
lahf
and
sub
add
push
repnz
add
addr16
and
insb
dec
cwtl
fdiv
jb
movsl
lock
xor
imul
sub
mov
add
pusha
pop
add
mov
fnsave
scas
insb
xor
mov
test
scas
adc
ficompl
hlt
sub
cmp
les
sti
push
cmp
test
pop
rorl
cmove
es
call
push
push
cmc
in
cmpsb
jp
mov
inc
or
mov
ficoms
adcb
fnstsw
sub
in
xor
add
mov
ljmp
push
rorl
pop
fsubs
cmp
cmp
ss
xor
cmpb
mov
dec
filds
dec
daa
jo
jp
scas
lods
stos
lret
loopne
lods
mov
bound
shll
fildll
inc
jb
mov
xor
fdivrs
mov
sar
jne
je
pop
loope
out
out
xor
call
and
pop
loope
mov
rolb
imul
mov
mov
xor
rcll
fmull
pop
jmp
loop
lock
pop
cld
imul
fdivl
sbb
js
add
dec
and
push
xor
jbe
mov
sbb
mov
push
std
and
mov
and
lret
aam
jae
lahf
jae
aad
rclb
mov
mov
adc
loopne
fwait
or
push
rcll
xor
adc
mul
adc
cmp
out
dec
stc
fsubr
in
outsl
inc
mov
fcmovnb
leave
push
stos
jns
jae
sbb
mov
cld
pop
pop
mov
jnp
jo
inc
outsb
ljmp
arpl
rclb
xlat
xor
mov
mov
fcmovnbe
sbb
lods
adc
shll
repz
les
arpl
xor
aam
push
nop
push
sbb
aas
stos
sahf
jo
inc
test
push
sub
mov
orl
dec
push
adc
mov
call
pop
cmp
jg
pop
das
adc
stc
sub
lcall
ficoml
filds
mov
lock
mov
xor
mov
mov
add
mov
mov
xchg
lret
test
xchg
xor
repnz
movsl
dec
adc
mov
lea
push
loopne
xor
push
and
fimull
xor
ret
sti
adc
cmp
fstpt
stos
gs
adc
das
jle
mov
fstp
xlat
repz
ret
shr
rcl
shlb
fdivs
lcall
add
xor
and
ja
mov
enter
jno
mov
loopne
and
movsb
jbe
sbb
jno
jecxz
sub
mov
sbb
xchg
aaa
and
sbb
lock
pop
cltd
inc
push
out
das
aam
sub
or
pop
stc
insb
fldenv
push
xchg
sub
sub
shlb
pop
bound
dec
ficoml
inc
cwtl
push
mov
js
mov
cmp
mov
dec
mov
dec
add
and
dec
pop
lods
pop
mov
sub
pop
sub
cmp
es
inc
js
xchg
mov
mov
dec
jl
pushf
sbb
loopne
xchg
xchg
aas
or
mov
cmpsb
cs
movsl
clc
js
les
ret
xlat
or
lcall
xchg
xor
and
pop
jmp
cld
leave
mov
stos
lahf
arpl
pusha
push
dec
scas
imul
jns
and
stc
cmp
push
cmp
ds
in
cmp
pop
and
add
fmuls
stos
sub
leave
out
sbb
inc
adc
lcall
out
pop
mov
push
push
repz
jmp
adcb
sar
rcrb
fdivl
mov
loope
ja
shrl
mov
arpl
ret
or
push
and
inc
repnz
sbb
lret
mov
mov
jle
jecxz
or
push
sbb
mov
movsb
lahf
pop
mov
xchg
popf
in
movsl
repz
divb
lahf
ret
fsubrp
fdivrs
and
cmp
inc
fnstsw
into
cmp
loope
mov
test
aaa
aad
adc
out
xor
fildl
fs
mov
sahf
lret
in
mov
ja
shlb
lock
xor
mov
jge
movsl
xor
adc
lgs
adc
xchg
xor
insl
xchg
mov
repz
push
pop
frstor
inc
adc
mov
xor
cmpsl
mov
dec
test
xlat
js
cld
jecxz
dec
std
jne
or
sub
inc
sbb
adc
push
ljmp
cmp
js
xchg
in
loop
xchg
mov
les
xchg
or
xor
push
adc
xlat
rcrl
outsl
mov
addb
cld
lret
mov
clc
out
out
push
inc
inc
push
cmp
adc
test
xchg
dec
mov
xchg
mov
lods
push
hlt
jecxz
insl
sbb
in
jnp
ret
das
psrlq
add
ret
sbb
sub
adc
cld
test
mov
notb
push
js
das
loopne
in
xor
mov
sbb
inc
scas
push
and
fstpt
mov
or
jmp
sbb
loopne
ror
add
mov
inc
cmp
out
scas
jp
xor
popa
dec
mov
push
scas
xchg
pop
xchg
aaa
adc
push
pop
jnp
add
dec
dec
iret
xchg
and
xlat
mov
addr16
xchg
push
or
jl
xor
sarl
jbe
push
push
mov
idiv
arpl
test
pop
cmc
xchg
mov
inc
add
or
cmc
xchg
jp
fucom
push
cmp
sub
repz
mov
mov
mov
and
movsb
and
cld
dec
xor
roll
outsl
adc
push
lret
movsb
pop
push
movsb
xchg
jns
and
and
fstl
icebp
jmp
mov
xchg
jbe
mov
push
push
xor
mov
xchg
into
ds
cmp
rorl
push
and
add
mov
andl
dec
mov
add
test
sbb
inc
dec
cwtl
inc
inc
xchg
xor
arpl
jnp
mov
xchg
shl
in
jne
js
jmp
fbstp
xchg
inc
sub
add
test
insb
adc
loop
cld
ret
ss
jo
push
or
loop
push
jno
pop
sub
pop
pushf
mov
into
fdivrs
xchg
push
cltd
mov
pop
sbb
movsl
inc
mov
or
repz
lock
scas
mov
data16
pop
call
int3
push
mov
sub
stos
std
mov
dec
mov
pop
mov
pop
addr16
jmp
sub
ret
adcl
popa
adc
jo
imul
idivl
fisubrl
dec
out
mull
dec
mov
jle
push
pusha
jmp
or
dec
pop
jne
jno
mov
fwait
mov
inc
les
pop
xchg
add
imul
pop
pop
js
xchg
mov
pop
push
jno
imul
shlb
lea
push
mov
inc
fimuls
mov
push
int3
test
fs
add
int
dec
stos
pop
dec
adc
add
mov
leave
xchg
mulb
mov
addb
aad
loop
arpl
sahf
rcll
mov
cltd
add
jns
adcl
dec
test
movsl
dec
xchg
cmpsl
in
fcmovb
bound
fsubrp
cwtl
je
jg
push
mov
daa
sbb
scas
adc
jle
pop
jo
pop
insb
out
repnz
pop
out
and
adc
mov
push
fwait
inc
add
mov
xor
pop
test
int3
imul
les
inc
ret
pushf
aam
push
adc
or
jne
xor
insl
cmpsl
test
mov
sub
inc
xchg
roll
mov
addr16
inc
fldt
fidivrl
sarb
mov
ss
pslld
test
sub
add
add
out
ljmp
push
xlat
xchg
stos
int
fldl
mov
inc
jne
cmp
cmpsb
jmp
fisubs
mov
std
adc
enter
mov
dec
insb
jne
fstl
aam
xchg
inc
add
and
test
aam
push
iret
and
jmp
push
jg
and
add
fildll
cltd
adc
push
mov
add
xchg
test
adc
xor
dec
out
dec
mov
and
and
dec
cmp
mov
sbb
and
push
cwtl
clc
mov
sub
repz
sti
sbb
cmp
fdivr
pop
imul
xor
or
adc
or
rcr
daa
dec
add
aam
mov
enter
popf
clc
daa
inc
adc
adc
cs
jns
addb
shl
nop
sub
jb
fdivs
push
mov
inc
xorb
jno
negl
cs
and
and
jg
repz
jo
out
icebp
mov
inc
aad
and
icebp
outsl
sbb
xchg
pop
imul
xchg
leave
loopne
mov
push
cmp
nop
in
jae
scas
push
mov
mov
das
mov
jl
fs
je
add
sahf
loop
xlat
and
or
call
test
push
insl
dec
lock
fiadds
iret
dec
adc
cs
sbb
cltd
dec
mov
in
mov
xchg
lret
cmpsl
in
and
in
dec
sub
or
xchg
lcall
push
add
imull
call
pop
push
xor
xchg
push
or
xchg
leave
xchg
test
int
sbb
push
fnsave
nop
cli
pop
push
dec
xorl
or
out
dec
roll
sub
push
xchg
test
iret
iret
mov
jp
and
or
pop
ja
arpl
or
fs
xor
adc
and
dec
or
fwait
jbe
andl
repnz
aam
lret
or
mov
xor
bound
push
push
mov
lods
mov
shll
int
lds
push
sub
mov
inc
fcompl
and
mov
xchg
gs
push
or
or
lods
mov
outsl
add
mov
out
fdivs
repz
pop
lea
xor
pop
inc
push
xchg
addr16
ret
pop
mov
cltd
mov
or
inc
lahf
dec
dec
pop
xor
ss
flds
pushf
mov
fs
pop
js
jne
adc
add
mov
lea
xlat
ja
sbb
xchg
scas
jbe
push
or
xor
mov
mov
sarb
dec
lds
pop
xchg
data16
jp
fs
push
iret
mov
fdivrl
in
xchg
popf
mov
inc
inc
sub
cltd
inc
cli
popa
jb
adc
push
sub
es
jmp
addr16
push
mov
or
inc
push
xchg
rcll
inc
imul
add
xor
xor
out
mov
lock
adc
inc
sbb
cmp
movsl
adc
mov
test
adc
inc
mov
push
add
nop
test
movsb
mov
add
xchg
nop
mov
pop
cltd
xchg
loop
sub
jns
xchg
push
mov
je
jns
dec
xchg
add
scas
mov
fnstcw
sbb
pop
in
ds
pop
mov
icebp
rcr
adc
add
pop
and
ret
out
mov
pushf
jecxz
jns
out
mov
and
or
mov
mov
push
inc
je
xlat
fisubs
leave
push
ret
insl
sbb
decb
lds
add
pushl
cmovb
sti
lcall
jae
jmp
adc
add
arpl
add
gs
jb
push
dec
cmp
or
add
adc
jnp
test
jns
adc
add
xchg
mov
hlt
xchg
or
mov
xchg
cmp
push
ja
mov
je
cmp
hlt
sarb
lret
and
push
jne
mov
cli
jg
subb
hlt
imul
mov
push
xor
inc
popa
icebp
dec
inc
pushf
push
push
cmp
mov
sbb
lods
cmp
out
cs
fs
and
xchg
mov
sbb
clc
int3
add
xor
adc
sbb
mov
mov
out
pusha
sub
pop
mov
push
shll
lea
mov
add
add
dec
add
pop
cwtl
cmp
and
sbb
sarb
mov
sub
pop
jle
pop
sbb
or
pop
xchg
mov
rcll
dec
dec
xor
jp
fistl
jb
mov
inc
pop
mov
pushf
xor
mov
incb
dec
fcoms
adc
sti
rcr
xorl
insl
dec
outsl
mov
inc
add
cmp
pop
sub
fs
cltd
push
mov
inc
xchg
xor
pop
add
sbb
imul
pop
scas
shl
iret
stos
xchg
inc
out
leave
jl
insl
xchg
bound
xchg
mov
test
xor
mov
rclb
outsl
lods
daa
mov
xchg
cmp
pusha
lea
shl
dec
ret
add
pop
pop
bound
jle
fcmovnbe
cmc
sub
in
mov
jno
mov
aad
push
fstl
enter
pop
ret
push
mov
sub
js
xchg
and
out
push
jmp
inc
xor
stc
repz
push
hlt
aad
mov
cmpl
test
outsl
int3
pop
mov
cmp
lret
imulb
dec
add
aam
jl
pushf
int3
dec
rcll
jmp
icebp
xchg
sahf
cmpl
adc
in
mov
loope
outsb
dec
cmp
jno
jno
test
sbb
sahf
enter
shr
inc
in
xchg
mov
cwtl
xchg
xor
repz
and
repnz
fldenv
test
sub
xor
outsl
cmp
mov
arpl
dec
popa
insb
mov
shll
lcall
mov
xchg
xchg
into
pop
jge
pop
ss
xchg
popf
and
and
movsb
lea
adc
pop
inc
idiv
or
push
in
hlt
xchg
inc
pop
icebp
add
pop
adc
and
sbb
add
fbstp
je
fiadds
cwtl
push
mov
pop
lock
unpcklps
es
cmp
or
and
inc
cmp
imul
dec
push
inc
lods
int
jp
mov
jb
out
rclb
iret
aaa
mov
dec
jl
addr16
push
stc
jecxz
and
out
pop
lds
fwait
subps
add
push
push
xor
iret
cmp
mov
dec
xchg
sbb
push
xchg
mov
cmp
jecxz
xor
xchg
xor
mul
push
je
mov
or
fdivl
addr16
pop
icebp
mov
mov
sbb
mov
mov
test
aad
or
push
sbb
pop
add
mov
popf
xlat
std
xchg
dec
stos
pop
rcll
push
je
imul
imul
add
pop
in
enter
sbb
and
je
imul
mov
insb
pop
mov
adc
and
dec
test
sti
jo
and
lcall
mov
xlat
sbb
lock
xchg
lea
xor
push
insb
xlat
in
sbb
fxch
bts
mov
cmpsb
mov
push
gs
xchg
mov
stc
sahf
mov
mov
sub
jmp
mov
dec
enter
pop
or
into
cmc
xlat
cmp
sub
mov
enter
mov
leave
data16
xor
imul
shll
pop
lea
pusha
cmp
aas
outsl
clc
dec
shlb
bound
push
scas
jge
push
adc
add
aam
mov
xchg
sbb
je
dec
fisubrl
cmpsb
xor
lahf
mov
xor
clc
ds
lea
cmp
mov
pop
cmp
fidivl
xlat
xchg
scas
fadds
popf
mov
pop
sahf
inc
lret
jns
mov
shl
pop
mov
push
dec
pop
jbe
popf
lods
sbb
movsl
dec
mov
jmp
xlat
push
adc
in
in
xchg
cmpsb
lret
ljmp
jl
cmp
sub
stos
test
adc
out
mov
mull
ss
in
iret
add
repz
push
dec
push
jbe
inc
pop
loope
ss
and
repnz
clc
out
push
inc
push
rcrl
push
inc
push
in
pop
push
adc
dec
xor
aas
or
add
jae
or
out
fxam
stos
pusha
dec
pop
jmp
push
cwtl
lods
aam
adc
push
rcl
es
pop
push
cld
xchg
arpl
ficoml
popa
in
test
mov
mov
or
popf
cmp
dec
add
ret
cwtl
sti
add
out
or
pop
orl
mov
repz
ret
pmaxub
inc
out
mov
xor
jae
or
in
out
inc
insb
aas
cs
dec
aas
jnp
fidivrl
jns
xchg
popa
pop
call
rcrl
loopne
repz
cmpsl
pop
fadds
xchg
pop
in
dec
and
out
js
jle
adc
and
cmp
mov
fisttps
jg
dec
mov
mov
pop
and
ljmp
sbb
scas
lahf
fcoml
js
dec
xchg
out
xchg
aam
mov
push
dec
xchg
data16
roll
outsb
setbe
fistps
fisubrl
jp
xlat
xor
stc
inc
js
stos
loop
or
popf
stos
in
inc
mov
lds
mov
mov
dec
jmp
jmp
mov
data16
jle
sbb
jmp
add
or
xor
sbb
fcmovnu
movsl
das
xchg
inc
xchg
aad
cltd
pop
dec
fldenv
int
xor
or
hlt
push
sbb
mov
jb
or
pushf
adc
ret
adc
add
cmp
cmp
stos
cwtl
mov
sub
pop
jae
loopne
jo
pop
push
jge
mov
ss
mov
push
or
imul
jmp
dec
pop
xchg
sbb
leave
in
ss
mov
enter
testb
sub
mov
xchg
out
rcrl
or
out
mov
sbb
sbb
arpl
xchg
ljmp
in
mov
das
pop
cmc
xor
adc
push
push
jl
xchg
dec
gs
sub
sub
adc
push
adc
fidivrs
scas
and
mov
fiadds
icebp
je
gs
int3
js
xor
jb
dec
hlt
cmp
cmc
add
aas
hlt
jbe
mov
sub
xchg
mov
sbb
movsb
sub
and
pusha
sahf
cwtl
xor
jnp
add
jns
jg
pcmpeqd
xchg
inc
pop
imull
xchg
cltd
push
push
ljmp
push
dec
test
and
bound
xchg
test
mov
jle
fcmovne
xor
cltd
cmp
decb
jle
cli
and
lods
push
aam
or
fldl
mov
data16
outsb
or
mov
pop
fidivrs
in
mov
push
jo
push
mov
adc
adc
sbb
test
iret
bound
mov
and
mov
mov
dec
movsb
outsl
mov
cmp
push
fiadds
cmp
add
lcall
sbb
mov
aaa
dec
push
cmp
pop
sbb
pop
mul
inc
or
stos
or
jb
int
push
sub
icebp
dec
push
inc
xchg
stos
or
fsts
sbb
adc
mov
mov
loopne
in
cwtl
loopne
add
pop
xchg
jbe
test
cmp
jns
fwait
xchg
mov
inc
dec
jne
xchg
aad
mov
arpl
mov
fdivrl
cli
push
add
aad
jecxz
jae
pop
jnp
pop
or
add
loopne
or
loop
cmpb
inc
in
mov
pushf
mov
adc
push
mov
fwait
sarl
out
add
sub
dec
cmp
cli
mov
inc
aam
push
inc
pop
add
popa
cltd
or
xchg
xchg
pop
nop
lods
scas
and
push
xlat
test
add
or
faddl
aam
gs
sub
pop
and
cmp
mov
hlt
mov
or
jg
inc
or
sbb
in
xchg
mov
xchg
and
jnp
scas
or
push
sbb
jle
pop
sahf
cwtl
sahf
divb
dec
pop
lret
int
pushf
xor
lods
das
sub
outsl
ds
gs
cmp
mov
adc
ret
inc
scas
xor
add
sbb
test
add
lds
xor
add
orb
mov
push
addr16
lods
or
cs
adc
jle
lahf
inc
push
hlt
les
mov
sbb
daa
in
push
fstps
shl
jge
xchg
or
mov
xor
js
icebp
and
xor
cmpsb
mov
xchg
sarl
loop
lods
lcall
mov
or
push
push
or
fstp
cmp
popf
sbb
or
or
jge
and
adc
ror
outsb
dec
push
xor
cmp
and
mov
push
sahf
pop
xor
pop
mov
aam
adc
lret
fcmovb
push
adc
add
or
leave
jnp
push
and
notl
dec
fnstcw
insl
or
cwtl
mov
rorl
ja
icebp
clc
pop
pop
insb
dec
mov
rcr
sub
inc
xor
inc
mov
or
mov
or
pusha
rcr
and
loop
ds
stos
sub
sbb
pop
std
fldcw
loopne
cmpsl
into
ret
mov
and
xor
xor
push
aas
movsl
or
push
in
pop
shr
mov
out
xchg
inc
mov
push
xchg
sub
xchg
addb
gs
sub
adc
popl
sub
mov
cmp
repz
out
scas
sar
mov
jb
test
enter
mov
add
jbe
in
imul
les
je
mov
xchg
xchg
outsb
sbb
shrl
lock
or
fldcw
cmp
test
ret
cmpsb
xchg
lcall
xor
loopne
jne
push
and
push
pushl
sbb
pop
sub
icebp
insl
mov
testb
gs
pushf
jp
mov
sub
or
lahf
push
xchg
sub
negl
mov
mov
lods
lcall
add
rcpps
test
push
out
xchg
cmpsb
mov
test
into
jbe
dec
mov
pusha
pop
in
sub
mov
test
mov
dec
outsb
aaa
daa
sub
pushf
sbb
inc
push
sbb
cmp
pop
sbb
ja
jns
mov
push
cmp
inc
mov
sbb
movsl
dec
mov
out
cltd
popa
sub
pop
push
add
sbb
and
mov
xchg
in
enter
not
or
mov
movsl
fs
je
mov
idivb
roll
test
pop
nop
in
cld
pop
lcall
jne
cwtl
or
fs
fdivrl
into
lret
iret
std
cmpl
loope
mov
xor
fs
nop
push
insl
out
jle
xchg
addl
test
stos
call
sbb
out
adc
daa
push
sahf
lock
xor
shll
lods
sahf
ds
xor
jle
stos
popf
hlt
dec
push
data16
vpsrad
outsl
and
xchg
icebp
mov
and
mov
xor
mov
das
mov
mov
gs
and
jbe
int
scas
cmp
scas
sbb
gs
stos
scas
in
ljmp
decb
sbb
ss
dec
push
add
cmc
leave
jne
and
out
insl
arpl
cmp
in
mov
mov
lahf
push
adc
jae
add
fistps
push
adc
lcall
je
dec
dec
pop
bnd
dec
cmp
lods
shrl
outsl
out
jb
push
out
and
mov
lret
test
xchg
cs
adc
jge
sub
cmp
push
cmpsl
lcall
inc
dec
push
mull
mov
aam
pop
das
xchg
add
mov
mov
lcall
ds
icebp
pop
sbb
aaa
sbb
and
mov
xor
clc
inc
jb
outsl
cmp
xor
dec
mov
inc
sub
call
xchg
mov
xchg
xchg
dec
std
sub
lret
jmp
popf
lea
xor
inc
insb
jge
xchg
and
push
ljmp
mov
dec
stos
popf
nop
int3
dec
cmpsb
pop
or
sbb
hlt
stos
xor
push
jae
xor
shll
xor
and
and
in
lea
das
insl
xchg
jle
inc
mov
and
xchg
sub
mov
subl
sbb
fcmovnbe
cmp
aad
sub
les
and
stos
mov
dec
xor
mov
pusha
enter
inc
imul
lea
xchg
cli
inc
test
mov
ds
sbb
lret
pop
add
test
xor
bound
xchg
daa
aam
mov
push
test
xor
ret
jle
mov
inc
push
dec
cmp
fs
and
lcall
insl
fdivrl
sbb
adc
cmpsl
outsb
jbe
das
scas
xchg
cs
mov
mov
or
cmp
push
push
stos
rclb
xchg
inc
addr16
pop
push
cli
adc
pop
outsl
adc
out
jg
fcoms
jnp
stos
xor
jnp
pop
fs
push
push
pop
jns
shl
lahf
mov
inc
rorb
cmp
jge
push
dec
adc
popf
dec
push
sub
jnp,pt
dec
lock
cmpsb
pop
nop
mov
fisttps
mov
pop
popf
popa
dec
mov
jns
mov
jl
cs
shll
lret
xchg
imul
adc
mov
cli
inc
or
ja
xor
jnp
pop
sub
andb
ja
push
movsb
pop
mov
cmp
pop
insb
int3
test
enter
push
push
out
xchg
cmp
jb
xchg
adc
in
stos
cmp
xor
xor
rol
xor
test
pop
scas
pop
pop
pop
push
in
cmp
mov
mov
cltd
push
popa
and
cmp
outsb
hlt
pop
test
jo
mov
push
cmp
cltd
ja
testl
and
xchg
xchg
enter
fstps
pop
pop
adcb
mov
and
pop
xor
cmp
and
sbb
xchg
ret
mov
sahf
pop
loop
jg
xchg
test
and
fisubl
cs
inc
jno
sbb
rorl
cmp
rcll
jg
hlt
fsubrs
popa
je
cli
and
mov
adc
adc
popa
pop
or
and
jns
andb
adc
pop
pushf
mov
add
in
gs
mov
ds
lea
test
push
in
or
sub
push
cmp
fcoml
mov
add
pop
mov
inc
sub
xchg
jnp
imul
jmp
repz
sub
cld
shr
push
sbb
and
ficompl
jns
outsb
adc
std
push
mov
jns
ja
xchg
cmpsl
pop
test
mov
sub
pop
std
ja
sub
fs
loope
fnstcw
imul
test
fs
insb
insl
test
or
dec
fbld
shrl
out
inc
les
pop
jmp
movsb
push
sbb
xchg
sub
fldl
in
test
cmp
pop
inc
jb
das
fiaddl
fstpl
mov
ss
sbb
jne
push
fs
pop
add
mov
cld
scas
cli
stos
xchg
adc
lahf
xchg
ss
outsl
imul
out
lahf
inc
jp
movsb
mov
movsb
aam
xor
cltd
jo
negb
xchg
in
dec
mov
pop
inc
adc
or
fisttps
push
cmpsl
add
repz
addr16
sbb
lea
or
sub
jl
push
test
sti
les
push
nop
push
inc
mov
ret
xor
stos
cwtl
lods
jne
filds
dec
sbb
and
mov
dec
outsb
inc
fcoms
add
lods
mov
jnp
dec
lret
xor
or
xlat
and
dec
loopne
mov
in
sbb
sub
dec
std
adc
fsubrs
pop
dec
and
jl
mov
outsl
mov
fdivp
xchg
jae
add
popa
mov
xor
sub
xchg
and
outsb
cld
dec
les
cld
mov
pusha
jmp
jbe
xchg
dec
fstps
or
xlat
and
adc
dec
add
mov
imul
push
dec
ret
frstor
mov
shll
adc
nop
mov
add
mov
pushf
or
xchg
imul
adc
std
pusha
pop
iret
stc
jmp
and
inc
mov
push
adcb
out
shlb
or
inc
ljmp
add
loope
xchg
xor
push
jno
cmpsb
xchg
fstpt
into
mov
ret
sbb
stos
inc
outsb
mov
testb
js
inc
inc
and
jge
pop
iret
ss
adcl
xor
flds
lods
adc
xchg
cmp
xor
or
pop
adc
andb
mov
xchg
testb
sbb
xor
jbe
inc
inc
stc
or
jnp
ss
lcall
and
jmp
push
leave
jb
sar
pop
fimuls
fwait
clc
icebp
cmp
mov
mov
jl
mov
pop
dec
sti
movsb
loopne
jecxz
cltd
cmp
jg
inc
sub
xchg
repnz
inc
jge
movsl
imulb
mov
cwtl
xor
and
scas
and
loopne
jno
lret
sbbb
mov
pusha
imul
sahf
faddl
dec
cmp
out
lds
pop
inc
lcall
xor
mov
loop
adc
scas
jns
sub
popa
lea
mov
out
mov
jbe
aam
push
out
lods
cli
addr16
jmp
enter
mov
cwtl
insl
cmp
add
sbb
pop
hlt
xchg
or
push
xchg
mov
xorb
imul
jo
cltd
data16
notb
addr16
fmulp
out
lods
and
dec
add
and
in
ja
cmp
xor
jg
cmp
adc
sbb
ret
pushf
push
ss
or
push
icebp
pushf
or
call
sbb
push
insl
mov
les
xlat
xor
xchg
roll
sbb
jnp
mov
sbb
push
lcall
hlt
scas
cmpsl
cmc
pop
jle
or
pop
daa
fstpt
shll
mov
jb
xor
aad
fists
mov
sbb
arpl
mov
jg
rorb
add
dec
cmp
jmp
divb
push
xlat
jp
inc
pop
decb
test
push
ljmp
push
mov
test
lret
sbb
cmp
xchg
xchg
addr16
fcompl
aad
je
cmp
test
rclb
pushf
int3
daa
repz
out
pcmpeqb
lods
mulb
lods
or
out
data16
icebp
sbb
xchg
pmaxsw
inc
push
cltd
dec
std
call
xchg
sarl
out
leave
xor
or
jns
inc
stc
or
das
mov
ss
aam
jo
xor
sub
aaa
aam
pop
inc
imul
push
add
enter
inc
icebp
scas
les
fidivrl
mov
push
mov
outsl
sub
scas
fidivs
hlt
ret
mov
nop
out
inc
popf
lea
add
pcmpgtw
xchg
loop
inc
pop
fidivrl
fcoms
adc
data16
dec
lock
push
loopne
jno
lods
mov
lahf
adc
xchg
dec
lea
out
jnp
arpl
mov
mov
adc
xlat
sbb
movsl
and
cmp
add
std
adc
cld
lcall
mov
and
inc
dec
shr
shll
nop
xor
js
in
ret
stos
inc
and
sub
shll
mov
xchg
lcall
or
lahf
xchg
mov
mov
pop
fs
insb
mov
xor
cmp
loopne
sub
das
mov
fcoms
shrb
lret
and
jbe
ret
rorb
lret
test
lcall
add
das
scas
inc
scas
jp
call
stc
dec
ds
stc
mov
sub
imul
jle
clc
or
adc
adc
or
hlt
mov
mov
jge
loop
scas
out
add
jo
stc
mov
cmp
test
xor
mov
sbb
xchg
jnp
pop
cmp
je
movsl
sub
shrl
mov
in
xchg
add
in
repz
lret
and
mov
or
mov
cld
inc
push
jno
leave
sub
inc
pop
cmp
mov
jb
rcrb
xchg
lods
fcoms
mov
insl
jmp
cld
pop
push
and
cli
movsb
mov
add
outsb
mov
mov
aad
loope
cwtl
mov
inc
jge
sbb
push
aas
xchg
mov
sarl
shrl
aas
lahf
iret
push
lret
xchg
adc
clc
pop
dec
xchg
ja
inc
test
scas
and
popa
mov
sbb
sbb
cli
xor
pop
sbb
cmp
in
or
lcall
les
fisubs
insb
fildll
ljmp
ret
push
or
filds
push
int
xor
sub
mov
lret
call
adc
cmpsl
out
xchg
iret
aaa
out
xchg
lcall
nop
dec
fdivs
xchg
or
xor
add
inc
cmp
stc
sbb
int
hlt
imul
jle
iret
or
add
les
mov
dec
movsb
stos
enter
mov
dec
in
cmpsl
inc
adc
lods
out
cmpsl
incl
insb
adc
fcoml
imul
cmp
pushf
mov
rcrl
loop
leave
mov
movsb
int3
dec
jno
mov
clc
loopne
scas
xchg
fbstp
ss
jl
inc
dec
icebp
testb
fldcw
jp
xor
fstps
or
add
jb
mov
daa
inc
mov
or
js
imul
push
mov
mov
push
dec
mov
movsb
aaa
inc
fiadds
addr16
repnz
aas
jmp
mov
mov
cmp
inc
xchg
adc
mov
pop
inc
cs
mov
movsl
cmpsb
roll
sub
bound
bound
sub
cmp
xchg
jge
mov
int3
ficomps
in
pop
lahf
aas
push
stos
jae
cmpsl
fbstp
lcall
stos
jecxz
lahf
cmp
ljmp
into
inc
es
pop
loop
cmp
scas
in
in
js
mov
cs
jnp
fcompl
sub
mov
scas
mov
inc
mov
sub
jb
jg
cli
mov
fcomi
testl
stc
xchg
push
popa
cmp
lock
dec
jnp
sub
fwait
inc
mov
jge
test
ret
pusha
cltd
xorl
lahf
hlt
aam
or
repnz
cmpl
sbb
lock
jnp
sbb
notl
adc
xor
jge
adc
adc
cmp
ss
out
or
inc
jb
leave
add
neg
or
inc
jg
lcall
jbe
jmp
add
js
mov
mov
les
jl
jmp
mov
xlat
lcall
roll
xor
push
rcrl
iret
cmp
cmpsb
sbb
lahf
push
pusha
in
insb
mov
ret
aad
icebp
rcrl
xchg
mov
pop
out
sbb
push
testb
xchg
push
jb
dec
pop
inc
aam
aad
fldt
in
lds
js
dec
test
inc
mov
and
add
adc
out
xchg
mov
inc
adc
pusha
mov
movsb
psraw
js
dec
dec
mov
les
ret
sti
arpl
pop
jmp
test
mov
sbb
xchg
add
mov
insl
cmpsl
sub
rorl
add
leave
mov
jno
push
jl
mov
arpl
mov
cld
mov
repnz
test
inc
xchg
or
inc
mov
test
leave
ficomps
mov
not
ds
inc
nop
ja
fstl
cld
cli
or
aaa
or
clc
sub
pop
std
pop
lods
jne
pop
cmpsl
mov
xor
adc
xchg
sti
jns
mov
sti
jnp
push
pop
dec
stc
shl
jmp
pop
xchg
inc
inc
out
pop
jae
aaa
sub
jnp
in
ret
and
lcall
cmp
mov
pop
push
cltd
mov
or
pop
fmull
popa
jno
sbb
mov
sbb
pop
enter
out
or
call
cmc
pop
and
xor
sub
cmc
jl
pop
lcall
dec
outsl
jle
cmpsb
mov
cmp
jmp
sub
aaa
mov
repz
orb
adc
xchg
jb
dec
pop
pop
pop
mov
pop
repnz
scas
push
js
jg
jno
jbe
ljmp
xchg
insl
xor
mov
jo
fmulp
rorb
adc
jecxz
pop
out
dec
cmpsl
cmpl
insl
mov
flds
cltd
or
outsl
out
mov
inc
je
pop
pop
movsb
jle
push
shlb
inc
push
fists
lods
sub
fldt
xchg
pop
cmp
and
or
add
jbe
jnp
movb
mov
pop
xor
les
xor
xor
inc
mov
push
test
mov
add
lods
rcl
jno
inc
and
lahf
movsb
jo
lds
subl
subl
insb
inc
scas
adc
adc
jecxz
stc
fcomps
sbb
jnp
jl
inc
test
mov
cltd
scas
add
xor
mov
fwait
or
mov
pop
into
mov
lods
lock
cltd
fucomip
or
pop
pop
cmp
lcall
mov
pusha
out
lcall
add
pusha
pop
fsubr
fistpll
jmp
ja,pn
loop
test
add
jb
je
pusha
stc
data16
pushf
xchg
inc
cltd
shlb
and
aad
xchg
xor
rcrb
push
mov
aam
daa
mov
roll
imul
xor
lods
push
test
inc
sub
mov
cli
lock
dec
movsb
lret
into
sbb
shlb
mov
sbb
insb
mov
cmp
test
inc
cmp
mov
fadds
test
roll
test
xor
inc
dec
lret
mov
test
xorb
sbb
mov
fcompl
jnp
pop
mov
cmp
scas
icebp
daa
fs
cmp
mov
push
dec
sti
cmpsl
push
pop
test
push
les
call
popf
cmp
push
add
mov
sub
nop
jp
jae
ret
dec
jo
xchg
scas
inc
leave
dec
imul
sbb
cld
and
in
rorb
xchg
pop
movsb
in
mov
pusha
mov
fdivl
int3
in
mov
xor
mov
cmp
inc
dec
std
stos
sub
inc
int3
js
inc
mov
fcmovu
in
jle
aaa
mov
gs
mov
mov
sbbb
test
loop
xchg
test
xor
cwtl
pop
cmc
jmp
or
add
xchg
test
push
jmp
enter
inc
test
mov
push
rcl
mov
rcll
dec
dec
sub
ja
lds
pop
out
push
aaa
mov
ljmp
adc
pop
lea
push
movsb
insl
stos
jno
push
clc
lock
pop
sub
clc
or
push
loope
or
mov
inc
cli
pop
mov
leave
leave
aaa
cmp
mov
bound
inc
jb
xchg
push
clc
push
in
jp
lock
cmp
mov
rol
pusha
cwtl
cmpsl
jns
aas
icebp
fcompl
adc
jno
inc
sahf
lods
lods
mov
mov
sub
andb
pop
jns
in
xor
dec
mov
fidivrs
pop
daa
nop
loopne
or
pop
mov
xor
aam
cmp
into
jns
or
fiadds
xchg
popa
sahf
push
jno
mov
andl
fisttps
gs
mov
mov
mov
add
popa
sub
lods
or
or
mov
lcall
outsb
cmpsb
std
mov
push
push
repz
mov
ficompl
push
inc
add
add
pop
mov
out
scas
lcall
out
shll
stos
cmpsl
push
cmp
mov
jmp
ds
iret
icebp
adc
popa
stos
sub
stos
and
sub
into
lea
push
xadd
push
jo
test
cmpsl
repz
push
jle
scas
push
sub
fsubp
sub
inc
adc
and
inc
xchg
je
roll
mov
xchg
cli
or
jp
test
adc
lds
add
iret
gs
repz
lock
pop
test
push
xor
test
xor
pushf
imul
mov
pop
push
fsubl
cmp
pop
rcl
xchg
xor
cmp
loop
dec
cmp
fsubrl
jle
xor
push
sub
hlt
inc
pop
jecxz
test
aaa
jp
cld
in
mov
sub
lods
adc
popa
sti
les
sub
mov
pop
leave
pop
jbe
mulb
push
mov
pop
scas
or
lds
sahf
lcall
arpl
push
xchg
xchg
push
mov
xchg
push
inc
mov
mov
push
jmp
and
stos
addl
out
sub
pop
int
adc
insl
jns
push
das
or
loopne
jl
fstl
and
vcvtps2pd
or
fsts
xor
pop
xchg
scas
jl
inc
test
repnz
lret
leave
shl
pusha
jb
pop
and
bnd
dec
xor
in
push
sub
js
xchg
loope
or
sbb
cmp
imul
inc
jle
mov
repz
fcomip
mov
inc
imul
iret
cld
inc
and
stos
in
jmp
jo
or
icebp
add
gs
lret
mov
fadds
sub
pop
jp
mov
pop
adc
mov
gs
sub
nop
int3
mov
out
std
jae
je
fsubr
rorl
add
cmp
cmp
cld
pusha
push
xor
rcrb
mov
mov
fxch
lods
test
mov
in
pusha
inc
shll
shlb
iret
mov
loope
leave
adc
or
and
dec
adc
test
dec
test
ret
push
js
hlt
jb
fldenv
mov
out
into
lret
pusha
mov
in
pop
add
lret
jmp
jge
cmp
fidivs
push
pop
iret
mov
jmp
push
rcrl
in
pop
and
data16
fld
mov
ds
loopne
jge
add
push
sub
cmpb
ljmp
pop
sarb
jl
or
ret
pop
punpcklwd
xor
out
out
ss
nop
es
cs
lret
xchg
dec
out
adc
add
push
push
bound
incl
inc
cs
idivb
scas
cld
or
cmpsl
sbb
lret
mov
ficoms
ss
lods
xchg
loopne
push
push
adc
js
sub
rep
push
fwait
add
idivl
inc
adc
cmpsb
sub
dec
add
test
push
sbb
inc
test
dec
cmp
inc
push
pop
adc
lea
xlat
jg
int3
out
jge
stc
push
int3
jmp
and
jp
into
xor
scas
inc
js
ds
adc
sti
dec
lods
das
loop
aad
mov
nop
cmp
jmp
call
cmp
fmull
mov
adc
lcall
in
out
sbb
and
jbe
sub
or
add
xchg
jbe
les
in
cmp
js
xor
insb
add
pusha
into
add
out
inc
jb
adc
outsl
inc
push
jno
insb
lahf
lahf
mov
pop
icebp
push
jo
idiv
icebp
adc
xor
adc
jp
dec
rcll
or
in
adc
mov
jmp
sahf
sbb
loope
int3
aad
jae
jae
pop
mov
push
jne
pop
mov
cltd
cld
adc
stos
hlt
sbb
rclb
push
lds
mov
add
in
or
jne
lods
push
cmp
cmp
lahf
into
in
pushf
push
scas
jbe
xchg
leave
inc
test
xchg
jecxz
cmc
cmp
mov
nop
xchg
and
dec
jmp
xlat
call
sahf
jl
xchg
jne
jmp
jge
sbb
dec
adc
outsb
inc
je
inc
push
push
push
ljmp
cmp
pusha
xor
ror
mov
lret
jp,pn
push
sub
push
xchg
hlt
jne
jne
aas
mov
jo
sub
mov
pop
mov
xchg
jle
pop
iret
lret
mov
insl
ds
sbb
push
pop
in
pop
dec
mov
mov
mov
sbb
aas
popf
sub
push
pop
xchg
mov
sbb
pushf
inc
pop
inc
xchg
mov
jle
loope
pop
dec
jb
lcall
popf
arpl
push
aas
inc
add
mov
fidivrs
stos
popf
imul
jnp
xor
daa
es
or
loope
ja
xchg
and
mov
mov
mov
adc
mov
popa
lea
and
mov
or
sub
gs
cmp
jnp,pn
rol
ret
xlat
in
xchg
jecxz
push
dec
push
dec
sbb
sub
iret
xchg
stos
add
int
inc
or
lret
or
xor
addl
adc
inc
add
mov
adc
and
cmp
push
ret
lret
mov
imul
push
xchg
adc
push
mov
out
popa
mov
adc
xor
lock
or
shrb
adc
cmp
insb
dec
lcall
or
pop
sti
test
jecxz
jmp
mov
adc
popf
xor
sub
adc
pop
adc
sbb
mov
xchg
cmc
loopne
sub
jmp
arpl
gs
decb
loopne
out
cli
pushf
in
aas
repnz
je
loopne
loop
xchg
and
jns
pushf
and
xor
hlt
lahf
add
data16
mov
int3
inc
pop
sbb
ret
pop
into
inc
test
cmp
adc
rcr
or
cmpsl
sbb
push
jb
pop
pop
fisttpll
sub
aam
xor
mov
mov
jne
and
ret
or
xchg
fistl
mov
push
jg
inc
and
and
fwait
rorl
insl
dec
test
ret
push
jne
inc
out
lret
fwait
inc
mov
fbstp
xchg
add
and
pop
ret
inc
out
jbe
cmc
mov
fisubs
enter
xchg
inc
std
call
dec
pop
jmp
test
jo
push
xor
and
test
cld
xchg
mov
jg
or
es
daa
mov
push
faddl
pavgw
insb
ja
mov
pop
in
mov
hlt
mov
mov
lods
or
inc
insb
pop
inc
test
insl
or
jb
fidivrl
jbe
sub
not
jnp
sub
mov
xchg
push
lret
and
popa
int
aad
push
jnp
cmp
pop
add
shll
gs
add
add
ds
push
mov
sub
jne
mov
je
or
inc
jp
pop
iret
dec
hlt
dec
add
mov
inc
in
aas
mov
mov
add
push
and
ret
add
test
sub
xor
addl
pop
aaa
enter
sar
fwait
pop
adc
inc
push
fcom
push
push
das
or
adc
add
dec
in
clc
jle
popa
aas
jge
jnp
cmp
xor
test
xor
push
inc
repz
fnstcw
jbe
fcmovbe
insb
mov
pop
xor
std
pop
cwtl
jns
stc
ret
inc
cmp
xchg
mov
mov
pusha
dec
sbb
push
pop
push
add
popf
enter
in
pop
dec
stc
sti
push
jecxz
mov
sub
cmp
gs
out
cmovg
addr16
sub
arpl
jbe
or
pop
out
xchg
jl
sti
mov
hlt
and
push
cmp
xchg
dec
pop
stc
and
sbb
sahf
push
or
lcall
xor
rolb
dec
stos
lcall
xorb
push
shlb
fdivr
lret
sbb
jmp
sbb
mov
push
repnz
xchg
mov
cwtl
inc
bound
push
fbld
sbb
daa
outsb
mov
adc
test
outsb
xor
push
adc
sub
or
mov
xchg
imul
lret
inc
pop
jle
fisttpl
cmp
jp
dec
out
xchg
pop
dec
dec
dec
orb
nop
test
test
pop
jbe
pushf
mov
jge
scas
jle
shlb
outsl
xor
xchg
dec
adc
movsb
jb
jb
cmp
cs
xchg
repz
popf
repz
push
test
push
pop
rcr
in
stos
pop
cs
ss
push
sti
mov
out
jmp
cmpsb
cmc
push
push
data16
out
in
pop
ror
dec
sub
ffree
mov
add
push
mov
sbb
in
lahf
loopne
stos
and
mov
into
or
adc
insb
jbe
lods
bound
js
sub
mov
mov
sub
xchg
fmull
mov
popa
inc
shl
imul
je
pop
mov
aaa
mov
rcrb
test
mov
dec
insb
orb
push
dec
xorb
jl
mov
jbe
mov
cmp
cmp
gs
aad
push
movsl
cs
mov
lods
das
mov
rorb
lds
gs
mov
je
jne
popl
xchg
andb
rclb
pop
mov
out
pop
test
scas
insb
mov
pop
push
inc
pop
cmp
mov
inc
loop
shr
push
lds
cmpsl
test
cmp
shr
sbb
lret
clc
inc
xor
sub
mov
dec
mov
sub
sbb
xchg
cmc
sub
ds
lahf
enter
adc
xchg
js
aaa
pop
mov
xchg
cmp
ja
add
adc
push
or
push
inc
jae
jge
or
enter
jg
pop
lock
adc
iret
mov
jle
adc
pop
pop
bound
cwtl
dec
insl
fldl
pop
ljmp
jl
js
xchg
push
or
dec
fsubrs
push
adc
or
sbb
adc
es
ss
inc
in
push
and
lods
fildl
jnp
xor
filds
outsb
dec
ds
adc
test
roll
cmp
mov
stos
lock
xor
or
jnp
add
lret
xchg
sti
das
mov
fs
push
sub
imul
fnstenv
push
into
mov
outsb
sbb
push
and
and
mov
jo
jmp
je
clc
lret
lret
ljmp
add
stos
adc
sub
add
sbb
jp
jecxz
cmp
shll
adc
sbb
int
xchg
jae
scas
ret
xor
jle
loope
inc
jp
adc
cmp
es
lea
mov
sub
add
sbb
hlt
cld
mov
adc
jnp
test
insb
out
mov
xchg
mov
fs
sub
and
push
sarb
outsb
sbb
pop
cwtl
sbb
stos
pop
gs
inc
cld
aam
or
xor
lcall
int
jne
jns
xor
ja
xchg
xor
pop
ds
jae
outsb
cmp
addb
add
ja
mov
cmpb
sub
push
dec
test
pusha
push
pop
inc
pop
aas
adc
pushf
mov
jae
inc
dec
scas
sar
scas
sub
cld
pop
mov
mov
push
ja
adcl
xchg
sub
repnz
xor
mov
repnz
inc
aaa
mov
cmp
lret
dec
mul
jg
push
xchg
mov
testb
movl
sub
mov
aaa
sub
test
or
outsl
icebp
lret
imul
xchg
lock
loopne
mov
mov
ja
enter
pop
pop
out
lds
cmpsb
xor
inc
mov
xchg
xchg
in
out
into
leave
bnd
mov
push
cmpsb
aad
mov
rclb
xchg
sbb
lods
jb
sbb
data16
scas
pushf
mov
scas
lods
sbb
inc
dec
dec
or
mov
std
jle
mov
aad
fmull
sarl
es
pusha
nop
int3
dec
insl
aas
scas
insb
hlt
insl
jp
test
scas
sbb
inc
sbb
cmpsb
test
pop
mov
mov
pop
push
xchg
ljmp
adc
aas
lock
cmp
mov
mov
dec
cwtd
push
dec
add
imul
aad
js
or
mov
inc
push
outsl
inc
add
das
cltd
sbb
sub
dec
push
dec
adc
pop
cmp
cwtl
movl
aaa
leave
xor
adc
inc
adc
pop
jmp
in
mov
popf
mov
mov
js
cmp
jo
cs
mov
adc
jae
add
cld
addr16
adc
or
jnp
push
pop
sbb
lods
aaa
lcall
fxch
cmp
test
pop
dec
pop
inc
outsl
ja
movsb
inc
lods
mov
push
mov
scas
mov
scas
mov
insl
roll
stos
push
outsl
es
lret
repz
scas
xchg
ret
xchg
add
lahf
outsb
jmp
dec
movsb
inc
or
dec
push
push
cmpsl
xchg
loop
int3
fsubp
xchg
adc
mov
out
xchg
arpl
dec
lods
push
test
out
shrb
pop
out
mov
mov
jg
imul
orb
lret
adc
out
or
call
fwait
jge
pop
out
or
ret
jecxz
test
mov
jecxz
andl
sub
addr16
cwtl
inc
fdivl
rcll
mov
pop
lahf
std
add
or
mov
mov
lds
fdivs
jnp
push
mov
outsl
fdivs
xchg
inc
mov
jl
mov
mov
jg
push
pop
mov
dec
mov
cmp
lret
pop
and
mov
pop
imul
shr
push
jns
popf
rcl
pop
lret
push
das
inc
ljmp
or
inc
sete
lock
lcall
sbb
and
pushl
jle
adc
cmp
fnstcw
sahf
or
adc
pushl
leave
fcomi
sarb
arpl
int3
imul
jmp
cli
or
inc
mov
xchg
loop
bound
icebp
cmp
push
mov
add
outsl
leave
sbb
mov
pushf
add
mov
testl
add
insb
adc
cmp
in
daa
decb
rol
xor
push
roll
or
pop
pushf
test
repnz
xor
fimuls
jno
mov
aam
out
push
mov
cli
sbb
pusha
movsl
push
sub
in
inc
hlt
add
inc
push
sub
xchg
cmp
xor
dec
add
leave
pop
push
lret
xchg
jl
pop
shlb
rcll
in
pop
test
out
xor
data16
and
rclb
mov
lret
push
sub
std
mov
sbb
lds
int
push
mov
repnz
cmp
int3
in
cmp
push
jb
adc
sbb
mov
push
or
jg
mov
add
movsb
nop
cmp
adc
lcall
cmp
cmp
lret
jp
enter
test
je
rclb
jg
xor
xchg
sub
jne
scas
mov
leave
fcoml
in
pop
sar
xor
daa
out
mov
or
push
jae
push
lret
popa
sub
les
cli
sub
scas
dec
shll
ja
cltd
call
adc
and
into
jl
jns
test
mov
sysenter
mov
xor
lods
cmp
leave
leave
mov
jl
test
xchg
popa
test
sbb
imul
repz
data16
into
rcr
push
imul
fildll
lcall
popl
mov
mov
jo
pop
je
loope
fildll
dec
mov
adc
adc
pop
and
or
ja
ja,pn
lds
mov
mov
ds
mov
pop
lret
cld
addr16
std
jle
xor
xchg
inc
sbb
inc
imul
jne
cmpsb
sarl
push
loopne
cmp
fildll
sbb
iret
mov
mov
push
dec
sbb
pop
cld
pop
adc
push
jne
rcrl
pop
sahf
aam
in
lahf
cmp
jae
repnz
fadds
bound
lahf
aas
or
outsl
dec
pop
sbb
cmpb
mov
cli
pop
je
add
or
jmp
lea
test
or
pushl
cmpsb
xchg
sbb
and
test
movsl
out
lock
add
jae
fistps
push
pop
or
mov
mov
int
nop
stos
mov
and
push
mov
fwait
push
push
push
cmp
sub
inc
push
jnp
leave
mov
mov
pushf
nop
out
sbb
mov
adc
test
push
ss
adc
addl
fstps
sbb
inc
cli
dec
out
jb
sbb
inc
test
stos
cmpb
scas
push
movsl
mov
test
and
jmp
mov
imul
or
inc
cli
ds
lods
arpl
push
int
aas
pop
jmp
std
xchg
sub
js
mov
and
sbb
ret
push
test
test
cwtl
fdivrl
scas
xor
in
ljmp
lret
mov
pop
fdivs
ret
jecxz
xlat
out
aad
icebp
clc
leave
pushf
jge
xorl
cld
mov
data16
fdivrp
or
ja
aam
inc
push
clc
call
mov
adc
into
xor
aas
in
cmp
pop
imul
andb
xlat
inc
sub
or
incl
cwtl
xchg
leave
cmp
in
or
ds
aas
aaa
testb
cmp
jecxz
mov
movl
dec
add
xlat
loopne
and
cmp
lock
xchg
sbb
imul
jb
loop
and
jle
mov
rcl
stc
xor
je,pt
lret
nop
inc
mov
nop
faddp
mov
lea
andb
pop
int3
rclb
cs
addr16
cwtl
cmpsb
sub
dec
mov
dec
movsb
cmp
inc
lss
out
xchg
call
jecxz
pop
dec
sub
mov
and
into
xlat
sub
je
repz
inc
lahf
arpl
xlat
cmp
loopne
repnz
ret
imul
lret
push
movsl
fcompl
fnstenv
inc
loopne
push
in
inc
pusha
ret
and
addl
add
cld
hlt
xchg
mov
fbld
cli
mov
insl
pop
sbb
push
outsb
fbld
cs
or
cmp
push
pusha
jge,pt
mov
cmp
imulb
fdivl
call
das
fildll
sahf
push
pop
jecxz
push
cmpsb
mov
mov
retw
push
cmp
mul
addl
enter
xor
int
les
repz
pop
push
fidivrl
sbb
dec
jns
dec
add
loopne
lea
mov
popa
or
ss
push
movsl
cmp
mov
xchg
into
jbe
lret
fistpl
inc
ljmp
ret
or
out
mov
clc
es
or
loopne
dec
push
fidivrl
xchg
jge
and
jg
shlb
fmulp
jmp
filds
hlt
roll
jno
lods
or
and
and
fmull
fcmovb
lock
sti
pop
adcl
dec
push
add
sub
mov
popf
mov
pop
jno
leave
out
daa
loope
scas
outsb
inc
clc
mov
mov
mov
hlt
push
outsb
mov
jl
enter
and
sbb
stos
adc
sti
dec
or
mov
js
in
cwtl
stc
add
push
and
repnz
nop
les
xchg
stos
daa
mov
mov
pop
and
mov
sbb
pop
mov
dec
sahf
cltd
sub
rcrl
inc
jmp
fwait
dec
leave
movsb
jne
push
jp
xor
sub
mov
push
clc
dec
jle
pusha
addr16
mov
and
jae
insb
cmp
jecxz
cwtl
push
enter
sub
dec
and
ss
dec
rcrb
dec
adc
push
inc
inc
ret
nop
out
mov
push
pop
out
addr16
icebp
jb
out
push
out
outsb
test
sub
adc
inc
clc
or
ds
mov
test
stos
out
inc
insl
frstor
les
jbe
cmp
sbb
stos
test
insw
and
push
mov
cmc
xchg
outsb
fwait
in
popa
xchg
mov
icebp
push
mov
sbb
pop
xchg
mov
ljmp
clc
cltd
or
stc
cmpsl
jge
cli
dec
pushl
pop
and
cmpsl
jbe
push
inc
lods
xchg
sub
icebp
jecxz
ret
orl
sbb
and
leave
inc
insl
pop
ficompl
inc
mov
jmp
popa
ljmp
xor
call
mov
mov
ljmp
dec
cmpsl
ljmp
jnp
mov
mov
add
mov
movsb
jle
add
dec
xchg
fsubp
aas
movsb
test
mov
insb
inc
mov
dec
rcrb
sbb
movsb
adc
add
int3
std
and
xchg
movsb
out
mov
fidivl
mov
movsb
lret
dec
cmp
mov
mov
push
js
sbb
jns
jecxz
pop
push
add
bound
mov
xchg
jne
mov
sti
xchg
inc
inc
pushf
inc
sub
incl
scas
bound
xchg
inc
movsb
jmp
mov
push
clc
fdivr
in
xchg
cmp
sbb
or
jbe
mov
mov
in
mov
mov
xor
fs
push
fwait
pusha
adc
cmp
int3
lds
outsb
lahf
shll
lret
in
out
fwait
pop
mov
or
sbb
mov
pop
insl
and
pop
in
mov
orl
push
mov
jmp
jle
dec
sbb
aam
add
sbb
adc
jmp
mov
jl
mov
pcmpgtd
jle
inc
mov
inc
mov
mov
or
inc
xchg
bnd
insl
jecxz
mov
sub
hlt
je
mov
xchg
adc
fidivs
mov
insl
fisttpl
mov
mov
bound
movsb
xor
lcall
pop
xchg
or
div
lret
imul
sbb
imul
data16
xchg
push
fcom
jbe
iret
nop
popa
pusha
shrl
mov
mov
push
clc
aaa
push
pushf
pop
add
mov
add
ret
shll
pop
jae
bound
add
outsl
arpl
pop
push
scas
imul
mov
fwait
lea
jno
lea
mov
mov
out
enter
xlat
dec
jne
and
xor
pop
jl
icebp
aaa
popa
adcb
mov
mov
rclb
leave
test
fldl
lret
cmp
subb
pop
or
add
and
xchg
ljmp
cmp
jns
mov
pop
jns
mov
arpl
dec
fcoms
fcomip
fldl
lock
jno
push
roll
mov
mov
dec
xor
and
mov
cmp
jle
ror
out
push
or
aas
dec
jge
test
inc
jl
je
enter
sahf
inc
mov
jle
xor
mov
mov
mov
or
rcll
xor
testl
mov
aaa
lods
leave
cld
mov
xchg
or
cmp
inc
xchg
pop
jge
negb
push
pop
mov
scas
mov
popf
pop
in
cmpsl
lahf
cmp
int3
mov
es
ja
xchg
pop
imul
jmp
lods
xchg
inc
xchg
mov
jge
pop
lcall
or
movsl
gs
aaa
lock
jb
jns
popf
mov
frstor
jg
or
out
loop
out
add
lahf
stos
sbb
cmp
std
lret
sarl
data16
add
add
mov
mov
inc
adc
push
push
push
mov
push
push
sub
pop
and
shlb
mov
dec
outsl
sbb
mov
dec
jnp
xor
xlat
add
sbb
in
addr16
sub
loop
repnz
push
movsl
rcl
adc
xor
mov
cmc
lods
dec
fisubs
dec
fsubrs
push
dec
fmul
jne
jp
dec
cmpl
mov
jmp
mov
push
stc
addr16
scas
push
pop
add
shl
dec
fisttpl
push
jl
mov
and
in
push
and
xchg
mov
fbstp
inc
ret
ljmp
sbb
loopne
jnp
in
xor
lahf
jno
iret
mov
and
sub
cmc
xor
icebp
int
push
add
dec
hlt
push
xchg
sbb
scas
test
push
dec
xor
inc
dec
add
daa
in
and
or
xchg
jecxz
xor
mov
push
or
jp,pt
sbb
subl
push
lds
lahf
inc
add
xor
inc
dec
sti
pop
cmpsb
and
sub
lahf
sahf
inc
movb
cmp
mov
pop
outsl
mov
cltd
les
cmp
and
push
fists
aaa
xchg
call
inc
mov
xor
or
dec
loop
xchg
xor
jns
push
fwait
lret
dec
xlat
push
or
pop
push
sbb
dec
icebp
add
dec
adc
cmp
stos
sub
xchg
jge
xor
std
test
push
sar
ljmp
push
mov
ret
ja
xchg
xchg
mov
in
popf
out
mov
cmp
lcall
loop
andl
jecxz
sub
call
mov
jns
cmpsl
push
icebp
incl
pusha
mov
aaa
add
mov
stos
pop
push
cmc
add
cwtl
nop
pop
jns
xchg
ja
out
adc
sbb
stos
outsl
push
in
out
out
lock
and
add
and
pop
int3
xor
ljmp
addb
in
jnp
lret
xchg
sbb
sub
add
cmp
adc
sarb
aam
outsl
adc
shr
das
es
js
cli
add
aam
fcmovb
daa
call
xor
int
mov
js,pt
pop
pop
lret
clc
lds
pop
int
or
mov
movsb
rcll
mov
xchg
lcall
aad
rcl
shll
pop
and
xor
xchg
push
pop
ret
aam
lahf
push
xlat
xor
loop
enter
pop
das
fucomi
decl
dec
xor
mov
inc
fstps
inc
and
imul
rcr
inc
sbb
xchg
hlt
xchg
cmp
push
push
out
lods
xor
data16
test
lret
stc
push
push
mov
arpl
lods
inc
aam
xor
xchg
sub
lcall
ds
imul
xchg
fdivrs
sub
jnp
fdivrl
lahf
sub
int3
fmul
loop,pn
push
lret
fidivs
push
dec
cld
pop
add
fldt
ds
push
inc
daa
lret
jnp
mov
cmp
xor
adc
cmp
inc
mov
mov
ljmp
ja
jg
aad
es
insb
lds
shrl
mov
mov
jb
and
leave
dec
dec
sub
mov
dec
gs
out
pop
pop
call
sub
jb
cld
fstpt
dec
sbb
sbb
sarb
repz
je
mov
adc
xchg
mov
repz
rcrb
push
loop
ss
aaa
test
lock
dec
jnp
push
push
in
inc
lcall
sbb
inc
mov
and
adc
sbb
jge
push
push
fisubrs
mov
mov
int
adc
add
pop
inc
xchg
adc
lods
and
cmp
nop
mov
mov
sub
dec
js
adc
scas
xor
add
push
xorl
push
and
push
sbb
pusha
in
push
mov
and
jo
xor
notl
mov
cmp
mov
pop
pop
dec
cmp
push
shlb
fnsave
and
dec
push
dec
add
mov
push
dec
insb
repnz
inc
sub
push
and
rcrb
sahf
dec
repnz
adc
jns
adc
cli
xor
mov
cmp
pop
xchg
cmp
push
int3
jg
mov
sub
push
popl
rclb
and
cs
adc
loope
dec
les
dec
sbb
jle
adcl
lcall
xlat
stos
repz
pop
xchg
mov
jb
adc
cmpsl
out
in
dec
xchg
push
add
jb
fnstcw
divb
sbb
or
jmp
jmp
lahf
dec
push
xor
fcmovu
cwtl
ljmp
in
outsb
ret
pop
jbe
xchg
imul
inc
dec
jp
inc
out
sti
inc
mov
cli
mov
std
cs
mov
xor
ja
xchg
mov
jge
fadds
popa
icebp
mov
push
fimuls
movsl
xor
adc
outsl
mov
dec
push
in
dec
rclb
add
loope
out
cwtl
adc
mov
jne
mov
outsb
xchg
addr16
andl
mov
dec
insl
pusha
adc
repnz
pop
fidivl
mov
pop
fdivrl
push
inc
push
xor
and
into
push
lods
mov
aas
mov
leave
cmpsb
and
dec
xchg
xchg
push
jnp
and
and
lret
push
mov
movsl
mov
clc
int3
mov
in
test
xchg
lock
rclb
arpl
mov
inc
repnz
jl
enter
std
mov
mov
cmp
aaa
mov
dec
lahf
jo
push
enter
aad
add
push
sbb
sub
test
and
iret
ljmp
pusha
into
rol
lret
dec
mov
out
cmpsl
sahf
xchg
stos
jne
push
sub
mov
or
add
ljmp
xor
mov
push
lret
test
dec
cmp
push
fdivr
or
cld
jmp
aad
or
out
out
xor
jae
lcall
or
and
das
sbb
cld
cs
inc
add
addr16
mov
jmp
jnp
xchg
popa
mov
xor
lret
testl
ss
fcomip
sti
pop
and
outsb
mov
andnps
fsubr
cmpsb
cli
jmp
icebp
inc
mov
iret
mov
xchg
dec
or
push
adc
test
push
mov
fcoms
cwtl
pop
and
inc
mov
and
scas
ret
iret
mov
mov
pop
mov
or
sti
push
sbb
add
inc
dec
pop
xchg
in
js
xchg
xchg
pop
mov
dec
xchg
cmc
push
inc
inc
jne
add
lods
aad
fiaddl
xchg
mov
scas
push
lcall
repz
and
fnstsw
addr16
outsw
pop
mov
ja
rcrl
or
stos
adc
inc
std
pop
mov
or
lds
mov
ja
xchg
fstpt
mov
int
mov
dec
int3
sbb
mov
sbb
push
jge
das
incl
jno
or
adc
adcl
sbb
add
pop
mov
xchg
std
into
into
mov
rorl
and
lret
stos
adcl
aad
mov
test
mov
js
mov
and
out
xor
xor
sub
or
cwtl
daa
add
mov
xor
jno
rolb
in
xor
push
mov
sub
ljmp
cli
and
add
jb
inc
repz
ret
sbbb
or
jno
mov
lcall
add
pop
dec
push
loopne
pusha
inc
pop
adc
push
add
ss
inc
push
fwait
inc
out
outsb
test
jp
pop
out
sub
leave
incl
inc
xorb
sbb
xlat
lods
ret
xor
nop
or
pop
shll
ret
jns
loop
xchg
xlat
sti
ret
int3
and
mov
dec
notb
push
stc
psrlw
pop
imul
cmpsl
dec
add
jl
or
popa
cmp
pusha
inc
jp
cmp
aaa
mov
and
cltd
test
xor
lret
repz
popa
cmc
repz
sbb
in
mov
rcrl
out
inc
pop
jl
in
push
clc
rcr
sahf
jae
mov
roll
stos
add
mov
jl
xchg
jecxz
outsl
scas
popf
or
push
repnz
mov
mov
out
inc
shrb
and
push
idiv
or
mov
jo
insb
ja
shrl
adc
aaa
mov
lds
daa
shll
in
xchg
sub
scas
push
inc
movsl
add
sti
dec
pop
out
gs
repnz
xor
inc
dec
movsl
push
jae
jmp
out
pushf
dec
xor
mov
push
xor
xor
cli
stc
mov
jnp
jmp
cltd
mov
int3
mull
imul
es
or
and
fldl
push
and
push
jg
xchg
jge
rcrb
jge
fidivs
ja
push
mov
or
test
loope
dec
outsl
imul
insl
pop
push
or
cmpsl
or
in
ret
call
daa
sarb
out
sbb
fsubrl
mov
outsb
icebp
dec
pop
fdiv
inc
aaa
mov
inc
rcr
adc
and
loope
loopne
iret
scas
mov
mov
push
ljmp
dec
inc
mov
imul
aas
lods
incb
adc
negb
or
scas
mov
stc
sti
clc
repz
or
cld
fwait
mov
test
sbb
dec
addb
data16
mov
xor
dec
push
xlat
mov
sub
xchg
xchg
mov
pop
mov
popf
push
pop
push
or
je
loopne
mov
fildl
inc
cltd
out
fisubrl
cmpsb
out
stos
dec
push
cmp
imul
enter
push
data16
ficoms
push
inc
and
int3
adc
stc
push
jno
fstps
and
stos
jnp
xchg
out
add
gs
hlt
push
cltd
sahf
sbb
xchg
in
ss
data16
and
xchg
sub
lret
inc
pop
and
and
addr16
pusha
push
jmp
je
adc
cmovs
pop
mov
jp
repnz
ss
repz
cmp
arpl
int3
insb
xchg
cmp
subb
aam
mov
int3
addr16
xor
jae
jl
call
loop
test
stos
mov
ret
jp
insb
mov
icebp
add
inc
pop
pop
dec
adc
jnp
adc
cli
mov
add
cmpsb
push
leave
push
aam
aaa
nop
ja
mov
jecxz
outsl
aaa
mov
push
xor
mov
gs
dec
sti
jmp
adc
mov
addr16
mov
mov
cmp
cmp
xchg
daa
sbb
mov
and
push
outsl
aam
ds
fs
cmp
ret
xor
cmc
dec
icebp
sbb
jp
push
in
nop
gs
xchg
jmp
mov
dec
dec
sbbb
lcall
aaa
inc
and
mov
fcomp
inc
lea
push
shrb
and
sub
repz
mov
cmp
lods
mov
repnz
mov
aam
js
loope
inc
xor
gs
mov
jp
inc
test
mov
call
sub
lcall
sahf
push
jne
clc
movsl
mov
gs
xor
pop
pushf
aaa
lds
adc
cmp
add
mov
leave
inc
dec
adc
mov
xlat
icebp
int
mov
add
jmp
mov
inc
cltd
test
daa
je
xchg
ds
add
xor
repz
pop
inc
fs
sbb
mov
sbb
dec
pushf
cli
test
je
dec
mov
pop
pusha
iret
dec
int3
js
shl
inc
imul
insb
mov
xor
xlat
xor
push
xchg
je
and
ret
mov
mov
dec
pop
or
push
lods
fistpl
shlb
dec
fadd
xchg
arpl
es
sbb
loopne
pop
mov
pop
adc
shrl
mov
aaa
aaa
pop
inc
shll
fcomip
push
ror
cmp
pusha
jmp
or
imul
movsb
popf
call
jmp
mov
xor
fstpt
outsb
into
fmul
lret
cmp
arpl
loopne
jg
pop
ds
xor
in
jle
cltd
pushf
inc
leave
fld
out
jo
xchg
loopne
jne
push
mov
lods
mov
inc
jmp
adc
pop
mov
imul
mov
xor
cmpl
push
loope
std
mov
xchg
xchg
in
cmc
addb
push
sbb
sub
scas
loopne
xor
clc
in
inc
or
std
mov
pop
sti
lret
popf
mov
sbb
cmc
or
push
lret
inc
mov
fdivrl
cmp
xchg
sbb
in
xchg
leave
and
aam
test
ja
pop
mov
mov
repnz
addb
out
shlb
jns
aad
jbe
cmp
cmp
shufps
sti
scas
xchg
add
ja
sub
les
jp
xchg
push
adc
xor
sub
imul
mov
int3
inc
ja
inc
and
pop
jne
mov
shrl
xorl
daa
lcall
sub
or
ja
mov
jns
rclb
jns
mov
test
popf
xchg
xor
jnp
xchg
xchg
inc
bnd
stc
jl
mov
icebp
pushf
sub
addr16
xchg
dec
jge
outsl
mov
mov
jae
fs
test
das
push
xchg
mov
scas
add
jl
pop
cmpsl
lods
add
loop
out
mov
enter
sbb
xchg
sbb
imul
je
out
enter
mov
sub
lods
or
movsl
out
adc
jo
inc
stc
mov
out
aad
sbb
xchg
dec
in
sub
ja
out
and
clc
enter
dec
es
cld
and
and
dec
in
xor
fwait
push
or
and
dec
loopne
in
jmp
push
mov
inc
into
repnz
push
addr16
adc
imul
dec
imul
add
je
mov
and
test
pop
cld
xlat
jl
jmp
mov
dec
aaa
ja
lahf
dec
into
push
cmp
pop
les
aas
sub
mov
sub
bound
test
or
cli
adcb
adc
push
lcall
and
mov
fcomi
push
out
inc
out
cltd
sbbl
push
mov
int3
dec
inc
arpl
mov
xor
mov
push
mov
das
int
jecxz
sub
xlat
cmp
or
inc
jbe
int
and
arpl
int3
push
icebp
imul
adc
pop
shll
orl
xor
pop
mov
sarb
sub
in
pop
push
xchg
arpl
xchg
push
popa
int
shrb
adc
adc
test
or
ljmp
aam
icebp
clc
cmpsl
rcll
iret
out
popa
mov
decl
push
sbb
scas
das
or
sub
fwait
sbb
ret
push
sub
bound
cmc
shr
mov
mov
mov
jne
rclb
jbe
cmp
add
mov
movb
pop
pop
push
in
lret
test
fisubrs
xor
cmp
mov
and
cmpsl
clc
mov
jg
cmpsl
adc
xchg
or
jmp
hlt
test
jecxz
cmp
scas
pop
push
and
cmp
mov
jmp
mov
dec
mov
stos
call
xchg
jecxz
mov
clc
cmp
lret
lock
pop
pop
pop
pop
lods
mov
imul
add
mov
dec
ds
bound
pop
push
in
imul
sbb
jnp
pop
das
xchg
ficomps
andb
pushl
inc
bound
pushw
clc
mov
dec
pushf
enter
pop
lds
mov
sub
je
mov
nop
shll
bswap
or
pop
mov
sub
sahf
and
mov
inc
lahf
leave
jge
cmp
inc
mov
test
jbe
mov
cltd
stos
cli
and
sbb
pop
and
jb
and
icebp
test
cmpsb
jle
test
fmul
cmpsl
addr16
sti
mov
pop
out
ffree
pop
sbb
repz
jae
inc
mull
stc
cmp
mov
inc
mov
mov
cmp
aas
jno
inc
mov
stos
xchg
adc
cmp
outsb
mov
out
mov
loopne
gs
bound
inc
inc
jbe
sbb
sbb
lret
lcall
pmuludq
es
jmp
scas
mov
pop
iret
lcall
mov
imul
pop
cmovs
dec
imul
adc
test
fsubl
lds
out
test
daa
jb
out
xchg
icebp
aas
push
popa
push
lret
push
sub
cmc
xor
jns
sbb
in
dec
xchg
loope
xor
mov
in
mov
call
pop
and
jnp
ds
rcrb
inc
scas
xchg
sbb
add
adc
scas
scas
mov
int
push
call
fiadds
aas
jle
mov
jp
cmp
icebp
push
xchg
push
pop
pushf
xor
xchg
jno
xchg
jbe
out
imul
nop
add
adc
es
mov
push
out
adc
lret
lcall
cmp
shrb
pop
jnp
out
ds
lods
rcl
out
stos
inc
mov
inc
xchg
data16
jge
adc
cltd
gs
xor
mov
pop
xchg
pop
sub
popa
mov
pop
gs
xlat
dec
call
push
sbb
arpl
dec
mov
and
adc
jmp
pop
and
dec
or
and
ret
cwtl
adc
push
push
add
into
xlat
in
es
leave
ror
inc
call
sub
fnstcw
xor
cwtl
sub
fmul
add
push
xor
ret
shlb
lahf
lock
push
lahf
push
pop
imul
bound
cld
leave
dec
xor
fadd
popf
loopne
push
nop
cltd
sbb
jns
mov
or
test
cmp
jno
into
and
jbe
outsl
pop
ljmp
stc
loopne
enter
pop
xchg
pop
in
inc
fstpt
in
cmp
das
inc
inc
push
shll
dec
mov
rol
test
jae
loopne
lahf
inc
xchg
mov
nop
or
lock
aaa
pop
cs
fcomp
adc
ljmp
pop
fisttpl
stos
jle
mov
cmp
sbb
bound
arpl
mov
aaa
push
inc
xchg
fwait
lds
jp
movsl
cmc
ljmp
lret
push
stos
lods
dec
xor
fisubs
movsl
mov
inc
xchg
lock
or
mov
or
arpl
inc
int
sbb
cmp
out
jmp
mov
xchg
fstpt
xor
mov
das
pop
out
rclb
push
cmp
xor
mov
outsb
dec
fldln2
out
xor
mov
or
mov
jne
push
lret
add
jl
adc
fiadds
orb
call
mov
xor
xchg
cld
mov
fnsave
das
das
cmpsl
cmpsl
and
inc
xchg
push
out
mov
or
stc
mov
jne
adc
in
jmp
jle
inc
sbb
insb
and
push
mov
adc
or
hlt
mov
rcrb
cld
mov
mov
out
inc
jne
subb
fiaddl
ljmp
sbb
mov
cs
scas
sbbb
xor
adc
or
jg
adc
out
jno
xor
js
dec
add
loopne
rep
scas
fistl
mov
adc
mov
and
pop
and
inc
push
jne
jp
jbe
mov
std
jecxz
mov
dec
sbb
xor
mov
aaa
aas
sub
sbb
fs
push
mov
mov
loop
mov
in
and
jbe
or
icebp
xor
pop
add
setno
mov
lcall
and
sti
bound
gs
add
mov
fnsave
dec
ss
in
cltd
lret
mov
and
orw
jno
mov
aas
push
aam
ljmp
cwtl
xchg
scas
repz
outsl
and
cwtl
sbb
fs
movsb
and
icebp
rol
dec
inc
mov
fcompl
push
inc
in
scas
adc
insl
fwait
insb
pop
dec
mov
xchg
adc
notl
mov
xor
aaa
pop
xor
push
sbb
inc
push
clc
dec
in
inc
sub
rcrl
jmp
aad
dec
pop
pusha
repnz
shrb
mov
jg
mov
mov
push
les
dec
mov
adc
fwait
jge
mov
daa
ret
dec
or
pop
bnd
mov
and
aaa
fsubl
jb
lds
mov
sti
mov
push
mov
add
inc
insl
lock
sti
fsubrl
mov
sbbb
ds
iret
push
jmp
sbb
inc
les
sub
jnp
std
into
jno
sbb
clc
or
mov
cmp
pop
lret
sbb
inc
and
mov
or
std
sub
cmpsb
aam
adc
movsb
icebp
or
in
mov
lcall
aad
cli
test
jecxz
icebp
mov
push
ljmp
xchg
ret
push
add
repnz
cmp
in
add
stc
add
mov
pop
pop
shll
mov
ret
movsl
mov
inc
and
fimull
out
cli
ror
cs
xlat
sbb
dec
sub
imull
mov
xor
js
sahf
sbb
xlat
hlt
sbb
inc
push
dec
push
shrl
andl
es
add
repz
adc
pop
pop
mov
imul
pop
xchg
movsl
or
cmpsb
mov
and
icebp
and
das
sub
mov
test
shll
in
xor
pusha
sub
inc
mov
popf
jno
sub
inc
or
jbe
pusha
adc
mov
mov
addr16
xor
and
lods
sub
cmp
jecxz
mov
mov
jns
jecxz
aaa
icebp
lret
or
mov
mov
ret
das
fdivrs
sbb
mov
ret
xchg
jp
dec
xchg
cld
sbb
shll
mov
pop
sbb
sahf
jecxz
and
lret
inc
leave
push
jno
xlat
sub
push
add
jbe
scas
mov
inc
fcoms
lret
in
es
xchg
jno
loop
mov
xor
into
cli
add
sub
add
std
cltd
addr16
nop
jp
loop
mov
sub
scas
add
xchg
nop
inc
push
jbe
std
aad
and
daa
push
adc
xchg
lods
pop
pop
ljmp
adc
test
test
out
adc
test
dec
rorl
sahf
sbb
sub
leave
and
inc
data16
sub
ljmp
mov
inc
les
sub
cli
iret
std
sub
push
xor
daa
xor
mov
rolb
ret
outsb
jmp
mov
jmp
insl
sub
leave
push
ret
sub
pop
cltd
sub
movsb
insl
stos
out
push
mov
adcb
mov
sbb
push
mov
jl
or
cwtl
mov
xor
sub
xlat
and
sub
pop
jecxz
push
loop
sub
nop
fsubrs
ret
and
add
sahf
lea
or
je
sub
hlt
jb
sub
mov
or
and
lods
adc
mov
push
inc
xchg
ljmp
into
test
sub
ss
sti
std
cmpsl
addr16
jno
sti
or
aam
mov
cli
leave
cmp
int
sbb
xchg
add
inc
les
mov
lock
push
fmul
daa
sbb
mov
inc
orb
mov
addb
mov
popa
mov
lretw
out
bound
mov
xchg
lahf
inc
ds
mov
in
dec
sbb
or
paddsb
push
jg
sub
insl
and
xchg
xchg
das
daa
iret
mov
sahf
or
adc
jp
jmp
sbb
mov
jge
div
cmp
jmp
mov
push
cmpsb
fsts
or
push
sarb
std
sbb
mov
fadds
mov
in
insb
add
bnd
mov
pop
je
and
inc
adc
cmp
mov
clc
pop
imul
push
jle
lock
pop
xchg
fistpl
mov
lods
add
ret
jmp
subb
mov
sub
gs
push
jmp
mov
nop
pop
gs
fmull
ds
pusha
pop
lods
push
shll
sub
inc
jnp
je
xchg
ljmp
lods
adc
cmc
pop
ret
mov
jl
dec
das
sti
aaa
psubw
aam
mov
push
jp
jae
mov
es
sub
ja
xchg
stos
pop
mov
mov
popa
shlb
or
cmp
jp
loop
sbb
jb
sahf
insb
mov
sub
movsl
xchg
pop
push
in
pop
shrd
test
sbb
cltd
sti
das
kmovd
xor
mov
and
xor
pop
push
inc
outsl
pop
push
ja
ret
cmp
jnp
mov
add
pushf
sbb
pop
pop
arpl
imul
push
int3
add
mov
push
adcl
mov
inc
aad
jb
and
int3
cmc
pop
mov
push
and
js
cmpsb
pop
iret
or
mov
adc
push
lods
lcall
mov
inc
imul
out
inc
mov
mov
inc
into
mov
imull
adc
into
into
fisubrl
scas
test
push
mov
mov
jl
add
nop
xor
pusha
sahf
or
in
sub
pop
in
shrb
jmp
xchg
add
out
dec
xchg
dec
outsb
xor
and
pop
xor
decl
icebp
jecxz
cmp
jb
sbb
ja
loop
add
mov
das
pop
mov
jl
mov
iret
hlt
dec
push
les
mov
ret
ret
shll
dec
outsl
xlat
std
adc
jb
inc
inc
sub
xchg
lock
aas
aaa
call
cmp
mov
mov
outsl
mov
dec
pop
pop
mov
or
add
push
push
sar
js
movsb
out
sub
stos
pop
imul
dec
sub
ffreep
call
jbe
xchg
mov
push
xchg
scas
ljmp
xor
cmp
ficoms
mov
xchg
lret
loopne
fstpl
push
mov
fstpt
mov
ds
into
jo
or
stos
xor
movsl
int3
mul
dec
jle
das
jg
int
pop
lock
fsubs
adc
aad
out
test
mov
jno
add
scas
in
lods
and
loope
inc
mov
dec
pop
in
lret
iret
punpckldq
insb
sub
mov
or
or
lods
jnp
mov
jp
faddl
and
xchg
cli
adc
mov
jns
stos
int
dec
xor
dec
mov
pop
xor
mov
loopne
ss
mov
sahf
cli
cmp
inc
dec
loopne
and
push
lret
sub
push
stos
out
jns
sarl
js
ret
xchg
ret
std
pop
sbb
dec
inc
dec
dec
pop
lods
jmp
adc
psubsb
aad
dec
inc
jbe
clc
movsb
int
mov
xchg
lret
lea
push
add
sbb
xor
dec
sbb
xchg
sub
fadds
jno
js
imul
mov
pushf
or
mov
mov
add
add
or
cmp
or
xlat
arpl
jns
je
inc
rorb
push
dec
leave
push
andl
push
xchg
add
pop
sub
push
pushf
sub
push
jo
dec
inc
and
fstl
and
fists
mov
test
rcl
push
push
addr16
jns
push
push
nop
cltd
fisttpl
call
bound
push
push
and
inc
jae
xor
push
scas
in
sub
dec
mov
and
out
lret
dec
pop
sub
pop
std
push
push
xsha1
cmpsb
dec
in
test
enter
sti
mov
mov
or
cmp
adc
aam
xchg
pop
cli
jnp
adc
fucomip
push
mov
sbb
adc
icebp
inc
push
pop
ficompl
adc
xchg
stos
dec
ljmp
sbb
loopne
shrl
xchg
pop
xchg
and
hlt
jbe
inc
xor
mov
mov
push
xchg
mov
xchg
test
mov
push
and
scas
mov
outsb
addr16
jb
dec
and
fs
popa
lock
pop
cmc
push
into
pop
movsl
fbld
jne
sti
mov
movsl
mov
jmp
stos
push
addb
sahf
aam
cmp
sahf
mov
pop
or
lods
fstp
ss
and
mov
inc
jb
cmpsb
pop
lcall
fidivl
clc
sub
pop
add
aam
lods
out
out
mov
mov
jo
inc
or
loop
lods
rcrb
fisttpl
xchg
adc
pop
ficomps
test
fsubs
sub
or
dec
xchg
incl
das
push
jns
pop
rclb
loope
fdivrl
sbb
or
pop
filds
int
mov
cmp
jo
int
mov
int3
sbb
setno
imul
fadds
mov
adc
arpl
jb
cmc
and
mov
push
aam
std
negb
rclb
mov
sbb
mov
mov
sbb
jns
push
lods
je
cmp
push
leave
adc
pop
cwtl
stos
addr16
add
sub
clc
jle
faddp
mov
addr16
mov
add
icebp
fisubrl
mov
or
xchg
mov
xchg
sbb
dec
enter
xchg
lods
jge
add
lret
ds
mov
mov
xchg
sbb
sarb
sub
mov
pop
push
stc
dec
xchg
adc
loop
rcr
inc
lods
in
int
cmp
incl
cmpsl
stos
inc
xchg
or
inc
ljmp
push
ljmp
inc
or
and
cmp
xchg
cmp
adc
fwait
hlt
orl
cld
cmpsb
lahf
shlb
aas
cmpsl
js
push
add
mov
inc
rcl
ret
mov
adc
dec
or
inc
dec
sbb
insb
ret
push
ret
adc
mov
fimuls
popa
pop
adc
xchg
add
out
push
cld
call
ljmp
rcrb
adc
lret
add
pop
inc
fistps
fs
scas
push
jmp
enter
filds
xor
jno
jg
xor
aad
dec
stos
outsb
sbbb
adc
aas
sbb
out
cmove
add
loopne
push
and
je
test
jo
aaa
cmc
lods
inc
and
push
dec
std
loopne
add
push
lcall
and
out
fnsave
cld
iret
fwait
rolb
retw
cmp
push
les
fimuls
adc
push
jmp
test
jg
add
or
cmp
outsb
or
das
mov
xchg
pop
jge
mov
je
flds
in
aaa
dec
lret
xchg
cltd
notl
push
push
lea
mov
icebp
lds
leave
mov
gs
sub
in
or
and
sbb
cmp
sahf
add
add
pushf
push
xor
push
mov
mov
mov
lock
mov
push
test
out
cltd
xor
pop
fdivr
jge
xchg
test
int
fisubl
popa
push
mov
or
xchg
loope
icebp
mov
pop
outsb
dec
or
mov
movsl
imul
xchg
lcall
into
add
mov
shrl
pushf
scas
gs
push
mov
push
jns
sbb
je
int3
aam
sub
push
jnp
sbb
pop
pop
dec
sahf
cmc
repnz
sub
xor
mov
mov
loopne
aaa
in
push
shl
fnstcw
js
add
xchg
mov
ja
and
out
lea
push
pop
in
inc
inc
jle
dec
arpl
jae
push
mov
sbb
and
cmp
pop
int
mov
jge
gs
lahf
push
pop
add
sub
psubsw
scas
inc
ljmp
iret
and
adc
sbb
cmpsl
js
rcll
mov
bound
movsb
popf
dec
mov
inc
mov
imul
or
push
icebp
leave
adc
call
jns
pop
xchg
lds
add
icebp
xor
cmp
push
popf
sbb
rcl
loop
lds
icebp
jne
dec
in
mov
test
jg
push
scas
xor
xor
push
fwait
or
pop
les
cmpsl
sbb
fldcw
xor
sahf
aaa
mov
cmp
sahf
push
adc
pop
ss
movsb
in
pusha
xchg
test
inc
stos
add
leave
das
or
mov
arpl
clc
jl
lcall
or
dec
ljmp
mov
mov
lods
pushf
fwait
cmovo
shrb
insl
mov
dec
add
pop
jns
xor
and
pop
arpl
aam
in
or
jle
fistpll
loop
cmp
fs
adc
ret
je
mov
add
inc
out
cmpsb
out
dec
sbbb
lds
sub
jbe
clc
inc
imul
xor
sti
sub
test
or
inc
pop
lds
fwait
push
gs
push
popa
or
lret
adc
xchg
inc
je
es
dec
cmc
insb
dec
or
test
ficompl
or
and
cs
idivl
sti
std
jbe
add
cmp
nop
femms
push
adc
lods
rclb
pop
mov
push
xor
in
daa
mov
xor
adc
stos
add
leave
out
cmp
test
push
mov
movsb
mov
sar
mov
lods
dec
jo
jo
addr16
inc
dec
mov
add
xchg
aam
rcrb
mov
ljmp
clc
push
mov
push
mov
dec
shll
add
in
je
add
pop
lock
xor
ljmp
cltd
test
ds
daa
sub
xchg
stos
dec
mov
ds
fldenv
pop
mov
mulb
insb
das
mov
dec
call
out
xchg
sub
sbb
cmpsb
es
test
dec
in
add
jmp
in
mov
js
insl
les
leave
mov
adc
repz
nop
pop
mov
loop
lock
dec
sub
scas
mov
cmpsb
and
mov
adcb
or
add
test
fnsave
bound
leave
cltd
mov
in
adc
mov
sub
mov
xor
lods
pop
repz
adc
push
mov
mov
adc
xchg
jb
inc
or
loope
cmp
mov
sub
xor
lcall
push
jecxz
xchg
jno
push
mov
cmp
xsha256
cmpsb
or
add
std
pop
inc
sbb
fcmovu
pop
shrb
das
js
stc
cmp
sbb
imul
jp
std
hlt
sub
push
cmc
pop
lret
pop
ret
push
dec
jle
cmc
xchg
xchg
dec
xchg
xlat
enter
in
das
int
pop
cli
push
test
jg
jb
inc
dec
ret
dec
push
jp
fisttps
cmp
jg
mov
leave
in
stos
push
cmp
jg
inc
loope
aas
or
or
stos
mov
sbb
fcmovb
push
hlt
cs
xor
ret
pushf
fucom
movsl
je
push
arpl
inc
adc
loopne
push
filds
stos
aad
sahf
fwait
ja
shl
cwtl
lds
icebp
sub
inc
and
aad
xor
jge
jmp
pop
enter
push
insb
jmp
leave
imul
fisubs
jmp
test
lcall
pop
and
xchg
cmp
addr16
mov
pop
jmp
stos
cmp
xchg
scas
lret
icebp
and
pop
xchg
test
and
add
clc
test
sub
dec
pushf
test
int
sub
mov
pop
and
jo
jmp
mov
enter
pop
mulb
test
fmull
test
xor
imul
imul
lcall
and
and
scas
xor
jne
cmpl
fiaddl
mov
dec
push
inc
xlat
gs
pop
push
jae
leave
pop
cmp
adc
ss
pop
notl
push
mov
cmpsl
out
lret
jecxz
dec
repnz
add
int3
inc
int
sub
and
shll
cmp
or
out
daa
scas
mov
add
and
cmp
mov
jl
out
stos
pop
sbb
mov
mov
sub
pop
push
xchg
jmp
rcr
and
fmulp
jl
inc
out
sub
xchg
sahf
sti
aaa
stc
sti
das
pop
into
ret
ret
daa
dec
fs
lods
movsb
jmp
inc
call
inc
in
aad
adc
lahf
aaa
int3
jmp
into
sti
insl
popa
in
adc
sub
imul
int
loope
ret
sbb
dec
push
fistpll
fldenv
add
xchg
cwtl
test
out
sub
mov
test
dec
jg
lahf
in
mov
out
fldt
push
movsl
xor
insl
shl
ficoms
pop
cmp
xor
sub
jle
aas
sub
je
mov
repnz
push
jae
pop
mov
push
sub
jne
and
dec
or
mov
inc
jb
leave
sti
mov
aas
push
mov
push
or
inc
xor
movsb
gs
adc
into
sub
sub
icebp
add
lock
fcmovnu
jg
cli
test
stos
pop
cwtl
dec
jbe
das
sbb
add
cltd
insl
mov
xchg
push
inc
mov
jbe
inc
mov
cmc
das
xchg
out
int3
leave
push
int
cmp
mov
movsl
shrl
cmpsb
jp
test
push
adc
dec
xor
jno
pop
or
cmpsb
stc
mov
jb
aad
inc
stos
lcall
data16
je
mov
pop
popa
inc
jo
movsb
out
jge
jne
push
ror
das
inc
insl
xor
add
adc
mov
cs
flds
ljmpw
sbb
out
clc
imul
jge
mov
pop
addr16
sar
jne
adc
lds
pop
aas
stos
mov
loop
rorl
movsb
icebp
je
sub
or
jle
xchg
dec
iret
cmpsl
cwtl
daa
push
jo
incl
mov
rcrb
cmpsl
inc
aad
pop
add
jmp
dec
loope
int3
faddl
dec
xchg
or
gs
xor
sbb
out
insb
or
fistps
ficoml
xchg
aam
data16
in
cmpsl
mov
sbb
jl
in
in
mov
test
push
lret
in
fistpl
dec
sbb
adc
xor
jl
and
cwtl
add
cs
mov
push
orb
out
imulb
push
jle
mov
sub
adc
enter
push
leave
into
ljmp
jb
fwait
push
stos
test
or
add
pushf
loop
sbbl
adc
inc
sahf
mov
jg
mov
mov
inc
fistpl
repz
out
outsl
test
lds
xchg
loopne
mov
test
cmp
decl
subb
hlt
lods
push
inc
push
push
sbb
and
jle
aas
addr16
pop
mov
push
dec
insl
shlb
dec
fldl
aam
inc
sub
aam
add
ds
fwait
pushf
mov
mov
fstpl
rclb
push
hlt
dec
dec
lret
sbb
mov
repnz
stc
out
cld
idivb
imul
test
add
sahf
xor
add
cmpsb
push
lods
incb
icebp
sub
aam
jecxz
dec
lock
pop
push
stos
sysret
dec
inc
ror
mov
jae
enter
fdivl
daa
mov
repz
inc
mov
inc
adc
icebp
push
dec
or
add
and
std
loope
in
sbb
sbb
cmp
call
data16
and
inc
fdivs
cmpsb
pop
loop
jle
pop
mov
mov
sbb
loopne
mov
popa
insl
pop
lds
fdivrl
sbb
sahf
js
imul
movsl
pop
xor
into
clc
cwtl
adc
repz
fwait
xchg
push
pushf
rclb
jmp
int3
iret
sub
out
dec
in
addb
lods
mov
icebp
insb
daa
and
cmp
adc
stos
adc
mov
in
sahf
add
sub
int
mov
enter
fmull
push
push
sub
add
cld
aas
out
sub
movsb
sqrtps
push
pop
mov
pop
pop
movsb
insb
xchg
icebp
in
imul
xchg
stos
jbe
popa
cmp
movsl
test
xchg
dec
or
test
mov
adc
aad
fidivrs
jbe
pushf
jns
sub
xlat
les
dec
pop
sbb
stos
sub
push
in
xor
fmuls
push
call
pop
repz
cld
movsl
iret
jb
testb
xor
int3
jmp
pushf
and
xor
rorl
int
add
lret
es
jecxz
push
roll
nop
sbb
dec
test
mov
cmp
dec
xor
xor
adc
pop
mov
mov
cld
cli
pushl
call
ljmp
insl
inc
sub
mov
push
pop
and
cmp
inc
rcrl
add
fsubrl
xchg
fbld
fimull
shll
add
inc
lds
js
or
sub
ja
ja
push
xchg
loopne
mov
xlat
in
dec
jg
daa
push
mov
lret
scas
shlb
sarl
cmpsb
and
sbb
rcrl
jecxz
rcr
jl
fmuls
add
mov
movsl
and
adc
jg
mov
or
mov
mov
sub
xor
dec
aaa
pop
icebp
mov
arpl
pop
xor
sub
in
sub
inc
repz
add
mov
jo
or
inc
mov
and
lock
xrelease
out
jg
aaa
jecxz
test
add
jmp
stos
xor
sub
pusha
and
pop
mov
sub
push
loopne
idivl
or
fisubs
out
into
jp
mov
lahf
test
clc
mov
pop
pusha
xor
mov
insl
dec
out
xchg
dec
js
out
dec
jns
outsl
scas
in
fdivs
cmp
pusha
fwait
das
dec
lret
cli
adc
dec
adc
fs
clc
dec
mov
sarb
pop
cmpxchg
dec
mov
xor
mov
leave
shl
insb
ljmp
xor
pop
test
or
push
pop
testb
pop
adc
in
scas
or
mov
add
sbb
jmp
xchg
mov
and
dec
arpl
mov
or
xchg
repz
pop
pop
xor
rcll
orl
jo
inc
int
xor
in
subl
xor
hlt
push
loope
jno
dec
mov
cmp
inc
ret
les
xchg
cmp
push
aas
test
mov
mov
mov
pop
mov
or
lret
frstor
shl
sub
dec
call
xchg
jge
push
mov
xchg
xor
movsl
jecxz
push
movsl
xchg
mov
lret
cld
vmovss
data16
add
mov
lret
adcb
imulb
pushf
movsb
movsb
or
mov
xor
and
and
or
cmpsb
repz
cwtl
mov
sbb
push
cmp
popa
pushf
jp
or
fwait
or
ljmp
and
mov
xchg
push
icebp
push
push
push
decl
jmp
lods
call
stc
out
xlat
push
xor
push
cmpsb
sub
test
adc
mulb
insl
push
push
cmpb
scas
out
lock
out
jge
or
xor
cmpl
xchg
out
insb
cmp
pusha
movsb
adc
xchg
cmpsb
int
int
pop
mov
popa
cmp
jge
push
cmc
into
cmp
push
arpl
test
lock
lcall
pop
jmp
int3
xchg
lcall
je
clc
cmp
dec
out
notb
rorl
jg
push
lods
jns
mov
cmp
or
adc
fstpt
jnp
inc
aam
mov
xchg
jecxz
outsl
jp
sub
inc
xchg
push
xor
rcrl
mov
js
fdivs
xchg
add
lock
ret
mov
mov
nop
pop
test
add
mov
sub
iret
cwtl
pop
das
cmp
dec
sahf
mov
nop
mov
daa
mov
fdivl
xor
push
cmp
insb
ja
sbb
push
cmpsb
pop
nop
mov
call
push
test
js
gs
imul
std
jl
outsb
dec
ds
pop
dec
fdivr
push
sti
pop
and
jnp
dec
stos
icebp
int3
popa
sahf
test
cmp
mov
mov
or
mov
push
ljmp
mov
cmpl
push
cmp
jl
data16
dec
sahf
dec
sub
sub
les
push
mov
sbb
xchg
sahf
or
sbb
sub
xchg
add
sub
popf
add
inc
les
jg
cmp
in
push
jno
pop
ss
cmp
push
out
inc
add
sarb
scas
outsb
mov
pop
nop
mov
mov
xchg
leave
push
lcall
rcrb
enter
adc
rcr
jp
mov
gs
lods
or
pop
out
dec
dec
jg
aaa
fldcw
or
out
pop
xchg
mov
xor
cmp
mov
jae
clc
fistl
leave
adc
pushf
pop
mov
push
push
adc
cmc
sub
in
pop
mov
test
loope,pn
jge
loope
pop
pop
xchg
fmull
mov
or
popa
les
pop
cli
xchg
adc
fistl
push
aad
sbbb
adc
mov
rolb
xchg
add
cs
and
jbe
mov
cmp
dec
outsb
ja
or
pop
fidivrl
sbb
or
dec
push
repz
fucomip
scas
jns
repz
mov
push
adc
lea
insl
and
leave
ficomps
addr16
out
sahf
lcall
jnp
hlt
sub
loopne
cltd
mov
cltd
inc
add
add
fsincos
jno
loop
mov
ds
pop
mov
pusha
hlt
cltd
or
test
lock
ljmp
mov
sbb
inc
push
pusha
sub
outsl
mov
xchg
cmp
aad
outsl
movsb
push
adc
aas
in
or
inc
jl
repnz
sbb
mov
outsl
xor
shr
mov
sbb
pop
mov
add
je
cmp
js
cmp
sbb
out
repz
fdivl
mov
mov
in
pop
hlt
ljmp
mov
aam
dec
dec
jb
stos
int
decl
out
pushf
lock
repz
jnp
adc
inc
xchg
std
out
in
not
mov
aad
pop
enter
lds
shll
lret
inc
ja
mov
fsubrl
or
dec
fsub
mov
dec
hlt
adc
les
xor
daa
xlat
cmpb
mov
pop
pop
cmc
jno
out
push
pcmpgtb
mov
jbe
jl
ret
mov
stos
cmpsl
jg
ja
or
test
ret
out
mov
cmp
push
in
dec
mov
and
xor
ret
inc
mulb
mov
add
jne
jecxz
add
pusha
shr
sub
lods
push
dec
dec
add
mov
jno
sbb
loope
imul
and
jmp
pop
lret
out
in
add
aaa
push
add
inc
outsl
mov
lcall
mov
fs
push
and
aaa
or
fisttpll
xchg
push
jp
or
ret
popa
stc
orb
ja
ss
fimuls
xchg
mov
adc
stos
sbb
out
pop
lea
xchg
nop
pushf
dec
xchg
nop
jno
int
inc
ret
lea
jne
and
fildl
pop
inc
dec
add
lcall
sbb
call
xor
out
lret
jne
cmpsb
dec
lret
movsb
out
xor
or
or
mov
imul
inc
cli
push
sub
enter
int3
and
jecxz
jbe
les
ror
aaa
add
and
jmp
imul
lret
jecxz
push
xchg
mov
push
pop
xor
test
ss
stos
push
test
xchg
mov
out
xor
jmp
add
pop
repnz
shr
mov
das
push
adc
sub
sub
je
adc
fstp
mov
das
jo
xchg
xor
lods
push
es
xor
mov
psrad
dec
outsb
lcall
inc
lcall
pusha
and
cmp
or
pop
mov
mov
xchg
adc
stc
or
xor
test
mov
sbb
mov
outsb
sub
leave
add
adc
es
out
mov
adc
sub
inc
emms
bound
aas
test
js
roll
das
das
jno
inc
xor
out
sbb
adc
cmc
cld
fldt
xor
mov
or
adc
or
lods
add
mov
enter
roll
imul
mov
cs
ftst
pop
adc
dec
mov
mov
insb
clc
xor
js
mov
scas
mov
lods
dec
inc
int
cwtl
pop
mov
dec
and
adc
pop
lret
lock
imulb
arpl
andb
xor
movsb
lret
ret
xchg
push
ljmp
and
repnz
dec
xor
mov
cltd
mov
mov
movsb
cld
sub
sub
dec
fidivrl
fdivl
xchg
popf
addl
hlt
mov
jns
add
popf
jle
insb
or
mov
mov
pusha
test
imul
arpl
nop
clc
lcall
xchg
mov
push
daa
xlat
jmp
lds
sbb
repz
and
mov
in
in
or
xchg
std
xchg
mov
daa
adc
lahf
push
addr16
fists
cmp
fidivrs
lahf
and
out
rolb
insb
xchg
pop
and
dec
cmp
cmp
xlat
bound
pushf
out
push
mov
pop
outsl
pushf
scas
mov
int
cmpsl
jle
jnp
jne
aaa
mov
adc
push
aas
sti
xchg
lret
stos
ficoml
jg
push
cmp
pop
mov
jb
out
bound
dec
scas
subb
mov
aad
popf
fdivrl
fcmovu
sub
jmp
xchg
cltd
mov
push
inc
inc
dec
mov
inc
mov
pop
mov
jle
repnz
mov
inc
fwait
scas
dec
fdivs
loope
ret
popf
xorb
mov
lret
dec
pop
xor
inc
dec
aas
xchg
pop
negl
add
in
inc
js
dec
adc
mov
lds
stos
popf
fistl
push
and
adc
jae
add
clc
cltd
jns
scas
sbb
mov
and
mov
testb
lret
pop
shll
sti
cmp
call
and
cmp
jae
cmp
pmullw
inc
adc
dec
mov
cmp
and
lret
mov
scas
xor
mov
mov
mov
sub
jecxz
sbb
sbb
and
scas
adc
stos
scas
mov
or
insl
lock
mov
push
scas
fisubl
push
hlt
and
ret
fs
xchg
cwtl
push
cmp
add
add
repz
popf
push
xor
lret
or
shrb
test
repz
iret
test
mov
test
jae
pop
std
push
lahf
movsb
push
call
mov
lcall
fsub
out
sub
pop
mov
fwait
test
xor
jp
sub
push
cli
or
jg
xchg
jno
popa
jne
xlat
or
jmp
pop
inc
dec
insl
pop
sbb
or
pop
rorl
or
aam
lcall
iret
inc
test
lret
int3
mov
or
and
sarb
xchg
jne
repz
stos
pop
or
pusha
push
sub
inc
ja
leave
shll
lret
fimuls
fwait
or
mov
add
cmp
and
jae
mov
int
pop
mov
addr16
xchg
repz
outsb
dec
cmc
fistl
jno
pusha
mov
test
mov
or
adc
adc
mov
dec
iret
in
addl
sub
mov
mov
jp
push
aas
lahf
mov
stos
test
inc
cmp
push
dec
inc
or
sarl
out
shll
push
push
fimull
clc
dec
aad
mov
testl
in
dec
mov
mov
pop
inc
iret
idivb
ds
xchg
lock
fimuls
loopne
mov
ljmp
jns
shll
notb
and
sbb
mov
cmpsb
sub
loope
xor
int3
iret
or
mov
jecxz
push
imul
pop
sub
movsb
fwait
adc
mov
sbb
mov
xchg
add
je
push
rcrb
adc
jmp
fisttps
scas
sub
insb
add
aam
sub
pusha
jmp
pop
int
rcrl
icebp
mov
fdivrs
out
stc
dec
add
mov
push
call
dec
fiadds
jno
leave
pop
cmpsb
clc
movsl
mov
in
rcr
jo
jmp
lock
cmp
pop
fbstp
inc
pop
jo
sbb
call
or
subb
cmp
pop
xchg
cmp
int
cmpsb
test
or
lret
and
pop
jl
push
pop
inc
xchg
dec
int3
loop,pn
cld
dec
inc
rcrb
lock
adc
lret
out
push
pop
std
and
adc
mov
repnz
cmp
inc
push
pop
push
cmp
adc
adc
in
je
add
icebp
out
push
lcall
add
mov
mov
inc
sbb
dec
mov
sub
xchg
dec
jg
mov
cltd
or
iret
inc
ss
outsl
mov
int
push
sahf
add
inc
add
shl
pop
popf
das
jns
dec
insb
fistps
cmp
xchg
adc
scas
repnz
in
in
sub
dec
mov
out
xchg
getsec
out
popf
sbb
pop
and
nop
into
ret
pavgb
mov
outsb
inc
shlb
lods
pop
jg
leave
push
inc
jo
setno
insb
or
repz
ret
shlb
pop
repz
jge
mov
sbb
cld
cmpsl
dec
or
je
pop
inc
pop
adc
mov
cmp
int
loop
push
push
fdivr
sub
push
ss
pop
call
rcl
or
cmp
jmp
sarl
hlt
stos
jl
nop
or
arpl
jbe
je
jmp
addb
inc
clc
add
mov
int
push
pop
movsl
inc
rolb
push
cld
arpl
xchg
aaa
pop
in
insb
push
mov
mov
xchg
ljmp
notb
ret
pop
cpuid
shl
dec
jle
test
xchg
lahf
sbb
adc
xchg
ds
mov
xchg
popa
rcll
mov
dec
mov
nop
sbb
mov
fimuls
sbb
fiaddl
xor
push
jmp
adc
vcvttpd2dq
orb
mov
jae
sbb
ljmp
cmp
daa
in
sbbb
popf
xor
in
orb
xchg
inc
sahf
and
aas
addr16
jecxz
std
cmp
addr16
lods
cmp
dec
dec
push
in
adc
xor
dec
and
xchg
mov
dec
xlat
or
jge
lods
jbe
xchg
insl
je
pop
loopne
fwait
sbb
lock
xor
dec
pop
cmp
aaa
push
inc
int
sub
and
push
aas
pop
sub
stc
fs
pop
fadds
sub
dec
xchg
and
sub
and
pop
xor
outsl
or
or
or
leave
mov
xor
pusha
cld
shrl
ret
movsb
jbe
adc
mov
lods
xor
mov
rcll
push
cs
inc
or
push
incb
pop
xor
decl
popf
sbb
hlt
add
pop
push
xchg
or
push
xchg
xchg
xchg
or
jmp
push
stos
push
pop
or
aas
loope
or
lock
pop
scas
push
pop
push
test
mul
lahf
ljmp
cmc
lods
mov
push
scas
popf
mov
cmp
mov
cltd
inc
lcall
mov
enter
xor
mov
xor
scas
arpl
mov
inc
mov
testb
pop
xor
cmp
mov
pusha
mov
js
rcll
in
sbb
jns
jnp
mov
mov
mov
fiaddl
mov
es
mov
in
dec
jl
xchg
push
xor
sbb
mov
mov
ljmp
xor
imul
sub
aas
and
in
pop
mov
dec
inc
jnp
dec
std
loope
and
fwait
mov
xchg
in
insb
add
sbb
in
mov
cmpsb
in
loope
push
shlb
loope
sti
sub
jo
mov
fisubl
sub
cmpsb
popf
fmull
jle
or
dec
out
or
xchg
dec
pushf
xchg
cmp
cmpsb
xchg
les
xor
nop
adc
inc
notb
mov
mov
in
iret
idivb
ljmp
ljmp
dec
clc
addl
dec
frstor
xchg
xor
js
cltd
or
adc
pop
cmp
jecxz
sbbl
iret
incl
idivb
cmp
xor
jmp
stos
xor
pop
push
inc
push
jnp
gs
and
sti
cmpb
dec
xchg
adc
mov
push
push
out
enter
push
fld1
dec
cmp
jg
pusha
cld
cld
dec
mov
mov
or
clc
in
sub
mov
in
and
test
xlat
nop
mov
popf
aad
mov
adc
sub
insl
add
mov
xor
std
andb
gs
sub
andl
cmp
testb
mov
cwtl
stos
xor
mov
enter
sarb
enter
jb
fildll
and
adc
xchg
call
ljmp
xchg
pop
test
jmp
pop
leave
push
lea
aas
test
popa
dec
adc
cmp
paddb
stc
sarb
insl
xchg
scas
xor
cmp
push
neg
pop
fsubp
ret
fcomps
cmp
lock
sbb
std
jns
xor
mov
pop
sbbl
loope
test
bound
aas
les
adc
movsb
into
sbb
fs
cmpsb
inc
aaa
cmp
xchg
cmp
sbb
ficomps
pop
outsb
jno
xor
mov
or
adc
fildll
push
ljmp
rcrb
leave
test
fwait
lods
movsl
faddp
idivl
outsb
sbb
cmc
call
fsubrl
hlt
mov
mov
fsubrs
aam
ss
push
xor
jecxz
jecxz
add
loope
fdivrp
jg
ds
and
dec
mov
inc
shlb
xchg
pop
pop
cmp
js
add
mov
fs
xchg
mov
mov
jns
mov
adc
stos
cmp
dec
fsubrp
inc
lahf
cmp
imul
mov
stos
sbb
jp
jge
dec
mov
push
clc
popf
xchg
or
cmp
sub
stc
adc
add
push
cld
push
add
sarb
xor
ja
outsl
sahf
iret
ret
shlb
sbb
mov
cmc
scas
jb
cmpsl
leave
andl
and
pop
sbb
and
mov
in
mov
lahf
dec
mov
push
incl
adc
stc
pop
insl
jbe
jg
fs
arpl
or
push
dec
fstl
js
mov
inc
bound
lods
cmpsb
add
scas
xor
sub
mov
jo
cltd
lcall
and
ljmp
lea
fadds
shll
outsl
aam
imulb
mov
inc
dec
iret
mov
mov
dec
cmp
xor
mov
repz
push
add
test
clc
jge
test
adc
or
mov
shll
or
mov
lock
mov
fiaddl
in
ret
mov
lods
icebp
popa
xor
jo
cmpsb
lods
dec
push
inc
sbb
pop
push
in
aam
adc
and
int
scas
aaa
sbb
arpl
xchg
repnz
or
sti
mov
cmpsl
pop
mov
divb
mov
mov
scas
in
fisubs
fstp
loope
and
sub
xlat
nop
stos
rcll
mulb
popf
cmp
movw
cmpsb
cmp
bound
mov
adc
jg
cmp
and
lock
add
push
mov
clc
jae
adcl
aaa
adc
xchg
into
in
push
mov
jno
andb
repnz
pusha
outsl
in
xor
stos
xchg
or
lahf
xchg
mov
sbb
stos
push
xor
xlat
add
jne
int
sub
lock
loop
add
jns
mov
flds
ja
sub
jl
movsl
cld
adc
mov
mov
popa
jne
xor
sbb
cmpl
ret
imul
pop
and
inc
jp
jp
cmp
pop
and
shrb
ret
jo
cld
cmp
add
cli
dec
dec
mov
in
enter
popaw
inc
lods
inc
out
xlat
pusha
add
push
aaa
add
imul
arpl
jle
out
xchg
outsb
cmpsb
push
jae
sub
sub
cld
push
sbb
sti
lret
adc
dec
cmp
adc
jmp
pop
lods
arpl
test
dec
lock
cmp
inc
pop
and
mov
shld
adc
sub
sti
sub
pop
cmp
cwtl
lcall
js
das
jl
push
mov
ret
inc
mov
and
inc
insl
adc
mov
cmp
std
cwtl
pop
in
iret
add
stc
nop
adcb
jnp
stc
mov
mov
sub
cmp
test
xchg
andb
xor
xor
test
shr
inc
std
pop
adc
jg
sbb
in
push
loop
notl
mov
jns
pop
xor
sub
add
ja
xor
push
sahf
dec
lahf
xchg
stc
lock
dec
movsb
jle
insb
clc
xchg
lds
ret
jae
sub
dec
pop
imul
mov
mov
imul
lret
repz
sbb
and
mov
or
loop
inc
packssdw
jne
push
fs
cli
adc
jnp
out
insb
fstpt
lcall
mov
cwtl
iret
cli
test
jecxz
mov
push
arpl
pop
dec
cmp
sar
lahf
add
in
jb
dec
popa
bound
add
les
mov
or
sub
or
sbb
add
inc
mov
inc
outsl
sub
sub
fstl
sbbl
fistpl
filds
jp
xlat
test
cwtl
jns
push
jecxz
ret
pusha
outsb
jl
or
add
adc
jge
jge
cwtl
popl
loop
loopne
std
xlat
sbb
sbb
jb
mov
xchg
icebp
mov
inc
test
xor
add
and
and
jno
arpl
pop
mov
stc
shlb
inc
cli
pop
rcrb
push
add
stos
mov
rolb
adc
out
int3
hlt
pushf
add
push
mov
scas
sub
jl
jbe
sub
push
rcll
dec
fisttpl
push
scas
je
fstpl
aaa
and
ds
mov
pop
loope
movhps
loop
jp
xchg
xchg
and
cmp
mov
into
loope
pop
hlt
inc
push
cmc
jo
xor
inc
icebp
mov
nop
test
subb
addr16
out
and
push
mov
sub
jns
adc
mov
and
es
clc
outsl
jne
call
adc
mov
cwtl
lods
in
and
outsl
enter
inc
outsb
fstl
jge
add
in
jb
xchg
jl
pop
mov
popa
cmp
adc
out
push
pop
and
aam
fwait
cmpb
inc
aaa
arpl
stos
cltd
cwtl
ret
xchg
movsl
fistl
fidivs
or
lock
insb
aad
dec
inc
and
add
pop
test
ja
pop
cmc
mov
data16
loop
inc
jp
call
daa
jecxz
inc
div
call
cwtl
rol
test
push
xchg
sahf
sti
sbb
or
pop
cmpsb
dec
jmp
cmp
mov
pop
xchg
cli
mov
lds
jnp
dec
jg
repnz
mov
mov
int3
lahf
aas
inc
in
stos
pop
dec
or
xchg
push
iret
aad
nop
or
jns
ja
divb
inc
test
jge
imul
sbbb
in
mov
mov
jo
in
mul
pop
jmp
sbb
push
sub
xchg
xlat
jb
jbe
and
outsl
sbb
in
add
iret
aas
adc
nop
popf
into
inc
push
sub
mov
jb
and
in
mov
daa
cmp
popf
lea
sbb
or
xor
xchg
add
jae
inc
sahf
add
rolb
xchg
andb
mov
test
sbb
cmp
xorb
pop
sub
or
mov
jae
not
cwtl
loop
lds
es
lret
pop
mov
fisubrl
lods
add
xchg
lcall
in
or
js
out
in
cs
fs
mov
loopne
in
cwtl
js
rorl
sbb
mov
jl
insl
shl
jg
dec
test
out
cltd
pop
and
xchg
push
pop
push
adc
push
ja
jge
inc
lret
ret
and
dec
dec
mov
sbb
daa
ja
inc
imul
scas
aam
stc
xchg
fisttps
sarb
ss
xor
inc
pop
xchg
cwtl
into
jp
les
bound
cmpsl
sub
sbb
push
push
mov
scas
mov
mov
cmp
mov
mull
pop
repnz
lock
push
mov
cmp
repnz
mov
jbe
or
jp
jae
cwtl
jae
ljmp
in
iret
cmp
mov
jae
cwtl
dec
push
mov
pop
xchg
out
cmp
test
nop
pop
push
cmpsb
loopne
movsl
fsts
lret
add
mov
xor
pop
sbb
cmp
xlat
leave
stos
fidivl
cmp
ret
lret
mov
fldl
add
mov
push
adc
adcb
inc
inc
sbb
inc
rol
add
sarb
or
das
mov
mov
subb
mov
leave
call
push
dec
test
adc
mov
push
adc
std
cmpsb
pusha
outsl
lods
les
mov
cmp
push
xchg
lret
addr16
popf
mov
ds
sub
hlt
sbb
pop
jg
aad
jb
push
js
rorl
fucom
push
std
mov
std
xchg
call
and
fmuls
aaa
push
cli
jg
inc
mov
xchg
mov
popf
dec
jge
pop
xchg
jns
fldcw
or
sub
repnz
lahf
mov
mov
ja
pusha
shlb
ja
xchg
scas
dec
cmc
sahf
jb
rol
test
sar
pop
xchg
imul
jle
jmp
pop
push
dec
fwait
lock
outsl
jo
mov
pop
gs
popa
lcall
jns
lfs
clc
dec
or
xchg
mov
pop
jb
movsb
hlt
sahf
push
add
push
cs
mov
imul
mov
lods
ss
out
std
sbbb
mov
mov
js
xor
in
imulb
inc
or
mov
jg
or
fdiv
mov
push
scas
add
xor
stos
add
add
cmpsl
in
jne
lods
jbe
les
push
inc
sarl
or
icebp
mov
xor
push
adc
adc
outsb
test
jmp
pushf
ja
jge
mov
jecxz
lods
sub
dec
loop
test
dec
xor
dec
sbb
xchg
cwtl
mov
stos
adc
imul
lret
pop
dec
lea
lds
cltd
insl
push
mull
sti
scas
pop
mov
mov
cli
jnp
fs
fsubr
adc
bound
int
stos
lret
dec
loope
cmp
pop
pop
push
pop
addr16
aad
xchg
dec
mov
sahf
in
or
mov
pop
mov
je
push
stc
icebp
and
shll
xchg
sbb
cmp
jnp,pn
and
add
scas
jnp
jecxz
in
shlb
leave
outsb
push
mov
inc
nop
pop
cmp
mov
sbb
pop
out
push
sbb
inc
add
jnp
cmp
adc
fs
add
aam
fwait
stc
mov
pop
push
arpl
push
cmc
xor
inc
jp
sbb
jns,pn
push
mov
xlat
dec
sarl
pop
push
popl
shl
xchg
outsb
rcr
adc
push
cltd
adc
mov
inc
in
lcall
pop
jg
in
sbb
push
mov
inc
orb
xchg
cli
push
icebp
xor
xor
adc
nop
adc
push
mov
pop
and
sbb
daa
ds
xor
scas
lods
dec
mov
xchg
lds
daa
out
hlt
popf
int3
and
jp
push
push
inc
adc
loopne
aaa
mov
sahf
mov
pusha
leave
lahf
mov
in
stos
or
hlt
iret
add
stc
cmp
fidivrl
or
dec
inc
jle
pop
jne
loope
daa
loop
sbb
push
mov
dec
xchg
push
int
push
cmp
daa
int
add
in
sub
mov
mov
xchg
int
or
fisttpll
lret
sbb
sbb
mov
mov
out
scas
dec
inc
sti
lcall
jmp
xchg
fsubrl
outsl
cmp
xor
loopne
push
cmp
inc
arpl
and
imul
test
mov
or
mov
push
repnz
mov
into
add
hlt
addb
imulb
and
and
gs
jae
jmp
andl
dec
subb
pop
push
sar
mov
gs
stc
jbe
out
mov
scas
push
icebp
cld
addb
xchg
xchg
movsb
cmp
mov
mov
leave
aam
sbb
outsb
push
out
add
loop
mov
push
sbb
fcomps
adc
ljmp
jle
outsl
xchg
pop
ret
out
mov
push
orl
dec
mov
cmpsb
jne
lea
and
orl
jle
xchg
in
in
hlt
imul
cmc
out
add
mov
loope
jae
lcall
adc
xor
inc
fwait
in
and
roll
push
add
dec
insl
cmp
adc
outsl
jg,pt
cmp
fwait
cmpsb
mov
mov
mov
xchg
lds
cmp
or
outsl
and
pop
lahf
imul
pop
add
inc
cs
mov
mov
movsl
inc
insl
bound
insb
push
shll
push
call
push
popf
scas
xchg
xchg
fbld
push
push
xor
ja
push
das
mov
dec
daa
push
rclb
pop
idivl
mov
arpl
iret
lret
add
sbb
lret
adc
ljmp
pop
cmpsl
lock
repnz
adc
in
adc
out
jp
push
dec
or
daa
lods
sbb
sub
add
lock
fidivrs
fcompp
scas
lds
mov
jne
push
mov
mov
dec
mov
or
ret
sar
mov
jno
dec
xchg
sbb
mov
dec
push
std
loopne
add
xor
xchg
lds
jp
xchg
outsl
pop
xchg
daa
dec
iret
stc
dec
int
repnz
sbb
lcall
pushf
adc
pop
jmp
push
mov
sub
push
movsl
pop
mov
dec
push
jecxz
push
push
out
dec
in
out
rol
sbb
mov
or
cs
or
sub
das
call
pusha
test
adc
fsubl
ds
dec
lahf
jge
sbb
clc
es
add
add
cmc
jg
pushf
sbb
icebp
ss
mov
or
int3
jp
cs
jmp
mov
jb
in
decl
cmp
in
in
push
fisttps
and
mov
xchg
jg
cmc
sub
dec
pop
push
push
mov
loope
fmulp
int3
fs
push
pop
inc
out
dec
fstpl
addl
or
lea
xchg
nop
add
xchg
testb
addr16
sbb
adc
and
mov
fs
mov
cmc
mov
jmp
lea
mov
pop
gs
icebp
cmpsb
dec
push
sub
cmp
shlb
stos
jle
inc
imul
insl
cmp
ja
lds
push
push
in
in
adc
xchg
pop
fwait
dec
call
xor
in
cmpb
negb
sub
aad
xchg
call
fcmovnu
pop
push
inc
sar
mov
jmp
lret
hlt
into
mov
inc
outsl
sbb
cmp
cmp
bound
jbe
out
fnstsw
sbb
gs
adc
mov
sbb
loope
jo
cmpsw
lsl
cmp
les
cmpsl
lret
leave
cmp
and
addr16
sbb
push
inc
xchg
push
icebp
jl
std
xchg
jmp
scas
mov
icebp
out
cmc
adc
sub
dec
aam
lret
clc
and
add
mov
cmpsb
cmp
mov
mov
sbb
or
in
decb
mov
inc
data16
enter
jne
adcl
stos
in
fwait
mov
repnz
movb
mov
sub
lret
or
inc
out
pushf
pop
clc
push
sub
test
jecxz
push
mov
sbb
sti
pop
call
insl
mov
das
inc
or
mov
xor
add
sbb
lret
mov
je
lea
xor
sbb
js
or
imul
je
icebp
sbb
xchg
cmp
add
inc
mov
dec
mov
mov
mov
or
in
enter
mov
jle
or
clc
ljmp
adc
in
inc
jge
mov
bnd
das
jae
push
mov
push
pop
cmp
sahf
arpl
sub
xor
cmpsb
push
out
push
xchg
xchg
inc
inc
leave
shll
pop
xor
or
std
lock
mov
in
mov
cmp
pop
adc
std
repnz
lods
inc
and
aas
xor
xchg
sbb
sub
inc
sbbb
stos
cmc
mov
and
lea
xchg
ret
scas
xchg
out
push
mov
xor
inc
inc
lock
mov
mov
sub
mov
jp
sbb
pop
jle
lahf
jne
andb
data16
jl
inc
push
jge
jnp
int3
and
sbb
pop
push
dec
dec
std
stc
jae
mov
pop
sahf
int3
cmc
fidivl
into
hlt
aam
dec
call
pushf
xchg
aam
jo
pop
enter
movsl
pop
cmp
pop
mov
cwtl
fwait
push
loop
fsubrp
mov
imul
fimuls
ret
jge
sub
xchg
mov
cmpsb
pop
mov
outsb
mov
rorb
sub
dec
push
push
jl
popl
cmp
ret
xor
cmp
sahf
adc
aad
and
cmp
sbb
adc
xlat
testb
js
testb
gs
jle
sbb
sarb
mov
inc
test
js
mov
xor
addr16
cmpsb
inc
sbb
call
mov
jmp
outsl
dec
adc
jmp
sti
push
mov
std
cld
xor
gs
sbb
adcb
lea
in
pop
test
pop
fistl
je
add
fs
cld
and
and
jge
sti
jnp
sbb
aaa
loope
jb
movsb
inc
adc
push
dec
in
push
sub
jl
xor
repz
cs
je
shl
sbb
xor
les
or
loopne
in
sbb
inc
loop
aas
xchg
outsb
das
inc
mov
mov
push
leave
jo
popa
push
mov
xlat
mov
mov
ret
mov
addr16
pop
cmpsl
sahf
sub
jl
out
loop
push
or
mov
xchg
jo
loopne
push
movlps
cmc
cmp
cmp
sahf
jge
or
jns
rolb
push
jg
insb
xchg
mov
cld
jmp
test
mov
scas
fidivl
pop
add
dec
insb
mov
mov
test
mov
enter
dec
or
mov
daa
or
mov
add
ret
and
cmp
arpl
jge
or
mov
sub
jecxz
cltd
or
mov
lea
cmp
jae
hlt
repz
add
lcall
xchg
and
in
xchg
mov
outsl
je
adc
int3
mov
jp
call
jle
cmp
cmp
jo
js
jbe
lret
mov
scas
inc
pop
mov
xlat
cmp
fildll
jmpw
push
push
icebp
movsl
xor
cli
in
dec
sbb
ja
mov
test
dec
int
jmp
sbb
xor
cmc
dec
add
or
push
outsb
add
pop
ljmp
test
adc
xchg
dec
repnz
mov
fstl
out
in
sbb
enter
sub
sub
movsl
in
sahf
clc
leave
stos
insb
push
fdivs
ffreep
std
ljmp
adc
and
mov
jge
dec
pusha
int
pop
pop
ss
scas
in
dec
mov
mov
mov
test
xchg
xchg
dec
iret
or
add
jecxz
icebp
or
call
fucom
lods
or
add
push
lods
or
sbb
mov
in
mov
fsub
add
imul
xchg
pop
icebp
pop
std
stos
cld
in
push
shlb
daa
mov
das
sti
mov
jno
push
mov
mov
out
test
push
push
and
andl
pop
adc
adcb
cmp
subl
bound
cltd
shrl
dec
cmpsb
icebp
pop
dec
adc
push
fst
sbbl
xchg
loope
dec
xor
sub
push
xchg
cmp
outsl
pushf
pop
out
add
fwait
aam
inc
fs
test
insb
test
pop
into
sub
test
lahf
mov
or
push
cld
pop
pop
mov
aad
cmp
popa
cmpsb
push
mov
lcall
jl
arpl
push
xor
aam
addr16
mov
sub
cltd
popf
sub
pop
sbb
cmc
or
or
fucomi
push
stos
nop
sub
jb
push
mov
aaa
lea
insl
xchg
int
adc
dec
xlat
and
insb
cmp
in
push
pusha
js
sbb
out
mov
out
insb
test
fs
mov
inc
mov
lods
das
jnp
xchg
xchg
pop
lock
sub
or
in
add
xor
sub
std
iret
push
cli
sbb
test
fildl
sbb
hlt
adcl
andb
pop
data16
lock
inc
ja
movsb
sbb
fsubs
imull
dec
out
jo
ja
cmc
insb
cmp
insl
fs
and
add
mov
xor
xchg
scas
call
fptan
outsl
aam
clc
stos
roll
jne
lahf
testl
out
xchg
std
std
mov
add
hlt
or
sahf
push
pusha
jo
sub
xor
or
or
xchg
xchg
xor
or
cmp
lods
xchg
insl
adc
sti
jl
xor
loopne
push
adc
aas
mov
imul
out
std
pop
xchg
dec
hlt
stos
fwait
mov
mov
sti
loopne
cs
mov
lret
pop
jae
cmp
or
and
test
nop
mov
jp
dec
das
int3
sahf
icebp
sbb
pop
aas
xchg
iret
and
lret
cmp
dec
mov
into
insw
in
cmpsl
lret
cmpsb
push
mov
add
cmovbe
movsb
aam
add
mov
xor
ds
inc
xlat
mov
out
test
adc
and
ljmp
cs
or
mov
xchg
and
push
xchg
popf
inc
xchg
jl
mov
fwait
scas
pop
adc
xor
mov
outsl
cmpsb
or
cmc
out
es
push
divl
test
xchg
xlat
adc
pop
jo
inc
xchg
cmp
lret
les
repnz
jno
mov
cmp
add
jb
std
cmp
aam
call
add
jge
lret
orb
add
or
cmp
and
pop
xchg
fwait
lods
sbb
mov
jp
mov
push
inc
data16
sub
mov
mov
mov
add
push
dec
jmp
nop
and
sarb
cmp
in
stos
pusha
sub
ret
aas
shr
xchg
dec
push
pop
mov
nop
call
in
push
dec
mov
cmp
imul
orl
gs
dec
cmc
pop
adc
pop
mov
inc
loope
sbb
popa
inc
jge
dec
loop
stos
pop
push
pop
mov
inc
es
inc
sbb
and
dec
push
in
dec
mov
mov
jnp
pop
sub
adcb
fsubrl
mov
xor
push
cmc
int
and
or
and
ljmp
icebp
out
mov
pop
sbb
mov
shl
adc
leave
cwtl
aam
fs
jae
outsb
push
out
sbb
and
lods
nop
lret
adc
add
pop
jge
xchg
dec
xchg
inc
xorl
pop
std
fistps
sti
sbb
aam
nop
test
or
mov
addr16
cwtl
sti
push
jecxz
std
fistl
xlat
or
add
mov
pop
cmpsl
js
andl
nop
rclb
sbb
ja
arpl
mov
ret
fwait
push
fbstp
add
clc
mov
xchg
dec
pushf
dec
out
data16
arpl
enter
and
cmc
pop
popf
out
inc
inc
mov
enter
inc
ss
or
pop
jg
cmp
loope
fnstenv
lds
adcb
pop
sub
cmpsb
negb
icebp
imull
inc
fwait
imul
jnp
xor
xchg
int
xchg
movsb
xchg
in
sbb
js
mov
push
data16
insl
std
mov
stc
xchg
mov
out
sbb
xor
inc
out
jns
jg
add
hlt
jns
mov
push
jne
inc
dec
lret
fcoml
pop
cmc
cmpsl
push
adc
add
aad
cmc
data16
loopne
sbb
sti
clc
mov
jl
sbb
ja
rolb
cli
push
adc
hlt
ret
int
mov
into
inc
dec
or
mov
add
push
dec
aas
ror
std
data16
jnp
add
out
mov
stos
inc
pusha
xchg
jbe
and
xchg
jecxz
pop
cmp
sub
imul
jp
sbb
xchg
xlat
xchg
lahf
xchg
gs
stc
lret
stos
jle
inc
fldl
inc
out
divl
es
jbe
or
add
lods
scas
jge
sbb
insb
jnp
xor
lock
iret
cmp
ja
mov
loop
jg
imul
lahf
xor
jg
jp
mov
adc
das
rol
add
fcmovnu
and
aam
add
test
jecxz
fdivs
push
mov
out
jno
mov
cld
movsb
cli
lahf
and
lods
cmp
mov
cltd
pop
loope
sti
xchg
xor
daa
add
xchg
mov
mov
ss
int3
jecxz
pop
xor
pop
scas
daa
xchg
adc
add
lret
loop
xchg
jmp
and
arpl
sub
clc
lds
push
insl
out
cmp
mov
gs
sbbl
push
sti
push
xor
sub
mov
fs
mov
jp
xorl
mov
test
sub
lret
bswap
adc
sti
test
xchg
movsb
mov
cli
jnp,pt
push
jge
jmp
push
mov
lods
hlt
sahf
jge
icebp
xchg
std
jno
push
ss
fidivl
sbb
xchg
cmp
mov
mov
pop
into
jle
mov
cmc
mov
pop
xchg
mov
push
arpl
add
adc
lret
out
xchg
inc
push
je
mov
push
pop
and
stos
dec
mov
lods
lcall
pop
int
mov
je
or
lds
mov
aaa
inc
call
or
dec
adc
pop
ror
call
xor
sub
icebp
push
test
into
fimull
fnstenv
inc
idivb
xchg
sbb
sub
mov
ds
fcoml
dec
outsl
sub
rcl
jmp
enter
mov
inc
sub
mov
mov
rcl
pop
in
aaa
pusha
mov
inc
xchg
mov
or
adc
bswap
into
mov
ja
int
xor
enter
stos
xchg
sbb
ja
pop
push
adc
mov
lds
int3
jg
push
push
mov
add
cli
xchg
mov
jbe
call
lahf
lahf
jo
fildl
repnz
sbb
push
stc
imul
jl
dec
push
rolb
fisubrl
fisttpl
inc
sbb
insb
pop
push
push
mov
jb
add
rcrl
pusha
les
mov
jge
in
add
insl
xor
mov
nop
fs
adcl
sub
dec
scas
cmpsl
enter
pushf
mov
into
mov
aaa
out
or
inc
jl
ljmp
add
cltd
lods
or
nop
xor
ja
cmc
lcall
pop
rclb
mov
cmp
xchg
imul
add
xlat
stc
pop
loop
mov
cmpsb
xor
add
out
sbb
dec
lfs
movsl
icebp
xchg
adc
jno
das
jecxz
mov
stc
mov
outsl
scas
ret
and
push
push
mov
mov
jo
mov
ss
sub
scas
push
movsb
daa
fs
add
or
adc
cmpsb
shll
and
mov
push
pop
fwait
mov
dec
push
call
int3
rclb
sbb
xor
adc
jnp
adc
xchg
pop
inc
push
ljmp
ljmp
mov
dec
shl
mov
movsb
ds
mov
cmc
fwait
dec
scas
hlt
icebp
lret
pusha
mov
ror
mov
mov
fldt
jge
push
mov
mov
sbb
cmp
imul
push
fwait
sarb
sub
aas
popl
dec
lcall
ljmp
test
mov
mov
xor
aam
daa
pop
test
pushf
dec
lcall
or
mov
sub
push
dec
ffreep
pop
or
xor
out
jge
fnstenv
roll
repz
pop
add
dec
xchg
aaa
pop
clc
sub
jb
fisttps
int3
lods
push
sbb
xchg
or
loopew
test
fwait
idivb
imull
xor
mov
aam
das
aam
std
das
fadds
sub
adc
pop
sbbl
sub
push
add
inc
jmp
jmp
pop
into
js
pop
mov
loop
add
adc
ret
sbb
inc
inc
xor
xchg
sub
xor
inc
xor
rclb
add
movsl
jne
push
inc
cmpsl
add
out
insl
int
popf
popa
jae
mov
mov
lcall
fucomip
push
jne
add
dec
cld
lea
pop
mov
dec
pop
stos
add
jge
testb
in
negl
clc
mov
js
test
cmp
lret
out
mov
cmp
scas
ret
mov
add
push
dec
cli
in
insb
test
lds
or
jg
cmc
inc
jge
mov
jecxz
sbb
iret
arpl
dec
fdivl
js
jns
outsl
dec
sbb
js
int3
and
inc
jno
mov
pop
aam
nop
jmp
add
push
ljmp
pop
ret
cltd
lret
xchg
xchg
mov
sbb
pop
lea
fmuls
into
mov
mov
jne
in
stos
jns
aad
imul
js
int
dec
ljmp
lahf
pop
nop
hlt
aas
mov
insb
mov
pop
mov
xlat
in
adc
loope
inc
iret
jle
lret
clc
jb
sahf
xchg
xor
into
add
cmpsl
out
insl
or
xchg
cs
mov
cmp
adc
iret
xchg
mov
cmp
loop
push
mov
lcall
lods
xchg
mov
rcll
bound
out
cmp
pusha
xchg
cmpb
loop
pop
cld
xor
out
adc
outsb
loope
sbb
mov
jg
xchg
or
or
movsl
mov
xchg
jae
mov
lods
push
mov
mov
sbb
cs
and
cmc
je
xchg
mov
les
or
nop
push
adc
add
arpl
dec
cmp
sbb
mov
je
pop
pop
dec
add
inc
loope
scas
icebp
scas
push
daa
insb
in
mov
es
aas
stos
imul
or
cmp
push
mov
mov
push
lods
and
mov
out
push
in
scas
cli
jbe
in
rol
lret
add
and
xor
mov
jmp
xchg
loop
xchg
push
ffree
jbe
pop
in
mov
nop
jns
dec
fistpl
push
in
cmp
or
mov
aad
mov
adc
pop
stc
js
fsubl
mov
rep
outsb
cmpsl
inc
aad
adc
std
cmpsl
scas
mov
dec
push
movl
shl
xor
lcall
ds
iret
push
mov
and
repz
pop
add
loope
aas
ljmp
popf
xchg
xor
pusha
out
mov
xchg
rcrb
push
pop
lcall
mov
addr16
xor
movsb
loope
scas
je
mov
lods
xorl
cs
dec
push
cli
dec
mov
aad
mov
fidivl
mov
or
and
aad
cmp
leave
shlb
lock
dec
out
scas
jl
pop
push
lea
lcall
idivl
adc
ret
lret
xor
sub
orl
test
inc
sahf
scas
xchg
fisttpl
cmp
add
xchg
and
nop
mov
ss
cmp
out
lods
arpl
loopne
jb
lahf
jae
jne
in
and
ficoml
mov
or
push
push
daa
ss
aas
pop
outsl
inc
outsb
insl
jae
stc
jg
insb
scas
push
movsl
arpl
xchg
notb
insl
push
addl
sub
or
cmp
shrl
pop
and
mov
lret
mov
xorl
psubb
nop
and
scas
sbb
adc
inc
pop
sbb
repnz
mov
adc
cmp
mov
xchg
dec
mov
sarl
outsb
lret
lods
dec
adc
push
inc
and
sub
lea
mov
cli
imul
scas
or
push
cmpsl
dec
jp
mov
pusha
and
inc
cmp
push
fmuls
dec
andl
pushf
fwait
push
cs
pop
jmp
cmp
dec
mov
sbb
push
out
in
jl
cmp
or
mov
lods
pop
int3
dec
or
inc
jl
and
and
outsl
push
scas
jo
jmp
test
lods
inc
sbb
scas
mov
sub
pop
nop
jne
dec
rorl
imul
adc
add
inc
stos
mov
cmp
or
out
push
sbb
loope
repnz
and
pusha
fs
mov
jae
cmp
xlat
mov
adc
pop
xor
inc
insb
nop
sub
jecxz
mov
fmuls
mov
mov
adc
not
repz
subb
ret
orl
push
outsb
dec
movsb
jmp
lret
stos
push
std
ret
sahf
lahf
pop
mov
and
mov
jne
jg
stc
icebp
pop
aas
push
cli
jmp
shrl
pop
add
mov
mov
hlt
jmp
adc
mov
test
cli
movsl
and
xchg
dec
push
mov
out
rcrb
add
into
test
inc
jno
adcb
mov
fisttpl
add
call
dec
jmp
dec
cltd
pop
iret
dec
and
aaa
les
pop
mov
adc
push
and
repz
out
inc
add
cltd
lods
sub
lea
test
call
inc
inc
testl
je
dec
je
mov
ljmp
add
ret
adc
imul
cmpsb
xorl
pop
jo
push
push
daa
js
mov
push
dec
dec
jo
push
inc
xchg
add
jmp
out
mov
out
hlt
ljmp
jp
fs
frstor
fildll
jg
sub
cmp
cmc
out
jo
lret
push
aam
in
inc
imul
lea
adc
push
test
pop
movsb
js
xchg
adc
mov
push
dec
sbb
mov
push
dec
shll
adc
mov
dec
movsb
popf
jecxz
xchg
outsl
pop
jae
mov
cmp
popa
in
xchg
and
cmp
jecxz
js
les
and
add
filds
and
push
ds
loop
dec
push
push
pusha
sti
jge
inc
sub
mov
aaa
mov
xor
fcoms
sub
xor
and
jbe
cmp
or
mov
dec
lret
js
stos
push
loope
loop
push
repz
stc
repz
adc
pusha
das
imul
sbb
pop
cmp
sahf
cmpsl
add
adc
inc
fidivrs
rorl
ljmp
xor
or
jl
pop
jns
in
sbb
xlat
sub
cmpsb
push
in
stc
rclb
adcl
dec
mov
test
jo
cli
movsb
test
xchg
ds
or
mov
and
fcomps
mov
inc
sub
out
rcrl
repz
pop
push
rcrb
into
push
xor
jg
adc
adc
xor
xor
and
adc
cmp
inc
lcall
jmp
imul
jbe
dec
and
mov
nop
push
and
test
dec
sbb
inc
shrl
mov
sbb
pop
adc
sub
movsl
xchg
test
cmp
dec
ss
push
sub
cmp
and
jno
movsl
and
mov
pop
sbb
cmpsl
inc
call
fxtract
xchg
lahf
dec
rorl
mov
loopne
add
jae
push
data16
mov
sbb
scas
gs
sti
std
and
sbb
ljmp
add
negl
fstpl
xchg
hlt
cmpsb
push
inc
lahf
cmpsl
push
pushf
sub
vmovsldup
inc
jnp
jno
cmp
sti
pusha
jbe
and
sbbl
cmc
push
pop
xor
rolb
mov
mov
imul
ja
pop
jl
in
lea
xchg
jne
imul
aam
adc
out
push
imul
add
jae
mov
jae
or
push
cmp
inc
add
inc
call
sbb
or
ret
mov
mov
jp
xchg
xchg
out
lahf
aas
mov
test
push
sbbl
lock
add
sub
pop
jecxz
mov
insb
cli
mov
pop
jl
jbe
ret
mov
roll
cli
fst
xor
loop
mov
addr16
ds
sub
pop
or
xor
es
xor
pop
xchg
fisubrs
or
loop
dec
jbe
movsl
aad
xor
sbb
lods
adc
mov
int
lods
into
fadds
inc
icebp
or
ja
lret
mov
xor
push
xchg
out
lret
sbb
ds
xchg
add
cmp
jb
cmc
imul
and
or
lds
and
pop
filds
mov
xchg
push
pop
adc
data16
cmp
test
das
sarb
test
and
mov
fstp
mov
and
adc
sbb
mov
dec
arpl
xchg
enter
and
dec
test
bswap
rolb
cmpsb
aaa
mov
or
push
pop
push
add
mov
mov
push
rcrb
pop
in
dec
fucomip
inc
dec
pmulhw
fisubs
xlat
bound
cmc
jle
jecxz
aaa
shll
sti
rcrl
aas
dec
mov
sarl
mov
push
clc
cs
jns
mov
js
into
dec
pop
test
cli
cmp
mov
add
rcll
scas
jbe
fcmovu
mov
push
xchg
add
pop
pop
xor
out
jno
push
movsb
xor
inc
mov
fadds
lods
mov
mov
push
mov
pop
and
mov
jb
call
out
mov
shll
xchg
xchg
mov
mov
push
repz
mov
movsl
push
stos
sbb
dec
imul
ret
jb
mov
fwait
aas
add
lods
dec
sbbl
push
inc
clc
add
pop
jle
mov
leave
fistpll
pop
push
int3
rorb
movsl
les
cltd
mov
push
jge
lret
mov
cmp
mov
rcrb
ret
cmp
je
sbb
jnp
outsl
in
cmp
leave
jmp
sub
pop
addr16
xor
loopne
add
sbb
int3
mov
jle
sbb
popf
arpl
cltd
outsl
mov
mov
push
bound
push
in
mov
adc
cmpsl
fwait
jg
lret
incl
lret
add
sarb
xor
cmc
add
fdivl
bound
lds
lcall
or
xchg
or
test
outsb
or
pop
lcall
sbb
and
js
rcrb
push
movsb
and
pop
mov
push
and
mov
jmp
adc
fidivl
mov
xchg
je
pop
xor
pusha
jae
mov
adc
jmp
xchg
jo
push
lods
mov
aas
sub
in
insb
test
shlb
inc
add
bound
add
movsl
int3
push
gs
subl
xor
sub
lods
jb
mov
out
mov
add
add
loopne
add
xchg
pop
or
mov
jo
dec
subb
sub
adc
dec
xorl
adc
jecxz
mov
xchg
inc
icebp
scas
cmp
or
mov
jae
test
pop
xchg
jmp
jne
xchg
testb
and
ljmp
cmp
movsl
jle
ja
aas
xor
and
inc
and
add
sahf
ljmp
mov
xor
xor
xor
xor
xor
xor
xor
add
add
sbb
inc
add
pop
add
test
or
add
sub
dec
add
mov
add
mov
