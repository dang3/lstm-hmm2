add
add
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
or
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
inc
aad
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
cmp
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
push
jmp
les
add
mov
mov
inc
add
add
mov
add
cmp
jae
mov
mov
movb
add
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
adc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
push
clc
inc
add
pop
add
scas
loopne
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
arpl
inc
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
sub
inc
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
pusha
movb
pop
add
daa
rolb
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
call
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
sbb
pop
and
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
leave
incb
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
add
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
push
push
call
mov
add
add
add
add
add
xchg
lcall
add
jl
mov
xchg
jnp
mov
data16
cmc
pop
andl
in
add
push
push
push
push
push
call
add
addr16
sub
scas
int3
in
hlt
in
mov
out
xchg
flds
lods
add
add
test
in
imul
add
add
add
bound
lcall
inc
in
push
push
push
push
push
push
push
push
push
push
call
add
add
add
ret
add
add
mov
cmpl
lea
add
iret
add
jb
fiaddl
lcall
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
add
add
add
add
call
filds
add
add
pop
pushf
xchg
lds
stos
add
fadds
add
add
add
cltd
add
leave
rcll
add
popa
add
add
xlat
add
add
bound
test
mov
add
add
add
add
pop
push
call
push
push
lea
push
lea
push
push
push
push
push
call
rcrb
add
rcr
add
mov
cli
movsl
in
add
out
imul
mov
add
add
pop
jecxz
add
mov
add
add
add
loope
add
lcall
add
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
ja
in
imul
cwtl
subb
add
mov
mov
add
mov
out
xchg
add
push
into
pushf
add
pop
add
data16
clc
cld
cmp
xchg
add
add
mov
jbe
arpl
add
add
xorb
insb
add
pop
ja
sub
pop
push
call
push
push
push
push
lea
push
push
push
call
popa
xchg
jmp
jmp
arpl
jle
mov
shlb
add
add
pop
int3
mov
jno
push
negl
pushf
xchg
fisttpll
mov
add
add
add
add
xchg
loop
sub
pop
jmp
ret
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
out
pop
jle
outsl
add
loop
test
add
pop
add
add
data16
push
jnp
add
scas
add
add
pop
jbe
add
add
test
mov
lahf
add
add
add
loope
add
in
fdivr
lcall
inc
hlt
mov
push
push
push
push
push
push
push
push
push
push
call
xchg
movsl
insb
stos
test
add
stc
add
add
add
hlt
pop
jmp
xchg
lods
add
add
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
loope
xlat
data16
add
mov
add
testl
scas
test
fildl
mov
mov
push
insb
fldl
xchg
push
loop
add
movsb
pop
mov
rolb
add
jnp
xchg
lea
std
add
shrb
flds
in
fcomps
ret
add
add
add
push
push
lea
push
push
push
call
mov
push
shl
add
fwait
xchg
add
mov
add
add
pop
add
sahf
pop
lret
cltd
popa
jb
lea
addb
roll
add
add
in
in
lcall
pop
add
repz
adc
xchg
popf
lods
push
rol
lea
push
or
not
add
inc
sub
sub
sub
not
shl
pop
not
pop
push
push
push
call
mov
mov
pop
push
loop
test
jno
in
ljmp
xchg
add
jne
xchg
data16
loopne
roll
mov
lret
pop
add
fucomi
add
add
jae
jo
xchg
add
add
add
mov
rcll
add
in
jl
mov
mov
fiadds
jne
call
push
lea
push
lea
push
push
push
push
lea
push
call
clc
add
fiadds
mov
push
pushf
icebp
jnp
jp
mov
add
push
call
int
fwait
mov
jge
push
mov
cmpsb
add
scas
add
push
lahf
stos
out
push
add
add
add
pop
cmpsl
add
jmp
mov
pop
cmpsl
xchg
stc
xchg
in
jmp
mov
mov
pop
mov
push
push
push
push
push
call
push
popa
jbe
add
andb
cli
shlb
add
leave
add
sar
lds
mov
mov
add
add
jmp
add
mov
add
cli
add
fildl
arpl
add
les
pop
push
pop
add
in
cltd
cmc
incb
test
mov
add
cwtl
testb
sub
pop
movl
push
push
push
push
call
nop
mov
imul
fsubrs
xchg
jle
les
add
lret
jo
add
fwait
out
add
sahf
xchg
mov
add
add
mov
add
push
lods
push
add
add
pop
add
fdivs
sahf
pop
jno
sub
pop
lea
push
lea
push
push
push
push
call
scas
add
loopne
mov
out
add
add
xchg
mov
add
lret
add
mov
pop
flds
pop
addl
nop
ja
add
fcmovnb
movb
add
add
cmpsb
mov
orb
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lahf
jmp
cmpsb
out
ljmp
jl
add
add
test
xlat
add
int3
jge
sahf
add
add
fadd
scas
add
sti
add
jge
add
jge
in
loop
mov
mov
cltd
add
add
jle
push
add
push
add
stos
add
jne
push
lea
push
lea
push
call
std
movsl
lahf
fcmovu
mov
fisttps
hlt
add
test
xchg
xchg
scas
fsqrt
roll
add
add
pushf
add
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
xlat
add
add
popa
negb
xchg
xchg
arpl
or
add
xchg
add
ror
ja
add
dec
sub
add
jne
push
lea
push
push
push
lea
push
push
call
testl
out
add
mov
popa
add
pop
add
add
add
add
xlat
add
add
add
add
cmpsl
add
popf
push
add
in
sub
pop
pushl
call
push
push
sub
rol
sub
push
xor
add
rol
sub
sub
sub
pop
add
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
rolb
push
push
jmp
push
add
add
std
xchg
or
add
test
add
add
enter
add
push
add
clc
sub
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
push
call
into
add
jno
add
pushf
ja
add
test
cmpsl
addr16
popa
mov
add
add
fwait
cmpsb
push
stc
add
xchg
add
add
add
add
push
add
add
mov
add
add
inc
push
push
ror
lea
push
or
not
add
dec
sub
add
pop
ror
rol
pop
push
lea
push
call
add
add
lcall
add
add
mov
jmp
add
loope
add
mov
xchg
add
add
cld
add
add
add
sub
pop
push
push
push
lea
push
push
push
push
call
adc
shl
andb
lahf
add
js
test
imul
add
in
movsl
lea
mov
pop
mov
xorl
in
in
pop
call
mov
push
push
push
push
lea
push
push
push
push
call
add
add
call
add
add
xchg
fildll
mov
stos
popa
add
add
xchg
in
push
addl
les
add
testb
jl
add
add
sub
pop
push
push
push
push
push
push
call
pusha
mov
push
add
mov
add
loop
scas
add
pusha
add
jbe
call
jns
jns
push
cmpsb
in
add
cmpsl
fcmovnu
add
add
add
loop
push
push
clc
lcall
add
mov
add
in
in
pop
push
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
test
int
lea
add
mov
add
push
add
mov
mov
jl
nop
add
add
lea
pop
in
add
push
push
push
push
lea
push
push
push
push
push
call
sbb
in
cmpsb
cwtl
lods
push
movsb
add
lock
add
add
add
loop
add
add
add
mov
add
pop
rcrl
out
add
les
rolb
add
jne
jecxz
jns
add
cmpsl
add
add
mov
add
cmc
add
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
gs
cli
add
test
add
mov
add
add
push
iret
test
add
aad
add
lcall
xor
adc
dec
jle
push
push
push
push
call
sti
xchg
add
add
jns
add
out
gs
pusha
add
add
add
cld
lock
stc
popf
add
lcall
jne
push
push
lea
push
lea
push
call
add
hlt
push
lret
jns
mov
add
mov
jne
add
pop
pop
add
addr16
addb
jo
add
mov
fldcw
add
stc
popa
out
leave
add
gs
stos
movb
inc
or
jno
adc
movsb
push
push
push
lea
push
push
call
movsl
loopne
cld
xchg
xchg
mov
pop
testl
into
in
outsl
add
add
jmp
add
add
add
add
out
jmp
xchg
cld
add
sub
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
add
scas
pusha
push
mov
add
xchg
into
mov
add
nop
push
jle
mov
add
xchg
test
add
jbe
add
add
jno
mov
in
fdivr
lcall
les
add
push
lea
push
push
call
jns
aad
add
xchg
push
add
cwtl
add
add
add
leave
lods
int
jns
cmpsb
jns
mov
add
rclb
add
loopne
shll
mov
sub
pop
add
push
push
push
lea
push
push
push
call
add
jae
fidivrs
popl
push
mov
pop
mov
lcall
int3
add
cwtl
mov
xor
ficomps
xchg
flds
jae
add
enter
cwtl
mov
sub
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
test
loop
add
add
add
add
add
jne
add
cld
clc
clc
add
aad
add
add
add
sti
pop
lods
xchg
popa
add
add
add
add
lcall
dec
add
xor
adc
inc
jge
jno
pop
gs
push
call
test
mov
add
add
jne
add
notb
fldl
subb
lcall
add
scas
mov
mulb
add
add
mov
add
pushf
add
xlat
add
lock
lcall
or
push
push
push
call
shrb
jbe
movb
stos
add
push
add
add
add
cltd
push
flds
add
fnstsw
add
popf
add
mov
add
add
sub
pop
add
push
push
push
push
push
push
push
push
push
call
imul
repnz
mov
add
add
mov
lock
js
pop
rolb
jnp
scas
mov
add
mov
add
mov
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
call
out
mov
add
add
shlb
bound
mov
gs
add
add
movsl
pop
push
add
out
jo
pop
std
add
outsl
pop
cmpsb
std
jne
add
into
pop
fiaddl
add
stos
je
xchg
add
sub
pop
mov
push
push
lea
push
push
call
fs
add
add
add
push
popa
add
in
pushf
test
add
in
mov
mov
in
add
add
js
sub
pop
xor
push
push
lea
push
push
call
add
mov
fwait
jo
add
je
iret
aad
push
add
add
xchg
fistps
test
add
pusha
cmc
int
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
call
int3
add
add
jl
out
mov
push
add
cmpsb
add
loope
add
add
add
jns
hlt
in
aad
int3
jl
add
fs
mov
sub
push
push
lea
push
push
lea
push
push
call
add
lret
roll
in
mov
xchg
add
insb
mov
add
push
add
jbe
imul
add
add
add
out
mov
sti
sbbl
push
add
xchg
test
jmp
sbb
mov
cli
mov
xchg
sub
pop
pop
rep
push
push
push
lea
push
push
push
call
jmp
pop
incb
hlt
lahf
fnstenv
mov
lds
mov
xchg
iret
add
test
nop
add
mov
pusha
mov
add
clc
add
lret
test
push
mov
in
call
pop
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
out
insb
add
jmp
loope
add
xchg
add
int
add
mov
mov
fsubrl
jae
lret
add
int
cmc
jbe
out
add
add
test
fsubrs
data16
out
add
mov
out
pop
scas
pop
xchg
mov
mov
les
pop
hlt
push
push
push
push
call
add
hlt
xchg
add
roll
xchg
aam
lcall
add
add
add
ljmp
pop
in
push
push
push
push
push
lea
push
lea
push
push
push
push
call
ja
sahf
add
icebp
push
into
arpl
imul
add
pop
in
add
in
ja
mov
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
in
jno
shlb
mov
out
add
jp
add
mov
add
pusha
jp
imul
jne
mov
add
jns
test
into
add
add
pop
mov
notb
clc
add
add
mov
rcrb
sub
pop
add
push
lea
push
push
call
lods
std
outsl
add
add
xchg
add
add
cmpsl
clc
mov
int
add
add
fiadds
cmpsl
add
stos
scas
stos
push
insb
les
xchg
aad
stos
add
add
cltd
add
je
pop
cmpsl
sub
pop
mov
xor
push
push
call
stos
add
lcall
pop
lods
les
push
push
cmpsl
incb
insb
in
push
pop
shr
add
in
rolb
add
mov
mov
add
push
mov
add
add
push
and
repnz
adc
orl
imul
push
push
call
push
add
xchg
xchg
sti
add
add
out
add
add
xchg
in
shr
add
movb
pushf
add
imul
add
movsb
cmpsb
scas
testb
add
arpl
push
mov
add
out
aad
leave
bound
sub
pop
mov
xor
push
push
call
xchg
add
mov
ljmp
cld
in
add
add
push
js
xchg
stos
add
ret
jp
lea
push
push
push
push
push
push
call
add
add
movb
pushf
in
add
aam
jb
aad
jecxz
mov
mov
add
ja
push
jmp
add
rcr
popf
push
sub
pop
add
push
push
push
push
call
add
add
mov
roll
sti
out
iret
add
add
int
rclb
add
add
scas
add
fs
add
add
mov
rolb
push
divl
ljmp
lret
fsubl
jmp
add
xlat
pushf
add
add
leave
int3
out
add
in
lock
lcall
fsubrs
adc
mov
or
inc
add
sub
rol
pop
sub
ror
ror
ror
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
je
repnz
mov
add
add
add
lahf
add
add
add
lret
add
test
add
repnz
shr
add
add
add
add
pop
mov
bound
fcoms
fdivr
lcall
jne
push
push
push
push
push
push
call
pop
add
pop
mov
push
add
push
pop
leave
mov
add
push
enterw
gs
fcompl
push
add
pop
add
test
add
add
add
out
sub
pop
call
push
push
lea
push
call
jnp
push
fadds
mov
add
hlt
add
push
lret
add
mov
jge
jno
push
add
add
mov
lcall
add
or
or
push
shl
shl
inc
push
push
pop
add
add
sub
sub
add
lea
pop
pop
push
lea
push
push
lea
push
push
push
call
add
add
mov
mov
movl
jne
push
stc
add
test
enter
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
add
jbe
out
add
xchg
xchg
out
jnp
add
fldenv
lock
mov
outsl
pop
push
clc
fs
add
mov
fildl
icebp
arpl
gs
add
out
xlat
add
pop
scas
faddl
push
cmpsl
add
call
push
push
push
push
push
push
lea
push
push
push
call
jge
add
fcompl
add
add
jo
mov
xchg
mov
add
lahf
loop
jecxz
jl
push
jmp
add
rolb
push
add
mov
je
pop
mov
bound
add
in
ja
add
repnz
add
add
bound
lcall
clc
push
push
lea
push
push
push
push
push
push
call
add
add
mov
add
mov
xchg
add
xchg
cld
js
add
mov
out
jb
iret
add
xchg
addb
sahf
add
add
add
mov
ret
xchg
add
add
call
std
add
flds
shll
pop
push
push
push
call
add
mov
ljmp
add
les
mov
mov
jecxz
pop
add
mov
push
push
push
call
add
movsb
add
add
mov
pop
fucom
int
mov
test
add
add
repnz
test
add
in
jp
add
jae
addb
adc
add
add
arpl
mov
pop
push
push
pop
jge
jne
push
add
add
iret
fdivrp
pop
add
pop
hlt
add
push
ror
sub
pop
add
add
push
push
call
add
mov
add
add
icebp
add
lret
add
aam
out
add
add
lret
add
add
push
testb
or
divb
jno
adc
int3
inc
inc
pop
add
push
dec
pop
push
push
shr
pop
mov
xor
push
add
shr
pop
add
push
shl
shl
inc
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
mov
hlt
add
cli
add
add
in
lret
out
xchg
add
push
imul
jnp
cmc
add
sub
pop
mov
push
push
push
call
lods
lock
add
add
add
test
add
cwtl
xchg
mov
movsb
mov
mov
add
cmc
xchg
add
lahf
mov
pop
add
pop
cmc
add
xchg
add
outsl
test
add
jae
add
push
scas
add
sub
pop
xor
push
push
push
push
push
call
add
je
imul
out
add
push
scas
loop
popf
xchg
mov
fs
xchg
push
test
jmp
mov
add
add
cli
shl
add
mov
push
push
add
leave
enter
add
into
enter
xchg
jmp
stos
clc
out
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
sahf
sarb
push
jle
addb
mov
add
add
jmp
add
pop
add
jp
mov
push
repnz
hlt
add
roll
add
add
xchg
loopne
xlat
lds
lock
jno
in
fcomps
movsb
mov
push
push
push
push
push
push
call
js
loopne
add
iret
test
out
add
cwtl
add
mov
add
insb
aad
scas
vpshufhw
jnp
fwait
addl
loope
add
out
mov
out
in
add
add
add
add
add
icebp
jle
faddp
add
testl
addb
lret
movl
outsl
sub
pop
xor
push
push
push
push
push
call
jl
add
push
mov
stos
xchg
xchg
pop
arpl
sub
stc
notl
aam
add
xchg
add
leave
add
cwtl
add
add
pop
add
stc
add
fiadds
lcall
les
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
pop
std
nop
lahf
push
add
lds
jl
std
mov
add
mov
xchg
in
mov
add
jecxz
rcrl
leave
je
push
lea
sub
pop
mov
push
push
push
push
push
push
push
call
cmpsl
add
rcrl
jo
jbe
jp
in
out
iret
add
arpl
out
negl
add
lods
add
call
mov
arpl
add
jb
sub
pop
xor
push
push
push
push
push
push
push
push
lea
push
push
call
fstp
jno
add
roll
data16
xchg
add
add
xchg
add
add
add
xorl
mov
add
loope
out
add
mov
test
out
push
sub
add
popa
xchg
pusha
flds
add
mov
xchg
mov
add
sub
pop
add
push
push
lea
push
push
lea
push
push
call
hlt
clc
add
add
mov
push
jno
adc
mov
js
xchg
add
ljmp
hlt
fildl
lret
in
rolb
add
add
lock
add
leave
add
in
call
xor
push
shl
pop
add
add
push
lea
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
stos
jae
jp
add
xchg
add
in
add
mov
fiadds
add
jne
push
push
mov
mull
push
fldl
outsl
add
lcall
inc
or
jno
adc
inc
adc
push
lea
push
lea
push
push
push
push
push
push
call
fs
imul
jbe
pushf
add
addr16
xchg
mov
cmpsl
out
repnz
add
xchg
add
xchg
mov
lret
sub
pop
xor
push
push
push
push
push
call
out
call
push
mov
mov
bnd
in
add
faddl
xchg
mov
add
faddl
jb
lret
add
add
mov
add
add
test
sahf
lret
jge
xchg
add
add
xchg
add
cltd
andl
pop
pop
cld
rolb
lcall
les
add
push
push
push
lea
push
push
call
out
add
add
fwait
add
add
jae
push
add
add
xchg
aam
in
add
mov
clc
cmc
subl
add
fidivs
add
filds
lock
ror
pop
pop
rep
push
push
push
call
add
xchg
add
mov
lret
int
add
test
fnstsw
mov
add
add
rcl
add
cmpsb
loopne
jo
add
mov
arpl
add
into
cld
imul
test
lcall
dec
sub
jno
adc
cmp
ds
call
jle
jne
std
push
add
repnz
rclb
add
mov
add
in
cli
add
add
sti
sub
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
xchg
jbe
mov
mov
add
out
add
fsubrs
add
fwait
add
push
add
mov
scas
xchg
cli
lock
out
jno
addl
cmc
fisubrs
jno
jns
jnp
push
cmpsb
jo
jno
add
sub
pop
add
push
sub
dec
inc
pop
or
je
push
lea
push
push
lea
push
call
xchg
lahf
add
add
add
xchg
mov
add
jecxz
mov
call
mov
xchg
xchg
add
bound
out
iret
add
add
push
add
mov
sub
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
add
add
add
ljmp
add
cwtl
movsb
pop
lcall
add
in
mov
xchg
mov
add
mov
add
push
sub
pop
add
push
lea
push
push
push
call
mov
add
lret
mov
add
ret
roll
push
mov
jmp
lds
mov
sti
add
add
in
je
aam
shrb
add
add
cmc
stc
add
loop
sub
pop
rep
pop
push
push
sub
not
shl
push
sub
add
lea
sub
add
add
add
pop
shr
inc
pop
push
push
call
add
add
xchg
fmull
add
fidivrl
or
add
lcall
mov
cmpsb
mov
lcall
add
in
add
mov
icebp
add
jno
add
lcall
add
js
les
mov
add
lea
imul
lea
push
push
push
push
push
call
add
add
rolb
icebp
xchg
cltd
icebp
pusha
cwtl
mov
mov
add
add
add
fldt
icebp
mov
repnz
pushw
addr16
mov
add
mov
loope
add
add
pop
mov
push
shl
shr
xor
shr
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
xchg
lret
add
add
lock
add
bnd
lock
xchg
add
test
rolb
ret
add
add
add
add
add
add
add
insb
bound
movb
and
push
push
lea
push
push
push
push
lea
push
call
sti
add
mov
add
imul
outsl
add
xchg
mov
mov
int3
add
add
lock
test
add
in
in
jmp
push
xor
add
pop
push
push
add
sub
pop
mov
add
push
lea
add
not
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
push
pop
mov
xchg
fsubl
mov
aad
jp
add
cld
push
addb
cli
outsl
in
test
mov
sub
pop
push
push
push
call
ret
push
jmp
mov
jbe
add
push
arpl
mov
mov
data16
add
add
add
add
loopne
fs
pop
push
push
lea
push
push
lea
push
push
push
call
add
in
subl
add
add
fs
subb
stc
lcall
xchg
fists
add
add
add
loop
shl
addb
add
fsubp
repnz
imul
add
loop
bound
mov
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
cmc
scas
add
jo
pushf
mov
jo
mov
enter
add
add
clc
add
xchg
pop
mov
add
mov
add
xchg
fnstcw
push
jecxz
push
out
add
pop
push
push
lea
push
push
push
call
jmp
mov
mov
add
mov
add
in
add
add
movsb
fdivl
add
sub
pop
pop
pop
push
sub
pop
leave
push
dec
pop
ret
push
shr
pop
push
push
push
push
push
call
mov
add
add
mov
sarb
add
mov
insb
add
add
roll
lcall
lea
add
add
pop
add
lcall
scas
insb
sub
pop
mov
push
push
call
add
mov
test
jle
add
ja
les
add
add
in
xchg
cmc
cli
add
add
mov
add
push
outsl
add
loopne
mov
clc
lcall
clc
push
lea
push
lea
push
call
outsl
out
mov
lret
xchg
add
xchg
add
cmpsl
lods
push
repnz
add
xlat
fcompl
fdivp
movl
add
add
pop
mov
cwtl
lret
leave
push
mov
loope
fs
push
mov
hlt
lcall
push
push
push
push
push
push
push
push
push
call
add
int3
fldcw
add
stos
cltd
pop
out
add
add
stos
iret
stc
cmpsb
add
jb
out
addl
add
popa
sub
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
int3
push
movsl
xlat
xchg
movb
add
aad
push
add
push
stc
add
hlt
fincstp
enter
add
sub
pop
push
push
not
sub
lea
pop
movl
addl
push
push
push
push
push
lea
push
push
push
push
push
call
shrb
lret
add
test
add
out
test
add
rol
loop
lahf
add
lret
icebp
jge
add
add
mov
jp
add
add
icebp
cld
mov
add
call
add
add
mov
pop
add
add
lcall
rorb
mov
push
push
push
push
push
call
add
call
lret
jecxz
add
add
hlt
jno
pop
pop
xchg
mov
add
jne
add
out
les
add
outsl
add
mov
addr16
add
mov
add
bound
push
push
jae
in
call
mov
push
push
push
push
push
push
push
push
call
xchg
add
lods
push
add
outsl
scas
add
add
repnz
add
add
jl
add
add
imul
add
jl
add
add
pop
push
push
push
push
call
sti
add
pop
add
nop
popl
fs
pop
movl
lahf
jne
js
add
int
in
cmpsb
jl
push
jmp
lahf
movl
add
add
push
add
sahf
imul
rclb
add
add
add
cltd
cmc
push
cmpsl
out
pop
loop
add
insb
add
lock
add
push
sti
jge
cmc
ret
stos
fadds
lcall
clc
pop
pop
push
push
push
push
call
iret
popl
mov
xchg
stos
addb
out
mov
mov
mov
add
add
loopne
shrb
pop
rolb
fimuls
add
lret
cld
add
loopne
icebp
mov
in
lock
leave
push
xor
sub
pop
ret
push
push
push
lea
push
call
xchg
add
mov
nop
add
cld
negl
aad
jmp
addl
cwtl
xchg
add
add
loop
push
arpl
mov
add
add
sub
pop
push
push
push
call
icebp
jbe
add
add
push
add
add
add
add
push
mov
cltd
add
pop
add
xchg
sti
add
cltd
add
add
sahf
lods
add
add
add
test
pop
fildl
add
data16
add
push
nop
add
mov
bound
in
clc
pop
mov
add
push
not
ror
pop
push
push
push
sub
ror
pop
push
push
sub
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
add
push
push
in
bound
loop
out
add
add
arpl
mov
add
add
in
add
add
jae
add
add
aam
leave
add
in
mov
in
testl
push
shr
lea
pop
addl
push
lea
push
push
push
lea
push
push
call
jae
cmp
pop
fs
add
push
shlb
js
mov
out
std
add
sbbb
icebp
pop
icebp
add
roll
insb
call
mov
fwait
add
mov
add
roll
fbld
push
mov
add
mov
add
iret
fmull
cwtl
sub
pop
push
call
push
sub
rol
pop
mov
pushl
push
push
push
push
push
lea
push
push
call
jae
mov
add
in
add
add
imul
xchg
add
add
add
pusha
hlt
js
cwtl
pop
add
add
lret
scas
into
aad
add
fiadds
data16
testl
add
add
mov
cmc
push
sub
pop
push
push
add
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
rolb
mov
andb
add
add
add
bnd
mov
filds
add
mov
add
push
push
add
add
mov
add
ret
out
mov
pop
sub
pop
call
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
add
xchg
add
add
jge
mov
lret
add
add
mov
ljmp
mov
cwtl
jecxz
iret
movb
add
ret
sahf
jle
in
fdivr
lcall
jge
add
test
std
lcall
push
push
push
push
lea
push
push
call
lods
data16
testl
add
jnp
add
cmpsl
jno
mov
add
imul
jo
add
xlat
add
roll
add
std
xchg
adc
add
jecxz
add
add
mov
jb
cli
add
pop
add
int3
enter
movsb
xchg
scas
add
lcall
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
stos
add
movl
incb
add
add
fisubrl
add
enter
add
add
add
pop
pop
ret
sahf
loopne
sub
pop
pop
pop
push
shr
pop
leave
ret
push
lea
push
lea
push
push
push
call
addr16
out
add
add
add
lods
lds
add
adc
mov
out
add
add
pusha
jno
add
pop
pop
jmp
add
lods
add
add
mov
add
add
add
filds
lcall
push
push
push
lea
push
lea
push
call
int3
add
add
add
cld
ljmp
aad
add
sahf
filds
lea
xchg
cli
rolb
cltd
nop
pushf
add
adc
add
add
add
add
aad
shr
sub
pop
mov
push
push
push
call
jae
add
fldpi
push
push
add
les
mov
rolb
add
add
add
pop
lret
add
add
add
mov
add
out
mov
mov
out
hlt
loop
pop
add
mov
popa
add
hlt
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
test
add
out
loopne
push
mov
stos
mov
add
push
add
imul
pop
add
jge
test
add
add
into
pop
jl
mov
incb
fistps
iret
sti
push
add
mov
add
cli
add
out
into
add
cld
add
addb
xchg
add
ljmp
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
loopne
jns
movsb
je
subl
add
pusha
ja
add
movb
add
sbbl
add
mov
add
mov
lods
nop
add
pop
movl
add
add
mov
mov
sub
pop
push
movl
push
add
sub
pop
push
push
lea
push
push
lea
push
push
push
call
add
fistps
js
add
add
addl
push
notb
call
add
add
add
add
cwtl
lock
add
sahf
lds
in
call
call
push
lea
push
push
push
call
movsl
add
lock
ret
push
push
jae
jo
cmpsb
xchg
out
out
add
add
in
add
add
jbe
rclb
outsl
lahf
add
roll
add
lcall
or
pop
stc
call
pushf
push
push
lea
push
push
call
add
in
mov
add
cmpsl
add
add
fldcw
mov
test
pop
pusha
imul
add
add
add
jnp
jae
mov
add
add
addb
incb
movsl
mov
add
cli
loop
add
add
std
xchg
cld
stc
add
add
add
in
call
add
test
push
push
call
add
xchg
clc
in
pop
loope
add
jb
rolb
add
mov
rcll
add
mov
into
rcr
loopne
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
or
add
in
mov
add
nop
into
push
hlt
mov
out
xorb
iret
mov
mov
test
mov
add
data16
enter
loop
add
push
lea
pop
pop
pop
push
pop
leave
push
push
push
push
push
push
push
lea
push
push
push
call
add
push
test
test
jge
mov
xchg
add
stos
xchg
mov
add
add
incb
mov
mov
add
add
clc
add
mov
jns
sarb
jecxz
xchg
push
add
add
ret
add
push
push
push
call
mov
jge
add
add
int
add
mov
sti
sahf
movb
mov
mov
test
add
add
add
cmc
add
out
out
test
testl
shrb
pop
mov
push
shr
pop
add
push
push
call
add
call
nop
add
int
jl
in
jno
gs
mov
into
loope
add
mov
out
popf
jnp
test
add
stos
add
add
mov
add
add
pop
add
cli
ljmp
hlt
pop
add
mov
add
outsl
mov
lcall
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
jmp
mov
jmp
ret
mov
add
xlat
add
add
cmpsb
cmpsb
incb
je
stc
scas
fldl
add
add
add
aad
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
add
mov
fnstsw
fwait
xchg
test
fisubrs
add
push
out
test
in
add
add
cld
in
iret
add
mov
cmp
jno
stc
add
add
mov
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
mov
add
sahf
jne
je
mov
jno
add
mov
ror
jle
movsb
std
mov
add
lret
jp
loope
nop
push
sub
pop
push
push
lea
push
push
push
lea
push
call
jno
in
mov
fisubrl
add
lcall
add
pusha
in
add
mov
add
mov
lcall
aad
mov
js
jmp
in
lcall
inc
or
inc
cmp
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
add
add
jbe
test
cmpsb
mov
add
jns
pushf
test
add
xchg
add
add
add
lds
sti
mov
add
xchg
jb
mov
loopne
ficompl
in
clc
lods
shrb
add
cwtl
mov
hlt
jmp
in
fcompl
call
push
lea
push
push
push
call
add
add
add
cmpsb
lods
data16
imul
push
adc
add
imul
add
out
mov
push
lahf
mov
mov
jmp
cli
bound
add
add
enter
add
addb
in
test
nop
sub
pop
mov
push
push
lea
push
push
lea
push
push
call
je
mov
out
jmp
add
add
add
add
add
add
mov
cwtl
add
push
movb
jle
jecxz
ja
jne
pop
add
rolb
add
mov
add
sub
pop
shr
add
push
sub
pop
mov
mov
push
lea
push
push
push
call
jmp
push
add
test
ja
shll
out
xlat
cmc
ret
outsl
xchg
add
push
add
add
call
add
add
add
mov
out
add
push
rcl
add
movsb
scas
mov
lea
into
sub
pop
add
add
push
add
pop
mov
push
lea
pop
mov
push
xor
pop
cmp
jne
cmp
jne
push
dec
shl
pop
mov
movl
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
leave
add
add
xchg
add
add
add
mov
add
into
push
add
icebp
add
add
add
jnp
sub
pop
jmp
push
not
pop
mov
push
push
push
push
push
push
push
push
call
xchg
ror
loope
add
mov
cltd
mov
add
xlat
add
imul
fwait
add
mov
pop
add
mov
sub
jne
push
push
push
push
push
push
push
push
call
add
add
popa
mov
add
add
add
add
add
mov
shll
add
movsb
arpl
fldl
addb
mov
xchg
add
add
loope
pop
add
testb
mov
addb
xchg
pop
mov
std
add
inc
adc
add
add
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
data16
add
mov
mov
cmpsl
add
aad
ret
mov
fadds
add
push
add
xlat
filds
add
into
js
add
pop
add
mov
out
rol
jae
add
pop
ja
mov
in
fdivr
lcall
pop
push
add
mov
push
sub
ror
add
pop
mov
cmp
jne
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
jnp
int
out
mov
add
pop
add
rol
frstor
add
mov
rclb
xchg
scas
add
scas
xchg
shlb
jb
add
lea
movsb
add
add
mov
flds
add
ja
in
fdivr
lcall
inc
adc
lret
inc
pop
movl
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
in
arpl
add
int3
scas
add
mov
adcl
add
mov
add
ret
add
add
add
xchg
je
add
jbe
out
add
push
jne
add
in
jbe
cmpb
jp
lret
mov
test
add
cs
push
push
push
push
lea
push
lea
push
push
push
call
int3
push
outsl
fsts
mov
mov
add
xchg
pusha
mov
add
movsl
add
int3
add
jecxz
add
loope
add
add
add
shrb
add
push
gs
pop
mov
push
push
push
push
call
iret
call
xchg
popf
scas
mov
add
xchg
add
xchg
std
cwtl
loop
push
add
ljmp
lds
add
jecxz
add
mov
imul
sub
pop
cmpw
jne
push
pop
mov
push
push
push
push
push
call
stos
movsl
jno
lds
cld
addl
add
add
add
iret
in
add
mov
jp
bound
in
loopne
lea
mov
mov
add
sub
pop
movl
push
add
pop
jmp
push
push
push
lea
push
push
lea
push
call
mov
cli
xlat
add
stc
xchg
add
add
aad
add
cld
loope
add
add
stos
sahf
fldenv
in
call
xor
add
pop
push
push
push
push
push
push
push
lea
push
call
xchg
lahf
hlt
iret
jo
cmpsb
mov
in
roll
add
xchg
jecxz
add
xlat
lahf
in
movsb
add
add
cli
add
mov
mov
add
push
pusha
add
xlat
fisubrs
add
jae
test
add
lret
stos
add
jl
add
les
push
scas
add
add
add
add
sub
pop
mov
mov
push
push
push
push
push
push
push
push
call
jbe
add
scas
fs
add
fwait
ja
mov
xchg
nop
add
stos
jnp
add
add
add
add
in
imul
in
lahf
push
add
rolb
jmp
add
push
add
ficompl
add
in
add
mov
lahf
ja
push
mov
jle
add
lcall
push
or
aas
pop
inc
push
sub
inc
push
or
not
add
shl
sub
inc
inc
lea
inc
pop
shl
sub
sub
sub
pop
push
push
call
add
sti
call
cltd
push
stc
pop
jb
add
mov
mov
add
hlt
loop
add
add
xchg
nop
push
add
loop
add
jnp
add
add
add
mov
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jmp
hlt
cli
add
scas
xchg
add
add
add
xlat
lock
js
out
jl
sub
pop
call
push
ror
pop
cmpl
je
push
push
dec
not
lea
push
and
add
lea
sub
xor
sub
shr
lea
sub
lea
pop
shr
inc
lea
pop
push
dec
sub
shr
pop
push
push
sub
shl
pop
call
cmpl
je
push
push
sub
add
shr
push
or
not
add
inc
dec
sub
sub
ror
sub
shl
pop
shr
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
jno
in
js
add
xchg
fstps
add
add
add
iret
xchg
addl
add
pusha
insb
add
fsubs
add
add
add
add
xlat
cld
test
push
ret
jge
add
add
pop
mov
pop
add
add
lret
add
cld
push
in
fcompl
push
shr
pop
call
push
push
push
call
stc
add
add
push
ljmp
sti
jmp
add
mov
rcrb
add
pop
add
out
pop
pop
in
into
int3
jle
add
push
add
xchg
aad
jne
add
fwait
insb
add
add
add
imul
cltd
add
icebp
sti
movsb
ret
mov
add
loop
pop
sub
pop
cmpl
je
push
push
add
xor
xor
push
xor
add
ror
lea
add
lea
sub
ror
pop
xor
pop
push
add
xor
pop
push
push
shl
add
pop
call
push
shl
ror
ror
pop
cmpl
je
push
push
lea
push
push
pop
add
not
sub
shl
dec
add
pop
add
pop
push
push
push
lea
push
push
call
jmp
add
movl
add
add
mov
test
mov
jl
arpl
add
out
bnd
add
add
add
cmpsl
add
mov
add
ljmp
add
loope
mov
lcall
push
push
call
add
pop
add
aam
add
add
addl
add
add
add
jl
add
push
add
mov
bound
mov
repnz
add
add
push
shr
add
sub
pop
cmpl
je
push
push
add
push
xor
add
inc
not
shr
sub
inc
lea
ror
pop
sub
sub
sub
pop
push
shl
pop
push
call
push
push
lea
push
push
call
add
add
add
scas
jecxz
jp
fcmove
add
fadds
push
imul
add
lea
out
enter
roll
add
push
lock
lcall
cmp
or
int3
je
push
push
lea
shl
push
and
add
add
sub
sub
sub
dec
pop
xor
dec
inc
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
jp
mov
out
add
add
add
outsl
mov
add
push
add
add
movsl
lods
add
add
push
add
add
outsl
call
fcomps
add
xchg
je
in
fcompl
call
push
dec
ror
sub
dec
pop
cmpl
je
push
push
ror
inc
push
or
inc
add
sub
shl
sub
sub
pop
ror
shl
xor
pop
push
push
push
push
push
call
mov
imul
add
add
hlt
popf
add
mov
fwait
add
cmpsb
jns
rolb
insb
add
roll
adc
addb
scas
xchg
xchg
test
jp
add
mov
xchg
add
int
ja
in
in
lcall
push
dec
sub
pop
call
cmpl
je
push
push
not
shr
dec
push
sub
add
dec
shr
add
sub
rol
ror
pop
add
pop
push
push
call
arpl
gs
push
xchg
add
add
add
in
cmpsl
filds
add
push
ficomps
fildl
fildl
jne
loop
add
push
test
pop
test
lods
push
gs
rolb
lcall
call
push
dec
pop
cmpl
je
push
push
dec
inc
push
push
pop
add
not
lea
sub
pop
add
dec
pop
push
add
inc
pop
push
push
push
lea
push
push
push
push
call
mov
add
add
mov
test
pop
add
mov
add
mov
add
add
imul
les
sub
add
add
sub
pop
call
push
ror
pop
cmpl
je
push
push
not
push
or
not
add
rol
sub
rol
not
rol
pop
pop
push
add
sub
not
pop
push
call
push
push
lea
push
push
lea
push
call
in
add
mov
adc
add
jge
add
mov
call
mov
movsb
add
icebp
add
jmp
in
in
lcall
js
xor
ret
test
mov
jmp
push
xor
push
xor
add
dec
ror
sub
lea
sub
inc
xor
pop
sub
not
shl
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
neg
gs
rorb
lret
mov
add
add
xchg
loopne
add
add
jbe
out
ret
add
add
pop
add
add
add
rolb
jecxz
add
movsb
loopne
in
fcompl
call
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
cmpl
test
mov
sahf
add
faddl
add
add
addr16
mov
add
loope
je
sarl
mov
popa
std
out
add
lcall
js
jmp
les
je
push
push
add
shr
push
xor
add
add
shl
sub
shr
add
lea
pop
sub
pop
push
shl
lea
inc
pop
push
call
push
not
sub
pop
cmpl
jne
push
push
lea
push
push
push
call
add
sahf
add
add
pop
add
add
jecxz
add
sti
add
lods
add
mov
xchg
lods
sarb
add
repnz
add
lods
jnp
add
mov
lods
add
pushf
sub
pop
mov
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
data16
jbe
ljmp
push
add
jne
jnp
insb
jge
add
push
add
test
rcl
add
int
add
filds
imul
movsb
pop
fsubrs
ljmp
roll
add
out
add
mov
add
hlt
jle
shrl
lcall
add
add
add
push
push
push
lea
push
call
aad
add
add
xchg
xchg
out
push
out
int3
add
loop
js
popl
loop
add
xchg
add
add
jno
add
add
jmp
addb
add
add
lods
push
add
add
add
pop
push
repnz
out
jb
add
mov
push
aad
in
call
jmp
xor
push
lea
push
push
push
lea
push
push
call
add
xchg
add
pushf
jo
cmpsl
add
add
shll
test
mov
roll
stc
add
mov
pop
add
xchg
add
mov
in
call
push
push
lea
push
push
lea
push
call
pop
add
test
jmp
test
add
add
add
xchg
add
fimull
cld
stc
add
add
add
push
jbe
mov
push
add
add
jb
mov
pop
pop
push
shl
pop
leave
push
pop
ret
push
add
pop
push
mov
push
dec
dec
ror
pop
add
push
add
pop
cmpl
jne
push
push
add
push
xor
add
sub
dec
rol
xor
pop
sub
shl
pop
push
inc
inc
pop
pushl
call
push
not
add
pop
push
push
pop
call
push
lea
push
push
push
call
add
add
pop
loope
add
add
mov
pop
mov
add
iret
test
add
jo
stos
add
sahf
frstor
pushf
add
rcll
add
add
jns
out
in
pop
outsl
pop
pop
leave
add
add
add
leave
lds
push
std
add
add
jmp
push
inc
add
add
pop
cmpl
je
cmpl
jne
push
inc
shl
pop
mov
call
push
push
add
not
push
or
inc
add
sub
shr
pop
lea
pop
push
push
push
push
push
push
push
push
push
call
push
lahf
add
push
iret
add
les
add
call
xlat
add
shlb
add
mov
mov
rorb
jo
arpl
add
nop
xlat
imul
xchg
mov
jecxz
pop
iret
push
add
lcall
jne
push
shr
lea
pop
call
push
add
sub
not
pop
lea
push
shl
dec
sub
inc
pop
push
push
lea
rol
dec
ror
pop
push
push
push
dec
ror
xor
pop
push
push
dec
xor
not
not
pop
call
push
dec
pop
ret
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
shlb
mov
std
add
mov
add
stos
add
scas
add
out
add
add
pop
je
add
filds
mov
clc
add
add
movsb
add
in
push
add
movb
aad
movsl
xchg
cwtl
fildl
lcall
repnz
add
loopne
inc
shr
pop
cmpl
jne
push
push
rol
rol
shr
xor
push
and
add
add
shr
shr
sub
add
add
shl
pop
shl
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
in
jae
mov
leave
out
add
push
xchg
add
add
andl
jle
pop
iret
faddl
add
ljmp
add
add
add
add
add
add
xchg
mov
stos
add
add
add
xchg
std
sub
pop
pushl
push
sub
inc
add
pop
call
push
add
pop
push
push
lea
push
call
test
imul
fiadds
je
pop
stc
repnz
add
js
add
fcomps
mov
bound
jl
test
mov
push
fsubs
add
mov
hlt
add
flds
push
add
add
mov
stos
rolb
add
add
test
sub
pop
call
push
push
push
push
push
call
jae
jae
mov
add
mov
add
jbe
pop
sahf
cltd
add
mov
lods
xchg
data16
aam
mov
xchg
add
lret
add
mov
add
std
mov
xchg
lods
fiadds
lcall
inc
sbb
add
dec
jo
lea
sub
lea
pop
cmpl
jne
push
not
xor
pop
mov
push
add
not
pop
mov
push
push
lea
push
push
call
add
roll
add
hlt
add
xchg
je
add
scas
test
add
rorb
add
lds
mov
add
test
mov
pop
add
mov
mov
mov
fwait
jle
xchg
out
mov
mov
pusha
add
scas
cwtl
add
icebp
test
mov
lock
pop
jmp
push
push
shr
shl
inc
push
push
pop
add
rol
rol
sub
inc
rol
shl
pop
sub
shr
shr
pop
push
shl
sub
rol
add
pop
pushl
push
sub
pop
call
push
sub
sub
rol
pop
call
push
push
shl
push
or
inc
add
dec
sub
xor
pop
ror
shr
pop
push
push
lea
push
push
push
push
push
call
mov
add
loopne
add
mov
faddl
add
xlat
add
jno
add
add
idivb
add
add
fwait
mov
pushf
rol
add
fsubrl
mov
pusha
add
cltd
sub
pop
pushl
push
lea
shr
pop
call
push
lea
push
push
push
push
push
push
call
mov
into
mov
jl
mov
add
mov
add
add
jo
aad
test
cwtl
add
icebp
add
int
add
add
ljmp
push
stc
mov
add
xchg
add
mov
add
add
add
add
data16
in
in
lcall
shrb
push
aad
push
dec
push
and
add
add
sub
inc
sub
pop
shr
add
pop
push
ror
shl
add
sub
pop
pushl
call
push
lea
shl
inc
pop
call
push
push
sub
rol
inc
push
xor
add
xor
add
sub
dec
dec
pop
sub
rol
xor
ror
pop
push
lea
sub
pop
pushl
push
not
xor
pop
call
push
ror
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
add
in
shll
jmp
add
popa
nop
push
pop
movsl
je
roll
xchg
jno
jle
add
in
flds
addr16
add
add
add
movsl
fidivl
add
add
int
add
fucomp
add
loopne
pop
mov
lcall
push
add
dec
lea
pop
call
push
push
inc
add
push
or
inc
add
rol
sub
add
not
rol
pop
not
pop
push
push
push
push
push
push
push
push
push
call
testl
mov
test
mov
add
icebp
push
test
rol
add
call
add
arpl
pushf
add
add
add
addr16
cltd
xchg
add
xchg
fnsave
pop
in
pop
mov
clc
add
stos
xchg
movsb
mov
imul
out
push
pop
insb
roll
in
fdivr
lcall
jne
push
shl
add
rol
pop
call
push
sub
xor
pop
call
push
push
shl
lea
push
sub
add
sub
sub
sub
add
inc
lea
pop
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
stc
add
add
mov
push
out
jnp
add
pop
add
sarl
js
enter
fnsave
add
add
add
hlt
in
movl
xchg
into
addb
add
aad
ret
sub
pop
pushl
push
sub
dec
pop
call
push
lea
sub
lea
pop
call
push
push
push
xor
add
add
sub
inc
pop
pop
push
inc
add
rol
pop
pushl
push
inc
ror
pop
call
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
add
add
lret
mov
add
add
add
xchg
adcb
cmp
cmpsl
loope
pop
mov
add
ljmp
mov
add
push
or
mov
in
fcompl
rclb
sub
rol
shl
pop
lea
push
push
not
push
sub
add
add
ror
sub
dec
sub
sub
pop
add
sub
add
pop
push
push
push
push
push
call
mov
add
add
loope
add
add
jp
out
in
stos
outsl
add
test
add
add
pop
mov
les
jmp
sub
pop
pushl
push
pop
call
push
push
call
pop
add
loope
loop
out
enter
add
add
data16
add
add
addb
add
add
leave
rcr
add
add
add
add
add
mov
popa
mov
jp
push
mov
lcall
push
push
push
push
push
call
aam
xchg
add
add
jp
call
movsl
lcall
add
loopne
mov
add
jo
clc
mov
lods
jp
xlat
mov
add
push
xchg
into
add
in
and
pop
cltd
add
add
shll
add
add
sub
pop
call
push
push
inc
push
or
not
add
ror
shl
rol
sub
sub
pop
dec
rol
not
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
in
add
movsl
mov
in
jge
enter
lcall
addl
add
in
add
add
mov
add
add
add
mov
loope
mov
lcall
jne
call
push
push
push
push
push
push
push
call
add
push
add
add
test
add
fbstp
push
add
add
add
add
call
push
out
jge
add
add
fsub
add
addl
add
repnz
call
push
push
push
lea
push
call
jae
int3
add
lret
mov
add
add
jp
leave
push
fsubrs
add
pop
mov
in
adc
into
add
pop
pop
sub
pop
mov
push
push
add
rol
not
push
sub
add
rol
sub
xor
pop
ror
pop
push
shr
rol
not
pop
pushl
push
sub
pop
call
push
push
pop
pushl
call
push
push
lea
push
sub
add
dec
sub
rol
sub
sub
pop
sub
pop
push
lea
dec
pop
pushl
push
push
push
push
push
call
mov
jnp
into
gs
push
xchg
add
mov
add
add
fwait
add
add
mov
jo
add
pop
sub
pop
call
push
push
inc
push
sub
add
sub
not
dec
add
pop
lea
sub
shr
pop
push
push
ror
push
and
add
inc
sub
dec
sub
add
inc
pop
sub
sub
shl
pop
push
push
push
push
push
call
add
add
icebp
add
mov
mov
data16
push
out
add
hlt
add
mov
pushf
add
add
insb
lcall
lcall
shrb
in
jo
push
rol
push
or
inc
add
sub
sub
inc
add
pop
shl
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
movsl
push
add
add
ret
in
cmpsl
add
add
loope
into
add
add
enter
loopne
pushl
push
xor
sub
pop
call
mov
push
add
pop
lea
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
scas
call
push
add
cmp
cmpsl
xchg
imul
pop
add
fiadds
add
add
gs
add
pop
aam
jle
in
jbe
add
xchg
loop
clc
mov
sub
pop
lea
push
push
push
push
lea
push
push
push
push
call
mull
jno
push
out
addr16
mov
add
mov
add
lahf
je
add
add
mov
jecxz
add
cld
decb
xchg
sbbl
rolb
in
add
add
mov
jge
sub
pop
push
push
push
push
call
stos
or
shlb
push
lods
pop
add
add
testb
add
add
les
push
add
fiaddl
add
lcall
push
add
pop
push
push
shl
inc
sub
pop
push
push
not
add
pop
push
push
push
push
push
call
push
jae
pop
rcr
add
roll
pop
leave
add
lods
add
add
mov
mov
test
add
gs
ja
scas
out
mov
add
arpl
add
lcall
add
push
push
lea
push
push
push
push
push
call
add
mov
leave
std
test
add
test
mov
jo
mov
jo
test
rol
add
mov
mov
jae
push
in
add
add
lock
pushf
add
add
pop
bound
add
into
int3
pop
pushl
push
push
push
push
push
push
push
push
call
lret
mov
imul
pop
push
add
add
data16
jbe
int
mov
add
mov
jo
scas
roll
sahf
cltd
add
mov
test
lds
add
jmp
xlat
pop
add
roll
add
add
add
push
mov
add
add
enter
cmpsb
xchg
add
pop
call
push
push
ror
add
sub
push
and
add
xor
rol
add
sub
sub
pop
xor
dec
pop
push
push
push
call
add
mov
jl
ja
popf
jge
mov
push
add
pop
pop
movb
xchg
mov
ret
in
hlt
pop
pushl
push
push
push
push
push
push
push
call
push
mov
repnz
data16
add
imul
into
rcl
js
mov
fwait
mov
scas
pop
roll
pusha
mov
add
mov
cltd
out
add
mov
push
add
pop
fldenv
mov
in
lcall
push
sbb
add
sahf
fs
call
add
add
add
out
add
movl
arpl
rcr
cld
mov
les
xchg
jge
xchg
clc
jmp
mov
mov
add
mov
add
add
lea
add
add
add
add
idiv
cld
add
negl
sub
pop
call
mov
push
push
push
push
call
jo
mov
jmp
cmpb
mov
sahf
add
add
push
add
mov
add
add
jns
out
data16
lcall
dec
jne
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
push
mov
mov
stos
push
mov
jmp
mov
add
cltd
add
add
add
pop
stos
imul
add
add
mov
repnz
add
jno
add
cli
mov
add
cmpsl
test
jmp
push
push
lea
push
lea
push
push
push
push
push
call
add
cmpsb
mov
in
test
jns
pop
fwait
test
lret
lock
clc
cmpsb
add
call
add
fldl
jae
mov
mov
sub
pop
call
push
push
sub
dec
push
sub
add
add
add
add
inc
sub
sub
pop
add
pop
push
xor
pop
pushl
push
push
push
push
push
call
add
loop
addl
mov
add
test
add
mov
mov
add
ja
add
add
rclb
lcall
sbb
add
push
push
call
add
js
popf
add
popl
leave
fldl
jle
pop
test
mov
jo
stc
mov
add
add
scas
add
stc
andl
cmpsl
add
mov
iret
add
call
fstl
cmp
add
stos
data16
call
mov
cld
push
add
pop
add
xchg
fistl
add
hlt
xchg
sti
icebp
add
test
add
enter
addl
lcall
sarb
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
jno
push
add
add
add
add
ret
lds
js
add
mov
add
push
int3
stc
jbe
add
push
add
pop
in
add
add
mov
add
add
imul
pop
lea
push
push
rol
rol
sub
push
or
inc
add
ror
dec
lea
sub
inc
pop
inc
not
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
jp
pop
push
push
cmpsb
int
cmc
jae
mov
outsl
nop
add
add
pop
push
jae
add
add
add
add
add
sub
pop
pushl
call
push
add
pop
push
push
dec
pop
call
push
push
ror
shr
xor
dec
push
and
add
add
lea
sub
sub
sub
dec
pop
add
pop
push
push
push
push
push
push
push
lea
push
call
add
cli
repnz
add
add
add
stc
faddl
add
add
loopne
ja
cld
cltd
ret
mov
add
jne
push
push
push
push
push
lea
push
push
push
push
push
call
stos
stc
cwtl
les
fiaddl
add
lcall
mov
lahf
push
add
jnp
loop
lcall
bound
mov
xchg
add
mov
fcomps
mov
add
push
push
call
jbe
data16
push
add
add
addb
add
mov
pop
add
xchg
add
call
add
loop
add
push
add
lret
add
add
in
cld
add
call
pop
call
push
dec
sub
shl
pop
mov
push
sub
lea
pop
lea
push
push
shl
xor
lea
push
xor
add
shr
lea
dec
not
sub
shl
pop
pop
push
shl
xor
dec
dec
pop
pushl
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
add
stos
mov
stos
add
jle
fs
add
add
into
ljmp
in
fcomps
mov
add
lea
push
push
push
push
push
push
lea
push
call
add
jecxz
xchg
in
add
add
add
push
ficompl
xchg
mov
lahf
add
push
mov
pushf
cmpsb
add
fnstenv
add
add
add
add
fldl
add
hlt
pop
add
jmp
ja
add
add
fadds
add
stos
jne
push
xchg
sub
pop
push
push
push
ror
pop
push
pushl
push
push
shl
inc
push
sub
add
ror
sub
add
add
pop
lea
ror
inc
pop
push
lea
push
push
push
push
lea
push
call
insb
add
jmp
add
cltd
pushf
fwait
add
mov
out
add
add
enter
lock
test
add
add
int3
negb
mov
fmuls
mov
cmp
pushf
jne
mov
jno
add
out
in
call
push
call
push
push
sub
push
push
pop
add
add
sub
pop
not
rol
pop
push
pop
pushl
call
push
sub
pop
push
push
lea
push
push
lea
push
call
in
xchg
repnz
add
add
add
mov
xchg
aad
add
fiadds
mov
mov
scas
add
add
into
mov
add
cwtl
sti
add
lcall
shrb
inc
loop
push
ror
push
push
pop
add
add
shr
ror
rol
sub
shr
inc
pop
add
pop
push
push
push
call
lea
push
add
add
add
add
int
addb
mov
mov
data16
arpl
add
add
jl
xchg
add
add
jne
in
hlt
lcall
jne
call
push
ror
rol
add
pop
call
jmp
push
push
lea
push
push
push
call
scas
jecxz
test
mov
add
add
cmpsb
add
add
add
cld
mov
add
lods
out
jbe
pop
pop
mov
add
add
ljmp
add
add
pop
add
fisubs
add
cmpsb
add
add
in
lcall
pushl
mov
push
push
push
push
push
lea
push
call
je
add
mov
add
jne
add
jp
int3
pop
mov
addb
lds
add
test
pop
hlt
add
push
add
ror
ror
add
lahf
loop
in
call
jmp
push
push
inc
push
sub
add
inc
inc
sub
rol
ror
pop
rol
dec
pop
push
push
push
lea
push
call
add
movsl
add
push
fiadds
add
push
add
mov
add
add
mov
shll
sti
jne
mov
roll
into
add
lcall
jne
call
push
push
lea
push
lea
push
push
push
push
call
xchg
add
outsl
add
mov
test
roll
test
add
add
add
push
push
add
js
add
mov
xchg
add
fnstcw
fisubrl
mov
push
push
push
push
push
push
push
push
push
push
call
ret
loopne
fprem
mov
add
fidivl
push
add
imul
xchg
add
add
add
sti
add
jb
add
sarl
add
mov
xchg
add
jmp
rorb
cld
add
add
add
sub
lcall
shrb
loopne
xlat
push
shl
xor
push
sub
add
rol
xor
sub
add
not
pop
pop
push
rol
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
mov
addr16
lret
mov
mov
add
push
addb
add
add
pop
mov
cwtl
jge
lock
leave
data16
cmp
add
add
icebp
add
add
add
call
lret
fstpt
loopne
in
fdivr
lcall
mov
add
push
add
pop
push
call
push
push
push
lea
push
push
lea
push
lea
push
call
cli
add
add
cli
outsl
xchg
add
out
out
jae
add
les
add
ja
mov
ret
pop
push
add
add
xchg
jmp
pop
leave
push
add
inc
dec
pop
add
push
lea
push
push
push
lea
push
call
jp
add
add
mov
push
mov
sahf
lcall
add
pop
xchg
roll
jns
cli
push
js
aam
add
add
xchg
stos
add
jbe
not
jmp
shl
out
hlt
mov
lods
add
add
pop
push
add
sub
sub
xor
pop
pop
pop
push
lea
rol
inc
sub
pop
leave
push
shr
add
ror
sub
pop
add
push
not
dec
sub
pop
ret
push
sub
not
shr
pop
leave
push
not
pop
ret
push
add
sub
pop
push
mov
push
push
push
push
lea
push
push
push
call
jb
ja
mov
xchg
add
out
faddl
jbe
mov
jne
jmp
add
jp
push
mov
add
sub
pop
cmpl
jne
push
add
xor
rol
pop
mov
push
push
push
push
push
push
push
call
add
fdivs
fbld
fidivl
add
loope
mov
shlb
add
add
xchg
add
int3
add
insb
jb
xchg
sti
mov
jbe
mov
jmp
add
arpl
in
in
jmp
push
push
lea
push
push
push
push
push
push
push
call
call
add
out
jb
out
iret
ret
jb
add
movsl
hlt
add
mov
mov
pop
add
fildl
lods
add
test
mov
sar
jno
movl
rol
pop
and
xor
push
push
lea
push
lea
push
push
push
call
imul
xchg
add
mov
add
add
add
jl
add
mov
add
cld
add
imul
loopne
add
ljmp
ficoms
pop
fwait
add
push
into
popf
aam
js
stos
gs
add
add
sub
pop
xor
push
shl
not
add
pop
add
xor
push
shr
pop
dec
sub
push
push
push
push
call
rolb
testb
add
mov
add
push
lock
add
add
fidivl
scas
add
add
clc
add
add
xchg
add
add
sub
pop
jmp
push
rol
dec
pop
sub
push
push
push
push
push
push
push
push
push
push
call
xchg
add
lea
lds
xchg
cmpsl
out
add
add
jl
add
xchg
xchg
add
iret
add
add
leave
test
add
add
add
loope
add
jl
aad
add
add
mov
iret
add
mov
stos
mov
scas
xlat
fildl
add
push
clc
shlb
stc
xchg
aam
jns
push
fsubs
sub
pop
pushl
push
push
push
call
fstps
add
roll
mov
mov
xlat
add
add
pop
jecxz
popl
fcoml
add
xchg
pop
data16
add
add
mov
push
rcrb
jno
call
lods
add
in
add
aad
leave
sub
pop
pop
push
dec
not
dec
not
pop
sub
push
inc
add
pop
cmp
jne
mov
push
xor
ror
pop
lea
push
pop
sub
push
sub
pop
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
addr16
add
popf
mov
pushf
mov
loope
popl
repnz
add
add
test
add
xchg
add
mov
add
rcl
add
add
xchg
cltd
add
lcall
jmp
lea
xor
pop
add
push
push
call
mov
add
add
rol
add
mov
mov
add
add
add
mov
mov
pop
jp
faddl
xchg
jns
fldenv
add
jmp
enter
nop
sub
pop
sub
pushl
push
pop
pop
push
push
push
push
push
push
push
push
push
push
call
lods
pop
add
add
push
fists
xchg
add
mov
test
add
ret
push
push
add
add
add
add
add
add
push
add
flds
add
pop
mov
add
lret
cltd
sub
pop
shr
push
push
push
call
add
jecxz
js
add
loopne
sbb
ljmp
add
add
movsb
push
add
add
ret
push
lahf
stos
aad
outsl
add
add
scas
xlat
loope
add
push
cmpsb
out
in
stos
add
mov
loopne
sub
pop
and
sub
push
not
lea
ror
pop
cmp
jne
leave
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
stc
xchg
add
add
add
add
fwait
add
movsb
add
nop
add
jbe
add
loopne
lcall
add
push
push
push
push
push
lea
push
push
push
push
call
add
in
jno
mov
fcomps
jge
mov
add
add
cld
loope
add
fadds
imul
push
add
add
push
ret
int
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
fiadds
lea
add
mov
outsl
mov
add
int3
stos
add
fldl
add
nop
mov
icebp
mov
add
cli
call
lcall
in
push
lea
push
push
push
call
add
roll
add
iret
loopne
stc
add
add
add
add
add
jmp
push
push
add
jne
mov
scas
fwait
add
std
add
lods
add
mov
mov
add
add
push
in
mov
shrb
ret
jo
popa
add
lcall
cld
push
push
shr
shr
not
pop
push
push
inc
shr
pop
push
push
push
xor
pop
push
push
inc
pop
mov
lea
push
push
push
push
push
push
push
push
lea
push
push
call
push
add
add
fildl
cli
add
fldl
add
add
out
add
sti
xchg
push
add
add
lret
add
add
mov
stc
lret
push
add
add
data16
xchg
jecxz
mov
xchg
ja
add
leave
lret
fstl
lahf
add
fildll
add
ljmp
fistpl
sub
lods
push
push
call
mov
arpl
add
add
add
data16
jmp
mov
add
jmp
push
add
jbe
stos
mov
add
aad
mov
hlt
add
add
adc
ljmp
repnz
pop
add
mov
push
lea
not
xor
pop
add
push
xor
xor
ror
pop
mov
push
push
lea
push
push
push
push
push
call
xlat
xchg
add
in
add
les
add
add
out
je
out
add
jp
add
lds
add
lret
add
jge
push
sub
not
pop
xor
push
sub
dec
pop
mov
push
push
lea
push
push
push
push
push
call
movb
mov
movsl
pop
push
cltd
jl
push
mov
in
aam
xlat
pop
movsl
popa
xchg
lock
orb
negb
add
lds
rolb
mov
and
push
push
push
push
lea
push
push
call
cli
mov
xchg
gs
add
in
mov
pop
jl
add
cwtl
popf
mov
shl
stos
mov
sub
pop
rol
push
push
push
lea
push
push
push
push
push
push
call
out
xchg
xlat
push
flds
jp
in
imul
in
in
test
pushf
idivl
filds
add
mov
cmc
add
add
clc
ficoml
mov
lcall
rolb
push
lea
push
push
call
push
add
xchg
ja
add
mov
fadds
out
in
add
add
popa
add
xchg
add
lock
movsl
add
add
mov
mov
add
mov
data16
popa
mov
add
add
xor
scas
push
lea
push
lea
push
push
call
add
add
insb
into
add
nop
loope
rcrl
shl
out
xlat
scas
mov
loopne
mov
jle
add
shl
gs
push
add
add
push
jo
add
add
jge
jo
add
addl
add
add
bound
add
add
lcall
push
sub
pop
cmpb
jne
push
inc
ror
pop
add
push
push
push
call
popf
add
aam
nop
int
add
jae
lahf
fiaddl
xlat
fldl
add
enter
je
add
jno
scas
mov
add
add
add
jle
add
cmpsb
add
add
cld
add
enter
add
out
mov
add
add
jnp
mov
pop
cmp
je
add
push
add
ror
pop
cmpl
jne
xor
push
push
push
call
add
fwait
push
fwait
lods
mov
outsl
add
mov
add
add
clc
push
je
push
test
add
sub
pop
pop
push
inc
shr
pop
pop
push
lea
shr
pop
pop
pop
push
shr
pop
pop
leave
push
inc
pop
ret
mov
push
push
call
add
add
les
add
fimuls
movsb
lahf
add
add
scas
mov
add
add
add
add
out
fwait
add
add
add
lcall
push
or
negl
add
inc
add
and
push
call
add
leave
push
fadds
add
push
pop
outsl
add
xchg
sahf
test
iret
add
add
loopne
testl
add
add
jle
jge
mov
add
add
fnsave
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
add
mov
add
add
add
in
xchg
movsl
lcall
add
testb
push
push
push
push
lea
push
lea
push
call
add
xchg
add
add
jnp
movsb
arpl
cltd
add
pop
clc
jge
add
mov
loop
add
fcomip
iret
pusha
fildl
add
add
add
lret
call
pop
push
add
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
outsl
add
add
not
add
je
pop
add
fs
xlat
add
jns
add
pop
xchg
mov
push
mov
cltd
loope
ljmp
add
aad
jle
push
lret
add
in
fdivr
lcall
call
push
push
call
leave
xchg
into
add
stos
jecxz
add
in
add
add
add
clc
push
clc
sahf
add
ljmp
popa
add
add
add
add
add
stc
mov
add
in
add
add
add
lds
lcall
xor
push
not
lea
ror
pop
pop
push
push
push
push
push
lea
push
push
call
aad
lcall
rorl
loope
hlt
mov
iret
xchg
cli
lods
add
pop
lods
fsubl
pop
xchg
add
imul
jl
out
sub
pop
pop
push
push
push
lea
push
call
iret
hlt
add
cld
imul
add
cld
cltd
add
add
add
imul
insb
cmpsb
int
add
xchg
add
add
imul
mov
test
in
lock
lcall
pop
push
add
pop
pop
leave
push
inc
dec
shl
pop
ret
push
lea
push
push
call
imull
add
pop
add
out
mov
popf
flds
scas
add
in
jne
notb
fisttpll
roll
test
add
lods
stos
mov
icebp
add
mov
scas
add
add
add
push
push
call
filds
mov
pop
movsl
scas
mov
pusha
into
ljmp
add
fs
pop
movb
sub
pop
mov
push
shr
xor
pop
add
push
push
rol
shr
pop
push
push
lea
push
push
push
lea
push
call
add
pop
jae
test
popl
lock
jl
scas
movsb
push
add
add
rcll
add
imul
movsl
pushf
popa
loop
icebp
ficoms
std
pop
xorb
add
add
mov
fildl
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
cmp
mov
mov
push
mov
mov
in
mov
stos
adc
ljmp
push
add
test
add
movsl
mov
add
mov
mov
push
add
xor
rol
pop
push
pop
push
push
push
lea
push
push
push
call
add
xchg
jo
lds
pop
add
push
add
add
jge
sarb
in
add
cmpsl
int3
stos
addb
mov
mov
mov
icebp
add
mov
push
mov
add
add
in
add
mov
lcall
push
cmp
ljmp
leave
lea
push
lea
push
lea
push
call
enter
jmp
add
pop
pop
jns
add
movsl
arpl
add
add
push
mov
add
in
add
add
out
add
test
jne
push
sub
pop
mov
push
rol
rol
ror
pop
shr
push
push
push
push
push
push
push
push
call
push
mov
jns
testl
xchg
bound
cmpsb
mov
jp
flds
push
imul
add
cmc
jp
add
test
mov
loop
xchg
test
in
sub
pop
add
mov
push
push
push
push
push
call
add
aam
add
add
add
push
movl
out
jle
push
add
sahf
loop
add
add
add
out
add
addl
in
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
push
icebp
add
pop
int
fwait
iret
xchg
push
fbstp
add
cwtl
jle
add
pop
nop
jnp
add
sahf
je
push
stos
fnstenv
add
add
add
fiaddl
add
sub
pop
pushl
push
xor
lea
pop
popl
mov
push
push
push
push
lea
push
push
push
push
push
push
call
shll
mov
add
add
pop
out
jl
ret
lock
sti
add
rolb
add
add
add
cmc
stos
add
loopne
loop
movsl
sub
pop
add
push
pop
xor
push
push
push
push
push
lea
push
push
call
mov
cwtl
add
lret
xchg
out
add
push
push
add
add
add
xorb
mov
add
xlat
jnp
add
add
add
in
into
leave
rolb
add
add
call
in
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
add
ror
popf
mov
mov
xlat
scas
push
add
add
cwtl
jns
aam
add
cltd
xchg
jecxz
add
imul
sub
pop
mov
add
push
push
push
lea
push
call
jae
ljmp
add
pop
mov
add
lods
icebp
movb
xchg
outsl
mov
add
out
add
add
add
add
ret
aad
in
lock
lcall
rclb
pop
rol
push
push
push
push
call
pop
jnp
add
mov
add
subb
add
jbe
add
add
add
add
out
out
negl
pop
pop
add
add
je
imul
add
fmull
add
add
add
pop
add
push
push
push
lea
push
lea
push
push
push
call
loopne
fbld
jecxz
add
rorl
imul
add
add
push
add
mov
repnz
add
add
xchg
lret
jb
loope
mov
add
add
push
mov
add
ljmp
test
add
out
repnz
mov
add
add
jae
add
addr16
pop
nop
push
push
push
lea
push
lea
push
call
lret
add
lea
add
scas
fadds
mov
nop
add
add
push
push
push
push
call
test
add
addb
add
addb
xchg
add
out
scas
aam
in
fnstenv
jbe
std
add
add
ret
add
pop
out
iret
add
movb
push
add
push
test
roll
xchg
sub
pop
nop
push
xor
pop
nop
push
lea
push
call
add
jno
lods
push
jnp
push
fs
js
add
out
add
push
mov
mov
add
clc
lea
cmpsl
add
std
jae
imul
add
xchg
scas
mov
mov
test
mov
add
mov
in
mov
test
leave
aam
push
pop
mov
in
clc
lcall
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
lods
add
in
mov
add
hlt
add
cld
sti
icebp
in
add
add
add
jmp
lcall
fisubs
add
sti
pop
add
sti
mov
out
xchg
cmp
pop
nop
push
sub
xor
pop
nop
cmpb
jne
push
xor
ror
pop
add
push
shr
xor
shr
pop
nop
push
shl
xor
lea
pop
nop
push
not
lea
add
pop
cmp
je
push
shl
pop
nop
push
push
push
lea
push
lea
push
call
mov
add
add
iret
xchg
add
fidivrs
add
mov
in
add
pop
jnp
add
push
jno
outsl
fiadds
xchg
add
mov
push
std
add
add
add
mov
arpl
add
mov
int3
add
ja
add
loope
rorb
test
lcall
inc
push
push
push
push
push
push
push
push
call
add
vfrczsd
mov
add
ja
add
pusha
mov
add
divl
std
loope
add
gs
add
stos
xchg
clc
add
xchg
add
pop
pop
add
in
loopne
nop
push
lea
push
push
call
adc
add
popf
add
jl
add
add
out
add
int3
lds
push
add
add
imul
add
sub
pop
nop
push
push
push
push
push
call
jl
add
add
add
lahf
add
test
leave
jne
addr16
add
mull
loopne
cmc
divl
call
aam
hlt
mov
cwtl
add
std
flds
fbstp
lahf
xchg
sub
pop
cmp
jb
push
add
pop
xor
push
push
push
call
je
add
mov
mov
add
add
add
push
add
add
add
movsb
negb
jb
insb
add
add
add
push
add
add
mov
xchg
push
push
lea
push
push
push
push
push
call
add
mov
add
std
add
mov
mov
add
xchg
roll
add
xchg
jae
add
add
add
fnsave
iret
sti
jae
add
rcl
cli
mov
add
in
fcomps
push
and
rcll
repz
pop
movzwl
mov
push
add
pop
add
push
inc
dec
pop
mov
xor
push
ror
shr
dec
sub
pop
xor
push
push
push
push
lea
push
push
call
cmpsl
add
jne
add
add
push
icebp
add
jnp
add
add
add
push
add
add
loope
push
sub
sub
dec
shl
pop
xor
push
push
push
push
push
lea
push
push
call
add
add
add
in
xchg
add
lods
test
add
add
add
push
vpackuswb
add
enter
xchg
xchg
push
rol
add
jne
imul
fstpt
addr16
add
lret
mov
mov
push
add
mov
out
add
loope
add
add
mov
pop
shl
push
push
push
push
push
push
push
push
call
faddl
jo
arpl
xchg
add
stos
mov
jge
add
add
push
enter
movb
fwait
pop
push
lds
test
in
test
add
loopne
xor
push
lea
push
push
lea
push
push
push
push
call
add
fsubl
add
outsl
mov
add
mov
jle
in
mov
in
add
pop
jns
xchg
cltd
cltd
add
bound
cmpsb
mov
addl
add
add
popa
call
fiaddl
rol
add
in
jb
in
in
lcall
loope
push
pop
xor
push
pop
mov
add
push
add
sub
add
pop
pop
push
sub
xor
rol
inc
pop
pop
push
sub
add
rol
pop
pop
push
dec
rol
shr
pop
pop
push
sub
add
pop
leave
push
push
lea
push
push
lea
push
call
loope
mov
filds
into
add
arpl
into
cwtl
aam
lcall
lock
jl
mov
add
arpl
add
js
add
push
add
add
add
shr
add
add
add
jl
in
mov
in
fdivrl
add
mov
add
add
add
popa
add
add
sub
pop
ret
push
push
lea
push
push
push
push
push
push
push
push
call
add
stos
sti
add
add
test
faddl
negb
lret
shrl
fiaddl
fldl
add
out
popa
fcomps
push
into
add
lret
xchg
mov
add
push
not
pop
mov
push
shr
dec
inc
pop
push
push
add
dec
not
add
pop
push
push
push
call
push
movb
out
clc
add
mov
add
mov
add
fsubl
pop
add
add
jno
pop
jae
add
lock
fnsave
mov
loope
add
cmpsb
lcall
movsb
add
mov
add
lcall
push
shr
lea
xor
dec
pop
push
push
push
lea
push
call
add
mov
add
add
add
rcrb
mov
add
enter
add
in
add
add
mov
push
push
lea
push
push
call
mov
div
jnp
jmp
int3
std
shll
filds
add
add
incb
stos
add
ljmp
aam
rcr
fdiv
add
lret
cmc
test
scas
add
jb
addb
loopne
lods
add
sub
pop
mov
push
not
pop
mov
test
je
push
push
push
push
push
push
push
lea
push
push
push
call
jno
add
add
popa
lds
add
mov
pop
popa
iret
add
pop
add
out
add
fisttpll
test
lds
add
sti
push
add
lods
push
add
add
add
add
add
cmpsl
add
pop
add
lcall
jno
push
xor
ror
sub
inc
pop
test
je
mov
push
push
push
call
out
clc
add
movsb
push
movsl
push
jmp
jnp
add
add
mov
repnz
add
pop
xchg
filds
push
mov
sub
pop
mov
push
push
push
call
push
add
not
jb
out
aam
ficoms
pop
loop
ljmp
add
add
cwtl
jl
hlt
lcall
pop
inc
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
push
add
loop
add
popa
add
add
add
add
cmpsb
cltd
mov
add
repnz
add
fdivr
lcall
rorb
test
add
add
orb
lea
push
lea
push
push
push
push
call
addr16
mov
jmp
int
icebp
add
add
jmp
stos
roll
enter
stos
add
popa
add
pop
std
add
lcall
rorb
xchg
add
push
ror
pop
mov
inc
push
add
ror
xor
pop
cmp
je
push
pop
test
jne
push
push
push
push
push
lea
push
push
push
call
add
jbe
add
add
mov
outsl
stos
add
cwtl
roll
stos
add
add
addb
popa
stos
add
add
pusha
cli
add
mov
add
add
jbe
add
fldl
mov
gs
push
in
loopne
lcall
rclb
pop
pop
push
add
shl
rol
pop
pop
push
inc
shr
shr
pop
pop
leave
push
xor
xor
xor
pop
ret
push
shr
pop
mov
push
xor
sub
pop
inc
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
shr
test
test
add
add
mov
add
pusha
scas
fiaddl
add
add
add
loope
add
ret
add
add
lock
push
rol
dec
add
ror
pop
lea
push
push
push
push
lea
push
lea
push
call
ljmp
add
add
add
push
stos
movsl
jle
xchg
mov
add
jl
jp
xchg
add
lods
add
xchg
add
add
add
jge
add
add
lret
add
xchg
mov
add
add
add
sub
pop
mov
test
je
push
push
push
call
mov
add
jns
rolb
std
mov
add
pop
xchg
iret
add
mov
push
add
pop
jp
mov
pop
pop
add
add
add
pusha
add
add
mov
flds
push
mov
add
movl
add
lcall
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
push
add
test
addl
jle
testb
mov
jbe
xchg
outsl
lret
shl
add
push
sub
pop
add
push
push
call
cld
xchg
std
out
add
mov
add
add
out
int
scas
lret
fwait
popa
pop
movsb
jle
add
bound
test
jge
add
stc
add
mov
add
int
add
sahf
add
lcall
loopne
test
call
push
push
lea
push
call
cltd
push
stos
xlat
add
data16
add
popl
add
mov
mov
add
add
jns
add
add
mov
push
pop
mov
mov
mov
pop
add
sarb
pop
add
sub
pop
mov
push
push
push
call
shl
xchg
mov
pop
fnsave
int
mulb
pop
mov
push
aam
xchg
stos
clc
add
cli
add
add
test
icebp
fsubl
cwtl
roll
jae
movb
mov
add
mov
in
hlt
lcall
rorb
mov
rol
rol
pop
mov
push
xor
pop
add
cmp
je
push
push
push
call
imul
lret
cmpsb
mov
add
insb
add
or
mov
mov
loop
ljmp
enter
add
jle
add
mov
call
add
add
clc
add
sahf
mov
hlt
pop
jmp
push
push
push
push
push
call
std
jge
pop
mov
add
cli
popf
gs
rorl
in
add
add
add
jae
jmp
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
call
jbe
add
add
xchg
push
cli
add
add
pop
mov
into
fldcw
fildll
jae
mov
out
add
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
push
shr
xchg
add
mov
push
sar
gs
popa
lods
add
js
add
add
mov
add
add
jns
popl
add
cltd
jbe
add
pop
ljmp
add
add
ret
out
jnp
pushf
add
add
cmc
test
cmc
jns
in
fcomps
pop
push
pop
leave
push
sub
pop
ret
lea
push
lea
push
lea
push
call
push
mov
add
add
add
sti
stos
add
add
add
add
out
cmc
add
mov
in
lret
iret
push
mov
aam
loop
add
bound
add
cmpl
in
hlt
lcall
push
shl
rol
dec
add
pop
pop
pop
push
sub
pop
pop
leave
push
shr
shl
pop
ret
push
lea
push
push
push
push
push
push
lea
push
call
add
stos
lock
add
imul
testl
cld
add
lods
push
add
add
mov
in
loopne
lcall
push
push
call
add
add
xchg
stos
in
add
add
add
out
add
pushf
add
mov
nop
hlt
fisubrs
ror
add
add
add
mov
mov
addl
cltd
fcoms
popa
mov
pop
nop
stc
pop
leave
add
jne
add
mov
clc
lcall
pop
push
sub
rol
pop
pop
pop
push
pop
leave
ret
xor
cmp
shll
adc
icebp
adc
and
adc
cmp
mov
cmp
jne
cmp
xor
adc
jb
adc
mov
add
sub
dec
sti
or
push
dec
jbe
mov
sbb
fsubp
in
sar
inc
adc
mov
xlat
dec
pop
int3
cmp
aaa
sbbb
mov
out
pusha
fwait
out
jecxz
loop
jnp
cmp
mov
mov
notl
cmpl
jns
cld
rolb
cld
lahf
lock
xchg
xchg
ror
mov
rclb
cmpsb
mov
jg
out
arpl
push
lcall
inc
and
lcall
xor
sbb
cmove
jg
clc
sbb
add
inc
aad
xor
cmp
std
insb
pop
sbb
pop
enter
push
push
mov
loope
test
lret
enter
hlt
mul
test
pop
mov
inc
mov
addr16
loope
loop
or
sbb
jnp
and
add
cmp
mov
cmpsb
testl
adc
rcrl
pop
inc
cmp
jmp
add
stos
imul
or
cmp
xor
jno
dec
push
lcall
jns
pop
lods
test
pushfw
in
das
cmp
adc
cmc
sub
pop
mov
nop
jecxz
data16
jno
xchg
mov
push
dec
cmp
fcmove
inc
iret
cld
rep
gs
push
test
aam
mov
or
mov
sahf
adc
ficomps
pop
push
adc
scas
aad
inc
xchg
ret
sahf
bound
jb
lcall
or
dec
mov
mov
clc
pop
es
out
mov
idivb
dec
mov
mov
jne
cwtl
popf
test
sbb
shrb
ljmp
jge
mov
mov
in
bound
subb
xor
das
pop
dec
mov
dec
fimuls
pop
sub
cmpb
out
test
add
rol
mov
push
pushf
pop
push
pop
add
fiaddl
push
adc
xor
jp
rcr
out
in
jle
mov
sti
fildll
lcall
pop
mov
pushf
mov
mov
std
sbb
mov
sub
push
xor
pop
jb
cmp
jmp
sub
les
dec
mov
fs
aaa
enter
xor
pop
mov
dec
mov
bound
and
daa
push
inc
push
sbb
call
rcrl
cli
or
and
fwait
jecxz
sarl
dec
rcll
adc
mov
mov
les
idivb
lret
inc
pop
xor
xchg
add
insl
movsb
mov
fwait
in
idivb
xchg
ret
push
add
xor
ljmp
push
push
mov
cmp
roll
arpl
adc
test
jbe
cmpsb
icebp
xchg
adc
insl
mov
scas
mov
inc
sub
sub
xor
out
fistpll
aad
add
sti
and
bound
std
int
push
and
inc
leave
cmp
add
pop
aad
and
fcoms
gs
jbe
or
or
mull
sub
or
rcrb
xchg
scas
push
cmp
adc
aaa
xor
xchg
test
or
and
mov
pop
adc
sbb
lret
and
mov
call
testb
xor
jb
ror
call
add
or
ljmp
sbb
dec
push
into
call
loope
jnp
jmp
gs
cmp
ds
cltd
lcall
push
stc
cld
jg
imul
push
push
dec
or
fnstcw
nop
ret
sbb
add
pop
paddq
fwait
add
syscall
and
loop
inc
lock
dec
popa
outsl
inc
movsl
iret
sub
sub
lahf
dec
or
cli
xchg
jae
sti
fwait
xchg
xlat
add
dec
mov
jmp
cmpsl
clc
jae
imul
pop
loop
sbb
clc
jp
shrb
jle
mov
cmp
mov
push
sub
add
xlat
imul
xor
jb
add
adc
or
test
into
dec
aam
adc
sub
in
jp
mov
ljmp
in
fs
or
lods
and
lahf
and
ds
repz
std
jl
loope
sbb
add
out
pop
dec
call
mov
mov
pop
stos
sahf
mov
jl
push
jne
cltd
xchg
ret
push
leave
loop
mov
sbb
xchg
xchg
ja
xchg
sbb
scas
movsl
vmulsd
pusha
test
cli
mov
js
xchg
jg
arpl
add
adc
repz
mov
inc
lock
jns
jg
test
push
push
jns
cs
or
aam
pop
pop
sub
push
sub
insb
mov
and
pop
sub
sub
lret
push
imul
pop
shr
loop
pop
jge
clc
jnp
loope
mov
adc
popl
inc
sub
mov
repz
mov
xor
sub
rol
cmpsl
adc
pop
dec
adc
inc
sar
stos
stos
aam
mov
incb
repnz
call
lock
jp
fdivrs
int3
rcr
movsb
mov
shll
push
jg
popa
in
jns
xor
addr16
jns
mov
ljmp
int3
sub
push
xlat
and
xorb
into
std
fnstcw
nop
call
sbb
arpl
sbb
fnstcw
push
ret
icebp
or
inc
cwtl
pusha
clc
fnstsw
addr16
js
mov
mov
aam
adc
fistpll
xor
mov
test
xor
cmp
mov
sub
stos
test
push
pop
add
pop
out
fs
cmpsb
xchg
push
pop
sbb
orl
les
stos
jo
mov
lret
sbb
mov
pop
or
and
mov
xchg
dec
pop
incb
aam
into
mov
mov
sub
test
cmp
xchg
add
inc
lret
pop
or
mov
xchg
mov
inc
cltd
cmp
or
pop
popa
fwait
insl
jae
pusha
lcall
dec
mov
roll
lea
sub
fldt
dec
adc
inc
sahf
mov
or
mov
pop
pop
stc
insl
push
insl
xchg
push
xor
aam
lret
mov
negl
xchg
pop
push
pushf
shlb
mov
insl
xchg
jecxz
mov
in
test
pop
clc
and
mov
xchg
jb
movsl
push
dec
jne
or
cli
dec
jo
fldcw
mov
das
pop
pop
test
loope
and
pop
gs
stc
jmp
jnp
mov
fs
jno
arpl
fdivrs
xchg
adc
lret
and
icebp
mov
sbb
cmp
scas
push
ret
xchg
ja
add
pop
imul
xchg
ss
dec
mov
push
jp
idivl
cmc
pop
add
mov
lds
pop
rolb
jne
push
xchg
inc
pop
fbld
sub
cmpsl
sti
dec
jg
les
iret
movsb
jns
xchg
shll
fists
mov
mov
shll
mov
add
mov
lock
in
push
and
xchg
xchg
movsb
sbb
or
repz
or
scas
mov
cmpsb
push
ja
inc
inc
inc
pusha
gs
mov
xchg
adc
cmp
xchg
xor
sbb
jns
subb
icebp
cmp
xor
test
iret
jge
pop
xor
stos
inc
imul
stc
out
inc
ds
imul
mov
pop
jbe
pop
lock
and
imul
dec
xor
dec
stos
sbb
adc
xchg
mull
cs
xor
adc
and
sub
daa
add
or
xlat
cli
enter
and
adc
imul
fbstp
ret
mov
push
pop
pop
out
or
andl
sbb
out
sbb
mov
jecxz
xchg
imul
sbbl
scas
bt
jp
fwait
adcl
adc
lret
jne
cld
cmp
jb
imul
ljmp
pop
adc
mov
mov
push
jmp
nop
sbb
jns
mov
loop
pop
mov
add
push
dec
mov
xchg
lcall
and
sti
sbb
out
cltd
icebp
dec
mov
mov
mov
push
outsb
adc
nop
inc
xor
pop
mov
sub
xor
jmp
lahf
in
lods
sbb
jge
dec
repz
xchg
test
or
lahf
xchg
je
lods
in
inc
lret
lea
sub
leave
xchg
add
add
out
nop
mov
xor
jo
mov
lods
loop
sti
cmpsl
rcl
mov
jmp
mov
cld
popa
jbe
jnp
push
xor
xchg
stc
loopne
mov
or
cmp
jno
fisttpl
xlat
pop
into
shlb
mov
xchg
aaa
gs
fstps
aaa
xchg
pop
nop
lods
cmp
sti
inc
xor
pop
xchg
mov
cwtl
cltd
or
jg
dec
adc
jmp
arpl
jne
add
movsl
aaa
jge
rclb
shr
push
in
cwtl
inc
sti
mov
dec
cwtl
push
es
sbb
lea
les
mov
mov
data16
push
dec
shlb
int
subb
cmp
mov
mov
stos
push
mov
je
insl
inc
jne
pop
jnp
sti
cmpsb
ret
js
xchg
int
mov
cs
adc
fs
jae
sbb
sahf
movsl
cs
mov
ja
push
xor
sti
loopne
outsb
mov
pop
inc
dec
cmpsl
mov
pop
clc
pushf
fmuls
dec
in
in
sub
outsl
inc
into
pop
mov
sub
mov
adc
mov
cwtl
out
xor
insb
jge
std
sahf
out
shrb
test
add
test
xor
rcll
inc
cmp
fwait
xchg
mov
mov
adc
test
daa
clc
cs
xchg
lcall
test
test
push
sub
sbb
lods
cmpb
jp
ffreep
out
mov
mov
sbb
mov
xor
std
fldenv
sub
sub
mov
stos
in
push
out
sbb
mov
test
scas
push
mov
test
mov
aam
and
mov
ret
cmpsb
in
xor
idivb
fcompl
xchg
adc
jmp
push
test
mov
sub
xchg
lock
enter
icebp
fbld
data16
push
pop
push
mov
dec
dec
scas
cmc
xchg
adc
lea
dec
xor
and
repz
je
or
repz
pop
or
rclb
mov
inc
loop
cmpsb
or
stos
punpcklwd
cli
lahf
insb
push
lret
jb
cmp
xor
or
cltd
test
xchg
out
adc
xchg
or
push
or
and
negl
inc
mov
pushf
lcall
jne
mov
dec
in
sbb
sub
push
movsb
js
aaa
icebp
cld
cli
or
test
pop
fwait
mov
aad
test
jnp
cld
aas
test
jle
aas
mov
jecxz
mov
cmp
aam
sub
inc
sub
pushf
dec
or
rcrb
ds
dec
mov
mov
dec
jp
sbb
in
dec
add
xor
adc
addb
xchg
cmp
lea
fldt
std
add
ds
ljmp
pop
push
sbb
aam
mov
fstl
inc
add
adc
test
iret
outsl
mov
add
xor
out
rcrb
and
je
adc
popa
xchg
fimull
insl
pop
bound
lods
aad
push
es
pop
flds
push
cmp
push
adcb
mov
cli
shr
jnp
push
add
push
inc
push
outsb
jp
popl
repz
xor
pop
pop
push
adc
ds
cmp
sbb
cmpsb
pop
call
inc
daa
and
clc
sub
fldl
lret
mov
popf
scas
dec
inc
mov
xchg
in
push
jo
jp
out
mov
mov
jb
xchg
lock
movsb
xchg
loopne
sub
cmp
dec
in
dec
int
jmp
mov
push
ds
dec
and
in
std
push
or
xchg
xor
pop
pop
icebp
jle
xlat
sub
dec
jb
imul
xor
and
mov
sub
cmp
lea
inc
iret
aam
cmp
dec
dec
data16
bound
setno
pushf
mov
stos
pushf
sbb
pop
bnd
out
ljmp
inc
jle
jae
cltd
subl
sub
xlat
mov
xor
xor
int3
jle
ljmp
push
jg
sub
push
push
cwtl
mov
stos
add
pusha
xchg
mov
pop
lock
mov
add
js
inc
push
loope
jle
out
addr16
sub
mov
fsubs
cltd
dec
std
sti
mov
mov
sbb
lret
pop
mov
out
sbb
mov
sti
add
mov
jne
imul
mov
dec
mov
hlt
data16
xor
cwtl
mov
ret
das
cltd
in
hlt
add
sub
mov
std
cmp
mov
repnz
push
int
stc
out
repz
inc
icebp
fldl2e
mov
call
sti
in
pop
pop
add
cwtl
cmc
int
cld
shrl
and
xchg
loopne
mov
jge
dec
sbb
daa
ljmp
lret
scas
insl
clc
ss
inc
inc
cmpsl
imul
outsb
dec
xchg
outsb
mov
cld
mov
mov
and
insb
outsb
and
lret
sub
rcrl
cmpsb
pop
or
movl
mov
push
inc
mov
das
cwtl
push
jae
mov
scas
push
pop
pop
out
fildl
xor
and
and
movsb
les
push
and
out
xchg
repz
shr
shlb
jns
mov
ret
inc
mov
daa
fadds
es
xchg
in
insl
sub
mov
xchg
cltd
cmpsb
int3
or
cmp
jae
inc
dec
adc
or
xcrypt-cbc
cmpsl
adc
jae
icebp
add
fstl
push
jecxz
inc
inc
insl
leave
repz
out
test
dec
hlt
je
cs
pushf
iret
cmp
dec
fbld
add
loop
push
sub
js
js
enter
adc
test
in
xchg
insl
cmpsb
jl
nop
mov
xchg
sbb
hlt
push
mov
inc
inc
push
and
xchg
test
sbb
sbb
cld
adc
adc
xchg
or
mov
push
push
cmp
mov
in
call
gs
mov
jmp
movsl
es
sub
sub
add
iret
leave
imul
xlat
mov
imul
leave
mov
jmp
enter
push
rorl
sub
filds
mov
arpl
orb
call
add
jecxz
and
clc
cmc
mov
xorl
mov
dec
dec
sub
adc
jnp
lods
aaa
cmp
stc
inc
rcrl
mull
in
push
jne
or
nop
and
push
adc
std
xor
insl
mov
sti
dec
or
xchg
bound
sub
movsb
or
cmpsl
jns
jo
je
leave
insl
aas
popa
les
cmp
mov
mov
data16
repnz
xchg
jmp
mov
movsb
lods
xchg
mov
in
daa
or
ret
xchg
sahf
mov
bound
pop
lret
icebp
jl
mov
push
lock
inc
or
mov
addr16
movsl
stos
jne
dec
popa
mov
in
rclb
ljmp
mov
add
test
outsb
mov
pop
jecxz
mov
jmp
mov
stos
pop
push
ljmp
mov
xor
jbe
mov
out
mov
nopl
mov
clc
std
repz
pop
fidivrs
out
push
imul
xchg
pop
adc
orb
fldl
fdivs
lahf
addl
push
popa
imul
jp
icebp
dec
or
pop
mov
xchg
pushf
nop
sti
das
cwtl
test
xlat
mov
mov
loopne
dec
or
and
movsl
add
pop
pop
push
mov
and
pop
adc
pop
enter
push
shrb
mov
mov
ja
inc
popa
ja
scas
cmpsl
vmovdqa
sti
imul
pop
int3
notl
push
and
int3
xor
or
je
and
xor
loop
je
sbb
push
pop
shlb
cmpsb
fistps
mov
push
xorl
incb
pop
cs
inc
dec
xchg
ucomiss
mov
inc
lahf
cs
sbb
nop
jmp
jg
xor
and
cmpsb
inc
test
cwtl
out
out
xor
or
stos
and
test
leave
mov
ds
mov
cltd
ds
cmpsl
push
pop
out
mov
sbb
jo
mov
out
ljmp
aam
repz
push
mov
pop
divb
and
test
mov
dec
jno
es
stos
test
cmc
adc
stos
and
adc
gs
push
repnz
mov
test
mov
pop
mov
ss
insl
pop
cltd
ja
lods
stos
mov
dec
and
add
mov
jge
loopne
cmpsl
xor
push
adc
add
filds
fmuls
mov
push
aam
aad
lds
popa
in
xlat
jmp
mov
nop
or
add
shrl
andb
add
cmpsb
mov
jae
out
inc
mov
xlat
xchg
jne
sbb
popl
jp
push
cmpsl
sub
pop
adc
or
mov
enterw
cld
mov
fstl
divl
or
dec
in
sbb
outsl
jae
push
cmp
int
std
stos
mov
xchg
mov
inc
mov
dec
add
add
cmp
mov
in
mov
sbb
push
add
inc
add
or
xchg
jne
mov
push
mov
jle
adc
scas
pop
movb
aam
nop
dec
stos
add
pop
jne
cmpl
fidivl
cld
jns
and
in
lock
ret
jle
stc
add
add
sbb
xorl
aam
pushf
sub
shll
ja
or
daa
mov
gs
sbb
lret
adc
ret
insb
xchg
sub
or
enter
push
inc
addr16
jmp
or
mov
mov
hlt
iret
decl
rcrb
daa
out
jne
push
mov
mov
inc
jge
mov
mov
or
fsubs
mul
xor
rol
pop
xorl
and
dec
lret
incl
sbb
adc
jne
xchg
call
and
cmc
clc
push
aad
or
aam
xchg
dec
das
sbb
jnp
inc
inc
ljmp
xor
mov
leave
aaa
lods
and
test
lods
dec
test
aas
and
jne
fucomi
xor
add
jb
cmp
negl
jns
insl
movsb
pop
in
lds
pop
out
outsb
jno
adc
popa
test
mov
jg
cmp
push
push
inc
jl
xor
mov
sahf
mov
bound
mov
inc
or
xchg
movsl
add
lods
xorl
cli
popf
pop
add
cld
mov
xlat
xchg
and
xor
and
cs
inc
mov
inc
out
or
call
adc
cmp
pop
add
cli
stc
xor
scas
xchg
or
push
xchg
popa
roll
in
aad
scas
jmp
out
xlat
sarl
pop
andl
mov
jl
dec
pop
test
loopne
inc
stos
and
mov
mov
dec
fnstcw
movsl
mov
js
lods
xchg
xor
inc
mov
pop
xor
mov
and
in
and
jae
xchg
jb
in
xchg
mov
jnp
rcll
testl
push
cmpsl
orl
in
outsl
jne
fcmove
push
in
loopne
cmp
daa
lock
shll
les
inc
push
clc
addr16
cmpb
out
loope
jne
xor
or
mov
mov
sbb
push
lds
popa
adc
movsb
fcoms
daa
ljmp
inc
lcall
hlt
repnz
sub
jecxz
in
add
les
mov
mov
jb
or
sahf
dec
and
jg
out
pop
test
and
sahf
and
div
outsl
sbb
mov
out
xchg
sub
push
lret
loope
fcomi
pop
mov
cli
stc
sub
dec
pextrw
push
sbb
sbb
aas
push
add
inc
push
adc
data16
push
xchg
inc
mov
xor
lods
sti
lods
andb
insb
aaa
mov
jecxz
mov
xchg
jb
cs
mov
aam
and
inc
push
adc
xor
mov
addr16
jge
cmpl
lcall
add
imull
sbb
sbb
test
ss
imul
pop
mov
or
aas
push
daa
or
fimull
mov
xor
push
daa
nop
mov
mov
push
bound
fwait
push
mov
mov
ja
les
arpl
stos
test
xor
mov
loope
test
push
sbb
leave
cmpb
push
jb
sub
test
and
push
loope
aad
dec
xchg
in
stos
add
std
adc
sub
dec
mov
insb
mov
push
sbb
add
mov
pop
addr16
jecxz
test
int
movsl
cmp
ljmp
xlat
lret
int
cmp
stos
test
push
out
cld
ljmp
jnp
mov
sbb
popl
sub
mov
mov
push
loop
repnz
pop
xchg
dec
movsb
test
xchg
stos
sub
mov
adc
push
or
mov
or
in
ret
call
adc
mov
cmp
mov
jo
xchg
pusha
nop
arpl
or
sub
adcb
dec
mov
test
out
stos
decl
lock
data16
icebp
ret
movsl
popf
ret
andl
cmp
gs
push
inc
push
fildll
pop
call
pop
dec
lods
lahf
lods
or
pop
sbb
cmpsl
mov
mov
in
nop
clc
jle
jg
xlat
cmp
ret
fwait
loope
fwait
pop
imulb
jl
pop
jecxz
pushf
jl
or
lcall
inc
ret
aaa
jle
cmpb
scas
pop
sbb
xchg
jne
mov
iret
cmpsb
out
bound
imul
and
aaa
cmp
pushf
popf
fwait
sub
shll
fdivs
sub
in
push
xchg
fdivl
mov
lret
mov
dec
xor
mov
pop
mov
ss
jmp
sbb
xor
push
cld
scas
out
fistpl
cmp
movsl
dec
or
jp
jne
mov
sub
mov
cmp
sub
mov
dec
jl
leave
and
jl
push
ss
adc
fiaddl
clc
jle
ljmp
outsb
xor
jae
sub
inc
jle
repnz
inc
jno
push
ficomps
push
rcrl
mov
lret
jne
into
xor
jp
rcr
mov
cmpl
push
rorl
dec
rolb
or
fiadds
leave
inc
out
test
mov
cmp
fmuls
ret
fsubs
std
sub
imul
inc
cs
test
pop
xchg
xchg
inc
lods
int
jae
stc
aam
lods
cmp
mov
add
dec
clc
sub
cmc
jae
dec
fidivl
outsb
sarb
pop
outsb
test
push
xchg
aad
add
fs
add
mov
dec
pop
lods
adc
push
xchg
xchg
and
imul
dec
lret
lret
popf
out
jle
or
inc
mov
jl
iret
push
inc
cmpsb
push
test
ja
js
adc
out
jle
add
dec
xor
jno
push
xor
xor
insl
xchg
in
push
mov
popa
or
xchg
mov
orb
cs
or
loope
fnstsw
inc
or
dec
push
clc
gs
dec
scas
pop
and
in
sub
ljmp
jb
scas
inc
adc
dec
js
xchg
sub
fidivs
sub
outsl
and
je
xchg
mov
add
iret
dec
and
js
xor
mov
fldl
pusha
fwait
xchg
repz
sahf
mov
and
add
jge
dec
inc
movsb
je
jne
fsubrl
std
lock
or
or
or
sub
jno
cmc
or
rolb
mov
in
mov
inc
mov
xchg
add
mov
sbb
push
out
repnz
out
fsubr
test
inc
test
dec
cltd
mov
frstor
dec
xchg
mulb
or
mov
shll
pop
or
adc
cmp
jae
dec
sti
push
negl
lcall
dec
xor
inc
xor
aaa
gs
idivb
mov
sub
ja
or
ss
xor
and
fisubrl
jbe
dec
xor
aam
sub
pushf
jnp
fists
sub
pop
adc
fisttps
jl
mov
mov
fs
out
jg
roll
xor
adc
cmp
cwtl
pop
pop
ficomps
adc
fs
aaa
call
gs
out
fs
push
nop
push
mov
mov
or
or
xchg
sbb
ret
mov
divl
lods
incb
xchg
stc
inc
xor
mov
mov
xor
xor
lcall
pop
in
adcb
xor
addr16
imul
mov
lods
xchg
push
rcll
xchg
scas
ja
pop
mov
cmpl
lahf
imul
roll
mov
vpaddsb
ljmp
movsb
shrb
gs
dec
sar
mov
sub
adc
orb
out
lret
mov
jmp
mov
xor
mov
xchg
cmp
push
mov
out
mov
mov
push
scas
cmpsl
clc
sbb
imul
shl
pop
fidivrl
sahf
sbbb
aaa
imul
adc
mov
lods
dec
add
jge
mov
call
test
pop
mov
lcall
orb
cmp
sbb
push
ret
mov
lods
pop
mov
xchg
inc
js
jne
xchg
push
cmp
aam
gs
xchg
mov
pop
inc
das
jmp
inc
cmp
push
pop
mov
dec
out
pop
je
adc
mov
sbb
int3
add
fs
mov
sub
in
or
out
dec
lret
movsl
add
cmc
frstor
out
xor
int3
mov
inc
int3
std
fsubl
cli
ret
push
cwtl
dec
pop
lret
lock
add
add
add
insb
mov
sti
sub
scas
inc
and
pop
mov
push
lret
in
cld
adc
xchg
mov
cmp
mov
add
jnp
xchg
ss
and
sub
jg
jg
int
pop
pop
ror
lret
and
add
call
insb
imul
xchg
sub
or
das
int
xchg
in
adc
push
dec
fadds
andb
in
push
pop
jae
rclb
xchg
lds
mov
adc
pop
sbb
lock
push
cmp
dec
jnp
stos
cmp
pop
inc
stos
rcll
loopne
push
fnsave
push
bound
loop
lcall
xor
jb
out
aad
shl
stos
out
mov
pop
inc
push
cmp
es
push
cmc
movsl
mov
xchg
sahf
cli
sub
imul
negb
dec
and
mov
addr16
das
cmpsb
push
mov
xchg
cmp
mov
jno
mov
out
cmp
xchg
jp
xor
add
test
pusha
imul
mov
inc
cli
inc
and
out
add
sbb
and
dec
loope
sub
pusha
xchg
jmp
sub
add
addr16
xchg
push
mov
stos
lods
mov
pop
enter
push
mov
pop
mov
imul
jns
xor
xchg
out
gs
lods
push
xorl
mov
xchg
sbb
dec
jge
mov
xor
xchg
lds
sahf
sub
jae
pop
xchg
enter
insb
popf
cld
sbbb
popf
les
sbb
aad
inc
cwtl
push
stos
test
imul
int3
xor
dec
inc
jbe
aas
sub
push
popa
jmp
rcll
stos
adc
dec
xor
add
nop
imul
insb
inc
clc
icebp
jmp
or
dec
mov
call
pop
inc
stos
push
aas
and
lea
mov
pop
je
xchg
dec
sarb
shlb
or
les
dec
lahf
ds
pop
test
scas
les
xor
lret
adc
lcall
sub
adc
hlt
or
cmp
mov
add
movsb
push
and
ja
dec
inc
sarb
pop
pop
mov
jge
sub
sbb
jns
mov
rclb
subl
cmp
push
cmp
pop
pushf
fildl
dec
stc
frstpm(287
fwait
cld
adc
mov
arpl
add
sub
push
or
jmp
popa
dec
pop
cmc
rcl
das
push
hlt
inc
pop
movsl
mov
mov
and
out
mov
add
sbb
cmpb
sub
pcmpeqb
inc
bound
add
dec
xor
xchg
jecxz
inc
lock
mov
and
jns
push
jl
jg
sub
or
inc
out
xor
inc
pop
jp
cmpsb
cmp
mov
jecxz
mov
push
pop
add
scas
jno
jo
fcomip
or
cltd
sub
inc
jb
bound
xor
loopne
mov
cli
cmc
lret
fstpt
push
int3
roll
sar
int
sbb
je
rcl
sub
sbb
int3
add
int3
std
int3
aas
jne,pn
mov
or
mov
fdivrl
sub
adc
ljmp
lock
fdivs
mov
clc
popf
cltd
outsl
dec
add
stos
cmp
ljmp
ljmp
test
lds
and
sub
daa
or
xor
stos
iret
and
repnz
inc
pushf
aam
adc
push
je
cs
stos
pop
notb
cmp
insb
pop
push
inc
or
int
pushf
fisubrs
sub
mov
mov
xchg
arpl
out
movb
xchg
add
adc
xor
imul
lahf
stc
ljmp
fmuls
inc
loopne
stos
movsb
pop
add
lods
jns
aad
inc
lods
mov
sub
call
inc
iret
push
mov
fcmovu
lea
test
push
pop
sarb
dec
sub
or
mul
lahf
inc
push
lock
mov
test
gs
xstore-rng
cmpsl
lds
sub
sti
xor
loopne
shrl
or
mov
fmul
sahf
mov
fdivs
in
mov
ds
pushf
call
or
or
leave
sti
call
pop
xchg
scas
test
inc
not
test
push
pop
mov
sbb
bound
testl
inc
stc
xadd
adc
addr16
sub
int3
xchg
dec
lds
imul
mov
jmp
inc
and
inc
mov
cmp
lcall
inc
gs
test
inc
inc
inc
mov
outsl
enter
xor
cmp
in
dec
imul
sbb
push
dec
or
mov
and
pusha
in
into
enter
movsl
lret
mov
into
pop
sub
rol
data16
jae
fstpl
sub
popa
mov
cli
add
adc
xor
push
push
std
into
pop
dec
push
jnp
cmp
stos
dec
fisttpll
into
pop
sbb
loope
mov
cmpsl
stos
in
sub
call
incl
push
fucomi
mov
push
push
xor
inc
out
orl
xlat
fwait
jo
inc
gs
mov
and
mov
push
mov
loopne
test
sbb
imul
mov
out
subl
notb
sbb
inc
xchg
mov
pop
or
lcall
push
jp
cmp
mov
mov
mov
cs
cmpsl
xor
mov
xchg
ficoms
call
push
push
ja
jl
aaa
test
mov
in
mov
and
pop
push
ret
cmp
out
dec
int
out
das
mov
sbb
sub
pop
outsb
hlt
stos
dec
push
mov
mov
icebp
or
add
dec
imul
loopne
dec
hlt
scas
into
icebp
xor
adc
lcall
push
mov
sbb
aas
push
push
sbb
nop
mov
movsb
hlt
adcl
fmulp
ds
mov
mov
and
pop
pop
mov
ss
repz
imul
push
aad
cmpsb
sub
mov
orl
arpl
scas
dec
xchg
gs
add
cmp
inc
stos
lahf
sahf
cs
leave
sbb
bound
daa
xorb
or
mov
cmp
out
mov
xchg
push
mov
insl
dec
mov
mov
add
fwait
ret
loop
sahf
inc
sub
push
adc
mov
mov
dec
mov
mov
jb
fwait
or
fsubr
mov
imul
shr
stos
leave
je
ret
jge
loope
cmpsl
or
fs
rcr
in
jecxz
in
dec
mov
add
sbb
daa
outsb
stc
lock
mov
xchg
xchg
pop
shl
test
xchg
lock
add
aad
or
cs
sbb
cmp
out
cmc
cmp
dec
add
pop
stos
mov
mov
insb
sub
shl
mov
fldcw
lcall
mov
scas
lret
mov
into
pop
call
push
outsl
sarb
andb
aas
rcll
cmp
pop
jno
fwait
jge
ficoml
cmp
das
inc
push
rcrb
rcl
adc
scas
xchg
dec
pop
mov
sti
clc
sti
test
rolb
inc
add
fxtract
aaa
cmpsb
imul
test
pop
es
mov
cmp
dec
bound
ja
add
lahf
divb
orb
or
sub
scas
and
mov
je
int
push
mov
fidivrs
out
push
int3
clc
popa
repz
cld
inc
daa
pop
lcall
ror
add
leave
cltd
pop
adc
jle
xchg
cmp
or
fsqrt
dec
out
mov
fnstenv
cmp
iret
inc
adc
lcall
and
sbb
xchg
push
clc
xlat
push
aaa
orb
sub
dec
and
subl
hlt
les
aam
xor
push
or
int
mov
fisttpl
push
fiaddl
fidivs
cmp
sub
xchg
loopne
rcr
cld
pop
ret
shl
pop
sbb
adcb
jbe
pop
add
push
ror
popl
pop
or
mov
aas
mov
movsl
data16
inc
enter
xchg
test
ljmp
dec
test
jp
add
sub
cmp
mov
out
adc
xchg
mov
jmp
or
dec
sarl
mov
fistps
inc
out
cltd
sub
add
cmp
xchg
mov
dec
xchg
jle
mov
addr16
sub
or
lret
mov
js
pop
les
adc
mov
fsts
sub
cmc
dec
dec
sub
push
mov
iret
push
cli
out
movl
mov
cmpsl
clc
jno
call
fs
stos
pop
mov
shrl
cmp
outsl
pminub
lret
into
cli
sar
xchg
xchg
hlt
fs
movsb
fbstp
or
loopne
popf
cmp
leave
clc
mov
jge
into
shrl
mov
mov
inc
je
mov
adcb
mov
fiaddl
shr
adc
jb
push
adc
mov
scas
pushf
mov
outsl
stc
push
mov
mov
cmpsl
mov
rcrb
lcall
mov
mov
inc
mov
js
cmp
xchg
andb
out
jae
sub
insl
movsl
pop
int3
stos
mov
lds
dec
aad
pop
pop
data16
and
mov
mov
icebp
sbb
insl
push
cwtl
mov
mov
ror
xor
out
sub
jge
addr16
sahf
sub
and
scas
fistpl
cmp
jae
iret
outsb
movsl
std
inc
inc
call
xchg
fstps
in
and
rep
sbb
pop
pop
pop
inc
inc
adc
xor
inc
adc
xchg
cwtl
push
rclb
arpl
enter
sub
sbb
incb
vmread
imul
test
jnp
inc
and
mov
stos
scas
outsl
scas
int3
mov
xchg
out
push
loopne
and
decb
pop
mov
jge
shr
movsl
add
sub
roll
call
stos
pop
push
push
mov
push
out
in
ss
insb
jbe
and
aas
sub
add
inc
push
in
lods
adc
mov
ret
xchg
xor
xchg
loop
jge
je
adc
std
cmp
mov
out
ficoml
leave
incl
arpl
adc
lcall
shrl
mov
jae
sbb
popa
dec
into
movsl
push
in
repnz
cltd
xchg
movsb
shlb
test
test
dec
xchg
xchg
outsb
adc
shl
jno
dec
xlat
insl
lods
cld
iret
test
imul
adc
jecxz
jle
sbb
add
push
push
sti
jo
imul
push
pop
sbb
jmp
test
adc
repnz
mov
rcl
cmc
out
orb
mov
lods
push
xlat
xchg
in
popf
shll
push
pop
mov
cmc
inc
sbbb
xchg
jbe
aaa
scas
testl
dec
data16
lock
addr16
push
adcl
gs
pushf
jo
cld
push
push
cmp
ss
jp
mov
cmp
pop
cli
push
xor
cltd
stos
insb
inc
and
int
stc
mov
xchg
mov
hlt
rcl
sbb
into
call
shrb
pop
or
insl
sbb
xlat
xor
nop
push
ja
movsl
xlat
mov
cwtl
pushf
add
mov
mov
lret
imull
leave
or
mov
push
inc
pop
pushf
fnsave
mov
mov
stc
fnstenv
fcomi
inc
xchg
sbb
mov
xchg
fcompl
inc
sub
call
pop
mov
lds
jae
sub
fldcw
int3
add
out
ja
mov
jns
icebp
dec
icebp
stos
clc
jecxz
repnz
cmp
and
push
add
outsl
jp
pop
shlb
mov
dec
cli
int3
arpl
mov
stc
push
nop
sbb
xor
push
pop
pop
add
lock
fidivs
lcall
and
in
push
adc
push
mov
sbb
mov
aas
shll
popa
add
int
hlt
push
insb
pop
dec
ret
cmpsb
movsb
jg
subb
pop
jb
inc
sbb
sbb
pop
mov
stos
orps
dec
repz
inc
cmpsb
dec
push
inc
jmp
out
adc
lret
xchg
test
pop
and
xchg
and
dec
xchg
jo
jle
insb
ret
iret
xchg
roll
push
cmp
lods
jmp
push
and
mov
in
enter
pusha
xchg
inc
xchg
clc
rorl
push
mov
fnsave
mov
sbb
in
cltd
sbb
outsb
jg
movsb
or
das
rclb
mov
sub
int
test
inc
xlat
xlat
incb
notl
or
adc
push
mov
mov
dec
mov
add
xlat
push
shrb
lods
subb
incl
cmpsb
and
xchg
std
xchg
rcrl
icebp
add
stos
andl
clc
jp
fdivr
adc
aad
rclb
movsb
popa
and
cmp
or
aam
xchg
push
into
and
cmp
pushf
xor
das
mov
push
imul
ret
test
xchg
xor
subps
fwait
inc
fs
fs
pop
pushf
mov
xchg
cmpsl
and
mov
inc
jae
mov
in
sti
pop
jmp
scas
push
ds
divl
mov
and
data16
push
push
call
mov
sbbb
ljmp
mov
int3
arpl
or
cmc
stc
frstor
jp
test
pop
add
lea
xor
cmp
xlat
jmp
sti
mov
les
inc
or
dec
pop
pop
mov
scas
cmp
mov
xor
test
and
inc
nop
imul
std
aam
test
stos
lds
sbb
sti
sub
lods
add
jp
insl
pop
mov
lret
out
aad
in
sub
roll
or
outsb
and
aas
sbb
aam
mov
mov
jbe
loope
sub
pushf
scas
pop
repnz
or
mov
shlb
mul
popf
les
movaps
cmpsl
lock
outsl
sahf
and
test
inc
add
sbb
and
mov
pop
lahf
shll
jo
pop
sbb
pop
and
arpl
push
adc
mov
sbb
push
inc
insb
xchg
lahf
jle
in
xor
jg
dec
call
xor
adc
fadds
jno
outsl
fcmovnbe
inc
lret
mov
mov
push
enter
ja
aas
pop
popf
popf
xchg
sub
fisttps
jb
inc
push
xchg
mov
sub
bound
pop
jb
iret
mov
push
outsl
jbe
int3
mov
roll
add
xchg
adc
xor
leave
adcb
int3
mov
int3
je
std
icebp
lods
add
stos
or
xor
test
mov
dec
add
popa
outsb
bound
nop
xlat
adc
lret
sub
cmpsb
mov
call
inc
fmull
std
lahf
in
movsb
imul
lods
jbe
aas
push
outsl
adc
test
fnsave
jno
lods
lret
sub
mov
test
and
aaa
dec
pop
stos
ficomps
cmp
movzbl
inc
call
mov
or
xchg
into
dec
adc
sahf
or
jb
mov
dec
loopne
push
das
cli
dec
imull
cltd
mov
pusha
push
mov
xchg
lock
ds
loopne
pop
repnz
sub
in
mov
idiv
jmp
mov
jne
xchg
sar
loope
and
sub
and
sbb
cmp
dec
sub
push
divb
push
mov
push
loopne
and
cmp
andl
xrstors
adc
aam
daa
mov
dec
shll
lret
mov
add
inc
mov
and
pop
int
leave
xorl
and
mov
loop
insb
xchg
mov
mov
and
in
jb
xchg
out
push
push
orb
cmpsl
cmc
adc
dec
movsl
out
sub
aas
cmp
insl
out
sub
mov
mov
stos
mov
add
dec
push
mov
adcl
lea
outsb
loopne
inc
pusha
cwtl
imul
push
dec
data16
xor
fprem1
dec
xchg
dec
sub
pop
dec
pop
ljmp
pop
sbb
cmp
in
cltd
jo
sub
mov
outsb
jecxz
jp
inc
cmp
cld
adc
adcb
in
add
outsl
jns
dec
cld
dec
stos
data16
cmp
add
vpperm
int3
je
andb
jno
fwait
fwait
subl
decl
xchg
aaa
push
int
push
mov
dec
or
leave
popa
mov
rclb
fcoml
push
jmp
test
cmp
subb
ret
sbb
sub
mov
ja
adc
mov
loop
and
fldenv
popf
mov
jns
test
pushf
sbb
fstp
sbbb
mov
sti
mov
ret
rcll
jmp
pop
mov
ret
call
push
outsl
aas
loopne
stos
and
mov
pop
sarl
push
and
cmpsb
inc
je
in
xor
jg
push
imul
lds
movsl
iret
cmp
aad
dec
mov
shll
xor
decb
insb
jmp
insl
or
mov
sub
sbb
jbe
movsb
add
aam
xor
test
addb
xor
ja
std
pop
mov
cmovs
xor
test
inc
push
outsb
fs
mov
and
ds
sbb
movsl
mov
pop
out
xor
cmpsl
fcomps
mov
stos
lods
mov
movsb
add
insb
leave
pushf
inc
jbe
movsb
sub
sub
jge
out
cs
icebp
jnp
sub
push
addr16
imul
pop
jecxz
cmp
test
inc
in
lcall
test
out
les
outsl
inc
adc
jb
mov
pusha
mov
mov
xor
loope
xor
mov
negb
fdivrl
popf
call
and
sahf
testl
and
dec
dec
add
sbb
movsl
mov
push
xchg
mov
mov
sbb
in
mov
push
inc
ret
cld
cmpsb
testb
lahf
test
sahf
insl
out
mov
jno
ss
mov
cmp
cmp
or
inc
push
adc
or
mov
mov
sbb
sub
jg
jg
lret
ss
push
aam
scas
clc
jl
rorl
aam
mov
or
add
dec
insl
int
jp
sbb
adc
scas
jnp
cmpl
xor
loopne
xchg
inc
popa
fisttps
add
jae
jne
or
lods
data16
push
dec
push
jecxz
jne
pop
xor
aam
pop
aas
xor
lahf
ss
test
subl
iret
out
mov
sbb
jmp
in
lock
pop
popf
mov
dec
sbb
or
stos
arpl
pop
pop
push
arpl
into
xor
mov
leave
sarl
test
test
mov
loopne
jp
in
aaa
dec
les
popf
and
push
push
shr
repnz
xor
mul
or
test
test
ret
jo
out
xor
push
lock
mov
int
repz
dec
jb
mov
xor
arpl
cltd
pusha
es
out
xchg
sbb
sbb
test
repnz
aam
dec
inc
in
lock
dec
inc
mov
aas
dec
mov
sbb
shr
ljmp
mov
xor
mov
jae
imul
add
add
lea
shll
movsl
out
sbb
fcmovnbe
shlb
mov
pop
icebp
jnp
fdivl
aad
fldenv
cwtl
or
lods
out
xchg
repz
aaa
sub
test
mov
jo
or
dec
dec
lock
sti
jle
pop
dec
dec
pop
cwtl
mov
dec
adc
sub
arpl
aaa
push
movsl
inc
or
or
sub
xorb
addb
repz
xchg
mov
in
in
int3
and
scas
jl
pusha
push
jno
enter
xchg
pop
mov
sub
jno
add
push
cmc
cmp
insl
fdivs
insl
je
xchg
imul
ja
fisubs
lea
or
pop
sub
icebp
sub
cli
sbb
cmp
les
add
xchg
es
ja
in
adc
lds
xor
xorb
lahf
add
or
sbb
adc
push
test
sti
pop
loopne
fildll
andl
lock
in
jmp
test
enter
sub
test
xchg
cmp
lahf
add
mov
xor
dec
imull
sahf
and
mov
xor
outsl
mov
loope
enter
out
jge
and
scas
mov
jmp
sbb
flds
sbb
mov
sub
leave
stos
inc
cwtl
inc
fisubl
mov
lret
add
mov
adc
test
mov
lcall
and
push
lds
outsb
sbb
test
xorl
xorl
arpl
dec
fildll
divb
scas
lods
adc
lret
pushf
jns
fs
ss
mulb
cld
divb
pop
pushf
inc
sub
movsl
das
sbb
jl
push
fwait
mov
adc
pop
hlt
cld
inc
add
add
ja
loope
or
movsl
push
push
imul
xchg
inc
bswap
xchg
in
jmp
clc
aad
mov
movsl
mov
adc
cmp
es
cs
imul
jne
pop
mov
jnp
mulb
mov
xor
jle
pop
mov
pusha
hlt
int
jl
sbbl
test
sahf
addr16
test
or
iret
cmpsl
xor
in
cltd
or
cmp
in
imul
xchg
fucomip
movsl
out
fcoms
imulb
iret
scas
xchg
daa
fidivs
jae
inc
jl
js
cwtl
jo
sahf
fsubr
icebp
inc
aam
call
push
xor
push
inc
cmc
xchg
dec
stos
mov
cmpsb
and
mov
push
das
into
or
iret
inc
dec
movsl
scas
push
incb
xchg
pop
rcr
pop
ss
leave
imul
movsb
sub
or
leave
mov
push
inc
mov
bnd
ret
adc
inc
loope
push
add
cmpsl
sbb
jle
sbb
sbb
jns
sub
into
push
jecxz
push
sub
imul
dec
sbb
out
dec
dec
mov
out
test
mov
hlt
mov
lock
ljmp
mov
cmp
loopne
sub
daa
cmp
mov
mov
fdivrp
add
push
jo
cmp
in
ret
insl
pop
jb
and
test
jae
aas
dec
movsl
mov
dec
test
scas
icebp
loope
mov
xchg
mov
dec
repnz
js
adc
jb
xor
jne
jecxz
inc
xchg
loopne
cmp
fs
cltd
and
sbb
outsb
mov
or
inc
and
inc
addb
dec
aad
inc
adc
in
gs
add
xchg
adc
adc
rolb
addb
ds
sbb
dec
or
cmp
shrl
pop
dec
mov
scas
cmp
lcall
leave
loope
push
loopne
mov
xchg
sub
adc
mov
pslld
or
mov
ljmp
pop
mov
ds
adc
push
inc
mov
sarb
jp
or
add
fisubrs
jle
jno
push
es
aam
fsubrs
adc
dec
aaa
test
sbb
sahf
push
push
adc
xchg
xchg
aas
or
pop
leave
mov
xchg
inc
pop
data16
cmp
dec
icebp
or
pushf
adc
aas
xchg
sub
add
jge
cmp
rorl
cmp
imul
jl
and
sbb
mov
push
in
mov
outsb
adc
cmp
cmpsb
or
pushf
scas
pop
jge
sub
sbb
cmp
cld
xor
jnp
aaa
mov
pop
sbb
add
imul
jno
jae
or
add
sbb
jns
loopne
pop
adc
xchg
test
fwait
loope
mov
pop
sahf
stc
mov
jmp
cmp
gs
adc
clc
xchg
lahf
mov
sub
cltd
out
push
dec
push
sbb
dec
cmp
outsl
pop
rolb
sbb
sbbl
insl
dec
push
inc
pop
mov
cltd
push
dec
mov
icebp
nop
ret
sub
popf
popf
es
lock
mov
cmpsb
les
pop
loop
test
or
mov
dec
dec
frstor
test
mov
xor
popl
mov
int
mov
xchg
push
decl
sahf
lcall
xlat
mov
dec
ss
mov
loopne
ret
lds
cwtl
cmp
lock
stc
xchg
dec
daa
xchg
push
xor
int
or
int3
cmp
mov
leave
inc
jno
out
roll
inc
int3
imul
fildl
jns
test
add
pop
enter
mov
push
adc
push
pushf
pop
pushw
cmpl
jnp
sbb
fistl
cmc
sarl
loop
add
or
movsl
shrb
daa
lahf
rolb
jl
dec
and
arpl
dec
add
sahf
xchg
les
xor
and
push
test
loop
rol
aad
add
fsubrl
mov
pop
mov
and
aas
add
call
xlat
xchg
out
ds
stos
dec
mov
fbstp
aaa
pushf
scas
sbb
dec
jl
ret
sub
outsl
fbld
test
pop
icebp
add
nop
mov
fimuls
push
scas
sub
mov
cmp
in
dec
dec
jae
jg
dec
ja
aaa
push
mov
push
mov
sub
fistl
in
dec
leave
xor
punpcklwd
mov
xchg
fs
sbbb
nop
in
mov
cld
mov
mov
fidivl
cmp
xor
mov
out
or
mov
js
push
cmp
push
movsb
fstpl
mov
and
mov
or
and
add
and
bound
and
xor
ret
pop
loopne
sbb
dec
loop
add
out
cmpsl
push
fnstenv
pop
add
and
sbb
sbb
xchg
xor
sbb
and
mov
dec
mov
push
xchg
inc
push
ret
stos
or
fsubl
scas
mov
xchg
test
les
pusha
mov
imul
lock
out
mov
mov
mov
cltd
cmovge
pop
test
sub
movsl
adc
mov
cmp
lcall
and
shlb
pop
jne
cmp
mov
add
fdivrl
test
out
andl
push
jbe
daa
mov
pop
pop
jbe
cmp
sub
adc
push
mov
jne
and
xchg
adc
cli
mov
mov
addr16
xor
mov
or
in
jle
dec
mov
sub
cmp
imull
leave
orl
loope
testl
ds
xor
das
mov
bound
dec
xor
out
fsubrl
orb
shrl
jecxz
mov
push
cwtl
add
mov
pusha
mov
xlat
jmp
and
push
and
call
push
adc
movsb
add
lock
dec
dec
sahf
or
xchg
pop
enter
xlat
ds
mov
sub
jge
sbb
imul
fstl
mov
add
pop
pop
pop
and
mov
imul
mov
sub
lcall
aas
add
xor
faddp
dec
icebp
int
nop
mov
mov
xor
add
in
fcmovb
fs
test
add
xor
mov
aam
xchg
mov
subl
ss
test
mov
aad
ljmp
fldcw
xchg
rorb
stc
adc
mov
xchg
mov
not
sbb
pop
sti
jbe
outsb
cmp
jl
in
adc
loope
dec
movsb
data16
test
cmpsl
sbb
inc
jp
fdivrl
sub
xchg
orb
ljmp
sbbb
dec
lret
cmp
add
lahf
loope
adc
xor
adc
fsubrs
lods
clc
dec
sahf
sub
inc
test
add
and
lods
loopne
pop
loope
adc
dec
das
std
lods
shl
cmpsb
push
push
pop
xchg
nop
mov
mov
mov
inc
or
adc
out
pop
xor
fisttpll
sbb
out
mov
add
jne
fwait
mov
mov
out
push
sbb
movq
aad
adc
aam
mov
daa
dec
xchg
inc
mov
movsw
test
lahf
inc
jecxz
enter
ss
lds
or
out
mov
sbb
add
xlat
or
sbb
xchg
ljmp
and
imul
push
or
nop
cmp
rcll
cltd
int3
sti
and
cmpsl
repz
mov
mov
cwtl
imul
test
jbe
adc
mov
push
dec
sbb
std
ljmp
inc
int
mov
pop
shrl
insb
popf
out
cltd
sbb
fcmovne
jge
jmp
push
mov
ror
bound
xor
mov
shl
aam
lock
outsl
int3
loope
repnz
jp
orl
out
add
out
and
movsb
pop
fmul
or
inc
inc
test
leave
add
pop
popf
lods
cltd
and
rolb
adc
in
popl
dec
cld
js
aam
stos
adc
mov
leave
test
enter
inc
in
fstpl
or
gs
mov
dec
nop
adc
outsl
push
inc
pop
jbe
clc
out
pop
cmp
mov
pop
dec
pop
dec
in
inc
mov
test
mov
nop
or
mov
out
add
repz
push
ljmp
push
fwait
lods
test
and
xor
push
aas
cli
stos
int
aaa
jne
bound
fcmovne
cmp
test
xchg
mov
adc
push
sub
mov
fwait
mov
stos
lods
insb
sub
cmc
or
and
and
and
inc
or
adc
mov
pusha
imulb
lret
push
and
xchg
in
cmp
in
js
push
jle
sbb
icebp
pop
and
icebp
int3
adc
leave
cmp
sbb
loop
data16
and
mov
sub
shr
insl
push
cs
lods
xchg
sub
pop
ret
jo
pusha
jnp
hlt
mov
repnz
fadds
jg
dec
mov
inc
ljmp
xchg
enter
mov
lock
and
shlb
popl
in
cwtl
in
adc
cli
ss
xchg
xchg
pop
or
xor
mov
mov
push
push
sti
aas
rolb
or
lock
pop
fstl
rclb
fisubrs
mov
decl
test
push
pop
adc
and
out
inc
ret
mov
add
and
mov
repz
divb
mov
ljmp
and
push
push
xchg
ffree
test
nop
push
shlb
popf
icebp
jmp
bnd
in
add
cmpsl
fs
sub
pop
pop
mov
jecxz
inc
inc
fstl
std
push
dec
mov
lahf
add
and
scas
push
mov
mov
lea
pushf
sub
jecxz
xchg
imul
es
xchg
push
subb
les
cmc
mov
icebp
fistl
pop
sub
ds
lods
inc
cmp
fucomi
adc
pop
arpl
mul
pop
push
fld
add
ljmp
inc
xchg
jbe
movsb
flds
fnstsw
mov
adc
xorb
jle
bnd
aad
sahf
lea
add
cltd
or
nop
and
cmp
icebp
nop
ss
es
sbb
and
into
mov
test
ja
add
xchg
adc
test
xlat
ja
dec
mov
ret
push
rol
ret
pop
pop
xlat
sbb
xchg
int3
popf
cltd
mov
lret
sub
repz
cmp
and
push
aaa
cmp
mov
movsb
push
imull
imul
jl
lods
sub
loope
pushl
xor
mov
test
push
mov
or
imul
movsl
pop
in
fmul
sti
jne
cwtl
int3
cmp
dec
push
xchg
mov
mov
adc
icebp
out
inc
inc
ret
lahf
shrb
repz
into
xor
pop
cmp
shll
push
sbbb
popf
jno
stos
pop
stos
sbb
or
imul
je
dec
cs
xlat
inc
mov
or
inc
fmull
mov
xor
xor
mov
xor
add
jno
movsl
jo
loop
jnp
and
addr16
lods
aas
push
add
mov
mov
jmp
or
pusha
add
push
push
or
pushf
shr
pop
mov
into
jnp
iret
cmp
imul
pop
or
popf
push
fistpl
test
cmp
adc
inc
push
popf
push
pusha
and
push
sbbl
mov
addr16
and
mov
cmc
mov
ds
push
adc
adc
pop
pusha
pop
loopne
mov
mov
aaa
dec
adc
iret
test
inc
mov
jae
cmc
lock
pop
in
cmp
mov
enter
mov
shll
out
mov
imul
ja
or
frstor
outsl
sub
sub
into
add
xor
out
lcall
cld
inc
in
orb
fstps
pop
xor
jle
stos
adc
jge
movsl
lret
shll
test
mov
xchg
add
data16
dec
mov
adc
in
push
push
cmpsl
jne
sbb
divl
mov
adc
int3
sub
sbb
popf
or
mov
xchg
add
and
imul
inc
subl
cld
cmpsb
jle
je
je
pop
mov
mull
ja
xor
in
and
clc
mov
leave
mov
fs
jbe
in
leave
loopne
test
pop
and
out
adc
pop
xorl
pop
sub
pop
jl
sbb
xchg
jg
ret
xor
push
push
push
leave
pop
loope
in
pop
hlt
sarl
sarl
sahf
jp
mov
scas
add
and
add
xor
repnz
push
das
lret
dec
pop
imul
dec
mov
cmp
hlt
in
dec
inc
mov
iret
jmp
stos
xor
jmp
pop
loopne
loope
or
cld
inc
repnz
inc
and
or
int3
cmpsb
out
mov
push
call
sbb
idivl
dec
loop
sub
iret
mov
and
pusha
xor
fcmovnbe
les
imul
int
cmp
sbb
loop
aam
dec
out
lock
icebp
mov
popf
push
inc
push
fcompl
or
mov
call
cmc
pop
add
mov
jo
xlat
adc
rolb
rcll
mov
ret
scas
test
mov
aaa
test
loopne
popf
fidivl
insl
in
shl
repz
push
pusha
push
jne
jle
mov
data16
pop
dec
xor
fdivs
imul
lahf
mov
jle
mov
fucomp
xrelease
and
push
leave
pop
fidivrl
dec
pop
out
cmp
lods
mov
lret
cmp
push
inc
and
adcb
push
sub
cmp
xchg
icebp
sub
test
add
gs
les
negl
jb
jge
xchg
sub
testl
push
or
dec
js
cwtl
push
outsl
xchg
lods
sbb
xor
icebp
jle
xchg
pop
jo
mov
dec
pop
mov
cs
xchg
and
mov
fdivrl
jnp
dec
popa
out
fwait
jae
inc
adcl
ret
in
jle
inc
popf
mov
or
mov
movsb
orb
mov
decl
pop
ds
clc
and
out
rol
mov
popf
lods
out
xorl
lea
out
mov
jbe
jp
pusha
faddp
ljmp
jnp
dec
inc
stos
push
dec
push
and
outsb
xchg
sahf
push
gs
inc
popa
dec
arpl
lret
out
ficoms
cmp
scas
dec
mov
jmp
inc
inc
decb
outsl
adc
adc
add
sub
push
push
in
repnz
movsb
pushl
lea
in
pop
out
lret
ret
in
inc
jge
outsl
hlt
xor
and
jnp
or
daa
push
outsl
add
cmovnp
mov
adc
inc
mov
and
pushf
fsts
test
hlt
push
xchg
cs
movsb
fwait
xchg
iret
enter
shl
lahf
sbb
outsl
out
gs
mov
mov
loope
sub
jle
fistpl
je
aad
mov
xchg
mov
mov
cmc
jae
jge
rolb
inc
xchg
rcll
xor
and
inc
ret
pop
or
daa
sahf
jno
insb
jg
icebp
lea
test
xchg
jge
sti
sbb
pop
outsb
push
mov
imul
imul
mov
dec
push
mov
icebp
adc
mov
movsl
sub
lahf
sbb
xchg
sahf
popf
aad
mov
xor
pusha
leave
lcall
fnstenv
dec
out
call
scas
iret
dec
sub
xor
pop
fsubr
add
rorb
les
xchg
pushf
jl
sbb
lea
cmp
cmpsb
aaa
shr
and
iret
cwtl
daa
ret
popf
mov
mov
pop
popa
sub
loopne
fucomip
ljmp
jmp
addb
lcall
mov
jmp
shlb
cmpsl
adc
pop
pop
mov
mov
lods
lods
pop
push
sbb
xor
fimuls
cltd
push
inc
mov
jb
lds
cwtl
ror
mov
cltd
ljmp
stc
fs
xor
fistpl
jmp
les
dec
test
and
jno
inc
loop
ds
mov
mov
or
lods
gs
pusha
and
aas
insb
stc
jae
decb
jns
push
jnp
aas
es
cmp
pop
mov
mov
iret
inc
cmc
sahf
fs
inc
mov
push
loopne
lods
rorl
inc
jbe
push
cmp
or
outsb
xchg
or
pushf
inc
arpl
cwtl
lds
mov
lret
dec
push
iret
div
aam
insl
lds
or
pop
mov
lds
mov
jg
pop
mov
cli
imull
fists
jl
sti
cmp
leave
adc
mov
cmpsl
dec
jno
mov
push
repz
mov
or
movaps
sbb
mov
and
xchg
stc
sbb
adc
cli
push
cmp
aas
push
or
std
push
mov
int3
sbb
mov
jne
lahf
inc
mov
outsb
push
addl
mov
movsl
cmpsl
push
popa
fisubrs
ljmp
and
xchg
sub
inc
dec
nop
sub
push
push
xchg
push
lret
mov
xchg
xor
orb
int
cwtl
and
pop
out
inc
mov
sub
xchg
jecxz
dec
fwait
test
lret
mov
aam
dec
cmp
push
je
insb
sbb
jns
adc
pop
dec
adc
int
xor
or
movsl
dec
sbb
adc
les
pop
add
fwait
mov
or
icebp
jmp
pushf
or
pushf
bound
lahf
xadd
insb
arpl
stos
mov
stos
jg
xor
test
fwait
jl
das
aas
add
outsb
sub
sbb
pmulhuw
adc
mov
fs
fidivrs
xor
out
pop
dec
scas
outsb
enter
outsl
xorb
div
into
aam
pop
clc
mov
pop
rorl
push
xor
enter
cld
lock
push
lret
call
mov
push
pusha
mov
outsl
cmp
mov
out
pop
lock
mov
lahf
pop
xor
sbb
out
popa
xchg
rolb
cwtl
fs
pushf
insb
adc
adc
mov
out
aam
inc
mov
imul
cmp
push
cmpsl
xor
cli
clc
repz
mov
sub
mov
fwait
mov
pusha
mov
lret
sub
mov
imul
mov
xchg
mov
cmpsl
cmpsb
adc
jecxz
fnsave
push
mov
or
xchg
push
out
jne
aad
inc
cmp
fistps
mov
aam
ss
imul
popa
outsl
int3
jne
bound
inc
insb
mov
or
shlb
ja
popf
addb
les
iret
rolb
stos
push
nop
into
or
inc
mov
dec
test
incb
in
add
mov
lret
add
add
push
mov
ss
in
rcrb
cmpsb
adc
popf
push
movsb
cmp
pop
add
enter
inc
js
mov
lret
sub
sbb
popa
testl
push
ss
data16
and
sbb
out
sbb
jno
in
dec
pop
int3
inc
stc
lods
mov
shrl
ds
shl
les
jge
jmp
repz
jl
jge
jno
mov
cltd
les
or
push
cld
push
insb
ret
pop
sbb
cld
and
push
lock
mov
hlt
sbb
mov
outsl
jbe
dec
bound
loop
xchg
out
xlat
inc
push
mov
jns
sbb
incl
in
sbb
pop
enter
inc
or
les
lods
enter
out
jecxz
cmc
dec
sub
cld
sar
inc
pop
mov
insl
xor
lods
add
fs
xchg
cmp
ficompl
aad
rcr
inc
sbb
rcl
xchg
or
push
out
stc
mov
sub
sub
gs
sbb
icebp
sub
sbb
mov
sbb
sbb
push
or
push
jl
and
fdiv
add
je
jp
jp
lcall
fidivl
cltd
cs
aaa
xor
icebp
dec
dec
call
out
add
mov
iret
addr16
pop
xor
es
inc
lds
movsb
mov
std
or
loope
gs
lods
add
pop
loope
inc
adc
jb
pop
aas
xor
sbb
cmp
pop
dec
fcmovbe
jp
lcall
lret
in
retw
xor
xchg
arpl
mov
or
mov
sbb
pop
adc
vmread
idivb
outsb
inc
pop
and
in
pop
fistpl
push
cwtl
pop
jnp
jge
mov
adc
and
and
jne
mov
push
xchg
add
add
inc
repnz
cld
jmp
mov
or
shrl
cmp
imul
rcr
lcall
fcoms
mov
mov
adc
or
push
xchg
dec
mov
aad
les
dec
daa
insl
jne
mov
cmp
fdivr
inc
xor
and
sbb
jno
cli
imul
in
xchg
int3
dec
test
lahf
adc
scas
xor
arpl
or
loope
mov
pop
es
int
sbbb
push
add
das
sbb
push
and
je
dec
nop
je
rolb
ljmp
aam
shrl
popa
sar
cld
cmp
or
xor
push
mov
xchg
and
fnstcw
jmp
shrl
xor
loope
ret
ret
notl
jmp
dec
or
jle
in
dec
nop
or
stos
mov
out
movsb
xchg
sub
xchg
jb
and
into
imul
mov
or
sbb
ficomps
std
push
js
jae
mov
loop
mov
push
xchg
or
mov
popa
jb
ds
loopne
xchg
or
jle
sti
outsb
add
push
loope
or
test
sbbl
pop
enter
lahf
adc
lods
or
shrl
push
push
dec
push
sub
repnz
leave
add
push
pop
mov
cmp
fadd
mov
jg
adc
push
add
xor
inc
hlt
imul
push
pop
data16
loope
push
lea
jae
ja
ja
inc
negl
imul
jle
dec
mov
sahf
xor
cmp
shll
mov
push
inc
or
dec
pop
jmp
mov
xchg
in
or
cmp
outsb
adc
jnp
in
in
cmp
mov
in
es
and
pop
add
sti
push
xchg
mov
imul
mov
inc
jp
push
mov
stos
je
sub
mov
or
loop
xchg
sbb
lret
mov
push
out
adc
sbb
mov
sub
subb
dec
fistl
cwtl
push
push
sub
aas
loopne
and
test
pop
hlt
lcall
insl
sbb
int3
imul
and
mov
adc
sahf
mov
cmp
adc
jl
js
adc
loop
pusha
xor
or
aam
adc
or
or
jle
hlt
dec
mov
mov
pushf
push
shll
jno
mov
dec
push
in
lcall
xchg
or
push
xchg
insl
push
mov
lret
les
rcrb
ds
adc
mov
jmp
push
imul
imul
lea
out
scas
mov
mov
cmp
sub
add
pop
je
cs
sbb
adc
andb
dec
shlb
and
repnz
stos
push
inc
leave
ficoml
lods
fsubrs
outsb
jo
dec
mov
sbb
das
sahf
adc
lds
cmp
cmp
pusha
aaa
incl
xlat
add
aas
aam
aad
pushf
or
negb
or
sbb
xor
or
pop
inc
xor
sahf
into
dec
les
pop
mov
aam
nop
mov
or
and
mov
imul
in
test
or
push
test
pop
inc
aaa
or
sbb
sub
mov
xchg
call
es
repz
add
pop
vaddps
push
shlb
sbb
push
les
lods
dec
cmp
push
ffreep
fcmovu
sbb
roll
shr
scas
jmp
jno
sbb
leave
mov
or
pop
cmpsb
cwtl
in
mov
fdivs
filds
iret
push
xchg
lret
mov
ss
test
test
scas
pop
push
push
in
int3
push
inc
cmp
icebp
xorl
faddl
jo
ljmp
push
lea
xor
jl
pushf
loop
cmp
add
push
mov
test
or
ret
cli
xchg
pop
ja
test
ret
stos
sahf
jmp
cmp
add
dec
push
jb
ds
or
dec
loope
fisttps
sbb
inc
shr
xlat
int
sub
aad
ja
sub
inc
imul
fcomps
lods
fdivrs
daa
mov
and
push
in
in
sbb
xchg
mov
and
xchg
mov
dec
xor
orl
lret
adc
pushf
mov
mov
ret
repnz
outsb
hlt
xor
ret
mov
jbe
pop
or
pop
sbb
std
jnp
ret
pop
les
and
mov
je
in
mov
sub
shll
sbb
cmpsb
andl
add
lods
jge
fcmovu
lea
sti
clc
int3
loopne
jbe
push
arpl
sahf
fnsave
dec
mov
add
lret
lock
loope
sub
mov
mov
lret
enter
mov
jnp
mov
xchg
mov
cmp
mov
jp
mov
or
sub
inc
xchg
idivl
mov
rcrb
sub
cmp
scas
aad
shl
add
cld
lds
xchg
test
stos
jp
xor
movsb
dec
dec
jne
out
dec
ret
insb
xchg
mov
inc
sbb
push
idivl
icebp
push
test
cmpsl
int
fsubl
insb
xlat
mov
dec
sbb
push
loope
or
mov
ficompl
jne
adc
fsubrl
sub
movsl
mov
stc
sub
stc
cmp
push
pop
pop
les
cmp
xor
or
loope
push
addr16
or
je
insl
les
je
shll
xor
push
aam
mov
xlat
inc
sub
and
popa
jns
sbb
and
stos
std
sub
xchg
xchg
clc
cmp
sti
stc
and
mulb
cmpsb
pop
data16
cmp
push
jae
js
scas
mov
call
inc
jo
lods
sbb
jnp
je
in
and
sahf
leave
das
notl
dec
dec
push
mov
and
pop
jge
cmp
xchg
xor
or
jae
imul
pop
popf
xor
jns
adc
filds
push
movsl
daa
lret
push
mov
jne
xchg
insb
subb
scas
imul
pop
mulb
loope
dec
mov
and
aam
push
and
roll
in
push
jne
mov
mov
sub
ror
jbe
pusha
fdivp
aaa
push
leave
inc
std
pop
xor
gs
pusha
shll
cwtl
lcall
das
push
pop
sbb
mov
pop
incb
loopne
push
mov
inc
ds
dec
pop
es
and
dec
fstpt
lea
arpl
xchg
mov
incl
call
xlat
inc
dec
enter
in
clc
jl
push
aaa
dec
je
mov
or
pop
or
cmpsl
and
mov
pusha
les
mov
pop
push
pop
insb
popa
scas
pop
imul
cmp
mov
fs
jae
cltd
test
sbb
sbb
jmp
cmp
sbb
jecxz
fidivs
int3
leave
dec
dec
jns
int3
dec
mov
mov
inc
fistps
pop
pop
shl
dec
push
pop
insb
and
inc
das
ja
push
test
jecxz
pusha
pop
add
cmpb
add
pop
hlt
dec
rolb
dec
lea
lods
rorb
sub
xorl
js
push
cmpsb
add
xchg
es
loopne
cmp
mov
iret
sti
mov
jo
into
shlb
jge
jae
adc
lds
xchg
sbb
xor
and
ss
pop
filds
xchg
repnz
je
aad
mov
lcall
addb
push
cmp
adc
andb
in
pop
sub
gs
jg
sti
shll
lds
mov
fchs
aaa
js
push
aas
scas
dec
or
dec
dec
scas
xor
test
shrl
lahf
stc
inc
sub
mov
mov
push
and
jae
shll
add
dec
in
test
cmp
xor
bound
xor
rolb
push
push
fmuls
jecxz
repnz
js
jmp
mov
fldenv
fwait
add
aaa
or
xor
rol
inc
or
jnp
xchg
xchg
add
cmp
cmpb
pop
loopne
inc
divb
cmc
adc
xor
popa
xchg
push
jnp
repnz
and
loop
xchg
add
aas
and
movsl
add
jnp
repz
cli
cltd
out
fcompl
popf
pop
les
aas
or
test
outsl
in
cwtl
arpl
je
push
int3
sbb
fldenv
idivl
aaa
jno
stos
push
cli
cmp
enter
and
ret
mov
imul
roll
xchg
lcall
imull
pop
shll
mov
push
xchg
xchg
inc
jbe
mov
test
dec
aas
shll
test
cld
cld
and
sbb
jmp
loopne
lods
into
int
insb
pop
jae
mov
mov
cltd
mov
sub
daa
bnd
mov
adc
call
inc
xor
add
das
sbb
dec
addr16
add
gs
mov
ljmp
adc
dec
or
lahf
rolb
mov
int
out
cli
mov
inc
in
aas
lods
sub
dec
imul
mov
js
sbb
inc
and
mov
mov
mov
cmp
je
jnp
pop
jae
or
mov
hlt
dec
push
in
shrb
mov
mov
int3
mov
fwait
inc
push
pop
mov
sub
mov
cmp
leave
cli
clc
seta
jae
xor
push
imul
into
mov
icebp
push
dec
jp
dec
add
sbb
pop
gs
mov
hlt
das
push
imull
ljmp
dec
push
add
jge
imul
sbb
pop
xchg
xchg
dec
in
adc
push
push
cmpsb
fcoml
push
lret
imul
imulb
and
jae
repz
xorb
xor
insb
xor
jns
sbb
mov
sbb
xchg
mov
sbb
mov
xor
shll
mov
xchg
scas
inc
mov
sub
add
out
mov
pop
pop
imul
jg
jnp
sub
mov
rcll
jle
aad
inc
ja
jbe
movsl
jne
jmp
sub
jbe
mov
mov
das
rolb
jge
mov
xchg
pop
mov
push
pushf
fnstcw
jne
outsl
adc
in
loop
leave
mov
ja
sbb
jne
stos
and
push
xchg
push
pop
out
fstpl
dec
xchg
mov
push
jmp
out
jbe
xchg
fisttpl
ss
dec
xchg
jno
xor
or
aam
push
ss
pop
pop
fnsave
cmp
cmp
in
dec
mov
push
jle
xchg
sbb
mov
add
insb
cmc
shll
jmp
fwait
push
mov
lods
inc
clc
and
orl
sbbl
bound
sub
scas
or
cltd
popaw
cmp
fimull
lock
cmp
xchg
lea
out
sbb
xor
test
insb
push
lahf
sti
bound
push
xor
xor
lock
jne
fbld
xchg
dec
cltd
das
inc
loopne
and
jb
mov
mov
cmpsb
mov
cmpsb
mov
adc
adc
add
cmp
cli
lret
inc
bsr
sub
pop
cmpb
xor
add
jge
mov
stos
repz
sub
mov
xlat
pop
in
fbld
fsubl
xor
xchg
dec
xchg
mov
pushf
and
mov
cmp
frstor
aad
jb
add
xchg
pushf
lock
push
pop
add
scas
in
xor
push
adc
or
cmova
mov
popf
jg
push
data16
pop
fsubl
in
or
ss
clc
into
push
out
mov
jecxz
repz
mov
subb
push
test
adc
mov
inc
das
or
mov
shrl
push
adc
stos
icebp
lods
xchg
pop
dec
mov
xchg
dec
bound
stc
data16
xchg
mov
int3
push
inc
push
mov
xchg
and
repnz
mov
adc
xor
sbb
dec
pop
iret
and
outsb
subb
ljmp
dec
jne
cmpb
test
ds
sbb
xor
mov
push
hlt
fsubl
fildl
inc
and
pop
repnz
rcll
xor
insl
dec
jns
sahf
rolb
mov
mov
stos
jmp
mov
xchg
xchg
lcall
sub
push
mov
jg
mov
jbe
jge
and
popa
jbe
sbb
rolb
push
addb
sbb
rcr
lock
in
fidivl
jmp
bnd
add
aam
jb
loopne
out
or
mov
cmp
xlat
leave
jno
mov
imul
pop
pop
and
hlt
int
inc
lahf
subl
in
dec
xchg
aaa
xor
test
icebp
mov
scas
inc
pop
jmp
adc
fucomi
ja
or
xchg
push
push
jne
pop
test
jbe
push
dec
loopne
movsl
adc
mov
jl
adc
pop
daa
cwtl
ljmp
das
fcmovnbe
mov
and
pop
call
or
sub
out
fstpl
loope
je
xor
pop
hlt
ljmp
jl
push
sbb
aas
movsb
in
mov
push
dec
repnz
leave
addl
xchg
or
mov
out
push
mov
push
push
test
aad
mov
out
es
leave
adc
mov
push
bound
mov
in
loop
icebp
sbb
loopne
je
mov
and
cmp
and
mulb
inc
jle
and
mov
sub
lock
push
pop
jmp
mov
popf
out
add
push
lahf
aam
ja
hlt
mov
idivl
xchg
fidivs
in
lahf
ljmp
jl
pop
fsubp
js
jg
sub
xor
ficoml
movsl
rolb
jnp
mov
stos
lods
cld
mov
mov
fcoml
aad
adcl
out
push
fisttpl
dec
cs
sti
cwtl
movsb
push
mov
mov
roll
loop
push
rcll
sbb
les
sahf
test
push
pop
in
faddl
rolb
mov
fidivs
andl
popa
lahf
inc
jecxz
ljmp
pushf
xor
or
push
add
push
mov
cmpsl
sbb
jl
insl
jae
push
adc
fmull
mov
repnz
and
call
inc
in
gs
jge
sbb
cmp
and
inc
andb
sub
sbb
jecxz
mov
je
push
std
call
pop
mov
scas
fimull
notl
push
imul
mov
fs
mov
and
mov
jne
and
mov
cmp
mov
cltd
cmp
xchg
lcall
inc
in
popa
cmp
in
test
pop
or
lods
lock
loop
jecxz
mov
scas
pop
cld
jecxz
test
xor
aad
cli
or
loopne
sub
or
mov
les
inc
xchg
test
add
icebp
ljmp
push
imul
push
int
sbb
inc
ret
leave
jb
sti
fldlg2
lods
ret
jg
fs
pop
cmp
inc
jp
jp
add
mov
dec
xchg
xor
lods
fldl
cli
or
shr
mov
stos
notw
push
pusha
or
sbbl
lods
test
mov
fs
mov
mov
iret
inc
or
aas
mov
sti
lods
xchg
xor
or
push
pop
mov
dec
and
pop
cli
aam
cmp
mov
enter
repz
xchg
fists
fcoml
mov
cmp
xor
sbb
jbe
je
jmp
ja
and
imul
lea
mov
push
hlt
std
int3
in
sbb
lea
pop
adc
push
mov
adc
mov
push
imul
pusha
push
idivl
nop
data16
jns
flds
jp
in
jnp
cmp
fs
mov
jb
fidivl
add
xor
in
test
rol
andb
repnz
mov
and
jg
xchg
inc
xchg
dec
sub
aaa
idivl
arpl
push
xchg
or
push
clc
xor
hlt
mov
fs
xor
inc
mov
push
pop
jmp
insl
pop
testb
and
dec
fcomps
mov
add
xor
rcrl
orl
and
out
cmpsb
jns
xor
jecxz
jb
lret
mov
mov
push
roll
inc
call
fcoml
sub
stos
movsb
les
mov
push
push
jne
and
arpl
push
dec
xor
xor
repz
push
fidivl
fldenv
jecxz
iret
dec
fists
fs
push
je
ss
loopne
sub
gs
adc
gs
fistps
jl
divl
loope
pop
mov
ja
aaa
std
xor
call
and
xchg
pop
int
mov
cmp
inc
lahf
lahf
fsubrs
adc
es
pop
sbb
je
ljmp
mov
jbe
repz
jnp
stos
ret
test
outsl
or
adc
dec
std
mov
aas
sbb
movsb
xchg
out
adc
es
rcrl
test
push
inc
aad
inc
rcr
call
je
jb
arpl
fmuls
mov
shrl
pop
mov
je
addl
jge
pop
cwtl
cmp
shlb
outsb
or
adc
nop
xor
pop
stos
xchg
shll
mov
and
push
push
gs
lods
xor
adc
sub
xchg
pop
movsb
xor
sub
out
int3
test
in
lods
dec
loop
mov
xchg
push
xor
sbb
adc
loopne
bound
pushw
imull
cmp
test
xor
hlt
jbe
pop
or
and
mov
sbb
arpl
test
and
jp
cmpsb
jge
dec
lea
mov
fsubs
cwtl
pop
or
testb
ret
fwait
xor
inc
sub
or
jp
sbb
sbb
pop
sbb
cwtl
loop
movsb
jmp
xor
sub
adc
xchg
cld
mov
cld
pop
jmp
cmp
cmp
repnz
lods
iret
xchg
and
push
mov
shr
xchg
and
xor
fadds
dec
ss
int
pusha
xchg
lret
adc
das
lret
loop
push
cmp
push
pop
jge
lds
and
jo
push
int3
shl
daa
push
jae
xor
jge
ja
mov
sbb
aad
fucomp
jge
add
movsb
popf
outsl
push
lea
adc
lcall
jl
pop
or
mov
out
std
pop
bnd
fistl
jne
inc
ret
jp
dec
hlt
lock
sub
push
cmc
mov
mov
sti
mov
pop
test
dec
je
lcall
add
lcall
xchg
mov
inc
or
std
sub
cmpsl
addr16
sbb
push
xor
mov
xchg
nop
sti
jmp
fldt
xchg
std
cmpsb
movsl
stc
cmpsl
lcall
and
shlb
jle
cmpsl
imul
lcall
pop
js
jnp
mov
sbb
subb
jne
cmc
in
js
in
imul
sbb
int3
jmp
das
add
push
in
mov
inc
xor
mov
enter
ds
scas
scas
repz
xor
lahf
fsubr
push
dec
pusha
push
sub
ficoms
mov
jg
cmp
out
js
aad
pushf
mov
sub
jae
imul
sbb
jnp
and
push
fimull
push
inc
pop
nop
and
xor
xchg
pop
cltd
push
leave
adc
xchg
jle
and
pop
sbb
sbb
divb
testb
out
ds
sbb
and
mov
mov
xchg
std
data16
push
outsb
push
stos
push
test
jbe
adc
push
ds
dec
lret
data16
movsl
xor
scas
mov
and
pop
jle
mov
jns
ret
xchg
scas
and
pusha
and
push
into
mov
lret
fstp
fadd
lods
sahf
sub
add
insb
or
les
scas
daa
mov
aam
fwait
lea
xor
lock
test
xchg
adc
mov
jno
inc
push
pushf
and
push
jp
dec
mov
fstpt
mov
sub
fistl
sbb
xchg
mov
out
scas
mov
orb
sub
jbe
mov
xchg
lods
andb
popa
add
popa
mov
mov
pop
cli
jp
jl
inc
pop
loope
lods
subb
inc
in
rorl
mov
and
stc
sub
dec
xor
jo
mov
pop
xchg
ds
add
push
pushf
aam
adcl
cmp
mov
and
xor
imul
add
cmp
loopne
dec
mov
adc
andb
insb
pushf
mov
pop
addr16
cmpsl
jae
lds
cmpsl
sbb
mov
je
andl
pop
add
in
addb
xchg
std
xor
lcall
rcrl
xchg
in
xchg
dec
leave
push
pop
enter
aam
shlb
add
cmpsb
push
insb
xor
pop
inc
sahf
jb
outsl
sbb
push
jg
pop
popa
aaa
std
xchg
call
mov
jno
imul
xchg
sbb
sub
hlt
jl
inc
jo
mov
mov
and
movsb
ss
stos
ds
sbb
js
out
push
imul
into
xor
or
imul
insl
clc
jecxz
ja
pop
inc
mov
push
xor
das
mov
xchg
outsb
fldt
dec
mov
add
aad
call
fsubl
xor
mov
jno
dec
test
push
add
ds
sbb
cmc
iret
or
dec
or
bound
not
movsl
mov
mov
out
adc
pop
jmp
in
das
push
jecxz
mov
scas
pop
pop
mov
dec
mov
push
lods
sub
add
xchg
sub
push
incl
and
jbe
add
sbb
mov
js
fs
push
mov
fs
jns
out
lret
push
mov
lods
stc
iret
js
cs
stc
lods
out
daa
test
sub
in
or
mov
lret
cmp
mov
mov
test
mov
or
add
cmpsl
stc
sub
gs
into
dec
pop
cmp
sub
lahf
fs
dec
inc
mov
dec
ret
dec
xor
push
push
rolw
lods
lea
push
pop
dec
pop
test
xlat
pop
jl
out
call
mov
mov
push
xor
push
cmpb
fcmovne
faddl
addr16
push
call
movsl
lahf
sub
push
inc
out
push
or
xchg
test
adc
sbb
sbb
mov
cmp
idivb
repz
xlat
lods
pop
fdivs
sub
fwait
lahf
out
xchg
jge
sub
pop
push
dec
icebp
push
repnz
or
das
outsb
pushf
ljmp
aam
imul
ja
cmp
xor
cli
pop
sbb
inc
fsubr
loopne
js
push
dec
addr16
lods
addr16
dec
push
and
pop
pop
lret
jle
push
jmp
ss
ret
mov
lock
and
addr16
xchg
shrl
cltd
ja
std
or
enter
icebp
xchg
lods
cmp
das
movb
jno
test
lret
dec
std
sbb
dec
int3
jge
add
cs
cltd
adc
adc
js
mov
imul
je
je
int3
mov
mov
test
xchg
ljmp
cmp
cs
push
mov
cmpsl
push
xor
testb
xor
jl
and
imul
outsl
pop
shl
xchg
mov
sbb
out
pop
sub
jecxz
out
mov
cmpsb
pop
inc
mov
rorb
jmp
lcall
sbb
sbb
sar
int
pop
pop
fwait
dec
xchg
xor
xorb
sub
push
test
push
and
daa
push
mov
stc
out
das
mov
push
sti
sub
mov
jl
js
pop
mov
bound
inc
xlat
pop
or
push
fwait
test
out
xchg
cmp
int
flds
imul
cltd
xchg
fldl
pop
into
push
out
push
push
pop
jns
mov
out
sub
cmp
cmp
je
into
std
testb
testb
cld
and
lds
inc
add
stos
in
push
and
jmp
cmp
orl
and
fdivl
int
je
dec
stos
movsl
push
mov
or
ljmp
fadd
andl
movl
cmp
std
cmp
pop
jns
addb
sti
sbb
xchg
cmp
mov
xchg
into
fs
fisubrl
outsl
xchg
or
fs
into
fiaddl
and
mov
inc
mov
ret
or
jb
lea
jg
sub
pop
fistpll
and
jl
shr
sub
xchg
and
fwait
aaa
jge
imul
add
push
pop
enter
je
sub
dec
dec
mov
int3
in
or
mov
clc
into
lods
push
dec
push
adcb
jg
mov
ret
movsl
nop
lret
add
mov
adc
sub
push
pop
sub
jb
in
std
push
xchg
test
or
xor
in
adc
movsb
jbe
movsb
rcrb
jb
rorb
and
sbbl
stos
pop
js
in
cmpsb
iret
subb
jbe
adc
idivb
popa
or
inc
dec
fstps
popa
pop
lods
jne
js
sub
adc
mov
ja
inc
jb
in
mov
jmp
push
repz
movsl
rorl
adc
imulb
adc
dec
test
sub
mov
dec
ret
cli
arpl
cmp
jmp
pusha
ss
and
sti
pop
fiaddl
bound
inc
jbe
mov
lods
and
aad
inc
stos
mov
in
dec
in
cmp
aad
ja
pusha
loope
or
in
dec
pushf
xor
je
es
adc
adc
xchg
jns
cmp
int
lock
push
imul
xchg
fldt
sbb
push
into
add
js
adc
lods
fcoms
inc
stos
inc
cli
lods
cli
mov
adc
out
movsl
or
rclb
inc
push
or
fsub
leave
pop
push
mov
dec
mov
cmp
pusha
sbbl
inc
pushf
in
mov
ret
mov
mov
popa
out
xor
fnstenv
mov
test
mov
xchg
dec
stc
in
xor
enter
faddl
xchg
test
dec
sub
lahf
stos
mov
repnz
push
pop
fxtract
inc
mov
sbb
mov
filds
sub
lods
lods
jne
testl
into
test
cmp
jb
jle
ret
jae
scas
loop
fs
add
gs
leave
push
movsb
ds
mov
mov
inc
repnz
mov
pop
outsl
cwtl
mov
pop
inc
int
and
outsl
ds
aas
mov
and
cmp
mov
push
mov
lret
jne
cmpsb
clc
sbb
pop
add
mov
jo
add
subl
dec
adc
jae
out
out
inc
cld
mov
and
inc
add
or
dec
add
repz
push
les
xchg
push
jno
cmpb
mov
push
iret
lods
aas
pusha
push
adc
and
dec
mov
arpl
xor
ljmp
in
add
mov
repz
and
push
popa
out
lods
mov
daa
dec
stos
cli
ret
jo
xor
das
dec
pop
fidivrl
dec
and
xchg
xchg
jns
pop
aas
adc
mov
popf
push
stos
aam
xor
mov
aas
dec
lcall
icebp
jnp
test
imul
out
ds
add
fiadds
push
mov
fsub
ja
stos
les
or
mov
sub
push
inc
mov
xchg
fisubrl
pop
stos
test
cmc
push
and
cmp
loop
sub
std
ljmp
xor
push
nop
or
or
cmpsl
xor
add
mov
xor
pop
or
mov
push
cmp
push
movsb
rorb
jp
dec
mov
mov
aaa
mov
sti
jmp
cltd
imul
dec
jbe
pop
jp
push
inc
roll
jnp
pop
fwait
inc
stos
aad
jne
lods
scas
test
sbb
es
adc
stos
dec
pusha
or
jo
in
dec
aad
mulb
sub
gs
pop
jle
sub
les
sub
push
mov
sbb
rol
add
mov
mov
push
xlat
dec
xor
sti
fimuls
xchg
das
lock
xchg
dec
inc
cmp
mov
in
clc
cmp
icebp
sub
pop
loopne
pop
enter
xchg
into
mov
or
inc
push
or
int
sbb
pusha
data16
adc
jl
cwtl
outsb
xchg
xchg
daa
cwtl
sbb
call
cmp
test
add
insb
je
adc
add
and
pop
xor
aam
and
adc
prefetch
jecxz
mov
lret
in
mov
ret
jp
stos
xchg
and
ds
and
cmp
lock
lret
pop
inc
inc
bound
cmp
popa
repnz
jmp
and
hlt
cmp
fwait
insb
pop
xchg
aaa
mov
loope
test
stos
jp
sub
ja
pushf
and
jmp
adc
cli
jne
or
inc
fbstp
xchg
out
adc
mov
enter
add
insl
mov
les
mov
jg
sahf
push
out
mov
in
add
in
adc
xchg
or
lahf
mov
sub
addr16
outsl
addr16
stos
sub
dec
xor
fnstcw
fidivrl
cltd
pop
scas
lds
xor
jge
popf
or
test
insb
fwait
inc
js
repnz
mov
mov
inc
pushf
insb
int
sti
sahf
insb
rdpmc
mov
xor
cmpsb
jl
mov
xlat
push
loop
pop
mov
mov
fnstcw
mov
notb
das
push
fucomi
pop
dec
pop
xchg
cwtl
loop
add
cmc
bound
mov
mov
pop
cli
and
fcmovbe
jl
out
or
popf
or
stc
push
inc
pop
sub
mov
repnz
mov
pop
dec
lock
mov
mov
test
jns
xchg
sar
jnp
lret
push
jne
enter
testb
lods
xor
in
es
jle
addb
es
xchg
pop
and
sub
roll
test
or
enter
cltd
shr
cmp
dec
movb
mov
push
sbb
arpl
inc
jnp
add
pop
imul
orb
insb
int
mov
test
push
das
aad
sub
jp
push
xchg
daa
sarb
fisttpll
icebp
aas
dec
outsl
dec
rorb
decb
pop
test
mov
push
fnsave
loope
lahf
pop
stos
jmp
jge
fldt
jne
sti
test
dec
pop
in
push
pusha
popf
mov
adc
cmp
int3
xor
cmp
fdivrs
fcoms
cmp
cmp
add
mov
xchg
repnz
sbb
lds
lcall
xor
pop
jmp
inc
cltd
mov
push
jo
lds
insl
mov
jg
aaa
sbb
cmp
xor
push
xchg
adc
pushf
xor
mov
push
dec
fnstsw
jo
sub
xchg
pushf
jb
mov
aaa
call
add
fwait
bound
in
sub
xchg
or
lods
mov
pop
std
nop
mov
pop
pop
cmpsl
out
push
cmp
mov
jmp
mov
les
orb
mov
mul
sub
fisubrs
inc
jmp
xor
jle
lods
inc
int3
xchg
push
add
das
adc
mov
cmpsb
and
enter
dec
sub
sub
push
out
addr16
mov
push
adc
jmp
movsb
popf
call
test
mov
dec
add
loope
mov
int3
cmp
mov
imul
aaa
ret
loopne
adc
cmp
gs
adc
vdivpd
add
lds
inc
popl
adc
adc
or
jle
loop
and
or
cld
inc
add
gs
test
xor
mov
and
xchg
mov
xor
mov
push
fisubl
adc
xchg
add
cmp
or
loop
jge,pn
cwtl
pusha
cmp
jbe
sub
lea
mov
or
jbe
jge
jbe
mov
mov
repnz
mov
push
cmp
xchg
adc
push
repz
adc
pop
cld
jne
pop
pop
ljmp
dec
xor
pop
cld
pushf
filds
in
cmpsb
cwtl
scas
arpl
xlat
pop
in
xor
jle
mov
sbb
fdivs
stos
add
jne
adc
push
and
or
cld
pop
sub
enter
fwait
gs
mov
or
lods
stos
idivb
out
test
es
mov
xchg
jg
jle
mov
dec
mov
nop
in
loopne
popa
xlat
push
nop
inc
int3
pop
popa
and
dec
dec
dec
add
add
aaa
repnz
mov
push
jbe
jp
or
mov
mov
push
cmpsl
pusha
aaa
mov
in
sbb
in
adc
lds
outsb
scas
jp
adc
lcall
cli
pop
mov
cmpsl
out
and
scas
push
in
out
fmull
int3
int3
out
in
mov
sbb
mov
cs
iret
fs
mulb
in
jl
je
push
lahf
and
jmp
repz
ss
jg
lea
test
mov
imul
movl
fst
jae
xchg
sub
je
xor
cmpsb
sti
jae
mov
jno
daa
shlb
pushf
scas
stos
int3
or
sarl
daa
pop
push
leave
dec
or
mov
fsubrs
and
pop
mov
pushf
mov
mov
bound
push
in
pop
leave
xchg
mov
in
sbb
aas
mov
mov
jbe
add
mov
int3
and
test
test
push
mov
int
mov
loop
unpckhps
aaa
xchg
pop
cmpsb
jno
iret
sbb
insl
push
adc
adc
stc
das
cs
repnz
testl
or
cmpsb
cmp
pop
jo
jmp
xchg
fcmovnu
lods
outsb
les
jg
push
or
fsubrs
mov
popa
mov
and
add
aas
test
jl
inc
dec
mov
add
cwtl
int3
mov
aaa
adc
ds
jo
dec
mov
jmp
clc
mov
movsl
add
jbe
lahf
clc
add
and
nop
nop
add
std
jl
hlt
adc
pusha
sbb
jmp
addr16
mov
shlb
push
push
inc
sbb
nop
mov
push
mov
aas
add
icebp
lret
cmp
in
pop
into
fists
and
push
mov
pop
imul
test
xor
jae
push
shrb
daa
sahf
push
pop
or
repnz
push
int
sti
jne
pop
es
inc
mov
es
es
and
cmp
jecxz
adc
stos
in
out
aaa
sbb
mov
push
or
xchg
in
ja
jl,pt
jmp
out
or
test
jno
movsb
fcoml
popf
shrl
cmpsl
ss
std
cwtl
imull
xchg
imulb
test
fiaddl
out
or
push
jae
aam
sbb
xchg
loope
xor
xor
out
loop
lock
pop
jbe
jnp
pop
stos
js
pop
roll
addr16
add
rcrl
out
leave
jmp
xorb
push
xor
mov
divb
movsb
cmpsb
fisubl
repz
in
push
xor
shlb
hlt
sbb
dec
fidivl
out
stc
pop
push
icebp
stos
inc
xchg
or
call
mov
int
mov
mov
sbb
cmpsb
mov
divl
les
ds
push
pop
in
cmc
in
imul
jne
jbe
sti
mov
mov
pop
je
shrb
fmul
das
or
outsl
dec
ret
pop
cmp
test
push
inc
lea
dec
inc
pop
mov
jno
mov
and
dec
hlt
idivl
ds
popf
daa
subb
cmp
xchg
jecxz
stos
nop
ret
sbb
mov
inc
inc
ror
jne
adc
push
and
and
inc
pop
test
sbb
testb
xchg
test
mov
dec
ss
jmp
jmp
mov
dec
sahf
imul
fsub
int
loope
dec
mov
fisttpll
jnp
test
test
insb
push
adc
pop
mov
in
xchg
cld
inc
call
push
xchg
cld
mov
xor
sahf
push
push
js
out
cmpsl
in
sub
cmp
out
xor
movsl
xor
mov
lds
je
in
dec
gs
ja
sub
sub
add
cmp
orl
popf
mov
xchg
ds
imul
xchg
andl
test
adc
xchg
les
pop
adc
lods
out
jg
sub
das
pop
dec
push
inc
repz
jns
mov
adc
mov
test
and
mov
not
pop
sub
xchg
add
sbb
lahf
test
negl
and
cld
xor
xor
cld
sub
dec
inc
mov
lcall
ret
divl
inc
loopne
sbb
cmp
popf
fs
out
push
iret
add
inc
or
movsl
fs
movsb
adc
and
jge
or
aad
mov
popa
sub
fadds
in
inc
add
jg
je
jl
imul
arpl
jp
push
ds
jae
adc
and
inc
mov
out
imul
push
jp
imul
dec
stos
lds
test
mov
and
cmp
add
jge
mov
and
push
loope
or
or
fistl
adc
jmp
sub
mov
add
jecxz
mov
cli
dec
add
jle
into
add
fstl
add
ss
pop
lcall
fistps
mul
es
push
add
cmp
mov
xchg
fnstsw
outsl
rcr
nop
dec
or
cltd
add
bound
pop
and
sub
bound
lods
add
daa
fiadds
mov
fdivr
xchg
or
push
mov
mov
pusha
push
dec
enter
lahf
rcll
nop
push
movlhps
jge
lods
inc
xor
jno
mov
fsin
dec
dec
lahf
addl
les
xor
stc
int3
jp
or
and
movsl
add
lock
xchg
out
mov
addl
mov
aas
jae
push
cmp
xchg
pop
movsb
movsb
rcll
dec
movsl
jg
adc
lods
and
arpl
scas
iretw
nop
idivb
insl
push
shlb
mov
xchg
ret
lea
push
shlb
sbb
push
nop
out
ds
pmaddwd
out
test
sti
subb
imul
movb
popl
inc
xor
add
addr16
in
js
push
ret
and
aas
enter
ja
sub
xchg
shrb
inc
add
xchg
mov
imul
jmp
or
mov
xor
cli
add
mov
shrb
inc
lods
out
add
outsl
cmpsl
ljmp
clts
mov
jmp
andl
test
and
aas
sti
lret
inc
pop
lods
mov
hlt
push
clc
out
jmp
in
mov
mov
mov
stc
and
lds
xor
arpl
lret
xchg
push
jns
fsub
mov
std
dec
mov
cmp
insb
js
lods
in
test
jp
pop
dec
arpl
call
jae
rcrl
cmp
pop
loop
push
or
mov
test
sbb
ja
outsb
int3
mov
sub
outsl
or
popa
cld
es
mov
cltd
mov
push
mov
push
add
sti
bound
xchg
dec
inc
add
xchg
fimull
xchg
pop
or
stc
jge
mov
cmp
stc
imull
dec
dec
mov
mov
jns
mov
push
lcall
fidivs
xorl
in
mov
movsb
sbb
jl
push
or
loop
iret
sbb
repnz
mov
das
push
push
lods
leave
or
cli
cs
imul
out
adc
notb
call
loope
ss
push
or
jge
in
insl
ret
gs
xchg
mov
cld
test
or
xchg
out
je
add
or
xlat
inc
out
addr16
fadds
and
inc
lea
cmp
in
dec
jmp
sbb
arpl
mov
popf
arpl
xor
ret
xor
inc
xchg
jne
into
clc
les
ljmp
lcall
cmp
cmpsl
sbb
pop
aas
push
mov
pop
mov
pop
mov
ds
loop
sahf
pushf
jns
mov
imul
push
out
or
inc
jb
addr16
loop
jecxz
sbb
xor
adc
sbb
mov
xchg
faddl
outsb
mov
adc
mov
loop
insb
lock
pop
das
push
dec
mov
jmp
lods
int
icebp
or
adc
xchg
and
pop
clc
and
xchg
sti
out
mov
icebp
hlt
or
add
cld
lret
repz
mov
or
add
cwtl
sarb
adc
jne
jnp
push
sbb
fsubrp
enter
repnz
dec
outsl
push
sbb
test
imul
outsb
cmc
andl
fwait
in
bound
xlat
push
mov
repnz
mov
in
jno
xor
in
cltd
shlb
lahf
inc
jmp
pop
xchg
fcmovnbe
in
adc
dec
add
inc
aaa
mov
cmp
popf
add
jns
jl
dec
fcomip
int
xor
adc
or
scas
int
aaa
dec
push
sub
shlb
js
addl
aad
clc
lcall
mov
push
lfs
es
test
shll
xor
or
shlb
movsl
add
jmp
nop
cld
sti
or
adc
outsb
pop
dec
adc
lods
std
xor
mov
lret
mov
lret
sub
xor
mov
setae
aam
adc
sub
cmpsl
cmpsb
aam
dec
das
in
lret
dec
dec
cmp
stos
sbb
in
cmp
sub
push
sarl
aam
sub
pop
inc
dec
jnp
inc
push
ret
clc
jmp
xor
mov
sub
mov
jle
out
mov
push
rcll
and
and
push
push
pop
push
inc
mov
sbb
cltd
jb
test
xchg
sub
pop
push
mov
movsl
mov
xchg
add
stc
pop
jge
rolb
push
insb
mov
inc
or
and
cmp
cld
mov
insb
push
gs
repnz
lods
imul
mov
adc
mov
or
inc
jge
stc
jecxz
cs
psadbw
sbb
lahf
cmp
mov
xchg
scas
dec
into
lods
push
icebp
pop
js
push
pusha
pop
sbbb
stos
lret
stos
je
out
lret
lds
push
xor
lcall
ret
pop
loop
or
mov
scas
fcomp
popf
sub
cli
mov
add
add
mov
or
jmp
outsb
inc
inc
jg
mov
out
adc
mov
mov
mov
jge
loop
je
lock
icebp
inc
outsl
in
pop
lret
inc
mov
cmp
push
stc
ja
fadd
mov
push
mov
dec
sbb
dec
mov
adc
lds
mov
lock
or
mov
imul
adc
sbb
push
outsl
sub
lcall
pop
std
stc
push
ja
stc
out
jo
aam
fsub
out
sbb
xchg
mov
or
adc
lsl
mov
outsb
pop
dec
jnp
out
jns
mov
xchg
mov
mov
iret
cmpsb
pusha
in
test
sub
out
add
pop
xchg
push
lea
mov
std
sbb
push
cmc
inc
movsb
pop
cld
lea
xchg
add
dec
pusha
test
ret
stc
ja
xchg
imul
mov
push
es
inc
sub
adc
adc
mov
mov
push
add
and
mov
clc
arpl
pop
cmpsl
lea
mov
cmp
cmp
add
rol
or
inc
cmpsb
push
pop
push
test
int3
leave
sub
dec
popa
inc
xor
enter
dec
ret
ja
xor
stc
scas
xchg
mov
pop
or
callw
jecxz
in
mov
pop
outsb
sbb
add
inc
pop
sbb
add
inc
sbb
sbb
mov
mov
mov
adcl
mov
or
or
jbe
inc
sub
lret
sbb
shlb
dec
ret
pop
lret
loop
addr16
mov
insb
mov
cmp
das
xchg
addl
push
shlb
xor
aas
dec
xchg
or
fwait
and
mov
xchg
mov
adc
lea
jmp
pop
aam
jnp
lret
adc
or
ja
stos
dec
mov
int
cmc
mov
in
push
or
sbb
sbb
dec
inc
cmp
loop
cmp
in
lods
je
rcl
sub
mov
mov
xor
jg
mov
rcll
and
sub
movsb
imul
repz
lods
mov
pop
adc
adc
fbld
stos
mov
push
xchg
push
push
jo
mov
push
insb
pop
sbb
fstl
jns
aaa
mov
or
ret
inc
jp
das
mov
shrb
jmp
pop
test
cs
adc
insl
mov
in
lret
jle
pop
dec
std
sarl
xchg
ret
cmp
or
loope,pn
add
mulb
es
fdiv
mov
inc
xchg
fimull
stos
mov
sub
push
inc
jno
or
pop
jnp
les
in
icebp
lea
push
push
xchg
adc
shrl
inc
lret
dec
lds
mov
mull
loopne
outsb
imul
inc
add
dec
add
ret
mov
mov
pusha
xor
cli
lea
in
movsl
sbb
int3
movsb
mov
mov
and
nop
pop
sub
cmp
fnstcw
mov
loop
std
push
loope
xchg
mov
movsb
lock
iret
pop
push
shr
lds
sbb
cmp
dec
inc
dec
mov
sbb
mov
sbb
fisttps
xor
bts
loop
adc
xchg
cs
das
xor
ror
lcall
cmpsb
jecxz
xchg
cmpsl
and
inc
mov
aaa
js
test
xchg
mov
hlt
pop
lods
sbb
xor
jno
arpl
sub
je
out
in
mov
mov
push
cwtl
movaps
ja
xor
xor
call
push
jecxz
lret
notl
fbstp
icebp
in
popf
movsl
sbb
stos
out
fwait
push
push
out
cmpsb
push
test
iret
and
lods
jns
mov
add
into
test
scas
xchg
fcompl
mov
jno
inc
jae
out
push
lods
out
repz
pop
push
sbb
fcomi
xor
push
iret
sahf
bound
test
stos
jb
fmuls
mov
or
inc
inc
sahf
aam
mov
pop
mov
mov
cmc
ret
lds
inc
push
mov
popa
fs
mov
fnstsw
push
jae
and
lcall
pusha
cmp
adc
mov
popf
ja
addr16
sbb
pop
add
push
lock
pop
xchg
test
push
push
out
add
and
xchg
sub
jb
push
nop
in
das
xchg
stos
sub
push
je
jl
adc
cwtl
adc
jnp
mov
cmp
sbb
inc
add
mov
cld
lock
popa
shrl
loope
inc
mov
test
push
mov
mov
cmpsl
ds
cmp
sbb
cmc
mov
jmp
push
mov
jbe
jo
sub
dec
fldt
adc
mov
sbb
adc
or
xchg
xchg
divb
fbstp
xor
inc
sti
fstpt
push
pop
fstpt
xchg
adc
ret
aaa
mov
cmpsb
popa
push
aas
imul
jl
pop
std
push
lahf
cmp
vpunpcklwd
ja
jo
pop
sub
sub
and
and
je
sbb
push
rcr
seta
or
push
sbb
lahf
hlt
and
adc
jo
push
mov
sarb
add
lods
xor
das
loop
fidivl
leave
xor
mov
xor
fisttpl
andb
xchg
mov
loop
rcll
enter
lods
pop
pop
mov
xor
inc
inc
daa
cmp
imul
and
dec
out
es
and
into
cld
sub
pushf
jge
stos
ljmp
sub
jecxz
loopne
enter
loope
adc
lcall
les
pop
fs
cmpsb
mov
push
dec
pop
sarb
push
xchg
addl
lret
pushf
push
cmp
mov
inc
inc
inc
in
es
cmp
je
or
aam
mov
xchg
das
sub
data16
cmpsl
jmp
or
cmp
lea
add
mov
std
xor
shl
push
mov
and
iret
mov
bound
xchg
dec
test
test
jecxz
mov
aam
lods
sbb
fsub
jno
xchg
ds
std
or
fwait
sarl
adc
outsb
mov
add
jmp
bnd
xor
push
inc
and
jb
jbe
pop
mov
mov
clc
fnsave
sub
jl
movsw
or
xor
mov
aam
mov
xchg
jmp
dec
enter
out
enter
rcl
sub
rorl
cltd
xor
add
xor
mov
push
xchg
push
in
jns
add
scas
in
push
jle
mov
ret
pop
mov
fwait
xchg
dec
je
mov
jmp
or
sbb
adc
ja
std
xchg
sub
push
add
bound
dec
pop
push
jae
arpl
jb
lcall
mov
mov
push
fdivrl
xlat
repnz
aaa
out
adc
add
xchg
xchg
daa
inc
pop
adc
in
daa
ret
mov
adc
and
adc
mov
xchg
xlat
inc
adc
adc
push
mov
xchg
xchg
imul
mov
or
sbb
loope
pop
adc
mov
and
dec
push
jge
pop
inc
push
jne
mov
clc
lahf
movsl
test
cs
mov
clc
arpl
hlt
push
pop
cmp
mov
nop
jp
or
xor
cwtl
dec
adc
inc
in
call
sbb
jge
lret
sbb
es
pop
add
push
jge
decb
sbb
xchg
popf
aad
aam
jbe
sbb
adc
std
adc
cmp
cli
xor
pop
andl
fldenv
insl
ret
or
insl
int
add
inc
loope
add
push
daa
lcall
pop
xchg
stos
push
mov
mov
mov
icebp
sub
out
sub
leave
dec
icebp
loopne
jae
jp
pop
icebp
push
arpl
dec
loopne
lods
or
adc
dec
mov
pop
jl
mov
xlat
cmpsl
xor
out
jo
xlat
popf
mov
call
loop
icebp
mov
push
pop
pop
jecxz
in
inc
adcb
or
and
rcrl
mov
inc
mov
xchg
icebp
jnp
sarl
mov
pop
add
bswap
incl
je
out
mov
test
repz
shll
repz
sti
outsb
pop
mov
and
mov
or
cwtl
pop
fiadds
mov
fbstp
stc
iret
std
add
mov
rorl
popa
xchg
sub
mov
imul
jbe
mov
jne
ds
mov
jb
jno
test
sbb
arpl
push
mov
jl
es
pop
gs
or
xor
xor
xlat
mov
add
pop
lods
sbb
dec
or
dec
loop
adc
and
clc
sbb
add
divb
push
jnp
movsb
push
loope
inc
mov
or
cltd
in
test
stos
jns
cmpb
and
jg
mov
xor
mov
add
nop
adc
adc
fadds
push
sub
clc
cmp
cmpb
shrb
mov
mov
ja
inc
dec
pop
notb
inc
sbb
outsl
adc
addr16
fcoml
pop
xor
mov
arpl
adc
fidivl
dec
adc
or
repnz
insb
ret
push
sar
sub
sbb
pop
data16
mov
dec
rolb
mov
imul
dec
dec
push
mov
jp
xchg
jae
cmp
pop
cmp
mov
mov
int3
lahf
in
xchg
mov
out
test
call
cmp
jnp
testb
push
adc
ljmp
sbb
imul
xchg
mov
or
xorl
or
adc
push
pop
xlat
sahf
inc
mov
push
dec
pop
and
cmp
mov
adcb
iret
cmp
data16
sbb
mov
push
movsl
es
sub
mov
shl
pop
xor
lds
xlat
jecxz
push
jmp
dec
mov
xor
cmp
es
mov
into
call
int
sbb
loopne
insl
xchg
jnp
or
shl
inc
loop
mov
cmp
daa
sub
mov
rorl
imul
dec
out
pop
jbe
dec
lods
loopne
mov
dec
mov
daa
lahf
push
int
mov
lods
xor
inc
rcr
mov
sub
in
inc
mov
clc
lahf
xchg
dec
jecxz
rcrl
jecxz
ret
test
mov
cld
stc
mov
dec
cmp
cmp
push
inc
pop
das
sub
add
mov
mov
ja
sahf
mov
sbb
pop
push
dec
dec
pop
xor
out
mov
out
cmp
and
xchg
je
push
push
int3
aas
mov
xor
mov
mov
add
insb
pop
scas
push
mov
bswap
push
or
pop
push
cmpsb
push
inc
clc
push
and
out
test
in
inc
mov
in
int3
xchg
push
xchg
adc
stos
sti
sbb
push
push
out
xor
nop
jne
mov
dec
in
ss
xchg
js
jns
cmp
ljmp
arpl
aam
sub
cli
iret
inc
into
xchg
repz
int3
dec
inc
pop
and
popa
ljmp
pop
fadds
ljmp
sbb
jmp
push
and
mov
add
pop
jb
bound
sub
mov
cs
add
mov
mov
jg
mov
aad
out
cmp
adc
stos
push
cwtl
lds
out
jae
outsl
jp
jnp
inc
adc
xor
mov
in
dec
pop
fdivl
jo
stc
mov
mov
test
inc
aad
push
scas
push
mov
cltd
lds
test
les
aaa
sub
pop
aad
scas
sub
jecxz
popa
cmc
inc
leave
sbb
pop
inc
aas
mov
ljmp
aas
push
xor
fcmove
inc
jle
test
incb
out
push
jae
mov
sbb
cmp
pop
mov
in
mov
mov
out
mov
sar
lea
pop
cwtl
in
rcrb
hlt
add
sbb
lea
add
lea
push
or
mov
cmp
cmp
clc
in
jb
daa
fldt
imul
cmp
popa
dec
call
cltd
repz
add
nop
push
fwait
jbe
lods
jmp
xorb
xchg
addr16
mov
stos
xchg
pusha
cmp
mov
imul
jbe
inc
outsb
loop
mov
add
fnstcw
popf
fisttpll
fimuls
cmc
pop
outsb
xchg
fstpl
loop
std
push
mov
shlb
call
test
repnz
jnp
rclb
sbbb
inc
insb
sub
fwait
fwait
out
ljmp
je
inc
into
mov
sub
and
lret
sbb
sbb
sbb
or
and
lcall
inc
pop
hlt
sub
or
and
xchg
xchg
aam
mov
leave
jmp
inc
arpl
shll
sti
push
dec
push
ret
lea
sbb
out
outsb
out
scas
adc
sbb
cmp
fs
jle
cmpb
loop
push
in
shrl
adc
iret
push
xlat
cmpl
pop
xchg
mov
xchg
fcoml
push
scas
scas
andb
ficoms
xor
jb
popa
cmp
push
xlat
adc
movsl
jae
add
push
jge
or
push
rolb
sbb
jno
rclb
ret
lret
stc
fsts
add
or
ret
dec
shlb
mov
repnz
push
sarb
das
dec
pop
sbb
fsubrs
cmpsl
pop
inc
jge
popf
sbbl
xor
adc
dec
xor
dec
jmp
push
mov
pop
call
out
mov
adc
nop
adc
xchg
mov
xor
push
int
xlat
lahf
and
push
sti
and
dec
jo
imull
movsl
aaa
cli
add
mov
cmpsl
repnz
fistpll
push
add
or
ss
mov
movsb
dec
dec
dec
cmp
cmp
lret
xchg
orb
adc
es
xor
js
rol
dec
daa
ret
mov
cmp
ret
adc
mov
pop
clc
fs
and
jb
int3
mov
nop
iret
aam
lods
push
xor
lock
push
mov
mov
pop
inc
pop
fmuls
adc
mov
pop
push
cwtl
push
lahf
test
xchg
stos
dec
test
in
mov
arpl
adc
sub
mov
mov
cmp
cli
popa
negl
mov
aam
test
dec
dec
ds
aas
sbb
add
je
lods
scas
cmp
inc
std
icebp
pop
xchg
push
std
lfs
clc
stc
dec
ljmp
and
outsl
mov
icebp
int
jp
add
sub
mov
pusha
stc
dec
dec
negl
in
push
or
pop
test
add
cmp
stc
add
add
mov
rclb
pavgw
inc
dec
sbb
push
les
and
add
or
pushl
dec
mov
pop
push
dec
push
stos
mov
and
mov
add
inc
ret
jb
inc
push
into
dec
daa
pop
cwtl
mov
jmp
jo
sbb
push
js
pop
movsl
lret
add
negb
popa
jns
or
fcmovb
rorl
test
jle
and
sbb
xchg
inc
daa
std
ret
sub
mov
imul
fdivs
je
jge
mov
lret
in
cmp
mov
sbb
mov
fidivs
out
sub
sub
pop
scas
ss
pop
sbb
cmc
push
xchg
pop
jno
xor
inc
adc
loop
and
pop
ljmp
pop
cmc
scas
push
loope
add
mov
add
dec
loope
out
dec
xor
stos
aad
lods
and
nop
mov
outsl
jmp
ljmp
add
lret
add
pop
fyl2x
xlat
cmp
lds
outsb
mov
jno
jg
and
or
mull
mov
imul
xor
adc
outsb
xchg
mov
shrl
out
mov
std
cmp
test
mov
mov
inc
sbbl
push
jo
rcll
mov
fwait
add
pop
outsb
mov
imul
addr16
ljmp
jo
test
shlb
mov
pop
mov
nopl
inc
inc
cmpsb
mov
sbb
dec
xchg
hlt
nop
or
test
fsubrl
add
iret
test
js
mov
nop
sub
jnp
xor
stos
rcl
fcmovb
mov
inc
fsubrp
pop
insl
inc
inc
xor
pop
jg
mov
and
js
xor
scas
dec
add
fmulp
das
into
ss
pop
stos
in
enter
lods
sahf
sub
daa
push
cmp
shll
dec
xor
mov
sub
out
adc
in
xchg
xor
adc
pop
movsl
sbb
in
xorb
in
into
jb
add
xchg
mov
xor
je
std
add
jnp
or
subl
popf
lock
cli
push
sub
aaa
jecxz
aad
inc
mov
imul
adc
sbb
add
ret
jnp
push
or
pop
and
jne
inc
mov
mov
lock
test
lcall
daa
push
push
jo
les
inc
or
jns
mov
sti
or
inc
pop
add
and
jo
int3
cld
mov
mov
and
jnp
imul
xchg
in
out
nop
add
mov
in
scas
lahf
jl
outsb
jp
aad
ss
movsl
insb
ret
divl
mov
push
mov
and
mov
inc
jmp
or
jmp
dec
jbe
mov
fisttpll
ja
loopw
std
jg
lods
push
mov
and
sti
or
push
xchg
mov
sbb
mov
jge
pushf
adc
jl
mov
inc
sbb
dec
ret
daa
orb
push
pushf
cmp
pop
adc
adc
loopne
add
sarl
xchg
push
lock
lea
inc
mov
adc
mov
adc
xchg
stos
fwait
add
jbe
ds
or
dec
fisttps
les
xchg
or
sbb
xchg
lods
scas
nop
mov
into
lahf
add
mov
add
xchg
out
repz
cmp
or
cmp
outsl
mov
icebp
fnsave
pop
test
out
aam
mov
dec
movsl
cmp
or
sub
out
adc
pop
xchg
sahf
mov
mov
xchg
pop
inc
inc
filds
mov
imul
cmp
aad
dec
push
test
test
insw
or
pop
add
aad
out
call
inc
add
into
cltd
inc
popa
loopne
bound
and
loopne
cmpsb
aad
push
inc
push
scas
sahf
bound
inc
and
test
in
aad
cmp
aas
mov
sub
call
push
adc
adc
push
xchg
add
xchg
int
mov
sub
fucom
sahf
insl
mov
sub
mov
pop
dec
and
add
jg
mov
mov
scas
pusha
out
mov
jle
out
scas
out
lea
xchg
jo
dec
scas
stc
insl
push
mov
cwtl
loopne
lret
and
adc
lea
outsl
test
jmp
pop
iret
jg
and
lret
std
popf
push
cs
cmp
mov
pushf
xchg
or
push
mov
call
jl
mov
pop
pop
aaa
mov
sbb
xchg
iret
push
lods
sub
test
sbbl
test
push
mov
cmp
sbb
adc
sub
fisttpll
pop
add
xor
aas
dec
inc
in
arpl
sbb
dec
scas
rcrl
cmp
ljmp
lods
cmp
sahf
jmp
add
add
insb
dec
inc
scas
sbb
xchg
jbe
imul
inc
pop
cmp
sub
xchg
jmpw
outsl
sub
add
push
sahf
gs
punpcklwd
lret
lock
int3
int3
jmp
jo
addr16
inc
and
fs
and
fwait
pop
and
daa
add
cwtl
nop
pop
cmpsl
sub
sub
iret
in
xor
js
mov
push
imul
and
pop
lods
jl
cmp
pop
jge
stos
mov
fcmovb
cmp
dec
aas
mov
ss
mov
pop
push
loope
adc
mov
and
and
pop
xchg
mov
jb
pushf
pop
adc
or
xchg
mov
and
mov
and
and
pushl
inc
out
jns
sub
nop
inc
repz
push
and
pop
and
cld
lret
jbe
lea
xchg
push
adc
jl
sub
movsl
sti
mov
mov
dec
vminps
nop
pop
sbb
mov
pop
subb
dec
in
or
fildll
ret
dec
and
aas
dec
inc
sub
orb
outsl
out
iret
add
out
sbb
push
repnz
out
adc
mov
pop
cmpl
mov
imul
rcrl
imul
into
xchg
jp
mov
popa
into
scas
inc
or
cli
imul
fistps
mov
and
das
or
push
push
jg
cs
dec
jns
dec
subl
sub
outsb
xlat
mov
adc
cld
push
lea
jg
fidivs
sbb
movsb
adc
in
outsb
stos
pop
out
inc
adc
shl
sub
decl
adc
cmp
sub
pusha
jmp
scas
or
mov
pmuludq
cmpsb
cmp
push
inc
sub
xor
cld
ja
cmp
or
imul
mov
cs
cmp
inc
fwait
sbb
test
fstps
mov
test
pop
ret
xchg
add
pop
mov
dec
jnp
mov
pop
cmp
inc
jne
lea
js
imul
pop
sub
push
sbb
sti
cmp
int
cmp
mov
fdivp
cli
xchg
in
push
push
push
lcall
mov
inc
lret
js
xor
andb
inc
stos
mov
sbb
pop
orb
mov
test
jo
cli
leave
int3
into
cmpsl
jge
mov
imul
aad
sbbl
jecxz
lock
sub
push
cwtl
arpl
mov
scas
mov
xchg
inc
repnz
out
cmp
push
push
mov
sub
cmpsl
or
fstpt
scas
jns
loop
xor
inc
xor
jne
loope
sahf
dec
int
mov
adc
push
popa
xlat
cwtl
mov
ss
fadd
cmp
fwait
pop
icebp
pop
movsb
jne
mov
pop
or
mov
loope
daa
les
lahf
icebp
leave
xor
inc
in
mov
pop
cmc
mov
lcall
mov
mov
push
xchg
gs
xchg
popf
iret
dec
push
data16
arpl
mov
xlat
xor
inc
adc
aaa
fimuls
sbb
jp
rorb
insb
inc
insb
push
inc
pop
pop
add
ss
xchg
fimull
into
aas
mov
pop
fwait
lds
add
xchg
mov
mov
sub
icebp
les
pop
les
mov
sub
mov
out
bswap
mov
jle
mov
popa
xorb
cmp
stc
mov
in
jg
add
push
inc
leave
out
cli
pusha
jmp
mov
inc
das
push
jne
rorb
push
or
or
lods
xor
scas
xchg
rclb
loopne
add
popf
orb
or
out
sti
push
dec
adc
jnp
imul
pop
js
dec
js
add
pop
inc
jns
mov
cmp
xchg
addr16
dec
pop
lock
push
fildl
sahf
or
jge
add
cmp
dec
inc
xlat
add
push
adc
fadd
pop
jbe
addr16
mov
push
inc
movsb
or
pop
dec
stc
xor
add
mov
pop
cmp
push
lret
push
pop
jg
cmpb
cmp
inc
hlt
adc
neg
mov
cmpl
xchg
and
mov
sub
outsb
cmpsl
xchg
adc
mov
push
add
out
mov
rcll
xor
lret
mov
sub
add
jge
and
inc
pop
jp
bnd
cmp
and
cmc
ljmp
sub
jne
sti
pusha
insl
dec
stos
or
rcrl
jecxz
jp
ret
loope
adc
rclb
push
fs
xchg
or
in
mov
ret
gs
test
imul
gs
daa
mov
push
or
into
mov
push
cli
lock
into
in
fwait
jns
add
int3
outsb
inc
mov
jmp
xchg
dec
dec
push
sub
pop
jmp
fs
gs
jp
mov
out
fldz
stos
jno
in
jbe
and
lret
jae
cmp
inc
nop
push
sbb
xchg
push
cmp
pop
nop
xor
stc
xor
stc
les
inc
enter
and
daa
lods
out
and
jns
scas
mov
int
sub
jne
xchg
jle
sbb
and
and
xor
inc
push
xor
stc
push
inc
mov
and
xchg
jecxz
jnp
fwait
push
mov
adc
xchg
test
sbbb
mov
mov
push
outsl
or
aas
movsb
cmp
lods
fwait
rep
xchg
xchg
ja
or
inc
mov
cmc
jns
das
pop
out
or
pushf
mov
cmpsb
pop
mov
jne
dec
jo
into
lahf
leave
inc
outsb
adc
mov
rcrl
test
mov
push
xchg
ds
dec
ficoml
ret
sub
popf
push
outsl
sbb
or
mov
mov
fisttpll
aam
hlt
pop
lret
jg
inc
add
ret
add
pop
sbbb
nop
dec
xor
inc
popa
bound
aas
cmpsl
and
push
add
push
add
ljmp
and
sbb
mov
cwtl
lea
div
cltd
aas
dec
mov
mov
mov
lock
repnz
fdivl
fsubrl
xor
fisubl
lahf
adc
pop
and
das
stos
mov
out
jb
push
ljmp
push
aam
daa
lahf
cmp
jnp
rdpmc
jge
sub
adc
out
pop
fmull
icebp
dec
cwtl
gs
std
or
adc
add
ss
jl
lods
add
jae
cmpb
test
call
cmp
jmp
mov
inc
fiadds
in
jle
jnp
jo
dec
push
lds
pushf
leave
mov
addr16
rcrb
ljmp
pop
mov
or
das
sub
outsl
mov
xchg
cmp
iret
testb
pop
pop
loopne
and
fistpll
add
inc
or
int3
cmpsb
pop
fdivl
xor
fldl
sub
sub
insl
mov
pop
cmpsb
in
pop
xor
jecxz
lea
dec
mov
xchg
cs
pop
cmp
mov
pop
ds
sub
sbb
rcl
dec
pop
xor
lret
nop
repz
testb
das
es
adc
inc
lods
lock
cmp
mov
mov
clc
inc
pop
add
out
fsts
xor
rorl
into
lahf
mov
push
sbb
movsl
outsl
insb
jnp
and
fsts
xchg
pop
cmp
push
insb
test
popa
jmp
push
lods
mov
movsb
mov
das
push
popa
clc
sbb
inc
or
adc
mov
jmp
or
icebp
or
push
mov
add
bound
jne
shlb
loope
popf
or
loop
mov
pop
adc
push
shl
pop
add
jl
sbb
xchg
inc
mov
into
daa
imulb
cmp
or
jne
lahf
shrl
inc
sbb
popl
mov
xor
cmpsb
stc
data16
xchg
ror
sub
adc
fimuls
in
cmp
push
push
pop
mov
dec
pop
push
cmpsb
adc
sub
add
les
xlat
sti
cmp
xor
mov
jmp
lods
mov
mov
inc
fs
scas
in
sub
push
push
mov
jnp
sti
jl
cmp
jg
xor
clc
jecxz
popf
outsl
js
mov
jb
cld
ret
and
sub
sub
mov
ficoms
std
out
mov
fcoml
mov
andb
into
xchg
inc
xchg
mov
mov
cmp
fwait
mov
add
repz
outsb
rcll
xchg
test
inc
xchg
es
xchg
stos
dec
ret
jne
mov
jle
ljmp
out
addr16
mov
push
clc
mov
arpl
sbb
js
mov
mov
lret
inc
cmp
loope
clc
cs
mov
addl
push
fcoml
mov
lods
cmp
in
test
fwait
test
sbb
scas
faddl
adc
scas
mov
and
inc
push
xlat
and
lret
mov
cltd
pop
daa
push
pop
lret
call
pop
mov
cmpsl
and
add
xchg
xchg
scas
inc
test
mov
sbb
test
push
shl
enter
xorl
enter
std
mov
xchg
inc
roll
add
in
insl
push
lret
mov
mov
fcoms
jle
xchg
leave
les
push
iret
push
mov
mov
pop
notb
pop
inc
sub
nop
popa
dec
mov
and
xchg
icebp
lcall
sti
or
outsb
ret
les
ljmp
scas
jecxz
popa
cli
xor
cmp
jge
cld
pop
and
mov
dec
mov
jbe
adc
mov
inc
ja
pop
lret
mov
repnz
jmp
push
bound
addr16
cld
adc
loopne
mov
mov
outsl
adc
and
push
adc
lods
mov
jmp
pop
rorb
mov
inc
test
ljmp
jg
stos
mov
out
insl
xor
pop
les
or
pop
xchg
rcll
stos
xor
sub
mov
mov
xchg
jo
dec
js
push
vmread
jge
cmp
fs
icebp
push
stos
and
cmp
mov
mov
aam
out
mov
outsb
mov
mov
lods
out
outsl
ljmp
and
sub
mov
pop
inc
cmp
push
pushf
inc
fwait
cmp
aaa
repz
sahf
mov
rcrl
icebp
mov
dec
dec
cmpsl
inc
sbb
adc
std
pop
shll
adc
xchg
faddl
in
pop
and
push
rcrb
divl
xor
mov
sbb
lahf
dec
adc
repnz
and
dec
and
mov
inc
push
adc
jns
lcall
cmpsb
pop
out
adc
out
inc
and
fisubrs
jmp
fnstsw
frstor
jae
movsl
inc
sbb
std
cmc
subl
jne
pop
inc
shll
fwait
pop
xchg
mov
push
inc
cli
push
adc
in
mov
xor
repnz
adc
nop
imul
sbbb
push
push
jno
outsb
mov
inc
clc
sbb
mov
jecxz
jbe
in
xor
sub
clc
push
outsb
mov
fcmovu
dec
pop
jle
fwait
dec
imulb
sub
cvttps2pi
cli
dec
shrb
cltd
and
mov
bound
cmp
xchg
arpl
stc
cmpsb
cmpsb
ja
add
jne
xchg
rcll
or
jne
ret
lahf
mov
addr16
xor
sbb
mov
leave
std
repz
cmp
push
inc
shll
mov
cmp
clc
xor
pop
out
add
push
and
ljmp
iret
cmc
and
pop
ds
out
cmc
lds
or
outsb
int
sbb
push
xchg
mov
add
pop
add
cwtl
push
jg
rol
notl
iret
dec
push
xor
imul
or
in
jno
in
bound
inc
adc
addr16
mov
fs
dec
xchg
les
aam
dec
lret
dec
arpl
jp
pop
rcrl
stc
pop
sbbl
add
mov
and
lea
jne
mov
mov
xchg
cmp
out
push
insb
test
mov
je
movsw
inc
fstp
mov
sub
daa
dec
mov
test
mov
xchg
daa
sbb
add
popa
pusha
mov
mov
adc
jge
inc
pop
pop
cs
pop
sub
aad
jmp
pop
ficoms
dec
ja
insb
jnp
dec
xor
fdivrs
sbb
dec
aad
xchg
mov
enter
notl
cltd
je
pop
jbe
mov
lcall
dec
xchg
stos
jecxz
push
ret
outsl
dec
push
hlt
xor
push
call
jb
or
push
daa
jg
cwtl
rcll
sub
add
push
mov
and
jp
inc
out
xchg
ljmp
lock
shlb
test
loope
into
sbb
bound
or
sbb
xchg
rcrb
dec
mov
leave
push
mov
xchg
or
jmp
sti
xchg
jne
mov
inc
xchg
insl
or
jne
xchg
stos
rcr
es
xor
xchg
and
add
cmpsw
in
cmp
mov
int3
pop
mov
inc
xor
outsb
mov
jbe
clc
loope
mov
popf
sub
rorb
scas
pop
push
dec
push
sub
jnp
int
fimuls
sbb
xchg
es
sarl
repz
inc
jo
popa
int
mov
dec
add
mov
arpl
dec
ret
mulb
xchg
sub
mov
xor
jle
pop
or
insb
jno
les
mov
pusha
push
pop
pop
sub
stc
mov
fistps
mov
test
jmp
aad
pop
push
xor
xor
cwtl
mov
jecxz
lock
popa
popf
outsb
popaw
push
or
leave
jle
mov
mov
dec
xchg
jno
xor
mov
ja
nop
mov
aam
mov
popa
mov
pop
mov
arpl
push
movsl
xorl
cmp
sub
repnz
cs
int3
in
das
je
inc
roll
hlt
mov
mov
js
pushf
jne
pop
inc
insl
loope
ss
sbb
mov
iret
push
push
aam
xchg
mov
cmp
loop,pt
mov
mov
inc
sahf
leave
or
xchg
call
adc
jg
pop
insb
xchg
inc
imul
dec
cmp
rcrb
pop
mov
and
std
jbe
jne
jle
inc
imul
ds
decl
out
repnz
mov
mov
fildl
mov
xor
sub
xor
cmp
sahf
push
fs
aad
test
sub
mov
orb
mov
out
rcll
clc
dec
orl
adc
andb
loop
xchg
jle
sbb
or
ja
dec
loop
les
shlb
icebp
mov
pop
pop
test
sbb
jnp
out
push
jg
stos
sbb
inc
pop
pushf
inc
mov
xchg
sbb
fcos
jmp
divl
inc
ret
pop
add
push
xor
push
sub
daa
pop
pop
mov
add
mov
dec
inc
mov
mov
xchg
ljmp
sbb
push
and
sub
nop
cld
cmp
icebp
jne
inc
popf
shlb
xor
push
sti
inc
mov
jae
push
movsl
pop
test
pop
dec
sbb
pusha
mov
add
jl
shlb
stos
mov
stos
sub
xchg
seto
rclb
dec
jb
test
pop
or
lret
mov
mov
cmpb
ficoms
xchg
or
sbb
inc
dec
pop
je
add
pop
mov
cmc
stc
mov
lret
jl
or
push
sbb
sub
and
adc
adc
scas
in
push
adc
adc
clc
nop
test
pop
xchg
fistpll
or
mov
push
stos
inc
pop
push
jle
fidivs
imul
adc
hlt
cltd
adc
xlat
cmp
jl
cmp
adc
xor
xchg
mov
sbb
pop
fildll
repnz
rcl
add
fidivrl
arpl
imulb
inc
xor
in
popa
fadds
push
stos
xor
sub
mov
popf
rorb
xor
lahf
mov
loope
hlt
cmp
xchg
sub
or
mov
out
les
cmp
repz
push
push
sbb
data16
repz
inc
dec
push
mov
ljmp
loope
out
cmp
push
pop
jp
shll
pop
mov
repnz
push
xor
shrb
or
xchg
or
mov
ret
add
outsb
push
test
cmpsb
stos
xchg
ss
lods
push
sbb
jae
test
inc
repnz
cmp
sbb
rcrb
leave
imul
in
xlat
push
mov
call
mov
movsl
imul
push
and
aaa
pusha
stc
mov
or
xchg
xor
jle
dec
call
xor
fwait
add
out
test
int
repnz
call
bound
in
xchg
or
xchg
pop
movsl
cmpb
inc
xor
les
iret
rol
mov
pop
popa
jmp
push
mov
mov
es
nop
ret
jg
fs
stc
xor
shll
mov
mov
aad
mov
aam
xor
jno
movsl
into
and
fisttps
dec
ja
adc
fwait
popa
lret
xchg
sub
gs
insl
imul
icebp
loop
cmp
add
pop
mov
scas
arpl
ret
push
dec
decl
repz
clc
call
das
push
mov
sub
lret
xchg
addr16
xchg
jae
pmulhw
dec
push
scas
mov
cwtl
push
dec
in
add
push
ljmp
ret
xlat
mov
sbb
mov
cmp
xchg
inc
daa
loope
pop
or
insl
es
movsl
xchg
jns
mov
or
jo
dec
mov
mov
ds
mov
repnz
pop
imul
or
sbb
and
pop
in
jmp
in
or
cmpsb
lret
sub
sarl
inc
je
jnp
sbb
addr16
sub
or
push
and
mov
cli
popa
nop
stos
ja
insl
lret
nop
push
xor
in
test
mov
in
movsb
push
fldl
mov
lock
mov
test
sub
leave
xchg
jno
mov
adc
or
iret
mov
dec
push
mov
xchg
pop
mov
loop
lahf
adc
or
test
sbb
or
loopne
add
lds
lods
aam
xor
fwait
cwtl
and
daa
sbb
scas
cmp
jmp
dec
push
push
xchg
push
dec
cmp
rcl
push
es
add
inc
js
test
cltd
in
mov
jle
push
jmp
mov
shrb
pop
push
xor
and
movsl
sbb
pop
daa
scas
dec
cwtd
out
in
fisttps
jae
bound
push
mov
mov
idivl
fildl
outsl
mov
mov
loopne
shl
out
push
fcmovnb
mov
arpl
xor
rol
and
loopne
xorl
mov
sbb
xor
lods
adcb
or
adc
dec
mov
aas
mov
inc
inc
sbb
out
add
mov
movsb
mov
xor
rcr
xchg
jecxz
adcl
mov
orl
inc
mov
sub
xchg
sbb
cmp
inc
add
test
sbb
lods
std
movsb
or
xor
mov
je
dec
cmp
xchg
push
dec
mov
mov
mov
add
pop
fsubrs
xor
xchg
lods
hlt
jge
push
add
icebp
mov
or
lock
mov
mov
xchg
sbb
cwtl
pop
xor
push
jae
inc
repz
sub
mov
or
adc
mov
xlat
xor
dec
testb
int
sub
jmp
mov
mov
fwait
stos
pop
add
jp
lret
insl
shl
repnz
cmp
mov
stos
fs
or
mul
fdivr
sub
cmp
aad
inc
jecxz
or
push
jmp
sub
js
xor
sub
dec
bnd
inc
shrb
inc
adc
aas
vpminsw
push
and
adc
dec
push
jecxz
scas
js
clc
fcoms
aam
pavgb
or
pop
imul
pop
or
jbe
and
movsl
shrl
leave
sbb
sub
orl
dec
movsb
faddl
rep
mov
clc
arpl
in
nop
pop
fisubs
or
das
dec
xchg
xor
pmulhuw
lret
lret
jle
lahf
pop
jg
lock
jge
cltd
test
sbb
cmovs
add
addb
nop
xchg
sarb
adc
iret
or
add
shlb
adc
test
int
imul
sub
rorb
mov
shrb
sub
mov
cli
pop
or
sar
fisttps
lds
notrack
add
lcall
popf
adc
repnz
cmpsb
sbb
mov
addr16
xchg
push
xchg
xchg
xchg
jne
into
add
adc
loope
cmp
cmp
sahf
add
xlat
pushf
or
repnz
test
pushf
repz
in
jmp
mov
das
mov
fildl
mov
add
push
insb
std
mulb
out
mov
aam
je
pop
xlat
mov
xchg
rorl
test
in
leave
sub
andl
mov
or
enter
pop
fs
movsl
add
push
jns
cmp
cli
cmp
mov
mov
or
fstpl
mov
sub
sbb
test
test
sbbb
jecxz
aad
push
mov
cld
outsb
add
ljmp
fstpl
mov
leave
jl
cmp
xchg
dec
shl
xchg
insb
pop
xor
inc
mov
insb
or
aaa
xchg
xor
subb
es
shlb
and
scas
pop
repnz
add
mov
add
faddl
fisubs
mov
jle
cmpsl
xchg
jmp
or
test
in
iret
push
cld
fisttpll
jecxz
xor
stos
mov
push
cltd
push
in
mov
jle
aaa
mov
pop
rcll
inc
in
jno
push
shll
lret
sbb
add
mov
xor
lock
cltd
dec
cmpsl
aad
rcrb
repnz
adc
lret
ljmp
mov
inc
stos
sbb
fwait
cmp
stc
add
ret
aam
jb
sub
call
mov
movsb
jg
jp
bound
jns
jl
push
loope
fstp
cld
and
pop
dec
adc
push
test
xor
in
jp
ss
mov
or
push
out
fisttpl
push
es
adc
lret
and
call
xchg
fldenv
loope
inc
jp
xor
pop
stos
js
aaa
adc
orl
and
pop
fwait
test
es
jns
jno
and
or
je
stos
in
lea
jns
push
lock
pop
fldenv
out
lea
inc
test
pop
add
pop
cmc
test
mov
sub
insb
and
cmpsl
adc
into
fnstcw
push
jle
lods
cli
imul
cs
stos
xor
pop
rorl
incl
mov
push
adc
pop
sahf
mov
cmpsl
movsl
pop
xor
outsb
cld
add
jmp
pop
dec
stos
stc
in
mov
sti
mov
into
xor
inc
mov
and
gs
pop
or
sti
mov
mov
mov
xchg
fdivr
shl
and
push
lea
sti
inc
sub
bound
shl
xor
mov
fists
push
lret
out
sbb
adc
jne
mov
sub
pop
jae
sub
shll
fbld
and
jns
fbld
pop
jo
pop
xchg
mov
mov
mov
xchg
int
mov
fimull
jmp
xchg
fdivs
call
scas
js
fisttpl
xchg
add
jbe
iret
ds
jno
mov
notl
aam
popa
mov
mov
mov
jg
shll
sub
outsb
add
sbb
dec
in
mov
ljmp
call
jge
outsl
jl
sub
rcrb
clc
sarl
sub
jns
int
push
test
lock
loope
daa
cmpsb
cmp
orl
lahf
shr
cmpb
sbb
inc
or
mov
sub
push
cmc
outsl
xorb
out
pop
mov
mov
mov
mov
push
pop
inc
mov
mov
movsl
mov
jns
sbb
push
pop
jle
mov
pop
fwait
add
aam
mov
or
push
lods
push
mov
pop
xchg
mov
lods
and
or
das
fidivrl
mov
jecxz
add
xchg
add
stos
out
icebp
pop
and
jb
add
repz
jl
xchg
xorl
fcmove
gs
xchg
pop
jb
cltd
push
jmp
inc
or
les
sub
jg
push
js
push
mov
lcall
mov
int
mov
out
daa
test
mov
int3
inc
lods
scas
push
cld
std
lcall
pusha
idiv
lods
enter
sbb
jl
in
or
pop
stos
push
movsl
mov
xor
shlb
dec
ret
insb
adc
push
in
inc
sahf
fisubrs
jns
push
shr
sub
jmp
or
jecxz
pop
insb
ljmp
cmp
les
xchg
lea
fimull
cmp
lcall
imul
cltd
sub
arpl
cmp
push
sub
sub
repnz
pop
int3
stc
out
sub
adc
pusha
mov
sub
push
out
mov
mov
xchg
lahf
popf
push
pop
or
or
add
mov
jmp
pop
pop
dec
daa
xchg
sub
add
and
jbe
lock
xchg
movsl
cmp
adc
cmpsb
xchg
push
fnstcw
fidivs
int3
dec
inc
out
rolb
mov
mov
pop
orb
jg
jle
test
insb
testl
jnp
jge
js
scas
movsb
push
cmovbe
lahf
out
adc
push
das
daa
lret
scas
cli
call
xchg
iret
xchg
sub
xchg
add
or
push
movsl
sub
loopne
inc
xchg
fdivl
rol
scas
mov
jno
arpl
jmp
mulb
test
inc
xchg
dec
hlt
mov
pop
int3
inc
sub
scas
mov
mov
fnstcw
fsubrs
loope
mov
popl
outsl
mov
or
subb
adc
adc
fs
cmp
ret
sub
fbstp
mov
mov
fisubs
scas
cmp
sbb
adc
jle
mov
out
outsl
int3
bound
mov
cli
mov
in
out
add
jge
ficompl
lds
scas
push
outsl
sbb
in
mov
dec
pop
push
push
push
fs
lcall
lcall
test
pop
pop
leave
into
mov
scas
sub
mov
out
loop
out
sbb
mov
addl
mov
xchg
push
ds
jp
pusha
clc
lret
in
in
push
pop
jae
mov
sub
hlt
jg
in
leave
jne
and
outsb
in
inc
dec
icebp
dec
add
mov
pop
cmc
cmp
push
dec
and
mov
hlt
dec
jb
cmpsl
adc
dec
dec
repnz
fsubr
repnz
xor
cli
loop
xor
pop
mov
test
pusha
sarb
stos
cwtl
ja
xor
dec
push
xchg
adc
ds
ljmp
negb
sub
das
dec
adc
jb
xor
xchg
nop
xchg
dec
xorb
and
mov
dec
jno
or
pop
adc
je
divb
fildl
add
jle
aas
push
fisubrl
out
xchg
nop
push
imulb
or
pop
movsb
pop
xchg
xor
int3
insb
repz
es
and
jmp
ror
subl
mov
xlat
lds
inc
pop
jmp
lds
jmp
mov
ret
or
dec
pop
jle
mov
pop
stos
jnp
imul
arpl
adc
cmpsb
ljmpw
fs
mov
insl
cmp
xor
xchg
nop
push
out
mov
bound
fxch
es
mov
adc
sbb
push
sub
lret
ficomps
push
pop
add
inc
pop
or
imulb
or
repz
pop
loope
mov
pop
inc
jno
add
mov
clc
adc
dec
or
loopne
mov
mov
cltd
or
inc
sbb
cmp
adc
jmp
mov
popf
mov
insl
jle
add
in
pop
mov
dec
push
or
xor
dec
sub
ds
mov
and
dec
push
out
mov
xor
inc
add
pop
test
mulb
sbb
fisttpll
inc
pop
add
hlt
packsswb
mov
jae
mov
jmp
jle
out
popf
pop
push
insl
add
lcall
and
push
mov
mov
fnstenv
push
mov
adc
xchg
outsb
and
ljmp
push
jbe
imul
mov
and
pop
push
mov
and
xchg
lea
mov
mov
or
jns
iret
mov
nop
sub
aam
fdivr
jg
fidivrs
xchg
scas
sahf
adc
or
and
int
rcrb
sbb
push
xchg
push
mov
test
jecxz
sbb
out
jbe
cmp
lahf
out
loop
sbb
and
insl
pop
jge
icebp
mov
rclb
xchg
mov
sub
jle
lock
and
lock
sub
dec
ret
and
std
add
shl
pop
lcall
fs
pop
mov
jae
adc
cltd
jge
inc
pop
ljmp
fmuls
mov
popa
les
or
push
pop
and
sub
adc
jmp
mov
mov
adc
cmpsb
ds
lods
jo
lea
inc
outsl
outsl
or
out
mov
and
inc
sti
dec
mov
std
and
fyl2x
sub
jbe,pt
or
int
in
jl
les
cwtl
xor
stc
clc
xorb
insl
je
jge
sub
pop
xchg
test
arpl
mov
pop
sub
xchg
xor
shll
cli
pop
and
mov
xchg
pop
xor
stos
bound
fs
sub
cld
cli
rcr
call
mov
cmc
je
ljmp
pop
mov
test
outsb
pop
xlat
in
sub
pop
ds
leave
jp
sub
in
mov
add
pusha
dec
lock
test
insb
scas
in
sub
je
pusha
clc
aas
and
pop
jbe
and
xchg
fldenv
push
mov
adcb
jne
sti
lret
sub
cli
ficoml
sub
xor
scas
mov
repz
push
mov
pop
xchg
sbb
sbb
sbbl
push
sub
add
lcall
xchg
divl
testb
sub
jg
and
aad
scas
fs
cli
scas
push
imul
incb
dec
sbb
jo
add
push
icebp
xchg
out
mov
mov
xor
and
xchg
xor
mov
mov
mov
push
fisttps
adc
lods
fwait
lret
cld
pushf
ss
and
call
lret
inc
jne
scas
xor
push
adc
pusha
adc
sub
xchg
inc
adc
xchg
mov
aaa
enter
insl
jo
and
std
inc
int3
fsubp
and
jne
clc
fldcw
aad
aam
dec
outsb
lods
fildl
pop
test
xchg
in
test
or
xchg
or
lret
jecxz
repz
sbb
scas
sub
in
decl
stos
cmovne
lahf
std
push
aas
lcall
out
inc
jbe
mov
int
cmp
clc
repz
cli
aaa
mov
cmp
ffreep
mov
js
sub
jecxz
or
sti
dec
les
mov
xchg
pop
sti
hlt
fidivrl
xor
xchg
inc
sahf
sub
dec
inc
push
sub
xor
sbb
ret
mov
into
ds
insb
and
dec
aam
push
cwtl
arpl
adc
loop
mov
cltd
pop
sahf
xchg
scas
xchg
dec
jns
std
xchg
push
jge
xchg
mov
aam
pop
mov
xchg
jge
ret
insl
mov
loopne
mov
push
xchg
mov
pop
push
and
mov
xor
jbe
andb
flds
pop
mov
adcl
dec
roll
pop
jbe
pop
jns
jle
sub
jp
imul
push
stc
in
pushf
movsb
sbb
adc
jae
mov
or
ds
push
mov
dec
ret
pushf
xchg
push
das
xor
enter
mov
pop
dec
dec
leave
in
push
call
jl
pusha
xchg
xchg
aam
inc
test
testl
and
add
pop
test
sbb
leave
test
sbb
mov
aaa
push
and
and
and
cmpsl
imul
sbb
push
sub
dec
lret
mov
or
dec
xchg
mov
adc
and
call
pop
sbb
fldenv
outsl
jae
int
dec
mov
ja
lods
push
sub
negb
shlb
jb
bound
lret
fisubs
sbb
pop
pop
jg
xchg
sbb
ffree
sahf
xlat
push
imul
movsl
adc
inc
mov
xor
mov
jae
jae
adc
sahf
xor
push
inc
cmp
fistl
cs
out
xchg
sbb
adc
mov
imul
std
inc
test
xor
mov
pop
divb
push
push
xchg
int
mov
add
imul
adc
xchg
jno
bnd
icebp
fmuls
jnp
adc
mov
jle
add
xor
or
std
add
pop
jo
cmp
out
imul
jmp
enter
xor
mov
cmp
sub
mov
jbe
mov
shll
pop
pop
clc
arpl
dec
xchg
sbb
inc
xor
clc
xchg
sbb
sub
sbb
pop
push
xchg
lea
jnp
outsl
popa
push
mov
pop
fisubl
xchg
dec
iret
sub
pop
sbb
mov
xor
xchg
incb
xor
mov
rcr
mov
push
icebp
push
cmp
mull
shll
call
push
mov
cmp
cli
or
add
data16
pop
lahf
fs
adc
add
jmp
pop
sti
sub
lret
clc
shlb
push
dec
mov
push
test
dec
lds
in
std
fstpt
or
fdiv
jno
dec
cmp
sub
fdivrl
mov
fbstp
jmp
addr16
cltd
adc
fs
sub
adc
cmp
sbb
mov
shl
call
mov
imul
mov
mov
divb
in
xchg
xor
stos
add
mov
dec
ja
xchg
in
icebp
inc
xor
xchg
inc
and
mov
inc
into
mov
ja
add
jg
mov
lds
lret
pop
sub
cmc
mov
lahf
adc
xchg
stos
xor
mov
xor
stos
int
jae
fwait
imul
dec
enter
imul
adc
repnz
jne
outsl
mov
add
rol
jl
jl
test
or
mov
xor
dec
fnsave
push
inc
bound
add
add
stc
cmp
jnp
push
add
pop
jae
lcall
int3
rcl
cli
jno
repnz
cmp
sbb
jmp
decb
out
rcrl
mov
out
fnsave
mov
cpuid
bound
pop
data16
add
mov
push
xchg
subl
in
sub
inc
xchg
mov
aam
dec
in
jle
xchg
mov
pushf
xchg
sbbl
call
or
mov
jbe
lcall
adc
jb
popf
and
aaa
shrb
sub
mov
dec
cmpsb
dec
cmp
xchg
mov
push
jle
test
or
rcr
adc
lret
pop
scas
jmp
gs
fists
stc
jmp
dec
fs
pop
mov
xor
or
in
sub
notb
mov
lret
dec
or
cmpl
sub
cmp
jbe
out
jb
repz
sub
xchg
hlt
stos
sahf
and
ss
enter
in
cmp
xchg
jge
jae
cmp
inc
pop
xchg
lds
decb
and
scas
out
add
pushf
mov
fisttpll
in
shrl
dec
lods
or
add
xlat
or
inc
push
sub
ficomps
sub
loope
xor
mov
lea
pop
ja
xor
xchg
sti
adc
xchg
ss
mov
in
add
dec
scas
mov
testl
pop
xchg
cltd
test
jp
ret
jns
sub
jmp
dec
aam
mov
xor
or
mov
pop
and
cmpsb
lret
nop
notl
cltd
and
push
xorl
data16
pusha
push
add
bound
cltd
aam
push
std
xchg
cmp
movsb
xchg
push
dec
lods
adc
mov
rorl
cmp
mov
popa
test
loop
pop
pop
adc
xchg
dec
cmpsb
ret
fwait
mov
mov
loop
xchg
nop
andb
fstpl
outsb
mov
dec
or
gs
sbb
sbb
cmp
pop
xchg
jne
ja
sub
and
in
xchg
movsb
fsubs
pop
addr16
cmp
loop
push
in
aam
dec
stc
fidivs
test
or
popa
add
pop
and
push
movsb
lock
iret
sub
xor
lret
ret
pop
push
inc
pop
inc
sub
jecxz
add
sub
sbb
ljmp
mov
cmp
xor
pusha
inc
ret
cmpsl
sbb
jae
je
xchg
pop
jnp
fisttpl
mov
xchg
fnstcw
dec
mov
or
inc
aad
in
push
xchg
out
mov
ss
pop
jp
pop
xor
mov
xchg
dec
shll
adcl
popa
lret
sarb
xchg
xchg
mov
push
inc
ret
fldenv
jne
fmull
leave
dec
xchg
xor
xchg
insl
xor
mov
test
mov
jmp
push
mov
mov
dec
lods
mov
mov
push
xor
enter
in
outsl
add
mov
scas
popf
xor
pop
lods
dec
fldl
pusha
mov
loope
repz
jge
push
push
sbb
xchg
and
jle
pop
mov
push
and
add
xchg
addr16
push
fists
outsl
mov
mull
cmp
adc
orl
scas
jecxz
je
inc
pop
mov
mov
xchg
test
and
fdivs
insb
mov
dec
pop
test
sub
push
hlt
xor
nop
pop
popa
xchg
jp
jo
cwtl
or
repnz
test
and
mov
into
sbb
nop
test
divb
or
and
mov
scas
or
xchg
call
mov
or
push
add
push
mov
dec
cmp
rcr
add
hlt
out
arpl
jle
int3
hlt
xchg
inc
mov
jo
inc
mov
mov
mov
lret
mov
adc
mov
ss
jmp
lret
aad
flds
dec
add
into
enter
clc
push
fisubs
push
jb
push
add
inc
out
fbstp
mov
jns
lcall
mov
movsl
popa
cmpsl
mov
sti
mov
lock
dec
xchg
or
xchg
mov
jmp
cmp
or
adc
dec
xor
lcall
aas
sbbl
stc
push
ret
xor
lods
xchg
fcmovb
ret
xchg
push
adc
mov
sbb
xchg
mov
xchg
and
jecxz
and
insb
sbb
dec
dec
pop
fmuls
add
inc
scas
ja
lahf
cmc
sbb
jge
out
push
push
movsl
add
mov
call
inc
pop
xchg
mov
mov
xchg
add
test
dec
xor
push
test
movsb
or
pop
xchg
ficoml
stos
mov
dec
sbb
jo
inc
add
iret
mov
sub
fcoml
clc
aad
into
stc
les
stos
jo
cmp
cmp
subb
fdivs
loope
cmc
push
insl
aam
cmp
outsl
sbb
fimuls
int3
arpl
xchg
in
mov
or
pop
fwait
jge
incl
dec
mov
out
mov
and
add
or
cmp
adc
add
cmpsb
xchg
in
and
out
movsl
mov
mov
jl
stc
mov
mov
ret
fldl
pusha
xlat
out
push
dec
push
mov
sub
sbb
pop
ss
add
push
mov
jno
test
pop
enter
jle
adc
stos
xchg
rcrl
xor
test
pop
inc
inc
es
loope
pop
sti
pop
mov
xor
fsubl
inc
ds
xchg
daa
and
sbb
cmp
push
xchg
mov
pop
inc
call
iret
jo
mov
xchg
mov
insb
int3
out
popa
pop
dec
fiaddl
push
pop
enter
popa
in
or
loop
cmc
jecxz
add
pop
push
adc
add
dec
stos
ror
pop
push
gs
mov
lcall
inc
sub
es
and
gs
test
mov
nop
pop
aad
addps
or
cs
cmp
mov
inc
fs
cmp
pop
or
icebp
sub
fcomps
jl
test
cmpsb
mov
into
stos
addr16
xor
test
adc
movsb
out
xor
icebp
in
adc
inc
testb
cmp
cmp
cmp
sub
test
jb
dec
push
aaa
in
and
ja
mov
inc
cwtl
mov
mov
xor
or
clc
jle
mov
fisubrl
add
lods
ja
loopne
mov
push
dec
cmpsb
inc
sub
aaa
dec
cmp
sub
neg
lods
and
adc
fldl
gs
lea
clc
sub
mov
scas
icebp
mov
std
mov
xlat
push
xlat
cmpsb
ljmp
fidivrl
cltd
push
mov
add
loope
mov
inc
outsb
adc
call
lahf
xchg
push
scas
in
scas
and
add
loopne
in
mov
and
clc
and
sub
outsl
or
js
xor
pop
ds
mov
test
in
pop
in
ss
pop
out
lret
daa
add
notl
test
movsb
and
out
aas
das
notl
dec
jne
dec
pop
mov
rcrl
dec
cmp
loop
daa
lcall
push
jle
testl
fnstenv
push
std
or
cmp
cld
add
data16
push
mov
lret
push
push
or
and
pop
test
sbb
decl
gs
cmc
repnz
mov
sub
fmuls
mov
sbb
pop
adc
hlt
pop
fadds
mov
dec
dec
test
push
rorl
and
push
or
mov
mov
dec
push
adc
fidivl
stc
sbb
stos
sbb
pop
iret
inc
xor
mov
jmp
add
mov
inc
dec
lret
leave
cwtl
inc
pop
fiaddl
subl
mov
cmp
aam
bound
inc
jle
enter
and
cltd
scas
xchg
adc
dec
test
sbb
cmp
xchg
xchg
movsl
inc
xor
push
or
mov
mov
and
in
inc
mov
ja
sub
and
cmp
dec
imul
sub
adc
cmpsb
aas
negl
divl
mov
jle
gs
out
out
cwtl
push
subb
mov
dec
inc
pop
mov
cld
ja
lods
clc
mov
mov
push
jo
ret
stos
out
xchg
inc
movsb
shlb
inc
ficomps
aam
adc
cwtl
or
dec
inc
into
mov
add
cmp
and
int3
data16
movsl
outsb
mov
jo
pop
pop
fcmovb
movsl
daa
mov
outsb
or
popa
das
pushf
ja
pop
js
aam
push
dec
les
push
call
xor
jl
ficompl
repz
lret
and
addl
inc
jmp
mov
inc
cmp
pop
scas
xor
mov
jae
jp
push
cmp
fnstenv
in
sub
outsb
add
stc
arpl
adc
jo
inc
inc
sub
shll
jb
lds
jns
add
mov
psrlq
jle
arpl
das
add
rolb
xlat
out
jmp
jecxz
add
jge
mov
dec
iret
test
dec
cmpsl
mov
mov
aad
addr16
je
inc
pop
jbe
pop
cld
and
push
push
mov
test
fmull
ds
clc
jbe
jecxz
cmp
sub
inc
mov
clc
xlat
pushl
cmpl
lds
fidivs
bound
das
out
pop
ret
pushf
mov
sti
mov
cmpsl
add
jmp
cmc
ljmp
arpl
or
adc
nop
mov
pop
inc
or
xor
dec
inc
pop
inc
sti
es
out
xor
aas
out
loopne
sub
mov
mov
imul
sti
pushf
leave
fisubs
mov
std
out
cmp
or
in
aaa
mov
pusha
bndmov
cmp
cmp
lods
les
into
add
test
pop
out
pop
push
or
addl
int3
and
or
sub
out
xchg
inc
add
shll
dec
dec
aam
jge
add
pop
cld
xchg
jecxz
sahf
fcompl
pop
or
lcall
loopne
push
gs
pop
ljmp
or
sahf
subb
shll
aas
cmp
mov
testl
stos
ja
movsb
test
sbb
lret
insl
pop
add
mov
fstpt
iret
jp
mov
hlt
jno
js
shlb
jge
jnp
fld
scas
xor
inc
cmp
mulb
pop
push
mov
jb
xlat
leave
sub
ss
in
mov
sti
movsb
xchg
jmp
sub
sbb
out
lods
mov
cs
inc
pusha
jno
mov
dec
dec
xchg
and
test
imul
mov
lcall
pop
test
add
loop
pop
push
or
sub
cmpsl
ret
insl
mov
pop
cmp
dec
cmp
stos
insl
lcall
xchg
push
enter
push
mov
sub
inc
xor
hlt
push
fistps
cwtl
sub
bnd
repnz
jge
mov
inc
push
clc
cmp
xchg
mov
ret
jle
dec
sbb
pusha
outsb
in
movsb
mov
mov
push
cmp
dec
lock
xor
ja
sub
sar
mov
adc
mov
mov
lret
popa
sub
sub
std
in
fcom
outsl
rolb
pop
repnz
mov
rorl
mov
or
scas
jbe
or
es
addr16
inc
ret
in
cs
xchg
std
lods
mov
ret
inc
test
push
popa
sub
inc
scas
scas
fsubrs
scas
test
mov
jno
test
mov
outsl
je
push
mov
mov
es
sub
xor
pop
sti
dec
imul
sub
adcb
arpl
adc
push
push
push
enter
in
jns
or
push
repnz
loopne
xchg
xorl
mov
mov
daa
inc
mov
mov
cmc
repz
push
enter
pop
mov
stos
push
inc
test
mov
mov
lds
cld
dec
sub
aad
jp
lret
adc
jmp
stc
add
and
add
stos
pop
and
dec
es
xchg
idivb
and
xchg
repz
xchg
mov
lcall
popf
js
pop
and
fidivrs
dec
leave
mov
enter
out
push
sbb
sarb
fldl
jae
popa
xchg
loope
mov
cmp
dec
mov
mov
cmpsb
mov
sbb
mov
jmp
push
cmpsb
dec
fmuls
lods
hlt
popa
jne
mov
je
lock
cmp
in
pop
das
aaa
int
imulb
lea
fwait
xchg
outsl
pushl
add
test
push
insl
or
inc
dec
shrl
inc
pop
rcll
mov
xchg
aas
mov
inc
fstpt
jl
popa
push
std
xlat
mov
arpl
sbb
push
outsl
and
cmp
dec
idivl
hlt
dec
call
mov
nop
add
sub
mov
xchg
movl
iret
mov
icebp
outsl
mov
rol
adc
je
pop
fldl2e
test
in
ljmp
xchg
adc
mov
jl,pt
xchg
int
add
loop
gs
lock
inc
inc
cmp
xor
or
in
out
dec
push
in
loope
mov
mov
cltd
mov
dec
mov
adc
fadd
jmp
cltd
jne
jp
push
sbb
je
movsl
mov
xor
popf
jae
std
es
lcall
movsb
cmp
xor
bnd
cltd
mov
and
rcrb
adc
in
inc
inc
daa
in
gs
out
jns
xchg
out
scas
mov
xchg
jecxz
sub
push
jne
add
call
mov
adc
rcll
push
imul
les
ret
add
adc
adc
jne
imul
and
mov
and
dec
xor
das
fldt
xchg
sub
cmp
push
sub
leave
cmc
loope
into
xchg
sbb
stos
icebp
loope
imul
cs
pop
ljmp
in
or
mov
mov
cmp
enter
mov
out
in
shlb
pushf
lret
bound
dec
dec
pop
fcomps
add
cmp
jl
mov
mov
cmpsb
insl
imul
jle
pusha
mov
xchg
shll
fcomi
out
xchg
adc
lods
push
mov
sub
sub
fsubl
pop
sbb
mov
xor
and
or
and
loop
mov
jmp
push
jmp
or
jne
sbb
pop
add
cmp
sbb
fcomp
movsb
pop
or
outsb
sub
adc
mov
adc
push
pop
js
and
shrb
pop
xchg
testb
lods
inc
inc
push
iret
mov
lahf
dec
nop
inc
fidivrs
roll
leave
loopne
add
ds
in
out
fnsave
aam
adc
lods
call
movsl
in
xor
ret
or
xchg
clc
cmpl
push
mov
repnz
scas
sub
aaa
cmp
out
xchg
out
inc
dec
popf
jg
pmaddwd
data16
add
aam
jge
mov
dec
adc
xor
inc
mov
loop
sub
sbb
data16
mov
hlt
lret
mov
arpl
pop
les
stos
into
clc
movsl
inc
pushf
int
sbb
and
dec
adc
push
loopne
push
sahf
or
push
add
inc
popf
adc
imul
cwtl
icebp
test
cmpb
or
les
sub
dec
add
and
mov
lcall
repnz
ret
ficoms
inc
dec
and
cs
scas
dec
mov
jle
std
pop
sbb
push
in
aaa
mov
jne
mov
cmpsl
int3
xlat
mov
cli
fsubl
mov
mov
mov
jne
sbb
clc
mov
cmp
xor
ficoms
aas
call
push
mov
push
add
mov
inc
ficompl
jbe
mov
aad
mov
in
xlat
andl
inc
xor
int3
cmp
jp
mov
movsb
mov
mov
sbb
insb
mull
mov
lahf
rcll
xor
testb
stos
mov
push
movsb
cmc
arpl
cwtl
add
mov
aad
je
lahf
lcall
pop
idivl
arpl
push
jae
out
mov
push
inc
inc
lahf
cli
add
pop
pop
jnp
test
mov
subl
clc
add
or
mov
jae
mov
jmp
push
cmpl
loop
mov
subb
fprem
inc
movsl
popf
add
lods
call
fwait
out
adc
test
test
jo
je
pop
sub
push
gs
fs
mov
mov
ja
cwtl
daa
rolb
xor
mov
adc
pop
inc
in
pushf
out
sahf
insl
cmp
imul
sbb
icebp
push
xchg
aas
jae
push
stos
test
int3
or
popa
scas
mov
mov
dec
cmp
and
pop
shr
mov
dec
adc
sub
or
fstp
dec
sti
out
inc
das
push
imul
jno
sub
mov
arpl
cmpsl
out
mov
clc
mov
xchg
jg
adc
out
xchg
inc
test
aam
fs
xchg
in
jmp
clc
imul
pop
bound
fstpt
or
lcall
and
adc
push
iret
imul
xchg
mov
cli
adc
repz
scas
sbb
push
divl
adc
sbb
dec
add
sbb
lods
in
cmp
popa
cmp
push
sbb
lods
lock
scas
sbb
cmpsl
mov
out
test
addr16
ss
loope
sbb
lods
and
jne
clc
inc
jl
fistpl
pop
jns
in
and
std
orps
int3
mov
or
push
jl
imul
ss
rolb
lods
pop
jnp
stos
inc
rcr
loop
ja
fwait
jns
push
insl
stos
and
xor
arpl
inc
sbb
cmp
push
aam
inc
mov
gs
jmp
ljmp
push
lds
lret
pop
mov
mov
xor
loope
adc
dec
int
adc
outsl
sub
cmp
xor
fidivrl
inc
es
mov
mov
mov
xchg
cmp
imul
cmp
sbb
les
adc
dec
jb
xor
xchg
cwtl
push
cli
movb
cmp
dec
xor
xorl
sbb
push
sbb
sub
icebp
adcl
jg
push
pop
sub
and
mov
aam
cmpsl
and
pop
lret
mov
rorb
mulb
bound
dec
in
out
push
jmp
push
pop
mov
jle
sti
leave
cltd
lods
subl
sarb
inc
jge
rcrb
lods
sbb
and
jg
lods
iret
fs
lods
cmp
xor
lcall
icebp
bound
mov
xchg
push
jecxz
mov
mov
pop
pop
stos
mov
xor
sahf
pushf
xchg
es
int
stc
out
push
sub
test
cltd
push
pushf
les
test
int
mov
pop
jb
dec
insl
dec
sbb
inc
out
or
testl
lahf
scas
adc
add
jle
data16
sub
or
shll
dec
andb
hlt
call
es
iret
sub
jg
push
push
inc
shl
cs
cmp
es
repz
push
bound
and
sub
add
adc
add
cs
jae
mov
clc
cltd
adc
fisubl
jns
jle
xorb
roll
jns
inc
in
mov
andl
icebp
and
out
fsts
xchg
push
loopne
mov
hlt
jp
loopne,pt
jo
xlat
push
cmp
movsl
push
leave
dec
and
or
jle
ss
xor
mov
jp
mov
fs
xchg
bnd
mov
cli
adc
cmp
out
xadd
or
dec
pop
mov
xorl
and
cmpsl
les
xchg
icebp
cs
es
pusha
or
ret
popf
je
shlb
dec
movsl
inc
out
or
jns
fcomps
jo
mov
mov
mov
sub
and
mov
xor
cmp
fwait
dec
push
xor
fwait
leave
insl
xchg
test
inc
fadd
and
arpl
jecxz
mov
xchg
add
fdivl
xchg
movsb
push
jg
mov
test
push
lds
lret
cmp
lods
lahf
outsl
jle
aam
movsl
mov
imul
adc
pop
mov
iret
adc
lcall
in
sub
decl
push
int3
add
pop
adc
push
out
iret
lret
insb
jl
in
xor
loope
jl
cmp
fnstcw
jns
ss
add
insl
cmp
and
incl
dec
repnz
popf
dec
or
push
pop
out
sub
jle
xchg
out
repnz
sbb
fs
adc
jns
je
mov
hlt
sub
mov
push
pop
pushf
mov
cs
dec
cmpsb
add
or
xor
or
loope
sbb
outsl
dec
fdiv
xchg
xlat
ds
mov
and
shrl
xor
das
jp
shlb
aas
or
int
icebp
xchg
cmc
push
cmp
mov
cmp
jmp
bound
in
mov
out
push
xchg
daa
lcall
leave
lods
in
cmpsl
push
mov
mov
es
je
pop
inc
xchg
and
mov
das
test
xchg
cld
test
or
add
or
cmp
loop
cmp
pop
add
or
sbb
jg
dec
pushl
and
in
in
mov
jnp
inc
stos
jle
pop
push
or
mov
push
clc
xor
cmc
lahf
lcall
mov
adc
es
fwait
pop
jl
into
test
or
cmp
mov
sbb
pop
cltd
adc
mov
mov
xor
ja
mov
cmp
sbbl
adc
cld
push
sub
ror
xor
testb
iret
outsl
jle
in
out
sbb
scas
outsb
dec
inc
dec
mov
pusha
les
daa
add
lock
das
inc
pop
dec
repnz
cmp
dec
mov
mov
xchg
xchg
cwtl
and
mov
stos
pushf
das
cmpsb
ret
cmc
adc
mov
lods
inc
scas
loope
xchg
xchg
and
add
idivl
xor
lcall
scas
lea
lds
fists
lds
sbb
in
lcall
test
jge
jecxz
lods
aam
vshufps
jno
push
ljmp
or
sbb
inc
sbb
add
mov
push
mov
mov
call
inc
mov
daa
ljmp
inc
fs
mov
mov
cld
lret
or
sbb
lahf
xchg
iret
add
pop
mov
test
lea
or
jns
cltd
pushl
push
or
adc
xchg
pushf
shl
push
scas
je
inc
inc
std
call
lcall
inc
lret
enter
lcall
fimull
scas
or
data16
test
es
pop
add
outsl
cmp
nop
popa
pushf
imul
popf
xchg
xor
jmp
mov
outsb
pop
std
loope
cmc
cmp
ficompl
pop
testl
cltd
mull
sahf
fcom
mov
addr16
pop
xor
rolb
or
cmc
movsb
mov
xchg
push
adc
cmp
add
lcall
mov
lea
into
shrl
imul
subl
jno
dec
mov
push
dec
jmp
adc
movsb
cltd
lahf
mov
insb
jg
adc
jne
adc
sub
out
mov
cmp
fwait
inc
testb
xor
jne
enter
dec
js
fidivrs
stos
adc
sbb
mov
pop
jnp
movsl
decb
fisubl
outsb
push
and
ffreep
test
pslld
lcall
scas
rorl
mov
leave
sbb
enter
gs
aas
rorl
call
loope
jne
add
pop
mov
xchg
adc
decl
push
lock
mov
and
adc
dec
mov
cmpl
push
movsb
sub
les
rorl
mov
pop
je
cwtl
sbb
pop
dec
fcmove
rorb
xchg
mov
push
stos
dec
scas
out
push
in
lea
mov
lret
fwait
mov
jg
jo
shlb
and
sub
inc
dec
lret
cwtl
aas
stos
mov
test
arpl
ret
in
mov
push
xlat
or
aaa
mov
push
jb
cmc
out
sbbl
xchg
sub
shlb
das
adc
push
mov
cld
mov
sub
outsl
dec
mov
cs
in
adcl
aaa
cmp
fstl
dec
into
stos
sbb
pop
xchg
cmpsl
mov
lret
dec
subb
clc
adcl
fsts
xchg
enter
inc
xchg
jo
sbb
ss
ror
xor
test
mov
inc
or
sbb
hlt
lret
fs
hlt
std
adc
xor
inc
scas
xor
jnp
push
mov
add
mov
imulb
mov
jge
out
sub
nop
push
jmp
fs
mov
fwait
cmp
sub
jno
or
sahf
pop
cmp
pushf
cmc
and
jo
or
sbb
xor
fcomps
lret
popf
pop
jns
test
dec
shll
sbb
mov
pusha
jo
das
mov
loop
rcrl
xchg
call
cmc
imul
pop
cmp
mov
arpl
imul
mov
stos
ja
sahf
sbbb
popf
mov
mov
mov
test
std
in
and
cmp
push
das
mov
add
mov
aad
ret
loopne
insl
scas
xchg
add
jmp
aad
push
inc
sti
mov
jno
add
imull
sub
iret
xchg
lods
xchg
rcrl
cwtl
movsl
jmp
sub
jae
mov
sbb
jmp
sahf
test
pop
jno
add
jecxz
jmp
xor
mov
aam
data16
pusha
xor
test
and
repz
jns
jno
mov
pop
xchg
popa
arpl
das
repz
loope
popf
scas
adc
test
loopne
pop
cld
push
inc
mov
xor
movsb
and
lcall
test
insl
adc
xchg
jbe
sub
cmp
sbb
fdivrl
fadds
mov
mov
cli
fisubrs
push
pushf
rol
mov
mov
sbb
dec
mov
iret
mov
add
add
mov
xor
xchg
inc
xorl
js
ret
mov
je
adcb
mov
add
mov
mov
repz
mov
roll
arpl
loope
mov
iret
pusha
fisubrl
mov
sub
jbe
repnz
inc
setnp
movsl
mov
xchg
xor
xor
dec
mov
cmpsl
jb
inc
adc
push
cmpsl
ljmp
push
cmp
std
loop
popl
xchg
call
xchg
jg
imul
xchg
fnstsw
dec
dec
inc
out
iret
ja
sbb
lahf
in
xchg
push
scas
xor
gs
jle
bound
pop
mov
cmp
pop
mov
aam
jp
lods
and
ljmp
divb
push
sub
mov
mov
xchg
dec
xchg
sahf
mov
in
fistps
jg
fs
add
ret
movsl
popa
into
inc
in
test
sub
sbb
out
inc
repnz
or
adc
fimull
adc
daa
scas
xor
fs
cld
repnz
rcrl
lcall
aam
movsb
imulb
jl
enter
sub
fwait
sub
pop
cmp
mov
mov
pop
mov
mov
dec
je
jne
pop
loope
into
pop
mov
mov
cmp
jo
das
mov
pop
pushf
mov
cmp
or
mov
data16
mov
jo
xchg
testl
ja
fs
jae
and
or
outsl
mov
fucomp
dec
sti
dec
or
nop
cmp
sar
ds
out
xchg
mov
mov
pop
dec
and
adc
and
dec
call
mov
out
lods
pop
cmpsl
enter
mov
jae
aam
sbb
out
mov
sub
jle
mov
scas
subb
sbb
pop
push
stos
outsl
xchg
mov
sbb
xchg
sub
push
icebp
mov
pop
ret
fisttpll
cmp
lods
jmp
xchg
adc
out
sbb
inc
popa
xchg
bound
inc
add
lret
cmp
inc
ffree
mov
xor
xchg
sub
fs
xchg
mov
imul
mov
push
ljmp
imul
in
xor
insb
pop
pop
push
insl
icebp
hlt
adc
mov
mov
mov
iret
push
stos
jg
xorl
sub
insb
vandnps
fstpl
adc
sbb
shlb
mov
rolb
fildl
scas
inc
out
adc
adc
or
and
cmp
data16
pop
leave
shlb
xor
mov
cli
jns
xor
rclb
mov
out
in
sbbb
fdivrl
mov
add
dec
addr16
js
movsl
lods
dec
xchg
pop
out
leave
sti
bound
xor
scas
jecxz
popf
fnsave
cmpsb
fnstsw
mov
mov
ror
add
and
imul
sub
cmp
lret
dec
xchg
add
mov
jne
adc
mov
lods
lahf
outsl
mov
daa
mov
shll
push
mov
ret
pop
sub
iret
sub
stc
mov
add
jae
jecxz
mov
xchg
inc
mov
xor
inc
inc
cmc
icebp
jno
sarl
call
mov
push
aad
mov
aaa
add
test
les
cwtl
cld
mov
pop
push
sub
mov
fs
xchg
cmpsb
repnz
inc
pop
ljmp
or
insb
adc
andl
mov
mov
mov
fdivrp
movsb
ds
xor
lret
push
fcomip
mov
cmpsb
jnp
or
push
repnz
rol
sbb
xchg
jns
cmc
fnstenv
js
orl
jl
fstpt
dec
test
lods
inc
popf
hlt
sbb
jno
ret
dec
push
fdiv
call
push
xor
add
cmp
test
mov
and
sub
add
push
pop
mov
insl
sub
push
pushf
jnp
jmp
or
dec
ret
inc
inc
pop
jb
fwait
and
pusha
xchg
add
push
jb
mov
push
pusha
jmp
jl
cmc
fiadds
outsb
aam
inc
in
cs
mov
lea
jae
mov
aaa
mov
aad
or
jp
dec
leave
incb
arpl
mov
cmpsl
imull
mov
xchg
rcll
das
aad
fidivs
int
pop
sub
mov
mov
push
addb
out
and
adc
fnstcw
sub
lret
pop
sub
setnp
flds
pop
adc
jo
mov
in
lea
or
mov
jmp
and
sbb
repz
pop
mov
mov
pop
jmp
xchg
mov
daa
gs
mov
dec
xchg
adc
inc
add
sub
aam
dec
mov
cltd
or
mov
rorb
cwtl
cmpsl
lods
mov
or
nop
mov
adc
outsb
je
ljmp
lahf
lds
ret
nop
lcall
xchg
test
mov
in
insb
add
jae
aaa
pop
jnp
cmp
adc
ret
pusha
jmp
pop
dec
aas
movsb
setge
loopne
lcall
mov
jnp,pn
mov
jns
xchg
cltd
xchg
or
ja
out
mov
ret
shrl
xor
pop
out
fimuls
cmp
test
xor
aas
lock
lahf
or
add
push
sbb
inc
pop
push
pop
or
dec
mov
dec
bound
pop
push
mov
mov
shrl
stos
sub
cltd
pop
adc
mov
pop
lret
dec
adc
sub
cmp
sbb
add
shl
cltd
inc
ret
popa
mov
mov
out
sbb
into
mov
insl
dec
lcall
cs
adc
rorb
insb
in
inc
push
mov
adc
lret
pop
addr16
ja
adc
mull
in
aad
push
xchg
rolb
pop
stc
out
test
xchg
jge
or
fucomi
fbstp
jl
loopne
jge
mov
cmpsb
leave
adc
mov
outsb
or
inc
lods
sbb
mov
shl
imul
aaa
test
fwait
xor
scas
sub
fwait
into
int
sbb
dec
pop
movb
mov
mov
jg
pop
push
pop
bsr
test
pop
inc
or
stos
mov
es
mov
sahf
ds
roll
cmp
mov
mov
icebp
inc
sarl
jle
sbb
and
sbb
shr
inc
mov
outsb
sub
test
cmp
gs
mov
mov
and
inc
scas
cltd
mov
dec
inc
cmp
loopne
jae
repnz
mov
mov
jnp
cltd
enter
std
and
dec
cmp
shrb
lods
pop
daa
mov
inc
lea
mov
sbb
daa
in
aam
adc
fimuls
mov
dec
mov
mov
jno
daa
xchg
xchg
or
jns
lea
adc
and
adc
sbb
xchg
xorb
cwtl
dec
push
pusha
mov
cltd
in
ficoms
xor
pop
cmp
outsb
bound
push
xchg
icebp
xchg
lahf
adc
ja
insb
test
insl
lea
gs
add
sub
ss
inc
lret
aad
pop
loopne
sub
aas
fdivr
cmp
out
adc
pop
xchg
ret
test
pop
inc
mov
fistps
iret
pop
dec
dec
mov
add
bswap
inc
cwtl
jmp
int
inc
ficoml
pop
mov
xor
push
xor
cmp
dec
xor
ljmp
hlt
lret
js
sbb
sahf
adc
mov
xor
mov
in
enter
fistl
sti
xchg
fwait
pop
cmpsl
fdivr
inc
dec
mov
and
cmp
enter
push
mov
xabort
cmc
hlt
push
aam
lcall
jne
sub
in
xor
cmp
shlb
sub
mov
and
mov
xchg
lahf
mov
dec
ret
imul
and
add
push
or
mov
or
and
pop
xchg
js
pop
dec
push
inc
sbb
hlt
sub
xchg
loope
mov
into
mov
lods
adc
mov
or
popa
mov
mov
test
xorb
mov
gs
adc
inc
xor
inc
jecxz
cli
stos
push
loopne
pop
mov
pushf
sahf
add
push
jbe
out
push
repnz
inc
dec
adc
and
roll
pop
inc
add
sahf
mov
inc
xor
pop
in
stos
mull
pop
shrl
sbb
mov
scas
pop
inc
leave
cli
pushf
mov
cmp
mov
enter
lcall
leave
jp
les
jb
mov
xor
and
sbb
jecxz
xchg
cmp
fcompl
sahf
xchg
jnp
cmp
lret
pop
popa
std
push
leave
pop
je
pop
and
jecxz
jmp
push
or
xchg
lea
cmpsl
dec
imul
aaa
mov
fs
adc
push
in
mov
mov
lds
or
repnz
pop
mov
inc
adc
filds
stc
jb
addr16
das
inc
nop
enter
daa
ljmp
ret
scas
jg
test
nop
jae
or
shlb
out
roll
rcll
insl
dec
push
mov
fcompl
pop
mov
loope
test
repz
pop
mov
cltd
pop
lcall
jne
cmp
out
nop
xchg
xor
mov
mov
mov
leave
inc
jb
cmp
pop
jg
sbb
push
adc
mov
add
jmp
lods
ficompl
repnz
adc
xor
inc
or
mov
xchg
or
push
movsl
fdivl
into
xor
mov
push
inc
sub
and
mov
repz
mov
mov
cmp
push
je
or
bound
mov
push
lods
xor
cmpsb
sbb
ret
mov
inc
mov
pusha
adc
mov
mov
ljmp
xchg
cmp
push
pop
add
dec
xor
orb
inc
lret
and
dec
pusha
sahf
dec
aaa
enter
lds
inc
orb
mov
das
xor
mov
stos
mov
dec
mov
jmp
outsb
ljmp
jp
ret
ss
push
gs
sbb
leave
nop
dec
mov
clc
push
fmuls
or
mov
sub
jecxz
scas
hlt
sbb
rcll
stc
fisttpll
in
xchg
mov
in
std
xor
adc
mov
pusha
cmp
adc
sub
sbb
cmp
fmul
add
inc
pop
faddl
mov
js
scas
mov
mov
scas
cwtl
scas
cmpsb
xor
daa
arpl
mov
mov
push
sub
addr16
shll
mov
data16
mov
test
or
cmpsl
data16
sti
xchg
fstpt
or
in
push
xor
add
adc
in
incl
or
inc
jg
xor
jbe
clc
repnz
jno
rol
and
mov
and
loop
call
movsl
test
out
jmp
dec
cmp
lea
aad
xor
test
rclb
lock
ss
imul
and
dec
or
lret
into
cwtl
popf
lret
ret
lret
in
lods
mov
dec
sarb
mov
into
xchg
inc
scas
sbb
shl
mov
sbb
xor
xor
scas
loope
stos
add
sub
add
cltd
les
roll
mov
add
sbbl
roll
inc
pop
dec
es
mov
mov
add
rorb
das
fcoms
xor
dec
pop
fldt
lret
pop
sbb
ret
clc
mov
call
and
insl
cmp
add
cltd
mov
mov
test
cmp
loop
ret
xor
xchg
mov
into
mov
push
push
mov
ja
cltd
xchg
aad
pusha
mov
jge
push
inc
ja
scas
mov
push
aam
cli
pushf
mov
xchg
int3
cmp
out
pop
cli
fs
xchg
push
mov
mov
jg
pop
mov
xor
jb
or
aad
fimull
mov
push
and
jbe
lods
push
mov
jb
jo
inc
in
dec
leave
aaa
insl
adc
and
and
mov
pop
loop
mov
test
movsb
dec
in
ja
ret
mov
dec
jno
or
sub
inc
das
arpl
jp
xor
pushf
jg
mov
test
pop
add
pop
lea
aad
rcrb
roll
js
jmp
hlt
daa
lahf
testl
sub
jecxz
orb
in
mov
sbb
sub
lods
loopne
jb
mov
mov
lods
xchg
dec
fldcw
add
mov
sbb
repz
or
arpl
dec
jae
or
roll
push
pop
inc
jle
clc
in
inc
ss
jg
pop
aas
nop
xchg
jl
pop
inc
sub
cmp
sbb
adc
push
nop
sub
rorb
mov
pop
mov
add
push
stos
clc
in
int3
mov
aaa
stos
add
push
ret
dec
fwait
dec
pop
je
xor
nop
fstp
or
stos
sbb
jb
mov
add
fstpt
int3
dec
rol
pop
dec
rclb
add
xchg
sbb
or
daa
iret
mov
add
sub
xor
cmc
mov
mov
mov
aaa
shlb
lea
pop
cmpb
in
stc
and
cmp
push
sbb
into
out
push
cmp
mov
jo
jne
mov
fs
add
sarl
insl
stos
sub
push
or
lods
cmc
sbb
pop
andl
sbb
lds
add
ret
sbb
and
or
add
fs
sbb
push
ds
dec
dec
ret
sahf
mov
roll
pop
sbb
xchg
scas
mov
dec
in
mov
xchg
ss
pop
lret
out
ret
mov
aas
xchg
sbb
inc
sbb
mov
cli
and
add
push
in
out
faddp
ss
sub
rcrb
inc
std
or
filds
in
sub
mov
adc
addb
xchg
insl
dec
dec
mov
push
inc
icebp
mov
das
mov
in
fldcw
or
lret
dec
out
xchg
fldl
iret
outsb
sub
test
pusha
ret
push
fwait
xchg
inc
imul
fistps
sbb
mov
mov
imul
adc
sbb
mov
sub
push
aas
cltd
in
dec
jns
cli
pop
xor
leave
imul
in
repnz
lret
sbb
data16
and
sbb
test
xlat
jne
lahf
dec
out
jb
test
jle
push
pop
arpl
insl
cmpsb
push
aas
xor
push
adc
shlb
push
fwait
push
push
pop
jle
pop
insl
insl
push
cmp
or
imul
inc
mov
pop
push
cmp
imul
addl
cmpsl
or
lods
test
mov
dec
xor
xchg
mov
xor
call
dec
nop
add
xchg
movsb
mov
xlat
clc
stos
inc
push
scas
ret
mov
lds
ret
fcompl
mov
std
dec
test
mov
dec
xchg
or
or
je
inc
dec
mov
and
fnsave
out
pop
cli
inc
sti
or
xor
and
and
sbb
inc
xor
fnstenv
mov
adc
int
lock
cmpb
loopne
lea
mov
dec
inc
xor
shlb
daa
rorl
fimull
or
in
jge
sarl
mov
test
aam
mov
into
popf
bound
pop
in
lahf
mov
nop
add
gs
jnp
xchg
sti
popf
pop
xor
push
daa
lds
lcall
jmp
cmc
aas
fcmovb
je
mov
pop
xchg
je
jae
sti
sbb
mov
out
in
imul
adc
test
in
xlat
flds
cltd
lods
inc
mov
sbb
popa
pop
lock
cmp
fiaddl
je
dec
pop
inc
popf
jns
xchg
mov
mov
cltd
mov
push
sbb
xchg
cltd
pushf
jg
add
pop
adc
pushf
repnz
dec
cli
cmp
push
pop
jp
adc
lds
sbb
loop
mov
cmp
and
shl
push
dec
into
loopne
sbb
mov
dec
lahf
outsb
leave
xor
es
lds
push
dec
mov
sub
jne
push
push
adc
je
and
lahf
jo
xchg
fnstsw
or
jmp
repz
sbb
push
sbb
aam
push
push
push
ret
hlt
xor
aas
dec
out
mov
cmpsb
imul
jnp
gs
cli
jne
add
and
scas
push
lret
xor
js
pop
xchg
push
les
mov
mov
push
jl
je
xor
out
es
cmpsl
push
rolb
jb
pop
pop
dec
and
sub
leave
adc
ret
orb
inc
scas
jl
movsl
aad
test
bndstx
in
roll
lcall
fs
sub
mov
jecxz
aad
iret
inc
es
or
pop
ret
stc
fcmovne
fidivs
jp
cmp
popf
and
add
popa
sub
insl
daa
popf
test
xchg
jecxz
popf
ret
mov
lds
adc
loopne
rorb
or
inc
test
add
xor
adc
lret
cwtl
ret
mov
xor
jl
jae
fsts
add
mov
repz
pop
ja
push
lcall
lea
xchg
sub
je
jbe
stos
cmpsb
xor
push
mulb
xor
and
repnz
and
push
add
psubw
and
or
ret
xor
subl
jp
pushf
dec
cld
adc
or
xlat
clc
push
xchg
repnz
cwtl
nop
and
dec
jnp
xchg
add
mov
inc
dec
add
cmpsb
dec
sub
pushf
daa
repz
mov
icebp
test
sub
mov
fldenv
adc
pop
fcmovnbe
lds
xchg
or
in
fucom
leave
aaa
and
inc
mov
into
adc
push
popf
ljmp
inc
dec
gs
pop
xlat
dec
mov
cmp
js
inc
in
push
xor
jge
pop
lret
jb
pop
sarl
adc
lds
ds
jns
test
sub
cmp
in
rcrb
cs
dec
xor
mov
mov
xchg
out
movsb
xor
jne
push
sbbl
sub
fisttpll
dec
mov
cs
test
daa
cmp
cmp
and
dec
cmp
jecxz
sahf
dec
add
dec
mov
jecxz
jp
sbb
into
jmp
push
jp
cmpsb
stos
enter
lahf
enter
sub
cmc
pop
scas
mov
fisubl
jae
fucomip
dec
bound
in
pop
mov
fcmovu
push
lods
cmpsb
xchg
cltd
jle
rorl
movsb
mov
push
and
add
add
cli
fcoms
rcl
repz
sub
mov
pop
dec
jle
lret
push
inc
aaa
leave
cmpsb
aaa
scas
aaa
fisubl
sbb
repz
and
cmpsb
in
adc
add
jbe
push
sub
ja
jle
out
pop
add
pop
ret
mov
les
in
mov
imul
lods
lahf
adc
bound
mov
mov
or
add
in
or
pop
leave
and
insl
fiaddl
loop
add
push
aas
lahf
repz
divl
sbb
cld
and
sub
and
sub
test
mov
add
cwtl
repnz
add
add
das
dec
inc
xor
mov
xor
dec
push
outsb
sarl
clc
outsb
mov
mov
pop
push
andb
cli
in
sub
daa
paddw
jns
das
add
or
imul
movsb
xor
outsb
fcoml
popf
inc
add
dec
xor
dec
and
stc
call
cmpb
add
mov
lods
flds
popf
mov
sbb
fdivrl
cltd
pop
ljmp
pop
xchg
dec
lods
and
repnz
mov
sub
sbb
adc
xchg
test
stos
xchg
ljmp
push
popa
pop
adcl
jb
popa
add
and
mov
loopne
mov
clc
stos
or
jns
mov
lret
arpl
dec
loop
shlb
rorl
jb
sarb
jp
enter
ficoml
divl
push
mov
testb
jmp
pop
mov
xchg
and
in
aad
mov
push
daa
sub
repnz
mov
xchg
mov
dec
cmp
add
xor
inc
lea
mov
mov
frstor
shlb
lahf
push
addl
dec
fs
push
outsl
push
test
pop
jecxz
xchg
enter
sbb
leave
insb
or
push
push
or
insb
lret
sub
xchg
adc
or
enter
out
fdiv
mov
enter
rolb
mov
in
push
mov
cmp
add
orl
push
mov
mov
xchg
adc
or
hlt
out
cmc
js
sti
sbb
and
inc
rcrl
mov
dec
loop
scas
sahf
data16
pop
cmp
and
test
loopne
xlat
mov
cmp
lahf
aam
dec
fisttpll
std
mov
mov
push
xchg
mov
sub
push
xor
xlat
cmp
stos
outsl
aam
lods
xchg
pop
and
xchg
mov
nop
dec
test
insl
cmp
mov
sahf
mov
lock
scas
orb
loop
add
adc
or
scas
or
cmp
pop
scas
stos
lret
or
xlat
add
xlat
fbld
scas
fists
fcomi
mov
xor
jecxz
iret
and
adc
js
inc
stos
add
cmp
test
sar
hlt
lret
imul
ds
out
lret
jmp
in
and
adc
mov
sbb
mov
pop
scas
aaa
into
lahf
outsl
xlat
lea
mov
push
enter
daa
roll
lcall
idivb
mov
test
lret
mov
enter
mov
je
or
gs
add
mov
pop
cmc
out
jmp
push
leave
xchg
lea
cwtl
dec
mov
push
jg
jl
push
insb
adc
mov
dec
and
lret
inc
bound
xchg
sbb
mov
jae
sbb
hlt
jecxz
pop
xchg
mov
popf
popl
std
dec
pop
sbb
sub
insl
xor
sub
mov
xchg
mov
testb
mov
push
mov
jns
sbb
subl
iret
repz
fcoms
into
subl
push
imul
sbb
push
js
test
outsb
lock
pop
das
aam
cmp
adcb
pop
int3
mov
or
xchg
loope
push
les
shr
imul
fmull
fists
jmp
subl
call
insl
stos
inc
in
xorb
into
cltd
adc
mov
push
test
pop
mov
and
mov
stos
fdivs
cmc
inc
testb
icebp
xchg
xchg
jb
push
push
aam
push
sti
fwait
or
inc
insl
or
ret
cs
sarb
add
jmp
bound
sub
sbb
in
xor
mov
faddl
jl
aam
pop
mov
out
jge
push
stos
mov
pop
sbb
and
das
cli
scas
int3
sbb
push
push
std
mov
sbb
cltd
push
jb
sbb
ljmp
fstl
jle
cmc
mov
sub
repz
icebp
pusha
push
or
addr16
and
mov
dec
je
and
movsb
lahf
out
stos
arpl
loop
cmc
push
mov
lock
fs
int3
jmp
xchg
sarl
push
subl
xor
pop
sahf
pop
rcrl
sbb
sbb
jg
dec
loopne
push
fsts
add
dec
xchg
jp
sbb
loopne
jge
mov
imul
das
insb
imul
mov
ss
push
imul
mov
test
in
mov
inc
lea
mov
ret
fisubrl
sti
fsubrs
dec
and
mov
jl,pn
cmc
mov
push
xchg
lods
call
pop
pop
sbb
lods
dec
dec
insb
inc
inc
push
mov
jne
test
xor
jle
mov
das
out
aaa
sub
mov
adcb
mov
ja
out
jmp
jns
adc
fmull
xor
xchg
add
cltd
ret
push
jo
add
icebp
jns
dec
flds
push
dec
cmp
movsb
stos
push
in
std
fwait
jns
int
inc
pop
sbbl
test
xchg
or
pushf
adc
enter
decb
jb
scas
cmpsb
outsl
outsb
ljmp
fs
lock
pusha
stos
rclb
mov
sub
push
out
rcr
dec
test
cli
loope
and
inc
adc
out
shlb
scas
xchg
pop
cmp
cmp
add
dec
aam
rcll
sbb
in
cli
test
adc
outsb
pop
adc
out
xchg
mov
out
das
mov
lock
jp
test
push
notl
int
cmpsl
cmpsb
xchg
dec
jno
fs
or
xor
jne
xor
enter
inc
push
outsb
xchg
clc
lcall
mov
push
jnp
xor
sbb
imul
out
out
loope
sbb
cltd
add
ret
outsb
insb
aas
movsb
nop
xchg
out
mov
cmp
xchg
mov
popf
loop
adc
sbb
pop
ja
adc
or
dec
lods
add
lds
dec
adc
or
cmp
and
pop
stos
cmc
fsubl
dec
adc
stos
sub
inc
adc
daa
adc
sbb
inc
jp
lahf
pop
pop
scas
lea
imul
jle
es
mov
shll
je
mov
int
cmp
test
add
pushw
dec
inc
repnz
push
jecxz
aas
xchg
fisubs
bound
scas
mov
dec
mov
pop
xchg
jle
xor
jne
pop
adc
and
mov
xor
jge
jle
cmpsb
sub
ret
adc
mov
cmp
push
fidivrl
cmpsl
js
fwait
jo
test
sub
subb
imul
inc
lock
popf
stc
or
cltd
cld
imul
insb
jo
daa
dec
xlat
and
sub
in
mov
mov
pusha
enter
pop
push
daa
in
int3
int3
fimull
sti
add
sbb
cmpsw
nop
loopne
in
lock
add
jge
pop
andb
scas
fnstsw
testl
mov
dec
outsl
inc
mov
mov
lcall
lcall
aam
int3
mov
jns
mov
sbb
std
mov
cld
jecxz
and
in
mov
rol
arpl
sub
xchg
mov
imul
mov
pusha
ds
sbb
sub
dec
add
jmp
or
or
pop
sbb
pop
cmp
ret
js
jecxz
cmpsl
xchg
sbb
dec
nop
sahf
aas
or
and
les
jmp
imul
data16
movsb
int3
jmp
jge
mov
mov
xchg
xor
pushf
jne
jne
movsb
repz
or
push
daa
sub
bound
call
movsl
sub
cli
and
iret
cmc
and
adc
mov
testl
inc
sub
jno
push
fistps
jmp
nop
sahf
pushf
popa
lcall
or
and
and
or
daa
stc
jmp
scas
das
orl
mov
add
push
and
xchg
cmpsb
push
mov
call
rclb
scas
faddl
sar
cmpsl
and
call
das
xor
subb
int
lods
sub
mov
cwtl
xor
pushf
or
xor
and
push
scas
push
pop
pop
mov
rorb
push
clc
dec
pop
rorl
jecxz
pushf
mov
and
cmp
mov
stos
mov
xchg
idivb
aaa
mov
loopne
ficoml
stos
loope
test
rcrb
outsb
mov
ret
xor
idiv
mov
out
sbb
cwtl
and
cld
push
stc
sti
cmp
xorl
or
push
fildll
incb
lods
test
cltd
sub
lea
icebp
adc
sub
lcall
fcompl
sub
pop
outsl
sbb
sbb
cmc
pop
loopne
popa
xchg
paddw
jecxz
loope
inc
scas
aam
push
jmp
stos
mov
mov
xchg
out
into
andb
les
rorl
pop
enter
scas
loopne
mov
shr
pop
xlat
xor
and
xlat
fcoms
jne
xchg
push
out
stos
test
popa
dec
jp
ffree
hlt
addl
add
mov
lret
in
aam
mov
pop
mov
cmp
or
mov
std
xchg
call
aad
loopne
int3
pop
loopne
mov
push
aaa
or
fcoml
inc
cmp
mov
rcrb
sbb
jp
arpl
mov
jnp
jno
jle
adc
mov
mov
ds
mov
sub
sbb
jge
ss
cltd
leave
inc
stc
dec
sbbb
adc
lea
fwait
push
cmp
push
lods
push
jae
dec
sbbl
lods
xor
bound
shll
jg,pt
mov
adc
lds
jle
cwtl
dec
mov
or
lret
jmp
enter
fists
imul
lds
jae
pop
pop
jmp
popa
mov
adc
es
pop
pop
sar
xor
jae
lahf
test
adc
int3
jo
pop
fs
mov
xor
outsl
daa
into
mov
or
jl
push
jp
jecxz
mov
roll
cmp
add
outsl
stos
leave
sub
fnstcw
repnz
or
leave
dec
sar
or
or
sub
hlt
dec
jb
xor
out
in
imul
sbb
mov
adc
rcll
or
mov
jg
dec
dec
inc
jmp
push
imul
and
js
repz
or
pop
mov
xchg
or
dec
push
sbb
and
es
ss
jb
dec
dec
xchg
xchg
fimuls
arpl
int3
ficoml
cmp
sbbl
xor
shll
jbe
imul
pop
inc
mov
jnp
int3
mov
imul
add
sti
and
inc
cli
mov
push
inc
dec
mov
xor
xor
xchg
inc
jp
je
xlat
add
sbbl
adc
jl
jl
movsb
sub
sbb
sub
fwait
push
scas
inc
repnz
cmp
pop
and
mov
imul
test
out
mov
push
cmp
call
std
shll
jne
adc
add
push
sbb
xchg
sti
fsubl
mov
stos
in
xor
adc
popf
sbb
jno
movsl
push
and
add
insl
sub
mov
and
dec
push
push
mov
mov
mov
je
jp
or
in
push
jmp
das
aaa
xor
mov
dec
leave
adc
imul
mov
xchg
dec
movsl
and
aaa
bound
pop
sbb
cmp
outsw
fildll
mov
push
mov
jno
lcall
jno
or
ret
jl
sbb
std
std
jo
or
jp
sub
sbb
loope
ffreep
mov
fmulp
jp
mov
or
test
xchg
lret
xor
cmp
out
cli
imul
mov
dec
jmp
in
cli
lods
sub
mov
iret
out
sbb
add
xchg
or
movsb
adc
data16
ljmp
sbb
fnstenv
loop
jl
daa
insl
daa
arpl
xchg
orl
jnp
push
dec
pop
mov
lds
cmovle
fmulp
scas
xor
dec
popa
dec
outsb
add
shrl
inc
scas
ret
imul
lahf
fsubrs
inc
cmovge
adc
xchg
push
scas
cmp
push
pop
sbb
shlb
movsb
test
pop
int3
arpl
or
cmpsb
andl
test
inc
push
mov
psubsb
jbe
mov
jno
int3
roll
imul
xchg
ss
inc
push
add
and
loopne
test
insb
nop
inc
push
jae
repz
fs
imul
ja
xchg
rcrl
jnp
cmp
sbb
aaa
dec
mov
pop
xchg
push
std
or
mov
mov
test
je
enter
int3
sbb
call
add
lea
mov
jge
or
jbe
ret
enter
xor
mov
pop
int
push
jmp
ret
mov
lea
cltd
ret
mov
jg
xchg
adc
aam
fdivrp
or
xchg
loope
ret
in
or
mov
mov
xlat
mov
jl
js
subb
call
add
or
add
cs
mov
or
sahf
dec
das
xor
divl
loop
orl
or
mov
enter
inc
push
aad
enter
xlat
fsubp
insb
and
std
inc
or
nop
loope
out
push
mov
sbb
xor
mov
add
push
fucomip
fs
xchg
pushf
ljmp
add
in
das
sti
enter
pop
fstps
insb
xchg
std
out
fdivl
cmp
call
push
and
pop
dec
stc
inc
mov
cld
xor
sti
repz
cmpsb
and
fildll
mov
sti
push
inc
mov
insl
mov
and
movsb
push
and
daa
mov
push
daa
or
xchg
popf
inc
cmc
jae
pop
rorl
les
sbb
lods
in
pop
aaa
push
dec
mov
aad
sbb
xchg
push
inc
das
imul
ds
fists
mov
outsb
mov
xchg
xchg
adc
js
and
jle
inc
leave
cltd
jb
adc
mov
fdivrl
out
mov
insb
ljmp
call
sub
or
push
mov
enter
lea
jmp
mov
inc
repnz
sbb
mov
es
ret
insl
xor
scas
pushf
shll
popa
jbe
sahf
add
cwtl
shlb
movsl
test
adc
ret
and
xor
push
lods
fcoms
lahf
sti
mov
pop
sarb
shrb
js
ljmp
inc
inc
xor
ds
dec
and
xchg
ret
pop
int
sbb
rolb
mov
dec
jno
ja
inc
cmp
les
cli
pop
fwait
mov
stos
lret
movsl
call
mov
bsr
cld
sub
in
jmp
mov
test
dec
jb
push
insb
xchg
imul
subl
mov
outsb
mov
sbb
das
jle
push
cli
cwtl
dec
mov
xchg
jl
mov
pop
push
and
mov
sahf
adc
push
arpl
outsb
mulb
and
pop
test
inc
pop
fstpl
xor
inc
jb
pop
out
jbe
add
dec
and
pop
push
loope
jnp
adc
push
push
mov
mov
xchg
test
push
ja
fmuls
stos
scas
shrl
jb
dec
mov
divb
inc
inc
dec
out
fsts
sub
mov
popf
adc
fdivrp
fstps
aad
in
aas
data16
pushf
loope
or
repz
sbb
xchg
xor
stos
mov
loop
cmp
les
adc
pop
scas
or
fxch
xor
fstps
pop
mov
and
add
mov
dec
jg
xlat
ret
dec
mov
outsb
cmp
fmul
xchg
maxps
subl
push
mov
mov
push
fisubs
xchg
mov
jnp
sbb
into
ret
dec
sub
and
mov
mov
lods
scas
sbb
arpl
fs
fsubp
addb
pop
add
outsb
or
xor
mov
dec
jle
jne
fs
fisttps
outsb
pop
mov
loope
and
jne
xchg
cmpb
xor
and
xchg
mov
sbb
cmpsb
repnz
jge
sbb
fimuls
mov
fimull
cmc
or
in
js
push
and
fsubrs
jae
or
sbb
loop
xchg
sbb
jo
incb
cmp
test
ret
pop
ss
outsb
es
jnp
cmc
das
leave
pop
xor
sub
hlt
fnsave
jecxz
lock
mov
lods
xchg
adc
sbb
les
sbb
jecxz
cmp
xchg
inc
lret
ljmp
popf
lcall
aaa
divl
inc
fs
leave
arpl
push
arpl
and
xchg
lcall
orb
pop
and
fistpll
pusha
dec
xchg
lret
gs
loopne
sahf
pop
sub
stos
push
faddl
loop
cmp
push
mov
je
mov
clc
rclb
fistpl
in
jbe
mov
div
fldcw
enter
bnd
leave
cmp
xor
adc
ss
pop
pop
xchg
sahf
hlt
je
aad
ljmp
push
outsb
sub
jnp
mov
repnz
mov
mov
fwait
bnd
add
adc
cld
pop
test
mov
loop
popf
jb
fsubrp
push
loopne
cmc
pop
sub
push
inc
lcall
fcoms
inc
mov
jnp
jecxz
shrb
test
mov
ljmp
jb
cld
dec
jne
pop
roll
mov
push
sbb
and
xlat
ret
mov
cmp
stos
sub
daa
out
jg
and
ficoml
mov
sub
cmpsl
mov
addr16
sub
scas
mov
or
mov
dec
ljmp
xchg
push
cmp
les
lods
rcr
repnz
leave
mov
cmpsl
jnp
xlat
shrl
push
mul
cltd
fs
add
dec
scas
out
pop
or
jle
imull
not
sub
push
out
in
sahf
arpl
jmp
shlb
xor
and
add
iret
and
loope
sbb
in
cwtl
inc
movsb
ret
pop
scas
pushf
lea
adc
jne
cltd
jb
ret
jge
iret
cltd
sub
dec
stc
bound
sbb
addr16
or
stos
inc
cli
aad
xlat
scas
dec
ficoml
xor
sub
fistpll
movsb
mov
addr16
mov
sub
pusha
push
das
scas
xchg
dec
mov
sarl
adc
sub
int
movsb
das
dec
adc
leave
dec
ss
cmp
xchg
mov
sub
insb
inc
sub
sbb
adc
pop
test
lock
lds
hlt
pop
xchg
fs
out
sub
cmp
bound
dec
loopne
scas
xor
lods
cmp
inc
ja
lahf
mov
adc
daa
jle
jp
aad
adc
jecxz
mov
cmp
lds
icebp
popf
adc
rorl
pop
scas
sbb
out
rcll
repz
lret
xor
stc
add
pop
xlat
sub
lods
sbb
mov
fwait
pop
cld
scas
mov
inc
ss
into
jbe
ret
sbb
outsb
mov
mov
repnz
adc
or
mov
push
cs
sub
fisttpll
pop
mov
test
and
data16
nop
sbb
xor
das
rcll
pop
push
lds
jle
outsb
arpl
fmull
xor
dec
fistpl
jg
or
daa
movsb
xor
add
mov
icebp
push
and
sub
inc
enter
xchg
int
pop
xchg
cmp
ss
adc
push
mov
jp
int3
rorl
das
nop
rcr
cmp
lahf
iret
ret
mov
xor
andl
or
xchg
mov
shrb
ds
dec
das
movsl
enter
push
push
dec
xchg
dec
xchg
and
sub
ret
fadd
fsubp
movsl
sahf
lock
test
shl
ret
repz
std
daa
xchg
adc
ficoms
popa
push
lretw
fsubl
sub
mov
repnz
push
sub
rcl
cmp
xchg
sbb
stc
rcrb
lds
idivb
call
clc
jns
mov
rcrl
mov
iret
sarl
movsb
test
ret
jno
mov
sub
icebp
pusha
mul
jp
push
pop
out
pop
aam
data16
rorb
cmpsb
testb
jnp
mov
cltd
divl
imul
cmp
repnz
jb
pop
pop
xlat
mov
hlt
loope
xor
push
ds
or
lea
or
adc
sub
sbb
jbe
add
push
add
push
scas
cwtl
xlat
and
ficoms
cs
mov
lock
mov
cmp
lcall
test
cmpsl
sub
pop
jp
pop
iret
pop
outsb
sbb
inc
mov
jmp
mov
test
scas
fbstp
mov
outsb
daa
dec
mov
enter
xchg
sbb
int3
fwait
stc
into
dec
adc
sti
popf
movsl
lret
adc
fnsave
mov
call
out
add
sub
sbb
cmp
mov
jb
add
mov
sahf
pop
xchg
or
filds
jae
and
ss
lcall
lcall
adc
sbb
jns
sbb
pop
test
repnz
lret
xrelease
sub
inc
subl
iret
test
sbb
cmp
xor
push
ret
push
xor
cmp
and
xor
xchg
dec
mov
ret
test
dec
add
jnp
pop
push
fists
push
das
pop
pusha
inc
dec
fbstp
and
pop
adc
mov
test
aam
adc
out
in
push
cmc
inc
push
or
vmread
mov
lcall
test
scas
jno
faddl
sbb
sbb
scas
mov
xchg
inc
loope
mov
mov
test
sub
fcmovnb
jbe
fsubrs
leave
sbb
mov
jno
mov
cmp
rcll
adc
faddl
pop
jns
push
mov
iret
pop
cld
pushf
repz
lods
cmp
or
out
push
dec
adc
xchg
xchg
sbb
cmp
lods
iret
pop
data16
xchg
shlb
fldt
or
lcall
and
loopne
push
data16
add
mov
cmp
test
mov
mov
sbb
setne
xor
out
mov
and
stos
lcall
xchg
cmp
push
sarb
jle
das
xchg
ret
mov
imul
xchg
add
hlt
rcl
and
das
inc
xor
push
jecxz
repnz
mov
mov
push
cmp
dec
je
lea
aam
pusha
sub
jge
out
loope
in
test
fwait
mov
xchg
xor
mov
and
inc
lods
outsl
cli
test
and
push
loope
stos
rclb
and
mov
sub
imul
add
sub
pop
mov
les
int3
test
dec
loope
dec
scas
into
loopne
mov
out
out
xlat
loope
ds
xchg
sub
inc
mov
push
mov
aad
shrl
adc
pop
test
pop
mov
push
dec
lcall
mov
jp
push
icebp
mov
lods
shrl
cmp
iret
int3
mov
push
inc
adc
jb
dec
pop
cmp
and
ljmp
mov
mov
add
roll
jno
ss
adc
sbb
outsb
test
push
inc
cmpsl
pop
xchg
sub
sbb
xchg
mov
packssdw
mov
fst
or
lret
nop
mov
mov
enter
shr
lret
mov
rol
inc
das
push
and
movsb
xchg
and
sahf
mov
sqrtps
sub
cmp
dec
xor
push
out
xchg
das
es
fistl
dec
outsb
es
out
test
sub
ret
jb
iret
cmp
mov
push
insl
and
iret
inc
jbe
adc
inc
scas
sbb
addl
and
dec
rcrb
das
lcall
jo
push
movsb
cmp
push
out
outsl
mov
int3
jne
jp
rolb
sub
cltd
cmp
pop
orl
push
mov
jl
cmp
lahf
push
sar
loop
pop
loopne
xchg
gs
xchg
pushf
jo
stos
jnp
push
or
test
mov
or
enter
cwtl
mov
lea
xchg
mov
pushf
inc
insb
js
xchg
cltd
lods
sti
fs
addr16
cld
mov
mov
outsl
inc
mov
dec
mov
push
dec
xor
stos
cmp
lods
pop
or
arpl
nop
adc
sbbl
adc
push
ljmp
daa
test
xlat
ja
cmp
cmpl
add
mov
jecxz
pop
loope
cltd
rol
inc
scas
or
stos
lea
aas
mov
popf
xor
ret
insl
cld
iret
xchg
fimuls
xchg
je
les
in
jo
mov
stos
cmp
ss
xor
es
xor
cwtl
inc
lds
fidivrs
cld
xchg
outsl
sub
jge
or
mov
in
mov
xchg
push
and
imul
popa
mov
mov
cmp
push
jle
mov
or
or
xchg
icebp
mov
push
push
inc
int
inc
loop
repnz
mov
lcall
xchg
push
or
jo
mov
mov
jbe
inc
or
jmp
aaa
ret
je
push
inc
xchg
cmp
or
fdivrl
je
out
adc
sub
mov
das
mov
fwait
in
popf
ret
fisubl
je
or
ja
fs
rclb
jnp
xchg
inc
and
push
and
jbe
adc
std
cltd
jne
repz
mov
enter
scas
sti
and
divl
adc
mov
lods
in
ret
loope
sbb
add
ss
nop
sbb
sub
xchg
inc
mov
scas
jns
ds
adc
dec
jmp
xchg
loope
sarb
xchg
pop
dec
cmp
and
cmc
sbb
inc
jnp
arpl
jl
insb
push
jl
in
sbb
js
dec
add
push
push
jne
lret
arpl
into
mov
adc
add
sbb
mov
jl
cs
cmp
aam
pop
adc
mov
jle
pop
mov
xor
mov
in
out
cmp
frstor
cmc
fisubrl
ja
in
mov
jecxz
addl
data16
iret
aad
and
clc
push
shrb
jp
xchg
sub
cltd
mov
hlt
mov
pop
mov
cmp
lods
and
and
cltd
push
xchg
cmp
test
mov
das
sahf
fstps
aam
jae
mov
mov
cmp
lret
movsl
pop
int3
sub
pop
std
loopne
dec
loop
je
mov
and
jbe
call
jnp
add
xor
divb
push
cmp
inc
sbb
repnz
add
fnsave
sbb
sub
pop
mov
add
cmp
fnstenv
xchg
xor
add
or
mov
ret
or
xor
add
adc
icebp
inc
add
aas
mov
iret
ja
push
cwtl
cmp
insb
daa
xor
jmp
xor
lods
mov
lods
cmpsb
mov
and
push
adc
xor
jae
pop
js
sbb
cmc
or
mov
mov
push
lahf
movsb
les
sahf
rcl
test
sub
inc
jne
pop
adc
scas
pop
pop
sub
mov
cmc
in
sahf
push
pop
push
adc
movsl
jl
push
push
push
jge
push
outsl
je
add
push
out
ret
push
outsl
idivb
jmp
fldt
add
dec
in
adc
jge
call
out
outsl
or
add
mov
fdivrl
xor
rolb
loop
test
pop
mov
xchg
imul
cli
cltd
add
mov
popa
adc
jle
or
into
add
mov
pop
push
pop
ja
push
ja
push
fidivl
sbb
xchg
pop
lds
dec
aad
shlb
inc
loope
stc
aaa
cmp
in
in
or
leave
clc
inc
lret
mov
leave
loope
cwtl
xchg
or
inc
mov
movsl
insl
xchg
mov
add
jne
in
mov
jg
ret
hlt
sbb
jmp
sbb
out
and
je
pop
std
rcr
in
clc
jbe
lret
imul
scas
sarl
xchg
xchg
es
ds
xorb
or
cmpsl
aas
push
pushl
xchg
sub
jb
push
cmpsw
pop
nop
repnz
mov
pop
imul
jne
icebp
xlat
mov
test
jmp
pop
or
xchg
push
push
dec
cwtl
aas
mov
jne
and
je
popf
test
imul
cmp
pushf
adc
fstps
imul
jo
pop
inc
test
test
xchg
popa
insb
es
outsb
call
or
or
pusha
mov
pop
jnp
sub
sub
sub
pop
aaa
jmp
mov
inc
adc
dec
mov
mov
adc
inc
ds
cmp
push
aam
add
mov
pop
rorb
out
fisttpl
cmpsb
in
mov
xchg
fs
sub
sbb
pop
rcll
pop
fdivl
jb
mov
fmuls
push
imul
mov
jno
dec
shrb
pop
sbb
aas
cltd
dec
pop
leave
into
loop
mov
adc
and
pop
push
inc
push
push
mov
add
negl
addr16
push
iret
aas
mov
scas
mov
int3
rcrl
pop
cltd
dec
cmp
pop
add
mov
push
or
and
int3
cmp
ja
cwtl
jo
out
pushf
leave
test
push
cmc
inc
jno
lds
xchg
or
xchg
ds
rcrl
int
cwtl
sbb
xchg
mov
fwait
push
aaa
gs
lods
jl
adcl
dec
xor
cmp
and
push
out
lock
jnp
add
js
cs
inc
js
xor
mov
cmp
outsb
jnp
sub
dec
bound
lock
sub
and
mov
ret
in
and
dec
int3
ljmp
movsl
rcr
and
cwtl
lods
jae
and
mov
push
cmpsl
xchg
cmp
push
iret
roll
cs
aaa
push
cmp
stc
lret
mov
loop
std
jne
sub
dec
adc
jbe,pn
bound
cmpsl
test
hlt
cmp
sarb
adc
jns
pop
mov
lods
aam
mov
int
or
push
test
push
in
xor
je
and
xchg
out
gs
out
gs
inc
inc
sub
int
inc
ss
cmp
enter
leave
adc
aam
dec
loop
rcl
ficompl
pop
dec
push
stos
ljmp
jo
sub
insl
addr16
daa
pop
ja
xorb
xchg
clc
fisttpl
xlat
xchg
enter
sub
pop
push
mov
xchg
sar
sub
mov
push
lock
sbbl
jle
push
add
mov
scas
cmpsl
fs
divb
xchg
xor
shlb
xlat
mov
cmpl
mov
xor
lds
data16
fiaddl
loope
aaa
hlt
insl
and
cli
lea
mov
push
hlt
leave
rcrb
xchg
lods
sub
or
gs
jb
jg
xlat
movsl
test
inc
in
movsl
daa
cltd
cwtl
push
mov
mov
xor
and
mov
addl
mul
jmp
ret
cmpsl
jo
ds
mov
fndisi(8087
adc
push
std
mov
jns
sub
stos
shll
mov
adc
mov
dec
mov
data16
push
and
out
and
pop
test
aad
inc
pop
and
leave
out
xchg
out
fbld
pop
and
iret
mov
cmpsl
xor
stos
sbb
sub
mov
out
fisubrs
inc
mov
movsb
and
sub
jae
clc
mov
sbb
mov
pushf
int3
xchg
imul
out
ds
in
jge
mov
mov
repz
jp
sbb
icebp
dec
in
or
adc
data16
out
jb
or
jno
jecxz
outsb
sahf
mov
dec
sbb
push
das
fcoml
in
inc
xchg
test
fcmovnb
pop
mov
sub
lods
loop
sbb
test
sbb
rorb
fsubrl
inc
pop
outsb
ds
xor
iret
cld
lcall
fdivrs
xchg
cmp
out
ds
dec
les
test
test
jns
lret
cmp
adc
jge
outsb
inc
shrb
repnz
add
gs
adc
sbb
cmp
and
sub
pop
daa
adc
fisttps
loope
fistpll
dec
cmpl
scas
add
dec
lret
xchg
push
jae
xor
out
xor
shlb
xchg
clc
add
mov
pop
and
and
dec
adc
sbb
mov
mov
xchg
adc
sub
mov
fidivl
pandn
mov
cmpsl
cmpsl
les
jae
mov
inc
dec
mov
sub
sub
xchg
pop
pop
lds
bound
lret
mov
dec
jb
aad
xor
rcl
repnz
dec
test
inc
and
jns
push
aaa
sub
push
cwtl
inc
xchg
mov
jo
and
jmp
xor
sahf
jns
jns
jne
out
push
jmp
adc
mov
loopne
cmp
fimuls
in
mulb
mov
movsl
cmc
mov
adc
pop
ljmp
int
lahf
fildll
pop
add
inc
or
xor
sub
jle
jns
addb
sbb
sub
repz
jg
lahf
dec
lea
adc
pop
test
xor
cmc
jp
xchg
mov
cmp
fistps
or
add
inc
ds
adcl
pop
icebp
mov
cmpsb
xlat
xchg
pop
jecxz
cltd
cmpsl
sbb
mov
dec
mov
sub
dec
lcall
testl
pusha
aas
hlt
mov
in
cmp
test
inc
out
jns
dec
xchg
mov
testb
lea
adc
stos
and
dec
ss
push
dec
cmpsl
mov
add
sbb
jae
pop
push
dec
mov
or
add
sub
inc
cmp
sub
mov
aaa
xchg
ja
xchg
daa
dec
jp
mov
jecxz
aad
std
clc
push
aaa
mov
pop
addr16
xchg
movsb
mov
lahf
mov
pusha
dec
inc
loope
xchg
rcl
cvtps2pd
lret
push
aas
mov
jg
dec
sbbb
out
or
push
outsb
mov
repnz
bound
mov
clc
mov
std
testb
outsb
push
lods
aaa
mov
test
stos
icebp
stos
scas
jae
loopne
ret
imul
out
pusha
outsb
test
fwait
int3
std
jne
and
or
jns
sbb
cmp
fstl
gs
cmp
ror
sub
cli
xor
jp
out
js
imul
adc
mov
cwtl
dec
cltd
mov
fldenv
loopne
or
jge
in
aam
orb
int
and
int3
lds
adc
ret
enter
push
inc
sub
mov
iret
sub
mov
add
cmp
mov
sbb
xchg
add
rorl
ds
incb
mov
out
mov
or
inc
adc
int3
clc
daa
loopne
sbb
leave
aad
pop
mov
xor
ljmp
nop
scas
mov
cmc
fmuls
or
std
push
push
cmp
push
stc
in
mov
popa
pop
loop
fiaddl
outsb
imul
outsb
fcomps
dec
ret
sub
imul
out
or
rcrl
push
loop
aaa
sbb
pop
dec
xor
cwtl
pop
sub
loope
sub
sbb
shlb
cmp
mov
and
std
roll
sbb
scas
test
mov
mov
cmp
movsb
jp
out
je
lret
cmp
jnp
cmpsl
mov
jmp
lds
imul
aam
xchg
jo
mov
mov
stos
div
popf
cmp
cmp
std
add
xchg
add
mov
inc
xchg
in
fwait
cmp
mov
inc
retw
pop
mov
loope
je
cmpb
stc
in
sbbl
and
clc
divb
stc
sbb
daa
adc
mov
or
pop
sbb
addb
fwait
stc
add
lahf
jmp
mov
cmp
clc
push
dec
sahf
lea
mull
int3
ret
xor
jl
div
cmp
ja
mov
ss
mov
and
push
fwait
enter
mov
fldenv
loopne
inc
mov
jno
data16
xor
ret
mov
test
pop
lds
push
imul
cmpsb
push
add
imul
pop
enter
sub
xchg
pop
jo
iret
repz
out
popa
push
mov
or
lds
dec
mov
xor
cs
pop
in
and
icebp
pusha
and
sub
or
lea
mov
popa
rorl
cld
out
xchg
xchg
cmp
outsb
jl
jecxz
cmp
jg
mov
insb
psubsb
mov
pushf
enter
pop
jle
or
dec
inc
xor
test
ret
jge
xchg
rcr
pop
imul
dec
pop
in
dec
xor
pop
imul
adc
jle
daa
fldcw
ljmp
aam
sub
int
test
push
pusha
addr16
sub
mov
lahf
and
loopne
xchg
jne
sbb
push
stos
iret
dec
mov
testl
sbb
cs
xlat
inc
ror
push
clc
repnz
xorl
push
and
pushf
test
cmp
in
sub
xchg
fs
js
scas
test
inc
lock
xor
imul
cmp
sub
pop
pop
adc
jno
mov
mov
int
in
sub
push
or
rcrl
lods
cwtl
outsb
xchg
jmp
out
inc
xor
repz
adc
or
add
sbb
xchg
xor
inc
shl
jecxz
mov
out
sbbl
xor
push
in
sbb
test
xchg
cmpsb
negl
and
outsb
mov
lods
jmp
aad
sti
imul
pop
je
ja
or
lock
das
cmpsl
lock
or
pop
loopne
imul
and
xchg
and
jae
in
cmp
das
jl
jo
add
pop
je
fildl
push
xor
jae
xchg
add
popa
mov
popf
cs
and
adc
jne
push
shrl
lods
mov
add
xchg
adc
inc
in
out
cmc
jb
sub
out
rorl
dec
or
lods
pop
dec
js
mov
cmp
add
out
sub
shrb
in
aas
dec
sub
cmc
shr
test
xchg
stc
push
leave
mov
sub
stos
push
sbb
sub
mov
pushf
jno
pop
data16
stc
inc
int3
ljmp
or
mov
test
mov
pop
or
cwtl
and
inc
cmpb
xchg
iret
data16
inc
dec
nop
sub
xchg
and
cmc
sub
subb
das
sar
and
fsubrl
mov
mov
and
mov
adc
test
popa
shll
lock
pop
scas
xor
gs
leave
test
enter
fbstp
sbb
inc
push
or
jo
lock
int3
xchg
mov
cmp
lea
mov
pop
and
push
cmp
lods
xchg
fsts
adc
imul
ss
lods
test
sarb
adc
mov
sub
cmp
mov
ljmp
lods
loopne
jmp
iret
adc
shrb
imul
fnstenv
shlb
out
mov
rorl
xchg
les
dec
rol
inc
scas
and
mull
jo
pop
fstp
jnp
push
popa
mov
dec
mov
aad
jge
out
rcrl
or
push
pop
fwait
les
xor
sbb
mov
icebp
xchg
popf
enter
je
push
or
pop
into
pop
test
push
sub
mov
movsb
aaa
cmp
sbb
xchg
push
into
inc
popa
sbb
cmp
int3
xorl
popf
into
pop
outsl
cmp
clc
push
test
sbb
out
cmc
lret
mov
aas
insb
push
mov
mov
add
ror
xrelease
pop
mov
ja
stos
jge
pop
mov
cli
dec
in
jp
ss
xor
inc
adc
sub
xor
jmp
fisttpll
jne
popa
iret
ror
sarb
aam
sarl
int
ljmp
xchg
and
cltd
jg
movsb
std
dec
or
test
push
mov
cmpsl
push
cmpsb
pop
push
cmp
icebp
inc
push
scas
leave
out
pop
std
imul
jb
es
dec
addr16
les
imul
into
jno
sub
lret
cmp
add
or
or
sub
aaa
add
jl
mov
lds
test
pop
cwtl
shl
fnstcw
pop
insb
push
cmp
mov
xchg
jg
nop
nop
lds
pop
bound
add
xchg
cwtl
rol
fisubl
cmp
arpl
and
mov
or
stos
lahf
pop
imul
fstpt
xchg
cld
jne
call
mov
fisubrs
jb
daa
mov
and
pop
mov
sbb
or
ret
or
adc
xchg
sahf
push
cmp
dec
mov
xchg
pop
jmp
sub
outsb
out
lret
pop
rcrl
stos
lcall
push
sub
mov
pop
gs
std
pusha
sub
push
inc
inc
mov
enter
out
cmpsl
scas
jmp
pop
pusha
xor
cmpsl
pop
inc
jg
dec
sub
cmc
mov
inc
data16
sub
shl
lret
mov
xlat
or
cmp
sbb
cmp
fcoml
loopne
sub
scas
dec
ffreep
cmp
mov
insb
testl
inc
xchg
enter
sbb
sahf
scas
stos
or
flds
ss
jb
xor
jnp
xchg
das
xor
jne
mov
pushf
cwtl
or
dec
js
mov
mov
add
stos
inc
pushf
scas
jg
and
add
jns
insb
jg
jge
fs
fldl
outsb
mov
repz
cmpsb
popl
testb
imul
in
rorb
push
and
push
nop
loop
cwtl
xchg
inc
leave
and
leave
ret
hlt
inc
mov
mov
imul
lret
ljmp
repz
insb
push
xorl
pushl
add
adc
hlt
and
lret
dec
dec
mov
mov
pusha
xchg
xor
dec
jmp
wbinvd
data16
stc
inc
and
daa
sbb
lahf
xor
lea
xor
cmp
xor
push
jns
jge
aaa
mov
rcll
or
jne
addb
mov
popf
mov
ret
adc
scas
icebp
sbb
push
test
push
lock
push
adc
add
xor
movsl
add
not
mov
pop
gs
les
jge
xor
xchg
sarl
xor
mov
movsb
xor
aam
sbb
or
and
in
and
inc
repz
mov
das
mov
insl
lods
or
jo
call
and
ret
push
xchg
inc
ret
and
and
in
data16
fucom
add
idiv
xchg
mov
fnsave
push
inc
les
push
loope
call
out
sub
lcall
xor
sbbl
outsl
mov
dec
das
xlat
cli
jae
lods
test
in
movsb
xor
pusha
mov
out
stos
push
dec
negb
mov
pop
aaa
ja
repz
fwait
adc
fdivrp
rcrl
negl
fnstsw
bound
add
push
dec
pop
dec
adc
push
outsl
imul
je
icebp
xchg
sbb
mov
enter
test
add
lock
mov
imul
jne
jl
mov
pop
mov
jl
mov
dec
lret
pusha
dec
push
lock
pop
dec
insl
add
lds
push
cmpsl
jp
mov
inc
dec
aaa
in
aas
add
test
mov
cmp
int3
jl
sbb
mov
mov
nop
out
push
mov
pop
mov
and
stos
and
insl
adc
mov
sub
push
xchg
add
mov
inc
mov
rdtsc
mov
es
cmp
fwait
ja
addr16
fs
stos
xchg
rorb
aad
xor
cmp
daa
or
jbe
stos
mov
push
flds
pop
sub
dec
push
addps
xchg
push
mov
push
mov
add
scas
sbb
mov
jl
sarb
es
orl
sub
or
aaa
jle
mov
push
mov
imul
xchg
xchg
mov
dec
mov
jg
arpl
jmp
jo
and
adc
movsb
or
mov
sbb
push
pusha
xchg
outsl
in
fwait
iret
push
mov
loop
cmpsl
lret
roll
cmp
add
sbbl
mov
and
add
imul
add
push
orb
cmp
pushf
sti
shrl
rcr
movsl
mov
stc
pop
inc
adc
jb
andb
lret
test
out
add
cmp
mov
push
int
jne
out
and
mov
lock
jge
dec
mov
movsl
aaa
lods
sub
jge
out
mov
rcll
push
xchg
push
mov
movsb
fwait
aad
add
outsb
mov
add
jg
mov
or
sbb
lret
sbb
inc
xchg
jns
sub
cmpsb
sub
and
or
mov
and
xor
push
dec
push
repnz
js
mov
dec
jns
add
jb
outsl
push
adc
lock
dec
xchg
xlat
and
dec
ret
in
push
jb
adc
mov
mov
cmp
sbb
mov
bound
adc
sbb
mov
out
xor
aas
lock
shrb
scas
cmpsl
sub
in
loope
or
ds
loope
mov
sbb
pop
cmp
mov
fcomp
cmpsl
mov
test
mov
push
stos
lods
rcll
pop
repnz
lret
pop
sbb
xor
xchg
call
mov
out
ret
imul
add
call
cld
and
xchg
jne
fwait
lds
xchg
dec
pusha
cmp
pop
in
inc
nop
fwait
push
cmp
loop
cld
mov
xor
xchg
push
aad
cwtl
hlt
rcll
push
addr16
and
shrb
addl
push
cld
lcall
xchg
xchg
loope
mov
pop
sub
sub
gs
mov
adc
sub
pop
mov
nop
out
rcr
nop
fs
jb
sbb
push
bound
and
jmp
test
mov
std
mov
xchg
lret
ds
out
lods
movsw
jg
mov
hlt
aad
dec
push
xchg
or
xchg
add
mov
ds
inc
mov
jg
push
dec
out
sub
popa
mov
icebp
fwait
add
jns
cmp
mov
push
sub
sbb
imulb
mov
push
iret
mov
fwait
out
xor
das
and
lds
aam
push
adcl
sbbb
mov
xor
inc
mov
and
cld
rcrl
cmp
ljmp
pop
insl
std
and
jmp
and
xor
push
stc
data16
jge
adc
aam
add
jne
pop
xchg
add
add
cwtl
fs
test
sbb
clc
xchg
fnsave
or
xor
push
fstpl
adc
mov
sahf
push
add
push
in
jecxz
jge
cmp
fisubrl
push
dec
xor
jmp
xchg
hlt
xor
mov
xor
mov
add
sbb
outsl
xchg
push
gs
mov
pop
push
sahf
dec
lret
xchg
lahf
shll
aaa
and
std
push
pop
pop
imul
daa
std
push
cmp
jbe
repz
and
jmp
mov
outsb
inc
loope
imul
mov
mov
dec
mov
inc
mov
out
or
inc
xchg
push
mov
jecxz
shlb
and
enter
orb
or
rcrl
mov
rorb
jle
pop
add
inc
sbb
cli
sub
shrl
pop
ss
add
adc
pop
aam
and
hlt
clc
in
inc
jne
mov
sub
xchg
push
lods
and
fisttpl
or
inc
sub
sub
jns
push
or
ds
insb
pop
and
xor
neg
jecxz
xchg
jb
xchg
push
push
call
fidivrs
inc
sbb
ret
inc
mov
add
dec
mov
dec
cmpl
cmp
xchg
xlat
push
push
jl
push
sar
fisubs
loop
out
inc
mov
or
mov
das
push
popa
and
cli
mov
dec
fbstp
push
jg
mov
mov
xchg
mov
popa
adc
cmp
xchg
mov
stos
outsl
js
rcrl
dec
lods
adc
mov
scas
daa
ds
ja
xor
push
cmpsb
sub
gs
jnp
pop
imul
push
arpl
inc
jns
lcall
jb
adcl
std
shl
xor
mov
ja
push
jno
dec
push
jae
sub
and
mov
out
dec
mov
frstor
std
dec
mov
push
shlb
sub
data16
sbb
sbb
sbb
jge
xchg
sbb
dec
pusha
lret
push
or
ljmp
mov
dec
fsubrp
loope
popa
das
cmc
sbbl
mov
add
xchg
mov
imul
jl
pop
ss
sub
in
ror
jp
mov
jge
or
inc
andl
int
rcr
add
pop
out
inc
fst
dec
call
cmp
enter
shl
jg
and
jns
popf
cltd
inc
int
mov
sub
lahf
xor
lds
imul
push
mov
or
and
pop
push
pop
out
mov
ret
clc
and
lods
lds
xlat
cmp
adcl
fsubs
and
push
ja
pop
mov
jecxz
stc
and
test
daa
sarl
outsb
js
adc
cmp
sub
test
mov
shll
mov
inc
xor
int3
enter
fwait
hlt
sbb
xchg
icebp
andl
fs
cmpl
xchg
stc
call
aad
push
repz
popl
push
mov
lds
xchg
jae
rcrl
enter
fdivr
jb
sti
mov
jne
adc
mov
sti
jns
ljmp
insl
scas
xchg
push
movl
lods
xchg
clc
loopne
shr
adc
out
and
call
jno
popa
loopne
mov
mov
sahf
pusha
call
stos
lea
xor
testb
pop
pop
stos
and
js
lea
cmpl
in
ss
and
mov
xchg
bound
pop
ja
lcall
mov
out
inc
inc
aam
push
push
dec
insl
cld
movsl
lahf
in
fcompl
mov
dec
mov
in
ror
popf
inc
ficoml
fwait
jmp
mov
push
cli
mov
jae
ret
jg
stos
push
adc
mov
adc
mov
mov
mov
shlb
dec
push
inc
sub
pop
pop
push
pop
cmp
les
adc
cmp
push
loopne
pop
scas
mov
sti
jne
rep
jns
scas
jl
adc
mov
aam
mov
sbb
jecxz
pop
add
out
inc
xchg
inc
sarb
cmp
cmp
lret
mov
jg
inc
lods
test
negl
xor
fidivrs
mov
roll
pop
or
mov
pop
pop
out
push
loope
sbb
test
mov
push
and
xchg
inc
inc
data16
scas
inc
outsb
and
push
pusha
dec
into
and
push
fdivl
or
mov
loope
fldenv
outsl
jnp
imul
pusha
sbb
movsb
mov
adc
test
push
xlat
ljmp
lcall
sub
and
inc
jnp
inc
adc
loope
mov
insl
and
out
inc
pop
out
lods
jge
pop
bound
and
fisttpl
nop
test
adc
pop
pusha
loope
inc
jg
loope
inc
xor
and
mov
jno
out
add
dec
scas
sbb
adc
es
packuswb
btc
cmp
or
xchg
dec
mov
cmp
lea
lds
adc
or
sbb
mov
adc
or
pop
dec
xor
mov
and
bound
enter
loopne
mov
lods
cmp
or
sbb
icebp
pop
cld
stc
imul
lret
mov
test
add
and
and
clc
pop
cld
or
xchg
call
mov
lret
mov
pusha
mov
add
pop
in
ja
inc
add
adc
lahf
cmc
inc
pushf
push
xchg
lds
fiadds
loop
adc
jbe
addr16
xor
jmp
push
lcall
and
jp
inc
xchg
sub
xchg
dec
add
cmp
decb
or
mov
xchg
in
sub
js
adc
in
mov
mov
lea
sbb
icebp
scas
adc
push
push
ret
xor
jbe
aad
shl
cmp
pop
in
sbb
push
cs
ja
pop
sub
mov
add
sbb
or
add
mov
cmp
ret
jae
xchg
sti
into
sahf
dec
inc
shrb
xchg
inc
out
jne
adc
jecxz
fstps
dec
lods
mov
lcall
mov
xchg
jae
pop
mov
adc
pop
in
imul
adc
xor
jne
add
mov
insb
out
fdivrl
repnz
xor
pusha
rorb
mov
and
les
xlat
jnp
into
lahf
clc
stos
jge
and
cli
mov
add
adc
dec
lret
repz
mov
mov
pushf
cmp
shl
fbld
aam
inc
dec
xor
mov
inc
adc
sbb
in
add
xor
add
xchg
xor
movsb
sarb
sub
mov
xor
add
fdivl
cmpsl
mov
fisttps
mov
int3
mov
pop
into
rclb
es
sbb
data16
loop
dec
daa
das
jmp
add
push
cwtl
imul
xchg
cmp
push
rclb
imul
aaa
fistpl
mov
iret
jecxz
in
or
negl
pop
push
inc
sub
test
sub
sub
inc
inc
mov
out
dec
insl
mov
xor
movsb
mov
mov
cmp
ret
or
sbb
cmp
pop
int
scas
and
faddl
xlat
aad
repnz
call
sbb
std
ss
mov
dec
jge
jle
cmp
sub
add
fdivs
sub
and
stos
dec
repnz
addl
cld
push
test
cmpsb
cs
int3
icebp
mov
pusha
leave
mov
cltd
cltd
in
repnz
sbb
jmp
jnp
jb
aaa
ljmp
popa
outsl
push
sbb
xchg
loop
jns
int
jmp
sbb
mov
sbb
adc
ret
and
xchg
rorl
jb
stos
sbb
push
jne
jg
outsl
out
pop
into
pop
ret
push
mov
sbb
push
xchg
or
cmp
xor
jb
out
cmp
nop
jecxz
push
das
sbb
jle
test
cmp
data16
jns
cmc
test
icebp
sbb
in
push
sub
out
loop
add
fsub
ds
pop
mov
mov
xchg
mov
push
jge
mov
test
add
int
jmp
xchg
ds
or
mov
movsb
popa
xor
xchg
push
adc
insl
scas
sbbb
rorb
add
xchg
fldt
je
adc
sub
and
icebp
pop
adc
outsb
stc
pop
mov
dec
cmp
pop
outsb
into
sahf
add
in
std
das
xchg
nop
cmp
mov
imul
aas
out
mov
dec
jecxz
mov
mov
outsl
es
testb
adc
pop
outsl
and
in
pop
xchg
lock
test
lock
cs
and
add
ds
jmp
imul
adc
in
test
jecxz
test
pusha
rcrb
loopne
jno
cmpl
pop
adc
jbe
ficoms
mov
fprem1
test
pop
or
daa
add
dec
pop
or
mov
movsb
addb
jecxz
hlt
test
push
lret
nop
rol
outsb
mov
imul
mov
add
and
fildl
push
dec
add
mov
fsub
fsubrs
popf
cmp
clc
out
dec
and
xchg
pop
mov
lcall
out
mov
jg
inc
xor
mov
add
dec
stos
pop
mov
sub
pop
lcall
push
scas
ja
mov
jo
jne
insl
fwait
aas
rcrl
hlt
test
std
sti
cmpsb
and
and
rclb
fadd
xor
nop
pop
je
inc
pop
inc
sbb
add
xor
fldcw
pop
add
mov
inc
pushf
decb
dec
aam
in
xlat
pop
out
popf
jmp
push
daa
and
fildl
aam
push
iret
push
mov
xchg
fiaddl
out
push
call
test
xor
jb
shll
pop
jnp
inc
adc
pop
imul
mov
rclb
pushf
dec
rorl
or
leave
lds
bound
shl
or
orl
roll
rorl
cmpsb
xor
adc
xchg
aas
cmc
mov
mov
sub
jae
out
push
jp
pop
out
xchg
mov
dec
pop
or
mov
push
bound
mov
push
add
sbb
dec
mov
jnp
pop
xchg
sub
adc
mov
sub
or
ds
lahf
cmp
pop
adc
adc
mov
sbb
loopne
pop
cmp
in
mov
mov
xor
lret
adc
or
push
xchg
nopl
insb
mov
inc
lods
jge
stos
lods
inc
add
lahf
negb
xchg
decl
push
lahf
add
dec
jae
pop
push
rcr
cltd
cmc
dec
jecxz
mov
xchg
lahf
adcb
mov
add
xchg
jl
mov
push
mov
mov
ds
adc
pop
mov
mov
inc
ja
movsl
cmp
add
inc
add
in
jno
mov
cltd
adc
sub
lea
rorb
inc
test
int
lods
dec
jns
cli
sbb
ret
jge
mov
inc
dec
ret
fisubrs
push
xchg
jns
fisttpl
mov
lock
flds
inc
jle
fistpl
out
mov
lret
xchg
scas
adcl
repnz
mov
stc
xchg
es
nop
sbb
pop
and
pop
bound
dec
inc
nop
imul
mov
ror
ljmp
lret
mov
out
sub
loope
leave
js
jmp
loop
lea
xchg
mov
imul
pop
dec
pushf
or
js
or
rcll
mov
mov
sti
jae
or
adc
stos
add
call
and
pop
sbb
and
jbe
sahf
stos
pop
fwait
lods
test
xlat
sbb
sahf
xor
dec
lcall
in
sbb
dec
push
ficompl
js
sub
mov
push
out
lods
scas
mov
setl
mov
dec
inc
jmp
mov
dec
mov
addr16
shlb
fadd
or
sub
push
inc
xor
les
aas
jge
xor
call
add
push
icebp
or
pop
xchg
fwait
push
fmuls
enter
out
jle
stc
ja
xchg
pusha
jbe
jno
xor
icebp
iret
pop
out
and
fs
sub
mov
xor
mov
enter
iret
ror
dec
lret
mov
in
sbb
into
repnz
loopne
insb
bound
inc
in
lcall
xchg
popf
fdivrs
out
lcall
aaa
pop
and
divl
mov
cmp
jl
push
es
lcall
and
mov
out
sub
xor
dec
dec
xchg
push
and
out
xchg
enter
xor
and
out
dec
ds
push
xbegin
cli
jns
cwtl
cmp
cmpsl
insl
jo
not
iret
arpl
jp
adc
popa
ret
ficomps
outsl
rcrl
mov
test
nop
xchg
sub
inc
cld
sahf
aas
aam
cs
push
dec
test
jmp
stos
popf
jp
adc
jecxz
push
add
push
cmp
pop
inc
jns
dec
mov
out
or
scas
mov
cmc
fnstsw
pushf
add
je
test
mov
push
das
dec
adc
mov
dec
dec
xchg
imul
orl
sti
xlat
mov
or
pusha
push
mov
lds
add
mov
mov
xchg
in
pop
xchg
repz
jle
add
jo
adc
push
jle
or
mov
sarb
jp
xor
cwtl
adcl
out
add
addl
sti
sub
xor
xor
in
test
pop
jno
xor
gs
dec
xchg
testb
incb
mov
mov
punpcklbw
add
ror
cmp
and
aaa
int
bound
out
insl
imull
push
push
sbb
cmp
push
push
xor
repz
aad
cli
sbb
shll
xor
inc
jae
js
clc
movsb
orb
rol
mov
xchg
and
ret
jmp
fbstp
aad
lea
out
and
dec
xchg
pop
xchg
and
icebp
push
jge
in
pop
dec
push
fs
aaa
add
jp
fwait
mov
sti
xchg
in
imulb
shl
cmpsl
stos
or
in
mov
jl
add
lahf
sub
pop
push
mov
fdivs
mov
testb
scas
stc
mov
test
stos
decl
xor
xchg
xchg
sarb
popl
xchg
push
cltd
inc
xor
dec
dec
mov
dec
sti
adc
shl
lock
imul
les
cltd
sub
lcall
cltd
aaa
stos
mov
aas
mov
scas
cmp
rcrb
mov
fbstp
in
daa
repnz
repz
mov
js
sbb
xor
inc
xchg
sarl
in
xchg
pop
lods
cmp
pop
mov
lea
push
lock
repz
mov
lea
lret
loope
xor
dec
psubq
pushf
xor
dec
cltd
cmp
dec
mov
push
xor
or
lock
movsb
jg
clc
cmpsl
in
mov
sbb
inc
adc
cld
jl
cli
cli
je
ret
shll
xor
fimull
inc
scas
insl
jle
into
das
data16
sbb
xchg
fs
lahf
faddl
pusha
mov
fisubrs
mov
ds
repz
frstor
jnp
inc
cmp
jne
mov
clc
mov
scas
cmp
inc
pop
aas
jno
inc
out
scas
cltd
adc
clc
pop
xchg
add
pop
push
insb
mov
movsl
push
jbe
icebp
adc
aaa
std
jecxz
sahf
push
adc
inc
fcmove
mov
pop
pop
loopne
pop
daa
xor
fwait
aas
das
movsb
sbb
lret
int
add
push
push
mov
jmp
push
push
andl
xchg
addr16
outsl
scas
idivb
stc
push
jmp
push
jae
aaa
xchg
dec
pusha
cmp
and
add
sarb
sbbb
pop
aam
std
ja
nop
or
ja
pop
pop
xlat
push
stos
in
and
mov
or
inc
xor
pop
arpl
outsl
lods
jge
vpshaq
jo
jb
call
push
sbb
sbb
mov
add
mov
sbb
mov
daa
sbb
cmp
pop
jle
add
dec
push
vmovntps
or
sub
mov
sub
xlat
lcall
nop
jb
pop
inc
fdivs
sti
push
adc
or
jbe
sbb
sbb
cmp
cli
mov
stos
mov
or
mov
movsb
imul
movsl
push
lea
xor
popa
jl
aas
loop
les
push
mov
mov
mov
loope
arpl
cld
jmp
lea
lahf
cmp
or
pushf
rcr
pop
push
jle
jg
ret
jp
jno
mov
fwait
js
push
or
fs
in
cwtl
ret
mov
repz
cmp
je
dec
mov
fcmovne
mov
out
pop
gs
jns
add
in
popa
js
push
push
icebp
nop
dec
pop
outsl
pop
dec
dec
jecxz
pushf
mov
xchg
sbb
or
jecxz
inc
out
dec
push
fs
and
cmpsl
js
push
enter
aam
ljmp
dec
xor
clc
jge
or
and
inc
clc
lret
test
and
sub
icebp
lods
enter
mov
or
dec
mov
add
lcall
xchg
daa
push
dec
arpl
into
cmp
lods
or
inc
cmp
test
in
rorb
inc
lock
out
pop
mov
sub
subb
ljmp
mov
inc
fcmovb
insl
sub
cmp
push
cmp
dec
lock
dec
insl
mov
mov
mov
adc
xor
or
repz
adc
xor
mov
repnz
push
ljmp
cmp
mov
pop
or
inc
loop
sahf
push
stos
lret
adc
cmc
mov
loope
inc
pop
cli
xchg
jecxz
test
push
push
aam
bound
mov
jp
push
xchg
push
aam
dec
pop
mov
mov
iret
xchg
flds
mull
jne
lea
icebp
rorl
mov
mov
outsb
xor
inc
cmp
dec
nop
xor
orl
mov
pop
sbb
add
pop
pop
dec
jo
fwait
inc
lret
out
imul
jecxz
fiaddl
loope
add
dec
mov
sti
insb
push
outsb
and
test
lods
jmp
lods
rcr
xchg
ss
aas
cmp
jl
xor
adc
mov
test
jl
test
mov
int
push
push
sbb
jle
push
mov
sbb
out
outsl
fxch
adc
mov
mov
and
loopne
icebp
icebp
add
xchg
inc
jle
loop
mov
adc
lret
inc
sbb
push
mov
jl
in
test
scas
xor
lods
in
add
adc
mov
and
bound
repnz
add
or
adc
ret
mov
jmp
frstor
out
pop
pop
or
xchg
mov
jge
lock
nop
xor
test
ljmp
mov
lds
inc
adc
hlt
filds
ss
jmp
add
mov
fucomip
adc
or
insl
cmp
mov
pushf
movsb
push
push
dec
les
add
popf
push
shr
in
insb
test
push
enter
rcrl
add
imul
xchg
dec
int
xchg
push
sub
xorl
fs
xor
outsl
cld
test
jp
add
jo
shr
movsb
jmp
or
int
xor
mov
cmp
incb
or
enter
ds
xorl
fs
cmp
add
in
aas
push
in
cmpsb
jmp
or
pop
jo
cltd
arpl
mov
pop
movsl
test
push
mov
clc
test
cmp
in
out
mov
add
inc
arpl
test
jnp
or
scas
and
pop
jnp
out
test
inc
fisubs
ja
push
pop
lahf
jnp
fadds
push
pop
lcall
jg
inc
test
jb
test
in
lahf
jno
es
movb
cmp
sub
out
and
jmp
jecxz
jb
lcall
dec
ret
sbb
insb
xchg
mov
and
pusha
jae
mov
pextrw
insl
sub
lcall
lock
lods
push
xlat
add
mulb
shll
xor
outsl
data16
shlb
pop
sub
pop
scas
push
xchg
jo
xchg
sarl
fists
out
mov
xor
xor
fwait
scas
dec
out
cmp
imul
mov
add
iret
movsb
and
mov
pop
loopne
cli
scas
cmp
imul
mov
outsb
push
fcmovne
pusha
push
shl
pop
das
fstpl
push
jns
cmp
bnd
ret
jge
add
loope
pop
and
loope
mov
and
add
or
sbb
enter
mov
cmp
pop
mov
fwait
std
test
into
stos
in
rcr
mov
nop
addb
cmp
xchg
loop
repnz
push
clc
jne
push
lds
leave
mov
mov
adc
adc
sahf
mov
mov
inc
addl
sti
dec
mov
hlt
dec
jae
pop
fdivrl
cmp
cwtl
les
mov
push
inc
xor
sbb
std
sub
mov
dec
sub
pop
fwait
sbb
adc
mov
daa
sub
dec
inc
lods
loop
out
lods
mov
out
jl
xor
mov
push
aaa
inc
xchg
orb
mov
push
repz
aam
enter
push
pop
inc
jg
push
and
push
mov
add
pop
mov
mov
test
and
cmp
sahf
cmp
xor
jne
push
pop
rcll
lock
repnz
shrl
push
daa
xor
mov
out
push
fstps
dec
inc
sbb
sarb
nopl
imull
roll
test
insb
cltd
imul
out
xor
mov
ds
insl
pop
push
cmpsl
jbe
pop
hlt
cltd
sbb
movsb
daa
sbb
icebp
test
xchg
orb
je
gs
xchg
sbb
pop
enter
and
push
adc
xchg
mov
add
pop
lret
jg
sahf
sbb
inc
jl
gs
mov
inc
nop
pop
xor
cmc
adc
mov
lock
dec
aaa
ds
inc
xor
xor
sub
xor
incb
jae
xchg
sub
sahf
std
mov
push
sbb
sti
dec
push
sbb
sbb
or
aam
xor
aas
mov
or
add
sbb
pop
je
mov
jmp
dec
les
gs
xchg
pop
jo
jmp
mov
int3
adc
int3
jle
ss
mov
adc
cmp
scas
fwait
adc
ds
push
out
pusha
cmc
pop
rolb
add
into
jmp
outsl
fcoml
pop
idivl
out
sbb
lret
sub
push
inc
insb
in
leave
jno
dec
popf
inc
add
lods
mov
or
int
out
dec
ja
outsb
movsl
xor
scas
test
sbb
xor
fchs
hlt
mov
inc
clc
outsl
pop
jb
lods
pusha
scas
xchg
push
into
mov
xlat
add
and
fwait
sbb
loopne
ss
push
bound
cmp
or
mov
xchg
lahf
push
lahf
jo
mov
jl
jo
scas
aas
pop
outsl
inc
stos
notl
add
loopne
pop
cwtl
or
jo
jno
sub
test
push
stos
fdivrs
cmp
ds
cli
loopne
xchg
clc
loopne
or
ret
jae
cmpsb
test
stos
sar
mov
sub
dec
xchg
and
mov
insb
call
jmp
jo
fs
dec
mov
adc
pop
subb
pop
add
js
push
jb
add
adc
sbb
es
cmp
sub
jecxz
cmpsl
xchg
fstl
daa
adc
or
fisubs
fildll
mov
div
lea
lret
mov
daa
imul
sub
cmp
out
jmp
sbb
mov
xor
pop
aam
daa
fisttpll
out
fldz
pop
ja
lds
pop
jge
jnp
imulb
aaa
lock
sbb
scas
psubsb
adc
add
mov
aam
jae
das
pop
mov
xchg
sub
es
cmp
add
mov
cmp
sbb
or
cwtl
sub
adc
repnz
pop
shll
cmp
adc
inc
daa
imul
fdiv
or
inc
fnstenv
or
mov
and
and
jnp
jl
sbb
outsb
movsb
js
in
lret
call
cmpsl
adc
cmc
mov
aas
leave
das
sub
stos
popa
arpl
mov
pop
loop
dec
ja
icebp
popa
cmp
lret
movsl
pusha
into
lcall
call
push
dec
stos
inc
sub
jb,pt
jae
ret
mov
mov
jl
cmp
push
daa
push
lret
leave
aaa
lcall
pop
mov
sarl
inc
flds
adc
pop
jle
mov
shl
dec
jnp
cs
jmp
dec
sti
and
pop
outsb
mov
jl
imul
paddusb
cmp
dec
mov
enter
stos
in
lods
sub
or
and
stc
push
sbb
test
cmp
sbb
or
shll
lea
jns
pop
lea
push
mov
lds
movsl
xchg
lahf
cmp
and
or
or
iret
shlb
adc
insb
popa
mov
rcrb
loop
pop
dec
addr16
int3
pop
imul
push
int
dec
cmp
pop
int
xlat
cmpsl
xchg
iret
jo
add
loope
es
rorb
movsb
je
push
stos
cmc
fs
add
jb
fcompl
xchg
les
enter
in
lods
rcl
jle
dec
adc
shl
stos
and
in
lods
sahf
jo
pop
fdiv
push
outsb
xorl
xchg
scas
sbb
test
repnz
mov
out
xor
push
aaa
stc
pop
clc
dec
lock
inc
sbb
xor
popa
in
mov
enter
pop
cmp
ror
subl
lods
mov
cmp
or
leave
pop
add
popa
mov
adc
inc
and
push
out
or
bts
lret
fdivl
inc
push
mov
in
sbb
test
imul
sti
and
sbb
sub
push
sbb
xchg
mov
hlt
push
loope
aam
push
mov
ds
adc
push
out
popf
ret
mov
out
arpl
ja
inc
sahf
push
jb
xchg
sti
mov
inc
adc
into
and
lahf
pushf
aas
and
fstl
lods
popf
xchg
xor
in
out
test
push
push
cmp
lahf
addr16
pop
cli
shlb
inc
sub
cmpb
les
adc
shrb
xor
sbb
mov
and
push
pop
fldcw
push
cmp
mov
adcb
cwtl
es
sub
xchg
xchg
push
push
pusha
rcll
nop
out
inc
dec
aam
loopne
mov
adc
int
mov
push
mov
daa
je
in
ficoms
jl
pop
cmpsb
nop
in
mov
repnz
mov
xchg
pop
aad
sbb
dec
jg
cwtl
subb
aas
and
and
int
icebp
jg
rorb
adc
xor
or
pop
xchg
fsubs
daa
cmpsl
xor
xor
xlat
xor
call
iret
jns
mov
shll
push
cmp
and
mov
iret
sbb
iret
call
cwtl
pop
stos
out
pop
dec
sub
decl
scas
and
inc
and
jae
push
cmp
out
dec
mov
ror
fmull
xor
push
and
pop
jecxz
loop
mov
lods
gs
stc
add
add
dec
jmp
add
enter
sbb
sbb
daa
iret
iret
lret
fstp
cmpsl
dec
stos
mov
sbb
repz
push
sub
loop
jle
es
mov
cwtl
leave
jae
fistps
push
addr16
and
lock
aam
sahf
pop
mov
cmp
lock
xchg
js
or
andl
mov
nop
test
enter
inc
aas
test
mov
pop
sub
add
and
scas
xchg
push
jbe
fs
icebp
add
arpl
mov
mov
test
and
adc
nop
mov
leave
loopne
lock
mov
clc
repz
loope
sarl
fcomps
lock
lcall
cmp
fsubrl
mov
jg
sahf
xchg
aaa
push
pop
roll
mov
xlat
and
push
mov
movsl
jb
mov
insl
aad
outsb
aam
sahf
sub
mov
movsb
push
mov
insl
push
dec
sbb
push
xor
mov
or
cmp
jl
and
xchg
ss
scas
mov
scas
mov
mov
cli
addb
dec
xor
movsb
pop
scas
cmc
and
push
imul
xchg
enter
dec
ret
sub
mov
lea
imul
andl
inc
into
push
insb
fnstsw
push
dec
or
das
dec
dec
mov
nop
mov
xchg
jmp
test
xor
xchg
in
loope
lds
gs
inc
mov
and
pop
shlb
sahf
jne
mov
movsl
or
hlt
dec
pop
xor
lods
call
sub
adc
or
addr16
add
or
push
ret
sub
mov
pusha
add
and
pop
inc
cmp
jae
mov
or
fmull
dec
cmp
movsl
or
sub
and
mov
mov
or
push
mov
imul
adc
push
push
ret
sub
adc
stos
sub
dec
daa
mov
out
fstpt
xchg
fnstenv
in
pop
lock
sahf
addr16
fdivl
push
xchg
sub
es
daa
lock
cmp
jb
mov
sub
scas
dec
xchg
ret
sbb
es
lock
lock
cmp
aad
fidivl
filds
sbb
sarb
jnp
js
jno
jns
pop
fwait
push
mov
cmp
sbb
push
les
lcall
jno
mov
jmp
popa
sbb
test
in
fcmovu
or
into
sub
js
jnp
roll
mov
idivl
shrb
cmc
pusha
mov
and
inc
rolb
and
ss
loop
jge
aam
rol
in
mov
add
les
add
lcall
int
daa
jle
mov
repnz
xor
jmp
push
push
scas
cmpsb
pop
inc
add
inc
daa
test
clc
js
add
je
fmull
call
xor
mov
shl
fs
test
jae
aam
mov
fstps
xchg
mov
fs
inc
push
data16
loop
outsb
movsb
xor
or
addr16
jnp
sbb
pop
imul
outsb
xor
daa
int
xchg
cmp
outsl
or
mov
adc
mov
inc
or
or
pop
lret
mov
repz
aas
into
stc
ljmp
mov
cmpsb
jbe
fidivrs
push
pop
data16
and
xor
xlat
mov
or
xor
stos
data16
mov
ret
xchg
push
add
in
popl
loopne
aad
cli
cltd
das
js
or
sbbl
ljmp
ret
rorb
and
pop
in
out
xor
cmpsb
andl
jle
int
outsl
xlat
rcrb
cltd
xchg
fdivrs
add
xor
sbb
leave
pop
mov
or
jno
bound
xchg
sbb
inc
mov
push
xor
pop
sub
add
adc
sbb
cmc
mov
mov
mov
mov
jcxz
std
rcrl
mov
dec
or
fcompl
into
movb
aas
lea
push
jne
stos
lahf
pop
stos
test
popf
ja
sub
pop
or
cli
jb
clc
inc
pop
mov
inc
dec
pop
orb
mov
insb
mov
or
subl
mov
mov
and
add
push
dec
jecxz
push
cmp
in
in
sbb
lcall
add
jne
pop
cs
das
dec
xchg
add
shrl
aad
dec
mov
fwait
adc
in
inc
mov
sti
add
sbb
into
cs
add
sbb
jle
lods
iret
and
add
inc
sbb
adc
mov
cs
cltd
imul
aas
out
imul
jmp
lods
daa
cwtl
dec
lds
mov
inc
and
dec
stos
add
mov
repz
xchg
stc
test
adc
sub
hlt
enter
ret
iret
pop
xchg
ja
insl
adc
dec
divps
cmpb
in
shr
mov
rol
mov
and
lds
loop
lock
jle
int
pop
sti
rorl
aaa
and
cmp
mov
sub
stos
sbb
shlb
or
addr16
or
pop
mov
or
adc
and
adc
imul
add
pop
jns
lock
test
mov
lds
add
or
cltd
xchg
nop
lret
ret
ja
enter
pop
cld
mov
shll
ficoms
movsb
cmpsl
push
inc
pop
fwait
jp
int3
into
sbb
ss
mov
inc
xchg
scas
les
cmp
inc
or
pop
pop
stos
mov
sbbb
adc
or
in
xchg
out
lock
inc
pop
pop
rcrl
add
xor
sub
ret
repnz
in
mov
dec
pushf
enter
dec
cmp
scas
mov
aaa
add
loope
insl
out
mov
mov
fwait
mov
adc
cli
shlb
jmp
imul
inc
gs
test
xchg
arpl
push
push
push
pusha
cmp
or
inc
sti
push
lds
jbe
popa
aaa
mov
in
cmp
les
int
adc
or
cmp
jns
movsb
cmp
lock
ja
ucomiss
sbb
aad
mov
std
or
rolb
popa
insl
loop
stos
std
xor
sub
stos
mov
rorl
ja
push
cmpsb
mov
push
mov
in
push
repz
lahf
mov
cmp
push
sub
pop
lcall
in
mov
rcll
sub
jno
js
inc
jne
insb
int3
shrb
out
ficomps
setge
mov
and
sarb
dec
dec
xchg
ljmp
jnp
add
dec
xor
push
push
jge
cli
movsb
and
or
and
aad
cwtl
out
sub
pop
mov
add
push
hlt
int3
call
sbb
jge
or
in
sti
push
notb
jp
lods
incb
push
in
loopne
repnz
xor
in
or
test
inc
push
loope
push
adc
test
mov
fistpl
push
mov
fstpl
aad
push
gs
loope
lds
stc
fcompl
cmp
test
xorb
or
jge
push
fdivs
mov
ja
dec
adc
mov
std
lahf
pop
cmp
test
xchg
cmp
cmp
mov
decl
xor
mov
iret
ss
xor
arpl
jnp
jle
xor
pushf
adc
in
pushl
mov
or
lods
stos
or
jge
dec
jle
call
cmp
addr16
mov
in
and
decb
out
inc
and
aas
ret
xchg
push
mov
dec
es
sub
pop
ret
sbb
shlb
or
push
cmp
cltd
pop
mov
addr16
pushf
jbe
sbb
aas
ljmp
and
lods
adc
or
pusha
out
lret
movsl
ljmp
icebp
mov
inc
cmp
add
mov
lods
and
addr16
lret
jecxz
test
sarl
mov
test
jnp
dec
pop
out
adc
jnp
int3
jecxz
roll
sub
inc
shl
rorl
xchg
xchg
xchg
xchg
jmp
adc
bound
jne
out
bound
sub
mov
jo
xor
daa
and
dec
jge
sbb
rorb
ja
lock
jnp
outsl
mov
push
xor
cli
fdivrl
rol
and
loopne
mov
xchg
into
xor
and
dec
inc
les
cmp
mov
test
aaa
mov
mov
adc
adc
pop
out
mov
dec
inc
flds
xchg
ljmp
mov
sarl
out
aas
mov
mov
mov
imul
sbbb
cmc
inc
aas
dec
aad
or
jnp
cmp
jge
mov
add
push
imul
shlb
ljmp
cmp
into
mov
mov
and
nop
inc
pushl
inc
test
adc
stc
add
sbbb
enter
ror
jb
cmp
stos
add
jle
mov
push
jae
push
call
jb,pn
push
jae
mov
jbe
sub
jnp
cmp
nop
dec
ss
sbb
je
push
mov
hlt
lock
pop
or
fistl
jbe
push
add
xchg
lcall
inc
cli
jo
lds
stc
int
cmp
orb
inc
or
cmp
outsl
xlat
divl
fdiv
lods
dec
in
sbb
pop
imul
jo
or
lock
mov
lret
add
dec
ss
xor
js
scas
clc
sahf
stc
adc
out
xor
inc
cmp
pop
inc
cwtl
lret
mov
lcall
or
pop
jle
cmp
sbb
pop
fwait
mov
filds
lcall
in
adc
lret
sbb
pop
aad
movsl
push
inc
add
and
sub
fwait
mov
imul
dec
xchg
adc
pusha
leave
into
xor
adc
and
js
or
insl
fidivs
fs
les
pop
cmp
loopne
push
jno
xchg
ljmp
jae
mov
shrl
dec
shlb
fisubl
add
adc
fstpl
mov
cmp
dec
mov
shrl
cmpl
pop
imul
inc
add
nop
repz
cmp
mov
cmpsl
lcall
out
dec
outsl
cmp
add
jne
lret
fistps
repz
popf
stos
add
sbbb
js
clc
fidivs
sti
jnp
scas
iret
popf
cmp
lret
hlt
jecxz
and
mov
test
xlat
mov
sub
js
sbb
jmp
inc
dec
push
sub
or
dec
dec
sub
fcmovb
in
mov
sub
inc
mov
ds
cmpsb
mov
jne
adc
pop
xchg
cmovp
pop
popa
in
cmp
scas
inc
insb
adc
cwtl
std
mov
shll
rclb
sub
xchg
stc
or
ja
je
sbb
ja
fsubrs
maxps
incl
xchg
xchg
push
xchg
ljmp
add
jb
repnz
mov
mov
lret
adc
outsb
push
mov
daa
push
add
test
imul
jbe
out
jmp
cwtl
idivl
jno
push
mov
fdivp
xchg
mov
inc
push
ja
lret
push
imul
push
and
and
in
outsl
imulb
push
mov
aam
scas
sub
and
iret
flds
bnd
or
xor
test
mov
cli
mov
fistps
call
lods
mov
add
push
popa
sbb
movsb
pop
mov
loope
call
negl
je
shlb
outsl
xchg
fnstenv
add
faddl
push
das
in
daa
outsl
imul
cmpsl
pop
mov
push
call
adc
and
inc
stos
xor
xchg
inc
lea
and
dec
jmp
ret
xor
addl
fdivrl
cltd
jnp
or
pop
dec
xchg
outsb
insb
push
push
lret
sbb
or
xchg
scas
jge
mov
arpl
mov
mov
add
insb
filds
movsb
mov
jo
mov
mov
mov
push
cmp
cmpsb
xchg
sub
mov
ds
or
dec
add
xchg
or
inc
push
sub
adc
xchg
lret
stos
xchg
movsl
call
mov
das
setle
mov
stos
rol
jg
push
sub
jo
jmp
jae
je
scas
bnd
mov
inc
pop
add
out
push
test
call
mov
pop
jb
jg
fisubrl
test
sahf
jo
lahf
lret
or
xor
push
in
rcrb
and
add
aas
sahf
addr16
mov
sarl
in
cmpsb
jb
lret
cmpb
mov
cmp
pop
stc
add
addr16
fidivrs
faddl
dec
in
xchg
frstor
or
sahf
test
aad
pop
ljmp
fs
or
mov
inc
aam
fcompl
testb
and
mov
ljmp
dec
outsl
insl
mov
rolb
mov
sbb
lahf
mulb
fucomi
xchg
ret
cs
cmp
lret
gs
repnz
aas
mov
inc
adc
shrb
jne
mov
and
push
ret
and
int3
popf
jae
cmpsb
mov
sub
and
add
xchg
and
mov
jb
outsl
xchg
ss
cli
daa
xchg
adc
mov
das
clc
shl
sub
or
dec
sub
push
faddl
jmp
jl
sub
adc
add
cld
sbb
mov
insl
jbe
adc
repz
or
daa
push
mov
icebp
les
inc
out
xchg
or
imul
mov
ss
orl
arpl
stos
sub
outsl
shlb
jb
push
mov
and
push
sti
pop
push
scas
fdivrs
jne
sbb
in
mov
int
mov
aaa
pop
shlb
mov
mov
sub
test
mov
cmp
xchg
push
mov
scas
punpckhbw
adc
add
pop
pop
lock
mov
push
pusha
lock
enter
aad
int3
out
dec
pop
popa
cmp
mov
mov
addb
out
xor
mov
jp
mov
inc
cld
mov
aad
out
jmp
fwait
cld
push
jae
push
mov
dec
jp
add
cmp
es
pop
sub
xchg
and
mov
dec
mov
nop
ret
or
js
mov
cmp
push
or
popl
mov
data16
pop
leave
dec
add
loop
xchg
inc
pop
xchg
subl
daa
adc
mov
sub
bound
pop
mov
je
lret
fmull
sbb
cwtl
icebp
lcall
and
lret
test
lret
lds
xchg
lret
push
out
pop
mov
xchg
stc
pop
dec
into
mov
mov
cs
inc
mov
adcl
cs
jle
add
dec
mov
pusha
push
mov
lea
dec
orb
dec
shrb
mov
xchg
flds
cmc
xchg
xor
jmp
rorl
pushf
dec
icebp
insb
mov
je
fwait
and
inc
xchg
dec
pop
shrb
push
xchg
scas
dec
fbld
mov
call
push
mov
xchg
hlt
repz
sbb
xor
loopne
pusha
sbb
je
fsubl
popf
adc
andl
icebp
inc
lods
ljmp
mov
or
shrb
sti
cs
popa
sbb
push
xchg
xchg
jns
xchg
fxch
divl
lcall
sbbl
fabs
and
dec
jge
fistpl
scas
addl
sub
repnz
rep
push
push
enter
out
or
arpl
pop
dec
popf
xchg
sbb
inc
xor
jmp
mov
cmp
pusha
rolb
arpl
push
jmp
enter
sahf
pop
fiaddl
push
push
arpl
in
add
loope
into
ja
outsl
loopne
lods
cmpsb
aam
adc
fnsave
fwait
imul
fisubl
pop
inc
in
dec
xchg
arpl
js
mov
sbb
rcl
clc
sbb
jge
pop
mov
aad
dec
daa
cmc
out
test
test
push
pop
add
mov
sbb
addr16
dec
or
loopne
dec
dec
dec
mov
push
shlb
mov
ds
test
or
dec
cmpsb
push
jbe
int3
bound
sub
sub
xor
mov
dec
and
out
xchg
pop
push
popa
xor
add
fbstp
and
lods
cltd
daa
call
sbb
fs
mov
add
mov
outsb
rorl
fsts
popa
es
shr
xchg
mov
add
cs
and
dec
jbe
xchg
adc
jno,pn
cmp
outsb
and
mov
mov
pusha
inc
mov
sbb
dec
hlt
xlat
cmp
pop
mov
negl
add
mov
mov
and
fdiv
adc
pop
pop
add
inc
inc
lds
dec
xlat
jecxz
sbb
adc
fwait
aad
cmp
xor
mov
mov
ret
iret
addr16
ss
insb
jle
nop
mov
sub
and
jae
jns
cltd
mov
out
cmp
rcll
xchg
insb
jbe
imul
stos
int3
in
sub
stos
xor
pusha
cld
and
adc
or
cmp
cld
push
jg
push
ja
sbb
idiv
pop
xchg
mov
jmp
lcall
pop
cmp
imul
push
cltd
sub
push
in
adc
mov
nop
jmp
pusha
sub
sbb
daa
dec
inc
lods
mov
imul
mov
lods
mov
sahf
shlb
sarb
or
xchg
aaa
addl
mov
popf
mov
jge
xor
cmp
add
paddusb
scas
je
movsb
fwait
mov
aaa
sub
xchg
mov
int
jns
clc
ret
pop
mov
dec
and
mov
adc
sti
arpl
xchg
sti
aaa
or
rcl
sarl
xlat
mov
mov
mov
push
popf
fdivrp
addr16
add
sub
sbb
or
xor
mov
shrl
dec
loope
out
mov
cmc
sbb
pop
shrl
mov
jl
imulb
out
hlt
stc
int3
arpl
add
pusha
addr16
push
aas
jo
aas
ss
lret
leave
sub
outsb
adc
rcr
es
insb
dec
jmp
cltd
insb
insb
xor
outsb
shll
sub
leave
pop
out
cmc
ds
dec
scas
xchg
test
mov
test
sub
lahf
jae
movsl
or
jecxz
out
pop
fildll
xchg
sahf
mov
cwtl
in
pop
sub
bound
sbb
mov
ret
test
pop
jae
hlt
mov
add
enter
cmp
aam
sub
cmc
inc
repnz
les
pop
xor
or
inc
mov
sub
add
enter
inc
leave
sbb
ja,pt
jecxz
pop
mov
push
cwtl
push
cmp
xlat
and
mov
push
sub
rcpps
int3
sbb
es
stc
into
mov
pop
mov
inc
imul
mov
das
cmpsb
jb
je
and
cmpsl
jnp
addl
leave
ljmp
dec
xchg
adc
shlb
aad
int
test
std
int3
sarb
ljmp
xchg
mov
jns
mov
mov
ds
xor
mov
sub
sbb
push
sbb
xchg
out
sub
adc
scas
ret
and
in
dec
insb
fidivrl
outsb
and
inc
pusha
test
repz
mov
loopne
cwtl
shll
xchg
stc
enter
lods
sub
inc
imul
hlt
insb
aaa
mov
aam
clc
cld
adc
push
xor
xor
mov
in
xor
mov
cmp
and
xor
test
sbb
push
dec
add
dec
inc
mov
lock
movsb
aas
mov
stos
mov
or
jp
aas
fs
jne
jnp
cmp
and
daa
icebp
lret
dec
lcall
pop
xchg
aam
xchg
cmovne
fsubp
outsl
ret
sahf
jnp
fimuls
loope
insb
cmp
mov
add
xchg
std
cmp
scas
inc
cld
stos
push
inc
pop
xor
ljmp
sbb
xchg
sbbb
les
cli
push
mov
inc
push
adc
adc
mov
cmp
stos
sub
push
lret
mov
cmpsl
pop
hlt
adc
lret
mov
ret
jg
fdivrl
push
push
repnz
xchg
push
decb
cmpsb
pushf
jae
push
in
add
lcall
rcrb
cwtl
and
pop
dec
and
movsl
jns
cmp
cltd
sarb
push
jmp
cmp
pop
outsb
adc
ds
leave
cwtl
fcomps
jg
jp
into
add
mov
dec
sub
jmp
andl
rorl
loopne
inc
outsb
inc
add
mov
sub
adc
push
or
cmp
sub
mov
jne
mov
ja
fmulp
mov
mov
xor
xor
fstpt
cld
stc
jnp
rorl
ret
rolb
jge
adc
sub
iret
movsb
sbb
fcomps
jle
xlat
sahf
fwait
dec
aam
sub
loopne
int3
jl
repz
push
or
mov
push
rcl
repz
loop
cld
or
dec
sbb
xchg
pop
into
mov
and
leave
cmp
repz
xor
daa
adc
push
sub
sub
shrb
adc
xchg
inc
add
sbb
lods
movsb
movsl
xchg
mov
cmp
insb
dec
mov
pop
enter
lock
add
out
xchg
xorb
and
mov
dec
insb
outsb
cmpsl
or
xorl
mov
pop
insb
cmp
sahf
lea
fbld
idiv
jecxz
dec
jno
cmp
xchg
cmp
sub
cltd
xor
lret
push
das
sub
mov
mov
popf
lods
xor
fs
jp
pop
fistpll
in
sbb
jae
enter
stos
nop
xchg
sub
sarb
in
in
jmp
ja
js
lret
iret
fidivl
cmp
dec
sbb
cmp
xor
xor
mov
sbb
jmp
or
inc
insl
or
xchg
push
lds
cld
fwait
mov
loope
xor
xchg
cli
daa
pop
ss
insl
out
fstpt
cld
push
mov
call
ss
cmp
cmp
or
dec
ror
fistps
adc
push
lods
add
aaa
or
ljmp
call
jb
cmpsb
mov
mov
xchg
mov
fldenv
pop
adc
imul
rcll
aaa
mov
xor
les
pop
mov
scas
rcrl
outsb
push
clc
push
testl
imul
cld
nop
jns
push
rorb
inc
or
das
add
or
pop
clc
mov
addl
push
mov
rcr
inc
shrb
or
jmp
in
ror
addr16
sti
mov
das
mov
pop
shrb
xchg
xchg
dec
push
jl
pop
cmpsl
cld
int
mov
mov
mov
fsubl
stc
in
dec
xchg
xchg
imul
mov
cli
xlat
add
rorb
inc
pushf
or
mov
xchg
arpl
int3
pusha
loope
mov
divl
push
lahf
pusha
ljmp
loope
fnstenv
sahf
in
add
enter
pop
ss
fmuls
adc
cld
mov
lret
add
bound
dec
cmp
ja
fxtract
lods
sub
jp
pop
push
lret
test
daa
xchg
cmp
xchg
cwtl
jecxz
dec
aam
ja
cli
jmp
sub
inc
scas
mov
cltd
push
pusha
push
inc
add
clc
fistpll
ror
pop
outsb
mov
scas
jle
adc
jne
dec
push
fiaddl
cwtl
sbb
or
negl
jae
dec
jecxz
add
mov
gs
sub
dec
stos
nop
cmc
ss
rorb
cltd
mov
rorb
in
scas
shll
or
aad
sarb
repnz
adc
push
sub
mov
addb
rcrb
out
lahf
js
in
push
cmp
and
cli
divb
adc
in
xchg
dec
sub
aaa
cltd
jnp
or
push
push
ret
add
adc
adc
mov
add
sub
fsubs
sbb
stc
inc
jp
dec
jmp
sahf
out
push
jae
mov
fisttpll
sub
or
lods
cmp
lock
fmul
shrb
testl
testl
insb
push
mov
stc
mov
int
push
inc
xor
daa
stos
scas
xor
mov
pushf
fdivr
and
mov
push
pop
add
and
cmpsl
cwtl
fwait
or
pop
cmp
dec
add
fsubs
sub
cmp
aad
or
cmp
mov
adc
div
ljmp
cld
or
adc
stc
and
cmp
mulb
dec
lret
xchg
in
ljmp
popa
shlb
leave
fildl
cmp
nop
xchg
mov
std
inc
pushf
jge
arpl
add
les
jmp
fucomp
jo
xor
pop
out
icebp
shl
and
pop
sti
sub
jl
cld
adc
sbb
mov
inc
push
leave
sub
push
or
movsb
dec
xchg
movsl
push
adc
mov
enter
mov
fs
jecxz
or
lea
and
pop
push
jmp
mov
inc
sbb
das
jnp
rcl
or
in
gs
mov
hlt
add
mov
iret
or
mov
mov
loop
mov
sub
adc
out
xor
std
mov
push
repz
data16
fdivs
xor
loopne
jge
inc
stos
into
fs
movsl
aas
leave
xchg
lods
inc
xor
bound
fldt
or
mov
or
ja
adc
push
mov
mov
push
or
pop
ja
sahf
cmp
and
add
enter
dec
push
inc
adc
test
in
rorl
mov
push
mov
push
xchg
in
in
mov
lret
fs
push
push
out
adc
arpl
lret
rorl
mov
and
ja
add
inc
cltd
or
shlb
fidivrs
push
cmpsb
jne
pop
inc
or
cli
ljmp
addr16
fmuls
jmp
mov
addr16
sub
mov
ror
and
std
orl
cld
adc
popf
pop
popa
movsb
push
aas
sub
dec
popf
lods
jg
mov
xlat
cld
cli
sub
cmp
xor
shl
inc
mov
loop
lea
add
mov
pop
add
cmp
js
scas
pop
adc
xchg
mov
sbb
es
imul
push
adc
std
cli
cmp
lods
fisubs
test
push
ss
sub
jno
pop
in
and
outsl
xor
xlat
mov
leave
xchg
insb
mov
dec
push
jae
jne
jl
push
fcompl
sub
daa
add
std
iret
xchg
enter
add
or
ret
mov
jae
ret
xor
pop
cmp
repz
xchg
outsb
nop
mov
adcl
sbb
and
and
pop
sbb
mov
adc
mov
cmpsl
push
rol
jmp
xor
jg
les
jge
jp
sbb
in
dec
pop
mov
push
add
push
push
add
ss
fdivs
jne
cld
inc
fsts
fwait
clc
dec
push
inc
add
mov
dec
jne
xor
fldt
into
dec
pop
mov
andl
cs
int
sub
loop
jle
mov
fwait
lds
pop
insb
ja
lahf
sub
inc
clc
dec
dec
dec
das
test
or
mov
cmp
sahf
repz
mov
movsb
pop
sub
jge
cmp
in
jecxz
mov
jmp
lods
icebp
xor
inc
test
mov
jmp
cmp
cmpl
sub
sbb
jmp
daa
dec
addl
lods
sbb
fistpll
loop
call
mov
fs
push
dec
pop
shl
dec
mov
xor
mov
enter
cwtl
insb
xor
icebp
fsubrs
leave
xorl
mov
in
xor
jmp
imull
arpl
adc
flds
sbb
lcall
add
shll
repnz
loopne
add
mov
add
leave
pmaxsw
inc
test
fwait
sub
and
lock
loope
idivl
fimull
sub
push
hlt
inc
mov
lcall
pop
addb
cmp
mov
cltd
rclb
xchg
xchg
dec
push
mov
or
push
popa
and
xor
cltd
in
fldt
sbbb
cmp
mov
testb
mov
mov
call
daa
push
pushf
popf
or
mov
sbb
or
or
inc
jecxz
idivb
ss
shrl
stc
aaa
mov
je
int
xchg
xchg
sub
add
aas
stc
in
aaa
daa
sub
xchg
jecxz
movsl
repnz
push
popf
xchg
push
bound
out
mov
and
cld
mov
mov
into
fwait
push
lahf
movsb
inc
fnstenv
cmp
jns
call
mov
or
or
sarb
rcr
imul
pcmpgtb
popf
mov
xor
lcall
lds
lods
imul
js
out
jmp
bound
bound
popa
xorl
and
sub
inc
data16
add
adc
cmpsl
dec
xor
mov
inc
push
jb
push
fsubrs
sub
jge
movsb
pop
lret
inc
inc
or
je
scas
sbb
daa
in
cmp
inc
out
mov
sbbb
insl
sub
fldl
pop
lods
ret
lcall
cs
xor
int3
in
aaa
xchg
mov
dec
xor
inc
aam
test
xchg
mov
and
int
cmp
or
les
jae
jl
and
sub
cmpsb
out
iret
loopne
jne
cmp
je
out
in
adc
enter
cmpsl
lret
mov
xchg
gs
insl
push
sub
jno
shll
push
adc
negl
das
push
out
fildll
je
mov
dec
cmpsl
mov
or
lds
ljmp
mov
fisubrs
aad
outsb
rolb
fistpll
shll
divb
outsb
out
or
ljmp
outsl
jnp
fildll
in
repnz
jp
imul
fsts
pop
inc
stc
addl
mov
aad
sbb
ljmp
jmp
call
shrw
mov
dec
imul
vmread
insb
jns
roll
add
out
push
cmp
xor
test
mov
ljmp
jae
jecxz
xor
mov
in
mov
in
inc
sub
xchg
pop
jae
jae
outsl
push
jo
push
pop
movb
xchg
mov
ret
push
nop
stos
push
jnp
xchg
push
mov
mov
add
pop
out
sub
adc
xchg
dec
inc
addr16
pop
push
xchg
data16
adc
je
test
xchg
jne
arpl
test
loope
mov
mov
scas
dec
popf
jnp
mov
out
aad
enter
sarl
add
daa
or
and
nop
xor
jle
aas
rolb
push
xchg
sub
icebp
mov
and
push
clc
shll
pop
loop
out
sub
jbe
repnz
lds
xchg
aad
sbb
mov
cmp
cltd
int3
hlt
imul
cwtl
insl
or
aad
insb
fldt
test
jo
inc
xchg
mov
js
cmpsl
insb
sub
shl
aam
repnz
lea
movsb
push
mov
xchg
ss
cmpl
lret
enter
cmp
lods
int
mov
mov
adc
jno
jb
es
mov
or
rol
sub
xor
cmp
mov
add
push
pop
rcrl
sbb
jae
xchg
adc
std
test
fcoms
sahf
out
test
in
push
std
lret
add
and
mov
shl
test
sahf
lock
iret
jns
gs
or
shrb
mov
or
lds
shrb
in
adc
jg
orl
push
jo,pn
ret
cmpsl
inc
repz
push
loop
adc
cli
int3
dec
sub
lods
cmpsl
insl
mov
ljmp
out
out
mov
dec
mov
ja
xor
imul
cmpsl
pop
scas
hlt
push
mov
inc
xchg
fsubl
sbb
add
push
xchg
push
add
add
pop
cmp
add
mov
not
mov
xchg
movb
dec
orb
or
push
push
ds
aam
inc
loopne
and
faddl
pop
insb
adc
xor
or
mov
lret
sub
ds
mov
pop
inc
scas
mov
push
stos
inc
sub
or
cmpsl
popa
test
mov
sbb
sub
dec
or
jmp
rcll
ja
fildll
arpl
lods
lds
addr16
jmp
and
test
leave
xor
cmp
pop
xchg
jne
das
stos
mov
cmp
js
das
stos
pop
mov
cmpsb
lock
push
int3
addr16
iret
fldt
ss
setns
jbe
ret
in
inc
or
fdivrs
mov
testl
and
and
mov
inc
lcall
mov
pop
sub
cwtl
aam
mov
ss
jecxz
sub
orl
out
mov
fwait
push
cmp
lea
dec
adc
dec
in
add
inc
mov
adc
enter
sbb
sbb
arpl
inc
int
mov
jle
lret
loop
divb
rolb
sub
and
mov
out
std
or
xor
mov
call
pop
and
mov
insl
sahf
fisttpl
sti
push
lods
mov
sbb
rcll
add
es
pop
ret
outsb
mov
dec
adc
adc
push
mov
lret
mov
jmp
dec
or
xchg
nop
fs
mov
pop
sub
sbb
rcr
aad
cld
pop
pop
xchg
clc
pop
mov
xchg
jl
push
daa
pop
jge
stos
jbe
out
adc
ljmp
test
mov
and
mov
mov
data16
jo
nop
sarb
fcompl
loop
pop
mov
clc
or
and
insb
popf
push
fsubs
stos
ds
loope
mov
testb
mov
fsubrs
mov
cmpsb
mov
sub
pop
sbb
jne
movsl
sbb
loop
arpl
cmp
xchg
lea
mov
add
ret
cs
inc
aam
jmp
push
sahf
addl
dec
test
xchg
dec
pop
jecxz
inc
push
jge
sbb
cs
fwait
sbb
repz
cmp
sbb
lods
jae
test
loope
imul
out
mov
or
mov
fidivl
std
call
pushf
adc
sub
lret
xor
es
rcl
mov
test
push
cmp
sbb
fdivp
xchg
andl
xchg
jge
cmp
ret
outsb
or
cli
cmc
push
or
pop
and
movsl
mov
mov
outsb
or
loope
mov
push
jbe
rorl
inc
push
xchg
stos
push
inc
adc
add
loopne
sub
pushf
xchg
xchg
repz
stc
push
and
pop
in
sarb
pop
mov
sar
out
dec
pop
inc
jp
sti
fldenvs
orl
shrl
outsb
ja
lret
outsl
dec
cmp
and
sbb
mov
push
lds
mov
xchg
aaa
sub
push
adc
cmpsb
fmul
mov
mov
xor
add
insb
inc
pushf
pop
push
cmp
fnsave
out
popa
dec
mov
dec
in
pop
test
test
test
jp
push
jns
mov
xor
cmp
and
ret
jo
xor
jbe
inc
xor
rcr
fnstsw
shll
cmpsl
or
aaa
out
popa
lret
fcom
loopne
insb
fmull
in
incl
sub
lcall
inc
es
in
rcrb
sub
pop
lds
dec
push
cmc
or
fsub
je
add
jp
test
rcr
add
push
cmpl
fld1
sub
inc
dec
and
out
adc
faddl
rcll
cmc
push
mov
push
fmuls
mov
adc
cmpl
sbb
push
mov
xchg
or
push
pop
fnstenv
xchg
notb
push
xchg
adcb
xchg
std
rcll
stos
push
add
imul
push
xchg
adc
repz
inc
mov
int3
lret
and
adc
push
add
mov
jns
mov
pop
stc
push
mov
sahf
roll
cmp
inc
out
rclb
pushf
xchg
or
out
mov
flds
mov
mov
sub
outsl
xchg
icebp
jns
aam
hlt
xchg
or
rolb
xorl
xchg
fiadds
jle
mov
xchg
mov
movsl
push
repnz
clc
inc
lahf
hlt
lock
xor
subb
sub
data16
mov
lock
leave
aam
mov
or
popf
pop
or
iret
mov
stos
cmpsl
mov
add
push
push
shrl
subb
pop
pop
sub
test
aas
mov
aad
sub
lds
jmp
iret
je
out
mov
mov
insl
test
push
ficompl
push
lds
xor
leave
lcall
inc
mov
sti
pop
xchg
out
push
repnz
sub
rcll
jmp
or
pusha
rol
mov
ffreep
jnp
daa
cmpl
jp
or
mov
lret
icebp
xlat
pop
andb
mov
movsb
repz
add
aas
ljmp
add
cmp
sub
push
pop
xchg
jns
push
xchg
pop
xor
loopne
outsb
push
lds
mov
loop
test
and
push
jmp
in
mov
add
jne
dec
insb
push
shr
xchg
cs
scas
cmp
stos
push
nopl
jae
mov
mov
jmp
jae
lret
adc
pop
rcl
cmc
mov
adc
loopne
movsl
push
sbb
ret
cmp
add
inc
sbb
mov
jecxz
ljmp
dec
pop
call
push
inc
in
clc
sbb
cmpsl
lcall
mov
dec
push
cwtl
call
sbb
mov
movsb
mov
jb
sub
pop
pop
xlat
lcall
xor
sub
int
cmp
inc
inc
mov
mov
push
and
cmpsl
cmc
bound
dec
push
pop
xor
cmp
stos
xchg
mov
jb
call
sbb
sti
and
arpl
loopne
sub
sar
test
clc
jp
sti
popa
xor
fcmovnu
paddb
out
sub
cmp
mov
fimuls
aaa
push
out
jp
out
push
xchg
leave
outsb
cltd
and
in
adc
adc
push
pop
inc
lahf
pop
pop
dec
mov
fisubl
cmp
jmp
pop
loope
sub
dec
xchg
jae
popa
fsubrl
mov
sub
outsl
ds
add
arpl
outsb
sub
in
clc
dec
xor
xchg
xor
in
outsb
cmpsb
or
pushf
mov
dec
push
int3
pop
loope
call
mov
add
repnz
push
or
mov
or
pushf
sbbb
es
jge
dec
aas
dec
les
fcmovnu
out
ja
jg
rcrl
scas
mov
outsl
test
orb
and
aam
movsl
adc
test
out
cmc
aam
pop
add
inc
movsb
pop
in
test
sbb
lock
bound
sbbl
pusha
adc
icebp
xchg
sbb
and
pusha
out
push
je
mov
repnz
xor
filds
pop
push
jnp
fwait
lret
inc
xor
xor
sub
js
andl
test
mov
mov
push
or
sub
xorl
arpl
adc
iret
and
or
fwait
jl
mov
push
fwait
add
adc
ret
sbb
shrb
stc
cwtl
sbb
addr16
push
mov
jbe
cmpsl
lahf
push
xor
dec
ret
push
js
or
test
repnz
adc
sub
mov
xchg
aam
insb
sub
test
jnp
scas
jge
push
jp
mov
push
dec
or
pop
scas
push
hlt
arpl
mov
add
push
enter
pop
mov
call
shlb
stc
dec
push
aam
mov
testb
or
hlt
ja
dec
std
sbb
mov
mov
add
dec
fistpll
scas
add
mov
enter
rclb
inc
sub
lret
jbe
les
pop
jp
test
insb
sbb
imul
popa
dec
cmp
fildll
fwait
sbb
push
mov
push
sub
fiadds
xchg
lret
or
popa
dec
movsl
sahf
out
xor
push
sbb
jge
cmpsb
movhps
inc
add
adc
clc
jle
out
in
xchg
xchg
mov
lret
push
popa
ficompl
and
push
sbb
push
sti
mov
pop
jnp
push
ss
sbb
and
rolb
push
inc
popf
xorb
lcall
pop
stos
pop
or
jle
or
sbb
je
sti
xchg
mov
test
insl
push
xchg
and
inc
xchg
jns
popa
push
nop
stos
or
pop
movsl
pop
dec
or
mov
pop
sub
jmp
out
or
sub
cwtl
push
test
cmp
dec
mov
push
into
cmpsb
insb
test
mov
or
lods
jl
dec
xor
dec
push
cmp
adc
inc
xorl
cmpsb
ljmp
mov
adc
insl
sbb
xor
addr16
cld
adc
ja
rcrl
stc
adc
cmp
mov
nop
in
xor
out
ss
xor
mov
add
mov
mov
loop
imul
sub
aam
or
into
adc
add
insb
decb
pop
aam
subb
jmp
rorl
fisubrs
lret
cs
fdivrs
imul
repnz
notb
lods
or
scas
sahf
mov
and
lods
xor
and
sub
dec
pop
mov
mov
rcrb
sub
icebp
rcrb
xlat
xchg
jo
cmp
pop
in
scas
in
add
add
and
scas
insb
sub
cmc
xchg
insl
xor
pop
fnstenv
cmc
jo
lret
arpl
loopne
aad
jecxz
addr16
sub
out
sbbl
add
ror
xchg
pop
sbb
fiaddl
out
mov
sub
clc
fistpl
add
mov
lahf
push
xlat
sbb
cmpb
sti
sub
jo
stc
sbb
sbb
jo
pop
sub
nop
cli
iret
rcrb
jge
pop
add
ret
xchg
inc
add
push
dec
cmp
sahf
mov
movsb
mov
push
mov
out
cltd
or
lcall
cld
jbe
xchg
popf
push
mov
xor
xchg
mov
inc
test
enter
js
sbb
lea
mov
mov
cmp
adc
into
mov
repz
fstpl
dec
aad
or
std
dec
dec
mov
fnstsw
dec
sti
rol
mov
jne
fs
fisubrl
adc
mov
push
lret
ficoml
push
add
loope
mov
daa
lds
add
dec
and
test
add
fs
and
mov
in
sti
xchg
xchg
mov
cmp
or
pop
pop
jne
and
shrb
pop
dec
rcl
out
and
or
and
addr16
into
or
jno
or
test
nop
aas
push
push
shrl
jmp
mov
mov
jge
repnz
mov
sbb
push
loop
add
adc
loopne
xchg
cmp
sbb
adc
gs
mov
ror
or
call
sbb
js
daa
cmc
pop
popf
mov
and
pop
hlt
and
adc
or
sti
jo
imul
push
sub
std
jg
push
ss
push
add
sub
add
cld
adc
mov
shlb
inc
leave
push
int
jb
ret
mov
out
test
push
add
icebp
push
hlt
jmp
mov
inc
shl
dec
repz
xor
cmpsl
xchg
cmp
mov
fiadds
iret
aam
repz
lahf
ss
and
xor
mov
lcall
pushf
push
loope
xor
xchg
bt
cmpsb
cmp
inc
sahf
mov
fmuls
pop
sub
push
testl
popf
mov
out
mov
jge
std
mov
dec
inc
jb
out
and
jnp
cmc
lock
push
call
jne
and
out
mov
outsl
push
orb
jns
movhps
mov
fsin
inc
fucomip
jg
xlat
or
mov
rcrl
add
and
mov
outsl
jmp
cmpsb
std
pop
cmp
nop
push
lret
outsb
nop
push
mov
inc
xchg
das
mov
jbe
lds
mov
cli
enter
xor
in
test
xchg
arpl
mov
addr16
and
ret
and
in
in
fsubr
mov
repz
push
push
push
addr16
fmuls
fwait
add
into
add
cmp
out
sbb
mov
jb
push
fstp
cmpsl
xchg
es
mov
adc
xchg
jbe
ret
jge
je
add
or
in
imul
movsb
pop
les
inc
test
mov
jae
xor
xchg
pop
jle
loopne
popa
xchg
dec
dec
sbb
mov
aad
sbb
inc
mov
fs
fstl
and
mov
test
sti
pavgw
cmp
xor
jns
push
sbb
es
jecxz
cmc
stc
aas
xor
rolb
je
cmp
jne
in
xchg
jne
dec
mov
pop
xor
cmpsb
push
int3
inc
test
ljmp
xchg
stos
dec
fidivl
sub
idivl
stc
cltd
xor
adc
cs
push
or
ljmp
mov
dec
pop
aam
push
sub
xchg
insb
xor
dec
jnp
loop
lret
dec
pop
add
xchg
xchg
pop
arpl
sub
mov
out
data16
or
rcll
in
and
ja
mov
out
das
dec
mov
push
mov
jo
pop
adc
adc
lret
rcrb
mov
mov
inc
pushf
scas
push
jge
push
pop
xor
or
test
leave
pop
push
mov
pop
fsub
xor
mov
pop
mov
add
int
mov
push
hlt
adc
dec
or
pop
repnz
xchg
aad
bound
dec
lods
cmp
inc
xor
mov
leave
mov
fidivs
test
outsb
sub
shll
mov
xor
pop
mov
cmp
xor
pop
nop
add
not
out
aas
inc
mov
int
mov
test
lret
mov
mov
jp
sbb
adc
rclb
mov
pop
jecxz
outsl
imul
pop
mov
loop
jecxz
jbe
pop
out
sub
mov
pop
sub
dec
pusha
xor
xchg
lods
cmp
push
out
cmp
loop
jb
mov
dec
in
nop
out
nop
icebp
scas
mov
jb
mov
test
push
push
adc
ljmp
mov
and
testl
push
mov
ret
and
into
and
loope
adc
loope
inc
or
push
shlb
mov
push
xlat
ja
inc
clc
fstl
nop
sarl
fmull
jecxz
sub
jle
fnstcw
mov
or
mov
cmp
xchg
jbe
dec
fbld
dec
fbld
jnp
mov
rcrb
mov
dec
mov
in
scas
filds
imul
cwtl
push
cmc
push
adc
adc
push
pop
cmc
aaa
arpl
jae
push
sbb
xchg
push
jne
cmc
jne
fistl
mov
jne
div
lods
scas
mov
cmp
add
int3
cli
out
and
mov
js
inc
add
cltd
sub
mov
xchg
sub
jb
jg
fstl
js
stos
xor
pop
inc
testb
imul
mov
dec
cmp
and
jecxz
dec
xchg
jnp
daa
aas
insl
popa
mov
adc
mov
daa
insl
call
in
testb
dec
cs
xor
xorl
xchg
stos
cmp
popf
pop
add
mov
arpl
mov
sbb
adc
cmpsb
xor
add
jbe
push
cmp
pop
mov
nop
rol
ret
push
les
gs
jne
jno
lahf
cmp
mov
mov
into
sbb
push
shl
je
mov
enter
or
sbb
push
aaa
popf
xor
mov
fisubl
and
outsl
loop
adc
cmp
pop
add
addl
sarb
aad
in
mov
lahf
icebp
xorl
cmp
sbb
inc
sbb
imul
movsl
sub
dec
jns
mov
je
stos
mov
jb
xor
cmp
pop
dec
aam
out
sub
repnz
lds
adc
rorb
and
setae
cwtl
cmc
or
adc
xchg
into
mov
into
movsl
sbbb
sbb
push
aam
cmp
pushw
cmpsl
ss
mov
jb
in
movsb
jno
mov
fs
scas
and
mov
std
pop
js
in
push
stos
lods
fidivrl
sub
push
push
int
sbb
inc
mov
mov
push
repz
cmp
sbb
inc
lods
xchg
mov
aad
mov
pop
mov
cmpsl
pop
jl
pusha
ds
cmpsb
dec
movsl
pop
cld
or
sti
mov
mov
test
test
das
inc
inc
xchg
sub
insl
sbb
lret
cmp
jno
inc
cmp
inc
pop
xor
mov
sub
jo
push
pop
lock
add
inc
mov
out
push
movsl
fisubs
lret
nop
jl
cmpb
push
insb
xor
dec
cld
xchg
mov
outsl
ficompl
jbe
das
mov
lods
xor
add
ljmp
repz
pop
enter
sti
cltd
popf
loopne
hlt
les
xchg
mov
inc
cmp
std
cmp
aam
sarb
cli
aaa
adc
sbb
sbb
insb
jb
gs
mov
aad
dec
outsb
mov
lahf
addr16
jnp
adc
cmp
imul
fsubr
div
lock
push
lods
cmp
jl
test
sti
sub
and
andb
cmc
mov
out
lods
xchg
dec
aam
xchg
imul
xchg
jp
cmp
out
cmp
fistpll
or
dec
adc
test
leave
stos
enter
in
mov
out
stos
in
int
icebp
adc
clc
push
adc
pusha
int
jmp
jmp
sbb
ret
push
sbb
out
lret
xor
sti
push
xchg
clc
das
jl
jae
aas
sbb
xchg
ja
movsb
add
adc
ret
xor
test
xor
inc
aaa
out
inc
mov
jo
cmp
fnstsw
ljmp
lret
daa
incb
clc
ret
cld
and
xor
inc
dec
mov
ljmp
xor
mov
and
mov
out
in
jno
pop
xchg
ja
lahf
lods
or
adcb
mov
enter
leave
fadd
cli
xor
xlat
icebp
ja
xor
jg
jo
or
test
and
arpl
test
shlb
sbb
in
inc
loopne
pop
lret
andl
mov
inc
mov
adc
cmp
insb
fs
cwtl
mov
jl
insb
push
and
repz
test
aas
les
or
movsl
pop
xor
js
sbb
addl
pushf
in
out
lret
sub
lret
call
fdivrs
or
ja
in
inc
or
rcrl
xchg
add
movsb
pop
fnstenv
push
push
xchg
fadd
stos
jns
pop
sbb
sbb
adc
push
ret
data16
mov
cltd
dec
xorl
aam
sarl
sub
cmpsl
dec
jmp
clc
inc
sahf
fmull
mov
mov
or
push
bound
jno
push
jp
add
out
mov
inc
inc
js
gs
pop
cmp
arpl
icebp
ret
stos
adcb
mov
xlat
push
cs
aas
imul
fcmove
imul
int
out
lahf
sbb
xor
loopne
ds
mov
push
sbb
mul
fiadds
sar
jnp
dec
lret
dec
test
daa
daa
pop
lahf
push
and
or
xor
sbb
and
cmp
sbb
lcall
movsb
push
xchg
hlt
mov
imul
lods
imul
xchg
add
push
jne
and
add
mov
jmp
fadds
inc
mov
mov
aam
lock
ja
adc
rcll
mov
sarb
lret
xchg
mov
pop
loope
loop
cmc
sub
dec
sub
add
jle
mov
inc
cs
adc
lcall
shrl
cmpsl
lods
cmp
shl
push
loopne
dec
pusha
dec
ret
or
add
mov
xchg
lds
fdivl
adc
push
jecxz
test
sbb
mov
cmc
gs
int
lea
in
sti
push
xchg
in
shrl
mov
sbb
sar
add
popf
and
dec
or
int
sub
les
sub
xchg
lea
dec
fcoml
sbbl
and
into
adc
dec
outsl
xor
jg
mov
lea
jg
xchg
fwait
repz
xor
cmp
sbb
mov
adc
push
fs
subb
xchg
test
mov
xchg
dec
sar
lcall
sbb
sbb
and
or
sub
jne
jnp
icebp
rcl
jo
cmc
ret
inc
cmc
jno
push
nop
mov
push
jo
jge
inc
adc
mov
outsl
repnz
aam
fsubrs
dec
jge
ficompl
xchg
call
dec
scas
in
jle
loopne
adc
jmp
xchg
add
sti
pop
push
xor
decb
xorl
in
ret
loopne
mov
dec
mov
das
shlb
jae
push
sbb
jge
imul
cmp
outsb
add
iret
jo,pt
mov
test
jnp
mov
clc
cltd
scas
clc
pop
ret
inc
js
xchg
leave
push
setl
mov
out
js
fsin
outsb
jle
sub
into
dec
clc
jnp
dec
idivl
test
mov
or
lret
push
clc
popa
jo
bnd
cli
dec
push
xchg
int
decb
jb
pop
cltd
mov
mov
mov
popf
jbe
pushl
xchg
mov
cmp
leave
xchg
inc
testb
testl
mov
add
gs
and
int3
jg
jl
test
in
mov
xor
sub
xor
mov
push
cltd
push
loopne
push
mov
ret
adc
pushf
ret
das
rorb
add
fadds
das
push
cmp
add
add
inc
pop
hlt
rorl
ret
sub
and
icebp
jp
sub
scas
mov
cmc
cmp
xchg
cmp
mov
in
sub
inc
xchg
mov
lods
ljmp
mov
ds
mov
mov
lock
sahf
int3
cmp
ja
xor
cltd
call
pop
jo
arpl
push
lock
xchg
jb
rclb
test
mov
orl
aaa
gs
sbb
inc
jne
mov
fnstenv
mov
and
loope
imul
mov
and
add
add
insl
adc
pop
out
push
ror
sub
mov
in
loope
mov
cs
fcos
xchg
push
adc
sub
sbb
cmp
repz
cmpsl
fsubs
out
dec
std
adc
jnp
ds
dec
fucomip
xor
lock
fs
imul
or
cmp
mov
inc
test
pop
pop
mov
adc
pop
xchg
out
mov
fsubr
lret
mov
idivb
xor
xchg
aam
ficomps
inc
push
mov
out
inc
cmpsl
call
mov
test
lods
mov
add
lock
lcall
int
adc
jg
ljmp
mov
fistpll
scas
movsl
xor
imul
int3
dec
xchg
jle
jae
aas
push
lcall
stos
loop
push
add
dec
pop
mov
mov
dec
test
jo
out
fstl
cs
adc
data16
jae
inc
jecxz
aas
and
inc
pop
data16
mov
sbbl
cmpsl
fbstp
dec
mov
mov
add
and
push
pop
or
sbb
lret
pop
pop
jno
fwait
subl
outsb
out
fsts
xchg
mov
sub
inc
in
jmp
arpl
das
adc
jl
ljmp
jmp
fsubl
adc
mov
inc
lock
sub
pop
and
push
jle
es
sbb
cmovns
int3
fidivs
fisttpll
mov
leave
mov
out
dec
aaa
sbb
sahf
movsb
push
out
adc
mov
dec
mov
int3
pusha
inc
cmp
dec
or
xchg
insl
fwait
sub
or
push
dec
imul
cltd
mov
xchg
sub
leave
sbb
loop
mov
jb
mov
or
fildl
test
call
xor
jns
mov
lods
mov
jb
out
stos
mov
mov
aam
xchg
xor
add
sti
sub
inc
movsl
sub
pop
std
xchg
mov
dec
pop
je
test
pop
fs
xor
sbb
stos
jg
add
lret
push
outsb
iret
mov
xchg
jno
je
scas
cmp
and
imul
xchg
cmc
setb
cmp
roll
into
jno
bound
sbb
fidivrl
sbb
mov
xchg
cmp
loopne
mov
rol
lods
into
data16
adc
rcrb
xchg
lahf
xor
je
sbb
or
mov
fistpl
cmp
push
int3
mov
mov
cs
mov
stos
fucomp
loope
xchg
std
nop
sub
inc
lods
mov
dec
fcompl
pop
divb
adc
mov
inc
popa
add
inc
ja
and
lods
sbb
ret
mov
bound
notb
sbb
or
pop
cmp
jo
out
mov
jb
movsl
sbb
gs
sbb
cmp
push
ret
fiadds
out
mov
iret
imul
mov
pusha
xchg
outsl
aaa
inc
adc
push
mov
pop
lret
sbb
pop
jne
xchg
or
gs
sti
or
int
pop
push
xor
and
mov
and
aad
icebp
lahf
mov
lahf
inc
ret
add
xchg
call
ljmp
push
pop
adc
cli
dec
sbb
repz
cmp
dec
push
push
int
inc
repnz
pop
pusha
pop
lret
enter
fsubp
jmp
jecxz
lea
test
aam
sub
jbe
xchg
movb
loopne
imul
repnz
stos
shrb
das
cld
scas
xorl
js
inc
adcb
gs
stos
or
mov
pop
iret
push
sti
adcl
jo
cmc
std
mov
inc
cmp
sbb
cltd
add
jle
dec
jle
roll
sub
mov
sub
mov
fwait
and
cmpsb
jno
sbb
xor
jmp
push
aaa
dec
mov
push
or
pop
js
add
dec
je
sbb
push
inc
or
lcall
or
mov
push
pop
cmp
mov
loope
sub
lds
add
lea
dec
mov
cwtl
sub
jmp
test
fcmovbe
das
push
lea
adc
sub
lahf
loop
lds
decl
mov
sub
sub
mov
push
fs
pop
inc
stc
jge
and
or
xlat
sub
cld
pop
sub
pop
adcb
imull
jae
lret
imul
add
xor
or
sub
xchg
fcoms
lret
movsl
rorb
push
or
sub
push
push
cmp
mov
pop
roll
mov
dec
call
or
test
mov
jl
test
lock
sahf
ljmp
ds
js
pop
popa
fdiv
dec
add
sbb
inc
mov
xlat
xor
sub
jg
mov
cld
iret
mov
jg
daa
and
cmc
dec
sbb
les
mov
js
repz
push
dec
xchg
adc
push
int
loope
inc
pop
sub
arpl
mov
jbe
push
insb
pusha
add
loop
rolb
jbe
add
ljmp
scas
addl
or
dec
stos
loop
push
sbb
enter
push
pop
or
mov
xor
jp
pop
std
xchg
push
xor
movsb
std
clc
push
sub
inc
jg
pop
push
pusha
adc
sbb
pop
sub
mov
lds
mov
sti
pop
pusha
mov
mov
pop
jl
sub
mov
xor
enter
cmp
inc
add
inc
sbb
cltd
repnz
or
test
stos
pop
repnz
jb
mov
push
insl
filds
pusha
xlat
je
enter
mov
cmp
cs
inc
push
js
pop
int
int3
push
pusha
mov
sub
pop
sarb
cmpl
lods
adc
push
mov
jecxz
add
mov
jae
addr16
xchg
and
imul
pop
or
sbb
mov
and
hlt
fcmovnb
mov
dec
ljmp
aaa
mov
popf
out
sub
pop
ret
sbb
outsb
push
aaa
add
out
nop
cmpsl
gs
sbb
mov
cmpsb
stos
daa
cwtl
inc
pop
xchg
mov
push
and
sbbb
dec
aaa
fsubl
fildll
movsl
das
in
out
push
cli
fldl
add
and
adc
jmp
inc
adc
aam
push
cli
add
cmpsb
arpl
inc
push
movsl
push
xchg
sbb
or
adc
inc
cmpsl
mov
push
hlt
xor
stc
outsb
pop
int
push
out
stos
adc
inc
rcrl
lea
xor
mov
mov
aas
enter
mov
push
sub
ret
mov
shr
mov
mov
jbe
dec
popf
dec
sbb
mov
loopne
cmc
dec
push
call
jle
or
cs
adc
and
int3
mov
lret
cld
adc
and
inc
fsub
sub
push
pop
pop
jg
jmpw
movsl
sti
cli
add
dec
das
push
push
inc
mov
out
dec
mov
aaa
rcrl
aaa
cs
cltd
lods
push
idivb
mov
or
pop
hlt
stos
pop
or
add
pop
inc
mov
mov
aaa
ret
jbe
js
sahf
adc
adc
push
xchg
adc
pop
ja
ret
dec
fchs
into
call
out
inc
push
insl
dec
push
inc
popf
pusha
inc
stos
sti
sub
int
out
out
test
popl
test
popf
xchg
cmp
das
loope
mov
iret
dec
sub
jecxz
xchg
sti
in
sti
jg
or
inc
or
push
lds
cli
inc
xor
cmp
xchg
mov
add
xchg
push
in
stos
sbb
push
sub
outsl
xchg
ljmp
repz
or
dec
sub
mov
and
xor
gs
mov
in
out
mov
test
dec
test
es
fisttps
pop
shrb
push
xor
mov
and
xorl
push
pop
fwait
pop
call
jecxz
cmc
mov
cmpsl
stos
test
lea
aas
ret
adc
jo
mov
imul
mov
clc
jbe
or
insb
inc
popa
loop
mov
mov
mov
add
outsb
stc
push
ret
sub
neg
cltd
lret
arpl
push
xchg
jg
es
negb
imul
test
fldcw
push
sbb
mov
jbe
in
inc
fldl
js
jle
in
mov
rcrl
ss
aam
cltd
fdiv
ds
adc
stos
movups
pushf
pop
fiadds
dec
movsb
xor
inc
jmp
loop
test
xor
xor
sahf
jns
xchg
add
test
cmpps
dec
stos
out
lods
dec
movsl
aas
push
scas
cmc
stc
add
pop
xchg
mov
adc
fidivs
call
xchg
inc
lods
push
adc
xchg
or
adc
ret
jmp
out
pop
addr16
adc
enter
leave
ret
hlt
or
lcall
fmuls
aam
gs
dec
sqrtps
and
cmpsl
data16
mov
or
inc
sbbl
movsl
js
test
mov
stos
sub
sbb
cld
stos
mov
pop
movsl
sbb
and
rcrb
in
int3
aas
lret
jmp
pop
mov
inc
movsl
cmp
jmp
push
dec
mov
dec
ss
cmpsb
mov
fbld
mov
or
std
pop
daa
sti
mov
add
mov
stos
cmpb
push
notb
fcoml
jmp
inc
das
cmp
pop
test
xchg
je
push
arpl
loop
push
push
mov
mov
lea
mov
inc
cmp
xchg
mov
cmpsl
and
inc
cmp
pop
mov
aaa
jle
int
or
cmp
push
popf
lock
js
or
test
mov
insl
sahf
mov
inc
push
lods
add
push
inc
test
cmp
int
lods
leave
imul
rcrl
push
cmp
inc
jmp
or
mov
sub
push
ss
xchg
sub
mov
inc
cmp
add
fldcw
rcrb
shll
sub
mov
fbld
je
outsl
pushf
call
cltd
cmp
adc
call
inc
repnz
test
jg
arpl
pop
bound
dec
gs
stos
cmp
pop
repz
cld
out
arpl
ljmp
xchg
icebp
cmpsb
test
imull
aad
cmovo
mov
cwtl
pushf
jge
mov
and
adc
xor
test
xchg
out
sub
decb
sub
out
movsb
inc
and
dec
sbb
add
pop
idiv
repnz
dec
ss
jns
mov
bound
and
iret
push
outsl
test
js
sbb
dec
pop
mov
repz
jl
in
mov
cmc
hlt
lods
and
mov
and
aaa
pop
loop
mov
add
movd
out
mov
mov
push
popa
sbb
in
lcall
jnp
and
insb
std
jmp
test
pushf
xchg
stos
mov
cmc
loopne
dec
incl
pop
cmp
push
mov
and
cmpsl
cmp
xchg
popf
es
dec
mov
imul
sar
pop
lcall
dec
mov
adc
push
stos
mov
outsl
xor
adc
xchg
cmp
jno
cltd
fiaddl
and
mov
dec
adc
pop
sbbl
sbb
pop
divl
out
cmc
shl
add
jle
sub
fnstenv
xchg
icebp
or
push
stc
or
loop
cmpl
cwtl
adc
xchg
push
mov
or
loopne
mov
lret
mov
pushf
mov
xlat
push
jne
imul
scas
jae
lds
insb
and
pop
icebp
inc
rorl
cmc
xorb
movsl
idivb
mov
fnsetpm(287
adc
xchg
loope
outsl
inc
sarb
cmp
sti
xor
xchg
cmp
outsb
test
push
xor
push
scas
stc
imul
and
out
dec
sahf
xchg
push
xchg
subl
xchg
jl
insl
sbb
fnsave
inc
or
out
mov
pop
push
inc
sbb
ret
mov
int3
xchg
sub
ds
mov
es
fs
lods
pop
inc
sbb
insl
dec
jo
int3
cmp
cld
lods
push
jge
jo
jmp
fsubrl
jno
loopne
aaa
rclb
xlat
xchg
jecxz
push
dec
or
and
mov
lods
xchg
mov
inc
or
cli
and
fwait
jp
ficompl
mov
pop
outsl
adc
mov
mov
pushf
test
dec
int3
movsl
cmp
xor
out
das
fwait
rol
sbb
and
cmp
sub
and
push
das
xchg
shlb
sub
sahf
cli
das
daa
aaa
lcall
sub
sbb
ret
mov
jmp
sbb
lcall
imul
test
and
pop
ljmp
sub
pop
pop
push
cmc
jle
mov
or
orb
push
mov
leave
push
and
pop
fsubrl
mul
rorl
into
sbb
sub
add
or
xchg
add
or
ret
jnp
sbb
insl
inc
mov
cmp
fisubl
in
inc
cli
add
and
incl
sbb
outsl
xchg
push
xchg
sbb
mov
iret
push
mov
popf
pop
fwait
mov
fidivrs
outsl
cmp
mov
sub
xlat
adc
scas
sbb
loopne
cmp
xchg
imul
pop
pop
nop
or
in
add
shl
push
mov
fabs
push
call
xchg
test
sbb
int3
jge
xchg
enter
xchg
das
push
int3
popa
cmp
jl
enter
push
nop
jno
jb
js
stos
xchg
scas
insl
jle
mov
es
adc
or
mov
or
mov
mov
or
call
and
loope
imul
inc
test
jmp
loop
push
inc
popf
repnz
mov
lret
loopne
stos
mov
iret
adc
push
or
pop
cmpl
js
push
or
and
jnp
and
rorb
xchg
sbb
lret
mov
sbb
in
leave
pop
sbb
xor
adc
ja
mov
ja
js
test
enter
and
dec
ret
jg
mull
out
xchg
movd
jb
incl
and
and
push
pop
fldcw
stos
imul
mov
cli
dec
dec
jns
xchg
push
mov
out
cmpsb
mov
xchg
mov
pusha
rorl
out
pop
sbb
inc
cs
cmpsb
rclb
mov
sub
cld
inc
sbb
test
out
in
in
loopne
std
insl
roll
stc
jne
je
aad
sbb
in
lcall
xor
add
mov
mull
sahf
aad
es
jp
js
pop
sbb
aam
mov
out
adc
subb
mov
dec
adc
jae
in
and
hlt
jecxz
mov
jbe
cmp
or
inc
stc
inc
mul
and
push
lahf
jmp
xor
and
hlt
stc
sub
jb
and
push
insl
and
loop
es
popf
repz
insl
pop
add
or
sbb
test
into
or
dec
pop
and
test
shl
lods
call
das
stos
andb
and
fistpll
xchg
out
mov
shlb
inc
adc
sti
imull
and
mov
sbb
and
mov
js
lock
and
sbb
add
notb
test
movsl
mov
sbb
decl
jmp
inc
xlat
jg
mov
ljmp
push
enter
mov
sub
arpl
xchg
push
cmpsl
sbb
xor
call
jns
mov
jmp
adc
sbb
pusha
ficoms
cmp
mov
dec
dec
les
jnp
adc
std
ret
imul
flds
xlat
scas
add
xchg
and
fistps
adc
jns
dec
push
mov
sbb
push
test
mov
cmp
lds
int3
jb
call
dec
into
xor
ja
popf
xchg
cmp
add
fisttpl
sar
jb
mov
adc
mov
aam
add
push
fwait
clc
stos
jge
sbb
mov
or
mov
repz
xchg
sub
or
push
inc
test
dec
rcrl
gs
outsl
sbb
fcomp
xor
into
dec
jnp
dec
inc
cmp
jo
add
cmp
imul
dec
mov
cmp
jnp
je
cmc
je
lock
test
mov
jnp
xchg
xchg
enter
xchg
inc
and
pcmpgtw
test
adc
iret
jo
mov
adc
mov
or
jge
pop
xor
cmp
xor
push
call
xchg
jmp
std
or
push
iret
add
push
cmp
movsb
push
sti
scas
je
mov
sti
hlt
xchg
fstpt
sub
das
outsb
xor
pcmpgtw
jno
inc
sbb
cmpsb
sub
ds
sbb
xchg
mov
les
jne
sbb
xchg
dec
pop
ss
loope
adc
or
cld
ret
pop
mull
jae
cltd
jp
mov
jbe
stc
scas
pusha
dec
rcr
dec
fistl
lcall
in
pop
mov
pushf
and
inc
push
insl
pop
out
loope
ja
or
jo
call
xchg
sbb
mov
mov
iret
fiadds
mov
stc
inc
adc
mov
inc
notl
adc
pop
add
outsl
adc
call
jge
lods
jmp
ss
lods
int3
lock
xchg
jbe
and
sbb
mov
sub
iret
fldenv
sbb
push
add
cmp
lcall
mov
cwtl
lods
in
aad
orb
xchg
cmp
mov
inc
mov
or
push
dec
nop
loopne
inc
fstpl
pop
fcoms
mov
sbb
movl
push
popa
or
inc
sub
cs
and
cmp
stos
pushl
imul
into
mov
sub
jle
bound
popa
mov
dec
xchg
aad
jne
arpl
add
scas
sub
clc
movsl
sub
cltd
pushf
inc
icebp
jl
add
or
cmc
nop
aaa
mov
sbbb
fld
aas
leave
leave
fsubrl
fcmovnb
push
sub
cmpsb
dec
add
lea
idivb
orl
sub
sub
scas
add
sub
fistl
sbb
push
or
mov
xorb
sbb
insb
add
stc
icebp
in
ret
fisubrl
nop
js
add
sbb
fistpll
mov
ss
loope
mov
push
push
pop
out
cwtl
xchg
arpl
jmp
bound
add
scas
aas
sbb
test
lods
daa
imul
addr16
pusha
inc
mov
in
jo
push
mov
pop
inc
jp
sub
jg
mov
mov
scas
adc
mov
jmp
popf
scas
pop
push
ss
lret
and
test
int3
sub
mov
nop
mov
in
mov
in
pusha
sbb
fwait
stos
out
cli
idivl
sahf
dec
jo
jb
ljmp
adc
popa
nop
cmp
xchg
xchg
xchg
insl
jb
ret
rorb
jle
enter
push
pop
out
fistl
push
cmc
jmp
mov
rcrl
andl
outsl
xchg
xchg
filds
jge
ja
adc
shlb
mov
popa
or
mov
je
sub
push
cmp
dec
adc
ds
insl
lods
repnz
enter
stos
mov
repz
sbb
or
adc
lea
jns
test
in
xlat
subl
dec
jmp
rolb
adc
ret
mov
and
cltd
or
push
popa
or
inc
xchg
jmp
stc
std
mov
hlt
and
jb
out
pop
or
das
mov
shll
fwait
cmc
not
movsl
push
mov
cmp
clc
ss
aaa
xchg
lea
push
jg
adc
sub
rcl
push
flds
popf
dec
push
andl
and
xchg
and
jo
mov
scas
pusha
ret
add
jnp
pusha
pop
outsl
sti
jmp
mov
push
js
lods
repz
jcxz
out
mov
iret
lcall
xchg
sbb
roll
push
popa
stos
push
xchg
push
mov
sub
mov
jecxz
adc
lock
aad
imul
lret
push
movsl
jecxz
bound
sbb
xor
push
in
mov
shll
lahf
sahf
jp
mov
dec
subb
mov
dec
das
out
sbb
aad
and
stc
sub
jge
jle
and
mov
fdivrl
and
fbstp
aas
mov
test
push
dec
or
imul
int
add
inc
inc
push
mov
int
jae
mov
mov
dec
adc
popl
or
cmpsb
jnp
js
test
cmpb
ret
push
xlat
push
cmp
cmp
ds
test
std
cli
les
loop
or
dec
and
addr16
mov
or
pop
out
sarb
stos
ljmp
add
and
aaa
cwtl
pusha
or
lods
inc
jecxz
push
aam
xchg
and
mov
insl
pop
xchg
loopne
mov
daa
cmp
ficoms
sahf
mov
lret
popf
cli
ljmp
mov
int3
setl
cwtl
js
fcomp
add
mov
xorl
mov
xchg
mov
xor
jecxz
mov
out
jecxz
pop
out
mov
dec
or
jo
lock
mov
andb
pushl
in
or
or
pushf
push
aas
jne
scas
imul
mov
dec
sti
insb
sti
dec
xchg
mov
push
aaa
pop
pop
pop
jae
cltd
ret
pusha
test
in
push
xchg
sub
sarb
fs
jmp
sti
cmp
jle
imul
lret
mov
out
icebp
sub
xchg
ds
arpl
add
sub
pop
xchg
inc
pop
push
pushf
cs
xor
adc
outsb
pop
sbb
adc
dec
addr16
push
lock
push
sub
jae
insb
sarb
mov
jp
lret
outsl
xchg
add
add
test
movsb
push
add
dec
fiaddl
data16
jo
push
lock
popa
add
sbb
mov
push
fdivrp
mov
fnstsw
adc
add
dec
scas
or
xchg
pop
aad
push
push
pop
pop
scas
in
sbb
pop
testl
inc
mov
pop
rcrl
insl
jmp
pop
repz
call
push
jp
negb
pop
lock
mov
int
ret
pusha
loope
ss
popa
inc
data16
xor
adc
outsb
nop
xor
and
ja
imul
dec
inc
mov
js
pusha
mov
sar
es
or
inc
dec
in
sbb
push
inc
insl
sub
jo
xchg
jp
in
std
imul
arpl
clc
mov
push
inc
and
gs
gs
fwait
inc
sub
push
push
pusha
and
loope
subl
inc
clc
push
jg
in
or
mov
int
jo
in
push
mov
push
lret
jbe
mov
and
hlt
mov
adc
popf
xor
mov
das
or
mov
or
shlb
out
push
cmp
test
xor
xchg
insb
loope
lahf
inc
mov
in
xor
mov
push
and
into
jae
sbb
cmp
pop
cmp
jae
out
xchg
int3
jo
jo
inc
mov
bound
sub
aas
jl
and
pop
rolb
cs
pop
mov
hlt
jns
xchg
jge
ljmp
mov
push
fbstp
sbb
mov
cld
push
cwtl
enter
jo
out
add
add
add
and
add
mov
cwtl
and
dec
insl
lret
icebp
enter
ret
test
sarb
inc
xchg
push
push
test
rolb
jnp
xor
ja
fs
mov
or
call
in
lret
dec
shll
mov
es
pop
xchg
stos
mov
test
daa
inc
out
mov
roll
and
sub
mov
push
fmul
or
das
mov
add
push
loope
inc
adc
sbb
and
stc
cmpsb
call
fcmovbe
adc
push
ret
aam
jle
jmp
testl
dec
scas
mov
imul
imul
dec
insl
mov
adc
push
pop
mov
inc
pop
arpl
lods
bound
jl
pop
mov
mov
movsl
adc
pop
cld
mov
aad
lods
mov
xor
hlt
icebp
xchg
roll
xchg
mov
jle
imul
ret
dec
mov
in
dec
sarb
xchg
sbb
imul
cmc
andb
roll
jmp
ds
mov
push
insb
clc
ds
or
mov
and
ret
cld
sbb
jb
cmp
xchg
jmp
sub
push
and
inc
dec
stos
cmp
add
or
insb
out
xlat
pusha
fdiv
rol
push
in
bound
lcall
add
sub
cmp
sub
aaa
pop
cmp
push
mov
sbb
jmp
sti
mov
or
pusha
lret
inc
cmp
jge
xor
jnp
sub
mov
sub
and
xchg
sbb
movb
subb
mov
pusha
cld
jns
stc
out
cwtl
push
pushl
dec
dec
gs
mov
sarb
daa
mov
inc
jb
mov
sbb
or
popf
sahf
addb
push
ss
shlb
stc
jne
adc
rclb
lds
out
rep
cmp
popf
nop
sti
xchg
in
daa
pop
cmp
cltd
jb
adc
mov
insl
inc
add
add
pop
daa
fcomps
mov
aaa
fnsave
cmpsl
lods
sub
cmp
mov
clc
test
cmp
sbb
mov
jae
adc
lahf
lods
movsl
push
adc
mov
movsl
and
cmpsl
aad
cwtl
pop
shrb
and
fs
movl
out
leave
in
mov
dec
add
insb
inc
or
mov
js
adc
dec
daa
sub
imull
and
dec
int
mov
sti
mov
sub
pop
fsubs
mov
xlat
faddl
mov
imul
mov
cmp
dec
jns
das
outsl
mov
cltd
xor
adc
pop
push
push
pop
popa
pop
sbb
inc
mov
aas
data16
ficomps
push
cwtl
jmp
std
xor
jb
xchg
push
test
jbe
cmp
cmp
mov
xor
arpl
aad
dec
adc
dec
loopne
jge
pop
fwait
push
scas
test
test
add
add
addr16
pop
fidivl
mov
lea
dec
cs
aam
lcall
fnstsw
inc
jno
jnp
test
popf
fcompl
mov
cmp
lock
insb
mov
xchg
outsl
clc
cmc
jg
nop
outsl
sbbl
mov
outsb
cmpsb
pop
fsubs
nop
popf
mov
mulb
add
sub
inc
xchg
ss
nop
cmp
dec
mov
pop
negb
dec
cltd
sbb
push
int
out
decl
push
add
jb
jle
clc
loop
movsb
jge
jne
inc
pop
sbb
xchg
add
cmpb
sub
mov
cmovno
sbb
ret
sub
rcrb
or
cltd
out
scas
dec
add
rorl
lods
mov
sbbl
pushf
push
mov
xchg
xchg
insl
cmp
int
dec
call
call
dec
addr16
lds
icebp
ret
les
inc
jp
mov
ds
arpl
push
fidivrl
mov
outsb
into
cltd
xor
sti
lods
xsaveopt
aam
sub
sahf
or
inc
insb
jno
jnp
sub
xchg
dec
xor
xchg
notl
jns
rclb
pop
cmpsb
and
inc
aam
xchg
sub
push
scas
test
push
call
fildll
scas
push
fisubs
gs
inc
xchg
sbb
mov
mov
stos
rorb
push
jne
or
jle
pop
inc
movsb
jns
mov
decl
inc
mov
push
aaa
and
dec
ljmp
inc
add
sbb
cmp
cmc
xor
stos
push
popf
das
jg
mov
jl
push
jbe
fcom
pop
data16
js
mov
pop
mov
in
dec
push
or
pop
arpl
dec
popa
js
sbb
bound
xor
jno
push
pop
mov
push
leave
dec
shlb
sbb
mov
push
icebp
cs
xchg
cs
out
push
jmp
xchg
pop
insb
push
adc
out
sub
subb
in
push
xchg
lods
mov
push
lcall
outsb
xchg
sub
cmp
mov
xor
jne
push
mov
sbb
leave
in
js
or
iret
add
daa
mov
sbb
pop
loop
sub
out
lret
enter
sub
adc
pop
fmull
mov
add
repnz
cmp
lock
mov
jne
xchg
sub
loope
divb
stos
insl
cltd
mov
jp
adc
test
pop
push
leave
in
fs
mov
dec
or
arpl
test
mov
xor
jmpw
sahf
fisttpll
in
movsb
xchg
es
aad
dec
ret
push
setle
jno
lahf
sub
repnz
mov
mull
cmp
popf
lods
cmpsb
js
mov
xor
push
add
inc
into
xor
out
sbb
mov
incb
cmc
inc
add
outsl
mov
inc
sahf
pop
pxor
fsubrs
icebp
repnz
sahf
push
insl
test
push
in
jns
iret
pushfw
xor
add
test
push
sbb
fnsetpm(287
ret
sbb
dec
xor
loop
push
mov
mov
xchg
imul
adc
enter
xchg
push
sbbb
xchg
loopne
xor
add
cmp
push
cmp
and
sub
lock
lods
in
icebp
add
xor
sbb
jle
add
in
jnp
cli
cltd
lahf
out
xchg
sbbb
dec
xchg
xchg
xor
xor
outsl
inc
pop
lods
adc
mov
mov
mov
xchg
cs
das
outsb
lods
xor
stc
sub
idivl
call
adc
mov
xor
addr16
fs
inc
lahf
jb
and
insb
fwait
mov
dec
mov
mov
mov
xor
sbb
cmp
fcoms
mov
lods
jmp
mov
dec
mov
ja
sti
jb,pn
outsb
push
inc
sbb
jg
mov
js
sub
adc
and
xchg
cmp
push
jg
sbb
in
mov
pop
call
ret
jne
xchg
jp
loop
pushf
xchg
jne
xchg
jg
dec
add
pop
arpl
je
lcall
sub
and
outsl
loop
cltd
or
mov
add
test
or
mov
popf
test
xor
lods
fistpl
and
rorl
mov
xor
xchg
into
sub
fcmove
clc
sbb
cmpsb
fldenv
repz
test
gs
jo
shl
insb
arpl
xchg
sub
xchg
icebp
mov
cmp
ljmp
mov
jo
pop
int
xor
jecxz
mov
cmp
cmc
es
psllq
adc
xor
sbb
or
jmp
int3
pop
and
mov
inc
pop
out
mov
cmp
mov
push
xor
icebp
in
and
cmp
sbbb
mov
movsl
popf
cmp
push
pop
cmp
add
pop
stc
push
sub
jbe
push
adc
enter
leave
push
enter
repz
jecxz
mov
fsubl
addr16
jecxz
leave
sbb
dec
lock
rorl
dec
negl
and
lds
ja
es
movsb
push
jmp
sbb
enter
sub
mov
data16
mov
lods
cs
fnstenv
adc
les
pop
or
les
jp
bound
and
xchg
mov
mov
or
imul
scas
pop
mov
ljmp
stos
popa
adc
icebp
into
add
or
in
je
addb
jno
dec
or
fcomps
and
mov
sbb
enter
in
push
lods
outsl
subb
inc
pop
mov
inc
inc
fiaddl
mov
add
mov
pop
ret
aaa
mov
mov
lods
push
sbb
jp
push
push
fs
idivl
mov
sbb
jno
mov
scas
shll
loop
mov
nop
sbb
inc
pop
adc
push
sbb
cmp
test
or
aas
out
mov
push
out
lahf
sub
mov
adc
je
pop
mov
mov
jnp
push
stos
jb
push
sbb
push
sbb
mov
and
push
repnz
adc
ljmp
shrl
mov
mov
fsubl
negl
shll
outsb
mov
pop
add
push
call
mov
sub
repz
pminub
pop
sub
xchg
outsb
mov
rorb
nop
lcall
lret
xchg
lea
dec
mov
and
arpl
adc
int
jae
dec
dec
add
mov
push
aad
dec
lcall
mov
roll
insl
cmp
sbb
sbb
insb
repnz
mov
jb
add
cmp
test
jp
orb
aaa
outsb
jo
fiaddl
push
repz
in
in
les
popf
rcl
imul
iret
pop
mov
or
popa
dec
js
and
pop
add
cmp
xor
fbld
imul
xor
mov
jbe
inc
push
inc
sub
mov
xchg
cmp
jle
xchg
push
adc
cmp
lcall
shll
lret
jmp
cmp
xchg
sub
sbb
ret
enter
test
pop
xor
gs
inc
pop
xchg
iret
js
push
add
call
push
shr
daa
arpl
mov
mov
jae
cmp
repz
ljmp
sbb
pop
and
rcl
lcall
dec
ret
mov
cli
mov
cmp
mov
pop
imul
aaa
adc
mov
nop
lods
jno
lods
fcoms
mov
mov
shl
test
push
fcompl
nop
movsl
add
push
outsl
mov
mov
rcl
cs
sub
xor
int3
mov
lock
sti
sub
inc
rorb
jbe
inc
adc
in
push
jae
mov
sub
jnp
enter
pop
lahf
mov
lret
cmc
cmp
and
aam
lahf
adc
jecxz
mov
int3
or
popf
push
frstor
repnz
adc
inc
sbb
or
in
lock
push
sbb
stc
jae
mov
or
movsl
int
push
test
mov
mov
loopne
test
nop
pusha
or
lods
in
jp
js
imul
cmp
add
insb
roll
inc
mov
inc
fcomp
jo
jp
push
int
les
test
movsb
mov
or
sub
push
test
mov
cmp
inc
push
cmc
int3
test
sbb
ja
jno
sbb
popa
js
stc
stos
mov
push
loope
lahf
stos
xchg
inc
outsl
clc
mov
inc
out
adcl
xchg
cmc
dec
sarb
out
out
sbb
sbb
outsb
cwtl
aas
xor
push
add
rcll
inc
aaa
fldt
loop
push
out
dec
inc
loop
push
mov
arpl
iret
push
jg
rcrl
inc
dec
arpl
pop
les
xor
cmp
insl
cmp
cltd
sub
movsb
aad
pop
add
bound
or
or
push
rolb
xor
leave
lret
hlt
lcall
lock
js
enter
push
push
push
mov
sbb
xor
daa
shl
insb
repz
mov
sub
sarb
cwtl
divb
mov
sahf
xchg
lea
cmc
sbb
sub
xor
dec
xor
and
fnstcw
mov
cmpsl
inc
aam
sarl
cs
sub
inc
fstps
scas
sub
out
push
jmp
and
ss
loopne
in
cmc
or
push
aaa
mov
fcomps
push
pop
mov
ficomps
notb
pop
jp
aad
mov
adc
dec
pop
dec
in
pop
dec
fs
ficompl
push
xor
adc
jns
push
ror
lods
cmp
sbb
int3
mov
cwtl
mov
test
fistpl
sub
mov
adc
push
ds
mov
js
outsl
jns
cltd
pop
jmp
xchg
push
mov
fisubrs
mov
push
add
adc
jecxz
xchg
fnsave
data16
xlat
mov
xchg
mov
mov
xorl
dec
repz
dec
cmp
xchg
repnz
movsl
repz
roll
mov
ret
cwtl
mov
std
sub
or
and
loope
xor
dec
fldenv
cmpsb
jl
cli
or
pop
mov
roll
rolb
jno
sbb
not
jp
xchg
mov
xchg
jmp
jle
cwtl
das
xchg
cli
pop
repz
pusha
fs
mov
mov
ljmp
sub
mov
jo
sub
jb
les
flds
inc
jecxz
mov
nop
or
in
movsb
nop
xchg
call
ds
xchg
cmp
dec
call
in
mov
hlt
repz
pushf
push
sahf
jge
cmp
xor
hlt
dec
pop
add
xlat
cmp
cs
in
sbb
jbe
xchg
xchg
std
push
cltd
xchg
push
aas
add
gs
mov
mov
int
fimuls
or
insb
or
mov
mov
aas
imul
pop
pop
into
lea
out
push
add
lret
cmpsl
xor
std
mov
xchg
or
cli
push
add
xchg
insl
sbb
sti
mov
cmc
scas
fwait
push
nop
shll
test
daa
push
xchg
cwtl
adc
mov
add
insb
and
mov
in
add
icebp
bound
out
int3
insb
ret
mov
or
pop
inc
sub
inc
or
mov
fst
mov
push
leave
push
xor
shl
aam
lods
cltd
test
cmc
sbb
repnz
push
mov
lock
add
aaa
or
outsb
pusha
sti
bndldx
cmp
push
mov
xor
scas
repz
test
adc
rcrb
sub
loopne
mov
mov
into
cmpsl
jns
push
dec
mov
inc
jle
out
sti
int
and
xor
insb
sub
aaa
pop
sbb
rcl
lds
shlb
bound
bound
test
pop
xchg
sub
or
sub
fcoml
in
mov
mov
add
cmc
jmp
gs
cmp
mov
int3
test
je
repnz
jmp
add
add
in
jecxz
mov
and
jbe
dec
ror
fadds
icebp
push
mov
mov
in
dec
xchg
cld
mov
ret
shll
inc
add
and
mov
imulb
int3
int
test
xor
setno
movsb
push
mov
sbb
int3
and
fnstsw
mov
jno
inc
mov
movsb
mov
outsb
jae
pop
sub
cmp
arpl
cld
sub
movsb
mov
pusha
jne
test
ds
dec
in
repz
imul
jp
sahf
add
lahf
jp
jns
aas
jmp
jl
xchg
sahf
ds
xchg
mov
fnsave
sti
sub
mov
pop
cmp
cwtl
mov
dec
sti
jnp
adc
sbb
int
ds
or
xor
xchg
into
jmp
jmp
das
lods
adcb
cmp
mov
cli
stc
mov
mov
mov
xor
xor
xor
int
cmp
fimuls
cwtl
stc
push
fdivrl
xchg
pop
aad
mov
sbb
test
mov
out
scas
or
xor
test
jle
sub
cltd
imul
test
cmc
push
sbb
mov
cmp
push
push
cwtl
iret
push
sbb
mov
sub
mov
mov
jo
dec
lret
sti
mov
xor
loopne,pt
and
jge
mov
jp
pop
cld
xchg
jge
dec
sarl
movsb
pop
sbb
pop
or
jl
jb
jbe
sbbl
and
sub
push
jns
repnz
dec
adc
adc
call
sahf
divl
aam
mov
pop
mov
jbe
mov
pop
pop
mov
pop
out
sahf
in
dec
pop
aaa
test
xchg
sti
scas
jl
adc
je
dec
adc
dec
adc
cmp
nop
mov
dec
push
test
push
cmp
xor
jne
mov
sub
jne
shlb
push
ss
jae
and
gs
int3
pop
sub
dec
push
push
add
add
pop
push
mov
subb
jecxz
xor
stc
mov
xchg
pop
mov
ret
test
xchg
xchg
out
mov
bound
dec
imul
data16
or
inc
or
ds
repz
mov
pop
popf
out
cmp
test
daa
mov
inc
js
push
inc
xchg
xchg
pushf
sub
cmp
cmp
dec
pop
fucom
pop
sahf
ljmp
inc
movsl
test
aam
xchg
dec
push
test
imul
out
add
pop
dec
mov
dec
rorb
insl
in
lret
testb
jmp
jns
mov
sub
xor
es
jb
dec
xrelease
mov
in
cli
int
add
mov
push
jb
dec
mov
rcll
xchg
inc
add
sub
subl
mov
pop
cmpb
lods
test
cmp
stc
xor
lcall
mov
and
enter
mov
mov
in
dec
leave
push
push
jp
lods
cmp
sti
adc
std
dec
je
xor
jmp
rcrb
lea
pop
pop
test
cmp
jmp
lods
and
adc
mov
xchg
mov
or
loope
lahf
xchg
xor
fmull
xchg
hlt
sbb
in
jno
jp
push
xchg
fisubrl
test
and
stc
push
push
lea
and
fdivrp
xchg
sub
les
out
sbb
xor
push
push
movsl
sarb
sarb
xchg
idivl
xchg
mov
or
dec
lahf
lods
sub
loopne
mov
out
mov
sar
movsl
jecxz
sub
imul
pop
mov
movsl
shlb
sub
in
pushf
hlt
pusha
mov
les
pop
lock
int
std
pop
mulb
jae
outsb
enter
add
mov
jp
lret
push
pop
jnp
pop
xor
fwait
rep
outsl
xor
xlat
push
call
push
lea
ret
mov
test
clc
cmp
sbb
faddl
cmp
pop
xchg
sub
mov
or
sub
adc
dec
int3
div
imul
test
movsb
xchg
int
mov
cltd
pop
aas
cmc
inc
popf
inc
enter
push
mov
fwait
stos
cmpsb
jb
mov
repnz
sti
jmp
fnstcw
mov
lods
pop
bound
stos
fucom
jmp
jo
inc
cmpsb
shl
adc
push
cmp
mov
mov
pusha
leave
fdivrs
jae
mov
rcr
sub
enter
sbb
daa
jle
pop
mov
push
notb
jmp
negl
mov
out
dec
popa
daa
in
mov
loopne
cmp
mov
inc
fwait
xor
ss
adc
jmp
and
cltd
stos
test
add
sub
pop
jnp
dec
jl
roll
cmp
test
subb
insb
add
sub
imul
flds
jo
ljmp
dec
dec
add
xor
sbb
xor
insl
leave
or
and
jp
je
repz
push
push
xchg
movzwl
decb
out
scas
mov
or
insl
push
sahf
adc
mov
addr16
mov
add
sti
out
mov
lret
icebp
add
cli
sbb
adc
rorl
sbb
stc
or
and
jp
mov
scas
call
fsts
dec
ret
popf
jle
add
xor
mov
or
gs
into
and
cli
jb
das
xor
sub
fcomps
dec
and
and
mov
je
pop
out
mov
push
cld
lahf
or
fxch
popa
loopne
pusha
dec
inc
lret
mov
fwait
lcall
cmp
push
loop
jl
add
fidivrs
push
push
mov
es
rcrb
lods
pop
mov
mov
out
dec
mov
adc
or
inc
shr
mov
and
push
cmp
cmp
mov
decl
mov
movsb
push
cmp
cmp
popf
mull
mov
loop
sbb
hlt
aas
lds
loop
sti
out
inc
movsl
aam
jmp
int3
push
fcmovb
repnz
xchg
cs
pusha
enter
insb
es
sub
jmp
sub
outsb
mov
out
orl
repnz
pusha
xor
sub
ficomps
out
pushf
nop
jmp
jge
push
aaa
push
std
jnp
call
sub
lret
rcr
inc
adc
mov
aaa
popa
fwait
ja
or
adc
test
jmp
stc
or
xor
push
out
out
cmpsl
mov
int
clc
or
pop
shlb
js
inc
jle
or
cmp
andl
add
in
sarb
rcll
push
jg
xchg
push
ficoml
and
mov
or
in
cmpsb
push
scas
ljmp
inc
xor
ret
push
std
jp
mov
and
mov
jnp
inc
xchg
sbb
mov
add
nop
push
dec
mov
mov
in
rolb
mov
mov
sub
dec
xlat
xlat
adc
pusha
cli
daa
sti
inc
js
cld
cmp
out
jae
sub
push
jg
popa
inc
outsl
mov
pop
dec
nop
in
sub
mov
push
bound
xor
shll
into
aas
and
xchg
daa
or
and
sub
and
jne
js
pop
stc
jae
mov
push
inc
test
xchg
mov
cmpsl
ret
clc
mov
decb
movsb
in
stos
and
int
push
popf
enter
leave
xchg
or
into
jmp
pop
mov
lahf
jae
movsl
stos
ret
in
stos
xchg
push
imul
sub
in
mov
mov
add
movsb
xchg
sub
js
test
les
xchg
mov
pop
js
sub
jge
pushf
pop
arpl
sbb
dec
repnz
fwait
or
leave
push
xlat
cmp
push
xchg
jge
les
ljmp
out
fcoml
jb
shll
xor
jbe
iret
pop
mov
xor
jbe
pop
jno
aas
push
inc
imul
ds
mov
or
mov
lea
mov
lock
scas
loope
out
sbb
popa
pop
cmc
jb,pn
insb
mov
add
cmp
jge
std
fnstenv
mov
adc
sub
jl
jle
out
and
sbb
insb
adc
outsl
sbb
movl
rorl
push
pop
xchg
cltd
cwtl
and
push
jl
ljmp
xor
mov
inc
aas
testb
mov
sub
xor
jp
idivb
jne
call
test
das
sbb
sahf
pusha
addl
mov
or
aad
and
push
out
cmc
fimuls
stc
clc
ds
jae
lcall
jnp
cmp
ret
mov
jmp
lock
mov
bound
rclb
add
push
push
mov
mov
xchg
imulb
testb
dec
ja
jmp
sbb
int
add
scas
mov
xchg
mov
loope
test
mov
scas
pusha
repnz
pop
ret
or
lds
js
es
jno
faddl
and
stos
sub
out
fiadds
into
mov
mov
cmc
sti
out
and
inc
scas
outsl
inc
push
cltd
jmp
outsb
cltd
dec
cmpl
scas
fsts
out
push
inc
jns
push
sub
jle
iret
pop
push
xlat
movl
nop
jp
cld
cmpsb
mov
adc
cmp
or
push
and
mov
movq
clc
or
aas
inc
push
jmp
cwtl
xor
scas
xchg
inc
xchg
mov
mov
xchg
pop
shlb
ret
call
mov
xor
sbb
pop
mov
sar
fildll
mov
out
push
push
sbb
lret
and
sbb
xor
dec
mov
call
push
cltd
aas
repnz
rcrb
jge
cmpb
inc
jle
adc
xchg
pop
xchg
popf
scas
stos
adc
arpl
movsb
fdivr
xchg
idivb
and
dec
inc
cmpsb
lds
popa
sub
imul
and
pop
xchg
push
loope
or
push
in
cmp
xor
out
scas
dec
mov
jl
lret
jnp
fwait
push
rcrl
cmpsl
gs
inc
leave
insb
jb
pusha
repnz
xchg
out
popf
rcrl
bound
in
mov
outsl
xchg
pushf
daa
lods
in
lods
push
loop
adc
dec
es
xchg
call
lea
popf
and
leave
jp
notb
sbb
cmc
xchg
push
push
or
ret
cli
sbb
mov
adc
pop
jg
mov
stos
or
mov
movsb
movsl
and
icebp
lds
aas
or
cwtl
sahf
loope
sbb
jge
push
sarl
in
jns
mov
push
test
cmp
loope
cmc
enter
dec
in
addb
mov
js
loop
cmpsl
fbstp
push
fcmovne
inc
push
int
ret
ljmp
mov
ret
nop
cmp
and
push
lea
dec
mov
test
pop
mov
iret
iret
mov
pop
pushf
movsb
out
cld
add
fwait
or
addl
arpl
lcall
adc
fistpl
pop
movsb
std
add
cmp
pop
nop
jmp
jg
jl
mov
rorb
mov
pop
mov
inc
dec
cmpsb
mov
or
pop
pop
cmp
ret
fsub
xorl
pushf
int
mov
mov
in
pop
sbb
sub
aaa
cwtl
repz
fisttps
cmovg
fs
lock
cmpsl
loope
mov
iret
loop
or
ds
loop
pop
cmc
jecxz
fnstcw
fcoms
popa
movsb
addl
mov
dec
cwtl
cmp
jae
jmp
or
dec
xchg
inc
mov
mov
stc
mov
fiadds
aas
cmp
pop
icebp
mov
out
mov
int
lock
ret
arpl
cmp
mov
mov
int
push
ret
sbb
mov
ljmp
cltd
push
lea
sahf
sbb
or
xchg
mov
cli
xlat
or
xor
and
add
js
mov
mov
out
out
push
leave
lods
cld
ja
loopne
movsl
pop
push
sub
test
and
loopne
outsb
mov
or
daa
jnp
and
dec
cmp
lods
and
mov
dec
push
xlat
or
adc
cmpsb
xchg
inc
pop
aam
mov
jl
lcall
or
fistpll
test
sbb
shll
dec
outsb
jle
test
add
mov
mulb
iret
lahf
leave
addr16
mov
and
dec
jne
adc
fdiv
ficoml
sbb
je
fbld
inc
sub
dec
mov
or
pop
push
fistps
loope
adc
pushl
mov
lahf
aam
pop
in
popf
push
cli
add
cmp
or
insl
cmp
sbb
xchg
sbb
inc
icebp
push
js
or
sbb
loope
cmp
add
push
pop
mov
pop
or
insl
mov
mov
cmp
mov
cs
fs
sbb
lds
push
out
xor
enter
sbb
adc
iret
scas
add
add
pop
xchg
sbb
mov
xchg
jp
xchg
sahf
dec
ja
dec
aas
jne
daa
sbbl
push
int
sbb
inc
pushf
mov
cmpsl
lcall
jg
inc
out
cmp
stos
pop
cmc
call
jbe
icebp
cwtl
pop
inc
inc
or
push
test
adc
pop
and
ss
shrb
jecxz
push
adc
addr16
mov
sarl
aaa
push
insb
sti
in
jg
jmp
jmp
cwtl
add
mov
pushf
xor
jns
dec
mov
in
out
jmp
mov
jo
xchg
add
sub
mov
mov
dec
push
mov
into
cmpsb
mov
sbb
mov
push
lahf
cltd
jle
fcompl
das
ds
inc
sbb
das
mov
jmp
sbb
mov
lret
sbb
shrl
mov
imul
js
dec
mov
xchg
sahf
int3
dec
ficoml
imul
arpl
or
add
popa
sbb
cmpsl
push
rcrb
imul
pop
or
in
js
das
push
mov
mov
dec
jg
mov
scas
and
or
mov
decl
adcb
inc
inc
xor
mov
push
outsl
xlat
mov
cld
in
sub
repnz
popf
cli
iret
lcall
jge
or
enter
leave
sbb
shll
mov
mov
push
mov
add
loopne
std
lods
fsubrs
inc
test
xor
sbb
test
mov
mov
jle
cmpsb
fildll
test
xor
subb
andl
and
xor
push
outsb
outsl
mov
int
push
popf
das
dec
mov
mov
div
xchg
imul
jno
ja
dec
push
or
stc
push
mov
add
cmpsl
dec
mov
sub
jbe
das
into
xchg
adc
adc
aas
mov
push
jo
pop
divl
jg
push
xor
adc
xor
jp
mov
je
adc
into
test
mov
pusha
lahf
push
ds
dec
lret
push
repnz
xchg
or
pusha
lods
mov
fcomps
sti
fcomps
testb
fildll
sqrtps
repnz
mov
xor
xchg
pop
ljmp
pushf
in
pop
dec
jmp
cmp
mov
xor
insb
mov
jle
pop
xchg
insb
push
mulb
mov
cwtl
iret
adc
mov
aaa
mov
mov
mul
push
mov
push
jge
inc
shll
sub
or
inc
or
fistps
dec
jne
cs
leave
mov
cmpsb
ret
xchg
mov
mov
in
mov
fbstp
pop
pop
xchg
lock
insb
and
pusha
xchg
ljmp
xchg
sbb
ds
mov
in
sub
mov
inc
cmpb
ret
or
sbb
ret
flds
push
mov
movsl
add
sbb
in
pusha
bound
lods
push
enter
loop
addr16
pop
pop
mov
xor
pop
mov
sub
aad
pop
test
xor
bsf
pusha
rol
shrl
add
aas
in
divb
xchg
jae
mov
and
and
fisttpll
dec
fcoms
int
in
or
xor
sahf
mov
stos
adc
xchg
mov
icebp
jns
sbb
pop
shlb
pop
mov
pop
mov
dec
sub
enter
push
cmp
ret
les
lcall
nop
xor
stc
xchg
aaa
adc
gs
pop
and
lret
dec
mov
jp
cmc
push
pop
in
inc
push
mov
data16
addr16
pop
pop
jbe
rcrl
pop
cwtl
mov
ja
sahf
lret
loop
sahf
jmp
and
adc
xchg
addr16
xor
sub
shlb
lock
jns
pop
imul
ja
mov
loopne
pushf
call
and
dec
or
faddl
test
test
and
jbe
ja
scas
bound
popa
sahf
dec
xor
xchg
in
and
js
addr16
sahf
fdivrs
jns
shrl
add
pop
inc
xor
lds
push
fs
shlb
inc
scas
test
cmp
lret
movsl
push
cmp
fsubs
mov
mov
sbb
subb
cmpsl
dec
push
fcoml
subl
xchg
mov
mov
or
mov
and
or
popa
xor
std
ret
add
add
mov
jmp
jae
xorl
add
ret
adc
movsb
and
hlt
inc
xor
lret
push
je
push
inc
getsec
ss
inc
mov
fadds
cmp
rcll
fdivs
mov
stos
pop
loopne
or
insl
xlat
adc
inc
mov
idivb
es
mov
mov
dec
popa
sti
movzwl
push
and
mov
out
sub
rcll
xchg
inc
push
mov
xor
rcrl
lret
cmp
dec
push
cmpsb
sub
inc
es
or
xor
jb
or
cltd
xor
jecxz
aad
jecxz
inc
inc
sbb
dec
cmp
cmp
cld
lock
sbb
test
sub
ret
jle
rcr
int
push
std
push
call
mov
cmc
and
cmp
sub
js
scas
insl
pop
test
imul
pop
popf
mov
adc
imul
mov
cmp
mov
mov
imul
or
insl
cmp
sub
sub
out
sub
out
sbb
loop
xchg
test
xchg
scas
mov
cmpsb
push
into
fistl
mov
notl
sbb
fcoml
fwait
xorl
sti
fdivl
mov
mov
imul
mov
mov
push
sub
in
mov
fbstp
and
imul
loopne
push
insl
loope
clc
sbb
call
movsb
dec
jnp
sbb
leave
or
fldt
push
shll
mov
cmp
lock
inc
push
cmp
fistps
nop
xlat
or
pushf
sbb
cmp
lock
loope
push
lods
add
js
stc
mov
arpl
into
sub
les
push
sbb
daa
mov
addr16
ret
or
inc
pop
pop
mov
pop
enter
or
and
push
mov
cwtl
outsl
leave
xlat
hlt
adc
cmc
add
adc
add
pop
cs
fwait
ljmp
stos
aad
sbb
repz
push
xor
clc
popf
sti
push
xchg
or
jb
mov
mov
rcrl
add
movsb
or
inc
data16
call
stc
adc
fdivp
addr16
mov
lods
xchg
insl
scas
mov
xor
mov
xor
push
push
faddl
mov
sbb
lods
xchg
je
imul
sarb
out
sub
cmp
fs
movsb
fwait
mov
imul
sbb
push
or
jle
jp
fldcw
push
ljmp
loop
in
cmp
int
xchg
sub
push
mov
enter
out
aaa
movsl
mov
dec
cli
out
mov
dec
jbe
mov
jne
lret
mov
pop
xchg
mov
loop
sub
popa
jbe
inc
cwtl
pushf
mov
jb
jp
insb
xchg
add
sbb
daa
dec
js
lret
cli
add
push
adc
or
in
push
cld
lret
ficompl
fwait
repnz
cmpl
data16
push
jmp
and
repnz
data16
pop
mov
xchg
sub
js,pn
gs
repnz
mov
scas
xchg
ja
pop
inc
cmp
gs
jno
inc
dec
loop
test
mov
jg
push
iret
dec
jp
cwtl
call
arpl
ljmp
iret
push
movsl
xchg
scas
xchg
cmp
std
push
mov
cld
or
scas
sbb
jo
ja
inc
lahf
cmp
mov
insb
loop
push
out
mov
pushf
jns
scas
jae
test
mov
push
xchg
addr16
inc
shrb
insb
loopne
cld
mov
pusha
mov
das
scas
and
mov
out
ffreep
jae
push
lods
mov
lds
sbb
mov
int
lods
mov
adc
dec
mov
jb
push
popa
into
jle
pop
idivl
adc
push
leave
xlat
push
lret
out
inc
imul
aas
cli
lahf
les
fisubl
ljmp
lcall
jmp
insl
pop
inc
add
ret
mov
adcb
adc
cmpsl
jg
and
jmp
ja
jge
into
aaa
out
fsubrs
stos
jae
lea
jns
cmpl
push
sbb
addl
and
div
jle
fninit
fidivs
rorl
loopne
cld
and
inc
pop
or
cmpsb
push
dec
in
scas
daa
cltd
ret
add
push
aad
fwait
xchg
insl
pop
repnz
add
mov
arpl
out
loopne
out
data16
mov
dec
mov
lahf
or
inc
repnz
adc
lea
mov
sbb
adcl
enter
dec
mov
bound
lahf
adc
mov
cmpsb
nop
mov
lea
dec
push
sbb
das
sbb
inc
jmp
jg
mov
in
cli
cmp
faddl
aam
dec
mov
iret
popf
sub
cwtl
cmp
rclb
mov
mov
jne
fstpt
lret
push
mov
push
addr16
push
adc
das
arpl
jecxz
mov
je
pop
adc
addr16
push
lcall
aad
aam
js
rorb
jecxz
mov
insl
pop
mov
fisttpl
ja
mov
push
mov
sti
fs
aad
dec
push
adc
in
xchg
push
adc
outsl
stc
fldl
cmp
add
jge
xchg
lods
dec
sar
or
imul
shlb
into
inc
sahf
mov
sti
aaa
addr16
inc
movsb
popf
sbb
sub
and
js
cli
inc
mov
cmp
push
or
sbb
aas
mov
popa
push
repz
jae
imul
push
sti
or
movsb
mov
add
mov
pushf
stc
stc
sbb
push
mov
dec
cmp
adcb
sub
sub
mov
dec
in
push
test
ss
dec
adc
inc
sbb
shlb
out
arpl
pop
movsb
dec
or
popa
jne
add
xor
pop
inc
stc
sub
xor
mov
outsb
mov
repnz
int3
aas
rol
xchg
inc
rclb
sti
js
bound
subl
xor
cltd
push
mov
enter
inc
call
rcll
addl
in
jb
sar
jnp
rcl
inc
cmpsb
lcall
jg
jnp
jae
add
in
cld
bswap
insb
fisubs
cmp
pop
mov
std
dec
and
lret
pusha
int3
xorb
inc
stos
int3
and
js
dec
testb
stc
adc
jl
jno
or
jecxz
lret
repnz
adc
push
loope
mov
ret
loopne
ret
call
arpl
int3
jp
test
fimull
daa
filds
mov
lock
outsl
jg
je
xchg
out
cld
pop
cmp
push
js
pandn
aaa
test
sbb
push
xor
cltd
ja
out
mov
jbe
dec
scas
pop
ret
sahf
cli
add
push
xchg
inc
and
cmpsb
insb
das
mov
leave
jmp
xor
stc
imul
int
call
inc
cld
cmp
push
adc
mov
adcl
repz
inc
mov
add
ljmp
adc
in
std
into
push
popa
jns
cmpb
es
pop
mov
or
in
inc
arpl
xlat
cmp
lds
out
mov
inc
push
rolb
mov
pop
jle
in
fs
jns
pop
sub
mov
jl
data16
stc
and
add
lea
cmpsb
mov
sbb
xor
pop
dec
lods
fisttpl
adc
cmp
leave
jp
outsl
lods
shll
aad
adc
mov
sub
jge
xor
popf
xlat
add
int3
push
aam
jbe
or
test
push
lcall
arpl
cli
mov
out
rorb
stos
enter
mov
incb
inc
movsl
adc
jns
push
lods
rcrb
lret
outsb
mov
neg
lea
mov
jle
lret
outsb
mov
push
xchg
inc
jp
or
inc
push
in
add
mov
xchg
mov
xchg
jle
shll
fs
add
cmp
xchg
dec
aaa
dec
jo
xor
xchg
shl
nop
mov
cmp
mov
neg
push
ljmp
or
add
mov
or
sub
cmp
xchg
push
repz
xchg
jns
lret
mov
jae
ds
popa
sub
out
mov
ret
jge
sti
sub
hlt
pop
and
pop
add
rclb
push
dec
add
mov
sub
pop
sarb
sub
sbb
mov
movsl
cs
call
xor
lahf
push
add
add
xor
xchg
mul
shl
test
aas
xchg
mov
je
out
mov
xorl
dec
dec
xchg
jo
mov
sbb
inc
ret
out
mov
lret
int
nop
daa
xlat
test
std
push
ja
stc
cmp
pushf
int3
jae
mov
jp
and
std
mov
add
cmc
ss
xchg
sub
sub
mov
inc
mov
iret
cld
cli
push
shlb
or
js
push
pop
mov
data16
inc
sbb
pop
inc
add
xchg
sbb
cmp
push
cmp
aaa
or
ror
cmp
dec
pushf
repz
fnstsw
jl
xchg
in
inc
js
scas
jno
or
mov
mov
mov
xor
fstl
xor
push
jmp
fnstenv
and
mov
repz
dec
leave
push
jp
pop
mov
adc
xchg
mov
mov
pusha
inc
xchg
xlat
jb
adc
mov
jo
out
clc
insb
xchg
mov
mov
testl
jno
inc
pop
loop
inc
popa
jne
push
xchg
pop
add
cmpsl
cmp
inc
int
loope
or
sbbl
push
sarl
lret
movsb
xor
push
mov
jbe
inc
xchg
rcrb
sub
fdivl
or
movsl
lldt
adc
int
push
mov
add
sub
ss
inc
mov
mov
xchg
xor
xchg
push
jecxz
ja
and
outsb
sar
les
lea
and
xchg
adc
aas
int
js
loopne
mov
arpl
cmp
cmpsb
cmpsb
mov
fcmovne
test
mov
loopnew
decl
fbld
fucomp
add
sar
inc
inc
cmp
addl
jle
lret
addr16
push
mov
mov
sub
and
cmpsb
jae
push
mov
arpl
dec
in
xchg
jb
pop
xchg
js
dec
in
push
aaa
jecxz
cmpsl
push
scas
lahf
fwait
dec
or
mov
xchg
ds
dec
lcall
xlat
mov
jno
sarb
mov
mov
pop
xlat
cmpsl
adc
push
aam
mov
cmc
daa
ret
adc
int3
cmc
lahf
repz
adc
cltd
ljmp
cmc
idivb
cmpl
xchg
outsl
xchg
and
push
or
sbb
jp
loope
pop
mov
xor
sti
push
adc
pushf
cmp
js
outsl
mov
xchg
lods
imul
inc
mov
adc
ss
mov
nop
xchg
movsl
push
mov
repz
push
push
inc
push
jo
sbb
mov
aad
add
insb
fldl
adc
xchg
mov
xchg
sti
dec
adc
adc
faddl
push
add
pop
jo
add
cmc
inc
in
or
cld
and
mov
fs
mov
cmpsb
adc
aad
jg
jo
pop
mov
int
cld
out
mov
cwtl
nop
mov
push
repz
mov
std
push
xchg
fisubs
leave
mov
dec
cmp
cwtl
rclb
dec
jmp
std
adc
sbb
mov
xor
dec
lcall
push
add
hlt
movsb
js
mov
jle
adc
and
mov
shrl
shl
movsl
mov
add
dec
inc
shlb
or
cmp
mov
xchg
cli
lods
xchg
pop
sbb
ss
and
jb
out
add
adcb
in
add
mov
loopne
mov
sub
movsl
pop
scas
movsl
pop
stos
mov
and
dec
jp
mov
adc
mov
lret
sbb
pop
push
out
cmp
ret
rol
and
js
in
int
sub
fnstenv
push
and
add
out
mov
add
add
push
call
inc
std
out
inc
xchg
das
daa
movsb
out
sub
sahf
std
xor
mov
cltd
jns
dec
dec
xchg
pop
jmp
rcrb
in
xchg
sub
inc
xor
into
pop
pop
je
or
popf
cmp
rol
mov
test
push
movsb
arpl
fcmove
vmovsldup
cld
cmp
into
xor
inc
sbb
sbb
cmpsl
push
xchg
pop
stc
fs
ficoml
dec
push
cmc
and
xlat
fwait
test
sub
jns
xor
sbb
lods
out
xor
fsubs
sub
mov
sub
pusha
xor
mov
repnz
cmp
je
jae
rcll
les
cmpsb
jns
into
cwtl
push
icebp
enter
push
ret
xor
mov
xor
or
fwait
pop
std
xchg
loop
xchg
or
inc
fucom
cli
loopne
std
sub
stos
fs
or
push
testb
scas
and
iret
ficoms
mov
aas
imul
mov
jecxz
push
sub
aas
in
mov
sahf
pop
cmc
fists
mov
mov
jbe
adc
adc
inc
imull
je
js
jle
sbb
jae
sbb
int3
mov
adc
push
outsb
push
push
fs
movsb
leave
push
cwtl
jmp
adc
aad
int3
js
inc
ds
std
push
cld
mov
xchg
fstpl
mov
mov
sub
fimull
push
ja
inc
aad
mov
pop
stos
xor
clc
mov
xor
fstp
mov
mov
ficoms
push
sbb
cmp
adc
xchg
roll
or
insl
fucomip
repnz
pop
fcoms
cmp
out
pop
or
aam
and
cld
mov
ret
sbb
cmp
cmc
in
ret
xor
mov
add
jg
lds
sub
loop
xor
lcall
fwait
cltd
insb
cmp
add
shll
add
jge
inc
cmp
out
cld
xchg
movsl
ret
sbbl
mov
or
insl
daa
into
mov
popf
mov
sti
xor
push
rclb
lods
clc
jg
out
push
fcomip
and
mov
es
lahf
daa
lret
sbb
aam
addr16
loope
inc
xchg
insl
cld
popaw
punpckldq
jp
jne
jl
repnz
fmull
lods
fsubl
xor
pushl
stos
add
ljmp
jbe
leave
adc
push
repz
out
pop
iret
test
outsl
mov
cmp
push
je
int
gs
add
lods
orb
pusha
add
aad
cs
xchg
and
mov
mov
fcompl
xor
and
jnp
inc
mov
mov
xor
jbe
inc
jg
sbb
sub
pop
rcll
add
cmp
clc
xlat
sub
dec
and
mov
xor
sbb
sbb
dec
adc
sysret
lods
fmull
movb
xor
mov
xchg
jbe
xchg
push
cmp
push
imul
push
xchg
dec
fiaddl
cmp
xchg
sbb
and
lock
xchg
lret
out
stc
arpl
call
cwtl
ja
xchg
in
repnz
dec
pop
xor
xor
imul
jns
dec
test
mov
mov
inc
lods
lds
push
and
sbb
call
xchg
dec
aaa
dec
and
inc
add
sbb
mov
inc
sbb
enter
stc
xor
lods
xchg
add
dec
in
inc
divb
adc
sub
es
dec
dec
fistl
dec
sub
rcrb
loope
sbb
cmp
les
mov
rol
mov
or
and
adc
inc
sub
xchg
push
loop
xor
push
lock
lcall
movsl
fwait
push
test
je
fnstcw
fincstp
pop
dec
pop
sti
iret
and
push
jmp
cmp
cltd
sub
jmp
push
jno
hlt
aad
inc
mov
inc
lahf
dec
lcall
mov
jae
sbb
cwtl
fwait
mov
pop
mov
push
sub
jecxz
push
lods
push
jp
ja
ljmp
cmp
mov
jmp
xchg
and
xor
mov
mov
std
pminsw
and
movsb
fstl
cmp
lret
stos
cmp
loopne
sbb
data16
push
ret
repnz
lahf
ret
rcl
repnz
jbe
add
xor
jo
call
jae
mov
inc
or
dec
cmp
adc
sub
xor
scas
cltd
xchg
inc
lock
icebp
iret
pop
pushf
leave
iret
mov
adc
jnp
aam
orl
push
out
orb
test
jne
inc
mov
out
pusha
mov
out
sarl
inc
es
push
mov
fs
mov
xchg
push
insl
mov
xchg
subb
clc
jecxz
movsb
icebp
pop
fs
xlat
jo
pop
aas
into
jns
insb
fnsave
fimull
outsb
ja
or
int3
inc
outsb
mov
sub
popa
mov
setbe
lahf
and
inc
cwtl
test
stc
imul
pop
or
scas
and
in
fnsave
or
mov
push
aad
scas
push
sbb
pop
inc
inc
push
lock
xor
fucom
sub
mov
xor
loop
mov
lret
xchg
nop
mov
arpl
pause
push
mov
popf
bnd
roll
retw
xchg
dec
or
xor
inc
lret
fmuls
sbb
cmpsb
mov
loope
jb
mov
scas
cld
sbb
adc
loop
jge
and
xchg
shrl
fadd
out
jbe
or
pop
sub
ds
scas
jge
inc
dec
fildl
leave
mov
push
bound
sub
cmp
enter
stc
cmp
ficompl
lds
mov
pop
cmp
mov
fsubrp
cmc
nop
loopne
sar
test
cmp
or
pop
ret
fs
jno
subl
jle
ss
lcall
mov
mov
push
in
lods
jmp
pushf
out
test
repz
mov
repnz
lods
push
mov
add
jecxz
pop
in
add
cmp
add
cwtl
cmp
cmp
pop
pop
and
mov
push
mov
jbe
mov
cmp
xor
push
inc
std
in
lds
xchg
cmp
cmp
decl
add
ds
push
inc
mov
in
pop
xchg
gs
xor
inc
aam
xor
pop
pushf
inc
jp
xor
aas
fiadds
hlt
out
mov
inc
out
or
jbe
push
adc
dec
or
subb
jbe
lock
mov
lds
inc
negl
in
dec
pop
add
fmuls
cmp
sbb
aaa
ret
test
out
std
mov
mov
dec
mov
icebp
movsl
iret
xor
fcomps
or
aaa
mov
outsb
mov
out
mov
xor
push
inc
test
adcl
jge
mov
nop
pusha
shll
fdivl
das
or
fsubs
or
dec
aas
xor
inc
lret
lock
insb
loopne
mov
and
pop
or
mov
div
sub
and
loope
push
aam
pop
neg
mov
inc
add
mov
ds
add
into
stos
xchg
mov
mov
jb
fs
jno
sbb
leave
jne
xchg
cmpsb
mov
cmpsl
and
xchg
iret
mov
call
ja
add
sbb
xlat
pop
and
out
lods
mov
loope
lret
mov
inc
loope
gs
jo
std
push
pop
sub
push
cmp
sarl
cmc
ja
xchg
hlt
mov
jmp
pop
and
imul
pop
xor
lods
mov
leave
mov
jp
orl
clc
dec
or
das
popa
fmull
pop
rolb
push
ret
mov
movsl
sbb
and
arpl
add
jge
dec
out
pop
mov
pop
adc
aad
cli
imul
push
mov
mov
aad
push
stos
adc
add
cmpl
mov
cmp
mov
fsubrp
push
push
pop
and
cli
loopne
add
fcoms
aas
sbb
push
and
jmp
adc
and
sbbl
cmpsb
dec
pop
scas
insb
or
jne
xchg
ja
test
ret
adc
test
shll
das
arpl
scas
xor
popf
loopne
mov
sub
pop
shl
mov
fdiv
or
bound
mov
cmp
jge
repnz
test
pop
fsubrs
icebp
in
cwtl
mov
pop
insl
rep
and
pop
pop
js
xor
popf
and
pxor
inc
ret
pop
jbe
jle
je
push
daa
test
add
in
jl
or
jecxz
aad
mov
dec
fnstsw
icebp
jbe
xor
cmpsb
int
dec
stos
mov
dec
stos
push
jp
sub
std
mov
scas
je
adc
sub
inc
popw
sbb
jp
and
fildll
mov
sti
scas
popf
daa
dec
outsb
iret
pop
repz
mov
pop
shl
ds
mov
xchg
stos
test
jecxz
lar
jnp
adc
xchg
mov
ja
lds
gs
push
aam
outsl
loope
and
pop
push
push
in
outsb
push
pop
cmp
aad
das
pushf
ss
aam
lods
sub
adc
and
jae
sarb
test
mov
or
jb
in
out
hlt
std
loopne
mov
cmp
or
insb
stc
pop
push
arpl
cmp
aas
icebp
aad
sbb
test
mov
push
mov
sub
mov
shlb
jae
in
fsubs
lock
into
add
push
pusha
push
icebp
nop
xor
jle
mov
mov
dec
cmpps
xchg
jge
fistl
test
mov
out
andl
out
pop
mov
insl
addr16
mov
inc
popf
adc
sub
rclb
add
dec
enter
int
inc
adc
pop
test
rorl
gs
fistpl
mov
imul
outsb
es
cs
add
test
cltd
or
sbb
movsl
movsl
push
jb
iret
fwait
cmpsl
in
loopne
fwait
cmp
or
sbb
sbb
jp
jge
ret
lret
mov
xor
jne
mov
adcl
xor
rclb
xchg
inc
jl
cs
loop
or
push
push
sbb
arpl
mov
cmp
cmp
aad
cmp
out
mov
outsb
fwait
imul
mov
mov
mov
out
aam
aam
std
ret
cmp
es
movsl
dec
mov
or
sub
shlb
mov
fstl
ds
pushl
and
inc
lcall
push
mov
adc
cmp
push
sub
add
into
in
inc
jnp
pusha
roll
sbb
cs
jmp
pop
and
pop
imul
cmp
jae
subb
dec
int
dec
pop
inc
sbb
das
adc
dec
imul
sbb
jno
add
mov
sub
movsl
aas
js
lock
sub
setbe
sbb
jg
cmp
je
sub
and
xor
push
jo
cmpsb
inc
bnd
jo,pt
cmp
fbld
fiadds
jl
sar
popf
aad
ds
jbe
sub
sahf
mov
outsl
mov
xchg
push
aam
fmul
roll
cmp
inc
mov
sbb
xor
or
pusha
movsb
std
call
mov
fstpt
outsb
jne
sub
sbb
inc
mull
add
ja
icebp
xchg
inc
loope
aad
sahf
xor
arpl
and
push
sbb
test
xor
mov
cmp
fs
and
jne
loop
sub
mov
xor
mov
mov
ficoms
cli
lret
and
in
shrl
std
ret
push
xchg
sub
push
xchg
cli
jno
js
xchg
dec
ja
jmp
dec
jns
ret
push
xchg
or
dec
movsl
in
imul
mov
aam
lock
movb
inc
or
jae
sbbl
adc
fstpl
jo
jmp
cmpsl
or
rorl
lret
js
and
not
bound
cmp
movsl
js
mov
sub
pop
xchg
push
jno
ret
jo
outsb
mov
inc
in
lods
pop
cwtl
sub
stc
addr16
adc
push
ja
inc
add
lret
push
adc
rorl
xchg
out
adc
fwait
or
mov
bound
mov
lret
insb
ret
pusha
aad
ret
jg
fwait
clc
cld
outsb
movsl
inc
sub
add
adc
dec
in
bound
rcrl
push
adc
sbb
mov
shrb
leave
ljmp
sub
jecxz
or
fdivl
cmp
sub
sub
cmp
lods
jecxz
outsb
xor
test
and
mov
mov
jns
sub
push
loopne
idivb
outsb
sub
cwtl
dec
pusha
push
js
sbb
outsb
rclb
jo
mov
pop
mov
pop
mov
aad
sbb
lahf
lea
loope
jmp
inc
xchg
les
mov
mov
jl
test
pop
xor
jo
lods
repz
jnp
add
add
icebp
mov
out
fisubrl
ja
sbb
hlt
mov
int
add
mov
sar
ljmp
mov
int3
pop
fisubs
rolb
adc
pop
push
pop
xor
popa
test
cmpl
stc
mov
pop
movsl
cmp
cmp
xchg
and
adc
lods
hlt
jl
mov
rcll
xchg
pop
sub
mov
cli
push
cli
cmp
inc
xchg
out
or
test
repz
pop
xor
push
jg
lds
xor
mov
xchg
adc
imul
rorl
dec
out
xor
jbe
jb
cmpl
cmpsl
jne
rcrl
movsb
mov
push
int
das
ret
sbbb
das
stc
push
stc
fs
loope
xchg
aam
ljmp
ss
scas
out
push
ret
pop
int3
mov
inc
in
add
pop
jmp
mov
pop
in
imul
hlt
mov
mov
lahf
push
push
xor
imul
pop
sahf
pop
xchg
sbb
jecxz
xchg
jl
nop
mov
lret
xor
clc
ret
cltd
push
cmp
aam
sarb
push
lods
insb
dec
add
push
and
orb
sahf
outsl
xor
stc
xchg
ret
mov
dec
dec
cmp
jecxz
addr16
adc
shll
cld
or
push
fs
pop
ds
and
shlb
sub
rcrl
imul
jl
jge
cmp
push
ret
repz
push
cltd
loop
and
imul
faddl
jb
lahf
imul
in
pop
or
repz
jmp
fimull
sub
adc
adc
jno
fldt
addr16
pop
js
test
nop
filds
enter
push
test
mov
sub
pop
sti
push
ficoms
imul
or
data16
mov
cmp
mov
hlt
es
sub
jl
daa
sub
mov
outsl
in
mov
sub
insb
xor
pusha
and
xchg
clc
xor
add
or
das
loop
insb
inc
xchg
jp
pop
mov
mov
lcall
xchg
shlb
je
add
cltd
adc
add
in
aad
push
pop
xchg
push
mov
inc
shrb
aas
cmp
js
ds
xor
push
mov
inc
mov
aaa
aaa
lock
jae
dec
movsl
and
test
das
fstpl
xor
cwtl
push
add
jbe
sar
xchg
outsb
ret
lahf
cmp
dec
pop
cmp
loopne
pop
jecxz
incb
outsb
lret
jecxz
insl
xchg
sub
inc
cwtl
xor
data16
push
stos
fdivrs
imul
enter
cli
sti
mov
imul
outsl
and
inc
xchg
and
push
in
mov
dec
dec
test
rorb
xchg
jmp
fdiv
mov
or
pop
xchg
scas
decl
sbb
mov
add
in
test
sub
sbb
jl
sub
adc
and
idivb
adc
adc
jno
and
iret
test
push
adc
insb
add
xchg
ja
dec
bound
in
cmp
lods
sub
pop
sbbl
cmp
add
lahf
lock
cmp
fiaddl
adc
push
mov
mov
es
aaa
neg
xlat
std
add
ret
scas
icebp
lahf
fstpl
pop
cmc
fwait
or
stos
jg
hlt
int
mov
iret
rorb
imul
mov
pop
idivb
sub
arpl
jle
pop
cmpsl
sub
insb
cwtl
outsb
test
fnstenv
ja
ljmp
test
push
mov
lcall
inc
jae
sub
hlt
imul
sub
or
sbbl
pop
mov
xor
sbb
out
and
dec
mov
xchg
push
rcrl
inc
gs
dec
mov
out
xchg
or
ljmp
repz
imul
out
adc
xchg
sub
pop
into
xchg
cmpl
imulb
aaa
mov
mov
pushf
stos
mov
fbstp
jne
hlt
mov
dec
rorl
stc
sub
xchg
ds
les
sub
test
das
cmp
movsl
aas
aas
jnp
sbb
mov
mov
sub
fimuls
sbb
lea
iret
or
fiaddl
xor
adc
push
xchg
mov
sbb
lods
scas
sbb
add
add
mov
cld
mov
jmp
cmc
cmp
mov
daa
mov
out
cli
pop
jp
mov
test
push
dec
aad
cmc
sub
pop
mov
minps
mov
lcall
cmp
add
sbb
mov
divb
movsb
sbb
jbe
aas
test
scas
xlat
jmp
xchg
inc
mov
stos
jb
in
ret
daa
movsl
cmp
inc
sahf
aam
in
fidivrl
or
sbb
pop
repz
cmp
pop
push
test
test
nop
popa
ja
xlat
xlat
fcmovu
cmc
fwait
sub
sbbl
les
fs
xor
inc
mov
dec
movsl
sub
jnp
xchg
cmp
cmpsb
arpl
inc
fsubs
loope
and
ss
mov
push
mov
mov
shlb
push
push
leave
inc
lret
jb
mov
sub
sti
mov
ljmp
xchg
cwtl
orb
fcomip
shll
xchg
sub
and
loope
loop
fstl
push
pushf
pop
popw
push
lods
pop
loopne
int
sbb
xchg
jae
les
fiadds
push
jg
mov
outsl
mov
sti
lods
andb
lahf
fwait
js
std
addr16
imul
sbb
jb
stc
loopne
dec
inc
pop
xchg
dec
cli
jbe
addr16
fnstsw
push
rorl
roll
jp
pop
sbb
xor
je
mov
mov
cmpsb
out
in
cmp
mov
mul
inc
cmc
add
push
ss
push
xchg
push
xchg
mov
repz
cmp
daa
mov
sub
add
pop
add
xlat
push
idivl
pop
dec
mov
ja
stos
sahf
xchg
cmp
js
push
cs
pop
mov
sub
push
icebp
aas
push
popf
fs
inc
adc
orl
repnz
sbbl
xor
xchg
lods
ss
aad
lea
dec
add
out
lea
dec
dec
iret
xor
aaa
xor
mov
mov
in
mov
mov
adcb
or
xor
shll
stos
rorl
iret
add
xchg
leave
push
js
jb
movsb
mov
sub
stc
mov
xchg
or
push
out
xor
and
ret
and
pop
add
push
sub
fstps
cmp
mov
adc
cmp
cmpsl
out
jae
jns
sahf
int
xor
lcall
fsubrs
or
popa
sarl
jo
aam
popa
xchg
outsl
sti
dec
scas
les
inc
rorl
das
jns
mov
cmp
and
repz
imul
xchg
jmp
xchg
js
jno
repz
aad
dec
andl
xchg
jge
ja
or
stos
mov
pusha
inc
xor
pop
test
push
and
pop
mov
inc
fiadds
pop
es
pop
lahf
jle
jle
lret
das
jne
mov
or
mov
ficompl
fidivrl
andb
push
js
push
xchg
jns
pusha
mov
jae
add
sbb
es
jmp
xor
pushf
jle
push
scas
ja
push
mov
mov
out
xchg
dec
ja
cltd
movb
dec
jne
xor
mov
and
in
xor
and
cs
je
arpl
rorb
sbb
xchg
sbb
into
sti
scas
cmp
inc
jno
lock
lods
and
pop
add
sub
test
mov
cld
addr16
mov
pop
or
jmp
leave
pop
fcmove
lods
inc
mov
sub
stos
roll
xchg
es
sbb
jne
test
mov
xor
rcrl
orl
in
imul
inc
fs
out
in
mov
dec
in
lods
out
inc
into
ret
lret
jno
and
lods
popa
cmp
xor
fldcw
and
push
leave
fcmovbe
out
or
popf
xor
mov
mov
loop
and
jmp
and
lock
bound
repnz
shrl
imul
ja
adc
mov
imul
das
xor
lret
xor
push
ret
mov
dec
loopne
cmp
vcvtsd2ss
lret
jmp
mov
stos
fstpt
xchg
mov
imul
add
sub
adc
pop
mov
mov
mov
push
gs
mov
notl
insb
pushf
cli
nop
adc
mov
push
lds
mov
jg
xchg
push
mov
in
std
into
xchg
aas
mov
lret
movsb
ds
out
jae
xlat
jb
jnp
loop
out
adc
or
cld
push
in
add
incl
mov
xchg
insl
pop
pop
mov
mov
lret
mov
push
add
sub
inc
dec
inc
dec
js
adc
call
inc
push
push
pop
add
sbb
or
inc
lea
xchg
fwait
mov
loopne
imul
icebp
jp
shlb
adc
and
push
scas
mov
push
aas
mov
dec
xor
push
rcr
push
movsl
rolb
xor
movsb
xlat
adc
flds
sbb
loope
fwait
or
faddl
adc
jp
shlb
xchg
xor
cmc
add
or
pop
mov
rcll
and
cld
sbb
cmp
dec
mov
pop
pop
and
add
popf
cld
cmpsl
push
fwait
inc
out
lret
inc
imul
out
insl
jne
scas
sub
ret
popf
push
fs
inc
dec
inc
shr
and
jl,pt
outsl
pop
or
cmpsb
fdivrs
ljmp
das
lcall
out
mov
leave
cmpsl
fcomip
pop
adc
pushf
mov
jl
pop
push
mov
xor
addl
mov
adc
ljmp
add
loope
dec
outsb
lret
jne
shlb
int
mov
push
mov
gs
test
push
stos
and
add
sbb
sbb
inc
daa
xchg
mov
loopne
sti
and
fmuls
dec
rolb
aas
fldt
sub
mov
jb
cli
in
xlat
or
pusha
icebp
and
sahf
add
pop
xor
add
scas
fnstsw
inc
in
es
adc
cmp
jl
pop
inc
cmp
sbb
in
int3
movsb
jmp
shl
push
mov
add
rep
push
iret
pop
rorl
enter
and
clc
and
mov
adc
sar
pop
cmp
je
pop
lods
dec
lods
sub
lock
scas
cmc
mov
outsl
std
xlat
pushf
mov
aad
jbe
sub
bound
mov
pop
jb
iret
imul
sbb
dec
mov
mov
addr16
shrl
ret
imull
inc
out
popf
sbb
mov
xlat
add
aas
dec
test
outsl
movsl
add
es
mulb
mov
pop
mov
and
cmpsl
jae
shlb
push
cmc
incb
xchg
add
sti
outsl
jnp
push
pop
xor
mov
stos
hlt
add
adc
fxch
mov
pop
sub
dec
add
out
push
mov
scas
and
jge
mov
add
pop
inc
xlat
push
repz
sub
jb
lret
jle
mov
out
mov
xchg
xchg
outsb
push
sbb
filds
es
mov
stc
out
insl
cmpsl
out
das
enter
in
and
and
inc
je
add
sub
and
cmp
out
sbb
sti
pop
lea
mov
movsl
mov
loope
pop
xchg
mov
in
and
or
adc
jb
imulb
xchg
dec
dec
aaa
lcall
dec
push
mov
insb
mov
jns
divb
sahf
push
pop
loopne
fildl
or
xchg
vmwrite
inc
sbb
outsl
xor
scas
scas
sti
and
cli
packsswb
push
jns
mov
mov
lahf
ljmp
xchg
cmpsl
push
inc
out
jne
fsubs
aad
fimull
inc
dec
sahf
dec
lods
sbb
bound
sysret
dec
xchg
ss
ljmp
and
stos
xchg
cs
mov
jne
push
xlat
cmp
rorl
aam
add
xchg
xor
mov
sahf
cmpsl
aad
adc
jno
inc
add
inc
inc
mov
aad
fcmovnu
and
int3
pop
push
adc
cwtl
cmp
and
shlb
push
push
dec
sti
fwait
sarb
out
add
fucomp
mov
mov
jle
mov
dec
je
fcmovb
shll
push
mov
mov
gs
jb
dec
cmp
adc
lds
sub
test
cli
xorl
je
in
adc
pop
clc
cmc
movsl
cmp
mov
xor
ja
aam
cld
cmp
popa
and
adc
xor
jp
inc
js
into
lods
stos
cmpl
cli
out
pop
pop
jecxz
cltd
mov
ja
add
push
lcall
in
jno
cmp
adc
cmpl
rclb
sbb
add
lock
hlt
mov
aam
repz
hlt
data16
movsl
sbb
and
push
into
or
adc
shlb
cmp
addr16
cmpsl
dec
insl
dec
and
sub
scas
repnz
cltd
hlt
outsl
ret
aam
sbb
dec
pop
xchg
sti
hlt
outsb
push
jo
stc
jg
mov
ror
dec
out
adc
dec
mov
pop
movsb
mov
mov
test
add
adc
dec
adc
loop
fnstsw
sbb
aaa
xor
pusha
clc
push
lods
inc
popa
mov
inc
ljmp
ficoms
push
jle
rcll
mov
cmp
popa
push
insb
sub
test
xchg
fwait
add
and
outsb
add
sub
rcl
ss
mov
adc
inc
cs
and
push
gs
enter
lahf
ss
push
daa
test
inc
fsubrl
inc
loop
daa
imul
scas
xchg
lahf
mov
lret
mov
jmp
jmp
inc
cmpsb
or
ja
sbb
mov
pop
les
pop
pop
jg
adc
testl
test
cmc
xchg
sbb
in
jo
jecxz
pushf
push
sti
xor
push
movsb
cs
pmuludq
dec
dec
imul
ljmp
xor
fnsetpm(287
lahf
sub
mov
cmpsl
sbb
mov
jb
flds
test
pop
ficomps
and
movsb
mov
aaa
jne
out
nop
mov
into
xchg
jge
dec
mov
or
addr16
arpl
test
mov
jg
sub
pop
lahf
test
adc
mov
xchg
aad
mov
pop
push
mov
jbe
lret
pop
jne
cld
xchg
xchg
dec
lret
pop
in
or
test
fwait
xchg
sbb
fidivs
jae
cs
pop
lahf
mov
outsl
push
mov
cmp
shl
xor
loop
lods
xchg
negl
pop
repz
loopne
mov
push
in
mov
out
jg
out
or
test
je
ljmp
enter
lock
xchg
into
call
lcall
dec
mov
mov
add
adc
xchg
es
lea
jns
fstp
ljmp
push
icebp
mov
mov
inc
xchg
xchg
sbb
lcall
ret
mov
cs
push
cltd
mov
xchg
out
std
push
cli
cmp
mov
cmp
or
jecxz
cmc
jne
test
cmp
pop
jecxz
push
in
repz
sub
jnp
xchg
in
and
adc
lret
mov
sbb
push
xchg
pop
ljmp
loopne
and
icebp
out
pop
jg
jge
dec
mov
add
roll
cli
cmp
adc
in
fwait
rolb
sbb
fdivs
jne
inc
lods
add
inc
fs
inc
repz
dec
fisttpl
xlat
outsb
test
arpl
dec
mov
adc
xchg
inc
loop
push
mov
add
addb
dec
mov
inc
xchg
fs
jne
sbb
push
adc
jne
stc
in
cmp
rorl
lock
fcomi
outsl
lds
mov
sub
ds
xcrypt-ecb
cmpsl
dec
mov
aas
clc
add
push
add
test
adc
test
std
out
xchg
sbb
in
mov
pushf
xor
pop
mov
mov
inc
pop
push
push
aas
xchg
popf
mov
enter
xchg
pop
mov
sbb
and
mov
repnz
mov
imul
test
xor
pop
pop
cwtl
out
push
mov
jge
pop
leave
repnz
push
cli
aad
jge
inc
sbb
mov
sbb
inc
clc
or
inc
leave
xchg
movsb
js
andl
fdivs
adc
adc
xor
dec
sti
xchg
inc
call
fsubs
jno
imul
arpl
rolb
pop
sub
imul
inc
dec
pop
push
icebp
xchg
lret
scas
out
rclb
push
xchg
js
dec
or
loop
sub
iret
lock
cli
pop
imul
outsl
fwait
jo
dec
inc
push
leave
js
repnz
xchg
rcr
lds
cvtps2pi
adc
xchg
sub
mov
idivb
push
pop
fisubl
dec
mov
nop
dec
out
or
int3
mov
popf
inc
inc
mov
out
movups
pop
xchg
mov
add
cmp
mov
cmpsl
xchg
jo
je
decb
cs
mov
dec
xlat
adc
xlat
jmp
or
sub
lahf
lods
pop
mov
add
sarb
push
mov
mov
out
sbb
leave
adc
pop
mov
or
out
mov
icebp
jge
xor
out
insb
sub
outsb
jmp
mov
jae
and
lret
imul
mov
movsl
negb
loop
outsl
mov
aam
add
shrb
lods
sub
jno
add
dec
sbb
mov
insl
push
xlat
add
daa
or
inc
daa
and
insl
ljmp
inc
loope
push
sbb
xchg
mov
decl
fstpt
shlb
adc
fwait
jle
cmp
sub
movsl
mov
sbb
cmp
mov
fdivr
cmpsl
js
das
movsl
sub
inc
gs
ss
jp
fsub
push
and
pop
dec
mov
mov
movsb
mov
mov
xor
ret
fcomps
mov
mov
test
pop
imul
iret
xchg
jg
cmp
push
push
and
aaa
repz
cmpsl
xor
je
mov
outsl
addl
ret
roll
mov
ss
clc
test
inc
pushf
dec
sub
pop
add
or
ss
orl
loope
ja
jecxz
xchg
std
xchg
mov
call
mov
lods
mull
inc
mov
push
or
loopne
cmp
inc
dec
xchg
inc
mov
push
jbe
cmpsl
mov
cmpsb
aas
pop
inc
scas
test
xchg
stos
popa
arpl
sahf
pop
movsl
sub
inc
push
nop
out
xchg
pop
lret
pop
jmp
xchg
dec
shll
push
jp
jecxz
outsl
mov
out
xor
fdivrp
mov
mov
jle
pop
push
push
adc
cs
stos
lods
xor
std
scas
cmp
jo
add
lcall
add
mov
or
mov
data16
and
dec
dec
rcll
push
sbbl
sbb
inc
jle
in
push
push
mov
fwait
push
add
sti
popf
outsl
pop
lds
xchg
aaa
mov
mov
sbb
idivl
js
cmp
or
ja
ret
add
scas
mov
push
in
shrl
cmpsl
aaa
mov
sub
ss
push
popa
xchg
popa
aaa
push
popf
or
adc
ljmp
sbb
pop
cmp
mov
adc
sub
in
xchg
mov
cmc
decb
adc
add
sti
jl
and
inc
mov
cmp
push
cmpsb
call
loopne
inc
jg
push
pop
mov
lock
lods
out
jns
fwait
xor
popf
mov
fwait
int
inc
or
or
jle
sub
dec
jecxz
jo
mov
sbb
mov
pop
fistpll
pop
push
push
xchg
pop
adc
sub
dec
inc
lcall
xchg
mov
mov
cwtl
enter
or
sub
test
jge
out
stos
stos
push
jae
cmp
aaa
out
movsl
cltd
getsec
inc
add
fsubs
js
imul
sbbb
inc
ljmp
adc
les
pop
push
or
pusha
lock
into
xchg
and
pop
cmp
test
mov
pusha
mov
in
std
xchg
add
fisubs
jge
jo
jbe
shll
jp
popa
lcall
andb
push
pop
push
fs
daa
cmp
ret
stos
fwait
rorl
nop
lock
jnp
pusha
gs
or
fadds
aam
dec
imul
pop
pop
jbe
and
push
xchg
push
loopne
call
and
subl
and
dec
arpl
add
cs
jle
pop
xor
call
xlat
in
jmp
imul
lods
pusha
inc
das
iret
xchg
inc
xchg
sti
jnp
pop
mov
fsubl
cmpb
push
adc
mov
xchg
xor
in
mov
iret
push
std
enter
mov
stc
fld
cmp
rcl
pusha
nop
test
xchg
pop
idivb
sub
in
out
mov
pop
xor
xor
or
mov
mov
mov
xor
sbb
pop
into
hlt
adc
flds
and
imulb
popf
enter
jbe
data16
mov
pop
push
dec
leave
mov
mov
dec
dec
fisubs
sbb
lock
idivb
hlt
sbb
scas
sub
in
xor
mov
sub
fisttpl
sti
pop
sbb
sub
lods
xchg
xor
aas
and
shll
dec
test
lret
sub
addr16
pop
jmp
lahf
or
lret
rcr
test
sbb
dec
mov
es
jge
mov
pop
mov
sarb
lahf
es
call
dec
mov
fwait
popa
inc
pop
imul
xlat
sbb
out
stos
mov
xor
jge
push
xor
mov
test
rclb
daa
clc
ja
mov
xor
mov
adc
mov
inc
call
loope
rorb
gs
pop
dec
addr16
les
push
mov
inc
outsl
cmp
jecxz
add
daa
ret
cmp
jmp
push
bound
jmp
or
adc
lcall
mov
sbb
xchg
int3
and
xor
xor
cmp
sahf
dec
andl
push
scas
fistps
xor
rol
dec
popa
js
lret
or
or
test
gs
les
std
xchg
pop
addb
mov
sub
mov
adc
insb
fcoms
mov
test
mov
out
out
mov
lods
pop
out
and
out
ret
push
dec
fmulp
inc
gs
pusha
mov
jne
stc
fsts
mov
cli
push
sbb
sbb
popf
shlb
in
lods
daa
fs
pusha
in
and
out
movb
test
push
mov
or
mov
das
sbb
inc
pop
push
jo
sub
mov
cmpsl
cmpsl
mov
add
pop
push
je
in
mov
es
les
xchg
sahf
lock
fwait
inc
and
jle
push
push
jl
sbb
fsubrs
jo
lcall
arpl
mov
icebp
mov
cmp
dec
push
push
std
jns
inc
dec
xchg
cmp
jno
mov
jg
sbb
dec
popf
adc
and
insb
xor
div
hlt
inc
lcall
xchg
jno
dec
negl
jo
mov
mov
xchg
xor
sahf
ds
mov
pushf
repz
cld
mov
push
jns
cltd
xor
cmp
jae
adcb
pop
jb
dec
add
mov
xor
xchg
mov
mov
xchg
add
add
pop
cmp
std
cmpsb
mov
jb
pop
push
pop
movsb
lock
gs
sub
std
pop
dec
adc
cltd
ja
sub
fnstsw
into
xor
mov
pop
insb
xlat
cmpsb
or
out
dec
loop
gs
stos
int
iret
loop
sub
adc
and
lret
loopne
stos
aas
shrl
out
or
adc
ljmp
arpl
pop
lcall
popf
dec
mov
cwtl
mov
iret
lock
push
shrb
jecxz
and
imul
and
fs
out
mov
orl
push
or
jmp
mov
in
pop
sub
insl
movsl
into
inc
js
lock
mov
mov
sbb
out
lods
js
sbb
movsb
jg
dec
add
mov
jecxz
mov
push
jns
subl
nop
mov
sub
xor
int
sub
ret
aad
xor
loope
cli
cmovbe
mov
shrb
inc
cli
and
lods
inc
mov
pop
imul
ret
incl
push
and
lret
test
stc
pop
enter
popa
xor
outsl
or
and
pop
sub
cltd
cmp
adc
or
sub
jbe
idivb
popa
subb
inc
fiaddl
jo
ljmp
inc
in
in
shl
cmpl
sbb
pushf
push
rcll
xor
xchg
pop
arpl
jo
sub
mov
in
or
leave
daa
sarb
lods
fdivl
nop
dec
and
lret
inc
cmp
in
mov
cmp
xchg
jge
add
imul
adc
mov
push
repz
push
leave
pop
mov
xor
movsl
pop
sti
pop
jbe
xchg
or
adc
fsubs
ds
mov
aam
jne
rcll
and
cmp
pop
fadds
into
inc
adc
data16
pop
sub
xchg
push
mov
decb
cmc
push
push
fmull
mov
or
sub
mov
loopne
outsb
out
inc
fwait
cs
addr16
mov
dec
mov
adc
lret
inc
stos
int
negl
outsb
cmp
aam
push
fbstp
push
dec
mov
call
movsb
leave
pushf
and
jmp
xchg
lcall
outsl
mov
in
jns
fiaddl
dec
mov
add
in
xor
repnz
mov
jnp
rorl
sbb
fwait
in
mov
iret
pop
das
outsb
cmc
push
pop
mov
mov
mov
loope
rcrl
push
movsl
xchg
flds
sub
jnp
xchg
iret
jno
dec
pop
jno
sbb
jnp
fs
pop
test
push
push
dec
mov
mov
loop
ror
shrb
stc
test
mov
test
fsubrl
outsb
leave
xorl
inc
jecxz
sub
mov
fucomip
clc
repnz
mov
ret
dec
lahf
pop
sub
adc
mov
test
jecxz
push
test
xlat
addr16
mov
inc
int3
mov
and
pusha
sub
shrd
dec
push
push
idivl
iret
and
lods
fcomip
test
les
xchg
popf
test
push
mov
inc
mov
gs
inc
aas
in
mov
fidivrs
mov
fistpll
daa
pop
inc
pop
mov
mov
cmpb
movsl
popf
add
adc
push
mov
scas
leave
clc
stc
push
sub
pop
jns
fiadds
fsubl
dec
mov
sub
xchg
xor
lea
and
popa
dec
jl
sub
repz
loop
add
js
mov
xor
jp
insb
mov
scas
lret
stc
or
xor
lea
sub
adc
jmp
sub
pop
inc
mov
mov
or
scas
push
mov
mov
jge
mov
jle
mov
out
inc
outsb
out
pop
fisubrl
xchg
dec
stos
repnz
mov
orl
xchg
mov
cld
xchg
dec
pushf
pop
or
xor
mov
arpl
shrl
adc
mov
and
fbstp
ror
sub
dec
aad
pop
fwait
inc
sbb
mov
inc
and
imul
mov
into
mov
dec
xor
lahf
std
ret
sbb
mov
shrl
shlb
pop
xchg
insb
icebp
push
lret
and
mov
orb
scas
cmp
cmpsb
mov
mov
mull
mov
jbe
sbbb
cmc
mov
lea
and
ds
out
xchg
mov
ljmp
sahf
fmuls
xchg
fwait
incb
adc
jae
cmpb
xor
popa
dec
mov
cmpsb
xlat
and
sub
mov
std
daa
mov
es
mov
in
add
xor
enter
jno
lret
lret
add
ret
ss
sti
les
mov
jmp
mov
dec
rorl
lret
push
adc
cmp
scas
xchg
aas
in
sbb
lods
sub
int3
int3
jbe
inc
inc
pop
sbb
clc
lret
jbe
das
idivb
sub
xor
jbe
inc
mov
idivb
cmp
aaa
adc
and
mov
sbb
cwtl
add
xchg
mov
and
xchg
mov
mov
cli
jle
nop
sbb
andl
jae
iret
jmp
push
mov
xchg
sbb
leave
aas
test
mov
shll
clc
xchg
mov
enter
inc
jp
js
dec
push
and
gs
mov
adc
cwtl
mov
jno
cmp
into
rcll
xchg
fwait
popf
sti
dec
cmp
cwtl
sti
jno
je
repnz
repz
lret
popl
out
or
gs
aam
cmp
mov
rcrb
les
std
push
mov
jle
xchg
mov
cwtl
sbb
jl
jp
ljmp
iret
lcall
sub
xor
loopne
sbb
mov
mov
pop
inc
inc
out
loopne
arpl
in
jno
stos
in
xchg
adc
jns
cmp
push
lret
pusha
push
dec
stos
mov
mov
in
das
divl
ja
ds
xlat
mov
jns
push
inc
push
jle
int3
in
stos
loopne
loope
test
mov
jecxz
nop
ds
xchg
push
cmp
add
sub
popa
sub
add
xor
popf
add
sbb
dec
push
xor
adc
shll
sarl
push
and
dec
dec
xor
sarb
sub
push
pop
pop
pop
dec
movsl
ljmp
jo
ret
ja
inc
mov
and
leave
test
cmpsb
adc
jns
dec
pop
add
jl
out
int
jno
xor
lds
cmp
js
lret
data16
and
test
sbb
or
push
inc
rep
popa
repnz
xchg
or
xor
mov
mov
das
push
xor
scas
mov
pop
fxch
sbb
dec
mov
test
bound
dec
sbb
cmp
jp
dec
cmc
iret
mov
enter
cmp
xor
lock
repnz
sub
in
mov
mov
loope
stos
push
iret
push
popf
push
insl
mov
mov
pop
jnp
pop
sti
pop
and
loopne
mov
rcrb
xchg
and
sar
cltd
jbe
fldcw
mov
and
mov
pop
test
sub
cli
jb
xchg
enter
pop
mov
inc
and
cld
inc
and
dec
rorb
cltd
insb
pop
mov
test
xor
or
mov
sub
outsl
push
xlat
push
and
aam
dec
test
mov
mov
outsb
out
mov
xor
adc
cmp
out
mov
sub
lds
mov
and
inc
std
pop
fs
dec
loopne
pushl
xor
inc
xlat
or
sub
push
int
push
jmp
push
test
mov
cmc
stos
push
pop
bound
stc
incb
inc
aam
cmpsb
push
mov
jno
add
mov
insb
sti
add
or
rclb
repz
js
pushf
inc
cmp
shl
mov
fidivl
cmp
and
jbe
adc
or
push
jno
xor
and
in
int
inc
lahf
sub
cmp
inc
test
pop
mov
shlb
inc
add
jae
jne
xchg
inc
stos
cmpsb
pop
pop
jg
mov
push
mov
jg
mov
push
and
lods
push
mov
dec
add
sub
dec
repz
and
mov
pop
lock
jo
push
jns
loope
inc
adc
jecxz
xchg
add
pop
dec
ficoml
mov
push
repz
and
daa
int
in
insl
stos
mov
bound
shrl
push
or
stos
in
add
mov
daa
aad
sti
lods
scas
push
out
jg
cmp
enter
jge
mov
push
testb
sbb
sub
out
data16
arpl
and
icebp
leave
stc
cmp
inc
jno
mov
lahf
push
stos
cwtl
dec
mov
xor
es
pusha
pop
pop
fstp
add
sub
mov
adc
lock
jns
mov
push
inc
cli
outsb
xor
pop
xacquire
sbb
mov
int3
cmp
ss
push
jp
push
mov
jnp
into
jecxz
cmp
pop
data16
nop
add
adc
dec
jp
add
sub
mov
arpl
or
push
or
pop
pop
xor
xchg
cmp
push
adc
push
insb
push
rcl
pop
add
dec
mov
push
cmpsb
jo
sub
sbb
sbb
xchg
or
jge
int3
out
inc
fists
mov
mov
aam
adc
add
cmpsb
jmp
inc
lock
mov
insb
jae
mov
xchg
loope
out
lea
outsb
test
and
jne
add
dec
push
rorb
xor
add
push
lea
or
cld
sub
js
mov
rcl
xchg
sub
cltd
fsubrl
data16
xor
cmp
fldl
movsb
cmp
jp
dec
mov
fs
xchg
in
pop
sti
push
adc
dec
pop
xchg
sbb
popl
adc
adc
shrb
cwtl
insl
or
out
pop
lret
out
imul
cltd
mov
ljmp
gs
mov
out
insl
sti
enter
cmpsl
je
jnp
jb
adc
mov
jno
shl
cmp
sbb
mov
xchg
mov
mov
mov
xchg
pop
loop
sbb
cmp
mov
mov
fimuls
push
pop
loop
or
pop
dec
mov
out
sbb
inc
xlat
popa
or
lea
push
cltd
ret
push
je
and
pop
cli
cmc
cwtl
lds
add
pop
mov
fdiv
insl
data16
clc
dec
cwtl
adc
pop
mov
out
cmp
cmp
repz
pushf
ss
test
push
mov
test
repnz
push
jp
inc
cmpsb
add
jnp
data16
jns,pn
cmp
fnstenv
pop
jae
push
and
pop
andl
inc
mov
hlt
fdiv
pop
add
xor
sbb
mov
das
and
xchg
mov
test
and
loop
daa
test
or
sbb
jl
pushf
idivl
mov
xor
cmpsb
push
cmp
clc
ds
xchg
scas
adc
push
cltd
xor
push
les
addr16
repz
cmp
arpl
mov
inc
xchg
stc
test
imul
xor
jo
fmull
xor
movsl
mov
push
mov
add
jl
out
lds
cmc
js
out
aas
out
jne
jecxz
iret
enter
data16
repz
fisttps
sti
jno
jo
out
and
adcb
pusha
jne
mov
test
mov
mov
push
pusha
lods
les
or
inc
add
loope
call
mov
lods
add
addb
int
fisubrs
push
dec
xchg
pop
dec
mov
pop
xor
out
xor
dec
movsl
xchg
and
xchg
icebp
dec
lods
mov
cmc
incb
pop
jp
imul
cmp
adc
pusha
cmp
adc
lahf
mov
mull
fcmovbe
adc
mov
out
outsb
cmc
mov
fisubl
inc
adc
js
loopne
dec
or
pop
pop
xor
xchg
outsb
fbld
lcall
adc
dec
cmp
sub
mov
sub
mov
ja
out
sahf
test
inc
fmull
lret
call
test
ja
pop
dec
std
cld
jmp
jo
test
adc
insb
fs
sti
mov
jne,pt
outsb
adc
dec
or
jae
dec
inc
push
mov
or
in
fxch
sysret
in
rcrb
push
pop
adc
add
or
std
int3
adc
shrb
fcmovbe
ss
pop
push
xor
mov
test
jp
add
mov
mov
fisubs
icebp
rorb
mov
jl
and
insb
sarl
outsl
mov
dec
xchg
in
fidivrs
pop
cmp
inc
adc
or
je
sar
or
inc
push
mov
dec
sarb
icebp
mov
clc
imulb
fwait
mov
inc
scas
cld
mov
sbb
aam
enter
sbb
rcl
push
sub
das
dec
pcmpgtb
loopne
scas
mov
rorl
out
ja
jle
pop
xchg
sahf
es
mov
int
push
mov
fisubs
sbb
mov
in
sbb
xor
push
repz
mov
pop
inc
test
cmp
leave
test
cmp
ret
in
mov
sti
pop
and
sub
push
mov
outsb
fdivrs
insl
lret
movsb
into
and
lock
and
push
cmp
mov
cld
jg
fwait
sub
stos
dec
bound
add
mov
adc
inc
cwtl
aam
mov
subb
pop
es
loope
and
mov
or
mov
cmp
insl
scas
std
push
xor
xchg
sub
xchg
scas
lcall
adc
in
push
imul
pusha
insl
mov
das
mov
xchg
inc
in
push
scas
fstps
inc
inc
mov
rcll
fistpll
jae
xor
push
mov
dec
or
jnp
data16
mov
popf
add
inc
mov
sub
out
jno
cmp
lahf
dec
and
mov
enterw
push
mov
mov
xchg
sub
test
jg
cli
mov
pop
notb
push
mov
jo
inc
add
stos
sbb
stc
mov
int3
into
imul
ret
xlat
xor
mov
push
inc
stc
jns
rcrb
add
aaa
out
inc
cmp
adc
lret
imul
push
lahf
scas
jns
ljmp
imul
cmp
xlat
add
cmp
add
xchg
push
dec
mov
adc
and
jo
psubsw
data16
in
or
inc
pop
pop
rclb
mov
jecxz
pop
add
nop
cmp
xlat
add
mov
shlb
adc
dec
push
xor
pop
jo
stos
pop
popf
arpl
bound
xchg
jg
xlat
test
xchg
or
stc
mov
pop
pop
fmull
and
call
insb
cltd
pop
rorl
sub
jg
addb
das
rolb
into
push
loope
push
adc
or
sahf
inc
and
push
mov
das
xchg
jmp
int
cli
sub
inc
stc
ret
ret
xor
aam
call
jbe
stos
mov
lret
gs
inc
xchg
add
mov
push
jp
and
jae
ret
sbb
fcomps
divl
push
cmp
pop
xchg
inc
jns
fwait
popf
mov
call
jge
push
push
ljmp
rolb
xor
stos
loope
jae
sub
push
aaa
mov
and
scas
xorb
hlt
std
div
push
sbb
pushf
shlb
cmp
fs
mov
inc
das
push
push
or
mov
fiaddl
pop
inc
ljmp
popa
xchg
pushf
dec
pop
push
mov
clc
jg
mov
jl
cmpsl
xchg
xchg
pop
testb
hlt
fmull
leave
iret
fistpl
ret
div
xor
push
jnp
add
cmp
les
fisubrs
mov
push
cwtl
mov
jge
mov
aas
pushl
scas
movsb
fcomip
mov
scas
ja
jge
lret
jecxz
xor
or
jae
xchg
out
jae
in
adc
xor
and
jo
or
xlat
loopne
mov
mov
cltd
jns
int
arpl
sbb
xlat
push
sbb
jg
add
xor
cmp
mov
int
xor
pop
xchg
and
jno
lea
lcall
lret
leave
pop
scas
lea
mov
xchg
pop
ds
cmp
mov
and
sub
push
mov
push
mov
ret
adc
add
sbb
andl
popf
push
enter
mov
or
mov
fwait
xlat
xchg
cmc
arpl
dec
in
mov
add
cs
movsl
mov
dec
mov
and
lds
fbstp
mov
out
xor
jl
lret
scas
sbb
ja
notl
mov
fnsave
mov
test
adc
mov
arpl
adc
and
call
push
movsl
pushf
push
sahf
pop
addr16
call
icebp
mov
shlb
mov
lock
lret
or
sub
les
scas
jge
sub
scas
xor
ja
xor
loopne
rclb
sub
cmpsb
jno
mov
in
mov
test
mov
or
sbb
pop
mov
pop
fwait
mov
push
lea
cmp
out
scas
test
xor
dec
cmp
mov
xor
mov
call
out
dec
mov
ret
add
enter
jbe
outsl
std
clc
mov
xchg
arpl
incb
xor
dec
and
add
sahf
loope
inc
popf
sbb
clc
fst
jbe
shr
adc
inc
enter
std
push
or
repz
jg
push
fcoms
adcb
mov
push
mov
fisttpll
jmp
xor
adc
jl
loopne
mov
cmp
sahf
xadd
insb
xor
push
pusha
clc
cmpl
repz
shlb
lds
insb
inc
fcom
mov
pop
sbb
js
lods
movsl
mov
jg
push
stos
pop
pop
xchg
jmp
mov
out
jmp
rcll
xor
xchg
push
notb
inc
adc
popf
sbb
lock
lds
sbb
sti
lock
adc
xchg
adc
cmp
push
sub
push
push
add
add
sahf
jmp
stos
stc
pop
or
pop
push
ja
movsl
adc
push
mov
fimull
iret
xor
and
popa
cs
arpl
pusha
filds
pop
push
pop
mov
aaa
lock
stos
dec
fs
push
cmpsb
stos
out
mov
jge
arpl
pop
sub
and
cltd
lret
xor
out
jmp
je
pop
pusha
pop
clc
out
into
cmp
lahf
sbb
scas
pusha
pop
xor
int3
popf
mov
ret
loopne
or
push
xchg
inc
je
in
dec
repnz
mov
and
sbb
add
test
sbb
fistpll
cs
inc
push
and
shl
xor
daa
scas
loope
in
testl
sub
into
out
popa
and
mov
push
popf
idiv
aad
adc
xchg
dec
jns
sbb
push
dec
pop
in
jns
dec
pop
cmp
adc
ficomps
cmp
push
lods
inc
push
mov
pop
mov
pop
roll
js
mov
push
das
out
outsb
cmp
mov
sbb
fldcw
jge
int
or
cmp
dec
ror
call
push
popa
mov
jmp
cwtl
mov
xor
loopne
bound
rclb
pop
loop
repnz
adc
push
dec
push
stos
idivb
mov
xor
and
jns
lds
or
sbb
push
xchg
inc
ret
leave
pop
sbb
enter
test
in
mov
pop
mov
adc
cs
repz
push
pop
mov
aaa
cmp
sub
scas
sahf
sbb
fldcw
pop
sbb
pop
inc
mov
out
lret
adc
test
sti
jbe
popl
xor
js
dec
insl
and
sub
inc
les
iret
or
xor
adc
leave
or
iret
adc
adc
or
xor
pop
mov
clc
inc
lods
sub
sbb
sbb
cwtl
test
arpl
mov
cmpsb
xor
lods
xchg
daa
cmc
data16
pushf
inc
jp
es
movsl
inc
call
jg
rorb
jb
dec
or
stos
xchg
loopne
or
aaa
or
or
jae
cmp
push
out
imul
aad
sbb
jo
xor
rol
pop
test
jne,pt
sbb
fldt
sbb
cmpsl
sbb
jmp
jae
inc
xchg
stos
imul
push
fs
scas
movsb
jl
mov
xor
jge
xchg
jne
dec
xorl
push
bound
push
stc
pushf
cli
push
adc
inc
jecxz
mov
xchg
lahf
and
push
jb
inc
rorb
jb,pn
and
lock
hlt
pop
outsb
jns
and
enter
pop
mov
pop
cwtl
ss
xor
rclb
pop
jg
mov
xchg
add
movsl
rcrb
mov
mov
js
pop
fimuls
ret
push
pop
cwtl
negb
shl
xor
sub
push
add
scas
out
mov
cmc
js
mov
inc
mov
addr16
pusha
mov
clc
xlat
add
mov
mov
mov
xor
pop
inc
shl
mov
and
pop
cmp
adc
cld
sbb
in
jge
xchg
push
sti
jae
pop
imul
sub
test
inc
pop
jmp
scas
movsb
popf
mov
cmp
ss
xor
mov
ret
aaa
in
rcll
push
add
shlb
adc
xchg
ds
inc
cltd
imul
pushf
aas
dec
out
movsl
add
mov
dec
xchg
imul
enter
test
test
shll
fs
loopne
mov
int3
pop
or
inc
mov
or
loop
xor
cld
roll
enter
loope
ljmp
or
or
pop
xor
jnp
subl
aas
add
or
inc
arpl
and
testb
loop
jno
and
arpl
jmp
jae
jg
mov
and
aas
in
or
mov
mov
push
adc
mov
pop
insb
mov
stos
jp
scas
jge
cli
int3
bound
fsubrl
outsb
and
pop
adc
pop
jmp
or
outsl
fs
pop
inc
arpl
cmc
cmpsb
stos
dec
sbb
mov
lcall
lds
fadds
jae
addl
pop
mov
lret
push
and
decb
lret
flds
dec
add
xor
inc
loope
fwait
insl
push
gs
dec
popa
mov
cmc
adc
push
cmpsl
xchg
dec
fisttpll
jle
xchg
dec
shr
insb
in
and
cmpsl
mov
icebp
shl
push
xchg
ret
dec
aam
push
mov
lret
xor
std
mov
inc
sub
icebp
js
pop
or
movsl
aad
lret
jecxz
stc
xchg
xor
xchg
sbb
rcrb
sbb
or
adc
or
xchg
addr16
dec
int
stc
mov
pop
out
dec
popf
adc
imul
sahf
and
adc
sbb
mov
sub
push
aad
loope
or
fdivrs
mov
addr16
add
adc
xchg
push
mov
xchg
sbb
movsb
lcall
daa
cmp
inc
sbb
mov
aam
ds
popf
cmp
jo
push
mov
icebp
pop
jg
sub
adc
dec
adc
negl
sub
add
adc
fnstcw
mov
notb
add
stc
decb
popa
sub
adc
xchg
std
add
cli
das
das
add
mov
lods
icebp
push
pop
push
adc
aam
and
adcb
call
xchg
out
in
repnz
leave
mov
sbb
and
mov
or
insl
cld
xchg
add
in
mov
sbb
sub
negl
mov
push
das
mov
rolb
movsb
jp
mov
das
mov
std
lea
push
jg
popf
push
xchg
ja
xchg
fnstcw
je
data16
mov
lret
pop
cmp
sahf
push
xchg
pushf
fldt
jno
pop
cmp
pusha
xlat
stc
mov
fbstp
mov
add
popa
test
movsl
cmp
out
cwtl
loopne
dec
jg
mov
and
pop
fadd
lahf
add
sub
mov
pushf
scas
int3
mov
fcmovb
cltd
pop
push
sbb
sbb
test
arpl
js
pusha
dec
pop
rcr
outsb
scas
xchg
inc
mov
imul
subl
jl
rclb
adc
xlat
setne
jp
loopne
inc
sub
neg
mov
dec
add
xchg
cmovno
dec
adc
scas
adc
sub
cld
inc
insl
push
or
clc
lds
add
lcall
mov
push
leave
xchg
adc
lock
es
int
mov
xor
xchg
mov
pop
scas
push
push
or
push
insb
out
scas
test
or
sub
iret
pusha
jmp
pop
sub
lds
mov
fidivl
imulb
aaa
arpl
pop
iret
aam
cmp
dec
ret
enter
mov
xchg
xchg
insl
ja
adc
cmc
jno
stc
std
lods
int
jge
jp
popf
mov
test
mov
test
sub
or
add
and
ret
xor
jp
mov
roll
outsb
stc
out
mov
pop
cmp
jb
fisubrs
popf
rorl
lahf
jae
inc
xorb
pop
sbb
pop
shl
xchg
mov
push
mov
into
mov
lret
aam
iret
sti
jnp
add
in
push
push
pop
iret
into
mov
jo
add
xlat
push
mov
lock
xchg
xor
les
jno
cld
mov
mov
nop
inc
cli
lds
lods
pop
inc
pop
js
xchg
in
inc
sbb
push
decb
cmc
dec
mov
rorl
fs
shr
fmuls
decb
shrl
outsb
jo
mov
push
ss
leave
std
jbe
jecxz
pop
xor
xchg
std
sbb
cld
lds
das
cmp
add
mov
js
out
out
fwait
push
inc
jmp
inc
jns
inc
shll
jge
subl
cltd
dec
or
es
fcompl
pop
outsl
cwtl
dec
aas
mov
cmp
pushl
xor
jp
fbstp
dec
repnz
jnp
cwtl
and
clc
pop
popf
xor
adc
xchg
push
inc
sub
mov
inc
negl
nop
test
gs
pop
sub
fnsave
test
out
dec
pusha
test
std
sbb
and
dec
xlat
inc
inc
sub
and
clc
jp
aaa
push
and
sub
aam
je
push
pop
sbb
adc
das
sub
into
aas
ljmp
jns
and
fcoms
add
pushf
pop
push
in
cli
into
dec
lods
and
cmp
push
pop
xor
movsb
push
xchg
xor
add
xchg
mov
push
mov
xor
push
or
mov
push
fdivs
lret
aam
adc
inc
mov
jecxz
dec
push
mov
leave
loope
in
mov
daa
dec
ret
lods
add
pop
aaa
xchg
pop
cmpsb
push
out
sub
mov
iret
dec
repz
xor
sbb
scas
jmp
iret
mov
adc
testl
mov
push
add
jo
inc
xchg
nop
adc
clc
jo
jnp
add
jns
jae
push
mov
and
jecxz
mov
jmpw
cli
repnz
xlat
fstl
pop
or
iret
xchg
inc
pop
test
cli
dec
pop
leave
clc
or
push
lea
jnp
lods
dec
jns
xor
dec
test
add
out
repz
mov
cmpsl
out
xor
adc
mov
in
mov
scas
mov
shll
mov
cmp
popf
ja
push
mov
xchg
mov
add
int
add
xorl
xchg
rcrl
jecxz
scas
pop
fadds
call
das
push
mov
in
inc
pusha
mov
fld
jb
jns
push
mov
out
popf
addr16
orl
lret
inc
inc
js
lcall
add
scas
mov
or
mov
jbe
enter
cmp
mov
sbb
imul
push
jg
lods
mov
adc
lahf
mov
mov
jmp
fnsave
leave
add
dec
push
rol
cmp
push
mov
mov
cmp
jge
cli
sar
mov
and
pop
pop
fwait
mov
movsl
xchg
pop
mov
mov
xor
mov
or
push
adc
out
push
aad
mov
xor
vmread
or
leave
in
sub
scas
adc
js
or
xor
aas
dec
into
xor
push
fs
push
cs
shll
stc
jns
add
inc
ficoms
adc
sbb
dec
xor
outsb
inc
jb
scas
imul
adc
xchg
push
mov
repnz
out
call
dec
clc
push
test
shlb
out
outsl
loopne
xchg
xor
inc
nop
cmpsb
cmp
inc
cmpsb
loop
pop
in
addr16
pop
lret
scas
pop
data16
or
inc
sub
mov
in
push
mov
out
outsb
fistl
mov
scas
lock
outsb
pop
cmp
clc
inc
fstl
xchg
add
sbb
imul
jo
adc
stos
movsl
pop
mov
jg
popa
pop
add
mov
and
add
pop
enter
cld
cmp
or
add
cmp
pop
ss
je
idiv
ja
cmpsb
mov
mov
pushf
std
push
sub
sub
sub
fwait
jo
cltd
dec
ds
cmp
mov
leave
mov
pop
mov
fwait
pop
mov
lret
cmp
sarb
test
xchg
repnz
outsl
cwtl
cmp
mov
cmp
std
mov
xchg
rcr
divl
inc
iret
imul
scas
ret
sub
into
out
int3
flds
cmp
inc
adc
pop
and
add
pop
xor
or
lahf
enter
leave
mov
out
cmp
push
scas
jns
cmp
das
pusha
fnstenv
jl
jp
add
mov
inc
sbb
jo
cltd
in
enter
dec
or
into
aas
movsb
aas
adc
scas
popf
and
add
add
push
jns
mov
icebp
jne
je
mov
jge
pop
xor
ja
jle
pop
imul
sub
out
fwait
gs
test
mov
je
leave
push
or
pop
xchg
into
in
push
ja
div
sub
xchg
mov
adc
xchg
adc
daa
out
jns
int
cmpsb
xor
pop
inc
mov
jg
rolb
dec
add
sbb
addr16
in
shrb
popa
mov
popf
sub
sbb
pop
mov
sub
sub
in
rcr
gs
mul
push
mov
ret
cmp
push
rorb
fs
adc
push
inc
xor
fists
adc
fnstenv
js
sub
mov
mov
and
or
push
ror
insb
out
stc
shrb
negb
mov
dec
mov
leave
mov
add
es
popf
jns
cmpsl
popa
ss
ljmp
pop
scas
inc
adc
inc
outsl
popa
xor
movl
iret
xchg
mov
dec
mov
sub
lcall
dec
pop
jbe
data16
jno
int3
in
mov
lods
sbb
mov
dec
cs
pop
sub
mov
outsb
inc
inc
bound
fisubrs
leave
es
mov
leave
lret
push
loop
rorb
sub
mov
dec
cmc
js
ljmp
shrb
repz
mov
enter
inc
sbb
inc
adc
pop
ret
sti
dec
jns
dec
xchg
jb
mov
push
xor
cli
loopne
scas
adc
data16
insb
pop
inc
lret
cmp
imul
mov
or
imul
iret
js
lahf
lret
pop
fists
sub
pop
test
push
and
xchg
leave
and
movsb
les
sbb
bound
lret
leave
sahf
cltd
in
sub
push
insl
test
push
sub
mov
fisttpll
arpl
dec
and
sbb
xorl
dec
mov
mov
jne
add
ss
es
add
imul
add
in
xor
or
xchg
aaa
sub
inc
pop
sub
shll
add
sub
std
mov
sub
ss
dec
and
adc
push
outsb
mov
dec
inc
shl
inc
jl
dec
clc
push
scas
jo
addb
fucomip
push
mov
dec
jge
adc
ret
aam
fwait
push
idivb
ja
mov
roll
and
in
jo
cmove
mov
call
jmp
lods
clc
dec
insb
jbe
shl
mov
je
shld
pop
pop
inc
sbb
mov
out
sub
fwait
stos
jb
jo
xchg
fidivl
gs
add
call
xchg
xor
push
cli
je
cld
aam
jle
sbb
xchg
outsl
cld
repnz
adc
icebp
cmp
aas
cmp
pop
and
idivb
or
adc
jmp
or
push
jmp
popa
ror
out
inc
iret
cmp
mov
dec
roll
cmp
mov
lock
adc
imul
stos
mov
mov
enter
lcall
pop
jl
inc
adc
push
loopne
mov
loop
or
mov
dec
sbb
dec
xlat
push
ret
pop
cmovb
push
lods
push
add
dec
faddp
push
pop
push
mov
test
aad
xor
push
dec
aaa
jo
push
mov
or
or
pop
xchg
sub
lods
pop
orb
popa
adc
add
sti
xchg
adc
inc
sti
dec
sahf
pop
shll
adc
jp
sub
sub
aam
scas
popf
jnp
push
add
fcomip
sub
add
push
ja
push
add
sar
dec
sbb
pushf
test
notb
push
sbb
pop
sbbl
ds
test
mov
mov
sub
pushf
cmc
adc
cmp
push
mov
outsl
mov
fdivrl
rcrb
or
leave
bound
cld
hlt
int3
aam
sahf
adc
fadd
imul
bound
ja
mov
divl
push
xor
popa
xor
mov
lahf
jmp
pop
orl
mov
fldcw
aaa
movsb
cwtl
lods
mov
ss
lods
lods
jae
cld
push
jmp
xchg
cmp
fisttpll
mov
aam
sar
sub
jge
add
ss
adc
push
pushf
imul
sbbl
xchg
test
sub
xchg
sub
sti
mov
lods
lods
mov
xor
stos
arpl
test
jmp
fsubrl
ds
addr16
std
cmpsl
mov
cmp
ffreep
out
gs
mov
inc
testb
xchg
mov
fs
lcall
bnd
ds
xor
cmp
out
jno
add
imul
xchg
call
int3
insl
push
orb
mov
loope
mov
seta
jae
int
dec
stos
lcall
movsb
mov
add
xor
pop
bound
shrb
fisttps
arpl
dec
out
cmp
stos
cmp
sub
xor
mov
cmp
shlb
xchg
jecxz
in
jnp
sub
xchg
mov
mov
pop
mov
fimull
daa
and
out
cmp
aaa
sti
imul
movsl
push
xorb
popf
leave
sbb
cld
popf
fidivrs
in
sbbl
popa
mov
sarb
ret
ds
and
pop
inc
rcrl
cmc
xchg
rclb
sahf
push
xchg
ja
mov
bsr
lock
iret
loope
adcb
and
adc
stos
out
repnz
xchg
lcall
add
fcoms
inc
sub
pop
fimull
add
dec
jbe
add
or
scas
cpuid
test
dec
addr16
pushf
sbb
add
sti
movb
lods
stos
testl
inc
adc
jg
mov
cmp
pop
iret
out
es
movsl
addr16
fstpl
popf
adc
test
add
je
aad
adc
push
ds
ljmp
ss
pop
mov
daa
cli
mov
add
jp
xchg
xor
sub
roll
cwtl
and
pushf
out
xor
imul
sar
and
rcll
mov
hlt
xchg
mov
mov
fadds
push
cwtl
cltd
fstp
jbe
add
shrb
call
enter
push
popf
leave
jl
fdivs
push
ja
or
mov
ret
sub
lds
repnz
shlb
imul
stc
insb
mov
cmp
jne
inc
and
add
aas
jbe
into
jge
bound
xchg
pop
mov
inc
xor
out
fldl
mov
xor
mov
and
das
xor
loopne
sbb
inc
push
gs
ja
imulb
dec
jo
not
outsl
cltd
stos
ljmp
sbb
sbbl
mov
xchg
mov
inc
xchg
cmp
xchg
sbb
or
and
push
fimull
xlat
divl
adc
aad
mov
bound
cmp
jns
insb
std
loope
mov
adcl
sbb
pop
loop
jp
out
hlt
cmp
or
lods
imul
jb
mov
xchg
mov
in
orl
rolb
dec
cmp
inc
inc
push
inc
jo
jo
mov
inc
inc
pop
aam
jecxz
xchg
mov
inc
jb
and
xchg
out
lahf
daa
xchg
or
jmp
cwtl
sbb
mov
and
shl
jb
popa
lea
push
mov
outsl
leave
inc
dec
sbb
shrl
jp
push
dec
xor
leave
dec
xor
clc
mov
inc
adcb
in
das
es
xchg
insb
add
std
icebp
movsl
adcl
inc
jl
jl
imull
sub
sbb
fadd
fcompl
mov
jb
dec
pushf
ljmp
mov
sbb
outsb
push
cmp
xor
cwtl
push
xorl
insl
imul
mov
int3
pop
test
and
in
enter
not
sahf
aad
and
lock
mov
xor
push
xor
jmp
jno
outsb
gs
mov
cmp
scas
ljmp
stos
fistpl
mov
movsl
test
push
in
pop
lret
rolb
bound
les
rolb
aad
int
jecxz
mov
mov
cmp
gs
dec
mov
sti
xchg
or
sbb
push
inc
loop
imul
test
cmp
mov
scas
inc
pop
lock
pop
xchg
aas
dec
lods
add
adc
stc
inc
inc
aam
push
in
sub
es
pop
aad
xlat
movsb
dec
and
mov
lcall
mov
cmp
inc
nop
sar
dec
jl
ljmp
pop
lret
mov
inc
push
js
rol
fs
int3
cs
adc
dec
xlat
xor
inc
gs
pusha
mov
incb
call
fcomps
iret
cmp
jmp
dec
std
repz
adc
pop
stc
lds
mov
mov
test
add
inc
push
mov
pop
add
outsl
cmc
imulb
insl
pop
loopne
insb
fistpll
imul
pop
jmp
adc
ljmp
repnz
push
jp
stos
jne
jecxz
xchg
js
loop
out
sbb
cmp
push
sbb
movsl
in
cmpsl
jne
and
addr16
xchg
dec
and
sbb
push
sti
hlt
pushf
nop
outsl
mov
adc
sub
out
sti
cli
add
and
cmpl
mov
jbe
adc
and
and
not
fisubl
pop
inc
mov
subl
push
in
rcl
mov
cmpsb
adc
jmp
adc
jp
decb
xor
mov
sub
loope
test
out
mov
mov
and
aas
nop
test
add
bound
mov
pop
mov
scas
inc
jno
mov
mov
pop
and
sbb
mov
inc
jno
into
rclb
clc
insl
pmaxub
cmp
add
sti
and
jnp
inc
into
sbb
fnstsw
jle
ljmp
mov
mov
sub
popa
xchg
push
clc
cmp
cmpsl
je
mov
cmpsl
and
xchg
or
insl
mov
and
pop
sbb
jg
xchg
popa
fsubp
movsb
and
shlb
push
mov
xorl
push
inc
in
add
pop
popl
xchg
push
cmc
lock
mov
pop
popa
mov
mov
lahf
ja,pn
add
cmpsb
and
cmp
mov
test
ficoml
ret
cmp
mov
cs
ljmp
fistpll
mov
outsl
in
mov
in
mov
jne
and
pushf
and
xchg
sarb
imul
jl
pop
dec
rolb
sub
jo
sbb
xchg
jno
jo
ljmp
or
xor
jns
mov
repz
jbe
sti
inc
mov
sbb
leave
push
add
pop
inc
leave
or
je
addr16
lock
xchg
subb
das
jns
sub
jmp
push
pop
sbb
scas
loop
jecxz
test
and
jl
adc
xor
push
pop
and
dec
add
mov
or
jae
imul
cmpsb
addr16
add
out
int
hlt
xchg
nop
and
mov
dec
clc
push
addb
pop
es
xchg
or
xchg
ficompl
stc
sbb
test
arpl
stos
xor
in
and
inc
mov
int
and
frstor
je
xor
adc
sbb
or
fistpl
inc
cmpb
pop
stc
pop
mov
stc
imul
xor
jecxz
icebp
ja
and
fadds
xchg
mov
test
sub
add
xlat
add
jp
lea
mov
cmpsb
and
ss
inc
insb
dec
in
push
push
xchg
add
rorl
setp
mov
scas
pmulhw
out
mov
jns
fsub
mov
add
jne
push
push
icebp
fwait
popl
push
mov
pop
push
sbb
scas
cmp
cwtl
mov
lret
data16
jo
and
out
inc
xchg
xlat
mov
lcall
cltd
ret
dec
pop
ds
roll
pop
cmpsb
inc
or
push
dec
adc
xchg
jae
or
and
adc
sbb
xchg
cmp
lcall
jbe
cmp
out
out
hlt
imul
testl
sub
push
sti
mov
or
dec
lds
jecxz
shrb
dec
push
ret
sub
lret
push
mov
jle
bound
insb
dec
nop
mov
and
jle
adc
adc
mov
pop
adc
mov
stos
and
scas
push
call
imul
pop
loop
inc
frstor
bound
pusha
pusha
xlat
pop
js
int3
cwtl
jns
inc
mov
out
pop
xor
xor
aam
sub
jge
imul
pop
loope
enter
jl
sbb
scas
or
cmp
stos
sbb
cld
into
ss
mov
sbb
fs
js
add
mov
pop
stos
pop
push
lods
xor
cmp
stc
push
popa
cmp
dec
fs
imul
rep
insl
imul
mov
mov
lret
xchg
dec
pop
push
orb
popf
push
data16
or
ss
mov
les
push
mov
mov
cmp
loope
or
fsubrl
scas
adcb
neg
je
insb
into
dec
adc
mov
and
sub
jg
xchg
stos
fcmove
xsha1
cmpsb
mov
in
inc
xchg
stos
bound
cmp
dec
clc
sub
inc
sbbb
bswap
addr16
fsubs
mov
push
xchg
fxch
mov
movsl
fstpl
mov
push
jmp
mov
repnz
add
mov
xchg
push
imul
lods
xchg
jle
inc
loopne
gs
dec
sahf
add
inc
push
sub
shll
arpl
mov
cmc
sbb
mov
jo
mov
fdiv
mov
add
leave
inc
cmpl
add
inc
add
fwait
mov
popa
int3
fstpl
push
pop
jp
pop
insb
gs
stos
cmp
insl
lret
sarl
rorl
mov
xchg
out
bound
outsb
or
mov
jnp
insb
popf
adc
pusha
fdivp
pop
testl
jbe
mov
shl
or
mov
sbb
pop
fnstcw
data16
add
sub
jle
dec
sub
mov
mov
mov
jo
lret
mov
adc
jno
scas
fisubrs
incb
jle
out
add
inc
pop
inc
dec
aad
jno
xor
add
fidivl
jp
mov
hlt
push
mov
aaa
lds
xchg
insb
aam
sub
jecxz
js
cmp
in
rorb
test
inc
icebp
mov
inc
je
inc
mov
add
movsl
call
call
inc
jno
sbb
sahf
scas
jb
xchg
popf
cltd
rclb
mov
dec
jbe
mov
sahf
pop
push
cltd
pop
cli
test
inc
sti
dec
cpuid
insb
enter
sub
in
mov
or
add
stos
push
dec
jmp
and
mov
dec
mov
fcompl
pop
in
aaa
inc
call
pop
and
dec
fsubp
sbb
pop
into
pop
cmp
mov
popf
fadd
outsb
mov
out
xchg
movsb
adc
fldz
push
cli
inc
ss
xchg
push
sbb
mov
mov
rcll
gs
adc
filds
sbbl
addr16
push
in
scas
xchg
jb
sub
clc
pushf
nop
pop
repz
adc
ljmp
dec
scas
repz
jmp
xchg
enter
ret
lods
test
lds
jb
xlat
rorb
sub
shlb
inc
rcrl
sub
outsl
mov
pop
xor
dec
push
aaa
int
out
push
stos
pop
sbb
cwtl
jl
mov
popl
iret
js
push
xor
sbbl
in
mov
fisttpll
cmp
pop
mov
test
adc
popf
aam
sub
ja
pop
lret
mov
cmpsl
cmp
jmp
stos
sbb
inc
jo
pop
sub
and
mov
dec
scas
mov
fstl
cwtl
fstl
lcall
mov
loope
out
lcall
out
push
sub
pop
jmp
jns
push
push
adc
inc
jecxz
push
xorl
ja
in
add
aad
lods
imulb
mov
stos
pop
inc
jne
jae
lods
arpl
dec
bound
jae
repz
jle
jecxz
inc
inc
ret
scas
jns
ja
outsl
ds
cli
movsb
loop
mov
jg
inc
lods
dec
stc
mull
bound
fisttpll
out
mov
aas
and
or
cld
dec
push
lret
lds
sub
repnz
outsl
enter
xor
dec
dec
fucomi
or
inc
xchg
add
add
jg
mov
into
loop
into
inc
sub
fmul
iret
pop
push
push
fdivrl
mov
out
mov
sbb
mov
cld
lods
inc
mov
cld
jb
jb
adc
lods
inc
cltd
mov
lcall
dec
adc
mov
bound
jae
inc
fidivrl
lock
rclb
dec
fstpl
stc
popf
stc
mov
inc
mov
insl
pushw
xchg
fistpll
cld
mov
sub
add
incl
adc
pop
ja
jae
lods
divl
divl
xchg
into
xor
cs
scas
sub
cld
insb
in
repz
xchg
inc
shl
sub
repz
push
add
dec
stos
test
aas
sbb
fwait
sbb
mov
das
adc
test
in
hlt
xor
xor
out
and
fisubrs
and
loop
mov
jmp
lds
lret
cmpl
insb
loopne
sbb
cmp
cltd
and
sub
cmp
push
or
and
mov
jmp
out
cwtl
mov
xchg
jns
dec
mov
xchg
in
pushf
leave
jbe
dec
push
push
mov
lret
movswl
mov
cli
inc
shlb
nop
cmp
std
xlat
cli
cmp
add
sahf
mov
mov
pop
lds
xor
lods
sub
pop
insb
sub
test
mov
pop
lcall
mov
push
cmpsl
add
dec
test
push
inc
push
mov
xchg
xchg
xchg
jnp
jae
dec
popa
loop
mov
je
dec
sarl
and
xchg
in
repz
aad
out
push
jecxz
mov
jmp
cmp
add
fsubs
adc
lea
popl
repnz
outsl
pop
fisttpll
mov
xchg
sbb
sbbb
cmp
jmp
cmp
push
mov
push
sub
dec
adc
js
rcrb
mov
add
add
and
mov
sbb
negb
lods
mov
or
push
sbb
lods
xchg
jecxz
lods
ror
lret
sub
or
and
jne
jb
test
frstor
add
test
sbb
shlb
mov
mov
fldt
int3
test
fcmovu
xchg
cli
mov
pop
jge
mov
xchg
xchg
add
sbb
jnp
mov
jne
scas
push
das
adc
fwait
add
adc
mov
iret
ljmp
inc
pop
mov
cmp
arpl
push
pop
aam
call
sbb
inc
cmp
fistps
add
cmpsl
adc
mov
or
jle
or
nop
int3
jmp
mov
scas
or
ds
jbe
mov
mov
and
lock
lret
arpl
adc
cmpsb
jmp
cs
dec
fdiv
cmp
xchg
jle
imul
dec
adc
loopne
popa
mov
das
xlat
jb
or
imul
lods
or
ficoms
fldenv
pop
pop
jecxz
pop
push
enter
jl
imul
in
mov
sub
lock
ret
pop
mov
stos
aam
cmpsl
ljmp
jge
dec
add
ret
jmp
xchg
mov
pop
ret
fisubrs
xor
dec
and
enter
xlat
hlt
or
dec
scas
ja
ss
jl
fisubrl
mov
lretw
push
insl
add
xchg
int
fidivl
movsl
call
cmp
sbb
or
push
loop
ficompl
lahf
cmp
pop
add
loope
cmpsl
fcmovnu
sub
iret
shlb
dec
xchg
inc
sub
rclb
test
adc
add
xchg
test
mov
das
add
xchg
and
xchg
jg
jne
fdivrl
int3
jge
sarl
pop
lret
mov
mov
mov
jmp
xchg
jo
mov
sbb
jns
arpl
jno
inc
mov
pop
push
jle
mov
fimuls
add
mov
in
stos
cmc
dec
sub
pop
pop
imul
std
js
incb
pop
push
stc
in
cli
test
popl
popa
sbb
sbb
inc
and
cmpsl
adc
setge
icebp
daa
out
mov
andl
les
das
adc
lea
pop
mov
mov
je
jmp
or
mov
dec
mov
incl
imul
dec
inc
mov
mov
pop
test
jl
and
pop
in
adc
pop
cmp
jmp
pop
adcb
mov
test
lods
cmpsb
int
mov
das
aas
sub
jns
and
sbb
push
in
ret
sub
push
aas
out
cltd
inc
mov
lock
xlat
fprem1
aad
repz
jge
inc
jg
sub
adc
sbb
lods
add
xchg
xchg
ficoml
lret
cli
leave
shll
adc
jnp
aas
lds
ja
mov
inc
xor
sub
enter
in
mov
pop
jl
pop
fdivrl
ljmp
push
xchg
add
hlt
mov
xor
jbe
mov
push
or
outsb
inc
in
push
adc
arpl
in
enter
pop
int3
in
fimull
adc
mov
push
and
push
push
sub
icebp
mov
fidivl
outsb
or
inc
add
leave
jnp
nop
mov
testb
rcll
mov
imul
out
cmpsl
cmp
dec
mov
testb
pop
jp
jle
xchg
jbe
jo
idiv
xchg
daa
arpl
pop
sbb
pop
fldt
movsb
xor
sub
ror
nop
push
pushf
pushf
push
mov
jae
ja
lcall
out
xchg
addps
lret
xchg
mov
xor
scas
cmp
test
push
out
xchg
outsl
mov
imul
pop
mov
mov
idivl
fs
icebp
mov
ljmp
inc
dec
neg
sbb
mov
pop
or
es
mov
push
mov
mov
inc
icebp
mov
or
cltd
push
popa
xchg
scas
stos
das
push
inc
jl
iret
jge
pop
pop
push
jne
movsb
push
xor
pop
pop
xchg
scas
pop
icebp
adc
dec
mov
je
ja
js
sub
xchg
rcll
das
stc
mov
shlb
xor
adcb
ret
mov
in
inc
subb
xchg
or
outsl
std
js
setp
leave
xor
mov
out
stos
orl
ds
in
and
mov
and
sub
or
fadds
sbb
dec
or
sbb
push
stc
cltd
rolb
gs
arpl
sbb
cmpsb
ljmp
sbb
jb
jae
je
xor
xor
popa
sub
js
pop
sbb
adc
mov
fdivl
imulb
lock
mov
push
dec
xor
add
inc
mov
in
repnz
mov
mov
into
adc
mov
cld
ret
sbb
jl
sahf
pop
fadds
lahf
jecxz
jle
testb
or
pop
loopne
dec
mov
mov
cmp
test
out
jp
mov
inc
sub
out
mov
mov
adc
lea
cmpsb
push
mov
ret
push
and
xor
sahf
pushf
int
ljmp
inc
fsubl
pop
add
imul
mov
out
pop
jo
adc
push
xlat
inc
adc
push
loope
insb
fiadds
movsb
inc
pop
jle
inc
and
popa
je
daa
rorl
in
inc
test
xor
mov
out
call
pop
fsubrl
jae,pt
lods
test
cmp
sbb
mov
imul
pop
cmp
xchg
push
stos
inc
pop
mov
call
sub
push
jg
mov
adcl
loop
hlt
fs
addb
mov
add
movsb
cmp
sub
sqrtps
fidivrl
sub
sahf
fists
ret
das
or
pop
lahf
push
dec
lcall
mov
add
mov
cld
inc
jbe
out
cmpsb
jb
into
mov
xlat
mov
scas
jne
mov
dec
mov
out
aam
or
mov
cmpsl
pop
adc
mov
dec
pop
jle
push
jmp
enter
xchg
fmull
mov
nop
dec
sbb
or
push
xor
inc
mov
push
ret
jg
outsb
xrelease
cmpsb
push
sub
mov
dec
rcll
fisubrs
jecxz
test
cmp
inc
dec
push
jae
bound
fwait
xor
repz
push
out
repz
in
movb
push
sub
sbbl
enter
outsb
or
dec
sub
add
stos
lds
aad
clc
inc
enter
mov
push
mov
or
ljmp
int
pop
loop
lods
lahf
mov
std
loope
lods
mov
les
test
psubsw
jbe
adc
fdiv
sub
dec
xor
jle
cmp
lds
inc
sub
insb
aaa
cmc
popf
jns
fimull
sbb
mov
and
mov
loope
ljmp
fnstsw
sbb
insb
test
add
push
ficoml
fwait
add
push
mov
sbb
divl
fdivl
mov
outsb
sarb
imul
pop
js
mov
cwtl
xchg
enter
jge
jp
test
test
mov
cli
fwait
neg
and
imul
xacquire
sbb
and
testl
cmp
dec
cmp
sub
mov
or
int
or
test
xchg
or
or
scas
adc
ja
mov
fs
or
loop
cli
out
addl
repnz
inc
aas
mov
ss
scas
ret
mov
out
xchg
cwtl
outsl
scas
aaa
xor
jmp
xchg
inc
mov
cmp
ror
pop
lea
test
and
xchg
mov
jl
jo
and
arpl
rclb
mov
cwtl
sbb
jmp
inc
cmp
jo
xchg
and
xchg
pushf
gs
cld
out
or
mov
js
sub
movsl
lods
inc
movsb
mov
rolb
mov
mov
jl
and
xchg
push
sbb
add
lret
jle
aad
ret
dec
mov
in
mov
imul
lcall
pop
in
enter
popl
cltd
rclb
pop
loope
sub
sub
filds
xor
stos
or
cmp
clc
pop
out
jmp
cmc
dec
rclb
lcall
cld
subl
xor
dec
dec
add
aas
in
or
shll
mov
pushf
aam
push
push
mov
xchg
jle
mov
pop
sub
scas
jp
push
out
push
repz
in
imul
jae
lds
outsb
dec
cld
add
ret
cmc
push
icebp
xchg
rcrb
popf
cli
add
push
lret
xchg
aad
pop
push
mov
xorl
insb
jp
insl
adc
popa
out
hlt
mov
jmp
inc
daa
aam
xlat
mov
outsb
push
add
mov
lods
les
negl
ret
adc
xlat
push
fcmovu
ficompl
pop
ja
pop
push
pop
add
sar
cmpsl
in
pusha
cmp
es
inc
stos
xor
add
cmpsb
fwait
lahf
push
xor
mov
fbstp
add
insl
xchg
push
roll
test
push
loope
in
stos
cmovno
icebp
int
jp
jl
enter
test
mov
mov
xchg
imul
out
or
xchg
jb
mov
addr16
add
enter
lock
adc
push
and
rorl
xchg
ret
inc
jo
in
les
dec
jae
data16
cmp
jbe
pop
frstor
mov
inc
into
imul
jae
adc
out
and
pop
rclb
push
int3
pop
lock
decb
push
test
mov
xchg
js
subl
sub
dec
fnstenv
out
divb
call
inc
jno
sahf
notb
xor
add
lcall
clc
stos
mov
sub
dec
xchg
fisttps
inc
cmp
mov
pop
inc
add
mov
imul
jno
stos
insb
pop
lea
lahf
fcmovnu
lods
add
lods
ljmp
sbbb
pop
pop
int
xorl
scas
test
pop
in
arpl
sub
mov
loop
stos
mov
xchg
add
movsl
test
lcall
xorb
jl
cmp
data16
and
push
mov
imul
add
rcrb
xlat
leave
dec
jae
jle
shlb
outsb
jmp
cmc
lock
dec
dec
insb
inc
inc
ds
inc
jno
cld
fwait
cmp
pop
aad
lods
xlat
xor
sub
fcmovnb
sub
dec
sub
and
xor
ret
cmp
xchg
and
out
dec
insb
out
insb
in
fsub
and
dec
pop
pop
push
xor
daa
push
jns
pop
fs
or
pusha
insl
adc
nop
jmp
mov
hlt
cmp
push
test
push
pop
pop
lods
aam
xchg
jmp
push
jno
inc
and
stc
mov
lds
test
repz
cltd
sbb
lahf
cmp
xchg
stos
inc
loope
movsl
jmp
push
mov
aaa
jp
popa
cmp
add
lahf
in
push
stos
add
and
mov
adc
pop
popf
jecxz
or
dec
lods
adc
subw
inc
pop
pop
lds
xor
lock
adc
push
lret
jle
pop
inc
rcrl
cmp
aaa
test
push
inc
cmp
shll
add
or
movsl
xor
loope
addb
out
in
clc
push
lods
push
enter
test
and
sti
inc
test
jl
adc
lcall
push
pusha
jns
mov
xchg
sub
outsl
popa
fldenv
ja
ret
rcrb
push
cli
data16
pusha
and
jbe
sub
mov
add
sub
xchg
jb
pop
cmp
pusha
lds
xchg
push
xor
mov
sbb
stos
mov
mov
shl
lods
cmpl
mov
sti
ljmp
xchg
pop
and
outsl
mov
xlat
daa
rcr
or
popf
add
movsl
jb
jmp
stos
pop
add
dec
xchg
nop
xor
lds
pushf
cmp
mov
jmp
imul
mov
ja
gs
push
dec
into
out
call
mov
push
ljmp
mov
xchg
xchg
cli
jg
pop
cli
xchg
aaa
dec
stc
cmp
xchg
repz
lods
push
jp
repnz
dec
ljmp
sub
imul
sbb
int
xchg
mov
leave
ret
js
popa
clc
cs
lock
shl
ret
popl
and
roll
jmp
nop
pop
sub
jmp
sbbb
or
cmp
std
mov
inc
enter
cmc
mov
sar
loopne
ljmp
jo
filds
movsl
sbb
into
pop
das
cmp
cmp
in
cmp
leave
xchg
mov
enter
arpl
gs
mov
adc
jns
sub
andl
es
adc
or
xchg
popa
mov
xor
or
data16
ljmp
pop
aas
jmp
lods
sub
int3
shrb
daa
lods
iret
in
ss
mov
dec
mov
xor
mov
hlt
xchg
imul
and
sub
add
fwait
or
rcr
pop
xchg
dec
arpl
sbb
lea
popa
push
fistl
mov
pusha
xchg
imul
lea
popf
xlat
mov
and
mov
or
jmp
stc
aaa
jecxz
je
stc
cmp
jbe
ljmp
jg
xchg
inc
xchg
sbbl
icebp
mov
cmpb
sbb
fld
and
mov
xor
jno
imul
and
sbb
add
dec
mov
mov
dec
out
adc
test
pop
jae
push
call
mov
stos
testl
and
ljmp
scas
jae
cwtl
insb
pop
std
mov
or
push
sub
and
aas
push
stc
mov
lea
in
jmp
pushl
jecxz
imul
nop
aaa
or
sahf
cmp
loopne
jecxz
or
and
test
xorb
sbb
add
lods
arpl
pop
cmp
dec
pusha
sub
push
hlt
and
push
and
or
fcompl
lahf
dec
cmp
rcrb
or
cli
jns
inc
mov
jecxz
cmpsb
dec
or
push
sub
lods
cmpsl
hlt
dec
test
pushf
dec
or
push
add
sub
arpl
aam
add
push
jmp
ret
adc
dec
int3
insl
popa
cmpsb
test
xor
lods
lcall
fdivrs
cwtl
popa
inc
xor
push
inc
xor
or
es
add
lock
inc
gs
push
data16
push
sub
pusha
jg
stos
rcl
lahf
test
xor
lock
scas
je
inc
xchg
aam
push
inc
or
mov
shl
push
xchg
sub
xor
sub
push
pusha
repnz
inc
not
lahf
insb
push
inc
ljmp
add
pushf
mov
out
repz
xchg
in
add
in
lock
repnz
mov
les
inc
and
aaa
xor
mov
inc
xchg
inc
jnp
ret
mov
add
adc
arpl
inc
cmp
in
ret
mov
stos
popf
lods
inc
cmp
xchg
hlt
pop
incb
mov
adc
nop
and
jmp
mov
sub
mov
sarb
xor
lret
sub
push
cmp
or
adc
or
or
stc
mov
dec
cld
nop
push
bound
jnp
mov
pop
jl
insl
sbb
dec
mov
mov
mov
data16
mov
addb
xor
push
xor
shrl
sub
and
outsl
xchg
mov
jl
inc
and
cmpsb
movsl
jp
test
push
insl
and
xchg
stc
pop
inc
sbb
cmpsl
mov
test
xchg
add
dec
fldenv
pop
rorl
sbb
daa
popa
loopne
lret
add
loop
daa
es
mov
pop
push
aad
fistl
lret
ds
outsl
outsl
gs
and
push
or
lcall
jb
pop
xchg
out
xor
dec
notb
pop
pop
or
rcll
cmp
xor
mov
xorb
add
imul
pop
sbb
stc
orl
push
and
insl
lret
enter
mov
icebp
ret
lods
test
mov
dec
sub
push
cmp
xchg
inc
movsl
push
mov
fnstsw
jge
sub
test
add
inc
ja
push
xchg
stc
dec
cmp
xor
xchg
repz
adc
dec
mov
xchg
dec
nop
aas
dec
shrb
and
inc
ds
mov
jns
out
cli
ret
pop
mov
mov
sub
jmp
addr16
popa
jb
sbb
hlt
ror
gs
test
dec
adc
daa
and
in
or
outsl
fsubrp
lahf
and
pop
xor
mov
enter
sub
mov
les
cmp
out
jge
mov
fdivs
jbe
add
pop
icebp
lds
movsl
daa
movb
ret
stos
lret
outsl
dec
mov
imul
out
mov
les
daa
jmp
movb
dec
faddl
mov
mov
stc
push
orl
repz
lds
js
pmaxub
push
fs
cmc
sbb
mov
mov
jmp
and
mov
add
cmc
ja
out
js
sub
cmpsb
mov
mov
adc
bound
fiadds
repz
xchg
test
jge
xchg
xor
mov
push
enter
add
dec
sahf
xchg
mov
movsl
fnstsw
dec
call
call
sbb
or
jge
or
lods
dec
in
insb
xchg
push
shrb
repz
dec
xchg
iret
pop
loop
pop
pop
cmp
cli
pushf
and
sbb
cmp
or
inc
add
or
jne
pushf
xlat
in
aad
xor
inc
dec
or
je
dec
ret
cmp
pop
fbld
sbb
or
xor
stos
adcl
sti
pusha
inc
ss
xor
sbb
leave
arpl
addb
sbb
cs
mov
lahf
adc
cwtl
out
mov
sbb
or
sahf
insl
pop
inc
mov
push
dec
push
mov
sub
jl
in
add
mov
xchg
xorb
cmp
xchg
cmp
mov
popf
popa
push
jecxz
lea
in
into
dec
sub
and
mov
out
in
mov
jecxz,pn
subl
xchg
scas
sub
pop
mov
in
loopne
cmp
xchg
cli
pop
scas
jmp
loop
shlb
cwtl
pop
mov
dec
mov
ret
nop
aaa
orl
mov
adc
jnp
dec
mov
sarb
fdiv
stos
sub
repz
lcall
nop
inc
push
or
dec
fdivrs
je
rclb
andl
add
mov
adc
mov
pop
xor
sbb
jg
push
js
test
dec
jmp
sub
movsb
into
fiaddl
mov
sub
rclb
aad
mov
inc
mov
idivb
aad
cmp
out
das
stos
aam
mov
mulb
stc
test
push
icebp
call
in
stc
cmp
test
insb
ret
jo
nop
ss
mov
dec
xchg
cmp
cmp
cmc
sbb
fstpt
xchg
inc
stos
mov
imul
push
dec
push
add
leave
movsb
and
inc
out
data16
xchg
mov
sbb
pop
cld
rcrb
stc
sbb
pop
arpl
push
and
outsb
dec
sbb
lock
js
jecxz
add
popa
xchg
cmc
cmp
pop
pop
insb
std
xchg
leave
loopne
addb
test
fidivs
mov
add
scas
xor
or
or
fimuls
sub
dec
or
aas
in
jno
outsb
arpl
jmp
or
cwtl
cmc
mov
cltd
outsb
dec
cmp
loop
push
push
and
call
sub
lcall
or
cmp
outsl
mov
push
inc
ss
lahf
int3
imul
cmp
or
xchg
adc
jne
fildl
rorb
testb
clc
jmp
xor
jg
test
loopne
jo
lcall
stos
push
enter
jecxz
clc
inc
jge
in
push
movsb
pop
xchg
sar
call
ljmp
or
push
test
stos
inc
lret
add
mov
mov
imul
adc
not
cmp
adc
ljmp
orl
jnp
daa
jo
imul
xchg
test
pop
pusha
add
arpl
adc
stos
lret
hlt
lds
jge
ret
jle
or
fistps
pop
clc
sbb
js
pop
add
sti
roll
loope
pop
pusha
push
cmpsb
inc
and
and
push
xorb
popf
fsubrs
jmp
add
jle
out
insl
aas
cld
cwtl
jge
jb
into
push
add
lahf
pop
pop
pop
xchg
imul
pop
mov
adc
jg
and
mov
hlt
stc
lret
mov
pop
into
push
loopne
test
jge
int
int3
mov
mov
xchg
cmp
rolb
xchg
movsb
jp
mov
outsb
add
shrd
add
sti
addb
stos
sti
adc
es
add
fcmovne
push
mov
cmp
iret
cltd
xchg
lods
or
pop
insl
shrl
testl
mov
mov
push
loopne
int3
push
lahf
inc
repnz
jnp
xchg
in
stos
imul
lret
dec
into
lock
push
sahf
or
into
sbb
mov
cmp
push
dec
and
inc
in
test
rep
xor
orb
push
xchg
cld
cmp
test
or
out
mov
sti
stos
daa
lds
adc
mov
aaa
idivl
nop
scas
shl
push
dec
inc
std
scas
jbe
jecxz
push
push
xor
mov
test
scas
and
cmp
xchg
cmp
mov
push
stos
jae
jge
sbb
or
into
and
int
mov
and
repnz
sub
orl
in
jns
inc
lahf
les
or
mov
in
pop
mov
sub
xor
rcrb
mov
add
xorl
rcrb
andb
insb
ja
add
and
repz
test
in
int
add
cmp
bound
test
daa
jb
xor
cs
push
into
and
mov
xor
jno
js
rcl
push
mov
xor
nop
sub
and
jb
insb
cmpl
outsl
jmp
xlat
adc
stos
push
idiv
or
loop
lret
cltd
aaa
mov
insb
out
jmp
insb
mov
or
push
push
push
pop
jae
sbb
or
cmpsl
and
push
sbb
xor
xchg
pop
js
cmp
movsb
push
fstl
shlb
aaa
cmp
jne
daa
cmc
arpl
es
cwtl
xchg
xor
int
adc
leave
popa
cli
js
jbe
insb
mov
push
lret
jp
cmp
pop
and
in
hlt
ljmp
cmpsl
outsb
sbb
xor
push
roll
test
sub
dec
mov
add
mov
pop
ljmp
idivb
pop
lock
fiaddl
sar
or
jns
leave
aad
cmp
mov
loopne
jp
rcrl
xor
mov
in
jge
push
dec
cmp
adc
jno
jecxz
popa
adc
icebp
dec
test
out
push
ja
cmpsl
mov
daa
add
sub
je
test
jo
ret
insb
ret
dec
out
inc
inc
inc
sarb
cmp
xchg
sbb
cmp
loope
lcall
ds
inc
aam
jecxz
aaa
jmp
shlb
rcl
mov
sub
je
icebp
cmpsb
ja
mov
in
mov
inc
lock
xchg
ret
lahf
movsl
push
jnp
call
mov
mov
or
addr16
in
jge
xchg
pop
mov
sub
ret
add
or
pop
sbbl
push
jl
std
lret
sahf
loope
add
aam
hlt
pop
push
lret
mov
push
imul
pop
imul
les
pop
cmpsl
push
out
data16
mov
cld
loopne
xor
lcall
ljmp
mov
out
testb
mov
sbb
bound
lret
call
sbb
filds
xchg
push
repnz
shlb
lds
dec
xchg
int3
das
addr16
adc
fsubs
fnstsw
jmp
sahf
xor
xchg
jecxz
sbb
out
and
iret
mov
movsl
xor
out
out
add
jg
dec
cmp
mov
or
xchg
out
loopne
push
cltd
call
std
addr16
out
jecxz
mov
mov
sbb
in
sub
push
popa
sub
imul
addl
inc
xchg
in
in
sub
push
stos
inc
pop
ss
mov
cltd
jns
push
pop
jl
ss
divl
dec
jg
add
hlt
filds
sub
mov
jge
pop
pushf
fadds
and
inc
cmp
and
adc
add
pushf
jae
les
scas
lret
jae
add
inc
and
push
pop
pop
pop
jmp
js
jb
mov
jno
ret
cmpsl
dec
xlat
test
and
adc
or
lcall
pop
mov
pop
jbe
repnz
push
dec
sub
mov
insb
push
out
inc
daa
lret
push
pushf
xchg
mov
and
loope
sub
icebp
movsl
add
movsl
inc
jb
scas
inc
imul
loop
arpl
pop
aad
pop
cmp
xor
sbb
sub
stc
adc
lret
mov
push
xor
mov
mov
imul
add
dec
mov
cmpb
lret
daa
xchg
aas
lea
mov
inc
jns
cmp
adc
outsl
out
push
jno
or
in
jb
jnp,pt
xchg
cld
add
xor
jmp
push
mov
rcll
into
cmp
popa
push
cmp
adc
gs
xorl
push
ds
pop
xadd
imul
cwtl
lods
cld
push
mov
lcall
jge
mov
das
out
cltd
xchg
and
sbb
cmp
js
popf
pop
out
or
xchg
mov
jbe
inc
pop
rclb
cltd
pushl
rcrb
test
popa
jle
xchg
add
push
lds
fsubrl
add
mov
jg
aad
test
js
aaa
fildl
pop
ss
inc
pop
lret
sub
leave
stos
inc
xchg
shlb
pop
push
cltd
popf
ss
cmp
rcll
inc
pushf
adc
fimull
push
mov
das
aad
test
xchg
stos
adc
pop
out
lcall
mov
pop
inc
mov
lret
sub
dec
mov
and
xor
add
mov
nop
fdivl
test
cmpsl
push
mov
lea
mov
loop
mov
push
orb
leave
and
orl
repz
aaa
xchg
xlat
push
dec
je
add
insl
test
testb
enter
pusha
cs
imul
in
pmulhw
jno
cmpb
jnp
sbb
lds
insb
lods
xchg
mov
inc
insb
and
inc
push
ffreep
mov
icebp
outsb
cmp
xchg
cmp
or
ret
cmpb
inc
dec
sarb
xor
push
cmp
xchg
shll
fcoms
jle
cld
sub
dec
jns
dec
push
iret
sbb
or
std
in
lds
loope
scas
cwtl
out
and
mov
pop
jb
pop
std
iret
stc
fwait
repz
push
das
mov
dec
mov
test
add
daa
out
subl
daa
dec
jge
ljmp
or
setge
cwtl
xchg
movsb
pop
fnsave
mov
stc
sbb
jae
lcall
mov
aas
je
addr16
cli
cmp
cld
lds
cli
lea
xchg
mov
xor
xchg
je
sub
hlt
loope
sub
fwait
dec
in
xor
push
fsubl
pop
ja
iret
jmp
ficoms
shlb
fs
adc
sub
mov
pop
dec
lods
jo
mov
and
xchg
test
test
push
mov
xor
pop
or
mov
or
idivl
inc
insb
leave
xchg
jne
pop
adc
out
loope
push
mov
mov
leave
data16
jg
mov
lods
mov
push
pusha
fistpll
push
mov
push
sbb
mov
mov
loopne
or
dec
or
xor
sbb
xor
dec
push
repnz
pop
push
and
xor
ljmp
add
mov
movb
pop
and
fcmovne
mov
popf
add
repz
aam
sub
into
push
mov
adc
sti
test
fcmovne
pop
stos
jge
pusha
push
mov
pop
test
mov
sbb
pop
and
jae
aaa
push
cmp
shll
lret
bound
push
in
sbb
arpl
hlt
lret
mov
fisttpll
ss
out
stc
fwait
mov
bound
mov
add
jae
adc
lret
test
stc
shll
xor
mov
push
lret
daa
xchg
xlat
jl
jle
push
xor
adc
imul
push
out
inc
push
jg
sbb
adc
stos
add
pop
xor
sahf
mov
xchg
sub
std
jp
in
or
ljmp
cmpsb
sub
cmp
imul
mov
into
xchg
inc
aaa
jle
int3
iret
jmp
call
out
push
and
arpl
fistps
mov
mov
mov
xor
mov
loopne
mov
lret
rorb
test
push
outsb
fisttpl
shll
mov
lcall
test
jecxz
adc
call
roll
mov
pushf
scas
popf
inc
sarl
repz
sbb
sbb
jae
and
mov
into
outsl
fisubl
or
shrl
add
xchg
aaa
dec
mov
sub
mov
sarb
out
xor
xorb
inc
fs
or
mov
sarl
nop
jae
daa
adc
sub
and
aas
shlb
pushf
dec
es
jle
jmp
in
sub
stc
cwtl
jno
dec
lahf
pop
xor
adc
in
repz
xor
int
in
or
xlat
adc
aam
stc
sahf
xchg
push
mov
filds
fmuls
jecxz
pop
pop
pop
insb
test
jl
imul
inc
outsl
mov
add
mov
inc
sub
dec
sub
or
out
cmpsb
xchg
call
xlat
push
fld
fisttpl
sbb
lcall
jbe
mov
in
imul
inc
pop
mov
aas
lahf
inc
mov
fiadds
jp
aas
cmp
xchg
cmp
xor
inc
inc
das
and
xchg
sbb
or
clc
aaa
popf
das
into
push
and
imul
inc
outsl
mov
dec
std
enter
push
roll
xchg
stos
enter
fiadds
enter
adc
out
mov
dec
sub
movsl
pusha
push
ret
filds
sbb
jle
jl
outsb
outsb
and
adc
imul
jne
je
mov
sub
pushf
aas
mov
scas
sub
or
std
je
mov
pop
xor
lret
dec
fbld
mov
adc
mov
leave
ffreep
mov
data16
mov
fisttps
and
and
pop
jb
icebp
jbe
lods
add
push
dec
int
xlat
loop
pop
lds
mov
push
repz
mov
mov
adc
inc
call
dec
add
js
subb
shl
push
leave
xor
cmp
sbb
es
dec
and
dec
ffreep
fisttpl
cmp
xchg
jnp
lock
add
ror
mov
iret
push
mov
sbb
inc
xor
push
das
aaa
mov
rcrl
xchg
ljmp
mov
ret
mov
xchg
push
pop
dec
sbb
mov
mov
inc
pop
into
aas
pop
rclb
push
imul
cmp
sbb
inc
aaa
clc
adc
insl
insb
mov
cld
int3
lds
jge
es
adc
popa
sbb
stos
ret
ds
loop
jbe
test
xor
mov
lcall
in
cmpsl
push
in
sub
pushf
jp
pop
arpl
int
mov
dec
sub
and
outsl
nop
xorl
clc
xchg
mov
int
popa
cltd
ficomps
adc
aad
mov
sbb
mov
or
sbb
test
mov
mov
data16
f2xm1
push
xchg
clc
hlt
or
loop
into
pop
popf
xor
fdivrl
gs
in
stos
jmp
mov
jo
xchg
adc
or
sbb
adc
xchg
mov
test
mov
lcall
loopne
js
sub
inc
cmp
bound
lods
pushf
movl
loopne
mov
sbb
test
jmp
mov
nop
push
jns
push
ficoml
ss
cwtl
sahf
pop
mov
push
test
subb
xchg
sarb
push
inc
pop
ds
or
inc
pop
call
adcb
adc
sbb
mov
ret
in
outsl
xchg
mov
arpl
or
leave
aad
ss
aam
ds
sub
mov
cld
adc
xor
push
scas
imul
les
das
xchg
cld
xchg
bound
mov
cwtl
imul
and
xchg
push
and
or
inc
mov
inc
lds
xchg
nop
push
sub
std
sub
pop
ljmp
stos
cs
filds
subl
adc
jmp
inc
sbb
jbe
repnz
pop
rcrb
loop
shll
rorl
sar
cld
pop
mov
jmp
mov
xor
je
and
nop
lret
fcmovnbe
negb
sbb
and
aaa
adc
divl
cmp
sahf
inc
push
cmp
add
xor
inc
mov
mov
mov
push
pop
inc
daa
lock
pop
les
mov
xor
mov
fstps
sub
enter
push
xchg
mov
inc
ret
cld
pop
adc
sarl
js
xchg
scas
dec
jecxz
pop
mov
std
aas
mov
cmp
push
pushf
or
fsubl
insl
fsubrl
adc
or
vphaddbw
mov
popf
push
push
mov
pop
adc
hlt
aaa
mov
mov
ss
mov
dec
pop
mov
cltd
subl
fsubl
jg
pop
add
out
xchg
roll
xchg
in
xchg
mov
into
mov
mov
insl
clc
inc
xor
pusha
jnp
addr16
jmpw
push
nop
or
bound
xor
dec
mov
cld
inc
or
adc
dec
mov
mov
fists
bound
sti
movsb
in
rcrl
push
cmp
loope
fisubl
add
enter
ficompl
aaa
arpl
xor
in
in
shll
cmp
mov
notb
mov
lret
cmpsl
mov
cmp
jno
xchg
adc
sub
aam
cmp
mov
push
mov
pusha
lods
iret
je
outsb
movsl
stc
gs
xchg
push
mov
fistpl
adc
xchg
lret
mov
scas
test
xchg
inc
inc
xchg
lds
outsb
stos
cmp
cmp
sub
pop
ljmp
xchg
in
xor
jge
mov
daa
test
popa
xor
js
adc
in
shlb
dec
call
dec
cli
dec
mov
push
xchg
clc
cld
sub
out
mov
subb
movsl
int
test
pop
mov
push
pushw
push
in
out
arpl
jb
or
fildll
xchg
daa
mov
adc
mov
aad
mov
mov
xchg
test
jno
mull
xor
sub
pop
fwait
ljmp
je
xlat
adc
pop
clc
cli
in
mov
stc
push
jmp
outsb
pop
out
in
add
jl
dec
jle
outsl
push
mov
cwtl
sub
stc
in
mov
cli
mov
stc
lahf
cli
xchg
inc
adc
movsb
push
mov
inc
xor
iret
mov
dec
out
jno
sub
cmp
in
bound
or
lds
imul
xchg
mov
xor
lods
jmp
add
mov
adc
sbb
mov
movsb
daa
in
jge
adc
push
sub
lcall
jns
in
jl
jge
and
std
test
sbb
scas
scas
jmp
pop
add
or
pusha
xchg
cli
pop
pop
mov
cs
mov
stos
call
pop
js
sub
and
scas
adc
popf
pop
xchg
push
dec
xchg
inc
sbb
mov
ret
and
shl
sub
out
sub
inc
jecxz
inc
push
xchg
subl
mov
ficoms
jle
fdivs
fidivrs
pop
clc
xchg
rcrl
iret
push
push
and
adc
inc
jnp
pop
pop
sub
out
dec
add
add
and
in
scas
inc
jle
std
ret
std
or
arpl
sbb
and
cld
xchg
aam
aas
pop
xchg
or
jns
pop
mov
sbb
std
ja
cmpsl
test
out
and
outsl
mov
mov
cld
push
jecxz
negb
sbb
sbb
mov
sub
fsubr
push
fnstenv
lods
jecxz
iret
roll
adc
and
aad
jg
test
sbb
add
rorl
scas
lahf
pushf
jl
push
cmp
fsts
popa
jno
inc
or
movsl
hlt
loope
sub
push
push
pop
jns
mov
xchg
pop
imul
pop
hlt
outsb
repnz
jae
mov
and
pop
mov
rcll
std
cli
mov
xor
xor
cmp
pop
xchg
sub
lods
inc
mov
out
mov
cmp
jl
loop
mov
sahf
vpmulhuw
movsb
aad
mov
subl
mov
loop
popf
idiv
cld
stc
xor
fidivrl
cmp
cltd
xchg
or
adc
xor
jl
fs
push
shl
add
pop
rcrl
cmp
jno
or
out
daa
mov
xchg
xchg
sub
fidivrl
jno
bswap
aad
iret
lods
movsl
pop
xchg
repnz
stos
jmp
rorb
iret
sahf
cmpsb
insb
adc
jmp
cmp
outsl
add
push
sbb
loopne
aas
cmp
sbb
test
in
loopne
gs
pop
addr16
mov
sahf
mov
sahf
xchg
lret
jl
xchg
mov
xchg
jecxz
xchg
imul
out
dec
push
cld
andl
imul
cmp
mov
mov
loope
inc
and
inc
mov
cld
test
push
dec
test
xchg
cltd
into
aam
loop
popf
or
pop
lds
notb
popa
mov
jno
push
pushf
jbe
cmp
add
scas
imul
push
ret
out
xchg
cmp
xor
test
pop
jno
or
sub
loop
lretw
jmp
les
jmp
or
jge
cmp
bound
cmp
lds
mov
fcomip
inc
xor
ds
or
aas
gs
addr16
dec
mov
xchg
mov
je
icebp
aad
pop
loopne
cmp
mov
sub
xchg
cmc
sbb
pushf
xor
mull
outsl
sbb
mov
cmp
sbb
pushf
ljmp
stos
popa
cvtps2pd
les
lds
mov
outsb
stc
enter
mov
jno
insl
pop
clc
les
sbb
or
stos
and
je
fxch
fwait
inc
loop
rorl
int
movsl
lret
mov
mov
iret
push
insb
enter
out
add
mov
xor
push
bound
mov
pop
aas
mov
fdivs
xor
int3
imul
push
jbe
fs
mov
les
xchg
dec
outsb
cmpsb
cmpsl
pop
lods
cmc
sahf
test
adc
outsb
and
xchg
movsb
dec
mov
dec
push
add
loopne
pop
out
adcb
sbb
xchg
sar
mov
xchg
mov
or
fidivs
inc
orl
daa
daa
into
mov
mov
fiaddl
rcll
icebp
pop
je
out
mov
xor
fidivrs
js
aad
adc
inc
cmp
add
aas
mov
xchg
push
fistl
mov
dec
sahf
mov
jle
pop
or
cld
adc
daa
cs
sub
mov
enter
dec
cmc
std
push
jmp
jnp
jae
repz
sbb
lcall
lds
sbb
mov
xchg
sbb
fisttpl
inc
push
mov
ds
in
pusha
add
push
inc
je
fdivr
pop
pop
push
int
or
jne,pt
sub
aaa
or
dec
add
add
xchg
sahf
cmpsl
loopne
lock
fildl
xchg
mull
sbb
push
mov
lods
and
out
lahf
out
or
out
call
stos
push
or
nop
dec
inc
dec
insb
sub
aas
jmp
insb
repz
jnp
loop
fldl2t
add
mov
icebp
int3
xchg
mov
les
or
jnp
and
or
push
je
popf
fwait
mov
cmp
les
add
nop
adc
inc
add
cmp
inc
push
repz
mov
push
lret
ret
stos
push
in
jl
into
shrl
jecxz
stos
addb
mov
je
es
xchg
xchg
cmp
cli
out
add
and
pop
xchg
sbb
mul
faddl
jo
cmc
jnp
xor
or
xchg
push
mov
subl
push
adc
inc
lods
or
sub
mov
push
and
push
inc
out
pusha
or
cmp
jb
fists
xorl
in
scas
pop
fwait
sub
jno
xchg
fiaddl
jmp
cld
adc
sub
out
or
mov
sub
outsb
mov
jbe,pn
nop
jle
std
out
jl
xor
jg
adc
xor
jp
or
dec
sar
pop
hlt
pop
adc
fnstenv
cwtl
iret
sahf
pop
in
xchg
jg
inc
xchg
mov
add
shlb
dec
fisttpl
insb
insb
jmp
inc
or
cltd
fisttpll
dec
sbb
in
pushf
mov
subl
xlat
pop
sbb
cmp
add
lods
mov
add
les
mov
movsl
fisttpl
lret
aas
dec
loope
mov
movsl
cmp
popf
mov
and
imul
xor
movsl
xchg
pop
cmp
aas
hlt
cmp
psubd
call
dec
add
mov
and
and
push
sbb
fisubs
gs
mov
cmp
cs
out
inc
or
cmpsb
adc
xor
pop
loope
xorl
mov
add
aad
jns
aaa
stos
jl
pop
push
sub
sub
leave
push
aaa
mov
add
sub
fmull
dec
pop
clc
xor
adc
fists
dec
jp
and
nop
enter
mov
pop
push
dec
adc
aad
pusha
push
pop
cmp
sarl
je
cmc
xchg
fimull
mov
mov
adc
mov
fs
push
outsl
loope
das
and
cmp
test
and
sbb
js
jp
jle
mov
push
sub
sub
push
aas
in
sub
es
mov
cwtl
scas
inc
ret
icebp
lods
int
inc
test
je
cmp
mov
and
add
push
sbbl
and
mov
xchg
je
outsl
out
ja
inc
sub
cmp
push
mov
pop
iret
mov
aas
aam
out
in
mov
push
sbb
jmp
loopne
clc
mov
stos
jg
call
out
lods
and
pop
and
inc
outsb
loopne
subl
daa
es
idivl
mov
push
xchg
int
mov
mov
movsl
lret
icebp
les
xor
xor
test
xchg
fnstsw
xchg
movsb
in
mov
and
add
jae
inc
cmp
les
popa
mov
dec
popf
insb
sbb
add
sub
xor
xchg
mov
and
and
sbb
pop
gs
fdivp
or
sbbl
decb
inc
ror
and
mov
je
push
das
out
mov
mov
fcmovbe
mov
rcrl
or
sti
je
xchg
ljmp
aaa
lea
test
lret
mov
pmaddwd
cmp
ret
rol
push
pop
and
test
adcl
ret
or
mov
loopne
mov
jae
ss
push
shlb
cmpsb
loop
ljmp
rorl
sub
push
dec
lods
lcall
icebp
out
jmp
mov
adc
fwait
sub
into
sub
mov
jl
lods
xchg
popa
xchg
xor
jmp
jnp
cltd
je
popa
pop
and
imull
inc
dec
jl
push
ds
mov
int
and
xchg
xor
dec
inc
cwtl
sbb
xor
in
stos
jnp
insl
int3
scas
shl
aaa
shlb
movsl
scas
jmp
lea
cmpsb
push
sbb
shrb
add
cmc
stos
sub
sub
add
jno
fcoml
sub
pushf
ret
dec
roll
pop
xor
xchg
push
mov
ljmp
movsb
sub
xchg
push
xorl
fisubrl
push
fisttpll
mul
xor
imul
inc
cmpsl
fdiv
in
pcmpeqw
ss
je
push
enter
sub
out
testl
popa
lahf
jae
mov
stc
push
xchg
loop
dec
push
or
add
addl
pop
xchg
sbbl
adc
and
outsb
mov
mov
pop
scas
pushl
jmp
out
jnp
dec
lcall
add
sub
aad
push
aaa
sbb
lods
dec
or
lea
das
jno
pop
xlat
lret
repz
sti
stc
xor
outsb
pop
dec
fadd
cmpsb
test
push
lret
movsl
aam
outsl
pop
mov
rol
mov
mov
jp
xchg
dec
out
dec
sbb
outsl
jcxz
cwtl
or
push
xchg
or
out
imul
jns
es
xor
sahf
cmpsb
negl
imul
mov
jno
push
test
imul
jecxz
or
fsubp
les
into
sbb
into
sbb
push
lret
scas
mov
sub
xchg
xchg
inc
in
cmc
add
scas
in
xchg
jo
lahf
pop
cmpsl
or
and
pop
or
gs
aam
jb
dec
xor
sub
sbb
and
push
popl
lds
mov
dec
fdivl
mov
or
xor
and
dec
and
leave
arpl
dec
and
je
notl
dec
pop
lcall
pop
mov
cmp
jo
xor
cmpsl
jb
jae
test
mov
adc
imul
test
orb
loopne
jnp
fidivl
inc
gs
lods
mov
inc
cmc
cs
outsl
mov
jbe
pushf
sub
adc
mov
jbe
adc
mov
pop
out
sub
sub
fbld
fdiv
add
cld
ss
adc
mov
sub
dec
jb
cmp
mov
add
pop
cltd
loop
fdivs
ljmp
pop
xchg
pop
mov
leave
dec
imul
sbb
aaa
sbb
pop
inc
sub
jno
add
mov
int
clc
or
mov
adc
push
xor
inc
pop
dec
xor
sub
ret
cwtl
mov
sahf
mov
and
mov
push
insl
push
inc
push
and
sbb
mov
out
js
repz
in
mul
sbb
into
or
roll
dec
or
xor
pop
rclb
repz
fmuls
lds
jle
leave
cmp
loopne
xor
add
popa
ficomps
and
es
fsubs
cmc
push
jne
rorl
xlat
xchg
es
dec
mov
cli
push
push
test
sbb
xlat
psllq
bound
sahf
and
idivb
je
push
sbb
inc
mov
xor
clc
mov
sub
mov
xchg
adc
rcrl
adc
adc
in
out
xchg
insl
dec
lret
jmp
outsb
xchg
int3
je
js
jno
jno
inc
mov
and
cmpb
jb
bound
addr16
adc
in
fcmove
mulps
out
loope
daa
shlb
or
out
xor
mov
push
shll
dec
pop
sub
sti
sarl
lods
addr16
pop
inc
pop
imul
rclb
jecxz
dec
in
jecxz
mov
jb
lock
mov
testb
inc
jge
loope
pop
aad
xor
pusha
loope
daa
arpl
mov
jmp
ror
sbb
jle
mov
fstpl
or
mov
shl
lock
xlat
imul
iret
mov
sub
mov
push
int3
jo
and
insb
push
pusha
test
test
std
lret
testl
push
in
shrb
inc
ja
push
push
mov
test
sub
in
or
xor
jns
adc
mov
and
push
outsl
sub
lods
xor
inc
and
and
iret
xor
out
inc
das
in
cmp
or
mov
pop
ds
shl
jb
addr16
ds
movsl
xchg
fnstenv
arpl
xor
je
mov
ss
cmp
testb
hlt
mov
into
clc
jmp
ret
adc
sub
xor
shlb
xchg
cs
lea
jmp
push
lahf
pop
pop
push
sub
ja
inc
movsl
mov
pop
test
inc
arpl
fidivl
dec
push
jns
mov
jae
xchg
push
shr
out
and
inc
cmp
pop
mov
testl
adc
xchg
xchg
and
cwtl
int3
in
push
sahf
aad
scas
sbb
sbbb
lret
sbb
mov
ret
jb
sti
xor
push
clc
nop
push
leave
ret
or
mov
adc
mov
sahf
dec
push
in
or
and
cmp
sbb
pop
stc
xor
add
in
mov
scas
pop
inc
xchg
mov
jmp
cmpsb
scas
repnz
lds
jp
push
push
add
mov
sub
iret
adc
mov
ds
pop
jns
cmp
and
mov
push
add
push
insl
pop
in
movsb
lcall
negl
sbb
cmpsb
or
mov
into
mov
push
loopne
mov
dec
mov
sub
sub
fisttpl
push
lea
stos
in
sub
xchg
iret
pop
cmp
andl
xchg
lock
andb
xchg
pop
or
push
test
aas
push
ja
sub
mov
movsl
scas
mov
adc
jb
sub
inc
pop
test
addr16
add
icebp
int3
fwait
mov
int3
out
jo
or
mov
and
xchg
mov
xor
aas
test
add
loop
push
fldl
push
pop
dec
repz
imul
sub
test
xor
insl
jnp
ja
sbb
ret
cmp
xchg
loopne
inc
shll
dec
test
out
jl
outsl
inc
adc
mov
out
dec
loopne
mov
jo
xor
or
mov
mov
shrb
or
test
or
adc
add
ljmp
insb
jle
add
test
fadd
and
in
jno
pop
rorb
pop
aam
pop
scas
mov
sub
in
mov
mov
std
lods
cmpsb
dec
inc
popa
cmc
mov
in
rcll
popf
xchg
jmp
call
dec
popf
mov
xchg
das
xchg
inc
inc
or
lea
iret
lret
mov
lods
mov
or
dec
cmp
enter
mov
aaa
cmpsl
cmpsb
shll
cmp
fldl
xchg
pop
sub
mov
popf
test
js
bound
jecxz
jb
ds
and
add
xchg
xor
and
aam
push
xor
repz
hlt
push
xor
jae
lret
inc
flds
xor
dec
rcl
sbb
adc
push
add
fstps
cmpsb
cmpsb
movsb
rclb
enter
sub
in
jne
or
mov
in
out
fldenv
js
call
jns
test
inc
xor
std
xchg
dec
mov
push
or
push
insl
xchg
loope
xor
add
pop
lock
cs
sti
mov
sub
jp
xor
mov
loop
jge
mov
and
fbstp
lods
mov
sarl
jno
es
mov
mov
jmp
pusha
mov
lods
mov
testb
in
lock
rorl
xor
adc
stos
stos
jnp
adc
testl
dec
sub
xchg
xor
outsl
xchg
in
ss
ret
push
push
adc
in
aam
adc
cltd
cmp
iret
jge
sub
std
iret
push
cltd
and
mov
insl
add
cld
xchg
rcll
mov
jae
rcr
sbb
jno
andb
fs
sbb
xor
xor
fbld
adc
enter
xchg
decb
jae
jne
adc
aam
sub
inc
outsl
sbb
fiadds
pusha
sub
stc
out
lret
scas
mov
push
push
cmp
inc
push
pop
test
addr16
inc
cs
lcall
inc
pop
mov
sbb
les
int
mov
fdivrl
xchg
ljmp
ja
cmp
rcr
cmp
inc
adc
in
movsb
lods
jg
ret
add
enter
dec
add
jl
ds
fldenv
jae
scas
mov
outsl
cmp
xlat
hlt
dec
inc
pop
fsubp
popa
stos
dec
mov
xlat
lret
mov
mov
inc
das
stos
and
mov
outsb
cmpsl
leave
loopne
or
fs
sub
cmp
leave
dec
or
mov
mov
jae
and
inc
inc
addl
arpl
clc
fucomp
lcall
mov
lods
lods
or
mov
add
mov
sti
mov
dec
cmc
int
cli
ret
sub
add
cmp
bound
inc
mov
or
pushf
push
outsb
fimull
jbe
fadds
cmp
mov
xchg
jl
bound
andl
loopne
ss
dec
or
push
adc
push
loope
push
test
add
adc
rcll
adc
test
les
adc
mov
imul
jo
ljmp
add
mov
leave
jmp
mov
push
ret
jb
jae
enter
pop
dec
in
cs
je
lods
jbe
ljmp
subl
inc
mov
mov
cmp
and
ss
and
cwtl
dec
pop
hlt
pop
outsl
add
inc
mov
jae
out
mov
imul
mov
rolb
sarl
xchg
rorb
mov
lods
push
push
push
xor
insb
add
lret
push
lahf
outsb
sub
adc
fstpt
sti
cs
xor
inc
xchg
or
test
mov
and
push
scas
imul
das
lods
adc
jno
mov
sbb
mov
mov
addr16
pusha
fs
js
or
dec
push
cs
ljmp
jl
cmpsb
mov
fdivl
lods
lods
sbb
dec
popf
push
sarb
sbb
adc
mov
pop
es
subl
add
jno
mov
out
sbb
repz
dec
xchg
in
pop
lock
inc
ss
fs
mov
mov
mov
mov
push
cmc
popf
sbb
sub
and
jle
push
movsl
ljmp
mov
icebp
pop
scas
cmc
repz
sbb
outsb
mov
test
es
xchg
jge
mov
mov
push
pusha
jb
lods
xor
dec
xlat
cmp
or
imul
movsl
cmp
mov
adc
cmpsl
mov
xchg
sbb
adc
xor
insb
bound
insl
xor
ljmp
fcom
sub
pop
fcoml
and
sub
jne
ds
ret
and
sbb
fbld
mov
cmp
jmp
ljmp
cmp
pop
and
xchg
test
ljmp
jge
jb
add
sbb
shrb
cmc
xorl
dec
xchg
adc
add
xchg
xor
scas
jmp
lret
insl
test
adc
in
lds
aad
sub
in
inc
dec
sub
ret
mov
jle
sub
enter
or
cwtl
and
inc
push
int3
xor
jecxz
mov
dec
xchg
mov
or
sub
movsl
sbb
sub
andb
subb
pop
dec
cwtl
and
or
and
inc
xchg
xor
out
hlt
cmpb
cli
test
xor
pop
push
iret
popa
sub
mov
or
xor
out
push
adc
adc
jmp
ret
xchg
in
fs
dec
add
push
pop
inc
sub
outsl
jl
inc
dec
xchg
insl
sub
inc
mov
call
jne
ss
not
hlt
outsb
mov
inc
fs
sbb
movsl
jb
stc
cltd
ds
enter
dec
leave
test
js
xchg
xchg
aas
dec
jns
in
rorl
xchg
push
add
push
xchg
imul
pop
out
inc
aam
lock
fisubrs
push
mov
out
test
popf
int
std
push
add
dec
cmp
sahf
and
rcll
rorb
pop
add
pop
test
sbb
insl
add
mov
pop
pop
stc
dec
int3
add
pop
jecxz
push
fdiv
outsl
imul
inc
aas
push
inc
js
sbb
sub
xchg
loope
push
jle
in
or
sahf
xchg
imul
leave
outsl
leave
mov
adc
pop
jecxz
xchg
and
std
sbb
repnz
bound
xor
les
jae
mov
sbb
dec
hlt
mov
aad
fwait
mov
sbb
cmpl
in
cs
push
xchg
shl
mov
mov
sbbl
lea
ret
bound
lock
sbb
pushf
lods
fsubs
add
bound
loopne
or
sbb
fnstsw
js
mov
out
sbb
rorb
add
movsl
pop
rcrb
loop
mov
loopne
out
sub
shl
dec
aas
mov
xchg
mov
out
mov
xor
lods
inc
test
push
rorl
lds
pop
jnp
adc
push
fiaddl
rorl
in
jle
push
dec
push
mov
or
sti
xor
insl
fidivl
sbb
or
insl
fstpt
scas
sbb
push
cmp
mov
dec
mov
inc
sub
sub
loope
leave
ret
cmp
sbb
jle
insl
xchg
push
mov
les
mov
jb
xchg
lods
hlt
push
xchg
xor
mov
jns
pop
push
xor
mov
test
xor
cmp
add
or
mov
jno
mov
int
and
stc
pushf
in
sarb
inc
adcb
jg
jle
jg
loopne
in
xlat
add
daa
movl
sub
inc
in
adc
mov
and
jp
sub
stos
push
enter
dec
loopne
cld
dec
stc
mov
lock
lds
sub
mov
dec
in
mov
adc
push
add
into
jecxz
mov
adc
insl
invd
test
aas
test
sbb
add
or
insl
add
lret
jecxz
insl
pusha
dec
imul
pop
cld
aaa
pop
dec
sbb
add
out
push
adc
cmp
js
mov
loopne
mov
push
pop
dec
push
outsb
sbb
test
lock
add
add
stos
jb
js
push
sbb
insl
stos
push
sbb
mov
fwait
mov
push
loopne
xor
or
jg
dec
lcall
sub
or
ss
xor
faddl
mov
mov
xor
mov
mov
cmp
sbb
movsl
lods
in
pop
add
and
sub
jp
push
data16
push
xchg
xchg
jno
mov
movsl
rep
lods
mov
and
into
mov
test
cmp
out
pop
shlb
mov
es
or
lods
sbb
les
add
xchg
fistpll
test
cmp
xor
mov
xchg
andb
jne
jno
jae
test
xchg
outsl
dec
sahf
gs
mov
and
hlt
jns
icebp
rcrb
fimull
cmpsb
repnz
push
or
add
mov
or
imul
jp
pop
mov
sub
adc
sbb
in
je
cmp
pusha
aaa
insl
cmp
ja
lret
push
test
mov
push
and
cmpsl
push
mov
dec
aaa
and
jb
daa
in
ds
inc
mov
inc
pop
lcall
int
sbb
pop
fnstsw
repnz
add
xchg
nop
cmpsl
fimull
fs
mov
in
lds
xor
popf
inc
mov
out
sarb
sbb
lock
outsl
adc
push
outsl
loope
pusha
adc
mov
insb
jp
inc
fidivs
mov
pop
out
xor
fadd
adc
outsb
sub
mov
sbb
xchg
or
bnd
loop
stos
gs
xchg
push
or
add
push
ret
or
add
mov
aad
mov
mov
mov
sbb
push
fisubl
dec
sbb
xor
lea
rclb
mull
add
push
insl
outsl
fucomip
ret
sub
jbe
lret
fnstenv
and
pop
and
xor
sub
test
mull
fstps
es
jo
mov
lock
push
fidivl
lock
fistpll
sbb
or
shlb
dec
enter
ds
lods
mov
xchg
enter
xchg
mov
sarl
cmp
adc
imul
gs
lods
or
movsb
js
sar
test
testb
lds
fisttpll
cmp
fwait
sbb
inc
push
les
fisubrs
dec
push
push
ret
add
push
pop
jp
out
test
negb
bound
inc
dec
popa
stc
sbb
dec
outsb
jno
xlat
jbe
shlb
push
je
stc
dec
fsubl
pop
dec
pusha
test
mov
sbb
mov
cmpsb
add
adc
fisttpl
shll
ror
add
push
addr16
sbb
fwait
or
sbbb
mov
pop
add
mov
jg
outsb
jl
lcall
pushl
jp
and
mov
lret
lds
mov
mov
lret
jl
mov
cli
lds
cwtl
aaa
fistl
xchg
xchg
pop
sub
inc
xchg
pop
in
fldcw
or
mov
and
mov
adc
imul
aas
stos
mov
jl
pop
xor
jnp
icebp
push
xchg
push
mov
int3
sbb
daa
mov
mov
sub
sbb
aaa
rorl
mov
push
pushf
xchg
inc
sbb
pop
lahf
lret
and
xchg
fwait
idiv
fcomps
aad
fcomps
sub
mov
inc
ss
push
mov
fldenv
mov
aam
addr16
int
add
icebp
idivb
sbb
ret
movlps
ret
rolb
adcb
sarb
inc
stos
out
mov
xchg
test
cmp
or
scas
call
popf
nop
sbb
dec
push
cwtl
push
sub
mov
mov
cmp
or
push
pusha
aam
mov
adc
popf
push
jns
xchg
mov
je
lods
mov
pusha
mov
sbb
sub
mov
orl
cld
rol
push
adc
sub
pop
xchg
lods
js
pop
jno
dec
push
dec
and
cld
daa
insl
cmp
outsb
jmp
mov
popf
pop
jne
sbb
ja
test
push
ret
outsl
jno
mov
out
adc
adcb
push
jge
test
mov
mov
insl
jmp
std
dec
rcrl
add
cmc
out
jp
int
movsb
sbb
push
std
cwtl
push
lock
adc
dec
jmp
fmul
cmp
jne
cmp
or
insl
mov
push
lock
jle
inc
testb
jp
je
shlb
inc
call
lods
lret
scas
xchg
push
sub
outsl
push
mov
loop
iret
jle
cmpb
inc
mov
adc
call
and
int
xor
roll
cwtl
xchg
mov
mov
push
push
jmp
push
jae
icebp
lret
and
in
push
jp
call
pop
outsb
and
or
push
dec
inc
cwtl
jge
or
mov
mov
mov
sbb
xor
in
and
inc
lahf
mov
cmp
xor
fildll
orb
pop
loope
xchg
pop
mov
negb
iret
sti
adc
imul
mov
dec
imul
insl
mov
sbb
push
push
lret
mov
xlat
or
inc
call
fstpl
je
and
and
push
xchg
push
mov
and
or
add
mov
mov
ret
addr16
imul
and
into
lds
mov
sbb
or
pop
mov
sbb
mov
rcrl
sub
nop
mov
pop
les
stc
orl
pop
cmp
mov
pop
mov
mov
lahf
cltd
rolb
jp
mov
push
stos
cltd
pop
sub
movsb
movsb
mov
adc
mov
outsl
insb
lock
gs
and
xor
dec
hlt
bound
add
imul
movsl
sub
xor
fisubl
mov
sub
push
imul
and
push
pop
mov
fldt
insb
rcrb
cmc
scas
ret
dec
ss
lcall
cmp
fcompl
or
sub
fidivrl
jo
dec
jns
arpl
fcompl
gs
push
and
mov
inc
xlat
fdiv
inc
imul
xor
lret
jb
xchg
mov
mov
clc
mov
sti
or
aam
sahf
jae
inc
stos
mov
sub
rolb
push
test
sub
xchg
ss
out
in
outsb
and
faddl
sbb
pop
pop
hlt
ss
xchg
daa
jmp
aas
xchg
jno
push
and
ror
xor
pusha
pop
lret
addr16
dec
dec
int3
test
jbe
in
or
mov
loope
daa
adc
roll
push
sub
rorl
loope
adc
sub
jg
inc
movsb
mov
sub
test
outsw
push
insl
inc
dec
xor
outsb
pop
xchg
or
add
lock
stc
in
cmp
outsl
jle
add
ret
addl
cmpsb
daa
mov
push
dec
adc
and
es
daa
adc
and
testb
dec
jge
pop
popf
sbb
das
inc
push
fldcw
aam
push
lcall
xchg
or
inc
jb
adc
pusha
ds
rorl
lea
jg
cmp
mov
cmp
xor
or
mov
mov
loop
xchg
xchg
or
shl
lret
and
insl
scas
ljmp
cmp
push
dec
aas
pop
and
sahf
pop
sub
jb
adc
xor
in
mov
add
fisubl
subl
mov
xor
cmp
inc
insb
addr16
fsubs
xchg
cmpb
inc
push
jp
outsb
in
loop
lret
test
and
into
xlat
mov
fdivs
outsl
loopne
aaa
loope
dec
leave
insl
sub
fdivrl
push
add
sbb
mov
sub
mov
push
daa
fsubr
rolb
xchg
test
or
and
dec
pushf
jns
push
xchg
pop
sarb
lods
in
lcall
and
cmp
sub
imul
xlat
dec
cwtl
sbb
cmp
pop
mov
test
dec
scas
pop
jae
mov
jo
movsl
inc
test
mov
dec
mov
test
insb
lea
das
adc
mov
leave
call
pop
dec
out
daa
xlat
push
out
push
nop
xchg
add
jbe
sbb
push
mov
add
and
dec
push
stos
scas
pop
inc
cld
into
call
add
lods
cmp
js
aaa
sbb
in
xchg
push
jne
pop
mull
dec
xchg
sbb
pop
sub
add
xchg
jecxz
xlat
mov
sub
mull
ret
shlb
shrl
jae
xor
or
pop
adc
in
out
mov
cli
pop
jo
sti
test
in
shll
mov
cmpsb
stc
pop
push
mov
add
sahf
or
sar
jmp
bound
popf
inc
dec
popa
sbb
add
mov
rcl
inc
loop
insb
das
cmpsl
popf
insl
loop
shll
push
repz
orb
and
jae
lret
jo
push
inc
daa
sarb
jb
aam
xor
sub
xchg
movsl
jnp
or
push
in
sub
mov
mov
popf
xrelease
xchg
add
jge
mov
mov
push
push
insb
jno
xor
or
pop
outsl
xlat
mov
jo
leave
scas
insl
sbb
xor
push
mov
pop
hlt
cli
add
jno
push
es
dec
jbe
jl
inc
mov
sub
jmp
pop
xchg
jle
jo
sub
ja
ret
ljmp
dec
or
cmp
je
xchg
pushf
lcall
pop
lcall
test
mov
inc
xchg
or
push
mov
xor
inc
addb
inc
shrb
lea
xchg
imul
xchg
or
sbb
fisttpl
or
push
test
jle
xorb
mov
fnstsw
hlt
cwtl
and
in
xor
ss
dec
test
push
pop
cltd
push
lods
pop
out
push
or
in
fldt
pop
pop
mov
rcll
mov
xchg
adc
pop
adc
adc
inc
push
pop
fsubrs
js
mov
mov
mov
popa
mov
je
dec
or
or
adc
popf
pop
sarl
dec
sub
test
lods
dec
jae
insb
xchg
insl
cmpsl
imul
mov
sbb
icebp
ds
xchg
push
testl
inc
add
jns
rcrb
dec
les
adc
dec
jno
test
push
fs
out
cli
jne
jge
pushf
sub
sbb
push
loopne
lock
lcall
js
add
cmp
orb
jle
push
sbb
pop
lret
mov
cltd
fcomi
mov
push
mov
sbb
ret
push
and
fs
add
in
and
and
dec
cmp
in
les
mov
pop
xor
push
scas
sbb
add
pop
xor
pop
push
rcl
cmc
mov
xor
insb
push
imul
in
cmpsb
shrb
pusha
repz
outsb
ret
push
aaa
aam
das
inc
add
cltd
jae
push
int
aaa
js
movsl
sub
out
adc
jecxz
mov
sub
inc
imul
enter
inc
andb
inc
jnp
enter
sub
and
cmpsb
jo
insl
in
and
adc
or
sti
andb
xor
mov
mov
mov
push
jmp
jle
mov
scas
jmp
sti
jg
hlt
dec
into
bound
bound
in
scas
push
outsl
xchg
sbb
jne
out
ja
aaa
inc
enter
dec
fldenv
test
outsb
xor
aas
aad
mov
jp
rcrl
imul
cmp
lret
push
out
repz
cmp
push
push
push
xchg
mov
arpl
arpl
mov
ljmp
aam
jmp
pop
pop
jg
push
ret
insl
stos
aad
xchg
mov
push
es
mov
jne
dec
mov
mov
hlt
pop
je
fldenv
cmpb
je
pop
enter
movsb
xchg
jl
notb
loop
test
add
xchg
addr16
scas
clc
scas
mov
or
dec
aas
sbbb
lret
jl
loope
scas
push
pushf
pop
cld
sub
imul
jle
mov
inc
testb
jnp
push
int3
movsb
les
es
jne
in
inc
sbb
xor
sub
pushf
movsb
xchg
dec
inc
adc
add
mov
adc
push
stos
inc
mov
adc
fcoml
loop
mov
lahf
aam
shr
mov
jnp
cmpsl
aad
dec
shlb
mov
in
xor
jle
and
mov
fstpt
enter
fsubl
or
cmp
push
mov
pop
xor
insl
push
stos
jo
ror
mov
outsb
test
sub
cmp
movsl
out
add
push
call
fs
data16
jg
ljmp
inc
gs
mov
xchg
dec
ficoml
dec
mov
out
shl
outsl
ret
setae
iret
mov
into
rclb
xchg
loopne
and
inc
outsl
stos
dec
xor
popa
leave
jl
mov
call
sbb
add
stos
in
pop
subl
add
sbb
mov
or
sbb
xor
sbb
cld
pop
lret
lock
mov
fs
js
add
inc
adc
icebp
sahf
cmp
outsb
jmp
add
or
mov
xor
push
mov
fistpl
cmp
ds
out
adc
or
pop
stos
add
out
push
xor
push
jl
xchg
cmp
dec
push
xor
bound
mov
fidivrl
push
mov
push
adc
ja
and
ja
pushf
push
shll
jge
xor
push
push
cltd
push
inc
pop
cmp
cmp
jnp
xchg
cli
cltd
andb
pop
lret
notb
ret
sub
jmp
mov
jns
icebp
loopne
test
test
jns
cld
jns
and
dec
xor
fstps
filds
mov
fdivrl
leave
movsl
stc
xchg
enter
fisttpl
jnp
dec
pop
fwait
mov
dec
dec
push
jp
mov
pop
data16
xor
dec
insb
mov
dec
and
dec
lods
popf
fistps
mov
scas
test
mov
ljmp
mov
inc
mov
aas
hlt
test
fstl
data16
fcmovnb
xor
hlt
inc
arpl
lock
mov
jmp
sbb
fbld
pushl
test
outsb
and
inc
add
and
jle
das
sbb
pop
jnp
pop
xchg
repnz
mov
xchg
stc
adc
adc
daa
pop
sahf
or
sbb
or
xor
cmpsb
rclb
rolb
stc
inc
inc
pushf
loope
stos
jge
add
andb
lss
leave
sub
repz
cmp
xchg
mov
jne
mov
dec
mov
push
dec
shlb
mov
mov
inc
in
lret
orl
test
cld
pop
ljmp
pop
lret
push
inc
mov
push
fcompl
daa
xor
add
add
push
pop
and
idivb
int
aas
imul
ss
xchg
add
ss
mov
test
ja
add
imul
cmpsl
movsb
stos
jns
mov
cmpb
jo
xor
aas
adc
xor
fidivrl
mov
fwait
pushf
stos
daa
dec
xlat
push
cs
push
cmpsl
fnstenv
push
popf
jge
rcrb
jle
fucomi
or
inc
mov
pusha
cmpsl
mov
push
cld
or
aad
stos
jns
mov
jo
and
sub
jl
mov
sbb
call
addb
jmp
inc
movsl
jae
mov
cmp
out
push
rcr
movsb
lds
sbb
or
and
pushf
push
imul
cmc
push
stos
mov
pop
xchg
jmp
out
fldt
mov
and
dec
pop
push
call
leave
cmp
mov
push
in
das
cwtl
mov
lods
shll
cltd
or
sbb
ret
lahf
je
fwait
jmp
or
pop
scas
aas
sahf
mov
mov
jecxz
or
aam
loope
sti
pop
test
fcmove
inc
aaa
andb
jo
dec
or
testl
add
pushf
mov
inc
pop
fdivrp
daa
fbstp
sti
mov
xor
add
ja
adc
lahf
insb
ja
adc
add
sub
add
add
mov
lock
jno
cmc
cwtl
fnstsw
cmp
jb
fidivrl
pusha
cmp
insl
lds
rclb
ds
cmp
xor
mov
fmulp
mov
push
pop
insl
mov
xchg
push
dec
and
jbe
frstor
in
cmc
sbb
rcl
cli
shl
pop
gs
adc
push
lods
push
sub
pop
ljmp
jne
movsb
data16
repnz
rcrb
subl
fs
je
ja
movsb
inc
add
cmpsl
xchg
sahf
call
push
cwtl
and
mov
cmpsl
jo
outsl
xchg
add
add
mov
stos
scas
lret
cmp
pop
mov
ret
test
mov
xchg
movsb
xor
cmp
sbb
movsl
push
rcl
orb
inc
cmp
movsl
sub
mov
cli
cmp
stos
aad
dec
mov
or
sub
in
inc
inc
push
into
adc
out
and
mov
popf
imulb
inc
repz
es
in
push
xchg
loopne
pop
lcall
das
cltd
gs
fadd
nopl
xor
leave
xor
ss
mov
xor
push
inc
test
shl
test
push
rcll
es
cwtl
mov
minps
xor
push
dec
movsb
in
sub
repz
mov
lret
add
icebp
pusha
cltd
cs
js
dec
inc
jge
repnz
loope
cmpsb
sbb
cmpsl
push
js
jbe
psrad
jo
mov
std
fwait
mov
fwait
add
ss
and
movsb
inc
pop
mov
and
mov
mov
cmpsl
add
std
call
popf
sbb
mov
leave
lret
sub
add
dec
lods
in
xor
or
call
jmp
popf
mov
or
mov
cmc
arpl
sub
dec
fsubl
or
adc
jmp
push
xor
gs
ret
pop
lock
jecxz
xlat
inc
jnp
pop
inc
cld
jecxz
push
or
mov
jnp
testl
sbb
push
inc
or
push
add
xlat
fnstenv
cmp
pop
jl
test
ss
sub
mov
xchg
dec
jmp
adc
fsub
popf
pop
call
out
or
mov
sbb
inc
jmp
cmpb
sbb
mov
aas
loop
add
rcll
xchg
push
test
test
scas
rorb
test
es
loop
in
mov
or
mov
cmp
out
mov
in
dec
mov
inc
xchg
sbb
dec
push
cld
out
pop
dec
sbb
xor
push
add
or
cli
mov
push
mov
shlb
lods
in
mov
ss
loop
jmp
sub
xor
jbe
es
movsb
out
aas
add
mov
dec
inc
fcompl
push
ret
mov
xchg
jb
push
jnp
sbb
add
pop
jp
push
stc
dec
and
pusha
repnz
and
icebp
push
inc
push
xchg
cwtl
decb
inc
push
dec
pop
jg
inc
add
and
js
mov
and
push
pop
aaa
pop
xchg
iret
cs
movsl
inc
or
in
xchg
std
sub
add
out
xor
lea
sub
or
outsb
aad
test
and
pop
mov
pop
pop
outsl
add
outsl
es
xchg
fdivrs
decb
lods
aad
pop
dec
cmp
xchg
push
sub
mov
out
dec
daa
xor
jns
mov
and
or
sbb
xlat
sbb
fisubrl
je
loopne
mov
into
ret
xor
jb
and
push
jg
and
jne
pop
mov
sbb
push
xchg
movsb
xor
loop
pop
lahf
mov
iret
dec
jbe
push
and
arpl
push
ss
dec
test
pop
cmpsb
push
xor
dec
rorl
je
mov
cs
pop
mov
negb
test
ret
sti
jmp
adcl
insb
ss
mov
sahf
and
xchg
rcl
insb
and
lret
fs
ljmp
sbb
xchg
orl
or
ret
mov
xchg
cmp
add
rep
aam
mov
jb
mov
in
and
in
popf
or
cwtl
mov
pavgb
rolb
lahf
xchg
pushf
je
scas
je
xor
inc
pop
test
sbb
sub
mov
and
data16
data16
pop
pop
test
shll
int3
fstps
pop
scas
and
push
lcall
inc
or
ret
fcoms
hlt
cmp
xchg
cmp
loop
xor
xchg
xor
test
test
lret
or
mov
out
aad
adc
dec
push
mov
cmp
jge
lea
shrb
lds
adcl
js
mov
xchg
in
idivl
lret
xchg
sub
mov
lcall
jecxz
mov
pop
sub
fwait
sbb
inc
mov
out
cmp
or
ja
test
or
pop
es
cmp
inc
cld
jmp
mov
ss
imul
mov
testb
lret
jne
fistl
jg
cld
mov
loopne
mov
ret
stos
ds
fwait
inc
pop
xchg
cltd
add
stos
xchg
sahf
jnp
sti
es
pop
stos
jb
sub
shl
xchg
dec
lcall
jg
test
xlat
dec
iret
lods
xor
fiaddl
xchg
cmp
and
xchg
enter
jbe
test
cmp
and
sub
mov
adc
cwtl
sahf
dec
sub
mov
and
pop
inc
dec
sbb
adc
popa
xchg
bswap
in
mov
sub
es
fistpl
int3
movsb
cmp
in
cmp
cltd
cmp
jno
push
xor
fiaddl
and
and
xor
repz
sbb
dec
ljmp
les
adc
sti
xchg
pop
bound
stos
mov
xchg
mov
enter
and
sub
ja
pushf
movsb
mov
pop
xlat
xchg
mov
mov
rorb
mov
dec
pop
clc
add
test
cmp
cmpsl
ret
out
xor
push
or
movsb
jle
pop
das
int3
int3
cmp
dec
inc
add
leave
adc
pop
push
push
in
adc
mov
xor
pusha
dec
cmp
and
insl
das
test
cmp
sbb
pop
repz
and
pop
or
xor
mov
js
mov
push
jns
or
xchg
mov
andb
jo
icebp
int
xchg
iret
or
push
test
jb
jp
lock
inc
in
cmp
and
or
es
scas
imul
lcall
in
or
cwtl
pusha
lret
jp
or
icebp
sbb
rcrl
insb
mov
lods
mov
test
daa
arpl
add
and
popa
xchg
das
pop
cmp
push
xchg
xchg
pop
mov
push
pop
roll
ljmp
mov
sbb
jae
cmpsl
mov
jle
aad
mov
repnz
cmp
sub
inc
add
mov
insb
push
jno
dec
xchg
xchg
adc
insl
bound
stos
movl
lcall
sbb
add
mov
mov
mov
jo
in
lds
fcmovu
sub
cmp
push
jg
add
or
add
inc
xor
insl
xchg
add
cmc
es
ret
xchg
mov
adc
inc
mov
inc
nop
cmp
scas
fsub
movd
scas
stc
push
loope
fiaddl
pop
add
mov
iret
daa
out
insb
test
jo
jno
jp
inc
ljmp
inc
enter
les
pop
shl
push
jge
or
mov
inc
pop
push
scas
push
jg
nop
das
jge
inc
lret
inc
mov
inc
xor
clc
arpl
and
test
mov
push
xor
rolb
aas
lret
call
push
movsl
ret
iret
or
cli
icebp
sub
jo
int3
lret
adc
or
fwait
dec
and
shlb
cli
daa
add
std
xchg
push
scas
ss
insl
gs
ds
ret
inc
cmp
push
mov
ret
adc
xor
loop
jae
mov
mov
mov
xor
xchg
sub
push
into
add
push
lock
into
movsb
pop
mov
push
insl
xor
jnp
pop
addb
push
lea
fcompl
rclb
ljmp
add
push
jb
cmpsl
rorl
ja
xchg
fnstsw
sub
sub
fstpl
adc
aam
fwait
mov
aad
sub
xor
jnp
fs
sub
or
cld
ret
mov
mov
out
lods
call
mov
dec
std
jnp
repz
pop
data16
ds
in
mov
int3
xor
out
rolb
pop
jae
insl
dec
mov
mov
sbbb
push
sbb
sbb
xlat
pop
dec
shrl
mov
cmp
mov
movsb
push
lret
pop
xchg
loopnew
lret
dec
sub
mov
push
adc
scas
dec
sbb
movsl
out
xor
decl
js
loop
ja
xchg
in
push
xorl
add
cmpb
mov
mov
call
jge
and
jl
lods
add
cwtl
sub
pop
add
outsl
mov
test
leave
arpl
xchg
xchg
add
xor
cld
icebp
fmuls
btc
aaa
stos
mov
add
xlat
adc
and
add
push
mov
and
dec
sub
push
xchg
rorb
adc
xor
out
push
xor
divl
or
popa
out
dec
sbb
lock
mov
jae
mov
adc
movsl
push
arpl
inc
mov
in
in
clc
movsl
xchg
int3
adc
call
dec
push
pop
dec
xor
and
cmp
insl
test
stos
add
mov
adc
cmp
in
sub
xor
sub
mov
push
jge
dec
stc
cs
lock
adc
fld1
fstl
mov
or
inc
cwtl
mov
and
mov
lret
fbstp
mov
cmp
lds
dec
aam
jb
gs
movaps
shll
arpl
pop
in
push
shll
xlat
mov
mov
push
and
xlat
mov
int3
cmc
add
mov
cmp
dec
test
in
xchg
outsb
scas
outsb
cmpsl
cld
pushf
push
jmp
adc
pop
shll
cmpsl
xor
into
or
mov
adc
cmc
in
fsubrs
addr16
stos
dec
sub
add
insl
or
scas
arpl
jg
rorb
jg
xchg
negl
stc
jl
stos
scas
adc
cmp
hlt
cmp
in
pushf
or
pop
dec
adc
dec
iret
in
scas
xor
test
clc
les
cmp
out
jle
faddl
sarb
and
jns
rcll
dec
pop
xor
int3
cltd
stc
sub
cld
daa
nop
mov
mov
xchg
dec
popf
bound
jne
pop
test
inc
fwait
out
xor
jno
imul
into
ret
aad
jno
and
cwtl
outsl
push
cltd
mov
fwait
mov
adc
out
xchg
jle
inc
inc
testl
mov
and
jb
fistps
or
aaa
cmp
or
int
ret
hlt
iret
int3
fisubl
dec
fdivrs
lods
or
ja
mov
in
pop
xchg
pop
pop
je
imul
fwait
mov
pop
sub
xchg
push
adc
cmc
dec
idivl
jbe
mov
cltd
aad
and
mov
in
or
jo
jmp
outsb
dec
data16
lcall
jne
and
cmc
cld
jae
je
cmp
lock
push
or
std
sti
mov
test
outsb
or
adc
mov
mov
mov
stc
mov
inc
add
adc
dec
xchg
adc
sub
outsb
add
push
sbb
out
mov
mov
and
pop
pop
add
push
sbb
mov
fucomip
pop
lock
flds
mov
sti
shll
and
leave
mov
loop
push
dec
loope
pop
cli
and
xor
shlb
jbe
loope
repnz
cmc
pop
inc
dec
mov
in
pop
xchg
xlat
out
xlat
vphadduwq
jo
test
pop
lods
jl
mov
push
setp
out
cld
sti
into
push
jo
cmp
xchg
bound
xor
mov
jg
fsts
leave
push
fstl
inc
shl
rol
cwtl
mov
or
mov
pop
xor
sbb
cmp
jno
adc
fld
mov
ret
or
pop
cmpb
sub
adc
lahf
shrl
ret
mov
sub
fs
mov
icebp
pop
gs
pop
jecxz
jne
std
inc
bound
sub
aam
ja
xchg
push
jb
push
pop
and
addb
xchg
or
and
shlb
cltd
or
imul
adc
adc
push
cmpsb
sub
movsl
mov
pushf
ja
adc
or
dec
or
lret
pop
and
lret
test
mov
nop
pop
adc
pusha
scas
dec
out
mov
aas
loopne
jge
and
insb
int
sbb
test
fldl
sbb
sahf
in
mov
ds
and
leave
adc
cs
repnz
insl
int3
xchg
push
xchg
outsl
push
dec
je
bound
mov
or
mov
clc
or
ret
push
test
or
jge
adcl
out
ret
int3
push
fldt
pop
cmp
lea
adc
or
jne
mov
add
mov
xchg
std
jb
shlb
dec
fisttpll
jbe
xchg
gs
rorl
movsl
mov
push
pop
adc
mov
cmc
pusha
lret
pop
inc
mov
or
int
js
pop
gs
cmp
xchg
mov
aam
out
adc
ja
bound
lods
push
ret
icebp
out
lcall
sbb
xchg
xor
loopne
lods
xor
mov
leave
adc
pop
or
aas
cltd
adc
in
sar
xchg
ljmp
mov
dec
inc
cli
sbb
xchg
stos
cltd
in
cltd
scas
mov
arpl
insb
stc
icebp
and
xor
mov
xor
leave
fldt
scas
dec
xchg
dec
addr16
rcll
add
sub
gs
mov
push
outsb
mov
cmp
jmp
ljmp
sub
adc
mov
push
xchg
fmuls
xlat
sub
hlt
mov
lods
in
or
cmp
movsl
les
adc
xchg
adc
pop
inc
loop
cmpps
push
adc
stc
stc
es
xor
inc
dec
and
inc
jo
or
ljmp
jbe
dec
mov
jle
flds
cmc
js
adc
xlat
notl
jo
push
cmp
push
jne
xchg
clc
mov
xor
lock
jp
sbb
jge
xor
enter
xchg
add
insb
cmp
add
jne
test
insl
icebp
adc
cmp
pop
out
mov
inc
xchg
add
shlb
cmp
sbb
add
imul
and
inc
cld
nop
pop
pop
mov
mov
scas
mov
add
fisubl
andl
test
sub
sbb
or
fimuls
jle
xchg
or
scas
push
mov
push
push
lret
jecxz
mov
inc
test
sub
sub
xchg
inc
jbe
add
push
in
mov
sub
test
push
mov
cmp
or
add
push
jecxz
mov
sti
fisubs
adc
pop
pop
clc
pop
xlat
insb
mov
ja
adc
inc
mov
pushl
and
push
pushf
pop
sahf
test
pop
dec
loop
inc
jno
xor
test
adcb
xchg
sub
cmp
ret
clc
or
inc
mov
inc
mov
or
iret
push
popf
rep
push
je
and
repnz
xor
or
mov
xlat
rol
jno
mov
pop
jp
cltd
and
test
mov
adc
dec
add
ljmp
fstl
adc
push
sahf
push
int
mov
iret
lcall
ja
es
add
jge
sbb
fs
imul
dec
xor
and
dec
adc
movsl
pushf
js
sti
adc
dec
aaa
xchg
jecxz
jge
lea
pop
and
cwtl
cli
xchg
push
ja
jne
test
aad
ret
mov
jns
xor
pop
mov
aam
or
xor
add
rol
inc
and
cmc
mov
add
ret
andl
xchg
xor
imul
paddw
loope
sbb
sbb
xchg
flds
add
lahf
cli
ret
xchg
jo
daa
movl
jns
dec
adc
pop
push
cmpsl
sbb
arpl
mov
mov
pop
out
add
sub
testb
jp
add
mov
mov
xchg
test
dec
popa
push
lods
jle
mov
arpl
sbb
fstp
shl
jnp
inc
mov
jno
scas
push
pop
cmpsl
sbb
and
add
out
shrb
jmp
jle
cmp
lods
jecxz
and
in
and
dec
dec
mov
cmp
lock
xchg
push
mov
test
jnp
inc
stc
scas
stc
cmp
insl
cmpl
lods
fldl
push
test
test
rorl
outsb
das
loop
fstl
loope
int
sbb
daa
xchg
stos
cld
jbe
push
jl
cmpsb
dec
stos
and
inc
in
rolb
aad
jg
pusha
jmp
stc
cmpsl
mov
sti
pop
pop
movsb
push
jnp
or
addr16
mov
rolb
sub
cmp
cmp
loope
jg,pn
dec
lods
adc
mov
out
ret
addr16
cmp
push
push
push
mov
cmp
xlat
push
dec
hlt
shrl
pushl
lea
push
dec
das
and
adc
in
lcall
inc
not
das
cmc
xor
lret
in
dec
sbb
mov
sbb
push
pop
pop
adc
xlat
push
jp
pop
or
inc
rcrb
mov
pop
repnz
dec
fs
jns
sarl
nop
adc
outsb
mov
sub
mov
push
in
fdivs
mov
push
mov
lods
push
mov
sub
cmp
push
loopne
scas
scas
not
sarl
sbb
dec
bts
adc
shlb
sub
sub
mov
popa
cmp
out
xchg
inc
mov
in
jecxz
movsb
mov
cmp
mov
js
push
data16
lea
xor
and
jne
add
mov
push
push
hlt
dec
testb
adc
lods
ret
mov
cmp
jo
jbe
mov
scas
pop
sub
sbb
pop
clc
or
dec
sahf
in
jp
mov
pushf
jbe
push
mov
and
lods
insb
test
pop
out
mov
or
and
cmp
clc
mov
ret
idivl
adc
dec
std
dec
in
loopne
adc
pop
push
push
xchg
sahf
jbe
push
shrb
push
push
xor
jo
push
ficoml
mov
cmp
mov
adc
mov
pop
lret
inc
or
dec
and
aas
scas
jb
or
jmp
movsl
xchg
fiaddl
mov
push
aaa
mov
clc
popa
out
test
outsb
pop
sti
jg
es
cmp
mov
mov
dec
jg
js
hlt
hlt
add
add
in
jmp
mov
loop
add
add
stc
dec
sub
cmp
pop
jl
jmp
jno
loope
push
outsb
ret
cmpsb
xor
and
sbb
xor
nop
add
cmp
clc
mov
mov
test
jp
arpl
shr
enter
imul
jbe
jecxz
popa
push
daa
sbb
jne
sub
sub
cmp
ret
mov
mov
jl
add
dec
jb
dec
loopne
movsb
jle
adc
aad
xchg
popa
scas
dec
fcomp
sub
or
mov
pusha
xor
scas
inc
xor
jns
xchg
push
outsb
imul
outsl
cmp
aad
int3
jecxz
pop
ljmp
fsubl
shlb
jb
mov
lcall
sahf
mov
cmp
bound
push
mov
and
push
push
test
fdiv
imul
fdivrl
test
xorb
sbb
fiaddl
dec
fidivs
and
cs
sub
call
lahf
in
insl
inc
push
mov
xchg
cmp
mov
inc
jno
pusha
sub
test
fdivs
push
inc
scas
xchg
lods
push
mov
aaa
adc
xorl
and
call
jl
cmp
lds
loopne
mov
mov
add
add
pop
mov
outsb
popa
jge
or
fiadds
xchg
les
cmp
pop
adc
pusha
inc
sub
mov
or
std
std
imul
or
adc
mov
xchg
add
fisttps
outsb
cmpsl
lods
sbb
xor
idivl
gs
cmp
sub
loope
cvtdq2ps
int
push
test
adc
loop
jg
mov
cmp
out
rcrl
pop
dec
fdivr
add
sahf
clc
int3
or
scas
cld
or
movsl
mov
cmpsl
and
sbb
ret
ret
push
shrb
stos
js
pop
sbb
mov
pop
add
xchg
add
mov
insl
out
clc
push
jmp
jbe
cmp
cwtl
js
cmp
fbld
imul
mov
mov
xor
and
lods
pop
in
pop
xor
cmc
sub
insl
xchg
sub
mov
pop
fildll
mov
or
cmpsb
daa
and
daa
das
popf
shrl
incb
fwait
inc
shll
xchg
icebp
int3
inc
inc
ljmp
pop
adc
pop
bound
cmp
xchg
xor
mov
sar
call
mov
cmp
loop
or
cmc
and
shl
outsl
mov
push
faddl
push
aam
cld
pusha
dec
xlat
inc
aaa
test
sub
pusha
mov
xlat
mov
pop
and
dec
sbb
push
les
pop
mov
mov
pop
or
hlt
xchg
scas
push
pop
add
lret
add
subl
xor
pop
sbb
subb
mov
in
jbe
les
jl
into
mov
jecxz
insl
or
xchg
rcll
push
pop
cmp
loopne
fsub
ljmp
inc
cmp
inc
adc
popf
ret
add
outsl
pop
adc
inc
add
cmpsl
loop
adc
stc
xchg
inc
les
imul
leave
fmuls
pop
les
mov
inc
add
mov
jge
adc
les
inc
cltd
xor
mov
cmpsb
xchg
sub
xchg
fsubrp
mov
add
xor
jno
xor
inc
enter
push
movsl
lds
in
mov
mov
jbe
stc
jmp
mov
fwait
popf
mov
loope
ret
fiaddl
jnp
or
repz
in
adc
je
adc
sbb
sarl
loope
addr16
push
adc
nop
int
pop
push
jecxz
sub
and
movsb
imul
dec
xor
aaa
sti
fildl
inc
test
mov
arpl
mov
add
xchg
incl
fidivrs
repz
adc
mov
ret
mov
xor
mov
popa
mov
jecxz
xor
inc
add
loope
pop
sub
not
adc
outsl
sahf
cli
cltd
fnstsw
jne
cmp
fwait
sub
iret
test
repnz
insl
movsl
iret
sub
adc
inc
dec
xchg
jge
sti
leave
lea
mov
lret
movsb
int
mov
xlat
loop
add
test
or
int3
pop
xchg
inc
jecxz
cmp
lret
fmul
push
dec
dec
or
mov
nop
aam
pop
pop
xchg
std
in
or
daa
inc
outsb
bound
repz
pop
mov
push
mov
lahf
in
andb
sub
repz
enter
cmpsb
push
or
loop
call
mov
jmp
mov
in
mov
lcall
cmpsl
shlb
dec
popf
inc
rcrb
add
fdiv
scas
shl
fdivl
les
cmpsl
cmp
sbb
cwtl
aam
adc
ret
bound
mov
das
repz
push
scas
push
or
dec
fcmovnb
repz
jns
cld
pop
sub
inc
jo
mov
out
xchg
cmc
and
mov
xchg
mov
xchg
mov
and
pop
xor
rolb
sbb
imul
pop
js
mov
pushf
cmp
xor
movl
sbb
testb
cli
out
test
xchg
jmp
mov
mov
ds
cmp
js
mov
aad
aad
mov
cmp
sub
ret
add
int3
push
les
xlat
adc
rclb
aam
jbe
and
lahf
mov
cli
ljmp
inc
cld
fsubs
sub
nop
cwtl
push
and
xor
int3
nop
mov
leave
mov
out
leave
push
leave
pop
xchg
sub
in
jne
pop
dec
sahf
fnstcw
xchg
jmp
repz
scas
mov
mov
sub
cmp
rorb
inc
adc
fstl
mov
mov
sub
dec
outsb
out
jmp
out
lock
jle
pusha
cltd
xor
mov
jns
mov
add
cwtl
push
cmp
shrl
push
add
mov
mov
enter
xchg
daa
jmp
mov
sub
mov
mov
mov
orb
mov
cmp
mov
dec
fdivrl
push
jno
inc
push
repnz
je
sub
fs
mov
insb
push
pop
jg
and
lcall
xchg
cwtl
push
call
pop
loopne
mov
xchg
loop
mov
lea
xorl
test
inc
movsb
sahf
inc
fcmovb
mov
cmpsb
in
aaa
lods
or
int
popf
pop
inc
mov
jae,pn
shr
and
test
adc
mov
sbb
pop
imull
xchg
cmp
xchg
push
pop
mov
cltd
push
lds
es
aam
mov
lret
sbb
xchg
stc
fmuls
sub
jo
jl
movl
xor
adc
out
and
adc
mov
je
inc
incl
insb
repnz
pop
daa
in
dec
js
pop
nop
mov
cmpsb
xchg
je
xor
jnp
mov
sub
loopne
add
js
mov
test
cmp
fbstp
inc
fdivr
leave
clc
or
sbb
or
push
push
mov
stc
rorl
movsb
gs
and
sub
mov
shll
xor
pop
jle
xor
rcll
decb
imul
push
xor
mull
insl
push
cs
mov
push
mov
mov
inc
jb
and
lahf
jne
testl
add
imul
mov
xor
pop
xorl
inc
xor
cmc
xchg
fimull
leave
nop
inc
jnp
mov
mov
jle
ret
jp
mov
sub
inc
mov
aaa
dec
mov
pop
ret
fcoml
jmp
es
or
xor
sbb
xor
jo
nop
adc
cmp
movsl
cmc
lods
loope
add
mov
push
ljmp
cmp
scas
push
enter
cmp
mov
stc
popa
fimuls
push
testb
xchg
aad
cmp
sub
mov
jge
imul
push
fidivs
addr16
inc
jle
sub
inc
sub
rol
xor
mov
mov
inc
loop
pop
clc
mov
ss
sub
sbb
mov
mov
test
stc
cmp
fistps
movsb
icebp
icebp
mov
sub
cmc
daa
push
lcall
je
sbbb
outsb
inc
ret
push
xchg
ds
push
jb
push
je
call
idiv
and
enter
xchg
ret
or
imul
outsb
inc
aam
cmp
fs
pop
mov
int
lar
inc
dec
int3
scas
clc
addb
pop
inc
push
cmp
sub
inc
and
xor
add
stc
daa
or
add
sub
into
mov
dec
sbb
cmp
int
mov
cld
sub
scas
aaa
and
leave
mov
shlb
pushaw
push
enter
jp
mov
pop
push
ret
and
subl
out
inc
cmp
lret
scas
mov
insl
mov
repnz
stc
sub
es
xchg
pop
test
lahf
jbe
out
insl
cmpsl
xchg
push
mov
mov
popf
mov
std
sub
jne
xchg
mov
loop
add
vucomiss
push
es
dec
mov
jg
or
jle
int3
das
outsl
sbb
addr16
jns
rolb
out
sub
addl
fsubs
jge
fldenv
pop
popa
out
popa
loope
mov
test
sbb
and
test
cmp
jge
and
adc
push
movsl
pop
daa
jecxz
les
daa
jl
fmuls
xor
test
stos
xchg
call
pop
sub
fwait
sbb
fdivs
jno
cmc
push
pop
enter
adc
pop
mov
and
mov
push
daa
pop
xor
mov
push
std
xchg
jl
stos
pop
or
push
fldl
inc
ss
mov
xor
ds
inc
movb
ljmp
lcall
addb
push
in
and
inc
popf
push
cwtl
xor
jecxz
adc
xchg
mov
cmpsb
call
and
mov
faddl
lcall
sti
fisubl
ljmp
vmwrite
lods
add
shlb
cwtl
movsb
xor
lret
xchg
jbe
je
add
rol
lods
jmp
xor
cmc
xchg
cltd
mov
dec
fucomp
lret
in
repz
push
cmpsb
ret
jl
push
aad
pop
sbb
dec
stc
mov
push
fistpll
jns
pop
or
lahf
mov
dec
mov
sahf
rcrb
cmpsb
pop
mov
cwtl
xor
sbbl
test
pop
std
and
out
xchg
std
in
lock
pop
fimull
jbe
insb
sbb
pushf
xlat
xchg
lret
pop
mov
sti
mov
int3
mov
outsl
icebp
fsubl
push
add
or
or
jae
sbb
les
repnz
mov
adc
enter
sub
out
and
add
leave
cltd
rep
sub
pop
inc
add
adc
or
push
sbb
pop
or
inc
mov
mov
or
leave
les
flds
cli
fisubrs
test
adcb
mov
dec
push
push
mov
cmp
jp
add
xor
jge
jnp
cmp
mov
adc
fmuls
stc
inc
xor
lahf
sub
dec
sbb
test
pop
data16
sbb
push
shl
popf
dec
mov
repz
xor
xchg
pop
hlt
cmp
fldl
push
sbb
cmc
xchg
ficomps
mov
cwtl
xchg
push
hlt
dec
mov
inc
pop
in
js
or
pop
iret
scas
sahf
mov
sub
push
ret
mov
mov
dec
imul
testb
loop
inc
add
mov
js
adc
clc
lods
inc
push
fidivrs
es
mov
out
adcl
inc
loope
stos
xor
dec
fcomip
shr
das
pop
int
scas
rclb
cmp
incb
push
xor
repnz
mov
push
mov
pushf
mov
jp
sub
shl
test
cmpb
xchg
jg
lods
cltd
arpl
test
scas
mov
std
pop
jl
xorb
daa
pushf
jb
jno
xor
or
dec
dec
aad
jg
out
fsts
and
cli
xchg
or
fstpl
call
xchg
push
push
mov
dec
and
inc
or
push
mov
shrb
adc
pop
test
and
cmp
add
lods
jg
xor
out
aam
in
addb
rorl
insl
jbe
ja
test
ja
aaa
xchg
push
or
fsubrs
xor
ja
iret
jp
jp
adc
pop
sbb
mov
inc
int3
add
test
js
xor
add
pop
fistl
ret
jecxz
inc
mov
sub
push
jne
bound
push
mov
arpl
push
jmp
subl
jge
sbb
pop
arpl
jge
cld
push
cmp
cmp
ljmp
jmp
fs
adc
mov
lcall
xor
add
jmp
dec
mov
test
in
and
movsl
sub
into
sub
push
lock
test
inc
xor
push
pop
xchg
enter
or
sub
mov
lods
pop
inc
idivb
mov
jg
fldt
jg
imul
inc
test
aaa
test
mov
pop
mov
push
add
std
jae
adc
jnp
sti
xchg
push
jg
aam
jmp
cmp
mov
scas
popa
mov
pushf
addr16
mov
inc
movsb
adc
pop
jge
pop
dec
ja
jns
mov
test
test
jns
ds
test
stos
xchg
sbb
filds
add
xchg
and
sti
mul
test
int
sbb
jmp
xor
pop
mov
mov
xor
pop
lret
mov
mov
cli
aas
addr16
jle
push
bnd
dec
push
lea
jmp
test
test
cs
fcmovne
movsb
jno
fimuls
push
hlt
outsb
hlt
or
rolb
add
mov
push
and
lock
ficompl
movsl
test
ss
push
push
sub
shll
mov
test
aam
xchg
push
xor
inc
rorb
ja
push
dec
cmp
dec
sbb
dec
sahf
or
stos
std
dec
push
jp
sub
dec
pop
enter
sbb
pop
lea
fdivrp
jmp
mov
lods
imul
lcall
sub
ror
imul
adc
loope
cmovb
test
inc
cwtl
fwait
xchg
std
mov
inc
sahf
imul
mov
add
ret
call
push
loope
add
int3
mov
arpl
fdivrs
cmpl
mov
mov
push
add
