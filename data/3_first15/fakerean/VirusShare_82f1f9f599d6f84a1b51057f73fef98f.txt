sbb
add
mov
xchg
decl
outsb
mov
jecxz
sahf
loop
mov
rorl
insb
mov
cmp
les
sub
xchg
lcall
push
leave
xchg
sti
dec
inc
pusha
inc
jno
mov
pop
sub
xchg
ljmp
xchg
cwtl
mov
lret
push
push
push
pop
sti
xchg
testl
fwait
mov
mov
xchg
das
mov
sub
mov
cmpsl
pop
test
xchg
pop
mov
out
sbb
sub
mov
dec
and
add
idivb
mov
loopne
jmp
jnp
pop
rcrb
sub
fistpl
int
lea
push
rcrb
into
and
inc
or
jecxz
gs
fidivrs
add
adc
cmp
mov
sub
jo
add
out
and
pop
pop
jg
call
bound
dec
ss
xchg
pop
sub
daa
iret
arpl
sub
in
fdiv
or
jne
js
ss
lret
lds
pop
ljmp
mov
test
mov
arpl
and
inc
mov
mov
test
xchg
xor
les
lods
scas
mov
gs
pop
cmp
sbb
adc
mov
push
ja,pt
pop
push
cmp
ficomps
lret
cs
xchg
ss
int
inc
enter
pop
mov
and
or
fucomip
cmp
lcall
cmp
adc
arpl
sub
cmp
stc
xor
aad
inc
daa
or
adc
sub
bound
adc
cli
or
lods
or
xor
mov
mov
cmp
sbb
addb
adc
mov
pop
add
adc
iret
ja
es
mov
adc
sub
mov
cmpsb
xor
cmpsl
xchg
xlat
lods
fs
arpl
xchg
icebp
out
dec
sub
cmpsl
jmp
inc
sbbl
out
nop
popf
dec
push
mov
xor
lret
shll
mov
mov
sub
sub
int3
icebp
push
enter
lods
fisubrs
push
dec
test
pop
jg
sahf
push
je
clc
sbbb
mov
rol
mov
mov
jge
add
push
pop
pushf
sub
pop
addr16
adc
mov
inc
in
fadd
stos
sbb
aas
mov
jmp
cld
mov
cmpsl
faddl
xor
fsubrl
push
bound
leave
sub
inc
or
stos
sub
jmp
in
cmc
in
push
in
push
rdmsr
sarb
xchg
mov
test
mov
ret
xor
shld
push
es
imul
fidivs
fnstsw
lods
orb
mov
sahf
enter
dec
add
ret
test
pop
mov
adc
jbe
xchg
lcall
fisubs
fistps
jae
xchg
mov
adc
push
sahf
cmp
dec
mov
nop
lret
lods
aaa
fwait
repnz
movd
in
xor
or
inc
mov
dec
int3
outsb
push
in
fisttpll
push
jmp
cmp
shrd
adc
ja
xlat
push
cmp
push
pop
xchg
jmp
pop
inc
or
jecxz
cmp
and
jg
int3
push
mov
shl
ficompl
icebp
cmp
dec
outsb
mov
rcll
imul
mov
mov
push
loopne
push
std
and
cli
in
inc
adc
lcall
mov
es
and
sti
xor
out
pop
mov
rcr
cmp
loopne
dec
adc
adc
push
push
cld
mov
xchg
addb
cltd
shll
xor
pop
jmp
stc
ss
sahf
adc
fwait
scas
ja
jbe
cmc
rcll
clc
sbb
pop
jbe
or
je
sbb
cmc
pop
pop
add
ljmp
std
xor
mov
ficoml
xor
js
stc
pop
mov
es
jnp
pop
dec
pop
inc
mov
sbb
jbe
mov
xor
pop
mov
mov
push
xor
lods
cmp
daa
mov
fs
das
andl
out
jecxz
ret
cwtl
lea
test
jb
sbb
addr16
rcll
scas
loopne
and
out
push
fs
or
mov
cltd
dec
movsb
xor
sub
sub
and
cmpb
or
shl
lods
dec
rclb
call
or
mov
cmp
add
iret
push
mov
xchg
ss
mov
sub
mov
cmp
lcall
cmp
arpl
cmc
jno
ljmp
pop
jb
mov
mov
push
in
aad
push
pushf
cwtl
inc
arpl
push
scas
pop
movsb
aaa
mov
xchg
adc
push
ret
mov
xchg
pop
fdivr
popf
fucomp
divb
test
jmp
sub
ret
xchg
repnz
imul
push
loop
icebp
out
pop
mov
stos
imul
fwait
xchg
xor
mov
jno
xchg
and
push
mov
mov
push
push
loop
pop
xor
in
and
or
fidivrs
dec
ret
mov
xchg
iret
lock
loop
aas
clc
jne
pop
mov
sbb
pop
popa
iret
dec
xchg
mov
hlt
movsb
lods
roll
js
pop
adc
push
cmp
imul
in
movl
adc
pop
stc
sbb
stc
test
aam
and
mov
jno
clc
icebp
or
mov
cmp
enter
adc
cltd
inc
repnz
xor
imul
push
out
outsl
jo
xchg
nop
pop
add
push
add
mov
fld
jg
push
adc
cmp
xor
into
aam
jbe
add
jbe
xor
sub
jno
ret
fs
test
jle
cwtl
xchg
data16
notb
sub
cmp
les
sbb
fs
stos
loop
es
pop
xchg
mov
or
dec
insl
xchg
mov
xor
jle
lcall
mov
and
aad
inc
cmpsl
in
jae
js
cmc
cmpsb
cmp
pop
es
xadd
lea
ret
or
pop
mov
popf
ficoml
imul
jge
cmp
sub
loope
xchg
mov
inc
cmpsb
andl
adc
popa
sub
loope
adc
or
icebp
mov
ja
mov
js
push
inc
pop
cs
inc
mov
inc
pop
negl
mov
and
nop
dec
mov
leave
dec
mov
in
hlt
xor
popa
js
pop
fs
mov
push
mov
adc
pop
lahf
mov
mov
pushf
js
nop
push
in
add
mov
movsb
cmpsb
push
loopne
xchg
scas
cmpsb
bnd
roll
mov
scas
popf
fucomp
inc
lret
fmul
adc
jmp
adcb
pop
jmp
mov
addr16
sub
sbb
jne
jp
xchg
sub
imul
lods
imul
and
add
pop
pop
cmpsb
stos
test
cmp
push
loopne
bound
cmc
loop
or
les
mov
aas
xchg
fcmove
ret
inc
jg
fdivr
js
sbb
and
sbb
mov
hlt
pop
js
mov
insb
iret
aas
pop
pop
xor
das
sbb
outsl
mov
pop
ret
mov
sbb
jbe
adc
mov
repz
pop
arpl
bnd
add
mov
mov
mov
notb
out
mov
jns
xchg
sbb
mov
jecxz
iret
popf
lods
or
ss
aad
fiadds
shlb
inc
lea
js
pop
and
mov
xor
or
fcoms
or
cmpsl
shlb
cmp
adc
add
das
lret
sub
loope
or
in
xor
rolb
les
insl
enter
orb
repnz
mov
sub
daa
outsb
loope
jge
cwtl
dec
cmpsb
sub
mov
jg
mov
jo
xor
addb
imul
lahf
xchg
cmp
cmc
lods
call
movsb
pop
mov
btr
incl
rolb
mov
inc
cmc
pop
inc
mov
roll
loope
aam
in
adc
xor
in
sub
sbb
or
pop
or
mov
push
push
repnz
cli
popf
data16
sbb
test
movsl
iret
mov
stos
jne
je
pop
mov
mov
and
mov
mov
inc
inc
pop
mov
lea
sbb
repz
arpl
jo
je
imul
push
out
cmc
daa
icebp
test
sbbl
cmc
dec
lock
fsubs
imul
int
lods
fwait
ret
bound
ss
dec
test
or
mov
lea
jnp
push
pop
mov
xchg
leave
jp
sahf
in
adc
cmpsb
mov
sbb
jno
imul
in
pop
sbb
test
mov
xchg
dec
sarb
out
int
repnz
dec
les
subl
jb
jo
sub
push
mov
push
add
je
pop
adc
jo
or
pop
pop
pushf
pop
cmp
jle
mov
mov
xor
into
sbb
mov
js
xchg
sub
pop
loop
xchg
push
sub
stos
inc
imul
nop
xchg
push
mov
mov
jecxz
shl
jge
sbb
jl
jns
xor
xorl
bound
adc
pushf
int3
push
inc
pop
jne
xchg
pop
mov
mov
test
loope
out
cmc
sti
cmp
mov
frstor
cs
pushf
sub
add
xchg
lock
gs
sub
imul
or
in
nop
int
adc
jg
xchg
imul
jmp
pop
loope
loopne
mov
and
das
cmp
aam
popf
dec
mov
daa
imul
sub
xchg
lret
bound
mov
shlb
ljmp
sahf
mov
icebp
nop
call
fimuls
std
bound
dec
test
bound
faddl
cwtl
jae
jnp
add
jg
add
mov
test
jb
xorl
mov
jo,pt
mov
shll
insl
xchg
mov
cmovo
repz
pop
int
mov
not
dec
scas
scas
mov
xor
fidivrs
std
shl
in
xchg
subl
roll
add
xor
pop
xlat
xor
xor
sub
mov
cltd
daa
sbbl
and
jo
stc
pop
mov
pop
jns
stos
test
jp
std
out
dec
pop
sbb
roll
pop
dec
lret
cwtl
dec
ja
stos
adc
cmc
fwait
aas
loop
push
in
add
and
jmp
mov
fnstenv
inc
jg
fimuls
xor
push
push
nop
dec
mov
cli
in
pop
mov
xor
lea
subl
icebp
pop
cmp
bound
dec
fwait
inc
loop
sahf
or
mov
sbb
xor
push
nop
pop
es
lock
mov
xchg
push
mov
adc
xchg
dec
cld
sub
xchg
and
iret
fwait
add
loop
or
lock
scas
bound
aad
int
xor
arpl
xchg
push
and
int
dec
or
pusha
aas
or
and
sbb
movsb
sub
mov
subl
jp
nop
inc
xor
and
in
mov
int
repz
bnd
fs
pop
sbb
lock
rcrl
mov
nop
ret
push
repnz
lea
stos
shrb
sub
shrl
mov
add
mov
imull
push
mov
call
insb
jns
fists
pop
repnz
inc
arpl
andb
sub
inc
insl
in
sub
shlb
out
jnp
dec
scas
testl
xchg
adc
pop
jno
xor
adc
adcl
and
shl
mov
jle
pushf
xor
out
xchg
daa
mov
xor
ljmp
xor
xchg
jl
jno
dec
lods
jmp
jmp
fcmovb
and
pop
out
gs
sbb
pop
xchg
fwait
sub
and
inc
xor
cmp
out
lret
nop
fisttpll
xor
or
loopne
push
sbb
fwait
shr
pop
sbb
inc
stos
outsb
push
jecxz
jle
sub
cmp
xor
fwait
cli
out
cmp
jg
inc
ret
mov
mov
xorb
insb
or
lea
xchg
push
xor
inc
rcr
les
mov
adc
add
jmp
lret
add
cmp
scas
jmp
repz
std
js
cld
mov
mov
int
pop
test
clc
sub
jecxz
hlt
jl
rcrb
std
loopne
cmp
test
add
pop
scas
fnstcw
sbb
mov
out
mov
fs
dec
add
cs
mov
aaa
les
xor
adc
add
mov
pushf
popa
and
and
aaa
testl
xorl
call
mov
outsl
iret
cmpsb
xor
stos
or
js
pop
mov
jl
sub
addl
mov
xchg
xor
ret
mov
dec
add
pop
outsb
sar
fwait
and
adc
loop
in
and
stc
cwtl
sub
test
mov
fcomps
out
add
push
ds
push
int3
adc
push
mov
ret
test
lahf
sbb
popl
jge
xchg
or
pop
decl
test
dec
pushf
or
or
dec
cmp
loopne
loope
push
cmp
jmp
aaa
cmp
mov
jae
add
ljmp
jns
add
popf
orb
and
adc
cmp
jp
jns
xor
sub
ljmp
add
movsl
sbb
cmp
cmp
out
in
add
ss
mov
jns
dec
mov
cmpsb
jecxz
add
inc
loopne
movsb
mov
sbb
or
lahf
aad
dec
std
inc
addb
jnp
xchg
ror
ret
push
push
adc
mov
insl
mov
in
inc
adc
add
lea
pop
in
cmp
fldl
inc
negb
fidivrl
aad
jb
and
sahf
rclb
or
mov
or
xchg
mov
jl
jge
mov
push
mov
popa
ret
test
jl
mov
je
pop
inc
jp
sahf
dec
nop
pushf
leave
mov
in
movsb
mov
mov
js
adc
cld
out
or
jnp
fcmovu
jge
call
and
insl
jnp
lret
lods
xchg
xchg
in
pop
mov
or
dec
in
loopne
scas
jbe
lret
inc
adc
jb
mov
sub
dec
loope
mov
mov
push
mov
js
ucomiss
mov
lods
daa
cld
xchg
mov
push
sarl
jns
cmp
stc
int
push
push
adc
leave
sbbl
and
scas
mov
jb
ljmp
pusha
and
and
loop
adc
dec
test
pop
mov
test
movb
xchg
cmpsl
xor
out
mov
data16
fldcw
pop
js
loop
cltd
push
lret
sbb
pop
cmp
mov
and
mov
mov
test
cld
xchg
addr16
lcall
cltd
or
push
push
rclb
xlat
xor
pop
adc
loop
xorl
dec
mov
scas
dec
add
addb
loop
jb
dec
pop
inc
leave
sbb
jno
xchg
adcl
adc
mov
out
aam
and
cld
xchg
aad
or
aam
cli
incb
cmp
faddl
pop
inc
sub
push
test
dec
jnp
sti
mov
cmp
jnp
adc
mov
sub
addr16
psrlq
jl
xchg
clc
ja
jecxz
hlt
sbb
idivl
sub
rorb
cld
cld
xor
push
jle
adc
dec
lea
and
xchg
pop
mov
int3
dec
inc
or
or
repz
test
nop
scas
out
loope
in
jae
aad
sub
aaa
sbb
sbbb
pop
mov
fidivrl
loopne
mov
add
mov
xlat
push
ljmp
loope
jecxz
push
jmp
scas
std
jnp
push
push
push
xor
ss
sbb
fstpt
pusha
adc
lods
push
adc
cld
or
adcl
pushf
adc
sbb
hlt
mov
cmp
in
and
push
stos
add
iret
jae
sub
dec
pop
inc
dec
and
fists
sbb
add
mov
xchg
xchg
dec
enter
enter
jecxz
dec
push
jle,pt
cmp
cld
and
mov
jne
jp
xchg
gs
cmp
cmp
add
ljmp
push
pop
daa
out
push
int
out
adc
loopne
ja
fnstenv
and
lcall
sub
push
rol
jae
test
test
or
push
or
lods
mov
lea
jp
xchg
clc
push
xor
sti
sbb
shlb
mov
push
add
ret
out
dec
iret
je
mov
cwtl
add
xchg
lahf
jl
hlt
push
js
mov
push
push
mov
flds
xchg
fiaddl
ds
and
dec
out
dec
sahf
add
cli
daa
mov
shlb
xchg
in
xchg
mov
sub
arpl
cmc
je
cmp
jae
insl
addr16
mov
fdecstp
and
divb
popl
fldt
test
mov
icebp
xor
out
stc
mov
xor
inc
jmp
fs
pop
add
insb
jle
loopne
fcmovb
negl
jmp
mov
in
fnsave
inc
push
or
adc
jno
mov
cmc
cmp
jmp
sub
push
leave
add
out
icebp
pop
add
lret
push
out
jg
jbe
jge
sub
cmp
xorl
inc
mov
lds
jmp
rorl
fwait
push
sbb
std
leave
arpl
xor
and
or
stos
imul
insl
pop
popf
sub
inc
mov
push
push
insb
pushf
xor
jmp
aad
inc
pusha
mov
test
add
mov
sbb
ja
imul
mov
ret
xabort
mov
dec
decb
xchg
stc
jmp
push
fs
inc
mov
aad
and
cmpsb
aad
popf
popa
repnz
imul
test
xor
inc
pop
dec
in
daa
add
mov
cld
and
sub
in
arpl
stos
jno
cwtl
jecxz
mov
adc
and
mov
incb
add
jmp
and
jne
sbb
adc
xchg
or
insl
sbb
cmpb
jbe
lahf
divb
mov
mov
test
xor
mov
lret
pop
cmp
mov
fs
fs
insl
push
pop
roll
and
mov
lcall
xchg
daa
sbb
jl
neg
xchg
cwtl
pop
xor
fucom
xor
iret
jp
insl
add
test
lea
pop
in
popf
or
add
ret
jns
push
cld
mov
jg
mov
dec
sti
into
mov
ret
std
cmp
pop
in
xchg
pop
adc
in
adc
lret
mov
scas
loope
or
sub
jmp
testb
lret
mov
clc
imul
xor
jbe
fdivr
lock
mov
dec
xchg
shrl
shll
add
loope
xchg
fisttps
das
mov
adc
cwtl
stos
call
xchg
sbb
pop
sbb
push
jbe
lret
pop
in
test
out
jb
in
lcall
out
ds
int
inc
mov
push
fdecstp
lret
jnp
add
lcall
push
inc
mov
jae
adc
dec
fimull
cmpl
loope
pop
jle
bound
rolb
mov
in
dec
sbb
add
scas
push
int3
jl
jecxz
inc
add
mov
mov
leave
mov
fwait
jp
sbb
out
xchg
mov
sbb
mov
pop
xchg
pop
jl
xchg
adc
and
dec
rorb
out
mov
cwtl
and
pop
sub
add
inc
mov
sbb
adc
mov
pop
cmpsb
rcll
lahf
jo
sub
cmpsb
mov
cs
clc
movsl
mov
mov
pop
iret
into
loopne
jae,pt
xchg
mov
xor
adc
push
popf
outsl
jle
es
sub
mov
aas
cli
or
cwtl
dec
add
pop
add
pop
cmpsl
std
int
pop
out
cmpsb
jns
push
push
or
adc
push
lcall
push
pop
push
mov
push
mov
pop
pop
add
mov
inc
iret
and
or
repz
push
repz
scas
rorb
jae
ret
or
sbb
jo
loopne
fsubp
push
test
xchg
xor
adc
aaa
or
adcb
pop
inc
xchg
or
in
pop
inc
shlb
cs
int
sub
les
push
movl
jge
adc
lods
jl
adc
mov
dec
stos
mov
sbb
out
push
xchg
add
mov
add
imul
mov
or
repz
lods
cmp
and
test
cmp
push
pop
mov
orl
mov
xchg
daa
jmp
sbb
fcomps
dec
gs
dec
and
lahf
sbb
int3
jb
dec
mov
inc
push
pushf
pop
imul
push
sbb
push
nop
inc
sahf
or
or
pop
and
xchg
xor
xchg
push
ss
xchg
loope
loop
adc
mov
mov
pop
into
movsl
xor
mov
icebp
rolb
jge
lods
mov
dec
push
stos
and
enter
mov
mov
jmp
out
xchg
or
out
jg
xor
mov
push
mov
inc
ss
cmpsb
pop
jle
pop
lock
in
mov
idivb
mull
push
mov
int
or
xchg
xchg
iret
mov
lods
and
out
sbb
arpl
sub
adc
ja
fisubrs
nop
lea
lret
sbb
cmp
xlat
mov
fs
mov
push
xchg
xor
icebp
cli
cld
fwait
mov
cld
in
shlb
lret
sbb
mov
cmpsb
fsubrs
add
inc
mov
nop
addr16
imul
cmp
cmp
idivl
add
sar
stos
mov
sub
add
mov
pusha
or
and
outsl
inc
dec
sahf
jbe
jns
repz
outsb
je
fmul
arpl
push
clc
gs
jbe
sub
iret
mov
sahf
repz
pop
popf
in
loope
sbb
loop
push
push
test
or
cmp
cmp
mov
mov
fs
cmc
adcl
jmp
mov
cmpsl
cmc
mov
mov
inc
jle
mov
cmpsb
pushf
sub
dec
sti
loopne
lock
xlat
dec
adc
dec
cmc
lods
mov
push
cmc
sub
pop
adc
imul
sub
ja
loopne
cmpsl
sub
mov
pushl
or
mov
out
mov
sbbb
pop
mov
loop
adc
test
xor
jo
cltd
or
into
xor
and
xchg
push
or
jae
jae
xlat
jmp
aaa
pop
jl
jmp
fsubrs
mov
cmp
clc
cs
add
cmp
mov
movb
push
add
lcall
in
cmp
or
jnp
test
mov
inc
lods
pop
jmp
mov
popa
pop
jb
or
ss
mov
jo
sahf
or
icebp
rcrl
push
stos
xor
das
fsub
mov
mov
orl
push
xor
data16
sbb
adc
ret
cmp
mov
pop
lock
test
fstpt
push
ficoms
clc
dec
cmp
or
scas
ljmp
xchg
xchg
out
in
lcall
or
testb
js
adc
pop
mov
sbb
popa
inc
or
outsl
loope
lds
push
mov
dec
fs
sub
xor
rcl
int3
in
fdivrl
repz
pop
daa
sbb
imul
arpl
js
add
mov
fdivs
or
arpl
iret
adc
je
hlt
es
pop
sarl
push
subl
outsb
roll
xchg
lock
popa
mov
imul
out
mov
or
ja
in
mov
orl
sub
add
ret
cmpsl
mov
adc
add
adc
xchg
stc
dec
mov
fisttpl
add
add
push
xchg
sub
rcll
aaa
out
in
jns
test
mov
ret
fcomp
addr16
movsl
dec
dec
js
pushf
cmp
lret
pop
test
lods
add
std
mov
push
cmpsb
push
es
out
shlb
insb
flds
lret
cmpsb
pop
nop
mov
push
sbb
imul
out
lahf
mov
xor
inc
xchg
inc
dec
cmp
addb
addb
jge
dec
inc
pop
mov
addl
ljmp
lret
out
xor
nop
fidivl
mov
fdivs
sbbb
jns
push
test
xchg
in
dec
cmpsl
push
jo
in
cli
inc
cmp
aad
push
lcall
add
ror
fnstenv
xchg
repz
or
in
and
faddl
jp
je
scas
das
jp
add
inc
pop
addr16
add
xorl
mov
pushf
xchg
cltd
lcall
sarb
or
outsb
mov
pop
add
stos
outsl
jns
imul
xchg
outsb
test
pusha
mov
popf
adc
pop
push
insl
or
dec
mov
push
in
xchg
iret
sahf
out
and
jns
decl
push
scas
xchg
dec
xor
mov
pop
or
xchg
push
lds
dec
int
jno
mov
dec
mov
or
mov
lods
add
xchg
push
dec
pop
sub
hlt
aaa
flds
jmp
ja
sbb
fs
xor
or
or
ficoml
xchg
inc
push
stos
les
cmp
jo
adc
ret
pop
dec
pop
xor
dec
pop
push
mov
add
into
enter
mov
pushf
cmp
lods
dec
imul
dec
aad
inc
pop
push
rcr
add
lods
dec
clc
xchg
lods
mov
inc
pop
pusha
fdivrs
in
push
cmp
and
xchg
xor
add
roll
dec
dec
pushl
adc
push
test
shl
or
out
pop
mov
and
cmp
stos
or
insl
cltd
cmp
nop
jbe
mov
repnz
or
loopne
mov
aad
in
xchg
adc
test
adc
cmp
cmp
push
xor
out
jecxz
sbbl
or
mov
mov
xchg
jge
frstor
fs
mov
ss
xchg
loop
cmp
jo
xchg
inc
stos
push
mov
push
pusha
orl
xchg
or
out
aas
icebp
push
jne
xchg
adc
mov
mov
pop
fwait
out
lcall
je
gs
daa
cmpsl
xchg
mov
jmp
mov
popa
jns
mov
hlt
pushf
dec
lock
xchg
arpl
adc
xchg
adc
icebp
aad
fdivrp
or
pop
in
rep
xchg
dec
lods
xchg
lahf
push
gs
pop
mov
mov
or
xor
xlat
fcoms
pop
or
mov
push
adc
jb
pop
es
add
aas
or
ret
divl
mov
push
lcall
mov
popf
jecxz
inc
adc
and
outsb
dec
out
push
rolb
fisttps
sub
mov
pop
sbb
loopne
add
in
cmpsb
ss
lahf
pusha
xchg
dec
in
or
pop
inc
in
inc
aaa
psllq
xor
fwait
push
xor
pop
dec
mov
inc
fs
sub
xchg
mov
std
or
mov
insb
ds
xchg
add
lcall
iret
mov
xor
xchg
dec
inc
stc
unpcklps
inc
ljmp
inc
inc
adc
cltd
mov
jle
movsl
adc
sub
jp
addl
fcomps
aaa
sbb
scas
ret
mov
xchg
leave
sub
js
adc
lock
pushl
mov
popf
xor
add
push
sub
test
adc
clc
cltd
or
cmpsl
stos
pushf
sub
outsl
or
std
pop
add
inc
add
mov
push
rcrl
pop
cmp
je
vpperm
pop
xchg
lcall
testb
mov
testb
cmp
pop
fldlg2
mov
lods
sbb
adc
inc
fidivl
fldcw
sbb
out
shl
ret
loopnew
inc
or
jecxz
aam
mov
pop
frstor
inc
adc
push
mov
inc
cwtl
sbb
inc
push
dec
fs
sbb
cli
fnstcw
pusha
push
mov
cmp
xor
lea
push
push
cltd
xchg
sub
pop
std
jge
ret
jno
inc
dec
sti
xchg
jae
js
mov
or
pop
loope
andl
inc
pushf
jbe
xchg
sub
rcrl
cmpsb
pop
jl
call
push
sbb
add
xor
aas
aas
pop
xchg
test
clc
dec
pop
repnz
push
adc
aas
ljmp
fistl
or
scas
jae
mull
or
inc
outsb
mov
stc
popa
test
push
lcall
xchg
movsl
scas
fidivrl
testb
add
xor
lret
adc
and
repz
inc
movsl
sub
push
lds
pop
or
sarl
pop
mov
xor
pop
lock
pop
in
lret
ss
inc
mov
xchg
adc
pop
lcall
ret
push
nop
pop
mov
adc
xchg
cmp
mov
dec
push
mov
outsb
out
jnp
out
xor
das
dec
fnstsw
addr16
cmp
mov
xor
cmpsl
popf
mov
shr
sar
jmp
xchg
insb
shr
shrb
or
jg
cmp
idiv
cs
mov
sbb
dec
lret
sbb
ret
dec
ja
mov
xor
leave
xor
xchg
inc
mov
mov
pop
scas
test
mov
push
pushf
pop
sbb
push
mov
pop
inc
cmpsb
xchg
les
loopne
cltd
and
adcb
cmp
or
inc
fucomip
and
mov
add
push
mov
rcr
cmp
xlat
mov
mov
andl
lret
fwait
cmp
adc
pop
divb
jg
xchg
mov
fbstp
push
pop
add
mov
sbb
shlb
shll
mov
dec
xchg
movsl
fisubrl
adc
and
or
push
jno
and
int3
ja
jae
xor
stos
sub
call
popa
xchg
add
jbe
bound
addr16
pop
jo
ss
add
mov
jne
aas
lret
add
and
aas
int
imul
ret
rcrl
push
shrb
sbb
fucom
imul
repnz
scas
js
or
repnz
add
pushf
cvtps2pd
jle
cs
sbb
push
sub
insl
jp
popf
add
testl
dec
ds
rcll
jg
cmp
adc
movsb
sub
cmpsl
inc
inc
fisttps
push
sti
dec
insl
xchg
sub
punpcklbw
inc
mov
pop
out
xor
adc
add
dec
mov
cmp
mov
and
hlt
xchg
sub
fwait
push
pop
or
lret
dec
sub
cld
mov
insl
xchg
cmp
push
mov
mov
cli
mov
roll
es
dec
cltd
dec
sub
cmp
shl
addl
cmp
shrl
in
pop
mov
clc
aad
movsl
or
inc
jne
in
iret
testl
shl
add
xor
cmp
in
loope
jl
pop
loop
bound
inc
cli
xchg
shlb
cmpsl
mov
pop
jecxz
pop
mov
mov
mov
pop
lock
lea
clc
mov
test
mov
or
daa
xor
scas
pop
mov
lret
mov
xchg
js
out
inc
or
add
out
ss
sbb
or
andl
mov
sub
xchg
cmp
fdivrs
inc
xor
mov
pop
adc
jle
inc
shrl
pushf
and
lret
test
ja
dec
inc
outsb
adc
bound
xlat
out
pop
mov
pusha
popf
enter
or
add
addr16
roll
popf
ss
mov
ss
sub
leave
dec
andb
jno
aam
cli
jp
insl
lods
push
lods
add
push
das
jg
out
cmpsb
push
cmp
fld1
outsl
jne
jb
xchg
mov
add
lahf
imul
adc
pop
fucomp
cmp
jb
faddp
push
dec
xchg
adc
xchg
fistpll
pop
ret
dec
ficomps
jae
out
jbe
push
or
divl
mov
dec
mov
mov
ds
push
push
mov
cmp
hlt
jb
mov
push
je
fnsave
ror
push
pop
pop
ss
test
cmp
popf
jnp
add
dec
add
jb
sbb
dec
loopne
pop
inc
loop
xlat
sbb
sbb
mov
add
sbbl
and
xor
jl
pusha
das
cmpsb
cmc
fsubr
xor
add
mov
out
arpl
iret
stc
lcall
loop
xor
pop
lods
lea
pop
lahf
dec
add
nop
movsl
gs
push
lea
test
push
ljmp
mov
push
jecxz
xchg
sub
ljmp
test
pop
and
adc
jg
inc
jbe
xor
cmp
inc
out
les
faddp
jne
ja
rorl
adc
inc
mov
movsb
lret
shll
mov
lret
das
mov
rclb
jg
inc
mov
or
lds
es
rcrl
mov
xchg
andb
lds
dec
int3
mov
ljmp
movb
pop
jmp
mov
in
jae
in
dec
adc
bound
leave
lds
mov
mov
push
dec
adc
mov
and
jne
popa
imul
aad
repnz
inc
test
repnz
std
xchg
inc
push
jnp
push
sahf
nop
push
scas
mov
scas
xor
mov
mov
les
mov
inc
push
loop
xchg
in
pusha
dec
add
cmp
jmp
adc
addr16
ret
ljmpw
sbb
ds
xchg
mov
jnp
out
repz
cmpsb
inc
inc
lahf
aad
out
scas
cld
ret
int3
push
fidivl
repz
test
sbb
dec
sub
adc
adc
cmp
mov
fisubl
call
jecxz
push
dec
fistps
sub
test
cltd
jnp
stc
mov
jnp
xor
lods
std
cmp
pushf
leave
and
fst
enter
lods
pop
pop
push
mov
adc
add
mov
pop
xchg
in
out
das
out
xchg
call
add
inc
sub
mov
xor
xchg
mov
std
loopne
and
ret
add
les
cmp
ret
std
ljmp
aaa
mov
push
xor
repz
mov
push
xor
outsl
shr
dec
fcom
xchg
mov
adc
sbb
mov
lods
nop
cmc
jbe
push
mov
std
inc
inc
mov
inc
inc
mov
sub
or
sub
in
repz
xlat
test
outsb
repnz
test
fs
mov
adc
lods
sahf
or
add
pop
jmp
stos
add
out
mov
push
daa
jbe
dec
cmp
rolb
dec
push
out
sbb
mov
mov
mov
mov
xlat
cltd
lds
add
cmp
pop
dec
test
ss
gs
fsub
subb
pop
mov
mov
xor
mov
jl
mov
cmc
loop
cmpsl
int
outsl
mov
imulb
mov
scas
lock
fwait
push
mov
data16
dec
add
dec
and
out
fs
out
cs
fidivrs
je
test
in
mov
mov
je
xor
cmpsb
cmc
jno
xchg
cmp
enter
inc
dec
insb
leave
or
cmp
or
jge
cs
cmp
test
aaa
arpl
dec
ljmp
xchg
xchg
push
loopne
dec
cld
sub
cmpsl
jmp
sbb
lcall
enter
mov
insl
vmptrld
fisttps
or
and
mov
mov
lret
stos
das
adc
lods
push
mov
push
add
jg
dec
loope
mov
mov
or
cwtl
push
jns
shrb
mov
loope
jae
adc
rorl
mov
repz
punpcklwd
sbb
in
xor
js
dec
cmp
enter
dec
cmp
xor
adcb
jb
sarl
mov
inc
cmp
pop
push
mov
hlt
adc
sbb
out
movsl
ss
adc
mov
hlt
mov
fcmovne
lds
cmp
lds
cmpsb
pop
adc
add
mov
jmp
into
push
cmp
incb
pop
int
jg
mov
mov
lret
mov
push
arpl
gs
icebp
add
mov
xor
ficoms
sbb
pop
mov
adc
lcall
shl
stos
in
repnz
mov
pop
in
sbb
mov
rolb
popa
les
nop
push
icebp
cmp
orb
mov
push
mov
push
cmp
ret
lcall
pop
add
xor
ret
das
sbb
add
ljmp
jmp
and
popa
sbb
inc
jmp
daa
cmc
sbb
mov
mov
rorb
push
daa
inc
dec
and
cmc
and
sbb
jmp
insb
aaa
mov
loopne
ds
aas
push
lock
and
adc
mov
xchg
ss
cmp
sahf
inc
push
fwait
pop
or
sahf
adc
ret
mov
data16
rcr
sub
rcrl
jno
cli
jmp
and
fidivs
xor
and
pop
cmp
mov
testl
test
insl
lret
imul
mov
push
adcl
mov
andl
int
in
dec
add
cmp
sub
xchg
shrb
sub
mov
jecxz
mov
in
cltd
repz
cmpb
ja
repnz
mov
lahf
sbb
mov
aaa
inc
lods
jmp
xchg
mov
loopne
sti
add
dec
pop
pop
inc
xchg
fs
cltd
and
adc
addr16
lret
push
push
pushf
mov
adc
xor
cltd
stos
fcompl
aaa
ret
pop
cwtl
pop
adc
adc
lods
mov
mov
mulb
cltd
add
les
cmpsb
psubd
jg
xor
push
cmpsl
out
sub
or
sub
mov
inc
jg
sbb
push
pusha
outsl
out
push
dec
fsts
pop
adc
mov
rcll
decb
jge
dec
aad
mov
mov
jne
dec
sub
pop
xchg
xor
xchg
add
int
jns
addr16
divb
inc
mov
lret
inc
push
sarb
push
pop
cli
addr16
repnz
mov
cwtl
shrl
mov
lret
adc
outsb
popf
jns
lods
inc
push
jae
push
sub
inc
xlat
add
imul
mov
or
jns
xor
jbe
les
icebp
idivl
loop
fnstsw
stos
inc
mov
out
sub
enter
sbb
int
mov
xor
or
mov
fisubrl
test
gs
aad
pop
sbbb
in
push
insl
push
in
pusha
cmp
xchg
mov
push
inc
xchg
cwtl
mov
bound
lds
or
rcl
push
sub
xlat
pop
push
aas
test
je
jecxz
mov
loope
inc
test
jnp
pusha
push
cmp
sahf
mov
xchg
lock
cld
movsl
insb
dec
and
jbe
pop
sarl
mov
sub
sbb
jo
scas
push
adc
sysenter
xchg
cltd
mov
push
ja
aam
bound
fdivrs
outsl
dec
notl
pop
or
xorl
test
mov
ja
dec
jp
andl
or
andb
inc
push
sti
lods
movb
mov
add
xchg
repz
inc
cs
cli
out
add
or
sbb
inc
sbb
xchg
out
adc
or
sub
xor
mov
pop
inc
cld
push
loopne
jo
xchg
inc
pop
xlat
out
jne
adc
out
or
jno
push
push
ds
sbb
pop
adc
ret
jp
lea
pop
test
scas
jnp
push
xchg
sbb
leave
and
fsubs
aad
sbb
sbb
and
repz
into
add
jp
pop
sub
mov
js
jecxz
mov
pop
xchg
mov
gs
xor
cmpb
cmp
loopne
jmp
push
int3
jo
cmp
popf
nop/reserved
lret
imull
ficoms
ret
push
mov
ret
or
push
cmp
movsl
shll
fidivrl
xchg
cmp
jp
lahf
mov
add
jno
mov
adc
mov
cmp
jo
in
push
mov
mov
js
fistl
int3
jmp
mov
leave
imul
jmp
adc
mov
pushf
pop
test
fdivrl
aad
lret
xchg
ja
fidivrs
or
and
jecxz
inc
cmc
mov
lahf
xchg
dec
add
jle
cs
insb
insb
lea
jbe
or
jae
and
xchg
in
pop
xorl
xchg
inc
push
pop
inc
adc
add
fsub
and
sbb
loopne
xchg
adc
xor
ficoml
push
out
mov
jp
les
cmpb
inc
out
je
xor
pop
sub
pop
dec
and
inc
xchg
xor
in
call
inc
stos
or
test
aad
inc
stos
fisttpl
lcall
inc
xchg
adc
pushf
cmp
dec
test
pop
mull
inc
sbb
pop
jno
pop
in
arpl
aad
push
movaps
dec
repz
out
imul
data16
adc
and
and
gs
jge
clc
mov
xor
pop
adc
add
mov
fs
dec
cmp
jle
popf
in
or
add
imul
in
loop
nop
xchg
ret
mov
push
fisttpl
test
test
sub
mov
jns
test
aad
mov
outsl
push
inc
dec
xor
ret
dec
fwait
and
scas
repz
mov
mov
mov
loopne
sbb
enter
push
enter
pop
out
jmp
jo
pop
std
fsubr
ss
jns
movsl
add
xchg
dec
and
mov
inc
sbb
mov
decl
mov
jmp
call
ja
data16
push
js
push
dec
sub
or
js,pn
aaa
inc
je
clc
sysret
xchg
in
data16
mov
mov
mov
jp
and
lcall
cmp
adc
dec
negl
sbb
cwtl
mov
sbb
add
cmp
jle
jb
or
imul
nop
faddl
cli
mov
inc
jne
arpl
mov
lods
ja
ret
adc
or
pushf
sahf
loope
lea
xchg
inc
jbe
lret
jne
dec
xor
and
add
aam
daa
add
enter
adc
mov
cld
out
mov
sbb
std
xchg
jno
sarb
sub
lcall
test
mov
je
fldenv
rclb
insl
add
jmp
pushf
inc
or
negl
mov
insb
jl
jle
movsb
ljmp
fnsave
cli
dec
inc
jno
fcomps
lcall
in
jne
push
mov
fsubl
sbb
out
lds
aad
jge
pushf
xchg
push
rcrl
xchg
stc
xor
sti
lret
mov
push
subb
mov
adcb
pop
cmc
andb
dec
mov
lock
mov
mov
outsb
repz
sbb
adc
je
push
sbbb
xor
sbb
add
and
arpl
adc
in
pop
xchg
sarb
cltd
mov
jnp
and
jl
jns
adc
prefetchw
mov
xor
jae
sahf
fisttpl
sub
mov
xchg
in
sub
imul
mov
mov
std
xlat
sub
and
in
jbe
mov
mov
imul
push
xor
sub
pushf
imul
and
dec
cmpsl
popa
lods
jg
jecxz
cmp
aad
adc
shlb
hlt
aas
fildl
and
sbb
xor
cmpsb
movsb
scas
jb
inc
xor
jl
mov
mov
andb
mov
adc
loope
pop
hlt
inc
mov
push
rcll
adc
ja
push
cmp
lods
mov
int
ja
inc
es
repz
sbb
sbb
pxor
and
or
pop
mov
insl
imul
lret
mov
and
ss
push
fcoml
jecxz
push
cmc
mov
fstpl
sahf
int3
sahf
add
cmp
adc
jg
jmp
dec
fildll
pushf
enter
cmp
in
push
jo
adc
inc
in
in
rolb
adc
cwtl
aad
arpl
mov
roll
mov
rorb
frstor
dec
lret
cltd
out
int
lea
outsb
xchg
xorb
pusha
xor
adc
flds
or
jno
sarb
add
pop
or
dec
add
cmp
pop
mov
sbb
mov
imul
mov
push
push
dec
mov
and
addr16
popf
mov
ja
aad
loope
mov
push
ljmp
iret
sbb
xchg
aaa
sbb
mov
or
imul
mov
sub
add
les
faddp
ljmp
lock
or
inc
xchg
lods
movb
xlat
mov
adc
sub
popf
outsl
jns
hlt
jo
dec
bound
dec
jno
pop
xchg
test
dec
cmp
mov
push
jle
mov
mov
push
aam
lea
add
je
or
xchg
cmp
sub
adc
jecxz
xchg
imul
fiadds
adc
call
or
es
jge
or
ljmp
js
scas
dec
in
sub
insl
fwait
sbb
cmp
jecxz
xchg
pushf
fsubrs
pop
inc
dec
stos
xor
lret
pushf
inc
jo
in
push
pand
pop
movsl
mov
mov
daa
jl
movsb
pop
add
mov
data16
xchg
decb
xor
aas
bound
popa
std
cld
call
es
roll
test
test
mov
frstor
faddl
pop
mov
mov
call
xchg
retw
clc
cmp
iret
xchg
xchg
inc
cmp
cmp
shlb
out
stos
xchg
jae
pop
sar
addl
cmp
hlt
and
scas
test
out
add
adc
jle
lods
inc
or
sti
jle
insb
out
shll
mov
dec
sahf
dec
and
pop
or
lea
xchg
das
push
inc
in
mov
lods
inc
dec
sub
or
push
push
aaa
mov
inc
jmp
or
aas
jnp
addr16
add
cmp
int3
xchg
jnp
xchg
dec
jnp
mov
cmpsb
clc
out
and
jnp
jbe,pt
or
cli
dec
push
rcll
imul
sbb
out
jbe
xchg
sub
pop
imul
push
jl
mov
inc
xchg
pop
je
lea
lcall
pop
outsl
inc
pop
std
xor
in
cmpsl
xchg
pop
in
adc
jmp
cmp
xor
jo
gs
les
aas
mov
enter
xor
test
cmp
test
sub
inc
mov
and
xor
lret
pop
out
rorl
xchg
xchg
inc
jmp
xchg
fildl
or
fidivl
jbe
call
mov
aad
mov
repnz
data16
mov
jo
pusha
gs
add
lods
scas
aaa
or
jp
or
shll
in
xor
lahf
adc
inc
mov
push
hlt
and
push
and
in
mov
sub
lahf
jmp
pop
adc
fisubrl
cltd
or
jl
xchg
inc
pop
aas
push
or
inc
and
lds
lods
imul
out
insl
das
insl
scas
xor
and
cs
push
cltd
call
mov
loop
clc
jnp
dec
bound
imul
insb
mov
std
dec
dec
repnz
add
out
dec
shl
pop
sahf
addr16
aaa
popf
xorb
mov
pushl
xchg
mov
ss
sbb
and
xchg
mov
lods
leave
mov
pop
call
fwait
pop
aaa
insb
or
mov
arpl
xor
jbe
pop
test
iret
xor
add
adc
push
ret
shrl
inc
xor
sahf
sbb
test
inc
lock
sub
arpl
jbe
movsb
add
sbb
push
ljmp
notl
cmpsl
cs
mov
imul
add
mov
push
scas
cmp
push
popa
mov
dec
lahf
stc
icebp
lds
fists
xor
push
mov
insl
push
lret
shll
xor
popf
das
mov
add
mov
int3
xchg
push
mov
js
push
fdivrl
dec
bound
xchg
ss
inc
push
or
xchg
or
jmp
std
pop
andb
pop
stc
icebp
jle
sahf
lock
fs
ljmp
out
ret
mov
mov
jnp
shr
aad
fsubl
mov
fistl
jge
pop
dec
sub
sub
insl
insl
push
or
xchg
add
aas
scas
dec
and
mov
lcall
or
fcompl
fxch
or
lcall
inc
push
push
data16
push
xchg
pop
pushl
adcl
neg
add
lcall
test
mov
cmpsl
sbb
push
outsb
dec
push
test
adc
or
test
cld
cmpsl
outsb
inc
mov
adc
in
cmp
in
pop
ffree
cmpsb
push
fsts
test
pop
mov
pop
cmp
clc
fstpt
ljmp
dec
dec
jl
mov
mov
push
cmp
iret
and
cmp
mov
dec
add
mov
popa
ja
sbb
sbb
xchg
out
iret
mov
push
cltd
sub
lock
xor
dec
addl
xchg
mov
and
sbb
add
divb
dec
jg
lcall
insl
pop
inc
and
cmpl
test
push
das
ds
add
xchg
add
jae
repnz
popf
dec
jmp
test
rclb
insb
leave
ljmp
sbb
push
add
pop
sti
adc
in
add
shlb
sbb
push
sbb
jb
cmp
inc
movsl
gs
mov
xchg
pop
dec
xor
mov
dec
movsb
cmp
mov
ficoml
notb
andb
mov
andb
test
adc
mov
mov
mov
std
ds
xchg
outsb
mov
cs
xor
outsl
adc
sbb
pop
je
jb
bnd
or
jns
out
out
pop
push
lret
and
jg
sub
popa
jno
movsb
cmp
je
pusha
jo
arpl
ja
sahf
mov
popa
pop
int3
xor
data16
jbe
xor
lcallw
inc
pop
repz
jb
lods
fs
cmp
addr16
xor
inc
jae
add
jb
fcos
push
lds
imul
test
int3
mov
dec
xchg
flds
adc
inc
xor
sbb
mov
out
stos
arpl
pop
mov
enter
xchg
push
cmp
je
int
xor
mov
mov
inc
pop
add
sub
pop
bnd
push
cli
jmp
jnp
shlb
fs
in
jl
lock
loope
insl
es
xor
mov
int3
inc
pop
ja
mov
int
pop
lahf
sbb
in
and
shrl
mov
sti
adc
cmc
push
outsb
dec
pop
push
out
sub
mov
arpl
dec
cmp
nop
stc
je
mov
xorb
outsb
or
int3
dec
imul
leave
push
mov
inc
push
jecxz
ss
inc
adc
repz
rcll
stos
outsl
jmp
push
adc
setg
movsl
mov
iret
daa
mov
sub
push
lods
int3
int3
mov
aad
es
push
fcompl
adc
test
push
fnsave
fcomip
fidivrl
inc
adc
movsb
jne
or
fsin
insl
pusha
rolb
dec
roll
rcr
jmp
mov
mov
stos
sub
cmp
lea
out
notb
push
loop
test
in
jns
aam
sub
stos
in
lahf
cmpl
jb
sub
cmp
fisubl
ret
mov
fwait
sub
cmp
mov
dec
jae
mov
push
shr
mov
mov
cmp
mov
xor
pop
jmp
add
cmpsb
cld
daa
pop
test
or
popf
data16
sbb
mov
lahf
aad
test
mov
clc
push
out
lcall
push
mov
icebp
popf
push
and
pop
out
pop
outsb
stos
mov
pop
inc
mov
pextrw
lcall
loopne
or
lret
xchg
and
cmpsl
pop
aad
cmp
shr
fidivl
out
xchg
lds
sbb
sar
push
enter
pop
and
push
add
mov
mov
and
ret
mov
jbe
cmp
xchg
stc
inc
scas
sub
ljmpw
dec
mov
in
push
lahf
rorl
repz
stc
xchg
sbb
aaa
xor
sti
stc
add
mov
imul
xor
jns
clc
aad
jmp
sbb
repz
les
ret
cmc
sarl
lahf
clc
pop
jmp
and
das
pop
sub
mov
daa
ja
out
test
scas
pop
and
sbb
or
mov
popa
jno
pop
pushf
sub
ja
mov
arpl
sahf
repz
adc
dec
add
cmc
mov
sbb
jae
xchg
sahf
enter
outsb
xor
sub
sbb
decb
scas
and
push
push
push
mov
sarl
leave
data16
popa
mov
call
inc
pop
or
sub
enter
int3
mulps
xchg
out
sahf
push
movsb
pushf
je
xchg
lret
lods
addr16
ja
dec
adc
or
repz
mov
sub
pushf
and
aad
jne
call
fsubrs
mov
cltd
push
mov
sub
insb
add
sbbl
in
push
addr16
jge
mov
nop
add
and
cld
dec
mov
out
lds
in
jle
pop
jbe
bound
stos
in
sub
jns
and
xchg
ds
fcmovbe
pushl
sti
or
cmpsb
mov
mov
std
mov
aam
inc
sbb
push
sub
cmp
fdivrl
sub
mov
inc
dec
inc
les
add
xor
jns
cs
lret
push
cli
in
cltd
jo
in
stc
shrl
and
and
mov
adc
jecxz
rcr
fstl
or
pop
ja
in
push
mov
mov
jns
sub
sti
cwtl
mov
cmp
frstor
ja
stos
push
inc
ss
shrb
fnstenv
inc
ja
std
pusha
sarb
popf
xchg
sub
mov
ja
mov
leave
data16
mov
adc
call
nop
xchg
sbb
cmpsb
mov
push
shl
lds
roll
repnz
ljmp
bound
sub
rol
lea
sahf
js
pop
add
std
stos
sbb
aad
xor
stos
mov
or
rcl
jns
xchg
repnz
xor
in
cs
bound
cmp
cmp
jge
xor
adc
dec
mov
mov
push
fldcw
shl
jbe
or
call
ja,pn
dec
pushf
cld
cmp
sbb
pop
pop
and
in
xchg
jp
add
les
shld
negl
xchg
sbb
imul
movsb
cmpsl
lea
xor
insb
lret
in
and
sbb
loop
add
adc
jle
fiaddl
lret
je
xor
or
xchg
xor
sti
push
dec
sbb
repz
jg
or
mov
pop
or
mov
test
clc
mov
mov
imul
int3
sub
lahf
pushf
xchg
jne
imul
and
mov
loop
push
xchg
nop
mov
dec
jno
lret
and
ror
daa
insb
mov
jle
push
cmp
or
pop
pop
fcoms
rcrb
dec
dec
sub
xor
xor
pop
inc
out
ret
insl
out
mull
frstor
jle
int3
popf
je
sbb
and
push
rcrb
xor
mov
sub
sbb
push
jl
push
into
mov
out
and
outsb
jnp
mov
push
lods
cld
and
call
outsb
div
insl
cmp
sub
daa
lret
sahf
out
add
aam
ljmp
lahf
add
shrl
loop
lret
push
std
cmp
hlt
sbb
sub
nop
imul
sar
cmpsl
roll
jo
push
xor
sbb
test
outsb
inc
insl
or
negb
xchg
push
sub
int
nop
mov
jecxz
lcall
clc
pushf
lret
popa
add
into
and
sub
or
clc
lea
movsb
adc
xlat
fldl
xor
test
mov
sti
mov
std
leave
jno
imul
bnd
mov
cli
icebp
sbb
rcll
sub
mov
rclb
sub
aas
and
movsl
fstpl
or
jbe
push
test
push
push
lock
repnz
mov
and
and
ljmp
outsl
jmp
jne
mov
or
add
aad
push
adc
mov
cmpsb
int
call
js
das
cmp
orps
cltd
out
stos
ficomps
stc
xor
cmp
clc
adc
fucomp
sbb
mov
daa
pop
fmul
jno
and
sbb
add
ret
cmpsl
js
lea
aas
pop
cmp
decl
lock
outsl
add
jae
adc
jl
bound
out
jo
or
mov
ret
xchg
sub
mov
pop
int3
stos
jecxz
cmpsl
xchg
loop
ljmp
add
sbbb
mov
lahf
add
mov
lahf
in
loope
rcrl
fwait
mov
inc
movsl
dec
add
push
sbb
push
pop
icebp
push
pop
push
clc
adc
sbb
and
into
add
sti
jne
sbb
cmp
pusha
jp
out
mov
jecxz
sub
jg
ss
jo
jmp
pop
out
pop
adc
add
add
ficoms
fwait
loopne
add
std
mov
mov
fs
cmp
jge
cmp
ljmp
jmp
aam
push
fwait
scas
pop
pop
mov
mov
scas
xchg
shrl
jnp
outsb
sbb
fimuls
shll
jge
inc
andl
iret
mov
mov
or
fistps
inc
pop
out
cltd
nop
scas
jge
inc
or
or
mov
out
clc
push
fisttpll
clc
sbb
aaa
sub
inc
lods
fimuls
push
mov
push
sbb
enter
inc
cmpsl
outsb
jno
inc
mov
lock
jp
fstl
shlb
call
cmc
out
lret
pop
fists
pop
mov
xchg
inc
mov
mov
mov
pusha
mov
lods
mov
and
pop
cmp
dec
test
and
mul
mov
loop
sahf
fidivrl
test
or
test
cmpsb
ja
ret
mov
das
xchg
xor
inc
and
push
in
pop
mov
sub
imul
mov
sti
inc
or
in
adc
and
cmc
stos
rol
xchg
jl
test
adc
lods
scas
pop
roll
inc
mov
inc
jg
js
inc
das
dec
stos
fs
jge
into
loope
or
int
ret
mov
cmpb
xchg
push
insl
hlt
sbb
daa
stc
movsl
repnz
pop
loopne
xchg
pop
add
and
push
or
mov
loopne
dec
mov
rcrl
out
popf
stos
mov
int3
xchg
cmp
outsl
insb
setge
adc
cmp
mov
jne
in
xchg
popf
xor
mov
cld
sbb
popa
cmpsb
sbb
jno
enter
push
repnz
es
addl
push
ret
bound
pushf
jno
mov
cs
bound
aaa
gs
mov
xchg
pop
imull
fstps
pop
js
or
dec
adc
dec
insl
dec
hlt
or
jbe
mov
sahf
inc
push
pop
jg
pop
sahf
xor
sub
xchg
hlt
cmpsl
int3
shll
jmp
inc
or
ds
jns
add
aam
push
movsl
test
jno
jno
sar
pop
and
sbbl
repnz
lea
cmpsb
dec
addr16
push
mov
fdivs
imul
add
mov
test
cmpl
xchg
mov
inc
aad
mov
lods
sbb
lret
cwtl
adc
add
push
inc
icebp
outsl
outsl
gs
rorl
enter
inc
fsubrs
and
jnp
pop
cltd
jns
faddp
fildl
mov
shlb
insl
shll
push
mov
std
adc
outsb
test
popf
add
jns
scas
fmulp
xchg
mov
enter
xor
call
cmpsb
xchg
pop
mov
mov
cwtl
hlt
pop
cmp
xlat
inc
dec
stos
push
jae
xor
dec
lods
push
repz
loop
test
rcr
inc
nopl
cltd
lds
adc
scas
push
mov
in
pop
cmp
mov
dec
sbb
xor
fs
mov
push
mov
xor
or
rolb
push
adc
or
arpl
jg
cmp
repz
lods
sbb
push
inc
push
push
insb
outsb
out
insl
inc
aaa
mov
scas
xor
cmpsl
sti
in
in
push
push
pop
add
cmp
pop
mov
lret
jmp
or
jns
insl
sbb
fdivrl
adc
ret
movsb
mov
icebp
mov
popf
insl
pop
int3
mov
inc
outsl
push
jmp
jl
dec
push
sbb
clc
int3
mov
mov
mov
hlt
and
push
and
scas
mov
jmp
ja
sub
pop
jp
pop
int3
clc
lea
test
in
mov
or
jle
fimull
lret
lret
stc
aas
fsubl
lahf
dec
loope
mov
sbb
pushf
fwait
in
dec
imul
mov
xchg
sbb
aas
jnp
adc
imul
pop
cmp
rcrb
jle
jp
xchg
dec
fildl
cltd
lahf
mov
mov
xchg
bound
xor
sti
jle
aad
xor
testl
pop
pop
adc
xchg
mov
xor
and
cmc
imul
popf
ja
mov
inc
pop
inc
sbb
xor
cmpsb
data16
and
adc
and
imul
int
andps
divl
xlat
push
sbb
test
add
gs
cmpsb
mulb
dec
outsb
shll
mov
jne
daa
paddb
cmc
adc
jl
inc
in
xor
pusha
pop
add
or
xor
inc
mov
setns
ficompl
ds
loope
push
fnstcw
mov
xchg
sbb
sbb
sub
aad
clc
imul
adc
je
sti
cmp
movsb
fcomps
and
dec
add
lcall
xchg
lock
push
ret
sub
shlb
adc
push
outsb
xor
addl
data16
dec
out
sbb
and
outsl
xor
inc
or
push
call
stos
imul
push
mov
imul
jmp
arpl
mov
loop
outsl
hlt
in
pushf
nop
jo
lcall
test
lods
jo
out
sbb
lret
leave
iret
adc
aas
movsl
or
sbb
mov
repnz
sti
sbb
xor
decb
pop
scas
enter
and
adc
outsb
mov
lahf
pop
push
jne
mov
and
push
dec
xchg
mov
stc
sbb
fwait
stc
out
mov
sub
xor
xchg
jmp
movsl
jbe
popa
inc
add
out
sub
push
cwtl
xchg
enter
inc
or
xor
outsl
andl
out
lds
jbe
xor
mov
mov
movsb
data16
xchg
add
jb
shl
xchg
or
jbe
dec
sub
roll
push
mov
idivb
lret
jnp
xchg
lcall
out
xchg
mov
stos
dec
into
ret
pushf
mov
iret
out
or
insb
cli
outsl
pop
cmp
popf
fsub
repnz
in
push
cmp
sbb
out
nop
jns
sbb
jns
in
and
jae
imul
xchg
or
jae
roll
movsb
stc
dec
ficoml
repnz
push
inc
in
xchg
cld
adcl
shrb
sub
hlt
adcb
or
cld
cmp
aam
dec
pop
lds
test
cmp
add
hlt
push
stos
ss
bnd
mov
lret
ret
jp
popa
lock
xorl
inc
xchg
sub
cmp
sub
cmpl
mov
inc
push
lods
sahf
jns
push
lds
mov
jne
sbb
clc
dec
mov
xchg
pop
push
mov
lahf
ret
fldcw
movsb
or
clc
push
pop
out
hlt
ds
push
mov
out
mov
adc
pop
cltd
mov
cli
xorb
sub
xchg
loop
test
jg
push
in
fnsave
sub
nop
xchg
mov
and
or
and
addr16
jo
mov
pop
pop
lods
imul
pushf
cmp
scas
jp
fstpt
icebp
test
dec
pusha
int
jb
mov
jg
retw
pop
in
fdivrl
pop
adc
sub
cmp
shll
lret
add
xchg
arpl
or
xor
mov
jg
cmpb
icebp
add
pop
add
test
imul
xchg
lahf
adc
or
jg
and
out
fsts
cmp
and
sbb
insl
dec
das
aaa
sub
inc
ds
inc
mov
lods
std
fidivrl
mov
mov
dec
push
fadds
fdiv
xchg
jecxz
hlt
dec
dec
xchg
xor
add
add
nop
cmpb
mov
cmp
nop
mov
loope
sub
push
sarl
leave
cwtl
decl
xchg
outsb
dec
push
push
daa
mov
adc
fwait
pop
cmp
inc
xor
arpl
ret
dec
xchg
call
popf
mov
fidivrl
and
jno
ds
jp
or
mov
sbb
jo
aaa
push
adcl
into
mov
sub
or
je
int3
xlat
add
adc
xchg
push
pushf
ljmp
cmp
add
rclb
lahf
mov
fnstenv
flds
gs
dec
xlat
mov
vunpckhps
test
add
cmc
lret
add
adc
mov
sub
mov
cmp
add
loop
stos
leave
xor
repnz
adc
in
out
aaa
cltd
int
ds
outsb
scas
sbb
fisubrl
adc
pusha
or
sub
xor
lahf
sbb
lret
out
or
push
pop
lret
xlat
pop
nop
sti
lret
nop
mov
pop
sub
in
xchg
repnz
cs
aam
test
les
lcall
xchg
jno
lret
mov
inc
pop
push
xor
lahf
mov
add
je
mov
je
sbb
outsl
jg
push
imul
fidivs
fimuls
test
add
dec
fidivs
movsb
out
test
and
pop
push
in
mov
push
insl
cmpb
jnp
loop
int
movsl
mov
xchg
fistps
mov
gs
in
aam
inc
int3
in
or
lahf
mov
lds
xor
pop
rol
jmp
repnz
mov
incb
mov
scas
pusha
mov
or
or
ret
fidivrl
sub
rcrb
mov
std
sbb
xor
jno
cmp
repz
pop
aad
sub
gs
cmp
and
dec
pop
imul
jno
mov
ss
mov
sub
repz
and
stc
sbb
rclb
notb
jno
xlat
jae
adc
mov
fs
cmpxchg8b
and
arpl
xchg
jge
pop
add
xor
xchg
push
xor
stos
jg
jno
fsubs
lods
and
repnz
es
adc
mov
and
jb
lods
cmovbe
scas
and
mov
xchg
mov
cld
shlb
pop
pop
jae
es
std
enter
movsb
std
xchg
filds
pop
lods
inc
pop
cs
mov
enter
inc
mov
cmp
dec
fwait
inc
fistpl
nop
int3
loop
pop
cmp
out
imul
jns
jg
push
fptan
inc
into
lock
repz
movsl
sub
cwtl
stos
sti
std
insb
pop
push
out
pop
mov
hlt
int
cltd
jmp
jmp
xor
add
sbb
lea
out
dec
xchg
push
mulb
sub
lahf
std
add
cs
xor
mov
add
pop
and
hlt
ljmp
sti
mov
or
mov
popf
std
xchg
aaa
movsb
arpl
insb
dec
mov
cld
test
mov
dec
xchg
test
push
cmp
add
or
dec
inc
and
stos
pushf
ficompl
mov
lods
jb
sahf
loop
dec
fldl
lret
sti
hlt
inc
aad
test
and
ss
aaa
aad
sbb
out
fsubl
inc
fiadds
in
ja
rcr
mov
pop
mov
xor
push
loop
vpmulhuw
jnp
dec
jle
dec
ret
insl
add
stos
mov
pop
sbb
int
push
sub
push
push
inc
cmp
xchg
mov
gs
sti
cmp
out
lods
ds
and
push
xor
pop
cs
mov
or
and
xor
inc
js
cmp
shrb
adc
mov
lret
mov
loope
call
pop
gs
dec
test
jae
cmpsb
addr16
inc
cmp
into
push
mov
movl
cmpl
cwtl
adc
mov
pop
push
cmc
insl
dec
rcrl
pop
jne
movsl
jae
cmp
gs
jae
sarb
add
shlw
fldcw
pop
cmp
cmp
mov
mov
add
je
mov
mov
cltd
xor
gs
inc
fsts
adc
idivb
cmpsb
mov
sbb
movsl
xor
shll
sbb
aas
test
xor
dec
mov
adc
pushf
lods
or
lods
add
stos
mov
mov
arpl
roll
or
push
push
lahf
xchg
lret
mov
ret
shl
test
pop
out
outsb
outsb
adc
mov
inc
jecxz
scas
fstp
out
mov
pop
pop
ds
adc
loop
pop
or
push
push
lods
or
push
rorb
orb
pop
add
mov
or
mov
jb
out
sbb
das
popf
lret
mov
mov
add
fstl
shl
insl
adc
fnstenv
push
movsb
sbb
add
add
movsb
jg
cmpsb
stos
push
cmpsb
bound
and
pop
sbb
mov
and
call
daa
add
mov
xchg
dec
int
or
jb
push
jmp
fxch
sahf
rdtsc
sti
pushf
push
and
inc
sbb
int
les
sub
negl
sbb
bnd
xchg
pushf
xchg
or
icebp
ljmp
mov
jle
aas
sub
out
testb
loop
sub
xor
stc
rol
jg
jno
inc
fldt
cmpl
repnz
cwtl
std
aad
call
and
sbb
fsts
icebp
adc
and
shll
mov
mov
add
push
dec
mov
outsb
aad
mov
loope
iret
test
mov
lcall
mov
hlt
push
jecxz
push
test
insb
xchg
jbe
xchg
pop
dec
addb
inc
sti
adc
mov
cmp
dec
add
sub
lahf
jmp
xor
dec
ret
mov
add
adc
dec
mov
lea
lcall
scas
or
jo
test
push
inc
iret
pop
lret
and
inc
jle
outsl
scas
or
inc
mov
xor
scas
mov
xchg
lcall
xor
bound
add
dec
jmp
inc
ficoms
lds
insl
mov
cs
movsl
test
repnz
pop
mov
pop
mov
mov
xor
add
lods
pop
inc
push
movsl
sarl
xchg
or
add
subl
xchg
popf
or
dec
out
jge
jns
aad
adc
negl
mov
ds
mov
add
jmp
cmp
les
mov
cmp
jae
incb
cmp
pop
leave
cli
mov
dec
add
stos
outsl
inc
sub
cs
enter
sub
jbe
xchg
add
push
je
or
fistpl
repnz
push
add
and
push
sub
sbb
mov
ja
and
repz
cwtl
sub
cltd
das
hlt
enter
mov
loope
pop
rorl
in
add
imul
sti
xchg
xchg
sbb
inc
mov
xorl
iret
xor
lods
push
mov
data16
pushl
add
inc
je
sbb
jmp
and
ds
mov
mov
pop
dec
mov
fists
out
cmc
jns
das
adc
xor
int
pop
add
cmp
lret
and
dec
int
cltd
orb
lods
stc
add
push
and
out
int3
mov
mov
inc
inc
jno
in
insb
mov
in
xorb
push
rep
aad
arpl
fwait
pop
incl
cmp
cwtl
movsl
and
stc
add
js
pushf
jae
jmp
cmp
sbb
cmpsl
clc
cmp
inc
cmpsl
insl
ficoml
in
fidivrs
pop
and
push
cmp
lods
hlt
dec
inc
out
andl
sbb
lcall
pop
mov
mov
in
out
add
dec
and
push
out
mov
mov
jge
pop
sbb
pop
push
sub
arpl
jl
sub
rorl
pop
or
iret
mov
lods
ret
imul
push
mov
jl
lds
jg
cmp
popf
jecxz
enter
inc
out
ret
ja
fs
or
loope
cli
mov
aad
lret
lods
mov
xor
mov
sub
xchg
rclb
lret
lret
sti
jp
and
arpl
pop
lea
inc
call
sub
mov
js
pushw
jl
cli
scas
cwtl
call
inc
loop
adc
adc
adc
js
mov
mov
add
int3
or
inc
or
xor
ljmp
arpl
and
xor
dec
jne
cli
or
outsb
mov
mov
dec
in
stos
mov
lret
lret
jnp
sbb
lock
add
cs
mov
and
pushf
jbe
mov
shrl
adc
fsubl
or
mov
or
mov
shr
leave
and
pop
push
push
lret
push
xchg
inc
dec
xchg
gs
push
push
test
rcrl
in
cmpsb
cmp
adc
sbb
push
jne
out
jae
sbb
cmpsb
fisttps
xchg
inc
adc
push
sbb
mov
xchg
pop
sub
daa
sub
mov
int3
cmpsl
push
divl
out
xchg
fsubrs
mov
or
mov
sbb
nop
mov
mov
fnstenv
nop
pop
fwait
adc
pushf
aaa
pushf
pop
mov
adc
lret
sub
pop
add
imul
dec
lods
ficoml
jo
cmp
ret
xchg
inc
adc
or
sbb
mulb
mov
xchg
shll
jp
int
dec
jl
cld
push
sub
clc
cmp
pop
mull
clc
push
fidivrs
xchg
sub
adc
lret
or
mov
jmp
outsl
inc
push
mov
inc
mov
test
lock
xchg
jg
aad
jne
push
inc
outsb
hlt
ljmp
ds
sbb
enter
movsb
imul
pop
mov
mov
mov
push
push
cli
dec
jle
movsl
pop
xor
xchg
xchg
sbb
lahf
mov
dec
fiadds
dec
mov
mov
jns
sub
adc
lret
imul
sub
cld
push
cmpsb
jnp
sub
mov
pop
jp
mov
data16
push
mov
adcl
out
mov
stos
jnp
xor
cmp
dec
pop
scas
arpl
push
lock
leave
sbb
push
call
sti
rorl
inc
cmp
bnd
rolb
adc
jecxz
mov
xchg
xor
shr
out
rcrb
ret
adc
in
pop
std
lahf
pop
adc
push
xor
sub
iret
movb
popl
jns
dec
int3
cmpsb
leave
xchg
xchg
stos
js
aam
test
and
xchg
and
or
int
fsubs
xor
rcrl
inc
cltd
inc
jle
daa
stc
das
mov
out
add
add
aas
inc
adc
sbb
sub
scas
jns
and
sub
test
or
sahf
fmuls
lods
sbb
cmp
inc
incb
cmp
and
mov
outsl
sbb
jb
pushf
push
push
jns
mov
sub
xor
lahf
jmp
lahf
xchg
fnstenv
mov
clc
cmp
dec
cmp
push
lea
xor
imul
mov
push
add
leave
mov
xchg
sbb
inc
xor
js
add
divb
or
movsl
ret
fistl
adc
mov
inc
inc
pop
je
out
ljmp
rcrb
mov
out
scas
sbb
ljmp
stos
notl
out
cmp
mov
ret
rorb
or
ret
dec
push
out
andl
xor
mov
arpl
push
xchg
xchg
mov
inc
inc
cmp
cmc
xor
mov
fbld
push
mov
push
mov
lret
popf
inc
nop
xchg
out
stc
push
inc
test
stos
leave
jae
mov
inc
dec
addr16
shrl
gs
mov
and
xchg
cmp
add
hlt
dec
stc
pop
imul
xchg
push
push
jecxz
sbb
mov
jp
dec
add
adc
push
loopne
xchg
ret
js
ljmp
iret
mov
clc
stos
lods
leave
xchg
push
cmpsl
jb
jmp
add
andl
jecxz
push
push
stc
std
hlt
iret
sub
in
sbb
je
sahf
mov
mov
cmp
or
pop
inc
xor
out
jb
jae
fwait
roll
or
sbb
cld
je
fmul
rolb
jp
enter
jae
dec
in
iret
sbb
inc
add
push
jne
xor
insl
add
adc
movsl
sbb
sahf
ficoml
stc
mov
pop
push
fcmovu
mov
and
insl
out
mov
fisubrl
xchg
jbe
pop
call
pusha
pop
dec
lcall
js
sub
push
adc
out
das
jno
inc
pop
ds
daa
mov
sahf
mov
push
lods
push
in
sarb
stos
adc
pop
int3
out
pop
cmc
in
cmp
fildl
clc
insb
in
je
xor
inc
nop
pop
or
sub
mov
cmp
and
push
dec
decl
fisubl
callw
and
jl
rcl
fistps
inc
lret
clc
shll
dec
aad
lcall
sarl
xchg
fcomi
leave
inc
stos
push
fisubrs
scas
jno
rcr
cli
fisttpl
lods
in
cwtl
inc
in
adc
sahf
sahf
lds
or
mov
mov
js
jmp
push
push
adc
xchg
in
sbb
inc
xchg
sbb
xor
mov
out
daa
lea
leave
lcall
repz
or
sub
outsb
les
test
sbb
fwait
pushf
lds
lds
and
lret
inc
push
mov
pop
fmull
dec
out
cmp
notb
cmpsl
rclb
sub
sub
push
fisubrs
xchg
mov
ljmp
push
fcomps
jmp
pop
inc
int
jb
sbb
lds
mov
push
mov
or
lret
data16
adc
gs
adc
xchg
pop
dec
pop
aam
stos
insl
adc
jp
mov
jecxz
andl
inc
sub
lods
or
mov
sbb
cmc
jo
idiv
add
mov
scas
outsb
and
dec
xor
ja
stos
or
fucomip
adc
pop
sub
lods
mov
lcall
addr16
push
in
push
sarl
das
test
movsl
mov
and
fs
ljmp
xor
xchg
movsb
aam
xor
xlat
movsl
mov
lcall
daa
sahf
or
push
mov
push
faddl
dec
int3
inc
dec
je
aad
mov
frstor
sub
mov
mov
inc
dec
in
xor
xor
into
in
je
rcrb
int3
cmp
mov
cmp
movsl
mov
rcr
push
mov
mov
dec
out
ret
cmp
cmp
mov
shlb
push
xor
daa
adc
aas
insl
outsb
cmpsl
xchg
dec
in
xchg
jle
dec
stos
add
jo
push
clc
jne
addr16
iret
out
mov
pop
jmp
ret
inc
sbb
int
sub
sub
das
mov
xchg
sbb
sub
push
add
jno
loop
imul
outsb
sbb
lret
sbb
xchg
bound
cmpsl
imul
insb
jbe
popa
sub
arpl
lcall
jg
gs
insl
dec
adc
adc
inc
adc
das
xchg
xor
out
in
popl
cmc
lret
idiv
jno
sahf
push
pop
stos
in
jo
xor
loop,pt
mov
sub
sarb
std
loopne
out
and
push
mov
rcrb
inc
push
mov
rolb
mov
adc
cmpsl
vcmpss
xor
cs
mov
xchg
insl
lret
and
lea
pushf
aad
shll
add
test
add
stc
scas
xchg
iret
jg
aas
cli
stos
mov
cmp
aas
sub
sub
dec
mov
or
aad
das
gs
lds
daa
lahf
push
and
adcb
mov
fld
lods
test
cmp
test
in
jnp
cmpsl
out
xchg
xchg
xchg
gs
mov
mov
aaa
fmulp
mov
sbb
mov
jb
mov
push
dec
mov
hlt
repnz
fbld
or
call
add
or
xchg
pop
aad
fldt
jmp
shlb
pop
cld
add
ss
out
jge
dec
jnp
ret
or
sub
lcall
push
push
and
sub
and
in
test
std
jecxz
enter
cmp
call
gs
or
xor
and
das
inc
or
xchg
sahf
sbb
xor
inc
sbb
icebp
ja
xchg
jo
popf
lea
inc
jnp
push
sti
adc
mov
in
mov
ds
push
lcall
fstps
and
lcall
cmp
aam
xchg
cmc
push
in
lods
push
fstpl
pop
push
xchg
pop
add
mov
aas
push
daa
pop
lret
in
dec
xor
inc
jne
lret
stos
xchg
pop
hlt
test
test
jecxz
stc
pop
inc
cmp
and
outsb
sbb
and
mov
pop
xchg
cltd
pop
add
lret
cmp
adc
xchg
jns
and
mov
jg
gs
mov
xor
or
sbb
out
rcrb
rcll
mov
adc
xchg
fdivrl
xchg
popf
sti
stos
das
aas
ds
jmp
mov
cmp
sub
pop
fwait
andl
fcoms
pop
inc
mov
loop
inc
dec
in
or
push
add
adc
inc
loopne
leave
mov
cmpsb
lcall
jecxz
into
cld
cmpl
pop
pop
jp
push
sub
add
add
jbe
vcvttps2dq
sahf
inc
pop
clc
cmpsb
lock
lods
shlb
call
sti
inc
bound
push
push
sbb
inc
cmpsb
push
test
pop
cmpsl
insb
insb
cmc
jg
add
in
insl
jbe
cmp
out
pop
lcall
mov
imul
sahf
inc
xchg
stos
pop
rorl
lods
sub
sub
push
imul
add
push
mov
clc
addr16
js
daa
inc
test
pop
je
mov
js
rorb
xchg
sbb
std
inc
push
jne
addr16
fisubrl
cwtl
repz
jno
stos
bound
invd
lret
jb
out
or
addb
adc
cli
cmp
stos
icebp
mov
cmpsb
popa
stos
add
shlb
loopne
lock
into
lcall
xor
mov
test
lods
push
sub
insl
fiaddl
and
das
inc
repnz
fdiv
cmp
pop
out
dec
xchg
mov
jnp
call
mov
rclb
and
ret
jae
push
or
xchg
add
mov
xchg
cmc
xchg
daa
test
sub
mov
sub
dec
out
dec
xchg
aas
mov
and
imul
mov
mov
lock
mov
aaa
jecxz
ret
inc
pop
dec
xor
pop
push
mov
cwtl
and
push
mov
stos
fimuls
lods
jl
repz
outsb
daa
xchg
popf
push
sub
ljmp
push
bound
mov
dec
adcb
jp,pn
push
dec
push
mov
and
repnz
jge
add
or
or
out
mov
sub
add
insl
adc
jmp
and
shrd
cld
fisttps
rolb
mov
xchg
mov
push
sub
rorl
inc
jne
adc
outsl
cmp
test
int
sti
lahf
mov
aas
sti
push
mov
lods
in
bound
jp
inc
xor
sub
stos
jno
jp
jle
sbb
jbe
cs
fcmovbe
shrl
pop
mov
xor
add
popa
mov
xchg
call
mov
sti
mov
das
xchg
or
xor
test
fsts
ja
fdivl
adc
clc
imul
sub
daa
sub
cmp
mov
push
push
movsl
fisubs
leave
add
mov
imul
mov
push
cmp
mov
shlb
dec
nop
aam
js
mov
insb
and
mov
int
ret
jge
push
xchg
jne
sub
dec
cmpsl
mov
and
cmp
test
gs
js
pop
repz
fstl
fiaddl
movsb
aad
pop
mov
and
jge
daa
data16
fucomip
add
sahf
out
stc
aam
cmp
xorl
sbb
adc
arpl
jmp
test
subl
and
xchg
pop
and
mov
xor
out
cmpsb
mov
out
or
bound
insb
nop
test
mov
mov
imul
pushf
xor
loopne
or
in
xchg
mov
xchg
push
or
xor
sbb
lahf
mov
movsb
popf
shll
xor
mov
inc
mov
jb
push
xor
popf
add
inc
bound
inc
roll
push
cmpsb
popa
lea
popa
sbb
icebp
les
adc
in
js
mov
push
push
mov
adc
fstp
inc
sbb
push
inc
and
inc
or
cmp
push
pushf
cmp
mov
push
cmc
loop
movsb
or
lcall
das
cmc
xor
mov
daa
out
stos
adc
imul
sbb
cwtl
dec
adc
or
jno
cmc
mov
jge
inc
lods
cmc
aaa
decl
mov
stc
and
push
adc
in
sbb
popa
inc
xlat
lretw
fsubs
xchg
xchg
cli
dec
jge
xchg
inc
xlat
testl
out
lahf
mov
xor
movsl
fldt
mov
mov
fs
mov
popl
inc
or
in
sub
xchg
repz
lods
mov
sub
mov
add
jp
in
in
pop
inc
and
sub
mov
shlb
cs
lods
jno
sbb
mov
mov
leave
add
adc
fildll
adc
jge
lods
xchg
dec
add
dec
mov
sub
into
mov
dec
into
rorl
ror
and
pop
dec
pop
dec
fwait
jne
rol
sbb
push
push
add
popf
iret
in
xor
and
sbb
stos
fsubrs
outsb
pop
dec
and
dec
fsub
bound
or
andb
arpl
pop
sbb
cmpsb
jle
mov
cwtl
inc
imul
pop
mov
jns
inc
insb
jge
inc
out
cmp
test
mov
fistps
test
pusha
push
push
addr16
push
stos
mov
cmc
push
mov
imul
shl
mov
addr16
roll
les
test
fxam
inc
push
scas
scas
pop
jp
xor
dec
add
aam
inc
xchg
lret
mov
cmp
ds
cmpsb
jb
lcall
mov
mov
xor
js
iret
dec
and
rorl
adc
add
add
and
dec
icebp
mov
push
pop
push
mov
mull
cmp
stc
ret
sub
out
push
stos
mov
push
mov
fwait
xor
cmpl
arpl
outsl
negl
xorb
cltd
icebp
in
mov
xchg
mov
and
lret
mov
push
jp
adc
out
jg
movsl
je
lcall
int
push
sbb
push
in
xchg
dec
idivb
in
push
mov
imul
orb
ret
sbb
lcall
xor
aad
or
shrl
cmp
imul
sub
loopne
andb
fcoms
add
mov
imul
jae
pop
popa
or
fnstenv
in
mov
mov
xor
cltd
shlb
lcall
test
cld
inc
mov
nopl
subb
stc
xchg
in
clc
test
pop
stos
inc
cmp
in
inc
jecxz
xor
sub
jae
pop
xor
call
lods
lds
add
pop
jae
xlat
add
xor
outsl
mov
sahf
test
ret
lds
rcll
or
bound
cs
loop
lds
fnstenv
dec
fistpl
xor
pop
scas
mov
stos
pushl
aaa
xor
fcom
sbb
cmp
sub
lods
loope
fnstenv
int3
pusha
inc
int
test
insb
mov
loop
mov
dec
sub
movsb
int
or
test
pop
pop
mov
sub
adc
mov
cltd
mov
or
xor
sbb
mov
pop
and
mov
jmp
mov
xchg
jb
lahf
dec
adc
in
dec
icebp
push
mov
add
shlb
mov
scas
into
repz
and
mov
push
inc
loope
lock
xchg
xchg
aas
mov
rcll
mov
rcr
pop
paddsb
jo
insb
sbb
inc
xchg
pop
mov
in
leave
ss
or
rcrl
fisttpll
mov
mov
subl
pop
xchg
cltd
lock
pop
mov
add
hlt
enter
mov
rorb
fs
es
out
or
pop
daa
xchg
insb
pop
xchg
sti
movsb
fwait
pop
push
mov
movsb
fidivl
shl
popf
and
add
cmp
testb
xchg
fstp
mov
dec
sbb
xchg
mov
and
ljmp
jmp
es
cwtl
cli
cmp
xchg
xor
out
in
inc
mov
dec
outsb
or
cli
and
mov
div
scas
ja
cmp
pop
das
int3
pop
pop
adc
lea
notl
outsl
pop
jl
imul
mov
shrl
or
cmp
xchg
hlt
mov
out
xchg
loopne
sbb
mov
mov
cmc
cmp
daa
ret
dec
mov
test
insl
sub
mov
cmpsb
xor
repnz
rorl
dec
loop
sub
lock
xchg
and
adc
sub
in
cmp
daa
sbb
jp
loop
xchg
or
xor
inc
inc
test
sahf
add
cmc
xchg
aam
push
or
cs
shl
push
ret
arpl
jo
popf
jne
insb
adc
sub
adc
mov
sahf
mov
notl
push
imul
sti
fs
fiadds
cmp
or
jae
mov
sub
dec
mov
cmpsb
xchg
sbb
mov
aad
mov
popf
daa
mov
cmp
pusha
cmp
cmp
cmp
jns
lahf
call
cwtl
sbb
pop
ljmp
add
jmp
mov
xchg
inc
pop
lret
xchg
lods
rorb
movsb
fcmovnu
adcl
xlat
test
and
fcomps
lcall
cmp
sti
mov
out
js
inc
in
roll
mov
out
jnp
pop
stos
pop
add
outsb
cmp
inc
stos
in
mov
fnstsw
notl
xlat
jge
lret
push
push
adc
outsb
mov
out
cmp
sar
psadbw
lock
and
fldl
movsb
cltd
sti
ficoml
enter
mov
pop
mov
mov
jae
hlt
std
aaa
cs
ds
out
xor
negl
add
stos
xor
ret
mov
outsl
add
xor
inc
jns
pop
adc
mov
int3
push
jae
cmp
sub
adc
cmp
mov
aam
sub
fsts
sbb
lret
sahf
dec
outsl
dec
repnz
outsl
mov
push
adcl
xor
popa
xchg
cwtl
lods
decb
cmp
subb
push
adc
pop
fdivl
jno
jle
leave
xor
rep
sub
lahf
pop
push
test
xchg
jnp
lcall
cmp
loope
lds
push
jle
out
scas
out
jecxz
popa
sbb
fcompl
xor
cmp
xor
mov
dec
and
jbe
test
jg
clc
stos
cwtl
bound
mov
or
lcall
imul
clc
mov
fildl
test
call
add
loope
outsb
hlt
cmp
in
adc
adc
xchg
es
adc
cmc
and
push
psubw
lret
inc
mov
push
xchg
mov
inc
mov
mov
or
test
jb
rcrl
mov
inc
jno
jg
jbe
inc
inc
push
test
stc
pop
xor
cwtl
lss
jae
imul
jno
setae
mov
cmp
call
cwtl
int
lock
or
jle
xor
push
fmulp
mov
mov
jb
lods
outsb
shll
or
jmp
push
mov
pop
cmp
and
std
dec
lcall
inc
leave
aad
dec
mov
add
daa
xor
mov
dec
movsl
mov
and
fsubrl
pop
push
xor
divb
lahf
jno
add
pop
fsts
pop
cmp
push
arpl
pop
add
ljmp
test
rclb
jae
ds
mov
clc
xor
push
ds
and
shll
mov
push
jle
or
sub
or
add
xor
inc
push
mov
push
push
mov
negb
mov
sub
in
and
sti
push
cmp
xchg
dec
nop
pop
shlb
lret
adc
jae
cwtl
decl
pop
mov
cmp
xor
cmp
lcall
pop
sbb
popf
pop
and
inc
push
aam
pop
jecxz
jg
shrb
stc
fmuls
mull
shr
push
dec
dec
mov
shl
idiv
xchg
inc
es
xchg
lret
jecxz
mov
inc
ljmp
stos
cltd
sti
mov
popa
movsb
fld
inc
sub
loopne
mov
mov
sti
cltd
adc
imul
cwtl
rep
push
subb
sbb
and
sub
xchg
clc
pop
outsl
cs
inc
int
rol
shll
add
fwait
test
add
inc
sbb
sub
push
daa
cmpsl
loope
cmp
xchg
or
mov
pop
idiv
js
sub
sbb
ret
dec
pop
or
sbb
shrb
dec
andb
and
xor
shrb
and
test
jmp
or
in
adc
out
xchg
ret
xchg
rorb
pop
mov
inc
mov
push
push
out
sub
iret
in
aam
cli
dec
shlb
xchg
sbb
cmp
decl
out
jp
icebp
push
ja
ret
pop
jbe
adc
dec
mov
add
lret
inc
mov
add
xchg
xchg
cltd
mov
sub
lret
jle
pop
aad
push
notb
inc
scas
and
leave
xchg
pop
jbe
mov
fisubs
cltd
mov
jecxz
rcr
sub
aas
xlat
arpl
jb
loopne
jg
jl
rol
insb
movsl
dec
das
addr16
lahf
mov
add
cli
lcall
outsb
sub
rolb
cmpsl
inc
push
xor
adc
sbb
jg
loopne
test
pop
test
shlb
jle
mov
fstpl
add
cmpsl
inc
mov
fstpt
pop
dec
cmp
xchg
ret
push
popa
cs
jns
lods
sbb
fstps
je
mov
setl
xorl
into
mov
push
arpl
pusha
ljmp
out
pop
sub
push
in
mov
push
xor
push
and
fucomp
test
outsb
and
lods
shll
jmp
cltd
mov
and
mov
rclb
out
mov
mov
dec
sbb
nop
xor
daa
jns
pop
or
cmp
and
loope
ja
negb
push
pop
jle
jne
sub
stc
jge
pop
push
jns
cmp
jno
mov
sub
insl
shll
mov
sbb
test
data16
mov
or
lret
add
sub
dec
clc
cmp
inc
add
xchg
loop
adc
or
jmp
jle
fiadds
mov
arpl
sbb
adc
data16
test
add
cmp
adc
data16
adc
mov
addr16
xor
enter
mov
add
test
jnp
scas
dec
shrb
mov
pop
das
and
repnz
pop
cwtl
das
les
clc
sahf
push
xchg
rcll
push
pusha
movsb
xchg
test
nop
mov
cmp
sbb
mov
mov
jbe
sub
inc
aaa
movsl
test
shl
roll
movsb
pop
cmp
lods
xor
mov
push
dec
cmp
adc
jmp
jnp
xor
out
push
sti
inc
inc
sub
inc
xchg
clc
loopne
gs
push
in
or
aaa
dec
shlb
and
jae
xchg
in
xchg
pusha
and
fstps
pop
mov
add
cwtl
out
js
repnz
dec
inc
dec
or
nop
nop
jns
mov
mov
xchg
cmp
pop
sub
dec
int
push
subb
js
adc
fistps
mov
fidivrl
pop
lahf
jnp
ds
adc
in
jnp
loop
mov
cmovns
nop
test
subb
mov
or
ret
adc
sub
xchg
jmp
dec
jb
fwait
xor
xchg
pushf
leave
cmp
add
lds
rolb
sbb
lds
loop
mov
repz
push
cwtl
ret
xor
icebp
xchg
movsl
jle
arpl
sbb
shl
and
and
data16
mov
and
jo
or
sahf
jp
mov
sub
pop
fsubrs
lock
mov
clc
jbe
add
and
sbb
in
stos
jne
nop
dec
mov
xchg
sub
cmpsb
mov
sub
mov
dec
cltd
xchg
xchg
pop
mov
rcrb
subl
push
xlat
dec
mov
xor
popf
pusha
push
and
xor
or
xchg
sbb
movsl
push
or
mov
cmpsl
pushf
dec
dec
fs
movsb
fs
jb
sti
aas
mov
insb
dec
sbb
fs
cltd
push
daa
sbb
pop
pop
mov
cmpsb
xchg
mov
and
add
pop
aad
fildl
push
or
aas
mov
mov
and
xchg
push
ds
mov
popa
notb
repnz
mov
cli
mov
inc
movsb
and
push
in
out
lret
sub
ljmp
dec
dec
xchg
sti
push
and
cli
clc
jb
mov
ret
fisubs
add
ss
je
hlt
test
daa
mov
in
notb
push
pop
in
jg
jnp
scas
push
jno
int3
les
loopne
jb
stos
gs
int
cli
scas
test
push
push
les
repz
fisubrl
in
sar
mov
adc
pop
dec
or
and
repz
push
hlt
enter
sub
mov
pop
ficomps
xor
fadd
jno
jmp
ljmp
adc
jns
pop
mov
aaa
pop
inc
or
ds
pop
sbb
jge
adc
rorl
loopne
mov
pop
repz
stc
mov
sbb
xchg
mov
iret
mov
ret
adc
mov
xor
cli
lahf
loopne
jmp
movl
fcom
mov
jb
mov
aas
cmp
push
push
mov
lea
pop
call
jae
dec
mov
xor
mov
insb
pcmpeqd
pop
push
imul
or
subl
pusha
lods
xor
xchg
xchg
mov
and
jo
dec
insb
sub
and
sub
out
sbb
call
ret
fdivl
jns
cmp
mov
out
lret
sub
push
lods
cmpsb
insb
mov
arpl
jno
shrl
icebp
fbstp
mov
jle
out
jns
inc
adc
aas
sub
jle
jne
cmpsb
mov
xchg
inc
xchg
add
daa
xchg
push
jmp
fdivrs
sbbb
adc
mov
push
sbb
sub
mov
fistps
cmc
lcall
hlt
gs
cmp
adc
mov
mov
iret
sbb
leave
add
inc
ja
sbbb
icebp
scas
outsb
push
cmpsb
fidivrl
mov
add
es
fyl2xp1
in
call
mov
push
ds
add
mov
aas
jl
loop
or
repnz
ror
scas
sub
out
loopne
jno
fdivl
cmp
mov
stos
xor
movsl
rol
test
ret
ss
cld
sub
mov
insl
mov
add
mov
mov
icebp
push
and
sub
sub
push
loop
dec
call
shlb
mov
xchg
dec
mov
mov
xor
xor
dec
xorl
cmpsl
out
ja
dec
xchg
lds
fistpll
sbb
mov
adc
sbb
push
lods
push
rcrb
xor
xor
and
loopne
inc
popa
cmp
movsb
ljmp
aad
iret
clc
adc
dec
call
jbe
inc
rcll
into
or
lret
xor
in
loope
push
mov
add
cmpsl
fcmovne
sbb
ljmp
xor
jo
ret
push
iret
adc
sarb
sbb
cwtl
fwait
roll
ds
fchs
repnz
mov
cld
and
jmp
or
inc
fiadds
lcall
push
mov
mov
cltd
inc
cmp
dec
popf
fs
mov
add
xchg
push
inc
xchg
push
jmp
rcrl
je
stos
mov
pop
pop
adc
jbe
cmpl
test
js
pop
into
cmp
cmp
dec
or
shlb
xchg
scas
mov
imul
mov
sub
and
faddl
inc
or
mov
ret
ss
dec
mov
ret
shrl
fwait
sbb
xlat
jle
das
lods
leave
mov
lahf
sbb
lret
jp
loopne
sbb
call
or
lret
dec
out
pop
das
fsubs
pop
jne
jp
sbb
cmp
neg
outsb
cwtl
inc
mov
ret
cmp
xchg
or
mov
out
test
jae
mov
xchg
lahf
into
aaa
lret
xor
and
pop
mov
dec
bound
pop
cltd
sub
sbb
pop
iret
enter
jge
push
xor
mov
out
mov
int3
dec
mov
call
xor
das
or
adc
xchg
xchg
sbb
and
mov
or
pop
sahf
lea
int3
or
push
sbb
stos
ss
call
and
mov
push
mov
lods
decl
push
push
mov
fxam
loop
mov
icebp
mov
aas
stc
aad
push
inc
test
fldt
clc
loopne
mov
out
fwait
jle
stc
xor
cwtl
jae
aad
shr
fistps
test
or
adc
pop
dec
push
outsl
mov
mov
xchg
out
sub
and
sahf
cld
stos
fstl
or
dec
or
shll
lcall
mov
stos
cli
in
clc
jl
mov
mov
xor
sub
xchg
push
xor
inc
repz
dec
inc
push
mov
or
out
xor
jl
fnstenv
pusha
adc
roll
arpl
cmp
xchg
dec
push
das
lods
mov
sarl
adc
outsl
fnstenv
clc
sbb
pusha
dec
mov
fidivrs
push
mov
sub
inc
xor
ja
fidivl
mov
out
out
mov
imul
pop
adc
mov
pop
xchg
xchg
or
inc
pop
insl
xlat
ds
jg
sbb
jmp
cmp
push
lock
ss
fs
push
mov
testl
mov
aam
lock
pop
xchg
inc
clc
iret
mov
popf
insb
aam
dec
in
inc
test
dec
xchg
fcom
dec
mov
xor
insb
add
xor
cmp
cmc
push
loop
push
call
mov
xchg
push
push
adc
mov
or
adc
leave
sti
insb
dec
outsb
fwait
dec
xchg
sahf
lock
aas
bound
push
fisubs
std
inc
mov
addl
push
add
lods
sub
xchg
push
add
xor
daa
xor
jge
and
cmpsl
and
pop
mov
nop
fstpl
fisttpll
or
mov
lea
jecxz
scas
sub
cmp
push
add
iret
sarl
fwait
inc
cmp
sbb
sub
mov
add
dec
aas
ret
mov
cmc
div
jmp
adc
lods
or
bound
imul
xor
incb
mov
mull
push
push
mov
movsb
jmp
idiv
sbb
mov
xchg
out
jns
ret
stc
jecxz
and
lahf
mov
mov
repz
dec
testb
mov
cli
mov
arpl
loop
shll
imul
dec
into
movsb
jno
jne
sarl
push
xchg
mulb
stos
shlb
stos
xor
repnz
out
pop
mov
jns
lea
sub
mov
push
jmp
rolb
push
stos
outsb
pop
dec
test
div
and
mov
movsl
into
adc
and
mov
mov
mov
and
mov
shl
filds
pop
fwait
or
mov
lock
lods
mov
icebp
loope
pop
adc
mov
repz
pushf
jmp
cwtl
sbb
imul
sub
stc
hlt
or
pusha
pop
mov
or
mov
xchg
bound
mov
stc
gs
mov
sub
inc
shlb
int
fwait
jl
mov
inc
xchg
inc
pop
cmpsb
mov
adc
imul
xor
in
iret
xor
push
in
roll
xchg
in
movl
inc
scas
dec
test
cmc
inc
repz
pushf
mov
push
push
adc
inc
leave
push
inc
xchg
iret
xchg
shrb
dec
jo
xchg
std
sub
das
out
sbb
in
fxam
add
xor
fildl
cltd
sbb
lods
mov
out
aaa
frstor
jp
lods
xchg
or
dec
sub
or
sti
clc
js
mov
faddp
movswl
cltd
or
mov
repz
aad
inc
push
xchg
lret
push
mov
mov
jno
inc
insb
inc
clc
jge
lods
sti
push
adc
vmovups
mov
xchg
cmpsl
negl
adc
cmp
shrb
sti
stos
lods
scas
inc
adcl
and
mov
sub
pop
aaa
and
push
fldz
mov
cmpsl
ja
cs
fwait
xchg
inc
xor
imul
andb
pop
movsb
stc
jne
sbbb
xchg
mov
mov
out
das
and
jg
pop
xchg
mov
inc
aas
sub
push
movsb
imul
or
push
sub
call
lds
in
loope
mov
dec
inc
xchg
iret
sbb
pop
pop
adc
xor
mov
adc
into
cmc
mov
repz
test
ds
sbb
sahf
jns
mov
test
mov
movb
aaa
mov
jl
xlat
idiv
dec
jle
shl
pop
out
adc
iret
jnp
jbe
and
lea
fildl
adcl
mov
mov
stos
ret
cmpsb
pop
mov
repnz
jnp
lcall
mov
fucomip
or
fs
inc
push
std
stos
sub
mov
cld
pop
mov
mov
dec
add
popa
dec
jp
in
insl
xor
ret
jmp
jo
in
jmp
push
movsb
xchg
pop
jg
mov
out
js
mov
aas
push
pop
dec
out
xchg
push
inc
cld
mov
sub
xor
jmp
pop
mov
xorb
push
je
test
ret
push
mov
or
in
adc
push
daa
or
mov
push
sub
lret
loop
sbb
mov
and
jg
xchg
inc
test
fidivl
iret
std
mov
pop
pop
push
mov
push
out
int
cld
arpl
jnp
cwtl
cli
es
push
or
and
xchg
sub
mov
repnz
sarb
fwait
jo
ret
adc
scas
adc
or
and
mulb
cs
mov
pop
std
stos
loope
movb
cmpsb
mov
testb
push
pop
sarb
xchg
insb
xchg
cld
add
movsl
inc
sub
push
pop
jp
popa
dec
cmp
fldt
lret
add
pop
gs
add
repnz
outsl
lea
rolb
adc
comiss
loop
cmp
inc
repz
push
push
lcall
pop
lods
nop
pop
and
mov
arpl
cmp
jp
pop
sarb
and
fs
outsl
test
mov
xchg
cs
xchg
or
or
mov
sub
clc
adc
push
jge
mov
call
mov
adc
int
fcomi
cmc
movl
shlb
add
jecxz
nop
xlat
add
sub
sub
mov
in
xor
pop
cli
loop
aam
mov
pop
addb
cmpsb
lods
aad
fcoml
lods
cmp
jmp
hlt
pop
mov
mov
pop
push
ljmp
jle
lcall
lea
insb
jno
and
stos
mov
and
xchg
fcmove
jno
mov
outsl
sub
jo
add
ror
fisttpll
scas
stc
insl
pop
pop
out
movsl
pop
sbb
pop
jecxz
push
xor
cmp
das
jb
mov
pop
xchg
orl
sti
adc
mov
popl
xor
mov
test
cmpsl
rolb
mov
mov
sbb
fildl
add
std
push
add
jbe
test
cmpsb
sbb
jnp
outsl
mov
shrb
clc
dec
nop
sahf
aam
inc
lret
mov
je
cmp
sub
sbb
add
repz
add
arpl
aad
ljmp
xchg
or
mov
repnz
fsubrl
jnp
popa
sub
mov
addr16
sub
sbb
dec
mov
js
xchg
mov
mov
dec
sub
xchg
test
pop
cmc
mov
dec
jns
or
jbe
mov
subb
sti
shrb
ret
popa
cmp
jno
shll
ljmp
sub
xor
or
mov
mov
lock
jl
add
add
or
lahf
and
sub
jecxz
fwait
mov
arpl
inc
sub
imull
dec
pop
cmp
aam
pop
cmp
out
jecxz
add
ja
adc
mov
add
ja
negb
jo
pop
mov
cmp
inc
inc
rcr
cmp
cmpsl
push
inc
stos
mov
aad
cmp
dec
imul
pop
and
jnp
aaa
inc
addb
xor
xlat
inc
mov
push
add
rcr
and
fidivrl
mov
dec
cmpsb
jnp
insl
cmp
sbb
mov
add
cmpsl
pop
mov
add
xor
mov
sub
xor
sbb
out
mov
ret
out
sbb
ret
shr
cmp
rcr
mov
lods
jnp
ds
mov
std
push
repnz
jl
add
dec
jae
insl
shlb
mov
pop
ret
fistpl
insb
loop
test
sub
out
dec
sub
or
xchg
sub
mov
ret
fcomps
push
push
dec
jp
xor
fdiv
xor
and
fdivrl
aaa
dec
outsl
lods
or
into
fcomp
cmc
cmp
add
lahf
rolb
mov
cmp
adc
dec
daa
pop
xor
push
negb
in
xchg
insb
cmp
mov
xchg
xchg
test
dec
lret
sbb
pop
dec
fbld
mov
jb
cli
inc
add
stos
mov
pop
jmp
sbb
push
lret
dec
xor
pop
xor
inc
movsl
dec
xor
xlat
push
outsl
out
add
sti
cmp
aaa
fisubrl
add
sub
add
aam
mov
adc
jecxz
aam
cld
or
test
cmc
dec
xchg
out
pop
lret
dec
jne
push
jns
repnz
cmp
int
or
iret
mov
lret
mov
add
nop
adc
inc
cmp
push
xor
push
add
call
outsl
stos
push
dec
push
mov
shlb
scas
add
daa
rcll
mov
lcall
ds
and
int
dec
aaa
mov
mov
cmpsl
push
jnp
pop
adc
cli
adc
out
or
pop
out
xor
adc
sahf
int3
fcompl
jne
cld
pop
popa
fbstp
sub
and
xchg
mov
int3
xor
call
sbb
adc
and
push
push
inc
nop
into
or
mov
outsl
add
insb
push
popf
sub
out
int
mov
in
jb
jle
sub
mov
int
xor
insb
call
cmp
push
repnz
push
fisubs
xor
repz
pop
roll
pop
pop
aad
jl
adc
jne
jge
cmp
mov
inc
dec
add
sbb
rdpmc
sbb
mov
out
movsb
out
sub
jg
pushf
xor
and
or
cmpsl
and
pop
incb
push
add
push
inc
cwtl
jae
jno
push
jp
add
push
sub
sub
scas
mov
jmp
mov
shl
lret
aaa
imul
adc
cmp
mov
inc
mov
adcl
pop
cwtl
pop
repz
mov
adc
test
hlt
push
int3
lods
pop
imul
mov
sub
push
mov
fs
push
cmp
int3
int3
int3
int3
mov
movsl
mov
xor
ret
mov
jg
mov
iret
insl
xchg
in
inc
mov
dec
loop
add
xchg
test
dec
bound
push
leave
into
fsubrp
sub
adc
sub
jb
mov
mov
mov
sub
jge
idivl
xchg
xlat
xchg
pop
icebp
and
sub
cltd
mov
mov
adc
test
sub
xchg
testb
data16
scas
and
hlt
add
mov
ret
push
lret
fscale
cmp
jl
mov
outsb
sbb
mov
mov
int3
fcmovb
std
aam
loope
adcl
call
jnp
div
pop
mov
pop
or
adc
push
fwait
in
andb
test
fsubl
movsl
idivl
push
xchg
notl
cmpsb
sbb
xlat
mov
ss
ja
jns
or
or
mov
add
cmp
mov
add
push
sbb
sub
rol
fwait
mov
sbb
add
jl
movsb
adcb
outsl
xchg
xchg
xor
pop
popa
mov
jmp
loopne
in
dec
fwait
aaa
dec
sti
iret
pop
stos
ret
add
lahf
mov
aas
fmuls
or
mov
fdiv
gs
push
enter
add
pop
lds
aad
xor
pop
jmp
ret
popf
jg
sbb
daa
fwait
push
out
aaa
clc
jne
and
add
and
insl
push
loop
mov
rol
scas
sbb
cmc
jmp
loopne
aam
daa
dec
fisubrs
notb
dec
sbb
sub
and
jp
pop
xor
cwtl
fwait
xor
fildl
outsb
cmp
jo
jmp
cmp
lret
xor
cmp
cs
out
insb
xchg
or
cmp
aad
sahf
jns
mov
cmp
daa
mov
out
nop
sahf
stos
cwtl
jbe
adc
dec
jge
cmpsl
movsb
aam
pop
test
mov
dec
jmp
ds
data16
xchg
pop
test
cmp
outsb
lret
push
aaa
jl
push
mov
es
in
sbb
leave
vmwrite
fisttpll
mov
test
cmc
js
cmpsb
movsl
push
addb
mov
lretw
cmp
xor
push
push
mov
je
rolb
es
test
insl
jno
ss
and
push
cmp
test
mov
mov
cmpsl
jbe
xor
xchg
jp
lret
in
stos
push
clc
xchg
icebp
jp
in
leave
xchg
ss
mov
and
pop
push
adcl
pusha
and
lahf
sbb
andb
test
in
frstor
xor
dec
push
push
mov
int
in
xchg
in
and
xor
mov
dec
lahf
cmp
or
out
in
push
xchg
adc
xlat
idivb
xchg
jne
dec
mov
lea
pop
or
push
rorw
mov
movsb
inc
lock
jmp
lock
push
xrelease
outsb
push
std
stos
sbb
hlt
and
mov
add
aaa
xor
pop
cmp
cmp
xlat
lock
aas
xor
aad
pop
cmp
push
push
test
data16
nop
fiadds
dec
imul
lock
fs
inc
sub
or
in
jg
in
sbb
fadd
out
or
int3
push
cltd
int3
mov
js
xor
mov
je
adc
mov
xchg
sub
ret
sahf
dec
jg
inc
push
push
and
mov
push
push
pop
pop
jl
into
add
aas
fstps
mov
jnp
in
movsl
xor
jo
pop
notl
in
adc
fisubs
stc
inc
jbe
mov
loope
fimuls
clc
aam
testl
dec
inc
aaa
imul
add
or
cwtl
adc
jbe
out
popa
jne
outsb
repnz
xor
mov
pop
xlat
in
inc
cmp
sti
pop
rcrb
mov
jp
pop
popa
stos
outsb
les
xchg
jl
call
hlt
insl
mov
out
and
pop
pop
jno
jo
pop
ljmp
out
dec
inc
add
add
and
icebp
es
ljmp
inc
push
call
ror
call
sbb
shll
cli
divl
mov
push
jl
popf
sahf
js
jecxz
inc
lock
inc
jns
sbb
into
xchg
add
inc
int3
aas
sbb
mov
mov
and
jne
mov
add
push
daa
add
inc
push
ss
or
loope
sub
sbb
mov
and
mov
addr16
fs
cmpsb
lods
lahf
jne
pusha
jo
hlt
pop
scas
xor
int
jecxz
cmp
fisubrs
movsl
shll
mov
repnz
xchg
mov
aam
add
jge
int3
mov
push
sbb
mov
sub
xor
or
scas
sbb
cmp
inc
aas
mov
aam
sub
add
or
rcrb
mov
shrb
mov
cmp
cmp
and
cmp
mov
into
push
xor
cli
scas
mov
call
mov
pop
xchg
jmp
fcmovnbe
inc
dec
xchg
jl
cli
xchg
aam
push
mov
sbb
sub
adc
popa
idivl
lcall
insb
jmp
adc
or
add
sarb
or
mov
or
sub
push
pop
clc
fwait
add
add
push
lods
fcoml
mov
mov
xchg
adc
sar
push
fidivl
movsb
inc
popa
jne
inc
xor
cwtl
mov
hlt
sarl
jbe,pn
mov
fstpt
std
push
push
cmp
adc
mov
mov
fildll
das
or
push
dec
jecxz
jmp
insl
cwtl
adc
lret
or
dec
add
in
adc
subl
lock
lods
jmp
addl
stos
push
xlat
inc
shll
jnp
pop
loope
arpl
iret
pop
add
loop
jecxz
stc
jecxz
sbb
aas
daa
pushf
xor
rclb
jns
push
add
popa
sub
inc
ret
mov
dec
xlat
fists
pop
sub
jp
imul
add
int3
mov
dec
xor
movsl
lret
setne
test
inc
cmp
pop
mov
adc
add
xchg
int
sub
and
outsb
jmp
cld
pop
stc
sahf
test
scas
in
bound
mov
mov
and
dec
clc
out
xchg
lds
sbb
dec
adc
and
add
push
mov
dec
mov
fistps
bound
jle
iret
fdivs
loop
inc
repnz
or
xor
les
adc
js
mov
test
cmp
mov
dec
pop
push
je
pop
stc
outsl
pusha
xor
ror
xor
das
hlt
cmpsl
sub
inc
xchg
sbbl
shr
insb
xor
push
mov
outsb
xlat
cmp
out
insb
pop
iret
sub
push
daa
dec
adc
mov
dec
sbb
shl
cld
aaa
inc
pop
and
test
or
mov
icebp
dec
mov
nop
gs
push
or
ljmp
rcrb
dec
sub
adc
fisubrs
lea
inc
faddl
scas
sbb
mov
or
pop
in
sbb
cmp
je
repnz
xor
adc
and
xchg
pop
out
ds
sarl
shl
sub
rclb
in
and
mov
xor
jl
cmpsl
lds
imul
orl
mov
negb
xor
and
mov
fidivrl
out
mov
or
sub
sbbl
sbb
jecxz
mov
dec
jb
int3
scas
loopne
sub
or
test
xlat
cmp
inc
push
jge
dec
lahf
pop
push
arpl
cli
add
push
out
mov
pusha
arpl
das
aam
inc
adc
lret
insl
test
aaa
jle
mov
nop
in
jmp
push
roll
and
mov
mov
fbstp
add
icebp
mov
clc
jl
push
or
ss
lcall
arpl
sbb
push
jmp
mov
mov
push
adc
add
roll
cmp
or
adcl
movsb
adc
mov
push
sub
or
mov
es
fwait
imul
in
dec
movsl
lock
cmc
pop
or
push
and
add
mov
popl
jmp
cmp
int
or
idivb
in
push
dec
repnz
or
lods
in
sbb
psrld
jp
dec
adc
mov
lock
pop
stos
shll
ret
js
jg
xor
mov
add
lahf
and
sub
jmp
popf
int
sub
int3
dec
je
sahf
fiaddl
lods
jne
add
outsb
aaa
inc
sub
mov
jbe
jge
fwait
pushf
test
sbb
adc
sub
xorl
sahf
cmovbe
cmp
ret
stos
rorb
push
pop
sti
cmp
rorl
inc
lods
mov
jg
daa
xor
jecxz
mov
xor
sbb
test
outsb
mov
xchg
cwtl
aad
popl
xchg
icebp
inc
jo
push
mov
pop
jno
xchg
sti
fimuls
xor
inc
mov
sarl
fwait
loopne
cmp
testb
test
xor
push
or
aam
pop
dec
cltd
clc
cli
imul
cs
jmp
pop
jae
jbe
fcoml
mov
ss
sub
scas
or
sbb
sbb
inc
scas
movb
mov
push
imul
xchg
arpl
push
sti
ss
xchg
push
mov
sbb
pop
jge
aas
mov
call
or
dec
mov
jne
imull
shll
xor
push
roll
mov
sbb
add
movsl
xchg
mov
pushf
xor
jnp
cmpsb
inc
mov
iret
ret
push
fstp
es
addr16
rsqrtps
loopne
adc
pop
dec
js
shr
fldcw
fsub
xchg
mov
ret
lds
bound
loope
lahf
fisubrl
pop
arpl
adc
nop
ret
incl
dec
mov
pop
fs
fbstp
fadds
mov
dec
xchg
call
jmp
fsub
and
add
sbbb
lcall
pop
pop
jne
sbb
mov
push
xor
push
rclb
and
js
inc
mov
adc
ja
mov
inc
and
sbb
sahf
sbb
sub
push
pop
fimuls
dec
imul
push
mov
lock
xor
test
ja
jns
test
fstpl
jbe
shrl
jbe
popf
inc
cwtl
inc
enter
stos
movsl
cld
adc
mov
push
add
cmp
pusha
dec
push
adc
mov
sub
loope
aam
out
jl
pop
ret
pop
pop
out
push
cmc
test
mov
out
les
scas
cwtl
dec
scas
rcr
shrb
xchg
add
scas
cwtl
pop
pop
test
imul
fmul
out
adc
clc
mov
int3
pop
or
add
cmpsl
mov
push
loop
mov
aas
xor
dec
inc
lea
cld
test
jno
aas
pop
mov
bound
int
insb
pop
fwait
and
jno
movsb
pop
repz
jge
mov
cmp
xor
push
movsb
ljmp
or
into
imul
enter
mov
ja
mov
fcoml
or
mov
add
int3
stos
aaa
lods
js
movsl
enter
lds
out
add
and
inc
jno
mov
cmp
mov
fistl
inc
adc
call
mov
aaa
out
hlt
cmpsl
in
xchg
ret
test
or
and
adc
sarb
jae
pop
loop
fwait
bound
test
sub
addr16
aas
and
xor
fcoms
jae
arpl
mov
jnp
negl
loop
je
stc
jecxz
and
jb
pop
jno
xchg
adc
inc
dec
mov
mov
or
sub
cmpl
sub
das
ljmp
dec
mov
xor
call
enter
xor
pop
in
sti
sub
pop
popf
lret
mov
lret
fisubl
loop
pushl
in
dec
or
xorl
jbe
popa
pop
cmp
pop
lahf
or
or
mov
or
inc
mov
test
sbb
lds
inc
cwtl
arpl
or
and
xchg
or
mov
add
outsl
xlat
inc
movsl
mov
imul
in
sub
lock
mov
or
dec
push
mov
sar
sub
lods
adc
cmpsb
or
addl
std
cltd
lods
mov
push
mov
popa
or
cwtl
test
hlt
hlt
and
mov
mov
adc
mov
sub
xlat
jmp
push
mov
and
pop
inc
pop
jge
int3
mov
outsw
mov
mov
inc
frstor
inc
inc
push
fcmovu
dec
aaa
nop
lods
loope
lods
jmp
imul
lods
mov
xchg
dec
dec
movb
cmp
mov
sub
xchg
add
inc
aam
std
frstor
insl
cmp
mov
sbb
sbb
pop
std
pop
add
cmp
inc
push
ret
imul
jae
xor
std
divb
fnstenv
ret
add
lods
cld
das
xchg
push
std
std
sbbl
ret
sub
mov
jo
dec
push
loope
cwtl
jg
mov
cmc
test
mov
mov
cmp
pop
fwait
scas
subl
mov
push
pop
jns
aam
add
pusha
call
movb
pushf
call
ljmp
aam
mov
push
jge
repz
lea
mov
outsl
sbb
cli
fs
jne
pop
dec
shlb
pop
xlat
dec
mov
in
mov
dec
xchg
aam
jp
mov
mov
adc
sub
cld
in
nop
aad
iret
jae
js
jnp
adc
sbb
inc
movsb
mov
adc
leave
lods
lahf
fsubs
das
or
clc
fisubrl
loopne
sbbl
push
cmp
add
sbb
pop
subl
and
pop
mov
xchg
aaa
sbb
push
fs
lock
enter
arpl
sub
testb
test
dec
inc
mov
repnz
xor
pop
jnp
pop
fadds
mov
test
xchg
inc
fidivrs
jns
adc
mov
pusha
pushf
dec
add
mov
mov
dec
fldenv
ss
cmp
imul
cmpsl
pusha
sar
mov
dec
jl
je
pop
cs
fldt
or
sub
and
xor
in
movsl
adc
push
lds
inc
jnp
addb
or
lret
lret
out
sub
jge
jbe
jp
and
sbb
je
add
adc
inc
dec
sub
pop
xor
mov
imul
sub
sub
cmp
fwait
lods
ret
xchg
xor
jno
jmp
testb
jnp
es
in
rclb
in
ror
sub
out
andl
cs
dec
enter
pmaxsw
lret
jl
std
and
cld
or
add
ss
xchg
add
mov
cmpsl
mulb
and
lods
into
push
mov
bound
out
push
xchg
data16
pusha
scas
sbb
icebp
loope
jl
sbb
loop
jmp
and
push
fmul
movsb
out
sbb
ds
into
mov
mov
call
cs
mov
jne
inc
outsl
mov
pop
jnp
cwtl
inc
bound
arpl
adc
xchg
shl
mov
pop
push
mov
jne
popf
sti
sbb
into
insl
pushf
ret
lock
mov
push
sbb
sub
xchg
arpl
push
cmp
and
jnp
cmp
push
xchg
xchg
jno
test
jne
cli
and
dec
fdivr
pop
sub
enter
stos
test
add
add
push
int3
mov
out
mov
ja
ja
sub
xchg
fisubrl
idivl
jecxz
xor
and
arpl
adc
out
aas
xor
mov
xor
pop
inc
je
mov
adc
pop
mov
lea
repnz
bound
test
aam
aas
jp
xor
lahf
dec
data16
push
loopne
cmc
mov
mov
adc
push
or
xchg
jo
inc
and
out
inc
in
push
jle
not
dec
adc
loope
dec
shrb
xor
sub
in
mov
int3
inc
pusha
xor
or
xchg
repnz
inc
add
andb
add
and
shrb
or
aam
ljmp
xchg
inc
andb
xlat
movsl
dec
fwait
stos
icebp
jo
sbb
loope
mov
adc
mov
pop
jb
jle
jae
mov
cmp
rolb
in
or
fwait
je
lods
jecxz
fnstcw
and
sub
xchg
daa
or
icebp
push
adc
dec
rcl
mov
ja
mov
jle
dec
push
inc
inc
out
movsb
fxam
lcall
fwait
imull
adc
bound
dec
xchg
push
paddq
inc
fbstp
jbe
test
repz
in
pusha
imul
cli
add
loopne
fucomp
and
fdivp
repz
add
dec
test
out
jne
mov
lret
cli
daa
jne
pop
sbb
mov
jo
push
call
mov
inc
sbb
lahf
xchg
adc
rcrl
xchg
adc
dec
mov
xor
or
mov
sub
or
mov
addr16
or
call
inc
imul
mov
cmp
mov
jp
pop
pushl
and
hlt
cltd
div
test
das
aaa
or
xor
mov
arpl
xor
mov
fsubp
mov
imul
push
loopne
mov
bound
pop
jmp
mov
add
jle
adc
dec
pop
adc
mov
rolb
aam
and
lock
cmp
xchg
jno
mov
cwtl
mov
sbb
cmc
jl
dec
js
mov
mov
jp
std
rcrb
inc
mov
pop
je
pop
xchg
in
jp
dec
fstpt
stos
xchg
inc
or
pop
sarb
ja
das
dec
in
fnsave
outsb
pop
nop
scas
out
cmpsb
xor
sbb
or
dec
leave
adc
push
imul
imul
sub
push
inc
xchg
xor
cmp
stos
lret
push
mov
imul
cld
sbb
cmc
andl
lods
adc
add
push
jo
sbb
mov
test
inc
inc
and
sub
jp
cmp
adc
gs
negb
bound
sbb
rcrl
xchg
sbbb
xor
fcom
add
das
sbb
adc
lcall
mov
inc
mov
sbb
inc
jl
mov
lods
dec
aad
imul
ret
scas
imul
pop
sub
and
decl
fdivl
cld
xor
scas
and
aam
and
xchg
rcrl
inc
lret
jle
ret
js
outsb
pop
inc
sbb
add
daa
cmp
jnp
icebp
jns
dec
cmpb
lea
loop
inc
pushf
or
test
adcl
icebp
and
xor
int3
aad
cmpsl
js
xor
int
mov
sarb
add
mov
fwait
insl
fidivrs
repz
aam
add
loope
inc
filds
cmp
jno
std
lret
push
out
les
jp
adc
sub
dec
dec
and
mov
pop
inc
inc
mov
lcall
jne
mov
sti
insl
aaa
dec
mov
or
test
loop
rorl
cmp
pop
int
push
repz
inc
gs
sub
insl
lea
aam
arpl
inc
jno
push
inc
test
xorb
mov
xor
sub
pushf
repz
sbb
mov
push
pop
rolb
and
lcall
xchg
cmp
and
stc
sub
adc
push
jae
and
movsl
cwtl
xor
and
push
lea
inc
pop
aad
xor
cld
dec
cmp
sub
hlt
sub
addr16
cmpsl
sub
jle
dec
shrl
aas
lret
loope
adc
push
cwtl
cs
sbb
lds
dec
ss
fldl
dec
add
add
mov
inc
sbb
mov
out
das
ret
or
pop
movsb
mov
xor
movsb
into
pop
inc
xor
ret
lods
mov
mov
xor
sti
mov
pusha
and
cmp
mov
es
sub
fst
xchg
xchg
jp
pop
lea
es
inc
xor
mov
xor
pop
and
daa
and
bound
mov
xchg
jne
arpl
hlt
xchg
cmp
push
stos
mov
hlt
jo
or
xor
clc
repz
dec
xchg
jmp
sbb
lock
sbb
pop
in
daa
sahf
add
sbb
xchg
aaa
inc
in
push
ja
leave
pop
push
cmp
fdivrl
xchg
jae
rcrb
jp
sub
outsb
cmp
or
in
mov
call
adc
add
jne
xchg
in
test
outsl
pushf
mov
jl
out
fwait
and
cmc
inc
dec
aam
pop
leave
xchg
mov
sbb
push
fnsave
jo
cmpsl
js
lahf
and
push
push
scas
dec
mov
push
shr
fucomp
dec
loop
jp
popf
sub
popa
fdivs
mov
mov
iret
into
ret
add
fs
cmpsl
pop
sbb
xchg
lods
mov
mov
ret
push
mov
jmp
div
insb
xadd
aaa
popa
clc
adc
xchg
mov
test
cmp
jg
cld
cmp
clc
out
adc
xor
jecxz
jecxz
clc
sub
adc
xor
xor
pop
jge
ror
scas
push
xor
jl
xchg
push
lock
leave
in
jl
and
mov
lret
add
mov
ret
insl
fildl
cmc
test
push
xchg
cld
push
pop
daa
das
aas
mov
movsl
sbbb
jne
xor
adc
out
lret
xacquire
push
push
test
add
pop
daa
mov
test
mov
jo
or
push
insl
in
sbb
add
xor
cmp
outsb
out
mov
mov
and
inc
pop
bound
or
xchg
pop
and
inc
adc
je
jge
inc
jnp
inc
sbb
or
xchg
ffree
fstl
fcmovbe
mov
stos
add
test
and
xchg
ret
xlat
push
rclb
rorb
sahf
int
cli
arpl
cld
clc
inc
sub
inc
xor
jg
sbb
add
mov
fcomp
xchg
mov
out
xor
scas
mov
jb
test
inc
jmp
les
sub
das
insb
in
mov
push
jp
add
fptan
and
ss
sub
or
push
hlt
push
mov
cld
mov
loop
and
jae
loopne
adc
cmp
mov
add
jg
fdivl
daa
mov
push
cmp
arpl
cmp
xchg
gs
xor
cmc
out
out
mov
and
push
mov
call
xor
ljmp
test
xchg
scas
cmc
xchg
xchg
mov
cmp
mov
inc
and
js
cltd
xor
xor
or
bound
and
lret
enter
push
hlt
mov
ret
mov
dec
cmpl
test
daa
xchg
pop
sti
jge
xor
loope
pop
mov
mov
pop
mov
scas
adc
sub
pop
dec
lret
sbbb
inc
and
mov
movsb
imul
pop
insl
or
filds
mov
mov
addr16
clc
leave
cmp
in
jmp
dec
xchg
in
movsbl
jg
fs
clc
mov
pop
enter
xchg
mov
adc
xchg
push
shrb
add
add
jmp
push
jecxz
aam
add
andl
pusha
dec
icebp
or
sbb
out
inc
sub
cmc
movsb
lahf
cmpsb
push
js
xchg
mov
fiadds
jno
rorl
es
fwait
push
cs
sub
addr16
jo
cmpsl
loopne
dec
jl
les
pop
mov
dec
pop
pop
sub
jmp
jecxz
jg
ret
push
aam
jl
xor
jge
sbb
xchg
mov
repnz
testb
dec
data16
mov
mov
dec
mov
ja
leave
movsl
dec
aam
int
jb
imul
mov
leave
and
add
ja
ret
dec
insb
sub
cvtps2pd
cltd
mov
insb
movsl
scas
ds
jecxz
xor
push
adc
test
cmpsl
jbe
out
or
sbbl
ds
loop
ret
push
rorb
mov
adc
adc
lods
mov
mov
jl
pusha
jle
stos
fldenv
fucompp
sahf
xor
shll
dec
lahf
jo
jns
into
stos
sub
lcall
dec
lret
jo
pop
scas
iret
mov
mov
push
pop
mov
cmc
es
push
xor
loopne
lock
xchg
mov
sbb
add
and
or
icebp
push
inc
mov
fs
inc
outsl
leave
sbb
jne
pop
out
pop
mov
pop
xor
mov
icebp
cmp
enter
sub
pop
insl
sbb
in
pop
adc
jb
fimull
ss
dec
inc
mov
ror
xlat
mov
inc
ds
dec
inc
pop
cmp
fstpt
adc
cmp
out
mov
cmpsb
jmp
cmp
add
mov
xchg
test
adc
lret
add
push
jl
dec
add
xchg
xchg
pusha
inc
mov
push
jle
jp
fidivrl
dec
push
je
aaa
jl
xor
mov
dec
push
add
pop
ljmp
je
pop
push
call
imul
fisubrs
lock
mov
or
icebp
dec
rcrb
jmp
subb
add
mov
push
test
mov
out
call
scas
negl
push
sarb
push
xor
nop
dec
push
xchg
sarl
pop
test
push
test
jnp
movsb
adc
or
imul
in
jnp
pop
xchg
mov
idivl
insb
iret
sbb
sub
jmp
out
sbb
jnp
xor
aas
cmp
mov
mov
sahf
jns
popf
lret
scas
dec
insb
lret
push
fucomip
mov
fnstcw
xchg
xor
adc
lahf
sub
push
cwtl
outsl
jp
pop
inc
xchg
add
std
jl
pop
cli
lret
outsb
insl
mov
xor
sti
and
popf
cld
clc
popf
movl
or
insl
pusha
jae
cmc
or
mov
push
adc
das
push
arpl
out
lret
clc
mov
vmwrite
sub
sbb
fwait
or
lret
ljmp
mov
xchg
and
fbld
push
leave
sbb
loope
xor
pop
dec
adc
jge
adc
iretw
pop
lret
inc
test
arpl
mov
xchg
mov
xor
mov
dec
push
cmp
rcr
insl
daa
xchg
test
shll
cmp
cs
movl
jmp
or
dec
imul
shl
lahf
jbe
fimuls
mov
arpl
sub
hlt
jo
push
jns
add
pop
or
pop
xchg
cmpsl
hlt
jb
or
popf
cmpsb
jb
outsb
mov
or
inc
repz
sbb
push
shll
push
lock
pop
xchg
sub
sub
repnz
lods
sub
dec
fadds
inc
dec
jno
xor
or
out
push
mov
repz
push
movsb
fwait
and
push
out
movsb
mov
subb
cld
jl
and
mov
sbb
or
movsb
push
fisubrs
lea
mov
cmc
pop
outsb
lds
mov
jae
data16
insb
in
aad
add
push
push
mov
sub
push
adc
jmp
xlat
cmp
mov
scas
cmpsl
mov
jecxz
jbe
push
xchg
cmp
ds
sub
shlb
aas
mov
rorl
mov
inc
scas
dec
sub
cli
orb
std
insb
adc
xor
fistpl
sub
aam
lcall
into
rclb
out
je
cld
mov
xor
fcoms
xchg
loope
xor
jo
add
sub
and
in
nop
add
mov
jno
and
repz
notl
jbe
inc
jle
iret
mov
and
adc
xlat
push
mov
cmpsl
inc
fwait
mov
leave
test
xchg
sbb
dec
pop
pop
cmp
or
jmp
adc
cmp
pushw
push
aad
icebp
cmp
cmp
mov
xchg
xchg
call
dec
icebp
cs
add
xchg
mov
dec
ds
xor
sar
jge
adc
xchg
sbb
imul
bound
mov
adcl
lret
sub
ljmp
and
xor
jle
mov
push
jbe
jl
shll
hlt
jo
dec
cmp
add
sbb
loop
xchg
pusha
fadd
pop
and
cmp
and
mov
sbb
and
roll
jmp
out
dec
fucom
out
add
mov
inc
imul
xchg
imul
sbb
inc
push
or
lahf
mov
jae
pop
ljmp
xchg
mov
mov
and
fiadds
scas
xchg
sbb
push
dec
nop
mov
ss
sbb
and
mov
lock
loope
pop
mov
outsl
daa
push
sub
add
mov
int3
cmp
jl
mov
jns
pushl
loopne
push
lea
idivb
push
cmc
pusha
outsb
cmp
sub
sbb
sahf
mov
ror
pop
mov
jae
jbe
hlt
popf
testl
cmp
lea
sti
mov
pop
je
cmp
faddl
xor
mov
jl
bound
push
lock
aam
sahf
icebp
push
out
lock
filds
call
out
or
xor
and
pop
xchg
neg
les
sti
push
outsb
outsb
imul
push
mov
orl
rep
je
mov
xchg
mov
rcrb
popa
arpl
inc
cwtl
call
jbe
mov
jp
xor
jp
insb
jle
push
mov
pop
icebp
pop
in
in
push
insb
scas
lods
insl
out
imul
push
push
mov
add
push
getsec
mov
movsl
xchg
es
out
and
xchg
fbld
in
lret
cmp
int3
fstpl
cs
cmpsb
mov
pop
mov
adc
enter
adc
ja
je
pop
lds
cltd
leave
int
call
leave
pop
adc
xorb
xlat
js
or
mov
mov
adc
fs
loopne
scas
imul
cmp
data16
pop
loope
inc
inc
mov
sub
mov
into
mov
out
jg
xchg
and
ret
mov
hlt
inc
lock
ror
jb
sbb
xchg
leave
or
jno
stc
sbb
or
sbb
loope
or
jns
pop
mov
add
inc
mov
insl
shrb
iret
dec
add
fdivs
call
test
sti
loope
inc
aam
and
out
xor
cld
loop
jno
stc
lods
cmpsl
leave
mov
push
pop
cmp
add
dec
sbb
jg
xchg
jle
inc
xchg
rorb
dec
movb
adc
int
js
into
mov
test
jecxz
and
add
int3
fs
mov
mov
sub
repz
xorl
shr
jbe
mov
sarl
xor
sub
sub
jp
repnz
int
pop
mov
adc
xchg
mov
insb
cld
arpl
out
sbb
jge
xchg
pusha
rcr
xchg
cmp
stc
jle
in
mov
addr16
adc
sub
stos
inc
cmp
in
or
test
mov
push
push
rorl
cmp
pop
xchg
leave
or
sub
test
adc
pop
sbb
popf
js
pop
stos
outsl
add
fsubs
cmp
sbb
sub
pop
imul
mov
stc
clc
jl
inc
mov
sub
xchg
outsb
cmp
shlb
mov
test
mov
and
cli
dec
imul
or
test
sbb
lds
jbe
nopl
call
cli
mov
daa
lods
out
sub
mov
js
adc
ret
jge
aam
mov
and
pop
pop
add
clc
pop
pop
pop
ss
or
add
dec
fimull
mov
or
insb
pop
add
iret
pop
jmp
mov
gs
fucomp
dec
loope
xchg
mov
mov
scas
subl
fwait
mov
fldcw
or
mov
sbb
pop
pushf
leave
adc
jns
inc
mov
mov
mul
mov
in
divl
sbb
fs
mov
mov
and
les
and
dec
sbb
adc
inc
idivl
and
mov
sar
xchg
je
cltd
cmp
add
mov
sti
nop
out
sbb
popf
imul
out
fisubs
and
enter
lret
push
mov
rcrb
adc
clc
pusha
and
mov
sbb
xchg
je
cli
insl
loope
sbb
dec
mov
push
jne
adc
mov
xchg
inc
aad
scas
orb
fcomps
repz
lahf
dec
mov
imul
jmp
call
mov
dec
lods
mov
mov
adc
test
or
loopne
rcrb
mov
cwtl
imul
mov
push
pop
rorl
jl
and
popf
enter
add
xor
jnp
cmpsl
mov
mov
xchg
xor
mov
push
dec
out
aam
roll
add
mov
xlat
in
pusha
mov
inc
fwait
add
fisubrl
xor
dec
ret
cmp
add
test
xor
dec
fldz
or
jge
xchg
dec
sbb
push
sbb
inc
sbb
add
rolb
iret
repz
in
scas
enter
cld
push
hlt
mov
xor
xchg
push
dec
hlt
xor
push
into
lret
jle
popa
std
in
cmp
push
sbbb
sub
xor
shrl
pop
mov
adc
aas
jo
aas
mov
cltd
push
mov
mov
jno
and
or
jbe
divps
mov
jb
add
imull
popa
insl
popf
aam
es
outsb
pop
mov
and
xlat
sub
cltd
cmpsb
mov
push
popf
pop
icebp
insb
xor
movsl
jecxz
dec
mov
shll
lods
loopne
add
mov
das
inc
jg
out
jmp
and
fdivs
mov
pop
ret
les
rcrl
inc
jno
adc
loope
lods
pextrw
sbb
sbb
mov
movsl
adc
addl
pop
mov
mov
test
pop
sbb
scas
repnz
ret
push
xor
loop
lret
sub
xchg
or
xor
and
sub
int
fldenv
pop
test
mov
icebp
xchg
push
out
stos
mov
in
or
xor
icebp
shl
mov
cmp
add
pop
addr16
or
sbb
ret
sub
jge
shrb
out
sub
mov
jb
sub
outsl
push
jbe
stc
jno
mov
cmc
push
add
mov
mov
xchg
xorb
arpl
add
pop
adc
mov
pusha
mov
insl
xor
fisttpll
movsl
rorb
mov
int
gs
inc
inc
mov
loope
std
add
mov
jo
mov
xchg
subb
dec
loope
lahf
push
arpl
les
cmp
int3
jae
pmaxub
clc
inc
mov
out
setb
movsl
ret
push
mov
or
push
xor
inc
orb
pop
nop
out
inc
cmp
stos
ljmp
sti
int3
je
pop
adc
std
xorb
clc
xchg
fnstsw
lea
or
fs
lahf
mov
lods
pop
decl
addr16
loop
mov
ss
jo
push
xchg
lret
aam
inc
mov
dec
gs
pop
filds
in
ss
mov
jo
jb
xchg
sub
das
dec
and
ja
cmp
sbb
lcall
xchg
lret
xchg
xor
jmp
lods
inc
les
loop
fildl
pop
and
or
mov
sbb
push
mov
in
sub
push
dec
fimull
scas
ret
add
push
ret
test
mov
out
mov
pop
add
xchg
adc
dec
or
loope
push
decl
sbb
or
lock
sahf
lods
int
xchg
cmpsb
mov
inc
mov
out
pop
xor
pop
pop
jno
ss
mov
call
test
sub
mov
inc
shll
mov
addb
testl
cmpsl
stos
shr
cld
adc
cmp
xchg
and
popl
mov
lcall
fwait
and
xchg
xor
enter
aam
xchg
aas
fcoml
inc
pop
in
daa
dec
filds
mov
mov
mov
inc
cmp
sub
iret
cmp
das
in
aad
mov
push
aad
adc
or
pop
sahf
cltd
mov
ja
mov
je
and
ret
sahf
inc
mov
push
xor
ljmp
mov
fwait
push
into
js
lea
mov
sbb
dec
testb
cmpl
fldl
xor
shl
jecxz
xor
rcl
ret
shl
jp
jmp
add
sub
jbe
sub
shl
cmp
dec
stc
bound
ret
dec
arpl
jle
mov
push
cmp
lret
sbbb
jecxz
into
loop
lock
inc
fmul
jge
stc
push
mov
imul
pop
in
xor
or
clc
int
repnz
mov
hlt
push
pop
int3
mov
insb
insb
jb
out
iret
jb
iret
pop
fadd
bound
mov
mov
mov
xor
sub
inc
cli
sbb
push
imul
adc
or
insl
inc
rclb
cmp
pop
shll
push
fmul
add
cmpsl
cmpsb
jnp
inc
dec
cmp
clc
das
addl
addr16
mov
lock
sbb
or
arpl
ljmp
add
jge
and
inc
sub
fidivrs
das
jecxz
aam
mov
enter
test
inc
mov
pop
sti
dec
insl
mov
jne
movsl
mov
or
movsl
xlat
mov
repz
sbb
push
divb
hlt
jl
or
xor
push
cmp
cltd
movsb
out
sub
out
dec
cmp
mov
add
imul
mov
or
mov
xor
data16
insb
pushl
or
push
outsb
arpl
push
mov
add
in
cmp
mov
call
xor
xchg
fwait
lods
rorl
mov
test
adc
pushw
push
dec
add
es
mov
jns
nop
test
mov
outsl
add
lcall
sbb
cmp
xchg
sbb
fmull
bound
push
sarb
pop
inc
push
inc
cmpsl
push
dec
bound
xor
adc
jae
es
fucomip
call
test
jmp
adc
and
mov
je
ret
xor
mov
or
es
out
sub
in
push
leave
mov
pop
xor
adc
push
in
xor
repz
pop
sub
fstps
pop
out
and
test
sbb
mov
movsb
cld
imul
jnp
xchg
out
inc
jmp
fbstp
pop
cmpsb
js
add
cmpsb
iret
add
and
fstl
les
pop
cmp
jl
fstpl
inc
mov
cmp
push
or
int
jge
fs
pop
mov
mov
inc
add
mov
jmp
and
ds
xor
cmp
clc
jle
push
mov
jns
xchg
mov
cmp
movsl
loopne
or
fwait
push
adc
jae
adc
sti
add
inc
pop
xchg
int
push
cs
imul
jnp
cld
xchg
das
sbb
sahf
shl
je
jg
mov
imul
fbstp
outsb
jmp
cmc
jg
mov
aas
data16
lret
xlat
pop
xor
pop
std
inc
and
xchg
add
inc
out
mov
lods
push
sbb
push
nop
pop
inc
test
or
push
addr16
cmp
push
lcall
push
test
inc
dec
andl
and
jnp
adc
fnstsw
cmp
xor
je
aam
mov
add
xchg
and
inc
shr
imul
aaa
xchg
mov
lea
push
add
fnstenv
add
inc
push
in
fwait
aad
mov
add
mov
adc
mov
mov
sub
push
in
sbb
insl
xor
fildl
cmpl
cmp
sbb
cmc
dec
sub
mov
jl
lahf
xor
out
es
add
xorb
push
fwait
and
pop
pop
call
daa
add
out
arpl
add
push
xor
add
loopne
inc
out
sarl
fistpl
ljmp
fisttps
nop
pop
decl
inc
imul
mov
negl
jecxz
rcrb
andb
mov
jnp
dec
push
cmpsl
in
push
or
or
or
xchg
jl
mov
fs
xor
cmpsl
rolb
mov
jge
jle
jmp
xchg
daa
ret
and
sahf
mov
js
xchg
movsl
push
iret
xchg
sub
ss
cmp
jmp
stc
shl
lahf
in
push
and
inc
sbb
incl
mov
ret
jnp
dec
push
call
insb
xor
inc
loope
in
inc
icebp
lea
lds
inc
cmc
xor
inc
mov
imul
jns
pop
cmc
stc
mov
sbb
xor
dec
imul
sub
loop
mov
jle
dec
mov
mov
dec
fwait
pop
and
ss
out
mov
add
in
insb
dec
xor
aaa
popl
outsl
xchg
mov
push
cmp
mov
cmp
in
adc
lock
fwait
sub
data16
jae
sbb
mov
lcall
sbb
cld
or
pop
cli
test
xor
into
jns
int
xlat
sub
mull
sbb
rcrb
xor
int
bound
imul
add
bound
cmp
rcrb
pusha
push
test
stos
add
adc
sub
lret
jo
bound
adc
dec
or
std
cli
jb
cmp
push
or
and
adc
roll
sub
mov
add
cmp
jnp
sub
sbb
pushf
pop
jnp
shl
mov
rcrl
jno
in
rorl
sub
or
inc
push
sub
or
jge
add
shll
testl
lret
xor
sbb
pop
mov
adc
xor
fs
and
jle
call
lcall
rclb
sub
mov
outsb
clc
in
jg
pop
popf
movsl
cmp
inc
pop
sti
inc
je
lock
mov
mov
mov
lret
sahf
repnz
test
pushf
cmp
fimull
aaa
in
and
insl
int
in
push
cmp
fisttpl
scas
inc
xlat
and
dec
push
cmc
stos
out
jp
pushf
cs
xchg
lods
rcll
push
mov
dec
adc
cmpsb
mov
mov
adc
lods
xorl
or
out
fs
in
adc
call
jb
push
fwait
push
int3
dec
outsb
push
add
iret
or
inc
mov
pop
imul
out
test
shlb
fldenv
ret
imul
xlat
out
arpl
pop
inc
data16
cmp
push
sbb
jo
arpl
or
loopne
stos
cmp
rolb
pop
cld
push
add
lock
int
mov
jmp
arpl
inc
stos
repz
fisttpl
push
dec
leave
sbb
cs
sti
out
cmpsb
sbb
or
nop
xchg
cmpsl
push
mov
push
jge
stos
out
mov
add
cmp
cld
xor
aas
cmp
mov
repnz
xor
enter
sbb
xlat
lahf
dec
sub
sub
mov
fnstenv
aad
mov
xchg
xor
pop
cmc
xor
sub
mov
cmpxchg
loope
mov
ficoms
jge
js
push
xor
push
cli
cmp
jns
push
repz
dec
inc
mov
cld
les
xchg
call
push
jmp
add
outsb
shr
and
in
sbb
movsb
rorb
test
xor
mov
outsl
xor
lds
stos
xchg
sbb
cmc
pop
subps
pop
lea
gs
push
inc
lea
adc
dec
and
adc
in
stos
movsb
in
addr16
int3
jle
pop
mov
pop
xchg
jb
and
loopne
cs
or
pop
sar
outsl
test
repz
mov
pop
or
rcll
push
jge
xchg
pop
cmp
fs
jo
loope
sbb
fs
xchg
loop
stc
lods
lods
xchg
cmp
or
inc
cmp
fldt
lcall
pop
call
inc
ss
packsswb
mov
adc
sti
pop
push
shrl
adc
icebp
fldl
hlt
adc
stos
out
push
jecxz
ss
and
lcall
xor
or
imul
adc
std
xor
jmp
mov
xor
add
insl
mov
adc
inc
or
int
pop
jbe
jns
pop
lods
insl
rolb
sbb
in
out
stos
scas
incl
negl
mov
iret
or
loop
cmp
xorb
inc
push
pop
movsl
adc
shlb
cwtl
inc
mov
push
scas
mov
dec
jmp
int3
cmp
sub
sub
mov
adc
mov
jecxz
inc
xchg
addr16
add
push
insb
sbb
inc
lods
jno
mov
pop
insb
arpl
push
mov
das
movsb
pop
repnz
gs
xchg
out
loopne
mov
push
pop
inc
lds
xchg
scas
pop
or
dec
rcrb
push
sub
icebp
pop
mov
fsubs
jno
adc
jmp
xor
mov
mov
mov
jb
push
adc
mov
cmpl
sbb
fisttpll
outsl
xchg
daa
mov
loopne
and
out
xor
addr16
mov
sbb
testl
dec
xchg
and
jp
fwait
inc
ss
in
or
jb
inc
mov
outsl
mov
iret
fiadds
push
inc
mov
pop
or
mov
mov
stos
clc
dec
push
mov
rol
jae
pop
dec
gs
mov
jg
das
jp
fnstsw
mov
adc
call
push
mov
add
das
lock
mov
movsb
jns
pop
imul
pop
lea
popa
shl
jo
xchg
ret
push
jecxz
or
dec
nop
gs
pop
xor
gs
pop
movsl
adc
jg
add
daa
push
lds
adc
insl
dec
add
jno
ja
mov
cmp
dec
lods
lret
test
les
test
in
in
call
xor
sbb
jge
sbb
push
or
or
outsb
lcall
adc
and
mov
lret
pop
fwait
mov
lds
cld
jecxz,pn
adc
push
out
shll
lods
frstor
or
or
xor
sbb
mov
inc
cmpsb
sub
xor
fisttps
adc
and
sbb
aad
xor
insl
sbb
mov
cmpsl
sti
cmp
cmc
test
mov
das
xor
arpl
add
fadd
jmp
fisubrl
inc
pop
rclb
inc
ljmp
stc
cs
ljmp
cmp
in
cld
shlb
xchg
fdivrl
pop
pop
inc
xor
stos
cmp
fsubrs
add
jmp
jnp
pop
inc
or
dec
or
xchg
sbb
cs
ficompl
pop
lret
mov
inc
jno
xor
scas
cmp
ljmp
sub
dec
pop
test
cmp
mov
test
mov
or
xor
loope
jmp
shrb
and
push
jmp
xor
lods
out
leave
jge,pt
fildl
fistpll
adc
jge
aad
cmp
jns
stos
js
mov
push
and
cli
shlb
outsb
pop
stos
imul
jno
push
mov
out
subl
push
add
or
pusha
dec
out
bound
fnsave
ds
adc
mov
or
movsb
and
push
inc
xchg
mov
dec
mov
shrl
sub
lahf
out
cmp
cmp
ss
pop
cltd
inc
aaa
xchg
push
lds
sbb
scas
pop
int
clc
out
popa
test
xchg
ret
ljmp
jmp
jl
jmp
xlat
mov
inc
jno
and
mov
ljmp
cli
sub
sarl
jl
clc
ljmp
nop
inc
fwait
and
jmp
or
mov
lea
inc
bound
jne
mov
pop
xor
pushf
and
adcl
out
lret
xchg
movsl
cmpsl
test
pusha
shll
mov
call
sbb
push
pop
fwait
aam
insl
cmc
and
mov
xchg
popa
cmpsb
pop
stc
dec
ljmp
push
test
mov
ja
push
orb
push
inc
adc
sti
stc
sub
inc
pop
jo
xor
mov
fsts
cwtl
push
loope
pop
or
mov
xchg
shr
jl
stc
and
jnp
or
push
push
bound
adcl
icebp
inc
pop
inc
mull
sub
dec
mov
popa
mov
fidivl
ret
aad
das
cmp
push
hlt
sbb
fsubrl
out
ds
movsl
cmpsb
sub
or
ficoml
sbb
pop
adc
test
nop
cmpsb
sub
rorl
test
adc
push
popa
cmp
inc
mov
das
leave
into
call
ljmp
sbb
push
out
lahf
lret
ret
add
dec
xchg
arpl
mov
neg
push
push
shr
dec
clc
pop
push
or
sub
mov
inc
cmp
or
push
jl
ja
inc
push
push
pop
push
pop
mov
test
pop
iret
push
addr16
or
shll
push
adcl
push
into
out
and
mov
xchg
rol
dec
test
lods
jnp
mov
cli
aaa
std
lods
sub
movzbl
xchg
outsl
sbb
push
mov
push
bound
inc
loope
inc
pop
shlb
push
sub
scas
cmpsl
cli
fildll
mov
testl
out
xlat
fdivrl
pop
jecxz
in
popl
rclb
inc
hlt
jo
and
jge
jecxz
dec
cmpsl
xchg
dec
and
aam
jg
sub
ret
mov
clc
sub
jb
jecxz
xchg
dec
in
gs
imul
jge
pop
fwait
cltd
inc
pop
mov
add
shrb
jae
sbb
dec
loop
insl
popf
in
or
mov
adc
repnz
mov
iret
pop
adc
pop
ja
and
push
out
mov
lret
xchg
mov
loop
dec
fwait
push
xchg
int
mov
mov
dec
aas
lret
lret
lock
or
dec
adc
mov
sbb
lds
popf
ret
fcoms
dec
loopne
sbb
outsl
loope
and
notb
in
mov
jno
test
test
out
pushl
movsl
mov
shrb
call
jecxz
scas
or
push
mov
notb
mov
lcall
dec
popf
push
je
lea
fdiv
xchg
add
mov
add
ret
setae
push
xchg
or
sbb
jo
mov
jle
pop
mov
loop
test
mov
lods
das
cs
cmp
test
or
pop
loopne
or
mov
loopne
in
leave
sub
les
push
cwtl
inc
xchg
nopl
mov
add
dec
cld
cmpl
and
lret
jne
jbe
push
xchg
dec
shll
jae
ja
push
nop
mov
xchg
test
pop
push
lods
loope
lods
rcrb
fsubs
sahf
push
jae
xchg
jb
iret
sub
mov
cmpl
iret
icebp
sub
daa
xchg
pop
scas
pop
push
enter
arpl
cmp
or
jnp
scas
sub
imul
mov
lcall
stos
xor
shrb
jmp
pop
inc
jo
pop
sbbl
mov
test
and
test
div
nop
push
cld
cmpsl
cmp
outsb
out
vpunpcklqdq
mov
add
out
aas
ret
lret
jae
mov
daa
add
xchg
rcll
mov
sbb
jbe
outsl
fidivrs
mov
cli
jg
mov
fildll
pop
leave
pop
mov
int3
stc
mov
pop
xchg
cmpsl
dec
in
and
push
sti
imul
lock
out
jb
push
push
loopne
cmc
adc
jbe
push
jb
mov
adc
mov
stc
mov
sti
addr16
iret
or
jecxz
sub
mov
imul
sbb
test
out
jnp
cmp
push
popf
pop
sbb
pop
push
inc
inc
push
fwait
pop
or
push
pop
imul
ljmp
mov
loope
xlat
hlt
arpl
jmp
pusha
jbe
xor
por
jb
push
mov
dec
add
cmp
out
jne
pop
sub
push
jmp
ja
into
mov
xchg
outsb
xor
cmp
dec
xchg
inc
es
sub
xchg
clc
sbb
cmc
out
mov
xor
push
push
jbe
push
out
arpl
pop
insl
test
mov
xchg
dec
jp
popa
and
dec
cld
rcrl
pop
int
pop
shrb
sbb
mov
mov
jbe
fsubrp
ljmp
mov
leave
dec
jno
add
and
pusha
repnz
fbld
loope
mov
dec
je
pop
mov
and
movsl
jae
rcrl
shl
dec
jmp
add
cwtl
and
dec
and
es
jns
pop
in
fldenv
rol
addr16
mov
adc
push
data16
pop
jmp
mov
sub
mov
popa
add
or
or
xor
mov
aad
bound
test
mov
mov
cwtl
jg
fimuls
xchg
nop
idivl
lahf
imul
sahf
lahf
scas
jmp
test
jns
inc
decl
ret
cmp
cwtl
mov
push
icebp
inc
cltd
fst
popf
mov
mov
push
inc
out
scas
bound
daa
cli
push
mov
add
mov
ror
lret
xor
mov
test
lret
push
jl
sbb
mov
scas
popf
push
ret
or
jb
popa
pop
jle
loop
imul
adc
mov
dec
gs
lcall
sub
push
add
jb
data16
or
pushf
int
dec
mov
xor
mov
jno
jb
xchg
sub
bound
cld
push
and
push
ja
scas
xor
loopne
jmp
and
xorb
fisubl
iret
imull
xchg
iret
sbbb
aaa
jb
test
xchg
adc
ret
cmp
cmpsl
jmp
out
jmp
dec
pop
cld
cmp
sub
and
lret
pop
addr16
add
aad
out
repnz
pushf
mov
mov
push
rcrl
loope
sbb
jmp
mov
or
test
js
mov
aas
sub
std
and
xor
cmovae
mov
call
fsub
ljmp
xor
pop
xor
movsb
fwait
cmp
xor
es
js
xor
lret
xchg
test
cmp
or
hlt
stc
repnz
testl
push
pop
add
das
out
shlb
in
jmp
stos
ds
in
sbb
shrl
fninit
mov
ljmp
inc
xchg
lods
popf
movsl
test
push
mov
dec
idivl
mov
xor
mov
sub
jp
loop
mov
out
xchg
add
sarl
lcall
rorl
mov
adc
push
sbb
lret
mov
mov
mov
adc
and
test
pop
andl
fwait
pop
ss
dec
sahf
test
pop
inc
outsl
pop
push
mov
lds
les
ret
imul
or
shrb
jmp
adc
out
lret
repnz
ja
mov
int
aad
push
mov
bound
in
loop
dec
mov
xor
leave
fs
inc
pop
jmp
mov
sbb
jno
add
sub
lcall
cli
popa
es
ret
mov
pop
popf
loop
mov
cld
add
cmp
mov
imul
scas
bnd
mov
int
sbb
or
pop
pop
jb
jl
je
out
bnd
push
dec
cs
mov
mov
gs
andb
mov
fbld
jns
pop
lods
push
sub
cmp
sbb
loopne
js
sti
gs
stc
cmpsb
sub
cmpl
xor
cmp
dec
or
pop
movsb
xchg
sbb
push
jg
xchg
mov
add
pusha
mov
push
add
fidivrs
push
mov
cmpsl
xor
or
nop
mov
test
insl
xchg
imul
scas
jo
sarl
mov
pop
add
loope
ss
stos
adc
push
push
fisttpl
cwtl
sbb
sbbl
inc
lods
push
inc
shll
lock
outsb
dec
xlat
xor
add
pop
xchg
jl
cmp
decl
rcrl
idivl
xlat
sbb
ret
mov
xchg
cmc
ljmp
pop
inc
jmp
in
ret
stos
leave
xchg
push
fs
sbb
jge
mov
push
push
dec
jle
js
sbb
mov
popf
and
loope
cmpsb
movsb
mov
fcompl
push
mov
mov
sub
ja
lock
cmpsl
lcall
test
cmp
movsb
inc
pushf
aam
nop
popf
push
jle
popa
into
call
xorl
mov
push
mov
test
add
dec
stos
xlat
in
orl
adcb
repz
push
fcmovnu
pop
and
and
lahf
mov
pusha
lods
jle
fisubs
mov
stos
sub
mov
icebp
push
or
add
movsb
pusha
xor
fistps
cmp
sbb
jae
pop
add
mov
push
insl
mov
push
mov
sbb
stc
cmp
push
dec
xchg
sub
imul
mov
cli
cltd
shrb
or
add
int3
pop
mov
add
das
pop
jnp
xchg
gs
mov
out
push
fcoml
lds
adc
cmp
movsl
ret
and
adc
in
mov
stc
jecxz
mov
orb
cmp
pop
sbb
out
push
adc
dec
xchg
xor
lock
in
cmp
shr
adc
jnp
jg
into
test
pop
mov
lods
out
mov
push
push
into
aas
mov
pop
lock
sub
or
xorl
ret
pop
cmc
mov
adc
cltd
or
sbb
pop
push
push
das
cld
push
lahf
xorb
xor
pop
and
xchg
jns
sti
add
data16
ss
cmpsb
sti
stc
cmp
sahf
sub
cld
incl
outsl
adc
das
jae
call
sbb
bound
dec
mov
aas
pop
add
das
xor
lahf
xor
fisttps
or
cmp
cmc
mov
xor
subl
inc
lret
sbb
lds
jb
lea
push
cltd
adc
enter
mov
xchg
add
incb
pusha
mov
popl
dec
mov
mov
dec
adc
addr16
test
clc
or
xor
or
jbe
push
aas
lock
add
sbb
out
pop
subb
cwtl
cmp
xchg
rclb
pop
jb
mov
mov
adc
sahf
jl
inc
jae
push
inc
xchg
fldenv
lock
clc
loop
scas
jno
jge
aas
push
inc
insl
pusha
sub
push
out
jne
ljmp
dec
sbb
les
iret
pop
adc
xchg
lahf
lods
push
addr16
add
mov
jne
xchg
ja
ja
inc
aaa
pop
sbb
xchg
subb
pop
sub
popf
std
iret
xor
jnp
mov
ds
xchg
or
out
lahf
adc
push
mov
mov
je
sarb
dec
pop
mov
pop
nop
das
mov
sbb
es
std
jl
sahf
enter
xchg
ja
sub
sbb
stos
fwait
xchg
mov
fisubrl
addr16
dec
cmpb
mov
and
sub
inc
mov
sbb
sbb
jae
lods
and
adc
sub
xchg
dec
adc
dec
mov
js
push
push
and
repnz
and
jle
sub
mov
and
jo
pusha
negb
inc
sub
jge
push
or
cmp
sub
pop
jp
push
and
sub
sahf
or
cmpl
aas
incb
inc
rcrl
jnp
cltd
mov
mov
xor
xchg
call
insl
jb
loope
or
aam
lret
lods
stc
cmpsb
pop
sti
in
fsubrs
aam
mov
jmp
into
sbb
xor
inc
rcrb
dec
push
cs
adc
mov
cli
dec
add
push
aas
shl
sti
test
or
lods
jge
push
inc
insb
xchg
cmc
sbb
jbe
mov
mov
add
jb
and
jge
push
test
out
cmp
mov
insb
fdivs
shlb
lcall
pop
jecxz
fldl
in
pusha
xchg
inc
in
into
in
pop
push
cmp
imul
aad
inc
adc
xor
pop
outsl
fwait
cmp
inc
xchg
je
gs
insb
push
outsl
ror
mov
lods
lahf
dec
jns
cmpsl
sub
jne
mov
loope
hlt
fs
bound
sub
mov
add
pop
loopne
push
out
loopne
dec
push
jl
xchg
ds
enter
sbb
mov
or
adc
pop
xor
negb
cs
mulps
push
cmpsb
das
sbb
mov
sti
mov
sub
xor
mov
and
cmp
out
mov
sub
xchg
mov
jno
shlb
push
push
sahf
adc
out
xor
in
fcomip
repnz
push
inc
push
mov
enter
pusha
dec
mov
imul
js
aad
inc
sti
sbb
push
leave
push
jge
jmp
ljmp
imul
and
jne
add
je
xorb
movsl
sar
jmp
dec
addr16
nop
dec
push
cmp
popa
pop
sub
mov
jl
and
push
cli
pushf
sbb
pop
data16
mov
mov
enter
fbld
fsubl
xchg
call
jg
jl
imul
cmpsl
lds
cs
push
repz
addr16
int
popf
jo
leave
cli
sub
mov
jge
jb
add
adc
mov
or
adc
sbb
mov
adc
push
pop
adc
mov
pop
les
sbb
hlt
mov
dec
das
imul
add
repz
adcl
mov
xor
ja
cmp
dec
pushf
xor
stos
sbb
xlat
nop
mov
stos
mov
sub
adc
xor
push
fidivs
hlt
inc
jb
mov
or
ljmp
mov
push
add
jnp
lahf
mov
dec
dec
dec
daa
xchg
adc
mov
adcb
imull
mov
stos
or
rcll
sbb
call
shl
sub
xchg
test
mov
sbb
push
pop
or
insb
ja
je
cmp
cmp
or
into
push
dec
lret
jg
pusha
xchg
push
test
dec
insb
mov
loopne
jle
mov
and
shr
push
lret
push
test
jo
push
lret
popa
out
mov
mov
dec
int3
mov
jl,pt
xor
test
out
inc
pop
xlat
inc
push
outsb
jg
mov
movzwl
add
lret
adc
in
loopne
test
icebp
jae
in
pop
ja
in
adc
dec
push
fs
fisttpll
cmp
adc
add
lret
testl
push
dec
adc
push
push
pop
in
mov
stos
scas
rorw
dec
sub
inc
xor
addr16
inc
popf
push
jecxz
rorb
in
xchg
js
sbbl
lcall
or
neg
lahf
sar
pusha
mov
andl
sub
fimull
cmpsb
add
push
and
fbstp
xor
pop
fisubs
push
push
sub
pushf
mov
or
jg
mov
sahf
lahf
testl
out
or
xor
rolb
xor
xorl
add
push
dec
pusha
data16
addb
test
xchg
testb
cmp
daa
mov
sbb
sub
dec
scas
punpckldq
mov
addr16
je
rclb
data16
das
in
and
in
in
sub
sti
adc
and
fisubrl
ds
cmp
inc
cwtl
nop
outsl
xor
data16
sahf
out
pop
jmp
aad
insb
pop
sbb
mov
xchg
aaa
mov
jecxz
lcall
lcall
ss
xchg
daa
pop
xchg
mov
je
rolb
mov
cmp
rol
cwtl
xor
xor
pop
dec
jo
shlb
das
pop
pusha
fildll
orl
fisubs
jp
sub
add
mov
popa
cltd
and
sub
push
ds
fwait
leave
pop
lods
pop
sub
lock
sbb
stos
je
cld
popa
repnz
xor
inc
hlt
mov
inc
shll
rcll
hlt
add
lahf
push
cmpsb
cld
xchg
in
jmp
sbb
sub
inc
cld
xor
mov
movsl
fadds
imul
push
ret
ljmp
and
clc
cmp
stc
mov
xchg
or
mov
mov
jg
inc
movsl
orb
jp
push
cmp
inc
sub
in
xor
sub
jle
push
nop
mov
ficoms
xor
in
popa
push
insb
pop
mov
jg
imul
cmpsb
or
into
cmp
dec
rol
inc
xchg
lahf
lods
test
stc
mov
js
or
jl
rcll
lea
repz
dec
inc
adc
outsb
das
mov
insl
add
adc
cmp
out
movsb
repz
fiaddl
ret
jmp
es
out
cmp
idiv
jmp
sub
in
or
mov
ljmp
bts
mov
and
dec
jns
aaa
iret
pushf
mov
xchg
test
test
popf
dec
xchg
or
xchg
xchg
cltd
add
filds
push
enter
lods
mov
pushf
xor
hlt
call
lret
mov
push
dec
mov
imul
xor
cltd
es
iret
pop
mov
or
jnp
dec
nop
xchg
cwtl
push
fxch
rorb
lods
arpl
leave
mov
pop
mov
add
rclb
push
je
push
and
fdivl
jecxz
inc
cmp
jg
fstpl
xchg
fsub
out
pop
bound
add
jne
cmp
push
cltd
mov
ret
outsb
out
stc
in
popa
mov
adc
jo
int3
mov
sbb
mov
inc
pop
pop
sub
cmp
adc
and
data16
or
ret
fdivrs
fistpll
cs
xor
es
cmc
adc
sub
pop
pop
adc
shl
cs
test
in
xchg
in
xor
jl
or
xchg
imul
insb
add
inc
icebp
loopne
shll
in
fldt
adc
js
pop
stc
jecxz
clc
jno
or
sahf
divb
mov
je
jge
adc
mov
mov
pop
cmp
call
adc
aam
dec
pop
jecxz
test
in
jmp
insl
mov
daa
mov
jno
cltd
mov
orb
dec
pop
int3
shll
mov
pop
fs
push
adc
std
jnp
inc
ss
addr16
rcll
mov
shrl
mov
sbb
push
enter
cmc
mov
out
mulb
bound
mov
pop
clc
mov
jg
mov
mov
or
es
fisttpl
sub
aam
and
sar
pop
test
cmpsl
pop
sbb
pop
cmp
outsl
movsb
push
dec
rcll
cltd
jo
jbe
inc
outsw
insl
in
cld
roll
inc
lret
daa
xlat
sub
sbb
test
xchg
cmp
and
dec
jge
stos
jb
xor
arpl
and
xor
iret
jp
icebp
cmpsb
cli
xchg
pop
push
test
int3
cltd
pop
mov
je
inc
sti
inc
cmp
mov
pop
mov
sbb
mov
das
mov
adc
sti
mov
sarb
pop
xchg
push
sbbb
arpl
mov
lock
inc
sbb
sahf
stos
sbb
sub
jl
push
fbld
das
stos
sti
jb
mov
popf
and
sub
rcrl
fsub
add
push
aaa
sahf
outsl
sub
mov
imul
push
or
cmpsl
ficoms
fsubs
outsb
ja
push
insl
shl
bound
dec
pminsw
pop
mov
xor
jmp
fstpl
and
out
add
push
mov
ret
lcall
mov
hlt
mov
jo
inc
jge
inc
inc
inc
inc
aad
push
lret
cmp
push
push
pop
stos
jne
push
jo
mov
cld
pop
xor
push
shll
fidivrl
mov
iret
out
nop
hlt
lret
loope
das
addr16
imul
xor
jmp
cmpsb
lahf
addl
and
fdivp
push
sbb
sbb
jne
push
data16
shl
and
xchg
ja
popa
es
push
xchg
sti
lahf
out
shl
les
lret
mov
mov
push
pop
cmp
std
out
xchg
gs
lods
inc
adc
add
loope
scas
sub
jo
push
pop
xor
ja
xor
or
lea
sub
inc
jbe
inc
dec
add
push
xchg
adc
repz
cwtl
pop
jb
cmp
sub
cltd
xchg
adc
push
repz
xor
into
jnp
jecxz
pop
mov
push
lret
xchg
add
out
lods
mov
loope
push
fdivrl
xchg
xor
sbbl
int3
mov
jno
enter
cmpsl
cmpsl
scas
xchg
les
xor
aaa
xor
mov
sbb
cmc
out
orl
mov
mov
cmp
cld
les
clc
pop
jmp
adc
aaa
or
iret
adc
xorl
scas
arpl
dec
pop
psrad
and
popf
mov
lahf
ficoml
add
into
sub
ret
nop
dec
enter
jne
cltd
fidivl
loop
and
cmp
sub
ret
movsl
sarl
add
jno
dec
sbb
dec
popf
push
cmp
push
dec
aad
mov
sbb
sub
bound
in
and
push
xchg
jo
bound
int
inc
loop
cmp
pop
xor
dec
cld
ja
cmp
out
lret
mov
arpl
cmp
cltd
jns
cmp
push
add
dec
mov
mov
cwtl
jmp
jg
push
jecxz
xchg
fildl
lods
sahf
test
xor
mov
sbb
dec
sahf
mov
add
pusha
enter
xchg
cwtl
and
pop
or
and
subl
mov
call
mov
push
hlt
movsl
cltd
dec
test
mov
fdivrs
xlat
sti
cmp
pop
jmp
sbb
mov
cmp
jno
repz
jns
int
push
nop
cmp
mov
js
leave
xchg
dec
aam
mov
test
mov
cwtl
pop
jl
fnstcw
test
inc
sbb
jge
push
dec
cmp
jb
bound
in
cmp
jbe
dec
insb
add
scas
sbb
repnz
cmp
mov
adc
xor
jne
adcl
mov
iret
outsl
js
scas
mov
pop
cmp
pop
push
out
dec
rcr
and
les
jno
popf
mov
repnz
pop
stos
arpl
xchg
sarl
cmp
repz
in
mov
push
ret
out
pushf
mov
out
push
and
xchg
lods
jb
daa
repz
mov
mov
cs
scas
shrl
dec
sbb
cmp
cmp
fucom
jo
and
dec
movb
clc
dec
ds
cmp
sbb
add
pop
mov
hlt
sbb
idivl
xchg
inc
mov
mov
push
inc
imul
push
add
adc
pushf
jecxz
cld
lds
ret
adc
nop
lods
jecxz
cs
xor
sub
js
sahf
pop
jbe
sahf
mov
aaa
adc
adc
or
dec
xlat
adc
xor
test
mov
les
loop
je
cltd
xchg
xor
mov
pop
mov
jns
push
stc
loope
ss
or
cmp
push
les
sub
inc
call
cmpsl
es
pop
incl
add
pop
dec
xchg
mov
mov
push
ds
adc
or
pusha
dec
mov
sub
sbb
cmpsl
aaa
ds
jp
mov
sahf
aas
sbb
add
jb
adc
mov
outsl
mov
lldt
fistps
mov
jne
xor
xor
in
out
or
orl
aas
sub
call
push
dec
add
ret
mov
push
cli
pop
inc
imul
push
jge
scas
rcrl
cmpsb
add
loop
xor
test
leave
add
sub
out
adc
not
fwait
cmpsb
ret
lret
jle
dec
movsb
sbbb
int
sbb
fdivrl
xchg
imull
mov
ljmp
xchg
into
mov
add
pop
push
in
mov
jbe
in
xchg
aas
mov
popl
cmpb
jns
or
lds
daa
pusha
cmpsl
mov
sub
adc
push
mov
aas
cmpsl
xchg
pop
repz
cmp
sti
push
sub
jecxz
jo
jo
mov
xchg
xchg
jge
dec
mov
push
mov
imul
push
jmp
inc
enter
aad
xor
lea
gs
pusha
movsl
or
mov
in
sub
add
je
aam
mov
fidivs
mov
ror
xor
sahf
call
inc
and
scas
je
ss
cmp
insb
scas
scas
add
or
iret
mull
xchg
pop
imul
sbb
insb
out
ds
mov
subb
cmp
adc
mov
ret
mov
loope
pop
dec
push
dec
mov
mov
stc
xor
dec
jmp
xchg
stos
dec
rcll
addr16
or
outsb
repnz
or
nop
xchg
sti
fsubrl
jbe
nop
push
sbb
mov
sbb
inc
sti
push
add
jne
jg
xlat
xchg
cmp
pop
cmp
cmpsl
dec
jmp
xchg
dec
cmpsl
lret
sbb
insl
push
fs
pop
mov
push
jl
mov
lods
inc
lret
bound
push
xor
pop
push
xchg
ja
jmp
inc
test
idivl
mov
loop
nop
daa
sbb
nop
jecxz
pop
testl
and
jbe
lea
jne
mov
sti
or
in
cltd
hlt
das
mov
nop
jb
push
mov
cli
repnz
adc
mov
hlt
shll
jle
xchg
jae
insb
repz
dec
xchg
shl
lcall
push
jns
mov
imul
loop
daa
sub
es
ret
and
ret
and
push
sub
aam
cwtl
sub
jle
sbb
movsl
arpl
mov
jae
push
ds
dec
sti
shlb
fwait
pop
test
inc
sarl
mov
jp
in
fdivl
xor
fs
lods
xor
dec
mov
push
push
mov
adc
add
ret
stos
insb
add
mov
js
xchg
pop
xorb
cmp
aas
xor
inc
adc
mov
in
imul
jmp
fsubrs
das
dec
cmp
les
ficoml
pop
popa
cmpsb
xchg
shlb
lret
fimuls
cmp
adc
and
insl
hlt
cli
mov
ds
call
fldenv
push
push
nop
je
js
sub
rorb
jge
xor
inc
and
aas
sahf
cmp
sbb
mov
xchg
cmp
dec
sbb
jae
mov
dec
imul
in
imul
or
cld
mov
jmp
dec
mov
popa
pop
jge
push
xor
test
pop
insl
jp
mov
test
cmp
mov
mov
loopne
into
sahf
or
xchg
dec
mov
mov
insl
mov
push
and
inc
adc
nopl
js
push
loopne
aad
fists
fs
mov
pushf
cmp
inc
fsubp
mov
in
xchg
icebp
pop
scas
push
inc
or
xor
int
push
mov
cmp
dec
out
lods
mov
scas
in
mov
and
stc
imull
add
sti
das
lock
scas
stos
inc
cwtl
jle
adc
mov
or
fstl
cld
lock
mov
imul
lret
mov
aas
dec
and
hlt
adc
xchg
xor
and
inc
stos
mov
pop
insb
xchg
mov
add
lahf
jle
sti
insb
lods
jmp
int3
addr16
push
mulb
adc
imul
pop
mov
sub
test
fildll
dec
aas
mov
hlt
repnz
push
adc
xchg
les
inc
adc
dec
push
cli
mov
sbb
pop
lret
pusha
and
cmp
and
movsb
adcl
xor
outsl
cmpsb
out
push
or
jne
rolb
aad
lds
cmp
shrb
fbld
push
aaa
pop
scas
pop
sub
sub
inc
stos
repz
mov
repnz
sahf
outsl
mov
inc
sbb
rolb
jae
ret
xor
dec
pop
pop
jbe
cmp
xor
out
ja
pop
sbb
or
shrb
or
sahf
ss
jo
jb
push
flds
popf
jg
sbb
jmp
test
fnsave
jae
jne
negl
mov
mov
dec
ja
xchg
push
stc
ja
add
in
into
mov
into
jecxz
ss
aas
popf
sbb
inc
fwait
insl
or
mov
sub
xchg
sub
mov
movb
inc
add
popa
add
xchg
popf
or
popa
test
out
mov
mov
cld
test
jmp
scas
gs
fnsave
loopne
push
jg
xor
test
iret
lret
and
push
mov
frstor
icebp
dec
sbb
movsl
es
inc
xor
mov
inc
add
insl
movsl
xchg
mov
loopne
sub
pusha
sbb
aaa
int
icebp
pop
dec
in
push
dec
testb
lock
mov
mov
jl
je
or
mov
mov
mov
je
mov
jg
adc
iret
jb
outsl
sub
movsb
dec
inc
inc
add
testb
adc
mov
mov
pop
mov
push
xchg
loop
sbb
fs
dec
out
sub
data16
bound
aaa
cmpsl
mov
cmc
sub
adc
sbb
fcmovnu
jge
imul
jbe
push
jecxz
jb
mov
cmp
insl
xor
mov
roll
aaa
sbb
int3
enter
xchg
lds
sti
lret
stos
loopne
lods
pop
cmp
cmc
fstps
mov
inc
out
xlat
dec
test
xor
jmp
add
pop
or
add
dec
cmp
dec
mov
clc
and
xchg
xchg
mov
lods
or
xchg
std
cmp
and
mov
pop
sub
outsb
mov
cmpsb
gs
mov
and
mov
mov
rol
nop
dec
inc
and
fcomip
bound
in
filds
ja
arpl
add
js
jnp
or
adc
scas
loopne
in
iret
adc
in
in
xor
push
pop
inc
es
popf
jns
in
les
adc
fcoms
orl
adc
popf
test
push
fs
ret
xchg
mov
loopne
jmp
xor
addl
scas
mov
and
pop
addr16
jmp
or
test
mov
push
faddl
lods
les
ret
mov
cmp
jbe
cmp
movsb
stos
add
push
addl
fisubrs
mov
test
dec
aad
or
daa
or
or
rclb
or
pop
push
loopne
shl
lret
adc
jle
fsubl
dec
lcall
or
int
addr16
dec
sub
jmp
fnstsw
fiaddl
mov
and
ret
ret
sub
lahf
push
lods
mov
dec
inc
jle
outsl
roll
pop
mov
testb
insb
push
xchg
sahf
fs
sub
subl
cmp
mov
add
ret
scas
xor
pop
cmpsb
cmpsl
xchg
outsb
xor
clc
jge
mov
aad
mov
jno
mov
adc
cmp
test
sub
outsl
imul
movsl
push
push
imul
or
lea
ljmp
hlt
cmc
pop
jb
js
or
lcall
add
and
dec
push
aam
addr16
aam
outsl
addr16
int
in
xchg
jle
adc
push
xor
pusha
mov
ljmp
jns
push
pop
test
out
mov
lcall
sti
sbb
jbe
pop
mov
out
rcrl
je
bound
sbb
icebp
imul
push
cmp
int
jae
decl
xor
jecxz
push
adc
popa
add
addb
mov
dec
jp
sti
add
xor
fildll
push
add
movsb
and
dec
lret
jb
cmpsb
fcoms
or
fs
leave
lretw
pmaxub
cmc
pop
inc
push
pop
dec
sarb
lds
fldt
cwtl
enter
movsb
add
outsl
xchg
inc
mov
rol
mov
cmp
sti
movb
mov
test
bound
rolb
adc
dec
loop
test
push
mov
jmp
inc
jmp
mov
pop
imul
ret
mov
shr
push
xchg
push
xchg
push
mov
cmp
fisttpl
mov
inc
and
cmp
std
fimuls
mov
mov
mov
push
das
pop
cmp
ret
cmp
call
dec
inc
push
and
mov
mov
pop
movsb
lret
mov
shlb
add
pop
dec
dec
and
xor
shlb
mov
lock
or
fldt
mov
icebp
jo
push
xlat
mov
sarb
movsl
xchg
jge
push
mov
and
sub
ss
into
sbb
shll
out
xlat
data16
loop
cwtl
mov
cmp
sbb
iret
or
movsb
pop
cmp
cmp
and
js
inc
insl
decb
adc
lods
sarl
push
cli
daa
stos
xor
ss
fiaddl
pop
jecxz
mov
jns
sub
repz
inc
cwtl
push
jmp
or
enter
jp
sub
hlt
lds
add
or
sub
push
inc
inc
push
jns
dec
and
fistpll
inc
pop
xchg
rcrl
push
add
fisubl
dec
inc
add
enter
imul
add
pop
jle
gs
lock
xchg
mov
dec
mov
mov
data16
cmp
dec
dec
mov
fucomi
inc
movsb
insb
push
cmp
jbe
leave
mov
jb
pop
in
push
push
cmpb
fldl
add
and
loopne
hlt
lods
pop
sbb
scas
xchg
push
mov
ffreep
movsl
xor
pop
mov
jae
ja
insl
loop
jne
movaps
movsb
pop
xchg
insb
push
cmp
popa
jnp
pop
ucomiss
pusha
sub
shlb
aaa
dec
add
jo
mov
sahf
or
stos
jle
fiadds
lret
push
pop
and
jp
push
xchg
jnp
das
adc
xlat
leave
shll
inc
mov
mov
fcomps
mov
lds
mov
movsb
inc
lock
cmp
xchg
stc
xchg
add
cmp
add
dec
or
cmp
pop
xchg
aad
push
fs
in
sbb
shr
dec
dec
push
and
insl
adc
inc
sbb
dec
popf
pop
sbb
lods
xchg
fidivrl
jg
cltd
adc
je
mov
sbbb
loope
enter
pop
add
xchg
inc
pusha
shlb
addr16
out
sub
cld
roll
les
pop
loop
or
push
or
aam
ret
mov
xor
xchg
addr16
jp
adc
rolb
jg
adc
aam
pusha
pusha
pop
iret
cmc
fdivrl
popa
cltd
push
call
enter
lcall
imul
je
cmpsb
pop
cwtl
lods
push
jb
in
ret
push
ja
dec
inc
and
jle
clc
ja
push
repz
ds
into
ffree
cmp
pusha
xor
cmp
mov
pusha
out
pop
sub
mov
mov
jmp
jmp
mov
pop
in
sti
outsl
push
fcmovnu
xchg
lret
movsl
sbbb
push
ret
subl
xchg
scas
aam
xor
loopne
dec
or
push
dec
leave
cmp
add
push
and
dec
sub
pop
cmpsl
addr16
sbb
aam
test
xlat
xchg
push
rcrl
movsb
fs
test
sub
and
cmp
ss
pop
imul
inc
dec
jecxz
aam
test
cltd
push
xchg
mov
movb
les
cs
imul
push
outsb
mov
in
fs
insl
mov
test
aas
in
mov
add
fwait
ret
jne
mov
loopne
add
sbb
insl
mov
data16
jecxz
xor
pop
mov
sub
lret
cmpsl
xorl
inc
sub
ljmp
call
cmp
into
cwtl
lock
lea
ljmp
in
je
icebp
pop
pushf
fcmove
mov
cmp
rol
js
adc
or
lods
shrl
mov
sti
test
push
outsl
sti
or
add
and
fsubp
push
stos
xchg
push
sbb
paddd
pop
xor
push
fisttps
add
adc
sub
in
xchg
adc
pop
in
movsl
call
mov
mov
pop
or
pop
mov
orl
shl
inc
lock
ja
mov
dec
jp
pop
aas
cmp
mov
mov
push
mov
mov
xor
and
and
and
out
inc
jnp
int
pop
scas
mov
sbb
adc
out
in
test
and
pop
pop
hlt
lds
sbb
pop
push
push
sar
bound
aas
inc
jg
fscale
dec
xor
adc
repz
sti
adc
sarb
imul
or
jns
bound
sbb
mov
jle
adc
jge
outsl
in
lret
mov
and
mov
mov
orb
popf
and
icebp
loop
mov
pop
add
mov
mov
sbb
shrb
and
stc
ret
in
int
les
push
ss
jns
sbb
lahf
push
adc
sub
ljmp
cmp
outsb
shrb
inc
out
mov
jb
adc
out
dec
sbb
xor
mov
dec
movsl
inc
pop
xchg
mov
xlat
mov
mov
rclb
push
cmp
stos
pushf
xorl
cmpsl
mov
dec
dec
add
in
push
sti
add
push
mov
push
aaa
call
mov
mov
fwait
shl
mov
stos
pop
xchg
mov
cld
lea
lds
or
mov
cmpsb
movhlps
xor
out
imul
rcrb
xchg
pop
push
insl
arpl
sbb
stc
xor
sub
sbb
mov
push
sbb
push
jns
pop
sbb
daa
xor
in
mov
mov
sbbb
lahf
mov
std
inc
cs
hlt
sub
divb
cmp
aad
daa
add
mov
stc
push
leave
jecxz
pop
xchg
clc
fwait
orl
and
inc
ret
mov
xor
mov
scas
pop
dec
jg
outsl
mov
jb
insl
mov
std
stos
xchg
inc
bound
popa
aad
xchg
int3
push
out
push
arpl
and
stos
add
imul
in
mov
stos
sbb
dec
aaa
clc
dec
shlb
or
insl
and
add
loop
adc
sbbb
aas
xchg
data16
pop
minps
pushf
pop
dec
add
add
xchg
dec
jae
pop
mov
test
fldcw
adc
sbbl
or
stos
cli
ss
add
test
adc
popa
cmc
mov
cld
out
or
xor
leave
jae
pop
aaa
insb
inc
int
xor
xchg
pop
aaa
int
es
mov
sti
and
and
xchg
mov
inc
sbb
sahf
xchg
subb
mov
adc
movb
adcl
test
shlb
jbe
shl
movd
lock
pop
loopne
mov
jle
sti
sub
mov
push
mov
es
dec
jnp
push
sti
pop
inc
pusha
jnp
cmpl
adc
jp
pop
scas
test
xlat
ja
jns
xchg
loopne
in
sbb
jne
stos
arpl
or
bound
mov
add
sub
das
loopne
out
lahf
fldenv
jns
in
clc
push
mov
xchg
out
dec
imul
fldl2t
jg
sub
shl
jg
dec
es
fiadds
xchg
pop
xchg
pop
lds
lahf
es
fmul
loopne
movsl
inc
ljmp
sbb
test
loop
cmp
cmp
repz
sub
loope
sub
dec
mov
fbld
xor
loopne
pop
cltd
mov
rorl
sub
pop
fisttpll
lea
adc
inc
hlt
xchg
outsl
push
xchg
and
in
jne
sub
mov
xchg
lods
sbb
inc
dec
and
stos
add
push
or
insb
jno
xor
cmp
data16
aaa
test
xor
lahf
push
jns
pop
pop
mov
scas
cmp
pop
dec
pop
test
jae
in
dec
inc
inc
mov
repz
ss
sub
les
or
xchg
add
les
subb
stos
jle
mov
push
fs
cltd
loopne
ja
add
sti
xor
push
xchg
jl
test
pop
das
dec
push
inc
mov
push
inc
outsl
or
jmp
xchg
test
push
dec
imul
pop
xchg
push
insb
xor
jge
add
sahf
adc
shlb
sahf
js
xchg
inc
imulb
jo
lods
fstpl
and
or
loope
stos
mov
and
cltd
pop
mov
and
xor
push
add
inc
fadds
mov
adc
mov
xor
or
push
push
divb
lods
cmpl
jno
sub
test
mov
sbb
out
arpl
insl
cmp
dec
loop
aad
cmp
xchg
cmp
fsubs
dec
inc
push
mov
adc
lahf
jg
mov
sbb
movsl
dec
sbb
pop
enter
sub
add
dec
leave
mov
mov
cld
movsl
pushf
mov
je
inc
rorl
lea
jo
inc
idivl
mov
shll
pushf
mov
pop
out
aam
js
push
setns
inc
and
mov
or
sbb
test
xchg
pop
mov
xchg
ret
push
dec
int
js
ss
push
mov
mov
movsl
adc
push
jecxz
lea
nop
std
adc
gs
inc
sub
out
mov
repz
out
outsb
inc
adc
int3
mov
sub
pop
pop
insb
mov
mov
sbb
mov
push
push
jle
push
jnp
add
aaa
fbstp
xor
pop
lcall
call
out
dec
or
push
sbb
pop
mov
xchg
popaw
ja
xlat
lods
lea
ficomps
xchg
shll
dec
aaa
lds
cli
add
or
jae
sbb
cwtl
jmp
cs
pop
lcallw
jno
andl
daa
mov
loop
and
ret
mov
mov
xor
cmp
cmp
mov
arpl
push
sarb
sub
rcr
xchg
xlat
lahf
jbe
adc
and
shl
daa
pop
test
sahf
jne
fst
push
dec
sahf
xchg
dec
jns
imul
mov
mov
push
loop
stos
xor
jl
sub
dec
pusha
jnp
test
xor
jae
mov
mov
aaa
xor
lods
shrl
push
jae
test
shrb
dec
sub
mov
pop
test
mov
jb
cs
cmpb
xchg
lods
jmp
aad
mov
lahf
adc
test
enter
inc
cld
xchg
stos
cmp
mov
push
add
push
xchg
mov
push
addr16
sub
stos
stos
loop
jmp
pop
add
mov
aad
out
mov
mov
mov
sbb
inc
leave
mov
add
mov
mov
in
xchg
aaa
mov
sub
xchg
das
pusha
jns
daa
cli
xlat
movsb
stc
sub
xlat
out
jge
jmp
jnp
cmp
ds
dec
push
lds
insb
lds
cmp
fwait
shrl
adc
lcall
mov
incl
lret
mov
pop
mov
pop
sub
mov
dec
imul
adc
loope
jmp
test
jmp
dec
push
arpl
cld
and
or
bound
imul
in
movsb
adc
psrld
lcall
sub
loop
add
mov
in
sub
daa
and
pushf
push
jecxz
sbb
cmp
ret
mov
and
dec
xchg
mov
ret
imul
clc
cvtpi2ps
inc
sbb
scas
jbe
xor
jae
pop
mov
push
test
cmpsl
sti
pushf
mov
mov
pavgb
mov
xor
xchg
sub
pusha
in
enter
xchg
or
insb
xchg
ljmp
rcrb
shrl
sbb
cmp
in
sub
movsl
pop
dec
xchg
jle
inc
push
jg
push
sahf
cmpsl
jge
scas
xor
dec
sbb
lcall
dec
in
cli
xchg
pop
lds
dec
and
test
xchg
addr16
pop
inc
or
add
jb
cmpb
das
js
test
dec
push
mov
mov
clc
lds
mov
inc
aam
mov
insb
es
dec
xlat
mov
icebp
sub
sbb
add
lds
test
sub
xor
jg
outsb
lahf
push
outsb
les
mov
jae
out
mov
dec
dec
mov
sub
stos
sub
sub
shl
and
fnsave
sarb
xchg
add
hlt
sub
mov
fwait
outsl
shll
roll
push
fstpl
scas
loope
lock
pop
cld
xor
add
inc
les
frstor
lahf
xor
out
sarb
into
inc
in
or
jecxz
lock
sub
sub
jg
repnz
cltd
insb
pop
push
cmp
or
push
incl
outsl
or
mov
pushf
iret
insb
test
repz
pop
pop
mov
mov
xor
push
fidivl
mov
adc
lcall
divb
test
cmc
xchg
aam
add
mov
xlat
insb
mov
out
or
out
mov
mov
push
negl
jbe
aad
mov
je
fld
sbb
insb
pushf
push
add
aaa
rcrl
test
pop
lds
cld
sub
icebp
out
push
inc
into
xchg
loope
jmp
sti
scas
cmp
xlat
push
mov
cmp
int
xor
jo
jl
xlat
adc
int
enter
call
or
ficoml
jno
int
jns
loop
mov
inc
push
repz
test
cld
mov
jns
mov
inc
jmp
inc
push
push
xor
loop
ret
xchg
fisubs
or
dec
xchg
mov
dec
mov
std
sub
pop
add
data16
jnp
insl
push
in
jne
sbb
popa
rolb
gs
add
sar
cmp
adc
inc
cld
stos
and
arpl
testb
jb
pushf
mov
mov
ss
pop
dec
icebp
std
iret
sbb
aam
cltd
push
inc
sub
hlt
in
mov
fcompl
fdivrs
sub
addr16
fldl
sbb
jae
jns
xchg
ja
jp
sbb
jecxz
jl
test
and
mov
mov
adc
jns
add
pop
inc
lds
mov
cmp
aas
clc
add
aad
jge
push
test
cmp
mov
inc
jmp
loopne
push
xor
jl
xlat
mov
mov
inc
pop
leave
inc
cmp
cld
pop
out
fwait
xor
data16
scas
dec
cmpsb
mov
xchg
and
jne
outsl
xor
inc
mov
xchg
bound
cmpsb
push
dec
dec
test
mov
or
repnz
mov
push
adc
lret
lds
pop
add
pop
fstp
mov
arpl
outsl
pop
push
dec
inc
stos
xchg
dec
lods
and
test
scas
add
ss
dec
xchg
push
push
cmp
pushf
pop
push
int
adc
outsl
out
ljmp
xchg
orb
cmpb
nop
sbb
xor
jb
xchg
testb
sar
inc
repnz
movsl
test
pop
leave
jmp
out
loopne
sub
rolb
sbb
repz
dec
dec
xchg
xor
and
adc
or
shufps
lods
adc
js
stos
add
mov
or
sbb
pop
jae
inc
mov
ret
jl
xchg
sub
lds
das
mov
sbb
je
hlt
cmp
sti
push
pop
pop
cmp
mov
inc
fdivs
and
dec
gs
xlat
sub
jmp
fldcw
or
inc
inc
in
fwait
or
int
cld
subb
stos
adc
pop
rcll
jnp
lret
out
in
popf
mov
jg
jg
js
out
add
xchg
lcall
sbb
fsub
repnz
es
lea
sub
ret
aad
testb
cmpsb
or
cwtl
adc
in
mov
add
mov
pushf
or
inc
mov
sbb
call
dec
jmp
xor
int
jmp
mov
int3
mov
enter
add
pop
out
push
dec
sub
imul
add
out
mov
mov
cmp
jbe
sbb
add
shll
xchg
mov
sbb
and
packsswb
sbb
pop
add
out
jb
mov
leave
push
pop
pusha
loop
adc
or
bound
je
cmpsl
movsb
aas
push
shll
sbb
cmp
popa
adc
inc
movsb
adc
xor
enter
aad
aaa
test
js
cmpsl
inc
or
push
and
inc
cmp
gs
mov
mov
inc
cmp
sarl
inc
xor
sub
adc
roll
jne
add
test
sub
jge
jne
cmp
jecxz
mov
std
cltd
adc
push
sti
mov
jp
leave
mov
cmpsl
jo
adc
and
andl
cs
or
add
jl
aad
push
into
outsl
push
mov
imul
fildl
sbb
cltd
add
insl
jle
jns
hlt
jo
mov
int3
mov
jno
lcall
pop
loopne
dec
cld
insl
addr16
iret
xchg
and
test
lcall
jmp
in
adc
inc
mov
xor
out
mov
and
cmpsl
and
xor
sbb
cmp
pop
js
adc
mov
mov
push
mov
fldcw
xchg
cmp
cmp
sbb
sub
mov
test
jle
data16
adc
jmp
push
pusha
scas
mov
mov
and
mov
pushf
outsl
cmp
icebp
shll
and
cmp
pop
pop
inc
push
stos
jne
stos
std
incb
xchg
daa
pop
mov
out
daa
jb
fsubr
int3
xlat
xchg
xchg
in
cmpsb
adc
in
and
xchg
and
lcall
sub
or
shrl
ffreep
cmp
mov
stos
mov
loop
inc
aam
jae
xchg
lret
add
arpl
aad
in
push
repz
mov
push
pop
sub
adc
lds
push
and
cltd
iret
movsb
fists
fcmovnu
jmp
mov
cmpsb
enter
mov
pop
popf
cmp
cs
mov
lcall
icebp
pop
sarl
lds
sbb
aad
dec
sbb
lock
in
mov
cmp
ret
sti
sub
loope
push
aam
mov
in
popf
ja
adc
mov
dec
ret
int3
pushf
repz
cmp
adc
sub
fisttpll
xchg
lods
lock
in
out
popa
mov
iret
out
jo
cmp
jg
mov
loopne
inc
mul
sti
cwtl
jp
xchg
jl
cmpsb
xchg
and
leave
and
push
add
arpl
cmpsl
push
idiv
sub
bound
data16
and
lods
push
jno
les
mov
push
jl
stos
mov
movsl
mov
mov
mov
pop
arpl
insb
jnp
loopne
xor
dec
jno
adc
sbb
mov
xchg
cmp
call
mov
sbb
adc
sahf
cli
or
ror
ja
jnp
iret
dec
mov
mov
mov
lcall
dec
roll
test
add
add
dec
dec
pop
inc
inc
xchg
cmp
pop
push
scas
sti
mov
pushf
test
stos
rcll
fs
push
movb
fwait
cmp
mov
xor
dec
xor
std
push
sbb
mov
sbb
loopne
push
ret
enter
xorl
mov
scas
sbb
inc
push
mov
mov
mov
and
mov
js
cmpsb
dec
aam
ficoml
movsb
leave
rorl
lcall
push
addb
int
sbb
jns
mov
add
push
aas
fmull
adc
pop
xor
fwait
add
daa
jg
movl
xor
mov
or
in
psubsb
and
in
and
mov
shlb
dec
fdiv
pusha
inc
or
testb
bound
sbb
popa
jp
test
pop
adc
lahf
ret
sub
dec
js
pop
fwait
jecxz
or
fcomp
or
pusha
add
sub
xlat
ret
sbbl
jg
lahf
sbb
shrl
mov
int
sub
xchg
fwait
push
pusha
cmp
cwtl
jp
adc
popa
ss
xchg
mov
test
aaa
jg
xorb
int3
subl
or
xchg
jg
fdivl
cmp
fldcw
sbb
lock
dec
idivb
fmul
cmpsl
rolb
add
pusha
ret
loop
or
xlat
je
repz
or
ret
adc
popf
push
pop
lret
mov
pop
xor
int3
insl
sbb
mov
jle
shl
pushf
pop
aaa
pop
std
stos
jb
sbb
or
scas
xor
ficomps
inc
adc
push
add
push
negb
fsubrs
jno
and
mov
int3
adc
xchg
test
outsb
dec
stc
mov
mov
fnstsw
sbb
into
jg
les
mov
cmpsl
mov
insb
push
and
loope
mov
test
in
pop
dec
push
hlt
jl
fidivs
sub
mov
insl
mov
lods
scas
out
pop
pop
out
out
jbe
shrb
xchg
add
test
push
pop
cmp
mov
jno
lods
push
sbb
cmpsb
jns
push
fwait
cmpsb
sbb
xchg
outsl
icebp
dec
fs
fisubrs
dec
cmp
inc
dec
sub
ja
in
and
xchg
inc
sub
les
ret
xchg
add
std
add
mov
loopne
fcmovb
sbb
ds
int3
or
loope
ss
add
xchg
dec
sbb
xor
cwtl
dec
add
sbb
mov
sbb
add
or
push
jae
das
jo
pop
push
push
pop
into
aam
or
push
sbb
jmp
inc
jno
pushf
inc
jnp
bound
pushl
xchg
outsl
pusha
sbb
xchg
stos
and
push
xor
xor
add
cli
aam
clc
xchg
inc
cli
cmc
mov
call
and
scas
pop
push
and
push
xchg
inc
test
or
mov
pop
mov
in
pop
mov
ret
pop
shlb
in
cmp
fs
repnz
mov
hlt
xor
mov
mov
adc
cmp
or
sbb
sub
add
xlat
adc
mov
dec
test
sub
add
aaa
xchg
lcall
rcrl
mov
push
sarb
lods
and
inc
test
jbe
push
loop
testl
mov
outsl
clc
xor
movsb
or
test
in
sbb
repz
stc
stc
xor
mov
push
je
xor
and
push
cmp
mov
mov
movsl
mov
mov
push
out
xchg
ds
clc
xchg
jae
cltd
inc
aam
mov
mov
data16
inc
mov
push
jge
call
mov
ret
pop
ja
fidivrs
jbe
xchg
or
mov
and
ljmp
and
popf
push
jnp
jge
xchg
es
fldenv
sub
icebp
mov
xchg
hlt
xchg
test
pop
scas
jbe
cmpb
out
inc
ret
ret
cld
inc
jp
xchg
mov
pop
jne
inc
aam
pop
inc
mov
push
cmpsb
daa
xor
pop
in
and
jle
rorb
adc
dec
push
lock
pop
xchg
sbb
popa
ljmp
push
jle
popf
adc
or
sbbl
dec
pop
aaa
pop
mov
cmp
dec
jb
frstor
pop
test
lret
lods
dec
or
jp
cmp
fldt
push
ljmp
test
rsqrtps
lds
sub
and
fimuls
mov
mov
xor
imul
in
in
cltd
repz
adc
insl
repz
dec
pushf
and
and
mov
jo
shl
jecxz
sahf
jns
iret
fcoml
mov
jno
aaa
push
add
mov
inc
cld
pop
add
xchg
ret
push
push
mov
and
cmp
inc
hlt
xlat
int3
in
addl
fists
push
jae
pop
push
enter
pusha
mov
mov
add
inc
push
inc
mov
dec
sbb
sbb
stc
mov
xor
sbb
mov
xchg
adc
fcoms
sbb
mov
jge
pop
mov
daa
and
arpl
pop
popa
faddl
outsl
rorl
mov
jl
loope
sbb
jae
xlat
cld
rcr
mov
js
cwtl
and
and
or
aaa
pop
sti
leave
addr16
cltd
adc
pop
adc
push
or
scas
je
fstps
idivl
xchg
jns
push
sbb
xor
loope
clc
push
mov
hlt
js
push
add
movsb
or
dec
mov
mov
outsb
call
xchg
into
aam
pop
cmp
mov
lods
sbbl
inc
daa
orl
in
jne
mov
cmp
rorb
pop
call
jp
push
sub
mov
pushf
jmp
mov
jmp
push
ret
out
stc
push
push
dec
into
data16
add
jge
lcall
xchg
out
insb
cltd
mov
sub
fs
test
push
mov
pop
lods
xchg
and
movsb
outsl
cli
pop
icebp
add
cmp
or
inc
cmpsl
adc
and
xchg
sbb
cs
mov
sbb
sahf
or
pop
jb
sbb
mov
adc
sbb
jge
and
movsb
xchg
mov
mov
aas
xchg
fdivrl
jmp
or
test
and
loopne
scas
pop
xchg
pushl
loop
fwait
cmpsb
fisubl
adc
rcrl
stos
add
lods
mov
outsl
pushf
pop
stos
jmp
icebp
testb
repnz
dec
and
subl
cmp
xchg
cmc
cmpsl
mov
out
push
xchg
sub
ret
in
stos
mov
rcrl
push
push
and
cmpsb
add
cmp
add
dec
mov
mov
je
push
xchg
inc
xchg
out
adc
pop
je
push
daa
mov
sbbb
cmp
lods
dec
repnz
sar
call
jg
jo
outsl
xor
jnp
pop
out
push
iret
mov
fimull
ror
and
cmp
dec
out
and
mov
pop
movsl
jle
mov
jae
mov
adc
pop
cmp
daa
xor
fwait
pop
shrl
in
xor
jge
dec
scas
movsl
outsb
js
mov
dec
mov
loop
int
mov
test
cltd
ds
cmpsl
testb
dec
xor
hlt
cli
xchg
push
imul
mov
sbb
outsb
xchg
jns
cmp
add
mov
std
int
cmp
mov
les
iret
movsb
cmp
test
jmp
outsb
add
pusha
lods
xchg
inc
sub
daa
incl
and
pop
cmp
jl
sub
outsl
sub
call
xchg
dec
jae
addr16
pop
cmp
loopne
pop
imul
jcxz
cmp
clc
aam
cld
mov
adc
adc
lret
mov
or
mov
cmp
jo
jne
pop
mov
das
inc
sbb
fdivr
fwait
pop
lds
mov
and
and
in
jo
mov
push
xlat
inc
push
and
dec
jle
cltd
jb
fcoms
adc
push
jg
xchg
inc
pop
xchg
and
push
bound
lret
je
pop
aad
mov
outsb
inc
ss
out
push
xor
mov
jge
stc
fisubrl
jle
jmp
push
orl
add
push
sbb
insl
inc
mov
adc
xor
mov
adc
sti
mov
sti
inc
dec
popa
xor
pop
icebp
mov
cs
push
push
xchg
insl
cli
pop
in
sbb
ret
lods
addr16
push
and
inc
hlt
mov
push
clc
inc
inc
inc
je
push
dec
pminub
inc
mov
xchg
out
mov
xchg
aam
or
pop
xor
add
fists
and
xchg
pushl
repnz
iret
push
repz
add
push
aam
inc
sub
or
or
cwtl
inc
and
loope
and
rcl
push
dec
mov
cs
push
push
mov
and
lods
fwait
and
mov
inc
leave
inc
and
mov
mov
ret
clc
jns
in
or
inc
adc
lcall
jne
add
jg
fs
notl
dec
pop
sub
dec
insl
push
lahf
sub
cmpsb
jle
jecxz
es
dec
add
rcl
in
xor
movsb
out
shlb
lods
int3
fcom
add
adc
and
push
mov
dec
movsl
jae
shlb
cmpsb
and
test
jb
mov
inc
mov
adc
jp
xor
mov
and
adc
add
in
push
sbb
popf
pusha
mov
clc
popf
mov
je
xor
aam
sbb
cld
jmp
sbb
addr16
adc
movsl
or
jb
bound
jg
dec
rcrb
into
cmpsb
loop
stos
gs
fwait
pop
cmc
filds
into
pushl
stos
movsb
push
push
xor
mov
add
add
inc
insb
mov
dec
stc
fs
pop
lods
dec
or
insb
adc
cli
ret
test
sub
jns
nop
rcrl
sbb
push
test
push
popa
int
cmp
cli
push
or
push
push
int3
dec
shl
insl
dec
loope
inc
cmp
and
mov
pop
test
les
test
pop
sub
iret
mov
xlat
test
pop
adc
jg
adc
inc
jnp
js
inc
xchg
sub
out
mov
arpl
add
addr16
sub
push
and
jae
mov
and
sahf
xor
jmp
repnz
repz
and
cmpsb
cli
jno
or
jno
cmp
lret
jae
xchg
std
mov
int
gs
movsb
das
popf
and
addr16
push
cmpsb
movsl
pusha
jne
rcll
imul
scas
sbb
call
cmpsl
ja
cs
popa
movntps
fsubs
push
and
outsl
nop
orb
test
adc
jno
push
ret
jmp
pop
aam
stos
dec
imul
xlat
and
mov
adc
test
addb
mov
ror
pop
push
ffreep
mov
adc
sub
shrl
cmp
xchg
mov
push
leave
lods
jle
clc
sub
les
icebp
mov
shrl
mov
test
dec
mov
rolb
imul
adc
call
jecxz
stos
pop
mov
jl
clc
add
popa
ja
xor
daa
dec
dec
pushfw
repnz
push
add
mov
shrb
pop
xchg
rcll
aad
hlt
repnz
mov
adc
mov
int
ljmp
sub
pusha
inc
subl
inc
mov
push
popl
gs
les
outsb
aas
orb
stos
ss
insb
outsb
adc
push
fldl
push
mov
loopne
ret
cmp
ds
sub
pop
pop
rorl
in
pop
test
jmp
stos
pop
popf
dec
xchg
cmp
rcr
xchg
je
push
gs
ss
fimull
enter
xchg
or
aas
or
repnz
scas
xor
push
pop
mov
jns
std
xchg
test
outsl
imul
sub
add
xor
inc
insb
sub
mov
push
fidivrs
push
sub
add
shr
clc
int3
out
out
addl
push
mov
ss
push
xchg
jp
out
add
cmc
iret
cmp
dec
dec
push
jnp
std
push
sbbb
mov
push
jnp
lahf
inc
xchg
in
cmc
push
push
shl
addr16
push
inc
jl
cmpsl
and
push
arpl
cmp
movsb
lcall
es
mov
mov
pushf
cmpsb
adc
xor
jp
out
sbb
mov
rcll
mov
cmp
lcall
jg
fistpll
iret
xor
stos
mov
cmp
jne
mov
shlb
shl
iret
lock
jge
fisubrl
dec
in
fbld
jle
andl
or
add
mov
lcall
call
mov
je
push
mov
divb
sub
and
add
sbb
pusha
mov
xchg
cwtl
fs
mov
jbe
dec
or
pop
enter
dec
cmp
lsl
clc
insl
xchg
sbb
aaa
cmpsb
sub
aam
sbb
mov
lret
cld
xor
dec
or
or
xlat
add
std
daa
je
sbb
cwtl
pop
jge
inc
in
adc
inc
mov
sahf
lahf
push
leave
pop
push
test
hlt
mov
adc
add
pop
fwait
pushf
dec
and
pop
js
xchg
das
stos
adc
ret
pusha
or
dec
in
cmpsb
dec
jmp
fistps
pop
gs
xor
dec
in
mov
stc
iret
cmp
in
sbb
adc
jbe
inc
adc
inc
xor
push
stos
mov
xor
fwait
or
testl
jle
out
jg
fstpt
dec
dec
fcomp
movsb
fdivrs
subb
mov
es
repnz
inc
and
xchg
adc
jno
or
cmc
cltd
mov
je
xor
scas
mov
leave
bound
pop
test
xor
sub
push
push
int
int3
cwtl
and
xchg
insl
and
std
mov
ja
test
stos
xor
cs
movsl
xchg
and
cmp
ficoms
shrl
push
jnp
cmpsb
or
cmp
inc
std
fstpl
mov
int
lds
in
mov
xor
push
ljmp
js
mov
lock
or
sub
adc
adc
mov
fistps
lds
inc
data16
push
aad
mov
hlt
or
mov
fstps
jae
mov
add
stos
mov
stc
jne
inc
mov
push
mov
mov
shll
and
dec
xchg
dec
and
mov
fsubl
cmp
adc
cli
daa
sub
lods
mov
jg
daa
iret
xchg
jnp
sbb
inc
clc
aam
scas
cmpsl
shrl
xor
repnz
js
aaa
push
jns
dec
dec
imul
aam
jb
and
mov
xor
repz
js
scas
cmp
mov
loop
jno
adcl
inc
or
jnp
mov
dec
sub
arpl
int3
cmpsl
adc
or
or
call
jne
fs
shlb
lret
repz
and
inc
ja
outsb
std
inc
cmp
lret
jle
or
mov
cld
mov
ss
repz
cltd
or
pop
cwtl
cmp
dec
fmulp
mov
je
pushf
cmp
in
xchg
mov
icebp
mov
popa
jg
testb
mov
in
or
jo
push
ds
lods
jb
insb
ss
iret
jbe
fadds
push
bound
jae
es
jp
insl
in
dec
dec
mov
add
pop
adc
sub
jbe
adc
in
xor
ret
xchg
cwtl
int3
popf
mov
jp
mov
mov
adc
leave
adc
push
fs
cli
or
mov
push
and
add
jmp
pushw
xor
add
jecxz
xchg
pop
or
or
push
xor
mov
out
out
sar
xchg
pop
jne
mov
add
mov
mov
xchg
rol
dec
xor
clc
fimuls
sbb
add
or
movsb
ret
outsl
jbe
addr16
aam
mov
cmpl
jle
sti
test
jno
push
sahf
movsb
lret
sarl
cmc
cli
jb
dec
sbb
xor
inc
sbb
dec
ja
in
imul
movsb
mov
add
jp
adcl
ficompl
sarb
lods
xor
mov
aam
mov
fwait
cmp
inc
add
shrb
out
xchg
push
mov
pop
cld
lea
lahf
mov
and
data16
mov
dec
shlb
mov
ss
ds
sti
pop
sar
int
mov
ret
ficoml
cmp
daa
dec
out
push
rcrb
pop
dec
std
imul
dec
mov
mov
insl
push
inc
popf
mov
mov
xor
and
push
test
ljmp
shll
lock
xchg
enter
xor
pop
or
fidivl
int
stos
hlt
mov
xor
lret
out
mov
or
lret
outsl
mov
stc
hlt
xchg
scas
cmp
cmp
mov
xchg
sbb
push
imul
jl
cmp
negb
test
stos
or
bound
outsl
lret
xlat
push
mov
xchg
cmpsb
cltd
pop
adc
shll
push
xor
inc
push
adc
mov
ffree
jae
lret
push
and
stos
add
aam
jmp
data16
arpl
jo
inc
jns
cmp
push
xor
leave
les
sbbb
or
jbe
outsb
push
fwait
cmp
lret
clc
insl
shll
or
inc
dec
mov
scas
sbb
icebp
pop
jne
and
mov
jns
xor
cs
stc
mov
and
add
jae
adc
jbe
mov
mov
inc
jo
imull
loop
sahf
cmp
dec
outsl
and
mov
imul
xchg
mov
nop
inc
fidivrs
in
or
inc
testb
clc
add
popf
addr16
cmpsb
fisttpl
or
std
xor
test
lahf
test
jg
js
imul
in
mov
stos
dec
dec
jb
lret
rcrb
mov
adc
enter
fldl
cmp
filds
push
push
ret
in
mov
mov
cli
movsl
mov
lret
loopne
iret
or
call
add
test
aam
movsl
push
fs
popf
repnz
pop
xchg
push
sbb
fs
inc
mov
cltd
jae
movsb
mov
sar
ret
push
cmc
jg
or
insl
mov
fldl
xor
add
fwait
xor
fldl
xor
sbb
cmpsb
jns
xor
es
mov
stos
out
sahf
add
lahf
ret
sub
and
mov
cwtl
sbb
into
sub
cld
sbb
cmp
sbb
dec
test
lods
or
mov
je
loop
xor
fwait
outsl
das
mov
cld
ljmp
sub
arpl
test
sbb
dec
test
lret
and
mov
int
hlt
iret
movsl
pop
imul
imulb
add
xchg
rcll
push
ja
loopne
inc
pop
mov
inc
adc
push
sbb
xchg
orb
lcall
mov
push
dec
mov
and
cmp
dec
icebp
lds
push
sbb
mov
cltd
mov
movsl
movsl
daa
inc
shl
xchg
pop
loopne
imulb
mov
and
repz
daa
outsl
or
mov
inc
shll
dec
adc
stos
mov
ds
sub
enter
andb
sub
loopne
ficomps
lods
lods
pop
push
jb
in
xchg
or
adc
pop
lahf
aaa
dec
shrl
push
push
shrl
push
loopne
adc
stos
icebp
fwait
arpl
lahf
iret
jne
dec
ss
in
ja
dec
pusha
pop
fldcw
movsl
pop
cld
or
xchg
adcl
sarl
inc
aaa
notl
fnstsw
lcall
jg
cmp
cli
scas
cmp
sbb
jnp
jb
call
es
popa
xor
mov
xlat
bound
pop
and
out
stos
mov
pop
push
jecxz
aas
out
jmp
ret
adc
or
sbb
lret
push
icebp
jecxz
mov
and
cld
cmpsb
jne
pop
in
adc
in
mov
or
mov
xchg
jp
and
cs
frstor
sub
cmpsl
xor
adc
inc
les
cld
ljmp
cs
scas
mov
mov
mov
les
mov
jle
leave
pop
in
loopne
push
ja
mov
repnz
subl
lcall
daa
lds
cmp
aas
and
or
pop
lock
shll
jo
gs
cmpb
mov
shrb
rol
or
imul
fdivrs
xchg
aad
lret
pop
les
cs
sub
repz
sub
dec
pop
xchg
fldcw
ret
loop
mov
arpl
xchg
mov
pushf
sar
jmp
push
inc
popa
jge
mov
push
shll
and
or
cli
xlat
add
pop
xchg
imull
movb
xchg
lock
sbb
inc
xchg
jge
sub
ss
aam
in
pop
leave
or
sub
push
sahf
adc
cwtl
push
mov
push
cs
adc
imul
mov
inc
lock
xchg
repnz
call
jmp
mov
fidivl
dec
ss
dec
out
xchg
daa
andb
jns
jg
and
push
inc
adc
pushf
inc
add
push
mov
sbb
addr16
in
fmull
jge
std
test
lret
adc
addr16
mov
mov
mov
xchg
jecxz
test
jg
pop
cld
push
test
das
sub
loopne
pop
addb
mov
xor
adc
adc
or
xchg
dec
push
sbbl
xchg
dec
pop
nop
push
adc
into
push
xchg
dec
lret
cmp
cmc
pop
mov
out
dec
aad
jno
jns
jo
arpl
jbe
pop
jae
inc
fdivrs
push
pop
shlb
imul
mov
and
mov
jg
inc
xor
mov
aad
stc
jnp
xor
repz
or
in
jecxz
aad
inc
pop
xor
xor
mov
and
and
int3
and
adc
mov
add
popa
aam
mov
fidivrs
pop
mov
hlt
cmpsb
fnsave
rcrb
mov
xorl
std
dec
mov
mov
jg
push
call
fs
push
rorl
add
sahf
mov
jmp
mov
test
daa
pop
mov
rcll
push
cwtl
stos
mov
insb
mov
dec
scas
dec
mov
xor
lret
sbb
cld
push
cmp
mov
sbb
cli
cmpsl
ss
fwait
test
inc
dec
and
ljmp
out
je
sub
push
loope
out
pop
xor
jbe
out
cwtl
pop
pop
pop
out
out
in
sub
add
jae
cli
loopne
mov
out
fiadds
leave
xchg
int3
adc
in
sub
sub
test
hlt
xor
ret
lret
jecxz
sub
cmp
stc
dec
pop
sbb
pop
das
xchg
cmpsb
jno
repnz
lahf
in
cld
out
push
lock
xchg
mov
popf
outsb
ficompl
sub
scas
dec
dec
js
rorb
call
push
inc
inc
mov
add
sub
pop
lret
in
sbb
sbb
test
inc
mov
lock
add
push
mov
movsb
inc
gs
push
dec
addr16
mov
dec
lods
test
inc
mov
ret
dec
jmp
xchg
xchg
sub
dec
es
cmpsl
das
xlat
dec
push
fcmovnb
lcall
xor
movsb
cmpb
push
fcomi
cltd
mov
movsl
xor
and
cmc
or
sarb
pop
push
dec
ds
add
hlt
mov
stos
clc
imul
ficoml
sub
mov
incb
adc
xchg
adc
adc
es
xlat
mov
lret
shrl
xchg
out
std
lahf
pop
adc
jb
sar
xor
inc
frstor
cs
insl
xor
lock
dec
sbb
dec
repz
or
or
icebp
imul
rcll
push
pushf
stos
imul
das
lret
sbb
cmc
ret
imull
jno
sub
dec
lods
dec
std
fists
pop
mov
inc
lret
or
iret
movsb
in
sti
push
add
and
cli
jno
int3
rolb
add
push
dec
imul
mov
lods
scas
cmp
insb
iret
jo
push
adc
clc
pop
add
cmp
push
inc
stc
xchg
xorb
insb
and
xlat
jp
mov
jae
sub
mov
or
and
movsb
lods
iret
data16
test
and
push
daa
pop
sar
mov
gs
pop
mov
inc
inc
sub
adc
jne
jmp
fnstenv
push
or
fstl
lcall
fwait
mov
mov
clc
in
inc
imul
cs
add
sub
inc
dec
mov
jge
mov
add
iret
sub
mov
dec
iret
mov
mov
adc
pop
aaa
aam
dec
outsb
fdivs
jecxz
push
cld
pusha
or
cld
add
sbb
lea
in
out
push
mov
mov
daa
arpl
dec
movl
jo
inc
nop
call
push
adc
pop
mov
clc
push
pushf
push
rol
push
imul
das
mov
adc
or
add
sub
push
jns
jns
movsl
push
and
or
dec
or
sub
mov
adc
inc
sbb
outsl
jne
and
int3
or
pop
xchg
aad
shll
lret
mov
fadds
aad
orb
and
sbb
movsl
mov
jg
lret
cmp
aam
call
ja
dec
ljmp
jg
pushf
sbb
inc
movsl
pop
inc
cmp
cmpsl
jl
adc
dec
jbe
push
xchg
push
lea
lcall
inc
lret
sub
outsb
inc
mov
popl
xor
addr16
push
into
outsb
jge
push
ds
cmpsb
add
rcll
pushf
cmc
iret
xlat
mov
xchg
sbb
inc
xor
jle
and
push
inc
pop
pop
sub
fsubs
fnsave
nop
jg
out
out
cltd
out
jno
push
mulb
jmp
mov
sub
sub
mov
pusha
adc
loop
and
popf
push
js
cmp
dec
fistl
test
enter
sub
in
aaa
in
push
push
xor
divl
cmp
and
sbb
push
stos
and
dec
popf
int3
out
mov
dec
mov
pop
cmp
mov
mov
cwtl
rorb
mov
cmp
lds
dec
push
lds
cli
and
xchg
xrelease
mov
pusha
adc
pop
es
icebp
lcall
out
xchg
scas
adc
mov
loopne
jl
cmp
mov
push
mov
daa
mov
outsl
and
and
pop
cmpsl
scas
sbbl
dec
dec
into
addr16
sub
and
mov
js
xor
jp
mov
movsl
fbstp
ret
fs
cltd
jnp
nop
out
in
out
xchg
loop
sbb
sbb
xor
bound
mul
imul
orl
loope
push
sbb
test
push
fstl
cmp
mov
cs
loop
push
stc
mov
imul
stos
inc
mov
aaa
and
add
aad
lcall
inc
cs
imul
sub
jecxz
jge
jo
pop
mov
lds
push
sub
or
scas
out
cmc
jecxz
test
mov
repz
mov
xchg
imul
nop
or
enter
leave
int3
lds
pop
imul
mov
xchg
mov
pop
inc
fisttps
insl
outsb
icebp
movl
xor
aas
xchg
cwtl
pop
gs
cmp
loope
lods
movsb
sarl
jb
adc
pop
xchg
outsb
aam
cmp
sub
subb
xor
ss
cmp
mov
lds
cmc
dec
imul
sbb
inc
test
mov
sub
xor
sbb
lahf
adc
mov
fwait
aam
sbb
lds
xchg
int
cltd
pop
loope
andb
sub
cmc
push
sahf
jbe
add
adcl
fsubrs
pop
adc
jg
lcall
mov
test
jmp
cmpsb
jle
das
pop
aad
or
and
push
out
imul
xor
xorl
imul
fdivr
xchg
xchg
xchg
mov
test
bndmk
dec
fdivs
mov
fwait
gs
xchg
addr16
test
mov
push
sbb
ljmp
into
pop
shrl
mov
imul
ds
adc
les
mov
mov
movsl
mov
cs
fcoml
xor
out
xchg
addr16
jecxz
movsl
xchg
sub
sub
jno
adc
and
sahf
adc
repnz
and
mov
je
test
and
pop
xchg
push
add
enter
outsl
mov
mov
fidivrs
add
xchg
inc
mov
or
pop
push
ret
dec
imul
mov
xchg
mov
inc
push
pop
jge
outsb
das
mov
sti
scas
insl
inc
fsub
xor
add
les
cmp
test
cmpl
push
sub
pusha
inc
pushf
les
xor
and
cli
and
sbb
cmc
frstor
xchg
mov
clflush
inc
jg
sbb
cmp
iret
add
into
xor
int3
fdivr
adc
or
cld
rdtsc
or
mov
xchg
cmpsb
and
mov
mov
scas
sbb
lock
shl
pop
std
ljmp
push
ror
cmpsl
mov
adc
mov
fadds
mov
lods
and
jnp
outsb
xchg
adc
adc
fcoms
lea
or
xor
mov
fwait
in
ljmp
orb
sahf
or
mov
cld
cmp
cmp
add
mov
lahf
out
int
in
lret
sahf
repz
sbb
int
jns
mov
dec
xor
cltd
out
mov
cmp
jae
outsl
stos
lock
daa
sub
xchg
dec
or
ljmp
sbb
mov
inc
pushf
push
push
jne
fs
in
in
add
pop
push
daa
lcall
xor
in
sbb
jmp
mov
inc
mov
in
jne
es
or
pop
leave
imul
or
jbe
fcompl
mov
and
jg
push
dec
mov
aam
xor
rcll
xchg
cmp
cmp
scas
iret
cmp
jmp
mov
xor
test
and
jne
cltd
loop
sub
mov
aaa
int
cmp
dec
sub
inc
dec
shrb
and
enterw
xor
dec
in
sbb
in
test
adc
push
sahf
and
xchg
dec
clc
sub
int
imul
push
push
push
je
sbb
ret
push
dec
popa
popf
sbb
jmp
push
sti
movsl
and
sbb
sbb
push
sbb
jb
mov
out
sub
rcl
cli
xlat
cmp
mov
pop
lcall
sub
xchg
or
sbb
std
es
and
into
sub
xchg
pop
idiv
test
in
into
shr
adc
pop
add
icebp
mov
or
and
dec
add
jns
and
add
shl
mov
aas
inc
call
enter
sub
adc
jle
or
jb
int
xchg
jle
push
ficompl
loop
fstpl
iret
xor
fadds
cmp
jbe
jg
sub
mov
mov
jnp
pop
aas
push
jo
jno
inc
adc
jb
mov
pop
mov
dec
xor
jno
sub
cwtl
mov
data16
insl
and
stos
mov
call
stos
cltd
xchg
subb
cmp
pop
cmpl
movl
sar
cwtl
cmpsb
or
nop
js
outsb
shlb
jb
pop
dec
inc
daa
cmpsl
cmp
and
pop
sbb
repnz
rorl
mov
pop
in
push
and
icebp
sbb
push
mov
add
add
mov
push
jmp
sbb
mov
adc
push
out
xchg
sbb
fs
sbb
xor
inc
hlt
stc
fs
orb
or
add
ljmp
dec
gs
sar
adc
mov
cmc
imul
out
mov
lret
cmp
add
in
out
dec
fisubrl
push
and
cs
jecxz
fwait
add
popa
cmp
daa
sbb
mov
mov
in
aaa
call
jnp
xor
add
and
mov
dec
xchg
cmp
or
ret
and
jg
dec
sub
cmp
push
sub
hlt
lahf
inc
dec
add
push
bound
stc
outsb
outsl
pop
sub
mov
clc
ljmp
mov
xchg
adc
xor
jbe
mov
fnstenv
mov
nop
mov
sub
jae
lea
test
ficompl
pop
mov
jl
test
scas
cmc
loop
mov
ja
adc
lret
push
and
clc
shll
in
cmp
mov
divb
jmp
cmp
dec
shrl
icebp
mov
inc
stos
mov
adc
xchg
mov
sub
cs
mov
push
sti
loop
sbb
pop
sub
adc
xor
adc
insb
cmp
repz
test
jb
xor
mov
pop
je
xor
fisubs
mov
dec
adc
pop
jbe
fistpl
test
dec
fisubs
aaa
cmpsb
or
lcall
call
dec
imul
push
or
xor
jnp
mov
fwait
push
or
dec
loope
inc
mov
mov
sbb
fwait
cmp
enter
cmp
gs
adc
int
je
stos
jns
fldl
jno
push
mov
cwtl
inc
loope
mov
lods
dec
out
cmp
loop
andl
cmp
aam
adc
dec
lock
jb
inc
push
inc
jae
adc
aaa
shrl
cmp
subb
push
dec
pop
mov
in
jno
sub
xor
jecxz
xchg
rorl
das
pop
test
pop
xor
or
into
mov
leave
and
stos
jo
repz
push
mov
sbb
jmp
jbe
sub
inc
imul
in
stos
adc
sbb
jecxz
lret
rcrb
and
nop
dec
xchg
sub
dec
insl
cmp
gs
ds
push
nop
cmpsl
sahf
or
movaps
scas
ja
inc
test
jge
stos
mov
jo
ss
or
lods
jb
or
sbb
xor
pusha
jno
add
in
cmc
and
dec
cmpsl
shll
jb
repnz
call
bound
adc
mov
mov
mov
and
roll
and
push
mov
cld
xor
jno
sahf
popa
sarl
into
xor
xor
data16
mov
call
inc
cmp
out
movsb
jmp
icebp
stos
scas
xchg
mov
sti
and
outsb
adcl
mov
mov
pop
sub
test
aas
ss
insb
push
and
dec
in
fs
imul
add
mov
mov
adc
cmp
aad
sbb
push
xchg
and
cmp
ret
jmp
mov
negb
and
dec
aas
loop
pop
mov
push
dec
cltd
daa
cmpsl
cmc
lods
mov
xchg
add
cli
pop
push
or
xor
shl
inc
pop
popa
xchg
add
mov
adc
sti
int
xchg
pop
pop
sub
pushf
stc
div
mov
movsl
movsb
xchg
ret
pop
pop
mov
dec
ljmp
xchg
repz
xor
mov
out
clc
cmp
ror
test
es
test
inc
out
dec
push
lcall
xchg
aas
pop
fsub
imul
mov
adc
dec
cs
jle
ds
icebp
push
jecxz,pt
inc
fwait
negb
pop
ds
addl
enter
add
cmpsb
mov
cltd
dec
sahf
pusha
jbe
pop
call
sub
xor
cltd
lods
cltd
xor
nop
outsb
cltd
adc
aam
mov
std
sbb
ja
or
pop
xchg
push
pop
xor
test
repz
jle
dec
mov
les
push
jo
pushf
inc
scas
call
mov
inc
pop
mov
pushf
popf
loop
inc
pop
test
ret
imull
cmpsb
hlt
jnp
jmp
scas
or
jo
jo
or
pop
pop
jp
push
push
and
shll
mov
push
add
aaa
loopne
xchg
sbb
lahf
insb
lcall
scas
popa
push
mov
mov
jmp
or
jae
cmp
sbb
push
pushf
or
jbe
fwait
inc
sub
mov
or
cmp
sbb
push
icebp
aas
xor
or
push
pop
mov
xlat
mov
jg
call
enter
xchg
add
pop
inc
add
stos
lret
cmp
lock
push
jns
repnz
xor
push
test
jl
push
mov
cmpsb
and
stc
xor
imul
or
cltd
cmpl
bound
mov
inc
fstpt
int3
cmp
jp
sbb
jbe
xchg
lret
sbb
pop
dec
push
inc
jo
xor
xchg
shll
xchg
lods
out
cmpsl
ficomps
mov
cmp
int
je
pop
int3
push
cmp
inc
cs
or
jmp
aaa
push
scas
jb
jp
xchg
add
adc
repnz
xor
daa
jae
outsb
shlb
pop
dec
cmp
dec
push
fs
cmp
les
rorb
les
add
in
addr16
test
mov
push
adc
sbb
add
lahf
mov
cs
and
mov
mov
sub
aaa
gs
adc
inc
push
dec
in
mov
mov
cwtl
inc
out
inc
shrb
iret
ds
je
in
mov
rcrl
push
xor
leave
mov
repnz
xor
or
in
pop
test
aad
pop
xchg
sarb
scas
lahf
xor
inc
insb
idiv
inc
xchg
call
adc
data16
xchg
aad
addr16
mov
add
xchg
and
insb
jne
xor
adc
movsl
jae
mov
add
mov
push
rcll
jg
cmp
pop
xchg
pushf
pop
xor
xchg
lods
fdivl
pop
ffreep
push
sbb
cmp
ret
arpl
js
pusha
lret
cli
ds
and
inc
insb
sbb
mov
out
scas
jb
lret
loopne
xchg
pop
cs
insl
jmp
lahf
mov
sti
dec
es
cmp
pusha
mov
mov
adc
adc
jmp
mov
inc
mov
mov
add
mov
xor
out
jae
xchg
testl
arpl
adc
inc
mov
xchg
pop
fildll
in
orb
ficoms
jl
andl
mov
rol
mov
mov
addr16
cld
jns
and
sub
mov
test
scas
in
xor
mov
jmp
pop
pop
pop
push
push
sub
aad
or
in
pop
or
and
cwtl
es
add
xchg
adc
fisttpll
repz
fstps
jle
std
insl
cmp
inc
adc
rcll
aam
pushl
stc
hlt
int3
addr16
ficoml
sub
int3
shrl
stos
dec
inc
jl
dec
sbb
cwtl
insl
repnz
ret
add
call
push
jg
add
and
stc
popa
mov
arpl
mov
and
push
cli
or
sub
adc
movsb
lock
loope
imul
pop
stos
daa
pop
sub
je
aam
pop
stos
push
jp
js
lcall
xchg
push
and
push
mov
or
mov
jg
sbb
jecxz
ljmp
lret
movl
sbb
data16
xor
jmp
idivb
imulb
pushf
sub
sti
add
sbb
dec
pop
dec
sub
mov
mov
dec
cmp
mov
dec
cmp
aas
ds
cmpsb
cmp
pop
mov
xor
jnp
pop
xorb
mov
lods
pop
mov
flds
lahf
sub
imul
and
cmc
mov
mov
aad
cmp
es
fsubl
dec
das
mov
push
stc
xchg
inc
bswap
sbb
cmp
xchg
fsub
push
ret
in
outsl
xor
cmp
loopne
xchg
adc
xchg
mov
clc
adc
xchg
add
pop
addb
add
pop
cltd
xlat
adc
movsl
gs
cmc
das
imul
rcrl
fcmovne
clc
sub
pop
pop
sti
lea
cltd
push
cmp
clc
mov
test
in
jbe
imulb
fs
mov
rcrl
or
out
adc
iret
pushf
inc
loope
sbb
out
jno
mov
cmpsl
ret
addr16
mulb
jae
daa
inc
test
cltd
push
xlat
stos
xor
jle
jmp
cltd
outsb
jnp
stos
dec
jg
jno
mov
mov
pop
rolb
mov
in
cld
pop
add
sar
adc
fstl
int3
sbb
je
cmp
ret
mov
sarb
fwait
lea
std
data16
aad
mov
ss
xor
add
mov
xchg
fistpll
ret
addr16
inc
das
mov
sbb
call
xlat
test
in
dec
push
loopne
fnstcw
test
rclb
push
lods
testb
rorb
sbb
test
popf
bound
add
and
scas
faddl
sahf
cmp
cmp
cmp
mov
adc
mov
cmc
push
pop
sbb
sub
add
dec
out
push
xchg
test
jbe
xchg
sbb
pop
gs
push
lds
mov
sbb
scas
xchg
dec
xchg
test
outsb
sub
mov
stc
jmp
push
push
jno
xor
dec
cmc
add
in
pop
lock
cmpsl
cmp
sti
xchg
xorb
lret
mov
scas
outsb
mov
loop
xor
mov
push
out
push
sbb
and
and
xor
test
mov
subl
sub
loop
add
shlb
cmpsb
mov
pushf
ja
jg
loope
inc
inc
in
sub
ret
in
pop
sbb
and
push
jnp
outsb
shlb
cmp
xor
enter
call
les
popf
repz
std
les
loope
bound
adc
push
mov
pop
arpl
adc
push
xor
lret
mov
or
pop
mov
sahf
mov
push
call
loopne
jmp
sub
cld
movsl
loopne
cmp
ss
scas
das
cmp
in
addr16
push
int3
cltd
lods
in
add
das
int
adc
adc
mov
push
jl
sbb
shl
mov
nop
jge
mov
es
dec
xor
and
in
inc
pop
mov
in
call
push
ret
dec
test
in
cltd
cld
sahf
lds
push
cmc
pop
test
loop
pop
mov
mov
mov
inc
enter
xchg
ficoms
or
jecxz
sahf
fwait
mov
mov
pop
pusha
je
jno
xor
nop
insb
loope
add
and
lods
jae
nop
enter
mov
orb
test
fwait
xchg
divb
xchg
mov
pusha
cmp
data16
xchg
mov
std
xchg
adc
xchg
push
xchg
aas
mov
jge
push
popf
in
ficoms
mov
dec
push
ret
or
adc
out
lcallw
push
dec
mov
or
outsl
and
xchg
sti
jge
push
inc
mov
inc
pop
and
pop
outsb
jp
sub
pop
and
jecxz
loope
pop
xchg
lea
lcall
add
and
dec
or
pop
xor
add
pop
xchg
je
pop
loop
mov
pop
cli
sbbl
xchg
enter
mov
mov
pop
pop
pop
jns
xchg
mov
iret
xchg
add
xor
rcl
cli
fldl
cmp
mov
ljmp
add
mov
xor
test
shrb
movsl
dec
push
mov
pop
scas
cmp
outsl
inc
mov
pop
imul
movsl
iret
mov
and
mov
sbb
jnp
sbb
es
loopne
push
mov
pushf
jmp
add
cmc
jecxz
hlt
sbb
fnstcw
push
in
push
jno
roll
shrl
mov
xor
pushf
push
mov
pop
mov
mov
jns
sbbb
sub
sbb
and
out
mov
jo
fldz
and
pop
outsl
jo
xor
call
push
imul
xor
xor
cld
cmpsl
js
repnz
shlb
out
das
and
into
jbe
jge
cltd
push
in
mov
sub
pop
les
mov
imul
or
cwtl
inc
insl
adc
sub
lea
mov
ja
dec
enter
imul
adc
xlat
inc
out
roll
push
mov
jb
cmp
add
adcl
hlt
cmp
push
and
out
mulb
fcmovbe
push
pop
loop
std
sub
rolb
loop
mov
pop
mov
cs
ss
xor
stc
ds
jecxz
jbe
adc
clc
arpl
cmpsl
cmp
or
cld
add
cmp
push
imul
movsb
shll
aad
pusha
nop
inc
faddl
pop
xor
xchg
popf
mov
outsl
add
jecxz
jbe
and
jmp
loopne
sub
push
push
and
std
mov
inc
mov
fisubrs
cmpsb
hlt
sar
cmpsb
das
out
dec
xchg
jb
xchg
jae
andb
sbb
cmp
pop
fadd
mov
cmp
xor
inc
popf
fisttps
fwait
dec
cmp
jne
mov
jmp
pop
pop
mov
sub
or
pop
lods
fucomp
das
mov
out
cmp
mov
sub
jo
xor
adc
icebp
insl
cmpsb
loope
push
icebp
aad
imul
mov
xchg
movsl
cli
sbb
arpl
inc
lcall
inc
int3
mov
add
jmp
lahf
mov
inc
js
xchg
lock
jno
mov
es
clc
fstps
sub
dec
xchg
int
jmp
jmp
andl
mov
adc
mov
mov
and
adc
adc
aaa
neg
push
mov
mov
push
fs
adc
pop
inc
cmpsl
jno
imul
add
loop
loope
data16
incl
lcall
mov
dec
call
lds
mov
adc
sub
cmp
hlt
ret
jns
bound
push
dec
pushf
lock
mov
adc
cli
shrl
add
out
push
dec
addr16
cld
inc
mov
adc
xor
inc
mov
repnz
out
into
adc
cmp
out
xchg
pop
cli
iret
cmp
lds
jno
and
jnp
repnz
push
adc
mov
cli
pop
jnp
mov
jne
call
hlt
dec
lods
aas
inc
add
cs
xor
aam
sbb
push
call
jl
imul
push
fdivl
dec
iret
xchg
and
cmp
imul
bound
xchg
inc
fwait
sbb
dec
aaa
xor
inc
mov
and
idiv
in
cmp
mov
insl
mov
cmpb
jns
mov
jge
or
testb
popf
push
xor
xor
fmuls
gs
push
dec
add
jmp
call
and
or
ja
repz
mov
fsubrl
pop
notb
cmp
sub
adc
in
and
lea
in
mov
pop
cwtl
rcrl
jp
mov
jle
adc
cli
sbb
mov
dec
js
jl
and
notb
cmc
scas
scas
bnd
shll
int3
adc
push
or
mov
xor
out
call
lods
adc
insl
fnsave
sbb
mov
nop/reserved
fmulp
movsl
sub
adc
fwait
and
cmp
cltd
or
or
jne
mov
enter
dec
jnp
fstpt
popa
rol
fcmovb
cmpsl
je
push
jl
ffreep
cmp
lods
fs
sub
pop
adc
fwait
jbe
xor
sbb
jo
adc
aaa
rcrb
jo
sbb
scas
insl
rorl
int3
in
sbb
sbb
add
inc
mov
and
ret
cli
sub
scas
into
add
sarl
xchg
sub
jo
outsl
sub
jb
adcl
mov
leave
leave
fsubs
ret
xor
rcrl
jne
dec
divb
xchg
js
inc
aaa
ret
fsubp
hlt
shlb
mov
lret
icebp
test
test
mov
test
sub
mov
ficoms
dec
in
jb
add
cmpsl
mov
fists
add
ret
shll
popa
fs
pop
lock
iret
inc
iret
and
cmpsb
adc
sbb
mov
jb
jg
mov
mov
add
movsb
test
leave
insb
xor
mov
icebp
adc
add
xchg
sub
xchg
and
pop
mov
pusha
mov
sub
nop
in
ret
mov
stos
add
xchg
inc
adc
jo
lret
fstpt
mov
adc
add
and
dec
xchg
sub
sub
fbstp
push
cmpsb
lret
pop
jne
sbb
mov
sub
jb
jp
dec
xchg
test
push
sbb
cli
int
push
or
and
pop
imul
push
scas
sti
mov
lcall
loopne
push
pop
popf
cmp
or
inc
mov
add
push
popa
lea
adc
out
mov
mov
and
adc
adc
push
dec
mov
fidivrs
mov
dec
sub
jg
jo
cmpsb
scas
repnz
lret
push
cmp
hlt
int3
or
push
mov
ja
lcall
jle
cmp
xor
adcb
mov
or
stos
lea
xchg
mov
cmc
mov
addr16
pop
in
addr16
dec
dec
addb
jmp
incl
data16
xor
cltd
filds
sub
mov
lret
sahf
aad
or
xor
ss
loope
jbe
sub
mov
cmp
movsb
dec
in
into
ljmp
mov
mov
mov
mov
and
cmp
and
jmp
dec
adc
sub
xorl
jnp
push
out
pop
dec
sub
mov
jns
xchg
mov
mov
mov
lock
inc
inc
stos
inc
sarb
scas
or
mov
addl
mov
iret
push
fcomps
lds
inc
jne
adc
das
adcl
mov
xor
push
or
jl
sti
mov
fwait
in
gs
lahf
ret
jp
adc
shl
cld
sbb
ljmp
mov
push
dec
test
cmp
jb
inc
inc
mov
add
cmc
out
inc
dec
push
repnz
frstor
scas
scas
dec
jg
push
sbb
dec
jno
into
shlb
aad
decl
mov
sbb
leave
clc
xchg
cmp
mov
mov
imul
cmc
dec
imul
lcall
jne
iret
mov
and
gs
push
pushf
movsb
or
or
cmp
adc
and
arpl
mov
daa
jmp
das
xchg
mov
rcrl
fs
or
add
add
push
stos
das
arpl
sub
les
stos
add
xor
mov
push
mov
fwait
cmp
in
mov
outsb
xchg
movsb
sbb
icebp
adc
sbb
lock
sbb
rorl
sbb
frstor
inc
push
jp
adc
mov
mov
add
jno
subl
sub
adc
mov
push
add
sbbb
dec
sbb
dec
mov
clc
sbb
jns
cmp
lock
outsb
arpl
movb
pop
int3
xchg
or
rcll
mov
ficoml
cwtl
imul
mov
sbb
xor
push
dec
js
xor
sub
lahf
xchg
dec
pop
cmp
adc
cs
push
stos
mov
aad
dec
cmp
pop
cmp
fisttps
ds
jne
hlt
mov
imul
xor
push
mov
add
cwtl
pop
mov
or
pop
add
add
out
push
pusha
or
jno
in
into
cmp
daa
sti
xchg
in
jnp
stos
pop
jo
fdivl
loop
movsb
adc
scas
int
fistpl
out
fstp
add
gs
jmp
xor
data16
jbe
addr16
stos
push
lods
inc
xorb
or
cmp
arpl
shll
xchg
jae
das
int3
bound
daa
js
lret
sbb
daa
mov
mov
dec
xchg
frstor
fistl
out
xchg
mov
repnz
clc
mov
sbb
mov
push
arpl
loopne
inc
aad
and
cmp
sbb
and
int
out
xchg
out
inc
sbb
sub
add
stos
daa
and
adc
push
mov
repnz
and
sbbl
insl
lea
pop
aad
out
mov
jmp
mov
out
sbb
cmp
ret
jmp
cmc
adc
cld
dec
push
pop
test
lret
in
xor
or
mov
clc
loopne
cmc
mov
push
stos
cwtl
mov
hlt
sub
fsubr
push
dec
or
aam
rorl
scas
add
mov
jg
fcmovnu
mov
add
lds
ret
inc
ret
xchg
jo
inc
cli
pop
aas
das
ret
mov
test
in
add
mov
adc
out
loope
dec
loope
hlt
and
cmpl
jecxz
in
xor
nop
aam
push
insl
lret
imul
out
bound
icebp
cmpsl
ret
xor
mov
dec
outsl
cmp
mov
adc
mov
lcall
jg
add
cmpl
dec
push
test
repz
frstor
mov
sub
jp
lret
lods
ss
cli
adc
shrb
dec
or
lret
ds
pop
xor
and
xchg
cmp
in
andl
mov
pop
dec
mov
enter
in
mov
imul
stos
lds
mov
sbb
arpl
sub
dec
lret
out
pop
mov
or
add
ds
movb
mov
mov
dec
in
popa
movsl
jae
mov
test
pop
je
cmpsl
sub
popa
loope
jge
and
lods
and
dec
mov
inc
pop
arpl
dec
mov
mov
inc
rcll
stos
mov
aad
mov
mov
cmp
jnp
pop
loop
fiadds
push
mov
repnz
ret
test
cmpsb
ja
rorb
daa
lds
scas
lcall
pop
fmull
fwait
pushf
pop
int3
sbb
fidivrs
outsl
inc
mov
jmp
in
sub
push
lret
test
and
mov
and
mov
movsb
or
in
cld
jns
mov
mov
sbb
aam
call
test
add
sub
and
lret
push
mov
stos
sahf
pop
add
mov
cmp
movsl
sub
jae
es
ljmp
outsl
adc
sarb
mov
adc
sbb
cmc
ljmp
sub
pop
addr16
popf
cs
pusha
jns
pop
aas
mov
and
xor
cmp
and
mov
lea
call
dec
call
jb
mov
adc
sti
mov
inc
jmp
inc
fdivp
cmp
mov
sbbl
or
adc
mov
fimull
cmp
jp
pop
mov
leave
and
push
daa
jl
adc
mov
or
out
frstor
or
movsl
movsb
mov
out
sub
jg
inc
out
pop
cld
pop
sbb
addr16
ss
cmp
jl
sub
repnz
jecxz
repnz
add
std
jecxz
mov
jp
loope
sahf
ret
inc
xor
popa
movsb
xchg
fcmovne
bound
and
xchg
sbb
adc
xor
pop
scas
lock
push
mov
dec
rcl
pop
imul
shr
dec
out
sbb
pop
stos
loope
or
cmp
outsl
rcll
aam
lea
fsubs
lret
sub
dec
xor
push
mov
pop
ss
imul
lahf
dec
inc
inc
scas
aad
mov
daa
xor
leave
insb
or
fdivl
int3
jle
insl
xchg
repnz
cld
adc
fidivl
sbb
aad
xchg
add
mov
leave
scas
xor
xchg
es
xor
movsb
push
fisttpl
scas
rcl
mov
fisttpll
dec
repnz
sub
stos
pusha
stos
ds
xlat
adc
push
mov
adc
sbb
in
jp
lds
mov
scas
fs
pop
sub
jno
inc
inc
mov
ss
or
movl
mov
and
ret
xchg
rolb
jp
insl
sub
sub
ja
daa
xor
and
and
jne
sbb
or
loopne
xor
xorb
mov
pusha
sub
ja
aad
and
es
mov
mov
sti
shll
mov
xchg
jnp
enter
das
xchg
or
mov
nop
psubd
gs
leave
mov
adc
lahf
cmp
loope
or
lcall
stos
call
inc
inc
adc
sarl
or
push
jge
test
jmp
mov
repnz
imul
cmp
ljmp
ss
push
jnp
push
cwtl
pushf
mov
sbb
in
inc
cmpsb
rclb
push
mov
outsb
pop
shl
lods
sub
cmp
mov
lods
and
mov
lret
test
je
repnz
insl
mov
mov
mov
nop
aad
in
movsl
mov
outsb
and
pop
ljmp
xchg
rorl
mov
jle
dec
sbb
in
and
fstl
add
xchg
xchg
mov
popa
pop
aad
mov
pusha
adc
dec
push
sbb
jl
arpl
cmp
pushf
lret
cmp
sub
sbb
ret
dec
xchg
les
adc
jae
mov
das
xlat
push
cld
ds
arpl
lock
addb
lods
mov
jns
add
fwait
sub
mov
les
sub
es
xchg
sbb
lret
cmpsl
inc
mov
ja
fadd
nop
out
faddl
or
sub
fnstsw
mov
and
fisubs
xlat
sub
gs
movsl
in
mov
mov
sub
enter
movsb
arpl
inc
js
and
sub
sahf
insl
inc
add
div
mov
cmp
and
aad
push
adcb
scas
mov
inc
mov
dec
hlt
add
repz
push
sbb
jecxz
push
mov
and
out
mov
cmp
dec
pop
dec
jmp
insl
mov
sarb
or
pop
cmp
jns
popl
dec
lds
or
adc
dec
push
xchg
and
ffreep
jae
js
ss
pusha
lods
cs
es
pop
dec
xor
sub
popa
icebp
pop
lret
leave
shrl
jecxz
inc
inc
test
inc
cmp
jle
rcrb
add
pop
les
adc
inc
mov
mov
ficompl
mov
mov
add
int
pop
or
call
insb
adc
jl
fisttps
mov
rcrb
insl
push
popf
xlat
movsb
repz
inc
test
daa
xchg
mov
bound
ljmp
outsb
mov
pop
mov
cmpsb
xchg
mov
or
rcrb
inc
or
xlat
js
lahf
mov
stos
int3
loope
xor
out
inc
hlt
rep
xor
mov
rcrl
cwtl
sbb
loop
jnp
dec
dec
adc
jo
inc
ret
sub
ret
idiv
aam
data16
int
in
lahf
outsb
push
xor
cmpsb
cmpb
lret
pop
jge
mov
jp
cwtl
adc
mov
data16
ss
adc
jl
lock
ret
or
jb
jne
leave
pop
mov
ret
int3
imul
mov
cmp
sub
popa
dec
jae
aas
inc
xor
and
ficompl
adc
insb
loop
push
xchg
mov
cld
xchg
sub
int
mov
hlt
mov
lea
xorb
adc
xchg
push
fists
rorl
insb
dec
imul
dec
aaa
popa
push
in
into
jb
push
pusha
fnsave
arpl
mov
mov
rcrb
adc
mov
inc
xor
pop
mov
xchg
pop
pop
add
fimuls
push
and
rcrl
adc
push
iret
sbb
fwait
pop
fiadds
xchg
fmulp
movsl
test
add
fists
mov
out
cmp
mov
sub
mov
pop
jl
dec
cmpsl
mov
rcrl
and
sub
ds
clc
sub
mov
push
adc
insl
adc
mov
insb
mov
addr16
jae
lret
jo
inc
push
or
add
xchg
jb
sub
push
dec
mov
lret
pusha
call
das
pushf
xor
jmp
add
mov
sarb
mov
adc
cltd
fstps
inc
cmp
mov
lahf
aaa
dec
adc
add
jp
adcl
xchg
push
push
xchg
lahf
push
push
adc
nop
daa
add
subb
push
xchg
or
mov
ljmp
push
jb
add
lods
ds
andl
imul
cmp
xchg
enter
xor
xchg
push
fcoml
stos
xor
mov
imul
xor
cld
pop
pop
ds
inc
stos
xchg
lds
sbb
sub
push
mov
dec
ficoml
jo
pop
imull
mov
sahf
pop
imul
lcall
out
jle
mov
inc
mov
pop
jb
pop
popf
cmp
aaa
aas
cmpl
jl
test
movsl
inc
cmpsb
leave
icebp
mov
leave
pop
sub
or
bswap
mov
fwait
pop
insb
inc
push
inc
adc
pusha
cmpsl
mov
adc
inc
xor
fmuls
jmp
decl
in
outsl
pop
xor
cld
das
pop
or
jmp
dec
jmp
mov
fisttpl
lods
lcall
scas
xor
lret
int
sbb
push
pusha
sub
add
pop
mov
inc
mov
dec
jo
push
mov
ljmp
nop
sbb
divl
add
pushf
lock
xchg
je
test
pop
cmp
ficompl
cld
add
sub
push
jmp
das
daa
movsb
nop
or
mov
jge
fcmovne
mov
sbb
push
or
cmp
lret
adc
gs
pop
cwtl
sbbl
and
xor
mov
mov
arpl
jmp
ficoms
jae
loop
mov
adc
shlb
mov
in
cmp
add
pop
sahf
mov
pop
dec
sub
lret
aam
mov
aam
mov
shll
and
inc
mov
pop
lret
cwtl
jp
nop
rcll
pop
mov
and
out
mov
orl
lahf
call
inc
lods
movsb
syscall
into
mov
pop
add
jbe
jb
xchg
iret
jbe
jne
xor
movl
inc
jns
loopew,pn
shl
out
xchg
fsubl
mov
dec
pop
cmp
mov
mov
pop
enter
clc
cmp
hlt
mov
ficompl
test
inc
cmpsb
sarl
aas
lock
clc
pushf
or
pop
fistpll
pushf
push
fists
sub
cwtl
jle
movsb
xchg
xor
sbb
jl
js
or
jo
or
int3
add
ret
jbe
sbb
cli
sbb
jge
outsb
adc
gs
data16
mov
cmp
mov
xchg
add
or
push
aas
fs
aaa
dec
lds
test
mov
es
mov
mov
xchg
fadds
mov
ret
push
pop
jle
incb
fbstp
loope
inc
ret
xchg
aaa
mov
sbb
or
or
sahf
add
add
daa
stos
xor
mov
sti
pop
inc
inc
sahf
sti
add
pop
aas
mov
ror
ud2
sub
repnz
subb
jge
leave
pop
int
mov
pop
lea
push
adc
xor
sub
fisubl
or
dec
rcll
lods
sahf
daa
mov
movsb
nop
jo
cmp
lcall
les
cmpb
push
test
mov
cs
and
adc
test
sub
arpl
jbe
pushf
ja
adc
ffree
push
test
push
sti
cmpsl
pop
aam
inc
cmpsb
xchg
inc
xor
dec
dec
dec
aas
scas
movsb
xor
cmp
sarb
lea
add
jg
scas
dec
pop
and
testl
out
lcall
pop
xchg
push
and
nop
cs
jp
or
sar
lret
subl
pop
mov
icebp
xchg
dec
es
mov
shll
jo
rcrb
inc
mov
add
or
mov
xor
xor
mov
inc
movsl
xor
cwtl
jg
sub
dec
push
fdivr
mov
add
or
adcl
add
adc
sub
arpl
popf
add
mov
or
mov
xlat
pop
cmp
and
adc
lds
in
and
fsubs
and
and
jae
adc
rcrb
sbb
adcb
inc
idivl
pop
inc
mov
lds
fiadds
xor
rcll
cmp
stc
insb
into
dec
push
mov
das
rcrl
not
into
or
stos
test
ds
adc
xchg
adcl
lea
into
pop
and
cmp
out
aaa
in
lret
cmc
daa
lret
add
scas
ret
push
inc
jno
mov
loope
adc
daa
sbb
insl
sbb
repnz
leave
cmp
mov
loopne
movl
sub
int
iret
and
mov
dec
cmp
fldenv
repz
bound
daa
mov
fbld
push
in
jae
ret
int
test
adc
mov
ret
repnz
adc
scas
sbb
mov
and
les
sub
and
adc
push
push
out
ja
dec
ja
lret
lods
add
push
dec
push
push
test
dec
push
mov
and
icebp
or
lock
jb
int3
mul
outsb
and
cmp
cwtl
sarl
hlt
jmp
jmp
and
push
xor
mov
add
and
stos
and
fsubrs
pop
sbb
mov
push
xchg
stos
mov
adc
insl
xchg
imul
adc
inc
cmc
cs
or
adc
or
lcall
imul
fnop
sbb
imul
lret
dec
pop
cs
push
mov
test
inc
sbb
sub
std
cltd
adc
sub
sub
lret
push
ret
call
pop
cmp
out
aam
je
sbb
leave
xchg
fwait
push
or
lret
nop
daa
std
sub
mov
leave
cmpsl
mov
ss
or
stos
add
popa
or
inc
movb
fildl
cmpl
mov
xchg
scas
stc
jb
dec
insb
roll
in
cmpb
mov
mov
mov
jb
and
fldenv
inc
popf
iret
pop
gs
xchg
leave
clc
sbb
dec
movsl
stos
add
pop
popa
and
fld
int
add
and
mov
aad
push
inc
push
rcrb
sti
int
arpl
add
sub
addr16
test
decl
pop
div
imul
fwait
or
add
pusha
out
mov
enter
sbb
notl
addl
sti
pop
rcr
ror
mov
fsubrs
enterw
pop
adc
inc
jnp
cmp
cs
test
sahf
fwait
imul
sbb
or
lock
xchg
addr16
mov
in
mov
out
sub
arpl
mov
frstor
mov
imul
inc
adc
cmp
sbb
jns
push
fldln2
outsl
mov
sub
aas
inc
stos
inc
sub
or
fs
mov
mov
sbb
scas
jns
mov
aaa
cli
cmc
andb
push
sub
mov
fiaddl
fisttpl
hlt
cmp
out
icebp
pop
add
dec
or
lret
xchg
out
rolb
sbb
shlb
scas
jb
inc
test
sub
std
push
jg
insb
inc
data16
in
icebp
loop
mov
inc
aas
adc
movsl
sub
shll
jns
insb
jnp
sbb
stc
cmc
push
stc
adc
andl
push
negl
xchg
mov
repz
fisttps
mov
inc
repz
cmp
imul
or
loope
loope
pop
idivb
sarb
mov
aad
pop
mov
sub
loop
sbb
push
adc
dec
inc
dec
pusha
dec
jno
test
lcall
insb
cmp
mov
test
adc
add
sub
mov
inc
lret
divps
stos
mov
lds
imul
shl
ljmp
xchg
pop
jbe
sub
stos
rorl
mov
and
mov
mov
icebp
addl
icebp
or
imul
test
mov
dec
and
ljmp
and
xchg
dec
cmp
pusha
rcl
ret
add
mov
dec
scas
xchg
inc
repz
dec
insl
pop
push
or
mov
incb
mov
aaa
inc
loop
and
and
call
xor
inc
fsubs
jp
jbe
popf
lahf
add
lock
mov
mov
mov
or
lea
xchg
push
andb
xchg
inc
ss
fidivl
mov
inc
outsl
in
dec
ss
mov
and
daa
shrb
push
fldl
adc
std
scas
call
in
call
add
add
cmp
shll
cmp
repnz
xchg
inc
xchg
mov
icebp
xchg
inc
insb
pushf
xchg
repnz
sahf
into
das
or
xor
xchg
mov
add
call
dec
jecxz
or
push
mov
movsb
pop
int
sub
sti
pusha
push
sbb
lahf
sub
mov
adc
jg
mov
sbb
xlat
jl
push
hlt
push
and
icebp
jns
inc
cwtl
cmc
push
cmpsl
or
adc
adc
loop
call
outsb
push
mov
and
dec
mov
jl
pop
das
mov
lods
xchg
xchg
cmp
lahf
dec
jo
dec
mov
call
sarb
fwait
js
lcall
insl
aam
in
insl
int3
inc
and
jge
and
sub
nop
loope
sbb
cmpsb
insb
add
pop
mov
sub
inc
cltd
sbb
mov
insb
cltd
jl
leave
imul
and
movl
nop
inc
mov
imul
cld
mov
rcll
sbb
sub
loopne
sub
inc
push
xor
pop
jl
xchg
xchg
add
out
movsl
sub
insb
daa
inc
jge
insl
pop
fimuls
ror
adc
std
cwtl
test
call
js
pop
mov
dec
xchg
scas
pop
cmp
loope
mov
inc
popa
xchg
xchg
stos
int3
sti
dec
mov
pushaw
stos
xchg
and
jb
jns
mov
xchg
and
jno
cmpsl
jl
xchg
add
fstps
sti
dec
jbe
scas
and
jne
push
repz
scas
fidivrs
pop
lahf
icebp
rcr
aas
out
loope
and
sbb
add
push
mov
cmp
stos
pop
ret
rorl
cmp
lea
xchg
mov
pop
dec
pop
fsubrp
mov
cli
popf
bound
jmp
mov
in
or
in
sbb
and
jbe
fisttps
jo
dec
into
iret
jl
or
imul
pop
insb
out
cld
jb
sbb
int3
add
imul
xchg
fnstsw
mov
pop
or
and
xchg
leave
scas
insb
out
dec
mov
xor
add
xchg
adc
sub
sub
jb
mov
fists
pushf
mov
stos
fisttpll
or
sbb
jecxz
push
dec
dec
mov
mov
aad
mov
lcall
mov
insl
mov
sub
and
sub
sarl
pop
lret
call
and
mov
pushfw
fimull
and
or
mov
bound
mov
push
sbb
push
jbe
cmp
call
inc
dec
rorl
mov
xchg
jae
mov
push
stos
push
xchg
mov
cmpsl
pop
out
add
addr16
mov
ljmp
mov
cwtl
inc
add
fcmovu
sbb
das
cmpsb
aas
push
jle
mov
cmc
lcall
insl
repnz
ja
push
sbb
stos
out
les
sbb
jl
shll
lcall
jb
scas
mov
mov
mov
pop
rorb
cmp
and
cs
std
mov
push
lds
push
cmpsl
and
out
mov
xchg
lret
lea
jb
lds
nop
add
lahf
outsl
repnz
lcall
call
sub
into
sub
and
cmpsl
sub
push
cmp
sub
adc
into
fisubrl
jmp
mov
xchg
rclb
sbb
mov
push
ud0
test
mov
pop
fxam
push
in
add
push
mov
inc
int3
js
fs
mov
xchg
or
cmp
repnz
push
addb
lahf
lods
push
leave
and
push
lret
call
es
push
pop
cmc
or
jne
or
sbbl
sbb
cli
push
lahf
lret
and
lea
bound
pop
adc
xchg
or
sahf
xchg
ljmp
loope
push
mov
push
mov
push
pop
out
and
xchg
push
pop
xchg
out
sti
scas
scas
push
push
inc
mov
out
add
xchg
ffreep
sub
push
mov
loop
aas
out
add
dec
mov
jg
pop
popf
mov
aaa
jnp
lret
mov
cld
mov
bound
loop
shll
cltd
cwtl
pop
xchg
adc
adc
test
out
inc
sarl
pop
xchg
cmpsb
aam
xchg
popa
lods
cld
aaa
cmpsl
cli
repnz
mov
imul
and
movsb
fisubrl
lock
cld
out
cmc
notl
stos
mov
sub
imul
lret
daa
aaa
jmp
dec
les
adc
je
or
data16
inc
je
test
sbb
outsl
pand
shrl
dec
mov
push
rol
inc
outsb
add
inc
xchg
push
popf
int
lods
popa
sbb
popa
js
fsub
or
jp
inc
add
movsb
pushf
in
lahf
das
push
and
push
pop
fistps
jae
sti
movsl
inc
and
dec
jno
fwait
xchg
stc
adcb
xor
je
push
xchg
rorl
int
daa
jno
jecxz
int
sbb
inc
int3
mov
jmp
fcomi
pop
push
pop
or
pop
js
sti
leave
into
movsl
add
xor
jo
xor
cmpsb
mov
pushf
jp
pushf
and
rcl
xor
sub
cltd
jp
inc
pop
addb
insb
jo
loop
mov
inc
jns
test
in
mov
out
sub
test
inc
sbb
fdivl
lret
or
int
cs
dec
adc
test
popf
xchg
arpl
inc
mov
pop
lahf
ss
lcall
test
push
pop
push
adc
jle
sub
push
mov
shll
xor
jo
les
leave
xor
ja
rorb
out
mov
mov
out
push
mov
mov
nop
in
mov
movsl
push
pop
test
or
call
lock
dec
imul
stos
adc
fs
mov
int
mov
xlat
loop
mov
jge
icebp
xchg
lock
test
outsl
sbb
mov
push
cmp
mov
adc
mov
hlt
loop
add
xchg
mov
ds
jge
shlb
xchg
sub
cmp
sahf
pop
xchg
inc
out
pop
cmp
pop
jg
xchg
in
movsb
call
and
aaa
pop
pop
and
ret
push
inc
cltd
test
aas
mov
xchg
jecxz
xchg
cwtl
call
les
fsub
out
loop
xchg
std
or
js
mov
and
sub
push
and
sbb
pop
xchg
dec
ja
adc
xchg
push
fdivrl
pop
sub
in
push
imul
pushl
mov
pusha
push
pop
ss
add
idivl
mov
pop
subb
popf
xor
icebp
daa
outsl
aad
xor
mov
lret
or
fiadds
bound
add
bnd
mov
cmp
push
xchg
test
std
xchg
data16
int
sbb
mov
pop
movsb
jp
clc
arpl
mov
cmp
mov
int
jae
je
stc
imul
and
psraw
or
stos
xor
cmpsl
insl
and
loopne
lods
sti
sub
jae
cmp
or
leave
es
push
hlt
in
in
stos
mov
mov
and
xchg
add
pushf
incl
pop
pop
pop
mov
test
mov
int
movups
push
xlat
sarb
movsl
push
cld
mov
mov
imul
movsl
cmp
push
ja
mov
add
mov
jl
add
xor
mov
xlat
sahf
pop
test
pop
fimuls
mov
pop
push
scas
or
ljmp
add
out
pop
in
jmp
enter
jns
inc
add
lahf
movsl
subps
inc
fists
or
clc
stc
ss
in
inc
and
dec
xchg
jae
icebp
in
dec
pop
xlat
pop
push
insl
fisubl
cwtl
xor
ja
push
mov
add
into
repz
cmp
cli
pop
cs
push
cmp
movsl
and
nop
sbb
or
dec
push
inc
repz
rcr
xor
mov
imul
pop
push
test
or
mov
jbe
push
or
sub
loop
data16
stc
std
sub
nop
push
xchg
dec
pop
fstpl
jae
jmp
ret
jge
fdecstp
loop
push
sbb
xor
cli
adc
lds
inc
fsts
test
stos
clc
xchg
sub
test
lods
sub
sahf
std
mov
push
loop
pop
pop
push
and
in
loope
push
jg
cmp
or
add
xchg
std
dec
hlt
dec
fwait
dec
sti
push
xchg
mov
sbbb
xor
add
scas
clc
and
cwtl
sbb
sarl
push
mov
sub
nop
sub
jne
data16
lret
xor
stc
push
dec
sub
push
pop
inc
jne
and
jae
enter
mov
mov
xchg
insl
aas
repz
xchg
aad
push
shll
or
rcll
or
lret
hlt
loope
jmp
shlb
and
or
dec
cmovle
les
mov
sub
iret
repnz
cmp
add
add
fstl
cmc
inc
pop
sbb
bound
sti
jmp
popf
and
popa
lahf
inc
pop
pop
pop
xlat
xlat
jle
xchg
jno
push
imul
inc
repnz
xor
mov
xchg
and
mov
push
enter
dec
mov
cmp
shll
mov
lahf
leave
adc
lods
jl
aad
in
popw
sub
aaa
cmp
xchg
lret
sti
fsubrs
push
imul
cmc
pop
addr16
mov
lret
scas
jmp
movb
xchg
add
insb
sub
dec
inc
mov
fs
rorb
mov
lds
addr16
sub
dec
sub
ffreep
fwait
mov
dec
sbb
lahf
xchg
mov
dec
fucomp
stos
fnstsw
cwtl
xor
pop
pop
dec
lret
arpl
jecxz
dec
jle
mov
cmp
jne
cmpsl
ficoml
in
cmc
sbb
and
mov
cmp
sti
insl
pop
sbb
xor
ljmp
fdivrs
mov
jbe
jecxz
sub
scas
bound
jmp
push
pop
mov
mov
inc
xchg
cmp
cmc
jl
cs
add
lret
dec
addr16
mov
and
addr16
inc
inc
pop
repz
cwtl
or
jbe
fstpt
insl
std
ljmp
dec
cli
pop
insl
movsb
sahf
popa
rcl
sub
xor
inc
gs
add
pusha
inc
sar
jnp
cwtl
fildl
in
mov
mov
dec
jp
mov
xor
lret
or
jg
pop
sbb
lock
js
xchg
mov
pop
mov
into
adc
sbb
clc
mov
pop
lcall
push
in
shll
sbbl
sub
or
sub
loop
in
fcoms
inc
xchg
fbstp
idiv
mov
dec
mov
dec
pop
movsb
jmp
and
adc
das
subl
or
jno
cltd
das
popa
mov
cmpb
cmpl
cmpsl
xchg
xor
data16
loopne
pop
mov
and
xor
addr16
jne
outsl
ja
mov
xchg
pop
call
jg
test
mov
mov
fwait
sub
push
lods
xor
adc
ret
jl
aam
mov
test
cmp
add
test
sbb
flds
adc
inc
mov
mov
mov
lea
hlt
xchg
mov
js
push
aad
lret
mov
orb
mov
pushf
in
scas
test
mov
shlb
stos
xor
push
in
cld
lret
cs
stos
sbb
in
xchg
loop
mov
mov
ss
jg
data16
dec
fstl
xor
ror
mul
add
xchg
xchg
adc
xchg
xchg
or
and
cli
mov
sub
icebp
add
cmp
jge
cmp
push
pop
inc
jo
lods
mov
xchg
adc
cld
jb
fwait
mov
pushf
cs
xchg
inc
lds
adc
fwait
or
aas
insl
jle
sub
in
out
fildll
lods
repnz
pop
lea
xorl
repnz
sti
popf
jmp
inc
pop
mull
arpl
ficoml
lret
call
inc
push
or
mov
push
mov
cmp
mov
cld
xor
sub
jb
cs
stc
adc
fimuls
xchg
repnz
jmp
cmp
jecxz
imul
sub
xor
mov
stos
and
jp
stc
jns
dec
cmpsl
pop
xlat
jp
call
ror
adc
inc
or
aam
pop
aaa
lcall
xorb
sbb
mov
aad
inc
inc
jp
loopne
mov
xchg
push
adc
pop
ja
dec
sbb
xor
cmp
sti
test
rolb
mov
mov
or
pop
xchg
push
lret
pop
loop
leave
sti
mov
jb
lods
ljmp
in
jge
insl
mov
ror
mov
leave
ds
push
pop
cmp
pop
push
or
popf
ja
and
mov
cmp
lock
repnz
mov
lock
pop
push
sbb
adc
ret
adc
loop
fs
repnz
pushf
es
or
fimull
cld
js
push
insl
cmovbe
repz
fucom
std
ret
mov
push
fbstp
or
add
mov
xchg
jmp
push
mov
mov
icebp
cwtl
ret
sar
bound
or
out
and
or
dec
mov
push
pop
push
in
xorl
sub
out
je
test
push
fsubrl
xchg
movl
add
popa
pusha
cmp
pop
lret
fnstenv
and
mov
sti
push
cmp
notb
mov
mov
pop
jecxz
sub
push
mov
out
mov
out
hlt
pop
push
mov
fcmovu
mov
ficoml
xchg
pop
sbb
push
stos
xchg
cmpsl
test
dec
andl
mov
xchg
push
cmc
pushf
pusha
mov
jbe
cmpsb
fistps
jmp
mov
or
add
in
ds
push
sub
cli
lcall
sub
cmp
jne
out
imul
adc
push
mov
push
or
aas
push
sbb
xor
jo
out
mov
shlb
aam
dec
xchg
stc
jnp
cwtl
fldl
cmc
and
pop
adc
push
aam
cmp
outsl
add
jmp
mov
loop
push
push
adc
add
bound
negb
sbb
notl
inc
cs
f2xm1
in
orb
std
outsl
sahf
insl
mov
fwait
inc
popf
xlat
std
imul
lret
dec
insl
mov
lock
lods
and
jae
cwtl
in
or
jno
push
js
add
sahf
sbb
mov
subb
imull
cltd
push
mov
mov
mov
clc
jnp
sbb
add
rorb
es
inc
test
popa
mov
das
or
stos
ljmp
ds
pop
sbb
sbbl
add
pop
push
lcall
nop
or
push
or
xchg
mov
fdivl
jbe
cmc
ss
mov
das
mov
push
cmpsl
mov
and
xchg
in
lret
push
jl
int
sub
jo
enter
and
in
jae
pop
imul
out
stos
pop
in
jmp
mov
mov
icebp
mov
dec
lock
pop
test
xchg
inc
xor
jmp
clc
or
sahf
pop
jb
rcl
xor
mov
dec
sub
mov
cli
xor
les
in
add
sbb
sub
hlt
or
aad
insl
scas
popf
mov
push
push
pop
xor
jo
sub
and
mov
out
cmp
and
push
inc
int3
loop
testl
mov
stos
stos
int3
add
and
xchg
pop
xor
xchg
mov
xor
test
lods
cmp
sub
lock
js
das
adc
rcrl
mov
ret
dec
jne
ret
push
pop
xchg
and
fstpt
jo
mov
mov
push
mov
push
pop
test
stos
xor
dec
stos
sbb
dec
mov
lods
cli
aas
out
mov
divb
out
jne
jns
mov
ret
pop
add
xchg
into
mov
dec
jecxz
pop
ja
mov
mov
lahf
mov
movl
or
mov
sbb
lcall
cmp
jae
andl
xchg
xchg
in
xor
inc
in
push
push
cli
pop
xchg
sub
and
in
jge
mov
and
inc
sbb
add
xor
push
xor
lret
push
xchg
sub
cmp
das
lea
lret
inc
inc
mov
ficoml
inc
repz
cmp
cltd
loop
jne
test
cmc
pop
shrb
cli
cmc
cmc
xor
inc
cld
push
je
and
sbb
imul
jne
cmp
mov
xchg
fldt
or
nop
mov
lret
inc
jle
adc
in
ja
cltd
pop
sbb
icebp
mov
imul
arpl
mov
into
sub
jae
shl
lock
pusha
sbb
dec
jl
mov
jg
rol
fimull
movsl
push
enter
xchg
icebp
adc
pop
push
sbb
cmp
ljmp
aas
ds
jno
or
inc
mov
fucom
sub
lods
cmc
sbb
jg
mov
jg
add
lret
rolb
div
int
xchg
cld
xchg
popf
ja
xchg
xor
jmp
push
adc
iret
cmp
dec
mov
mov
sbb
in
mov
lret
pop
fxch
xchg
int
mov
dec
cmpsb
xor
push
jge
lea
mov
push
rol
or
fbstp
dec
stos
jae
add
jecxz
pop
inc
ja
in
push
jl
lret
imul
das
cmp
sub
mov
lds
enter
push
insb
lock
pop
out
es
int3
movsb
push
or
sbb
add
fldl
xchg
xor
jb
jno
inc
rcl
pop
aas
jb
sbb
jbe
sti
lds
cmp
fcos
roll
mov
xlat
jle
jae
out
mov
popl
push
xor
jbe
and
shlb
pushf
stc
pushf
shll
les
inc
imul
mulb
mov
push
inc
adc
inc
jl
xchg
andl
xor
iret
jbe
xor
mov
repz
dec
fistpl
dec
pushf
xor
xchg
add
mov
mov
sahf
or
mov
ret
pop
popa
or
mov
test
call
xchg
out
loopne
pop
sti
in
xchg
stc
movsb
xlat
leave
hlt
inc
subb
test
insl
ljmp
pusha
push
inc
mov
ret
adc
insl
push
movsl
mov
ficoms
fistpl
cli
push
jg
mov
fistps
xchg
mov
jecxz
cmpsb
and
xor
and
xor
mull
mov
fsubp
ror
popa
push
test
mov
xlat
lds
ret
cmp
adc
mov
daa
mov
mov
and
mov
jb
cs
dec
cmp
mov
mov
imul
mov
sbb
push
pop
sbb
pusha
add
sbb
cmp
and
cs
cmp
push
out
inc
mov
daa
xor
leave
pop
and
dec
sbb
xor
xor
dec
ss
fnop
xchg
add
mov
fdivs
int3
aad
ds
int
pop
inc
pop
xor
mov
and
dec
xchg
outsb
jle
mov
scas
pushf
arpl
pop
ret
xchg
test
pop
fcomi
in
or
sbb
lret
aas
in
mov
mov
push
outsb
mov
xlat
cli
fimuls
inc
imul
ret
ficompl
in
adc
jmp
ret
mov
aam
add
cmp
mov
shll
hlt
mov
mov
ljmp
je
lods
popf
pop
aad
xor
dec
scas
inc
lods
aas
cwtl
fdivrl
mov
jno
jle
adc
push
sub
sub
push
notl
inc
cmp
test
inc
jle
ss
and
filds
xor
in
inc
cmc
push
imul
cmp
loope
inc
test
loop
scas
pop
jl
sti
dec
mov
dec
push
notl
test
imul
out
lret
pusha
push
es
fs
sbb
adc
pop
roll
jg
xchg
sub
out
movsb
arpl
aad
mov
xchg
in
sub
outsb
popl
mov
test
sbbb
add
insb
inc
sbbl
push
ficoms
xchg
xor
inc
pop
xor
sbb
mov
in
mov
das
xor
dec
in
pusha
dec
mul
xor
cmp
cli
bound
popf
dec
gs
sub
pop
and
add
repnz
xchg
mov
lds
adc
mov
push
xor
arpl
mov
xor
icebp
push
and
js
test
jae
push
fs
clc
addr16
clc
mov
in
jp
call
test
xchg
pushf
inc
xlat
or
fnstenv
push
add
rcl
fdivrl
add
cmp
inc
jo
mov
or
pop
pusha
push
shl
adc
ja
or
lods
sahf
fsubrs
sbb
jg
test
adc
inc
and
xchg
push
loopne
xlat
jne
jne
sub
fdivs
lds
or
or
imul
scas
test
stos
pop
pop
insb
pusha
mov
pushf
mov
mov
inc
incl
or
xchg
les
or
and
jae
mov
mov
ret
cmp
das
mov
xchg
pop
push
adc
dec
clc
jp
pop
xor
jmp
sub
enter
xchg
xchg
push
shll
sarl
repnz
xor
ficoms
icebp
mov
and
inc
loop
add
mov
ficompl
sbb
push
inc
loop
jmp
and
xor
xchg
jl
pop
xor
fildl
insl
pop
test
pushf
cmpsb
sub
sbb
sbb
loop
mov
pop
xor
xchg
add
or
testb
aam
adc
push
push
sub
inc
sbb
js
cmc
pop
arpl
cltd
cmpsl
lock
dec
sbb
insl
and
or
mov
jns
mov
xchg
pushf
aaa
fisubs
into
lea
fisttpl
mov
xor
scas
imul
mov
fisubrs
addr16
or
add
inc
leave
dec
lods
ja
add
insb
cld
or
lods
shrl
dec
in
jnp
inc
adc
jne
ret
adc
cmp
sbb
cmpsb
fildl
pop
jns
pop
popa
fadds
imulb
pop
lock
push
push
ljmp
add
sbb
mov
pop
mov
lea
mov
orl
jo
mov
cmp
dec
movaps
xchg
adc
fnsave
adc
faddl
pop
xchg
sahf
mov
daa
or
or
sub
cmp
mov
in
mov
xchg
imul
dec
notl
mov
scas
mov
cmc
sbb
daa
filds
sbb
lret
icebp
mov
test
or
dec
movsb
rorl
pusha
inc
hlt
add
lods
cmp
mov
scas
mov
push
subl
add
dec
movsb
rorb
xor
popa
push
sbb
jp
ljmp
jno
int3
or
imull
in
cwtl
sbb
inc
in
scas
push
cmc
loop
inc
mov
push
mov
pop
cmp
lret
mov
fwait
xchg
ljmp
sub
fidivl
or
add
push
int
inc
pusha
aad
adc
dec
mov
fyl2xp1
jne
stos
enter
sbb
mov
pop
aas
mov
mov
sub
push
popf
out
dec
pop
cmp
xchg
cld
jae
push
fdivrl
pop
addr16
popf
push
ret
lret
pop
sahf
push
pop
sub
mov
mov
xchg
loope
inc
mov
pop
pop
jg
das
ss
mov
popa
mov
outsl
sbbb
loop
xor
sti
out
arpl
mov
imul
pop
dec
movsb
cltd
pushf
sub
jge,pt
and
push
jno
and
and
int3
cs
popa
or
lods
jge
test
std
enter
dec
add
xchg
das
ss
mov
mov
pop
sub
fnstcw
lods
xchg
xchg
loopne
das
gs
in
mov
inc
outsb
lahf
mov
jecxz
xor
or
inc
cli
and
mov
ret
push
jno
int
jns
aas
mov
push
cmp
into
and
dec
stc
cmp
shll
cmp
int
enter
mov
push
pop
ud0
cmp
pop
and
sbb
fwait
dec
andb
xchg
test
add
dec
mov
xor
or
sbbb
mov
pop
mov
adc
sbb
scas
dec
cmpsb
push
adc
stc
jp
aam
loope
repz
pusha
test
jge
ficoms
or
cltd
push
aam
in
repz
shlb
shrb
aaa
fsts
xchg
es
push
das
movsl
test
xchg
cmp
xor
push
iret
mov
push
jge
lods
jno
lcall
push
stos
and
call
mov
aam
out
test
imul
xor
lret
loopne
push
in
es
es
push
lret
data16
mov
sbb
cld
lock
sub
lods
sub
jns
xor
xchg
test
leave
mov
sbb
loope
add
xchg
call
outsb
rcrl
mov
push
cltd
xor
pop
xor
lahf
jge
mov
and
imul
pop
loopne
sbb
xchg
shrb
sbb
sbb
notb
aad
test
cmp
pop
scas
pop
sbb
int
push
mov
mov
cmp
ret
ljmp
stos
xbegin
js
in
lods
mov
inc
pop
out
and
inc
push
aaa
ds
lods
dec
bound
xchg
js
lods
jmp
shlb
mov
fldl
dec
adc
fisttps
cmp
inc
cwtl
push
or
xchg
cmp
xor
loope
and
and
shrb
xchg
push
out
sbb
jle
push
out
out
push
int3
in
test
or
mov
push
ret
adcb
cmp
and
dec
arpl
lret
clts
sub
stos
imul
scas
lahf
insl
test
dec
mov
test
std
test
inc
mov
dec
dec
xor
lods
sbb
test
and
pop
jb
mov
mov
mov
out
je
shll
push
mov
jb
jl
xor
sub
in
fnstcw
and
jge
lret
xor
xlat
mov
mov
in
jp
sbb
dec
les
xor
fucomp
out
mov
xchg
push
ljmp
popf
in
cmp
xchg
aad
aam
mov
in
sub
mov
push
dec
lds
movl
stos
call
imul
mov
cltd
or
mov
rolb
cli
or
and
insl
push
cmp
icebp
adc
or
jge
xchg
adc
pop
dec
sbb
je
xchg
stc
pop
std
mov
shl
or
inc
xor
mov
mov
cmc
iret
pop
rclb
push
popa
lea
push
sub
cli
add
or
mov
ljmp
scas
repnz
jp
add
or
hlt
pop
pop
cmp
iret
push
scas
ror
push
or
mov
pushf
lds
mov
xorl
mov
ss
xor
inc
scas
jae
add
sub
mov
add
dec
xchg
and
out
jmp
icebp
sbb
in
xor
pop
mov
xor
loopne
mov
push
out
repz
popa
xchg
loopne
inc
movsb
pop
lahf
cmc
cli
add
pop
adc
xchg
inc
mov
mov
sub
iret
mov
cmp
nop
mov
fsts
lods
orl
int3
mov
dec
out
inc
jb
addb
dec
mov
sarb
aas
add
ja
sbb
pop
out
pop
add
and
fwait
or
mov
lcall
popa
inc
cs
mov
mov
cmp
push
jo
xor
xchg
cs
sub
out
cltd
mov
jae
outsb
hlt
mov
xchg
imulb
popw
dec
xchg
in
test
ja
push
xor
or
shll
or
mov
leave
xchg
dec
cmp
adc
imul
cwtl
mov
push
pop
dec
mov
pop
adc
fsubp
jb
inc
pop
push
push
shl
ud1
pop
cmpsb
mov
int3
ja
icebp
pop
xchg
rorb
or
sbb
pop
lcall
adc
jg
in
mov
inc
jb
adc
xchg
jmp
mov
outsl
test
cmpsl
mov
in
call
sti
lods
rorl
dec
and
mov
xlat
mov
jle
sbb
push
aad
je
mov
push
inc
or
and
insb
mov
lcall
dec
mov
xchg
push
rorb
stos
pushf
dec
jp
fsubl
xor
cld
andb
mov
pusha
adc
shl
push
aam
push
xchg
outsl
pop
decl
pop
lods
js
ljmp
dec
sbb
gs
loope
fsubl
dec
or
pushf
or
mov
and
ficompl
and
cmp
aas
int
fadds
cmp
adc
aaa
jb
dec
cmp
sub
cmpsb
xor
inc
xor
add
call
adc
cld
gs
jb
imul
les
sarb
xchg
fisubrs
insb
int3
dec
ret
sbb
cmc
pop
inc
mov
outsl
leave
and
std
into
lret
out
cmp
cli
and
int
jo
add
popa
and
xchg
call
or
std
daa
xrelease
jno
scas
scas
out
sahf
mov
xchg
loopne
cmp
mov
testl
jno
test
mov
pop
push
fidivl
push
mulb
xor
pop
in
pop
jns
or
vmovsd
inc
cmpl
sbb
ss
data16
dec
loop
and
int
push
rcrl
enter
dec
pop
stos
stos
push
jmp
out
or
cmpsl
imul
out
cmp
jae
sub
and
xchg
clc
jle
jnp
into
cld
rorl
or
xor
shll
lret
lahf
cmp
jne
jns
inc
and
dec
fwait
pop
pusha
push
or
jle
mov
xchg
imul
into
xchg
push
loopne
imul
xchg
sbb
pop
or
test
xchg
pop
xchg
iret
popf
loope
pop
js
cli
mov
cltd
aam
movsl
xor
sahf
gs
xchg
jae
or
mov
ret
mov
popf
xchg
je
xchg
stos
adc
sub
shrl
xor
insb
and
iret
xchg
sub
addr16
outsl
or
sub
mov
outsb
jp
rol
ficoml
sbb
out
pop
pop
negl
cmp
popl
stos
push
add
sub
fwait
outsl
ljmp
push
or
js
jecxz
add
loopne
xlat
xchg
sahf
mov
int3
cmp
testl
xchg
outsb
sbb
mov
std
mov
jg
into
ret
fnstcw
mov
mov
lock
lock
test
rcll
lods
sub
addb
adc
xor
adc
lahf
lret
mov
cmpsb
cmpsl
out
jmp
in
cmpsb
mov
pop
arpl
mov
adc
sbb
adc
andl
in
loope
test
ret
mov
test
jmp
mov
imul
adc
mov
cwtl
rdmsr
xor
in
add
pop
scas
sbb
cmp
pop
imul
js
sub
or
mov
dec
sahf
pop
jg
jbe
cmpsl
inc
mov
imul
jg
inc
repz
xor
mov
out
out
xorl
xchg
sub
xchg
jo
sti
jne
xchg
cmp
xchg
repz
test
inc
xchg
fildl
pop
leave
dec
xchg
das
ja
dec
push
sbb
cmp
mov
mov
leave
mov
ret
sub
jne
into
jo
insb
xor
ret
subb
icebp
cld
mov
decl
mov
xchg
jno
cmp
leave
int
repnz
push
jg
ficompl
int
and
fwait
test
xor
pop
mov
out
sub
cmpsb
sbb
and
movsb
hlt
jle
sbb
push
add
xchg
in
icebp
lret
cmp
insl
rcrb
xor
adc
test
sbb
xor
test
and
imul
push
jl
ss
aaa
jne
fcomi
dec
jno
lcall
dec
cs
add
xchg
sbb
mov
cmp
movsb
lds
aaa
test
xchg
loop
into
and
stc
pop
test
sahf
inc
jns
mov
adcb
fisttps
cltd
outsb
jle
ret
stos
pop
or
pop
fildl
mov
pop
int3
push
test
pop
or
dec
jmp
sarb
push
int3
rclb
push
into
push
jl
push
dec
outsl
pop
ja
fcomp
jno
cmp
jmp
add
or
movsl
rorb
pop
add
and
jl
test
and
sbb
imul
inc
lds
push
out
out
mov
test
in
sti
xchg
add
fildll
cmp
mov
daa
sub
out
mov
jge
lock
lds
cmp
shrl
repz
fstps
test
mov
push
sti
popf
test
dec
ss
repnz
insb
or
test
sti
call
fistl
les
dec
leave
fsubs
mov
sub
jmp
lods
sub
dec
mov
cmp
pushf
loop
enter
aaa
sbb
mov
and
in
js
dec
jl
inc
mov
aaa
adc
xor
xorb
mov
adc
neg
lods
hlt
dec
jmp
pop
mov
inc
mov
jle
fwait
jbe
pop
or
pop
add
std
add
and
and
mov
push
pusha
sbb
xchg
push
sarb
test
xchg
lods
add
fstpl
fimuls
insb
add
push
sbb
add
inc
mov
das
and
repz
out
inc
frstor
mov
das
add
jb
jp
xor
jl
out
adcb
lock
lods
jle
movsl
mov
dec
fisubs
out
inc
rcrl
jno
jg
mov
icebp
adcb
adc
mov
std
push
call
mov
adc
xchg
out
stc
bound
cmpsb
jle
mov
repz
lds
mov
dec
jg
or
push
inc
xchg
mov
sbbb
stc
sarl
int3
ljmp
ss
pop
mov
shl
mov
iret
pop
inc
cmp
into
jge
mov
loopne
sub
lcall
and
out
test
cmc
sub
xchg
or
sbb
or
jle
out
jae
mov
ds
std
xchg
aad
lcall
sub
cmpsb
out
mov
xchg
rorl
push
shlb
scas
add
sub
pop
inc
mov
sbb
jb
and
test
fwait
daa
sub
inc
lcall
xor
xchg
pop
mov
fists
and
cld
rcrl
mov
jo
bound
lahf
or
mov
hlt
mov
les
adc
loope
dec
cltd
test
jno
push
pop
jo
adc
pop
adc
cmp
std
outsb
out
lcall
and
fidivrl
stc
iret
add
lods
xor
mov
add
iret
add
sarl
mov
push
jge
lret
cwtl
lret
ja
sbb
rcl
xchg
jbe
sbb
or
push
adc
sti
int3
je
lds
xor
xor
jmp
sub
fbld
jo
js
push
sub
and
adc
inc
sbb
sbb
les
mov
into
xchg
jnp
jno
cmp
mov
cmp
add
cli
mov
mov
pop
shl
mov
xor
ss
push
jp
imulb
repnz
in
stos
into
cs
mov
pop
pop
int3
loope
cmp
xchg
test
jns
in
mov
sti
je
mov
jb
fbstp
lret
les
lock
das
ror
xlat
mov
lea
aaa
pushf
or
xor
mov
mov
xor
addr16
or
ret
add
loop
cmp
ds
test
adc
or
cmp
pushf
stos
pusha
jmp
inc
lret
iret
cmp
xchg
mov
je
adc
or
lock
clc
mov
fmull
xchg
sub
jl
cmp
int
xor
sbb
sti
sbb
dec
inc
lret
js
pop
add
icebp
and
aaa
outsb
movsb
mov
mov
cltd
mov
mov
inc
or
adc
xchg
pop
icebp
push
dec
jns
jo
xchg
sub
cs
push
out
pop
jnp
add
std
mov
pop
lds
sbb
sbb
stos
sub
mov
inc
pop
and
or
stc
or
push
add
cwtl
iret
out
fs
in
or
adcl
fildll
inc
xchg
mov
mov
lock
push
test
cmp
push
rclb
and
xchg
or
test
sbb
xchg
sub
xorl
mov
pop
out
mov
fdivrl
sub
insb
cmp
packuswb
mov
cmc
xchg
orl
loop
out
shlb
xchg
das
dec
lea
imul
inc
jle
xchg
ret
out
adc
filds
jb
ja
cmpsb
out
and
sbb
std
push
or
sub
pushf
stc
jno
adc
push
cwtl
jne
scas
ds
dec
adc
lods
ss
push
nop
cmp
rcll
lcall
pop
inc
insl
sahf
fwait
push
xchg
and
sbbl
out
mov
jl
aad
xchg
sti
cmp
cld
mov
jae
push
test
cmp
fwait
mov
sbb
faddl
pop
aas
mov
mov
push
mov
mov
cmp
mov
mov
scas
scas
xor
das
pop
or
jns
in
ja
fldl
pop
out
or
lods
hlt
cld
roll
insl
jecxz
adc
lea
insl
sbb
xor
in
dec
or
xchg
addr16
push
or
andb
std
and
mov
push
clc
jo
and
dec
enter
shlb
xchg
mov
xchg
jmp
js
int
or
xchg
lea
enter
fwait
inc
fdivrl
jns
nop
sbb
mov
test
pop
xor
pop
jmp
xchg
outsb
adc
fcoms
mov
mov
pop
inc
sbb
push
or
dec
cmp
xor
jnp
scas
mov
ret
cmp
das
mov
pop
fs
pop
mov
testl
jge
xlat
into
shll
insb
jno
loopne
sahf
lea
cmpsl
fisttpll
adc
rolb
int
nop
mov
bound
mov
fwait
xor
and
pop
loope,pt
cmp
call
xchg
mov
ret
jge
rorb
lret
dec
fcomps
daa
mov
in
jns
dec
and
or
push
sbb
aad
repz
mov
test
repz
jge
cmpsl
sbb
cwtl
adc
add
cs
fidivl
arpl
cwtl
clc
xor
into
inc
mov
ror
adc
adc
mov
sarl
sub
into
pushf
xchg
sub
pop
or
pop
iret
fbstp
and
fiadds
mov
or
or
int3
push
pop
imul
je
in
push
jg
push
inc
stc
arpl
adc
leave
or
lods
dec
repnz
aaa
mov
in
adc
mov
cld
mov
sbb
pusha
jle
and
js
mov
inc
test
or
mov
je
jns
dec
aad
sbb
or
or
loop
inc
lock
push
sub
sub
enter
sub
mov
adc
dec
sub
jecxz
out
lret
jmp
xor
lcall
mov
mov
lock
or
icebp
shlb
add
push
sbb
in
int3
adc
mov
sarb
push
fisttpll
es
fnsave
jns
pop
test
sub
cmp
mov
in
add
mov
jno
mov
inc
loopne
outsl
or
mov
in
pop
test
sub
and
dec
xor
in
stc
fs
fistps
bound
jbe
cmp
scas
dec
dec
int
mov
roll
mov
outsl
xor
or
push
mov
in
adc
in
out
in
or
jnp
add
xchg
stos
pop
pop
sbb
xchg
mov
xor
push
fmuls
adc
push
mov
fcomp
js
rolb
sub
int
sbb
jg
xor
jno
mov
inc
inc
xor
xchg
xor
adc
aam
mov
fiaddl
adc
ja
mov
ja
fcomi
jns
lret
inc
es
in
pop
cmp
xor
push
xor
test
inc
sub
cmp
stc
dec
fimuls
ret
outsb
adc
sbb
push
jbe
adc
pop
push
and
push
and
pusha
aas
mov
cwtl
in
jmp
rolb
sbb
xchg
into
cmpps
jge
fwait
lea
cmc
mov
mov
loop
dec
outsb
jnp
push
into
sub
mov
sub
in
xor
jp
and
and
cmp
loop
stos
js
lahf
pushf
mov
decl
xchg
mov
lret
sub
mov
bound
xchg
loope
fadd
pop
or
lds
outsl
stos
xor
mov
sbb
or
mov
sti
sbb
dec
imul
pop
inc
sbb
mov
les
sbb
lret
add
push
imul
icebp
pop
mov
xchg
or
dec
rol
loope
ret
stos
push
aaa
leave
jp
adc
rorb
push
lret
pop
adc
add
icebp
aad
and
push
test
movl
mov
lahf
repnz
out
movsb
cmp
sub
pop
add
daa
bound
cmp
cmc
insb
out
stos
outsl
imul
out
lret
add
push
pop
test
add
fisttpll
mov
sub
xchg
cmp
ret
cmp
mov
xchg
lret
pop
into
std
into
xchg
mov
mov
add
mov
adc
dec
out
push
and
insb
subb
jns
scas
sbb
jg
sbb
adc
add
int
dec
aad
xchg
or
adc
xchg
iret
jae
mov
andl
loopne
nop
arpl
fmul
push
enter
mov
xor
push
stc
dec
fildl
xorb
add
ffreep
fidivs
fidivrs
xor
xor
filds
leave
and
add
xor
fldpi
sbb
lods
adc
mov
cmp
jno
mov
inc
mov
fistpll
or
pushf
ret
out
inc
or
fldenv
js
sub
shrb
repz
sahf
loopne
or
faddl
or
fwait
dec
adc
dec
arpl
andb
sub
lods
inc
in
add
movsl
xlat
xor
fsubrl
into
xor
jg
xor
inc
gs
fidivrs
js
sub
lahf
shlb
push
dec
mov
push
inc
cmpsb
into
lock
fistps
push
cs
push
and
sbb
jbe
test
arpl
push
add
hlt
testb
fsubrs
cmp
aam
or
fadd
cltd
fwait
jle
loop
outsl
xorb
lock
push
loop
aaa
inc
fnstsw
xor
lret
dec
mov
imul
dec
dec
lcall
aas
ljmp
gs
sub
nop
insb
daa
adc
pop
cwtl
push
push
testl
mov
pop
pushf
jnp
data16
fs
push
inc
mov
add
fs
clc
mov
js
scas
test
add
dec
dec
push
ret
pop
sub
mov
xchg
dec
xor
mov
dec
ret
jmp
aas
sbb
or
or
dec
movsl
inc
enter
xor
sar
xorb
mov
xchg
mov
xchg
jl
or
sbb
xchg
scas
pop
inc
sbbl
add
nop
pop
jmp
lcall
push
adc
sbb
movsb
push
lret
cmp
xor
mov
sub
xor
mov
ds
imul
mov
push
adc
push
inc
mov
pop
xor
lods
outsl
lcall
and
xlat
lahf
or
and
pop
ss
push
push
inc
or
sub
in
xchg
es
ret
xor
fsubr
enter
add
int
test
pop
mov
jp
pop
mov
sahf
cwtl
jmp
lahf
and
mov
cmc
push
pop
inc
jp
mov
or
push
xor
arpl
xlat
push
or
adc
mov
loope
les
pop
jmp
pop
loopne
dec
jmp
or
mov
fistps
fs
imul
adcb
cmp
mov
xchg
ss
and
imul
mov
jg
sub
aas
mov
adc
jnp
jnp
add
outsl
cmp
lods
ljmp
sbb
loopne
jno
imul
mov
fcomps
loope
xchg
sbb
or
std
in
add
fisttps
jo
mov
daa
and
addl
stc
add
dec
ja
jp
jb
lods
ss
cli
push
add
jo
int
mov
sub
aad
or
frstor
loop
sbb
ja
test
outsb
fcmovnbe
mov
xchg
pop
ja
adc
sbb
fiadds
ret
nop
pop
out
out
aaa
lcall
xchg
or
outsb
jae
cmp
scas
xor
stos
mov
lea
push
cmp
es
movsb
popa
loope
repz
xor
call
push
fsubrs
push
jne
loop
mov
loop
inc
pop
jecxz
push
aas
mov
test
inc
out
push
scas
fld
jne
cmp
mov
cmc
ljmp
fsub
lods
lret
dec
cwtl
cmp
jecxz
inc
gs
sbb
mov
inc
enter
sub
and
sbb
inc
mov
pop
jo
cmp
jmp
xchg
inc
subl
cmovae
xor
mov
pop
mov
int3
jb
in
mov
sbb
pop
ret
mov
fidivrl
jo
pop
pusha
fs
jle
sub
mov
stos
cmp
sahf
sarl
jb
xor
mov
ja
aam
push
jp
stos
adc
xchg
movaps
mov
outsl
shll
push
enter
out
sbb
mov
sub
out
adc
mov
rclb
mov
lahf
sbb
and
or
popf
or
xor
rorb
insl
enter
add
repnz
fwait
sbb
movsl
or
je
movsl
dec
fsubr
into
movsl
movsl
push
push
pop
add
fsubs
bound
out
js
negb
icebp
es
cmp
jle
mov
jns
in
and
mov
cmp
loopne
aas
in
cmpsb
lock
mov
lds
adcb
aaa
nop
int3
aam
inc
das
jnp
pop
dec
push
xor
push
adc
push
add
pop
lcall
das
rolb
fwait
adc
push
pop
pop
dec
push
enter
pop
lret
ffree
loope
xor
add
scas
xchg
bound
addb
out
je
imul
mov
mov
std
in
xchg
xchg
xor
imul
mov
sbb
inc
mov
ja
inc
mov
push
cwtl
cmc
mov
test
jnp
sub
push
inc
pop
mov
out
aas
into
mov
xchg
daa
push
call
in
xor
cmp
jns
decb
cmp
push
imul
int3
cmpsb
mov
cmp
std
jecxz
aaa
stc
mov
cld
sbb
aas
xchg
pop
cmpl
test
cmpsb
lahf
or
scas
insl
xor
adc
jne
outsb
mov
add
insl
js
sbb
sbb
rclb
pusha
inc
adc
jnp
sbb
mov
push
addr16
sub
adc
leave
xchg
jp
cmp
pop
es
out
mov
outsl
xor
xchg
jp
fsubrs
fadds
fcomps
pop
hlt
inc
int3
xchg
cmpsb
ja
fildl
and
stos
addw
fistpll
jno
pop
add
fldcw
je
fisubl
lods
cmc
mov
sbb
repz
notl
mov
lods
sbb
push
addr16
jge
repnz
test
mov
clc
jmp
add
pushw
cmp
js
xchg
hlt
int
jl
add
add
fisttpll
inc
mov
mov
loop
jae
mov
sti
mov
cs
sbbl
mov
inc
mov
cmp
jg
inc
sahf
push
das
lcall
or
pop
orl
sbb
adc
mov
jecxz
dec
fisttpl
aaa
es
out
or
insb
cmc
sbb
pop
xchg
cmpb
jmp
pop
inc
sub
mov
mov
or
and
xor
ud0
cmp
xor
sbb
stos
stos
xchg
jecxz
cli
add
out
insb
xchg
nop
inc
add
movsl
add
stc
imul
xchg
aam
test
cmpsl
out
mov
and
push
call
cwtl
js,pt
mov
aam
aad
insb
popa
xchg
std
outsl
jp
stos
inc
push
js
cmp
jnp
xchg
popa
mov
popf
popf
loop
ffreep
jne
mov
cmovl
mov
and
dec
xor
add
or
and
aad
test
repz
cmp
sub
inc
jnp
out
je
add
push
enter
loope
inc
cmp
dec
pop
js
ja
push
loope
jmp
popa
pushf
fcomps
daa
adc
stos
out
ljmp
pop
addr16
jl
dec
test
xchg
rcrl
stc
js
out
sub
or
les
int
enter
jne
fsts
cmp
das
subb
xchg
xchg
xchg
in
inc
inc
mov
sahf
or
dec
mov
and
idivb
inc
pop
gs
lods
es
mov
cmp
clc
jg
and
lock
stos
and
inc
adc
lea
mov
out
push
leave
jnp
mov
mov
xor
mov
dec
sbb
outsl
add
mov
mov
jp
jno
mov
mov
bound
xchg
loop
pop
scas
lods
mov
imul
leave
fwait
pop
lock
cmpsb
addl
jp
stc
add
pop
dec
add
mov
dec
pop
mov
lea
fidivrl
test
push
inc
es
and
mov
je
mov
mov
sahf
sub
lea
stos
loop
push
popa
addb
mov
and
gs
mov
xchg
insl
aad
add
insl
test
dec
add
addr16
loopne
mov
filds
pop
mov
and
push
mov
sub
adc
sub
and
xor
scas
sub
in
cmpsl
subl
jg
sbb
clc
sub
mov
hlt
cwtl
mov
orb
sub
scas
aam
jl
out
bound
imul
ss
mov
jg
mov
shr
inc
mov
xor
pop
stos
inc
push
sub
mov
push
mov
orl
cld
pop
dec
mov
data16
loop
lret
adc
or
jb
outsb
sbb
nop
pusha
jno
mov
pop
ds
imul
sub
int
ds
xchg
cltd
xchg
lcall
adc
pop
xchg
jmp
into
dec
adc
add
and
mov
loopne
popa
push
or
lret
sarb
jg
cmp
sarl
push
cmp
inc
or
stc
in
out
add
nop
addr16
jne
or
mov
popf
shll
pop
popa
pop
dec
sub
bound
pop
pop
ret
out
bound
mov
sub
xor
movsb
push
mov
cltd
pop
jle
fsubl
repz
inc
mov
lret
mov
cli
out
mov
sub
xchg
dec
and
dec
out
mov
cld
int3
mov
in
mov
outsl
lret
les
ss
arpl
shll
aam
push
jae
rcrl
mov
xor
mov
sbb
pop
sub
adcl
add
mov
ja
xor
gs
in
or
push
push
xor
cmpb
adc
push
xor
add
stos
inc
icebp
push
and
dec
shl
insb
in
push
out
cs
mov
cs
stos
lods
arpl
punpckhbw
cmp
or
xchg
jl
or
jne
fstp
sub
push
push
idivl
lods
xchg
int3
and
test
and
sub
jne
insl
pop
jns
lock
and
scas
rorl
sbb
mov
xor
jge
sub
js
adc
loope
hlt
scas
sbb
dec
hlt
push
hlt
cmpsl
imul
aas
movb
jae
push
cs
push
sub
jmp
repnz
push
cwtl
lock
int
inc
pop
jecxz
imul
aas
jae
and
push
xchg
cli
or
pop
cmp
adc
cmp
xchg
cmpsl
ljmp
test
dec
lret
std
jns
repnz
repnz
sbb
adc
xchg
add
addl
shr
jecxz
cmp
dec
mull
jo
rcl
lahf
int3
imul
shrb
push
cs
subl
sbb
add
dec
xor
sub
test
jne
pop
push
in
pusha
pop
dec
cmp
push
add
rcr
sub
add
aam
jecxz
sub
push
push
addb
stos
pop
cmp
mov
test
or
cmp
xchg
sbb
cmp
jge
mov
adc
mov
adc
lock
inc
fwait
rorl
push
push
imul
jge
xor
sub
sbb
mov
sub
or
pop
mov
arpl
sbb
add
push
ret
insl
mov
push
outsb
out
lea
sbbl
aas
incb
sbb
cmp
mov
xlat
sub
or
and
pop
sub
test
cmp
call
jno
fldt
xchg
fiadds
enter
iret
in
ds
mov
mov
fnsave
add
add
jnp
bound
jle
icebp
add
loop
push
rorl
jp
pop
xchg
cmp
sarl
shrb
mov
xchg
int3
cmp
insl
cld
in
sbb
pushf
and
scas
in
mov
clc
or
rolb
adc
jne
popf
mov
adc
scas
fldenv
mov
je
sbb
imul
imul
sbb
in
mov
idiv
jge
dec
into
jg
mov
jne
scas
xor
jno
sti
test
push
cltd
and
outsl
sub
inc
xlat
rol
aas
jg
aad
les
movsl
xor
in
jnp
aaa
out
cwtl
les
dec
push
jo
subb
lret
mov
aaa
pop
push
xor
mov
arpl
push
adc
sub
sub
stc
add
rcr
out
jno
insl
pusha
leave
fs
das
push
cmp
sahf
mov
sub
shrb
lds
cmc
ljmp
jp
push
lods
aaa
mov
imul
subl
ret
mov
pop
or
jp
cmp
in
jle
das
pop
cmp
js
pop
mov
and
and
int
jns
mov
in
ret
std
flds
and
jg
mov
rolb
lds
jl
cmp
loopne
pop
xor
mov
xor
sub
push
popa
push
cmc
outsl
mov
fistl
jae
es
add
adc
aas
push
iret
add
sub
mov
loopne
add
jge
outsl
pop
sub
test
lea
popf
sbb
inc
add
jmp
push
or
ds
sub
xor
cmpsl
ret
insl
in
mov
or
ja
sbb
repnz
or
push
sarb
inc
and
sub
insl
sbb
dec
push
push
or
arpl
cmp
jbe
jecxz
and
aaa
js
out
mov
pop
mov
ja
sbb
stc
sub
lods
cltd
cli
arpl
loopne
sub
lcall
je
nop
test
pushf
lcall
int
rolb
mov
inc
mov
popf
mov
sbb
xchg
mov
or
push
popl
dec
int3
into
add
in
pop
decl
js
sub
sub
cld
subb
jnp
cmp
jb
rol
sub
enter
shrb
or
pop
push
xor
imul
jp
xlat
mov
popf
mov
lods
push
inc
inc
jno
es
adc
stc
ja
sbb
mov
insb
adc
fadds
cmpsl
jge
nop
add
out
xchg
push
adc
je
je
mov
mov
stos
stos
in
push
sarb
inc
sbb
fstpt
dec
jno
into
adc
repz
sbbb
mov
cwtl
dec
cltd
imul
push
or
popa
in
push
push
ds
daa
aam
lock
adc
ljmp
clc
addr16
adc
shll
loop
fldcw
jns
cmovbe
add
sbb
ss
xor
test
inc
insl
mov
and
push
or
mov
aam
out
hlt
mov
jmp
sbb
test
xlat
ja
int3
test
daa
pop
mov
inc
xor
pop
pop
inc
add
push
in
out
rcrb
cmp
jmp
push
rcrb
xchg
jno
mov
xor
pop
mov
fiadds
pop
dec
xchg
mov
pushw
dec
push
jge
sahf
test
cmc
sub
outsl
mull
xor
shl
mov
sahf
lret
push
loop
lea
pop
icebp
repnz
mov
pop
pop
aam
aad
out
dec
pop
xchg
in
fdiv
addr16
dec
xchg
imul
jb
fs
rclb
add
stos
and
sbb
sbb
mov
mov
adc
fsubr
test
inc
dec
cmp
pop
and
push
mov
and
shlb
cmp
mov
inc
jg
mov
stc
jno
dec
push
inc
mov
jg
shlb
push
push
push
dec
imul
enter
or
xchg
movsb
adc
inc
rorb
mov
jne
jnp
inc
push
mov
call
sbb
add
and
cvtdq2ps
pop
out
push
iret
pop
mov
xchg
lods
js
push
insb
or
lret
cld
mov
or
pop
sbb
cmp
fiadds
hlt
sub
icebp
out
fsubrs
mov
inc
pop
ljmp
sub
int
mov
and
xchg
callw
and
fwait
icebp
les
xlat
and
lods
outsl
xor
pop
dec
push
mov
mov
stos
pop
daa
xchg
add
aaa
je
leave
pop
mov
aaa
fistl
pop
sub
fidivrl
fadd
xor
je
aaa
fsub
fsubs
adc
popa
or
add
push
inc
orb
loope
jmp
jecxz
mov
mov
enter
fbstp
testb
and
mov
out
mov
mov
clc
jmp
sub
pop
stc
inc
out
rorb
cmp
scas
adc
fldt
loopne
xorb
push
scas
mov
loopne
in
or
mov
lret
roll
sub
sahf
fbld
adc
and
add
inc
pusha
int
jbe
sub
jbe
push
and
test
cmpsb
pop
daa
faddl
push
xor
arpl
xchg
test
add
xchg
dec
out
lods
lahf
movsl
and
jns
inc
ds
sub
mov
sub
cli
jg
push
fxch
test
jge
or
aad
xchg
adc
cmc
das
fbld
mov
jne
pop
cmpsb
aaa
mov
dec
adcb
mov
cmpsb
xlat
mov
jge
mov
int
inc
cli
cmp
in
jo
sti
pushf
test
out
pop
es
mov
push
in
loop
out
mov
lock
lods
push
xor
adc
imul
mov
mov
and
mov
pop
cmp
mov
stc
xor
dec
jnp
push
sahf
nop
lods
jnp
pop
push
pusha
adc
mov
add
cli
fwait
mov
cmp
sti
scas
push
mov
repnz
into
xchg
adc
roll
jl
std
rcl
push
xchg
pop
jae
sub
xor
mov
inc
pop
dec
cld
jo
outsb
outsb
cmc
jp
xchg
test
push
push
pop
andb
in
popa
roll
test
push
sub
mov
sbb
scas
jnp
mov
popa
jg
add
test
adc
fs
shll
dec
cltd
xchg
push
js
inc
enter
jmp
pop
out
xor
insl
std
mov
xchg
push
sti
loope
shrl
sbb
icebp
push
cmp
dec
xchg
inc
pop
jp
repz
add
push
mov
jb
sarb
lcall
int3
xchg
mov
lret
mov
mov
push
fdivr
sub
sub
mov
add
dec
clc
pop
aaa
jmp
mov
mov
cmp
lds
adc
inc
aaa
in
lods
sahf
add
push
mov
cmc
fwait
cmpb
mov
pop
cmp
push
imul
aam
inc
pop
cltd
fadds
mov
scas
push
mov
gs
mov
jge
pop
push
repz
addr16
jp
js
mov
xlat
or
test
aad
data16
mov
cmp
add
aam
pop
imul
lds
loope
push
mov
mov
push
xlat
xor
pop
es
jecxz
stos
jmp
lea
insl
cmpsl
mov
cmp
fiadds
fdivl
mov
clc
outsl
or
push
xor
popa
jmp
add
adc
scas
rorb
jg
ja
mov
imul
in
dec
aaa
out
jp
jb
mov
inc
cli
add
mov
in
push
and
leave
aaa
pop
lods
loopne
daa
inc
sahf
gs
mov
sahf
stos
dec
test
outsl
pop
jne
push
jl
addr16
movsl
xlat
pop
jne
imull
lret
ljmp
sub
adc
pop
jb
in
lock
movsl
pop
shll
dec
sbb
lds
inc
jbe
sub
ljmp
add
add
cmp
push
mov
push
xor
jmp
rorb
pop
add
lcall
jne
dec
push
movsl
pop
pop
mov
out
inc
loopne
xor
jbe
cs
test
mov
js
fists
fwait
jns
movsl
push
roll
hlt
cmp
popf
mov
in
sbbl
out
xor
jns
stc
inc
jmp
loopne
mov
dec
mov
je
scas
in
sbb
insb
push
pop
and
mov
lcall
and
repnz
stos
xchg
push
loopne
in
and
or
jp
jge
les
ja
push
cmp
mov
fdivrl
push
imulb
ret
inc
jle
push
ljmp
push
mov
mov
inc
outsl
mov
xor
jmp
repz
sahf
call
int3
sbb
daa
sbb
ds
mov
cwtl
fwait
push
ret
and
jo
stos
inc
in
pop
pushf
or
add
lds
cmp
lahf
push
jns
addr16
lcall
scas
jecxz
mov
test
xchg
mov
out
xor
pop
outsb
jno
inc
push
inc
flds
leave
cmpsb
jae
fcomps
or
inc
js
pop
aam
and
dec
or
fwait
js
jmp
pusha
fisttpll
inc
inc
and
xchg
js
mov
add
sbb
jmp
add
push
repnz
sub
testl
inc
jne
sahf
ds
push
scas
mov
addr16
mov
cli
fprem
sbb
mov
repnz
leave
push
dec
insb
out
daa
push
es
or
addr16
mov
fwait
adc
mov
push
jno
inc
and
pop
sti
mov
jl
jg
or
and
inc
jo
fidivrl
std
jmp
cmp
xchg
cmc
xchg
cmp
repz
aam
xor
jae
xchg
or
stos
push
mov
fildll
mov
and
adc
xchg
std
fdivrl
popa
add
pushf
insl
dec
jo
xchg
hlt
subb
jbe
pop
mov
arpl
in
xchg
decb
push
lods
dec
xor
xorl
jmp
add
les
mov
mov
mov
rolb
pushf
movsb
adc
inc
adcb
lods
imul
xor
lods
fldcw
mov
xchg
xor
in
add
stos
mov
in
outsb
ret
lret
out
pop
testb
and
sbb
daa
sti
adc
xchg
test
insb
lds
pushf
les
mov
in
int3
ret
jmp
outsb
scas
pushf
dec
cmpsb
outsb
jns
mov
std
mov
push
repz
subl
repz
sbb
in
fdivrs
xchg
mov
mov
pop
inc
cmp
mov
insb
dec
pop
scas
add
stos
je
cmp
cmpsb
cmp
sbb
and
jg
xchg
lahf
ret
add
xchg
pop
arpl
int3
mov
mov
sbb
ss
push
fsubrs
cli
cmc
out
pop
push
inc
fucom
test
mov
and
sbb
xchg
mov
mov
cmc
iret
push
loope
shll
or
xchg
fwait
aas
add
clc
xchg
cmp
outsb
cmp
sbb
and
movsl
fwait
add
mov
fstpl
orl
mov
adc
aas
lahf
enter
mov
or
mov
fiaddl
lret
cmpb
mov
scas
popl
or
rorb
test
sti
ja
mov
mov
mov
and
movsl
inc
leave
scas
out
nop
mov
dec
jg
cmp
test
pop
jns
jbe
loop
or
scas
xchg
outsl
fisubrs
daa
xor
push
das
mov
dec
jne
xchg
mov
ja
outsb
mov
sub
jge
fcoml
mov
loope
adc
subl
push
cwtl
stos
jb
dec
pop
repz
or
incl
add
loopne
mov
fnstsw
fistpll
ss
js
cli
aad
xchg
in
imul
sbb
int
addb
hlt
pop
and
push
lahf
xor
rorb
xlat
aas
mov
sbb
ja
pop
xchg
mov
test
popa
adc
clc
fisttps
sarb
jp
mov
ss
jge
adc
jne
sub
repnz
adc
int
sub
add
es
mov
sub
mov
sub
addr16
xor
in
out
enter
icebp
ja
sub
das
outsl
cmp
sub
out
lock
movl
add
inc
xchg
testb
pop
mov
je
in
out
jo
cs
stc
les
ja
divb
ja
mov
jl
scas
jno
mov
ret
cmp
mov
dec
mov
dec
mov
je
mov
inc
fs
cs
pop
jge
sub
mov
mov
lcall
fcoms
jg
data16
mov
pop
mov
jo
loop
scas
jl
jnp
mov
inc
rclb
insb
pop
push
fs
popf
iret
mov
push
stos
popf
sarb
shrl
pushl
inc
pop
shll
iret
dec
xor
mov
sbbb
jle
add
xor
hlt
push
mov
xchg
test
mov
out
rcll
lods
or
movsl
adc
push
mov
jp
lret
mov
ljmp
es
lret
fwait
icebp
cld
std
dec
ret
mov
das
notb
pusha
add
mov
ret
sti
cmp
aam
subl
or
ja
fcomps
inc
js
pusha
js
mov
scas
dec
cmp
and
sub
adc
aam
outsl
add
repz
cmc
push
push
cmpsb
push
or
loopne
scas
mov
fistpll
cmp
subl
pop
sbb
lahf
bound
sbb
in
inc
sub
xor
dec
ljmp
sub
movsb
sub
sub
and
mov
ljmp
lcall
lret
ss
jo
pop
xchg
or
movsl
adc
stos
fcomps
sub
int3
push
cli
movsl
dec
mov
sbb
int
and
testl
stc
dec
push
roll
adc
jmp
lods
loop
adc
mov
adc
aad
xchg
xlat
dec
xchg
aas
fisttpll
adcb
jne
cli
popf
cs
mov
mov
gs
xor
mov
je
in
nop
adc
inc
add
ret
xchg
sahf
pop
cmc
pop
sahf
sahf
shlb
cmp
shl
fwait
bts
out
fildl
popf
rolb
xchg
inc
cli
mov
icebp
addr16
std
adc
push
sti
pop
xorl
scas
sub
je
lahf
dec
js
jmp
neg
adcb
lahf
add
dec
mov
mov
mov
xchg
ss
mov
jnp
jge
loopne
inc
add
pop
mov
push
negl
jecxz
jae
nop
outsb
mov
fwait
mov
xchg
outsb
add
outsl
add
jl
fisubs
jp
hlt
push
repnz
jg
int3
hlt
hlt
xchg
push
adc
jb
sub
mov
imul
ss
jmp
nop
or
sub
in
enter
inc
ret
sahf
and
xchg
insb
xchg
pop
mov
jne
sub
outsl
xlat
pop
adc
and
add
gs
push
inc
inc
inc
data16
or
pop
mov
pusha
fnstsw
mov
sub
insb
rorb
sub
jne
mov
and
int3
in
push
addb
jle
daa
push
and
xor
xchg
fwait
xchg
jne
in
push
pushf
xchg
inc
enter
xchg
push
pushf
addr16
leave
les
das
fildll
inc
push
mov
loopne
pop
repz
cmp
cmpsb
push
pop
hlt
push
test
jae
sbb
call
mov
mov
clc
adc
mov
mov
xchg
fwait
iret
scas
xchg
mov
push
push
sub
or
movsb
xor
loop
and
mov
jle
shrl
loopne
ss
pop
cmp
fucom
add
adc
add
in
testb
or
rol
cmp
out
test
ds
cmp
test
sarl
xchg
push
lcall
je
cmpsl
xor
add
fisubrl
lea
push
xchg
aam
inc
jecxz
pop
sahf
sbb
rcl
jp
adc
bound
bound
push
cmp
jp
sub
or
loope
cmp
insl
lcall
aaa
push
xor
mov
pop
js
mov
sti
adc
add
addr16
jno
jo
mov
sbbb
and
gs
sub
nop
jg
insb
dec
das
cltd
fstl
xor
dec
lret
fdivs
pop
dec
lock
loop
jno
mov
pop
mov
daa
ja
xchg
adc
add
push
inc
in
and
and
mov
pop
mov
push
pop
xor
and
mov
mov
or
xor
mov
xchg
adc
aas
xchg
push
icebp
jp
mov
dec
fwait
loop
cld
adc
fsts
cld
out
add
inc
popf
xchg
cltd
popa
jo
sbb
dec
out
inc
mov
insl
xor
aad
jo
mov
or
sar
fs
and
imul
xor
outsl
popf
sub
xchg
jbe
scas
sahf
adc
testb
orb
jp
mov
xchg
enter
push
pop
dec
scas
lcallw
mov
mov
or
insb
or
mov
push
cmpsb
inc
sbb
rclb
ret
mov
xchg
pop
pcmpeqd
pop
repz
sub
popf
cmp
sbb
stos
jle
and
jo
shll
aam
cld
or
loope
imul
scas
aas
push
pusha
fwait
lea
nop
aaa
mov
fwait
orl
lcall
out
call
adc
bound
xchg
xchg
jne
jle
lods
daa
adc
pop
push
push
mov
xlat
jmp
jle
aas
testb
lret
call
lret
mov
jns
and
ja
in
pop
filds
dec
sub
dec
or
out
fstpt
push
jle
dec
out
xchg
sub
inc
stos
cld
add
sahf
jge
inc
sbb
xchg
test
or
mov
push
fsub
popa
cmpsb
stos
arpl
push
inc
imul
push
inc
or
jno
rcrb
inc
daa
es
lock
inc
jp
mov
dec
cmp
jle
fxtract
pop
mov
mov
je
push
sub
adc
sub
shl
jp
jl
inc
dec
loopne
sbb
dec
add
jmp
sub
mov
cmp
fwait
outsb
arpl
add
es
bound
negl
sahf
mov
xor
loopne
loopne
mov
add
xchg
subb
mov
cmp
ja
mov
lret
les
call
pop
adc
and
rolb
inc
and
fistps
sub
push
jp
dec
dec
mov
mov
mov
ret
or
in
popf
push
stos
cmpsl
ret
daa
xchg
add
jne
fidivs
pop
mov
jmp
rcr
lcall
shrl
cltd
dec
mul
mov
mov
cmp
sub
mov
in
pop
out
popa
leave
mov
movsb
cmc
lahf
or
dec
lock
fisubrl
inc
mov
or
sbb
pop
add
sbb
data16
push
ja
inc
mov
lahf
mov
xor
das
push
mov
call
ss
inc
cmpsl
jb
mov
int3
mov
pop
and
mov
dec
and
adc
xchg
xchg
xor
negl
aam
push
outsb
cmp
mov
mov
xchg
aad
add
mov
cmc
or
outsl
jne
push
inc
xor
fildll
push
pop
pop
xchg
bound
rol
mov
mov
mov
addr16
jbe
sti
test
mov
jl
test
in
enter
cmp
mov
shlb
loope
add
mov
push
fstpl
xchg
or
scas
fnsave
hlt
push
jg
cmp
sbb
ja
add
cld
inc
add
xchg
ds
and
divb
addb
or
gs
mov
test
xchg
inc
cwtl
mov
fsub
and
test
jl
popf
outsb
or
jne
cmp
js
xchg
ja
adc
ficomps
xchg
inc
cmc
das
xchg
arpl
cmp
push
ret
out
add
pop
negl
out
in
int
leave
mov
imul
dec
push
incl
daa
out
mov
imul
xlat
lret
sbb
jecxz
xor
cli
dec
cli
ret
inc
in
cltd
out
fcompl
push
hlt
sub
sbb
insl
push
cmpsb
aam
lods
int
jbe
in
sub
insb
shll
jns
bnd
imul
dec
movsb
inc
jp
fdivs
hlt
idivb
cmp
push
sub
or
push
lods
ss
mov
xchg
fdivrl
insb
ljmp
push
loopne
cmp
je
rol
push
inc
cmp
push
jo
jb,pt
xchg
pushf
sbb
sub
sti
mov
daa
cs
lea
xor
cmpb
xchg
mov
lds
push
les
ljmp
dec
xor
mov
pop
pusha
xchg
subb
sbb
lret
shrb
jno
and
in
push
lcall
js,pt
push
inc
insl
ret
jno
adc
cli
test
int3
xor
or
and
nop
ss
insl
mov
cltd
lods
iret
and
in
sbb
sbb
les
imul
mov
lds
shrb
mov
in
jg
sub
pop
loop
fisubs
mov
loop
sub
ljmp
push
and
in
mov
jo
mov
fnstcw
insb
subb
test
or
xchg
cld
pop
icebp
sahf
add
lahf
and
push
enter
lds
lret
mov
xchg
inc
loopne
mov
and
ficomps
movsb
lret
lcall
mov
divb
scas
mov
sub
ljmp
push
cmp
andb
pop
cmp
add
enter
mov
jmp
mov
sahf
fs
loope
sbb
adc
jbe
inc
sar
es
xor
add
out
and
mov
or
mov
stos
arpl
mov
aas
sbb
jle
push
popf
rorl
xor
jbe
repnz
mov
mov
insl
mov
xchg
adc
int
mov
out
cmp
xor
test
pop
sti
mov
inc
cmp
test
adc
push
add
adc
mov
fdivrs
pop
jle
mov
xor
jp
clc
movsb
mov
sarl
outsb
sbb
ljmp
test
jae
mov
push
jae
mov
mov
sbb
movsb
in
adc
stc
pop
or
insl
pushf
push
lahf
jl
das
lds
js
xchg
call
rorl
dec
pop
ret
daa
cmp
leave
mov
dec
xor
rcrb
shlb
enter
lea
jmp
inc
movsl
pop
add
pop
stc
pop
mov
shll
ss
addr16
sbb
inc
int3
loope
insb
push
jbe
adc
js
mov
scas
in
sti
iret
ljmp
in
aam
add
cli
into
ficoms
and
fbld
gs
arpl
shlb
jge
cmp
hlt
add
push
enter
and
add
dec
sub
mov
pop
sbb
mov
mov
lods
lods
arpl
mov
nop
pop
insl
test
lea
mov
xorl
xorl
inc
sub
call
shr
adc
sbb
cmpsl
into
xchg
jns
cmp
jg
cmp
aas
push
fmuls
rcrl
bound
mov
aas
dec
mov
push
jecxz
ficoml
pop
shll
aas
mov
inc
mov
loopne
mov
and
test
xchg
jnp
sub
data16
sbb
es
push
ror
xor
ds
outsl
dec
cmpsb
jmp
or
and
and
addr16
ret
lahf
sub
mov
inc
inc
enter
inc
jns
jns
ljmp
clc
inc
test
add
lret
jno
adc
dec
lea
scas
or
mov
add
lahf
xor
add
cmc
lock
movl
inc
jae
fldcw
xor
sti
test
cmp
xchg
cmp
movsl
shrl
hlt
mov
bnd
and
mov
lock
dec
arpl
nop
ljmp
fcmove
ret
in
into
xchg
xchg
andl
add
pop
sar
stos
add
lahf
sbb
clc
sbb
push
jmp
shll
loope
in
mov
in
pop
dec
cli
int3
cmc
jb
lahf
mov
or
hlt
in
les
es
cwtl
sbb
adc
pop
add
ds
mov
mov
das
mov
lds
cli
std
adc
xlat
jo
mov
xor
addr16
subb
insb
aaa
jle
adc
arpl
das
xchg
stos
fldcw
je
mov
cli
inc
add
cmp
jle
out
faddl
sbb
fsubrs
mov
in
mov
lret
data16
subb
leave
jmp
rclb
mov
loop
xor
cmp
sbb
lret
enter
pop
out
rclb
jo
daa
stos
xchg
mov
push
stc
inc
lret
outsl
xor
adc
leave
adc
add
ds
shlb
faddl
mov
mov
nop
arpl
sbb
test
add
jge
imul
loopne
mov
out
outsb
and
arpl
xor
js
push
mov
lock
cmpsb
ss
cs
imul
jns
jnp
pop
push
ret
sbb
sbb
mov
cmp
test
adc
pusha
sarb
mov
data16
fadds
idiv
xchg
sahf
mov
ss
mov
sarl
aam
push
dec
hlt
repnz
pop
xchg
insl
jae
cli
mov
xchg
push
shll
clc
lds
xlat
imul
dec
push
mov
xchg
into
gs
out
sub
xor
xor
hlt
push
filds
mov
test
jg
ljmp
pop
mov
jne
mov
outsl
adc
lods
mov
sub
inc
ss
inc
nop
cmp
push
in
dec
sbb
jae
repz
cwtl
or
xor
or
sti
dec
out
int3
or
stc
rcl
lret
sar
push
dec
or
rorl
mov
push
cmp
pop
sbb
mov
push
ds
imul
clc
sbb
mov
push
fldcw
into
lods
sub
push
sub
jge
fmuls
mov
or
mov
mov
sbb
adc
mov
inc
dec
in
ljmp
sub
les
fs
das
movsl
mull
lds
xchg
push
xchg
cmp
in
jp
add
lds
lock
xor
je
gs
inc
mov
sbb
gs
nop
mov
adc
std
pop
push
int3
xorl
bswap
dec
inc
and
lea
mov
test
mov
or
push
jnp
cmp
daa
xor
mov
sti
xorb
and
jmp
lock
pop
jns
inc
in
pop
popf
sahf
shll
jmp
pop
into
iret
imul
mov
jmp
sub
mov
jge
movsl
xor
ret
or
pop
pop
test
sbb
mov
mov
cwtl
fnstenv
xor
xor
cmp
jg
adcb
in
enter
repz
xchg
add
xor
jmp
sub
rcr
pop
xor
fsubrs
lret
rcrb
aad
icebp
cmp
lods
ss
je
mov
inc
xchg
pop
inc
aam
pop
lret
mov
hlt
xor
sbb
mov
call
mov
popa
jl
aaa
lret
jmp
add
xchg
mull
pop
filds
jmp
mov
pusha
stos
orb
mov
inc
fcom
xor
cmp
and
fists
dec
js
ljmp
mov
stc
fisubs
push
jle
xchg
fldcw
mov
add
arpl
fs
xor
fimuls
xchg
jns
fnstcw
and
push
pop
adc
jecxz
jnp
xchg
add
popf
or
xchg
pop
mov
arpl
mov
pop
jne
arpl
or
inc
outsl
aas
mov
lods
leave
into
sbb
sti
fdivrl
lea
lahf
xchg
fcomp
movsb
sbb
fcoms
push
fidivrs
std
cmp
sub
in
rcrl
fildll
dec
cmpb
sub
movsl
mov
mov
insl
inc
jnp
dec
addr16
or
pop
sbbl
adc
sahf
scas
sti
stc
push
pop
aad
fstp
mov
sub
fsts
popf
test
lds
or
in
movups
jne
sbb
int
push
push
pop
ret
andl
loopne
jns
xor
lock
sbb
fs
mov
rcr
out
andb
mov
add
mov
sbb
add
das
es
popa
sub
dec
push
dec
xor
iret
sub
xchg
and
dec
aam
fldenv
ss
push
push
pop
dec
subb
jg
decb
stos
loop
lahf
dec
adc
mov
adc
lds
ja
jle
mov
test
push
push
adc
mov
std
fucomi
lahf
and
cmp
xchg
cmp
fistpll
or
in
movsl
cmp
push
xchg
icebp
in
movsl
jmp
mov
jb
mov
and
out
cmp
xor
ret
jo
xor
or
rcl
mov
fdivs
outsb
cli
or
jg
cld
pop
mov
lock
jae
dec
mov
mov
mov
and
and
sub
mov
sub
adc
push
pop
mov
movsb
out
pusha
hlt
popa
fisttps
sahf
inc
mov
pop
jno
test
dec
dec
dec
fldenv
daa
subl
cmp
lods
fdivrp
xchg
testl
cmp
cmp
sub
adc
clc
or
push
push
fwait
repz
daa
mov
ljmp
pop
push
leave
jno
pop
hlt
cmp
lea
or
push
es
dec
push
push
push
scas
cmp
xorl
xor
sub
mov
mov
das
cmc
mov
jo
inc
loopne
xor
and
rolb
push
pop
add
push
mov
aaa
mov
or
jnp
or
enter
data16
movsb
arpl
aam
pop
or
dec
nop
adc
lret
outsl
subl
mov
push
add
pop
aaa
in
daa
scas
ja
test
into
movsl
dec
rcrb
sbb
pop
cmp
imul
or
in
mov
in
xchg
icebp
test
in
adcl
ljmp
sub
cmpsb
pop
adc
aaa
push
outsl
xor
mov
pop
shrl
daa
or
adc
mov
inc
cmpsb
clc
jnp
jmp
pop
sbb
call
jg
inc
jg
repz
sbbb
sub
icebp
int
nop
push
call
pop
add
outsb
add
add
daa
mov
jmp
int3
mov
shr
cmc
adc
cs
movb
sub
clc
adc
lds
in
sub
or
mov
fwait
pop
sbb
fldl
inc
out
mov
nop
lret
adc
jnp
insl
outsb
sahf
mov
dec
xchg
lds
out
add
dec
fiaddl
pop
aaa
jle
adc
jmp
pop
cmc
lret
or
lods
in
and
push
rcll
dec
div
jo
mov
add
cs
dec
pop
scas
pushf
inc
fiaddl
cmp
iret
inc
fisttps
xor
je
out
pushf
jbe
add
push
lods
lods
push
sbbb
scas
cmpl
pop
repz
adc
je
daa
in
sub
mov
mul
movsb
scas
adc
sbb
lcall
ret
fidivrs
sbb
and
push
rcrb
cmp
popa
in
push
ljmp
mov
xor
pop
jns
pop
lret
pavgb
xchg
jmp
sub
xor
stos
insb
ljmp
cmc
add
rorl
imul
mov
cmp
enter
add
jae
xor
jmp
fld
fsubrl
repnz
ror
adc
jne
rcll
cs
fdivrs
mov
cmpsb
popf
inc
cwtl
in
adc
insl
popf
cmp
sbb
sbb
std
mov
leave
shlb
cmp
inc
add
into
in
lods
dec
outsl
mov
mov
icebp
jl
call
int3
out
cmc
loope
js
lock
in
jae
dec
faddl
inc
or
test
fcmovbe
sbb
movsl
xchg
repz
aaa
shll
or
inc
js
or
push
aaa
movsb
push
adc
or
mov
adc
imul
xor
movsl
or
xor
dec
movsb
cmp
cmp
push
sbb
sbb
xchg
sbb
mov
jno
test
sub
stc
inc
and
pop
pushf
cmp
rcrl
add
mov
xor
jno
in
pop
pop
leave
popa
sbb
or
gs
rclb
sub
repz
pop
sub
cmp
pop
jmp
jb
sub
test
repnz
jno
or
xchg
xor
mov
fdivrs
mov
or
or
mov
fadd
not
movsb
pop
mov
cmpb
and
out
pop
mov
dec
sti
imul
mov
icebp
mov
enter
loopne
mov
inc
cmpsl
out
ss
push
dec
adc
cmpl
push
lods
cmp
jle
or
push
push
int
lret
sti
lahf
cmpsb
ds
mov
cld
dec
insb
in
arpl
sahf
lcall
movsl
add
loopne
sahf
add
sub
sub
sahf
adcl
pop
sbb
sub
mov
mov
push
dec
cmp
loop
jne
inc
lret
add
inc
inc
std
inc
xor
lret
mov
jbe
dec
js
push
inc
xchg
pushf
cmp
sbbb
mov
std
daa
sbb
inc
in
sbb
fstpt
sarl
loopne
mov
shll
pop
xchg
out
daa
imul
movsb
pop
test
add
aas
and
cmp
test
cltd
fstl
jns
and
movsl
xchg
aad
xchg
mov
add
pushf
xor
push
pop
lods
jae
das
add
pop
cld
lcall
jmp
aas
pop
add
je
lret
ret
or
cmp
test
int
mov
nop
dec
inc
push
div
push
aaa
mov
sub
or
ficomps
call
or
leave
aaa
or
testb
movsl
jo
push
in
sbb
and
hlt
push
cltd
scas
in
out
jge
jbe
test
cmp
or
mov
mov
js
cmpsl
sti
clc
cmp
adc
out
mov
mov
pop
mov
xchg
int
mov
pusha
or
loopne
and
ljmpw
inc
fwait
sub
dec
add
dec
adc
inc
xchg
lods
das
push
or
xchg
in
cmp
int3
pushf
dec
mov
jnp
pop
push
sub
push
data16
pushf
cmpsb
ret
ret
andl
and
je
mov
mov
arpl
mov
add
mov
cltd
repz
sub
ret
push
lock
iret
and
sbb
fnstcw
in
sub
dec
cmp
xor
xchg
ja
sub
add
dec
arpl
stos
add
loop
jp
inc
cwtl
pop
jle
pusha
and
pop
mov
cltd
test
jno
mov
scas
aam
js
mov
xchg
movsb
fimuls
xorb
and
mov
out
xor
out
les
adc
mov
push
cmpsb
jae
cmp
xor
imul
jnp
insb
std
cmc
movsb
mov
ret
test
and
int
sub
js
lds
adc
out
jno
xchg
push
lahf
push
pop
pop
insb
mov
pop
call
xlat
push
or
push
call
mov
xchg
sbb
stc
sbb
dec
xor
loope
inc
mov
jnp
pop
test
cli
push
or
lret
cmc
mov
rol
jg
in
jne
js
clc
fnsave
in
jbe
aam
xchg
ret
mov
shrl
jmp
ljmp
sbb
push
push
lret
jae
das
and
dec
and
adc
ja
cs
fs
cmpsl
sbbl
mov
int
cmp
movsb
adc
rcr
js
mov
dec
imul
loope
pop
cli
cld
fiadds
sbb
stos
jecxz
mov
jl
xchg
test
movl
insl
sub
mov
call
mov
cs
movsb
fistpll
add
aaa
loope
mov
lret
cmp
test
movsb
jno
lret
xor
icebp
mov
jne
cmp
dec
mov
iret
adc
in
xchg
pusha
add
add
adc
mov
call
loop
ror
insb
mov
inc
aas
into
scas
mov
add
out
out
adc
cwtl
sub
shr
push
out
pop
pop
push
dec
and
push
mov
rcrb
sub
xchg
or
mov
sub
nop
cmp
push
and
imul
xchg
sub
in
outsb
in
fbld
imul
inc
adc
out
ss
pushf
rorb
xor
lcall
data16
dec
test
pop
sahf
movsl
pop
sub
std
and
push
sahf
aas
add
jl
out
pusha
and
cmc
cmp
mov
loope
test
or
xchg
imull
mov
das
mov
cld
insl
jg
pop
out
fistl
in
mov
daa
hlt
xchg
bound
mov
pop
pcmpeqb
mov
push
or
push
xor
sti
or
int3
fldenv
movsl
pop
cmc
jne
push
shll
mov
rorl
loope
inc
mov
iret
sbb
mov
es
shll
inc
sbb
inc
jp
sbb
pop
fimuls
add
addl
adc
mov
imul
bound
out
imul
rep
pop
cld
sub
or
inc
call
cmp
popf
mov
xchg
fisubrs
outsl
mov
shlb
les
jecxz
mov
or
roll
xchg
je
jmp
sbb
in
add
cltd
cwtl
xor
fidivl
imul
or
mov
leave
jbe
insl
inc
pop
fdivp
imul
pop
in
and
cmp
popf
mov
xor
xchg
or
loopne
mov
jbe
fwait
mov
stos
pop
bound
jne
or
dec
cmp
shlb
sub
test
jo
lahf
rorl
imull
divl
repz
in
ljmp
or
push
pushl
test
mov
push
ja
repnz
sbb
outsb
sbb
outsl
add
aad
push
fcoms
dec
into
and
adc
sub
sub
cmpsl
xchg
jo
cltd
hlt
sbb
inc
xchg
sbb
inc
fiadds
pop
dec
out
insl
or
out
test
call
add
cmpsb
outsb
sbb
out
xor
out
pop
insl
jecxz
stos
mov
movl
imul
push
adc
dec
lock
js
cmp
lea
xchg
mov
xchg
daa
movsl
jo
test
fsubrs
sbb
sti
or
inc
add
popf
or
xor
pop
push
or
adc
adc
inc
inc
inc
aaa
cmp
sub
pop
adc
jecxz
push
xor
mov
jae
hlt
cwtl
enter
add
push
sub
xchg
push
test
adc
inc
jp
mov
jo
lock
jmp
push
xor
add
mov
cld
imul
push
lock
test
out
xchg
pusha
push
sub
mov
mov
shlb
mov
cmp
ljmp
add
cltd
inc
sub
aas
sbb
leave
repz
push
mov
sub
mov
add
fs
jl
fs
andl
xor
dec
push
lret
mov
add
bswap
and
or
scas
push
mov
cwtl
jnp
inc
inc
jg
add
rorb
fnstsw
cmpsl
stc
ss
out
sahf
xchg
and
addr16
movsl
scas
mov
imul
pop
lock
pop
jae
xor
shrb
mov
sti
pushf
aad
sbbl
push
inc
outsb
push
loopne,pn
fs
and
rcr
pop
and
imul
cmpsl
jnp
xchg
xchg
mov
pop
cld
rcr
sub
jns
mov
lret
fsts
fs
lods
outsl
mov
enter
out
ret
pop
push
or
mov
adc
mov
sbb
xor
stc
dec
sbb
push
sub
mov
or
into
sar
inc
faddl
mov
sbb
xor
xor
sbb
mov
pop
mov
xchg
fldl
insb
insl
sub
sti
and
pop
outsb
jg
clc
les
lahf
sub
aaa
push
inc
push
mov
inc
add
nop
sbb
inc
inc
cmpl
jb
or
movsb
pop
lcall
dec
insl
pop
loope
sahf
mov
lds
shlb
loop
inc
dec
fisubl
jno
push
cmc
mov
leave
cmp
fdivr
leave
mov
mull
sub
push
sti
ss
outsb
and
push
out
push
cld
ret
and
mov
pop
andl
sti
sub
xchg
aaa
mov
inc
mov
frstor
popf
add
pop
pop
or
xchg
dec
out
addr16
fcoml
jnp
cmp
stos
pop
popa
fdivl
sarb
bswap
adc
push
mov
imul
mov
mov
cmc
sub
in
ror
mov
jmp
push
repnz
or
jae
jge
inc
push
outsl
push
xor
push
pusha
or
mov
cld
enter
xchg
add
shrl
popa
jae
pop
and
sti
pop
dec
add
ss
fwait
dec
cltd
pop
je
insl
mov
push
xchg
shlb
shlb
rcrl
icebp
orb
jb
push
or
xor
cmp
or
push
incb
jge
or
or
jo
push
clc
xchg
xchg
cmp
lcall
test
loope
push
ret
es
mov
imul
int3
outsb
fldl
sub
dec
xor
ja
sub
cltd
fistpll
mov
clc
fucomp
mov
adc
pop
lret
pop
push
push
xchg
mov
sub
pop
adc
test
clc
sbb
shll
xchg
call
out
inc
pop
mov
mov
dec
add
orl
out
addr16
dec
cmp
outsb
push
popf
or
cmp
inc
mov
sbb
mov
xor
fs
lea
jl
cmp
movsl
sahf
outsb
pop
push
mov
pop
sub
lea
pop
lods
cmp
lcall
push
cmp
movsb
xchg
int
jns
pop
jg
sbb
jo
cli
lret
adc
loopne
mov
frstor
inc
or
inc
mov
cld
mov
and
add
dec
sbb
sbb
xchg
fsubl
push
andb
push
scas
add
jbe
mov
jne
inc
sub
sahf
sahf
jmp
mov
js
lret
and
xchg
jae
pop
mov
sbb
call
ret
ret
push
cld
xchg
icebp
iret
je
pop
mov
icebp
jl
fidivl
inc
mov
jg
jo
add
jo
jb
test
push
pop
dec
jo
les
andb
xchg
popa
les
movsl
inc
mov
jecxz
and
jmp
jbe
push
pop
mov
mov
bnd
and
nop
cld
jno
fistl
dec
jmp
or
mov
xor
popa
flds
shl
mov
clc
in
gs
nop
rcrb
repz
mov
ljmp
stos
cmp
xchg
xlat
jg
rclb
scas
cltd
push
daa
and
sub
ja
test
dec
xchg
add
xorl
or
xchg
jbe
mov
ficomps
int
push
pop
dec
shll
add
push
cmp
push
dec
aad
lods
push
ret
or
adc
lds
adc
pop
inc
into
test
daa
or
shll
addr16
adc
add
push
and
test
push
and
gs
sti
int3
push
mov
out
adc
push
mov
push
push
lea
popf
or
adc
or
mov
sbb
dec
mov
mov
cmpb
in
jecxz
gs
outsl
mov
inc
xchg
in
cmpsl
ss
icebp
mov
adc
add
xchg
or
rorl
mov
sti
fwait
outsl
push
inc
sbb
add
scas
hlt
xor
nop
cmp
jno
jle
add
rcrl
das
and
icebp
or
movnti
mov
imul
xor
cmp
hlt
jle
mov
mov
sbb
cmpsl
jbe
mov
cltd
dec
sub
inc
sahf
int3
sbb
push
testl
xchg
insl
cmp
fstpl
push
sub
lret
xadd
adc
ret
shrl
pop
ret
arpl
jne
adc
or
sti
mov
loop
inc
add
mov
sub
mov
push
loope
sub
mov
ss
jbe
sbbb
imul
insb
push
mov
cmc
fs
push
adc
scas
hlt
mov
add
stos
out
add
out
jle
out
sbb
mov
push
and
orl
pmulhw
mov
lods
cmc
adc
jge
mov
sbb
ss
push
cmpb
mov
jno
ja
lea
and
inc
imul
inc
or
repz
data16
movsl
mov
dec
lods
or
sti
sub
imul
push
sbb
insl
add
push
in
jbe
movsl
shll
adc
lea
jbe
add
stc
ds
mov
lret
jle
add
xor
pop
jns
xchg
shl
dec
test
xchg
data16
or
push
sbb
mov
xor
mov
std
jbe
loope
or
mov
mov
addr16
or
mov
pop
jle
or
add
hlt
stos
cmp
jle
faddl
jno
xor
loope
mov
add
push
mov
and
or
dec
dec
cmp
nop
xchg
loope
adc
test
mov
loop
lods
lods
divb
loope
ret
roll
xor
mov
push
jmp
sub
das
cwtl
sub
and
gs
jbe
call
sbb
insb
push
adc
imul
push
das
sahf
rclb
mov
and
test
push
pop
inc
icebp
mov
popa
sbb
scas
or
ja
enter
cs
jecxz
negl
cwtl
sbb
je
xchg
xchg
and
jmp
arpl
sbb
xor
and
xorl
mov
and
xor
cltd
mov
sahf
push
or
hlt
cmp
xor
dec
jb
cwtl
pop
mov
into
mov
pusha
xchg
and
xor
push
push
adc
repz
cltd
push
aam
adc
outsb
mov
shll
fisubs
push
loopne
xchg
mov
xchg
stos
mov
roll
sbb
int3
pop
cmp
sahf
mov
and
lock
popf
fmull
aam
push
pop
cmp
pop
movsb
xchg
cmpsb
ftst
inc
es
in
popa
leave
stc
push
cwtl
cli
lods
popf
ret
cmp
or
scas
test
pop
xor
fsubl
push
mov
inc
xor
pop
adc
test
shlb
scas
cmp
add
cmp
add
jge
jnp
sbb
sub
add
lea
fwait
pop
mov
xor
cltd
sbb
mov
jns
stos
adc
mov
xlat
aaa
andnps
push
push
lods
popl
dec
repz
cmp
lret
xchg
test
loop
xchg
xchg
arpl
imul
mov
sbb
cmp
jo
cld
addr16
lahf
stos
cmpsb
in
sahf
aaa
test
mov
pop
subl
jb
xchg
stos
sbb
leave
fsubrs
lods
cmp
inc
adc
in
je
mov
scas
push
cmp
test
repnz
jb
bound
add
ret
lods
pushf
lret
aas
mov
outsb
jle
pop
cli
cmpsb
lret
roll
shlb
jnp
jne
daa
shrl
test
inc
or
rorl
fcoms
fistps
fs
xchg
or
fisubl
pop
xchg
cmp
mov
pop
push
arpl
push
push
xor
cmp
jne
xchg
stos
clc
and
sub
lahf
inc
rcr
std
sbb
push
mov
push
bound
faddp
mov
push
or
mov
cmp
push
cmp
xor
test
xor
std
out
push
in
insl
mov
pop
xorl
push
jge
mov
js
mov
push
test
lret
pop
push
in
jle
mov
jl
jo
idiv
stc
fwait
mov
or
xchg
push
or
stos
test
jge
or
sbb
sub
icebp
or
add
rcll
dec
xchg
mov
je
mov
dec
test
mov
mov
aam
fcomps
push
and
neg
sub
cmp
pop
bound
mov
lcall
xor
ret
fsubrl
xlat
dec
in
pop
xor
mov
popa
push
out
mov
mov
imul
jb
mov
loop
psubb
imul
pushf
pop
mov
sbb
fwait
call
adc
xchg
mov
xchg
insl
jno
mov
bound
fcomp
repnz
lcall
dec
and
sbbl
mul
jge,pt
xor
aad
push
jp
lret
pop
xchg
adc
sbb
insl
into
jae
frndint
xor
rep
enter
push
jne
cmp
fildll
xor
adc
jbe
jae
cmp
test
fstps
loope
xchg
pop
add
inc
insl
jg
sub
clc
lret
mov
push
leave
cmp
pushf
adc
or
std
lock
xor
cli
fcompl
insw
nop
fldln2
xor
mov
es
xchg
and
dec
inc
dec
imul
pushf
jns
and
bound
pop
cmp
adc
push
repz
mov
xchg
and
xchg
dec
push
cmpsl
mov
dec
dec
dec
push
iret
daa
jg
pop
xor
adc
jecxz
mov
adc
daa
push
fisubl
movb
int
adc
xchg
movsl
hlt
pop
movsb
mov
imul
inc
sub
outsb
add
adc
ja
and
xchg
mov
pop
and
fnsave
lods
push
cld
daa
imulb
popa
lea
mov
sbb
sbb
aaa
ljmp
mov
and
and
int
jmp
cmc
notb
sub
mov
xchg
mov
cltd
push
shl
notl
es
cwtl
fisubrl
jb
mov
fiadds
jbe
ffreep
sti
shll
idivl
icebp
push
or
pop
into
jmp
and
lret
inc
jmp
bound
outsb
mov
out
pop
xchg
shrl
xor
dec
pushf
sub
push
lods
das
in
and
movsl
ss
jp
out
and
inc
xchg
inc
dec
and
loop
cmp
out
into
fnsave
clc
jle
sub
or
add
movsl
or
and
xor
mov
pop
or
xchg
add
in
test
stc
fcompl
daa
ljmp
out
into
mov
xchg
add
ss
es
lock
stc
pusha
jb
push
xor
sbb
hlt
jns
push
subb
xor
push
lea
leave
dec
cltd
fstpl
mov
enter
xchg
cmp
pop
push
jnp
shrb
mov
push
inc
jno
push
call
cltd
inc
or
xlat
andb
out
or
xchg
adc
push
repz
push
sbb
cli
mov
and
je
fwait
sub
cmp
sub
inc
xchg
sbb
adc
and
pop
sub
mov
push
rcll
push
cmp
sbb
divl
jne
test
cmc
pop
sbb
dec
or
andl
sbb
pop
or
out
and
xchg
addl
ja
iret
gs
sub
call
in
popa
rcrb
test
lret
sti
sbb
dec
test
out
mov
sub
stos
xchg
pop
sbb
dec
aam
andb
jno
jle
outsb
test
aaa
or
mov
frstor
adc
out
cmp
mov
sub
fstps
sbb
jge
xor
cltd
leave
dec
xor
push
jae
mov
ret
mov
es
cmp
movl
mov
and
and
loop
inc
mov
and
sub
xchg
cmp
test
insb
js
pop
icebp
fcmovb
sbb
aas
aaa
lcall
call
pop
push
and
push
imul
mov
mov
leave
scas
add
xchg
xchg
mov
pop
cmc
nop
arpl
xor
je
in
dec
and
into
push
mov
jle
hlt
jecxz
rcrb
mov
adc
daa
inc
ret
movsb
xor
jnp
dec
pusha
and
lahf
mov
out
cmc
mov
jns
or
cmp
dec
adc
ror
pop
xor
rorl
cwtl
popf
loop
out
cmpsl
lahf
mov
push
je
orl
jecxz
sub
sub
fiaddl
lahf
xor
vcvttpd2dqy
rcll
mov
pushf
ja
push
jmp
lret
jb
sbb
inc
cmpb
addr16
cmp
cltd
ret
sub
out
imul
outsb
adc
xor
ss
or
test
clc
xchg
daa
add
push
mov
or
xchg
ret
pop
push
sbb
ret
rcl
ja
cmpsl
lds
and
push
imul
sbb
mov
pushf
xchg
push
fbstp
sarl
cmpsl
jg
lea
jno
mov
cld
pop
push
sub
dec
js
mov
jl
sub
loope
std
pop
xor
sahf
xor
fsubl
hlt
ror
mov
addr16
jb
leave
lock
mov
out
xchg
aaa
pop
sahf
test
std
inc
ja
es
insb
imul
dec
outsb
mov
int
nop
sub
gs
cmpsl
pop
call
add
into
enter
icebp
push
addr16
int
jge
jp
hlt
jb
pop
mov
push
push
inc
sub
je
jp
cmp
and
outsb
fnstsw
and
add
mov
jnp
add
or
out
cmp
inc
fisubrl
sbb
sbb
or
fimuls
xor
loop
adc
outsb
and
push
inc
or
and
xchg
adc
in
pop
out
jo
jns
mov
movsb
mov
xchg
or
leave
fnstenv
shll
mov
divb
sub
mov
dec
sub
mov
fdivrp
push
sbbb
adc
and
xchg
in
ficoml
das
cmp
enter
repnz
in
cmpsl
lahf
test
xchg
push
es
ret
mov
enter
cmpl
cmp
lret
sbb
push
stos
adcl
mov
mov
pop
jnp
jne
xor
daa
sbb
fsubrp
clc
cmpsb
push
out
mov
fisttps
add
xor
das
xchg
scas
stc
ljmp
mov
adc
pop
inc
mov
jmp
vfnmadd231ss
push
pop
adc
pop
mov
push
jp
sub
add
pusha
dec
push
jo
xchg
xor
in
add
ljmp
push
pusha
jge
push
in
out
nop
sub
arpl
ja
pop
add
pop
movsl
pop
mov
or
rclb
mov
sub
adcb
jle
js
in
jae
mov
mov
aaa
and
mov
xchg
call
or
fadds
jecxz
pop
pusha
push
lds
adc
outsb
add
jae
jbe
or
add
stos
fnsave
mov
int3
sbb
lea
mov
add
cmp
xchg
adc
into
xchg
stos
adc
mov
and
scas
adc
cmp
addr16
sub
jb
mov
into
divl
jge
mov
hlt
push
inc
sti
fcomps
inc
dec
cmp
xchg
ret
mov
fdivr
ljmp
inc
fucomip
mov
sub
roll
sub
cmpsl
pop
xchg
add
leave
sti
repnz
cld
pop
out
mov
xor
outsb
or
addr16
movsb
mov
cmp
inc
pushf
mov
cmp
stc
pushf
xor
rorb
nop
mov
dec
popf
out
fcoms
pop
mov
xchg
push
inc
sub
in
mov
mov
and
ret
mov
loope
dec
adc
ret
mov
sarb
adcl
out
into
dec
push
rol
addl
mov
mov
pop
movsl
orb
mov
cmpb
adc
ret
mov
cmp
sbb
ss
add
mov
loop
out
lret
mov
lock
dec
data16
mov
or
shlb
xchg
loop
ljmp
test
mov
xchg
dec
fbld
in
jp
push
xchg
jnp
xlat
jp
mov
push
mov
push
add
lahf
out
in
or
lock
cltd
push
jno
xlat
sbb
mov
arpl
sarb
shlb
xchg
mov
sbb
insl
out
stos
pop
inc
int
bound
jae
adc
imul
rcll
mov
into
mov
mov
pop
fs
mull
and
cs
ret
test
in
insl
mov
mov
rorl
jno
inc
xlat
push
mov
rcll
dec
jecxz
xor
shl
aas
xchg
test
pop
outsb
push
dec
jl
lds
adc
insb
popf
push
sub
jns
mov
bound
sbb
pop
or
lods
push
adc
lods
fldt
leave
fsubrl
je
push
mov
cmc
add
push
aad
adc
ret
leave
mov
dec
sbbb
stc
in
push
test
or
std
add
inc
adc
aad
lea
faddp
inc
adc
dec
push
test
cmp
inc
or
and
test
in
std
sbb
or
inc
jbe
jbe
sub
out
ljmp
outsb
loop
pop
sahf
fiaddl
add
cmp
mov
inc
test
adc
inc
cmpps
fs
aas
jo
add
sub
sub
push
ja
loopne
mov
add
stos
jmp
push
sbb
pop
testb
outsl
sbbl
cmp
or
roll
call
aad
mov
or
cmpsl
mov
andb
pop
je
iret
inc
idivb
loope
pop
xchg
jle,pt
mov
fprem
adc
int
lret
mov
call
push
sbb
xchg
inc
fidivrs
sbb
sbb
add
arpl
mov
cmp
leave
dec
nop
sub
ret
dec
lret
orb
jle
fs
xchg
and
scas
mov
mov
fdivp
inc
mov
ret
sub
dec
add
es
mov
data16
push
enter
add
cmp
adc
jnp
in
jg
bound
insl
aad
imul
jo
and
test
xchg
es
and
pop
pushf
ret
mov
lods
and
push
sub
push
out
inc
pop
sub
pop
daa
or
mov
out
sarb
sahf
jp
lcall
fs
or
and
rcrb
jae
add
cmp
xor
outsl
cwtl
xchg
pop
mov
pop
and
out
sbb
shll
xor
jmp
arpl
inc
jb
push
pop
or
mov
leave
or
adc
outsb
out
out
icebp
cmpl
lea
sub
mov
jb
or
cmp
icebp
fnstsw
fwait
imul
inc
lods
sub
or
rcll
mov
add
jns
lcall
jg
jnp
push
cmpsl
js
icebp
push
inc
mov
or
add
sub
rcl
nop
cvtpi2ps
popf
and
mov
rolb
and
pop
jb
sbb
jne
mov
adc
out
add
out
push
sbbl
push
mov
push
imul
cli
loop
dec
xchg
je
aaa
out
sbb
add
inc
sar
adc
jns
push
out
mov
movsb
rol
sbb
jg
mov
cmp
stos
jge
or
xchg
mov
lahf
mov
pop
xor
rcl
jl
dec
inc
ja
cwtl
add
stc
cmpsl
test
cltd
dec
jnp
jecxz
fldenv
inc
fs
pop
pop
push
xor
in
fmull
xor
arpl
in
and
popf
mov
ret
inc
jg
adc
push
popf
jmp
les
jbe
add
mov
inc
add
iret
cltd
imul
aas
popf
out
fcomps
leave
ret
xor
vmulps
xchg
sbb
fnstsw
jno
dec
pop
sti
push
jne
or
mov
pop
mov
imul
and
nop
in
sbb
pop
int
mov
pop
pop
pop
jmp
dec
mov
loope
in
aas
add
push
dec
idiv
xchg
bound
cmp
loopne
clc
cli
xchg
cltd
lahf
lret
insl
cltd
add
es
pop
ds
cmp
fdiv
fimuls
push
repnz
in
mov
jp
js
fsts
mov
roll
mov
pop
push
shll
pusha
cmpsb
gs
mov
adc
xor
in
mov
or
adcl
cmp
rcll
fcomps
ficompl
daa
aad
push
add
rcr
mov
add
jne
sub
adcl
orl
xchg
decl
dec
jmp
adc
lods
mov
cmp
es
stos
xchg
cmp
or
scas
cs
aaa
cwtl
mov
das
icebp
pop
out
dec
repnz
push
imul
jg
shrl
and
mov
xchg
movsb
cli
cmpsb
outsl
sub
xor
repz
sbb
and
cmp
gs
mov
test
push
aas
je
xlat
mov
pop
mov
mov
pop
xchg
test
aam
xor
shrb
inc
xor
inc
mov
in
and
adc
inc
cmp
mov
push
aam
aaa
mov
gs
cmc
movsl
xor
rorb
jmp
jae
popf
std
adc
push
repnz
adc
sbb
cmp
arpl
mov
out
xchg
movsb
pop
mov
sub
mov
cmp
mov
dec
pop
or
mov
call
aaa
jo
in
shr
adc
bound
std
shl
push
out
push
pop
mov
mull
mov
in
inc
xor
jle
adc
mov
pop
popf
mov
dec
insl
mov
add
sub
jmp
xchg
popa
iret
push
movsl
hlt
pop
lods
jbe
adc
imul
cmp
xor
shll
out
xchg
test
mulb
testl
xchg
rorl
mov
lods
orl
inc
and
fistl
popa
sub
pop
sbb
pop
push
pop
push
ljmp
lods
icebp
pop
dec
push
xchg
pop
jge
pop
or
mov
testb
push
push
jnp
int3
jae
dec
gs
add
ret
enter
cmp
mov
cwtl
push
jge
or
lds
dec
test
arpl
fdivrl
jno
adc
insl
cmp
and
loopne
test
or
out
cmp
fs
sbb
xor
ds
lret
cmpl
push
inc
mov
notb
or
and
cmp
sub
cs
dec
sbb
outsl
push
loop
js
aam
lea
pushf
mov
sbb
movsl
ret
push
xor
mov
int3
test
mov
cltd
add
repz
jecxz
les
push
adc
out
cmp
out
rorb
andb
or
add
aad
sub
add
idivl
jp
sbb
xor
push
xchg
add
xor
jg
xchg
adc
je
jecxz
popa
cmpsl
lcall
push
repnz
mov
inc
ret
mov
mov
in
push
mov
shll
xor
push
aam
add
push
adc
xchg
adc
sar
test
aad
xor
push
mov
lahf
sbb
cmpsl
push
add
sbb
fwait
hlt
rolb
outsb
mov
scas
sbb
fnstsw
iret
test
and
and
lret
repnz
loop
enter
inc
push
aaa
pop
daa
dec
inc
dec
int
cmpsb
mov
xchg
fisubs
or
add
jg
and
cmp
int
and
jno
leave
fnsave
jmp
cltd
rolb
sarb
pushf
stos
movsb
std
inc
xor
test
popa
dec
lds
sub
or
mov
lock
dec
loop
pop
jnp
mov
stos
cmp
popf
cmp
mov
test
jge
cwtl
shl
mov
fisttpl
in
lock
sbb
xlat
mov
cli
jnp
sbb
sub
mov
out
xchg
pop
aam
xor
pop
jp
xor
cmp
xor
inc
jl
pop
lcall
mov
xor
jl
sub
je
mov
outsb
inc
sbb
outsb
lock
jnp
loop
lds
adc
adc
jbe
out
xor
jl
stos
or
mov
outsl
mov
loop
cvtdq2ps
repz
imul
cmpl
mov
sbb
push
sub
movsb
fwait
push
or
out
aas
mov
cli
outsb
mov
add
faddl
cld
test
xchg
es
dec
sarl
cs
cmp
out
stos
data16
data16
mov
call
lcall
test
insb
mov
jp,pt
lea
jae
in
dec
xor
iret
adc
fnstenv
mov
fsubrl
pop
ljmp
leave
lods
fbstp
adc
pop
dec
pusha
pushf
jno
mov
repnz
xchg
aad
mov
repnz
adc
mov
xor
cld
cmp
pop
imul
push
and
jae
and
mov
jecxz
xchg
je
xchg
push
enter
ds
dec
adc
push
push
dec
das
in
imul
add
addl
push
xchg
add
mov
jg
lea
pop
mov
fimuls
test
jne
jge
scas
or
imulb
insl
add
das
xchg
mov
test
mov
mov
sahf
push
xlat
stos
mov
mov
pop
mov
jp
cmp
mov
sub
lds
jae
mov
xchg
out
test
rclb
add
xchg
cmp
sub
sbb
adc
xchg
sub
xchg
cmp
bound
das
hlt
out
fisubrs
gs
add
insl
cli
mov
xchg
push
loopne
mov
sub
add
xchg
ja
mov
cli
push
mov
or
fwait
not
xchg
nop
dec
adc
adc
es
sbb
mov
subps
ljmp
dec
cwtl
mov
lret
fildl
sbb
jno
sti
pop
cmp
movsl
push
loopne
mov
inc
and
pop
scas
aas
cmp
dec
cmp
fcomps
jle
xor
mov
packsswb
rorl
leave
ljmp
outsl
lds
jns
mov
push
popf
xchg
out
xchg
jle
sti
pop
mov
lahf
test
cmp
sub
das
inc
movsl
lea
push
push
mov
mov
xchg
cld
in
lahf
pop
fucomi
roll
add
and
cmp
into
in
inc
fadds
fiaddl
in
ljmp
mov
jecxz
lock
cs
push
jno,pn
pop
shlb
mov
sub
mov
sub
sub
sbb
lahf
out
std
call
into
mov
xor
in
jecxz
into
das
sahf
sub
les
sub
mov
mov
mov
scas
shrl
insb
cmp
pop
gs
push
fmull
test
icebp
jb
add
scas
nop
inc
jl,pn
cmp
adc
data16
xor
inc
fidivrl
mov
pop
ljmp
sub
mov
stos
movl
xchg
sub
jecxz
int
rorb
adc
scas
dec
roll
rorl
adc
lock
pop
mov
pop
cmp
sbb
popl
shll
inc
leave
clc
es
lret
mov
pop
jge
fmull
andb
mov
or
es
push
xchg
std
insb
and
push
cmp
dec
jl
ss
stos
mov
and
es
nop
sub
mov
movsl
jl
stos
gs
push
mov
test
pop
call
out
in
push
xor
scas
ds
lret
mov
imul
mov
push
scas
pop
stos
fwait
loopne
mov
aam
dec
sti
pop
or
lret
roll
aaa
movsb
and
popa
add
mov
mov
sbb
bound
adc
dec
push
sub
inc
popf
sub
cmp
add
fiadds
pop
jmp
cmp
popa
jle
jb
mov
popa
xlat
sub
push
aad
mov
xchg
dec
std
xchg
dec
xchg
jl
test
push
ret
pop
into
std
enter
sbb
add
orl
lea
push
sti
mov
mov
outsl
test
mov
cmc
push
jne
cltd
adc
adc
push
mov
movsb
pop
and
jb
fistl
cmp
in
pop
lahf
mov
rorl
gs
xchg
daa
push
rcrb
dec
jnp
aad
mov
add
inc
imul
mov
std
push
outsl
push
adc
shll
cmc
jmp
out
push
xor
andb
popf
mov
mov
push
hlt
fstpt
test
lds
ljmp
mov
int
sub
ds
push
pop
push
cs
pop
add
lods
sub
mov
mov
cwtl
dec
inc
pop
pop
adc
mov
or
ret
add
fistpll
add
xor
fcompl
stos
push
jl
mov
iret
imul
dec
clc
fwait
pop
xor
mov
cmc
jnp
push
test
fwait
cmpl
out
mov
mov
je
jge
aaa
mov
and
or
and
cmp
cmp
stos
push
in
push
shrl
mov
in
xchg
cmp
pop
add
or
push
inc
loopne
sub
fs
or
inc
es
js
sbb
jmp
arpl
mov
cs
add
mov
jp
out
sub
xadd
mov
xchg
xor
clc
gs
arpl
stc
sbb
shlb
mov
xor
xor
mov
dec
ja
lret
xchg
ljmp
adc
mov
mov
mov
das
mov
sub
sahf
adc
sbb
adc
pop
shrb
out
cmp
inc
pop
popf
mov
jl
xchg
cmp
xchg
ljmp
bound
mov
mov
mov
mov
push
inc
xor
test
fdivl
loope
shlb
pop
cmp
sbb
sarb
scas
test
aaa
jne
mov
sub
push
inc
jmp
xor
dec
shll
or
mov
out
cs
adc
mov
add
dec
pop
cs
nop
cmp
and
into
lret
lahf
popa
iret
jecxz
xchg
into
adc
fwait
mov
or
mov
cmp
sbb
into
or
xor
jns
jne
xlat
and
lea
dec
scas
adc
lds
ja
dec
popf
out
aaa
pop
inc
lcall
in
mov
fucom
pushf
ficomps
mov
push
loopne
adc
nop
add
or
lods
ljmp
jns
iret
push
rcr
out
jl
cwtl
stos
jmp
or
ljmp
addr16
loop
dec
fsubl
mov
and
push
ss
jg
lods
xchg
inc
xchg
pop
jg
or
les
subl
rol
jnp
cmp
insl
push
aaa
mov
loopne
jnp
inc
inc
inc
mov
outsl
push
adc
movsb
inc
adc
jmp
jbe
mov
repz
scas
aaa
test
loopne
pop
pop
push
mov
jo
push
mov
and
leave
cmpsl
inc
fcmovnb
imul
fwait
repz
xchg
gs
bound
add
into
jge
lock
es
push
adc
sub
rcll
or
sub
in
pushf
cmp
mov
movl
pop
idivl
sarb
push
pop
pop
adc
xchg
mov
dec
popa
xorb
cwtl
jl
pop
pop
cld
cmp
fildl
xchg
and
test
xchg
push
out
or
and
das
mov
xchg
and
enter
cmp
bound
js
pop
inc
loopne
mov
insb
lahf
and
sbb
inc
std
sbb
popf
test
sub
orb
add
sarl
sbbb
adc
out
into
out
or
lcall
dec
adc
pop
into
in
push
or
mov
fmull
movsl
mov
pop
lcall
stc
dec
gs
cmc
loopne
incb
cmp
clc
xchg
lods
fadds
cld
sub
popf
or
and
pop
adc
or
push
les
dec
dec
sub
mov
subb
cmpsb
fmull
pop
pop
xchg
mov
rcl
notb
xor
push
arpl
xor
mov
and
lods
pop
inc
pop
push
mov
lahf
sub
cmp
stos
cmp
int
jg
shrb
or
xor
cmc
lock
inc
aam
cmpsb
jmp
ds
aad
adc
roll
ds
cmc
shlb
lret
pop
push
pop
icebp
and
or
mov
inc
andl
sti
xchg
enter
sbbl
sub
push
nop
test
pusha
ds
shll
ja,pn
decb
aam
dec
arpl
mov
sub
adc
dec
pop
jnp
je
jae
pop
sbb
iret
jo
out
xchg
int
cmp
popf
and
mov
faddl
cmp
nop
out
push
or
mov
lods
cmp
or
mov
stos
hlt
fimuls
iret
cmp
xchg
or
mov
jo
daa
daa
cli
or
movsl
jecxz
mov
jge
movsl
fs
inc
out
mul
ja
ds
mov
mov
sbb
into
sti
pop
jp
mov
test
pop
out
sub
adc
push
mov
fwait
inc
ret
sarb
aaa
in
dec
mov
jnp
call
mov
mov
ficomps
jo
mov
inc
repnz
dec
sbb
gs
enter
mov
xor
into
xlat
stc
scas
add
stos
jl
in
jecxz
sbb
ds
les
pop
inc
sub
jo
pop
aad
or
rolb
sbb
popa
fcompl
jbe
mov
test
push
dec
cmp
int3
repz
je
sub
fisubrs
lock
cs
push
mov
bnd
sub
popa
and
push
pop
loopne
in
rcll
pop
pop
pushf
fwait
inc
or
fstl
clc
rorl
out
sbb
push
pushf
stos
xchg
enter
div
fistl
push
jb
xor
jno
cmp
inc
mov
or
mov
leave
add
xor
push
outsb
ljmp
das
ja
lods
out
pushf
xchg
pop
sar
lea
imul
xchg
cltd
jge
pop
ljmp
jno
addr16
fstpl
xor
jne
movsb
ja
mov
shrb
lods
mov
clc
inc
pop
add
pop
daa
xor
aas
pop
xchg
adc
int
sub
jne
dec
pop
adc
out
xor
xchg
in
fisttpll
push
dec
test
push
pop
cmp
pushf
dec
jbe
lahf
adc
mov
inc
and
cmp
cltd
add
nop
mov
lcall
add
mov
out
or
and
arpl
sub
sbb
lds
in
out
cli
cld
dec
sbb
aam
cmp
adc
xchg
lock
rcll
sub
aam
mov
adc
jbe
push
loop
xor
fs
mov
iret
nop
cld
push
aam
jecxz
in
fistps
xlat
ret
mov
stc
adc
shrb
cli
arpl
mov
xchg
loopne
sbb
dec
shll
pushf
daa
jl
aas
int
cli
sbb
push
jp
stc
arpl
jbe
xor
outsl
aas
sbb
adc
xchg
and
xorb
wbinvd
mov
rcr
adc
incb
cs
insb
sbbl
cmp
not
ficompl
aaa
fs
and
sbb
pop
pop
stc
add
stos
ficoml
adc
in
call
mov
lods
and
lock
dec
icebp
bndstx
xor
out
cmpsl
shr
adc
sub
sub
mov
clc
push
mov
pushf
pusha
xor
aaa
dec
xchg
outsb
and
fistpll
sbb
out
outsl
adc
adc
xor
and
push
loope
mov
cltd
scas
lahf
dec
mov
lods
fs
lods
sahf
mov
icebp
push
xchg
scas
out
in
pop
push
dec
inc
imul
je
push
sti
mov
xchg
ret
mov
sbb
inc
rcr
push
xchg
cli
dec
stos
fdivrs
inc
sbb
je
adc
lds
xlat
mov
ret
popf
dec
xorb
sbb
inc
mov
xor
aad
fistl
loopne
inc
jg
in
push
adc
pushf
movb
ret
sbb
aaa
mov
leave
cmpsb
push
in
push
mov
hlt
mov
cld
add
push
int3
ss
mov
adc
fs
lods
push
inc
mov
push
notb
jae
sbb
dec
in
and
in
jmp
ja
loopne
rol
inc
mov
nop
push
lods
aas
mov
test
mov
ja
inc
adc
jecxz
inc
mov
xchg
nop
mov
jns
ja
mov
mov
shrb
sub
das
sbb
and
cwtl
sub
outsb
push
lods
in
ljmp
sub
push
dec
test
inc
mov
jb
hlt
cwtl
push
inc
lea
pusha
push
jl
and
pop
aad
pop
test
dec
xor
sub
ud1
ja
cs
repz
mov
pop
movsb
push
cli
sub
cmp
pusha
inc
or
jns
pusha
stc
mov
in
mov
jecxz
fsubl
fsubrs
sub
and
jg
dec
aad
popf
add
lea
pop
cmp
lods
or
pop
ret
push
adc
neg
inc
jno
fsubr
push
sti
das
fistl
push
loop
test
and
jmp
lahf
lret
mov
pop
jb
jle,pt
je
mov
jle
ret
test
inc
cwtl
xor
xchg
jmp
call
push
insl
scas
mov
mov
jno
fs
enter
dec
aas
popf
test
pop
inc
mov
jne
inc
inc
mov
xchg
and
mov
or
mov
cs
pop
sbb
lock
mov
add
adc
iret
xor
nop
inc
pop
push
jg
lods
jne
inc
jle
out
xor
aam
lock
aam
and
push
je
ljmp
xchg
sub
aam
mov
sbb
andb
jecxz
push
bound
notb
pop
pop
hlt
fdivrp
cmp
jmp
and
es
stos
inc
sbb
movsb
cmp
jns
lret
mov
scas
inc
aam
iret
fwait
jle
das
push
mov
mov
cmp
test
xor
jle
push
in
add
jl
aaa
pop
lds
pusha
xchg
int
xchg
fildll
test
jbe
mov
cltd
into
sub
fimuls
dec
aam
insb
sub
frstor
push
fdivs
pop
stc
mov
sub
shlb
dec
addr16
shlb
ret
in
addr16
xlat
pop
jno
cmp
xor
xchg
lret
add
cltd
xchg
daa
mov
ds
aam
push
sti
scas
xchg
out
xchg
add
push
push
pop
leave
xchg
fmull
fiaddl
pop
mov
add
or
or
pusha
into
rcrb
jns
imul
movsl
pop
in
into
lods
xlat
dec
movsl
imul
dec
or
sti
cwtl
mov
insb
mov
xchg
push
xchg
adc
popa
cmc
insl
call
cmc
ror
mov
cmc
add
mov
pop
add
in
je
iret
mov
stos
mov
call
mov
in
adcb
sub
call
xor
xchg
sub
sarb
xchg
addr16
sbb
mov
iret
dec
in
mov
fildll
ret
std
dec
push
sarb
mov
xchg
adc
mov
jno
pop
inc
mov
incb
sub
xor
pop
dec
pusha
dec
pop
in
aas
add
adc
jmp
loopne
sti
mov
mov
jecxz
pop
lods
test
das
cli
cwtl
incl
xchg
sub
mov
mov
inc
xor
mov
frstor
call
sub
repz
jecxz
pop
jae
pop
mull
into
inc
stos
test
adc
jmpw
mov
imul
mov
sbb
pop
sbb
adc
inc
fcompl
pop
fbld
and
mov
mov
adc
sbb
das
ret
imulb
adcb
bound
jecxz
push
test
push
mov
adc
dec
lds
loope
insb
test
nop
leave
lret
adc
out
or
push
fbld
adc
cltd
xchg
out
outsl
out
add
pusha
lea
xor
aad
xchg
arpl
sti
mov
rcl
je
clc
out
arpl
ja
fucomip
ret
jns
dec
sbb
aam
jnp
pop
adc
mov
push
stos
mov
mov
mov
and
cmc
imul
add
fdivrp
dec
sub
jg
in
insb
lods
cmovg
inc
mov
js
in
movsl
loopne
jge
xchg
fisubrl
ds
fstpt
addb
cmp
xlat
adc
pop
xchg
insl
syscall
xrelease
lods
pop
fwait
popf
xor
out
inc
fs
imul
call
mov
test
lret
mov
popf
lds
pop
mov
fistl
jno
insl
ds
jecxz
pop
arpl
dec
nop
aaa
push
insl
adc
xor
add
xchg
and
xchg
imul
fwait
sub
pop
seto
sbb
and
pop
pop
iret
stos
cmp
jnp
adc
leave
popf
repnz
jne
mov
pop
xorl
mov
and
push
cs
dec
leave
into
or
lcall
xor
cli
xchg
cmp
lahf
ja
negb
mov
stos
pop
mov
sub
hlt
push
fmul
add
negb
adc
ljmp
daa
and
sub
sub
mov
cmpsl
pop
mov
xchg
dec
fisttps
dec
push
sub
and
movb
and
test
or
mov
cmp
inc
das
xchg
push
xor
int3
lahf
int3
pusha
ja
add
and
push
xchg
push
push
adc
mov
and
imul
daa
inc
outsb
xchg
jnp
sub
xor
cmc
xlat
ror
mov
mov
lahf
sub
cmp
adc
loop
xchg
pop
imull
fbstp
gs
jle
rcr
mov
adc
inc
les
dec
and
aas
lea
mov
ret
sahf
add
xchg
cmpl
pop
std
push
jp
adc
je
sahf
sarb
lret
jg
fldt
mov
push
rcll
jnp
mov
jnp
std
clc
mov
inc
adc
and
lods
decb
dec
add
fwait
cli
xchg
into
and
jns
push
aad
hlt
outsb
cltd
or
test
add
sti
out
inc
fs
xlat
mov
jl
test
mov
push
cmp
addr16
jae
outsb
ret
sub
lahf
jmp
cmc
cli
dec
cmp
pop
lret
popf
jge
push
dec
icebp
sbb
sahf
mov
dec
pop
pushf
testl
rcll
push
jbe
or
insb
push
arpl
fldcw
sarl
jmp
fistl
stos
mov
cmp
test
rorl
mov
and
sub
mov
or
sub
mov
cli
test
movsl
popf
orb
pop
dec
sbb
and
push
jp
enter
insb
movsb
xchg
mov
out
mov
or
cmc
mov
pminub
push
xchg
movsl
mov
loop
sbb
imul
pusha
shlb
push
das
sbb
dec
add
mov
pop
bound
decb
rolb
xlat
xlat
pop
pushf
push
addr16
dec
adc
call
imul
jb
into
int3
notl
bswap
scas
outsb
test
gs
cmp
sarl
fldl2t
mov
mov
xlat
jb
jecxz
push
add
sub
aas
cs
add
push
jae
inc
or
stc
popf
add
jmp
sbb
aad
mov
xor
in
into
inc
sub
xor
xchg
or
adc
sub
add
push
jp
repnz
mov
mov
sbb
sub
mov
icebp
repnz
pusha
pop
adc
int
mov
push
pusha
imul
mov
inc
cmpl
push
or
xor
xor
mov
in
ljmp
stos
test
sbb
and
and
mov
insl
aaa
lcall
loopne
xchg
and
cld
mov
jg
xlat
and
push
addr16
xorb
shll
mov
stos
jns
hlt
dec
cltd
or
dec
inc
lods
daa
pop
push
fstl
xor
out
xor
outsl
popf
cli
out
sarb
mov
dec
lcall
xchg
and
fisubrs
pop
pop
mov
pop
shrb
in
arpl
cld
mov
stos
pop
rol
imul
xchg
std
jnp
and
repz
adc
stos
insl
and
and
jg
mov
jge
push
enter
xorb
fcoml
pop
xchg
mov
jno
hlt
add
adc
adc
mov
and
aam
xchg
shll
call
stos
pop
std
xor
loope
stc
lea
add
call
inc
mov
sbb
fldenv
ds
shll
jmp
sub
lret
sub
shlb
adc
cmp
adc
mov
xorb
xchg
sti
jp
les
mov
inc
or
xor
rorl
add
popa
jmp
int3
imull
adc
mov
std
add
cmc
mov
rcl
test
out
fs
inc
test
int
xchg
mov
pusha
or
ror
or
sub
add
outsl
sbb
fidivs
mov
or
adc
movsl
icebp
ss
push
xchg
push
pop
lea
xchg
push
int3
pop
sarl
outsb
fcom
mulb
push
or
sub
repz
movsl
jno
add
add
call
jg
fneni(8087
push
xchg
mov
jb
fwait
push
test
sbb
inc
inc
adcb
xchg
and
bound
subl
gs
out
std
jmp
add
addl
xchg
aas
jns
outsl
out
xor
mov
aaa
movsl
jmp
push
flds
xchg
popf
pop
xchg
daa
lods
loope
insb
mov
jle
repz
mov
and
push
out
adc
cltd
and
add
nop
mov
shlb
xor
ja
mov
inc
pop
sbb
inc
push
push
shr
sub
or
cltd
out
out
xchg
aas
stc
test
in
mov
out
leave
pop
cmpsl
cmpsl
or
jge
cmp
pextrw
sbb
xor
mov
jno
mov
add
add
into
cmp
pop
je
mov
cmp
dec
add
pop
sub
mov
cmp
and
lock
mov
push
jge
jecxz
mov
push
lea
and
sub
mov
mov
cmp
cs
jno
paddsb
mov
insb
jno
shrb
loopne
out
inc
push
repnz
push
leave
inc
inc
mov
mov
subb
jp
mov
pop
das
jae
mov
xchg
push
dec
push
push
jno
shl
mov
xor
mov
int3
push
cmp
insl
out
imul
cmc
cltd
jnp
pop
nop
jl
je
scas
mov
into
pop
and
adc
xchg
push
jp
push
cltd
lcall
mov
cmpsl
pop
sbb
mov
sub
ret
cmp
cmp
mov
dec
out
dec
lahf
sbb
jbe
mov
jmp
cltd
or
mov
addr16
add
jmp
daa
shll
mov
rcll
jae
outsl
xor
add
push
dec
xchg
dec
pop
int3
arpl
mov
mov
gs
cwtl
adc
cmc
and
sbb
pop
aam
and
loop
les
push
cmp
leave
mov
icebp
mov
pop
cld
push
xlat
popl
mov
dec
js
mov
scas
aaa
jo
subb
aad
daa
lds
pop
jmp
cmc
stc
xchg
xor
jo
mov
ret
push
cmp
sbb
adc
repnz
sub
push
mov
out
inc
and
test
das
popa
and
jl
add
cmp
fisubrs
insb
scas
imul
xchg
xchg
in
xchg
push
cmp
xchg
mov
inc
ficompl
outsl
outsb
pop
std
mov
push
int3
mov
mov
das
mov
push
ret
pop
in
jbe,pn
pop
insl
mov
test
mov
cmp
adc
and
dec
lea
sahf
and
shrb
int3
filds
ret
jmp
loopne
mov
cmp
mov
adc
daa
mov
inc
jne
jb
lea
bound
fcoms
sbbl
test
mov
scas
pop
jl
dec
and
xchg
ja
dec
jecxz
imul
rcrb
jg
roll
or
and
cwtl
pop
add
cli
mov
sub
adc
xor
pop
xchg
movsb
jno
insb
sbb
xor
mov
cmp
sarl
push
jg
leave
add
mov
and
pop
stos
jle
mov
xchg
push
or
or
int
or
mov
or
lret
cs
push
mov
jp
xchg
jl
cmp
xor
or
mov
sti
arpl
mov
lods
clc
xchg
cmp
daa
mov
pusha
adc
test
pusha
in
mov
push
mov
fisubrs
xor
pop
sub
push
mov
outsb
xchg
movb
dec
jne
xchg
mov
dec
push
fbld
xchg
iret
sahf
xchg
ljmp
ret
hlt
les
mov
fwait
sbb
das
push
mov
iret
mull
fbstp
sub
xor
data16
mov
das
ret
dec
lea
out
mov
fidivs
or
add
lret
jmp
add
push
rcll
xchg
repnz
push
int
push
sub
insb
push
pop
sbb
and
rorb
lock
lods
dec
hlt
stc
pop
pop
imul
into
cmp
jo
sti
popf
rcrl
stc
mov
xchg
jb
mov
mov
mov
mov
into
out
sub
int
pushf
adc
pushf
xchg
sub
push
pop
bound
xor
jb
mov
push
pushf
imul
test
lods
xchg
in
mov
jns
fimull
dec
ret
inc
loop
and
xor
imul
mov
fdivrs
scas
cmc
inc
lods
sbb
repz
sub
movzwl
sub
xor
xor
js
inc
in
mov
fildll
shll
or
pop
popa
jge
lods
mov
clc
in
idiv
pushf
arpl
mov
aad
xorl
icebp
pop
sub
push
addr16
ja
jae
inc
pop
push
mov
jne
jns
xor
stos
sbb
jmp
icebp
push
and
jmp
mov
pop
cltd
repnz
div
and
pop
loope
aam
adc
adc
dec
addr16
aaa
inc
or
or
js
cld
outsb
ret
inc
aaa
rclb
cmpsl
sub
or
dec
fistps
cmpsl
test
enter
pop
inc
adc
push
sbb
gs
jle
stos
out
bound
pop
xor
idiv
or
jecxz
xorl
test
jecxz
sub
insl
arpl
cmpsl
dec
lock
pusha
sti
enter
jecxz
sbbb
ljmp
insb
push
mov
dec
loopne
pop
pop
inc
lea
lock
sbb
jmp
sub
sbb
sbb
in
js
aas
mov
ja
ljmp
pop
adc
mov
test
push
lds
lods
fistpll
iret
imul
nop
push
mov
and
sbb
dec
xchg
push
lea
push
push
add
dec
sbb
int3
rcl
repnz
adc
jae
sub
mov
xor
mov
jb
dec
cmp
push
enter
ja
mov
in
jo
stos
mov
testl
adc
movsl
cmpsb
aaa
xchg
xlat
inc
dec
add
jge
sbb
add
mov
mov
cmp
out
mov
dec
add
mov
dec
jnp
xchg
fimuls
bound
add
dec
xchg
stos
hlt
dec
or
mov
dec
and
test
dec
lds
cwtl
mov
nop
jmp
pop
push
jnp
lock
lds
sub
or
ss
adc
mov
jno
andb
mov
lret
sbb
lret
mov
je
inc
and
adc
lret
jecxz
jo
fcmovne
scas
mov
popf
bnd
jmp
movsb
push
enter
push
shll
xchg
lds
mov
add
daa
or
lea
dec
jg
mov
int3
fildl
and
mov
mov
adc
dec
shrl
stc
sub
iret
mov
adc
and
movb
btcl
pop
pop
mov
fs
mov
or
xor
jno
cmp
jp
pop
in
xorl
xchg
dec
aaa
inc
sbb
movsl
imul
clc
cmpsb
add
insl
sbb
pushf
sub
lret
push
dec
xchg
negl
inc
xchg
cwtl
sub
push
push
sbb
jecxz
in
out
testl
jg
mov
clc
xchg
lock
in
loopne
adc
inc
addl
mov
push
mov
add
mov
iret
inc
sub
mov
ja
call
or
lods
out
roll
in
stos
inc
jecxz
pop
cld
mov
scas
and
mov
xchg
jbe
pushf
clc
rorb
aam
push
addr16
xchg
decb
dec
dec
imul
dec
inc
xchg
js
fstps
scas
addr16
mov
je
fidivl
inc
je
mov
xor
data16
scas
xchg
or
fldt
and
sub
push
test
jo
outsb
dec
and
nop
cmc
pusha
jae
icebp
outsb
into
push
adc
inc
aaa
or
mov
hlt
push
pusha
mov
pop
sti
dec
push
shlb
mov
cltd
xor
cmp
hlt
cmp
mov
inc
daa
xor
add
lret
lds
dec
enter
push
cmp
ss
sub
mov
data16
lods
mov
push
sub
xorl
inc
adc
xchg
xor
inc
xchg
aaa
dec
call
insb
hlt
adc
mov
repz
sub
hlt
outsl
mov
jo
lods
aas
scas
sti
and
mov
lahf
cmp
pop
push
cwtl
push
inc
dec
ret
lret
repz
dec
in
mov
bound
out
xchg
or
cmp
data16
rorl
mov
int3
or
mov
std
push
mov
push
mov
and
cmp
jg
inc
pop
jb
inc
cld
ds
mov
out
call
test
lret
inc
sbb
push
loop
jle
popf
aas
push
jno
jl
gs
in
enter
or
or
cmpsl
nop
pushf
outsb
add
sub
pop
pop
push
jo
mul
xor
push
adc
mov
in
movsb
cmp
es
lcall
add
call
sub
adc
rorl
loop
das
and
loop
xchg
adc
bound
aaa
dec
inc
push
xchg
sbb
test
adc
roll
and
mov
and
iret
icebp
push
jle
xor
xchg
shll
dec
repz
inc
dec
inc
pop
or
jmp
faddp
jmp
insl
stos
xchg
fistpl
and
fidivrs
jmp
sarl
adc
subl
pushf
leave
mov
cld
or
add
adc
adc
inc
jae
test
or
fs
mov
ds
ss
aad
push
mov
std
jnp
js
and
int
rorb
push
adc
nop
jge
dec
xchg
lret
sbb
aaa
fwait
jns
mov
movsl
mov
repz
int3
push
shrb
mov
test
popa
icebp
lods
ss
daa
lds
push
cmpb
jbe
scas
lods
ljmp
mov
dec
fists
jbe
inc
sub
xchg
shll
cli
and
icebp
pusha
sti
pop
mov
pop
gs
cli
or
or
mov
xchg
xchg
push
repz
lods
into
jp
loop
sub
lcall
mov
cmp
xchg
add
fcmovnu
leave
pop
mov
mov
imul
cwtl
insb
in
lock
jae
adc
testb
mov
ljmp
mov
ja
in
mov
dec
out
out
dec
adcl
lret
mov
dec
pop
fisubrl
cmpsb
mov
pop
cld
mov
mov
adc
mov
data16
dec
lea
lea
mov
add
cwtl
cltd
dec
push
push
insb
cmp
test
xor
rolb
xchg
rcll
addr16
aam
xchg
aad
xor
cmpsl
mov
mov
test
add
sub
mov
pushf
popa
jle
push
frstor
xchg
inc
inc
pusha
jg
cmp
adc
jge
mov
push
cmc
cmc
pop
dec
popa
cs
pop
and
cmpsl
mov
adc
inc
in
pop
adc
cmp
add
scas
daa
adc
adc
mov
add
int
lea
xor
jl
inc
loope
or
xor
mov
clc
push
xlat
aas
out
dec
jbe
lcall
ss
ljmp
ss
addr16
xchg
insb
lret
lret
adc
inc
dec
icebp
pop
dec
and
inc
scas
scas
mov
jmp
leave
jl
adc
fidivl
pop
orl
lahf
inc
popf
pop
push
insl
jecxz
and
mov
inc
mov
movsl
mov
jns
add
cmp
sbb
daa
ljmp
into
cmp
in
sub
subl
aad
loopne
xchg
in
inc
jmp
push
pop
adcl
inc
cmpsb
xchg
xchg
mov
aam
and
push
sub
imul
lea
sbb
int3
outsb
mov
jne
rcrl
fsubs
mov
aam
adc
jecxz
mov
neg
incb
mov
gs
cmpsb
jmp
push
mov
mov
in
mov
add
mov
dec
dec
push
mov
js
and
stos
jmp
cld
js
push
out
jbe
in
add
ss
faddl
adc
cmpsl
into
jae
push
vpunpcklwd
fnstcw
cmp
imul
repnz
mov
iret
xor
ret
dec
addr16
and
xchg
mov
fidivl
shlb
adc
adc
or
pop
inc
push
mov
inc
pop
xchg
cmpsl
xchg
cmp
push
outsb
push
and
xchg
adc
popf
out
cvtdq2ps
outsb
mov
xor
leave
adc
lahf
jg
mov
aam
in
test
mov
jge
push
xchg
sti
adc
or
and
xchg
inc
int
shlb
and
mov
mov
mov
lahf
jg
cmp
mov
jno
and
ss
sub
pop
sbb
add
ss
pop
rcl
or
fdivl
mov
sub
pop
arpl
xlat
pop
out
jge
pop
arpl
jnp
mov
test
popa
mov
pop
fs
pop
movups
xor
mov
and
and
pop
sub
xor
cmpsb
dec
cld
mov
imul
mov
xor
mov
loopne
xlat
es
movl
pop
xchg
es
arpl
or
mov
xor
mov
call
or
sti
lret
inc
loopne
xor
jno
inc
sbb
cmp
pop
sub
gs
repz
into
jmp
mov
aam
in
pop
fildl
pushf
cmpsb
cltd
dec
ljmp
imul
jne
sub
outsl
dec
cmc
jg
lds
out
aam
pop
mov
scas
insb
inc
es
inc
mov
test
and
adc
sbbb
cmc
fstps
xchg
sub
cmovge
js
mov
jmp
mov
sarl
daa
xlat
enter
push
push
lret
ds
mov
lahf
fmuls
xor
adc
ljmp
lods
jae
jns
and
ss
es
stos
and
sarl
mov
pop
xchg
scas
pushf
sbb
or
pushl
loope
jl
das
insl
sub
sbb
dec
and
andb
cmp
js
push
inc
dec
or
in
call
lock
aam
stc
sub
fisttpll
shlb
ret
sbb
inc
dec
jp
push
int3
insb
lcall
aad
mov
fistl
cltd
shll
nop
xchg
sbb
jge
push
jg
cmpsb
in
jo
inc
cmp
jae
je
push
inc
jp
and
int3
inc
push
imul
and
ret
pop
pusha
push
sbb
fwait
and
jns
scas
lret
fisttps
fildll
int
add
pushf
out
aad
test
jmp
push
cs
jo
fidivrl
xchg
mov
sbb
aaa
movsl
and
push
push
xchg
nop
jno
lock
cmp
inc
aam
loope
jnp
fwait
push
sbb
jmp
and
shlb
popa
into
iret
clc
ret
and
xor
jg
bound
and
enter
mov
lods
and
jae
mov
add
in
outsl
sbb
inc
enter
daa
push
dec
adc
pop
int
int
sbb
ret
dec
nop
mov
pop
clc
fsubs
lock
pop
mov
or
and
inc
scas
out
inc
imul
push
aad
push
and
inc
xchg
enter
cmp
mov
outsb
sbb
dec
inc
cmp
xor
xchg
and
sbb
push
and
push
push
notl
jno
lret
sbb
fs
jne
and
push
insb
in
mov
js
shrl
sbb
das
sbb
or
inc
mov
mov
lods
aam
and
shrl
push
and
or
stc
bound
xchg
xor
sahf
xlat
ficompl
sub
xor
adc
mov
xchg
sahf
cld
and
arpl
loop
daa
fs
adc
lahf
push
xchg
jns
lret
ret
mov
std
mov
dec
loope
call
mov
movl
mov
imul
stos
js
jecxz
in
stc
ja
clc
ljmp
arpl
pop
mov
mov
or
outsb
testb
pop
pop
and
mov
sub
scas
push
add
pop
inc
push
jecxz
lods
inc
js
std
shlb
mov
pop
in
jmp
and
push
mov
outsb
pop
stos
and
adc
jmp
push
clc
cmp
sub
jp
out
mov
enter
and
rorw
xchg
mov
mov
movb
sbb
out
mov
jns
ljmp
push
mov
jg
jmp
pusha
loop
shll
jmp
or
pop
stos
fs
in
neg
xchg
pop
add
dec
jmp
dec
fwait
pushf
leave
ljmp
out
mov
jo
xchg
out
mov
xor
mov
lahf
sbb
addl
jno
lret
loop
mov
stc
sbb
js
fwait
lea
fiadds
outsl
sub
in
orl
pop
mov
imul
or
xchg
push
mov
repz
cld
or
jae
mov
add
xchg
lret
mov
or
adc
mov
cmp
xlat
mov
out
imul
jecxz
scas
ja
xchg
jge
lea
push
nop
sub
stc
loope
jo
push
cmp
ljmp
push
inc
sbb
pop
mov
sub
repnz
imul
xchg
int3
pop
fists
and
push
mov
mov
pushf
into
bnd
iret
mov
sbb
mov
rorb
jmp
xchg
xor
idiv
pop
add
mov
movsb
dec
add
pop
push
xchg
adc
fstps
mov
push
cmp
and
push
push
mov
mov
movsb
popf
mov
aam
cmpb
aam
xchg
pop
pop
js
add
push
int3
mov
xlat
hlt
ds
dec
or
stos
cmpsb
outsl
mov
mov
mov
lods
fcompl
testb
cmp
shl
sub
jecxz
outsb
jmp
int3
mov
scas
and
popf
mov
jmp
pop
addl
pop
add
stos
rorl
mov
in
cmp
mov
cmp
and
stos
mov
cld
sbb
sti
and
pusha
movsl
cmc
loope
push
shr
das
pop
js
xlat
ffreep
pushf
ss
pop
mov
fs
ja
pop
sub
mov
mov
sbb
dec
jne
aam
cmc
mov
out
jbe
add
ljmp
mov
stos
mov
jle
popa
iret
lods
xor
xchg
mov
adc
cmp
jns
gs
mov
pop
out
sub
out
mov
insb
jl
mov
into
mov
xor
push
dec
mov
mov
dec
ret
cmpb
subb
jnp
pop
test
jnp
sbb
mov
jge
cmp
xor
cmp
icebp
cmp
aam
sbb
and
in
push
stc
dec
or
push
dec
dec
cld
lods
pusha
cli
test
add
pusha
outsl
nop
dec
add
outsl
pop
push
test
ja
inc
mov
hlt
pcmpeqd
inc
pop
jmp
pushf
pop
jp
jb
lret
xchg
cmp
cli
stos
jns
xor
xchg
push
xor
repnz
in
loope
int
cld
or
cmpsl
daa
iret
daa
dec
cmp
ja
test
mov
mov
dec
push
cmc
sahf
add
in
ret
loopne
rorb
stos
lahf
insb
outsl
repz
push
xor
add
test
push
bound
sub
cmp
cmpsb
lea
test
outsb
xchg
mov
loope
sbb
das
dec
or
xchg
test
aas
arpl
faddp
ljmp
in
movsl
inc
sub
sub
and
mov
and
jae
or
dec
stos
cli
imull
inc
push
jp
jns
cmpl
sub
cltd
add
inc
sub
les
popa
dec
dec
xor
adc
in
push
push
jge
or
dec
shr
cld
jl
repz
mov
sub
pushf
movsb
jns
sub
xchg
je
lcall
into
es
mov
leave
dec
scas
cwtl
adc
ja
cmp
flds
sti
push
cmp
dec
pop
inc
xchg
fdiv
cwtl
or
xor
stos
cmpsb
stos
testl
outsb
mov
and
xchg
stos
mov
dec
movsb
xor
and
outsb
je
cli
inc
mov
push
test
sub
or
pusha
lcall
sti
nop
sbb
sarb
cmp
ret
je
jae
arpl
xchg
cmp
dec
push
imulw
loop
dec
add
mov
cmp
sub
pop
or
dec
add
cli
push
repnz
xlat
je
or
data16
pop
ds
jns
pop
jo
push
mov
lods
mov
pop
jnp
sti
pop
repz
add
call
repnz
popaw
mov
rcrl
pop
out
sub
cmpsb
push
shll
lds
shll
stc
leave
popa
popa
not
les
je
mov
cmp
mov
add
mov
mov
outsb
adc
sahf
sub
mov
cmp
xchg
lods
add
dec
stos
iretw
loop
push
stos
jbe
jnp
sbb
push
cltd
and
fnsave
push
jo
or
scas
adc
jae
add
fimuls
sub
out
jp
and
loopne
sub
ficoml
daa
shrb
lds
mov
xchg
cmp
into
fisubrl
mov
hlt
mov
cmp
aaa
repz
lods
lea
in
cmp
dec
repz
clc
or
and
pop
das
ja
mov
data16
pop
int3
arpl
mov
mov
mov
stc
xchg
or
es
stc
add
imul
pushf
inc
cwtl
call
out
xor
fwait
jnp
std
lods
sbb
sbb
dec
adc
fnsave
mov
lcall
xchg
rorb
testl
lcall
pusha
mov
push
divb
pop
xchg
or
cmp
mov
pop
lret
icebp
xchg
mov
add
sti
cmpl
jg
js
js
push
mov
xchg
xor
es
fs
ror
lock
popf
arpl
cltd
mov
push
sbb
call
sbb
stos
fisubs
jns
adc
adc
ret
add
bound
jl
out
lock
ja
xchg
push
push
dec
sbb
rol
lock
sub
fisubl
iret
clc
mov
insl
jne
mov
test
or
jb
loopne
mov
sbb
mov
push
mov
dec
and
popf
daa
shl
aaa
out
mov
iret
jbe
pop
and
xor
hlt
in
cmpl
test
mov
pop
push
test
test
icebp
enter
lret
jge
xchg
ja
sbb
rcl
popf
test
mov
dec
loope
movsl
in
push
add
aad
cmp
sub
pop
xor
sub
fdivrs
sbb
cld
out
xchg
fcmovu
lret
pop
pop
inc
xor
ficoml
mov
out
sub
cltd
les
inc
bnd
mov
or
xor
je
ljmp
popa
mov
add
stc
sbb
mov
jp
mov
ret
or
pop
mov
and
cli
jle
jne
lock
insl
inc
addb
dec
pop
inc
pusha
pop
and
xchg
addr16
xchg
iret
dec
repnz
xchg
pop
aad
pop
xchg
sbb
xorl
xor
fstl
imul
pusha
cwtl
mov
mov
xlat
ret
dec
push
frstor
adc
pop
sub
and
imul
sub
test
lods
xchg
jbe
int3
add
rcl
sub
cmp
xor
scas
outsb
pop
js
xchg
cmp
int
das
ljmp
movsb
mov
js
and
aaa
push
inc
sbb
es
pop
iret
scas
mov
aam
push
xor
aad
lds
out
sub
cmp
or
popf
lahf
dec
lock
sub
pusha
lods
pop
xor
out
cmp
out
das
dec
cltd
das
scas
pop
xchg
inc
mov
fildll
lret
vmread
das
xchg
pop
push
jge
push
pop
mov
jno
mov
xlat
jl
cmp
push
mov
xchg
mov
pop
cmp
cmp
xor
je
cmp
adc
dec
ljmp
imul
inc
sbb
fwait
sub
sbb
xor
jnp
dec
je
fiaddl
lods
fwait
adc
rcrl
fwait
sub
or
shr
cli
adc
push
jge
outsb
mov
jge
pop
adc
xchg
sub
popa
je
lock
lods
inc
sti
outsl
or
out
iret
pop
sbb
js
xlat
dec
mov
or
jp
and
xchg
cli
mov
mov
out
subl
push
and
jmp
xor
add
sti
stc
xchg
adc
add
jne
insl
insb
or
insb
repz
mov
insl
out
leave
jne
mov
sbb
or
dec
push
std
xor
and
jno
stc
ss
pop
jbe
xor
cwtl
ret
lcall
scas
adc
aas
out
pushf
xor
jno
mov
out
ja
stos
stos
clc
ja
xchg
inc
ret
das
xchg
lcall
or
popa
dec
mov
aam
push
pop
pop
imull
stc
fs
out
inc
push
dec
sarl
mov
and
jge
inc
mov
imul
mov
out
pop
lock
les
xorl
fstps
and
fists
into
fimull
add
and
loopne
scas
scas
mov
shll
push
mov
dec
or
lds
mov
inc
insl
inc
pop
cmp
fcompl
xchg
xlat
adc
xor
out
ds
cmp
and
pop
ljmp
xor
mov
jg
push
mov
or
sub
cltd
into
mov
insb
je
xchg
push
jbe
addr16
xor
adc
add
es
sbb
mov
push
mov
vfnmsub231ps
lret
sbb
inc
push
or
jg
add
dec
rolb
test
xor
leave
aam
sbb
ja
lea
push
mov
or
cld
ffree
pop
lret
repz
adc
out
sub
testl
fidivs
pop
add
mov
stos
jno
dec
cld
in
push
adc
test
clc
or
pop
inc
testl
mov
jne
clc
add
movsl
mov
enter
sub
aaa
iret
cs
jle
out
cmpsb
xor
popa
xchg
repz
mov
add
pop
shlb
mov
sti
push
sub
adc
sbb
insl
fisttpl
in
out
and
mov
add
out
jo
adc
fadd
ret
lcall
xor
repnz
add
xchg
mov
push
popa
inc
jg
xlat
rcrl
es
xchg
dec
dec
sub
loope
je
jp
jo
cli
adc
insl
push
mov
mov
add
fisttps
or
inc
and
push
pop
cmp
and
add
or
adc
loop
sbb
iret
flds
dec
jg
inc
xchg
sarb
dec
adc
js
dec
cli
dec
dec
pop
cmpsb
negl
jge
push
lret
divb
jl
ror
pop
cmp
jns
push
mov
call
test
loope
or
repnz
cmp
cmp
loopne
or
in
or
daa
stc
sbb
mov
andl
gs
cwtl
sbb
jp
mov
and
adc
lds
scas
fwait
push
mov
hlt
enter
xorb
adc
lcall
cltd
push
push
mov
out
mov
jp
push
cmp
inc
pop
sub
aam
les
push
jnp
imul
iret
inc
add
lea
fwait
rcl
xchg
stc
pop
xchg
aaa
cwtl
sbb
cli
mov
or
stos
pop
pop
dec
adc
xor
push
dec
cmp
int3
daa
cmpsl
aad
sub
aas
mov
xlat
xor
xlat
adc
add
cmp
push
xchg
adc
mov
mov
dec
mov
repnz
sub
pop
xlat
movsl
sub
out
push
mov
adc
cmp
mov
pop
push
daa
sbb
fnstsw
mov
or
subl
dec
enter
stos
out
into
inc
dec
clc
dec
aam
int3
int3
testb
movsl
cmp
mov
data16
rclb
outsl
rclb
cmp
leave
xchg
sbb
xchg
pop
jnp
out
mov
repnz
mov
sub
push
inc
sub
mov
sbb
jnp
pop
scas
lock
inc
jbe
loop
sahf
popf
push
sub
xor
xor
push
mov
mov
in
pushf
sub
push
fsubs
mov
test
sahf
inc
push
int3
mov
stc
cmp
sub
mov
inc
jne
das
jg
mov
aaa
mov
scas
outsl
cmpsb
jg
push
xor
out
mov
out
or
sti
jnp
mov
cmp
jnp
push
xor
cmc
push
mov
leave
push
dec
adc
jmp
fdivrl
mov
mov
mov
and
adc
jge
xor
inc
add
cltd
loop
cli
aad
idivl
sub
mov
add
rclb
or
faddp
mov
mov
push
xor
in
test
xor
pop
fimull
dec
push
jno
lds
ds
add
popa
xchg
xchg
ss
jnp
jg
mov
xor
mov
or
sbb
push
xchg
sub
mov
xchg
stos
bound
stos
xor
fmulp
into
mov
je
fisubs
movsl
fisubrs
dec
jecxz
xchg
movsb
mov
mov
inc
stc
mov
imulb
add
jb
sub
mov
call
mov
into
hlt
dec
xchg
mov
jnp
mulb
subb
icebp
push
dec
aaa
pop
rcrb
sub
ret
fiaddl
ficoml
jae
hlt
sti
or
into
sbb
int3
push
int
ror
and
ficoms
cld
pop
xchg
add
pop
ret
in
mov
push
sub
hlt
nop
jp
sub
push
mov
inc
insl
arpl
ret
clc
jp
lea
pushf
and
out
out
fists
push
subl
lcall
or
test
xchg
das
mov
lea
faddl
cli
jns
adc
pop
jnp
int3
call
ljmp
popa
pushf
ljmp
sbb
sub
push
xchg
jbe
out
cld
imul
stos
ds
pushf
roll
insl
ds
jnp
xlat
pshufw
stos
bound
mov
push
movsl
xor
mov
mov
outsb
in
ss
mov
imul
xchg
cwtl
hlt
cltd
add
js
dec
scas
aad
leave
dec
inc
cmp
popa
loopne
icebp
cmpsb
sub
imul
mov
outsl
mov
pop
jmp
incb
inc
outsl
adc
jno
push
es
out
int
xlat
icebp
cli
std
or
or
call
bound
lret
fs
js
aad
xor
es
mov
fcomps
int3
sub
sbb
lods
rcll
sub
jecxz
add
bound
adc
stos
and
dec
gs
or
cmpsb
pop
pop
aam
pop
sbb
pop
jecxz
aad
push
xchg
dec
push
inc
or
add
push
sbb
and
ret
fcom
adc
sub
fcompl
cmp
cmp
cmp
cmp
lods
cmp
pop
std
dec
hlt
movsl
leave
fstp
inc
into
popa
lret
inc
notl
jae
out
xchg
lods
add
aaa
mov
mov
loopne
push
push
jae
mov
inc
movsb
add
sub
addl
sub
jnp
clc
jne
pusha
jle
ja
jmp
xor
add
and
push
dec
push
clc
rol
mov
int3
and
popa
ja
xchg
push
outsl
jb
ss
out
and
adc
push
pop
xor
inc
stos
lock
pop
xor
shlb
mov
push
xchg
pop
in
cmp
add
scas
jg
popa
stos
jnp
mov
dec
jbe
into
pop
imul
ja
movsl
aad
mov
lahf
out
sti
inc
fidivrs
lods
xor
cmp
pop
cmp
adc
dec
outsb
jl
mov
inc
ficomps
xchg
cmp
movsl
cltd
fldt
mov
out
jo
fs
aad
sbb
mov
pop
sub
call
jle
cmp
pop
sbb
fdivs
das
daa
leave
add
mov
fstp
jb
das
xchg
jmp
repz
cmp
push
mov
mov
lock
jge
out
subb
sarl
pop
test
in
mov
movsb
call
scas
push
dec
pop
ret
cmpsl
leave
fmuls
lret
or
mov
jno
mov
xor
jle
mov
adc
loop,pn
jb
cwtl
dec
outsb
inc
ret
in
in
mov
jae
ss
mov
loopne
andl
and
xchg
push
cmp
jb
dec
dec
stos
in
in
or
and
cmp
jns
rcr
ss
mov
pop
in
ret
int
flds
or
gs
sub
mov
pop
mov
cld
mov
and
in
aaa
out
int
ret
cltd
add
mov
add
xchg
imul
xchg
mov
mov
xlat
adc
xchg
adc
mov
lds
mov
jb
movsb
jmp
add
fcompl
les
mov
xchg
cmp
insb
test
repz
dec
mov
sbb
fs
gs
or
mov
or
push
test
jae
adc
dec
push
ljmp
bound
xchg
cmp
pop
shrl
imul
aad
fldenv
mov
ja
push
inc
inc
xchg
and
insl
cwtl
mov
call
sub
jae
add
cmp
xchg
addl
xor
stc
pop
inc
jne
sub
enterw
lahf
cmp
in
lahf
adc
daa
jecxz
adc
xchg
aad
xchg
fwait
lods
repz
mov
xchg
xchg
and
int
stos
and
dec
test
pop
cmp
inc
pop
and
xlat
mov
jl
aad
mov
imul
lret
stos
add
pop
push
push
pop
jecxz
insl
sbb
dec
lret
fwait
add
lock
inc
cmp
aas
mov
daa
push
and
jns
int
pop
enter
xchg
jmp
mov
push
xor
das
mov
aas
or
xchg
aaa
inc
adc
cmp
push
sub
xchg
or
push
aaa
and
addr16
aam
inc
mov
cmpsb
sub
or
test
fs
call
add
adc
stc
mov
insb
adc
scas
cwtl
cmpsl
pop
inc
scas
dec
daa
mov
mov
dec
fwait
inc
cmpsl
lea
sbb
mov
test
jbe
mov
ljmp
push
std
mov
sub
fiaddl
cmp
insb
cmp
xlat
xchg
xor
fistpl
inc
xor
inc
xchg
negb
cmpl
lock
lock
mov
mov
jmp
cmp
jp
mov
mov
fbstp
or
jp
xchg
add
mov
jnp
adc
ljmp
xchg
lods
cwtl
sub
test
lods
je
mov
in
into
push
xchg
adc
out
or
mov
jb
daa
es
push
mov
xor
pop
mov
or
test
sub
in
inc
dec
sub
lock
daa
adc
pop
push
jb
jnp
es
lret
call
xchg
sahf
addr16
pop
push
cli
clc
pop
xor
jno
test
fistpll
mov
cmp
andb
mov
fildll
and
inc
lea
in
hlt
sub
popa
add
pop
outsb
lcall
fldl
hlt
fcompl
sbb
and
adc
add
popa
xchg
cmovs
test
sbb
fcomps
test
add
stc
xchg
stos
loop
stos
in
mov
and
add
and
cwtl
cmpsb
xchg
cmc
add
cmp
jle
test
test
sbb
and
fildl
inc
cmc
cmc
popa
fstps
sbb
and
in
jne
mov
inc
adc
test
dec
ja
push
stos
lahf
std
mov
aam
iret
push
aas
dec
pusha
cmpsl
inc
pop
faddp
mov
daa
ffreep
pop
add
push
adc
xchg
int
cmpsb
sbb
cmpsl
insb
enter
fs
mov
cmp
xor
js
lods
push
mov
insl
aam
sbb
adc
inc
push
imul
add
pop
jo
jmp
jae
push
shrb
test
subb
roll
fimuls
or
pop
rolw
jmp
sub
nop
iretw
jb
mov
mov
iret
mov
jno
cld
pop
imul
sub
inc
sub
je
xchg
mov
movsb
mov
imul
xor
xlat
add
aaa
into
out
fdivl
cmp
bound
dec
pop
loopne
stos
xchg
xchg
push
lcall
xorb
mov
and
pop
sub
push
out
stc
ret
pop
xor
aam
negl
adc
add
stc
cmp
or
mov
lret
jp
pop
and
jnp
push
out
push
movsl
or
fs
push
mov
push
inc
inc
xchg
sub
mov
loopne,pn
lock
sub
cmpsb
jg
ss
jmp
je
push
les
clc
sbb
sub
xchg
stc
ret
jne
ret
repz
dec
xchg
pop
jmp
hlt
pusha
lcall
mov
add
in
push
ret
pop
jg
lcall
push
adc
jmp
rolb
inc
push
cmp
into
cmpsl
push
sub
mov
enter
stc
push
int3
inc
pushf
pop
sbb
cmp
je
xchg
inc
gs
sub
lods
sbb
jp
cmc
ds
icebp
scas
push
xchg
dec
xchg
jns
sbb
out
adcl
aaa
pop
push
rcr
mov
mov
cmpsl
pop
xchg
jns
mov
shrl
cmp
xchg
xor
lods
cmpsb
in
cmpsl
xchg
outsl
int
and
push
xchg
and
pop
gs
mov
arpl
gs
or
mov
add
jecxz
xchg
das
jecxz
sub
fcomps
xchg
enter
in
cltd
xor
fstps
dec
test
lds
jo
test
xor
mov
popf
mov
ss
inc
cmc
cmpsb
push
push
pop
into
popl
mov
cmpl
xchg
sub
xchg
lret
bound
sub
mov
mov
sbb
cs
das
call
mov
mov
sti
mov
es
stos
test
fsts
lahf
pop
inc
mov
push
fcmove
pushf
iret
sub
inc
mov
rclb
int3
or
pop
jnp
cld
mov
sub
and
test
pop
sub
xchg
dec
pop
cmc
js
push
or
adc
adc
jmp
orl
jmp
cmp
xor
adc
leave
push
in
push
dec
inc
pop
mov
xor
jle
cmp
bound
pop
xor
rcrb
inc
add
inc
jns
push
push
in
xor
mov
inc
test
jns
lock
push
add
test
xor
aam
out
lea
add
and
mov
es
clc
stc
push
shll
fidivrs
mov
xor
jmp
cmc
xlat
loop
lahf
mov
jecxz
insb
xchg
fistpl
shll
fwait
xor
in
test
jge
call
pop
dec
cmpsb
movsl
push
pop
sub
sahf
mov
adc
xchg
push
fdiv
mov
mov
push
push
xchg
sub
jle
data16
jp
fistpll
and
push
sub
mov
iret
sbb
and
inc
loope
push
ds
movsl
push
rcrb
lock
mov
mov
adc
jo
xchg
cmc
lock
pop
xor
les
aad
mov
mov
sbb
lcall
inc
cltd
and
sub
xchg
jl
push
fs
loop
or
mov
adc
xlat
ja
and
es
sub
aas
pop
cwtl
movb
test
lds
fwait
mov
mov
stc
insb
xor
xchg
and
adc
xor
pop
push
cmpsb
rolb
mov
call
dec
lret
ljmp
int
sbb
inc
out
and
rclb
popa
xlat
call
pop
mov
and
int
mov
cwtl
loop
xor
sbb
sbbl
xor
jle
mov
cltd
dec
shll
imull
mov
aas
iret
pop
jge
jne
jg
je
and
pop
add
add
xchg
cmp
fs
cmc
fs
cmp
mov
adc
aam
ja
push
mov
leave
test
and
adc
add
jne
call
sbb
sub
loope
push
mov
mov
subl
jp
aas
cmp
push
xchg
mov
jne
inc
mov
cmp
nop
cmp
mov
inc
add
data16
sbb
mov
push
and
outsb
fwait
int
scas
xchg
sti
pushf
pop
cmpsl
leave
adc
add
test
fs
mov
sbb
iret
ret
and
out
jns
adc
stos
dec
sub
xor
nop
push
into
insl
xor
jbe
stos
es
push
inc
dec
pop
lds
xchg
sub
rclb
aad
pushf
pop
ds
pop
repnz
addr16
jnp
scas
sbb
and
std
adc
sub
push
hlt
push
and
nop
inc
pop
mov
mov
mov
rcll
rcr
cwtl
mov
testl
outsl
mov
mov
fadd
sub
cmp
int
sub
inc
sub
dec
subb
icebp
add
push
stc
and
inc
aaa
inc
out
mov
sbb
cmpsb
daa
mov
out
push
mov
es
scas
mov
ficoms
testl
addr16
and
adc
shll
inc
mov
pop
mov
mov
inc
sbb
jno
push
sarl
sbb
push
cmpsb
jl
mov
cmp
dec
lcall
xchg
mov
lea
ljmp
push
sbb
inc
mov
leave
aad
mov
outsl
pop
push
jg
jbe
in
icebp
rorb
dec
mov
ret
ds
out
sahf
sti
shrl
jae
xchg
and
or
pop
dec
cli
outsb
stc
inc
add
mov
dec
loop
xchg
inc
fiadds
push
aaa
sbb
xchg
mov
rclb
je
ljmp
jno
or
je
in
nop
shrb
xchg
lea
leave
mov
daa
sbb
add
std
imulb
mov
shll
arpl
mov
not
aas
mov
xchg
fwait
cmp
or
outsl
sbb
imul
or
dec
dec
jbe
leave
scas
xchg
pop
xchg
movsl
in
jecxz
daa
pushf
je
xchg
pop
lret
sti
xor
dec
fisttps
jb
out
lods
adc
inc
lcall
and
xchg
in
xchg
xchg
repz
adc
push
jmp
sbb
hlt
mov
or
add
jg
lahf
fstpl
das
jo
mov
inc
leave
or
sbb
add
imul
mov
stos
inc
shrb
dec
push
mov
lods
fidivrl
and
xor
out
dec
lock
xchg
mov
mov
leave
loopne
xchg
outsb
icebp
ret
jne
in
xchg
sbb
lret
test
jmp
add
pop
adc
xor
sub
int3
iret
popa
mov
in
and
in
lds
xchg
daa
mulb
sub
movsb
lods
mov
pop
push
fidivrs
es
cmpsb
dec
xor
mov
arpl
cmp
fisttpll
test
mov
xchg
shl
fildll
jg
push
mov
pop
rcrl
or
loope
inc
test
xor
jge
sahf
in
xchg
dec
xor
cmp
jl
lods
out
fs
ret
lret
xlat
pusha
sti
inc
lahf
lods
leave
int3
es
mov
push
xorb
addr16
sbb
pushf
lods
xor
fisubrs
jns
aaa
jge
lret
jae
rcll
adc
and
nop
fwait
add
fdivp
in
cmp
lcall
into
mov
push
cmp
jo
dec
mov
push
add
cli
mov
shl
dec
jns
lahf
inc
movsl
jno
movsb
sbb
jb
push
lahf
jnp
in
fst
pop
pop
mov
xlat
popa
or
sbb
pushf
cmpl
inc
movsl
in
das
scas
repz
mov
sub
movsl
and
xlat
jle
rcrl
xlat
fwait
in
push
push
in
mov
pop
pushf
fiaddl
lea
pop
pop
les
in
sbb
xchg
data16
ficompl
loopne
les
shrl
loope
xchg
cmp
mov
mov
pop
sub
cmp
or
xchg
xor
jmp
mov
or
lock
pop
or
xchg
sbb
dec
leave
lods
add
cltd
pop
pop
add
and
jle
mov
out
push
testl
pop
mov
xchg
xchg
pop
lahf
lahf
idivb
jecxz
xorl
add
adc
rcll
or
mov
sub
lcall
jnp
and
iret
hlt
test
fidivrs
icebp
int
imul
fnstenv
std
pop
cmpsl
push
cmp
mov
add
aas
ljmp
mov
or
pop
push
adc
xchg
push
ds
mov
mov
pop
sub
inc
mov
je
mov
aas
jmp
adc
xchg
mov
mov
fstpl
or
add
es
adc
aad
mov
repnz
jmp
xor
negb
mov
js
jle
jle
jnp
xlat
ljmp
cmpsb
cmp
sbb
lods
cwtl
in
mov
xchg
push
pop
push
pop
push
jbe
xor
push
sub
mov
xor
and
sbb
out
adc
ljmp
mov
jb
test
jo
and
inc
lods
jg
scas
in
push
out
outsl
sbb
ret
pop
shrb
inc
adc
insb
inc
xchg
add
pop
lods
stos
cmpb
cmc
into
addr16
pop
cmp
sbb
push
mov
xor
push
test
fcompl
data16
mov
inc
mov
iret
add
outsl
out
xor
push
rorl
insb
nop
shll
es
xor
adc
add
jg
popf
fnstsw
cmp
mov
test
cli
imul
ret
sti
shl
add
xchg
test
sub
jle
ret
dec
scas
lahf
jnp
xchg
cmp
dec
inc
dec
fsubrl
aad
jmp
and
pop
sbb
scas
loopne
sahf
add
out
sbb
out
outsb
cmp
out
pop
scas
push
jl
push
pop
cwtl
outsb
inc
or
add
inc
ja
add
xor
imul
std
jp
test
push
cmc
sbb
adc
push
faddl
in
or
cli
je
enter
faddl
xor
jmp
outsl
repz
test
pop
push
xlat
test
int3
daa
dec
mov
loopne
fs
adc
add
outsb
mov
or
sub
lahf
fsts
pop
mov
mov
insl
and
xchg
and
xor
in
mov
or
decl
mov
ds
andnps
movsb
cmp
mov
movsb
jmp
cmp
pop
jle
add
nop
jo
xchg
xchg
sub
cmp
push
pop
pop
sub
es
mov
and
add
pop
aaa
popa
fisttps
sbb
test
xchg
mov
adc
xor
push
js
out
test
out
shrl
and
popf
inc
ds
call
jge
mov
or
out
sbb
iret
xlat
call
inc
movsb
push
repnz
dec
xor
cmp
mov
lret
es
mov
or
mov
xor
in
push
cmp
mov
popa
push
jo
andb
jno
int3
mov
push
pop
jns
sub
jmp
xchg
sub
sbb
push
push
push
scas
pop
cs
mov
sbbb
push
cmc
int
xor
adc
jge
shlb
data16
jmp
int3
adc
in
loop
mov
fstpt
push
pop
inc
sub
ret
andl
xchg
xchg
push
out
add
and
mov
das
pop
stc
test
mov
filds
pop
xor
jl
and
pusha
aaa
adc
les
pop
xor
fiaddl
add
push
sbb
inc
and
repz
inc
leave
jmp
shlb
fmul
test
xor
adc
outsb
jb
in
loope
jmp
xor
data16
dec
mov
ljmp
mov
xchg
mov
cmp
insl
rclb
push
loopne
scas
rcl
inc
sub
sub
cmpsl
sub
imul
repz
repnz
insb
stos
imul
sbb
push
test
pop
jae
add
and
das
daa
stos
mov
jmp
cli
and
pushf
ds
cmp
jl
out
mov
enter
push
movsl
fwait
ret
add
out
ljmp
xchg
out
rorb
out
out
cmp
adc
ljmp
pushf
jge
inc
pop
dec
cmpb
popa
lds
rcrb
xadd
sub
pusha
out
fs
sete
js
sbb
cmp
stos
jmp
mov
insb
sbb
xchg
enter
das
bound
pusha
loope
or
hlt
dec
movsl
aad
stos
mov
gs
loop
xor
dec
pusha
mov
xchg
or
movsl
xchg
into
jno
lcall
mov
mov
add
cs
or
mov
and
int3
insb
mov
stos
ja
enter
mov
pop
jo
xchg
and
stc
es
sbb
jae
pop
push
clc
push
jae
fnsave
out
test
xchg
dec
and
leave
lods
xor
xchg
mov
jb
xlat
lds
push
push
dec
dec
outsl
fadds
lret
and
mov
jg
jg
xchg
dec
jecxz
movsl
cmp
pop
das
cmp
mov
mov
insb
ret
and
dec
out
imul
scas
jle
xlat
aas
mov
add
adc
dec
inc
inc
adc
movsb
push
divb
aam
test
dec
cmc
call
inc
inc
pushl
xchg
lcall
out
lahf
fdivl
call
and
lcall
subl
mov
std
scas
jge
sarl
mov
xor
xor
sbb
test
jo
and
into
pop
sbbl
fs
stc
pop
outsb
hlt
push
adc
cmpsb
add
push
fisttpl
xor
mov
cmp
addb
mov
dec
ret
push
cwtl
xchg
nop
dec
fcmovnu
inc
data16
lahf
jmp
push
icebp
mov
rol
push
jae
stc
mov
mov
mov
and
cmp
mov
add
imul
dec
cwtl
imul
popf
adc
jae
or
scas
lds
add
sbb
mov
test
xchg
sub
ret
jo
xor
negl
outsb
es
mov
les
dec
push
ljmp
stc
xchg
aaa
sbb
aad
jae
mov
lcall
cmp
add
add
cs
mov
pop
cmc
call
sub
arpl
stos
dec
test
push
or
rorb
lds
mov
sbb
rorb
lcall
lret
push
or
xchg
jp
les
sub
rolb
out
call
cmp
into
adcb
dec
repnz
jmp
xor
push
mov
mov
xor
andl
cmpsl
or
cwtl
and
sbb
stc
push
pop
popf
loopne
push
mov
mov
lcall
outsb
repz
rorl
std
in
add
rcrl
fiadds
xchg
clc
sub
popf
sbb
or
cltd
mov
ss
scas
rcr
fdivp
adc
mov
in
outsl
cmp
shll
outsb
loop
adc
mov
mov
adc
icebp
xor
stos
insl
decb
or
and
mov
js
daa
mov
cmp
sub
loop
pushl
test
adcb
lcall
aaa
out
jmp
clc
or
mov
adcb
inc
das
xor
xchg
jb
adc
add
xchg
xor
mov
stc
xor
adc
cmpsb
sbb
ss
adc
bound
pop
out
lods
pop
or
cli
sub
adc
fwait
and
test
mov
lods
lahf
xchg
jmp
icebp
movsl
cmpsb
mov
aam
cmp
inc
jle
pop
pop
dec
push
mov
dec
inc
imulb
outsl
lret
call
repz
xchg
sbb
jecxz
js
lock
nop
cmpl
pop
fsubl
loopne
in
xor
add
dec
rorb
pop
std
jb
lock
jno
jp
ret
xor
cmp
in
push
xchg
pop
test
xor
mov
mov
movsb
push
idivb
dec
sbb
push
inc
mov
and
iret
inc
mov
icebp
clc
test
jmp
lcall
push
mov
inc
cmpsl
xor
adc
es
mov
fwait
dec
icebp
sbb
add
ljmp
mov
mull
jge
xchg
inc
xor
dec
push
int
mov
jb
pop
xchg
pop
jb
testl
out
xor
jnp
dec
inc
cltd
gs
popa
cmp
loop
lock
aad
int
xor
push
loop
mov
insb
mov
fcomps
lahf
js
or
out
cmp
fistpll
in
dec
ja
jbe
inc
repz
mov
outsb
loopne
lods
mov
ret
pop
sub
out
push
jecxz
xchg
and
lods
pop
mov
sahf
inc
data16
xchg
loopne
out
push
mov
mov
add
fistpll
scas
sub
mov
lods
pop
dec
pop
sahf
inc
lock
popf
or
inc
ret
add
adc
pop
push
inc
mov
out
fildl
mov
es
jno
mov
mov
shll
imul
leave
jo
stos
push
repnz
rorl
add
ficomps
aaa
scas
hlt
cmp
sahf
dec
popa
and
push
sbb
xor
pop
sub
xchg
cmpsb
jns
pop
js
and
push
sub
xchg
jae
jp
pop
movsl
popf
loope
push
cmp
dec
cmpsl
sti
inc
xchg
addl
out
mov
jmp
mov
jge
adc
addl
jbe
jnp
pop
xor
mov
cmp
dec
stc
cmc
adc
add
out
push
stos
mov
negb
mov
cmpsl
pop
jne
scas
xchg
lcall
inc
sbb
mov
fdivs
cmp
jns
xor
jb
pop
mov
rclb
loopne
cmpsl
mov
lea
aam
push
xchg
call
mov
push
dec
xor
leave
loop
movsl
xor
sub
jne
cmpsl
cmp
imul
jmp
adc
fs
xchg
dec
xor
xchg
hlt
stos
mov
outsl
xlat
pop
fcoms
insb
xchg
jbe
addr16
cmp
repnz
fildll
test
mov
rcl
xor
les
js
aad
pop
rcl
movsb
iret
decb
mov
mov
adc
cmc
xor
sbb
or
pop
aad
pushf
dec
mulb
aad
or
lods
popf
loopne
add
popf
jle
loope
push
mov
out
sar
and
jno
cwtl
jae
xchg
adcl
into
popf
mov
sub
push
es
adc
enter
xchg
dec
mov
pop
in
pop
and
xchg
xchg
cld
jno
mov
add
push
mov
stc
xor
cmp
inc
movsl
in
sub
icebp
mov
lds
adc
ret
mov
aaa
xlat
pusha
dec
adc
mov
cmp
das
dec
cs
repnz
sub
insb
sub
test
adc
stos
inc
or
add
push
test
xor
mov
mov
aaa
jge
dec
test
outsl
jg
sbb
push
lds
fnsave
loope
xchg
fidivl
sbb
pop
bound
pop
repnz
clc
cwtl
adcb
adc
adc
imul
add
add
ss
mov
jnp
adc
movsl
xor
xchg
cs
out
pop
cmc
gs
add
jns
rcll
mov
aas
frstpm(287
mov
into
push
mov
push
lret
and
inc
lock
jne
or
push
mov
mov
loop
adc
ret
pop
daa
gs
sbb
mov
pop
gs
lods
xor
sbb
outsb
movsb
jb
mov
push
adc
sub
out
xchg
in
sarb
in
jns
cwtl
out
dec
add
out
sarl
fadds
cmpl
in
lds
inc
jmp
pop
imul
in
cmp
adc
ss
jl
sahf
xchg
fdivp
xor
js
mov
test
std
jnp
popf
jb
mov
and
inc
jge
std
push
adc
pop
stos
in
ret
mov
push
adc
or
xor
ja
mov
jnp
xchg
mov
ror
mov
xor
sarl
aaa
adc
and
inc
daa
cwtl
fmull
in
push
imul
add
sti
and
gs
inc
vcomisd
sub
or
inc
insb
cmp
cmpsl
flds
in
stos
mov
add
pop
mov
add
push
push
or
test
faddl
call
jmp
and
cmp
jnp
jae
inc
insb
int3
xchg
xor
cli
xchg
cmp
movsb
jle
or
pop
mov
add
cwtl
mov
inc
inc
inc
in
xor
pushf
stos
je
xor
push
ljmp
pop
aam
cmp
int3
jge
es
iret
loope
add
insb
jne
inc
cwtl
cmp
lcall
jb
sub
subb
sbb
xchg
adc
adc
sbb
hlt
ss
dec
int
and
ja
movsb
jne
sbb
xchg
push
inc
mov
clc
movsl
inc
pop
mov
jmp
inc
push
pop
setbe
mov
cmp
loope
xor
jp
in
pop
xlat
les
mov
add
outsl
call
dec
push
mov
sub
cmpsb
pusha
mov
xchg
jg
inc
testl
push
pop
mov
mov
fdiv
shr
std
or
jmp
fdivp
mov
lock
jg
dec
or
sti
test
adc
push
jns
xor
movups
pop
inc
mov
adc
or
xchg
mov
out
pop
fxch
decl
iret
jg
fcompl
dec
and
test
ss
clc
fadds
cmp
cwtl
dec
jg
insb
jb
sub
jge
push
arpl
mov
mov
cltd
add
mov
xor
or
sbb
inc
adc
aam
xchg
fstpl
shrl
cli
jb
xor
sub
loop
loop
idivl
hlt
aam
imul
or
pushf
push
enter
adc
sahf
jno
jp
pop
inc
jbe
push
stc
jmp
push
xchg
inc
fsubrl
aas
lcall
sbb
inc
out
or
sbb
mov
pushf
adc
push
lds
popf
pop
shlb
bound
sti
mov
adc
inc
aam
cmp
repnz
adc
in
cmc
sub
ljmp
ret
int
out
stc
xchg
push
cmp
inc
pop
jbe
faddl
push
inc
nop
jl
fcompp
popf
mov
addr16
cmp
xchg
adc
inc
sub
mov
in
dec
jnp
sbb
dec
stos
out
addr16
mov
push
ja
fdivrp
mov
mov
nop
lods
add
push
or
les
jae
push
cmp
adc
int
mov
cld
decl
pusha
in
xchg
add
push
push
aas
add
ss
jle
stos
jg
mov
pushf
repz
es
push
out
xchg
xor
mov
shl
sub
or
jge
xor
andl
adc
mov
sbb
cmp
push
fs
mov
outsl
xchg
adc
shl
sbb
jo
scas
jmp
pusha
scas
cld
or
sub
rorl
leave
inc
in
mov
cmp
hlt
aaa
and
push
jle
lcall
loopne
sysenter
and
add
sahf
and
mov
cmp
xor
int3
jno
pop
pop
or
xchg
fwait
in
lahf
pop
pop
cld
mov
or
jmp
sbb
jae
pavgw
or
inc
stos
cmc
push
or
xor
inc
add
in
push
and
dec
mov
mov
loope
inc
add
pop
adc
jle
popf
daa
xchg
jbe
cmp
mov
pop
push
rorl
cmc
mov
add
mov
cmp
jl
jecxz
out
call
imul
xchg
in
rolb
mov
movsb
jg
vxorps
add
out
out
lock
fsubrs
test
imul
push
sbb
and
adc
les
inc
xchg
sbb
inc
mov
pop
add
lret
fwait
push
xchg
or
mov
ret
out
sbb
push
cmp
imul
mov
loope
or
fsubrs
scas
pop
clc
out
xchg
add
inc
test
pop
and
jb
je
cli
xchg
lcall
mov
dec
shrl
rcrb
xchg
mov
mov
mov
cli
ret
cmpsl
push
mov
jp
mov
pop
jg
aad
in
aas
into
mov
ret
cli
pop
inc
mov
jg
pop
xchg
jo
add
or
dec
or
jne
add
jmp
loop
dec
shll
sahf
aam
fwait
push
loopne
int
mov
incb
test
pushf
fwait
add
fwait
lods
push
stos
incl
out
xchg
xor
std
sub
les
pop
xchg
sahf
and
ds
push
jbe
cli
jo
xlat
pop
inc
lock
or
loope
in
fsubrs
cmp
sub
daa
adc
in
mov
xchg
or
jge
imul
jecxz
test
xchg
sub
fpatan
mov
adcb
shlb
sbb
xlat
pop
sbb
dec
fwait
mov
push
repz
push
out
mov
shrl
popl
mov
out
pop
jp
pop
ss
push
mov
aas
jg
aaa
data16
lret
push
out
subl
jge
psrad
mov
nop
addr16
addr16
sub
imul
int3
xor
jb
and
outsl
rol
popa
xchg
push
xchg
bound
decb
cmpsb
fs
in
jb
sub
push
pop
cmpb
inc
fisubrs
and
orb
mov
les
mov
test
cmpsl
sub
pop
lret
inc
gs
loop
jp
xor
ret
arpl
iret
sub
sbb
mov
mov
addr16
movsl
xor
cltd
pop
sub
xor
das
mov
insl
pop
div
xchg
mov
or
xor
add
xchg
rcrb
adc
fwait
xorb
push
mov
and
int
mov
into
push
cmpsl
popa
js
inc
cmpb
ljmp
in
xor
add
in
stos
add
push
aam
das
jmp
or
bnd
shlb
ja
mov
les
cmp
adc
push
ds
hlt
add
push
bnd
mov
or
pop
lret
push
aas
inc
push
add
sahf
push
pop
in
dec
add
pusha
lahf
jb
stc
add
mulps
aad
dec
and
xchg
sbb
out
mov
leave
enter
lods
ss
test
mov
movsb
jg
push
out
cmp
mov
jno
mov
push
pop
in
and
sub
sub
in
sbb
les
and
lods
jmp
add
mov
fsub
pop
in
mov
popa
cmp
call
fisubs
shr
xor
clc
daa
pop
stc
xchg
jnp
sub
ds
cmpsb
mov
mov
mov
sbb
les
or
sbb
loope
pushf
xor
pop
xbegin
mov
ss
fistl
rcl
pop
hlt
movsl
shr
imul
xor
jge
xor
pop
add
mov
mov
mov
fdivs
mov
arpl
xor
add
cltd
inc
insl
mov
dec
cmc
and
daa
cld
shrl
push
pop
sti
cmp
jae
jmp
outsl
pop
arpl
loop
xor
adc
mov
adc
popa
jg
cmp
mov
fwait
push
inc
arpl
lods
cmp
pop
shlb
inc
int
inc
mov
outsb
les
adc
movsl
and
mov
movl
xchg
inc
jae
stos
push
mov
or
lea
iret
addb
loop
addr16
outsb
adc
scas
and
dec
and
push
inc
mov
daa
mov
mov
xchg
fimuls
push
and
lods
pop
sub
jns
xor
dec
mov
jns
scas
fmuls
jmp
fwait
jnp
shll
fldenv
mov
adc
xor
gs
aaa
inc
pop
lret
fs
or
mov
pop
xchg
shl
dec
sbb
jae
test
rcrl
cmc
or
jle
mov
gs
lods
insl
test
pop
lods
cmp
aad
stos
pop
xorl
stos
cs
add
mov
pushf
test
pop
mov
or
stos
dec
stos
not
out
insb
add
push
js
aam
out
paddd
pop
popf
test
pop
jo
sbb
xchg
jecxz
sbb
lods
pop
aas
lcall
lods
loop
loope
mov
cmp
repnz
or
loop
pop
test
push
sbb
jg
jno
inc
mov
arpl
pop
popa
js
sbb
mov
sub
clc
das
fwait
imul
nop
jl
dec
pop
rcrb
adc
xchg
lret
push
dec
add
mov
ljmp
dec
icebp
mov
mov
cmp
mov
inc
mov
jg
cmp
adc
sbb
lods
bound
sub
sub
addr16
cmp
es
inc
por
loope
cltd
adc
push
fcomps
into
js
jbe
lods
out
adc
push
pop
add
test
mov
xor
or
xchg
sti
mov
adc
mov
gs
pushf
ja
or
adc
cs
mov
ret
mov
cmp
ret
mov
xor
xchg
sbb
jb
or
sbb
jns
add
or
inc
jbe
shll
aad
or
jmp
outsl
dec
addr16
insb
mov
dec
out
or
dec
xor
mov
out
mov
jecxz
mov
inc
jle
fs
mov
std
je
loop
cmp
or
or
stos
mov
push
jbe
and
hlt
sbb
xor
xor
dec
aad
mov
adc
rolb
mov
inc
cmp
aad
call
int
pop
rorb
leave
lods
mov
or
ret
mov
dec
mov
xor
lea
xor
mov
push
or
pop
sub
ljmp
mov
or
xchg
in
mov
xor
call
fadds
mov
mov
gs
adc
xor
inc
push
push
mov
adc
push
mov
push
mov
cmp
add
mov
push
test
out
mov
adc
in
or
aaa
aam
lahf
inc
test
fcmovb
sbb
xorb
mov
adcl
jae
push
fdivl
lret
xor
dec
nop
mov
ja
pop
pop
sub
add
or
inc
add
adc
dec
xchg
mov
test
jne
nop
cwtl
test
xchg
je
sbb
out
cmp
or
xchg
insl
out
xor
int3
movb
addr16
add
sbb
sti
sub
ljmp
adc
test
cmp
mov
leave
xor
imul
outsl
mov
push
xchg
xchg
pop
imul
fdivrl
cmp
or
outsl
jnp
jmp
leave
and
dec
test
add
mov
pushf
push
sahf
hlt
pop
lods
mov
jmp
xchg
mov
in
push
mov
call
xchg
into
sbb
fisubrs
notl
js
es
and
add
jnp
lret
in
push
xchg
divl
sub
mov
add
xor
or
mov
push
jl
sub
mov
shl
popf
arpl
mov
imul
jno
dec
dec
push
scas
repz
icebp
roll
dec
xchg
dec
inc
mov
loop
fistl
sbb
jp
iret
sti
in
popa
xchg
hlt
sub
test
sbb
inc
mov
jns
mov
push
and
mov
push
xor
in
lret
xorl
inc
int
fdivr
pop
and
dec
pushf
mov
scas
pop
je
mov
jecxz
push
cmpsl
dec
mov
mov
fs
dec
movsb
xchg
rcrl
pop
out
jp
aam
stos
mov
enter
shrb
mov
mov
mov
ret
sub
std
add
or
push
mov
xor
loopne
inc
ljmp
push
negb
stos
mov
mov
rorl
mov
adc
sbb
cwtl
jmp
mov
shlb
sub
add
inc
pop
bound
aas
dec
and
pop
inc
jno
dec
imul
repnz
adc
dec
test
icebp
jg
cmp
scas
xchg
xor
movsl
mov
out
adc
push
jg
ds
popa
pop
das
insl
xchg
or
mov
pop
sti
sub
push
xor
jecxz
fsts
add
inc
push
jae
xchg
leave
add
pop
dec
inc
lods
jnp
test
popf
ljmp
or
imul
dec
cmp
push
jno
out
push
add
adc
dec
push
test
xor
test
and
rorb
inc
push
pop
push
cmpsb
mov
mov
cld
ret
xchg
sbb
mov
pop
dec
xchg
pop
push
adc
jae
mov
jmp
mov
sub
lret
sbb
ja
fidivrl
cs
test
iret
fcmovbe
ds
addl
mov
mov
test
lds
stos
sbb
pop
jns
jmp
dec
in
mov
xchg
outsl
rorb
mulb
dec
icebp
scas
push
pop
adc
fimuls
inc
mov
in
test
out
xchg
mov
subb
into
out
fdiv
or
add
xchg
aaa
mov
je
adc
movb
lret
mov
xchg
xchg
fdivl
or
or
sub
mov
ss
aas
stos
es
jg
cs
push
in
call
jp
aad
push
mov
das
popf
pop
arpl
rcrl
sbbl
adc
inc
loopne
daa
push
mov
fdivl
sbb
mov
mov
ss
adc
push
pop
push
cmp
pop
push
adc
call
and
sbb
shrl
insl
xor
dec
inc
clc
jmp
ljmp
cmpsl
mov
icebp
jg
jl
mov
scas
push
je
jle
push
call
jae
stc
fildl
shrl
add
sub
push
das
sub
mov
call
pop
fcomip
inc
xorb
adc
xchg
xor
cmpb
push
out
mov
arpl
jecxz
sub
mov
mov
imul
push
fisttpl
mov
subl
shl
push
cld
stc
xlat
xlat
fstl
int3
mov
mov
sbb
xchg
or
push
fisubl
into
out
sbb
insb
cmp
add
cmp
gs
cmc
push
adc
fistl
test
imul
xchg
in
cmpsl
sub
hlt
jne
shrl
xchg
adc
lcall
les
and
mov
stos
cmpsl
stc
mov
push
dec
insl
xor
jge
push
cmp
pop
int
push
mov
icebp
and
mov
scas
jp
js
sub
pop
mov
mov
jno
loop
xchg
andl
mov
push
sti
repnz
loopne
ffree
dec
stos
sbb
cmpl
pop
add
adc
mov
push
scas
sarb
sbb
nop
cmpsl
imul
mov
jnp
loop
inc
rcrl
js
mov
xchg
push
inc
pop
pop
test
pusha
je
xor
dec
mov
lods
cmp
repnz
sub
sbb
cmp
jbe
push
inc
arpl
cmp
push
cld
xchg
popf
push
xchg
lock
inc
scas
add
loop
loope
dec
mov
xchg
adc
dec
call
mov
pop
or
mov
or
and
xchg
out
inc
jno
cmc
mov
mov
push
lods
mov
jmp
int3
jno
inc
push
lea
addr16
cmp
fnstenv
ror
adc
jo
pushf
loope
xorl
xor
xorl
pusha
mov
cmpsl
push
push
add
pop
mov
pop
add
mov
popl
sbb
jo
pusha
adc
mov
or
stc
pop
pop
pushl
cmpsb
pop
add
hlt
adc
mov
xchg
outsl
xor
test
push
jnp
iret
outsl
xorb
xor
xor
hlt
adc
xor
push
addr16
loope
loop
lock
int3
xor
stos
lods
lds
inc
or
xor
test
call
pushl
pop
aaa
arpl
in
out
int3
jmp
test
dec
pop
jle
sbb
jg
mov
lea
add
cmp
sbb
repnz
adc
pop
adc
je
mov
imul
pop
ss
cmp
and
jecxz
aad
cmp
jb
lods
je
pop
xorl
sbbb
cmp
ss
mov
movsb
adc
jns
inc
imul
je
outsb
jge
nop
push
xchg
adc
cmpsb
push
cmp
ljmp
std
cltd
or
fldt
or
repz
adc
cwtl
or
ds
inc
pop
fcmovu
popf
dec
pop
loopne
xchg
cld
jp
jae
int3
adc
sbb
or
mov
ret
popa
in
pop
push
sub
xchg
mov
imul
mov
lret
push
idivb
out
jbe
loopne
icebp
add
movl
jg
sti
push
inc
add
sub
leave
sbb
dec
aam
cld
pop
sub
mov
ret
out
cwtl
add
jg
scas
pushf
jns
xchg
inc
mov
sub
int
lcall
in
test
adc
incl
pusha
incl
mov
lock
shlb
icebp
cmp
call
pop
int
stos
subl
ss
mov
sahf
adc
in
andl
sbb
pop
nop
dec
xchg
addr16
cmc
jmp
js
pop
pop
and
aad
and
jnp
and
icebp
lcall
ljmp
mov
icebp
test
adc
mov
push
push
jp
fdivs
jno
cmp
loopne,pt
iret
test
push
push
ret
inc
mov
scas
cmpb
or
mov
inc
dec
ds
add
ret
dec
insl
and
inc
dec
dec
and
push
or
gs
mov
loope
jbe
in
xchg
std
jg
push
and
ret
dec
ror
imul
mov
xor
jbe
mov
or
dec
dec
fmull
test
les
adc
push
push
add
push
pop
xchg
and
cmp
clc
aaa
aaa
test
out
jp
mov
lea
or
lds
aad
data16
aad
fdivl
imul
dec
sahf
adcb
shrl
jne
pop
aas
lret
and
stos
add
dec
xor
inc
jns
jb
stos
sbb
push
jne
mov
mov
xchg
repz
and
cmpl
cli
rcr
out
lea
pop
outsl
test
push
je
in
aam
int
jge
or
add
je
mov
ds
cmp
cmp
mov
sarb
repz
enter
mov
jmp
fcomps
jae
aaa
popf
aam
xor
or
adc
pop
jne
sub
into
movsl
pop
sti
cmpsb
jns
lret
jno
cs
push
repnz
fnstcw
xchg
xchg
jl
jecxz
xchg
cmp
in
rclb
mov
stos
addr16
inc
push
cs
jle
adc
dec
xchg
or
cmp
shlb
outsl
push
test
imul
fisttpll
jg
inc
rorb
lods
xor
mov
ja
pusha
inc
push
shlb
sarl
andb
dec
push
in
jge
or
jae
shl
dec
pop
ljmp
mov
or
push
jo
cmpsb
xchg
mov
xchg
int
ja
jns
ret
pusha
xchg
into
pushf
lahf
mov
cmp
jg
daa
add
repnz
popa
inc
sub
inc
pushf
cmp
or
in
ret
pop
and
les
sbb
enter
push
jb
inc
fwait
popf
mov
and
sub
aam
lret
xor
adc
cltd
shrb
mov
inc
cmp
jae
stos
cli
add
out
aas
lret
dec
mov
into
xchg
adc
jb
push
das
inc
xchg
or
push
dec
sbb
jne
xchg
ss
addr16
pushf
test
daa
adc
movsb
inc
mov
ds
movl
or
inc
dec
leave
mov
mov
shl
out
cmpb
wbinvd
es
mov
pop
inc
dec
test
ret
loop
xor
pop
popa
mov
xchg
aam
jbe
or
push
or
adc
pop
call
pop
enter
fwait
stc
ljmp
test
and
or
inc
xchg
pop
push
fdivl
xor
push
icebp
lds
in
adc
push
xchg
cld
test
push
inc
jb
jne
jae
add
xor
push
xor
xor
fsubs
push
call
jg
aas
and
mov
es
cmp
outsb
data16
xchg
out
ret
xorb
mov
mov
jp
jno
test
jae
push
or
ja
pop
lahf
repnz
arpl
shl
push
fnstsw
andl
jle
add
xor
loop
stc
dec
xlat
aam
sub
dec
int3
shll
push
pop
out
push
fisubs
cs
cmp
mov
mov
pop
std
mov
mov
mov
or
jecxz
push
pop
mov
mov
or
fadds
jle
adc
aad
pop
or
js
das
movsb
and
icebp
dec
sbb
repz
add
sub
pop
add
pop
ds
dec
pop
leave
xorb
iret
xchg
loop
loop
movsl
aas
mov
sub
out
out
or
mov
imul
push
add
hlt
or
out
xor
subl
lret
mov
test
and
aad
ds
xlat
jp
dec
movl
aam
dec
push
inc
mov
dec
push
fcoms
jp
ficomps
movsb
ss
movb
stos
cltd
outsl
cmp
adc
lea
mov
ss
ds
das
rcrb
into
pop
in
das
xchg
mov
mov
es
push
stc
mov
hlt
call
sub
adc
std
jle
pop
push
dec
loop
jmp
jne
aam
cmpsl
popa
repz
bound
jns
lock
sbb
popa
or
lods
mov
jp
xchg
mov
cmp
les
jne
xor
dec
stc
mov
lahf
mov
cmp
push
outsl
dec
adc
cld
call
xor
lods
or
adc
lret
adcb
xchg
sarb
dec
fs
jbe
mov
pop
lods
inc
jg
jnp
mov
push
push
jae
mov
add
sub
and
or
jmp
sub
mov
les
dec
ficoml
jb
int
scas
in
pop
outsb
and
mov
pop
jecxz
dec
adc
divb
and
mov
int
and
inc
loop
mov
xchg
jnp
in
pop
in
stos
xor
xchg
test
sub
xchg
popa
ljmp
inc
iret
sbb
add
sbb
and
xchg
jmp
add
mov
pop
popf
ret
bound
dec
push
in
xchg
sbb
jbe
fdivr
std
lret
je
arpl
jl
mov
rcrl
mov
add
cwtl
push
sbb
push
aam
jl
shll
cmp
into
xchg
or
xor
fsubs
inc
adc
mov
stos
push
mov
cmp
stos
mov
and
dec
stc
or
or
sbb
test
movsl
or
and
push
into
add
movsl
mov
dec
add
dec
cltd
adc
xor
add
xlat
add
push
nop
jo
or
push
mov
fnstcw
mov
adc
sub
mov
fmul
gs
fs
mov
out
cmpsl
lock
adc
jno
in
inc
pushf
addr16
stos
test
jp
clc
sahf
fsts
mov
and
fwait
sub
fcoml
std
cltd
imul
xor
xchg
lahf
jae
jge
jno
add
adc
mov
xchg
xchg
ljmp
push
aad
or
js
pop
mov
andl
or
cmc
mov
mov
adcb
sbb
in
adc
dec
mov
xor
js
js
mov
sbb
cmp
nop
or
mov
cmpb
mov
jl
movb
sbb
outsl
in
arpl
into
mov
pop
js
mov
ja
cld
xchg
dec
xchg
scas
imul
shll
mov
cmp
sub
xor
push
mov
jbe
lahf
shrb
sti
cld
jno
mov
test
jmp
and
ret
and
mov
adc
imul
mov
cmp
lret
mov
out
push
mov
iret
add
jae
or
pop
mov
mov
inc
mov
sti
mov
sti
fsts
xor
lcall
xor
test
adc
inc
cmp
fwait
and
sbb
jecxz
dec
hlt
and
subb
add
shl
aas
repnz
test
inc
shlb
xchg
fcompl
pop
leave
sub
jns
cmp
jge
add
xchg
cmp
mov
push
xlat
push
cs
add
je
inc
mov
mov
cmp
fisubrl
xchg
mov
pop
mov
mov
int
push
fprem1
dec
movsl
jbe
inc
mov
aas
fwait
pushf
or
mov
pop
lods
push
lods
dec
imul
cmpl
jle
addr16
jle
adc
mov
adc
push
sbb
mov
outsl
in
js
es
jno
mov
enter
add
insb
pop
pop
hlt
xor
les
jecxz
or
test
xchg
push
mov
inc
xchg
mov
xchg
icebp
mov
stc
and
cs
leave
popa
je
std
mov
sub
sbb
nop
loopne
pop
xchg
inc
inc
mov
xchg
aam
mov
add
cmp
aam
clc
adcb
lahf
sbb
fisubs
pop
sub
dec
xchg
mov
and
jge
loop
lret
inc
dec
jle
jne
cmc
aaa
sub
sub
inc
shlb
into
leave
sarb
int3
in
xchg
bound
push
jle
scas
jg
mov
adc
mov
lea
fs
push
mov
les
lahf
mov
inc
and
dec
pop
sub
sbb
cld
inc
test
loope
dec
pushf
push
xor
movsb
pop
rolb
in
daa
and
lret
xchg
idivl
jne
adc
jmp
into
cmp
js
cwtl
sbb
sbb
movl
call
lret
push
push
add
inc
fimuls
xchg
les
xchg
sbb
mov
addb
dec
pop
ja
test
fstl
test
je
push
xchg
mov
test
xor
jno
sub
xchg
bound
addl
call
cmp
cmc
push
lds
mov
add
imul
pop
dec
pop
addr16
pop
dec
cmp
dec
xchg
stos
push
ja
pop
xor
cmc
sub
loop
add
and
add
test
in
bound
inc
fs
pop
sbb
sub
ss
je
scas
inc
lds
dec
mov
mov
dec
cmp
jne
inc
sbb
mov
pop
fiaddl
xchg
xchg
dec
push
data16
mull
lcall
xchg
inc
and
add
adc
pop
data16
gs
add
push
sbb
gs
test
int
inc
and
sub
xchg
jp
rcrl
jle
or
add
dec
loope
mov
je
mov
push
push
lret
pop
add
xchg
cmp
pop
jl
nop
inc
sub
push
push
xor
mov
mov
mov
inc
shrb
sti
stos
jbe
ljmp
sbbl
lcall
or
enter
in
cwtl
pop
aam
adc
stc
fists
mov
inc
js
pop
enter
test
adc
xchg
data16
lods
mov
nop
aaa
stos
lds
sbb
sbb
dec
sub
mov
jmp
push
adc
fadd
xor
pusha
push
sub
out
push
pop
sbb
mov
sti
push
ficomps
imul
js
sub
sub
adcl
sarl
jo
xor
rclb
sbb
jo
loop
cmc
dec
sbb
sbb
sbb
jl
sti
ficoml
push
sbb
adc
mov
pop
dec
sbb
mov
pop
jg
mov
aaa
popf
jno
and
shll
or
xchg
lds
inc
or
jbe
loope
xor
add
fs
aad
push
sbb
mov
std
mov
mov
pop
cmc
mov
js
leave
popf
mov
orb
or
adc
add
lcall
inc
inc
dec
insb
dec
mov
mov
lods
leave
push
pop
test
xor
sbb
jns
in
addr16
nop
loope
jmp
push
jae
testl
push
aam
push
xorl
hlt
fdivl
cmpsl
testb
clc
lahf
scas
and
mov
adc
adc
lods
mov
negl
fisubl
mov
test
mov
pcmpeqw
push
xchg
pop
mov
loope
xchg
pusha
int3
lods
mov
sub
xchg
pop
and
in
test
inc
daa
dec
or
push
nop
dec
mov
insb
pushf
sub
incl
mov
xchg
xchg
out
out
sub
and
jbe
mov
jle
mov
inc
lahf
or
fisubs
into
xchg
mov
repnz
imul
mov
pop
push
cs
dec
mov
jns
cmp
sbb
mov
pop
bound
push
out
iret
push
stos
sbb
jg
mov
js
aaa
jnp
push
xchg
cmp
hlt
dec
out
mov
icebp
add
nop
stos
push
popf
add
ja
data16
pop
mov
mov
inc
dec
aaa
mov
ds
negl
jle
dec
fistpl
dec
push
jbe
in
mov
scas
ds
xor
push
lock
push
aaa
mov
pop
lret
shll
mov
inc
mov
push
sti
pop
data16
push
int
xchg
pushf
js
pop
adc
repnz
cmpsb
stos
xchg
das
or
and
std
xor
out
mov
jmp
pusha
dec
adc
push
push
inc
lcall
icebp
aad
xor
mov
leave
cmp
loopne
outsb
dec
incl
imul
jg
adc
cmp
lret
pusha
and
mov
mov
int3
daa
cs
jb
push
aaa
dec
jbe
sbb
xorb
mov
test
sbb
cmc
std
out
movsb
es
add
push
dec
inc
push
inc
or
testl
mov
js
add
jns
adc
add
outsb
mov
aad
scas
mov
imul
clc
pop
jbe
stos
shr
mov
dec
cli
negb
scas
mov
in
sbb
or
mov
xor
call
fwait
loope
lahf
leave
mov
lret
int
idiv
xchg
cmp
jecxz
into
xchg
int
scas
loopnew
repz
xlat
fcompl
rcrl
adc
push
inc
dec
push
inc
sar
pop
pop
enter
cld
lods
loop
xchg
jg
and
movsl
xchg
lret
movsl
jge
xchg
and
sub
cld
pop
push
dec
mov
xchg
mov
pop
pop
xchg
ret
jnp
cmpsb
stos
test
repnz
push
xor
sub
and
push
cmpsl
aaa
rcrl
test
in
pushf
mov
insb
lret
mov
mov
inc
stos
cmp
dec
aas
mov
andb
punpcklbw
outsl
stos
push
mov
pop
adc
hlt
mov
sub
push
jle
mov
dec
push
jnp
mov
in
idiv
inc
pop
cli
out
xchg
rclb
add
pop
ja
out
cmp
lret
add
adc
lods
bound
cmp
push
add
cmp
jecxz
adc
popa
push
aad
sbb
and
mov
stc
test
mov
fistpl
repz
xchg
inc
pop
push
cmp
mov
insl
add
or
mov
outsl
ss
sub
out
jl
lds
fldt
iret
mov
inc
out
pop
repnz
aam
xor
dec
aad
jle
inc
les
test
mov
out
mov
mov
ss
popf
and
dec
mov
inc
lock
mov
cmp
mov
xor
addr16
adc
pop
dec
pop
test
inc
shr
mov
lcall
xchg
dec
sbb
mov
out
jge
and
cs
and
sbb
inc
in
leave
loop
xchg
cmpb
leave
arpl
adc
adc
into
loop
lret
mov
arpl
jno
bound
divl
adc
pop
jae
jp
add
lahf
imul
pop
and
ljmp
pusha
pop
dec
mov
mov
lea
bound
gs
pop
dec
and
ds
xor
mov
pop
pusha
cmp
mov
jns
in
add
or
lods
repnz
sbb
out
pop
rolb
sub
pop
xlat
jmp
ret
scas
push
lret
insb
imul
xchg
pop
sti
cwtl
sub
insb
mov
push
ljmp
xchg
sbb
pop
fs
jmp
aas
sti
mov
lock
add
stos
pop
dec
out
mov
jne
sub
shrb
stc
lret
mov
adc
pusha
mov
cmpl
sbb
out
push
aas
inc
mov
sub
mov
push
pop
movsl
pop
movsb
lahf
mov
inc
xchg
fldt
cli
in
js
xchg
cld
mov
sub
sbb
mov
xor
testl
adc
mov
or
mov
lahf
mov
fsubrs
test
adc
jl,pn
outsl
js
in
mov
test
fistpll
pop
ficoms
decl
xor
push
fidivrs
outsl
jecxz
dec
add
pop
pop
cli
das
pop
lret
aam
out
xor
pusha
daa
mov
mov
cmp
inc
pop
arpl
mov
clc
dec
icebp
pop
loopne
cmc
nop
dec
rolb
mov
cmp
jmp
loope
sbb
rcll
out
sbb
clc
inc
shr
insl
adc
arpl
ljmp
xchg
outsb
in
xchg
daa
repz
jne
lds
pop
outsb
lahf
add
push
dec
cwtl
sbb
mov
cmc
scas
push
inc
out
cmpsl
xchg
out
aaa
sbb
inc
push
sub
cwtl
sbb
xorb
fst
or
aas
jne
fisubl
sarb
cmp
mov
xor
lret
lds
cs
std
mov
mov
leave
inc
dec
shrl
and
mov
lret
jne
push
dec
jmp
mov
jg
pop
push
pop
dec
fwait
sub
fistl
pusha
push
jb
je
lea
stos
push
push
mov
sub
mov
scas
out
fs
and
scas
pop
pushf
push
mov
fnsave
loopne
adc
scas
lcall
loopne
cld
jb
loopne
or
mov
scas
mov
out
dec
jno
pop
sbb
or
xchg
and
mov
movsl
push
pop
mov
jne
mov
mov
fcoml
lods
jbe
addr16
call
sbb
test
enter
addr16
dec
sub
test
dec
xchg
aas
push
pop
add
icebp
jnp
inc
push
std
out
sbb
mov
imul
fistl
push
push
ja
lods
test
dec
add
sbb
outsl
mov
sub
fisubs
mov
push
mov
pushf
push
sbb
mov
xchg
in
mov
mov
lock
aas
test
jmp
test
xchg
sbb
imul
subb
ret
push
es
or
out
mov
or
call
outsb
fld1
xchg
scas
fnsave
pop
mov
out
sbb
test
xor
sub
sbb
xchg
add
call
fdivs
add
mov
or
iret
aaa
adc
mov
notb
push
sub
fisubs
mov
and
testl
mov
call
mov
shrl
pop
sbb
add
shl
mov
aad
xchg
and
les
test
cmc
dec
or
jb
int
mov
test
mov
decb
adc
scas
sub
pusha
cmp
pop
mov
divb
sbb
nop
imul
sbb
sbb
push
or
xor
jo
inc
or
jbe
sbb
stos
outsl
xchg
dec
cmp
test
stc
jae,pt
xchg
sti
lods
or
pop
mov
lock
mov
arpl
dec
faddp
sbb
icebp
mov
stos
inc
inc
and
pusha
jae
in
cmp
idivb
lret
mov
mov
cmc
fwait
xchg
mov
xchg
je
lcall
or
push
lds
addr16
repz
loope
lret
mov
xchg
sbb
insl
pop
in
aad
stos
cmp
test
mov
fs
pop
fldcw
or
popa
dec
inc
rolb
fstpl
jmp
jmp
lcall
in
vmovhpd
pop
je
das
stos
in
jle
lcall
mov
mov
push
mov
push
xor
mov
sbb
dec
xorb
fld
fisttpl
push
xor
mov
das
enter
sbb
push
cmp
jl
cld
stos
out
inc
mov
gs
lret
enter
xor
into
test
iret
jo
dec
scas
loop
scas
loop
stos
in
ljmp
test
mov
xchg
pop
sbb
xchg
loop
cltd
sub
insl
lcall
mov
test
fs
shlb
mov
jle
loope
cmpsl
and
imul
jae
cmp
sub
es
and
add
lret
adc
in
xchg
imul
in
cmp
xor
in
jg
mov
lahf
test
test
stos
lods
xchg
sub
xor
ljmp
out
sbb
add
sbb
dec
cmp
sub
pop
pop
mov
sbb
std
loop
movsl
cmp
and
andl
jg
in
add
subl
push
fnstcw
jae
xor
add
mulb
nop
imul
jnp
push
test
stos
pop
notb
dec
jmp
and
in
das
fidivs
pop
ja
mov
ljmp
lahf
push
xor
pop
mov
icebp
sub
xor
test
lods
gs
nop
int
dec
rclb
lea
repz
xchg
in
cld
pop
jb
inc
adc
push
cmc
jmp
push
jecxz
movsb
sub
sub
xor
mov
pushf
sub
inc
insb
mov
loope
sahf
out
clc
cwtl
mov
xchg
jbe
pushl
pop
das
rcrl
in
ds
rclb
cwtl
lock
inc
repz
je,pt
and
imul
in
mov
pop
mov
lods
inc
pop
jge
sbb
mov
rorb
pusha
jo
fisubrl
mov
push
stos
scas
pop
sub
loopne
out
add
or
mov
cwtl
stc
xchg
test
adc
sahf
adc
jb
inc
inc
or
test
xchg
mov
scas
adc
in
nop
jp
lahf
imul
sbbl
mov
add
and
adc
inc
xor
test
test
mov
in
mov
jge
add
aaa
push
and
cmp
mov
cmp
xor
inc
jecxz
dec
xor
cmc
sbb
lahf
add
iret
stc
push
out
test
xor
or
mov
pusha
insb
xchg
pusha
mov
mov
xchg
aad
xchg
insl
ret
add
lock
sbb
and
xchg
jbe
mov
shlb
loopne
cmpsl
jnp
aas
nop
sub
cltd
out
lret
jne
lock
cmp
push
ss
loope
hlt
or
stos
mov
and
ficomps
sub
pop
adc
js
lahf
or
stc
addl
xchg
dec
cmp
test
adc
pop
mov
jmp
jb
pop
jb
or
xchg
int3
ljmp
inc
lods
cs
cmpl
dec
xchg
arpl
push
pusha
add
adc
test
push
bound
nop
in
leave
mov
addr16
xor
fidivrl
dec
ficompl
cld
fcompl
mov
add
push
pop
xor
sub
sbb
xchg
mov
movsb
dec
imul
jp
sbb
hlt
imul
imul
cld
mov
cmpsb
inc
jg
ljmp
lea
pushf
hlt
sub
xor
xor
ret
into
pop
mov
minps
repnz
popf
lods
sbb
push
mov
mov
loopne
push
lret
push
sbb
xchg
mov
test
pop
push
fwait
push
pop
popa
push
mov
mov
xor
pusha
cmc
mov
repz
adc
out
dec
pop
and
loop
mov
lcall
loope
pop
push
test
push
fs
jbe
lds
lahf
test
xchg
mov
push
mov
in
inc
adc
inc
arpl
sbb
hlt
xchg
repnz
cmc
dec
sbb
rorl
sbb
inc
fld
ret
iret
gs
cltd
movsb
push
inc
std
or
dec
int3
xor
cmp
xchg
test
adc
or
mov
scas
repz
int
les
or
jle
mov
pop
dec
popf
ret
movlps
xor
ljmp
cld
mov
test
leave
add
pop
mov
rcrl
loop
push
lret
inc
fwait
xorb
push
add
shrb
pop
xor
and
fisubrs
mov
dec
jb
in
into
mov
fidivrl
jb
jns
outsb
sti
mov
and
nop
pop
test
cld
add
daa
test
pop
aad
xor
fists
leave
and
sub
mov
orb
lock
cmpsb
in
fists
pushf
loope
xchg
mov
movsl
mov
inc
or
xchg
out
int
mov
push
js
aaa
jmp
in
mov
sbb
fdivrs
inc
sub
sarb
add
jmp
lret
mov
inc
lods
and
jge
ret
dec
dec
mov
popl
mov
cmp
stos
mov
pop
out
push
lds
xor
loope
xor
mov
fdivrp
or
push
mov
movsl
in
adc
xchg
mov
jge
mov
add
adcb
mov
xchg
fidivs
sarb
lahf
or
jno
add
jle
mov
call
dec
pop
sub
push
jno
in
add
daa
imul
add
mov
jae
push
xor
or
popa
je
push
cld
std
daa
sbb
push
addps
sbb
add
jg
xorl
rol
push
fstpt
mov
mov
decl
sbb
lods
gs
loopne
cmp
outsl
mov
mov
cli
outsl
icebp
mov
inc
jl
add
int
add
or
or
mov
cmp
mov
xchg
adcl
jp
mov
xchg
mov
pop
sub
cmpsb
jo
bnd
ret
xor
xlat
jo
jne
js
mov
ljmp
mov
inc
mov
imul
push
sbb
jge
pusha
std
mov
add
rol
mov
and
add
add
std
mov
inc
aad
mov
mov
sar
mov
inc
aas
pop
jecxz
push
shlb
lret
or
inc
aad
out
aad
hlt
xchg
xchg
and
adc
add
or
mov
xor
push
cmp
pop
sahf
ret
or
arpl
xchg
je
imul
negb
or
mov
addl
fwait
mov
adcl
sub
ja
std
call
les
cmpl
std
mov
mov
shrb
inc
jae
lock
mov
sbb
xchg
adcl
outsl
mov
leave
inc
ss
repnz
and
sbb
fnsave
cmpsl
into
and
fidivrl
pusha
push
push
pushl
call
push
sbb
adc
lods
inc
mov
sbb
push
add
leave
aaa
lret
dec
cmp
and
popa
mov
mov
lahf
jns
jecxz
cmpsb
daa
pop
xchg
jnp
push
faddl
mov
push
hlt
ret
js
xor
xchg
outsb
aas
push
mov
cmpsl
inc
and
repz
mov
gs
pop
mov
mov
jns
sbb
adc
inc
scas
add
mov
negb
xchg
sub
push
aaa
jmp
ljmp
push
xchg
cmp
pushf
mov
mov
out
xchg
mov
fwait
bound
sbb
cmpsb
mov
pushf
dec
adc
fsubs
loop
adc
outsl
sbb
pop
pusha
and
stos
scas
cmpsb
insb
shll
jne
sbbb
mov
or
testl
les
fcoml
aam
and
stc
fldt
ss
testb
push
ret
cmp
rcrb
or
jmp
fdivs
mov
xor
pop
ljmp
or
and
sbb
or
push
pop
addl
lea
dec
scas
mov
jno
clc
ja
jnp
aad
aas
and
dec
push
sbb
xor
std
cmp
jmp
lods
jo
mov
lods
inc
inc
fsubl
out
mov
ja
out
div
or
or
scas
push
dec
adc
xor
sbbb
lock
jle
cmpsl
ficompl
push
je
stos
lods
fmul
adc
cmp
in
push
xor
mov
pop
sub
xchg
mov
pop
stos
sub
add
icebp
dec
mov
cmp
insb
lcall
mov
jl
into
pusha
add
jae
mov
cmpsl
stc
sti
lret
sbb
pop
pop
js
mov
lea
aas
sbb
sub
pop
out
xor
cmpsb
xchg
fistps
pop
shlb
pop
shr
pop
xchg
xchg
cmpsb
fsubl
cmp
mov
mov
addr16
inc
mov
adc
cmp
negb
lods
cmp
xchg
inc
mov
loope
jge
inc
mov
jnp
das
dec
dec
pop
push
shll
push
pushf
aam
outsb
mov
add
mov
mov
jo
xchg
lea
mov
call
push
xchg
cwtl
sub
test
cmp
lahf
cmpsb
mov
aaa
sahf
pop
cs
in
adc
call
sbb
cmp
test
mov
insb
dec
adc
jecxz
jle
sub
jge
movsb
cmp
shl
jb
lea
nop
sub
sbb
ret
dec
adc
cwtl
ss
lods
sub
ljmp
lock
pop
adc
stos
test
insl
inc
lock
outsl
repz
inc
sub
popf
andps
push
sbb
xorb
mov
loope
jmp
jl
nop
push
imul
cmp
or
pop
pop
pop
fistpll
retw
mov
xchg
pop
mov
xor
mov
jge
movsb
cmp
mov
ja
pop
lret
clc
ds
jb
lret
push
les
pop
cs
add
movsb
rolb
out
adc
and
inc
std
mov
sub
and
and
fstps
xchg
mov
pop
xchg
push
mov
jmp
lock
xchg
movsb
and
repz
adc
dec
sti
dec
xchg
das
mov
outsb
sbb
ret
lods
mov
mov
cmc
push
or
mov
mov
xchg
add
xor
jle
pop
cmpsl
imul
adc
movsl
loop
rcll
cli
pop
pop
or
dec
sahf
test
ror
xchg
jo
xor
js
inc
xchg
jbe
lahf
xchg
cs
icebp
cmp
jbe
mov
inc
mov
enter
scas
addb
sub
aas
pop
inc
mov
fidivl
pop
add
sarl
sbb
jo
adc
xchg
sub
and
insb
movsb
outsl
es
rcl
repnz
insb
cmc
mov
decl
insl
test
enter
push
jne
imul
ror
xor
inc
pop
movsl
icebp
mov
pop
dec
outsl
iret
movsl
mov
out
cmpsl
leave
push
es
push
imul
outsb
aaa
ret
repz
fwait
lahf
xlat
cs
push
dec
nop
fbstp
cli
mov
mov
into
lcall
dec
lods
sbb
or
mov
shlb
and
xor
sbb
xchg
dec
jno
out
shrb
dec
add
mov
push
mov
adc
or
pop
gs
cmp
adcl
jecxz
sbb
js
aam
xorl
lea
nop
int
addr16
stos
mov
test
push
ret
arpl
or
xor
inc
adc
lahf
jne
mov
mov
dec
int3
stos
lock
cld
pop
lcall
dec
rol
push
loope
std
clc
add
rorl
xchg
push
leave
and
dec
popf
mov
xchg
scas
fildll
test
leave
dec
fisubl
and
mov
xor
inc
std
das
movsb
ror
pop
sub
add
stos
shl
fldcw
in
push
jp
dec
sahf
lods
ljmp
adc
jns
out
loop
ds
adc
xor
xchg
sti
ds
or
and
sub
mov
xchg
sub
shl
mov
stos
add
push
fisttpll
jno
iret
scas
iret
and
arpl
sub
adc
in
insl
lods
in
mov
daa
test
imul
sbb
xchg
and
jbe
cli
dec
gs
pushf
mov
inc
mov
push
enter
or
mov
push
fwait
cmpsl
out
out
and
jge
jae
cmp
push
pop
sub
enter
js
inc
xchg
or
jo
mov
out
rcr
std
dec
in
and
mov
jbe
stc
pop
xlat
out
mov
addb
lds
push
lds
faddp
mov
push
cmp
push
scas
scas
cmpsb
push
jno
loop
outsb
dec
jnp
or
icebp
cli
xchg
aaa
aad
and
dec
rcl
rcr
call
and
sub
fildll
add
dec
ret
addr16
mov
mov
or
or
ret
shrb
cwtl
daa
inc
scas
xchg
cld
and
int
xchg
aad
xchg
in
jecxz
mov
inc
mov
fisubrl
dec
or
mov
inc
mov
std
dec
out
scas
nop
sub
adc
adcb
insl
mov
cld
xchg
leave
push
repz
jl
xor
jl
cwtl
mov
sbb
pxor
stos
inc
iret
popa
clc
mov
addr16
mov
jo
mul
iret
mov
addr16
mov
enter
push
inc
adc
cs
loop
pusha
mov
or
push
cmp
fldt
jo
mov
mov
stos
rorl
mov
arpl
mov
pop
mov
int
lret
pop
pop
shll
jns
sahf
mov
push
jbe
jnp
scas
stos
sbb
or
inc
ffreep
or
pop
aam
js
pop
rcl
inc
mov
cli
vmovd
ljmp
ljmp
pop
pop
xchg
cs
fwait
pop
push
int
cmpsl
dec
std
cmc
add
sbb
leave
les
and
xchg
push
pop
ss
filds
dec
ret
mov
test
roll
pop
leave
adc
xchg
fdivrl
fwait
stc
or
je
mov
out
xchg
pop
outsl
xlat
outsl
aas
pop
xchg
sbb
xor
cmpsl
pusha
push
shll
xchg
lahf
pop
sbb
sahf
out
cltd
xor
xor
sahf
xchg
adc
xor
sub
push
fwait
push
and
test
leave
int3
jecxz
jmp
rep
out
and
scas
mov
jmp
mov
fnsave
aad
dec
xor
push
add
add
xchg
pop
mov
sbb
fsts
pop
daa
lods
pop
lahf
cwtl
add
shll
dec
leave
xchg
mov
sbb
out
stc
xchg
push
pop
add
adc
mov
mov
lods
es
cmpl
jle
push
mov
xor
push
int
inc
mov
clc
aas
mov
fsubs
lret
jnp
enter
push
sbbl
jecxz
fwait
loopne
roll
subl
mov
xor
add
cmp
icebp
dec
push
ja
xchg
cmc
mov
sbb
inc
xor
jmp
inc
je
push
mov
cmp
pop
cwtl
dec
dec
xchg
shrb
stc
sbb
cmp
and
gs
into
cld
gs
ret
cmp
xor
and
jle
and
mov
mov
pop
xchg
xchg
dec
or
push
add
rcr
inc
ret
cmp
xlat
adc
test
cltd
ljmp
xchg
xchg
jnp
jo
jecxz
pop
sub
repnz
push
sbb
or
cmpsl
and
and
jno
cmp
out
pop
js
cs
inc
cmp
sbb
shll
and
push
ds
int
out
outsb
imul
repz
jmp
dec
dec
lea
ret
test
mov
sbb
jns
sub
xchg
sub
sbb
in
stos
cli
sahf
adc
pusha
sub
mov
rorl
fildll
push
dec
cs
mov
std
aaa
ds
les
mov
cli
out
pop
shll
stos
and
or
cli
xor
add
imul
cmpsb
pop
lret
inc
mov
add
cmp
xchg
lds
push
psubsb
aaa
add
pushf
mov
in
dec
cmp
adc
mov
add
das
decl
cltd
add
push
loope
cmp
aaa
xchg
mov
mov
cwtl
mov
addr16
adc
xor
adc
mov
xor
inc
addr16
ljmp
pop
cld
sti
fadds
xor
bound
inc
cltd
push
shlb
rcl
mov
mov
imul
scas
inc
and
adc
mov
jnp
cmovb
ret
push
lock
rcll
sub
out
jnp
adc
cmc
xchg
pop
insb
lahf
ja
inc
sbb
lret
sbb
cmpsl
lahf
xabort
repnz
add
call
andl
pop
jmp
push
push
dec
xchg
sub
out
or
sub
mov
mov
in
insb
inc
cli
pop
add
jns
pop
and
das
jp
sub
jecxz
jo
jmp
lret
jg
push
sbb
movsl
xor
cmp
idivl
outsl
loope
dec
and
outsl
mov
push
adc
arpl
leave
mov
jnp
mov
adc
pusha
mov
adc
pop
push
mov
dec
add
push
xchg
xor
int
push
push
std
xchg
push
fisubrs
out
push
sbb
aad
mov
call
xchg
cmpsb
xor
cld
scas
adc
inc
fs
dec
sbb
gs
rcl
stc
pop
addr16
fnstsw
mov
je
mov
mov
jp
sahf
mov
jg
mov
dec
mov
lds
cli
data16
xchg
jmp
in
imulb
rorb
lods
dec
xchg
fldl
jp
decb
pushf
cmp
mov
push
call
movsb
or
mov
inc
xor
lcall
mov
ret
imul
add
imul
mov
xchg
inc
test
xchg
mov
insl
loop
add
xchg
vpunpckhqdq
adc
or
int
mov
bound
test
movsl
sub
ljmp
dec
ljmp
mov
jne
ret
repz
nop
andb
rcll
int3
in
sbb
movsb
xchg
mov
insb
popa
jecxz
daa
sbb
or
ficoml
mov
xchg
stc
outsb
lcall
jg
xchg
test
pop
je
lock
jo
fisttps
mov
mov
call
add
into
shrl
adc
loope
les
xor
outsb
mov
es
fdivrp
xchg
sub
push
clc
push
lret
cmp
into
stos
int3
mov
mov
sbb
into
int
jbe
add
movlps
and
test
cld
pop
repnz
flds
xorb
jbe
stos
shll
sbb
xchg
xchg
xchg
xchg
pop
popf
xchg
mov
mov
mov
jae
inc
and
add
fcoms
mov
insb
into
sub
ret
ucomiss
rorl
jne
in
popf
mov
ja
stc
aad
fbld
call
xor
lods
pop
or
sub
or
cs
xchg
iret
xor
clc
das
or
mov
mov
clc
pushf
mov
out
sub
pop
clc
mov
lds
sbb
jo
test
push
sbb
rep
stc
rcll
xchg
ret
pop
inc
jno
bound
pop
xchg
mov
and
dec
dec
mov
jg
bound
cmp
xchg
or
xchg
mov
inc
sbb
pop
mov
addr16
jp
dec
inc
xchg
xchg
sub
incl
scas
push
aam
bound
adc
es
lret
aad
pop
test
pop
fcomps
adc
mov
pop
add
dec
cmp
inc
pushf
in
push
dec
xor
xchg
outsl
xchg
push
addb
sbb
adc
insl
aad
xor
push
in
mov
mov
stos
mov
sbb
cli
addr16
loop
sub
sti
xchg
jae
jae
jnp
mov
test
test
insl
repz
push
arpl
notb
aaa
jns
pop
insb
jne
mov
inc
xor
dec
jecxz
inc
inc
cltd
pop
or
inc
in
or
pop
cwtl
jns
mov
rclb
clc
shll
mov
aad
mov
mov
shl
shll
mov
sbb
jns
ret
mov
lock
jle
mov
aaa
push
and
ljmp
cli
addr16
pop
insl
std
hlt
pop
ds
xchg
dec
jle
pop
ret
xor
lahf
inc
adc
push
stos
imul
cmp
mov
cli
fwait
popf
jbe
xchg
inc
pop
in
in
or
stos
imul
jge
fs
xor
sbb
mov
add
sti
cmp
push
call
sbb
push
jp
adc
insb
daa
sbb
cli
xchg
cmp
mov
add
ret
lods
jno
dec
jl
push
lea
ja
lock
sbb
nop
jl
push
std
sti
popf
or
sub
sahf
inc
jae
clc
push
aam
push
movsb
mov
mov
push
xor
mov
mov
out
inc
arpl
xorl
mov
test
cmp
adc
lods
pop
lods
jbe
out
cltd
push
sbb
adc
lea
jns
inc
shrl
addr16
xchg
lahf
cmp
add
mov
push
faddp
lahf
mov
mov
outsl
mov
rcrl
mov
push
inc
cmp
sub
lods
push
pop
sub
enter
dec
bound
clc
mov
mov
stos
jbe
fistpll
jb
cltd
jmp
pop
jae
fnsave
sbb
adc
cld
xchg
sub
cld
ss
mov
sub
mov
out
xchg
ret
or
testl
dec
fs
bound
test
insl
or
insb
fistpl
sub
lock
lahf
into
sbb
sahf
jns
mov
aaa
pushf
fndisi(8087
dec
cmp
jae
addl
push
stos
cli
pushf
mov
std
in
popa
gs
cmp
pusha
rcr
imul
mov
push
stos
shrl
out
jbe
nop
xlat
aaa
pop
test
pop
and
loop
fwait
stos
xchg
mov
sbb
adc
jg
jae
sbb
adc
ret
cmp
lock
ret
movsl
inc
fistps
xor
adc
arpl
hlt
shrb
fstl
add
push
jl
in
sbb
jg
sbb
or
or
fucompp
sbb
xor
mov
adc
int
fistpl
gs
cwtl
out
mov
es
mov
xchg
xor
sbb
stos
testl
pop
cmpsb
hlt
repnz
adc
jge
sbb
sbb
call
jle
stos
or
inc
xchg
mov
call
mov
jnp
sti
mov
push
push
int3
or
nopl
rorl
inc
outsb
daa
loopne
mov
mov
push
pusha
aam
gs
jmp
lret
inc
dec
sub
jg
xor
movsb
xchg
xchg
pop
jp
sub
subb
sub
adc
subb
fbld
cmpsl
imul
dec
xchg
in
call
mov
in
add
stos
mov
cmp
ja
shl
data16
daa
push
mov
out
push
scas
cwtl
iret
or
xor
mull
lea
fiadds
out
or
rcr
mov
les
adc
push
jb
movsl
mov
aaa
testl
out
cmpsl
xor
jae
sub
int3
decl
dec
push
xchg
cmp
mov
mov
shlb
fwait
inc
sarb
jno
in
mov
scas
pop
into
dec
test
mov
mov
add
sbb
and
dec
cltd
mov
cmp
mov
sbb
pop
xchg
fildl
lods
ja
sub
push
inc
jbe
shlb
arpl
push
sbb
rcl
dec
cmp
imul
fs
mov
inc
add
pop
cmp
movsl
mov
jl
cmp
or
dec
dec
dec
ret
xchg
in
out
cmc
jns
mov
cld
lods
pop
jmp
lea
adcb
ror
dec
dec
adc
mov
sbb
fwait
repnz
adc
cltd
pop
or
ret
cmp
jno
test
sub
rorb
add
push
int3
inc
mov
add
and
movsb
nop
pop
arpl
addb
push
iret
stos
xchg
adc
add
leave
xchg
movsl
sahf
mov
jmp
or
pusha
sbb
dec
mov
mov
imul
popa
or
loop
and
testb
jl
pop
hlt
rorl
shlb
add
inc
fdivp
push
and
xor
mov
pop
popa
jo
xor
cmp
xlat
imul
and
add
popf
dec
xor
jne
pop
fs
mov
jnp
fmull
dec
in
or
lahf
or
popa
std
sub
pusha
adc
stc
loop
xchg
call
jmp
sub
bound
mov
sub
fmul
mov
vaddps
jo
outsb
scas
loopne
xor
rcl
mov
pop
cmp
push
das
test
std
or
adc
out
je
leave
pop
sub
mov
dec
dec
pushf
roll
inc
lods
fisttpll
cmp
pushf
lret
jb
mov
xchg
andl
xor
and
js
or
push
and
sbb
outsl
xchg
int
dec
ror
sub
mov
cmp
sbb
xchg
adc
push
mov
cmpsl
repnz
nop
mov
loope
cmc
in
mov
pop
clc
xchg
dec
fbstp
cmpl
adc
jne
mov
pop
repnz
mov
cli
push
in
lods
mov
popw
jg
rcrl
push
xchg
mov
add
add
insb
xor
cmp
add
push
out
testl
xor
mov
lss
xchg
repz
adc
das
test
cmp
push
rolb
push
filds
cmp
ret
xor
dec
gs
jge
cmpsl
jae
and
inc
or
roll
stos
and
dec
stos
jge
cmpsl
rcl
cmc
cli
mov
xchg
sub
fbld
lock
lods
outsl
sbb
mov
sub
xor
inc
mov
aad
testb
xchg
push
int3
pusha
push
ss
hlt
jnp
adc
addb
dec
fs
dec
push
fimuls
mov
add
dec
lea
and
mov
aam
jae
int3
mov
push
jae
xchg
pop
lods
cltd
sbb
dec
push
insb
mov
sub
repnz
arpl
xchg
lods
aad
push
nop
add
loopne
fsts
xchg
imul
or
ret
addb
sub
fsubl
xchg
mov
cmpsb
jns
jns
or
aam
dec
dec
adc
imul
lock
rcrl
pop
cmp
push
out
mul
cwtl
clc
jbe
sbb
mov
out
mov
mov
bound
mov
call
xchg
and
out
inc
fwait
mov
cs
lods
gs
jb
pop
psubsb
lds
push
push
in
pop
jge
jp
nop
mov
scas
inc
scas
fdiv
inc
out
and
fcmovnb
jecxz
jecxz
test
popa
xchg
cmp
neg
sarl
cmc
and
inc
and
inc
xor
jno
inc
in
hlt
xor
xor
push
sub
test
ret
xor
sbb
in
insb
enter
js
mov
loope
inc
pop
movsl
pop
mov
cmp
mov
inc
aaa
mov
shrb
push
mov
lcall
add
lds
fs
in
mov
cmp
lcall
push
or
ja
sbbb
fsubrs
rorl
or
sub
call
xor
in
inc
sbb
inc
jb
xchg
lock
ret
outsb
int3
and
sbb
dec
test
cli
cmc
notl
mov
push
aad
insb
test
sub
shrb
mov
fbstp
pop
arpl
or
xchg
mov
lret
jo
iret
out
and
and
mov
mov
ffreep
cmpsl
cli
punpckhwd
and
sbb
pop
lret
loop
js
mov
xchg
pop
jecxz
mov
mov
mov
jno
jp
outsb
lret
xor
mov
dec
rclb
cmpsb
lcall
imul
adc
stos
mov
push
mov
mov
dec
cmp
jg
add
mov
rcll
in
outsl
flds
fisubl
push
int3
nop
lods
in
addl
fs
hlt
sbb
in
aas
pop
push
adc
clc
fwait
xchg
mov
inc
jns
xchg
lock
inc
jns
xchg
test
cmp
sub
push
fs
inc
mov
fmulp
sub
jae
daa
fimull
or
sbb
or
or
sbb
jbe
push
xchg
xor
pop
stc
mov
and
add
dec
push
cwtl
mov
inc
sbb
inc
arpl
cltd
cmpsb
xor
sub
frstor
addr16
mov
cmpsl
mov
sahf
cs
cmp
push
aas
xchg
mov
fcoml
inc
call
std
push
sbb
add
jecxz
pusha
leave
mov
push
hlt
fmul
and
sbb
icebp
lahf
inc
jbe
aaa
add
loop
decl
aad
push
cmpsb
mov
mov
cld
inc
mov
jle
ret
loop
test
jae
dec
gs
dec
in
inc
int
lcall
into
jp
lahf
add
gs
addr16
aad
mov
ja
xor
and
mov
movsb
rol
jmp
cmp
push
sahf
rcr
or
push
cmp
pushf
push
jecxz
jp
in
scas
int3
stos
mov
lods
jmp
push
aam
es
fcmovnbe
dec
push
sbb
xchg
xor
imul
and
mov
dec
push
cmpsb
add
lods
push
fistl
xor
jns
lods
loopne
ret
cwtl
in
pop
int3
sub
in
jno
mov
outsb
cwtl
add
cmp
jl
or
les
pop
adc
and
push
hlt
mov
sbb
scas
sbb
test
push
test
push
push
clc
dec
add
imul
in
inc
mov
enter
sbb
mov
mov
sbbb
out
sbb
call
pop
orb
ds
push
jb
pop
jecxz
sub
ret
in
fcoml
les
gs
xchg
cli
shll
enter
mov
cmpsb
add
inc
es
icebp
xor
lahf
lret
lcall
pand
pop
repnz
push
out
push
xor
test
add
sbb
stos
in
popf
mov
inc
lock
daa
test
cmc
cmp
jmp
add
shl
add
mov
push
sub
xchg
mov
mov
cltd
push
aaa
gs
cmc
popf
sahf
jl
aaa
add
jl
adc
and
cmp
xchg
aaa
xor
and
lods
into
aad
int3
addr16
cmp
fwait
movsb
aaa
loop
fcompl
into
xchg
pop
aam
in
ret
dec
jbe
dec
scas
add
lcall
cmpl
jns
pop
add
dec
inc
xchg
jns
loop
lds
sub
std
and
roll
mov
jns
xchg
lods
push
les
inc
ret
or
dec
adcb
mov
mov
rorb
sub
in
test
je
mov
inc
xor
jne
adc
inc
loopne
notb
push
cwtl
push
sbb
mov
dec
dec
adc
dec
icebp
stos
iret
dec
cmpsb
cmpsl
or
jl
cmc
repnz
in
lret
push
adc
stc
pusha
and
lret
mov
xchg
adc
inc
xor
sbb
rorb
mov
dec
out
out
popf
jp
add
cltd
sbb
std
xchg
dec
iret
ss
push
fnstsw
repnz
repnz
cld
mov
xchg
push
in
lret
outsl
jmp
push
xchg
cltd
sbb
push
stc
pushf
int3
push
std
jno
or
mov
sub
fwait
es
or
ret
push
sub
bound
mov
mov
push
or
pop
ja
jp
xchg
inc
stc
xor
or
jb
les
xor
repz
dec
cmp
lret
sbb
mov
mov
cmp
mov
and
push
or
imul
aas
pusha
and
rcll
or
aaa
or
inc
and
decb
push
xchg
ja
or
loope
push
add
lods
cmpsl
mov
mov
loopne
jl
ror
sub
das
cmp
dec
mov
adc
in
out
xor
jnp
add
sbb
add
pop
pusha
sti
outsl
xor
iret
movsb
call
leave
xor
mov
sub
cmp
or
nop
and
cwtl
hlt
enter
mov
cmpsb
inc
mov
and
xchg
dec
sub
aad
inc
xor
dec
ljmp
imul
jnp
xlat
cld
movsb
cwtl
in
dec
cs
jmp
jge
lds
pop
xchg
aaa
push
lret
std
cmpsb
inc
std
push
rcrl
ss
lods
ds
xchg
in
inc
adc
je
cmpl
and
pop
cltd
out
inc
lods
cmp
jo
stos
lods
dec
fidivrl
fsubrl
pop
testl
loopne
cmpsl
ja
cmp
scas
ss
mov
xchg
mov
mov
and
out
xchg
pop
adc
sub
std
sarb
lcall
imul
xor
daa
xor
add
xor
into
and
xor
xchg
inc
mov
cmpsl
mov
mov
inc
insb
mov
and
test
rcl
fbstp
push
sub
lcall
sub
ljmp
cmp
into
cmpsl
hlt
xor
or
cvttps2pi
clc
and
mov
jae
lret
test
and
sub
aam
or
pop
mov
mov
mov
aas
rcrb
cs
popa
adc
addr16
jp
adc
xchg
inc
dec
ds
inc
into
xor
pushf
inc
in
add
loope
notl
sub
xor
pushw
pop
aas
fs
mov
or
push
or
hlt
std
jecxz
out
xor
dec
fisttpl
xchg
imul
cmp
les
xor
pop
dec
imul
inc
xor
jnp
pop
or
addb
test
rcl
dec
fsubr
push
movsb
and
xor
movsb
sub
outsl
adcb
xchg
sub
push
xchg
imull
adc
dec
dec
stc
icebp
mov
inc
dec
inc
adc
xor
mov
push
add
jg
jmp
sbb
push
scas
add
jge
rcll
dec
fsubl
push
stos
rcr
sub
sbbb
loopne
adc
mov
hlt
ds
jmp
ficoml
add
mov
dec
scas
in
fisubrs
int
out
popa
pusha
inc
inc
stos
shl
roll
test
push
test
movsl
lods
and
sub
cmpsl
clc
xchg
jecxz
inc
or
ret
popa
aad
jmp
mov
jl
jb
add
push
xchg
jbe
push
jg
in
int
cmp
sub
cmp
cmc
cmp
leave
inc
push
or
push
lds
ljmp
mov
testl
mov
aad
in
sbb
add
cmpsb
push
divb
nop
roll
mov
mov
add
fadds
mov
shlb
mov
adc
fisubrl
leave
movsl
cmpb
add
push
add
or
imul
xor
addl
pop
jnp
scas
sub
or
push
xor
outsl
roll
sbbl
xlat
or
roll
cs
mov
cmc
hlt
or
notb
bound
ja
cmc
push
in
cmpsl
adc
in
in
cmp
jnp
sub
or
loop
test
cld
push
lahf
movsl
dec
add
adc
adc
daa
mov
pop
push
mov
push
pop
push
and
out
stos
inc
lahf
into
and
or
pop
les
pop
rcrb
xor
lret
adc
push
add
shl
adc
push
scas
movsb
nop
add
loopne
dec
ds
mov
outsl
scas
mov
rolb
lds
push
mov
negb
int
pop
dec
mov
dec
dec
in
xorb
jg
mov
or
ret
pop
mov
mov
mov
das
mov
sbb
pushf
push
mov
imul
inc
adcb
call
hlt
jmp
add
inc
cmp
sub
test
add
push
add
xor
loop
sahf
fstps
push
into
cmpsb
sbb
pop
dec
cmc
rol
fldln2
pop
repz
add
out
shrl
jg
and
aaa
or
jecxz
jle
lret
jns
xchg
xor
adc
xchg
or
pop
xor
xchg
jo
inc
pop
loope
out
add
lock
pop
jl
or
test
dec
mov
cltd
aam
out
sub
fldt
or
cmp
imul
stos
xor
pop
jbe
jmp
test
and
pushf
or
jno
adc
fildl
pop
mov
out
ja,pt
or
push
lods
dec
lret
insb
outsb
in
ds
pushf
xchg
outsb
jnp
pop
pop
cmpsb
push
cli
js
xchg
icebp
iret
mov
fildll
mov
mov
fwait
mov
mov
inc
movl
cmp
pop
pop
and
dec
ljmp
mov
sti
mov
cmpsl
inc
clc
or
fsubs
cld
test
or
mov
test
jge
ficompl
arpl
jno
adcb
mov
jno
xchg
xchg
aam
dec
xchg
stos
pop
fwait
sbb
sub
mov
lods
jg
sarb
into
xor
mov
cwtl
cmp
stc
lret
es
das
in
pushf
lahf
aad
and
cli
lock
mov
mov
dec
sbb
mov
jle
dec
lods
mov
ret
sbb
xor
inc
in
mov
add
mov
mov
xor
sahf
lcall
jle
dec
arpl
mov
rolb
adc
enter
push
shrl
add
and
xchg
push
dec
xchg
xor
rorl
jmp
mov
pop
call
pop
ss
push
sub
jno
aaa
and
insl
mov
sub
xchg
sbbl
out
cli
testb
mov
xchg
dec
dec
inc
push
subl
mul
mov
cmpsl
push
les
inc
rorl
test
sub
mov
dec
cwtl
cmp
add
sbbl
jno
lahf
xlat
sbb
dec
inc
and
shlb
in
sahf
mov
or
subl
in
dec
test
cld
faddl
popf
xor
add
jmp
mov
in
dec
and
roll
pop
xchg
cs
pushf
shrl
or
add
out
sbb
movsb
jecxz
adc
fisubl
mov
jbe
jg
inc
test
pop
arpl
in
dec
in
pop
int
jge
fcmovbe
ss
fiadds
faddl
mov
mov
scas
xchg
push
pop
jno
dec
cmp
pop
cld
pop
outsl
adc
sub
lcall
pop
cmpsb
adc
nop
repnz
sub
push
xchg
hlt
nop
sub
mov
insb
xchg
ret
pop
xchg
push
in
test
jge
mov
lret
insb
arpl
lret
jno
ja
cld
rcrb
hlt
call
rcrb
cs
lret
and
cmp
adc
cmpb
mov
out
cltd
mov
mov
ja
pop
mov
int3
ja
jge
dec
cmp
dec
les
jae
aam
push
ret
jle
movsl
lods
or
jp
mov
sub
xchg
mov
lods
dec
xor
test
add
xchg
addb
or
mov
add
fsubs
fucomi
test
sub
cwtl
cmpsb
adc
inc
dec
sbb
outsb
jno
mov
pop
xchg
sub
xchg
arpl
pusha
fs
outsb
sub
nop
mov
ror
sub
repz
sub
add
adc
jg
xchg
mov
test
xchg
stc
std
movsb
push
mov
sub
imul
cmp
loopne
orb
mov
cltd
fidivl
loope
addb
push
adc
add
cmpsb
and
repnz
pop
stc
and
or
idivb
xor
rcrb
lret
inc
jecxz
popf
jmp
dec
cs
push
test
pushf
mov
or
sbb
js
cmpsb
sub
mov
sbb
insl
mov
cmc
cld
push
shll
xor
rdtsc
lret
or
cmp
aam
lret
add
cld
mov
std
lahf
sbb
bound
push
inc
cmp
enter
test
push
inc
inc
mov
je
xlat
pop
pop
lods
pop
lock
sub
aad
adc
aaa
lea
popa
sbb
cmpsb
jge
inc
sub
dec
outsl
sarl
movsl
pop
loop
ljmp
inc
add
ret
loopne
jbe
out
xor
mov
jp
mov
push
mov
lods
test
insb
mov
or
fisttps
or
sub
fsub
mov
nop
cmc
cmp
lcall
outsl
xor
sub
xlat
leave
loop
adc
movsl
aaa
cmc
lret
shlb
cmp
mov
push
mov
aad
outsl
movsb
dec
or
inc
sbb
mov
pop
cs
jbe
mov
mov
sub
cmp
push
repz
and
push
stos
call
ds
les
push
movsb
jbe
mov
shlb
fisubl
mov
cmpsb
adc
sbb
dec
cmpsl
insl
mov
mov
xchg
adc
out
xor
rcll
add
sub
cmpsb
in
fcomps
out
jecxz
lds
rcl
into
or
jp
xchg
dec
jl
mov
adc
dec
dec
xor
mov
insb
sub
andl
test
test
cltd
pop
testb
or
sbb
dec
and
mov
fisttpll
mov
rclb
push
cmpsb
pop
xchg
push
mov
fnstsw
icebp
movsl
xor
out
push
mov
popa
cmpsl
cli
xchg
xchg
mov
mov
mov
mov
test
int
in
out
pushf
out
mov
jno
xor
cmpl
cmp
test
jg
cltd
popa
test
push
cmc
jg
imul
add
sti
test
xor
cmp
out
pushf
addb
jne
sub
and
in
xchg
shll
push
xor
scas
and
bnd
inc
rorl
movsb
and
outsl
inc
or
cmp
mov
mov
mov
sbb
mov
fiadds
adc
into
xchg
jmp
jg
adcl
popf
or
int
ret
adc
bsr
inc
add
adc
sub
fcompl
jl
and
icebp
sbb
push
fisubrs
or
imul
adc
shl
pop
dec
sub
int
jecxz
and
xor
addr16
es
jo
jno
inc
and
fstpt
add
push
loopne
fiaddl
jns
push
adc
inc
sub
mov
js
pop
xlat
pop
int
or
das
xor
push
out
jmp
xor
repnz
sarl
xchg
pop
shrb
lcall
popa
pop
jp
mov
clc
push
dec
pop
mov
jns
mov
and
adc
orl
cmp
data16
adcl
flds
cmc
dec
xchg
scas
xchg
xchg
inc
or
push
lahf
mov
and
sub
fs
sub
pop
loope
mov
loop
pop
mov
popf
and
aam
dec
icebp
test
pop
mov
notl
arpl
push
loop
cbtw
push
and
in
popa
pushf
push
stc
xlat
jno
inc
add
popa
xor
mov
mov
push
out
cwtl
iret
sub
test
sahf
add
push
jnp
test
jecxz
cli
pop
and
mov
inc
and
adc
pmaxsw
jle
in
cmp
inc
int3
fistpl
or
dec
fistpll
add
mov
aam
push
mov
pop
aam
into
jmp
cmp
pop
shll
es
lret
inc
shlb
daa
push
fdivrl
jmp
ret
mov
bound
mov
jecxz
arpl
add
leave
pop
insl
jg
sub
sub
xor
ja
movsb
push
mov
and
add
imul
and
insl
xchg
aad
or
in
outsb
fadds
xor
sahf
movsl
push
scas
outsl
add
gs
ja
mov
cld
in
adc
push
push
hlt
pop
xchg
cmp
cmp
aas
ret
jns
enter
push
in
subb
xor
mov
jnp
in
dec
rorb
jecxz
mov
clc
sti
sbb
push
mov
mov
into
jecxz
mov
into
pushf
jb
dec
lock
fcmovnu
negl
outsb
ljmp
das
dec
pop
dec
test
cli
mov
lods
and
mov
mov
test
and
scas
clc
or
lcall
mov
mov
stc
out
jne
ret
scas
mov
rcrl
xor
or
xchg
cmpsl
cs
in
cmpb
pop
xchg
and
sbb
inc
fbstp
jl
daa
rorl
mov
outsb
fisttpl
mov
repnz
ljmp
pop
bound
aam
inc
xor
scas
push
mov
sub
pop
jno
pop
mov
inc
sub
mov
push
hlt
stos
jle
mov
mov
xchg
outsl
clc
jno
loopne
mov
cmc
cmp
mov
loope
rcr
popl
dec
mov
fidivs
push
out
mov
adc
mov
add
dec
push
outsb
or
dec
popa
jl
dec
jb
jmp
mov
movb
lock
jns
stos
stos
mov
dec
jmp
mov
das
jp
mov
test
dec
adc
add
insb
repz
adc
outsb
cltd
out
mov
mov
mov
xchg
repnz
outsl
inc
jl
mov
ret
bound
out
sbb
add
int
or
mov
dec
data16
push
add
inc
insb
sub
xor
push
pop
jbe
test
test
or
add
rep
repz
loop
repz
pop
push
cmp
dec
and
mov
rcll
add
bound
inc
cmpsl
insw
iret
jl
mov
inc
pop
xchg
cmp
push
pop
lock
jnp
push
cld
cltd
fwait
jmp
pop
shl
nop
in
scas
lock
pop
or
xor
xlat
in
hlt
sahf
cmp
pushf
push
dec
adc
sahf
add
nop
iret
push
mov
fldl
lret
pop
cmp
loopne
imull
jne
rorb
cmp
pop
fisubs
leave
mov
and
add
cmp
mov
mov
in
push
jo
push
pop
lock
mov
jne
xor
or
movsl
adc
popa
pop
int3
or
push
mov
in
adc
cld
dec
mov
push
ret
sbb
fwait
push
push
ds
adc
repz
cmp
mov
mov
mov
jnp
xchg
adc
repnz
stc
mov
push
cmpsl
xor
xchg
ja
cmp
in
in
fnstenv
xchg
or
cs
push
fsub
sub
in
jnp
aad
mov
dec
mov
push
fidivrs
addr16
mov
nop
xor
mov
in
dec
mov
loopne
sub
sub
loope
fldt
stos
lods
loop
sbb
or
loop
jp
add
in
jae
jg
push
loope
and
inc
or
das
insb
jecxz
mov
int
frstor
xchg
in
cs
cmpsb
imul
lahf
mov
mov
and
mov
daa
mov
push
xchg
jns
test
jno
roll
and
xchg
xor
xor
decl
xlat
or
adc
lods
call
sbb
pushf
jnp
cltd
sti
mov
movsb
sub
push
ret
jecxz
sbb
les
add
xchg
pop
jnp
fdivr
repnz
fadd
andl
subb
fsubrs
mov
mov
push
sti
push
mov
fstpt
inc
mov
jmp
bound
lcall
in
ds
add
in
jge
mov
pop
notb
mov
sbb
mov
nop
test
push
sbb
sarb
xchg
nop
cmpsb
sahf
pop
or
loop
arpl
repnz
xchg
adc
mov
xor
loop
das
jg
or
dec
xchg
mov
jge
jl
sbbl
loope
xchg
mov
rcrb
loopne,pn
or
pop
cmc
movsl
aas
jge
mov
popf
aad
mov
cmp
ds
lods
decl
daa
xor
sbb
adcb
pop
movsl
ljmp
insl
dec
mov
cwtl
test
rcll
mov
dec
mov
rolb
in
mov
xchg
leave
xchg
daa
mov
xchg
scas
int3
lahf
jns
push
cmpsl
gs
fistpll
outsb
dec
push
mov
dec
push
cmpsl
add
adc
pop
mov
clc
adc
mov
cli
fdiv
movb
mov
cltd
jge
pop
jnp
pop
icebp
jg
dec
pusha
push
adc
scas
pop
mov
dec
and
and
push
pop
mov
fidivl
mov
adc
stos
mov
test
sbb
cmp
stc
inc
subl
and
out
xchg
hlt
es
out
dec
sub
pop
fsub
sbb
in
ljmp
sbb
sub
pop
sti
mov
int3
inc
sub
push
inc
ljmp
push
fmuls
push
lret
bound
mulb
pop
cli
aas
jae
cmp
sub
cmp
sbb
cmp
add
jbe
or
repnz
insl
push
pslld
jne
mov
dec
hlt
inc
xor
rclb
aaa
std
xor
inc
mov
sub
mov
sub
sbb
add
repz
dec
adc
sarl
sarb
cmp
rolb
scas
xlat
dec
ds
jns
dec
fwait
mov
imul
andb
iret
inc
fadds
ja
fisttpll
mov
icebp
cmpsl
xchg
add
movsl
xchg
mov
jle
in
and
push
mov
pushf
mov
cltd
aam
dec
sub
test
mov
xor
xchg
int3
sbb
pop
pushf
adc
jbe
stc
and
or
es
inc
mov
mov
mull
aad
pop
cmp
xchg
ljmp
sbb
insb
les
mov
lcall
xchg
loop
add
test
sub
stos
sub
cmp
sbb
push
mov
adc
mov
pop
adc
xchg
add
inc
aaa
adc
sahf
nop
mov
test
out
mov
out
fcmovu
lret
into
dec
dec
fldenv
test
rcrb
pop
dec
dec
xchg
push
pushf
test
sbb
push
jl
jae
dec
cmpsb
push
fmuls
rol
mov
cmp
es
push
in
push
dec
pop
popa
cmp
inc
dec
pop
cmpsl
cmc
scas
iret
mov
sbb
aas
jb
lret
inc
dec
bound
pop
or
xchg
dec
dec
stos
and
scas
fistl
inc
cmp
das
mov
adc
lahf
ror
xchg
xchg
pushf
repnz
adc
sub
adc
pop
bound
popf
loop
mov
lds
xchg
aaa
pop
and
adc
sbb
out
pop
cmc
sbb
mov
pop
pop
mov
nop
repnz
stos
adc
std
adc
shll
pop
mov
insb
push
adc
lea
mov
mov
inc
std
push
test
loop
adc
es
scas
addb
or
shlb
xor
dec
and
popf
lods
jmp
push
int3
loopne
jne
int
add
test
sbb
adc
inc
daa
mov
push
out
push
fsts
pop
push
xor
test
lds
cmp
shll
loopne
xchg
iret
mov
fmul
lret
aam
psubb
xchg
dec
mov
ljmp
ja
dec
fcompl
pusha
shll
cmp
or
arpl
push
cmp
mov
fidivl
dec
std
push
outsb
bound
or
or
dec
leave
push
jge
jno
push
xor
jl
daa
mov
inc
or
scas
xor
insb
dec
es
mov
fcompl
sbb
inc
test
sub
mov
out
daa
fwait
jbe
clc
cmpsb
xor
loop
sbb
aam
sub
daa
fs
test
idivl
and
imul
mov
or
fiadds
mov
pop
push
out
scas
sbb
push
push
push
or
scas
inc
pop
stc
mov
repnz
sahf
fstpl
les
mov
int3
push
and
lods
xchg
mul
test
sub
loope
adcb
roll
out
cwtl
push
in
and
inc
call
mov
pop
cmpsb
addr16
pop
fidivl
fwait
pop
stc
ds
fidivrl
sbb
xlat
mov
aad
jle
mov
sbb
dec
ret
xchg
push
add
jbe
lret
pop
xchg
fistps
roll
scas
sub
das
add
stc
jp
insl
lock
mov
daa
out
dec
add
jb
outsl
cltd
sub
adc
popa
dec
subb
jge
out
sbb
inc
sbb
push
xchg
fisubrs
jmp
add
jecxz
repz
fbstp
sub
mov
cli
push
cmc
pop
sahf
mov
xor
cmc
enter
mov
and
xchg
adc
dec
inc
rdpmc
xor
mov
insl
sub
dec
sar
cmp
mov
dec
push
fwait
mov
js
pop
and
push
psllq
rolb
das
clc
fistl
xchg
fsts
xchg
pop
nop
fstpt
mov
mov
stos
ss
insb
ret
mov
movsl
outsb
lea
bound
aaa
sbb
inc
test
jecxz
adc
daa
and
adc
daa
shl
xchg
dec
push
test
paddsb
pop
sbb
ror
mov
lods
bound
jae
out
das
je
lret
adc
sbb
loopne
rclb
nop
mov
sub
iret
gs
jp
cmpsb
loop
idiv
push
mov
rcll
sub
inc
dec
and
jb
dec
mov
pop
cli
movsl
lds
sub
fs
pop
xchg
adc
jns
cwtl
int
fsubrs
incb
sub
xor
dec
mov
in
and
push
ret
cmp
icebp
out
xchg
es
inc
loope
inc
test
sbb
int3
push
cltd
xchg
scas
sub
popf
lods
loope
push
add
push
mov
enter
shll
rorb
lret
jb
pusha
dec
push
insb
mov
jge
das
inc
in
fmull
jmp
lea
jbe
je
loopne
dec
or
sub
push
cld
xchg
test
jne
mov
outsb
popw
out
push
mov
mov
adc
loope
out
stos
xchg
push
pop
or
stc
movsl
aas
push
sub
popf
add
mov
mov
mov
xor
add
or
push
test
jmp
ja
jbe
shll
insl
arpl
dec
mov
aad
dec
mov
jmp
add
push
daa
xchg
insl
inc
aam
pop
outsl
inc
stos
ret
pop
test
stos
sarl
and
add
push
add
inc
roll
xor
rcll
xchg
cmp
aad
dec
cmc
arpl
xchg
mov
outsl
jmp
subl
mov
cmp
ds
xchg
ljmp
adc
stos
push
jp
sub
push
adc
repz
cmp
in
jge
mov
adc
dec
aas
mov
test
cmc
or
jne
or
and
out
add
loop
mov
lds
or
xor
dec
leave
imul
push
xor
das
in
imulb
mov
mov
xchg
jg
clc
rep
dec
movsl
shlb
inc
adc
and
adc
mov
rcll
fcoml
out
xchg
sub
das
repnz
inc
inc
aam
pop
cs
in
mov
out
push
sub
add
mov
cmp
ror
in
cld
jo
popf
sbb
or
popl
add
scas
ftst
push
adc
imul
rorl
test
cs
aaa
xchg
mov
add
xorl
rol
stc
push
stos
mov
cmp
mov
lods
mov
cs
and
pop
xchg
mov
data16
cmp
mov
xor
lea
int
shll
xchg
pop
out
push
inc
xor
hlt
or
fistpll
jle
mov
dec
jae
inc
int
std
roll
jae
mov
xchg
mov
dec
xchg
sub
fisubrs
je
mov
stos
repnz
out
mov
or
xchg
iret
cmp
out
sbb
fcomip
es
sub
push
fcomps
roll
cmp
add
mov
push
or
lds
push
clc
lods
hlt
jmp
inc
sub
lds
mov
test
xchg
iret
inc
out
notb
cmpsb
mov
or
xchg
icebp
loopne
in
sub
out
inc
in
fistpl
int3
rorl
pop
inc
pop
cmp
in
cmp
test
rclb
jl
jne
mov
xor
or
sub
lret
icebp
mov
pop
fimuls
pop
xchg
rcrb
jns
mov
push
inc
arpl
dec
mov
sarb
adc
cmp
imul
aad
rcrb
rcrl
ljmp
and
pop
pop
push
mov
imul
cwtl
ret
mov
mov
dec
push
subl
into
nop
lahf
cmpb
inc
cmp
xchg
pushf
adc
mul
enter
repz
mov
or
imul
addb
loope
ja
pop
ret
or
lret
jle
and
shl
aaa
shrl
jbe
imul
aad
out
adc
je
inc
iret
in
fsubp
out
mov
and
inc
scas
cmp
sbb
mov
rolb
repnz
push
inc
sub
and
pop
popf
adc
sub
outsb
pushf
daa
sbb
clc
push
pop
lahf
idivl
sub
repz
or
jge
repz
jp
or
sub
out
adc
jp
int
sbb
cmp
nop
movsl
adc
inc
push
lret
vpackuswb
das
mov
inc
mov
xchg
lahf
xor
inc
fidivl
enter
mov
dec
xor
push
dec
add
push
mov
xchg
sbb
lods
aam
je
popa
leave
int
jmp
mov
daa
pop
inc
dec
movsb
xor
loope
lods
orl
iret
adc
and
cli
test
shll
dec
gs
shl
xor
mov
scas
mov
int3
fistps
push
cwtl
int3
add
add
pushf
mov
aam
or
mov
sbb
repz
jp
cmp
jl
lock
dec
insb
clc
repz
js
add
mov
dec
int
sbb
ss
lahf
ja
jp
cmp
cwtl
imul
jb
or
mov
popf
cmp
pop
jp
push
inc
adc
popa
mov
jg
xchg
jb
xor
cmp
sbb
mov
adc
mov
ret
pop
cmp
cmp
add
pusha
cmpl
adc
or
mov
or
xchg
test
rcrb
test
add
popa
notb
dec
cmp
mov
into
addr16
jne
adc
jne
in
popa
push
sarl
cli
pusha
stc
sbb
dec
in
and
xlat
adc
cmp
pop
ret
dec
lret
das
mov
inc
enter
and
ds
pop
jnp
mov
jns
add
jl
xchg
nop
adc
add
dec
popl
test
and
out
insb
jg
cltd
jbe
and
clc
dec
mov
mov
xchg
aas
inc
and
mov
xchg
ret
into
push
fnsave
sub
cld
lret
jnp
arpl
add
arpl
fcmovnu
bound
mov
outsl
ret
pop
icebp
lods
jl
cmp
test
and
ja
mov
jbe
inc
mov
inc
dec
orb
jb
rorb
mov
sbb
xor
jge
cwtl
mov
cltd
cmp
mov
cmp
divl
inc
ljmp
or
mov
cmc
frstor
xor
ret
loop
dec
and
ret
pop
add
or
or
push
mov
lahf
cmp
adc
pop
dec
rcll
pop
arpl
lock
test
and
jmp
es
add
mov
cmp
adc
dec
sarb
ljmp
xor
inc
test
and
scas
cmp
or
xlat
lahf
enter
pusha
add
fsubrs
lock
mov
inc
cltd
je
jge
inc
insl
bound
cmp
jb
push
mov
and
sahf
and
cmp
mov
push
fwait
shll
enter
and
das
incl
mov
dec
faddl
fbstp
pop
xchg
dec
fildll
jp
xchg
push
push
insb
dec
sbb
lret
adc
pop
rcr
mov
call
rcr
je
pop
mov
and
shlb
shll
scas
push
xchg
push
mov
push
xchg
shlb
xchg
loope
push
icebp
mov
pop
sub
mov
add
adc
jl
mov
cmp
xorl
mull
fwait
cmp
mov
xchg
fimuls
push
and
inc
push
dec
jle
cs
dec
push
pop
cmc
cwtl
push
push
pop
pop
arpl
int
fbld
dec
or
or
sub
jge
cmpsl
cmpsl
push
je
add
mulb
dec
mov
insl
pop
sbb
or
shrl
and
xor
out
icebp
add
and
xchg
inc
mov
inc
bound
inc
mov
xchg
mov
imul
jnp
xor
movsb
test
push
pop
jle
and
arpl
sbb
and
xchg
sbb
push
loopne
cmp
das
shrb
push
dec
mov
cmp
aas
scas
push
adc
fnstcw
adc
add
dec
enter
xchg
in
mov
in
pop
jmp
mov
push
mov
mov
test
push
arpl
cmp
mov
lret
and
adc
and
push
gs
mov
jne
dec
outsb
outsl
cmpsb
mov
sbb
pop
mov
dec
test
in
out
mov
push
pop
adc
xchg
dec
lret
mov
push
inc
fwait
scas
clc
mov
sbb
imul
cmp
sub
notb
loopnew
icebp
testb
dec
dec
cmp
mov
lea
in
xchg
sbb
and
dec
sub
pop
aaa
aaa
popf
cs
adc
pop
popa
imul
push
pop
jp
out
jno
sbb
shlb
ja
or
mov
sbb
and
jo
fwait
push
sub
adc
sbb
or
lret
lock
jmp
stc
lret
xchg
adc
xchg
ljmp
cli
ljmp
xchg
shll
enter
dec
js
cltd
lret
mov
mov
movsb
xchg
movsb
mov
rolb
movsb
sti
in
sub
or
shll
sbb
jg
xchg
enter
inc
inc
push
adc
and
sbb
fs
sarb
sbb
icebp
int
out
movsl
nop
push
fldpi
sbb
stos
incb
in
out
mov
cmp
pusha
adc
sbb
sti
and
inc
mov
cld
xorl
cmp
push
adc
loopne
xchg
pop
pop
inc
ret
inc
dec
loop
lret
adc
lods
lea
in
cwtl
jns
cmp
adc
push
pop
sub
out
pop
stos
sbbl
popf
xor
mov
out
inc
pop
xor
lods
push
out
fs
xor
popl
cmp
cmpsl
inc
pushl
inc
dec
dec
mov
rclb
or
cmpsl
push
xor
cmp
pushf
push
adcb
dec
lods
jnp
cmp
dec
or
fisubs
jb
adc
js
cmp
or
push
or
test
and
xchg
jns
ficomps
pop
push
mov
outsb
push
imul
sahf
int3
pop
xlat
jbe
fmulp
scas
jns
cmpl
push
sbb
into
jmpw
jne
mov
lock
mov
or
pop
dec
out
and
xchg
dec
dec
mov
ljmp
sbb
cmc
mov
idivl
dec
pop
rorl
push
dec
push
cwtl
fisubs
scas
popa
mov
push
pop
lret
iret
mov
in
fcmovu
pop
cmp
add
in
data16
stos
mov
mov
cmpsb
mov
xor
adc
pop
pop
sbb
dec
data16
xchg
outsb
mov
or
pop
fistpl
fcoml
jle
aaa
jg
sbb
jp
jle
iret
das
scas
mov
imul
div
and
fcmovne
sbb
arpl
mov
xor
pushf
dec
push
inc
sarl
cs
adc
clc
sti
xor
sub
adc
inc
pop
sbbb
inc
insb
sbb
cmp
sub
js
sub
movsl
je
and
mov
rcl
inc
or
sub
xchg
dec
adc
cmp
xor
xlat
jge
decb
sbb
sbb
mov
xchg
mov
xchg
inc
insl
push
jmp
les
ror
out
inc
mov
data16
rorl
scas
push
loopne
movsb
rclb
dec
lods
mov
cmp
push
sbb
rorb
xlat
jae
add
pop
out
or
sbbb
jg
out
daa
add
cmp
jg
mov
dec
pushf
bound
rorb
adc
mov
adc
inc
cmp
sarl
lea
into
jbe
nop
loopne
lods
or
fcompl
shrl
insl
in
pop
sbb
add
or
fwait
cmp
ljmp
or
inc
clc
rorb
dec
jp
pop
loope
lea
stc
mov
push
mov
pop
xchg
popf
icebp
fnsave
cmc
dec
stc
mov
aad
and
call
mov
std
fucomi
mov
push
std
mov
std
jl,pn
sarb
xor
call
jmp
lods
adc
cltd
das
add
loope
and
mov
push
push
and
scas
and
push
mov
sbb
and
fisubrl
cmpsb
loop
orl
push
sbb
xchg
or
das
loopne
js
ds
clc
inc
mov
pop
jle
das
jne
data16
inc
xchg
cltd
fwait
mov
pushf
imul
sets
mov
xchg
xchg
iret
pop
fstpt
inc
push
pop
in
mov
arpl
shr
xlat
add
or
sbb
xlat
adc
fwait
xchg
outsl
or
cltd
aas
ja
push
cwtl
and
xor
push
aad
data16
jo
dec
sbb
addr16
test
jg
push
mov
push
inc
icebp
stc
jg
jbe
pop
lcall
push
and
fistps
add
inc
sub
divl
cmp
xor
mov
mov
cmp
push
lock
dec
mov
sub
int3
imul
out
sahf
aaa
scas
xchg
dec
xor
fimuls
push
test
and
rolb
mov
cmp
inc
jae
fistl
xchg
inc
push
inc
adc
jae
popa
xchg
xor
mov
mov
cmc
and
mov
mov
push
pmuludq
dec
xchg
xchg
and
mov
out
pop
test
mov
fs
inc
add
or
ret
inc
jnp
xchg
cli
std
int
cmp
stos
mov
les
xlat
pop
test
cmpsl
adcb
fcoml
pop
cmp
mov
popa
sub
jo
push
inc
rcll
jg
in
aas
sbb
jmp
out
sub
dec
sahf
call
rcrl
jns
jmp
xlat
mov
cmp
cmp
fldt
sub
test
sub
lods
adc
pop
daa
fs
dec
cmpsl
cmp
mov
or
popf
aaa
adc
cmpsb
aad
decb
or
cwtl
cmp
hlt
cld
adc
or
sub
ret
shlb
adc
cmp
jle
adc
mov
xchg
sub
sub
xchg
pop
lret
xchg
cld
scas
cmpsl
stos
stc
outsb
repnz
xor
hlt
test
jne
movsb
jnp
xlat
movsb
push
iret
fldcw
push
pushf
or
mov
inc
cmp
imul
hlt
jnp
add
jmp
mov
and
scas
int3
adc
mov
mov
sarb
sub
flds
lcall
lret
push
fdivrp
shrl
in
jb
sbb
mov
jae
out
test
jge
cmp
and
inc
mov
inc
xchg
test
and
push
jg
scas
push
jecxz
roll
sub
test
int
popa
xor
std
jmp
adc
adc
jae
xchg
add
push
jnp
in
loop,pn
adc
lahf
loope
xor
sub
xchg
and
push
and
push
push
push
lods
clc
and
xor
inc
add
notl
xchg
jne
outsb
fildll
add
les
cmp
jecxz
int3
or
push
addr16
adc
mov
jl
mov
adc
jg
or
inc
sub
movsl
xchg
repz
sub
xchg
cmp
mov
push
ljmp
outsl
pop
filds
aaa
push
bound
scas
adc
dec
int3
pushl
lock
js
dec
pop
pop
fwait
xor
xchg
cmpb
cmpsb
sub
in
mov
in
jl
arpl
xor
inc
xor
cs
xchg
repnz
xchg
push
in
push
fld
rcrl
int
ret
xchg
push
xor
ljmp
cmp
rcll
cmp
pop
adc
scas
aam
jg
sub
andl
aaa
mov
fldt
sahf
fmull
xchg
mov
sub
push
and
adc
adc
inc
scas
or
shlb
ja
out
xchg
xor
std
or
xor
movsb
popf
cmpsb
adc
ret
jb
cmpb
sub
lock
test
xchg
pop
sbb
cmp
pop
insb
cmp
mov
gs
jmp
sbb
xchg
pop
fidivs
repz
mov
jnp
adc
jo
sbb
pop
mov
or
or
fs
call
ljmp
fwait
lcall
pop
push
xor
gs
inc
stc
push
or
daa
sti
sub
imulb
and
out
cli
js
fcoml
popf
push
ss
mov
pusha
outsb
ds
bound
pop
sbb
setp
fiadds
movsb
dec
add
das
imul
ja
inc
mov
repnz
fisubl
outsb
fstl
add
stc
stos
pop
call
push
push
out
inc
jb
lahf
int
pop
orl
xor
adc
and
mov
push
sbb
sbb
mov
xchg
sbb
lea
mov
insb
push
and
sbb
lods
mov
fst
imul
cs
jp
mov
mov
or
nop
or
sub
push
inc
sti
rclb
int
lret
add
lret
mov
fisubl
test
mov
xchg
out
ret
sbb
leave
sub
cltd
sti
pop
adcl
dec
mov
mov
push
push
xchg
sbb
repz
pushf
jmp
add
movsb
fsubrs
in
sbb
jle
inc
cwtl
mov
fiaddl
jge
xor
push
mov
lods
lea
inc
insl
int3
enter
sahf
jae
or
mulb
inc
and
push
cmpsl
mov
adc
lock
outsl
sarb
jbe
clc
aas
std
cli
popa
cmp
and
fidivs
xor
sbb
fimull
ds
dec
scas
sbb
lds
aaa
push
push
xchg
insb
xor
mov
cmp
mov
lahf
fsubrs
lcall
ret
add
pop
sahf
sub
xor
shlb
sbb
xor
jg
or
sbb
lock
add
inc
mov
jne
and
stc
in
imul
std
in
push
jl
jmp
or
xlat
and
sbb
adc
jae
loop
aaa
stos
imul
sub
out
push
and
xchg
std
pop
in
jno
jne
xor
repz
into
std
push
call
mov
mov
mov
inc
xchg
lock
fsubs
les
cld
sbb
mov
jg
cmpsl
xchg
lock
adc
dec
and
lods
pop
std
stos
jg
pop
add
cmp
in
inc
pop
fstps
icebp
leave
xchg
fisubrs
out
mov
lods
fs
push
loope
lcall
or
outsl
icebp
decb
mov
shlb
cld
mov
xor
scas
testb
cmpsb
push
cmp
inc
fwait
jecxz
int3
adcl
lods
sbb
ror
ficoms
xchg
pop
adc
sub
int
sub
adc
call
bound
je
loope
xchg
es
sub
xchg
mov
outsb
mov
push
xchg
int3
mov
cmc
aas
dec
mov
adc
dec
out
lods
popaw
dec
hlt
xor
pushf
push
sub
pop
jno
enter
mov
mov
sub
filds
std
push
cmp
movsl
fisubs
jg
dec
add
fiaddl
mov
push
lea
and
add
js
int
mov
sub
out
mov
add
dec
jg
xchg
mov
mov
xchg
sarb
sbb
cmpsb
jno
sbb
imul
jbe
sub
cltd
sbb
cli
mov
ljmp
loopne
xor
xchg
repz
xchg
shrb
xchg
es
sub
dec
add
pop
or
psubw
das
push
subps
ret
shr
jo
lcall
in
movsl
add
test
fwait
or
xor
jne
and
ror
inc
cld
and
mov
pop
or
inc
ljmp
push
pop
mov
sub
inc
and
vpacksswb
mov
movsb
adcb
scas
shlb
mov
cmp
mov
leave
test
aas
inc
insl
xor
int
in
adc
fstp
fwait
loope
xor
cmpxchg8b
jo
rcl
stc
or
mov
mov
xor
jg
xchg
inc
js
jb
jb
arpl
test
movsl
sbb
jp
icebp
clc
sbb
adc
movsb
les
incl
rcrb
nop
lahf
cmp
mulb
cmp
xchg
add
push
cmpl
pop
shll
je
loopne
dec
sub
in
jecxz
xor
fcoml
sbb
cli
push
lds
lock
xchg
mov
xchg
rcr
in
xor
pop
pop
mov
or
or
cli
jle
int
pop
stos
aaa
mov
out
mov
sub
cwtl
adc
xor
mov
jle
jbe
pop
das
mov
xchg
push
add
dec
jne
out
inc
fwait
and
mov
push
imul
fwait
pusha
jmp
es
xchg
push
xchg
andl
movsb
jle
sti
xchg
mov
lods
xlat
rolb
xor
mov
cmp
mov
fs
outsb
and
aam
pop
xchg
repnz
pop
mov
stc
pop
shrb
hlt
xchg
ret
dec
mov
and
push
inc
test
add
pop
adc
mov
filds
xchg
in
adc
fbstp
dec
push
aas
jnp
or
sub
hlt
mov
add
leave
cmpsb
mov
rorl
fs
mov
pop
cmpsb
insl
push
pop
inc
xchg
cs
jns
enter
lods
lahf
and
push
inc
sub
movsl
aaa
fwait
mov
push
ret
xchg
adc
xchg
pusha
into
data16
sti
gs
pop
lods
cmpsl
pop
xor
mov
mov
lret
mov
sbb
inc
out
outsl
out
adc
sbb
inc
push
mov
ficoms
fidivs
cs
lcall
jge
sahf
es
fs
xor
mov
push
xlat
pop
cmp
mov
pop
sbb
push
and
mov
xchg
jecxz
cmp
data16
ret
std
roll
sbb
cld
jno
call
push
pop
mov
push
sub
data16
xchg
xchg
sahf
sti
dec
dec
fdivs
fdivrl
mov
int3
aad
fistl
dec
loop
xor
cwtl
pop
dec
sbb
lahf
adc
scas
insl
jo
rcl
cmp
jp
int
xor
xchg
cld
cmc
dec
mov
shl
idivb
insl
bound
out
movsl
rolb
xlat
enter
adc
imull
adc
cmp
outsb
pop
xchg
push
mov
in
adc
ficoms
mov
subl
adc
lock
mov
cmp
mov
pushf
lds
xchg
loope
and
add
in
jp
aad
jg
mov
mov
add
int
pop
cmpsl
inc
adc
je
les
mov
lahf
les
shrb
out
push
push
xchg
mov
adc
sub
mov
or
xchg
nop
mov
lcall
pop
setne
xchg
push
clc
ret
push
mull
xor
push
insl
inc
xchg
jne
adc
sbb
mov
add
scas
mov
jbe
test
or
inc
add
fidivs
addr16
sub
add
mov
fsubs
rorl
dec
jp
lds
xorl
out
jge
popa
je
mov
mov
and
out
mov
pop
pop
sub
mov
iret
jbe
lea
int3
inc
loope
test
cmp
test
ret
ret
icebp
push
jne
ret
sub
mov
dec
lea
mov
adc
mov
sub
fldl
scas
adc
mov
mov
popa
ret
ja
fldt
repz
lcall
outsl
inc
iret
pop
adc
call
inc
arpl
xchg
hlt
pop
adc
sbb
inc
cmp
fcmovnbe
push
popa
xor
pop
mov
lods
mov
dec
jns
push
pop
outsl
in
cltd
add
mov
xor
stc
repz
les
cltd
fcmove
mov
pop
repz
insb
popf
imul
lds
xlat
out
xor
loop
push
lock
movsl
inc
loop
cmp
outsb
orb
xchg
and
test
xor
faddl
pop
int3
repz
nop
daa
mov
mov
nop
test
dec
in
xchg
int3
lcall
rcll
and
xchg
mov
ljmp
loop
pop
cmp
nop
xchg
andl
push
pop
xor
add
lods
fbld
adc
scas
push
mov
aaa
stos
adc
dec
mov
fsubp
adc
sbb
out
mov
movsl
and
xor
aam
ja
sbb
leave
mov
es
jnp
fsubl
dec
sahf
mov
iret
nop
push
fwait
push
icebp
fbld
out
jg
fsubrs
sub
sub
dec
nop
in
add
shlb
jle
mov
jbe
out
mov
dec
or
push
dec
int
ss
test
es
out
sbb
jecxz
popw
xchg
mov
int
jl
push
pop
mov
push
in
in
clc
test
mov
hlt
pop
jl
adc
sub
adc
jle
inc
jbe
or
cs
or
decl
dec
ret
arpl
lods
sub
push
push
clc
mov
push
sub
sub
dec
sar
cwtl
fmull
push
gs
or
mov
mov
call
xchg
rol
xchg
call
movsb
mov
adc
out
aaa
mov
fs
clc
addr16
pop
inc
sbb
mov
scas
add
stos
ret
xchg
or
jnp
push
add
pop
jo
xor
push
mov
add
mov
aad
outsb
jmp
xchg
or
xor
out
push
inc
sbb
push
out
out
add
iret
xor
rcrb
xchg
xchg
inc
mov
mov
out
ss
dec
add
jge
pop
in
pop
in
inc
divl
sbb
jbe
dec
jecxz
jg
loop
icebp
add
outsb
repz
out
popa
stc
cwtl
cmp
and
or
stos
xor
mov
cmp
adc
adc
xor
xor
mov
or
xor
mov
dec
lcall
and
in
sbb
push
cltd
xchg
sub
mov
ja
test
shll
xchg
shrb
sub
inc
mov
lea
das
js
mov
sub
je
arpl
outsb
popa
xchg
ds
sbb
pop
stos
push
fildll
xor
test
mov
or
hlt
loopne
imul
dec
cmp
mov
mov
pop
arpl
mov
or
ret
sti
pop
xor
mov
leavew
clc
and
daa
lea
and
sahf
cmp
and
or
adc
cmp
add
add
pop
test
rolb
jo
ja
test
imul
adc
or
add
int
add
je
jbe
int3
int3
and
in
fldcw
xchg
dec
mov
arpl
dec
pusha
fnsave
cmp
bnd
pop
sahf
jp
jo
inc
push
or
and
dec
pop
or
insb
mov
fcomi
mov
pop
push
movsl
lea
outsl
jb
fidivrl
scas
mov
inc
adc
mov
cmp
ds
pop
mov
xchg
xchg
push
mov
mov
push
mov
mov
test
cmp
cli
leave
jno
xlat
aas
sbb
jmp
jle
ljmp
and
pop
mov
mov
push
sbb
js
adc
push
fldcw
xchg
cld
je
fidivl
movsb
fadd
sub
xchg
jle
add
mov
inc
push
or
jae
fildl
mov
inc
xchg
push
mov
push
je
inc
sbb
sahf
ds
ljmp
or
inc
sti
sbb
cmpb
arpl
dec
popa
push
testl
sub
or
or
enter
bound
fs
fdivr
push
lea
aam
or
pop
or
mov
mov
and
adc
mov
mov
xchg
jmp
add
xor
push
mov
mov
lods
jns
repnz
cmp
cmp
pop
std
imulb
lds
and
jecxz
mov
pushf
jbe
arpl
ret
adc
fstl
sub
inc
lock
sbb
repz
mov
fisubrl
mov
xchg
dec
aam
xor
lds
mov
mov
pop
lahf
lods
or
jb
gs
stos
pop
ljmp
add
popf
pop
push
sbb
sub
cltd
pusha
retw
jae
cmp
mov
mov
xor
xchg
jno
add
cmp
ds
mov
mov
push
mov
adc
xchg
xchg
insl
dec
pop
push
cld
sub
lret
mov
popf
push
mov
mov
push
fistps
mov
lods
inc
sbb
movsl
outsl
add
setg
les
movsl
mov
xchg
aaa
inc
xchg
push
or
pop
push
and
xchg
enter
mov
pop
filds
pop
and
cwtl
mov
jb
fld
push
shrb
or
adc
mov
mov
cmp
jecxz
mov
mov
jg
add
nop
dec
in
mov
inc
repnz
int3
cli
sub
int3
sbbl
adc
rcrb
adc
push
gs
daa
in
je
push
lahf
sub
divl
test
jmp
push
inc
push
dec
jne
dec
adc
sub
test
xchg
pop
xchg
cmpsl
js
pop
pushf
mov
pushf
mov
imul
lods
xchg
pusha
and
push
nop
repnz
add
aas
mov
mov
pushf
imul
ds
shlb
add
aam
mov
rcrb
xchg
aaa
pop
xchg
adc
add
loope
xchg
push
loopne
bound
inc
xchg
loop
ret
scas
lcall
testb
dec
push
int3
lcall
inc
in
or
inc
ret
sbb
insl
jg
fstpl
xor
das
push
mov
cmpsl
add
lea
mov
dec
ja
mov
dec
ja
inc
clc
inc
jle
xchg
sub
sub
rcll
insl
push
push
fimull
mov
xor
xchg
dec
test
push
jo
adc
mov
sub
imul
fildl
pop
fldt
mov
rol
scas
or
popa
lock
push
mov
shlb
pop
mov
rcr
push
dec
outsb
add
lcall
cmp
call
xor
arpl
xlat
aad
ljmp
fcoms
ret
push
mov
adc
and
or
psubb
cmpb
adc
dec
leave
push
mov
push
test
xchg
in
xorl
xchg
fistpl
fs
jg
push
inc
and
cmp
dec
push
mov
popf
mov
cmp
sahf
sub
repz
sar
push
add
dec
xchg
es
leave
out
fwait
ja
aad
jno
pop
xchg
aas
sub
cmpsb
mov
mov
mov
leave
mov
pusha
rolb
mov
lods
iret
jns
out
rolb
rorl
popf
cmc
dec
add
aas
push
ja
into
mov
adc
loopne
sub
mov
je
mov
test
push
and
pop
fs
adcl
idivl
fs
mov
and
mov
cli
cltd
sub
adc
jecxz
and
pop
inc
rcrb
insb
push
and
dec
pop
adc
jb
cmpl
ss
xor
testl
cmp
and
fsubl
sbb
dec
leave
pop
cmpsl
pop
sub
mov
lods
into
lods
ds
popf
sbb
rorl
sbb
jo
and
add
inc
mov
adc
and
fs
pop
jo
dec
push
dec
scas
lcall
test
mov
leave
add
or
push
mov
mov
daa
adc
and
add
xor
lret
movsb
mov
adc
add
mov
mov
mov
dec
cli
pusha
push
incl
add
mov
mov
test
push
std
push
jl
pop
mov
rcll
cwtl
loope
hlt
push
pop
aad
adc
icebp
jbe
repnz
jnp
stos
jecxz
inc
mov
pop
jne
data16
sub
mov
dec
push
and
pop
sbb
aaa
mov
int3
inc
testl
jo
shlb
into
xor
mov
js
xchg
pop
fistpl
xchg
rcr
mov
popa
js
xchg
add
cld
mov
outsl
xchg
dec
cmp
sub
add
inc
std
xchg
daa
add
dec
mov
test
rorb
cmp
loope
imul
test
arpl
out
jae
je
sub
jnp
inc
mov
stos
pop
fldl
int3
cmp
out
test
aad
adc
jae
sbb
pop
mov
iret
pop
mov
gs
repz
rol
ds
js
xchg
mov
fbld
and
cs
test
add
ja
jmp
shr
iret
out
js
or
add
and
cmp
push
inc
dec
lret
inc
and
cmp
or
js
movsl
ja
xchg
cmp
adc
stc
stos
pop
and
cwtl
je
mov
gs
cmpsl
lret
scas
lods
inc
jns
int3
sub
cmp
xchg
cmc
loop
pop
fs
dec
xlat
pop
xor
test
push
xchg
add
out
adc
sbb
les
ljmp
jns
mov
movsb
je
repnz
pushf
loop
in
or
call
push
inc
mov
mov
mov
cmp
dec
movsl
xchg
jae
pop
ja
in
cmpsb
push
loopne
adc
addl
sub
sbb
ds
out
add
jl
arpl
inc
sbb
lret
pop
dec
nop
mov
pop
xor
sub
loope
movsl
not
negl
nop
repz
jnp
addl
pushf
imul
imul
sub
dec
cli
jle
cld
aas
dec
xchg
sbb
out
cmp
lret
fdivs
cmc
mov
lods
in
inc
jnp
inc
adc
xor
push
and
cld
sbb
pop
aad
daa
insb
enter
aaa
jge
cmc
lahf
pop
int3
mov
ds
bound
mov
jb
into
cld
xlat
roll
inc
ds
loopne
mov
and
fcoml
nop
popa
mov
xchg
dec
push
lahf
nop
sbb
pop
and
ret
sub
xchg
jb
mov
sub
mov
into
clc
mov
subl
pop
lret
jno
pushf
jl
sub
jbe
push
jae,pt
and
inc
pop
fs
stos
and
fldcw
scas
mull
adc
sahf
or
mov
and
daa
push
cmpsb
jp
xor
adc
dec
adc
push
mov
out
mov
jle
push
add
push
mov
loope
test
dec
ror
outsb
xor
fldl
jno
add
std
sbb
shrb
ljmp
jnp
fcmovbe
mov
cmp
movsl
test
stc
lret
xor
popf
or
and
out
push
lret
outsb
add
ljmp
jecxz
js
sub
out
int3
inc
jge
enter
jp
pop
in
subw
cmpsb
xchg
bnd
pop
into
out
enter
pushf
mov
dec
cmp
mov
ret
repnz
repz
out
fists
push
pop
in
adc
xchg
xor
dec
in
dec
mov
mov
xor
sbb
pop
fucomip
mov
adc
mov
outsl
subl
push
test
xor
insb
sub
xchg
movsb
cmp
fldl
daa
outsb
imul
out
sti
pop
lahf
std
insb
and
mov
adc
js
adc
rcpps
mov
enter
in
cmp
mov
shlb
enter
xchg
dec
sub
dec
cmc
pop
mov
movsb
nop
sbb
xchg
movsl
inc
loop
sub
inc
adc
dec
lret
daa
push
add
inc
sub
bound
in
stos
xor
mov
xchg
subb
xchg
inc
cwtl
stos
jmp
pop
jnp
push
xchg
in
stc
mov
add
adc
rcll
mov
push
dec
xor
xor
cmpsb
das
adc
pop
bound
push
les
icebp
jae
add
mov
xchg
jns
ds
mov
orl
mov
loope
mov
shlb
xlat
mov
and
jmp
pop
jg
aad
lcall
xchg
jle
dec
jnp
jecxz
xchg
or
cmpsb
dec
push
or
xor
mov
enter
adc
das
clc
xchg
inc
in
pushf
mov
inc
inc
lock
arpl
inc
push
pop
mov
stc
fisubs
fucomip
add
loop
or
test
dec
add
lods
aas
sbb
and
add
stos
add
gs
mov
rcl
ror
mov
out
repnz
enter
adc
fmull
cmp
rorb
pushf
std
mov
or
pop
cmp
push
rolb
out
inc
out
in
push
stos
fildl
out
xor
mov
or
add
outsb
or
push
jae
sti
outsl
adc
shlb
jne
add
adc
or
inc
and
dec
dec
add
push
cld
pop
push
ds
mov
mov
movsb
fldt
jb
or
fmuls
xchg
jecxz
fwait
lds
mov
gs
je
push
mov
sub
xor
mov
mov
mov
jecxz
dec
cwtl
xor
cmp
cmp
cmpsb
jmp
xchg
cmp
jle
or
sahf
inc
or
imul
pushf
bound
add
in
lods
dec
aas
adc
pop
call
xchg
push
and
jecxz
mov
inc
out
push
mov
pop
pop
dec
and
jo
sti
push
ja
cwtl
ds
dec
pop
jnp
pop
in
cltd
lock
test
ficompl
and
mov
mov
jb
lahf
dec
aam
loopne
or
inc
and
je
mov
repnz
inc
std
mov
loop
inc
andl
outsb
jns
sbb
std
imul
jmp
imul
stos
leave
or
movsb
jge
mov
sbb
arpl
lcall
jne
mov
xchg
out
jno
testb
test
dec
fstpt
or
mov
xchg
movsl
xchg
cli
cmpsb
fistps
les
es
ret
mov
cwtl
outsw
cmp
sbb
gs
ljmp
sub
in
hlt
mov
ret
ljmp
and
ss
aaa
cli
nop
xor
dec
and
lret
xor
aad
icebp
mov
xchg
ret
jmp
pop
dec
push
outsb
push
push
test
adcl
jno
mov
adc
mov
pop
cmc
rcrl
mov
cmp
je
mov
inc
aas
add
lret
es
mov
or
or
xor
push
clc
inc
jns
repnz
repnz
pushf
xchg
call
pop
call
fidivl
pop
xorb
les
cwtl
icebp
cli
mov
test
mov
enter
insb
lock
ljmp
lds
idiv
adc
mov
icebp
push
cltd
sub
sbb
pop
xor
jns,pt
mov
aad
ja
pop
cwtl
inc
insb
and
mov
xchg
insb
rorl
insb
nop
push
push
je
pop
pusha
push
cld
mov
idivb
jp
test
outsl
sub
idivl
hlt
jo
xor
scas
cmc
int3
stc
movsl
jle
enter
std
push
adc
pusha
mov
inc
dec
loop
cmpsb
aam
pop
notb
xchg
xor
jle
sub
test
fldcw
movsl
test
dec
xchg
mov
repnz
or
fsubl
dec
mov
in
icebp
adc
negl
and
lret
mov
add
shrl
mov
cmp
adc
pop
clc
add
or
mov
movsb
adc
test
mov
outsl
mov
ljmp
jns
cmp
pusha
xchg
mov
xor
mov
push
inc
jl
cmp
nop
stc
rorb
cmp
pusha
sbb
xor
jno
push
rorl
addr16
cmp
sbb
pop
cmc
xchg
aas
insl
out
cmc
mov
aaa
mov
clc
dec
adc
hlt
xor
push
jns
repnz
stos
sbb
sub
enter
lret
rcll
cmovle
loop
lret
jne
faddp
aam
je
ds
push
fwait
call
cmpsl
mov
imul
jo
je
dec
xchg
cmpsl
loop
push
ja
fwait
sbb
sub
dec
cltd
sub
rolb
repz
pop
dec
or
pop
ret
push
xor
addr16
ja
lcall
xchg
addr16
mov
jne
push
popa
inc
sub
aam
arpl
in
clc
sbb
jns
int3
mov
sbb
in
xchg
int
f2xm1
ret
mov
or
and
insl
pop
and
sbb
sbbb
faddl
insb
test
mov
sbb
mov
or
fdivrp
imul
add
lret
adc
push
jg
dec
sahf
and
cmpsl
fstps
js
aas
movsl
loopne
repnz
mov
jnp,pt
and
mov
push
pop
and
dec
test
movsb
mov
xchg
adcl
cmpsl
or
jp
sarb
loop
inc
fs
dec
jbe
and
mov
push
insb
test
lret
mov
sti
outsb
outsl
pusha
mov
and
xor
sub
leave
aaa
add
jae
sahf
out
js
loopne
lds
lcall
dec
andl
jg
fwait
enter
lret
addr16
cmpl
lcall
inc
pushf
lret
push
or
push
and
mov
add
sub
imull
dec
in
inc
addr16
subb
fldt
cmp
je
push
scas
jb
aam
mov
gs
xchg
cltd
dec
ret
les
in
push
inc
ljmp
fldcw
mov
sbb
cmp
rclb
sbb
push
stc
or
pop
ret
mov
xor
push
mov
cmpsb
lret
pop
cmpsl
pusha
push
sub
mov
lods
sub
xchg
dec
cltd
int3
or
into
ret
cmp
adc
cmp
mov
lcall
xchg
ret
loopew
imul
fbld
data16
inc
xor
gs
cmp
mov
adc
frstor
test
stc
inc
aam
dec
mov
lods
xchg
inc
daa
cmpsl
xor
out
dec
js
dec
jecxz
push
out
xchg
push
mov
mov
pop
scas
dec
sarl
push
jmp
aaa
mov
in
je
je
xor
mov
inc
sbb
dec
jb
mov
jg
lcall
imul
sti
std
call
stos
sti
cwtl
and
fwait
sbb
xor
test
jae
or
aam
lods
repz
fnstenv
cld
stos
out
fs
push
stos
pop
out
outsl
iret
and
pop
dec
push
ret
push
imul
shll
dec
into
outsl
adc
inc
ljmp
orl
rolb
movsl
sahf
in
xchg
outsb
les
or
rcrl
mov
loop
cltd
xlat
dec
pop
xor
negb
insb
adc
lock
jmp
shrl
push
pop
dec
mov
shll
test
dec
clc
xchg
sub
in
test
clc
stos
xchg
cmp
imul
imul
adc
sbb
mov
sub
cld
inc
and
add
sub
xor
xchg
insl
psadbw
and
aam
inc
leave
fsubl
jmp
mov
or
in
mov
out
xor
cs
int
and
adc
cmp
std
fdivr
inc
add
add
jp
shll
popa
push
jno
jmp
lds
adc
ljmp
sbb
cmpsb
clc
add
in
xor
leave
fbstp
push
pop
jo
pop
popl
pop
sbb
xchg
nop
push
inc
cmpsl
sub
nop
scas
jmp
cld
mov
xchg
fnstcw
jae
push
movsb
inc
jno
fidivs
mov
sbb
addr16
sub
hlt
arpl
out
xor
test
sbbb
push
sbb
lea
jo
ret
jnp
inc
adc
mov
inc
cld
loope
push
jae
test
sbb
enter
stos
cmp
push
pop
mov
shll
inc
scas
push
pop
push
mov
jge
out
stos
xchg
cwtl
les
pushf
mov
imul
movntps
jg
mov
lods
add
push
data16
imul
mov
call
adc
and
lret
mov
into
sti
jmp
adc
or
pop
inc
pop
jne
cltd
inc
mov
subb
mov
mov
fistpll
std
out
jo
inc
and
xor
popa
dec
push
add
dec
or
mov
pop
xchg
mov
lds
test
fdivrl
sub
rcrb
sahf
dec
or
test
das
test
icebp
in
outsl
mov
push
mov
mov
es
imul
sub
inc
adc
xchg
pop
es
repz
data16
aam
mov
je
daa
push
dec
addr16
in
data16
jb
in
rclb
aam
push
js
adc
in
andb
sub
js
test
jo
imul
out
or
fs
lcall
gs
addb
sti
adc
xor
jmp
lods
xor
out
out
sbb
xchg
jno
push
adc
sbb
xchg
ja
sub
push
stos
mov
flds
pop
jns
das
and
add
sarl
sub
xor
inc
inc
pop
and
cwtl
cmp
sahf
cmp
bound
jge
sahf
sbb
loopne
cmp
inc
xor
jo
add
sub
add
mov
rclb
fisubl
sub
push
test
or
fsubp
mov
in
mov
jmp
enter
fsubrp
mov
arpl
ja
mov
packsswb
cwtl
sub
es
shrb
inc
sub
nop
mov
mov
ja
and
sti
inc
adc
pop
mov
push
xchg
inc
loope
xchg
std
out
in
test
adc
mov
sbb
aas
dec
adc
xchg
hlt
push
fstps
stos
aaa
mov
fs
dec
cltd
and
js
sbb
mov
popa
rolb
aaa
or
mov
jmp
aas
inc
add
flds
xchg
cmp
movsb
out
je
push
test
push
mov
xor
cmp
flds
loop
shll
mov
pop
out
jno
and
cmpsl
inc
jle
pop
sahf
sub
rcrb
jns
jmp
call
xchg
fucomi
inc
mov
shl
cltd
mov
mov
mov
xchg
std
mov
mov
fistpl
nop
jne
lds
mov
pop
stos
fidivrl
lods
movsl
aad
push
xor
inc
leave
mov
addr16
sti
ss
and
hlt
pop
mov
mov
xor
pop
int3
add
sub
out
cltd
fsubrl
shll
sub
mov
orb
dec
sarb
imul
shr
mov
int3
pop
xchg
mov
inc
sub
mov
mov
call
cli
mov
lcall
xchg
or
fildll
cs
push
movsb
mov
test
ja
daa
imul
inc
pop
dec
or
ljmp
mov
shrd
or
adc
dec
shll
or
dec
lret
out
pop
push
pop
and
mov
sub
add
and
enter
cmp
adc
xchg
out
popa
lahf
jb
ja
mov
push
adcb
pop
cltd
xor
xor
hlt
jg
sub
inc
js
roll
add
mov
jae
or
bound
inc
das
mov
cmpsl
inc
or
push
jg
aad
sub
ljmp
int3
nop
xchg
jae
sub
mov
inc
sub
jecxz
fbld
adc
in
adc
push
xchg
dec
lcall
test
shll
fcmovnbe
testb
add
popl
addr16
loope
scas
xchg
shrb
pop
mov
jp
or
lea
fstps
add
pop
mov
jo
lahf
pop
scas
or
mov
sahf
push
xor
push
push
cmpsl
lea
cmc
push
and
push
cs
mov
inc
xor
subl
call
mov
xor
idivb
in
popf
cmpsl
out
fdiv
mov
xlat
sbb
cmp
stos
ja
or
sbb
adc
daa
testb
hlt
mov
cmp
int
mov
ds
fidivl
hlt
cmp
lods
fnstenv
das
xor
push
call
adc
mov
std
xchg
jb
xor
loopne
testl
push
xchg
rcrb
pusha
jbe
pushf
adc
dec
lock
sahf
ffree
clc
loopne
xor
cs
dec
outsb
sub
in
js
out
cmp
inc
add
mov
mulb
nop
lds
iret
or
jg
push
lock
or
and
pop
lret
inc
jnp
fistpl
sub
or
cmp
mov
xor
mov
psubb
push
xchg
rcrb
add
and
or
jecxz
std
nop
daa
inc
mov
cwtl
fsubrl
jns
leave
cmpl
mov
test
das
enter
jns
mov
mov
dec
pop
push
adc
xor
adc
and
test
push
sti
mov
push
mov
lea
fstl
sub
in
das
lds
pop
ss
loopne
pop
mov
push
gs
shrb
and
sub
mov
fsubrs
or
jb
aad
jo
jne
and
mov
rorl
or
jp
es
aas
jno
add
idivl
call
imul
add
aam
lcall
movsb
shlb
fadds
xchg
xor
mov
sbb
pop
repz
inc
insl
enter
lock
cwtl
lret
out
xchg
jmp
gs
pop
cmc
test
std
pusha
mov
mov
fwait
leave
addr16
cld
add
mov
daa
push
fidivl
lret
movsb
adc
inc
pushf
cltd
data16
cmp
or
inc
push
lods
int3
fisubrs
adc
sbb
inc
fidivrs
dec
jmp
out
dec
xchg
leave
ret
imul
insl
mov
ficomps
shll
cltd
or
sbb
scas
cmp
mov
popf
xor
add
repz
xor
cmp
mov
push
nop
adcb
add
xchg
cmp
inc
cltd
and
xor
mov
mov
scas
jnp
inc
xchg
pop
jb
out
jl
jecxz
add
ljmp
add
jo
or
adc
xchg
jmp
xorl
cmpsb
clc
cltd
add
dec
popl
xchg
inc
add
pusha
stc
fs
pushf
aaa
sub
mov
sbb
in
out
sbb
lock
dec
mov
mov
and
adc
inc
cmp
adc
cld
fcoml
lret
aam
and
and
add
in
and
popf
pop
int3
orb
jmp
subb
loope
mov
sub
mov
pop
xchg
insb
mov
mov
sub
cmpsb
sbb
sbb
xchg
push
sub
adc
xchg
lret
xor
in
stos
mov
sti
idivb
into
pop
adc
std
and
fsubs
repz
and
pop
les
stos
and
repz
fmuls
sub
ja
pop
xchg
add
test
nop
add
xor
pop
inc
sbb
stc
out
imul
jae
cld
sub
cmc
js
cmpsb
loope
movsl
cmp
cmp
push
jecxz
dec
sbb
aad
aam
or
ret
mov
imul
push
xor
out
dec
xor
xchg
sub
xchg
ret
fists
loopne
add
dec
loopne
push
sbb
add
sbb
xor
arpl
inc
mov
mov
mov
aad
jbe
jo
into
sub
cmp
push
mov
push
fucom
popf
cmp
sbb
test
jmp
imul
mulb
add
es
xcrypt-cbc
cmpsl
xchg
sbb
or
jge
push
repz
dec
xor
out
lea
lds
pop
pop
jg
dec
iret
shrl
push
hlt
fdivl
ds
cld
mov
adc
pop
insb
xor
idivb
rorl
xor
popf
ret
inc
pop
xchg
enter
dec
pop
jns
loop
jp
jge
rol
sar
pop
cmp
aas
bound
fsub
rol
sub
outsl
and
mov
in
cmpsb
adc
fidivs
jns
add
add
cmp
test
xchg
jb
push
push
adc
push
aam
enter
push
push
rcll
fwait
fs
clc
out
hlt
push
sbb
aad
inc
sub
xchg
sbb
sbb
mov
sub
cli
leave
and
xchg
or
mov
push
mov
sbb
jb
imul
sbb
mov
dec
enter
inc
mov
sub
mov
mov
push
dec
insb
xchg
in
dec
mov
xchg
cmpl
xor
pop
sbb
pusha
sbb
xor
add
push
in
rcr
lret
out
rcrl
lods
mov
mov
icebp
icebp
xchg
in
xor
outsb
aas
push
dec
hlt
outsb
or
cmp
dec
out
add
lods
sbb
cmp
ds
out
pop
and
and
shll
frstpm(287
pop
stc
lahf
xchg
dec
xchg
insl
xchg
mov
lcall
fwait
popf
inc
imul
and
ret
push
lods
xor
dec
scas
rcrl
mov
scas
sti
jecxz
pop
cltd
std
jecxz
jb
xchg
add
or
dec
sti
gs
enter
and
out
adc
xlat
sub
push
stos
cwtl
mov
xchg
push
mov
fs
cmp
loopne
outsb
stos
push
xor
push
mov
push
push
not
gs
mov
xchg
mov
mov
mov
lods
dec
fidivs
out
data16
sub
leave
sub
jecxz
data16
pop
mov
pcmpgtb
addb
movsl
or
mov
lods
push
jns
lock
mov
push
insb
jne
xor
aaa
test
jno
sbb
jl
push
cmp
sub
xlat
or
hlt
and
repnz
jns
adc
addr16
adc
jae
fsubs
cmp
or
inc
push
popa
movl
jp
jp
shl
mov
xchg
jb
mov
push
jle
cmp
mov
and
jb
idivl
fsts
iret
out
outsb
pusha
int
sub
bound
mov
push
out
add
sub
out
push
cmp
sti
cmc
repnz
jo
gs
dec
mulb
popf
pushf
lods
pop
and
fwait
mov
lcall
inc
jmp
sub
cmp
fistl
outsl
jnp
movsl
dec
popf
cld
jmp
sub
orb
sub
dec
mov
and
push
fmuls
das
sub
inc
filds
out
adc
or
cli
xor
add
aad
dec
add
outsb
pop
jae
inc
jg
sti
push
mov
mov
jmp
mov
inc
cmc
mov
cli
mov
push
jns
push
jp
mov
pop
lcall
jbe
cmp
jbe
fldcw
xor
dec
jno
sbb
or
shr
mov
add
push
scas
mov
dec
add
and
sub
arpl
fistpl
les
rcrb
mov
mov
lods
and
push
jnp
mov
orl
shll
inc
jo
mov
cmpsb
sub
bound
loope
addr16
andb
jg
roll
jne
repnz
imul
inc
fcmovnu
mov
adcl
xchg
frstor
shlb
jecxz
rcll
or
arpl
fcompl
mov
add
add
xor
and
jbe
mov
aaa
int
push
mov
pop
out
mov
push
adc
adc
adc
lock
clc
add
fists
mov
arpl
stos
dec
lret
aas
imul
into
or
jecxz
stos
rorb
push
pushf
or
pop
xchg
insl
jnp
in
in
push
mov
jecxz
xchg
ffree
ja
ret
mov
push
fs
push
clc
dec
repz
loop
imul
cmp
lahf
stc
repz
lcall
sub
jb
add
jp
and
icebp
rcll
jmp
jae
hlt
push
rorl
out
lock
ret
add
jl
sbb
mov
xchg
adc
leave
mov
and
mov
add
loopne
mov
or
pop
pop
cmp
xchg
push
in
add
pop
mov
rcrl
inc
mov
loopne
arpl
out
xor
xor
ucomiss
and
fwait
inc
cld
push
sti
xor
popa
xor
jno
push
mov
lds
lock
imul
stos
nop
mov
fsubrs
loop
and
fwait
and
ja
hlt
rorl
add
sub
add
sub
imul
insb
lods
push
cmp
cld
lods
mov
push
sbb
icebp
rorb
sti
xchg
cs
xlat
loope
dec
jl
sub
mov
or
sahf
ja
or
ss
jnp
popa
jbe
lcall
scas
adc
sbb
push
insb
rclb
fsub
inc
jg
xor
push
nop
xchg
add
cmpsl
dec
test
cmp
icebp
shrb
outsb
ljmp
pop
mov
mov
sbbb
fcomi
int3
adc
and
mov
loop
xor
lahf
imul
jne
push
loope
inc
jno
mov
pop
xchg
in
cmpsb
pop
stos
popf
sub
fildll
mov
or
inc
inc
or
inc
std
jge
test
repz
inc
jge
scas
jle
es
in
push
or
jns
mov
out
lret
fisubl
loop
jb
jb
fildl
mov
lock
push
dec
cli
dec
pusha
int3
pop
negb
arpl
imul
popa
adc
lock
in
mov
aam
and
xchg
pop
rolb
mov
push
jne
xor
test
jecxz
xor
dec
and
and
fs
push
loop
std
xchg
lods
adc
cli
arpl
or
mov
cmpsl
inc
or
mov
inc
add
push
pop
lds
xchg
out
add
cmp
pushf
fdivr
inc
cmp
push
fwait
mov
mov
ja
sbb
ja
movsl
sahf
cmp
shlb
mov
pop
dec
or
lahf
aad
cmp
dec
cmp
rolb
fidivrl
dec
and
xor
mov
xor
xchg
insb
mov
fmull
push
scas
mov
push
jns
mov
fucomp
push
call
mov
jp
xor
scas
mov
pop
filds
mov
push
dec
jbe
add
fadds
or
jno
add
push
sar
or
iret
adc
inc
lcall
arpl
repz
and
cmp
lcall
out
mulb
daa
xor
test
dec
in
rcrl
pop
xor
and
sbb
in
movsl
into
cltd
dec
push
cmp
pusha
out
into
inc
shrb
imul
push
push
pushf
add
hlt
inc
mov
xchg
cltd
inc
nop
xchg
cmp
ja
aad
es
inc
out
mov
mov
in
xchg
pop
dec
add
adc
outsl
inc
int3
xchg
cmp
int
inc
push
lds
stos
out
add
das
out
mov
xlat
fs
push
and
stos
cmp
in
std
fiaddl
fidivl
incl
je
jecxz
or
das
mov
inc
std
add
xchg
inc
cli
dec
fcomps
push
jg
shll
jo
add
mov
xchg
jmp
call
lods
pop
jp
fisubrl
cltd
xchg
scas
repz
jp
xchg
sbb
mov
mov
inc
in
imul
scas
jmp
cmp
lret
ror
je
and
mov
push
cmc
pop
cmp
lods
addr16
sti
cmp
popf
mov
test
sub
adc
push
or
cmpsb
cmp
push
movsb
adc
dec
jbe
push
loopne
push
fstps
in
in
xchg
sbb
int
pop
adc
cltd
negb
mov
cvttps2pi
addl
scas
xchg
jmp
scas
je
aad
je
iret
sbb
mov
fcoml
mov
adc
add
jnp
inc
dec
dec
cmpsl
adc
int
bound
nop
push
out
pop
xchg
mov
add
dec
test
movsb
xchg
inc
jp
push
mov
sahf
divb
add
mov
jge
sub
mov
roll
xchg
add
stos
orl
and
out
mov
xchg
sarl
dec
lea
mov
inc
mov
add
sahf
push
mov
adc
add
xor
adcb
shl
stos
lret
fnsave
inc
aaa
xor
orb
mov
test
push
mov
rcr
or
mov
sahf
ds
hlt
cwtl
mov
mov
loop
loop
call
mov
cmc
out
popa
cmp
cmp
sub
sahf
or
push
pushf
jmp
iret
test
add
mov
idivb
mov
lods
fmul
xor
push
repz
arpl
sub
push
adc
ret
dec
sbb
push
jge
ja
dec
mov
fsubr
test
lret
push
mov
xlat
xor
xchg
dec
aaa
cwtl
insl
stc
sub
sub
jl
jl
jecxz
outsb
hlt
dec
std
jg
pop
dec
out
lahf
fdivl
test
cmp
cmc
and
jge
jge
test
iret
shl
leave
mov
cmp
inc
test
lods
mov
sbb
sahf
sbb
mov
xchg
das
push
daa
or
sbb
mov
xchg
out
xor
lods
cwtl
adc
sub
or
imulb
aam
call
movb
jmp
xlat
mov
addr16
jns
sahf
add
mov
fs
mov
mov
imul
stos
xor
js
cwtl
xchg
call
lret
shrb
out
mov
jne
aaa
jl
xor
jl
jl
fsub
xchg
mov
xor
fmul
test
xchg
jnp
lods
mov
xchg
and
cmp
mov
sub
adc
iret
pusha
pop
push
cmc
pop
mov
inc
xor
mov
and
lret
rorl
mov
mov
stc
adc
sarb
add
aam
out
mov
cmp
popa
xchg
addr16
lods
lea
mov
jo
add
data16
mov
aad
xor
enter
sbb
dec
dec
mov
adc
test
jge
sub
jl
nop
rcrb
sub
inc
mov
inc
scas
push
in
and
ret
xchg
fistpll
xor
inc
cmpsb
lahf
sub
popa
sarb
iret
mov
jle
std
and
std
test
jno
ja
jmp
add
jle
sarb
je
mov
xor
xchg
lods
pop
or
gs
adc
push
stc
fsts
pushf
shll
in
ljmp
adc
cli
test
cmpsl
ja
loope
mov
inc
xchg
dec
pop
and
outsl
adc
mov
add
add
xchg
xor
or
pop
sbb
mov
jno
sub
sti
mov
icebp
adc
pop
and
push
lods
sbb
lret
shlb
fnsave
sbb
fs
bound
imul
push
adc
inc
ss
jb
mov
lock
ret
ljmp
test
ja
dec
xchg
mov
or
pop
test
jp
cmp
push
call
sbb
mov
jb
mov
fwait
out
mov
jle
xor
rolb
addr16
mov
sub
xchg
add
add
xchg
fnstcw
dec
nop
test
and
int
mov
sbb
aaa
test
js
push
xor
mov
lods
mov
shll
sub
cmpsb
fldt
insl
test
out
inc
sub
fisubrl
sbb
stos
negb
mov
and
xor
movsl
orb
push
sbb
lret
in
test
shl
and
push
lods
inc
xchg
jecxz
push
lock
cmc
nop
mov
inc
rorb
xor
mov
adc
and
and
out
add
mov
and
inc
in
mov
dec
in
xchg
cmp
pop
mov
xchg
and
js
inc
inc
cmp
mov
lret
loope
adc
shll
sti
dec
mov
cmpsl
mov
mov
into
dec
fistps
icebp
pop
aaa
jl
jne
out
es
adc
inc
lods
jl
lock
insb
xor
mov
xchg
bound
arpl
mov
sbb
shrl
dec
cmp
in
push
pop
sbb
test
mov
add
scas
add
xchg
jbe
adc
int
jns
fists
pop
pop
sub
das
xchg
enter
mov
adc
jbe
pop
sub
rcrl
inc
call
mov
inc
dec
inc
dec
test
adc
push
sahf
mov
das
data16
fdivrl
gs
out
inc
cmpsl
fildl
and
test
cmp
ja
push
push
stos
pop
mov
repz
cmp
adc
cwtl
enter
ds
loope
movsl
mov
iret
mov
jbe
mov
imul
mov
inc
xchg
imul
push
test
sti
popa
jbe
pop
xchg
sar
add
fs
flds
add
test
mov
lock
pop
jo
mov
rolb
iret
out
dec
lahf
lret
in
loopne,pt
pop
mov
cltd
addr16
cmp
out
mov
xchg
scas
pop
leave
sub
or
lcall
test
stos
jg
add
shll
cmp
or
into
iret
jg
inc
cs
sub
jl
outsl
cli
inc
jbe
cmp
cmp
mov
loop
mov
inc
out
push
test
outsl
or
jns
push
loope
fisubrs
imul
mov
mov
call
xor
sub
sahf
xor
or
lret
ffree
lret
push
mov
adc
xchg
cmp
pop
push
adcb
arpl
mov
jmp
mov
push
mov
setnp
pop
sahf
leave
out
das
outsl
outsb
shll
shl
je
jae
inc
aaa
gs
mov
out
sti
test
mov
cli
data16
push
dec
std
and
pop
pop
push
push
iret
sub
in
or
cmp
aad
jns
test
sbb
fimull
ja
dec
mov
mov
inc
int3
negl
xor
repnz
inc
cmp
clc
add
sbb
xor
subb
push
mov
jle
dec
xchg
rcll
push
inc
mov
fisubrs
stos
lock
in
pushl
scas
sub
pushf
leave
add
jmp
shlb
mov
fsubrs
cmpsl
sub
shl
adc
pushf
adc
je
mov
lods
xchg
add
icebp
mov
adc
jmp
rolb
lock
ja
push
leave
movsl
sbb
in
in
jno
negb
cmpsl
adc
sahf
jecxz
faddl
dec
lahf
not
enter
add
sub
push
mov
or
rcll
add
add
or
test
ljmp
pusha
sbb
fdivrs
xchg
mov
adc
cmp
mov
push
insb
mov
xchg
xor
nop
loope
xchg
xchg
xlat
add
pmaxub
jbe
add
xor
jbe
mov
pop
push
enter
pusha
call
adc
adcl
mov
and
ret
sbb
out
cmpb
inc
push
aaa
and
std
cli
push
out
fcomps
inc
add
adc
jnp
and
mov
out
test
popf
adc
dec
pusha
add
shrb
cltd
lret
dec
jecxz
mov
add
fldt
mov
lds
pop
add
pop
mov
aaa
push
fistpl
cli
movsl
mov
mov
adc
xchg
xchg
pop
in
movsb
repz
outsl
test
push
xor
lahf
push
in
sub
notl
pop
xor
pop
xlat
icebp
mov
arpl
out
rcr
and
inc
mov
fmuls
dec
flds
sbb
cli
cmp
xchg
cmpb
repz
test
enter
adc
sbb
jns
icebp
push
insb
inc
xor
ret
inc
mov
hlt
adc
jne
sbb
jbe
lock
cmpsb
ret
xchg
neg
push
imul
jecxz
lcall
xor
es
mov
rolb
popf
or
out
into
pop
xor
and
iret
call
out
pop
add
jae
mov
shlb
call
dec
push
leave
jo
in
pop
arpl
mov
sub
cmp
fbstp
jnp
loope
loop
sbb
xlat
push
mov
fadds
mov
shrb
adc
sbb
sub
add
xor
and
adc
bound
cmpsb
nop
enter
scas
fwait
mov
dec
mov
mov
adc
and
mov
pop
inc
enter
fstps
fnstsw
xchg
sbbb
push
ja
or
je
lret
xor
shll
lods
lock
gs
lret
push
xlat
pop
jnp
xlat
loopne
or
sti
es
dec
jle
aad
xchg
add
cmp
dec
ja
and
dec
jo
lea
dec
leave
sbb
push
add
mov
push
jbe
mov
cmp
les
mov
sub
pop
mov
push
rol
fistpl
mov
xor
stos
rcrb
das
inc
dec
fldenv
xchg
sti
loope
stos
ljmp
enter
out
dec
and
mov
lods
dec
inc
ret
mov
fidivrl
idivl
mov
mov
xchg
jg
push
mov
shl
repz
dec
jb
ret
scas
cmpsb
dec
les
push
mov
push
xchg
adc
adc
mov
das
daa
in
xor
mov
mov
or
das
xchg
arpl
xor
addr16
mov
shll
shll
jp
jo
pop
movsl
pushf
cmp
in
mov
call
cwtl
aas
adc
iret
test
and
jo
hlt
cmp
dec
ret
cmovne
jns
push
rolb
stc
inc
inc
pop
add
mov
add
or
bound
idiv
mov
jmp
dec
jnp
icebp
repz
popf
push
or
insl
or
xor
mov
and
rep
xor
xor
cmp
outsl
mov
xchg
push
insl
test
loope
push
outsb
mov
mov
push
cmp
pop
pop
inc
or
cmc
test
icebp
cmp
push
push
dec
lcall
lock
inc
cmp
aas
mov
push
enter
jnp
sub
mov
inc
int
sbbl
pop
mov
mov
dec
mov
test
jne
sub
jb
loop
dec
ja
rorb
pop
sbb
or
mov
push
pop
sub
insl
in
out
data16
shlb
xor
lea
adc
iret
push
mov
outsb
sar
jg
inc
cmp
das
inc
arpl
adc
pop
call
jl
lea
cmp
test
filds
stos
or
pop
cwtl
cwtl
repz
add
mov
lods
mov
adc
inc
push
adc
repz
lret
pusha
lret
cmp
mov
or
push
pop
sti
mov
cmp
mov
movsb
sbb
push
sub
lods
mov
fcompl
mov
test
mov
or
movsb
xor
dec
mov
fisubs
fiadds
orl
xchg
inc
shrl
push
aas
add
lahf
repnz
push
push
mov
sti
mov
pop
pop
xor
inc
dec
loope
mov
les
xor
aad
push
sahf
int
pop
fldt
lret
and
out
pop
ja
cmp
mov
fbstp
cmp
mov
les
enter
mov
jb
pop
mov
fwait
xor
sbb
sub
test
outsl
aad
loopne
out
jmp
pop
pop
jbe
pushf
into
bound
rcrl
cmc
mov
jnp
and
stos
lods
lretw
out
iret
loopne
sbb
call
cmp
and
adc
dec
sbb
into
dec
in
sbb
dec
mov
movsb
xchg
mov
jle
pop
inc
fwait
imul
mov
fs
sub
inc
repz
fisubl
mov
cmpl
iret
pop
lret
cmc
das
push
cmp
jge
mov
or
repnz
pop
or
sbb
rcll
pop
test
mov
test
push
sti
and
and
adc
orb
mov
push
stos
xor
cltd
push
mov
movsl
int
inc
mov
sbb
xchg
mov
les
xchg
or
mov
mov
lret
clc
sbb
shlb
aaa
xchg
mov
movsb
push
pushf
loopne
or
push
testb
or
mov
mov
repnz
or
arpl
clc
xchg
xchg
dec
jg
fistl
xor
pusha
jp
mov
fs
mov
push
adc
dec
test
push
retw
testl
int
fnstenv
mov
xorl
in
adcl
mov
cmpsb
clc
xchg
repz
out
push
ficoms
mov
int3
shll
popl
inc
jnp
rclb
jae
add
and
dec
movsb
mov
jge
mov
xchg
cld
sti
jb
mov
popa
scas
mov
xchg
cmp
rcrl
and
into
pop
adc
mov
fistl
adc
test
or
arpl
sub
divb
sbb
mov
leave
xchg
xchg
mov
fs
mov
inc
and
cld
stos
push
xchg
dec
aad
mov
xchg
lret
arpl
cmp
mov
mov
cmp
cmpsl
push
shll
jge
testb
clc
btc
jne
int3
pop
adc
push
cld
and
inc
aas
jl
jmp
push
push
sbb
fistps
mov
sbb
push
mov
dec
inc
sub
add
test
out
push
outsb
out
mov
mov
jnp
pop
pop
divl
mov
cmpsl
lock
jle
xchg
dec
dec
adc
push
sub
outsl
dec
fldl
sarb
dec
pop
xor
stos
test
pushf
or
adc
mov
xor
xor
push
xor
inc
mov
or
pop
pushf
pop
imul
aaa
jno
daa
jbe
add
cwtl
clc
xchg
sub
repnz
mov
mov
fnstcw
add
push
cli
pop
adc
cs
fnsave
les
sub
bound
fwait
aaa
subl
pop
out
aad
cmp
push
in
xchg
fxch
sbb
sbb
mov
idiv
sbb
mull
fdivs
pop
out
jae
jbe
out
lods
mov
and
mov
aaa
cmc
pop
stos
mov
cltd
test
insb
adc
adc
subb
lcall
push
icebp
repnz
lret
fldcw
adcb
cmpsl
sbb
cmp
sti
in
or
aas
addr16
cmpsl
daa
jmp
dec
dec
iret
add
xor
mov
jp
fdivrs
pop
das
mov
call
int3
xor
sbb
push
flds
push
inc
xor
rolb
inc
inc
cltd
iret
stc
sbb
std
xchg
push
into
inc
or
outsb
push
popa
loope
es
xchg
stos
cmp
cmp
xor
or
push
pop
mov
and
dec
in
movsl
daa
sbb
inc
add
hlt
lea
pusha
jnp
dec
mov
push
push
xchg
nop
sub
xchg
pusha
pusha
shrb
inc
ljmp
in
notl
loope
sbb
push
pop
inc
jno
push
dec
jne
xor
push
arpl
in
lock
mov
add
and
inc
fdivrs
jae
sti
test
or
icebp
jbe
mov
add
push
cmp
push
lahf
dec
cltd
mov
stos
scas
push
cli
int
push
push
and
test
loop
test
psadbw
cmpsb
in
adc
pop
sti
nop
inc
fisttpll
std
nopl
sbb
loope
adc
je
movsb
lahf
dec
aam
jno
cmp
lret
dec
call
lods
mov
adc
jnp
jge
repnz
das
imul
mov
push
or
movsl
imul
outsl
cmpsl
lahf
sub
lds
int3
mov
pop
mov
push
test
mov
test
mov
sub
fld
inc
outsl
push
daa
cmp
mov
fucomi
andb
je
and
shlb
addl
aaa
cmp
out
mov
data16
push
sbb
sbb
in
dec
sahf
mov
rorl
rep
xchg
sbb
in
xchg
add
sbb
mov
adc
push
add
dec
mov
or
aaa
and
dec
orb
cltd
test
data16
cmp
xchg
mov
daa
jmp
jl
pop
xchg
inc
mov
loope
or
xchg
out
sti
and
inc
cmc
jp
push
lock
aad
mov
or
fwait
aaa
mov
arpl
sbb
shlb
subb
sub
xor
push
pop
mov
idivl
adc
out
jg
fsubs
cli
cs
pop
andl
sbb
mov
mov
ret
mov
out
inc
je
and
mov
adc
mov
shl
cltd
clc
int
add
cmp
loopne
inc
add
clc
clc
mov
inc
call
fidivs
hlt
cmp
ret
push
insl
loop
pop
punpckhdq
iret
dec
push
xor
cmc
xlat
xchg
xchg
mov
dec
lret
inc
dec
inc
negl
push
mov
mov
pop
lds
repz
repz
stc
add
iret
je
add
jno
je
js
ss
xor
mov
sub
push
cmc
mov
ret
or
std
roll
orb
dec
mov
ja
xor
xor
outsl
repnz
pop
sbb
ja
jecxz
push
xor
ljmp
cltd
sbb
incl
and
mov
mov
xor
mov
jp
sbb
cmp
adc
test
push
cmc
xchg
mov
jnp
arpl
les
push
in
pop
jne
loop
mov
push
out
jl
ret
jmp
mov
add
xchg
ds
sub
add
out
lods
movsb
out
in
fbstp
in
mov
add
in
sub
and
or
fcomps
mov
pop
roll
imul
movsb
and
inc
cld
jae
cwtl
fistpll
and
sub
hlt
hlt
pop
cmp
ds
je
xchg
xor
and
data16
inc
and
pop
sbb
rcrb
and
mov
sbb
insl
xchg
xor
inc
push
inc
xchg
shll
cmpb
push
das
cs
and
jno
pop
daa
fcmovb
or
and
lds
test
mov
jge
xor
mov
mov
sbb
or
mov
icebp
and
push
pop
inc
repnz
outsl
xchg
push
ss
dec
xor
js
aaa
sub
je
adc
sub
insb
xchg
pop
daa
push
data16
xchg
push
sub
push
repnz
iret
incl
xchg
addr16
les
jbe
leave
jg
push
push
repnz
test
mov
xchg
jae
stc
pop
jle
inc
jmp
out
mov
fnstenv
call
xor
push
ret
cmp
or
leave
inc
mov
and
add
iret
out
mov
test
lret
xchg
je
mov
sub
je
dec
sbb
in
pusha
mov
ja
xchg
out
inc
inc
in
jno
nop
push
push
call
stc
sbb
cmpsl
icebp
call
add
adc
loopne
mov
push
sarl
push
lahf
or
or
mov
mov
stos
cld
ret
scas
push
test
idivl
adc
push
dec
sub
cmc
push
mov
popf
iret
mov
arpl
push
subl
xor
ror
cli
dec
or
adc
test
je
or
xor
call
lods
xchg
pop
fdivr
cmp
iret
aam
pop
imul
sbb
ret
push
pop
in
push
xchg
testl
int3
js
sbb
sub
dec
xor
in
lret
fisubl
clc
sub
mov
loope
xchg
mov
push
fldl
adc
dec
insb
and
out
inc
sub
inc
xchg
movb
repz
sub
divl
jmp
leave
add
mov
cmp
fcoms
push
cli
dec
outsb
cmp
add
inc
cld
mov
push
xchg
stos
sbb
jg
dec
hlt
add
mov
in
pop
dec
or
cs
sahf
sbb
addb
push
fld
sub
sub
fldcw
fs
or
jno
shrd
sub
or
lcall
jmp
adc
leave
cmp
mov
xchg
psubsw
lcall
mov
loopne
mov
pop
ljmp
rcrb
and
aam
mov
daa
fst
out
mov
imul
out
push
mov
mov
pop
invd
test
in
les
xor
push
mov
mov
dec
pop
stos
mov
cli
pop
pop
pop
jae
sbb
dec
imul
mov
jns
clc
jbe
test
jl
cmpsb
inc
out
sbb
sbb
adc
hlt
mov
jo
fcmovnbe
stc
xchg
mov
pop
stos
scas
push
pop
push
inc
popf
mov
mov
dec
and
loop
and
pop
imul
add
test
les
dec
jbe
repz
daa
enter
andl
int3
add
fimuls
call
adc
sahf
icebp
in
push
js
cmpsl
cld
sub
mov
gs
loop
xor
push
dec
shlb
dec
jbe
outsl
addb
jge
adc
clc
adc
or
mov
in
sub
push
lock
sub
lcall
inc
out
mov
jg
cli
imul
sbb
xor
dec
or
mov
xor
mov
jmp
inc
dec
push
call
mov
push
mov
popa
fisttps
es
stc
lea
push
adc
or
sub
in
add
scas
clc
add
mov
adc
add
rclb
xchg
mov
xchg
xor
xchg
sub
mov
das
stos
xlat
push
add
mov
sbb
in
or
dec
test
inc
mov
rcrb
push
fimuls
aam
cli
mov
inc
xchg
je
movsl
xor
imul
cmc
gs
dec
lods
fs
clc
cmpb
aad
es
cmp
xchg
mov
repnz
mov
aad
push
xchg
lock
push
int3
mov
mov
push
loopne
add
stc
and
cli
sub
jno
sub
xor
xor
fdivp
xchg
dec
push
xchg
arpl
sbb
add
ret
dec
je
test
popa
sahf
cmc
faddl
mov
pushf
adc
xor
rcl
or
and
sub
jne
jmp
icebp
mov
sti
jno
pop
mov
pusha
enter
dec
cmp
sub
mov
jmp
mov
push
sbb
xchg
jae
sub
outsb
xchg
dec
rcrl
into
ss
pop
pop
pop
js
xor
mov
sub
sarb
jbe
pop
lahf
stc
mov
cmp
aam
adc
insl
rorb
lods
pop
repnz
repz
and
jns
adc
push
les
sbb
fcmovb
jl
enter
int
cmp
fs
or
inc
cmp
aad
test
pop
pusha
push
ja
mov
sub
or
cmp
jnp
or
shlb
inc
push
in
jb
lcall
xchg
mov
call
pop
cld
into
mov
xchg
outsb
jmp
loope
push
jle
mov
lret
cmc
jge
add
sti
push
leave
pop
inc
pop
inc
inc
cltd
adc
lods
imul
pop
outsb
cld
data16
outsl
notl
cltd
iret
and
cmp
mov
jp
arpl
int3
push
xor
sbb
test
mov
mov
test
movsl
lds
leave
loopne
shlb
mov
or
pusha
test
in
rclb
imul
int3
push
scas
imul
in
fistpl
mov
mov
jmp
jbe
ds
pop
loopne
fildl
inc
mov
sbb
cld
daa
pusha
std
jb
mov
pop
inc
add
out
shr
mov
inc
mov
or
js
xchg
mov
aam
jae
jns
nop
pop
outsl
test
rcrb
idiv
adc
out
rolb
xchg
ljmp
cs
sub
mov
push
jmp
mov
dec
xor
pop
mov
pop
inc
out
sti
pop
out
pop
in
mov
es
push
jne
adc
xchg
les
fldt
stos
jmp
xor
jno
ret
push
sub
test
sti
sbb
out
rcr
dec
sub
jbe
dec
xor
mov
mov
xor
stos
pop
sub
or
jmp
xchg
mov
dec
lea
mov
outsb
mov
mov
cli
in
out
out
popf
xchg
xchg
adc
loop
mov
inc
jns
jb
mov
ret
mov
fwait
dec
mov
mov
gs
and
push
out
or
into
mov
ss
xor
call
shl
cli
push
dec
mov
bound
adc
mov
add
cli
ja
mov
xor
fwait
mov
ds
jmp
dec
sbb
lods
insl
andb
mov
cmp
sahf
or
data16
bound
inc
in
fs
jns
xchg
in
jmp
sub
inc
add
pusha
or
adc
negl
cmp
in
jecxz
mov
jle
jno
hlt
or
push
xor
dec
dec
lds
je
je
sbb
sahf
pop
sti
pop
dec
dec
pushf
cwtl
pop
mov
pop
sahf
outsb
inc
mov
add
dec
cmp
mov
or
pop
fisttps
scas
xor
enter
mov
pushf
ret
loopne
xor
stc
push
in
inc
fbld
clc
mov
jns
mov
outsl
mov
add
lods
push
dec
lods
or
push
fsub
iret
dec
lahf
fistps
gs
icebp
lods
adc
outsl
popf
sti
pop
ret
jbe
mov
pop
push
mov
push
pop
sbb
cld
jle
and
adc
cmp
jb
inc
mov
aaa
fnstcw
adc
mov
mov
mov
pop
inc
sbb
dec
nop
shlb
push
mov
xor
mov
jnp
xor
cltd
pop
popf
out
jge
call
outsb
ror
and
xchg
iret
sbb
and
stos
cmp
mov
aaa
cmpb
sbbl
divl
dec
test
dec
jge
rcr
adc
add
hlt
imul
ret
fwait
xchg
fstpt
popa
push
ljmp
out
mov
pop
jb
xchg
mov
aam
jl
pop
push
std
es
shrl
push
jl
push
out
clc
outsb
cmp
aas
cmpl
inc
in
jmp
mov
jne
ja
jns
cltd
movsl
cmp
movsb
aaa
aam
and
int
pop
dec
movsl
mov
std
mov
stc
lea
push
fadd
jno
or
xor
mov
insb
dec
xorl
jo
addr16
fldl
jle
fisubl
gs
shll
enter
xor
pop
les
cwtl
fistpl
mov
mov
fbstp
xchg
mov
push
and
pop
popa
push
inc
ret
je
mov
test
add
jae
pushf
add
stc
movsl
add
outsl
xchg
fstp
pushf
int3
push
push
or
dec
or
je
fsubrl
in
xchg
adc
xor
mov
cmpsl
cltd
test
insb
and
sub
lds
ja
std
inc
repnz
sti
ja
loop
dec
in
outsb
sahf
ljmp
xchg
movsb
mov
inc
jecxz
mov
bound
sbb
sbb
add
ss
or
inc
mov
jp
sub
mov
out
fidivs
enter
sub
mov
inc
pop
push
mov
sub
pushf
lret
daa
add
fcmovnu
test
andb
adc
insb
stc
pop
and
aam
xchg
mov
cmp
cmpl
orb
outsb
mov
add
js
loop
sbb
dec
jbe
adc
lcall
pop
cmpsb
loop
repnz
nop
scas
xchg
sub
pop
jb
sbbl
jb
xor
insb
icebp
out
ds
testb
cmpsb
xor
icebp
or
cltd
pop
inc
push
lea
cmc
shlb
mov
outsb
ljmp
cltd
add
out
sbb
ds
mull
mov
push
in
outsb
cwtl
int
outsb
mov
or
and
fs
jb
inc
jo
std
cmpsb
xchg
dec
je
adc
jbe
hlt
stos
or
sub
aaa
or
cs
cli
and
xor
jmp
ret
cmc
xlat
mov
data16
and
mov
jns
push
divb
dec
and
lahf
ljmp
ljmp
test
mov
add
sub
cmp
rorl
scas
js
es
cmpsb
out
pop
movsb
cmp
int
sbb
cmp
pop
lds
leave
test
cltd
lret
dec
shlb
adc
lret
and
add
test
ret
mov
jecxz
cwtl
push
adc
lods
dec
dec
cmpsb
xchg
andl
loop
mov
jno
add
push
cmp
lcall
clc
mov
inc
out
and
fmuls
jp
scas
or
lcall
dec
testb
push
xchg
shr
mov
imul
jnp
push
scas
js
jl
adc
jnp
iret
jo
aam
push
stc
das
and
sub
js
pop
sub
jae
repz
xchg
mov
sbb
dec
scas
notl
pop
pop
ret
cltd
ret
lret
jne
push
cltd
hlt
ficompl
in
cwtl
xchg
jnp,pn
jl
mov
dec
xlat
fldt
movsl
cmp
je
test
inc
pop
sahf
cmpsb
jp
jg
shlb
push
pusha
in
xor
movsl
lret
mov
jle
jcxz
in
jo
adc
dec
adc
int
cwtl
add
repnz
sti
cmp
out
stos
loop
mov
dec
jno
orl
rorb
or
sbb
mov
pop
cwtl
or
jg
mov
decb
out
jg
push
ror
push
lcall
lret
sbb
sbb
sti
mov
mov
mov
xchg
shlb
dec
add
test
hlt
lahf
push
and
bound
inc
adc
push
sub
push
mov
fstpt
leave
bound
sub
cmpsl
sti
out
js
scas
mov
push
sbb
sbb
cmpsb
xchg
xor
cmc
scas
jo
mov
aam
nop
sub
xor
ret
aas
sbb
or
daa
imul
jno
and
iret
scas
mov
lret
popf
repz
outsb
fmull
or
imul
cmc
lea
inc
lods
hlt
ss
inc
or
mov
jl
cmc
jmp
js
push
cld
in
cmpsl
add
xchg
xchg
pop
ljmp
adc
insl
xchg
cmp
jg,pn
mov
rcrl
iret
aaa
push
jmp
es
int
dec
fwait
adc
sub
inc
loop
sar
or
aam
inc
into
daa
jne
adc
or
cld
cmpsb
cmp
rorl
imul
lock
out
xchg
add
push
adc
faddl
sbbb
or
mov
test
dec
sub
and
movsb
push
rorb
popa
add
fildl
mov
inc
mov
call
mov
pop
outsb
cmp
push
lock
aas
cld
stos
cli
xor
or
sbb
iret
sbb
add
cmp
cli
fidivrs
push
xchg
insb
inc
pop
push
and
roll
lret
push
cld
pop
in
iret
sub
fmull
mov
dec
popa
mov
add
inc
scas
roll
push
mov
xchg
repz
stc
lret
cwtl
push
xlat
mov
pop
enter
outsl
jb
mov
aad
mov
rorl
or
push
cmp
xor
xchg
fisttpl
ret
dec
fcomps
fistpl
data16
xor
or
insb
out
sbb
in
mov
rcrl
and
repz
pop
xchg
mov
leave
fadd
sub
pop
shlb
out
xor
xchg
mov
inc
jne
cmp
loop
mov
jge
and
in
cmp
icebp
js
lods
mov
dec
fnsave
imul
movsl
mov
divl
idivl
pop
mov
out
std
sbb
loopne
mov
xor
cmp
dec
out
push
sahf
cmc
xchg
clc
stos
mov
inc
cs
dec
xchg
popa
mov
dec
mov
mov
ffree
xchg
adc
jno
in
mov
cmc
fwait
inc
push
jne
lahf
loope
and
fimuls
out
nop
es
cld
int
pop
std
aam
sti
pop
mov
push
stos
movsl
mov
sti
rclb
sbb
je
add
add
cmp
out
mov
dec
xor
push
negb
add
jg
test
add
es
cmp
xor
scas
mov
push
push
cmp
mov
adc
iret
imul
sarb
pop
stos
inc
jge
clc
lcall
push
cmp
and
and
xchg
xor
negb
lds
inc
cmp
je
inc
popf
adc
insb
xor
je
das
imul
ja
negl
in
shlb
mov
pop
jns
cwtl
mov
mov
loopne
fldcw
jo
icebp
jge
and
fldpi
pop
xlat
mov
loopne
sbb
test
or
mov
mov
ds
dec
mov
or
incl
daa
orb
cmp
mov
insb
sub
push
sub
jno
icebp
push
push
pop
jg
pop
aas
ljmp
xor
xchg
or
push
lock
insb
push
insl
adc
mov
add
jg
mov
fwait
dec
lods
add
dec
push
in
inc
int
lds
sub
ss
fwait
xor
andl
pop
inc
jl
mov
out
lret
xlat
cmpsl
and
mov
arpl
insb
enter
rclb
inc
cld
push
xchg
out
sarl
pop
add
cmc
popa
jmp
mov
data16
sbb
fiaddl
pushf
add
cmp
mov
pop
stc
lret
cld
cmp
add
out
cltd
jae
lods
mov
fwait
popf
jns
or
imul
pushf
xchg
push
mov
mov
mov
insb
adc
aam
fsub
sub
pop
and
mov
mov
insb
dec
daa
insb
aaa
and
lds
mov
lock
ss
push
aas
inc
imul
add
rcll
jo
lods
outsl
adc
pop
fndisi(8087
dec
inc
les
jne
stos
cmp
and
add
jae
cli
test
xchg
cmpsb
mov
pop
jmp
js
push
mov
iret
aas
push
xlat
into
js
push
inc
and
mov
outsb
jae
sbb
sub
ret
mov
pushf
insb
repz
push
sub
add
pmaxsw
sbb
hlt
xchg
mov
mov
push
stc
filds
je
int3
inc
mov
sbb
xchg
cmp
mov
int3
mov
and
imul
mov
out
negl
xlat
cmc
jb
or
adc
mov
and
mov
addl
inc
push
scas
mov
xchg
das
mov
mov
cmp
subb
push
jne
dec
in
sbb
push
mov
cwtl
scas
or
mov
jmp
and
rcl
shll
xchg
popf
das
jnp
xor
and
lea
loop
adc
mov
imul
jge
push
jp
push
inc
pop
pusha
movsb
pop
add
mov
in
lahf
dec
jle
test
out
stos
cwtl
scas
mov
push
add
push
sbb
adc
mov
mov
mov
sbbb
andl
into
pop
push
aad
sub
cmp
ficomps
add
cld
repz
mov
xchg
ljmp
dec
jb
adc
pusha
cmp
sbb
push
clc
mov
pop
xchg
dec
push
cmp
sarl
rclb
push
mov
jecxz
push
push
or
pop
ret
push
ds
adc
loopne
jle
cltd
cli
mov
repnz
xchg
in
std
mov
push
mov
daa
es
push
pop
xlat
inc
add
aas
dec
outsb
pop
sbb
aaa
pop
xchg
cmp
pop
mov
adc
sbb
int
pop
cmp
dec
mov
xor
icebp
adc
dec
sbb
xchg
loop
sub
test
adc
jmp
bound
and
mov
sub
xor
xchg
mov
rorl
aam
dec
ret
aam
fwait
adc
ds
test
imul
jo
mov
imul
data16
popf
mov
in
jg
adc
push
lret
jl
push
sbb
es
mov
ljmp
xor
xchg
mov
stos
sub
sahf
clc
test
sbb
ret
cmpsl
mov
es
push
in
in
scas
gs
cmp
test
and
ror
dec
lcall
out
lcall
dec
jb
adc
or
lods
rcrl
fs
sbb
mov
popf
out
push
scas
movsb
mov
testl
mov
inc
aam
and
out
pop
add
filds
dec
in
clc
es
or
clc
mov
mov
dec
stc
mull
popa
sbb
mov
lods
ss
xchg
sahf
repnz
lods
push
aam
push
out
mov
js
or
and
add
cltd
and
xchg
popf
pushf
dec
repnz
inc
jno
popa
imulb
das
add
sarb
mov
mov
pop
cmpsb
lret
pop
dec
aaa
inc
ljmp
pop
mov
insl
loopne
mov
or
outsl
push
cld
pop
nop
push
jnp
or
mov
inc
test
and
pusha
shl
test
xchg
jmp
xor
ret
cs
sti
fists
sbb
inc
xlat
lods
mov
push
mov
mov
aad
sub
addr16
or
js
fs
xor
insb
cmp
mov
popf
int
cltd
inc
lea
pop
pop
incb
scas
adc
pushl
cmc
inc
test
dec
mov
dec
jnp
inc
push
ds
pop
jge
cld
outsb
and
cld
data16
mov
inc
std
data16
xor
add
mov
int
je
pusha
ret
pushf
lock
push
xor
clc
andl
sbb
paddsb
inc
ret
cld
mov
int3
cld
leave
push
int
ljmp
jae
mov
inc
scas
sbb
jnp
mov
mov
mov
add
dec
mov
mov
lret
int3
cli
dec
popf
mov
xchg
ja
clc
jne
pop
and
jo
leave
popa
jb
lea
lock
jns
inc
out
out
push
ret
fistpl
pop
shl
ja
push
out
lret
test
push
xchg
fsubrp
xchg
insl
pop
pushf
sbb
repnz
push
push
movsl
movsl
dec
sbb
fdivr
xorl
and
jg
aad
lea
push
or
mov
lods
push
or
jae
aas
push
cmp
imul
sub
les
push
add
repnz
aam
roll
lcall
inc
jb
xor
push
nopl
sub
push
aaa
inc
push
mov
push
mov
int3
cmpsb
aad
jl
jae
sbb
push
jb
leavew
adcb
mov
push
fiadds
jge
inc
std
ret
add
xchg
add
hlt
sub
std
sub
jle
pop
cwtl
jle
dec
cmpsb
mull
adc
sub
or
adc
dec
fidivs
icebp
inc
movsl
inc
mov
mov
xchg
jno
scas
lods
in
gs
faddl
sahf
es
lcall
ret
sub
xchg
fmuls
mov
pop
ret
adc
mov
jle
pop
or
testl
sbb
call
push
adc
push
sbb
imul
cltd
xchg
divl
mov
or
das
negb
in
push
mov
or
jns
call
clc
arpl
inc
dec
outsb
mov
dec
es
xchg
fcoml
pop
cld
arpl
fdivrl
movsl
int
push
mov
mov
es
add
pushf
jecxz
pop
loop
add
scas
mov
dec
mov
sub
pop
cmp
sbb
nop
inc
mov
scas
jmp
nop
fisttpl
sbb
insb
mov
aas
xchg
xor
mov
mov
out
jg
pop
mov
ja
lcall
dec
pop
add
dec
in
mov
jnp
lea
pop
idivb
pushf
out
dec
xchg
sub
sarl
or
sbb
fsqrt
push
std
sub
and
mov
mov
mov
stos
rcll
xchg
pop
inc
pop
aaa
or
pavgw
and
iret
mov
nop
jp
push
stc
adc
negb
push
divb
addr16
insl
fwait
cmpsl
std
push
or
jg
mov
sbb
push
xor
leave
or
jb
jg
fidivl
cwtl
adc
mov
data16
adc
push
mov
and
jo
add
lock
push
test
add
sbb
push
inc
mov
jae
into
push
cld
repnz
add
mov
inc
lods
sub
std
loope
push
dec
push
pop
fsubrp
cmp
enter
pusha
xchg
je
sub
push
sub
rorb
subl
stc
bound
test
cmp
out
mov
or
mov
xchg
fs
jg
test
pop
sub
or
fcoms
pop
and
mov
imul
mov
inc
out
jmp
jg
aad
xchg
movsb
mov
leave
js
cmp
add
mov
lret
cs
out
lods
repz
adc
popf
push
jns
test
jne
inc
sti
rcrb
dec
cltd
outsl
mov
daa
add
scas
and
sub
fwait
mov
fmul
jmp
xchg
dec
add
pop
jae
inc
lock
lds
fimull
push
int
sub
cltd
fldenv
fimull
int
mov
popf
push
les
jne
dec
pop
rolb
sar
idivl
jb
xor
das
fisttps
and
mov
dec
cmp
sub
lret
or
cli
pop
and
adc
xor
cmp
cmp
lahf
add
ret
jmp
mov
rolb
cmpsl
aaa
movsl
shrl
jecxz
sbb
scas
lcall
insb
jl
aad
xor
addl
shlb
adc
lods
outsb
mov
jo
insb
ds
push
pop
repz
in
aas
and
mov
test
xor
jbe
sub
lods
add
leave
sbb
loop
stc
push
sbb
cmpsb
out
jnp
loopne
cltd
test
sbb
cmc
jo
imul
repz
mov
sbb
dec
and
cmpsb
gs
rcll
adc
mov
adc
stc
mov
xchg
xor
and
lahf
push
xor
popa
insl
dec
push
iret
sub
ret
sub
mov
push
insl
lods
xchg
add
lret
shrl
xor
or
xchg
repz
adcb
dec
jo
loop
push
test
pop
out
rcr
movsb
daa
int
in
add
in
jge
pop
rcll
jl
xor
jecxz
dec
pop
jl
adc
sub
shlb
xchg
xchg
and
das
movsl
test
fsubrl
data16
xchg
pusha
cmpb
addl
pop
mov
mov
pop
repnz
inc
loop
sub
xchg
ret
lods
or
push
call
dec
dec
sub
movsb
popf
iret
push
mov
movsl
jbe
or
js
adc
cmpsb
test
pop
jp
push
movsl
mov
lret
scas
or
cmpsb
inc
out
sbb
testb
idivb
mov
fsubrl
dec
insl
popa
mov
push
test
hlt
mov
add
xor
mov
aas
mov
inc
out
inc
push
ja
mov
scas
imulb
mov
pop
cltd
int3
pop
lret
xlat
sub
cmp
fnstsw
and
pop
je
das
sub
jmp
cmp
lock
sub
adc
jb
rol
fstps
mov
pusha
imul
jne
mov
scas
sahf
xlat
arpl
lret
aad
test
sbb
ret
or
cltd
xchg
pop
inc
xchg
sub
icebp
nop
pop
lret
je
and
in
data16
inc
aad
adc
stos
test
push
jle
add
mov
sbb
cs
pop
push
dec
int3
dec
test
mov
jo
jg
pop
aaa
mov
aad
std
sub
and
xchg
dec
outsl
shrb
inc
jmp
xchg
repz
xlat
pop
loop
inc
add
or
fcompl
cmp
cli
scas
lret
repnz
add
outsb
fadd
nop
cmpsb
out
jmp
fidivl
ja
out
addl
or
fidivrl
mov
es
ss
add
idiv
call
insl
int3
inc
jge
sub
sbb
sahf
lret
setb
push
pop
cmpsl
iret
add
push
das
xchg
jg
daa
fistl
rcl
cmpsl
dec
addr16
pop
int3
cmpl
insb
sarl
loop
fucomip
popa
insl
loope
lea
stos
mov
gs
jns
ljmp
aad
in
sbb
and
fisubrl
test
mov
cltd
sti
aam
pop
mov
js
leavew
push
lds
or
cld
iret
call
hlt
insl
aad
and
mov
cmp
mov
ljmp
ja
pop
cmp
mov
shl
sbb
jb
mov
and
in
jno
push
sub
movsl
jle
dec
repnz
dec
add
sbb
sbb
mov
call
mov
test
fisubrl
inc
push
outsb
sub
jae
pushf
mov
lret
add
cmpsl
js
and
lgs
jmp
in
mov
sub
mov
mov
pop
adc
push
adc
movsl
push
inc
pop
ret
xchg
cld
mov
inc
fnstsw
sbb
inc
sub
in
cld
mov
and
push
pushf
mov
jns
lods
stc
mov
aaa
jae
or
pop
add
ds
jg
jo
insb
outsl
lahf
sub
cmpsl
sbb
out
stos
jp
xchg
rcll
xchg
add
scas
pop
daa
adc
nop
cli
dec
inc
movsb
insl
ret
jle
in
clc
mov
fld
inc
test
or
nop
icebp
pop
pop
fisubrl
daa
adc
aad
or
xchg
xchg
xlat
adc
sbb
lcall
xchg
jl
imul
mov
shll
stos
in
inc
sub
divb
ret
adc
mov
out
mov
cmp
rcll
xor
cmp
xor
mov
mov
fs
cltd
mov
mov
or
stos
aaa
cmpsb
sbb
es
insl
pusha
js
sahf
lods
mov
ss
lcall
in
decb
xor
jb
pushf
jb
sbbb
shlb
jo
xor
insb
fnstcw
jbe
push
sub
lods
aas
cmp
aad
scas
jg
dec
fldt
xchg
gs
and
push
repz
sub
inc
xor
add
test
mov
lcall
push
pop
cmp
je
lret
cmpsl
sahf
pop
add
pop
mov
aaa
sbb
imul
and
mov
cmp
out
in
or
in
adc
add
outsb
and
movsl
shlb
pop
rcrl
in
push
sahf
loop
cli
movsl
push
adc
xchg
sti
jl
fcomp
ja
popa
movsb
mov
pop
movsl
nop
lock
fcomi
dec
add
add
mov
jecxz
pop
push
pushf
shl
sub
mov
pusha
daa
dec
clc
adc
inc
cwtl
push
sahf
xchg
dec
push
or
or
ljmp
in
aaa
out
subl
aaa
mov
push
test
cmpb
notb
loop
jge
loopne
jb
push
or
shl
pop
fists
js
ja
std
js
pop
mull
inc
sbb
cmp
in
jae
loope
jnp
scas
jmp
adc
imul
push
xchg
jb
imul
or
mov
in
rcrb
add
shll
xchg
push
mov
jno
or
lahf
mov
loopne
mov
sbb
jge
fwait
lea
dec
cmp
test
or
or
popf
clc
mov
andl
in
lods
std
call
dec
out
jg
ret
mov
aad
xchg
mov
xchg
xchg
mov
inc
mov
mov
fs
xchg
out
adc
insl
jecxz
fsincos
test
dec
xchg
loope
loopne
imul
jle
stos
notl
test
loope
xor
loope
out
enter
cmpb
mov
push
dec
and
test
mov
add
lahf
push
add
outsl
aad
mov
aad
mov
inc
in
xchg
inc
xlat
inc
push
sbb
cmp
sub
psrad
stos
push
push
xor
lcall
sub
mov
sub
mov
cvttps2pi
ljmp
out
pop
call
jno
adc
sbb
shlb
or
das
lret
fidivs
xchg
les
cmc
jl
jnp
mov
sarl
loopne
cli
xchg
scas
js
lds
jmp
sub
dec
inc
fbld
lret
lock
or
and
cli
lahf
mov
out
jae
add
rcrb
lea
push
lock
das
movsl
cs
mov
mov
mov
test
jo
push
stos
xchg
sarl
stos
mov
xchg
call
or
fcoml
out
add
fidivs
or
xrelease
adc
test
sbb
pop
jns
scas
rorl
movsl
movsl
imul
add
sbb
lock
jae
bound
int3
jl
out
mov
pop
mov
leave
jo
xchg
push
in
test
or
inc
mov
push
inc
rcr
jne
xchg
adc
sub
out
std
out
mov
mov
push
rep
and
adc
mov
lods
lock
je
add
enter
mov
lods
mov
outsl
insb
add
in
loop
movsl
lahf
pop
add
stos
jecxz
xor
lods
clc
movsl
rcll
aas
jp
adc
jo
cmpsl
pop
jno
fcmovbe
leave
or
mov
cmc
dec
sub
mov
inc
mov
mov
mov
lods
inc
push
mov
stc
cmp
or
ss
xchg
fucomi
mov
xchg
mov
cmpsb
in
cmp
adc
fsubl
mov
pop
mov
aad
das
xor
mov
test
popa
push
pop
fwait
cmpsb
out
inc
scas
push
fistpll
lcall
not
xor
dec
jecxz
sti
jb
insl
mov
or
lret
jne
mov
adc
xchg
andb
or
popa
int
cld
ds
mov
cmp
rcr
add
rorb
cwtl
mov
loope
pop
dec
push
ret
mov
push
fisubrs
sbb
daa
gs
ljmp
les
xor
push
inc
rcr
push
sub
xchg
cwtl
ret
jbe
sub
fisubrs
into
cmpsb
mov
mov
std
into
dec
xchg
in
sahf
mov
inc
int3
decb
stc
mov
mov
sub
jb
shll
sub
xchg
je
xchg
xchg
xchg
ja
cmp
xor
outsl
cmp
movsl
test
scas
les
mov
stc
add
lods
gs
push
sbb
sub
or
addr16
dec
test
stos
pop
cmp
or
rorl
fcom
mov
loop
inc
inc
jns
out
lret
rcrb
scas
xchg
insl
inc
loop
inc
mov
jne
iret
or
in
mov
aaa
aam
and
add
lods
lods
add
mov
outsl
or
dec
aas
xor
les
and
les
repz
xchg
xor
ja
dec
jp
shl
add
cli
scas
mov
pop
jo
stc
jge
xchg
cmp
iret
sahf
test
dec
les
movsb
fbstp
jo
sub
sbbl
push
sbb
cmpsb
and
sbb
shl
inc
shll
pop
lods
cld
dec
pop
mov
mov
jle
jge
in
in
lock
sub
frstor
cmp
lock
push
jge
pop
cmp
push
and
lock
pop
jmp
xor
jl
xor
jbe
adc
inc
ljmp
insb
rorl
pop
lods
jmp
faddl
sub
xor
push
fisttpll
xchg
cs
arpl
pop
push
push
test
cli
inc
ljmp
cmc
xchg
imul
pop
jle
xorb
xor
loope
xchg
test
lret
mov
bound
cmpsb
jle
jns
xchg
aaa
movsl
mov
fcompl
popa
cli
sbb
mov
iret
mov
and
sbb
jo
xchg
pushf
dec
loopne
jae
fs
jno
lret
enter
cld
mov
push
fs
dec
jecxz
daa
icebp
mov
sbb
rcll
adc
out
call
or
adc
bound
sahf
add
and
xchg
push
sbb
pusha
not
pop
test
inc
sub
movsl
mov
sub
fcmovbe
mov
shl
fstl
out
add
lods
decb
clc
flds
jns,pn
rcr
roll
aad
xor
out
ljmp
add
pop
mov
cmp
dec
repnz
movsb
jnp
fstpl
cmp
out
adc
mov
leave
jns
stos
outsl
adcb
inc
sahf
cmp
dec
pop
xorl
adc
xor
mov
rorl
pushf
aad
stos
and
inc
test
lret
xchg
sbbl
cs
cmp
bound
mov
lds
dec
or
pusha
push
jg
dec
scas
jo
push
and
inc
out
jp
sub
lret
enter
aad
or
and
lods
pusha
sub
lret
push
notl
mov
xchg
push
out
das
fs
mov
test
dec
icebp
sub
mov
sbb
sub
pop
mov
loop
pop
mov
pop
cmp
ds
or
mov
lock
sbb
dec
test
ror
push
mov
sbb
mov
lret
xchg
cmp
stc
cmp
pusha
mov
mov
sub
icebp
scas
fldcw
repnz
inc
data16
add
xchg
sbb
out
loop
loopne
mov
out
in
cmp
jge
clc
adc
out
mov
mov
sbb
dec
orl
lcall
outsb
xchg
clc
rorb
bound
xor
sbb
pop
add
push
int
adc
xchg
movsb
push
inc
push
jae
jmp
xchg
push
lock
cmp
pop
stos
dec
jge
or
sub
pop
inc
xor
inc
nop
ret
in
mov
cwtl
rcll
adc
dec
popa
jnp
lds
shll
mov
mov
push
sarl
insb
test
cmp
call
or
test
cmp
sbb
push
pop
pop
lods
clc
paddusw
jg
xchg
repz
mov
dec
cmc
fists
cmp
lret
int3
cmp
push
lcall
mov
popa
xor
scas
inc
std
aad
daa
cmp
xor
int3
daa
lret
xor
pop
popl
mov
cmpsb
add
cli
mov
push
push
or
and
xor
aam
push
shl
xor
cli
add
jge
rcl
movsl
lock
inc
hlt
sahf
jo
cmc
xor
es
jb
inc
jo
ss
shlb
mov
test
fbld
cltd
fisttpl
pop
les
lret
popf
adc
pop
and
sbbl
xor
pop
mov
cmp
loope
sarb
movsl
mov
aaa
aam
mov
mov
lods
mov
nop
dec
daa
cs
subps
lahf
addr16
mov
add
pop
dec
dec
adc
cmp
pop
ret
mov
divl
sbb
in
ret
cltd
mov
jbe
jae
cld
mov
and
lods
mov
cmp
add
out
xchg
xchg
hlt
jns
pop
pop
lahf
call
int3
arpl
add
mov
mov
add
fnstenv
ds
bound
fnstcw
rcll
mov
rcrl
clc
loop
out
stos
pop
fucomi
movsl
xchg
mov
lds
dec
testb
push
sub
test
aam
adc
mov
mov
dec
in
and
cwtl
lret
cmc
and
ja
aaa
mov
and
cmp
cmc
jno
int
xchg
and
cmpsl
in
lahf
icebp
cmp
outsb
dec
nop
in
sbb
sahf
and
cmp
xchg
sub
dec
icebp
mov
inc
pop
sbb
icebp
mov
test
mov
inc
push
cld
xor
push
aaa
sub
fwait
dec
in
sub
and
movsb
imul
mov
inc
xchg
test
out
mov
fdivrs
aam
inc
iret
pushf
jp
xor
mov
ficompl
xchg
outsl
ss
mov
addr16
jno
jg
adc
pop
push
mov
enter
lods
or
push
pop
jge
add
pushf
dec
sub
out
inc
jp
fs
inc
pop
mov
mov
in
arpl
mov
or
push
xchg
test
out
sbb
xchg
hlt
mov
aas
cmc
les
adc
out
test
ret
pushf
mov
sbb
loop
in
xor
jno
jmp
add
adc
push
xchg
aas
xchg
movsb
adc
pop
and
cli
fwait
out
sahf
rcr
fbstp
pushf
or
lcall
call
cli
jl
fcmovne
push
bound
aam
insl
fwait
sub
outsb
cmp
push
fcmovu
mov
dec
outsb
pop
push
out
ds
inc
xor
mov
insb
lret
adc
rcrb
cmpsb
sbb
or
popf
cwtl
jo
or
das
out
in
pop
pop
mov
mov
jmp
pusha
and
repnz
mov
mov
aaa
mov
daa
adc
pop
push
pushl
and
cld
inc
dec
sbb
pop
lret
adc
fistps
leave
loop
leave
cmp
pop
xor
fimull
dec
lahf
ljmp
and
push
push
xchg
jmp
xor
sti
add
cld
jbe
shr
inc
les
in
jne
fs
incb
mov
mov
push
push
add
addl
imul
pop
xor
in
or
fists
mov
pop
sbb
sbb
andl
fisttps
xchg
adc
add
jecxz
mov
sbb
mov
cmp
xlat
sbb
cmp
cmc
jmp
jns
fsubr
inc
push
cmp
push
or
popf
pusha
xchg
mov
jno
stos
das
mov
pop
sahf
inc
ret
into
pop
inc
sbb
in
mov
dec
push
insb
cmp
lea
stos
add
lds
push
stc
xchg
push
dec
leave
pop
xor
mov
insb
push
int3
ret
rorl
scas
xor
sbb
hlt
mov
fists
and
inc
stc
cmpsb
ds
pop
aaa
and
cli
shlb
inc
mov
sbb
pop
inc
movsl
mov
pop
in
push
xchg
nop
push
pop
dec
xchg
in
mov
dec
jmp
xor
pop
lahf
add
jle
loopne
iret
ds
mov
lret
jb
or
mov
stos
ret
lahf
cs
inc
call
data16
and
mov
cmpsb
pop
or
clc
scas
mov
ja
popa
inc
inc
in
xchg
mov
push
inc
add
and
scas
jl
inc
fadds
fwait
jp
sbb
mov
scas
pop
pop
cmc
inc
adc
ret
jle
mov
fiaddl
out
ss
imul
test
add
add
cwtl
sub
xchg
inc
mov
outsb
xor
outsb
clc
or
or
negb
add
imul
mov
outsl
jge
pusha
aas
xchg
fbstp
jns
fnstcw
push
adc
clc
jle
sub
lods
addr16
fstps
in
sub
test
jp
cmc
dec
push
xlat
mov
push
mov
sub
xor
call
push
ficoms
gs
and
gs
fcomps
aad
dec
pop
mov
in
fbstp
cmp
and
adc
gs
mov
mov
mov
adc
mov
outsb
shll
jp
scas
adc
lret
mov
and
xlat
sub
lds
clc
and
repz
cmc
int
insl
aad
adc
sbb
mov
mov
mov
xchg
cmpsl
push
out
jne
push
testb
adc
push
ret
adc
imul
cmp
icebp
stos
adc
inc
sbb
cmp
xchg
fiaddl
in
inc
ret
pop
movsl
fsts
push
iret
repz
das
push
not
cmp
pop
or
jo
shrl
mov
ret
add
fmull
test
inc
xor
pusha
lcall
dec
aad
inc
out
shll
cmp
push
in
loopne
int3
mov
fdivrs
in
mov
fdivl
xlat
and
push
dec
or
aad
cmc
jb
xchg
std
or
aad
xor
sbb
cmp
scas
rcrl
pop
nop
lds
mov
enter
pop
gs
sahf
cmpsb
xor
push
idiv
pop
jmp
xchg
fisttpll
into
fucomip
cld
mov
shrb
int3
xchg
repnz
push
inc
and
decl
roll
jns
hlt
nop
mov
icebp
inc
and
mov
adc
ljmp
popa
jbe
in
mov
inc
imul
addr16
pushf
inc
and
fsubs
in
fldl
out
out
add
incb
sub
mov
sbb
pop
jae
loopne
or
xor
sahf
cld
jne
lret
je
pop
mov
xchg
pop
inc
shrb
imul
pushl
aas
hlt
out
and
pop
push
in
mov
pop
outsb
dec
outsb
leave
scas
xchg
cmp
cmc
xchg
shlb
iret
mov
add
dec
mov
or
stos
jo
cld
je
filds
pop
adc
lcall
sub
mov
mov
in
dec
mov
addr16
push
cmp
in
pop
iret
test
pop
xlat
and
sub
pusha
jl
shlb
pop
sbb
test
add
cmp
lea
cmpsb
repnz
fstpt
nop
xor
cltd
adc
add
push
or
mov
push
mov
ds
xorl
test
xlat
dec
ss
xlat
and
push
inc
fs
xchg
pop
jne
push
aaa
adc
inc
mov
xchg
rorb
cmp
xchg
sbb
sbb
mov
mov
jge
cmp
outsb
fs
loop
inc
filds
in
aas
pop
pop
or
add
ret
test
push
fcompl
loop
add
test
ds
jmp
data16
aas
mov
lock
loope
shrl
adc
in
xor
mov
jb
les
xor
jle
sbb
popa
pop
or
adc
out
nopl
pop
stc
cmc
xchg
cmp
inc
dec
xlat
or
inc
xchg
cmp
adcl
jl
xor
lea
out
ss
or
dec
pushf
aaa
sbb
and
push
xor
inc
xchg
rcrb
xchg
enter
push
push
and
dec
psubd
fisubs
add
les
sub
ljmp
andb
dec
sbb
into
cmp
fidivs
or
cmp
cmpsb
inc
pusha
sahf
mov
cli
mull
mov
add
fldl
int3
scas
incl
int3
shll
or
sti
rcrb
xchg
add
adcl
xlat
int
pop
mov
sbb
fstpt
pop
fs
or
inc
sahf
cmc
int
addb
ret
inc
cwtl
sub
call
jl
fld
lds
sub
stos
fstps
xlat
jecxz
jne
add
jno
jb
into
dec
divb
nop
imul
mov
cmp
push
sub
or
sbb
mov
sub
in
shr
arpl
cmp
add
pushf
lret
mov
popa
js
pop
into
fmuls
xor
cs
mov
mov
js
incb
repnz
aam
dec
mov
mov
add
sarl
repnz
faddl
add
jb
int
addr16
stc
pop
clc
mov
lcall
pushf
xchg
adc
cmp
test
aad
sahf
sbb
pop
pop
aaa
sub
inc
xadd
adc
dec
je
int
movsl
jge
ss
scas
jp
mov
aam
or
imul
hlt
mov
loopne
popf
push
sbb
repnz
clc
xchg
rcll
xlat
mov
fistl
push
xor
call
hlt
add
inc
lods
movsb
cmp
mov
xor
popa
jle
xchg
test
push
pop
pop
rcrl
enter
fists
jl
adc
pop
xor
add
fbstp
mov
and
and
sub
fmull
xlat
xlat
lock
mov
lret
xchg
mov
pcmpgtw
out
mov
ror
cmp
imul
add
insl
ja
dec
push
inc
int
xchg
out
add
push
mov
jl
and
pop
mov
and
sbb
xchg
push
outsl
pop
int
and
mov
imul
sub
lods
aad
cmp
popf
cmp
fiaddl
dec
addr16
dec
jne
mov
xchg
pop
pop
test
cmpsl
jns
mov
cmc
inc
mov
aad
and
fucomi
cltd
sahf
fildll
mov
out
fdivs
jno
inc
sbb
stc
push
shll
clc
jmp
or
ds
and
mov
fdivl
push
scas
jno
adc
fdivs
adc
bound
jle
or
mov
call
nop
sub
mov
mov
fdivs
fstpt
lds
lret
hlt
loop
adc
call
ror
decl
or
iret
jge
pop
out
sbb
xor
and
jmp
cld
mov
fidivl
and
aad
pushf
jecxz
enter
lahf
jo
cmp
inc
pop
xor
jo
jg
dec
or
cmc
int3
push
add
test
and
shlb
mov
test
dec
jge
loopne
out
inc
sub
mov
push
std
loop
pop
dec
jno
jns
and
and
aad
mov
cmc
cltd
jge
outsl
sar
xor
andl
sbb
push
xor
ljmp
inc
sbb
stc
out
cmp
lcall
clc
push
jmp
cmp
add
rclb
lahf
bnd
jg
cld
adc
cmc
pop
popf
daa
stc
nop
mov
jnp
test
jb
les
push
xor
dec
rol
leave
iret
aam
ds
int3
push
mov
aas
jbe
sub
pop
loopne
pop
movsb
popf
mov
mov
and
mov
mov
mov
push
outsb
xor
pop
jns
add
add
inc
push
ficoms
pop
in
loopne
mov
fsub
inc
stos
push
add
stc
or
mov
mov
leave
fistpll
lahf
icebp
inc
sub
xchg
out
pop
sbb
jb
xchg
scas
jl
aas
jle
cmp
fwait
data16
mov
cmpsb
mov
xor
repz
pop
into
ljmp
pop
data16
pop
loope
xor
or
mov
mov
jmp
dec
insb
imul
dec
in
movsl
aaa
mov
pop
imul
xchg
loope
loope
push
int
jge
test
fsubr
cmpsb
cmc
xor
xor
push
loop
jecxz
cmp
pop
std
add
add
cmc
mov
jbe
xor
inc
call
mov
int
pop
or
insl
cmpsl
fidivrl
insl
int3
push
sarb
cld
movsb
dec
sub
inc
mov
dec
mov
xchg
js
fbstp
mov
push
and
mov
mov
stos
lahf
roll
pop
push
jg
push
inc
iret
test
lret
cmp
jnp
leave
pop
jns
pop
stc
rcl
sub
mov
test
mov
jo
jno
pop
jbe
int3
jmp
clc
lock
mov
xchg
push
add
xor
xor
jbe
sbb
cmpsl
lods
jo
sub
jbe
mov
xor
jb
cmp
insb
mov
jnp
xchg
cmp
sbb
sbb
and
dec
push
andb
cltd
addr16
shr
nop
push
outsb
mov
sub
pop
sbb
jo
push
cs
dec
push
js
pop
decl
add
jo,pt
cwtl
cli
adc
sbb
rorb
dec
xchg
notl
dec
lret
add
mov
lret
adc
std
icebp
in
jno
cmp
daa
jp
push
sbb
cmp
or
stc
pop
inc
lods
jne
dec
pop
sub
mov
jns
scas
cmp
push
icebp
enter
inc
jbe
sub
sbb
out
mov
jge
rcll
icebp
or
arpl
in
or
adc
aam
or
mov
xchg
test
dec
pop
sub
rcll
outsb
xchg
outsl
add
sbb
ror
cmpsl
icebp
inc
and
cmp
scas
shlb
loop
sub
mov
add
and
xor
insb
cwtl
pop
mov
xchg
cmpsb
or
mov
sbb
jg
sub
xchg
scas
xchg
pop
or
mov
push
into
movsl
mov
xchg
icebp
loope
xchg
inc
enter
push
mov
mov
pop
mov
lods
push
nop
pop
roll
into
rorb
jo
int3
sbb
jg
pop
jb,pn
adcb
sti
insl
mov
pop
xchg
bswap
jmp
out
sub
fdivrl
cltd
test
les
adc
jb
or
sbb
sbb
jnp
jno
outsb
aaa
jmp
push
les
addb
popa
ja
pop
dec
in
das
inc
push
pop
in
adc
cwtl
ljmp
push
dec
adc
push
mov
fucomi
push
push
imul
push
repz
subl
xchg
jnp
stc
mov
fisubrs
jecxz
push
cs
ret
stos
movsw
and
sub
mov
outsb
sbb
push
fldt
inc
pop
fwait
js
xor
dec
cmp
dec
stc
jns
xchg
test
les
mov
lods
mov
sti
and
xor
imul
fsubr
or
jns
repz
pop
mov
les
inc
xchg
ret
std
xlat
aad
testb
jl
call
mov
dec
lea
fwait
pop
mov
das
ja
ljmp
fistps
push
scas
inc
pop
ljmp
adc
sbb
imul
in
mov
in
mov
jns
sar
cltd
jle
xchg
pop
push
mov
add
adc
xchg
int3
out
add
out
stos
and
cmp
imul
mov
xor
nop
out
or
sbb
xor
sar
inc
int
dec
in
leave
cmpsb
or
mov
popf
ficomps
pusha
xchg
in
jno
add
and
jle
inc
js
jbe
lret
aad
ret
fldt
or
addb
jbe
ljmp
cmp
cmp
mov
cltd
lods
dec
sbb
jecxz
cmp
pop
rcrb
into
flds
iret
mov
sub
gs
loop
imul
pop
sbb
cld
dec
sub
cmp
lea
insb
mov
mov
xchg
push
push
test
sub
mov
imul
xor
mov
jns
enter
inc
fcomi
jae
test
lea
inc
cld
push
jbe
int3
xchg
add
std
ret
and
pop
fwait
push
imull
mov
pop
arpl
subl
imul
adc
sbb
jp
xchg
andb
ret
lea
in
in
xor
cmpsl
movsl
cmpsb
cltd
pop
fcoms
lock
sub
pop
dec
outsl
jo
lock
mov
dec
inc
xchg
inc
fldl
jp
and
adc
cwtl
imul
sbb
sbb
les
js
daa
ret
mov
xlat
cld
and
repz
test
test
mov
scas
or
arpl
push
clc
in
mov
addb
adc
jne
fcoml
cwtl
loop
rcrb
xchg
or
lcall
or
je
inc
dec
scas
dec
insb
lret
xor
xor
cld
data16
add
sbb
inc
add
stos
mov
adc
sbb
sarb
hlt
or
int
mov
loop
jnp
push
aaa
scas
pop
pop
pop
adc
lcall
dec
dec
mov
mov
jnp
sbb
push
mov
and
mov
cmp
cld
mov
xchg
add
hlt
lds
jle
sbb
mov
data16
xlat
xchg
int
loopne
pop
scas
lret
or
test
pop
ljmp
movsb
sbb
testl
test
dec
or
stc
in
in
push
xchg
mov
xchg
sub
movsb
fs
and
fwait
dec
in
ja
roll
cmp
mov
mov
mov
int
outsb
xor
cs
cmp
call
jp
jle
push
sbb
xorb
aad
push
ljmp
mov
mov
cmp
les
jecxz
mov
inc
xchg
scas
clc
negb
add
jecxz
sub
sub
dec
add
lcall
jmp
push
inc
fs
push
and
pop
shlb
out
sahf
ret
mov
dec
sub
stos
rcr
xor
bound
ljmp
xchg
ss
inc
aaa
cmpsl
pop
ljmp
jne
mov
mov
call
lods
mov
fildll
aas
pop
scas
jmp
outsb
xchg
insl
ds
add
in
out
mov
sbb
xlat
sarl
inc
arpl
sub
xchg
mov
out
cltd
out
or
daa
sub
pop
scas
sbb
mov
dec
and
aaa
je
jno
scas
mov
cmpsb
adc
jle
xchg
movups
lock
xchg
lock
std
dec
mov
mov
push
enter
push
xor
out
dec
int
addr16
daa
or
repnz
ds
sbb
arpl
clc
std
xlat
pop
fs
cmc
or
push
push
xchg
fucomi
xchg
sub
aaa
repz
push
loop
adc
push
lahf
inc
mov
sub
push
or
pusha
lret
aam
ss
xchg
lods
ret
adcb
cmp
mov
cmp
aaa
cld
cli
fldcw
fwait
out
add
ds
and
insl
fcmovnb
xchg
sbb
mov
cmp
loop
cltd
leave
jo
insb
push
xchg
sub
sub
in
aad
out
ljmp
adc
jge
fstpt
inc
fstl
xor
xchg
lret
test
fwait
int
aaa
out
notb
cs
cmp
inc
arpl
inc
addr16
or
nop
adc
ds
adc
cmp
xlat
jecxz
push
loop
and
popf
jl
jno
jbe
test
addr16
push
add
xchg
dec
lret
mov
repz
sbb
movsb
pushf
shll
insl
push
add
adc
cmp
mov
cli
repnz
xchg
hlt
fsubl
sbb
ret
mov
or
mov
xchg
fwait
mov
xchg
mov
loopne
cmp
scas
fisttpll
mov
lods
and
or
and
push
or
ficompl
in
cmp
imul
mov
xor
sbb
jmp
push
iret
add
push
xchg
cmp
pushf
gs
test
int3
sbb
scas
add
mov
pop
sbb
pop
push
xchg
sbb
or
xor
and
sarb
mov
je
cmc
push
jo
add
and
pop
test
jae
xor
pop
cmp
xor
lods
push
mov
hlt
sub
sbb
xor
cltd
lea
mov
pop
idivl
insl
cmpsl
sahf
dec
dec
out
lds
inc
dec
mov
lret
add
jge
cs
mov
jp
adc
xchg
push
dec
cmpsl
push
fnsave
imul
lahf
mov
aaa
repz
add
lea
xchg
sub
loopne
adc
fdivs
cmc
inc
fwait
arpl
sbb
rolb
or
jle
jnp
out
adc
cld
test
xlat
loope
mov
outsb
outsl
push
jle
aas
sti
movsl
repnz
cmp
xor
cltd
add
sub
xor
pusha
xchg
popl
das
stc
mov
test
inc
test
jl
lret
adc
sti
dec
jl
and
rcrl
lods
push
xchg
imul
je
subb
popl
adcb
sbb
and
xchg
jno
xchg
mov
inc
rcrl
push
filds
mov
mov
add
xchg
pop
mov
push
idivb
cmp
outsb
jbe
jecxz
xor
mov
cmp
loope
mov
add
pop
aaa
leave
loopne
push
andb
jle
mov
jne
in
outsl
sarb
lcall
mov
orb
divb
sub
pusha
movsl
mov
arpl
xlat
mov
cmp
xchg
in
add
ud2
stc
add
neg
les
lahf
js
outsl
cmp
pop
pop
stos
stc
jecxz
jmp
imul
dec
add
pusha
xchg
dec
je
shl
pop
fildll
popf
and
dec
or
lock
inc
ds
movsb
dec
cmp
inc
adc
repnz
fwait
or
into
loopne
pop
xor
adc
dec
sub
vcvttss2si
movsb
icebp
cmpl
dec
subb
xchg
sti
jnp
xchg
ret
test
mov
loopne
mov
pusha
adc
ss
mov
sub
jp
movsb
push
loopne
in
mov
mov
mov
in
push
cmpsb
rclb
lods
lods
int
mov
cmp
cmp
jns
push
add
mov
inc
mov
hlt
inc
push
pop
icebp
jae
outsb
pop
out
stc
negb
xchg
cli
jb
or
mov
fnstenv
loop
mov
clc
inc
int3
mov
jo
mov
fbstp
pop
aas
fwait
mov
data16
rcl
dec
mov
mov
leave
stos
pop
jno
dec
imul
loop
mov
jle
and
xchg
xor
mov
mov
test
pusha
in
inc
pop
int
in
dec
leave
push
repz
stos
xor
mov
and
lret
ret
cmpsl
iret
pop
xor
fnstcw
sub
push
add
xor
in
scas
xlat
pop
inc
cmp
add
mov
xchg
loope
mov
lret
in
jecxz
mov
sub
clc
inc
leave
mov
cmpl
cmp
cli
movsl
cwtl
jecxz
sub
out
mov
fadds
fwait
adc
hlt
adc
inc
jb
jl
mov
mov
test
dec
mov
std
into
movsb
mov
pop
lret
sub
leave
repnz
fistpll
outsl
cmp
loope
xor
fsubl
test
mov
mov
ss
je
xchg
aas
pop
in
push
in
mov
jmp
and
in
mov
mov
test
jg
xchg
add
sti
movsl
push
icebp
dec
mov
dec
mov
dec
insl
daa
jae
and
pop
rorl
iret
test
xor
jb
mov
roll
daa
nop
mov
sbb
push
les
xchg
mov
lods
mov
jns
dec
and
lods
xor
push
fstpt
xchg
shrl
lds
push
dec
lcall
and
int
pop
push
dec
adc
xchg
shrl
outsl
js
mov
sbb
xor
pop
mov
loop
outsl
fdivl
iret
subl
inc
test
movsb
pop
aaa
jmp
es
imul
push
mov
cmp
adc
jae
ljmp
mov
add
xlat
or
imul
in
ja
mov
stc
mov
or
mov
jl
push
add
sub
xchg
iret
in
cmp
xor
mov
cld
das
jb
aad
out
into
or
jno
jbe
lcall
mov
inc
or
mov
sbb
gs
jae
filds
test
loop
mov
mov
jae
jmp
sub
push
sbb
push
rcr
hlt
scas
xchg
pop
rcrl
and
stos
dec
jae
call
inc
sbbl
negl
push
shll
mov
pusha
into
lods
sbb
lods
adc
les
data16
add
sbb
jb
jl
push
jo
xchg
cs
adc
mov
cmpl
dec
lods
xchg
ja
mov
lret
fxch
sub
fsubs
sbb
stos
out
mov
lods
cmc
pause
mov
insb
lods
and
scas
mov
cmp
cs
cltd
mov
hlt
lods
das
test
mov
aad
gs
sahf
inc
or
jo
pop
dec
add
dec
popl
or
in
cmp
or
addr16
psllw
mov
jno
aam
add
fcoml
xlat
mov
sbb
dec
push
push
adc
mov
pop
dec
iret
inc
aaa
dec
xchg
inc
sti
mov
xchg
mov
jge
adc
aaa
aaa
dec
adc
sbb
xchg
mov
out
pop
loop
fbld
dec
daa
out
push
insb
fldenv
cltd
pop
cmp
aad
fdivrl
push
andl
mov
sub
inc
sub
jno
loop
adc
outsl
movsl
lds
pop
sbb
ret
movsl
lea
jp
sbbb
jo
push
jnp
and
fisubrl
mov
in
inc
jne
mov
pop
nop
pushf
cmpsb
ss
scas
int3
scas
and
push
pop
inc
or
ret
jge
xor
xor
push
shll
adc
das
les
rorb
xor
aam
int
gs
iret
pop
push
push
repnz
add
push
sub
mov
in
mov
rcll
repnz
sbb
loopne
xchg
adc
mov
pusha
aas
adc
loope
sub
lds
sub
lea
out
mov
mov
inc
lahf
push
repz
testl
add
std
inc
xor
cld
fists
shlb
push
pop
mov
jp
cmpsl
push
and
and
lret
ds
shl
data16
and
iret
pop
mov
xor
loope
ljmp
cmp
add
sub
cltd
mov
adc
mov
push
jae
es
int3
pop
mov
push
scas
ret
add
mov
jecxz
inc
fisubrs
mov
loopne
fldcw
nop
movlps
fistpll
in
daa
xchg
aam
sub
jl
mov
or
loope
and
sub
mov
or
xor
repnz
xchg
addl
in
imul
mov
dec
and
popa
inc
sahf
or
inc
sub
dec
daa
filds
xor
push
or
negl
and
dec
mov
sub
shlb
mov
mov
lea
outsb
ret
dec
and
pushf
pop
data16
sarl
mov
xchg
push
lret
mov
popf
or
push
addr16
inc
lea
dec
fbld
imull
test
test
adc
repnz
xchg
jne
xor
iret
shr
dec
loope
fnstsw
movsl
dec
mov
sub
imul
push
cmc
xchg
xor
xchg
jae
jge
or
lods
out
push
mov
scas
jns
jmp
mov
cmp
or
pop
xlat
xchg
add
scas
sub
inc
lcall
daa
sbb
jecxz
cli
shll
mov
test
pop
dec
mov
test
adc
das
insb
loopne
daa
jb
pop
mov
xchg
xchg
js
mov
and
insl
jnp
lea
adc
or
stos
mov
sub
mov
mov
lahf
sbb
rcrb
adc
and
fnstcw
mov
jne
rcll
mov
jle
iret
imul
push
es
mov
sbb
mov
aad
sbb
popf
jne
frstor
sbb
add
addr16
push
or
gs
inc
add
cli
mov
das
stos
test
test
and
mov
gs
sahf
xor
pop
adc
inc
push
push
inc
dec
dec
xor
dec
rcll
cmp
test
fwait
jne
mov
aas
xchg
dec
lahf
inc
xchg
lds
sbb
test
pop
mov
aam
fimull
inc
xchg
dec
js
push
pop
xchg
out
cwtl
enter
sti
ffreep
gs
cmc
cltd
push
ret
enter
jae
xor
xchg
push
add
push
adc
aam
js
add
frstor
xchg
aad
xor
icebp
mov
nop
call
mov
rcll
adc
cs
cmp
mov
xchg
rcl
scas
xor
dec
inc
mov
insl
daa
iret
sti
pop
sbb
lds
add
pop
andl
ljmp
in
sub
in
sbb
repnz
inc
ss
adc
xor
out
pop
out
jae
insb
ret
wbinvd
jmp
stos
dec
push
add
iret
cmp
mov
stc
push
cmpl
dec
sbb
aaa
arpl
rcll
inc
push
pop
in
and
daa
cwtl
push
pushf
dec
orb
outsb
sub
pusha
add
pop
out
scas
jecxz
inc
xchg
and
rcrb
popa
daa
xor
mov
and
scas
rorb
fs
mov
cmp
push
cltd
pushf
inc
fdivl
cli
rcl
push
xchg
ret
xchg
push
mov
loop
xchg
add
mov
lods
and
pop
xchg
mov
ret
sub
xchg
pop
popl
pushf
cltd
add
and
ljmp
push
mov
data16
jo
xor
sub
mov
cmp
outsl
mov
push
cmpl
rolb
mov
cmpsb
sbb
add
adc
sbb
and
sarb
cmpsl
das
jbe
jo
loop
jno
popa
dec
sti
mov
adc
arpl
xchg
data16
dec
jbe
xor
push
cmp
sub
jge
cmp
mov
xlat
mov
xor
arpl
std
insl
pop
fdivrs
jmp
pushf
and
icebp
jp
jl
dec
xchg
adc
insb
in
int
mov
aam
es
loop
aam
sub
lahf
mov
adc
mov
cltd
cmp
dec
xchg
outsb
popf
arpl
push
cmp
jne
stos
call
adc
add
nop
icebp
cmp
mov
push
out
pusha
fidivrl
xor
aas
lods
sbb
mov
mov
xchg
fistpl
mov
mov
nop
insl
leave
mov
cs
push
cmp
jmp
rclb
gs
jae
push
pop
push
push
les
mov
jg
mov
imul
shufps
xor
sub
xor
shl
testl
push
fstl
sub
xchg
out
push
jmp
mov
jmp
mov
inc
mov
dec
daa
inc
xlat
rcl
aas
in
mov
hlt
mov
fs
data16
fidivs
lret
mov
jno
sub
sbb
jl
inc
dec
xlat
jmp
push
push
mov
add
cwtl
mov
andl
fs
pusha
sti
ljmp
dec
test
inc
leave
aam
mov
insb
in
iret
push
addb
adc
xlat
idiv
setl
repz
xor
stc
push
sub
mov
fdivp
adcl
nop
xor
or
daa
mov
divb
add
sub
sbb
dec
pop
sub
or
add
pop
pop
cmp
mov
orl
push
sub
pop
jle
mov
ss
sbb
dec
sub
jbe
es
ja
mov
loop
cmpb
jmp
fistps
int3
push
mov
stos
cmp
add
aas
pop
inc
insb
cmp
sub
sub
lcall
push
lret
dec
stos
push
jle
fs
adc
mov
xchg
ficomps
jns
loop
inc
aam
rorl
add
add
lret
or
mov
xchg
lcall
les
out
andb
hlt
xchg
add
push
jns
push
orb
test
in
mov
dec
dec
push
xchg
dec
or
push
daa
adc
cmpsb
rol
pop
and
xchg
add
loope
test
lock
add
in
fs
cmp
das
lods
jmp
mov
xchg
mov
dec
jge
in
inc
jmp
jl
inc
xor
xor
cmp
push
icebp
or
sarb
push
or
movsb
je
mov
popf
cmp
ljmp
into
loop
lods
cmp
mov
add
dec
xorb
pop
shlb
popf
scas
mov
in
xchg
inc
or
mov
mov
dec
and
inc
xchg
repnz
cmp
mov
mov
sbb
xchg
push
ret
into
ret
jmp
adc
adc
add
inc
add
outsl
dec
dec
pushf
repz
adc
shl
sub
andb
dec
pop
inc
cs
jo
fcmovu
pop
das
dec
jl
jno
pop
sub
sub
and
push
loop
ss
es
jp
mov
aad
cmc
add
cmp
jne
add
imull
jmp
lahf
repnz
nop
test
push
rclb
push
adc
inc
sbb
or
fadd
lods
notl
jns
cld
adc
adc
lret
ds
push
pop
jmp
adc
addl
cmpsb
call
cld
sbb
test
inc
js
push
pop
inc
mulb
lea
pop
cmpsl
sub
out
cmp
sti
arpl
movsl
jns
adc
outsl
push
jp
jmp
leave
inc
sbb
pop
mov
bound
fxch
jno
in
mov
fcomps
push
out
and
addb
jns
inc
sahf
lahf
jp
add
rcll
adcl
jne
pop
sbb
lock
insl
cmovae
sarl
and
mov
pop
lods
icebp
addb
dec
jmp
ljmp
pop
or
jbe
push
aad
jne
pop
xor
jmp
aam
push
push
int
les
dec
adc
cmp
jae
jbe
fcompl
push
loop
xchg
loopne
fidivs
pop
pop
fwait
ret
hlt
xchg
cmpsl
aaa
cmp
cmp
cmpsl
cs
adc
jp
lret
sub
xor
cmpsb
mov
push
stos
add
sti
xchg
loope
mov
pop
xchg
cs
jne
stos
adc
std
jle
fs
int
lods
cli
mov
push
sub
and
pushf
sbb
pop
imul
bound
pop
mov
loop
jae
mov
dec
mov
aad
pop
popa
inc
incl
sub
pop
or
push
movsl
cmc
cmp
push
jnp
cwtl
pop
test
cmp
pop
enter
mov
das
mov
sbb
in
xchg
mov
aaa
and
lea
cmp
insb
mov
add
lds
adc
dec
popa
mov
inc
push
aad
add
lret
sub
insb
mov
popf
add
pop
add
cmp
jl
inc
xchg
fmuls
jb
popf
sbb
sbb
adc
mov
inc
push
xor
loope
or
dec
mov
pushf
iret
scas
jecxz
iret
mov
cmp
out
cmpsl
or
dec
add
push
repz
hlt
mov
xor
cwtl
fwait
loop
or
mov
gs
add
sbb
dec
scas
insl
xor
jnp
mov
stc
lds
pop
xor
push
ja
xchg
cmp
pop
mov
lods
xchg
dec
cltd
rcl
cltd
sbb
addb
and
hlt
jne
int
aam
mov
pop
cmpsl
jns,pn
cld
je
pop
and
testl
test
sub
dec
movzbl
mov
cli
fwait
add
or
mov
sbb
mov
mov
jne
cs
cltd
adc
scas
and
xor
and
div
xchg
and
pop
sub
xchg
mov
cmp
mov
out
pop
mov
and
xchg
push
loop
cmp
inc
dec
fsubs
push
adc
mov
and
jne
testl
scas
shlb
cli
pushf
out
popa
out
sti
xor
stc
rcl
mov
pop
loope
adc
lret
xor
ds
xor
fldl
filds
std
push
xor
rolb
into
sub
dec
mov
into
jp
push
sub
cltd
push
mov
fcoml
leave
cmpsb
cltd
fcoms
insl
ds
out
or
dec
rorl
scas
ss
mov
jbe
cmpsl
les
cli
or
leave
sbb
pop
das
loope
call
or
or
or
jno
add
xor
scas
push
dec
xor
inc
loop
xlat
push
inc
and
jno
sub
test
pop
roll
adc
cltd
mov
xchg
jmp
sahf
xchg
push
add
pop
ja
in
add
dec
cld
jmp
mov
in
lcall
adc
popa
push
and
leave
inc
call
pop
fbstp
dec
lea
adc
mov
inc
out
adc
jo
jns
pushw
into
mov
lods
inc
cli
ss
int
add
or
cmp
push
hlt
pop
push
out
stos
sub
ret
imul
xor
mov
jnp
xchg
in
jmp
daa
aaa
data16
inc
js
inc
cmp
out
bound
mov
bound
cmp
dec
movsb
pusha
mov
mov
jnp
dec
inc
pushf
data16
dec
inc
popa
ret
push
clc
das
jo
sahf
leave
insl
cmp
push
or
or
push
lock
lret
pushf
cmp
cmc
xor
js
into
lret
sub
std
mov
sub
fs
jb
rcl
jnp
push
mov
jo
inc
jecxz
aaa
dec
stos
es
push
fbstp
cltd
jb
pop
lock
jecxz
fisubrl
movb
outsl
mov
adc
sbb
add
xchg
ror
ret
rcr
xchg
ret
clc
or
aaa
adc
rcll
stos
addl
jle
in
enter
rcrl
push
mov
shrl
and
js
and
xchg
push
pop
or
add
pop
push
dec
mov
dec
dec
xchg
cmp
or
jg
in
mov
fidivl
in
jnp
jnp
cmpsb
mov
cmp
pop
inc
pop
inc
jne
pop
sub
stos
test
push
pop
loop
adc
iret
movsb
mov
xcrypt-ecb
cmpsl
out
loopne
std
insb
fimull
in
dec
mov
negl
and
cmp
dec
das
jecxz
inc
mov
mov
jbe
scas
out
ret
and
pushf
inc
mov
jnp
es
jge
mov
sbb
or
adc
test
cltd
xchg
sbb
loop
mov
movsl
and
push
movsl
sub
js
mov
jae
ficoml
aaa
mov
hlt
loopne
stos
pop
cmp
cmpb
aad
ljmp
ds
jo
add
scas
je
std
test
ret
push
in
in
inc
sbb
imul
sbb
add
cli
movsb
mov
js
mov
cmp
mov
ds
sub
roll
out
hlt
in
mov
dec
jg
xor
mov
rorb
add
mov
leave
fsubr
out
fisttpl
jne
xchg
add
mov
lret
xor
daa
or
sub
pusha
or
xor
mov
cmpsb
pop
pop
fwait
in
mov
adc
testb
mov
ljmp
and
jo
in
stos
addl
out
add
xchg
xlat
mov
push
test
inc
sub
xchg
dec
push
or
mov
dec
cli
ds
pop
xchg
xchg
dec
or
arpl
or
pop
in
insl
test
pop
and
call
mov
or
cltd
test
mov
gs
mov
inc
jmp
xor
fmul
ds
sar
mov
add
and
push
lods
cltd
call
add
dec
dec
es
shrl
sarb
sub
jge
and
loopne
fstpt
int3
xchg
inc
xchg
imulb
cmpsb
xor
addl
pop
lret
insb
cli
out
in
daa
cmc
sbb
fstpl
lcall
jae
mov
dec
mov
stos
push
pop
std
inc
inc
lock
out
pop
movsl
not
inc
hlt
inc
xor
ret
gs
and
adc
xchg
push
test
inc
inc
clc
into
je
jae
jecxz
int3
push
out
into
and
sbb
loopne
xchg
faddl
xor
pop
sbb
add
ja
xchg
fcmovb
add
std
fisttpl
push
std
mov
imul
lret
add
das
mov
scas
adc
lods
sbb
sti
mov
fsubs
rcrl
mov
xchg
xor
in
shlb
int3
bound
push
jne
fs
push
or
dec
fadds
and
lock
dec
xor
aam
test
mov
jmp
push
ss
out
push
xor
mov
in
sarl
stc
jae
or
push
std
cmp
sbb
jb
sub
mov
mov
mov
mov
and
or
pop
jmp
jb
shll
or
and
cmp
and
push
and
nop
and
lret
pop
mov
icebp
dec
call
mov
pop
xor
adc
pop
adc
or
jb
or
push
pop
push
xlat
push
inc
rcl
and
lcall
jns
mov
ret
enter
xor
aaa
xchg
int
mov
jp
cmpsl
mov
cmpsl
dec
pop
adc
sub
bound
sahf
adc
pop
outsb
and
sub
cltd
iret
popf
in
in
scas
pusha
jle
adc
add
leave
cli
std
sub
in
fdivl
cmp
mov
icebp
lods
jns
sbbl
xchg
jbe
jg
push
adc
mov
andl
test
jno
sbb
xor
in
inc
jnp,pn
lds
test
lcall
iret
mov
popa
into
cmp
mov
mov
dec
cwtl
push
push
xor
ret
inc
and
fsts
or
jbe
lds
cmp
inc
inc
cmp
scas
sti
push
xchg
mov
popa
xlat
and
cmp
cmp
mov
jmp
mov
insb
inc
lods
faddl
clc
sti
lock
xchg
sarl
mov
add
daa
jne
sub
call
add
mov
cmpsl
cmc
mov
mov
xor
jno
xorb
add
push
mov
inc
pop
xor
test
fsubl
int3
cmp
iret
cmp
and
aam
test
jle
mov
movsl
cmc
xor
sbb
stc
xor
jp
in
dec
and
pusha
out
mov
add
es
jb
cwtl
sbbl
fcmovne
jbe
pop
mov
sbb
test
rolb
cli
insb
stc
mov
mov
mov
xchg
cmpsb
push
fucomp
dec
inc
daa
inc
jae
leave
cmp
lret
jle
sub
jmp
mov
fldenv
jo
inc
mov
stc
jno
mov
mov
sahf
push
fsubr
pop
xchg
sti
sub
pop
test
popa
add
mov
fisttpll
and
out
jge
popa
in
stos
fldcw
cs
sub
or
fimull
lahf
loopne
lahf
bound
jae
adc
out
leave
sbb
testb
xchg
jl
fwait
sub
or
dec
xchg
movsb
mov
mov
pop
jle
cwtl
lcall
imull
enter
jmp
cwtl
mov
sbb
sub
xor
insl
pop
jp
jnp
orl
into
ds
mov
lret
lcall
cmp
cmp
mov
hlt
and
jne
mov
fsub
inc
xchg
subb
sbb
outsb
xchg
outsb
jbe
push
daa
aam
shlb
insl
in
rorb
test
dec
sub
lds
and
enter
fwait
je
mov
aas
lcall
mov
icebp
sub
xchg
xor
mov
in
pusha
lcall
aad
add
insb
adc
js
pop
iret
cltd
jle
jp
xlat
scas
dec
ss
pusha
push
and
in
repnz
add
jno
cld
pop
andl
cwtl
or
int3
imul
loopne
mov
mov
inc
hlt
xor
mov
xchg
push
rcrb
adcb
cmc
cmp
jb
orl
ficoms
roll
mov
jb
cwtl
push
ds
fcoms
push
fisubrl
jl
std
or
add
pop
test
jb
shll
adc
aad
sbb
jb
fidivs
pop
mov
mov
add
cmc
xchg
out
repnz
fsts
and
orl
add
pop
test
and
xchg
fsts
mov
rcr
add
nop
outsl
ljmp
int
data16
inc
jg
sar
ljmp
add
sbb
cltd
adc
add
sbb
xchg
js
push
mov
aam
or
xchg
icebp
ss
lcall
mov
inc
sbb
addl
ljmp
insb
in
push
out
push
cli
popa
dec
std
lods
shrb
sbb
lcall
les
adc
xchg
lds
adc
jg
fldenv
jmp
in
das
add
mov
push
pushf
xchg
negl
xchg
or
cld
lods
mov
sub
mov
jo
adc
cmp
xchg
fmul
jl
xor
stc
ficompl
fists
loop
popf
leave
sub
pusha
adc
js
outsl
push
dec
sub
cltd
or
and
dec
dec
dec
inc
xor
pop
enter
pushf
pusha
out
scas
insl
lock
pop
cltd
popa
out
imul
jle
icebp
lret
out
pop
xor
jp
loopne
xor
jp,pn
mov
lahf
push
pop
fcompl
xor
sahf
xchg
mov
or
stos
jns
add
lods
or
jp
dec
gs
push
lea
pop
xor
shll
sahf
push
aam
and
fimull
xchg
mov
fld
pop
and
add
adc
aas
popf
or
lret
mov
push
popa
divl
daa
shll
movsl
adc
sub
xchg
das
add
sbb
outsl
les
xchg
nop
adc
pop
pop
and
mov
inc
std
adc
ss
mov
stos
outsb
mov
add
add
xor
jo
xor
sti
lds
fdivrs
xchg
inc
cmpsb
fildll
mov
and
dec
xchg
ret
xchg
sub
inc
sub
popa
cltd
add
or
out
pop
test
test
or
iret
ret
inc
jp
xlat
mov
loopne
mov
mov
out
dec
push
mov
call
xchg
mov
imul
and
inc
xchg
gs
divl
pop
mov
mov
enter
icebp
shlb
mov
and
lret
jmp
xor
aaa
out
or
sbb
fldz
in
aad
mov
inc
jbe
mov
imul
adc
je
insb
xchg
sub
push
lahf
mov
push
dec
call
addl
out
or
sahf
ds
jno
xchg
ja
push
add
lret
lods
shlb
addb
stos
sbbb
addr16
push
fsubr
movsb
adc
scas
clc
pop
scas
sbb
stos
inc
fbld
jns
and
mov
xchg
lret
repz
clc
and
and
daa
scas
cwtl
pushl
sbb
push
and
or
test
fmulp
insl
xor
mov
pop
ficompl
lds
cltd
xchg
enter
xchg
mov
adc
cmc
mov
insl
mov
mov
leave
pop
sub
dec
cli
mov
jne
cmp
cmp
inc
mov
dec
dec
pop
lock
enter
in
xchg
cmp
out
in
xchg
adc
test
xchg
lea
hlt
mov
outsl
jl
cmc
dec
mov
add
out
cli
push
dec
loope
ret
stos
cmc
scas
xchg
test
sub
mov
adc
popa
aad
lock
dec
adc
arpl
xchg
add
out
aaa
mov
je
scas
sub
and
test
and
pop
js
push
hlt
test
mov
sub
mov
sahf
add
test
xchg
xor
mov
sbb
and
dec
test
inc
sub
jmp
iret
jno
fldcw
push
pop
daa
loope
repz
test
and
sbb
jl
and
push
hlt
mov
test
int3
repnz
jg
sbb
insl
jmp
inc
les
incl
insl
sub
daa
sub
sbb
dec
sub
sub
int3
cmp
mov
or
mov
or
and
cltd
pop
lock
cmp
adc
pusha
jl
rcrl
lods
test
sbb
mov
in
push
adc
fldl
mov
xchg
dec
lods
scas
jbe
push
movsl
stc
xor
popf
adc
leave
imul
iret
and
sbb
xchg
inc
lds
leave
jl
lcall
js
cmc
hlt
inc
daa
movsb
and
adc
inc
adc
mov
jl
bound
pop
subl
and
test
loopne
outsb
lea
dec
and
cli
adc
pop
fcomip
nop
popf
cs
push
inc
shrl
and
cmp
popf
dec
shr
aad
inc
cwtl
pop
jbe
sbbl
adc
in
pop
mov
lret
inc
fadd
and
iret
push
jo
or
inc
fistl
fisubrs
jge
and
mov
in
pop
jnp
add
mov
pop
push
or
aad
ret
push
xor
incl
enter
fdivrp
in
ds
sahf
push
sub
mov
pop
out
inc
je
xchg
mov
jecxz
add
mov
aam
repnz
sahf
adc
push
add
pop
inc
scas
insb
std
sbb
aas
add
mov
test
push
push
cmp
jae
cmc
movsl
add
sub
gs
or
insl
mov
aam
pop
and
imull
sbbl
testl
xchg
inc
mov
imul
cwtl
aad
fldenv
push
into
jb
std
lcall
mov
les
add
inc
ds
sti
call
jo
adc
and
jl
lea
inc
mov
adc
or
in
rcll
sbb
jl
mov
sub
adcl
fs
inc
mov
lds
mov
sbb
push
in
les
sbb
cmp
push
mov
fdiv
fisttpll
std
test
sub
ljmp
js
jne
rclb
test
inc
imul
jg
xchg
inc
fidivl
or
out
inc
or
sub
xchg
clc
sub
fidivrl
dec
int3
popa
mov
negl
sbb
mov
pop
xchg
add
mov
mov
lret
sbb
push
mov
jno
int3
xchg
dec
jmp
cs
dec
test
in
pop
pop
movsb
jno
rcrl
sub
jnp
mov
shll
insb
mov
addb
mov
sub
mov
sbb
adc
cli
add
cmp
inc
sub
cwtl
inc
jne
adc
inc
dec
dec
pop
and
mov
ss
in
lret
fidivl
cmp
lret
push
mov
xchg
adc
inc
mov
inc
mov
xchg
sbb
ds
scas
out
mov
pop
aam
das
add
mov
scas
das
pop
es
and
divb
adc
fimuls
push
or
push
and
mov
push
mov
cmp
jb
inc
xchg
mov
jmp
mov
jg
in
and
add
mov
movsb
mov
les
fnstsw
cmpsl
in
lcall
imul
cvtps2pi
jne
sbbl
sbb
negb
in
cs
pop
popa
gs
mov
ljmp
cs
sbb
daa
jg
lahf
je
mov
aad
xor
add
mov
inc
add
mov
insb
xchg
push
xchg
mov
test
rclb
xchg
push
sbb
add
adc
movsb
sub
or
mov
test
adc
xchg
dec
mov
pop
cmp
xchg
mov
push
xchg
add
add
inc
mov
fcmovne
cwtl
inc
in
jecxz
pop
cmpsl
or
dec
sbb
shrb
je
sbb
fsubr
or
movsb
mov
and
mov
jl
xchg
or
pop
dec
xor
das
jle
les
jo
shrl
add
fdivrl
push
sbb
mov
incb
adc
insl
push
mov
mov
jae
dec
mov
mov
icebp
out
jno
sti
xchg
mov
shll
out
cmp
in
lahf
xchg
je
mov
mov
in
mov
sbb
mov
aaa
fistps
add
idivb
fistl
loope
pusha
jge
ds
lods
aam
psubusb
loop
jecxz
sub
movsb
dec
add
addr16
push
and
adc
cwtl
in
fwait
mov
lock
sbb
scas
add
xchg
push
dec
cmp
pop
fistpll
lahf
in
pop
jl
das
push
mov
add
cmp
sbb
mov
pop
xor
mov
jl
outsl
xchg
sbb
es
data16
jno
imul
adc
scas
adc
mov
jno
mov
push
push
out
mov
mov
cwtl
adc
aam
push
fdivr
fdivrl
dec
nop
cmp
inc
push
mov
jp
stos
mov
rol
sbb
push
jno
call
js
fs
dec
dec
mov
out
mov
jle
pushl
dec
sub
addr16
adc
push
and
mov
rclb
adc
jg
and
ljmp
les
dec
pop
fs
mov
cltd
ficoml
leave
cmp
dec
cmp
dec
cltd
insb
inc
pop
sbb
cmpsb
pop
out
daa
test
sbb
idiv
jne
das
pusha
rorl
xor
fxch
cld
in
test
cmp
mov
cs
add
jns
sub
in
cmpsl
shrb
jg
out
jbe
stos
imul
test
xchg
jl
aaa
jecxz
repz
lods
cmp
fcompl
fildll
repnz
lods
adc
inc
insb
stos
je
mov
ds
or
imul
sarb
repnz
push
mov
stc
iret
in
mov
xchg
mulb
fnsave
adc
int
push
sarl
popf
out
inc
notb
mov
add
jo
mov
inc
and
mov
or
dec
xor
xor
scas
push
inc
jl
push
pop
cli
subl
inc
sbb
add
xchg
jbe
mov
into
loope
stos
xor
push
fidivrs
mov
cld
aaa
test
xchg
test
ficoml
mov
or
xor
out
mov
or
mov
mov
cltd
fsubrl
mov
push
mov
test
xor
xlat
sti
hlt
push
out
cmp
out
pop
xor
fstpl
frstor
sub
jle
cli
push
scas
push
in
out
sti
mov
dec
push
js
jg
xor
imul
cmp
scas
push
lods
popf
aam
scas
rorb
testb
insl
fnstsw
jl
xchg
sub
push
sub
pop
sbb
and
mov
adc
scas
xlat
cmp
imul
mov
dec
in
divl
int
pop
sbb
dec
repz
aas
popa
imul
in
sahf
and
test
mov
cli
fmull
mov
adc
sub
mov
sahf
in
mov
iret
cltd
enter
xor
std
jmp
cmp
es
push
cmp
int3
mov
jp
jbe
jne
add
push
fists
popf
orb
arpl
xor
jg
jnp
pop
ds
jb
sub
mov
dec
sbb
mov
imul
repz
ljmp
cwtl
test
xchg
xchg
jp
sti
icebp
mov
dec
xchg
jb
js
adc
stos
gs
mov
xchg
mov
or
loope
gs
jl
push
lret
pop
out
lret
popf
jl
sbb
lret
jmp
sbb
inc
cmp
imul
push
enter
nop
and
push
pop
fs
xchg
fs
fwait
mov
stc
pop
jns
jl
insl
sarb
repz
dec
pop
aad
sahf
pop
daa
dec
cltd
cmp
outsb
pop
repnz
add
call
dec
add
test
dec
pop
ds
push
lahf
sbb
shr
xor
and
lcall
aas
adc
not
insb
pushf
and
xchg
xchg
jg
pop
dec
and
sub
mov
pop
jmp
call
hlt
fdivrs
or
testl
cmc
mov
cmpsl
cmp
push
daa
jmp
fistps
mov
test
daa
int3
sarl
stos
repnz
roll
or
add
dec
scas
addr16
std
test
push
dec
inc
push
stos
push
jnp
sbb
lods
lds
nop
dec
pop
xchg
sbb
push
or
mov
adc
mov
mov
fldl
test
fadds
in
fstl
into
sbb
loopne
add
dec
jmp
inc
js
loope
jl
sub
xchg
inc
mov
popa
fwait
cmpb
xlat
mov
and
and
popf
lret
std
movsb
cwtl
xcrypt-cfb
cmpsl
out
cltd
add
divb
push
inc
cmc
mov
dec
insl
xlat
repnz
stc
test
mov
mov
pusha
sbb
xchg
xchg
mov
rcrl
sbb
lret
aaa
mov
lea
add
dec
xor
fisubrs
inc
add
fnstenv
push
mov
cltd
ud0
xor
dec
inc
je
icebp
leave
mov
fisttpl
jg
jnp
fstpt
loop
test
int3
xchg
xchg
dec
jecxz
sbb
test
push
std
jne
icebp
push
push
push
mov
push
inc
aam
mov
sbb
xor
pop
sbb
rcl
fdivrp
mov
pushl
jae
mov
pop
jmp
popf
pop
sbb
pop
fisubrl
dec
lods
rcl
sub
stc
stos
ds
cli
jmp
or
dec
rclb
aad
or
loope
scas
ljmp
xchg
jns
push
mov
sub
xchg
ficompl
xor
iret
mov
out
sub
scas
push
jne
cli
fdivs
mov
aas
adc
adc
outsb
xchg
in
lret
and
fsubr
stc
or
and
enter
pop
fldenv
sbb
sbb
mov
xchg
stos
jb
adc
mov
and
mov
and
mov
stos
lods
sbb
inc
pusha
call
aas
out
or
fcoms
lods
xor
jecxz
or
ret
mov
mov
or
ret
and
dec
push
push
in
test
ret
icebp
sub
addb
or
dec
cmp
sbb
cmpsl
ljmp
add
jmp
inc
pusha
xchg
jne
add
dec
mov
nopl
push
sub
mov
xor
pop
dec
nop
loop
adc
cmp
out
scas
insl
imul
roll
sbb
push
lea
mov
fiaddl
sbb
enter
dec
aam
mov
lea
das
sbb
lods
jae
idivb
sarl
sub
pop
sub
fiaddl
repz
lds
daa
js
movsl
xchg
nop
lret
xor
jae
sahf
out
fcoml
push
inc
loop
ds
sub
cmpsb
outsb
mov
adc
stc
cmp
stos
or
mov
push
push
aad
xor
xchg
adc
or
outsl
mov
xchg
pop
or
cmpsl
lds
imul
pop
push
xor
dec
xchg
insl
aad
mov
in
repz
jl
mov
mov
xor
inc
and
mov
jb
jne
int
push
pusha
outsb
push
out
js
pop
sub
notl
jle
fucomi
in
xorl
test
xor
dec
mov
xor
inc
mov
std
mov
xchg
sub
cld
sub
arpl
cmp
arpl
mov
xchg
xchg
cmp
pop
ds
sti
fwait
popa
mov
adc
std
cmpsb
nop
push
fidivrs
mov
mov
in
shrb
jmp
push
scas
fs
xor
xchg
xor
xchg
mov
cmp
adc
and
sarb
cmp
lcall
rcrl
sub
test
and
aam
ret
es
repnz
jno
dec
fcmove
mov
stc
dec
cmp
insb
cli
call
cmp
sub
add
popa
addr16
lahf
jo
repz
and
or
pop
sub
mov
jo
xlat
insl
lret
xchg
ret
mov
push
scas
mov
ds
pop
add
cmp
int3
pop
xchg
mov
roll
fwait
dec
in
in
test
mov
fmul
mov
out
and
mov
andl
cmp
aas
imulb
xor
push
dec
out
dec
jge
pop
cwtl
pop
xor
lret
jae
and
rcll
add
jo
ror
or
sub
leave
mov
and
cmp
aaa
xchg
or
test
leave
mov
pop
int3
sahf
enter
cmp
jnp
xchg
push
sbb
clc
xor
mov
lret
push
dec
jae
loop
sbb
xorl
hlt
or
add
mov
xchg
push
mov
negb
mov
add
pop
mov
loop
test
out
das
nop
mov
loopne
add
in
cs
push
ds
sbb
jl
mov
loope
hlt
js
cmp
xor
ret
sub
movsl
mov
jne
sub
dec
cmp
rcll
adc
pop
sbb
pushf
xchg
or
cmp
or
sbb
iret
pop
out
sub
outsl
mov
push
mov
fs
roll
or
mov
out
inc
int
inc
jge
loope
and
push
inc
and
push
jg
ds
mov
pop
adc
xor
dec
enter
stos
mov
pop
fidivrs
popa
lds
cwtl
fs
xchg
test
jge
int3
ret
add
lods
negb
push
out
rorb
orl
lods
inc
jp
jge
cld
pop
insb
pop
push
scas
lods
movsb
imul
push
sbb
lcall
cld
into
orps
cmp
lret
out
test
outsb
inc
loopne
push
dec
cmpsl
inc
push
aam
movsb
xchg
rclb
jge
cmp
push
dec
xor
outsl
cmp
adc
lea
sub
and
cmp
mov
rcr
int
das
mov
inc
sub
sbb
out
adc
stc
nop
inc
or
mov
xor
popf
adc
daa
popf
js
shl
pop
xlat
cli
xchg
jle
push
cmp
mov
adcb
pusha
es
xor
pop
and
push
add
js
add
jg
pusha
mov
cmp
dec
mov
or
xchg
dec
mov
lds
jle
push
std
mov
and
aas
pop
nop
insl
je
cltd
adcl
in
js
xchg
and
or
data16
cmp
sbb
push
aam
mov
add
push
adc
sti
dec
daa
mov
add
and
aad
mov
test
pushf
mov
sub
add
xchg
out
arpl
inc
dec
fisttps
in
ret
or
ret
dec
pop
mov
negl
lret
aad
adc
adc
pop
jbe
mov
lret
pop
sub
mov
movsl
push
and
jl
pop
shl
fnstenv
jae
xchg
in
movzbl
xor
sbbl
push
mov
lods
inc
dec
inc
mov
sti
out
lcall
aas
mov
adc
jp
insb
cmc
ret
les
pop
popa
cmpsl
cltd
xor
cltd
and
or
and
cmp
mov
xor
xlat
mov
push
ljmp
jle
out
rcrl
popa
xor
lcall
jo
mov
insl
sbb
cmpb
cmpsl
xchg
pop
mov
mov
dec
popa
push
out
pop
inc
cmp
add
testl
and
aad
pop
int
das
push
popf
xor
in
cs
in
jle
ljmp
xchg
pop
mov
fsub
adc
cmc
dec
lcall
push
out
and
cmp
jle
fadds
xlat
xchg
jno
bnd
jmpw
das
inc
sub
js
cmpsb
dec
adc
pop
lock
std
cli
bound
mov
pop
nop
pop
adcb
inc
out
fiadds
lods
inc
out
sbb
mov
dec
test
cli
sbb
fbld
loop
sbb
sub
bt
repnz
xor
es
jmp
cli
and
or
out
or
stos
xchg
adc
loope
sub
push
push
pop
jg
adc
adc
popaw
pusha
dec
scas
sbb
push
enter
dec
push
aaa
out
cs
mov
xlat
fstl
push
push
insl
stos
mov
imul
mov
add
pusha
mov
aaa
sub
adc
or
xor
dec
cmp
sahf
in
addl
or
std
out
push
dec
cmpb
js
cmp
cmc
sub
pop
les
lcall
add
mov
inc
divb
popa
xor
notb
aad
notb
jl
push
add
pushf
stos
add
pop
jno
pop
jo
shlb
andb
andb
pop
fildll
test
sbb
jb,pt
das
mov
arpl
adcl
mov
pop
testb
addr16
ret
cmp
cmc
inc
mov
int
push
fnstenv
or
sbb
lret
imul
ss
shlb
pop
inc
pop
jl
scas
push
out
inc
mov
ss
jne
lds
push
inc
addb
clc
or
adc
mov
push
mov
call
in
test
scas
pop
push
sub
int3
add
lods
movsl
cmp
adc
dec
mov
test
test
jno
mov
mov
sarb
push
xor
das
je
sub
andl
or
int
enter
stc
jo
or
push
fwait
mov
mov
nop
or
sar
push
negb
stos
ret
cmove
lcall
sub
in
push
imul
xchg
andb
jnp
out
stos
xor
or
call
push
test
into
iret
cmp
lret
jg
pop
outsl
shl
std
mov
xor
jae
sahf
repz
dec
pushf
jp
cs
insl
mov
fnsave
pop
jmp
loopne
dec
dec
pop
stos
mov
mov
pop
in
cmpsb
sti
and
roll
and
sub
mov
shl
lcall
pop
sbb
or
cmp
jp
fcomps
sbb
sbb
int
jecxz
std
jmp
or
cmpsb
pop
and
jge
jns
test
sub
icebp
scas
jle
jbe
xchg
inc
cwtl
mov
dec
ret
jo
repnz
out
push
sahf
sahf
mov
out
and
pop
scas
inc
in
pop
dec
dec
sub
or
lret
dec
fsts
loope
insl
add
fistpl
in
dec
sbb
dec
push
sbb
out
iret
lods
sbb
leave
fwait
dec
pop
sub
pop
lea
imul
sub
dec
mov
sub
sub
mov
aam
pop
dec
fistl
cmc
repnz
cmp
testb
hlt
pop
daa
dec
pop
insl
dec
or
dec
test
pop
fcoml
and
sub
xchg
inc
stc
das
popa
loopne
xor
inc
xchg
popa
push
xchg
xor
pop
or
rcrb
pop
gs
arpl
push
sti
pop
aam
push
das
sarl
inc
dec
cmp
xchg
xlat
and
loope
mov
ret
dec
push
fs
and
iret
mov
mov
out
jbe
fisttps
cs
loopne
push
sub
out
popa
mov
add
and
lret
outsl
leave
pop
and
xor
cwtl
rcl
cmp
js
jbe
popa
mov
add
push
cmp
imul
ret
sub
xlat
out
cmpl
mov
dec
sbb
scas
cmp
ret
imul
sbb
mov
es
pop
sbb
dec
movsb
jmp
fisubl
repnz
fstpt
lret
push
sbb
lea
rclb
mov
clc
imul
aam
lea
scas
pop
mov
stos
mov
aam
cmc
movsl
repnz
hlt
adc
pop
xorl
jbe
lds
mov
mov
setne
push
das
lods
lahf
das
decl
lock
sti
in
stc
cli
mov
popa
push
in
pop
mov
xchg
bound
dec
das
ret
ficoml
pop
or
mov
ret
cltd
mov
cmp
xchg
or
mov
stc
movsb
adcb
inc
dec
xor
mov
push
push
fnstcw
add
jmp
aas
cmpsl
test
cmp
xchg
push
clc
dec
mov
lahf
xor
aas
dec
mov
and
xchg
jge
xchg
pop
or
xor
push
lods
test
jge
clc
popl
mov
cltd
sar
daa
and
mov
mov
adc
ja
pusha
fildll
mov
lods
xchg
inc
jnp
mov
rolb
dec
daa
xor
mulb
mov
hlt
ret
test
cmc
fildl
jmp
pop
inc
mov
and
jns
adc
test
xchg
push
xor
and
test
in
mov
mov
or
jl
mov
clc
inc
dec
test
movsl
dec
mov
xchg
mov
xor
insl
jbe
push
pop
push
jl
xchg
push
adc
sub
jnp
push
mov
push
push
test
aaa
push
outsb
shll
push
into
scas
dec
movsl
jbe
ss
xor
mov
cld
xchg
inc
and
xchg
mov
cmp
push
int
sti
shrb
and
xchg
nop
mov
jo
loopne
adc
fsubrl
jbe
repz
rcll
sbbb
jb
ret
stos
addl
sub
jnp
xor
jbe
es
sub
sub
push
sbb
xchg
sbb
out
mov
dec
orb
inc
and
mov
in
fldenv
ja
inc
mov
sarl
inc
test
xchg
test
fldcw
inc
js
mov
push
sub
sbb
add
sysret
les
imul
or
sar
mov
loope
pop
aaa
js
cli
pop
scas
cltd
xchg
andl
lret
adc
hlt
jge
pop
add
fs
popf
pop
and
jnp
push
mov
repnz
fldt
pop
mov
xchg
nop
rcr
sbb
pop
jecxz
or
add
xor
stc
negb
jno
dec
mov
xchg
mov
shll
mov
mov
stc
pop
sbb
imul
lea
cld
adc
xchg
fsubrs
mov
sbb
outsb
mov
out
jmp
xchg
mov
mov
sbb
aad
fldenv
iret
test
fucomip
cmc
sahf
test
mov
pop
sub
int
imul
testl
int3
arpl
xor
adc
sub
cmp
lahf
push
repnz
popa
and
jno
mov
sbb
cmpsl
fs
nop
shlb
or
add
xor
push
ret
dec
sub
test
pop
stos
pop
hlt
clc
jl
mov
clc
mov
std
dec
fstp
enter
sub
inc
js
ret
in
xor
std
mov
cmpsl
sub
loope
cmp
incl
insb
sub
inc
pop
and
rolb
push
sub
dec
adc
cmp
inc
dec
pop
mov
jno
das
mov
jg
mov
mov
and
testl
call
loope
dec
jge
mov
jl
jbe
and
pop
cwtl
lret
jp
dec
and
popf
xchg
outsb
ja
out
xlat
sar
pushf
push
mov
jl
outsl
adc
stos
and
or
inc
ja
sub
mov
push
and
fnstenv
in
mov
int3
xchg
jno
jns
popf
push
ja
inc
rcll
sub
adc
in
outsl
stos
push
push
mov
cmc
out
jmp
add
xchg
inc
movsb
das
sub
mov
insb
add
lds
imul
and
lds
xchg
cs
aam
adc
sub
lcall
mov
sub
mov
adc
insb
mov
loop
pop
jp
addl
xor
adc
xchg
daa
mov
or
mov
enter
pop
out
mov
mov
lock
insb
inc
xchg
lods
push
repz
daa
and
popw
or
or
repnz
sti
add
lods
and
cmpb
mov
mov
mov
pop
jnp
int
scas
das
mov
lods
and
int
add
push
adc
dec
jns
mov
daa
mov
jg
out
outsl
sbb
loop
dec
dec
fisubs
mov
sbb
out
rcrb
aas
inc
insb
and
inc
repnz
jbe
das
inc
dec
xchg
jmp
xlat
call
ljmp
arpl
mov
jb
and
adc
inc
push
or
arpl
scas
push
inc
scas
cli
cmpsl
lcall
fiadds
inc
push
nop
icebp
inc
aas
imul
hlt
dec
hlt
cmp
out
mov
in
bound
mov
lods
int
rorl
push
mov
sbb
jno
scas
pushf
sub
popa
mov
fstp
das
push
cli
fmulp
and
push
pop
mov
mov
data16
push
jmp
jo
movsl
ljmp
and
pop
mov
adc
cmp
imul
jge
shrb
adc
je
xchg
dec
stc
ficoml
shll
aas
lea
mov
das
cmp
cld
jl
inc
pop
push
mov
adc
je
push
push
std
enter
mov
int
daa
mov
pop
pop
add
adc
xchg
ret
ficoml
ljmp
mov
jmp
dec
dec
mov
cmpsl
pop
xor
xor
lds
ret
xchg
lds
jbe
pop
push
sarb
cld
ja
pop
pop
pop
pop
shl
fisttpll
hlt
jo
jbe
jno
cmp
mov
lods
sub
dec
lods
outsb
dec
push
scas
int
cwtl
and
mov
mov
orb
inc
rorb
adc
testl
add
lea
inc
cmpsb
push
jne
addr16
in
in
xor
mov
es
test
les
inc
jmp
std
or
nop
sub
movsl
mov
sub
xchg
xor
out
push
cmp
mov
pop
rcrb
gs
add
add
sub
jae
jecxz
inc
sbb
aad
add
gs
in
icebp
and
adc
loop
fsubr
test
out
je
cmpxchg
in
mov
xchg
xor
rcrl
mov
xor
xchg
xor
nop
test
sub
jo
and
mov
andb
and
sbb
pop
jns
in
jno
cmpsl
scas
cmpsl
mov
bound
inc
mov
mov
inc
ficomps
inc
sub
push
pop
es
sub
mov
lods
xchg
xor
int
or
cmpxchg
mov
pop
arpl
mov
xor
sti
loopne
fwait
lahf
jge
cwtl
sub
addr16
lods
pop
dec
clc
xchg
jg
cmp
cmp
pop
rcrb
jg
aas
push
pop
cltd
push
das
pop
mov
cmc
xor
push
leave
xor
xchg
adcb
inc
push
aad
adc
ret
mov
xchg
fs
lods
sbb
sbb
das
push
mov
ret
dec
int3
mov
test
leave
jmp
call
popf
lretw
les
mov
hlt
sbb
push
pop
push
or
hlt
sub
jbe
or
lock
sbb
aad
in
outsl
and
dec
jp
add
xchg
mov
mov
daa
jb
ss
test
jp
jl
mov
cmpsl
dec
push
mov
into
movsb
mov
inc
das
sbbl
outsl
or
mov
aam
stos
call
sbb
add
xchg
xor
fldcw
xchg
dec
rolb
inc
xor
jne
mov
push
insb
push
mov
lods
daa
notl
xor
fwait
movsb
xor
sbb
xchg
add
add
xchg
inc
jno
shl
mov
icebp
jl
in
jno
imul
pushf
cmp
mov
ret
andl
pop
pop
xchg
adc
hlt
xorb
xchg
mov
dec
fnstenv
ljmp
orl
sbb
push
notl
stos
jo
pusha
imul
andl
adc
dec
xor
mov
roll
popf
lock
pop
test
xor
sbb
ja
dec
std
jnp
cmpl
dec
cmp
cwtl
in
fisubl
add
jg
inc
mov
loop
and
pop
dec
or
adc
push
ljmp
arpl
jge
or
icebp
sbb
sbb
fistps
sub
xchg
imul
stc
iret
shl
or
mov
jmp
mov
stos
rolb
in
xor
pop
cmp
push
push
pop
out
dec
inc
adc
pop
scas
sbb
rcrl
push
fadds
sbb
stc
jae
fstpl
adc
lret
pusha
push
movsb
cli
sub
inc
cmp
cwtl
jle
push
xor
data16
test
sbb
mov
ret
fiadds
test
mov
jmp
jge
jo
adc
mov
sbb
test
and
mov
mov
loop
cmp
pop
jb
out
cltd
nop
cwtl
lret
in
pop
cs
xchg
loope
pop
jge
bound
addl
cld
adc
icebp
pushf
jne
insl
data16
push
mov
int
mov
in
bound
in
sbb
xchg
ljmp
sub
adc
fs
lcall
adcb
mov
in
outsl
sbb
pop
sbbb
cs
into
sbb
jg
fists
sbb
dec
or
push
rclb
nop
xor
jae
pop
insl
adc
lret
dec
lods
popa
add
sti
cmc
sbbl
dec
cmpsl
mov
ljmp
jns
push
shr
jo
cli
daa
outsl
popf
popf
aaa
mov
shrl
cld
mov
pop
dec
fsub
pop
lock
mov
mov
out
clc
test
test
shrb
insb
inc
jg
lcall
into
int3
arpl
out
loopne
xor
xchg
loopne
xchg
call
pop
push
icebp
xor
jo
cmp
outsl
js
mov
dec
rcll
push
pop
loopne
imul
shll
inc
scas
fnsave
int3
inc
ret
fsubs
divl
inc
sub
or
jnp
mov
jne
xor
jne
xor
fisubs
and
jo
cmp
mov
outsl
das
insl
pop
out
dec
inc
or
cmp
xor
push
sub
out
fcompl
cmp
test
xor
xchg
push
jnp
add
cld
nop
lods
mov
xor
outsl
cmp
int3
xchg
jns
fiaddl
stc
rolb
sub
mov
mov
sti
shrl
push
xor
scas
ret
fdivl
mov
xchg
enter
loope
int
sbb
pop
mov
andl
mov
movsl
out
hlt
jae
push
add
mov
sbb
inc
subb
lcall
int
mov
ret
pop
aam
je
lods
cmp
pop
and
inc
sbb
jno
fcompl
add
mov
aad
in
push
movsl
mov
std
pop
div
mov
clc
lea
mov
xchg
in
pop
icebp
lret
fcmovbe
imul
pop
shrl
xchg
xchg
push
sub
inc
insl
iret
and
icebp
filds
aas
push
sub
add
repnz
pop
movsl
mov
dec
cmc
into
and
cmp
mov
icebp
push
aam
hlt
cwtl
sbbb
stos
dec
cmp
movsb
inc
mov
and
nop
jge
and
mov
jne
mov
push
xchg
mov
adc
xlat
and
xchg
rorb
imul
add
mov
pop
mov
clc
push
dec
ds
inc
mov
je
push
cltd
cltd
das
testb
test
mov
and
mov
iret
nop
jmp
mov
cmp
xchg
jg
das
stc
jecxz
add
adc
ffreep
push
jo
push
and
push
test
cmp
jmp
lds
xchg
cwtl
rcl
mov
daa
mov
fdivrs
xchg
dec
or
adc
loope
cmpsb
dec
into
fdivl
dec
mov
jecxz
mov
push
adc
push
mov
mov
or
cmp
push
push
mov
adc
jbe
push
testb
outsb
adc
and
adc
inc
xchg
arpl
ja
sbb
pop
pop
cmp
movsb
cmp
dec
lods
ds
or
scas
bound
sti
sti
pop
cmp
jp
test
add
outsl
jp
fnstenv
mov
xlat
jle
or
xor
or
mov
cmp
push
loope
mov
out
pop
sbb
popa
gs
xchg
mov
movsl
mov
sbb
movlps
xchg
and
mov
mov
inc
inc
mov
pop
lock
or
cmpb
andb
movsb
xchg
scas
leave
shll
mov
gs
mov
pop
shrl
jge
pushl
or
lods
je
flds
inc
pop
leave
xlat
js
push
or
sub
pop
or
bound
popf
jno
add
test
or
stos
fsubl
shrb
adc
xor
icebp
loopne
sbb
xor
push
fbld
pusha
bound
push
cmp
hlt
dec
hlt
jp
xchg
data16
cmp
push
or
sub
pop
jno
inc
sarb
repz
les
xchg
repnz
pop
xchg
bound
fidivl
movsl
sbb
or
mov
lods
mov
lds
mov
sbb
jecxz
loopne
lds
jo
mov
cmc
jecxz
rolb
inc
ljmp
lret
xor
mov
sarb
dec
pop
push
int
icebp
xchg
fldl
lds
cs
cwtl
aaa
fwait
outsb
or
xchg
sub
mov
mov
inc
insb
aaa
testb
sbb
cmp
jecxz
add
fwait
mov
lcall
sbb
mov
out
pop
lret
out
sub
xor
dec
inc
inc
push
adc
lret
popf
dec
into
bnd
mov
shr
hlt
push
mov
dec
hlt
xchg
pop
dec
andb
das
push
cwtl
jbe
int3
sbb
lock
xor
adc
xor
pop
mov
pushf
and
shlb
fsubrs
jl
test
ljmp
icebp
loope
xlat
aad
jae
call
fisubrs
arpl
lods
sub
mov
popf
dec
mov
faddl
sbbb
loop
sub
loopne
and
bnd
cmp
leave
xchg
ds
adc
jns
fsub
jae
int3
adc
push
lds
mov
mov
repz
cmp
inc
cli
cmp
xor
mov
dec
pop
mov
addr16
jmp
inc
dec
addr16
xor
xchg
xor
in
bound
or
dec
jecxz
xor
push
aaa
mov
cltd
fwait
xchg
call
sub
mov
rcrl
sahf
xchg
cmc
insl
and
pushf
test
ljmp
aas
cmp
sbb
sbb
dec
cltd
enter
or
adc
shl
imul
ss
and
jg
ret
xchg
jnp
jno
call
adc
cmp
push
dec
push
outsb
xor
fists
into
aam
cmp
inc
fstpl
inc
inc
or
bound
pop
enter
daa
rorb
out
lret
mov
adc
mov
insb
enter
jp
out
aas
popf
shll
in
fsubrl
jle
adc
push
dec
xchg
pop
ja
daa
sub
int3
orl
dec
xchg
jbe
sbb
outsb
push
push
ss
das
mov
inc
out
out
sub
fs
lcall
inc
cmp
out
lods
and
fldl
popf
and
arpl
and
jle
jnp
jge
rorb
dec
xchg
mov
dec
test
push
adc
cmp
pop
mov
xchg
addb
lea
pop
adc
test
sahf
neg
jae
insb
sub
lret
or
xchg
das
mov
pushf
cltd
popf
in
push
adc
lahf
fwait
inc
jmp
fsubrl
adc
pminub
in
push
pop
push
cmp
lock
sahf
xor
xchg
ret
into
push
ljmp
xchg
jnp,pt
sbb
lret
enter
mov
sbb
stos
add
xor
lods
cmpsb
and
dec
push
inc
in
adc
add
sub
std
jmp
aam
sbb
fwait
test
insl
ja
ja
in
dec
mov
dec
jl
pop
sub
fidivs
mov
mov
leave
dec
cmp
out
inc
pusha
mov
ja
les
xor
scas
or
jl
add
mov
pop
adc
sbb
stos
add
sbb
jmp
jo
out
mov
mov
jo
pop
xchg
jmp
add
adc
pop
cli
pushf
bound
mov
push
cwtl
insl
jbe
inc
cmpsb
push
fdivrs
bound
movsb
cli
and
xor
xchg
pop
mov
sbb
iret
lahf
add
cmp
test
xorb
arpl
popf
and
jno
push
xor
stc
sbb
pop
pushl
sbb
int
jno
pop
cmc
sub
popf
std
mov
movsb
clc
idiv
inc
mov
out
test
xlat
pop
arpl
aaa
sbbb
add
adc
jl
sbb
sbb
jle
add
sub
dec
imul
push
cmpsl
jae
jle
inc
sarb
and
mov
push
lea
hlt
jg
push
scas
pop
test
xchg
test
sub
xchg
out
mov
repnz
decl
fisttps
rclb
sti
mov
adc
sti
stos
iret
movsl
adc
dec
push
sub
int
jecxz
or
jbe
mov
adc
push
jecxz
push
int
fisttpl
pusha
push
rclb
cmp
sub
movsb
cmp
lods
int
divl
jne
loopne
jb
cmc
mov
pop
sub
mov
mov
mov
mov
sbb
lods
lahf
xor
das
scas
or
push
push
push
jno
mov
mov
mov
cmpsb
mov
rcrl
push
or
dec
jb
mov
lock
pushf
mov
sub
pop
in
add
je
cltd
cmp
and
push
int
test
scas
sub
int3
and
jmp
mov
mov
adc
cmp
adc
or
rcrb
test
lret
subb
and
cltd
sbb
adc
sub
jmp
les
and
sub
stos
inc
out
arpl
mov
aam
testb
nop
adc
xlat
gs
or
cmc
ret
in
cmp
in
ds
inc
mov
push
xchg
call
jb
movsl
push
outsb
xchg
pop
xor
mov
jno
or
ror
mov
dec
push
or
cmpsb
mov
or
addr16
jb
in
or
stc
fiadds
jg
int3
pop
lods
cmpsb
push
fidivl
scas
mull
xchg
lds
mov
push
js
cmc
jmp
out
lds
inc
jne
mov
test
loope
jb
in
sub
outsl
add
push
push
jecxz
ffreep
xchg
jnp
sbb
loopne
outsb
lret
daa
inc
lods
sub
sub
mov
sub
gs
ja
mov
fists
shlb
std
jmp
push
cwtl
outsb
icebp
push
clc
adc
mov
and
data16
xor
fs
lods
loopne
sub
mov
hlt
inc
addr16
flds
xor
xor
out
sbb
mov
adc
sbb
aas
ss
rorl
notl
insb
inc
int3
lea
cmp
mov
mov
adc
mov
mov
mov
testb
jb
and
cmp
or
sub
enter
repnz
mul
mov
pushf
xlat
mov
js
fidivs
or
ja
mov
movl
shrb
addl
lret
setbe
xchg
ret
dec
fadd
cmpsb
popf
mov
shll
cmc
xor
push
cmp
mov
cli
mov
lods
ljmp
test
imul
pop
dec
insl
xchg
je
push
and
enter
rcrb
dec
into
and
cmovg
loopne
sub
cs
sbb
mov
push
aaa
and
mov
or
mov
mull
cmc
dec
mov
jge
or
xchg
bound
das
fldl
sub
mov
adc
push
ds
cmpsb
mov
gs
add
in
movsb
shll
jnp
lret
push
inc
push
aas
lcall
or
mov
aam
inc
addr16
in
std
push
jl
clc
cld
ret
inc
sbb
jge
bound
mov
and
addl
xorb
aam
dec
push
cltd
push
repz
divl
ret
pop
cmp
pop
cmp
push
aad
mov
mov
sbb
add
jp
out
xor
cmpsb
shlb
clc
xor
xor
hlt
shll
push
pop
sbb
mov
xor
lods
nop
dec
and
add
mov
repz
xor
and
xchg
orl
sbb
mov
fmul
push
jne
sbb
xor
sbb
mov
dec
push
lock
je
and
arpl
xchg
push
data16
fs
add
popa
jae
and
push
outsl
dec
adc
arpl
mov
cmp
ror
push
rol
stos
inc
mov
sbb
int
fisttpll
test
lock
push
lods
ds
pop
mov
cmpsl
ds
jo
push
xchg
pop
jno
jecxz
aam
or
push
outsl
bnd
mov
mov
imul
push
sahf
pop
push
cmc
inc
sbb
push
test
xchg
push
cmp
mov
push
bound
adc
pop
bound
lret
gs
push
inc
xchg
cmp
cmp
adc
jp
xor
sub
xacquire
mov
stos
sub
movsb
sub
out
mov
ds
pop
loopne
es
or
les
jbe
or
idivb
xor
sub
mov
popf
adc
movsb
mov
jmp
mov
mov
mov
ja
dec
jb
or
imul
jg
xlat
in
insb
xor
jo
mov
int
push
lock
push
jl
push
shlb
xchg
into
and
out
jns
mov
push
imul
dec
out
out
ret
xlat
cmp
sbb
xchg
enter
mov
gs
add
jmp
shlb
in
cmp
mov
arpl
cmp
cmpsl
or
pop
loop
lods
inc
notb
sub
push
mov
aad
inc
stc
lock
inc
movsl
gs
fstl
mov
repnz
dec
cmp
and
xchg
pop
sbb
lods
and
add
mov
popa
dec
int3
lods
ljmp
cli
movsb
fcomps
jo
sbb
rorl
pop
pop
cmp
mov
mov
repz
sub
sub
and
daa
test
lret
or
dec
ljmp
ret
mov
out
xlat
scas
fistps
int
rolb
bound
xlat
push
cltd
sbb
ficoms
dec
xor
adc
push
in
mov
cmp
add
jp
mov
inc
xor
jb
in
and
in
and
or
pop
jns
loop
xor
jecxz
push
cwtl
fcoml
das
xlat
frstor
adc
xchg
sbb
add
imul
ss
push
flds
mov
or
ret
or
mov
pop
or
hlt
nop
and
stos
cmp
dec
jg
mov
xor
mov
mov
pop
add
and
inc
int
cmp
mov
inc
in
push
cmp
sub
pop
repz
imul
out
imull
mov
outsb
out
daa
pmaxub
hlt
xchg
dec
sbb
out
lds
and
lds
out
sub
nop
xchg
loopne
fiaddl
mov
dec
and
add
loop
sub
movsb
sbb
mov
jo
add
push
cmp
loop
sub
adc
fimull
push
jg
sbb
aas
add
cmp
ja
mov
jecxz
arpl
mov
ss
jae
fisttps
lds
sbb
xchg
xchg
das
push
adc
mov
cmp
leave
pop
inc
scas
sbbb
xchg
in
sub
popa
test
scas
jb
push
shl
jl
les
push
pushf
sub
jl
insl
insb
xchg
inc
add
cltd
push
addr16
ja
or
push
jp
bound
out
mov
cmpsl
xor
inc
adc
lret
add
dec
dec
ret
xor
xorb
sahf
jp
xor
fists
push
push
movsb
popa
fsubrl
jmp
push
jge
dec
lret
jns
or
stos
popa
cli
aaa
orl
in
sub
mov
push
sub
or
or
repz
outsl
arpl
icebp
je
sub
jecxz
mov
add
jg
ljmp
test
test
call
fbstp
push
push
mov
movsb
mov
loopne
add
sub
cmc
icebp
outsl
pop
mov
dec
shr
xchg
lret
or
fucom
xchg
pop
push
inc
add
pop
and
jecxz
mov
or
xlat
inc
rcrl
out
lahf
mov
test
test
push
pop
into
xchg
push
jg
push
lret
mov
sbb
mov
fdiv
pushf
es
add
mulb
push
xchg
movsb
dec
pop
hlt
and
lods
outsl
fidivs
gs
xchg
ds
dec
int3
fiadds
loopne
or
movsl
jbe
adc
cld
in
cs
dec
add
xchg
mov
xor
outsl
jp
mov
lods
insb
in
cmpsl
inc
sub
jl
jb
mov
mov
jp
out
inc
sub
push
scas
popa
inc
out
scas
lods
mov
mov
mov
mov
adc
rcrw
outsl
ljmp
and
lcall
int
divl
sub
das
mov
push
add
cltd
shl
mov
mov
dec
xchg
push
rcll
mov
jle
mov
mov
test
xchg
fs
cli
enter
pop
arpl
push
xor
fldenv
popa
stos
pop
inc
jecxz
xchg
sarb
icebp
add
push
mov
lcall
mov
movsl
mov
pushf
pop
into
outsb
cli
sub
fcoms
add
or
xchg
hlt
repz
inc
aaa
sub
or
pop
movsl
mov
hlt
jp
out
int
das
xor
int
pop
jge
sub
and
enter
mov
out
test
fbstp
sub
ljmp
inc
adcl
fcompl
xchg
test
mov
in
arpl
cmpl
cs
pop
shlb
xchg
pushf
jbe
ret
xchg
insb
sbb
fcompl
rep
xlat
push
xchg
fnsave
je
es
lock
lahf
lods
sbb
std
std
push
stc
jp
cmpsb
clc
jmp
in
push
mov
add
sub
je
std
pushf
shlb
dec
cmp
adc
pop
add
fstpt
or
sbb
or
repnz
cld
hlt
add
repnz
lret
movsb
xchg
inc
pushf
daa
or
je
sbb
mov
xchg
push
add
cmp
fnstsw
int
cmovp
pop
push
sbb
scas
les
mov
mov
sub
or
fwait
in
jae
out
loopne
rcl
dec
test
ds
sub
or
fwait
gs
mov
jns
divl
pop
test
adc
fstpt
out
jp
mov
add
mov
aad
shlb
or
and
and
cmpsb
scas
leave
fidivs
js
insl
push
mov
add
mov
jnp
mov
pop
lea
jae
out
sbb
xchg
pop
pop
jno
ljmp
adc
cmpsl
mov
jns
icebp
push
or
inc
sub
insl
jne
les
inc
xchg
outsl
xor
and
xlat
and
dec
js
sub
cltd
out
mov
cmp
cmp
test
jbe
lods
imul
jns
jmp
adc
outsb
jecxz
lods
dec
loopne
dec
pusha
pop
fisubl
loopne
leave
cmp
and
push
ljmp
jl
pushf
loopne
enter
push
ret
inc
pop
out
add
mov
ds
xchg
mov
push
repz
jnp
fwait
out
sub
mov
dec
or
and
pop
fistpl
lret
jecxz
fisubrs
pop
push
cmp
enter
sbb
push
sbb
mov
add
adc
cmpsb
pop
imul
cmpps
dec
xchg
push
lcall
mov
in
repnz
fstl
gs
jle
hlt
leave
icebp
loope
push
jne
enter
xchg
adc
rorl
pop
push
adc
or
es
lret
das
push
add
sub
cvttps2pi
fisttps
cmp
outsl
mov
xor
lret
clc
shr
jb
dec
test
int3
cmp
cmp
jmp
push
shrl
mov
vunpcklps
fdivr
test
dec
shl
insl
shl
les
push
in
adc
test
pop
cmpsb
ja
leave
loopne
push
flds
mov
xor
adc
push
repnz
das
sub
fstps
pop
jle
js
hlt
jno
scas
popa
push
mov
or
sub
aam
loopne
push
pop
cmp
adc
stos
lds
add
cld
push
fidivrs
mov
int
in
fnstcw
fwait
push
shll
add
aad
pushf
add
aas
cmp
cmp
lock
mov
lds
mov
push
push
movsb
adc
pop
mov
addr16
dec
pop
mov
data16
scas
fnclex
addr16
dec
mov
movsb
sbb
aam
mov
mov
xor
cli
cs
fcomps
inc
fdivrs
lahf
ror
xchg
xchg
adc
jne
jl
or
fnstsw
cld
test
xchg
sub
mov
push
or
jl
cli
fldenv
dec
fisttpll
loope
jg
dec
sar
and
add
inc
aad
scas
mul
popf
test
lret
ljmp
or
sub
push
sbb
push
imul
sbb
std
rol
repnz
cmpsl
xchg
int3
jecxz
adc
push
test
hlt
mov
or
xor
jno
lock
pushf
rcll
jne
call
jecxz
cmp
popf
into
loope
jb
push
xchg
add
inc
ret
add
aaa
je
push
daa
mov
or
pop
sub
pop
sbb
mov
xchg
std
test
jmp
sub
into
iret
nop
xchg
into
and
mov
loope
xor
shlb
xor
or
push
or
fdivs
jmp
cmc
insl
and
xchg
insl
sbb
jge
shl
jno
dec
std
and
jmp
add
add
mov
filds
mov
mov
adc
out
xor
and
and
mov
cmpsl
lock
cld
imul
dec
out
je
and
mov
xchg
dec
jb
aas
mov
mov
sub
inc
adc
nop
scas
mov
jnp
cmp
loopne
jae
push
daa
into
cwtl
xor
push
sbb
sub
scas
mov
movsl
jge
filds
or
mov
jno
test
add
pop
addr16
inc
or
fists
lods
fsubrl
fldl
jge
or
enter
mov
mov
xlat
sbb
out
rcrb
mov
adc
xchg
push
int3
push
pop
lcall
fs
repnz
int
push
xchg
sbb
sub
xor
mov
mov
fwait
jmp
movsb
popf
add
mov
popf
stos
dec
cld
dec
movl
xchg
and
out
bnd
mov
dec
push
test
mov
and
mov
insl
fcmovb
xchg
xchg
cld
test
push
mov
sbb
pop
mov
and
sahf
inc
je
mov
mov
add
mov
pmaddwd
int
xor
cmc
das
ret
icebp
push
lock
fdivl
mov
jg
push
mov
adc
repz
int
dec
rorl
pusha
mov
add
movsb
or
mov
pop
mov
sbb
adc
data16
or
pop
mov
pop
add
mov
mov
inc
pusha
jo
lcall
add
xor
out
loop
les
jl
daa
insb
imull
lcall
aad
push
and
xchg
pop
test
rorb
cli
sub
jns
mov
xchg
mov
sbb
mov
mov
mov
jne
cmc
or
inc
jae
or
mov
jns
lret
mov
and
jge
sbb
adc
sbb
pop
and
sbb
lock
jle
jmp
mov
loopne
cmp
add
jecxz
or
stos
cmp
push
test
scas
sub
fldcw
cmp
xchg
cmp
cmpsl
mov
adc
in
push
xchg
cmp
adc
lahf
movsb
mov
lods
cmpsl
loopne
pop
xor
push
js
enter
adc
push
inc
ds
gs
mov
inc
inc
stc
aam
inc
dec
jle
cvttps2pi
jnp
int
push
mov
test
cmp
mov
mov
push
stos
in
xchg
lods
cmp
sarl
xchg
arpl
cmp
shrb
jge
jne
das
xchg
push
xorl
pusha
or
aaa
ljmp
sahf
and
in
and
test
adc
push
shrb
xlat
enter
xchg
push
mov
ljmp
or
mov
add
ds
repnz
icebp
cmp
mov
cmp
adc
pop
mov
and
or
jecxz
xor
das
or
mov
push
ljmp
dec
lods
pop
push
xchg
or
mov
jecxz
fcom
add
sub
jl
mov
xchg
sti
mov
push
call
sahf
cmp
sub
das
loopne
adc
cmp
outsl
ss
stc
mov
aad
jb
lret
js
daa
test
mov
sub
or
xor
inc
mov
and
pop
add
dec
pushf
add
jnp
arpl
and
mov
mov
and
pusha
cltd
insl
inc
pusha
xor
lods
jp
and
xchg
add
sbb
out
lods
sub
gs
outsl
mov
xor
adc
inc
add
xlat
xor
outsl
xchg
inc
fimull
jmp
jno
loope
lret
and
test
std
es
nop
and
lock
pop
loop
push
push
fistl
add
dec
push
call
mov
arpl
pop
mov
jo
xchg
orl
mov
jo
rcll
sub
mov
and
jl
test
jecxz
jle
loop
pop
mov
push
js
stc
stc
mov
ror
mov
test
bnd
xchg
jne
inc
sbb
mov
push
xor
mov
push
fildl
and
repnz
js
loopne
cmp
dec
jb
lcall
stos
movntps
notb
adc
lods
lcall
xor
adc
mov
push
in
insl
paddusw
mov
icebp
dec
out
sub
sahf
pusha
mov
sub
mov
xchg
dec
into
cmp
xchg
mov
loopne
dec
add
cmp
push
inc
mov
js
pop
clc
lods
and
dec
push
or
sbb
push
imul
push
pop
or
xchg
jmp
xchg
fst
mov
aad
cmp
mov
add
divl
stc
movhps
lods
popf
nop
push
faddp
inc
push
xchg
out
sti
dec
push
pop
dec
jbe
vpavgb
mov
sti
fimuls
bound
jge
inc
js
fistpll
sahf
orl
mov
aam
idiv
data16
sarl
push
push
xchg
cmp
aas
push
or
lret
loope
add
xchg
or
pop
je
scas
jmp
imull
aas
dec
mov
lock
cli
mov
enter
jge
xlat
rcll
inc
stc
outsb
xor
adc
popa
int3
jge
es
sub
stos
jle
dec
inc
cltd
scas
out
dec
mov
add
xchg
dec
add
dec
inc
sub
xchg
in
mov
jp
xchg
sub
imul
js
xor
dec
les
loope
outsb
enter
pop
outsb
lahf
in
sub
jg
jl
pop
xchg
jl
inc
fs
inc
aad
fwait
mov
add
lods
mov
imul
or
adc
jo
xchg
je
pop
push
push
mov
xor
lods
dec
leave
mov
dec
nop
and
adc
dec
lods
gs
cmp
clc
mov
xchg
push
stos
mov
jnp
fwait
arpl
mov
fs
leave
mov
loop
mov
add
and
sbb
std
jmp
xchg
pusha
mov
addb
cmpsl
les
into
adc
adc
andl
push
inc
dec
nop
clc
add
outsb
daa
fwait
andb
ds
out
lods
dec
mov
jmp
xchg
xorb
negb
adc
add
xchg
dec
push
or
jg
repz
dec
fcompl
iret
loope
add
subb
mov
pop
mov
dec
mov
add
out
mov
cld
inc
mov
mov
adc
movsl
sahf
ret
xor
pop
jecxz
sbb
sbb
shll
insl
push
mov
pop
push
mov
cmc
sbbl
cmp
push
mov
jge
scas
iret
inc
jl
repnz
iret
pop
push
movsl
mov
repnz
mov
lods
xchg
adc
loop
sub
push
and
hlt
push
xor
adc
jae
rclb
mov
xor
mov
cmpb
cmp
jbe
daa
lar
sbb
push
adc
add
addr16
popa
mov
fsubrl
fsub
push
test
pop
daa
pushf
mov
and
pusha
scas
and
sub
mov
push
lret
push
rol
push
sti
cmp
add
inc
jecxz
xchg
inc
and
repz
inc
and
mov
mov
xor
mov
cmp
xchg
push
adcb
aas
jo
lock
dec
add
dec
xor
push
rep
in
lahf
jg
dec
mov
jno
mov
rorb
sbb
into
frstor
lahf
or
filds
out
cmp
repnz
xor
xor
rclb
fildl
pop
insl
out
sub
mov
aaa
and
sub
movsb
xor
out
lods
jae
je
ja
cs
fdivs
mov
dec
add
jns
or
mov
sbb
jecxz
sbb
ja
jge
lods
mov
jecxz
add
in
loop
mov
push
mov
aam
ja
sahf
xor
mov
jno
inc
push
lahf
mov
sub
mov
pop
rol
jp
leave
je
pop
mov
ret
and
and
jns
iret
sti
push
test
and
fisttpl
fldl
xor
fiaddl
mov
cmp
push
mov
mov
les
enter
ja
ds
packuswb
or
aaa
pop
in
popf
insb
loop
out
jae
xchg
adc
dec
cmpl
xor
in
lea
pop
jg
xor
popa
cli
aaa
lods
pop
rcll
adc
cmpsl
cmp
and
mov
xchg
cmpsl
enter
pushfw
out
lds
or
xlat
out
and
faddl
lret
repnz
test
mov
xchg
fstpt
xor
int3
lea
fdivrs
sti
int3
jp
and
xchg
in
add
xor
lods
iret
sub
adc
mov
mov
adc
and
jp
cmp
test
call
xchg
xor
dec
add
popf
adc
mov
mov
or
jl
inc
ljmp
pop
sarb
fsubr
xor
test
out
pop
xchg
sub
addr16
mov
add
push
and
push
in
mov
lods
insb
pop
sub
lret
dec
ja
test
xlat
adc
inc
out
fwait
sahf
stos
ret
jecxz
movsl
cmp
pcmpgtw
test
adc
iret
test
sbb
movsb
xor
xor
jp
mov
or
lds
fbstp
pop
push
jecxz
xchg
pop
sub
xor
jge
mov
add
adc
es
in
xor
sub
push
jge
loope
sub
arpl
push
mov
cmp
xchg
push
lahf
inc
xchg
pop
or
push
jp
xor
xor
xchg
push
adc
shll
lahf
out
inc
sub
mov
jp
ficoms
in
scas
in
inc
adc
and
sbb
test
sbb
insl
in
adc
adc
fnstenv
js
dec
xchg
mov
into
cmpsb
or
adc
sub
push
jg
fisttpll
cmp
scas
mov
xchg
adc
xor
adc
dec
inc
mov
pop
push
lahf
scas
imul
sbb
leave
inc
jnp
jle
imul
xchg
inc
les
fisubl
shlb
outsl
fnsave
sub
fs
aaa
enter
xchg
xor
dec
jp
ja
adc
in
fs
in
mov
insb
inc
bound
imul
in
or
sbb
pusha
jbe
inc
lea
dec
push
mov
jmp
andb
adc
jno
sub
dec
inc
pop
cmp
jg
adc
cwtl
into
sti
lods
es
jb
mov
xor
cmp
pusha
cmp
sub
pop
popa
inc
pand
test
sbb
mov
in
loopne
dec
lds
mov
test
lods
push
push
and
xchg
inc
jmp
jno
dec
lds
data16
test
into
loope
into
lea
jge
cmp
std
clc
mov
cwtl
enter
jb
adc
stos
jecxz
and
xor
ret
mov
sbb
and
and
sahf
sbb
push
sbb
cmpsl
xchg
dec
jl
add
bound
data16
mov
inc
into
mov
ljmp
sbb
pop
leave
jno
jns
add
test
xchg
rcl
xor
cltd
orb
and
cmp
jle
or
mov
test
xchg
pop
push
mov
test
cmc
cmp
mov
push
enter
xchg
or
rol
inc
xchg
pop
nop
sub
test
fnstenv
inc
cwtl
call
lds
jne
lcall
fstpt
fs
pop
ret
lret
imul
cmp
mov
loop
call
mov
push
pop
ret
sbb
dec
pop
loopne
scas
inc
mov
push
out
inc
adc
int
popa
sbbl
movsb
sarb
jne
int
mov
pop
stc
jns
js
mov
dec
ret
pop
fldt
dec
cmpsl
jmp
xor
out
sbb
enter
add
dec
mov
repnz
xlat
adc
or
loopne
mov
test
ret
dec
popa
mov
dec
lock
repnz
loopne
arpl
call
jbe
mov
adc
xchg
fisubl
mov
inc
add
icebp
mov
call
push
sbb
or
pop
or
lds
loop
daa
test
sbb
mov
mov
or
lds
mov
jge
dec
lahf
sbb
cmp
aaa
sar
jns
aad
mov
mov
rcll
fists
aas
inc
daa
jbe
sbb
sub
or
mov
stos
sub
cltd
in
lahf
out
push
pop
cmp
addl
mov
js
cli
add
and
movsb
dec
sub
fadd
xlat
outsl
popa
sbb
jbe
dec
xlat
test
movl
or
fstpl
inc
sarb
fisubrl
or
add
repz
push
rclb
mov
and
icebp
sub
xor
mov
or
enter
popf
test
sub
shlb
add
lcall
sub
push
repz
xchg
aas
mov
idivb
push
add
fsubrs
mov
jle
dec
and
and
mov
cmp
ret
iret
mov
lret
fs
jae
mov
out
gs
movsl
loope
dec
mov
rorb
xor
dec
loopne
push
xchg
push
test
shlb
jp
test
mov
sbb
in
fwait
clc
jns
insb
push
ret
js
mov
pop
jns
and
and
test
fldcw
push
and
lock
or
jne
and
push
in
mov
inc
xchg
push
in
xor
mov
arpl
cmp
inc
mov
fistl
sbb
addr16
cli
test
daa
lahf
testb
jmp
mov
lods
lret
in
jne
or
lods
je
ds
mov
lds
cld
dec
or
mov
jmp
pop
mov
cltd
in
push
and
lock
test
dec
pusha
pop
sub
ds
imul
sub
notl
mov
mov
sahf
xchg
pusha
fistpll
fmuls
pop
mov
mov
orb
nop
or
jne
dec
nop
xchg
xchg
clc
test
push
pushf
jp
add
cmp
pop
mov
bound
mov
jae
leave
sub
stos
decl
jo
into
pop
enter
out
and
jae
bound
les
aad
dec
addr16
push
jle
jno
out
xchg
push
jle
orl
xor
not
stos
xor
push
mov
shl
lock
mull
push
into
loope
pop
push
inc
scas
or
or
sarb
test
adc
sbb
scas
fprem
int3
inc
push
mov
adc
mov
or
pop
inc
pop
aad
cmp
jns
mov
mov
push
ret
fsubrl
cmp
adc
dec
jp
add
scas
scas
lret
fadds
mov
sbb
test
rclb
rcl
mov
mov
lcall
out
xchg
adc
lods
rcrl
stos
mov
push
mov
adc
dec
adc
arpl
ret
fimuls
into
lods
adc
inc
push
jmp
scas
bound
dec
mov
outsl
mov
cmp
push
add
sub
popa
leave
mov
mov
pop
loope
cmp
lock
movl
cmp
xor
lods
mov
cmpsl
lock
popf
mov
fwait
cmp
repz
jle
fldl
subb
cmp
mov
pop
out
cmpsl
sti
push
outsb
mov
movsb
out
ja
push
cmpsb
loop
bound
inc
sub
cmp
sbb
mov
aad
inc
ds
mov
in
sbb
je
aam
arpl
cltd
movsb
adcb
xor
inc
imul
ja
insl
dec
xchg
dec
cmp
xchg
aas
jns
inc
add
mov
pop
cmp
stos
movsb
jns
xor
repnz
jb
outsl
mov
xor
js
jmp
jne
mov
xor
pop
and
push
jnp
push
pop
or
xchg
xchg
rcrl
out
cmp
mov
push
int3
outsl
std
js
mov
dec
mov
inc
fs
jno
test
andnps
fcoml
stos
imull
inc
repnz
icebp
out
stos
mov
pop
push
pushf
jle
ja
fldt
icebp
sub
cmc
mov
test
or
mov
fwait
imul
jb
fimuls
mov
adc
cmp
cwtl
stc
cli
or
xor
leave
fs
movsl
out
mov
shll
dec
leave
lret
pop
dec
addb
mov
ficoml
repnz
inc
stos
mov
xlat
mov
mov
hlt
jmp
lds
push
sub
mov
mov
mov
in
jp
or
imul
adc
xlat
sbb
xchg
add
inc
ds
mov
cwtl
scas
sbb
adc
arpl
add
cmp
pop
jecxz
iret
sbb
in
daa
sbb
pop
shll
ljmp
xchg
cs
mov
sub
leave
test
movsl
imull
push
push
imull
fistps
test
mov
nop
mov
loop
cmpl
dec
ss
mov
jp
call
cmpsl
dec
lret
xor
enter
push
jmp
adc
dec
sti
pop
test
sbb
iret
pop
push
cs
pop
sbb
cli
pusha
mov
sbbb
cmp
jg
pop
lcall
fsubs
repz
imul
cmc
cld
xchg
add
sub
sub
cmp
cmp
pop
pop
mov
movl
adc
daa
stos
jmp
out
in
lods
mov
popl
inc
inc
and
imul
or
pop
ljmp
sub
adc
inc
daa
fistps
incb
lods
cmp
mov
repnz
lahf
jmp
movsb
insl
add
cmp
sarb
shlb
jg
addr16
sbb
pop
dec
arpl
jle
fildll
call
stc
mov
jns
adcb
dec
test
in
cltd
pop
mov
and
jne
cltd
add
or
pop
inc
xchg
fmull
push
mov
sub
stos
inc
dec
arpl
mov
insb
scas
pop
sub
sub
xor
stc
out
idivb
imull
clc
cmp
adcb
mov
inc
scas
cmpsb
mov
adc
or
imul
rorb
pushf
ds
shll
cmpsl
mov
mov
cmp
lods
aam
fisubs
cli
scas
mov
stos
cwtl
or
jb
fimull
stos
xlat
inc
mov
sti
mov
mov
aaa
inc
xchg
push
lods
pushf
sti
push
xchg
shrb
rorl
scas
and
out
mov
cmc
and
cmp
pop
jp
rcrl
inc
adc
fidivrl
inc
fwait
int3
jp
aaa
adc
xchg
insb
adc
adc
sbb
mov
fimull
in
mov
pop
outsl
xor
ret
mov
shlb
inc
int3
push
test
dec
push
aad
stos
imul
dec
int
jnp
popf
push
lea
mov
fdivs
into
jg
push
adc
adc
pop
enter
mov
sub
adc
repz
sbb
pop
nop
sub
fcompl
pop
and
push
arpl
loope
push
xchg
jle
insl
ss
inc
ss
enter
gs
mov
fs
stos
lds
les
outsb
in
or
push
notl
push
push
fiadds
mov
icebp
adc
xchg
inc
add
mov
out
test
cmp
and
push
push
aad
xlat
mov
or
mov
pop
pop
mov
mov
in
fdivrs
loop
xchg
out
and
daa
pop
xchg
mov
sub
fisubs
aad
mov
push
jp
out
cld
sbb
es
popf
rcrl
inc
add
xchg
add
insl
imul
les
dec
out
ror
pop
mov
lahf
call
sub
push
sbb
push
shlb
inc
fdivs
mov
jecxz
push
or
es
or
loope
int
dec
sti
cmc
loop
lods
rcr
sub
add
or
hlt
sti
adc
clc
mov
pop
push
sub
inc
std
mov
daa
jecxz
xchg
loopne
push
pop
dec
mov
sbb
xchg
dec
and
setno
add
and
inc
dec
stos
jns
xor
mov
jb
int3
mulb
pusha
sti
jnp
jmp
cmp
idiv
and
stc
mov
and
lahf
cmpsb
sbb
mov
notb
lods
sbb
jmp
loopne
mov
fwait
inc
push
adc
arpl
push
jo
ror
mov
xchg
and
add
test
ss
mov
out
pop
sub
sub
mov
xor
jge
lret
dec
jnp
pop
aas
shl
iret
add
sub
aaa
mov
push
xor
xchg
jo
clc
test
in
jp
adc
adc
gs
dec
mov
nop
cmp
imul
xchg
subl
es
jmp
sahf
mov
cli
mov
aam
in
pop
sub
aas
xor
add
repnz
insb
jo
scas
pop
push
lea
mov
scas
mov
je
and
repnz
sahf
mov
sarb
xor
xor
iret
mov
movl
and
jne
out
into
or
add
mov
out
js
jp
add
ss
je
mov
in
rorb
add
mov
in
mov
and
pushf
ret
inc
push
pop
pop
mov
into
fildl
sahf
fnstsw
ja
lret
xlat
mov
sbb
push
out
xchg
loope
fcoml
xchg
xchg
inc
cmpsl
sahf
lea
cli
lea
xchg
mov
lock
inc
bound
add
mov
int3
ljmp
sbb
or
fidivrl
out
or
cs
sti
rcr
xor
mov
and
dec
pop
icebp
lock
xorb
rcrl
add
pop
and
pusha
pop
sub
sub
out
lds
dec
xchg
stc
adc
dec
sub
and
fstpt
cs
mov
icebp
cwtl
cmc
ljmp
in
aam
push
data16
cmp
xor
xor
test
sbb
jg
push
jnp
push
fsubs
cs
sbb
clc
cli
in
xchg
pop
mov
fwait
lods
add
in
mov
lret
cli
xchg
add
and
js
push
das
pop
mov
repnz
pop
mov
movsl
mov
pushf
mov
pop
clc
cmp
loopne
loop
roll
in
mov
add
pop
bnd
xchg
cmp
sub
jne
mov
push
inc
lret
pop
in
cmpsb
divb
fwait
jb
mov
adc
pop
pop
iret
mov
fadds
mov
lods
mov
loope
push
cwtl
div
jle
xor
mov
pop
sub
push
out
icebp
loop
xor
push
push
inc
xor
ss
sarb
cmp
loopne
fisttpll
test
jno
in
repz
out
test
mov
adc
sbb
add
jns
daa
outsl
jae
in
sarl
repnz
xor
push
mov
mov
shll
in
push
xchg
int
push
xchg
test
rol
les
push
lcall
negl
mov
pop
leave
test
outsb
movsb
cli
outsb
ret
or
mov
dec
test
pop
and
mov
push
jp
xor
mov
mov
les
ds
mov
imul
into
xchg
out
testb
pop
cmp
cmp
fmul
inc
in
outsl
and
and
iret
sbb
sahf
sub
aad
jns
adc
lock
fwait
lods
or
mov
sub
sub
inc
mov
mov
adc
jp
testl
cld
lods
nop
mov
lcall
jmp
adc
fimuls
outsb
xchg
rcl
addr16
push
pop
dec
dec
xlat
mov
lods
add
subb
inc
xor
cld
bound
aam
mov
enter
mov
fnstenv
je
and
mov
sarl
xchg
adc
leave
jne
xor
xor
data16
push
mov
inc
or
dec
sub
lock
aas
imul
sahf
out
add
sub
push
je
jo
pop
cld
test
arpl
lcall
xchg
leave
out
mov
jecxz
pop
or
imul
std
daa
push
outsl
pop
mov
mov
int
pop
fldl
sbb
lea
neg
test
or
xor
mov
cmpsb
lods
jno
out
fistps
rorb
ljmp
scas
imul
sub
lret
mov
bound
lea
xor
cmp
adc
cli
cmp
out
adc
and
mov
stos
mov
sub
insl
mov
mov
sbb
and
andb
jp
dec
mov
pop
sbb
xchg
mov
sbb
xchg
lret
out
pop
nop
mov
mov
pop
sub
frstor
push
gs
les
shlb
call
pop
clc
pop
or
int
mov
aad
fwait
sarl
pusha
cld
xor
push
repz
sbb
mov
sbb
xchg
xor
jmp
adc
ljmp
fisttpl
xchg
jmp
insl
loopne
int
cwtl
inc
jl
mov
or
shll
or
mov
xchg
scas
add
js
mov
sub
push
shr
ret
and
cld
imul
or
fucom
rorl
sub
sti
inc
sbb
pusha
les
pop
mov
mov
add
cmp
adc
adc
fcoml
push
inc
in
cmp
test
or
aas
jmp
cs
fdivr
xchg
clc
jnp
stos
aad
cmp
add
inc
adc
push
pinsrw
ffree
into
xlat
pop
add
sbb
inc
pop
push
xchg
fcomip
stc
mov
jo
ds
mov
adc
dec
xlat
push
xchg
jle
mov
push
sbb
push
inc
test
push
and
punpckhdq
bound
hlt
loope
aas
nop
lcall
jb
roll
push
mov
pop
sbb
loope
lcall
fs
into
cmp
mov
cmp
xchg
lods
icebp
sub
mov
fwait
sbb
add
shrl
or
xor
std
iret
push
xchg
leave
shl
and
les
jne
jnp
mov
pop
rolb
std
imul
js
pop
lea
adc
lcall
sbb
bound
out
sub
jns
xchg
test
das
nop
push
add
addr16
push
les
out
enter
cmpsb
add
inc
mov
jecxz
mov
popl
mov
mov
rcrb
fistpl
jne
or
xor
inc
loop
xor
insl
sub
fsubs
xchg
es
int
dec
and
iret
add
idivl
daa
in
aad
pop
aam
xchg
out
sub
push
jo
loopne
sub
leave
xlat
loope,pt
inc
add
push
ja
mov
and
xchg
sub
ffreep
dec
aad
dec
add
stc
push
leave
xchg
enter
adc
dec
std
ret
xor
repz
arpl
inc
and
pushf
mov
into
jle
adc
jne
jg
cmovs
cmc
repz
dec
cmpb
fsts
mov
ret
cmp
pusha
mov
pop
daa
test
shlb
or
dec
ja
cwtl
out
xor
sub
inc
and
shl
cmp
inc
popa
jns
roll
dec
pop
mov
pop
dec
adc
div
sub
outsl
inc
fucomi
stos
bnd
out
nop
cmpb
xor
adc
xlat
shrb
lods
test
call
or
jg
loopne
mov
insb
jge
pop
cs
movsl
outsl
pushf
xchg
or
and
mulb
push
js
gs
stos
mov
jg
mov
ss
mov
jno
jmp
lock
or
fadds
into
push
jecxz
les
mov
pop
or
leave
and
ret
mov
mov
in
cld
pop
loop
cmp
cmc
mov
jne
data16
cld
jp
loop
lahf
jge
and
inc
inc
mov
or
in
cmp
lret
out
jg
cltd
add
fstpl
jg
fnstcw
mov
push
jmp
push
sub
movsl
popf
lret
add
xorb
mov
pop
mov
push
mov
sarb
mov
xchg
movsb
push
rolb
fistl
sbb
gs
adc
push
clc
push
fwait
xchg
sbb
push
push
xor
cs
adcb
lret
cmc
les
rorl
mov
lret
push
sub
and
push
out
xchg
and
xor
inc
out
pop
fstp
imul
outsb
xlat
aam
lds
fcoml
push
xchg
test
xchg
stos
jb
sub
cmpsb
neg
pop
rorb
pop
xlat
mov
xor
xchg
jo
jb
push
mov
xchg
pop
mov
sub
rcrb
aas
mov
xchg
nop
out
test
adc
jbe
out
ja
clc
xor
mov
sbb
mov
adc
test
and
lea
pop
test
or
inc
xor
fs
int
cmp
icebp
dec
data16
cmp
test
push
sbbl
mov
mov
jns
jp
rolb
cltd
mov
stos
into
push
data16
adc
mov
adc
test
inc
add
inc
or
int
xchg
mov
xor
xor
inc
mov
das
js
stos
jbe
push
das
aam
jnp
xchg
pop
arpl
cltd
outsb
or
call
xor
and
out
or
mov
fldcw
pop
fstpl
loopne
aas
jecxz
fs
push
pop
loopne
bndldx
push
addr16
pop
shlb
jl
pop
adc
and
sbbb
mov
sub
or
pop
imul
sbb
pop
cmp
test
test
cltd
or
push
icebp
lahf
xor
jb
mov
ja
pop
test
lods
shl
push
sbb
cmp
mov
inc
cltd
enter
movsb
and
xor
push
mov
adc
add
cmc
dec
daa
loopne
scas
roll
adc
inc
pop
jle
sub
dec
mov
stos
jp
aad
les
lock
iret
repnz
adc
sahf
shll
ljmp
xlat
roll
or
scas
lods
stos
and
test
sub
xchg
jb
ret
in
orl
iret
inc
pusha
jno
add
add
mov
add
lret
repnz
cld
jno
mov
repnz
pop
call
pop
xor
dec
jmp
mov
push
test
int
sub
mov
gs
dec
dec
pop
sbb
xor
or
int3
cli
in
jns
shrl
xor
xor
rep
push
cmp
sub
ljmp
in
add
lds
cltd
add
cltd
data16
mov
int
inc
adc
jmp
fisubl
cltd
xor
xor
jge
dec
lret
test
outsb
ss
movl
dec
adc
popf
imul
dec
mov
mov
jp
lds
scas
in
xchg
imulb
popa
mov
cli
pusha
dec
cmp
lods
jmp
mov
shr
adc
outsl
pop
push
test
std
jmp
lcall
dec
int3
mov
data16
in
out
jns
out
repz
cmc
sub
mov
cmp
adc
dec
dec
adc
loop
dec
sti
imul
mov
hlt
mov
push
add
and
dec
pusha
pop
mov
imul
cltd
fisubl
cmp
cmp
arpl
jb
sub
lret
outsb
lcall
and
dec
push
lret
movl
dec
mov
movsl
sub
rorl
fiaddl
xor
aad
mov
or
sbb
push
cmp
insl
sarl
xlat
mov
xchg
sub
push
inc
jecxz
or
push
cmp
test
icebp
in
divb
dec
mov
inc
add
xor
dec
mov
sub
xchg
fnstsw
xchg
dec
mov
sbb
xor
notb
out
pop
dec
ljmp
pop
mov
xchg
xor
add
sahf
hlt
fadds
xchg
or
jmp
xchg
icebp
stc
inc
jg
xchg
sbb
sub
add
lock
shll
mov
mov
xorb
dec
popa
cltd
xchg
pop
adc
gs
fwait
push
xor
xor
mov
or
push
jle
rcll
push
and
push
dec
jecxz
jns
xor
cld
movsb
aam
scas
push
and
mov
or
mov
repnz
pop
cmpb
das
or
stos
loopne
dec
into
outsb
fwait
sbb
repz
xchg
cmp
imul
or
push
sbbl
fcompl
hlt
inc
insl
int
pop
cmp
and
ds
aam
adc
lea
stc
mov
mov
sub
aam
cmp
aaa
icebp
xchg
rcrl
mov
push
adc
push
hlt
mov
dec
notl
or
dec
mov
jb
aaa
mov
sbb
sbb
enter
ss
lret
pop
jge
sub
clc
cmc
imul
mov
js
sbb
xchg
mov
fwait
mov
fidivrl
pop
mov
shrb
mov
add
popf
ss
pop
shll
jnp
sbbl
bnd
std
je
dec
pop
dec
and
push
push
shll
nop
dec
mov
mov
mov
outsl
add
dec
or
int
cs
dec
cld
push
add
push
out
mov
jmp
js
add
insl
arpl
mov
cld
mov
xor
dec
push
sbb
xlat
scas
cmp
out
or
push
inc
lea
jbe
sbb
mov
les
pusha
xchg
fs
repz
inc
insb
mov
mov
sub
fidivrl
sbb
inc
mov
out
pop
cmpsl
scas
pop
or
mov
fadds
orb
in
pop
mov
in
jo
es
idivb
in
mov
pop
aas
inc
je
aam
rcll
shlb
negl
mov
sub
or
xlat
sub
cwtl
imul
adc
xchg
push
sti
jno
add
jnp
adc
sbb
or
rcrl
xor
jo
sub
rclb
ficomps
push
mov
lret
fidivrs
add
and
dec
loope
push
outsl
cmc
xlat
or
lret
fimuls
mov
mov
inc
push
outsl
mov
push
mov
inc
clc
and
adc
out
sub
test
or
pop
lea
lret
outsb
mov
pop
bound
mov
and
in
rcrl
sub
lds
dec
ljmp
cs
ds
add
je
aad
xchg
push
mov
mov
jecxz
sbb
jl
xor
shrl
jmp
imul
mov
sub
mov
out
sbbl
or
xor
mov
rcll
push
cmp
test
xchg
cmp
fmul
clc
add
into
ljmp
movsl
iret
mov
arpl
movsb
mov
sahf
xchg
dec
and
mov
out
jmp
mov
mov
jmp
je
sub
sahf
lods
push
jmp
mov
sub
lea
pop
ret
mov
jmp
cmp
test
cmp
sbb
ficoms
daa
adc
mov
ret
test
dec
out
jb
pop
ss
lods
adc
inc
adc
outsb
fs
adc
mov
andb
jge
rclb
xor
ret
mov
dec
mov
test
mov
shrl
xor
pop
push
mov
pop
daa
ret
in
or
inc
popa
and
xchg
popa
push
lods
adc
pushl
fnstenv
jg
lods
daa
sbb
lcall
sbb
aas
inc
into
shl
std
in
fsubrl
out
aas
loop
lcall
les
pop
xchg
jl
inc
roll
jge
push
adc
sub
inc
in
sbb
cmp
test
enter
shll
call
mov
lcall
movsl
xchg
imul
sti
test
sub
sub
adc
xor
and
sbb
cmp
js
insl
in
and
add
add
adcl
mov
dec
icebp
mov
sbb
and
adc
out
es
mov
push
stc
inc
mov
mov
mov
push
xor
mov
pop
test
sub
aaa
xchg
mov
stc
movsl
dec
scas
cmc
movsl
ja
ja
insl
cmpsl
rcl
test
call
lahf
cmp
xchg
out
pop
pop
repnz
jecxz
xchg
jg
cltd
cmp
jle
sbb
dec
pop
out
sbb
or
fisubs
sahf
push
and
xor
cmp
addr16
or
pusha
mov
mov
rolb
or
dec
ljmp
fists
lcall
dec
xchg
fiaddl
xchg
and
mov
sub
mov
lock
jbe
out
loopne
push
xchg
cmp
fidivrl
adc
mov
das
test
sbb
xor
or
dec
lret
xchg
push
clc
mov
lods
lahf
and
nop
xor
cmpsl
sahf
mov
imulb
cmpsb
mov
mov
jno
adc
xchg
mov
push
or
dec
aad
stc
mov
xor
les
add
inc
cmpsl
xor
xchg
adc
xlat
add
inc
outsb
add
mov
fmul
and
adc
inc
sub
dec
mov
divb
push
sbb
sbb
arpl
inc
dec
add
lods
into
cli
mov
lods
sbb
mov
mov
mov
mov
pop
ljmp
push
test
inc
mov
aas
int3
int3
icebp
push
pop
je
add
mov
call
sbb
leave
scas
mov
cltd
and
mov
notl
adc
nop
daa
test
cmp
sbb
cmp
rol
loopne
adc
stos
dec
inc
cld
jbe
push
sbb
adc
inc
xchg
push
sub
out
pop
into
mull
repnz
xchg
fcoms
push
dec
je
mov
mov
xchg
scas
mov
imul
out
ret
aas
scas
or
dec
jae
mov
xor
mov
shll
push
xchg
loope
and
mov
mov
fcos
push
and
outsb
push
dec
imul
fldt
fdivrp
mov
pop
mov
enter
dec
pop
pusha
mulb
xor
popa
sbb
fnstsw
cmp
pop
and
push
cmc
stc
jno
cmc
loop
sbb
test
adc
inc
lock
clc
enter
insl
out
jne
inc
in
aas
pop
xchg
add
loopne
adc
lret
out
xchg
shl
call
mov
dec
arpl
fisubrs
jbe
xchg
in
iret
lds
mov
test
xor
xor
mov
mov
jmp
in
and
add
cmc
pop
mov
pop
pop
in
test
pop
rclb
xchg
enter
int3
mov
cld
xor
jne
out
js
out
ljmp
cmp
fisttpl
in
ret
lods
lods
inc
pop
call
push
push
loop
jae
inc
clc
or
add
movsl
adc
ljmp
sti
add
test
jno
mov
test
sahf
push
sub
lods
pcmpgtd
xchg
push
stos
sub
scas
movsl
test
mov
push
mov
repz
nop
lahf
ds
and
int3
insl
sub
shll
push
cmp
pop
jle
mov
mov
push
pop
cmpb
pop
pop
pop
xlat
mov
push
fmul
ret
and
xchg
adc
inc
insb
pop
push
push
daa
das
je
mov
jo
mov
adc
fsin
sbb
jmp
mov
jge
out
push
int3
test
stos
scas
popa
adc
in
sbb
xor
orl
iret
cld
xchg
and
arpl
jge
push
and
lods
jge
fmulp
arpl
sti
mov
rcll
xor
jne
inc
mov
pop
outsb
lret
cmp
xchg
and
cmpsl
daa
lds
jle
in
cmp
ds
bswap
cmpsb
jmp
xchg
pop
or
jno
xor
adc
mov
xor
push
lret
fiadds
cli
pop
pop
leave
test
mov
outsb
shrl
in
shll
sub
sub
loop
add
cmpsb
ret
cmp
test
arpl
lcall
pop
fwait
push
hlt
push
test
lret
push
addr16
clc
and
add
insb
int3
je
loope
xchg
mov
jb
fists
pop
mov
imul
into
dec
stc
cltd
loopne
and
push
and
pop
fwait
cmp
mov
ss
push
sub
cltd
ss
xor
lods
repnz
jnp
les
sub
stos
insl
jl
cld
inc
lahf
mov
rcrl
fdivrl
mov
xor
mov
pop
inc
sarb
adc
repz
jbe
cs
unpckhps
mov
call
sbb
xor
inc
sbb
into
aas
fidivs
daa
xchg
mov
clc
cmpb
sub
loop
inc
in
dec
movl
test
out
dec
jae
les
push
hlt
pop
loopne
jb
aas
cmpsl
jmp
push
mov
push
jb
pop
rcrl
imul
sub
xlat
cmp
mov
iret
outsb
xor
sbb
jb
jecxz
pop
xor
sbb
xchg
lods
aaa
in
ficompl
ljmp
add
leave
dec
inc
mov
mov
sub
pop
xorl
nop
mov
or
negl
test
test
sub
adc
popa
inc
je
in
mov
push
adc
ret
mov
pop
orl
dec
xor
adc
les
test
fiaddl
mov
xor
lret
sub
inc
inc
jns
shll
add
sbb
or
mov
int3
rol
dec
sarl
lea
iret
call
mov
push
push
add
add
es
sub
jecxz
jno
pop
adc
and
add
inc
mov
jns
xchg
push
mov
popf
mov
imul
mov
ret
in
mov
push
dec
add
mov
inc
movsl
sbb
dec
mov
mov
ret
cmp
test
sub
adc
scas
jne
aas
sbb
dec
inc
pop
add
xchg
jnp
sub
jno
or
pop
addr16
cmp
or
test
mov
push
jo
mov
jae
inc
xchg
jb
lahf
push
in
es
lods
mov
sub
pop
cmp
data16
and
adc
fwait
jle
scas
sub
mov
push
and
je
jge
cmpsb
pop
outsb
scas
out
adc
aaa
mov
mov
out
mov
test
mov
adc
sbbb
add
jg
cmp
lahf
jle
out
add
and
pop
push
jmp
pop
cmp
and
cltd
push
xchg
xorl
nop
movsl
jmp
daa
cmp
out
pop
repnz
or
nop
mov
mov
testl
stc
cmp
xchg
xchg
cli
mov
push
pop
xchg
fildll
xchg
lods
sbb
push
mov
xor
jp
or
cmp
add
lret
push
lahf
jb
cmp
push
pop
loop
in
xchg
lds
cmc
leave
xchg
ja
aas
xchg
jae
in
and
lret
fdivs
and
cmc
add
dec
sbb
adc
xor
sub
into
in
sbb
inc
cmpsl
cmp
push
push
arpl
xchg
sbb
data16
bound
mov
jo
cs
jnp
imull
mov
xchg
ja
sub
jmp
int
sarl
jnp
in
push
mov
dec
ljmp
and
out
xchg
xor
push
mov
js
adc
mov
daa
fwait
xchg
stos
dec
js
fisubs
mov
cmpsb
dec
ja
es
hlt
aam
mov
sti
jl
inc
dec
out
adc
pusha
fsubrs
test
neg
insl
pushf
push
pop
sbb
stos
jle
jg
popf
aad
loop
push
mov
push
imul
fcoms
push
test
das
insb
mov
ret
in
xchg
jp
daa
aad
mov
sbb
push
ljmp
adc
and
rcrb
cmp
int
xor
mov
cltd
hlt
mov
popf
notb
mov
in
cld
ljmp
or
loope
xor
xchg
dec
out
adc
sbb
cmp
fcomps
inc
adc
xchg
push
cs
cmp
jne
pop
popa
mov
loop
dec
jbe
mov
in
gs
les
add
jl
pop
push
adc
addb
jmp
xor
ljmp
pop
ret
sbb
jno
xor
iret
xor
andl
out
aam
and
jno
xor
pop
dec
mulb
add
frstor
shrb
test
pop
pop
mov
and
xorl
fistl
call
mov
int3
inc
push
loop
rcll
adc
push
repnz
pop
adc
fwait
cmp
fs
xor
mov
cli
in
pop
add
mov
clc
out
cwtl
pop
sub
pop
adc
mov
test
out
mov
fdivrl
out
or
ficompl
fs
lds
sbb
daa
inc
sbb
das
fdivs
mov
enter
xchg
or
mov
pop
mov
sub
xchg
and
loop
into
xchg
push
or
pop
out
sbb
cs
mov
lea
lds
stos
xor
ror
jge
sar
fsubrl
xchg
adc
ds
and
neg
sub
stos
sbb
mov
sbb
mov
rol
aaa
xchg
ret
push
ja
mov
add
fstl
je
ds
push
pop
mov
sbb
xchg
out
cli
repz
scas
add
push
fistl
xchg
daa
adc
mov
mov
or
fisttpl
and
sbb
push
mov
push
adcb
leave
xchg
sub
pop
call
mov
add
dec
and
aad
or
das
add
sarl
mov
cmp
insb
xlat
popf
dec
in
mov
lock
pop
mov
lods
pop
sbb
test
pop
mov
test
push
int
out
aaa
test
and
movb
jae
xchg
or
sub
dec
dec
inc
xchg
mov
cmp
adc
shll
fcoml
xchg
lahf
fcompl
lods
push
mov
outsl
scas
mov
imul
pop
cmpsb
scas
in
cli
pusha
jbe
call
and
jge
mov
pop
stos
push
dec
xchg
xchg
addl
rcrb
std
and
pop
iret
adc
pop
jae
enter
shr
bound
cmp
fcmovu
xor
fnsave
cwtl
bound
aad
cmc
sub
xchg
jl
movsb
push
lds
inc
pop
loopne
popa
mov
sahf
mov
outsb
icebp
fcoml
push
jno
mov
adc
lcall
xchg
loopne
or
mov
sbb
ljmp
repz
pushf
sbb
rcll
dec
jg
push
jnp
mov
nop
xor
add
aas
add
aas
int3
iret
sti
mov
and
cmp
sahf
push
xchg
int3
test
test
jne
shll
subl
pop
mov
pushl
adc
push
mov
js
push
and
adc
movl
shl
xlat
rolb
and
xor
cmpsb
sbb
xchg
dec
jae
inc
xchg
mov
roll
pop
cmpsl
or
push
decl
lahf
add
sahf
jp
xor
jg
jns
jp
mov
dec
push
xor
sub
cmc
out
pop
xor
aas
sbb
jnp
sbbb
les
mov
lcall
out
pop
mov
inc
sub
ss
xchg
pop
pop
mov
jmp
dec
adc
pop
pusha
mov
es
pusha
pushf
cltd
push
mov
dec
lcall
xchg
out
repnz
xchg
pop
hlt
adc
push
fs
inc
pop
jo
outsb
shr
jnp
decb
call
mov
mull
mov
mov
mov
movsb
mov
adcb
jg
dec
bound
xor
cmp
mov
jnp
sbb
xorl
aas
or
cld
pop
sti
popa
jne
scas
pop
dec
add
cmp
mov
stos
cmp
sub
cld
push
gs
xor
in
into
in
out
push
popw
jg
sarb
jg
or
gs
jae
shll
and
je
mov
add
test
mov
subl
jae
xchg
dec
into
ud0
pusha
push
ds
std
dec
sbb
std
xchg
mov
lret
pop
stos
xor
ret
out
lret
xchg
pop
xor
jle
push
mov
outsl
pop
cltd
xchg
and
jmp
sbb
push
push
sub
es
bound
xchg
setbe
clc
mov
pop
cmp
nop
cmp
rcrl
dec
stc
and
bt
pop
cmp
jp
add
mov
jecxz
scas
inc
mov
add
inc
push
dec
mov
ja
pop
jmp
xchg
jl
test
clc
adc
cwtl
lods
adc
imul
stc
push
nop
fwait
lret
pop
outsl
inc
in
lods
notl
sbb
push
dec
lret
xlat
push
scas
and
push
xor
imul
inc
ja
sbb
lea
lods
cmp
mul
mov
pop
in
lret
jno
or
adc
mov
insb
dec
in
jl
in
mov
xor
add
in
lods
xchg
enter
xchg
dec
lods
dec
cmp
and
sub
int
rclb
lea
xchg
xor
divb
sbb
in
jns
mov
pop
mov
or
ret
loop
repz
in
into
sub
jne
push
jmp
xchg
movsl
stos
cmp
fistpll
dec
into
sbb
shrl
gs
sbb
xchg
test
imul
adc
inc
mov
loopne
mov
add
jo
cmp
dec
arpl
lret
lea
std
out
inc
loope
fucomp
sub
ljmp
test
stc
adc
push
mov
push
pop
xor
bound
and
scas
sub
ja
in
adc
or
stos
inc
test
fcompl
and
testb
in
mov
sub
inc
xor
test
adc
sbb
cmp
and
xor
xchg
xor
mov
sbbl
inc
sti
scas
mov
or
adc
test
adc
popa
cmpsl
cmp
cld
out
decb
repz
mov
sbb
or
push
in
rcr
inc
sbb
out
mov
popf
pop
sub
stos
movsl
xchg
cmpsb
les
mov
sbb
and
or
iret
xor
jge
push
adc
or
mov
push
mov
push
cs
mov
lods
mov
xchg
jbe
sbb
in
push
or
loopne
movsb
std
or
scas
shll
shrb
pop
hlt
clc
inc
adc
into
adcl
pop
or
mov
xchg
mov
rcll
fcmovne
xor
mov
cmp
cmp
push
ss
jne
aaa
cmp
decl
imul
in
add
jl
les
and
loop
rcrb
outsl
dec
or
sub
ljmp
insl
jp
mov
mov
mov
test
ret
xchg
cld
and
inc
rorb
jmp
imul
adc
dec
mov
loop
clc
cli
repz
push
nop
mov
fs
es
imul
popa
add
jp
popa
rcrb
ss
xchg
iret
insb
xchg
mov
in
mov
add
ds
dec
rorb
scas
mov
aas
stos
aad
push
fcomp
rorl
push
jmp
dec
push
lods
bound
mov
scas
int3
adc
test
adc
cs
hlt
loope
mov
and
xor
lds
sbb
das
sbb
pop
add
mov
mov
lods
xchg
fimull
dec
inc
dec
std
mov
cmp
orb
xor
sbb
and
fisttpl
xchg
imul
push
js
xchg
or
sti
aas
add
rcrb
shlb
insb
mov
sub
and
and
dec
xchg
cmp
clc
mov
xchg
inc
sub
mov
cwtl
and
rolb
xchg
mov
or
out
fstpl
mov
xchg
lock
movsb
lret
insl
lret
jo
test
out
fbld
mov
push
mov
mov
addb
push
imul
mov
push
push
in
lahf
and
iret
jne
shrb
cld
ret
icebp
fisttpl
mov
lods
sar
inc
sbb
andb
enter
ret
dec
sbb
in
mov
push
pop
push
js
mov
enter
bnd
stc
xchg
sbb
decl
jae
or
and
xor
xlat
sbb
divl
imul
xchg
push
popf
push
inc
mov
mov
xorl
sbb
imul
jbe
test
mull
lock
jns
es
fwait
adc
das
movsb
xchg
call
xor
stos
cmp
jne
daa
push
lahf
dec
sbb
ret
loop
insb
rorl
cmc
push
sti
push
jmp
adc
imul
dec
arpl
xor
imul
add
mov
movsl
or
jnp
jle
cwtl
shl
mov
es
mov
out
mov
inc
sbb
movsb
add
cmc
lds
lea
add
mov
and
cmp
mov
pop
sbb
push
mov
scas
jnp
addr16
push
das
mov
in
cli
decl
mov
add
pusha
sub
inc
sahf
imul
rcl
rol
cmp
lock
aaa
mov
xchg
adc
int
in
imul
jmp
loope
xlat
adc
adc
mov
jbe
outsl
fdiv
fwait
jge
repnz
and
sarl
mov
jp
pop
sbb
pop
jo
mov
arpl
jl
imul
popf
mov
cmp
push
fsubrs
mov
cmc
les
das
lods
popa
fistpl
ret
adc
hlt
lcall
in
aad
lea
adc
add
mov
stc
and
push
ja
outsl
fstpt
shll
pop
or
xor
mov
or
jmp
fnsave
andb
scas
fisttps
xchg
add
dec
inc
icebp
xchg
xchg
cmp
push
jns
iret
pop
pop
movsl
and
xlat
imul
pop
and
testb
stos
jge
add
sub
pusha
or
pop
inc
stos
mov
xchg
add
xor
js
bound
inc
aad
or
sbb
mov
dec
je
inc
or
sub
call
in
das
dec
daa
adc
cld
imul
stos
adc
repz
scas
sbb
pop
xrelease
popf
je
adc
push
push
enter
repz
mov
adc
push
jae
inc
mov
stos
jne
je
mov
jle
stos
inc
push
gs
lret
xchg
cmp
repnz
negl
cmp
cwtl
fldenv
out
adc
or
int3
rclb
mov
jp
nop
mov
cmp
clc
rclb
out
loop
and
xchg
pop
adc
cmp
xor
loope
mov
movsb
mov
fstpl
bound
pop
mov
cld
out
cltd
sbb
aas
inc
inc
cmp
dec
xor
test
rolb
lea
les
cmp
sub
in
jnp
movsb
int
sarb
and
mov
in
iret
xor
cld
imul
setnp
test
orl
in
add
sbb
shlb
mov
jp
sarb
fldl
imul
aam
adc
xlat
jmp
int
subl
push
sbb
in
iret
cmp
adc
mov
les
lods
lahf
jge
push
fcomps
mov
addr16
sbb
sub
xchg
or
sub
dec
and
adc
sbb
add
jae
jne
int3
xchg
in
mov
mov
stos
fwait
push
xchg
add
add
add
ret
rcrb
aam
imul
push
jnp
mov
loopne
xlat
jo
pusha
lahf
neg
jno
dec
out
push
mov
loope
and
and
bound
cmpsl
push
xchg
push
ret
add
mov
dec
scas
mov
jns
xor
mov
or
in
xchg
cmp
aaa
ljmp
jmp
aam
mov
fsub
aad
pop
icebp
gs
imul
mov
xchg
out
mov
in
jmp
or
xor
test
push
sbbb
ss
dec
mov
add
add
pop
ds
je
int3
pop
push
and
fldcw
pop
inc
push
fists
mov
hlt
mov
cmp
jge
xchg
and
cwtl
dec
sub
inc
addb
cmp
pop
xchg
in
sub
xchg
push
out
pop
push
scas
popa
lods
sti
jno
inc
dec
inc
shlb
xor
int
outsb
xor
loop
mov
lock
and
iret
into
lahf
fstl
mull
pop
sti
add
jo
and
dec
ja
pop
xor
loop
addr16
jp
fs
mov
sbbb
aaa
stos
xchg
dec
jle
loope
mov
pop
cmp
jp
in
xor
mov
inc
addr16
es
addr16
push
test
adc
xor
xor
pushf
xlat
pop
mov
dec
sub
adc
and
lahf
aaa
fistl
int
and
test
inc
mov
loopne
rcrb
pop
jg
leave
out
mov
cli
sbb
and
push
imul
add
aam
jmp
fisubrl
das
notl
xor
lcall
jp
xor
add
xchg
jnp
mov
add
sub
xchg
fs
movsb
mov
shl
add
adc
imul
leave
mov
rcl
call
xlat
mov
mov
or
inc
jbe
out
test
cli
jg
gs
shll
lss
std
add
lock
push
sub
test
insl
cmp
push
jnp
xchg
in
inc
aam
and
and
fisubl
sbb
pop
fisttpll
mov
addr16
cs
xchg
mov
dec
pusha
rcl
sub
sbbl
insb
sbb
mov
jmp
push
push
les
mov
outsb
das
push
fldl
xchg
xlat
add
cld
cli
push
test
add
in
and
xlat
inc
pop
pop
xor
xchg
xor
ficoms
int3
mov
cmc
iret
push
push
cltd
and
out
imul
inc
cltd
ret
inc
js
sbb
test
adc
jp
fiadds
xor
repz
insl
movsl
in
out
add
ds
mov
shl
sbb
jbe
dec
mov
sti
push
orb
cld
or
pop
pop
xchg
pusha
jge
ljmp
jbe
inc
xchg
and
jp
lock
popf
gs
in
pusha
movsl
or
push
adc
sbb
outsl
mov
test
clc
mov
mov
add
or
push
pop
mov
xchg
mov
fbld
xor
lds
mov
push
push
ds
pusha
mov
mov
es
or
or
jecxz
jno
mov
cmp
arpl
push
mov
imul
xchg
cltd
push
sbb
push
movsl
mov
lret
dec
or
test
cmpl
xor
xor
pop
pop
mov
and
mov
dec
je
subl
insb
ret
inc
scas
push
das
sub
das
imull
outsl
outsb
add
es
inc
decl
jbe
mov
and
sub
loopw
cmp
jp
or
stos
sbb
mov
mov
xchg
testb
xlat
lret
mov
xchg
inc
cli
cmp
ret
dec
popf
push
mov
cltd
mov
dec
enter
lahf
jno
imul
jbe
push
sub
mov
scas
mov
jns
bound
cmc
scas
adc
sbb
loope
test
inc
pop
insl
mov
and
mov
xchg
adc
fwait
sbb
or
mov
das
push
add
xlat
pusha
adc
cmp
in
xor
add
es
mov
pop
shl
or
ljmp
ficoms
jge
xchg
mov
out
in
sub
jb
ror
mov
jl,pt
inc
dec
jb
in
jo
movsl
pop
cmp
jmp
addr16
mov
outsl
gs
cmpsb
push
push
xor
push
call
dec
cwtl
push
es
sbb
mov
mov
cmp
cmp
add
and
cmp
push
fs
fpatan
in
and
pop
cmp
aad
jo
mov
call
jbe
cmc
lods
xchg
into
mov
inc
mov
xchg
std
mov
pusha
push
dec
add
mov
sahf
push
adc
dec
aas
dec
out
in
mov
enter
mov
addl
out
add
std
movsb
lock
xchg
or
jo
adc
cmp
mov
jo
cmp
add
out
and
jmp
pop
pop
in
mov
inc
aad
testb
clc
push
adc
in
adc
fidivs
dec
sahf
xchg
cmc
ja
test
adc
mov
xchg
insl
sub
pop
out
lret
push
xlat
mov
call
push
cs
bound
sub
sahf
jo
mov
into
adc
mov
test
mov
or
lret
dec
scas
cbtw
dec
mov
inc
xor
pop
pusha
shrb
mov
jne
push
dec
ds
and
stos
mov
xchg
js
cmp
push
add
jle
mov
cmc
testb
out
mov
cmpsl
sub
in
push
mov
push
stos
rcll
cwtl
add
lea
sub
fmuls
push
pmulhw
sub
enter
imul
icebp
mov
mov
ljmp
sahf
adc
or
iret
sarl
or
sbb
lock
adc
mov
fdivl
or
popa
cmpsl
sbb
movsl
jbe
dec
imul
mov
cmpsb
sub
jbe
fcomps
jecxz
je
aas
jg
pusha
popa
js
pop
xorb
leave
hlt
stos
adc
jbe
cld
icebp
js
sub
inc
rsm
mov
push
mov
lret
jecxz
sbb
xor
cmp
fbstp
cltd
loopne
cmp
test
lret
fstps
cltd
or
lret
pop
mov
and
popf
mov
mov
call
cltd
mov
mov
sbb
repnz
scas
scas
jecxz
sub
enter
mov
cmc
sbb
add
adc
mov
push
femms
cmpl
dec
scas
icebp
ljmp
sbb
fsubrs
mov
mov
jae
insl
bound
dec
cmc
cmp
call
pop
jo
pusha
cltd
jmp
andl
cmp
xchg
mov
mov
jb
sub
loopne
test
add
dec
mov
sahf
jns
mov
pop
fisttps
pop
data16
adc
sbb
mov
push
fnstcw
cld
cmpsb
cmpsl
data16
push
jbe
js
mov
out
and
push
or
imul
pop
scas
mov
jge
fildl
inc
cli
int3
pop
lcall
mov
xor
fwait
jno
std
nop
mov
push
mov
lods
xorb
add
jnp
cmpsb
scas
mov
adc
in
xor
ret
loopne
dec
test
clc
sub
fstpl
cmpsb
pop
and
pop
push
add
pushf
ficomps
divb
xchg
add
inc
jno
mov
cltd
xor
das
pop
jl
cmp
cmpsb
push
cmc
imul
mov
dec
out
cmp
cs
pop
outsl
jp
ds
or
dec
sub
shll
rcl
aam
enter
sub
cmp
fmuls
push
xor
xor
clc
mov
out
icebp
clc
mov
mov
aas
ficompl
and
pop
push
sub
pushf
fldcw
icebp
int3
adc
mov
add
fdivrs
sarl
cmpsb
cltd
ds
arpl
stc
call
in
mov
leave
mov
mov
jle
movsl
adc
shrb
sbb
add
jbe
jmp
pop
jne
mov
insb
and
idivl
mov
mov
popa
dec
inc
sahf
push
in
or
sbb
movntps
or
rcl
inc
xchg
jmp
or
or
xor
lret
shrb
fisubs
clc
xor
hlt
push
inc
jecxz
mov
cmp
xchg
aas
int
js
pushf
rorb
test
sti
cld
shlb
dec
pop
rolb
out
lahf
repz
or
mov
dec
add
loope
push
cmc
xchg
leave
cmpsl
push
inc
add
xchg
xchg
pop
add
mov
aad
inc
ljmp
cmp
test
das
sub
es
cld
sub
mov
xchg
inc
int3
stc
adc
lcall
movl
add
adc
adc
cltd
xor
adc
hlt
cli
in
mov
mov
les
loop
cltd
or
cwtl
fst
mov
dec
and
test
sbbb
mov
xchg
push
mov
add
jne
or
sbbl
ficompl
imul
xchg
idiv
pop
xor
shrl
and
pop
xchg
ret
sbb
lods
adc
mov
push
jecxz
jecxz
gs
stos
cli
in
cmc
xlat
stos
push
adc
into
pop
stos
jne
push
fwait
enter
push
jg
int3
into
xor
ss
xchg
icebp
inc
mov
out
xor
jb
add
or
idivb
es
ret
xchg
pop
in
fstpl
or
dec
loopne
push
adc
mov
add
sbb
repz
and
add
aad
inc
jecxz
ss
xor
or
pop
mov
inc
ja
mov
add
scas
xchg
mov
mov
adc
inc
aam
fiadds
ret
xchg
popa
adc
push
insb
insl
js
aad
adc
test
insl
push
in
lods
sarl
cmp
push
push
jo
mov
es
imulb
ret
aad
outsl
pop
mov
hlt
mov
and
jbe
cmp
in
jb
mov
sti
ljmp
pop
mov
test
mov
cltd
push
cmpsb
adc
inc
aas
loopne
or
push
ja
sub
cmp
es
add
pop
mov
je
sbb
test
adc
push
psubsb
pop
dec
push
repz
push
aas
adc
mov
inc
mov
sub
inc
shl
jecxz
subl
addr16
inc
test
gs
cmp
iret
lcall
in
inc
inc
mov
push
cmc
jno
rclb
lcall
data16
xor
xor
nop
stos
leave
mov
into
scas
xchg
das
sub
nop
jae
mov
xchg
pop
shlb
sub
or
lods
mov
jae
inc
dec
lods
pop
in
in
fldcw
jne
ss
sbb
mulb
push
cmp
cwtl
xor
or
mov
test
cltd
test
fdivs
xchg
jl
jmp
dec
xchg
insl
sbb
lds
or
pop
cld
dec
adc
ljmp
cmpsb
imul
xchg
mov
adcl
jp
lea
iret
stos
adcb
lahf
and
and
mov
sbb
cmp
aas
mov
pop
xchg
std
push
cmp
cmc
rorl
adc
pop
ret
cmp
andb
or
cld
or
mov
jb
stos
loopne
testb
test
add
iret
inc
lret
add
test
mov
lock
lods
insb
lods
stos
int
mov
push
pushf
xor
lcall
int
and
or
outsl
pusha
aam
fld
or
popa
test
mov
mov
mov
cmp
inc
test
push
in
mov
jb
mov
outsl
sti
in
dec
mov
sbb
stos
sbb
lods
xchg
sub
dec
dec
pop
lea
pop
imull
xchg
cltd
xlat
push
or
push
pop
sub
enter
lods
das
cltd
scas
jecxz
lods
fcoml
jns
mov
pop
je
or
sti
sub
cmp
and
pop
scas
mov
xchg
mov
js
imul
jno
in
xor
cmpsb
pop
pop
jg
sub
fcmovnu
sbb
adc
sbbl
ja
lea
sbb
fildl
inc
dec
stc
mov
sbb
fcmovne
cli
movsl
dec
cmp
enter
aam
xchg
and
pop
pop
dec
add
xchg
add
xchg
scas
pop
outsb
xchg
mov
bound
jnp
cmp
push
mov
sub
add
xor
push
mov
fdivs
mov
aam
movsb
jge
in
sub
fists
inc
lea
or
adc
jmp
mov
jae
mov
xchg
mov
ja
cltd
jno
lret
in
dec
in
cmp
ss
movb
lret
repnz
rclb
clc
mov
hlt
stos
or
xchg
adc
dec
and
adc
xor
repz
xchg
jb
aaa
inc
adc
outsb
or
push
mov
inc
jle
and
imul
in
push
jns
jne
push
in
daa
jnp
mov
gs
loop
dec
cmc
pop
jns
mov
cmp
rolb
dec
data16
out
sub
fwait
out
mov
jp
jb
xlat
lret
insl
add
cltd
loope
sub
gs
push
das
dec
xor
cs
xchg
inc
mov
arpl
xchg
push
sbb
mov
xchg
sub
clc
jno
sub
push
or
fwait
fs
sub
fdivrl
adc
jnp
popa
sahf
mov
in
int3
sarl
cmp
enter
push
push
aad
pop
push
xor
mov
call
dec
or
outsl
push
lods
enter
cmovne
in
add
mov
xchg
mov
jo
sbbl
les
sbb
mov
push
ret
das
sub
and
adcb
push
push
sbb
jmp
mov
ret
pusha
mov
js
inc
mov
jo
fnstsw
xchg
pop
jge
xor
jp
cwtl
nop
pop
push
pushf
call
lods
in
pop
xchg
outsb
iret
sub
fsubr
bound
jge
mov
fisubs
out
fdivrs
jle
sub
test
xor
enter
lea
dec
data16
push
and
test
xchg
pushf
jns
fldt
jo
aad
movsb
lods
fwait
idivl
in
pop
aas
sub
adc
mov
and
aam
js
and
push
rcll
aam
in
fcos
insb
mov
dec
cmc
push
or
mov
push
test
je
sbb
inc
fbld
mov
nop
adcl
scas
rolb
ss
daa
test
jl
and
into
sub
int3
lods
sbbl
or
out
dec
jne
repz
ljmp
and
sub
mov
inc
inc
lcall
incl
push
add
add
pop
mov
pop
xchg
xorps
jne
std
addb
cmp
mov
xor
aad
test
fmuls
sahf
jg
lret
aam
outsl
pop
dec
ret
bound
in
bound
push
ss
jne
add
push
ret
xor
pop
outsb
lret
adcb
cmpps
sbb
add
mov
jg
popf
test
adc
sub
popa
out
jo
arpl
aas
imul
push
flds
xorl
pop
xchg
jg
push
ss
push
cmc
test
xchg
lods
add
cmp
inc
ret
xor
movsb
sbb
or
mov
in
ds
dec
pop
imul
xorb
mulb
mov
adc
adc
and
jae
or
scas
xor
stos
pop
test
jmp
push
and
jecxz
sub
addl
mov
neg
in
sbb
cmp
lret
out
sub
rcll
push
icebp
add
mov
into
xor
in
push
dec
jle
enter
sub
adc
dec
insl
push
cmpb
and
mov
repz
leave
ret
pop
pop
cltd
push
cli
push
xchg
sub
movsb
mov
testl
fs
ss
in
shlb
cmp
repnz
xlat
pop
push
ss
xchg
mov
sub
dec
ja
repnz
scas
add
arpl
repz
jp
dec
xor
outsb
cmp
fildl
aaa
lods
add
sarb
int3
pop
daa
add
mov
stos
xor
xchg
sub
cmp
cmp
dec
roll
cmp
or
push
xchg
enter
and
rcr
rorb
int3
rolb
bound
jg
scas
sub
add
xchg
cmp
push
data16
ret
daa
arpl
call
sbb
mov
je
clc
pop
popf
sub
pop
xor
test
add
pushf
fisttpl
stc
cmp
mov
sub
jp
pop
std
cmp
jno
inc
xchg
push
je
mov
rol
inc
sub
addr16
push
lods
lret
mov
std
fildl
mov
mov
popa
cmc
jo
andl
cs
inc
lret
std
add
into
in
repz
sub
clc
adc
fcompl
push
mov
das
mov
push
sbb
mov
ljmp
xchg
cmp
movsl
ljmp
ds
jecxz
ds
fadds
out
call
ss
fidivrl
negl
inc
ss
xchg
andl
stc
mov
pop
nop
lret
add
xor
mov
adcb
mov
shr
je
sub
push
ret
scas
subl
sahf
mov
pop
fistps
fs
aad
movb
les
cltd
push
dec
cmpsb
bound
inc
pop
mov
aam
and
scas
cld
outsb
movb
push
sbb
cmpsb
mov
fimuls
sub
or
dec
stos
push
inc
xchg
push
dec
out
out
mov
popf
sub
adc
xchg
jge
lea
scas
lea
mov
push
mov
push
mov
cmpsl
aas
lret
mov
jmp
imul
dec
mov
push
add
jne
cmc
cli
mov
rcr
cltd
sub
lcall
rcr
lods
sub
sbb
pop
enter
push
movsl
movsl
push
mov
mov
and
or
inc
dec
std
cmp
xchg
lods
mov
xchg
sub
push
in
adc
test
push
shll
inc
sbb
or
pushf
mov
dec
rcll
iret
shll
xchg
and
fs
xchg
roll
xorb
dec
daa
mov
pop
jo
jno
inc
repnz
inc
lahf
mov
or
xchg
imul
test
xchg
clc
xchg
ret
sub
ud0
cmp
adc
inc
and
mov
mov
sbb
mov
dec
clc
stc
aam
jmp
in
pop
and
addr16
cltd
xor
pop
dec
insb
fadd
or
std
fcoms
out
xchg
or
add
jecxz
inc
cmpsb
mov
stos
pop
cmp
pop
xchg
sbb
in
shll
fildl
sbb
arpl
jmp
cld
cmp
push
jmp
dec
mov
out
into
xor
and
push
pop
or
cmpsb
add
mov
mull
or
int3
xchg
loope
sbb
icebp
mov
rolb
fdivrs
cli
adc
fs
mov
outsl
ret
clc
addr16
jmp
sub
int
pop
enter
pop
mov
push
push
adc
sbb
lret
xor
cmp
push
cwtl
mov
sub
ljmp
movsb
and
test
jae
stos
and
push
popa
stc
push
inc
jo
popl
dec
stos
lock
add
movsl
push
xchg
dec
pop
xor
mov
pop
insb
aaa
nop
add
xchg
into
or
mov
add
test
pop
sbbb
mov
ret
out
fsubs
movsb
lods
mov
and
cmp
cmp
adc
lds
dec
jno
dec
rorb
xchg
stos
outsb
or
jne
das
lods
xchg
sti
mov
mov
fwait
call
lcall
push
add
rcll
enter
rcrb
push
sbb
jmp
sub
pop
inc
ret
inc
idivb
sub
xchg
pop
into
lods
lock
fsub
into
incb
or
jg
or
adc
jmp
inc
and
or
and
int
into
stos
or
clc
mov
js
cmp
daa
imul
std
xlat
outsl
in
cmpsl
lea
mov
sub
fsubrl
add
sbb
adc
bound
xchg
mov
cmpsb
std
sbb
test
cli
dec
clc
xchg
test
xor
data16
xor
and
arpl
jg
mov
or
jl
cmp
ror
mov
mov
and
loop
jmp
pop
and
inc
lock
push
jnp
shll
cmp
bound
ret
subl
xor
lods
pop
pop
aas
add
cltd
dec
fildl
movsl
stos
es
mov
out
shll
pop
es
js
push
jnp
out
cmpxchg
clc
pop
out
mov
std
cmp
adc
pop
adcl
push
push
mov
sbb
lea
sti
cmp
jmp
jl
inc
cmpsl
gs
arpl
ljmp
mov
lods
ljmp
cmpsb
adc
and
pusha
ficoml
push
js
sbb
mov
je
lods
lahf
in
cld
mov
js
aam
xchg
mov
out
or
xchg
cmp
movsl
movsb
aad
dec
push
mov
mov
jbe
dec
push
add
in
es
shlb
cwtl
lahf
add
push
mov
cmp
dec
adc
mov
inc
imul
shll
push
or
push
mov
scas
jl
cli
push
in
test
sar
sbb
xchg
mov
lock
shll
mov
outsb
out
xchg
xchg
push
sub
arpl
inc
inc
popf
dec
ja
aas
lods
daa
loopne
mov
dec
stc
push
xchg
cmp
test
jns
pusha
inc
loopne
repz
idivb
sbb
sub
repz
sti
icebp
lret
xchg
cli
mov
mov
sbb
int3
xchg
andb
mov
hlt
lret
add
jo
ja
adc
xchg
inc
jp
js
xor
mov
push
cld
std
pushf
mov
fisubrl
mov
aas
dec
or
loope
mov
xchg
lahf
addr16
bound
mov
inc
ret
push
and
test
push
ret
pop
vorps
pop
xchg
push
mov
popa
sub
in
leave
inc
in
adc
or
xchg
nop
jns
push
jae
out
add
mov
outsl
sbb
xchg
int3
mov
mov
jne
adcl
aad
cld
mov
mov
mov
or
imul
rcll
push
jmp
inc
rcll
pushf
push
sbb
jnp
sbb
scas
insl
mov
shlb
testl
xchg
xchg
int
stc
mov
cmp
sahf
push
out
or
mov
in
mov
lret
ja
les
xchg
cmc
enter
push
xchg
pop
imul
mov
daa
cwtl
dec
pop
mov
mov
push
xchg
in
mov
jae
xchg
cmp
mov
adc
loop
ds
movsb
push
jo
hlt
movsb
jmp
jnp
xor
in
movsl
xor
push
sbb
shll
xchg
adc
sbb
fildl
xchg
mov
pop
in
inc
std
sbb
lahf
aaa
rclb
mull
insb
ret
and
push
pop
inc
pop
or
fs
test
mov
fstp
xorb
sub
add
xor
push
les
lods
push
mov
cmpsb
sub
out
iret
and
adc
and
mov
pop
mov
cmovbe
mov
enter
loopne
or
push
mov
in
cmp
mov
call
mov
into
inc
add
jb
or
fbld
sbb
push
lock
rclb
shrl
pop
shlb
or
lea
add
daa
shrb
and
push
pop
rorb
pop
cmp
and
mov
push
lcall
mov
fsts
in
ret
cmc
das
mov
pop
leave
movsb
dec
mov
inc
out
adc
cmp
mov
lods
pop
sub
mov
sbb
fwait
mov
push
sub
clc
cmp
paddusb
sbb
popf
pop
enter
lcall
mov
and
sub
insb
repz
or
push
outsl
push
in
popf
xor
pop
gs
cmp
or
addl
js
test
arpl
or
stc
pop
sub
dec
mov
sbb
jecxz
jmp
xor
insb
inc
mov
ja
sbb
mov
mov
outsl
sbb
pop
pop
mov
movsl
mov
jno
incl
fmul
scas
int
lods
in
sbb
shlb
xor
or
in
clc
jae
mov
ss
ja
mov
sbb
outsb
jg
lods
sub
stos
xchg
push
ror
dec
dec
pop
and
adc
pop
dec
aam
adc
or
popf
mov
and
xchg
mov
loopne
stc
imul
pop
jle
add
cmp
scas
mul
add
imul
test
inc
lods
int
in
or
leave
mov
xchg
xchg
lock
mov
push
jmp
mov
gs
sbb
sti
negl
jp
sti
inc
subb
leave
scas
cli
je
inc
cmp
xor
mov
lods
add
es
inc
inc
xor
mov
dec
stos
cli
out
daa
imul
jnp
jb
jp
adc
loopne
scas
je
dec
and
pop
adc
sbb
mov
cwtl
or
jmp
incb
sub
mov
test
pushf
cld
mov
and
test
movsl
sub
push
mov
add
xor
insl
xchg
mov
mov
cmp
jecxz,pt
pop
dec
sub
xlat
dec
rcrb
out
mov
cmp
movsb
pop
adc
mov
xchg
xor
ret
cmp
out
stc
pop
mov
mov
and
or
mov
imul
lret
pop
std
inc
adc
dec
out
pop
cmp
cld
mov
out
dec
cmp
hlt
xor
and
das
test
fwait
inc
lcall
ret
nop
pop
and
sbb
sub
lock
push
inc
pop
pop
xchg
mov
lock
inc
int
jp
mov
aad
dec
dec
and
iret
xor
pop
cmp
mov
stos
pusha
jo
jp
roll
xor
neg
lret
dec
into
jne
mov
xchg
enter
jnp
mov
sbb
mov
pop
shlb
and
test
pop
sbb
mov
and
shll
and
adc
and
xchg
push
inc
mov
and
loopne
dec
dec
mov
loopne
or
loopne
xor
jne
xor
lods
xor
mov
cmpsl
xor
mov
adc
scas
lahf
and
dec
cmc
adc
jmp
xchg
mov
insl
sbb
pop
xchg
xchg
fildll
inc
jns
repnz
gs
je
xchg
incl
and
jae
xor
mov
add
lds
and
mov
or
test
ss
fs
mov
mov
and
lcall
nop
ja
sbb
jl
sbb
outsl
push
jecxz
ss
inc
inc
add
lret
les
dec
sub
int3
mov
mov
enter
mov
jo
rorl
and
ret
pop
out
and
roll
mov
pop
pop
xchg
leave
dec
stos
loop
cmp
lret
xchg
loop
jo
jae
push
out
lods
daa
pop
lahf
xor
cmp
inc
xchg
fcompl
gs
cmpsb
jle
dec
mov
lret
or
pop
jne
and
fsubrl
pushf
cmpsl
xchg
test
ret
fcomp
dec
xchg
fsubrs
clc
lock
inc
roll
pop
and
inc
push
insl
je
pop
cmc
mov
popf
cmp
mov
cmc
shlb
xor
pusha
aaa
xor
fucomi
inc
and
jae
or
hlt
fwait
push
movsb
imul
repnz
test
fadd
mov
sub
pop
sub
xchg
rclb
mov
insb
or
imul
cltd
in
lret
xor
adc
shl
or
sti
jge
sub
sub
repz
push
inc
jge
test
jmp
mov
mov
mov
xchg
sarb
add
sub
cld
int3
jnp
mov
mov
aas
in
cmc
sbb
fdivrs
push
lods
test
mov
jmp
mov
inc
jle
mov
movsb
push
jno
inc
xchg
mov
out
inc
dec
or
imul
ljmp
ss
int3
inc
cmp
shrl
sub
cmpsl
std
xchg
addl
mov
pushf
add
inc
mov
jnp
inc
pop
pop
pusha
out
rorb
mov
or
add
dec
xchg
insb
xchg
jp
add
cmpsb
aas
cmp
mov
mov
shlb
cmp
mov
lds
push
mov
mov
or
inc
xchg
adc
cmpsb
sbb
into
xor
push
sbb
mov
add
dec
jle
cmpsb
jns
xchg
cwtl
push
popf
sbb
xchg
in
mov
imul
or
enter
sub
jle
mov
stos
inc
sbb
ret
out
flds
ss
mov
psubd
test
int
and
mov
cltd
clc
pop
movsb
test
lea
push
jecxz
aam
dec
add
aaa
jl
cli
dec
loopne
mov
fcmovu
aas
cld
cmp
jmp
pop
loop
mov
push
cld
push
fildll
pop
push
shrl
push
lods
lods
mov
fidivs
stos
in
cmpl
or
ja
ja
pop
imul
or
xor
andb
pop
add
lret
insb
aas
xor
add
mov
cmp
sbb
jno
sub
ss
push
sbb
mov
repz
cmp
adc
or
mov
push
cmp
jmp
cltd
aam
xchg
pop
mov
sbb
lcall
sub
xor
xchg
pop
nop
stos
aas
insb
in
push
aaa
ja
sbb
in
sub
lods
repnz
adcb
scas
leave
rolb
inc
mov
int
in
cmpsl
mov
test
add
insb
xchg
add
pop
mov
ret
pop
dec
lret
shrl
xor
lods
push
lret
cmp
jle
ljmp
or
mov
mov
or
inc
fs
test
xchg
sub
or
pop
push
ret
xor
fstpt
sub
cmpsb
stos
cmp
loope
out
jno
add
jnp
loope
push
mov
push
cmp
in
xchg
and
enter
cmc
xchg
and
xchg
push
mov
push
fsubr
test
je
or
in
lods
push
push
mov
jns
jb
clc
aaa
sub
xor
mov
cmp
outsb
ja
add
jae
je
enter
or
inc
rep
rcll
bnd
in
rorb
inc
mov
dec
test
arpl
aam
outsl
icebp
jo
out
mov
and
sti
and
push
mov
mov
mov
pop
aaa
mov
ret
pop
jno
nop
outsl
popf
stos
sub
inc
ret
jg
xchg
test
jns
fwait
test
cmp
dec
mov
add
cmp
imul
fiaddl
cltd
inc
insl
xchg
faddl
and
or
cld
out
mov
sub
mov
pop
imul
inc
in
in
fcmovbe
add
inc
popf
lods
adc
shlb
shll
aas
ret
test
mov
sbb
jae
or
inc
fstps
fwait
pop
outsb
adc
mov
js
mov
aas
and
out
gs
stc
or
jmp
mov
dec
dec
arpl
lret
shrl
mov
mov
sub
daa
test
out
mov
jnp
jo
xor
out
addr16
subb
or
mov
arpl
call
test
fs
or
jp
push
adc
in
nop
xchg
push
lret
push
lret
fildll
icebp
cltd
xor
std
stos
pop
mov
and
adc
jns
test
adc
je
push
xchg
pop
jno
addr16
aad
out
hlt
aaa
push
int3
fwait
jne
inc
pop
jb
fildl
in
cmp
mov
jp
fsubs
mov
mov
hlt
subb
pop
cmp
sbb
int3
jne
mov
pushf
or
int
fcoml
fbld
pop
test
add
lods
sahf
dec
dec
pop
ss
push
push
lods
push
mov
outsb
mov
aas
insb
add
dec
and
lcall
cmp
xor
mov
xchg
mov
mov
xchg
js
dec
idiv
outsb
mov
flds
xchg
or
ss
fs
es
movsl
out
sbb
test
inc
jmp
pop
iret
adc
adc
das
mov
dec
loope
bound
sub
addl
push
xchg
stos
mov
sub
cmp
mov
or
sbb
into
pop
pop
in
roll
lock
pushf
ss
mov
or
inc
cmc
leave
cmp
mov
imul
bnd
mov
add
ljmp
mov
sub
shrl
xor
test
leave
popf
int
mov
repz
pop
and
scas
inc
push
fadd
test
andl
add
cli
clc
sbb
xchg
add
jg
sub
sbb
cltd
add
lods
cmc
or
push
outsb
xor
arpl
dec
jns
mov
ds
cltd
xchg
fdivl
jne
sti
dec
cmc
sahf
ret
int
das
jge
test
out
sub
or
push
movsl
xchg
mov
mov
dec
inc
int
inc
daa
bound
inc
xchg
jno
push
rorl
push
push
out
rclb
xchg
cmc
clc
add
dec
cmp
inc
xchg
and
mov
xchg
divb
cltd
dec
add
push
xor
pop
or
pop
movsb
dec
add
and
les
xor
js
mov
fadds
gs
mov
push
push
pop
mov
in
jne
pop
aas
rcrb
and
inc
insb
xchg
and
lea
jbe
jne
shrd
inc
out
imul
pop
sbb
cwtl
ret
imul
idivl
rcrl
add
das
sub
push
jle
adc
sahf
out
or
push
fcoml
sub
js
dec
pop
push
dec
out
push
mov
repnz
lds
imul
les
enter
lods
inc
mov
into
lods
sbb
popf
mov
std
mov
fnstenv
stc
cltd
arpl
loope,pn
dec
movsl
in
cmp
or
call
and
lock
stos
push
and
cmp
jno
mov
cmp
jb
test
xchg
test
jne,pn
cld
fildl
sti
enter
push
fisubs
adc
pop
cmp
popa
fisttpll
adc
bound
fnstenv
mov
cmp
loopne
or
sahf
int3
rcll
and
sbb
cmpsb
cmpsl
sbb
sbb
loopne
icebp
pop
repnz
or
jmp
pause
adc
outsl
in
xchg
sbb
fisttpll
mov
icebp
or
mov
xlat
arpl
iret
shrl
inc
bound
sub
mov
arpl
xchg
adc
rcrb
cmc
or
push
test
xor
mov
mov
xchg
push
out
sub
push
test
sub
in
xchg
stos
std
fistps
cmpb
iret
fidivs
push
aas
mov
dec
xchg
lock
divb
dec
std
out
mov
mov
push
push
adcb
lret
push
fisttpl
push
add
mov
dec
xor
cmp
or
adc
mov
and
adc
lea
mov
push
mov
jge
sub
iret
lock
sahf
push
les
inc
arpl
xchg
dec
dec
cwtl
mov
cli
popa
pusha
das
ja
shlb
js
adc
push
jle
cmp
sti
ss
and
push
inc
cmc
jg
sbb
ret
scas
push
dec
dec
xchg
dec
rcr
mov
int3
imul
and
dec
mov
cmpsl
repz
mov
pop
out
mov
jb
dec
dec
or
fs
inc
iret
sub
jo
into
hlt
fcompl
lods
nop
cwtl
fldl
das
sub
insl
xchg
mov
cwtl
sbb
adc
push
mov
fisubs
jg
mov
xchg
adc
in
push
gs
imul
sub
into
out
ss
mov
push
cmp
jle
or
and
std
adc
rcrl
lret
jp
mov
frstor
cltd
in
mov
mov
lret
cs
adc
cmpsl
sbb
int3
insb
pop
sub
mov
inc
ror
pop
pop
jl
je
xchg
push
and
stos
loope
out
cmp
xor
sub
dec
jp
lea
imul
cmp
xchg
pop
pop
cmpsb
shlb
cmp
ds
icebp
lods
cmpb
inc
dec
cmpsl
dec
add
shll
nopw
cs
scas
sub
add
mov
stos
adc
push
sti
and
adc
andb
mov
lock
inc
xor
rol
stos
std
dec
popa
push
ljmp
xchg
mov
dec
setb
and
dec
sbb
push
mov
or
pop
ds
clc
sbb
sub
xlat
clc
cmc
mov
in
and
xor
das
cmp
ja
jp
mov
sarl
out
outsb
sbb
pop
les
and
mov
popl
aam
aam
mov
xlat
mov
mov
mov
inc
sbb
nop
lret
fs
xlat
icebp
inc
jae
jecxz
mov
jmp
mov
or
in
dec
scas
lcall
xchg
iret
pop
push
imul
pop
rclb
in
decl
test
dec
mov
andl
aam
pop
adc
push
fisttpl
fstpt
dec
and
and
dec
int3
fldenv
fs
into
rorl
adc
rcl
jnp
or
icebp
dec
insb
adc
push
lods
cld
mov
and
pop
ss
arpl
iret
adc
stos
sbb
inc
mov
sub
insl
push
std
and
mov
les
inc
mov
call
mov
je
popa
sub
faddl
nop
ret
or
mov
adc
mov
scas
push
ret
inc
xchg
iret
imul
arpl
jno
gs
fsubrl
aam
add
daa
mov
in
les
mov
mov
outsb
loope
into
add
xlat
dec
mov
in
jno
sbb
adc
push
inc
mov
out
icebp
scas
pop
repnz
inc
xlat
shrb
aaa
jne
jl
ss
es
es
xchg
fmulp
loope
mov
insb
mov
ss
iret
mov
cmp
iret
lds
out
fs
inc
push
clc
aaa
mov
and
shrb
mov
mov
cmpsb
fldcw
insb
ja
sahf
into
fisttpl
push
je
pop
mov
stos
push
sub
push
add
jge
xchg
movsl
movsb
mov
nop
loopne
loopne
sbb
mov
add
data16
mov
and
cld
addr16
add
sbb
add
jl
mov
adc
rorl
popa
jns
pusha
daa
adc
jbe
or
lea
lds
mov
in
mov
stos
aam
fwait
mov
scas
dec
cmpsb
push
jno
or
jmp
cld
ljmp
pop
push
sub
xor
mov
jp
jnp
test
jmp
in
jp
daa
fidivs
xchg
sub
push
jmp
fadds
repz
fwait
adc
adc
jno
lock
cmp
cmp
cmp
push
dec
mov
stos
orl
xchg
mov
lods
insl
test
mov
addr16
shl
push
lods
push
mov
popa
fstl
cmpsb
jb
xlat
mov
adc
jne
or
pushf
inc
test
mov
rclb
xor
cmp
and
cmp
ljmp
repnz
mov
movsl
sub
jle
lods
iret
xor
cmp
mov
out
dec
or
icebp
test
pop
andl
push
xor
cmp
xor
mov
loop
sub
inc
push
pop
sub
aad
and
sub
adc
jle
aaa
ljmp
mov
mov
mov
xor
dec
add
cmp
and
daa
mov
jge
test
mov
nop
mov
nop
repz
inc
subb
nop
adc
xchg
fwait
pop
js
popa
pop
lea
loop
lods
inc
add
lret
pop
repz
push
push
xor
pop
inc
mov
popf
jl
sub
nop
and
adc
enter
push
lds
js
enter
outsb
push
lret
dec
shll
pop
or
out
ss
jne
jp
jb
push
and
xchg
sub
cwtl
or
mov
or
and
out
cld
shl
sub
inc
jg
dec
jg
sbb
and
out
leave
repnz
aam
add
jmp
pop
roll
adc
movsb
in
mov
idivb
push
and
popf
or
js
dec
adc
push
nop
ja
rep
iret
jl
nop
lret
or
sbb
push
xor
aam
xchg
mov
mov
out
aad
jno
jp
and
inc
jge
shll
push
es
cmpl
neg
mov
outsl
in
aaa
cmp
movsl
mov
add
add
addl
or
out
inc
sbb
dec
subb
xchg
jno
sub
inc
sub
or
ss
repz
inc
sahf
xchg
pop
ds
xchg
hlt
icebp
lcall
fdivrs
hlt
sub
aad
push
into
das
or
fldt
scas
adc
push
movsl
dec
xchg
dec
shl
test
sti
jle
jmp
mov
aas
and
xchg
pusha
cmpsl
mov
push
test
in
es
rolb
mov
gs
in
in
faddl
cmc
xor
movsl
stos
rcr
xlat
sub
call
mov
sub
shl
int
pop
cwtl
imul
pop
dec
mov
bound
fcompl
iret
int
cmp
enter
sahf
rcl
mov
dec
in
jge
xchg
or
push
movsb
sub
add
les
cmp
insb
std
xor
fsubs
nop
inc
sub
js
lods
or
mov
add
lods
or
aam
rcrb
pop
movsl
sub
mov
jle
or
out
int3
xor
jge
jno
adc
xchg
push
mov
mov
cld
dec
repnz
mov
inc
sbb
xchg
jl
adcl
rcr
les
cmpl
mov
test
cmp
or
sub
mov
mov
cltd
das
or
dec
cs
popf
test
je
dec
jmp
enter
cmpsl
ret
or
mov
dec
les
pop
xor
mov
mov
or
mov
test
cmp
jge
pop
adc
inc
adc
aaa
daa
loopne
mov
push
xor
std
test
jg
jmp
mov
mov
pop
nop
std
sbb
cmpsl
sti
cmpsl
stos
pop
mov
pop
mov
fsubrl
stos
ss
je
rcll
mov
push
lcall
mov
mov
sti
xlat
lcall
mov
inc
and
shrl
add
jg
jo
sbb
bound
mov
pop
lret
push
hlt
add
cli
fidivrs
les
sbb
movsb
fiadds
loopne
xchg
les
int3
jb
jnp
enter
data16
or
mov
and
or
mov
dec
lcall
aas
leave
and
xchg
lret
inc
rolb
fincstp
xchg
mov
pop
jmp
sbb
ds
sbb
xchg
push
je
adc
int
lock
call
pop
jo
jg
dec
imull
mov
mov
notl
inc
cld
mov
xor
cmp
fdivs
lods
hlt
in
lock
push
jo
adc
ds
push
incl
les
insb
xlat
jo
mov
cld
clc
scas
pop
aas
pop
sub
call
mov
jb
jl
es
dec
inc
fwait
sbb
dec
and
mov
cld
ret
fcmovb
mov
pop
mov
jno
test
adc
sahf
adc
lds
lcall
vpaddb
inc
jmp
in
mov
cmpsb
mov
cmp
and
loopne
add
push
bound
jne
or
cmp
mov
ja
jle
int3
loop
mov
shr
sbb
js
sbb
call
or
sub
nop
in
xchg
xchg
add
add
and
cmp
outsb
les
cmpsl
fnsetpm(287
or
jle
cmpl
sub
push
aam
adc
xchg
sub
mov
mov
mov
lods
std
leave
outsb
dec
iret
out
dec
adc
mov
pop
jmp
xor
fdivl
ficoms
mov
jns
stos
fdivs
pop
pop
ljmp
or
int3
rcl
incb
and
stos
call
outsb
mov
mov
mov
mov
rorl
out
jmp
and
adc
lea
fmull
and
sti
insb
xor
lods
mov
xor
insl
and
movsl
cs
and
xor
loopne
jle
fsubrl
xor
mov
nop
inc
mov
add
inc
aad
push
outsb
test
call
test
sbb
pop
add
or
popf
and
sarl
iret
lock
or
inc
mov
js
ret
jge
mov
mov
inc
mov
xor
insl
lahf
jle
shl
sbb
jbe
aam
sti
insb
hlt
lods
icebp
pop
dec
xor
xchg
insb
rcrb
ucomiss
ljmp
adc
add
into
mov
mov
sbb
pop
enter
dec
push
sti
cld
push
adc
mov
loop
dec
popa
ficoml
les
sbb
inc
inc
loopne
push
repz
cmp
push
repnz
mov
cmp
negl
inc
xor
out
push
fldcw
xchg
pop
mov
xor
pop
and
mov
stos
stos
dec
in
rclb
jne
and
test
mov
sub
aaa
fstpt
loopne
ret
fidivl
rcrb
inc
cmp
and
std
inc
imull
xchg
and
cs
cmp
push
daa
jb
pop
insl
leave
dec
and
out
mov
movsb
enter
sti
adc
or
or
aas
lret
push
repz
sub
cmp
jns
sbb
mov
out
out
sti
xchg
cmc
push
adc
loop
rcll
cmp
adc
hlt
das
aad
into
cmp
push
push
mov
adc
mov
mov
pop
out
shrb
out
jg
xor
loope
cmp
push
and
lret
icebp
xchg
sbb
pop
jae
xor
cmpsl
jo
dec
shll
jl
jno
fidivrl
lods
push
inc
jle
inc
insl
pop
fmull
and
mov
je
jae
mov
hlt
mov
lcall
lret
mov
imul
pop
les
cmp
pop
jo
cwtl
vmwrite
mov
cwtl
mov
fstpt
outsl
fidivl
pusha
test
xor
cwtl
les
inc
sub
negl
mov
das
fildl
jo
out
mov
or
iret
pop
push
xchg
mov
jmp
aam
push
mov
cwtl
sub
dec
and
xchg
xchg
push
mov
mov
sbb
shll
sub
movsl
movsl
jmp
push
jp
inc
jle
push
sahf
imul
pop
cmp
mov
mov
adc
xor
repnz
cmpsl
cmp
xor
xchg
fadds
aad
inc
out
jne
inc
in
dec
subl
push
or
mov
push
fwait
push
out
inc
stc
xor
mov
es
lods
or
lods
push
test
mov
mov
mov
stos
xchg
jo
aam
jmp
inc
sbb
ret
sti
jae
adc
mov
sbb
adc
adc
xor
js
aad
jno
pop
aam
mov
mov
push
orb
imul
mov
sub
addr16
pop
or
mov
cli
stos
test
jecxz
scas
adc
cmp
mov
mov
aam
add
mov
add
xchg
mov
popa
mov
sub
xchg
pop
push
adc
add
mov
aas
movsb
cs
mov
jle
fidivs
jl
inc
mov
mov
inc
add
in
xlat
lods
push
or
pop
mov
dec
xchg
bound
mov
pop
pop
mov
mov
mov
xor
test
rclb
xchg
push
fcomi
in
cmpsb
xor
fsubrl
xor
int
mov
ret
idivl
xchg
daa
cmc
jl
sub
js
fs
ret
xchg
lods
ds
rcll
sbb
inc
xchg
sub
pop
mov
add
nop
push
and
movsl
lcall
inc
std
pop
pop
ficomps
push
or
and
rcll
imul
lret
pop
pop
and
adc
mov
cmp
push
in
lea
mov
ror
fcoml
xor
sub
scas
push
cli
sub
inc
mov
adc
repnz
inc
jbe
pop
test
or
lahf
cmp
loopne
clc
mov
jmp
pop
cld
sbb
enter
pop
movsl
adc
sub
add
add
sahf
jb
inc
adc
sahf
cmc
dec
pop
out
test
mov
xor
lret
fs
dec
add
add
jo
imul
dec
mov
cmpsb
push
lret
push
aad
popa
and
sbbl
daa
mov
fldcw
popa
sbbl
sbb
push
add
int3
pushf
ds
pop
ret
push
inc
cli
iret
dec
cmpb
ds
mov
xchg
push
imul
fstl
aad
loopne
adc
cs
fs
jp
clc
push
cld
pop
inc
push
or
je
enter
and
or
pop
cli
dec
pushf
loopne
es
push
mov
xchg
sub
adc
mov
cpuid
movlps
or
insl
mov
dec
lahf
iret
mov
dec
aam
clc
outsb
or
out
mov
arpl
dec
sbb
pop
cli
adc
pop
mov
shrb
cli
les
adc
mov
push
dec
pop
sarb
mov
jg
fbld
testb
mov
subl
cmp
adc
pop
cmp
cld
fxch
mov
sub
mov
jecxz
sub
sahf
pop
push
ficomps
testb
pop
aad
inc
xlat
or
xor
pushf
pop
push
test
lret
aaa
out
and
inc
jmp
mov
icebp
ret
fwait
sub
pop
int
mov
add
add
or
in
mov
cmpl
ret
imul
nop
adc
aaa
jbe
mov
xchg
nop
push
add
subl
hlt
out
adc
insl
sbb
xchg
adc
push
shr
mov
mov
dec
ljmp
es
inc
xor
push
cmp
push
xor
dec
fidivrl
dec
lock
ret
addr16
or
mov
push
mov
sbb
push
push
jbe
scas
or
and
incl
inc
mov
xchg
jmp
mov
fwait
cmp
std
jns
dec
xlat
xchg
sub
notb
push
push
inc
lcall
stc
mov
dec
mov
xor
adcb
pop
idivl
xchg
insb
stc
mov
inc
sbb
xor
std
in
push
adc
out
scas
mov
cltd
inc
scas
add
jb
mov
in
mov
push
xchg
aaa
jle
and
loope
xchg
push
enter
push
and
dec
ljmp
cmp
ljmp
and
push
mov
notl
pop
fs
rol
loope
cmp
jne
repnz
add
mov
xor
and
jmp
in
inc
inc
push
lods
lods
jbe
es
sbb
inc
rorb
sbb
lcall
push
jp
push
cmc
aad
add
bound
mov
ljmp
pop
and
pop
imul
mov
inc
dec
xchg
aad
loope
mov
push
jb
dec
aad
mov
std
aas
icebp
mov
mov
pop
cmp
mov
stc
fidivs
sub
std
xor
orl
int3
ret
fldt
orl
sbb
lock
aaa
cmp
sbb
lods
test
ja
and
push
sbb
xchg
push
out
lods
lret
push
pop
in
mov
ds
jmp
cmp
addr16
insb
ds
repnz
push
mov
mov
bound
xlat
lods
aas
movsl
stos
shrl
outsb
xchg
xchg
jmp
stos
pop
mov
fwait
repz
push
pop
sbb
iret
stc
aad
fisttpll
loop
mov
xchg
xorl
daa
jne
jmp
dec
cmp
add
adc
mov
dec
push
mov
push
shlb
sbb
int3
and
cmpsl
iret
pop
shr
fwait
mov
int3
jl
mov
imul
or
add
inc
into
lret
lret
in
pop
mov
push
and
or
jno
pop
pop
mov
cs
or
inc
add
lock
mov
mov
add
mov
out
xor
jecxz
push
and
orl
aad
jo
fs
insb
movsl
loope
jno
xchg
mov
jno
test
pop
pop
imul
ja
nop
in
inc
mov
mov
cmp
outsl
faddl
pop
cmp
jmp
jbe
stc
out
lcall
test
sub
cltd
ficoml
mov
mov
mov
pop
and
ss
imul
rclb
addr16
jmp
ret
and
aam
mov
icebp
mov
cs
test
outsb
push
gs
in
fisttpll
xchg
pushf
cmp
aaa
outsl
push
xor
push
leave
xor
inc
push
push
in
mov
dec
mov
sbb
sub
push
cmpl
clc
sub
mov
inc
idivb
sub
enter
xchg
cmpsl
outsb
movsb
cmp
scas
bound
or
push
ffree
cmpsb
pop
jp
out
jecxz
popa
orl
js
loop
xor
and
dec
pushf
rorl
pushl
or
mov
and
mov
fwait
in
add
mov
xor
mov
add
add
jge
je
xor
xchg
adc
inc
loop
negl
rcl
or
test
outsl
mov
mov
mov
or
jp
pushf
adc
or
sbb
or
dec
cmp
dec
std
hlt
add
and
push
pop
mov
and
shll
inc
jnp
lods
test
cmpsl
pop
or
repnz
inc
cwtl
mov
pop
ret
mov
fdivl
xchg
out
outsb
xchg
popa
in
ja
das
or
push
mov
repnz
adc
jmp
pop
xchg
add
mov
jns
cltd
fbld
jmp
push
add
pop
jns
dec
push
inc
rorl
sub
push
sub
dec
div
fstp
and
pop
fstpt
pop
cmp
popa
xor
iret
sbbl
and
cmp
cmp
jb,pt
repz
sbb
pop
pop
inc
mov
fnsave
lret
push
adcl
mov
lea
insb
sbb
cld
mov
mov
addl
pop
lret
inc
stos
and
stc
xchg
cmp
jnp
bnd
xlat
cmpsb
pop
cmp
fcomps
aad
adc
pop
cmp
add
aaa
push
or
jg
or
loope
lods
test
or
pop
mov
inc
mov
iret
fwait
aam
rorb
out
mov
mov
inc
aad
pop
mov
ljmp
outsb
sub
push
mov
in
inc
pop
loope
test
bound
cs
and
push
jnp
inc
pop
scas
ret
push
rclb
aas
notl
cmp
mov
xchg
mov
xchg
xor
addr16
mov
test
lock
and
aas
jl
xchg
mov
pop
add
adc
shlb
pop
lret
push
add
or
insb
inc
jnp
mov
lret
out
aaa
dec
das
or
xchg
ret
mov
pop
mov
jmp
dec
movsb
mov
mov
lret
xchg
push
lcall
jb
or
shrl
xchg
adc
xlat
dec
pop
jmp
jge
aas
in
jp
cmp
fadd
imul
scas
rorb
add
push
jno
inc
add
iret
sub
cmp
sahf
adc
jns
inc
xor
out
sub
jg
lds
adc
pusha
mov
std
xchg
mov
pop
test
aaa
mov
mov
or
pop
das
dec
rcrl
pusha
mov
push
cmp
mov
fmul
lea
add
filds
jns
shrb
int
lahf
mov
les
jecxz
sub
repz
push
arpl
rcl
sbb
mov
sti
xor
loopne
mov
mov
mov
ss
xchg
mul
mov
adc
pop
loopne
dec
mov
or
push
mov
mov
adc
adcl
out
adc
stc
insb
lcall
mov
or
in
lcall
pop
xchg
sahf
push
mov
repnz
inc
add
sbb
loopne
mov
fst
jno
orb
ss
mov
lds
popf
xchg
pop
outsl
shl
arpl
push
nop
sbb
fs
adc
jno
xchg
and
rcrl
push
cwtl
sub
dec
fsubrs
xor
inc
arpl
dec
cmp
add
icebp
gs
mov
outsl
or
out
inc
push
dec
mov
in
lret
scas
cltd
pop
rclb
js
push
out
mov
mov
xchg
adc
inc
xchg
push
iret
jmp
pop
aad
lods
movsl
pop
add
out
mov
cmpsl
xor
sbb
inc
arpl
sub
xchg
mov
sub
xchg
xor
dec
sub
stos
insl
rcr
dec
mov
add
dec
mov
mov
lret
loope
outsb
fld
dec
push
mov
xchg
lret
and
sub
add
jmp
movsl
les
das
push
cmc
jl
sub
sub
fistpl
mov
fldcw
fucom
loopne
push
decb
dec
sub
and
dec
scas
and
out
sbbl
into
xchg
xor
outsl
add
push
fisttps
mov
ret
faddl
leave
ds
shll
xchg
push
imul
ds
or
imul
mov
and
mov
invd
cld
mov
xorb
mov
dec
lcall
xchg
mov
stos
pop
sbb
inc
mov
add
mov
in
lods
std
sahf
xor
std
pop
mov
lods
hlt
rclb
idivb
adc
lahf
xchg
push
add
mov
jg
dec
jmp
ficoml
adc
int3
xor
and
cs
push
mov
ret
jb
and
inc
das
push
fsubl
inc
shl
addr16
or
gs
xchg
int3
insb
sub
inc
adc
aad
repz
in
repnz
mov
jge
and
adc
aaa
test
xchg
xchg
sahf
fwait
inc
dec
dec
sbb
mov
cwtl
dec
and
and
shl
test
in
inc
dec
mov
or
out
int
mov
adc
fst
scas
inc
push
mov
and
or
ffree
loopne
hlt
nop
xchg
ret
lea
push
fdivp
fisttps
pop
mov
call
inc
mov
in
insl
in
xor
fstps
push
xchg
cmp
sbb
pusha
jmp
adc
hlt
or
push
loope
inc
inc
outsb
inc
test
push
sbb
xor
cmp
sub
ljmp
in
jno
les
push
das
or
icebp
imulb
iret
push
push
xor
mov
jmp
fcoms
push
jb
incl
xchg
sbb
or
sbb
nop
or
sti
jb
test
cmpsb
jecxz
cs
adc
mov
pop
mov
imul
dec
lret
ljmp
insl
test
ja
sahf
inc
lret
mov
movsl
sbb
fisubrl
jne
mov
mov
lods
fdivr
psllq
jmp
push
mov
imull
mov
jp
stos
cltd
fnstsw
cmpsb
pop
ljmp
hlt
sub
push
inc
sbb
movsb
ja
or
cmp
out
into
mov
mov
addr16
xchg
test
pop
popf
cmp
push
fs
adc
cmp
mov
punpcklwd
xchg
cmp
xchg
pop
sub
insb
cmpsl
or
xchg
pop
ja
cs
das
push
popf
adc
insb
addr16
push
xchg
jl
and
inc
shll
inc
push
add
push
ja
cmp
cltd
push
das
je
aad
pop
mov
daa
dec
jge
mov
icebp
shrl
xor
dec
mov
pop
xchg
xadd
cltd
add
out
out
mov
and
bound
mov
adc
out
out
xchg
dec
pop
mov
inc
arpl
ficompl
mov
scas
ss
pop
or
sbb
andl
daa
xlat
or
xchg
jo
movsb
jg
push
dec
mov
or
test
arpl
jmp
mov
adcb
push
inc
xor
in
add
and
in
call
xchg
data16
inc
shrl
test
mov
cmp
aam
dec
mov
pop
enter
xchg
xor
outsb
mov
enter
mov
lahf
jle
fmull
sub
std
aad
dec
and
jno
sub
mov
mov
xchg
and
call
or
and
or
scas
dec
in
xlat
push
popa
js
mov
ret
mov
rclb
test
lret
out
int
push
push
mov
sub
sub
sbb
lea
mov
mov
out
adc
lds
popf
sbb
lret
daa
test
mov
sub
push
loope
mov
movsl
or
out
cwtl
imul
cltd
pop
cmp
lds
xchg
test
mov
jns
std
rorb
lea
push
leave
test
xor
mov
arpl
aad
call
mov
dec
out
ficompl
sbb
das
jg
es
jb
and
je
cmp
scas
ret
movsl
cmp
call
ret
sbb
add
aaa
mov
hlt
push
imul
hlt
mov
js
cmp
pop
movsb
cltd
sti
cmp
adc
add
and
rorl
xor
adc
xchg
mov
daa
sbb
loopne
lock
add
fnstcw
in
inc
push
mov
jecxz
sti
xchg
push
push
or
mov
jmp
out
fmulp
sbb
jecxz
sub
je
push
jl
icebp
cltd
icebp
jmp
mov
je
fisttps
adc
cwtl
rep
xchg
inc
mov
ljmp
adc
ret
outsb
xchg
inc
mov
adc
xor
js
lods
pusha
or
fsubrl
popa
arpl
push
dec
aam
and
add
enter
mov
push
mov
fildll
push
adc
pop
xchg
repnz
xor
jbe
adc
xchg
pop
jbe
xor
push
xchg
mov
ljmp
pusha
or
push
add
inc
les
jno
mov
in
mov
pop
orb
sbb
or
test
loop
mov
movsb
push
cmp
lea
push
sbb
out
jno
push
fstpl
jg
rcrl
pushf
inc
pop
leave
add
fsts
incb
push
addr16
jo
out
cli
sbb
movb
in
imul
sub
outsb
lods
mov
outsl
sbb
imul
push
cli
leave
ja
dec
ljmp
mov
push
test
lcall
jno
arpl
daa
aad
jne
mov
cmp
xor
rcll
inc
in
sub
insl
cmp
in
lret
jp
add
or
fistps
movsl
into
add
mov
stc
outsb
pusha
mov
mov
testl
cmp
insl
push
and
mov
lret
adc
mov
rorl
lret
loope
mov
mov
call
int3
bound
lods
push
add
mov
xchg
ret
xor
inc
jb
pop
dec
cmpb
js
inc
jne
insl
mov
inc
pop
fidivrl
pop
and
fstps
cmc
sub
adc
data16
push
push
cli
dec
insb
out
aaa
mov
lea
mov
mov
jecxz
mov
cmp
mov
xchg
or
lock
mov
cmc
mov
push
sbb
push
test
setnp
pop
in
shrb
js
fldcw
out
sbb
icebp
adc
lock
fs
sub
lcall
ret
insb
sahf
sub
daa
scas
ljmp
cmp
and
push
lock
out
imul
std
cmc
pop
inc
add
lret
push
pop
cmp
or
movsb
mov
jno
inc
push
addr16
push
loope
xor
in
jae
sbb
add
dec
cmp
mov
std
mov
aas
cwtl
and
mov
sub
icebp
out
jns
clc
movsl
loope
jae
xor
pshufw
gs
lahf
fsubr
inc
pop
jae
fistl
ja
aad
aas
and
add
and
and
jmp
stos
add
loopne
fiaddl
cmc
mov
mov
lret
xchg
jg
sbb
repz
dec
push
imul
sub
xchg
jns
pop
outsl
xchg
clc
mov
push
sbbl
fs
cs
je
test
aas
cld
mov
in
cmp
lahf
xlat
ss
mov
loop
xor
daa
inc
sbb
xor
mov
ret
ret
fcoml
push
xchg
test
sbb
in
ljmp
dec
aaa
jne
imul
cmp
xor
or
mov
or
cmp
or
loope
daa
lods
mov
sbb
loop
test
or
or
inc
stc
jl
pop
aaa
icebp
mov
icebp
mov
jo
lds
cmpsl
cwtl
popf
push
pop
scas
enter
mov
outsb
popa
cmpsl
pop
data16
mov
mov
mov
push
sub
aam
inc
aaa
in
cmp
adc
xor
je
mov
pop
pop
jmp
call
mov
gs
incb
push
inc
pop
cltd
loope
scas
lods
repz
sub
mov
jbe
inc
mov
dec
movsl
or
pusha
xchg
mov
jp
imull
inc
or
or
sbb
dec
imul
sbb
push
into
lret
lods
cmp
imul
jb
xchg
mov
sbb
jl
dec
dec
mov
ror
mov
lahf
adc
add
test
lods
lds
ror
inc
inc
js
clc
push
jmp
insl
adc
dec
adc
xor
out
insb
jmp
xchg
and
shlb
not
add
add
lahf
mov
mov
mov
or
repnz
pushf
arpl
jb
cmp
je
fwait
call
stos
jge
dec
mov
add
sbb
mov
jnp
jnp
xchg
cli
fdivrs
adc
pop
xchg
jnp
fldenv
pushl
popa
jbe
clc
sahf
pop
mov
xor
sahf
leave
fsubl
sub
mov
adc
mov
adc
insb
add
scas
jecxz
cld
sbb
xchg
lea
push
xor
sub
into
arpl
aad
sbb
divl
or
fsubs
movsb
pop
das
sbb
out
xor
fld
and
mov
pushf
push
lods
mov
xchg
sub
sub
xchg
mov
pop
sti
xor
inc
mov
sbb
and
fwait
sbb
iret
xor
imul
push
icebp
into
fcmovb
lds
scas
incl
out
sub
insb
add
iret
shrb
lods
mov
jp
adcl
push
stos
jmp
aam
dec
outsb
xor
stc
cmpsb
and
push
fidivs
mov
hlt
fldt
mov
mov
mov
loopne
jg
imul
cltd
and
adc
in
mov
pop
pop
jnp
mov
sub
inc
cmp
cmp
xor
test
das
cmpsb
data16
out
insb
mov
adc
xor
push
sbb
adc
neg
mov
stos
mov
cmp
pop
xlat
nop
mov
and
addr16
cs
add
dec
jns
dec
popa
push
jno
movsl
adc
lret
les
add
cmc
jo
or
add
and
jmp
push
lods
pop
leave
sbb
mov
jae
xchg
hlt
mov
incb
sub
test
pop
stos
fs
push
add
outsb
mov
loop
mov
js
js
or
ret
aas
xchg
and
lock
inc
aaa
lods
inc
pushf
push
pop
daa
and
xor
cmp
xchg
mov
outsb
pop
mov
std
cmp
mul
mov
out
and
sti
sbb
push
out
mov
cmpsl
ret
cmp
inc
call
jnp
pop
adc
add
adc
loope
inc
repz
push
icebp
fmulp
icebp
cmp
sahf
or
popf
mov
leave
out
mov
pop
fmuls
loop
scas
les
pop
xchg
adc
add
std
es
out
xor
sub
mulb
push
dec
out
pushl
std
daa
add
mov
add
sub
icebp
out
add
xchg
sbb
int
sbb
loopne
sub
leave
push
cli
daa
movsl
and
bound
sub
jg
rolb
out
cli
movd
pushl
adc
inc
fidivs
jle
mov
push
ss
fisttps
dec
imul
sbb
push
lods
xchg
imul
icebp
mov
out
mov
ljmp
scas
jp
and
inc
lret
rcll
push
xchg
les
sahf
fimuls
pop
popf
movsl
adc
imul
int3
cs
fiaddl
mov
fidivl
je
or
jno
das
jno
cld
mov
das
ret
repz
das
les
enter
adc
adc
test
sub
stos
push
pusha
mov
and
inc
push
rol
push
and
sub
sbb
push
sbb
mov
out
dec
mov
mov
out
cmp
ret
js
movsl
push
add
mov
push
mov
push
cmp
mov
in
into
gs
mov
or
scas
inc
lret
jbe
push
jmp
xchg
inc
out
cmp
cmc
stos
rcr
shll
aaa
sbbb
xlat
mov
sub
pop
push
mov
andb
popf
jl
lock
bound
mov
fistl
inc
pop
and
sbb
test
sub
repnz
jns
stc
adc
xor
cmp
cmp
stos
andl
mov
xchg
in
sbb
xor
nop
in
inc
mov
bound
in
cld
enter
movq
jo
cmp
into
jp
dec
pop
jmp
add
lret
call
ss
dec
insb
outsb
je
add
mov
mov
inc
test
pop
lcall
cmp
mov
gs
jle
inc
in
and
lahf
push
insl
sti
push
je
ja
ret
and
repnz
dec
ja
adc
push
xchg
lcall
mov
call
out
pop
fs
add
pop
dec
inc
mov
mov
and
and
mov
add
lock
outsl
pop
pop
les
xchg
adc
and
sbb
sub
jnp
in
daa
cmp
or
xchg
mov
insl
inc
sti
insb
loope
adc
pop
ds
lods
dec
jno
dec
aas
aaa
clc
int3
lcall
jmp
cmp
mov
rcr
sbb
stos
cmp
loope
popf
cli
push
inc
cli
add
xchg
in
sub
stc
xor
push
out
xchg
push
xchg
clc
pusha
add
or
outsb
iret
daa
cmp
dec
outsb
loopne
dec
dec
push
jno
inc
cmpsb
adc
mov
leave
jge
out
pop
lea
bound
pop
shr
fwait
cwtl
jecxz
into
data16
cli
push
test
sub
insb
sbb
pop
enter
ja
jne
sbb
leave
iret
pushf
ret
js
scas
inc
dec
jae
push
hlt
inc
aaa
sbb
test
and
jg
xchg
add
inc
cwtl
outsl
mov
fs
jl
cmp
cwtl
mov
scas
sbb
add
sbb
lcall
shlb
mov
jl
fisubrl
divl
mov
sahf
mov
popa
mov
lock
sahf
stos
pop
out
add
jo
pop
lret
xchg
ficoml
fldcw
jns
inc
lods
aas
stos
dec
and
add
insl
pop
cmpsb
pushl
lea
jae
es
xor
sbb
gs
sti
pop
or
pop
call
mov
sahf
cltd
in
test
setb
sub
sub
fisubrl
add
dec
push
sbb
xchg
mov
dec
fisubrl
push
movsl
fbstp
into
cmc
add
je
loope
arpl
jbe
arpl
in
imul
add
rcr
pop
in
into
xlat
mov
lods
addr16
mov
rol
xor
or
mov
push
xchg
mov
push
cmpb
cmp
jno
popa
repnz
not
jle
enter
pop
xchg
xchg
leave
mov
fidivs
or
inc
loop
mov
insl
sbb
jb
mov
icebp
iret
aas
mov
xor
out
adc
jae
sub
jp
pop
lods
aas
xchg
cli
in
pop
aad
mov
lcall
mov
add
popa
add
das
scas
mov
aas
inc
jbe
adc
mov
jae
sahf
jmp
add
dec
outsb
jb
ljmp
push
stc
add
push
cmp
add
mov
stos
pop
nop
loopne
inc
rorb
fsubp
xchg
out
mov
pusha
cmpsl
lods
lret
sub
pop
jo
dec
pop
sbb
rorb
int3
daa
cmp
imul
pop
ficomps
xor
call
push
test
orb
scas
shrb
mov
sub
test
out
push
mov
push
fcompl
add
lret
inc
xchg
fcoml
inc
hlt
mov
lret
test
and
jne
fistps
filds
push
fisubs
mov
inc
aad
scas
movsb
pushf
shrl
sbb
dec
repz
icebp
sbb
cmp
add
shrb
add
dec
mov
mov
xlat
insl
add
add
sbb
jmp
int3
xchg
enter
cmpsb
add
fidivrl
movsl
test
mov
sti
pop
and
arpl
mov
mov
pop
fisttps
in
add
popa
dec
mov
fidivl
rcr
jo
je
pop
ret
aas
mov
mov
pushl
jb
fdivs
cmp
add
mov
cmc
les
mov
mov
fcoml
je
icebp
cmp
fwait
xor
xchg
adc
adc
in
lret
push
pop
xchg
cli
push
add
lea
pop
or
lds
mov
pusha
push
mov
test
cwtl
or
sbb
subb
jo
cld
scas
and
xor
imul
pop
int
cltd
adc
push
xchg
inc
test
push
test
dec
lret
unpcklps
inc
scas
out
and
push
stos
xor
sbb
mov
test
push
fisttps
aas
dec
fwait
gs
cmp
pop
xchg
in
pop
fbstp
dec
flds
cltd
outsl
test
or
test
mov
inc
push
imul
lods
jb
ss
loopne
outsl
shrl
sbb
xlat
push
scas
loope
sbb
mov
sbb
mov
dec
push
loopne
push
sbb
bound
aaa
aaa
push
sub
jp
pop
cmp
insl
ret
dec
mov
lock
jo
sbb
dec
xor
and
mov
add
mov
add
cld
out
dec
sub
mov
testb
inc
fnstenv
lods
inc
add
sbbl
inc
adc
inc
lret
push
inc
outsl
lea
mov
das
push
int
scas
sahf
adc
rcr
jp
xchg
inc
dec
push
sub
adc
mov
or
xor
jge
adc
adc
and
cwtl
jns
push
push
scas
adc
sub
out
adc
filds
pop
movsl
fmul
adc
jno
aad
mov
or
test
dec
or
add
fxch
mov
adc
inc
or
xchg
fmulp
in
rol
shll
mov
or
out
cwtl
cmpsl
xchg
ss
jns
lods
jmp
push
cld
mov
jmp
ja
add
mov
ret
lods
push
inc
sarb
es
and
shlb
mov
pop
enter
pop
or
or
pop
mov
popf
insl
stos
push
jbe
lods
es
das
lret
nop
lret
nop
dec
lock
incb
and
fs
xchg
dec
push
dec
mov
fsubl
xor
das
fimuls
arpl
add
sbb
ljmp
ret
cmp
or
dec
push
jl
jo
or
out
jbe
mov
ss
aam
das
pop
lret
pushf
mov
lahf
inc
adc
add
mov
dec
sbb
pop
test
out
call
or
push
xchg
push
mov
sbb
out
cmp
adc
arpl
add
xchg
inc
in
inc
ja
jp
xor
pop
pop
cli
pop
sbb
sbb
outsl
xchg
sbb
fwait
sub
hlt
or
pop
not
adc
inc
push
inc
dec
mov
daa
dec
lock
jns
xchg
or
dec
pushf
jge
mov
idivb
cld
mov
es
rclb
call
dec
int
sti
lea
repz
call
jle
daa
mov
cmp
sbb
lea
mov
xchg
cmp
lcall
jo
jb
repz
cmp
push
xor
inc
mov
adc
cld
jmp
and
lahf
cmpsb
jno
push
ds
bound
push
sbb
xor
xchg
push
leave
into
mov
mov
push
mov
sbb
iret
fsubrl
stc
in
sbb
jle
sbb
mov
lds
xor
shrb
inc
in
sub
in
out
cmp
lret
mov
outsl
stc
sbb
loopne
inc
push
out
adc
loope
mov
iret
mov
or
adc
testb
andb
das
leave
and
dec
push
sub
jge
pop
out
jg
sahf
dec
sub
push
fisttpll
push
stos
cmp
push
dec
adc
push
sub
pop
fucomi
and
mov
xor
sub
insl
fucomip
mov
hlt
fsubrl
ja
jnp
xlat
dec
pop
call
mov
je
and
xlat
lds
pushf
cmp
in
les
outsb
in
or
aad
stc
adc
jmp
pop
cmpsl
sbb
pop
xor
lods
xchg
pop
pop
cmp
mov
mov
fdivl
xchg
jecxz
push
out
sub
nop
add
int3
outsb
scas
mov
xor
jecxz
and
subb
leave
call
ja
mov
leave
mov
mov
dec
pop
lock
mov
add
mov
mov
jo
loopne
pop
les
dec
dec
xchg
xchg
aas
stos
out
dec
push
sbb
std
jmp
cmpsl
xor
xor
insl
lods
dec
das
int3
mov
mov
lods
hlt
or
inc
test
fs
lds
cwtl
pop
es
popf
inc
xchg
lods
cld
mov
fistpll
and
lcall
movsb
stos
mov
fimull
add
or
aas
cmpsl
ja
lock
cltd
add
idivb
push
inc
jg
push
cmp
paddd
adc
repnz
out
fnstenv
jae
iret
jge
mov
sbb
in
mov
addl
xor
sub
ss
in
outsl
mov
push
fistpl
xchg
and
jge
xchg
xchg
sbb
pop
mov
or
test
int3
insl
loopne
cmp
rorl
xor
xor
push
sbb
pcmpgtw
xchg
and
push
sub
popa
shlb
pushf
idivb
lea
pop
push
sti
pusha
and
push
imul
push
loop
inc
imul
lcall
popw
inc
sbb
int
mov
int3
sbbb
push
enter
pusha
lods
mov
dec
jle
jae
pushf
xchg
xlat
mov
inc
push
test
or
pop
out
sbb
into
rep
es
fildl
pop
fiaddl
outsl
scas
in
push
cmp
push
and
mov
test
into
xchg
test
imul
and
insl
cmp
add
stos
stc
movsb
or
add
xchg
fsts
cltd
enter
xlat
aad
mov
sub
jecxz
mov
cli
xchg
ljmp
shlb
mov
int3
push
and
test
sub
scas
mov
fwait
xor
inc
mov
aad
cmpb
dec
xchg
mov
ja
mov
pop
cmp
fstpt
pop
xchg
mov
cwtl
test
lock
inc
or
cmp
cwtl
out
les
mov
jp
cmp
je
push
imul
incl
rorl
jg
out
fadds
push
add
mov
jg
sub
mov
mov
fimuls
inc
adc
sbb
and
aad
nop
fs
xor
jg
mov
fisttpll
mov
in
cmp
sub
xor
or
lds
xor
aaa
push
jne
hlt
xchg
jge
sbb
popf
and
mov
rcll
dec
mov
add
idivb
sbb
xchg
cld
stc
mov
xchg
inc
push
out
scas
sbb
testb
test
fmul
cltd
jl
outsb
pop
push
push
adc
out
dec
adc
test
les
or
pushf
fdivrl
push
mov
pop
cmpl
ja
push
xor
mov
cmpsb
jns
mov
adc
push
cmpsb
movlps
or
mov
fwait
or
xor
cld
lods
gs
out
or
imul
loop
pop
pop
mov
pop
into
push
outsl
or
jle
test
and
addr16
mov
inc
push
jnp
out
les
cmpsb
pusha
mov
or
and
ds
push
addr16
cmp
ficoms
sbb
sbb
mov
xor
loopne
dec
mov
jl
cs
clc
xchg
jl
inc
xor
add
or
stos
sbb
jne
xchg
sahf
push
and
enter
mov
dec
dec
push
mov
imul
aam
jg
push
mov
xor
jo
rol
in
inc
cmp
les
lcall
rcrb
mov
sbb
cmp
shrl
dec
mov
add
fbstp
loope
out
arpl
ja
inc
loope
in
das
js
daa
and
mov
into
clc
stc
push
loop
inc
stc
jg
mov
inc
daa
lods
xchg
dec
data16
inc
jl
pop
adc
aam
leave
cmpsb
ret
in
jae
in
adc
out
sarb
mov
xor
pushf
cmpsw
test
xchg
and
push
add
test
idivb
lret
lods
sbb
imul
and
xchg
and
or
aaa
jnp
test
push
mov
pop
arpl
lret
lret
jle
mov
std
cmpsb
loop
cwtl
cmp
leave
adc
lds
insb
bswap
push
adc
cmp
jnp
add
in
push
je
dec
enter
or
mov
int3
adc
out
stc
aam
jne
das
cmpsb
jnp
fbstp
or
mov
sub
or
addr16
jg
iret
xchg
sbb
xchg
dec
sub
repz
cmp
aad
out
mov
rorb
pop
push
arpl
insl
sub
test
add
mov
das
pop
sub
popf
fidivl
cmpsb
sub
push
add
mov
push
cli
test
ds
test
or
popa
pop
inc
scas
dec
lret
push
icebp
dec
pop
sbb
test
sbb
in
add
into
pop
xchg
xchg
push
cmpsb
mov
loope,pt
cltd
lods
cli
xlat
sbb
lock
inc
and
popf
and
fiaddl
testb
ljmp
pop
bound
cmp
pop
push
aam
push
iret
mov
mov
in
mov
je
icebp
lret
ficompl
lret
pop
xor
repz
and
xchg
stos
push
test
test
imul
fwait
cmp
leave
and
xchg
mov
sub
add
test
ljmp
pop
jne
jge
dec
cs
jge
loop
loop
push
test
adc
dec
jno
dec
add
mov
leave
or
imul
mov
lcall
mov
mov
mov
or
ret
mov
xor
out
aad
movsb
add
xchg
repz
xor
outsl
imul
jmp
jp
jno
xchg
test
jp
in
mov
mov
jecxz
push
imul
outsb
sbb
xchg
aam
rcrb
outsl
jle
jbe
popf
dec
push
int3
gs
xor
mov
dec
testb
repnz
ja
or
pop
sbb
daa
popa
cmp
popw
sbb
rclb
add
aaa
or
push
and
mov
aaa
out
mov
fs
int3
push
push
rclb
inc
inc
xchg
pop
mov
cmpsb
cmp
jmp
pop
xchg
cmpsb
test
sti
lock
loope
jno
mov
xchg
jo
icebp
subl
pusha
sub
add
jnp
sbb
lock
mov
lret
outsb
inc
jecxz
hlt
aam
nop
mov
sub
out
cs
sub
mov
movsl
fldt
inc
std
in
ja
pop
cmp
sbb
and
inc
stos
ss
mov
ss
insl
cwtl
shlb
jmp
jbe
sbb
lds
mov
sbb
es
je
out
lods
push
rorl
jae
push
mov
sbb
adc
or
stc
add
insb
push
pop
scas
sub
push
push
pop
mov
jmp
shl
cwtl
adc
lea
inc
rorb
nop
mov
jb
cltd
lods
inc
popf
mov
fistpll
sti
js
ret
cmpsl
sbb
jg
sti
outsb
mov
dec
inc
inc
sbb
mov
sbb
add
xchg
scas
jb
mov
shrb
scas
out
sbb
inc
mov
ret
mov
or
fiadds
jbe
and
cwtl
into
sbb
stos
ja
mov
cli
mov
adc
xchg
sbb
movsl
addr16
test
jmp
stos
pop
push
in
scas
sahf
mov
popf
lods
push
repz
stos
push
mov
fisubrl
pop
cmpsb
cmpsl
ret
popa
mov
cmc
iret
insb
nop
push
out
add
dec
lds
and
push
sub
cs
outsl
imul
je
fimuls
rolb
fs
cmp
mov
or
shlb
js
xorb
jae
mov
inc
mov
cmp
sub
add
mov
add
xor
push
or
xor
mov
pop
js
pop
and
sub
ss
sub
mov
shll
icebp
popf
mov
fcoms
fbstp
sbb
and
push
shrl
mov
mov
shrb
pop
xchg
jmp
jcxz
or
outsl
jae
sbbl
xchg
insb
push
fldcw
mov
in
push
out
loope
mov
sbb
or
jmp
outsb
or
xchg
pushf
jb
xchg
push
mov
lea
dec
rcrb
iret
pop
dec
std
repnz
pop
xchg
mov
dec
ficompl
shrb
adc
outsl
mov
loop
add
les
mov
xchg
test
pop
inc
adc
ja
adc
mov
jle
sti
and
cmpsb
in
add
xor
loope
mov
pop
inc
mov
jecxz
mov
sbb
out
sbb
imul
test
sbb
push
cmp
push
mov
fwait
subb
pusha
dec
adcb
jns
pop
in
and
add
jbe
sub
jns
xor
xchg
pop
lock
push
enter
lea
mov
in
adc
pop
pop
shrl
push
push
adc
and
test
mov
hlt
shrb
pusha
and
push
popf
mov
ss
sbbb
inc
pop
test
or
push
add
rcl
or
movsb
bound
enter
movsl
xchg
pushl
sarb
in
and
push
adc
push
mov
mov
push
imul
sahf
pushf
xchg
push
daa
mov
stc
xor
das
movsb
andb
jb
in
fwait
cmp
or
or
shll
aam
ret
mov
and
popf
sub
pop
mov
xor
hlt
dec
jmp
lcall
out
pop
ljmp
cmp
aam
jmp
mov
jg
loopne
rorl
push
loopne
pop
cmp
cltd
jg
xchg
les
aam
leave
subb
lahf
dec
popa
imul
cwtl
cmpsb
pop
rcll
adc
jbe
cs
sbb
xchg
push
pop
push
repnz
adc
dec
out
icebp
push
pop
add
out
dec
aas
pop
sub
daa
mov
dec
pop
jne
xlat
sahf
out
outsb
push
popa
and
lds
inc
jbe
add
xor
adc
push
sti
xchg
lock
and
cmpsb
sar
sub
inc
push
inc
lret
mov
add
jnp
sahf
mov
or
dec
inc
loope
jecxz
in
mov
test
ss
xchg
ret
dec
xchg
push
movzwl
inc
int3
ja
jo
loope
sti
loop
lock
push
iret
outsl
jno
out
and
lret
push
mov
movsl
pop
sbb
push
rcrl
sarb
movsb
inc
inc
push
int3
outsb
bound
int3
push
lcall
sbb
jns
js
ja
xchg
jbe
sbbb
in
lcall
int3
imulb
mov
das
aas
into
in
int3
sub
out
push
mov
je
in
int
leave
loope
pop
dec
lahf
outsl
or
pop
fdivr
negl
insb
mov
or
sbb
imul
cli
mov
stos
lret
xor
xchg
movsl
mov
inc
dec
aas
pop
aas
in
sbb
cmp
frstor
fidivrl
lock
xchg
outsl
jne
inc
and
or
addr16
mov
mov
mov
out
cli
jno
inc
cmp
dec
shll
dec
mov
inc
stos
mov
and
dec
loopne
jl
push
pop
sub
sarl
rclb
popa
sub
dec
test
mov
cltd
test
cltd
or
sbb
cmp
lret
dec
and
imul
push
cmp
enter
push
outsl
xor
mov
cli
cltd
pop
int
movsl
lcall
and
gs
adc
lock
shl
dec
stos
inc
mov
adc
arpl
cltd
ljmp
ja
out
fdivrs
adcb
fsub
fbstp
or
mov
add
in
ret
xchg
sbb
or
loopne
es
cmp
imul
sub
shll
cmc
std
decb
repnz
and
imul
add
pop
pop
test
decb
add
adcb
lods
xchg
cs
ljmp
imul
leave
insb
inc
or
cmp
xorb
cmpsl
imul
xor
push
and
xor
xchg
fisttpl
fcmovnu
inc
in
fisttps
scas
mov
cmpsl
sbb
fistps
jge
sbb
adc
sub
jle
jecxz
imul
mov
pop
mov
mov
xchg
pop
mov
mov
loope
rcll
pop
stos
les
filds
in
sub
aad
call
push
ret
mov
idivb
call
sbb
sbb
mov
mov
lea
test
mov
in
mov
mov
out
add
or
subl
mov
scas
xor
xor
or
push
jmp
sub
ljmp
aad
lock
ss
ret
sub
adc
inc
mov
mov
lahf
clc
mov
outsl
xor
fcmovu
push
fistl
sbb
inc
and
lods
std
cmc
sbb
xchg
ja
sub
mov
cmp
stos
mov
jmp
nop
jnp
popa
push
mov
mov
xorb
xchg
mov
pop
cmpsb
pop
outsb
xchg
lahf
push
out
cmpsb
mov
fndisi(8087
mov
pop
int3
jb
xor
jns
rorl
xchg
mov
sbb
push
pop
out
jl
inc
or
or
mov
insl
add
mov
and
and
mov
addb
imul
pop
and
ret
push
mov
xchg
outsl
jg
mov
int
jg
cmp
in
cs
jmp
js
inc
sub
add
lods
leave
sub
cwtl
fisubrs
rolb
push
xchg
out
inc
cmp
aaa
mov
pusha
mov
xchg
cwtl
mov
mov
in
jp
push
push
cmp
out
jno
cmp
mov
cmp
test
sahf
in
jp
in
xchg
mov
xlat
add
dec
add
enter
jp
cli
mov
cmp
mov
mov
sub
xchg
sub
add
test
ror
lcall
xchg
pushf
or
outsb
cmp
mov
imulb
cli
sub
add
push
xlat
sub
loop
push
out
xchg
jmp
adc
cmpsl
jmp
push
outsb
add
mov
mov
movsl
add
outsl
mov
shrl
pop
arpl
mov
or
daa
lds
and
mov
cmp
sbb
loop
dec
out
push
icebp
adc
mov
and
mov
pop
stos
mov
cwtl
sbbb
cmp
and
dec
add
or
js
out
mov
mov
shrl
aad
inc
in
lea
std
cli
mov
mov
fs
cmp
fistps
xorl
mov
outsb
sub
lahf
cmpsl
dec
in
sbb
addb
in
stos
rcrl
std
dec
and
int
inc
ja
leave
in
arpl
mov
jg,pt
aaa
in
add
insb
mov
pusha
jle
and
hlt
add
adc
in
xchg
repnz
aaa
mov
xchg
mov
cmp
ret
int
call
test
sub
mov
ret
ret
out
inc
jnp
lcall
sbb
test
and
outsl
adcb
hlt
inc
lds
lahf
cmp
add
ljmp
mov
ret
ret
cld
mov
pop
pop
repz
inc
adc
movl
xchg
push
push
iret
jge
lock
sub
cmc
aam
insl
stos
xchg
push
adc
xchg
jmp
xor
mov
gs
fmuls
xchg
sub
sahf
incb
repz
pop
mov
data16
arpl
jmp
outsb
sbbb
or
stos
mov
into
fsubl
fnstsw
fidivrs
xor
pop
icebp
sahf
cmp
nop
inc
jmp
cmp
mov
mov
pop
adc
stos
push
dec
dec
jmp
pandn
and
pop
cld
mov
movsb
inc
jo
rorb
xor
repnz
outsb
inc
dec
in
daa
cmpsl
add
push
fwait
mov
pop
idivb
push
ficompl
pop
jmp
xor
in
dec
std
sbb
adc
mov
mov
xor
lret
pop
lahf
adc
std
ret
add
pop
inc
add
sub
mov
mov
adc
lods
shlb
imul
mov
push
add
mov
and
out
sub
push
adc
pop
xchg
xor
mov
enter
call
addr16
nop/reserved
ljmp
push
lods
mov
popf
pop
iret
inc
lcall
iret
sbb
fmul
xchg
pop
into
fisubrl
test
mov
xchg
fwait
pop
mov
pop
stos
pop
cmpb
dec
cmp
pop
out
mov
sub
sarb
cmp
stos
push
and
imul
insb
pop
xor
xor
push
lods
adc
loopne
pop
test
sbb
adc
sbb
jae
mov
dec
jle
push
sbb
loope
pop
pop
les
insb
fs
lret
or
dec
inc
mov
stos
and
sub
xchg
dec
inc
mov
sbb
mov
out
mov
int
nop
dec
fsts
aam
mov
mov
sub
test
xchg
xor
mov
das
mov
sar
divb
cmp
ljmp
inc
xchg
adc
cmpsb
push
fstpl
mov
popf
cmp
jno
xor
sub
test
cld
adc
pop
cmp
bound
hlt
and
fisubs
dec
push
jnp
test
fidivrl
pop
hlt
iret
mov
or
adc
xchg
addr16
scas
or
pop
out
mov
pop
stos
dec
shrl
jg
test
pop
in
push
xchg
cli
mov
add
dec
mov
sahf
inc
jnp
movsb
mov
scas
mov
jbe
orl
fisubrs
cwtl
outsl
or
scas
ficoms
aas
aad
inc
mov
mov
or
push
into
iret
scas
add
sub
lahf
jno
xchg
sbbl
jmp
icebp
jae
xor
les
and
jns
xchg
nop
sub
jmp
jmp
iret
mov
cwtl
stc
dec
stos
xchg
and
sbb
xchg
sub
je
jb
das
mov
out
ficoms
sarl
mov
test
pop
mov
pusha
out
incl
shrl
adc
or
fnstenv
dec
nop
sbb
pop
rorb
cld
xchg
stc
sbb
inc
movsb
mov
adc
pop
add
pop
mov
pop
lock
mov
loope
dec
pop
mov
aas
fcomip
cld
jb
mov
cmp
shlb
ret
je
sbb
adc
sti
insb
enter
fsubl
bound
js
clc
hlt
jmp
and
fcoms
xor
lds
mov
js
mov
sbbl
push
aam
jp
xor
shlb
shll
add
or
stos
mov
mov
out
cs
push
mov
ss
mov
iret
push
movsb
or
sbb
xlat
ljmp
out
mov
xchg
xlat
mov
sarb
iret
ds
arpl
sbb
push
sti
lret
pop
mov
adc
mov
imul
pop
jne
xor
loop
mov
das
or
lods
mov
fsubrl
jae
stos
es
js
sub
lods
sbb
xor
push
and
xchg
pop
mov
xchg
adc
push
subl
repz
dec
or
mov
adc
movsb
pop
xchg
xchg
push
fucomp
rclb
loopne
jns
aaa
sub
ja
cmpsw
jmp
jb
repnz
push
pop
test
loope
dec
loope
out
push
icebp
dec
xchg
sbb
inc
int3
fists
mov
xlat
push
add
cli
subl
roll
imulb
pusha
cli
inc
cmp
sub
xchg
jg
aad
pop
sub
data16
pop
aas
adc
repnz
ror
mov
movsb
stc
mov
sbb
shrl
xor
or
pop
icebp
inc
adc
adc
cmp
add
adc
shlb
andb
inc
mov
fnstcw
in
adc
jl
inc
xchg
mov
mov
pop
and
xchg
jmp
ret
je
cwtl
add
mov
mov
sub
push
pop
jo
cmp
lahf
sbb
push
outsb
aaa
call
xor
gs
pop
cmp
cmp
sub
xchg
adc
mov
dec
inc
test
pop
daa
mov
and
adc
mov
iret
and
cld
ret
jo
stc
jbe
aaa
sbb
xor
jmp
mov
or
mov
sbb
into
mov
pop
inc
fisubl
lds
inc
aaa
call
sbb
scas
or
cmp
or
cmc
xchg
pop
inc
cmp
rcrb
les
nop
adc
fcomp
lods
add
inc
movsl
xor
inc
mov
jecxz
push
push
or
lds
enter
and
or
fucom
jno
hlt
sti
jbe
stos
pop
jecxz
sbb
das
sub
or
movsb
mov
jmp
inc
out
sub
xor
iret
adc
mov
sbb
pop
imul
and
lcall
lods
mov
jp
icebp
ja
scas
dec
ljmp
adc
and
enter
out
mov
lcall
dec
xor
mov
mov
movsb
es
ss
inc
rcrb
dec
stos
mov
cli
fimuls
push
xchg
jno
adc
cmc
cltd
xchg
stos
pop
rcl
adc
loopne
jbe
mov
lock
push
dec
pop
jle
sub
xchg
fsubr
shrb
int
xor
scas
xor
jmp
movsl
xchg
pop
cld
in
cmp
mov
mov
negb
mov
cld
or
or
ss
or
inc
cmc
popf
fstpt
lds
das
or
adc
mov
decb
mov
fadds
cmpsl
adc
sbb
pop
or
cmpsb
jb
mov
pop
popa
out
jmp
jle
clc
inc
fistl
fsubr
mov
lock
out
push
in
jge
addr16
adc
test
or
loopne
push
xchg
les
push
outsl
cmc
lcall
insl
or
pushl
adc
xchg
push
sbb
cmp
in
test
sbb
cmp
ret
mov
push
dec
push
pop
mov
mov
cmp
pop
lock
in
lock
fadds
outsb
xor
adc
xlat
push
xchg
cmpsb
and
stos
lods
cmc
ret
mov
mov
inc
out
cmp
cwtl
mov
lcall
jp
mov
mov
lret
cld
sbbb
shrl
notl
xor
pop
mov
sbb
cmp
jns
icebp
push
mov
daa
mov
dec
mov
mov
shll
in
fstpt
fcoms
push
inc
clc
xor
dec
mov
dec
pop
outsl
cltd
mov
insb
mov
pop
jge
cmp
sbb
jle
jg
fcomps
push
mov
mov
iret
mov
xlat
or
ret
ljmp
rolb
dec
les
adc
fistps
shrl
push
stos
add
pop
push
ja
test
addr16
cs
and
sbb
cld
jo
add
cmp
test
imul
pop
ds
sub
jmp
jno
inc
lods
dec
loope
sub
repnz
or
and
in
dec
stos
sub
cwtl
daa
or
je
scas
cs
add
xchg
addb
jp
or
rcrl
xchg
add
xlat
jecxz
ret
arpl
enter
les
stos
iret
pop
inc
add
sahf
inc
inc
push
xchg
addb
add
dec
sub
nop
adc
sbb
cmp
shlb
xchg
mov
jae
push
or
movsl
mov
pop
xorb
les
outsl
add
add
rcll
fisttpl
das
insl
clc
popf
add
jne
push
fbld
in
setbe
mov
mov
sti
pop
mov
jno
cs
xchg
hlt
mov
mov
cmp
dec
shl
in
fcoml
cltd
and
ret
loope
ret
idivb
repnz
mov
je
push
jmp
mov
mov
dec
dec
aam
arpl
and
rolb
sahf
bound
push
xorb
pop
and
jo
mov
xchg
cmp
push
xor
xor
xchg
lret
mov
inc
fsubrl
mov
inc
sub
test
jl
outsb
cmpb
add
inc
pop
shl
inc
cld
call
scas
orb
sub
call
cmp
lret
aas
xor
cmpsl
sbb
sub
inc
inc
filds
divb
jo
in
xor
shl
pusha
test
adc
xchg
mov
insl
out
in
in
cmc
cmpb
aas
sarl
push
dec
gs
in
add
mov
jno
stos
add
fldcw
adc
or
jne
push
sar
adc
push
das
xor
jnp
mov
in
mov
lret
xchg
add
push
push
in
mov
xchg
mov
adc
push
push
pop
shlb
icebp
int
mov
lods
add
mov
clc
int3
jmp
push
out
outsb
mull
sbb
mov
rcr
xchg
scas
xchg
mov
and
or
inc
jno
pusha
cmpsw
jae
mov
mov
adc
ror
in
push
addr16
lret
into
mov
es
cmp
jp
push
ds
cmp
jge
dec
mov
mov
ret
lret
movsl
nop
pop
jg
mov
int3
jp
iret
cmc
push
dec
addr16
inc
xchg
outsb
push
lret
fstps
sti
rol
fcmovb
fnsave
or
int3
mov
dec
cmc
inc
outsb
xchg
cmpl
mov
push
stos
xchg
and
outsl
daa
enter
push
sahf
pusha
add
jge
xor
push
cmp
push
jo
out
pop
lock
dec
ret
mov
push
sub
cmpsb
cmc
les
adcb
sbb
test
inc
lahf
pop
jg
jmp
aad
je
inc
scas
dec
in
call
popf
or
cmp
out
xor
lods
pusha
addb
inc
lods
cbtw
stos
repnz
push
in
movl
cmp
mov
xor
cmp
sub
push
scas
pop
add
push
repz
mov
out
scas
xlat
daa
inc
iret
xor
jnp
mov
ljmp
jle
mov
imul
scas
rcr
ds
and
xor
mov
mov
xor
add
cmp
mov
inc
aad
aad
push
mov
jo
xor
sbb
mov
das
or
rcl
fsubrs
jbe
xor
xchg
cmp
xchg
fnsaves
or
jge
sarb
es
mov
pop
xchg
xor
loop
xchg
mov
lahf
stc
in
imul
mov
das
dec
mov
sti
fdivrs
xor
mov
jmp
das
push
sub
adc
adc
in
test
inc
aam
sti
ljmp
sub
or
rorl
dec
jp
movb
movsl
aas
sbb
pop
mov
inc
fwait
xor
fnstenv
mov
test
scas
gs
or
ret
stos
jb
push
das
scas
ret
push
mov
cld
pusha
mov
ljmp
mov
xor
fcmove
stos
loope
repnz
cwtl
xor
loop
mov
xor
rcrl
or
sbb
sbb
fwait
iret
scas
mov
scas
xchg
cmp
test
jge
mov
push
jle
sbb
xor
lret
add
dec
cmc
sbb
int
pop
jge
lods
stc
inc
pop
jle
out
shll
pushf
lret
dec
fldcw
jecxz
add
shl
in
and
scas
push
pop
iret
pop
movsb
xlat
cwtl
lds
adcl
fnstcw
and
add
shufps
mov
cwtl
adc
enter
xchg
mov
mov
jmp
pop
test
sbb
cmp
adc
push
shll
cmp
jno
sarl
shrb
stc
sub
insl
lods
test
add
roll
xchg
push
dec
or
ljmp
jo
clc
xchg
and
add
sub
dec
lahf
mov
cmp
push
xor
inc
lcall
mov
jmp
and
lods
shrb
inc
cwtl
int3
sub
lods
ret
mov
repz
movsl
mov
fcoms
or
cmp
or
aaa
out
fmuls
push
adc
push
popa
mov
sbb
jae
arpl
popa
xchg
loopne
ss
lea
mov
mov
lods
mov
sub
add
mov
jecxz
mov
push
cmp
out
dec
fstpt
mov
ss
inc
pop
jp
leave
js
mov
imul
mov
push
xchg
fcompl
out
cmpsb
stos
jg
xor
jl
in
mov
inc
adc
xor
out
pop
push
or
push
jle
pushf
mov
sub
cbtw
mov
mov
hlt
cmp
dec
gs
lods
test
pusha
push
adc
pusha
repnz
into
add
jno
push
int3
push
pop
ljmp
es
xchg
mov
push
inc
pop
int
pop
addr16
dec
bound
xor
les
lret
pop
aam
repz
inc
stos
push
jmp
ret
pop
popf
push
and
sub
orb
lods
jecxz
mov
jle
or
lea
movsl
inc
cmp
pusha
sbbb
sub
inc
loop
insb
in
dec
call
add
xchg
push
mov
xchg
in
pusha
sbb
jnp
aam
or
xchg
cmp
inc
cmp
inc
or
jmp
nop
loopne
mov
push
jne
scas
inc
mov
push
sbb
mov
adc
out
add
ljmp
jecxz
xchg
dec
ljmp
cmp
xor
int3
add
mov
push
sbb
pop
sahf
jmp
dec
cmp
mov
inc
mov
rcl
mov
mov
adc
sbb
mov
push
mov
mov
sub
outsl
mov
and
mov
cmp
bnd
orl
hlt
sbb
addr16
out
imul
pop
or
push
js
mov
movsl
dec
mov
dec
arpl
or
in
pop
icebp
lahf
sti
mov
xor
mov
jne
aam
mov
cltd
std
jno
pop
sub
in
push
insl
pop
inc
cmc
out
aaa
push
outsl
movsl
cltd
jbe
imul
sbb
repz
scas
mov
rclb
outsl
fscale
push
les
js
lods
mov
pop
add
xor
xchg
out
sub
shll
push
or
mov
sub
inc
sbb
test
lcall
movsl
gs
outsb
shrl
mov
ret
cmp
fstpt
lret
xlat
repz
sbb
leave
leave
add
lcall
xor
data16
adc
mov
clc
adc
cmc
imul
add
inc
pop
sub
inc
aaa
js
sarl
popa
subl
sahf
stc
mov
push
lcall
mov
cwtl
cmp
je
repnz
xchg
add
in
pop
jg
je
lahf
negl
add
add
push
subb
loopne
stos
pushl
sbb
incb
mov
mov
xchg
into
daa
jnp
adc
sbbb
add
cltd
inc
inc
into
or
mulb
test
loopne
xchg
inc
xor
cmp
dec
loope
adc
loop
fisttpl
stos
adc
adc
shrb
jb
stos
sbb
loope
jp
jge
cmp
xchg
sub
lret
jae
pop
cmpsb
hlt
add
adc
mov
jno
cmp
bound
test
cli
xchg
stc
mov
es
xchg
mov
push
add
imul
push
hlt
pop
std
mov
rcll
popf
call
xchg
pushf
gs
loope
ret
fs
sub
repz
jmp
mov
lock
mov
add
psraw
subb
hlt
add
jg
stos
lret
in
push
cmpsb
mov
dec
jo
les
sub
daa
sub
mov
xchg
adc
cmp
test
cwtl
out
or
repz
mov
push
adc
shrb
xchg
aad
shrb
mov
push
or
mov
sbb
add
mov
int3
sti
sti
push
hlt
xchg
add
fwait
push
mov
jge
xor
pop
je
jbe
inc
push
scas
cmc
aam
mov
or
and
lret
sbb
or
inc
lods
mov
and
cmp
lds
push
push
xor
imull
dec
add
xor
aaa
mov
dec
jae
sub
aas
adc
add
lock
dec
lahf
decl
dec
add
js
shr
jmp
fdivrs
mov
cmpsl
jne
push
sub
jae
cmp
pop
cmp
cmp
inc
mov
or
jno
xchg
xor
outsl
cmp
pop
cmp
cmp
sub
sbb
xor
mov
cmp
mov
loopne
dec
jp
je
in
or
jge
loopne
mov
add
pushf
pushf
jne
mov
lea
cmpsl
insl
sbb
inc
and
sub
dec
stc
jb
dec
push
ja
mov
sub
mov
pop
call
mov
pop
data16
imulb
push
test
movsl
jae
sub
or
and
sbb
sti
or
mov
insl
std
push
push
jae
cmc
int3
cli
ret
jg
and
and
inc
das
or
repz
repz
pop
inc
jmp
rcl
fists
pop
aas
inc
imul
rcr
out
or
mov
aas
icebp
mov
negl
frstor
mov
adc
xchg
inc
lds
loop
les
jae
lock
push
adcb
xchg
and
cmpsb
orl
stc
mov
dec
aam
mov
shlb
push
sti
xchg
cmp
fmul
xchg
vmwrite
cmp
mov
jl
ss
pop
outsl
das
pop
mov
cmp
daa
in
adc
lret
int3
push
rep
stos
add
mov
in
xchg
push
mov
jg
decb
cld
and
repz
clc
aad
mov
xchg
push
sbb
scas
push
pop
jecxz
popf
mov
pushf
icebp
xchg
shll
inc
sub
mulb
out
out
stc
push
rol
cli
mov
mov
rep
in
ret
imul
in
sbb
leave
xor
xor
int3
shll
mov
imulb
cmpl
push
or
push
incb
mov
sbb
and
stos
jp
in
outsl
jge
sub
rorl
in
jae
or
and
add
stc
shlb
imull
repz
push
add
out
scas
adc
idivb
add
mov
fidivl
mov
stos
leave
inc
jmp
mov
dec
pop
xor
mov
add
or
or
mov
xor
roll
das
sbb
sub
rcll
inc
lock
pop
dec
lods
pushf
jae
addl
jmp
inc
push
cmp
pusha
movsb
sarl
adc
lret
xchg
xor
bound
lods
or
jmp
xchg
testl
sar
arpl
fmuls
mov
dec
mov
push
dec
mov
xor
pop
cltd
cmc
push
pop
mov
cmp
pop
mov
xchg
outsb
lcall
iret
rorb
mov
in
jmp
jmp
mov
subb
jg
daa
lea
incb
adc
gs
insb
ja
xchg
pop
vmovups
xor
cld
movsl
and
sti
int3
xor
mov
mov
pop
inc
inc
iret
or
cs
xor
rclb
arpl
call
stc
sbb
push
mov
insl
and
mov
repnz
pop
sub
jle
inc
into
xor
pop
lods
inc
nop
add
adcb
cmc
fisubrs
std
lret
push
pusha
jp
icebp
pop
fdivl
mov
cltd
gs
jge
mov
dec
dec
rolb
xlat
pop
push
jmp
rcll
push
jg
enter
jbe
movd
into
cs
mov
jmp
mov
subl
pop
rcr
call
aad
xchg
int
xchg
loop
cmp
cli
int
jnp
and
dec
mov
mov
stos
pop
xchg
aas
jmp
ss
repnz
pop
pop
out
out
jbe
sub
test
loopne
fstl
pop
mov
in
pop
jbe
pop
pushf
fwait
cwtl
or
mov
xor
js
dec
or
jnp
es
add
sbbl
nop
stos
push
jbe
rcrb
or
adc
lahf
ljmp
lcall
mov
cs
xor
xchg
scas
cmpsb
pop
out
stos
jns
addr16
aad
or
cs
push
leave
stc
test
xchg
es
fisubl
fcmovnbe
repz
mov
jmp
repz
mov
dec
jp
sti
push
push
cmp
sar
movsl
scas
shrl
icebp
mov
cwtl
aas
adc
dec
add
pop
lea
loop
test
xor
mov
insb
add
sub
or
ja
push
xchg
aas
dec
pushf
jbe
js
aaa
push
in
movsb
jb
inc
push
insl
sbb
cmpl
mov
lods
pop
mov
sub
movsl
repnz
fcompl
pusha
mov
sbb
es
jp
xchg
mov
add
outsl
lahf
test
sub
aas
and
mov
add
pop
or
add
andl
sbb
scas
inc
and
mov
inc
push
xor
cmp
aad
jecxz
sbbb
xor
jns
pop
and
gs
je
jnp
repz
adc
out
ds
pop
aam
mov
xchg
in
pop
sti
lcall
or
adc
push
movsb
pop
daa
mov
aam
lcall
es
mov
xchg
fidivrl
iret
aaa
cld
xchg
sbb
dec
fidivrl
mov
stos
pusha
xor
add
fwait
aad
add
lods
ja
adc
xchg
std
pop
xchg
pop
mov
outsl
icebp
sbb
xor
pop
xchg
cmp
pop
aas
ja
mov
movsl
cs
jecxz
jbe
aam
add
push
mov
addr16
and
xchg
mov
in
shl
dec
xor
ret
mov
mov
add
mov
or
enter
cmp
fwait
jns
gs
cmp
push
int3
lods
or
mov
lods
rcr
inc
ficoml
sti
xor
cmp
sahf
es
and
adc
mov
xchg
jl
data16
lret
aad
addr16
adc
push
insb
rolb
dec
out
xor
xor
ljmp
in
outsb
sub
xchg
jp
dec
out
sbbb
mov
inc
sbb
or
test
push
imul
jge
loopne
arpl
sub
addb
fldcw
scas
jle
lock
aad
jno
mov
and
in
cmpsl
pop
push
arpl
cwtl
sbb
dec
xor
cld
dec
dec
pushf
outsb
ror
cmp
add
jnp
and
jbe
call
cmp
pop
xchg
lods
push
in
stos
cmp
xchg
inc
cltd
dec
dec
arpl
jae
push
ret
fwait
aad
jle
mov
popa
cwtl
adc
jl
repz
add
mov
fucomi
insl
and
loope
mov
dec
call
xchg
xchg
lcall
int
lahf
popa
add
adc
cmp
cwtl
push
in
call
rorl
sub
cmp
and
xorl
push
and
test
jle
lock
pop
lods
shrl
mov
shll
adc
cli
js
loope
je
call
mov
in
adc
ja
jge
insl
gs
sbb
xchg
js
inc
and
test
mov
or
jecxz
xchg
hlt
mov
mov
dec
jbe
dec
mov
dec
mov
fiadds
xchg
les
xor
int3
loopne
test
mov
mul
out
mov
or
xlat
pop
mov
push
negl
cmp
pop
ss
xorb
and
popa
jmp
jno
jns
shlb
sahf
or
or
and
in
test
push
pop
add
pop
iret
sub
pop
jbe
loopne
hlt
fisubl
roll
xchg
dec
jge
sbb
andb
flds
add
cmp
or
inc
les
cmpl
or
scas
call
push
das
sub
mov
cli
xor
inc
xor
sbb
mov
imul
xchg
das
cli
and
mov
movsl
and
cs
xor
xchg
int
int
jge
xchg
dec
aad
cs
rcrb
out
sub
mov
inc
roll
bound
fcoml
repz
dec
out
jle
jbe
dec
imul
xlat
push
cmp
mov
mov
cmp
icebp
call
xchg
xchg
sbb
mov
push
inc
pop
test
scas
lret
mov
xchg
fwait
mov
pop
jl
imul
es
aam
mov
xchg
push
ret
inc
sbb
movsb
subb
inc
fs
lcall
xchg
cmp
fs
pop
xchg
mov
lock
xchg
ret
iret
inc
mov
mov
outsl
push
ja
adc
fsubrl
adc
xchg
jp
pushf
es
stos
jno
cwtl
sbb
outsl
lcall
mov
mov
std
imul
dec
inc
in
add
loope
mov
ds
lods
stc
mov
mov
iret
out
imul
ficoml
jl
mov
fnstsw
mov
icebp
lcall
lods
dec
adc
nop
js
pop
loope
popf
fmull
cld
idivl
push
fdivl
cli
ret
push
fldcw
cwtl
outsb
cmp
pop
fisubl
fcmovnb
das
les
fnsave
gs
sub
jg
xor
frstor
cmp
fmulp
jle
adc
sarb
dec
repnz
dec
adc
push
stc
pop
sbb
call
pop
or
xor
aam
or
aaa
daa
stc
jae
ret
mov
pop
lock
cli
je
push
movsb
xor
movsb
cmp
jmp
inc
sahf
aam
rcll
inc
push
dec
rcl
call
pop
lods
xlat
jmp
and
scas
ret
popf
arpl
mov
bound
popa
jg
jno,pn
in
lret
les
pop
jb
dec
popf
or
cmp
aaa
in
sti
sbb
mov
call
sahf
test
push
test
lcall
lcall
mov
pop
mov
cmpsl
cmp
decl
mov
cmpsl
fdivl
cltd
inc
cmp
testl
in
rcr
arpl
add
cmp
outsl
jmp
dec
sub
movl
enter
mov
push
pop
mov
inc
jnp
sbb
lret
ja,pn
cmp
dec
inc
xor
push
inc
mov
rorb
les
in
dec
frstor
lods
push
sub
add
test
pop
dec
jne
loopne
mov
inc
adcb
or
inc
push
clc
mov
ret
vpminud
pop
or
push
loope
insb
pop
dec
sbbl
xchg
and
mov
xchg
pusha
xchg
mov
pop
mov
sub
ss
push
sbb
cmc
xlat
loop
and
mov
inc
shrb
adc
xor
out
jg
push
in
pop
xor
mov
pop
jo
mov
outsl
das
mov
gs
jae
arpl
mull
xchg
popf
push
sbb
push
sbb
pusha
adc
or
sbb
arpl
aam
clc
mov
pop
jne
lock
aad
jp
xor
fsubrl
ret
dec
pop
push
inc
cmpsl
pop
jbe
aad
cwtl
xchg
pop
pop
mov
iret
lret
repnz
pop
addr16
idivl
sbb
fimull
rclb
sbb
scas
xchg
aam
daa
push
jl
add
dec
mov
xchg
fwait
inc
xchg
mov
inc
sbbl
out
es
mov
sbb
xor
es
ds
pop
fbstp
push
cmpsb
jns
jmp
inc
lods
jecxz
out
sbbl
cmpsb
mov
sbb
pop
mov
daa
push
and
inc
mov
jge
push
ffreep
xor
dec
xor
xchg
xchg
push
add
test
sbb
xchg
test
jo
mov
imul
mov
mov
fldl
pop
sbb
mov
cltd
lret
stc
test
push
and
sbb
fidivrl
sbb
sbb
mov
inc
cmpsl
fsts
fcom
cmc
xorl
jmp
ss
mov
in
loope
adc
pop
dec
enter
inc
pushf
dec
in
inc
xchg
je
test
popf
popa
add
aas
cwtl
outsl
scas
das
cmpsl
arpl
sarl
cltd
inc
inc
ret
es
xor
jns
xchg
in
jbe
outsb
jmp
rol
int
mov
mov
sbb
push
add
jp
pushf
and
jae
mov
iret
cmp
xlat
mul
ror
mov
sahf
inc
out
sub
out
sub
cmpsl
mov
xchg
fwait
cmpsl
fldcw
mov
jecxz
sbb
mov
lods
enter
out
data16
scas
fyl2x
mov
cmp
aaa
mov
aad
aaa
inc
adc
jne
testb
movsb
and
mov
mov
sbb
mov
movsb
jb
push
inc
lcall
or
imulb
js
add
into
adc
adc
or
mov
or
lcall
imul
rclb
test
rcrl
les
mov
jg
push
movb
lea
xchg
loopne
or
cli
sbbl
pop
inc
push
pop
addr16
push
xchg
lret
shl
cmp
cmp
inc
push
jb
mov
ret
ds
aad
das
insb
frstor
and
ds
int3
pop
xchg
movsl
hlt
rorl
cmp
push
adcl
mov
xor
push
sahf
ljmp
subl
dec
lods
sahf
bound
hlt
ret
mov
adc
push
push
adc
movsb
je
jbe
sub
repnz
repz
ss
repz
cmp
fdivrs
sbb
stos
cld
cmp
lods
test
in
xor
lods
lds
popf
fstpt
mov
ljmp
and
cli
mov
dec
ret
pop
push
and
pop
sub
pop
mov
push
rclb
push
pop
inc
sbb
fnsave
adc
aas
dec
or
dec
mov
and
pop
scas
mov
test
xchg
pop
leave
dec
sbb
test
push
jle
xchg
push
or
xchg
mov
mov
sti
daa
mov
loop
mov
xchg
lea
adc
mov
roll
nop
aas
sbbl
sbb
mov
fnstsw
inc
dec
adc
or
out
cmp
into
imul
or
xor
xchg
and
mov
xor
fs
inc
and
lcall
iret
cmp
sub
xor
cs
out
adc
fs
jg
xchg
mov
dec
imul
fnstsw
add
push
pusha
lds
cmpsb
iret
fdivrl
int
xchg
mov
xor
pusha
push
add
push
push
loopne
ret
rorb
inc
inc
imul
mov
aaa
jne
cmp
add
and
cs
dec
sar
arpl
dec
push
mov
inc
mov
inc
mov
xor
out
inc
in
test
xor
dec
sbb
cmp
push
pushl
test
aas
xchg
out
add
icebp
jle
aas
lock
fcompl
inc
not
xchg
xchg
xchg
xchg
in
insl
lret
cmpsl
cld
mov
xchg
pushf
mov
iret
add
mov
xor
mov
push
mov
fwait
mov
clc
call
jnp
mov
sbb
push
push
pusha
gs
das
pop
and
clc
mov
or
or
ljmp
sti
add
sbb
inc
push
mov
push
mov
test
mov
jl
dec
sub
adc
cld
in
add
imul
lds
aaa
fldl
bound
push
nop
das
int
inc
ds
mov
lret
or
xchg
lock
push
xchg
jle
cmpsl
repz
and
inc
mov
outsl
adc
dec
scas
bnd
jno
push
adc
jb
insb
jns
jle
loopne
adc
jbe
sbb
stc
inc
push
mov
stos
in
add
test
and
sbbb
repnz
xchg
mov
lock
adc
es
push
outsb
mov
rcrl
mov
nop
js
jne
cmp
and
sbb
iret
lcall
inc
or
out
lahf
add
lock
inc
ret
adc
inc
lea
inc
imulb
fs
mov
loop
sub
aas
clc
std
push
push
and
loopne
jg
sub
inc
stos
data16
push
mov
fcom
loop
fidivl
inc
add
outsl
jae
dec
fnstenv
adc
repz
lds
sbb
into
cltd
jmp
loope
mov
add
or
cmp
dec
dec
call
fcmove
pop
and
mov
or
mov
hlt
ret
and
or
push
xlat
jecxz
std
js
gs
imul
out
mov
xchg
imul
inc
arpl
mov
call
xchg
fs
mov
xor
pop
jns
paddd
nop
aas
or
mov
inc
popf
mov
rolb
jo
dec
inc
jge
scas
ss
sarl
xor
outsl
sbb
lods
xor
xchg
xchg
inc
fimull
push
mov
rcrb
mov
shrl
push
jmp
dec
sbb
pop
ja
mov
addl
out
movsb
xchg
mov
jb
xor
jp
mov
push
or
cmc
jle
add
out
jmp
insl
sbb
popf
cs
jo
jns
sbb
and
jge
xor
and
test
std
fidivs
imul
pop
pop
rcrl
dec
adc
sbbb
push
adc
xchg
popa
and
or
bound
xor
add
pop
stc
mov
mov
clc
dec
push
xlat
push
in
lret
jp
jle
popa
les
lret
cmp
dec
adc
mov
loopne
in
add
outsb
push
std
push
aam
lds
jmp
mov
mov
push
add
pop
cmp
lods
mov
xor
hlt
lcall
xchg
mov
ljmp
repnz
and
faddl
sbb
lods
push
sbb
sbb
xor
pop
adc
test
arpl
and
xchg
pop
jns
adc
mov
into
repnz
repz
out
outsb
shrb
out
lahf
sarl
mov
sbbb
call
pusha
mov
fdivr
insb
or
pop
xlat
insl
mov
mov
jmp
pop
pop
cmpsl
outsb
lods
jnp
pop
cli
call
push
jns
cmc
cli
inc
xchg
insl
bound
xchg
in
cli
aam
xchg
jecxz
outsl
sub
sub
mov
xchg
push
enter
and
jge
pop
xor
xlat
insb
push
into
out
das
fldl
ficoml
into
xchg
push
xor
sahf
xchg
or
jmp
fisubrs
ret
push
cs
lds
repnz
rclb
add
push
jge
or
push
loope
push
fists
lahf
scas
jb
test
addr16
xor
add
jecxz
cmp
add
in
dec
aam
dec
sbb
cmp
pop
insl
inc
repnz
xor
lret
ss
sub
icebp
inc
call
pop
or
inc
jno
push
in
call
jb
adc
xor
pop
pop
lock
das
sub
in
lods
rcrb
rdpmc
add
rcl
sub
stos
pop
into
lods
js
xchg
cmp
pop
rcll
inc
mov
jle
imul
cmc
icebp
push
and
sti
xor
cmp
fbld
repz
std
push
mov
xchg
jb
or
lret
adc
mov
dec
mov
das
push
addl
sti
out
or
xor
dec
lret
movsb
lea
cs
dec
ret
jp,pt
add
loope
jge
sub
loope
imul
xchg
addr16
stos
std
add
push
sub
xlat
mov
pop
gs
test
and
push
jp
clc
lds
test
mov
pop
push
jnp
ljmp
repnz
or
shrl
das
cmpl
jb
js
lret
cmp
addr16
jmp
out
pop
out
call
jae
add
add
xchg
or
jg
adc
mov
mov
sbb
mov
sbb
cmpsb
in
clc
pop
imul
orb
dec
out
mov
aad
adc
pusha
rcrb
nop
lret
dec
xchg
mov
cld
fbstp
loopne
es
addb
push
lods
adc
dec
push
scas
sbb
arpl
insl
jns
xchg
std
sbb
add
pop
dec
imul
cmp
sub
out
adc
insb
rolb
and
push
xchg
add
stc
xor
out
inc
pop
push
pusha
dec
jb
inc
push
inc
mov
mov
cwtl
sbb
add
inc
or
adc
je
mov
dec
cs
pop
pop
repnz
adc
jne
dec
fiaddl
jmp
push
je
cmp
mov
jae
ljmp
jle
lcall
enter
mov
jle
cmc
xchg
sbb
push
xchg
sbb
imul
ljmp
es
pushf
insl
add
xchg
inc
imul
outsb
scas
inc
daa
mov
jl
push
mov
sarl
mov
jle
xchg
cli
sub
mov
and
jno
dec
aas
cmpsb
xchg
cmpsb
popw
ds
and
xor
add
push
pushf
es
out
shrl
pop
or
push
cmp
je
bound
inc
inc
sub
and
movsb
outsl
and
aad
cmp
call
lcall
push
add
cmp
cvttps2pi
cmc
pop
push
jnp
loopne
leave
sub
cmpsl
aaa
push
mov
pop
lret
pop
push
ss
out
adc
imul
and
sbb
inc
jp
dec
pop
mov
lods
xor
sbb
pop
movsb
inc
push
mov
inc
ret
icebp
jmp
jg
inc
dec
pop
push
adc
or
shrb
adc
xor
or
movsl
xor
loope
and
and
xchg
cwtl
lcall
pop
aaa
or
jp
fs
inc
rolb
jmp
clc
xchg
mov
or
in
mov
sbb
cs
enter
cmp
repz
pop
insb
sub
push
lret
pushl
mov
inc
test
or
adc
inc
int
mov
stc
xor
scas
ss
mov
out
and
or
not
xor
and
push
add
rcrb
rcl
pop
and
jl
push
movsl
or
mov
pop
jnp
sub
loop
push
sti
mov
or
je
cmp
loop
fdivrs
pop
out
mov
js
and
jge
loop
push
pop
cmpsl
fdivrp
push
cmc
loope
mov
or
jae
pop
lds
dec
in
cmpsb
je
repz
in
pop
iret
adc
sub
jmp
inc
or
inc
mov
out
loopne
ss
sub
adc
push
sti
jl
getsec
in
sub
xor
fisubs
inc
data16
imul
jno
xchg
or
in
xor
mov
push
mov
aam
fidivrl
cltd
mov
frstor
aas
outsb
dec
jno
outsl
iret
enter
mov
jecxz
ja
jp
lods
adc
cld
subl
mov
pop
push
hlt
cmp
mov
adc
sti
pop
arpl
jmp
addb
push
dec
xor
sbb
mov
cmp
jl
mov
enter
testl
nop
sub
lret
lcall
aaa
or
pop
xor
shll
fildll
lods
xchg
jns
dec
or
sbbl
les
pop
stc
scas
mov
mov
out
pop
jbe
adc
jne
xor
pop
xchg
hlt
sub
fs
or
int
mov
pop
fcmove
xor
popf
repz
lea
or
and
push
fisubrs
in
pop
dec
pop
add
jle
mov
jns
push
mov
mov
fwait
ret
jnp
pop
aaa
ficoms
int3
or
jb
xor
ret
out
or
leave
arpl
popf
lcall
aad
les
adc
inc
pop
outsb
mov
xlat
outsb
push
bound
mov
pushf
xchg
out
icebp
loopne
push
adc
and
dec
jecxz
hlt
std
popf
xor
fisttps
mov
dec
xor
xchg
inc
insb
int3
test
aaa
outsb
push
cmpsb
loope
aad
aam
into
push
loope
push
mov
jnp
imul
xor
sbb
mov
imul
popa
mov
add
lods
lods
jno
xor
rep
sti
xchg
mov
leave
adc
push
xor
pop
data16
cmp
nop
xor
or
gs
mov
out
mov
sahf
aad
out
cli
aad
inc
push
pop
int3
ds
pop
mov
cmp
pop
int
or
cli
or
cltd
orl
in
sbb
in
xor
push
insl
cmp
jne
clc
mov
add
rorb
xchg
push
inc
xor
mov
insb
test
xor
ljmp
push
xor
iret
add
aaa
into
das
or
dec
cli
sub
popf
ljmp
mov
shll
add
mov
outsl
ffree
insb
pop
sbb
repz
repz
mov
mov
sub
fimuls
mov
es
mov
mov
add
cs
jmp
in
mov
sub
inc
cmp
inc
sbb
insl
in
mov
mov
jmp
add
sbb
stos
fnsave
call
mov
scas
pusha
ss
mov
add
fcom
andb
mov
je
or
mov
xchg
add
pop
push
scas
jb
jle
pop
scas
jb
ds
push
test
mov
je
into
cmpsl
repnz
lahf
shll
je
imul
call
movsb
js
inc
jl
mov
xchg
loopne
dec
clc
adc
and
jg
aam
movsb
jne
std
lds
jno
and
insb
lret
mov
xlat
mov
xor
mov
mov
mov
cmc
pop
js
sahf
jle
and
mov
xchg
cld
jmp
ljmp
scas
popa
push
ret
mov
push
adc
dec
and
push
push
sbb
call
add
adcb
insb
push
adc
jae
or
int
test
pushf
cwtl
push
sbb
push
orb
movhps
inc
and
aas
out
ds
push
lahf
loope
cmp
test
adc
popa
xor
add
jecxz
mov
je
inc
dec
std
imul
outsb
int3
cmp
sbb
imul
pop
ret
cs
inc
mov
cmp
or
call
sub
sbb
hlt
insb
ds
pop
fldcw
and
scas
or
inc
inc
pop
imul
popf
mov
fmul
movsl
push
fnstsw
cmp
mov
inc
fbstp
movsb
pop
idivl
and
ret
pop
mov
notb
xor
pop
sbb
test
ljmp
xchg
lret
jnp
sbb
jno
adc
dec
mov
icebp
outsb
out
mov
xor
xchg
push
cwtl
push
add
xchg
int
mov
sub
mov
iret
leave
dec
mov
mov
push
cli
inc
lret
mov
mov
adc
cmc
jmp
je
or
inc
jmp
enter
adc
pusha
call
es
add
arpl
jg
add
adc
cmp
mov
cld
xor
fwait
mov
fisubrl
mov
insb
mov
loopne
add
adc
addr16
mov
inc
sarb
jns
push
push
adc
push
inc
inc
in
mov
pop
or
sbb
inc
and
inc
xchg
dec
fstpt
and
sbb
cli
fldln2
ficoms
inc
mov
jb
add
xchg
inc
add
and
repz
add
xchg
mov
inc
mov
pop
sub
and
sub
pushf
ljmp
cli
rorl
xor
fiadds
rcrl
outsl
pop
xchg
push
sub
pop
je
sub
icebp
loope
adc
mov
push
loopne
dec
and
cmp
pop
dec
into
sub
lds
xorb
adc
lea
sbb
mov
mov
fwait
insb
and
or
jo
ficomps
lahf
fwait
mov
xor
loop
sub
mov
push
int3
add
loop
das
sbb
enter
ret
or
push
aas
push
rcl
xchg
pop
fisubrs
ds
enter
mov
gs
aas
xchg
js
cmpsl
mov
fnsave
sbb
aam
adc
pop
repnz
pushl
in
shlb
aaa
add
out
adc
stos
ficompl
int3
mov
vpmaxsd
or
mov
mov
inc
mov
cmpsb
add
push
imul
inc
push
pop
loop
cmp
loope
jnp
sub
mov
mov
mov
out
out
dec
movsb
iret
enter
lea
ss
jmp
pop
jne
cs
sub
or
xchg
in
xchg
or
stos
lods
fwait
lret
cmpsb
push
push
mov
adc
and
inc
test
pop
sub
mov
xorb
inc
ret
leave
mov
sub
jg
pop
xchg
popa
ffreep
loopne
in
inc
mov
movsl
lret
mov
ret
movsb
or
out
je
sti
jge
dec
movsb
mov
popa
out
or
lds
sub
hlt
out
mov
aaa
xchg
pop
fdivrs
lahf
int
shrl
lcall
jns
enter
cmp
dec
scas
push
loopne
movsb
int3
mov
bound
xor
xor
adc
js
fistpll
ds
cmpsl
in
push
jl
dec
xchg
xor
mov
mov
push
mov
arpl
imul
jge
dec
or
cs
xchg
add
imul
inc
testl
popa
mov
and
shll
xlat
mov
jo
mov
xor
push
int3
pop
mov
sub
xorl
fistpll
push
repz
push
inc
lcall
xor
mov
rcll
push
lret
mov
into
sub
sub
dec
pop
lret
push
scas
popa
lods
js
jg
xlat
hlt
mov
mov
mov
nop
loope
push
sub
lods
aaa
jg
push
cli
mov
sbb
and
push
ret
mov
loope
push
addr16
add
clc
aad
arpl
adc
jg
lret
mov
and
add
cmp
out
and
inc
push
insl
fiadds
pop
popf
fcoms
inc
jg
cmc
test
lods
nop
mov
test
outsl
xor
adc
test
xchg
inc
test
mov
or
arpl
mov
add
add
mov
out
push
push
notb
mov
cmp
dec
ret
xchg
fcomps
pop
cmp
jg
popf
add
cwtl
testl
jae
lea
aaa
dec
inc
adc
jl
jo
cvtpi2ps
outsl
sahf
mov
ret
push
xchg
xor
mov
ds
out
pop
int
loope
add
jmp
xchg
inc
mov
pop
jge
jmp
clc
idivb
in
lods
lcall
repnz
pop
nop
and
cmp
shr
push
data16
jns
fwait
push
mov
sbb
xor
pop
mov
lods
aas
sub
push
movsl
pop
jne
in
mov
jo
pop
dec
movb
push
xchg
inc
out
cwtl
test
fstpl
fwait
jnp
or
dec
scas
repz
inc
imul
push
arpl
ficomps
mov
rclb
jge
rorl
mov
pop
xchg
in
insl
dec
xor
daa
dec
lret
jle
inc
hlt
mov
push
dec
add
pushf
clc
adc
loope
and
push
imulb
push
push
cmp
or
xor
imul
call
xor
in
and
je
mov
incb
stc
imul
inc
mov
loopne
out
int
sub
out
jb
imul
and
fstpl
cli
enter
jb
jno
stc
ljmp
icebp
pop
and
dec
lahf
xchg
loope
jo
xlat
push
mov
mov
outsl
scas
cmpsb
inc
popl
sub
add
add
je
movsl
cmc
lea
xor
sub
ret
test
mov
sahf
sub
xor
lret
mov
mov
and
sub
test
xchg
sahf
stos
outsb
fdivr
pop
xor
cli
out
out
bound
cmc
xchg
pop
dec
xchg
dec
outsb
adc
mov
xor
js
sbb
in
push
ss
les
adc
loope
sbb
inc
mov
push
fmulp
xchg
sbb
in
lahf
out
jno
jp
mov
fistps
cs
mov
mov
lods
xor
mov
push
xor
mov
lahf
dec
dec
ret
cs
xor
push
aas
fiaddl
pop
jbe
ds
jno
in
scas
mov
fs
in
into
ljmp
inc
dec
cwtl
jmp
xchg
in
shlb
or
ret
inc
jae
push
lahf
aam
loop
cmp
adc
adc
leave
jno
ds
xchg
and
xor
int
xchg
mov
test
sub
mov
fisttpll
cmp
push
outsb
adc
imul
ds
xchg
inc
mov
lahf
and
arpl
cwtl
nop
sub
lcall
ljmp
pop
insb
sbb
push
add
ljmp
repnz
or
out
setb
dec
jg
mov
or
int3
pusha
push
cmpsl
cmp
hlt
xchg
xchg
and
lahf
out
or
jne
mov
jb
and
adc
cmpsb
mov
inc
test
bound
mov
pop
mov
jmp
mov
or
jl
xchg
and
mov
push
push
lods
ljmp
ljmp
rorl
push
addl
aad
adc
ret
into
or
and
sbb
mov
loope
dec
xchg
cmc
insb
mov
mov
aad
stos
shrb
dec
ljmp
xchg
mov
xchg
mov
xchg
in
xchg
sbb
jbe
adc
and
sub
aas
mov
dec
popa
or
fwait
insl
push
movsb
inc
push
subb
mov
out
shlb
push
xchg
daa
in
push
pop
in
lea
and
cmp
xor
sahf
sub
addr16
int3
mov
mov
dec
jmp
xchg
cmpsl
icebp
sub
cmpb
pop
insb
dec
jge
mov
inc
and
dec
add
adc
cmp
jnp
fucomip
mov
xor
fistl
rolb
add
in
sub
test
ja
leave
mov
xchg
repz
sub
sub
xchg
mov
mov
sub
sbb
mov
pushf
fldcw
lods
mov
iret
iret
xchg
mov
aad
and
jecxz
push
lods
and
pop
clc
je
pushf
aam
push
mov
xor
mov
pop
je
adc
adc
add
jmp
mov
arpl
inc
icebp
xor
push
outsb
pop
fists
cmp
leave
lcall
jle
mov
loop
inc
roll
mov
and
lods
xor
lcall
insl
dec
sub
notl
cmp
icebp
arpl
faddl
cmp
daa
jne
mov
in
cmp
mov
in
jns
xor
jns
mov
gs
leave
mov
jge
adc
push
inc
mov
in
lahf
fstpl
popl
mov
addps
mov
iret
add
ret
rorl
and
push
sbb
gs
cmpsl
leave
lds
mov
mov
jmp
pusha
cmc
mov
inc
cwtl
and
stos
js
imul
jge
in
jge
push
icebp
xchg
iret
es
in
lds
je
pop
mov
aas
inc
pop
push
adc
add
jecxz
pop
stos
dec
testb
outsb
and
out
jg
cmpsl
call
stc
inc
or
inc
mov
dec
bnd
push
inc
mov
jmp
popa
xchg
mov
stos
sahf
sbb
jns
sub
dec
adc
sub
adc
sub
dec
idivb
mov
scas
sti
nop
xchg
pop
adc
sbb
add
imul
sub
in
ret
xlat
addl
mov
cmpsb
movsb
sub
das
inc
hlt
into
pop
call
repnz
cmp
sub
stc
jne
outsb
mov
xchg
in
add
xor
cld
and
mov
jo
xchg
cmc
push
aaa
or
fldenv
loopne
push
sbb
call
cmp
mov
stc
lds
fadd
push
mov
add
dec
lock
xchg
mov
or
sub
dec
or
or
dec
incl
ss
dec
insb
mov
push
in
pop
fwait
shlb
dec
jno
xchg
push
dec
cmpsl
xchg
nop
adc
mov
mov
in
icebp
adc
adc
out
lock
fadds
jle
fcmovb
bnd
cmp
rorl
sti
dec
jle
mov
xor
out
cltd
mov
fildll
add
add
dec
lods
push
scas
stos
sbb
or
sti
jns
mov
movsb
dec
repnz
loope
and
lret
lahf
inc
push
inc
mov
xchg
in
dec
mov
aas
sub
lods
ficoml
pop
mov
dec
lods
lret
jno
cwtl
adc
ret
jne
dec
lret
mov
lods
add
jge
adc
ret
std
mov
cwtl
dec
clc
insl
sub
push
aam
dec
shrb
push
or
xlat
sbb
cmp
test
out
sbb
pop
rorb
out
xor
sahf
mov
or
mov
das
addr16
lods
adc
jns
into
or
in
push
aas
imul
xor
jmp
lret
gs
pop
nop
push
or
mov
xor
js
push
dec
addr16
pusha
or
sub
test
in
mov
and
ja
dec
adc
sbb
xchg
or
in
mov
loope
push
adc
addr16
mov
cld
sub
out
mov
mov
shlb
cmp
or
lods
xor
dec
iret
mov
xchg
cltd
int
xchg
aad
aam
stos
adc
xor
repz
xor
stos
mov
sub
decl
fdivs
mov
lods
ret
inc
inc
cmpsl
pop
mov
mov
std
push
adc
jp
push
mov
jne
mov
inc
push
jle
or
out
loope
cmp
or
mov
test
and
pop
scas
sbb
insb
cmp
inc
stc
out
xor
dec
xchg
sbb
je
mov
fwait
shrl
out
mov
add
inc
mov
xor
call
inc
fwait
or
lock
dec
cmp
mov
mov
into
pop
or
jl
leave
sub
loopne
adc
pop
cltd
adc
hlt
sbb
orl
dec
xor
ret
addl
repnz
add
pop
cwtl
pop
push
test
les
xchg
std
mov
or
dec
add
and
fdivs
sub
or
inc
inc
adc
movsb
add
add
adc
xchg
testl
xor
aad
mov
xor
std
sub
dec
inc
sahf
insb
xor
inc
test
xchg
outsl
or
dec
rclb
scas
mov
lret
cli
out
or
arpl
fimull
lret
loope
jmp
jp
mov
ss
push
les
push
data16
xchg
fiadds
and
into
jl
jae
dec
icebp
addr16
mov
insb
pushf
mov
xchg
lcall
sub
xor
adc
stc
call
pop
mov
sbb
sbb
push
dec
adc
xchg
add
push
cmpsl
jae
jl
jg
and
inc
xchg
mov
or
ficoms
je
subl
pop
out
sbb
cs
insb
popf
les
pop
xor
ficompl
dec
fldcw
push
dec
scas
aad
js
rcrl
push
xchg
sahf
xchg
icebp
in
jle
gs
scas
jle
jmp
out
test
stos
movsb
fcoml
dec
push
or
jnp
test
rolb
arpl
xor
or
cmp
mov
push
js
add
das
hlt
js
mov
cli
adc
xor
adc
test
or
out
arpl
hlt
imul
inc
mov
xor
leave
sub
add
les
adc
outsl
jle
push
push
or
pusha
push
cmp
jmp
es
inc
pop
jl
push
data16
add
push
sub
std
lods
push
sbb
or
dec
mov
aaa
mov
pop
jb
nop
scas
jp
jns
cltd
outsb
aam
xlat
int
sub
fwait
movsb
sbb
mov
icebp
int3
popf
test
imul
adc
mov
aad
out
popa
sbb
xchg
lock
std
dec
lret
lock
dec
xchg
cld
sti
inc
adc
movsl
mov
or
add
icebp
ja
mov
ret
imulb
mov
dec
sbb
cmp
mov
leave
aas
jg
lcall
fcompl
jnp
fisubs
mov
jno
push
dec
xor
iret
xlat
mov
cmp
pop
cmp
jl
pop
sub
add
aad
imul
gs
xchg
xor
or
adc
out
notb
jmp
addr16
and
enter
adc
dec
inc
pop
mov
mov
flds
jecxz
gs
xor
pop
sub
ret
test
stc
push
in
popa
jle
fwait
push
popa
insl
or
dec
sub
ss
and
cwtl
or
or
les
xor
shll
into
and
je
idivl
fistl
out
jbe
push
jae
pushf
in
shlb
jbe
inc
in
pop
shlb
in
out
mov
push
mov
out
lds
out
repz
sbb
fldcw
insb
push
xor
inc
leave
mov
nop
mov
sub
lods
push
clc
mov
imul
fwait
popfw
ds
jg
mov
aaa
mov
mov
mov
repz
ret
push
leave
orl
inc
inc
imul
jl
pop
sahf
inc
mov
rol
xor
and
lret
leave
jb
xchg
loope
and
js
inc
in
lahf
insl
hlt
cld
adc
movsb
jae
cli
and
xchg
fimull
adc
push
orb
rcrl
outsb
jmp
dec
and
pusha
lods
jo
mov
stc
xchg
mov
dec
and
orl
leave
in
sbb
fnsave
cmovae
cmp
pop
inc
movsl
aad
add
faddl
daa
or
mov
pop
or
fcoml
mov
in
fs
dec
lea
inc
mov
pop
loop
adcb
cs
sbb
icebp
outsl
negb
arpl
cmp
cwtl
jecxz
pop
xchg
sbb
push
iret
jg
xchg
lcall
mov
popa
mov
pusha
pop
pop
dec
repnz
cs
in
sub
imul
inc
or
test
or
sub
cmpsb
mov
fisubrs
stos
hlt
mov
add
lret
and
out
rcll
out
cmp
xor
push
shrl
popf
mov
movsl
dec
in
jmp
xor
imul
shl
sub
inc
mov
jge
sarl
dec
lret
in
cmc
pop
mov
adc
mov
aas
stc
mov
jmp
push
dec
and
lcall
loopne
out
or
out
pop
mov
fs
push
inc
fidivrs
pop
sbb
and
out
xor
data16
adc
push
xchg
aad
fadd
push
dec
stos
push
adc
into
lret
pop
cwtl
push
je
orb
fcomps
sbb
push
sub
push
jp
test
cltd
dec
lret
push
xchg
mov
int3
add
fiadds
xor
pop
imul
out
jbe
jb
lods
ja
stos
push
jbe
aas
enter
mov
mov
out
clc
sbbb
cltd
mov
in
insl
and
push
and
push
ficoml
jno
mov
lcall
sti
dec
fimull
sbb
test
scas
cmp
mov
push
sub
cmp
and
lods
xchg
sbb
xchg
xchg
add
xor
mov
stos
int3
xor
and
push
gs
test
sbb
jp
jae
scas
ss
or
pop
or
aam
sbb
mov
push
mov
add
xor
push
loopne
push
add
pop
sarb
push
mov
pop
fsts
cwtl
push
pop
pop
fnstenv
imul
mov
mov
loope
mov
bound
jnp
xchg
shl
jbe
ja
adc
pop
dec
stc
out
out
loope
add
int
jle
cld
scas
loope
imul
add
push
adc
ljmp
dec
lods
outsw
dec
leave
in
pusha
fs
cmc
pop
pusha
jb
outsb
pop
fs
in
sbb
push
jl
jge
aam
data16
push
cs
fstp
inc
jno,pt
cmpsb
lods
sub
sbb
adc
movsb
sbb
imul
fs
sahf
push
aad
sbb
test
xchg
jae
cmpsl
mov
int3
sub
xchg
or
sub
inc
mov
jle
adc
cs
ss
sahf
enter
mov
pop
fcmovnb
decl
in
or
xor
cmpsl
adc
out
addr16
mov
lcall
xor
pop
dec
xchg
lock
nopl
pop
sbb
dec
stos
sbb
cs
xor
adc
fidivrs
daa
js
daa
push
daa
mov
mov
jnp
loope
dec
xor
popf
sahf
js
popf
fistps
jmp
sarb
jge
mov
push
add
pop
pop
adc
pop
xchg
nop
in
push
sar
sub
das
pusha
push
popa
insb
bswap
out
out
test
xchg
or
pusha
mov
addb
pop
xchg
cld
or
repz
lcall
push
subb
icebp
pop
sbb
fidivl
push
cmpsl
mov
pop
in
lcall
adc
icebp
popf
mov
popa
enter
lds
movsl
adc
dec
inc
push
mov
add
movq
push
mov
xor
xchg
xorl
and
lock
mov
add
inc
stos
jle
mov
daa
pop
pusha
les
sbb
bsf
mov
clc
jp
mov
insl
stos
lcall
push
notb
xchg
ret
cmp
xor
inc
xchg
out
es
xor
mov
push
sbb
je
lods
jg
sahf
sub
add
cmp
ret
push
mov
test
mov
pop
push
push
push
out
outsb
es
jbe
lcall
mov
outsb
and
pop
enter
mov
mov
cld
xor
in
arpl
orb
fldt
push
stos
mov
lret
sbb
pop
pop
sub
out
add
inc
notl
jle
sub
push
pop
add
out
xor
int
popf
dec
xor
repz
dec
daa
cld
ds
stos
sub
mov
push
adc
lcall
in
mov
in
inc
push
cmp
adc
fsubs
js,pn
cli
add
into
xor
daa
nop
add
out
cld
sub
jmp
sub
push
xchg
int
add
dec
push
pop
loop
and
jmp
std
pop
int
arpl
out
sbb
sub
push
mov
fldcw
dec
andl
daa
lock
sbbb
mov
mov
cmp
sbb
xor
out
jg
cmpsb
fs
test
jge
xchg
mov
jb
inc
imul
or
sti
fdivs
aaa
adc
sub
nop
push
adc
push
das
movsl
jns
jmp
dec
push
dec
lahf
dec
mov
loope
inc
mov
cmp
push
cs
push
pop
and
adc
clc
sub
mov
shll
add
or
jbe
insl
int3
jne
cmp
xchg
jb
loopne
pop
adc
lret
stos
mov
out
test
fdivp
and
scas
cs
scas
loope
and
xor
inc
dec
out
lea
and
decb
rcl
subl
xchg
inc
mov
movsl
data16
shlb
cmp
gs
icebp
inc
repnz
gs
sub
mov
and
mov
rol
es
fisttpll
in
testl
out
sub
insb
xchg
subb
jle
icebp
jge
js
dec
call
pop
push
and
orb
lods
or
cmpsb
mov
add
xor
cmp
xor
and
sub
cmpsb
pop
das
mov
jbe
jl
mov
out
in
dec
inc
fstpl
sbb
sar
cmp
loopne
xchg
push
stos
int3
push
xor
xchg
clc
pop
mov
addr16
adc
xor
mov
daa
dec
xchg
adc
std
aaa
sti
repz
mov
das
arpl
sarl
dec
xsavec
xor
xchg
jecxz
cmovl
mov
mov
mov
mov
push
nop
or
insb
push
mov
test
xor
mov
pop
jbe
mov
lods
cwtl
sti
push
dec
ljmp
push
sti
push
mov
ret
adcl
or
jnp
mov
adc
xchg
pop
in
mov
mov
jne
push
mov
xchg
shr
mov
pop
jl
xchg
add
mov
hlt
cs
adc
pop
xor
xchg
mov
mov
lods
sub
lcall
stc
or
or
nop
jo
inc
and
ret
out
xchg
test
and
rorb
sbbl
and
xchg
push
daa
xchg
clc
test
and
stc
movl
mov
ss
inc
inc
ret
xor
fdivrl
sbb
cltd
mov
mov
mov
cmpsl
dec
subl
clc
movsb
enter
loope
std
push
sbb
and
sbb
dec
dec
popa
pop
pop
or
aaa
ljmp
enter
pop
dec
fisubl
jle
jns
subb
xor
mov
sahf
in
lcall
push
and
fiadds
orps
mov
in
fisttpl
xor
push
iret
loopne
adc
push
add
mov
push
mov
inc
outsb
clc
pop
or
push
lret
xchg
jb
inc
lcall
push
inc
inc
clc
sub
xchg
xchg
add
imul
push
dec
xchg
mov
mov
jge
jle
inc
ljmp
pop
mov
sub
push
imul
insl
adc
xchg
mov
orb
or
push
lcall
loope
sbb
jno
and
lock
int3
xchg
sahf
xor
ret
jl
cwtl
hlt
vshufps
clc
xor
fcmovne
addr16
cwtl
das
fisubs
adc
xchg
dec
out
in
stos
mov
pop
cli
icebp
ret
mov
xchg
aad
dec
push
mov
dec
lods
lret
mov
pop
sub
xchg
push
dec
push
xchg
iret
jnp
insl
jg
repnz
mov
inc
xlat
mov
mov
mov
adc
iret
cmpsl
pop
mov
ljmp
mov
add
lea
stos
shrb
cmpsb
mov
mov
negl
jg
inc
xchg
cmp
pop
jns
jno
fistpl
add
or
jbe
xchg
repz
int
push
add
jo
aam
mov
js
mov
aas
push
or
sub
push
push
push
popa
push
js
cmp
add
sahf
inc
sti
nop
cmp
mov
les
sub
cld
rcrb
jb
xor
movsb
addr16
pushl
scas
or
and
mov
and
cltd
pop
push
cli
repnz
xchg
test
lret
loope
jae
push
pop
ss
mov
xchg
leave
popa
int3
mov
fwait
sub
data16
mov
mov
into
fs
push
frstor
lea
mov
pusha
cmp
dec
sbb
scas
mov
gs
mov
add
inc
or
or
shlb
pop
pop
cmp
jl
xchg
loope
push
in
out
xchg
std
xchg
fnstenv
mov
loopne
pop
sub
cmp
jg
shlb
inc
aas
jecxz
enter
dec
popa
push
incl
push
test
or
xchg
das
arpl
clc
addr16
in
loopne
inc
push
and
sub
and
mov
dec
sub
daa
aas
sub
jbe
test
inc
enter
xchg
sub
and
ret
repnz
in
jg
dec
das
jecxz
inc
sub
out
jl
dec
adc
cmp
mov
jge
cmpsb
jb
aaa
sub
in
mov
loope
iret
lock
dec
cmp
bound
insl
pushf
fldcw
add
cltd
out
sub
lcall
cmc
cli
mov
xchg
and
not
shrl
sbbl
rcr
mov
push
and
mov
mov
addr16
arpl
mov
add
mov
hlt
sbb
leave
cwtl
push
rclb
xchg
aam
stc
lahf
adc
mov
mov
push
adc
xchg
in
ljmp
ret
adc
pop
ljmp
or
mov
mov
adc
popa
mov
sbb
mov
das
mov
mov
cwtl
and
jecxz
dec
shr
ret
cmpsl
or
sbb
std
sbb
xchg
and
pop
sti
icebp
pop
lret
mov
popa
mov
sub
add
js
fdivs
pop
clc
mov
push
arpl
lock
stos
lcall
push
jmp
xor
sbb
sbb
fidivrs
xchg
adc
or
leave
cmp
push
fmull
movsb
xchg
xlat
mov
jae
popf
lret
inc
fistpll
jo
or
outsb
pop
lea
pop
mov
xlat
mov
in
test
fstpl
imul
cmc
mov
js
dec
xchg
cwtl
test
jp
es
add
push
add
and
pop
mov
test
nop
in
lahf
pop
push
xor
push
add
pop
popf
addr16
pushf
cmp
int3
aaa
out
fnstsw
pop
mov
cmpl
icebp
add
pop
mov
insb
int3
xchg
xchg
dec
jne
daa
imul
lea
out
outsb
data16
jno
sub
and
mov
or
aad
repz
inc
fbstp
push
jmp
test
pop
cmp
xor
rcr
pop
xchg
pop
mov
xchg
cmp
mov
jge
sahf
adcl
sub
push
sbb
push
pop
sbb
pop
inc
push
cmp
test
fs
in
sub
pushf
add
aad
sub
sbb
mov
cmpsb
rolb
mov
mov
and
jp
xchg
shr
xchg
inc
outsb
cwtl
outsb
movsl
inc
imul
div
aaa
out
mov
xchg
imul
sar
scas
sub
leave
xor
scas
sub
cli
mov
aas
or
dec
push
sub
loop
dec
pushf
shlb
std
jb
dec
dec
push
xchg
jns
adc
cltd
sub
jo
xchg
and
jbe
dec
add
scas
and
inc
pop
mov
scas
jmp
subl
popf
mov
insl
jo
mov
push
inc
faddp
pop
sti
xor
cmpsb
xor
pop
sub
xor
mov
cmc
xchg
mov
cmp
xchg
gs
xchg
sub
std
mov
lock
or
pop
int
lds
push
mov
sbbb
or
mov
add
mov
xor
test
stos
jp
push
xor
loope
jge
ret
push
mull
dec
clc
lods
xchg
insl
push
cmovnp
fcmovb
xchg
sarb
jno
cmp
push
xchg
pop
push
adc
cmp
stos
jp
or
mov
xor
mov
ficoms
aad
dec
push
xlat
jle
adc
add
pushf
fildll
push
push
sti
aaa
xchg
mov
loope
dec
pushf
and
call
int3
cld
adc
enter
xchg
add
enter
cmp
clc
outsl
mov
jno
xchg
dec
mov
dec
xchg
push
push
cltd
es
adc
jo
lock
pop
lret
gs
mov
pop
pop
mov
mov
and
push
fbstp
mov
jmp
jmp
fwait
mov
nop
sbb
inc
pop
mov
jecxz
pop
and
mov
shrl
stc
cltd
cmpsb
js
mov
mov
lock
xor
lock
and
mov
ljmp
cmp
mov
aam
add
sti
sbb
pop
xor
fsubrl
popf
mov
xchg
or
daa
fistl
sbb
pop
sub
data16
insb
cs
test
push
sub
mov
xchg
imul
insb
lret
pop
xchg
push
data16
pop
shll
mov
push
jnp
std
push
stc
push
sbb
outsl
icebp
and
xchg
outsl
mov
popa
loop
das
sub
xchg
or
sti
pop
roll
repz
add
ljmp
push
rorb
sar
stos
mov
out
or
mov
gs
xchg
add
popf
lret
mov
jg
test
movsb
pop
cld
pop
ds
test
andl
xchg
lret
dec
loopne
sti
cs
shrl
lock
cmpb
mov
xchg
pop
out
cli
lea
das
jge
pop
xor
roll
stos
fwait
scas
lret
sub
or
jbe
push
sub
std
andl
sub
mov
and
sub
add
fbstp
cmp
stos
pop
xor
lds
loope
out
push
sar
jmp
cmc
jge
fsub
lea
xchg
in
mov
and
jae
pushf
gs
pop
xchg
xor
or
clc
test
or
shr
jo
push
adc
inc
dec
mov
icebp
scas
out
pop
push
mov
js
adc
loope
jmp
mov
lret
shrb
adc
in
or
pop
ds
inc
adc
mov
or
stos
jecxz
jo
mov
icebp
je
inc
mov
inc
icebp
cmp
pushf
cmp
mov
cmp
mov
sbb
cwtl
aad
cmp
mov
ja
pop
cld
and
jl
lret
aas
or
pushf
jmp
arpl
sub
call
jmp
sbb
imul
bound
adc
imul
add
sbb
push
hlt
mov
mov
fidivl
inc
popf
xchg
iret
pop
push
add
int3
adc
mov
nop
xchg
jo
sub
cs
out
fbld
xchg
fbstp
ja
pop
inc
dec
sub
jg
mov
test
testb
fsubs
pop
adc
stc
inc
dec
mov
stos
das
test
sar
pop
or
jne
or
mov
aaa
rcl
insl
add
mov
and
and
or
xorb
pop
adc
sub
or
jns
cwtl
test
push
addr16
test
notl
mov
mov
cwtl
jns
xor
and
mov
adc
sbb
ficomps
mov
inc
pop
mov
ljmp
add
mov
imul
mov
cwtl
out
insb
sti
movsl
stc
inc
xor
xor
ss
xchg
sbb
or
frstpm(287
push
mov
out
lret
aam
push
fisttpl
fstpt
mov
jl
pushf
enterw
mov
jmp
jecxz
in
dec
cmp
test
push
outsb
movsb
test
or
jo
add
add
in
and
and
sub
pushf
pushf
daa
push
inc
enter
push
cs
add
fcoml
and
in
les
add
pushf
add
mulb
pop
push
sub
imul
and
and
mov
mov
sbb
inc
mov
test
inc
mov
dec
xor
and
xchg
test
adc
push
mov
mov
push
or
mov
ja
inc
ret
mov
call
das
jmp
cld
xlat
mov
xchg
pop
jo
xchg
lahf
insb
inc
movsb
ret
outsl
hlt
aaa
mov
mov
rclb
xchg
and
repz
mov
notl
fmull
test
mov
xorl
mov
shlb
test
out
mov
lahf
popf
xor
nop
fbstp
pop
cmp
out
into
cmpl
out
mov
in
bound
xlat
out
mov
cmp
cmp
lahf
sti
out
jge
js
pop
nop
loopne
cmc
out
data16
mov
mov
in
cwtl
mov
out
xor
fmul
mov
push
xor
fistpl
test
icebp
testb
mov
fxam
inc
lret
arpl
jne
mov
loope
and
and
mov
ja
mov
sbb
mov
and
mov
jo
lea
rclb
cmc
into
scas
sub
sub
dec
lock
push
xorl
imul
mov
push
inc
iret
je
mov
fisubrs
mov
ja
fmull
or
mov
repz
repz
dec
jle
jl
cmpsl
repnz
dec
adc
insl
sbbl
clc
adc
lods
mov
nop
dec
push
xlat
repz
daa
das
icebp
mov
movb
fs
jp
cmp
adc
shrb
push
mov
fistpll
mov
sbb
jp
daa
in
sbb
hlt
sbb
sbb
cmp
inc
sub
add
mov
pushw
out
scas
xchg
cmc
popf
shll
push
lds
mov
dec
stos
xor
lret
and
cmp
cwtl
adc
imul
jl
or
jo
xor
movsb
push
xorb
xor
aad
adc
mov
inc
adc
push
and
or
dec
mov
xchg
sahf
repz
pop
xlat
adc
fwait
jle
enter
aad
sbb
sti
mov
mov
cli
cmpsb
push
jbe
push
int
pop
jge
popf
jle
sarb
inc
cld
mov
stc
imul
and
adc
mov
out
add
mov
aad
faddp
clc
mov
adc
adc
and
sub
testl
icebp
jbe
mov
and
jge
cmp
lret
mov
xor
mov
xor
dec
jl
jb
cs
test
lods
ret
push
out
out
scas
sbb
sub
push
or
mov
sbb
cmpsl
adc
push
cmp
sti
push
xchg
adc
xchg
je
mov
and
mov
outsl
aad
xor
outsl
sbb
es
mov
sbb
in
aad
cli
jge
imul
sbb
pop
mov
adc
mov
ret
mov
jl
flds
rcr
add
sbb
fcoml
cmp
mov
mov
out
ret
inc
stc
jns
jns
pop
insl
jno
out
dec
ja
dec
and
shrl
leave
dec
cmpsl
js
outsl
icebp
cmc
popa
dec
push
push
outsb
in
sub
leave
jo
push
sub
std
push
stc
enter
ja
sbb
rcrl
xor
lret
sub
sub
adcl
repz
cs
lock
or
lahf
ret
push
inc
adc
xor
pushf
mov
movsl
push
adc
jmp
fildll
xabort
outsl
ss
std
jg
sbb
jne
pop
pop
mov
ljmp
cmp
test
mov
xor
sti
add
mov
sahf
int3
add
cmpsb
cmp
mov
in
clc
rolb
ret
pop
ret
dec
int
xlat
xor
dec
adc
loopne
inc
pop
addps
fdivr
push
mov
jmp
inc
inc
pop
add
add
adc
rclw
inc
ret
inc
pop
cltd
cmp
adc
enter
pop
sub
mov
sahf
lds
enter
insl
xor
xor
mov
imul
xchg
pop
mov
pop
subb
and
push
popa
cmc
push
push
test
add
shl
fnstenv
lea
lret
pop
mov
and
fidivs
out
popa
imul
jg
xchg
scas
loope
pop
pop
mov
sbb
loop
cmc
mov
rorb
pop
adc
push
sub
add
inc
add
xor
jae
ljmp
rclb
cmp
adc
cltd
ds
ret
mov
lock
lret
and
scas
dec
xchg
jb
mov
dec
and
lret
cmp
test
test
enter
or
mull
cmp
das
and
or
out
mov
jb
push
imul
fistpl
lock
mov
adc
out
or
jge
pop
mov
jae
popa
xchg
fdivs
stos
imul
xchg
pusha
test
xor
cs
push
cmc
add
shrl
nop
jmp
dec
ds
repz
pop
push
mov
mov
shll
data16
sbb
or
pop
popf
or
and
lret
xor
das
inc
cmp
pop
in
cltd
pop
mov
lcall
pop
fwait
mov
push
mov
adc
repz
movsb
inc
popa
shl
mov
ret
sub
push
in
test
or
jne
nop
neg
mov
fsubrl
sahf
or
cmp
int
lahf
fwait
and
insl
sarb
out
or
jmp
inc
int
jmp
jns
pop
adc
adc
icebp
ljmp
fs
xchg
xor
push
mov
mov
loope
mov
mov
mov
mov
sub
jae
inc
stos
aaa
jl
js
shrl
xchg
or
rcrb
addr16
fs
pop
jge
push
add
pop
cmp
std
stos
mov
mov
adc
inc
sub
jo
lahf
inc
mov
sub
xchg
mov
lret
nop
sbb
sub
addr16
push
cmp
cmpsb
pop
psadbw
dec
and
int3
insl
cmp
aad
aas
jo
xchg
push
sub
aaa
mov
pop
push
ja
rcrb
cmpb
jo
pusha
pusha
xchg
rcr
add
mov
cmc
sbb
cmp
insb
xchg
into
push
mov
stc
adc
leavew
int
mov
mov
cmp
arpl
movsb
dec
cmp
jbe
push
xor
lret
jecxz
mov
jbe
mov
or
lret
out
jbe
es
stos
mov
pop
push
and
fstps
leave
call
mov
jl
jae
push
je
sbb
arpl
rcrb
test
sub
mov
imull
ret
lods
push
es
inc
fidivl
int3
push
lds
bound
sbb
and
add
icebp
lea
cwtl
push
addl
sbb
pop
rcrb
cmp
cli
mov
movsb
dec
loopne
adc
cltd
mov
xchg
push
pop
cmp
mov
test
aaa
fsubp
imul
data16
rcll
out
iret
mov
jo
sub
enter
dec
dec
adc
add
sbb
in
adc
aas
inc
loopne
fwait
in
das
popf
sbb
mov
adc
jns
test
and
dec
ljmp
sub
dec
imul
cwtl
aaa
fimuls
mov
stos
mov
mov
jno
mov
mov
les
xlat
inc
pop
push
and
cmp
bound
or
cwtl
cwtl
xorb
shll
mov
cli
adc
mov
out
fbld
mov
hlt
push
mov
and
push
fwait
stos
xchg
stos
aas
cmp
push
outsl
pop
jbe
nop
push
lahf
cmp
dec
out
add
imul
scas
push
cltd
test
pop
arpl
dec
or
or
icebp
pop
add
icebp
dec
mov
les
loopne
cltd
lret
add
inc
call
jns
sub
les
sub
xchg
push
test
fs
cmp
sub
sti
push
fdivrp
jp
cmp
pop
mov
insl
int
or
lahf
push
pop
test
xchg
adc
outsb
pop
mov
mov
aas
push
in
push
jo
data16
lret
pushf
cmpsl
jns
rcrb
ret
push
out
cmc
lret
jl
mov
push
std
mov
fstpt
aam
int3
ss
mov
push
sub
cmpsl
mov
aas
mov
cmp
mov
daa
lret
sbb
mov
scas
shlb
push
mov
xchg
add
stos
jb
xorb
fcmovb
adc
in
xchg
int
sbb
push
push
sti
aas
cwtl
lds
iret
sbb
mov
out
cli
mov
stos
mov
push
lret
and
xchg
sub
mov
add
jbe
test
icebp
cmp
es
xchg
pop
hlt
movsb
int3
add
aas
sub
stos
scas
in
mul
bound
xlat
push
iret
lds
sub
pop
mov
pop
sbb
cmc
or
mov
or
insl
jno
lock
pusha
mov
mov
jmp
stc
in
mov
sub
lods
xor
jg
test
sub
xchg
test
lret
jg
dec
cmpl
adc
testb
aad
nop
ja
sub
jl
out
fnstenv
mov
fmuls
lahf
fiadds
dec
xchg
push
test
pop
cld
pop
cmp
outsb
add
call
mov
add
loope
xor
paddusb
xchg
cld
into
xchg
nop
adc
xor
pushf
int3
aad
adc
xchg
push
notl
adc
les
xchg
sub
cltd
push
add
xor
pop
enter
lods
icebp
lods
aad
test
xor
outsl
pop
mov
mov
dec
mov
stos
adc
or
mov
rorl
push
xchg
jb
out
pop
je
sti
test
ja
rclb
pushf
stos
sbb
or
push
mov
xchg
sub
sub
fsubrl
shlb
or
xor
popa
scas
pop
ret
add
or
jns
jae
mov
add
sahf
fsts
dec
lods
int3
aam
pop
push
xchg
outsl
cmpsb
fmull
mov
or
jno
ds
mov
mov
xchg
jl
int
or
push
mov
mov
sub
xchg
insb
test
pop
mov
cmpsl
jle
or
std
int3
sub
xchg
mov
gs
and
in
int3
push
popf
movb
or
dec
scas
mov
hlt
insb
mov
mov
aad
xchg
mov
mov
sbb
cmc
push
jbe
pusha
fldenv
adc
sahf
mov
sbb
cmp
or
mov
lcall
ss
inc
rolb
mov
cwtl
add
test
test
or
repz
gs
mov
data16
adc
imul
out
push
lods
xchg
es
sti
fwait
ljmp
fimull
outsl
lock
push
sub
mov
push
adc
jae
and
mov
cmc
pushf
push
movsl
push
and
addr16
push
into
lret
fstpt
lock
dec
ja
hlt
jl
mov
xor
mov
pop
dec
aaa
int
jno
movsl
out
xlat
xor
push
js
cmpsb
sbb
inc
hlt
sbb
mov
call
out
jmp
out
cmp
and
shrl
inc
adc
ror
jecxz
mov
cs
cmpsl
mov
inc
shll
ja
aad
aas
and
fs
jg
test
mov
movsl
fisubrs
mov
dec
shll
mov
fwait
sub
jo
int
sbb
or
shlb
out
stos
jl
dec
outsb
setl
xchg
hlt
dec
xchg
rclb
sbb
cs
sub
xor
lret
dec
jg
lods
xor
adc
inc
imul
push
fidivs
out
das
jg
repz
jb
stos
cmpsb
insb
lock
sbb
xchg
jae
cmpsl
pop
sub
test
mov
sub
add
sbb
jle
or
pop
andb
rolb
cmpsb
xor
loop
lahf
mov
jmp
cmp
pop
or
pop
jnp
xor
and
adc
dec
clc
xor
cwtl
das
fistps
fisttpl
cmp
cmpsl
push
push
mov
cmpsb
pop
cli
or
xchg
jmp
dec
mov
fs
rclb
mov
dec
inc
push
sub
fisubl
lods
aam
dec
jo
icebp
xor
fisubrs
das
rorb
add
and
orb
rcl
les
in
jns
out
sahf
pop
lds
out
stc
out
lock
outsb
adc
ljmp
sub
add
push
or
sub
rorl
mov
pop
les
bound
scas
push
jno
sti
adc
js
ja
lock
in
or
pop
and
shl
xchg
xchg
or
sbb
loopne
rcrb
or
add
out
out
in
outsl
adc
xor
jns
ljmp
xor
negb
lods
add
ss
shlb
imul
in
stc
out
jbe
add
mov
sub
loope
sub
cmp
std
fldl
ret
xchg
xchg
lcall
and
inc
pop
out
mov
sub
sbb
mov
dec
ret
hlt
pop
cld
inc
icebp
and
jns
and
mov
mov
jp
adc
mov
movsl
loop
ret
cmpl
fisttps
push
andnps
push
push
cld
rorl
sbbb
fsts
mov
das
and
cmpsb
jns
out
xchg
xor
std
add
mov
mov
inc
imul
mov
imul
dec
inc
es
lods
xor
in
jl
or
jmp
add
push
and
in
xor
inc
test
stc
repnz
push
pop
push
arpl
sbb
aaa
push
xchg
into
rcrl
xchg
dec
arpl
and
mov
and
in
or
lock
testl
sub
add
pusha
adc
into
sub
rorb
mov
shrl
sub
xchg
sbbl
sbb
jl
out
pop
and
in
stos
int
addr16
cmp
lret
ficoml
adc
out
pop
hlt
sub
mov
push
cs
movsb
add
into
repnz
icebp
insl
xchg
mov
xor
clc
in
lea
sub
dec
mov
cmp
dec
fcomip
sbb
sub
xchg
and
fildll
pop
xchg
movsb
push
test
inc
add
dec
in
adc
sbb
mov
xchg
adc
rclb
push
test
adc
add
addb
xchg
scas
sub
lret
das
dec
or
adc
mov
rolb
mov
cmp
subb
sbb
cmp
loop
sbb
mov
lea
mov
mov
xchg
push
insl
ficoms
mov
pop
dec
and
push
inc
test
arpl
mov
cmpsb
sbb
in
cmp
ret
les
cmp
dec
js
arpl
fs
jmp
movsb
lods
xchg
leave
dec
or
mov
and
pop
in
mov
push
mov
and
mov
jp
pop
sub
iret
jg
jae
scas
jl
mov
popf
adc
jo
push
mov
ret
notb
inc
daa
ret
jo
loope
xor
ja
push
loope
fwait
jmp
push
shld
push
mov
je
push
xchg
enter
fsubs
sbb
adc
xchg
xchg
add
lea
das
je
dec
xchg
in
popa
xchg
fprem
insl
aaa
sub
xor
outsl
fdivl
aaa
inc
xchg
mov
add
fst
jle
xchg
push
xor
popa
in
das
xchg
sub
sub
repz
mov
pop
mov
pop
push
adc
in
mov
insl
inc
mov
hlt
fldl
and
jg
scas
xor
cmp
sbb
mov
cld
ret
insb
fsubp
loopne
xlat
daa
pop
push
addr16
aas
push
inc
dec
notb
pop
pop
mov
repz
scas
and
jl
xchg
mov
push
push
sub
negb
and
mov
mov
and
pop
jne
cmpsb
xchg
add
dec
jge
lcall
shrl
stos
int3
and
pop
lret
inc
lds
push
lret
les
fstl
add
lret
clc
sub
std
jmp
iret
or
cs
inc
cmp
enter
out
int3
cmpsl
dec
xchg
jp
jbe
lock
negb
pop
xchg
popf
add
gs
dec
sbb
jo
leave
inc
stc
cli
pop
test
adc
or
push
inc
shr
imul
sbb
in
and
lock
sub
mov
push
icebp
mov
mov
xor
jns
xorl
test
enter
inc
aam
ror
in
jb
mov
pop
cmp
cltd
push
mov
cmpsb
mov
sbb
xor
mov
lret
mov
iret
push
dec
loope
lds
lods
lret
fadd
xor
dec
lret
in
mov
les
jge
sbb
cmp
negl
and
mov
pop
xor
pushf
lock
fsubl
movsl
jge
cmpsl
pop
push
addb
push
pusha
fisttps
lods
in
jp
testb
mulb
sub
aam
das
ljmp
add
or
dec
outsb
cmp
pop
sub
xlat
js
or
adcb
add
ds
jns
xchg
add
repnz
mov
iret
pop
adc
push
pop
and
push
arpl
pop
mov
or
xor
dec
jb
jbe
and
and
enter
adc
pop
mov
mov
in
test
imul
inc
mov
std
sarl
xor
jg
xor
mov
sbb
enter
in
frstor
mov
subb
lods
and
adc
es
aad
jb
mov
dec
sub
mov
mov
mov
scas
inc
mov
rclb
mov
push
sub
inc
or
insl
fsubl
mov
jmp
fwait
movsl
fcomps
push
sbb
dec
daa
sbb
out
sub
and
sbb
mov
dec
decl
and
movb
push
imul
cmpsb
popl
popw
xchg
inc
cltd
aas
ja
rcl
sbb
dec
insb
in
push
test
in
xor
xchg
mov
and
cmp
xchg
stos
stos
inc
loopne
sub
xchg
int
jecxz
insl
push
xlat
mov
jmp
add
ljmpw
arpl
pop
pop
int
push
stos
lods
xchg
cmpsl
or
sub
and
jne
push
jge
mov
jecxz
mov
mov
or
jo
jmp
xor
mov
xchg
push
dec
or
loope
push
loopne
push
adc
and
mov
push
mov
inc
shl
cld
mov
popf
jno
popa
sub
sub
xchg
test
add
jnp
sbb
test
mov
cmpsl
and
adc
imul
sbb
xor
mov
inc
outsb
push
adc
push
adc
loop
cmp
ja
lock
insl
push
cmp
xchg
jmp
leave
push
dec
dec
dec
int
rorl
cmp
movl
dec
mov
insl
loop
addb
lret
sub
inc
mov
push
in
xchg
and
aam
mov
in
shlb
adc
and
jle
cmp
xchg
xchg
xlat
lcall
dec
jmp
aas
mov
jo
or
scas
sub
jle
test
adc
xorb
popf
adc
scas
or
pop
inc
mov
scas
daa
inc
fs
in
fadds
or
in
inc
dec
mov
ja
in
sub
cld
or
and
push
fstpt
lods
and
adc
sub
xchg
or
ret
push
sbb
cmpps
fwait
aas
addr16
adc
scas
mov
lea
int3
sub
add
jle
and
ret
addr16
inc
pop
ja
mov
push
js
mov
aam
pop
and
leave
or
cld
in
adc
hlt
mov
mov
and
ja
paddq
and
mov
ds
and
dec
jl
ss
pop
jg
sub
jp
sbb
xor
pop
outsb
leave
sahf
addr16
movsl
cmpsb
sub
fsubrl
push
add
xor
pop
mov
xchg
addl
mov
sti
pop
sbb
aam
ror
push
movsl
mov
mov
sbb
mov
test
fsubrl
jns
sub
and
push
sub
adc
push
xor
or
jne
mov
icebp
ror
xchg
mov
push
andb
mov
scas
ljmp
in
arpl
insb
xchg
test
stos
xlat
mov
jmp
cmc
scas
jg
das
cmp
iret
loopne
push
mov
mov
xchg
sub
js
pop
jge
daa
and
xchg
inc
movsl
aad
leave
sahf
cmpsl
aas
gs
hlt
hlt
lods
mov
sbb
popa
adcb
push
sbb
sub
sub
add
fimuls
mov
iret
rcrl
and
cwtl
dec
sbb
adc
leave
xor
std
jb
bound
lcall
pusha
stos
pop
in
lahf
int3
sbb
daa
sahf
add
test
repnz
insl
push
inc
mov
aaa
insb
mov
loop
fisubrl
cs
pushf
addr16
pop
nop
stos
leave
cmovns
test
fcomps
nop
cld
cmpsl
test
sub
xchg
fs
out
and
in
bound
pop
dec
and
stos
sub
js
cmp
clc
sbb
in
aam
jne
lret
scas
loope
mov
popa
cltd
push
mov
repnz
jge
cmp
and
repz
dec
dec
or
jp
cmpsb
pop
jg
mov
sarl
sub
lods
fadd
fnstsw
jno
mov
icebp
cmp
iret
or
std
ror
jg
push
mov
shlb
outsb
cltd
pop
fsubrs
lret
cltd
jno
inc
lods
scas
fmul
dec
out
es
xor
mov
pop
pop
sub
loope
cli
in
adc
sbb
cli
jno
daa
in
das
jnp
dec
mov
les
dec
jl
push
add
mov
lret
fdivp
jp
movsb
mov
aaa
and
sub
inc
xor
xchg
mov
fnstenv
dec
insb
adc
xchg
cmp
out
ret
out
mov
out
jae
inc
sbb
xor
pushf
aad
lods
cmp
and
test
mov
jae
jle
cmpsb
mov
and
test
mov
and
push
mov
gs
fiadds
or
mov
cmp
xchg
adc
jno
dec
inc
cld
xor
ret
push
xor
out
or
pop
in
add
fcmove
mov
stos
xchg
mov
or
or
mov
xchg
cld
sub
imul
sbb
divl
movsb
adc
and
dec
or
sti
or
add
fsubrl
fdivs
pop
dec
mov
shll
imul
push
inc
mov
xchg
jo
push
repz
sub
cmp
mov
sub
xchg
sbb
or
sbbl
jne
dec
xlat
cmp
insl
dec
and
fstpl
mov
and
push
fisubs
push
ja
hlt
adc
fimuls
mov
inc
add
jo
or
aad
andb
stos
nop
scas
fptan
stos
int3
in
push
xor
std
push
pop
sbb
inc
fcomps
aas
repz
jge
loope
jae
add
add
mov
mov
int3
jecxz
sbb
xor
push
int
pop
loop
push
pop
or
jae
leave
imul
sbb
push
sahf
popf
mov
lret
sahf
leave
xchg
lock
aas
inc
in
cld
mov
hlt
insb
sbb
push
cwtl
cs
push
adc
xchg
or
cltd
or
nop
loop
mov
pop
nop
fistpll
add
in
push
pop
enter
mov
adc
add
fmul
dec
lods
shll
pushf
daa
pop
sahf
dec
out
mov
pop
adc
add
scas
jl
repnz
out
sub
or
and
das
icebp
or
jno
movsb
cmpsb
dec
addr16
xchg
test
sub
lods
push
sub
fistps
push
pop
add
std
aam
mov
fwait
paddsw
add
or
push
xchg
mov
add
pop
aad
icebp
ds
js
nop
mov
roll
insl
push
or
scas
sub
daa
cwtl
push
loope
in
mov
test
and
cmp
and
push
push
hlt
movsl
test
dec
lds
lret
mov
aam
rcr
or
jmp
out
cltd
xchg
nop
mov
mov
pop
outsb
lar
mov
fwait
cwtl
mov
les
adc
adc
xchg
push
xchg
pop
dec
cmc
xlat
jae
add
sub
mov
push
lahf
in
ja
fwait
leave
rclb
dec
mov
mov
or
flds
out
cmpsl
int3
and
enter
insb
daa
sbb
push
xchg
jae
xchg
push
pop
mov
or
sub
cmp
iret
push
dec
push
push
testb
ds
fucom
jb
call
ret
fsubr
jle
xlat
dec
lret
std
int
sahf
ss
popf
mov
enter
jecxz
cmpsl
adc
mov
es
and
cmp
pop
cmpb
fidivrs
pop
cli
jne
pusha
adc
mov
mov
lret
ds
pop
fidivrs
dec
mov
cltd
jno
jb
jbe
add
mov
dec
cld
jns
mov
or
into
test
and
and
pop
mov
loop
inc
inc
imul
loopne
jecxz
or
and
lret
mov
inc
jns
cwtl
mov
jo
mov
popa
loopne
xor
push
push
lret
inc
sbb
imul
popf
pop
int
clc
jns
push
xchg
adc
enter
outsb
inc
inc
mov
into
push
cwtl
push
dec
push
mov
jecxz
adc
clc
out
hlt
outsl
jg
cltd
fwait
xchg
hlt
jl
push
cmp
mov
pop
in
mov
es
shll
xor
addr16
jle
aam
fldt
enter
fcompl
dec
cmpsl
jp
lahf
pop
inc
je
inc
adc
insl
inc
lret
jmp
pcmpgtd
std
jnp
push
push
repz
pusha
ret
or
mov
in
xor
fmuls
mov
movsl
mov
xorb
cmp
jge
jb
sub
cmpb
sbb
jg
jo
mov
rcl
or
jle
inc
fcmovnb
pushf
pop
ficompl
int3
jo
mov
ret
insl
adc
cs
lea
testb
push
dec
std
mov
divb
cmpsb
lcall
xor
adc
pop
jmp
xor
in
push
jo
mov
sub
lds
jle
aas
mov
xor
adc
pop
and
pushf
movsl
mov
push
loopnew
stc
push
jne
sbb
dec
xor
repnz
cmp
loop
lret
cld
test
or
sbbl
sub
js
jo
popf
aam
inc
into
out
dec
cmp
pop
ds
fldenv
and
test
pop
test
dec
into
push
xor
mov
xchg
pop
insl
fistps
std
ss
sub
mov
bound
popf
lods
adc
cld
mov
xchg
lea
xor
mov
cld
je
sbb
mov
xchg
ret
cmpsl
fprem1
mov
test
repz
pusha
or
fadds
inc
dec
mov
add
xorl
mov
daa
stos
movhps
dec
push
inc
and
lahf
and
fstpt
add
jmp
mov
mov
xor
mov
hlt
shll
xchg
mov
cmp
repz
inc
add
push
jno
imul
in
or
decb
push
xchg
bound
stos
lret
cs
scas
ret
pop
push
dec
lahf
jmp
add
repz
test
dec
lea
inc
ss
jne
daa
mov
pop
andl
je
movsb
xor
out
stos
or
mov
bound
test
mov
aad
in
pushfw
xchg
in
xchg
test
cmp
pop
cs
je
mov
cmp
add
and
cld
in
popf
cmp
cld
insb
fldenv
sbb
in
test
div
jae
and
sbb
stos
les
dec
inc
push
push
cli
pop
js
dec
test
mov
pop
stc
lock
jmp
jnp
adc
pushf
es
nop
push
stos
cmp
pop
mov
dec
xor
arpl
sub
inc
add
test
push
lahf
mov
mov
xchg
xlat
dec
icebp
lret
sub
mov
jnp
push
or
addl
jp
adc
cmpsb
aam
out
sbb
les
scas
adc
add
xor
int
adc
inc
leave
and
enter
mov
imull
cmp
ret
mov
xchg
cmp
push
addl
xor
rcll
add
push
dec
dec
push
hlt
push
cmpsl
inc
inc
inc
fdivs
xor
aas
addr16
pop
int
and
out
rcrl
and
fisubl
xorb
cmp
pop
mov
sub
pop
mov
push
aas
test
push
into
pop
lods
dec
pop
andb
jne
jae
pop
xchg
lock
push
xor
xchg
test
push
mov
les
xor
or
les
cmp
lds
add
xlat
xor
mov
mov
sub
adc
sahf
out
dec
inc
and
outsl
adc
fdivs
xchg
cmp
add
pop
xor
imul
bound
les
hlt
pop
lahf
or
fs
cmp
loopne
aas
adc
stc
mov
add
jns
xchg
mov
sub
inc
jbe
cmp
cltd
movsl
xchg
pop
push
jge
popf
sbb
fisubs
and
das
adc
sub
push
sbb
scas
popa
push
frstor
out
cwtl
cmp
inc
pop
adc
or
dec
cmp
cs
and
insb
fimuls
sbb
jge
sub
mov
repz
mov
adc
and
dec
sub
insb
push
aam
pop
hlt
fisttps
clc
mov
push
mov
xor
or
cli
push
aaa
sti
jmp
stos
lods
sbb
adc
das
dec
mov
push
mov
inc
push
ss
outsl
into
cmp
fmuls
jle
dec
mov
push
dec
rclb
jbe
pusha
shll
daa
pop
ret
mov
jecxz
aaa
cwtl
iret
popa
add
popf
mov
and
scas
dec
aas
ret
in
shlb
lods
jbe
mov
out
lods
xchg
repnz
or
push
pop
xor
data16
push
xlat
push
into
jl
dec
push
push
xor
arpl
call
movsl
fcomip
xchg
rcrb
je
pop
pop
insl
mov
lret
lock
pop
dec
push
mov
push
dec
mov
mov
add
inc
sub
daa
outsb
adc
mov
test
mov
or
xchg
into
sbbl
sub
lret
push
daa
dec
push
mov
lret
cs
cmpsb
fwait
add
aaa
fnstsw
in
adc
jl
mov
xlat
pop
mov
ffreep
adc
mov
cmp
jp
sub
loop
sarl
inc
mov
leave
into
mov
loop
mov
and
out
mov
test
test
fistpll
push
cld
and
dec
decl
insb
orps
test
mov
sbb
fldcw
xor
mov
add
fwait
lcall
sbb
inc
sub
in
mov
dec
imul
sti
imul
sar
loope
mov
shl
dec
cli
jmp
xlat
push
cmp
movsl
push
cli
fyl2xp1
xchg
ss
xchg
jl
push
mov
pop
sub
ja
add
inc
sbb
mov
in
sbb
adc
pop
insl
sub
mov
mov
fsub
filds
mov
sbb
in
lds
jge
cs
and
jge
mov
or
pop
sahf
rcll
aad
mov
cmp
adc
js
testl
xchg
loop
mov
cmp
push
aaa
hlt
inc
add
adc
int3
popf
push
fisttpll
inc
pop
push
xchg
fbld
fs
lret
adc
js
testl
add
mov
jecxz
adc
push
inc
out
sbb
pop
dec
jbe
push
inc
pop
xor
test
mov
pop
nop
out
inc
or
pop
dec
jae
adc
pop
jg
neg
test
cld
in
notb
out
repz
mov
xor
dec
test
mov
outsl
push
pop
cmc
dec
push
inc
jg
fnstcw
pushf
in
pop
or
js
movsl
out
loopne
sub
mov
rolw
xchg
fcoml
ret
movsb
sub
or
cmp
into
or
adc
es
movsl
mov
cmp
jb
divb
xchg
inc
aaa
sub
mov
roll
xor
cwtl
mov
in
push
loope
adc
cs
in
xchg
pushf
push
sarb
ja
fisttpl
push
and
dec
je
push
sbb
jle
imul
push
jb
fwait
sti
mov
mov
addb
sarl
add
clc
jae
inc
mov
or
ljmp
mov
adc
sbbl
test
fisubrl
stc
add
cli
add
loope
rcrb
inc
pusha
stos
mov
insl
bound
add
mov
outsl
ja
addr16
pusha
out
fadds
pop
pop
divl
shll
lcall
dec
xor
test
fxtract
xlat
and
inc
push
mov
fistps
jmp
mov
ret
loope
ja
jns
aas
nop
popa
lds
xchg
and
inc
in
mov
mov
sbb
xor
add
mov
sbb
stos
mov
sub
pop
inc
cmp
sahf
movsb
scas
loope
mov
repz
sub
push
fimuls
add
iret
mov
pop
adc
rcrl
mov
adc
es
lea
mov
pushf
jle
mov
pop
jecxz
flds
es
cli
dec
icebp
push
jecxz
xchg
xor
aad
jp
fiaddl
dec
mov
shl
bound
mov
mov
cmp
jle
rolb
adc
or
xlat
inc
adc
pop
repz
mov
call
dec
imul
aaa
scas
or
stos
mov
addl
fsubr
pop
jl
push
inc
orb
jns
push
cli
push
cltd
add
out
mov
jae
xor
stos
xchg
dec
fbstp
mov
or
insl
inc
jl
push
adc
scas
adc
cmp
loope
cli
jb
es
or
sub
push
into
stos
adc
mov
and
jns
int3
fiadds
adc
mov
mov
push
aad
or
fstpl
mov
js
dec
or
xlat
enter
loop
out
pop
push
outsb
xchg
xchg
cmc
mov
pop
jg
stc
dec
das
fstl
test
lock
sub
imulb
xor
mov
or
iret
jbe
adc
out
xor
cwtl
into
inc
xchg
lds
sub
enter
popa
lret
mov
dec
ret
xchg
out
push
inc
mov
addl
rorl
call
mov
mov
or
mov
mov
cmpsl
add
dec
icebp
test
jmp
mov
je
in
mov
sarb
jnp
lahf
add
lret
std
inc
mov
sub
xchg
cltd
pop
sbb
jg
mov
jp
pop
cld
or
shrl
insb
pop
dec
pop
ret
pop
cmpsb
hlt
dec
lahf
jle
in
lea
pop
jle
test
insb
adc
xor
add
xchg
sub
imul
fisubl
dec
and
cmp
into
or
lods
fmull
inc
jmp
xor
ret
int
cwtl
cmp
xor
push
clc
pop
push
xlat
jmp
fistps
pop
lods
or
jmp
data16
movsl
add
or
insb
dec
jno
xor
inc
xchg
xchg
jle
lcall
dec
sub
icebp
mov
xchg
inc
ja
jmp
jns
cltd
icebp
cmp
jnp
out
jnp
enter
mov
cltd
aas
jns
xor
inc
ljmp
push
call
xchg
jae
into
sbb
add
es
lahf
xchg
add
movl
in
mov
lds
add
dec
pop
shl
inc
xchg
push
in
in
pushf
rcr
dec
inc
and
sbb
out
sbb
mov
fwait
iret
cmpb
and
mov
pushf
and
mov
mov
test
aas
popa
popf
cmp
nop
test
div
mov
sbb
sub
notl
int
iret
int3
notl
or
shlb
jge
ret
sbb
lahf
pop
clc
push
xlat
shrl
aam
add
jo
divb
and
adc
into
cmc
mov
ljmp
pop
out
dec
lret
mov
adc
xor
movsb
xor
push
pop
inc
cmp
xchg
dec
loope
inc
jp
mov
loop
out
pop
inc
daa
jmp
shrb
mov
push
add
jp
pusha
stos
adc
loopne
cmp
insl
add
rcr
dec
shlb
nop
xchg
cmp
test
lods
ds
sarl
mov
lea
addl
mov
icebp
inc
add
fsubs
sub
jle
xor
jbe
mov
sub
insb
add
xchg
lods
xor
mov
dec
pop
enter
loope
in
xor
popa
pusha
cmp
hlt
nop
aas
dec
sub
push
roll
ret
jne
fnstsw
stos
and
push
pop
cld
sbb
inc
ret
loope
inc
and
repz
loope
xchg
xchg
and
gs
jg
leave
or
mov
jnp
repnz
push
test
pop
jge
push
rcr
dec
xchg
imul
sub
arpl
ds
jg
insl
push
xchg
jb
inc
in
adc
mov
mov
js
ret
fcoms
xchg
fmull
fwait
jb,pt
movsb
inc
jne
movsl
decb
push
lretw
xor
mov
xchg
xchg
cltd
sbb
push
xchg
daa
mov
scas
shrb
push
lea
adc
jmp
and
dec
mov
test
clc
xchg
xor
sbb
jbe
hlt
sti
push
dec
mov
add
dec
xchg
adc
or
out
popf
aas
jno
inc
or
sbb
xchg
adc
xchg
jnp
jne
jbe
fmulp
clc
xor
jmp
cmp
sbb
xor
jge
adc
jae
cli
pop
pop
or
pop
daa
sbb
push
stc
push
pushf
fidivl
test
jl
adc
lret
mov
jo
mov
mov
add
aad
or
dec
pop
ja
insb
lds
clc
inc
push
mov
xchg
scas
jnp
sti
fistpll
lret
bnd
pop
mov
push
push
mov
outsl
or
lcall
inc
jnp
push
das
loope
mov
sub
push
push
pop
mov
arpl
lret
inc
leave
repz
push
jno
push
dec
outsl
push
cmp
js
and
cltd
push
lahf
in
in
jnp
push
out
nop
sub
mov
enter
insl
enter
push
push
enter
arpl
popa
loop
pop
sbb
flds
enter
xchg
adc
ljmp
jo
pushaw
out
pusha
mov
xchg
loopne
cmp
getsec
inc
into
pop
loop
nop
mov
cli
dec
xchg
repz
xchg
mov
lret
test
xchg
mov
pop
inc
inc
shl
pop
scas
test
inc
mov
sarb
pushf
imul
push
lret
inc
stos
dec
pop
test
pop
push
movsb
sub
repnz
sub
cmp
fimuls
pop
popf
aas
xchg
out
dec
mov
or
movsl
rorb
loopne
stc
pop
dec
mov
pop
jg
push
inc
insb
mov
addr16
sti
inc
xchg
cmp
sub
adc
cwtl
lods
gs
jne
jns
popa
mov
mov
stc
cltd
or
add
insl
add
loope
dec
push
fnsave
sbb
push
insb
jg
and
dec
ffreep
or
jge
mov
outsl
js
mov
cmp
out
cmp
sub
mov
aam
add
add
dec
push
jne
adc
mov
in
mov
xchg
pop
or
das
imul
sarb
mov
out
mov
test
sbb
rclb
pop
popf
jb
fcmovbe
xchg
into
xor
call
mov
sub
dec
std
hlt
fninit
test
sbb
mov
outsb
les
xor
fistpl
lods
jge
fdivrl
push
sbb
data16
mov
sub
insl
leave
adc
sbbb
lods
and
or
stos
xlat
imul
imul
fwait
inc
loop
subb
leave
dec
popa
lcall
pop
gs
cltd
mov
xchg
mov
pop
pop
iret
jbe
ljmp
ss
hlt
test
jae
jp
cs
dec
jecxz
lret
pop
je
js
pop
adc
jno
outsl
mov
or
daa
jecxz
repz
popa
mov
pop
dec
loope
mov
mov
pop
mov
daa
fsubs
xchg
fdivl
mov
ds
jmp
mov
or
and
int
sbb
push
aaa
test
xorl
nop
test
mov
in
and
cmp
and
mov
lret
out
pusha
aad
mov
iret
xchg
aam
adc
fstpl
cmc
pop
fildll
out
sbb
insb
cwtl
inc
jae
rorb
std
fadd
adcl
add
jae
mov
popf
mov
insl
jle
xchg
inc
and
pop
bound
and
sti
std
push
lds
sbb
std
add
lock
dec
cld
xchg
cmp
pop
cwtl
les
jne
mov
sbb
mov
je
iret
pushl
mov
xlat
pop
in
or
adc
mov
out
cmpsl
sub
dec
xor
or
mov
adc
mov
dec
mov
pop
xchg
mov
sbb
and
std
or
cmc
je
adc
jg
jnp
dec
add
out
lock
cmc
inc
adc
fmul
addl
pop
mov
popf
xchg
outsb
xchg
add
mov
sarb
jmp
dec
ficompl
inc
out
imul
add
inc
cli
stc
lcall
dec
cltd
std
dec
mov
fidivrl
ja
pop
out
mov
dec
sbb
scas
push
sahf
pop
xor
push
jmp
dec
mov
es
or
shlb
sti
jle
dec
addl
insb
mov
mov
push
mov
fwait
mov
xchg
push
push
mov
dec
xchg
jbe
jbe
in
es
sti
clc
sbb
iret
das
cmp
pop
and
xor
repz
pop
mov
cmp
and
add
xor
loopne
xchg
outsl
jl
xchg
mov
dec
inc
push
iret
lods
mov
pop
outsl
mov
cwtl
js
and
call
sbb
pop
out
sub
jle
aad
dec
inc
cs
dec
adc
insl
xor
push
jl
pop
cmp
push
in
mov
jno
adc
inc
mov
inc
shlb
or
int3
cmpsl
fsubs
lods
adc
repnz
lcall
jns
lret
out
scas
push
fwait
cli
fstps
es
xlat
dec
imul
adc
ljmp
iret
push
mov
cs
add
test
cmp
loop
fwait
outsl
push
sbb
cmp
pop
hlt
out
inc
add
lods
lret
insl
fsubr
adc
addl
movsl
mov
dec
mov
inc
test
mov
imul
in
mov
push
mov
push
xor
aas
fdivr
ds
xor
jae
jne
shr
enter
jns
rcrb
pushl
je
js
sub
or
mov
xchg
xor
sbb
out
ret
mov
or
mov
mov
pop
sub
jecxz
and
and
cmpsb
dec
mov
push
push
push
or
pop
sbbb
enter
mov
jne
arpl
lds
lret
jae
aad
jl
cmp
push
sar
push
mov
mov
sti
push
xchg
ret
cmp
xor
xor
jl
lret
mov
loop
stos
out
inc
loope
jbe
dec
ja
jns
cmp
leave
inc
pop
mov
mov
xchg
lahf
fldenv
imul
gs
ds
fimull
mov
aam
dec
inc
hlt
test
and
sbbl
pop
bound
jo
cmp
mov
arpl
add
sbb
out
nop
pop
arpl
movsb
or
fistpl
jg
xchg
mov
scas
out
aas
inc
into
je
pop
push
stc
js
jne
lret
push
push
sarb
xchg
sbb
in
out
and
pop
outsb
gs
sbb
scas
shrl
jg
sbb
into
jp
rcl
inc
loopne
mov
orb
cwtl
lods
add
lahf
mov
out
aad
movsb
stc
push
mov
sahf
cmp
test
pop
in
cwtl
in
xchg
call
xor
roll
jmp
adc
call
push
add
sub
adc
shrl
sub
insb
cltd
cmp
or
call
sti
sub
jecxz
cmp
lret
ds
mov
std
sahf
sbb
loop
scas
add
cmp
and
lock
ds
cmpsl
add
arpl
in
xchg
xor
mov
mov
dec
lods
adc
stos
inc
fldt
xchg
cmpsl
mov
sbb
lods
mov
popf
cmp
icebp
and
xchg
clc
dec
dec
cmp
pushf
cmp
pop
orl
cs
into
cmp
xorl
out
outsl
add
mov
in
ret
mov
mov
insl
std
xchg
scas
ss
push
push
pusha
xor
push
stos
inc
xor
cmp
nop
popf
jno
aas
mov
aaa
push
jns
cli
movsl
scas
clc
inc
xchg
stos
scas
mov
scas
xchg
push
xchg
lret
nop
repnz
sub
lcall
add
mov
cmp
mov
out
cmp
adc
popf
adc
xchg
xchg
dec
popa
mov
mov
test
cmp
orl
out
push
ret
lret
pop
and
pop
lret
sub
test
push
loope
int3
outsb
xchg
jle
cmpsl
adc
xchg
mov
mull
popf
dec
and
sbb
clc
pop
out
xchg
pop
mov
mov
fldcw
lret
inc
xchg
insl
jbe
or
mov
cmc
push
pop
lret
test
adc
repz
test
adcl
and
sub
push
fisubrl
fsubrs
sbb
pop
repz
dec
sub
out
lret
jge
xor
in
xor
aaa
pop
loop
fiadds
test
mov
das
outsb
jp
xlat
mov
in
pop
cld
ror
test
inc
scas
insb
push
fildl
or
out
pop
jmp
or
pushl
or
lds
je
addr16
jnp
push
mov
out
or
rol
movsl
popa
jo
arpl
xor
ret
inc
xchg
jg
mov
mov
iret
pop
fadd
or
adc
jne
dec
test
in
pop
dec
inc
call
js
jne
shlb
int
es
addb
fs
pop
cltd
insl
jne
mov
stos
sbb
test
and
mov
push
sub
jns
cmp
aas
adc
adc
fildl
xor
pop
faddl
in
cwtl
lret
cltd
cmp
mov
and
in
icebp
inc
xchg
dec
xchg
fldz
jo
neg
jle
add
dec
movsb
mov
push
pop
mov
mov
mov
pop
dec
sub
or
jns
and
mov
in
sbb
push
jbe
sub
jp
push
mov
and
xor
rcrb
call
mov
dec
jp
xor
nop
dec
xor
divl
mov
xchg
adc
cmc
dec
lods
inc
addr16
push
sbb
sbbl
mov
xor
arpl
jg
out
insl
pop
xor
fcoml
insb
cvtps2pd
jge
lret
das
adc
addl
stos
movsl
pop
mov
arpl
mov
bound
cli
sub
test
jae
in
xor
fnstenv
sub
cwtl
cmp
and
pop
shrl
int3
or
xor
or
popf
imul
arpl
decb
sbb
pop
data16
arpl
lret
pop
lahf
out
or
inc
pushf
arpl
mov
shll
mov
or
daa
test
mov
outsb
xor
mov
out
mov
in
xor
int3
push
rclb
mov
push
xor
test
jno
daa
fbstp
fisubl
stos
sub
or
fcmovne
lds
sbb
iret
stc
mov
jnp
xchg
jbe
pop
and
and
mov
cmc
loopne
mov
sti
cmpb
inc
ja
outsb
cmp
inc
insl
cmpl
aas
jmp
sub
and
lock
cmp
cmp
xor
adc
cld
or
push
ss
test
inc
cmovge
in
out
inc
mov
dec
ret
dec
es
push
shlb
fnsave
sbb
pop
xchg
sub
data16
lret
or
or
inc
imul
cltd
sbb
add
jl
mov
or
mov
loop
and
je
scas
xor
xchg
sbb
fcmovnb
adc
in
pop
lods
faddl
sbb
push
andb
lcall
test
fiadds
or
mov
imul
incb
lods
add
xchg
adc
add
loopne
sbb
pop
mov
jns
sub
push
jp
sar
fwait
ret
sahf
xor
pop
cmpsl
mov
inc
aad
dec
dec
lock
incb
out
ret
xchg
cmpsb
mov
xor
push
sbb
repz
lods
xchg
in
insl
popa
inc
aas
xor
pop
lds
dec
int3
add
jle
and
add
int
movsb
mov
loop
loopne
daa
dec
cwtl
mov
jg
add
mov
sub
icebp
xlat
xorb
cmp
cmp
mov
and
cltd
push
pop
loop
cltd
fs
sbb
sub
stos
and
adc
adc
pop
and
addb
inc
iret
xchg
aad
push
sbb
push
popa
clc
aas
bound
mov
roll
jbe
insl
xor
int3
jbe
jo
jge
or
add
jmp
or
sbb
adc
push
inc
cmpsl
pop
shrl
in
sub
dec
inc
mov
idivb
mov
sahf
mov
pop
pop
jecxz
mov
cwtl
bnd
sahf
divl
test
sbb
add
sub
rolb
test
xchg
mov
gs
mov
lea
int3
aas
sahf
js
imul
adcb
inc
mov
xor
inc
or
push
sub
nop
add
iret
pop
std
cmpsl
mov
in
pop
dec
bnd
pop
js
and
inc
sub
adc
jb
push
adc
mov
and
push
hlt
sti
in
shll
xchg
scas
jbe
add
cli
jb
cwtl
sahf
mov
dec
xor
loopne
mov
loop
cmp
popa
das
dec
jg
mov
pop
out
andb
movsb
xchg
aad
ret
jg
mov
mov
jno
sbb
cmp
lahf
jo
les
jmp
lea
fsubs
xchg
push
fsubs
adc
jns
ljmp
adc
mov
pop
xor
push
loopne
inc
in
js
push
xchg
in
sub
rcr
xor
mov
sub
pushf
gs
aad
mov
mov
into
mov
insl
pop
aad
cmc
adc
sbb
pusha
adc
and
add
push
out
cmc
out
aaa
sti
push
mov
addr16
fiaddl
gs
pushf
in
insb
jmp
leave
push
push
insb
jg
addr16
das
mov
lods
jle
or
shrl
adc
cmc
fldl
aam
jg
test
leave
in
inc
lcall
out
inc
loope
pop
mov
icebp
cmpl
cltd
shlb
scas
pop
cli
jo
in
sahf
scas
or
adc
dec
adc
add
or
jno
cwtl
xchg
pop
xlat
les
adc
jg
out
dec
enter
lret
pop
adc
popa
xlat
in
fisttpl
fadds
inc
cmpb
inc
mov
or
mov
out
mov
dec
test
jae
add
mov
cmp
aaa
mov
and
scas
dec
mov
leave
mov
mov
es
and
cmp
or
out
mov
jns
aam
in
or
imul
mov
jne
adc
cmp
call
aas
or
lea
sbb
int
out
subl
std
dec
xor
leave
adc
jnp
sub
outsb
mov
fnstsw
filds
call
adc
daa
lea
dec
xchg
es
and
xor
xchg
mov
loopne
call
mov
fs
clc
sti
imul
fnstenv
fisttpll
xor
out
inc
push
ljmp
mov
lock
cmc
dec
adc
fisttpll
sti
lret
or
fwait
xchg
and
imul
shl
sub
jecxz
in
add
mov
push
icebp
fistpll
pop
sub
or
cli
das
xorb
lret
jne
and
insl
pop
pop
cmpl
jae
out
jbe
je
cmovl
or
and
add
clc
add
fs
int3
inc
sbb
mov
add
or
xorb
mov
pop
mov
jl
xchg
ja
in
dec
push
pop
pop
xchg
jb
pop
xchg
lcall
sub
push
and
test
jmp
mov
sarl
loope
hlt
pop
shlb
push
cltd
mov
or
adc
push
xchg
addr16
pop
repz
lret
and
cmp
inc
inc
cmp
sub
add
lret
inc
add
and
inc
insb
pop
lahf
in
pop
lds
or
xlat
cmpl
xlat
push
out
jnp
and
int
xlat
dec
cld
loopne
in
mov
lock
or
scas
xor
xchg
xchg
inc
loop
cli
jnp
aam
stos
leave
adc
pop
stos
lods
pop
sub
fstp
pop
jb
mov
or
pusha
mov
sub
push
xor
outsb
stc
mov
pop
mov
pop
adc
dec
inc
aaa
pop
jle
xor
bnd
jne
loopne
mov
sbb
sbb
icebp
adc
test
das
lods
loope
js
xchg
jns
add
sub
lea
cli
fisubrs
aad
sti
test
and
int
inc
xchg
pop
mov
outsb
and
xor
call
ret
mov
sbb
push
int
testb
and
push
add
xchg
out
cmp
mov
mov
mov
mov
into
sahf
cwtl
sbb
push
mov
loope
mov
mov
inc
sarl
mov
xchg
clc
pop
mov
pop
adc
dec
ds
scas
fisttpll
nop
movsb
ljmp
bound
push
fwait
popa
ss
sbb
outsl
cmp
adc
test
ret
dec
nop
daa
sbb
test
arpl
push
push
mov
and
js
cmp
js
mov
and
test
jno
rclb
mov
mov
punpcklwd
into
js
cld
pop
add
stos
xchg
sub
sahf
xor
jb
data16
push
gs
jbe
push
ja
jbe
pop
jb
fs
or
dec
sub
mov
jb
cs
adc
cmp
mov
stos
dec
add
icebp
mov
into
pop
jno
xor
mov
xchg
sub
adc
in
sub
jle
jb
mov
je
cmp
movsb
sar
aas
mov
sbb
cmp
jmp
mov
mov
mov
cli
aas
jecxz
movsb
xlat
daa
mov
inc
pop
lods
sahf
sbb
les
inc
sbb
ja
xor
mov
add
jae
xor
shrl
lea
mov
xlat
addr16
and
imul
pop
pop
in
dec
xchg
adc
pop
mov
and
cld
lea
bound
imul
cmp
loopne
adc
pop
inc
add
ret
ret
mov
add
cmp
outsl
jl
cli
fnstsw
add
dec
xor
popf
repz
out
cmp
icebp
sub
loope
ss
aas
and
adc
sbb
subl
push
int3
lret
inc
fimull
inc
push
xlat
jecxz
iret
sbb
cmp
xchg
imul
sub
data16
mov
insb
pop
sbb
faddl
pop
and
cs
sub
lock
or
cmc
cmc
pop
and
fcoml
mov
mov
lock
sbb
add
bound
mov
cmp
add
stos
out
sahf
in
movsb
and
cmp
pusha
jns
cmpsl
pushf
leave
pop
cltd
cli
push
dec
mov
pusha
lods
sti
adc
notb
adc
out
jns
mov
movsl
xchg
in
fstpl
or
outsb
dec
push
test
inc
push
aad
xor
xor
xor
test
cmp
aam
mov
clc
sbb
int
icebp
adc
sub
push
test
and
aas
imull
push
lea
or
std
adc
sbb
shr
pop
int
bound
stos
push
jp
ljmp
pop
stos
ss
mov
or
sbb
adc
movl
and
mov
clc
outsb
cmpsl
xchg
xor
and
int3
cmp
popf
xor
fstps
dec
pop
leave
ret
jg
mov
addr16
test
repnz
cs
test
push
inc
repz
inc
das
and
aas
cwtl
lods
out
ret
imul
shll
shl
stos
addr16
sub
nop
push
loopne
loope
dec
andb
jne
clc
enter
stc
mov
xchg
movsl
xchg
test
int3
dec
pop
imul
in
adc
and
xor
or
outsb
inc
mov
gs
mov
adc
push
pop
int3
xchg
adc
inc
push
emms
ljmp
mov
roll
scas
aam
ljmp
dec
inc
jge
mov
loopne
sahf
pop
stos
mov
pop
les
out
jbe
mov
pop
test
mov
mov
sbb
pusha
inc
xchg
fisttpl
lods
dec
ss
lods
out
pushf
lret
pop
push
rol
sbb
xor
loopne
push
sbb
mov
mov
pop
jnp
in
jmp
adc
cmc
push
addl
jle
into
test
ficompl
mov
cmp
pusha
std
xchg
jl
enter
dec
popa
sub
cld
aad
out
xchg
pop
dec
mov
out
adc
pop
or
and
pop
adc
cld
in
push
loope
clc
shr
xchg
adc
loope
iret
je
inc
rcr
mov
idiv
adcl
rorl
adc
pop
xchg
jecxz
loopne
int3
fld
jbe
adc
sub
push
mov
fdivrp
insl
cmp
pusha
push
mov
arpl
sbb
int
push
daa
mov
mov
dec
js
inc
std
in
fists
xabort
jne
loop
fisttps
xchg
cmc
movsl
filds
pushf
dec
xchg
rorb
ret
jne
stos
pop
sub
insl
lock
pusha
xor
sahf
daa
xor
iret
aam
mov
xchg
mov
test
add
add
pop
sub
sbb
jge
push
in
push
xchg
jo
sub
mov
les
mov
cs
and
xchg
pop
inc
push
outsl
testl
push
aas
les
mov
dec
mov
sbb
mov
ljmp
cmp
lcall
mov
fidivrs
nop
cmp
jae
and
xchg
mov
pop
sbb
xchg
iret
jb
cmp
push
jg
addr16
jb
shll
arpl
push
ljmp
fxch
inc
aaa
lahf
in
insb
ljmp
dec
cmp
mov
out
xor
xchg
mov
cmp
repnz
push
andb
inc
push
aas
inc
xchg
and
fldt
movsb
ret
inc
mov
dec
adc
jp
rcrb
pop
lcall
jns
lock
roll
rcll
inc
jbe
pop
test
cmp
test
aaa
and
mov
scas
add
out
adc
popf
out
add
ret
sub
fldt
cld
lret
and
cwtl
xor
adc
push
jmp
cmp
iret
nop
popa
xchg
ficoml
mov
cmp
ror
jno
les
mov
pop
mov
pop
mov
mov
push
cld
fcoms
jb
push
fnstsw
jp
mov
pusha
stos
rcl
fwait
jmp
rol
pop
inc
xor
cmpsb
xor
cmp
paddq
repz
add
aad
mov
add
sub
movsb
ret
jl
xor
xchg
repz
sub
aam
adc
insb
push
jmp
pop
jmp
adc
push
sti
inc
sub
fsubrl
in
popa
xchg
jae
stos
xchg
dec
insb
rol
sub
lret
adc
mov
fldl
imul
loopne
clc
ds
fisubs
sbb
mov
insb
push
ja
fcompl
jo
add
jb
icebp
enter
jnp
mov
cmp
hlt
push
lea
scas
and
or
leave
mov
lea
orb
pop
push
lds
dec
js
outsl
mov
loopne
mov
jle
jge
pop
adc
push
sbb
xchg
push
xchg
shll
sbb
add
sbb
inc
mov
push
inc
or
test
pop
fdiv
ficoms
mov
mov
les
stos
fwait
and
inc
jmp
mov
xor
pop
xchg
inc
stc
nop
cmp
xor
scas
xorl
adc
xor
lods
shl
jne
je
into
lcall
adc
mov
cmpsl
jnp
shr
sbb
scas
push
ljmp
lret
push
xlat
lcall
push
cld
arpl
sub
dec
mov
fucomip
dec
xor
mov
cmp
cmp
lods
and
clc
inc
sub
or
imul
mov
insb
test
jp
jnp
ljmp
xchg
sub
mov
inc
adc
loope
cmp
or
dec
scas
out
and
push
lahf
xchg
xor
gs
mov
jne,pt
das
add
or
cmpsb
popa
mov
add
and
inc
mov
dec
add
mov
pop
and
mov
cwtl
dec
xor
cltd
cmp
es
mov
add
xchg
cmp
ljmp
xchg
push
inc
adc
lods
or
mov
fincstp
mov
pop
sahf
ror
andb
sub
push
pop
jp
and
inc
pop
pusha
sti
rolb
push
xorb
mov
stos
repnz
and
test
mov
add
out
jo
cmp
fidivl
inc
in
dec
out
cltd
addr16
mov
xchg
and
lods
mov
gs
clc
fwait
add
nop
lret
test
dec
pop
ss
int
pop
jno
push
xor
cli
mov
dec
test
jg
pop
dec
inc
imul
cmp
add
pop
movsl
mov
lret
frstor
xchg
test
cmp
frstor
or
cs
sub
pop
inc
stos
cmp
lock
and
xchg
push
mov
mov
andl
sub
add
xchg
rcrl
and
pop
pop
movsl
and
cld
mov
pop
stc
push
test
push
fimull
xor
cmp
js
jecxz
jg
in
sub
mov
inc
fistpl
insl
fwait
fwait
dec
mov
sub
cmp
lea
fnstsw
imul
push
dec
cmp
inc
pushaw
cmp
in
mov
adc
xchg
sar
call
movsb
xchg
xor
cmpb
pushf
mov
push
xlat
aas
inc
sub
xor
jg
aam
sbbb
push
cmp
imul
and
pushf
lcall
pop
jl
fsubl
mov
iret
lock
pop
jmp
lahf
sbb
jb
pusha
std
jae
dec
mov
mov
mov
femms
popf
stc
daa
cmc
jl
xchg
pop
or
fcmove
orl
push
les
or
dec
cmp
stos
pop
xor
rcrl
mov
pop
mov
or
mov
adc
mov
lret
in
cltd
dec
hlt
jns
sub
pop
adc
imul
fadd
mov
mov
mov
jns
mov
push
mov
sti
addl
jmp
push
and
mov
int
xchg
and
xchg
jmp
dec
pushf
push
or
into
arpl
loope
dec
cs
test
repz
jmp
mov
mov
pop
sub
push
mov
push
mulb
repnz
test
sub
jl
popl
add
fs
outsb
out
lods
aas
fucomp
push
push
shlb
imul
cld
cmc
fs
incb
and
inc
dec
rep
ss
gs
int3
negb
mov
aad
cmp
mov
sub
hlt
jmp
fwait
cs
push
jmp
les
roll
push
pop
cmp
add
movsb
shl
outsb
shlb
cs
mov
inc
jae
ja
mov
int
jecxz
mov
xlat
cmpsb
enter
clc
push
xchg
sbb
pop
dec
sub
push
andb
sti
mov
add
stos
xlat
pop
mov
popa
or
jecxz
xor
stos
mov
xor
cli
xchg
lock
or
mov
mov
je
pop
push
fildll
xchg
or
pop
cmp
push
pop
sbb
jno
into
and
lret
inc
mov
lea
xor
lds
push
mov
loope
sub
shlb
into
outsb
adc
fcomps
popf
ret
xorb
lret
jo,pt
add
mov
cmp
movsl
add
data16
sbbl
xor
rcll
xchg
lods
leave
dec
decl
inc
mov
lret
adc
in
insl
or
adcb
movsb
xchg
push
mov
bound
sbb
pop
dec
jle
fiaddl
ds
lds
enter
and
lcall
in
ss
cltd
cwtl
pop
decb
add
mov
in
pop
sbb
andb
repz
cmp
pop
push
shlb
xlat
lods
iret
cld
push
mov
pop
pop
mov
or
push
cltd
mov
xor
dec
pop
and
aaa
sbb
mov
sub
hlt
movsb
add
add
jae
inc
dec
pop
sbb
call
lods
fidivrl
mov
sbb
pop
inc
pop
jle
rorl
imul
or
loop
inc
add
pop
mov
inc
sbb
push
jg
movsb
fimull
xchg
and
jo
dec
mov
ljmp
cmp
push
lahf
movsb
out
lret
push
inc
xchg
fistpll
adc
lcall
cmc
aaa
xchg
xchg
or
dec
xor
mov
gs
adc
mov
nop
mov
jne
pop
lcall
pop
push
xchg
pop
es
cwtl
push
fdivrl
scas
insb
mov
popf
in
mov
sub
imulb
mov
negl
pop
mov
lcall
sbb
in
jne
jns
cli
push
daa
jl
jecxz
ja
and
cmpsl
int
test
jno
daa
and
jp,pn
outsb
pusha
les
dec
shlb
icebp
xlat
and
push
pushf
cmp
cmp
lcall
mov
inc
cmp
jecxz
stc
mov
push
push
in
ss
xchg
mov
movsl
stc
push
jl
sbb
stos
shlb
pop
push
std
push
sbb
addr16
push
arpl
sub
sbb
dec
cmp
jo
out
shll
js
test
jnp
cltd
dec
sub
xchg
ss
jg
and
subb
lds
lea
fistps
sbb
fldl
xchg
inc
push
mov
xlat
fcoms
loopne
mov
pushf
xor
dec
xchg
fwait
sbb
mov
jo
or
out
pop
push
sbb
pop
cmp
inc
lods
pop
loope
enter
jno
xchg
mov
xchg
iret
mov
jle
cli
push
lods
sub
andl
push
lea
pop
add
js
add
jno
lcall
cmp
mov
jl
lods
js
movsb
mov
xor
lods
inc
cmp
push
lock
sub
xchg
popf
testb
notb
push
cmp
pop
xchg
out
in
adc
pop
testl
xchg
push
inc
cli
or
cmp
fcomps
jecxz
inc
hlt
push
icebp
movsb
mov
insb
lds
lods
sub
into
test
ret
js
or
int
rcr
add
jae
sub
shlb
test
jge
and
enter
or
into
pop
push
imul
in
dec
repnz
rclb
daa
idivl
iret
and
cmpsb
lea
movsb
mov
adc
xor
in
repnz
lods
loopne
pusha
or
add
xor
aaa
push
push
and
inc
not
lret
xchg
jo
or
lea
xor
dec
and
jp
js
imul
push
popa
ljmp
das
shll
mov
lea
fwait
aad
stos
inc
mov
or
clc
mov
inc
dec
icebp
cwtl
mov
cmp
mov
push
cmp
mov
aas
addr16
add
xor
pushf
xor
mov
lret
lahf
and
or
ret
loopne
xchg
dec
sub
jge
out
add
push
or
add
or
mov
dec
push
push
sbb
int
das
es
cmp
add
shll
insb
jns
inc
cld
or
xchg
mov
adc
sti
imul
pop
push
out
push
jle
push
xor
lea
adc
lcall
cmp
push
cmp
imul
inc
xchg
xchg
call
and
add
add
std
jge
sbb
gs
pop
sbb
jbe
adc
xor
loope
scas
mov
lret
mov
add
jecxz
mov
or
imul
sbb
adc
jmp
addr16
sbbl
or
shrb
lahf
or
and
sti
adcl
lea
lcall
mov
inc
popf
lods
pop
insb
outsl
stc
inc
int
mov
lahf
rorl
xchg
jne
gs
push
adc
out
push
sahf
data16
loope
jnp
sti
mov
gs
out
mov
cmp
cwtl
cmp
xchg
add
outsl
adc
enter
test
jg
sbb
aaa
mov
outsl
jns
dec
in
jae
add
push
fstpl
dec
loope
add
test
outsl
out
fcmovu
sub
das
and
push
pop
shr
push
inc
mov
es
loope
adc
int
xor
aas
rcll
mov
dec
mov
xor
lea
cmp
and
and
jge
inc
cli
mov
pop
pop
fildl
fisubl
shrb
repnz
inc
ffree
or
jge
mov
testl
cmp
mov
jg
mov
add
cli
jnp
adc
jecxz
add
jnp
clc
lock
ficomps
push
enter
sahf
aas
jmp
fiadds
repz
push
adc
mov
ja
arpl
cli
xchg
idivb
push
or
in
xchg
pop
push
into
arpl
xchg
mov
leave
dec
adc
test
aas
loop
cmp
xchg
inc
fildl
mov
inc
sbb
mov
imul
mov
shll
lahf
in
cmpsb
fwait
lods
xor
push
inc
repz
cmpsl
and
fidivl
adcl
xchg
in
sarl
push
push
inc
lods
rcll
call
insb
sub
movsl
lods
das
cwtl
inc
ss
jne
fwait
sub
fcmovnu
xchg
icebp
mov
pop
sbb
dec
cmp
and
je
dec
add
subb
inc
fsubrl
push
sti
loop
inc
cli
mov
ret
aad
cld
push
pop
pop
jl
adcl
inc
mov
lock
mov
sbb
fbstp
stos
loop
sbb
xchg
mov
fucomi
jae
iret
push
pop
sbb
jg
sbb
xchg
lahf
sub
stc
mov
pusha
lods
pop
add
fsubl
mov
or
mov
jmp
mov
shl
xchg
xchg
dec
xchg
adc
outsl
mov
pop
sub
stos
into
jo
cltd
cmp
jecxz
mov
mov
push
aaa
jl
insl
cmp
enter
lahf
stc
mov
xchg
popf
cli
ja
stc
repz
push
cli
inc
jno
fwait
notb
push
add
mov
sbbl
xchg
cmc
mov
and
dec
movsl
daa
mov
xor
xor
aas
insb
jle
ja
inc
push
mov
mov
jl
call
das
mov
outsb
bound
cwtl
xchg
nop
or
int3
aam
ret
fwait
out
insb
sub
jo
add
ret
jle
pop
mov
sub
cs
mov
jmp
lret
outsb
inc
js
cld
jnp
repnz
sbb
stos
icebp
imul
jae
jo
sub
push
subl
sub
inc
imull
lahf
cmp
sbb
jbe
scas
scas
add
jno
sub
or
xchg
xor
stc
je
shrb
out
dec
pop
jnp
adc
fildll
frstor
mov
pop
inc
into
in
add
icebp
out
sub
loop
sbb
xor
stos
das
subb
stc
pusha
sub
test
pop
cmc
sub
mov
xor
jge
andl
mov
mov
rcr
stos
sahf
enter
push
add
aas
loop
lret
scas
push
in
inc
push
ljmp
cmp
ret
pop
aas
jmp
adc
sub
loope
sbb
jno
xchg
and
dec
jge
pop
outsb
add
or
mov
pop
data16
movsl
or
jle
mov
mov
mov
xchg
fcomps
jns
jg
cwtl
int
push
repz
call
sbb
inc
cmp
lock
popa
es
or
lds
sub
inc
mov
add
mov
shll
mov
xor
add
sbb
fcmove
or
les
adc
inc
jb
mulb
adc
sbb
mov
mov
push
mov
xor
aad
mov
hlt
rclb
pop
jae
loope
or
fildl
inc
icebp
sbb
add
insb
out
lea
arpl
loop
lods
lret
or
pop
push
pushf
xlat
lods
push
sbb
add
fdivrs
pop
std
cld
test
aas
mov
std
movsb
int
xchg
pop
das
dec
fnsave
push
cmp
popf
pop
push
sahf
loopne
pop
aad
clc
mov
cs
ss
or
and
imul
notb
std
inc
cmp
mov
popf
or
ja
mov
aam
mov
scas
jge
ss
push
test
ficoms
mov
lods
insb
dec
dec
mov
ficoml
daa
stos
scas
jne
jp
pop
xor
xchg
in
mov
jbe
pavgb
aam
adcb
pop
pop
pop
daa
dec
xchg
push
sbb
xchg
addr16
jno
inc
std
imul
pop
or
mov
mov
ficomps
dec
and
xor
lock
test
bound
pop
xchg
mov
shll
lock
ret
leave
jmp
outsl
and
fistpl
mov
xchg
fistps
pop
adc
outsl
xchg
fmull
movsb
out
dec
or
pop
push
sub
jl
push
les
ficoml
dec
scas
cvtpi2ps
daa
ss
stc
test
xor
xchg
test
hlt
push
arpl
dec
mov
jge
mov
repz
or
pop
and
enter
mov
jge
test
arpl
cmp
out
out
dec
imul
imul
setns
fs
int
mov
rcrl
out
jnp
and
sbb
int3
jp
mov
test
xchg
mov
repz
stos
mov
sbb
and
sbb
mov
mov
jns
sarb
jge
and
jns
xchg
dec
insb
mov
jp
jmp
xor
inc
sub
fisubl
mov
dec
sar
test
mov
rorl
mov
pop
cmc
and
push
inc
lea
cmp
cwtl
pop
test
movsb
inc
jo
test
mov
iret
and
add
xlat
xorb
loop
daa
out
mov
cmp
test
test
xchg
sbb
mov
or
mov
fdivr
push
add
push
insb
int3
jecxz
dec
stc
insl
fidivl
or
xchg
rol
loope
loope
out
adc
outsb
push
lcall
ficoms
mov
subl
sarb
clc
mov
ficompl
dec
jno
aas
dec
aas
xlat
pop
push
xor
mov
cltd
imul
mov
cli
insl
xchg
or
ljmp
pop
popl
jle
mov
addb
and
push
ss
nop
es
push
add
mov
frstor
and
addr16
repz
mov
sbb
cmp
cmpsb
cmp
adc
jecxz
sbbb
leave
adc
iret
mov
mov
and
aas
pop
js
xorb
pop
dec
in
ret
and
clc
pop
and
push
shrd
xlat
or
nop
into
xchg
loop
mov
inc
push
and
out
movb
add
dec
push
sbb
cltd
sub
gs
mov
loop
sbb
push
sbb
mov
popf
sub
mov
xor
sub
js
add
sub
repnz
xorl
lcall
cld
pop
jecxz
mov
jno
orb
mov
in
pop
shrb
jmp
test
movsb
pushf
xor
jne
rclb
jge
insl
pop
movl
dec
xor
jns
aam
push
cmpsl
jo
test
in
data16
mov
cmp
out
dec
in
xchg
popf
sub
lret
out
dec
popa
sti
aas
or
setae
test
addb
and
aaa
and
xchg
jl
sub
pushw
icebp
daa
jae
in
dec
and
xor
jg
pushf
mov
add
mov
pop
int
dec
out
bswap
mov
icebp
repz
inc
ror
test
jno
xor
imul
addr16
stos
inc
sub
mov
mov
dec
cwtl
sub
push
sub
fimuls
xchg
jmp
push
push
and
dec
mov
xchg
cld
movsl
and
test
sbb
ljmp
fstpt
in
cmp
outsl
leave
sahf
add
stos
dec
addr16
daa
pusha
inc
stc
ljmp
sub
xchg
shrb
jl
cmc
inc
adc
cli
out
xchg
pop
adc
jo
lods
out
add
xchg
mov
std
xor
orl
scas
push
jl
lods
xor
mov
sarb
pushf
aas
or
and
lret
fsubrl
in
jecxz
mov
inc
add
sub
cmp
sub
negb
push
sahf
push
addr16
push
xor
jp
or
inc
pop
cs
jo
mov
fistps
mov
inc
fwait
fs
mov
icebp
in
pusha
fsubl
cmp
xchg
cmp
lcall
sbb
xor
jp
out
arpl
out
inc
call
aas
aad
nop
mov
mov
pusha
in
xchg
movl
movsl
movb
insl
inc
jle
mov
sahf
mov
daa
insl
mov
inc
outsl
adc
jp
sbb
push
int
mov
and
aaa
cmp
inc
imulb
jns
popf
mov
xor
addl
stc
sub
jne
jp
inc
add
adc
cmpsl
push
push
add
cmpsb
push
push
out
sub
test
xchg
int3
pushf
add
stos
sbb
push
push
and
nop
vpmacssdqh
jle
add
leave
xlat
jge
jge
mov
inc
lcall
sbb
push
test
adc
sub
lods
ljmp
loopne
cld
scas
mov
cmp
sbb
in
xorl
cmp
loope
cmp
jne
sarl
sbb
iret
into
mov
sbbb
xchg
fstpt
data16
loopne
lret
insb
adc
outsb
jmp
in
je,pn
inc
pop
xor
aam
pop
movsb
movsl
inc
push
es
mov
rcll
in
mov
xchg
cmpsb
je
xor
mov
jg
sti
adc
or
inc
sub
cld
pop
mov
jl
cli
cmpsl
sbb
lret
adc
fdivrl
cmp
push
pop
sub
cmp
mov
mov
mov
std
fsubrs
out
lea
pop
aaa
dec
idivl
adc
push
mov
or
adc
xchg
mov
jmp
jo
xor
xchg
or
and
lcall
mov
push
loop
push
rorb
negb
incb
jge
dec
cmp
add
pop
fldcw
mov
imul
jno
orl
xor
adcl
mov
aad
xor
jo
aas
xchg
mov
and
and
mov
mov
or
jae
das
adc
dec
inc
xchg
das
imul
cltd
into
pop
pop
shrl
mov
test
sbb
stos
xchg
cmp
add
dec
push
and
mov
les
lret
ret
sbb
cmp
loopne
or
xor
pop
xor
inc
call
xor
lahf
fnstenv
fadd
and
outsl
lret
cmp
inc
mov
xor
ficoms
mov
mov
movsb
lahf
cmp
pop
pop
mov
inc
popf
xchg
add
add
push
xor
push
hlt
adc
stc
mov
jle
mov
insl
test
sbb
push
xor
loopne
aaa
les
xchg
mov
outsl
jb
insl
cli
sbb
fs
xlat
popa
and
jb
xchg
test
cwtl
dec
push
mov
jns
push
mov
push
sbb
add
fistpl
in
imul
jnp
jne
push
sbb
or
dec
mov
insl
push
icebp
mov
jmp
jg
imul
sub
mov
fcomi
jp
adc
jg
xchg
inc
lret
sub
push
sbbl
xchg
lods
dec
jnp
rcrb
sbb
loope
push
inc
pop
lea
fstpl
cmp
push
add
loope
addr16
int
and
addl
xchg
mov
adc
mov
add
outsb
repnz
sbb
bound
or
pop
jl
scas
add
leave
and
or
lods
les
popa
js
push
iret
scas
outsl
cmp
jl
inc
or
cmc
adc
inc
xor
sub
cmp
cmpsl
lret
insb
sub
mov
jmp
jbe
adc
bound
and
push
inc
push
jp
jno
sub
mov
sub
mov
imul
dec
xor
out
pop
scas
std
and
adc
xchg
call
rorl
xchg
rcrl
xchg
xor
hlt
add
out
outsl
push
std
xchg
test
adc
adc
mov
aas
jle
xor
aas
mov
mulb
inc
or
pop
call
push
or
in
mov
jle
aam
jge
mov
cli
jl
push
mov
movsb
pop
cli
data16
and
test
mov
fnstsw
mov
xor
mov
or
add
sub
fcom
stos
je
cld
dec
cld
mov
outsl
or
xlat
xlat
cmp
and
jnp
data16
dec
sbb
imul
stos
cmp
xor
mov
enter
and
inc
lea
sti
xor
jmp
sbb
cli
int3
xor
fcmovnbe
dec
in
sub
xchg
add
cmp
icebp
scas
adc
xchg
xchg
repnz
bnd
inc
xor
jo
repnz
fidivrl
inc
mov
sbb
jge
mov
clc
cmp
sbb
aad
add
movsl
dec
or
push
sub
stc
lock
cmp
jp
pop
xor
std
int
inc
cmp
and
orb
xchg
ds
leave
test
or
pop
mov
ror
adc
add
xchg
jne
lods
xchg
xor
rclb
sub
mov
jecxz
xor
adc
push
mov
ss
fcos
mov
loope
mov
and
adc
sbb
sbbl
adc
mov
add
ljmp
js
stos
aas
cmp
dec
mov
iret
out
shll
push
ficomps
or
mov
cmp
push
lret
pop
lods
lods
adc
cmp
in
cmpb
jg
es
repz
ds
ljmp
jle
stos
xor
es
sbb
loopne
push
jg
push
scas
and
lret
push
xchg
ret
push
mov
cwtl
jo
imulb
and
and
stos
lods
push
int
aam
pop
addb
insl
push
push
push
jb
movsl
jp
bound
mov
adc
jnp
pop
das
cmp
ss
xchg
enter
test
mov
outsl
inc
mov
int3
scas
push
inc
out
enter
sub
test
and
lret
jg
or
add
subl
cwtl
add
jnp
jae
rolb
pop
cmp
cmpsb
fadd
les
mov
cwtl
pop
push
lock
ja
cmp
pop
je
jl
push
pop
sub
call
pop
cltd
dec
das
out
pop
mov
pop
clc
mov
mov
add
mov
mov
loop
push
mov
and
or
mov
fsubrl
imul
daa
dec
cltd
sbb
or
xor
outsl
sbb
mov
aaa
pop
clc
push
mov
or
addr16
loop
jae
mov
je
mov
cmp
and
xchg
fstps
loopne
imul
xchg
insb
das
inc
stc
push
sbb
cmp
test
mov
inc
roll
scas
jg
or
outsb
int3
imul
fldl2t
in
fidivrl
rcr
repnz
test
int3
gs
hlt
mov
dec
push
orb
pop
movsb
inc
cld
nop
sbb
or
pop
mov
jle
lods
iret
cltd
icebp
test
mov
cwtl
cmp
fsub
fdivrp
lcall
jo
mov
pop
jecxz
mov
sti
push
shll
xor
cld
and
mov
lods
les
push
arpl
icebp
ret
aas
ljmp
shlb
mov
ror
pushl
loopne
add
inc
mov
arpl
cmpsl
push
jecxz
mov
and
loope
imul
les
xchg
sub
cwtl
or
mov
pop
or
idiv
adc
std
cmp
xchg
jae
sbb
cltd
and
mov
or
dec
shlb
pop
sahf
mov
jecxz
popf
cwtl
int3
sub
and
leave
test
push
xchg
cmp
loop
push
jne
inc
cli
push
xchg
ret
and
xchg
aaa
imul
pop
jbe
sbb
pop
hlt
or
in
mov
jle
jo
lods
shrb
ja
add
ja
stos
insl
push
icebp
dec
movb
mov
jp
or
lret
xchg
sub
mov
lods
addr16
mov
xlat
pop
dec
stos
sbb
fmuls
add
in
mov
cli
mov
xchg
mov
inc
call
mov
popw
js
mov
sbb
inc
pushf
or
xchg
addr16
ret
push
inc
lret
xchg
inc
pop
adc
divb
pushf
mov
into
aaa
sarb
iret
jbe
adc
sub
xor
add
mov
je
mov
pop
cmp
mov
divb
adc
js
bound
sub
mov
pop
out
inc
pop
sti
add
or
xchg
jecxz
cld
mov
mov
cltd
sub
or
sub
iret
std
lock
fcomp
mov
rorl
xor
mov
mulb
sbb
pop
in
ret
xchg
in
mov
fmuls
mov
loopne
aam
pop
dec
test
jnp
insl
pop
cmp
shrb
mov
fs
leave
inc
jb
int
add
into
int3
xchg
movsl
pop
push
shl
adc
jp
xchg
or
add
push
and
xchg
mov
inc
aaa
adc
pop
sarl
ret
aam
pop
push
adcl
call
not
test
sbb
jb
clc
xchg
add
sbb
inc
cltd
cmpsb
push
shl
rol
dec
mov
orb
test
js
test
and
addr16
xchg
movsl
popl
push
repz
test
test
std
out
or
mov
insl
shrl
sbb
cmpsl
push
hlt
das
pop
xchg
ficoml
push
fcomip
orb
js
cmp
lahf
xor
pushf
push
xchg
inc
stc
xchg
int
ret
wbinvd
stc
ds
int
and
lock
iret
or
inc
mov
frstor
repz
mov
inc
inc
and
or
lods
inc
mov
mov
jns
push
stos
xor
fidivl
out
es
push
push
dec
mov
jp
mov
lock
cld
sub
cmpsb
inc
dec
imul
xchg
ds
mov
ss
mov
insb
test
add
mov
stc
movsl
mov
loopne
fistpll
je
iret
lret
mov
icebp
pop
aad
cmp
ficompl
mov
inc
mov
cmc
push
sbb
popf
jle
xchg
sub
mov
add
fildll
fdivrs
jns
dec
push
fistps
in
sbb
dec
ss
jecxz
pop
xchg
mov
add
jmp
xchg
dec
test
jp
jno
pop
or
xchg
test
mov
add
xchg
adc
fmull
push
or
mov
mov
mov
nop
or
nop
testb
mov
ret
and
out
fwait
mov
mov
mov
aad
pop
jl
mov
pop
rcl
mov
jle
inc
bound
cld
sarl
shr
data16
lret
push
mov
xor
xor
jno
jns
jno
cmc
cmpl
lds
sub
leave
cmpsb
lods
shl
mov
movsb
mov
dec
das
cmp
fisubs
xlat
movsl
out
cmc
xchg
ret
sbb
mov
js
pop
jae
push
mov
and
push
cltd
and
inc
jmp
repz
cmp
xchg
mov
shll
sbb
push
or
sbb
add
test
mov
mov
mov
inc
add
lahf
add
shl
mov
and
jo
cmp
ds
enter
adc
jne
in
lret
jb
xor
xlat
shl
add
mov
pop
ror
mov
aas
sbb
lahf
jnp
add
loopne
bound
out
push
lea
shlb
push
mov
cmp
xchg
or
adc
mov
adc
iret
push
or
adc
xchg
aam
mov
or
adcl
mov
inc
aas
mov
daa
xor
sahf
fucomip
jae
mov
fwait
popf
int3
js
push
and
jno
les
cmp
insb
call
xchg
inc
pop
mov
and
out
cli
and
and
mov
lret
int3
push
xchg
mov
adc
inc
out
jp
adc
loope
mov
je
aas
cmpsb
call
repnz
leave
xchg
and
jno
pop
adc
add
mov
movsl
enter
and
inc
mov
adcl
mov
dec
dec
pop
rol
pushf
adc
xchg
in
cwtl
add
xor
nop
xchg
pop
lds
mov
scas
movsb
and
mov
mov
sbb
pop
sub
push
repz
cmp
repnz
add
repnz
or
jle
mov
cmpsb
ja
test
mov
push
xor
dec
push
pusha
es
cmp
clc
cmp
ret
lahf
sub
push
pop
jne
pop
fisubl
add
aas
sarl
fadds
mov
sub
daa
jo
cmc
or
fistl
out
xchg
fsubl
ss
movsb
fcoms
jns
stos
movsl
scas
lahf
arpl
sbb
dec
ds
push
inc
cmp
mov
pop
push
mov
dec
outsl
addr16
xchg
enter
test
gs
dec
cmpsb
mov
out
aas
cmp
xlat
shr
lahf
orl
xlat
popa
pop
dec
push
aaa
cltd
push
mov
cwtl
mov
add
stos
jmp
inc
pop
ret
lods
hlt
cmp
sbb
ljmp
test
and
scas
pop
or
loop,pt
sub
dec
and
sti
inc
adc
xorl
cwtl
out
jno
xor
pavgb
sbb
in
mov
pop
pushf
dec
dec
out
mov
pop
roll
cmp
sub
out
xchg
fistpl
pushf
int
das
inc
mov
add
lcall
insb
out
sbb
pop
push
outsl
sub
xchg
xchg
adc
mov
add
mov
jnp
push
loopne
xlat
mov
dec
and
imul
jle
jle
cmc
or
out
insl
xchg
dec
pop
and
cmp
push
imul
les
mov
pop
sub
or
jmp
mov
roll
cmp
scas
push
pop
icebp
cmpsl
call
fistps
cmp
mov
add
adc
rcrl
sbb
pop
adc
aam
cli
leave
shl
sbb
and
loopne
loop
mov
mov
rol
fwait
xchg
jg
pop
add
out
xchg
movsl
scas
inc
lods
shrl
ret
mov
loope
shrb
daa
mov
xchg
mov
lcall
fistl
pop
cli
mov
cli
movsl
call
push
in
loopne
mov
and
nop
enter
mov
in
cli
mov
lods
cmp
xlat
mov
xlat
add
add
orb
push
movsl
mov
sub
sub
xlat
sub
pop
xor
loop
cmp
add
cltd
sbb
in
bound
mov
cmpsl
jp
pop
push
jo
int
add
negl
dec
push
mov
negl
into
mov
rcr
jg
inc
divb
xchg
gs
js
shr
and
mov
mov
or
shrb
mov
mov
pop
xor
cmp
inc
cmp
adc
mov
call
cli
xchg
adc
or
mov
dec
add
sbb
sahf
xchg
and
inc
mov
sbb
mov
addr16
in
subl
aam
xor
dec
xor
cmc
ds
cmp
out
and
roll
cmp
out
pushf
and
add
lret
clc
lods
xchg
xor
sub
pop
loop
popa
std
dec
cmpsl
mov
mov
lret
push
sahf
mov
repnz
mov
cmp
sti
add
incb
jle
imul
idivb
int
xor
aas
ret
daa
push
js
xor
loope
pop
movsl
daa
ja
mov
in
lahf
sub
not
xor
jae
rep
pop
jmp
mov
mov
push
notl
mov
shrl
xchg
push
stc
xor
daa
pop
pavgb
cltd
jmp
push
icebp
push
int
inc
mov
xor
out
in
sub
xchg
and
mov
mov
movsl
jae
iret
mov
rolb
pop
xor
add
and
mov
bswap
gs
and
or
dec
inc
push
nop
cmp
lods
adc
lods
mov
push
adc
add
mov
cli
rcrl
xor
sbb
inc
mov
es
cmpsl
shr
popf
fs
xchg
inc
test
push
adc
sbb
es
je
mov
add
dec
xor
aam
hlt
push
or
in
test
mov
int3
jl
sub
je
and
addr16
imul
and
mov
mov
stc
sub
add
aad
shlb
fldl
roll
int3
cli
lods
bound
inc
dec
fdivs
dec
cmpsb
push
push
sbbl
sbb
outsl
add
sub
mov
clc
shr
inc
test
aaa
out
mov
push
adcl
and
test
das
cmp
fs
xchg
pop
cld
add
es
add
fists
fcomi
in
inc
scas
loope
in
test
in
mov
sub
ds
xor
fstpt
psrad
in
xor
mov
cmp
hlt
mov
fstpt
or
push
ljmp
push
aad
fs
stos
pop
sub
fsub
ss
in
pop
jg
push
mov
scas
lds
adc
enter
jnp
add
adcl
jg
ja
sub
sbb
xchg
mov
addr16
fchs
pop
cmp
mov
dec
sbb
ss
jmp
cld
loope
xor
je
rcrl
adc
out
jp
add
adc
call
jg
or
cmpl
mov
xor
push
xchg
pop
mov
inc
and
xchg
loope
lret
das
pop
jns
in
pop
mov
cmp
loopne
sub
popf
adc
sbb
cmp
jl
jae
fdivrs
pop
mov
fst
stos
shll
jae
pcmpgtb
sahf
or
xor
pop
fisttpll
idivl
lahf
push
dec
lea
ficoml
cmp
add
push
movsl
jne
cmpb
lods
xor
loop
es
lods
out
cmp
mov
sbb
je
xor
into
repnz
mov
icebp
loope
lea
cld
iret
xor
jecxz
push
repnz
cwtl
sbb
cmp
dec
sub
xchg
lods
sahf
mov
negb
jb
pop
jp
jb
ret
pop
xchg
pushf
jmp
push
repz
cmpsl
pushf
mov
sbb
jne
push
dec
inc
mov
cld
lahf
rcrl
aam
mov
scas
sarl
sbb
shll
pop
hlt
add
stc
dec
callw
xor
inc
pop
aam
or
pop
out
hlt
pop
dec
shll
jle
jbe
testl
cltd
stos
int3
daa
lcall
xor
rclb
outsb
inc
dec
xchg
mov
cmp
xchg
add
mov
hlt
andl
push
mov
fistpll
sub
arpl
repnz
jo
jns
addr16
inc
cltd
fdivs
popa
add
inc
subl
mov
data16
bound
daa
pop
and
and
mov
popa
out
mov
jbe
leave
inc
or
pop
rorl
mov
out
jae
mov
je
icebp
push
sub
xor
mov
dec
inc
inc
cmpsb
sahf
in
loopne
frstor
xchg
loope
cwtl
cmp
mov
iret
sub
inc
and
stos
sbb
ja
xor
fldenv
pop
add
ret
nop
sub
mov
jg
lock
and
xor
ljmp
std
mov
in
and
pusha
xor
cmpsl
and
gs
test
sub
xor
pop
dec
mov
push
cmc
mov
addb
loope
push
fs
mov
out
stos
xor
in
sbb
sbb
shll
std
je
test
popa
jmp
ja
adc
in
out
faddp
in
sub
rcr
ds
scas
push
mov
nop
and
jae
sbb
aaa
sub
and
ret
mov
lcall
leave
bound
mov
sbb
mov
or
dec
insb
clc
fcomps
mov
or
in
pop
out
mov
add
sub
cld
cmp
pop
icebp
sub
test
js
inc
inc
dec
pop
jae
lods
std
and
fcoms
shrl
jecxz
insb
adc
xor
fildll
xchg
jns,pn
inc
pop
repz
leave
mov
das
ss
test
dec
outsb
std
stos
das
ljmp
mov
add
mull
inc
fisttps
pop
dec
inc
test
jg
fsubr
push
mov
mov
inc
mov
mull
and
rolb
mov
jmp
lea
adc
jl
repnz
pop
scas
scas
dec
xchg
in
inc
into
jg
inc
xor
mov
mov
dec
ret
dec
xchg
inc
cmp
into
scas
cmp
jge
cmp
push
push
fbstp
call
call
pop
push
cmc
push
mov
adc
and
rol
imul
stos
lock
or
sbbb
js
hlt
popf
inc
repnz
sbb
cmpsl
and
inc
xchg
lods
out
shrb
add
movsl
lods
fwait
pop
inc
mov
dec
fidivrs
pushf
cltd
mov
adc
icebp
mov
ja
lds
test
std
xchg
mov
jno
push
xchg
aad
xchg
xor
dec
lret
sbb
sti
cmpsl
mov
mov
lret
and
push
aam
jo
inc
test
and
xchg
add
dec
les
popa
pop
add
bnd
not
or
fwait
iret
shll
js
mov
xor
and
inc
push
mov
push
jmp
inc
out
mov
pop
mov
call
jns
push
lock
movsl
shrb
dec
shl
add
xchg
stos
div
mov
cli
dec
in
pop
lds
shrb
xor
mov
or
sarl
ss
lock
sahf
push
adc
out
xlat
xor
inc
ja
popa
mov
sbb
mov
inc
inc
sbb
rcrl
adc
adc
pop
or
into
cmp
jl
bound
jle
mov
insb
pushf
dec
bnd
cld
aas
ss
cmp
or
xor
pop
sbb
outsl
or
pop
push
outsl
aaa
clc
xchg
adc
xchg
insb
stc
sub
add
cmp
push
mov
fldt
in
cmp
aas
push
xchg
in
decb
push
mov
adc
cmc
mov
and
add
add
test
push
fld
jb
fadds
fadd
faddl
push
pop
mov
aam
xor
lds
mov
push
mov
mov
idivl
ss
es
xchg
cmpsb
add
xchg
cltd
clc
aaa
aaa
mov
out
je
lret
inc
or
push
pushf
adc
dec
lret
push
lods
test
ljmp
insb
adcl
in
pushf
mov
ret
mov
test
and
inc
rolb
fwait
inc
sbb
test
or
out
pop
js
push
aam
in
and
mov
xor
sub
fcomps
mov
andl
fcompl
popa
stos
movsl
sbb
aam
cmp
dec
addr16
stc
push
adc
fildl
add
insb
stos
icebp
mov
mov
rcrb
xor
test
in
pop
shl
inc
mov
enter
dec
push
pop
stos
rclb
push
jmp
cmpb
jl
cmp
nop
add
pop
cmp
xlat
fnstsw
popf
das
fimuls
mov
cmp
imul
mov
fwait
or
push
fwait
loop
aad
push
mov
add
dec
add
mov
and
sub
inc
enter
cmp
cltd
jl
mov
int3
cmpsb
sbbb
mov
stos
push
jmp
lods
xchg
push
and
xor
add
pop
sarb
fsubrp
jp
sub
jecxz
ficoml
dec
and
movsb
push
std
xchg
inc
xor
cmp
rcrb
cmp
push
dec
or
pop
or
ja
or
js
jo
js
fistpll
jbe
sbb
or
insl
cli
add
stc
cmp
xchg
ret
push
sbb
jl
movsl
add
mov
or
repz
stos
cmp
xchg
into
cwtl
push
mov
inc
ret
cmc
or
pushf
repz
fiadds
dec
add
sysenter
and
sti
fs
addr16
add
cmpsl
sub
and
pop
dec
enter
leave
jnp
lods
rol
dec
pushf
mov
loope
jne
cltd
mov
dec
adc
stos
push
dec
push
xchg
cltd
in
pushf
test
int3
incl
daa
pop
lods
cmpb
call
lret
stc
pop
mov
cld
fstpt
jge
fidivrl
movsl
sbbl
ficoml
xchg
xor
push
push
cli
mov
sbb
lret
mov
sbb
gs
lahf
lret
icebp
std
in
mov
push
lds
inc
pop
nop
paddusb
insb
or
dec
inc
or
dec
mov
sub
dec
aad
pushf
cmp
pop
cli
sub
cmpsb
inc
out
mov
dec
inc
dec
leave
gs
cmpsb
cmc
ret
pop
sub
adcb
mov
ja
inc
loopne
nop
test
lods
add
cltd
pop
in
pop
fs
sub
xchg
jl
mov
inc
inc
dec
mov
sahf
fwait
jno
aas
or
push
scas
dec
in
push
sahf
in
push
test
push
es
imull
lret
push
outsb
rol
insl
shlb
pop
mov
into
jp
test
jmp
rclb
pop
sbb
repz
stos
dec
jecxz
mov
scas
scas
lcall
ficompl
jno
imul
fidivl
push
cli
cmp
jbe
lock
fwait
mov
std
nop
inc
mov
sti
sti
or
and
inc
insl
cmp
push
mov
push
jnp
rcll
testl
sbb
int
dec
xor
sbb
push
es
movzwl
aaa
shll
lret
lock
lea
lods
pop
pop
clc
popf
inc
fcomps
cmp
xor
xchg
or
push
mov
iret
push
adc
jns
call
cmp
les
cs
sti
push
jbe
out
or
add
cmc
ja
cmp
mov
add
iret
inc
imulb
lret
jmp
outsb
scas
mov
sbb
inc
cmc
fs
outsb
mov
repnz
inc
icebp
xor
inc
pushf
and
jg
jne
mov
imul
iret
mov
jno
mov
leave
push
xor
mov
push
xor
push
lret
bound
adc
into
sub
push
fdivr
dec
adc
dec
jecxz
push
xor
adc
push
ja
lock
scas
vmovapd
cmp
and
jecxz
mov
lods
adc
pop
mov
xchg
mov
imul
fcmovnu
adc
inc
test
cmp
movsl
scas
sub
fs
daa
les
mov
fimuls
pop
lea
mov
cs
ret
xchg
mov
jns
mov
or
sub
and
dec
lret
push
cwtl
stos
mov
ds
mov
outsl
repz
xchg
into
rcrl
cmpsb
stc
mov
outsb
cli
into
inc
pop
ds
fwait
jecxz
xchg
mov
mov
dec
incl
flds
or
ja
jo
dec
repnz
add
xor
dec
aas
out
sub
cmp
fistpl
repz
adc
jmp
cmpsb
push
imul
mov
loop
push
ds
or
pop
aaa
jecxz
and
add
or
test
outsb
movsl
and
push
adc
adcb
mov
push
cld
pop
hlt
out
sub
cmp
bound
xchg
xchg
aaa
in
and
mov
sub
xor
push
mov
xchg
mov
cmpsl
imulb
je
fstl
xchg
push
mov
ds
cmp
dec
arpl
or
pop
aas
in
in
iret
push
sar
out
adc
mov
mov
test
push
out
mov
xchg
int3
cmp
fidivrl
and
jns
lea
mov
ror
test
lods
sbb
dec
pop
mov
push
dec
aas
leave
clc
stos
jg
stos
xor
shr
cmpsl
cmp
sbb
and
dec
cmp
push
mov
lea
push
repz
and
ja
jbe
insb
push
or
jnp
and
dec
cmp
mov
mov
cltd
cmp
in
mov
out
xchg
dec
repnz
push
std
imul
pop
dec
imul
test
aad
fisubrs
es
pop
hlt
dec
lea
adc
lods
nop
push
sbb
mov
mov
mov
sub
mov
pop
xor
pop
inc
rcl
lahf
dec
xor
sti
enter
pushf
mov
lahf
fistl
cld
or
fstpl
mov
push
push
lock
sub
jp
mov
mov
xorb
fucom
js
mov
push
pusha
lret
add
loop
int
pop
jmp
ret
out
clc
cmp
and
int
xchg
pusha
flds
ret
mov
cld
popf
sbb
negl
sti
js
shlb
push
mov
xlat
lods
test
inc
cmpsl
cmpsb
and
push
shrb
dec
cmpsb
clc
adc
xchg
pop
push
push
dec
push
int3
fs
pop
mov
jnp
mov
test
stos
sbb
xor
shrl
cmpsb
jb
mov
into
xchg
pop
adc
xchg
lds
scas
std
popf
rcrb
xchg
insl
jbe
pop
jmp
add
mov
adc
dec
imul
lahf
ja
push
xchg
shl
lea
mov
push
cmp
and
jne
popa
not
lea
adc
and
rolb
popf
sub
xor
mov
je
es
cmpl
push
loope
push
testb
add
sbb
fnstenv
mov
sti
push
das
imul
mov
dec
lcall
int3
out
adcb
sub
cmp
insb
adc
inc
mov
movsl
ret
fnstenv
hlt
hlt
aam
sbb
negb
push
cmp
fs
inc
mov
mov
out
out
cmpsl
cmp
sbb
sbb
mov
pushf
pop
xchg
add
mov
add
stc
sarl
xor
sub
mov
push
jo
stos
lods
pushl
push
jo
push
aad
mov
dec
pop
pop
push
mov
push
add
mov
mov
mov
jp
lods
sub
inc
inc
pop
push
push
xor
lods
out
xorb
enter
fstpt
ljmp
inc
mulb
inc
pop
mov
in
xchg
push
sub
out
fimuls
pop
or
sbb
pop
int
cmp
pop
lock
mov
cmpsl
in
fs
push
scas
sahf
and
inc
test
orb
mov
lods
cmpsl
and
test
and
fmuls
out
cmpsb
push
xchg
push
nop
inc
cs
jg
icebp
cld
outsb
mov
fwait
js
inc
test
dec
xchg
cmpsl
lret
push
sbb
dec
sbb
in
mov
mov
aas
ds
shll
cwtl
leave
jo
pop
sbb
xchg
adc
xor
mov
sbb
test
repz
iret
test
dec
xchg
addr16
ljmp
push
mov
pop
scas
and
push
pop
sub
imul
in
out
cmpsb
mov
call
inc
xor
push
push
cmp
adc
inc
mov
inc
or
sub
lods
inc
movsl
jecxz
push
scas
sbb
daa
xor
jae
mov
and
dec
xor
jle
push
hlt
cmp
int
jg
jo
sbb
fdivrs
and
mov
stc
mov
pop
pop
cmp
mov
sub
loopne
sahf
nop
mov
push
pop
cmpsl
cltd
cwtl
bound
mov
mul
xchg
rcr
cmpsl
arpl
fsubrs
mov
xor
enter
pop
adc
cmp
andb
stos
jl
inc
decb
and
movsl
jmp
cwtl
mov
es
ds
in
scas
cli
xchg
scas
push
scas
ljmp
filds
add
popf
push
jl
hlt
and
rorl
int3
ja
and
mov
xchg
movsl
fstps
mov
enter
fiaddl
jle
xor
cmp
cld
jmp
push
jo
lds
cmp
push
mov
test
shrb
adc
adc
ljmp
aaa
adc
es
or
sbb
call
cmp
inc
pop
jl
pop
ds
dec
jp
outsl
cmp
add
inc
xchg
xor
jmp
push
addr16
inc
inc
and
orb
sarb
imul
xor
pop
inc
sti
shl
adc
fbld
popa
loop
ljmp
imul
mov
mov
hlt
xlat
loopne
inc
into
lea
push
rcll
push
mov
add
js
addr16
std
push
push
push
sbb
in
pushf
insl
decl
and
or
add
push
or
ss
stos
aad
jmp
mov
sub
ret
les
mov
shlb
cwtl
push
aad
mov
in
adc
enter
fldenv
xor
lret
pop
ljmp
in
jb
dec
insb
hlt
push
sbb
mov
leave
pushf
sarl
sub
sub
test
dec
lcall
shrb
cmpsb
add
les
jno
cmp
hlt
mov
jnp
outsl
cmp
shll
mov
out
inc
lret
push
popa
shll
ja
jae
xchg
jo
fistps
mov
lret
push
mov
iret
add
xchg
test
xchg
lods
pop
cwtl
push
mov
fcoml
shll
lods
push
stos
push
add
call
mov
mov
out
jae
push
aam
inc
mov
clc
sbb
cmp
mov
je
mov
inc
add
sbb
ret
addb
jae
cmpsl
and
jne
loopne
jmp
ja
xor
rorb
lods
cmp
adc
add
stos
std
arpl
mov
int3
les
fbld
jnp
out
mov
mov
pop
repz
test
jae
ds
es
movsb
iret
out
push
jbe
add
inc
enter
js
pop
aam
push
lea
cmp
and
inc
clc
outsl
cltd
outsb
aam
out
push
push
clc
cwtl
enter
icebp
cmp
mov
mov
pop
stos
inc
clc
clc
lods
inc
nop
sub
dec
mov
mov
pushf
test
jne
repnz
out
outsl
fsts
insb
scas
data16
jb
sub
jecxz
jge
or
js
std
clc
icebp
std
jo
iret
xor
inc
or
sbb
push
cmp
test
repnz
add
test
dec
jb
cmc
push
sbb
sbb
xor
jl
mov
into
gs
addr16
cmpl
sbb
jmp
mov
pop
loope
mov
icebp
rorb
ja
lock
adc
mov
aad
sahf
mov
pop
std
mov
inc
or
data16
fdivr
sub
in
fcompl
adc
push
pmaxsw
loopne
faddp
mov
aas
icebp
mov
clc
imul
iret
scas
icebp
cmpsl
jo
test
sbb
xor
test
incl
xor
add
mov
shll
jge
jg
fwait
add
push
jae
mov
and
lds
push
addl
sub
and
test
jle
dec
into
sub
sub
dec
dec
sub
clc
orl
dec
jae
aam
mov
loop
adcb
mov
and
xchg
or
js
inc
dec
int3
mov
mov
push
or
push
jge
lcall
jle
pop
push
cli
gs
test
or
mov
push
push
mov
shlb
sub
jmp
sub
jo
inc
mov
out
xchg
pusha
mov
xchg
sti
shlb
sub
add
xor
in
fdivrs
test
mov
add
push
lds
jnp
push
and
xchg
or
mov
jl
popa
in
ret
and
and
imul
jno
inc
cmp
cmp
shrb
pop
popa
divl
pop
repz
dec
shll
push
adc
test
std
inc
push
cs
cmp
cs
cmp
or
loop
push
stc
cmpsb
dec
or
jae
test
sub
xor
dec
imul
jne
cmp
push
insb
pop
add
dec
xchg
sbb
mov
mov
scas
pushf
cld
cmp
testb
pop
sub
jne
aad
cmc
fistpll
loopne
dec
int
cmp
mov
bound
ret
inc
roll
in
sti
enter
cmpb
cmp
in
pop
push
out
mov
icebp
mov
add
cmp
stc
push
or
std
stos
lds
mov
pop
decl
jnp
icebp
stos
loop
rclb
ret
xchg
sub
enter
pusha
cmc
cmpsl
and
inc
mov
mov
sbb
test
and
test
add
push
fnsave
es
xor
test
bnd
cmp
sbb
fistpll
mov
dec
and
jo
jle
aam
movsb
jle
movsb
leave
cltd
aam
add
inc
fcomp
in
sbb
adc
movq
sbbl
add
jb
or
push
mov
stos
jle
cmc
sti
pop
cmp
mov
add
push
push
mov
dec
mov
data16
xor
fwait
test
sbb
pop
fdivs
scas
stc
cltd
push
pushf
fs
inc
pop
jne
dec
pop
iret
mov
int
sub
movsl
out
push
mov
push
ret
push
js
dec
cmp
scas
xchg
dec
mov
push
xor
push
data16
insl
and
sbb
lods
push
mov
popf
outsb
fnstcw
pushf
push
jle
push
mov
pop
pusha
mov
pop
xchg
adc
pusha
lea
pop
loope
sahf
or
sub
das
in
roll
addr16
jne
fisubrl
test
rolb
add
xor
mov
xchg
sub
clc
idivb
dec
or
add
xchg
sub
mov
jp
inc
or
out
dec
or
sub
dec
lock
psubb
cmp
xchg
ljmp
fnstcw
add
and
loopne
jae
es
cmp
sub
cmpsl
loope
insl
in
push
aaa
lcall
xor
dec
jae
adc
add
dec
adc
out
std
dec
inc
inc
or
loop
xchg
mov
lcall
inc
ljmp
cwtl
mov
mov
aad
rcrb
add
inc
pop
pop
or
pushf
daa
in
int3
iret
pop
cli
dec
push
lcall
lea
inc
xchg
sbb
mov
movsl
in
inc
in
jl
iret
inc
push
js
in
in
mov
movsb
jnp
mov
sub
xor
lea
leave
repnz
int
sbbl
imul
lahf
push
cli
inc
shlb
jmp
andb
hlt
cs
imul
aad
in
mov
shr
and
xor
ret
xchg
xor
test
push
int3
push
jecxz
lea
out
fldt
xchg
ret
push
cmc
jno
sarl
adc
aad
nop
pop
cld
loope
mov
mov
mov
jb
arpl
mov
pop
lcall
xchg
mov
jae
mov
push
jo
cmp
jne
mov
iret
push
ja
int3
push
out
dec
mov
sti
fs
jmp
mov
call
iret
das
adc
push
in
push
icebp
std
stc
jnp
stos
jp
stos
jl
xchg
cmpl
mov
pop
imul
xchg
fwait
lea
rcrb
pop
mov
inc
lock
aad
xchg
add
mov
push
les
fildll
mov
mov
jae
pop
push
dec
jecxz
pop
ds
sarl
lock
pusha
inc
and
loopne
cltd
sub
add
xchg
das
stos
in
pop
pop
in
mov
imul
mov
sub
pop
dec
loopne
cwtl
inc
dec
pop
loop
dec
addb
aaa
push
or
and
enter
aas
loope
lea
je
and
je
mov
pop
inc
shrl
push
lods
jbe
nop
enter
aaa
fwait
xor
jg
mov
sbb
cmp
notb
xor
shlb
dec
inc
mov
pushf
cs
clc
lods
jp
add
sbb
push
mov
std
sub
xchg
pop
mov
sub
cli
mov
push
push
inc
jecxz
push
xchg
xor
jno
cld
mov
sub
xor
cltd
xchg
in
and
cmpb
leave
sbb
pop
xchg
push
mov
inc
test
sub
lret
add
in
cld
lcall
pop
inc
scas
push
inc
out
outsb
fadds
pop
in
jno
jb
popf
push
loope
lock
lock
push
or
loopne
aaa
std
test
les
inc
jecxz
jg
jg
dec
mov
pop
pop
push
push
mov
fildll
int3
cli
push
inc
fistps
fcmovb
mov
push
out
popa
mov
je
adc
inc
jbe
inc
je
test
push
test
pushf
int
outsb
fldt
imul
dec
xchg
push
add
sbb
ret
jns
sbb
stos
or
pop
dec
call
andb
push
inc
cld
nop
dec
sbb
xchg
sbb
xor
movsb
movb
decb
add
int
cld
aas
je
cmpsb
cmpsb
and
jg
mov
pop
pusha
adc
lock
pop
ja
inc
loopne
in
out
repnz
fistl
xchg
sbb
and
mov
in
xor
push
push
and
adc
mov
rol
cmp
sub
test
or
flds
xchg
imul
mov
hlt
in
repz
adc
jns
movsb
fmul
out
popf
test
cmpsl
outsb
out
or
push
inc
mov
inc
mov
sub
or
fdivp
fidivs
scas
cld
jno
clc
frstor
outsb
dec
lods
lods
pop
or
push
fisttps
cmp
xchg
test
adc
or
stc
jle
rep
mov
or
add
imul
fistps
xchg
dec
xlat
lret
add
leave
dec
test
lock
ljmp
adc
loope
es
loope
inc
mov
push
pmuludq
shrl
lock
push
xor
movsl
mov
and
cltd
sub
add
cmp
addb
aad
xchg
leave
mov
scas
pop
mov
push
and
cmp
stc
mov
fsts
add
into
pusha
mull
icebp
insb
dec
mov
fisttps
repnz
sahf
inc
push
jns
push
xchg
stos
call
lcall
arpl
cmp
cli
or
pusha
jmp
xor
out
add
mov
js
inc
mov
sti
mov
out
cmpsb
aas
jge
cmc
and
fdiv
xchg
fs
arpl
lahf
dec
jbe
pushl
gs
into
jb
and
int
mov
xor
sub
scas
in
mov
cwtl
or
mov
jnp
mov
xchg
mov
xchg
or
cltd
lahf
es
mov
scas
jo
pop
pop
sbb
pop
add
mov
sub
push
movsb
rolb
mov
arpl
jmp
xchg
mov
push
int3
gs
cmp
mov
sub
add
into
ljmp
scas
xchg
xchg
mov
inc
xchg
bound
dec
pop
outsb
ret
cld
sub
add
push
loope
pop
inc
movsb
sahf
and
sbb
pop
and
out
aas
clc
or
adc
adc
jbe
aad
mov
lcall
shl
xor
popf
nop
dec
sub
dec
fadds
xor
mov
jbe
and
xchg
mov
icebp
imul
sub
int3
and
mov
mov
jbe
push
aam
pop
push
dec
int
xor
xorl
mov
scas
out
data16
push
sbb
fwait
push
and
hlt
xor
fwait
clc
mov
dec
and
int
xor
pop
inc
inc
insb
lods
xor
mov
mov
aaa
iret
jns
and
add
daa
jmp
sub
add
cwtl
mov
and
sub
xor
mov
movsl
lret
add
adc
mov
mov
push
ret
stos
dec
mov
inc
pushf
bound
loopne
jle
xchg
xor
xchg
jne
add
test
and
int3
fsubrl
lret
scas
or
jbe
fistl
mov
pop
mov
shll
std
repnz
movsl
adc
je
mul
lods
xchg
pop
push
lds
enter
aaa
dec
in
into
incl
ds
dec
fdivs
add
fs
xor
lea
cmp
sbb
cld
cmpsb
add
dec
mov
in
loopne
sbb
xor
out
out
cs
xor
das
jmp
xchg
and
adc
mov
cmp
inc
in
pop
int
sub
xchg
and
sbb
imul
jg
and
pop
ss
fiaddl
push
pushf
ret
xchg
ret
xchg
cld
mov
inc
xchg
dec
and
roll
mov
movsl
roll
mov
push
cmp
out
mov
out
out
gs
je
mov
test
out
movsb
adc
cmpsb
cmp
adc
dec
mulb
mov
push
popa
dec
rolb
xlat
jns
push
divb
outsl
push
imul
jns
fsub
xor
mov
dec
mov
movsl
dec
rorl
addl
adc
xorb
cmc
pop
into
ficoml
dec
cmpsl
call
pop
xorb
mov
xor
cltd
dec
mov
lahf
pop
jp
call
insl
or
dec
ja
aam
mov
or
mov
mov
into
xor
mov
lret
test
push
or
cmp
inc
push
mov
push
pop
jo
das
leave
in
mov
jp
or
cmp
fadds
or
sub
sbb
negb
ss
negb
push
shl
push
and
inc
and
fsubrl
pushf
dec
outsl
add
jne
mov
loop,pt
dec
sti
and
dec
mov
push
xchg
mov
lret
fsts
insb
or
add
lea
mov
inc
cmp
cmp
or
out
lea
pop
sbbb
cld
out
ret
dec
inc
or
lret
mov
clc
sahf
sbb
cmc
nop
adc
out
push
insb
jns
add
in
outsl
dec
add
fisttpll
or
adc
out
ss
mov
and
cld
mov
inc
repnz
inc
or
cmp
insb
fsubrs
fwait
xlat
or
push
or
fcompl
push
repz
adc
cld
cmp
xchg
addr16
add
sahf
fimull
lods
ret
aad
xchg
lret
sub
in
xchg
cmp
into
repnz
dec
aas
xor
subb
aam
imul
push
gs
xchg
jle
into
xor
dec
unpcklps
lods
mov
jbe
insb
pop
inc
fs
ljmp
xor
scas
stc
movsb
sub
mov
jmp
daa
int
fnsave
mov
adcl
std
cmpsb
jecxz
push
in
ret
outsl
mov
lahf
ror
movsb
xchg
test
fbld
cli
push
fimull
jnp
sbb
nop
gs
js
and
mov
mov
rcrl
dec
cmp
add
fcom
push
es
jl
mov
xchg
pop
loop
push
or
inc
adc
jl
clc
and
imul
int3
pop
inc
sub
imul
pop
out
lea
jo
lods
into
sbb
sub
bound
ret
jmp
or
jg
cltd
xchg
aam
cmp
cli
mov
push
dec
push
repz
inc
ljmp
es
add
pushl
sbb
push
rcll
daa
mov
push
testl
and
jg
add
jno
mov
cmp
jno
jbe
sub
jns
mov
mov
movsb
sahf
add
lods
movsl
js
xlat
mov
xor
jbe
jge
xchg
dec
pop
jbe
jno
insl
sbb
mov
addr16
xor
je
jle
sub
test
cmp
inc
adc
arpl
dec
shll
fxch
outsl
lock
mov
add
cmp
lret
imul
fs
loope
push
repnz
adc
je
test
andb
mov
push
push
cmp
and
iret
push
dec
mov
repz
cld
dec
dec
xor
aas
mov
je
movsl
aaa
fdiv
pop
xchg
xchg
in
xor
cmp
sbb
and
inc
xchg
stos
dec
pop
sar
cmp
adc
sbb
int
adc
adc
add
pop
lds
int3
loopne
decb
in
shr
sub
inc
sbb
shr
xor
movsl
in
fld
ret
hlt
mov
xchg
dec
mov
push
cld
jnp
pop
pop
lret
arpl
jne
daa
pop
test
add
adcb
loop
out
adc
rcrb
pop
rcl
in
push
cmp
pop
inc
cwtl
lock
repz
or
sbb
inc
mov
mov
mov
jp
jmp
out
mov
insb
in
xchg
in
and
push
addr16
push
dec
pop
pop
mov
jecxz
sbb
inc
les
mov
pop
cmp
push
dec
lahf
notb
scas
sbb
pop
mov
fisttps
mov
in
js
shlb
jno
mov
sbb
ret
cmpsb
fistpl
ret
push
add
mov
pop
sbbl
lods
dec
into
ror
push
mov
xlat
sbb
rcl
push
pop
push
js
cmp
push
xchg
jae
sbb
lret
pusha
jae
ja
xor
xor
and
mov
mov
push
inc
into
andl
mov
lods
daa
sub
xchg
std
cmp
mov
push
insb
dec
mov
ljmp
cmp
fdivrs
pop
inc
pop
adc
and
shrb
adc
mov
fbstp
xchg
adc
mov
jle
repnz
mov
insl
imul
imul
scas
in
ljmp
or
xchg
sbb
popf
cmp
mov
repz
mov
repnz
cltd
call
scas
fwait
mov
xlat
popa
pop
inc
push
xor
subl
rcll
movd
or
mov
cld
mov
mov
jo
sahf
mov
or
adc
add
mov
adc
mov
inc
pop
or
add
imul
and
pop
enter
out
sbb
loope
xor
xchg
add
or
ds
cmc
mov
pop
push
mov
or
andb
lret
push
dec
ret
enter
sbb
loop
rcll
es
es
jns
cltd
shr
mov
adc
sahf
or
dec
arpl
lods
mov
in
movsl
adcl
add
popf
loopne
dec
popf
test
xchg
pushf
mov
cmc
rcll
push
mov
lret
xor
outsb
add
cmp
add
jb
mov
dec
xor
sbb
push
out
inc
dec
loop
ds
repz
dec
xor
pop
cld
js
sbb
lods
sub
pop
xorb
push
mov
sub
push
add
xchg
aam
adc
iret
stos
jbe
cld
xchg
push
pop
cli
cltd
sti
dec
jnp
popf
gs
push
push
jo
cwtl
scas
cmpsb
add
cmpsb
sbb
push
notl
jb
mov
pop
or
rcl
sub
repz
inc
imul
gs
mov
sub
cltd
packssdw
add
xor
push
add
jns
pop
cmp
enter
jo
xchg
pop
xchg
push
xchg
dec
arpl
call
or
pushf
inc
mov
mov
mov
dec
adc
gs
mov
dec
xchg
dec
repz
push
xor
sbb
xchg
dec
loope
mov
pop
repz
mov
cmc
rcll
sub
xchg
mov
adc
js
jo
inc
xorl
lcall
ret
stos
sbb
push
push
cmpsl
insb
enter
imul
das
lcall
sbb
xor
in
into
js
inc
and
pop
sub
jge
or
dec
add
filds
test
xlat
aaa
and
add
das
stos
into
add
dec
inc
into
cmpsb
mov
lock
adc
add
hlt
popl
mov
mov
insb
imul
shlb
rorb
sub
je
cld
push
cli
test
in
mov
adc
imul
shll
dec
ficompl
fldenv
lahf
flds
push
movsl
subl
ds
and
out
cmp
adc
mov
das
xchg
mov
insb
jle
int3
in
out
stos
adc
push
jg
mov
jle
pop
ljmp
pop
adc
jp
inc
int
call
jb
lret
adc
mov
sub
shrl
mov
cwtl
out
testl
cli
int3
je
rorb
fistpll
xlat
and
notb
idivb
aas
add
xchg
sahf
mov
add
aas
mov
mov
aam
aaa
lock
jmp
dec
loop
repz
sahf
fmuls
pop
repnz
aaa
add
cmpl
cmp
and
push
add
add
inc
test
dec
add
addr16
mov
arpl
xchg
outsb
dec
jo
push
ror
mov
cmp
gs
mov
dec
pop
stos
mov
push
pop
and
outsl
imul
movsl
xor
add
ljmp
jne
in
lods
lds
add
leave
mov
popa
test
push
cmc
inc
das
pop
nop
xor
xor
jae
ja
cmp
push
jmp
push
mov
fcomip
sbb
fnstenv
xchg
pop
sbb
sub
adc
adc
mov
jne
pop
clc
iret
inc
jge
fcompl
insl
mov
dec
xchg
into
add
push
mov
pop
lods
jp
repz
mov
or
into
sub
rolb
insb
pop
push
jnp
xor
in
aaa
imul
mov
jnp
aaa
insb
adc
add
sarl
add
jmp
push
mov
hlt
cwtl
repz
repnz
and
repnz
shl
fbld
mov
dec
inc
jge
cwtl
pop
inc
dec
iret
xchg
test
test
lea
stc
jg
iret
ret
pop
cmp
cltd
or
sbb
xchg
jge
adc
and
scas
jl
pop
into
fisttpll
adc
and
sub
inc
cmpsl
jmpw
cmp
dec
arpl
lds
pusha
out
sub
xchg
xchg
mov
ja
loope
pop
add
gs
icebp
in
xchg
jmp
jp
test
or
aas
sub
add
pop
dec
inc
das
mov
push
add
lock
fidivrs
clc
fs
mov
iret
mov
or
push
add
inc
shll
jae
sbb
test
mov
in
test
mov
inc
stos
xchg
sahf
jae
leave
popa
push
push
stos
mov
mov
inc
shrl
fsubs
xchg
sub
xchg
mov
pop
fwait
push
add
and
iret
lret
popa
shrl
lods
movsb
mov
iret
out
mov
push
repz
icebp
fcmove
xor
push
outsl
aad
sub
jle
sub
cld
jb
and
sub
adc
sub
cwtl
sbb
adc
jmp
mov
sbb
lods
push
pop
or
inc
mov
iret
rorb
outsb
adc
jl
push
xor
sbb
je
ljmp
jo
mov
mov
pop
lcall
scas
stos
mov
mov
sbb
in
xchg
lods
into
ds
push
dec
mov
dec
pop
xor
and
or
cld
cwtl
insb
out
mov
jmp
je
test
repnz
jecxz
pop
and
rcr
and
add
dec
loopne
iret
xchg
cli
sahf
xor
je
out
or
in
add
test
push
mov
inc
push
sub
imul
dec
cltd
outsb
push
scas
push
insl
pop
add
sbb
les
add
push
lock
rcrb
ss
les
addr16
mov
jbe
js
sub
jmp
cmp
lahf
fisubl
inc
mov
std
mov
pop
mov
push
repz
jb
mov
popa
rcl
out
test
xor
cmp
mov
adc
faddl
mov
nop
add
pop
popa
mov
cmp
enter
in
cs
imul
lea
mov
test
decb
dec
mov
push
into
sbb
out
aad
dec
jo
lcall
or
in
pop
xchg
jecxz
addb
or
lods
dec
and
cmp
cmp
cmp
and
dec
sbb
sub
stc
mov
fwait
jns
je
mov
fisttpll
cmp
or
insb
add
sbb
dec
hlt
pop
mov
test
jne
stc
pop
clc
inc
mov
jp,pt
xchg
push
lret
adc
and
sbb
push
call
lods
test
add
lods
lock
adc
mov
pop
mov
shr
push
or
and
mov
sbb
push
mov
add
icebp
push
inc
je
pop
popf
int
loope
dec
gs
and
mov
lds
sbb
sbb
in
outsb
xchg
xchg
jg
call
pop
lods
add
xor
addb
add
or
dec
testl
ja
outsb
lds
je
and
push
cltd
cmp
jb
cmpsb
mov
inc
inc
decb
dec
nop
pop
cld
push
flds
cmp
jo
cwtl
jg
sbb
and
push
movsb
js
mov
mov
pop
hlt
outsb
out
mov
insb
dec
cmp
inc
ds
xor
insb
and
insl
cmpsl
mov
lds
and
adc
add
call
push
fstpt
sub
lods
fisttps
xchg
fsubrs
dec
rolb
xor
vpminsw
mov
ss
mov
xchg
out
dec
shll
dec
mov
in
loopne
dec
stc
mov
pop
out
xlat
mov
pop
fdivrp
jg
les
fwait
pop
test
xor
mov
mov
pop
sbb
adc
mov
mov
xchg
adc
daa
cli
fsts
jno
xchg
push
dec
leave
insb
adc
pop
jg
sahf
pop
jno
mov
cli
lods
sub
xchg
stos
fwait
jg
imul
pop
dec
in
push
pop
sub
test
fs
test
dec
aam
mov
jp
shll
sbb
les
lods
xlat
or
mov
adc
cmpsb
xor
je
lcall
xchg
out
icebp
lret
enter
cmp
js
push
mov
pop
movsb
jmp
add
ljmp
push
jae
jl
inc
dec
adc
test
les
push
mov
pop
dec
sbb
idivb
sahf
loope
mov
in
sub
mov
jl
xor
cmpsl
inc
jnp
mov
fadds
daa
pop
in
cld
imul
mov
push
lods
js
mov
loop
pop
aaa
out
pop
sub
scas
loope
data16
dec
pop
xchg
outsl
jno
incl
stos
pop
sbb
add
sub
mov
pop
or
ja
mov
xchg
shrl
lods
inc
mov
xchg
and
icebp
dec
dec
xor
test
insb
pop
pop
orl
dec
pop
xchg
cmc
jne
jge
dec
add
pmaddwd
negl
xor
sbbb
sub
jbe
jp
cmp
ret
ds
push
or
outsb
icebp
or
cmpb
call
mov
sbb
sbb
adc
cli
js
in
adc
mov
xchg
mov
popf
iret
repz
icebp
mov
cli
xchg
lcall
mov
xchg
movsl
push
loop
inc
sub
sti
xor
jno
loope
adc
jg
nop
daa
push
dec
mov
inc
test
cli
and
inc
jp
ficoms
lahf
push
int
push
inc
ljmp
dec
test
inc
push
adc
into
test
pop
jo
or
imul
jbe
lret
push
pop
fs
ret
jnp
loope
scas
jmp
jg
arpl
jb
lods
lcall
adc
sub
loope
popa
mov
pop
jge
pop
loopne
fistl
sahf
pop
cmp
cltd
rcr
andb
iret
push
lcall
xlat
cmpb
popf
test
lret
rorb
clc
jecxz
or
loope
lds
lahf
call
rolb
adc
addr16
mov
xor
shr
test
nop
mov
movsb
leave
add
fdivrs
outsl
fbld
outsb
xor
jns
mov
push
orl
lods
es
lcall
pop
fsubrs
mov
fisubrs
imul
jae
jle
xor
mov
xorb
outsb
enter
xchg
xchg
ds
cmp
inc
inc
cltd
bound
repz
pusha
adc
pop
mov
cmp
fisubrl
pusha
dec
imul
cmp
mov
sub
cld
adc
insl
push
lods
stc
pusha
add
and
call
aas
mov
sbb
daa
inc
loop
dec
vpcmpeqb
dec
push
jo
test
daa
jl
mov
jae
adc
sar
sub
rcl
loope
mov
fcompl
int
lret
stos
xor
dec
sti
sarb
leave
cmp
or
pop
push
dec
dec
or
jp
add
sti
pop
aas
sbb
out
cmp
pop
push
inc
jne
push
adc
inc
dec
cmp
xchg
sbb
fwait
lret
fsubl
lea
das
mov
sub
into
cld
incb
fwait
pushw
adc
pop
xor
jge
mov
xor
and
mov
fldenv
cmp
cs
sbb
or
sahf
and
leave
shl
jno
push
sbb
scas
roll
xchg
xchg
inc
jle
mov
pop
push
test
push
or
jno
icebp
xor
ds
sub
cltd
and
mov
rol
or
xor
mov
scas
repz
jae
inc
rcr
mov
std
sbb
mov
test
add
pop
and
in
push
sti
mov
stos
push
mov
push
xlat
push
adc
xlat
dec
and
insb
jno
and
xor
push
repz
jne
fstpt
adc
ljmp
dec
push
mov
push
add
add
add
sub
dec
lock
lds
pop
in
sahf
jb
outsb
addr16
add
scas
lahf
shl
jecxz
sub
xorl
xor
clc
leave
testb
xchg
sbbl
popa
in
rol
push
xor
adc
push
gs
cwtl
sub
pop
cmpsl
mov
mov
test
loop
jl
daa
mov
xor
scas
mov
dec
push
xor
ja
rcrb
pushf
sub
add
sti
jo
out
cmp
lret
inc
dec
rcrb
aas
pop
and
mov
mov
das
sub
jns
aad
cmp
icebp
add
sbb
mov
out
add
push
mov
inc
popa
mov
and
movsl
or
and
imul
mov
lea
cwtl
shrl
and
test
lahf
fs
xor
jns
stos
adc
xlat
or
fdivs
ljmp
pop
dec
push
divl
jecxz
mov
mov
mov
dec
adcl
jle
cmp
lret
adc
pop
fadds
dec
inc
xlat
and
cmpb
cmpsl
or
lahf
jnp
shrb
jo
pop
bound
call
inc
cmp
or
ss
jnp
mov
das
ret
pop
pop
and
mov
inc
cmc
inc
iret
cmpsl
mov
xchg
xchg
adc
cmpsb
mov
mov
pushf
mov
dec
mov
pusha
cli
jge
xchg
xor
cwtl
pop
pusha
cs
in
cli
add
in
leave
mov
int3
xchg
dec
jg
xlat
into
lcall
sbb
dec
jmp
scas
cmpl
std
mov
lods
repz
xor
add
int3
cli
scas
std
int3
sahf
adcb
push
mov
cmp
mov
push
jae
lcall
mov
lahf
push
enter
jns
xor
cli
pop
xchg
mov
mov
popl
push
sbb
push
cli
lea
cmpl
xchg
movsl
mov
std
jae
lcall
xchg
xchg
sbb
mov
sub
xor
repz
movsb
inc
call
lds
insb
pop
xchg
pop
cli
mov
and
push
push
imul
lock
push
es
test
jbe
insb
repz
add
in
shrl
xor
xchg
lea
ljmp
pop
xor
lds
and
mov
lods
dec
add
xchg
mov
xchg
clc
clc
push
mov
sbb
jecxz
fisubrl
in
into
pop
jle
cmc
jecxz
int
ss
stc
mov
or
xchg
or
xchg
mov
cmp
sub
xor
add
jo
sbb
sbb
push
mov
stos
mov
mov
shlb
loop
imul
or
or
adcl
mov
jmp
pushf
data16
ljmp
stos
andb
or
or
loope
sbb
xor
in
sar
outsb
mov
cmp
cmp
sbb
dec
and
stos
jb
popf
iret
mov
xchg
push
sbb
push
lea
test
jp
mov
mov
shlb
ret
lret
loop
jbe
sub
pop
inc
sbb
shlb
stos
in
and
mov
push
push
dec
dec
push
in
cmp
jl
jne
mov
xchg
push
je
lahf
lret
scas
aas
data16
and
cmp
out
mov
mov
push
imulb
and
push
mov
sub
clc
mov
imul
pusha
sbb
or
add
pop
gs
push
mov
pop
adc
inc
and
rcr
scas
cli
ret
out
aaa
arpl
mov
call
adc
pop
mov
mov
xchg
insl
mov
fmuls
inc
pop
fst
xor
cltd
in
outsl
xor
mov
inc
fnstsw
xchg
lods
gs
push
xor
cmp
push
mov
out
mov
lods
lret
jp
ja
aas
fldt
push
mov
jecxz
mov
xchg
hlt
jge
stos
js
inc
decl
pop
pop
fimuls
inc
push
inc
loope
mov
iret
jb
inc
dec
sub
outsl
repz
dec
lds
sub
mov
mov
fwait
or
push
sahf
es
push
dec
ljmp
cmpsl
int
push
sub
pop
push
lea
pop
cmp
ja
mov
push
fldcw
cmp
adc
test
fisubl
mov
push
xchg
aas
mov
test
jmp
push
xor
imul
and
pop
or
mov
or
daa
add
sub
enter
sub
cltd
jg
sub
aaa
insb
inc
mov
xchg
test
mov
adc
ja
sub
loop
mov
ja
imulb
and
les
lcall
mov
pop
and
outsl
xlat
sti
imul
dec
and
scas
adc
outsl
lods
sbb
mov
movsl
icebp
dec
roll
test
mov
xchg
or
fnstenv
sub
shll
pop
scas
add
mov
jge
iret
cmpsl
add
jge
mov
mov
pop
lods
pop
jne
or
jne
mov
lahf
pop
and
xor
aad
mov
cmp
negl
sbb
hlt
push
cmp
insb
xchg
in
mov
pop
aad
dec
push
in
or
adc
imul
lods
fwait
lods
std
adc
mov
jp
fstpt
ret
es
mov
sbb
div
mov
push
cwtl
ret
pushf
rcll
lret
lods
lods
mov
loop
inc
out
mov
pop
xchg
sbb
ljmp
inc
xor
addr16
cmp
xchg
sbb
incl
push
gs
lods
mov
xor
movsb
cmpsl
inc
clflush
add
mov
pop
loopne
xchg
xchg
and
jae
jge
bound
mov
cld
ret
into
mov
push
cmp
sub
popf
add
gs
shrb
jno
xchg
cli
pop
jo
in
lods
xchg
mov
cltd
int
sub
jle
mov
xor
jnp
mov
sbb
xor
xlat
or
dec
push
inc
cmp
inc
and
jbe
xor
mov
push
leave
and
inc
mov
lret
mov
arpl
rcl
or
fisubs
add
stc
shr
bound
stos
in
andw
mov
shrl
pop
or
jo
dec
daa
lcall
and
dec
push
xchg
les
cmpsb
jle
dec
xchg
add
addr16
icebp
roll
in
loopne
inc
out
test
sub
in
mov
inc
push
fbld
or
jnp
dec
mov
aad
jmp
pop
push
pop
sub
stos
xchg
int3
decl
pusha
loopne
xchg
xor
cmp
push
inc
cmc
pop
mov
lods
inc
hlt
xchg
dec
mov
jle
push
jge
rcr
adc
mov
fmul
imul
push
inc
mov
pop
mov
stos
xchg
jnp
mov
push
loopne
aad
adc
insb
cmp
pusha
rolb
add
ds
dec
add
pop
lret
inc
sahf
clc
orl
insb
mov
and
sub
lds
or
in
mov
mov
outsb
fisttpl
mov
dec
repz
lcall
or
and
jmp
xor
jnp
and
popf
lahf
dec
xchg
mov
sub
jns
mov
cli
xor
aaa
mov
in
cmp
scas
jae
inc
pmovmskb
cwtl
mov
jne
testl
sbbb
pushf
test
jb
inc
decb
ret
pop
and
mov
mov
les
xchg
push
addb
add
adc
sbb
jns
dec
lcall
sub
lea
gs
mov
imul
or
aad
sub
fldt
lods
outsl
push
pop
loop
in
cmc
aaa
pop
sub
mov
aam
push
lea
lods
jbe
addr16
xor
popa
mov
push
loope
dec
arpl
fcoms
inc
jbe
cld
lret
sbb
xlat
add
mov
out
icebp
mov
or
je
cli
or
push
dec
sub
inc
mov
fisubs
aas
push
sbb
pop
test
jg
jbe
xchg
pop
cmc
sub
inc
ret
je
adc
jbe
ja
sbb
rcll
or
sbb
sbb
mov
lret
and
sub
test
scas
arpl
jge
out
bound
in
dec
inc
xor
jno
test
movsb
in
ds
and
lahf
pop
mov
mov
sub
xor
push
in
stos
pop
cltd
mov
sarb
enter
rorb
add
mov
jno
push
dec
jno
adc
sbbb
lds
xchg
cmpsl
movsl
lret
cmpsb
pop
dec
push
call
inc
leave
or
sub
push
adc
pop
mov
mov
fsubl
sbbl
jne
and
inc
and
fdivs
pop
mov
sbb
and
push
cmp
adc
cmp
or
cmp
mov
jae
pusha
ss
lods
scas
push
mov
out
rclb
pop
aam
outsb
mov
sub
es
stos
jmp
xorl
cmp
mov
loope
xchg
fwait
add
xchg
orl
in
rorl
in
jns
and
dec
filds
adc
mov
push
or
sarb
dec
movsb
pop
ret
loopne
rcll
daa
int3
in
pop
inc
fsubl
stos
xor
fimuls
rolb
and
adc
loopne
sub
aad
lret
movsl
enter
adc
jnp
dec
or
mov
lea
xchg
or
xchg
mul
mov
pushf
iret
mov
mov
popf
push
dec
mov
mov
filds
sarl
push
loop
pop
xor
push
inc
mov
cwtl
fwait
outsb
icebp
std
subl
mov
dec
sti
lock
mov
or
inc
mov
dec
inc
mov
xchg
jecxz,pn
xor
xlat
adc
sbb
mov
mov
push
xchg
adc
dec
xor
or
fcompl
outsb
xchg
subb
jg
sbb
pop
fcompl
lret
push
loopne
and
and
repnz
in
adc
jg
xchg
jecxz
in
or
xchg
push
adc
mov
jecxz
es
push
leave
int
scas
subb
fldl
dec
push
idivl
les
jecxz
movsl
arpl
xchg
and
test
addr16
test
mov
test
lock
inc
xorb
dec
inc
ret
dec
cli
inc
fists
ret
ja
hlt
add
mov
std
fisubrs
clc
mov
xchg
mov
sbb
movsl
aas
xchg
xor
mov
sub
inc
inc
sub
fimull
push
inc
add
xor
jmp
das
mov
dec
inc
and
popa
adcb
lods
lds
pop
push
jo
bound
hlt
adc
cmc
push
mov
cmp
in
cmp
sbb
cs
xchg
cmpl
test
and
imul
pusha
loopne
adc
push
jle
outsb
pusha
sub
lea
xchg
scas
sbb
dec
inc
int3
and
out
scas
mov
insl
loopne
jb
jnp
jmp
dec
stos
mov
jecxz
adc
push
inc
and
push
iret
stc
mov
rolb
cmc
int
adc
lahf
lock
mov
jmp
mov
cmp
movsl
mov
fnsave
idiv
cld
and
inc
addr16
subb
inc
rcll
loop
pusha
sahf
repz
movsl
mov
xchg
inc
and
seta
cmpsb
or
nop
push
in
xor
fcompl
scas
outsb
in
mov
int3
and
ss
push
push
fs
and
adc
cmp
sub
clc
add
hlt
icebp
push
push
pop
arpl
sti
xor
pop
lods
mov
push
in
and
jle
pushf
sub
repnz
subl
fwait
iret
xchg
fcmove
mov
and
out
je
gs
out
leave
pop
movsl
add
cmp
cwtl
imul
into
pop
xor
out
pushf
repz
or
int3
xlat
int3
scas
aam
loope
inc
mov
test
sub
sbb
and
pop
movsl
clc
hlt
xlat
addr16
xchg
mov
xchg
xor
int3
add
adc
scas
lods
lret
mull
mov
dec
mov
push
xchg
mov
in
iret
into
mov
mov
lret
dec
xchg
push
jp
pop
rclb
adc
sub
mov
mov
mov
out
negb
push
xchg
jle
cmc
xor
jae
or
mov
xor
adc
mov
mov
loope
inc
aas
sahf
cmpsb
fs
fwait
xor
mov
xor
push
test
call
dec
push
xor
or
gs
mov
mov
roll
and
pusha
jno
insl
stos
push
icebp
out
push
mov
pushw
and
and
inc
adc
and
cld
add
in
fildl
and
jae
lahf
or
pusha
mov
mov
jae
or
sarl
mov
bound
pop
outsb
orl
xchg
pop
aas
inc
divb
mov
stos
mov
movsl
xchg
push
fisubrs
mov
stos
ret
jns
push
out
fcoml
int
outsl
xlat
and
pop
loope
dec
mov
adc
adc
ja
hlt
mov
in
adc
push
adc
push
lods
dec
jno
in
fwait
jle
arpl
sahf
addr16
sub
popf
dec
sbb
sub
cmp
outsl
mov
and
cmp
mov
imul
pop
out
les
cmp
sti
fsubl
jecxz
scas
mov
pop
mov
stc
notb
push
dec
cmp
cmp
sub
jmp
mov
fbld
js
aad
lcall
std
jge
jns
in
fidivrs
push
insb
sbb
les
push
mov
push
sar
pusha
xlat
push
mov
add
dec
push
movsb
jo
nop
fildl
cmp
repnz
cmp
dec
pop
mov
out
inc
movb
mov
out
dec
scas
fldt
inc
fnsave
jno
out
sbb
pushf
hlt
loope
cmpsb
fwait
xchg
sub
mov
enter
imul
or
dec
lcall
test
pop
je
pop
jne
rcl
mov
push
mov
cli
jl
fwait
scas
cmp
lock
push
pop
loopne
xor
cmp
aad
mov
cmpsl
and
sarb
sbb
mov
out
imul
jecxz
lcall
xor
jge
bound
or
movsb
push
rorb
rcrl
into
fsubs
loopne
jae
cli
ret
frstor
hlt
sbb
mov
inc
and
pop
in
ds
pusha
or
sbb
or
out
jmp
imul
popf
loop
aad
into
test
push
leave
aam
jl
sbb
fdivrs
lret
jle
insb
sarl
and
icebp
insb
cmp
mov
shll
and
adc
outsb
in
fwait
inc
xchg
mov
mov
xorb
dec
dec
rcrb
sbb
loope
data16
inc
adc
mov
inc
sbb
fidivl
and
fstl
jne
in
mov
mov
scas
mov
mov
cmp
out
cli
cmp
or
lds
int
xchg
cmp
ret
sarb
jl
xor
lahf
pop
andl
cwtl
xor
dec
xor
aaa
jle
xor
dec
jns
mov
and
mov
jno
mov
mov
call
imul
ds
aaa
cmp
addr16
fdivl
int3
mov
aam
outsb
cmp
mov
push
mov
lock
mov
or
jl
rolb
out
ss
cmp
mov
frstor
sub
sbb
push
lret
xchg
loop
mov
lods
test
xor
xor
cli
rol
inc
fiadds
sub
jnp
int3
xchg
fildll
lods
movsb
pusha
in
ss
mov
jge
inc
mov
test
fimuls
and
in
dec
cmp
xor
sbb
sub
sbb
xchg
popf
push
push
xchg
xor
inc
mov
outsb
jmp
iret
adc
pop
andl
rorl
and
cmpsb
iret
mov
pop
out
dec
mov
icebp
add
out
push
mov
mov
adc
pushf
or
mov
adc
scas
dec
cmc
mov
imul
movsb
add
xadd
jns
inc
imul
ljmp
xchg
scas
add
adc
xor
insl
xor
or
cs
sub
inc
lret
lret
cmp
or
sahf
aas
mov
push
pusha
sub
in
fyl2x
sar
xchg
xlat
lahf
xchg
enter
in
and
pusha
popf
stc
push
sarb
fdivrp
inc
aam
cs
push
pusha
adc
das
jle
nop
ficoms
mov
mulb
xchg
mov
push
lahf
lods
xor
cwtl
lods
jb
add
push
out
iret
or
mov
sub
sub
icebp
jp
mov
js
iret
and
push
test
sub
test
or
mov
enter
in
push
inc
outsb
test
test
dec
loopne
adcb
push
ror
pop
sub
divl
or
lcall
inc
pop
push
sbbl
sbb
dec
and
mov
outsl
mov
jno
mov
sahf
aaa
xor
xor
sbb
imul
jbe
rcrl
pop
sbb
mov
jecxz
fwait
mov
insb
inc
hlt
daa
test
pop
jmp
mov
push
cltd
xchg
or
cmp
and
xchg
sbb
fwait
or
int3
jns
enter
pushl
jb
call
lea
cmp
movsb
loope
xchg
cmp
out
stos
mov
cmp
test
mov
adc
pop
dec
popa
mov
pop
mov
ds
dec
xchg
lret
decl
fldenv
xor
pop
mov
dec
dec
cmp
dec
mov
movsl
inc
xor
adc
mov
xchg
xchg
cwtl
push
dec
jbe
xor
sbb
out
jnp
adc
movzwl
pop
lahf
in
aad
or
icebp
mov
cmp
mov
shl
cld
or
sub
xor
arpl
sub
jmp
xchg
inc
test
and
icebp
jp
test
pop
lods
inc
stc
lods
sahf
mov
dec
add
call
mov
pushf
mov
pop
push
pop
sbb
pop
cli
addr16
jmp
dec
or
add
pop
dec
cmp
xchg
adc
cmp
jnp
iret
ret
movsl
cmpsl
popf
mov
fisttps
pusha
adc
sub
and
mov
mov
jo
jmp
sub
lahf
pop
cld
aad
ja
cmpb
jle
ss
daa
adcb
push
pop
es
cmc
and
xchg
jns
hlt
mov
ret
subb
push
mov
fcoml
ret
adc
mov
hlt
mov
mul
shrl
push
dec
inc
inc
or
icebp
lods
inc
out
rorl
cmc
xchg
sbb
xchg
push
lods
mov
cwtl
bound
push
outsl
insb
inc
xchg
les
inc
sbb
mov
sub
jno
sbb
mov
and
jne
xorl
leave
inc
jl
mov
pop
jmp
sub
ret
pop
lahf
adc
and
mov
mov
add
jmp
push
mov
xchg
sbb
gs
dec
jecxz
xor
lds
mov
mov
adcb
lret
pop
addb
psrld
xor
in
aam
scas
xchg
adc
dec
xor
pop
dec
add
scas
movsl
cmpsb
inc
cmp
ljmp
add
stos
jb
shr
pop
out
xchg
cltd
ljmp
jle
xlat
nop
mov
cmpsb
shll
push
test
mov
imulb
jne
mov
xchg
add
xor
jecxz
mov
dec
enter
push
sbb
out
pop
or
in
pop
repz
pop
jmp
iret
add
js
fyl2x
push
cmp
les
or
insl
pop
loope
push
sbb
cmp
shrl
pop
dec
lock
test
sbb
icebp
stc
push
cmpsb
addr16
mov
push
fiadds
inc
insb
xor
jp
or
add
cmp
jecxz
aaa
addb
xchg
out
aam
int
inc
loopne
iret
or
fstpt
mov
mov
movlhps
js
nop
sbb
mov
add
pop
fwait
movsb
pop
out
lock
ja
pop
xor
lea
xor
or
ret
push
cld
in
add
push
cld
push
in
negb
outsl
mov
and
dec
push
decb
filds
jmp
inc
icebp
scas
in
aas
push
or
les
pushf
mov
ja
mov
jl
cmp
mov
shr
int3
orb
push
subb
adc
inc
sbb
pop
stos
push
push
pop
shrb
rcll
stos
xorl
sbb
imull
rcll
add
and
cmpsb
ja
imul
dec
mov
jae
pop
xchg
push
xor
aaa
cs
mov
test
sub
test
lods
outsb
push
push
sbb
cltd
popa
add
movsl
ret
jae
rcrl
jmp
arpl
mov
ljmp
and
jns
incb
mov
test
inc
ficomps
mov
xchg
adc
loop
xor
push
mov
cmp
or
mov
sbb
dec
jb
inc
pushf
sub
sbb
pop
cmpsl
inc
imulb
fdivrl
sbb
inc
xor
stos
lret
mov
fstpt
lret
sbb
setg
pop
lea
mov
movsl
sub
mov
dec
fisubrs
mov
pop
lea
mov
push
outsb
in
xor
pusha
xor
adc
pop
lret
jae
bound
popa
lret
xor
stos
mov
lret
imul
lds
sbb
lahf
les
push
sti
std
imulb
jp
idivb
out
mov
or
dec
push
je
movsl
cld
or
add
inc
and
push
jge
push
adc
jp
in
bound
hlt
mov
mov
setge
insb
jp
dec
imul
push
mov
aam
mov
mov
cmp
jae
xor
jecxz
aas
mov
decb
out
sub
sbb
sub
sub
and
fmuls
cmp
add
inc
pop
cmp
pushf
daa
inc
shlb
orl
ret
fldcw
pop
jmp
add
pop
and
repnz
inc
lcall
mov
cmp
lret
inc
and
push
shl
xor
jno
push
pop
js
jae
mov
dec
or
sbb
test
ficompl
mov
fmuls
adc
popf
push
mov
xor
mov
sub
les
mov
leave
aad
mov
cld
test
inc
push
popa
jb
outsb
lret
sbb
popa
stc
cld
je
mov
call
std
mov
jl
aad
imul
jo
scas
sahf
in
push
sub
stc
pop
test
fidivl
or
xchg
jg
cmp
mov
insl
sahf
out
sub
out
mov
push
mov
sbb
nop
push
or
scas
mov
ja
jb
jp
and
add
xchg
xor
ret
test
sti
jae
pop
test
ret
dec
mov
fdivp
and
aaa
mov
jle
mov
scas
and
stos
mov
sbb
movsb
out
add
sbb
cmp
pop
pushf
insb
out
bound
sbb
mov
adc
xor
bound
xchg
xor
adc
jbe
das
jae
outsl
rcrl
test
outsb
cli
cld
mov
jge
lea
call
jne
mov
mov
daa
test
pop
out
fdivs
adcl
pop
ljmp
inc
loop
pop
xchg
pop
outsb
cmpsl
fldt
ret
push
jb
mov
rcrb
pop
pop
imul
sub
xchg
imull
or
fistpll
ret
xchg
sahf
mov
fldt
dec
cmp
sahf
shr
inc
aam
daa
push
push
add
imul
pop
lret
sub
ja
cmp
sbb
mov
inc
data16
out
movsl
shrl
fwait
and
and
jae
push
push
daa
dec
repnz
jge
and
ficompl
xor
and
push
iret
and
push
jb
incb
mov
hlt
rcll
pop
push
pop
rolb
call
cmovae
sbb
adc
xor
les
data16
sbb
int3
iret
lcall
add
sub
jg
lahf
nop
jp
sbb
popa
addr16
gs
and
flds
les
test
pop
mov
push
adc
xor
jnp
xchg
push
cmp
es
mov
es
jge
push
pop
xchg
int3
inc
adcl
mov
sub
enter
aad
xor
iret
gs
xchg
xchg
pusha
seta
pop
lret
sbb
repnz
dec
jl
rol
ds
out
lret
das
das
add
sbb
mov
loope
ret
or
mov
inc
data16
arpl
call
inc
sbb
push
jnp
mov
mov
sbb
inc
pop
sub
enter
push
pop
into
inc
jns
mov
inc
pusha
mov
cmpb
push
jl
test
cmp
sub
or
pushf
cld
popf
or
testb
sbb
popa
cmp
imul
jecxz
es
clc
ret
add
push
popf
lret
outsl
sbbb
inc
mov
fdivrs
fsubrl
mov
out
cli
dec
out
xchg
push
pop
aaa
lret
xor
push
ret
clc
rcrb
xchg
insb
push
and
mov
jno
aad
pop
jo
lds
in
outsl
lea
inc
lcall
push
mov
das
and
pcmpeqb
stc
inc
jns
cmp
push
inc
or
dec
cmp
push
adc
cmpb
sbbb
sbb
outsb
pusha
jmp
cmc
arpl
jae
xor
ficomps
inc
insl
mov
lea
addr16
lcall
cmpsl
leave
es
mov
dec
je
push
add
push
clc
jle
inc
mov
das
daa
cwtl
insb
dec
xchg
fld
dec
cli
daa
gs
mov
adc
sbb
leave
daa
adc
jb
inc
mov
adc
mov
push
adc
mov
cmc
mov
mov
movsl
mov
and
fbstp
add
jnp
cmc
sub
mov
out
add
inc
icebp
push
jle
imul
bound
push
cmp
je
xlat
mov
iret
or
jge
aam
dec
scas
gs
mov
dec
daa
xor
lods
mov
cmp
rolb
xor
in
jbe
insl
or
imul
test
mov
fwait
cld
cmp
lds
lahf
inc
dec
adc
sahf
mov
mov
xor
cli
jne
clc
nop
lahf
clc
sub
push
add
or
xlat
add
xchg
add
sub
or
sub
fldenv
mov
orb
mov
es
gs
inc
aas
ljmp
adc
testb
pop
mov
ret
leave
sbb
cmpsl
pop
sub
mov
lret
xor
mov
and
jne
outsl
adc
rcll
or
push
cmp
mov
cmc
sub
in
dec
ret
and
lret
mov
dec
push
mov
inc
jns
add
orb
lea
pop
sub
mov
sbb
pop
stc
push
jnp
and
loop
push
sub
aad
jae
jne
inc
jne
mov
sbb
push
cmp
or
inc
sbb
jns
cmp
mov
mov
xchg
adc
mov
lods
mov
push
push
mov
mov
lret
mov
xchg
sub
rorb
insb
pop
insb
xchg
nop
les
les
mov
and
push
inc
xchg
push
fdivrs
lea
clc
enter
lret
mov
out
sbb
shrl
pop
gs
inc
xlat
add
jl
mov
mov
mov
pop
sub
sbb
or
pusha
sbbl
xor
cmpsb
mov
sbb
xchg
cwtl
cmp
leave
stos
bound
in
cmc
mov
sti
or
out
cmp
out
mov
mov
sbb
dec
les
push
test
xchg
pop
xchg
cmp
push
out
incb
fisttpll
jno
jbe
dec
push
mov
lock
icebp
mov
je
fs
add
push
lcall
rolb
lret
mov
jecxz
je
movsl
fiadds
ds
mov
add
inc
pop
inc
or
out
mov
xchg
adc
mov
mov
cmp
cmp
push
insl
and
adc
inc
sbb
leave
in
jb
mov
lods
in
sbb
inc
mov
sbb
jno
inc
sbbb
mov
pop
cli
and
add
jns
test
lds
repnz
push
mov
mov
mov
mov
cmpsl
inc
sbbb
insb
in
std
push
fldt
int3
ret
jle
stos
imul
aaa
pop
sbb
xchg
pop
jmp
lcall
mov
lds
mov
xchg
ja
stc
das
xchg
cmp
sbb
out
jnp
pop
je
daa
xlat
lea
dec
aaa
rcrb
adc
sub
test
imul
xchg
jg
push
ja
mov
rolb
xchg
sub
rorb
jge
cmpsl
addr16
lret
cmpsb
pushf
add
jp
popa
pop
cli
jecxz
outsl
inc
fsubr
push
sbb
repz
mov
cmp
jge
pop
sbb
call
pop
ds
pop
lret
mov
in
cmp
js
call
and
and
in
incl
xorl
dec
in
enter
test
das
aad
ret
push
jl
mov
pop
mov
mov
repz
jmp
mov
and
imul
test
inc
std
pushf
std
ret
les
or
sbb
sbb
int
pop
push
test
arpl
sahf
ret
cmp
icebp
jmp
movsl
enter
nop
lahf
inc
arpl
jne
mov
mov
mov
inc
ret
clc
jo
jle
ja
xchg
mov
mov
or
dec
mov
jecxz
lahf
jp
xchg
fcompl
or
inc
in
and
test
inc
dec
mov
lcall
lock
fs
ja
idivb
ret
inc
cmp
clc
adc
fcomps
ds
add
mov
mov
sbb
jge
rorl
pop
movsb
adcb
les
cli
dec
outsl
adc
lods
inc
movsl
sarl
clc
pusha
inc
in
mov
mov
xchg
or
sbb
movsb
ss
cmp
adc
jmp
fistps
ss
mov
mov
or
lods
jecxz
pop
push
cltd
out
loope
pop
pop
add
aad
movsl
test
or
cmc
mov
dec
int
pop
js
mov
add
les
sub
stos
leave
add
push
inc
push
sbb
sub
sbb
pushl
sti
jge
and
clc
sbb
cmp
dec
movsb
lods
scas
push
xchg
les
sbb
decb
or
push
pushf
pop
aad
int3
dec
push
daa
repz
call
jmp
rcl
xlat
xchg
pop
sbb
loop
push
jno
or
mov
sbb
or
mov
iret
adc
and
cmpsl
aaa
shrb
mov
loope
bound
lea
mov
sahf
pop
xchg
ja
call
int3
push
push
xor
and
data16
mov
cmp
aad
imul
or
loope
fstpt
push
aam
xchg
gs
jno
jae
aam
loope
mov
and
cltd
std
lret
mov
lods
add
pushf
fdivrs
aam
inc
sbb
ljmp
pop
mov
popa
xchg
ret
xchg
ret
mov
xlat
push
jmp
or
sbb
ret
mov
sbbl
fnstcw
push
adc
scas
out
insb
cs
std
bound
push
mov
movsb
fdivp
jne
cmpsl
mov
enter
push
adc
add
jno
jnp
jo
lock
pop
adc
test
daa
push
push
into
xor
shr
mov
cld
rcll
test
aad
add
jge
enter
inc
cmp
or
cmp
mov
mov
cwtl
pop
fldenv
enter
call
mov
dec
aam
pusha
push
pop
adc
adc
pop
out
push
notb
not
mov
rorb
cld
or
popf
enter
fucomp
rorb
mov
xchg
mov
test
cmp
movsb
or
jb
adc
add
push
cli
push
push
daa
mov
dec
add
subb
es
sub
aaa
test
pop
pop
outsb
pop
xlat
sub
pop
xchg
aaa
push
fiaddl
push
orb
jo
arpl
lock
xlat
sahf
test
addr16
mov
scas
arpl
push
mov
fistpl
std
jne
sub
movsb
insl
sarl
fs
mov
out
adc
repz
add
dec
add
ffreep
mov
mov
outsl
mull
push
rcr
xor
xchg
or
fcomp
ja
and
sbb
es
call
int3
cmpsb
iret
or
popf
jmp
xchg
adc
repz
fcomp
gs
mov
sahf
cmc
sbb
je
out
mov
into
aaa
out
push
mov
dec
jno
fnsave
push
lcall
xchg
clc
pop
pop
mov
into
mov
inc
call
sub
jb
add
shlb
dec
lahf
addr16
rcll
mov
and
jne
sysret
sub
mov
movsb
loopne
ficoms
aam
or
or
add
pop
scas
pop
in
fnsave
mov
movsl
inc
jne
or
rcrl
lcall
xor
inc
mov
lret
adc
adc
mov
jae
push
mov
add
insl
out
iret
sbb
or
out
inc
in
scas
je
lret
pop
sub
push
imul
mov
and
out
out
cwtl
push
xor
out
xchg
jge
les
pop
push
loopne
add
jg
mov
xchg
push
aaa
in
ljmp
mov
les
fildll
pop
shlb
iret
mov
mov
arpl
dec
andl
or
dec
dec
rol
add
insb
inc
popf
sub
inc
cmp
out
add
adc
xchg
outsb
xor
aam
adc
dec
mov
dec
jne
mov
adc
rcll
negb
fiadds
dec
sbb
arpl
enter
push
arpl
daa
test
pop
insl
push
iret
mov
mov
or
or
jno
adc
xchg
mov
aas
jge
testl
xchg
stos
into
xchg
xchg
fisubl
fld1
sbb
jge
insl
jmp
dec
lret
jne
jmp
mov
nop
in
into
movsl
jge,pn
and
xor
dec
loop
or
fwait
in
int
cltd
icebp
inc
add
push
addr16
popa
xchg
mov
mov
push
cld
std
mov
mov
add
mov
dec
fisttps
adc
shrl
out
jns
jmp
cmp
cs
inc
data16
ficompl
jp
push
inc
ret
fdivrp
sub
es
sub
push
ret
dec
push
mov
adc
xchg
movsl
ss
into
xor
pop
lret
sbb
cmp
jp
stos
pop
sbb
mov
sub
arpl
andb
push
rcrb
int3
mov
and
pop
adc
xchg
jb
fisubl
test
xchg
adc
popa
pop
sbb
cs
orl
insl
clc
mov
pop
iret
movsb
push
mov
enter
lret
jae
ja
outsl
outsl
movsb
in
jae
xchg
sbb
dec
nop
or
leave
jno
lock
xchg
and
lret
push
add
push
pop
or
inc
dec
popf
icebp
cld
pop
test
push
jbe
dec
pop
test
cmp
sbb
xlat
mov
cmpsb
adc
sub
mov
jle
jp
inc
cmp
cmpsl
sbb
dec
xor
cmp
adc
sbb
imul
inc
leave
mov
mov
and
scas
ret
out
mov
cltd
push
add
sbb
xlat
inc
iret
pop
gs
loop
inc
fwait
jne
push
pop
mov
inc
out
adc
push
nop
lods
pop
sarb
jbe
dec
jmp
gs
nop
scas
sbb
add
arpl
mov
arpl
and
cmp
sbb
mov
cwtl
popa
clc
out
xor
outsl
jge
cs
add
cmp
or
cwtl
push
pop
adc
xor
cli
xor
lret
inc
mov
push
inc
xchg
outsl
cld
dec
sahf
xor
imul
test
out
push
jnp
add
gs
in
xchg
scas
in
sti
or
outsb
push
mov
push
in
mov
mov
mov
inc
cmpl
jae
cmp
lea
add
aas
inc
das
add
jb
mov
iret
sbb
mov
pop
call
push
ds
dec
mov
aad
or
xchg
jge
lock
jb
adc
fstps
jge
sub
mov
adc
pop
cmp
or
enter
jecxz
mov
in
mov
cmpb
in
mov
xchg
outsl
clc
mov
adc
sub
mov
test
mov
jb
out
dec
iret
inc
shll
mov
sahf
mov
cmc
popf
fldenv
mov
xchg
aam
push
add
push
xchg
jmp
sti
mov
fstpl
or
adcb
dec
pushf
mov
mov
push
arpl
mov
shlb
sub
push
inc
ljmp
imul
in
mov
xor
out
pop
icebp
movsl
fs
mov
fcmovnu
fs
js
popf
js
cmp
stc
mov
push
lret
jge
test
dec
push
jge
push
in
scas
push
inc
and
inc
jns
mov
jnp
test
shrb
insb
out
jmp
dec
js
les
dec
add
mov
sub
or
int3
lock
mov
int3
int
add
lret
jb
test
rcr
sub
cmc
jge
add
inc
cli
dec
std
push
ljmp
cltd
in
cmc
aam
dec
pop
or
pop
hlt
jp
cwtl
popf
adc
dec
pop
sarb
stos
pop
nop
mov
mov
xchg
pushf
orb
int3
call
or
cmp
push
insl
sub
xchg
call
cli
cmp
aas
jle
ds
jb
adc
lret
and
adc
lea
arpl
adc
pop
mov
cwtl
push
outsl
push
cmp
mov
fsubrl
std
inc
pop
stos
mov
sbb
inc
es
repz
push
dec
pop
adc
cld
push
add
fwait
or
rolb
sbb
sub
inc
mov
xchg
es
ds
sub
add
rolb
les
mov
mov
cwtl
inc
sbb
mov
cmp
pop
in
xchg
loopne
int
mov
loop
in
add
out
lret
xor
imul
repnz
mov
dec
js
lret
dec
ljmp
in
xor
ret
or
call
jae
sarb
xchg
pop
jg
addr16
push
bnd
imul
stos
jne
into
jnp
std
cmp
and
mov
lods
fnsave
into
loopne
push
negl
jecxz
test
data16
pusha
push
ljmp
sub
xchg
lcall
lods
sbb
xchg
push
xchg
xchg
shr
pop
cwtl
xchg
xorb
js
xor
mov
rcrb
jl
in
inc
dec
popf
sub
scas
push
in
imull
push
push
push
mov
lret
icebp
cmpl
imul
and
xchg
xor
aaa
push
test
movb
inc
sbb
mov
movsb
xlat
es
insb
fmull
scas
push
iret
mov
push
ljmp
popa
xchg
jl
rcl
add
jae
xor
aad
pushl
cld
inc
out
int
and
inc
jbe
scas
adc
xor
mov
int3
mov
and
sbb
mov
cmp
xchg
jbe
arpl
lods
dec
repz
subl
cmp
inc
imul
sbb
cli
pop
lods
or
lds
mov
mov
aaa
stos
xor
mov
mov
cli
jl
in
sbb
cwtl
out
sub
mov
scas
in
loope
cmp
and
mov
stos
sub
adc
inc
gs
or
fcmovu
sbb
nop
pusha
jmp
xchg
and
adc
and
and
js
arpl
inc
xchg
push
inc
jecxz
pop
dec
push
sbb
jo
xchg
mov
popf
pop
lock
jno
mov
in
stos
pusha
sbb
push
pop
frstor
pop
popa
es
xor
inc
mov
loopne
ror
movl
mov
sbb
sbb
push
scas
roll
mov
jns
mov
fisubrl
loope
and
scas
sub
dec
test
ja
iret
lcall
or
ret
aas
int
aas
xchg
jno
jmp
xor
icebp
inc
pushf
mov
push
jg
fldt
xchg
loope
pop
bnd
jecxz
nop
dec
out
mov
cmp
lds
mov
or
dec
mov
cld
jl
mov
sub
out
orl
addr16
or
xor
push
xor
xchg
mov
xlat
arpl
inc
xor
ud2
test
and
daa
repnz
pop
ja
push
mov
mov
in
hlt
rcr
and
adc
pop
outsb
lcall
inc
shlb
xchg
sti
movsl
push
lahf
and
mov
adc
roll
push
push
or
scas
jbe
jmp
lock
adc
jae
cmp
jnp
push
das
sbb
add
inc
xor
xchg
shll
out
xadd
xor
mov
popf
mov
mov
and
in
xchg
data16
fldt
test
xlat
ds
push
lods
rcr
into
out
subps
mov
arpl
adcl
or
sahf
aas
jbe
jbe,pt
push
jo
pmaddwd
lods
mov
mov
stos
mov
lret
push
mov
jno
call
adc
push
loope
xchg
add
push
ror
shll
popf
js
inc
hlt
cmpsb
xor
das
adc
mov
inc
mov
hlt
cmp
call
adc
mov
jge
xchg
out
in
fcoms
loop
les
mov
sub
inc
push
add
das
xchg
pop
arpl
cmpsb
jno
nop
arpl
jne
mov
inc
cltd
cmpsb
xlat
out
in
cmp
xlat
imul
push
je
scas
fimuls
sti
add
in
push
bound
popf
xchg
inc
std
add
mov
int3
adc
aas
mov
mov
jmp
push
mov
lret
mov
inc
mov
out
push
test
dec
subb
ss
lahf
jbe
imul
mov
cmp
fsts
inc
dec
arpl
imul
mov
aas
jecxz
inc
stos
cmp
out
pusha
es
jp
xorb
inc
not
add
repz
xchg
cli
ja
mov
mov
mov
inc
mov
or
adc
add
es
mov
sbb
pop
es
jnp
jnp
sbb
inc
cwtl
mov
jge
fstl
aas
cmp
filds
sbb
aam
pop
jns
jo
daa
mov
dec
inc
add
imul
iret
sbb
jl
xchg
cmp
cmp
or
mov
mov
add
mov
mov
popf
outsl
pop
fldln2
ss
fidivl
les
push
jp
xorl
inc
cmpsl
and
mov
push
xor
fidivrs
into
aas
jb
in
jg
jmp
loope
movsl
and
aas
inc
lret
fistpll
dec
imul
cwtl
aam
movsl
shll
loop
in
js
loop
add
mov
aaa
in
fistpl
cmpsb
ljmp
fstpt
lahf
test
lret
enter
jmp
mov
popf
push
push
mov
add
and
push
data16
aad
push
stc
push
les
les
xor
sti
mov
sbb
orl
mov
shlb
mov
mov
mov
xor
push
shlb
mov
sbb
sbb
push
mov
mov
sub
ret
xchg
leave
fucomip
add
ja
and
cmp
aaa
adc
jl
sbb
fs
jno
shlb
xor
mov
ret
mov
gs
dec
rorl
or
outsl
mov
lods
or
mov
sub
push
sbb
add
andb
shll
xchg
or
mov
adc
iret
xor
popa
jle
or
xchg
je
das
repnz
mov
sar
es
lods
mov
std
xor
xor
mov
mov
add
dec
mov
sbb
hlt
jnp
jne
ljmp
test
inc
leave
sub
mov
cli
jle
pop
scas
loope
popa
xchg
xor
dec
xchg
out
out
pop
fildll
jge
das
test
sbb
imul
leave
int3
scas
aad
push
xor
std
lods
fs
cmpb
fidivl
mov
push
dec
test
inc
aam
dec
jmp
jns
push
in
ljmp
cltd
or
arpl
imul
mov
fldt
iret
jo
sarb
pop
push
dec
add
dec
sub
rolb
mov
push
xor
pop
jmp
test
dec
out
cli
sarl
cwtl
rcrl
xchg
sbb
add
pop
add
insl
in
roll
push
dec
xchg
enter
out
test
call
jl
cmp
lahf
push
or
sbb
xlat
or
outsl
mov
inc
inc
sub
iret
pop
jb
inc
mov
mov
push
faddp
iret
data16
mov
enter
sub
push
pop
sub
dec
pop
adc
imul
inc
adc
sub
mov
cmc
inc
pusha
sub
jecxz
or
mov
mov
inc
idivl
hlt
mov
push
mov
mov
cltd
lods
es
shlb
pop
push
adc
sar
adc
jbe
pusha
or
cmp
clc
test
inc
mov
rcl
stos
cwtl
inc
mov
aam
or
pop
in
in
pop
and
sub
and
push
mov
mov
es
mov
xor
rcrl
mov
sti
subb
xchg
in
xchg
adc
push
sub
in
mov
pusha
pop
faddp
in
xor
aad
jg
sub
in
xchg
popa
ljmp
cli
and
lahf
xchg
or
inc
or
inc
add
js
mov
ds
repz
ret
cmp
shl
cmpsb
or
arpl
sti
mov
dec
inc
incb
xlat
pusha
fsubrl
push
dec
xchg
mov
mov
in
adc
or
ret
jg
mov
cmp
add
stc
mov
pop
popa
and
bound
adc
adc
call
movsl
mov
pop
out
cmp
xchg
mov
rol
cmpl
in
dec
test
push
call
mov
push
or
subl
aaa
xor
cmp
cld
fcom
idivb
and
mov
dec
sub
rol
cwtl
xchg
nop
popa
js
cmpsb
add
ja
clc
dec
clc
adc
mov
repnz
addr16
insb
int
outsb
iret
dec
mov
pop
gs
xchg
xor
lcall
lds
pop
ja
jns
lret
sub
ret
jmp
roll
dec
test
mov
pop
stos
movsb
dec
add
xor
adc
jno
inc
fdiv
mov
ret
sbb
fcmovnbe
cmp
or
outsb
push
outsb
xor
daa
cmp
ss
pop
mov
mov
aad
iret
cmp
adc
js
cli
add
inc
arpl
adc
pushf
dec
jle
movsl
sar
adc
es
popf
cmp
pop
lock
fdivl
cltd
push
mov
popa
in
insl
aam
sub
push
dec
inc
pop
sub
fs
fisubrs
cs
fists
clc
out
xchg
jns
sbb
stc
jmp
pop
cmp
mov
mov
test
lea
mov
push
inc
fcmovb
xor
lcall
outsb
outsb
cmp
push
pop
mov
and
jae
push
popa
fcomp
mov
dec
add
fcom
cs
test
push
push
push
or
ret
aam
mov
mov
pop
fimull
add
std
push
or
sarb
push
cmp
xchg
fwait
xchg
fbld
cmp
bound
xor
add
pop
ffreep
pop
mov
sub
push
xchg
xchg
les
pop
fmul
xchg
in
xor
pop
in
int
rep
mov
ja
cmpsl
or
scas
pop
jmp
test
mov
in
test
xchg
add
rolb
jne
enter
in
or
push
cmp
in
sbb
ljmp
adc
imull
into
ss
pop
fwait
enter
aad
aaa
mov
imul
js
push
push
jns
xchg
das
leave
adc
cmp
fdivrp
lods
push
les
mov
xor
or
ja
enter
in
push
cmp
inc
cltd
dec
out
lahf
into
sub
insl
pop
xor
mov
push
xor
test
imul
sub
out
sbb
sub
jmp
ljmp
pushf
mov
push
pop
aaa
iret
popf
insl
inc
dec
gs
aam
jg
fs
push
push
pop
push
pop
pop
gs
xlat
mov
push
pop
mov
push
jp
test
fucomip
outsl
call
pop
add
mov
inc
fmull
mov
dec
js
sar
mov
jl
aaa
add
pushf
push
cmp
nop
aas
cs
sarl
lret
cs
into
cmpsb
xchg
sub
lods
leave
push
mov
mov
xchg
or
adc
adc
sub
cmp
ffree
pop
xchg
xchg
stc
scas
call
ret
movsb
inc
scas
cmp
icebp
mov
cmp
outsb
jg
and
cmp
push
ja
fidivrl
test
jne
cmp
add
mov
pop
loop
das
sub
add
cmpsl
sti
xor
sub
ret
push
cld
movsl
ds
outsl
lock
inc
stos
cwtl
pop
inc
pop
sti
jg
inc
hlt
sub
cmpsb
cmp
rol
pusha
leave
push
sti
xchg
sbb
xor
mov
adc
rcrl
cmp
pushl
stos
sbb
xor
mov
jnp
xchg
cmp
inc
insb
rcll
int
stc
loop
or
jmp
push
jno
cmp
sbb
repz
add
cmp
jbe
xchg
call
divl
and
das
jmp
and
fwait
xor
mov
idivb
mov
or
imul
inc
jae
or
lods
push
push
cmp
leave
test
mov
add
cmp
aas
xor
imul
jl
push
add
adc
in
push
sbb
or
fbld
or
push
imul
push
xchg
int3
xor
jae
mov
pop
adc
repz
nop
dec
pop
add
aaa
adc
add
sub
jb
mov
inc
push
mov
or
xchg
lock
jae
cli
gs
rorl
lret
mov
xchg
sub
dec
rorb
inc
out
cmp
insl
mov
pop
xlat
in
push
out
cltd
aad
fiaddl
mov
jnp
lahf
xchg
inc
push
out
jo
clc
inc
or
jl
inc
inc
movsl
enter
xorl
push
sub
jl
insl
aam
mov
bound
out
pop
imul
pop
mov
adc
ss
scas
adc
test
xchg
stos
dec
ss
or
out
push
fnsave
ss
or
mov
push
or
pop
and
mov
push
push
dec
test
shll
dec
mov
push
jne
mov
pop
in
into
jb
adc
scas
push
mov
stc
fstpt
push
hlt
fisubl
std
inc
stc
jae
mov
loopne
jecxz
inc
mov
sub
lods
jns
jp
push
add
mov
inc
std
ds
ds
fsubl
push
das
xor
jmp
ret
das
shll
stc
cltd
jo
leave
enter
and
aaa
or
pop
cs
mov
cmpsl
and
inc
xchg
movsb
and
dec
push
aaa
stos
sub
pusha
sub
loope
ret
push
jecxz
mov
mov
shlb
pop
fs
push
icebp
xor
push
addl
out
bound
cld
push
and
push
subb
xchg
or
repnz
std
add
mov
jno
fidivl
sbb
jecxz
loopne
arpl
or
sar
clc
push
in
pop
push
repz
sub
sub
cmpsb
mov
sbb
sbb
sub
jae
add
sbb
mov
stos
sarb
pop
cmp
mov
mov
add
mov
sbb
in
fldcw
leave
jmp
out
ret
add
fidivrl
cmpl
or
imul
dec
mov
add
inc
mov
cmp
pushf
cmp
xchg
incl
pop
cmp
fimuls
movsb
out
rol
push
pop
mov
jb
cmp
xor
mov
xor
scas
cwtl
clc
jne
push
pop
aam
mov
cmp
adc
push
jne
lea
aad
repz
sbb
int
push
js
inc
add
orb
mov
mov
pop
xchg
mov
cmp
mov
insl
cmc
aad
mov
test
sub
cs
xchg
ret
xchg
int
add
jl
sbb
mov
xor
xor
push
pusha
rorb
push
mov
jl
xor
adc
sbb
or
scas
push
mov
mov
xchg
shrb
sub
stos
daa
fcmovne
mov
or
push
pusha
pop
lea
mov
cs
sbb
fldln2
or
pop
pop
sbb
push
inc
jg
dec
mov
xor
rcrl
or
in
pop
mov
or
sub
or
lods
pop
xchg
sbb
push
inc
sub
iret
add
rorb
jbe
repz
cmpsb
test
shl
push
pop
call
jmp
fnstsw
in
xchg
sbb
jb
adc
dec
inc
push
leave
push
cltd
add
mov
mov
mov
inc
lret
out
mov
jp
test
xlat
jns
mov
dec
lds
imul
mov
mov
test
add
leave
sub
cmp
mov
mov
test
fisubs
mov
fdiv
or
ljmp
mov
stos
subb
jae
or
or
xchg
test
loopne
mov
loope
cli
and
ss
and
test
sub
add
pusha
mov
push
mov
fwait
add
arpl
mov
out
icebp
xor
push
fucom
scas
pop
dec
mov
mov
lods
fwait
imul
shl
cmp
pop
scas
adc
cmpsb
fnstenv
aad
or
int3
je
sub
faddl
cmp
out
lea
iret
sti
add
movsb
or
push
adc
xor
movd
xchg
fdivrl
push
mov
add
mov
test
add
mov
aaa
dec
push
mov
mov
aaa
imul
push
movsb
xlat
xor
cmc
xor
push
push
adc
hlt
rcr
dec
nop
xor
dec
scas
mov
mov
stos
enter
fucomi
daa
pop
cltd
ret
imul
out
outsl
xchg
pop
shrb
stos
cmpsb
xchg
sub
add
fbstp
push
test
jnp
and
mul
sub
inc
and
jg
ror
cmpsl
mov
les
dec
mov
cmc
test
mov
cmp
xchg
adc
jg
sub
inc
push
mov
adc
sub
fiadds
bound
nop
inc
push
sub
xor
xor
ret
mov
xor
icebp
loop
dec
sti
and
int3
push
mov
push
sbb
cmc
push
mov
cmpsb
push
and
outsb
mov
lock
bound
push
mov
cmpsb
daa
cmp
lcall
xlat
lcall
setge
je
clc
mov
add
mov
mov
and
pop
xor
pop
cmp
testl
sbb
jo
sbb
mov
ja
jle
fadd
dec
sbb
sti
nop
jle
cwtl
movsl
xor
lods
sti
dec
xchg
and
cli
and
ror
jb
fdivs
jnp
dec
dec
cli
xlat
add
in
leave
mov
jl
sbb
fdivr
push
mov
dec
imul
pop
dec
mov
push
outsb
jae
push
dec
aam
push
aad
inc
fnsave
and
cmp
and
pop
add
adc
pop
fldcw
and
add
arpl
fwait
sub
or
cwtl
cltd
das
add
repz
in
mov
in
jns
data16
ljmp
cmpsb
test
mov
into
jne
mov
inc
movsb
out
fcoms
jns
xor
jle
xchg
test
and
mov
sub
and
sub
dec
pushf
mov
aad
inc
pop
sti
call
outsl
push
push
sbb
inc
cmp
and
test
xchg
clc
jp
icebp
pop
inc
in
into
cmp
mov
sahf
es
add
xchg
cs
sarb
ss
mov
dec
imul
jae
js
negl
sub
mov
pushf
xor
xchg
mov
scas
iret
aad
loop
push
sbb
mov
and
jbe
push
add
jge
inc
push
test
push
add
ljmp
push
cmovp
push
iret
or
push
rol
xchg
xchg
push
inc
fmul
sub
cmpsb
pop
insb
add
xchg
xchg
adc
mov
jecxz
dec
shll
adc
test
mov
fcomps
pop
fnsave
pushf
and
aad
push
pop
push
jnp
mov
mov
dec
rcrb
fadds
mov
loopne
icebp
sbb
fs
popa
xchg
scas
xchg
std
sbb
xchg
mov
testl
and
fsubrs
push
adc
xor
test
es
pop
idivb
sbb
cmp
lods
jg
shrb
or
inc
jbe
lcall
and
mov
int
push
adc
insb
inc
pop
rcrl
lahf
ret
dec
rclb
sub
push
adcl
lods
ss
ljmp
movsl
pusha
daa
cmc
mov
add
xor
push
addr16
bound
cmpb
adc
inc
add
xlat
and
push
push
aam
sub
dec
mov
jle
inc
cmp
jbe
cmp
mov
xor
add
and
jo
mov
lods
xchg
in
cmp
pop
shll
fisubs
inc
pop
xchg
ret
push
mov
xor
adc
adc
xchg
lods
cli
scas
imul
pop
mov
int
pop
fxtract
and
xchg
fidivs
xchg
add
jo
push
mov
incb
push
aam
lods
add
cld
sbbl
pop
es
push
pop
sahf
adc
cli
cli
cli
mov
icebp
and
or
cmp
je
mov
test
gs
ja
imul
push
pop
push
pop
cli
in
sahf
xlat
mov
sbb
fsub
loope
dec
and
cli
repz
xor
push
cmp
scas
jmp
cmp
or
add
aas
arpl
insl
insb
aam
adc
rcrl
jb
stc
fidivrs
and
adc
mov
push
addb
cli
push
cmc
bnd
push
outsb
mov
xchg
pop
adc
into
bound
mov
jmp
mov
add
dec
sbb
fldenv
xchg
jae
loopne
push
sbb
hlt
inc
ja
aaa
in
inc
cmpsb
xchg
out
sub
lret
adc
fistps
imul
jmp
arpl
inc
or
pop
push
pop
add
and
sti
inc
push
stc
ljmp
mov
pop
or
mov
or
xchg
xor
lcall
inc
je
insb
sbb
xor
adc
fadds
pop
cmp
xor
test
cmp
or
mov
sbb
pusha
push
out
push
jg
or
pminsw
push
rcl
frstor
loopne
and
push
adc
bound
movsb
or
push
scas
mov
push
or
vmaxss
loopne
sahf
xchg
sub
decb
ficoms
out
out
xchg
mov
dec
popa
mov
xchg
mov
jl
push
dec
sbb
out
mov
jo
jle
std
pusha
fisttps
or
out
sbb
inc
xor
sti
out
leave
push
rcrb
jl
mov
inc
cmp
lcall
fadds
mov
cmp
add
lds
roll
xlat
and
lcall
lds
and
or
int3
cmp
mov
xorl
and
sti
dec
adc
cmp
insb
clc
mov
adc
push
and
lock
cmp
shrl
repnz
imul
hlt
popa
or
pop
mov
fs
pop
mov
adc
xchg
push
sub
cmp
ljmp
cmpb
dec
inc
insl
adc
data16
daa
das
xchg
jne
lret
cld
neg
rolb
jae
sbbb
jae
sbb
xlat
dec
jmp
adc
jmp
adc
xlat
sub
mov
rol
cltd
filds
pushf
lcall
dec
mov
psllq
int
into
shr
sub
mov
mov
mov
hlt
cld
leave
sub
sub
push
out
stos
out
push
push
jnp
adc
cmp
xlat
push
inc
cmc
pop
lods
in
xchg
push
pop
inc
ret
fidivl
pop
scas
repz
loop
adc
mov
repnz
popa
pop
cmp
push
dec
ss
jno
pop
mov
mov
mov
xor
jne
or
mov
icebp
or
popf
test
rclb
movsl
and
test
scas
push
sbb
and
scas
sti
cli
xor
mov
addr16
xchg
loopne
adc
cmp
dec
sub
xor
jns
cmpsl
or
and
mov
mov
es
xlat
cmp
pop
leave
jle
add
push
mov
out
mov
cmp
and
jecxz
rcl
inc
daa
lods
cmp
mov
add
ret
xchg
in
std
andb
cmp
icebp
xchg
mov
inc
into
cmp
or
xor
iret
xchg
test
or
mov
ds
enter
test
or
pop
inc
ficoml
in
stc
cltd
inc
pop
sti
cmp
cmp
pop
stos
aam
cmp
outsl
fldl
dec
jne
daa
sbb
cmc
rol
lods
lea
lock
repz
sarl
rorl
and
xchg
cmp
mov
jl
test
les
call
scas
das
rclb
fwait
sub
fwait
jb
dec
sub
mov
in
ss
test
adc
out
push
push
mov
adc
add
ret
mov
loopne
xor
insb
negb
ret
ss
divb
iret
jg
cmc
push
lds
jmp
test
clc
add
mov
test
xor
imul
leave
std
or
mov
test
dec
popf
aas
pop
fld
fimuls
lcall
pop
negb
cmp
mov
jnp
pop
dec
jb
pop
jne
sub
bound
test
pop
add
xchg
and
xlat
pop
inc
movsb
mov
and
fidivl
cmp
mov
jle
mov
jns
xchg
dec
xchg
aaa
test
and
jnp
aaa
or
ss
int3
jmp
sub
lret
pop
cmp
push
jl
xchg
hlt
dec
xlat
sahf
xorb
sub
mov
and
fs
mov
into
push
fsubl
jl
lds
inc
fidivrs
push
xor
xchg
shlb
enter
pop
mov
inc
cvtps2pi
sub
mov
or
out
push
cltd
pop
jne
inc
and
dec
jecxz
fsubrs
int
adc
je
mov
pusha
aam
stos
data16
pop
push
adc
bound
mov
test
adc
inc
xor
jo
imul
shl
jge
mov
mov
push
mov
leave
push
stos
pusha
cmpsl
push
sub
adc
jmp
fdivs
sbb
adc
outsb
icebp
jnp
pop
xlat
mov
inc
or
mov
data16
pop
loop
pusha
pop
je
jp
mov
cmp
cmp
into
push
sub
out
adc
lods
xchg
or
addr16
sbb
sarl
cli
xchg
jle
call
push
call
andl
and
outsb
sahf
jg
push
cmp
mov
cwtl
mov
out
cmp
xchg
inc
mov
xchg
or
addr16
lods
jg
push
mov
add
mov
cmpsl
movb
xor
mull
jae
sti
lcall
pop
stos
bound
leave
hlt
jg
mov
and
lea
cwtl
mov
push
dec
insl
mov
xor
sarl
dec
aas
mov
xor
and
std
jg
jnp
cmp
cmp
insb
outsb
cltd
adc
inc
stos
and
test
lea
adc
loopne
mov
push
out
mov
ja
adc
adc
repz
sbb
push
cmp
ja
inc
cs
movsl
xchg
dec
mov
scas
sbb
bound
out
and
bound
dec
or
xchg
popf
sbb
stc
loop
or
repz
mov
lea
addb
pop
inc
adc
mov
and
jecxz
add
push
cli
pop
sarb
push
divb
mov
push
pop
cmp
in
fcmovnb
int
push
xorl
mov
dec
lcall
pop
xor
dec
movl
js
lret
jmp
lcall
mov
loope
xchg
pop
fisttpl
jno
lds
out
gs
dec
sub
aad
jns
pop
loopne
frstor
out
and
pop
jnp
jns
rcrb
adc
cmp
jl
pop
sbb
mov
pop
cwtl
movsl
es
add
mov
in
pop
sbb
and
push
stc
sarb
mov
dec
mov
lea
ficoml
clc
inc
subb
push
xchg
loop
pop
stos
popa
add
push
jp
or
movsl
push
enter
cmp
push
mov
cmc
les
loopne
popf
dec
sbbb
push
pushf
cltd
push
in
test
jmp
push
sub
adc
mov
pop
xor
fildll
push
adc
pop
cmpsb
shr
sbb
or
mov
ja
sbb
aas
mov
into
add
lock
mov
dec
mov
xchg
sti
xchg
and
xor
fists
and
dec
in
mov
les
jno
pop
test
mov
in
adc
test
push
pop
mov
cmp
dec
push
repnz
andl
mov
mov
scas
pop
clc
lock
mov
fiaddl
std
adc
pop
and
mov
loop
dec
and
fsubrp
inc
stc
mov
lret
jmp
mov
je
and
mov
jbe
int
mov
push
jle
cmp
xlat
sub
icebp
lds
lods
pop
aam
loope
popl
pop
mov
std
cmpsb
je
lds
xchg
xchg
xchg
js
lock
xor
inc
add
sub
mov
mov
mov
jnp
mov
in
out
mov
loopne
dec
ja
mov
lock
and
xchg
xchg
lock
insb
xchg
pop
mov
das
jbe
push
fwait
jae
aaa
and
mov
rorl
sub
jo
enter
mov
cmp
adc
mov
loopne
adc
cmp
jle
cs
adc
sub
jmp
xlat
push
jle
mov
cmc
mov
sub
rorb
pop
pushf
jb
je
push
loope
add
xchg
xor
lret
push
sbb
lds
and
icebp
pop
pop
fdivrl
out
das
lahf
fsub
xor
lods
nop
inc
add
test
adc
clc
mov
mov
pop
ret
ljmp
add
rorb
jns
dec
inc
dec
dec
jae
mov
test
mov
cmc
pop
or
loop
call
pushf
cmp
lods
loope
cld
push
and
pushf
push
leave
repnz
imul
aas
loopne
and
ds
int
push
mov
mov
cmp
into
cmp
sahf
imul
push
sbb
cmpb
xor
push
ror
add
mov
outsb
lahf
sbb
test
xor
out
and
jae
or
mov
sbb
dec
dec
push
jl
mov
in
mov
cmc
movsb
jge
cmp
stc
inc
out
dec
xchg
loop
cltd
cmp
out
jns
adc
iret
xchg
jbe
xchg
or
sbb
daa
pop
lret
mov
hlt
sub
mov
pop
mov
jge
mov
in
cmp
add
cwtl
je
gs
int
pop
js
ja
mul
mov
xchg
xchg
mov
jns
add
add
push
enter
jle
fcomp
jge
cmp
jne
mov
adc
push
jmp
dec
fdivs
or
stc
and
add
clc
cmc
lock
dec
dec
sub
pop
ljmp
loopne
adc
xlat
lea
ficomps
push
pop
and
das
shrl
pop
movl
fcmove
mov
pushl
and
add
add
adc
inc
or
lods
test
bnd
popf
cld
dec
lcall
movsl
jb
fwait
ucomiss
mov
notl
xor
fnsave
xchg
sub
push
xor
in
push
cltd
jge
cld
ss
add
cmp
inc
add
mov
mov
adc
insb
hlt
xchg
xlat
cmp
jle
mov
pop
lret
out
fcompl
dec
xor
mov
jecxz
imul
dec
fisubs
push
cld
dec
xchg
lods
add
pusha
jg
add
out
mov
imul
les
sub
enter
aam
mov
adc
scas
xchg
xchg
repz
mov
inc
pshufw
lcall
inc
jl
cmpsb
push
bound
into
jmp
push
add
shll
test
popf
mov
pop
add
dec
iret
inc
mov
inc
mov
rcrb
cmp
mov
ret
outsb
ret
mov
frstor
add
test
mov
push
and
mov
lahf
ss
dec
sahf
andl
and
jbe
mov
jg
scas
mov
imul
popa
sub
repz
adc
or
iret
iret
xchg
stc
insl
test
push
loopne
xor
lea
pop
xchg
lret
dec
push
fstpt
cmpsl
leave
popa
cmp
push
mov
ret
jo
sti
in
jne
dec
bnd
das
loopne
push
inc
sbb
das
or
stos
cld
test
sbb
kmovd
mov
add
bound
xor
mov
out
sub
cs
dec
jle
mov
push
mov
sub
imul
into
sbb
hlt
pop
je
jns
jb
out
jne
pushl
push
ja
ljmp
rol
ret
sbb
or
jae
cmp
daa
xchg
insb
sub
or
std
push
dec
xchg
imul
les
sbb
inc
mov
mov
out
insl
and
jnp
sbb
mov
xchg
aad
pushf
int3
mov
les
ljmp
movsb
adc
ljmpw
mov
dec
sahf
add
bound
inc
xchg
xor
xor
push
sti
mov
call
push
inc
into
stc
insl
push
jmp
pushl
sahf
aam
and
jmp
leave
leave
pop
ds
inc
adc
mov
lods
insb
push
subl
mov
mov
adc
and
push
cmp
rcll
pushf
add
ss
das
adc
pushf
push
inc
fisttpll
arpl
sub
inc
rcll
inc
dec
mov
stos
pop
testb
mov
dec
pusha
jb
mov
cmc
mov
xor
pop
cltd
cmpsl
lock
iret
cmp
iret
push
xchg
push
cmp
call
ljmp
dec
xchg
int
push
adc
jo
add
aaa
ja
adc
dec
push
mov
stos
std
cmpsb
cmp
mov
jb
cmp
ljmp
pop
sbb
out
stc
sbb
push
push
pop
fisubs
sub
adc
adc
jnp
add
xorb
mov
mov
in
sub
stos
xor
mov
lods
mov
jg
pop
into
mov
fmulp
in
pop
fs
mov
xlat
repz
cmp
sbbl
clc
mov
enter
jnp
ljmp
xor
push
pop
jle
mov
jl
jns
push
test
cltd
mov
imul
push
out
scas
arpl
and
into
fldcw
sarl
jo
ds
adc
push
adc
movsl
fldl
push
push
add
mov
mov
stos
or
out
gs
push
fstl
int
cmp
inc
cmpsl
pusha
iret
sbb
mov
pop
enter
mov
mov
lods
sbb
jbe
sub
rolb
pop
fcoml
mov
aaa
pop
pusha
in
xchg
xor
aad
arpl
arpl
js
inc
adc
cltd
cmc
and
test
pushl
in
inc
popa
jp
ret
adc
pusha
push
pop
scas
xchg
loop
mov
inc
push
aaa
lret
out
in
out
inc
in
pop
add
mov
inc
inc
mov
inc
in
sbb
popa
rolb
sbb
mov
xchg
into
xchg
stc
out
ss
sti
pop
ss
inc
aas
into
sub
dec
mov
jecxz
xchg
xchg
mov
cmp
or
stc
cmpsb
xchg
popf
lcall
push
and
sbb
pop
push
and
pop
mov
cmpsb
cmp
nop
inc
pop
mov
sti
stos
sub
xchg
fsubrs
insl
lods
mov
xchg
ret
cmp
aam
push
fnstcw
mov
cwtl
cwtl
ss
jg
xchg
lret
and
test
roll
jg
jmp
rcll
jnp
xchg
mov
stos
in
adc
and
cmc
sbb
mul
sbb
loopne
xor
fisubl
stos
lahf
cmp
cmp
int
out
mov
mov
lret
add
sbb
daa
out
je
jmp
adc
enter
arpl
aaa
jecxz
sub
mov
scas
push
out
lcall
in
adc
push
jnp
xlat
imul
mov
mov
and
test
add
cmpsb
filds
xchg
daa
push
mov
push
xchg
cmpsl
pusha
inc
scas
ds
mov
in
jo
aam
cmp
pop
inc
fildl
jo
jg
xor
xor
dec
flds
lret
sti
and
addr16
aaa
pop
and
lret
sub
out
add
sbb
adc
adc
push
ret
xor
xor
and
sub
mov
xchg
pop
das
mov
inc
mov
rolb
sub
jmp
scas
and
or
out
fadds
cmp
mov
lcall
mov
pop
aam
andl
jbe
sub
imul
dec
les
out
xor
es
iret
sahf
push
std
aas
xor
push
fdivrs
mov
add
xchg
adc
addb
flds
fdivrl
popa
aad
jns
and
fildll
xor
cmpsl
mov
sbb
adc
in
xor
shlb
add
shl
sub
ds
pop
jnp
mov
clc
xchg
mov
outsl
inc
fisttpl
clc
fsubrl
repz
push
add
loopne
pop
xchg
test
je
inc
fsubs
cmp
and
cmpsb
inc
inc
sub
add
xchg
adc
dec
icebp
roll
cmpsl
outsl
jmp
push
and
scas
repnz
imul
ja
push
fisubrs
lock
push
aad
mov
or
xor
js
jp
inc
lahf
push
hlt
fcmovnu
fcmovbe
lods
std
stos
jne
test
jne
push
jne
fnstcw
mov
sti
cs
bound
adc
mov
jno
or
jno
pop
dec
mov
and
pop
into
jo
ds
sub
xlat
scas
inc
jp
js
rclb
cmp
push
sub
mov
cmp
jne
data16
push
fadd
in
xchg
cmp
sahf
xor
add
jg
int
ja
pop
pushf
in
mov
add
orl
cmpsl
and
hlt
lret
xchg
imul
lods
add
adc
or
push
mov
xor
addl
mov
jns
adc
fisttps
sbb
test
add
push
sbb
call
out
and
lret
imul
outsl
jne
and
sbb
divb
lret
sub
clc
hlt
gs
orb
pop
mov
cmpl
jo
cltd
push
fimull
scas
xor
or
inc
hlt
aaa
mov
mov
xor
int
fnstenv
lahf
lds
jnp
sub
lods
cmp
dec
jnp
cmovo
cmc
adc
repz
mov
add
lds
jb
out
sarb
mov
sub
nop
outsb
addb
or
jo
dec
sbb
mov
orb
or
lds
pop
jo
or
xchg
orl
pop
xchg
inc
mov
mov
pop
subl
psadbw
adc
ret
cltd
aas
jnp
add
or
loopne
out
jp
mov
add
mov
movsl
popa
inc
mov
and
and
lret
push
test
sbb
jae
loopne
mov
jne
xchg
sbb
rcrb
push
and
divl
dec
mov
and
cmp
sbb
sbb
push
and
lahf
cmp
inc
pusha
aad
outsb
push
mov
cld
mov
addr16
xor
lods
movsl
cmpsb
imul
ret
adc
mov
stc
mov
add
jle
int3
jmp
cmp
dec
fwait
repz
jo
mov
push
call
pop
push
inc
in
cmp
fcompl
jecxz
lahf
ljmp
mov
mov
pusha
sbb
shl
cwtl
in
jl
xchg
jl
jnp
sbb
fwait
xor
mov
inc
push
js
mov
pop
xor
mov
cs
xchg
nop
int
and
pop
sbb
inc
loop
push
inc
popf
data16
lea
xor
sub
xor
cmp
inc
mov
adc
xchg
adcl
pop
push
ret
mov
lcall
pop
mov
hlt
pop
iret
inc
cmp
mov
sbb
cmp
rcrl
jle
sbb
push
cltd
mov
lahf
movsb
in
loope
jl
jp
stos
xchg
push
lock
jne
aad
popa
sub
in
sbb
mov
cmp
in
js
xchg
cmp
add
push
add
xchg
flds
iret
imul
pop
mov
ljmp
fistpl
movsb
movsb
arpl
setbe
std
data16
outsl
mov
ret
sub
xchg
repnz
mov
dec
lea
popl
mov
sub
mov
adc
outsl
arpl
jg
adc
and
push
call
aaa
test
inc
movsl
cmpsb
fdivrs
jo
jae
fimull
or
push
xor
cltd
adc
xchg
xor
iret
es
cmp
int3
xchg
fists
sbb
mov
mov
lret
test
pop
jmp
das
inc
jecxz
mov
jns
inc
repz
xchg
mov
dec
and
mov
pushf
sbb
mov
mov
data16
data16
xchg
call
rol
repnz
cmc
clc
fdiv
into
divb
pop
lds
es
test
ljmp
sbb
es
pop
cld
ret
ret
stc
mov
xor
rcrb
bound
xchg
jnp
xchg
xor
hlt
mov
fs
xchg
mov
mulb
xchg
cmp
inc
xor
ja
aad
mov
das
sti
out
add
add
mov
ret
sbb
inc
add
scas
mov
or
sbb
mov
mov
or
fiaddl
mov
cmpsl
lea
ljmp
xchg
pop
sbb
es
xor
add
scas
leave
sub
lret
loop
pop
mov
dec
push
sahf
mov
pop
sub
and
sbb
pushf
jno
mov
in
shrl
or
push
mov
shll
inc
aam
call
aam
insl
jno
mov
dec
repnz
adc
mov
and
popf
adc
clc
dec
sub
fs
add
pop
call
pusha
mov
sub
ret
popf
out
jne
jnp
mov
dec
pusha
aaa
mov
dec
jmp
mov
xchg
sahf
mov
notl
inc
sub
cmpsb
cwtl
fs
and
sub
mov
push
jp
daa
mov
setge
notl
adc
dec
lcall
dec
mov
pop
mov
xor
int3
pop
inc
ds
std
imul
adc
xchg
add
push
jmp
mov
cltd
adc
cwtl
fistps
push
leave
adc
dec
pop
pop
push
and
test
add
les
add
adc
lods
dec
jno
adc
dec
cli
xchg
dec
ror
and
pop
add
add
push
add
push
mov
popf
dec
jo
cmp
mov
loop
sub
mov
in
xor
jl
sbb
adc
mul
xchg
hlt
pop
cmpsl
cmp
xchg
outsb
dec
xchg
mov
mov
cmc
out
outsl
xchg
xor
repz
cmc
cmp
adc
xchg
sbb
les
repnz
addr16
jecxz
or
jge
mov
mov
push
or
leave
adc
adc
loop
loopne
shll
test
mov
push
fbstp
rolb
jo
jmp
xlat
lahf
sbb
xor
add
dec
pop
push
cmp
leave
mov
data16
mov
es
xchg
adc
nop
clc
adc
enter
faddl
imul
mov
aaa
adc
das
in
fldenv
loop
jae
cmp
sub
xrelease
pop
push
adc
push
arpl
adc
jo
or
outsl
push
push
movsb
dec
xor
scas
jg
out
sbbb
or
popa
fwait
xor
or
mov
loopne
fdivrs
shll
adc
cwtl
push
je
xor
pop
js
ficomps
and
dec
mov
adc
sub
lret
mov
rcr
ss
out
fsubl
sub
dec
dec
sub
push
xlat
call
gs
and
add
shlb
pop
les
sub
xor
repz
rcll
pop
sti
mov
inc
je
and
push
xor
xor
icebp
cmpsb
fiadds
pop
mov
add
bound
fstpt
or
push
jb
sub
je
push
cs
sub
popa
inc
push
stos
rcll
add
pop
stc
xor
adc
ja
xchg
sbb
pop
cmp
sbb
jge
cwtl
repz
mov
lahf
jb
cld
jl
hlt
sub
loopne
stc
or
ljmp
dec
adc
add
in
cli
push
jb
xchg
bound
aaa
mov
ja
aaa
shll
xor
push
daa
cld
test
sti
dec
lods
insb
pop
mov
dec
das
adc
xchg
dec
xchg
cltd
pop
subl
pop
or
outsb
daa
cmp
fadd
fbstp
in
jno
aam
mov
in
inc
mov
jecxz
xchg
push
mov
mov
sbb
test
pusha
dec
mov
repz
pop
inc
movl
jae
nop
jbe
sbb
mov
fwait
add
push
js
or
dec
into
popa
imul
mov
pop
lea
addr16
lahf
xor
adc
jno
push
loopne
xchg
fmuls
adc
int
test
dec
inc
or
pop
je
outsl
push
mov
out
scas
stc
mov
inc
mov
sti
sub
fisubrs
jmp
pop
pushf
mov
add
pushf
xor
mov
jns
push
jnp
movsb
mov
ret
sub
or
dec
popa
int
insb
popf
sub
mov
fistpl
fsubrs
mov
mov
ror
add
pop
test
xor
aad
jge
pop
mov
and
test
repnz
add
mov
mov
int3
out
adc
mov
jae
pop
cli
xor
pop
out
cmp
stos
mov
mov
sbb
imul
add
cmp
xchg
jmp
mov
mov
jmp
js
call
mov
jg
sbb
dec
subl
stc
hlt
push
pop
aam
inc
mov
es
add
mov
inc
cmpsb
subl
jb
imul
xlat
sub
add
loop
ljmp
movsl
mov
bound
and
inc
lods
sbb
xrelease
inc
bnd
jg
pop
int3
inc
inc
in
sub
cltd
adc
arpl
pop
add
lds
test
jg
pop
cltd
les
fbstp
mov
jle
adc
insb
xor
ljmp
mov
popa
lret
es
pop
test
jbe
adc
iret
and
mov
loopew
push
sbb
ljmp
daa
inc
mov
fdiv
leave
jle
clc
fprem
push
pusha
das
hlt
in
mov
xchg
addr16
sub
pop
loope
push
mov
sti
xchg
ja
dec
in
xchg
or
sub
outsb
frstor
rcr
sbb
lods
add
mov
fistpll
sbb
enter
mov
shlb
outsb
pusha
pop
popa
out
out
test
dec
pop
xlat
imul
xchg
xchg
cmpl
sub
mov
ret
inc
dec
jnp
insl
jns
mov
ss
push
in
stos
pop
cltd
pop
sub
sub
call
in
jb
sbb
and
lret
rorl
xchg
sbb
dec
scas
mov
je
add
or
cltd
xchg
loop
loop
cmp
shll
dec
xchg
or
push
orb
mov
adc
push
lret
js
dec
insl
cli
cmc
cmpsl
test
xchg
clc
cmp
inc
inc
fwait
out
negl
lods
sub
xchg
dec
dec
adc
int
fsubrl
bound
xchg
cmp
lods
xchg
lar
jmp
mov
xor
xchg
stc
sbb
mov
pop
jbe
push
ret
adc
ficoms
add
rolb
adc
fld
push
in
pushf
cmp
or
xor
mov
xchg
cmp
dec
sbb
pop
xor
hlt
push
in
sbb
jbe
pop
outsb
jns
test
dec
movsl
sub
or
add
or
xor
int
gs
bound
shll
jge
xchg
xchg
pop
fdivrs
push
adc
sbb
lods
mov
pop
xor
sub
mov
pusha
pop
jae
cmpl
int3
pusha
pop
sbb
das
mov
lock
adc
js
cmp
mov
jo
js
sbb
clc
sub
mov
into
mov
jmp
or
into
xchg
push
lds
int
stos
pop
jae
out
icebp
les
sub
es
inc
insb
out
or
arpl
mov
xchg
inc
or
xorl
pop
cmpb
mov
mov
or
add
xchg
test
sbb
mov
lea
mov
xchg
push
adc
jbe
into
mov
shll
decb
fisubl
inc
scas
loop
stc
js
or
xlat
fidivl
pop
add
movaps
dec
addl
out
jmp
pop
mov
scas
hlt
mov
repz
popf
sub
loopne
sahf
push
scas
addr16
hlt
lds
ret
loopne
mov
scas
shrb
stos
push
lret
jno
pop
cs
mov
pop
mov
mov
fldcw
sbb
jb
jg
gs
sub
shrl
push
sub
add
xchg
test
push
ret
test
cmp
jl
rorb
mov
ds
push
jns
jg
cmpsl
stos
add
sub
and
cmp
stc
pop
cltd
hlt
mov
test
sub
add
inc
lcall
xchg
clc
pop
sti
out
or
xchg
test
xor
adc
or
sub
loope
cmpsb
nop
mov
push
sub
pushf
shlb
sbb
push
and
stos
adc
scas
mov
aaa
ds
mov
mov
shrb
pop
pusha
lret
sarl
mov
data16
scas
loope
mov
shrb
dec
jb
js
xor
imul
cmp
icebp
popa
test
sahf
data16
jge
add
xchg
and
or
leave
lret
jp
adc
jl
insb
pop
mov
daa
std
test
xorb
and
sub
xchg
push
inc
push
add
push
std
sub
addr16
aaa
xor
cmpsb
or
sahf
cltd
lock
push
sbb
xchg
in
mov
in
dec
push
fmuls
mov
shlb
add
xchg
pop
je
sbb
push
repnz
mov
xchg
andl
sti
jmp
stos
pop
pop
sub
pusha
andl
push
mov
pop
verr
int3
pop
xchg
into
pop
mov
inc
jno
cltd
mov
in
push
insb
repz
xchg
adc
and
shlb
xchg
inc
mov
jnp
fistpll
cwtl
pcmpeqd
enter
rolb
mov
mov
xchg
stos
mov
mov
or
jge
lods
rcr
leave
pop
mov
sahf
inc
pop
fdivs
sub
or
push
add
int
lock
cmpsl
pop
mov
ljmp
dec
mov
mov
add
or
std
adc
test
aas
out
lods
sahf
fildll
fistl
fistpl
inc
push
push
sbb
mov
jb
xchg
cmp
inc
jmp
fwait
insl
sub
add
dec
jmp
jno
sbb
imul
push
push
arpl
rclb
cmp
xchg
cs
add
mov
in
mov
adc
hlt
mov
adc
dec
aam
scas
sbb
je
jnp
loop
xchg
xor
popf
mov
sti
sbb
popa
mov
adc
mov
lea
xchg
fcmovbe
out
in
dec
xor
and
cmp
pop
adc
out
leave
inc
out
imull
shll
popa
xchg
sub
jecxz
xor
xor
roll
fdiv
fwait
xor
jge
arpl
jge
ljmp
xchg
xchg
lea
xchg
test
mov
cs
dec
adc
sub
pop
movsl
jg
push
mov
push
jo
jne
pop
repz
cmp
js
inc
xor
sti
cs
sub
adc
lods
in
adc
inc
pop
shrb
xchg
test
sub
push
and
xchg
es
add
popf
or
call
mov
cmp
aam
dec
push
rcll
mov
stc
nop
inc
dec
jmp
jne
test
je
addr16
cmp
call
leave
xor
jge
pushf
int3
mov
xchg
sbb
leave
ljmp
pop
popa
roll
cld
push
add
xor
insb
aaa
stos
pop
repnz
stos
int3
jbe
cltd
xor
loopne
sbb
rol
or
xor
into
add
fldenv
lret
xchg
subl
mov
sub
mov
adc
mov
push
mov
stos
rclb
cmpl
xor
mov
into
mov
dec
jb
fisttps
out
xchg
les
cmpl
pop
mov
fadds
sbb
inc
test
dec
dec
cmp
in
insl
ret
dec
push
mov
jmp
mov
cmp
dec
sarb
movb
lret
cmc
jae
das
or
hlt
shlb
xchg
test
jnp
xchg
mov
xchg
dec
movsl
push
mull
xor
insl
rcr
lock
adc
into
and
add
cmp
hlt
xor
adcb
insl
xor
in
jp
aas
or
jb
push
adc
arpl
cmpsb
jo
repnz
pop
add
jo
xchg
mov
std
push
and
xchg
push
or
mov
jl
sar
arpl
aam
dec
and
mov
loopne
jbe
mov
iret
fnstcw
dec
xchg
or
cmp
pmuludq
test
shlb
xchg
push
lea
pushf
mov
je
stos
mov
mov
ficomps
dec
sbbl
sarb
dec
popl
push
lods
cmpb
xchg
cmp
ja
daa
inc
pop
dec
rorb
xchg
cmc
mov
and
xchg
inc
mov
test
shlb
sbb
in
stos
cmp
test
jg
lods
push
add
mov
mov
xchg
dec
lea
jb
out
stos
and
mov
not
xchg
jle
cmp
sarl
fiaddl
xchg
or
mov
std
test
roll
xlat
inc
cmp
loope
mov
mov
shrl
push
mov
inc
in
js
cmpsb
jb
jle
lods
fistpl
xlat
lahf
dec
pop
push
je
cmpl
inc
mov
sbb
push
mov
shrb
jns
test
test
push
insl
xor
lock
repnz
repnz
inc
mov
adc
jae
mov
mov
mov
and
dec
nop
psrld
ret
aam
sub
cmp
hlt
cltd
inc
lret
mov
dec
repz
push
pushf
imull
xchg
pop
dec
cmp
inc
sti
xchg
dec
push
mov
jl
inc
mov
inc
loope
sahf
das
jnp
insb
aaa
xor
push
fisttpll
in
mov
push
fists
dec
loope
nop
cld
repnz
sti
lock
pop
data16
sti
push
jp
fs
mov
inc
data16
mov
aam
fxch
or
xor
inc
adc
rol
in
xchg
jo
cmpb
subb
pop
sub
jecxz
jp
adcl
inc
insl
and
or
inc
pop
add
repnz
sbb
mov
mov
or
fstpl
addr16
cmp
dec
push
popa
push
inc
push
adc
imul
cli
sbb
and
fwait
popa
sub
fnstcw
out
bswap
cmp
mov
cmp
jbe
mov
imul
shrl
push
mov
jo
mov
sbb
cmc
imul
jb
xor
mov
or
pop
pusha
mov
test
call
aas
inc
in
daa
cmp
and
aas
mov
out
fwait
xor
test
add
scas
sbb
mov
and
and
push
ja
pop
xor
out
sub
xor
pushf
int3
jb
out
push
test
daa
push
aad
dec
mov
lods
ficompl
lock
inc
ret
lcall
mov
sub
std
mov
icebp
dec
js
cmc
push
cmpsb
iret
push
gs
add
push
adc
lret
in
cmp
ja
sbbl
in
push
add
adc
xchg
push
idivl
cld
data16
out
mov
inc
and
loopne
in
cmp
arpl
mov
and
leave
into
aas
in
sub
in
pop
cmc
jnp
decl
adc
cmp
cld
or
add
insb
loop
pop
movsb
ret
mov
inc
inc
xor
ror
mov
mov
bound
hlt
push
in
mov
fcoms
repnz
dec
inc
add
call
mov
das
cs
xchg
std
or
mov
adc
sub
adc
inc
es
push
negl
mov
and
enter
js
into
mov
fsubrl
xchg
xorb
pop
popa
push
idivl
leave
scas
pop
imul
mov
xor
sbb
xor
sbb
push
repnz
aad
jbe
aaa
movsb
idivb
sbb
mov
aam
pop
scas
dec
adc
shrb
sti
hlt
jecxz
adc
mov
dec
push
mov
test
and
inc
jb,pn
aad
push
xor
lret
pop
out
dec
in
rolb
push
mov
icebp
mov
and
imul
cs
inc
mov
mov
cs
adcl
cmp
in
or
sub
cmp
mov
sub
lahf
movsb
repz
adc
dec
sarb
cmp
aaa
fildl
into
loop
push
mov
loop
out
inc
dec
out
mov
xor
mov
das
xor
repz
adc
rorb
les
pusha
xor
xchg
xor
pop
or
jb
js
push
sahf
dec
test
fdivrs
faddp
fists
mov
hlt
mov
xlat
adc
imull
ret
dec
dec
fldcw
push
enter
pop
pop
sbb
mov
movsb
leave
jnp
ret
push
outsb
cli
std
fistl
insb
inc
lea
xchg
xchg
aad
negb
jnp
ds
gs
enter
xchg
add
push
inc
jo
pop
push
dec
jmp
mov
mov
xor
dec
hlt
sahf
jl
ds
or
ja
mov
xchg
mov
scas
xchg
test
mov
jp
inc
sbb
push
dec
push
jle
mov
sub
lret
setbe
jno
xor
push
and
pop
push
jp
mov
shrl
aas
xor
fisttpll
push
jg
int
fldcw
add
mov
xchg
sub
push
in
xchg
xchg
or
in
loope
push
into
push
cwtl
ss
dec
sbb
push
jge
fdivs
cmp
jne
arpl
and
mov
sub
sbb
popa
push
mov
pop
test
mov
subb
mov
push
jl
ja
fnstenv
clc
fdivs
pop
mov
dec
inc
sub
jns
mov
stc
and
int3
ljmp
dec
jno
out
hlt
clc
insb
daa
pushf
inc
cmp
lods
jle
xor
mulb
in
mov
ss
sahf
mov
jnp
cmp
cmp
ja
push
xchg
xchg
xor
jl
mov
mov
dec
repz
cltd
xchg
pop
cmp
out
xor
mov
arpl
sub
dec
mov
jo
add
fabs
add
rorb
or
test
jbe
shrl
sbb
sub
stc
inc
insl
shll
or
inc
daa
lods
addb
into
test
insl
jne
mov
cmp
cld
push
rcrb
mov
mov
mov
lret
sahf
das
push
mov
sbb
pusha
add
jo
cwtl
pop
and
test
pushf
cmp
andb
cmc
mov
mov
pop
pop
cmpsb
mov
iret
shll
es
sbb
lea
inc
pop
icebp
mov
loopne
mov
lds
and
xchg
out
add
test
mov
pop
mov
rolb
test
daa
sub
inc
dec
lods
inc
jb
sub
mov
mov
adc
dec
or
pop
mov
arpl
xchg
es
int
mov
fidivs
jo
sub
inc
jo
sub
and
sub
js
sbb
cmp
cwtl
rclb
call
out
dec
jne
aas
arpl
add
int3
mov
push
inc
outsb
mov
xor
inc
jns
call
fwait
cmp
jbe
mov
stos
push
mov
adc
cs
push
jmp
mov
testb
sub
mov
or
mov
mov
push
pop
lret
xor
sbb
mov
sbb
cmp
cld
jno
cwtl
cs
je
push
out
ficoms
xchg
or
fwait
cmp
lret
cmp
rorl
push
cmovno
fldenv
stos
scas
std
sub
jae
in
mov
mov
loope
repz
dec
adcb
adc
cli
xchg
sbb
fwait
pop
jge
jge
inc
push
sti
or
and
movd
cmp
in
ljmp
and
push
cmpl
pusha
push
test
bound
imul
mov
push
mov
inc
push
idiv
pusha
inc
sti
jbe
jne
imul
bound
repz
lahf
aaa
in
push
xor
out
mov
cltd
loope
push
or
push
xchg
shl
mov
in
les
sub
jg
push
fdivrl
outsb
inc
out
es
xor
fs
push
or
stos
or
lods
lods
movsl
pop
dec
loope
pop
out
push
mov
fdivr
popf
push
scas
imulb
and
fldt
push
push
call
jle
jb
shl
imul
cmpb
mov
dec
mov
lods
sbb
push
insl
cli
dec
scas
loop
sti
push
cltd
dec
sbb
sub
aaa
fld
pop
mov
mov
fisubrs
icebp
mov
pop
inc
jo
xchg
mov
jp
ljmp
xchg
lods
cmc
xor
xchg
jg
mov
jne
dec
pop
push
lcall
lret
pushf
mov
dec
xorb
mov
cs
pop
mov
out
adc
dec
sub
movsl
xor
pop
shll
pop
into
push
rdmsr
leave
out
add
pop
test
jecxz
fwait
push
cmpsl
cmp
dec
repnz
je
push
mov
inc
fwait
es
mov
push
imul
or
sti
outsl
cs
xchg
jecxz
pop
pop
sub
out
jl
xchg
or
lds
mov
int
dec
mov
adc
xchg
sbb
lea
shll
inc
mov
xor
add
ja
rcll
in
fscale
push
imul
scas
rcll
sub
mov
inc
mov
xchg
jns
mov
outsb
mov
repnz
mov
jmp
jl
enter
out
xchg
jg
iret
cld
push
jg
sbb
sbb
dec
pushf
and
or
clc
sub
cltd
scas
mov
mov
and
sub
dec
addr16
imul
dec
aas
mov
pop
in
xor
out
incb
sub
sbb
add
insl
jecxz
sahf
jns
sbbl
sub
sbb
aad
jne
jle
popf
inc
or
fldl
inc
push
cmp
xchg
ret
repnz
bound
sarl
cmpsl
mov
sub
jnp
push
add
sbbb
mov
cmpsl
mov
je
mov
stos
icebp
push
cmp
push
aam
and
movsb
mov
mov
cmpsl
lods
push
arpl
out
imul
and
lods
jl
icebp
imul
pop
xchg
xchg
and
je
out
or
mov
pop
cmp
xor
inc
ljmp
lds
jmp
mov
dec
ja
popa
inc
cmp
outsl
shll
mov
cmc
scas
adc
mov
xchg
ret
xor
aaa
fldl
push
pop
dec
push
mov
push
xchg
pop
das
scas
pop
sbb
or
outsl
mov
mov
lcall
loop
test
push
sti
repz
sahf
mov
mov
out
aad
xchg
push
rol
xor
pop
and
fisttpl
cmc
pop
mov
push
jne
jg
mov
jl
fildll
mov
popf
dec
shll
inc
and
lods
subb
add
aaa
push
xor
arpl
shlb
add
mov
bound
inc
stc
push
rolb
gs
dec
mov
add
push
pop
xchg
mov
pop
jo
pop
push
pusha
adc
push
mov
insl
sti
adc
mov
jne
aad
ja
push
xchg
pop
movsl
dec
jecxz
xorl
adc
and
stos
aas
test
pop
call
ljmp
push
cwtl
roll
test
ficomps
lret
push
dec
push
inc
lods
mov
leave
sahf
mov
push
mov
mov
lret
push
xor
push
mov
and
iret
jo
fs
enter
mov
mov
jmp
fdiv
lea
dec
cltd
cwtl
xchg
add
xchg
test
and
cmp
mov
push
addr16
sbb
adc
xchg
sub
mov
andb
adc
sub
out
int
fdivs
loopne
dec
clc
out
mov
fbld
js
imul
fwait
jg
fs
adc
mov
enter
push
fbld
mov
add
std
jno
addr16
mov
inc
sbb
insb
lds
jg
lea
push
ljmp
ret
xchg
cltd
popf
jp
mov
aam
mov
mov
mov
xchg
mov
scas
scas
addb
sbb
stos
je
add
lods
ss
mov
sar
pop
lahf
push
lret
into
adc
shl
sti
daa
sub
loop
stos
xor
cs
pop
lds
sbb
sbb
cwtl
les
add
outsb
test
xchg
jnp
adc
cmp
push
inc
dec
jae
jns
in
pop
into
adc
cld
andb
dec
adc
cmp
in
push
sbb
repnz
or
lods
jbe
testl
sub
jns
arpl
xchg
test
cmpsb
or
int3
lret
test
pop
xor
repnz
fildll
inc
data16
jmp
stc
jbe
setp
inc
pop
pop
sahf
daa
mov
stos
aaa
add
in
xchg
test
inc
inc
data16
ss
push
adc
jl
pop
xchg
add
sub
mov
xchg
cli
or
outsb
or
call
loop
inc
popa
data16
inc
test
mov
enter
pop
jo
repz
int
mov
jp
shll
fwait
in
stos
sbb
mov
cmp
pushf
add
pop
pop
std
pop
dec
sub
add
xor
test
sahf
scas
out
pmulhw
cld
incl
rorl
dec
push
or
lods
stos
mov
nop
aam
mov
in
xchg
xor
lods
daa
mov
daa
adcl
mov
push
and
inc
push
push
push
jecxz
xchg
mov
into
and
xlat
pop
das
cld
push
dec
mov
push
cmc
add
jge
test
fsubrl
ljmp
cwtl
mov
insb
rcll
cmp
addr16
adcl
adc
pushf
sub
rcll
xor
popf
rcrl
and
jle
xor
dec
ret
xor
std
imul
xchg
cmp
mov
mov
pop
lds
sahf
cli
mov
imul
movsl
xor
outsb
lds
outsb
sbb
xchg
in
inc
mov
sbb
xor
xor
cs
aad
or
jge
addl
xlat
sbb
mov
call
addr16
adc
popa
push
loopne
cmpsl
pushl
loop
and
pop
cmp
les
stc
pop
xor
push
je
push
aaa
jmp
fcomps
mov
jns
push
lret
test
test
jo
addb
adc
add
stos
jl
jecxz
or
std
xor
pop
sbb
stos
xchg
sub
mov
lds
add
lock
out
mov
xor
cmp
icebp
test
sarl
lret
or
pop
cmc
mov
fwait
outsl
stos
mov
mov
rcrl
std
jno
test
inc
mov
loopne
and
in
repnz
cli
push
jne
call
das
and
xchg
cmpsb
inc
jno
mov
call
add
sti
and
ja
xchg
rcrb
pop
push
mov
cli
add
andl
pop
xchg
mov
xor
std
inc
mov
cwtl
insl
dec
cld
dec
mov
adc
ret
push
or
sub
jno
sbb
rorl
mov
xor
aaa
sub
or
jbe
cmp
das
dec
adc
iret
jg
dec
sub
sti
xorb
pop
dec
in
xchg
push
pop
in
loope
adc
add
repz
mov
rcl
pop
add
cld
push
pop
repnz
cmp
out
fwait
sbb
pop
clc
or
popf
outsl
loopne
popa
xor
sub
divl
xchg
out
jns
insb
xchg
stos
cmp
sbb
sbb
jg
lock
aas
aad
into
xchg
xor
mov
mov
rcll
pop
dec
out
pop
sti
inc
sbb
loop
mov
push
or
ljmp
mov
aad
add
aas
mov
movsb
push
mov
lcall
mov
sbb
add
push
aaa
call
mov
jge
fstl
pop
es
cmpxchg
fdivl
out
jle
pop
push
in
loope
ljmp
aam
std
je
pop
pop
icebp
mov
repz
mov
dec
movsl
add
rolb
pushf
cs
dec
pop
faddl
bound
pop
mov
pop
cmp
push
hlt
mov
pop
arpl
popf
pop
scas
dec
lcall
roll
test
adc
insl
xor
or
in
inc
mov
mov
push
imul
ss
in
push
cmpb
push
in
mov
jne
push
cmpsl
rcrb
mov
jns
divl
or
mov
loop
mov
and
cmp
int
das
mov
aas
rclb
rorb
decb
cmpsl
int
fiadds
data16
outsb
and
or
and
dec
call
outsl
dec
mov
int3
xor
inc
dec
add
add
rep
mov
mov
fdivrs
or
movsb
mov
push
jl
into
add
je
jns
insb
test
push
fcomip
jl
mov
stos
notl
push
inc
push
xor
push
mov
insb
jno
mov
orb
popf
mov
push
imul
stos
xor
test
jns
jle
sub
jno
dec
sbb
inc
shll
cmp
lcall
lods
lods
cmpsl
es
cli
gs
xchg
or
sub
in
loop
mov
out
cmp
mov
stos
sub
in
loope
lahf
lds
aam
jo
leave
jle
aad
gs
dec
outsl
imul
idivl
or
pop
inc
mov
inc
int3
sub
adc
das
fldl
dec
dec
xor
mov
dec
test
adc
add
inc
in
inc
and
push
mov
orb
add
iret
jo
xlat
mul
es
clc
out
sbb
mov
incl
ffree
gs
lret
mov
dec
cmpsl
std
mov
imul
sub
shlb
mov
ret
fwait
scas
daa
in
xor
stos
jne
jne
inc
lods
fsubl
xor
adc
pop
push
sub
dec
cmp
push
sub
or
popf
jne
int3
in
jns
sub
fiaddl
xor
sbb
adcb
popf
cmpsb
hlt
lea
mov
popa
push
mov
mov
adc
mov
ss
sub
mov
add
jg
sub
mov
cmp
je
les
mov
or
jecxz
add
addr16
pop
dec
adc
int
lea
pop
mov
cmp
dec
mov
push
mov
lea
inc
stc
fs
rcrl
xor
xor
sbb
and
out
jg
outsb
sbb
and
fildl
dec
pop
pusha
sbb
sub
xchg
stc
adc
jl
lods
out
mov
dec
sti
xchg
push
jbe
add
sbb
adc
dec
pop
mov
push
jl
mov
enter
dec
mov
pop
fadds
inc
xchg
push
mov
mov
xchg
sub
cli
push
imul
ret
out
sbb
loope
cmpsl
aas
mov
jp
mov
js
add
stos
popa
test
sbb
rorb
mov
loop
pop
or
lock
xor
fmuls
pusha
mov
sahf
mov
adc
hlt
xchg
jmp
ja
imul
dec
xor
cli
in
sub
rolb
clc
push
stos
pop
pop
xchg
push
push
adc
and
xchg
stos
pop
and
cmc
addr16
push
push
popf
or
cmp
testl
idivb
pop
call
add
jb
movsb
xchg
dec
mov
in
out
cmpsl
int3
sarb
jbe
fs
push
hlt
xlat
adc
cmp
stos
inc
xor
sub
pop
pop
sti
or
or
pop
loopne
idivb
stos
adc
or
outsl
ljmp
pop
inc
movsl
cmp
repz
push
sbb
sti
movsb
js
fdivrl
adc
cli
arpl
sbb
cltd
mov
push
cmpsb
inc
lds
jbe
inc
xchg
or
push
and
je
stc
push
push
cmp
addr16
push
xchg
rolb
popa
sbb
insb
mov
jl
inc
or
out
ss
adc
xchg
jae
je
hlt
mov
pop
pop
rcrb
in
lods
adc
je
jae
nop
mov
xchg
mov
jnp
loope
cwtl
or
inc
outsl
lods
lea
xchg
rcr
xor
popa
in
inc
dec
ret
push
sbb
lcall
adc
test
push
stos
adc
mov
popf
dec
mov
pop
cmp
loope
adc
clc
push
pop
testb
dec
xor
inc
cli
or
sub
dec
push
les
mov
data16
das
shr
imul
mov
das
pushf
pop
jbe
cmpb
dec
mov
add
into
jae
mov
mov
add
pop
enter
xor
push
lods
psubd
pushf
int3
jmp
jb
rorb
orl
xor
into
push
shlb
sub
lcall
cmpsl
out
mov
arpl
sbb
jns
dec
loopne
inc
push
push
cltd
and
add
int3
and
ficoms
dec
std
inc
cmc
mov
outsb
fnstcw
dec
popa
testl
fsubl
jge
pop
mov
lods
add
mov
stc
inc
shrl
jl
mov
mov
mov
mov
inc
jl
mov
dec
xor
xchg
push
add
and
outsl
sbb
sbb
dec
movsb
sub
cmc
inc
pop
add
out
mov
addl
xchg
repnz
jb
sub
sbb
scas
jns
mov
lds
mov
pusha
in
filds
addl
cmpsl
mov
outsb
push
scas
int3
mov
xchg
dec
mov
jae
jbe
rclb
inc
mov
loop
pusha
je
jmp
sbb
xor
push
loope
sarb
gs
sbb
sbb
mov
test
jle
mov
inc
mov
test
or
cltd
scas
mov
test
push
je
pop
stos
scas
and
sahf
dec
push
nop
pop
nop
mov
add
je
iret
rcrl
fs
into
aaa
add
pop
inc
jno
or
xor
or
mov
das
dec
gs
xchg
xor
lahf
xchg
xlat
cs
push
int3
sbb
or
ss
inc
xor
pop
jo
cmp
inc
jg
mov
cmpl
add
mov
cwtl
pushf
in
imul
pop
jge
pop
mov
inc
mov
jo
lea
popf
xchg
push
setne
insl
test
xor
pop
lods
or
ja
pop
jle
andl
pop
and
pop
shlb
movsl
mov
push
dec
xchg
stos
xor
jl
pop
iret
cld
ljmp
inc
jb
mov
dec
pushf
loop
call
ss
mov
pop
sub
jne
pop
cld
pop
cs
pop
out
scas
or
pop
lds
loop
jns
stos
mov
sub
mov
leave
and
inc
jle
aaa
out
fwait
daa
mov
jnp
and
fsubrs
outsl
subb
jbe
push
rol
push
lock
out
ficompl
sbb
pop
mov
cmp
imul
mov
imul
cmp
xor
dec
out
mov
add
inc
das
cmp
dec
inc
jge
xchg
outsl
jb
xor
cmpsl
push
pop
xchg
xchg
add
insl
xchg
lea
sub
sbb
call
lods
push
clc
or
or
out
stos
add
mov
xlat
fwait
aas
pop
push
pushf
xchg
inc
xor
sub
xor
sbb
daa
dec
dec
mov
and
inc
sub
out
xchg
nop
mov
pushf
arpl
inc
ret
inc
loop
movsb
lods
jge
pop
lods
imul
adc
lods
jnp
arpl
in
mov
dec
aam
into
out
fidivs
or
jl
inc
pushf
clc
xchg
mov
int
pop
push
enter
inc
add
cld
cwtl
xchg
andl
push
push
call
sahf
fs
push
daa
test
mov
jae
scas
pushf
pop
jne
out
xor
movsb
push
sbb
mov
movsl
ret
fstl
leave
jns
lods
sub
mov
mov
dec
xchg
loop
push
adc
dec
sbb
into
pop
ret
scas
mov
and
mov
pop
xchg
pcmpgtw
jo
loop
cmp
xchg
addb
push
clc
icebp
int3
adc
push
mov
gs
jnp
mov
xlat
imul
push
mov
movsb
pop
xor
stos
popa
jae
lds
dec
hlt
es
add
shrb
aam
pusha
xchg
fnstcw
sub
add
xor
push
mov
adc
adc
add
sarl
sti
das
mov
into
scas
je
lods
dec
addr16
loope
arpl
sub
movsb
cmp
les
fnstcw
in
jg
push
data16
movsl
sbb
push
mov
sti
mov
icebp
mov
adc
add
lahf
gs
dec
xor
test
lods
mov
pop
movsl
cmp
dec
outsb
sbb
mov
push
cmp
xor
adc
pop
inc
adc
test
int
push
cld
add
in
xchg
sti
cmp
sub
loop
xor
mov
rol
fsubp
sbb
add
push
jmp
rcll
sbb
mov
sahf
xchg
pop
popf
fildll
jp
pop
push
mov
mov
lret
pop
jl
cmp
orl
das
je
xchg
enter
bnd
jno
aad
ss
xorb
or
push
cmp
ret
jns
or
xor
mov
jbe
adc
sbb
aam
jb
ret
emms
aas
inc
les
loop
xlat
faddl
aaa
mov
gs
sbb
cmpl
pop
ret
fwait
dec
jecxz
aam
xchg
push
mov
pusha
in
push
imul
cmp
xor
xchg
pushf
fsubrs
lods
dec
sub
dec
push
imul
icebp
loopne
dec
movsb
in
jno
xlat
icebp
and
push
pop
mov
inc
push
push
imul
rorl
dec
jmp
rcrb
xor
fs
insb
js
inc
inc
and
in
xchg
xor
imul
clc
add
pop
loopne
daa
mov
and
xor
sbb
cmp
ljmp
or
lea
and
orb
stos
cld
mov
call
sbb
ja
shll
arpl
push
ds
jecxz
dec
mov
pop
inc
clc
jbe
pop
out
pushf
xchg
push
xchg
xor
pop
sub
daa
ss
jmp
scas
mov
sbb
lods
aam
movsb
loopne
xchg
dec
repz
in
cli
je
sarb
stos
dec
pop
pop
andb
fistpl
mov
cmp
mulb
sub
mov
xor
adc
inc
adcb
std
daa
mov
loope
jo
cmp
test
sbbb
test
push
cmp
imul
pop
jne
dec
xchg
int3
push
and
in
push
cmpsl
lock
xor
js
sub
dec
mov
gs
and
pop
pop
mov
xchg
sbb
and
std
push
ds
daa
xorl
cltd
push
jno
mov
cmp
push
push
int3
xchg
ljmp
or
jae
dec
js
sbb
adc
cmc
jb
and
fsubrp
add
daa
mov
add
jne
and
cli
lahf
xor
push
aad
pusha
out
inc
in
mov
sahf
cld
cltd
fisubl
repnz
insb
pop
adc
xchg
incl
cmc
movsl
inc
lods
bound
mov
adc
loope
push
mov
jmp
xchg
cmpsl
adc
fs
arpl
inc
std
mov
push
js
fcmovnb
popa
insb
lds
and
mov
aad
dec
inc
mov
clc
xchg
iret
adc
cmp
pop
cmp
xor
push
inc
pop
xchg
mov
imul
popa
sub
add
dec
add
mov
sti
dec
movsl
sar
xlat
inc
xchg
popf
or
cmp
cmc
adc
nop
stc
dec
sub
dec
push
xor
leave
cwtl
or
int
xor
dec
xlat
mov
push
clc
push
cmp
or
in
cmovne
pop
nop
mov
add
xchg
popf
out
push
jns
xor
sub
sti
sbb
mov
movsl
mov
dec
inc
inc
mov
and
cld
lret
shrb
negb
and
push
sub
pop
gs
pushf
dec
jl
xchg
adc
xchg
mov
cs
pop
cmp
fdivrl
out
outsl
ss
mov
sbb
push
pop
shrl
cs
fs
fwait
or
lcall
adc
loopne
xor
ror
lret
dec
mov
mov
xchg
pusha
and
insl
pop
and
in
andb
mov
push
or
cmp
int
insl
sbb
aaa
jno
popa
lret
jmp
cmpsl
negl
lods
cmp
adc
push
fstpt
adc
push
sub
mov
and
jno
sbb
rcrl
mov
leave
sub
movsb
sti
add
xchg
mov
arpl
add
frstor
jne
test
xor
gs
sub
mov
lock
jae
mov
inc
ret
lods
enter
imul
lahf
and
xchg
stos
in
cld
inc
lahf
popf
roll
out
ja
pop
adc
add
lock
or
push
cmp
fistps
pop
xor
fmul
bound
pop
jge
aad
nop
or
js
call
jecxz
addr16
sub
and
pop
ljmp
pop
xchg
adc
cmp
xchg
or
addb
testb
stc
insb
es
jmp
jecxz
adc
jno
out
xor
mov
in
sub
ret
push
cs
pop
les
xor
insb
fnsave
int
aas
pop
push
inc
dec
jp
std
add
push
cld
or
mov
lahf
dec
movb
and
ret
push
lock
mov
xchg
add
sti
test
into
lret
jns
xchg
add
mov
sarb
xchg
subb
loopne
pop
mov
xchg
enter
test
sahf
in
outsl
jmp
int
fistpl
nop
mov
adc
sahf
mov
int3
dec
stc
xchg
mov
daa
icebp
inc
dec
je
punpcklwd
push
mov
pushl
xchg
jae
sbb
cmp
push
outsl
xor
inc
icebp
add
cltd
jnp
add
loop
imull
mov
sti
pop
test
pop
stos
dec
out
in
pop
je,pn
lret
pop
push
in
loope
je
insl
fisubrl
push
adc
arpl
fildll
lahf
in
pop
push
or
test
fimuls
xor
jnp
add
sbb
lods
sarl
imulb
hlt
cmp
jl
enter
cs
xchg
out
dec
inc
cs
mov
inc
cmp
xchg
add
pop
jo
xor
movsb
icebp
xor
cmc
xchg
jge
pop
cmpsb
in
scas
and
cmpsb
push
nop
jno
mov
sahf
int
push
pop
orb
dec
daa
cmp
icebp
adc
repnz
xor
in
jmp
in
adc
cmc
mov
cld
push
add
sub
sbb
mov
stos
add
inc
jno
inc
jno
sub
pop
sbb
sub
into
mov
or
das
aaa
adc
lock
loope
lds
cmp
cltd
iret
test
add
add
jne
std
loope
out
cmp
hlt
or
inc
adc
mov
js
out
int
lods
mov
jne
sbb
imul
icebp
sub
push
js
push
and
push
cld
cld
cmpsl
pop
ret
int
xor
push
jg
enter
cmpsb
addr16
test
pop
sahf
mov
xchg
push
aas
hlt
fisubrl
stc
pop
fsub
cmp
int
mov
iret
test
pop
push
xor
std
inc
in
popf
sub
dec
push
sbb
mov
orl
and
call
push
jecxz
mov
out
mov
mov
jno
divl
xchg
out
pop
mov
cld
sub
incl
mov
jbe
fld1
in
jbe
xchg
sbb
rclb
inc
xchg
pushf
inc
pop
dec
jb
pop
push
sbb
add
inc
xchg
lods
mov
ffreep
bound
jg
sbb
xor
ds
xchg
inc
xchg
ljmp
lea
les
xchg
loop
xchg
lahf
jae
mov
lcall
push
divb
hlt
adc
insl
insb
push
loop
xchg
flds
and
shrl
sub
fstpt
faddl
push
sub
push
mov
dec
js
cmpsl
incb
adc
pop
lock
dec
int
movsb
jno
mov
and
cmp
pusha
pop
lock
add
scas
jb
movsl
pop
bound
shr
mov
imul
outsl
outsb
adc
fidivs
mov
cmp
shl
mov
mov
jl
lock
pop
enter
stc
lret
jl
or
bound
push
filds
sbb
shll
stos
pop
push
arpl
sub
mov
inc
pop
aas
add
rcrl
shrl
cmp
nop
xorb
or
into
jl,pt
dec
shll
xor
fisubl
dec
ss
mov
ja
push
out
or
repnz
stc
push
test
lds
sahf
arpl
into
and
or
mov
out
xchg
jecxz
loopne
loopne
test
and
jbe
ljmp
sub
pop
pop
idivb
mov
sub
movsl
push
sub
mov
sbb
pop
lret
sub
sbb
cwtl
mov
sub
movsb
cmp
cmc
je
and
push
ret
jg
push
pop
inc
cmpsb
mov
push
inc
add
inc
mov
mov
stc
enter
cmc
incb
push
jne
jo
jmp
repnz
jne
adc
inc
or
in
lret
mov
xchg
inc
inc
mov
xchg
out
adc
push
mov
push
inc
adc
adc
rclb
dec
je
jns
push
ficoml
orb
das
addr16
mov
sar
in
mov
mov
sbb
sub
xchg
adcl
into
jg
fwait
mov
mov
clc
mov
dec
jns
fnsave
xchg
fcmovne
negb
int
mov
movsl
add
mov
mov
sbb
sbb
test
pop
lock
iret
cwtl
dec
sbb
clc
add
jb
fdivs
adc
pop
addr16
sbb
mov
das
ret
fcoml
or
hlt
cmp
mov
mov
xorb
shlb
and
icebp
jmp
push
rcpps
jmp
cld
cmp
addl
dec
hlt
fnstcw
or
adc
xchg
xchg
bound
sbb
leave
inc
sbb
fldcw
fcomp
xchg
sarb
sbb
xor
int
mov
cs
lcall
push
xchg
push
adc
jns
jb
gs
jp
mov
mov
jmp
popf
mov
mov
push
jnp
loopne
xor
sub
mov
pop
or
jno
popf
test
pusha
pop
fsub
stos
and
cmpsl
and
lret
xor
repz
rorl
outsl
push
add
clc
and
cmp
dec
xchg
push
insl
iret
adcb
mov
sar
jb
mov
xor
shl
addr16
test
sub
or
xor
push
loop
mov
pop
fdivrp
add
popf
add
cmp
mov
dec
sbb
push
in
pop
rcll
int
jg
and
jne
jl
fisubl
jns
xor
insl
shr
jae
mov
pop
mov
mov
dec
ret
out
push
mov
jmp
nop
outsl
scas
test
hlt
dec
and
push
sub
popa
sarb
enter
pop
repnz
pop
mov
arpl
jne
insl
pop
frndint
cmpsb
orb
dec
test
push
or
scas
in
or
add
sahf
fldenv
inc
mov
test
hlt
xlat
add
ret
les
xchg
mov
and
fimuls
addr16
fucomp
fidivl
lods
jnp
sub
fwait
in
or
in
imul
int
cld
fsubrs
lcall
cmc
push
movsb
or
mov
int
push
and
lock
or
adc
insl
sub
jmp
mov
cld
inc
dec
lcall
inc
pop
cmpsb
fsubrl
adc
ljmp
adc
neg
mov
div
or
pop
sahf
mov
xor
cmpsb
aas
xchg
jnp
out
inc
jb
jmp
add
gs
fwait
in
add
xchg
mov
pop
sbb
dec
popl
add
mull
hlt
arpl
mov
arpl
push
inc
fucomp
and
rorb
insl
adc
add
jg
orl
leave
icebp
mov
xor
leave
pop
and
fsts
sub
mov
aaa
enter
mov
lret
inc
mov
xchg
xor
mov
sub
mov
mov
sub
inc
imul
pushf
inc
rclb
mov
xrelease
xbegin
sub
jbe
jmp
xlat
stos
stc
ds
jne
adc
cwtl
sbb
enter
inc
xchg
iret
or
negl
mov
int3
xor
add
push
aam
stc
nop
pop
cmp
testb
mov
jg
movsl
testl
jle
cmp
xchg
push
and
jno
mov
ja
cs
pop
and
leave
lahf
pop
clc
inc
js
arpl
xchg
lret
loopne
dec
mov
jecxz
fmul
jbe
ror
dec
sahf
jl
imul
hlt
jae
cwtl
lods
xchg
push
inc
mov
pusha
and
or
jecxz
sub
rclb
iret
pop
and
and
aaa
or
dec
hlt
out
adc
enter
sahf
mov
out
int3
notl
jne,pn
push
or
shll
adc
addl
jge
jae
rep
and
cmp
test
xorb
mov
adcl
cmp
enter
mov
sbb
push
fistpll
lods
dec
js
repz
push
js
fbstp
mov
sub
or
cmp
push
dec
subb
mov
je
cmpsb
jns
enter
sarl
aas
leave
lcall
dec
not
test
sbb
sbb
and
push
call
scas
fldt
mov
cmp
xchg
xor
xor
cwtl
fs
mov
adc
subl
into
int3
sarl
test
std
jbe
sub
mov
int3
mov
mov
or
ret
push
xchg
pop
mov
fcoms
fs
aad
jmp
sbb
rolb
imul
mov
js
sbb
lcall
fst
mov
and
inc
mov
xchg
aam
sahf
xor
cmp
jo
outsb
imul
inc
jne
daa
jns
fnstenv
out
test
hlt
test
xchg
enter
cli
fwait
jg
xchg
or
adc
mov
dec
dec
and
dec
imul
mov
fwait
sbb
adc
loopne
shrl
sarb
xchg
jecxz
push
mov
sbb
je
sbb
sti
data16
out
jns
lods
mov
adc
shlb
fimuls
stos
mov
mov
movb
push
push
push
adc
cmp
sti
popf
outsb
add
fmul
sbb
test
xchg
pop
out
dec
jle
sub
mov
in
jecxz
and
pusha
adc
jb
sub
test
in
leave
lahf
cmp
bound
insb
pop
jmp
clc
and
ss
jmp
lret
inc
push
mov
movsb
notl
lods
fidivs
hlt
sub
test
inc
inc
add
cwtl
repnz
and
xchg
sarb
andb
jae
pmulhuw
xor
stos
fisubrl
sub
iret
loope
lods
sub
xchg
mov
push
mov
pop
js
lcall
mov
jmp
sub
mov
and
dec
out
sub
popa
lods
repnz
mov
in
fs
lahf
test
jo
es
push
stos
push
pop
mov
inc
iret
in
dec
push
push
pusha
push
xor
rorb
inc
push
sub
add
xchg
mov
aas
push
fldl
sub
jge
out
lahf
mov
and
rclb
loop
rorb
sub
insb
enter
js
inc
sar
jns
sub
in
and
arpl
mov
jo
insl
ljmp
pushf
add
in
xchg
and
test
mov
push
adc
or
out
sarl
and
push
mov
popf
cs
mov
leave
gs
fstpl
pushf
or
adc
sbb
add
test
aas
jne
sbb
adc
jp
insb
das
shr
pop
jo
jle
xor
dec
jmp
push
ljmp
inc
in
outsl
iret
add
test
stos
test
cmp
lds
push
pop
and
pushf
cltd
xor
cld
or
or
repnz
add
jge
inc
cmc
inc
and
cltd
or
jb
mov
cmp
icebp
add
popa
dec
pushf
push
adc
into
lods
fstpl
xchg
mov
daa
cmp
insb
add
or
cs
mov
push
ljmp
sub
pop
std
cmpsl
movsb
ret
jg
mov
outsb
out
sbb
mov
aam
scas
add
rol
mov
into
xchg
orl
mov
mov
jb
xchg
xor
sbb
in
imul
dec
push
lcall
xchg
pusha
mov
sub
xchg
jg
aam
or
loop
xchg
jmp
movsl
pop
rcll
cmp
xchg
and
add
cs
adc
and
pop
sbb
mov
test
push
mov
test
inc
pop
in
lahf
add
daa
test
inc
or
cmc
int3
insb
xchg
dec
scas
aaa
mov
js
sahf
rol
xchg
in
gs
fcmovne
imul
aad
out
sub
and
addr16
out
call
inc
je
mov
jl
add
test
xchg
repnz
enter
ss
dec
imul
push
push
out
mov
adc
jmp
outsb
into
nop
jg
xchg
scas
cmp
jge
mov
jecxz
sbb
insb
imul
mov
daa
xor
xor
pushl
push
hlt
pop
mov
add
lods
mov
sbb
cmp
cmp
into
sbb
dec
sbb
negb
cwtl
xchg
dec
push
mov
out
and
into
imul
and
loop
lret
mov
inc
scas
out
push
les
or
xor
fwait
lods
pop
xchg
aas
mov
inc
push
and
jmp
int
push
push
gs
stos
das
bound
push
aad
dec
adc
out
movsl
lahf
imul
push
jl
test
push
push
sbb
dec
jp
in
neg
ja
mov
fildll
mov
push
ret
pop
popf
xchg
inc
std
loope
stc
rcl
mov
fisubrl
rolb
insl
inc
in
ja
ret
mov
popf
mov
insl
adc
addr16
inc
cmp
cmp
lea
call
loopne
cmc
push
stos
aam
inc
cmp
xor
fwait
insl
lret
cs
loop
insb
rcrb
adc
mov
ret
cmp
sub
dec
jb
inc
imul
fdivs
clc
xorl
pop
rcrb
call
sub
aam
jecxz
imul
aam
fsts
int
xor
ja
cs
jbe
push
fcoml
pop
lret
pop
xchg
into
inc
sbb
adc
cmp
sub
and
cmc
icebp
push
push
jns
jge
jbe
fmuls
shrl
mov
mov
mov
and
lock
enter
ret
dec
jmp
dec
mov
decb
repz
nop
lods
cmp
jg
mov
out
arpl
jno
lods
rclb
out
lcall
and
jmp
mov
sbb
pop
add
mull
out
cmp
popa
cmp
inc
lahf
in
inc
stc
jns
mov
sub
icebp
fstps
adc
fnstenv
mov
rorl
jmp
dec
xchg
cltd
adc
ljmp
and
fwait
test
rcrl
gs
push
xor
out
and
cmpsl
fadds
test
mov
sbb
push
fidivrs
mov
in
out
into
clc
jnp
stc
xchg
add
xchg
insl
mov
in
in
jmp
es
cmp
sbb
loope
pop
sbb
jbe
cmpsl
test
fisttpl
adc
jns
insl
and
outsl
mov
mov
adc
int
add
dec
sarb
lahf
xor
or
in
add
insb
adcb
push
ret
mov
test
jle
mov
or
int3
in
in
lods
mov
sub
pop
mov
push
out
ret
popf
and
lea
sbb
xor
lods
je
push
sub
std
ss
sbb
div
mull
subl
mov
mov
xlat
and
or
xor
arpl
imull
stc
icebp
das
cmpl
jecxz
pop
adc
push
add
aad
fwait
decl
movsb
mov
loop
call
adc
pop
cmpsb
pop
mov
dec
bound
test
mov
or
and
hlt
arpl
or
hlt
cs
dec
push
popa
decb
adc
je
or
arpl
jb
aad
dec
cmpl
mov
ja
popa
jle
and
test
xchg
push
inc
push
es
add
insb
sub
aas
mov
xchg
hlt
jne
cmp
aaa
xchg
decb
jmp
lds
xchg
mov
rclb
add
adc
lods
outsb
xchg
in
cmc
cld
shl
pushf
mov
movsb
scas
fwait
sahf
mov
sbb
xchg
scas
pop
cld
scas
fstps
fisttps
cmp
rolb
push
push
mov
rolb
mov
mov
lea
add
pop
je
idivb
jmp
test
outsl
js
mov
in
add
test
out
cmpsb
hlt
add
jns
outsl
cmc
inc
and
or
mov
sbb
jle
popf
xchg
dec
loop
cmc
aam
orl
mov
getsec
sti
mov
mov
mov
mov
fldenv
shr
push
bound
sbb
sti
in
mov
and
or
cli
cmc
cmp
adcb
out
jns
fsubs
rorl
repnz
push
les
jge
in
jno
dec
aam
pushf
stos
test
cmp
xchg
pushf
fxch
mov
inc
movsl
rcrl
inc
out
cli
add
inc
out
enter
aas
mov
xchg
sub
lea
and
add
add
jp
shl
cmpl
mov
jbe
in
adc
xchg
jo
sbb
pop
xchg
bound
negb
jge
enter
xchg
push
jb,pn
mov
and
out
adc
pop
inc
inc
mov
mov
repnz
xchg
mov
enter
in
cmp
es
jg
pop
ds
push
jne
xchg
icebp
roll
test
cmpsb
loopne
or
mov
xchg
jno
and
stos
test
dec
mov
sub
mov
ret
and
inc
dec
icebp
dec
push
jmp
jne
lods
repz
jl
cmpl
icebp
sbb
in
mov
jecxz
icebp
jb
aas
out
lret
ficoms
mov
leave
jg
mov
sbb
cwtl
push
jecxz
scas
lods
cmp
mov
mov
stos
shlb
push
fistpll
ret
ret
cmp
xchg
cltd
dec
mov
sub
push
frstor
bound
mov
ss
stos
and
nop
xchg
xchg
fstpl
adc
ret
dec
dec
adc
enter
fldt
arpl
push
out
xchg
aas
jo
sub
cli
in
in
leave
cli
inc
cmp
adc
pop
sub
add
pop
arpl
aaa
mov
jg
outsl
ret
addl
mov
xchg
cmp
fidivrs
test
insl
pushf
je
jo
and
push
cmp
jg
cmp
fildll
lods
push
mov
addl
in
inc
dec
popf
lock
push
adc
and
mov
mov
pop
in
mov
push
loope
loopne
add
mov
xchg
sbb
sub
hlt
ret
mov
dec
mov
jbe
push
mov
xchg
pop
adc
pop
lahf
sub
mov
dec
inc
jmp
stc
out
jl
cmpl
inc
mov
mov
add
sub
mov
inc
sub
add
test
ficoml
xor
cli
xchg
mov
sub
cmc
aam
icebp
popf
lahf
loop
xor
dec
xor
jmp
and
xor
ret
ss
pop
dec
in
nop
fwait
pusha
in
rorb
rclb
mov
add
push
aad
add
mov
fwait
xor
dec
mov
test
sbb
mov
push
loop
data16
dec
cmc
push
notl
fnstcw
cmpsl
xchg
xor
xchg
mov
adc
loopne
sahf
jne
lods
adc
cmp
bound
xchg
sbb
xor
pop
adc
xchg
jns
imull
adc
xchg
push
pushf
xchg
inc
mov
ja
xchg
cmp
int
es
jno
jmp
ret
cmp
repnz
xchg
add
js
je
and
faddl
ljmp
add
imul
sub
push
imul
pop
enter
inc
cmc
arpl
jecxz
ss
mov
sub
xchg
dec
lcall
or
push
ja
sub
xchg
sub
mov
mov
vpavgb
sbb
test
sub
lcall
and
sbb
aad
xlat
cmpsl
mov
mov
push
scas
inc
popa
rcll
jecxz
pop
stos
jb
lea
sub
and
movsl
push
jg
pop
pop
add
jne
in
pop
pop
movsl
or
pop
push
in
cld
inc
gs
jg
pop
sbb
int
lock
adc
jns
and
jns
mov
jno
sbb
popf
stos
notb
rcrl
fcmove
cli
mov
imul
cmp
xchg
sub
sbb
jnp
pop
mov
xchg
pop
and
jb
add
sbb
mov
and
or
pop
inc
xorb
aam
loopne
adc
inc
push
pop
xor
mov
xchg
xor
push
mov
add
leave
pop
jecxz
sbb
popa
and
imul
repnz
mov
lahf
imul
sbb
or
lret
inc
mov
pop
fwait
mov
mov
arpl
pushf
add
cmpsl
jmp
push
pop
mov
aam
out
inc
arpl
and
aaa
pop
jnp
dec
push
dec
clc
mov
push
mov
shrb
sbb
mov
bound
ret
dec
pop
dec
std
mov
cmpb
inc
leave
inc
xor
xchg
rcll
aaa
xchg
stos
cmpb
aad
lods
test
pop
cmc
mov
outsb
push
adc
or
dec
pop
or
insl
xchg
in
jb
push
push
jp
mov
mov
push
loop
into
and
in
push
je
sub
incl
xor
push
or
xchg
fcmovu
lcall
jecxz
add
popa
push
in
sub
fdivrl
les
pop
or
sbb
jl
cmpb
aaa
cmovs
mov
insb
cmp
aam
mov
rcl
pop
bound
mov
ret
insb
ljmp
mov
add
jns
pop
and
jae
loopne
xchg
mov
cwtl
push
icebp
fldt
mov
lds
mov
ja
dec
js
xchg
mov
add
push
div
mov
fidivrs
mov
inc
sti
sti
in
push
sub
fisubrl
stos
sub
dec
cmpb
jns
es
mov
test
fdivrp
daa
dec
dec
sbb
setg
imulb
push
mov
popf
in
fildl
sub
push
inc
jge
sbb
push
xchg
pop
jecxz
mov
xor
in
xlat
jecxz
mov
not
add
out
mov
jno
lea
shl
push
clc
nop
and
dec
xorl
sbb
aad
inc
js
lock
jb
push
repz
inc
imul
cmp
popf
mov
into
xor
imul
lret
sub
fwait
cli
sub
popf
sub
sbb
jne
leave
jno
aad
sub
mov
popf
lcall
cs
dec
dec
mov
pop
sbb
xchg
mov
or
jmp
cltd
lods
cmpsb
shll
mov
and
dec
adc
dec
mov
fistpll
sub
add
rcr
pop
jbe
subb
ret
loopne
mov
add
jb
jg
in
dec
jmp
pop
xor
in
sbb
inc
lds
push
dec
enter
sub
inc
movsb
in
loop
cmp
adc
out
add
inc
jge
jo
jmp
aas
sti
or
mov
lret
mov
divb
nop
lock
sub
lds
push
or
push
stos
sbb
outsl
outsb
pusha
ret
aad
xlat
fldl
pop
leave
aas
dec
aas
xchg
mov
aaa
mov
mov
mov
lods
dec
scas
dec
sti
loope
fcmovb
pop
scas
cmpsl
sti
push
test
bnd
add
mov
dec
or
ret
sbb
jbe,pt
jecxz
add
orb
hlt
aas
or
mov
jmp
scas
popa
movsb
ficoms
bound
mov
xor
or
and
sar
xchg
lahf
sub
jmp
xchg
adc
add
mov
mulb
xor
jmp
or
into
into
sbb
les
lret
push
sbb
adc
rcr
jne
adc
jne
sbb
adc
jnp
ds
or
xchg
mov
in
mov
scas
add
sbb
mov
mov
ss
test
test
mov
insb
sub
push
sub
jnp
and
stos
ljmp
xchg
xchg
cli
dec
bound
inc
pop
mov
inc
xor
sbb
shll
lahf
aam
aaa
jmp
or
xor
cmpsl
aaa
cmpsb
push
jp
lds
or
arpl
rorl
and
xorb
outsl
adc
jmp
xchg
loop
sbb
lods
aam
adc
stc
cmp
ret
xchg
xor
mov
call
movsb
xor
cmp
dec
arpl
cmpsb
mov
fistl
xor
xchg
pop
lods
daa
sub
xor
ss
lods
mov
and
loop
or
mov
sbb
mov
fxch
mull
stos
xor
sub
int
cmpsl
loopne
mov
xchg
dec
insb
int
dec
adc
push
jns
lods
pop
or
into
sbb
pop
add
hlt
mov
adc
jp
mov
cwtl
scas
add
int
icebp
sarl
sahf
inc
push
push
out
repz
lods
inc
mov
shr
loope
cwtl
stos
jbe
sub
fdivl
mov
xchg
add
cmp
cmpsl
lods
sbb
jle
dec
lock
add
ljmp
mov
es
pop
dec
cmp
add
sub
nop
ds
incb
xorb
out
and
mov
jp
push
mov
lock
in
adc
mov
aam
in
jmp
ret
mov
inc
out
lea
repnz
adc
xor
outsb
test
add
jp
gs
ret
int3
inc
or
jmp
jp
jle
cld
sbb
adc
adc
xchg
cmp
pop
mov
sar
jecxz
push
push
ja
and
popa
jle
stc
pop
pop
mov
sub
ds
popf
xchg
icebp
into
inc
out
je
test
mov
cmpsb
adc
mov
into
cli
jae
imul
lcall
lret
push
xchg
sbb
jp
and
out
imulb
sahf
mov
cli
out
pop
pop
mov
mov
xchg
xor
xor
pushl
cbtw
or
leave
inc
jns
add
mov
jns
aam
sub
or
daa
pop
loopne
insl
cmp
icebp
cmp
jecxz
push
scas
jl
cmc
dec
ret
adc
add
faddl
or
fisubrl
push
pop
xor
dec
icebp
push
adc
aam
out
leave
or
jge
out
cltd
popf
xchg
push
insb
cmpsl
xor
and
lea
test
sarl
adc
or
xchg
fistps
sarl
dec
outsb
shl
fstps
cmp
sub
xchg
push
pushl
jmp
stos
out
outsl
push
add
out
lods
ret
inc
mov
out
js
mov
es
and
jp
cmp
aas
aaa
gs
add
push
and
dec
xchg
mov
xchg
cltd
lss
fdivrp
push
rclb
xor
faddp
mov
sti
mov
shr
addr16
sbb
out
pop
outsb
ret
dec
popf
xlat
lock
push
popa
push
psubq
add
push
inc
xchg
xlat
lret
scas
test
mov
mov
mov
test
push
push
sbb
dec
fwait
loopne
push
fwait
push
stos
into
push
pop
or
cmp
out
int3
in
imul
pop
and
stos
cmp
scas
cmovle
in
daa
movsl
and
or
negb
push
dec
dec
jnp
ret
cmpsb
mov
mov
and
jg
mov
movsb
jne
sbbl
push
add
pop
aam
idivb
fmull
sbb
inc
adc
scas
inc
mov
fnsetpm(287
inc
cli
andb
mov
mov
fdivrl
push
mov
mov
mov
cmp
pop
int3
add
hlt
mov
cmp
dec
cmp
jge
jmp
pushf
jae
cmp
pop
lds
cmp
out
dec
dec
loop
and
scas
push
loope
clc
stos
push
adc
out
pop
sbb
out
jnp,pt
fsts
rcr
jne
lret
test
ds
mov
dec
or
xor
push
xor
sub
inc
in
sti
mov
sti
jp
mov
movsl
dec
rolb
hlt
jae
mov
sub
out
xchg
sbb
sub
or
dec
fistl
fidivrs
push
test
das
outsl
shrb
add
inc
mov
ljmp
jg
mov
push
pop
jae,pt
adc
out
leave
mov
xor
loope
sub
fldt
ja
xor
mov
inc
les
lds
mov
hlt
add
pop
add
repnz
inc
test
test
int
xor
imul
aad
mov
sub
add
cmp
dec
pop
mov
lds
addr16
jge
iret
push
sub
shrb
add
mov
cmpsl
cmpsl
xor
rorl
jne
sbb
push
jbe
rorb
cmp
or
xlat
or
lock
decl
outsl
mov
mov
jg
stos
mov
push
dec
stc
cwtl
pusha
pop
enter
outsb
pusha
daa
sub
insb
popf
mov
ret
scas
push
fbld
sbb
xor
mov
push
inc
sbb
sub
ss
pop
dec
adc
and
add
ret
xchg
sub
fcomps
insl
xchg
js
push
in
jle
adc
add
push
and
adc
push
pop
pushf
fsts
rcrl
lret
imull
jp
loope
rcrl
and
add
fimuls
and
xor
adc
cmp
adc
test
jl
in
sub
fmull
jg
clc
dec
jmp
push
dec
jecxz
in
outsb
jo
lret
cmp
cmpsl
or
stc
xchg
inc
xchg
hlt
jle
jnp,pn
bound
dec
shlb
mov
inc
test
jmp
mov
xchg
cmp
push
in
inc
lods
outsl
andb
mov
jbe
dec
cmc
sti
ffree
push
adc
jmp
adc
clc
addr16
sbbb
xor
faddp
xchg
lods
jo
mov
jae
mov
jno
xchg
or
int3
in
addr16
inc
xor
repz
rorl
aad
mov
loope
mov
sbb
sub
orb
fmuls
sbb
xchg
imul
push
add
sub
incl
pop
adc
popa
sub
lret
inc
mov
lcall
data16
data16
call
stos
out
mov
mov
adc
jmp
jo
iret
jmp
pop
ds
xchg
ja
mov
mov
popa
rcrb
xchg
fs
divl
imulb
je
xchg
lock
mov
ljmp
mov
push
xorl
or
sbb
push
push
and
jns
je
mov
or
xchg
dec
pop
xchg
daa
scas
add
add
inc
xchg
mov
mov
xchg
and
mov
out
loopne
orl
push
inc
mov
cmpl
jnp
int3
lock
mov
movsb
xchg
mov
cwtl
and
and
pop
jo
or
int3
push
lea
je
xorl
test
adc
hlt
mov
out
ss
xchg
add
dec
loopne
stos
rcr
nop
xchg
xor
mov
add
xchg
add
es
clc
mov
inc
add
xchg
lahf
loopne
or
and
and
mov
shll
iret
dec
lods
testl
sub
mov
lret
stc
call
shrb
arpl
fsubrl
mov
aam
addb
jmp
dec
dec
jae
out
inc
pusha
sahf
sbb
enter
add
or
in
das
emms
sub
loop
outsb
mov
push
cmpsl
shlb
ret
test
lret
arpl
lds
out
mov
and
dec
xor
bnd
mulb
imul
cltd
rcrb
ficoms
inc
and
ja
push
add
jno
mov
je
mov
dec
sbb
mov
inc
jnp
sbb
dec
jg
imul
sub
les
mov
mov
inc
mov
xor
dec
int
mov
jg
cmp
mov
int3
jns
les
inc
arpl
scas
cmp
mov
xor
loopne
ja
push
and
icebp
push
test
sbb
adc
mov
insb
or
cmp
or
ss
mov
dec
cmp
lea
icebp
jle
xor
or
popa
test
mov
int3
cmpsl
cmp
push
mov
adc
cmc
lods
out
ret
nop
rol
push
loop
js
jns
adc
dec
cs
inc
xor
in
and
cmp
sub
dec
inc
xor
sub
repz
xor
mov
sbb
std
testl
imul
and
xchg
add
outsb
xchg
jge
inc
cld
repnz
xor
push
subl
int
int
das
je
and
jnp
insb
jo
inc
cli
adc
int
bound
push
stos
das
xchg
or
mov
inc
mov
mov
mov
mov
pop
fnstsw
loopne
jo
xorb
sbb
pop
and
xor
mov
je
xchg
mov
adc
push
push
xchg
jns
mov
add
mov
and
and
sbb
out
jne
and
pop
jno
out
jo
lret
fisubs
insl
cs
dec
pop
call
sub
pop
shl
es
ja
hlt
shrl
cld
test
jp
int3
xor
es
cmp
js
enter
dec
sub
mov
jmp
xchg
pop
inc
or
mov
imul
push
pop
loop
addl
mov
pop
inc
div
mov
add
adc
test
push
ret
lds
jecxz
movzbl
mov
inc
add
xchg
stos
int
xor
imul
sbb
and
add
or
je
mov
mul
test
mov
idivb
mov
inc
sbb
sub
add
mov
sub
adc
push
scas
dec
inc
adc
jecxz
xchg
push
jg
aas
or
xchg
sbb
lret
adc
dec
int3
aam
stos
je
push
dec
pop
push
leave
int3
mov
sti
sbb
cld
jo
arpl
or
jecxz
iret
jecxz
mov
ja
fistpl
cmp
sbb
xor
or
cmp
sbb
mov
xchg
and
mov
mov
and
cmp
js
xchg
dec
fcmovnb
mov
adc
xor
xor
pop
mov
lret
dec
ss
jb
jl
push
jno
and
fstpt
insb
in
inc
lret
arpl
jge
repz
lcall
xchg
jmp
pop
sahf
cld
out
sub
push
cmc
adc
pop
cmp
fbld
cli
addr16
mov
lods
add
add
add
sbb
or
lods
add
adc
int
mov
inc
js
pushf
repz
inc
push
add
and
jp
dec
movsb
fadds
xor
inc
aam
add
push
sbb
gs
xchg
fstl
mov
sub
jge
ja
xor
xor
pop
stos
add
rcr
mov
and
sti
data16
les
cmp
popf
outsb
fsubrs
clc
loop
in
lea
jno
sbb
adc
mov
inc
icebp
sub
ret
sub
xchg
outsb
mov
inc
sbb
xchg
dec
rcll
ja
push
call
mov
push
inc
daa
xor
mov
mov
lahf
nop
sar
inc
push
ljmp
mov
jle
push
out
popa
mov
test
cld
rep
cld
das
mov
xor
dec
mov
subb
push
dec
call
pusha
jp
fcompl
arpl
out
inc
push
jp
sub
aas
inc
pop
ret
out
adc
int3
iret
je
ret
xor
rcll
repz
mov
and
adc
jecxz
mov
sub
out
das
ss
aad
dec
subl
jne
loopne
or
jno
outsb
les
jo
sbb
cli
lcall
push
mov
pusha
int3
ljmp
in
hlt
scas
mov
fmulp
cmove
mov
jns
stos
push
mov
sub
clc
mov
mov
and
in
stc
jo
mov
mov
rorl
pop
jl
dec
mov
movsb
ljmp
cmpsl
push
ljmp
movsb
add
icebp
xchg
lods
pop
add
mov
test
cmp
rorb
xlat
rcrl
in
outsb
sub
xchg
push
mov
mov
push
fldenv
xor
std
lds
fwait
jns
jno
stos
mov
pop
movsl
jl
add
fs
cmp
inc
pop
cmp
out
push
call
loop
loop
inc
sub
adc
mov
dec
sbb
dec
ljmp
or
subl
sub
mov
mov
cmp
xchg
lret
outsl
aaa
jl
cmp
shlb
jge
js
sbb
scas
xor
dec
mov
jo
imul
sub
jb
xchg
in
outsb
repz
xchg
repz
je
dec
xlat
dec
lahf
and
daa
hlt
es
jle
lret
xchg
and
jbe
fcomi
mov
lret
xchg
inc
pop
bound
sub
pop
push
add
js
jb
out
aaa
pop
add
ja
jp
mov
movsb
push
or
push
mov
jge
xor
ds
push
cmp
xor
call
gs
xchg
adc
ficomps
lahf
pop
js
cmp
cmp
push
mov
cmp
inc
dec
test
idivl
and
push
fsubrl
sub
addr16
cltd
aas
data16
sub
out
adc
loop
mov
and
cmp
dec
jle
dec
push
adc
pushf
ljmp
inc
push
push
add
aas
mov
or
dec
stos
fstps
push
test
inc
jnp
mul
jns
xchg
or
aas
jno
inc
jle
jle
or
cmpsb
mov
loopne
es
rcl
mov
sbb
test
scas
pop
fwait
scas
xchg
inc
push
in
add
iret
jno
into
sbb
sub
test
cmc
xchg
add
or
ljmp
mov
and
gs
mov
jae
je
pusha
pop
mov
jmp
aaa
out
sub
sarb
jbe
aam
push
jno
push
mul
fnsave
mov
mov
loop
pop
fistps
lret
inc
mov
cmpsl
in
and
in
imul
mov
fadds
loopne
mov
movsb
cmp
nop
xchg
and
bound
mov
sub
jbe
andl
shlb
pop
int
mov
jge
inc
jae
gs
in
into
call
push
dec
das
mov
adc
inc
mov
and
ds
cmpsb
inc
xchg
fcompl
into
imul
push
leave
mov
push
pop
and
in
mov
sbb
outsb
and
or
fwait
movb
fwait
lahf
sti
cmpsl
mov
rorb
sub
add
pop
popa
jbe
inc
mov
stos
filds
xchg
mov
popf
in
mov
push
rcll
sbb
dec
rorl
jl
and
in
mov
scas
sbb
sarb
cli
dec
nop
loope
cmp
clc
jb
bound
mov
jne
in
inc
jg
mov
mov
add
mov
mov
out
orl
mov
pop
scas
lds
movsl
sbb
xchg
inc
jecxz
ret
sbb
sbbl
xor
push
and
dec
neg
popf
adcl
incl
or
xchg
or
or
out
in
inc
and
dec
adc
mov
mov
push
repnz
adc
xchg
and
scas
add
loopne
mov
jg
pop
iret
inc
test
mov
ficomps
iret
push
gs
jae
ret
icebp
xchg
pop
leave
test
popf
clc
mov
in
sub
cmp
push
rcr
jbe
scas
mov
movsl
sahf
popf
xlat
hlt
pop
stc
les
cmp
in
push
stos
xchg
sahf
cmp
leave
mov
std
jmp
mov
xorl
cmp
dec
mov
lahf
mov
push
sub
push
mov
leave
jnp
nop
sub
ljmp
mov
and
mov
pop
sti
rolb
fists
insb
mov
and
scas
sbb
testl
dec
shrb
add
call
push
cmovg
ret
pop
aas
aas
or
mov
icebp
sub
clc
enter
mov
lcall
dec
sub
inc
xchg
aaa
dec
mov
hlt
fs
jb
out
int3
push
mov
out
imul
les
fisubs
jmp
in
push
fisubl
push
adc
add
xor
and
push
es
sbb
inc
popa
lret
inc
repz
rol
or
stos
int3
xchg
lods
ds
imul
into
popf
inc
cmpsb
push
adc
xor
dec
sar
mov
adc
lret
push
xchg
out
sahf
xchg
mov
add
adc
cmp
adc
std
xchg
add
pop
lds
out
inc
push
icebp
lock
je,pn
sti
pop
fs
add
or
ja
je
push
xor
movsl
fmuls
fistl
lods
pop
nop
shrl
jb
cmp
cmc
adc
sub
mov
and
flds
mov
dec
and
or
or
sbb
cmp
insl
lods
mov
es
xchg
lods
inc
test
and
mov
fwait
inc
dec
std
jge
xor
mov
sbb
pop
cli
aas
in
in
nop
sbb
je
add
insl
stos
or
xor
mov
aad
jns
jmp
add
ljmp
mov
mov
mov
and
mov
pop
aas
seto
add
aaa
jle
sahf
insl
stos
jle
mov
cmc
adc
xchg
pushf
cwtl
loop
mov
js
sub
out
mov
and
pop
sbb
shr
jle
rcrl
cwtl
xor
popa
push
aad
cmp
add
pop
pop
mov
pushf
add
mull
stos
mov
sub
test
and
aad
xchg
xchg
pop
mov
loop
inc
xchg
mov
xadd
stos
cmp
add
out
mov
shl
jg
jle
adc
lds
shr
or
lock
xor
mov
pop
dec
lahf
inc
jae
mov
lods
xchg
mov
mov
sub
enter
cmpsb
pop
and
repnz
clc
push
cmp
adc
mov
dec
fsts
mov
dec
daa
cltd
lods
xchg
dec
add
dec
xor
push
in
test
mov
xor
xor
pop
sahf
arpl
and
and
shl
push
mov
adc
mov
sbb
ret
outsl
leave
clc
dec
call
xchg
lret
fdivrl
imul
mov
and
jb
cmp
shlb
into
mov
insl
lods
pop
mov
or
test
inc
mov
enter
addl
test
fwait
add
pushf
jae
mov
add
ret
mov
cmp
mov
mov
fmulp
push
inc
fsubl
lock
inc
inc
aas
into
xchg
dec
lret
mov
aaa
xor
cmpsl
and
call
test
out
in
xchg
stos
xor
lret
fdivl
insl
adc
push
mov
dec
inc
rcrb
sahf
add
adc
sbb
cmpsb
xchg
stos
mov
sub
cld
xorl
pop
push
popf
inc
cmp
mov
pop
ss
ficompl
pop
cmp
sbb
cmpsb
and
add
mov
loopne
lock
clc
test
mov
xchg
in
jb
pusha
sahf
into
dec
jg
mov
and
imul
push
and
mov
pop
push
call
jecxz
sub
outsb
mov
dec
repnz
sub
fdivl
and
jmp
mov
mov
xor
icebp
popf
insl
shrb
repnz
fidivrl
push
pop
mov
cld
fidivrs
xchg
lahf
jno
adc
sti
imul
cs
cmc
outsl
nop
stos
out
pop
aam
jl
fiaddl
inc
pop
ds
dec
scas
sbb
aas
pop
leave
fildll
cmp
push
cmp
push
xchg
outsl
aam
aaa
xorl
popf
jno
xchg
pop
rorb
jmp
stos
out
and
mov
lret
pop
push
pop
psubsb
add
cmp
push
mov
in
imul
stos
fbstp
lods
push
and
mov
jle
jbe
add
test
push
pop
out
enter
add
movsb
pop
das
push
push
inc
into
pop
adc
stos
sbb
xchg
cmp
cwtl
fsincos
sbb
cmp
outsl
movsb
aaa
insb
stos
ds
lcall
pop
jg
add
rorl
pop
es
into
test
xor
into
sub
ss
push
test
mov
jae
std
xchg
ss
dec
roll
push
mov
testb
ss
lea
inc
add
jl
imul
std
cmpsl
xchg
out
hlt
mov
dec
outsl
andb
popw
bound
scas
hlt
pusha
test
lea
out
jb
jg
stos
and
inc
roll
sub
mov
mov
mov
js
out
stos
lret
jns
fldt
push
jbe
pop
mov
push
or
pop
fldenv
subb
or
repz
xchg
xchg
xchg
jmp
xor
or
pop
lahf
gs
stos
inc
clc
fisttpl
scas
shll
and
in
sahf
cmpsb
xor
xchg
xchg
out
cmp
out
push
dec
pop
testl
int3
sbbb
dec
mov
xchg
push
mov
sbb
jmp
jns
fsubp
sti
lock
inc
jae
aas
bound
data16
or
pop
inc
push
nop
cmp
cwtl
mov
loop
and
xor
push
sbb
aad
ret
push
repnz
sub
aaa
and
popa
test
outsb
or
mov
stos
in
stos
jp
orb
mov
sub
cmp
pushf
int
mov
leave
out
jns
orl
mov
xlat
mov
lock
mov
je
add
and
adc
pop
push
push
bound
sahf
popa
fcompl
fs
xor
std
pop
mov
pop
mov
push
std
mov
jmp
mov
iret
sub
popa
aad
xchg
jae
mov
cmc
repnz
fdivrl
cmp
adc
shl
imul
inc
push
jecxz
cld
cmp
pop
add
mov
stos
mov
or
out
adc
fisttpll
lret
adc
mov
pop
imul
pop
sub
xchg
mov
sar
in
mov
sub
dec
jno
adc
fldt
js
jmp
mov
imul
xchg
shll
sbb
push
sub
int
cwtl
imul
jns
xchg
fsub
js
pop
jns
aam
push
not
iret
sahf
cmp
ret
in
adc
out
testb
and
loope
daa
jne
sbb
cmp
lret
ret
js
xlat
fisubs
push
jb
test
push
int3
mov
nop
fs
hlt
inc
in
mov
mov
xchg
fldenv
scas
scas
or
inc
cmp
add
mov
mov
mov
and
imulb
xchg
mov
adc
push
push
adc
jae
lock
or
fucomi
lea
add
jbe
pop
imul
push
fistpl
jb
and
jnp
and
inc
ja
add
pop
sarb
mov
xor
or
dec
iret
xor
pop
mov
adcl
aas
adc
fisubl
icebp
cmc
push
pop
clc
fiaddl
xchg
jo
mov
or
andl
fimull
shrb
out
push
push
and
dec
gs
in
cmpsl
cld
mov
icebp
aaa
jp
xor
mov
aaa
mov
jbe
les
inc
daa
dec
mov
push
cmc
lds
and
dec
lcall
lods
fimuls
out
popa
int3
adc
push
mov
xchg
pop
sub
pop
repnz
faddl
outsb
cmc
add
fidivrs
inc
call
lds
dec
sbb
pop
test
into
imul
jp
jo
push
sub
lahf
popf
pusha
imul
shrb
mov
js
lds
jno
mov
popa
sbb
or
push
fsts
adc
test
cmpsb
int3
andb
jecxz
or
lock
in
xchg
or
mulb
xor
loop
mov
loope
sub
bnd
cwtl
cwtl
inc
imul
test
add
pop
push
aaa
lds
mov
adc
clts
dec
mov
out
lret
mov
in
out
lea
invlpg
pushw
es
std
dec
push
and
sbb
add
mov
or
movsl
push
jno
int3
ret
jae
lods
nop
push
lods
int3
aaa
div
cmp
sbbl
test
fcmovnu
int
clc
int3
in
mov
lahf
mov
or
loop
ljmp
mov
jno
incl
fisttpl
pusha
je
push
ljmp
stos
ljmp
inc
jns
push
out
jae
mov
dec
mov
pop
inc
sub
xor
mov
clc
fcmovne
push
hlt
mov
jno
int3
mov
push
rcl
dec
xchg
mov
xchg
jo
cmc
and
dec
jno
or
xchg
pop
dec
mov
scas
inc
push
xor
int3
mulb
dec
xor
and
adc
xchg
add
gs
mov
pop
fbstp
adc
mov
sub
xchg
xchg
mov
push
and
out
cmp
xchg
xchg
add
push
xchg
sbb
sbb
je
mov
sbb
shll
rorl
pop
push
jge
cmpb
mov
pushf
pop
cmp
enter
jl
lods
repnz
incl
ret
je
shrl
sbb
subb
mov
mov
outsb
pop
scas
mov
push
das
daa
std
lods
mov
xchg
inc
or
push
loop
shlb
shrb
jno
scas
divl
fdivrl
xor
sub
out
mov
mov
fidivrs
fistpll
inc
and
or
cmp
push
and
mov
loope
cs
lock
fists
pop
and
inc
sahf
mov
insl
shll
jecxz
push
ja
jecxz
pop
pop
or
mov
lods
cltd
dec
or
adc
rcr
dec
cltd
cmc
test
gs
mov
and
cmp
and
ljmp
subb
into
sti
adc
jne
adc
orb
out
aaa
mul
nop
shll
xorb
test
cmpl
inc
fadds
out
pop
test
cmpsb
roll
sahf
decl
addl
shll
test
imul
jmp
rorl
cmp
add
and
xor
xchg
add
mov
jne
mov
les
jmp
cwtl
sbb
mov
loop
loope
sub
pop
jl
into
sub
cmpsl
fdivrs
inc
pop
arpl
popl
xor
and
sub
orl
rclb
xorb
adc
xchg
and
dec
adc
fdivl
gs
adc
mov
stos
jmp
das
aas
ja
aam
dec
xor
nop
sbb
xor
movsb
add
test
mov
sub
push
mov
or
mov
in
xor
jne
xchg
cvtdq2ps
fcoml
pop
cmp
fdivs
std
mov
test
xor
mov
inc
je
jno
scas
pop
jecxz
out
adc
dec
push
in
lds
inc
xchg
or
or
adc
fiaddl
stc
push
dec
faddp
bnd
dec
push
aam
aam
mov
insb
dec
enter
jg
daa
addr16
in
enter
cmpsl
mov
adc
push
idivl
mov
lret
and
inc
cmp
aaa
int3
cmpsl
push
mov
mov
inc
or
pop
shll
jp
sub
sub
inc
dec
into
mov
xchg
cmc
adc
mov
and
call
jl
xor
jp
rcr
lock
nop
cmp
pop
mov
subl
stc
rcl
add
xchg
les
or
push
es
mov
xchg
inc
fnstcw
xchg
popf
cli
push
mov
aad
mov
rcr
xchg
dec
cmc
les
fs
cmp
pop
imul
xchg
push
xlat
mov
loopne
xchg
or
mov
dec
pop
sbb
das
sbb
stos
xor
imul
cmp
sub
addb
mov
sub
out
stos
mov
out
icebp
mov
inc
in
incb
mov
push
pusha
xchg
insl
xchg
push
aaa
hlt
cmp
int
call
outsb
jge
adc
ror
aas
leave
cmpsl
pop
jno
jno
and
aas
inc
fmul
test
sbb
mov
dec
stos
enter
inc
xchg
inc
adc
inc
js
pusha
pop
inc
push
ds
mov
mov
hlt
call
or
adc
lea
or
sbb
dec
dec
push
rcll
mov
jp
pop
out
fidivl
add
jg
cs
add
ss
and
inc
insb
sbbl
out
stc
mov
adc
cwtl
jmp
mov
aam
lods
push
and
addl
xchg
fcoml
pop
cmp
stc
xchg
pop
inc
add
push
mov
jp
adc
pop
int
jge
fdivrp
or
leave
fistpll
dec
add
jno
sbb
int3
test
arpl
push
test
add
inc
pushf
mov
dec
mov
xchg
mov
aas
cmp
out
movsb
mov
jbe
out
call
sarl
fistl
pop
arpl
frstor
add
jb
testb
les
js
xchg
test
imul
in
cli
mov
sub
fistps
inc
sbb
fnstcw
daa
cltd
aaa
push
outsb
test
sub
sub
cmc
clc
scas
pushf
je
imul
jne
pop
jmp
std
sarl
push
mov
je
add
pop
sbbb
adc
aaa
aad
jo
dec
and
push
jge
cmp
push
jbe
xchg
pop
fwait
mov
mov
aas
aaa
xor
and
sarb
std
sub
imul
cmc
repz
arpl
jae
inc
out
xor
popf
clc
push
sub
jge
dec
adc
sub
lret
pop
insl
jp
dec
aam
stos
cmp
rclb
adc
jo
lret
xchg
cmpb
daa
xchg
add
push
pop
test
pop
shl
jl
pop
push
rcrb
mov
cmc
stos
pop
call
adc
dec
test
pop
ficoms
fdivr
mov
fbstp
mov
mov
add
mov
test
inc
push
in
ret
scas
dec
mov
enter
jge
lcall
out
inc
imul
aad
mov
test
inc
adc
xor
jle
add
jno
fisttpl
hlt
jp
or
fsubs
jne
pop
mov
mov
out
mov
popa
inc
mov
jnp
cmpsb
mov
push
sbb
cmp
pop
xor
les
rolb
xchg
cld
or
mov
int
and
insl
fnstcw
es
dec
mov
or
ljmp
xchg
push
sbb
repz
enter
movsl
mov
fwait
cwtl
cmc
movsl
inc
js
pop
cli
pop
add
sub
jne
or
push
rcll
or
out
cs
out
add
imul
cltd
mov
xchg
outsl
rcll
cmp
in
mov
aas
in
das
fbld
xorb
xor
ret
add
idivl
fs
addr16
xlat
sbb
adc
test
jnp
jno
scas
xor
sub
dec
sub
lods
push
movsl
adc
pop
mov
push
xchg
sub
popf
jne
jb
pop
cmc
or
lret
add
pop
out
or
stos
orb
jno
mov
and
push
or
loop
sarb
inc
into
fdivrl
aam
pop
jge
mov
int3
cli
lret
bound
prefetcht0
cmp
xchg
enter
loope
cmp
aad
loope
aam
aam
sbb
insb
insl
or
sahf
stos
icebp
test
in
cmp
mov
inc
shrl
pop
addr16
rcrb
in
push
or
or
test
fimull
test
adc
orb
arpl
fbstp
fiadds
mov
add
jecxz
movsl
rep
sbb
xor
and
push
inc
sarb
xor
inc
pop
dec
popf
xchg
fcom
ja
jle
inc
or
inc
push
lret
pop
enter
dec
jb
cmpsl
mov
adc
add
out
aaa
mov
or
xchg
jae
dec
push
mov
movb
scas
dec
adc
add
adc
mov
mov
out
mov
pop
pop
shrl
mov
dec
cld
sarl
mov
and
std
jbe
jmp
jecxz
jbe
pop
mov
out
adc
sar
mov
jae
fs
rolb
stc
mov
mov
addr16
dec
stos
jl
cmp
das
push
fbstp
sbb
push
or
add
xor
enter
jmp
in
int3
data16
and
lods
push
dec
loopne
dec
insb
les
pusha
or
dec
in
imul
popf
mov
cwtl
mov
or
mov
repz
jmp
gs
gs
testl
xchg
jmp
test
xchg
out
dec
mov
fs
call
out
stos
insl
pop
fisubl
or
insb
and
std
filds
push
out
aaa
and
and
push
mov
push
cmp
mov
pop
loope
fldt
mov
xchg
les
xchg
popa
mov
ljmp
mov
pop
xlat
iret
leave
mov
mov
outsl
push
push
inc
pop
mov
and
test
mov
xchg
fimull
lcall
cmpsl
adc
mov
fsubs
jg
enter
paddb
inc
scas
roll
pop
out
mov
pusha
lcall
dec
dec
xchg
mov
pop
in
xchg
mov
outsl
int3
popa
jae
jo
fstpl
ficoml
pushf
dec
dec
xchg
call
ljmp
jnp
sbb
cmpsl
jo
mov
xor
mov
and
scas
clc
pop
push
or
push
test
cltd
inc
clc
and
pop
clc
jnp
mov
pop
out
subb
cltd
dec
mov
xlat
jae
iret
mov
push
adc
rolb
add
push
gs
cmc
mov
andb
sub
enter
jp
pop
stos
and
jge
sbb
js
jo
jns
jmp
mov
mov
dec
lock
sti
call
cmpsl
ret
mov
cmp
xchg
push
cmp
xchg
xchg
orb
xchg
into
pop
mov
jle
and
movsb
test
rcl
popa
cs
mov
push
jns
cwtl
orl
pop
aam
lods
gs
pop
insb
pop
xchg
out
pop
or
nop
jno
cmp
aas
loopnew
and
push
jns
pop
ds
ret
xor
push
add
in
movsb
mov
fdivs
cld
jne
cmp
mov
mov
and
xchg
pop
insl
dec
int3
outsl
imul
sub
pop
jno
xor
nop
or
pop
dec
sbb
mov
push
movsb
sbb
jl
inc
repz
pop
hlt
fnsave
mov
push
rcl
jb
insb
sub
inc
rorl
lea
popa
jno
dec
jno
inc
xor
ljmp
mov
jno
mov
cmp
pop
mov
mov
lret
mov
shll
arpl
mov
pop
cmp
je
xlat
cld
in
sub
enter
push
into
sbb
int3
mov
dec
mov
xchg
je
iret
pop
mov
mov
insl
fimuls
xchg
outsl
cmp
push
mov
sbb
pop
inc
inc
scas
jnp
ja
lret
test
pop
inc
sbb
imul
test
adc
cmp
cmp
or
in
adc
cld
popf
mov
cmp
loop
ljmp
adc
add
dec
cmp
sub
push
lret
xor
lcall
mov
mov
test
jnp
daa
xor
out
lds
inc
jg
sbb
outsb
mov
inc
loope
fstl
inc
and
enter
addr16
test
lea
or
stc
lret
push
sub
pushf
sub
lret
outsb
mov
mov
scas
jmp
xlat
outsb
aad
popa
or
and
stc
pusha
pop
xor
sarl
mov
cmp
push
xchg
fstps
mov
add
xor
out
pop
jbe
inc
cmp
or
xorl
sub
cmpsl
pop
mov
scas
and
and
cmpsl
lock
mov
jle
push
dec
push
add
push
stc
cmc
inc
jle
sub
gs
mov
inc
or
into
or
dec
hlt
sub
cmp
movsb
and
lods
lea
stos
jg
xor
fbld
dec
fidivl
jl
xchg
sbb
xchg
jl
in
mov
iret
test
or
push
cmc
outsb
dec
pop
pushf
aas
dec
fstps
add
xchg
xorb
mov
adc
scas
in
mov
popa
or
push
adcl
mov
adc
sub
push
sbb
jns,pt
mov
xchg
js
cmp
stos
movsb
or
icebp
sub
adc
in
xchg
das
push
into
fstp
add
std
push
adc
mov
mov
lods
xor
inc
in
dec
xor
imul
push
mov
and
scas
mov
inc
sub
add
push
pop
mov
rorb
fcoms
jecxz
ljmp
cmp
sbb
cmpxchg
inc
push
cmp
in
sub
shrl
aaa
hlt
into
cmp
push
dec
loop
cmpl
jno
or
jbe
mov
ret
test
mov
mov
mov
nop
mov
inc
lods
sub
and
lea
subb
xabort
adc
mov
sub
pop
pop
pop
jg
xchg
add
sub
sub
inc
jbe
push
dec
int
or
arpl
or
das
pop
hlt
add
daa
mov
std
fdivrs
in
sub
push
or
mov
and
jo
adc
jno
pop
stos
fcompl
mov
rorb
loope
or
lahf
mov
jae
scas
repnz
jnp
jb
aad
cmp
aas
aad
jns
jp
das
pop
mov
mov
or
fstpl
test
xchg
add
hlt
orl
aam
xchg
jg
popa
cltd
cltd
es
mov
sbb
inc
inc
sbb
inc
jne
shll
xor
sub
xchg
stos
arpl
stos
std
aaa
jnp
js
cmp
stos
mov
orb
movsb
divb
iret
mov
out
loop
sub
nop
leave
mov
in
add
ret
lock
xor
jmp
ljmp
xchg
cmp
aaa
jp
mov
jp
push
mov
data16
gs
jmp
push
jmp
xor
cmpsb
es
push
add
cmp
push
iret
push
rorb
mov
outsl
push
push
repz
lods
pop
mov
jne
add
clc
sarb
mov
imul
gs
fs
inc
lods
adc
mov
push
mov
imul
data16
lcall
mov
aas
jb
in
jno
out
pop
xchg
dec
sahf
decb
cwtl
fwait
lock
mov
xchg
and
lcall
aaa
sub
lahf
sahf
jbe
inc
or
rcrl
mov
pop
mov
jnp
mov
xor
cmpsl
push
sbb
push
jl
addr16
in
cmp
mov
inc
pop
stos
stc
xlat
mul
mov
mov
loopne,pt
sub
and
push
xorl
mov
rcll
and
xchg
fimuls
lret
scas
test
scas
mov
ficomps
add
add
cmpsb
sti
dec
test
ret
xchg
jg
icebp
xchg
fmuls
aad
sub
mov
jg
xor
mov
out
jmp
mov
mov
in
or
dec
addr16
das
imul
lock
test
inc
scas
add
mov
jnp
lret
loope
add
rcrb
loope
daa
cmp
and
dec
mulb
mov
push
inc
pop
sbb
dec
mov
in
lea
lcall
mov
rcrl
push
out
add
cmc
sbb
and
pop
int
adc
fs
add
test
movsb
movsb
aam
popa
fbstp
test
fs
push
fwait
jl
add
cwtl
paddb
inc
pusha
or
push
bound
mov
dec
push
push
daa
idivl
sahf
dec
push
dec
or
or
mov
xchg
out
stos
aam
nop
sbb
insl
pop
movsl
xchg
add
xchg
sbb
shl
and
je
xchg
mov
aaa
fwait
imul
scas
mov
pop
jne
mov
clc
pop
sub
pop
negl
xchg
daa
jne
ret
and
in
inc
and
sbbl
repnz
sbb
mov
lods
inc
jg
dec
push
push
dec
sub
xchg
inc
mov
insb
popa
fidivl
aas
lods
sahf
lea
les
jmp
mov
push
dec
and
insl
out
mov
aaa
mov
sub
ret
cltd
fisubrs
push
mov
push
int
mov
mov
add
jae
xlat
xchg
sub
push
sbb
add
dec
jne
inc
jo
jae
in
clc
jecxz
jno
sub
sbb
stos
pop
xchg
insb
pop
jecxz
adc
push
leave
lret
or
dec
bound
xor
shll
shl
dec
mov
es
add
xor
push
cld
mov
mov
mov
sbb
jle
cmpsl
pop
push
jge
mulb
fisubs
clc
ss
hlt
ss
sahf
mov
movsb
test
scas
test
and
fsubrs
cmp
xor
inc
push
dec
rolb
xchg
sbb
lock
dec
jge
fdivl
scas
mov
or
push
loopne
std
and
cld
insl
mov
push
out
imul
aas
jne
push
mov
mov
mov
mov
rorb
shr
les
mov
mov
ss
test
mov
push
stos
dec
ret
out
or
ja
mov
lods
mov
xor
sbb
pop
sbb
je
adc
push
leave
data16
enter
and
fnstsw
daa
popa
jmp
mov
js
stc
dec
or
jg
ficompl
shll
popf
adc
jl
rcr
fdivr
push
sub
dec
nop
aaa
or
fsub
imul
cmp
sbb
dec
push
shrl
and
mov
inc
jo
adc
out
aam
lods
sahf
adc
lods
je
pop
pop
jno
data16
dec
xchg
push
add
insl
rolb
popa
cltd
insl
adc
sbb
jmp
inc
xchg
push
cmp
lret
mov
pushw
stos
sti
sbb
jne
xor
in
dec
dec
mov
mov
jns
mov
icebp
jae
jp
neg
ret
out
cmp
and
push
divl
xchg
add
add
fists
rcr
fs
push
add
sub
add
lea
push
lods
xchg
ret
mov
sbb
mov
fistl
jmp
push
enter
push
xlat
les
pop
popf
mov
inc
mov
push
in
xor
push
mov
pop
gs
cli
fldcw
or
sub
jbe
cmp
cwtl
scas
sub
dec
nop
or
cwtl
ljmp
sbb
push
test
pop
into
or
inc
mov
arpl
xchg
xchg
adc
or
ja
push
push
mov
lock
test
fidivrs
xchg
out
cs
fcoms
push
insb
add
fmulp
xor
add
rclb
scas
push
aad
mov
enter
int
adc
pop
imul
cmpsb
push
imul
enter
enter
das
add
fisubs
jbe
fcoms
jge
leave
hlt
outsb
push
add
into
mull
outsl
sub
mov
sbb
cmc
mov
insb
call
loop
jecxz
sub
decl
push
fwait
loop
push
add
repz
jmp
ret
dec
add
inc
data16
out
or
sub
addr16
pop
hlt
jg
out
sbb
cmp
and
and
xchg
mov
push
vpshlq
add
mov
shll
inc
cs
push
cli
lahf
iret
xlat
jae
int
or
shr
repz
mov
daa
fs
dec
dec
mov
mov
fwait
xor
ret
fistpl
icebp
leave
push
mov
movsb
sub
loopne
mov
lcall
in
outsl
into
mov
fs
add
fiadds
cmp
into
cltd
int
jb
in
pop
repz
test
sahf
or
mov
out
and
rcrl
loope
dec
ds
sbb
jno
lods
xor
jl
push
sub
xchg
pop
push
pushf
pop
jge
xacquire
dec
push
in
outsl
jns
push
mov
ret
dec
fsubrs
jle
and
adc
mov
push
mov
les
sti
mov
inc
add
pushf
and
add
jae
dec
xor
cmp
popf
push
adc
mov
cmp
js
xchg
lahf
mov
out
mov
cmp
pop
clc
push
scas
mov
pop
sub
and
sbb
das
in
movsb
xor
ficoms
mov
adc
aad
cmp
sbb
jo
push
cs
pop
xchg
mov
insb
leave
mov
js
fucomp
inc
clc
jne
enter
jb
mov
imul
add
outsl
jno
push
sbb
mov
incl
shll
mov
icebp
jne
jne
getsec
inc
adc
cmpsb
dec
adc
in
jb
inc
aaa
cmp
lock
test
fsubr
xchg
mov
inc
enter
dec
data16
xchg
jecxz
xor
sub
dec
push
pop
xor
pop
mov
test
mov
out
jns
test
mov
cmpsl
or
pop
cmp
sbb
test
or
jns
pop
xchg
nop
aam
mov
andl
movsl
pop
xchg
mov
mov
inc
pushf
outsl
in
outsl
add
mov
or
dec
or
push
stos
out
push
push
mov
mov
cmp
xor
xchg
adc
add
movsl
mov
loopne
cmp
add
sbb
and
or
mov
es
sbb
iret
or
sub
add
mov
cmp
mov
cmpsl
test
or
and
lea
in
inc
push
jne,pn
pop
xor
sub
jb
stc
inc
fsubr
fisttpl
divb
mov
mov
xchg
stos
lock
imul
stos
mov
ret
clc
into
das
daa
ds
mov
mov
cmc
test
fdivl
xor
jb
rcl
icebp
insb
mov
fs
rcrl
cmp
push
dec
push
nop
xor
test
push
mov
push
in
lahf
es
push
adc
ret
icebp
cmp
scas
inc
or
xor
jae
loope
xchg
mov
inc
dec
in
in
sbb
into
test
int
dec
mov
jb
pop
push
iret
insb
cmp
adc
pop
adc
je
or
mov
xchg
mov
sub
lds
je
jb
xchg
dec
je
shrl
sub
or
mov
mov
jl
std
nop
test
ljmp
adc
pop
arpl
lods
dec
test
or
mov
test
and
cmp
int3
and
popf
xchg
in
cmovns
lds
data16
and
jp
mov
int3
xor
sbb
mov
and
addr16
out
aas
mov
lret
lret
lods
pop
xor
add
in
arpl
sbb
push
push
fsubr
rcrw
ret
and
decl
stc
inc
into
jnp
adc
and
fiaddl
orl
rcll
xlat
sbb
nop
into
jg
mov
jle
or
out
pusha
xchg
mov
daa
daa
hlt
jb
jnp
cmp
jb
mov
jno
pushf
mov
xor
rol
cmp
xor
xchg
ret
shlb
cmp
testb
repnz
jmp
lds
in
add
inc
in
fst
pop
jb
insl
mov
mov
jmp
lcall
sbb
int3
es
bound
or
enter
inc
inc
sub
inc
cmp
mov
sahf
mov
daa
std
sub
pusha
aas
xor
lea
ret
push
mull
leave
xchg
or
add
dec
ja
insl
jbe
jle
ret
ret
pushw
dec
imul
lcall
dec
fcoms
dec
insl
gs
lret
and
mov
lea
pop
fs
movsb
jecxz
sbb
dec
jo
push
cmpsl
jo
mov
ret
add
jno
gs
cs
xchg
dec
fisttps
insl
or
mov
fcompl
mov
mov
ljmp
pusha
popl
in
adc
pop
jmp
cmc
sub
mov
xchg
fildl
cmpsl
push
fisubs
push
iret
xor
push
push
sbb
cmp
subl
pop
outsl
subl
cmpsb
dec
clc
mov
sbb
xor
inc
jno
push
iret
sub
mov
and
mov
cmc
jp
inc
call
je
xor
je
push
mov
dec
sub
daa
jbe
cmpsb
pop
jg
lcall
sahf
roll
dec
pushf
das
xor
orb
loope
fsubl
pop
cmp
pop
pop
data16
test
mov
mov
adc
testb
xchg
aam
sbb
pop
ret
fcmovnbe
cmc
movl
cld
inc
sub
loopne
inc
jge
sarl
fs
dec
cld
lahf
adcb
cmp
sbb
andl
ljmp
or
lods
aam
clc
mov
aaa
push
inc
outsb
mov
das
pop
inc
push
frstor
xchg
movsb
cmc
movsb
mov
adc
lahf
xchg
jbe
ds
xchg
dec
pop
cmp
fdivp
cmp
add
inc
loop
into
rclb
dec
xchg
out
test
rolb
cli
push
gs
fnstcw
cmc
neg
pop
hlt
fcoms
mov
scas
or
xchg
xchg
out
in
sahf
mov
ljmp
loope
sahf
or
dec
sub
enter
xchg
stc
mov
sarl
shll
pop
push
test
hlt
jecxz
in
dec
fucomi
cmp
aam
mov
push
insb
ret
in
push
sbb
aaa
in
lock
mov
sbb
sbb
adc
xchg
les
cmc
ss
sarb
cmp
push
pushf
cmc
js
jnp
mov
cmp
mov
mov
ss
daa
or
fcomp
pop
add
mov
xor
popa
mov
mov
les
sarb
mov
cmp
dec
inc
int
xlat
or
ror
xchg
roll
adc
imul
popa
jl
push
fcoml
push
mov
add
jle
das
xchg
sarb
ss
repz
xchg
int
cmp
rclb
pop
mov
or
add
push
lods
cmp
cld
repnz
push
push
push
scas
jne
stc
lahf
push
imul
cmp
shll
mov
je
lret
cmp
daa
mov
inc
incl
jecxz
fimuls
out
or
mov
or
lock
push
pop
jle
fildll
out
lods
ret
test
xchg
fcomps
mov
std
jb
movsb
adc
mov
jne
xor
pop
inc
push
stos
testb
fnstenv
and
inc
dec
sub
fsubrl
dec
mov
inc
lock
fstl
aaa
or
pushf
push
rorb
lcall
in
xchg
adc
js
or
fimull
sahf
in
inc
lcall
and
jae
mov
and
mov
cmpb
jne
hlt
add
add
std
fisttpl
test
rcr
inc
push
aas
dec
mov
test
out
js
hlt
adc
out
mov
je
ja
and
clc
push
xor
mov
es
xorb
sbb
sub
adc
dec
popa
lret
outsl
shl
push
ss
leave
push
repnz
in
cmpsl
push
jmp
fadds
xchg
stc
xor
mov
xorb
fdivrs
xor
xchg
cltd
jno
popf
sub
inc
mov
or
cmp
mov
push
pop
jns,pn
sbbb
sbb
subl
push
mov
fildll
out
sub
xchg
lods
insl
push
aaa
mov
push
scas
das
fldl
add
jns
pop
mov
std
adcb
pushf
push
std
pusha
xchg
and
mov
test
popa
xchg
shll
push
and
push
add
lock
cmp
mov
sbb
xchg
xchg
mov
nop
push
jnp
test
fsts
call
leave
add
insl
out
stos
xchg
bound
dec
jnp
scas
sbbb
sbb
xchg
push
mov
push
dec
xchg
jae
mov
out
cltd
push
pop
pop
mov
aam
ljmp
in
sub
jb
addr16
inc
push
adc
lds
loope
adc
sub
js
dec
sub
insl
clc
test
insl
cmp
jb
outsl
sahf
jmp
out
cmp
sbb
mov
ret
add
sahf
shlb
and
iret
mov
cmp
sub
jle
dec
dec
push
fldt
jbe
idivb
adc
out
mov
lods
std
in
hlt
cmpsl
popa
sbb
movsb
sbb
arpl
enter
icebp
rcr
push
push
arpl
mov
cmp
cmp
inc
subb
dec
out
pop
xchg
xor
cmp
daa
cmc
pop
pop
or
dec
jge
lea
mov
xor
pop
inc
outsl
leave
sub
pusha
pop
hlt
push
enter
and
inc
add
sbb
mov
push
addb
les
mov
fs
cwtl
sub
sbb
push
lcall
dec
sarl
popa
int3
lar
repnz
test
icebp
aaa
mov
mov
fsubrl
cltd
jb
jnp
clc
in
cmpsb
or
fldl
jb
mov
arpl
push
scas
and
std
les
mov
filds
stos
and
les
hlt
les
stc
mov
enter
mov
jmp
scas
or
scas
insl
shl
andb
jl
add
loope
cmp
ss
mov
xchg
adc
and
dec
adc
addr16
mov
icebp
sub
mov
lds
dec
jge
jmp
inc
pop
mov
std
jae
pop
adc
fidivl
xchg
jg
mov
xchg
mov
inc
ljmp
cs
add
mov
insl
dec
scas
dec
mov
pop
mov
sbb
arpl
sahf
sub
jb
sti
rcrl
leave
xchg
adc
popf
hlt
mov
and
sbb
aaa
cmp
lds
setne
addr16
cmp
js
adc
mov
mov
sub
pop
mov
in
shrl
xor
mov
inc
mov
pop
adc
lahf
cmp
or
pop
popf
cmp
lret
sarb
shll
inc
sbb
imul
pop
sbb
xchg
cmp
cltd
sbb
nop
xor
fldenv
dec
cmp
aam
insb
mov
in
xchg
addr16
faddl
popa
sbb
xchg
add
inc
sti
cpuid
xlat
dec
fwait
sbb
lar
sbb
loope
ljmp
mov
pop
testb
sarl
adc
push
in
gs
jp
xor
cmpsb
mov
es
dec
xchg
enter
dec
lea
ja
popf
add
cs
xor
sbb
push
inc
mov
add
imul
pop
clc
push
fwait
int
cli
inc
ja
daa
mov
nop
mov
inc
xor
xchg
jbe
xchg
inc
pop
push
lock
ja
pop
cs
push
xchg
or
pop
aam
sbb
xsaves
push
add
pop
xchg
cmpsb
test
and
lea
mov
outsb
jne
xchg
or
fldenv
sahf
and
aam
addr16
xor
ljmp
ja,pt
xchg
dec
inc
and
and
xchg
jns
or
xchg
add
hlt
imul
push
ret
add
add
jp
cmp
icebp
jnp
cmp
or
pop
pop
inc
jmp
xchg
imul
xor
mov
loope
fsubs
xor
bound
addl
fsubrl
xlat
add
cmp
push
insl
repnz
jle
sbb
mov
cli
ret
jno
jne
scas
sbb
aas
rcl
jo
aam
scas
movsl
add
mov
imul
fidivs
sub
fiadds
shll
or
mov
outsl
dec
in
xor
sarb
sub
push
cmpsl
mov
je
lds
pop
add
dec
dec
out
insb
inc
lahf
jp
push
iret
push
sti
aas
push
sbb
pop
flds
push
inc
cmpsl
mov
push
addr16
addr16
fst
and
or
sub
sub
mov
les
push
dec
xor
ffreep
mov
sbb
in
push
adc
aad
das
aad
mov
imul
scas
mov
inc
xor
insb
push
jecxz
fidivrs
jne
movsl
frstor
push
inc
or
mov
cmp
ret
push
aam
pop
add
adc
call
cli
movsl
stos
in
mov
xchg
and
jb
xchg
insl
xor
ror
xorl
pop
adc
adc
movsb
call
xorb
pushf
mov
lret
or
dec
rcl
sti
cmp
pop
pop
xchg
and
adc
dec
dec
mov
xor
xor
pop
dec
adc
movsb
xchg
cli
repnz
dec
ja
pop
loop
xor
xchg
cmp
push
in
mov
mov
roll
stos
jecxz
fwait
push
lea
scas
jb
ret
mov
call
xor
dec
pop
xchg
cmp
mov
cli
dec
loopne
fildll
cld
push
sbb
mov
hlt
mov
shll
cmp
stc
aaa
mov
inc
scas
jne
sti
jle
stos
mov
test
in
pop
fdivrs
inc
inc
mov
cmp
popa
jmp
pop
and
pop
insb
xlat
aad
fadd
cmp
sub
pusha
outsl
movsl
push
dec
mov
jl
lds
mov
or
out
rorb
outsl
push
jmp
dec
js
orl
xor
mov
loop
mov
and
movb
je
mov
sti
mov
pop
push
jp
mov
mov
or
sub
cmp
mov
loope
jmp
inc
jl
push
stos
lahf
or
adc
dec
jns
or
aaa
jle
sbb
and
and
int3
mov
adc
fcmove
mov
filds
in
sbb
in
sbb
cmp
fs
call
stos
adc
out
lods
mov
gs
sbbl
shl
aas
or
or
daa
aad
pop
mov
push
xchg
lds
stos
sarb
test
ljmp
mov
mov
jmp
sub
subb
push
sub
push
roll
rolb
dec
pop
adc
dec
mov
cmp
xchg
lds
pop
and
push
xchg
sahf
roll
sub
or
in
cli
daa
push
stos
or
sub
pop
popf
sbb
in
push
into
lods
xlat
aaa
lret
fcom
clc
rcll
and
xor
xlat
mov
jl
movsl
dec
xchg
mov
xchg
cwtl
add
sahf
mov
sub
nop
ja
enter
pushf
cwtl
push
mov
push
pop
nop
dec
dec
mov
cmp
loopne
ljmp
stos
mov
jo
je
mov
jb
jno
sub
rorb
xor
stc
sub
in
fstl
sub
loopne
aam
cmp
movsb
lods
out
cltd
sti
sti
or
push
adc
cmpsl
sbb
fld
lea
xor
sbb
out
mov
fstp
xor
push
loopne
mov
out
xchg
jo
jbe
mov
pop
inc
bound
sbb
xor
adc
dec
ja
xchg
mov
jno
adc
mov
out
pop
std
mov
les
test
fisttpl
and
xchg
sub
ds
lods
push
xchg
mov
jl
pop
adc
sub
dec
cmpl
popa
fdivr
adc
push
xor
mov
push
pushf
repnz
or
clc
pop
and
arpl
pop
push
mov
xchg
lcall
int
sbbl
popf
mov
mov
xor
or
inc
std
and
mov
adc
mov
ljmp
out
out
mov
or
mov
lods
inc
sbb
xchg
ret
jecxz
fisubrl
dec
sub
insb
xchg
lcall
xchg
test
jb
push
add
push
xchg
mov
arpl
imul
xchg
pop
int3
shll
outsl
stos
hlt
sbb
pop
adc
pop
pop
mov
cmp
fcoms
jecxz
sub
push
aas
adc
call
jg
jmp
clc
and
xor
cmp
dec
cmc
cmpsl
scas
add
icebp
or
xchg
and
push
sub
out
mov
sbb
sbb
sub
push
fadd
mov
add
add
push
repnz
push
pusha
imul
push
adc
hlt
mov
sub
cld
jno
push
leave
dec
cmp
cmp
cmp
in
movsl
jge
xchg
cmp
xor
add
xchg
jbe
xchg
lahf
add
movsl
add
or
jge
sbb
xor
aad
pop
jne
mov
xchg
cmpsb
push
push
adc
jo
lock
adc
loope
adc
push
dec
lods
push
xor
and
movsb
push
jecxz
shll
mov
push
xchg
popf
push
push
cmp
pop
cmp
xlat
nop
icebp
shlb
sub
stos
cmp
xor
cmp
pusha
iret
enter
jle
mov
and
stos
in
ja
inc
popa
jne
fisttpl
mov
inc
shrb
mov
into
jo
pop
mov
fs
pop
push
push
lret
push
cltd
jnp
push
add
cmp
or
cld
mov
push
or
loope
mov
mov
push
in
mov
cmpsb
push
mov
testl
stos
jp
insb
jb
push
mov
into
loopne
roll
mov
sbb
jnp
fidivrs
dec
lret
sbb
xor
enter
xchg
insl
cmp
in
mov
popf
popf
in
mov
in
sbb
push
movsl
push
jmp
stos
jno
mov
jbe
movsl
sub
filds
sub
stos
push
ret
jae
push
roll
out
cmp
mov
test
ficompl
cltd
add
adc
push
idivl
push
enter
push
ret
decb
xchg
inc
mov
mov
rolb
dec
outsb
sub
clc
push
pop
xlat
push
cmp
dec
sub
mov
adc
shl
cmp
pusha
jg,pn
pop
popf
mov
in
adc
ds
icebp
mov
addr16
sbb
gs
in
sti
daa
pop
shl
push
and
daa
in
ret
dec
lret
xlat
fmull
lret
fmuls
cmpsb
push
push
mov
iret
movsb
inc
pop
arpl
aad
xchg
adc
enter
add
sbb
cld
push
dec
push
xlat
mov
push
xor
lods
imul
or
je
dec
pop
xchg
leave
jb
xchg
jmp
add
xchg
shlb
ja
orb
mov
mov
daa
outsb
xchg
or
fmul
mov
loopne
push
jae
cmp
cli
mov
cwtl
popf
mov
clc
ja
addr16
ljmp
imul
cmpsl
push
roll
in
cmc
dec
mov
pop
adc
shl
lret
outsb
lods
stos
stos
inc
lahf
pop
fldcw
js
test
arpl
mov
getsec
loop
xchg
or
xchg
mov
add
pop
adc
fists
mov
lock
call
push
std
sbb
cmp
xchg
movsb
gs
enter
xchg
outsb
mov
out
cmpsb
xchg
jge
mov
jne
adcl
rcll
shlb
test
out
add
push
mov
shll
and
mov
mov
imul
enter
in
sbb
push
inc
jle
sbb
adc
iret
lea
sub
shlb
xchg
xchg
cli
lret
cmc
gs
fstps
mov
inc
push
mov
jo
cmp
leave
stos
cmpsl
aas
sub
sbb
mov
pop
lea
pop
test
shlb
dec
scas
adc
or
lds
mov
sub
arpl
nop
add
push
imul
cmp
xor
add
sub
cmp
ret
pop
ljmp
sbb
sbbl
mov
outsb
xchg
xor
popa
insb
jmp
or
jecxz
adc
arpl
lods
lods
imul
xor
push
mov
inc
mov
xchg
insb
out
mov
pop
mov
or
jbe
repnz
addr16
out
js
enter
scas
cltd
std
or
mov
out
push
sbb
lret
mov
inc
movsb
push
pop
mov
jmp
sub
popa
cmp
fistpll
adcb
in
insl
jecxz
icebp
pop
jle
icebp
push
jne
fidivl
jle
cltd
inc
and
movb
lcall
stc
sbb
xor
clc
xchg
repnz
xchg
and
inc
sahf
mov
adc
add
push
jp
xor
or
adc
fidivrs
test
aas
sub
cmc
mov
and
fcoms
mov
test
dec
loopne
add
dec
sahf
dec
inc
in
dec
inc
ret
cmpsb
dec
xor
mov
add
scas
aam
mov
xchg
nop
lods
cld
inc
inc
xor
xor
fimuls
adc
in
sbb
mov
xchg
out
pop
leave
xchg
lock
dec
movsl
sbb
cwtl
inc
hlt
cwtl
divl
out
test
movsl
cli
jb
xlat
dec
xchg
jmp
jecxz
fadds
clc
int
push
fisubs
sti
dec
pop
push
add
push
push
inc
sub
in
mov
stc
out
adc
fbstp
je
clc
stc
int
movsl
ss
test
in
out
xchg
out
pop
shll
pop
or
dec
mov
ret
lahf
add
mov
mov
mov
std
insb
testl
aam
movsl
mov
loopne
add
sahf
xchg
or
and
cmp
jne
mov
rol
add
aaa
shl
pusha
jne
sti
out
sbb
sti
in
inc
or
adc
jmp
mov
push
pop
adc
mov
sbb
cmpsl
imul
jnp
xor
add
xor
in
mov
mov
jp
andl
pop
lods
inc
imul
mov
add
jae
cld
pop
add
mov
adc
xchg
xor
loope
push
jl
push
mov
subl
push
jp
mov
and
mov
sub
dec
imull
fcomip
or
shll
mov
add
or
data16
andl
inc
mov
insb
pusha
xchg
sub
xchg
lahf
jb
in
sbb
ror
ret
repz
cmp
es
lods
and
mov
xchg
stos
mov
cltd
popf
roll
inc
pop
and
inc
push
popfw
pop
xor
mov
das
push
stc
jae
xor
fldcw
xor
adc
ds
lods
arpl
loop
pusha
adc
adc
ljmp
je
add
cmp
inc
mov
xor
in
push
adc
dec
popf
cmc
imul
push
mov
lret
mov
xchg
test
out
leave
sub
mov
and
mov
push
js
cmpsb
xor
int3
xchg
xor
jecxz
mov
mov
sbb
or
dec
bnd
adc
push
mov
call
rol
push
ficoms
loop
rcrl
pop
pop
jb
dec
arpl
scas
or
push
pop
jno
fmull
pop
pop
dec
sub
out
outsl
out
xlat
pop
cmc
mov
dec
or
push
xor
shlb
xchg
or
int3
jg
pop
imul
mov
mov
das
test
out
jno
cwtl
and
test
scas
cs
xchg
hlt
daa
outsb
cs
lcall
test
push
test
cwtl
dec
and
js,pt
or
mov
jmp
scas
push
inc
retw
js
jnp
jl
inc
std
pop
int3
and
loopne
adc
scas
idiv
cli
cld
fidivs
mov
push
sbb
lcall
cmp
mov
in
fmul
jg
xor
stc
imul
repz
dec
sub
jo
test
fs
jno
fs
jl
sbb
pop
cmp
sub
movsb
cmp
cmp
add
xor
adc
xor
stc
cmpsb
stos
int3
fdivrs
inc
jg
out
sub
mov
shll
movsl
into
faddl
clc
cmp
ljmp
pop
mov
mov
mov
data16
sti
pop
mov
sub
push
pop
inc
loopne
jb
jns
or
cmp
stos
stos
dec
dec
dec
mov
rcrb
knotb
cli
dec
ljmp
mov
dec
stos
daa
out
mov
mov
add
xor
push
mov
mov
add
mov
cmp
and
mov
jbe
std
jne
aam
xor
stc
cmp
add
int3
sbb
incl
pop
cmc
int3
mov
pop
icebp
scas
or
je
faddl
jmp
fcompl
mov
shufps
pop
dec
mov
nop
pusha
lea
mov
sbb
dec
adc
add
imul
mov
sbb
adc
add
ficomps
in
mov
mov
mov
bound
mov
jle
cmp
sbb
push
mov
rcrb
fcomp
clc
inc
ljmp
dec
or
lods
sbb
and
cli
push
insl
fs
xor
ds
int3
mov
xor
or
push
lcall
je
mov
cmpsb
push
sub
adc
mov
push
mov
xlat
xorb
add
in
pushf
add
mov
dec
dec
jg
inc
fisubs
int3
jg
in
jp
lret
movsb
add
subl
rorl
aaa
xlat
pop
jnp
pop
mov
mov
ljmp
push
daa
add
pop
inc
inc
js
pop
cmc
subl
jle
inc
xor
bnd
add
dec
xor
loop
jbe
cmp
sub
clc
xchg
and
sbb
jbe
pusha
and
ljmp
sub
imul
hlt
test
aas
xor
inc
clc
adc
fcomps
cli
xor
faddl
pop
shll
mov
loop
jnp
and
daa
sub
arpl
subl
mov
mov
adc
and
pop
insb
sub
and
roll
fs
dec
ds
jbe
jg
lds
mov
lock
and
add
leave
or
int
push
mov
and
es
cmp
xor
jmp
mov
or
push
push
and
cmp
or
mov
or
jmp
and
fisubrs
and
in
test
repz
roll
pop
xchg
scas
std
std
jecxz
and
pause
mov
xchg
or
inc
add
in
mov
pop
pop
popf
inc
push
jb
ja
clc
and
iret
imul
pusha
adc
adcb
mov
dec
jns
insb
dec
sub
xchg
jo
ficomps
fsubs
mov
int
out
mov
push
xchg
ss
xchg
add
stos
pop
mov
pop
scas
jmp
jle
das
fucomi
add
fldl
icebp
lahf
popa
int
jmp
push
js
mov
cli
inc
mov
shll
cltd
movsl
pop
aam
mov
xchg
mov
repz
loop
and
pop
push
hlt
jmp
add
sbb
push
movsl
adc
jmp
xchg
cld
or
push
nop
mov
pop
sbb
sti
add
loop
add
sti
sti
mov
mov
jb
pushf
dec
pop
xchg
mov
ljmp
and
aad
and
pushf
mov
stos
inc
sbb
imul
pusha
sub
jnp
dec
sub
mov
push
mov
testb
inc
idiv
pop
mov
sub
mov
dec
inc
psubw
lea
mov
repz
daa
sbb
push
mov
inc
dec
xorb
iret
pop
cmpsl
xor
outsb
ficoml
sbb
movsb
mov
mov
cmp
int
jo
fisttps
add
stc
sahf
jp
xchg
inc
mov
dec
adc
xchg
dec
repnz
cmpsb
lds
inc
cmpsl
rep
pop
mov
push
rorl
push
mov
sarl
inc
mov
add
push
std
xchg
mov
subb
add
push
xchg
mov
mov
xchg
sub
shll
shrl
loope
dec
push
mov
in
cmp
andb
call
push
jo
pop
xor
adc
push
ret
shlb
out
jmp
dec
lds
jne
and
mov
imul
ds
lahf
stos
jg
inc
sub
shrb
inc
icebp
ret
add
inc
cmpsl
adc
cmc
sub
adc
xchg
adc
xor
fwait
cltd
sarl
sbb
mulb
or
push
push
inc
jmp
adc
iret
and
out
stos
cmpsb
test
and
fcmovnu
pop
sti
add
loopw
inc
repz
mov
out
and
cmp
dec
mov
sub
lods
lret
sub
xchg
pop
call
fcomps
mov
in
sub
popf
dec
mov
call
je
cmp
or
adc
pop
adc
mov
jecxz
ss
mov
addr16
ret
pop
int
xchg
rcll
stc
addr16
addr16
dec
orl
lret
and
in
xchg
popa
lock
ret
ds
jne,pt
movsl
stos
ss
cmc
mov
sub
push
js
das
insl
fists
bswap
movsl
aad
adc
mov
add
cltd
movsl
mov
push
inc
mov
out
or
push
rcll
lock
mov
out
lods
jecxz
inc
add
dec
lea
or
jb
and
push
sub
add
cwtl
imul
popf
or
sbb
es
dec
shr
scas
inc
dec
jns
aam
stc
push
pop
mov
inc
js
jo
and
scas
add
out
faddl
in
dec
icebp
mov
push
mov
add
mov
ds
mov
lret
stos
xlat
add
add
xchg
mov
stos
push
push
fbld
inc
flds
movsb
or
dec
stc
adc
ljmp
pop
push
mov
loop
jo
out
cmpsb
add
pop
push
or
jb
fwait
hlt
xchg
mov
sbb
jns
into
hlt
leave
mov
testl
cmp
pop
sti
jno
jb
mov
fst
aad
mov
scas
sub
dec
in
lock
mov
push
and
pop
jne
adc
pop
je
lods
push
add
sub
pop
mov
loop
and
vmwrite
or
adc
js
sub
add
dec
imul
pushf
push
daa
jmp
shlb
xchg
xchg
hlt
lods
mov
testb
leave
rcrb
mov
nop
push
imul
mov
test
mov
xchg
jg
pop
mov
std
lret
popa
adc
xchg
or
cmc
stc
mov
mov
adc
rcr
lea
lahf
or
movsl
shrb
repz
jnp
dec
into
or
jmp
inc
adc
sbb
stc
mov
mov
sbb
pop
popf
ret
push
sub
xor
icebp
or
add
sahf
stos
leave
popf
pop
cmp
aam
imul
push
sbb
in
popl
mov
inc
in
cmpsb
int3
sbb
sbb
aad
pop
lds
lret
cmp
mov
mov
jecxz
sub
push
addr16
insl
lds
dec
jns
sbb
pop
shll
sbb
sbb
test
jmp
lret
lcall
mov
sub
cli
stc
lret
and
les
nop
lahf
cmp
enter
adc
inc
sub
in
icebp
adc
sub
pusha
cmp
mov
dec
enter
test
out
int3
xchg
scas
jp
push
pop
mov
jbe
es
inc
pinsrw
sub
and
sbb
inc
mov
push
andl
imul
and
inc
mov
andl
cmp
pusha
pop
xchg
in
jnp
or
pop
and
sbb
idiv
mov
repz
sub
push
dec
xor
fmull
xor
sub
std
xor
push
push
xchg
mov
mov
fistpl
test
out
jmp
add
pop
mov
push
cltd
pop
ljmp
adc
mov
and
stc
or
setno
or
cld
xchg
jle
movsl
lods
push
out
mov
cmp
adc
stos
jle
out
ret
xor
jmp
adcb
in
out
int
add
sub
lret
jne
mov
mov
cmpsl
lret
xchg
dec
clc
lods
jg
sahf
xchg
out
imul
pop
sahf
test
or
pop
shl
jp
push
lds
in
or
jmp
lea
push
mov
xlat
mov
sbb
cmp
add
scas
lock
adc
lods
inc
jb
xchg
aam
mov
cmp
lcall
int3
pop
dec
or
sbb
xchg
cmpsl
pushw
test
pop
int
shrl
push
dec
push
test
or
xchg
sbb
nop
xor
mov
add
addl
cmp
inc
rcrb
jbe
lods
add
cli
test
or
xchg
dec
pop
jmp
jle
pop
icebp
pop
loop
lods
imul
std
inc
push
inc
movsl
movsb
push
adc
mov
add
in
add
mul
mov
xor
out
and
lds
inc
sti
and
adc
movsb
xor
add
ss
mov
adc
rcr
jp
mov
int
shlb
jle
sub
inc
xchg
mov
pop
sti
pop
jle
mov
cmpsb
out
sbb
adc
popf
out
jecxz
push
mov
test
mov
popa
movsl
jecxz
call
lret
shrl
xorb
in
les
pop
inc
add
adc
lret
lds
out
mov
hlt
and
out
je
lea
or
or
pop
cmp
push
inc
call
test
adc
inc
ljmp
addl
and
jb
call
into
aam
in
jmp
push
inc
and
jge
faddp
adc
cld
popf
mov
xor
jecxz
adc
jne
xor
and
jmp
xlat
dec
call
xchg
test
mov
pusha
cltd
test
mov
leave
mov
mov
xlat
lea
xor
cmc
scas
jnp
cmc
add
outsb
lahf
and
jmp
adc
fadds
sbb
adc
mov
push
mov
cwtl
or
jle
fadds
adc
push
or
aad
movsb
sbb
mov
clc
js
inc
jbe
lods
jmp
fiaddl
sub
push
push
loope
jmp
daa
and
fiadds
imul
xor
test
sbb
xchg
jo
insb
div
add
pop
mov
adc
in
sbb
add
movsb
add
fildll
cs
inc
pop
insl
dec
mov
mov
cmpsb
fcmovnb
ss
fs
les
stos
jns
sti
test
sub
pop
pop
pop
outsl
cmp
cmpsl
call
mov
jmp
jo
dec
pop
imul
ret
push
call
das
test
addr16
insl
ljmp
rcl
dec
lea
and
clc
mov
sbb
movsl
and
hlt
outsb
jbe
inc
pushf
cwtl
fisubrs
lock
jbe
gs
icebp
inc
jne
and
sbb
mov
jl
fdivs
fwait
jmp
movl
out
inc
ss
loop
in
test
test
icebp
mov
and
cmp
inc
xchg
leave
dec
fldl
add
adc
xlat
ljmp
adc
sti
imul
and
pushf
scas
xlat
int3
xchg
mov
movsl
aas
adc
fldt
test
mov
lea
or
mov
mov
lea
cmpsl
pushf
loop
sbb
cmp
xchg
push
ret
shll
adc
add
filds
sub
aad
iret
mov
mov
sbb
mov
movsb
xor
test
push
arpl
jmp
dec
ja
shrb
movl
or
pop
arpl
xor
push
andl
mov
jns
pop
mov
adc
decb
std
in
fimull
and
outsb
dec
jno
lea
push
stos
and
aas
lcall
ss
xor
mov
in
adc
mulb
and
fisubrl
sub
xor
mov
mov
std
movsb
push
inc
mov
bound
sub
mov
jae
xorl
jns
call
push
into
xchg
lock
ljmp
jecxz
sbb
ljmp
lret
add
lea
xchg
aam
add
sub
adc
mov
cmp
imul
int3
or
fstl
lock
inc
addl
fldenv
add
and
pushl
jno
or
jmp
sahf
inc
test
and
divb
fucomi
pop
sbb
inc
aaa
add
adc
out
cmp
int3
das
pop
jmp
test
push
dec
pop
test
sub
xchg
insl
lret
or
out
cld
sti
repz
pxor
mov
jg
xchg
or
in
mov
fwait
cmpl
popa
jnp
mull
call
or
sqrtps
adcb
jno
adc
xor
or
pop
ret
gs
inc
dec
rcl
or
xchg
xor
push
shll
push
jl
mov
int3
mov
cmp
push
jmp
loope
pusha
pop
xor
sbb
mov
adc
or
xchg
cs
outsb
inc
test
in
push
loopne
loopne
push
shll
jo
xlat
jne
pop
xchg
fcmovne
push
out
push
shl
fcmovnu
lock
mov
pop
pop
mov
jmp
je
push
dec
repz
pop
cmpsl
xchg
xor
sub
or
shrb
add
imul
icebp
inc
fmull
hlt
popa
xor
and
pop
dec
and
push
mov
fdivrs
pop
test
adc
or
sbb
jo
adc
fdivl
inc
or
loopne
lea
jbe
adc
xor
lret
jae
xlat
dec
mov
rcrl
xor
call
dec
std
jo
out
loopne
mov
jae
or
scas
mov
aad
push
add
pop
mov
sahf
dec
test
mov
aas
xor
stos
repz
jno
fcmovne
scas
lcall
add
pusha
mov
jno
inc
fwait
into
out
and
shl
mov
loop
mov
insb
mov
jo
pushl
xchg
rcll
pop
sbb
jne
andb
push
mov
cmc
xchg
mov
pop
sti
push
and
mov
cmpsb
jecxz
call
adc
test
xor
fsubrs
pop
jne
mov
sahf
sub
or
bound
jmp
mov
je,pt
cmp
lret
mov
add
mull
xchg
std
sub
and
mov
fs
cmp
repz
jmp
mov
hlt
mov
add
adc
movsl
inc
mov
data16
xor
mov
xchg
pop
popa
cli
vpmaxub
mov
arpl
rorl
sti
mov
adc
std
or
jne
xchg
mov
sbb
mov
bound
push
sbb
js
mov
call
mov
arpl
inc
or
ss
mov
fistpl
pop
jb
rcll
flds
jp
pop
pop
xchg
sbb
add
icebp
cld
lock
pop
add
aas
inc
mov
gs
stos
mov
cld
mov
adc
pushf
repnz
inc
int3
leave
stos
imul
cmpsl
cwtl
lea
xor
inc
testb
sub
pop
out
in
sub
cmpsb
ds
inc
les
mov
cmp
mov
sahf
out
fnstsw
inc
cli
ja
addr16
ds
mov
xor
jb
cld
pop
dec
xorl
gs
xlat
stos
lea
mov
xchg
repz
or
scas
mov
mov
imulb
cmp
pop
ret
sahf
inc
incb
xor
sbb
or
push
cmc
movsb
stc
jo
movsb
subb
popf
movsb
sbb
mov
inc
mov
mov
shlb
inc
es
aam
addr16
ljmp
subb
mov
xor
push
mov
loope
andb
xor
push
push
pop
sti
sti
xor
stc
stc
dec
sub
mov
into
pop
lret
xchg
ds
int3
arpl
mov
sub
scas
inc
cmp
inc
sbb
jp
orb
sbb
push
xchg
or
xchg
xor
js
xchg
fdivl
in
xor
xor
int3
sub
es
push
cmpsb
or
fistpl
inc
xor
pop
and
and
scas
jo
push
mov
out
jl
aad
push
jbe
test
jns
sahf
dec
aaa
xchg
mov
imul
cmpl
rdmsr
int3
out
add
shrl
int
push
cmp
dec
or
and
lcall
sub
jmp
sbb
cmp
mov
cwtl
sub
or
cmpsl
push
loope
xor
add
fsubl
mov
scas
jno
add
cli
mov
data16
add
cmp
add
shl
inc
pop
mov
pop
xchg
rcl
pop
loope
mov
sbb
push
shl
xchg
mov
jecxz
int
icebp
xchg
add
arpl
movsb
mov
xor
int3
sbb
jae
sub
pop
into
jmp
xor
out
mov
insb
sarb
fisubl
push
mov
push
mov
lcall
sub
arpl
arpl
xchg
adc
add
clc
scas
jns
mov
stc
sub
jge
stc
stos
int
scas
inc
jp
mov
mov
pushf
inc
or
rol
scas
in
out
push
mov
ret
ja
sub
pop
fmul
dec
shrl
push
sarl
movsb
sub
cltd
xchg
and
dec
cmp
rcrl
mov
cmpsl
or
xchg
or
nop
sub
cmpb
ss
jmp
dec
cmp
and
mov
js
lcall
cmp
and
cmp
inc
cmc
js
je
cwtl
enter
out
repnz
in
dec
mov
stos
mov
mov
fdivl
and
adc
cltd
repz
inc
fidivrl
sub
push
inc
sahf
push
xchg
xlat
sub
rcrb
out
cmpsb
dec
xchg
test
fisttps
mov
shlw
pusha
loope
ss
xchg
arpl
iret
or
mov
fidivs
jns
es
sub
xor
push
outsl
add
rolb
stc
test
cmp
mov
ret
dec
xchg
fxch
gs
push
repnz
outsl
xchg
andb
push
jb
or
lds
jae
arpl
mov
cmove
adc
lea
out
add
or
mov
sub
xlat
les
icebp
cmp
xchg
js
sbbb
xor
inc
dec
add
sbb
cmp
lret
xchg
nop
imul
xor
pushf
push
hlt
fsubl
and
repz
push
es
repnz
dec
sbb
and
popa
pop
movsl
in
out
mov
out
and
cli
push
push
sub
push
jmp
pop
sbb
or
cmpsl
or
add
xor
gs
push
insb
dec
sbb
mov
repnz
iret
mov
lods
cltd
push
js
pop
dec
dec
int3
or
lds
je
shll
mov
push
out
sub
or
inc
pop
clc
sub
cs
orb
mov
cld
sbb
aam
lea
sbb
sub
punpcklwd
lods
mov
cmp
jnp
insl
cmp
faddl
push
sbb
lret
push
test
dec
dec
lds
mov
js
push
mov
sbb
push
mov
xchg
jp
les
test
push
fisubrl
pop
movsl
push
add
loopne
das
jno
or
jl
pop
xchg
sub
mov
insb
inc
mov
push
icebp
out
mov
js
adc
flds
cmp
movsb
mov
sub
push
sub
fstsw
scas
and
xlat
pop
jge
sbb
cmp
and
sub
or
into
or
inc
jmp
div
ret
jl
fwait
dec
sbb
sub
mov
push
dec
cmp
loope
and
mov
pop
pop
je
nop
mov
sbb
jno
mov
adc
std
push
jle
pop
xor
mov
scas
xchg
adc
cmp
cmpsl
or
add
xor
push
xor
aad
in
push
sbbl
xchg
stc
scas
int3
push
push
fs
jl
mov
in
xchg
cmp
repnz
mov
adc
push
mov
test
or
dec
aas
jle
mov
add
pop
pop
rolb
lock
pop
jo
sub
sbb
inc
add
sub
cmp
xchg
movsl
out
test
cwtl
imul
add
dec
js
ficompl
inc
les
xor
imul
xchg
scas
out
push
sbb
mov
mov
jmp
sbb
fadd
add
mov
add
push
inc
call
or
sub
arpl
dec
sbb
test
lods
push
dec
scas
mov
out
lds
aas
mov
mov
enter
sbb
jmp
inc
loop
clc
sub
pop
hlt
adc
mov
push
mov
push
dec
mov
mov
inc
adc
popl
ret
xchg
lret
pop
pop
bnd
pushf
dec
inc
cmp
inc
mov
jle
outsb
aam
mov
mov
add
nop
mov
insb
inc
xor
xchg
dec
insl
in
dec
sub
ss
sbb
mov
mov
je
imul
repnz
push
jae
shrl
rorb
enter
and
jae
pushf
test
add
divl
push
lea
mov
ds
sbb
mov
jns
dec
xor
cs
adc
lret
cmc
sarb
jge
jmp
shlb
mov
sbb
adc
orl
sub
push
test
adc
jmp
mov
mov
or
push
ret
adc
adc
push
in
cmp
pop
shr
stos
pusha
mov
dec
jg
hlt
iret
pushf
mov
ret
lods
sbb
mov
pop
in
xchg
stos
js
push
insl
xchg
pusha
popa
cmc
sub
push
repnz
shrl
ret
loop
add
call
arpl
mov
add
pop
mov
lds
jmp
clc
sbb
jo
je
cltd
sahf
jb
push
test
xchg
fstpt
in
and
xlat
sub
addr16
mov
in
js
repnz
js
push
inc
dec
and
xor
add
sbb
test
sub
push
or
loopne
xor
add
pop
pop
cmpl
test
push
ret
cltd
or
nop
test
fisttpl
int3
xor
orb
xchg
push
ds
jns
in
xor
xchg
mov
jae
fisubrs
shll
xchg
cltd
or
cmp
mov
push
call
mov
xlat
adc
or
xchg
xchg
leave
mov
rcrb
mov
insb
in
iret
std
clc
and
jle
and
mov
fs
xchg
mov
pop
push
add
int
mov
ds
xchg
es
lret
jne
sub
outsl
dec
pusha
or
push
push
and
sbb
dec
shrl
mov
fs
outsl
xlat
mov
pop
adc
mov
push
mov
out
pop
mov
aam
les
cmp
clc
out
dec
jnp
cmpsl
scas
maskmovq
idivl
fisttpl
mov
dec
hlt
fldl
test
addb
jns
mov
leave
test
push
cmp
inc
loopne
mov
fimuls
or
movsl
mov
push
inc
ja
add
daa
mov
jae,pn
dec
imul
push
inc
and
fiadds
push
leave
arpl
ret
xor
jmp
adc
repz
adc
jp
or
int
inc
jns
mov
psubusb
out
adc
or
inc
lcall
dec
jo
cs
xchg
jmp
add
lret
in
jle
mov
outsb
iret
inc
inc
in
shl
pushf
cld
mov
cmp
fisttpl
lahf
push
cmp
out
in
xor
or
push
clc
out
outsb
add
icebp
dec
dec
inc
mov
and
push
inc
mov
mov
ljmp
repz
aas
hlt
mov
mov
fucompp
xchg
mov
xor
jb
in
call
cmp
or
out
outsb
leave
xor
xlat
or
lods
aam
out
dec
fisttpll
push
xchg
rcl
orb
leave
shr
ret
jle
fsub
xor
xchg
jnp
mov
pop
add
loopne
adc
jg
lret
cmp
sub
jbe
ljmp
test
hlt
pop
jo
mov
lods
subl
xchg
lcall
inc
push
cmpsl
pop
outsl
cli
pop
movsl
inc
ret
out
jnp
mov
mov
out
in
test
mov
cmpsb
cmp
adc
adc
sbbb
movsl
call
jae
jnp
jmp
sub
cmpsb
pop
cs
xor
dec
lahf
xor
nop
sbb
lds
imul
pop
fimuls
aas
filds
mov
out
mov
imul
dec
xchg
or
divb
jo
pop
sub
out
mov
push
dec
scas
je
dec
icebp
lea
add
mov
mov
insl
xor
iret
xor
or
xchg
cmp
xor
xchg
adc
mov
sub
cmpsb
out
mov
shr
lcall
dec
fucom
iret
push
cmp
xorl
arpl
pop
push
cltd
arpl
rclb
imul
sti
adc
jl
jne
orl
cmp
mov
xchg
or
jns
loop
outsl
mov
repz
dec
adc
fidivrs
sahf
addr16
sbb
rolb
inc
popa
jno
push
cmp
sbb
daa
ss
or
cmp
add
mov
or
std
outsb
xor
pop
mov
mov
je
fisubl
or
das
jae
pop
cmp
pop
in
data16
sbbl
scas
push
sub
sbb
scas
pop
and
mov
inc
ret
ljmp
jnp
gs
hlt
jb
mov
mov
mov
or
add
add
adc
inc
fistpl
cmp
bound
stos
call
outsl
bound
or
xchg
xor
xchg
jno
aaa
lods
in
xlat
mov
sti
in
or
cltd
popf
ret
outsb
les
dec
push
lock
jnp
jl
ljmp
cli
stos
fimuls
ret
adc
xchg
repz
lea
imul
pushf
xchg
addr16
movsb
rcrb
lcall
jecxz
xchg
and
mov
mov
cltd
mov
push
add
jb
ljmp
dec
outsl
in
mov
ja
scas
inc
and
lock
outsb
mov
jnp
or
mov
cmpsl
imul
sub
mov
out
push
lret
cli
add
fisttpl
sahf
mov
test
xor
pop
adc
adc
mov
xor
pushf
mov
inc
into
mov
les
mov
xor
cmpsb
fwait
jo
push
das
sub
inc
mov
enter
push
aad
adc
cmpsb
lea
cmpsl
pop
jmp
pop
jl
out
clc
mov
sub
sub
mov
jno
ja
mov
iret
jne
sub
in
sti
and
ja
dec
test
into
in
ja
adc
cmp
mov
movsl
cmpsb
lock
xchg
push
mov
pop
mov
aas
xchg
test
mov
lock
or
stos
xor
pop
fmuls
fcoms
rclb
ss
pop
mov
jle
out
sbb
cmp
loopne
push
add
cmpsl
insb
ficomps
sbb
mov
jb
pop
pop
inc
lock
mov
inc
repnz
jbe
cmpsl
mov
aad
aas
out
xchg
pop
popa
pop
cwtl
add
js
jmp
or
mov
icebp
mov
sti
stc
dec
mov
pop
ret
sahf
add
bnd
pushl
push
add
dec
mulb
int3
mov
push
push
fcmovb
cmp
sbb
add
jl
hlt
subl
mov
cli
jl
push
lret
add
icebp
adc
cltd
lods
and
and
mov
loop
cmc
xchg
and
jle
ss
pop
xchg
xchg
fiadds
push
fimull
jne
hlt
lcall
cwtl
xor
mov
pop
adc
lea
sbb
xchg
outsl
adc
mov
aas
flds
adc
add
cmpsb
adc
inc
xchg
fwait
xor
pop
mov
sub
and
in
iret
nop
inc
mov
mov
ja
mov
jns
inc
mov
or
lds
leave
push
imul
and
es
rclb
popl
lret
sub
xchg
jno
andb
xchg
push
stos
inc
cs
pop
push
sub
int3
ret
aad
mov
in
inc
sti
add
add
push
dec
popf
xlat
xchg
pop
gs
shlb
idivl
rclb
push
inc
cmp
negb
pop
cli
xor
aam
lds
mov
adcb
aam
cwtl
scas
inc
push
ja
enter
pop
pop
sarb
sbb
or
loop
aad
cli
lret
xlat
push
orl
sbb
inc
scas
adc
das
mov
idiv
daa
imul
dec
ss
test
add
jnp
push
ds
fmull
inc
lock
pop
in
daa
iret
push
testl
sbb
jnp
push
notl
movsb
lret
sti
cmp
ja
pop
cmp
xchg
ret
cmp
cltd
jp
push
sub
mov
into
lret
mov
in
hlt
call
filds
rolb
jne
pop
or
repnz
repnz
loope
xchg
sbb
dec
mov
lock
test
add
cmpl
jno
imul
outsl
xchg
hlt
pop
mov
sbb
dec
decb
jecxz
mov
xchg
or
jg
movsb
sahf
dec
sbb
ds
jmp
pop
std
enter
out
fistps
nop
mov
push
mov
cmpsl
and
inc
std
or
loop
jne
rolb
push
pop
inc
fldcw
dec
out
icebp
jge
mov
sub
sti
dec
clc
xchg
aam
sub
push
pop
mov
sub
sub
push
ss
scas
jl
leave
ret
clc
push
or
sub
insl
push
negl
pusha
mov
dec
mov
loope
xlat
dec
xchg
inc
add
mov
jb
push
mov
jns
scas
scas
ret
lret
in
outsb
jb
shlb
jle
repz
jne
inc
sar
add
jge
xchg
in
jl
mov
mov
mov
fidivs
cmp
movsl
sub
mov
leave
jp
mov
mov
mov
jnp
mov
xchg
lds
push
mov
cmpsb
rolb
mov
xlat
incl
inc
mov
shr
or
push
cmp
pop
dec
je
xchg
rorb
adc
push
add
or
inc
nop
jb
sarl
lahf
insb
scas
gs
stos
inc
xchg
pop
ljmp
ret
lds
xchg
jo
pop
mov
mov
pop
jae
pop
cwtl
out
insl
mov
push
sub
hlt
popf
mov
jno
dec
lods
pop
aas
fbstp
sysenter
xchg
ja
out
push
xchg
xor
adc
outsb
cld
cmp
push
fiaddl
pop
dec
and
adc
aad
nop
jns
fsubrl
or
xchg
xchg
pushw
cld
sbbl
add
fwait
enter
push
cmp
aaa
xchg
rcr
in
xchg
jns
hlt
cwtl
inc
xchg
cs
fcomp
movsl
idivl
das
jmp
push
stc
xchg
cmp
out
and
mov
inc
lods
idivl
dec
scas
or
loop
xchg
notl
jno
cmp
mov
xchg
xchg
fisubrl
xor
in
dec
inc
mov
inc
sub
jo
imul
adc
call
es
movsl
repnz
fmuls
outsl
loopne
gs
int
pop
stos
js
rorb
mov
ret
mov
enter
push
mov
sbb
popa
adc
cmp
aad
nop
jge
movsb
testb
push
ja
push
pushf
pusha
pushf
frstor
int3
aam
mov
cld
stc
jp
je
xchg
repz
call
jbe
std
or
pushf
ljmp
insl
jo
gs
enter
xchg
cmp
popa
xlat
into
xchg
mov
mov
lcall
lock
mov
test
int3
mov
push
pop
nop
lea
pop
xchg
sub
icebp
cs
fsubrs
fdivp
pop
dec
pop
xor
inc
mov
and
xlat
cltd
jecxz
dec
mov
xor
lret
sbb
imul
or
ljmp
adc
lds
push
pop
jbe
dec
jae
or
or
cmc
mov
push
jg
or
adc
fnstsw
push
dec
sahf
movb
lret
daa
sub
mov
push
dec
pushf
mov
sbb
mov
cwtl
shr
xorb
fisttpl
pop
daa
pop
mov
mov
mov
insb
sub
std
inc
and
inc
jo
dec
jo
inc
cld
je
jb
insb
daa
push
jl
pop
jno
sub
mov
hlt
mov
mov
out
sub
push
int3
scas
and
add
stos
movsb
stos
mov
sti
mov
insb
frstor
sub
jecxz
std
xor
movsl
scas
pop
leave
jb
stos
sbb
fmull
sbb
and
out
sbb
sbb
imul
pop
out
out
inc
mov
pop
push
pop
adc
mov
xor
fidivrl
in
sahf
js
aas
les
lcall
sbb
or
clc
fwait
dec
mov
rcrb
nop
ss
jmp
sbb
mov
sub
cmpsb
loope
dec
jp
pop
and
mov
mov
jne
imul
adc
stc
push
fdivrs
pop
push
subb
mov
adc
jne
ficoml
popa
loop
inc
sub
sti
mov
mov
xchg
mov
aaa
test
pop
cmpsb
das
jno
cmpsb
push
aad
xchg
mov
bound
dec
repnz
add
sub
jno
push
mov
mov
xchg
je
loop
and
loope
scas
dec
and
sahf
jge
pop
loop
xor
sahf
gs
leave
aam
xlat
jnp
mov
xor
jecxz
jbe
xor
mov
fbld
sbb
mov
xor
push
or
adc
dec
lds
jae
andb
dec
inc
mov
loop
dec
lds
sbb
and
pop
popf
lea
push
add
mov
xchg
jno
pop
mov
mov
cmp
ss
mov
fstpl
mov
lahf
inc
test
xor
mov
add
cs
mov
into
jecxz
ss
sbb
shrb
in
inc
add
xchg
cltd
gs
adc
push
leave
test
mov
jl
push
in
mov
adcl
jno
leave
mov
aaa
out
pop
das
xlat
roll
hlt
mov
sub
xor
std
data16
pop
cmp
divl
cld
jle
pop
add
mov
imul
rcr
xchg
pusha
inc
dec
cmp
arpl
dec
mov
jmp
test
or
popa
push
xchg
lea
clc
ljmp
xchg
movsb
hlt
mov
dec
mov
xchg
inc
xchg
rorb
js
mov
or
and
or
dec
stos
add
sbb
push
sub
test
dec
mov
js
xchg
add
inc
jmp
pop
jae
popf
fdivrs
rcl
shl
add
or
or
les
in
adc
add
test
mov
sbb
mov
lahf
pop
notl
imul
repnz
cmp
arpl
sub
mov
or
xor
or
pop
push
mov
daa
rcrb
push
mov
xchg
pop
adc
mov
out
mov
faddp
mov
mov
rcll
dec
mov
adc
cmp
mov
stos
and
mov
pop
push
xchg
dec
mov
and
or
iret
stos
mov
cld
sub
fdivp
int3
jb
inc
pop
add
lds
aas
test
mov
jo
jle
and
cmp
mov
xor
xchg
or
and
jo
stos
lret
dec
loope
mov
pop
out
mov
int
jecxz
push
xchg
and
add
xor
cmpsl
xchg
jnp
pop
adc
sub
xor
movsl
push
mov
mov
jp
mov
stos
mov
and
mov
pop
mov
arpl
scas
adc
dec
mov
into
ja
out
cmp
mov
movsb
add
mov
xor
aas
fadds
lret
push
jo
add
clc
mov
adc
insb
arpl
sahf
lods
sarb
push
out
pop
inc
int
sti
shrb
addr16
lret
push
xchg
das
inc
and
outsb
and
xchg
lds
lock
fs
dec
in
pop
ret
xor
dec
sti
sub
mov
stc
fldt
rcr
mov
outsl
pop
xchg
cmp
push
int3
jmp
imul
mov
push
sbb
mov
fsub
or
test
jl
sahf
out
add
or
sub
mov
inc
adc
mov
jo
test
push
mov
or
push
inc
add
xchg
pop
fmul
aam
add
sbb
and
lret
push
xchg
bound
cmpsb
rolb
cmpsl
mov
mov
fnstenv
xchg
and
push
pusha
mov
sbb
dec
xchg
add
xor
out
push
jbe
int
pop
daa
lahf
outsl
inc
call
dec
mov
pop
or
sti
cltd
stc
jp
push
push
or
rcll
loopne
int3
std
jle
sbb
lods
adc
call
add
int
mov
int3
xor
out
and
in
in
jl
loop
ret
ss
pusha
jmp
jle
mov
ss
lods
lds
mov
movsb
mov
fs
pop
mov
aaa
jg
out
loope
gs
push
add
repz
scas
cmpsl
pop
and
scas
repz
jle
adc
or
fidivrs
or
mov
mov
xlat
cmp
cmp
cmpsl
shlb
je
xchg
movsl
xlat
shrl
pop
dec
int
dec
cmp
push
add
sbb
dec
gs
sahf
inc
in
xor
cld
je
or
loopne
fisubrs
imul
sbb
add
roll
xor
add
cmpsb
rcrb
pusha
xor
data16
rcll
xor
mov
fistl
pop
sub
adc
jbe
mov
push
cmpb
rcrl
dec
sub
hlt
pop
aam
mul
xchg
mov
lods
jbe
mov
or
lahf
ja
xchg
push
mov
push
repnz
or
mov
pop
inc
pop
dec
push
pop
ret
test
mov
or
xchg
and
cmp
mov
fildll
xchg
ret
es
ret
and
sbb
test
push
xchg
and
add
inc
push
dec
cld
pop
pop
mov
push
sub
xor
mov
cld
or
sbb
movsb
inc
mov
mov
jns
in
xchg
dec
push
test
inc
shl
lcall
pusha
and
insl
add
and
xor
push
dec
aam
aad
sub
lods
lea
pop
clc
repz
ja
ds
ljmp
cmp
das
xor
mov
gs
rcrl
repz
lds
cmc
inc
cmp
pusha
xchg
rclb
xchg
shlb
mov
mov
stc
insb
pop
mov
pop
outsl
add
sbb
mov
mov
test
es
jg
mov
cmp
xor
push
loop
lods
dec
loope
sub
movsl
dec
roll
les
into
outsl
cmp
mov
sub
fdivl
add
lret
cli
push
mov
sti
insb
push
sti
fbld
sub
outsl
sbb
jne
mov
pop
in
cltd
cmpsl
iret
es
dec
test
movb
repz
pusha
mov
and
sbb
hlt
mov
mov
dec
pop
sbb
sub
int3
mov
icebp
pop
jns
inc
cmpsl
mov
mov
int3
test
cmp
ljmp
repnz
fs
mov
stos
sub
subl
popa
aas
sbb
pop
xor
adcb
out
scas
adc
jmp
sbb
repz
mov
mov
cmpsl
daa
pushf
mov
shrb
cwtl
das
mov
imul
mov
lock
lods
push
fdivl
and
ret
cmp
jns
ret
mov
outsl
aam
mov
decb
xor
cli
clc
xor
test
push
sbb
xor
dec
xor
add
sub
lcall
adc
adc
jge
sarl
inc
pop
xchg
dec
sub
mov
ds
scas
pop
dec
cmpl
imul
pushf
inc
in
sub
leave
jl
fmuls
adcb
fmull
sbb
inc
and
mull
and
test
add
mov
sbb
imul
add
icebp
push
call
mov
mov
mov
js
andb
dec
int
or
iret
push
cmp
rolb
push
xchg
stos
adc
inc
arpl
and
fdivrs
fcmove
mov
jmp
add
dec
lock
mov
jle
jns
testl
xchg
in
mov
iret
repnz
test
jbe
sbbb
sbb
nop
sbb
sbb
scas
push
add
repz
dec
dec
dec
dec
stos
mov
repnz
xor
lret
inc
pop
or
jl
adcl
stos
pop
scas
add
scas
stos
cmp
and
in
mov
ljmp
jne
xchg
notb
xchg
sti
rcll
mov
shlb
add
test
mov
dec
xchg
xchg
add
repnz
aas
mov
cmpsl
xor
divb
lds
and
and
movsb
mov
add
pop
shl
stc
inc
mov
cmp
mov
dec
pop
cmp
mov
int3
mov
loopne
or
jecxz,pn
mov
ficoms
jne
lahf
imul
fisubrl
dec
aaa
daa
stc
cmp
test
dec
or
out
mov
sarl
sti
pop
and
xchg
sbb
lret
mov
mov
sti
aaa
rep
mov
dec
cmp
inc
fnstsw
xor
pop
stos
clc
dec
fcmovu
shl
out
xor
push
mov
testl
icebp
insb
lret
xchg
daa
mov
das
aad
mov
and
xor
sbb
mov
stos
push
mov
outsb
sbb
xchg
fisttpll
mov
dec
sbb
testb
xor
arpl
movsb
jno
ds
lds
add
xor
rcrb
cmp
sbb
loop
stc
lahf
mov
sbb
or
fstl
cmp
jle
popf
fidivs
jns
add
sbb
mov
fdivs
or
sbb
push
jg
and
add
pop
jns
cmp
xchg
aam
or
movsb
sub
aas
stc
cmp
out
mov
in
inc
mov
loopne
or
jns
cmp
push
inc
stos
imul
xchg
inc
jnp
fldt
xor
pop
xchg
stos
das
fdivrl
aas
insl
aad
out
sub
cmpsb
jle
push
pop
stos
mov
sti
xor
inc
out
push
inc
add
mov
je
lret
in
push
clc
mov
jge
hlt
push
ret
jecxz
fs
jbe
inc
cmp
mov
out
popf
in
data16
mov
shrb
sub
inc
add
ret
lock
mov
mov
xchg
dec
outsb
out
mov
mov
push
cmpsl
push
xchg
movsb
or
inc
cmp
xor
daa
ljmp
js
jae
stos
xor
jl
xor
daa
sbbb
into
xchg
sarl
inc
mov
pop
mov
inc
mov
data16
fs
mov
shll
outsb
mov
mov
mov
insb
test
cwtl
xor
insl
enter
mov
push
fimull
mov
adc
mov
push
push
mov
push
punpckldq
lahf
repnz
mov
stos
cwtl
out
rcrb
sub
sub
mov
xor
decl
jbe
ss
into
test
test
sbb
lret
mov
mov
daa
dec
stc
pop
test
rolb
cltd
mov
mov
jl
xor
or
pop
loopne
bnd
jmp
xchg
outsl
inc
xor
mov
aaa
adc
insb
lods
fwait
insb
popf
in
fwait
and
add
or
push
sahf
push
dec
imul
js,pn
push
xchg
repz
sub
lcall
test
jg
in
mov
adc
ljmp
xor
inc
mov
dec
lea
pop
pop
jmp
lcall
movd
in
inc
push
jo
mov
push
shll
mov
mov
push
and
pop
mov
enter
inc
push
inc
out
iret
cmp
outsl
sbb
fmull
jle
fs
jp
shlb
fists
inc
sar
pop
leave
icebp
push
ja
or
mov
lock
sub
loope
mov
add
insb
inc
pushf
gs
bound
push
xor
outsb
xchg
fcoml
out
pushf
lret
sbb
les
cmp
xchg
xor
add
push
pushf
ds
mov
call
lods
pop
mov
and
xor
movsl
test
mov
nop
push
in
mov
ret
dec
in
inc
clc
jbe
mov
dec
faddl
sub
fldcw
jno
inc
fcomi
cmpsb
mov
jo
mov
mov
fisubrl
fstpt
mul
dec
xchg
mov
mov
dec
dec
cmpsb
sbb
xor
push
push
sub
add
xchg
lock
jb
mov
ja
dec
push
jb
into
lea
jg
adc
inc
mov
lahf
mov
mov
and
es
addr16
ret
mov
inc
pop
cmp
jecxz
rcrl
and
mov
mov
dec
test
ja
inc
popf
dec
dec
out
lods
and
and
insb
mov
add
pop
icebp
or
lods
xchg
mov
xchg
mov
movsb
or
add
gs
sub
xchg
or
push
pop
pusha
push
scas
roll
repnz
aaa
pop
insl
push
in
mov
and
adc
or
jecxz
jle,pn
sub
stos
push
xchg
lret
dec
dec
dec
adc
push
lea
add
in
mov
mov
fdivl
jecxz
std
es
and
imul
or
negb
loop
shlb
fwait
add
fwait
loope
stos
sub
loope
mov
jp
mov
sub
sub
xor
jp
jg
fstpl
imul
lock
lods
mov
pop
sbb
xchg
inc
or
mov
les
or
or
fstpt
mov
cmpsl
lret
cmp
mov
cltd
dec
lahf
push
mov
dec
lea
f2xm1
sbb
movsl
jl
and
adc
sub
fucomp
outsl
test
call
pusha
cmp
and
movsl
sti
cmp
xor
rclb
jne
mov
loope
jge
dec
adc
mull
ficoml
fs
daa
jae
mov
clc
int
fwait
test
cmp
out
sbb
dec
xor
stos
jns
xlat
push
subl
sbb
cli
cwtl
aaa
les
movsl
iret
or
pusha
mov
xchg
sub
enter
mov
je
mov
jle
testb
aas
imul
movsl
addr16
push
lea
int3
loopne
push
gs
push
fdivp
xor
dec
mov
addl
cmp
jns
mov
nop
in
xchg
push
dec
mov
pop
mov
mov
sub
or
push
mov
xchg
add
pop
mov
cld
sbb
and
cmp
enter
jbe
push
inc
pusha
scas
xchg
adc
sbb
imul
inc
mov
jne
mov
push
daa
and
mov
cmp
lds
movsl
cmp
sub
insb
pop
dec
shrb
pop
xchg
cli
je
xchg
jmp
pop
icebp
jg
jmp
js
sbb
inc
nop
inc
cmp
aaa
pop
or
xorps
inc
dec
push
in
push
cwtl
sub
scas
or
stc
stc
je
mov
mov
jg
out
xlat
sbb
xor
pop
flds
imul
sub
inc
paddsw
popf
scas
gs
mov
sbb
push
negb
loope
pop
mov
test
mov
xor
mov
mul
pop
out
nop
push
sub
insl
fidivs
cltd
jne
fcompl
andl
jl
cs
xchg
jnp
lret
or
mov
pop
push
movsl
mov
cmp
mov
jg
mov
push
lcall
scas
shr
add
or
out
cmp
ss
pop
inc
mov
out
sbb
mov
fidivs
mov
ret
mov
jp
jns,pn
push
std
bound
dec
mov
shrl
push
jg
pop
icebp
out
movsb
stos
cmp
aaa
pop
jp
jb
mov
xor
mov
jmp
add
sarb
sahf
imul
orl
pop
icebp
mov
adc
mov
cli
js
mov
sbb
or
dec
xchg
and
push
ss
inc
incb
push
test
push
repz
aad
pop
ja
cli
adc
clc
pop
out
cmp
mov
dec
pop
jns
das
ja
push
mov
push
out
sub
rclb
loop
add
rorl
push
test
pop
add
test
repnz
jne
fmuls
lcall
xor
inc
les
mov
andl
icebp
push
lret
cld
lods
pop
test
stc
and
cwtl
mov
ds
cmp
test
push
jo
jno
lods
repz
mov
adc
lea
dec
pop
sbb
dec
arpl
les
fbld
ljmp
mov
ds
ljmp
scas
jo
mov
iret
sub
pop
and
push
in
sti
sub
xor
xor
jg
mov
xor
sub
rcr
add
push
test
sbb
xchg
push
xchg
or
cs
jne
mov
mov
sub
push
popf
mov
xor
mov
je
shlb
add
and
daa
fisubs
out
lret
ret
fbstp
mov
and
sbb
dec
inc
scas
test
in
xchg
sti
scas
cmc
mov
xor
xor
push
std
pop
out
mov
ss
xor
xchg
mov
call
inc
sub
xchg
hlt
arpl
sbb
push
pop
mov
out
add
adc
dec
in
push
cmc
sbb
xchg
pop
es
cld
shlb
dec
or
pop
xchg
and
xchg
jne
sub
cmpsb
fs
sbb
pop
aad
add
mov
ja
int3
cmp
pop
mov
pop
test
sub
les
jo
inc
lds
add
frstor
and
sbb
cmp
sub
inc
es
mov
and
add
sti
sub
push
dec
mov
mov
ret
iret
xor
outsl
jmp
stc
stc
and
mov
sub
scas
adc
or
lahf
mov
nop
add
pop
inc
pop
int
jge
jg
sbb
mov
seto
popa
gs
jmp
add
dec
cmp
lea
notl
mov
fwait
or
es
ljmp
cmp
xchg
andl
rol
cli
arpl
and
mov
scas
aaa
pusha
into
mov
ret
and
push
test
mov
mov
jno
sub
fcomps
mulb
mov
sahf
sub
xchg
xchg
sub
test
mov
xor
cld
lret
fcomp
das
push
shll
jecxz
pop
cmp
iret
aaa
adc
push
shrb
push
push
or
mov
pushf
adc
ret
inc
insb
cmp
push
popa
in
mov
sbb
idivb
and
jo
stos
xchg
fwait
out
ret
inc
mov
mov
leave
rorb
sub
sub
dec
fbstp
ret
dec
sti
adc
xchg
jb
popf
or
daa
jbe
mov
xlat
xor
xor
scas
cmp
imul
call
sti
mov
iret
xchg
pop
adc
mov
rcl
cltd
add
mov
fstps
adc
popf
andb
or
ja
sahf
movsl
xorl
push
xchg
in
ljmp
and
jne
into
clc
pcmpgtd
loopne
sbb
push
push
out
scas
cmp
les
in
fistpl
xchg
imul
pop
in
jne
test
lret
data16
loop
push
rol
add
out
inc
pop
fcoml
sbb
sbb
rolb
rcl
divl
xorl
jecxz
leave
mov
ss
mov
add
jnp
fildll
inc
int3
cmp
mov
inc
out
out
inc
rcrb
and
and
add
xchg
ljmp
xor
insl
mov
xor
in
shrl
testb
pop
inc
xchg
dec
push
jnp
sarl
or
out
mov
test
ljmp
dec
insl
rclb
js
sbb
sbb
dec
mov
sbb
mov
xchg
cmp
cli
div
mov
or
jecxz
int3
insb
jne
jg
sub
pop
xchg
push
mov
fistpll
cli
arpl
aad
pop
push
mov
jnp
out
mov
stos
lea
push
into
inc
jl
jae
xor
divb
outsl
adc
xor
xor
or
jne
mov
pop
inc
or
push
ss
jg
aam
add
andb
lret
mov
ret
sub
jecxz
or
mov
js
scas
mov
jnp
adc
xor
ja
or
outsb
mov
sbb
cmp
loopne
push
jge
fmull
clc
iret
pop
aaa
frstor
jmp
ret
lcall
push
sub
insb
or
out
getsec
out
dec
xchg
lods
enter
jecxz
cmp
sbb
jl
in
imul
insb
jae
mov
cmp
ja
cmp
test
shr
scas
lret
xor
mov
pop
aam
xor
subl
jp
fiadds
jno
mull
or
sbb
fistpl
cmp
imul
dec
cmpsb
rol
mov
dec
sahf
lds
push
push
add
insb
mov
out
gs
subb
mov
cmp
movl
jb
hlt
mov
sub
inc
lea
adcb
and
jl
jnp
push
rolb
dec
xor
or
cmp
sub
ret
mov
mov
fmulp
adc
test
pusha
faddp
mov
jne
cmc
rclb
hlt
and
add
imul
out
popf
loop
pop
pop
sti
or
and
mov
xor
ljmp
push
inc
aaa
fs
sbb
fidivrs
sbbb
ja
je
addl
nop
test
mov
adc
pop
notb
sub
stc
mov
ret
adc
cmpsl
fstpl
jne
and
mov
lds
lcall
mov
mov
insl
les
outsb
xchg
or
xor
jo
das
pop
cmc
leave
mov
aad
and
out
js
adc
sar
sbb
sbb
xor
into
adc
rcrb
mov
jl
xor
xor
sbb
or
pop
xor
adc
pop
sbb
dec
xor
mov
add
xchg
cmp
into
inc
mov
jae
mov
mov
xorb
and
lcall
sbb
leave
mov
add
loopne
cld
daa
clc
xchg
into
lods
aam
xchg
out
dec
sbb
std
flds
int
push
sub
pop
and
adc
inc
int
and
fstps
sub
dec
inc
sahf
je
imul
ja
stc
sbb
or
int
ds
scas
push
call
adc
mov
repz
dec
inc
add
outsb
xchg
dec
leave
dec
pop
pop
and
inc
loopne
xchg
sbb
lret
jo
lods
inc
push
xor
pushl
aad
jnp
aas
fdivr
rcrb
mov
fsubl
sbb
xchg
bound
fiadds
push
sub
out
in
pusha
cmc
xchg
xchg
push
lods
inc
push
add
sarl
add
cmpsb
sub
sub
fildll
dec
pop
loopne
call
in
out
popa
fsubs
sub
scas
xchg
xlat
cmc
inc
sbb
add
stos
mov
mov
jmp
mov
fldcw
insb
mov
pushf
adc
lret
mov
or
inc
in
cwtl
jbe
jb
sbb
push
sbb
mov
cld
loop
xor
push
push
add
iret
fnstenv
or
pusha
popf
std
std
lahf
enter
sbb
mov
push
mov
or
testb
mov
xchg
rolb
pop
push
lret
nop
mov
addr16
divb
ja
sub
cmp
pop
push
pusha
lret
sub
lods
scas
addr16
adc
jns
push
sub
ds
add
xchg
push
loope
and
dec
xor
sbb
xchg
xchg
jmp
shl
and
jecxz
loop
cvttsd2si
mov
lea
xchg
daa
jno
jns
lahf
pop
mov
les
jle
and
pop
subl
adc
test
cli
lret
push
sbb
cmp
pop
add
mov
nop
sar
sahf
and
pushf
cmp
out
loopne
dec
je
cmpl
loop
jno
xor
aaa
mov
iret
lods
aas
inc
orb
hlt
or
push
call
fsubr
movsb
inc
push
ror
and
pusha
fldl
push
xchg
mov
mov
inc
xchg
cmp
mov
pop
sbb
sbb
call
pop
push
push
repnz
cmp
lcall
sbb
outsl
inc
xor
insb
sar
pop
fstp
mov
inc
loop
jne
int
pop
mov
icebp
and
aam
stos
or
jo
cmp
shlb
cmc
testl
and
cltd
icebp
adc
shrb
cwtl
mov
sub
mov
repnz
in
leave
pop
push
xchg
xchg
test
cmp
sub
data16
mov
or
cld
cltd
mov
popa
dec
cmp
rolb
mov
sub
lret
lea
lcall
xor
sub
imul
cmpb
repnz
outsb
sub
or
cmp
test
or
fmuls
pop
jle
push
add
fcoms
xchg
shlb
pop
pop
push
adc
inc
mov
adc
dec
cmpb
fcomps
cld
std
scas
jmp
mov
adc
push
fbld
lea
adc
dec
push
pop
push
push
xchg
repz
dec
repnz
jmp
stc
out
cmp
xor
int
xor
ret
jmp
not
dec
sbb
lret
pop
xlat
add
xchg
xor
cmc
cmp
push
inc
insl
inc
mov
pop
cmp
fsubrl
imul
enter
pop
push
or
mov
arpl
push
and
push
dec
cmp
lds
sbb
std
clc
or
movsl
popa
and
icebp
xor
rcrl
dec
pop
dec
mov
iret
lahf
loope
jmp
fistpl
xor
or
daa
or
cmp
add
movl
es
or
pop
push
xor
fstpt
push
lea
xor
out
jge
iret
cmp
lock
xchg
xlat
ljmp
jno
mov
mov
std
sarb
aas
lods
and
jns
sbb
pop
sarb
data16
movsl
jo
jns
cmp
scas
and
in
mov
and
inc
push
popa
subb
and
xlat
pop
sbb
movsl
shrb
mov
ja
lock
mov
add
sub
test
add
and
lret
hlt
test
inc
or
rorl
mov
into
mov
push
pop
push
jno
mov
rclb
mov
loopne
movl
pop
and
push
rolb
in
sbb
mov
enter
sub
fisubrl
in
js
mov
mov
sbb
cltd
push
stos
imul
inc
into
mov
mov
xchg
xlat
add
mov
jecxz
sub
clc
add
or
mov
fucomi
pop
add
inc
lahf
adc
mov
and
fisubrl
mov
aas
cltd
xchg
or
pop
jo
in
sub
pop
sub
mov
cs
jg
sbb
sbb
or
movb
or
roll
or
sub
jae
pop
sub
xchg
rcrb
iret
filds
jp
arpl
add
pop
sahf
rcl
out
mov
xchg
daa
in
pop
cmpsl
pop
add
in
jp
shrb
cld
rcrb
mov
push
add
jae
cli
pop
hlt
aas
xlat
loopne
jl
push
push
sbb
push
arpl
cmp
adc
sub
lret
test
adc
xlat
push
add
out
xor
mov
sbb
xlat
cld
push
mov
sub
ja
insb
push
jp
in
adc
jmp
mov
xchg
mov
mov
mov
pop
test
add
lock
aad
dec
adc
cmpsl
xor
pusha
or
mov
scas
jns
rclb
cmp
cmc
mov
push
into
pop
mov
sub
or
out
rcrl
or
shrb
mov
mov
lock
push
fcmovu
push
xor
icebp
push
mov
pop
cmp
or
jl
jmp
or
xor
es
fwait
push
ja
add
test
mov
sbb
jge
out
stos
jle
lcall
mov
lret
dec
inc
push
sub
cli
pop
adc
jmp
repz
and
sbb
insl
arpl
daa
xchg
daa
int
jno
test
fs
out
mov
stos
dec
and
insl
pusha
inc
push
fsts
or
jecxz
and
adc
inc
and
cmp
sbb
gs
xor
pop
and
mov
test
test
mov
xor
jb
xchg
or
cli
mov
test
xor
xchg
loope
mov
test
cmc
fsubrl
lcall
aam
leave
cmp
das
push
mov
js
in
mov
gs
jmp
mov
imul
inc
addl
adc
es
or
aas
fbld
test
js
rcrb
pop
dec
lret
inc
mov
imull
and
outsb
mov
mov
loope
pushf
insl
xor
stc
rcrb
loopne
das
mov
jmp
inc
sub
dec
sub
lcall
pop
test
push
sbb
aaa
sub
add
decl
sub
fisubrs
xchg
jns
cmpl
push
jg
add
cmpsb
dec
push
xchg
sbb
mov
hlt
stc
addl
imul
in
scas
rcrl
adc
sub
jo
xor
push
pop
push
mov
loop
xor
pushf
ror
dec
add
jecxz
jmp
je
pusha
loop
mov
sub
add
lahf
push
jne
mov
adc
call
lds
mov
out
mov
or
pop
jmp
dec
fldt
or
scas
shlb
lret
loop
mov
fistpl
and
call
test
pop
call
loope
or
jns
jo
hlt
jp
mov
sub
xorl
into
ror
pop
sub
dec
jge
ja
push
push
test
or
movsl
sbb
jecxz
jns
repnz
lcall
jecxz
xchg
pop
repnz
dec
lret
sbb
test
jo
shr
inc
ljmp
rol
push
out
xor
or
xor
rcrl
pushf
cmp
add
and
ret
jl
clc
or
mov
rorl
or
add
js
ficoms
xor
add
stc
pop
xchg
lahf
mov
vfnmaddps
pop
inc
mov
ljmp
shr
outsb
das
lret
or
sbb
test
cmp
std
push
and
hlt
aas
movsl
bound
fnstenv
arpl
xlat
vpsllq
int
ror
mov
leave
jno
and
popa
inc
out
aas
ss
cmp
daa
popa
aaa
dec
sarl
pop
shrb
sub
jmp
push
rolb
sbbl
push
mov
ja
pop
inc
popa
or
out
stos
scas
fwait
adc
nop
dec
jo
stos
mov
cmc
cmp
adc
mov
adc
cmp
mov
cmp
add
xlat
mov
push
das
dec
lret
xor
sbbl
push
push
insl
xchg
movsl
mov
adc
jg
gs
ljmp
repnz
push
jecxz
mov
clc
enter
jb
mov
roll
jns
mov
jg
mov
test
sub
cmpsl
xor
and
jmp
gs
inc
xlat
xchg
out
rcrl
movsb
mov
jecxz
pusha
jae
inc
sbb
mov
mov
int3
jne
das
dec
or
mov
insb
sbb
stos
loope
push
repnz
aaa
scas
andl
mov
aam
popl
hlt
xchg
insb
aas
inc
fnstenv
mov
test
lock
les
add
xor
lahf
sbb
add
popa
pop
dec
jne
sbb
test
stc
out
mov
test
iret
adc
mov
ret
paddq
bound
popa
jle
adc
aam
lret
sub
popa
lods
pop
pop
pop
inc
addl
inc
sub
and
mov
xor
xchg
pop
fimuls
mov
aas
lret
cltd
cmp
push
and
pop
push
in
cmp
iret
aas
dec
push
sbb
fildll
test
incl
in
call
sub
inc
pop
lahf
push
rcrb
dec
mov
int
cmp
rolb
gs
mov
sub
popa
in
mov
dec
xchg
insl
jle
mov
popa
not
bound
jbe
les
jnp
or
filds
xor
cltd
and
fs
sbb
inc
xchg
out
mov
cs
lds
loope
rcr
mov
daa
sub
sub
push
mov
sbbb
inc
lretw
jns
addr16
add
test
subb
lock
pop
add
push
aad
inc
movsl
call
inc
fmuls
pop
sbb
scas
popl
ficoml
aaa
ret
cmp
xor
xchg
add
dec
push
jl
mov
pusha
setl
scas
pop
jecxz
les
add
pop
aaa
cmpsb
arpl
or
movsl
cmpsb
xchg
lret
lock
dec
loope
inc
inc
fs
inc
dec
in
adc
outsl
lds
sub
sbb
add
addr16
adc
das
enter
or
jne
jb
bnd
sbb
push
xor
int3
fistpll
out
mov
mov
lahf
cmpsb
lahf
ret
lret
adc
dec
fidivrl
pop
cmp
xchg
lock
jle
dec
pop
dec
jge
cld
in
imul
std
add
idivl
sub
adc
mov
pop
lds
mov
out
bound
repnz
popf
push
sbb
ja
pop
je
pusha
ljmp
movswl
cmp
jno
cmpsl
jae
inc
scas
and
dec
adc
jg
jnp
sahf
push
insl
in
push
and
not
sbb
or
push
jmp
loopne
jne
adc
xchg
mov
fsubrl
scas
xlat
in
jle
push
mov
mov
mov
pop
js
ret
push
je
lock
rol
loop
cmp
pop
add
rcrb
cmp
mov
pop
xchg
mov
mov
out
jmp
mov
repz
pop
sbb
call
fisubrs
jne
mov
xorl
xchg
js
lods
adc
xor
push
out
fcoml
mov
sahf
jo
je
bound
pop
mov
adc
cli
jecxz,pt
mov
pushf
xorb
push
das
in
in
fyl2x
negb
lds
loopne
out
jo
dec
nop
andl
scas
int
enter
and
data16
cwtl
pusha
dec
cmc
data16
push
push
sti
daa
movsl
xchg
outsb
or
sbb
mov
punpckhdq
data16
popa
subb
cmp
mov
sub
dec
or
outsb
xchg
sahf
pop
pop
lods
les
push
ret
mov
add
aas
mov
mov
xchg
and
popf
iret
test
out
aas
adcb
dec
rolb
fdivrp
push
adc
test
ficoml
push
adc
jae
test
imul
ret
dec
pop
nop
and
lret
xor
and
into
push
or
cld
shlb
push
aaa
fimull
leave
lcall
xchg
and
out
insl
cwtl
sbb
scas
or
movd
icebp
cli
ret
loop
xchg
daa
cld
pop
out
xor
enter
add
mov
add
pop
sbb
push
or
std
jp
fsubs
stc
jge
shlb
movsl
push
mov
hlt
enter
test
sbb
shll
or
clc
pusha
mov
sub
mov
ret
lcall
ljmp
and
mov
adc
outsb
cmp
push
mov
int3
adc
jg
repz
aas
add
jmp
repnz
push
js
ja
fucomip
dec
imul
push
aaa
dec
outsb
mov
fcompl
inc
hlt
jne
out
sbb
movsb
inc
mov
lret
daa
shlb
in
jae
xor
insl
test
cmpl
inc
fidivrl
sbb
ficoms
and
in
bound
cld
arpl
cwtl
mov
jae
and
lods
lock
jg
mov
mov
and
mov
enter
sahf
adc
imul
and
mov
cmpb
inc
shlb
sbb
push
xchg
test
negl
adc
or
adc
hlt
scas
mov
dec
addr16
mov
fisttps
out
xchg
and
mov
repnz
fwait
sti
sbb
push
dec
mov
rorb
or
cmp
xchg
sbb
fwait
sub
inc
ret
outsb
mov
pop
sarl
lcall
std
stos
adc
push
cmpsl
xchg
or
add
shll
inc
addr16
loopne
subb
adc
sub
inc
and
jns
lods
adc
pop
insb
stos
iret
inc
outsl
jge
dec
pop
das
loop
or
and
repz
mov
xor
push
pop
xchg
roll
or
daa
mov
sbb
into
lcall
mov
jae
xchg
test
movsl
test
cmpsl
lods
or
incb
mov
or
and
adc
dec
xor
gs
cmc
jae
xor
xor
inc
dec
mov
mov
push
test
dec
sti
mov
mov
les
push
insl
mov
mov
dec
mov
xor
arpl
repz
repnz
xorb
stc
addb
out
sbb
shlb
insl
enter
jae
push
test
cmp
aam
inc
push
xchg
mov
mov
mov
enter
adc
mov
sti
push
jl
dec
mov
pop
lock
leave
imulb
js
fbld
ds
mov
xor
jns
scas
add
push
stc
xor
and
arpl
xchg
cmpsl
je
fisttps
xchg
xorb
xchg
dec
jae
das
jmp
mov
push
ss
mov
hlt
dec
enter
sbb
sbb
xchg
popa
xchg
scas
dec
scas
cs
aas
icebp
mov
arpl
mov
or
dec
push
xchg
packsswb
pop
jl
inc
testl
jns
push
clc
push
cmpsb
mov
int
dec
cs
int
xor
mov
jmp
out
popa
shl
jno
leave
pop
or
jne
adc
imull
cmp
push
adc
adc
ret
lock
inc
cs
mov
or
pop
push
rclb
or
stc
mov
repz
fcomp
jbe
jmp
jecxz
les
and
mov
ds
sbb
ret
loopne
aaa
pop
and
inc
loopne
ljmp
scas
stc
int3
insl
outsl
xchg
push
mov
and
ret
sub
cmpsl
das
nop
push
test
xchg
aam
sub
sahf
ds
xor
fwait
ja
icebp
nop
shll
sub
cmp
icebp
iret
mov
xor
adc
les
xchg
in
cmpsb
xor
imul
std
pop
xchg
lahf
jge
cmp
add
rcr
fcmovne
mov
inc
push
xchg
dec
adc
out
push
cltd
std
call
jbe
sbb
push
sbb
mov
ret
xor
mov
lahf
dec
dec
inc
push
xchg
hlt
imul
sbb
xor
jg
ret
jp
xor
sbb
pushf
push
push
pop
ret
test
pop
rcr
fisttps
test
les
ja
sti
out
shl
jp
cmpl
les
inc
push
scas
in
mov
ss
or
test
loope
and
and
sbb
or
and
jbe
ret
jp
push
test
mov
sar
fisubrs
pop
pop
std
push
xchg
ss
movb
cmp
pusha
mov
mov
xlat
aaa
jmp
pop
shr
fisubs
xor
xchg
dec
fbstp
cmpsl
bound
mov
dec
ds
mov
addl
and
es
aas
sub
cld
out
mov
int
test
sub
arpl
sub
jle
rcrl
mov
in
push
xor
lcall
subb
mov
in
xchg
sbb
in
in
testb
aam
mov
mov
lret
test
loope
xor
mov
mov
ret
push
dec
mov
cli
lret
fistl
in
push
loop
dec
adc
dec
mov
mull
xchg
mov
cmp
pop
cwtd
xor
push
add
dec
imul
aas
int3
int3
dec
push
imull
cltd
sbb
int
data16
sub
mov
sbb
mov
adc
cs
rorb
and
add
ss
push
add
mov
fimuls
push
sti
js
cmp
jmp
out
mov
sbbl
nop
sarl
add
cmc
mov
lret
pop
and
std
inc
push
cld
fwait
xor
push
fdivs
inc
push
add
cmp
mov
adc
inc
aas
jnp
cmp
add
addr16
xchg
fstps
insb
lock
push
icebp
mov
mov
cld
faddl
xor
mov
sub
xor
and
dec
jl
rcrb
mov
ret
mov
arpl
and
jmp
dec
daa
call
jnp
jg
loop
mov
cmp
xor
inc
in
fldt
push
mov
notb
inc
pop
xchg
jae
outsl
adc
insb
cmp
jl
or
pop
lods
outsb
mov
jmp
stos
mov
fidivs
loop
mov
test
pop
int
fstps
mov
jns
cmc
sarb
mov
call
cmp
cmpsb
pop
inc
popf
and
xchg
cmp
jle
mov
daa
push
and
jl
aam
stos
inc
lret
ret
sbb
mov
cmp
iret
or
add
inc
sahf
lcall
cld
add
mov
in
rcrb
test
test
mov
cmp
mov
inc
sbb
mov
jg
add
cli
cmp
pop
in
imull
pop
add
test
mov
pop
push
xor
les
shl
cmp
ja
shl
sti
ret
ds
pop
fimuls
inc
mov
mov
cwtl
mov
cld
mov
test
dec
addr16
mov
clc
mov
pop
mov
out
mov
and
pop
int
pop
cltd
and
push
call
sub
in
jno
cmp
add
ret
cli
and
and
cmp
xchg
ss
pop
test
test
enter
jle
test
push
sub
inc
sbb
or
push
rcll
mov
mov
outsl
cmpsl
mov
out
xlat
cmpsb
sbb
pop
xchg
jp
pop
shrl
repz
subb
pop
mov
jo
daa
rolb
mov
adc
mov
fimuls
mov
sti
cmp
movsl
scas
cmc
mov
push
sbb
push
dec
xchg
shlb
leave
repnz
loopne
ret
xchg
nopl
fdivr
dec
outsl
pop
mov
pop
aas
int3
adc
jecxz
sub
rcrb
ffreep
cmpsb
pop
xchg
push
mov
mov
jnp
inc
dec
or
cmp
addr16
les
xchg
or
pushf
out
mov
arpl
inc
pop
mov
xchg
dec
mov
pop
pusha
aaa
lds
cli
cli
add
lods
out
xor
adc
dec
adc
add
ss
jno
sub
push
pop
jbe
or
mov
inc
icebp
scas
stc
in
xchg
mov
frstor
cs
mov
jbe
leave
sbb
dec
add
sbb
shrl
inc
mov
sti
jge
and
and
mov
xchg
mov
mov
sub
pop
sbb
cmp
push
mov
sub
test
pop
push
push
jne
or
pusha
mov
clc
inc
push
cmpsl
ss
add
jg
mov
cmp
sahf
bnd
cmpsb
or
sbbb
fs
orl
outsb
jno
inc
cs
aas
in
jb
push
scas
mov
and
mov
test
js
inc
scas
mov
pop
mov
incl
dec
inc
push
or
jmp
adc
jae
jle
ret
adc
or
scas
in
push
cs
sub
push
jb
lds
movsb
das
int3
jecxz
push
and
push
inc
movsb
imul
xor
mov
sub
rorl
lods
std
arpl
pop
mov
mov
stos
sarl
jle
js
jae
jmp
lods
mov
stc
arpl
and
in
inc
ficoms
sbb
in
adc
clc
lret
aad
lods
out
iret
push
cmpsb
dec
add
ficompl
cld
push
leave
push
in
cli
jae
shl
sbb
inc
das
ljmp
les
sbbl
inc
mov
loop
out
pop
push
xchg
fldl
scas
mov
push
es
ficoms
pop
or
cmp
shrl
xchg
icebp
nop
sub
int
adc
dec
or
pop
imul
popf
cmp
in
push
pop
mov
jno
call
add
mov
lods
jb
lods
out
cmpsb
xlat
call
push
sti
and
dec
cmpsl
fisttps
push
adc
sub
mov
leave
dec
adc
mov
adc
mov
lret
mov
push
pop
cmp
dec
std
cld
sbb
xor
add
aaa
pop
sbb
mov
sub
sbb
push
push
sbb
fmull
push
icebp
fcmovne
sbb
mov
inc
pop
pinsrw
jo
out
ror
mov
adc
sub
pop
cld
lds
xor
pop
ja
and
and
push
add
and
pop
mov
dec
lods
mov
adc
push
sar
add
mov
pusha
and
dec
xor
cmp
push
sub
pop
insb
mov
lock
hlt
jecxz
stos
mov
imul
mov
out
sub
dec
cmpsl
loopne
lret
pop
mov
sti
lret
fldt
push
insl
adc
ljmp
sub
scas
jmp
mov
dec
stc
push
dec
cmp
cmp
jno
cmpsl
inc
stos
cmpsb
sarl
adc
cmpsl
sbb
jnp
add
mov
sahf
pop
xchg
sarb
xchg
push
fs
add
lea
jbe
adcb
add
fnstcw
scas
fwait
cmp
push
xor
insl
aam
shlb
push
cmpsb
int3
mov
fisubs
movsb
inc
sbbb
mov
lea
in
lods
xor
test
mov
xor
push
sahf
adc
xchg
sbb
dec
outsb
push
aad
popf
loope
mov
push
jo
mov
mov
cmp
jecxz
sub
test
or
push
or
lret
addl
das
insl
and
jmp
cmpsb
rorl
lea
fwait
and
int3
cmpl
sub
cmp
push
cmc
xor
out
push
fildll
loope
adc
and
insl
inc
mov
and
jg
fisttps
mov
mov
xchg
dec
pop
inc
jne
test
int3
pop
xor
sub
into
insb
fiaddl
pop
movsl
repz
aas
dec
adc
in
push
cmpsl
xor
stc
dec
in
cmc
jge
mov
fcmovnbe
or
loopne
dec
mov
sub
nop
hlt
mov
test
mov
adc
adc
push
xchg
fimuls
inc
hlt
dec
sub
mov
enter
and
pop
outsb
in
adc
sub
ffreep
mov
addl
repnz
loopne
test
sbb
shr
lcall
xor
jbe
inc
inc
pop
xor
fnsave
jp
cwtl
xchg
stc
icebp
xor
pop
call
mov
xchg
out
jae
jmp
test
stos
jge
add
pop
loopne
push
loopne
push
inc
dec
jecxz
fldcw
inc
adc
mov
mov
xchg
jmp
sbbl
adc
stos
daa
adc
fs
push
lret
int3
mov
pop
push
xor
push
mov
lods
jge
and
sbb
cmc
push
xchg
cmp
btc
cmp
movsl
lret
imul
and
mov
xor
push
pusha
leave
xchg
rol
pop
call
inc
mov
inc
mov
icebp
shlb
mov
mov
sub
push
repnz
inc
add
cmp
mov
es
cmpsb
imul
into
rorb
xchg
and
push
xchg
shr
mov
mov
fisubl
sbb
repz
outsl
jae
sub
clc
rcll
pusha
daa
xor
jmpw
pop
dec
fldcw
mov
mov
xchg
and
or
outsb
cwtl
psubusb
cld
jmp
lahf
lods
inc
adc
mov
fwait
rcrl
loope
addr16
xchg
jg
ret
mov
pop
test
pop
in
enter
adc
push
push
adc
clc
inc
push
repnz
or
push
sub
push
loop
ficompl
sbb
scas
mov
insb
adc
repz
loopne
sub
add
xor
test
aam
inc
fidivs
nop
subb
movsl
dec
xlat
popf
mov
sub
xor
adc
sbb
cltd
mov
adc
mov
jns
jo
out
dec
jmp
mov
mov
pop
jge
pop
push
cltd
adc
add
jecxz
mov
pushf
adc
xchg
cmp
scas
std
movsb
or
vpsubb
pushf
mov
mov
adc
dec
sbb
ret
pop
jmp
ret
test
mov
arpl
ja
fdivrl
add
xchg
js
xchg
adc
and
mov
mov
dec
jecxz
out
adc
mov
outsb
sbb
or
and
ljmp
push
and
jecxz
mov
ljmp
fistpl
jg
or
mov
out
adc
jb
data16
pop
or
xchg
xlat
stos
jecxz
stos
scas
fbld
dec
rclb
arpl
rorl
pop
mov
mov
sahf
data16
or
or
cmp
xchg
pusha
or
aaa
sbb
std
pop
movsb
mov
aad
les
xchg
in
in
dec
or
pusha
adc
sbb
or
mov
jns
xchg
call
lods
loop
push
mov
lods
cmp
inc
cmp
sbb
xor
jbe
in
cltd
mov
add
jmp
aaa
xchg
push
xor
cmp
cmp
enter
sub
in
sbb
lret
enter
arpl
gs
mov
fidivs
lret
mov
lock
mov
add
test
mov
out
lods
cmp
fbstp
ror
add
xor
test
lahf
and
or
adc
sahf
mov
sbb
push
cmpsb
pushl
adc
hlt
ljmp
jbe
das
dec
and
cmc
pop
pop
mul
outsl
pop
mov
inc
mov
jae
add
dec
hlt
rorb
sub
mov
lea
movsb
inc
xor
dec
sbb
lods
sbb
or
mov
push
shlb
xchg
bnd
push
mov
ds
inc
mov
pop
ljmp
mov
xor
push
pop
xchg
dec
cltd
push
jge
push
pop
inc
stos
push
sbb
cmp
popf
outsb
mov
jge
outsb
xchg
sahf
or
scas
jae
pcmpgtd
rcl
pop
fadds
push
out
lods
and
add
cmp
dec
inc
sub
pop
push
xlat
pop
xlat
mov
xchg
mov
movsl
sub
arpl
sub
rcll
push
in
aam
loopne,pt
mov
cmpsl
mov
add
dec
mov
add
stc
jle
mov
add
push
cltd
mov
add
push
jp
iret
mov
popa
hlt
int3
and
jg
subl
pop
cli
xchg
jbe
xchg
enter
int3
inc
addb
popf
fpatan
ja
push
jp
cmp
sub
pop
push
cmp
in
jp
adc
add
jne
icebp
aaa
and
inc
int
test
outsl
inc
adc
mov
push
add
cmp
push
fadd
aam
push
and
sub
adc
push
push
test
mov
outsl
inc
and
js
add
xor
jno
dec
mov
and
outsb
mov
fistpl
jle
jle
add
pop
out
mov
sbb
movsb
xchg
mov
mov
mov
xchg
shrb
jge
aaa
pop
or
fisttpll
inc
das
fwait
sub
dec
movaps
cmp
xorl
push
jns
jns
push
jae
pop
repnz
loope
mov
cmpb
inc
add
sbb
push
xchg
dec
mov
xor
add
int
incb
and
pop
xor
or
jp
hlt
inc
sarb
out
shll
cmpsb
icebp
inc
test
fidivrl
or
mov
and
bound
icebp
cli
pop
je
sbb
sub
out
sub
mov
scas
lds
rorl
dec
jmp
dec
jo
lods
ss
out
int3
xchg
sub
andl
add
mov
mov
fwait
xor
loope
lods
xor
lcall
sbb
test
fs
mov
out
xor
dec
dec
pushl
pop
adc
xchg
add
rol
js
test
and
std
push
aad
in
cmp
sub
sti
cmpsl
mov
inc
mov
in
push
stos
mov
std
lods
ja
outsl
add
imul
lret
push
or
push
pusha
mov
jno
std
and
jle
cmp
sbb
call
dec
push
adc
cmpb
lods
mov
xchg
cmp
outsb
std
dec
out
out
adc
test
out
bound
out
pop
pop
push
fmuls
xchg
xor
mov
int
cli
mov
loop
jnp
fiadds
mov
clc
dec
push
fsubl
fidivl
fdiv
xchg
jecxz
stc
cs
loopne
pop
sar
mov
or
lods
sti
les
in
movsl
fdivrp
fbstp
jmp
jl
adc
inc
pop
pop
call
cmp
loope
bound
jle
cs
outsl
subl
lahf
or
cmp
sbb
in
mov
mov
push
cli
fisttpl
fidivrl
mov
mov
fisubs
popf
add
setnp
fists
mov
cmpsb
je
push
inc
adc
lahf
cmpsb
scas
pop
xchg
pushf
jne
adcl
add
adc
mov
xchg
inc
test
push
mov
push
xor
scas
popf
in
adc
test
dec
das
dec
sub
test
jecxz
push
cltd
fwait
and
push
jp
pushf
sar
in
mov
cmpsb
inc
imul
and
mov
jg
xor
and
mov
das
inc
lds
mov
adc
jg
daa
mov
push
adc
cmp
jp
shll
inc
rorb
pop
mov
into
bound
aam
push
hlt
inc
lcall
fucom
das
imul
outsb
sub
push
jmp
mov
fiadds
lods
pop
dec
stc
scas
or
sbb
adc
or
roll
imul
pop
loop
mov
mov
outsl
sub
repnz
pop
sub
stos
subl
jo
mov
in
movl
mov
icebp
jnp
cmpsb
mov
fldcw
or
pop
rclb
sbb
sbb
icebp
nop
pop
and
sbb
sbb
sub
sahf
test
jne
dec
pop
outsb
jno
ds
mov
ds
fwait
pop
sbb
test
mov
mov
imul
int
les
cmp
ds
movswl
sbb
gs
int
andl
cmpsb
daa
xor
cmpsl
adc
lods
cli
out
push
jmp
adc
and
aad
std
inc
loop
adc
stc
push
push
in
xchg
filds
add
xchg
dec
loop
xor
loopne
add
hlt
push
push
pop
inc
mov
mov
sub
mov
push
add
outsb
imul
push
mov
stos
xchg
mov
dec
out
and
jmp
decb
add
call
sti
mov
fcoms
inc
mov
andb
or
sub
xchg
cmpsl
mov
jmp
adc
cld
pop
imul
fsts
xor
outsb
jo
push
test
pop
lock
cmp
mull
or
and
pop
or
test
lret
test
cwtl
popa
xor
stc
push
insl
mov
cltd
daa
sbb
jp
add
hlt
mov
dec
enter
shr
add
rorb
insl
jecxz
popf
pop
mov
adc
insl
out
insb
popa
jg
inc
fdivrs
sbb
pop
mov
cltd
test
lods
pop
cld
addl
cwtl
jmp
out
fmull
outsb
test
push
mov
pusha
fildll
cld
inc
inc
cmpsl
ds
inc
xchg
sub
inc
lods
fbstp
xor
inc
sbb
jl
pop
inc
xor
cltd
cmp
add
jbe
lret
and
mov
pop
addr16
push
or
jnp
test
lods
fstp
mov
pop
int
in
cmp
adc
push
repnz
insb
push
adc
leave
inc
std
pop
push
adc
js
dec
cmpsb
les
mov
inc
push
mov
add
jnp
xchg
inc
pop
leave
imul
mov
aas
pop
or
inc
andb
or
mov
jge
shlb
mov
jno
lds
sbb
adc
bound
adc
mov
pushf
out
mov
xor
call
aam
inc
add
popa
testb
call
xor
aad
loop
push
inc
jge
xchg
sbb
popa
test
mov
sbb
dec
or
mov
cmp
cmp
or
lds
mov
fwait
cmp
mov
into
jecxz
addl
cld
test
cwtl
sub
mov
test
pop
add
scas
adc
in
xchg
outsb
fdivr
xchg
push
lds
mov
aam
sbb
pusha
insl
out
push
pop
ja
fbld
pop
ds
mov
ljmp
ds
jae
ficomps
mov
push
test
nop
mov
and
push
sbb
gs
and
sti
mov
cmp
xor
and
out
test
xlat
xor
sbb
push
mov
push
adc
sbb
sahf
sub
mov
push
into
push
push
cmc
fisubs
lcall
dec
or
std
leave
pusha
cli
mov
or
in
loop
jae
movb
int3
push
add
ja
mov
out
or
jb
jg
shrb
push
pop
lahf
faddp
dec
sar
ss
mov
cmpsb
or
insb
mov
int
shlb
mov
push
insb
adc
push
add
lcall
add
fmul
sbb
or
jmp
pop
xchg
pop
rorb
je
adc
loopne
xor
mov
ljmp
xchg
dec
dec
jle
mov
adc
sub
test
outsb
das
mov
push
jecxz
pop
cld
lods
push
pop
or
mov
repnz
enter
inc
mov
push
mov
lret
fstl
sbb
or
outsl
adc
lock
pusha
aad
mov
outsl
popa
jg
mov
and
mov
push
xor
push
imul
popf
mov
imulb
push
cmp
rcrb
in
push
jg
sbb
adc
lock
mov
sub
push
add
icebp
mov
adcl
int
mov
xchg
sti
add
xchg
test
and
and
outsb
cmpb
xor
xchg
push
xor
lock
jle
inc
dec
mov
popa
vandnps
lock
mov
sarl
jne
aaa
sub
sub
mov
mov
mov
xor
and
inc
add
test
loope
ret
loop
imul
popf
js
mov
mov
inc
mov
ss
imul
cmc
push
xor
leave
stos
jbe
stc
clc
cli
rclb
and
lock
pop
in
movsb
shlb
lods
inc
icebp
mov
aad
int3
imul
or
icebp
psraw
subl
lds
mov
add
js
lock
ljmp
mov
sbb
add
ds
arpl
cmp
lods
sub
inc
push
mov
fcmovbe
psllq
addr16
ret
loope
xchg
in
cwtl
dec
movsb
scas
cmp
fnstenv
popf
bound
sbbl
xchg
ds
mov
inc
mov
jge
inc
imul
push
or
popa
add
hlt
daa
loope
fldcw
daa
rorb
sub
sub
inc
mov
dec
xchg
sbb
mov
mov
mov
pop
push
aad
jp
pop
jmp
leave
or
mov
mov
cmp
lea
nop
aas
jle
shl
and
push
leave
shrb
jns
ret
outsb
add
jnp
cmc
pop
lds
pop
cwtl
repnz
jns
mull
repz
adc
lock
mov
mov
lock
cli
cli
iret
aad
add
mov
push
sub
xor
cmpsb
les
fsubl
pop
or
movsb
cs
and
mov
mov
push
and
mov
aam
fcomip
cmp
in
mov
cld
into
dec
loopne
popf
add
dec
xlat
addr16
outsl
xorl
push
orl
jno
loop
stc
cmp
inc
add
add
jo
inc
ljmp
cmpl
subl
shrl
push
push
sbb
in
xor
push
and
adc
std
jp
cmp
jb
jmp
cmp
out
sbb
mov
mov
mov
nop
test
inc
fistl
fisubs
add
pop
and
rcll
enter
inc
lea
inc
cmpsl
pop
addb
mul
jb
add
mov
lcall
sbb
vmovddup
out
movsl
lea
ja
push
add
sbb
push
lods
mov
mov
lret
fisubl
cmp
cmp
popf
aam
inc
mov
dec
ret
and
inc
xchg
sbb
in
pop
loopne
mov
imul
xor
cltd
pop
add
mov
inc
mov
xchg
ficoms
and
inc
add
js
sbb
xchg
sub
cmp
in
mov
jo
add
add
mov
mov
ficoml
and
sub
mov
lock
and
stos
pop
push
xchg
mov
imul
lds
addb
inc
push
jae
lret
mov
out
fidivrl
aad
loop
push
pop
int
test
mov
push
push
mov
rolb
adc
xor
loope
mov
push
xor
mov
adcl
push
cmp
cld
or
iret
stc
fidivrs
adc
sbb
cwtl
ljmp
ss
out
pop
fcoms
cmp
mov
data16
subl
pop
leave
iret
lock
add
js
push
repz
mov
fistpl
loop
rorb
call
push
and
jno
addr16
sbb
lea
mov
jecxz
adc
add
fs
out
fistl
ret
subb
fistpl
in
fistpl
shl
int3
popa
adc
ret
inc
cmpsl
jmp
out
xor
adc
xor
cs
aam
push
fidivs
jns
and
cmp
sahf
or
mov
add
mov
pop
shl
sbb
ret
sbb
push
into
or
rcrb
clc
jmp
mov
lock
jb
mov
xor
test
pop
loopne
adc
and
enter
sbb
mov
and
xchg
inc
test
push
xchg
mov
ja
mov
nop
add
cmp
jecxz
imul
lcall
jl
ret
or
pop
inc
ja
mov
xor
or
stos
and
mov
and
push
idivb
daa
xor
lret
into
dec
aas
pop
lods
mov
outsl
sar
cmpsl
fsubrl
and
lret
test
adcl
dec
cmc
int
inc
cld
push
and
daa
sbb
add
cld
inc
lret
mov
dec
insb
cmp
xchg
fnstsw
lock
cmp
out
mov
mov
and
pop
pop
and
call
ret
fxch
or
push
je
das
leave
mov
daa
pop
out
enter
jg
lret
imul
dec
fs
cltd
mov
push
in
test
test
test
push
fadds
call
pop
lret
push
xchg
mov
adc
shlb
cmc
add
push
outsl
pop
bound
cmpsb
lret
pusha
inc
mov
cmovg
cmpsb
cmp
fmul
mov
inc
dec
and
pushf
sub
cmpsb
out
sub
add
cltd
sub
adc
insl
imul
dec
into
xor
pop
and
rclb
sbb
sbb
inc
test
out
cmpsb
sbbb
in
mov
pop
and
and
or
xchg
jl
insb
aas
aam
xor
jmp
add
mov
fcmovne
loope
lea
stos
pop
inc
incl
or
fldt
fidivl
fwait
es
out
test
jns
mov
in
or
add
lock
jnp
pop
imul
scas
adcl
pop
xchg
aas
aad
pop
or
or
inc
sub
ret
jnp
fldl
pusha
pop
xlat
pop
add
aad
jmp
jmp
scas
xlat
out
es
in
cmp
aad
xor
or
pop
jno,pt
test
popf
and
nop
jl
pop
xchg
push
cmp
test
mov
adc
stos
ja
lret
negl
push
or
fnstsw
in
push
mov
lods
dec
pop
mov
ret
push
cmpsb
cwtl
jg
les
clc
xorb
cwtl
xor
xlat
subl
push
leave
mov
sti
addr16
sbb
mov
test
pusha
ret
adc
adc
and
cmp
inc
inc
mov
andb
daa
jns
insb
sbb
ret
cmpsl
jne
shr
dec
pop
cmp
cs
and
push
loopne
jmp
jle
mov
dec
adc
adc
ljmp
add
sarb
dec
lcall
mov
xor
or
push
mov
popa
pop
jmp
int
or
mov
lock
xchg
lods
ljmp
push
outsl
ljmp
insb
adc
and
lods
lock
mov
jge
push
inc
and
inc
ds
sub
jae
lds
mov
jp
adc
hlt
fbld
mov
pop
mov
xor
sti
push
iret
mov
std
stos
outsl
cmp
stc
mov
inc
mov
push
pushf
cmpsb
fdivs
test
ja
lcall
mov
das
jecxz
loop
or
sbb
in
pop
mov
xor
lret
dec
std
or
sti
mov
lds
int3
loopne
jbe
fdivl
pusha
ss
pop
in
repnz
pusha
mov
jb
repz
mov
or
mov
faddl
into
and
pusha
int
nop
inc
shll
into
cmpsb
inc
sbb
cmp
je
add
in
sub
ds
jp
ja
mov
push
push
fdivrs
mov
imul
pop
xchg
and
outsl
imul
das
ret
inc
xchg
sbb
cmp
xchg
pop
pop
mov
xchg
vmaxsd
and
push
mov
sub
push
lcall
xchg
add
pop
pop
stos
push
mov
mov
mov
mov
push
pusha
test
mov
mov
imul
inc
fdivs
cmpsl
xchg
into
push
mov
push
stos
sub
sbb
mov
push
dec
add
in
mov
mov
fbld
repz
jbe
daa
pushf
inc
int3
shl
cwtl
xor
jno
fucomi
pop
fwait
add
push
xor
jnp
adc
gs
mov
sbb
mov
push
cltd
cwtl
lret
mov
pop
adc
cli
test
test
setg
push
xchg
ljmp
cmp
imul
into
mov
hlt
lcall
push
dec
rcl
mov
fisttpll
jbe
fnstsw
sbbb
push
sbb
pop
or
adc
faddl
shl
fwait
ficoml
or
xchg
inc
addr16
inc
lock
push
inc
pop
test
push
jmp
sbb
outsb
sub
inc
sub
int
insl
lret
mov
mov
inc
outsb
push
sahf
xchg
nop
pop
aaa
sbb
cmc
popw
add
in
dec
sub
adc
test
push
sbb
sub
mov
mov
and
ret
fcompl
movsb
mov
in
push
xchg
shr
add
pop
aad
or
pop
in
mov
pop
scas
es
dec
xor
rorl
xchg
push
pop
inc
std
scas
inc
sahf
lcall
or
jmp
test
mov
sub
ret
cmp
std
lahf
jmp
scas
and
inc
outsb
xchg
xchg
or
and
jl
in
lret
adc
and
std
aam
pop
jb
lds
test
lock
andl
add
jno
ss
addr16
ja
movsl
cwtl
cmp
in
fdivs
jle
ss
int
cltd
or
outsl
dec
outsl
jl
test
inc
mov
sbb
add
dec
xchg
add
inc
fdivrp
rcll
jbe
enter
in
pavgw
stc
adc
test
lds
js
cwtl
cmp
pop
shrb
pop
cmp
daa
inc
sbb
push
fstpt
insb
adc
dec
cmp
jge
outsb
adc
pop
cmc
pushf
mov
mov
add
es
dec
push
and
int
xor
xchg
inc
and
divl
decl
shll
xchg
leave
mov
mov
mov
shrl
aaa
enter
jne
inc
mov
push
jecxz
pop
push
jl
in
add
iret
shll
mov
and
ss
mov
or
lcall
xlat
and
daa
jnp
cmp
es
dec
mov
test
gs
rcrl
mov
pop
and
pop
nop
mov
testl
sahf
pop
subb
xor
cld
xchg
in
adc
jle
lret
idivl
dec
jo
push
aam
sub
dec
and
cli
shlb
mov
inc
or
xchg
mov
and
or
sbb
and
arpl
ss
fildl
pop
andl
ret
cmp
jbe
je
sbb
in
int3
push
or
ret
mov
pop
fwait
aam
les
aas
lock
xchg
mov
cwtl
sub
cmp
call
div
rclb
xchg
clc
xchg
test
mov
inc
inc
xor
inc
aad
sbb
rclb
inc
outsb
push
pop
out
int3
push
loope
rcll
jo
pop
int3
fcmovnb
mov
loopne
mov
in
sub
rorl
arpl
adc
add
fldenv
dec
cmpsb
popa
inc
sbb
lret
imul
cmp
dec
xchg
sbb
enter
push
movsb
mov
mov
lcall
fs
inc
hlt
jb
sbb
jmp
push
icebp
and
lods
scas
pop
movsbl
push
hlt
cmp
fcompl
inc
pop
cmc
mov
pop
push
shll
mov
fldcw
sub
push
addb
movsl
pop
scas
xor
jmp
adc
mov
scas
push
mov
sbb
imul
cltd
mov
push
and
inc
add
lea
cmp
xchg
aaa
pop
movsb
sbb
push
ja
daa
sbb
mov
lret
sbb
repnz
add
rcl
inc
iret
fs
imul
loopne
testb
pop
pusha
cmpsb
push
test
enter
inc
dec
sub
fs
jb
push
add
cmp
mov
pop
mov
or
inc
test
sub
outsl
popa
mov
or
lahf
leave
jb
cld
dec
cmpsl
jbe
jecxz
jp
ficomps
pop
push
daa
js
icebp
test
les
testb
xchg
cs
lcall
push
aam
imul
sub
mov
negl
lcall
xchg
pop
adc
sbb
and
std
test
mov
xor
push
sbb
and
add
out
push
data16
stos
nop
dec
or
popf
dec
adcb
inc
test
and
or
mov
jecxz
jne
test
fildl
jmp
or
sarl
insb
stos
sub
cwtl
arpl
push
ja
data16
xchg
mov
rcrl
faddl
push
and
loopne
pop
inc
inc
andl
push
pop
xor
imul
aas
and
loop
scas
mov
divl
and
mov
sub
mov
xchg
and
nop
jmp
xchg
add
xchg
xchg
push
fsubrs
dec
bound
pop
int
cmp
lret
leave
scas
mov
or
mov
mov
adc
sbb
mov
lahf
dec
sti
icebp
mov
shl
xor
add
test
mov
test
pusha
mov
cs
mov
insl
push
xorb
pop
dec
jnp
cmp
mov
jmp
adc
mov
mov
fld
mov
mov
or
adc
inc
out
add
std
jno
icebp
jno
add
sub
xor
mov
jns
in
push
dec
xchg
imul
bound
out
xchg
repnz
iret
mov
iret
cwtl
rcrb
adc
sbb
mov
int3
aaa
jmp
xchg
inc
std
push
mov
lahf
idivl
ret
dec
inc
setg
xchg
repz
push
xlat
jns
decb
in
cmp
nop
lret
or
pop
pop
push
out
cmp
in
test
sub
cmp
sbb
inc
pop
loopne
push
daa
test
inc
mov
cmp
loope
std
stos
jge
xchg
in
int3
call
mov
and
dec
jge
add
or
fwait
icebp
push
call
int
xchg
gs
add
es
lahf
test
test
popf
fs
sub
imul
adc
or
aad
adc
outsl
repnz
lcall
inc
fcomps
leave
aad
in
mov
roll
out
sbb
test
push
cli
mov
mov
sarb
add
cmpsl
mov
cmp
stos
xchg
cmp
sbb
push
jg,pt
push
es
sbb
pop
movsb
sar
or
pop
sub
mov
jg
cli
mov
jae
jmp
int3
or
rcl
ss
jmp
fcmovu
push
ret
loope
dec
negb
cld
mov
mull
hlt
outsl
mov
rcrl
xorl
inc
or
cltd
dec
loop
pop
mov
mov
mov
mov
rdmsr
jno
xor
in
xchg
loope
adc
jo
in
mov
leave
fnsave
or
cmpsl
push
ret
mov
es
xlat
out
out
sub
adc
mov
jmp
pop
filds
cmpl
cwtl
fwait
adc
ret
arpl
imul
dec
shl
push
cmp
mov
pop
xor
mov
outsb
mov
mov
lods
pop
push
push
xor
fs
fistpl
sub
aas
pop
in
cmpsb
leave
add
hlt
pop
jno
xchg
mov
clc
mov
mov
mov
cmp
popf
fnsave
push
mov
fisttpl
mov
fistpll
push
pop
mov
bnd
and
int3
fisubs
or
rclb
scas
pop
add
xchg
fnstcw
aad
adc
jae
cmp
lods
aaa
dec
fwait
inc
scas
mov
aam
mov
or
jmp
mov
mov
fcomip
lods
push
xchg
or
adc
xchg
aad
out
jo
out
mov
loopne
jle
inc
ficoml
imul
insb
add
push
add
and
sub
pop
jl,pt
jl
inc
adc
sbb
jp
cltd
sbb
mov
fldt
push
std
jle
cltd
lods
test
push
pop
in
inc
dec
bnd
and
mov
popa
nop
xchg
into
rcll
and
bnd
jp
popa
sbb
adc
aad
lea
enter
ret
inc
out
or
stc
aaa
adc
pop
push
xchg
inc
fs
dec
lcall
mov
sub
xlat
xor
jne
mov
loop
or
cli
adc
popf
or
lods
push
xchg
ds
je
cmpsb
sbb
and
or
xor
stos
negl
mov
loop
jae
jl
mov
daa
mov
movsb
pop
in
push
arpl
push
push
mov
adcb
lret
mov
jp
arpl
jne
imul
test
fldt
push
sub
mov
ja
jmp
sub
hlt
sbb
inc
bound
pop
xlat
fdivrs
adc
test
and
cmp
xlat
dec
into
inc
lret
or
dec
shll
ds
gs
insl
cmp
mov
enter
insl
ljmp
xor
stc
add
ljmp
and
loopne
pop
mov
ljmp
mov
mov
fiaddl
and
sub
cmp
xchg
sbb
push
inc
call
lock
jo
andb
mov
std
cmp
idivl
adc
push
mov
imul
aas
in
dec
std
hlt
inc
sbb
pop
cld
jno
int
cmc
pop
add
xchg
and
in
inc
inc
into
cmp
add
int3
leave
jo
mov
gs
lock
and
or
nop
int3
hlt
or
and
fs
add
hlt
mov
inc
fldenv
push
cli
pop
clc
int
dec
imul
mov
sub
pop
gs
xchg
nop
sub
push
xchg
or
sbb
mov
push
mov
mov
adc
into
repnz
cmp
adc
addr16
popl
mov
into
push
mov
inc
lahf
inc
roll
testb
mov
icebp
stc
std
and
cmp
dec
pop
iret
lcall
dec
and
push
into
xchg
mov
lods
adc
jmp
loope
xchg
int
push
ss
cmp
aaa
pop
call
mov
shlb
leave
xchg
mov
mov
and
adc
mov
je
cmpsl
adc
in
movsb
jbe
xchg
dec
clc
mov
cmp
pop
in
stc
pop
jmp
aas
mov
lock
or
into
in
sub
aad
sbb
fisttpl
xchg
clc
adc
ds
mov
mov
mov
in
jle
pop
cmp
mov
loop
sbb
ret
popf
xchg
xchg
jmp
or
cs
inc
and
into
dec
inc
popf
repz
cltd
out
jae
jg
adc
add
xchg
aam
ds
inc
adc
fdivl
fs
out
mov
inc
lahf
sub
jno
lret
scas
dec
cltd
mov
dec
sub
mov
sarl
lret
push
incl
pop
int3
inc
mov
pop
inc
xchg
mov
and
mov
push
xor
cmp
adc
push
jmp
ljmp
and
xor
mov
inc
cmp
xchg
sbb
adc
adc
aam
outsl
test
jg
cld
dec
aaa
sbb
jno
sub
sbbl
rcrl
xor
push
ljmp
insb
adc
aas
int3
inc
mov
add
mov
in
adc
shrb
pusha
fcmove
dec
xchg
push
sahf
mov
mov
stos
and
mov
dec
vpminsw
mov
icebp
fwait
jl
and
pop
bound
test
jns
iret
add
das
je
dec
jb
dec
mov
aad
add
cmc
xchg
cmpsb
pop
lods
int3
push
cmp
sbb
adc
test
bound
jge
rorb
mov
sahf
jmp
inc
fnstcw
loope
mov
mov
xchg
and
dec
mov
adc
mov
repz
testl
inc
dec
aad
mov
adc
int
cmp
adc
mov
pop
xchg
cmp
je
aam
sbb
jns
pop
push
movsl
inc
cwtl
push
rcll
mov
xchg
mov
cs
and
es
jnp
mov
mov
inc
jnp
push
push
add
and
pushf
test
pop
mov
mov
ljmp
int3
jg
incl
add
test
pushf
das
jns
jl
jp
pop
call
xor
sub
lret
jo
lea
jnp
call
decl
sub
mov
dec
dec
and
cmc
mov
mov
ss
push
mov
ds
jae
sbb
and
mov
fisubl
push
outsb
mov
push
or
sti
stos
out
scas
mov
dec
xor
and
dec
inc
lret
rol
push
movsb
mov
cmp
out
loope
inc
adc
dec
aad
sub
rorl
lds
insl
sahf
frstor
add
mov
out
xchg
hlt
pop
mov
xchg
jb
in
dec
inc
xchg
or
dec
test
ss
sub
inc
pop
sub
pop
xchg
mov
mov
mov
dec
insl
cmc
int
sbb
sbb
stos
in
pop
rcrb
cmp
fimull
sahf
fcmovnbe
xchg
loop
ret
mov
mov
scas
mov
inc
dec
mov
push
imul
daa
movsl
cmpsl
xchg
push
subb
mov
flds
mov
loop
gs
stos
aam
daa
dec
insb
hlt
mov
add
pop
fdivs
lods
in
pop
add
iret
outsl
fstl
xchg
div
movsl
and
mov
pusha
dec
ret
or
xor
je
xchg
outsl
aaa
xchg
gs
stc
in
mov
xor
dec
sbb
inc
fwait
in
or
xchg
fs
sub
mov
xchg
je
loopne,pn
sbb
aas
mov
je
pop
adc
mov
or
pop
popa
imul
adc
ja
mov
incb
cltd
xor
xor
xchg
movl
or
lds
and
rolb
sbb
adc
mov
mov
adcb
imul
mov
in
adc
orl
popa
loopne
test
xchg
gs
fwait
shll
lret
inc
dec
mov
add
inc
cli
fwait
lahf
outsb
cmp
push
in
sbb
cld
inc
ds
out
loope
pushf
xchg
stos
jle
imul
adc
dec
cmp
pop
xchg
popa
inc
pop
xchg
call
or
mov
mov
fadds
xchg
jge
jno
call
cwtl
repnz
add
push
divl
test
add
int
and
pop
pop
push
xor
jecxz
add
adc
scas
lret
lea
neg
dec
inc
and
push
adc
add
inc
jbe
add
cmp
dec
xor
mov
nop
movsb
out
test
xor
jl
xchg
mov
fisubs
das
jp
les
std
dec
inc
sahf
addl
lods
jb
outsb
xor
xchg
dec
push
das
mov
enter
sbb
out
mov
jae
xor
test
xor
mov
fwait
or
idivl
pop
sbb
out
push
ret
sub
int
popa
jge
js
pop
test
nop
js
test
loopne
inc
out
push
rcr
pop
ret
cmpb
pop
add
sub
out
mov
and
push
test
inc
shl
adc
push
sbb
pushf
or
add
inc
push
mov
or
test
mulb
and
inc
sbb
mov
add
imul
loop
sub
lcall
pop
push
cmpsb
sub
jo
into
dec
out
mov
aaa
mov
roll
add
xchg
sahf
cmpsl
sub
mov
jmp
mov
iret
mov
inc
mov
fdivrl
jno
aad
outsl
add
fs
push
sti
int3
and
es
orb
out
pop
jge
adc
jge
pop
negl
aad
jnp
mov
sahf
jns
pusha
jle
inc
adc
pop
lahf
jg
jo
cmp
xlat
sbb
sub
dec
out
lret
loopne
sbb
out
out
sbb
jo
pushl
icebp
xchg
popa
adc
lds
push
bnd
mov
inc
orl
aam
lods
jae
and
mov
pushf
sarl
pop
adc
insl
out
sbb
add
ljmp
aas
aaa
fwait
in
call
mov
mov
call
lods
cmp
mov
aaa
sbb
lret
mov
js
dec
dec
jno
xchg
fnstsw
sbb
sbb
cmpsl
mov
scas
adc
mov
xchg
repz
inc
mov
cmp
jnp
inc
inc
int3
mov
aas
push
outsb
sbb
int
mov
mov
repnz
fmul
ror
mov
push
xchg
int3
adc
and
xchg
call
push
push
inc
dec
outsb
iret
mull
inc
test
je
setne
adc
orl
out
xor
sbb
shr
pushf
mov
pop
ljmp
add
dec
mov
out
daa
sti
dec
test
fsubrl
out
mov
in
jle
xor
movsb
push
in
pop
loope
popa
pop
mov
or
push
ficomps
inc
dec
out
and
jmp
or
sub
mov
xchg
mov
sbb
lret
pop
outsl
xor
in
test
fsubl
jl
cmp
adc
pushf
mov
or
add
xchg
sbb
aam
and
sbb
cmp
xor
arpl
sbbb
out
xchg
cmp
push
pop
jno
enter
jp
dec
pop
stc
out
gs
jb
scas
pop
loope
add
bound
fisubrs
testl
das
push
mov
sbb
mov
daa
add
lcall
insb
aaa
sub
jbe
or
movsb
test
or
mov
rclb
xor
icebp
leave
aas
or
mov
mov
lcall
ret
push
stos
xor
popa
xchg
adc
pop
xor
pop
js
inc
ljmp
inc
jp
pop
adcb
out
sbb
in
mov
lcall
or
or
cmpsl
jne
cmc
out
shl
jnp
clc
ret
into
repz
fwait
scas
inc
push
and
cs
pusha
das
in
leave
aam
rcrl
addr16
cmp
add
ds
xlat
mov
xor
int3
adc
clc
daa
out
inc
fistpll
jp
int
test
adc
mov
jnp
mov
jecxz
mov
aas
pop
inc
mov
shrb
cmp
pop
fs
ret
mov
mov
mov
and
mov
mov
or
mov
and
jo
cld
test
loope
fwait
mov
dec
stc
imul
js
inc
loopne
mov
into
xor
push
and
jae
mov
fdivrs
rol
bound
cmpb
icebp
xor
rolb
jecxz
fwait
adc
js
xorl
jo
lcall
push
ljmp
dec
cmp
xor
ficomps
push
ds
outsl
loope
and
xchg
mov
xchg
jle
jecxz
imul
aad
fisttpl
addl
sti
jns
outsb
pop
fldcw
pop
nop
sbb
cmp
push
imul
sbb
push
sarb
and
cmc
addl
lods
pop
push
inc
pop
aaa
lret
inc
aaa
dec
xor
cmc
ja
movsb
je
jmp
outsl
mov
andb
cmpsl
cmpsl
cmpsb
test
das
ljmp
rep
dec
sub
lods
lret
sbb
xor
mov
les
add
adc
loop
jecxz
rsqrtps
cmp
sub
jp
xchg
rcr
mov
test
mov
push
popa
sub
xor
sub
jl
sbb
scas
popf
sub
out
jl
cwtl
cmp
popf
loop
push
lret
iret
xor
in
fwait
push
call
data16
add
pop
ss
cmp
inc
lret
mov
sbb
pop
add
cs
push
and
adc
pop
xor
pusha
push
aad
dec
jb
mov
or
repnz
jg
push
sahf
and
call
adc
filds
xor
sub
pop
pushfw
inc
stos
cmc
notb
shlb
pop
fwait
inc
or
sbb
nop
xchg
mov
test
xchg
xchg
push
adcb
add
insb
mov
jle
loop
jb
aaa
mov
call
dec
lcall
pop
mov
aas
cs
rcrb
popf
inc
adc
adc
shlb
xlat
icebp
aaa
rcrl
test
dec
cld
loope
enter
mov
jmp
fidivs
inc
lock
hlt
leave
insb
sub
dec
insb
fdivp
cs
scas
push
fwait
std
pop
insl
cmpsl
addb
and
loop
hlt
aam
jne
addl
jbe
cs
or
mov
loopne
adc
aas
cmpb
sar
ja
dec
inc
jb
cs
mov
adc
and
dec
xor
dec
fisubs
out
sbb
cmpsl
jno
sbb
iret
push
cwtl
movsb
test
leave
pop
and
jae
jecxz
dec
sbb
cmc
ja
rol
cmp
or
inc
cltd
inc
pop
flds
in
mov
adc
ljmp
mov
pop
or
xor
inc
inc
jnp
stc
aaa
pop
xchg
je
jmp
outsb
and
in
jne
test
sub
loopne
push
fsub
leave
push
test
mov
jg,pt
adcl
ss
mov
inc
stos
inc
xchg
fdivrl
cld
inc
cmp
stc
push
jge
adcl
pop
and
test
aam
in
aad
add
aad
adc
shr
inc
xor
stos
aas
cmpb
ss
dec
or
inc
mov
cwtl
stos
shrl
push
psadbw
or
imul
hlt
mov
aas
in
add
aam
mov
int3
sbb
push
cld
pop
mov
ja
jg,pn
cs
lahf
push
addb
nop
add
add
mov
adc
clc
cs
shll
cwtl
inc
shl
sub
out
in
cld
add
insb
fwait
sbb
mul
loop
xchg
cltd
mov
pop
mov
mov
outsl
mov
or
sbb
mov
fsubrl
sti
ja
cmp
mov
pop
sbb
push
data16
or
dec
test
out
es
xor
inc
pop
dec
daa
push
mov
mov
insl
push
lods
jno
mov
and
icebp
lret
leave
sbb
jle
les
call
test
inc
jbe
xchg
and
mov
iret
les
jp
sti
jno
xor
mov
clc
pushf
inc
dec
mov
daa
into
dec
mov
xorl
cmp
stc
dec
and
cmp
or
js
in
jae
xchg
lret
inc
push
push
ljmp
fnstsw
cmpsb
ret
addr16
or
fcoms
leave
or
xchg
pop
xchg
push
lret
adc
jle
and
add
xor
cs
clc
push
xchg
cld
or
dec
pop
dec
aad
xchg
sbb
xlat
loop
ret
outsb
xor
or
jne
stos
call
ds
test
pop
mov
sbb
inc
leave
jns
out
push
sahf
hlt
out
pop
mov
je
adc
js
imul
jno
sbb
sarb
pop
jbe
xlat
cmp
mov
lods
ret
sbb
lret
xor
ljmp
sbbl
pop
pop
fnsave
lcall
fs
test
push
fdivs
add
dec
push
cmpsl
cmp
mov
outsb
mov
inc
ror
add
push
push
adc
pop
xchg
inc
push
jmp
and
fldl
bound
xor
data16
repnz
jecxz
inc
fiaddl
stos
adcl
in
pop
insb
out
mov
lods
out
or
jnp
push
add
pop
in
sahf
or
push
cmp
xchg
rolb
test
dec
add
ja
push
jle
clc
cwtl
add
pop
pop
inc
push
push
inc
scas
xchg
mov
std
cs
daa
shlb
cld
sbb
jb
inc
adc
pop
in
or
dec
ret
pushl
loopne
xchg
jo
popa
cmp
hlt
lods
jae
pusha
clc
jge
jmp
dec
xor
lock
addr16
icebp
cli
test
cmp
das
jg
push
push
mov
enter
cmp
aas
cwtl
dec
push
in
xchg
cld
iret
andl
jg
addr16
fwait
jbe
gs
fs
scas
rcl
int
int3
outsb
dec
lret
sbb
clc
or
into
and
out
imul
mov
test
movsb
in
dec
mov
mov
inc
xchg
mov
out
dec
pop
cmp
xchg
andl
ret
bt
mov
fsubl
push
call
inc
add
and
xor
shrl
dec
cmc
out
or
add
outsb
sub
sbb
loop
leave
imul
clc
sub
shrb
push
cmp
pushf
sti
faddl
xorb
rolb
or
dec
cltd
insl
incl
sbb
es
add
ljmp
iret
or
and
dec
aad
insb
test
ret
pushf
dec
insb
das
popf
nop
cmc
ficoms
pop
dec
sub
out
pop
lds
mov
insb
cmpsl
nop
adc
inc
movl
scas
aam
stos
loopne
dec
pop
sub
fcoms
std
sbb
or
stos
test
or
mov
push
jecxz
popf
iret
test
sub
pop
popf
int
cmc
mov
adc
sub
xchg
arpl
sub
inc
xchg
jg
push
cs
shl
jnp
aam
lahf
mov
push
adc
scas
mov
ds
jns
sub
mov
int
out
mov
mov
inc
sub
jb
add
lea
test
out
mov
js
pop
imul
outsl
cmpl
mov
add
mov
sbb
scas
jns
adc
test
out
ljmp
or
jge
mov
sbb
cwtl
sub
dec
or
outsb
sbbb
mov
pop
aam
adc
out
xchg
xorb
outsl
ficompl
movsl
push
dec
cs
push
stc
outsl
or
xor
xor
fwait
cmp
mov
or
int3
sbb
dec
rclb
pop
push
sbb
cwtl
cmp
ja
jle
pop
inc
adc
jle
fwait
repz
dec
bts
cmpsl
sbb
xchg
jp
xor
dec
lcall
out
aam
pop
popa
mov
sbb
dec
stc
xchg
add
bound
push
xchg
adc
sbbb
cmp
jge
cld
dec
jbe
mov
or
rolb
jmp
add
not
pop
cmpsb
std
in
push
enter
xchg
xchg
add
xchg
lea
bnd
scas
jns
adcl
mov
push
pushf
cmp
test
xchg
jg
scas
adc
popl
fidivrl
sbb
pop
fiadds
roll
int3
ds
mov
loopne
mov
in
fnstsw
dec
and
xor
pop
aad
cmpb
xchg
mov
adc
lods
xchg
or
xchg
int
push
push
loopne
xor
inc
and
outsb
rolb
push
add
pop
lods
mulb
mov
add
sub
mov
xchg
lea
imul
daa
pop
int
in
outsb
sub
jmp
ljmp
test
aam
pop
push
pop
insb
adc
rcll
sbb
out
jnp
mov
andl
jae
mov
shrb
add
roll
mov
nop
jecxz
ret
push
fildl
push
sar
cmp
sbb
std
dec
jbe
test
push
in
stc
fildll
xchg
jle
mov
xor
dec
insb
shll
mov
jge
dec
sahf
lea
js
cmp
andl
inc
mov
addl
cli
cmp
fsubr
cwtl
pop
jp
in
cmp
add
cmpsb
lret
mov
imul
pop
cmp
lret
or
mov
and
leave
xchg
lods
xor
out
test
loopne
and
data16
inc
push
rcrl
and
fisttpll
test
bound
cmp
in
lods
flds
addr16
push
xchg
lock
push
push
add
rcrl
push
stos
mov
push
push
mov
loopne
out
lret
add
ror
ss
mov
jge
cmp
in
sar
mov
imul
les
scas
in
and
stos
int3
push
shr
xorl
mov
adc
sub
or
sarb
mov
jb
mov
popf
js
sub
cmp
xchg
xchg
out
push
pop
push
jbe
inc
jmp
lock
xchg
push
cwtl
xor
jg
pop
pop
push
cmp
cmc
fwait
pop
dec
cmpsb
xchg
inc
shrb
jns
loope
jmp
ljmp
xabort
outsl
mov
add
dec
dec
xor
in
ja
fidivs
enter
imull
xchg
jmp
outsb
das
or
cs
pop
lcall
lcall
mov
jne
add
int
xor
mov
outsb
gs
cmp
repnz
dec
add
mov
fldt
das
mov
push
or
xorl
add
cmp
push
fwait
outsl
pop
dec
push
je
out
fldl
xchg
cmpsb
push
shlb
sahf
sbb
lret
rcrb
sahf
dec
inc
imul
add
mov
in
xchg
in
xchg
add
mov
int
dec
xlat
xor
inc
sbb
mov
sub
mov
addb
and
lahf
push
dec
xor
push
push
xchg
repz
test
mov
jo
jecxz
test
stos
push
fnstsw
imul
addl
jne
inc
jle
mov
in
mov
mov
bound
pushf
aas
ja
cmp
adc
add
test
nop
mov
mov
and
in
jl
in
mov
jl
fistl
dec
orb
fstpt
stos
rorl
imul
xor
lods
jge
or
pop
xchg
popa
push
ffreep
inc
fcmovbe
les
mov
sub
or
mov
pop
dec
data16
out
lea
xor
pop
gs
xor
adc
pop
jns
push
into
outsl
dec
inc
arpl
leave
enter
fwait
push
adc
mov
push
movb
insb
mov
test
hlt
imul
mov
aas
cld
push
jno
pop
arpl
jo
ljmp
cwtl
sub
bt
jl
cmp
std
jge
cwtl
xlat
negb
fistps
int3
sar
dec
stc
iret
lahf
aas
mov
mov
xchg
stos
mov
dec
sbb
test
xchg
xchg
mov
out
paddusw
jmp
cld
and
cmpb
or
pop
mov
insb
lcall
cmp
adc
jge
cmp
mov
ljmp
or
or
mov
les
mov
and
cmp
mov
pop
inc
mov
cwtl
mov
popa
dec
xchg
arpl
pop
leave
cmp
pop
stos
mov
mov
dec
rcrl
in
xchg
inc
popf
pop
test
pop
xchg
ljmp
cmpsl
mov
mov
in
xchg
test
sub
jns
pusha
inc
nop
sbb
dec
adc
dec
add
mov
mov
jno
imul
iret
fisttps
pushf
mov
jns
jbe
bound
xlat
jne
movsl
jl
adc
xorb
daa
jnp
push
add
fimull
cmc
or
lods
movsl
out
mov
outsl
imul
mov
dec
fcoms
gs
scas
jmp
sahf
mov
js
test
mov
js
mov
xchg
cmp
and
iret
cmp
mov
dec
jge
sub
cld
pop
lods
mov
push
ljmp
adc
mov
test
lock
inc
mov
xchg
stos
loop
jp,pn
pushf
mov
or
inc
adcl
arpl
in
cli
idivl
push
lods
mov
adc
sbbl
insb
bound
dec
ret
pop
gs
sbb
and
mov
jmp
adc
inc
sbb
shrb
jmp
mov
rclb
out
data16
inc
clc
stos
rcrl
xchg
add
fdivr
mov
imul
and
sub
mov
jp
int
mov
sub
js
out
loopne
add
scas
rorl
mov
jg
lret
aad
xor
in
bound
pop
and
or
out
dec
pop
inc
xor
sub
push
xchg
shl
fwait
mov
out
daa
pushf
shlb
sbbb
fnstsw
fnstcw
jnp
repnz
xor
stc
mov
cmp
pop
sbbb
test
lods
movsb
push
data16
lds
cmp
dec
repnz
xor
jno
lea
lods
mov
enter
mul
clc
xor
icebp
dec
in
mov
fbstp
ret
jge
mov
xlat
and
sbb
dec
shrb
popf
sub
lds
inc
push
vpmullw
dec
mov
mov
lret
jnp
dec
out
sahf
fs
lea
je
push
ja
leave
dec
arpl
push
mov
inc
sti
sarl
xor
ret
mov
inc
xchg
outsb
jbe
stos
dec
ja
sbbl
popa
and
negb
cmp
fxch
scas
lods
lock
insb
int
xor
ljmp
sbb
mov
in
lret
mov
pop
mov
jb
mov
cmp
loope
enter
jmp
popa
mov
mov
jae
in
fwait
adc
stc
sahf
mov
cmp
sub
xor
outsl
jecxz
fidivrs
lods
imul
imull
add
fidivrl
mov
negl
mov
stos
jae
fwait
lcall
scas
into
jmp
aaa
test
xchg
bound
loopne
repz
jb
adc
push
fsubrs
pushf
lds
imul
pop
test
ret
test
xor
jl
mov
cli
int
subb
jne
das
cld
sub
inc
mov
out
and
or
jmp
test
data16
cmp
push
push
jle
lods
sahf
fsubs
in
xchg
insl
movsl
inc
xchg
scas
pop
pushf
hlt
mov
pop
aaa
fldcw
xor
and
mov
fldcw
xchg
orb
ja
xchg
inc
arpl
pop
pop
mov
mov
out
sbb
out
rcr
fistpll
push
and
push
jecxz
cltd
insb
scas
cli
adc
clc
cmp
movsb
mov
gs
cmc
pop
lahf
xchg
pop
bswap
cmp
mov
out
loope
jge
clc
dec
jb
aas
data16
cltd
push
aad
lods
push
xor
mov
xor
sti
xor
shrb
cmp
imul
or
add
xor
pushf
jbe
movsb
add
fprem
sbb
out
jne
mov
inc
es
mov
xorb
insb
jb
out
cmp
pop
jb
test
or
jb
mov
inc
adc
in
mov
dec
fldenv
xchg
mov
mov
push
push
aam
fistpl
aad
cmp
gs
mov
push
mov
loopne
add
cmpsl
cmp
nop
xlat
xchg
lods
mov
out
arpl
mov
jge
mov
enter
dec
sbbb
ret
xchg
clc
subl
dec
dec
outsb
xor
lds
sub
in
xchg
jl
ds
jae
in
aam
inc
bndldx
add
cli
fs
out
inc
adc
pop
xor
xor
scas
addr16
pop
pushf
cmpb
xchg
or
rol
shlb
xor
bound
xor
addr16
imul
scas
mov
fs
inc
rorb
ss
adc
ljmp
jns
sbb
dec
jnp
xor
dec
fwait
pop
ret
pushf
dec
mov
adc
mov
sti
subl
or
push
adc
xor
xor
push
call
xchg
xchg
and
or
sbb
mov
in
jae
xchg
out
inc
rcl
xchg
cmpsb
push
lcall
xchg
inc
shlb
add
test
mov
call
dec
push
orb
out
cmpsl
outsl
idivl
repnz
cltd
adc
push
push
ss
out
int
lcall
cmc
adc
pop
mov
fcmove
xchg
dec
in
adc
loope
mov
xlat
imul
test
cli
inc
aam
imul
cmp
test
stc
lds
ficoml
adc
and
int3
sbb
aaa
pop
andnps
mov
rolb
lods
clc
jae
pop
inc
popf
shrb
mov
std
cmpsb
dec
xchg
hlt
test
icebp
aas
out
jne
xchg
fs
daa
fbstp
test
fmulp
shl
mov
add
stos
sahf
xorl
in
add
add
les
push
pop
aas
adc
insl
adc
sahf
insl
stc
mull
mov
sbb
sbb
loopne
cmp
xchg
dec
stos
dec
push
push
jae
int3
fisubrs
push
push
mov
out
mov
sbb
lods
mov
movsl
or
xor
inc
jmp
mov
xlat
xchg
dec
mov
mov
mov
fistpll
je
add
fsubs
mov
sbb
lret
cmp
add
xor
jnp
pop
shlb
mov
xchg
sahf
lcall
jne
addr16
out
sub
or
scas
std
or
repz
ljmp
add
mov
sbb
jbe
jecxz
fcoml
mov
insl
cld
mov
es
shrb
in
dec
push
shll
cmp
jge
xchg
xor
cmp
int
or
stc
ds
in
iret
mov
xchg
cmc
mov
pop
cwtl
incb
dec
fdivl
mov
or
loope
leave
mov
and
push
rcl
add
enter
sahf
fs
negb
mov
arpl
pop
push
push
xchg
cli
fistps
push
jmp
and
cmp
add
cltd
xor
lahf
test
pusha
sbb
pop
sub
lcall
ret
adc
sbbb
imul
in
fiadds
aad
mov
je
sbb
and
ss
xchg
mov
and
testb
push
loop
push
iret
ljmp
aad
add
mov
cmc
int
inc
sbb
pop
popa
lock
sub
loope
pop
call
push
xor
dec
jae
in
cli
subb
mov
mov
mov
rolb
cmp
add
sbb
jl
adc
stos
stos
popf
add
leave
xchg
jge
int
push
mov
jp
enter
push
fsubrp
aam
inc
stos
sbb
sub
cmp
je
repnz
cli
jne
mov
pushf
inc
jmp
mov
int3
or
ja
add
push
sub
xor
cmpsb
ret
jno,pt
test
into
fcmove
push
mov
notb
jnp
push
incb
mov
das
jge
adc
add
adc
dec
adc
push
aas
xor
sbb
fstp
negb
push
mov
push
push
outsl
outsl
adc
add
dec
xor
xchg
test
or
push
cld
in
gs
and
es
mov
lcall
popa
xor
mov
movsl
test
stos
push
nop
into
push
loope
es
jbe
push
fwait
out
push
jb
popf
xchg
mov
cmp
into
lods
mov
sub
inc
aam
mov
jle
cwtl
mov
into
ljmp
push
out
mov
iret
jp
cwtl
les
dec
jmp
jl
cmc
pop
in
ret
push
scas
imul
dec
into
cmp
ljmp
add
rorl
fdiv
sub
dec
inc
icebp
pop
jmp
lods
insb
lds
mov
mov
dec
inc
mov
je
mov
jl
mov
pop
pop
xchg
jb
fs
cmp
arpl
add
addb
mov
mov
mov
hlt
pop
imul
mov
popa
inc
or
jle
stos
das
adc
and
call
add
push
push
xlat
out
sub
push
pop
bound
sbb
xchg
lods
push
dec
cmc
movsl
xchg
or
push
jg
lods
into
minps
cs
pushf
xchg
sarb
or
mov
daa
mov
and
hlt
xchg
jo
xchg
mov
and
add
cltd
add
fcmovnb
ret
pop
loope
sti
sbb
imul
and
xor
push
in
adc
mulb
jne
lahf
das
cmp
sbbb
pop
adc
pop
add
jb
jae
sub
aaa
pop
packssdw
jb
inc
in
test
aam
ja
inc
daa
inc
sub
nop
pop
push
add
movsb
sti
insb
xchg
cmp
pop
mov
out
movsl
xchg
dec
or
jne
or
dec
lahf
mov
mov
or
pop
sub
cld
inc
nop
repnz
ljmp
das
aaa
into
or
mov
jno
or
pop
pop
rcrl
mov
clc
adc
mov
sbb
in
adc
xchg
pop
lcall
fidivrs
orb
mov
dec
sti
cmp
dec
inc
jno
imul
movsb
hlt
insb
mov
scas
mov
iret
fstpt
mov
pusha
leave
sbb
nop
add
mov
sti
add
sbb
xor
mov
lds
jne
pop
fistpll
loop
dec
fistps
sbb
bound
or
fcmovnu
jnp
loopne
les
adc
adc
sbb
out
xchg
cmc
adc
xor
loopne
daa
lcall
out
add
push
in
dec
add
xchg
in
lea
and
inc
stos
jle
or
mov
mov
ja
inc
call
cwtl
aam
jb
dec
gs
adc
mov
in
xlat
push
mov
inc
outsb
stc
out
jno
sub
jg
scas
jo
ljmp
add
test
and
mov
dec
sti
add
leave
test
push
xchg
cmp
in
test
dec
cmp
mov
xchg
jne
sbb
fwait
fwait
sbb
out
imul
sub
int
mov
mov
sbb
inc
scas
dec
aam
jnp
adc
iret
cld
fdivs
pop
out
or
outsb
notb
outsl
aam
xor
out
pushf
cwtl
push
rol
xlat
pop
mov
out
dec
pusha
xchg
adc
dec
out
jmp
cmpsl
sub
jmp
pop
sub
shl
into
rolb
and
out
lods
insb
int3
sbbb
xchg
fstpl
push
add
in
outsb
lret
mov
cs
adc
push
lea
loopne
sbb
jno
pushf
push
ret
pop
pop
mov
jg
mov
lock
aaa
aas
int
xchg
cltd
outsb
inc
shll
xlat
xor
ss
mov
push
add
data16
nop
std
cmpsl
js
mov
xchg
frstor
and
fstpt
sbb
add
pop
xor
mov
jge
mov
jno
xor
roll
out
or
mov
out
push
xchg
push
ret
lcall
fcom
xchg
in
outsb
sti
push
ljmp
cwtl
insb
jno
mov
or
xchg
pop
adc
mov
or
leave
aad
in
xchg
bound
xor
popf
jno
adc
sti
dec
push
add
or
pushf
add
lock
shr
mov
cs
test
gs
sbb
stos
inc
mov
pushf
int3
les
int3
je
fcmovnb
ja
inc
fstpl
mov
inc
aad
push
jae
fs
push
push
insb
adc
pop
dec
pop
movsb
push
mov
test
xchg
mov
inc
ret
movsb
sbb
pop
mov
roll
out
xchg
hlt
daa
adc
imul
das
and
pop
sbb
jns
push
mov
je
sub
sbb
mov
pop
scas
out
daa
cmpl
sub
mov
dec
xchg
inc
sahf
sti
cmp
ret
pop
mov
test
rcrb
sub
push
adc
sub
subb
or
es
and
mov
lea
push
mov
int
pop
or
mov
pop
popa
mov
jg
nop
mov
lcall
pop
fucomi
fcmovnbe
dec
lahf
fidivrs
cs
xor
in
xlat
lret
and
jle
mov
mov
mov
fwait
mov
lods
or
fcmovbe
icebp
jae
sbb
xor
inc
dec
jge
push
inc
add
adc
push
fs
fsubr
adc
jle
and
add
icebp
and
and
inc
js
inc
push
popf
rol
xchg
mov
repz
sbb
add
imul
sti
mov
addr16
outsb
rcl
sub
nop
mov
adc
cltd
push
lds
sub
mov
rol
loope
pop
cmp
outsb
movups
addr16
insl
push
add
mov
aam
xorb
pushf
inc
add
lds
lcall
rcll
arpl
inc
and
dec
adc
add
xchg
mov
pop
dec
adc
icebp
or
cmp
lods
jae
inc
dec
mov
int3
inc
fisubl
inc
jae
xchg
out
xor
fs
inc
push
mov
xor
shlb
inc
sbb
cmp
cmp
leave
cs
jmp
pop
push
loope
adc
and
mov
push
ss
and
mov
sub
dec
ja
test
push
mov
xchg
popl
xchg
lret
es
and
add
and
fs
out
sub
jle
movsb
js
adcl
cmpl
test
test
repnz
in
enter
scas
lcall
adc
out
repnz
je
xchg
loopne
test
jp
jp
inc
mov
lret
mov
jb
cmp
jo
pop
cltd
push
mov
pushf
test
insb
jno
lods
int
fadds
cmp
rcrb
pop
movsb
into
shrl
xchg
dec
aas
jp
cmpsl
popf
pop
test
test
loopne
jmp
dec
mov
lods
nop
in
aad
mov
iret
jge
ds
stos
rol
or
xor
iret
repz
rcrb
sub
push
xchg
adc
sahf
loop
daa
fldl
rcll
aam
push
mov
xlat
es
in
cmp
cmp
mov
mov
sar
add
sbb
cwtl
mov
inc
jecxz
push
lret
xchg
mov
cwtl
pop
and
sbb
jo
andl
icebp
and
scas
xchg
dec
and
shl
les
cmc
or
test
jg
dec
cmp
aam
cmp
shlb
push
push
mov
mov
std
mov
dec
jnp
mov
mov
pushf
insb
cmp
push
push
fldenv
pop
sahf
push
xlat
or
test
ljmp
testl
mov
mov
lret
shl
xor
jnp
mov
jge
leave
js
cld
inc
jecxz
movsl
mul
push
sub
cmp
xchg
fmull
jmp
sub
sarb
mov
push
jle
jecxz
inc
sbb
push
push
jp
cmp
popa
inc
bound
negb
mov
scas
outsb
sbb
int
addr16
nop
sub
jnp
and
cmp
cwtl
sti
es
mov
jno
nop
push
add
mov
insb
xchg
dec
cmp
mov
repnz
repz
aam
sub
outsl
popf
sub
jmp
ljmp
add
add
divl
sub
lret
sahf
dec
pop
xchg
add
addr16
hlt
pop
outsb
loop
repnz
mov
dec
fs
pop
jne
jge
iret
shlb
sub
fwait
test
xor
xchg
jb
les
adc
mov
and
adc
and
pop
xor
push
push
aam
jbe
or
mov
cmp
ljmp
xlat
aas
cwtl
rcl
mov
push
xchg
and
sub
loopne
clc
cmpsl
and
mov
inc
popa
loope
mov
jecxz
fistl
pop
pop
xor
test
pop
inc
inc
inc
test
fcom
push
shrl
mov
cld
pop
or
or
ror
push
add
cmp
lea
dec
xor
es
stos
insb
outsb
sbb
loop
cmp
or
inc
sbb
cwtl
inc
jecxz
and
jno
imul
cmp
fdivrl
mov
push
pop
add
test
mov
jno
jb
and
subb
and
push
int3
mov
imul
pop
ret
fildl
mov
stc
push
add
scas
mov
mov
adc
fsubrs
mov
cmp
mov
cmpsb
int3
cmp
or
leave
adc
and
notl
dec
mov
imul
pop
es
or
jle
shll
lods
lds
pop
mov
push
pop
jle
es
shll
mov
fldl
and
pop
adc
mov
xchg
jl
push
adc
stos
adc
pop
fnstcw
or
fmul
sub
out
sub
jmp
jno
push
sarb
in
pop
movsl
mov
insb
xchg
aas
movsb
sarb
sub
cmc
push
cltd
add
ljmp
jb
mov
and
iret
add
adc
fimull
movsl
in
pop
push
pop
dec
jmp
into
ss
pop
stc
push
fiaddl
push
pop
sahf
aad
push
jp
pop
inc
scas
sub
xor
dec
std
imull
push
lock
pop
add
or
out
xchg
push
fcomip
repnz
xchg
mov
inc
add
push
xchg
push
js
push
mov
jmp
in
xor
mov
mov
ret
ror
and
lahf
xchg
dec
shll
cmc
repz
jnp
pop
cltd
aaa
ds
xor
clc
xor
add
out
fisubl
jle
jle
adc
cs
jnp
sub
aad
mov
and
mov
rcrb
cmp
push
inc
xlat
dec
ficoms
stc
or
push
loopne
mov
jge
loopne
pop
add
out
mov
jae
ret
pushf
push
test
sbb
mov
and
arpl
inc
adc
or
daa
inc
rolb
popf
cld
xchg
out
lret
sub
test
dec
pop
cmp
lahf
and
xor
int
adc
fsubs
int
arpl
pushf
addb
fs
jg
cmp
arpl
adc
inc
sbb
jl
leave
stc
add
lahf
push
xchg
rcrb
sbb
xchg
mov
cwtl
js
jno
and
pushf
enter
into
push
inc
jmp
mov
das
push
pop
push
xchg
xor
bound
pop
cmp
cmp
sub
negb
out
mov
xor
cmp
jmp
add
leave
lock
inc
push
sub
not
repz
ja
repz
xchg
inc
add
mov
lock
or
sbb
repnz
and
hlt
cli
ret
dec
sbb
in
or
cltd
data16
jns
adc
xor
mov
and
andb
or
repz
inc
int3
lret
cmp
lea
add
dec
std
fwait
jp
outsl
mov
mov
or
hlt
cmp
mov
xchg
popa
push
lock
loopne
mov
xchg
ja
stos
aas
add
insb
mov
cwtl
out
push
mov
popl
dec
lahf
in
icebp
sub
or
das
outsb
les
pusha
rcll
jb
dec
cwtl
out
in
out
adc
cli
push
mov
imul
mov
repnz
inc
add
sbb
lods
adc
punpckhbw
icebp
mov
inc
push
push
out
movb
stos
jmp
xchg
xchg
clc
iret
ret
fstp
popf
pop
iretw
and
popf
dec
aam
test
add
add
loop
or
dec
shrl
mov
rcll
xchg
dec
sbb
xchg
push
roll
cmp
mov
pop
imul
adc
jmp
jns
mov
xor
jmp
pop
es
jnp
sub
aaa
push
enter
adc
adc
xchg
loop
lret
xchg
rorl
std
jnp
inc
inc
cmp
mov
gs
pop
xchg
or
and
push
outsl
std
add
adc
xorb
cmp
aaa
push
orb
ss
shr
leave
fsubl
subb
xor
ja
dec
and
push
aad
jecxz
xacquire
mov
addb
xorl
or
arpl
push
orl
jae
mov
int3
sbb
es
sub
scas
sub
cmp
inc
shll
out
fidivs
mov
outsb
jbe
cmp
gs
adc
xor
out
sub
in
and
jp
mov
shlb
cmpsb
ljmp
push
lcall
mov
and
out
mov
pop
mov
cmpsb
mov
xchg
aad
mov
setae
inc
sahf
in
dec
fldenv
jg
inc
push
xchg
xchg
mov
pop
push
scas
fs
pop
shlb
jno
cld
jne
mov
add
inc
jns
adc
mov
sub
int3
popw
ljmp
sub
call
sbb
cs
pmuludq
bound
or
push
lcall
scas
fxch
loopne
popf
push
jg
and
subb
adc
mov
rcrb
test
aas
xor
cmp
add
push
cltd
and
lods
mov
lods
jg
jnp
fsubp
fistps
psadbw
mov
mov
xor
outsl
mov
xchg
or
push
out
cmovns
mov
lahf
movb
aas
mov
cwtl
mov
imul
fs
jb
or
repz
lahf
imul
arpl
inc
dec
stc
aad
inc
andl
and
pop
inc
arpl
and
ret
mov
cli
jno
lcall
xchg
shlb
test
ret
bound
popf
dec
popf
iret
xchg
xchg
adc
mov
or
mov
divb
cld
and
js
loope
and
imul
inc
jmp
lret
xchg
pop
sub
test
clc
dec
js
aam
fmull
in
callw
sahf
bt
repz
mov
inc
movlps
cli
loopne
inc
outsb
loope
xor
scas
cmp
leave
lods
adc
mov
inc
mov
lock
testb
aaa
push
mov
lahf
je
push
and
mov
cmpsl
cmp
ret
inc
sarb
call
fstl
outsl
jno
js
inc
inc
xchg
ds
lahf
adc
add
movsb
je
or
inc
shll
pop
repnz
in
clc
daa
push
fwait
sahf
test
push
es
dec
push
addb
test
mov
push
in
mov
or
mov
fcompl
pop
mov
scas
jmp
mov
in
test
adc
cmp
fs
idiv
mov
fwait
jecxz
nop
rorb
add
mov
adc
ja
loopne
js
adc
hlt
mov
inc
sti
outsl
fmul
arpl
add
push
sbb
or
aaa
sbbl
pop
cwtl
and
repz
add
rorb
push
sbb
jbe
pushf
jne
imul
inc
xor
xor
mov
xchg
outsb
inc
inc
loop
fyl2x
or
cmpl
mov
mov
xchg
out
lea
roll
sub
mov
nop
rcll
imul
in
cs
and
cmc
mov
dec
add
adc
push
in
pop
cmpb
in
fidivs
leave
in
jl
in
lods
fs
mov
orl
or
inc
je
cli
ret
ljmp
push
xchg
mov
xlat
jp
pop
xor
dec
inc
pop
lea
lds
push
pop
jns
fcoml
lret
imulb
pop
adc
out
sbb
sarl
xchg
pusha
mov
leave
mov
sbb
cmp
pushl
rorb
call
out
push
fadd
lods
cmp
out
mov
jbe
xor
or
mov
sahf
paddsb
jl
add
mov
sar
out
inc
xchg
mov
aas
dec
add
addl
std
and
or
std
inc
testl
mov
mov
bound
jne
cld
xchg
xorb
mov
ljmp
popa
mov
inc
adc
lods
hlt
es
repz
adc
sbb
push
in
test
fldl
ret
sti
or
psraw
cmpsb
mov
mov
fdivrs
das
cmp
add
push
xchg
ds
icebp
out
mov
inc
lods
jno
mov
pushf
mov
adc
xchg
push
mov
or
das
mov
cmova
sub
outsl
int3
je
mov
or
mov
push
add
jb
lcall
clc
inc
push
mov
and
jcxz
lods
pop
cmpsl
or
mov
mov
adc
loopne
fidivl
mov
xlat
jl
dec
sbb
loop
lods
stc
mov
sub
pop
inc
jnp
sarl
mov
sbb
jmp
xchg
xor
lods
seta
out
xorb
mov
inc
out
shll
pop
cmp
rcr
shl
push
add
mov
and
ja
sub
lahf
cmp
and
sub
fstps
pop
and
or
not
mov
scas
jb
pop
test
sub
dec
lahf
test
cmp
inc
adc
lret
dec
and
or
rol
cltd
aam
lret
inc
sahf
out
jg
pop
xor
sub
adc
xor
xchg
les
mov
mov
adc
mov
das
int3
mov
and
pop
or
and
push
jp
xchg
sub
fdivrl
fs
fildll
rorl
arpl
imul
xor
inc
repnz
xchg
cmc
mov
scas
sub
or
push
popf
loopne
mov
outsb
jecxz
scas
and
aaa
cmpsl
push
xor
mov
test
sub
leave
outsb
in
je
inc
addb
adc
cmp
and
dec
add
repz
in
in
cmp
bound
adc
fmulp
xchg
mov
sti
jmp
push
cmpsb
das
stos
lcall
inc
int
pop
add
push
or
sar
mov
push
mov
cmp
push
into
insl
add
imul
ss
outsl
push
mov
ds
fimuls
pop
push
lret
out
bound
pop
jp
je
loope
mov
stos
outsb
adc
pop
out
aaa
aam
xor
mov
sbb
push
add
xchg
test
push
vcvtpd2dqy
pop
fsub
fists
ret
xor
dec
xor
cwtl
mov
scas
dec
or
stc
int
xchg
movsl
inc
movb
or
or
aad
aam
pop
fiadds
add
mov
pop
or
push
jl
hlt
xor
push
push
insl
adc
insl
pop
out
mov
movsl
inc
jmp
xor
fsubl
pop
mov
and
das
add
cmp
les
arpl
mov
aad
fcoml
lock
inc
push
aad
inc
in
cmp
lcall
shll
push
ror
jp
mov
aam
jo
mov
mov
bound
mov
mov
sbb
mull
ljmp
outsl
outsb
xor
loope
div
pop
adc
jns
push
add
mov
pushf
rolb
lds
addr16
push
cmp
sbb
out
inc
es
fs
sbb
xchg
pop
and
shrb
lock
fst
inc
or
mov
xor
inc
cltd
xlat
out
icebp
inc
add
mov
ret
js
cwtl
jmp
mov
lds
insl
xchg
inc
jb
cmp
mov
push
cmc
and
shr
adc
and
xchg
mov
bound
sbb
outsb
test
and
std
out
push
mov
fisubl
dec
mov
aad
test
inc
push
xchg
mov
sbb
pop
jbe
hlt
push
icebp
lock
repnz
mov
movsb
lock
and
das
cmp
sbb
mov
push
scas
mov
idivl
mov
cwtl
test
adc
inc
xorl
push
std
ret
imul
xchg
jo
cmpsl
and
add
lea
dec
jl
mov
pop
shlb
test
outsl
lds
lods
inc
pop
pop
insb
scas
jle
shlb
jo
pop
push
cmp
adc
xchg
add
cltd
sti
dec
iret
std
subb
pop
fdiv
cmove
dec
xchg
inc
cmpsb
pop
dec
jae
inc
into
pop
addr16
adc
pop
scas
push
mov
pop
in
or
rcll
dec
sbb
andb
into
mov
mov
fdivl
loope
loopne
popf
mov
sbb
or
in
inc
xchg
xchg
push
aam
jp
mov
xchg
daa
mov
pop
nop
popf
xor
mov
xchg
or
inc
add
push
cmpsb
adc
jae
pop
lret
dec
std
adc
insb
fcmovnb
push
rclb
xchg
jae
sbb
gs
lds
pop
mov
mov
sub
std
mov
jl
mov
sub
xlat
push
jecxz
pop
js
xlat
push
sbb
imul
pop
fcoms
bound
ret
loope
xchg
fwait
test
pop
mov
out
or
pop
push
scas
ljmp
ret
push
xchg
cmp
or
ljmp
or
xor
mov
or
sbb
outsl
mov
cmp
xchg
push
loope
hlt
cmpsl
add
inc
jg
stos
sub
mov
inc
jne
aas
cli
loopne
je
dec
mov
and
cmp
shl
sbb
inc
enter
cli
sub
mov
insl
mov
jbe
pop
and
repnz
nop
adc
jae
popf
ss
fucomip
call
pop
mov
push
adc
inc
sbbb
repz
and
push
sub
add
push
push
call
adc
icebp
or
fcomps
inc
cmpsb
xchg
addl
mov
adc
dec
cwtl
xor
or
jns
fisubs
add
ret
lret
mov
stc
push
dec
mov
loope
push
in
aaa
loope
sbb
or
aam
clc
movsl
repz
lret
jns
add
xor
jns
mov
or
outsb
and
add
and
ljmp
pop
nop
lods
test
int3
out
int
or
clc
inc
xchg
stos
js
sub
stos
sub
sub
inc
jmp
xlat
cmp
mov
pop
movsb
rorb
pushf
or
icebp
xchg
adc
xor
jo
int
divl
pop
fisubs
lds
scas
add
push
mov
mov
cmpsl
inc
adc
jae
std
adc
or
loopne
in
inc
xorl
mov
aam
pop
push
mov
sbb
test
inc
push
hlt
pop
mov
popl
lahf
adc
shll
mov
push
push
mov
lock
xchg
call
mov
pop
dec
lea
mov
add
xchg
pop
inc
sub
in
mov
sbb
sbb
sbbb
push
repnz
int
xchg
or
pop
ja
lcall
adcl
xchg
scas
es
out
mov
mov
or
push
sub
push
shrb
push
jnp
xor
and
or
mulb
mov
das
ds
sarl
cmpsl
fsts
shlb
aad
scas
rcrl
icebp
repnz
cltd
mov
pop
jbe
xchg
outsl
dec
in
stc
dec
sbb
push
stos
sar
dec
mov
cmpsb
jbe
mov
xchg
sarb
movsb
push
insl
xchg
adcb
mov
dec
pop
cwtl
pop
in
inc
aaa
xor
sbb
int3
fnsave
sub
dec
push
in
jl
jae
shlb
xchg
nop
mov
pop
ja
mov
ret
into
inc
bound
mov
xchg
hlt
push
adc
jmp
cmp
inc
lods
js
or
sub
test
push
test
aas
loope
mov
xchg
sub
mov
push
pop
xlat
cli
imul
pop
and
adc
push
mov
addb
pop
add
add
sub
mov
fiaddl
subb
shlb
xor
adc
outsl
clc
xchg
and
test
xor
ficompl
xor
lods
mov
inc
outsl
shl
rcrb
push
or
or
xchg
push
addr16
shlb
int
cmc
ss
stos
cmp
sub
push
call
sbb
mov
shll
sti
out
cmp
push
push
xchg
jp
mov
push
loop
mov
add
xor
pop
cmpsl
adc
dec
mov
push
shll
repz
mov
aaa
out
inc
mov
fcoml
sub
ds
lcall
sub
and
xlat
jp
sub
sbb
pushf
push
mov
jg
adc
jo
pop
rcrl
and
push
jg
push
shll
sahf
lcall
pop
sub
dec
sti
mov
scas
imul
inc
out
xlat
repz
add
xchg
js
cmp
lret
insb
add
idiv
out
sbb
dec
add
mov
jp
pusha
push
mov
inc
call
xchg
mov
enter
outsb
jb
outsl
xor
jo
mov
jle
or
add
inc
xchg
mov
lret
xchg
xchg
fsubrs
bound
push
inc
testl
ss
sahf
sbb
or
sarl
test
xor
fwait
lret
lcall
ss
or
dec
loop
xchg
mov
adc
push
shrl
sbb
jns
push
push
cwtl
repz
pushl
xlat
jo
cmp
mov
inc
cltd
test
pop
cmp
xchg
iret
add
mov
ret
stos
jp
pop
or
or
cmp
cmp
cmp
out
pop
mov
cmpsb
arpl
or
fnstsw
les
outsb
js
push
adc
mov
std
outsb
cmp
sbb
pop
pop
in
pop
test
pusha
popa
fisttps
push
lea
jns
sbb
aam
int
mov
pop
pop
das
fmuls
cwtl
xchg
addb
mov
popa
sahf
pop
jmp
and
pushf
in
xor
xchg
es
loop
je
mov
loopne
and
push
pop
pop
cld
sahf
cmpsl
test
sbb
cmp
loop
push
aaa
push
or
icebp
stos
pop
gs
inc
repz
cltd
pop
lret
cmc
fmuls
cmp
xchg
arpl
push
je
ss
rcrb
into
add
xchg
in
or
cs
push
in
jbe
pop
mov
incb
mull
cmpb
inc
insl
xor
fld
push
and
ss
mov
out
aam
sti
cld
jle
add
imul
ja
cltd
into
jne
mov
in
inc
into
stos
in
bound
or
pop
sbb
jmp
dec
xor
int3
sahf
push
clc
add
nop
bound
nop
adc
cmp
or
xchg
mov
mov
hlt
movsl
rcll
cmpsb
stos
push
out
mov
push
xlat
arpl
push
cmp
cmpsb
sub
int
cltd
inc
adc
cltd
out
outsb
mov
pop
sbb
adc
sarl
pop
dec
fsubrl
gs
jns
int
arpl
adc
sti
fwait
rcrb
dec
push
push
outsb
pop
fndisi(8087
xor
add
pop
scas
stc
dec
mov
or
sar
mov
sbbb
adc
repnz
cli
loopne
mov
gs
dec
stos
fildll
cli
mov
mov
inc
jne
lret
sbb
push
lcall
pop
pushf
xchg
mov
test
push
inc
imul
xchg
or
pushf
cwtl
and
divb
sti
loope
and
mov
lcall
in
xchg
je
mov
shlb
test
mov
and
shlb
mov
push
mov
loopne
cltd
icebp
clc
pop
push
or
fsubr
push
mov
dec
scas
xchg
test
into
dec
lods
addr16
cs
out
stos
ljmp
into
out
aam
dec
push
inc
mov
in
leave
xchg
jb
enter
ljmp
enter
test
fcmovnbe
or
xor
mov
mov
push
in
inc
test
add
xchg
stos
add
leave
cmp
dec
int
out
in
and
adc
mov
mov
push
cmc
dec
cltd
movsb
lock
test
add
xchg
mov
pop
dec
icebp
stos
sbb
aaa
popf
jae
shll
and
mov
cmpsl
mov
mov
push
pushf
lahf
lretw
xor
xor
sub
sub
out
xchg
or
lret
sub
push
dec
call
fs
popa
cmp
mov
mov
idivl
lcall
stc
and
jl
daa
jmp
jnp
addr16
push
mov
dec
or
mov
into
dec
fwait
in
sub
popf
and
push
arpl
out
sub
out
dec
addr16
cld
clc
adc
enter
repz
out
jp
fldenv
adc
subl
xchg
dec
clc
pop
int
js
gs
xor
add
and
mov
lods
pop
lds
sahf
mov
add
aad
das
jle
inc
push
out
pushf
in
xchg
fprem1
stos
lock
leave
adc
aas
inc
sub
lods
mov
inc
cmp
dec
ja
std
andl
insl
or
push
mov
gs
push
add
add
dec
lahf
or
shlb
rcrb
aad
dec
or
lret
popa
fimuls
iret
mov
cmc
xchg
imul
es
inc
aam
adc
mov
sub
jecxz
xorb
ja
out
dec
ljmp
mov
sbb
pop
pop
inc
je
and
push
jle
mov
cs
xchg
add
cli
xor
jbe
aaa
add
and
test
push
std
dec
sbb
sub
add
lea
orl
mov
cwtl
cmp
cmp
mov
popf
shl
or
dec
stc
adc
and
dec
mov
xchg
adc
aad
js
xchg
in
push
arpl
mov
xor
mov
sub
mov
xchg
push
cltd
xor
imul
data16
test
shrl
mov
add
lcall
jns
cmpsb
frstor
xor
push
jns
imulb
imul
cmp
xor
push
mov
inc
ja
mov
adc
jnp
pop
popf
je
or
es
inc
inc
repz
fbstp
jp
inc
adc
lock
push
sbb
lret
sbb
xchg
xchg
sahf
xor
sub
leave
out
sbb
fcom
or
dec
cmpsl
pop
and
popa
rorl
add
ja
dec
push
jae
or
mov
out
inc
dec
pushf
lret
rolb
xlat
jle
mov
nop
push
aam
es
push
mov
or
dec
pushl
imul
stos
adc
push
cmpsb
pop
or
push
mov
outsl
ret
shr
fmulp
mov
jp
mov
xchg
add
ficompl
lahf
or
jle
and
pop
mov
mov
jg
data16
xor
loope
jbe
sub
addr16
add
mov
push
ret
inc
pop
sbb
cmpsl
aas
mov
fldcw
xchg
and
cmp
add
into
xor
ds
push
fsin
and
mov
and
jns
aad
sbb
push
and
jecxz
fcomp
mov
lods
hlt
xchg
and
xchg
mov
inc
sti
aaa
mov
inc
and
andb
fstpt
dec
js
mov
inc
cmp
dec
fldl
outsl
pop
sti
repnz
xchg
jecxz
fsubp
imul
cmp
sbb
xor
das
dec
roll
test
sub
mull
sbb
inc
rcl
adc
sub
sub
imul
insl
jne
mov
inc
shll
jne
sbb
cwtl
mov
cmp
mov
dec
pop
hlt
in
testb
out
fisttps
insb
add
cmp
mov
jp
inc
test
push
aaa
movsb
notb
imul
jmp
lret
push
dec
mov
jns
imul
mov
imul
outsb
neg
mov
loopne
pushf
and
mov
ret
in
mov
xlat
push
lret
and
fldenv
mov
fcoms
or
cmp
adc
movb
into
lods
jl
pushf
pop
clc
mov
sbb
out
mov
insl
inc
dec
inc
cmp
mov
inc
adc
insb
ljmp
xor
cmp
hlt
adc
jmp
add
ds
fldenv
mov
or
fucomp
mov
arpl
cmp
outsl
push
scas
add
adc
xchg
push
or
mov
stc
jl
jp
enter
int3
mov
pop
xor
pushf
xchg
rolb
daa
xchg
sahf
outsl
pop
mov
cwtl
mov
xchg
and
lods
xor
shrb
out
dec
xchg
rclb
stc
int
lret
xchg
add
mull
popa
in
xchg
data16
inc
rolb
and
xchg
stos
pop
xchg
jmp
inc
into
data16
push
fmuls
lea
out
dec
mov
cmp
or
mov
das
rolb
jg
out
es
jbe
mov
testl
sbb
outsb
repnz
jno
push
repnz
lods
sbb
adc
ror
mov
mov
xchg
sbb
imul
ret
cs
pop
pusha
insb
mov
mov
fucom
sub
xchg
mov
inc
jae
repnz
loop
jmp
cmpsl
pop
lahf
or
sahf
adc
std
push
jo
adc
icebp
stos
dec
inc
jmp
cmpsb
inc
or
push
cmp
or
rolb
aam
jmp
shrl
cmp
and
mov
dec
or
jl
mov
aas
mov
mov
hlt
loop
lds
in
lods
rol
rcll
pop
imul
push
js
add
pop
fyl2xp1
aam
ror
ficoml
filds
std
add
inc
sbb
sbb
add
sub
push
adc
cmp
mov
dec
sbbb
xor
mov
sbb
xchg
inc
jnp
xor
flds
mov
cmp
rorl
mov
mov
outsl
nop
mov
mov
jecxz
jb
int3
or
xchg
mov
insb
inc
mov
inc
fsubrl
cmp
mov
ljmp
pushf
pop
xor
pushf
orb
jae
cwtl
movsb
xchg
mov
popa
nop
lea
repz
idiv
pop
jne
imul
cmp
cli
mov
addr16
jno
data16
hlt
stc
mov
lods
dec
in
push
pop
push
test
push
cmp
sub
aam
pop
xlat
cmpsl
adc
mov
fs
icebp
pop
push
aaa
lods
cmp
icebp
pop
pop
sbb
mov
and
sub
aas
jbe
cmp
push
out
and
mov
cmp
pushf
int3
inc
push
aas
adc
dec
inc
mov
and
sbb
lea
jl
xlat
cmp
inc
pop
and
loope
dec
mov
sub
add
sbbb
subl
add
in
fiadds
mov
inc
jle
stos
lret
sub
aaa
aas
adc
xlat
push
mov
push
lret
cmpsl
movsl
das
nop
jmp
push
mov
xor
nop
orl
push
mov
xlat
or
enter
jbe
mov
pop
add
fwait
xchg
pop
xor
lahf
stos
jmp
pop
xchg
sti
jp
js
mov
dec
ja
and
lret
pop
aam
inc
mov
fisubl
cltd
shlb
fbstp
push
push
insb
inc
stos
mov
arpl
xchg
xchg
jmp
mov
pop
pop
mov
adc
sub
enter
es
pop
pop
adc
aam
mov
xchg
add
mov
sahf
inc
repnz
addl
adc
dec
xchg
dec
das
pop
std
inc
mov
lahf
jmp
mov
sti
pop
push
push
cmpsl
adc
lods
repz
push
mov
or
mov
mov
xlat
add
dec
je
das
mov
loopne
es
jp
call
scas
divl
shll
stos
rclb
int3
cmpl
stc
lods
loopne
jns
pushf
xchg
in
incb
mov
xchg
push
jb
mov
pushf
mov
inc
test
data16
stos
movsl
insb
fdivs
jmp
mov
fisttpl
sbb
mov
aas
lock
nop
adc
and
add
dec
cs
aam
addr16
jge
dec
testb
inc
fwait
dec
je
xor
data16
int3
mov
negl
dec
out
sti
add
lret
daa
lahf
inc
out
mov
inc
loopne
iret
mov
sbb
push
xor
in
aaa
jnp
dec
fs
and
mov
cltd
sbb
xor
fstl
out
cmp
xorl
shll
pop
add
mov
rclb
dec
aaa
sti
ds
cmp
push
xchg
jne
or
cmpsb
scas
pop
dec
pop
fisubrs
flds
out
rorl
sbb
shlb
clc
loopne
fidivrl
fs
jmp
jns
stos
dec
inc
jnp
dec
ss
fsubrl
in
jns
jnp
pop
jns
out
cmp
inc
rorb
cmpsb
clc
outsb
and
ljmp
inc
rorl
test
js
ficoms
aam
nop
mov
loopne
lcall
in
sbb
les
mov
insb
mov
stc
loop
bound
sub
data16
cli
xchg
test
jo
jg
sarb
std
movsb
movsb
scas
fldt
out
sahf
mov
and
hlt
outsl
in
cli
sbb
push
inc
cmpsb
cwtl
xor
sbb
movsl
dec
fs
mov
inc
cmp
popf
test
cmpsl
cwtl
jge
ljmp
ficomps
js
inc
sub
push
xchg
sti
sub
cmpsl
sbb
stos
cs
rcll
xchg
fmuls
xor
cmp
fsubrs
loope
lcall
add
cmp
inc
ret
sahf
and
loope
sbb
repz
cmp
dec
pextrw
mov
inc
push
lods
enter
test
ret
lcall
add
jo
and
pusha
negb
sbb
pop
push
adc
popf
sbb
aas
pop
leave
fnstsw
in
inc
ss
cld
mov
mov
mov
adc
test
js
shlb
imul
adc
and
ret
jg
aad
jecxz
dec
xchg
ljmp
fcoml
fisttpl
push
movsb
xor
aas
subb
mov
xchg
jb
call
push
pop
into
fldt
pop
push
mov
lcall
mov
rcrb
and
push
sub
sub
sahf
movsl
adc
cmpxchg
dec
xor
push
jecxz
orl
iret
dec
add
sbb
or
dec
addb
test
popa
notl
leave
loope
xchg
push
mov
std
aad
fcmovne
push
cmc
jmp
or
add
fstpl
and
adc
std
fistl
or
sbb
pop
out
mulb
inc
test
loopne,pn
inc
jne
lret
xor
lods
dec
push
sbb
jl
or
mov
sbb
mov
push
dec
inc
bound
push
inc
mov
insb
repz
add
xchg
shr
cltd
lds
cmp
lret
inc
fists
pop
push
aad
mov
gs
sbb
lcall
stos
push
push
mov
ja
sub
lret
cwtl
dec
inc
mov
lret
pop
stos
sbb
dec
dec
mov
xor
popa
push
mov
mov
xchg
add
mov
subb
xchg
mov
jmp
pop
arpl
imul
inc
xor
test
int
mov
push
stos
out
enter
cmc
ret
inc
inc
movsl
out
shr
aam
in
inc
pop
aam
ficompl
or
jmp
lret
rcrb
popa
scas
and
sub
in
mov
push
movsb
js
sti
cld
or
mov
pop
pop
cmovg
cmpsl
xor
fdivl
pop
les
ds
add
hlt
into
sub
and
mov
jns
ret
mov
pop
xor
sbb
popf
ret
leave
lods
aas
test
add
jg
fwait
mov
pop
pop
popf
lea
aad
mov
push
or
imul
aad
mov
pop
sbb
inc
xor
lret
loop
lret
adc
xor
in
ljmp
cli
inc
test
sub
mov
jbe
mov
in
inc
test
outsb
inc
jns
das
mov
inc
inc
addr16
icebp
and
std
push
arpl
addr16
mov
jne
cmp
pop
jno
pop
add
out
mov
jnp
push
lret
addb
adc
fisttpll
clc
aad
xor
imul
adc
jecxz
push
dec
flds
mov
or
and
mov
inc
xor
mov
enter
fisubrs
add
jle
enter
cmpsl
imul
loop
jl
cmp
cmp
lock
sub
and
adc
and
jne
lds
inc
repnz
lahf
out
inc
push
in
mov
pop
xchg
ds
loope
cli
and
fiaddl
mov
dec
xchg
inc
aas
int
or
xchg
and
or
pop
stc
sub
iret
jae
mov
jmp
in
ds
fsts
orb
xchg
add
outsb
adc
scas
jo
adc
inc
out
jecxz
adc
xchg
cmp
or
cmpsl
daa
push
pop
inc
inc
mov
mov
push
adc
in
pop
cmpsb
cmc
ret
fwait
add
loope
fucomip
mov
mov
and
call
aaa
dec
xor
push
stos
xchg
dec
jne
jmp
lret
in
mov
xor
fcomp
or
adc
loopne
mov
fcoml
pushf
lahf
imul
je
data16
rorb
sbbb
pushf
cmp
or
xchg
pop
jecxz
lahf
into
inc
movsb
les
dec
xchg
mov
subl
movsl
inc
xchg
or
jge
lret
pop
push
sbb
clc
int3
cmpsl
xchg
out
mov
xor
lcall
in
push
test
outsl
mov
in
jno
mov
mov
iret
xchg
mov
lret
nop
xchg
insb
sbb
xchg
aam
test
notl
test
popf
fdivp
jae
push
or
daa
mov
call
ret
add
xor
sub
xor
into
inc
mov
adc
add
or
xchg
ds
test
xchg
dec
push
lods
xor
ficompl
sbb
loop
hlt
bound
les
stos
ja
mov
jp
fwait
inc
xadd
xchg
popf
mov
outsl
jb
sbb
or
and
push
inc
lock
js
int3
jae
clc
or
push
add
out
xor
dec
inc
repz
into
cli
cmp
les
add
fsubrl
jge
mov
in
mov
and
insb
dec
out
out
sbbl
push
fwait
mov
ret
cmp
sub
jge
add
scas
mov
fadd
jbe
pop
addr16
shl
lods
and
pop
cmp
dec
xlat
mov
and
mov
xchg
test
add
test
ds
inc
loope
mov
inc
out
movsb
ja
mov
mov
shrl
data16
out
movb
in
std
push
jno
sarb
xchg
jle
lock
orl
and
xchg
ljmp
cmp
mov
mov
jnp
sbb
sub
aad
xor
repz
mov
loop
pop
dec
loopne
add
mov
pushf
cli
jne
jle
arpl
lahf
pushf
hlt
sub
scas
add
mov
test
notb
push
or
das
shll
mov
xchg
jmp
int
lret
cmp
jmp
enter
mov
rolb
pop
mov
xor
repnz
push
add
xor
adc
xor
js
dec
iret
ja
out
and
sub
nop
data16
enter
in
xchg
cmp
repnz
adc
push
cmp
test
lcall
dec
push
push
mov
jbe
sub
scas
mov
mov
lock
adc
xchg
xor
push
pop
ss
fisttps
pop
dec
lea
xchg
mov
ds
movb
xorl
jb
cmpsl
mov
mov
fucom
loopne
loope
lret
mov
jmp
orb
adcb
sub
push
mov
mov
push
cmp
rcr
dec
call
push
pop
cmp
iret
pushf
es
push
pop
aas
stos
clc
les
dec
pop
mov
adc
aaa
xchg
mov
and
push
jmp
out
and
test
fnstcw
add
pop
xor
out
stos
sbbl
jno
lods
push
inc
pushf
je
push
mov
loope
push
mov
xchg
sbbl
mov
jns
add
dec
sbb
mov
imul
hlt
push
ret
push
xchg
lock
pop
ret
imul
add
popa
fcoml
addr16
push
cmp
inc
fiadds
sub
dec
lods
inc
out
mov
adc
xor
orl
clc
pop
jbe
clc
mul
daa
cs
cmp
mov
pusha
push
jecxz
xor
jl
add
ja
push
loopne
and
dec
mov
shr
mov
cmpsl
adc
add
adc
pop
lods
jp
xchg
push
loop
mov
jb
mov
push
cmp
icebp
cli
sbb
cmpsb
cli
addl
icebp
or
mov
fdivl
dec
das
pop
and
mov
iret
movsb
nop
jnp
ds
ret
call
adc
js
jnp
aas
mov
add
gs
aaa
out
push
inc
xlat
xor
inc
inc
rcl
je
xchg
out
add
sbb
jl
sbb
out
test
inc
lret
xor
gs
cmpsb
jp
pusha
outsb
pop
push
pop
mov
inc
cwtl
std
and
jmp
add
xor
adcl
cld
ss
jmp
sarl
add
xor
push
popa
rorb
mov
fstpl
cmp
rcrl
bnd
imul
push
xchg
add
aaa
inc
fistpll
jnp
pop
and
jmp
push
pushf
pop
add
mov
sbb
arpl
push
adc
mov
fnstenv
xchg
dec
arpl
cmp
ds
add
xor
sub
test
imull
mov
inc
sbb
jnp
pusha
arpl
jmp
cmp
sub
outsb
mov
push
jnp
repnz
into
mov
insl
cmp
scas
popf
sub
movsb
sbb
into
dec
xchg
into
cmp
sub
int3
stos
aaa
push
ror
fwait
test
flds
xchg
mov
lcall
imul
shll
fildll
sub
jb
cmp
and
push
mov
lods
iret
testb
int
cld
sbb
pop
push
popa
outsl
cld
pushf
popa
jmp
add
imul
xor
jno
lret
inc
mov
ds
or
pushf
movsb
in
and
sarl
scas
jle
stc
pushf
das
add
iret
mov
imulb
mov
ds
jmp
pop
cwtl
jnp
add
xchg
dec
addr16
outsb
dec
mov
cld
int
xor
sahf
ja
lcall
out
jecxz
mov
xor
dec
push
adc
or
out
jae
sub
push
out
icebp
pop
out
aam
cs
addr16
mov
dec
sbb
mov
mov
and
push
dec
movsb
mov
shll
cwtl
popf
out
pushf
cmpsb
inc
sbbl
fdivrs
test
in
push
jae
loopne
jno
pop
rolb
dec
popf
in
sub
sbb
cld
test
hlt
and
sbbl
jge
int
mov
daa
sarl
roll
js
inc
lahf
lods
dec
sub
pop
mov
aas
mov
cwtl
mov
insl
sub
adc
fwait
or
cmpsb
lahf
andl
mov
mov
mov
gs
mov
dec
push
fadds
out
or
add
subb
pop
leave
push
xor
js
add
push
mov
nop
cmpsb
pushf
maxps
push
sub
push
xchg
int
adc
sub
into
push
adc
mov
inc
add
insl
call
fcompl
inc
sub
aaa
sbb
pop
sbb
loope
addr16
mov
inc
lret
leave
inc
jnp
or
inc
enter
mov
mov
cmp
les
lock
in
add
inc
dec
aas
shl
mov
mov
inc
data16
clc
xor
iret
leave
inc
adc
test
cmp
or
into
pusha
mov
daa
lock
fnstsw
jne
aad
jge
jl
inc
sub
dec
mov
sbb
sarl
aas
mov
lret
mov
xor
and
pop
scas
cs
shl
cmp
jns
and
mov
mov
cmpsb
push
pop
sub
call
mov
xchg
push
ja
sbb
loope
bsr
rorb
fcmovnu
cs
or
mov
add
jne
push
aad
add
or
and
inc
lock
sbb
mov
or
mov
lock
sarl
stc
xlat
push
pop
xlat
mov
or
and
xchg
lret
mov
ret
sub
in
xchg
xor
popf
aad
fnsave
out
ja
push
push
cmp
sub
jno
scas
clc
iret
push
adc
out
aad
adc
icebp
pxor
pop
test
mov
mov
cmp
movsl
inc
pop
push
jmp
push
cltd
incb
popa
arpl
mov
rcl
test
iret
mov
mov
popf
cmp
jbe
adc
jnp
inc
shr
push
push
pop
call
not
inc
scas
sbb
hlt
jl
bound
subb
pop
imul
scas
jmp
jmp
lods
push
insb
and
push
loopne
xchg
sub
mov
pop
cwtl
cmp
enter
lds
out
lods
inc
test
cltd
and
push
xor
inc
scas
addr16
pop
dec
mov
scas
outsb
cmc
jne
stos
test
fwait
add
push
mov
lcall
mov
mov
pop
insw
leave
adc
aas
nop
push
inc
add
inc
mov
sbbb
xchg
sub
addr16
mov
jns
xchg
sub
stos
jle
ffree
xor
jecxz
sbb
jns
hlt
mov
dec
subb
pop
mov
rol
and
or
mov
and
repz
aam
cmp
pop
in
lcall
mov
jmp
arpl
mov
lods
jp
les
out
ds
sub
mov
lods
and
sahf
icebp
mov
loopne
push
adc
add
stc
nop
jns
sti
testb
mov
imul
jnp
xchg
int
or
inc
fstpt
adc
aas
cmp
in
pop
xor
cli
xlat
pop
test
xor
daa
add
lea
mov
std
sub
data16
and
cli
inc
mov
and
jp
ret
push
xchg
les
fisubs
aas
inc
subl
outsb
xchg
mov
shll
dec
xchg
jecxz
xor
adc
inc
pushf
xchg
je
sbb
sti
jl
fs
imul
inc
jbe
out
mov
cwtl
add
loop
cmpl
leave
inc
in
sbb
into
mov
and
adc
jne
cmpsl
adc
inc
outsl
addb
mov
sub
push
shll
xor
lret
movsb
sbb
mov
pop
xor
jne
mov
xor
dec
jne
les
mov
jo
aas
inc
repz
ror
inc
or
rorl
jbe
mov
fisttps
fisttps
mov
push
jl
pop
add
shll
cmc
cmp
jae
or
mov
inc
sbb
xchg
jp
pop
ds
jle
in
lret
jecxz
jmp
inc
jmp
xor
sub
push
inc
outsb
push
jo
add
int
arpl
pop
es
cmp
outsl
pop
fdivrs
sub
dec
repz
subb
call
jl
fisttpl
jle
addb
pusha
stc
sbb
pop
and
loop
movsb
cltd
lret
mov
xchg
lods
inc
movsl
mov
cmpsl
leave
das
push
sub
xchg
mov
ja
jnp
jns
mov
test
pushf
jnp
test
fcmovb
ficoml
mov
mov
xchg
popa
iret
cmpb
cli
adc
ja
jo
push
out
push
adc
ret
or
pusha
data16
pop
into
jbe
mov
mov
inc
jmp
lods
mov
das
lret
out
xor
cmp
ret
dec
ss
jmp
pop
sub
ficomps
fnsave
fdiv
jae
bnd
aaa
push
stos
mov
out
jmp
stos
in
dec
inc
mov
adc
xlat
cmp
insl
pop
jmp
pop
push
repnz
xor
and
dec
add
cwtl
xchg
lret
repnz
adc
sub
inc
or
ret
outsl
pop
and
scas
out
std
test
jno
pusha
inc
mov
push
pop
mov
mov
lods
push
and
sbb
fdivrl
cmp
sbb
xor
rcr
vmovntps
sahf
in
sbb
and
cmpsl
sub
fs
jecxz
push
das
jp
mov
inc
cmpsl
test
mov
pushf
sbb
cmc
adc
jns
not
sub
pop
sub
or
fbstp
inc
xchg
cmp
scas
insb
mov
jo
stc
cmp
jecxz
fs
jae
pause
push
mov
aaa
xor
pop
lds
adc
ret
push
scas
cmpps
and
cli
enter
and
pop
daa
mov
adc
rep
cld
cmp
add
cmp
enter
xor
xor
xchg
xchg
cli
or
test
jge
dec
clc
insl
sub
pusha
fildll
and
xchg
dec
inc
adc
cs
fidivs
icebp
xlat
xchg
fdivrl
add
add
mov
in
rorl
rep
sbbb
mov
mov
pop
pop
pop
fs
pop
lret
fs
add
hlt
out
add
inc
and
mov
rcll
lret
jl
enter
lock
inc
cmpsb
jle
mov
sbb
jo
cmp
mov
xor
fwait
sbb
mov
dec
pushf
jge
mov
test
inc
cmp
shlb
xor
jmp
cmpsb
scas
jae
mov
or
les
testl
inc
add
inc
dec
adc
adc
xchg
popa
sub
shr
shrl
dec
cmp
mov
js
enter
pop
pop
mov
xchg
call
mov
cltd
add
and
pop
inc
lods
jle
push
dec
rcrb
adc
pushf
jge
addr16
push
ret
pop
pop
ret
cli
adc
jmp
notb
push
cmp
cld
scas
sub
insb
sub
mov
mov
dec
cmp
loop
push
shlb
inc
repz
ret
xor
dec
jnp
pop
add
mov
stos
fildl
push
ss
lahf
je
mov
and
movsb
sub
xchg
jbe
sub
mov
loopne
sub
adc
loope
sbb
fidivrs
push
lretw
pop
xchg
mov
std
jmp
jg
mov
jbe
or
andl
icebp
aaa
pusha
lahf
iret
jmp
imul
ret
cmovs
xchg
sbb
xchg
cmp
shr
push
je
stc
scas
scas
sub
lea
outsl
or
pop
lea
sbb
arpl
jbe
popa
in
ret
inc
in
xchg
xchg
add
popa
out
je
notb
test
xor
mov
push
out
jecxz
pop
pop
push
jae
pop
sbb
and
sbb
cs
sbb
dec
sbb
or
push
scas
iret
xor
ljmp
adc
iret
xchg
arpl
daa
fistpl
jg
test
add
inc
adc
sub
stos
sbb
inc
outsb
fcompl
pushf
adc
jns
jno
test
jo
cld
fs
jne
loopne
push
mov
cld
mov
test
test
rcrl
push
mov
sub
cmp
jp
push
rcrl
das
and
lcall
push
adc
add
aaa
out
adc
mov
int
push
inc
subl
repz
xchg
cmc
push
mov
adc
xchg
es
adc
cmpsb
push
xchg
shrb
popw
out
pop
sbb
pop
ret
add
shl
data16
xchg
fnstsw
outsb
fst
lahf
cwtl
push
leave
jo
and
push
shl
cmp
mov
loop
pop
movsb
or
arpl
shll
sub
and
aas
aaa
lea
adc
ret
cmp
add
mov
cmpb
mov
into
push
orl
push
cmpsb
std
lcall
int
dec
jecxz
cmp
neg
int3
stos
es
out
mov
shrb
pop
mov
mov
shl
shlb
fsubl
mov
mov
jmp
jno
mov
sub
pop
xor
and
cmp
shl
lods
xchg
mov
out
lds
sarl
or
stos
out
loope
call
cmc
aam
and
shll
cltd
adc
ja
inc
mov
add
in
xor
int3
shlb
aad
mov
cmpsb
push
stc
pop
rcl
lock
in
lcall
xor
mov
shrl
xor
ret
push
lcall
mov
sub
scas
fists
lods
and
jl
clc
bound
cli
gs
popf
imull
cmp
cmp
imul
push
or
pop
loope
stos
jle
mull
nop
dec
dec
add
cmpsl
and
loope
sbb
ficomps
pop
sbb
mov
mov
lret
in
push
or
fildll
fucomip
mov
xchg
aaa
push
rorb
outsl
mov
lods
rorl
test
lds
stos
out
js
jnp
insb
pop
xchg
adc
jnp
jnp
aam
cltd
push
mov
dec
repz
and
out
add
xchg
lock
data16
or
adc
dec
div
in
in
in
mov
icebp
jmp
push
push
sub
dec
addr16
add
mov
dec
xlat
outsl
mov
cli
les
popl
inc
sbb
out
enter
and
and
es
outsb
test
lret
aaa
es
mov
lods
idivl
jg
cmpsl
and
fcomps
fldl
mov
jne
ss
xorb
stos
pop
push
xor
stos
or
leave
jbe
bound
andb
xor
pop
nop
test
lods
fwait
add
scas
in
aas
cmc
mov
dec
and
rclb
sub
idiv
xor
add
mov
addr16
mov
ret
lods
jle
loope
jge
jb
dec
mov
xor
cltd
xor
xchg
inc
xchg
jns
pop
mov
in
jle
sbb
pop
in
push
int
dec
pop
pop
jge
and
jnp
and
fwait
xlat
arpl
push
jne
push
mov
cmpb
inc
leave
sbb
ja
movsl
jae
aaa
into
out
rorb
into
sahf
stos
add
inc
es
and
jnp
pop
cmp
xor
fwait
xlat
xlat
mov
push
fwait
jbe
test
adc
xor
fs
cli
fucom
ret
and
rcrl
rclb
cwtl
aam
aaa
or
xchg
fnstcw
xchg
roll
inc
jno
push
and
adc
imul
or
pushf
scas
int3
into
mov
or
and
jbe
pushf
loopne
stc
sbb
repnz
popf
mov
xchg
das
notl
jle
push
cmpsb
enter
jmp
hlt
pop
js
lahf
addr16
aaa
pop
mov
enter
push
adc
insb
inc
xor
leave
pushl
mov
in
icebp
div
xchg
imul
or
mov
fiadds
iret
mov
loopne
mov
xchg
cmpl
mov
rclb
ret
js
add
ret
push
ret
pushf
mov
sub
adc
pop
fdivrs
cmp
int
jl
dec
jb
js
jecxz
out
into
test
int3
sbb
dec
pop
inc
scas
pop
flds
out
cmpsl
shll
mov
mov
das
leave
pusha
out
mov
jecxz
or
mov
mov
aam
imul
and
int
adc
and
fs
inc
fnstcw
sub
aad
push
push
scas
lock
stos
call
in
mov
mov
jnp
bound
aad
mov
cli
ja
mov
clc
cmpb
push
mov
push
xchg
jae
sub
pop
lds
stos
add
loopne
mov
shl
rcll
jmp
xor
in
pop
test
dec
enter
mov
shlb
inc
test
bound
fdivrl
mov
orl
mov
xchg
addl
adc
faddp
pop
cmp
and
mov
dec
bound
mov
or
insl
aad
cltd
arpl
test
loop
and
or
lret
add
xchg
inc
cmpsb
mov
call
xchg
push
add
popa
repnz
aam
xchg
arpl
lds
mov
movb
sub
sub
cmp
stc
sbb
sbb
das
test
gs
jge
scas
in
fwait
push
imul
aas
mov
loope
push
lock
push
adc
popf
jp
jo
cwtl
or
faddl
adc
pop
cmp
add
pop
mov
xchg
das
sti
xor
push
mov
pop
int3
addb
or
xchg
pop
sahf
mov
push
les
fwait
pop
fldenv
jmp
sbb
mov
jne
dec
or
addr16
pop
cli
add
adc
lock
or
bound
push
lea
adc
jo
mov
rcll
inc
iret
aam
push
ds
repz
and
rclb
js
mov
fisubrs
enter
push
jne
cmovl
rorl
fisttpll
push
imul
fwait
or
das
sahf
mov
sbb
stos
rolb
test
inc
enter
sbb
dec
es
lahf
push
notl
fidivs
or
dec
test
push
cmpsl
leave
mov
aas
inc
mov
es
push
rorl
or
clc
pop
mov
repz
cmp
out
pop
out
pop
dec
jno
and
mov
repz
out
iret
xor
sbb
bsf
jl
popa
insb
popf
popf
test
aam
and
cmp
test
sub
test
iret
fwait
movsb
pop
ds
mov
das
rcrb
pop
mov
and
ljmp
adc
xchg
jmp
jle
cmc
notb
mov
mov
mov
aas
or
ss
fdivrl
or
xchg
stc
mov
inc
das
imul
jns
mov
xor
sub
jl
mov
rcl
dec
mov
lcall
jno
pop
mov
mov
movsl
jle
xor
mov
repnz
push
je
jnp
push
push
sub
in
sub
xchg
mov
repnz
shl
and
std
dec
sbb
int3
adc
jge
movsb
mov
jl
jno
and
jge
setp
out
sbb
inc
inc
pushf
jb
leave
aaa
les
and
inc
es
mov
repz
and
push
cli
fidivs
inc
lock
pop
mov
movsl
ret
shlb
xor
lea
daa
rcr
add
movsl
insb
addl
lock
jecxz
int3
sbb
sub
subl
inc
xchg
push
call
scas
xchg
or
scas
inc
cmp
shll
and
repnz
and
sbb
inc
mov
jl
ss
fwait
lds
dec
cmpsl
push
mov
imul
jmp
dec
mov
xlat
jecxz
test
cmpsl
aam
sub
xchg
cmc
xor
cli
push
loop
pop
mov
jmp
loop
ret
dec
or
arpl
xor
push
xorb
loop
cltd
mov
mov
cmp
push
fsubs
imul
push
stos
in
lcall
and
adc
add
xor
enter
hlt
xchg
pop
or
scas
dec
and
pop
inc
add
xorb
sarb
fldenv
xor
pop
or
call
aad
xchg
outsb
inc
dec
dec
pop
push
push
or
xlat
mov
add
rcll
into
nop
sub
dec
fistpl
dec
ds
iret
cmp
adc
dec
cmp
paddusw
dec
adc
mov
xor
cmpsb
inc
dec
scas
sub
cmp
jnp
jmp
jecxz
jns
aas
dec
loopne
std
vprotq
xlat
adc
mov
add
lock
pop
mov
or
adc
adc
or
rolb
pop
inc
lods
mov
mov
iret
jecxz
pop
xor
ds
sub
ret
and
push
inc
inc
imul
sarl
sarl
negb
movl
mov
or
sarb
out
lcall
dec
cli
lret
popl
nop
add
or
mov
xor
and
ret
sub
cmp
jae
outsl
cwtl
mov
xor
inc
test
lds
adc
or
nop
jecxz
xchg
and
cltd
or
out
andl
push
push
cmp
mov
push
sub
jb
mov
dec
sub
fdivrl
sub
cmp
fnstsw
xor
stos
movsl
xchg
sub
repnz
fdiv
and
xor
jno
cmpsl
push
cmp
jge
cld
xor
into
sub
repnz
mov
fs
xchg
xor
cmp
icebp
and
in
clc
xor
call
mov
xor
push
hlt
stos
cwtl
dec
leave
imul
js
jl
xchg
cmc
inc
enter
mov
stc
sub
iret
loopne
jno
xor
lea
ret
fistpll
lea
or
jge
sub
aam
icebp
mov
test
and
mov
dec
xor
add
shll
xor
fldl
jns
enter
pop
ret
inc
inc
jb
insl
test
sub
jnp
popf
mov
jge
push
sub
ja
push
or
push
xor
add
jmp
and
stos
cmpsl
mov
lcall
fcoml
or
in
loope
push
push
movsl
cs
arpl
cmpl
repnz
das
rolb
not
out
mov
push
cmp
in
mov
jo
sbb
push
ljmp
inc
cmpl
in
cmp
sub
je
cmpsb
pop
xchg
andl
insb
rolb
add
rorb
jno
aam
int3
cmp
and
mov
imul
popf
jb
call
inc
or
jmp
adc
mov
sbb
jmp
cltd
call
pushf
xchg
sbb
ss
add
sub
sbb
mov
aad
loop
pop
inc
xchg
cmp
lret
xchg
cli
mov
push
jl
das
dec
mov
or
mov
push
mov
nop
test
xchg
xchg
lcall
clc
or
inc
adc
call
mov
das
or
jbe
into
iret
sti
dec
cli
ret
cli
rorb
jp
pop
pop
rcrl
and
outsb
dec
cltd
outsb
push
lret
inc
sub
mov
divl
iret
mov
jl
lcall
mov
push
enter
dec
pop
sbb
mov
jl
adc
inc
negb
inc
mov
sub
leave
inc
test
mov
xchg
leave
and
xchg
xchg
mov
cli
pop
hlt
dec
sub
pop
je
or
add
out
test
add
mov
lods
mov
pop
pop
leave
repnz
pop
cmp
jns
outsl
popa
mov
dec
cmc
adc
push
out
fdivr
enter
shrl
sbb
sahf
fnstenv
and
int
loope
pop
imul
push
mov
jg
mov
test
xor
or
repnz
inc
push
sarl
xchg
xchg
and
mov
add
pop
add
push
hlt
repnz
jle
pop
inc
push
icebp
outsl
int
test
pusha
mov
ror
xlat
push
aam
push
xchg
and
into
scas
dec
dec
rorl
movsl
aaa
in
cmp
mov
cmpsl
aas
push
mov
out
xchg
lock
into
cmp
pop
insl
pop
cmp
aaa
or
xchg
psrlq
imul
push
jns
jb
xor
ljmp
push
inc
cmpsl
xchg
out
mov
flds
mov
inc
inc
pop
adc
pop
out
dec
mov
and
mov
inc
push
mov
sbb
push
adc
add
stos
mov
cwtl
cmp
cld
movsb
dec
cwtl
lahf
aad
arpl
mov
xchg
cmp
das
lods
nop
mov
jbe
loop
sub
shlb
negb
int
or
ret
inc
or
cmp
clc
dec
jl
popa
or
insl
loop
arpl
lea
das
add
sbb
test
int
pop
inc
mov
add
test
mov
std
push
xchg
push
mov
dec
fbld
adc
sub
in
xchg
xchg
lods
test
sub
mov
xor
insb
xchg
inc
jl
mov
movb
add
lcall
frstor
cli
icebp
pop
xorb
xlat
sbb
pop
cmp
jmp
push
push
repz
and
and
push
outsb
out
rolb
push
adc
pop
out
xchg
jmp
outsl
call
push
jge
cmp
hlt
mov
cs
popa
jl
pop
stos
inc
and
addr16
jb
jg
repz
shll
fiadds
or
std
mov
arpl
xlat
je
pop
inc
add
in
js
int3
xor
cmp
inc
dec
lahf
inc
adc
push
fistl
mov
and
in
xor
or
sbb
test
jnp
fcmovbe
mov
and
xchg
repz
aas
jle
hlt
sbb
cmp
aaa
movsl
sarl
test
inc
dec
cwtl
lds
subb
and
push
pusha
jb
hlt
jbe
out
fisubl
shl
das
adc
dec
adc
rcl
add
inc
outsb
fadd
insl
imul
test
cld
sti
xchg
test
mov
cli
sub
stos
add
push
aad
fcoms
jns
adc
pop
test
push
leave
xchg
out
aam
sahf
pop
mov
pop
ss
ret
sbb
add
test
ss
lods
sub
mov
fsts
aad
fs
lods
mov
add
push
push
repnz
mov
cmp
daa
and
sub
aaa
sbb
outsb
scas
fs
pop
mov
and
and
add
jbe
push
and
mov
push
pop
pop
lods
cmp
add
lret
shrl
imul
les
jo
fdivrp
ret
push
insl
add
scas
fldl
mov
lret
les
fldl
xchg
jle
into
dec
sbb
mov
cmpsl
and
pop
pop
daa
rclb
cmp
fsubr
xchg
xor
sub
xchg
dec
and
push
or
jne
xchg
mov
push
in
xor
dec
int
loop
icebp
mov
lahf
aad
sbb
les
mov
pusha
shlb
cmp
fwait
stos
jp
mov
je
popa
pop
push
push
notl
int3
mov
dec
psrlw
xchg
lods
cwtl
hlt
xor
imul
je
dec
cmp
adc
mov
out
mov
sub
or
dec
popf
sbb
jb
xor
push
test
les
roll
je,pn
pop
leave
push
int3
rcrl
or
push
adc
loopne
cmp
add
ds
mov
xor
mov
enter
cmp
add
xor
add
inc
cltd
bound
std
in
xchg
fs
loope
stc
cs
movl
dec
insb
add
sub
outsb
clc
cmc
sub
add
mov
cs
push
loop
mov
lea
and
sbb
push
arpl
mov
mov
mov
or
jmp
gs
xor
sub
pop
pop
and
iret
push
xchg
sarl
dec
into
pop
sbb
leave
or
int
js
pop
pop
mov
inc
jmp
cmp
mov
mov
pop
stos
insb
pop
iret
fsubs
movsb
and
fisubl
jg
cmpl
sbb
push
inc
mov
out
test
sahf
push
shll
mull
jp
cwtl
sti
scas
jl,pt
lret
pop
ret
and
nop
scas
xchg
xchg
adc
mov
inc
fistl
lods
and
adc
inc
rorl
mov
jno
cwtl
jno
sbb
mov
push
push
cmp
daa
inc
clc
xor
out
mov
adc
in
in
stos
mov
dec
and
dec
cmp
arpl
and
fs
ja
cmpsb
lods
sbb
xor
jns
outsb
cltd
jno
daa
and
or
scas
lahf
cwtl
fsts
imul
dec
push
add
xchg
cmp
mov
imul
pop
mov
imul
mov
ss
test
or
fbstp
outsb
and
aaa
repnz
mov
mov
loope
leave
push
mov
data16
mov
ror
jg
in
test
add
xchg
and
int3
push
mov
insb
inc
pop
mov
jp
popf
sub
inc
repnz
inc
jns
cmp
cltd
inc
add
fcomi
fistpl
aas
mulb
dec
out
xchg
test
out
sub
add
push
xor
xchg
jns
test
fwait
cld
psrld
out
int3
in
fisubrl
sub
and
pop
out
and
movsb
sti
fmul
ds
dec
cld
pop
pop
std
pop
pop
loop
repz
insb
mov
sub
lea
pop
xor
cld
lret
lret
dec
daa
cmp
add
test
pop
mov
adc
jl
test
lods
mov
repz
mov
dec
dec
arpl
sbb
outsl
roll
lcall
mov
pop
into
shl
dec
stos
mov
dec
xor
sbb
jnp
aad
int
mov
jmp
arpl
jg
inc
stos
dec
lcall
mulb
sbb
or
daa
lret
inc
dec
movl
add
cmpsl
pusha
sub
cs
jg
fsub
out
and
push
call
rorl
lods
movsl
movsb
add
jns
jg
and
or
cmpsl
lods
push
inc
dec
test
ja
xor
push
mov
mov
shlb
jmp
out
xor
outsb
out
das
sub
jl
push
mov
movsb
sbb
dec
push
and
out
add
push
pop
jnp
push
sbb
ljmp
loopne
sbb
adc
gs
or
in
and
mov
insb
imul
mov
xor
fstps
cld
jmp
add
sbb
or
sbb
pop
mov
or
dec
mov
xchg
cmp
int3
inc
idivl
out
movsl
xchg
mov
pop
jmp
repnz
in
cmpsb
cli
cltd
cmp
movsb
jne
and
ja
pop
fidivrs
add
cmp
lcall
enter
outsb
aaa
add
ds
mov
jnp
hlt
xor
push
push
int
cmp
test
divb
mov
loopne
and
mov
push
mov
arpl
inc
add
lretw
push
jge
push
push
lahf
popa
ja
cltd
outsb
or
insl
pop
shll
je
aam
cmp
mov
pop
push
push
pop
inc
sub
icebp
pop
cmp
repz
adc
cmpsl
xchg
add
mov
sub
je
mov
jns
sbb
bound
mov
movsl
bound
lds
fwait
out
sub
fadd
mov
es
push
mulb
data16
shr
popf
push
mov
ret
xor
movsl
inc
dec
xchg
pop
fs
stos
test
ds
mov
cmc
dec
or
or
fxch
cmovne
mov
jno
mov
dec
cltd
or
rolb
arpl
xor
add
sbb
jo
xchg
dec
inc
and
xchg
shlb
xor
pop
or
adc
push
mov
mov
test
loop
data16
inc
ds
lret
dec
pop
push
aaa
mov
jp
or
push
ds
inc
mov
pop
rol
mov
js
sbb
movb
xchg
jb
arpl
test
pop
loope
mov
test
test
js
adc
and
clc
das
xchg
adc
jae
push
mov
insl
icebp
mov
int3
pop
int
enter
push
xor
enter
dec
add
stc
xor
les
inc
xor
icebp
lret
cmc
mov
icebp
pop
inc
sub
push
ss
xchg
imul
aam
mov
lds
sub
out
push
pop
pop
xchg
mov
adc
cli
and
and
pop
or
fs
mov
in
imull
pop
into
and
mov
imulb
push
dec
pop
xchg
push
mov
mov
clc
lcall
jns
sub
aam
mov
fsubrs
adc
shrb
adc
lods
push
pushl
mov
and
mov
cli
jns
pop
jmp
test
gs
mov
jns
xor
lret
sub
adc
push
repnz
xchg
push
inc
xchg
and
add
loopne
cwtl
outsb
or
stos
out
or
jp
inc
jae
mov
or
cmp
mov
xor
jb
dec
sub
lret
jns
mov
jnp
mov
sarl
xchg
or
add
mov
fidivrs
mov
inc
repz
orb
gs
push
cs
rcrb
jl
dec
xor
loope
jne
xchg
inc
mov
shrl
xor
jno
sbb
jl
mov
nop
dec
stc
fadds
rorl
xchg
ja
cltd
iret
outsb
adc
aas
enter
faddl
cld
xor
adc
and
js
inc
cmp
mov
xchg
inc
mov
arpl
push
push
dec
mov
std
cld
push
cmc
jns
jb
dec
sub
pop
lret
loopne
mov
pop
sub
scas
lods
sbb
leave
icebp
jge
pushl
jp
in
int3
jae
fmuls
and
sub
fs
and
cmp
add
sbb
inc
mov
int3
cs
push
cmpsb
cltd
insb
pop
cmp
xchg
push
mov
in
sub
repnz
dec
cmp
add
pop
mov
adc
test
add
pusha
es
dec
ret
pminsw
shrl
and
adc
and
mov
dec
sub
mov
bound
push
gs
mov
loopne
xor
insb
popf
popf
aam
push
cwtl
pop
inc
or
push
out
xor
inc
cmp
in
faddl
cmp
xor
cld
dec
clc
dec
insb
or
int3
or
push
subl
inc
imul
sti
add
pop
repnz
subb
cmpsl
fisubrl
pop
arpl
inc
and
cmp
dec
add
clc
cmp
enter
mov
ds
lock
xchg
xor
mov
lahf
rorb
jns
shll
or
inc
xor
cmp
fwait
popf
sbb
ret
js
jle
mov
mov
shll
jle,pn
push
sub
dec
add
out
fwait
or
dec
nop
jp
andb
dec
lcall
pop
ficompl
ds
lods
push
xorb
or
sub
ffreep
lds
xor
cs
xor
jle
add
mov
inc
adc
sub
xchg
lahf
fs
add
push
mov
shrb
inc
gs
pop
xchg
xor
je
xor
or
popl
cmp
dec
clc
xor
paddsb
xchg
cld
loope
pop
push
inc
aas
xchg
adc
dec
movsb
adc
add
cmp
xor
and
inc
push
jns
push
push
mov
into
cld
stos
sub
int3
std
sbb
adc
lock
adc
or
jnp
sahf
inc
iret
dec
shr
rcrl
ljmp
mov
mov
cltd
test
mov
mov
inc
daa
icebp
or
loopne
mov
lock
in
pop
cmp
pop
jmp
or
mov
jb
decb
shl
push
sub
xchg
stos
aad
dec
sub
push
leave
mov
dec
dec
adc
pop
and
cwtl
sahf
jnp
jl
xor
ljmp
loope
pop
stc
mov
cmp
sbb
mov
sbb
loope
mov
enter
icebp
cmp
mov
fwait
mov
xor
pop
test
sub
aad
mov
pop
enter
adc
cmp
sahf
sbb
push
test
jnp
fsubs
xchg
push
and
insl
cmp
mov
add
xor
sbb
mov
rcrb
scas
outsb
es
push
xor
push
cs
into
mov
inc
push
cltd
addl
sarb
cmpsb
pop
je
fsub
mov
test
sub
cmpsb
outsl
jae
roll
fs
sub
pop
mov
popf
xchg
dec
dec
js
add
xor
push
adc
cmpl
jb
fwait
in
sub
enter
inc
push
or
repz
fnstenv
lahf
lock
out
ret
je
stc
shl
fdivl
cmpsb
adcl
push
adc
add
ret
cli
jb
mov
add
test
push
jg
ret
dec
mov
jle
out
xchg
push
fnstenv
aam
jbe
lret
mov
pop
push
out
dec
xchg
mov
scas
and
push
dec
xlat
mov
pop
out
inc
je
cmp
mov
fcmovbe
mov
jo
push
fistpl
hlt
mov
jbe
mov
scas
jo
add
iret
sbb
out
ss
addr16
inc
add
xchg
jae
mov
fists
iret
aas
cmpsb
inc
add
popa
xchg
fcmovnbe
jg
rcr
cwtl
or
pop
push
xchg
cs
lods
pop
xlat
cmp
test
mov
jns
jbe
jg
push
sti
mov
pop
or
andl
imul
sbb
pushf
mov
test
cmp
push
mov
outsb
mov
stc
adcl
test
dec
rcrb
imul
stos
jg
or
inc
test
cmp
pop
sub
push
dec
imul
rolb
cmp
adc
sti
pushf
scas
xchg
pushf
dec
sbbb
xchg
repnz
pop
xchg
loop
pop
shll
jg
fdivrs
sbb
repnz
aam
daa
sbb
icebp
mov
outsb
push
shrb
mov
mov
es
lahf
inc
arpl
rclb
mov
cltd
in
ja
pop
or
pop
and
mov
icebp
mov
inc
lret
cmpsl
push
sbb
mov
mov
in
cmp
mov
lods
push
icebp
repz
arpl
mov
test
into
sub
popf
int
pop
pop
sub
into
fbstp
mov
dec
inc
push
and
lret
or
sbb
dec
cmc
jbe
cmp
dec
lds
lahf
inc
mov
test
jp
mov
cld
xchg
das
test
movsb
fwait
jmp
clc
mov
in
fsubrl
push
ret
push
add
sbb
push
xchg
cmp
lret
rolb
ss
mov
cmp
hlt
sub
jl
mov
pushf
dec
jle
stc
iret
je
js
pushf
pop
xor
data16
fs
dec
mov
cmc
cmpsb
js
dec
loopne
or
pop
icebp
addb
imul
inc
inc
or
push
pop
push
icebp
xor
mov
jb
repnz
incl
dec
rcrl
imul
pop
mov
scas
enter
and
mov
pop
loope
mov
sahf
sub
adc
repnz
sub
out
lret
repz
pop
mov
adc
lcall
jo
inc
outsb
pop
fadd
inc
mov
mov
xlat
out
inc
in
gs
jle
aaa
rorl
jnp
and
stos
aam
fistpll
push
sbb
cmpsb
adc
sub
fs
push
push
sub
mov
jg
mov
pop
aaa
or
xchg
les
sbb
jge
sbb
in
out
mov
fsubrs
dec
loopne
iret
test
enter
mov
fcom
pop
mov
sbb
or
fwait
in
lret
mov
loop
inc
mov
aaa
and
mov
mov
cltd
push
jp
repnz
adc
mov
adc
fldt
jl
flds
inc
mov
cli
imul
mov
es
rorb
subl
jb
cs
scas
inc
dec
sbb
jae
adc
jp
pop
test
push
dec
sbb
rcll
data16
stc
out
dec
dec
mov
push
mov
xchg
add
jns
std
and
ret
jbe
mov
add
std
arpl
pop
jl
jl
das
push
dec
dec
leave
aaa
iret
mov
push
out
imul
stc
mov
int
xchg
pop
sub
pop
mov
cmp
push
mov
test
fdivr
mov
inc
into
jg
jg
inc
fstpt
rcrb
out
les
subb
out
mov
out
nop
jno
mov
rorl
pop
adc
push
mov
jecxz
call
insl
or
jne
push
mov
arpl
cmc
inc
adc
sub
cmp
push
mulb
bound
in
sarl
mov
or
je
inc
jnp
gs
popa
and
dec
orl
icebp
movsl
mov
push
cmp
mov
sbb
adc
into
or
scas
or
mov
xchg
movsl
pusha
out
aam
leave
stos
arpl
jecxz
add
push
and
add
sbb
mov
cmp
xchg
fistpll
imul
movsb
cmp
jle
fcompl
sar
mov
and
idivl
mov
inc
test
add
dec
movsb
dec
dec
add
repnz
addb
shlb
mov
clc
int3
rcll
adc
jno
mov
imul
push
mov
testl
ret
pusha
mov
jle
push
adc
cmp
push
adc
dec
dec
cs
push
mov
test
ds
mov
cli
mov
mov
cmp
mov
push
scas
pushl
dec
into
outsb
jp
dec
add
jge
inc
jnp
mov
mov
out
scas
out
mov
les
out
shlb
push
xor
sub
inc
xchg
lods
xchg
push
pop
jl
and
sub
pop
mov
scas
mov
and
inc
movsl
ds
adc
test
or
pop
repnz
in
mov
mov
jle
cmpsl
lea
mov
es
faddl
xchg
inc
ds
test
lock
out
mov
push
sub
jbe
dec
mov
sub
mov
sti
jne
movsb
dec
mov
enter
adc
mov
mov
out
movsl
push
mov
rclb
jle
xchg
mov
mov
leave
dec
push
stos
fiaddl
stos
dec
imul
in
repz
mov
and
mov
iret
cmp
xor
test
aaa
jl
cmp
pop
stos
pusha
xchg
fldt
test
insb
or
pop
adc
ret
loop
push
stc
mov
sbb
dec
push
and
inc
mov
gs
push
mov
cmpsl
inc
xchg
insl
xchg
and
aas
and
fcompl
repz
cmp
inc
mov
neg
test
mov
mov
cmp
popa
mov
inc
inc
push
and
xchg
int
adc
mov
pusha
jge
sub
and
jge
je
pop
jmp
mov
scas
enter
pop
pop
scas
aas
pushf
pop
and
aad
in
mov
dec
fs
pop
ds
fisubrl
int3
dec
mov
mov
sti
jecxz
sbbl
in
and
jmp
xchg
xor
mov
test
cwtl
push
and
fmull
rol
mov
xchg
xchg
pop
mov
mov
rcl
inc
enter
enter
mov
aad
adc
adc
add
add
out
pop
inc
pop
pop
sub
mov
pop
rolb
mov
or
jge
cmp
pushf
push
mov
sub
cmp
dec
mov
aam
cli
fistl
push
stos
notb
push
mov
loop
loop
mov
fs
mov
fwait
repz
and
cmc
in
call
jecxz
lock
call
lods
cltd
loope
enter
mov
aad
mov
jae
mov
jle
adc
push
add
mov
repz
adc
fsubs
mov
or
dec
xchg
repnz
hlt
and
fprem1
aam
pop
clc
xchg
sbb
arpl
insb
decb
ds
fwait
add
repz
std
push
jns
xor
mov
mov
orl
out
or
lds
daa
jo
and
xchg
pop
dec
and
sti
sub
sbb
dec
sbb
pusha
and
adc
loope
stos
adc
mov
loop
mov
jae
pop
out
gs
outsl
notl
adc
rcll
cld
push
push
pop
push
fwait
aas
mov
sub
xchg
mov
pop
mov
cwtl
mov
ja
mov
push
sbb
in
fildl
inc
sbb
push
int
mov
movswl
leave
mov
iret
idivl
call
sbb
push
adc
lods
cmpsl
addps
xor
add
dec
aad
xor
jb
sar
daa
mov
ja
mov
loopne
shll
mov
mov
pop
adc
cli
test
jae
jl
ljmp
inc
add
add
test
loope
pop
sbb
mov
lock
pop
aam
mov
push
cs
or
mov
pushf
lcall
faddl
lds
dec
mov
sbb
cld
xorb
jbe
push
push
lea
pop
dec
pop
repnz
xor
cmp
stos
mov
xchg
cld
loope
bound
dec
jp
pop
push
data16
rorb
xor
pop
adc
jge
out
pop
mov
dec
jns
pusha
jb
pop
sbb
xchg
mov
jne
and
por
cmpb
add
outsl
fcmovne
dec
bound
jae
mov
mov
pop
push
addr16
jg
aaa
and
mov
dec
fistpl
ljmp
out
in
cmp
outsl
insb
adc
sbb
and
inc
aam
add
xchg
popf
jae
jecxz
push
pop
or
repnz
lds
test
push
sub
in
sub
adc
sub
imul
testb
sti
dec
shl
hlt
ss
daa
cld
bound
hlt
scas
js
bound
adc
js
sbb
mov
loope
cltd
rcll
and
push
xchg
jmp
loopne
insb
dec
cmpsb
push
jne
mov
ret
mov
xchg
and
in
sub
jnp
mov
cmp
sbb
mov
lret
ret
loop
jno,pn
clc
push
loopne
in
dec
gs
insb
add
cmpsb
mov
scas
mov
sbb
test
dec
rcrb
dec
mov
mov
cltd
movsl
jnp
shl
nop
mov
jg
xchg
popf
sub
and
aas
lea
ret
pop
xchg
mov
adc
lret
xor
aam
enter
sub
pop
inc
dec
jmp
jg
fbstp
in
js,pn
in
ret
ret
pop
shll
test
pop
jl
rcrb
fsubs
data16
mov
dec
jno
leave
cltd
jno
xchg
js,pn
int
out
jl
sbb
rcll
inc
lret
ret
or
insb
mov
out
adc
push
enter
jns
iret
push
or
lock
out
test
mov
aam
rcrb
xor
jae
xor
mov
push
xchg
inc
aas
fisubs
cmp
sub
xchg
imul
mov
xor
dec
jg
xlat
shlb
push
les
ljmp
pop
leave
icebp
loopne
imul
test
mov
push
mov
pop
addr16
cltd
popf
push
mov
sub
sub
pop
iret
sub
cmp
data16
jg
lcall
mov
cmp
sub
and
ror
jge
stos
aas
cmpsb
sbb
mov
bnd
xchg
mov
jmp
mov
mov
inc
icebp
test
or
mov
ret
sub
xchg
pushf
out
xor
jmp
lds
decb
adc
xor
cmp
aas
mov
push
out
pop
xchg
xchg
nop
mov
mov
aas
ret
push
sub
cli
jmp
or
jp
pop
push
fbld
jo
ljmp
stos
daa
into
jge
or
xor
mov
stos
inc
inc
out
ret
adc
lock
scas
sahf
movsl
cmp
or
xchg
pop
jecxz
movsb
fidivl
loope
imull
mov
into
pop
dec
and
and
push
pop
cmp
cltd
lock
mov
pop
in
jns
lret
cmp
sbb
add
and
fidivrl
lock
mov
daa
lock
and
orb
fisttps
inc
mov
inc
sti
leave
movsb
add
cli
cli
xchg
data16
and
ja
popf
jp
mov
mov
outsl
test
mov
jns
jg
pop
or
pop
jmp
cltd
xchg
cmp
sbb
mov
xor
nop
sahf
and
sbb
and
and
dec
cmc
scas
inc
pop
cmp
fildll
rcl
adc
push
pop
sti
sbb
and
xchg
mov
or
push
add
enter
jno
movsb
xchg
sahf
popf
and
pop
outsb
orb
in
imul
loope
sbb
fadds
adc
mov
scas
data16
lahf
mov
pop
stc
xchg
lock
fidivl
xor
iret
push
cmp
jne
inc
into
jmp
clc
jl
mov
sti
out
adc
pop
mov
arpl
inc
pop
les
cmp
pop
pushf
aam
in
push
stc
dec
cwtl
sub
out
arpl
inc
imul
push
std
in
insb
add
shr
les
call
inc
xchg
add
stc
mov
pop
push
jnp
insl
aaa
mov
push
das
pop
insb
mov
out
or
cmpsl
pushl
ja
add
insb
mov
mov
mov
frstor
ja
fistl
fdivrp
pop
iret
out
testl
add
and
jb
mov
fstpt
pop
js
or
jne
pop
jo
and
dec
push
call
pusha
int
mov
cwtl
outsl
movsb
sbb
fdivp
cmp
icebp
or
xor
sbb
adc
je
pop
sub
ror
sub
jg
push
ljmp
xchg
nop
push
shl
data16
flds
jbe
test
fwait
test
imul
dec
fsub
xchg
pop
out
loop
add
imul
and
inc
mov
ljmp
push
and
sbb
xchg
scas
arpl
inc
inc
imul
dec
adc
inc
inc
out
into
push
sub
push
adc
inc
xor
insb
cltd
jb
dec
pushf
dec
aas
js
xlat
and
xchg
popw
jl
aam
negl
test
rclb
aam
ret
mov
sbb
dec
gs
jle
lds
cmc
call
imul
mov
mov
inc
lods
jns
mov
js
stos
adc
jge
clc
push
xchg
imul
xchg
cwtl
adc
arpl
cld
inc
xchg
xorb
pushf
jno
rorl
dec
repz
jle
pop
call
xchg
inc
inc
addr16
sbb
out
lods
mov
data16
sahf
push
ret
stos
jecxz
punpckhdq
jecxz,pt
adc
or
lret
sbb
cmp
push
mov
imul
mov
inc
rorb
fwait
xchg
test
xchg
inc
mov
cmpsb
mov
test
decl
jmp
fldcw
addr16
adc
cmp
mov
sbb
shlb
movsb
jns
iret
in
push
and
inc
stos
push
rcll
inc
rolb
pop
ret
or
imul
mov
insl
xchg
int3
data16
jmp
sbb
mov
cmpsl
inc
mov
cld
pushf
movsb
mov
push
mov
pop
in
std
adc
popf
xchg
call
out
loopne
fcompl
fnsave
cmpsl
ds
inc
jmp
mov
xor
inc
cmpsl
xchg
sbbb
mov
lods
data16
lea
jae
outsb
jae
repnz
push
popa
sbb
pop
xor
cld
sub
jge
and
xchg
stos
mov
pop
stos
dec
push
dec
xchg
sbb
xchg
cmp
dec
sub
xor
ja
in
cmpb
push
mov
mov
mov
jmp
fiadds
mov
outsl
mov
inc
fimull
lret
push
mov
popa
pop
adc
jge
cld
and
xchg
outsl
outsl
pop
lods
lahf
pushf
aad
pusha
jo
rolb
popf
jne
fisttps
jno
add
fldl
fcompp
fcoms
adc
cld
and
leave
lcall
sub
lds
and
scas
iret
jns
insb
loop
add
movsb
jno
test
cmpsl
rcll
arpl
dec
and
cmp
leave
aam
lahf
cmp
fwait
pop
fisttps
fnstcw
push
addr16
mov
adc
fcmovne
testl
cld
xchg
push
mov
imul
lea
push
sbb
xchg
pushf
mov
mov
pop
movsl
add
mov
icebp
adc
jne
fadds
dec
movsl
icebp
int3
jge,pt
dec
mov
inc
cmp
dec
es
push
sbb
sub
add
insb
dec
mov
and
add
test
jg
fldcw
loope
pusha
out
fimull
mov
cmp
lret
adc
jno
int
jns
in
mov
add
xlat
cmpsb
push
and
pop
and
orb
shrl
mov
rcl
add
pop
cltd
jae
sbb
adc
hlt
mov
insl
fisttpl
cmc
orb
or
push
xor
jp
jg
frstor
js
ja
arpl
lret
xor
lock
pop
out
test
enter
sub
fsubrs
xor
sbb
fisttps
jbe
mov
cs
jno
lcall
add
adc
sub
xchg
cmp
adc
mov
mov
inc
shll
adc
scas
mov
xchg
jo
cmc
repz
push
es
lret
arpl
mov
scas
mov
and
add
add
push
xchg
or
push
test
dec
stos
dec
jnp
insb
outsl
mov
pop
dec
dec
popa
addr16
mov
pop
add
push
int
stos
mov
add
imul
repnz
outsl
and
or
push
decb
mov
lock
add
int3
in
in
std
pushf
mov
frstor
push
lret
icebp
arpl
js
std
mov
push
xchg
add
xchg
xor
lahf
xchg
xor
jmp
xor
pop
out
bound
cmc
scas
fcompl
pop
fucomi
mov
adcb
dec
imul
ds
xchg
fistpll
mov
pop
movsb
push
nop
scas
sahf
cmc
xor
test
cmp
pop
int3
shl
push
shl
inc
iret
pop
addr16
stos
je
sub
inc
daa
xor
mov
out
inc
mov
jg
push
mov
aas
out
lret
in
dec
dec
pop
in
fnstsw
sahf
ss
sub
in
mov
ja
daa
mov
jb
in
mov
fdivr
cmovne
push
adc
call
faddl
cld
add
into
or
mov
mov
xor
fldenv
clc
xor
fistps
or
cmpsb
lods
aam
push
mov
xor
in
sub
outsl
pop
hlt
pop
mov
aaa
fucom
sti
inc
shrl
movsb
pop
inc
repz
ljmp
gs
dec
test
cmovge
nop
repz
jo
rclb
es
and
jmp
aaa
lcall
scas
adc
xchg
leave
mov
pop
dec
js
out
loopne
wbinvd
adc
xchg
out
dec
cmp
in
cmp
and
inc
daa
dec
jg
mov
xchg
icebp
push
leave
mov
jg
fs
shrb
xor
adc
das
push
lock
push
mov
loope
in
cld
or
js
and
out
sub
in
fnsave
jae
cld
xchg
fcmovu
bnd
loope
xchg
sub
aaa
sub
fnstsw
cs
scas
mov
xchg
int
cmp
iret
mov
es
les
loopne
std
jnp
jno
pop
adcb
test
sbb
jmp
mov
popf
xchg
add
jae
add
pushf
mov
jge
inc
pop
movsl
clc
mov
lods
out
and
test
and
mov
push
test
ficoml
repnz
add
sub
push
pop
lcall
push
xor
pop
cmc
or
adc
lods
xchg
or
xor
fsubrs
inc
mulb
in
adc
mov
gs
pop
xchg
jecxz
mov
leave
mov
addr16
mov
stc
icebp
cltd
clc
sub
add
cmpsl
aaa
pop
and
mov
fidivl
mov
scas
sbb
jp
test
sahf
test
hlt
sub
jae
or
addr16
xor
cmpsl
aas
repnz
adc
push
mov
push
inc
adc
fdivs
inc
sbbb
push
insl
push
add
icebp
cmp
xorb
push
adc
xor
js
and
cld
sti
outsb
sub
fcoms
and
dec
dec
out
dec
lods
xchg
pop
sarl
cmp
test
lret
outsb
xor
loopne
ss
rcrl
mov
mov
jp
ret
das
mov
loop
fisubl
jno
ret
gs
sbb
mov
decl
and
push
jecxz
pop
leave
sti
pusha
test
wrmsr
das
popf
in
ljmp
mov
inc
test
out
aad
shld
pop
or
js
fdivr
cmp
jl
pop
mov
inc
xor
inc
call
loope
fwait
sar
adc
lds
mov
pop
ljmp
xorb
cmp
dec
fwait
pop
sbb
jne
sbb
insb
sub
ret
out
inc
repz
dec
push
fildl
inc
imul
ljmp
inc
cmp
clc
adc
sub
repnz
mov
jb
fbstp
push
das
or
in
sbb
mov
and
int3
movsl
rol
fnstsw
popa
movsl
or
iret
les
cmp
sub
or
shll
push
mov
push
jp
xchg
push
pushf
push
sub
testl
mov
sub
pop
popf
into
aaa
cli
or
hlt
lods
addb
jb
fidivrl
rclb
sbb
push
cld
lret
dec
das
in
ljmp
adc
loop
dec
out
rcll
jecxz
mov
mov
call
add
push
out
xor
mov
mov
jae
mov
sub
cli
movq
iret
idiv
jb
fisubrl
push
adc
or
push
or
in
mov
loopne
outsb
orb
pop
pop
gs
push
stos
xchg
scas
fwait
xor
xor
add
cltd
pop
rcrb
lods
xchg
idiv
frstor
cmpsb
dec
cmp
clc
lds
aas
inc
mov
mov
out
dec
fbld
imul
ss
ret
and
or
lods
mov
jno
jl
fwait
jmp
or
jns
xchg
pusha
out
scas
jbe
call
call
test
test
push
dec
outsl
stos
jl
movsl
xchg
lock
dec
jo
test
cmc
scas
testb
mov
and
subl
inc
insb
xlat
xor
test
adc
ret
neg
lret
inc
sbb
mov
cmp
sti
dec
jno
xor
dec
inc
sahf
xor
scas
ss
test
or
insb
jmp
stos
ja
ret
divl
mov
or
fmull
push
xchg
or
lea
mov
sbb
ja
mov
lcall
pop
arpl
pop
jmp
mov
movsb
rclb
jg
push
gs
xor
out
mov
clc
sub
cli
fisubs
sbb
inc
sbb
xchg
inc
ret
ds
mulb
dec
int3
pop
inc
cli
movsl
jg
add
test
test
mov
jge
and
in
fcomi
push
shll
decb
scas
out
out
mov
mov
mov
lods
shl
cwtl
mov
fisubl
xchg
je
mov
mov
dec
adc
mov
mov
sub
mov
jne
and
shl
ret
aad
adc
rorb
popl
popf
mov
jns
test
lahf
inc
adc
push
mov
lahf
mov
dec
mov
movsl
int
icebp
push
or
iret
ficompl
inc
jbe
into
cld
repz
addr16
pminub
insl
pop
sbb
mov
jecxz
iret
xchg
xor
mov
jmp
ret
mov
cmpsb
cmovbe
dec
push
cli
std
mull
inc
lret
mov
jb
add
bound
inc
lock
or
lods
and
cmpsl
mov
xchg
ret
iret
xor
xor
test
mov
jp
aas
dec
icebp
into
xchg
arpl
or
or
mov
xchg
mov
shll
add
sbb
div
popf
addr16
pop
cwtl
jecxz
push
cmp
inc
push
adc
andb
sahf
loope
pop
shld
mov
dec
test
and
frstor
jle
xchg
cwtl
jmp
mov
scas
inc
xchg
js
sub
daa
out
cmp
maskmovq
fmul
add
pop
pushf
out
pop
mov
loopne
insl
sub
dec
add
pop
push
movsb
jp
mov
mov
insb
inc
cli
test
xorl
and
insb
xchg
jmp
and
in
cmc
sub
xor
and
repz
das
sub
cmpsl
pop
aaa
mov
or
faddl
sub
out
adc
xor
int
add
rcrl
sbb
sbb
cmp
jns
add
or
fdivs
scas
fsubl
cmp
or
xchg
js
or
cmp
jmp
mov
pop
in
add
adcb
dec
xchg
rorb
fisttpll
cmp
push
sub
enter
ja
push
or
cmp
xor
mov
pop
pop
inc
or
dec
shlb
rolb
js
mov
mov
les
xchg
in
xchg
and
pop
xchg
mov
aad
push
leave
sbb
shlb
pushf
xlat
sbb
jg
and
mov
and
dec
push
mov
jmp
jmp
pop
pop
mov
dec
pop
dec
mov
pop
push
pop
dec
pop
leave
sbb
test
ds
push
lods
daa
cmpl
pop
dec
pop
sub
jae
jp
xchg
clc
add
imul
lds
pop
xchg
les
daa
ss
pop
or
aad
sbb
mov
movsl
in
les
pop
pop
clc
adc
xchg
imul
test
mov
in
pop
push
test
cmp
test
mov
rolb
cmp
mov
mov
js
popf
add
push
movsl
add
lret
and
lds
stos
xorl
test
pushf
sbb
les
sub
dec
das
lods
pop
cli
repz
push
pop
lcall
nop
pop
test
test
out
in
sbbb
hlt
into
sar
sub
cli
lods
add
iret
dec
or
rol
adc
mov
nop
mov
aaa
sahf
scas
sar
adc
xchg
push
lcall
movsb
cmp
je
or
roll
xor
out
push
pop
xchg
into
and
cmp
or
inc
outsl
fstps
mov
leave
fmul
xor
imul
hlt
andps
je
jne
mov
mov
ja
push
in
add
sahf
push
sbb
push
jge
outsb
mov
testl
mov
pop
xchg
and
loopne
pop
call
push
inc
xchg
sbbb
cmp
jo
fsubl
mov
inc
int3
loope
stc
pop
pop
jae
fs
add
push
fs
shlb
dec
stos
xchg
popa
dec
outsl
mov
mov
inc
cmpsb
jecxz
scas
ret
aas
lahf
ret
push
sbb
xchg
dec
and
sub
adc
subl
push
popf
cmp
jns
bound
xor
ficompl
jo
outsl
sub
cmp
mov
sar
dec
data16
add
sub
adc
jbe
lcall
pushf
mov
fwait
es
jnp
xor
icebp
gs
loopne
mov
ds
add
sbb
inc
xchg
insb
mov
inc
mov
mov
xor
mov
mov
adc
cmp
and
popa
rcll
xor
sub
xor
jg
cwtl
addr16
push
mul
sbb
push
addb
inc
stos
cmpb
ljmp
sbb
sti
fidivl
add
in
clc
sbb
shl
loope
stos
test
cltd
push
mov
loopne
xor
push
xchg
mov
movsl
adc
add
adc
inc
adc
adc
push
imul
sbb
push
daa
stc
stc
jecxz
aas
in
stos
shrb
cli
outsb
push
xor
sbb
and
in
loop
test
mov
sbb
popf
pop
inc
movsb
dec
mov
cmp
call
mov
xor
fildll
pinsrw
sub
mov
fs
stc
sbb
push
sub
je
into
out
jo
xchg
fwait
xor
sub
das
in
lods
into
in
push
es
sti
pop
icebp
pusha
pop
fs
or
mov
scas
adc
lods
fildll
mov
pop
addr16
in
sbb
or
popa
mov
pushf
jmp
mov
cmpsl
ret
and
stc
mov
push
mov
cmp
mov
loope
push
lock
sub
and
cmpsl
or
dec
mov
clc
xchg
lahf
dec
dec
nop
add
adc
lret
and
mov
ret
subl
inc
push
cmpsb
cmp
shlb
cli
pushf
rorb
mov
mov
stc
push
enter
shl
dec
inc
out
adc
sub
sbb
or
cmpsl
out
popf
roll
cmc
jmp
shlb
sub
add
or
xchg
int
adc
das
pop
and
arpl
inc
mov
shlb
pushf
xchg
xchg
addr16
fdivrl
sub
cmc
leave
sarl
shlb
mov
inc
cmpsl
cmp
add
pusha
bound
mov
push
int
add
adcb
dec
cmp
daa
jle
xchg
and
daa
dec
add
mov
inc
or
jae
roll
add
cmpl
sub
mov
cld
loope
testl
lods
push
sub
mov
jae
or
dec
pop
fstl
pop
es
outsb
daa
enter
push
jns
mov
movsb
lahf
arpl
dec
xchg
fmull
aaa
push
dec
call
repnz
jle
push
and
int3
out
xor
int
xor
push
gs
inc
pop
ljmp
jo
test
pusha
jg
xor
cmp
jmp
je
faddl
xchg
loope
shrl
cmp
aas
xchg
aam
shlb
cmpsl
or
jp
sarl
push
xchg
fisubrl
sbb
scas
or
or
std
pop
jne
aas
ljmp
scas
stos
jecxz
clc
fs
cli
xor
mov
xlat
rcl
xor
jo
cmovge
aad
push
daa
and
popa
sbb
stos
ret
mov
es
incb
popf
aas
loope
xor
push
push
mov
sahf
mov
rcr
fistps
rclb
mov
jnp
fsubrs
mov
adc
sub
mov
sub
pop
or
mov
dec
or
xor
std
lret
lcall
imul
cmp
imul
int
sbb
popa
in
orb
jae
pop
outsb
mov
rcrl
lret
and
cmpsb
ret
sub
addl
add
push
int3
loope
aam
mov
loope
faddl
mov
lea
push
push
pop
adc
inc
shrb
inc
dec
add
jmp
mov
movsl
inc
aaa
fimuls
loope
outsl
es
cltd
cltd
sub
fldl
es
nop
fisubs
jge
add
xchg
cmp
sub
js
mov
adc
mov
loop
inc
dec
shll
pop
idivl
and
into
inc
sbb
jae
scas
cmp
mov
rcrb
xchg
push
xlat
jae
daa
inc
insb
fstl
mov
or
das
mov
sarb
cmpsl
fwait
cli
jl
push
pop
fstpt
push
mov
ja
das
cmp
loope
mov
and
pop
jmp
scas
add
pop
jl
lahf
push
mov
mov
inc
lock
arpl
aad
xchg
pop
lret
lahf
fsubrl
cs
xchg
std
fiaddl
dec
iret
gs
dec
pop
sub
lods
push
gs
test
fwait
test
xchg
ret
jge
add
push
movl
pop
cmpsb
and
mov
sbb
test
sub
mov
sahf
fstpl
mov
stos
cmp
push
iret
in
pop
adc
pop
xchg
lds
cmpl
sub
cmpsb
addr16
dec
jnp
xchg
xchg
imul
sti
fidivrs
icebp
sbb
mov
push
bound
pop
push
icebp
popf
outsb
jb
fucom
mov
js
int3
outsb
pop
or
sahf
push
cltd
int3
aam
int
push
in
das
aad
jbe
mov
test
int
lods
inc
in
jno
dec
mov
mov
or
pop
push
daa
sbb
mov
mov
cmc
mov
push
xchg
pop
fwait
nop
outsb
aaa
pop
jl
leave
cmpsl
add
jno
cld
xchg
fldcw
into
or
inc
push
movsl
stos
pushf
push
push
push
fwait
mov
mov
or
outsl
data16
xor
mov
dec
sbb
daa
arpl
xorl
cmp
pushf
xchg
jle
pop
cmp
xor
fwait
test
and
mov
int
shr
fcompl
add
dec
push
cmc
lods
jae
xchg
clc
movsl
add
cli
cmp
jecxz
jo
jae
or
cmp
pop
xor
sub
mov
es
add
int3
inc
jecxz
rcll
jno
ret
sbb
push
adc
sarl
or
sbb
mov
sahf
inc
xchg
sbb
negb
fisubrl
adcl
pop
jl
xchg
xor
pop
adc
xor
dec
push
mov
ss
sub
ds
xchg
inc
cld
and
rorb
and
lds
adc
fwait
jp
mov
mov
scas
mov
mov
mov
leave
cmp
mov
pop
mov
cs
cmp
data16
jb
xchg
into
xor
cwtl
xlat
cmp
pop
out
movl
aaa
jbe
xchg
call
incl
arpl
dec
repz
push
jecxz
and
inc
daa
fs
and
xor
inc
sti
orl
xor
xor
sub
jnp
fcompl
lret
addr16
sub
test
mov
sub
mov
in
fdivrs
call
inc
loop
jnp
stos
pop
add
pop
mov
js
push
repz
lods
into
push
sub
xchg
inc
jns
jp
popf
inc
jne
cmp
push
fbstp
xor
push
inc
adc
and
jno
cltd
cli
adc
sbb
push
lds
je
pop
mov
test
jns
cmp
cmp
mov
push
mov
stc
popf
lret
jb
pop
jns
stos
loopne
mov
dec
adc
mov
mov
lds
stc
sub
jp
out
es
popa
test
mov
movsbl
jb
sbb
jp
mov
enter
andl
test
cmp
stos
les
sahf
jecxz
aaa
push
and
mov
lcall
sahf
pop
adc
rcr
iret
ljmp
pop
push
bound
push
mov
mov
mulb
stos
and
pop
jp
xor
mov
lods
ss
loope
sbb
inc
jmp
mov
mov
lock
jle
cmp
std
sbb
std
mov
mov
push
pop
out
push
xor
ss
jge
mov
lock
jno
mov
cmp
jnp
sarl
das
insl
stos
daa
sbb
fdivr
out
xor
pop
sub
add
jae
fadd
sbb
in
aam
cmpsl
jae
sarb
pop
sub
adc
jns
in
in
pop
jae
test
icebp
insb
cmp
nop
push
xchg
xchg
adc
adc
jmp
call
leave
push
or
xor
push
add
shll
cmp
sarb
jg
sbb
je
mov
sub
xchg
in
jno
lea
dec
mov
or
adc
xchg
cmp
mov
idivl
jge
add
jmp
and
sbb
pop
or
test
inc
jb
cmp
adc
push
adc
xchg
dec
bound
out
dec
adc
mov
jmp
out
cmp
pop
inc
xorb
bound
cmp
adc
mov
xchg
pop
push
sar
movsl
jp
dec
hlt
cmc
jb
xchg
inc
ja
inc
add
mov
inc
or
adc
xchg
lcall
sbbb
das
rorl
xchg
add
add
xchg
in
ljmp
sub
aaa
push
mov
jmp
mov
ret
fstpt
mov
cmp
or
xor
dec
xchg
push
cltd
cld
cmp
push
lahf
addr16
mov
push
cmp
std
xor
ret
push
xchg
test
dec
push
mov
out
out
mov
jno
es
aaa
cltd
dec
mov
fildl
and
inc
out
int
mov
daa
mov
xor
push
jne
icebp
mov
cld
loop
das
cmp
in
aaa
cmpb
stc
inc
sub
mov
lcall
push
sub
dec
jae
mov
xor
roll
mov
fisubrl
daa
lahf
call
rcrb
in
mov
jno
xchg
pop
aas
push
addr16
xlat
xlat
or
add
mov
xchg
xlat
cmpsl
aam
data16
out
push
leave
mov
pop
add
jbe
push
in
sub
jp
push
iret
pop
mov
sub
inc
std
sahf
cld
mov
jg
shlb
test
inc
aas
das
fdiv
js
lods
xchg
pop
data16
cmc
lea
xor
pop
cmp
and
pop
cmp
mov
mov
es
std
mov
loopne
pop
sub
aaa
dec
push
cwtl
or
cmp
mov
lock
mov
mov
cmpsb
mov
inc
xor
loop
sbb
subl
or
stos
jg
ja
addb
jae
push
or
add
ret
je
mov
dec
mov
adc
push
ds
sbb
sahf
dec
xor
xor
outsb
and
push
jl
faddl
ret
push
outsb
enter
fbld
add
mov
xor
adc
stc
decl
adc
pop
jmp
test
cltd
in
sub
jge
shrb
mov
lahf
loop
mov
jp
push
cmp
int
in
icebp
leave
xchg
jp
xor
sahf
and
dec
xlat
cmp
xchg
push
lock
push
das
js
pop
loopne
or
mov
pusha
loop
pop
mov
mov
std
movsl
push
pop
out
jge
insb
mov
pop
add
xlat
push
jge
jge
arpl
mov
jle
cmp
fldl
dec
mov
pushf
and
arpl
shr
dec
sub
and
aaa
adc
adc
pop
pop
test
pushf
pop
push
jb
mov
iret
data16
ss
sbb
test
sbb
bound
inc
or
mov
pop
pop
mov
loop
push
mov
mov
nop
subb
lds
pop
les
outsb
jnp
cltd
outsl
adc
cmp
test
mov
xor
das
sub
cmp
ret
mov
dec
push
hlt
ss
mov
jne
xor
and
ret
cs
xchg
sbb
sbb
jle
mov
data16
js
das
rcl
jp
fucomip
xchg
add
iret
ja
mov
sbb
cs
addr16
xchg
xlat
mov
mov
push
and
cmpsl
fadds
mov
mov
jl
cmpsb
lret
sub
out
pusha
mulb
pusha
sbb
scas
pop
dec
cmpb
and
adc
fistps
mov
mov
mov
test
pop
negb
cmp
jge
dec
or
or
insb
or
xor
push
dec
cmp
call
inc
pop
push
push
lea
popl
call
lret
arpl
ret
les
leave
sbb
adc
xor
ds
and
push
xor
dec
sub
push
daa
nop/reserved
adc
test
in
mov
repnz
shl
mov
inc
or
shrb
int3
xorl
mov
sub
jns
mov
pusha
fnsave
scas
adc
xchg
mov
pop
daa
or
sub
addb
outsl
xchg
repnz
aas
inc
scas
push
and
mov
mov
dec
mov
adc
cmp
daa
xchg
pop
lcall
outsb
popf
in
cmp
jo
xchg
inc
sti
dec
xor
inc
adc
xchg
arpl
in
jle
xor
push
jnp
sbb
cmp
mov
xchg
sbb
inc
adc
cmp
xchg
mov
push
in
pop
push
pop
jmp
dec
data16
shll
adc
addr16
arpl
in
push
inc
adc
test
ljmp
mov
test
or
cld
jmp
test
cmp
test
in
std
sarl
lock
loop
push
out
sarl
sbb
inc
imul
jle
test
clc
sub
mov
mov
aas
cmpl
or
push
cmpsb
push
mov
mov
push
pop
push
cmp
mov
les
icebp
lods
mov
pop
xor
mov
mov
stos
adc
dec
mov
shll
xchg
dec
daa
sbb
loope
mov
popf
mov
cmp
mov
jge
in
dec
mov
mov
jno
xchg
jl
xchg
xlat
in
out
sbb
fwait
test
jae
sbb
jge
aam
push
pop
fwait
jecxz
add
loopne
xchg
sti
cmp
arpl
scas
cmp
in
pop
outsb
sti
sbb
or
lds
and
xacquire
xlat
je
cmp
mov
daa
xor
push
cmpsl
pop
mov
mov
dec
insl
xor
xchg
add
mov
cmp
pop
dec
push
mov
xor
jnp
or
or
cmp
arpl
loop
lods
sbb
mov
sarl
pop
shll
mov
arpl
xor
ret
in
outsl
push
push
sti
subb
leave
jle
adc
xor
pop
add
into
inc
icebp
lahf
hlt
sbb
je
xor
xchg
jae
jecxz
adc
mov
sbb
flds
mov
cld
adc
jle
xchg
mov
fcoms
aas
dec
mov
xlat
sbbl
cmpsb
inc
mov
adc
imul
add
pop
outsl
xchg
push
flds
in
xor
push
pushf
pusha
dec
pop
inc
mov
jl
inc
xchg
push
jo
imul
cld
jl
or
or
add
mov
cmp
jne
xor
mov
cwtl
gs
addr16
cmp
jnp
push
pop
es
cmc
cs
pop
fildll
mul
xor
mov
mov
xor
je
xchg
aad
or
je
jno
aam
shrl
in
or
add
scas
insl
push
cbtw
xchg
dec
jne
arpl
mov
xor
or
pop
lcall
mov
popa
pop
adc
into
push
ljmp
popf
inc
dec
add
sub
cwtl
jno
pop
fisubrs
xchg
mov
rolb
nop
pushf
pop
mov
or
int
pushf
aad
add
cmp
mov
or
aam
imul
aas
cmp
scas
data16
sahf
jge
fists
mov
cli
cmp
fstps
pop
invd
xor
sub
es
std
and
pushl
rolb
test
and
fwait
out
adc
push
cmp
outsl
pop
rcll
push
jno
movsb
or
xor
ret
add
xchg
jmp
pop
ja
iret
nop
sbb
xor
cmp
add
mov
movsl
jp
lods
enter
pop
aam
xchg
pusha
pop
into
xchg
insb
dec
sbb
arpl
std
dec
adc
loopne
fcoml
pop
mov
cmc
cmp
sbb
or
inc
xchg
push
add
jae
repnz
mov
in
shl
mov
leave
popf
and
inc
add
xchg
int3
jecxz
cmp
mov
js
fisttpll
cmovnp
jo
dec
add
outsb
mov
adcl
cli
sbb
dec
icebp
fwait
push
cwtl
aad
mov
insl
es
scas
cltd
scas
xchg
pusha
lahf
pop
lahf
out
sub
jne
cmp
push
adc
mov
into
pop
sub
std
push
jnp
lret
push
loopne
add
xor
lock
cmp
je
mov
ret
call
jbe
push
cmp
pop
push
and
mov
into
repnz
cmp
insb
xchg
std
dec
push
sub
rcrb
push
shl
mov
mov
int
sbb
or
shlb
jnp
fwait
inc
fsub
pusha
add
cmc
sbb
and
sub
jb
dec
mov
cmpsb
add
mov
push
sub
lea
xor
push
stos
pop
cmc
insl
jle
cltd
jns
mov
dec
ljmp
sbb
call
xchg
cwtl
mov
int
add
cmp
cld
outsb
and
cmpsl
mov
inc
dec
es
or
add
pop
out
sbb
rorl
pop
daa
cli
push
mov
push
aaa
jg
es
xlat
inc
mov
add
push
xor
rorb
dec
sti
cmc
cld
add
xchg
xchg
ljmp
loopne
and
out
sti
cmp
imull
rclb
out
loop
fsubl
in
xchg
in
out
xor
std
aas
mov
xchg
xchg
mov
outsb
fsubrl
loop
cwtl
pop
int
test
xor
and
inc
dec
jl
out
xchg
pop
add
inc
pop
fcmovnb
inc
cmp
mov
pop
xor
fstpt
mov
out
mov
push
loopne
add
inc
std
je
imul
fcmovnu
mov
dec
test
hlt
cmp
sahf
lds
push
out
repnz
lock
mov
cmp
pop
mov
aam
sbb
dec
adc
mov
ljmp
aaa
add
in
pushl
sub
mov
inc
mov
jg
add
mov
sub
pop
xchg
inc
jne
pop
imul
mov
xor
push
add
aam
and
in
or
adc
adc
into
fnop
out
dec
mov
in
sarl
sbb
jnp
sbbl
xchg
pushf
insl
cmp
imul
xchg
repz
ret
mov
popf
push
xor
cmp
cld
mov
dec
xor
jmp
xchg
and
mov
mov
push
and
mov
xchg
adc
sahf
div
sub
xchg
mov
xorb
call
pop
cld
dec
jo
push
fcoml
popf
aaa
jmp
pushf
cld
jl
ja
test
jg
push
ja
ret
outsb
sub
sbb
dec
fcomp
fdivrl
and
inc
test
push
fstl
jmp
out
mov
adc
ja
and
aas
push
and
add
xor
cmp
es
test
jp
lret
jne
xchg
adc
insl
adc
or
add
in
jg
mov
pop
pop
cwtl
insb
jns
mov
and
mov
mov
mov
mov
les
jmp
stos
stos
mov
out
push
ret
inc
push
js
xor
out
adc
sbb
inc
cmp
idivb
imul
push
or
xchg
pop
aaa
push
pushf
out
xchg
jb
sub
mov
push
mov
sbbb
or
sbb
movsl
pop
adc
sub
push
out
shlb
jns
or
stos
pop
mov
push
incl
aas
sbb
test
stc
or
cmp
and
data16
fstpl
imul
test
push
mov
dec
xchg
shl
cmp
sti
je
shlb
aam
fsubs
xor
or
dec
adc
call
dec
pop
shrb
lods
add
loope
and
mov
cmp
loop
sbb
pusha
movsl
and
mov
das
rclb
fld
jp
out
ja
lea
sarl
lea
jno
ror
les
out
cltd
or
test
mov
nop
imul
lods
sbb
xor
cmp
mov
and
add
int
push
xchg
test
push
mov
inc
fcmove
lods
js
push
and
pop
xor
movl
xchg
icebp
test
mov
insl
lds
jnp
xchg
out
ret
cmp
movb
pop
popf
pop
stos
jnp
add
mov
shrb
stc
lds
push
and
lea
in
imull
lcall
ret
out
notb
lahf
xor
xor
mov
sub
dec
pushf
fists
xchg
pop
cs
imul
outsb
sbb
aaa
ret
xor
jle
bound
insl
xchg
cmpsl
push
inc
imulb
outsb
insl
aam
fisubl
sbb
mov
into
push
mov
xchg
push
iret
aad
roll
dec
inc
jo
push
pop
mov
jp
jp
ja
jl
dec
or
mov
rcr
out
jecxz
imul
movsb
pop
inc
cld
fiadds
gs
roll
mov
arpl
inc
sbb
in
add
sub
rcll
mov
mov
cli
push
out
jecxz
mov
push
ret
inc
mov
xchg
loopne
ret
adc
jecxz
ffreep
mov
orb
aas
mov
and
insb
push
js
mov
jle
xor
aad
push
insl
pop
inc
or
xor
adc
pop
shll
in
mov
or
or
push
lock
gs
mov
dec
aas
cmc
add
cld
add
cmp
stos
sbb
mov
cvttps2pi
jno
call
test
movsl
sub
scas
sub
dec
rol
out
mov
mov
mov
jmp
test
push
inc
cmpsl
cwtl
test
push
sub
notb
sub
dec
or
out
xchg
icebp
push
cs
addr16
xchg
dec
xchg
cs
pop
fmuls
fisttpl
repz
fcmovnb
imul
aam
test
sub
push
scas
scas
pop
mov
xor
push
paddsb
rcrl
and
int
ljmp
decb
enter
in
mov
and
cmp
lock
stos
lret
pop
mov
jbe
xor
dec
popa
mov
pop
jmp
arpl
inc
fldt
bound
in
int3
ja
xchg
jno
lods
jne
popf
mov
dec
fstps
ret
insl
and
outsl
jo
adc
xor
pop
mov
jbe
mov
push
adc
into
in
lahf
notl
or
xchg
fcom
pop
jo
mov
inc
mov
iret
push
je
loop
jnp
adc
adc
movb
fwait
popa
scas
jns
jo
mov
ficoms
in
pop
push
sti
sbb
push
dec
popf
sahf
sub
stc
push
jp
push
inc
sti
sbb
pand
mov
xchg
into
outsl
negl
aas
mov
push
icebp
iret
scas
rcr
cld
mov
addr16
mov
mov
xchg
xor
adcb
mov
dec
mov
push
or
cwtl
fldenv
sbb
mov
and
pop
leave
jmp
add
loop
int
and
fs
xchg
cmp
ljmp
test
mov
xchg
push
popf
inc
movsl
push
ss
pop
inc
dec
sbb
cwtl
aas
mov
inc
xchg
fs
and
push
add
mov
mov
das
push
out
fmul
insl
daa
popf
xchg
jae
xlat
rorb
adc
in
out
scas
ss
fcompl
jnp
cmp
sub
xchg
jnp
pushf
popa
scas
sub
stos
in
enter
ret
add
mov
mov
in
cmp
testl
xchg
jecxz
jb
in
rcrl
cmc
cmp
or
mov
call
arpl
cmp
je
mov
insl
and
jge
daa
fs
bnd
in
ljmp
mov
inc
stc
sub
cmp
add
loopne
and
in
jno
pop
fildl
xor
std
dec
adc
sbb
mov
cmpb
push
call
xor
adc
or
mov
mov
into
push
inc
in
out
mov
in
or
pop
rorb
add
aas
js
push
in
push
in
movsl
mov
or
loope
add
and
std
xchg
pop
ljmp
mov
sarw
gs
pop
lret
add
and
or
adcb
inc
jg
pop
and
sbb
in
or
push
test
mov
fildll
add
in
jle
xor
jo
outsb
pop
loope
push
popa
dec
in
lahf
or
or
sbb
add
mov
xor
xor
insl
cs
mov
movsl
xor
inc
inc
or
jmp
and
dec
les
scas
mov
push
lcall
lcall
mov
and
mov
shlb
push
fmuls
xor
call
out
or
jg
sbb
sub
adc
repz
mov
aas
ja
aam
xor
xchg
arpl
or
push
aas
and
mulb
mov
xlat
mov
or
ss
aas
insb
loopne
push
popa
inc
sub
push
fisttpl
mov
clc
data16
scas
pop
leave
pop
push
mov
dec
nop
cld
pop
sbb
adc
out
pop
clc
shl
sub
andb
add
rol
xchg
mull
cmp
mov
test
ss
scas
jp
jecxz
cmp
outsb
mov
adc
rcl
pop
dec
add
jecxz
out
sub
test
iret
inc
or
mov
cmpb
and
add
add
lret
les
loope
imul
pusha
jl
adc
fimuls
test
lock
add
insl
sbb
ss
xor
xchg
xchg
movsb
xor
sti
rolb
or
shll
out
clc
imul
les
push
xor
insb
sti
jmp
sbb
xor
jo
clc
pop
shlb
enter
mov
js
jb
fstps
je
lahf
jns
add
jp
jmp
sub
sub
int3
leave
stos
cld
ds
decl
aaa
insb
mov
mov
push
inc
add
cmp
call
pop
mov
jb
mov
jmp
dec
add
mov
sbb
xchg
jo
or
xor
dec
mov
xchg
mov
in
cmp
or
or
lea
enter
and
mov
and
repnz
lea
jecxz
imul
dec
pushf
jge
popf
adcl
scas
push
push
mov
lret
mov
insb
lahf
cmp
loope
jne
testl
or
fwait
bound
shrb
movsl
subl
sbb
or
mov
fmull
dec
xor
fisttpl
das
xchg
push
in
pop
test
jns
jo
pop
or
mov
and
mov
pusha
sti
sbb
mov
mov
addl
and
loopne
stos
je
insb
fs
push
sbbl
rcrb
xor
or
scas
rcrl
push
std
adc
mov
insb
cmpsb
out
call
es
push
sbb
xchg
repz
in
lds
loope
sub
cltd
ds
mov
jg
jle
add
xchg
cmp
cmp
dec
jle
pop
add
push
pop
clc
stos
sub
or
xchg
popf
repz
sbb
movsl
stos
test
pop
in
das
test
xor
xor
xchg
sbb
add
outsb
push
mov
rolb
push
mov
pop
adc
lock
jge
loop
jl
jge
push
sbb
insl
push
sbb
and
adc
push
icebp
pop
in
inc
xor
sti
pop
push
jg
aaa
or
sub
pushf
sbb
movb
mov
jmp
dec
fimull
xor
and
and
xor
sbb
mov
lock
sar
pusha
xor
mov
mov
inc
add
jo
fwait
inc
mov
fsubrs
cmp
xor
mov
jg
out
or
ret
divl
jo
or
outsl
mov
aad
xchg
imul
xor
int3
pop
popa
int
jge
mov
inc
push
xchg
jge
mulb
fisubrl
jmp
mov
fadds
lods
cmpb
cwtl
adcb
nop
pusha
ss
and
in
inc
ret
push
stc
push
push
dec
es
movsl
add
pop
scas
lahf
mov
lock
mov
pusha
ret
in
out
stos
inc
push
rcrl
sahf
and
sub
jae
sti
fldenv
sbb
ja
sahf
in
add
in
add
adc
inc
jp
or
sbb
jle
add
cmp
add
dec
inc
aas
inc
cmpsl
sti
xor
pop
xchg
loopne
xchg
and
or
mov
inc
sub
or
bound
add
fcoml
mov
in
mov
movsl
jp
add
push
notl
and
sbb
adc
iret
push
ss
shll
jno
fs
pop
dec
jp
sbb
mov
cmc
shlb
cmpsb
jge
repz
cmc
and
lcall
sbb
mov
cli
dec
fs
das
lds
push
xor
xlat
inc
ret
popf
orb
je
shll
jecxz
arpl
repz
cmpsl
mov
mov
adc
mov
jno
mov
mov
dec
pop
loopne
iret
pusha
fimuls
dec
dec
repz
jecxz
pop
les
aad
cwtl
mov
adc
adc
imul
add
add
inc
and
adc
outsl
inc
sub
lods
cmp
xchg
add
std
popf
shlb
scas
aad
sub
test
pop
fucomip
add
jmp
fidivs
xchg
leave
leave
cmpsl
aaa
add
push
cmp
lods
or
cmp
es
mov
pusha
inc
cmpsb
popf
lahf
jge
fnstcw
movb
loop
cld
cmp
into
ss
mov
sbb
das
shl
xor
int
sub
roll
sbb
stc
pop
xchg
jb
push
aas
stc
ds
sub
push
out
xchg
xchg
mov
push
sub
fstpl
cs
xchg
cmp
fdivrl
jle
mov
loope
call
out
xchg
lcall
ja
jg
jmp
aad
add
mov
mov
pop
pop
adc
scas
cmp
and
ss
ds
dec
daa
loopne
jne
sti
negl
repz
mov
sbb
jl
or
aaa
shrb
lea
sti
inc
cmp
adc
orb
aas
sub
mov
fwait
jo
mov
sbb
leave
loopne
lret
sar
inc
add
sub
pop
sbb
and
nop
ja
jle
hlt
lds
in
scas
fisubrs
lahf
ja
sbb
shlb
jo
fsubl
xchg
inc
xor
mov
xchg
movsb
loopne
out
out
xor
bound
js
scas
xor
ret
inc
sti
pop
lret
sbb
lods
or
arpl
mov
jns
cmp
mov
pop
and
lret
ljmp
fs
roll
cwtl
mov
test
xor
imul
mov
jg
mov
xchg
push
mov
push
rcll
out
jb
pop
mov
push
cmp
sub
mov
sbb
jns
adc
test
pop
xchg
shll
inc
cmp
cmp
test
jb
es
sub
push
aaa
stos
shlb
mov
pop
hlt
xchg
mov
mov
loop
lcall
and
loop
mov
xor
and
cmp
test
aam
mov
fucomi
add
sub
jbe
xor
jp
movups
ret
inc
or
mov
subb
sub
addr16
xchg
mov
cmp
xchg
push
mov
cmp
leave
loope
and
sub
and
mov
inc
mov
aam
jmp
lret
mov
insl
push
sbb
pop
and
lahf
pop
aam
data16
mulb
sub
cmc
xchg
xor
scas
pop
std
inc
fwait
loopne
enter
bound
adc
out
dec
rol
sub
cmp
mov
dec
cld
inc
push
or
mov
lret
nop
xchg
add
loopne
pop
sub
sbb
adc
lret
imul
push
mov
enter
in
push
pop
loopne
cmp
cli
inc
push
lods
sbb
jns
cs
jb
xchg
fnsave
ss
cmc
adc
mov
fstpl
nop
out
mov
and
insb
sub
lods
jmp
insb
out
mov
test
insl
push
jnp
ret
fmuls
mov
aad
test
arpl
fldt
xchg
test
mov
movsl
out
inc
jb
std
lock
push
or
pusha
sti
cmp
jns
stos
and
jbe
dec
scas
sub
sub
push
mov
inc
out
scas
mov
fstps
lds
ret
or
iret
enter
scas
mov
rorb
addb
jo
stc
roll
int
and
sub
outsl
mov
psubb
insb
repnz
ror
fildll
pop
imul
or
out
sub
fiadds
imul
popl
push
xchg
enter
cmp
pop
and
subl
cmpsl
lods
or
sub
scas
icebp
xchg
aaa
clc
sub
jge
test
pop
mov
adc
stc
adc
and
pop
adc
sub
stos
or
test
xchg
dec
cmp
push
mov
lds
lods
gs
jge
es
shlb
xchg
mov
or
pop
mov
insl
subb
imul
mov
xchg
dec
or
jae
dec
dec
repz
into
mov
out
addr16
and
mov
es
fcmovb
adc
mov
dec
xor
fidivs
lret
dec
sbb
sarl
arpl
fbstp
mov
inc
data16
iret
xchg
xor
pop
cli
fisttps
into
gs
xchg
pop
xchg
insl
sbb
mov
xchg
adc
push
pop
mov
jbe
push
ja
pop
mov
movsl
insl
cmp
sub
aas
sarb
inc
sti
pop
push
and
scas
xchg
movsb
fs
ret
pusha
repnz
stos
adc
push
dec
inc
ret
sbb
push
aam
add
fistps
sar
cmpl
xor
arpl
ror
cmp
add
in
jp
ficoml
add
mov
mov
ret
jo
movsb
mov
popf
fistpll
or
push
sti
dec
xchg
js
push
fcomps
aas
inc
paddd
stos
adc
fcoms
inc
icebp
in
push
lret
lods
cmp
mov
jle
add
lret
lret
imul
jnp
mov
in
scas
popl
imul
xor
add
sbb
sbb
add
mov
fsubr
cmp
pop
or
jle
stos
mov
xchg
outsb
nop
or
jge
and
dec
mov
adc
mov
fnstenv
jg
mov
and
je
cmpsb
std
or
scas
xchg
insb
adc
inc
scas
inc
push
cmp
push
push
cmp
jecxz
insl
ret
xchg
xorl
dec
xchg
sub
ret
xchg
mov
mov
icebp
aaa
lcall
and
loope
inc
lcall
std
and
cmp
in
icebp
add
xchg
xchg
add
leave
mov
sbb
sti
and
inc
test
dec
push
xor
jecxz
mov
dec
dec
cwtl
mov
jle
testb
mov
sub
outsb
inc
cmpsl
push
dec
cmp
and
add
sbbl
jnp
hlt
in
inc
jle
xor
jge
lret
ljmp
arpl
sub
push
dec
dec
stos
mov
mov
icebp
xlat
pop
lret
mov
mov
ficomps
out
xor
push
jno
sbb
dec
adc
push
or
push
jb
loope
pop
mov
pop
mov
fisubrl
incl
loopne
pop
pusha
std
fistpl
ljmp
xor
add
mov
fstpt
into
xchg
repnz
push
insl
and
xor
sbbb
xor
out
sbb
jge
mov
pop
je
pop
sbb
xor
mov
or
push
push
adc
cmp
mov
mov
repz
jle
jge
outsb
out
cmp
pop
add
call
and
into
and
cmp
out
cmp
and
fcoms
add
dec
mov
adc
das
xor
mov
mov
xor
push
fcomip
fisubrl
push
mov
or
xchg
test
movsl
ficomps
push
or
push
jb,pn
rep
adcb
and
outsb
add
add
loopne
xorps
push
shl
pop
sub
sub
movsl
mov
push
in
jbe
xchg
cmp
mov
sahf
insl
repz
addb
sbb
mov
cmpsl
mov
and
ficompl
sbb
sub
ljmp
mov
push
fisttpll
loope
xor
test
mov
jle
adc
sbbl
mov
jle
enter
lock
add
call
mov
das
jmp
std
movl
ss
in
or
out
loop
cmp
in
enter
movsb
roll
sbb
inc
jmp
add
shrb
stc
add
insl
jno
stc
cs
shll
shrl
adc
ds
repnz
cmp
scas
dec
cmp
mov
popa
or
mov
mov
xlat
add
push
dec
ror
pop
and
outsl
rorl
cmp
pop
test
jge
in
mov
mov
int3
in
es
lret
sbb
sub
bound
mov
mov
push
into
mov
pop
mov
gs
ss
nop
mov
sbb
sbb
cltd
push
and
subb
mov
cltd
pop
test
jno
or
insl
imul
mov
setbe
ja
push
mov
imul
out
gs
enter
xor
ror
repz
js
cmp
scas
imul
stos
inc
rcrb
jns
push
sub
sbbb
lret
insl
add
dec
shrl
mov
popa
push
lahf
loope
add
mov
stos
out
lret
les
inc
adc
cmpb
sbb
cli
js
jo
inc
dec
sub
push
movb
cs
push
rcrl
das
pop
jg
or
cmp
fistps
outsb
insb
stc
mov
dec
rcll
mov
loopne
test
das
mov
dec
or
test
les
gs
enter
mov
jo
mov
push
sub
adc
pop
add
ret
cmp
iret
aam
pop
ja
cmp
lcall
stc
lds
pop
push
ret
push
cltd
pushf
lret
xchg
ja
push
aad
or
stos
jmp
inc
jmp
dec
xor
and
inc
iret
in
and
stos
pop
icebp
cltd
rcrb
lods
mul
sahf
scas
inc
lds
bound
call
dec
mov
add
dec
dec
xor
cmp
pushf
cmp
pop
jecxz
fimuls
insl
into
xchg
and
mov
inc
xchg
add
inc
inc
aad
cwtl
mulb
xchg
std
stc
xchg
rorb
jmp
stos
repz
sahf
or
xchg
insl
mov
lcall
and
daa
ljmp
lods
int
push
mov
cmpsl
mov
mov
ds
pop
shlb
and
mov
mov
dec
or
stos
call
clc
cs
lock
andb
aaa
ss
adc
jecxz
gs
push
sbb
lret
lret
dec
fst
sahf
cs
in
mov
xorb
stos
mov
cmp
jecxz
stos
xor
addr16
pushf
repz
sub
xor
fidivrs
sbbl
pop
push
sbbl
js
xchg
mov
mov
test
pop
mov
push
xor
jecxz
mov
sbbl
pop
pop
mov
cmp
ja
adc
cmpsl
jmp
mov
idivb
fwait
dec
enter
dec
inc
fbstp
iret
and
pop
adc
imul
xor
pusha
add
stos
testb
clc
daa
inc
repz
mov
mov
into
or
inc
jp
lret
sub
sbb
fcoms
jns
xor
std
pusha
aad
scas
aad
cmpsb
and
arpl
and
arpl
and
xor
cmp
repz
xchg
jbe
into
insl
dec
stos
jae
icebp
mov
inc
or
cwtl
enter
fwait
push
out
imul
jb
je
pop
pop
and
jg
jae
cmpsl
and
add
xor
popa
sarl
mov
jno
out
imul
int3
push
cmc
fcmovnb
push
sub
adc
push
movsl
lret
jo
daa
data16
jne
add
leave
dec
mov
stc
inc
mov
sub
mov
popf
sbbl
pusha
push
lret
das
int
xchg
jns
xlat
inc
mov
lcall
mull
ret
imul
push
push
jg
jmp
dec
sbb
mul
je
cmp
jno
in
ljmp
pop
in
sub
adc
dec
ret
xchg
stos
fcoms
call
cld
insb
or
leave
loope
enter
jo
cvtpi2ps
mov
push
andl
ret
cmp
mov
jg
xlat
setle
cmp
ss
and
or
sub
inc
movsl
call
mov
and
movsb
je
pushl
mov
xlat
repz
inc
and
test
test
push
xor
pop
or
in
add
pop
cmpsb
adc
fwait
ljmp
test
dec
ret
lds
pop
daa
mov
dec
jg
dec
pop
add
dec
daa
int3
adc
movsl
cmpsb
lea
cmp
pop
loopne
push
push
jmp
test
je
ja
cs
xchg
xchg
and
fmuls
or
xchg
jge
arpl
lds
sbb
fsts
inc
mov
mov
daa
fwait
add
inc
adc
or
push
push
mov
shlb
push
stos
incb
jp
repz
cmp
loop
pusha
push
maskmovq
negl
xor
mov
mov
cld
sub
sbb
insl
and
xchg
sbbl
or
repnz
dec
push
xor
mov
stos
hlt
sbb
inc
and
shrl
les
sbb
js
push
gs
ss
cmc
dec
xlat
rorl
xor
jle
mov
popa
insl
push
fcompl
pop
lahf
lret
adc
data16
push
or
or
push
out
testl
cwtl
and
jno
ret
pushf
push
mov
cmp
scas
add
xchg
sbb
das
pop
inc
fwait
lds
and
daa
adc
sbb
shll
aas
movsl
fldlg2
pop
cmp
les
or
dec
jno
push
nop
pop
repnz
ret
and
cmp
repz
gs
sti
xor
imul
mov
mov
insb
or
lods
adc
push
lcall
mov
cli
jp
mov
arpl
enter
xorl
addr16
jmp
cltd
sarl
xchg
std
pop
aas
cmp
loop
imul
add
push
mov
bound
mov
insl
jge
push
pop
imul
dec
push
jle
test
xchg
jnp
mov
sub
nop
pop
mov
push
shll
xchg
and
lret
push
mov
mov
lcall
xchg
fcmovnu
mov
mov
mov
mov
xor
outsb
xchg
int3
insb
aam
pop
mov
insl
jns
sahf
arpl
and
ja
addl
jne
fstp
fs
mov
test
lods
out
mov
dec
out
adc
dec
sbb
cli
xchg
int3
clc
add
cmpsl
mov
inc
mov
sub
adc
push
stos
out
push
cmp
mov
ss
pop
or
iret
popf
fldl
icebp
in
push
fisttpll
es
sbb
mul
ja
xchg
mov
fildll
ljmp
daa
jle
mov
addr16
xor
pop
imul
orb
adc
fmuls
sbbb
add
mov
add
out
lods
xchg
filds
call
mov
les
stc
out
leave
mov
inc
jo
or
into
scas
aas
lret
scas
mov
cli
popf
outsb
cmp
popa
cmpsb
test
nop
cs
jo
lods
data16
or
xchg
cmp
cmp
mov
pop
mov
pop
mov
out
hlt
cltd
aaa
gs
dec
out
xor
int
dec
xor
sub
data16
push
xlat
push
push
shrb
pop
and
push
pop
pusha
sub
mov
imul
stos
push
add
out
test
scas
sub
pushf
ja
pop
loop
test
sub
xchg
loop
jns
mov
in
repz
cld
mov
or
ret
and
pop
arpl
cmpsl
jl
mov
out
out
xorb
inc
test
push
lahf
es
push
cmp
lds
popf
xor
sub
es
lret
test
outsl
mov
sub
add
sahf
les
push
and
idivl
dec
mov
call
mov
mov
xor
popa
dec
pop
stos
pop
and
push
sbb
es
push
cmpsb
add
subb
adc
mov
mov
sahf
or
stos
push
add
adc
sahf
push
das
and
or
cmc
mov
fdivrl
lret
out
jae
inc
dec
pop
and
mov
outsb
mov
and
jmp
xchg
jbe
push
push
push
faddl
lret
pop
inc
nop
mov
lods
and
lret
mov
sub
aas
rcr
dec
xor
adc
inc
pushf
enter
arpl
or
mov
in
mov
lahf
arpl
or
gs
mov
xchg
and
cwtl
sbb
or
dec
faddl
jbe
jne
sub
in
xchg
sub
fistl
push
fs
jp
in
mov
hlt
jae
jmp
adc
fadd
and
imul
sbb
cmpsl
mov
lds
pop
xchg
push
enter
movsb
stc
scas
fisubl
leave
fwait
dec
cmpsl
mov
ja
arpl
test
pop
sbb
mov
roll
cmc
sbb
je
pop
mov
xor
add
inc
aas
inc
jno
jno
imul
stos
xor
fstps
push
lds
movsb
push
jge
je
or
out
popa
and
dec
lcall
pop
das
or
cltd
lods
xor
mov
push
xor
nop
sub
xchg
sbb
mov
lods
pop
push
mull
mov
xlat
inc
pop
cmpsb
jmp
js
push
lock
mov
or
rcrb
sti
mov
stos
lret
mov
sbb
dec
cltd
mov
or
adc
xor
jge
cltd
and
xchg
mov
stos
push
scas
test
bound
es
pop
ds
out
push
jg
add
jns
jmp
cmpsl
mov
mul
sub
inc
aad
repnz
je
outsl
push
sub
sahf
sbb
cmpsl
sub
dec
notb
insl
insb
movsl
mov
in
jb
popa
and
loop
and
enter
pop
sbb
inc
xchg
xchg
gs
sti
rcll
stc
and
mov
inc
into
mov
dec
ret
into
pop
and
mov
cmpl
sbb
sub
xchg
shlb
or
popl
js
leave
cltd
adcl
sbb
jecxz
mov
fistpl
fidivs
fwait
xchg
out
push
mov
sub
xchg
cmp
mov
lret
rorb
and
mov
int
pop
jmp
cmp
lahf
out
push
sub
cmp
adc
cwtl
dec
pop
cmp
dec
xchg
and
add
push
js
pop
popa
divl
inc
repnz
push
push
pushf
lcall
push
rorb
add
insb
sub
xchg
shlb
cli
xor
inc
stos
ja
sub
out
jle
lock
popf
std
pop
mov
stc
or
aam
sub
loop
loop
jnp
sarb
loop
fmull
mov
inc
imul
xor
push
shll
shlb
adc
arpl
pop
cs
mov
push
jnp
mov
hlt
fidivs
cmpsb
mov
adc
push
insb
mov
jns
jo
lret
jo
jge
push
mov
insb
adc
ret
stc
adc
and
pop
sbb
adc
jb
mov
rcrl
adc
cs
or
mov
mov
pop
push
insl
or
in
and
fisttps
jnp,pn
mov
dec
aam
cwtl
adc
roll
cmc
aaa
and
mov
mov
test
ret
dec
xchg
shlb
dec
in
push
ja
sahf
adc
mov
pop
divb
pop
and
xchg
sti
push
in
cmpsl
push
outsb
mov
mov
mov
int3
arpl
pop
stos
pop
inc
mov
xchg
jno
push
hlt
popa
lds
jp
test
adc
ror
sti
dec
outsl
pop
mov
aas
fs
pop
pushl
in
and
leave
in
adc
and
push
lcall
outsb
mov
in
pop
inc
xor
iret
les
cmp
xchg
jne
hlt
iret
jno
mov
mov
std
push
sub
sbb
or
scas
fs
sarb
or
int
faddl
ret
sub
push
leave
imul
sub
daa
sbb
lret
or
fstps
lcall
and
insl
mov
scas
js
mov
sub
adc
mov
fsub
in
out
popf
mov
inc
sbb
mov
push
sbb
mov
push
mov
mov
cmp
inc
xchg
decb
and
adc
mov
jecxz
sub
inc
fcoms
pop
sbb
repnz
pushf
aam
adc
xchg
aas
pop
fsubrs
leave
add
lods
mov
dec
loop
icebp
daa
jbe
adc
fstp
andl
popf
gs
xchg
and
setbe
xchg
mov
gs
adc
dec
and
xchg
in
scas
sbb
push
push
inc
add
or
push
or
pop
scas
or
dec
dec
jmp
add
scas
add
outsb
ljmp
ret
adc
add
adc
sahf
test
insl
jno
push
in
outsb
aam
test
arpl
and
rolb
xor
out
inc
leave
popf
in
xchg
mov
scas
rcrl
call
movsl
mov
push
test
or
imul
jmp
push
adcb
mov
mov
stos
shlb
out
into
xchg
ja
mov
lret
mov
lds
outsl
fnsave
cmc
push
nop/reserved
mov
cmc
lods
and
or
leave
lcall
fucom
push
hlt
idivb
loopne
sub
sub
inc
movsl
mov
test
fucomi
push
push
mov
inc
sub
adc
outsb
shl
sbb
xchg
mov
pusha
adc
mov
arpl
and
mov
push
push
push
insl
push
fidivrs
ss
mov
mov
and
ds
arpl
pop
adc
pop
xchg
in
fcmovu
mov
and
sbb
hlt
or
test
jle
or
icebp
out
xchg
into
and
subl
repz
xchg
mov
and
iret
int3
aas
and
sbb
xor
loope
pusha
fdivp
inc
loope
dec
outsl
mulb
out
rcll
push
hlt
ds
dec
mov
mov
jb
jmp
cmp
push
add
adc
cmc
and
sbb
mov
in
stos
or
inc
out
sub
adcl
push
or
stos
pop
mov
pop
adcl
push
jmp
xchg
jo
clc
xchg
add
lret
fs
lods
xchg
pop
adc
cltd
das
movsb
mov
lcall
das
movsl
push
dec
std
cmp
pop
mov
bnd
jmp
mov
pusha
xchg
popa
into
aaa
aas
test
push
inc
mov
mov
add
or
bound
push
ret
shl
dec
loope
sub
stos
xchg
cli
lcall
mov
lock
outsb
not
lret
rorl
out
cmc
outsl
mov
sub
in
in
or
movsb
cmp
out
mov
push
and
ss
int3
cmp
popf
sub
mov
std
pop
jp
xor
and
bound
aam
arpl
sub
jg
rol
mov
and
ja
and
mov
cs
inc
gs
fdivl
mov
ja
push
sub
ljmp
repnz
mov
cmc
lods
fwait
push
dec
dec
jl
inc
lea
jmp
int3
inc
mov
cld
add
push
xchg
mov
dec
mov
xchg
mov
stos
pop
mov
das
mov
loope
or
jb
nop
in
mov
lock
inc
in
rorb
int
mov
imul
movsl
add
outsl
dec
mov
int3
or
jae
out
inc
pop
jns
mov
idivl
push
fnop
adc
xor
jmp
movsl
fistpll
xlat
dec
mov
fistpl
xchg
int
mov
jnp
popa
and
repnz
adc
pop
test
push
fnstenv
cmp
or
aam
dec
adc
sarb
mov
es
or
aaa
je
or
rcl
push
xchg
imul
sahf
ds
lret
cmp
leave
inc
cmpsb
out
aam
enter
adc
out
faddp
arpl
xchg
or
in
out
push
lret
mov
mov
mov
cmpsb
or
dec
sub
inc
lods
jg
js
or
pop
push
push
xor
and
pop
jo
jno
mov
mov
cmp
mov
jbe
and
cmpsl
mov
bound
xor
jge
sub
adc
jl
lods
pop
cwtl
bndstx
sbb
push
mov
rol
mov
jmp
sahf
sbbb
scas
testl
jp
je
jle
stos
dec
je
and
mov
js
adc
dec
in
or
lret
push
inc
xchg
rclb
rol
icebp
jmp
sbb
jne
mov
pop
outsb
clc
insl
push
mov
mov
les
paddb
inc
pop
mov
fisttps
ret
cmp
jge
push
pop
repnz
sarb
push
xchg
mov
jae
and
mov
pop
inc
push
xlat
ja
add
push
je
sub
aad
push
push
cmp
xlat
divb
rorb
mov
pop
add
inc
add
push
add
sub
dec
aaa
cli
push
xor
add
dec
cmp
mov
jns
mov
imul
xor
pushf
inc
xchg
jp
sub
pop
outsb
insl
stc
dec
jnp
mov
clc
cltd
sar
fwait
inc
cmc
lcall
fidivl
push
xor
jge
push
out
or
jp
pop
pop
and
xor
adc
or
iret
clc
cs
xchg
mov
dec
jmp
mov
push
pushf
rcll
push
clc
jg
enter
subb
std
jno
cmp
out
jl
mov
add
add
mov
push
sbb
shlb
out
fmull
lods
dec
pop
fisubl
nop
xchg
jo
add
int3
push
sbb
push
mov
xor
ret
sbb
jno
loope
outsl
push
fdivr
add
iret
and
jge
cmp
out
fucomp
xchg
pop
cmp
mov
pop
push
push
aam
std
jecxz
out
lods
adc
xor
push
add
faddl
add
add
inc
gs
pop
out
lret
cmpb
sub
int
sbb
add
test
cmpb
add
jmp
mov
inc
lcall
sti
dec
call
push
fxch
ja
mov
jg
repnz
repz
idivl
adc
push
out
shrb
xchg
jp
sbb
shl
js
push
push
les
or
inc
mov
mov
fs
jb
inc
loopne
inc
psllw
test
jl,pt
inc
pop
mov
cmp
jbe
jg
xchg
mov
dec
rorb
hlt
pop
lcall
pop
jb
mov
push
or
mov
push
sub
jno
pop
mov
in
cmp
cwtl
aad
mov
faddl
add
mov
cwtl
stos
cmp
sahf
mov
outsl
je
mov
mov
loop
insl
lods
mov
inc
aaa
adc
inc
lods
inc
ret
mov
in
mov
out
or
dec
test
movsl
cmc
outsb
lret
jge
and
ds
into
ljmp
out
mov
push
pop
mov
jb
ss
dec
jbe
dec
dec
into
iret
jecxz
loope
jbe
push
adc
xor
sub
dec
add
mov
and
stc
push
mov
jae
pop
shrb
jmp
aad
pop
mov
or
push
jg
or
xor
mov
dec
dec
aad
fcmovnbe
mov
cmp
js
mov
inc
mov
fcomps
mov
adc
sarb
icebp
and
aam
xchg
call
lcall
jne
iret
adc
pushf
nop
sub
mov
jnp
shll
cld
push
mov
lods
mov
inc
lods
std
ljmpw
rcr
js
and
inc
mov
adc
mulb
ds
or
xor
popa
jns
aad
mov
mov
lcall
adc
lret
lods
sub
mov
dec
call
mov
dec
sub
mov
stos
je
lret
mov
push
clc
mov
sahf
ror
mov
je
mov
dec
and
sbb
dec
lods
xor
movl
scas
test
sub
hlt
in
push
ss
lahf
jecxz
inc
add
into
push
cmpsb
das
sub
lea
mov
lahf
std
cld
mov
xchg
cltd
mov
pop
ds
dec
or
sahf
mov
inc
outsb
in
cmpb
sub
jnp
dec
div
xchg
xor
out
jl
cli
dec
or
icebp
inc
mov
stos
aaa
subl
loopne
out
push
push
push
fs
mov
fcmovnbe
test
nop
push
cmpsl
cmpsl
jb
push
test
adc
movsb
sub
mov
pop
adc
xor
iret
pop
andb
or
sbb
pop
test
pminub
stos
shlb
jo
shll
mov
stc
dec
pop
xchg
fcoml
jecxz
aas
dec
enter
rcl
pop
xor
test
insb
adc
sub
xor
jae
mov
xor
stc
push
pop
insb
pop
jno
fidivrl
mov
imul
dec
mov
jle
pop
aaa
notl
fsubp
mov
mov
cmp
mov
xchg
test
sahf
pop
inc
dec
movsl
jno
adc
sbb
bswap
dec
adc
outsl
in
mov
scas
testb
inc
adc
add
cmp
dec
add
dec
dec
popa
test
inc
add
rcrb
fwait
jge
stos
loop
and
and
shlb
pop
cmp
sub
lods
aas
pop
jo
inc
jmp
pop
aaa
lock
sbb
loop
cmp
push
jns
push
cmpsb
stc
std
call
cwtl
loopne
aaa
xchg
mov
popl
pusha
jecxz
aam
cmpsl
movsb
pop
scas
out
xchg
mov
insb
pop
xchg
ror
repz
filds
xchg
or
inc
xor
mov
jmp
test
lods
mov
fsubs
adc
mov
mov
cmpsl
testb
lods
or
pop
iret
ss
imulb
mov
sti
jg
add
add
jns
or
idiv
sarl
fs
std
push
adc
add
popf
lods
icebp
mov
xchg
cmpsl
sub
push
decb
mov
lds
xchg
xchg
ret
jmp
inc
ds
test
loopne
xchg
inc
int3
sarb
sahf
add
out
jl
sbb
mov
pop
and
mov
test
push
add
loope
jno
sti
stos
repnz
insl
xor
sbb
xor
cmp
adc
push
fldl
ss
sub
mov
nop
mov
shl
xchg
xchg
rorl
sub
and
xchg
lret
push
stc
cmp
sub
inc
mov
popf
mov
scas
sub
fwait
jno
shl
sbb
shlb
push
enter
test
inc
cmp
cld
popf
pop
in
or
pop
push
dec
pop
clc
popa
lcall
push
cmp
dec
cld
mov
xor
sbb
test
xchg
add
shlb
or
out
jge
adc
imul
lcall
repz
sbb
orb
dec
imul
insb
mov
test
call
xor
cmp
or
and
pop
cltd
mov
repnz
sbb
cli
cltd
pop
out
lea
add
outsl
fsubp
adc
rcrl
dec
pusha
xchg
sahf
push
push
das
adc
outsb
bound
lods
jo
repz
sbb
in
ja
repnz
jnp
and
push
inc
rorl
mov
fbstp
je
inc
fwait
ret
xchg
and
xor
pop
xor
dec
mov
repz
lds
jle
cmp
cmp
jg
mov
inc
cwtl
or
cltd
mov
sub
loop
sub
mov
test
mov
lock
pop
out
lahf
push
std
inc
dec
out
stos
lcall
lods
cmp
inc
idiv
pop
xchg
xchg
sbb
sub
or
scas
cmpsb
pop
sbb
repnz
mov
out
jne
cmpsl
out
inc
sub
sbb
cmp
int3
cltd
inc
pushf
xchg
sbb
fdivrl
xchg
lret
iret
daa
xchg
mov
andl
or
sbb
push
adc
movsb
mov
mov
mov
xor
lods
in
arpl
iret
adc
cmpl
jle
jp
fldl
jbe
xorb
loop
mov
nop
std
rcr
jno
fisubrs
push
mov
inc
mov
dec
inc
shll
sti
test
mov
ficoml
jmp
scas
arpl
lea
shrl
xor
jae
dec
rcl
dec
movsl
imul
dec
cmp
jnp
mov
jg
xchg
adc
mov
mov
adc
out
push
mov
dec
pop
sbb
clc
lods
nop
hlt
and
popa
stos
hlt
pop
in
push
stos
cld
inc
push
test
faddl
popa
xchg
pop
in
mov
pop
adc
jb
ljmp
inc
lahf
or
sbb
fistps
movsl
lcall
pop
test
add
shr
xor
pop
test
adc
cmpsb
fsubl
ja
or
cli
cwtl
jl
xor
cld
add
int3
pop
mov
dec
push
mov
adc
inc
xor
ret
add
pop
lock
or
dec
xchg
rcl
in
into
dec
mov
ja
cmp
bound
shlb
mov
scas
dec
and
sub
push
jmp
and
out
fmul
icebp
xorl
cwtl
xlat
inc
mov
or
imul
push
rclb
jmp
sbb
lock
jno
xor
adc
das
xor
out
dec
mov
insl
data16
push
ficomps
jo
cs
xchg
and
lds
cmpsb
bound
arpl
xchg
into
in
mov
leave
loope
aaa
orl
les
cmpl
mov
rcl
in
or
je
loop
xor
jae
adc
in
scas
push
xchg
ds
mov
jl
sbb
orps
pop
push
aam
aad
dec
pop
enter
test
or
daa
cmpsl
push
test
cmp
mov
or
pop
adcl
inc
das
push
hlt
stos
adc
inc
adc
push
popa
addr16
dec
cli
stos
in
add
jl
cmp
mov
dec
xchg
fdivrs
movsl
jnp
in
js
je
dec
push
lods
adc
inc
andb
in
dec
iret
pusha
push
mov
or
insb
pop
jne
out
arpl
push
mov
mov
sarl
fistpl
repz
mov
test
in
dec
add
popa
bound
jmp
mov
sbb
inc
xchg
mov
mov
sub
xchg
imul
test
jp
call
sub
xlat
das
jns
mov
add
xchg
xor
arpl
xchg
cmp
sbb
stos
push
ret
jns
sub
insb
rcrl
jg
repnz
stc
mov
cwtl
sbb
mov
arpl
xchg
pop
and
sbb
push
xchg
mov
or
aas
jb
push
cmp
scas
aas
ljmp
in
insb
or
test
mov
pop
fdivrs
push
dec
xor
xchg
and
mov
repz
mov
fsubs
add
pusha
les
mov
sbb
inc
dec
lods
dec
adc
pop
jns
lcall
inc
xchg
pushf
adc
into
mov
hlt
in
out
xchg
andb
loopne
imul
arpl
push
add
push
xchg
data16
test
ret
fs
cmpsl
cmp
inc
xchg
movsl
inc
pop
jmp
inc
push
add
adc
sbb
jecxz
incb
loop
mov
aaa
push
add
das
pop
dec
sbb
iret
jg
or
add
jbe
xorl
aad
pushf
and
adc
repz
sub
push
mov
pop
les
or
and
xchg
inc
outsl
icebp
xor
adc
xorb
xor
int3
repnz
dec
pop
imul
xchg
push
ss
dec
faddp
lods
andb
fwait
mov
add
sub
lds
gs
jne
mov
lock
dec
or
pop
lods
ret
aam
or
push
test
cmp
test
push
cmpsl
push
xchg
mov
xor
pop
add
add
mov
push
xchg
sbb
sub
jl
call
shll
das
push
cmpsb
mov
rcr
lock
xchg
aas
push
aas
or
nop
pop
add
inc
setp
pusha
mov
lock
sbbl
leave
call
cs
or
push
mov
xor
imul
test
mov
ja
movsl
lret
ss
fildll
pop
inc
call
mov
sbb
cmp
aad
ja
push
pavgw
cmp
aad
call
xor
mov
repz
imul
clc
data16
xchg
add
mov
sbb
cltd
icebp
fistpl
pop
pop
push
cmp
add
jns
push
xlat
popa
or
sub
in
fsubrs
movsl
sarb
xor
add
cs
jmp
imul
shll
xor
adcl
insl
icebp
nop
jl
fimuls
bound
and
cvtps2pd
cmc
js
dec
mov
les
lds
imul
inc
or
pop
sub
push
jnp
addl
or
pop
out
or
cmpsb
test
cmp
pop
cmp
pushf
stos
mov
pop
or
mov
test
lock
inc
dec
xchg
pushf
cmp
mov
stos
not
fsubrl
and
sub
jg
sub
fstps
pop
je
lock
adc
test
fisttps
stos
call
inc
cwtl
inc
inc
clc
js
enter
pop
lods
cmpb
decb
jns
pop
xchg
ja
test
fsubs
inc
mov
cmpsb
stos
outsb
outsl
pop
lods
in
mov
mov
xor
movhps
cld
ror
int
ja
push
jb
inc
stos
mov
adc
insl
lret
rclb
in
aad
mov
push
adc
xchg
ljmp
dec
ret
in
mov
into
arpl
adc
or
dec
adc
jbe
xchg
rcr
push
fidivs
les
lret
and
add
lock
jo
xchg
inc
gs
cmpb
jb
arpl
mov
sbb
jmp
movsb
int3
xor
int
pop
mov
and
in
out
xchg
pop
xchg
std
push
sbb
jl
add
nop
mov
inc
mov
xchg
adc
int
push
in
pop
and
dec
mov
sub
xchg
pushf
leave
or
add
loopne
cmp
sahf
pushf
pop
repz
and
sbb
fists
fwait
loopne
cli
push
mov
cmc
or
popa
jno
jge
sbb
add
ja
and
push
mov
fwait
dec
clc
push
mov
or
or
enter
stc
sbb
xor
xchg
mov
iret
mov
jg
sub
lahf
push
and
hlt
fs
sub
sub
pusha
cmp
fwait
xor
sub
and
rorb
mov
xor
cld
addr16
std
adc
movsb
inc
sub
inc
or
sbb
lea
jg
lret
mov
or
or
fidivl
mov
xor
out
cmp
adc
loop
mov
mov
test
jno
cmp
into
les
mov
xchg
mov
lods
sti
sub
cmp
mov
or
jle
push
mov
push
aaa
push
cltd
mov
cltd
movsl
cmp
jmp
sub
mov
lahf
cs
cli
sti
nop
mov
idiv
clc
sbb
xchg
fneni(8087
repnz
lea
mov
xchg
mul
push
ss
aad
mov
ss
std
xchg
paddb
dec
add
ds
out
cmp
andl
mov
mov
pop
dec
inc
inc
push
lods
cmp
mov
iret
pop
mov
sbb
inc
mov
add
fcmove
adc
shlb
ret
adc
push
loop
mov
and
dec
xchg
inc
inc
loope
xchg
movsl
and
sub
push
out
aam
mov
mov
out
cwtl
rcl
and
sbb
sbb
pop
push
or
mov
xchg
xchg
dec
mov
sbb
imul
lods
xchg
loope
lods
sub
cmc
dec
loop
adc
cmp
shl
movsb
mov
ljmp
jle
shrl
jge
rclb
mov
push
and
xorl
pop
scas
mov
fimuls
sub
pop
iret
lea
leave
fldl
jg
lahf
adc
cmc
xchg
jge
daa
xchg
push
imul
test
xchg
fwait
adcb
pop
jnp
hlt
push
xchg
fwait
sbb
js
pop
xor
arpl
daa
mov
test
test
rcr
pop
jno
fcompl
data16
jle
mov
aas
loope
rorl
movsl
fcompl
test
inc
jecxz
mov
or
xor
ljmp
dec
faddl
and
test
mov
ret
inc
dec
adc
cmp
and
enter
mov
adc
insb
sub
decb
aaa
add
mov
insl
int3
mov
fwait
lea
in
pusha
add
cmpb
cld
jl
jmp
jae,pt
scas
cmp
xor
hlt
and
pop
jp
es
mov
cmp
and
cwtl
dec
jae
xor
sarb
sub
imul
inc
movsb
mov
and
cmpsb
outsb
std
popa
add
and
ljmp
sbb
fsubrl
adcl
jbe
bound
clc
mov
sub
cmpsl
sbb
inc
hlt
xor
mov
rcr
jb
xor
les
add
sub
mov
scas
repz
int
jb
sub
mov
test
mov
add
adc
je
test
jg
or
fisubrs
add
loopne
or
movsb
sbb
shll
mov
call
jmp
aas
lds
cmp
xor
mov
push
divb
cmp
sarb
jle
jne
lock
testb
push
lds
dec
insl
sahf
in
xchg
mov
xchg
dec
xchg
adc
popf
inc
push
pop
push
int3
or
test
xlat
mov
sub
insl
push
and
push
or
arpl
lods
add
xor
mov
jne
adc
jae
adc
pusha
sub
enter
in
adc
mov
xchg
in
pop
mov
jmp
rcrb
xor
sub
mov
sbb
add
pop
fdivl
sub
scas
or
ret
adcl
loope,pt
movsl
jge
mov
insb
add
dec
and
sti
pop
mov
jl
cmp
insl
cmc
sbb
ljmp
sarl
test
dec
test
xor
mov
xchg
jo
push
in
dec
imulb
inc
inc
dec
fwait
es
dec
stc
cmovl
pop
sahf
arpl
push
xchg
inc
lods
fisttpl
test
cmp
and
mov
je
push
in
test
daa
test
nop
mov
aas
cs
movsb
icebp
or
xor
imul
stc
inc
adc
pop
push
iret
sub
imul
mov
xor
lds
cmp
movsl
adc
add
jns
sarb
les
mov
add
lcall
push
nop
add
aaa
cmp
cmp
inc
jb
jnp
lahf
jle
mov
movsb
jae
xchg
std
lcall
popf
cmp
idiv
mov
add
cmp
rorb
aaa
add
cmp
mov
ret
inc
or
movsl
cs
sar
popl
adc
mov
mov
fiadds
sbb
inc
push
inc
ret
addb
insb
imul
dec
add
mov
and
and
cwtl
fadds
xor
movsl
aaa
mov
add
jbe
pop
mov
fstps
out
std
icebp
push
xor
xchg
inc
stos
cs
jg
xchg
into
adc
mov
xor
test
fmuls
push
pop
rcrb
cmp
mov
loope
dec
pop
rep
int3
aad
mov
icebp
aam
push
ret
mov
insl
insb
mov
lcall
mov
push
adc
arpl
adc
mov
jb
repz
fcmovnb
shr
sbb
sbb
bound
mov
fcoml
in
dec
dec
test
adc
dec
add
push
getsec
in
sub
lods
add
and
fcoml
jmp
mov
xor
mull
jg
js
dec
sarl
fmulp
adc
xlat
aam
push
lea
push
aam
psubd
sub
daa
jns
xchg
adc
mov
push
add
icebp
insb
push
mov
fdivrs
jl
sbbb
pop
pop
xor
inc
lret
push
or
dec
idiv
pcmpeqd
je
int
cwtl
out
iret
dec
or
lret
fs
cmp
repnz
cmpl
mov
xor
or
sti
adc
lea
call
shll
test
incb
push
xor
sbb
lret
jb
add
and
and
out
or
jg
mov
mov
cli
sub
jmp
ret
xlat
mov
cli
xlat
cmc
in
jle
les
push
push
fisubrs
mov
adc
test
jae
pop
xchg
stos
add
jb
mov
pop
lds
mov
fdiv
insb
rolb
xchg
sbb
inc
jecxz
lock
jnp
inc
mov
shlb
mov
cmpsb
fidivrs
mov
dec
inc
cli
inc
loop
nop
imul
push
mov
loope
movsl
or
iret
xlat
bsr
dec
inc
fwait
xchg
enter
pop
outsl
cmp
adc
sub
xchg
and
ret
push
ficoms
faddl
flds
aad
sub
jmp
jnp,pn
add
xchg
inc
ret
fs
xor
lock
lcall
pop
aam
inc
mov
popf
fyl2x
mov
cmp
fxch
adc
mov
inc
fldenv
dec
cwtl
sbb
push
int3
imul
daa
adc
dec
fcmovbe
push
xlat
add
dec
clc
lock
loopne
test
push
scas
cmpsl
fstpl
jmp
movsb
xchg
test
ficoml
daa
jne
jmp
or
add
lock
imul
or
lods
and
sahf
cld
pop
or
jmp
aas
xchg
test
mov
sub
mov
xor
sarb
jno
dec
bnd
jb
pop
lods
xor
add
test
cli
in
cmp
inc
movsb
cmp
lahf
adc
mov
or
mov
sub
push
inc
loope
push
fnstsw
fldcw
jnp
enter
mov
xchg
and
jnp
mov
pop
jo
ret
ja
in
ret
mov
lea
fldcw
mov
insb
loope
dec
sbb
repz
jbe
pop
cmc
mov
cli
sbb
and
aas
std
lret
loopne
xchg
ret
xchg
dec
imul
out
mov
jmp
dec
mov
pop
sti
adc
xor
aam
lods
aaa
and
into
enter
push
mov
enter
push
mov
push
aam
sub
jnp
enter
pop
cmp
push
faddl
xor
cwtl
roll
xor
adc
je
adc
push
ja
arpl
sub
shl
xor
cmp
ljmp
mov
or
fldl
push
icebp
or
ret
scas
lret
sbb
push
cmp
sbbl
xchg
mov
stos
lock
aas
inc
sub
cmp
jb
dec
mov
ss
jns
xchg
or
nop
outsl
imul
int3
es
fs
cltd
fimuls
cmp
sar
dec
xchg
lret
enter
dec
test
shrb
jbe
dec
repz
sbb
dec
xchg
xchg
mov
lahf
cmpsb
cmp
and
mov
cmpsb
pusha
add
jno
or
bnd
mov
sub
push
daa
loope
add
and
xchg
mov
xor
aad
je
sub
hlt
xchg
cmp
fcomip
lret
xor
jg
roll
movsb
insb
aas
sbbb
dec
cmpsb
std
inc
push
movsl
in
fldcw
jmp
pop
xor
icebp
xchg
rorl
and
aaa
lds
adc
inc
aas
nop
and
loopne
lcall
inc
push
imul
fldt
push
dec
mov
in
test
push
xchg
test
insb
rcll
push
mov
sbb
clc
add
and
test
pop
jae,pt
cmpsl
std
add
test
cld
sbb
mov
jnp
lods
scas
into
dec
xchg
push
sbb
jae
xlat
scas
cs
ret
mov
les
mov
push
out
lcall
pop
xchg
dec
inc
mov
sbb
add
int
stos
imul
fwait
jae
cli
outsb
lahf
gs
popf
push
push
dec
xchg
jnp
push
inc
neg
sub
outsb
cmpsl
dec
js
xor
xor
scas
xchg
dec
adc
imul
sub
es
adc
mov
sub
pop
fdivrs
leave
je
mov
fdivrl
std
jb
inc
cli
repz
sub
je
mov
leave
rcr
lods
cmp
xchg
sub
imul
mov
mov
pusha
inc
cmp
mov
jnp
fidivs
push
mov
imul
mov
cmp
sbb
rep
test
clc
je
xor
out
pop
clc
pop
and
insl
jg
sub
xlat
lcall
andb
jp
mov
std
adc
xlat
xor
lahf
inc
jmp
jae
aad
js
xor
mov
add
push
mov
mov
xchg
mov
dec
cmp
xor
mov
push
jle
or
cltd
test
loop
testb
jne
inc
and
addl
stc
insl
iret
js
dec
outsb
je
aad
lret
inc
pop
push
sbb
cmp
mov
jp
gs
into
sub
add
adc
data16
jbe
pop
xor
repz
daa
sarl
add
sbb
repnz
das
or
mov
cmp
mov
test
jle
mov
mov
dec
insl
cmp
sti
mov
cwtl
rcll
dec
js
inc
or
out
faddp
xchg
add
sub
adc
fadd
jo
sarb
or
mov
pushf
xchg
test
sarl
arpl
and
pop
xor
les
mov
fisubl
jg
pop
push
cmpsb
pop
pop
add
mov
or
and
sub
cmpsl
addr16
push
inc
lret
fiaddl
stc
pop
dec
lahf
push
xchg
insl
std
jbe
push
inc
cmp
dec
cmp
ja
push
inc
roll
arpl
cmp
dec
adc
aad
mov
adc
dec
ret
test
inc
movsl
pop
cwtl
inc
sbb
in
and
jge
lea
aaa
jg
test
scas
push
in
or
test
insl
fildll
mov
loop
and
scas
jl
jbe
es
xchg
ret
je
jge
fcmovb
cltd
dec
cmc
mov
ds
inc
xchg
xchg
jbe
cs
xchg
or
arpl
and
mov
mov
in
sbb
lods
dec
cltd
xchg
pushf
je
clc
sub
ljmp
nop
add
movsl
mov
pop
lods
xchg
and
xchg
adc
dec
pop
stos
mov
mov
in
test
and
movsl
insl
cld
add
mov
mov
add
inc
inc
movsb
xor
ss
pop
fiadds
imul
cmp
popf
in
hlt
ljmp
insb
add
popf
dec
push
roll
cmpl
push
fsubrs
add
push
jp
aas
test
lea
adc
mov
arpl
orl
xor
dec
jnp
mov
xchg
jge
sbb
pop
mov
adc
pop
push
dec
lret
mov
dec
int3
aam
scas
push
movsb
pop
nop
mov
xlat
je
jnp
sub
cmp
inc
add
jo
mov
mov
lods
sub
lahf
lret
in
mov
add
mov
push
mov
dec
cmp
les
mov
pop
pop
adc
pushf
lahf
or
mov
cmc
mov
jnp
stos
ficomps
or
pushf
imul
leave
cmpb
insl
pushf
dec
push
cmpsl
hlt
lcall
and
xor
mov
dec
pop
into
push
jmp
les
jne
xor
pop
mov
sti
xor
mov
pop
dec
es
sti
and
or
jae
push
adc
out
test
cld
pop
push
mov
lcall
sarl
lods
sbb
cmpb
adc
aam
or
mov
leave
cli
mov
iret
mov
sub
repnz
mov
xchg
enter
test
pop
sar
pusha
lcall
xlat
adc
je
push
ds
ja
cwtl
adcl
sub
adc
adc
xchg
xor
sbbl
in
iret
dec
or
popf
add
pop
mull
push
repz
xor
repnz
mov
outsl
and
xchg
negb
repz
or
stos
and
push
jp
es
test
inc
loopne
add
cmpb
jb
or
adc
mov
jmp
inc
pop
pop
adc
sub
inc
lahf
test
fidivrs
jle
imull
mov
test
dec
cmpl
lock
pop
movsl
enter
pop
std
pushf
dec
shl
pushf
xchg
dec
stos
push
and
leave
enter
in
fadd
mov
movsl
cmc
push
cltd
ds
pop
test
ljmp
inc
jae
rol
sbb
addl
push
arpl
loope
or
gs
push
das
push
test
fnstenv
sub
ss
rclb
push
sahf
sbb
or
jns
in
or
lods
loope
xor
movsb
dec
adc
sbb
out
mov
negb
rolb
out
aad
icebp
sbb
gs
xor
inc
ret
inc
popa
jo
xchg
je
or
imul
lret
ror
pop
mov
out
nop
les
mov
mov
shrb
mov
fisttps
xchg
fistps
movsb
jns
mov
aam
xor
jg
push
add
js
fstpt
test
stos
out
push
cmpsl
jne
in
loop
push
pusha
es
shrl
cmp
adc
push
int
into
fistl
repz
inc
sbb
ja
jl
ret
hlt
ds
xchg
and
add
cmc
xchg
sbb
jg
lret
stos
mov
push
jmp
scas
cmp
aad
jl
sub
cld
jnp
jno
aam
jl
xlat
jl
repz
insb
loopne
inc
loop
add
sahf
adc
sbb
adc
jnp
push
cltd
mov
icebp
cltd
pop
and
dec
shr
imul
or
and
and
push
enter
lahf
pop
and
or
rclb
mov
mov
test
insb
bound
dec
in
sbb
push
insb
or
sti
or
outsl
or
test
mov
call
adc
aaa
push
cmp
arpl
push
or
cmp
je
mov
fidivrs
fistl
sbb
cmc
dec
adc
fdivp
mov
cld
ficomps
test
lcall
xor
sbb
mov
or
sarb
repz
sbb
or
jae
xor
dec
jb
ret
arpl
lret
xor
lcall
dec
jae
das
loope
clc
pop
and
stos
jle
xchg
leave
xchg
cmpsb
psubb
aas
mov
mov
xchg
xchg
enter
xchg
inc
add
dec
test
stos
inc
inc
shlb
push
fxch
dec
xor
push
xchg
sub
xor
push
roll
jge
es
out
aaa
xchg
les
data16
leave
aad
sub
lock
icebp
insl
cli
cli
and
sbb
dec
adc
mov
push
hlt
decb
loopne
leave
lahf
lcall
push
in
and
sti
es
outsb
or
icebp
loope
jb
decl
mov
push
cli
add
jbe
movsl
xor
mov
rcl
inc
ror
loopne
jmp
mov
pop
push
rol
xchg
pop
xchg
insl
add
pushf
imul
xor
push
mov
adc
js
cmp
mov
out
push
lea
mov
mov
icebp
or
pop
lea
into
pop
sub
xchg
aas
lock
lods
ror
out
nop
mov
pop
jecxz
adc
pop
repz
fnstsw
je
icebp
jecxz
insl
aaa
sbb
fiaddl
loopne
cmp
fidivrl
je
pop
push
popf
int
xchg
rcrb
mov
ret
ds
push
push
loope
push
jge
push
inc
dec
jecxz
cmpl
mov
ror
dec
mov
sti
push
mov
or
push
nop
scas
mov
mov
xchg
sub
sti
add
movsb
inc
pop
inc
cltd
pop
xchg
jmp
stos
shll
lods
lret
push
xorl
dec
and
adc
test
fwait
dec
jecxz
pop
jne
cmp
pop
adc
push
dec
inc
mov
popf
scas
in
fwait
push
cltd
imul
hlt
dec
les
in
adc
mov
outsl
fsub
jg
mov
mov
ret
enterw
cmpsl
or
scas
mov
js
std
mov
jecxz
in
xchg
jns
adc
jae
icebp
ret
sbb
scas
ja
nop
aam
push
icebp
xchg
sbb
sbb
dec
cmp
dec
into
cmpsl
out
push
and
dec
pop
jge
dec
in
inc
lods
cmp
sbb
dec
cmp
sahf
xorl
or
shrl
adc
xchg
xor
rcrb
addr16
add
push
mov
ret
add
ljmp
adc
loopne
push
inc
sbb
cmp
or
adc
and
ret
and
cmpsl
outsl
cmp
pop
call
daa
cmp
call
pop
dec
jns
or
mov
add
sahf
mov
divl
push
cld
loope
aad
push
mov
pop
jmp
adc
adc
dec
cmpsl
subl
aam
cld
xchg
xchg
adc
ret
icebp
xchg
out
addr16
mov
pop
mov
ret
push
push
xchg
jb
and
cmpsl
icebp
xchg
divb
jp
sbb
shll
mov
imul
scas
or
popf
mov
fcomip
daa
add
addb
sbb
or
out
inc
aas
lahf
loopne
push
sbb
stc
popa
or
cmc
xchg
je
ljmp
das
or
repz
or
mov
or
and
popa
push
cli
mov
lret
sbb
addr16
addr16
in
pop
jle
mov
jnp
jg
imul
jmp
xchg
inc
sbb
dec
lret
bound
jnp
cmpsl
pop
jnp
lret
aas
rol
loopne
out
hlt
inc
fstpl
ss
cmp
dec
mov
jmp
sub
daa
lahf
in
repz
cmp
icebp
pop
xor
out
jl
lret
fwait
push
jns
xor
sub
mov
mov
mov
sub
inc
mov
mov
popf
mov
xchg
movsb
popf
sahf
sbb
fmull
push
outsl
int
cwtl
cli
mov
jo
xlat
popf
lret
cmpsl
subl
scas
jg
test
inc
test
xor
push
push
movsb
subl
pop
shrl
cmpl
xor
mov
lods
daa
outsl
xor
cli
mov
cmp
lret
push
pop
inc
sub
push
jns
push
dec
fisubrs
sub
clc
aad
in
jnp
dec
dec
xchg
push
xadd
ret
pop
shrb
sub
mov
push
jg
sub
cld
jnp
adc
adc
loop
cmp
pop
lock
lret
mov
xor
push
adcb
push
sarl
pop
lock
pop
xchg
out
sbb
adc
ds
add
movsl
jne,pn
mov
stc
pusha
fisubrs
aam
cmp
inc
xchg
jb
int
add
shl
push
add
lretw
loope
sbb
xchg
mov
or
xchg
or
inc
int
mov
lods
jns
cmp
movsl
mov
mov
xchg
js
aad
push
test
or
mov
leave
mov
cmp
ret
imul
fistpll
add
lds
es
lret
inc
popf
cmp
mov
bound
dec
pop
add
leave
push
push
jae
jo
xor
in
xor
sub
pop
jmp
sbb
fbld
ret
test
subl
aaa
jno
jno
jnp
test
in
dec
sbb
popf
mov
mov
add
inc
stos
lret
enter
call
cmp
clc
xor
lea
hlt
cwtl
vpsubsb
popa
xchg
xor
add
cmp
mov
dec
pushf
iret
fbstp
jnp
xchg
mov
lds
or
mov
mov
pop
call
mov
xchg
pusha
fildl
fdivr
cmp
ret
cltd
pop
es
pop
xor
add
add
adc
in
mov
loope
out
imul
stos
inc
fwait
cmp
mov
mov
mov
push
xor
ficompl
inc
arpl
sbb
nop
jg
icebp
test
adc
cmp
in
cs
aad
aad
adc
es
adc
xchg
lods
stos
loop
or
adc
inc
ss
sahf
jbe
movsb
adc
shrb
clc
jae
xchg
lcall
pop
bound
xchg
clc
imul
call
arpl
sbb
data16
movlps
jge
scas
xor
popl
popa
sub
fs
mov
int3
and
mov
stc
mov
push
cmc
push
mov
mov
or
jbe
pushl
in
mov
push
popa
add
inc
bound
pop
hlt
fcomps
jg
lods
or
sub
inc
jns
adc
mov
push
xchg
call
sbb
pop
loop
push
outsl
outsl
daa
pushf
std
cltd
imull
ret
mov
mov
mov
mov
sub
mov
jle
cmp
sbb
popa
loop
mov
pop
jno
fisubs
mov
inc
xchg
adc
xor
data16
xor
sbb
sar
shrl
fisttpll
stos
stos
inc
dec
inc
pop
aaa
and
mov
lds
rclb
movsl
mov
out
rolb
insl
cmp
inc
lods
push
ja,pt
cmp
inc
cmpsl
pop
add
fsqrt
sub
push
mov
adc
and
lock
xchg
fs
lcall
sbb
inc
mov
outsb
fists
dec
push
lock
jmp
jb
mov
hlt
pop
stc
lret
cmpsb
xchg
mov
rol
jae
aad
imul
pop
add
jo
inc
cwtl
xchg
mov
dec
pop
or
jno
add
test
mov
stos
adc
jg
mov
stos
inc
lahf
sub
sbb
push
test
stc
lret
pop
or
and
sub
push
xchg
mov
inc
into
add
push
sub
add
mov
push
push
popa
and
mov
test
icebp
adc
mov
rolb
add
add
dec
pop
push
gs
je
test
pop
mov
test
loope
mov
sbb
xor
rcrl
mov
jne
cmpsb
push
leave
mov
pop
jbe
out
movsb
test
dec
fst
mov
shll
adc
bound
pop
sbb
js
hlt
movsl
jg
sysret
sti
int3
popf
arpl
movsb
ret
outsl
insl
stos
inc
test
lock
mov
mov
mov
xchg
lock
mov
fsubrl
insl
pop
add
sbb
std
xchg
xlat
scas
stos
andnps
jb
stos
and
cmp
xchg
shl
sub
dec
inc
cltd
sub
stos
mov
push
dec
sub
lds
aaa
dec
lock
jmp
call
in
test
notb
sub
jno
xchg
mov
imul
mov
add
mov
pop
int
xchg
jge
or
fadds
repnz
and
ret
fmuls
sub
adc
mov
int3
sbb
cs
pop
mov
sbb
cmp
or
cmp
dec
in
xchg
in
call
push
test
imul
shl
inc
adc
lcall
and
es
ljmp
aas
and
popf
sbb
mov
fst
in
movsl
out
mov
jl
push
incb
push
call
or
dec
cli
pop
daa
inc
fdivrs
jb
repz
imul
adc
mov
mov
fstps
pop
xor
test
stos
dec
jmp
lret
push
push
pusha
insb
cld
jge
cmp
pop
push
mov
fstps
mov
sti
jnp
or
fucomi
jl
scas
bound
cmp
jmp
divl
cmp
es
add
xchg
out
shlb
xor
cld
fs
pop
add
cld
mov
shl
cld
les
adc
int3
imul
subb
aad
mov
enter
jp
push
xchg
and
outsl
mov
dec
inc
ret
xchg
test
pop
xchg
xchg
mov
hlt
pop
addr16
mov
ljmp
fildll
icebp
xor
mov
or
icebp
add
push
fisubrs
ds
call
jecxz
andl
rol
inc
iret
and
mov
pop
divl
adc
arpl
cmp
jns
lods
fbstp
sbb
jmp
imul
popa
shll
inc
cmp
pop
xor
xchg
and
jnp
cmp
addr16
cmpsl
cltd
sbb
and
stc
xchg
stc
cs
add
xchg
int
dec
inc
imul
scas
cmp
sub
mov
aas
cmpb
loope
ljmp
cmpsl
movsl
add
mov
js
xor
mov
cmp
scas
enter
sub
mov
gs
mov
ret
xchg
fstps
xlat
pop
mov
sbb
das
stos
adc
push
ljmp
pop
lret
icebp
loope
test
je
dec
shr
mov
and
cltd
cmp
lods
sbb
adc
sbb
das
enter
int
loope
push
std
mov
popa
cli
inc
xchg
push
aad
ljmp
xor
lock
fadd
mov
mov
push
outsl
add
rclb
xor
movsl
cwtl
int3
push
jecxz
sub
into
int
push
xchg
pop
mov
inc
or
fsubr
dec
xchg
les
enter
dec
aas
sti
lock
cmp
loopne
psllq
pop
or
stos
adc
cmp
xchg
push
mov
xchg
std
jl
cmp
add
fs
int3
icebp
repz
ljmp
mov
cmp
push
push
hlt
push
lds
push
adc
pop
pop
je
adc
add
fwait
repnz
aas
mov
dec
pop
jp
in
leave
add
push
fists
rolb
leave
pop
pop
js
outsb
loopne
pop
xor
xchg
push
jmp
data16
sub
scas
inc
push
dec
push
jo
in
int3
xor
nop
inc
xor
mov
subb
cmpsb
push
xlat
adc
jl
pop
xchg
sub
push
xchg
sub
xchg
jo
sbb
xor
lock
cmp
daa
xlat
xchg
cltd
idivl
jno
adc
add
sub
mov
cmp
into
add
mov
cmpsl
mov
pop
dec
in
movsl
inc
aad
cld
mov
imul
in
hlt
std
sbb
lahf
xor
and
and
dec
outsl
sbb
sub
jo
nop
js
rolb
idiv
std
scas
lret
xor
pop
rclb
je
sbb
test
sbb
and
icebp
jmp
das
in
jnp
xchg
inc
addr16
fsubrs
push
outsb
jle,pn
movsl
dec
jmp
jnp
pop
mov
cwtl
jno
jmp
jecxz
vcmppd
push
outsl
movsb
test
or
enter
shlb
leave
popa
dec
or
sbb
mov
pop
or
jecxz
pop
mov
push
pushf
dec
sahf
ds
mov
aad
test
mov
pop
push
imul
push
cmp
mov
jl
mov
sub
cmpsb
push
jge
sub
rcrl
mov
cltd
dec
pop
jmp
insb
sbb
ret
push
xchg
jb
pop
sbb
das
call
mov
enter
mov
fisubs
aam
mov
push
imul
enter
iret
rolb
sub
jae
test
or
data16
push
mov
sahf
aaa
jle
lret
push
jmp
or
divb
inc
sbb
push
das
cli
push
out
xor
cmp
test
sar
imul
cli
and
in
sub
xor
in
fsubr
sbb
mov
xchg
sub
mov
jnp
push
mov
mov
lahf
inc
sarl
sub
dec
call
sub
xor
pop
idivl
into
rcll
xor
mov
shrb
mov
fdivrp
ret
cld
addl
loope
xor
push
ret
scas
mov
and
pop
rcrb
mov
xor
stos
nop
shl
dec
or
lahf
cwtl
sbb
cltd
data16
xchg
je
cmp
testl
cli
nop
test
test
arpl
sbb
ficompl
lea
dec
xorl
test
sub
lock
pop
loopne
push
cmpsl
xor
sbb
es
add
jg,pn
sub
scas
mov
add
fidivs
scas
in
ss
push
mov
or
mov
push
cmp
bound
jmp
cmpb
scas
daa
data16
push
xchg
hlt
and
jne
call
jns
add
pop
inc
inc
mov
jl
push
dec
fnstenv
add
mov
inc
inc
addr16
es
sbb
stc
push
lods
sub
cld
mov
sub
ja
sahf
in
iret
or
cmp
or
xor
iret
gs
je
push
and
cli
mov
xor
daa
outsb
movsl
jae
pusha
xchg
sar
mov
adc
mov
xor
jno
js
clc
test
push
ljmp
mov
or
adc
call
cmp
aaa
adc
hlt
jge
imul
pop
adc
mov
fldl
sar
inc
inc
and
pop
jne
inc
push
arpl
adc
push
pushf
jne
or
iret
adc
pop
cmc
dec
or
sbb
ljmp
jne
shl
xchg
add
mov
fadds
movsl
mov
sbb
cmp
or
idivl
pop
cmp
cmp
test
adc
and
xor
xchg
inc
fildl
jae
nop
jbe
xchg
lcall
insb
movsb
mov
out
cmpsl
mov
movsb
sub
in
insl
repnz
imul
in
xchg
test
dec
mov
pop
fcomp
sub
aas
xchg
ret
adc
int
test
addr16
mov
jl
out
rolb
dec
push
push
adc
push
mov
scas
mov
jmp
stos
cmpb
icebp
push
scas
jp
ret
pop
dec
cmp
lcall
lcall
adc
fdivl
aam
sub
flds
std
das
ljmp
or
imul
xor
in
and
pop
or
sub
in
mov
inc
and
mov
inc
pop
test
jg
dec
mov
loope
movsl
mov
inc
inc
jecxz
mov
jge
pusha
mov
scas
or
mov
or
repz
mov
or
xor
inc
or
mov
lcall
popf
mov
sbb
pop
shrl
std
mov
lods
and
jno
test
imul
dec
adc
cli
stos
ja
lods
adc
add
sub
test
xchg
stos
idivb
cld
jb
fidivrl
stc
mulb
repnz
loop
mov
daa
in
sub
cmp
adc
movsb
push
adc
inc
inc
push
insl
jge
inc
xor
jae
adc
mov
out
sub
jne
sub
adc
sbb
mov
mov
loope
inc
adc
sub
cmp
fdivr
cmp
mov
aad
push
sbb
sar
adc
shrb
scas
dec
divl
cltd
leave
cmp
cmp
rsqrtps
das
testl
in
mov
push
idivl
xchg
loop
push
add
cwtl
push
pop
scas
mov
xchg
das
cmc
sahf
movsb
movsb
xor
inc
les
iret
cld
add
scas
xlat
fdivl
es
push
jmp
mov
xchg
rol
icebp
xchg
loope
adc
arpl
je
out
enter
aas
or
outsl
sbb
lock
mov
adc
cmp
in
mov
sti
xchg
test
mov
loopne
sti
fwait
lret
pop
sub
sbb
jg
adc
ss
outsl
ja
sub
inc
mov
sbbb
sbb
mov
sarb
arpl
adc
jns
arpl
add
cmp
into
mov
int
mov
pop
push
enter
dec
cmpsb
fbld
gs
popa
xchg
cmp
mov
cmc
pushf
or
or
xchg
push
inc
sbb
test
xor
fidivrl
add
pop
xor
cmpsb
adc
sub
in
pop
popa
cmp
arpl
mov
fnsave
popa
rclb
out
lret
sub
nop
movsb
lea
les
pop
cwtl
add
jno
pop
mov
movsb
aaa
mov
mov
rclb
lods
in
xor
fsubrs
push
daa
inc
sub
sub
jmp
adc
push
std
xchg
and
ret
cmp
or
jne
in
or
ljmp
or
fstpt
ja
insl
dec
movsb
pop
fmul
imul
fnsetpm(287
insb
sbb
or
ret
shrb
adc
rolb
sbbl
push
enter
movsb
cld
dec
push
loope
and
int3
cs
hlt
imul
movsb
add
lret
cld
mov
pop
sub
mov
aam
fwait
je
jae
ror
fcoms
neg
pop
arpl
or
fnsave
sub
jg
mov
pop
lock
cmpsb
ret
mov
mov
cli
and
mov
lret
or
test
cmpsb
inc
adc
outsl
lock
push
jno
and
loope
stc
subb
in
or
sbb
jg
fsubs
push
or
cmp
sbb
push
sbb
lahf
shll
xor
mov
repz
inc
xchg
or
aas
mov
cli
or
shll
jl
pop
ret
mov
ds
mov
aas
inc
js
test
repnz
into
push
negl
jae
push
xor
dec
pop
push
xchg
inc
pusha
mov
aam
push
enter
xlat
std
into
jb
cmp
xorb
dec
jge
xchg
mov
adc
scas
fcoml
jns
popf
in
in
cmp
and
inc
cs
roll
mov
pop
cmpsl
ds
gs
popa
test
repnz
mov
sub
cmp
jecxz
out
fiadds
add
fsubrl
mov
xchg
cmp
mov
daa
nop
and
mov
add
cmc
rclb
cmp
in
sbb
pop
add
sub
cmp
mov
cmp
and
xchg
jb
sbb
dec
xor
cmpsb
pop
mov
jl
aaa
out
mov
stos
xchg
fdivs
xlat
push
fnstcw
jbe
xchg
xchg
mov
les
inc
cmp
mov
sub
mov
or
push
lds
mov
outsl
push
ret
mov
or
mov
out
and
sbbl
getsec
int3
sbb
aas
out
sub
jns
adc
fnstcw
mov
or
push
out
stos
pop
pop
jecxz
hlt
xor
jl
push
lret
mov
ds
sbb
dec
int
add
jae
mov
jmp
aad
xchg
je
cmpl
xchg
push
add
rcrb
out
jae,pn
ljmp
shrl
popa
jge
pop
sub
xor
xchg
jns
int3
test
xlat
ljmp
sti
xchg
fists
xchg
dec
pop
loope
sar
adc
cmpsl
dec
lods
andl
dec
push
sahf
xchg
out
scas
pop
in
outsl
jg
fldcw
push
loop
cld
and
cmpsl
cmp
ja
movsb
cltd
push
test
inc
cld
rorl
pop
jae
outsb
add
sbb
iret
scas
pop
mov
pop
cmp
or
cld
stos
or
into
mov
sbb
cmpsb
add
jecxz
std
pop
cltd
jo
dec
push
adc
gs
aaa
add
mov
dec
mov
inc
jecxz
push
dec
ret
or
sarl
jo
adc
mov
les
js
inc
jge
cmp
gs
lcall
and
add
ret
cwtl
or
mov
cmp
pop
lcall
and
fbld
mov
or
popf
and
ret
xor
loop
popa
or
and
sub
cmp
stos
lds
out
or
dec
out
sbb
mov
test
in
xchg
inc
xchg
and
push
test
jae
andb
jle
aas
xor
sbb
aam
lret
pop
std
ds
push
jg
jne
pop
in
lods
xchg
popf
pusha
adc
add
pop
adc
test
and
jge
movsl
icebp
cmp
push
mov
hlt
out
scas
mov
inc
inc
aad
push
inc
shll
or
movsl
data16
inc
dec
paddsw
xchg
xlat
inc
mov
imul
add
mov
xor
test
push
xchg
test
xchg
jne
push
jo
mov
fsubl
movsb
adc
pusha
mov
loop
jb
or
notb
mov
outsl
gs
mov
pop
mov
leave
add
js
sbb
enter
lea
jp
sbb
dec
leave
mov
mov
in
jo
pop
sti
sbb
sbb
mov
cmp
and
inc
jg
push
add
ja
jle
nop
aad
test
xor
sti
in
jb
pushf
popa
cmp
cwtl
sti
popa
into
movsl
xlat
xor
adc
insb
mov
mov
lret
inc
sbb
out
and
jae
popa
insl
test
sub
in
sbb
xchg
dec
sbb
pop
xlat
jmp
pop
movsb
sbb
out
pop
das
bnd
lahf
inc
xchg
mov
ficompl
pop
or
mov
mov
cs
xlat
repnz
xor
hlt
addl
stos
dec
pop
movsl
add
add
scas
mov
inc
fistpl
mov
pusha
or
xor
inc
add
mov
negl
mov
in
xchg
insl
xor
lahf
inc
loop
jge
xchg
xchg
ud2
push
mov
jnp
pop
mov
fnsave
jle
xchg
scas
je
subb
sub
xor
fidivl
cmpsb
xlat
add
repnz
aas
xor
loopne
jae
jo
and
pop
xchg
push
out
pop
xchg
sarb
mov
rorl
add
cltd
sarb
push
test
fimuls
out
rcrl
outsl
repnz
jp
bound
iret
icebp
lods
push
jl
int
in
push
cmp
jg
pop
jp
stos
mov
aaa
jae
shr
mov
push
mov
sbb
inc
inc
and
add
shrl
enter
loopne
mov
pop
insb
xor
sub
jmp
test
test
fldt
adc
cmp
or
shrl
lret
sub
insl
pop
rcr
test
cmp
iret
imul
repz
sbb
movsb
add
inc
in
mov
js
pop
sbb
jle,pn
idivb
mov
stos
loopne
mov
and
sahf
repnz
adc
adc
das
lcall
in
rcrb
xor
jle
inc
fildll
sbb
lahf
and
xchg
xor
fsub
or
ja
mov
xchg
outsb
out
add
cmp
mov
int
pop
lret
mov
xor
mov
fdivrs
cmp
ss
inc
gs
rorb
repnz
fsub
in
mov
pusha
jl
lock
cli
pusha
sahf
xor
push
dec
outsl
sub
out
lret
xorl
popa
lock
sldt
fs
out
loop,pn
xchg
int
xchg
fmull
xchg
or
inc
mov
xchg
xlat
popa
clc
lret
mov
inc
je
stc
nop
add
rorl
sub
and
push
xchg
mov
stc
mov
mov
mov
dec
aad
adc
arpl
adc
xchg
xchg
jno
add
push
and
xchg
aaa
sbb
inc
int3
cltd
cmpsb
cli
jmp
push
pop
inc
pushl
push
inc
mov
dec
popa
mov
sub
mov
je
cmp
cwtl
add
jecxz
xor
pop
repnz
sahf
insl
push
sub
je
iret
andb
sbb
clc
dec
jno
add
addl
mov
subl
sub
lcall
mov
xor
test
call
in
or
in
es
or
xor
cmpsb
jge
mov
push
xchg
scas
stc
xchg
push
or
adc
push
scas
sti
jbe
cwtl
push
sbb
push
mov
aas
repnz
mov
movsb
js
orb
outsb
popf
mov
sbb
and
movsl
sub
test
push
or
mov
add
lods
or
outsb
cmp
pop
mov
mov
dec
in
fcmovne
aam
cmp
cmp
sub
mov
xor
pop
xchg
inc
mov
sbb
negl
or
lahf
mov
mov
inc
bswap
jbe
add
data16
add
scas
filds
test
loop
pslld
adc
jmp
lahf
jmp
push
fsts
shll
or
cld
mov
pop
xor
mov
mov
cltd
adc
pushf
pop
xchg
pop
xchg
mov
and
movsl
dec
dec
outsl
into
pop
das
js
rclb
bound
or
lcall
rorl
xchg
and
jno
out
cmpsb
mov
xorl
daa
xor
arpl
lahf
mov
arpl
push
insl
sarb
pop
loopne
repnz
add
mov
jecxz
and
or
pop
mov
idivb
data16
pop
ret
stos
cmp
sahf
or
mov
xlat
sub
loope
mov
fimuls
push
inc
dec
pop
sub
sbb
ss
add
jp
jae
out
or
cwtl
mov
lods
insb
out
sub
cmp
jb
jg
jmp
pop
setns
mov
dec
xchg
mov
pop
push
lret
dec
cld
scas
add
ret
sahf
ror
subb
fs
jl
stos
push
jne
mov
call
out
mov
push
or
je
scas
push
push
xor
dec
sbb
sbb
fsubr
aam
xchg
repz
cmp
jecxz
out
cmp
mulb
ret
dec
lds
inc
pop
adc
insb
mov
outsl
inc
outsl
push
loopne
push
sub
enter
les
outsb
iret
scas
movsb
dec
sar
cmpsl
lds
out
ds
orb
jno
stos
fadd
fisttpl
popa
iret
out
stos
jbe
push
repnz
inc
push
mov
lea
cwtl
js
dec
or
cwtl
fcmovnu
lea
cmp
jle
aam
dec
push
xor
lcall
ds
lods
in
imull
mov
add
fs
dec
test
mulb
clc
lret
push
add
mov
mov
sbb
sub
fdivl
inc
xor
sahf
movsl
addr16
xchg
ljmp
aam
scas
push
mov
push
add
ds
andb
pop
addr16
repnz
push
cs
movsb
inc
pop
push
aas
mov
into
stc
sbb
and
mov
inc
add
mov
repz
inc
pop
or
pop
out
gs
inc
pop
dec
sub
dec
xor
fs
cmp
std
iret
aam
loop
inc
push
mov
andb
fwait
fs
mov
shll
fs
and
rcrb
jbe
dec
sbb
push
loop
jno
ljmp
lret
jl
arpl
dec
popa
adc
jg
iret
inc
add
lret
jmp
gs
push
fidivl
push
jne
cld
outsb
push
ror
pop
in
ss
lcall
pop
jle
or
aaa
mov
pop
adc
shr
js
mov
inc
sbb
lds
xchg
pop
jbe
mov
les
scas
sbb
int
imul
nop
push
jne
push
mov
scas
jbe
call
cmp
inc
lock
inc
mov
mov
mov
bound
push
cld
mov
mov
mov
lods
or
popa
or
ficompl
pop
jecxz
pop
mov
xchg
xchg
pop
mov
data16
mov
shl
and
xor
jbe
and
ficompl
fists
ja
jp
je
push
inc
rolb
imul
sbb
jbe
aam
clc
das
sub
ja
xchg
ret
sub
fs
sbb
es
jnp
mov
xor
dec
pop
adc
adc
push
jl
into
loop
faddl
out
hlt
insb
mov
jmp
in
pop
pop
xchg
adc
and
jae
push
pushf
push
sbb
xchg
insl
push
push
inc
push
dec
add
and
cwtl
loopne
ljmp
fs
xchg
ficompl
inc
call
sub
movsl
mov
andb
mov
out
pop
lcall
movsl
and
xor
fwait
sub
pop
jo
dec
or
scas
or
int3
imul
lahf
inc
outsb
rolb
pop
or
cmp
outsb
mov
sbb
add
mov
rcrb
mov
push
add
pop
mov
aas
and
enter
insb
sub
xchg
sbb
jne
imul
inc
jmp
test
add
mov
lods
xor
or
inc
or
cmp
mul
daa
jno
es
pop
pop
outsl
pop
cli
insb
dec
ret
and
jae
pop
add
ret
cli
mov
scas
bound
or
test
adc
cli
push
andl
jle
mov
mov
pop
stc
mov
adc
lea
mov
mov
ja
and
jno
movsl
push
dec
xor
xchg
test
push
jns
subb
outsb
ja
jbe
aas
mov
int
jge
inc
mov
sub
pushf
repz
mov
enter
and
pop
xlat
mov
or
test
push
stos
sbb
or
clc
add
push
cmp
or
xchg
xchg
mov
clc
lods
in
out
sub
test
addb
xchg
mov
cmp
push
mov
loopne
sub
cmpsl
xor
mov
js
add
push
test
stc
adc
jae
test
sub
lret
mov
sahf
jmp
mov
jne
mov
test
xor
stos
xchg
add
mov
sub
jb
pop
je
loopne
call
inc
stos
ret
sbb
jp
sbb
inc
jecxz
push
es
push
cld
adc
mov
sarb
test
aad
outsl
in
cmp
addr16
fadds
mov
js
js
jmp
inc
push
push
mov
or
cs
movsl
jo
movsl
mov
ret
mov
and
iret
lcall
mov
jp
cli
ss
stc
and
movsl
popf
push
push
pop
xlat
sbb
mov
xchg
xchg
dec
stos
mov
insl
pop
adc
push
pop
dec
repz
test
dec
jg
filds
js
sti
lds
out
xchg
int3
outsb
sbb
cwtl
push
inc
test
lret
xchg
dec
stos
lock
xlat
dec
or
clc
popa
pop
pop
push
pop
add
push
imul
outsb
dec
cmp
pop
mov
xchg
jne
aas
push
sahf
xlat
je
fidivl
inc
sbb
sbbb
es
cmpsl
ja
bound
lock
adc
pop
adc
add
clc
scas
jp
rcrb
movsl
addr16
sahf
and
pop
inc
ljmp
xor
pop
shlb
lds
pop
hlt
xor
int
push
int3
fidivrs
aas
sbb
or
pusha
push
fidivs
mov
or
imul
sbb
jge
pop
or
cld
jno
adc
xchg
lods
sub
sti
les
xchg
cs
adc
jg
mov
xor
xor
lcall
fcomp
popf
movsb
cmp
call
mov
lret
xchg
cwtl
cmp
mov
imul
sbb
cli
push
xor
inc
mov
jl
push
pop
xchg
js
mov
xchg
dec
add
pop
push
pop
shl
cli
rorb
popf
pusha
sbbl
adc
sti
dec
subl
mov
sub
aad
mov
mov
jb
fimull
inc
repz
cltd
in
mov
jg
push
mov
lods
js
pop
cmpsb
out
add
xchg
push
xor
es
jl
mov
rcl
jg
dec
adc
cmp
shll
aas
mov
lcall
imul
das
inc
adc
decl
push
notl
add
cli
cmpb
jns
push
iret
fs
mov
mov
pushf
xor
and
cli
andl
mov
loopne
push
lahf
mov
test
int
js
sbb
and
rorl
sub
out
data16
enter
cld
cmp
pop
add
aas
jae
repnz
pop
push
xor
mov
ljmp
int3
ficomps
pop
xor
jg
xor
movsl
jge
mov
js
inc
xchg
pop
leave
adc
xchg
add
sti
xor
nop
shll
out
or
or
enter
sub
mov
in
inc
mov
or
leave
cmp
sahf
sti
out
ss
das
mov
test
jo
mov
jno
aas
sbb
out
push
outsl
jnp
repz
mov
mov
iret
repnz
fcoml
lods
xchg
cmc
shrb
dec
cmpl
imul
dec
and
call
in
adc
movsb
xorb
push
jne
pop
or
cli
mov
lea
cmp
daa
dec
lods
lods
jg
dec
add
mov
sub
dec
and
mov
lods
sbb
sbbl
sub
les
jnp
adc
iret
testl
dec
cmpsl
icebp
and
and
mov
push
cltd
jne
jg
adc
stc
xchg
aaa
dec
pop
sbb
xchg
dec
adc
scas
and
mov
sub
mov
mov
int
or
mov
std
pop
mov
xchg
and
xchg
out
jg
lahf
mov
add
add
test
fdivr
scas
jp
cmpsl
rorb
jne
leave
jle
mov
aad
icebp
and
jl
addr16
sbb
lahf
or
adc
lret
add
mov
pop
cmp
cli
mov
out
pop
push
mov
fmuls
orl
mov
inc
stos
mov
popf
mov
ficoml
xchg
lret
cld
in
fisubrl
add
call
adc
outsl
xchg
pop
sbb
imul
lods
mov
cli
dec
pop
movsb
mov
in
xor
mov
pop
pop
nop
sbb
jne
sub
push
inc
loope
sbb
jbe
cmp
sahf
push
pop
mov
push
add
add
leave
dec
mov
jge
sbb
cmc
add
inc
jne
or
cmpb
xchg
cli
stos
fucomip
jnp
push
faddl
leave
mov
dec
xchg
sbb
out
mov
ds
call
out
test
or
daa
pop
xor
pop
aam
mov
add
cmpsb
scas
jl
ret
movsl
sbb
repz
mov
roll
cmp
rclb
call
stc
test
lods
sahf
out
in
mov
dec
push
jl
shrb
xchg
inc
jae
sub
pop
fdivrl
push
adc
or
mov
dec
and
jle
popa
lea
pusha
imul
push
jae
sbb
shrb
and
add
jg
push
adc
cmp
stos
inc
cmp
fstpt
test
push
sarl
ja
pushf
mov
or
jmp
leave
icebp
pop
sbb
mov
cwtl
imull
cs
setg
stos
or
pop
dec
mov
mov
dec
push
and
xchg
outsb
lahf
dec
or
jecxz
fstpt
clc
icebp
jae
out
pop
mov
std
adc
nop
movsb
sbb
xchg
adc
inc
add
dec
flds
popf
mov
inc
imul
mulb
push
jg
repz
aam
add
fcomip
pop
jno
dec
icebp
and
add
add
je
leave
nop
icebp
int3
mov
inc
xor
jl
fmull
mov
notl
adc
sub
in
adc
in
and
inc
xor
test
test
nop
shrb
and
nop
arpl
rolb
inc
orl
or
sbb
pop
sbb
mov
lds
aaa
push
std
in
dec
hlt
xchg
and
test
xchg
fisubs
jne
xchg
lds
add
sbb
lods
jle
testb
and
push
add
xchg
xchg
dec
shll
adc
inc
mov
pop
mov
pop
test
adc
or
js
sbb
pop
and
aas
xchg
cmpsl
in
inc
xchg
lods
outsl
push
icebp
xlat
pop
les
or
fmuls
cs
jo
sbb
mov
repz
xor
lret
lds
or
popf
mov
pusha
and
xor
xchg
jp
outsb
mov
mov
xor
icebp
or
lret
ret
adcb
rolb
xor
scas
sbb
dec
inc
sbb
jnp
fwait
mov
scas
lods
aas
mov
out
sar
add
push
xchg
lahf
shlb
stos
loopne
cmp
scas
pushf
cltd
xor
bound
sbb
daa
loopne
pop
imul
je
xchg
or
mov
lret
add
mov
in
adc
ds
insl
mov
imul
jne
fsts
es
pusha
imul
xor
xorl
cmp
mov
lods
imul
xorl
dec
jmp
cmc
mov
rcrl
jmp
cmc
jae
xchg
cmp
pop
ret
stc
rcll
sbbb
aaa
xor
aam
fidivrs
add
xchg
movsb
cltd
mov
in
inc
clc
push
clc
cmp
ss
xchg
sub
cltd
fisubrl
repnz
jmp
jne
dec
popa
ss
and
bswap
sbb
jp
pop
or
imul
adc
jo
jae
std
mov
mov
inc
jmp
enter
and
ja
fiadds
in
out
jge
mov
dec
gs
repnz
divb
insb
dec
lock
xchg
cmpb
cld
shll
hlt
mov
sbb
sbb
push
sbb
pushf
roll
cmp
into
inc
add
mov
pop
pop
xchg
ss
cltd
sub
decl
jmp
cltd
jno
cmpsl
xlat
mov
inc
mov
push
leave
fildl
add
ss
jmp
push
mov
jae
movsl
sbb
mov
cli
mov
mov
push
sub
mov
jnp
std
sti
mov
push
mov
mov
or
push
sub
push
push
fs
mov
xor
jge
adc
adc
sub
cmp
or
mov
subb
out
push
lods
push
push
adc
jge
cltd
clc
scas
fidivl
mov
mov
lcall
and
mov
cli
mov
mov
hlt
mov
cmp
or
aas
loopne
std
stos
cld
inc
sub
bound
stos
filds
xchg
pop
adc
push
xor
inc
xchg
xchg
jle
jg
lods
ss
mov
fldz
sbb
fbld
lock
lods
stos
mov
and
cmp
xchg
notb
and
adcb
orb
popf
jmp
cli
add
test
je
xchg
push
sub
daa
test
jge
dec
dec
das
sarb
scas
push
popa
mov
lds
out
popa
cmpsl
loop
stos
jbe
cwtl
push
pop
cmc
dec
and
aas
push
shrb
jg
je
mov
or
push
dec
sub
mov
icebp
ret
mov
sub
fdivs
movl
das
in
cmpsl
frstor
or
mov
jp
pop
pop
pop
lds
jno
cs
push
test
mov
cs
adc
adc
sbb
cmp
fidivl
xchg
sub
daa
int
jns
mov
pop
jo
xchg
sub
pop
xchg
ja
jmp
cmp
leave
fiaddl
fsubrp
mov
push
dec
arpl
roll
add
outsb
dec
adc
test
addr16
ja
aas
pop
out
in
push
mov
sahf
shl
or
fistl
add
fucomp
xchg
push
add
pop
int3
jae
cmpsb
and
cmc
test
xchg
sti
xor
lahf
aaa
jns
out
lods
sub
adc
adc
pop
or
aaa
adc
and
test
cmp
stc
and
mov
imul
test
add
or
leave
ret
lock
push
scas
xchg
pop
repz
lret
pop
push
inc
test
loope
add
xchg
push
and
xchg
sbb
or
mov
sti
icebp
fs
add
jnp
out
xlat
call
mov
lahf
clc
mov
dec
sbb
mov
cmp
fldt
xor
out
xchg
push
add
rolb
mov
jl
sub
scas
fdivp
sbb
shrb
inc
jl
push
adc
sub
xor
cmp
fnsave
rorb
fistps
arpl
insb
sahf
pop
mov
cmc
xchg
mov
push
jo
push
add
lret
icebp
lcall
rol
pop
shll
cmpsb
sbb
out
cmp
movsl
imul
in
xchg
dec
jne
sub
imul
pop
cmp
jecxz
push
jo
sbb
jo
rsqrtps
jecxz
scas
jle
and
sbb
adc
daa
insl
mov
dec
sbb
insl
sbb
orb
out
jmp
loopne
adcb
cmp
pop
outsb
fdiv
pop
pop
loop
cmc
sub
in
jecxz
dec
jecxz
arpl
dec
dec
cmpsl
int
dec
cmp
inc
xor
loope
xor
ret
int
xor
mov
sub
jne
push
dec
cmpsb
xchg
sbb
in
inc
sbb
mov
aaa
cmpsl
hlt
mov
fcoms
mov
pop
sarb
jae
sub
xchg
push
imul
sahf
in
dec
pop
stos
int
test
cmc
shlb
mov
sbb
mov
jno
or
out
and
add
add
popa
push
mov
sub
aas
cmp
sbb
jnp
jno
cld
aam
test
push
sub
sahf
fmul
add
cpuid
cmpsl
xor
lret
cmc
in
jns
adc
jecxz
stos
push
and
loopne
filds
pop
cmpsb
mov
sub
sbb
test
pop
cmp
nop
les
fcmovne
add
pop
cmovne
das
xchg
mov
sar
xchg
incl
lret
in
sbb
sti
pop
mov
nop
pop
cld
and
testl
shr
pop
jecxz
jl
jbe
bound
dec
movsb
cld
dec
mov
add
dec
mov
stos
dec
clc
mov
in
dec
fnsave
push
inc
or
iret
jmp
in
mov
mov
ljmp
mov
xor
int3
enter
adc
mov
divb
jl
shrl
cs
pushf
adc
repnz
jne
aaa
cmp
dec
punpcklbw
jnp
cmp
out
mov
in
fnstcw
out
lahf
sub
push
or
cwtl
jns
pop
dec
pusha
push
push
inc
sub
push
pop
sub
fstps
jae
jae
dec
ljmp
push
andl
rcll
cli
rorl
jo
mov
cmp
addr16
inc
rcrb
inc
test
inc
test
push
add
das
xchg
clc
inc
test
jmp
inc
push
jne
call
sub
sbb
mov
mov
lahf
pop
aam
icebp
mov
adc
pop
xlat
xorb
hlt
lret
dec
or
adc
xchg
mov
mov
adc
inc
xchg
pop
add
int3
mov
cmc
scas
inc
pop
push
inc
mov
iret
imul
add
gs
xchg
cmp
or
or
scas
or
push
and
test
or
add
xor
or
pusha
and
sbbl
sub
into
jno
xchg
dec
mov
push
ds
sbb
ljmp
mov
test
add
scas
mov
dec
pop
jne
bound
adc
inc
inc
mov
mov
rcrb
jle
aam
and
mov
fcoml
outsl
mov
inc
adcl
mov
xor
jno
lret
into
imul
addl
sbb
push
push
or
sbb
bound
jle
movsl
fistps
pop
mov
int3
push
into
nop
dec
mov
and
push
loop
int3
jno
pusha
and
test
add
add
add
std
ja
ret
mov
sahf
xchg
lods
and
subb
nop
inc
cmp
jns
fsubr
add
add
jmp
mov
shrb
scas
repnz
sahf
in
enter
insb
fs
js
ror
jno
test
mov
cmp
pop
lock
inc
pop
sub
mov
fdivrp
addr16
lahf
outsl
push
mov
mov
and
xchg
arpl
and
stos
rolb
inc
sub
add
sub
in
mov
xchg
mov
inc
or
xchg
jae
push
fcoms
stc
and
cmp
scas
add
push
add
loop
fcompl
addr16
out
pop
out
scas
ficompl
sbb
repz
fadd
push
jo
mov
fdiv
xor
int
mov
sbb
cwtl
fxch
ret
sub
inc
andl
push
mov
lret
clc
das
out
mov
imul
test
xchg
es
pushf
gs
xchg
repnz
dec
sub
outsl
jecxz
jg
dec
inc
push
addr16
dec
rcl
cld
js
out
imul
fmull
nop
mov
sub
test
jnp
jae
and
lods
dec
pop
xchg
fidivrl
push
cmc
sbb
pop
int
sub
aas
gs
out
fucomp
lahf
xchg
and
pop
lcall
cmp
aaa
xor
mov
je
adcl
cmp
push
scas
test
jge
mov
fists
jo
xlat
out
pop
aas
lcall
aaa
mov
push
imul
mov
pop
dec
or
mov
fsubrs
dec
push
ja
or
pop
cltd
inc
movsl
cmpsb
xor
cwtl
fs
push
mov
mov
add
rcll
les
push
mov
add
ret
xor
mov
and
or
clc
pop
push
sbb
ret
xor
dec
xchg
test
lcall
xchg
mov
mov
ret
mov
and
fucom
enter
mov
inc
mov
les
and
movsl
push
jl
jnp
or
mov
imul
adc
inc
repz
pop
inc
inc
mov
push
sarl
jge
int3
jg
sub
adc
rolb
mov
add
das
mov
lea
mov
push
add
scas
out
push
popa
insb
jmp
popa
inc
insb
lods
mov
adc
sub
leave
mov
cmc
pop
jbe
or
enter
or
adc
pop
imul
pop
sbb
xchg
insb
inc
test
shlb
push
arpl
pop
es
lods
pop
dec
xchg
xor
jecxz
aad
sub
add
test
js
jo
mov
pop
bound
in
mov
gs
mov
cmp
subl
pop
inc
mov
xlat
roll
xchg
pop
jle
cmp
mov
clc
or
ret
cmp
in
xchg
mov
enter
das
add
and
sub
mov
shll
and
std
jne
je
sbb
mov
movsb
lahf
aaa
pop
ljmp
jo
pop
jae
or
je
sbb
cltd
push
setl
pop
movsb
lock
aam
adc
mov
je
jg
outsl
cmpb
scas
imul
in
fimuls
xchg
int
ss
cmp
mov
out
jge
fidivrs
shr
roll
loopne
sbb
xchg
subl
sbb
scas
push
movsl
sub
out
mov
push
dec
mov
negl
inc
cs
xchg
push
sbb
mov
push
dec
mov
js
mov
sub
and
lods
insb
and
pop
in
cli
inc
mov
jmp
aam
arpl
pop
ja
out
push
scas
and
cmp
push
loop
mov
sahf
lcall
insb
xchg
sub
adcl
adc
mov
iret
into
pop
shl
sbb
and
fucomip
je
addr16
jp
lcall
mov
and
enter
pop
pop
int3
xchg
dec
xor
push
xor
cmp
pop
rcrb
in
popa
cmp
adc
push
mov
cld
out
cmp
mov
sbb
in
xor
adc
and
sbb
and
ret
leave
in
in
push
fistl
push
mov
in
adc
scas
shlb
popa
dec
mov
inc
dec
xchg
les
lret
xchg
xorb
or
stc
fisttpll
add
fistpll
lods
and
bts
inc
xchg
fstl
cmpsb
inc
pop
scas
flds
mov
inc
pmullw
xchg
cmc
mov
cli
mov
icebp
iret
sub
rolb
cmpb
jae
cld
dec
add
add
mov
or
shrb
sub
out
or
dec
mov
push
or
sti
inc
test
dec
or
pop
xchg
fcoml
push
outsb
std
dec
inc
in
mov
lods
fwait
jp
pop
cltd
push
imul
pop
dec
adc
fs
jbe
sti
ds
in
fisttps
push
jnp
jle
aas
adc
push
cmp
sbb
inc
cmpsl
movsl
ss
push
divps
and
xor
mov
dec
pop
out
cs
repnz
mov
inc
mov
out
or
jge
pop
iret
test
add
inc
jmp
cld
imul
mov
bound
dec
outsl
and
enter
fwait
andl
jne
jp
mov
addb
les
push
cmp
xchg
push
inc
rcll
xchg
ret
adc
push
ret
mov
mov
jbe
in
push
xor
shlb
and
mov
outsl
jmp
dec
insb
mov
mov
lret
xchg
sbb
lea
jge
rcll
dec
bound
out
sti
jnp
jae
icebp
cmp
clc
rol
loop
and
dec
pop
int3
or
jmp
fstl
pop
scas
shll
push
loope
mov
insl
ljmp
cmpsb
pop
cwtl
subb
rclb
and
jle
mov
cld
shrb
frstor
negb
mov
fisubs
test
clc
mov
in
dec
lods
or
sub
leave
jo
cwtl
fimull
lcall
lcall
outsl
pop
inc
adc
fcmovbe
aaa
insl
das
lds
jg
mov
ret
in
ret
and
jno
fdivrs
ja
mov
in
dec
bound
sbb
dec
pop
cs
imul
xchg
cmp
in
adc
adc
and
iret
sbb
into
push
pop
fs
stos
ljmp
jnp
xor
pop
lcall
or
lds
fidivrs
mov
and
mov
jmp
mov
lret
std
mov
outsl
mov
dec
pop
cmpsb
inc
insl
jp
add
cmp
insl
icebp
movsl
in
and
fldenv
mov
pop
sahf
mov
jmp
push
mov
and
jp
sbb
fdivs
push
js
aaa
int
int
and
or
call
adc
rclb
addb
bound
xchg
xchg
test
inc
sub
enter
into
fcmovu
add
inc
aaa
adc
repnz
pushf
fstpt
mov
mov
xorb
inc
sbb
xorb
dec
loope
bound
int3
shr
ficomps
dec
xchg
fs
push
inc
sbb
lods
lcall
xorl
mov
aad
arpl
in
mov
sub
jno
mov
fdivrl
das
pop
cltd
test
rolb
ficoml
shll
aaa
add
mov
gs
shlb
mov
lods
and
cmc
push
movsl
lods
decb
ret
push
mov
aam
jbe
sbb
out
pop
xor
cltd
and
out
testl
inc
int
jp
pop
jg
jp
lods
mov
and
stc
sub
sbb
outsb
int3
call
int
ljmp
xor
sysexit
sub
mov
cmpsb
ljmp
repz
or
sub
jb
int3
jmp
arpl
ljmp
adc
mov
add
sub
movsl
or
ss
loope
jecxz
mov
xor
sarl
daa
inc
iret
je
sbb
pushf
ret
cmc
sbb
or
leave
fnstcw
xchg
subb
xchg
cmpsb
movsl
push
and
fsubrs
out
sbb
jns
int3
outsl
or
arpl
sbb
shrb
leave
inc
dec
and
divb
push
jecxz
out
push
mov
pop
xchg
mov
lods
out
rorb
into
jb
xor
xor
push
or
mov
adc
xchg
xor
les
push
sahf
jl
adcb
ds
dec
je
jae
nop
jo
mov
int3
pop
sub
and
repz
cmpsb
jecxz
or
mov
mov
xchg
outsl
push
ljmp
push
out
inc
adc
mov
popa
lock
test
add
push
push
adc
dec
out
arpl
or
fs
inc
and
push
addr16
sbb
shrb
fs
dec
testl
call
mov
iret
and
pop
cmp
jmp
lds
inc
out
ljmp
pushl
jl
mov
mov
add
lds
iret
data16
xor
lret
mov
sub
dec
rclb
outsb
movsl
out
cmp
fldt
pop
push
aad
jl
xchg
push
xchg
mov
mov
xchg
add
dec
and
xchg
imul
xor
jmp
or
jmp
xorb
enter
inc
lods
stc
dec
mov
hlt
cmc
js
inc
sub
insb
ret
jle
into
sub
daa
mov
mov
mov
inc
ss
sbb
rorl
lods
movsl
dec
xchg
xchg
dec
incb
mov
push
loopne
jne
pusha
insb
mov
pop
dec
and
jb
mov
pop
popf
push
add
and
insb
cmpsb
mov
iret
mov
jne
xchg
hlt
aam
lods
sbb
adc
popf
mov
testl
sahf
mov
xchg
loope
inc
mov
or
mov
stos
mov
dec
cmp
adc
pop
adc
cmp
lods
cli
aad
cwtl
fsubrs
jns
fsubs
jbe
inc
and
shlb
lahf
and
inc
sub
and
fstps
scas
push
sbb
mov
jge
enter
dec
fnstenv
nop
and
scas
mov
and
mov
sub
cmc
stos
imul
push
xchg
fstpt
dec
imul
ss
inc
negb
test
xchg
in
cmpsb
imul
pop
sbb
inc
in
mov
push
mov
daa
mov
jge
push
or
shll
test
stos
pop
loop
jne
popf
les
sbb
jge
push
ficomps
sub
push
cmp
xchg
push
pop
xor
mov
adc
mov
lret
or
and
jo
mov
push
xor
es
int
mov
mov
addr16
or
das
in
push
ja
cmp
lahf
roll
cs
insb
out
in
dec
dec
sti
mov
mov
lods
sub
cltd
imul
xor
dec
das
leave
loopne
adc
gs
jmp
or
int
xor
adc
jg
push
cmp
leave
stc
mov
outsl
sbb
sbb
fsubl
stc
jmp
ret
stos
push
mov
xchg
orb
dec
sub
lret
dec
cmpsb
or
dec
inc
mov
in
pop
clc
mov
scas
and
sbb
xor
add
jbe
aas
xchg
cmp
jo
in
pop
push
arpl
add
incb
pop
jo
hlt
cmc
mov
repz
and
xchg
mov
repz
out
addr16
aam
push
sti
out
ja
cmp
push
lds
mov
movsb
sbb
mov
std
fsubrp
sub
pop
loopne
xor
movsl
sbb
flds
mov
sub
inc
dec
imul
adc
pop
sub
lret
gs
sbb
and
test
sarb
movsb
dec
and
hlt
insb
cmp
ljmp
negl
and
lcall
jg
lods
fadds
push
fistpl
xchg
jmp
testb
inc
push
js
or
je
push
xchg
xchg
imul
imulb
shrb
inc
rol
shll
ja
ja
filds
mov
lods
les
xorl
out
add
pop
pop
lahf
lds
sub
add
mov
dec
push
lea
stos
ss
inc
push
aad
aam
mov
in
sarl
idivb
scas
xchg
add
pop
loop
mov
inc
inc
bound
out
roll
fstp
mov
loop
stc
paddd
inc
aas
push
outsl
cmp
sbb
mov
add
cmp
sub
popa
clc
or
daa
jl
lcall
mov
daa
mov
daa
jmp
imul
mov
leave
sub
test
cs
cld
pop
mov
loope
cmp
adc
fldenv
ljmp
xlat
adc
rcr
sbb
lods
push
xor
mov
ficoml
cmp
sub
xlat
lods
sti
inc
loope
xchg
pop
or
mov
test
pop
dec
xor
fcoms
add
mov
lcall
ror
into
ja
mov
imul
mov
sub
out
mov
fisttps
std
dec
mov
movq
cli
pop
and
xchg
jnp
xchg
cmp
mov
and
out
aaa
mov
adc
sbb
and
cwtl
fsts
mov
mov
pop
out
rcrl
xchg
inc
xor
js
ret
cwtl
mov
inc
dec
mov
mov
rolb
scas
mov
cltd
xchg
pop
cltd
fs
cmp
ljmp
call
lock
dec
push
xor
add
sub
and
outsl
shll
dec
push
out
jmp
or
dec
push
mov
imul
xchg
sbb
fisttps
pop
jne
mov
mov
mov
pop
pop
loope
std
inc
rol
sbb
ljmp
insb
orl
mov
insb
pop
lds
pop
aaa
inc
jp
or
sub
lea
dec
jne
dec
lods
or
ss
inc
rcl
or
push
loop
das
sub
mov
xchg
es
fmulp
mov
sbb
test
int
add
in
test
pop
cmpsl
insb
addr16
les
mov
jnp
fmulp
ficomps
push
cmc
in
fadds
mov
leave
cmp
dec
test
hlt
pusha
popa
repnz
push
lods
cmp
and
mov
into
fxtract
dec
mov
mov
scas
mov
jae
cmp
inc
call
test
call
adc
loop
xor
adc
lret
mov
push
leave
xor
mov
insl
aas
mov
popl
out
jo
mov
ljmp
push
in
cmp
rcll
add
adc
loope
mov
sub
mov
add
cmp
in
pop
or
push
sub
shlb
adc
xchg
je
lret
cmp
dec
mov
inc
cmp
arpl
test
or
negb
mov
shrl
insl
js
loope
xchg
out
inc
pop
or
or
inc
sbb
sub
xor
pop
jb
popa
mov
ljmpw
xchg
dec
mov
ss
xchg
mov
shrl
fimuls
mov
fstpl
mov
mov
dec
mov
fs
adc
xor
push
jb
scas
mov
lock
cmp
fildl
lock
and
xchg
mov
or
cltd
mov
push
in
xor
ret
pop
sub
pop
push
mov
outsb
and
dec
loope
push
rorb
cwtl
sub
mov
rorb
ficoms
jns
mov
jno
inc
dec
dec
mov
add
fidivrl
fldt
fs
sbb
icebp
pop
sub
pop
cs
rcrl
push
addl
call
popf
mov
out
es
inc
std
sub
sarb
divl
subb
push
xor
insb
loopne
out
js
js
mov
mov
mov
enter
stos
nop
in
out
and
push
in
cmc
add
pop
mov
out
jl
jae
pop
pop
std
rcll
inc
inc
mov
lret
out
xchg
lret
push
shrb
outsb
outsl
andb
cli
inc
out
pop
cltd
mov
testb
addr16
mov
push
or
ret
mov
or
push
fs
mov
sub
nop
js
mov
jg
mov
stos
into
into
test
lods
das
pop
mov
hlt
loop
popa
mov
das
das
mov
pop
fmuls
lcall
and
cs
std
adc
testl
call
enter
add
xchg
xor
movsb
fmuls
fisubrs
adc
scas
push
mov
lods
cli
cmp
pop
fstpt
mov
cwtl
sbb
rolb
cld
adc
nop
mov
mov
pop
js
sbb
divb
dec
and
fstps
loope
push
iret
cwtl
dec
fistpll
jb
xchg
movsl
push
mov
out
xor
ds
movsb
push
insb
loope
cmp
fsts
mov
je
loopne
push
push
shll
iret
fnstsw
adc
xlat
fcoms
mov
sub
outsb
jns
clc
inc
les
pop
dec
enter
jle
inc
fldt
jp
lock
mov
inc
mov
mov
jns
lock
and
and
fs
inc
or
xor
lret
dec
popf
mov
orl
or
stc
inc
out
sbb
jnp
aad
das
iret
stc
xor
push
mov
sbb
jno
in
push
ja
mov
mov
mov
les
jmp
cli
xchg
ds
pop
jbe
add
xor
jp
sbb
sbb
mov
fmull
pop
push
pushf
inc
lea
jbe
dec
in
jae
out
movsl
jb
in
mov
call
and
sahf
lods
fmull
and
xor
pusha
pop
dec
sahf
fsubrl
inc
arpl
pop
inc
movl
pop
insl
xor
mov
mov
dec
pushf
out
mov
fildll
aam
pop
add
idivb
ret
les
push
gs
inc
mov
push
aad
inc
cmp
clc
stos
imul
das
or
push
xchg
repz
pushf
xchg
pusha
loop
xor
mov
xor
in
jb
test
push
jmp
stc
notb
sub
mov
sbb
dec
sahf
sbb
int
shll
movsb
xchg
stos
adc
xor
dec
pop
add
push
xchg
ja
jne
lea
or
movsl
pop
cli
repnz
stos
daa
test
rcll
nop
add
sbb
repnz
std
cmpsl
lahf
xor
shrl
push
sbb
les
sub
fldenv
roll
cmp
inc
push
xor
mov
jbe
inc
outsl
mov
dec
pop
mov
mov
mov
push
outsl
ffree
lods
push
cltd
xor
ljmp
jnp
sub
es
mov
or
jae
inc
dec
fsubs
lcall
dec
xor
fstpl
or
loope
cmc
insl
imul
adc
and
nopl
cmc
and
out
sub
xchg
call
clc
jge
cld
cmpsb
add
xchg
cmpb
arpl
xchg
dec
mov
xlat
hlt
sbb
sarl
fnstcw
push
leave
xor
arpl
cwtl
jecxz
out
add
sbb
sub
xor
pop
repnz
push
ljmp
pop
insl
adc
xor
test
leave
add
fildl
jbe
loope
notl
jg
movsl
cmp
int
dec
mov
in
ret
sub
push
inc
loop
cmp
cwtl
mov
cmp
int
xchg
jp
jnp
push
hlt
lods
jl
lcall
jo
dec
dec
mov
movsl
hlt
mov
lods
push
aas
mov
scas
pop
mov
fnstcw
add
ja
dec
xchg
adc
rcl
je
jmp
mov
test
and
into
pop
adc
inc
sbb
je
ret
lret
xchg
jnp
cmp
jo
test
push
loope
xchg
test
lods
sbb
push
test
cmp
cmp
test
insb
insb
inc
popa
and
enter
or
and
mov
xlat
xchg
mov
jecxz
movsb
lret
sti
lret
sub
xchg
dec
cmovns
adc
jge
or
imul
fsubrs
cmpb
outsl
sahf
insl
popf
nop
in
out
gs
cmp
rclb
aad
sub
mov
push
push
roll
mov
shrb
idivb
pop
pushf
mov
cmp
add
movsb
outsl
ffreep
inc
pop
mov
stos
imul
dec
inc
inc
sbb
xchg
lret
scas
xor
leave
inc
dec
insb
add
stc
adcl
or
cmp
and
or
lds
testb
xchg
jbe
jge
xchg
mov
or
repnz
js
into
jo
inc
pop
in
mov
push
mov
popf
cmp
cmp
cmpsb
div
mov
cmpsl
xadd
idivl
mov
shr
sub
and
lahf
push
or
sbb
or
cmc
sahf
roll
int3
pusha
or
push
pop
xchg
cltd
add
mov
stc
cmp
push
xchg
or
or
xchg
xor
jmp
and
js
lret
mov
in
shrl
sarb
sub
out
outsl
pop
push
xchg
push
ret
pop
cli
cmp
or
adc
xchg
aad
test
push
scas
cli
push
dec
loopne
mov
and
and
fisubs
mov
rol
ffree
and
inc
mov
rol
mov
xchg
aaa
negb
or
inc
out
jle
add
xor
or
inc
xor
dec
cmp
jmp
jg
xchg
pop
or
fstp
push
xchg
sub
sub
xchg
mov
xchg
mov
ret
adcl
pushf
out
test
and
pop
push
rcrb
lods
out
pop
cmpsb
sbb
repz
adc
ss
adc
cld
pop
into
in
jb
jle
insb
cmp
fwait
add
mov
cmp
and
lods
xchg
add
sub
inc
inc
daa
mov
push
es
mov
add
push
jmp
and
ret
jg
decb
add
dec
leave
lahf
lea
icebp
insb
sahf
ss
enter
mov
mov
push
pusha
inc
shlb
dec
shll
and
ficoml
inc
loopne
and
jne
or
and
xor
ljmp
aad
sub
stos
in
pop
mov
jle
hlt
inc
or
dec
rcpps
fistpll
daa
push
icebp
jae
add
xchg
fdivrs
shl
sti
push
inc
test
icebp
fcom
inc
pop
xor
jecxz
aas
sub
into
adc
jmp
cmp
sbb
jmp
mov
and
in
fwait
lcall
loop
roll
sbb
mov
add
shlb
cmp
ds
sbb
xchg
js
push
repz
addr16
imul
mov
in
add
mov
xchg
movsb
test
inc
mov
scas
add
add
sub
leave
or
adc
repnz
or
mov
adc
fsts
lcall
add
shrb
jmp
cmp
jecxz
mov
push
das
dec
or
imul
fstl
mov
xchg
mov
xchg
test
xchg
cmpsl
xchg
pop
ss
popa
pop
or
ss
sub
lods
js
int3
dec
mov
loop
xor
and
addl
bound
fwait
push
cwtl
jl
push
mov
xchg
push
fidivl
inc
scas
pop
out
cmp
pop
jp
movsl
loope
stos
sub
jmp
jno
sub
and
int
lock
sub
adc
push
xor
inc
mov
sbbl
daa
test
imul
sub
jg
stc
xchg
cmp
dec
sbb
xchg
add
dec
push
inc
nop
mov
int
fldcw
in
shl
jmp
xchg
or
out
mov
scas
pushf
and
orb
imul
xchg
xchg
int3
out
inc
mov
loope
lods
push
dec
outsl
gs
stos
xchg
sbb
xchg
in
push
adc
fwait
mov
in
mov
mov
stos
insb
les
das
sub
mov
pop
fadd
iret
push
jecxz
pop
dec
push
out
sahf
pop
pop
pop
cmp
sub
mov
pop
sbb
inc
xchg
xchg
loope
test
mov
fldt
dec
es
mov
pushl
xchg
dec
dec
sub
loopne
lods
dec
mov
inc
mov
inc
fwait
rcr
hlt
test
ret
xor
shufps
repz
in
xchg
mov
jb
mov
mov
out
adc
jo
adc
fidivrs
xor
inc
imul
sahf
notb
mov
xor
lea
add
test
mov
leave
pop
dec
mov
dec
movsb
add
and
mov
mov
mov
fwait
jo
movsl
mov
inc
mov
mov
jp
sub
in
leave
shlb
mov
inc
add
add
mov
mov
mov
push
jmp
and
out
nop
popf
icebp
add
pop
hlt
add
sbb
icebp
mov
sbb
inc
xlat
icebp
xor
int
es
icebp
fiaddl
jmp
mov
bnd
mov
inc
jae
inc
cmp
jle
pop
ss
adc
or
ret
lods
push
cwtl
cli
loopne
mov
adc
inc
cs
add
ficompl
addr16
cmp
mov
pop
adc
and
addb
in
leave
pop
sub
sahf
pop
push
loop
mov
lock
cmp
cmpsl
inc
mov
xor
push
xor
lea
or
ja
sbb
and
xor
add
or
loop
lea
mov
mov
mov
shr
mov
in
movsl
orl
out
xlat
push
bound
scas
cli
std
stos
es
add
addr16
fucom
xchg
xlat
cmp
out
inc
xchg
fimull
out
in
pop
iret
rorl
cmp
mov
or
test
or
ret
icebp
les
pushf
lock
stos
imul
mov
shlb
sub
xor
outsb
movsb
in
mov
xor
jne
scas
fsubrl
sbb
pushf
push
lds
cmc
push
mov
aas
xchg
push
push
sbbl
or
push
pop
jl
adc
adc
in
and
push
inc
stc
adc
push
mov
out
and
hlt
add
xchg
inc
pop
mov
mov
pop
hlt
les
scas
insb
and
daa
or
out
call
sbb
sbb
flds
movsb
inc
pusha
imul
mov
sbb
push
mov
ss
adc
dec
clc
lret
and
pushl
push
arpl
iret
lret
push
and
mov
mov
jb
pop
jge
jl
sbbb
mov
call
or
cmp
pop
mov
stos
mov
mov
adc
jp
frstor
movsl
xor
loope
add
daa
add
dec
pop
ljmp
jl
adc
leave
inc
cmpsb
and
cmp
rorb
pop
mov
icebp
xor
dec
pusha
dec
fwait
je
pop
inc
lds
or
or
mov
jmp
lods
out
fimull
enter
sbb
cltd
xchg
push
sbb
xor
sbb
push
xchg
lret
or
stos
mov
fcom
dec
jbe
or
mov
sbb
sub
add
loop
ret
insl
pop
repz
mov
pop
pop
nop
int3
mov
loope
mov
stos
adc
sub
stos
push
push
xchg
imul
rcrb
and
outsl
in
mov
mov
dec
insl
pop
xchg
jne
jl
xchg
daa
add
push
fcoml
add
aad
fistl
movsl
gs
adc
stos
xlat
imulb
fidivrs
pop
add
mov
xchg
pop
out
mov
dec
cltd
xchg
adc
xor
pushf
xchg
xor
pop
sbbb
jmp
mov
and
sub
sbb
imul
push
dec
inc
gs
out
sub
in
inc
je
pop
add
arpl
jne
xor
sbb
jl
mov
pop
xor
and
add
jbe
daa
add
ja
dec
xchg
mov
test
xor
push
xchg
cvtps2pd
fs
pop
jecxz
jecxz
cmp
xchg
test
fildl
cmc
test
orb
mov
pop
or
rclb
adc
lret
push
mov
out
jne
add
arpl
jge
inc
sbb
cmp
jge
pop
jnp
jne
xor
push
jns
push
dec
ret
es
mov
test
test
test
scas
and
mov
push
pop
pop
sub
movsl
mov
leave
cmc
aas
and
adc
lret
roll
xchg
fdivs
sbb
inc
dec
lock
iret
pop
sbb
mov
xchg
imul
push
mov
leave
arpl
mov
dec
sbb
or
iret
mov
shr
dec
test
jb
or
add
xchg
xor
add
and
mov
rcrl
enter
xchg
mov
xor
mov
loop
or
leave
xor
xchg
lret
mov
in
je
pop
pop
pop
inc
xor
arpl
jo
pop
sbbl
xlat
xchg
movups
ficoml
es
and
data16
rcrb
es
pop
cmp
push
xchg
addr16
inc
dec
stc
cmp
leave
mov
add
int
fiadds
add
cmpsb
and
pop
sti
add
push
int
inc
mov
xchg
mov
movsb
add
xchg
cmpb
outsb
jnp
xchg
inc
mov
add
dec
dec
addr16
inc
out
lea
into
shll
jmp
enter
fcomi
inc
mov
dec
push
pop
pop
dec
xor
lock
stos
scas
jle
fwait
xchg
mov
push
incl
fistps
push
jnp
dec
inc
loop
stc
mov
fcoms
xor
in
xor
push
je
mov
cmpsl
aas
pop
mov
daa
inc
aaa
mov
pop
pop
test
inc
iret
xchg
jbe
aas
orl
pop
xor
leave
push
mov
mov
xorb
adc
jo
and
xchg
cmp
shll
in
fiadds
fdivrs
pmulhuw
jo
aad
jo
and
add
gs
jnp
sbb
dec
lds
dec
imul
pop
xchg
mov
xchg
jns
jnp
test
push
rcrl
mov
lret
cmp
data16
jp
or
cmp
sub
faddl
aaa
inc
add
movsb
jo
nop
jne
mov
cmp
mov
movsl
cltd
jle
push
mov
xchg
push
sbb
jge
stos
fwait
mov
inc
bound
sub
iret
sub
es
cmp
push
ss
xchg
inc
imul
and
push
fnsave
and
xor
fadd
sbb
wrmsr
mov
in
insb
repz
sub
xchg
mov
ret
dec
mov
ret
inc
ljmp
pop
dec
rclb
inc
xchg
sub
pop
out
enter
nop
enter
scas
xchg
je
sbbb
push
jl
push
inc
fsubrs
push
inc
mov
out
or
dec
dec
pop
mov
fisubl
repz
rcrl
push
or
sahf
sbb
sub
inc
jmp
nop
adc
jp
dec
ret
jns
cmp
dec
jg
cmp
and
and
scas
aam
xor
cli
lahf
jb
cltd
xor
mov
das
fnstcw
arpl
mov
add
xchg
sub
mov
jp
pop
and
inc
cmp
dec
jmp
and
xchg
shrl
in
loopne
mov
mov
and
mov
lahf
xchg
sub
es
push
xor
adc
pushf
push
sahf
imul
cld
push
mov
mov
mov
out
lods
sbb
sahf
xor
lds
push
mov
cmp
push
cmp
adc
mov
xchg
daa
std
es
cmp
outsb
sub
xchg
insl
or
add
js
jae
mov
cmp
pop
cmp
test
dec
jp
leave
repnz
mov
xchg
lds
sub
mov
sub
ss
xor
popf
sti
sub
cltd
jle
cs
movsb
jae
daa
out
popf
mov
pusha
sqrtps
outsl
mov
adc
mov
jle
mov
fnstcw
incl
cli
inc
pushf
xor
cmpsb
pop
and
sub
out
movsb
std
test
test
and
add
sbbl
fmuls
mov
call
pop
and
loopne
fiadds
mov
test
push
data16
mov
jg
sarb
xchg
sbbl
inc
sub
gs
clc
addr16
add
jno
ljmp
mov
xor
gs
dec
mov
inc
data16
xchg
daa
mov
push
in
cmp
and
movsl
lea
gs
pop
adc
addr16
addr16
inc
adc
loope
mov
push
outsl
push
and
rorl
add
sarb
inc
pop
dec
cmp
dec
push
jns
cmp
pop
in
xchg
pop
mov
dec
pop
mov
cltd
faddl
lea
jns
xor
ret
sbbb
inc
fisttps
xor
adc
negl
pop
insl
sub
dec
lods
sub
cli
int3
sbb
subl
push
dec
loop
lcall
pop
jno
js
mov
enter
fbld
cmc
fsub
les
jmp
cmpl
fidivrl
nop
mov
mov
add
sub
sub
and
hlt
ret
jnp
xchg
leave
test
lcall
fldt
fistpl
dec
jb
mov
or
mov
cmpsl
mov
xor
xor
or
xchg
mov
xchg
cwtl
int3
add
pushf
daa
nop
push
cltd
mov
dec
xchg
jno
pop
push
add
mov
ret
lds
fidivrs
imul
adcl
and
xchg
lea
add
incb
dec
xor
les
mov
pop
ret
call
fdiv
imul
push
jns
push
xor
nop
sub
dec
inc
push
mov
jo
dec
call
ljmp
lret
out
sbb
sbb
cmp
icebp
inc
push
jge
mov
in
push
mov
and
and
into
dec
lds
mov
stos
sub
fwait
inc
mov
das
mov
and
mov
add
xlat
add
cld
rorl
cltd
mov
clc
push
loop
dec
pop
addr16
aam
mov
add
arpl
test
call
xor
sub
add
das
pop
or
iret
imul
mov
je
out
repnz
out
xchg
adc
or
insb
pop
add
scas
mov
jmp
mov
fdivl
mov
or
pop
sti
pop
cmp
jmp
imul
pusha
mov
fwait
stos
or
pop
mov
add
sbb
mov
jb
mov
jecxz
pop
pusha
cmp
xchg
in
xlat
pop
and
push
inc
jo
push
das
cld
test
adc
and
inc
test
fists
push
xchg
imul
leave
faddl
inc
jge
lds
mov
ja
inc
xlat
xchg
ja
cltd
dec
movsb
ret
out
scas
push
ret
push
in
xorl
inc
loopne
or
ds
mov
push
mov
or
adc
xor
cltd
xchg
notb
popa
cli
shll
out
filds
adcb
xchg
lahf
push
std
push
loope
jb
inc
stos
push
xchg
fwait
popf
in
lods
lock
jb
mov
lea
shl
xchg
sub
sbbb
jp
pop
out
inc
stos
push
aaa
les
enter
loop
push
xchg
inc
xchg
call
xchg
leave
in
sar
into
jp
mov
xchg
jno
sbb
mov
insb
insb
xorl
sbb
sti
jmp
dec
cmp
add
icebp
adc
cmpsb
xor
test
cmpsb
dec
pushf
push
arpl
fdivs
and
or
sbb
jmp
data16
cmp
pop
jl
pop
cmpsb
cmp
mov
dec
and
cmp
mov
lock
popa
mov
jl
dec
jge
dec
movsb
adc
mov
jmp
cs
int3
add
mov
popf
fsubrs
js
mov
mov
pop
pop
xchg
xor
jb
ret
xchg
fsubrl
sbb
ja
aas
push
add
pop
dec
inc
adc
or
and
mov
popa
enter
rolb
clc
sarb
loope
push
xor
xor
pop
or
mov
sub
xor
cli
fucom
cld
mov
rcrl
push
fwait
pop
add
addb
cltd
outsl
pop
mov
mov
mov
pop
sub
push
sbbb
cwtl
cmc
stos
jl
stos
inc
inc
imul
cmc
mov
imull
jns
push
jnp
jge
add
stos
push
lea
adc
inc
lds
cwtl
inc
nop
iret
mov
inc
cmp
jp
jmp
xor
in
lcall
nop
cmp
pushf
mov
js
aas
cmp
lock
jp
jecxz
jo
jp
sub
in
pop
xlat
movups
lock
jp
shl
xor
imul
aaa
lcall
or
mov
pop
in
add
push
outsb
or
iret
push
outsb
mov
test
das
xor
and
test
stos
or
mov
lock
outsb
mov
cli
push
sub
cli
out
mov
xchg
dec
mov
outsl
mov
ja
mov
jns
stos
xchg
ret
jl
push
sub
ret
jle
push
inc
call
xchg
sti
jbe
dec
test
cmpsb
es
ja
stc
leave
das
rol
sub
or
mov
and
enter
and
cmpsb
push
into
fnsetpm(287
xor
test
cmp
imul
push
xchg
mov
pop
lods
push
aad
lock
lahf
loop
pop
add
or
push
xlat
mov
jns
out
lret
lods
pop
shlb
aad
adc
adc
iret
jnp
out
and
hlt
outsb
pusha
mov
sbb
movsl
dec
jp
out
dec
cmpl
mov
jns
arpl
cwtl
push
and
sbb
in
leave
mov
cmp
sahf
mov
push
push
loop
pop
loop
xor
pop
in
ss
xchg
out
movsl
mov
jmp
scas
mov
jo
js
pop
lret
loop
mov
add
out
scas
daa
sahf
stc
xchg
mov
rcrl
aad
call
lds
and
adc
addb
test
mov
shlb
aas
cld
pop
fldenv
sti
mov
mov
outsb
adc
xlat
pop
mov
lds
stos
cwtl
ljmp
xor
adcl
push
cmpsb
pusha
sbb
cmpsb
pop
lahf
xchg
movl
inc
lahf
mov
add
mov
xchg
sub
mov
sub
push
sarl
sbb
aas
push
test
bound
cmp
cs
xor
shlb
insb
ret
test
ja
fs
cld
lock
push
mov
addr16
jle
xchg
test
adc
js
andb
push
fistl
xor
dec
or
jbe
mov
inc
out
je
test
pop
into
sub
ror
rcrl
fdivs
jmp
xchg
movsb
sub
mov
imul
pop
test
fs
ficompl
pop
pop
fbld
leave
xor
pop
loope
jb
cmp
push
fsubl
jge
fistpll
jne
test
outsl
sti
mov
clc
xor
push
mov
jl
into
xor
ja
cmc
cwtl
dec
out
fistpl
adc
mov
push
les
call
lahf
mov
gs
in
je
repnz
xchg
xor
addr16
or
test
inc
nop
mov
test
aam
jmp
or
pop
stc
jle
jb
and
int
add
arpl
mov
movhps
pop
pop
lret
out
aas
dec
ret
add
or
mov
jp
cmpsb
ds
pslld
mov
bnd
arpl
push
mov
mov
ret
in
inc
stos
cmp
adc
int
cli
ret
mov
add
xchg
sarl
inc
imul
push
mov
cld
jl
sarl
xor
xor
aad
xchg
jns
pop
dec
mov
test
add
lret
nop
sbb
mov
sahf
lods
testb
pop
sti
das
cmp
xrelease
pop
add
sbb
fldt
aam
mov
lret
sub
test
ljmp
dec
sahf
or
inc
mov
xor
sub
xchg
pop
jns
in
adc
js
lock
mov
hlt
mov
cmpsb
inc
fsubs
ss
insl
aam
enter
addl
in
leave
arpl
xor
lret
mov
call
inc
hlt
and
jge
or
cmp
cmc
xchg
iret
add
lods
outsb
add
or
sub
sbb
outsl
cwtl
imul
or
add
and
es
les
and
in
sub
pop
ljmp
mov
bound
xchg
mov
int3
ror
sbb
out
mov
repz
int
jne
mov
cmp
je
cltd
les
mov
add
fsubrl
jne
xchg
popa
sub
mov
push
clc
add
xlat
push
jle
mov
jae
aad
push
push
xor
mov
xchg
jnp
cmp
add
cwtl
sub
fs
adc
ljmp
loop
test
mov
mov
inc
fistps
push
or
cmpsl
push
int
adc
xchg
lahf
aaa
add
imul
aaa
sub
inc
mov
jno
cmpsl
test
gs
and
add
insb
push
sbb
fs
dec
test
sti
pop
inc
in
lret
mov
sbb
not
pop
bswap
out
sarb
arpl
dec
psrld
hlt
xchg
xor
inc
dec
stos
add
cli
lret
icebp
stc
mulb
jmp
mov
push
popl
jg
push
fwait
fs
pop
ficomps
fimuls
xchg
adc
dec
inc
std
std
mov
aam
das
pushf
imul
xchg
call
sub
outsl
lret
pop
out
dec
cmp
mov
and
cli
aam
mov
clc
and
xor
faddl
cmp
test
enter
and
jge
out
std
xchg
xor
jg
sbb
inc
loopne
hlt
inc
push
cltd
add
cmp
inc
in
inc
cmp
xchg
sub
ds
rcrl
or
call
xchg
mov
xor
sbb
in
or
pop
dec
or
cltd
xorb
out
xchg
repnz
or
mov
popa
ss
xor
out
jno
mov
xchg
sub
or
lret
add
inc
sbb
and
pop
scas
xchg
xlat
mov
jb
sar
xor
mov
sub
mov
testl
das
fistpll
xor
pop
out
jnp
dec
icebp
inc
mov
or
sub
test
jno
push
xchg
test
je
ja
or
jo
add
sub
outsb
mov
mov
insb
push
jmp
lods
xchg
movsl
stc
add
cmpl
lods
ss
iret
xor
jmp
add
decl
cs
sbb
sahf
cmp
mov
rcll
cmp
jl
add
cmp
adc
arpl
insl
fmuls
mov
daa
inc
call
mov
add
cmc
call
adc
idivl
lods
push
pop
sub
pcmpgtd
sub
cld
and
pop
nop
cli
je
in
in
pusha
in
lods
int3
and
mov
jns
lcall
out
scas
out
add
daa
ja
pop
cmp
mov
dec
notb
clc
out
add
pusha
pusha
sbb
mov
repnz
cmp
push
rclb
or
aam
das
jne
mov
cmpb
addb
mov
mov
sahf
mov
or
add
push
mov
cltd
and
out
mov
aaa
test
outsb
incl
add
pushw
lods
in
sbb
clc
sbb
xor
mov
std
mov
int
push
rolb
loopne
jl
pushf
cmc
fldt
mov
xchg
pop
cwtl
sti
cmp
das
dec
pop
mov
inc
cmpsl
out
in
int3
fidivs
mov
stos
mov
mov
into
in
out
and
test
stc
cld
inc
dec
dec
popa
pop
pop
dec
xor
fcmovb
dec
jg
dec
mov
into
dec
popf
int
cmp
adc
outsb
out
mov
dec
jle
add
imul
in
ret
je
and
lea
test
addb
inc
pop
dec
adc
mov
mov
bound
insl
mov
jnp
daa
mov
addr16
xchg
inc
or
cmpsb
cli
xchg
jae
jnp
xor
push
pusha
add
sbb
popa
insb
mov
insl
subb
jae
pop
out
jne
ret
shll
in
adc
cs
repnz
jle
pop
dec
sbb
mov
inc
xchg
xacquire
cmp
cmp
aaa
pop
jg
add
cmp
xchg
and
cli
out
add
dec
ds
arpl
jns
push
pushf
iret
and
xchg
cmp
loopne
punpckhwd
add
sbb
mov
testl
popa
mov
fldt
mov
mov
pop
lahf
add
mov
mov
adc
loop
jnp
dec
outsl
ret
add
mov
test
in
jae
push
cmp
xor
push
cmc
and
pop
rcl
adcb
jns
mov
sarb
inc
fidivrl
cld
xchg
adc
xchg
fadds
or
add
fdivrl
xorl
push
inc
out
cmpsb
hlt
ds
lret
add
push
mov
mov
ljmp
popf
inc
fs
cmc
leave
jge
scas
fimull
xchg
push
in
movsb
and
lds
mov
addr16
stc
out
push
inc
imul
cmpsl
pushf
adc
shlb
sub
dec
dec
xchg
notb
aaa
les
and
xchg
mov
inc
xchg
mov
inc
outsb
adc
inc
test
sub
inc
enter
xchg
xchg
mov
mov
cld
shll
sub
mov
push
dec
sub
lret
mov
pusha
das
test
push
jp
push
rorl
pop
push
daa
add
pop
movl
push
mov
dec
shll
loopne
jmp
data16
in
sub
adc
std
mov
push
lea
enter
xchg
mov
fistpl
mov
cmp
and
xor
hlt
mov
xor
cmc
cmpl
inc
xor
lods
push
inc
mov
pop
popa
push
or
hlt
nop
out
cmp
div
aad
call
or
rorl
push
jae
cmp
cmp
inc
mov
xor
mov
cmp
aas
add
pop
xor
lea
je
data16
sbb
int
dec
cmp
mov
mov
cltd
lret
push
iret
mov
loope
add
cmpsb
adc
jp
in
out
xchg
ror
cmp
sbb
loope
mov
sub
inc
pop
and
inc
mov
fisttpl
scas
mov
std
cltd
xchg
dec
jle
push
int3
outsb
jbe
punpcklbw
adc
xchg
xchg
cmpsb
sbb
mov
lock
mov
sub
and
enter
fldcw
pop
push
or
lock
psrlw
sahf
xchg
andb
test
jge
sti
aam
lea
data16
aam
icebp
popa
divl
adc
jae
arpl
fmuls
sub
clc
or
loopne
mov
into
pushf
fistpl
adc
cwtl
into
lahf
outsb
mov
mov
mov
adc
jmp
movsb
inc
cs
jnp
jo
mov
in
fwait
leave
dec
mov
icebp
ljmp
mov
lods
dec
in
inc
lds
sbb
imul
enter
arpl
lods
int3
mov
loop
push
jmp
pop
push
push
sbbb
loop
lcall
cwtl
fidivrs
test
movsl
xchg
in
roll
ret
pop
and
jle
in
pop
adc
insb
popf
inc
cld
mov
icebp
jb
mov
icebp
dec
ret
clc
cmp
mov
mov
mov
cmp
test
mulb
icebp
add
push
push
cmp
mov
ja
mov
pop
mov
cltd
fimuls
cmp
repz
pushf
xchg
mov
jne
mov
adc
mov
pop
cmp
mov
push
ljmp
xchg
imul
in
aas
negl
test
fcom
andl
xchg
cmp
ds
clc
loopne
sbb
es
fcompl
add
cs
pop
hlt
lret
jbe
xor
rcrl
out
pop
dec
xchg
adc
inc
imul
xor
bound
sbb
xor
mov
xor
test
and
dec
test
cwtl
xchg
icebp
loop
gs
or
sub
ljmp
pushf
les
xor
inc
push
jecxz
cmpsb
sbb
sbb
jo
popa
cld
gs
jbe
enter
mov
adcb
testl
dec
mov
or
pushf
and
test
cmp
mov
sub
fildll
xor
mov
sbb
andl
adc
fwait
in
mov
lahf
divb
push
xor
movsl
ja
mov
cmp
mov
mov
push
add
sbb
xchg
cmc
outsl
cmp
call
in
pop
mov
loop
or
lods
adc
test
icebp
dec
cld
xlat
ja
jb
mov
ret
jl
into
xor
in
mov
clc
add
mov
xchg
pusha
inc
dec
sub
or
pop
cmpsl
cmc
jo
outsl
push
and
push
ror
mov
xlat
outsb
in
add
push
outsb
jmp
stos
pop
sbb
adc
imul
mov
lods
lds
or
mov
loope
cmp
js
jne
arpl
push
aaa
jg
and
xor
imul
callw
xlat
mov
psllq
into
xchg
sub
fwait
outsb
xor
adc
pop
pop
mov
mov
ret
xor
push
and
into
push
es
dec
xchg
inc
xchg
loope
lret
cmp
hlt
sub
leave
and
div
lcall
jbe
dec
fnstcw
movsb
int
aas
arpl
hlt
jae
pop
sbb
add
push
mov
test
popf
add
mov
push
daa
das
les
adc
movsb
jmp
test
mov
xchg
push
add
and
xchg
inc
hlt
lahf
incl
jno
xor
or
arpl
push
pop
pop
xchg
data16
lods
insb
into
mov
jo
aas
adc
iret
daa
imul
inc
call
scas
mov
popf
cmpsl
ljmp
rolb
push
or
xor
push
jmp
mov
rorb
lock
loopne
mov
data16
js
call
scas
clc
fidivs
pop
shll
jae
neg
adc
or
fwait
mov
data16
fwait
mov
cwtl
jp,pn
lds
and
lret
in
mov
rolb
push
push
scas
add
aas
pop
sub
sub
cmpl
sub
insl
jb
imul
aas
outsl
aas
pushf
movl
call
mov
pop
imul
or
cmpsb
and
lret
out
push
outsl
lret
stc
nop
ja
cltd
loop
test
push
fsub
push
inc
aad
add
imul
test
xchg
lcall
nop
in
scas
fldl
in
push
test
or
mov
loope
cmpsb
lret
jae
push
jmp
lret
add
mov
ds
mov
imul
shlb
xchg
int3
adc
cmp
xor
push
in
divb
loopne
sbb
pop
xchg
mov
imul
decl
pop
lret
sub
mov
dec
js
cwtl
test
sub
or
stos
sbb
lea
lea
cld
xchg
xor
icebp
lea
inc
push
loop
dec
mov
xchg
out
inc
jl
lods
aas
das
mov
rol
push
loopne
mov
xor
dec
imul
mov
or
jge
test
into
xor
pop
ja
int3
mov
das
lds
xchg
mov
aad
and
outsb
xor
leave
push
dec
add
lret
call
mov
xor
movsl
xlat
out
or
and
addb
clc
call
dec
xor
sarl
jl
int3
dec
in
lahf
je
mov
mov
ljmp
icebp
js
jge
pusha
inc
sub
cmp
loopne
push
pop
adc
jp
push
ret
dec
test
rolb
inc
out
mov
mov
sbb
cmpsb
cmp
sub
cmpsl
add
sub
jae
js
pop
outsl
imul
xchg
jb
xor
xor
mov
and
in
pop
jbe
adc
popa
fsubp
pop
aaa
out
inc
mov
test
ds
or
or
in
das
cmp
into
xchg
divb
xor
jo
add
jecxz
sub
mov
mov
push
rolb
pop
jmp
pop
push
pcmpeqb
inc
inc
ret
and
fnstsw
cld
sbb
addr16
or
rclb
pusha
stos
les
shll
mov
dec
mov
mov
or
inc
aaa
int3
inc
lods
arpl
xchg
in
fildl
std
mov
jae
and
jecxz
adc
adc
sbb
jge
lret
jb
mov
mov
jmp
dec
adc
or
mov
inc
pop
mov
ret
faddl
cwtl
outsl
es
mov
jmp
mov
mov
not
int
adc
outsl
rclb
mov
in
daa
mov
lea
pop
jecxz
inc
out
mov
js
adc
cmp
xchg
mov
xchg
testl
and
mov
inc
jecxz
test
fcmovbe
pop
addr16
sbb
ja
mov
jp
cmp
fwait
mov
das
imul
iret
sbb
xlat
jo
mov
scas
push
stos
push
adcb
inc
inc
imul
repnz
jnp
push
add
mov
mov
add
shlb
xchg
imul
or
pop
xchg
mov
jb
lahf
mov
mov
scas
out
pusha
stos
and
sub
adc
loopne
or
lock
jb
and
or
roll
fdivrp
inc
add
jge
jbe
js
ja
mov
inc
xchg
pusha
pop
or
xchg
jno
sbb
and
mov
imul
pop
xchg
mov
loopne
movsb
cmpsb
xor
sub
pop
inc
sbbb
lea
ja
mov
adc
lock
notb
xor
mov
pop
mov
pop
dec
pop
adc
xchg
ds
xchg
out
in
sub
pop
inc
mov
sub
xor
test
leave
fildl
jnp
inc
mov
sahf
cmp
negb
jp
pop
int
imulb
popf
lods
repz
jg
mov
sbb
push
icebp
mov
mov
pop
push
dec
movsb
inc
mov
mov
call
mov
mov
call
sub
adc
cmp
and
xlat
test
outsb
lods
sub
add
stc
or
fwait
push
sbb
lds
ret
mov
call
add
icebp
jne
testl
sbb
scas
mov
enter
cmpl
mov
xchg
daa
inc
leave
ja
xchg
mov
iret
outsb
add
adc
pop
std
mov
sti
xchg
xchg
dec
cmc
push
es
xchg
mov
es
in
mov
adc
daa
aaa
daa
test
inc
leave
cmpsl
subb
mov
mov
dec
push
push
inc
inc
lods
fmull
mov
enter
sub
lods
int
mov
js
pcmpgtd
dec
mov
gs
push
ds
sbb
sub
cmp
xor
cmpsl
add
xchg
rclb
xchg
mulb
cmpb
cmp
icebp
lahf
inc
mov
fucomip
sahf
lods
push
loop
mov
clc
jno
xchg
inc
outsl
fs
jmp
xchg
and
in
mov
fs
xchg
cmp
in
gs
cli
fs
in
mov
pop
rclb
pop
pop
stos
mov
cmp
lahf
inc
adc
jmp
pop
cmpsb
imul
addr16
test
push
jmp
ja
iret
add
popa
cmpsb
cli
fidivrs
sub
iret
scas
push
bound
mov
sub
loope
scas
movsb
out
cmp
ds
aad
dec
lcall
into
loope
dec
push
das
stc
dec
mov
ret
mov
mov
decb
push
pop
popl
in
jp
fsubs
ljmp
cmc
and
aas
ljmp
lahf
les
out
mov
jne
lret
leave
sbb
movsl
lcall
cld
inc
dec
xchg
adc
or
adc
or
mov
pop
or
sub
sbb
loopne
mov
add
enter
out
test
icebp
fwait
mov
adc
iret
cwtl
mov
xor
dec
xor
fwait
jno
das
push
in
push
push
pop
fsubrl
ret
sbb
out
xchg
aad
jo
jbe
pushf
testl
xor
mov
daa
xor
jbe
in
and
inc
adc
xor
jg
xor
add
sub
adc
cmp
clc
ja
lcall
inc
out
jle
or
shl
and
pop
mov
lea
xor
pop
lcall
jl
test
nop
jo
mov
or
sub
push
push
ret
outsb
xchg
lret
jp
jge
repnz
sub
mov
je
ss
scas
fmull
and
stos
inc
xlat
rclb
mov
imul
lea
mov
pop
sahf
loope
xor
cld
fwait
das
aad
add
sti
js
xchg
xor
ret
xor
cld
mov
aam
adc
jmp
inc
daa
mov
sarl
lods
jno
aam
repnz
addr16
pop
rclb
mov
insb
filds
shrb
push
xor
xchg
mov
mov
cmp
ljmp
movsb
jle
loope
faddl
in
sub
add
xlat
clc
test
mov
mov
stc
bound
pop
orb
push
imul
stos
add
mov
enter
lods
mov
jno
adcl
pop
push
mov
imul
add
jp
add
aaa
aam
sbb
xchg
mov
push
daa
jge
ror
out
mov
xchg
test
xor
insl
ficomps
inc
ljmp
xlat
push
cs
pop
adc
or
xlat
cmp
pop
lods
bound
push
arpl
jae
jle
xor
xor
popa
pop
mov
push
add
incl
insb
add
adcl
imul
push
lea
push
jmp
gs
and
pop
add
mov
push
shlb
pop
mov
stos
call
rolb
and
push
scas
jecxz
mov
movl
mov
cli
sub
cmp
mov
dec
cmp
xchg
shlb
push
inc
movsb
jg
fists
lret
or
test
or
ret
test
rorb
lret
xchg
out
cmp
test
adc
jae
jecxz
out
add
inc
jb
aas
or
adc
in
xlat
scas
lods
shr
adc
enter
inc
fwait
jae
or
mov
ja
mov
mov
test
jno
adc
mulb
popf
insl
dec
das
lret
and
pop
mov
lock
xchg
push
or
xor
adc
loop
cmp
or
andl
popa
int3
imul
sbb
mov
dec
sub
lods
xor
inc
ja
cmp
int3
int3
xor
fldenv
cmp
jle
sbb
fxch
adc
das
dec
int
out
dec
pop
or
and
push
pop
addr16
rcrl
cli
fmuls
repnz
adc
push
fcmovnu
sbb
shll
jecxz
mov
ja
movsb
lea
inc
repz
and
popf
mov
inc
mov
outsb
inc
fnstcw
bound
mov
inc
fdivl
mov
adc
add
popa
dec
mov
stc
std
mov
dec
inc
inc
mov
mov
xor
jns
push
xchg
bound
sub
xchg
sbb
and
adc
ss
xor
roll
divl
mov
ficomps
enter
fstpl
ds
mov
pop
sbb
mov
sti
in
sti
inc
adc
call
ds
inc
mov
push
je
data16
mov
or
pusha
lcall
sti
xchg
sub
sbb
inc
js
push
shr
xor
and
or
icebp
mov
test
sub
scas
jg
stos
and
fistpl
into
scas
subb
mov
lea
call
jp
mov
shll
mov
push
xlat
ja
adc
jg
das
ret
sbb
repz
popa
and
int3
test
sbb
lds
cmp
sub
pop
mov
adc
inc
sbb
xor
push
sub
adc
dec
or
fs
push
pop
add
jb
sbb
sub
scas
pop
decb
dec
inc
add
jo
outsb
loopne
xchg
add
pop
out
xlat
dec
sbb
xchg
dec
and
int
cli
mov
out
or
scas
sbb
mov
orl
repnz
mov
jae
insl
stos
cld
scas
fcomi
into
pop
jp
adc
pop
push
outsl
push
je
inc
ret
cmp
jp
jmp
enter
push
push
add
mov
sub
lahf
mov
shl
adc
jl
push
enter
mov
sbb
dec
inc
add
adc
repz
and
inc
inc
movsb
push
and
inc
jne
xlat
sbbl
fidivs
add
repz
sbb
cli
adc
test
pop
mov
test
mov
jnp
adc
rcrb
cmc
mov
imul
mov
std
inc
mov
pushf
cwtl
in
jb
ret
arpl
daa
pop
add
and
mov
adc
push
jae
pushf
sub
fcompl
mov
sbb
mov
jecxz
inc
cmpsl
xchg
push
inc
pusha
inc
sahf
enter
push
xor
sbb
jle
mov
jge
cwtl
repnz
jb
lret
mov
and
ds
daa
and
pop
cltd
dec
loop
loopne
lret
pop
xor
popf
enter
aaa
inc
jbe
shlb
sarl
mul
mov
pop
adc
fidivl
inc
lock
mov
into
fwait
das
into
sub
add
and
jecxz
mov
orb
sti
ljmp
cli
add
into
out
nop
shll
fwait
out
xor
nop
mov
aad
mov
pusha
clc
cmp
divl
add
clc
cmp
mov
insb
pop
add
mov
cli
jb
imul
jae
jne
fwait
out
adc
je
negb
pop
push
xor
lods
cli
jmp
data16
loopne
pop
and
mov
mov
popf
mov
add
mov
ljmp
push
rcrb
push
cmc
xor
cmp
rorl
dec
push
fnstsw
sub
fsubrl
out
adc
mov
adc
inc
daa
cli
mov
mov
xchg
pop
mov
nop/reserved
ljmp
stos
cmp
adc
pop
out
mov
gs
dec
mov
movsb
mov
test
add
out
pop
lret
movsb
push
popa
adc
test
out
jle
pop
lods
stos
xchg
sub
movsb
sbb
mov
scas
addb
icebp
or
dec
cmpsl
pop
cld
mov
mov
inc
or
idivb
rcll
sbb
clc
push
jecxz
push
lods
fmul
dec
inc
mov
jae
xorb
aaa
adcl
aam
rcrl
rcl
xchg
jb
mov
and
inc
pop
mov
mov
mov
subb
or
or
push
and
mov
and
fisubs
mov
shll
xor
cmp
addr16
rorb
out
inc
sub
adc
clc
xchg
scas
fsubr
scas
xchg
adc
leave
mov
sub
adcb
out
xor
aam
rolb
shrb
in
inc
cmc
pushf
pop
jae
sbbb
lods
jno
fsubs
les
sti
mov
aas
jge
mov
jb
inc
rep
mov
ret
mov
pop
scas
test
jne
popf
jne
inc
jp
fisubrl
mov
outsl
pop
inc
inc
push
cwtl
sbb
mov
dec
sbbb
dec
pop
pop
sbb
push
cmpsl
setg
cmp
out
dec
and
pop
mov
push
adc
xlat
push
or
xor
cmp
js
aam
lea
out
sub
repnz
fldenv
jmp
inc
xor
aaa
sub
mov
pop
dec
jge
dec
push
inc
add
mov
push
pop
repnz
add
pop
push
push
insb
sub
or
mov
xchg
inc
stc
adc
add
imul
in
repz
enter
and
jg
lahf
int3
adc
pop
test
or
in
xor
call
xlat
outsl
outsl
icebp
shrl
sahf
movsb
leave
jnp
inc
insl
or
fucom
sub
rcrl
push
mov
xor
push
lret
fidivrs
insl
cmp
stos
push
xchg
andl
test
sbb
mov
add
jmp
stos
repnz
addr16
xchg
mov
and
rolb
mov
push
scas
adc
in
xchg
data16
pop
stos
out
mov
xlat
mov
sbb
dec
orb
mov
lret
jp
pop
pop
dec
jmp
lret
adc
mov
test
sbb
add
stos
les
xor
and
popf
popa
daa
rorl
xor
mov
in
sbb
push
out
dec
or
sub
inc
xor
test
adc
sbb
out
push
mov
notl
or
mov
inc
and
adcb
and
mov
xchg
mov
and
jle
sub
mov
sbb
dec
push
outsl
fnstenvs
mov
dec
fwait
out
ret
inc
xchg
fdivl
sbb
xor
inc
orl
stos
push
shlb
jns
jbe
adc
mov
push
shrb
imul
or
xor
and
fsubrs
and
and
test
hlt
dec
push
scas
sahf
leave
dec
jno
daa
jne
in
cmpsl
xchg
push
repnz
pop
mov
nop
xchg
inc
stos
mov
mov
inc
popa
mov
push
xchg
repnz
ficomps
dec
movsb
sub
lock
pop
aam
scas
clc
xchg
mov
mov
pop
pop
out
out
aas
ror
sahf
notl
pop
addb
aad
ficomps
push
scas
or
add
cwtl
cmc
inc
enter
xlat
insl
nop
jg
loope
mov
mov
xchg
es
test
out
and
dec
ss
lea
call
fs
das
andb
sarl
mov
stc
xchg
dec
jle
push
adc
les
imul
pop
xchg
pop
out
inc
and
push
add
sbb
sub
mov
sbb
daa
stos
and
ss
data16
outsb
push
fmull
pop
jno
sahf
in
and
push
aam
add
out
data16
jge
mov
mov
cld
mov
icebp
adc
inc
jge
lds
pop
in
cltd
out
js
testl
out
mov
cmp
loope
cwtl
xor
sbbl
mov
sbb
lea
jp
outsl
dec
jne
out
aam
lcall
daa
mov
xchg
pop
push
fmuls
jp
lods
insb
jbe
loope
int
lcall
imul
or
push
adc
cs
cwtl
xchg
arpl
jmp
mov
cs
mov
pop
inc
mov
sub
outsb
inc
test
pop
ljmp
sahf
loopne
fsts
ret
repz
ds
cld
adc
test
pop
pop
push
mov
mov
fildll
gs
je
mov
es
test
loopne
inc
ljmp
std
mov
push
lret
in
fwait
xor
sbb
jp
hlt
sub
inc
adc
lock
add
push
std
dec
in
inc
mov
inc
inc
or
push
mov
jb
inc
ljmp
or
pop
xchg
sub
cmpsb
outsl
into
lea
pushf
mov
es
mov
cmp
jne
dec
push
push
out
sbb
adc
sub
pop
inc
inc
icebp
mov
mov
xor
jno
daa
stc
push
and
aam
mov
cmpsb
je
and
dec
cmp
xchg
xorl
push
sub
out
test
inc
mov
into
into
lds
add
mov
and
push
js
mov
push
in
xchg
sbb
push
icebp
stos
lcall
popa
sub
dec
inc
int
pop
sbb
rorl
mov
in
push
test
xchg
mov
xchg
pop
std
and
xor
mov
movsl
imul
dec
dec
push
test
rcll
icebp
rclb
xchg
shlb
scas
push
aaa
inc
push
sbb
gs
pop
stos
lods
repz
adc
test
out
fnstenv
mov
mov
pop
add
jg
mov
sub
add
popf
or
sbb
shrl
sub
push
xor
hlt
pushf
add
mov
sub
add
sbb
xor
mov
imulb
or
jno
pop
xor
into
dec
aaa
and
mov
jb
xor
xor
js
adc
pop
jmp
loopne
add
fcmovnbe
sub
es
mov
lcall
jle
mov
pop
dec
xor
or
std
sti
std
insl
xchg
movsl
in
mov
dec
scas
add
add
aam
mov
jl
test
mov
pop
mov
push
outsb
mov
pusha
fiaddl
jns
adc
aaa
mov
xchg
mov
inc
mov
mov
fnstcw
xchg
mov
jge
pop
pop
sbb
add
pop
mov
mov
dec
aaa
cltd
out
aaa
les
popa
int
xchg
into
sbb
pop
out
and
adc
daa
movsb
sbb
imul
shrb
mov
test
in
mov
outsb
daa
fnstcw
fwait
jb
mov
dec
xchg
mov
adc
pop
sbb
pop
pop
add
aam
sbb
sahf
cwtl
add
dec
cld
mov
mov
mov
cli
clc
adc
popl
sbb
imul
aam
push
adc
loopne
lods
and
lds
insb
mov
ss
or
lea
gs
or
jnp
xor
enter
jbe
aaa
cmp
stos
outsb
fisttps
cltd
subl
inc
mov
lret
fwait
push
sbb
adc
mov
jmp
jo
mov
shlb
out
add
jo
cmpsl
xchg
push
pop
std
and
jl,pt
shrb
sbb
mov
xchg
push
jb
mov
mov
sub
aaa
jmp
xor
call
pushf
adc
es
mov
push
test
jae
stos
incl
mov
mov
fidivs
cli
sbb
inc
mov
out
or
fildll
hlt
or
mov
inc
mov
shrl
add
or
pusha
aad
sbb
xor
mov
xlat
pop
mov
shrb
xor
into
pop
push
xchg
and
decb
fwait
sbb
jbe
jge
push
fildl
call
pop
gs
les
and
sbb
test
outsl
push
lock
or
loopne
icebp
push
imul
lret
xor
fildl
out
cmpsb
sub
orl
cs
and
cltd
ds
fdivs
sub
test
lea
dec
pushf
jge
rol
ret
ljmp
mov
jmp
adc
cmc
dec
adc
not
cmp
mov
lahf
adc
push
dec
movsb
sbb
or
lds
in
bound
popf
xor
xchg
mov
movsl
cmp
out
push
jbe
dec
and
fadds
loopne
cld
and
xor
js
or
mov
filds
lret
mov
sbb
pop
adc
lea
sbb
cld
popf
sub
fsts
mov
loope
lcall
dec
pop
dec
cli
test
xor
fdivs
sub
jns
cmpsb
mov
pop
inc
jb
aam
scas
subl
add
mov
out
inc
cmp
cmp
adc
or
test
rorb
enter
xchg
sbbl
popf
mov
cmp
es
inc
clc
and
xchg
mov
cmpsb
es
mov
jo
int3
pop
add
ret
cwtl
cwtl
cmp
cld
and
movsl
je
inc
or
cmp
jnp
aam
sbb
lds
lcall
pushf
xchg
sahf
dec
jo
cmp
add
popl
outsl
pop
mov
mov
pushf
xchg
pop
leave
cmp
mov
cli
lods
dec
out
jnp
movsb
adc
and
jb
xchg
rclb
scas
mov
repz
sbb
pusha
sti
add
mov
in
outsl
or
xor
push
cmp
sti
shll
xchg
call
jl
leave
xchg
add
push
adc
shll
cwtl
mov
andl
inc
cmpl
pop
rorb
sub
sahf
enter
test
mov
jmp
lret
mov
push
fdivs
fdivrl
sbb
mov
mov
push
and
and
cs
repnz
sbb
fcmovnbe
cmp
outsl
mov
hlt
push
dec
cmc
idiv
rcrb
adc
insl
inc
fmulp
pop
in
pop
sub
fidivs
pop
cmc
inc
xchg
jp
cltd
xchg
addb
flds
pop
gs
push
jmp
mov
add
jb
mov
lock
fadds
lret
push
adc
insl
aad
lcall
and
jns
mov
dec
pop
mov
jne
daa
jge
call
imul
or
idivb
cmpsl
mov
sahf
sbb
and
push
addr16
mov
mov
pop
jnp
xchg
ret
and
call
shl
pop
cmp
add
and
out
cmpb
cld
int3
push
cli
es
rcr
jge
pop
xchg
xchg
repnz
lcall
lcall
cmpsl
mulb
and
inc
idiv
rolb
jne
pop
push
jae
repz
sub
jle
cmc
adc
jg
inc
adc
bound
inc
into
jle
lods
leave
push
inc
cmovnp
xchg
jmp
pop
stos
inc
xchg
jbe
xor
daa
mov
jecxz
out
and
cltd
adc
insb
les
sti
shll
ret
outsb
jno
pushf
mov
cld
mov
mov
add
jmp
jb
jo
stos
aam
sbb
jp
xor
mov
hlt
xchg
mov
ja
xchg
sahf
mov
cltd
clc
repz
lods
pop
or
ljmp
rcr
je
ds
fdivp
add
lea
xor
mov
xchg
fdivs
cmpsl
movsl
sbb
inc
mov
push
cmc
sub
nop
pop
vpminub
lahf
inc
dec
jo
and
mov
jge
jae
dec
sub
lret
mov
mov
inc
xchg
in
mov
push
mov
out
enter
push
mov
dec
mov
pop
sahf
add
mov
dec
sbb
mov
adc
add
cli
test
int3
adc
outsb
xor
sub
adc
loope
les
stc
lret
lods
push
jno
out
imul
pop
xor
cmp
cmpsl
mov
pop
jle
lcall
xchg
js
xor
ja
pop
add
rcr
mov
lods
fistl
rcl
adc
add
sarb
xchg
xchg
inc
mov
mov
mov
aaa
clc
mov
clc
arpl
out
addr16
arpl
daa
lock
adc
mov
fcoms
jp
add
lret
dec
scas
cmp
mov
out
pop
jl
gs
push
inc
sub
ret
sbb
sahf
idivl
mov
sub
xchg
loope
push
jecxz
loopne
je
jo
lea
scas
std
cs
lahf
jne
mov
outsl
push
dec
mov
mov
incl
fnsave
arpl
sbb
xor
sahf
daa
xchg
mov
adc
xchg
or
rcll
sbb
test
xor
outsl
int
push
sub
jle
mov
mov
xchg
ffreep
cmp
or
filds
jb
mov
mov
push
pop
push
and
les
das
adc
and
pop
call
sbb
ret
stc
ficoml
mov
ds
xor
xor
int3
sbbb
out
aaa
lods
cmp
repz
push
lret
int3
dec
ficompl
xchg
scas
mov
add
int3
stc
or
mov
sti
push
out
pop
jo
fnstcw
addl
insb
pop
jnp
or
cwtl
popa
pop
adc
dec
mov
mov
add
xor
or
xchg
sahf
ljmp
xchg
xor
mov
cli
jbe
xchg
inc
enterw
xchg
mov
mov
fbld
cli
loope
xchg
dec
add
push
int3
test
adc
popa
test
push
inc
clc
dec
arpl
pushf
dec
iret
add
pop
mov
shlb
mov
add
or
sbb
mov
push
test
jne
adc
insl
jo
xchg
sti
ljmp
push
ljmp
dec
pop
and
nop
jnp
pop
adc
scas
adc
pop
pop
jg
pop
into
scas
jp
add
out
insb
jmp
inc
or
lret
loop
stc
mov
movsb
mov
jl
clc
psrlw
mov
gs
imul
xor
push
in
mov
test
fcmovnu
push
inc
movsl
add
fdivrl
lods
xor
repz
mov
add
loop
pop
filds
jge
xchg
int3
test
dec
aam
ds
pushf
stc
jbe
jnp
mov
daa
push
movsb
shrl
dec
sub
in
dec
cmp
lods
jnp
inc
mov
sbb
mov
fisubs
push
xor
push
inc
nop
adc
or
das
lret
out
repz
mov
mov
lds
or
xchg
pop
dec
mov
scas
xchg
test
test
dec
xchg
add
adc
pop
jmp
cli
ret
loope
pop
pop
ret
push
mov
out
xlat
mov
fdivl
mov
pusha
ret
and
add
push
loope
test
imul
dec
or
push
into
push
xor
adc
xchg
shll
inc
xchg
push
xlat
aad
add
jl
bound
lcall
add
subb
xor
out
mov
mov
or
push
add
xchg
loopne
xor
and
jecxz
fucomp
ds
mov
int3
jb
shlb
enter
in
mov
sub
outsb
scas
mov
add
je
mov
cwtl
out
sbb
loope
adc
cmc
sbb
daa
adc
mov
or
add
and
in
repz
pop
decb
aam
repz
bound
rcrl
sbb
fldcw
mov
xor
add
adc
les
xchg
xlat
je
lahf
mov
push
aad
mov
insl
dec
in
and
dec
stos
jl
cmpsl
dec
and
mov
sub
sarb
and
test
xor
stc
jg
xchg
clc
pop
jle
sub
fwait
loope
out
clc
aam
fsubrp
popa
js
inc
jp
ljmp
in
nop
aad
data16
or
orl
repnz
testb
jle
lea
dec
pop
out
stos
mov
ret
mov
out
call
jo
sub
pop
adc
xor
mov
xchg
sbb
rcll
cmove
push
xor
dec
mov
aam
cmpsl
into
clc
xchg
test
adc
fnstenv
icebp
jmp
push
fsts
popf
fisttpll
loop
xlat
xchg
ret
adc
repnz
fcmovnb
js
or
fcomp
aas
xchg
xor
sahf
cmpsb
push
cltd
push
test
cmp
fdivrs
xchg
jb
repz
jg
or
push
out
jno
aad
add
rolb
mov
scas
xor
dec
mov
outsl
dec
out
out
mov
lock
rcll
mov
sub
and
mov
jmp
push
mov
sti
adc
xchg
in
xchg
insl
movsb
out
repnz
jmp
sahf
stc
aad
int3
pop
push
pop
mov
das
mov
jns
cmpsl
push
cmc
lods
in
iret
cmp
imul
adc
insl
clc
pusha
data16
stc
rcrb
xchg
xchg
sub
inc
dec
xchg
adc
fcompl
enter
loope
xor
cli
je
jl
shll
outsl
gs
cmp
or
enter
fwait
rcrl
sub
xchg
dec
mov
or
inc
cmp
add
or
mov
test
setp
aam
push
xchg
fldenv
outsl
ds
inc
outsl
xchg
mov
leave
sub
pop
xchg
push
cmpsb
gs
sbb
jns
gs
cltd
imul
int3
or
repnz
push
adc
lahf
aad
js
jnp
dec
fidivrs
cmpsl
cmpsb
mov
mov
mov
xchg
xor
nop
imul
lods
out
scas
sbb
sub
pop
pop
jge
repz
mov
sti
insl
idivl
xlat
out
dec
cmpsb
ficoml
dec
test
icebp
shrb
mov
mov
or
cs
xor
cwtl
outsl
fwait
hlt
mov
cmp
cmp
pop
push
add
mov
adc
aaa
mov
sbb
lods
rclb
sub
nop
cmc
fsubrl
xchg
cmc
xor
xchg
cmp
sbb
mov
inc
rol
ljmp
jae
pop
insb
mov
mov
add
mov
ficomps
or
and
dec
out
xchg
dec
cltd
ja
pop
sbb
and
xchg
dec
sbb
inc
pop
xor
test
mov
sub
je
addr16
sub
or
cmp
cmp
pop
pusha
pushf
jo
movb
mov
scas
popf
dec
push
adc
jmp
jno
pop
jle
in
fcomip
mov
aad
push
and
cs
adc
add
push
popa
push
mov
into
pop
out
mov
lcall
negb
fld
outsl
jl
adc
and
push
daa
dec
rcrb
insb
push
roll
pop
mov
es
and
sub
mov
mov
bnd
outsb
xchg
das
movsb
outsb
ljmp
sbb
mov
imul
xchg
sahf
aas
js
adc
scas
mov
test
or
popf
jg
jle
shrb
fsubr
pop
dec
repz
mov
mov
je
lret
bound
hlt
mov
or
addr16
fidivrs
mov
push
xchg
inc
aaa
xchg
xor
jns
jno
ret
popf
inc
aas
out
xor
pop
push
das
shll
pop
xor
cmp
movsb
jbe
sub
push
int3
addl
loope
insb
fistps
push
sbb
cmc
sbb
cwtl
lea
scas
pop
push
xchg
mov
cld
inc
jae
xchg
int
push
mov
push
sbb
sbb
ja
xchg
sahf
jbe
or
imul
dec
aad
enter
outsb
stos
fisttpll
pusha
xor
into
in
mov
jnp
adc
pop
stc
fwait
subl
fnsave
mov
movsl
mov
and
mov
cs
xchg
pop
mov
mov
stc
insl
xor
add
callw
cli
test
mov
jge
pop
loopne
push
add
popa
repnz
mov
cld
dec
cmpsl
dec
shlb
lret
pop
and
ds
sub
imul
cmpsb
inc
jne
insl
in
mov
dec
sub
cmp
lods
outsb
insb
loopne
mov
xor
adc
jno
cmp
mov
xchg
cld
outsb
dec
movsb
aad
outsb
repz
negb
inc
addr16
push
enter
scas
je
fstpt
and
scas
sub
add
mov
loop
or
mov
les
mov
dec
or
in
stos
addr16
sub
mov
jno
outsl
cmpsl
pop
xor
sbb
loop
clc
mov
scas
mov
xchg
and
push
adc
add
aaa
jmp
push
and
inc
add
pop
xchg
mov
pop
sub
out
mov
mov
xchg
push
leave
scas
repz
jle
mov
push
mov
outsb
pop
arpl
test
jae
mov
and
mov
cmp
sti
xchg
pop
cmpsb
push
mov
and
fmuls
mov
xor
leave
rorl
out
mov
into
shll
pusha
inc
rolb
adc
push
jg
and
sbb
sbb
cmpsb
mov
push
push
push
adc
inc
xchg
sub
sub
insl
lret
lods
clc
jne
cmp
shr
push
sti
dec
push
and
out
stc
popf
ljmp
popf
aas
xchg
jl
fcmovne
iret
push
mov
mov
fdivrp
sahf
mov
add
jp
cmpsl
vmovntps
or
icebp
xor
pop
orl
test
inc
in
ficompl
in
xor
fcmovnbe
push
lret
sbb
adc
pusha
js
sbb
pop
jbe
mov
lods
and
cmp
mov
jbe
mov
push
shr
mov
jmp
cwtl
adc
jno
mov
and
jmp
ret
or
enter
ja
add
in
in
xchg
test
aaa
cltd
jge
cmp
push
inc
mov
jmp
add
repz
mov
test
pop
adc
mov
aam
cmpsl
xor
inc
js
sbb
sbb
in
add
lret
inc
cmp
jnp
ja
push
stos
push
decb
xlat
das
gs
and
add
mov
xlat
test
or
pop
aad
adc
and
pop
scas
and
in
rcr
and
sub
pop
insb
cmp
jecxz
andl
loopne
or
notl
repnz
mov
sti
dec
cltd
es
in
add
lds
scas
xor
xchg
xor
inc
stc
sbb
loopne
push
xor
fwait
js
std
mov
fldcw
xchg
dec
lcall
mov
divb
cmp
pop
pop
stos
and
cmpsl
add
push
mov
xchg
xchg
inc
das
push
clc
inc
add
inc
and
insl
imul
xchg
cmpsb
sti
fistpl
test
and
push
or
popf
adcb
jle
arpl
jge
fxch
aas
mov
ficomps
mov
dec
lcall
inc
repnz
xchg
adc
sbb
add
add
icebp
cmc
cmp
dec
dec
in
scas
add
mov
adc
lret
cmp
mov
lret
add
into
jae
or
lret
mov
jge
xchg
rcl
fisubl
jno
push
repz
out
popfw
arpl
lea
fisttpll
or
pop
loop
call
mov
pop
mov
int3
xchg
or
adc
andl
push
jmp
cmp
clc
mov
inc
in
ds
mov
xchg
shl
movsb
cmp
into
dec
mov
dec
xlat
push
cwtl
adc
test
test
movsl
clc
and
sub
gs
adc
ror
sbb
dec
add
lods
adc
sub
cmp
push
mov
adc
out
addb
mov
std
fsubrl
push
repnz
int3
das
push
lahf
xchg
shld
and
mov
jb
xchg
ret
mov
out
gs
sbb
xlat
leave
cmpsb
ffreep
xchg
pop
scas
je
xor
sbb
lret
xchg
ret
cli
jg
js
scas
xor
sti
cli
sbb
fdecstp
stos
cmp
out
xchg
sub
cmp
les
mov
add
pop
inc
mov
cmp
call
pop
fucomip
sbb
in
hlt
out
inc
and
decb
pop
or
divl
les
stos
sub
ljmp
sahf
and
mov
sahf
repnz
dec
std
stos
jle
loop
sarb
fdiv
mov
xchg
ss
add
fcmovbe
or
out
inc
insl
lods
test
xchg
mov
int
pop
jne
lret
stc
push
or
out
jb
inc
sbb
sahf
sbb
mov
dec
cmpsb
mov
pop
and
cmp
add
loop
iret
mov
xchg
jns
shrb
out
mov
xor
out
pmullw
mov
pop
push
and
pop
lods
pop
cmp
std
and
sbb
xor
xchg
adc
mov
lret
jo
add
cld
xor
pop
pusha
xchg
jle
xchg
and
mov
enter
mov
ss
enter
mov
lea
pop
mov
push
sbb
cmpsl
mov
pop
ljmp
dec
xchg
mov
sarl
fucomip
cmp
push
scas
fsubl
es
popa
mov
cli
sub
cs
add
jbe
pop
arpl
jl
rclb
sbb
inc
inc
les
cmp
mov
sahf
lret
pop
sub
adc
push
orb
xchg
pop
clc
inc
jle
addr16
sti
mov
repnz
sub
rcrl
push
inc
mov
repz
outsb
stc
adc
out
fs
clc
jnp
push
adc
fildl
jbe
inc
test
mov
pop
pop
sbb
test
push
loope
ss
filds
add
pop
dec
xchg
add
sti
cs
popa
push
outsl
dec
jl
fistpl
push
cwtl
pop
and
lods
into
mov
pop
rcrb
add
mov
test
push
xchg
jo
push
add
pop
mov
movsb
addl
mov
jp
fistps
repz
cmpsl
dec
int
mov
pushf
shl
xor
imul
stos
cmp
insb
pop
popa
jns
test
and
jno
push
add
scas
call
mov
loopne
jg
das
cli
sub
xchg
inc
pop
jnp
cmpsb
in
push
movsb
cld
add
cltd
mov
fists
lock
loop
ret
jns
ror
std
lret
pop
sarb
add
out
hlt
aam
pop
enter
addr16
bound
pop
je
pushf
lock
in
inc
cmp
pop
mov
inc
repz
xor
push
sub
test
xchg
adc
jae
addl
pop
and
add
mov
cmc
loope
and
loope
sbb
je
mov
icebp
or
cli
cmp
popf
fstp
fildll
push
shrl
dec
aam
lods
push
cmp
inc
ret
mov
mov
xor
add
sub
fbstp
cmpsb
adc
sti
lods
jnp
mov
sbbl
rep
int
adc
subl
dec
inc
dec
out
xchg
sub
pop
mov
sub
add
popa
xchg
xor
pop
mov
int
out
dec
mov
xchg
jecxz
scas
xor
call
test
add
adc
or
push
adcb
fucom
loopne
push
sub
in
sti
stc
jns
loope
mov
sbb
jge
pusha
mov
add
jb
add
js
test
call
and
mov
dec
mov
push
jb
lcall
dec
dec
mov
jns
insb
icebp
xor
dec
push
xor
mov
cld
das
pop
testl
cmp
fnstenv
daa
popf
xor
adc
mov
out
cli
pop
or
imul
mov
shll
out
sub
shlb
cmp
push
jge
ret
mov
pop
test
fdivr
xorl
push
dec
addr16
out
into
jbe
ljmp
clc
xlat
push
leave
add
gs
and
mov
mov
xchg
sbb
and
xchg
dec
cld
dec
test
imul
loop
loop
sarb
cmc
dec
in
dec
flds
mov
ret
cld
inc
or
scas
push
mov
lret
sub
jb
leave
xlat
dec
int
push
rclb
sbb
xor
scas
fsubl
xor
lea
out
mov
ret
xchg
xor
fs
stos
jne
in
pop
adc
cmpsl
xchg
loop
cld
xchg
fst
sub
sbb
sbb
movsl
cltd
in
add
add
cmp
mov
jns
stc
or
mov
clc
out
mov
cmp
lods
mov
lret
xor
out
pop
inc
xchg
adc
addr16
adc
lds
repnz
cmp
movsb
mov
es
xlat
xchg
popa
mov
call
push
lret
aad
repnz
dec
mov
testl
ja
sbb
insb
in
testl
push
and
sbb
ret
imul
test
testl
inc
pop
sbb
mov
inc
push
push
pop
in
fcom
cwtl
mov
js,pt
pop
lds
mov
mov
lret
rcrl
inc
lcall
dec
fwait
cmp
pop
xor
jg
jo
sub
mov
push
jnp
rclb
clc
jl
dec
sub
int
stos
cmpl
shl
inc
cltd
iret
cmp
lock
mov
stc
inc
leave
imul
add
inc
or
inc
or
mov
jecxz
inc
imulb
loopne
sub
pop
imul
mov
mov
push
cmp
mull
inc
xchg
out
in
dec
into
adc
mov
fistl
mov
and
or
sub
mov
jne
mov
mov
sbb
call
dec
push
cmp
test
aas
mov
imul
js
fdivrl
jnp
fwait
sub
dec
cmp
pop
inc
gs
xchg
out
arpl
xchg
push
push
es
ss
cmpsb
and
xchg
fsubl
cmc
cmpsb
sub
popl
jne
jo
jnp
sbb
rcl
cli
add
nop
add
out
rcrb
pushf
push
or
sarb
inc
and
mov
push
lret
repnz
lock
jge
pop
in
cmp
push
fmull
pop
jno
bound
add
mov
or
test
and
inc
dec
lret
sti
fs
repz
inc
jae
mov
sahf
loope
pop
pusha
cmpsb
pop
inc
rcrl
xchg
jo
inc
mov
ja
rclb
inc
adc
jno
movb
enter
lds
lods
mov
outsb
pusha
jle
or
push
sub
test
mov
push
aam
mov
test
dec
dec
icebp
jge
pop
pop
mov
cmpsl
pop
mov
or
cld
and
dec
ret
lods
jp
fimull
subl
into
and
loope
loop
jle
in
in
in
insl
inc
adc
mov
jns
fcomps
lcall
pop
bound
inc
push
jge
jb
nop
mov
jnp
cmp
aaa
and
sbb
roll
dec
ret
mov
inc
sbb
cli
lret
je
icebp
jl
and
jne
es
cmpsb
mov
cli
sub
add
nop
add
repnz
iret
inc
sbb
hlt
mov
push
jge
lret
ljmp
and
in
jmp
lds
sahf
fwait
mov
pop
nop
cmp
cmp
std
sbb
xchg
mov
fiaddl
push
xlat
cmp
mov
xchg
push
adc
or
sahf
jge
sbb
cmp
dec
xor
imul
jns
ret
cmp
sub
adc
ret
pop
mov
inc
mov
pop
aad
sub
das
dec
xchg
pop
jecxz
fcmovnb
call
in
push
inc
out
or
xchg
cmpsb
push
aad
dec
inc
and
mov
cmp
xor
std
mov
xor
je
sti
sti
dec
mov
xchg
cmp
dec
lds
pop
pop
rcrl
jp
and
cmpsl
ds
push
fcmovnbe
xchg
or
hlt
nop
test
scas
mov
jp
lret
mov
push
inc
fstp
jecxz
shr
ret
xchg
int3
jno
mov
clc
mov
fidivrl
aad
bound
add
cmc
inc
pop
stc
out
add
xor
adc
inc
in
aad
jmp
movsl
lods
push
dec
dec
xor
movsb
pop
xchg
call
xchg
mov
cwtl
int
test
mov
push
xor
or
mov
push
cmpsl
adc
mov
into
pop
cmp
xchg
mov
leave
push
jbe
jl
jno
imul
push
or
push
or
mov
mov
xor
jns
add
xor
xchg
jae
loopne
mov
cmp
mov
lds
cmpsl
ljmp
pop
mov
imul
lds
mov
sub
inc
popf
pop
cld
push
inc
ljmp
dec
xor
add
les
xchg
mov
cltd
les
je
pop
mov
lds
add
insb
cli
das
sub
dec
xchg
cmp
add
adc
test
mov
mov
sbb
sbb
ss
fnstcw
test
cltd
mov
inc
cld
stos
jl
adc
or
rcr
or
sbb
push
addb
iret
call
jle
cmpsb
pop
mov
in
and
imul
into
aam
mov
subl
cmp
sub
dec
daa
or
cmp
pop
movsl
lahf
dec
xchg
xor
ss
lock
and
vfrczps
in
les
jbe
loope
jno
push
out
add
daa
jo
mov
xor
xchg
sub
out
jo
dec
pop
and
push
in
mov
xchg
add
cltd
ss
lret
lock
jge
testb
jmp
lahf
clc
inc
sbb
or
loop
fistl
and
jp
add
in
sub
mov
mov
pop
inc
add
mov
dec
les
sub
leave
cmp
std
xlat
pusha
stos
xchg
pop
out
jmp
dec
test
sarb
iret
inc
mov
cmc
jo
mov
movsb
sbb
loop
xchg
addb
add
cmc
cwtl
loope
aam
jnp
add
mov
mov
mov
cwtl
outsb
int3
shlb
and
mov
jne
add
jge
pop
inc
or
jle
mulb
imul
ja
mov
or
mov
cmp
aad
jl
mov
cld
or
ljmp
fistpl
icebp
xchg
jb
pop
leave
or
mov
mov
sbbl
jo
mov
sbb
xor
loopne
add
cmpl
ljmp
or
mov
push
mov
int
jae
mov
or
cmp
mov
cli
adc
ds
jnp
nop
popa
cmc
xorb
sub
ja
es
rorb
jl
cmp
testb
inc
adc
sub
shrl
fwait
outsb
int3
pop
repnz
mov
out
cld
push
add
out
cmpsb
inc
das
movsl
lock
in
jb
cmpsb
nop
xlat
xchg
jg
or
movsb
pop
out
hlt
sub
test
stos
je
cmp
data16
adc
jnp
ds
mov
sbbb
das
sahf
cmp
aad
outsl
mov
jns
int3
sbb
mov
add
mov
cmp
sbb
lock
movsb
mov
arpl
cwtl
jb
mov
cwtl
mov
iret
lock
xor
jae
js
in
pop
xor
orb
test
jne
test
popa
fs
push
sti
arpl
sub
lods
lock
movsb
leave
adc
xchg
dec
adc
or
sub
mov
dec
paddq
fisttps
xor
mov
mov
sub
inc
add
insb
mov
mov
mov
xchg
xchg
mov
push
pop
cmc
movb
lods
jae
mov
cmc
or
inc
sarb
cld
insb
in
pushf
and
mov
stc
dec
pop
pop
mov
inc
lods
cli
pop
cmp
js
dec
pcmpeqb
icebp
sub
fdivl
pusha
sbb
js
add
ror
out
gs
arpl
xor
stos
daa
stos
xlat
ja
mov
inc
daa
jns
fidivl
sbb
mov
lahf
out
mov
jns
mov
popf
pop
xchg
sub
mov
jb
in
and
and
fdivs
aaa
in
sbb
pushl
sub
mov
jb
movsl
inc
dec
cli
fidivrs
xchg
cmp
aad
jp
jecxz
adc
sbb
je
xchg
pop
jnp
sbb
int3
xchg
ret
les
dec
sbb
cli
test
dec
jle
pop
sbb
xchg
loop
jle
push
stos
int
pop
loope,pt
pop
push
pop
cmc
inc
outsb
lds
mov
or
pop
aaa
fdivrs
roll
jae
fdivp
test
mov
xchg
mov
ss
ss
imul
pop
add
imul
cmc
inc
inc
and
lock
inc
xchg
xchg
in
ljmp
mov
inc
cli
popa
xchg
push
jne
xor
shll
sub
push
xchg
pushf
pushf
pop
scas
pop
or
jmp
and
jge
and
cltd
shll
xchg
add
push
ficompl
shlb
mov
bound
enter
adc
sbb
cltd
loope
xchg
aas
mov
ljmp
pushf
lret
mov
mov
loopne
jl
pusha
add
test
clc
popa
sub
dec
jnp
js
pop
imul
sbbb
xor
in
mov
sti
adc
mov
scas
adc
xorb
fnstenv
xchg
shl
inc
sub
stos
test
lret
ja
mov
ficompl
xor
addb
scas
movsb
sbb
adc
fildl
inc
insl
sahf
xor
add
pop
jp
adc
out
inc
lods
loopne
cltd
ljmp
leave
mov
jmp
xchg
mov
fldl
outsl
ja
sti
call
std
rcr
mov
outsb
daa
insl
jecxz
rcll
int3
lea
mov
test
ret
test
dec
dec
filds
cmpsl
push
push
inc
clc
repz
mov
leave
ret
xor
xor
in
mov
jg
xor
pusha
inc
jno
cld
mov
test
into
jbe
push
mov
cli
fisttpl
mov
int3
push
mov
inc
imul
mov
dec
nop
out
xor
mov
ljmp
scas
movsb
cltd
icebp
or
faddp
mov
fs
adc
push
rcr
adc
xor
xchg
pop
or
test
stos
arpl
push
ss
divl
adc
add
pop
out
add
shl
test
call
adc
cmc
xchg
xor
mov
mov
cmpsb
rclb
inc
sub
jno
lds
add
add
xchg
and
jbe
nop
sub
loope
pushf
arpl
and
fstpl
push
aaa
mov
je
sbb
sbb
jp
test
or
mov
sti
mov
sbb
mov
jno
in
xchg
pop
fwait
xor
bound
dec
repz
inc
lahf
dec
cmp
add
sahf
das
rcrl
pop
adc
mov
notl
mov
icebp
mov
dec
sti
adc
xor
jae
lret
int
add
jbe
lods
pushf
mov
cmp
cs
inc
loope
xor
push
pop
enter
pop
dec
push
hlt
unpckhps
test
jbe
negl
inc
add
sbb
push
or
adc
ds
pop
push
xor
jnp
aaa
rcrl
adc
mov
xchg
insb
lods
jno
mov
rclb
daa
dec
jno
or
dec
test
adc
imul
subb
lods
adcl
lock
divb
sbb
call
push
xlat
add
cmp
or
ss
add
nop
in
dec
mov
xchg
dec
push
pop
ret
addb
pop
sbb
xchg
popl
fnstsw
adc
or
ljmp
repnz
xchg
xchg
pop
bound
push
bnd
push
addr16
outsl
inc
mov
into
sbb
fdivl
jb
jb
mov
es
mov
dec
inc
xor
sub
repnz
push
jg
dec
popf
adc
mov
out
iret
pop
push
pop
fiaddl
jnp
test
hlt
jne
iret
scas
popl
std
hlt
lret
aad
outsl
popa
lea
mov
add
outsb
jo
cmp
xor
sbb
or
mov
popf
pop
shll
pop
add
mov
aaa
aad
shll
stc
xor
ss
xchg
lahf
mov
repnz
outsl
mov
cmp
add
pop
and
mov
std
jmp
push
cmp
cld
fildll
js
mov
mov
mov
cmp
inc
leave
cs
cmpsl
insb
fwait
int3
int
jo
and
adc
loop
jns
or
stos
pop
dec
push
loope
or
cmp
adc
movsb
adc
dec
out
mov
fbld
or
push
or
shl
sbb
dec
and
ljmp
xlat
sub
or
mov
xor
js
call
mov
adc
sbbl
jmp
sbb
sub
mov
roll
scas
push
jns
push
mulb
push
pop
mov
pop
adc
imul
push
imul
das
test
adc
xchg
adc
std
pop
movsl
xchg
cmp
lods
mov
repz
inc
cmp
mov
in
lods
sub
cmp
sbb
cmp
lahf
mov
stos
scas
mov
enter
mov
out
sub
add
pop
mov
mov
sti
hlt
out
ficomps
lds
push
jge
adc
dec
lock
mov
ret
sub
xchg
xlat
push
in
add
shrl
cmc
insl
dec
es
fldt
cmp
xor
in
xchg
leave
jo
test
fcompl
shl
inc
cwtl
mov
cmpsb
pusha
jp
ss
in
bound
pop
push
dec
mov
cmp
dec
sub
outsb
jmp
fs
fsubs
or
gs
inc
add
cmp
fdiv
mov
and
push
inc
cwtl
aas
and
xor
cli
dec
mov
add
aad
insl
and
push
jo
or
inc
xchg
sbb
fnstenv
mov
js
xchg
add
enter
dec
pop
xchg
inc
xor
and
ret
mov
sbb
fcoml
call
testb
mov
stos
loop
sarl
out
sub
cmc
cmpsl
pop
sub
dec
inc
addl
pop
adc
sbb
add
add
out
shrl
cmp
push
pushf
jmp
cmp
sbb
repz
push
ret
gs
outsl
jl
imul
fimull
inc
nop
addr16
aam
mov
imul
popf
jl
icebp
into
insl
hlt
repnz
aas
setg
aas
pop
xchg
xchg
mov
mov
mov
roll
add
cmp
sbb
ds
or
inc
sbb
fsubrp
sti
sbb
ds
rorb
clc
lahf
mov
push
leave
fwait
dec
popa
or
arpl
leave
push
aas
mov
in
cld
fs
push
jmp
cmpsl
mov
xchg
dec
mov
push
out
mov
xchg
insb
stos
inc
ret
jns
adc
sbb
daa
dec
stos
lret
pop
rorl
enter
xchg
jbe
xchg
cmp
inc
les
adc
push
mov
pop
push
imul
fistps
xchg
or
stos
and
lds
addr16
jp
adcl
mov
insl
insb
scas
fwait
imul
lock
jbe
stos
sbb
xor
incl
pop
sub
push
inc
cmp
push
and
and
sti
enter
and
jns
sbb
imul
addr16
repnz
fbstp
add
int
ljmp
push
fs
rol
push
pop
mov
and
sbb
xor
sbb
jl
fmull
adc
in
jae
pop
add
cld
fsubrs
push
in
out
xor
or
ret
mov
lret
mov
and
imul
mov
mov
dec
mov
cltd
dec
ficompl
les
pop
dec
adc
xchg
lods
sbb
pop
jb
mov
sbb
jle
jl
mov
xchg
call
fsub
cmp
popa
xchg
jp
inc
mov
pusha
sbb
orl
scas
ret
in
and
imul
rclb
scas
enter
cmpsl
jmp
stc
aaa
xor
jmp
add
je
div
rorl
cmpsb
dec
test
xchg
hlt
sbb
test
lock
imul
mov
xor
fiadds
int
pop
popa
ja
xchg
inc
sbb
and
add
aad
in
sti
fdivs
or
out
movsb
imul
mov
mov
adc
out
adc
scas
jge
push
sub
adc
jg
push
cmc
into
sbb
xor
cmp
test
fsub
mov
mov
sbb
hlt
int3
mov
xchg
cli
adc
xchg
mov
pop
mov
mov
iret
outsl
sub
cmpsl
insb
loopne
pusha
adc
scas
xchg
iret
lods
cmp
test
imul
xlat
jmp
cmpsb
adc
insb
push
test
adcl
fdivs
daa
dec
and
cs
cwtl
jp
adc
cmp
das
std
jg
hlt
repnz
aas
rcrb
mov
fiaddl
xor
fimull
ljmp
mov
fst
popa
aam
jno
push
aad
ret
pop
xchg
daa
jle
mov
sbb
in
xchg
mov
fs
iret
iret
sbb
lret
icebp
outsl
shlb
iret
or
push
out
cld
mov
leave
mov
push
int3
out
add
popa
dec
jge
inc
jns
add
inc
sub
sbb
repz
add
jmp
out
outsl
cmp
push
hlt
pop
add
imul
cmp
out
rclb
loope
fmuls
fistpl
cwtl
ljmp
in
push
adc
dec
dec
inc
and
ljmp
pop
xchg
jg
xchg
xchg
loope
imul
fwait
mov
cmpsb
in
mov
dec
lods
out
lods
add
fcompl
sub
cmpsl
jp
push
jo
stc
sbb
clc
sub
stos
ds
pop
inc
xor
and
imul
dec
nop
mov
mov
subb
out
push
lret
add
fs
mov
in
jo
mov
sbb
or
inc
in
stos
sub
mov
subb
cli
cmpsb
movsl
sti
add
and
inc
nop
es
sub
mov
outsb
arpl
xchg
clc
cmp
cmc
in
add
mov
ret
lea
int3
stos
dec
fadd
mov
mov
cmc
fmull
aas
sub
shll
push
js
clc
pop
xchg
xor
lods
jg
mov
or
add
cmp
fadd
mov
insl
popa
imul
lcall
mov
and
inc
in
es
movsl
mov
inc
mov
daa
push
jbe
inc
loop
push
and
and
mov
loop
fwait
enter
mov
inc
inc
daa
mov
xchg
jne
push
pop
pop
xor
inc
cmpsb
xor
xor
aam
and
mov
inc
cs
cmp
loope
cmp
movl
lcall
in
xor
test
es
pop
pop
gs
adc
lahf
out
pop
ljmp
fcomi
test
cmpsl
scas
lcall
sub
lods
lahf
into
movsb
xorb
insl
add
loope
dec
xor
xor
mov
mov
jge
cs
inc
faddl
shl
adc
add
mov
shr
cmc
or
notb
dec
xchg
jne
sub
xor
sar
sahf
cmpl
or
mov
test
mov
push
jmp
shlb
xchg
dec
daa
pop
repnz
mov
sub
jmp
test
loopne
testl
leave
test
and
mov
mov
and
xor
cs
mov
mov
out
jmp
xchg
lods
or
xor
sahf
repz
loop
jmp
jne
adc
push
ss
cmp
cli
inc
outsb
fcoml
inc
xor
or
mov
xchg
shlb
mov
aas
ret
ja
fbld
jge
jmp
xor
mov
jbe
shlb
xchg
out
dec
pop
or
std
and
loope
mov
xlat
sub
popa
and
jle
lahf
sarb
dec
add
sbb
mov
les
cmpsb
pop
test
mov
sti
insb
and
sub
scas
or
roll
loop
pop
inc
lods
mov
ds
popa
mov
lds
jns
dec
mov
mov
and
xchg
xchg
divb
jb
das
mov
dec
ret
cwtl
pop
xorl
add
sbbl
jnp
mov
ja
sub
mov
xchg
sub
sti
out
and
dec
test
imul
loopne
orb
sub
out
movsl
repnz
sbb
test
ss
loop
push
mov
addr16
and
stos
adc
iret
cmc
cmp
or
sub
sbbl
int3
inc
loope
mov
leave
cmp
scas
movsb
push
andb
mov
sub
in
push
mov
mov
ret
push
test
or
add
pop
fisubs
pop
push
push
fildl
push
das
je
cli
mov
sti
rcr
movsl
hlt
stos
xrelease
dec
xor
lods
xchg
push
stos
ljmp
loopne
jmp
cmc
roll
mov
shl
aaa
mov
inc
cmp
mov
lahf
mov
adc
add
inc
add
push
dec
cmp
fdiv
fnsave
or
dec
pop
add
pushf
lcall
push
adc
add
sub
lea
add
ss
cmpsl
scas
mov
push
insl
cmp
sbb
sub
xchg
movsb
and
movsb
push
cli
sarb
pushf
or
vpmadcsswd
iret
je
out
and
andl
add
test
clc
sbb
test
and
insb
rcrb
xor
or
testl
add
imul
int3
test
ret
into
divb
jns
ss
repnz
rorb
push
inc
fisubl
icebp
inc
icebp
jno
and
mov
mov
or
mull
shl
adc
cmp
pop
push
cmc
lea
push
xchg
inc
push
mov
leave
mov
lds
xchg
fisubs
jns
xchg
rorb
cmp
nop
mov
arpl
jno
orl
jb
lods
shr
dec
enter
cmp
mov
icebp
xor
in
fidivrs
xchg
imul
test
cmp
dec
call
test
rcrl
ror
lea
pop
pop
and
or
push
push
iret
and
jp
xchg
fnstcw
mov
fisubs
aas
or
loope
lods
sbb
andb
sub
test
in
fnstenv
or
mov
testb
shlb
pop
in
xchg
or
test
lds
mov
std
sub
rorl
out
push
jl
repz
sub
js
mov
jg
push
sbb
movb
stos
fisubrs
sbb
leave
xor
out
les
fcoms
sub
loope
jb
fs
bound
loopne
test
inc
lods
jo
in
mov
aam
dec
jno
fcoml
jecxz
mov
mov
mov
sahf
sahf
test
dec
and
in
pop
testb
inc
test
ljmp
pop
sbb
adc
fistpl
dec
jne
xchg
inc
sbb
mov
ss
mov
fisttpll
ljmp
dec
dec
mov
add
jbe
arpl
psrlw
clc
sbbb
pop
imul
xchg
popa
test
add
pop
xor
aam
test
or
into
xchg
cmpsb
push
mov
pop
mov
mov
adcl
lods
pop
inc
jb
out
push
mov
mov
int
loop
mov
lea
pop
ss
repz
aas
imul
sbb
sub
shlb
or
ret
add
xchg
in
mov
dec
sub
sub
shrl
cmpsb
in
lock
test
and
lcall
jbe
xchg
adc
fstps
add
and
sarb
mov
push
insb
cmovs
js
or
lds
test
add
inc
cmp
popf
jge
or
arpl
push
dec
push
shl
ss
mov
and
popf
js
add
mov
fcompl
inc
lcall
mov
rcll
nop
push
std
repz
in
push
push
or
dec
out
scas
inc
or
inc
out
aas
je
popa
or
insl
mov
outsl
out
xchg
lahf
scas
jb
push
push
push
lret
jne
pop
scas
inc
shll
pop
pusha
mov
std
pop
jmp
movb
push
xchg
gs
rolb
jo
cmp
push
jmp
mov
loop
xor
inc
add
in
xchg
pop
jns
sbb
mov
rcr
lret
rolb
adc
xor
cmpsl
push
mov
jne
xchg
and
clc
mov
mov
loop
push
mov
arpl
orb
adc
jnp
out
in
cmp
jmp
or
inc
mov
push
jo
fists
pusha
icebp
popa
push
jp
xor
xchg
push
rorl
cmp
xor
push
int3
dec
fidivs
addr16
push
xor
or
mov
push
inc
inc
add
insb
add
mov
mov
push
nop
scas
lods
dec
pop
jno
jae
push
out
and
push
in
add
jno
push
out
je
into
in
adc
hlt
fldt
sbb
loop
xchg
pop
pusha
or
jmp
add
loopne
ljmp
in
add
add
out
jae
test
sub
and
push
or
mov
or
pop
xor
cmp
mov
cmc
adc
mov
lods
mov
stos
add
fsts
mov
scas
aam
push
jns
sbb
mov
xchg
adc
stc
lahf
inc
jne
jmp
imul
cmpsb
int
mov
mov
or
jmp
jae
mov
adc
mov
add
or
sbb
cmp
clc
std
stc
inc
dec
cltd
notl
jecxz
insl
mov
loop
in
mov
mov
mov
inc
cltd
mov
sbb
fisttpl
cmpsl
jnp
fcompl
out
imul
testl
and
jmp
xchg
int
sbb
dec
jle
jle
mov
adc
aam
in
scas
fimull
stc
xchg
xor
or
inc
inc
sub
sbb
push
dec
pop
ror
dec
fstpt
call
cltd
sbb
dec
dec
sti
and
adc
mov
sub
imul
inc
add
pop
cli
loopne
icebp
cmp
insb
sub
call
ljmp
xor
ja
fwait
pop
rcll
in
jge
mov
leave
and
push
mov
loope
loope
cs
test
mov
les
fs
nop
in
pop
jae
mov
jns
push
fcoms
and
sub
lcall
imul
fisttpll
adc
icebp
ss
sub
push
and
mov
mov
clc
ss
cmp
je
imul
lds
add
rcrb
pop
cmc
ret
enter
cld
scas
cltd
lcall
cmc
mov
mov
in
das
sbb
inc
push
adc
pusha
mov
and
loop
xchg
adc
jecxz
and
inc
mov
lods
fstl
je
xchg
test
mov
pop
fcmovu
test
pop
shlb
int3
and
xor
and
mov
lock
stos
lods
pop
scas
and
sbb
sahf
sbb
adc
imul
and
test
stos
and
pop
jne
jb
adc
int3
mov
adc
sbb
adc
push
mov
mov
mov
dec
adc
sbb
or
arpl
sub
cld
push
sahf
xchg
mov
das
outsb
imul
popa
repnz
jbe
mov
dec
lds
push
mov
roll
adc
fs
insb
test
lcall
out
jbe
add
jnp
jne
outsl
fnstsw
push
flds
sub
inc
cmp
jnp
scas
xchg
sbb
sbb
andl
mov
inc
mov
in
xor
lods
int3
test
cmc
ljmp
insl
dec
enter
mov
sbb
testl
idivl
test
mov
sbb
imul
pop
adc
les
subb
pop
jle
adc
lods
add
rorb
sbb
movsl
testb
fadds
popa
out
shll
add
xor
sub
cmp
mov
ror
inc
push
pushf
aad
jp
sahf
lret
popf
sbb
xchg
sub
stos
test
dec
in
dec
fldl
subl
and
pop
pusha
jmp
inc
and
mov
pop
es
cld
out
mov
jmp
test
test
js
xor
mov
add
lret
dec
pop
lret
push
jo
and
int3
aaa
adc
std
in
sub
jo
fdivl
imul
push
jbe
jge
cmpsb
icebp
sub
jb
and
sub
sti
imul
pop
not
stos
jp
sub
aas
lcall
adcb
xor
adc
stc
jge
outsl
fs
repz
jg
adc
ja
clc
rcl
jl
xchg
add
out
in
pop
add
sub
rorl
iret
cmp
cmp
int
sahf
xor
pop
lea
cli
mov
jne
xor
xchg
mov
hlt
stos
clc
xor
popf
jl
or
adc
mov
sbb
inc
idivl
mov
inc
xchg
ss
push
imul
sbb
adc
xchg
addr16
insb
sbb
cmpl
frstor
test
es
mov
inc
xor
aas
dec
mov
arpl
jno
in
dec
idivb
cmp
int3
add
add
mov
mov
es
xor
and
cmp
jno,pt
jnp
lods
push
xchg
insl
jl
ja
mov
add
adc
mov
test
mov
cmp
cmpsl
cltd
insl
testl
orl
cld
mov
dec
push
popf
pop
loopne
xorb
push
xchg
cmpsb
not
pop
pop
mov
cmpsl
mov
dec
dec
insl
dec
pop
adc
adc
cmp
es
ret
loope
inc
xchg
pop
sub
jge
cld
add
inc
shlb
in
popf
call
fmul
inc
out
dec
aas
cmpsb
xchg
inc
jae
pop
dec
or
mov
dec
cltd
fbstp
cmp
and
and
aad
or
push
daa
sbbl
inc
jecxz
add
outsb
xchg
addr16
xchg
add
clc
dec
rolb
imul
fistpll
lret
cltd
repz
push
dec
mov
es
outsl
push
mov
sbb
and
cwtl
xor
loopne
fidivrl
int3
add
mov
pop
inc
jge
test
adc
sbb
pusha
scas
push
mov
scas
loop
mov
jnp
adc
jl
xor
mov
cmp
push
and
jae
inc
mov
mov
idivl
push
aas
lods
pop
mov
pop
sahf
test
push
and
cli
xor
shll
clc
cmp
cmp
lods
sub
pop
mov
ljmp
jmp
imul
in
sub
push
insl
mov
xor
mov
sub
cmp
fimull
adc
lret
or
cmpsb
mov
in
xchg
aam
sbb
pop
bound
lahf
mov
fs
or
jno
dec
xor
cld
xchg
clc
jae
push
push
sbb
inc
lds
filds
inc
mov
push
mov
sti
neg
cmp
mov
add
gs
sbb
xor
cmp
inc
call
aam
dec
popf
sti
stc
or
push
or
ds
aam
sub
rorl
in
and
jmp
xor
push
cwtl
inc
mov
jle
je
and
push
jge
pop
jae
es
push
mov
jae
sar
sbb
pusha
mov
std
sbb
cs
inc
roll
into
icebp
fsub
sub
mov
mov
or
aad
popf
mov
inc
enter
sahf
push
in
xor
cmp
pop
sub
inc
fnstenv
sbb
sbb
es
xor
cmpps
js
mov
test
mov
rolb
cs
cmp
and
cmpsb
lret
jp
sbb
mov
les
jp
xchg
pop
sbb
push
pop
dec
mov
push
popa
mov
sarb
add
aam
out
ret
sbb
xor
mov
loopne
or
rcll
cli
jae
lods
xor
aas
jle
sub
aad
repnz
movsb
shl
loopne
pusha
xor
mov
jno
lahf
std
pop
les
xchg
add
daa
xor
xchg
xchg
mov
mov
out
mov
pop
fwait
xchg
fxch
sbb
inc
in
adc
lea
and
subb
push
xor
add
mov
jns
mov
xchg
arpl
adc
pop
fbld
shl
and
je
push
jmp
stos
pop
sti
mov
jg
xchg
rclb
push
clc
cltd
cwtl
lock
lock
aaa
xchg
dec
lods
dec
pop
xor
cmp
sub
mov
test
pushf
addr16
push
rclb
psraw
xchg
dec
pop
mov
rolb
out
subb
jo
dec
inc
sub
sar
cmp
adc
out
push
andl
das
leave
sbb
jg
add
pop
pop
inc
push
add
pushf
add
mov
jnp,pn
adc
pop
push
inc
jo
cli
hlt
xchg
out
push
mov
repnz
enter
out
adc
mov
loopne
aas
sbb
sub
mov
pushf
lods
xor
mov
xchg
inc
call
movb
fcom
mov
gs
jae
inc
out
js
repnz
negb
and
xchg
mov
sub
sbb
fistpll
sbb
shlb
aad
lods
cmp
pop
or
in
jge
ds
hlt
sub
cmovb
adc
add
jbe
int
mov
inc
outsb
mov
aam
lods
cli
mov
or
lea
pop
jns
sub
adc
sub
in
insl
stos
scas
cmp
or
mov
dec
dec
inc
add
mov
cs
call
aad
jns
adc
mov
inc
aaa
push
je
sbb
jge
incb
mov
cwtl
inc
add
sbbl
scas
jg
mov
or
je
mov
pop
je
sbb
jb
inc
idivl
les
jecxz
cli
inc
cld
sahf
push
mov
enter
mov
jp
je
insl
test
mov
subb
roll
mov
rcrl
pop
out
jecxz
test
push
push
mov
cmp
mov
push
jmp
mov
lock
mov
cmp
pusha
pushf
mov
add
paddw
pop
mov
pop
mov
mov
sti
pusha
sub
cmc
or
or
les
sbb
jbe,pt
testl
addr16
or
cwtl
mov
jge
mov
out
mov
inc
push
hlt
mov
stos
mov
sbb
jns
pop
inc
daa
mov
int3
pop
decl
inc
insl
loop
push
jae
lods
ljmp
pop
adc
arpl
ds
sbbl
dec
push
stc
dec
cs
gs
pushf
add
jp
mov
sbb
dec
sub
stos
sahf
cmpb
jp
mov
cmp
loop
cs
cli
jae
jne
clc
xorl
mov
test
es
jns
xor
mov
jnp
fldcw
fmuls
rorl
jge
xchg
cmp
and
xor
icebp
pop
ret
jae
inc
loopne
lds
push
push
add
int
rcrb
lock
xlat
jge
aas
mov
pop
cmp
pushf
test
push
pop
and
dec
or
xchg
add
or
and
repnz
lds
les
sub
sarl
inc
pop
mov
popa
dec
jecxz
sbb
movsl
mov
push
pop
dec
test
testl
or
loope
pop
mov
jp
in
adc
jbe
loopne
nop
mov
repnz
inc
dec
imul
lahf
test
cmp
sbb
mov
mov
xor
lea
scas
adc
cmp
fwait
popf
or
fmull
into
test
push
or
icebp
mov
add
mov
xchg
fnstcw
xchg
movsb
hlt
inc
mov
sub
imul
sahf
loope
and
xlat
and
stos
jb
pop
or
lods
cmp
push
adc
pop
call
jg
sbbb
mov
and
or
mov
pushf
test
out
push
ljmp
vmaskmovdqu
shl
dec
inc
add
test
imul
out
lods
aas
dec
adc
in
and
ret
add
repnz
mov
mov
or
jne
adc
adc
insl
adc
mov
jl
into
sti
addr16
out
inc
mov
or
mov
cmp
arpl
or
mov
mov
das
jp
jb
mov
into
or
dec
pop
mov
sbb
test
cmpsl
push
nop
arpl
or
addr16
int
sub
clc
pop
ret
repnz
or
aam
adc
dec
mov
mov
imul
idiv
in
adc
sub
push
xchg
aaa
lahf
push
and
imul
jg
in
cmp
sahf
aad
imul
xlat
lods
adc
rcr
xchg
cmp
mov
sub
sbb
shlb
sbb
outsb
pop
movsl
stos
xchg
xor
push
mov
lea
ljmp
pop
mov
sub
or
inc
mov
fwait
or
arpl
and
jb
std
cmp
loop
mov
or
test
daa
push
testl
or
mov
movl
call
and
mov
mov
jmp
xchg
add
jecxz
loop
fildll
push
xor
stc
jl
sbb
mov
cwtl
fisubrs
mov
inc
adc
in
mov
popf
int
mov
mov
test
aas
leave
call
push
xchg
lods
mov
jbe
xchg
in
cltd
int
shrl
fwait
pop
mov
pusha
andb
lahf
or
fadd
and
test
pop
inc
sbb
push
add
xchg
xor
fnstcw
xchg
adc
push
sbb
jnp
mov
pushf
das
adc
cld
xchg
adc
ret
inc
mov
or
push
into
or
mov
fildl
shrb
xchg
out
xchg
xchg
xchg
and
mov
sub
mov
dec
mov
xor
sbb
sbb
lret
imul
mov
scas
pop
dec
rcrl
lcall
adc
jp
test
pusha
push
inc
jmp
jbe
imul
xchg
test
mov
xor
mov
push
enter
dec
addr16
mov
rcpps
ds
gs
dec
cmc
std
xchg
imul
xor
mov
or
push
push
adc
adc
sub
push
dec
mov
jo
mov
imul
int3
mov
inc
test
mov
in
mov
fildl
and
pop
add
xchg
adc
xchg
test
sbb
insb
jmp
lock
inc
push
add
stos
fs
outsl
lret
lcall
push
insl
das
push
mov
cli
aad
int
sub
notb
adc
loop
mov
or
mov
mov
stc
stos
dec
cmc
out
lds
icebp
xor
xchg
scas
mov
sbb
inc
stc
xor
jl
xor
verr
sbb
add
dec
sub
dec
pushf
inc
ds
imul
jmp
test
pushf
imul
roll
rorb
pop
pushf
inc
fsubl
aas
xor
rolb
cmp
jmp
movsl
cld
cmpsl
fwait
popl
jge
add
xor
or
or
mov
jns
cmp
and
in
lds
sbb
add
das
xlat
repnz
xor
out
hlt
push
test
ljmp
dec
imul
lret
rol
sbb
lret
push
sub
push
cmpsl
lret
out
mov
jnp
adc
int3
cmp
pop
in
cmp
adc
xor
mov
push
pusha
inc
push
pop
addl
ja
fldenv
in
cltd
test
cmpsl
pop
inc
loope
movsl
out
sub
sarl
mov
jo
mov
sub
ljmp
push
dec
sahf
sub
sub
or
bound
lret
pop
push
outsl
xchg
test
out
lret
faddp
je
lea
adc
test
cmp
push
push
xlat
cs
mov
pusha
xor
mov
arpl
stos
push
push
jl
std
in
mov
mov
push
mov
xor
inc
xor
sub
pop
jg
push
scas
in
adc
fdivrl
int3
dec
adc
fistpl
stos
mov
or
insb
scas
mov
inc
movsl
sub
push
les
inc
jg
mov
jno
xchg
test
mov
sahf
push
iret
pcmpeqb
inc
stos
jmp
lret
stos
pop
push
jmp
test
jge
mov
fs
jmp
push
add
adc
repz
bound
inc
mov
shll
sub
orl
cltd
cmp
mov
sbb
insb
sub
shll
fimuls
jno
push
push
subl
popa
jb
in
divl
lahf
sarl
lods
push
js
mov
add
int
icebp
add
movsl
mov
push
pop
js
lods
mov
pop
lret
fbstp
xor
lret
dec
repz
and
mov
pop
shrl
sti
push
in
xchg
andb
subb
out
aam
jle
pop
jl
popf
mov
jg
call
aad
sub
adc
mov
cmpsb
enter
adc
nop
push
lret
mov
pop
jns
adc
jl
pop
adc
mov
pop
xor
xor
xchg
dec
push
or
stos
mov
loopne
in
pop
fdivrs
inc
dec
or
lock
das
sub
adc
or
js
dec
stos
mov
dec
in
mov
popa
popf
dec
fwait
jne
in
loop
inc
mov
mov
inc
pop
sbb
xlat
negl
jge
xor
adc
lds
sub
push
mov
mov
pop
scas
enter
cmp
xor
or
jmp
cmpb
lcall
inc
mov
sub
nop
ret
push
adc
loop
pop
outsl
mov
mov
jl
lcall
mov
lock
push
insl
cmpsl
mov
mov
xchg
mov
outsl
ret
adc
jae
inc
push
in
fucomp
pop
sub
push
pop
sub
lods
add
xchg
add
outsb
std
jno
mov
hlt
xor
mov
cmpsl
or
inc
pop
or
out
push
pusha
sub
lds
push
repz
jo
stos
test
inc
push
sub
fisttpl
sub
and
nop
mov
rcl
aas
pop
das
pop
jle
push
sbb
int
sbb
adc
xor
xchg
xchg
xor
mov
xchg
jnp
pusha
xor
jg
jno
adc
rcll
xor
mov
adc
mov
lcall
popf
pop
fwait
arpl
addr16
lds
inc
sbb
sbb
daa
and
stos
mov
shrb
add
icebp
orl
jne
out
inc
gs
push
outsl
sbb
add
gs
inc
out
adc
outsb
xchg
andb
cmpsl
xor
jae
outsl
fsubs
sbb
imul
std
add
xor
sbb
xchg
imul
mov
mov
pop
xlat
inc
leave
sbb
dec
adc
insl
aaa
movb
ret
pop
movsb
call
jnp
inc
adc
push
out
jp
frstor
lods
or
inc
in
sbb
sbb
sub
jmp
adc
movb
xor
add
cwtl
sar
pop
jo
lods
mov
aam
mov
or
fcmovb
or
adc
and
das
jge
movsl
fistl
or
stc
jle
jbe
cmpsb
jae
jnp
out
dec
mov
cli
mov
insl
inc
sub
ds
pop
aam
das
mov
mov
aaa
add
clc
rorb
mul
and
fs
mov
mov
xor
std
lret
pop
add
mov
dec
and
pushf
sub
or
jge
lret
ss
mov
movsb
scas
mov
jle
sahf
fsubs
cmp
push
inc
xchg
pop
sarl
mov
jne
testb
xchg
mov
add
and
fwait
and
jg
and
mov
out
or
push
movsb
sbb
and
jg
xchg
bound
and
or
sbb
pop
or
xor
faddl
mov
xchg
cmp
mov
in
out
movl
nopl
xchg
pop
push
lds
stos
cmp
jns
mov
adc
adc
pop
inc
int3
sub
lods
and
fxch
cltd
push
inc
ds
dec
imul
into
mov
cltd
lcall
mov
in
addr16
fwait
mov
ja
xchg
mov
push
mov
adc
and
xor
mov
iret
jns
movsl
jno
inc
aas
mov
testl
dec
movb
jns
xchg
add
dec
fistps
xchg
dec
mov
cwtl
shrl
jo
push
mov
or
std
mov
mov
add
add
push
js
cwtl
mov
xchg
push
mov
cmp
es
dec
and
cmp
add
lahf
out
daa
movsb
pop
push
push
and
mov
sub
divb
jp
fisubrl
pop
popf
cmp
sbb
out
cmp
out
xor
xchg
js
add
dec
insb
pop
mov
out
pop
dec
in
sub
test
cmp
idivb
sub
int3
add
sub
or
sbb
shl
or
out
push
int3
repnz
iret
and
pop
rol
in
mov
gs
xchg
dec
mov
popf
call
aas
mov
ljmp
pop
jno
push
roll
adc
cmpsl
in
adc
dec
push
dec
iret
ja
cmp
dec
mov
and
movsl
addr16
imul
lcall
cmp
addl
jmp
add
pop
ljmp
fnstcw
fisubs
lds
sbb
and
sbb
xchg
leave
mov
or
pop
leave
fistpl
cmp
outsl
and
ret
push
in
imul
push
inc
xor
mov
inc
into
sarb
jno
aas
pop
rcrl
mov
lock
int
popf
xor
and
popf
jne
int
fnstcw
push
rcrb
aaa
dec
jae
mov
cs
push
mov
add
je
push
dec
and
in
insb
sbb
jbe
das
xchg
dec
inc
bound
shr
es
sub
leave
sub
xchg
mov
ffree
add
mov
sub
mov
jmp
lods
sub
cmpb
cmpsb
cwtl
clc
clc
add
xchg
sti
pop
inc
leave
pop
inc
jno
js
sbb
mov
cmp
cs
xor
in
lret
fmul
lret
jl
push
frstor
rcl
push
ret
add
add
mov
push
jmp
or
xor
hlt
jmp
sti
aad
cmp
push
out
xchg
iret
dec
aam
dec
bound
sub
pop
mov
or
jo
adc
fcmovnu
and
stos
sahf
xchg
fists
scas
cmpl
rolb
pop
mov
sbb
in
movb
popf
andb
mov
jmp
push
pop
mov
cli
push
shll
ljmp
mov
mov
push
dec
xor
test
mov
inc
xor
mov
mov
arpl
cmpsl
xchg
ss
lcall
cwtl
jns
fincstp
lods
imul
dec
mov
mov
cs
ror
popa
movb
sub
movsb
pop
gs
rorb
xor
and
sbb
outsb
mov
mov
cmpps
adc
mov
inc
call
xor
and
jmp
dec
imul
std
or
adc
jmp
mov
lds
adc
fwait
pop
or
jge
pop
into
sbb
xchg
jecxz
cmp
adc
sbb
daa
xor
test
add
das
fcoml
push
mov
in
mov
jno
test
sbbl
ret
pop
andb
cmp
mov
popa
inc
sbb
xor
jb
loopne
push
ss
cmp
xchg
mov
xorl
fnsave
xor
pop
push
xlat
in
mov
popf
and
jns
add
aaa
in
subb
in
movsl
inc
bound
dec
mov
pop
dec
out
std
jp
ja
test
inc
pop
pop
xchg
insl
jo
or
mov
or
inc
into
sub
fcoms
xor
sti
inc
sub
sarl
cmp
cmc
jecxz
iret
xchg
out
sahf
mov
push
test
push
stc
dec
cmp
ret
test
ds
in
fcoml
dec
mov
mov
outsl
cmp
fwait
or
rorl
jns
loope
jnp
or
push
sub
push
mov
loope
dec
insl
jg
fwait
lret
insl
call
and
shlb
outsb
pop
lahf
mov
data16
dec
and
lods
push
insb
hlt
js
push
jns
lock
dec
pop
rorb
or
imul
and
addl
js
adc
and
jnp
popf
pop
lea
in
xlat
subl
in
into
pop
pop
daa
out
fwait
enter
mov
inc
and
sub
sub
pop
cwtl
mov
adc
mov
cli
mov
add
cld
inc
inc
adc
push
scas
mov
jmp
add
je
es
outsl
stos
pop
cmp
jp
aad
pop
je
jg
lcall
cmp
es
or
pop
ds
pop
sbb
pop
xchg
add
daa
test
sub
test
pop
mov
xchg
adc
cmp
outsl
pop
bound
mov
ja
iret
xchg
cmp
mov
jle
sahf
aad
inc
ds
xchg
je
fadds
or
stos
mov
std
mov
cltd
xor
xor
jb
sbb
les
xor
scas
xorb
jns
fsubrl
jae
jae
adc
insb
pop
cltd
mov
dec
je
fidivl
subb
cmp
push
or
ficomps
add
jecxz
cmpsl
xor
sub
mov
cbtw
aam
jne
mov
leave
jecxz
sarb
mov
pop
or
aam
shll
xchg
jp
outsl
mov
sbb
out
notl
push
add
icebp
cmc
mov
aam
xchg
repz
jnp
orb
ljmp
xchg
into
das
push
xor
iret
inc
in
jmp
in
data16
or
es
cltd
std
scas
clc
subl
cmpsb
add
pop
insb
shll
mov
xor
dec
mov
push
movsl
jle
insl
pop
sub
nop
iret
mov
je
loop
jecxz
cmpsl
push
jb
add
rcrl
ds
jl
xchg
fldcw
jns
mov
push
inc
popf
dec
sbb
pop
mov
push
mov
xlat
js
sub
mov
cmp
les
pop
lea
pop
scas
popa
movsl
icebp
ljmp
pop
add
les
adcb
nop
addr16
repnz
mov
imull
inc
pop
cmpsl
gs
and
sub
sbb
fildll
out
jo
loop
aam
mov
fwait
repz
dec
mov
jmp
insb
loop
and
or
and
ss
sub
jl
bound
sbb
sti
cmpsl
jp
mov
xchg
xchg
sbb
xchg
jne
cmp
inc
sbb
ss
pushf
mov
xchg
jo
jge
in
cmp
dec
add
aad
test
mov
cmpsb
cmc
and
sahf
leave
andl
daa
push
add
lcall
out
stos
inc
dec
push
inc
xchg
mov
adc
cmp
inc
dec
push
lods
xor
xchg
dec
dec
push
adcb
pop
lret
js
iret
or
mov
adc
dec
arpl
int3
adc
pop
shll
aas
and
in
push
icebp
into
sbb
mov
push
jecxz
xchg
fidivs
hlt
and
lret
out
xchg
pop
ffreep
std
sbb
fdivp
subl
sbb
mov
fdivrs
add
jns
popf
sbb
pop
push
mov
test
sub
ja
call
out
sbb
imul
or
adc
scas
popa
pushf
insl
adc
movsb
adc
mov
lcall
mov
js
jecxz
ret
aas
sub
pop
or
das
out
adc
or
push
jle
cwtl
in
into
cmc
leave
pushf
test
decl
pop
or
cmpsl
push
fldcw
cmp
sbb
cmp
cmp
xchg
dec
ds
loope
xchg
and
inc
cmpsb
or
lods
mov
leave
popl
mov
sbb
sahf
jle
mov
mov
gs
pop
mov
sub
jmp
mov
pop
test
mov
push
mov
andb
in
pop
cmp
inc
hlt
sahf
and
fdivrl
fsubr
dec
add
xor
cmc
cs
fsin
lea
nop
pop
das
imul
ds
mov
or
xor
movsl
pop
aad
xor
ss
in
push
jge
inc
loope
jge
push
inc
pop
mov
jg
adc
in
aas
and
ret
inc
pop
xchg
mov
cmpsl
xlat
outsl
push
testb
mov
adc
mov
imul
adcb
or
cmpsl
mov
ret
aaa
xchg
mov
add
dec
jne
cwtl
das
sti
lahf
fsubp
sbb
push
dec
push
fwait
int
xchg
inc
adc
aas
dec
xor
dec
jae
sub
adc
jl
outsb
sub
adc
inc
and
rorb
xor
or
inc
gs
dec
movsl
gs
mov
xor
fildl
out
lcall
push
pop
cltd
mov
lods
sub
xchg
xor
faddl
and
or
in
pop
aam
jp
mov
fistl
cwtl
mov
xor
push
dec
hlt
sub
ds
add
xor
push
adc
shll
and
jl
cld
fsubp
test
jnp
test
or
adcb
nop
sar
add
add
cltd
jnp
push
mov
push
xchg
xor
popa
outsb
lods
add
aas
sub
imul
ss
jb
pop
push
lret
cmpb
sahf
imul
mov
xchg
pop
aam
insl
test
xchg
dec
sbb
roll
sub
dec
xor
sahf
das
enter
push
test
sbb
scas
icebp
shll
add
push
add
ljmp
fsubs
repnz
sahf
add
sbb
inc
fsubs
dec
pop
clc
imul
cld
outsl
shll
movsl
fstpt
mov
cmpsl
js
out
and
dec
pop
loopne
sbb
adc
es
out
push
cltd
xor
or
loopne
fadds
pushl
jmp
pop
lods
call
xor
push
push
sti
cmc
lods
or
ficoml
push
cwtl
mov
or
lods
xlat
cmpsl
push
add
lods
xchg
fwait
repnz
adc
out
int
sub
jge
adc
movsb
loop
in
adc
mov
imul
push
jno
push
mov
sbb
imul
or
sbb
call
mov
jle
dec
repz
xchg
cltd
pop
popa
pop
xchg
cltd
jb
repnz
ret
mov
and
mov
add
sub
dec
xlat
shll
xor
out
js
aad
mov
icebp
arpl
xchg
rcrb
jns
mov
lock
std
iret
loopne
dec
pop
imul
mov
mov
pusha
cmp
jg
mov
inc
mov
daa
notb
xlat
pop
pushf
jmp
enter
movsl
push
es
sarb
stc
sbb
lcall
push
sbb
repnz
mov
push
sbb
sub
lds
push
and
sub
mov
and
pop
arpl
add
jl
std
mov
cli
xchg
cmpsb
sbb
ret
jmp
cld
cmp
rol
cmpsb
in
push
push
pop
orb
into
fsubrs
lock
push
out
icebp
mov
outsl
loop
dec
inc
fisttpl
cmp
out
out
xlat
js
cwtl
popf
xor
push
out
xlat
test
xchg
in
cmc
adc
shll
mov
pop
pop
push
fsts
icebp
or
cmp
push
cmp
loop
dec
add
int
cmc
pop
inc
enter
cmp
es
adc
das
dec
adc
mov
mov
in
jno
adc
mov
fxch
xorl
xchg
mov
mov
mov
mov
xchg
or
testl
jl
and
aad
sub
push
in
cwtl
in
mov
insb
repz
push
pop
mov
sub
dec
inc
add
sub
push
out
push
jnp
sbb
jns
sub
movb
sbb
fs
dec
push
push
adc
add
rorl
ficomps
test
jno
xchg
mov
xor
dec
fcomps
fcomps
pop
mov
sub
test
lcall
inc
jne
add
adcl
adcl
xor
sub
in
add
mov
xchg
dec
cmp
xorb
dec
jecxz
push
mov
sbb
cmp
loopne
in
add
mov
in
nop
shld
sub
jmp
cltd
xchg
adc
xchg
mov
jno
mov
ss
leave
dec
aaa
in
pop
push
mov
adc
dec
daa
sarl
mov
jle
shll
mov
pop
fisubs
pop
movsb
push
mov
cmp
or
dec
lea
lea
mov
sbb
inc
sahf
icebp
dec
xchg
xor
lods
push
icebp
ss
test
jno
pop
test
sahf
push
ja
or
inc
mov
mov
cmp
pop
orl
sar
enter
imul
jle
inc
pop
push
pop
outsb
shrl
std
lret
push
call
ret
inc
mov
fidivrl
lret
jle
fwait
pop
and
adc
lea
dec
adc
ds
mov
inc
pop
cmp
jb
repz
int
dec
je
xor
xchg
inc
cwtl
adc
iret
sub
andb
sub
rorb
cmc
subb
mov
or
mov
bound
fildll
mov
std
and
dec
sar
call
rcll
imul
mov
push
andl
mov
jg
pop
in
dec
cmp
jp
sub
sub
jbe
xchg
push
and
daa
sbb
lds
rorb
popa
push
cmp
mov
inc
mov
adc
int
adc
pusha
dec
inc
push
xchg
xchg
jnp
xor
xchg
iret
aad
mov
roll
push
and
imul
out
jmp
lds
mov
inc
push
or
jmp
stos
pushf
lret
pop
psrld
inc
mov
es
lea
pop
push
mov
cmp
mov
cmc
je
test
add
std
mov
push
mov
sub
xor
mov
cmpsl
lcall
lcall
jg
in
mov
mov
or
mov
mov
mov
frndint
mov
mov
jne
xor
xchg
jecxz
mov
movsb
cmp
rcl
div
dec
test
fcomps
aaa
push
mov
movsl
or
push
ljmp
push
adc
push
inc
dec
jecxz
and
hlt
add
sbb
ror
into
faddl
mov
outsb
in
mov
in
xchg
push
pop
lcall
ja
xchg
imul
cmp
sub
push
flds
mov
mov
add
jg
jb
scas
addb
xor
ja
sbb
pop
leave
push
sbb
mov
test
inc
insb
decl
lret
or
rclb
enter
cwtl
lret
xor
ret
scas
mov
enter
repnz
insl
or
inc
lock
stos
data16
pop
fwait
push
es
movsl
cld
pop
sbb
pop
sub
mov
sub
fbld
sub
inc
lret
pop
fs
stos
cltd
test
pushf
cs
jno
jg
push
sub
push
mov
shlb
fiadds
xor
fsubp
repz
aad
push
mov
dec
fidivl
fnstsw
ds
mov
pop
std
dec
loope
jmp
dec
imul
lret
jno
inc
inc
addr16
cmp
ss
insl
std
insb
lods
jo
or
jo
and
lock
mov
pop
fsubl
inc
pop
stos
cmp
pop
outsl
sbb
lods
push
lahf
cmp
aas
inc
push
dec
push
popa
mov
adc
push
mov
jne
jbe
and
sbb
mov
jne
test
in
incb
add
sarb
es
addr16
sbb
mov
mov
pop
xlat
les
mov
repnz
xchg
inc
in
ja
cmp
push
addr16
les
movsb
push
out
mov
cwtl
mov
xchg
cmp
xor
jo
fidivs
testl
fisubs
movsl
xor
pop
outsb
fdivl
repz
fadd
sbb
push
pusha
add
mov
xlat
aad
repz
pop
lahf
sub
das
enter
adcb
mov
movb
adc
sub
movb
mov
or
lahf
inc
add
aas
adc
mov
jno
jns
adc
cmp
iret
aaa
cltd
lret
pop
data16
out
sub
jns
movl
dec
dec
stos
push
lret
mov
stc
pop
pop
in
cmp
loop
jnp
daa
loope
push
jb
add
leave
out
nop
es
xor
aad
xchg
jnp
stos
ja
cmp
pop
jmp
mov
adc
sub
mov
xchg
movsl
cltd
inc
add
mov
xor
or
repnz
in
aaa
addr16
in
int3
inc
dec
rol
inc
out
repz
push
test
lcall
stc
loop
lret
fcmovb
cmpsl
add
push
adc
mov
pop
dec
aaa
fildll
cmp
add
cwtl
or
inc
pushf
xor
cmpsb
sarl
cwtl
adc
sbb
ljmp
fwait
xchg
out
adc
fdivrl
fstpl
jnp
pusha
in
lds
stos
push
negl
dec
std
push
lock
fists
inc
and
out
cmc
addr16
loop,pn
cmp
dec
stos
mov
xchg
add
pop
jecxz
lret
push
test
pop
sub
fiadds
pop
das
stos
ret
leave
scas
clc
xchg
adc
mov
sub
rorb
aas
lcall
mov
pop
sub
mov
push
xchg
test
jle
fnstsw
inc
fsub
or
js
push
daa
mov
mov
jns
inc
mov
outsb
jp
test
mov
adc
inc
push
xor
fstps
addr16
mov
stc
fsqrt
and
leave
mov
dec
and
cmp
cmp
dec
aad
popa
sbbb
cmp
popa
xchg
add
pop
mov
sbb
cmp
fsubrs
xchg
jmp
iret
outsl
decl
jmp
sarb
mov
inc
dec
std
loop
scas
mov
addr16
lret
dec
push
xchg
cmp
popa
jg
push
adc
fdivl
pop
jecxz
jle
cwtl
jbe
rorb
push
jne
sbb
push
fdivs
mov
insl
cmp
add
push
fistps
imul
es
inc
push
ja
or
js
ljmp
cmpsb
sub
xor
mov
and
push
push
inc
cwtl
sbb
cmp
dec
test
inc
das
lods
lods
lods
pop
pop
cmp
mov
jle
iret
mov
cmc
xchg
mov
cltd
pop
scas
mov
testb
aam
add
insb
xchg
leave
pop
int
sub
inc
cltd
jmp
cltd
cmp
les
xchg
lds
mov
rcrb
mov
or
mov
sub
sti
mov
or
sub
fcmovu
add
into
ljmp
jb
mov
push
inc
cwtl
je
pop
mov
adc
or
inc
xchg
jbe
mov
xor
push
fisubs
jmp
incb
lods
mov
dec
inc
pop
cli
hlt
lods
inc
aas
outsl
movsb
add
std
addb
jmp
int
dec
xor
loop
mov
adcb
inc
js
aam
test
out
dec
repnz
pop
mov
lahf
test
leave
sbb
jb
icebp
mov
cwtl
xchg
mov
xlat
sub
dec
push
shlb
fldcw
pop
stos
ljmp
adc
add
sub
sbb
adc
cwtl
aas
pop
push
xor
and
imul
outsb
pop
out
in
inc
arpl
mov
sbb
xchg
cmp
mov
sub
out
inc
test
clc
das
mov
bound
xor
add
data16
adc
mov
cs
pusha
xchg
lret
sub
int3
mov
pushf
test
ret
push
scas
jno
or
xor
sub
movsl
icebp
mov
push
cmp
cs
and
outsl
or
jo
out
mov
xchg
out
outsb
dec
cmp
out
or
out
or
pop
loop
data16
std
outsl
cs
test
mov
out
add
inc
xorb
cmc
sbb
xchg
pop
mov
movsb
inc
sub
pop
ljmp
outsb
out
into
enter
jp
add
lahf
mov
sbb
dec
inc
lock
mov
xchg
mov
stos
cmpsl
je
outsl
xor
cmp
fdivrl
repnz
cwtl
ret
jg
and
mov
push
in
dec
adc
in
mov
jb
or
xchg
jne
shrl
out
mov
fs
mov
fdivs
cmp
sub
lods
pop
cmp
pusha
mov
fisubl
inc
add
dec
cmpb
push
mov
jo
call
sub
paddsw
xchg
dec
cmp
jle
xchg
jne
sbb
lret
ret
inc
cwtl
push
andb
and
cmc
cmc
cmpsl
adc
inc
xlat
sarb
pop
mov
xchg
lock
mov
aas
inc
orb
rolb
add
arpl
push
sub
mov
mov
es
lahf
push
xor
cmp
rcll
sub
push
sub
int
ja
int
cli
inc
mov
aaa
xchg
add
pop
fmull
xchg
es
xlat
and
stc
push
insl
push
jge
dec
push
xlat
inc
adc
ret
or
fwait
dec
and
ret
dec
mov
jnp
jb
mov
pop
ficompl
mov
fstps
stos
mov
jo
sbb
cld
xor
pop
mov
fcoml
fsub
mov
sub
sub
cli
pop
dec
dec
daa
lcall
pop
jmp
int3
insl
jmp
int
stc
sbb
xorb
mov
xchg
shrb
jecxz
or
jb
adc
xor
mov
dec
dec
mov
dec
mov
pop
mov
std
out
jno
push
scas
sub
and
lds
sub
dec
inc
test
mov
in
dec
loopne
mov
mov
mov
loop
or
enter
sbb
sub
sti
mov
mov
out
or
lret
lret
and
cmp
popfw
jbe
jnp
lods
out
pushf
mov
xor
inc
mov
cmpsl
fwait
clc
ja
mov
jne
xor
or
outsl
lret
rclb
aas
cmc
popa
xor
mov
jae
jns
inc
and
jne
fmuls
nop
inc
popa
mov
mov
push
xor
inc
sar
clc
es
fiaddl
push
stc
mov
mov
aam
add
mov
or
jle
aad
lea
stos
jno
xor
xor
ja
push
dec
add
jno
aam
cwtl
inc
hlt
mov
aad
std
push
cld
xor
pop
cmpsb
and
mov
loope
mov
push
pop
loope
adc
cli
mov
jmp
sbb
cmc
sahf
hlt
sub
movsb
daa
mov
in
add
fwait
pop
les
jmp
mov
cltd
mov
jbe
in
cmc
mov
mov
aam
jne
call
jbe
xchg
ret
movsl
shll
xor
ja
out
andb
cmp
xchg
loop
addr16
push
or
roll
lock
stos
ja
mov
adcb
das
dec
cmpsb
mov
push
push
test
lahf
and
push
xchg
mov
ss
and
outsl
cmp
lea
clc
je
call
inc
lret
dec
sbb
or
sahf
inc
insb
aad
ret
shlb
into
sub
xor
lock
jge
lret
push
stc
faddl
fistps
xchg
loope
pop
shl
les
cmp
nop
clc
push
test
dec
popa
add
fidivs
jae
add
push
cmpsl
movsl
out
std
out
aad
std
xchg
mov
sub
mov
je
xor
ja
dec
cwtl
shlb
jae
push
jb
pop
insl
cli
jb
cmpsl
out
iret
aam
mov
jno
mov
sbb
lea
xchg
outsl
out
sbb
pushf
push
test
add
push
int
cmp
imul
cs
jge
push
lods
imul
mov
cs
and
mov
and
dec
sbb
roll
push
ret
scas
jle
nop
stos
lcall
dec
mov
push
mov
inc
pop
mov
loope
push
dec
mulb
das
pop
outsl
pusha
push
jbe
stc
lea
xor
jno
outsl
dec
sbb
mov
imul
jmp
xchg
dec
imul
ret
bound
in
rcll
sub
jae
mov
xor
cs
mov
cli
subb
and
dec
mov
adc
or
jne
push
stc
cmp
mov
sbb
sarb
test
rcl
pop
arpl
daa
ss
aas
xchg
sbbb
movsl
fwait
xchg
cmp
fiadds
inc
lock
cmc
jae
xchg
scas
or
jmp
add
leave
shlb
jno
pushl
subb
cwtl
insl
aad
lret
in
scas
test
ja
jg
fcom
and
int3
fnsave
aam
push
in
xor
pusha
mov
pop
ror
das
into
and
push
leave
fstpl
and
pop
pop
gs
dec
pop
fadds
sbb
pcmpgtw
mov
jo
push
imull
inc
mov
cmp
jecxz
lea
mov
insl
push
xchg
adc
leave
jmp
push
cmpb
and
test
adc
and
outsl
add
xorb
push
sbb
cmpsl
add
cwtl
jnp
sub
mov
insb
mov
pop
sub
jne
add
lahf
call
pop
adc
pop
clc
imul
sub
mov
or
and
insl
mul
imul
leave
sti
negb
jns
sahf
xor
rclb
jmp
lds
iret
outsb
mov
nopl
mov
rcl
fldenv
nop
aas
ss
mov
es
inc
insl
add
daa
nop
mov
pop
xchg
or
or
addr16
mov
sub
test
or
sub
mov
mov
mov
mov
shrb
js
inc
cli
push
mov
cli
enter
int3
dec
out
cs
mov
adc
mov
movsb
or
hlt
sbb
fnstcw
push
xor
and
dec
jecxz
push
and
in
dec
cmp
rol
jne
call
nop
ss
fcomps
jno
lds
ds
subb
jg
push
push
lods
add
xchg
push
clc
or
lds
xor
mov
adc
fnstenv
add
or
das
pusha
notl
mov
push
sbb
and
popa
or
dec
or
mov
push
sub
sub
fildll
mov
js
test
mov
pop
les
ficompl
sarl
out
movsl
or
inc
iret
pop
ljmp
adc
dec
push
xchg
jns
mov
mov
scas
rorl
in
cmp
xor
sti
clc
dec
cmp
stos
sbb
icebp
or
xor
fs
xlat
push
rdtsc
lret
data16
pop
clc
pop
dec
xor
arpl
cltd
xchg
pusha
mov
mov
adc
cmpsb
subb
dec
clc
cltd
inc
imul
sub
add
mov
and
and
or
dec
or
mov
fadds
dec
shrb
rcrb
popf
inc
pusha
mov
fs
call
mov
cwtl
sub
cltd
mov
push
jmp
bound
and
jae
inc
push
dec
test
xchg
iret
mov
stc
pop
pop
cmp
adc
jnp
sbb
and
push
mov
je
test
ljmp
mov
ja
push
leave
cmp
rclb
out
imull
ret
dec
fcompl
xor
sub
dec
adc
sbb
jae
xchg
imul
rcl
adc
jmp
inc
test
andl
ds
push
sub
push
bound
xchg
mov
mov
inc
jl
ljmp
or
adc
jg
repnz
or
in
push
mov
adc
sbb
ficompl
cmpsl
pop
rorb
lea
std
push
imul
cmpsl
decl
mov
mov
xor
fs
ficomps
pop
mov
or
sub
stos
pop
in
ret
bound
jle
ret
mov
pop
jmp
xor
jbe
cmp
push
call
cmp
data16
ror
nop
subl
pop
lds
jo
ljmp
dec
jno
mov
mov
add
je
std
cmpsb
test
xor
fldcw
adc
mov
pop
gs
lock
lret
xor
ja
outsl
mov
call
insb
cmp
inc
sarl
adc
orb
dec
test
push
loope
xor
mov
push
or
adc
iret
aas
pop
movsl
mov
add
mov
dec
xchg
sbb
cmc
sbb
or
std
adc
insl
adc
cmpsb
add
dec
or
cli
imul
imul
fmul
xor
out
movsb
aaa
xchg
popl
test
sbb
and
pop
xor
adc
ss
test
aad
scas
jbe
test
dec
cmp
ja
cs
and
pushf
and
jb
je
adc
jns
dec
shrb
jne
jle
mov
xor
mov
and
mov
push
adc
sbb
cmp
or
xchg
loop
sbb
mov
cmp
mov
xchg
lock
jmp
adc
or
cmpsl
cld
xchg
aad
sub
adc
jg
mov
int
xchg
les
pop
mov
xchg
movsb
inc
aam
or
lock
rcrb
sbb
xchg
xor
cmpsb
adc
mov
jne
movsb
aam
jns
mov
add
jecxz
push
add
inc
inc
cmp
aas
sti
scas
mov
xchg
nop
imul
arpl
pusha
stos
test
mov
in
xor
int
mov
mov
mov
and
aad
push
sarb
mov
sbb
insl
jns
lods
push
iret
call
sbb
mov
pop
xor
int3
incl
push
in
cwtl
fwait
scas
xchg
cmp
add
and
or
or
mov
sti
pop
xchg
aad
or
mov
fistl
push
movl
push
sbb
int3
insb
shl
mov
push
dec
sub
out
scas
cmc
inc
pop
mov
mov
and
pop
scas
mov
sbb
dec
ret
call
sbb
fsubs
es
push
inc
mov
inc
mov
das
jbe
xor
adc
int3
adc
add
and
mov
repz
sahf
or
jle
pop
or
int
movsl
mov
pop
lods
in
mov
movb
or
adc
mov
xchg
or
pop
aas
sub
sbb
dec
push
int3
sub
jmp
aaa
adc
xor
addr16
push
sbb
sbbl
sub
in
mov
sbb
fdivrs
cld
lds
jnp
movsl
or
sti
int3
fcmovnb
adc
scas
hlt
daa
jbe
je
icebp
xor
lret
pop
sub
stc
lock
mov
and
shl
sbb
mov
subb
ds
into
and
sub
mov
jp
int
xor
pop
dec
int3
ficoms
in
fs
or
pop
out
xchg
out
jb
mov
int3
ja
push
mov
clc
fwait
movsl
lret
push
ret
xchg
cmp
ficoml
cltd
mov
and
sub
bound
stos
xchg
test
mov
or
icebp
add
dec
or
and
sbb
fwait
ss
ret
fucomip
mov
insl
lods
lea
aas
lea
movsl
sti
sbb
mov
and
sub
xchg
adc
dec
inc
out
popf
sti
jne
mov
das
mov
fnstcw
scas
mov
addr16
adc
pop
js
inc
cmp
orb
inc
roll
insl
xchg
xchg
ja
stos
pop
xchg
iret
sahf
pop
mov
pop
mov
inc
cmp
leave
push
cltd
push
xchg
andl
jmp
push
pop
lahf
aas
mov
sub
insb
mov
stc
cltd
add
je
jne
test
movzbl
nop
add
in
pop
sub
addb
addr16
jmp
std
inc
sarb
pop
stc
loope
jl
inc
rol
sti
icebp
push
xchg
sbb
xchg
mov
and
je
stc
or
les
scas
jmp
mov
mov
and
lcall
xchg
enter
xor
mov
stc
mov
std
cmc
cmp
inc
sbb
xor
mov
pop
in
gs
mov
jno
gs
cmpsb
add
push
or
jo
dec
pop
roll
adc
or
xchg
xchg
adc
adc
sbb
add
mov
jp
mov
push
cmp
daa
xor
scas
cmp
shlb
subl
in
mov
push
xchg
xor
dec
or
out
in
and
repnz
test
dec
loop
xchg
icebp
xchg
sub
push
xchg
int3
outsb
dec
push
loopne
out
clc
sbb
add
dec
sahf
inc
dec
mov
or
arpl
mov
mov
pop
inc
xlat
fdivs
or
sbb
in
xor
adc
fisubs
sbb
call
test
push
rep
sbbl
dec
jb
cwtl
xchg
xor
inc
pop
xor
fbld
mov
push
test
push
fldcw
xchg
push
aaa
stc
sub
push
jmp
enter
mov
cmpsl
pop
jns
pop
jns
mov
push
ret
scas
les
jmp
int3
lcall
ja
mov
xchg
push
pop
xor
push
notl
in
decb
pop
pushf
lea
pop
mov
popf
inc
adc
jb
popf
in
int3
out
jge
scas
push
sahf
xchg
cld
cltd
mov
mov
lds
adc
scas
popf
pop
and
pusha
inc
out
bnd
or
mov
dec
push
or
mov
push
pop
jle
mov
movsl
xchg
daa
mov
sbb
or
cmpl
inc
xchg
mov
sbb
into
pop
imul
jl
mov
loop
outsl
lods
movsl
js
enter
sub
cmp
loope
lods
roll
loope
jae
shr
rcll
adc
and
mov
stc
sub
js
xchg
sub
fldt
in
ljmp
incb
xchg
dec
mov
cmc
movsb
aam
faddl
mov
aad
test
lods
push
aas
ja
fs
daa
fwait
daa
jne
int
dec
add
aad
loope
loop
jl
add
out
cld
stos
fistpl
rcrb
xchg
or
lret
popa
xchg
stos
jmp
xor
inc
jns
sub
movl
pop
jb
jb
call
xchg
ja
les
push
jno
outsl
ss
das
sub
in
cs
movsl
jnp
lret
or
ljmp
sbb
sbb
lods
mov
daa
mov
leave
roll
adc
adc
std
cmp
xor
fwait
sbb
jl
dec
sub
out
cld
inc
ret
mov
mov
es
ret
inc
in
les
cmpsb
pop
jmp
jp
bts
jle
lret
pop
paddw
fidivl
stos
les
test
mov
in
gs
imul
daa
ret
push
cs
lock
addr16
pop
push
inc
cmp
insb
movsb
test
ds
cli
xchg
stos
loop
cmpb
out
sbb
fnstenv
cmp
xor
mov
xor
aam
adc
popa
jae
mov
pop
push
in
fisubl
jl
cmovae
sub
add
push
xchg
jns
enter
mov
lea
das
or
jg
xor
xor
fcom
adc
jge
loopne
push
rorb
fisubrl
add
jo
cmp
aam
std
xchg
ss
lcall
mov
pop
sbb
xchg
push
sbb
cmp
sbb
dec
ds
sbb
jb
loope
inc
adc
xor
decb
xchg
out
inc
das
cmp
scas
fdivrs
pop
adc
adc
lret
mov
dec
fistpl
add
icebp
inc
aas
call
push
dec
inc
xor
push
cwtl
cmp
test
std
add
imul
mov
jg
mov
xlat
jne
inc
pushf
pop
push
sti
xor
xor
out
out
mov
xchg
or
inc
shl
inc
xor
push
adc
cmp
mov
xor
dec
cwtl
dec
mov
cmpsb
int
cwtl
push
and
dec
or
movsl
pop
sarl
push
xor
in
mov
movlps
adc
loope
sub
lods
mov
mov
pop
aam
cmp
fmull
pop
out
and
lods
leave
jmp
das
icebp
jmp
notb
imul
mov
and
jg
aam
in
and
lea
mov
outsb
test
ss
cmp
jl
in
jmp
ljmp
paddusb
mov
repnz
mov
xor
mov
xchg
call
jbe
ds
xchg
cmpl
inc
mov
pop
adcl
dec
mov
insb
lods
test
mov
or
xchg
pop
aas
sub
scas
mov
push
sub
movsb
loop
aas
sbb
pop
mov
cmp
data16
mov
sbb
repz
in
cmp
jae
pop
sub
xchg
cmpsl
cmp
data16
cmp
mov
int
or
ret
mov
hlt
sub
mov
mov
push
sbbl
cmp
xchg
jg
mov
lret
inc
pop
jecxz
rclb
inc
outsb
out
fs
inc
pop
adc
xchg
in
add
js
cli
fdivrl
cmp
imul
testl
fldl
into
fists
test
stos
mov
rcr
sub
sbb
mov
push
xchg
pop
or
pop
fwait
jmp
out
inc
pcmpgtd
in
clc
add
lahf
inc
lcall
lods
inc
inc
test
pop
sbb
jge
int
push
leave
or
stc
xor
push
rorl
es
ret
mov
cs
std
roll
jmp
inc
push
xor
cmp
pop
aas
scas
ror
imul
ss
jae
iret
push
xchg
mov
cli
sarl
ss
out
dec
and
and
repz
test
mov
mov
das
push
ljmp
iret
enter
mov
or
cs
les
pop
imul
cli
aas
inc
push
push
dec
pop
mov
jo
ljmp
cltd
popa
xchg
test
jl
cmp
cli
sub
rcl
adc
in
cmp
and
scas
bound
push
mov
fdiv
loope
cmp
jb
jno
mov
dec
add
ds
cmp
insb
pushf
out
push
mov
out
xor
xor
or
inc
lahf
int
xchg
xor
test
insb
mov
outsb
jmp
scas
fs
subb
sti
jge
jg
lahf
and
std
pop
xchg
js
imul
pop
nop
call
and
lods
rorl
cmp
nop
mov
mov
int
cwtl
pop
mov
pop
in
dec
daa
cmp
data16
leave
mov
add
mov
cltd
imul
popa
sarb
in
jb
inc
jno
adc
mov
insb
in
and
inc
sbb
ds
lret
pop
inc
add
repnz
mov
jg
int3
inc
pop
fnsave
and
or
fiaddl
insl
in
pushf
jmp
add
adc
cld
sub
movsb
and
je
movsl
leave
insb
repz
mov
aad
pop
xchg
shlb
arpl
and
push
addr16
pop
daa
inc
jmp
jg
push
cmpsb
lret
inc
push
inc
or
bound
mov
iret
jecxz
mov
rcr
push
push
cmp
scas
dec
cs
aam
sub
xchg
shrl
push
push
dec
mov
inc
pusha
dec
adc
sub
sbb
jo
hlt
loope
adc
pop
mov
xchg
adc
ljmp
xor
inc
pop
push
push
test
loopne
add
or
outsb
test
lods
push
popa
adc
push
mov
push
xor
adc
movsb
push
pop
push
pushf
clc
imul
jnp
or
addb
adc
sub
std
stos
jns
cmp
mov
inc
fistl
cmp
lcall
into
dec
sahf
enter
scas
jb
in
fwait
jge
push
fisttpl
iret
sbb
repnz
sbb
sbbb
mov
mov
ds
cli
cli
in
mov
inc
stc
mov
mov
pop
lods
sbb
mov
cmc
mov
sbb
jg
add
ret
aaa
jo
mov
lods
xor
mov
mov
mov
push
das
arpl
and
loop
inc
lods
sbb
jecxz
inc
push
cld
or
cmp
mov
popf
imul
mov
cli
cld
xor
test
scas
ret
leave
mov
movsb
lds
add
pop
movsl
out
repnz
jae
sbb
out
mov
aaa
add
ljmp
jecxz
push
mov
sbb
or
xor
lret
jno
or
push
xchg
ljmp
scas
or
inc
std
outsb
lock
dec
das
imul
cld
mov
pop
fisubrl
cmc
dec
popf
les
imul
cs
leave
and
scas
scas
xor
add
sbb
lret
call
jne
out
push
xor
jns
call
in
arpl
mov
mov
loopne
repnz
lock
mov
ficoml
inc
jo
sti
das
or
les
dec
xchg
adc
push
sbb
dec
cwtl
cmp
idivl
repz
je
push
mov
mov
add
sbb
sub
lods
xacquire
cld
cmp
pop
add
dec
call
sub
jmp
push
inc
pop
stc
into
scas
jg
add
jb
or
leave
gs
lods
push
stc
ljmp
sti
mov
cld
pop
cmp
loope
dec
xchg
pop
bound
jle
xchg
mov
mov
in
xor
inc
jnp
int
arpl
sbb
fldl
test
inc
mov
imul
lcall
cmc
jl
shll
pop
shld
jge
stos
lret
xchg
fs
or
incl
movl
mov
mov
in
rol
dec
pop
dec
aas
nop
and
push
cld
xchg
ja
inc
push
mov
fwait
subl
and
cmpsb
sti
daa
mov
andb
movsl
jg
inc
fisttpl
pop
mov
mov
mov
xor
push
sahf
xchg
mov
stos
aaa
shr
ror
fdivs
mov
sub
cmp
fisubrs
mov
jb
jge
sbb
pop
or
ret
dec
sahf
lcall
lahf
adc
das
cs
imul
and
pop
add
or
into
out
pop
push
pushf
xor
roll
and
xchg
sbb
ss
iret
and
pop
pop
inc
stos
fisttpl
push
aas
cmpl
pop
popf
sarl
addl
sbb
cld
sbb
mov
lahf
pop
sahf
or
fbld
test
xchg
lahf
test
aam
mov
pushf
mov
sub
cmc
jne
xor
and
dec
xor
cmp
jecxz
push
push
mov
sbb
mov
lret
je
push
jns
mov
add
sbb
mov
mov
xchg
adc
xor
sbb
mov
loop
into
jns
insb
test
cwtl
add
lret
in
lds
dec
aad
push
aad
push
mov
mov
mov
mov
jmp
movd
jp
scas
push
aaa
push
aam
xchg
add
mov
cs
lds
stos
lock
aas
adc
push
xor
out
or
push
push
or
mov
loop
jl
jecxz
jle
mov
in
outsb
or
jae,pn
add
repnz
sbb
iretw
xchg
or
push
rclb
das
inc
cmp
add
lods
xor
cmp
roll
stc
mov
or
xchg
leave
mov
or
sub
mov
dec
loope
outsb
mov
mov
jp
mov
sbb
sbb
jns
xchg
and
mov
xchg
xlat
mov
stos
cmp
movsb
shr
lods
mov
lahf
int
imul
fadds
mov
dec
stos
sub
and
pop
or
jb
rorl
push
and
lret
xchg
cmp
mov
repnz
std
test
add
pop
mov
cmp
shrl
popf
push
out
stos
and
add
pushf
xlat
add
inc
shrb
lret
xorb
inc
leave
push
rcr
mov
push
orl
inc
imul
adc
loope
clc
into
and
mov
sub
mov
popf
nop
jecxz
mov
aam
mov
in
pop
icebp
dec
shlb
inc
mov
jle
xor
clc
adc
mov
adc
inc
mov
das
adc
push
pop
sub
mov
sbb
dec
data16
push
sub
xor
mov
jns
xor
lea
je
ret
test
insb
fstps
or
cmp
push
cli
mov
cwtl
ja
sbb
or
inc
cmp
lcall
sti
inc
jg
call
mov
jne
sarb
and
jae
mov
outsl
inc
cmpsl
test
les
sub
cmp
adc
xchg
fcompl
xchg
push
lea
sbb
lcall
add
data16
mov
pop
insb
mov
add
pop
add
push
push
sub
stos
push
popa
dec
jmp
xor
lods
dec
daa
jno
push
xchg
out
es
xor
cmp
xchg
shrl
addr16
loope
add
or
pusha
mov
xchg
xor
cmpsb
inc
test
mov
push
ret
arpl
push
fs
int3
mov
das
xor
imul
sbb
in
inc
inc
loopne
push
adc
push
shrd
adc
pop
leave
adcb
mov
pop
fcoms
mov
cltd
es
mov
in
mov
push
cmpsb
jle
jmp
pop
xchg
xor
lods
hlt
push
mov
stos
inc
subl
test
inc
mov
push
adc
mov
ss
cwtl
mov
fsubl
into
xchg
test
cmpb
shll
mov
pop
pop
xchg
aam
and
jno
lret
call
in
std
arpl
incl
sub
xchg
adcl
in
leave
pop
adcb
into
jae
in
sahf
bound
or
inc
lock
dec
xchg
mov
pop
int3
ss
sub
mov
push
stc
push
in
pop
xor
in
add
xchg
stc
adc
or
xor
in
jnp
mov
mov
pop
inc
sub
pop
jle
inc
adcb
sub
imul
in
mov
inc
xor
cmovns
nop
mov
mov
idivl
sub
jns
arpl
add
sub
mov
ficoms
bound
outsl
adc
les
mov
pop
push
fs
fsubs
lods
push
lock
cwtl
jnp
push
cld
sbbb
pop
push
sbb
test
mov
insl
int
inc
cmp
inc
scas
xchg
lret
mov
or
add
test
sub
add
cmp
dec
sub
cmp
push
push
push
pop
inc
mov
dec
dec
out
xchg
xchg
testl
pusha
scas
jnp
aad
or
adc
inc
cmp
lods
cmp
pop
mov
xor
adc
mov
cwtl
divps
adc
mov
iret
and
icebp
adc
lret
aas
lods
lods
repnz
pushf
dec
or
int3
ja
fdiv
sub
xor
andl
fcoms
jns
sub
add
dec
inc
jg
xchg
pusha
pop
xchg
and
add
aas
ja
jle
mov
pop
cmp
sti
add
les
mov
lods
adc
xor
or
movsb
outsl
push
dec
push
jecxz
cmpsb
cli
add
sbb
adc
js
dec
test
gs
stos
shlb
push
jb
aaa
cmove
cmpsl
push
sbb
arpl
push
mov
imul
addr16
dec
mov
dec
pop
or
inc
mov
test
in
jg
mov
lds
lea
out
rolb
in
testl
and
ret
add
repnz
push
scas
xchg
test
loop
fwait
test
test
adc
scas
jecxz
mov
loop
and
sbb
aaa
std
out
addb
sti
sub
int
ret
fistpl
mov
mov
je
or
sbb
or
pop
jmp
jne
push
insb
test
push
xchg
stos
jbe
sbb
int3
fisubrs
xchg
and
dec
mov
push
test
jge
les
call
cmp
push
push
jno
mov
sbb
jnp
es
stos
movsl
xchg
jne
and
pushf
push
jmp
test
sub
jbe
mov
jno
cmp
mov
inc
mov
push
lahf
test
mov
mov
sub
es
fsts
sbb
outsb
test
xor
push
pop
mov
loope
inc
cmp
out
out
call
das
pop
mov
xchg
shlb
call
adc
nop
rcll
xchg
cmp
stos
pop
shl
rolb
bound
cltd
jg
fs
addr16
rorb
loop
cmovp
ds
dec
pop
pop
repz
lods
or
cmpsb
jmp
ja
cli
aad
loopne
outsb
or
jecxz
sarl
enter
inc
adcb
cmpsb
aaa
cmp
mov
add
pushl
dec
cs
add
aaa
jb
mov
aad
cli
lods
jne
insb
mov
xchg
cli
outsl
movsl
paddsw
imul
inc
inc
sbb
hlt
pop
lahf
pop
out
xor
cmp
scas
push
out
outsb
xchg
clc
loopne
vunpckhps
adc
ret
outsl
stos
icebp
or
xchg
push
test
in
addr16
pop
xor
iret
stos
sub
mov
cmp
or
mov
inc
es
cmp
lret
adc
mov
mov
adc
shrb
or
sub
pop
stc
cwtl
mov
dec
fimull
adc
scas
mov
aam
enter
movsl
cmp
pop
or
sbb
or
pop
mov
jnp
pop
xchg
fildl
push
push
pop
out
rcr
mov
sbb
jo
mov
outsl
cmp
jl
bound
mov
movsl
mov
int3
sbb
adc
in
arpl
mov
cwtl
jp
arpl
dec
lcall
test
ja
adc
add
jl
in
mov
shlb
mov
scas
pop
ljmp
btcl
mov
out
or
inc
mov
and
rorb
inc
lods
fimuls
xchg
cwtl
sub
in
imul
shll
mov
addr16
sub
ret
out
scas
sbb
popa
dec
pop
lods
sbb
lods
hlt
push
outsb
lret
add
inc
adc
push
stos
shrb
cli
in
adc
lods
mov
cmp
mov
dec
iret
jecxz
in
movsb
sti
push
jae
xor
add
hlt
pop
push
jb
xor
adc
les
das
xchg
adc
loopne
adc
ror
cmp
pushf
pop
ljmp
daa
test
push
xchg
mov
or
shl
cmp
mov
ljmp
mov
xchg
scas
mov
dec
cmp
xchg
cmpsb
inc
mov
inc
mov
push
cmpsl
ja
movsb
jns
stos
xor
mov
or
lock
loopne
pusha
mov
cmp
sbb
outsl
and
subl
pop
inc
shrl
icebp
shll
lods
aam
mov
adc
stos
hlt
adc
cld
je
push
dec
mov
and
lods
mov
and
mov
or
sub
mov
aaa
push
mov
mov
mov
jbe
faddp
push
jl
adc
xchg
rorb
push
in
xor
mov
out
mov
fdivl
pop
scas
or
scas
sub
test
subb
shll
cmp
mov
rorb
jle
clc
mulps
fldt
in
and
cmpsl
jg
aaa
cmp
jmp
jp
dec
cmp
or
mov
or
fiaddl
inc
daa
scas
ret
fsts
add
sbb
movb
adc
lret
iret
lods
scas
push
test
test
pop
pushf
gs
xchg
pop
or
push
push
mov
mov
jno
push
pop
xchg
add
or
mov
xchg
xor
cmp
insb
xchg
mov
pusha
out
nop
jecxz
out
add
outsb
and
pop
jge
push
cmpsb
push
xor
mov
mov
inc
lahf
jecxz
xchg
xchg
imul
pop
ds
inc
or
mov
fwait
jne
pop
stos
mov
mov
or
push
sub
mov
ja
shll
inc
mov
mov
push
inc
cmpb
aam
sbb
loop
mov
cli
es
stc
cmpsl
mov
in
mov
je
and
add
xchg
xchg
cmpsl
inc
cmp
jno
idivl
mov
cwtl
pusha
test
xchg
sbb
dec
jo
sub
ret
gs
xor
mov
jl
aad
xchg
adc
inc
int
add
push
add
sbb
stos
mov
lods
add
inc
stos
aad
pop
ljmp
std
and
test
adc
pop
pop
leave
pushf
aam
xchg
je
add
xor
adcl
inc
xlat
fs
ja
cltd
jbe
xchg
mov
gs
ret
daa
cmpsl
leave
cmp
sbb
lea
lahf
mov
xor
jne
gs
mov
mov
xor
jbe
mov
ljmp
mov
cmp
jns
movsb
movsl
xor
outsb
loop
jp
imul
xchg
iret
clc
adc
push
sbb
mov
sub
enter
out
movsb
cmpsb
sub
xchg
sbb
jp
inc
loope
push
scas
adc
cmp
inc
mov
out
mov
fcom
and
adcb
shll
addb
aaa
xor
mov
sub
dec
push
adc
fcoml
mov
or
inc
lods
or
adc
sarl
mov
push
inc
fs
xchg
cmp
and
mov
shlb
fcompl
pop
xchg
das
fwait
xchg
push
pop
scas
stc
in
leave
shl
mov
js
jno
or
outsl
xorl
fwait
jmp
mov
or
mov
sub
add
xor
add
test
and
nop
pop
ficoms
ret
data16
sub
stc
repz
loope
inc
add
push
xchg
sub
cmp
mov
imul
fwait
xchg
sub
jo
add
testb
iret
sbb
repnz
sub
rol
cmp
mov
or
lret
fimuls
xchg
loope
lea
xlat
or
cli
sbb
sub
mov
xchg
rorl
ljmp
lods
out
femms
mov
lcall
scas
addb
sub
hlt
mov
fmull
pop
push
das
jae
out
call
jg
adc
jmp
and
test
adc
pop
push
add
push
int3
and
jge
sub
mov
sbb
and
cli
sbb
jl
sub
pop
cmp
in
add
ljmp
test
fwait
cs
lcall
mov
push
mov
pop
jmp
mov
stos
sbb
js
imul
call
pushf
rclb
and
jo
jns
or
add
in
push
pop
xor
sub
setl
cltd
pmulhw
ret
imul
push
aad
mov
loop
mov
mov
inc
sub
or
je
mov
push
out
arpl
pushf
cltd
adcl
mov
mov
int3
push
and
dec
mov
push
cmp
mov
fcoms
test
adc
fwait
push
addr16
mov
inc
mov
aam
push
sarl
dec
pop
outsl
pop
or
pop
pop
xlat
jmp
xor
and
popf
rcll
sbbb
cmp
mov
lods
xor
mov
xor
push
add
lahf
js
mov
xchg
cmp
jge
push
data16
fimuls
xchg
rolb
nop
shlb
es
cs
add
dec
mov
fadd
inc
push
aas
jmp
inc
in
pushf
fwait
mov
cmp
stc
jbe
xor
mov
cmp
icebp
cs
push
and
gs
mov
mov
aad
add
ss
xchg
aaa
lahf
outsl
fistps
xchg
xchg
sbb
test
add
outsl
dec
xor
addr16
lods
xor
mov
mov
dec
loopne
dec
mov
scas
sub
and
cmpsl
dec
push
xlat
mov
cmp
flds
pop
jle
push
mov
xchg
lcall
aas
push
fldl
movsl
mov
adc
xchg
add
jbe
repnz
sub
add
jecxz
outsb
std
push
or
out
popa
push
imulb
sbb
sarb
cmp
xchg
cmp
mov
cmp
out
js
push
and
int3
inc
pop
jmp
enter
sub
pop
fstpt
pop
cmpb
lahf
jecxz
loopne
xchg
mov
mov
fdivl
insb
movsb
ds
repnz
sbb
dec
scas
cmp
in
mov
inc
sti
mov
ret
or
or
push
or
cltd
hlt
roll
mov
jae
loop
xchg
inc
or
push
test
test
insb
jns
ljmp
cmp
jmp
push
mov
inc
aaa
fcomps
loop
mov
dec
mov
test
sti
pop
stc
or
fs
mov
mov
mov
cli
mov
or
insb
negl
pop
fstpl
aaa
mov
sub
inc
xchg
loop
cltd
or
inc
cld
and
out
clc
adc
mov
movsl
ljmp
or
movsl
daa
mov
pop
popa
lock
or
outsb
pop
mov
inc
xchg
insb
in
add
inc
cltd
in
mov
xor
adc
rorw
neg
shl
mov
jp
and
jnp
pushl
xchg
sbb
test
mov
dec
cmpsl
xor
jle
test
xchg
ficoml
inc
cmpb
aaa
fiadds
xor
aas
lret
fistpl
loope
xchg
mov
cmp
cwtl
sysret
sbb
ret
adc
js
push
xchg
push
aad
mov
mov
test
jg
sbb
mov
pop
sbb
jnp
stos
xchg
in
loopne
cs
xor
dec
xorb
rorb
dec
inc
imul
and
leave
lds
call
mov
ret
cld
in
popa
inc
repnz
loop
mov
bswap
fsubrl
jmp
pop
push
fmulp
arpl
or
jo
gs
in
sub
lahf
sbb
adc
imul
insl
sub
and
adc
mov
stos
xorl
mov
and
or
xor
adc
jae
aaa
xlat
mov
loope
xor
mov
in
cwtl
mov
scas
pop
dec
mov
and
stos
roll
mov
jno
pop
fistpll
pop
movsl
mov
dec
adc
movsl
sub
dec
inc
jge
mov
aam
aas
pop
leave
inc
push
sub
or
out
out
aad
mov
mov
shr
adc
xor
and
idivb
inc
cmp
xchg
into
incl
in
pushf
adc
mov
pop
pushf
add
inc
jg
or
insl
adc
mov
mov
sbb
cld
xor
mov
adcl
movsl
jnp
mov
loop
jl
fadds
sub
mov
or
int
inc
mov
clc
jne
data16
shrb
add
push
adc
push
adc
aaa
push
and
movlps
sub
xchg
jns
or
mov
mov
in
jl
cli
pushf
aaa
aaa
sub
mulb
mov
mov
dec
daa
sub
pop
ret
ret
pop
dec
in
jl
sub
jo
adc
cmpb
jns
pusha
int
jns
mov
push
xchg
rclb
sti
icebp
pusha
mov
aam
fisubs
lret
jmp
sbb
loope
pop
in
xchg
xchg
mov
inc
and
cld
fisubrs
daa
loopne
aad
in
js
mov
or
xor
push
pop
or
xchg
adc
addps
mov
fmulp
cli
cltd
mov
fdiv
bound
rcrl
xchg
sarb
ss
cmc
mov
dec
je
dec
mov
test
sbb
mov
outsl
xchg
lret
das
jl
pop
shrb
xchg
aad
testl
xor
inc
cmp
stos
adc
sbb
adc
add
mov
test
scas
mov
icebp
mov
test
push
scas
sub
es
cli
subl
mov
mov
sbb
xor
lds
push
sarb
cmpl
push
fcoms
mov
mov
mov
in
fisttps
pop
sarb
outsb
jmp
mov
dec
mov
xchg
and
inc
popa
loope
sub
jge
lcall
popf
push
out
test
aas
pusha
xor
inc
mov
pop
jb
ja
pop
lds
not
mov
int
or
push
ret
jle
xchg
pop
mov
cmp
sub
xchg
sub
imul
in
mov
nop
mov
shll
adc
fwait
cltd
mov
mov
adc
stos
and
sub
adc
fmuls
xchg
fisttpl
xchg
shlb
fs
cmp
dec
das
mov
inc
add
add
fs
stos
push
add
adc
jg
addr16
es
dec
cmp
add
pcmpgtb
lods
jne
sti
mov
lods
hlt
stos
pop
or
scas
test
enter
lcall
mov
adc
int3
xchg
or
jo
push
push
call
push
in
sbb
je
popa
pop
mov
inc
xchg
popf
sbbb
pop
sub
fsts
cmp
cltd
sti
inc
lcall
lret
fucomi
clc
pop
or
lods
cmp
adc
test
mov
xor
mov
std
adc
or
mov
xchg
xlat
pop
xchg
jno
jno
inc
push
adc
push
mov
lods
mov
mov
push
lret
fcompl
rolb
push
or
jecxz
jl
inc
imul
lods
sbb
inc
cmp
gs
cli
call
aaa
inc
pop
gs
sub
adc
roll
inc
nop
loop
jnp
cmpsl
ret
mov
test
dec
xchg
sahf
xchg
sub
xchg
ds
shufps
hlt
cwtl
popf
mov
push
xchg
repz
xchg
jo
popa
fsub
lahf
push
ds
fsubr
stos
mov
out
dec
es
es
lock
push
xchg
xlat
inc
in
xor
mov
and
dec
xchg
jl
pusha
or
out
sbb
dec
inc
js
jae
jno
aas
mov
xlat
push
outsb
or
cmpsb
jp
inc
adc
cmp
dec
daa
jns
cmc
mov
psubsb
cs
lret
or
sbb
add
daa
mov
jbe
mov
jno
and
mov
test
insl
jns
xor
inc
adc
sub
fiaddl
loopne
mov
sub
push
cmp
mov
addl
inc
cmpsl
mov
push
xor
rcrl
xchg
push
mov
cld
adc
dec
jne
popa
xchg
es
inc
int3
fnsave
ret
or
shrb
lea
arpl
je
pop
mov
mov
rcll
je
add
rcll
cs
sub
mov
daa
inc
or
xor
dec
mov
mov
cmc
aas
mov
test
test
test
push
push
mov
xor
sbb
pop
and
mov
sbb
repz
shld
cmp
orb
stos
out
dec
sub
jnp
mov
sbb
in
sbb
sub
imul
pop
jb
or
sbb
cmp
shl
subb
xchg
lods
xorb
stos
jl
rorl
push
xchg
cmp
sahf
outsl
mov
lea
sub
xchg
add
das
xchg
insl
dec
push
sub
out
dec
and
add
add
mov
ret
scas
push
movsb
add
into
scas
pop
insl
dec
mov
sbb
add
mov
ret
inc
xchg
add
inc
out
jmp
testb
add
imul
xchg
nop
xchg
xlat
or
adc
outsl
imul
lret
out
mov
fisttpl
int3
sub
ljmp
or
daa
jns
pusha
test
pop
inc
loopne
movsb
into
push
mov
and
arpl
lods
lea
push
in
aas
pop
gs
sub
sbb
sbb
int3
inc
rcr
xchg
idivb
sub
inc
add
fistps
lret
ds
sbb
jmp
fldenv
jl
cld
push
push
cmp
xchg
inc
xorb
movsb
dec
push
sbb
cmp
int
jg
in
in
sub
enter
shll
in
xlat
inc
fs
mov
movsb
adc
test
add
movsb
ds
ret
call
repz
repz
imul
std
bound
add
loop
sbb
int
inc
js
into
mov
push
dec
or
xchg
jp
inc
lcall
lods
adc
movb
test
sbb
into
cmpsl
into
outsb
mov
push
mulb
xchg
arpl
movsl
ror
xor
pop
xchg
cltd
jae
je
sub
pop
cld
jmp
sbb
xor
out
mov
adcl
cmp
sbb
ljmp
adc
outsb
xchg
xchg
dec
lock
das
fidivrl
in
in
and
mov
fisttpll
cltd
and
ja
xchg
fcom
out
jne
movl
out
push
std
shrb
cmp
out
scas
xor
out
push
xchg
insl
sti
add
cs
nop
mov
xchg
pushf
fs
push
push
mov
xchg
inc
lods
int3
xchg
out
cld
mov
mov
dec
cmc
bound
inc
jns
and
push
mov
lret
test
mov
cs
adc
and
adcb
pop
fcmovbe
mov
xor
sbb
and
mov
cmc
and
pop
insb
lea
test
pop
mov
push
mov
mov
rolb
lds
dec
pop
rorb
out
das
pop
sti
or
push
lcall
mov
lea
dec
dec
sub
mov
rcr
ret
mov
jle
xor
cmp
cwtl
mov
push
mov
hlt
lahf
test
cmp
std
enter
mov
dec
mov
inc
insl
fistps
stos
add
mov
leave
testl
addr16
bound
or
xchg
mov
xor
gs
mov
cwtl
inc
ss
mov
test
mov
cs
push
cs
lcall
jno
aas
call
inc
cli
test
add
movl
nop
out
in
pop
fnsave
aam
xchg
jle
les
and
adc
xchg
dec
xor
dec
adc
fisttpl
jmp
mov
inc
arpl
and
in
dec
jno
mov
mov
pop
pop
sub
nop
jge
xchg
and
jo
cld
xchg
mov
push
cmp
in
pop
or
and
je
lds
fdivl
and
out
cltd
cmp
cltd
imul
jno
fwait
and
sbb
and
loopne
icebp
loope
fldt
icebp
pop
in
adc
push
pop
fstl
dec
jae
hlt
xchg
or
loope
xor
lea
mov
sub
mov
sub
lods
mov
stos
lds
movsl
pop
lds
cli
dec
andb
lock
stc
mov
jae
rcrb
mov
mov
fnstenv
pop
call
mov
or
pop
mov
xchg
dec
in
xchg
xor
xor
pushf
pusha
mov
xchg
mov
sbb
pushf
ljmp
jmp
insb
inc
sub
sbb
fcoms
fwait
sarb
aaa
loop
shlb
mov
scas
xor
psubusb
push
push
jl
xchg
flds
pop
mov
xchg
negl
pop
lods
jle
jo
pop
in
cli
add
inc
add
fcompl
out
mov
push
addl
movsl
stos
outsl
add
sub
mov
inc
aas
ja
sar
mov
lret
xchg
mov
and
sub
pop
lods
add
add
clc
sbb
lock
fs
jnp
sub
pop
loope
dec
ss
arpl
sub
jne
cmpsl
and
sbbb
bound
shrb
daa
rcr
xchg
mov
fs
mov
cmp
jns
adc
cli
push
cmpsl
jb
cmp
stos
divb
dec
int3
sub
in
scas
mov
movsb
sub
mov
mov
sub
xor
cmp
ds
cmp
push
mov
mov
mov
inc
ds
add
jnp
mov
pop
or
daa
xchg
repnz
in
leave
mov
inc
mov
adc
imul
idivl
mov
int
jb
clc
in
aam
sbb
mov
push
inc
scas
adc
sbb
pop
cmp
dec
iret
addr16
or
lds
movsl
jb
popa
popf
xchg
push
out
xor
jle
int3
xchg
out
pop
inc
fstpl
imulb
mov
and
pop
mov
mov
mov
xchg
loopne
rolb
mov
or
rclb
mov
push
xor
dec
jns
push
cld
push
xchg
loopne
es
inc
fwait
or
push
dec
pop
in
rcrl
jbe
jle
sarl
push
xor
lret
mov
iret
xlat
ljmp
arpl
jecxz
push
sub
aaa
leave
pop
hlt
mov
stos
jb
lea
push
mov
loopne
negb
cmpsb
ret
xor
push
inc
push
pushf
mov
and
daa
aaa
pushf
mov
ret
xchg
xor
lahf
cltd
mov
pop
mov
pop
and
divb
adc
iret
mov
cmp
fsubl
test
data16
in
sub
jo
or
mov
push
push
push
add
jb
xor
mov
ficompl
movsb
lea
push
hlt
pop
jecxz
mov
cmp
mov
sarb
add
mov
mul
xchg
fs
push
rcrl
das
add
test
lret
mov
icebp
pop
xorb
js
xor
push
sbb
cld
xor
or
divb
xor
pop
xor
test
push
xor
xlat
adc
in
outsb
mov
pop
dec
jp
pop
dec
js
push
out
lcall
xchg
jecxz
vsubps
xchg
enter
add
and
mov
adc
leave
daa
xor
int
adc
or
mov
test
lods
addl
iret
cltd
mov
cmp
rorl
je
xor
outsl
xor
pop
xor
inc
jecxz
test
cmp
jo
xchg
das
enter
aas
dec
rep
idiv
adcl
jae
pop
push
movsl
pop
xor
imul
dec
mov
outsl
inc
stos
subb
sub
jp
sbb
jb
fs
lea
inc
mov
shrl
sub
mov
inc
add
cmp
pop
dec
lahf
mov
imul
dec
shlb
xchg
adc
cmp
std
inc
or
cltd
dec
xor
sbb
jle
dec
sub
iret
fdivs
pop
stos
push
cld
dec
jmp
and
lcall
mov
mov
push
cli
pop
mov
ficoml
or
xlat
lods
fidivs
lods
lea
push
pusha
inc
inc
jbe
add
in
add
insb
or
cmp
enter
mov
jmp
ljmp
cs
and
fxch
scas
cmp
cli
pop
or
loop
inc
jl
movsl
int3
sbb
sub
or
aam
scas
aam
aaa
cs
stos
mov
ja
mov
pop
sbb
or
jmp
push
js
mov
shrb
xor
lock
inc
addl
sub
in
push
and
js
xchg
lcall
pop
std
rcrb
pop
xor
mov
cli
rorl
lea
lds
int3
les
xchg
cmp
ss
jg
out
mov
mov
sbb
cmpsl
cld
mov
jnp
sub
push
xorl
cmp
pop
sub
mov
fcom
mulb
mov
mov
mov
loop
xchg
cmpsl
roll
cltd
je
sub
clc
xor
inc
lds
push
mov
shrb
movsb
mov
imul
incl
push
orb
sbb
inc
adc
push
xor
mov
sub
xor
inc
lods
andb
bsf
or
inc
xlat
cli
cltd
xor
and
sti
stc
pop
xor
fisttps
adc
das
pop
stos
and
test
mov
mov
in
xchg
pop
out
push
mov
sub
sbb
aaa
jae
sub
int3
dec
aam
stc
roll
stos
out
dec
inc
into
sti
inc
cltd
fisttpl
das
ret
lods
inc
xor
pusha
xchg
daa
clc
sbb
mov
xchg
jb
or
push
imul
xor
cmp
iret
es
ret
adc
dec
jmp
xchg
jmp
xchg
jg
jns
inc
test
outsb
les
outsl
sub
dec
ljmp
mov
cltd
repnz
xorl
shr
js
rorl
push
dec
dec
pop
les
fsin
cmp
test
lret
cmp
pop
dec
cltd
es
dec
stos
cwtl
or
int
shll
mov
nop
xchg
shrb
roll
or
inc
push
mov
out
sbb
mov
add
pop
mov
out
lahf
loop
xor
mov
stos
push
jae
clc
aaa
lahf
dec
sub
hlt
or
jne
mov
dec
data16
cmc
ret
pop
add
inc
dec
das
addl
inc
cmpsb
mov
inc
mov
nop
xor
lock
cli
cmpsl
xchg
dec
sbb
or
das
jo
xchg
in
jecxz
and
roll
daa
movsb
lods
push
gs
dec
push
es
inc
stos
adc
out
iret
test
mov
adc
mov
lods
add
pop
cmp
sbb
lahf
dec
subl
cmp
shl
adc
out
jg
xchg
add
movsl
or
dec
sub
out
in
mov
or
scas
xor
arpl
test
or
scas
lret
cmp
push
addr16
mov
push
mov
jns
aad
and
xchg
push
mov
adc
sub
out
mov
adc
jo
adc
fldt
or
int
pop
add
mov
clc
int3
pushf
jmp
jg
mov
aam
arpl
dec
add
xor
cwtl
adc
hlt
imul
je
cmp
mov
mov
jp
cltd
xlat
xor
mov
outsl
lret
inc
sbb
sbb
testl
roll
inc
pop
cmc
cmovnp
out
insb
testb
lods
ds
lods
mov
in
xor
pop
repz
xchg
mov
repz
sub
adc
mov
sbb
add
sahf
insb
mov
jo
scas
int3
mull
hlt
repnz
lock
xchg
fldt
cmp
pop
mov
loope
xor
fiaddl
mov
stos
scas
hlt
inc
imul
popa
push
pop
cmp
ss
stc
mov
int
lea
mov
pop
std
popf
inc
int3
jp
mov
lret
and
test
mov
and
insl
pop
daa
lods
bnd
cmp
pop
mov
dec
xor
ret
or
outsb
movhps
pop
lock
push
cmp
mov
mov
or
xor
pushf
lods
mov
sub
xor
cmp
daa
and
jb
pop
adc
enter
xchg
mov
add
add
rcl
pop
ljmp
sbb
mov
push
pop
mov
and
gs
push
mov
push
or
fisttpll
adc
inc
loopne
shlb
mov
es
pop
ja
sbb
das
and
push
push
jnp
in
fldcw
in
rcrl
jne
movsl
pop
cmpsl
scas
popa
das
jge
lods
inc
das
enter
js
mov
rorb
mov
xorl
mov
add
addb
ja
and
daa
pop
loop
test
xor
cmp
icebp
and
or
cmp
call
push
mov
iret
sbb
mov
push
pop
push
xorl
dec
push
mov
push
add
add
pushf
orb
pop
loope
xor
orl
mulb
cwtl
mov
pushf
ja
pop
xchg
lods
or
push
xchg
pop
enter
xor
xchg
mov
test
jg
es
and
lock
mov
pop
add
push
cmp
cmpsl
jmp
sub
dec
push
jo
popa
jo
in
dec
cmp
sub
loop
fnsave
fisubs
add
pop
shll
mov
xor
in
ja
pop
and
pushf
rorb
xchg
mov
cmp
xchg
cld
and
aad
je
shrb
mov
in
out
xchg
negb
out
test
push
or
fstpt
imul
push
xor
xchg
dec
and
mov
push
fs
sub
lods
setg
sub
out
ja
mov
cmp
push
das
ret
mov
cmp
pop
mov
scas
cld
int3
test
fisubrs
pop
das
dec
inc
xchg
jge
mov
lahf
imul
adc
inc
mov
sub
movsl
and
or
lret
or
xor
shlb
faddl
call
cli
lcall
cwtl
stc
sbb
cmp
inc
push
sbb
add
xor
dec
testl
cwtl
clc
repz
nop
movsb
add
lods
adc
xor
dec
adc
ja
inc
sub
icebp
pop
mov
xor
jge
cs
xlat
rep
cmp
imul
and
cmpsb
sbb
xchg
outsl
xor
push
and
sub
inc
repz
mov
rcl
add
arpl
ljmp
or
lret
js
push
jecxz
inc
sub
js
aam
mov
jne
pop
xor
dec
jnp
cmpsb
ljmp
popa
push
jb
ja
pusha
in
in
faddl
sbb
mov
sbb
mov
jno
call
gs
push
sbb
add
gs
xlat
mov
adc
loop
jmp
sbb
cmp
xchg
cmc
shrb
push
rcl
cmp
rcrb
push
scas
loopne
mov
lahf
fdecstp
data16
pusha
fdivs
jbe
push
jge
or
arpl
sbbb
sub
sub
add
inc
sbb
jne
or
adc
arpl
or
adc
repz
es
mov
jp
int
test
add
lods
out
aam
jle
out
pop
stos
cmp
or
or
aas
hlt
bound
cmp
sub
push
mov
dec
out
fldt
jbe
ljmp
push
fisubs
out
ds
out
adc
add
jnp
cld
ds
push
adc
in
shlb
sbb
fistl
adc
xchg
pushf
insb
pop
pop
mov
dec
inc
or
adc
mov
cltd
pop
or
push
out
dec
mov
cmpsl
fxch
or
and
sbb
mov
cmp
inc
and
mov
test
jg
mull
mov
or
jge
adc
loopne
cs
xchg
push
cwtl
shlb
icebp
ljmp
lds
sarb
lahf
pop
pop
push
adc
dec
inc
into
imul
mov
notl
in
sbb
lret
call
ror
or
nop
test
sbb
xchg
mov
hlt
addb
ljmp
push
pusha
add
pop
gs
mov
fistps
jnp
js
lahf
inc
int
call
cmpsl
cmpsb
jb
push
scas
cmp
add
cltd
sub
cltd
push
aad
jg
xor
xchg
cli
sub
and
cmp
fsubr
je
jecxz
dec
mov
pop
mov
sbb
into
cmc
movsl
clc
push
int3
movsl
test
mov
xchg
aam
sbb
enter
jno
mov
in
cmp
mov
in
dec
push
xchg
mov
push
xchg
gs
lret
sub
cli
pop
and
outsb
out
jecxz
pop
xchg
and
test
in
adc
xor
xor
stos
inc
or
xor
mov
sub
das
push
adc
test
lds
add
fisubrs
rclb
addr16
inc
fimuls
test
insb
call
hlt
loope
cmp
xor
ret
scas
inc
bnd
or
mov
push
push
stos
jne
sbb
sub
jns
ret
xchg
dec
jge
enter
aam
fcmovne
sarl
inc
mov
xor
mov
jb
ss
loopne
lock
cmc
shlb
add
add
js
data16
mov
cltd
mov
dec
insl
and
daa
jb
loop
jg
inc
ljmp
pop
int
clts
rcrb
int3
pop
pop
out
push
imul
and
or
sbb
cmpsb
popl
sahf
and
pop
outsb
push
pushf
sahf
mov
scas
jns
mov
mov
das
popf
jae
test
in
lcall
nop
mov
out
hlt
push
xchg
fst
dec
adc
jecxz
lret
lock
add
push
fistpll
xlat
mov
cmp
jnp
mov
jne
sti
aas
fldcw
sub
pusha
push
inc
inc
lahf
xchg
std
cmpsl
jbe
outsl
mov
jae
xchg
js
ss
out
rcll
push
cmc
jb
test
scas
shlb
rcr
inc
hlt
xor
test
mov
mov
icebp
aam
adcl
cmc
xchg
and
lea
push
xchg
fwait
in
pusha
and
mov
dec
push
mov
inc
and
addr16
sbb
mov
pop
stos
lods
push
dec
mov
js
sarl
aaa
dec
rol
aam
xor
dec
lds
push
jge
test
pop
inc
xlat
jge
mov
rolb
dec
repnz
push
cmpsl
xchg
hlt
jp
push
insl
mov
ljmp
dec
fimull
mov
sbb
lods
mov
shrb
rcll
adc
test
test
lret
mov
mov
mov
in
lods
cmp
cmc
incl
sbbb
adc
mov
push
add
cwtl
jle
aas
and
aad
push
fs
fs
test
sbb
sbb
mov
and
lret
push
ss
add
in
sub
or
cmp
cld
dec
ja
xchg
mov
aad
mov
lock
icebp
in
xchg
xor
loop
mov
inc
xor
cwtl
sub
mov
push
and
xchg
push
pop
rol
push
loopne
insl
out
fisttps
sahf
outsl
jae
xchg
jge
aas
imul
bound
scas
push
dec
or
add
cli
xlat
mov
loope
daa
xor
repz
sub
fidivs
mov
xchg
mov
flds
cmpsb
repnz
mov
filds
xor
sbb
xor
arpl
sahf
loope
inc
dec
aam
insl
or
fcoms
cmp
popa
jl
dec
cmpl
pop
jns
fs
xor
pusha
dec
and
jg
cli
mov
and
xor
test
je
push
add
cmp
lahf
fsubs
call
jmp
test
aam
mov
mov
pop
unpckhps
inc
stos
lea
andb
mov
popf
jl
add
mov
mov
faddp
add
sub
gs
int
popf
add
cmpsb
sbb
in
mov
jle
das
movsl
loopne
mov
ja
cltd
stc
cmp
fwait
movsb
andb
sbb
xor
inc
movsl
je
hlt
jg
xchg
or
dec
jg
sarb
xchg
out
and
jp,pt
adc
nop
mov
add
jge
scas
push
aaa
shrb
hlt
pushl
icebp
pop
insb
push
sbb
xchg
lods
mov
mov
fsts
adc
pop
lahf
out
rep
cmpsb
add
fs
pop
popa
jmp
imul
mov
mov
mov
push
mov
sahf
jmp
mov
in
mov
cld
insb
mov
jg
outsb
adcb
mov
pop
lret
stos
jbe
cmpsl
push
call
jb
rorl
inc
jle
cmpsb
mov
inc
sub
push
jle
or
cmpsb
jns
cmp
or
cmp
fidivs
std
xchg
pop
jne
mov
jo
andb
aam
xchg
jle
xchg
inc
loope
xchg
xor
imul
mov
das
sahf
pop
pop
int
inc
push
ljmp
cmp
jge
jbe
out
and
adc
int
cmp
iret
inc
sub
ds
dec
int3
xchg
or
icebp
rcrl
mov
mov
movb
mov
xchg
inc
pop
mov
add
jge
push
pop
mov
and
ds
std
xor
pushf
int
cld
mov
mov
popf
sahf
sbb
sub
cmp
adcl
daa
jno
icebp
gs
ja
faddl
pop
js
rclb
push
dec
jmp
push
sar
addb
mov
ja
fsubrp
in
cmc
sbb
add
push
fimull
and
xor
fildl
into
sbb
add
adc
mov
lahf
and
mov
imulb
jmp
or
stc
dec
sub
cli
int3
jle
xchg
int
mov
mov
xchg
mov
xchg
sbb
dec
mov
xchg
jge
shl
pop
mov
adc
mov
repnz
xchg
sarl
or
adc
inc
mov
mov
in
mov
mov
out
or
xor
mov
sub
or
xchg
loop
xchg
sbb
jns
adc
scas
xchg
test
pop
daa
sbb
call
repnz
test
jg
pop
shlb
xor
jmp
pop
inc
jmp
push
lret
pop
jge
push
jge
les
cld
sbb
pop
add
jp
sub
jae
stos
popa
mov
mov
pop
inc
dec
xchg
movl
jbe
pop
mov
out
sti
imul
data16
xor
clc
adc
cmc
mov
mov
incb
in
or
scas
fldl
dec
sti
popl
inc
int
jo
add
inc
xchg
shr
inc
or
push
inc
daa
mov
adc
mov
arpl
lret
sbbb
sub
int3
data16
xchg
push
cld
aas
mov
jl
imul
outsl
mov
mov
push
jge
mov
pop
orb
or
xchg
jecxz
test
shrb
call
and
mov
outsl
or
inc
shrb
clc
sbb
sbb
add
rolb
push
es
and
lods
mov
dec
xchg
test
xor
adc
adc
call
mov
mov
aam
frstor
jp
popf
rcrb
cld
dec
sbb
dec
mov
cmp
mov
adc
out
mov
nop
pop
and
jbe
nop
jns
inc
xchg
ret
push
stos
mov
pop
push
sbb
cmp
xor
xchg
leave
test
cmp
cmp
cmp
iret
lea
mov
cltd
insl
into
dec
xor
sbbl
test
cwtl
sbb
pop
jle
jecxz
insl
insl
fdivrs
xchg
loopne
in
dec
mov
clc
jae
lods
adc
fcomps
mov
aas
and
das
popa
sub
jge
sbb
pop
cmp
and
repz
mov
out
scas
scas
xor
dec
pop
leave
sahf
aam
pop
mov
mov
sbb
sbb
sbb
lahf
addr16
adc
addr16
popf
add
pop
orb
testb
fldt
and
dec
xor
or
inc
loopne
movsb
sbb
int
jno
push
enter
cmp
out
insl
sub
dec
fs
mov
cmp
sub
jnp
leave
ret
adc
lea
add
sbb
ret
adc
or
insb
bound
adc
jecxz
cmpsb
cmp
mov
mov
cmp
push
stc
pop
cld
pop
aas
inc
movsb
mov
in
ficoml
xor
sub
ffreep
cmp
es
call
sub
mov
cltd
ljmp
aad
xor
or
repz
es
pop
jl
mov
cmpsl
jp
int
adc
sbb
xlat
push
lcall
xor
stos
std
jl
pop
stos
mov
mov
in
int
fs
jp
mov
jl
lea
aaa
out
test
push
lods
lahf
jnp
dec
aad
out
mov
in
pop
fldenv
std
and
sbb
popa
clc
and
imul
sbb
shlb
fsubrp
jb
xchg
or
jg
jge
inc
sbb
xchg
pop
xchg
out
imul
fldcw
add
push
insb
mov
and
xor
ficompl
pushf
fs
adc
cmp
push
cmp
les
jno
add
add
push
push
fistpl
xor
test
out
xlat
ja
sti
pop
sbb
jnp
xor
pop
push
sahf
sahf
loopne
xchg
jo
cmp
enter
inc
into
loop
xor
mov
add
bound
sub
push
fnstcw
pusha
mov
and
insl
pop
cmpsb
dec
pusha
sbb
cmp
mov
jbe
jl
or
adc
out
xor
adc
push
and
sub
mov
ja
cmp
incl
xchg
hlt
cmp
add
fwait
jecxz
testl
pop
pop
or
xchg
jbe
xchg
xchg
pusha
mov
lcall
dec
inc
sbb
xchg
push
cmpsl
xchg
clc
mov
jecxz
out
ljmp
dec
pop
cmp
and
sub
pop
shl
inc
add
gs
hlt
pop
pop
push
cltd
test
mov
jge
pop
cld
dec
imul
mov
xchg
cld
dec
fnstcw
add
aas
jl
cmp
jmp
adc
dec
adc
mov
jnp,pn
dec
sub
jl
aaa
scas
xor
popa
sbb
xchg
push
mov
adc
hlt
ss
xchg
dec
xchg
call
jg
sti
ljmp
inc
adc
sti
movsb
adc
popa
ja
mov
cmp
dec
and
sti
inc
inc
out
mov
out
mov
mov
sbb
aaa
repnz
fnstcw
push
fdivrp
jno
lret
jo
pop
fwait
into
cmp
jmp
bound
xchg
cmp
es
and
into
sub
mov
sbb
pmaxub
fwait
add
pop
outsl
scas
test
fisttpl
into
inc
mov
ja
cmp
xchg
dec
xlat
test
imul
dec
sbb
push
call
mov
hlt
je
ret
lock
stc
push
fsub
dec
out
dec
dec
stos
lahf
mov
out
cli
pop
mov
or
xchg
mov
fcomps
movsb
clc
mov
jmp
pop
sub
cli
sub
sbb
jne
mov
cltd
and
das
or
aas
cmpsl
mov
lock
gs
jae
shrl
adc
mov
cli
lcall
inc
mov
and
shr
adc
out
mov
scas
loopne
dec
imul
idivl
push
pop
gs
lods
jnp
mov
pop
mov
pop
xchg
cmp
xchg
mov
adc
pop
pop
sbb
nop
jmp
shl
imul
int3
pop
xor
jmp
imul
or
movsb
ror
pop
mov
repz
pop
aas
pop
jmp
xor
nop
jae
dec
nop
call
sahf
mov
pusha
outsl
sti
ret
fs
movsl
xchg
push
sub
andl
enter
fwait
nop
mov
cltd
scas
shrl
inc
jmp
or
pop
xchg
data16
mov
add
xchg
daa
inc
out
jp
sub
in
xor
je
icebp
inc
insb
pop
inc
bnd
mov
mov
mov
push
int3
scas
shlb
popa
hlt
jg
sub
cmpsb
xor
iret
mov
inc
insb
sub
pop
pop
imul
shlb
repz
cmp
test
pop
add
sti
jb
sbb
fs
mov
inc
xchg
out
pop
lods
push
xchg
enter
lcall
fisttps
push
loopne
int
pop
or
mov
enter
push
int3
out
or
ret
cwtl
bound
push
sbb
sahf
jo
lods
out
mov
cmp
test
xor
sbb
lahf
xchg
aaa
xchg
stos
sub
fcoml
cltd
pop
fs
pop
push
je
cld
sbb
push
mov
popf
adc
pop
stos
cmpsb
xchg
sbb
dec
pop
push
les
cs
and
and
inc
cmp
cmp
pop
repnz
dec
jbe
sahf
loopne
xor
shlb
ss
sub
mov
jb
sbb
popf
mov
aas
or
xor
adc
pop
inc
and
add
ret
xor
ljmp
add
or
fs
mov
sbb
or
mov
loop
dec
mov
add
rol
das
mov
mov
cmp
cmpsb
sbb
adc
movsl
fisttps
js
add
ficomps
inc
js
fisubrl
adc
adc
ja
pop
inc
push
and
adc
into
ljmp
fnstsw
test
jmp
fcom
xchg
jg
sbb
mov
push
ret
stc
frstor
or
insl
add
push
and
push
jp
popf
sub
in
xchg
jmp
adc
xor
cmp
lds
mov
xor
pop
pop
lds
xor
xor
push
scas
insl
sub
xchg
push
insl
cmpsl
dec
cmp
mov
loope
pop
push
lds
cmp
fildll
push
and
dec
lret
addr16
add
xor
out
mov
push
fistpl
or
push
jge
mov
xor
jno
pop
inc
mov
sub
test
mov
jns
add
xor
sub
add
mov
clc
lret
pop
jecxz
and
aaa
xchg
cmpsl
fldcw
dec
or
ja
loopne
shrb
js
adc
xchg
imul
dec
inc
mov
push
push
rcl
xlat
cmc
test
ret
inc
mov
stos
and
add
mov
inc
cmp
pop
in
add
fistl
mov
aam
das
inc
stos
orb
aas
xchg
mov
hlt
pop
sub
xchg
mov
or
lods
idivb
pop
mov
xlat
sub
push
add
sub
rcrl
adc
mov
inc
popf
imul
rcl
les
insl
cmp
pop
call
and
mov
hlt
call
pop
aad
push
ja
sahf
adc
jbe
testb
jle
add
es
xchg
lock
cltd
sub
sbb
mov
fcompl
sbb
fwait
jg
sbb
push
xor
inc
push
rcrl
mov
lahf
setb
ja
cmpsl
sub
jmp
and
in
fistpll
stos
adc
mov
setbe
outsl
div
and
mov
push
mov
jne
ljmp
sub
pop
call
arpl
pop
mov
sbb
cmp
movsb
dec
mov
cmc
les
fbld
xor
inc
js
push
cwtl
pop
aas
loop
ja
sub
mov
dec
rol
push
pop
dec
mov
bnd
into
notb
and
nop
fs
sbb
cltd
mov
pop
aad
dec
imul
push
mov
adc
insb
lahf
ja
pusha
cmp
push
mov
mov
addr16
fsubl
push
fsubrs
xor
insb
flds
movsb
mov
inc
aas
sbb
jne
push
ljmp
or
int3
aam
xor
jp
js
jecxz
incl
and
fwait
push
in
mov
lock
bnd
push
pop
call
xchg
int
mov
pop
or
mov
dec
xchg
push
lds
imul
int3
jmp
mov
pushf
js
push
pop
cwtl
lods
shll
pusha
mov
pusha
adc
mov
movsl
mov
push
hlt
jp
xor
lods
ret
int3
cli
adc
xor
bound
pop
and
dec
xor
ret
out
dec
sbb
aam
adc
xchg
jns
int
pop
test
add
inc
std
call
rcpps
imul
push
sbb
sarl
leave
inc
mov
mov
out
mov
scas
ss
ja
jns
sub
out
xor
subl
ljmp
sbbl
pusha
inc
or
and
push
out
sub
cwtl
jae
mov
xchg
cltd
or
bswap
push
lods
leave
jp
rcll
cli
or
inc
rorb
dec
nop
outsb
ds
jo
push
ja
xor
mov
jge
data16
sbb
shr
push
and
ljmp
sbb
mov
mov
jle
sbbl
ja
add
adc
arpl
dec
push
lods
out
test
cmp
in
daa
mov
leave
js
aas
mov
ss
movsb
imul
or
data16
cmc
arpl
movsl
inc
adc
or
mov
loopne
ss
xor
mov
add
xor
rcr
inc
and
sub
dec
inc
xchg
insl
lods
lock
fwait
and
mov
ljmp
fimull
sub
subb
adc
test
and
inc
jecxz
cmp
arpl
in
outsl
insb
shrb
xor
out
cmp
push
mov
xchg
hlt
push
mov
fnstsw
or
lea
roll
cmp
mov
cld
cmp
pop
cli
in
cmp
insl
cmp
push
stos
jno
push
lret
pop
inc
sub
adc
add
mov
sbb
cmp
and
ror
mov
int3
repnz
inc
out
push
xor
mov
lods
xor
imul
adc
std
pop
loop
and
addr16
and
sub
xor
icebp
fstpt
mov
inc
jno
cld
rclb
lea
out
lea
jle
cmpsl
dec
test
xchg
arpl
lret
and
pop
xor
test
test
out
sub
mov
xchg
cmp
cli
gs
cs
adc
mov
std
jmp
fldl
mov
push
adc
mov
into
jnp
lcall
cmp
cmc
cmpsb
in
jnp
lods
das
adc
ja
and
rclb
or
ja
loopne
fs
das
movntps
aam
mov
mov
jge
test
stc
sub
outsb
fmull
aam
dec
pop
or
shll
ja
sub
icebp
xchg
mov
sbb
and
mov
js
pop
test
rorb
lahf
jmp
cld
loop
icebp
lock
je
push
aam
jnp
or
aam
cwtl
inc
add
add
fs
cmp
hlt
inc
cmp
movsl
arpl
stc
andl
dec
ljmp
jmp
fs
dec
in
push
sahf
imul
sti
out
xor
sub
jmp
cmpsl
movsl
les
jno
andl
pop
fcomps
adc
mov
cs
mov
lods
mov
pop
loope
test
clc
sub
out
jecxz
repnz
pop
mov
push
call
loop
les
pop
pushf
dec
lods
pop
arpl
mov
mov
mov
call
mov
pop
fs
xor
and
pop
iret
jbe
mov
and
into
inc
dec
fstps
jg
jne
aas
mov
xor
cmp
xor
dec
out
aas
aam
add
test
inc
adc
jo
lds
cltd
adc
mov
icebp
loop
sbb
mov
fstps
or
adc
adc
nop
iret
push
fbstp
push
mov
push
test
xchg
mov
add
xlat
cs
dec
hlt
addl
inc
and
inc
shrb
repz
arpl
outsb
fnstcw
mov
div
leave
pmulhw
mov
push
outsb
cmpb
icebp
movsl
in
in
push
andb
aad
addr16
outsb
sub
pop
or
mov
push
hlt
mov
jp
lock
mull
in
push
cmpsl
add
je
sbb
pushf
inc
add
cmp
pop
xor
jbe
nop
mov
scas
add
test
mov
push
cmp
out
iret
pop
push
js
addr16
xor
cmp
mov
mov
add
xor
xor
sub
cwtl
gs
pop
sbb
inc
shll
popa
mov
ficoms
and
mov
xchg
inc
add
shrb
int
scas
je
cmp
in
sub
icebp
out
sbb
fstps
adc
sbb
aad
adc
incb
inc
add
in
sti
fimuls
lret
xchg
imul
dec
orb
jg
jp
pop
test
xchg
pop
mov
clc
outsb
inc
push
dec
sahf
pop
in
push
inc
lods
lret
or
arpl
push
iret
inc
push
fsubl
mov
test
cltd
mov
insl
jbe
fs
mov
lds
sbb
mov
std
adc
bound
das
xor
push
sbb
sbb
xor
mov
jno
stos
cmp
adc
push
mov
inc
data16
sbb
xor
out
push
xchg
ja
cli
scas
mov
xchg
addl
inc
test
hlt
xchg
leave
mov
mov
cmp
mov
or
push
inc
outsl
sbb
loope
adc
add
es
xchg
inc
cmc
lcall
jnp
shr
pop
mov
outsb
sbb
outsl
push
mov
pop
mov
push
mov
int3
mov
lcall
arpl
pushw
inc
mov
cmp
mov
inc
es
or
movsl
cmp
bound
ss
lret
loope
movswl
inc
jnp
jns
aam
lea
ds
ret
push
jae
jns
dec
cld
xchg
pop
and
and
out
aam
in
dec
inc
ret
sub
push
in
pop
cs
xchg
inc
lahf
inc
fcomi
mov
xlat
adc
imul
fsubl
inc
mov
movsl
stos
add
pop
dec
pop
push
xchg
xchg
fnstcw
cmp
in
jae
rclb
or
push
xorb
and
cwtl
jp
jno
fcompl
lock
mov
pusha
ss
pushf
adc
das
stc
jb
loopne
sahf
cli
jns
test
jle
xor
fbstp
imul
dec
daa
add
xor
dec
pop
xor
sbb
sub
jne
cs
inc
arpl
adc
mov
and
bound
or
scas
ret
cli
lea
int
inc
cs
sbb
pop
adc
sbb
xlat
test
sub
pop
aad
pop
xor
fcmovnu
cld
adc
jmp
adc
jp
int
imul
push
mov
adc
mov
fnstsw
rcll
xlat
xchg
dec
jg
cmpsl
mov
shl
ret
cwtl
pop
push
lahf
sub
mov
mov
push
mov
sub
shrb
xchg
pop
sbb
fptan
inc
insl
insb
mov
stos
shlb
pop
sub
pop
xchg
js
inc
std
rcll
aaa
rcr
lock
sbb
iret
cmp
sti
out
aam
mov
adcb
lods
or
adc
jo
dec
movsl
inc
xchg
xor
fisubs
stos
lods
cmp
sbb
jbe
xlat
fdivrl
movsb
fnstenv
test
push
mull
xor
pop
sbb
dec
in
daa
or
xchg
iretw
into
andl
jecxz
lods
cld
adc
insl
stos
jo
shrl
scas
mov
lret
add
pusha
jnp
adc
pop
jnp
sbb
cltd
cmp
out
cmc
mov
push
jo
vmlaunch
addl
fsubs
push
sti
xor
inc
pop
dec
dec
mov
cwtl
inc
inc
ret
cmpsb
mov
sub
mov
roll
ficoms
or
les
adc
jno
pop
dec
mov
stos
out
sub
push
mov
dec
ret
dec
push
js
cli
mov
jge
andl
xor
mov
jmp
loop
inc
sub
push
push
rol
mov
xchg
mov
das
pop
jge
pop
add
enter
sbb
sbb
push
imul
movsb
es
lcall
jb
xor
mov
pusha
popa
jb
movsl
sub
leave
and
ret
clc
adc
loopne
mov
dec
test
sbb
push
mov
fnstsw
cmp
sub
je
sbb
mov
inc
mov
daa
or
mov
push
lret
inc
out
push
shlb
sbb
mov
dec
sbb
inc
outsl
mov
cmp
push
scas
mulb
in
push
std
mov
mov
das
xchg
push
push
js
lcall
daa
xchg
or
lret
out
add
pop
add
pop
mov
cmp
movsl
leave
inc
jae
addr16
lcall
insb
das
pop
mov
push
leave
add
cmc
mov
inc
push
adc
sarb
scas
or
and
mov
pushf
insb
hlt
xor
adc
ffreep
in
ss
repz
ja
lahf
mov
stc
fmull
sub
sbb
push
clc
or
sbb
lock
hlt
fadds
js
inc
addr16
xchg
aad
int3
adc
dec
inc
stos
andb
sbb
mov
gs
sbb
or
jle
jge
mov
fdivrs
add
sti
sbb
mov
mov
std
pop
test
mov
inc
daa
and
pop
inc
mov
popf
repnz
cmp
shr
in
mov
cmp
pop
mov
push
cli
cmp
xchg
and
dec
push
in
gs
adc
pop
push
mov
push
cmp
add
out
fiadds
ljmp
and
lret
sbb
outsl
mov
add
cmpsb
inc
or
sub
xchg
pop
std
scas
pop
sbb
xchg
scas
fdivrp
push
jmp
jge
add
xchg
mov
pop
mov
cmpsl
push
les
cmpsl
inc
jns
xor
das
push
jg
inc
ficoml
ja
addr16
inc
loope
repz
push
icebp
inc
test
ret
inc
in
inc
adc
fisubrs
out
mov
cmc
push
xor
xchg
lcall
adc
xor
into
das
in
push
sbb
dec
daa
push
popf
aad
outsl
add
jno
nop
sti
inc
jnp
arpl
lock
pop
mov
iret
inc
or
lds
xlat
adc
xor
xchg
or
mov
push
add
inc
mov
lret
sbb
xor
xor
fnsave
inc
daa
out
push
add
ds
cmpsb
cmp
sbb
push
movsb
scas
enter
jno
in
jg
ja
mov
sti
repz
pop
hlt
arpl
mov
sub
testb
dec
or
sbb
stos
ror
adc
aaa
push
mov
and
push
or
mov
roll
cwtl
das
sub
and
loope
mov
scas
test
sbb
mov
push
mov
xchg
in
negl
pop
mov
and
mov
pop
pop
sbb
dec
jb
lods
je
sub
lcall
jnp
sarl
dec
imul
fwait
clc
adc
jmp
stc
jae
cmp
in
ljmp
push
sbb
pop
fistpl
lahf
xchg
sub
jle
mov
pop
push
in
aam
mov
js
or
xchg
stos
mov
mov
imul
movsb
cwtl
or
sbb
jmp
sbb
popf
jbe
lock
cmp
mov
das
pop
imul
mov
add
or
aam
addb
cmp
or
and
rol
mov
cmp
dec
add
cmpb
cmp
imul
enter
dec
fmul
inc
inc
and
add
sub
ja
sub
mov
in
add
out
mov
adc
dec
fisubrl
add
xchg
xchg
jbe
pop
sub
jbe
imul
in
lret
xchg
loopne
fildll
dec
loop
repnz
dec
xchg
mov
mov
xchg
pop
xlat
xlat
mov
or
mov
xchg
xchg
mov
dec
bound
mov
xor
pop
fstl
fisubl
clc
mov
sub
fsubr
xor
rorl
arpl
cmpsl
inc
addr16
shl
dec
pop
cs
repnz
hlt
sti
lock
ja
ja
mov
pop
mov
mov
cmp
and
pop
push
adc
jbe
scas
sarb
xor
imul
xchg
mov
mov
or
pop
mov
xchg
xchg
stos
data16
and
pusha
shll
lods
mov
lea
cltd
lods
jbe
push
adc
inc
sbb
jno
or
adc
jge
dec
mov
and
mov
lds
ss
push
aaa
pop
add
shrb
and
pop
add
xor
push
sub
xchg
add
or
sarb
in
dec
add
mov
cli
cmp
push
cmp
push
xor
pop
inc
lods
mov
bound
push
enter
pop
gs
mov
jp
mov
mov
int3
call
pop
jae
iret
lret
cmpsb
cmp
insb
test
repz
mov
mov
xlat
mov
jge
mov
or
or
sub
bound
test
addr16
hlt
adc
xor
push
or
sbb
call
aad
scas
shl
cmc
stos
adc
lcall
inc
je
leave
lea
sahf
push
sub
jno
mov
cmp
mov
popa
jno
cld
or
js
loope
add
xor
andb
dec
ret
js
cmpl
dec
movb
ret
out
movsb
inc
mov
daa
rorl
add
fmuls
fldt
mov
je
icebp
add
xchg
sub
lock
out
repz
push
mov
ja
push
lcall
jecxz,pt
sub
aas
enter
jne
mov
xchg
sahf
pushf
test
inc
sti
shlb
jmp
mov
mov
fistpl
xchg
lcall
sbb
mov
lds
push
cmp
shll
fistl
inc
rol
mov
mov
cli
mov
inc
sub
fimuls
mov
dec
stos
aam
mov
inc
xchg
cmp
and
mov
xlat
mov
jno
xor
test
dec
inc
and
fsts
sti
out
rcrb
cmpsb
inc
and
pop
test
nop
mov
lahf
pop
cwtl
fildll
nop
and
sti
test
out
xor
dec
xchg
addr16
sbb
mov
out
sbb
icebp
cwtl
stos
xchg
add
movsb
das
pop
lods
pop
adc
or
add
or
jne
and
in
aam
dec
add
add
mov
cmc
add
addb
or
sahf
xchg
dec
rcrb
imul
add
lea
mov
jne
sub
setge
fsubp
mov
mov
cmp
push
aam
mov
jbe
loopne
std
popa
je
xchg
inc
test
insb
gs
push
push
mov
iret
and
dec
xor
xchg
fsubp
pusha
jbe
jb
adc
shl
scas
jne
call
or
das
mov
inc
rclb
int3
xchg
std
leave
xor
cmp
mov
imul
pop
xor
out
popa
adc
and
xor
mov
fwait
push
fisubrl
cmp
xchg
xchg
dec
jg
into
outsb
jno
cmp
test
sub
stc
mov
lret
add
mov
int
clc
mov
out
mov
xlat
inc
test
mov
xchg
add
mov
cmp
dec
sub
dec
xor
test
xchg
scas
cmp
mov
ss
mov
xor
add
std
mov
sub
dec
les
dec
lds
adc
push
mov
sbbl
lods
stc
sbb
and
pop
dec
int3
iret
fs
int
xchg
adc
adc
dec
stos
sbb
out
shl
mov
jns
hlt
fsubrl
adc
and
pop
sti
sbb
enter
cmp
in
repz
std
cmp
fimull
pop
lods
fmul
outsb
push
mov
sbb
dec
jo
or
repnz
jno
sarl
fnstcw
xor
in
mov
hlt
or
das
push
adc
dec
or
add
dec
mov
push
xchg
inc
pop
xchg
mov
xchg
jle
out
sbb
je
icebp
test
fildll
in
movsl
scas
cmpb
loopne
lea
push
push
add
pop
aam
and
scas
xchg
ret
outsb
ret
pop
aas
ss
cmp
mov
fdivr
push
andb
push
jb
jmp
subl
mov
std
inc
cmpsl
mov
push
xchg
jo
jb
fyl2xp1
ss
xor
push
mov
std
nop
arpl
aas
stos
sti
shlb
sub
inc
pushf
adc
mov
sub
adc
lar
cmp
test
roll
push
loope
pop
lods
leave
xchg
or
inc
insb
ficomps
cmp
imul
rol
dec
fimuls
into
mov
adc
push
jp
fsts
subl
rcl
aaa
mov
das
cmpl
xchg
scas
xchg
xor
and
iret
mov
mulb
xor
addr16
or
scas
cs
or
dec
mov
xor
ja
ljmp
mov
inc
add
add
or
sbb
lret
or
sub
sub
rcrl
dec
xchg
adcb
pop
cltd
lea
int3
es
loop
sub
fimuls
repnz
mov
int
aad
mov
stos
scas
lcall
or
ljmp
daa
sbb
shl
and
xchg
je
xabort
push
cmp
je
in
scas
push
sub
sub
pop
mov
adc
xor
xchg
ds
xor
in
nop
push
pop
inc
xchg
jo
push
push
imul
push
lret
dec
inc
or
daa
fs
push
js
fwait
scas
xchg
adc
mov
scas
jae
jge
jl
mov
add
mov
jno
in
lret
sti
and
in
outsl
dec
out
fwait
or
cmpb
fldt
in
cmp
sahf
or
andb
mov
and
ret
xchg
sub
add
mov
jge
or
add
call
adc
mov
mov
mov
loope,pn
leave
std
adc
pop
loope
mov
push
dec
cmp
cmpsl
pop
enter
std
fidivrl
sub
popa
push
mov
cmc
pop
mov
pop
xchg
xchg
ja
aaa
je
f2xm1
sahf
xor
mov
xor
in
gs
xchg
dec
push
les
dec
out
ret
inc
mov
lods
lods
jno
mov
adc
jmp
push
dec
add
ds
push
stc
cltd
jno
hlt
icebp
push
pop
aaa
push
add
gs
addb
lret
out
fs
je
in
lods
nop
mov
dec
lods
bound
and
mov
xchg
insb
repnz
lahf
mov
iret
mov
push
movsb
repz
mov
lea
popf
popa
sub
pop
mov
pushf
cltd
cmp
fldcw
loopne
shlb
cmp
in
pop
mov
scas
jg
aad
pop
add
xchg
div
out
addr16
mov
adc
cmp
jnp
fmull
pop
loop
cli
popl
jp,pt
pop
dec
add
mov
xor
mov
insl
bound
inc
out
xchg
cs
xchg
ljmp
pop
dec
inc
dec
cli
insb
fucomip
xchg
adc
add
jg
pop
scas
dec
mov
xchg
add
jg
sub
add
cmp
sub
lock
mov
sbb
cmc
adc
insl
dec
lods
lock
and
lds
xor
dec
mov
mov
push
or
mov
iret
jb
and
xor
jg
and
sub
aad
and
push
inc
int3
rcrb
push
inc
rcrb
push
cmp
arpl
in
faddl
push
es
adc
out
xchg
into
outsb
enter
adc
pop
lock
mov
and
adc
xor
ret
xor
cmc
loop
movb
add
rcrl
xchg
test
pop
lea
mov
in
or
cmpb
mov
mov
xlat
jl
and
mov
add
rorl
jns
cmc
sub
push
stos
jno
jno
xchg
jae
and
mov
mov
mov
mov
insb
out
das
icebp
int3
xchg
fsubs
movsb
mov
into
dec
inc
popl
mov
cmpsb
imul
outsb
ds
loopne
xor
pop
mov
mov
push
xchg
scas
adc
xchg
push
imul
out
clc
sub
out
fimull
jnp
aad
inc
insl
inc
je
inc
addr16
out
clc
or
movsb
mov
inc
in
jle
outsl
push
fildll
in
sub
mov
cld
popa
mov
sub
jmp
iret
xor
in
lods
mov
pop
jmp
lret
sbb
xor
out
xor
addr16
sub
xchg
lret
mov
aam
lods
pop
lahf
aas
inc
mov
mov
sub
cmp
fbstp
sbb
outsl
or
push
cmp
adc
fisttps
pop
push
dec
sahf
adc
je
pop
mov
adc
pop
and
jle
fidivrs
sarl
addb
cld
sub
inc
fldl
mov
in
mov
ja
or
enter
or
add
fstps
gs
add
cmp
jecxz
add
movl
pushf
dec
cmp
pop
pop
xchg
dec
clc
mov
sbb
out
cmp
mov
pop
stc
aam
rcll
lea
adc
xchg
movsl
and
in
add
xor
jno
dec
sarl
fisttpl
dec
and
mov
adc
sbb
lret
xchg
repz
imul
je
stos
pop
dec
add
pop
cmpl
into
jae
cmpsl
adc
cmc
cli
test
inc
fwait
in
mov
mov
sti
push
stos
mov
dec
sbb
fistps
lcall
addl
cmp
xor
out
test
dec
xor
pand
cmp
out
jl
stos
int3
jmp
ffreep
xor
add
mov
jecxz
out
adc
out
push
dec
inc
fisttpll
and
fistps
mov
jae
sub
add
fisubrl
xor
add
movsb
out
xor
into
out
dec
shrl
movsl
iret
push
inc
stos
dec
push
pop
dec
inc
cmpsb
hlt
cmp
push
xor
out
sub
or
jae
cmpsb
jno
mov
xchg
and
fs
movsb
or
or
ret
or
sti
sti
mov
je
push
and
cwtl
adc
push
mov
xor
insb
clc
mov
sbb
daa
cmp
jo
push
adc
lea
lock
and
andl
jle
push
or
in
jno
inc
les
mov
add
xor
test
dec
mov
sbb
adc
rorb
jno
popf
test
das
inc
sbb
cli
clc
push
dec
bound
jne
jne
ja
pop
or
frstor
stos
ja
push
repnz
push
ret
mov
mov
push
aam
stos
pushf
jbe
add
cmp
in
hlt
inc
sbb
inc
xor
pop
dec
xchg
call
cltd
sub
mov
gs
xor
sub
das
mov
push
mov
adc
dec
mov
xor
sbb
or
jno
xchg
movsb
jmp
mov
stos
sahf
jno
repz
xlat
push
lcall
sub
fnstcw
or
lock
dec
in
mov
pop
cmp
fs
mov
adc
pop
sub
int
in
push
lock
pop
cmp
movsl
pop
test
fwait
sbb
fcomip
push
jo
or
in
inc
sbb
pop
rorl
adc
sub
add
aas
fcompl
mov
adc
push
jg
jno
mov
xchg
jnp
mov
adc
cmpb
xchg
js
lea
loopne
cmp
inc
inc
sub
mov
sbb
imul
cli
mov
ja
mov
mov
add
push
lds
out
cmpsb
cmp
fdivs
adc
pop
xchg
cmp
pop
xchg
jbe
es
push
inc
add
mov
dec
mov
dec
dec
ljmp
clc
push
in
mov
jbe
or
cmp
shll
scas
gs
xchg
mov
dec
xchg
jo
aas
xchg
sbb
add
rcrb
mov
daa
negl
add
pop
inc
bound
repnz
movsl
repnz
adc
aaa
adc
mov
pop
iret
sbb
or
mov
cmpb
cli
orb
xchg
mov
dec
js
pop
mov
fiaddl
in
lods
in
js
nop
xlat
mov
je
test
jno
or
lds
icebp
xor
mov
sarb
in
stos
andl
into
jo
inc
loope
mov
pop
das
out
mov
arpl
into
lock
ja
push
inc
aam
rcll
mov
das
jno
dec
and
mov
push
mov
aas
push
xchg
fsts
jmp
sbb
je
imul
cmpsl
and
and
xchg
test
jns
or
divl
sahf
orl
push
sahf
repnz
pusha
sub
adc
loopne
jns
sbbb
lea
dec
stos
mov
cmp
cmp
out
dec
jmp
sbb
lods
xor
mov
dec
ficompl
cli
iret
cmp
lret
lret
xchg
inc
movsb
jg
fs
mov
pop
xor
aam
js
lods
addr16
sbb
dec
fsubl
xlat
mov
or
fld
jmp
in
mov
movsb
mov
or
sbbb
and
cmp
in
cmpl
mov
fldenv
ljmp
or
xchg
dec
adc
lahf
sti
loope
mov
stc
dec
jo
or
sub
data16
ffree
data16
mov
push
jb
adc
mov
imulb
and
jno
test
mov
mov
and
mov
push
sub
leave
add
test
cmp
sub
aad
call
mov
cmpsl
stos
add
out
push
mov
outsb
fwait
mov
sub
rcrl
sub
jne
cmc
movb
mov
adc
inc
inc
fisubrs
imul
xor
lock
sarb
mov
rclb
fnsave
sub
outsb
push
and
add
push
roll
int3
mov
scas
loope
dec
repnz
gs
and
mov
xor
mov
cli
adc
xchg
leave
lret
or
repz
ret
jl
adc
arpl
mov
add
mov
mov
outsb
xchg
hlt
rolb
xchg
scas
dec
negl
ret
fidivrs
lods
sub
js
dec
stc
les
xor
xlat
fwait
push
divl
sbb
xchg
dec
test
pop
inc
xor
jns
push
mov
es
mov
out
shld
cmp
movsl
es
inc
ja
aas
push
push
orl
scas
add
xor
pop
xchg
out
aas
ja
fwait
mov
jp
xorl
mov
mov
cmp
negl
mov
pusha
push
mov
jbe
sbb
cwtl
test
or
adc
scas
mul
jge
test
dec
dec
add
adc
shlb
mov
push
inc
xor
push
add
dec
mov
mov
pop
xchg
jnp
fwait
push
sar
int
pop
lret
gs
pop
sbb
data16
popa
mov
cmp
mov
mov
mov
daa
cmpsb
add
in
push
or
pop
add
push
dec
and
nop
xchg
scas
cmp
push
mov
daa
inc
jg
loop
jecxz
sbb
lds
push
imul
add
or
or
jle
mov
cmp
mov
mov
add
mov
shll
andl
jne
stos
xchg
mov
dec
jge
std
imul
inc
bound
or
lret
push
lahf
pusha
in
push
or
inc
test
repnz
sbb
inc
inc
rolb
popa
push
ret
mov
shlb
mov
add
mov
les
iret
stos
pop
inc
fdiv
sub
subb
dec
lods
mov
ret
xchg
sbb
divb
bound
movhps
divb
xor
std
push
iret
inc
roll
and
xor
cmpsl
xchg
mov
in
push
lahf
ss
xchg
cld
aaa
iret
fisubl
adc
int
jle
xchg
sbb
out
or
mov
pop
pusha
jl
insl
aaa
mov
pop
int3
repz
daa
push
in
shlb
cmp
add
mov
cld
arpl
in
enter
addps
jg
std
jg
stos
repnz
std
mov
cli
les
mov
push
jo
push
pop
fs
out
add
dec
out
stos
cld
insb
pop
cmpsb
leave
into
mov
or
js
jns
sbb
jae
jne
xor
int3
stos
ret
cmp
or
dec
inc
xor
xor
clc
mov
std
mov
inc
push
stos
shl
gs
test
adc
andb
int3
lds
cmpb
mov
loop
xchg
insl
ds
gs
add
sbb
xor
lods
jbe
aaa
jb
in
jno
cmpsl
sbb
popa
insb
subb
xor
add
inc
cmpsl
arpl
mov
pop
push
les
int
dec
out
test
shlb
fstps
aam
fisttps
test
fmuls
sub
mov
mov
js
in
add
pop
jae
lods
loopne
adc
mov
mov
xor
movsb
mov
or
je
pusha
or
imul
faddl
ret
xor
cltd
and
icebp
xlat
pop
xor
pop
out
das
adc
add
jo
mov
mov
stc
int3
ret
lods
xchg
dec
notl
jno
push
test
pushf
and
std
bound
call
dec
sti
movsl
mov
enter
pushf
out
push
pop
mov
mov
inc
inc
jns
cmp
aad
les
mov
lds
hlt
push
push
mov
sub
push
pop
outsl
movsb
test
bound
adc
mov
stc
pop
mov
pop
xor
xorl
cmp
add
cvtps2pi
push
dec
sbb
in
insl
test
push
sbb
and
fidivl
mov
aam
mov
mov
mov
int3
pop
jecxz
push
aad
or
pushf
push
aas
jecxz
ja
ficomps
jecxz
xor
sbb
lds
mov
or
sub
gs
outsl
jg
out
mov
mov
rcr
or
add
ja
dec
outsl
add
dec
roll
inc
lock
in
pop
stc
sti
mov
pusha
addr16
dec
inc
gs
shrl
xchg
cwtl
insb
fcomp
pop
dec
daa
cli
jb
icebp
int3
mov
popa
push
aaa
sbb
or
andb
jae
mov
daa
enter
inc
xchg
nop
ja
mov
mov
sub
data16
mov
inc
or
jbe
xchg
push
mov
mov
jne
test
mov
stos
lods
imull
mov
inc
inc
test
std
pop
mov
mov
vcmpps
shrb
bndstx
push
sti
loop
test
aam
cmp
and
add
cmpsl
lods
loop
jmp
fbld
test
mov
loope
and
sti
mov
pusha
pop
fwait
lea
gs
and
shlb
jns
popf
popf
dec
cmpb
popf
imul
cld
mov
data16
rolb
mov
sub
add
xlat
jae
insb
ds
out
mov
cwtl
dec
jb
std
ja
cmp
mov
add
ret
pop
mov
mov
stos
lcall
ficoml
lahf
mov
sub
enter
aad
or
fildll
out
mov
lock
or
pushl
inc
lods
pusha
sbb
inc
pop
test
fbld
ljmp
jle
jae
jo
lock
and
out
cmp
das
push
mov
and
lds
leave
bndldx
sub
test
jle
scas
mov
mov
repnz
xor
repz
jmp
imul
stos
out
and
mov
insb
mov
add
iret
cmp
aaa
and
stc
xchg
jecxz
xchg
rorb
popf
xchg
ret
cmpsl
in
fcoml
xchg
adc
sbb
pop
adc
push
hlt
cmpsb
hlt
ja
lods
js
mov
sbb
xchg
stc
adcl
adc
push
add
lret
test
cmpsl
mov
xchg
mov
jb
mov
cmp
loopne
mov
into
mov
pop
push
lahf
jge
jp
cmpsl
jge
mov
or
pop
data16
jno
idivl
xchg
pop
push
sti
sti
push
jg
fs
jnp
addr16
ss
outsl
dec
adc
fidivs
inc
pusha
jmp
ss
sub
bound
mov
push
testb
shrb
and
jle
cmc
dec
sahf
and
adc
into
jnp
jge
pop
mov
fwait
jns
nop
and
and
mov
xor
shlb
xchg
out
cmp
xor
lods
inc
fisubs
xchg
and
es
lcall
into
int
rorl
or
xchg
stos
push
lcall
fwait
pusha
sbb
and
or
mov
sub
sub
jmp
push
adc
jns
sbb
sti
push
leave
lahf
insl
addr16
adc
aad
mov
xlat
lahf
sub
and
shlb
scas
sbb
jl
inc
and
gs
gs
mov
dec
adc
aam
mov
adc
cmp
mov
mov
mov
sbb
inc
dec
in
aas
mov
jno
addr16
sbb
mov
das
push
shl
aaa
mov
pop
xchg
insl
pop
lods
stc
xor
pop
xchg
dec
pop
xor
mov
sub
rcrb
mov
cmp
rorl
repnz
add
dec
scas
mov
enter
and
inc
add
mov
inc
in
sub
push
repz
mov
push
cmovs
out
clc
mov
inc
mov
pop
pop
mov
mov
popf
scas
data16
ret
fdiv
pop
ss
gs
or
shl
es
pusha
pusha
stos
rorl
outsl
push
addr16
mov
inc
cwtl
xorl
push
in
lret
push
pop
sbb
adc
xchg
add
mov
sbb
xor
loope
inc
or
test
lahf
cmp
ljmp
xchg
sarl
xlat
sub
rorl
daa
or
jmp
lds
jnp
mov
inc
mov
test
sub
cmp
and
imul
out
stos
push
add
jae
movsl
push
shlb
insb
rclb
scas
jmp
xor
pop
iret
out
or
and
cmp
aaa
imul
pop
adc
mov
int3
std
cmp
push
adc
mov
adc
xor
out
add
push
inc
cli
mov
icebp
imulb
enter
mov
lea
aas
roll
repnz
popa
lea
cmpsb
rcl
fs
sbb
repnz
xchg
sahf
fucomi
pop
xchg
jae
jg
mov
psllq
cmpsl
xlat
cmpl
rcrl
test
ss
sbb
jmp
jle
in
cs
sub
repz
loop
mov
daa
fs
and
add
jnp
das
xor
ja
insl
add
push
sbb
mov
in
call
dec
int
push
lods
and
mov
pop
popf
cli
mov
dec
das
jle
movsb
lods
or
fildl
mov
cli
or
cli
pop
push
and
in
call
xchg
dec
sub
dec
and
push
sub
sbb
push
inc
add
mov
and
dec
jmp
push
addr16
ret
in
pop
std
bound
mov
enter
adc
xchg
xchg
mov
add
shrb
rcrb
mov
lods
stos
je
fmull
dec
push
out
mov
test
sub
mov
jns
stc
mov
jno
xchg
aas
pop
mov
push
rolb
dec
cwtl
or
sbb
test
push
out
sbb
or
fidivrs
out
in
pusha
lea
leave
scas
dec
loop
inc
inc
dec
mov
xchg
xlat
roll
lcall
inc
mov
mov
mov
out
hlt
cli
sbb
and
lret
lcall
cmc
mov
and
lret
pop
sub
mov
movsb
sub
cmpsl
or
mov
out
js
cmp
jnp
test
clc
mov
jns
dec
adc
push
lcall
mov
gs
xor
mov
adc
mov
std
mov
push
pop
ss
sub
jbe
and
subl
out
mov
out
cmpsb
xor
mov
cmp
push
rclb
leave
lods
mov
or
sub
iret
or
jo
in
fnstenv
movzwl
pop
cs
je
or
inc
mov
add
dec
cmp
popa
lds
imul
xchg
lds
out
or
xor
mov
clc
mov
push
xor
leave
jg
mov
aas
and
xchg
xchg
push
push
lret
sbb
lea
sub
sahf
jg
hlt
rcll
shl
repz
cmpsb
icebp
push
clc
xchg
movsb
das
dec
out
int3
or
loope
cmpsb
cmp
mov
repz
jl
and
cs
inc
xor
mov
xchg
pop
in
aaa
and
add
lods
cmp
inc
mov
push
xor
js
dec
cmp
mov
pop
clc
mov
imul
in
adc
dec
ret
mov
xchg
pushf
clc
push
movsl
adcb
mov
sbb
mov
test
mov
mov
xor
xor
test
test
in
inc
dec
sahf
adc
and
add
addl
int
nop
pop
or
push
js
jo
inc
pop
das
aas
int
subl
dec
cmp
add
int3
mov
mov
cmpsb
sbb
cs
push
xchg
jecxz
push
cmpsl
dec
mov
pop
cmc
mov
les
add
adc
fisubl
inc
xlat
out
les
push
add
call
inc
jne
dec
xchg
cmpsl
push
repnz
xor
xchg
jne
in
mov
popf
sbb
out
xchg
jge
mov
inc
aam
insb
sbb
mov
rcll
fidivl
and
shll
fstpl
popa
test
out
mov
mov
push
test
jb
mov
das
in
aaa
je
xchg
mov
les
pop
fildll
ss
les
jne
mov
ja
inc
push
push
mov
pop
mov
pop
jb
rclb
dec
push
push
adc
enter
out
in
sub
jae
or
jno
imul
lods
aaa
mov
dec
cmp
mov
or
or
loope
lahf
dec
sub
jnp
iret
jl
pop
loope
jnp
pop
cli
loop
ljmp
pop
dec
cmp
mov
cmp
jne
out
int3
test
shrl
push
xlat
sub
imul
rcll
daa
inc
fistpll
das
jae
int3
lcall
repz
call
mov
jbe
and
stos
lret
ffreep
call
xchg
mov
sub
or
nop
push
jno
xchg
xor
xchg
pop
mov
dec
in
mov
inc
shrb
rcll
addr16
jle
mov
test
pop
mov
mov
movsb
cli
dec
sub
push
stos
inc
mov
pop
pop
sbbb
outsl
mov
sub
xchg
xchg
xlat
xchg
cmp
adc
inc
inc
inc
mov
repz
mov
mov
mov
and
pop
mov
rcrl
ss
int
insl
cwtl
out
jno
sahf
lods
imul
jg
inc
xor
icebp
lret
icebp
pop
and
test
push
adc
call
iret
mov
sbb
aad
test
xchg
imul
cmp
cltd
inc
fstpt
popa
and
sbb
sbb
pmaddwd
and
lea
adc
clc
out
bound
stos
jns
or
jb
jmp
dec
sarb
mov
mov
ds
mov
andl
mov
in
cmp
popf
ljmp
push
inc
jl
mov
cmp
and
push
ds
rcrl
roll
lods
inc
mov
or
call
mov
rcrb
push
or
pushf
jl
pop
pushf
push
imull
push
scas
lods
mov
sbb
cs
xlat
hlt
rcrb
leave
jecxz
inc
div
test
mov
sub
sbb
push
in
jp
aad
aaa
fstl
cmp
mov
rcll
shll
cmp
lea
push
loopne
jno
jns
popa
and
xchg
mov
call
sbb
insl
mov
aad
pop
pop
jne
loopne
jl
mov
add
xchg
outsb
lahf
aas
sbb
xchg
shr
adc
adc
adc
mov
cmovo
in
mov
fldt
xchg
sti
adc
push
adc
dec
push
inc
aaa
lret
je
ja
cmp
rorl
movsb
lods
and
sub
xor
data16
out
adc
push
pushf
pop
in
aas
xor
roll
aaa
imul
xor
sub
int3
sub
mov
mov
inc
pop
aaa
aaa
fsubrl
fists
xchg
rclb
das
nop
adc
outsl
ret
movsl
mov
icebp
jmp
ret
mov
adc
jbe
stos
cmp
out
sub
adc
sbb
xchg
vmsave
mov
rcrb
outsb
test
pop
jle
mov
hlt
jnp
mov
stos
pop
cmp
push
sbb
cwtl
push
dec
test
add
mov
add
inc
testl
int
loope
dec
jo
cmp
lcall
fcmovne
mov
mov
or
cmp
out
jae
mov
addr16
lods
or
push
repz
insb
jl
push
scas
insl
xor
leave
out
mov
cmpsl
popf
fisttps
out
flds
sub
aas
pop
shll
rol
and
sbb
add
test
xchg
inc
test
add
mov
sbb
xor
push
mov
cmp
cmp
fwait
or
test
sbb
fwait
push
daa
adc
cli
dec
or
mov
xlat
aas
xchg
push
xor
xor
push
push
and
and
rolb
movsl
mov
jle
addr16
jp
push
mov
xchg
dec
ss
cmp
jae
cld
inc
adc
or
insl
pop
jno
push
mov
test
or
cmp
push
sub
mov
icebp
jbe
or
out
stc
je
mov
xor
fsubr
aas
pop
mov
sahf
imul
repz
lahf
aas
aaa
hlt
adc
sti
sub
ja
dec
jmp
push
out
push
stos
dec
sbb
adc
ret
divl
pop
insb
mov
sbb
into
arpl
push
jp
cwtl
jno
xor
or
add
jo
std
icebp
imul
repnz
cwtl
xor
adc
mov
push
inc
push
shrb
mov
popf
and
jecxz
and
stos
sbb
push
adc
outsl
mov
or
int
daa
xlat
aaa
idivb
pop
push
mov
cmp
imul
test
mov
dec
sbb
or
cwtl
fwait
lea
xor
fwait
scas
movsb
icebp
push
lods
or
jnp
push
xor
sbb
mov
cmpsb
mov
lea
shr
repnz
mov
mov
or
aaa
mov
sbb
mov
sti
pop
push
out
into
addr16
xorl
mov
xor
mov
dec
in
and
xorl
inc
or
lret
fisubrs
outsb
xorb
sub
fstpl
jno
sub
test
or
pop
and
mov
lods
mov
arpl
nop
leave
in
int
sbb
insl
xor
bound
add
repz
inc
or
sbb
push
and
cmp
inc
popf
popf
rcll
xor
inc
cld
cmpsl
mov
je
ret
mov
or
sbb
mov
je
or
sbb
mov
ja
into
add
mov
inc
pop
adc
mov
loope
xchg
and
dec
sub
mov
incl
add
mov
and
pop
push
pop
push
mov
insl
mov
ljmp
std
cmp
or
cwtl
repnz
mov
aam
push
and
dec
jnp
pop
cli
leave
pushf
jmp
negb
fwait
adc
and
jo,pt
lock
test
jae
aad
pop
sti
scas
js
adc
ss
es
inc
aad
mov
popa
inc
mov
jge
mov
stos
dec
lret
lret
xchg
call
int3
lds
shr
mov
jge
dec
aaa
pop
pushf
imul
rolb
icebp
xchg
sub
push
lret
push
test
jmp
mov
xor
test
mov
mov
push
not
out
jae
jbe
cmpsl
stc
mov
jno
adc
ret
hlt
pop
test
xor
mov
shrb
cmp
push
jge
cs
jl
inc
out
jae
push
xchg
ds
enter
aad
mov
lcall
dec
imul
adc
xor
adc
mov
sub
dec
pop
mov
mov
leave
mov
dec
sbb
or
fbld
mov
sbbb
arpl
clc
xlat
ljmp
push
ret
cmpsb
add
subb
dec
add
jl
sbb
cltd
mov
dec
pop
aas
decl
xor
sub
mov
loopne
idivl
jg
mov
push
in
or
pop
out
or
incl
xchg
enter
aaa
bnd
lds
aas
cmc
bound
lods
add
aaa
sbb
dec
xchg
sub
mov
shl
gs
cwtl
and
pop
icebp
fs
dec
fsubr
mov
mov
adc
ja
push
mov
dec
sub
xor
popa
mov
push
jl
sbb
pushf
xchg
loopne
add
or
rcll
gs
jb
insl
or
arpl
aas
das
mov
lahf
adc
in
hlt
push
mov
sbb
adc
and
jno
ss
nop
add
dec
cmp
xor
notl
dec
or
mov
push
int3
fnstenv
cmp
arpl
loope
xor
push
fs
lock
pop
or
test
fildll
cmp
xor
cmc
jno
fldcw
dec
adc
cmpsl
loopne
pop
je
orb
mov
aaa
cmp
std
xor
lods
js
mov
add
clc
adc
shrl
mov
push
fcmovnbe
push
mov
lahf
insl
notl
or
call
leave
and
std
insl
sub
in
in
xchg
xor
imull
cli
dec
push
or
add
stos
inc
adc
out
pop
xchg
lret
adc
aam
sti
or
aas
dec
sub
in
cmp
or
mov
lcall
jge
mov
dec
adc
adc
or
fsubrs
sub
jne
movsl
xchg
push
xchg
adc
out
ja
rclb
cli
cmp
push
popf
mov
loope
gs
enter
sub
add
clc
fcomi
scas
outsl
pop
mov
jae
cmp
jo
lcall
mov
lcall
enter
daa
les
rolb
inc
sbb
aad
enter
mov
ljmp
shr
stc
inc
and
insl
shlb
push
add
push
push
ds
pushf
add
lock
dec
addb
jle
sbb
sbbb
mov
les
sbb
pop
popa
shlb
sub
sbb
lods
shlb
and
pop
in
outsb
push
leave
sti
and
push
call
pop
fwait
sbb
daa
push
js
fstp
and
loope
jns
dec
push
xchg
adc
jl
mov
into
jp
shrl
xchg
mov
jns
and
pshufw
push
insb
aaa
cmovae
xor
push
insl
filds
jle
dec
jo
push
neg
imul
add
adc
adc
sub
inc
xchg
aas
pop
fdivl
cmp
xchg
fwait
push
sbb
jnp
push
aad
sbb
mov
hlt
mov
out
aas
mov
test
aaa
das
in
ljmp
mov
jne
pop
jns
add
es
dec
cwtl
scas
aaa
sbb
mov
sbb
pop
push
arpl
lahf
adc
stos
mov
jmp
add
push
mov
and
fdivrp
adc
jnp
rorl
jmp
inc
sub
addr16
inc
test
mov
mov
shrl
scas
call
call
mov
movsb
sub
push
adc
mov
sarl
aaa
insb
mov
jo
jle
sbb
std
push
nop
gs
mov
aas
pop
out
mov
imul
adc
xor
xchg
cli
fwait
xchg
and
std
popf
sbb
cmp
stos
adc
pushf
push
lock
ret
pop
push
mov
mov
inc
and
pop
xor
pop
pop
mov
xchg
jb
popf
inc
jecxz
or
popf
test
xor
mov
pop
inc
adc
push
out
xchg
inc
cmp
test
cmc
dec
sub
fisubl
jnp
stos
cmpsl
xchg
mov
mov
fwait
sbb
les
or
fimull
xorb
fimull
outsb
mov
push
inc
lahf
or
sbbb
repnz
sti
xchg
sbb
dec
mov
sub
cwtl
loope
leave
sub
fmull
and
or
xor
cltd
fbld
cmp
lret
push
fsubr
mov
test
sub
fs
inc
aad
add
cmpsb
xlat
xor
mov
data16
int3
sahf
cmp
push
aad
mov
lds
xchg
imul
out
bound
mov
out
dec
cmc
pop
loope
arpl
jno,pt
xor
sbb
push
aad
out
inc
jnp
xrelease
sub
ljmp
mov
jg
pusha
lcall
into
insl
in
dec
inc
xor
cs
lds
push
push
int3
push
sub
xchg
sub
cmp
andb
mov
push
enter
mull
enter
cmpl
cwtl
inc
push
jl
xchg
jp
daa
and
add
push
dec
out
movsl
cld
pop
repz
pushl
and
jne
xor
dec
pop
push
lahf
cmp
cli
and
jge
adc
or
lea
jne
mov
mov
xchg
lock
push
cmp
shl
sbb
mov
pop
shll
pop
lods
push
xor
inc
dec
push
ja
xchg
test
add
push
push
cltd
mov
cmp
add
fdivrs
negl
jb
and
cwtl
push
ret
sbb
inc
shlb
popf
xor
adc
icebp
daa
testb
xchg
jnp
lret
push
or
add
xchg
div
jmp
sub
shll
insl
in
jb
fdivrl
add
xchg
ret
xor
div
or
negl
rcl
imul
ja
in
sbb
inc
sbb
arpl
push
aaa
mov
and
enter
cmp
pushf
cld
aad
call
xor
int
inc
push
dec
cmp
or
push
cmp
lcall
or
clc
fisttps
roll
scas
push
pop
pop
jg
push
dec
mov
out
or
adc
lret
stc
push
repnz
inc
mov
adc
rclb
push
stos
aad
data16
lods
je
sahf
dec
sub
popa
and
mov
in
ret
xchg
test
pop
lea
enter
mov
dec
mov
and
jb
repnz
mov
jbe
std
sti
jae
sub
mov
mov
repz
cli
out
aam
aaa
mov
or
sub
int3
jns
jo
mov
or
inc
mov
rclb
xor
xchg
in
mov
aam
es
cmc
pop
inc
inc
insl
mov
insl
and
pop
dec
push
enter
mul
std
dec
adc
adc
outsl
push
xchg
push
jb
andb
dec
fistl
cs
ds
addr16
pushf
lret
sub
fmuls
pop
cmp
inc
adc
or
xor
jo
and
dec
ret
push
lret
mov
adc
jle
pop
dec
mov
xor
xchg
inc
mov
lods
pop
pop
jle,pn
cwtl
jne
inc
shlb
push
fmul
call
mov
jbe
loopne
out
jg
hlt
xchg
out
ss
out
aam
mov
cmpsb
sub
sub
movsl
in
cld
add
call
dec
xchg
mov
mulb
in
fidivrs
in
mov
fdivrl
repz
fcoms
push
push
call
pop
dec
mov
adc
and
cmpsl
and
test
sbb
adc
negl
rolb
push
pop
cld
cmp
std
test
shr
scas
icebp
pop
or
fs
out
pop
push
xor
jl,pn
mov
hlt
inc
sub
call
or
mov
xor
fsubr
aas
xchg
mov
clc
dec
xor
sbb
in
movsl
or
jmp
mov
dec
rclb
cltd
mov
push
mov
jmp
test
scas
mov
sub
push
pusha
jge
mov
test
cltd
jb
mov
outsb
lcall
test
sbb
push
pop
or
inc
cli
cmp
in
inc
cmp
mov
jge
mov
add
jge
ss
out
rorl
arpl
jl
movsb
out
adc
add
cmc
jns
push
pop
gs
or
ljmp
jmp
es
dec
test
sub
push
out
das
lret
icebp
pop
mov
mov
adc
or
cmc
lret
outsb
cwtl
pop
sub
sbb
xlat
iret
xor
add
testl
cmpsb
mov
xchg
fcompl
pop
lods
mov
call
leave
xchg
in
adc
mov
pop
cwtl
or
jecxz
lock
inc
push
aad
sbb
les
nop
insb
cld
into
inc
int
je
jecxz
ret
inc
xor
aaa
mov
dec
mov
push
js
cwtl
cmc
mov
pop
xlat
sbb
das
push
lahf
and
jecxz
mov
ret
loopne
mov
sbb
sub
mov
mov
push
enter
pop
lcall
dec
loopne
mov
dec
outsb
andb
pusha
sarb
xor
lret
repz
int
scas
sti
adc
mov
mov
dec
xor
xchg
xor
adc
add
dec
int3
xlat
jo
imul
inc
mov
mov
xor
jb
and
pop
jmp
jg
pop
push
xchg
negl
data16
pop
sbb
and
mov
mov
adc
sub
sbbl
inc
sahf
or
arpl
les
popf
icebp
xchg
sub
and
dec
xchg
je
roll
dec
ljmp
mov
sahf
sbb
gs
push
popl
lcall
or
add
adc
pop
aas
xor
stc
out
cs
mov
push
data16
and
ret
jle
addr16
aas
mov
cmpsb
sbb
adc
sahf
cmc
mov
adc
cmp
subb
inc
pop
jno
cmp
movsl
lea
lds
add
xchg
call
ds
xchg
pop
pop
mov
xchg
jnp
dec
mov
das
ss
jb
test
scas
ror
mov
in
aam
out
ja
push
ds
je
mov
fs
xlat
or
mov
adc
pop
scas
lods
mov
cmp
xor
bound
shlb
jecxz
pop
ret
push
push
adc
dec
mov
inc
fwait
sbb
push
xlat
jno
pushf
aas
dec
test
and
lret
imul
pop
cld
mov
jge
dec
add
arpl
sbb
bound
sub
or
in
jg
xchg
ds
aam
lahf
xor
pop
and
mov
pop
pop
cmp
push
out
mov
lock
mov
les
dec
pushf
inc
xchg
push
mov
sub
lret
mov
xchg
push
mov
xchg
jns
movsb
sbb
call
jbe
gs
mov
mov
push
repnz
fucomp
in
iret
or
or
or
inc
sbb
lods
jmp
scas
and
adc
or
lea
mov
xchg
lds
jnp
xor
ds
and
lock
jo
out
dec
cmp
xor
mov
xchg
sarl
lock
sarl
repz
jle
mov
push
push
adc
mov
or
scas
add
outsl
cld
cli
insb
cli
dec
jg
sahf
jae
dec
pop
cmpsl
sub
ljmp
cmc
aam
sahf
add
jge
dec
loope
mov
ret
repz
mov
enter
jmp
push
rcl
and
sub
mov
out
mov
or
mov
les
mov
imul
out
out
adc
ficomps
cmp
jne
mov
paddsb
loopne
add
cld
push
fisubrl
pop
and
jb
rcll
outsl
pusha
stos
xor
cmp
inc
adc
scas
negl
test
sub
mov
imul
inc
jae
int
repnz
lods
or
jmp
push
pusha
das
cmp
aaa
pushf
jae
mov
int3
mov
mov
daa
xor
pop
in
test
xchg
pushf
sub
pusha
and
int
push
pop
mov
xchg
lods
sbb
cmpsl
xchg
sub
insb
sbb
in
mov
leave
add
xor
jae
repz
mov
test
cld
imul
pop
mov
xor
loope
sbb
loope
mov
dec
in
scas
add
sub
nop
xlat
adc
inc
xlat
mov
push
sar
test
aad
mov
pop
mov
lock
jae
leave
imul
mov
leave
dec
mov
fwait
pop
jns
sub
iret
push
mov
loopne
popa
or
jo
xchg
pop
lock
out
xchg
mov
jne
pusha
add
cmpsl
or
or
mov
mov
jge
cwtl
clc
out
sub
repz
add
repz
fists
fistpll
and
xor
sub
inc
xor
test
pop
push
rorl
mov
ret
repnz
mov
dec
fwait
in
out
loopne
adc
xchg
mov
mov
das
cmp
push
jg
pop
loopne
aaa
or
xchg
fsubrl
lods
pop
mov
out
xchg
dec
sbb
cwtl
jae
mov
jno
sbb
pushf
jnp
inc
push
jo
iret
dec
xchg
pop
dec
aas
hlt
loop
or
xchg
fcmovnu
jno
mov
sub
out
xchg
cli
je
js
wbinvd
ds
jne
rorb
mov
and
mov
and
sti
xchg
mov
cmc
mov
ret
ror
aam
dec
fs
pop
push
std
add
sbb
pushf
mov
xchg
nop
into
fdiv
xchg
push
mov
leave
push
loopne
cltd
adc
in
addr16
xlat
ss
add
in
pop
push
push
jb
sti
jns
clc
movsl
adc
ret
mov
lea
push
xchg
cltd
mov
xchg
out
test
pop
ret
test
test
std
btsl
inc
adc
push
jb
es
inc
stos
push
mov
jo
testb
ds
mov
nop
mov
jno
xor
dec
xlat
fmull
xchg
inc
in
cmp
lods
scas
xchg
int3
mull
outsl
loopne
inc
shll
aas
inc
push
xor
adc
stos
push
jle
sbb
sahf
pop
fsub
nop
push
mov
adc
pop
add
xchg
cmp
and
cmp
xchg
subb
daa
sbb
sub
inc
jb
dec
mov
out
btr
movsl
sbb
inc
add
and
xchg
ds
pushf
stos
pop
out
out
mov
hlt
sub
repz
inc
filds
jle
sub
test
fldenv
mov
jno
mov
ljmp
cmpsl
inc
lcall
push
shrl
pop
lods
add
dec
into
stos
mov
xchg
lret
mov
stos
mov
cli
sbb
push
xlat
lcall
decb
popa
adc
push
mov
pop
out
fwait
icebp
outsb
cmp
stc
ds
rol
lods
leave
outsl
inc
push
popf
push
or
xchg
or
fbstp
pop
pop
jp
sub
cli
inc
insl
in
jns
pop
lea
and
dec
push
idivl
std
les
pushf
stc
jp
push
int3
lods
mov
cmp
repnz
nop
mov
adc
cmp
sub
cwtl
or
sbb
jbe
aas
sti
sarl
pop
mov
int3
mulb
push
push
insl
ljmp
addr16
cmpsl
cmp
nop
jecxz
adc
outsl
sub
pushf
int3
cmp
push
std
cli
icebp
push
xor
movsb
into
popa
and
mov
int
add
scas
push
test
insl
mov
dec
xor
jle
bound
lds
or
xor
test
xlat
mov
shlb
pop
arpl
fstpt
xchg
jns
stos
arpl
fstpt
dec
mov
xchg
loop
lret
movsb
lret
outsl
lods
mov
jne
inc
fdiv
fnstsw
es
sub
cwtl
stos
sub
repnz
inc
dec
mov
sahf
call
dec
cmp
lds
mov
addl
aad
data16
push
dec
and
popa
fxtract
je
popa
push
mov
adc
outsl
mov
les
sub
inc
into
arpl
xorl
popa
imul
cmpsl
mov
or
inc
lret
sbb
dec
movsl
adc
cmp
pushf
xor
out
add
dec
add
clc
inc
pop
jecxz
inc
mov
mov
out
lods
adc
add
jbe
fiadds
cli
icebp
xor
mov
call
gs
fwait
orb
mul
push
sub
jmp
movsb
mov
testl
mov
push
jmp
pop
in
cmp
insl
xor
popf
add
xor
xchg
xor
mov
sbb
leave
pop
mov
popa
xor
fistpll
ss
fnsave
jne
lods
mov
and
mov
jns
cmp
xor
das
sbb
sbb
jmp
mov
xor
sub
inc
mov
aaa
hlt
mov
pop
divl
push
pop
stos
loop
xchg
jmp
pop
icebp
xchg
inc
cmpsb
fimull
add
inc
ljmp
outsb
xchg
push
gs
and
cmp
idiv
loope
scas
lahf
stc
iret
push
or
mov
sbbb
mov
xchg
outsb
and
aas
inc
out
roll
pop
mov
or
xchg
xchg
xchg
sub
addr16
or
stos
popf
pusha
lret
stos
imul
xchg
add
sbb
in
push
xor
jp
lea
in
inc
cltd
in
fidivl
out
lea
rcrb
sub
in
xchg
mov
neg
aaa
in
ja
je
lods
xchg
cmp
or
push
ja
subl
fdivrs
sbb
cwtl
xchg
add
lods
inc
adc
mov
dec
aaa
cld
stos
adc
fildl
lret
xor
dec
xchg
orl
out
xchg
adc
push
ret
inc
cmpsb
sbb
xchg
sbb
enter
bound
xchg
out
mov
pusha
popf
ficompl
mov
mov
inc
xor
mov
jbe
scas
mov
sub
or
shr
pop
jmp
or
aas
add
dec
int3
aaa
leave
or
stos
ds
fdivrp
or
xchg
iret
outsl
bound
jge
sub
jg
in
xchg
or
sbb
dec
pop
jp
mov
testb
mov
cmp
frstor
sti
mov
sub
adc
pop
cmp
adc
mov
lret
fldt
push
sbb
jmp
lcall
int
pop
lds
cld
adc
mov
loopne
test
aad
inc
stc
xor
dec
gs
sub
jge
and
jg
fisttps
jmp
in
push
rcrb
mov
mov
movsb
dec
adc
stc
pop
sub
jno
add
es
mov
stos
xchg
ja
aad
jmp
pop
das
adc
daa
addr16
mov
out
cld
repnz
nop
cmp
mov
and
test
inc
mov
jmp
int3
dec
add
lahf
in
dec
jecxz
stos
mov
sahf
xor
mov
test
and
xor
lods
cmpsl
in
mov
notb
int3
xor
add
dec
mov
or
mov
adc
test
jnp
movsl
lahf
mulb
pop
push
push
push
or
lods
push
push
insl
lret
push
sbb
jb
je
sub
mov
mov
movsb
sbb
inc
test
imull
cmp
dec
or
rcl
pop
in
fisubrs
xchg
and
or
jno
movsb
or
cmpsb
hlt
jbe
daa
mov
jmp
jge
out
shlb
dec
sbb
xchg
insl
pop
adc
jg
aam
or
cli
mov
fadds
sbb
scas
fnstenv
fldpi
push
mov
sub
or
add
xorb
das
stos
loope
or
sarb
xor
push
or
sbbl
mov
scas
sbbb
cmpsb
push
sub
jmp
jb
std
mov
clc
cld
hlt
inc
dec
fwait
je
hlt
es
call
fnstsw
daa
imul
in
fsubrp
fs
cld
jl
ficomps
dec
cwtl
sub
insb
stos
xchg
and
sbb
arpl
in
push
push
add
push
xchg
add
test
mov
sbb
mov
and
pop
and
xlat
movsl
xlat
js
xlat
push
lods
in
xchg
movl
lcall
dec
fst
aaa
jl
pop
outsb
pop
mov
and
cmpb
xchg
mov
loopne
sbb
jns
push
aaa
mov
mov
or
pusha
imull
push
iret
stos
mov
leave
pop
push
lret
imul
int3
cmpsl
ja
outsb
mov
pop
dec
cmp
and
mov
pop
pop
andb
push
pop
mov
pop
enter
aaa
fs
sahf
mov
push
pop
pusha
pop
mov
jle
push
sbb
push
sub
jno
add
int
pusha
mov
jmp
sub
into
sbb
push
or
xchg
lock
outsl
outsl
or
mov
mov
mov
sbb
das
push
sbb
cld
icebp
mov
int3
imul
add
dec
inc
fwait
sub
add
mov
and
dec
jbe,pn
lea
mov
xchg
or
adc
lods
pop
mov
lods
icebp
cmp
popf
shll
pop
dec
lea
dec
out
mov
pop
add
jmp
test
cli
mov
repnz
shrl
push
arpl
jle
mov
scas
push
repnz
pop
mov
pop
in
cmpsl
lods
loopne
dec
xchg
add
xchg
shlb
andb
adc
push
ret
popa
add
pop
imul
cmpb
or
sbb
jns
mov
and
lret
jmp
outsl
xor
shr
and
in
xchg
mov
jl
lahf
xor
xchg
mov
xor
fwait
jae
rclb
xor
fsincos
ret
flds
mov
in
sub
mov
mov
mov
pop
jo
cli
sbb
ret
dec
in
sub
mov
scas
mov
or
rorl
insl
cmp
jp
xor
xor
adc
je
inc
repnz
out
inc
lods
in
mov
arpl
pop
jo
mov
cmovl
inc
into
mov
inc
movl
xor
or
xor
pop
sbb
push
jle
or
ss
inc
stc
adc
sbb
inc
stos
ficoml
xchg
shr
in
test
xchg
lds
sub
mov
push
xchg
js
sub
jb
popa
enter
mov
cs
fisubrl
cmp
add
xchg
cmc
or
fwait
lret
jnp
add
push
mov
std
orl
jl
pop
cld
add
sbb
xchg
in
sbbb
daa
test
mov
mov
push
dec
push
mov
add
test
sub
cmp
pop
lcall
ds
jle
xchg
push
icebp
jecxz
adc
sahf
loop
loope
aad
aaa
imulb
mov
xlat
pop
pop
jmp
and
shlb
push
pusha
xchg
pop
jb
cmp
imul
sti
rcl
sbb
scas
ret
cli
adc
xchg
popf
mov
addb
xchg
cli
and
sti
sbb
ret
insb
std
push
mov
hlt
push
push
rcrl
movsl
cwtl
das
fidivrs
out
xor
dec
into
lods
push
pusha
sbb
or
sub
cmpxchg
cmc
lahf
fnsave
int3
mov
push
fwait
cli
ljmp
mov
imul
sub
gs
xor
hlt
daa
sbb
inc
cmp
cli
dec
inc
leave
jb
repz
xor
jg
cmp
pop
xor
fstp
stos
mov
mov
inc
xchg
lret
pop
xlat
sub
dec
push
xor
shrl
movsb
xchg
nop
pop
dec
xchg
daa
pop
pop
cmp
or
adc
mov
or
xorl
cwtl
lods
sub
sub
ljmp
adc
pop
jno
cmc
sti
lcall
ja
mov
out
jmp
xchg
mov
out
faddl
repnz
inc
aas
stos
icebp
cmp
dec
mov
aas
adc
insl
int3
xorl
js
jge
cwtl
test
push
adc
mov
imul
into
xor
and
in
and
nop
mov
mov
ret
pop
mov
xchg
xor
push
and
loope
fwait
sub
xor
test
ljmp
out
sbb
push
sarb
shll
push
jo
lods
in
loope
dec
in
clc
pop
mov
mov
cmpsb
into
or
rcr
ret
repnz
mov
sub
jmp
movsb
mov
dec
cmpsl
fcomip
xor
fs
aas
pop
repnz
idivl
pop
mov
jbe
lds
fdivrs
dec
mov
stc
or
sub
in
jle
mov
sbb
jns
scas
test
imul
dec
cmp
out
lret
adc
stos
mov
and
fs
in
or
sbb
mov
mov
ja
scas
icebp
sbb
inc
jne
xchg
push
xor
addl
repnz
and
cld
jbe
orb
in
bound
push
push
aas
mov
xchg
pop
call
into
cld
sub
xorb
sub
shl
mov
aas
popa
in
aam
repz
stos
jae
outsb
xor
loop
movsb
popa
lret
call
dec
push
leave
jae
scas
or
mov
imul
xor
outsl
sub
jo
or
cmp
cmp
lods
test
sub
movsl
outsl
out
leave
lcall
out
bound
jo
jnp
stos
cwtl
pop
addl
and
shrb
arpl
test
arpl
mov
jno
fisttpll
imul
xchg
cltd
outsl
outsb
cmc
mov
aam
jnp
or
in
inc
push
fwait
cmp
jns
xchg
insl
jg
sbb
frstor
push
xor
lock
jbe
cmc
or
sbb
dec
addr16
push
loopne
add
sub
cmp
or
mov
sub
lahf
pop
cmpsl
xchg
adc
adc
inc
lods
pop
and
dec
mov
mov
sbb
jnp
push
fst
mov
insb
sbb
cwtl
int
jb
jecxz
dec
mov
or
out
pop
push
dec
aam
xor
movsb
mov
xor
out
in
dec
mov
leave
jne
test
push
in
xchg
fdivl
pop
cmp
sub
cmpl
arpl
shrl
fldln2
test
jg
mov
enter
pop
neg
adc
inc
add
mov
sub
bnd
or
lds
pop
jmp
jo
mov
dec
mov
or
sbb
orb
xor
sub
mov
addr16
fnstsw
push
jmp
mov
jg
and
push
iret
inc
push
imul
mov
hlt
mov
test
mov
ss
shlb
push
dec
xor
fsts
jecxz
rcpps
addr16
jle
dec
and
xchg
xor
sub
js
and
movsl
je
and
arpl
aad
lret
or
mov
das
mov
leave
adc
divb
mov
inc
mov
mov
in
ret
enter
das
dec
int
mov
add
pop
xor
sbbl
dec
pop
lret
jp
stos
jae
add
int
outsl
xchg
stos
test
popa
repz
shl
ds
add
test
call
arpl
leave
addl
sti
inc
add
lea
adc
lock
pushf
testl
dec
jbe
mov
mov
jg
daa
mov
aaa
jne
mov
clc
fnstcw
pop
arpl
lret
jnp
adc
push
shrl
lret
in
mov
mov
adc
mov
ja
mov
mov
jno
jns,pn
outsl
mov
repnz
test
jns
dec
mov
in
adc
push
stos
sub
or
push
cmc
rorb
mov
add
sbb
and
or
mov
lret
loopne
mov
clc
imul
push
mov
mov
in
ja
and
inc
xchg
xlat
jo
xchg
mov
movsb
push
popa
hlt
sbb
imul
stos
in
out
fdivs
cmp
sub
cmp
test
inc
out
lahf
xor
cwtl
xor
inc
cld
jg
cwtl
mov
aaa
mov
mov
mov
mov
lea
insb
jmp
test
stc
jle
ljmp
sbb
cmp
cmc
pop
aad
stos
js
mov
rcrl
imul
icebp
sar
or
cmpl
das
jns
push
enter
aam
dec
dec
scas
push
jl
cmp
sbb
insl
jb
and
lea
scas
into
pop
sub
es
dec
inc
dec
mov
jecxz
xor
add
push
dec
pop
addr16
in
lock
rclb
loop
mov
xchg
test
push
or
pop
mov
cld
adc
cmc
mul
sbb
fstp
inc
sub
ljmp
adc
lods
stos
xchg
lcall
cli
fists
shll
stc
das
filds
mov
pusha
aaa
cmp
dec
idivb
jl
pop
mov
shlb
sbb
popa
leave
popf
cmc
adc
ror
jno
push
xchg
das
adc
sbb
push
and
mov
cltd
xor
lret
inc
mov
inc
lock
xor
sub
sub
xchg
pop
pop
adc
mov
inc
or
ja
push
jp
test
lret
imul
jae
inc
mov
dec
pop
jecxz
dec
push
push
add
push
add
addr16
push
lcall
mov
lods
call
fsubl
lods
mov
shl
repz
adc
dec
push
insb
jge
iret
ret
cwtl
rorb
or
or
icebp
cld
mov
negl
ss
pop
mov
push
adc
adc
mov
and
lahf
adc
pop
mov
push
xchg
xor
cmpb
mov
mov
pop
push
jo
push
mov
add
out
sbb
aam
inc
mov
dec
cltd
inc
lcall
pop
les
push
lahf
jbe
and
fwait
mov
cwtl
push
adc
jge
test
inc
inc
sbb
in
addr16
fst
out
push
bound
pop
mov
mov
xchg
sahf
fmull
pop
aas
clc
mov
scas
out
add
loopne
lea
jecxz
lcall
fadds
sub
and
inc
ss
adc
mov
ret
jg
lret
add
or
mov
adc
and
xlat
mov
or
and
and
pop
in
icebp
repnz
push
daa
inc
cmpsb
insl
mov
subl
aas
aad
pop
inc
lock
add
ret
sbb
cmp
or
pop
dec
pop
cmc
inc
cmpsl
or
or
mov
adc
inc
scas
dec
outsl
push
mov
jp
mov
dec
adc
jp
jne
sbb
popa
jo
pop
js
jnp
into
sarb
inc
aaa
push
les
clc
xlat
push
imul
pop
fdivr
out
and
mov
xchg
jmp
mov
cmp
pop
jmp
inc
pop
push
insb
jmp
cmp
aas
lods
and
add
sahf
or
cld
imul
pushf
or
sbb
cwtl
shrl
and
mov
cmp
mov
bound
push
jae
add
push
popf
jmp
push
lcall
out
cmp
fsubrl
inc
enter
loopne
adc
adc
pop
rcll
ss
je
mov
xchg
dec
or
pop
cs
call
or
xor
jb
lcall
cli
int3
add
sbb
in
xor
jge
inc
int3
stc
cmp
jg
insl
movswl
icebp
dec
inc
and
mov
jl
dec
xchg
mov
ffreep
test
addr16
sarl
cmp
insb
push
ret
xor
inc
in
sub
dec
hlt
insb
fmuls
div
cmp
stos
jg
fst
aam
aam
inc
icebp
jmp
xor
pcmpgtd
jbe
mov
cmp
or
popf
fnstcw
rcll
nop
pop
insl
mov
mov
push
sub
enter
pop
inc
jo
popf
add
pop
ficoms
movsb
mov
out
or
faddl
sub
std
sub
mov
neg
xor
scas
mov
rcrl
andl
xchg
jmp
dec
loope
shll
adc
test
pop
lcall
fisubrs
mov
dec
inc
lcall
jg
xchg
xor
mov
add
inc
dec
mov
mov
sub
stos
testb
or
jecxz
dec
xlat
dec
enter
movsl
and
jmp
and
add
or
mov
pusha
xorl
out
lcall
repnz
ss
mov
sub
fidivrl
shll
add
mov
xchg
ljmp
lea
lret
xor
ficompl
add
out
insl
jno
out
mov
pushf
mov
int
in
push
jmp
push
jae
jmp
mov
mov
adc
fmull
out
add
andl
jo
xor
xchg
nop
cmp
jnp
clc
xor
imul
call
sahf
popa
daa
imul
xchg
jae
and
movl
jmp
popa
sub
or
xor
sbb
jecxz
pop
lock
xor
cmp
imul
jp
xchg
adc
into
and
push
das
and
mov
aam
adcb
pop
nop
add
test
jl
dec
insb
sub
adc
cmp
mov
cmp
xchg
das
dec
into
cmpsl
leave
out
faddl
stc
cmpsl
adc
lock
ficomps
jl
push
cmp
xchg
sub
inc
or
enter
adc
pop
dec
arpl
xchg
sti
out
jo
push
movsb
mov
shlb
leave
loope
fs
dec
roll
dec
push
add
lock
mov
xchg
xchg
cs
mov
pusha
repnz
sub
sbb
stc
cld
xor
enter
mov
icebp
int3
jp
push
pop
jmp
pop
test
fsubl
pop
bnd
fistps
xor
outsl
es
cmp
sbb
movsb
jo
bound
ret
lahf
std
outsb
sub
mov
sti
inc
add
cmp
ja
fadds
enter
jns
or
cli
pop
lea
in
adc
mov
outsb
js
add
cmpsb
pop
in
cs
add
dec
mov
into
insb
sub
hlt
fistpl
mov
pop
inc
stos
cmc
bound
mov
jmp
sub
jge
cmpsl
mov
movsl
clc
dec
pop
icebp
or
icebp
lock
hlt
push
insb
in
and
add
push
mov
aad
sbb
jb
push
and
or
mov
mov
mov
cmp
in
mov
cli
dec
mov
jo
adc
cmp
test
cltd
mov
mov
or
or
lds
imul
xchg
clc
addl
adc
insb
in
mov
aaa
test
stc
pushf
and
xor
lcall
fnstsw
scas
popa
mov
fwait
ss
mov
leave
xor
repnz
xchg
int
aad
icebp
roll
jp
jmp
mov
cmp
xor
and
ss
das
add
xchg
cltd
notl
pop
cltd
js
test
jp
mov
cli
out
icebp
mov
lahf
notl
push
push
xor
shl
ret
adc
in
add
or
and
mov
outsb
test
cmp
sbb
cltd
addr16
popa
cmp
or
push
sbb
es
jmp
mov
mov
fldenv
mov
ss
je
aam
xor
frstor
in
cld
popf
clc
jl
fisubrs
notl
scas
pop
lret
dec
lcall
lods
sar
fnop
jbe
cmp
stos
je
sahf
in
inc
mov
push
daa
cmc
pusha
cli
negb
push
in
insb
or
push
mov
arpl
shrb
add
mov
sub
test
int
xor
xchg
add
jae
cmpl
push
les
stc
mov
fs
leave
mov
imull
cltd
icebp
lods
push
cmp
addr16
andl
ds
xor
addb
leave
pop
dec
dec
xchg
sub
sti
or
jb
js
cmp
xor
mov
sub
xchg
adc
cmc
or
aas
cmpsb
cli
aam
xchg
pop
js
mov
out
pop
notl
popf
push
in
or
subl
rcrl
subb
mov
or
jnp
mov
shrl
aaa
je
jno
jmp
scas
and
fcomip
mov
movsl
lret
sbb
outsl
jo
daa
gs
scas
jg
and
mov
xor
dec
je
sbb
sub
cmp
sbb
jp
inc
inc
adc
or
loop
not
mov
inc
push
push
test
ds
sbb
and
add
adc
pop
out
lods
dec
mov
subl
movb
cs
dec
inc
mov
lods
sbb
inc
mov
stos
jae
into
push
das
mov
add
in
cltd
push
xor
ss
push
outsb
mov
fwait
icebp
out
mov
adc
out
in
popa
rcrl
jp
mov
xchg
out
xchg
or
add
movntps
leave
pop
out
push
xchg
xor
xor
cwtl
cmp
stos
add
add
movsl
clc
pushf
dec
cmp
out
stos
addl
adc
mov
pop
jl
repz
rclb
adc
cmp
leave
push
or
cmpsl
jge
sbb
lahf
mov
mov
lahf
dec
mov
sbbl
push
jmp
sbb
popf
pushf
push
mov
xor
push
ret
sbb
rolb
jo
jb
xchg
pop
jecxz
je
enter
mov
mov
mov
add
sahf
xor
cmc
sbb
pusha
inc
imul
pop
aaa
scas
jecxz
dec
pop
ja
fs
xchg
pop
sbb
cs
pop
dec
imul
cmc
inc
loopne
loopne
fistpll
push
mov
bound
test
es
fidivrl
or
pop
mov
mov
push
mov
test
push
stos
cmc
fwait
adc
rcrl
iret
filds
inc
sahf
mov
stos
or
adc
push
pop
out
sbb
imul
outsb
dec
ret
sbb
out
lea
push
pop
rorl
and
test
bound
imul
inc
leave
cs
gs
aas
mov
push
mov
mov
xor
sbb
jecxz
cmpsb
movsb
arpl
iret
mov
dec
xchg
sbb
repz
arpl
cmp
jmp
xlat
test
xchg
int3
stos
stos
mov
sbb
scas
mov
repnz
jbe
aam
add
dec
inc
push
mov
test
or
lods
xlat
out
cmp
arpl
negb
pop
dec
xrelease
scas
push
mov
and
and
lock
mov
lods
jg
jmp
mov
mov
push
mov
push
test
dec
or
mov
test
dec
jmp
mov
jns
sbb
test
leave
int3
mov
jle
pop
or
mov
add
sub
fmuls
sub
jl
shll
mov
cwtl
mov
insl
mov
sbb
test
pop
mov
adc
mov
aad
jo
imul
ret
outsb
sbb
call
push
mov
add
enter
scas
push
loope
jge
lds
jns
xchg
cmc
or
sbb
or
movsl
dec
std
push
xchg
ret
add
rol
aam
in
lar
lods
lods
lret
mov
pop
or
push
into
push
mov
add
out
push
xchg
repnz
test
sbb
fbstp
stos
push
aam
pusha
push
sub
dec
mov
sub
add
dec
push
pop
inc
push
test
pop
bound
clc
cmp
adc
lods
mov
and
rorl
les
xor
stos
fildl
aas
fldenv
dec
movsl
ret
test
dec
in
inc
mov
pusha
in
arpl
lcall
js
push
push
faddl
pusha
mov
jle
mov
push
cltd
rclb
cmp
add
xor
push
je
push
aam
fst
nop
popf
mov
dec
shlb
mov
xchg
jg
fxch
fxch
cli
add
icebp
in
push
cmp
cs
pop
sub
out
pushf
adc
sar
outsb
or
std
or
incb
push
mov
push
jle
test
pop
outsl
pop
push
ss
in
movsb
daa
rorb
lock
ror
lds
push
loopne
push
lcall
shlb
and
jnp
sub
mov
sub
inc
divl
aad
loop
enter
neg
cwtl
pop
cwtl
cltd
andl
push
lds
push
sbb
and
mov
cmp
addr16
jge
push
shll
jmp
aas
pusha
or
decl
out
inc
mov
jecxz
shl
adc
mov
dec
push
mov
cld
dec
xchg
or
daa
movsb
fcompl
enter
pop
loope
xchg
mov
repnz
cmp
je
daa
mov
mul
sbbl
mov
pop
push
lcall
lcall
mov
jns
adc
sbb
mov
rcr
xor
dec
sub
jl
ret
mov
out
jno
and
mov
cmp
daa
xlat
fistps
iret
je
adc
inc
or
xchg
fcmovne
hlt
add
mov
mov
sub
sub
or
xchg
popf
push
dec
add
daa
push
add
pop
pop
cmp
fiaddl
dec
cltd
out
dec
mov
clc
xor
pop
orl
xor
push
xrelease
adcb
test
push
roll
stc
incl
testb
adc
dec
jle
cmp
mov
lods
dec
stc
mov
fdivrs
out
leave
and
in
mov
mov
aas
dec
mov
stc
xchg
fsubr
push
pop
pushf
int
je
fidivs
fmull
push
enter
sbb
lahf
sysret
scas
or
cmp
sub
dec
or
push
ret
clc
xchg
out
push
sar
add
mov
adc
cmp
push
jo
arpl
daa
mov
das
adc
and
imull
pop
je
mov
push
aas
aas
std
cli
mov
jp
shr
cwtl
jge
and
jae
inc
ljmp
mov
and
out
orb
mov
aad
adc
aas
inc
cwtl
or
mov
in
icebp
cmp
fnstcw
loope
or
add
xor
cli
cmp
mov
add
jle
mov
lods
jl
rcl
dec
aam
aas
icebp
inc
iret
mov
and
adc
lods
xor
pop
mov
je
jmp
ljmp
mov
ds
aas
inc
lcall
incb
pop
ja
mov
cmp
mov
je
add
pop
ljmpw
dec
push
mov
es
es
cld
inc
cwtd
daa
mov
or
int
xchg
jecxz
mov
jmp
cmp
repnz
lods
iret
rcll
outsl
push
cmp
cwtl
shr
cltd
rcr
and
or
outsb
subl
jns
push
in
cltd
jle
jbe
push
jmp
std
jmp
xchg
jne
adc
pop
imul
or
mov
cmp
ja
sti
dec
mov
add
mov
lcall
rorb
mov
cld
jmp
lahf
cmp
add
push
sub
mov
mov
decb
repnz
mov
dec
jae
mov
roll
fs
mov
inc
mov
lock
dec
sti
lds
int
call
shrl
push
cmp
xor
pop
xorb
or
popf
or
mov
cmp
push
cmp
lahf
imul
test
sub
out
xchg
dec
dec
int
mov
cmp
not
push
or
adc
pop
cli
cmpsl
fnstcw
enter
xchg
shrl
xchg
pushf
aas
pop
cltd
int
gs
ret
popa
jmp
rol
stc
or
std
mov
pop
mov
dec
dec
imul
lcall
pop
mov
inc
stos
or
dec
push
into
out
inc
pop
and
mov
jge
das
inc
push
mov
leave
je
outsb
xlat
enter
or
dec
mov
sti
cmp
adc
mov
push
out
idivl
cmp
cmc
xor
dec
mov
in
xchg
test
enter
push
aad
xchg
or
inc
sub
shl
jne
popa
ds
pusha
xor
imul
divl
xchg
ljmp
jmp
cmpsb
dec
cs
stc
jge
cmp
mov
arpl
aas
bound
addr16
and
insb
mov
int3
in
and
and
clc
neg
jbe
sub
test
jp
int
inc
mov
jb
cmp
push
daa
addl
pushf
shrb
mov
ficoml
add
shrl
add
leave
shrl
push
xor
and
xchg
jns
xchg
xlat
push
cmp
jecxz
ret
jg
inc
xchg
pop
rcrb
fcmovb
mov
or
dec
pushf
inc
out
pop
pop
xchg
add
cmc
jmp
popl
xchg
add
mov
enter
or
out
out
jge
stos
mov
cld
icebp
shrl
cmpb
add
push
push
xchg
idivl
daa
stc
xor
fists
mov
sbb
test
in
jge
nop
and
xor
loopne
lcall
adc
mov
idivl
dec
mov
fwait
daa
call
js
mov
xchg
adc
push
jbe
in
je
pop
es
mov
lahf
sbb
adcl
lahf
lods
cwtl
sub
xor
sarb
out
bound
push
int3
or
or
orl
lahf
aad
fldcw
pushf
sahf
aam
mov
loopne
xor
jp
pushf
mulb
call
in
rorb
mov
xor
test
inc
cmc
scas
add
scas
fcoms
jb
adc
xchg
gs
or
divb
andb
lock
ss
repz
out
sbb
mov
mov
and
push
loopne
and
cmp
mov
out
jp
dec
mov
aam
cmp
push
cli
adc
repz
jmp
xor
lds
popf
fstpt
ljmp
int
or
jecxz
testb
mov
cmp
cmp
sbb
sbb
ficomps
lahf
outsb
daa
lds
mov
jns
stos
pop
aaa
mov
pop
pop
rorb
insb
xchg
xor
jo
scas
addr16
out
mov
ljmp
pushf
std
loop
pushf
rclb
mov
adc
jno
xchg
fisubrs
jecxz
mov
or
ja
in
sub
xor
xchg
or
xchg
fldenv
enter
lods
ss
dec
sti
xchg
and
out
mov
outsb
mov
out
pushl
je
test
fstpl
pop
cltd
sbb
repnz
sbb
cmpb
int3
push
inc
and
xchg
movntq
xor
inc
mov
and
push
lret
xchg
int3
push
int
lds
xchg
mov
jno
dec
xchg
data16
inc
inc
cmp
inc
arpl
jle
jge
mov
imul
aaa
aas
dec
xor
mov
jl
mov
mov
lods
xor
push
outsl
test
push
addr16
pop
lods
push
inc
not
stc
jmp
mov
mov
adc
xor
xchg
enter
jae
aad
inc
lcall
in
xlat
sbb
std
xchg
add
ss
jge
cltd
xchg
or
fimuls
icebp
movsb
stos
lods
xlat
sar
int
pop
std
push
test
add
test
lret
mov
out
js
xchg
mov
add
xchg
fisttpll
imull
iretw
jl
icebp
out
sbb
mov
cwtl
pop
dec
lret
push
adc
sbb
sbb
adc
push
xchg
jne
fwait
test
add
fistps
lret
cvttps2pi
jbe
jns
pop
mov
push
notl
shll
bound
cmovge
cmp
cmp
jne
lret
mov
test
inc
adc
adc
dec
inc
in
cmc
lret
movsl
mov
mov
ljmp
sbb
pop
sarb
mov
mov
fucomp
pop
push
mov
int3
cmpsb
add
bound
gs
arpl
inc
das
test
aad
or
mov
cmp
fnstenv
subl
push
xchg
shll
or
push
add
ret
xchg
sub
pop
popf
cmpb
push
aad
sti
xor
roll
dec
dec
cmp
div
inc
mov
repz
rep
adc
and
and
ret
ret
mov
push
push
aaa
std
cmc
pusha
or
adc
inc
gs
leave
repz
stc
test
sub
jb
mov
mov
lods
fs
pop
pop
mov
push
ret
sbb
push
add
aaa
enter
cmc
addr16
xchg
aas
ja
jo
stc
lcall
fmul
push
test
out
and
outsb
and
mov
psubq
and
call
dec
lock
lret
push
incb
cmp
xor
sbb
pusha
fsubrl
int
fs
pop
pop
aaa
mov
ficoml
sub
loopne
or
adc
pop
ret
fistpll
jns
iret
push
dec
imul
inc
movsl
enter
dec
lcall
outsl
fnstcw
adc
pop
xor
lahf
fcomp
subl
xorb
xchg
mov
pop
mov
push
mov
cmp
bound
rcl
jp
mov
push
xchg
loopne
push
jbe
xchg
inc
lds
rorb
lret
xchg
fldt
std
adc
rcl
out
popa
xor
dec
add
jnp
inc
xchg
push
ficoml
inc
and
addr16
cmp
jno
outsl
xchg
cld
sub
dec
test
sbb
sub
mov
mov
iret
dec
fisttps
fbstp
inc
and
jecxz
loope
adc
xchg
jae
movb
adc
adc
push
pop
push
cwtl
push
popf
xchg
ss
push
outsb
lods
lods
int3
jae
idivb
jp
jnp
push
adc
movsl
cmp
mov
sub
out
mov
adc
cmc
mov
sbbl
inc
jo
push
pop
mov
dec
into
cmc
mov
dec
add
jle
cmpsl
jne
xchg
es
xor
push
mov
pushl
imul
xchg
jle
cmp
ds
loopne
fs
mov
scas
push
clc
mov
fbld
pop
push
icebp
aas
ds
cmc
inc
xchg
sbb
push
mov
push
xor
mov
add
outsl
lock
leave
jbe
lahf
out
push
cld
cld
ret
out
xchg
lret
mov
mov
lahf
mov
fs
jg
xchg
sub
ds
lret
and
call
cmc
shrl
popf
adc
pushf
inc
inc
sbb
rcll
rcrb
int
out
lahf
aas
test
xor
ljmp
xchg
sahf
and
leave
sub
pop
mov
xor
xchg
add
xor
les
adc
test
rol
std
pop
mov
or
sti
out
pop
mov
out
sbb
subl
daa
repnz
adc
inc
mov
stos
rcr
push
mov
mov
jae
cltd
jnp
mov
imul
jnp
fistl
stos
lret
pushf
dec
decl
dec
push
pop
sbb
stc
orb
dec
bound
jnp
lds
ret
fwait
cmc
cmp
push
pusha
add
cs
inc
add
mov
rorl
xchg
adc
test
imul
push
loopne
movsl
mov
mov
cmp
cmpsl
hlt
loop
popf
mov
jmp
sbb
aam
sar
inc
mov
test
inc
loop
push
xor
jecxz
mov
jnp
add
fwait
out
hlt
adc
mov
xchg
adc
cmp
aam
fwait
aad
or
lcall
fincstp
jb
xchg
mov
sbb
jbe
jbe
ljmp
cmpsl
or
fisubrs
out
fcmovu
popa
sub
push
fwait
leave
es
xor
scas
repz
sbb
mov
lcall
imul
add
fsubl
je
sti
jae
adc
jle
jns
sub
lret
outsb
or
stc
ljmp
xor
hlt
inc
enter
ret
nop
adc
pop
cli
divb
add
inc
jmp
xchg
cmp
adc
add
je
insl
mov
fistpll
scas
mov
pushf
cmp
lsl
push
iret
cwtl
iret
jge
pop
mov
mov
or
inc
pop
loopne
rcrl
add
lods
insl
int
stc
fisubrl
aaa
sub
push
adc
or
cmovg
popf
jle
les
sub
jge
sub
mov
cmc
sbb
xor
inc
ror
mov
aas
mov
adc
ja
sbb
das
add
adc
arpl
arpl
mov
xchg
shll
loop
out
or
ret
and
jmp
push
dec
in
shlb
test
push
adc
push
arpl
xchg
add
mov
push
dec
xchg
or
jnp
and
cmp
daa
xor
adc
in
fnstsw
mov
divb
popa
orl
dec
inc
pop
lret
dec
cmp
ds
aam
cld
sbb
or
in
mov
aas
movsl
mov
ror
push
stos
ja
lret
sbb
sub
lods
rcrb
dec
ljmp
jmp
insl
inc
xor
idivl
inc
push
xor
push
pop
test
imul
pop
push
push
lcall
rcrl
sub
ja
fwait
js
imul
dec
fstps
sahf
or
fs
loope
in
inc
or
daa
push
xchg
xor
out
jmp
dec
lret
shrl
cmp
je
lds
fldl
imul
adc
pop
int3
mov
sub
or
cmc
inc
adc
lods
cltd
add
fnstsw
dec
xchg
ds
sub
iret
jmp
xchg
loop
sub
jl
inc
out
lahf
addl
mov
inc
adc
mov
add
mov
and
pop
jno
sti
pop
jg
cwtl
sub
scas
mov
jmp
pop
hlt
inc
jle
xchg
pusha
xor
push
push
push
xor
imul
int
lret
and
ret
cmpsb
push
pop
jmp
test
sub
dec
sub
in
pop
repnz
jp
test
cmpsb
mov
pusha
mov
dec
sbb
inc
cli
int3
mov
cmpb
and
fsts
push
inc
sub
imul
je
add
xor
mov
cmp
aam
clc
sarl
mov
insl
jl
pop
mov
jae
push
xchg
pushf
cli
ljmp
ret
lahf
loop
mov
adc
leave
xchg
xor
pop
repnz
mov
imul
jg
out
fstl
sahf
inc
jmp
pushf
xor
sbb
add
jmp
pop
xor
sub
push
sub
stc
out
jmp
icebp
jne
or
std
jle
repz
xor
push
sub
shlb
xchg
das
and
scas
xchg
and
sarb
adc
push
cmp
mov
jmp
cbtw
in
xorb
sbb
add
stos
sbb
sahf
ret
test
lahf
add
in
mov
sub
lret
popf
cmp
mov
mov
in
push
or
pop
or
cmp
imul
lds
and
jle
push
out
loopne
in
mov
mov
and
fsubl
sub
cmpsb
inc
mov
xor
push
xchg
ficompl
sbb
movsl
push
lret
push
cmp
jmp
in
mov
mov
or
idivb
mov
mov
fnstsw
sbb
lods
ror
in
and
mov
jb
mov
jns
sub
nop
add
dec
jl
push
arpl
outsb
xor
pop
xor
div
ss
je
pop
xchg
jp
jb
repnz
cmc
std
shlb
jbe
imul
bound
xlat
cwtl
aaa
pusha
dec
and
sub
icebp
call
lock
scas
cmpsb
sbb
adc
fldt
sti
pop
daa
adc
xchg
mov
fcmovu
gs
jge
pop
pop
push
xchg
andl
movsl
jne
fidivrs
test
sbb
pop
push
lods
mov
ljmp
sti
sti
pop
out
ret
ljmp
loop
das
loop
mov
mov
mov
lods
lds
sti
xchg
mov
fcoms
outsl
repnz
in
xchg
push
fs
jmp
in
test
and
int3
movsb
repnz
inc
jp
repnz
and
jo
imul
sbb
cmpsl
jge
adc
je
cmpsb
cli
xchg
mov
imul
sbb
or
mov
pop
jp
dec
pushf
cmpsb
das
jl
dec
or
mov
mov
xchg
cmp
fisttpl
icebp
sbb
inc
mov
push
outsl
ljmp
mov
mov
pop
aam
ret
jecxz
mov
rolb
mov
jmp
inc
xchg
outsb
jne
lods
shl
pop
bound
cmp
dec
fcmovnu
or
mov
jns
push
add
popa
add
call
movsb
lods
imul
js
rolb
jle
sub
mov
pop
out
rcll
pusha
push
dec
mov
stos
test
cltd
add
sahf
popa
repz
pushf
das
dec
and
cmp
sti
jmp
sbb
rcr
xor
and
ret
insl
out
mov
sarl
sbb
mov
ds
enter
mov
idivb
mov
in
add
jl
push
pusha
int
push
icebp
xor
inc
in
push
mov
jl
jl
je
fistl
iret
movsl
sub
jo
or
mov
icebp
xchg
dec
int3
insl
adc
inc
aad
mov
mov
ljmp
inc
sbb
ljmp
or
dec
lds
pop
out
mov
cli
push
fdivs
inc
mov
dec
xchg
popf
in
rcll
cli
call
ljmp
xor
pop
cmc
test
cs
pop
rcl
xor
aas
sub
cmp
mov
retw
mov
fmuls
mov
push
sub
scas
sbb
fadds
mov
dec
pop
jge
jg
inc
scas
and
es
add
jne
sub
rorb
jge
jns
pushf
pop
jle
dec
sbb
icebp
xor
jecxz
cs
push
cmp
sbb
sbb
xchg
dec
jne
ja
and
inc
icebp
mov
dec
xchg
xor
ljmp
pushf
je
movsl
sti
repnz
xchg
fistpl
jle
hlt
mov
pop
lods
and
pop
int
or
mov
xor
cmp
and
mov
fsubs
and
jle
stc
jmp
dec
adc
int
scas
shlb
jnp
iret
outsb
xor
add
mov
inc
adc
or
mov
ljmp
pop
cmc
pop
mulb
sahf
movsl
aad
dec
sbb
adc
out
popf
movsb
popf
sbb
stos
dec
cmp
aad
pop
sbb
or
mov
mov
pushf
add
adc
ss
xchg
aam
cmp
mov
push
dec
ret
in
lods
mov
addl
decb
xor
and
and
out
mov
lret
fildll
nop
pop
gs
sbb
mov
in
mov
xor
das
pop
mov
lret
loope
insb
stos
das
jmp
int3
aad
jecxz
imul
mov
testl
add
push
gs
jnp
xor
ret
lock
jb
cmp
push
fcomps
pop
cmp
inc
fimuls
push
fiadds
sub
cwtl
dec
adc
mov
in
mov
nop
scas
int
dec
pop
jle
sub
dec
mov
into
repz
jg
xor
xchg
dec
inc
popa
pushf
leave
or
and
out
out
or
jns
stos
cwtl
mov
jne
sub
lret
leave
sub
iret
outsb
adc
fimuls
xchg
pop
rcrl
push
cmp
dec
xor
fwait
outsl
add
out
inc
sub
inc
js
mov
adc
call
push
outsl
sbb
adc
loop
inc
pop
imul
scas
inc
int3
xor
pop
mov
sbb
mov
mov
cmp
leave
aam
rol
imul
cmp
in
js
inc
sbb
sub
push
out
push
push
pop
push
xchg
cli
dec
adc
icebp
mov
push
mov
adc
xor
push
mov
sarl
iret
jmp
fisttpl
enter
or
int3
sbb
xchg
jb
shrl
sbb
dec
pop
or
or
and
out
dec
xlat
and
sub
push
dec
xorl
jo
push
and
std
mov
adc
les
ror
mov
push
pop
out
dec
in
bound
adc
inc
sub
flds
test
scas
fstpt
and
in
ds
pusha
loope
mov
aam
dec
pushf
mov
mov
sub
mov
dec
cmp
loopne
push
dec
mov
enter
in
jmp
pop
inc
pop
lds
xorl
test
loop
xchg
xlat
rcl
cltd
adc
call
imul
mov
mov
inc
out
lods
stc
jb
jmp
jecxz
fsubrl
push
ja
sub
xchg
mov
mov
fs
adc
imul
cmp
out
repnz
mov
pop
sbb
fsubl
sub
ja
push
out
insl
fldenv
je
lret
std
int3
andl
aad
ret
sarb
in
adc
nop
pusha
dec
out
test
inc
push
lea
push
pop
cwtl
loopne
mov
push
dec
xchg
cli
mov
jo
loope
pop
leave
sbb
repnz
push
mov
lock
mov
mov
icebp
shrl
les
rol
and
sub
mov
and
mov
cmc
dec
dec
xchg
outsb
js
xor
xchg
outsl
adc
jle
push
fmull
push
or
out
cmp
push
adc
ds
xchg
lret
imul
jge
loop
mov
xchg
aaa
sbb
xchg
pop
mov
nop
sub
imul
mov
lock
xor
adc
popa
push
xlat
fstps
sub
sti
pop
je
inc
lea
lea
rolb
popa
mov
loopne
lret
rclb
and
sub
mov
jno
shll
in
dec
and
jbe
inc
sbb
int3
fadds
push
sar
fadds
ds
sti
aam
lods
nop
xchg
pop
mov
fdivp
imul
xlat
mov
jo
and
sbb
sub
into
mov
push
mov
shlb
test
push
xor
test
insl
idiv
jbe
cwtl
sbb
jecxz
out
dec
mov
test
jnp
in
jmp
rolb
std
dec
in
jg
xlat
clc
pop
dec
inc
push
rcrb
add
cli
in
lods
mov
in
mov
mov
xorl
jbe
pop
push
cmpsl
les
icebp
jb
jmp
pop
mov
ds
add
add
in
pop
inc
fneni(8087
mov
add
jle
add
ror
mov
jo
fimuls
stos
add
notl
sub
out
jns
xor
push
insl
fsubr
lret
andb
push
mov
insl
dec
ja
mov
dec
cmp
sbb
movl
sub
jp
test
or
movsb
ret
push
test
push
or
loop
aad
test
icebp
adc
xor
fsubrs
mov
add
call
arpl
add
nop
jg
call
fisubs
cmp
test
mov
fwait
hlt
sub
sub
adc
jg
daa
push
xchg
mov
adc
adc
cmp
pop
fldt
rcrl
sbb
mov
and
nop
cmpsl
stos
movsb
xchg
in
das
cwtl
jg
rclb
adc
and
ljmp
inc
push
xchg
bswap
jle
pop
fiadds
daa
call
push
sub
sub
ljmp
and
in
cmpsb
and
or
mov
in
mov
lea
sbb
stos
iret
jae
es
jns
push
sub
inc
pop
xor
outsl
ja
cli
mov
add
mov
jg
repnz
xchg
sbb
xchg
fwait
push
stc
fldcw
mov
fcoml
imul
aad
mov
mov
js
inc
das
sti
mov
mov
cltd
dec
stos
sbb
pop
and
outsl
cmpl
cli
xor
adc
mov
push
mov
imul
in
sbb
mov
pop
sbb
cmp
call
push
cs
or
or
sbb
pop
mov
sub
pop
adc
subl
lds
fsts
xor
stos
cs
dec
popa
dec
repnz
or
popa
sub
mov
mov
arpl
inc
testl
in
pop
ja
in
mov
imul
or
sbb
mov
fnsave
jbe
test
or
jno
push
mov
jecxz
aad
push
imul
or
dec
fldt
mov
int
pop
ja
das
jmp
imul
cmp
dec
out
sub
sbb
sub
sub
rorl
daa
xchg
es
lods
pop
mov
cmc
push
cwtl
add
adc
jns
jnp
sbb
sub
stos
xchg
pop
xorl
subb
or
jg
mov
jae
push
lcall
lds
sub
cmc
test
jmp
push
insl
les
icebp
jecxz
outsb
pop
shrb
adcb
outsl
jns
cmpsb
or
adc
mov
cltd
jbe
dec
faddl
xchg
or
jmp
enter
jge
les
sub
jge
loop
xchg
dec
lret
mov
xchg
pushf
inc
jl
fstpt
aad
ljmp
pop
xor
sbb
insl
test
enter
test
dec
cmc
dec
xchg
add
aaa
out
dec
jnp
push
pushf
mov
push
inc
push
xor
and
jge
out
ret
loope
imul
int
and
in
xchg
leave
rorl
fists
and
sub
mulb
rorl
arpl
enter
pop
sbbl
push
test
filds
pop
addl
inc
mov
xor
sub
jl
int
xchg
cmc
push
or
push
mov
lret
sti
adc
or
ficoml
xchg
mov
dec
jp
fiadds
lods
js
scas
test
aad
or
insb
je
mov
adc
fwait
jnp
pop
dec
jno
popf
mov
rclb
clc
sti
sbbl
cwtl
cmp
push
xchg
popa
aaa
mov
sub
sbb
cli
mov
gs
adc
enter
or
xchg
fidivrs
pop
mov
adc
adc
jle
je
and
mov
mov
inc
imul
scas
pop
sbb
mov
int3
pop
pop
pop
in
out
xor
cmp
stos
mov
dec
and
and
movsl
out
add
arpl
fisubl
pop
imul
mov
call
imul
fstps
pop
int
push
cmp
jmp
mov
pop
ljmp
xor
mov
pusha
daa
insl
and
dec
lahf
shr
popa
pop
mov
int
mov
ret
fldcw
lds
out
jl
sbb
jnp
nop
and
inc
or
and
cmp
dec
or
daa
pop
in
test
cmp
adc
jno
adc
xor
rcll
and
outsl
pop
sub
pop
adc
fdivrp
mov
jae
inc
pop
ja
test
mov
sub
inc
pop
sbb
int3
jo
punpckhdq
sub
pop
mov
push
sub
sbb
dec
xor
js
and
xchg
fwait
and
inc
int3
mov
insl
in
pop
adc
or
insl
cld
pop
gs
xchg
xor
loope
xchg
push
sbb
fs
loope
out
popf
push
and
cmc
out
jge
test
mov
mov
ret
sbb
add
test
inc
push
iret
push
sub
ficompl
lea
add
stc
in
xchg
imul
movsb
outsb
mov
fcmovne
mov
xchg
icebp
xor
fadds
or
cltd
push
xchg
repz
lock
dec
mov
fprem
fstps
mov
xchg
scas
adc
popl
frstor
dec
adc
mov
std
mov
mov
dec
adc
test
add
jmp
std
hlt
push
rcll
push
int3
mov
inc
aad
xor
loope
out
cwtl
lds
psraw
lea
mov
scas
pop
add
int
and
pop
clc
or
xorb
sti
pop
popa
xor
lahf
push
loop
mov
ret
dec
scas
adc
test
jp
andb
pop
das
sarb
and
cmpsl
jg
lret
push
push
js
xor
pop
mov
bnd
call
lahf
decb
inc
mov
fimull
dec
and
outsb
cwtl
insl
das
and
nop
adc
dec
enter
push
test
aam
mov
xchg
andl
jmp
push
fs
pop
in
das
test
mov
pop
or
pop
xchg
call
ja
cltd
mov
bound
hlt
das
inc
dec
call
xchg
jae
push
cmp
add
mov
add
out
or
pop
jnp
cwtl
fcompl
loopne
xchg
fsubrl
mov
stos
outsl
cli
lcall
ss
mov
xlat
mov
mov
jge
popf
adc
js
push
insl
ffree
ffree
jae
fistpl
mov
cld
jmp
daa
shl
mov
mov
sub
movsl
in
in
jne
add
add
sbb
xor
mul
inc
je
repz
imul
and
mull
imul
jmp
rclb
inc
shll
repz
insl
push
and
jecxz
daa
push
lret
cs
movsb
cmpsl
adc
es
test
fadd
xchg
push
mov
cmc
dec
jno
cmpsl
insb
outsb
sti
jno
clc
mov
pusha
imul
mov
add
rolb
mov
lods
pop
mov
add
in
jmp
mov
ds
jl
nop
sub
inc
adc
dec
adc
cli
ljmp
and
add
jbe
and
das
pop
sub
lret
in
ss
add
push
iret
out
sbb
rolb
fidivrs
sub
mov
sub
loope
pop
inc
xor
mov
jbe
into
xchg
clc
xor
lcall
div
or
ret
lahf
pop
and
aam
rcrb
fs
mov
fmuls
push
js
std
sbb
or
in
adc
cmp
cli
cmc
clc
xchg
add
mov
out
jl
dec
cmp
add
sti
push
mov
and
js
fbld
ror
rcll
jl
pop
mov
je
cmp
shrb
test
fnstcw
js
jmp
sti
cmp
mov
pop
or
aam
push
ret
lea
mov
jno
mov
scas
xlat
dec
add
or
sbb
dec
xchg
push
mov
stc
push
and
rcll
xchg
in
ljmp
insl
loop
jg
mov
out
dec
loope
jg
xlat
jne
gs
jmp
cmp
push
push
jmp
mov
xchg
sbb
lods
ds
mov
loope
add
test
ds
dec
inc
push
add
stos
mov
sub
mov
push
fsub
cmp
repz
push
xchg
and
pop
jmp
and
pop
call
repz
cmp
fisttpll
or
ljmp
xchg
pop
inc
imul
pusha
xor
dec
pop
mov
adc
adcb
mov
xchg
adc
mov
jmp
fsubr
jns
push
push
fld1
inc
ds
out
and
lods
dec
int
in
arpl
into
imul
ret
pop
mov
cmp
add
dec
fidivs
ret
loope
cmpb
adc
and
mov
mov
loope
sub
addr16
mov
daa
mov
out
xor
inc
hlt
das
rdtsc
jmp
mov
imul
es
dec
jle
sbb
xchg
cmpb
popa
jp
xor
mov
dec
mov
incb
jg
test
mov
in
mov
lret
inc
adc
jp
cmpl
pop
roll
std
pop
mov
into
xor
outsb
xlat
add
and
stc
mov
push
mov
mov
mov
jno
movsb
das
and
movsb
xor
sbb
push
daa
xchg
cld
inc
ffree
xchg
mov
lods
fildl
add
inc
imul
pop
loope
pushf
xchg
cmp
mov
adcb
loope
iret
sub
inc
or
js
jno
push
int3
mov
inc
in
lret
insb
push
mov
add
or
xchg
push
dec
xor
mov
mov
fiadds
and
loop
mov
shrb
or
loope
sub
sbb
dec
mov
and
add
imul
out
andl
mov
mov
push
aad
push
inc
sbb
roll
icebp
jae
fisubrl
out
call
daa
pop
xchg
pop
and
aas
scas
stc
add
adc
inc
test
dec
fnsave
pop
inc
mov
and
movsl
mov
aad
rclb
xchg
add
mov
pusha
xrelease
leave
jnp
into
rorb
pop
inc
mov
xchg
frstor
lret
sbbl
lcall
sbb
push
movsl
jb
enter
testl
jp
insl
jmp
leave
cmpsb
imul
rclb
sbb
rclb
mov
stos
std
mov
push
and
dec
stos
mov
xlat
int3
push
push
aad
jmp
sub
mov
mov
adc
push
sbb
and
aam
inc
and
outsl
mov
jnp
xor
xorb
fwait
dec
inc
push
loop
mov
jae
push
es
xorl
arpl
or
pop
xor
jns
jg
add
aam
mov
pop
jp
addb
add
lods
push
mov
cmp
testl
rolb
add
fcomps
lcall
scas
clc
call
idivl
roll
pop
in
jbe
popf
inc
jle
arpl
push
leave
or
push
cmp
mov
test
and
shlb
mov
xchg
inc
and
aad
and
cmp
cwtl
xchg
stos
out
popf
adc
sub
dec
jns
add
mov
xchg
inc
push
push
push
sbb
mov
fs
xlat
idiv
xor
push
push
push
sbb
mov
sti
pop
mov
dec
lcall
out
pop
pop
inc
add
mov
les
inc
orb
mov
rcrl
mov
xchg
leave
inc
pop
in
jnp
pop
and
mov
cmp
mov
aaa
dec
rcrl
pop
cmp
mov
fidivrs
xor
jae
inc
hlt
aad
in
xor
les
or
lcall
xchg
jmp
pop
pop
test
insl
mov
in
cmp
add
mov
out
push
jmp
xchg
and
pop
jg
jge
addr16
cmp
xchg
out
rcll
mov
test
xchg
daa
mov
or
mov
xor
leave
lea
pop
daa
lods
aad
mov
test
in
pop
int3
sbb
push
and
std
mov
dec
inc
push
iret
leave
jecxz
adc
xor
jg
lret
mov
or
mov
adc
lea
sub
mov
adc
aam
ljmp
or
mov
cmp
shrb
push
push
mov
cs
mov
push
sbb
addr16
dec
aam
loope
and
pop
cmc
cmp
mov
mov
push
adcb
jae
inc
aam
arpl
mov
sahf
bound
aas
cs
cmp
xchg
scas
sub
cmp
xchg
iret
jo
ja
rcr
in
xchg
lahf
push
lock
xchg
scas
pop
cmp
aam
in
stc
movsl
repnz
aad
stos
sub
add
dec
das
cmp
jne
cmpsb
loope
xchg
leave
iret
pop
xchg
sbb
mov
adc
dec
scas
lods
push
xchg
xchg
xor
data16
mov
iret
in
push
mov
nop
xor
sbb
out
jo
lret
fimuls
rorb
aaa
inc
rorb
icebp
sahf
xchg
lock
push
sbbb
leave
xchg
cmpsb
cmp
add
or
bound
rcr
dec
pop
int3
addb
sbb
loop
inc
or
lea
add
pop
mov
fwait
dec
aaa
dec
ss
jle
lds
sarl
shrl
pop
mov
into
call
or
adc
jnp
loop
add
lds
jle
mov
popf
shlb
dec
and
daa
inc
adc
dec
js
push
xor
dec
out
std
adc
cltd
dec
insb
mov
lods
add
mov
dec
sahf
inc
test
inc
add
adc
pop
inc
cmpl
mov
popa
xor
sub
adc
pop
xor
mov
xor
dec
shl
lret
dec
sub
jbe
negl
in
mov
and
or
icebp
in
jo
sbb
push
adcl
pop
scas
mov
inc
fnstcw
cmp
push
push
into
jg
pop
loop
data16
push
xchg
jmp
in
dec
in
dec
xchg
pop
mov
lret
sbb
inc
imulb
aaa
popf
xchg
pop
mov
lods
rorl
jl
mov
jb
jns
mov
das
jb
pop
mov
call
mov
inc
sarb
int
outsl
es
fbstp
or
and
cmpsl
pop
mov
andl
jne
dec
xchg
mov
sbb
lret
xor
ja
dec
je
mov
add
test
pop
lods
inc
pop
mov
imulb
loope
push
mov
mov
into
rcll
fs
jns
xchg
or
movsb
divl
sahf
leave
mov
les
pop
xor
push
or
fsts
lds
roll
xchg
inc
and
jge
scas
rolb
scas
inc
lods
jmp
sahf
fcmovb
or
sbb
add
les
sahf
mov
push
ja
mov
and
loop
pop
les
imul
call
cmp
push
cltd
test
xchg
insl
jl
inc
shl
lea
jg
xchg
push
outsl
sbb
cld
dec
mov
xchg
add
mov
aas
add
ja
inc
cld
sub
push
pop
adc
lret
pushf
xchg
mov
push
or
jle
mov
mul
push
nop
inc
cmpsl
sahf
mov
add
imul
or
leave
fistl
mov
es
and
jge
aam
js
loop
and
outsb
inc
sahf
sub
in
notb
adc
lcall
cmp
leave
dec
cmp
mov
movsb
icebp
inc
xchg
mov
aam
repnz
jmp
scas
decl
jo
and
lds
nop
or
imul
mov
xor
jnp
inc
lods
xchg
bnd
mov
fsubr
loop
inc
sbb
sbb
cld
ja
pop
es
pop
inc
push
push
test
xor
sub
add
fs
cmp
insb
mov
lods
pop
mov
add
adc
cwtl
leave
bound
orl
fidivl
push
xor
jle
enter
add
adc
stos
xchg
shlb
out
andb
xlat
sbb
jo
pop
jne
out
push
leave
pushf
mov
dec
mov
stos
inc
andl
addr16
sbb
pop
jmp
out
into
xchg
mov
or
mov
stos
push
and
bound
int
adc
mul
add
jno
xor
bound
xchg
aad
iret
cmp
add
clc
push
imul
fwait
bound
popf
add
loop
jl
lea
out
inc
outsl
aas
dec
mov
fsubrp
scas
int3
in
jnp
pop
call
xor
push
mov
and
das
inc
fucomip
aam
pop
inc
sbb
push
inc
or
out
outsb
adc
outsb
and
cwtl
std
aaa
bound
call
push
dec
aad
and
lock
mov
imul
gs
loop
daa
push
dec
mov
mov
fldpi
mov
cmp
xor
and
jno
jl
in
lods
jb
rorl
jle
loop
dec
cltd
into
add
gs
ret
popa
mov
outsl
frstor
push
pop
mov
adc
sbb
pop
jge
fadd
dec
loop
xchg
stos
dec
mov
lret
xchg
mov
sub
lock
jmp
push
fists
bnd
inc
mov
std
lds
subb
adc
xor
sbb
clc
pop
cwtl
fsts
xor
gs
ficoms
jnp
jb
or
mov
nop
pop
stos
jne
push
test
mov
xchg
bound
mov
in
mov
pusha
push
insb
jae
clts
sub
mov
adc
xor
outsl
mov
pop
mov
ret
sub
xchg
inc
fmuls
jp
add
push
cltd
sbb
xor
push
lock
xor
negl
cmp
sti
adc
cmp
out
inc
popf
and
and
dec
mov
push
push
jg
inc
mov
cmc
das
xchg
shl
dec
faddl
jge
mov
cmp
out
arpl
sub
xchg
sbb
fidivrl
scas
dec
or
lods
pop
sarb
mul
jnp
xchg
mov
xchg
mov
nop
fcmovbe
jge
lds
or
cmp
movsb
pop
test
push
es
leave
add
orl
sarb
add
push
jmp
mov
hlt
pop
and
or
and
int
sbb
xor
addr16
inc
in
xor
xchg
lea
mov
adc
aad
cmp
inc
arpl
loop
rclb
push
int
mov
pop
sub
mov
dec
pop
mov
mov
lds
dec
dec
cmp
or
and
sar
xchg
rorb
loopne
xor
dec
sbbb
in
push
pop
mov
mov
imul
dec
mov
inc
iret
sbb
jle
jae
sub
aaa
les
or
pop
mov
and
ljmp
js
decb
sbb
popa
adc
pushf
les
sub
mov
std
pushf
or
add
lds
jno
xchg
jmp
pop
outsb
jmp
loop
jnp
outsl
aam
imul
out
xor
out
pop
mov
adc
lea
mov
and
in
sub
xchg
enter
sub
js
addr16
mov
mov
mov
and
in
rorl
and
lahf
inc
dec
adc
int
cmp
enter
outsl
ret
dec
jno
out
add
mov
int3
pusha
or
jg
jecxz
adc
cli
daa
pushf
jg
jg
into
jbe
rcll
ficompl
jp
fdivp
stos
loopne
or
and
rcrb
xchg
sbb
mov
in
frstor
sbb
mov
lock
mov
test
nop
daa
das
xlat
je
scas
sub
gs
out
stos
test
xchg
cmp
icebp
inc
jmp
fisubl
or
in
xchg
sbb
cltd
out
xor
in
repz
jb
mov
pop
lds
sahf
add
out
call
inc
lcall
sub
add
fucom
out
adcl
stos
inc
dec
dec
mov
push
loop
icebp
andb
or
cmp
repnz
push
xor
addb
jne
addl
scas
and
jae
lahf
jne
dec
cmp
dec
hlt
lods
xor
xchg
mov
movsb
insl
inc
test
data16
push
jl
rcrb
mov
dec
ljmp
enter
sub
or
insb
jecxz
imul
and
pop
add
adc
popa
lahf
scas
pop
sbb
jmp
push
xchg
sub
cmp
xor
mov
jae
iret
inc
mov
lret
int
or
jns
push
js
jbe
scas
xchg
es
lcall
sbb
test
out
pop
negl
repnz
pop
sub
ljmp
outsl
fucomi
cld
clc
lahf
andl
into
aaa
loope
xor
cltd
ljmp
das
mov
xor
jg
push
pop
or
movsl
push
aam
int
inc
cmpsl
ret
aad
fists
mov
aam
pop
mulb
cmp
mov
addr16
repnz
inc
int3
aam
push
jb
push
or
sti
cmpsl
lods
loope
pop
push
dec
pop
adc
mov
stc
sbb
adc
out
outsb
int
les
push
jb
and
pushf
cmp
xor
out
dec
shlb
cmp
sti
mov
addb
mov
icebp
jo
cmp
inc
xor
aaa
jne
cmp
add
xor
inc
mov
xchg
mov
or
mov
ret
add
sbb
out
mov
push
sub
jg
or
loope
arpl
cmp
lods
out
pop
pushf
imul
cmp
enter
and
lret
jbe
aaa
xchg
cmp
cld
mov
out
shrl
and
xor
test
pop
push
jnp
jg
jbe
xor
out
shll
push
add
adc
cld
cmp
pop
cmp
or
pop
mov
daa
out
adc
dec
sbb
fsts
ds
mov
mov
pop
ss
es
int3
insb
cmpsl
xor
push
cmp
push
testb
enter
ja
mov
cs
dec
xor
enter
jne
popa
insb
inc
lods
mov
mov
xlat
repz
fsts
cwtl
and
push
or
test
dec
outsb
adc
lret
push
and
loopne
xor
lock
mov
sbb
in
cmp
iret
adc
or
stc
nop
jl
outsb
jecxz
test
mov
dec
cmp
jmp
xchg
cs
mov
test
lods
adc
mov
pop
aaa
jle
popa
sub
gs
or
lock
push
adc
and
lea
mov
cmp
loope
mov
cmc
and
xchg
xor
push
mov
xchg
mov
loop
and
push
adc
ljmp
jge
lahf
cmpsb
sub
pop
in
push
int3
cmp
push
lods
out
jmp
mov
dec
pop
addb
inc
or
or
inc
cwtl
push
mov
xchg
mov
rcrl
sbb
call
in
popa
popf
adc
stos
daa
jecxz
inc
fistps
loope
fsubl
mov
xor
insl
mov
xchg
mov
pop
leave
inc
ret
jmp
xchg
sar
rorl
pop
movsb
popa
lock
setne
xchg
sbb
push
xchg
xchg
inc
sub
or
ret
adc
xchg
cmp
repz
push
scas
adc
int3
jecxz
call
lock
push
cmpsl
scas
shll
mov
cwtl
sarb
out
js
fcomp
int3
mov
insl
lret
mov
push
cwtl
aaa
outsl
lock
mov
in
out
ret
pop
fcmovnbe
sbbl
inc
fwait
sub
in
lds
stos
loope
sbb
add
xor
pop
das
enter
in
ret
mov
push
testb
xor
mov
mov
mov
mov
rcr
int3
xor
cmp
push
and
in
jge
inc
push
popf
es
loope
ljmp
in
imul
xchg
jae
cs
std
rcrb
inc
bound
shll
dec
xor
mov
mov
mov
push
insb
rorl
mov
cmp
xchg
push
mov
cmp
mov
cmpsl
pop
xchg
add
pop
movsb
movsb
sbb
sbb
adc
add
and
dec
leave
loop
sbb
inc
pop
push
cmpsb
adc
mov
sahf
sbb
lcall
sahf
cmpsl
daa
dec
adc
lock
lock
jp
add
movsl
nop
rcr
push
dec
xchg
mov
data16
pop
clc
mov
mov
dec
cmc
icebp
adc
sub
popf
dec
ss
mov
mov
int
movb
push
pop
fisttpll
into
inc
cmpsl
insb
daa
jg
pop
aam
data16
in
call
mov
xchg
lar
or
out
pusha
popa
mov
cltd
push
nop
fisubs
adc
fldt
div
adc
mov
sub
lea
xchg
push
xor
scas
jg
scas
pop
cmp
jnp
imull
sti
repz
stos
inc
clc
sub
ret
dec
pop
lods
int3
xor
xchg
dec
test
xchg
xor
or
ret
ds
xchg
in
adc
fwait
mov
adc
inc
adc
sub
dec
jae
call
mov
lret
pop
shlb
enter
cmpsl
cmpsb
addb
jecxz
dec
xchg
sahf
pop
shr
bound
aam
jae
frstpm(287
in
gs
fistps
or
rorb
out
mov
mov
shl
inc
sar
sbb
adc
fildll
cmp
movsl
je
inc
inc
mov
jge
mov
rorb
into
fs
fimull
pop
lret
sahf
inc
jle
out
andl
sbb
scas
mov
loop
mov
pushf
push
or
mov
es
and
mov
out
jecxz
mov
adc
aas
dec
pop
in
int
mov
bound
stos
std
adc
fidivrs
dec
mov
dec
stc
lcall
cmpb
add
xor
mov
xchg
sbb
dec
dec
mov
add
sbb
mov
imul
sub
pop
push
add
rcrl
fsub
push
xchg
inc
or
cld
sbb
out
fistpl
pop
pop
pushf
sbb
jmp
loopne
or
dec
fidivrl
shr
leave
mov
xchg
outsl
cmp
fdivs
mov
imul
or
les
jno
xchg
rcrl
outsb
cmpsb
shlb
push
clc
leave
popf
std
cmp
cld
orl
iret
dec
cmp
subl
neg
ja
and
or
xor
push
or
mov
in
std
push
or
adc
lods
out
sbbl
outsl
and
test
cmp
sub
ds
js
inc
xor
insl
and
xchg
pop
cmp
loopne
cmp
aad
xchg
clc
leave
scas
xchg
enter
hlt
subl
popa
mov
push
shll
outsl
push
push
or
sub
ds
mov
ret
cli
add
adc
aas
test
roll
push
xor
in
gs
add
pushf
pusha
jp
xor
shl
mov
insl
mov
jno
adc
leave
loopne
rcrl
push
cmp
dec
pop
dec
cmp
ss
test
scas
push
pusha
mov
gs
jmp
pop
add
or
in
repnz
mov
add
add
or
jp
mov
jae
mov
push
addr16
and
mov
dec
xlat
pop
cmc
frstor
cwtl
mov
lock
loopne
mov
mov
mov
pop
fldcw
pop
test
xor
xor
mov
pop
or
lahf
jge
pop
test
mov
ficomps
jecxz
test
into
pushf
or
pop
mov
stc
sub
sub
cmp
cmp
adc
in
push
ret
test
jmpw
lds
jb
in
iret
loope
decl
clc
pushf
mov
imul
aam
aaa
dec
mov
sbb
dec
inc
loop
imul
jo
xor
pop
cmp
cwtl
add
mov
jns
call
or
lds
mov
rcr
cmp
jne
pusha
xchg
popa
cmpsb
dec
xchg
sub
cmp
sbb
sbbb
bound
out
cli
push
insl
enter
xchg
jns
push
sub
clc
push
sub
sbb
iret
mov
test
ja
inc
mov
sbb
in
outsb
xor
ljmp
fnsave
and
scas
cltd
sarb
repz
cs
aam
aaa
push
jne
cmc
pop
inc
xor
mov
arpl
push
dec
xchg
rorb
loopne
xchg
mov
and
aaa
loope
cltd
in
outsb
lret
into
mov
cmc
inc
div
fbstp
jge
cmp
mov
imul
adc
jbe
jne
stos
addr16
ja
fidivrl
cmp
std
cs
int
mov
hlt
ds
frstor
test
ja,pn
addr16
lea
inc
adc
mov
sub
ss
mov
aas
sbb
les
cltd
movsl
jmp
push
test
jns
jge
xlat
dec
cltd
jmp
pop
jnp
sbb
in
add
ja
sub
jmp
fucomi
cmc
fnstenv
sbb
mov
pop
pop
adc
data16
in
repz
adc
popf
mov
es
test
mov
sub
xchg
mov
test
shll
and
or
cli
lods
mov
mov
or
mov
adc
mov
pop
mov
out
jl
add
sub
and
add
xchg
mov
dec
mov
inc
data16
sbb
mov
scas
insb
aas
jb
push
movsl
mov
cli
mov
shll
imul
xchg
pop
popa
mov
cmove
push
mov
mov
fadds
inc
aaa
xchg
mov
sahf
cmp
sarb
fidivl
mov
scas
adc
jae
push
in
sub
sti
inc
in
dec
aad
push
sbb
add
xchg
pop
in
frstor
arpl
inc
jl
outsb
out
ljmp
cmp
ljmp
insb
sub
pop
subb
pop
pop
and
lods
cmp
pushl
addb
mov
clc
loop
xchg
adc
movsl
sub
cmc
or
dec
xchg
ss
test
nop
stos
xchg
aaa
push
xor
pop
push
xor
imul
insb
pop
scas
in
scas
pop
and
dec
out
mov
dec
jo
dec
and
insl
lret
sbb
xor
lds
add
pop
pop
das
shl
mov
xor
jno
pop
pop
test
sub
mov
in
cltd
in
cmp
out
push
inc
adc
ljmp
dec
push
pop
cmp
int3
in
popa
or
jp
bnd
cmp
pop
xor
push
mov
xor
sub
inc
mov
loop
rol
shlb
ds
jno
add
or
add
stc
mov
pushf
push
popa
mov
mov
daa
test
stos
leave
pop
hlt
inc
push
imul
pop
insb
lret
enter
imul
fadds
jl
clc
fs
mov
pop
inc
testb
or
pop
mov
xor
icebp
push
shl
pop
orb
inc
ds
xor
mov
and
popf
inc
aas
data16
inc
inc
jmp
in
shlb
cwtl
mov
push
adc
jno
mov
popf
mov
dec
cmp
inc
dec
mov
insl
fstpt
push
jno
sbb
push
enter
mov
add
clc
scas
cmp
popl
inc
insb
pop
push
cwtl
dec
mov
ss
dec
mov
paddq
cltd
cmp
and
stc
mov
testl
xchg
mov
mov
push
nop
ficompl
xchg
jmp
popa
inc
dec
lret
and
popa
movsb
and
in
push
pop
lahf
jg
rorb
sub
xor
imul
call
das
sbb
cmp
jae
adc
fdivr
aas
sub
xor
jmp
fisubrl
js
aas
insb
fldt
mov
insb
roll
dec
imul
fnstsw
pop
cmp
loop
cwtl
frstor
dec
in
pop
sbb
hlt
adc
adc
cmp
cmp
adc
iret
or
xchg
sbb
clc
out
adc
loope
lds
fmulp
fs
xchg
pop
lret
cli
inc
jle
and
push
push
imul
shlb
fs
jecxz
adc
mulps
xor
or
adc
cld
filds
inc
out
inc
cmc
xchg
jbe
pop
dec
fwait
cwtl
cmpsl
lahf
scas
stos
out
scas
fwait
jle
rcrb
mov
shl
mul
or
ljmp
lods
push
jnp
loopne
dec
jp
shrb
adc
int3
pop
xchg
inc
add
lret
shll
add
xor
add
or
daa
and
add
ret
jae
outsl
idivl
or
pusha
notb
sti
cmp
and
jle
pop
mov
pop
add
fst
lds
adc
inc
push
and
leave
fmulp
mov
mov
dec
pop
cmp
inc
fbld
js
lahf
cmpsl
mov
mov
pop
call
cmpsb
jo
out
jne
lret
xor
scas
das
das
pop
cmp
and
mov
movsl
add
push
dec
loope
int3
sub
or
mov
stos
push
push
add
mov
inc
cmp
imul
mov
xchg
mov
mov
fwait
in
dec
jo
sub
mov
fincstp
jb
js
gs
xor
mov
cmpb
push
fcmovnu
pop
stos
shlb
pop
pop
mov
insb
js
jle
jmp
mov
leave
stos
pop
sub
ss
int
jle
cwtl
pop
mov
test
mov
aam
cmpsb
sub
mov
loope
and
cltd
cmp
or
mov
sahf
pop
lds
adc
mov
mov
lods
adc
cmp
jecxz
lods
xor
outsb
add
push
push
loopne
adc
add
imul
jle
arpl
rolb
mov
jb
mov
xchg
fisubs
lods
into
sbb
int
fdivrl
aad
bound
inc
lahf
out
add
mov
insl
andb
mov
and
aad
test
cmp
push
arpl
mov
out
cmpsb
mov
sub
pop
xchg
lods
xorb
pop
test
adc
out
push
mov
mov
and
ss
repz
stc
fdivrl
imul
or
in
std
dec
sbb
dec
and
outsl
stc
aam
iret
in
xchg
or
in
mov
clc
xor
inc
rolb
jb
out
sbb
xlat
dec
jo
repz
jmp
xchg
or
inc
iret
pop
roll
loopne
movsb
sbb
adc
mov
mov
divl
shr
xlat
inc
jp
add
jp
xchg
pop
sbb
fcoml
rcrb
hlt
into
pop
scas
shl
adc
and
fisubrs
test
jg
lahf
repnz
pushf
jae
orl
fcomps
push
xor
call
and
add
lret
repnz
jb
sbbb
ljmp
xlat
stc
sbbl
mov
xchg
lret
sarb
iret
xorl
inc
mov
into
cltd
adc
in
push
xchg
push
imul
fisttpl
push
ds
mov
addr16
fcoml
dec
fwait
loope
mov
in
add
icebp
jge
sbb
jns
jl
jle
std
repz
fs
cmp
mov
push
out
outsl
dec
mov
lret
pop
lods
sbbl
mov
imul
inc
sbb
jnp
jg
mov
add
popf
es
mov
jbe
sbb
mov
dec
jae
andl
cmpsb
fs
repz
or
mov
add
cmpl
ja
jp
mov
jecxz
sub
dec
pop
push
cmc
xor
jne
mov
pop
cmpsb
int
and
mov
jno
stc
gs
lret
popa
mov
pop
mov
fmul
int
out
sub
xchg
shlb
mov
pop
inc
scas
gs
jae
popf
in
inc
cmp
lret
or
push
sbb
xchg
add
cltd
push
leave
fbstp
xchg
pop
cmpsb
sbb
dec
movsl
jns
ret
jg
pop
dec
fcmove
data16
inc
push
cmp
xchg
mov
mov
pop
std
dec
js
adc
lods
mov
icebp
sbbb
fsts
lock
ja
int
adc
dec
lret
aam
mov
les
je
mov
in
loope
adc
pop
xlat
lcall
into
lret
daa
pop
test
sub
mov
lds
ds
sbb
ja
xor
out
loopne
stc
jo
out
xchg
fisttpl
add
test
and
xor
xchg
sbb
sub
pop
aaa
add
jl
mov
push
std
and
scas
lret
xorb
mov
aam
fstpl
or
push
sarb
imul
out
jecxz
cwtl
mov
pop
movsb
out
lcall
jle
aad
test
xchg
rorb
jl
popa
mov
or
pop
mov
mov
xor
out
fsubp
inc
push
xchg
movsb
repnz
pop
cmp
mov
enter
push
stc
pop
push
sahf
ljmp
mov
mov
movsb
jmp
imul
arpl
pusha
pop
jo
push
dec
push
cmp
mov
out
fcmove
das
mov
mov
mov
sbb
jmp
mov
dec
lods
add
sbb
rcrb
push
adc
push
adc
sbb
mov
or
cld
pushf
sub
jp
push
bound
rorl
mov
adc
sub
mov
xchg
xchg
cmp
xor
std
es
or
inc
jns
mov
inc
inc
popa
je
mov
insb
loop
aaa
pop
shrl
mov
ret
in
pop
pop
push
pop
in
stos
cmp
mov
mov
enter
loop
movsl
lods
inc
jno
lcall
test
test
fcompl
lds
inc
fsts
repnz
pop
shll
mov
mov
fadd
fwait
ljmp
xlat
leave
int
or
add
je
lret
dec
movsl
aaa
rorb
push
sbb
mov
jl
jp
jmp
sub
pop
int3
cmpl
mov
cmp
movsl
lock
mov
mov
xchg
jns
sub
xlat
sahf
inc
jns,pn
or
inc
in
loopne
push
cwtl
lret
shll
push
jp
sbb
push
xchg
inc
out
dec
xchg
inc
andl
pushf
bnd
and
jnp
jne
pop
push
shl
int3
jns
fs
shll
cmc
and
or
ljmp
push
push
roll
lock
fstpt
mov
mov
push
sbb
mov
mov
test
cwtl
xchg
xor
gs
pop
ljmp
cwtl
add
insb
loope
xchg
stos
ret
fcmovnbe
lds
rcrb
and
cmc
lds
scas
mov
addr16
adc
xor
inc
dec
popf
cld
or
shrl
int
pop
pop
push
test
add
jns
add
hlt
je
lods
jp
cs
lcall
lods
mov
mov
ja
sahf
cmpsl
mov
hlt
repnz
repz
ss
mov
insl
call
mov
jle
sbb
pop
xchg
jp
hlt
sub
xlat
frstor
fstpl
cmp
push
and
jmp
les
rcrb
inc
into
hlt
js
push
mov
add
popf
imul
ficoms
dec
icebp
scas
cmp
mov
test
add
xchg
in
cmp
je
push
sbb
in
mov
sbb
loope
arpl
icebp
aad
dec
mov
dec
test
in
add
add
mov
sahf
aas
inc
adc
mov
and
push
and
test
and
or
xchg
hlt
out
mov
loopne
movsl
push
mov
aam
sbb
repnz
les
dec
pop
sub
sub
mov
dec
mov
cmc
scas
push
mov
outsb
int3
in
push
leave
rcl
pop
mov
mov
lds
mov
pop
sarb
enter
add
inc
or
int
dec
test
and
fistps
xchg
mov
es
or
sbb
inc
lods
inc
xchg
adc
test
dec
push
sbb
cmpl
lods
lcall
and
mov
or
enter
mov
popa
sbb
xchg
cld
sbb
sbb
sub
add
jo
pop
push
sbb
data16
mov
xor
sbb
lret
jbe
mov
cmp
xchg
mul
ret
dec
mov
push
jle
daa
imul
sbb
loop
fisubl
std
addr16
pop
jnp
imul
mov
in
lret
jl
adc
push
gs
sub
push
cwtl
xor
add
inc
inc
jbe
ss
test
ss
jg
nop
sbb
in
pushf
bound
pop
mov
cmovno
xchg
mov
fbstp
jmp
mov
jnp
mov
jno
inc
add
dec
repz
and
push
sub
mov
repnz
cmp
bound
push
mov
repnz
das
sbb
mov
jno
mov
dec
pop
mov
sub
testw
pushf
push
jp
adc
fsts
jecxz
idiv
push
jl
inc
mov
frstor
shlb
mov
push
loopne
inc
cmpsl
stc
inc
jne
inc
jns
or
stos
push
push
mov
mov
push
insb
bound
dec
mov
nop
pushw
movsl
and
cltd
addb
mov
dec
in
pop
mov
cmpsl
pushf
pop
pop
daa
xchg
scas
cmc
imul
subl
sbb
mov
mov
into
aam
outsl
std
sub
pop
outsb
and
arpl
push
push
out
or
and
mov
push
sbb
mov
jl
das
mov
or
mov
push
popf
fs
ss
dec
scas
sbb
xchg
icebp
ret
dec
inc
cmc
lods
jb
loopne
popa
push
aaa
shlb
mov
std
ror
lret
cwtl
fwait
push
xchg
movsb
movsb
aam
mov
add
fadds
addr16
std
push
inc
push
bound
lods
aas
jecxz
push
xchg
mov
ret
popf
mov
out
mov
push
popf
dec
test
ss
xchg
cwtl
dec
lahf
push
mov
into
adc
add
scas
mov
fisttpl
mov
and
pop
lcall
mov
mov
and
xor
movsb
or
rorb
std
jg
mov
mov
jns
lahf
outsb
pusha
loop
pusha
loop
mov
inc
add
roll
sub
dec
xor
hlt
aam
fcompl
lods
ret
cld
or
xor
out
jno
jb
mov
mov
cmpsl
push
mov
mov
fistpll
pop
sub
cli
jbe
mov
mov
xor
decl
hlt
and
movl
push
xor
jno
scas
fmul
test
and
into
mov
push
push
mov
xchg
adc
push
sub
push
add
inc
fists
mov
out
push
scas
adc
loop
mov
jo
add
std
sbb
cmpsb
iret
mov
jge
lock
ss
inc
pop
or
jns
xchg
jmp
imul
jae
out
das
outsb
add
aaa
xchg
outsl
mov
and
fdivl
bound
leave
cmp
push
fbstp
mov
scas
push
cmp
sbb
out
cmp
aas
ret
sub
arpl
stc
int3
xor
cmp
cs
scas
cmp
outsb
mov
jbe
pop
dec
dec
arpl
cwtl
sbb
cmp
jle
push
dec
or
sbb
fdiv
mulb
pusha
jle
in
mov
in
aad
cs
rcrl
inc
mov
xlat
test
push
pop
dec
push
inc
ljmp
sub
lods
add
repz
pop
cltd
les
pop
xor
cmpsb
cmpsl
cld
movsb
pop
xor
sbb
pop
sub
pushw
jb
arpl
sub
add
cmp
daa
mov
lock
jl
jae
enter
mov
mov
int3
mov
cld
into
mov
das
fildl
mov
sbb
xchg
add
lock
mov
inc
int
aaa
add
or
shlb
dec
outsl
adcb
sub
jecxz
fidivs
sahf
mov
das
es
js
dec
shll
aas
dec
xor
sub
lahf
int
jmp
push
lock
in
loopne
or
mov
inc
inc
ss
outsb
repz
add
enter
add
enter
dec
cmp
aaa
inc
or
push
decl
jmp
mov
mov
jge
jg
je
xor
in
bound
popa
shr
pop
int3
fsubl
cmp
add
lea
xor
in
jno
ljmp
rcrl
sti
aas
push
dec
shl
sbb
cmpsb
mov
mov
data16
xorb
sbb
jb
in
or
jg
inc
call
insl
add
call
into
add
sbb
sub
inc
fildl
movsl
sar
dec
scas
in
aad
sbb
or
cwtl
inc
and
xchg
mov
shr
repz
jmp
sbb
rcrl
or
push
scas
outsb
rol
mov
cmp
inc
pop
cmpsl
jae
mov
dec
mov
sbb
gs
cmp
xor
lods
mov
xlat
les
push
mov
adc
push
aad
inc
test
loop
mov
pop
les
orb
push
inc
add
mov
push
pushf
pop
xor
jno
out
dec
sbb
mov
or
out
lret
loope
adc
dec
stc
sub
ljmp
jne
out
dec
sbb
dec
xchg
mov
mov
nop
les
pop
mov
push
inc
jl
jae
xchg
ret
incb
adc
dec
repnz
int3
cmp
enter
sbb
jae
js
jecxz
and
pop
push
data16
sub
pushf
xor
es
inc
lods
push
out
mov
xchg
gs
mov
inc
out
popf
dec
lods
addr16
jle
lcall
and
xor
jae
inc
aas
pushf
lods
xlat
ja
adc
iret
mov
dec
push
add
ret
cwtl
push
dec
xor
repz
mov
sbbl
das
cwtl
aam
xor
fcmovu
or
in
ret
mov
adc
dec
leave
cltd
in
jne
mov
xor
aad
jle
fisubl
add
adc
out
mov
adc
enter
sbb
dec
outsb
test
fdivrs
push
shll
and
pop
pop
or
out
iret
lahf
pushf
xor
mov
jnp
cmp
xor
lcall
fwait
dec
mov
push
movsl
pop
mov
ret
jno
adc
decb
pushf
rorl
dec
mov
mov
adc
xchg
sbb
dec
stos
int3
int3
and
cmp
sti
cmp
dec
test
rclb
cs
loope
pusha
jns
mov
iret
lret
out
bound
sbb
iret
inc
sub
insb
dec
mov
inc
adc
dec
push
loop
jns
rcll
orl
out
inc
pop
mov
xchg
mov
call
sti
pop
mov
out
pusha
fs
adc
sub
xchg
add
jecxz
jge
mov
pop
dec
mov
hlt
pop
or
shll
xchg
filds
jno
aaa
sbb
int
test
mov
into
jno
lock
xor
ds
cmp
fsubs
jmp
sbb
pop
cmp
sub
aad
adc
scas
es
mov
mov
ret
cli
popa
stos
pop
jbe
es
std
es
leave
pusha
lahf
popa
push
hlt
das
and
fwait
or
xor
and
and
jg
fnsave
scas
fstpt
jg
lcall
sub
daa
in
lcall
ret
hlt
inc
testb
mov
scas
sbb
popa
mov
jmp
imul
mov
pop
mov
cmpsl
xlat
cltd
pop
and
sub
xor
mov
or
loop
ja
movsb
repnz
add
and
das
sbb
adcb
shll
xlat
popf
stos
add
enter
repnz
dec
test
ss
popa
pusha
arpl
nop
outsb
cmp
daa
inc
iret
jo
addr16
lret
cwtl
scas
cmp
mov
sti
in
xor
outsb
push
and
sub
fwait
loope
dec
rcrb
cltd
inc
scas
pop
es
js
jle
movsl
aaa
adc
or
movsb
out
inc
adc
jae
roll
and
scas
jmp
mov
lods
cmp
cli
es
cmp
sbb
les
jmp
in
jo
mov
daa
call
call
je
mov
mov
divb
push
ljmp
loopne
fwait
mov
std
lods
aam
lds
fmull
loopne
add
int
jo
xchg
mov
sbb
cmp
adc
sbb
cmpsb
inc
stos
rolb
lock
cmc
adc
push
jl
cmp
por
and
lret
mov
inc
ds
cld
aas
mov
adc
pop
xor
mov
hlt
xor
jp
ss
insb
lret
test
lods
ret
repnz
pop
sub
xor
call
jne
dec
fldt
xor
adc
je
fbld
and
fcomp
aas
lret
stos
in
sbb
and
jmp
fprem1
test
movb
inc
scas
xchg
dec
mov
push
pop
mov
mov
xchg
stos
lret
pusha
lock
nop
cs
sub
mov
add
jns
hlt
add
mov
jo
imul
add
in
loopne
cwtl
pop
in
sbb
rorb
and
jb
stc
xchg
int
xor
scas
nop
rcrl
push
xor
dec
int3
imull
mov
jo
cmp
inc
nop
jp
push
or
mov
imul
ja
push
mov
jp
and
out
sbb
bound
mov
je
iret
lahf
mov
and
sahf
cmp
hlt
mov
icebp
sbb
pop
enter
imul
aad
sub
xchg
pop
jg
xor
push
enter
push
jle
out
pop
je
xlat
mov
dec
adc
orb
inc
push
mov
fldenv
stos
sbb
push
dec
mov
clc
rcl
loopne
stos
and
mov
les
mov
enter
jg
or
push
add
fnstcw
dec
js
stos
add
xchg
adc
sub
inc
cltd
cs
imul
sbb
jle
xor
enter
pop
jge
hlt
out
xchg
lods
into
cwtl
sub
movsl
or
inc
push
pop
pop
sub
add
movb
cmp
mov
scas
arpl
cmpsl
mov
mov
clc
lret
in
lcall
push
dec
adc
dec
jge
jecxz
fldln2
and
popf
fs
cmp
insb
aaa
push
sbb
pop
ret
adc
inc
pop
push
lods
cwtl
int3
enter
adc
or
push
stos
and
in
cltd
movsl
outsb
loopne
mov
sub
mov
pop
out
int
sub
adc
notl
xorl
xchg
insl
xchg
xor
lds
push
in
shll
sbbl
sub
add
sbb
dec
adc
shl
leave
int3
lret
lcall
nop
push
cli
mov
mov
sub
mov
je
loop
sbb
mov
out
jae
inc
push
and
fcoms
xlat
jb
xor
jns
pop
xorb
cmp
or
or
xor
jns
mov
mov
scas
add
dec
push
lcall
sahf
inc
es
js
xchg
mov
inc
pop
lahf
mov
xor
je
je
cld
push
rcr
lock
and
jge
pushl
push
daa
pop
jns
pusha
in
mov
insl
push
leave
adc
aas
push
gs
cmpsb
sbb
fld
and
inc
mov
daa
lcall
inc
ljmp
sub
and
sbb
in
enter
inc
inc
daa
push
and
mov
adc
negl
dec
test
movsl
jo
jnp
lret
adc
nop
icebp
mov
push
fidivrl
xor
mov
xchg
jle
popa
aas
sbb
mov
add
cli
pop
dec
mov
inc
add
insb
sub
cli
sbb
scas
sub
addl
jmp
dec
mulb
inc
cmp
mov
add
pop
add
pop
dec
ljmp
test
cmp
adc
shrl
adc
cmp
xorb
jmp
decb
and
inc
cli
add
xchg
je
adc
inc
test
xchg
adc
leave
cmpsb
sbb
pandn
jp
pop
push
xchg
fsubrl
sub
mov
inc
cmc
leave
pushf
push
fidivrl
xlat
xor
add
daa
mov
adc
aam
nop
sbbb
push
aas
sub
sub
adc
adc
inc
xchg
lcall
gs
mov
lods
add
aaa
mov
pop
fldenv
popa
incb
add
push
push
sub
mov
subb
stos
testl
movsb
mov
mov
test
cmp
adc
dec
in
clc
aam
push
xchg
adc
loope
cmp
pop
mov
sub
push
inc
jbe
ds
lods
inc
add
mov
movsb
test
outsl
ret
dec
and
adc
cmp
fnstsw
popf
rolb
xor
popa
xor
pop
iret
sub
int3
sub
addb
cmp
dec
pop
push
and
mov
aas
lea
xchg
orb
sti
cmp
xchg
add
cltd
dec
mov
jge
sbb
int
outsb
es
icebp
aam
pushf
inc
les
xchg
cmp
jl
and
or
and
stos
imul
add
in
mov
leave
insl
insl
cmp
outsl
or
in
adc
fcmovnu
gs
jbe
pop
adc
xlat
pushf
neg
sub
xor
mov
lret
ljmp
pop
xchg
mov
out
repz
hlt
lret
jno
cmp
ds
cs
push
out
add
fwait
mov
in
popa
mov
sbb
inc
mov
mov
fiadds
cwtl
cmpsl
dec
aam
enter
clc
andl
outsb
dec
test
out
cmpsb
idivb
scas
or
xor
ret
and
hlt
xor
jle
insb
and
push
adcb
xchg
push
decl
dec
lock
xor
repz
insb
add
push
insl
xchg
repnz
xor
pop
push
sub
xor
xchg
lahf
pop
leave
subl
pop
out
ds
jmp
mov
xlat
ja
fadds
sbb
cmp
mov
pop
out
mov
jl
push
lret
cmpsb
push
and
cmp
cld
ljmp
lret
call
aam
into
dec
addr16
inc
cmp
dec
cmp
ret
cmpsl
mov
int
mov
dec
xchg
jne
jb
addl
mov
inc
movsb
or
mov
xor
cmpsb
js
jb
out
test
add
lock
fisubrl
sub
push
jo
test
inc
std
dec
sbb
dec
xchg
lret
sub
in
cmp
jnp
daa
xchg
addr16
outsb
mov
cmp
incb
negl
ret
mov
rclb
mov
jne
xchg
rolb
cld
mov
pop
xchg
scas
or
adc
mov
fidivl
leave
push
dec
cwtl
dec
or
movsl
imul
insb
inc
sub
xchg
cli
rcl
push
ret
repz
cwtl
or
scas
fmul
inc
push
mov
cmp
and
adc
test
xor
mov
adc
and
pushf
pop
dec
push
xor
pop
and
sbb
outsl
sub
sbb
shll
and
adc
pop
xchg
pop
push
cmp
aaa
ss
js
jmp
jecxz
pop
cmp
daa
adc
push
mov
mov
rolb
or
fildl
cld
insl
adc
fstpt
arpl
add
loop
jae
sub
div
xor
xlat
inc
iret
mov
or
xchg
mov
lods
pushf
mov
or
sub
and
fcoms
aad
and
ret
pop
lret
shll
cmc
test
notb
dec
ja
aas
sub
sbb
xchg
ja
lcall
or
cmp
les
fmull
sbb
adc
movsb
add
cmp
mov
arpl
mov
adc
enter
pop
outsl
pusha
scas
adc
jne
ret
xor
cmp
add
nop
negl
stos
lods
je
and
inc
push
andl
sbb
push
push
jae
in
jns
adc
je
aam
cwtl
lods
xor
dec
jge
lea
out
stos
xor
cmp
xchg
filds
push
pop
cltd
mov
xor
or
add
leave
cmp
pop
cmp
push
out
adc
test
test
out
jnp
mov
test
jns
outsb
or
sub
into
nop
xorb
clc
add
fst
sbb
lods
lahf
mov
sbb
call
jecxz
fcompl
cmp
xlat
fs
ficomps
xor
mov
add
add
cmc
xor
hlt
push
stos
push
das
in
cmc
dec
aad
and
xchg
or
push
jns
xchg
cmp
sbbb
andb
mov
call
in
push
iret
out
add
ret
data16
pop
push
mov
add
je
cmpsl
jmp
mov
inc
mov
jbe
mov
or
mov
test
add
dec
jns
push
pusha
xor
or
loop
subps
push
call
lock
cmpsl
mov
hlt
and
aad
push
or
fyl2x
scas
call
push
outsl
inc
insl
jne
icebp
inc
mov
dec
mov
pop
daa
test
xor
mov
ficoml
inc
xor
nop
xor
mov
inc
lret
xchg
enter
pop
pop
dec
std
push
or
inc
mov
mov
arpl
insl
cli
inc
pop
and
jl
enter
scas
push
inc
push
jns
cmp
cwtl
sbb
mov
mov
mov
xchg
mov
adc
testl
ret
mov
sub
loop
jecxz
xchg
jmp
or
sub
js
mov
pop
insb
rorl
fldt
pop
pop
daa
xchg
call
xor
cli
add
xor
test
jnp
xchg
out
test
orb
sbb
cltd
fisubs
les
xor
xchg
cmp
int
in
mov
sahf
jp
pop
jecxz
pop
js
add
jge
ret
adc
mov
mov
add
sub
and
outsl
pop
sbb
sahf
in
xor
mov
incl
inc
add
mov
pop
rcll
aam
dec
mov
ret
lock
pop
ja
or
out
ljmp
aaa
pop
loopne
xchg
aad
cmp
int3
push
ret
filds
mov
adc
adc
pusha
popf
jg
ret
cmp
fldl
lods
dec
gs
inc
repnz
adc
mov
jae
add
and
jecxz
stos
pop
jae
sbb
push
idivb
mov
dec
std
and
hlt
dec
mov
dec
pop
push
mov
mov
shr
push
mov
push
jb
cli
jne
or
mov
lcall
leave
scas
out
cmp
std
loope
stos
sti
and
call
inc
sbb
ljmp
pop
and
sbb
cmp
mov
push
sub
mov
fisttpl
sti
call
push
or
inc
mov
roll
mov
xchg
or
inc
jae
push
pop
ret
movsl
lea
push
in
jmp
xchg
cmp
test
mov
pop
cmp
out
ja
in
loopne
mov
adc
ret
nop
int
das
dec
std
cltd
das
pop
mov
cmp
xchg
push
stos
mov
cmp
in
sub
pop
imul
aas
cwtl
sbb
push
std
mov
dec
pushf
sarb
insl
fidivrs
imulb
fcompp
out
lods
and
lret
ret
lods
jne
sti
sbb
loopne
ret
nop
jbe
cmp
fs
cmp
sarb
mov
test
icebp
stc
test
mov
sub
and
mov
mov
xchg
out
sub
pop
sbb
rorl
mov
fcmovnbe
lahf
addr16
pushl
mov
mov
xchg
jp
out
mov
pop
push
stos
loopne
daa
out
es
or
es
loop
adc
push
xlat
in
push
repz
popf
fimull
cld
and
inc
in
mov
ret
out
cmpsl
icebp
cwtl
lea
bound
push
cld
testb
or
out
push
movsb
add
loop
je
std
in
sahf
mov
rcr
sbb
jle
popa
mov
mov
push
pop
or
xorb
mov
push
mov
or
add
pop
pushf
cwtl
dec
inc
lret
movsl
inc
imul
es
cli
mov
in
outsb
push
stos
dec
sahf
stos
into
mov
or
xchg
push
mov
push
fisubrl
push
inc
out
imul
mov
dec
adc
clc
or
add
xor
mov
jmp
incb
jb
hlt
mov
filds
mov
inc
pop
xor
lcall
lea
mov
dec
or
out
or
lcall
mov
nop
clc
fistpll
mov
dec
lret
ja
inc
mov
inc
xchg
jl
pusha
rorl
push
xchg
xor
or
mov
push
mov
stc
jmp
outsb
xchg
xor
daa
jge
mov
insb
rorl
ljmp
pop
or
push
shll
cmp
xlat
mov
push
test
add
call
movsb
xor
or
insb
xor
pop
dec
jl
cmp
int
imul
out
in
in
cmpsb
mov
sub
cli
adc
fwait
xchg
push
lahf
sub
inc
daa
pop
into
movsb
fs
in
fisubrl
imul
iret
jnp
add
sub
pop
xor
mov
insb
mov
sub
data16
jb
mov
shr
push
jns
out
leave
pslld
cmp
imul
sub
jnp
pop
dec
xchg
cli
cmpsb
std
mov
jno
push
dec
xchg
testb
aaa
out
subl
xchg
inc
mov
rcll
push
mov
ss
and
pop
pop
faddp
mov
cld
mov
cmpsb
lock
sub
jle
mov
sbb
dec
ds
mov
push
push
sahf
sub
fstpt
lahf
int
mov
popa
jl
fidivl
dec
xorl
or
or
scas
cmpsl
xchg
test
mov
les
add
mov
dec
and
dec
inc
xchg
xchg
push
inc
dec
out
aad
subl
sbb
fneni(8087
inc
sbb
dec
cmp
sbb
lock
out
arpl
lahf
es
nop
push
cmp
sbb
push
xchg
jle
mov
sbb
inc
adc
xor
or
mov
pushf
cmpsl
mov
int
sbb
fsubrl
call
xor
jns
xchg
and
xor
pop
les
push
inc
pusha
cmp
adc
jae
into
or
rcrb
js
pop
fstpl
fmuls
or
into
out
call
push
js
sbb
test
pop
loop
insl
inc
mov
test
js
dec
insb
rolb
fiaddl
test
jns
sti
addb
rclb
popa
dec
pop
test
pop
lret
mulb
cwtl
xchg
jae
cmp
rorb
add
addr16
cmovl
out
cmpsl
jmp
aaa
jb
xchg
aas
mov
ss
ret
pop
addb
aaa
push
faddl
cmp
xchg
mov
cmp
and
sbb
popa
or
push
leave
imul
or
jo
int
dec
mov
ret
gs
xchg
xchg
mov
aad
add
ds
fs
jmp
jge
mov
inc
cld
inc
mov
gs
xchg
repz
mov
inc
cmp
incb
inc
cmp
push
loopne
jns
gs
or
dec
out
fsubrs
or
mov
leave
mov
xor
pusha
bound
push
xor
into
cmpl
cmp
popa
add
repz
iret
push
xor
xchg
push
or
add
jo
int3
adc
imul
sbb
out
sbb
or
es
sub
push
stos
mov
pop
and
sarl
mov
mov
push
inc
adc
mov
cwtl
push
pop
cli
sbb
cmp
int3
adc
insb
xor
addl
mov
jns
push
sarl
push
sar
push
ja
push
nop
sti
aad
stc
adc
scas
add
insl
stos
jns
and
pop
jo
push
popf
stos
dec
xor
lds
out
adc
sub
dec
jmp
mov
shlb
xchg
jge
aam
dec
inc
dec
jb
sti
pusha
roll
fadds
or
push
jns
sbb
pop
rcrl
inc
pop
leave
ljmp
xchg
push
pop
adc
add
xor
push
add
pop
icebp
inc
test
test
xchg
add
shr
pop
adc
add
ret
push
andl
sub
sub
push
jecxz
popf
dec
mov
push
aad
ja
jno
adc
mov
sbb
je
push
mov
rcll
xor
dec
pop
mov
das
loope
mov
sbb
cmp
mov
pop
pop
adc
xor
int3
xchg
or
shl
or
mov
inc
mov
insb
lahf
cmp
stos
pop
bound
fimuls
int
push
push
cmp
adc
mov
ds
rcrb
in
and
mov
daa
js
lcall
push
push
cs
outsb
inc
scas
or
fisttpl
nop
mov
mov
dec
cmpsl
scas
mov
xchg
jae
lcall
inc
shrb
fidivs
and
lds
cmp
lret
sub
jle
cli
in
ret
addl
mov
jnp
push
in
std
push
mov
dec
or
imulb
cli
repnz
mov
rolb
fucomip
stos
xor
sub
jne
cmp
sbb
pop
xorb
daa
aad
lods
mov
inc
into
sub
xchg
dec
insl
out
xor
xor
jge
add
repnz
mov
mov
and
jno
mov
divl
or
xor
push
jne
mov
test
push
inc
addr16
inc
sub
stos
dec
dec
cmpsb
mov
fisttpll
dec
xchg
ljmp
adc
mov
cmp
test
insl
inc
and
add
xor
mov
or
jo
scas
test
and
or
shrb
pop
aas
jmp
imul
sti
fcompl
pop
mov
faddp
xchg
mov
pop
and
push
nop
inc
add
cmp
test
push
icebp
fnstsw
idivb
shr
popa
stos
mov
cmp
mov
sahf
jo
jg
pop
adc
jo
insb
add
outsb
stos
mov
gs
xlat
cmc
gs
fs
dec
les
adc
cmp
popf
sbb
mov
arpl
aaa
ljmp
push
sbb
lds
xchg
pop
test
mov
sub
fisubs
push
mov
adc
dec
mov
call
inc
clc
xchg
insl
rcrl
dec
into
sbb
fcom
xor
lock
ja
bound
fcomi
push
and
in
xchg
jns
inc
xchg
les
jge
aam
dec
sbb
and
shlb
push
fisubl
enter
test
push
xor
jns
dec
inc
push
test
jmp
lock
pop
jmp
push
repz
xlat
aam
push
mov
pop
lea
add
jb
ret
rcrb
sub
jbe
mov
mov
int
jl
xchg
ja
jnp
repz
rcrb
das
inc
scas
pop
pop
mov
test
imul
jbe
pop
sbb
cwtl
mov
mov
or
jae
into
andl
or
in
lahf
sbb
inc
mov
negl
xchg
jecxz
and
jmp
xchg
sbb
adc
xor
dec
cmp
adc
out
test
out
cwtl
mov
stos
loop
lods
addr16
inc
cld
pop
adc
cmc
and
lods
test
pusha
faddl
push
push
mov
jns
jne
lret
mov
xchg
or
mov
xchg
cli
aas
jmp
ret
push
fistpl
loope
push
xchg
adc
pop
iret
vrcpps
xor
lods
or
or
adc
jbe
mov
cltd
pop
pushf
push
and
orb
mov
jge
rcl
mov
dec
out
outsl
or
mov
outsb
sti
ljmp
sbb
xor
imulb
hlt
sub
mov
lahf
adcl
jl
jle
mov
or
lods
dec
sub
and
notl
push
jb
xchg
outsb
test
ja
add
mov
push
sbb
dec
rorb
fsubl
clc
mov
or
xor
int
popa
or
test
pop
insb
pop
adc
jbe
xor
lret
adc
les
test
cs
aas
je
cmpb
lcall
test
in
mov
mov
or
sahf
out
adc
faddl
and
lods
adc
dec
aas
push
sub
js
and
push
mov
js
pop
and
roll
dec
push
push
fistl
stc
push
jne
pop
ds
dec
insl
rolb
xlat
jbe
xor
push
stos
and
xor
mov
bound
hlt
add
lahf
rcrb
sub
push
inc
arpl
je
lock
iret
sub
mov
pop
adc
sub
and
cmpsl
sbb
mov
in
stos
sub
cmc
pusha
fidivl
xchg
add
fcmovb
push
je
xor
mov
and
add
push
dec
adc
and
fwait
lods
pop
bound
add
lods
repnz
or
cmpsb
xchg
sbb
cs
add
aam
mov
addb
and
mov
ret
cmc
imul
in
pop
cmc
das
pop
addr16
sub
xchg
cmp
lret
mov
movsb
les
aas
inc
ds
push
push
iret
jle
cmpsl
aaa
fcoml
and
sbb
xchg
xor
jmp
xor
inc
jp
stos
xchg
test
sti
mov
iret
or
cmp
cmp
repnz
dec
dec
sub
nop
cmpb
cmp
or
sub
aas
popl
or
jg
stos
nop
testb
mov
jbe
insb
outsl
dec
addb
aad
sbb
sub
cmp
xor
test
or
cmp
sub
xchg
inc
xchg
cmp
out
mov
pop
test
jl
cmp
mov
jp
mov
out
test
push
sarl
push
jle
inc
lods
dec
cltd
push
mov
cs
test
push
sbb
es
js
dec
cmp
dec
mov
cmp
mov
push
push
pushf
push
nop
push
inc
rcrb
jp
dec
mov
int3
jno
mov
adc
mov
out
popa
fcomip
xchg
test
std
sub
add
es
jg
lds
push
mov
testb
setg
mov
out
outsb
fldenv
jae
inc
mov
std
sub
xor
inc
ret
sbbb
lds
add
cmp
adc
push
mov
sbb
mov
mov
jnp
das
rcr
cmp
inc
lret
test
fs
pop
mov
sub
xchg
inc
or
lahf
xchg
aam
call
and
je
icebp
rorb
cmp
in
xor
pop
test
dec
dec
mov
aad
mov
adc
bound
and
cmc
stos
les
xor
flds
cmc
aas
jecxz
push
popa
mov
insl
into
fcompl
rcr
and
clc
stos
xchg
inc
and
out
loopne
mov
add
xor
in
pop
hlt
mov
lahf
idivb
inc
jae
fmul
js
and
inc
jns,pn
lahf
iret
out
out
xor
negb
push
sti
cmp
xchg
or
adc
test
sub
cmc
jle
xchg
test
fistpl
jns
jb
sbb
test
push
mov
lods
shrb
pusha
and
mov
jg
mov
pop
in
xchg
xchg
mov
adc
cmp
mov
or
ret
mov
dec
ja
leave
dec
mov
test
mov
jmp
scas
mov
adc
movsl
lea
mov
mov
divl
sub
roll
out
imul
test
stos
pusha
lcall
dec
js
out
incl
mov
sbb
clc
jnp
pop
mov
pop
and
pop
cwtl
sbb
andb
scas
pop
xor
sbb
jle
add
ret
adc
mov
sub
icebp
sahf
mov
jge
or
add
cmp
outsb
and
and
sub
pop
popf
sbb
sbb
or
ds
or
sub
mov
rcrb
iret
mov
push
repz
lea
test
xchg
lds
xor
xchg
cmovo
sbb
mov
cmp
jne
sbb
sub
sbb
sar
jns
int
xlat
rcrl
and
mov
or
imul
das
popf
das
sbb
stos
mov
ljmp
mov
aaa
sub
enter
test
mov
cld
jns
mov
bound
adc
loope
and
js
outsb
push
shlb
mov
fisttps
mov
add
xchg
inc
jb
fistps
loop
sub
mov
test
push
clc
cli
mov
push
leave
pop
pop
outsb
mov
out
dec
and
jmp
jmp
mov
jge
mov
mov
notb
adc
push
inc
cwtl
ljmp
nop
or
aas
sbb
ret
jp
fs
in
out
pop
arpl
das
prefetchnta
or
xchg
pop
add
jmp
roll
lret
jae
test
jge
dec
push
scas
mov
in
jle
popf
stos
movsw
or
lds
addl
adc
push
mov
xor
add
and
cmpsl
pop
repz
gs
nop
cld
pop
and
scas
std
fsub
movsl
pop
popf
dec
lret
test
movsl
xor
jnp
pop
xorl
cmp
fisubrs
inc
test
inc
dec
mov
mov
call
cmp
or
dec
dec
push
je
movsl
test
scas
popa
fimull
adc
mov
push
testl
mov
adc
cltd
and
fdivl
rolb
shll
sub
addr16
lahf
xor
ret
push
es
dec
leave
jg
mov
cmpsl
mov
jge
ds
cs
cmp
sbb
jg
jbe
ljmp
mov
pop
inc
jno
and
or
inc
fld
pop
inc
aad
push
pop
add
les
push
pushf
lret
aaa
xorb
les
sub
incl
lea
inc
sbb
push
or
lret
aad
pop
bound
lahf
fildll
idivl
add
xor
jne
cmp
sub
dec
sub
inc
push
addr16
lock
dec
jb
pop
sarl
push
insl
jns
dec
addr16
push
xchg
cmpsb
push
sti
jecxz
aam
lds
mov
or
cmpsl
test
lret
xor
jb
imul
mov
mov
icebp
mov
jecxz
hlt
icebp
lahf
dec
push
jo
xchg
mov
xor
xchg
arpl
inc
sbb
roll
aad
jns
ficoml
xlat
lock
fbld
sbb
sbbb
xlat
push
mov
insl
lahf
push
les
push
inc
je
or
out
adc
and
enter
adc
lea
imul
push
pop
cltd
andb
mov
dec
jb
loop
mov
call
notb
pop
lahf
push
or
mov
mov
cmpsb
sbbb
mov
push
scas
in
lods
xlat
cmp
pop
xor
insl
aad
inc
sti
cltd
int
es
in
jae
lea
mov
ds
stos
adc
fs
in
insl
or
mov
dec
ss
add
das
lods
into
sbb
jmp
dec
addr16
insl
xor
xchg
mov
call
xorb
pop
es
dec
ficoms
aad
push
loopne,pt
push
fistps
stc
or
fldt
cmp
cs
scas
sti
test
xorb
sahf
jns
sub
lret
mov
ljmp
lret
dec
arpl
fisttpl
aaa
xor
fsubr
push
xchg
mov
and
sbb
cmpsb
push
mov
mov
insb
cs
rclb
ljmp
cmc
adc
xor
into
loope
dec
loop
out
inc
jne
adc
and
push
pop
int
dec
pop
mov
pop
pop
cmp
mov
movsl
add
jae
push
mov
sbb
xorb
add
mov
rol
lret
sub
clc
or
cmp
jecxz
xor
pop
lea
xchg
mov
or
in
shlb
inc
sbb
arpl
mov
dec
mov
popa
ja
push
add
outsl
and
addr16
rcrb
adc
out
roll
pop
sti
les
add
movsb
xor
adc
je
mov
xchg
in
insb
sub
sbb
fldcw
movsb
aam
mov
movsb
sbb
cmc
aaa
add
testl
push
lcall
adc
and
aad
sub
out
mov
pop
popl
jne
or
movsl
adc
add
out
lods
sub
loopne
xor
std
cmp
ja
cmp
adc
mov
xchg
std
xor
jge
mov
add
cmpl
lods
xor
fwait
cmp
dec
adc
shl
ss
into
popf
or
push
add
add
cmp
mov
sbb
xlat
adc
sbb
fcmovne
out
adc
test
pop
add
dec
or
push
das
fwait
cmpsb
push
sub
pop
rcrb
out
inc
jmp
xlat
imul
ror
push
arpl
in
fists
or
xor
lods
pop
mov
addr16
mov
fs
sbb
mov
xor
jg
fisubrs
bound
or
in
iret
fimuls
mov
adc
lret
stos
sub
xchg
in
arpl
sarl
sbb
addb
mov
mov
mov
pop
jns
adc
into
scas
daa
sbb
aas
sbb
add
enter
in
inc
lret
push
xchg
cmp
mov
fcom
sbb
add
push
mov
inc
fiaddl
hlt
stc
mov
repnz
jmp
lods
shlb
mov
rclb
adc
out
mov
jb
sbb
data16
jmp
inc
inc
movsl
fisubrs
add
mov
mov
iret
data16
inc
fildll
sbb
in
subb
adc
mov
pop
dec
in
fs
sbb
dec
push
xchg
sar
pop
jne
push
dec
xor
in
in
cltd
jno
pmulhw
int
inc
pop
jne
add
xchg
xor
lcall
xchg
in
add
cmp
inc
mov
std
arpl
cmp
aas
out
leave
dec
xchg
ja
jp
xorb
jmp
or
cmp
xor
das
insb
add
out
pop
shll
icebp
mov
cmp
adc
test
sbb
leave
jb
cli
inc
mov
rclb
mov
hlt
fdivl
mov
mov
cmp
push
je
fisubrs
mov
aam
cltd
jmp
lds
pop
scas
ljmp
jnp,pn
loope
pop
out
adc
xchg
imul
sbb
dec
fcmovnu
mov
imul
hlt
dec
test
sub
mov
push
mov
sbb
lds
sbb
test
clc
xchg
enter
xor
sbb
nop
sbbl
adc
xchg
jne
es
ljmp
push
sbb
jp
mov
dec
in
inc
int3
pop
ds
negb
mov
in
dec
gs
pop
popf
adc
ljmp
and
lcall
or
push
and
roll
cmpb
stos
js
ss
add
inc
pop
icebp
push
mov
pop
repz
in
outsb
out
add
mov
cmpsb
cmpsl
dec
ljmp
jnp
lea
mov
pop
loop
sbb
xchg
xchg
int3
push
imul
push
mov
mov
pslld
push
fldln2
fsts
jecxz
das
ljmp
mov
je
shlb
push
adc
daa
jne
dec
cmp
lret
negb
ja
dec
ss
sbb
addr16
jmp
fimull
in
adc
mov
mov
and
out
cmp
xor
loopne
clc
jg
les
scas
inc
push
outsl
test
je
add
repnz
mov
xchg
xor
nop
inc
int
into
outsl
pop
loope
cmpsb
jnp
and
sbb
xchg
rclb
jae
push
dec
outsb
nop
pop
push
js
sub
int
in
enter
ret
outsl
dec
addr16
scas
pop
add
add
mov
aam
mov
dec
cmp
mov
lret
cmpl
in
adc
cmp
xchg
adc
es
xchg
in
add
std
push
xchg
in
cmpsb
inc
pop
repz
jne
repnz
in
mov
vgetexppd
cmc
inc
fistps
sahf
lret
in
nop
inc
pop
test
or
xor
and
sub
pop
insl
lea
dec
or
je
push
in
dec
xchg
mov
nop
int
mov
xchg
inc
sub
cli
pop
adc
fistps
mov
fidivrl
out
loope,pt
aam
scas
cli
stc
or
mov
outsl
add
add
lret
hlt
iret
adc
dec
outsb
fcmovnbe
into
jmp
movsl
and
add
ret
popa
cmp
jae
in
or
cmc
mov
jae
addr16
into
dec
data16
mov
fsubr
jl
and
jno
cltd
lcall
test
mov
fbld
pop
das
test
xchg
aaa
idivb
ds
fiaddl
lock
lods
inc
jbe
in
pop
or
ss
pop
mov
add
mov
mov
call
cmpsl
xchg
pop
mov
test
cwtl
sbb
add
bound
xchg
sbb
test
repnz
and
xchg
addr16
into
xor
rcll
cwtl
sub
or
divl
mov
out
xchg
jmp
ret
sti
in
fwait
stos
pop
lahf
adc
sub
aad
loope
cmp
test
movsl
inc
ret
repz
push
pop
add
xor
adc
nop
fcom
push
or
xor
inc
or
insb
fnstsw
scas
and
mov
and
je
rcll
bound
bound
add
fidivs
mov
pop
stos
stos
aaa
into
sbb
push
mov
or
sbb
mov
fidivs
loope
hlt
push
rdtsc
or
cmp
cmc
adc
loope
pop
dec
mov
movsl
jae
stos
cmp
inc
lods
or
or
std
negl
cmp
adc
jle
cmp
sbb
cmp
hlt
push
sub
shl
mov
cli
pop
mov
cmp
aad
push
mov
nop
push
add
dec
jmp
movsl
adc
inc
and
mov
add
mov
enter
mov
mov
iret
shlb
insl
pusha
hlt
cmp
loopne
mov
cmp
mov
push
inc
mov
hlt
jbe
cmp
fbld
push
pop
sbb
xor
xchg
jno
pop
iret
jne
out
xchg
insl
jno
fisubrs
sub
rcrb
out
ret
add
fucomi
cmp
inc
mov
xchg
clc
movsb
cmp
out
ret
unpcklps
push
cmp
xchg
aas
das
fstl
stc
aad
repnz
cmp
cmpb
in
push
jae
fsubr
mov
jge
sahf
dec
xchg
sub
loope
sbb
xchg
test
insl
loopne
push
dec
rcrb
fwait
sub
inc
pop
stc
sbb
fs
ds
cld
stos
not
stos
jp
popa
ret
inc
mov
push
jge
dec
jbe
sbb
jne
rol
mov
mov
cmpsl
cmc
repz
inc
leave
stos
or
insl
xor
sbb
cmp
stos
dec
cmp
cltd
dec
push
dec
sub
ret
add
sub
mov
fdivrs
push
das
andb
adc
cwtl
mov
inc
pusha
out
sub
stos
into
mov
test
insb
arpl
imul
lcall
cmp
and
stc
repnz
cmp
lds
mov
sub
xchg
sbb
add
lea
fimull
inc
iretw
sbb
mov
les
or
fdivrl
fs
hlt
in
jbe
fsubs
or
iret
push
sbb
mov
pop
daa
lcall
pop
cwtl
test
out
stc
js
fs
jae
imul
inc
mov
aas
xchg
jmp
inc
cmpsl
scas
fisubrs
xchg
icebp
sub
xchg
xor
and
outsl
movl
addr16
or
mov
lea
mov
std
sbb
push
xor
icebp
int3
jmp
push
testl
fidivs
xlat
cmpl
call
xchg
push
flds
bound
loope
pop
cmp
mov
mov
mov
jge
push
lds
pop
adc
aaa
inc
sbb
mov
ficomps
paddq
hlt
sub
mov
shl
scas
shll
cmp
outsl
jmp
ret
cld
sub
add
mov
mov
cld
sub
cmp
hlt
fwait
and
decl
add
adc
dec
and
dec
add
mov
ds
repnz
clc
fistpl
fs
jb
and
les
aas
xor
popf
shr
aad
loop
pop
add
ds
iret
cmp
mov
mov
xor
in
out
imul
les
jecxz
cli
push
xor
ss
nop
in
ja
mov
loope
mov
push
andl
gs
adc
pop
adc
mov
fnstsw
data16
loop
mov
or
insb
lock
decl
sbb
xchg
xchg
xchg
leave
fdivs
xor
mov
add
popa
ja
or
xchg
fs
out
sub
and
ffree
jne
rcr
cwtl
inc
sbb
lods
movsl
mov
iret
pmullw
in
cmp
dec
insb
lahf
sbb
and
inc
mov
in
vmaxpd
or
or
test
adc
test
mov
cs
jle
mov
and
enter
pop
loope
sti
rcll
or
or
adc
adc
add
jno
dec
mov
movb
fisttps
dec
fnstsw
push
out
ficomps
in
mov
insl
add
mov
mov
jae
enter
shrb
adc
mov
xor
xchg
into
inc
loopne
mov
pop
popf
fnstenv
inc
mov
inc
add
call
pushf
cmp
lea
adc
test
mov
mov
mov
xchg
in
mov
imull
out
dec
in
pop
push
jne
push
jge
rclb
scas
pop
shrl
scas
int3
xor
xor
add
xchg
ret
dec
bound
insb
push
add
mov
xchg
xor
lret
sbb
insl
sub
sub
lret
in
xor
mov
fisubrs
fwait
xor
add
call
movsl
mov
fsts
jno
xchg
push
out
xchg
aad
int
mov
fs
jno
cmpsb
dec
or
jecxz
xlat
push
jnp
out
int
push
outsl
mov
pop
lea
inc
push
xchg
jp
add
xchg
stos
inc
outsl
dec
inc
push
ror
sbb
aaa
aad
leave
arpl
scas
cld
scas
insb
lods
lret
dec
cli
mov
je
add
test
mov
xchg
cltd
xchg
xchg
popf
mov
leave
add
push
sbb
jecxz
inc
sahf
add
mov
outsl
pop
mov
dec
lea
cmp
inc
inc
in
mov
xchg
mov
cmp
dec
sub
pop
pop
insl
and
xor
int
mov
daa
les
sbb
addr16
mov
icebp
sub
imul
fwait
bnd
xor
adc
xchg
bound
out
sbb
icebp
cmp
xchg
cld
cmp
loop
fsts
je
lea
jl
outsl
mov
popa
add
out
xchg
ljmp
xor
sub
std
mov
pop
xchg
mov
ja
pop
movsl
mov
stos
add
sbb
xor
hlt
fistpl
rcrl
imul
sub
and
adc
icebp
xor
cwtl
mov
popa
jo
nop
cmpsl
sarb
mov
pop
pop
pusha
pop
xor
adc
lahf
xchg
push
jle
add
iret
jl
mov
sbb
pop
jg
or
divb
xchg
orl
jns
ret
dec
insb
pushf
fimull
jo
aas
outsb
add
mov
sbb
sbb
mov
mov
gs
rorl
add
and
lahf
fs
dec
lds
sahf
out
sbb
mov
sbb
out
pop
mov
stos
in
dec
xchg
int
sbb
inc
mov
lds
test
sbb
add
adc
mov
out
aam
test
push
int3
cmp
sbb
inc
sbb
cmpsl
insl
fcmovnb
sbb
xchg
mov
or
mov
adc
jge
testl
ret
xor
adc
dec
adc
jg
mov
insl
xor
mov
test
inc
mov
jo
iret
sahf
adc
test
sbb
sbb
fistps
sahf
mov
dec
xchg
and
mov
xor
xor
mov
aad
or
adc
jecxz
imul
add
and
push
stc
std
negl
sarb
cld
mull
icebp
sbb
cmp
test
inc
call
std
sbb
pop
sbb
addb
nop
pop
add
insl
adc
pop
dec
roll
insl
dec
outsl
mov
xchg
push
push
jbe
decl
adc
roll
mov
push
inc
jno
mov
andb
dec
out
pushf
jmp
xchg
ret
or
lods
sub
inc
sti
push
in
pop
stos
aas
lods
xchg
inc
xchg
and
popf
jmp
push
sub
mov
jne
loope
sbb
adc
sub
push
test
adc
push
push
pop
inc
and
gs
test
popa
cmp
out
cmc
scas
pop
loop
add
addb
dec
xchg
test
mov
frstor
sub
cmp
int
inc
loope
or
mov
sub
jns
out
fs
push
decb
sub
xor
leave
jae
cmp
xor
push
int3
pusha
fstpt
hlt
cmpsb
loopne
add
pop
stos
lret
jecxz
repnz
cli
mov
in
xor
push
adc
ret
fdivs
mov
daa
clc
xlat
stc
pop
jmp
lods
add
nop
lahf
call
xchg
xchg
push
mov
jne
xor
add
daa
test
cmp
push
iret
insb
push
dec
das
add
xor
testl
mov
mov
cs
nop
loop
push
xor
call
leave
adc
mov
sbb
stos
xor
repz
and
sbb
cwtl
mov
mov
je
sub
xor
or
movsl
inc
push
inc
pop
call
shufps
xor
and
dec
shll
jmp
decb
aad
pop
jne
lret
mov
sbb
rcrl
xchg
mov
adc
clc
or
shll
stc
inc
bound
pusha
fdivp
xchg
fdivrp
popf
addr16
ss
test
imul
leave
sbb
jge
inc
bound
cmp
ja
fimull
sub
aam
sarb
mov
les
pop
es
or
test
hlt
cmpsb
or
or
imul
push
jle
add
std
in
stos
sub
mov
shrb
mov
call
or
aaa
cmp
and
dec
jo
inc
cmp
push
xor
xchg
mov
pop
sbb
test
xchg
test
loopne
lahf
mov
cld
push
dec
mov
xor
pop
fidivrl
mov
into
dec
push
push
or
cli
pop
adcb
loop
mov
or
or
sub
cmpsb
loope
inc
adc
inc
push
aad
and
andb
and
loope
outsl
lret
iret
decb
jbe
and
jns
dec
ds
cli
push
mov
jmp
adc
popa
out
jbe
gs
pop
jae
push
or
xor
or
test
loop
aaa
xorl
cwtl
or
adc
pop
aaa
mov
mov
ljmp
pop
popa
push
ret
into
inc
jns
push
dec
ljmp
outsb
or
inc
mov
xchg
jno
jno
sbb
fnstsw
andb
jle
daa
fidivrl
jmp
pop
loop
data16
cmp
add
xchg
call
add
xchg
ret
jo
jg
cmp
inc
mov
fsubrs
scas
sbb
xlat
imul
xor
rclb
mov
mov
ss
ret
xchg
cmp
cmp
and
aam
sbb
mov
sahf
mov
mov
imul
mov
inc
clc
sbb
fucomip
mov
inc
xchg
rcrb
shll
dec
lcall
ds
cwtl
push
cli
xchg
add
cwtl
out
lcall
enter
adc
pop
lahf
mov
inc
dec
sti
pop
xor
aas
fstps
sbb
mov
sub
lret
cmp
mov
mov
mov
sarb
and
insl
lods
sbb
jae
fmul
push
ljmp
jbe
pop
cmc
lahf
push
and
mov
fldl
pop
inc
adc
ret
mov
mov
insb
cmc
shll
cmc
jg
call
rorl
movb
into
loope
jecxz
lret
pusha
add
stos
pop
cli
jecxz
fxch
pop
jb
xchg
ret
insl
test
inc
dec
push
je
aas
leave
inc
inc
in
sti
cmpl
sahf
jp
mov
mov
mov
sub
repnz
cmp
mov
jo
mov
mov
inc
sub
inc
or
idivb
hlt
iret
bound
cmpsb
mov
insb
push
cmp
mov
lods
mov
out
pop
sub
xchg
aad
and
scas
mov
cmp
cmp
nop
push
mov
movsl
add
or
daa
sbb
xchg
sbb
push
jmp
pop
jns
sahf
xchg
rcrb
xchg
sbb
pop
into
cmp
scas
in
inc
fcoml
xor
and
jmp
cltd
out
ret
in
pop
bound
fiadds
rclb
push
xchg
jl
adc
icebp
adc
loop
cmpsl
scas
ja
outsb
loope
icebp
daa
pop
jns
ds
push
fs
scas
pop
pop
and
jb
xorb
mov
lds
leave
jmp
and
jge
or
jmp
mov
sub
or
xchg
fmuls
inc
push
inc
inc
leave
pop
mov
mov
jl
pop
divl
cld
xchg
sbb
or
dec
lea
das
lret
cmp
je
push
mov
jmp
fisubrs
or
sbb
fidivrs
pop
jmp
es
ja
jmp
jae
popa
add
mov
in
clc
push
adc
add
and
push
js
je
test
add
xchg
orb
jno
jae
sti
fisubl
repnz
xor
imull
mov
adc
shrb
mov
pop
mov
out
daa
jnp
call
inc
mov
insb
and
or
mov
pop
imul
pop
sub
xchg
imul
into
pop
pop
dec
pop
js
xlat
je
and
push
call
stc
or
negb
in
jmp
adc
scas
add
rcl
cmp
xchg
add
pusha
xor
pop
or
pop
sti
add
mov
sub
pop
pop
push
cmp
mov
loopne
sbb
cmp
negl
sub
incb
in
cmp
push
cld
loopne
or
sub
hlt
add
pop
mov
xor
push
sti
cmp
sbb
pushf
stos
cmp
int3
and
in
sbb
cs
mov
xchg
inc
xor
fstl
adc
loopne
mov
push
je
push
add
mov
mov
xor
out
pop
mov
cmc
std
movl
fadd
call
aam
mov
jae
dec
inc
stos
xchg
sub
hlt
lods
mov
inc
fstl
ds
pop
sbb
push
repz
adc
xor
mov
push
push
mov
loope
scas
inc
push
cmpsl
cmp
xor
arpl
fidivl
xchg
dec
jmp
sub
push
in
fmull
push
lret
push
pop
std
lds
cmpsl
pop
jge
fstpl
push
xchg
gs
dec
inc
inc
cmp
sbb
cwtl
imul
inc
add
repz
incb
cmp
mov
pop
xchg
adc
insb
leave
into
lods
jl
mov
cli
mull
and
inc
mov
in
inc
push
pop
lret
mov
loop
sti
sbb
pusha
fs
divb
fcoms
dec
dec
cli
jno
xlat
inc
inc
sub
sbb
cmp
loopne
in
xchg
adc
add
bswap
cli
dec
fistpl
dec
test
pushf
pop
je
fildl
stos
inc
iret
adc
mov
jg
hlt
aas
popa
add
add
sbb
shr
in
add
xor
and
mov
inc
or
pop
xchg
into
pop
decb
loop
jle
pop
xchg
andl
andl
mov
jo
loope
or
mov
xor
mov
jle
adc
dec
mov
inc
pop
mov
mov
imull
and
and
testb
pop
and
xor
mov
push
sbb
sub
push
push
stos
mov
addb
dec
pop
xchg
sub
fcoml
int3
sqrtps
addr16
movsb
mov
addr16
imul
sbb
mov
xor
push
out
pop
add
mov
pop
imul
jns
xchg
jnp
dec
in
dec
mov
mov
or
pop
pop
sbb
inc
sub
lret
out
mov
dec
test
and
push
sbbb
das
popf
in
dec
add
lret
inc
add
add
mov
enter
xor
jo
push
lea
inc
es
not
fstpt
pop
notb
jp
sub
mov
sub
inc
cli
cmp
scas
inc
dec
pop
loopne
sub
sbb
sbb
cmp
push
lds
mov
daa
cmpb
pop
pop
test
ds
addb
je
arpl
sub
pop
mov
and
cli
fs
jno
or
mov
sbb
dec
stos
mov
fisttps
or
in
mov
rcr
clc
call
inc
cwtl
xchg
pop
push
pop
stc
enter
in
mov
or
lods
cs
push
ljmp
jbe
cli
mov
sarb
dec
jl
adc
cmp
xchg
dec
push
inc
and
out
push
xchg
clc
mov
adc
testb
popa
adc
sbb
mov
lcall
lahf
stos
dec
jmp
inc
mov
in
push
jae
inc
xor
jae
ret
pop
add
jmp
test
repz
std
mov
cmc
mov
rcl
pop
xchg
push
sbb
mov
popa
mov
iret
pop
jne
jbe
mov
xor
imul
sub
out
das
lret
in
dec
repz
dec
jmp
push
andb
pop
roll
cmp
loop
les
je
shlb
mov
xor
in
stos
push
int3
jge
outsl
rcrb
jb,pt
adc
arpl
cmp
addr16
aad
jbe
repnz
and
mov
movsb
adc
repnz
fisubrs
inc
outsl
fistpll
mov
dec
xchg
push
ret
lock
test
negl
std
cmp
mov
sub
add
cmpsb
mov
dec
ret
in
and
shlb
jecxz
cli
out
jg
leave
out
mov
cmp
nop
rol
insl
mov
mov
mov
repz
push
gs
cmp
rol
ljmp
xchg
lds
push
in
lahf
push
je
icebp
js
mov
or
jge
add
inc
les
daa
xor
pop
in
aas
hlt
cmc
fildl
sti
loopne
fwait
aam
ds
jl
xchg
dec
rclb
scas
js
add
xchg
xchg
jno
push
arpl
sbb
pushf
xchg
add
xchg
sti
cmp
or
mov
stc
sub
and
inc
loopne
dec
rcrb
dec
in
mov
insl
popa
push
sub
sub
daa
adc
in
mov
fstps
ds
into
add
and
jbe
out
or
in
out
addr16
ret
aam
sbb
je
inc
out
test
jecxz
loope
dec
sbb
add
mov
ds
idivb
in
aam
adc
or
push
cmp
shll
jle
fnstenv
lahf
push
push
icebp
loope
enter
pop
shll
inc
sub
dec
fists
hlt
mov
xchg
dec
addr16
cmp
dec
cmp
cli
add
sub
dec
cmp
jno
lcall
iret
or
mov
pop
pop
rcll
shll
jnp
stos
inc
in
pop
test
xchg
insb
aad
fistpll
push
sahf
lds
into
dec
and
lock
push
cwtl
inc
into
test
push
mov
pop
inc
add
push
xchg
inc
mov
mov
fisubrl
mov
sti
and
mov
movsb
adc
mov
adc
aas
sub
int3
data16
mov
aad
adc
cmp
add
jmp
cmp
sti
lcall
fcmovnb
adc
or
xchg
out
xchg
sub
cmp
fucomp
and
dec
int3
dec
dec
sub
mov
jae
adc
xchg
or
out
sub
popl
leave
lods
xchg
sbb
bound
adc
mov
mov
mov
cmp
and
push
divb
mov
cmp
andl
jl
cld
inc
fcmove
lret
pop
adc
lods
aaa
jl
test
mov
shlb
outsl
jno
and
mov
bound
repnz
dec
push
mov
rorl
imul
popf
ret
adc
nop
push
dec
mov
sub
add
add
inc
pop
push
inc
pop
dec
mov
xchg
inc
mov
jg
test
xlat
test
adc
xor
outsl
shlb
mov
gs
aad
jnp
jecxz
jl
add
rolb
pop
gs
cmp
dec
sbb
aam
xchg
test
mov
mov
push
js
mov
lcall
pusha
sti
jmp
out
pop
into
lahf
mov
iret
mov
jnp
cmp
mov
xor
dec
add
daa
mov
das
xor
lea
push
pop
push
cmp
push
pop
or
imul
mov
loopne
jg
leave
jno
pop
mov
sbb
xorb
inc
jae
std
cs
stc
lods
aaa
ret
inc
cltd
scas
cmp
lahf
dec
out
cmpsl
mov
pushl
test
pushf
jns
xor
mov
sub
and
sbb
dec
push
ja
push
imul
jg
dec
pop
dec
dec
sub
imull
push
mov
mov
sub
adc
shlb
ret
pushf
les
es
pop
test
push
or
mov
pop
cmp
shll
mov
fcomp
xlat
xor
lcall
cmpsb
xor
cmp
xlat
pusha
mov
pop
ljmp
jmp
inc
je
cli
xchg
leave
into
inc
fcoms
imul
pop
ud0
rclb
je
mov
xor
mov
cli
xchg
xor
push
xchg
sub
addl
pusha
icebp
loop
loopne
aad
xor
lock
movsb
xor
and
imul
and
dec
or
pop
lods
inc
and
inc
sub
es
cmp
mov
shl
lods
shlb
xchg
hlt
pop
pop
xor
int
sbb
loop
lahf
dec
or
sahf
xchg
iret
sbb
sub
pop
out
iret
lahf
sbb
and
dec
mov
stos
adc
int
ds
sbb
mov
or
jb
neg
inc
pop
xor
repnz
stc
jge
adc
dec
jnp
push
sarb
dec
stos
cltd
push
push
dec
pop
pushl
or
out
js
iret
fnstcw
and
or
xchg
sti
int
inc
lods
out
push
mov
and
movsl
rcr
push
add
lods
movsb
xor
sbb
aad
mov
mov
es
lcall
rolb
clc
sub
or
and
mov
wbinvd
cld
sbb
pop
aaa
test
dec
push
mov
pop
cmc
mov
lret
repz
sub
testb
lret
jge
or
and
and
xchg
shrl
inc
and
sahf
dec
int3
lock
inc
mov
aaa
aad
mov
mov
out
icebp
sbb
dec
out
iret
adc
mov
cmp
insb
jle
popa
sbb
pushf
xor
or
adc
dec
in
in
imulb
fst
mov
pop
ficomps
into
imul
jp
rcll
loopne
mov
fucomp
inc
fistl
fs
scas
repnz
or
and
xchg
dec
popa
dec
ficoml
pop
xchg
mov
xlat
push
push
aaa
jle
add
lret
ficoml
jbe
fistps
rorl
push
sub
adc
sub
jns
xor
pop
movsb
stc
ljmp
and
arpl
insl
orps
insl
inc
push
mov
jl
outsl
pop
imul
add
pop
inc
push
mov
and
movsl
push
cmpsl
popf
and
add
sbb
test
push
push
mov
pop
je
sbb
data16
aam
test
stc
cmp
ljmp
cmp
jns
cltd
inc
scas
adc
xchg
test
lods
scas
jns
daa
aam
add
pop
sub
outsb
je
xchg
in
lcall
lods
mov
ret
sub
cmp
in
lds
test
push
js
ljmp
int
xchg
jmp
cmpsb
mov
arpl
imul
notb
mov
adc
xor
imul
mov
fsubl
sbb
cmpsb
xor
faddp
sbb
jae
sbb
inc
adc
daa
das
fldl2t
adc
sub
mov
dec
lds
dec
or
insb
ljmp
pop
insb
xor
arpl
in
sbb
pop
lret
dec
push
push
mov
imul
faddl
xor
imul
adc
call
jg
outsb
popf
sbb
jl
dec
leave
movsb
repz
pushf
ljmp
push
movsl
imul
lahf
mov
inc
xchg
and
mov
mov
ja
mov
arpl
les
sub
scas
sub
lock
insl
repz
out
aaa
mov
clc
data16
cmpsb
push
mov
sbb
sbb
lret
stos
aaa
mov
mov
xchg
scas
scas
xchg
and
and
mov
xor
loop
in
test
stos
jg
adc
sbb
out
add
lcall
mov
mov
jo
lahf
imul
and
scas
iret
xorps
mov
out
ljmp
pop
mov
out
push
and
mov
jg
push
inc
ja
push
lods
cld
test
push
dec
std
clc
rcrl
sbb
dec
test
inc
pop
mov
cmp
push
mov
dec
mov
fdivs
sub
cmp
add
paddsb
jge
int
jge
leave
repnz
fcoms
std
mov
mov
in
daa
es
jp
lret
ret
pop
out
mov
add
inc
pop
inc
inc
dec
dec
sub
and
sti
xor
xchg
adc
inc
aaa
dec
pop
mov
clc
add
jbe
mov
add
outsl
divb
pop
bound
sahf
xor
testl
lret
add
mov
leave
mov
mov
mul
loop
fldt
rcrl
and
hlt
adc
notb
jnp
sbb
jg
js
sub
insb
sbb
pop
xchg
stc
xchg
push
sbb
cmp
jl
inc
jb
pop
jne
rcrl
addr16
ljmp
in
lcall
mov
scas
shr
lea
mov
sub
jo
and
out
mov
or
lret
test
xchg
cmpsl
sarb
roll
out
rcl
loopne
inc
jmp
push
loope
sub
inc
dec
xor
lahf
test
or
lcall
loope
stc
xor
xlat
and
nop
or
lea
jecxz
add
jle
pop
and
in
pop
movsl
dec
stos
es
adc
out
popf
mov
xchg
sub
movsb
dec
les
push
lds
je
int3
push
pop
pop
fsubrs
xorb
adc
xchg
das
les
cld
xor
or
js
push
sub
bound
cmc
jp
leave
mov
ss
loopne
daa
or
les
test
enter
mov
gs
fidivrs
rcl
clc
cltd
cmp
arpl
push
mov
aad
mov
jg
lret
sub
outsl
cmp
fildl
cmpsl
leave
adc
ljmp
pusha
push
cmpsl
in
xlat
les
dec
mov
push
sbb
movb
lcall
mov
stc
xor
in
aaa
daa
cltd
lret
jmp
adc
fildll
loope
inc
sbb
pop
lretw
cmp
or
jle
call
incl
sbb
lret
pop
sbb
stos
mov
fisubl
cli
fisttpll
stc
cmc
ror
insl
idivb
mov
hlt
mov
sbb
insb
push
adc
lea
mov
insl
cmp
or
inc
cli
pop
sub
push
movl
daa
mov
fldl
cmp
jbe
cmp
lret
aad
mov
addl
mov
cmp
or
prefetch
jbe
movsl
jge
mov
add
inc
or
sahf
xchg
add
lahf
adc
je
mov
mov
jmp
push
es
aaa
cmp
int3
fidivrs
jb
test
adc
sbb
jmp
add
inc
mul
lods
mov
outsb
or
ret
jecxz
pusha
arpl
in
inc
in
push
and
adc
ret
xor
sti
cmp
imul
popf
and
xchg
in
in
inc
not
mov
mov
cmpsl
daa
lea
xlat
mov
push
sahf
cmpsl
cs
or
push
out
or
insl
aas
int3
jp
lahf
inc
push
fimuls
or
jno
pop
inc
std
scas
dec
or
sarl
test
xor
cs
cmp
mov
adc
xchg
repnz
sub
test
push
inc
test
cmp
and
pop
in
xchg
mov
xchg
nop
in
arpl
dec
out
mov
cld
loop
sub
add
aaa
push
sbb
push
bound
push
cli
aaa
fldcw
arpl
adc
jg
loope
mov
or
in
adc
and
or
lods
call
out
sbb
jg
movsb
lea
push
into
cld
cmpsb
sub
inc
loope
sub
dec
sahf
jp
mov
sarb
adc
fsubrs
sti
ja
sbb
mov
lock
lods
insl
mov
jns
lret
cltd
fcmovnu
cmp
cmp
fnsave
int3
cmp
imul
or
push
out
scas
int3
in
sti
pop
loop
popa
mov
dec
xor
pop
cs
shlb
jns
pop
ror
dec
rolb
adc
mov
iret
push
xor
testb
lea
xor
lret
fisttps
out
and
dec
dec
clc
aad
mov
ljmp
ss
shlb
mov
inc
int
sti
ja
mov
jmp
dec
int
in
ret
mov
cld
jecxz
rcl
xchg
shl
dec
out
cmp
lret
mov
lds
cmp
xchg
ret
sub
or
test
dec
hlt
addl
sub
mov
jae
das
jecxz
dec
xchg
sbb
sub
push
mov
insl
xchg
jb
int
test
mov
jo
xlat
jge
sbb
aam
cld
ffreep
or
pop
popf
and
in
daa
push
or
adc
or
pop
inc
xchg
mov
or
fistpll
pop
mov
cltd
mov
scas
fnstenv
je
cld
inc
xchg
pop
cmp
repz
movsl
pop
jo
fisubs
xor
in
jmp
test
fs
adc
into
jecxz
cmp
ljmp
push
div
scas
fildll
adc
pop
jbe
rcrl
shr
and
lret
aas
mov
into
push
push
pop
pop
adc
ficoms
stc
shll
cmc
xchg
test
in
or
jle
out
aaa
movsl
sbbl
fidivrs
vcvtdq2ps
mov
cmpsb
cmpsl
enter
add
mov
pop
dec
fs
rcrl
outsl
sahf
inc
pop
imul
pop
std
add
xchg
test
and
scas
dec
mov
inc
dec
or
push
xor
js
in
lret
pmulhw
loopne
sub
jae
dec
ror
out
xchg
divb
aam
jg
cld
pop
add
sbb
loope
out
mov
jns
mov
movsl
lods
cmp
pop
add
mov
outsl
add
fstpt
push
adc
xor
xlat
add
jne
pop
test
das
fisubl
push
adc
inc
dec
lcall
lret
and
jge
icebp
xchg
mov
cltd
mov
arpl
bound
outsl
mov
dec
dec
xor
movsl
lahf
xor
out
movsb
mov
sub
lock
orb
xchg
loopne
inc
dec
push
shll
mov
and
add
jno
xor
jne
or
cld
xor
xchg
lahf
cmp
iret
into
mov
rcrl
fwait
loopne
outsl
jge
pop
cmpsl
xchg
and
data16
call
inc
fistl
test
shlb
inc
mov
sbb
xchg
lods
dec
mov
cltd
mov
out
jp
ja
pusha
push
mov
sti
loopne
xor
cltd
xchg
sub
ret
fbstp
jo
cs
sbb
jmp
or
jl
pop
mov
fldt
and
xor
ret
pop
mov
popa
mov
cli
leave
lods
pop
push
add
pop
and
out
sub
xchg
daa
lahf
sub
adc
mov
in
addl
mov
xor
stos
sarb
and
dec
jp
pushf
jo
rolb
test
xor
pop
ljmp
loope
xor
pop
hlt
inc
test
push
push
loope
fsubrp
enter
push
imul
adc
pop
repz
mov
int3
push
cmp
sti
rorb
sbb
jne
xchg
and
sbb
scas
and
scas
aas
push
popa
or
rcrb
bound
imul
inc
mov
sub
fnsave
shlb
adc
mov
sbb
aas
push
leave
loopne
jne
shll
mov
faddp
mov
inc
sub
popf
adc
jnp
inc
mov
flds
push
pusha
daa
add
mov
insl
adc
jecxz
inc
cmp
scas
push
fwait
les
pop
adc
jnp
inc
mov
xlat
and
dec
pop
and
xor
push
push
push
add
into
addb
lahf
popf
fcom
cli
scas
fwait
or
dec
add
cmp
ljmp
xor
push
xor
out
sbb
push
xchg
push
inc
jne
cmpsl
jb
test
mov
push
bound
ja
fildl
push
push
in
mov
fistl
push
das
xchg
push
jne
cmp
dec
out
xchg
mov
xlat
ljmp
cmp
mov
pop
cli
dec
xor
lods
popl
mov
and
js
cmpsb
xor
or
sub
stc
adc
adc
mov
jg
xchg
lret
mov
jmp
lds
imul
lret
outsl
xor
dec
repz
mov
push
mov
xchg
das
pop
xor
cld
xchg
nop
inc
js
jnp
shlb
adc
repnz
aaa
cwtl
sbb
in
sub
add
lds
mov
lods
sbb
inc
ret
out
incb
loopne
mov
mov
inc
dec
mov
lea
out
dec
pop
sbb
inc
push
dec
pop
sbb
in
pop
adc
sti
mov
or
push
daa
mov
inc
cs
call
js
clc
adc
ljmp
in
cwtl
shll
adc
cs
fmuls
out
nop
lret
jo
imul
xlat
pop
pop
cmp
divl
inc
jo
push
scas
lret
insb
mov
xorl
loopne
cmc
jne
dec
mov
mov
aaa
push
das
xor
or
jecxz
jnp
sub
sub
sbb
sub
xor
inc
sti
outsl
jno
and
outsl
bound
xor
std
dec
fmul
outsl
cmp
cs
aam
popa
sbb
dec
push
jecxz
cmpsb
cmpsl
mov
mov
sub
shrl
mov
pop
test
aas
out
cmpsl
bound
xchg
adc
jne
cmp
mov
out
mov
dec
jmp
push
testl
sub
mov
cmp
jo
xchg
mov
neg
shlb
nop
outsl
push
out
dec
xchg
jmp
cmp
lahf
jg
xlat
lret
and
push
rorb
add
mov
add
xor
in
bound
in
mov
stos
or
ds
jmp
pop
lcall
xor
in
adc
scas
pop
jmp
mov
and
mov
in
testl
lea
ja
stos
in
test
pop
jb
sbb
pop
mov
mov
mov
lods
rclb
dec
imul
push
inc
mov
enter
push
pop
adc
scas
es
xor
nop
mov
or
ret
les
mov
fcoms
roll
and
jns
das
hlt
jo
xchg
mov
jecxz
adc
cmpsl
push
ffree
lahf
mov
mov
xor
xchg
nop
repnz
jl
lods
mov
jmp
mov
div
mov
out
subb
xor
xor
add
lds
mov
cmp
xchg
imul
mov
and
or
jo
sub
push
popf
and
movsb
scas
xchg
js
mov
cli
add
loop
ljmp
cmpsl
and
inc
cmp
jb
addb
sti
or
dec
dec
mov
xor
fistl
inc
dec
int
mov
and
mov
lret
jg
sbb
or
std
sub
xchg
add
mov
mov
loopne
fstpl
push
sub
cmp
mov
test
jno
mov
mov
mov
pop
test
inc
adc
or
add
jecxz
inc
pusha
ljmp
ss
and
lahf
mov
lods
lret
xor
dec
aad
and
addb
jne
and
push
pusha
test
out
cmpsl
cwtl
mov
inc
mov
add
sub
dec
dec
cmpsb
notl
and
or
mov
or
loop
lods
js
cmp
pop
pop
xchg
mov
hlt
sub
or
jns
add
ds
jae
insl
mov
xchg
sub
push
inc
in
les
call
mov
or
sbb
lods
mov
iret
push
add
jecxz
push
fsubrl
shll
cmc
enter
lcall
jl
popf
xchg
push
inc
outsl
mov
inc
inc
sbb
jns
or
sbb
rorb
or
xor
or
push
mov
sti
or
jecxz
push
mov
lock
icebp
mov
push
xchg
cmp
cltd
push
xchg
add
mov
sbb
iret
mov
cli
mov
mov
mov
mov
iret
les
inc
negb
fidivrl
outsl
outsl
out
ss
lods
and
sahf
mov
in
add
popa
je
sbbl
sub
push
push
shlb
stos
jno
movb
lahf
lahf
dec
mov
jnp
adcb
js
dec
add
mov
insb
hlt
fldenv
mov
sbb
insb
and
cltd
and
loopne
jle
mov
lahf
dec
insl
rorb
cmp
dec
jbe
sbb
mov
maskmovq
mull
aaa
cmpsl
fdivrl
mov
in
outsb
sbb
jbe
popa
push
lahf
and
inc
pop
stos
and
push
mov
shl
sbb
push
cmpsb
mov
mov
gs
push
insb
xor
jg
ja
mov
or
pushf
or
iret
in
sar
shll
fwait
je
adc
adc
je
dec
pop
mov
dec
dec
jbe
ds
pushf
sbb
sub
push
rclb
gs
aam
mov
cmpsb
ret
shll
lret
mov
adc
push
cmp
lret
xchg
lds
xor
mov
push
pop
imul
rcll
pop
cld
pop
lock
in
xchg
or
and
push
xchg
mov
call
or
movsb
pop
in
push
inc
dec
sub
ret
cmpl
insb
inc
ljmp
fisubs
mov
sbb
call
mov
sub
mov
subl
mov
push
out
dec
dec
lods
repz
push
jecxz
mov
cmp
fucom
sub
jnp
mov
popa
or
int3
adc
dec
push
mov
mov
sub
jp
fwait
pop
push
ret
jnp
into
sti
movsb
mov
roll
dec
sbb
pop
push
mov
jb,pt
lods
stc
cltd
hlt
adc
cmp
mov
jg
stc
pop
cmc
arpl
jg
lods
mov
cmp
mov
jecxz
pusha
jnp
cld
mov
leave
xlat
fdiv
daa
pop
push
loopne
dec
and
mov
hlt
test
xor
movsb
lods
pop
cmpsb
mov
dec
dec
gs
outsb
push
or
and
das
aaa
sbb
imul
sub
push
ds
mov
or
jae
je
sbb
mov
repnz
iret
addr16
shlb
adc
xchg
mov
leave
cmp
add
mov
in
sbb
cmp
mov
cs
imul
jns
mov
push
pop
xor
jb
mov
mov
jno
loopne
mov
int3
pop
aaa
pop
cmp
adc
jb
into
and
pop
push
jmp
out
mov
jge
mov
int
sti
cltd
popf
push
aad
aad
iret
push
into
lods
movsl
xchg
or
sub
movsl
sub
or
aad
push
inc
add
mov
adc
rorb
push
fdivrp
cmpsl
aas
dec
push
arpl
mov
ficoms
xor
and
xor
adc
shr
xor
lods
mov
mov
xchg
imul
in
pop
and
rcrl
pop
cltd
sbb
icebp
xlat
add
and
add
or
sbb
in
cmpb
lcall
jne
cli
mov
mov
lcall
stos
push
je
call
mov
adc
or
aas
imul
add
andl
inc
lds
in
mov
fs
cli
and
imulb
incb
jmp
pavgw
pop
int3
dec
testl
adc
mov
mov
insb
adc
xchg
dec
sub
jmp
jnp
scas
inc
shr
das
cltd
aaa
xchg
std
icebp
or
mov
fsubs
aad
lds
xor
xchg
outsl
stos
jo
in
dec
xchg
stos
dec
shlb
and
xor
push
in
loope
inc
std
lret
push
loop
push
mov
cmp
outsb
call
call
imul
fmuls
xchg
notb
mov
jnp
mov
sbb
xchg
mov
push
out
repz
push
inc
or
into
sbb
mov
cwtl
fnstenv
mov
push
push
xchg
xlat
stc
fisubrl
and
inc
pop
adc
popf
mov
mov
xchg
out
push
and
aad
test
pop
sbb
cmovns
or
scas
mov
pop
push
cmp
rcrl
sahf
dec
cmpsb
cltd
dec
mov
xor
mov
ret
jno
xchg
popa
arpl
sbb
adc
hlt
push
hlt
stc
adc
mov
cmc
mov
sti
rcrl
mov
popa
sahf
pop
pusha
pop
sbbl
mov
insl
mov
jle
cmp
sub
rclb
aas
das
fdivp
lock
pop
or
adc
xor
aas
pop
repnz
shl
mov
cltd
inc
dec
jnp
iret
pop
lret
xchg
dec
outsl
mov
pop
dec
fcoms
mov
dec
std
xchg
dec
pop
les
movsb
arpl
hlt
jp
imul
std
out
aas
clc
shll
pusha
xor
mov
bound
mov
data16
addr16
pop
movsb
inc
dec
xchg
inc
and
repnz
psrlq
add
jle
adcb
nop
xchg
xchg
fwait
shr
pop
sub
xchg
mov
mov
jb
push
daa
xchg
lea
push
adc
ds
popl
xor
imul
add
lods
and
inc
pop
xorl
lods
jg
daa
pop
ss
aaa
sbb
in
loopne
cmp
push
pop
stos
cmpb
in
xor
clc
into
and
add
shl
out
and
scas
cmp
cmp
dec
int
lcall
inc
shl
inc
mov
jnp
cli
add
movsb
test
ds
fsts
inc
cs
aas
out
adc
adc
leave
jge
xchg
sbb
pop
int3
int3
xchg
jg
jecxz
cmp
add
sub
and
inc
pop
roll
scas
mov
mov
adc
jmp
push
jg
incl
fisubl
xor
jp
mov
mov
loope
insb
shlb
int3
cmp
mov
dec
xlat
pushf
testb
sub
sahf
mov
mov
mov
in
mov
add
rorb
pop
dec
inc
ja
imul
mov
shrb
ss
cmp
adc
add
out
scas
test
addl
iret
xchg
push
xchg
xor
mov
push
push
mov
sub
jno
xchg
mov
adc
test
or
xor
ss
pop
hlt
scas
sub
jmp
imul
mov
pushl
xchg
daa
mov
pop
and
roll
in
js
push
mov
push
sbb
fsub
push
xchg
js
pop
aad
addr16
jne
xor
pusha
push
das
jnp
dec
lret
push
fwait
jg,pt
adc
xor
mov
xchg
imull
add
faddl
sbb
jp
fstl
mov
movb
xchg
push
enter
mov
mov
shll
sahf
gs
cmp
xchg
test
in
lods
jnp
inc
sub
scas
fcoms
cmp
xor
cld
testb
inc
pop
pop
das
popa
push
divl
mov
jge
ret
call
in
movsb
fdivrl
aam
or
test
cmc
mov
lcall
cmp
or
movsl
stc
icebp
in
das
imul
push
xor
rcr
mov
cmp
mov
sub
fidivl
mov
pushf
add
scas
jnp
mov
outsb
into
mov
divl
repz
dec
push
in
cs
jo
push
push
aas
jge
outsl
and
hlt
mov
pop
jp
push
mov
inc
mov
dec
repnz
push
inc
and
pusha
xor
sarb
push
mov
data16
jmp
gs
dec
add
xorl
or
popa
call
sarl
div
push
repnz
adc
push
rcr
orb
adc
sub
lds
mov
xor
ljmp
mov
pusha
setns
out
lock
fxch
lds
add
gs
add
repnz
and
out
inc
test
push
lea
push
or
or
pop
add
ret
dec
jmp
push
subl
add
movsl
rorb
pop
sbbb
insl
test
arpl
arpl
xchg
mov
jg
cmp
test
and
loopne
lret
movsl
testb
repz
lret
js
fidivrl
pop
cmp
rorb
leave
decb
cs
push
inc
fbstp
cmp
cmp
sub
in
pop
bound
inc
aad
adc
ficompl
cmpsl
adc
sbb
out
inc
sbb
xchg
test
xlat
cwtl
inc
mov
gs
cmp
add
inc
lret
push
add
bound
shll
pop
mov
jno
cmp
outsb
jns
pop
movsl
lret
test
push
mov
test
cs
test
hlt
rcrl
aad
pop
xor
mov
sbb
push
sarb
clc
divb
hlt
ret
add
or
xchg
js
sub
es
add
adc
jbe
fcmovbe
cmp
xor
shll
add
jb
sbb
jp
inc
add
jle
mov
sbb
add
fists
out
pop
xchg
decb
pushf
sub
add
jno
push
pop
jl
mov
hlt
and
fcmovb
mov
push
or
add
movl
mov
push
xchg
sub
movsb
push
enter
mov
stos
es
adc
mov
mov
enter
arpl
pop
xor
das
dec
shr
sbb
push
adc
ljmp
dec
adc
fistl
clc
insb
into
jnp
jecxz
fcmovb
jecxz
mov
mov
xor
arpl
out
ret
pusha
push
or
xchg
jp
cltd
and
cld
std
lods
fstpl
pop
test
jg
loope
cli
jne
inc
scas
sbb
push
repz
mov
cmp
jae
jl
dec
sub
sbb
aaa
ja
and
inc
and
bound
arpl
xor
movsb
cmc
stc
dec
sub
inc
fistps
mov
jmp
push
loope
mov
mov
xchg
push
ficoms
xchg
push
or
scas
jbe
mov
stc
int3
or
rorl
mov
mov
mov
icebp
xor
inc
sarb
movsl
lods
and
cs
mov
xor
adc
les
cmp
mul
jle
mov
jns
fiadds
add
add
mov
or
or
popa
inc
fiaddl
add
jp
fs
mov
dec
mov
xor
xchg
lods
faddp
dec
rcrl
lret
insl
adc
jecxz
lock
in
loopne
pop
cmc
xchg
push
aad
out
add
das
xor
inc
mov
mov
and
mov
lcall
pop
and
lods
xor
imul
mov
in
inc
mov
out
and
adc
decl
out
inc
mov
xchg
repz
inc
cmpsl
bound
pop
inc
and
data16
into
xor
inc
push
lds
adc
lds
and
ljmp
jp
out
insb
daa
push
mov
lock
inc
pop
or
gs
push
jbe
and
sbbl
dec
jo
push
bnd
cld
jne
movsb
add
test
stc
mov
punpckhdq
jnp
add
jl
jle
scas
mov
rcrl
mov
lret
test
ja
cmp
or
js
lahf
pop
int3
movsl
decb
mov
test
enter
jns
fidivl
jo
mov
cmp
adc
lret
lods
out
in
jl
scas
idivb
loope
mov
mov
jae
cltd
or
pop
icebp
dec
hlt
lods
clc
jge
xchg
inc
jbe
loop
roll
popa
mov
pushf
or
jo
push
xchg
fdivrl
cmc
push
adc
inc
mov
or
sub
cli
rcrl
shll
and
dec
add
je
les
loope
or
orb
add
jge
addb
gs
dec
adc
xchg
nop
out
adc
mov
jbe
dec
xor
mov
inc
xor
movsl
cmp
jnp
mov
outsl
jge
testb
fcoms
cltd
pop
mov
leave
frstor
inc
stos
dec
or
insl
into
fwait
push
popa
insl
inc
push
imul
adc
jne
out
inc
jo
pop
mov
repz
aam
aad
mov
adc
push
bound
pop
jecxz
xor
ja
fstp
into
out
dec
jno
popa
jne
sbb
sbb
clc
lock
mov
xchg
push
cli
adc
fstl
and
add
pop
inc
les
sub
fcmovu
and
lock
xchg
xchg
adc
in
aad
nop
or
jb
adc
ret
rorl
lods
test
jmp
and
xor
int
push
nop
fwait
xchg
rolb
iret
pop
adc
xor
add
std
pop
xor
xor
fstl
push
pop
enter
push
mov
fwait
addl
and
out
mov
inc
movsl
sub
inc
sahf
pop
fld
cwtl
xchg
xchg
mov
mov
imul
nop
push
arpl
sarl
fidivrs
push
scas
mov
loope
sub
dec
jno
xlat
outsb
pop
xchg
mov
mov
dec
xchg
push
mov
pop
dec
inc
jae
cmp
sbb
fsubl
mov
pop
cld
dec
pop
cld
sbb
test
iret
fildl
insb
dec
jp
push
xchg
gs
jge
inc
stc
add
xor
outsl
pop
or
xlat
sbb
sbb
sub
push
pop
sbbb
add
pusha
rcrb
insl
out
adc
sahf
fcompl
adc
and
loopne
jb
adc
aad
pop
jle
pop
out
loop
mov
fcmove
ficoml
gs
out
pop
push
dec
jmp
lahf
push
xchg
insb
outsl
jmp
ficoml
lods
inc
sarb
loope
cwtl
loopne
test
xor
shll
addr16
icebp
loope
dec
fisubrl
lods
aad
xchg
jnp
mov
pop
cs
testb
sub
pop
enter
movsl
pop
sub
adc
mov
dec
movaps
outsl
in
addr16
cmp
push
nop
fbld
cld
cmpsl
mov
lods
add
test
test
das
sbbl
mov
mov
or
pop
cmp
icebp
ja
dec
pop
or
jae
adc
jl
or
dec
mov
enter
pop
cs
enter
sbb
sub
mov
push
mov
icebp
sub
test
lods
mov
int
and
xor
push
jg
lock
or
aas
inc
cmp
imul
cli
repnz
push
adc
dec
mov
movsl
add
pushf
rcrl
cli
in
test
or
ljmp
pop
or
xlat
aas
stc
push
test
push
jbe
dec
int3
stos
fs
inc
and
sub
xchg
popa
lods
pop
fs
dec
push
mov
stc
and
add
sub
dec
es
push
or
xchg
jmp
shll
dec
cmpsl
dec
bswap
inc
lock
sub
lock
leave
out
mov
mov
hlt
sbb
mov
mov
and
and
dec
dec
xchg
xlat
and
add
mov
xor
arpl
insb
add
fists
outsl
fxch
xchg
lcall
cwtl
je
and
fwait
mov
sti
aam
fcomps
fisubl
popa
das
xchg
ds
cli
pop
nop
mov
outsl
ds
lock
arpl
lcall
insb
jo
xchg
inc
aam
sub
daa
push
std
pop
dec
movsl
add
ror
jo
scas
iret
dec
aam
sbb
pop
fstps
mov
cmp
arpl
popf
ja
jg
jns
mov
sbb
push
sbb
mov
lods
lds
cltd
loop
xor
loop
mov
or
push
push
js
ja
outsb
jmp
dec
in
jge,pn
js
mov
and
repnz
outsb
jo
sbb
leave
loopne
lock
shll
mov
add
fldl
or
push
xor
out
stos
lods
jbe
or
pop
inc
jo
xor
sub
int
nop
outsb
daa
adc
sub
or
loopne
aas
mov
jne
into
push
sbb
ljmp
or
enter
mov
std
xorl
aaa
xor
out
int3
sub
stos
jecxz
mov
mov
sub
xchg
sysexit
in
mov
ja
jns
iret
mov
cmp
add
stc
cmp
and
xchg
or
xchg
adc
call
popa
or
in
orl
ss
push
fstpl
dec
jmp
shlb
jmp
test
mov
push
sarb
in
repnz
inc
sbb
orb
inc
or
mov
inc
stos
inc
and
and
pop
mov
std
adc
aaa
lock
push
lret
mov
jmp
pop
jno
mov
push
push
xchg
push
aad
jb
scas
mov
orl
push
mov
jp
rcl
and
repnz
sbb
lea
fcoms
cld
sub
sbb
fldenv
xchg
mov
cmc
cmp
in
fstpl
pop
leave
jl
into
out
out
aas
add
add
cmp
dec
in
dec
fadd
push
subl
pop
mov
loopne
pop
cld
jle
ss
daa
int3
jge
pushf
add
insb
pop
sub
fimuls
or
test
addr16
add
mov
int
frstor
jo
dec
sahf
in
and
adc
sarl
mov
push
xchg
cmc
cmpsb
incl
and
mov
imul
imul
dec
sar
ss
lods
scas
mov
add
or
cld
mov
push
lahf
gs
icebp
lock
xchg
mov
pop
scas
fwait
xor
daa
jg
sbb
test
add
xchg
call
loopne
idivb
pop
out
xchg
mov
into
lock
pop
dec
dec
mov
pop
ja
cmp
in
adc
lds
jle
push
or
and
xchg
or
sub
daa
mov
aas
pop
pop
inc
adc
dec
cwtl
sub
fildll
fistpl
and
pusha
orb
xchg
push
mov
sub
add
rcll
ret
outsb
mov
mov
loop
ja
fiaddl
xor
push
ret
mov
andl
add
mov
mov
or
add
pop
data16
mov
inc
add
test
dec
bound
cmp
sub
mov
nop
outsb
stos
popf
xor
inc
addr16
adc
or
jmp
mov
std
rorl
and
cmp
or
fs
out
xchg
mov
jae
xor
dec
xor
icebp
jae
inc
or
nop
mov
lret
mov
loopne
dec
push
fstpt
and
stos
outsl
ja
lds
add
fiaddl
stc
sbb
cld
xchg
jle
aaa
insl
ret
and
inc
sbb
decb
fwait
lods
idivl
ljmp
mov
and
inc
jl
mov
mov
xor
orb
or
xor
xchg
sbbl
divb
fmull
cmpsl
lret
or
scas
jb
pop
pop
mov
xor
xor
stos
fistpll
ja
xchg
insb
test
xchg
xor
xlat
rorl
daa
nop
cmp
in
jge
or
mov
jg
and
mov
and
popa
push
adc
mov
or
pop
fdivl
rcll
stos
add
out
fwait
pop
add
adc
jns
std
sahf
sbb
stos
mov
and
xchg
nop
rclb
loope
sbb
jnp
jmp
sbb
dec
aaa
mov
sub
sub
aas
or
pop
inc
repnz
lods
js
and
pop
clc
inc
rcrb
addr16
popa
jns
push
jge
add
ljmp
dec
repz
add
jae
roll
mov
adc
fdivs
sti
mov
or
or
es
mov
insb
dec
mov
jae
push
and
cli
cmp
push
pushf
lock
cmp
inc
addr16
pushf
out
xor
lret
dec
out
jae
or
fwait
and
pop
adcl
cmp
and
fstl
add
jae
mov
adc
lcall
sub
mov
xchg
test
dec
out
pop
shl
int3
mov
roll
dec
adc
ljmp
jno
inc
cmovae
adc
enter
mov
out
rclb
sbbb
cmp
scas
mov
lret
mov
aas
addr16
in
pop
dec
mov
outsb
and
inc
push
xchg
pop
testl
pop
cli
aad
leave
ror
adcl
pop
mov
cwtl
mov
out
sbb
jg
fsubl
mov
mov
js
and
daa
xchg
push
fs
aaa
div
adc
inc
xchg
push
adc
les
insb
leave
lods
adc
rcll
xor
cmp
add
adc
repz
loop
repnz
dec
clc
in
xchg
mov
xchg
cld
mov
stos
lret
push
and
push
adc
mov
xchg
mov
pushf
pusha
aas
ret
lahf
push
jmp
mov
das
test
popa
movsb
xchg
es
stos
imul
push
out
stos
cmpsb
jmp
dec
ja
inc
mov
js
outsl
enter
adc
mov
rclb
mov
shrl
add
and
movsl
pop
pop
rcrl
scas
or
jne
lds
lret
outsl
push
cmp
jg
xchg
or
xor
sbb
push
jle
cmc
xchg
cmpb
leave
inc
mov
cwtl
lahf
les
cltd
es
jecxz
cmp
negb
ret
aaa
fidivrs
xchg
into
repz
push
ljmp
xor
daa
jge
or
or
es
mov
and
cmp
mov
cld
mov
out
icebp
cmpsl
les
cltd
pop
ds
xchg
adc
cmc
or
dec
cmp
dec
ja
ds
push
rsm
push
stc
daa
mov
and
lea
sbb
inc
and
inc
mov
or
lods
sub
sub
mov
fwait
idivb
fmull
dec
cltd
inc
pop
popf
addr16
adc
add
dec
push
leave
leave
clc
les
in
pop
pop
xor
stos
aam
test
xchg
adc
lcall
inc
jns
and
mov
test
iret
data16
sub
fstpl
loope
inc
sub
mov
and
jmp
xor
push
or
nop
sbb
adc
cli
dec
out
notl
push
push
cs
inc
in
fcompl
cmp
sahf
push
mov
ss
cmp
xchg
insb
jg
inc
or
inc
dec
pusha
push
dec
sahf
dec
adc
shl
inc
cmp
sahf
arpl
xchg
lods
fsubrs
mov
push
cmp
mov
pop
faddl
fwait
pop
add
push
cmp
or
and
pop
leave
fisubl
idiv
or
jle
shlb
pushf
lret
popl
pop
fdivs
cmp
pop
sub
and
lahf
scas
std
sub
jmp
pop
dec
sub
jbe
jg
addr16
add
push
shlb
add
fnsave
scas
mov
ss
in
outsb
out
int
out
fwait
nop
iret
mov
adc
xchg
enter
inc
push
and
xor
clc
dec
mov
sbb
adc
out
add
lods
dec
mov
dec
xchg
lret
xor
addr16
add
shrl
out
xor
mov
push
scas
sarl
fdivrs
xor
mul
and
test
scas
fiadds
cmp
add
jb
and
or
dec
dec
divb
push
stos
insb
mov
in
pop
into
cmp
subb
push
in
or
mov
cmp
stc
mov
mov
fiaddl
push
cltd
mov
xchg
aaa
xlat
push
lret
lret
decb
into
add
fimull
pushf
addr16
xor
mov
mov
mov
pop
inc
sub
call
rcll
pop
fidivl
adc
test
cmc
bound
xchg
divl
aaa
testl
scas
insl
add
in
in
mov
push
mov
jmp
fimull
adcb
jmp
roll
mov
mov
into
gs
rep
push
test
pop
imul
and
in
jbe
mov
inc
inc
ror
das
cli
mov
stos
dec
jp
sub
push
movsb
push
xchg
loopne
pop
dec
aas
ficomps
leave
mov
push
adc
mov
sbb
in
dec
pop
es
cld
loopne
lds
pop
add
push
rcrl
dec
adc
int3
inc
imul
add
jae
add
fsubs
lods
inc
adc
cmpsl
sbb
lahf
jmp
jb
lods
mov
xor
push
mov
cmc
stc
jnp
lods
dec
xor
mov
loopne
lods
roll
mov
les
jnp
jmp
in
adcb
xchg
mov
lahf
lret
adc
adcl
divb
cwtl
dec
sti
push
pushf
lea
popa
add
mov
cmp
jo
cmp
ljmp
jae
inc
stos
enter
mov
ljmp
mov
aas
jno
inc
xor
xor
push
xlat
scas
jmp
ja
mov
xor
das
pop
lods
xchg
ret
sahf
cmp
mov
stos
jle
mov
lret
nop
xor
test
outsl
nop
add
or
out
and
in
enter
std
jecxz
push
shl
xor
add
push
rcrl
fwait
xor
stos
mov
mov
push
aad
test
pop
loop
subl
and
push
out
in
loopne
pop
arpl
lea
iret
mov
mulb
fsubl
out
rorb
push
int
arpl
pop
std
call
int
std
sub
jge
sbb
outsb
push
sbb
addr16
mov
lods
jmp
mov
sub
clc
in
xchg
mov
inc
dec
dec
bound
dec
jmp
mov
cld
sbb
in
jne
lea
xlat
cmpsb
in
jl
test
sarl
scas
and
test
sarl
fs
test
jp
fs
lock
in
sub
pop
add
test
shlb
repz
sti
iret
push
push
mov
xchg
fwait
aas
xchg
pop
cltd
inc
lods
testl
mov
scas
and
pop
sub
mov
sbb
mov
in
in
xor
mov
mov
stos
cmpsb
jl
xor
mov
es
mov
xor
inc
adc
cmpsl
in
bound
lret
rcrb
push
test
pop
sub
mov
push
jns
rcr
ja
incl
addl
push
inc
sahf
out
mov
call
ss
pop
adc
imul
repz
bound
pop
ficomps
inc
pushl
mov
cmp
sbb
mov
addr16
mov
or
int3
sub
push
push
mov
inc
pop
lock
mov
pop
fucompp
lcall
sbb
ffreep
pop
ret
cld
notb
ret
sbb
aas
fs
mov
sub
jge
js
ja
stos
mov
or
dec
add
dec
pop
out
aad
push
addr16
mov
and
lcall
push
ja
clc
imul
leave
push
jbe
rcrl
addl
sbbb
lcall
pushf
lock
ds
jle
add
fldenv
push
push
xor
pop
xchg
into
cmpsl
and
pop
ja
dec
pop
or
and
xchg
jmp
jo
pop
mov
jmp
jo
mov
or
int
das
inc
scas
xchg
test
mov
fsubrl
imul
sbb
std
iret
xchg
xor
movb
ret
pushf
test
add
inc
sub
mov
mov
add
inc
movsl
push
xor
and
test
mov
lret
setae
add
js
push
push
ljmp
test
pop
lock
xchg
ja
dec
xorb
loopne
jg
mov
push
rcll
ljmp
nop
sub
stc
adcl
xchg
stc
enter
scas
sti
jbe
xor
add
ja
adc
popaw
push
imul
and
js
add
call
push
dec
les
jecxz
xchg
inc
and
fbstp
clc
adc
data16
sahf
lret
cmp
lds
sbbl
fbld
lock
mov
xchg
adc
loopne
mov
loop
test
add
mov
loope
das
insl
adc
rcrb
out
je
and
inc
nop
adc
pusha
repnz
std
push
fs
sti
rorl
pushf
dec
pop
insb
jo
movsb
inc
int3
mov
and
mov
add
sarl
fisubrl
inc
aaa
cli
xor
mov
aaa
pop
movsb
subb
mov
sbb
inc
push
jmp
fdivs
jge
lods
jnp
into
jne
xor
in
xchg
xor
cmc
test
xor
push
dec
lahf
sbb
inc
ret
mov
dec
jecxz
mov
popa
pop
call
jecxz
and
jecxz
ret
mov
xor
push
mov
pop
rcr
bound
mov
inc
icebp
call
psubq
out
sub
stos
cli
and
cmp
popf
rcrb
xor
mov
and
nop
movb
jae
adc
rcrl
push
dec
xchg
inc
fldt
cwtl
xor
in
loope
sarb
outsl
aad
adc
sbb
xchg
out
mov
push
out
mov
mov
cmp
sbb
inc
xchg
sbb
das
mov
and
inc
and
push
aam
flds
rolb
add
jae
xchg
or
adc
sub
pop
into
pusha
add
lds
mov
push
or
jge
and
test
dec
test
jb
scas
xor
shl
leave
adc
in
mov
add
sub
jae
add
mov
nop
cmpsb
icebp
push
inc
xchg
mov
lret
mov
and
mov
xor
jae
and
call
aam
xor
dec
xchg
shll
loop
sar
pusha
and
dec
xchg
jmp
loope
mov
push
inc
out
xchg
sub
mov
rorb
in
push
es
inc
dec
or
and
push
jp
orl
int3
mov
pop
test
mov
cmpl
xlat
and
adc
xor
pushl
add
insb
mov
inc
in
cwtl
ret
or
repnz
pop
dec
lcall
jo
jbe
dec
icebp
jmp
and
and
shll
xchg
sti
push
inc
inc
mov
dec
mov
sbb
mov
cmp
mov
cmp
mov
mov
in
jno
push
jge
dec
aas
inc
mov
nop
add
pop
xchg
inc
push
cmpsl
xor
lret
and
sub
fsubrs
fisttps
pop
mov
lcall
mov
push
inc
movsl
cmc
mov
aaa
rclb
loope
add
inc
dec
aad
dec
push
divl
out
outsb
and
js
mov
loopne
cmp
cwtl
fstps
dec
pop
pusha
pop
cmp
shr
inc
pushf
out
addr16
subb
or
lret
mov
lcall
movsb
les
pop
popl
sub
lods
cmp
ss
ret
sahf
push
addl
testl
mov
fidivrl
fcoml
cmpsb
mov
arpl
xlat
fwait
bound
jp
sbb
sbb
scas
adc
roll
mov
test
mov
lahf
sbb
fstpl
sbb
hlt
add
testb
cltd
mov
ficoml
fsts
cmc
cwtl
push
scas
or
jno
loop
xchg
push
or
enter
or
sub
jno
in
out
loop
mov
sbb
jbe
mov
sub
out
push
xchg
or
sub
cmpsl
nop
in
pop
fldenv
or
in
cmp
testb
push
cli
push
lahf
pop
testb
outsb
xchg
in
adc
push
lret
ljmp
add
cmp
jnp
mov
shrl
push
in
cmp
mov
out
aaa
xchg
imul
pusha
jmp
loope
cli
les
mov
jne
shll
int
aaa
cwtl
jecxz
jae
push
rcrl
shlb
jbe
in
or
mov
mov
sub
fwait
dec
fsubrl
ljmp
aad
dec
jno
cmp
adc
data16
dec
ficompl
mov
xorl
pop
adc
inc
mov
out
movsl
push
mov
push
xlat
loop
jmp
out
mov
jge
or
xchg
cmp
cld
jl
aam
jae
cmp
cmp
sbb
out
inc
ret
push
icebp
xor
mov
ret
jno
push
inc
xchg
in
fdiv
addl
pop
pop
inc
adc
xor
xchg
xchg
or
fs
xchg
daa
in
xor
cmp
jbe
lea
mov
push
gs
xchg
xchg
js
add
lret
or
dec
ficoml
mov
push
or
and
in
sbb
cs
push
fwait
sbb
push
bound
stc
jecxz
pop
into
mov
pop
cmpsl
out
ljmp
int3
jmp
dec
addr16
cltd
repnz
sbb
lods
pop
mov
sub
cld
out
jge
ja
arpl
fucomi
jae
cmp
adc
jmp
inc
cltd
adc
test
add
sahf
sbb
sbb
aas
inc
adc
dec
lcall
call
push
enter
int
shll
sbb
in
cmc
push
cmc
divl
mov
pop
inc
push
push
dec
nop
or
xor
sbb
gs
xchg
pop
xchg
jl
repnz
and
mov
jle
pop
bound
inc
pop
pop
cmp
xlat
adc
jae
and
jmp
loope
movsb
sbb
dec
xchg
mov
hlt
mov
and
cmp
decl
pushf
loopne
inc
test
jg
sub
and
in
nopl
fs
lds
cmc
stos
arpl
or
into
iret
mov
test
fistpl
jns
shl
mov
das
or
rolb
popf
jbe
imul
push
sbb
fadds
popl
ret
icebp
les
and
pop
roll
dec
das
add
test
pop
imul
add
imul
lret
lods
fidivl
jae
pop
add
insb
xor
cmpsl
xchg
mov
xor
or
sahf
mov
addr16
insb
lea
sbb
mov
xchg
fdivr
xor
mov
or
or
or
cltd
hlt
mov
push
mov
mov
add
push
pop
xchg
enter
test
popf
hlt
repz
push
or
dec
pop
out
pop
js
test
test
mov
inc
xchg
pop
dec
sub
mov
cmc
punpckldq
test
cs
mov
inc
clc
call
ret
rcr
pop
mov
pusha
xchg
push
cmp
inc
sbb
mul
xchg
cmp
xchg
push
mov
lds
outsl
mov
test
lret
mov
out
jne
jo
insb
add
ret
cmpsl
push
dec
or
dec
pop
sti
jb
clc
inc
sub
jbe
hlt
aam
mov
xchg
aam
cltd
and
mov
test
xorl
adc
out
xor
push
pop
sbbl
push
jbe
mov
cs
call
pop
fcomip
cmpsl
pop
xor
or
fsubrl
incl
xchg
sbb
jo
rcll
ret
mov
dec
movsl
std
movsl
jmp
cmp
movsb
lahf
fdivr
cmp
adc
jecxz
inc
pop
sub
popl
int3
and
dec
sti
jae
xchg
mov
jbe
cmp
push
or
and
das
add
subb
ljmp
lret
push
enter
lret
popa
mov
cmp
xchg
push
xor
mov
cmp
or
mov
pop
add
addl
mov
addr16
sbb
es
mov
xorb
xchg
ret
shl
dec
pop
rorl
or
adc
lds
outsb
ret
sub
jmp
ljmp
xchg
mov
jno
jecxz
sub
inc
jmp
push
dec
lock
ja
mov
inc
les
sub
or
sub
xor
pop
lods
das
mov
fmulp
lods
jo
sbb
pop
sub
mov
clc
ljmp
mov
pusha
inc
inc
dec
cmp
cmc
xchg
jecxz
push
mov
pop
fisubrs
cmp
adc
call
movsb
fucomp
and
loop
xor
stos
push
push
mov
insb
das
pop
adc
cmp
test
sbbb
jg
push
sahf
push
loopne
jne
dec
pop
test
and
scas
sbb
sbb
jb
sub
rcr
add
aas
or
or
cmp
aas
sbb
dec
loope
xchg
scas
ljmp
enter
ss
or
add
pop
aam
sti
jmp
pop
xchg
in
dec
call
push
scas
pop
cltd
pop
sbb
xchg
push
dec
das
xor
popa
fnstenv
inc
gs
jmp
add
jne
sbb
mov
ficomps
and
mov
adc
adc
pop
push
jno
js
dec
inc
aam
out
cwtl
mov
mov
or
pop
mov
insl
test
adc
mov
es
xor
cmp
xorb
dec
loopne
push
inc
jae
dec
out
in
jbe
mov
and
pop
push
ss
fxch
inc
outsl
and
inc
sub
mov
out
adc
xchg
jg
test
mov
push
aas
test
or
stos
test
hlt
jbe
xor
shr
jb
dec
push
xchg
or
push
dec
js
mov
push
jge
and
or
inc
popa
push
das
scas
jle
pop
mov
xor
pop
cltd
sbb
arpl
cmp
inc
jnp
jno
aam
pop
adc
outsl
ffree
or
dec
sbb
mov
mov
push
movsb
xchg
mov
mov
fdivrs
aas
pop
xor
push
mov
scas
insl
adc
dec
pop
sbbl
sub
imul
outsb
fiadds
sbb
pop
add
pop
addr16
sbb
ret
cmp
mov
or
pop
fldenv
cli
andl
ret
arpl
cli
jmp
in
sti
mov
imul
divl
shr
cmpl
nop
lds
iret
lds
std
daa
shlb
cmp
dec
clc
mov
xor
xor
loope
pop
mov
cmp
inc
inc
xchg
jb
call
stos
inc
sub
mov
rcll
jb
ret
mov
lea
sub
push
lcall
jb
jle
fs
test
mov
mov
mov
fneni(8087
add
addr16
mov
es
xchg
out
dec
rcrb
xlat
mov
lret
sub
inc
mov
and
lds
cmp
push
cmp
shrl
icebp
lods
je
cltd
jmp
scas
in
das
ss
cld
shlb
mov
nop
loop
inc
add
lods
or
xchg
imul
dec
adc
jecxz
pop
js
xor
mov
lea
sub
addb
cltd
sbb
out
dec
mov
pop
cmp
js
push
popa
pop
mov
mov
out
loope
jae
dec
iret
daa
shrl
sbb
push
xor
repz
dec
out
jle
sub
push
dec
mov
fdiv
scas
pop
lea
inc
inc
je
mov
pop
push
push
shlb
inc
inc
lods
icebp
movsb
nop
or
adc
imul
enter
adc
xchg
les
fcomp
adc
outsb
cmp
fldenv
nop
mov
movsl
jmp
jns
pop
sti
fnstcw
sbbl
sahf
jno
push
ret
push
jo
fidivrl
adc
mov
clc
icebp
jp
fsubl
leave
mov
ss
xchg
insb
hlt
or
cmpsb
push
dec
xchg
xor
out
xchg
add
outsb
in
push
push
pop
in
or
sbb
into
inc
inc
out
fists
mov
addb
sub
cmp
test
stc
es
or
mov
jle
insb
mov
test
xor
stos
ror
int3
ss
jp
xchg
divl
loope
and
out
dec
rcll
test
hlt
xchg
or
and
or
testl
nop
stos
mov
mov
xchg
push
into
loop
mov
mov
das
addl
mov
jo
sub
sbb
dec
shrl
and
lret
xorb
mov
sarb
sti
data16
dec
mov
fistpll
adc
and
scas
imul
or
hlt
out
jecxz
push
push
shlb
jno
clc
repz
jg
stos
inc
xchg
pop
insl
imul
idivb
dec
cli
push
mov
movsb
std
sti
rcr
ret
adc
jle
popa
shrb
dec
ja
cmp
jmp
sbb
sbb
sub
loopne
or
add
pop
cmp
imull
repnz
mov
addr16
adc
lahf
sahf
rorb
ljmp
je
inc
mov
inc
int3
sti
push
dec
aas
aad
out
repz
inc
xchg
loop
movsl
movsb
loopne
xor
and
or
jns
cwtl
movsb
add
or
iret
add
dec
mov
sbb
std
in
lock
sti
cld
xor
xchg
mov
ja
outsl
into
daa
shlb
out
movsl
fdivp
jecxz
popa
aaa
xchg
call
inc
out
inc
arpl
mov
sub
arpl
in
push
xchg
adc
mov
push
cmpsb
mov
add
jg
ds
pop
xchg
pop
xlat
jle
icebp
je
inc
fstl
ret
loop
iret
dec
notb
sbb
jmp
orl
mov
insl
daa
out
push
dec
mov
xorl
jb
fists
push
add
dec
add
mov
fisttpll
mov
aas
xlat
and
xchg
push
mov
lret
fmuls
push
dec
xor
fs
sub
enter
inc
in
cmp
inc
rcrl
push
cmpl
push
fdivrs
xchg
shll
outsb
mov
imul
mov
jb
cltd
je
jp
push
adc
out
insb
jmp
pop
lods
movl
jecxz
movsb
jne
xor
sub
cmpsb
aad
jns
scas
movaps
gs
mov
jo
and
and
insb
js
jmp
movsb
cmp
push
xchg
mov
mov
int
scas
mov
or
sub
test
adc
adc
lea
sub
sub
jp
ret
dec
push
fdivl
dec
addr16
jb
mov
jnp
cs
or
int3
flds
jp
mov
sbb
mov
movsb
mulb
rclb
xchg
or
aaa
mov
shlb
or
pop
ljmp
lock
repz
mov
ficoms
mov
or
and
lcall
ret
sbb
mov
push
adc
add
sbb
jnp
pop
enter
cmp
jbe
in
pop
repz
cmp
dec
je
es
xchg
push
sub
shr
les
out
std
jg
lods
dec
movsl
sbb
shll
imul
xor
sbb
xor
cmp
pushl
mov
push
insl
nop
fdivrl
xor
mov
fistpl
sahf
mov
outsl
cmpsl
mov
mov
lahf
aaa
xchg
cmp
pop
fidivs
pop
pop
nop
je
sarb
inc
push
das
loop
jo
fwait
push
cwtl
out
push
leave
or
lods
arpl
popf
dec
frstors
and
add
out
adc
xchg
sbb
jmp
int
pop
add
aad
lahf
lods
and
ss
popa
aad
cmpsb
inc
pop
cs
bound
push
or
out
sub
rcr
je
aad
hlt
mov
jno
stos
xor
xchg
out
enter
push
jecxz
xchg
data16
int
sub
movsb
fcoms
jle
jne
in
sti
out
cmp
or
fists
out
pop
push
in
scas
jl,pn
cmp
push
jmp
adc
mov
jno
jno
mov
mov
mov
leave
inc
adc
cmp
inc
fs
retw
out
sbb
pushf
call
or
mov
cmp
xchg
inc
xchg
shrl
cwtl
xchg
jne
insb
pop
arpl
sbb
mov
mov
inc
add
repz
mov
cltd
push
mov
stos
scas
fwait
xor
jnp
inc
int
xor
lret
ret
outsb
out
jmp
or
fdivrl
out
xchg
outsl
or
in
xchg
sbbb
mov
mov
xchg
pusha
lods
jecxz
or
out
inc
shll
in
add
cltd
mov
mov
nop
dec
imul
sbb
test
mov
lods
scas
push
xor
sub
sub
cltd
xor
inc
mov
adc
aaa
ffree
pushl
adcl
push
dec
pop
rcll
lret
mov
and
inc
adc
mov
mov
in
jg
fmuls
xor
xor
imul
lods
repz
ret
push
sbb
lret
in
and
out
push
adc
aam
push
jno
mov
mov
inc
lods
push
push
ret
add
or
ret
fiaddl
sub
nop
push
arpl
mov
repz
push
rolb
aad
cs
clc
sub
int3
jle
cwtl
and
inc
pushf
test
mov
add
lds
dec
testl
adc
hlt
and
in
pop
mov
idiv
add
or
adc
mov
movsb
imul
pop
cmpsb
arpl
push
jmp
shr
xchg
fidivrs
inc
aas
lock
add
inc
pop
sbb
stc
scas
movsb
pop
mov
push
mov
mov
pop
jmp
dec
nop
js
mov
dec
cmpsl
jo
sti
bound
rclb
ret
pop
leave
outsb
imul
in
dec
or
sahf
cwtl
addb
mov
inc
je
mov
jnp
ds
adc
data16
lret
mov
mov
fldcw
pusha
inc
jmp
cs
arpl
sbb
cmpl
mov
sub
dec
incl
xchg
sbb
and
jle
lds
fnstcw
shll
repz
int
ljmp
cmp
out
cmp
leave
or
sbb
mov
mov
clc
mov
sub
jno
repz
mov
jge
xor
fmul
inc
loopne
ljmp
xor
rcll
or
insb
sbb
mov
jne
push
and
bound
jne
or
dec
or
cltd
pop
sub
fs
leave
jb
mov
sbb
xchg
aam
sahf
fsubs
lret
orb
fistpl
std
sub
jae
pop
jl
jae
cltd
imul
je
iret
stos
dec
js
pusha
push
push
jbe
mov
inc
sub
out
orl
mov
jnp
dec
sub
xor
std
mov
pop
jmp
test
sahf
lock
mov
mov
lret
hlt
dec
or
and
shll
outsb
ljmp
fwait
cmp
inc
pop
mov
mov
les
mov
cmp
mov
stos
mov
outsb
push
xchg
push
sub
mov
cmc
mulb
leave
adc
xchg
add
hlt
test
daa
mov
in
add
and
popa
int
add
outsb
adc
add
repz
movsb
jb
pop
push
mov
ljmp
add
into
push
iret
cmp
orl
and
test
or
fisttpll
xchg
mov
rol
ja
pushf
test
imul
jae
lret
leave
sti
daa
adc
pop
mov
sub
jp
mov
sbb
out
jbe
push
pushf
movsl
fistl
mov
sbb
out
adc
pop
mov
mov
or
xorb
add
gs
pop
sti
je
hlt
ret
mov
adc
cmpsb
lcall
xchg
sarl
add
fs
mov
fnstsw
and
cmp
fdivl
adc
push
push
mov
or
pop
mov
cmp
jle
insb
push
push
mov
sarb
out
add
cmp
in
inc
adc
xchg
add
xor
xorb
arpl
stc
dec
mov
daa
rcr
data16
das
in
jge
rol
inc
xchg
std
stc
pushf
fldt
inc
cmpb
cmp
xchg
cli
nop
inc
hlt
adc
adc
and
add
aam
inc
xchg
or
cltd
andps
jge
add
int3
inc
cmpsl
pop
xchg
and
cwtl
cli
scas
cmpb
ret
xor
jns
dec
xor
dec
jl
push
stc
push
std
push
push
xchg
xor
sub
leave
movsl
sbb
inc
fistpll
fsts
aam
jecxz
push
in
pop
in
test
es
pop
out
addr16
js
adc
mov
jnp
out
mov
and
push
fldl
fnstenv
dec
xor
sub
es
pop
ror
inc
sub
fimull
sub
sarl
pop
aaa
and
lock
sbb
faddp
push
fistpl
out
inc
bnd
jae
test
std
stc
cmp
mov
mov
clc
je
cmc
dec
outsb
shr
and
lods
pop
push
movl
mov
addr16
jecxz
icebp
mov
stc
push
mov
dec
and
movsb
call
in
ja
jle
mov
push
popf
mov
push
inc
aas
xor
dec
inc
jnp
je
cld
mov
mov
cmc
push
xchg
es
add
push
xchg
push
aad
mov
enter
adc
bswap
inc
stos
imul
daa
sub
insb
pop
jmp
fwait
mov
fcoml
xor
cltd
mov
bound
push
cmp
mov
popf
adc
xchg
div
mov
mov
ljmp
fsubl
into
jmp
sti
mov
test
je
lret
cli
jl
daa
mov
rcrb
movsl
mov
dec
scas
jne,pn
cmpsb
lret
pop
adc
sub
jb
lods
pop
adc
rolb
sar
mov
fnsave
mov
mov
je
fisttps
lret
daa
xchg
jmp
mov
or
cmpsl
xchg
lods
push
std
loop
fnstenv
das
cmp
fdivp
addr16
dec
mov
leave
in
xor
cltd
outsl
fs
mov
push
and
out
out
mov
xchg
mov
nop
les
idivl
in
insl
cli
push
inc
inc
lea
orb
sub
pushf
mov
ret
inc
out
in
mov
inc
nop
je
or
xchg
cmp
icebp
mov
pop
pushf
jecxz
sbb
pop
xchg
adc
cmp
jmp
push
scas
add
popf
fiadds
adc
mov
push
add
sub
fmuls
ret
xor
shll
pop
scas
pop
mov
mov
or
dec
mov
lods
in
dec
enter
and
rcrl
jae
mov
dec
movsb
xchg
aad
sub
dec
jno
loopne
fsubrl
add
jl
jbe
cmpsb
dec
xchg
push
out
fcomps
mov
mov
mov
sbb
popa
sub
lcall
inc
roll
mov
imul
shlb
or
popa
jg
repz
in
cmp
cmp
pop
cmp
pop
sahf
xchg
push
jne
cmpsb
adc
adc
repnz
push
nop
inc
arpl
aaa
push
or
pushf
aam
dec
cld
stc
xchg
push
push
out
pop
loop
cld
sbb
aam
pop
icebp
push
out
pop
outsl
scas
jmp
or
add
mov
or
adc
adc
sbb
out
and
test
into
dec
inc
lds
dec
out
fs
ja
inc
ror
inc
push
shr
enter
push
sbb
shlb
icebp
cmpsb
adc
or
rorl
mov
cli
xor
loopnew
jle
pop
std
lea
or
jmp
loopne
andb
stos
mov
and
xor
fs
fs
mov
mov
lock
in
mov
std
inc
dec
add
mov
jne
leave
adc
mov
sbb
mov
sub
cmpsl
test
or
jae
dec
cs
imul
repz
dec
adc
sbb
insb
les
ss
test
sahf
ds
data16
rcrl
fwait
xchg
push
faddl
xor
imul
jnp
js
fmulp
sbb
xor
add
mov
lods
sub
mov
dec
cmpsb
xchg
ret
icebp
aam
mov
aaa
aaa
sbb
sub
adc
fsubs
stc
popf
mov
mov
dec
inc
cs
repnz
cwtl
in
cmp
and
vphadduwq
lds
mov
push
add
adc
adc
mov
fwait
into
mov
cli
rol
int
fsubrl
ds
xchg
loope
in
pop
enter
fcomps
testl
aaa
xor
and
test
sbb
mov
jl
push
xchg
sbb
mov
ror
test
sbb
xor
or
out
jg
mov
pushf
dec
and
ret
sub
mov
in
cwtl
lods
mov
push
or
inc
and
cmpsb
add
push
les
push
adc
pop
sub
mov
mov
repz
cmc
jg
movb
sub
add
mov
mov
and
cmp
sbb
mov
ficoms
test
test
dec
scas
dec
imul
imull
aad
push
cmp
push
add
and
sti
scas
ret
mov
push
popf
ds
inc
stc
pop
and
pushf
pusha
nop
jg
lds
stc
add
in
push
jnp
jl
xchg
popa
push
pop
push
push
dec
pop
andl
imull
jbe
sbb
jnp
idivl
jg
xor
jg
sub
aas
or
mov
lret
mov
cli
sti
fcomps
add
sub
cmp
ror
test
out
out
out
mov
mov
es
lcall
psraw
xchg
sbb
daa
aaa
xchg
or
mov
mov
jb
and
jbe
add
push
push
mov
push
mov
lods
sub
aaa
and
cmpb
shll
fs
cmp
xor
xor
int
rol
or
jae
inc
xor
push
repnz
cwtl
sub
gs
ret
stos
fbstp
jecxz
dec
fsubs
pop
dec
pminsw
scas
pop
cmp
movsl
insb
mov
push
xor
xchg
mov
cwtl
bound
dec
mov
push
pusha
sub
mov
pop
cmpsl
stc
pop
mov
adc
push
or
mov
sbb
sub
push
fs
mov
std
mov
jecxz
xchg
mov
cmp
scas
pop
test
add
call
cmpsb
cmpsb
mov
out
imul
sbb
pushf
lods
sub
int
popa
or
jbe
push
and
cmp
mov
rolb
pop
mov
inc
int
sub
inc
and
rol
aam
jbe
ret
mov
sbb
pusha
orb
aad
mov
pop
cld
jp
xchg
mov
out
fidivrl
xchg
fwait
xacquire
mov
ds
sub
inc
dec
jo
out
mov
xor
es
rcrb
repz
sub
iret
inc
and
push
jo
shlb
cmp
dec
repz
or
lock
or
adc
jae
pushf
add
dec
or
fdivl
loop
xlat
inc
fwait
adc
push
shll
lcall
dec
xlat
pop
jge
push
repz
sbb
pop
sub
testl
mov
push
cmp
loopne
mov
xchg
fstl
clc
rcrl
mov
mulb
icebp
xchg
mov
jecxz
sub
add
in
sahf
cwtl
ret
popa
push
sti
push
fimull
add
jmp
inc
das
in
pop
inc
or
jg
stos
mov
sub
mov
ret
movsl
dec
in
cltd
jae
scas
adc
stc
out
insl
push
mov
test
xchg
das
sub
push
fimull
jno
jnp
mov
and
stos
dec
push
and
jns
loopne
std
stos
jo
clc
jae
push
jecxz
push
add
orb
lcall
rclb
push
aas
jno
sti
push
cmp
pusha
je
lods
mov
push
fiaddl
push
in
mov
js
pop
iret
sbb
mov
push
shl
ljmp
jg
push
ficoml
jae
mul
stos
xor
pop
and
shl
out
repnz
dec
dec
std
dec
mov
adc
inc
xor
adc
insb
ss
addr16
xor
sbb
mov
jle
js
and
xlat
jecxz
and
ljmp
scas
dec
xchg
hlt
sub
xchg
div
je
out
push
filds
push
cmpsl
mov
ljmp
adc
mov
mov
mov
cmc
pop
aad
push
bsr
sub
arpl
xchg
shrl
js
push
xchg
add
data16
ss
xor
pop
mov
xchg
pop
iret
shlb
jmp
std
pop
fidivs
mov
fwait
xchg
mov
adc
mov
ds
and
push
mov
repnz
adc
int3
stos
testb
adc
dec
shrl
out
icebp
cmc
das
movsl
fldcw
or
push
jne
arpl
jb
inc
sbb
mov
icebp
loop
cmp
or
inc
push
mov
cwtl
or
inc
out
push
push
lret
mov
jb
lret
add
mov
mov
pop
or
daa
test
xor
cmpsb
mov
add
adc
dec
insl
lods
sbb
adc
cs
ror
inc
in
and
pop
mov
inc
or
bound
adc
and
lods
pop
pop
xchg
in
xor
xchg
and
inc
xor
js
sahf
lods
addl
test
loopne
mov
dec
xlat
pop
in
fcoms
xchg
push
es
dec
imul
not
std
cltd
loope
mov
adc
outsl
xorl
in
pop
xor
inc
cmp
mov
fucomi
shrl
adc
cli
insl
mov
cli
adc
cmpl
inc
adc
mov
pusha
jmp
xor
dec
and
adc
movsb
iret
mov
ja
adc
sbb
sar
push
fadd
lret
pop
mov
xor
cli
hlt
aad
jae
inc
enter
mov
cmp
gs
fdivrl
mov
imul
out
sbb
loope
inc
push
testl
sub
sbb
mov
addr16
dec
adc
jmp
cmp
sbb
fisttpl
movsl
add
sbb
cmp
mov
add
adc
cld
dec
mov
in
jb
jle
fidivrs
addr16
cs
push
push
dec
inc
xchg
faddl
pusha
jae
pop
or
cmp
add
aam
jae
jg
inc
mov
rclb
mov
fisubrl
sti
add
les
sahf
push
loope
inc
imul
fs
int3
dec
jne
daa
es
mov
push
or
mov
repnz
cmp
cmp
adc
mov
pop
jp
dec
pop
fwait
xchg
int3
imul
lods
jl
and
xchg
and
in
cmp
or
mov
or
jp
mov
xchg
in
sub
lret
mov
mov
stos
out
inc
pop
pop
loopne
bound
fwait
or
push
ficomps
call
inc
inc
mov
data16
lret
aad
sbb
xorb
mov
mov
lret
mov
cmp
cmpsl
xor
xchg
test
mov
mov
outsl
test
ljmp
lds
cmc
faddl
xchg
hlt
mov
arpl
fidivrl
mov
ret
mov
nop
adc
movsl
cwtl
adc
mov
jo
fstps
mov
in
cmp
pop
jo
fcoml
scas
mov
mov
lods
bound
and
dec
xchg
addr16
rcll
mov
push
push
cmp
out
movsb
test
jmp
pushf
jo
push
dec
push
pop
sub
dec
ret
xor
lea
or
dec
mov
and
sub
fidivl
sub
mov
in
lret
aaa
and
mov
add
push
sub
into
sub
jns
adc
inc
pop
fcomps
add
shrl
js
sub
sbb
aad
mov
sti
imul
and
out
jg
fdivl
fdivl
fwait
cmpsb
jae
iret
xchg
inc
mov
xor
icebp
outsl
jg
inc
xchg
scas
jbe
ret
mov
pop
pusha
push
xor
inc
nop
mov
cmpsl
lret
inc
in
xor
or
mov
popf
fistpll
test
movsb
in
shufps
push
pop
shr
push
jo
push
lcall
dec
jo
inc
push
int3
push
add
push
pop
call
scas
mov
adc
jmp
dec
sub
mov
in
jo
mov
add
add
jno
xchg
adc
shl
das
sub
jmp
jae
adc
icebp
pop
insl
xchg
sub
sub
movsl
fidivrs
pusha
scas
fistl
pop
or
push
data16
mov
sbb
inc
idivl
inc
sbb
cltd
cwtl
jl
inc
jmp
mov
lahf
adc
fisubrl
int
mov
add
shlb
popf
jne
mov
jbe
mov
mov
adc
lahf
pop
sbb
inc
xor
fsub
add
push
xor
stc
cli
pushf
cmpsl
dec
sarb
add
out
js
inc
mov
or
push
cmpsl
xchg
fsubp
sub
and
sbb
arpl
dec
mov
subl
add
and
add
or
push
dec
sub
adc
mov
jp
pop
loope
adcl
sub
cmpsb
adc
iret
sbb
xchg
scas
aad
sti
xchg
dec
int3
ret
cmpsb
lahf
mov
sbb
lods
or
mov
test
add
lcall
jecxz
dec
and
fildll
pop
add
mov
repnz
cmp
or
adc
xchg
lods
jmp
jae
xchg
daa
into
pop
insl
xor
insl
mov
inc
lea
nop
jns
mov
sbb
mov
jno
xor
dec
stc
repnz
mov
cmp
inc
pusha
xlat
cmpsl
cmc
sbb
pop
insb
mov
dec
mov
iret
ja
push
mov
jnp
xchg
je
lods
stc
xorb
or
cmp
dec
subl
fdivl
mov
dec
mov
pop
mov
cmp
inc
addb
inc
fdivl
outsb
cmc
xchg
push
cmp
add
dec
adc
in
add
xor
jp
icebp
cmp
icebp
xchg
ds
mov
dec
mov
inc
movsb
jmp
and
out
push
sub
mov
out
cmp
aad
insl
sub
cmp
xchg
shlb
xchg
divb
shll
cwtl
movsb
call
lcall
and
pop
mov
arpl
std
xor
rclb
jae
or
mov
aaa
add
es
or
daa
mov
loope
jb
xchg
call
lret
neg
ret
aas
movl
in
xchg
or
jno
rorb
cmc
and
xchg
pop
adc
fwait
mov
sti
repnz
mov
jg
adc
push
lret
fs
push
jg
inc
movsb
arpl
cmpb
cmpsb
arpl
xor
jl
lods
and
cld
imul
imul
outsb
stc
lret
add
dec
addr16
xchg
inc
addr16
dec
insb
test
jo
loop
call
push
pop
mov
iret
insl
xchg
imul
or
jp
adc
mov
xlat
arpl
loop
into
loop
mov
mov
jmp
dec
std
add
movsb
inc
push
pop
imul
loop
mov
xor
shlb
mov
dec
sub
sti
test
icebp
sbb
roll
mov
cmpb
xchg
jo
repnz
jnp
int3
addr16
xlat
mov
jno
es
addr16
and
and
push
lods
gs
cltd
in
xchg
pusha
iret
xchg
inc
lock
test
in
pop
aam
jnp
int3
das
pop
mov
out
shl
cmp
adc
pop
add
xor
or
ljmp
jmp
imul
inc
push
cmpsl
insl
cmp
leave
inc
repz
rol
push
inc
push
lret
mov
nop
xchg
add
push
and
mov
subl
xor
mov
adc
roll
xlat
add
aas
popa
rcr
ljmp
xor
das
mov
call
adc
icebp
mov
dec
repz
enter
lcall
mov
sub
int
xchg
jns
cmp
je
nop
mov
repnz
pop
cmpsb
aad
mov
in
repnz
scas
and
das
out
push
mov
or
push
add
xor
test
jne
pusha
pop
rcrb
dec
test
or
mov
ja
jb
adc
vprold
mov
iret
add
push
or
jns
test
mov
sub
icebp
sarb
xchg
inc
clc
and
sub
aas
int3
cmpsb
vmovaps
mov
hlt
mov
cmp
xor
out
out
mov
addr16
add
push
jle
pop
jnp
add
insl
jle
outsb
lods
mov
dec
mov
and
insb
es
dec
bound
outsl
xor
out
rcr
fldcw
outsl
xor
hlt
mov
and
inc
sub
and
fisubl
test
int
inc
cmp
int3
dec
test
jp
incl
jne
mov
ss
repnz
iret
fsubl
jge
out
jno
push
imul
sbb
xor
iret
cmp
dec
clc
insl
dec
sub
push
and
push
mov
cmc
out
inc
push
cmp
sbb
mov
icebp
xor
xchg
das
daa
and
lcall
xchg
dec
js
push
xchg
addl
ret
inc
sub
filds
dec
jg
sbb
push
fnsave
ja
cld
out
and
pop
clc
ljmp
cltd
sbb
jb
mov
call
mov
jns
dec
push
sbb
add
add
or
lret
adc
shlb
and
stos
dec
push
mov
lea
jb
xor
mov
sub
inc
and
push
sahf
fimull
in
sub
jge
mov
cmpsl
and
lret
xchg
lea
jl
shlb
inc
pop
cwtl
out
lods
fwait
or
call
mov
test
and
pusha
clc
sti
mov
lahf
add
sbb
aaa
cltd
dec
icebp
fdiv
and
jae
leave
cmpsl
nop
popf
sbb
jge
jne
jge
xor
cmp
sub
or
pop
cmc
adc
shl
rep
jns
loop
cmp
mov
jne
or
mov
xor
iret
cmpl
cmp
push
push
cmpsb
f2xm1
mov
mov
outsb
jge
sarl
stos
movsl
dec
cmp
and
add
mov
push
push
xchg
addb
scas
sbb
scas
dec
lods
xor
jb
mov
jnp
add
ds
pop
movsl
mov
sahf
push
or
dec
jbe
mov
lods
sub
xchg
xor
add
jb
cmc
dec
push
jne
lock
lds
dec
arpl
xchg
jne
and
ret
pusha
adc
dec
cmpsl
test
cld
jge
or
pop
cmc
xor
repnz
shl
cmp
xor
xor
push
push
sbb
adc
ds
xchg
fsubl
int
test
jne
xor
cmp
movb
and
repnz
jnp
adc
add
push
or
cmp
lock
mov
mov
ret
adc
push
scas
in
int3
aaa
out
hlt
fldt
push
addl
clc
mov
and
sbb
or
adc
aaa
int3
in
sbbl
push
xchg
mov
mov
lock
pop
jnp
lods
sub
and
out
sub
mov
sarl
aas
jo
loopne
and
imul
cltd
mov
mov
xchg
stc
iret
cltd
testb
neg
ja
in
int3
stc
scas
insl
adc
daa
mov
mov
gs
mov
mul
lea
xchg
or
add
dec
fwait
cmp
and
dec
cli
pop
mov
mov
lods
push
movsl
pop
dec
jns
in
aam
add
dec
cmpb
or
test
pusha
in
ljmp
pop
in
inc
add
mov
push
fidivl
pusha
xchg
mov
lret
mov
cmp
xchg
cwtl
cmp
xor
lods
jno
aad
mov
loop
fucomp
lods
mov
pop
movsl
jns
fcoms
adc
incl
and
or
mov
mov
push
in
cmp
jae
and
cmp
pand
cmp
sbb
push
fs
mov
cmp
pop
cmp
jl
imul
insl
mov
sti
add
jl
jg
mov
cltd
fistpll
call
inc
lods
cmp
dec
addl
in
add
mov
xchg
pop
adc
ficompl
sarb
ds
cwtl
cld
clc
fnstcw
sub
push
roll
cmp
dec
out
subb
lret
negb
stc
aad
push
jne
or
andl
lcall
lcall
pop
sub
dec
popl
and
xchg
loopne
ret
mov
inc
mov
mov
das
mov
mov
push
insl
inc
pop
pop
inc
in
xor
jecxz
insb
jg
cltd
mov
stos
sub
imul
jg
rorb
jge
pop
leave
fcmovb
das
xor
out
mov
adc
rol
mov
hlt
xchg
dec
repz
add
aaa
mov
jnp
lods
jno
test
mov
test
or
addb
loop
leave
pop
inc
ret
or
and
outsb
xchg
xor
push
mov
subb
loopne
fwait
ja
loope
jmp
pop
std
or
and
je
mov
rorl
or
cltd
mov
adc
lahf
add
add
or
or
fnsave
faddl
mov
mov
and
popf
add
out
js
lcall
push
mov
ss
in
jmp
int3
or
jecxz
or
push
shl
out
adc
cmp
insl
mov
adcb
mov
pop
mov
jb
inc
ja
inc
fs
data16
jb
cli
push
das
sbb
aas
jne
in
jmp
or
pop
scas
dec
insb
int3
add
dec
sub
jmp
mov
sbb
pop
adc
lcall
mov
repz
arpl
std
loop
aam
pop
hlt
jecxz
hlt
imul
sub
out
pusha
push
dec
faddp
xchg
das
sub
iret
push
lret
sub
mov
jae
push
and
cmp
aaa
sub
pusha
cmp
sbb
pop
in
aas
mov
test
in
jmp
mov
shlb
imul
mov
data16
mov
xor
dec
inc
std
dec
mov
inc
sbb
push
fstpl
cmp
ljmp
mov
dec
sarb
xchg
or
pop
or
mov
lcall
inc
and
sbb
xchg
sub
mov
in
cld
insb
mov
lret
xchg
cs
test
mov
jmp
dec
andb
dec
sbb
sbb
add
dec
popa
lods
call
sarl
sar
shlb
add
repz
or
dec
out
popa
pop
dec
jbe
das
sub
or
xchg
cltd
sarl
xchg
pop
jl
mov
lahf
leave
xchg
jns
mov
roll
jno
cltd
inc
test
dec
jp
ds
addr16
jno
mov
add
ja
jne
pop
pop
out
inc
cmp
imul
shrl
enter
or
rorl
emms
hlt
std
xchg
test
stos
out
repz
not
int
jp
hlt
sub
mov
sbb
jae
je
cmp
add
push
xor
mov
xor
pop
or
jns
dec
inc
and
mov
pusha
cmp
mov
and
or
ss
jb
shr
mov
int3
mov
sub
sbb
jae
sub
fisttps
xchg
dec
sbb
mov
in
aad
fisttpll
adc
outsl
pop
enter
stc
test
push
pop
out
imul
mov
sbb
push
aam
popa
push
inc
test
mov
cmp
push
or
cmc
jne
and
sbb
push
lock
or
mov
jmp
inc
xor
cmp
addr16
in
subl
std
aas
sti
daa
fadds
lods
push
aam
jae
ret
pusha
popf
add
inc
arpl
je
and
mov
xchg
cmp
out
hlt
loope
jmp
mov
int
fisubrs
nop
lret
ja
jno
idivl
lods
mov
pop
push
int
adc
xchg
and
mov
ror
inc
dec
popa
and
imul
fldenv
and
add
cmp
xor
repnz
dec
pop
push
adc
push
leave
xchg
cmp
adc
mov
xor
pushf
cmp
add
sbb
hlt
mov
inc
jecxz
inc
cwtl
pop
cltd
call
test
decl
inc
repz
loop
fwait
sbb
adc
aaa
mov
lcall
xchg
jns
inc
xchg
inc
cmp
and
mov
push
cs
gs
xor
aad
jmp
das
mov
adc
adc
cltd
and
dec
jg
lret
dec
lret
ja
outsl
cs
fs
sti
into
sar
mov
mov
jne
dec
or
pop
jae
push
inc
sub
cmpsb
sub
pop
cld
sahf
add
lahf
call
outsb
in
xor
mov
mov
sbb
sti
add
test
imul
add
xor
sub
ja
stos
cmpl
mov
dec
int3
orl
sbb
xlat
push
lcall
xchg
xchg
loopne
add
ret
or
or
aas
xor
cmp
shlb
cwtl
pushl
lock
mov
bound
jle
fistl
xchg
sbb
jbe
fcompl
xchg
inc
iret
xlat
lods
jns
stos
mov
mov
in
sub
imul
adc
inc
and
mov
iret
jae
sahf
adc
fisttps
lock
subb
fsubrs
mov
stos
enter
nop
jb
cmovg
clc
jg
insb
aas
push
pop
lahf
lds
xor
xchg
dec
es
cmp
xlat
jne
in
xor
into
dec
outsl
movsl
insl
jmp
fimuls
jl
mov
jo
pop
icebp
mov
xlat
les
jno
xor
cmp
fwait
insl
dec
stos
in
xchg
mov
insl
inc
jne
adc
mov
out
jmp
push
js,pn
mov
pushf
dec
add
pop
xchg
mov
cmp
xchg
lea
test
je
pusha
aas
loope
jnp
add
sarb
pop
add
xchg
pop
call
mov
pmulhw
clc
scas
push
fwait
mov
loopne
enter
nop
or
or
jp
push
movsl
insb
xor
loop
cmp
sbb
aam
mov
je
int
sub
roll
xchg
sub
add
jl
sti
xchg
mov
inc
cltd
jne
or
xlat
or
jg
push
push
or
and
or
addr16
sahf
test
lret
repnz
rcrl
sbb
jne
pusha
lahf
xlat
adc
pop
daa
ja
sets
dec
mov
jge
xchg
testl
mov
mov
mov
mov
dec
lret
push
into
jb
sub
call
sahf
mov
cmp
insl
fidivs
out
int3
stc
xor
lods
iret
fiadds
xchg
jl
int3
pop
fsubrs
cs
jno
inc
dec
aaa
shrl
jb
pop
out
inc
and
lret
into
enter
test
xor
add
inc
pushf
sbb
push
out
lret
mov
rorl
insb
push
push
sub
inc
loopne
repnz
loopne
mov
and
xor
xchg
out
lods
and
stos
rcl
mov
sub
outsl
push
add
add
mov
stos
loop
mov
outsb
xlat
icebp
repnz
sbb
push
mov
mov
lcall
lcall
les
mov
mov
and
ficoms
stos
movsb
mov
enter
mov
add
xchg
push
mov
mov
xor
sbb
and
cltd
clc
jnp
fldl
add
out
rcrl
ds
push
fsubs
scas
mov
jo
sti
lret
aad
int
push
dec
js
mov
sub
pop
xor
int
movsl
fdivs
je
xor
adc
rolb
xlat
sub
mov
jne
xor
or
ror
inc
hlt
call
arpl
cmpb
adc
test
xor
loope
jbe
out
or
insb
dec
mov
add
ficoml
push
cmpl
dec
push
xor
pop
mov
stc
leave
mov
cmp
adc
xor
pop
pop
fidivs
call
ds
lahf
mov
ljmp
mov
inc
pop
mov
mulb
or
adc
inc
aad
into
xor
inc
rcl
mov
cmp
push
mov
fldl
mov
iret
scas
dec
setb
add
inc
inc
in
add
push
mov
mov
mov
dec
outsb
int
add
and
pushf
push
jb
dec
sahf
dec
jecxz
movsl
pop
jecxz
in
outsl
xchg
inc
xchg
adc
icebp
xlat
jae
xchg
sub
mov
or
sub
xor
ret
lods
sbb
fmull
sbb
enter
adcl
cmp
sub
stc
mov
in
shrl
ds
ret
ljmp
fnsetpm(287
sub
flds
dec
mov
xor
sbb
mov
clc
jne
push
and
adc
out
inc
mov
leave
add
in
pop
leave
mov
rclb
popa
push
or
movsl
repnz
cmp
sbb
jge
jmp
mov
lcall
outsl
lods
enter
sbb
clc
fs
push
add
lods
int3
inc
xor
aas
ret
dec
shrl
gs
push
jg
cmp
mov
int3
cmp
mov
sub
lock
daa
je
pop
push
push
jmp
xor
outsl
hlt
push
sub
mov
stos
jae
lret
movsl
jmp
mov
lea
ret
mov
fcmovnb
mov
jg
outsb
insl
je
dec
test
ror
call
push
lahf
mov
movsl
add
jb
scas
fsubs
js
cmpb
aas
fmulp
jle
mov
dec
sbb
lds
mov
fsts
xchg
mov
test
dec
ficoms
test
mov
xchg
inc
mov
inc
add
ss
arpl
cmpsl
or
sarb
jbe
cwtl
ss
popw
pop
scas
inc
in
pop
jl
loope
push
xchg
mov
mov
js
push
and
mov
mov
fsubl
ds
adc
int3
jecxz
add
pop
mov
into
call
outsb
ds
es
aam
mov
lret
adc
xor
ss
mov
push
ret
divl
cmp
xchg
add
push
nop
ds
inc
insl
or
hlt
pop
lret
cmp
push
mov
sub
xchg
dec
das
ss
fwait
call
push
xor
push
leave
into
dec
adc
test
lock
sarb
pop
call
push
out
inc
das
hlt
lret
xor
in
ficoml
inc
fldenv
mov
cmp
js
aam
pop
pop
xlat
xlat
repnz
aaa
inc
hlt
sbb
cli
aas
push
jmp
lods
jge
inc
sbb
call
sub
sub
jb
and
arpl
pop
sbb
shlb
jg
mov
inc
fdivr
add
pop
jmp
adcl
out
jle
mov
mov
shr
cmpsl
loop
mov
push
imul
stos
push
cmp
arpl
xchg
lods
xlat
xchg
push
repz
sub
cld
xor
push
cwtl
inc
ret
into
icebp
insl
jns
scas
xchg
dec
lahf
sahf
mov
pop
insb
inc
push
daa
sub
adc
bound
mov
jg
iret
fnstenv
xchg
xor
popa
or
xchg
movsb
cmc
loopne
inc
cmp
test
sbb
or
test
fistpll
aad
ljmp
mov
imul
outsl
inc
or
fs
or
jl
add
cmp
fwait
mov
mov
pop
jae
mov
test
jge
jnp
icebp
pop
cwtl
pop
rorb
lock
xchg
fwait
adc
mov
inc
ret
mov
mov
pop
cmpsl
push
pop
add
add
imul
lcall
xchg
addr16
add
rcl
pop
hlt
and
cs
andl
stc
cmp
outsb
cmpsb
or
test
lahf
scas
push
je
and
in
jp
xchg
xchg
jg
call
add
xor
push
xor
ret
sub
pop
cmp
js
shrb
mov
dec
inc
jbe
or
sbb
pandn
cmp
mov
or
loope
ret
add
int
inc
mov
sub
mov
lahf
dec
fstp
sub
mov
jmp
dec
lcall
aad
add
sbb
jl
push
leave
stos
shrb
aad
inc
repz
stos
mov
and
mov
fildl
loope
test
inc
jl
xchg
fstpt
test
popa
mov
lods
pop
mov
jl
pop
mov
mov
mov
aam
rcrb
leave
fcomi
cld
repnz
xor
in
jo
pop
dec
testb
adc
int3
imul
mov
dec
in
dec
icebp
not
pushf
adc
mov
lods
arpl
test
or
push
lods
and
out
bound
mov
es
cli
outsl
stos
sbb
and
jmp
lret
mov
xchg
movsl
jp
bound
ficoms
test
mov
push
push
or
adc
loopne
push
ljmp
clc
mov
xor
fistpll
sub
push
lret
jo
insl
add
aas
sub
lret
outsb
ss
filds
jle
arpl
push
cmpsb
add
popa
out
mov
sahf
mov
sub
aam
outsb
packsswb
ss
mov
mov
enter
stos
cwtl
jb
sub
gs
xor
icebp
mov
push
rcrb
inc
xchg
push
mov
cmpsb
scas
test
int
xchg
cmpsb
mov
or
movb
shrb
outsl
mov
inc
push
bound
cli
out
dec
adcl
jmp
pop
sahf
xchg
data16
mov
cmp
push
jp
in
lock
imul
subb
pusha
jecxz
mov
std
cmpl
stos
pop
in
mov
push
lret
in
or
push
les
fs
les
lret
daa
aas
ror
insb
pop
pop
xchg
aad
pop
repz
ret
popf
adc
jg
add
out
repz
adc
dec
imul
fs
fmuls
ljmp
sub
cmp
jl
mov
dec
and
popa
rolb
add
xchg
xchg
sbb
movhps
les
adc
leave
push
aam
insl
jle
int
xchg
rcl
pop
bound
repnz
int
leave
mov
xor
lock
sub
cmp
mov
inc
aaa
pop
int3
push
cmp
int3
in
jb
js
push
mov
sbb
pushf
inc
ds
xchg
mov
jg
dec
add
dec
loopne
inc
mov
fprem
ljmp
out
xor
xor
inc
test
inc
arpl
ljmp
aad
push
add
lret
pop
pop
push
inc
pop
push
mov
stc
adc
mov
jge
test
mov
gs
xchg
xlat
mov
fisttps
arpl
div
popa
mov
cmp
stc
jecxz
sub
jle
xor
aam
pop
jle
xchg
loopne
test
insl
xor
mov
ret
outsl
ficompl
xchg
xlat
jb
jmp
mov
enter
sbb
mov
movsl
jp
inc
lea
inc
iret
xchg
dec
mov
call
pop
mov
int
jb
iret
adc
inc
sbb
mov
mov
data16
sub
add
lods
push
test
mov
fbstp
mov
xchg
stc
xchg
ror
jecxz
lahf
pop
bound
jbe
cs
aaa
xchg
insb
leave
loopne
scas
in
imul
mov
scas
cmp
testl
fldenv
sti
xchg
inc
and
mull
mov
out
sbb
mov
hlt
or
int
push
or
mov
sub
push
data16
and
adc
sub
pop
jle
pop
arpl
jle
mull
adc
push
into
out
jp
sub
cli
ss
repz
cmp
jp
out
jge
add
incl
imul
sbb
arpl
lea
push
jno
lahf
imul
push
out
mov
xchg
xchg
or
rcl
imul
pop
inc
sub
adc
mov
je
imul
xchg
mov
cmpsl
pmullw
popf
aam
mov
push
xor
sbb
mov
lret
sbb
add
sbb
pop
jecxz
xchg
ret
insb
sub
pop
repnz
sbb
push
xor
out
xlat
push
push
mov
int
fwait
cmp
adc
insl
mov
scas
mov
add
ss
lret
xchg
and
jge
outsl
rorb
popa
push
mov
sub
in
lahf
dec
push
lret
out
and
fidivl
hlt
inc
adc
push
imul
cmc
push
lea
popa
orps
cmpsb
cld
or
pop
push
loope
jns
ret
enter
sub
ljmp
push
cld
and
mov
clc
add
sub
jle
shl
into
out
mov
dec
fs
sbb
imul
dec
xchg
mov
jecxz
cs
push
repnz
loop
mov
push
popa
loope
outsl
pop
and
mov
or
and
xchg
fbld
jmp
in
xor
dec
imul
ret
cmp
cmpb
mov
rcll
add
and
cmp
sti
cmp
loope
pop
jb
js
in
jne
lods
mov
or
sarl
ret
jns
jbe
rcrl
test
lods
xor
inc
aas
push
scas
paddsw
jbe
rcll
lret
icebp
or
pop
les
orl
push
les
outsb
out
jecxz
push
mov
decl
fiadds
jns
xor
xor
add
mov
adc
ret
inc
push
mov
shlb
cli
sbb
fistl
daa
aam
int
fistps
mov
or
mov
jge
lahf
aad
mov
xor
xor
mov
das
push
pop
xchg
cmp
aas
rclb
sub
mov
push
adc
mov
stos
in
adc
push
imul
mov
imul
dec
inc
push
jns
iret
push
aaa
sub
sti
cmpsl
fwait
movsl
jle
pushf
pop
xchg
addr16
mov
jle
and
xchg
or
stc
insb
pop
inc
push
adc
adc
dec
sbb
ret
aad
out
out
ret
push
adcb
arpl
jge
cmp
pop
nop
outsb
mov
ljmp
cmp
mov
cltd
xlat
leave
dec
add
mov
pop
rcl
popa
jecxz
pop
xlat
inc
or
nop
sbb
repz
je
popa
dec
jbe
into
es
adc
dec
xchg
jg
daa
inc
lock
sahf
fdivrl
loop
in
mov
cmc
jp
sbb
adc
out
iret
in
push
mov
stos
lds
xchg
jge
dec
js
dec
jno
mov
adc
das
fstpt
hlt
push
sub
fsts
pop
mov
add
inc
pushf
push
into
mov
mov
xor
push
popa
or
inc
insl
movsl
cld
mov
jno
es
jno
mov
sbb
push
dec
inc
push
cmp
ss
sub
push
out
in
push
pop
cmp
out
add
pushf
pop
ret
or
jae
lods
shrb
mov
mov
out
mov
popf
loopne
fsub
mov
rcrb
mov
inc
sbb
fildl
xchg
jb
xchg
or
pop
pop
sbb
stc
jbe
outsl
mov
imul
ret
ljmp
pusha
push
or
mov
mov
call
imul
fidivrl
xor
repnz
jmp
pop
or
cmpsb
lods
stc
xchg
fstl
cmp
lahf
mov
std
xor
mov
mov
push
fwait
and
lahf
sbb
pop
fstps
test
fmul
outsl
dec
xchg
push
xor
filds
xlat
dec
loope
fcomi
subb
insb
dec
xor
daa
iret
or
mov
lock
cltd
lret
sarl
scas
xor
insl
arpl
or
push
lods
mov
and
fbld
cmp
xchg
jge
xchg
enter
rorb
cmp
cmp
cmp
and
add
or
mov
aam
sbb
int
aas
fbstp
data16
dec
mov
mov
add
cs
out
nop
lret
nop
iret
xchg
xchg
sub
xchg
call
imulb
inc
int3
dec
xor
jns
push
push
aam
inc
lcall
stos
aad
in
fstps
clc
scas
xchg
iret
dec
ss
loop
cmp
ret
addr16
pushf
arpl
out
out
mov
jne
ljmp
je
js
push
lret
sub
imul
scas
mov
xchg
lds
fbld
lods
mov
jmp
mov
push
push
mov
loope
scas
neg
pop
push
mov
lret
test
loop
adc
data16
in
loope
sahf
push
sbb
mov
lret
sub
loop
aas
xchg
mulb
mov
sub
adc
push
xor
pop
int3
xchg
mov
dec
mov
jo
repnz
rolb
mov
xchg
mov
in
pop
scas
daa
test
sbb
dec
out
sbb
js
or
not
jmp
mov
nop
test
adc
adc
jae
sbb
rcrl
std
cmp
fstpt
mov
aam
nop
pushf
mov
or
loopne
jmp
sarl
cmp
mov
je
dec
repz
jmp
or
add
mov
and
bound
shll
mov
or
mov
xor
cmpsl
mov
lcall
mov
mov
outsb
cmpsl
addb
cmpsb
or
xchg
fsubrl
out
inc
xor
lea
mov
cwtl
test
and
cmp
push
xor
push
jae
xchg
xchg
testb
aam
aas
dec
dec
xor
iret
pop
xor
inc
jnp
imul
fidivrs
mov
xchg
rol
test
and
xor
xor
jae
js
jg
clc
iret
aad
scas
or
aas
roll
bound
push
adc
andl
leave
mov
sub
icebp
or
xchg
mov
in
mov
adc
aaa
mov
push
jbe
flds
pop
jg
cmp
rorl
push
loopne
cmpsl
and
lret
out
sub
dec
dec
add
mov
xchg
xchg
mov
js
push
adc
mov
std
sahf
testb
out
and
push
cmp
lret
js
ficomps
jl
inc
push
jnp
pop
push
out
inc
mov
jnp
adc
and
push
aas
mov
jg
pop
lahf
jg
jno
adc
mov
iret
cltd
mov
into
sub
push
mov
bound
movsb
ljmp
add
and
mov
sbb
call
jns
dec
inc
add
mov
mov
pop
push
shrb
bound
jmp
push
negl
xor
sbb
or
popf
or
mov
jno
dec
jmp
mov
cmpsb
xchg
es
sub
jle
nop
lods
or
ds
push
lds
popf
lods
in
imul
scas
pop
adc
and
sub
mov
xchg
cmpsb
and
mov
pop
and
mov
xor
mov
ror
cmp
pop
jp
pop
cmp
pop
arpl
sbb
insl
mov
stc
lret
inc
add
pop
inc
test
xchg
mov
mov
sbb
cmp
mov
stc
mov
imul
leave
dec
adc
or
jno
push
xor
dec
daa
into
insb
jb
dec
or
int
jb
daa
subb
jge
and
sbbb
in
test
inc
stos
mov
arpl
push
pop
in
incl
push
mov
xor
enter
ss
mov
xchg
pop
arpl
lret
in
je
aas
dec
inc
xchg
pop
mov
adc
insl
jg
mov
pop
inc
or
xlat
inc
push
xchg
das
add
js
xor
xchg
js
cwtl
clc
and
js
mov
mov
cmp
inc
enter
jmp
into
mov
xlat
adc
sub
ss
loop
sahf
fwait
xlat
sub
test
stos
cmpsl
push
push
aaa
roll
and
adc
lret
rol
inc
mov
and
test
or
sbb
mov
loopne
outsl
cld
or
shll
mov
sub
sarb
mov
imul
push
pusha
lahf
inc
cmp
cmp
or
pop
mov
bound
pop
jle
aaa
sub
xchg
dec
fsts
pop
adc
pusha
inc
inc
in
sbb
jp
mov
xchg
or
xchg
fpatan
lahf
sub
in
das
pop
cmpsl
fs
xchg
or
jg
scas
jg
cmp
cmc
cltd
jne
sbb
jo
sbb
int
sarl
add
and
in
cld
psubsw
dec
movsb
mov
ss
xchg
xor
ficoms
fwait
rorl
pop
je
mov
or
jecxz
mov
mov
pop
lahf
lea
and
dec
pop
mov
xchg
adc
inc
push
xchg
xchg
repnz
mov
push
push
testl
cmp
leave
mov
jnp
jbe
add
fistpll
pop
sub
loope
dec
sbb
lea
sbb
push
sbb
ret
cld
data16
mov
in
push
cmpsb
dec
xor
xchg
push
xchg
test
mov
push
pop
hlt
pop
jbe
xor
mov
mov
fmuls
pop
loop
stc
mov
adc
test
and
jbe
in
cmpsb
add
xor
push
mov
mov
xor
shlb
and
imul
add
or
mov
scas
clc
faddl
cmp
push
or
or
data16
xlat
movsb
inc
xor
sub
adc
pushf
cmpsb
test
cmpsl
es
in
fstpt
imul
dec
incl
enter
mov
jg
lret
sbb
jb
es
inc
push
imul
outsb
out
js
and
sarb
addl
or
idivl
call
pop
dec
jp
jbe
pop
xor
dec
sbb
cmpsb
xor
lcall
sbb
xor
sbb
pop
or
sub
push
mov
sbb
jp
jno
pop
lock
inc
cltd
sub
inc
and
sub
mov
xor
aas
test
xchg
dec
pop
fsubl
mov
mov
popa
jecxz
outsl
mov
jns
inc
fdivs
sub
add
icebp
pop
mov
mov
or
aad
sub
pushf
stos
ja
mov
and
push
pop
xchg
push
and
ss
jnp
aam
and
cmp
cwtl
test
push
jb
fnsave
rcrb
mov
lret
jae
adc
fisubrs
das
jno
jg,pt
inc
icebp
sbb
sarb
jp
and
cs
and
loope
imul
and
inc
sbb
xor
xor
mov
mov
lods
testb
je
insl
aas
dec
mov
les
dec
add
ss
loop
sub
lods
mov
mov
dec
xlat
clc
inc
aam
sub
adc
das
and
je
fwait
add
roll
add
cmp
xchg
dec
dec
ret
mov
test
push
fstl
dec
daa
sbb
out
xlat
add
push
sti
jle
push
adc
nop
lds
cmpsl
rol
xchg
mov
xchg
xchg
stos
adc
sub
das
push
push
cmp
bound
inc
lcall
pop
call
jne
fwait
pop
shll
mov
loope
inc
jmp
cmc
roll
dec
mov
insb
cmp
rcll
lret
dec
xchg
xor
fdivrp
sbb
das
stos
mov
js
jne
stc
cmp
iret
xor
aad
push
lret
arpl
dec
sbb
inc
xchg
or
fnstcw
pop
cmp
pop
push
dec
sub
lock
aas
jmp
mov
nop
in
mov
lcall
jle
shl
adc
mov
outsb
mov
push
jb
push
mov
sahf
pop
das
loop
ljmp
push
pop
adc
test
scas
and
xor
and
imul
mov
add
imul
pop
ljmp
dec
jo
fsubrl
daa
inc
fnstsw
scas
test
cmp
pop
add
sub
call
xor
pop
jmp
test
jmp
cmp
dec
testl
into
cmc
js
sub
clc
test
xor
mov
xchg
or
loop
cmc
std
xchg
jle
mov
ret
call
popf
push
out
cld
leave
ficompl
jp
sbb
cmp
fisubrl
dec
sti
cmp
adc
push
jb
push
xor
xchg
sub
sbb
xlat
mov
or
inc
les
sbb
cld
adc
daa
mov
mov
movsb
adc
push
test
pop
or
jp
fisttpl
jle
jne
xor
lret
push
xor
imull
repnz
jl
mov
loope
mov
xor
xchg
sub
dec
cwtl
push
in
cwtl
pop
push
leave
in
ds
inc
fdivl
mov
push
jae
loop
es
and
mov
negb
mov
xor
xor
inc
or
sbb
rcrb
movsl
dec
mov
xchg
pushf
add
clc
sbb
push
bound
dec
arpl
sbb
sbb
xor
adc
add
outsl
sbb
or
ret
cld
mov
repnz
popf
stc
and
daa
insb
aas
cltd
jecxz
dec
mov
not
inc
sbb
xchg
push
outsl
loopne
dec
push
jb
sbb
cmpsl
popa
scas
es
adc
or
sub
xchg
pop
aaa
je
pop
mov
push
mov
aad
sub
shlb
sbb
xor
cmp
ficompl
loopne
js
loopne
fbld
les
addps
mov
jbe
icebp
jle
mov
enter
mov
adc
iret
sub
cmp
push
pop
ficomps
addl
fstpt
lds
lods
sub
push
stos
mov
stos
arpl
lods
mov
mov
lods
sbb
push
arpl
push
outsb
jnp
insl
aad
test
cmpsl
pop
pusha
xor
lea
pop
sub
in
into
test
jno
sar
aaa
daa
push
xor
pushl
out
sbbl
jp
int3
icebp
cmp
pop
add
cmp
lea
cltd
mov
mov
bound
dec
and
adc
adc
dec
mov
mov
xchg
xchg
add
and
sub
ljmp
mov
jg
jae
sbb
shl
cli
outsl
shlb
jns
and
mov
les
pop
sub
lock
aam
pop
loopne
xchg
inc
xor
popf
movsl
test
ss
insb
mov
dec
pushf
test
push
adc
fisubrs
test
ret
rclb
xchg
pop
adc
loopne
dec
jp
clc
cli
cli
inc
clc
adc
ljmp
mov
popf
aam
xor
fiaddl
or
adc
inc
aad
bound
mov
push
pop
dec
lcall
dec
xchg
pop
addl
cli
sub
mov
pop
mov
sbb
xchg
shlb
or
inc
or
mov
cmc
sbb
and
xchg
rol
cmpl
cld
std
mov
jp
push
test
pop
aam
jl
xchg
out
rorb
stc
fmull
imul
cmp
cmp
add
or
and
pusha
aam
sbb
push
mov
push
loop
cwtl
mov
daa
lds
fwait
das
loope
out
add
mov
lcall
lods
cmp
mov
faddl
insl
mov
loop
mov
fwait
es
subl
mov
jp
xchg
sbb
mov
xor
shrb
xchg
or
fucom
jae
push
jmp
cmp
inc
xorl
pop
xor
jns
inc
daa
cltd
cmp
cmpsl
call
jmp
mov
sbb
shll
ds
sbb
out
xor
push
jns
insl
sub
cld
adc
sti
cmpsl
or
xor
push
lea
in
js
sub
jecxz
popa
lahf
pop
pop
daa
fwait
ret
insb
rcrl
lods
fistpl
stos
enter
sub
test
je
aas
jae
call
imul
sub
jno
es
mov
pop
mov
cli
pop
mov
inc
cmp
lcall
adc
cmp
ja
cmp
ja
mov
pop
test
es
loope
jns
cwtl
cmc
inc
mov
jbe
sbb
sbb
ja
je
rcrb
les
popf
or
xor
jecxz
push
shll
xchg
and
imul
leave
lahf
push
dec
pop
sub
loopne
sti
mov
scas
lcall
test
pop
cmpsl
or
pop
int
adc
mov
mov
mov
std
dec
or
test
loope
test
sub
pop
dec
ds
pop
push
sbb
in
push
leave
or
mov
into
call
aad
movsl
xlat
movsb
inc
push
popa
popa
divb
xchg
xor
pop
adc
ret
aas
test
cmp
add
and
xlat
pop
ficoms
sub
out
jae
ja
ret
in
pop
pushf
or
or
lock
push
dec
cmp
pop
les
cmp
iret
movsb
rcrl
scas
jb
addl
shll
shll
je
push
mov
mov
inc
jecxz
adc
lock
push
aam
dec
stos
mov
pop
or
sub
nop
stc
ja
scas
aam
inc
inc
push
stc
rolb
push
push
loopne
add
xor
lahf
cmp
jl
fmulp
mov
out
insl
in
movsl
jp
jb
ljmp
notb
test
add
inc
xlat
fdivl
sub
cmpsb
shlb
xchg
fmul
push
lcall
out
xor
pusha
cmp
gs
jmp
subb
dec
repnz
add
sti
pop
xchg
lret
push
push
add
cli
je
jge
lret
or
pop
int3
test
mov
mov
mov
pop
sub
sub
stc
push
lds
sbb
aam
add
pushf
ds
cmpsb
jp
loop
cs
mov
inc
jmp
jmp
mov
or
xlat
imul
pop
mov
xchg
std
mov
sti
adc
outsl
mov
subl
mov
inc
fdivrl
cmp
pop
mov
adc
add
iret
sbb
sbb
xchg
and
dec
mov
loope
stos
sub
lcall
cmp
in
push
idivl
and
mov
inc
rcrb
loope
filds
icebp
fwait
xor
movsb
js
push
cmpsl
loop
sbb
sub
jno
adc
jmp
jmp
add
sbb
sbb
and
bound
shrb
mov
pop
inc
mov
loope
jg
mov
shrl
ficoml
jne
shrb
int3
rol
xchg
sti
xchg
cmp
inc
mov
pop
notb
dec
xchg
gs
jg
xchg
std
test
inc
mov
lcall
inc
xchg
mov
mov
jne
subb
stc
add
movsl
add
add
inc
shlb
mov
add
mov
outsb
insb
ficomps
fcoml
inc
bound
test
adc
stc
mov
aas
leave
and
adc
repz
push
adc
or
out
xchg
ljmp
insl
rorb
push
scas
aam
fcmovnu
mov
lret
mull
cmp
mov
imul
lea
xor
movsb
jecxz
js
std
mov
aas
jmp
in
cmp
add
mov
aaa
int3
in
jl
jmp
scas
nop
fs
add
and
daa
sbb
adc
std
into
in
lods
adc
mov
cmp
pop
aas
mov
fildl
je
sub
insl
push
mov
adc
lods
sbb
jmp
stos
push
daa
inc
push
dec
dec
dec
insb
push
andl
push
leave
rolb
insb
cltd
jbe
xor
push
pop
xor
sub
lock
insl
jb
jle,pn
pop
movsb
rep
jecxz
mov
pop
xor
sbb
cmp
ds
cmp
sbb
scas
push
lea
aad
sub
push
repnz
js
test
inc
jne
mov
int3
push
out
push
arpl
kmovb
in
inc
imul
cmpsl
addr16
or
cwtl
les
nop
add
gs
clc
mov
adc
add
arpl
lods
lock
hlt
inc
loopne
mov
out
ss
nop
xorl
test
xchg
lret
sub
mov
ret
pop
loope
ja
xor
and
pop
pop
pop
cmc
in
testl
fwait
das
fwait
nop
pop
scas
fstpt
dec
cmp
pop
inc
xlat
mov
inc
xor
subl
rorl
cmp
pop
cmp
lock
inc
sub
mov
xchg
std
lret
push
lods
aad
in
xchg
push
mov
les
xchg
xor
or
lds
mov
mov
ds
repnz
ds
sti
push
into
jae
stos
push
add
fadds
ret
xchg
xlat
movl
leave
mov
adc
inc
add
or
xor
cmpsl
and
add
imul
test
pop
jb
repz
sbb
mov
mov
mov
fstpl
mov
adc
jnp
insb
cmp
fstps
sarl
and
outsb
add
and
add
and
test
scas
adc
scas
ds
xchg
adc
xchg
and
aas
xor
popa
decl
outsb
clc
popa
cld
jns,pt
sbb
pop
aam
and
ja
int3
mov
pop
sarl
jg
out
xchg
dec
push
ret
imul
je
scas
jecxz
ja
jne
cmpsl
xchg
out
test
jb
cmp
test
xchg
xor
cltd
sub
xor
xlat
popf
push
mov
push
fistl
sub
fnstsw
and
lock
fisttps
popf
sub
mov
out
and
jecxz
out
pop
dec
int
or
setl
mov
lsl
sub
fsubl
mov
sarb
int3
je
in
sub
loope
imull
divl
out
and
mov
or
aam
iret
cmpsl
dec
lods
inc
jno
fidivrl
fisttpl
stc
fldl
fisubl
pusha
xorb
lods
cmpsb
pop
push
xchg
ret
andl
cld
pop
mov
repz
lret
clc
cmp
jns
mov
xchg
jae
pop
test
sbb
xchg
and
fstp
or
sub
mov
fcmovb
shll
mov
movsb
cs
mov
sbb
add
add
mov
pop
jno
inc
xchg
mov
dec
add
scas
sahf
mov
icebp
cmp
lahf
cmp
js
mov
test
pop
add
sbb
add
insl
cmp
xor
loopne
negb
jp
dec
fwait
out
jp
jmp
push
insl
jnp
adc
and
mov
adc
ficoml
jp
cmp
mov
jb
movsb
push
ret
in
jno
stos
adc
inc
dec
sbb
fmull
pop
cld
shlb
jl
cwtl
vextractps
sbb
cmp
enter
push
cmp
add
popl
test
lds
xor
mov
mov
jge
fwait
aaa
aam
xchg
lods
and
jns
xchg
mov
test
jmp
pop
dec
loop
lret
popa
repnz
test
push
gs
fidivl
dec
sar
or
ss
orb
inc
iret
cmp
cs
int3
push
outsb
jg
aaa
daa
and
insl
jb
aam
xchg
test
add
sbb
xlat
pop
push
roll
rorb
jo
add
add
fisttpl
out
sub
enter
xchg
loope
jae
rcrl
push
adc
or
push
xor
push
xchg
addr16
sahf
push
mov
lods
out
loopne
mov
push
cltd
mov
add
pusha
test
shll
pop
sbb
fs
cmp
push
sbbb
outsl
fimull
sahf
movsb
sbb
xor
lahf
mov
inc
jne
loopne
loope
dec
jne
loop
in
inc
cmp
pop
in
jno,pn
inc
hlt
lret
ficoms
aas
sbb
jle
sbb
aas
dec
sbb
out
jge
cmpb
xchg
adcb
push
jbe
push
or
std
cs
aas
dec
loope
ss
das
mov
roll
test
popf
xor
jae
push
popa
ret
mov
mov
mov
cmc
leave
pop
es
inc
es
ret
cmp
mov
and
dec
das
fdivl
jg
inc
scas
pushf
lods
inc
ss
dec
cltd
lret
mov
jl
sbb
jle
cmpsl
aam
incb
and
jbe
adc
add
out
pop
mov
loope
call
leave
fmulp
cmp
jge
nop
imul
adc
rclb
gs
stos
scas
lods
adc
jecxz
jl
push
clc
dec
or
sub
adc
pop
repnz
js
out
adc
call
pop
jg
daa
push
cltd
out
cmp
fiaddl
sbb
ljmp
jle
fwait
lret
inc
movsl
or
sbb
or
cs
stos
ficoml
cmpsl
cmpsb
sbb
sub
dec
adc
imulb
jmp
cmp
lret
std
pop
popa
pop
rcll
sbb
fistpl
ret
int
mov
mov
jecxz
adc
pop
pop
sub
pusha
mov
lock
shrl
xorb
xorl
xor
jne
and
stc
inc
mov
insl
test
repnz
enter
out
and
mov
fiadds
imul
add
add
lahf
out
cmpsb
sub
dec
fs
out
test
push
sbb
and
shll
push
push
mov
clc
test
ljmp
inc
add
cmp
sahf
daa
or
ljmp
stc
push
imul
gs
inc
add
in
icebp
adc
dec
fwait
ret
add
mull
mov
stos
add
jmp
cmp
js
add
aas
sbb
cld
xchg
cmpb
out
mov
adc
cmp
loope
test
xchg
addb
push
mov
or
xchg
rol
gs
sub
push
xor
adc
push
bound
or
clc
mov
bound
stos
and
sti
rorl
xor
push
fwait
jecxz
aas
inc
adc
bound
mov
add
mov
pop
loop
fdivrs
xchg
cmp
repnz
jb
dec
shrb
push
pop
adc
mov
add
sub
in
add
xchg
adc
ret
push
flds
test
inc
in
xor
pusha
lret
mov
sar
jp
sahf
stos
js
cmp
lahf
dec
decb
sti
push
sbb
in
rolb
jge
sbb
addr16
ficoml
ret
pop
mov
xor
fdiv
mov
repnz
adc
orl
movsl
shlb
aad
or
dec
insl
inc
cmc
aaa
sbb
push
inc
testb
push
mov
xor
xchg
jecxz
nopl
lods
inc
mov
out
cs
test
test
pop
sbb
mov
aas
mov
cltd
cltd
aad
xor
pop
ret
and
xor
mov
call
daa
ljmp
iret
inc
mov
sub
sbb
pusha
inc
xor
jb
inc
lret
jmp
in
add
push
leave
or
jnp
push
aas
xchg
insl
mov
lret
push
push
pushf
mov
inc
xor
jle
sbb
xchg
mov
dec
insl
sbb
addr16
notl
push
arpl
xor
push
es
mov
test
inc
push
fsin
cmp
loopne
pusha
pushf
addr16
lcall
pop
cmp
xor
mov
mov
jne
push
and
adc
fwait
mov
push
sbb
jecxz
jle
and
repnz
mov
lahf
pop
cli
mov
sbb
shlb
repz
adc
xor
scas
fistl
add
fwait
mov
jmp
lcall
jle
mov
xor
mov
sbb
add
xchg
addr16
gs
ret
xchg
xchg
pusha
outsl
mov
pushf
fs
lods
mov
sbb
into
xchg
adc
js
subl
sub
fiadds
mov
stos
mov
mov
xchg
jmp
ret
insl
push
add
sbb
jecxz
das
and
fisttps
pop
jne
cwtl
and
mov
mov
cld
fmuls
push
cli
sbb
fcomps
jecxz
or
push
cmp
mov
jmp
std
add
add
dec
cmpsb
lds
into
repnz
or
pop
jae
mov
sbb
dec
jne
and
pop
in
mov
ss
xor
add
pop
std
sub
jb
cli
pop
jae
sub
sub
add
dec
fdivs
aad
cmpsl
dec
pushf
or
adc
scas
mov
mov
pushf
cmp
push
repnz
pushf
sub
call
repz
and
sbb
std
sbb
dec
and
cmp
and
or
fisubs
xor
flds
pop
xchg
pop
cmpsl
xor
or
cmp
mov
sub
fmuls
push
aad
xchg
jg
out
lods
call
imul
jl
rcr
adc
pop
mov
shlb
cmpsb
fsubrp
cmp
and
ja
inc
outsl
mov
insl
pusha
movsl
jae
lea
paddusb
lret
jmp
fs
inc
cwtl
inc
out
adcb
mov
xor
dec
sub
out
jns
sub
dec
icebp
jbe
lret
xor
imul
outsb
jnp
ljmp
add
int
repnz
out
adc
mov
cmp
test
lea
or
mov
cmc
pusha
mov
cmp
iret
cwtl
or
std
xabort
cmp
mov
data16
xor
ss
adc
cmc
loope
mov
xlat
xor
adc
icebp
sti
popa
test
push
rcrl
mov
das
pop
jle
inc
xor
sub
sbb
dec
sbb
aaa
adc
fists
jle
adc
icebp
sub
sbb
push
cmp
mov
imulb
imul
push
push
or
fs
hlt
mov
fwait
xchg
add
iret
call
add
imulb
fcoms
loop
or
xchg
push
shrb
in
lret
stos
dec
stc
jns
push
rcll
and
push
and
push
add
push
mov
mov
iret
test
dec
inc
xor
nop
xchg
add
or
inc
jnp
cmpsb
mov
jns
loop
and
xor
adc
idivl
hlt
ss
push
mov
xlat
addr16
int
outsb
aad
nop
and
sbb
or
mov
lret
cmpb
push
je
add
add
dec
sti
pop
orl
lds
jb
sahf
xor
dec
scas
test
hlt
sub
outsb
leave
sub
js
gs
ret
pop
dec
dec
adc
lock
sbb
mov
xchg
cli
fwait
mov
mov
in
pop
xchg
pop
cmpsl
sub
movsb
stos
fidivs
lock
jl
xchg
xchg
in
sub
lods
imul
enter
mov
movsl
sbb
in
cmp
jnp
and
cmp
lock
xor
cmp
js
jmp
mov
push
jmp
call
call
inc
shl
dec
lds
mov
xor
add
fwait
mov
test
sub
pop
inc
out
mov
and
mov
dec
cwtl
into
push
add
or
jns
dec
adc
xor
cmpsl
repnz
lock
loop
or
jo
fidivrs
stc
into
and
pop
sbb
xor
or
popa
sarb
popa
ljmp
inc
add
hlt
cmpsl
test
cmp
fadds
push
scas
lcall
mov
es
xchg
cwtl
inc
mov
jl
add
rorl
mov
mov
dec
js
mov
ss
mov
adc
cltd
push
or
repz
and
push
sbb
aam
mov
icebp
shll
pushl
loop
orl
fs
and
fs
dec
mov
push
js
mov
mov
std
or
cli
pop
adc
sbb
loopne
sub
xor
xchg
cmc
test
pop
in
aaa
jno
cmpsl
dec
mov
mov
and
fdivs
xor
cli
mov
dec
adc
jo
mov
insl
xor
push
int3
pop
ljmp
mov
shll
aas
inc
xor
les
jae
cmp
mov
test
xchg
push
mov
or
insb
mov
mull
add
arpl
test
fadds
pop
lods
insb
out
nop
pop
and
fistl
xor
icebp
mov
dec
push
xchg
dec
xor
push
popf
push
test
cwtl
sub
in
je
cmpsl
mov
mov
popa
bound
pop
inc
mov
nop
lcall
adc
out
in
push
stos
icebp
leave
lret
ficoml
insb
jmp
cmp
shlb
lea
dec
xchg
dec
les
icebp
pop
lcall
cmp
jns
mov
inc
repz
jg
xchg
sbb
sarb
sub
or
lods
jnp
dec
sbb
ja
sti
add
mov
ds
push
rcl
adc
clc
or
fwait
inc
movsb
xchg
popf
popa
jne
jb
sbb
and
pushf
xchg
shrb
das
and
data16
imulb
push
or
aam
adc
popf
cmpsb
jmp
xor
pop
mov
lock
sub
rcll
mov
jp
xchg
push
adc
pop
push
sub
xchg
cmp
jo
jno
fld
xor
pop
mov
in
sbb
dec
xchg
stos
inc
scas
cmpl
mov
sub
sub
push
loop
jns
dec
aas
notb
int
jae
push
inc
sub
sub
lods
xor
in
cmp
sbb
cmp
pop
dec
cmp
cmp
or
and
xchg
jg
xor
add
mov
insl
mov
push
out
popa
xor
frstor
cltd
add
fsubl
push
mov
mov
add
mov
or
mov
pop
push
cmpsb
sbbl
dec
fs
mov
les
cmp
and
aam
push
pop
call
jmp
sub
ss
mov
xchg
push
pop
sbb
mov
jae
inc
jp
mov
push
scas
cs
out
and
jnp
dec
ret
shlb
mov
and
mov
repz
xor
test
hlt
out
int3
in
jne
push
das
scas
cmp
negb
cmp
cwtl
cwtl
inc
loop
fs
dec
cld
rolb
pop
adc
mov
cmp
ss
aad
out
mov
lods
xchg
fisttps
jnp
sti
fidivl
jg
outsl
mov
xchg
ljmp
mov
inc
lret
sarl
mov
sub
and
ja
and
sbb
rclb
cmp
mov
ljmp
iret
lds
inc
aam
sbb
js
js
or
rol
dec
and
xor
sub
lret
imul
in
inc
out
popa
icebp
outsl
lahf
jmp
xchg
mov
icebp
add
push
inc
cmpsl
xchg
push
lret
dec
adc
icebp
xor
aad
and
and
ret
push
mov
scas
xor
push
and
aad
movsl
push
icebp
pushf
cmp
loope
pop
cmovp
cmp
jle
jg
fistpl
stos
lock
lahf
lock
or
and
push
dec
pusha
xor
repz
mov
dec
les
rolb
dec
in
cmp
jbe
pop
out
fdivr
lods
div
push
push
pop
pop
jle
mov
inc
pop
movsb
addl
push
dec
mov
mov
icebp
nop
ret
jecxz
int3
adc
pop
movsb
mov
mov
inc
iret
mov
or
imul
pop
movsl
lods
add
and
insl
hlt
cmp
mov
mov
in
mov
ds
scas
iret
xor
dec
pop
stc
jmp
push
outsb
xor
adc
fs
repz
xchg
mov
xor
das
inc
nop
dec
call
in
add
fidivl
aad
ret
insl
fldcw
das
dec
test
dec
inc
jp
jns
inc
pop
cmp
lcall
je
xchg
sti
jne
dec
cmpb
pop
pop
sbb
jno
mov
cli
adc
pop
lret
jge
mov
adc
movsb
test
mov
push
sarl
mov
stos
js
movsl
and
fsts
push
push
mov
mov
mov
mov
jecxz
stos
inc
int
fs
nop
daa
and
std
pusha
adc
inc
sub
pop
popa
push
mov
out
push
add
xlat
sub
and
test
dec
mov
and
cmpsb
cmpsb
in
repz
test
inc
or
inc
int
sub
add
mov
jp
dec
and
scas
sbb
or
pop
mov
shrl
mov
clc
enter
popl
and
xor
xor
xor
repz
cmp
cmpl
dec
mov
adc
and
xchg
pushf
sub
sub
xlat
test
inc
dec
sub
idiv
idivb
xlat
xor
nop
stc
xchg
xor
test
arpl
push
add
rcrb
adc
mov
pop
adc
inc
clc
jp
repz
test
nop
lods
sbb
push
enter
dec
pop
xchg
les
insl
movsl
xor
and
sub
clc
mov
addl
cmp
pop
daa
dec
adc
jp,pn
enter
jle
in
mov
sbb
xorl
aad
and
add
sub
out
fs
stos
push
cmp
js
cmp
mov
jmp
push
jl
je
jo
mov
test
dec
dec
lods
setb
adc
sub
mov
cmp
data16
jg
repz
mov
imul
push
dec
test
or
out
adc
push
cmpsl
outsl
inc
stos
cmp
fcmovnbe
jle
cmp
insb
fsts
mov
subl
je
fisubl
in
and
scas
loopne
pop
scas
add
loop
lahf
popa
je
inc
scas
out
enter
xor
add
das
stc
negb
js
lea
and
and
sub
cmp
ds
inc
sbb
lods
fsubr
mov
test
add
push
xor
sub
out
mov
lea
mov
xchg
inc
push
btr
push
mov
psrld
ljmp
stos
pop
ljmp
mov
lret
mov
cmp
push
iret
xor
or
mov
mov
stos
xchg
xorl
push
pop
cmp
jb
loopne
lea
test
xchg
push
pop
mov
mov
add
aam
je
test
cli
inc
testb
call
js
pusha
sahf
divl
dec
jle
scas
std
xor
pop
ja
inc
cmp
push
sub
je
xorl
push
xchg
ds
dec
sub
fstps
and
xchg
add
test
xor
dec
jbe
push
jo
dec
iret
dec
cmc
sub
sub
ljmp
in
xchg
inc
cmp
mov
std
mov
push
and
out
icebp
inc
add
mov
js
add
jmp
dec
std
mov
pop
adc
js
or
dec
mov
dec
and
shr
sub
addr16
push
mov
scas
clc
andb
inc
fstl
loopne
sub
and
or
dec
sub
adc
lock
cli
aad
sub
les
arpl
push
test
push
lea
mov
aad
adc
rolb
xor
xchg
rorl
aad
sub
and
ss
jle
pop
adcl
mov
enter
mov
pop
jbe
push
sbb
push
out
jne
add
mov
xor
arpl
or
xchg
jns
xchg
loop
or
or
push
push
sub
dec
jae
aas
fmul
xlat
pop
adc
pop
or
scas
aad
mov
jl
pop
mov
popa
scas
dec
push
in
shl
push
aas
lock
test
pop
mov
sub
mov
in
sbb
sub
cld
sub
popa
daa
es
pop
sti
repnz
lret
sub
xor
xchg
pop
inc
sbb
loop
and
jae
insl
icebp
mov
sub
test
xor
push
jg
cmp
aas
aaa
andb
cmpsb
sub
jbe
pop
push
inc
dec
lods
out
addb
xchg
dec
and
loopne
xchg
stos
pop
fsubl
fldcw
jae
add
daa
jbe
leave
pop
push
mov
outsl
sub
fsts
xor
inc
out
arpl
aad
mov
mov
xor
xor
pop
push
leave
cmpsl
loop
and
mov
mov
pushf
inc
inc
sub
lods
setns
pop
loope
cmp
jbe
fs
or
test
mov
sbb
mov
push
insb
xor
mov
int
rclb
add
mov
les
dec
aam
dec
fmull
mov
cwtl
aas
mov
in
dec
jl
mov
lea
mov
rcrl
jno
cmpb
lock
dec
jle
in
mov
push
je
fwait
add
cwtl
ss
xchg
cmp
xor
out
mov
add
ret
and
dec
xacquire
fnsave
cmpsl
aas
push
sbb
fidivrs
outsb
fimuls
and
mov
aad
mov
cmpb
lahf
sahf
outsl
aad
fimull
hlt
xor
jo
cmpb
xlat
stos
stos
enter
ss
out
push
ud1
inc
push
add
push
aad
outsb
lods
or
iret
dec
out
add
xchg
push
sbb
stos
and
inc
adc
lods
lret
mov
mov
sub
pushf
xlat
mov
mov
mov
clc
mov
jnp
test
fisubs
fmull
push
mov
mov
out
jne
sti
pushf
fiaddl
rcr
les
and
in
lret
mov
ret
sbb
aad
test
add
fsubrl
negl
out
push
push
call
scas
inc
push
mov
mov
adc
sub
aaa
lock
dec
insb
xlat
jge
sub
fisubs
pop
jle
cmp
cltd
pop
pusha
pusha
fstl
xor
flds
subb
pop
cmp
in
mov
daa
shll
push
lcall
add
push
imul
fwait
mov
jmp
adc
sbb
cmp
jb
cli
not
movsl
push
inc
sbb
aaa
daa
add
dec
nop
stos
xchg
dec
dec
lea
outsb
lcall
jae
mov
incb
or
imul
lret
pop
dec
rcll
pop
rorb
mov
dec
mov
cmp
jl
cmp
nop
xchg
cmp
insl
jbe
jo
out
jno
adc
outsb
and
ret
repnz
jecxz
cld
je
nop
cmp
lea
shll
in
pop
pop
mov
or
pop
sub
mov
add
mov
mov
dec
cmp
push
mov
sti
sahf
jns
adc
sbb
mov
nop
ja
ss
lahf
sub
aas
lods
inc
mov
mov
jno
adc
nop
jl
sub
aaa
push
stc
push
or
fiaddl
xchg
add
adc
fidivrs
sarb
je
mov
add
push
and
addl
and
inc
shlb
in
adc
adc
or
jae
and
in
mov
stc
jmp
data16
cmc
fninit
dec
nop
outsb
xor
loop
mov
scas
pop
sbb
in
push
scas
repz
ljmp
fldt
loop
lock
cmpsb
out
mov
inc
and
add
jg
hlt
pop
adc
xchg
and
aam
pop
add
and
mov
dec
dec
mov
mov
loop
sti
cmpsl
in
or
jl
push
mov
xor
xchg
mov
push
pop
test
lret
mov
int3
inc
pop
movsb
mov
lods
xchg
out
cld
push
pop
jae
test
inc
xor
dec
jmp
popf
xchg
pop
int
inc
or
call
pop
lcall
jl
aad
add
dec
cmp
xchg
iret
call
inc
xor
cmpsl
cmp
xlat
jp
ret
fisttps
lods
lret
jge
movl
lock
add
mov
sbb
stc
pop
cwtl
cmp
jle
daa
xchg
jnp
inc
mov
test
fisubrs
lods
fstpl
and
pop
xlat
add
sahf
cmp
movsl
or
div
mov
test
dec
mov
push
into
push
stc
push
pop
in
rep
xchg
scas
imul
pushw
pop
data16
cld
fdivl
jns
int
into
cli
clc
bnd
cmp
xor
add
out
inc
or
sbb
pushf
cmpsb
jno
jl
jno
imull
imul
push
adc
pop
add
sbb
jmp
xor
lods
insb
mov
repz
push
jmp
fidivl
cmp
aad
imul
jo
adc
rorl
loope
xchg
dec
mov
data16
cltd
mov
or
arpl
dec
pcmpeqw
and
fisttpll
test
jecxz
lods
loopne
dec
push
xor
sbb
and
mov
test
mov
in
sbb
mov
xchg
pusha
clc
or
cmp
daa
insl
fwait
mov
add
push
mov
addr16
push
insb
add
adc
sbb
add
mov
pop
fsubl
mov
push
call
or
dec
or
jl
fisubrs
mov
mov
fs
rcrb
jnp
dec
push
sbb
arpl
add
xor
sub
out
mov
insb
add
push
daa
push
repnz
jnp
push
jno
or
pop
mov
xorb
stos
xor
jl
sub
mov
mov
dec
cmp
test
mov
mov
icebp
add
lahf
jl
pop
repnz
xchg
xor
cli
or
sub
cmp
pop
aad
jp
shll
sub
sti
mov
imul
mov
cmp
mov
inc
xchg
mov
sbbl
push
adc
and
sbb
pop
xchg
repnz
test
out
add
xchg
push
push
mov
out
mov
pusha
adc
ss
xchg
lret
inc
xchg
or
negb
je
arpl
xor
cmp
mov
jb
add
rorb
vucomiss
movsl
cmpsb
shll
in
xchg
cli
sub
xor
gs
jbe
and
mov
lret
jg
lods
mov
cs
mov
aaa
pusha
pop
mov
sub
das
or
sbb
ja
sub
outsl
rorb
push
ss
push
pop
arpl
or
inc
and
movsl
scas
xor
mov
cmpsw
fnstcw
fsubrp
inc
lret
mov
fucomi
sahf
mov
test
popa
cmpb
cwtl
dec
and
pop
rclb
movsb
xchg
add
or
adc
insl
dec
mov
dec
cld
sbb
jmp
insb
push
or
imul
popf
sub
xchg
sub
shlb
rorl
cmc
cmpsb
xchg
fwait
sub
fs
mov
mulb
in
clc
pop
sub
add
inc
fcmovbe
mov
imul
aas
outsb
icebp
rclb
in
sub
aaa
pop
and
add
jp
cltd
pop
push
mov
pop
test
mov
xchg
push
arpl
jl
int
inc
mov
xchg
xchg
fisubs
cmp
mov
cld
outsb
fildl
or
xlat
into
in
loopne
loopne
jbe
pop
notl
inc
pusha
aad
xchg
or
dec
lcall
fistps
xor
rol
icebp
lret
dec
in
in
pop
aas
inc
or
std
ss
add
xchg
icebp
dec
inc
movsl
fcomps
pop
in
out
mov
fiaddl
push
je
pop
and
aas
daa
mov
stos
inc
push
imul
add
pop
or
jl
xor
and
xor
imulw
lock
sbb
sub
cltd
mov
cwtl
stos
outsl
or
sub
or
and
pop
push
xchg
out
je
ljmp
sub
lock
mov
sbb
push
push
push
insl
in
xchg
leave
xor
and
outsl
jnp
adc
cli
xor
aam
xor
xor
in
call
into
pusha
test
icebp
mov
push
arpl
movsb
filds
out
imul
scas
add
loop
ss
enter
scas
cmp
and
mov
in
sub
daa
das
shll
mov
mov
ljmp
ja
fidivs
xchg
lock
pop
ror
dec
pop
sahf
dec
cmpsb
and
pop
cli
sahf
inc
sbb
bound
lret
jp
xor
xchg
sub
pop
aad
fucomp
dec
ret
je
bound
jbe
mov
mov
stos
push
mov
daa
repz
xor
icebp
dec
cmp
push
jl
aad
dec
or
pop
bound
cmp
adc
pop
fwait
xchg
cltd
lea
adc
push
cwtl
sbb
xchg
pushf
mov
mull
rol
out
daa
dec
stos
incl
addr16
push
in
sbb
bound
cltd
push
icebp
loope
mov
fs
fistps
pop
mov
mov
mov
mov
ds
mov
push
or
xchg
das
push
jge
mov
stc
inc
push
pushf
inc
pop
cmc
jp
cmpsb
mov
xlat
outsl
sbb
addl
inc
adc
xor
add
xor
inc
jle
adc
movsb
cmp
mov
icebp
call
xor
jne
inc
not
insb
cmp
jbe
sarl
shl
jns
das
inc
fimuls
rorb
xor
inc
sub
push
pop
cmpsl
jbe
pop
mov
jmp
xor
or
pop
lods
loopne
mov
fs
xor
cld
out
inc
test
jg
push
rcll
push
push
decl
pusha
icebp
leave
xlat
cmpsb
mov
and
movl
adc
andl
and
dec
jo
je
dec
mov
pushf
pushf
xchg
call
cmp
mov
addr16
mov
aas
clc
cmp
add
mov
xchg
outsb
lock
loope
xchg
fwait
gs
rcrb
aad
leave
sbb
dec
nop
sti
imul
aaa
inc
into
fldt
mov
cltd
jo
mov
xor
pop
inc
inc
icebp
sub
inc
jp
dec
sub
jbe
rcrl
nop
mov
inc
mov
stos
and
clc
lods
addr16
add
jns
cwtl
pop
scas
mov
xchg
inc
and
mov
fwait
or
aas
mov
mov
add
notb
or
xchg
out
popf
inc
sti
sbb
mov
popa
mov
dec
sar
jns
lods
jmp
inc
fimuls
jae
loop
xlat
ficomps
mov
inc
addl
inc
pop
push
pop
dec
lods
ffreep
ret
aad
push
xchg
mov
sub
ljmp
repz
pop
mov
test
or
xchg
dec
push
in
shlb
jmp
sbb
push
cli
jne
mov
lret
setge
mov
sub
ficompl
inc
push
in
sbb
cmp
fildl
xchg
dec
cwtl
fucom
in
jg
cmpsl
mov
xor
mov
push
out
mov
ss
mov
xchg
aam
adc
fldenv
jnp
jbe
xor
sub
icebp
sub
shll
cmp
hlt
dec
xchg
inc
inc
xor
mov
and
iret
rclb
in
lret
repnz
mov
hlt
ret
out
int3
loopne
jle
into
sti
mov
xor
pop
jbe
test
adc
rcrl
ret
dec
pop
jmp
enter
sub
mov
mov
cmpsl
add
jl
xlat
hlt
jno
or
movsl
sub
push
jp
jle
in
mov
sar
lcall
lret
clc
outsl
adc
jnp
adc
xorl
and
in
stos
dec
ds
pop
mov
and
mov
inc
sub
cwtl
aad
dec
and
sub
add
cmp
scas
jp
push
or
sbb
sti
jecxz
outsl
pop
aas
pop
cmp
push
push
dec
xor
jmp
rdpmc
push
cmp
mov
pop
sbb
aam
shlb
hlt
pop
test
sti
pop
std
cmp
or
xor
jo
out
lcall
and
mov
and
and
cmpb
inc
sbb
adc
mov
and
add
xchg
pop
rcll
test
push
dec
or
daa
out
arpl
ds
inc
and
push
es
bound
loope
fwait
push
pop
jns
push
js
dec
data16
fcomps
and
mov
dec
xchg
sub
dec
je
fwait
jns
test
fsubrs
jg
cmpsl
data16
jmp
or
push
jle
and
xlat
push
push
pop
jno
mov
push
lret
push
jnp
ja
sbb
and
out
add
popf
mov
ret
fdiv
divl
insb
or
inc
addb
dec
mov
lahf
popf
fdivl
and
pop
addr16
aaa
mov
aam
in
shrb
sbb
pusha
or
cmc
call
lea
pminsw
xchg
inc
adc
fsubp
xchg
scas
pop
mov
push
xchg
xchg
fsubrs
outsb
scas
fsubr
arpl
clc
and
mov
and
test
and
xchg
inc
add
ficoml
mov
je
fsubl
inc
das
xchg
mov
ds
xchg
popf
add
mov
pusha
daa
or
bswap
in
inc
stos
clc
inc
jmp
daa
stos
fdiv
movsb
dec
xor
mov
movsl
dec
and
sbb
call
xor
imul
sub
mov
sbb
dec
lret
shrl
and
add
inc
push
outsl
dec
pop
ja
sbb
jp
lret
stc
std
pop
inc
popa
fsub
xchg
roll
or
bound
xor
dec
sub
clc
lret
ror
sbb
and
pop
loopne
jl
add
xchg
outsb
inc
rcll
repnz
pop
xchg
and
pop
mov
int
cmp
je
and
bound
pop
and
cmp
add
stos
cmpsb
pop
push
sub
pop
adc
or
cmp
mov
insl
pop
arpl
popl
add
rorl
call
jp
sbb
adc
pop
pop
daa
dec
daa
out
pusha
sbb
xor
out
lret
fs
sbb
mov
movsl
ror
inc
mov
aad
ret
push
jo
sub
mov
in
or
push
out
mov
jmp
mov
movsl
lret
adc
mov
jp
mov
jmp
and
fwait
outsb
out
push
pop
mov
repnz
pop
jno
ret
jg
mov
mov
dec
loope
int
inc
imul
shl
mov
shlb
nop/reserved
mov
lods
jl
xor
sbb
fdivrl
and
fcmovb
dec
jo
and
ja
inc
jo
jns
mov
mov
jb
lret
mov
or
push
shrl
xchg
out
xor
repz
mov
sti
std
inc
dec
cwtl
adc
add
sbb
xor
adc
sar
and
icebp
push
jae
sub
cltd
cmp
mov
or
and
sbbl
sarl
bound
lahf
leave
dec
jns
movsl
push
xor
faddp
mov
shrd
push
scas
push
mov
andb
xor
xor
hlt
lahf
testl
mov
xor
cmp
insl
inc
sbb
cld
lods
punpcklwd
orl
lods
scas
bound
shll
in
sub
mov
jg
or
dec
mov
mov
xchg
lods
or
stc
or
cli
jo
pop
pop
add
fwait
enter
nop
push
inc
lcall
push
shll
lock
pop
test
mov
enter
mov
inc
xchg
sbb
sub
and
push
inc
mov
ret
mov
mov
xor
out
ss
lret
lods
jae
sub
xor
adc
push
fcompl
aam
and
pop
int3
push
push
out
movsl
and
fs
gs
ljmp
or
popf
push
scas
popf
cmp
in
adc
pop
lods
ficoml
and
xorb
stos
testb
cmpl
jmp
and
aas
imul
xor
inc
inc
loope
jmp
jmp
addl
fnstcw
in
gs
cli
sti
leave
imul
in
das
lret
sar
je
shrl
mov
push
sahf
shll
cltd
subb
std
xchg
mov
pop
jl
enter
insb
xchg
ret
daa
ret
cmpsb
daa
jmp
imul
jne
lds
pop
stos
jo
in
test
jo
rclb
fcoms
adc
xor
int3
cli
stos
out
lret
sub
jb
jb
fstpt
pop
add
xchg
shl
sbb
mov
xchg
fidivrl
pop
jne
sbb
push
insb
test
fs
fwait
out
or
adc
and
repnz
and
pop
ficoml
js
test
pusha
sbb
in
cwtl
pop
sbb
mov
pop
dec
ret
fsubrs
scas
pop
fsubrl
push
daa
loope
lret
dec
rcrb
out
scas
seto
or
rolb
aam
js
cmc
nop
lea
xor
ljmp
repz
mov
push
imul
dec
loopne
dec
fisttpll
xchg
sbb
push
sub
stc
ljmp
sub
in
ds
sbb
push
mov
xor
adc
adc
test
in
jno
mov
int3
inc
and
cmpsl
outsl
inc
or
es
push
add
sub
add
sub
out
jl
movsl
andb
jp
test
in
lcall
ss
mov
pop
and
ljmp
xchg
pushf
mov
out
int3
je
and
cmp
loopne
push
jle
jae
hlt
cmpsb
cltd
mov
push
stc
sti
push
stc
cli
in
les
sbb
imul
rolb
sbb
jle
mov
mov
mov
inc
push
les
ret
cltd
adc
popf
ja
dec
jno
jae
mov
and
jmp
lock
mov
in
pusha
sbb
shlb
mov
pop
rcrb
fwait
jnp
ret
ffree
aaa
jge
cmpsb
inc
sbb
dec
xlat
dec
int3
cmpb
pop
adc
adc
add
or
dec
adc
xchg
adc
jbe
lods
call
inc
jae
dec
mov
addb
inc
dec
iret
adc
xor
xchg
mov
ss
push
les
xor
add
mov
insl
lods
mov
mov
xor
jp
jp
inc
sbb
negb
rcr
cmp
fnstcw
push
pop
fsubl
repnz
stos
mov
inc
add
pop
lods
or
mov
jne
icebp
sar
sub
aam
ud2
fiadds
push
jbe
jbe
sub
inc
ret
and
add
xchg
shrl
mov
sub
in
out
hlt
lret
ror
or
jns
fsubrs
ficompl
mov
xchg
ljmp
js
mov
psrlq
ja
mov
call
ds
push
pop
cwtl
cmpsl
movsb
add
cmp
test
xchg
pop
and
dec
cmp
mov
jne
repz
call
jbe
gs
js
hsubpd
aaa
js
xor
dec
test
push
mov
lret
fisttpl
or
dec
push
test
and
mov
std
xchg
lahf
sub
bnd
mov
outsl
xor
popfw
mov
and
in
addr16
push
mov
push
rcrl
jecxz
fldt
sub
fcoms
test
xchg
enter
std
jns,pn
addr16
fsubs
into
cwtl
outsb
jecxz
sbb
ds
xchg
arpl
mov
jno
sub
push
push
js
mov
pop
push
push
mov
ljmp
loopne
mov
imul
dec
aas
sbb
insb
test
jg
aam
pushf
pop
pop
js
add
in
lcall
jns
in
jge
lock
lods
xor
xor
dec
mov
mov
rcrb
lods
xchg
scas
bound
rcrb
push
decl
mov
pop
xchg
loop
pusha
xor
stc
and
in
out
sub
shl
and
dec
lahf
loop
or
scas
push
imul
dec
pop
aam
xchg
mov
dec
push
scas
adc
sbb
jg
mov
sahf
movsb
or
stos
pusha
sar
add
sub
mov
rcrl
adc
flds
out
leave
jae
push
jle
pop
or
in
push
je
insl
testl
sub
mov
add
int3
lods
mov
xchg
inc
daa
cmp
jno
popf
icebp
and
loopne
add
pop
aaa
lcall
cmpsb
dec
fldl
xor
mov
call
gs
lds
scas
jb
pop
out
stc
sbb
rep
icebp
nop
xor
pop
js
cmpsb
xchg
mov
daa
or
iret
mov
or
mov
aam
loopne
test
jp
stc
loopne
js
fistpll
test
cmp
sub
scas
adc
sahf
pop
ds
xchg
mov
mov
jecxz
fmuls
out
adc
adc
add
sub
aam
inc
test
stos
fsubr
je
push
imul
jbe
clc
jae
mov
cmc
jnp
and
jmp
sbb
mov
xor
and
xor
movsb
mov
lods
js
nop
dec
jg
addr16
fisttpl
mov
push
mov
repnz
lods
push
lret
mov
repnz
add
push
test
movsl
lcall
lods
call
lret
iret
push
dec
call
dec
jae
cwtl
xchg
inc
dec
mov
cmp
popa
arpl
and
adc
xchg
fmul
cmp
jge
mov
in
fldcw
ss
repz
mov
ljmp
dec
repz
mov
sub
fmull
bound
in
cmp
call
ja
or
mov
lock
mov
sub
test
scas
sub
data16
inc
loope
mov
aad
mov
es
clc
inc
add
sub
mov
mov
push
pop
mov
das
movsb
fs
ds
xor
inc
adc
ss
and
jno
add
jg
pop
pop
sbb
jecxz
jne
cmp
xchg
or
aam
sahf
sbb
mov
mov
into
cmpsb
test
mov
movsl
inc
add
outsb
ljmp
mov
pop
sti
test
push
inc
outsb
mov
inc
sbb
or
adc
ljmp
mov
dec
cwtl
xor
sbb
pop
jbe
adc
stos
cmc
xchg
outsl
and
aas
test
lret
fs
out
xor
jge
shl
jae
push
xchg
cwtl
fs
xlat
test
or
loope
mov
loop
in
adc
sub
test
push
jmp
nop
and
outsl
mov
imul
rcll
mov
repz
jb
pop
popa
aam
sahf
xor
pop
clc
imul
mov
pushf
pushf
sbb
and
std
out
pop
inc
les
sbb
outsl
sbb
jmp
push
outsb
jnp
mov
repnz
push
lea
andb
stc
ret
cltd
stc
js
xchg
pop
jae
daa
lret
lods
xor
jo
je
pusha
pop
stos
out
sub
dec
sbb
lea
ja
out
sub
pop
je
rcr
les
rclb
or
pop
call
mov
ss
xlat
or
ror
rclb
push
sar
push
das
dec
cmpsl
icebp
inc
sub
insl
add
pusha
push
sub
cmpsb
xor
std
dec
xchg
rcrb
aaa
daa
data16
mov
push
add
loopne
push
mov
adc
mov
out
adc
adc
xor
cmp
in
push
cmp
iret
push
mov
sub
xchg
inc
dec
arpl
jbe
sti
sbb
cmp
dec
adc
movsb
pop
jo
jno
stc
cmp
stc
in
sahf
mulb
push
sar
ja
cmpsl
int
xchg
cmp
or
out
push
loop
jbe
enter
mov
sub
mov
aas
enter
rorb
pop
into
push
outsb
stc
adc
fildll
and
mov
adc
xchg
push
roll
xchg
and
movsb
sub
add
sub
add
loopne
inc
adcb
adc
mov
push
in
dec
xchg
sub
leave
call
sarl
aas
or
mov
xchg
adc
or
pop
in
pop
jmp
loopne
jmp
lret
and
jmp
testb
xchg
fs
mov
repz
testb
and
mov
or
out
or
sahf
adc
xchg
dec
dec
push
sbb
daa
xchg
jne
sahf
addr16
inc
add
lock
adc
pop
pop
sarl
or
inc
or
push
rcr
xor
add
inc
insl
inc
dec
stos
movsl
scas
dec
add
push
cld
xor
mov
push
pushl
call
push
pusha
iret
sar
adc
push
aam
fistl
std
push
idivl
push
or
inc
aad
and
lods
iret
adc
push
xchg
in
and
gs
jns
pop
and
mov
mov
sbb
dec
lahf
inc
dec
jns
inc
jns
repz
int3
shlb
push
fbld
jp
cli
xchg
adc
pop
sbb
lcall
inc
dec
dec
cwtl
test
and
inc
jp
leave
fimuls
stos
subb
lea
jb
fcmovne
fimuls
ret
xor
push
sarl
lret
xchg
ret
rep
cmpsb
fists
shll
movsb
lock
mov
cmc
add
call
out
jbe
push
bnd
shlb
dec
mov
mov
jb
dec
mov
mov
pop
lods
xchg
pop
test
out
jo
cmp
pop
or
xchg
inc
out
orl
mov
pop
mov
fcoml
nop
movsb
data16
cwtl
scas
dec
mov
mov
dec
arpl
mov
popl
pop
in
imul
adc
mov
in
xchg
lret
pop
hlt
push
mov
pop
js
inc
inc
cld
scas
pop
sub
cmpsl
mov
ja
loop
test
dec
inc
and
pop
adc
jb
fdivrs
rorl
mov
mov
jl
ss
data16
mov
sbb
ror
movsb
mov
call
test
sbb
fs
rcrl
popf
gs
sub
dec
jbe
insl
cltd
mov
and
lods
mov
and
mov
pop
xorps
sub
dec
rolb
push
movsl
dec
ss
cmp
and
prefetch
das
push
and
leave
orb
dec
pushf
fld
aam
shl
cmp
jge
or
push
test
jns
sbb
cmp
dec
push
sub
andb
icebp
fwait
xchg
mov
adc
fisubl
mov
lock
and
mov
cmpsb
sarl
push
sar
test
js
sahf
les
add
ja
push
js
lods
cmp
inc
add
inc
or
pushf
cwtl
aam
sub
mov
sar
inc
xchg
jge
pusha
inc
pop
orb
mov
xchg
or
scas
and
imul
push
insl
jge
out
test
xchg
mov
mov
mov
cmp
add
fwait
push
mov
mov
dec
mov
cltd
lcall
stc
sbb
out
imul
insl
or
pop
sub
sbb
adc
jb
in
ja
push
imul
pusha
loopne
sbb
adc
pop
push
jnp
mov
cltd
std
sbb
scas
sahf
test
insb
xor
js
sub
xchg
push
jecxz
cld
add
jbe
mov
push
roll
or
cltd
push
aam
loope
in
and
das
shlb
repnz
scas
pushf
jo
fsts
sub
movsb
mov
pop
aas
pop
add
push
in
add
lods
lds
pop
cmpsb
jbe
in
cmp
xchg
adc
sbb
shrl
xor
test
dec
sub
and
jne
mov
xor
negl
popf
shlb
movsb
fildl
rorb
dec
sub
xor
rcrb
mov
mov
fwait
aam
repnz
jle
out
sbb
sti
adc
sub
test
inc
imul
movsb
sbb
mov
jmp
push
dec
dec
adc
into
into
dec
jg
lcall
lods
mov
jne
cmp
outsl
arpl
push
push
insl
sbb
jg
jno
negl
add
sub
mov
or
or
in
fsts
adc
in
push
xchg
and
xchg
rorb
push
mov
pop
mov
push
dec
mov
xor
lods
adc
mov
out
ds
jg
dec
xchg
aam
aam
push
rcrl
push
pop
or
scas
adc
cmp
outsb
mov
test
sub
pop
and
cs
icebp
shrl
ja
or
sbb
push
out
std
cmp
clc
insb
movsl
jo
into
cmpsb
stc
xlat
fcoms
testl
sub
adc
icebp
and
xor
negl
sbb
aam
xchg
in
clc
dec
or
push
mov
and
les
and
or
xchg
sbb
lds
jb
xor
jno
push
xor
cltd
movsb
sbb
push
and
enter
xor
and
sub
xchg
jp
mov
cmc
or
test
cmp
fbld
fdivs
mov
icebp
mov
sub
add
push
orb
xchg
lds
pusha
rcl
movsb
adc
xchg
add
pop
cli
popf
dec
pop
mov
daa
popf
jl
mov
dec
lods
mov
insb
jge
dec
dec
jp
sbb
xchg
and
lock
mov
hlt
scas
add
out
cmp
sub
xor
aam
xchg
and
jl
mov
into
xchg
and
sbb
cmp
mov
mov
icebp
scas
das
mov
sbb
xchg
fs
push
rcrl
push
scas
repnz
fdivrs
adc
lret
int3
dec
xor
decl
loop
xchg
pop
sbb
dec
or
xchg
or
mov
and
xchg
mov
mov
ljmp
pop
loop
inc
loopne
hlt
adc
cmpsb
mov
movsl
imul
sub
js
daa
mov
test
loop
je
pop
xlat
ss
mov
mov
dec
imul
add
pop
imul
mov
push
lods
mov
loopne
lret
gs
and
ret
mov
jo
xor
mov
dec
ficoml
and
fisubrs
outsb
xor
out
xor
in
sbb
fsubl
mov
pop
pop
xchg
addl
adc
or
mov
pop
loope
mov
in
repnz
iret
or
mov
dec
jmp
jae
je
cmp
aad
fldt
pop
xor
popf
fcomp
data16
nop
cmp
jl
out
repnz
movsb
inc
repnz
mov
sub
aad
mov
pop
add
xor
mov
sub
and
aad
xor
mov
or
push
test
ljmp
adc
cltd
jb
adc
jecxz
mov
int
inc
out
adc
xchg
rorb
fcomps
hlt
push
movsb
jg
xor
xchg
sub
sbb
subl
and
ja
adc
fdivs
xor
insb
scas
stos
dec
inc
sbb
cmpsl
jbe
cmc
pop
insb
popf
cmp
add
push
mov
cmp
and
dec
and
je
clc
xchg
xchg
inc
mov
mov
pop
out
dec
push
cmpsb
hlt
pop
pop
repz
push
xchg
dec
movsb
mov
push
loope
sbb
lds
clc
cltd
push
lret
gs
leave
je
dec
adc
loope
adc
std
mov
cmpsb
jl
stos
xlat
mov
scas
jns
mov
xchg
jle
popa
movsb
loopne
fistps
mov
cmp
incb
icebp
bound
add
dec
stos
hlt
call
nop
add
add
bound
pop
mov
andl
sub
add
insl
out
adcl
mov
xchg
cmc
mov
mov
aam
mov
test
add
cltd
fisttpll
gs
jge
cs
and
xchg
pusha
mov
out
daa
sub
sub
adc
cmp
setbe
les
daa
popa
mov
push
repz
insb
loop
sub
mov
push
cmpsb
test
sbb
sbbb
addr16
add
inc
dec
xor
call
ret
jbe
or
aaa
jmp
pop
lret
ds
push
mov
mov
les
ret
sub
popf
leave
lods
sbb
push
pushf
mov
fsubrl
rolb
test
es
movsl
leave
inc
mov
stos
jge
xor
idivl
mov
pop
ret
and
add
mov
inc
push
jmp
push
push
jmp
cld
push
aas
mov
dec
mov
test
pop
inc
xor
cmpsl
dec
jns
xchg
pop
cmp
push
mov
push
push
leave
ret
add
push
out
sbb
jmp
add
sbbl
popa
lods
xchg
xchg
add
gs
shll
mov
xor
xchg
lcall
dec
fistpll
or
sbb
mov
in
cli
xchg
adc
fcmovnbe
inc
arpl
push
lret
mov
xchg
pop
mov
daa
and
lea
adc
jne
mov
dec
pop
inc
mov
imul
lods
adc
jecxz
sbb
addr16
shlb
or
gs
lcall
xchg
fs
push
test
loopne
out
aas
mov
lahf
cmpsl
xchg
mov
bound
es
lea
lea
adc
mov
sbb
push
lea
fcompl
dec
fiaddl
add
mov
test
xchg
lock
dec
fisubl
aas
adc
test
dec
rclb
call
mov
push
push
jg
je
and
sbb
jb
mov
jnp
push
inc
out
push
or
ret
xchg
dec
cmp
adc
js
jbe
inc
and
cli
out
sbb
lock
jb
adc
fisttpl
test
jle
xchg
dec
adc
je
mov
adc
lods
lods
int3
xchg
jne
lea
in
mov
xchg
jns
pop
mov
pop
xchg
roll
mov
fstps
in
test
jg
or
repnz
pop
pop
aaa
push
push
mov
mov
lahf
cmpsl
sub
in
popa
outsb
scas
sbb
mov
xor
in
scas
sti
movsl
fistpl
push
out
cld
or
cmp
jge
sbb
add
pushf
mov
mov
sbbl
stos
ret
fyl2xp1
mov
push
cs
fcoml
cmp
gs
cmpsl
mov
in
mov
out
mov
jns
es
mov
and
in
mov
imul
or
cld
jp
jg
pushf
dec
loopne
iret
mov
cmp
negl
hlt
aam
inc
jmp
mov
jnp
jo
inc
ljmp
lea
push
rolb
test
pop
jecxz
push
jecxz
cs
enter
jns
aam
lahf
movl
add
mov
outsb
scas
sub
jnp
and
inc
subb
fnstenv
fwait
cmc
into
fs
js
arpl
jns
inc
hlt
xor
shll
in
pop
adc
insl
fcmovnu
int3
arpl
lock
lods
cmp
hlt
cli
pop
and
sahf
mov
cs
in
test
shrl
lret
jnp
nop
in
shrb
bound
or
repz
pop
hlt
xchg
inc
dec
pextrw
mov
xchg
cwtl
dec
shlb
and
mov
sbb
arpl
repz
mov
add
lret
sub
adc
sbb
mov
push
fwait
mov
mov
xchg
pop
addr16
add
test
push
adc
pop
xchg
das
repz
shrl
mov
in
pop
popa
in
into
movsb
jb
xchg
je
lret
ucomiss
loop
push
mov
idivl
mov
rdmsr
sti
or
out
and
adc
or
xchg
rorb
cmpsl
xor
add
pushw
add
sti
and
dec
xchg
xor
sahf
push
push
outsl
das
mov
shrb
lret
cld
pop
xlat
lods
out
int
xor
outsl
shll
xor
jle
jmp
insl
pop
stos
pop
jg
ss
mov
gs
fcoml
pop
push
imul
push
mov
add
fwait
mov
scas
push
push
jp
in
js
mov
xor
or
fmuls
repnz
popf
lret
je
repz
inc
nop
fstps
bound
sahf
mov
cmp
sub
mov
gs
and
je
pop
dec
mov
mov
cli
inc
or
push
adc
mov
repz
fcompl
aas
imull
in
pop
cmp
push
int
popa
cmp
test
into
mov
xor
ret
jb
and
sub
lds
in
xor
cmp
jnp
jmp
shll
bound
jg
jo
test
into
mov
movsl
cmc
push
jbe
adc
xchg
mov
sub
into
leave
add
push
lcall
and
lahf
mov
mov
jecxz
sbb
jge
into
ds
arpl
add
push
loope
sbb
push
and
mov
push
imul
dec
sbb
inc
pop
inc
mov
mov
mov
sub
inc
push
mov
add
xchg
mov
pop
movsl
stos
insb
xor
sti
cld
push
cmpb
and
sbb
add
add
xchg
flds
push
fisubs
popa
ljmp
std
mov
sub
sahf
dec
movsl
out
push
xor
test
mov
sub
sbb
iret
mov
lock
loope
fs
add
pop
ret
les
adc
push
pop
push
adc
adc
mov
jno
sbb
lods
addr16
jg
jmp
sahf
pop
pop
adc
lock
pop
pushf
xchg
xchg
mov
mov
xor
aad
cmpsb
call
andl
adc
adc
mov
data16
mov
outsb
lret
cmp
stc
mov
test
xchg
ret
jmp
jns
cmp
insb
pop
orl
bound
push
pop
adc
and
dec
adc
mov
loopne
jmp
test
rcrb
out
ret
imul
jecxz
add
or
dec
test
push
lock
call
out
adc
pop
add
pop
loope
std
jb
in
cwtl
adc
cwtl
mov
lods
mov
lds
jno
lds
adc
push
insb
xor
mov
aaa
rorl
test
push
loopne
popfw
xchg
and
add
orl
scas
hlt
imul
in
icebp
loopne
xor
mov
adc
inc
sub
scas
rdmsr
ds
rcrb
ss
insb
push
fldenv
mov
inc
jb
in
call
cmp
push
aad
mov
movb
je
pop
pop
xchg
nop
test
cli
sbb
nop
lahf
cmp
int3
inc
popf
cmp
xor
and
inc
cmp
shr
cmp
jnp
jns
cmp
rcr
bound
popa
data16
xchg
pushf
xchg
bound
ss
xor
ficoms
int
iret
adc
ret
ds
and
xlat
sahf
lods
mov
lods
mov
adc
lahf
inc
out
jecxz
hlt
xchg
scas
std
pop
jb
inc
popa
mov
stos
clc
into
jmp
sub
mov
cld
jo
int
jbe
mov
inc
rclb
pop
sub
mov
jmp
sub
push
push
jb
fldcw
add
je
mov
add
push
test
lahf
addb
mov
les
mov
cmp
int3
jg
xchg
mov
and
push
ja
push
fdivs
lret
outsl
sub
xchg
cltd
add
or
push
fwait
dec
rcrb
adc
cld
bound
adc
xor
loopne
pusha
imul
fisttpll
mov
dec
and
jno
stc
in
add
lock
cmp
mov
rep
jne
dec
repz
iret
pop
jae
sub
dec
outsl
jae
pop
inc
sti
jmp
aad
cli
imul
js
push
cmp
cld
inc
test
lret
xor
or
in
and
sarb
mov
dec
push
es
mov
jns
rcl
insl
xchg
ret
inc
fwait
inc
inc
test
rcrl
incb
in
inc
sbb
xor
jge
les
add
fisttpll
jmp
push
daa
lret
out
cmp
stos
fidivrs
cli
and
sti
inc
mov
jmp
push
roll
add
sahf
repz
sub
mov
sbb
imul
mov
mov
out
xor
cmp
and
loop
cmpl
outsl
icebp
cmc
sbb
mov
mov
mov
int
fdivl
dec
jle
sbb
push
aad
ss
out
cmp
push
dec
push
add
inc
mov
add
mov
mov
shrl
pop
adcl
jecxz
push
pop
addl
xlat
push
es
dec
mov
push
jns
push
dec
daa
sbb
push
data16
or
mov
int3
xchg
mov
cs
andl
mov
sbbl
push
mov
sbb
dec
xor
pop
adc
data16
xor
adc
pop
iret
push
fiadds
xlat
xchg
aas
int3
adc
xchg
out
pop
ss
xchg
nop
cmp
aad
ljmp
out
jo
xor
movsb
ret
je
je
pop
cld
rorb
and
inc
lea
pusha
aas
clc
sbbb
cmp
xor
push
push
lahf
pop
scas
into
mov
jl
imul
pop
cmpsl
inc
inc
push
push
dec
jmp
mov
xor
lods
dec
pop
out
push
lods
mov
xchg
daa
add
or
sub
popf
test
out
sub
fwait
aam
mov
test
pushf
adc
test
inc
xor
xchg
sbb
inc
push
sub
cmp
mov
pop
jno
mov
or
or
pop
sub
adc
fcomps
jge,pt
inc
xchg
inc
and
loope
aas
mov
sub
test
ret
pop
xorl
sti
sub
pop
fwait
push
movsb
andb
iret
or
and
sub
out
xorl
outsb
adc
lea
loopne
mov
cli
aam
outsl
cltd
aaa
fldcw
xlat
popa
inc
movsl
add
fsubl
jb
enter
inc
idiv
sub
jp
sub
jg
addb
negb
push
sub
test
mov
or
push
shll
cli
subb
icebp
pop
pop
xlat
sub
push
fistpl
mov
jl
mov
sbb
xchg
shll
mull
push
mov
sub
cmp
mov
inc
adc
scas
xchg
mov
insl
out
int3
inc
fsubl
sbb
daa
fcoms
cmp
cli
cmp
cmc
popf
dec
xor
push
sbb
adc
mov
lret
dec
icebp
arpl
push
cmp
adc
mov
lcall
ss
push
jl
pop
popa
fs
outsl
leave
inc
adc
out
lahf
std
in
cwtl
fistpll
lods
shlb
lea
jg
imul
sbbl
dec
std
or
fcmovnbe
cmp
pop
shr
sub
test
dec
jg
sbb
adc
adc
je
pop
push
sbb
push
push
popa
xor
dec
mov
push
jns
mov
loopne
mov
fisubrs
dec
or
adc
arpl
mov
jmp
xor
in
jbe
mov
out
mov
xor
adc
or
adc
xchg
movsb
fwait
jl
cmp
mov
xchg
push
push
adc
sahf
xor
push
fwait
mov
outsb
mov
sti
mov
nop
cli
mov
jge
and
cs
or
outsl
cmpsl
xorps
mov
aaa
push
push
mov
dec
gs
dec
fldl
mov
xchg
lods
push
adcb
rcll
inc
imul
dec
mov
in
iret
mov
gs
jb
mov
adcb
xchg
stos
stos
rolb
xchg
add
pop
mov
les
and
xchg
jg
fcomi
rcrl
mov
shrl
lret
xor
adc
stos
sbb
mov
insb
dec
data16
dec
je
popf
fisubrl
out
xor
inc
inc
jns
add
cmpsl
mov
leave
add
inc
sahf
test
rep
sub
andb
xlat
lock
push
cmp
xor
mov
je
pop
cwtl
repz
out
xor
ret
movsl
bndldx
mov
push
in
pushl
dec
jnp
pop
add
inc
inc
insb
adc
nop
mov
push
das
jbe
orb
addr16
int3
dec
sbb
mov
je
lahf
lods
mov
mov
lock
push
ja
sbb
push
cmpsb
data16
push
pop
sbb
pusha
push
inc
call
mov
mov
sub
xchg
mov
sbb
es
hlt
lods
addr16
pusha
add
inc
cmp
ret
mov
lods
push
insb
xchg
jg
call
pop
adc
bound
pop
pop
push
mov
or
faddl
jno
dec
or
add
shrb
jbe
cmpsl
stc
mov
pop
mov
arpl
fwait
pop
loope
mov
and
mov
adc
dec
mov
mov
je
push
push
inc
jg
mov
add
movsl
movsl
in
lds
jb
push
jne
and
inc
int3
fsts
lds
scas
lds
mov
daa
mov
cmpsl
cmp
cmp
imul
iret
icebp
mov
mov
mov
test
adc
xchg
fisubrl
test
call
push
movl
xchg
xchg
mov
pop
pop
movsl
popf
scas
jno
xor
sbb
lods
lret
mov
lods
adc
sarl
dec
xchg
jnp
repnz
test
cmpsb
xlat
mov
inc
test
adc
fcoml
ljmp
adc
fisubs
and
or
bound
adc
add
push
mov
ljmp
push
movsb
jbe
popl
cmp
insl
lock
hlt
out
dec
push
daa
pop
loopne
jge
stc
pop
out
sbb
pop
leave
fisubs
adc
mull
stos
cmp
out
ror
test
out
fnstenv
movsb
inc
repz
aaa
mov
pop
enter
mov
daa
sub
rcrb
leave
lods
add
clc
jo
icebp
sbb
cld
pop
push
mov
sbb
push
pop
push
xchg
imull
mov
pop
cmc
mov
mov
xlat
inc
fisubl
and
sbb
stc
xor
test
cmp
mov
into
mov
push
jae
aas
imul
jb
clc
push
in
sub
ljmp
lret
pusha
xchg
les
ror
rcr
fidivrs
in
and
push
mov
xchg
cmp
mov
lods
aaa
sub
ljmp
push
jecxz
jg
push
inc
pop
out
rol
lret
test
cld
in
push
xor
pop
mov
mov
pop
push
mov
xchg
pop
push
add
add
mov
push
xchg
cmp
lds
gs
js
adc
xchg
xchg
scas
mov
popf
sub
mov
or
addr16
je
mov
add
je
mov
in
mov
out
bound
or
imul
aad
cld
xor
xor
sahf
lret
aad
pop
xorl
jnp
jecxz
leave
push
sti
jl
xor
add
inc
dec
clc
or
mov
out
dec
sub
ljmp
pop
sub
cld
pop
lods
ret
sbbl
inc
popf
add
idivl
dec
movsl
int3
movsb
add
lcall
js
cmpb
cmpsb
xlat
fcmovne
cmpsl
xor
fsub
dec
clc
lret
jl
stos
ret
enter
push
mov
mov
cmpsb
jns
dec
ss
inc
mov
push
aam
rcrb
cmpsl
sub
repnz
adc
mov
fnstenv
jmp
imul
sahf
sub
sub
das
jnp
mov
test
mov
in
push
dec
jl
fisubl
imul
cmp
fidivrs
in
outsl
ret
mov
add
sub
dec
aad
rcll
or
fistl
mov
sbbl
jbe
repnz
loopne
gs
add
sub
scas
push
xrelease
jle
lcall
push
jge
sti
mov
xchg
in
jge
add
xor
xor
inc
push
mov
and
jno
add
mov
shlb
pop
mov
outsb
mov
in
aam
clc
sub
aam
and
std
scas
ret
xor
pop
or
mov
gs
mov
inc
inc
mov
adc
cmp
xchg
fisubrs
or
dec
push
cmpsl
ret
dec
dec
add
ret
xchg
movl
pop
jb
mov
cmp
push
dec
aaa
xor
mov
js
cmp
mov
out
into
xchg
iret
jae
je
sahf
stos
adc
es
mov
repnz
sahf
cmc
mov
sarb
jle
mov
cli
fbld
sub
jb
sub
outsl
mov
cmp
lret
mov
pop
cld
scas
mov
jno
mov
imul
pop
andps
subb
or
jl
sbb
pop
aaa
out
mov
mov
push
add
pusha
jbe
mov
pop
cwtl
pop
out
iret
sbb
popa
dec
push
sbbl
testb
push
mov
mov
pop
int
push
cs
pusha
push
pushf
pushf
adc
std
negb
inc
movsl
mov
adc
push
fs
inc
cmpsb
sbb
jns
shrb
stos
int
notl
ljmp
call
loop
cs
xchg
inc
addr16
mov
test
fwait
imul
lds
adc
cmp
add
das
or
aam
cli
cmc
fs
imul
or
adc
pop
or
test
or
faddl
imul
xor
inc
mov
ja
push
insl
or
in
mov
xor
cs
test
lods
inc
icebp
and
popa
lret
push
or
xchg
dec
roll
pop
shl
xchg
fidivrl
repnz
lods
mov
push
loop
lret
rolb
adc
insl
pop
movsl
xchg
xchg
add
out
mov
clc
xlat
dec
pop
inc
negb
or
test
cli
leave
mov
ret
mov
pop
xchg
rorb
js
mov
mov
xchg
or
pop
push
mov
jae
xor
fldenv
ljmp
pusha
scas
fwait
cltd
cmp
dec
cltd
dec
in
fdivrs
dec
jl
sahf
push
divl
adcl
adc
push
cmpsb
add
cli
xchg
pop
mov
xchg
mov
lods
sub
sub
push
or
insl
add
out
push
in
sahf
fsubs
push
ljmp
mov
es
pop
pop
dec
mulb
std
cmp
jle
in
push
xchg
fstl
inc
ret
or
dec
leave
jno
fcomi
pop
in
xchg
add
int
icebp
pushf
shrb
push
add
xor
inc
cs
pop
ret
cmc
xchg
ja
xchg
insl
cmp
or
cmpb
int
mov
in
adc
inc
out
lock
and
arpl
cmpsb
mov
mov
popf
movsb
push
das
mov
inc
jl
inc
adc
outsl
push
pop
inc
sbbl
cmp
adc
arpl
fstpl
cwtl
cmpsl
lret
dec
pop
and
cmc
adc
jb
mov
bound
and
pop
inc
movl
or
xchg
sarl
test
test
nop
repnz
add
adc
imull
or
mov
stc
sub
mov
addr16
sbb
fstps
cmc
call
jno
mov
adc
xchg
pop
cmp
lahf
std
pop
es
inc
aas
lahf
mov
iret
testb
repnz
add
test
test
or
das
fcmovne
xor
lahf
push
sahf
ficomps
into
inc
mov
pop
bound
popa
jo
xor
jge
xchg
ja
mov
imul
rcll
xor
add
div
iret
ljmp
into
mov
aaa
mov
imul
leave
cmp
clc
push
aas
loopne
mov
out
outsb
and
cwtl
out
pushf
mov
and
dec
sbb
shl
mov
test
xchg
cmp
pop
iret
in
pushf
mov
sbb
cwtl
scas
je
mov
scas
ss
inc
pop
cmpsb
mov
pop
mov
and
jns
bound
cmp
add
xchg
mov
sbb
flds
notb
enter
pop
or
push
mov
arpl
mov
adc
jg
shlb
fdivs
adc
outsb
push
or
dec
lret
mov
mov
out
arpl
arpl
je
xor
xchg
or
data16
aad
xor
lret
shld
into
mov
jo
rolb
shl
jnp
ja
dec
in
adc
xor
dec
fnstcw
or
lods
in
sbb
pop
push
push
and
push
test
lret
mov
cld
insb
mov
in
in
fucomp
sbb
enter
pop
pushw
roll
push
es
jp
push
inc
mov
incb
sub
and
sbbl
lods
jle
adc
add
rorb
sub
xor
pop
push
lahf
xchg
mov
fcmovbe
jmp
daa
sub
adc
xchg
test
insb
jg
push
push
addb
xor
insl
jmp
gs
fs
add
adc
cld
je
sub
push
mov
js
jae
stos
std
rcll
adc
sahf
lock
test
scas
mov
push
push
repz
rcll
mov
cmpl
or
or
mov
insl
jl
test
clc
insb
mov
cmp
mov
pop
je
pop
outsl
mul
lea
out
pop
inc
pop
shl
jmp
in
je
cmp
mov
dec
dec
hlt
mov
pop
inc
cmp
xchg
or
fistpl
daa
fcoml
xchg
mov
divb
sbb
or
pop
pop
fs
mov
cmp
das
repnz
fldenv
call
pop
jns
xor
push
push
or
push
mov
adc
jae
xor
call
inc
loop
pop
jle
dec
pop
adc
arpl
and
bound
add
cmp
imul
fcmovbe
push
std
xlat
dec
dec
mov
cmp
fwait
xor
xor
inc
xchg
mov
and
push
pop
outsl
sbb
dec
call
lea
mov
rcrl
lret
and
xchg
fisubl
and
imul
push
out
jmp
loop
stos
insb
push
lds
jl
or
sub
sbb
mov
mov
xchg
jns
sbb
pop
in
adc
adc
jl
out
push
dec
jge
mov
mov
push
aam
pusha
in
mov
add
mov
mov
xor
mov
lret
lahf
jns
xor
aas
ljmp
pop
xor
mov
dec
cli
cmp
in
bsr
jg
cmpsb
cmp
xor
dec
repz
js
xor
sbb
sbb
es
pop
xor
inc
rcrl
iret
pop
insl
xchg
and
mov
add
mov
or
jae
nop
repz
jnp
adc
repz
xor
incl
or
mov
loope
lret
add
lock
shrl
dec
mov
xchg
mov
fstps
jmp
jp
pushf
jb
adc
add
add
ss
fs
xor
jnp
or
mov
mov
pop
or
jae
jge
lea
das
xchg
adc
inc
adc
jge
dec
gs
lock
ljmp
push
scas
lea
test
cmpsl
in
in
cmp
mov
mulb
mov
mov
sbb
jno
ret
mov
and
jecxz
mov
loopne
icebp
mov
mov
jnp
push
cmp
xchg
std
add
or
cmp
mov
fisubl
sbb
mov
pop
push
inc
lods
fdivs
inc
jmp
in
or
add
xor
mov
enter
xchg
jno
inc
inc
lods
rol
lods
dec
cbtw
push
mov
mov
call
push
insb
testl
jae
call
mov
cmp
sbb
inc
or
sbb
bound
daa
mov
scas
pop
imul
lods
outsb
mov
push
js
mov
insb
test
or
lds
test
mov
or
adc
je
imul
jmp
dec
xchg
mov
mov
mov
lcall
notl
cmp
xchg
je
cmp
cli
sub
movsl
clc
sti
sbb
xor
addr16
xor
loopne
adc
push
cwtl
data16
inc
inc
out
adcb
add
ret
push
addr16
ljmp
jo
daa
int3
orl
mov
mov
dec
rorl
es
and
rclb
push
adc
sub
and
xchg
movsl
lcall
stc
adcl
stos
test
shrb
mov
mov
or
cmp
cli
sub
ja
xchg
mov
inc
imul
push
outsb
mov
data16
scas
adc
ret
jo
loopne
repnz
xchg
sub
jmp
out
adc
test
cmp
int
rorl
insb
add
jae
lds
shr
fsts
std
stos
dec
fidivrl
lret
mov
test
dec
xor
cmp
lcall
arpl
cmpsl
xchg
lods
adc
push
pop
dec
scas
mov
jne
jno
orl
jbe
fcomi
jae
popa
daa
pop
push
lds
ss
lret
xchg
adc
test
int3
ja
out
mov
rcr
push
sbb
adc
jne
aaa
mov
test
bound
scas
adc
xor
and
movsl
sbb
mov
fidivrs
add
fcoml
mov
stos
repnz
inc
lahf
xlat
pop
icebp
mov
aad
aas
mov
jne
jmp
pop
fs
xor
jb
xlat
pop
repz
insl
inc
xor
push
xchg
popa
test
fcoml
jo
repz
jnp
mov
and
lock
rolb
adc
cli
fldenv
xor
and
fadd
pop
pop
or
pop
sbbb
xor
andl
stc
fstps
jb
push
lds
cmpl
add
and
mov
imull
mov
xlat
fs
arpl
negb
sahf
icebp
mov
test
ds
int
cmp
mov
and
sti
ss
cmp
in
mov
rcl
frstor
sbb
pop
adc
xor
dec
fistl
jmp
xor
jbe
cwtl
sub
dec
mov
xchg
inc
loope
in
pop
inc
cmp
cwtl
adc
cmp
mov
test
in
mov
movsb
fidivrl
fld
shll
enter
push
mov
dec
les
jg
push
mov
imul
adc
dec
push
add
xor
mov
movsl
clc
jecxz
add
mov
adc
loopne
out
inc
test
fdiv
jecxz
mov
cwtl
or
js
xchg
add
ret
mov
in
dec
lret
or
push
test
in
mov
dec
stc
lcall
jmp
mov
xorb
lcall
push
and
in
fwait
stos
adc
rcl
mov
mov
ja
dec
in
and
shl
loope
xchg
popa
push
or
in
bound
out
js
pushf
jecxz
xlat
push
mov
das
mov
test
sbb
xchg
push
shlb
mov
in
cmp
push
adc
add
or
outsl
jo
dec
in
jbe
and
incl
pop
out
sub
mov
dec
ja
sbbl
jmp
rcrl
inc
out
ja
scas
mov
incl
int3
in
mov
andl
data16
cli
or
jmp
xor
hlt
movsb
insb
sbb
pop
iret
pop
lret
xchg
jmp
xor
sti
cmp
pop
xlat
xchg
push
adc
xchg
mov
and
xor
ret
aaa
jl
faddl
add
mov
lret
shrl
sahf
add
cmp
add
or
arpl
add
and
sbb
fwait
ljmp
bound
mov
and
cmp
lods
stos
cwtl
add
fildl
ret
ds
jmp
rol
aam
jo
and
xor
das
movsb
cwtl
aam
outsl
dec
rcll
pop
push
fwait
insb
aas
jge
lret
jmp
push
and
insl
push
movsl
out
mov
xchg
jb
mov
leave
mov
mov
sbb
imul
ds
fildl
stos
jecxz
stos
sub
inc
aas
jle
and
push
mov
xor
push
or
test
lret
xor
ljmp
cmc
push
jbe
adc
xchg
xor
in
add
insb
jle
insb
out
mov
push
or
dec
sub
cmp
loope
xor
pop
pop
fwait
jns
sub
xor
inc
push
mov
mov
jecxz
inc
lods
jg
xchg
out
cmpb
aam
out
int
shll
and
loopne
lahf
sti
lcall
popa
and
xlat
sbb
or
mov
adc
cmpsl
jge
dec
mov
lock
xchg
aam
push
xchg
push
push
stos
clc
fisubrs
cmpsb
jmp
jg
pop
xchg
mov
test
in
insl
out
dec
inc
dec
inc
sahf
loop
aad
aas
xchg
mov
jae
or
pop
xchg
push
push
jne
nop
dec
push
jns
loope
xchg
in
pop
pushf
mov
jecxz
rcll
dec
mov
cltd
loop
cmpsl
sub
xchg
add
xlat
mov
ljmp
test
fdivs
aaa
adcb
dec
lcall
pop
ss
xchg
aam
rcr
arpl
addl
and
sbb
push
shr
push
popf
das
icebp
xchg
fimuls
pop
jne
repz
dec
add
ret
test
mov
xor
or
outsb
mov
ljmp
fs
dec
ds
or
dec
sbb
lock
rcr
mov
mov
jp
xchg
imul
cs
or
pop
fisttpll
int3
mov
mov
es
fldcw
and
xor
xor
std
dec
divl
pop
xor
mov
or
outsl
aad
imul
pop
dec
and
shl
and
sub
cli
lret
push
es
enter
pop
xor
out
jae
insb
sahf
push
pop
push
mov
and
mov
jo
jle
inc
test
xchg
out
lret
mov
out
xchg
mov
call
dec
jmp
cmp
inc
jo
lcall
outsl
addr16
in
movsb
loope
stos
and
stos
jno
jge
rcrl
ret
call
bound
fistpl
inc
mov
roll
mov
hlt
push
in
mov
aam
insl
mov
add
cli
cmp
mov
pop
mov
cs
mov
sbb
pop
push
sar
out
push
cs
jmp
push
adc
sbb
mov
mov
scas
push
xor
dec
or
jg
addr16
mov
fcom
out
sub
mov
sbb
add
sub
cwtl
push
in
xchg
out
lods
jbe
adc
popf
stos
xor
rcrl
sub
aaa
xlat
dec
mov
jle
shrl
pop
mov
and
aam
sub
test
or
movsl
push
and
cs
mov
sbb
cmc
stos
sbb
mov
gs
or
push
push
or
ret
add
cltd
mov
cmpsb
or
leave
inc
mov
and
bound
pop
jl
in
jnp
cltd
cmp
push
and
push
or
out
adc
jo
inc
mov
and
adc
pop
out
imul
push
jo
das
xor
jl
into
addl
sbb
sbb
jnp
inc
xchg
cmp
cltd
push
aad
fs
mov
sub
mov
cmp
push
lret
call
cmp
in
in
mov
push
aad
adc
jbe
rcr
push
push
inc
lret
ds
pop
pop
xchg
hlt
sar
inc
add
lcall
fisubrs
dec
mov
rorl
dec
mov
push
mov
lcall
lcall
dec
push
and
je
stc
inc
pop
inc
scas
ja
add
mov
icebp
xor
test
dec
jle
inc
in
pop
cmp
es
jo
mov
add
mov
sbbl
xor
out
ret
into
testl
mov
std
sahf
in
jne
sub
and
add
data16
or
pop
stc
pop
add
adc
stc
mov
in
adc
dec
or
xor
and
mov
adc
xchg
or
push
cmc
mov
lahf
mov
jae
repnz
aad
sub
xchg
mov
les
push
mov
xchg
dec
push
push
bound
imul
inc
xchg
or
sub
in
cmp
mov
sub
js
pop
pop
mov
xchg
xchg
or
icebp
mov
ds
repz
pop
sbb
cmp
sti
insl
adc
or
or
add
mov
loop
or
pop
jmp
inc
mov
mov
mov
pushf
mov
fistpll
cmp
and
mov
jb
mov
ja
mov
repz
maskmovq
imull
mov
mov
dec
sbb
out
jbe
push
jns
sub
std
jmp
fisttpl
add
int3
int
inc
popa
stos
sbb
mov
pop
mov
inc
test
stc
cmp
xchg
xor
in
lret
aad
adc
push
ss
fdivrl
jb
mov
sub
xchg
adc
dec
inc
cli
mov
sub
pop
mov
fxtract
lds
stc
sub
cmp
mov
enter
jo
fldenv
pushf
test
cld
ljmp
sbb
out
les
cltd
rol
xchg
aam
push
xchg
mov
out
pop
sub
lds
mov
nop
les
mov
stos
adc
fcompl
add
dec
and
je
xor
or
dec
mov
mov
xlat
lods
xchg
xor
ret
sub
ret
stos
les
outsb
xchg
xchg
pushf
das
mov
push
pop
aas
or
pusha
inc
aaa
sub
cmp
cmpb
daa
es
lret
jl
into
or
idiv
mov
test
pop
fidivl
jle
sub
ss
fiadds
adc
push
inc
inc
sbb
test
mov
movsl
mov
push
mov
mov
addr16
push
dec
sahf
outsb
jne
dec
jno
sahf
scas
dec
fstpt
add
loopne
push
in
loope
xor
pop
and
aaa
sub
pusha
fcmovbe
jbe
inc
sbb
lock
cld
pop
or
and
stos
in
jp
iret
scas
sub
mov
lret
scas
jge
xchg
out
daa
fcmovb
ret
imul
inc
jnp
lahf
outsb
jge
sti
idiv
cmp
sti
xchg
mov
dec
fcompl
mov
xchg
or
or
xchg
add
pop
gs
pop
cs
push
push
xor
jnp
repnz
pop
cmc
pop
sbb
xor
loop
add
stos
es
mov
dec
add
aas
jg
adc
fsubr
jbe
rcll
mov
mov
aad
test
push
or
int
jge
int3
jl
fnstenv
cmp
int
jp
inc
jmp
fs
std
push
fwait
popa
pop
mov
addr16
push
popa
andl
pop
mov
cmp
inc
or
pop
stos
inc
add
jp
adc
outsb
fwait
sbb
mov
or
test
lds
lods
ret
mov
arpl
jle
jb
adc
dec
push
ret
xchg
mov
or
movsl
scas
stos
sub
add
ret
sti
pop
sbb
jge
pop
movsl
mov
inc
ds
pop
cmc
jecxz
mov
adc
sub
mov
pop
lret
add
scas
jmp
fldcw
call
mov
xchg
push
push
or
inc
cmp
iret
add
sub
dec
mov
mov
jo
xor
outsl
ljmp
mov
push
pop
xchg
lods
nop
repz
push
mov
xchg
adc
xchg
repnz
jp
jmp
mov
cld
jbe
mov
xor
mov
add
push
test
pusha
movsl
push
jmp
push
mov
cmpsb
das
mov
js
pop
pop
mov
je
loopne
push
out
jb
push
push
pushf
push
cmp
inc
dec
cli
xchg
add
les
jl
sbb
cltd
aas
xlat
push
shl
shrl
mov
add
add
lahf
cmp
add
jecxz
fistpll
jbe
pop
loopne
cld
inc
loop
stos
sub
arpl
add
pusha
add
ss
hlt
in
lods
rcrl
orl
or
cmp
push
lret
add
test
jmp
sti
test
sub
hlt
jecxz,pn
or
and
es
add
lret
pop
dec
mov
mov
jp
in
push
dec
cmp
mov
imul
jecxz,pn
mov
dec
scas
fcompl
xchg
adc
ret
dec
nop
sbb
inc
adc
insb
inc
mov
sub
test
pop
sahf
jp
cmp
pop
adc
sub
xchg
or
push
xor
xchg
add
dec
setne
cld
fsubl
aad
xlat
lret
out
inc
adc
mov
dec
or
push
mov
in
cmp
push
pop
or
cmp
xchg
cltd
fsubrl
xchg
inc
in
pusha
outsl
pop
inc
loopw
xchg
cmpsl
mov
and
mov
aad
test
jp
mov
xchg
cmp
scas
lock
jmp
sbb
push
sub
jbe
cmp
inc
nop
cmp
push
xlat
orb
add
jns
ret
cmc
repnz
fldenv
mov
movsl
int
fcmovb
pusha
into
sub
hlt
mov
jp
std
das
dec
out
rorb
mov
jne
sti
pop
push
mov
add
and
xchg
lods
imul
lcall
fistps
std
fucomi
bound
mov
inc
inc
dec
test
jne
or
pop
les
imul
ss
adc
int3
fcompl
fdivr
pop
lods
inc
outsb
xchg
je
add
sbb
mov
xchg
enter
xchg
and
testl
cmp
iret
inc
andl
xor
or
jecxz
out
add
jbe
sbb
add
notl
outsb
jmp
cmp
mov
xlat
xorb
shlb
rcll
sahf
in
lretw
xchg
es
mov
cmp
test
adc
mov
add
ret
in
rorb
mov
xchg
mov
sub
xor
fistpl
adcb
pushf
cmp
mov
dec
and
pop
scas
clc
push
insl
jnp
call
dec
les
jnp
ljmp
gs
dec
dec
jp
push
stos
orl
push
mov
xchg
xchg
mov
imul
dec
sbb
inc
push
lds
scas
andl
add
dec
push
shll
addr16
icebp
sub
ss
test
popf
jns
sar
test
or
sbb
nop
cmp
stos
or
dec
stos
sbb
mov
in
cmp
repnz
mov
xor
push
jno
test
push
bound
jge
mov
les
pop
out
xor
imul
movsb
fisttpl
inc
mov
add
adc
push
xchg
cmpsb
mov
sub
push
mov
pushf
pop
jmp
shl
lret
data16
xorl
xchg
mov
cmpsb
sub
add
out
dec
jmp
mov
shlb
pop
and
and
addr16
pusha
inc
mov
adc
mov
out
es
sarl
add
mov
jl
sbb
test
sti
std
mov
lds
test
mov
lret
adc
sbb
mov
stos
and
xor
xchg
xchg
xchg
xchg
out
psubb
xor
in
inc
push
xchg
xor
lcall
outsl
das
test
add
fdivl
out
mov
aaa
sbb
jle
aaa
push
inc
fldenv
sbb
cmp
jmp
out
jne
ret
dec
std
cmp
or
sub
xchg
leave
add
sbb
sub
or
js
xchg
jb
cmp
aas
xchg
rolb
add
mov
and
pop
mov
loopne
ljmp
icebp
adc
mov
mov
add
sbb
ja
jle
sbb
stc
or
dec
lret
sub
incb
imul
adc
adc
test
movsb
pop
stos
enter
loop
jl
or
adc
loope
pop
or
mov
sti
xchg
std
push
rcrb
fwait
insl
std
sub
sbb
cmc
push
dec
outsb
pop
sbbb
inc
jns
outsl
pop
xlat
xor
or
ja
xchg
js
mov
mov
pop
jl
xor
push
sub
aas
fnstcw
sub
push
into
mov
or
xor
inc
aaa
adc
and
sub
jbe
loopne
lods
push
cli
mov
sub
inc
ror
in
mov
mov
mov
push
lahf
fcomi
mov
cld
addl
mov
or
pop
inc
sub
xor
xor
mov
cld
cmpb
push
fldln2
cli
pop
cltd
pop
push
call
nop
dec
mov
das
mov
sub
dec
pop
inc
xchg
push
mov
leave
or
adc
push
mov
lea
jns
jg
insb
cmpb
jmp
adc
test
sbb
mov
inc
sbb
xlat
enter
scas
and
arpl
pushf
jl
lock
loop
int
pop
repnz
push
sbb
mov
or
out
push
mov
cmp
cmpps
sarb
outsb
loop
out
test
jns
out
loop
push
push
fucomi
sbb
cmpsl
dec
jb
pop
or
dec
insb
xor
lods
cmp
enter
fstpt
jmp
fmulp
pop
pop
addr16
inc
arpl
pop
fnstsw
pusha
xor
rorl
push
push
cld
jne
adc
dec
stc
std
add
loope
pop
mov
pop
fmul
mov
mov
ficompl
daa
dec
cmpl
ja
iret
add
jge
enter
mov
in
test
repz
and
mov
push
subb
ds
jnp
rcrb
add
xor
mov
stos
xchg
rcl
ljmp
inc
in
mov
fnstsw
and
shl
jge
fwait
loope
fldcw
fs
ficomps
push
xchg
outsb
mov
hlt
out
lahf
fisubrs
dec
lds
std
hlt
push
dec
out
xchg
inc
js
fisubl
mov
out
fstpt
cmpsb
cmc
or
test
mov
lret
in
sbb
push
mov
int3
mov
rcll
movsb
cmpsb
xlat
faddl
dec
add
or
mov
cmpsb
js
push
nop
fstp
adc
imul
les
adc
dec
jns
pop
outsl
push
xchg
sbb
push
mov
pop
insl
cmpsl
or
pushl
pop
jge
cmp
sbb
insl
pop
sbb
dec
push
jecxz
jns,pt
negb
and
xchg
popaw
stos
mov
jge
or
fistpll
xor
popf
rorb
cli
add
or
adc
xchg
push
pop
sahf
dec
or
jae
fidivs
xchg
scas
mov
cmp
lahf
add
pop
outsb
movsb
test
andb
mov
sbb
cmp
sti
mov
scas
call
icebp
insb
and
sbbb
sub
int3
in
mov
jp
out
lds
xorl
inc
mov
ffreep
test
sub
mov
lea
xchg
sub
xchg
lret
outsl
aaa
and
out
nop
add
inc
jbe
nop
sar
dec
pop
pop
imul
repz
stos
cmp
aam
js
shll
scas
cli
test
adc
xchg
pop
repnz
adc
ret
cmp
lret
pop
aad
es
out
ljmp
pop
xor
icebp
mov
out
xor
jnp
xchg
pop
rorl
pop
xor
pop
fsubp
sar
add
pop
push
xorl
pop
scas
lds
or
pop
sbbl
cwtl
pop
out
pop
and
test
dec
mov
jmp
fistpll
mov
add
sub
lock
repz
add
out
andl
cmp
test
or
ficoml
fcmovb
pushf
popf
movsl
cmp
inc
lcall
jo
push
aam
in
addr16
mov
push
mov
sbb
and
imul
hlt
mov
aaa
jo
cld
xchg
sub
pop
arpl
mov
pop
pop
or
addb
bound
xchg
sbb
or
enter
mov
js
xchg
popf
shlb
sete
shll
or
mov
std
mov
test
jne
rcrl
daa
call
call
pop
mov
aas
mov
sti
mov
sahf
push
rol
adc
pop
arpl
mov
jmp
xor
fs
scas
jne
mov
pop
sbb
push
xchg
js
lods
mov
jge
and
sbb
push
cli
fmul
test
jmp
and
lret
enter
dec
xchg
aaa
bnd
hlt
lock
fistpl
mov
out
test
cmpsb
jg
inc
movsl
sub
ss
in
addr16
sbb
pusha
inc
cwtl
xchg
jb
fwait
push
int3
es
and
aam
mov
fldenv
in
lahf
mov
fbstp
outsb
insb
jno
iret
jecxz
ljmp
cmp
pushf
mov
xchg
add
sbb
add
jb
lods
das
jne
jl
mov
mov
inc
jae
cmp
pop
cmp
js
pop
ljmp
add
mov
xor
add
loopne
pop
sub
shlb
mov
arpl
cmp
out
or
repz
xchg
cmpsb
sub
pop
arpl
mov
and
inc
xchg
das
cltd
repz
cld
cmpsb
xchg
jl
lcall
int3
stos
pop
sub
mov
test
jae
pop
roll
cmp
andl
xlat
dec
movsl
or
jp
push
out
ret
repz
stos
xchg
or
cmpsl
cmp
dec
in
jle
stos
stos
push
mov
gs
fcom
bound
cmp
sahf
xchg
into
inc
ja
sub
int
push
sbb
cli
and
mov
hlt
mov
mov
inc
mov
dec
scas
pushf
mov
out
sbbl
mov
inc
jae
sbb
dec
xchg
dec
adc
movsb
push
mov
stos
inc
or
jp
int3
mov
mov
push
insl
xchg
insl
push
cmp
sbb
cmp
sub
jp
and
ds
sbb
mov
sbb
sbb
sbb
sti
shlb
pop
ficompl
pop
adc
push
sbb
xchg
test
jbe
mov
testl
inc
out
cmpsb
adc
jl
out
push
cmp
xchg
jl
js
mov
mov
aaa
bswap
jg
sbb
in
xchg
loopne
bound
jg
lock
enter
andl
aad
test
push
std
into
aas
ja
inc
inc
int
xchg
orl
pushf
test
push
or
scas
push
cmp
mov
pop
std
hlt
mov
ljmp
adc
mov
jge
outsl
push
das
adcl
or
jecxz
and
pop
ss
pushf
imul
leave
loop
mov
imul
mov
inc
xchg
mov
push
fwait
test
adc
fiadds
hlt
jecxz
testl
ss
pop
lods
dec
aam
mov
dec
xchg
adc
mov
xlat
loop
repnz
sti
mov
mov
loop
pop
cwtl
bound
inc
test
jp
sti
sbb
gs
add
xchg
cmp
xor
in
push
adc
push
mov
mov
push
addr16
repnz
shll
add
jmp
icebp
dec
jnp
out
pop
loope
adc
mov
inc
sub
lea
inc
bound
adc
inc
adc
mov
and
call
inc
sbb
mov
out
repz
out
outsl
clc
cwtl
out
int3
lods
push
sahf
jbe
fidivrs
mov
pop
and
fnstsw
and
ljmp
std
scas
ret
sbb
jo
aas
adc
repz
mov
add
mov
and
lock
test
adc
lret
push
ljmp
mov
arpl
aam
mov
lods
inc
cltd
fucomi
ss
push
aam
daa
ds
daa
fmulp
pop
jg
jmp
or
inc
adcb
or
or
pop
lods
ficoms
inc
jmp
dec
repz
push
xlat
jne
xchg
push
sub
leave
xchg
add
arpl
or
pop
cmp
jmp
mov
outsl
into
inc
orl
adcl
pop
setle
pusha
jle
shll
mov
add
add
popf
out
xchg
addr16
jb
cwtl
js
xlat
outsb
push
cs
inc
sbb
add
lods
pop
lods
mov
in
xor
rcrl
mov
mov
aas
mov
fucom
fldt
arpl
pop
and
push
stos
fdivl
mov
push
jle
pop
aaa
pop
add
add
jecxz
vsubpd
pop
nop
and
mov
int
or
dec
adc
repz
mov
dec
xchg
jae
adc
pop
mov
std
cli
adc
inc
inc
mov
andb
in
push
add
xchg
popa
clc
sub
xor
mov
cmp
pop
pop
mov
adc
add
xor
js
es
push
sub
jb
jae
bound
push
pushf
fcomps
adc
add
pop
sbb
jns
fimuls
fldl
or
add
dec
dec
jae
xlat
push
mov
js
push
or
lock
jp
test
lods
cmp
inc
ret
mov
jo
in
imul
inc
fstpt
xlat
sbb
mov
mov
out
cmp
lods
mov
sbb
fucomi
lcall
mov
xlat
jb
mov
push
pop
in
je
loope
lea
jp
add
out
cs
imul
cmp
test
mov
dec
arpl
js
and
loop
push
or
shlb
nopl
push
test
mov
lcall
sub
movw
sub
rcrl
cld
lcall
push
xor
add
int3
jb
fsubrl
sub
or
pop
int3
pop
clc
jl
popa
jmp
adc
push
xlat
xchg
jo
nop
fldl
inc
or
in
incl
push
xchg
outsb
iret
imul
scas
mov
popf
sbb
push
mov
push
bound
jg
add
mov
cmp
shr
sbb
and
fldenv
mov
push
ja
inc
sub
jmp
adc
roll
pop
stc
leave
add
xchg
mov
cmp
int
sbb
lock
or
add
repz
pop
aas
jnp
xor
dec
test
inc
push
jecxz
xor
leave
xchg
fisubrs
iret
lahf
cmp
shlb
push
popf
xchg
xchg
xlat
push
mov
mov
fs
xchg
cwtl
dec
insl
stos
push
cmp
fildl
rorl
xchg
cwtl
push
rolb
push
dec
jecxz
call
test
aas
outsl
pop
jnp
pop
enter
ja
pop
fimull
jne
aam
repz
imul
inc
add
idiv
sub
xchg
dec
roll
cmp
repz
lea
mov
addr16
fiadds
ret
and
inc
push
shrb
aaa
jnp
jp
lahf
mov
mov
inc
xchg
sub
sbb
outsl
dec
mov
lods
sub
imul
mov
fdivrl
jg
movsb
mov
hlt
insl
dec
and
ret
mov
xchg
cmc
testb
les
xchg
int
and
fimuls
jo
jbe
loope
cmc
in
push
popa
xchg
cmpsb
jne
xchg
jl
xor
adc
dec
adcb
std
in
jmp
adc
icebp
loope
sbb
dec
pusha
adc
jle
stos
cmp
pop
push
jb
mov
popf
mov
enter
mov
rorb
jno
insb
stos
imul
aaa
adc
pop
lods
dec
push
and
sub
and
xor
push
push
lods
clc
lods
clc
lcall
cmp
call
and
pop
sbb
shll
or
stc
lea
or
cmc
daa
push
push
popf
push
and
in
mov
mov
jle
orl
inc
jp
fneni(8087
addr16
adcb
jno
or
mov
push
adc
mov
iret
cmp
jae
adc
enter
js
subb
gs
inc
pop
mov
and
mov
mov
mov
mov
xorl
mov
xchg
ljmp
cmc
shrl
dec
sbb
js
push
sbb
adc
lret
xchg
mov
dec
lret
dec
out
or
and
or
or
mov
in
lock
mov
test
pusha
jl
xchg
in
xlat
sbb
out
adc
add
imul
mov
add
jbe
outsb
movsl
mov
shl
xchg
jb
add
dec
mov
bound
test
out
mov
test
lea
sub
repnz
sub
les
adc
push
fdivs
pop
sbb
in
into
sub
pop
push
les
push
int
gs
lahf
dec
pop
cmpsb
pop
in
cwtl
cmpsb
xor
push
in
mov
cmp
hlt
xchg
lcall
cmp
cli
jbe
decl
mov
add
xchg
pop
xchg
push
shl
add
js
push
or
ss
cmpb
test
das
xlat
dec
dec
fdivrs
data16
stos
or
or
mov
pop
repnz
les
inc
lret
insb
sti
das
fstpt
cmpsb
ds
cmp
sysenter
fcompl
xchg
lock
pushf
inc
movsl
adc
loope
xchg
daa
push
jns
sub
xchg
xor
repz
pop
push
outsb
jb
int
test
in
jno
outsb
cld
add
inc
pop
int
push
rcll
push
push
push
in
mov
aaa
fisubrs
das
xchg
dec
jle
js
popa
jo
leave
cli
icebp
cli
adc
and
xor
in
cmp
loopne
pusha
in
and
roll
dec
insl
cmp
pop
test
push
xor
loopne
xchg
cwtl
push
icebp
pop
mov
mov
daa
and
push
xor
mul
stos
int3
jno
popf
and
in
xchg
sti
aaa
inc
stos
pop
or
mov
insl
sbb
sub
jnp
push
xchg
aas
stc
ret
or
das
rorl
fwait
aad
sbb
iret
gs
add
or
add
mov
es
out
and
and
sbb
je,pn
push
adc
fcompl
lcall
adc
out
or
mov
rcll
stos
adc
mov
sbb
out
stos
sar
lret
xchg
xchg
cmp
pop
dec
and
iret
scas
jmp
sbb
ljmp
jb
or
mov
xorl
sbb
adc
cmpsl
ljmp
scas
push
es
sub
push
out
movsl
mov
lahf
sub
jmp
jbe
mov
rclb
orl
xchg
mov
je
popa
dec
into
out
aaa
loopne
rcll
mov
inc
xchg
and
xchg
fsubrs
fwait
push
push
aaa
cmp
jb
sti
push
mov
jae
xchg
sti
mov
or
push
push
cmpl
or
and
mov
pop
subb
ret
aad
lock
mov
out
adc
mov
mov
xchg
fnstenv
push
psrld
dec
ret
lods
ror
daa
inc
pop
mov
cmp
jmp
jmp
jg
movsb
push
cwtl
out
bound
xchg
cmp
xor
movsb
xor
je
cmp
in
in
push
shlb
pop
hlt
mov
movsl
rcrb
dec
pop
lahf
push
jnp
ret
rcrb
movsl
xchg
cmp
out
mov
std
addb
jne
xchg
addr16
mov
hlt
loop
je
lds
jno
clc
stos
sub
pop
cmp
rcl
push
pop
inc
dec
ja
in
push
add
scas
pop
fst
sahf
jnp
mov
and
andb
shrb
mov
scas
pusha
outsl
sub
popf
xchg
out
fmuls
sub
sub
mov
inc
inc
sbb
mov
inc
sbb
daa
jle
fistl
adc
into
jl
mov
xor
add
push
daa
ret
and
sbb
jb
in
push
cmpsb
test
andl
jmp
add
inc
mov
pop
mov
jnp
cmp
mov
icebp
sti
and
sub
gs
inc
jge
mov
rclb
fimull
jecxz
xchg
inc
and
cli
les
xchg
adc
hlt
mov
out
les
mov
sub
aam
xchg
sti
xor
pop
and
dec
push
jo
scas
in
jmp
gs
das
jmp
jbe
inc
movsl
into
flds
sub
out
pop
mov
jp
sub
loope
rcl
stc
or
xchg
icebp
xchg
jp
dec
std
rcrb
test
ljmp
cmc
outsl
jne
push
out
dec
jb
aad
xchg
add
das
mov
push
test
add
lret
mov
ja
dec
adc
int3
push
adc
jno
inc
mov
sarl
push
push
push
pusha
push
movl
jle
and
mov
or
add
xchg
pop
test
test
sub
push
xchg
sub
cmp
adc
insl
ret
sub
ja
loope
das
jne
enter
rolb
in
or
cmp
out
test
mov
loope
and
or
cmp
movsb
xchg
sbb
arpl
xor
push
loopne
jno
stc
inc
and
hlt
jae
and
mov
es
or
xlat
lret
stos
in
stc
mov
pop
sarb
aad
pop
popf
sarl
mov
jg
mov
lcall
cmp
call
jecxz
inc
data16
mov
or
int
sti
int
jne
add
bound
test
into
pop
pop
sbb
hlt
adc
mov
ja
mov
lcall
or
xchg
mov
lods
popa
mov
mov
cmc
jg
lods
jb
inc
add
xchg
xorl
sahf
or
js
mov
jl
cld
inc
into
popl
cltd
xor
adc
xchg
fisubrs
jne
pop
cmp
lahf
lahf
xor
jo
in
push
and
movsl
outsb
lret
or
fwait
push
std
inc
pop
lods
push
mov
xorb
mov
pop
aad
inc
mov
sbb
shrl
insb
sub
dec
xchg
cmp
je
add
dec
jnp
push
fisttps
scas
std
negb
imul
jno
les
xchg
or
sub
into
stc
in
sub
xchg
push
jno
mov
pop
pop
icebp
xchg
cmpsl
mov
pop
aad
dec
push
xchg
mov
cli
mov
orb
adc
aas
push
and
pop
cmp
jl
rcll
and
out
out
inc
xchg
fstpt
xchg
push
xor
push
rcrb
push
inc
inc
mov
mov
push
adcb
sbb
and
in
mov
sti
das
mov
or
out
xor
jae
pop
xchg
frstor
popa
mov
in
inc
addr16
xchg
fwait
pop
ja
sub
bound
sub
test
mov
adc
cs
mov
ljmp
adc
cwtl
mov
dec
mov
xchg
sub
mov
mov
mov
add
jl,pn
xchg
mov
mov
sbb
add
cmp
loope
xrelease
cmp
shll
cmp
jns
int3
mov
or
inc
sub
aaa
aas
adc
push
xor
add
lods
adc
pop
sbb
mov
std
push
sub
insb
lret
rclb
mov
pushw
sahf
or
mov
shlb
imull
pop
cmp
negb
jno
push
lock
incb
aaa
mov
stos
dec
xchg
clc
aaa
pop
mov
les
arpl
sub
fadds
mov
outsl
jae
dec
ficoml
imul
sub
imul
and
repnz
and
add
push
stos
mov
lock
dec
dec
dec
or
cmp
test
imul
mov
sub
sub
jno
rclb
jns
mov
add
imul
insl
add
in
aaa
sub
push
push
mov
cmc
roll
out
movsl
mov
test
mov
mov
xchg
push
addr16
pop
mov
loop
push
pusha
and
inc
xchg
jg
mov
insb
nop
adc
mov
or
pop
cmp
mov
mov
xchg
out
sub
jp
sub
inc
cli
popa
push
mov
push
int
add
test
mov
cltd
or
lcall
sbb
popa
call
mov
les
or
dec
sbb
mov
mov
and
jo
in
ret
fsubl
push
sub
incb
or
xlat
mov
popa
pop
cmp
int3
out
dec
insl
outsl
fildll
mov
loope
adc
lcall
aas
and
mov
push
jns
lahf
arpl
jl
movsl
outsl
ret
xchg
push
sti
inc
loope
cli
xor
jbe
cmp
cwtl
jnp
xor
loopne
fcoms
mov
pusha
mov
mov
jne
push
in
cs
popa
xchg
mov
or
test
scas
xor
fdivrs
and
xor
xor
xchg
clc
adc
jecxz
and
sbbb
xor
lods
adc
ds
dec
mov
lahf
dec
sbb
xchg
inc
adc
mul
mov
dec
faddl
mov
xchg
and
fiaddl
jg
push
sub
arpl
pop
xor
ljmp
xor
jp
jecxz
push
push
inc
fiadds
cs
popf
outsb
bound
mov
aad
push
js
lahf
cmp
jle
mov
add
pop
mull
jo
sub
jne
out
cmc
outsb
mov
out
jg
mov
add
stc
cld
xchg
repnz
jbe
push
mov
or
ror
pop
lret
or
sub
aas
fildl
pop
xor
test
call
cmpsb
xchg
adc
mov
and
pop
jg
mov
inc
sbb
xchg
js
xchg
leave
call
or
std
cltd
pop
add
mov
jmp
pop
scas
and
mov
movsb
pop
clc
mov
xor
push
xchg
sbb
stc
sub
insl
inc
mov
aam
orl
nop
and
cld
mov
mov
push
bound
adc
movsl
out
push
and
add
and
pop
mov
or
push
jecxz
inc
aam
mov
inc
cld
ret
xor
popl
mov
pop
das
stos
cmp
int3
dec
les
pop
pop
or
aas
lds
imul
cmpl
jbe
jge
inc
push
cmp
pop
ds
outsl
and
push
leave
hlt
push
movsb
pop
lock
shl
jae
hlt
pop
mov
pop
and
or
mov
xchg
mov
cmp
or
pop
xchg
add
dec
stc
jmp
into
notl
and
jne
dec
jl
cmp
mov
xchg
scas
sbb
jge
pop
mov
inc
lret
stos
sbb
or
ja
fsubp
aas
ja
inc
jle
sarb
mov
cli
imul
es
mov
inc
das
cli
mov
mov
popa
mov
mov
fimull
sub
xor
fisubrl
xor
xor
ja
mov
dec
testb
fidivrl
cmp
dec
xchg
or
fsts
push
out
push
lds
pop
add
rcll
push
inc
decl
lea
lret
mov
cwtl
and
dec
xchg
jb
sub
jg
test
pusha
movq
stc
loopne
dec
aaa
dec
push
outsb
push
imul
dec
add
in
cld
fwait
dec
imul
cmpsb
fmul
out
es
push
and
shlb
rcl
test
out
mov
int3
sbb
cmp
mov
mov
out
movsb
mov
mov
or
and
imul
aad
or
mov
dec
jmp
add
aas
rcrb
adc
sahf
idivb
int
or
mov
jo
in
out
subl
mov
push
stos
icebp
cmp
pop
jg
ret
call
pop
stc
cs
inc
sub
push
sub
xchg
sbb
cmp
add
sub
mov
pop
cltd
and
in
cmp
jb
std
lods
xorb
mov
cmp
push
lea
cwtl
stos
repz
sbb
daa
xchg
jp
jge
out
fistpll
mov
inc
push
cwtl
pop
and
leave
add
jmp
ljmp
mov
aaa
sarb
shr
scas
xchg
in
jb,pn
sub
mov
pop
and
cltd
jl
adc
jmp
setbe
adc
stos
mov
xlat
xchg
nop
mov
mov
mov
insl
push
into
in
sub
jns
pop
xorb
push
mov
pop
push
or
aas
xchg
jecxz
push
popa
in
shll
loopne
mov
sbb
sbb
mov
mov
xchg
push
sahf
sbb
dec
or
icebp
jmp
orl
jbe
addl
addr16
add
loop
sbb
mov
mov
xchg
or
sbb
push
mov
push
push
popf
clc
xor
sub
in
in
xor
fucomi
test
mov
or
mov
cmp
outsl
and
jl
sub
popf
cli
push
cmp
addl
sub
fcomp
cmp
sbb
outsl
xor
pop
gs
jne
mov
cli
cmpsb
cld
jbe
dec
sub
pop
dec
inc
sbb
pop
in
xlat
mov
xchg
rorl
movsl
dec
sarl
call
pop
insl
mov
lahf
adc
mov
stos
xchg
sub
loopne
pop
movsl
jecxz
xchg
and
dec
aas
inc
out
nop
stc
fs
mov
shll
dec
inc
and
popf
dec
cmp
test
xor
adc
ss
cltd
outsl
call
xlat
jae
idivl
pop
pop
gs
shll
cmp
jg
insb
cltd
xor
outsl
cmp
or
or
inc
cmp
or
lahf
scas
dec
dec
js
sbb
outsl
dec
jno
sub
iret
pop
dec
xor
sub
jne
test
jl
decl
cld
pop
lods
int3
fdivl
or
mov
rcr
push
jno
sti
and
pop
mov
pop
sbb
inc
inc
cmp
sarb
fisubrs
insl
notl
add
push
cwtl
call
fmull
lods
movsb
jg
jno
movsl
adc
lds
nop
fildll
xchg
adc
mov
inc
add
cmp
and
loopne
cmc
dec
fidivrs
fs
cmpsl
stos
repz
jle
inc
hlt
shld
cli
mov
aam
mov
jge
fcmovne
and
bound
push
cld
adc
mov
js
dec
sub
mov
xor
mov
addr16
or
out
cld
cmp
mov
arpl
outsb
mov
adc
sub
inc
inc
cmc
xchg
xchg
repnz
push
and
stc
cltd
movsb
jmp
movsl
in
sbb
ret
xchg
inc
or
test
dec
loopne
jo
lods
xor
call
fprem1
iret
push
xor
loop
pop
push
sub
adc
push
sbb
pop
inc
mov
xchg
fsubrl
mov
and
sbb
repnz
loop
imul
arpl
add
loopne
outsb
outsb
sarb
pop
add
arpl
sbb
call
lcall
shl
fsubl
pop
or
fsubrp
sbb
mov
ret
rorb
ds
int3
inc
rolb
sub
aas
sub
xchg
outsb
jno
les
clc
shll
stos
and
mov
mov
ret
mov
xchg
mov
pop
xor
sub
out
mov
shrl
sbb
sub
mov
scas
adc
push
sub
adc
or
es
mov
push
lods
adc
faddl
sbb
push
add
sbb
xor
aaa
in
jnp
fstpt
shll
leave
pop
mov
fsubl
push
xor
in
inc
sub
jno
sbb
and
mov
jae
jmp
mov
add
fadd
pop
stc
repnz
adc
sub
xor
test
cmpb
jecxz
or
sbb
clc
adc
xchg
dec
loopne
jbe
sub
leave
dec
xor
mov
lcall
add
push
fisttpl
xchg
push
lcall
pop
outsb
loopne
dec
incl
out
ss
xchg
push
out
xchg
pop
clc
hlt
les
movsb
push
daa
xor
sbb
rolb
out
out
and
adc
xchg
sti
pop
push
inc
add
mov
mov
fcmovb
lea
lds
pop
arpl
shll
lea
inc
sub
jg
iret
sbb
jg
lea
rol
int3
mov
mov
insb
xchg
and
aad
in
ljmp
add
dec
jo
xchg
arpl
push
popa
inc
iret
xchg
shll
mov
sub
xchg
dec
cmc
notb
in
jns,pt
dec
pop
add
std
in
cmp
adc
xchg
insb
leave
dec
mov
inc
inc
clc
lds
mov
aaa
ret
out
shll
jecxz
sbb
insb
push
push
cmp
adc
loope
imul
out
sahf
or
enter
xor
dec
xor
sarl
shrb
inc
lods
mov
es
dec
dec
daa
int
imul
pop
iret
pop
imulb
pop
inc
inc
mov
mov
or
pusha
pop
jns
jns
scas
inc
adcb
shrb
test
inc
cmp
stos
sbb
push
mov
xchg
jle
sarl
das
mov
xor
out
add
push
cmp
jae
movsl
xchg
push
push
test
mov
ljmp
add
xor
xchg
pop
clc
add
push
dec
popf
push
cmpsb
inc
cmp
cs
push
rcrb
cmp
sub
cvtps2pd
pop
sar
xor
ja
mov
push
push
push
out
mov
je
loope
int
ret
cltd
cmp
xchg
fdivr
cli
mov
cmp
cmp
jnp
mov
shr
in
inc
pop
or
mov
les
jmp
fwait
pushf
inc
gs
mov
pop
imul
fsubrs
hlt
fiadds
mov
fsubp
push
daa
lods
icebp
cmp
dec
push
rcr
nop
cmpb
fstp
aam
pop
icebp
repz
in
nop
lret
call
pop
test
fisubrl
rorb
mov
fisubl
bound
setae
scas
dec
sbb
or
rcrl
ret
add
andb
mov
inc
repz
xor
sbb
fidivs
push
mov
das
adc
xor
jne
inc
pop
dec
adc
push
xor
jbe
adc
sub
pop
loope
test
imull
mov
jae
outsl
cmpsl
ret
sti
clc
mov
cld
jmp
lcall
mov
jae
sub
sar
fs
dec
outsb
mov
enter
xor
mov
inc
filds
sbb
sahf
push
cmp
mov
test
cli
pop
or
mov
dec
movsb
push
in
outsb
scas
push
pop
mov
or
xchg
push
mov
adc
push
add
pushf
rep
dec
jbe
xchg
sub
fsubrl
test
lret
imul
inc
cwtl
dec
cltd
xchg
mov
sbb
and
fidivs
sub
aas
sbb
addr16
outsl
into
push
out
rcrb
and
mov
loop
sub
jo
push
cmp
fidivs
and
add
cmpsl
or
xor
leave
cli
outsb
std
outsb
lea
test
leave
mov
jmp
mov
lods
pop
cmpsl
cmpsl
adc
sub
pop
into
sub
sub
dec
int
hlt
adc
dec
dec
outsl
add
fwait
cmpsl
clc
jg
in
hlt
xchg
adc
xchg
dec
hlt
inc
mov
rcrb
out
push
push
out
mov
mov
lcall
shll
add
add
cwtl
outsl
xor
jge
popa
xchg
pop
jg
out
in
mov
and
jecxz
lcall
fsts
stos
stos
mov
mov
sbb
iret
repz
add
add
js
lock
or
sbb
dec
js
incl
xchg
stos
sti
cs
out
jno
mov
pusha
pop
mov
pop
sub
adc
leave
cli
data16
push
mov
gs
xlat
pop
or
jno
inc
cld
out
ficoms
pop
std
mov
or
dec
test
insb
push
mov
mov
cmp
add
dec
cmp
imul
mov
out
dec
mov
mov
in
insb
pop
mov
push
mov
mov
pop
cli
cmp
movsb
pop
xchg
fmul
mov
cmpsl
nop
lahf
inc
jge
fildll
movsb
pop
jg
xchg
gs
jl
out
cltd
lods
cmc
jns
mov
and
dec
roll
mov
cli
xor
push
dec
in
mov
and
xchg
xor
sbb
cli
push
ret
mov
push
adc
jmp
add
mov
sub
in
repnz
adc
jge
xchg
lcall
push
sbb
sub
call
push
ror
in
jl
add
or
out
rcrl
sub
and
repnz
or
mov
inc
mov
or
ud2
shll
aad
movsl
inc
icebp
pop
pop
cmpsl
stos
sbb
dec
cwtl
roll
aas
ja
repnz
xchg
imul
mov
dec
adc
mov
leave
push
push
xchg
and
cmpsl
xor
sub
cs
cmp
jmp
dec
iret
mov
dec
push
jae
cld
out
cli
int3
fadds
jbe
adc
repnz
push
sub
push
movsb
sub
out
inc
hlt
jo
and
scas
add
stc
pop
mov
sub
fdivs
outsl
push
cmp
pop
pop
cmp
or
test
sti
rorl
mov
pop
fstps
loopne
jp,pn
adc
adc
mov
pop
xor
inc
int3
sub
push
stos
std
add
das
mov
jp
xor
adc
sbb
loop
mov
out
push
mov
pop
or
rcrl
aad
cmp
push
ljmp
pop
negl
mov
loop
out
xchg
lahf
daa
rorb
sbb
push
aad
cmp
sbbl
or
mov
mov
fmul
inc
rcll
nop
sbb
cld
lcall
pushf
pop
and
inc
lds
js
movsb
cmp
mov
cmpsb
or
pop
mov
pop
push
add
pop
mulb
loopne
fwait
lock
mov
cmp
inc
and
dec
outsb
lret
push
dec
je
and
into
mov
fisubs
in
and
ss
frstor
xor
sub
and
pushf
arpl
pop
pop
push
or
sbb
les
loop
imul
stos
fbstp
jo
xchg
push
sarl
jg
mov
pop
pop
sub
aam
test
dec
mov
lods
mov
out
pop
jge
xor
jae
dec
mov
pushf
daa
dec
mov
push
cs
mov
pop
xor
push
cwtl
aas
rclb
dec
popf
jp
pop
aam
movsb
fwait
xor
aaa
sub
sub
add
dec
nop
fwait
scas
xor
out
jp
test
hlt
arpl
repz
fsub
mov
mov
cmp
frstor
adc
sbb
pop
in
cmc
test
cltd
push
out
and
movsl
pop
inc
ljmp
push
add
test
sbb
xor
sti
sub
daa
mov
aam
push
push
pop
sub
adc
pusha
mov
inc
add
int
cltd
mov
aam
inc
jns
scas
aaa
ljmp
rcr
mov
lret
nop
cltd
stc
daa
inc
outsb
jnp
ljmp
ss
cli
adc
pop
adcb
push
sbb
cmp
and
movsb
idivl
popl
adc
in
shll
sbbb
mov
xchg
or
add
jae
inc
sub
lret
mov
enter
jno
cmp
mov
sbb
cmp
popf
lods
mov
or
mov
push
enter
dec
rcrb
jl
test
sbb
movsl
int
nop
push
pop
outsb
fcom
idivl
pop
inc
outsb
jp
xor
shrl
xchg
outsb
je
add
push
mov
dec
sub
std
test
mov
push
push
xor
mov
xor
jae
push
outsl
mov
shlb
cmp
push
jae
aam
adc
jecxz
adc
cmpsb
push
push
sub
mov
test
ds
inc
in
xchg
sti
inc
inc
add
xchg
testb
mov
xchg
push
dec
repnz
aas
mov
push
push
fucomip
push
jb
pushf
jns
mov
loopne
inc
pop
je
xchg
pop
shlb
nop
push
add
push
es
xchg
not
hlt
adc
pop
pop
jbe
lret
lret
cmp
dec
jl
sbb
add
inc
dec
pop
sbb
loopne
mov
push
and
sti
in
idivl
ret
imul
add
aas
aaa
and
cmp
outsl
js
pop
rcl
divb
dec
aaa
sub
jne
sbb
pop
mov
daa
arpl
jmp
add
mov
hlt
xchg
jne
movsb
bound
lret
out
sbb
push
or
or
xchg
jno
mov
fcmovne
cmp
xchg
mov
xchg
in
lea
in
out
jae
pop
adcb
rorl
ret
cwtl
adc
sbb
lods
mov
add
jg
fldcw
fs
add
adc
mov
push
push
addr16
jb
sahf
arpl
sbb
shl
sub
jle
sbb
dec
xchg
aam
fcmovbe
ficomps
sbbb
jae
ljmp
idivl
shr
xchg
ret
jne
cli
add
lock
test
bound
pop
lcall
out
jo
inc
cmp
jb
jae
mov
mov
aad
addl
ja,pt
ss
xlat
mov
xlat
mov
mov
sbb
push
mov
or
xlat
pop
xchg
cli
test
dec
out
sbb
outsl
mov
push
mov
aam
sbb
mov
cmc
hlt
mov
mov
or
or
int3
mov
push
dec
pop
mov
insb
pop
insl
int
mov
jo
fdivr
js
dec
add
iret
adc
lds
push
subl
xchg
jnp
xor
jecxz
inc
jbe
jl
jle
fwait
stc
scas
pushf
call
mov
pushf
hlt
add
xchg
loope
data16
xchg
jge
jno
push
popf
in
shll
adc
mov
rclb
pusha
int3
sbb
arpl
stos
xchg
adc
fsub
jl
dec
and
sbb
mov
out
dec
cwtl
or
je
inc
lcall
movsl
loope
idivb
or
js
mov
dec
xor
imul
inc
sub
add
lea
or
and
jl
lret
cmp
clc
mov
lods
in
repnz
fprem1
mov
jg
fcmovnu
andb
ret
iret
or
jno
mov
cli
jns
cmpsl
int
loop
adc
icebp
or
repnz
test
push
pop
jnp
int
sbb
mov
mov
sub
clc
inc
pop
add
pop
adc
push
adc
icebp
in
xor
mov
ror
fiaddl
mov
push
je
enter
mov
push
dec
mov
xchg
pop
cmpsl
mov
push
mov
xor
dec
adc
adc
mov
test
ljmp
adc
add
xchg
out
dec
std
fs
sbb
mov
xor
xchg
popf
sub
fmul
lret
scas
push
aam
test
dec
sti
dec
repnz
inc
cwtl
pop
leave
mov
jg
shrb
sub
das
stos
repnz
pop
cmp
add
adcl
jnp
mov
inc
adc
nop
push
sbb
mov
push
fdivs
xchg
xchg
movsb
dec
lret
xchg
inc
dec
loopne
add
cmp
inc
adc
jbe
sub
clc
loopne
xchg
shrb
into
xor
outsb
imul
mov
xor
jne,pt
icebp
mov
stos
cmp
xorl
into
data16
and
mov
xor
dec
xchg
sub
rorb
jecxz
fisttpll
fsts
sahf
popf
xchg
inc
gs
jl
jmp
insb
sub
ljmp
jo
xor
mov
aam
mov
call
outsb
ficoml
lods
stc
push
scas
js
scas
dec
mov
push
adc
jl
jle
popa
sbb
jmp
and
fst
outsb
insl
insb
sahf
xchg
rcrb
cwtl
ja
scas
mov
mov
inc
sub
sub
fs
mov
lret
cmp
fistps
sbb
rcll
xor
clc
jbe
cmc
mov
out
mov
or
out
ss
jne
mov
daa
das
rcl
decl
push
lret
lret
pop
rorb
cmp
mov
and
andl
ss
shlb
ret
pop
mov
inc
lret
push
fcoml
xor
movsl
std
scas
mov
in
fistpl
repnz
jbe
jae
mov
addb
aad
ret
mov
pop
add
or
fcmovnu
into
out
xor
and
xchg
dec
xchg
or
dec
jl
inc
jmp
jns
repz
hlt
jp
clc
mov
xor
icebp
mov
iret
sbb
loopne
enter
add
cmp
and
mov
ljmp
mov
pop
faddl
out
and
gs
addr16
xchg
xchg
push
jns
iret
andb
mov
adcl
into
cmpsl
dec
rorl
ja
push
dec
sbb
jp
lods
mov
stos
jecxz
mov
mov
rol
and
dec
fnstenv
xchg
dec
es
fwait
leave
jecxz,pn
mov
jl
enter
cmp
lcall
push
addr16
jb
out
xchg
cmp
jmp
leave
xor
push
add
lds
jae
inc
mov
bound
bound
fsubl
push
xchg
pop
ja
adc
push
loopne
push
push
mov
pop
jmp
add
mov
imull
mov
push
and
ss
mov
pusha
jbe
jmp
jb
push
out
divl
clc
insl
scas
icebp
leave
jae
adc
imul
js
es
or
sar
sbb
mov
sbb
xchg
in
mov
or
add
daa
xchg
adc
adc
sbb
lret
scas
mov
push
fbld
insl
push
jmp
ljmp
mov
fcmovne
mov
outsb
add
mov
rorl
mov
adc
push
lcall
push
add
out
add
mov
movsl
and
cmpsl
xchg
in
insl
mov
in
test
dec
outsb
mov
mov
fwait
xchg
lods
pop
adc
in
fdivrp
shrl
mov
daa
mov
iret
xlat
movsb
fldt
shll
inc
push
mov
adc
shlb
nop
xchg
icebp
cld
mov
aas
dec
inc
push
jb
push
pusha
sbb
stos
jg
push
mov
adc
out
xchg
inc
fucomp
cmp
clc
out
sbb
sbb
xor
mov
adc
jg
xor
rcll
pusha
hlt
cmp
mov
adc
jl
ja
pop
sbb
cmp
mov
jb
js
rorb
fcom
jae
sar
mov
mov
arpl
push
jb
add
fildll
ds
or
jae
in
addb
mov
outsl
imulb
mov
ds
mov
sub
lods
dec
sahf
push
lea
mov
add
sbb
mov
lcall
cmpb
dec
lret
out
pop
inc
pusha
aam
fimull
cld
ret
js
push
lahf
loope
jg
xor
mov
mov
pusha
imul
dec
mov
sub
ljmp
push
popf
sbbb
pop
hlt
fldcw
push
shrb
movsl
movsb
inc
lcall
xchg
jmp
shlb
jp
mov
pop
in
test
dec
shlb
in
xor
xor
fdivrl
xor
rolb
push
cmp
cwtd
ret
pop
jae
push
jle
aas
shll
adc
xchg
arpl
shrb
jne
adc
cltd
movsl
rolb
xchg
outsb
loopne
fiadds
push
aaa
dec
mov
pop
ret
adc
xchg
lret
pop
rcrb
popa
fdivrl
xchg
daa
les
mov
sbb
adc
jno
xlat
jb
bound
loop
pushf
lcall
dec
repz
rcll
ret
add
jo
sbb
pop
iret
dec
inc
cli
sub
mov
iret
rolb
mov
fs
add
fildll
mov
mov
lret
push
test
movsl
jg
mov
arpl
out
in
mov
push
or
push
mov
xor
xchg
rcrb
mov
cli
fs
jle
ja
or
aaa
add
popf
imul
int3
jmp
mov
pop
bound
das
stos
jae
mov
jbe
sbb
dec
push
hlt
ljmp
enter
jg
inc
sub
or
cmp
mov
lock
sbb
mov
mov
adc
in
popl
and
adcl
insb
daa
jbe
ds
jbe
jo
fcmovu
orb
sahf
xchg
and
push
xchg
leave
lcall
push
sub
xchg
popa
mov
fs
int3
aas
dec
sub
cli
push
pop
shrl
mov
push
insl
push
cmp
fwait
mov
aas
cmp
das
mov
or
or
xchg
pop
out
jl
sbb
or
gs
pop
decb
mov
jb
fidivl
pop
pop
ficompl
jb
jge
xchg
pop
mov
cli
inc
pop
daa
aad
and
xlat
sti
adc
icebp
and
ret
mov
fcomps
fidivrs
xchg
and
sbb
movsl
and
enter
sbb
jbe
mov
sbb
mov
dec
sbb
shrb
ret
pushf
hlt
fcomps
sub
sub
adc
addr16
into
adc
dec
fsubrs
push
mov
adc
pop
cmpsl
test
mov
call
inc
push
negl
in
push
insb
pop
xchg
xor
fidivl
rcr
js
test
daa
out
mov
cmp
fxch
pop
ret
and
mov
pop
int
nop
lret
lds
and
xchg
das
mov
sbb
sbb
data16
cmp
fsubrl
cmp
stos
dec
hlt
inc
sarb
cwtl
adc
je
jne
mov
cltd
test
dec
xor
xor
stos
divl
or
repnz
lret
push
xchg
lods
lea
inc
fsubrs
test
or
mov
loope
mov
insl
and
jl
mov
adc
rol
fbld
dec
ret
inc
popa
cld
xlat
popa
cltd
icebp
fmulp
xchg
mov
push
pop
mov
push
lret
pushf
add
or
push
idiv
mov
xchg
aaa
fmul
jno
sub
pop
test
or
add
push
movsl
out
ja
js
jne
cltd
out
or
dec
popa
andl
inc
dec
adc
jge
sbb
sub
and
cwtl
jle
dec
or
jl
mov
mov
cltd
in
xchg
xor
stos
cmpsb
adc
jge
xchg
mov
mov
jg
nop
mov
cs
xor
sti
xchg
shrb
lahf
ret
push
xor
xor
cwtl
test
pop
out
mov
scas
xchg
jae
hlt
bound
adc
jnp
push
pop
xchg
shrl
or
jecxz
or
push
dec
test
aas
frstor
sbb
imul
cmp
movsl
sub
repz
sbb
pavgw
in
push
sub
loop
xchg
add
lock
and
mov
lea
dec
dec
daa
mov
outsl
mov
adc
scas
xor
adc
popf
cmp
add
push
and
mov
imull
dec
ss
mov
jno
lcall
ljmp
xchg
xchg
dec
adc
jae
adc
enter
inc
scas
cmp
xchg
xchg
scas
jp
push
adc
lds
pop
mov
mov
roll
imull
jbe
pop
cmc
jl
ret
daa
lock
adc
loopne
out
bound
mov
xor
addr16
adc
inc
xchg
aas
sahf
int
icebp
fsubrl
addr16
push
jmp
pop
xor
mov
cmpsl
lahf
cmp
push
in
daa
jge
xlat
lock
lods
ficoml
or
repz
stos
mov
lods
shlb
adc
imul
mov
adc
adc
adc
cli
inc
adc
cmp
push
mov
pop
out
mov
or
pop
test
jae
in
push
sub
int
jg
lock
pusha
mov
cwtl
and
add
mov
mov
adc
mov
fisubs
push
dec
ficoml
test
dec
lds
rorl
adc
push
or
mov
popf
jb
dec
mov
adc
push
lea
xchg
cmp
loop
jge
addb
inc
cmp
jb
pop
mov
in
dec
pusha
xchg
lds
xchg
dec
iret
mov
jmp
push
fstpl
or
pop
push
fdiv
jno
out
inc
dec
sbb
cmp
xchg
xor
fidivrs
shlb
fists
dec
xchg
popf
fisttpll
leave
das
mov
std
adc
or
or
dec
jg
mov
subl
lods
dec
pop
mov
and
gs
cmp
mov
loope
mov
popa
or
mov
sbb
popa
or
clc
dec
pop
rcll
sub
leave
xor
pop
js
stos
inc
outsl
mov
pop
jecxz
sub
sbb
cmpb
sbb
hlt
imul
enter
es
dec
push
repz
ret
fisubl
sti
mov
cwtl
sbb
daa
cmp
mov
mov
stc
push
in
les
inc
jne
int
int
mov
inc
sub
sub
xchg
fs
imul
push
pop
dec
lret
mov
lods
mov
mov
jmp
dec
sbb
es
fnstenv
jbe
addw
adc
and
pop
imul
cmc
stc
mov
or
xor
xor
mov
xchg
dec
add
mov
mov
push
push
mov
mov
repnz
or
fisubs
dec
jno
xlat
pop
repnz
and
dec
pop
mov
jmp
scas
mov
or
xlat
jo
mov
inc
sti
addl
mov
fwait
mov
outsl
in
jmp
insb
test
mov
movsl
mov
jbe
lahf
mov
call
int
lahf
fnsave
xor
shlb
pushf
xchg
int
imul
stos
dec
data16
inc
add
xor
mov
mov
mov
insb
mov
xchg
das
cmpsl
nop
leave
or
dec
fwait
lea
dec
dec
popl
xor
xor
pop
in
adc
sub
ret
ret
jp
cmp
sbb
nop
mov
xchg
mov
mov
jnp
fwait
pop
jle
addr16
sub
hlt
mov
aas
sarl
mov
jb
push
clc
pop
popf
jecxz
push
mov
xor
lret
lret
test
adc
ljmp
loopne
push
xor
pushf
mov
mov
inc
lret
stos
xchg
jbe
push
pop
int
lret
cmp
insl
inc
mov
fsubl
in
fsubrs
and
pop
stc
cmc
lds
xchg
rcrb
push
cmp
pmulhuw
inc
out
test
ja
aad
xchg
pop
aaa
mov
pushf
mov
mov
mov
gs
repnz
jbe
mov
sbb
xchg
loope
sbb
mov
sbbb
jne
mov
in
xor
out
sahf
jecxz
clc
push
xor
pop
jbe
mov
subb
jl
xchg
push
push
imul
pop
negb
xor
xchg
jg
in
fistpll
data16
mov
data16
pop
jle
mov
cli
xlat
lahf
pusha
jo
faddp
sbb
jl
mov
xchg
sub
mov
sub
insl
xchg
fildl
push
fildll
fiaddl
lret
xor
je
sbb
push
xor
stos
rcll
jnp
jno
popl
dec
pop
adc
in
jnp
xchg
ljmp
ret
imul
xor
icebp
dec
test
pop
outsb
pop
ljmp
in
imul
out
xor
das
cmpsl
mov
mov
jnp
daa
ret
cmp
inc
cmpsb
fisubl
add
and
outsl
lret
push
push
ljmp
outsl
insl
fsubrs
jb
test
shl
mov
sub
loope
jb
pushf
xchg
or
mov
les
insb
pushf
jb
adc
int
ret
ljmp
fidivrl
jns
std
jbe
ljmp
pop
push
adc
das
arpl
stos
pop
mov
xchg
cli
loop
loopne
fisubs
ds
push
aas
stc
imul
lcall
fwait
push
std
in
sbb
xorb
mov
imul
xchg
in
dec
pushf
pop
and
pop
cmp
mov
cltd
pop
inc
test
pop
push
dec
push
shlb
aam
andl
push
xor
inc
adcl
inc
pop
insl
imul
clc
jl
into
jne
push
pop
dec
je
movsb
aad
out
xor
mov
stos
imul
fisttpl
int3
jb
mov
fwait
cmc
popa
or
push
addr16
das
outsb
pop
sub
push
xor
cs
inc
in
xchg
and
out
inc
out
cmp
pushf
imul
and
dec
jne
add
lcall
xchg
pop
movsl
insb
insl
jbe
and
lret
cwtl
inc
mov
dec
outsb
sbb
gs
xlat
mov
cwtl
test
rcl
pusha
cwtl
rep
or
jle
add
loop
shlb
lret
xchg
push
in
pop
or
mov
cwtl
pop
xchg
adc
cmpl
aad
mov
fstps
sahf
imul
jl
pop
divl
jnp
ret
and
push
addw
arpl
jb
jo
mov
dec
dec
insb
and
arpl
stos
jge
sti
push
jbe
jmp
lods
cltd
mov
push
shlb
repnz
data16
lret
xchg
shlb
mov
popa
mov
jg
mov
shlb
lock
mov
add
adc
cwtl
pop
and
mov
cmp
xchg
fistl
inc
dec
mov
pop
dec
add
dec
into
push
sub
je
popf
int
add
add
inc
loop
push
sub
mov
push
mov
xchg
jg
adc
jns
push
pop
and
lods
aas
clc
out
movb
call
inc
xchg
sub
pop
loopne
popl
insl
fnstcw
mov
jns
adc
clc
cmp
das
sub
mov
lods
mov
sub
jl
hlt
loope
aam
push
pop
fcoms
ja
ljmp
jne
dec
test
jae
aad
adc
call
stc
mov
into
mov
pusha
imul
mov
mov
cmpsb
mov
mov
repz
pop
mov
imul
xchg
lret
add
adc
or
dec
pop
cmpsl
insl
xor
ret
adc
inc
loope
mov
lcall
push
incl
and
inc
push
jne
mov
adc
movsb
fldt
fisubs
call
push
out
fisubs
jmp
adc
lock
pop
popa
cli
pop
add
push
clc
ficomps
lcall
adc
sub
es
iret
aad
add
or
popa
loop
repz
inc
push
xchg
mov
jecxz
lods
xchg
nop
cwtl
fldcw
push
or
dec
dec
fs
fldcw
notb
repz
cmp
mov
in
test
mov
fstps
xchg
sbb
loop
pop
xchg
xchg
gs
or
test
aad
stos
in
jl
push
jge
push
cmp
out
pusha
dec
test
inc
imulb
sub
and
test
scas
adc
cld
dec
xchg
in
inc
inc
add
repz
out
mov
mov
sti
push
inc
movsb
lret
jns
nop
mov
sti
incb
jle
mov
lods
in
pop
add
sbb
and
sbb
into
pushf
in
push
jns
or
imul
cmp
mov
aad
push
mov
nop
inc
mov
inc
and
push
dec
out
pop
dec
sbb
jl
xor
sbb
shl
jae
cs
fbstp
out
loop
sarl
mov
xchg
mov
sbb
movsl
stc
not
lret
fists
lret
cmp
sub
fcoms
push
push
je
sbb
out
and
cmp
mov
lret
outsl
aas
ds
jmp
aad
repnz
hlt
rclb
cltd
pop
and
stos
test
xchg
xchg
mov
jmp
xchg
cmpl
gs
xor
int
je
dec
mov
pop
sbb
cmpl
into
sub
movsl
sub
add
dec
addb
mov
shl
gs
jae
aas
mov
aaa
loopne
scas
mov
xchg
pop
mov
xor
stos
scas
popa
fisttpl
or
daa
test
std
and
mov
xor
mov
es
xorl
iret
and
or
mov
mov
int3
in
cmp
stc
mov
dec
inc
or
or
cmp
ja
call
jmp
aaa
xchg
lods
bound
xchg
jmp
jmp
add
adc
cmp
xor
outsb
stos
lock
pop
and
test
repnz
sar
xchg
cwtl
in
movsb
pop
hlt
test
cmp
test
outsl
inc
lods
clc
sub
sub
xor
aas
inc
xlat
cmpsb
push
push
and
inc
mov
mov
das
add
insb
mov
xor
mov
test
sub
data16
fidivl
and
out
outsb
je
movsb
cwtl
ja
movl
es
mov
inc
sub
mov
stos
cmp
mov
sbb
or
cmc
call
rcrb
mov
ljmp
xchg
sbb
lods
or
and
mov
repnz
in
aaa
dec
int3
int3
and
cs
cli
push
scas
fdivrs
test
addl
mov
loop
movzbl
clc
jo
bound
loop
jge
ja
push
add
inc
xchg
fnstenv
enter
lods
mov
fidivrl
roll
sub
mov
push
push
push
shll
xor
loope
rolb
mov
xorl
mov
addr16
shll
pop
imul
mov
sarl
enter
mov
decl
and
or
cltd
dec
out
cld
xor
push
inc
not
inc
pop
pusha
inc
cltd
or
es
inc
clc
inc
sbb
shlb
mov
pusha
ror
dec
imul
add
dec
cmpsb
cwtl
mov
push
out
xor
ret
jno
inc
sub
pcmpgtd
pop
das
xchg
imul
pop
adc
cltd
jl
adc
jg
int
mov
test
fbld
inc
mov
xchg
sbb
mov
jb
xor
cmp
mov
pop
call
push
fcoml
sahf
pushl
or
scas
pop
jge
rcrl
add
int
sub
ss
and
in
adc
sub
or
and
pop
cld
push
push
ror
call
stos
xchg
test
jge
test
mov
rcl
cmpsl
inc
icebp
jo
xchg
xor
jmp
adc
in
dec
pop
pop
cmp
in
fcmovnb
dec
out
fcoms
scas
sbb
xchg
cmp
js
dec
out
scas
xchg
dec
test
enter
in
hlt
arpl
or
out
lods
aam
les
cld
out
push
mov
stc
lea
pop
xchg
jmp
pop
insl
fstps
fdivp
xchg
ss
loope
pop
pop
pop
fisubrl
lods
jle
xor
cli
inc
fwait
lahf
or
xor
mov
loop
mov
lea
xor
or
xor
or
loop
ret
sahf
outsb
pop
pop
mov
sbb
sbbb
lock
pushf
inc
lret
dec
lock
sbb
out
sub
fcmovu
pop
xchg
scas
xlat
jns
aas
add
sub
add
ret
sub
and
out
lahf
imul
outsl
jmp
push
jne
scas
push
jl
lea
xlat
lea
mov
or
xchg
mov
testb
pop
jg
test
fnsave
xchg
jne
pusha
sub
mov
idiv
push
push
into
insl
jne
and
dec
aas
and
push
xor
and
sub
inc
pop
inc
jge
gs
or
jge
jne
imul
or
dec
jmp
hlt
adc
pusha
leave
js
faddl
data16
mov
xchg
addr16
repnz
jae
cmp
mov
out
nop
cli
mov
sub
push
andl
out
fwait
bound
sub
pop
or
ds
push
cltd
jl
fcomip
xor
sbb
sti
mov
fsubs
add
insb
and
bound
call
xchg
push
in
mov
imul
or
push
sbb
mov
test
mov
mov
imulb
mov
jne
mov
cmp
idivl
cmp
lea
mov
cmc
pop
push
mov
and
sub
outsl
sbb
rcrb
out
push
mov
in
xchg
push
pop
minps
rcll
cmp
sbb
cld
inc
mov
neg
jbe
push
jns
cmc
lock
jle
lret
fistl
in
sub
aaa
pop
repnz
adc
shr
xchg
inc
outsl
cmp
jbe
and
lahf
push
aam
sbb
jae
mov
inc
stos
jp
xor
jecxz
mov
xchg
hlt
mov
fwait
movsl
je
push
out
int3
cmpsl
ljmp
push
sbb
xchg
jb
mov
mov
mov
inc
push
add
dec
enter
cltd
pusha
in
sub
mov
cmp
cmp
mov
lret
or
xchg
pop
add
in
cmpsl
cmp
push
mov
add
sub
push
test
ret
push
loope
mov
sub
add
pop
ret
and
aas
arpl
jge
xchg
sub
jo
fmuls
and
stc
clc
enter
sbb
dec
jne
shr
pop
shl
mov
inc
xchg
ja
out
fldcw
jno
pusha
adc
mov
cld
or
ficoms
test
imul
ja
pop
inc
cmp
mov
dec
testl
push
fsubrl
or
out
imul
inc
push
ljmp
ljmp
je
test
decb
push
mov
fisttpl
jae
mov
adc
dec
dec
ds
jae
test
test
push
std
ljmp
mov
mov
cs
in
aad
and
dec
mov
cli
outsl
sahf
rcrb
cld
xor
sbb
push
cmpsb
iret
ret
data16
nopl
ret
add
push
push
and
test
imul
cmp
test
fiaddl
fmull
xchg
jl
lcall
fists
push
push
adc
inc
adc
push
push
mov
cmp
xor
xchg
loop
and
mul
std
lret
pop
sub
fbstp
mov
fisttps
dec
jmp
mov
jbe
ljmp
ficoms
mov
mov
and
push
and
lods
mov
pop
out
outsl
subb
lea
xor
clc
sbb
cltd
ret
xchg
mov
adc
loope
xchg
insb
inc
outsl
pop
or
rclb
fimull
xchg
lea
ret
fidivrl
or
hlt
cwtl
fldcw
add
jecxz
push
xchg
xchg
dec
fistpl
mov
cmp
mov
imul
jge
push
sub
xor
lret
mov
mov
icebp
and
xor
push
sbb
mov
inc
arpl
dec
push
cwtl
push
mov
gs
pop
mov
ljmp
push
insl
cmp
mov
jle
dec
scas
js
adc
outsb
inc
and
inc
addr16
aam
jg
sub
ds
popf
and
das
mov
movsl
jl
fisubl
cs
jg
fimuls
cmp
adcb
or
mov
enter
daa
push
xchg
adc
adc
daa
call
std
cmp
fwait
lds
nop
mov
fldt
xchg
mov
push
mov
int
loope
dec
imull
adc
ret
add
sbb
insl
sbb
dec
pop
testl
dec
fyl2xp1
jae
loope
pop
xchg
sub
std
xor
mov
jne
dec
push
test
xchg
xor
jnp
lret
cld
stos
sub
fisttpll
dec
lahf
jb
push
je
flds
push
test
jecxz
call
push
mov
mov
outsb
cmc
pop
rcll
hlt
mov
mov
inc
scas
sti
pop
sbb
mov
out
repz
inc
shlb
jne
adc
fdivs
jle
dec
jmp
jmp
cltd
fwait
jmp
loope
loopne
push
outsl
xor
and
das
idivb
adc
cmp
je
sub
xor
mov
dec
das
mov
mov
notl
out
leave
jg
movsl
pushf
xor
mov
cmpsb
xchg
jb
cmp
cmpsb
stos
jne
shufps
inc
push
pop
xchg
int3
scas
out
jge
xchg
xor
xchg
xchg
xchg
add
jg
movsb
xor
or
push
jmp
scas
fwait
insl
pop
add
xor
jecxz
push
les
or
cmpsb
push
loopne
mov
in
movsl
push
nop
xchg
std
pop
ss
cmp
push
mov
sti
xchg
aaa
aas
adc
pop
mov
mov
jmp
dec
inc
shlb
mov
cmp
mov
call
jg
dec
cwtl
sub
sbb
push
lea
shrl
cmp
mov
cmp
dec
test
outsl
dec
cmp
jns
sbb
mov
std
or
cmp
fisttpll
push
cmp
mov
or
xchg
in
mov
or
and
mov
jp
mov
pop
lahf
lahf
xchg
ja
xchg
rcll
cmp
and
dec
cld
fbld
movsl
fs
call
stos
add
fcomps
mov
xchg
arpl
stc
xchg
inc
mov
jo
lods
in
aad
xchg
mov
je
sub
and
icebp
mov
pop
arpl
cmp
add
dec
mov
mov
push
and
xor
jmpw
inc
mov
repnz
dec
outsb
lds
mov
jae
dec
jge
push
mov
inc
mov
xchg
inc
mov
ret
inc
mov
les
jae
push
xchg
lock
aas
rorb
sub
fs
jno
neg
outsl
inc
mov
ror
xchg
addr16
fistpl
lahf
mov
repz
mull
outsb
lahf
dec
loop
mov
daa
mov
xchg
cmp
mov
aaa
xor
and
clc
or
clc
pop
jne
xchg
test
xchg
cltd
leave
sbb
adc
lods
aas
scas
imul
cli
sbb
dec
sbb
arpl
pop
or
sbb
xchg
sbb
loop
imulb
mov
arpl
push
push
test
xchg
js
mov
add
fcmove
cmp
push
or
dec
fldcw
stc
pop
mov
sti
add
daa
and
mov
into
paddsb
loope
in
loope
cmp
xchg
xor
mov
pushf
dec
fmuls
pusha
inc
int3
les
mov
mov
faddp
insb
daa
lcall
icebp
xor
xor
stos
add
out
es
adc
cwtl
push
test
cwtl
mov
jbe
and
sti
mov
ljmp
pop
push
mov
mov
out
sahf
dec
push
lahf
gs
jne
mov
inc
add
in
pop
mov
test
out
push
jne
shl
in
sarl
mov
jmp
sub
mov
stos
mov
pop
aaa
inc
jo
and
cmp
je
lret
and
cld
inc
sbb
insb
jg
jne
aad
ljmp
jle
fwait
xor
js
dec
fimull
and
xchg
sub
jae
iret
and
or
mov
ret
in
mov
dec
dec
jmp
pop
jno
movsl
sub
inc
test
leave
mov
push
popa
push
sbb
dec
add
lods
add
sbb
fadd
push
pusha
scas
nop
cmpsb
xchg
mov
frstor
lcall
pop
test
dec
jnp
in
jae
mov
mov
fcoms
bound
pushf
jae
or
out
aaa
jns
je
inc
addr16
jecxz
in
add
lds
cmp
into
bnd
out
stos
out
daa
dec
adc
into
pop
mov
ret
out
in
cwtl
scas
stos
sahf
sti
cmc
sahf
mov
push
popa
jnp
sarb
shrb
pop
pop
aam
lea
adcb
sbb
adc
sub
test
xor
or
jnp
jmp
minps
mov
sbb
into
jle
imul
ds
xchg
push
cmpb
jge
pop
hlt
adc
or
mov
push
push
leave
push
scas
or
int3
push
imul
ljmp
out
nop
dec
js
lcall
add
sub
dec
jg
mov
add
lea
sahf
lods
mov
xchg
mov
push
lret
cmp
popf
mov
out
sub
mov
ja
mov
std
add
call
push
dec
mov
mov
inc
pop
sub
ljmp
ret
gs
sub
andl
ret
outsb
and
gs
mov
push
je
mov
ret
shlb
test
fistps
push
ret
andl
mov
jo
or
jg
dec
sub
daa
inc
push
shll
pop
cmp
mov
jo
jg
dec
pop
roll
cmp
xchg
fidivrs
add
das
andb
in
and
sub
or
jbe
rcll
jbe
leave
jne
mov
inc
pop
leave
cs
push
mov
xorl
inc
jmp
xor
xor
jbe
fdiv
mov
pop
add
enter
adc
mov
push
insb
stc
aam
mov
sub
call
cmpsl
xchg
lods
stos
gs
je
fs
mov
out
cmpsl
out
mov
scas
repz
xchg
fbld
repnz
and
mov
test
insb
das
hlt
icebp
ror
dec
lahf
sbb
int
sahf
call
and
arpl
out
jp
std
bound
mov
scas
adc
push
lahf
cmc
sbb
or
sub
lods
ret
add
jmp
jl
fidivs
inc
test
xchg
and
cmp
mov
jg
test
cmp
jp
pop
mov
ficoml
jg
and
scas
call
ret
add
adc
sub
cmp
cmp
fistps
jge
imul
xchg
dec
scas
add
enter
call
div
cwtl
pop
cmpsb
rolb
jg
les
push
fsub
xor
rcrl
mov
inc
call
dec
mov
or
add
cld
xchg
pop
pop
orl
addb
sub
popa
push
mov
in
sbb
imul
xchg
jno
and
xor
mov
adc
and
lcall
andl
loop
or
testl
jo
cld
fists
add
mov
iret
push
jl
xor
or
adc
xchg
test
arpl
sub
sbb
jp
fs
cmp
jns
outsb
pusha
pop
or
lea
jo
adc
or
call
and
lock
xor
iret
or
pop
mov
push
xor
repz
push
es
outsb
test
jne
or
mov
jbe
mov
pop
in
fldl
push
imul
leave
mov
mov
dec
js
mov
aad
pop
sbb
jmp
lahf
aas
push
sbbb
push
into
ljmp
insb
inc
jae
stc
fnstsw
in
pop
pop
scas
insb
cmp
daa
loope
add
leave
jb
cmp
lods
sub
in
inc
cli
ljmp
add
sub
les
mov
and
mov
dec
es
fcompl
movsb
in
daa
or
mov
loop
mov
or
mov
shll
jmp
rorb
aaa
sbb
cmp
add
mov
imul
leave
xor
bound
cmp
ss
xorb
push
test
xchg
pusha
mov
scas
les
jp
add
add
push
jmp
cwtl
xor
pop
add
movl
mov
mov
je
mov
gs
lods
jne
sbbl
xor
pop
push
adc
lret
sub
sarl
lock
test
in
push
add
mov
add
out
mov
ja
pushf
test
in
test
push
test
jmp
aad
cmp
push
and
inc
sbb
aas
cmc
gs
mov
mov
lcall
ret
aad
sarb
movsb
std
sbb
loop
andb
add
ficoms
dec
insb
test
lret
xor
mov
lds
fs
repz
mov
and
add
add
xchg
ss
inc
mov
cmp
cltd
mov
out
sbb
jmp
test
xor
sti
leave
xchg
cmp
xlat
xor
mov
mov
inc
scas
adcb
mov
in
clc
sbb
shll
sti
lret
push
ffree
sbb
sbb
xchg
cmc
movsl
push
outsl
mov
movsl
sub
bound
sar
cmpsl
stc
in
mov
sbb
popf
inc
outsl
pop
aaa
in
inc
push
in
push
cmp
push
jbe
cmp
jne
es
out
ficomps
xor
xchg
and
inc
int
xor
in
addl
dec
in
and
and
clc
sbb
jle
movsl
adc
lock
sub
mov
mov
ljmp
out
push
mov
fcomi
in
nop
adc
mov
stos
push
sub
jno
clc
imul
jmp
inc
fs
fwait
inc
xlat
push
jne
push
mov
xchg
jns
ss
jl
and
shr
icebp
cwtl
and
in
cmc
push
ret
cltd
adc
icebp
inc
jg
mov
push
push
jbe
mov
xchg
jmp
dec
jmp
sbbb
mov
lock
sbb
fcoms
push
mov
ds
mov
out
lods
sub
stos
add
jne
jp
or
in
push
add
xor
mov
mov
xor
sti
sahf
mov
or
or
inc
cli
xor
add
mov
sub
loope
jg
jmp
pop
jmp
cmpsl
inc
adc
imull
pop
stc
mov
adc
dec
lock
jnp
mov
mov
push
repz
xchg
adc
rcrl
pop
out
scas
lea
mov
insl
sub
sti
xchg
outsb
xchg
stos
inc
cmp
in
scas
test
icebp
mov
inc
mov
add
mov
adc
cmpsl
sub
hlt
mov
xchg
cmpb
mov
mov
push
xlat
arpl
mov
and
fwait
cld
push
imull
cmpsb
fwait
jg
inc
sahf
mov
aam
jns
add
lret
fs
mov
adc
gs
hlt
push
pop
xor
lahf
or
mov
ret
add
out
aad
outsb
jns
mov
loopne
sub
mov
insl
lcall
dec
fistpl
dec
pop
sub
out
arpl
popa
mov
int3
push
orb
out
test
cwtl
pop
lret
push
pop
mov
mov
in
mulps
ljmp
setg
pop
dec
mov
and
cmp
popa
xchg
add
fdivrl
jo
pop
add
mov
push
icebp
les
jp
or
shll
and
add
mov
pop
fldt
and
mov
sbb
in
ss
xchg
xchg
out
xchg
xor
leave
pop
sbb
cli
add
push
jmp
loopne
and
dec
dec
addl
jmp
push
int
add
fstps
insl
inc
sbb
cmp
aad
das
push
and
jle
loope
push
cmpsb
arpl
adc
movsb
fbld
adc
pop
fmuls
dec
lcall
bound
insb
mov
shl
or
dec
cs
stos
aaa
std
fisubl
add
inc
int
jl
in
add
out
add
cli
sahf
popa
pop
movsl
inc
call
je
inc
bound
inc
les
add
movd
cmpb
xor
aam
jne
push
pusha
mov
add
imul
popa
ret
scas
or
and
in
int
notb
sbb
sbb
push
and
scas
dec
jmp
leave
cltd
mov
pop
pop
add
loopne
add
mov
nop
mov
or
subl
popa
cmp
into
mov
mov
cli
loopne
stos
in
inc
or
andb
and
dec
aad
sub
cld
mov
jl
popl
mov
in
pop
adc
call
sub
xor
mov
dec
imul
pop
lock
pusha
sti
dec
aas
sbb
cmp
adcb
out
fadds
lret
fmull
stos
mov
into
cmp
loope
jno
addr16
or
jmp
add
add
outsb
fistps
adc
fs
or
inc
fcoml
sub
adc
mov
xor
insl
inc
pop
add
pop
loop
adc
pop
dec
xchg
scas
push
mov
xor
push
cmp
shl
in
out
outsb
add
mov
mov
dec
mov
adc
sbb
insl
jne
imulb
xchg
jecxz
aad
mov
mov
xchg
fcmovb
push
xor
movsb
call
add
imul
fbld
dec
gs
les
scas
fadd
insb
jns
lods
or
or
add
inc
lods
adc
jo
popa
or
cwtl
bound
das
sbb
outsl
int3
lahf
and
jns
jns
xor
popa
pop
hlt
mov
in
inc
push
push
in
in
mov
ja
roll
leave
jl
pop
pushf
dec
cli
jmp
push
lock
ret
into
nop
in
pop
and
test
fcompl
cld
pop
mov
test
stos
sbb
jb
add
mov
movsb
imul
popf
or
rcll
xor
push
lcall
loop
xor
jp
movsb
mov
mov
hlt
push
mov
add
pop
lods
ret
and
pop
jb
xchg
dec
adcb
jg
mov
cwtl
sub
dec
ret
pop
add
dec
popa
enter
pushl
lods
push
xchg
in
test
pop
loop
xor
pop
mov
mov
ljmp
pop
std
pop
movsl
in
lods
rclb
xchg
mov
mov
xor
movzwl
add
or
mov
xor
test
lcall
enter
dec
mov
and
adc
gs
jmp
mov
std
aad
sub
lret
ljmp
jmp
arpl
jecxz
sub
mov
push
sbb
dec
jnp
fdivl
mov
adc
inc
sbb
xlat
inc
sub
ja
or
xchg
out
pop
mov
sub
outsb
call
cmp
icebp
lret
xchg
sub
jge
mov
xor
fucomip
ds
into
daa
or
lret
jg
pop
xchg
je
mov
aaa
cmp
or
pusha
xor
outsb
and
dec
adcl
and
xor
movsl
repz
sti
xor
sarl
sub
jo
call
pop
and
jge
aam
imul
jb
imul
or
daa
shll
mov
pop
sbb
aas
xchg
test
or
leave
in
pushf
jb
jecxz
push
stc
cmp
mov
jle
call
clc
divl
lods
mov
push
int3
sub
xchg
inc
in
icebp
push
scas
int
sbb
inc
test
lock
cmpsb
push
iret
cmp
jg
and
jbe
mov
daa
xlat
xchg
repnz
jle
pop
shrl
mov
ret
lcall
out
lret
gs
adc
iret
adc
mov
jbe
std
fisttpl
popf
aas
and
repz
add
mov
rcrb
and
rcll
mov
mov
test
loopne
aaa
xchg
cs
stc
test
in
push
je
daa
xchg
sti
pop
cltd
jl
jo
hlt
loop
dec
push
mov
and
add
ja
gs
cltd
icebp
ret
sbb
mov
adc
icebp
ret
add
lods
jmp
cmpl
add
int3
mov
and
or
mov
pop
or
outsl
js
xchg
xchg
cmpb
mov
and
ja
dec
dec
dec
out
adc
shll
nop
cmp
mov
clc
push
icebp
int
mov
lea
mov
dec
jo
push
rorl
fadds
xor
pop
mov
dec
fs
lods
jle
pushf
mov
xchg
or
xchg
sub
inc
out
xchg
pop
jecxz
or
popf
jo
sub
xlat
imul
loopne
lea
jo
xchg
xor
sub
mov
gs
lahf
in
test
cmc
add
jns
adc
ljmp
dec
pusha
adc
outsl
clc
imul
cld
pop
inc
sbb
adc
push
lds
mov
adc
xor
pop
add
cmp
or
out
dec
gs
xor
aam
fimull
addl
add
mov
cld
cmpsl
popf
push
outsb
std
mov
in
dec
data16
jo
or
fisttpl
enter
test
xchg
xchg
dec
icebp
dec
sbb
adc
rcr
push
push
scas
call
test
lds
jp
xchg
out
pop
or
cmp
fists
mov
mov
aam
or
cmp
jmp
in
dec
les
sahf
mov
fidivrs
in
sub
fcomip
sub
xor
loop
cmp
dec
dec
repz
push
pop
xchg
mov
outsb
xor
mov
cmc
repz
xchg
imull
icebp
outsb
dec
push
lods
testl
inc
in
shlb
inc
jae
out
mov
and
leave
imul
xchg
sarl
clc
or
sbb
sahf
negl
dec
fwait
and
pop
nop
sar
pop
es
mov
pop
andl
mov
mov
fldt
push
mov
test
xlat
mov
pop
fdivrs
sahf
fsubl
inc
cli
add
sbb
sahf
push
or
imul
and
push
jnp
mov
movsl
dec
push
inc
adc
pop
shl
in
and
xorl
dec
in
cmp
xchg
sbb
fs
icebp
cmp
mov
pop
add
cmp
out
ss
shrd
cld
sub
fs
xchg
shll
jb
xchg
pop
popf
mov
aam
outsb
lods
arpl
subb
int3
loope
insl
cmpb
out
ljmp
and
inc
mov
lret
pop
pop
mov
daa
fcoml
insb
xor
or
cmp
xchg
jns
and
int
stc
jne
xchg
lods
or
and
mov
daa
jg
jb
cmp
fisttpll
mov
stc
mov
sbb
popa
and
sub
push
dec
mov
sub
xchg
cmp
and
sbb
testb
push
jae
adc
mov
aad
insb
icebp
nop
jg
add
push
dec
mov
orb
mov
mov
fwait
loop
loope
add
xchg
mov
repz
lods
test
xchg
fs
xor
stos
fs
out
push
and
add
cld
repz
loope
stos
inc
and
out
mov
int
or
clc
ds
loope
lock
jns
ret
das
shr
loopne
ss
cld
daa
add
push
xor
popl
imul
jmp
pop
xor
dec
in
cld
test
inc
int3
or
mov
sbb
mov
fildl
mov
sti
inc
mov
mulb
pushf
pop
adc
cmp
lret
fidivs
dec
and
ss
sub
jg
xor
dec
jbe
bound
xor
fadds
fs
add
push
mov
test
cmc
push
pop
aad
cmp
std
pop
cmpsb
pop
add
mov
loope
jae
sub
sub
push
mov
fdivs
mov
mov
and
or
sahf
leave
xchg
lock
xor
dec
and
jge
les
adc
jle
ret
std
loopne
lock
dec
jmp
mov
sbb
mov
shrl
mov
xchg
pop
cli
leave
ss
add
ja
adc
aad
addr16
mov
dec
xchg
out
rclb
jmp
cmp
lret
xchg
shl
hlt
ret
jno
ljmp
sbb
imul
inc
inc
mov
cwtl
xchg
jb
mov
sub
rcrl
lods
push
cmp
dec
fidivrl
jecxz
enter
and
mov
mov
shlb
xchg
nop
leave
sbb
insb
jmp
xchg
and
imull
jno
rcl
js
xchg
test
pushf
lcall
or
adc
insb
mov
xchg
add
or
fbld
out
iret
push
frstor
ret
jb
mov
mov
mov
push
cmp
xor
dec
ret
pop
push
lret
aas
in
lock
neg
arpl
movsl
lahf
jbe
int
aam
enter
mov
in
iret
inc
sbb
pop
push
jae
fmuls
in
sub
cmc
mov
xor
in
cmp
std
sub
shrl
inc
sub
arpl
lahf
add
mov
mov
mov
nop
insb
adc
inc
inc
dec
iret
jle
add
jmp
jae
jmp
stos
test
push
into
insb
xor
call
sti
add
fisubrl
into
mov
lods
notl
sahf
push
sbb
mov
rcr
sub
or
xchg
inc
repnz
addr16
fsts
push
or
lods
xor
in
push
int3
clc
mov
mov
inc
cmp
sarb
insb
sarb
fcmovne
jge
jns
pop
cmpsl
cmpsl
ds
inc
dec
sti
mov
inc
dec
jl
sub
add
int3
add
daa
test
push
and
pop
shlb
nop
xlat
stos
lret
mov
int
xchg
lret
adc
loope
sti
sub
jmp
loop
ret
ror
push
lret
xchg
jl
push
out
xchg
push
outsl
xor
jns
popf
pop
inc
mov
inc
scas
nop
popa
mov
add
sub
out
jbe
loopne
lods
and
sub
imul
push
sub
push
push
rolb
test
add
bound
cmp
mov
sbb
mov
mov
jo
push
fisubrl
jmp
std
mov
test
test
jmp
faddp
or
dec
sub
stos
ret
inc
jbe
push
xchg
pusha
cltd
repnz
jnp
or
xor
imul
in
movsl
imulb
xorb
lahf
ret
es
test
or
dec
xchg
mov
addr16
pop
ret
push
lcall
je
rcll
mov
aaa
das
in
cmp
mov
pusha
or
pop
jne
xchg
jno
and
ficompl
adc
je
das
int3
cmp
jne
cmp
lock
out
lods
xchg
add
movsb
in
dec
hlt
in
testl
jmp
mov
insb
jae
xchg
mov
mov
movsb
out
sbb
out
cmpsb
call
mov
lea
outsl
push
imul
addb
mov
lock
inc
mov
pop
pop
and
in
push
and
sbb
mov
xchg
lds
and
adc
leave
cmp
aas
pop
jp
test
sti
or
mov
sub
cwtl
mov
hlt
aad
popl
bnd
adc
mov
fidivs
out
ret
ja
leave
fucomp
lahf
cltd
int3
outsb
xor
or
js
dec
fstl
inc
int3
jo
push
sub
out
es
pop
mov
outsl
mov
jmp
dec
jp
insb
leave
aad
stos
shl
rclb
mov
sub
idivl
inc
jp
xchg
lahf
and
push
adcl
into
gs
arpl
mov
pop
inc
lods
cmp
fimuls
xor
add
pop
into
mov
sbb
xchg
js
mov
xorb
jo
insl
shr
in
mov
sbb
in
loopne
call
sbb
xor
iret
repz
pop
sbb
testb
adc
pop
mov
adc
int3
mov
or
and
mov
imulb
stos
dec
repz
ret
jp
adc
test
add
push
xchg
aaa
ja
dec
dec
mov
popf
into
pop
cltd
gs
fnstenv
roll
xlat
sbb
popf
aam
jecxz
or
clc
pop
or
bound
lea
or
push
flds
jge
xchg
pop
xor
in
xchg
lahf
push
jae
aam
sub
adc
sub
ljmp
fiadds
mov
inc
cwtl
scas
scas
pop
mov
enter
clc
out
pop
add
std
add
sub
inc
in
mov
xchg
cwtl
mov
call
cmp
push
xor
dec
adc
bound
test
xor
aad
mov
ret
cmp
push
aaa
int
outsl
cmpsl
mov
cs
pop
ficoms
stos
add
mov
xchg
iret
arpl
ljmp
mov
mov
sub
fdivrs
js
aad
jno
icebp
out
pop
mov
ds
mov
pop
adc
mov
lock
sarb
and
pusha
adc
dec
and
mov
test
mov
mov
lock
mov
xchg
aas
out
andb
mov
dec
sbb
dec
scas
movsl
outsb
mov
sbb
xchg
icebp
imul
cli
jecxz
jecxz
fmul
mov
cmpsb
leave
insl
xchg
in
out
fdivrs
jp
jecxz
add
xchg
in
mov
bound
xchg
xor
out
filds
out
fsubs
mov
mov
movsb
fcoml
test
jnp
stos
mov
fdivrl
cmp
inc
mov
pop
andl
call
jmp
xchg
aaa
lretw
sub
inc
das
sub
repz
mov
add
sub
fcmovu
mov
inc
mov
pop
mov
outsl
movsb
outsl
scas
fnstsw
push
adc
add
in
leave
aaa
mov
bound
push
push
adc
push
push
mov
arpl
sbbb
aad
jg
std
xor
sub
pop
das
or
jle
stos
stc
rcrb
jg
jb
lret
rcl
repnz
jle
les
cltd
stos
into
out
into
add
addr16
mov
push
push
sub
ds
icebp
ror
jp
jp
adc
loopne
and
popa
fsts
adc
aam
cmp
aas
and
jmp
jecxz
mov
mov
push
mov
jecxz
or
leave
in
sub
inc
ret
jmp
dec
xchg
pushf
inc
pop
lcall
add
pop
mov
push
sbb
inc
push
pop
adc
lahf
bound
push
sub
sub
lea
add
inc
add
ret
jbe
add
paddb
out
jg
mov
and
push
push
pop
ror
jg
mov
add
hlt
in
lahf
mov
incb
aas
fadds
add
mov
dec
out
push
and
push
cmp
rcll
sbb
add
push
lret
movsl
call
sub
jne
inc
add
add
aad
xor
enter
lret
push
lret
mul
mov
cmpsb
fbstp
fcom
push
push
lcall
iret
inc
ret
dec
leave
fimuls
fcompl
lds
es
fisubrs
jno
dec
mov
sub
inc
xor
pop
push
test
xchg
xchg
inc
xchg
fcomip
iret
or
rorl
fs
mov
cmc
jg
aam
test
sub
pop
popf
mov
jmp
mov
pop
out
incb
cmp
loopne
data16
pop
subb
sar
ja
insl
lahf
clc
out
pop
and
sbb
daa
je
cmpsl
pop
and
sub
fcmovb
sub
pop
int3
xor
ficomps
xor
scas
or
fsubrs
fwait
cmp
mov
jo
mov
xor
andnps
mov
mov
fstps
or
sub
inc
sub
je
and
xchg
xchg
inc
push
inc
arpl
loop
call
and
in
dec
jns
lds
pusha
loop
outsl
repz
cmp
imul
dec
dec
push
pop
or
lods
loop
out
cmp
in
pop
mov
movsb
or
shlb
outsb
cwtl
mov
mov
fsubp
lret
mov
mov
shlb
cmp
push
iret
xchg
pop
xor
push
movsb
scas
int
lock
ret
push
ds
push
jne
pop
shr
fsubs
out
cmpsb
sbb
cmp
incl
pop
push
sbb
insl
xchg
hlt
in
jns
aaa
mov
stos
push
and
xchg
stos
out
dec
jnp
lds
and
gs
mov
aas
and
ja
xchg
or
cmp
jae
inc
jae
lds
mov
rorl
movsl
packsswb
lgs
cmp
in
xor
mov
lret
imul
push
repnz
stos
sub
addr16
jo
cwtl
sahf
nop
add
dec
sti
ss
mov
outsl
and
adc
out
fistpl
sub
stos
sti
repz
mov
ret
std
xor
sbbb
cmc
icebp
cltd
xchg
add
dec
lahf
xchg
cmp
push
xlat
ljmp
sarb
scas
popa
cmp
inc
stos
inc
in
ss
xchg
enter
cld
or
mov
push
cmc
mov
iret
or
fwait
andl
xor
shl
stos
xor
stos
dec
cwtl
push
xchg
add
or
inc
mov
pop
mov
or
cmp
imul
into
pop
sbb
into
mov
mov
pop
push
dec
lcall
int
adc
add
das
mov
pop
mov
mov
stc
xor
out
dec
shl
js
xchg
or
mov
and
scas
inc
pop
fcompl
fsubrl
sahf
ffree
push
sarl
pop
out
add
je
icebp
add
adc
mov
addr16
dec
add
jno
sbb
hlt
lahf
mov
jne
and
and
pop
loope
imul
pop
cmp
push
fisubrs
sub
cli
fwait
testb
and
dec
ss
cmpsl
jmp
xchg
lods
cli
pushf
out
ja
shll
test
scas
frstor
aad
sub
sbb
fiaddl
or
fsubr
dec
shlb
push
data16
inc
gs
into
rcr
into
out
lods
inc
adc
mov
jns
in
mov
out
or
nop
aad
loop
dec
push
dec
test
int3
test
shll
fwait
xchg
xchg
lods
xor
push
in
adc
push
repz
stc
call
sub
js
lcall
mov
push
sub
push
or
imul
add
fstpl
rclb
movsb
jo
aam
out
pop
sbb
mov
mov
outsl
jno
in
mov
inc
dec
sub
fwait
xor
in
add
jbe
ss
pop
xor
sahf
jl
aaa
out
insb
cmc
arpl
imul
int
int
mov
cmp
sbb
dec
loop
repnz
addl
lret
lock
cmp
inc
add
add
ljmp
popa
mov
push
aaa
add
test
mov
inc
out
dec
or
or
test
mov
sbb
insl
cmp
mov
xchg
scas
daa
imul
xor
shll
mov
imulb
add
xchg
pop
das
outsl
inc
lret
dec
lahf
xchg
adcb
dec
loop
push
sub
sarb
sbb
fadds
cs
mov
mov
xchg
and
jle
testb
in
ss
add
xchg
push
out
subl
pop
int3
aam
jmp
mov
loope
orb
shrl
pop
pop
imul
sbb
movsl
fs
add
stos
mov
inc
mov
inc
loope
adc
push
aam
repz
pushf
push
and
dec
sbb
test
xor
mov
mov
test
sti
out
pop
dec
fldt
or
leave
stos
pop
cwtl
cmc
jl
xchg
lret
jb
decl
aad
imul
sub
mov
jle
adc
or
mov
xchg
ss
mov
xchg
es
dec
or
ret
cli
popf
iret
fsts
cs
inc
data16
push
add
add
sub
fwait
pop
test
das
lret
sub
xchg
jmp
mov
popa
ret
mov
rorl
dec
cld
adc
adc
sub
cmp
sub
mov
xor
add
xor
and
pusha
rorl
mov
inc
int
inc
jle
outsl
xor
arpl
xchg
or
subl
lods
or
ss
or
cmp
icebp
adc
jbe
push
cltd
jge
lcall
dec
aaa
xchg
movb
jl
jne
mov
lea
dec
xchg
cmp
lds
shrl
xor
add
push
loopne
stos
mov
out
push
mov
or
inc
mov
out
push
adc
int3
mov
jae
sbb
into
and
into
mov
outsb
je
sub
movsb
and
movsl
bnd
outsl
jge
mov
addr16
adc
cld
xor
pushf
aam
xchg
test
xorl
pop
es
mov
mov
out
sbb
or
fcmove
loope
out
jbe
das
pushl
out
push
mov
orl
or
mov
cmpsb
pop
xchg
stos
repz
das
lods
sbb
dec
sbb
inc
mov
sub
lods
push
test
sbb
ret
imul
adc
sub
mov
jns
aaa
addr16
cld
xor
rcl
inc
mov
stos
and
mov
ljmp
xchg
pusha
pop
push
popa
cmp
int3
cwtl
jne
cmp
imull
out
xchg
jno
add
test
xor
cmpsb
jg
sub
xchg
or
pop
jmp
in
adc
adc
cmp
dec
mov
pop
loope
lods
xchg
sub
mov
add
cmp
iret
lahf
push
dec
mov
cli
icebp
or
test
push
add
cs
jl
xchg
std
bnd
lret
sub
lcall
xor
ret
int
cwtl
jge
aad
je
lahf
imul
repz
lahf
pop
ficoml
push
mov
rorw
test
bound
jmp
loop
ja
je
add
rcr
ja
fs
xor
inc
lcall
lret
mov
mov
xor
out
mov
scas
adc
scas
pop
imul
jle
adc
jae
ficoml
mov
mov
repz
imul
sbb
mov
or
jle
shl
imul
sbb
pushf
pop
pop
mov
lock
dec
pop
pop
xchg
jnp
lcall
pop
sbb
jo
dec
notb
fstpt
add
lret
scas
jb
sub
icebp
and
inc
inc
jo
mov
clc
mov
mov
or
push
ret
shll
mov
mov
repz
xchg
ds
adc
jbe
add
nop
mov
rcr
adcb
outsl
cmc
mov
test
fstpt
fst
sarb
cs
and
loope
dec
out
sub
mov
push
or
ljmp
mov
call
fcmovnb
das
inc
mov
in
cmp
mov
ss
fbstp
cmpsb
insb
and
mov
pop
xlat
mov
cwtl
pop
movsl
push
cmp
int
mov
out
mull
dec
cmp
mov
sbb
fstl
fnstsw
std
ficompl
sti
jl
dec
xchg
mov
sub
icebp
mov
sbb
xchg
rcrb
adc
mov
add
test
loope
add
pop
fcoms
push
xor
adc
xor
rcrl
rorb
test
push
push
jb
push
jbe
mov
daa
sbb
and
mov
mov
xchg
jge
es
ds
stc
mov
loop
sub
adc
dec
popf
xorb
lcall
stos
sbb
sub
stos
stc
cli
add
fbstp
out
repz
pusha
out
das
bound
jns
ss
jbe
out
xchg
sbb
mov
out
xchg
mov
iret
lods
cmp
gs
adc
sub
xor
or
add
not
mov
adc
cmp
pop
sub
sub
xchg
add
sbb
aad
and
setae
push
js
mov
push
xor
cld
leave
lahf
jae
into
fsubrl
arpl
jp
pop
and
jne
in
test
inc
cmc
scas
roll
cmc
stc
les
in
mov
add
jge
sbb
mov
push
push
lret
lcall
mov
out
stos
mov
cmp
pop
fmuls
or
int
sub
fldl
out
test
nop
ret
or
out
inc
mov
sarl
push
pop
mov
or
xchg
lods
int
inc
add
sub
dec
cmp
out
mov
movsl
mov
lods
lahf
inc
insl
fadd
dec
adc
test
movsl
push
push
jae
xlat
xchg
cmpsb
test
test
sbb
sbb
dec
cmp
pop
pop
fwait
cmc
test
cmpps
mov
cwtl
jbe
clc
repnz
push
das
add
dec
add
lret
test
sub
sbb
xchg
push
inc
cwtl
mov
or
shl
leave
pop
jecxz
xchg
divb
out
xchg
lcall
xlat
addb
repz
std
sub
sbb
pop
es
fimull
mov
stc
pop
imul
jae
cwtl
mov
divl
xor
add
dec
arpl
call
pop
data16
push
outsl
adc
outsb
mov
jo
fs
adc
pusha
add
shl
jmp
sub
std
sbb
adc
aad
je
sbbb
xchg
bnd
movb
jno
sub
push
loop
mov
add
add
adc
lods
jl
add
scas
xlat
and
mov
pusha
les
mov
jb
clc
or
test
dec
sti
mov
aam
xchg
mov
cmp
and
mul
int
ret
mov
movsb
std
and
gs
pusha
pop
mov
jae
lcall
mov
push
dec
cmp
nop
and
sbb
jg
add
xor
mov
mov
xor
iret
or
push
inc
nop
adcl
repnz
dec
cli
scas
in
ret
fsts
mov
push
dec
int3
testb
pop
fs
push
iret
neg
cmc
inc
ds
stc
push
mov
adc
mov
mov
lret
and
aaa
pop
hlt
pushf
xor
mov
cld
fs
push
xlat
mov
pop
sarl
icebp
jno
or
js
orl
cmpsb
inc
lock
cwtl
or
or
movsl
push
mov
inc
testb
pop
mov
dec
popa
or
jl
int3
or
cwtl
movsb
cmp
xchg
mov
and
lock
iret
and
rcll
jge
sub
nop
cld
movsb
vunpcklpd
pop
and
out
mov
scas
xorb
mov
mov
push
cmp
int
add
aam
in
fucomi
nop
cmc
or
mov
mov
xchg
jnp
cmp
xchg
cli
test
sbb
cli
mov
stos
sti
pushf
psrlq
fidivs
test
adc
je
arpl
sub
and
movsb
and
imul
imul
pop
jae
jnp
out
inc
sarl
mov
mov
push
mov
pop
cmc
add
dec
sub
aaa
xor
mov
loopne
push
xor
inc
call
iret
inc
dec
mov
addr16
jl
int3
xchg
sub
or
push
sbb
add
fcoms
inc
or
mov
icebp
out
imul
scas
push
mov
pop
das
mov
out
inc
mov
aam
ds
arpl
mov
ss
arpl
lret
clc
cld
icebp
int
lods
pop
roll
cwtl
pop
out
push
sarb
in
jge
nop
hlt
leave
and
dec
xor
and
jbe
imul
adc
popa
inc
data16
adc
test
int
popf
and
push
mov
xlat
dec
adc
mov
cmc
loope
movsl
ljmp
and
mov
and
ret
imul
mov
stc
mull
cmp
mov
mov
or
fstpt
sub
sub
fsub
in
xchg
pop
pop
pop
daa
and
shrb
out
add
jecxz
aad
and
mov
fisttpll
lahf
pop
pusha
push
roll
lock
ds
nop
in
decb
add
push
mov
inc
in
aaa
dec
roll
cs
or
daa
add
sbb
shll
loopne
mov
movb
push
sbb
fcompl
push
pop
std
ss
ret
pushf
loopne
fistpll
iret
xor
lea
push
dec
imul
not
je
xchg
xor
clc
jnp
cmp
fwait
repnz
ret
fs
xchg
das
mov
shll
test
test
out
je
fmuls
lret
pop
ja
dec
test
jecxz
pop
sbb
sub
daa
dec
inc
insb
adc
add
push
xor
cltd
insb
xchg
loop
sub
cs
cmpsl
jge
sub
and
cmc
bound
stos
mov
pop
dec
repz
inc
jnp
push
mov
mov
test
add
and
addr16
nop
push
or
xchg
fmuls
mov
and
xchg
jnp
fwait
pop
ds
push
lds
js
mov
and
cmpsb
cltd
cmp
push
iret
pushf
repz
mov
xor
pop
mov
rorl
cltd
inc
or
nop
adc
out
fyl2xp1
mull
js
push
adc
jmp
cwtl
inc
hlt
aam
fmull
cmp
push
pop
icebp
pop
testl
inc
mov
jecxz
mov
pop
lds
movsl
push
pop
sbb
outsb
enter
js
push
xchg
bswap
inc
shll
mov
imul
and
int
mov
mov
jbe
std
cli
xchg
dec
pop
mov
cmpsb
xchg
out
dec
inc
mov
lret
inc
sub
xchg
ds
fisubrl
dec
inc
cmc
std
xchg
mov
inc
stos
xchg
int
data16
push
mov
xlat
sub
xor
pop
bound
lods
sub
inc
dec
push
sub
dec
insl
cmpsb
push
mov
mov
add
mov
sub
or
mull
sbb
imul
mov
repz
xchg
in
jns
fs
xchg
sbb
out
xchg
enter
int3
inc
jb
int3
xor
je
shrb
andb
and
cmp
popa
mov
repnz
and
stc
in
jns
fdivl
jl,pt
add
out
pop
out
lea
ss
pushf
sar
xor
out
xor
dec
cmp
in
hlt
mov
js
test
out
fisttpll
mov
or
pop
and
outsl
jp
popa
insl
mov
mov
mov
mov
push
pop
fdivl
jne
mov
cmp
test
and
or
sbb
mov
movsl
inc
jnp
push
mov
xor
aaa
and
mov
cmp
out
xor
lret
adc
addr16
sbb
insl
xchg
loop
aam
sbbl
jae
icebp
ljmp
clc
dec
add
cltd
rcr
mov
and
mov
add
pusha
xchg
pop
cli
lret
adcl
fcomp
pop
je
gs
out
out
mov
rclb
mov
hlt
bound
shlb
sbb
gs
inc
jle
sub
mov
ret
dec
pop
outsb
roll
roll
or
je
push
rcr
pushf
repnz
xchg
add
xor
cmpsl
sub
add
cmpsl
rclb
aas
leave
add
mov
push
stc
xlat
ss
cmp
dec
or
cmc
dec
stos
add
jne
mov
push
fwait
or
sub
lcall
jp
ljmp
scas
ret
sub
test
xlat
ficomps
aaa
es
mov
ljmp
in
mov
xor
leave
mov
adc
xor
addb
je
push
dec
dec
mov
andl
sbb
outsl
xchg
or
add
or
addr16
stc
sbb
popa
in
sub
roll
es
add
clc
xor
xor
mov
repnz
cli
push
lds
sahf
mov
xchg
mov
xchg
lods
cwtl
and
sub
loop
icebp
lds
mov
xor
ja
pusha
push
bound
sub
lock
call
negl
sbb
mov
push
cltd
lcall
iret
orl
ljmp
adc
fs
xchg
mov
jmp
push
test
rcll
push
sub
push
mov
fcoml
jne
pop
mov
xchg
lret
xor
movsl
mov
lcall
mov
sbb
outsl
lcall
adc
cmpl
mov
xchg
mov
xor
jnp
pop
mov
or
dec
iret
imul
or
out
roll
fdivrs
mov
jb
scas
add
sub
loop
pop
in
push
aaa
test
outsb
cmp
mov
pop
cs
pop
sbb
xor
cmpsb
ret
fcompl
shl
lods
xor
out
scas
dec
xor
sbb
adc
mov
fwait
int3
jmp
call
loopne,pt
cli
iret
xor
fistps
pop
scas
or
lds
sub
pop
leave
mov
aas
test
shll
pop
jo
cmpsl
and
sub
imul
jg
icebp
inc
gs
cmpsb
mov
pop
out
outsl
adc
and
sub
in
cmc
cmpsb
mov
sbb
inc
cmp
imul
jno
push
mov
jnp
mov
gs
jg
lea
push
cmp
addl
or
out
sti
int3
dec
lcall
pushf
mov
xchg
stc
rorb
push
fstps
out
dec
push
xchg
inc
mov
or
js
add
xchg
sub
add
sub
mov
jmp
mov
cmpsb
jns
sbb
ja
leave
pusha
dec
in
movsb
inc
rol
es
sub
push
pop
sbb
pop
jb
scas
aam
outsl
mov
pop
pushf
outsl
rclb
xchg
cmp
decb
pop
ss
adc
jno
jnp,pn
test
js
aam
sub
and
ljmp
cmp
enter
xlat
push
pop
loope
cmp
add
dec
call
imul
mov
jbe
cmpsl
adc
ljmp
add
jmp
mov
add
aam
xor
mov
mov
mov
pop
dec
pop
pop
sub
xor
jbe
scas
fisttpll
mov
mov
mov
pop
ja
mov
inc
xchg
push
dec
pop
sbb
icebp
les
mov
xchg
pushf
mov
cmpl
push
repz
push
pop
sbb
adc
sub
add
mov
xchg
or
aaa
roll
aaa
sub
lahf
sub
push
mov
repz
call
push
push
scas
mov
clc
call
loopne
and
imul
lods
and
dec
pushf
out
mov
jae
and
pusha
sub
push
mov
xlat
addr16
ljmp
or
movsl
or
push
jecxz
ljmp
loop
mulb
filds
rolb
jae
call
inc
fmulp
xchg
sub
add
jbe
shl
push
pop
mov
mov
stos
orb
sbb
es
sub
cli
and
divb
std
enter
jmp
sub
movhps
aam
int
push
repz
addr16
lret
aas
into
fisttpll
lock
aam
test
push
sarl
sub
leave
sub
mov
cmp
cmp
call
movsb
lock
mov
daa
add
mov
sar
jg
ljmp
inc
sub
clc
jge
mov
fcomps
repz
add
dec
inc
inc
push
inc
rcrb
stc
xchg
orb
mov
sarl
add
in
stos
jmp
nop
xchg
clc
cmp
xchg
iret
testl
mov
jle
push
cmpsl
mov
jbe
es
mov
xchg
or
vmwrite
xor
jne
repnz
xor
jb
cmp
fsubrp
lret
pop
js
mov
out
cli
xor
adc
dec
add
pop
lcall
pushf
xchg
xorl
mov
cmpb
sub
movsb
mov
add
pusha
push
cltd
inc
lds
add
outsl
inc
sub
lcall
loopne
insl
xor
cmp
popf
mov
addr16
dec
cld
stos
add
out
shrl
test
fstps
out
jp
push
push
shl
mull
aam
in
xchg
aam
jg
push
jns
outsl
xchg
lock
sbb
add
pop
frstor
push
ret
aaa
popf
jbe
xor
push
ljmp
inc
clc
aad
adc
mov
jb
mov
es
cli
enter
lds
outsl
xorb
nop
shll
rcrl
fsubl
decl
roll
xchg
adc
adc
mov
cwtl
ja
mov
enter
jge
iret
and
mov
add
mov
cmpsb
fwait
ret
jbe
in
mov
or
test
loope
les
adc
test
jnp
shll
push
ret
call
adc
xor
ds
cmpsl
lock
aad
nop
cld
rorb
pop
or
popf
outsl
inc
xor
sub
xchg
inc
jle
sbb
fwait
addb
imulb
icebp
lds
cld
test
dec
cmpsl
int
and
mov
mov
rorb
inc
xchg
mov
out
data16
dec
adc
sbb
fsubs
mov
mul
sbb
rcrb
insl
sbb
into
rclb
jbe
mov
sbb
scas
mov
lret
pop
and
adc
sbb
lret
cmpsb
xor
xor
push
mov
jp
xor
pop
cmp
daa
dec
and
jne
bound
adc
prefetch
movsb
push
add
lret
xor
xor
addr16
jb
or
sub
loopne
dec
iretw
sub
xor
mov
subb
inc
dec
adcl
or
js
dec
adc
stos
hlt
shrb
es
push
mov
cli
or
das
lods
sbb
inc
adc
lods
jg
cmp
fidivs
add
push
mov
icebp
jo
test
imul
xorl
movzbl
cld
inc
jne
push
fldl
push
leave
repnz
aam
loopne
xor
dec
decl
lea
stos
sbbb
imulb
ret
lds
sbb
cmp
xchg
pusha
adc
out
clc
dec
pop
adc
jbe
orb
insl
repz
lret
movsb
or
mov
in
xchg
bound
jbe
cli
sub
addr16
mov
outsb
jae
mov
imul
cwtl
mov
and
xor
daa
enter
out
cs
jmp
add
mov
testl
mov
cmp
adc
sahf
subl
pop
pop
icebp
mov
xor
push
sti
fstpt
cmp
fcoml
cmpsb
cltd
xchg
cmp
push
mov
outsl
out
daa
push
jle
or
xchg
push
mov
adc
push
xor
dec
subb
lcall
mov
push
lock
or
jmp
mov
cmpsb
dec
fnstsw
adc
stc
lret
fstpl
adc
stos
cmp
push
lods
push
enter
adc
inc
js
adc
cmpsb
pop
or
cld
adc
lcall
aam
xor
sub
jg
xor
xchg
add
mov
fdivs
les
sarl
add
or
test
enter
dec
inc
inc
mov
dec
xchg
cs
aad
and
aad
or
mov
cs
test
pop
fnsave
jle
repnz
test
jno
push
mov
fs
stos
push
jae
adc
xorb
pop
mov
insl
or
faddp
pop
add
pop
or
imul
enter
arpl
filds
mov
or
mov
jecxz
fnstsw
rclb
das
pusha
in
push
xor
jge
or
xor
xchg
mov
push
popf
push
xchg
call
jmp
push
in
cli
mov
scas
in
pop
cmpl
push
pop
lahf
les
clc
sti
cli
inc
mov
lret
hlt
mov
jmp
jge
mov
jmp
cmpsb
xor
jno
add
rcll
cmp
insb
cmp
jecxz
mov
mov
xchg
mov
fcmovbe
dec
mov
mov
imul
enter
adc
xchg
pushf
fst
xchg
in
push
insb
jp
shlb
dec
xor
shl
iret
inc
and
popf
xor
mov
xchg
sub
jle
imul
shrl
adc
ret
ss
lcall
mov
cmc
pop
xchg
mov
aas
xchg
cmp
das
xchg
push
inc
ljmp
dec
dec
xchg
push
orl
sbb
pop
jl
push
cltd
aaa
push
sbb
push
jge
fs
ds
fisubl
and
inc
sub
or
in
sarb
flds
and
inc
lcall
int3
outsb
jae
xor
mov
ljmp
das
idivb
pop
fisttpll
daa
xor
xor
push
aaa
add
ja
cmpsl
lcall
int
mov
jmp
jae
push
xor
jae
stc
ret
pop
out
or
sti
ret
pushf
sbb
push
fistps
outsl
mov
mov
dec
cs
loop
iret
je
sub
pop
out
pop
cmpb
lahf
add
sub
sbb
ds
sub
push
inc
jnp
in
inc
aam
cwtl
out
ja
push
sarb
add
dec
push
mov
dec
leave
jns,pn
push
add
mov
and
pop
pop
xchg
shrb
mov
lea
jnp
dec
pop
pmaxsw
out
pop
or
ret
enter
mov
fmull
adc
aaa
movsb
mov
filds
enter
inc
xor
ds
repnz
ja
xchg
jg
mov
aad
movsb
adc
dec
push
or
sbb
mov
ss
cmpsb
fsubr
loopne
lds
pop
cmpsl
mov
pop
sar
pop
ficoml
lods
les
push
xor
sahf
mov
push
dec
pop
sahf
shrb
or
pop
jbe
test
adc
mov
jmp
jge
outsb
scas
mov
insl
les
fcomps
mov
insb
inc
jb
gs
clc
mov
xor
jbe
mov
test
das
test
test
movsl
push
or
pop
repnz
mov
push
pop
out
xchg
sbb
mov
insl
gs
jne
adc
adc
lods
mov
sbb
sbb
jmp
or
mov
aaa
lret
jp
pop
inc
sbb
fwait
fwait
pop
test
mov
jno
stc
popf
mov
clc
add
inc
add
in
stos
test
and
pop
cli
loope
repz
gs
push
addr16
add
subb
ljmp
ja
or
adc
ja
pminsw
pop
inc
xchg
cmpsl
mov
dec
and
sbb
imul
cli
xor
push
pop
test
adcb
pusha
inc
cmpsl
jno
pop
and
and
sbb
xor
xchg
loope
inc
and
fildl
shrb
mov
lcall
cli
xor
fwait
test
iret
dec
jns
add
mov
gs
mov
sub
jo
shrl
fdivrs
daa
sbb
mov
xor
mov
dec
cmc
mov
leave
mov
pop
into
push
out
out
add
data16
or
ss
sub
lret
and
pop
sbbl
ret
test
pusha
cmp
cmp
xor
rcl
sub
shrl
xor
jo
pusha
pop
sub
insl
or
test
and
dec
imul
and
pop
push
pop
sub
jbe
jl
aas
push
imul
repnz
sbb
fmul
mov
mov
xchg
xor
and
push
add
xchg
mov
jp
rcll
test
loopne
sbb
and
mov
out
movl
mov
leave
cmp
enter
lock
jnp
mov
imul
and
jae
stos
in
jae
jbe
adc
lods
sbb
adc
sbb
mov
aam
push
sbb
mov
fsubs
out
out
insb
loope
fidivs
adc
jns
leave
jg
pop
shll
lock
lods
adc
push
cli
inc
mov
push
add
push
stos
cs
cmpsb
cltd
daa
clc
adc
lcall
adc
or
loope
dec
andl
shrb
and
pusha
lods
fbstp
shll
fwait
push
inc
insb
js
out
lcall
ss
dec
jl
rorb
or
jns
lret
dec
int
sbb
dec
jle
hlt
mov
int
and
jg
ja
outsl
xchg
insb
in
fdivl
bound
imul
ror
mov
and
int3
add
mov
add
jl
sbb
cmpl
mov
into
dec
mov
xchg
adc
decb
or
adc
scas
cmpsl
push
mov
icebp
out
lahf
or
test
es
test
cli
cmpsl
mov
gs
test
imul
lret
mov
mov
mov
push
xor
dec
testl
pop
test
mov
iret
out
leave
mov
pop
out
inc
stos
push
mov
mov
sbb
iret
mov
inc
xchg
push
pop
cmpb
mov
push
mov
test
test
pushf
mov
std
mov
push
fldcw
and
imul
int
in
jmp
test
cmp
mov
clc
sbb
cwtl
cmp
inc
insl
pusha
lods
clc
loopne
call
jecxz
clc
xor
pop
ljmp
jbe
dec
stc
and
jae
bound
iret
sbb
xchg
js
insb
mov
xchg
fldcw
add
scas
mov
sarl
pop
push
xor
mov
xor
addr16
loopne
xor
sub
sbb
push
dec
dec
sub
out
dec
cwtl
adc
xlat
push
leave
nop
stos
outsl
bound
dec
std
into
and
scas
dec
popf
fisttpll
test
cld
push
mov
pop
cs
movsl
lahf
cs
sahf
insb
aaa
movl
jae
arpl
loope
pushf
sahf
sub
adc
mov
add
mov
add
inc
xchg
mov
push
push
inc
push
clc
nop
stos
xchg
jmp
in
add
cmp
aad
das
mov
push
pop
dec
lcall
mov
pop
mov
shrl
mov
push
push
xor
mov
in
test
imul
scas
mov
pop
fs
sahf
mov
fiaddl
dec
stc
std
jle
les
out
cld
fwait
shlb
fcomp
sub
test
fcomps
or
mov
xchg
arpl
xor
cmp
ljmp
xchg
aas
es
cltd
jle
dec
mov
dec
adc
mov
push
sbb
push
js
mov
fcoms
movsl
xchg
fisubs
adc
lret
xchg
ret
test
xchg
pop
dec
pushl
sub
cmp
and
adcl
aam
pop
mov
inc
out
decl
inc
pop
pop
push
xchg
enter
jne
cmp
sub
std
inc
xchg
dec
xchg
xor
enter
mov
scas
or
add
pop
lock
jle
aaa
into
or
outsb
out
sbb
add
jns
das
inc
loopne
nop
dec
xor
std
cmp
add
cmpsl
jbe
xor
enter
fldt
popa
xor
xor
add
lds
adc
dec
das
stc
dec
xchg
fscale
lds
fwait
xor
mov
adcb
dec
clc
into
jmp
push
or
push
jmp
jl
xlat
icebp
lods
fnstenv
fs
sti
cmpsl
lahf
push
push
xchg
sarl
mov
loope
cwtl
test
mov
push
sahf
aam
mov
adc
jmp
mov
pop
and
mov
dec
fdiv
in
fsubrs
fwait
enter
sbb
stos
aas
mov
xchg
pop
add
cmpsl
stos
jge
popf
dec
fwait
cs
movsl
test
add
add
mov
push
mov
das
and
js
enter
scas
and
mov
movsl
xchg
jae
xorb
jnp
xor
push
rorl
leave
cmpl
sbbb
cmp
mov
or
fimull
aas
add
pop
jb
ret
sbbb
jno
ds
jl
cmp
cmpsl
add
call
insb
ss
loope
or
stc
pop
call
push
in
dec
mov
cmp
sti
mov
test
pop
add
or
das
fs
xor
push
and
into
add
mov
cli
pushf
mov
xchg
jae
xor
cmp
adc
fsubs
mov
jns
pop
mov
out
jg
je,pn
and
in
jns
jo
or
push
mov
leave
adc
mov
addr16
test
es
rcrb
jae
add
xor
repz
push
cmp
dec
push
pop
in
inc
cmp
inc
stc
sti
lret
out
push
sarl
adc
xchg
and
pushf
dec
dec
adc
jle
nop
lcall
pop
adc
insl
dec
popf
repnz
jmp
fdivrs
lret
ss
in
fidivl
push
ret
jle
jmp
ljmp
jp
fst
mov
dec
nop
inc
cmp
in
iret
xchg
xchg
stc
xor
loopne
mov
sub
sbb
out
test
mov
cmpsb
js
cmpsb
test
sbb
add
loopne
mov
add
or
movsl
xchg
jg
xor
je
mov
sub
out
stos
fcoms
cmp
jb
dec
es
mov
rep
cld
jnp
in
cmc
cmpsl
jmp
or
inc
insl
lea
jg
outsb
int3
push
dec
fucom
or
data16
jecxz
test
sarl
inc
ss
dec
mov
jno
mov
imull
lds
xor
popa
test
xchg
mov
test
lods
loop
xchg
pop
filds
movsl
mov
out
and
xchg
mov
les
mov
and
sub
cwtl
test
xchg
outsl
xor
push
mov
push
in
call
cmpsl
jge
iret
jecxz
push
pop
mov
inc
lock
pop
mov
jl
outsl
cmpsl
or
pop
jg
lcall
mov
inc
sub
add
lods
sbb
shlb
shlb
or
mov
push
pop
scas
js
mov
addb
ret
aad
arpl
xor
jl
mov
test
test
mov
jno
sbb
push
mov
imul
xchg
cltd
push
mov
mov
in
jbe
sahf
jecxz
mov
or
mov
subb
mov
push
sbb
int3
neg
mov
push
xchg
test
test
inc
icebp
addl
data16
cld
das
in
mov
int
xor
fisubrl
mov
fisubs
xor
add
lea
rorb
int
mov
jnp
pop
pop
lock
adc
popa
int3
orb
fxch
imul
je
mov
scas
mov
jbe
add
jmp
pop
mov
leave
or
mov
mov
jmp
mov
cmpsl
jp
mov
sub
scas
jae
dec
and
jbe
inc
in
mov
fiaddl
adc
xchg
popa
add
fstp
mov
out
xchg
addl
cld
inc
pop
fbld
pop
sbb
sub
cmp
push
xchg
cs
xlat
xchg
call
into
push
mov
test
xchg
nop
cld
and
push
fbld
jg
sbb
imul
mov
xor
inc
adc
xchg
dec
rorb
ret
push
fmulp
dec
int3
mov
jnp
cmp
xchg
mov
mov
add
clc
decl
inc
in
and
sarl
push
adc
add
test
xor
lods
add
mov
insb
xchg
xchg
dec
mov
icebp
rclb
or
insb
sbb
mov
push
inc
dec
add
push
data16
mov
les
mov
iret
jae
in
add
call
add
and
add
push
and
dec
fildll
jns
push
xorl
icebp
int3
or
ret
xor
xor
cs
mov
test
mov
aam
jb
lods
les
lret
pop
in
and
jae
imul
cmp
out
cmp
popf
popf
mov
pop
imul
sbb
mov
aam
orl
dec
xchg
fsub
xchg
xor
mov
dec
push
js
jg
stos
jle
arpl
cwtl
fwait
xchg
cmp
jne
cmc
imul
loopne
into
loope
cmp
test
adc
dec
repz
ja
jp
movsl
scas
mov
test
orl
dec
ja
clc
or
pop
mov
ds
cld
loope
pop
movb
es
into
cmp
xchg
adc
test
outsl
add
mov
mov
push
or
rolb
mov
push
or
inc
loop
rorb
cmp
fwait
jle
or
mov
sub
arpl
bound
fadds
mov
rorb
mov
imul
js
fs
int3
mov
mov
lds
add
mov
packuswb
and
out
push
add
and
mov
das
push
mov
lods
stos
push
inc
push
mov
stc
out
stc
mov
insb
imul
ljmp
jns
inc
sub
iret
daa
loop
in
jbe
lcall
sbbl
in
mov
dec
pop
xor
ljmp
imul
adc
scas
call
hlt
push
rcrb
fcmovbe
fs
jge
clc
jns
sbb
xor
fcomps
inc
push
lock
and
jbe
hlt
test
and
push
outsb
jns
leave
es
int
pushf
std
sub
mov
lret
loop
leave
push
lahf
jmp
cli
int3
mov
xor
ljmp
inc
mov
sub
fstpl
xchg
ret
iret
and
cmp
out
xor
xchg
cmp
inc
int
shlb
jae
ljmp
and
mov
shr
jl
lret
aas
jns
push
xchg
cltd
int
xchg
pop
sub
add
push
arpl
sub
xchg
mov
jp
sbb
fucom
imull
jmp
aaa
sbb
push
test
clc
es
popa
lret
pop
dec
xor
dec
and
in
cwtl
inc
test
ljmp
dec
adc
pop
lcall
repz
pop
xor
jge
sub
jns
pop
mov
lods
push
sbb
inc
push
adc
and
fcom
repz
std
add
mov
add
lret
movsl
lret
shll
bound
mulps
cmp
pop
sarb
push
xchg
stos
rorb
jns
ss
into
out
rolb
jne
arpl
ret
push
pushf
push
mov
jae
jp
lods
cmpsb
push
dec
test
lea
aam
outsb
out
inc
mov
sbb
rorl
push
xchg
mov
int
adc
enter
enter
lods
test
pop
int3
inc
adc
jnp
rolb
sub
mov
imul
stos
movsb
sahf
lds
jne
arpl
in
sub
or
jp
pop
push
push
sbb
pop
scas
add
jo
sti
cmp
pop
dec
je
mov
jmp
mov
loop
jecxz
cmp
insl
inc
dec
int3
pop
cs
xlat
rorb
call
int
insl
int
scas
adc
scas
ss
inc
data16
ljmp
and
inc
sbb
jl
cmp
in
jb
fwait
cld
fildl
adc
repz
jmp
or
inc
mov
inc
in
pop
repz
xor
and
leave
adc
aad
sahf
insl
jne
fcomi
aam
mov
pop
pop
cld
xchg
ds
pop
inc
aaa
jo
inc
mov
sbb
fiadds
imul
cmpsl
cltd
push
movsb
aad
pushf
shlb
imull
adc
sbb
add
int3
xor
pop
or
fstl
sbb
mov
adc
or
roll
mov
pusha
mov
xlat
int
stc
in
leave
cltd
pop
pop
xchg
dec
test
and
test
jge
repz
dec
dec
or
xchg
inc
inc
dec
mov
dec
push
pop
aad
xorl
adc
insb
insl
lcall
jno
cmp
mov
scas
add
loope
pop
stos
scas
cltd
ss
pushf
pop
cs
xlat
cld
or
add
int
cld
ret
test
movsb
dec
fidivrl
sub
lret
cwtl
lds
out
mov
xor
aaa
inc
in
mov
dec
popf
mov
pop
xor
cwtl
aad
cmp
sub
fistl
xlat
sub
lods
cmpsl
rcrl
shll
mov
mov
pushf
jle
iret
shll
movsb
outsl
out
adc
mov
jb
stc
and
push
ljmp
pop
xchg
xor
jecxz
arpl
jne
pop
pop
dec
loop
test
or
pop
sub
pop
inc
xor
shll
dec
push
fnsave
addr16
sbb
mov
ds
std
popf
pop
push
jne
or
xor
cmpsb
cmpl
dec
dec
ja
hlt
repz
pcmpeqd
cmc
cmpl
dec
pop
shl
fistps
leave
jno
and
push
dec
mov
and
mov
jo
and
insl
inc
adc
rol
mov
les
into
push
mov
in
stos
ss
in
pop
mov
dec
fcmove
daa
imul
jg
out
mov
ja
std
pop
fimuls
pop
enter
mov
in
sub
or
inc
pop
pavgb
or
icebp
xlat
test
ss
mov
mov
enter
out
xchg
out
or
ret
shrb
test
shrb
cli
imul
in
in
movb
pop
cs
mov
sarb
out
and
mov
fdivrp
lcall
ficoml
push
dec
lea
ja
clc
mov
add
icebp
nop
xlat
push
mov
mov
test
inc
jecxz
enter
outsl
push
rolb
and
push
rorl
jp
push
loop
in
ljmp
add
push
xchg
fcmovnbe
push
inc
cvtdq2ps
rcl
xor
pushf
scas
sbb
loope
xchg
dec
xchg
repnz
loop
je
mov
ret
jo
sarb
inc
cwtl
fiadds
adc
loop
jne
pop
arpl
repz
mov
mov
jle
outsb
into
or
lds
jl
test
cvttps2pi
arpl
push
mov
popf
add
or
movsb
jl
jns
daa
add
push
in
mov
push
push
xor
test
xorl
dec
cmp
or
pop
xor
fldt
test
or
and
nop
cld
pop
ficoms
push
xlat
out
and
test
sbb
out
xlat
xchg
dec
and
xchg
push
in
je
jnp
xchg
sub
add
cmpsb
dec
dec
jp
jno
pop
ss
jo
rcrl
imul
fwait
mov
insb
out
mov
sub
mov
lret
jne
int3
mov
xchg
lds
fnstsw
inc
pop
and
sub
pop
leave
inc
aaa
pop
lds
into
lds
scas
sbb
push
jp
pop
cwtl
aam
aam
pop
and
sub
mov
shrl
and
lods
ret
lods
out
xchg
jnp
xor
fists
subb
ja
and
cwtl
insl
and
jp
lds
orb
push
xchg
pushf
fcomi
mov
ss
jmp
pop
add
pop
jne
xor
popf
dec
mov
sub
sarb
xor
push
sub
mov
sahf
jge
mov
fsubr
icebp
inc
push
bnd
test
lods
insb
cmp
bound
lea
push
cld
popf
sbb
push
mov
shrl
mov
je
mov
pop
addr16
push
push
scas
adc
and
cmp
mov
sub
insl
xor
and
repnz
cmp
push
jae
ds
mul
sarb
bound
or
call
sbb
jbe
fwait
out
push
pop
scas
test
push
sbb
sarl
sub
jne
mov
inc
inc
das
je
mov
inc
loop
setae
and
ja
pusha
xchg
jne
mov
or
stc
sub
add
int3
jo
and
lcall
in
call
testb
and
rclb
lret
scas
push
jge
cltd
iret
xor
imul
data16
inc
xor
xor
nop
lds
mov
mov
and
xchg
xchg
mov
xchg
pop
pop
pop
push
popf
jmp
jns
cs
or
pop
popa
dec
ljmp
sub
sbb
xchg
sbb
sbb
cmp
stos
mov
adc
mov
xlat
jg
fs
push
mov
mov
pop
int
mov
adc
mov
inc
adc
out
mov
mov
add
ljmp
imul
xlat
aad
add
jl
mov
into
push
add
inc
out
sbb
xor
loope
pop
add
mov
cmp
nop
fwait
bound
cwtl
test
shrl
sbbb
jmp
in
mov
pop
or
mul
jecxz
inc
inc
call
cld
out
inc
std
dec
push
rolb
cmp
adc
loop
add
adc
jno
mov
push
stc
push
addr16
test
cltd
jl
mov
mov
cmp
test
scas
mov
push
xchg
pop
inc
dec
ret
pop
jae
or
out
fisttps
hlt
and
mov
int
lcall
mov
repz
pop
mov
mov
test
leave
sub
js
imul
test
cwtl
xchg
sbb
pop
jle
lods
cli
pop
fiaddl
jno
and
mov
push
sbb
dec
jmp
and
aad
xor
fldt
gs
negb
or
mov
out
dec
mov
add
mov
mov
lods
push
push
push
testl
icebp
add
inc
push
fdivp
enter
mov
xor
push
mov
jb
jbe
insl
adc
adc
gs
add
mov
pusha
jno
sti
stos
xor
add
les
or
movsl
inc
aam
mov
dec
pop
and
jne
out
push
pushf
das
cmp
inc
icebp
loop
push
mov
scas
mov
shlb
test
test
jmp
das
lods
cli
jp
jns
mov
addb
dec
insb
jge
jnp
test
imul
xchg
push
mov
push
pop
inc
leave
push
add
in
push
in
sub
cld
lret
ds
add
inc
pop
cs
out
mov
packsswb
out
test
or
je
push
imul
xlat
mov
repnz
mov
pop
lods
jns
dec
mov
cltd
dec
push
add
sbb
jge
mov
push
mov
je
mov
daa
cltd
es
xchg
mov
xor
out
sahf
mov
and
loop
aaa
inc
fdivrs
mov
test
and
push
scas
aam
sbb
shlb
sub
adc
data16
mov
mov
cli
stos
mov
sti
sbb
mov
xchg
es
sahf
arpl
dec
dec
pop
test
ret
sti
das
sub
fnsetpm(287
add
add
jo
lret
cmpsl
sub
frstor
mov
mov
imul
test
popa
dec
sub
lods
sbb
stos
popa
sub
push
xor
in
push
inc
mov
sbb
aam
sub
sbb
adc
sbbl
and
ror
movsb
cli
cmp
imul
shrl
test
sub
int
dec
and
test
mov
add
sbb
mov
dec
push
stos
xor
xor
jo
adc
push
xor
in
subb
pop
pop
pusha
push
jb
cld
les
shlb
xor
out
pop
jl
in
int
sub
in
fadd
cli
jmp
dec
and
sub
ret
and
cld
rorb
aam
test
xor
fisttpl
in
or
fs
mov
pusha
push
xor
jmp
addb
test
leave
fcoml
fsts
jno
lret
mov
in
mov
in
lcall
cmp
pop
cmp
shrl
pop
jb
pop
xchg
dec
xchg
pusha
pop
inc
jo
out
adc
or
popf
xor
pushf
sbb
adc
or
pop
ss
mov
sub
stos
dec
iret
sti
mov
xor
ljmp
ret
mov
lret
insb
lret
shll
imul
inc
pop
and
dec
in
popf
inc
xchg
test
lods
lds
jecxz
dec
cmp
ja
or
out
and
sbb
jp
jmp
cwtl
jg
imul
shr
imul
xor
jmp
jne
aaa
imul
add
mov
mov
in
inc
jno
mov
xor
sbb
icebp
pop
lahf
int3
nop
jbe
cmp
xor
js
shr
pop
dec
xor
xor
inc
lcall
mov
rolb
pop
clc
leave
adc
cmp
mov
js
call
add
rcrb
jo
mov
and
xchg
mov
pop
pop
push
int
lock
lds
jp
outsb
pop
cmp
mov
jl
push
ret
test
jbe
ret
push
test
mov
mov
mov
dec
mov
and
xchg
sbb
cmpsl
mov
xchg
addr16
inc
test
nop
jns
inc
aas
inc
xorb
rcrl
fldl
pop
fsubs
mov
adc
dec
cmp
mov
int
mov
xor
pop
lcall
dec
mov
sbb
inc
sbb
adc
lcall
out
shrl
pop
test
cwtl
sbb
imul
mov
xchg
pop
fs
jne
jae
fcmovnu
bound
add
lock
loope
orb
jns
fucomp
xor
loope
and
mov
or
pop
movsl
popa
dec
hlt
inc
mov
adc
adc
dec
push
cmp
mov
jl
out
lcall
adc
mov
lods
ljmp
dec
xchg
and
inc
fdivl
or
cmc
test
mov
xchg
xchg
fidivrl
cmp
push
fbstp
insl
cmp
inc
xor
mov
cld
mov
in
outsb
aaa
xor
cmp
out
pop
or
cmp
add
aas
inc
inc
jmp
into
xchg
jno
jo
call
loopne
out
adc
aas
test
add
jmp
popa
mov
popf
inc
loop
lahf
push
pushf
push
adc
insl
xor
cmpsl
int
lahf
sub
jne
test
pusha
lds
mov
adc
adc
rorb
mov
dec
stos
inc
jmp
mov
out
je
mov
jmp
mov
cmpsb
in
lea
ds
ja
ds
jnp
out
adc
sbb
mov
pop
repz
add
xchg
loop
and
pusha
jmp
and
mov
in
inc
xor
push
jae
pop
pop
jno
stos
mov
fwait
or
les
dec
cmp
xchg
scas
mov
lret
loop
aad
and
sub
lods
nop
dec
and
add
or
and
xor
in
push
fmulp
jnp
adc
ret
sbb
mov
cmpsb
jae
lods
adcb
lock
mov
adc
sbb
jbe
cmp
adc
push
adc
sub
or
popf
xchg
inc
sbb
js
xchg
adc
sbb
mov
sub
test
fidivl
test
mov
cmc
pop
mov
dec
jle
pop
jmp
jbe
xlat
call
dec
add
fwait
stos
shrl
pusha
jae
outsb
and
adcl
pop
mov
mov
cmp
pop
sbb
cmpsb
mov
jb
mov
pop
mov
xchg
push
mov
add
mov
cmpsb
imul
sbb
mov
adc
inc
push
pop
jbe
jp
add
push
add
pop
pop
pop
lret
shr
inc
fdivs
adc
sarl
daa
aam
fsubrp
ja
xor
and
dec
sti
out
int
cld
adc
push
pop
enter
push
daa
jb
lods
sub
pop
pop
mov
xor
out
outsl
addps
and
lods
mov
sbb
cmpsb
dec
adc
cltd
enter
mov
nop
jle
pop
dec
or
aas
clc
xchg
xchg
sbb
cmp
ficoml
pop
repnz
ret
cmp
cld
lds
aaa
mov
into
aaa
gs
mov
push
xor
lock
cmp
and
imul
cmc
push
and
mov
mov
and
jle
xchg
sub
scas
cwtl
push
mov
xchg
sbb
sbb
js
jl
rcll
clc
cld
jmp
mov
aad
or
jb
cmp
jae
ds
aas
push
loop
shr
mov
mov
fisttpll
jge
fcoms
mov
mov
and
jle
pop
adc
cmp
mov
out
sahf
dec
push
mov
xchg
xchg
push
pop
mov
adc
inc
inc
sbb
xor
popa
sbb
add
je
inc
adc
xor
fstpl
xor
cld
xchg
mov
cmc
out
cmp
jne
push
sub
xchg
pop
and
push
cld
pusha
loope
loopne
pop
add
push
mov
mov
test
dec
push
dec
cmpsb
or
mov
jnp
das
add
fwait
aam
xchg
cmpsb
out
sbb
pop
test
test
pop
lea
fucom
xchg
and
pop
xchg
mov
aad
movl
push
jp
cs
mov
push
mov
push
xchg
data16
out
push
sub
cmp
mov
lret
pop
sbb
cmpsb
mov
fstpl
loope
fbstp
sub
jo
and
das
sbb
push
aad
and
cmp
mov
mov
fwait
sbb
fmul
pop
ret
xchg
frstor
inc
mov
sarb
xchg
fs
fs
nop
flds
fmul
scas
paddd
jno
dec
mov
negl
loope
and
popf
add
and
ret
add
mov
cmp
test
mov
lahf
xor
mov
jl
push
lds
sbb
loope
push
sahf
aad
call
cmp
out
outsl
repz
mov
adc
and
in
inc
add
mov
inc
cmp
sbb
sub
xchg
or
ds
inc
lods
sbb
xorb
xor
dec
lods
dec
divl
int
cmp
push
addb
xchg
iret
xor
inc
lea
mov
xchg
loopne
xchg
aam
fldenv
mov
cmp
inc
cmpsb
cmp
mov
in
sub
movsb
sub
push
ret
loop
andl
jmp
insl
xor
loopne
xchg
xchg
push
add
xor
out
in
push
ljmp
sub
loope
insb
jbe
xor
jmp
aam
push
stos
push
push
xchg
ficompl
xchg
xchg
cld
sub
test
sbb
pushf
cmc
or
jo
and
out
sarl
sub
push
pop
inc
ja
mov
and
jl
mov
scas
rclb
push
mov
cmpsb
js
fiaddl
and
push
mov
mov
or
push
push
sub
mov
jb
and
clc
ljmp
hlt
and
out
jp
jp
push
daa
in
lods
fcomip
mov
inc
je
xor
mov
push
imul
inc
inc
rcll
mov
sbb
cmp
push
mov
inc
dec
call
mov
je
test
test
jae
lods
cmp
pop
nop
shll
mov
mov
xchg
adc
xor
out
adc
jo
push
lods
test
mov
cmp
lock
repnz
fsubrl
les
xor
outsb
jns
mov
mov
dec
sub
mov
divl
mov
in
push
inc
dec
or
jg
and
jp
gs
dec
mov
pop
or
dec
movsl
xchg
lds
push
shrb
ss
call
adc
mov
xchg
xorb
and
stos
es
outsb
and
mov
push
inc
or
subb
pop
xor
push
pop
ja
pop
ja
mov
js
sti
mov
cwtl
outsl
jnp
rcrb
ljmp
outsb
inc
push
jecxz
lahf
mov
inc
in
hlt
adc
cmpb
pop
fnstcw
mov
popf
inc
xchg
sub
movsb
aam
shrb
fldcw
cltd
add
push
pop
lods
and
lea
xchg
sahf
addr16
shlb
popa
divb
iret
sub
into
xlat
jmp
imul
pop
push
ret
stos
xchg
mov
sti
or
xchg
stc
jns
in
gs
outsb
pusha
pop
jnp
push
add
cli
mov
aam
cmp
or
cmpsb
jbe
imul
lods
add
mov
clc
out
push
jbe
sub
addb
cmp
ss
xchg
jne
ror
dec
pushf
jmp
imul
inc
adc
push
push
xchg
jle
ds
call
sbb
push
lcall
and
add
jle
sahf
rcrb
fwait
cmc
jnp
out
dec
out
mov
and
ror
int3
dec
add
xor
lcall
or
popl
inc
mov
popa
lds
sub
jnp
adc
data16
ja
pop
pusha
fiadds
and
xchg
jno
loope
dec
rcll
xorb
sub
mov
test
fsubrl
mov
and
inc
mov
or
adc
lock
jnp
xchg
out
cmp
popa
mov
daa
addr16
stos
and
out
mov
push
xchg
mov
dec
inc
inc
dec
push
lret
movsb
cmpsb
test
mov
pushf
cli
push
test
mov
ja
dec
shrl
add
xchg
addr16
cmp
adc
xchg
insb
cli
mov
pop
cltd
movsb
arpl
movsl
int
ret
adc
adc
ja
shlb
jns
mov
pop
mov
add
or
lods
cs
arpl
dec
js
pop
mov
popa
jns
sarl
adc
pop
xchg
fnstsw
lret
subb
inc
fbstp
stos
sub
outsl
imul
shll
jo
int3
xor
xor
insb
dec
sub
xchg
movsl
outsb
vcmppd
sbb
mov
test
stos
cmp
ret
pop
shl
mov
and
push
daa
loop
sub
fnstcw
leave
inc
or
add
jmp
or
jne
inc
cwtl
xchg
and
rcrb
lahf
push
test
pushf
inc
rorb
imul
movsb
stc
nop
dec
incl
andl
out
loope
lods
xchg
pusha
jmp
test
out
cmp
sbb
push
inc
add
sub
push
call
ja
shl
jnp
jle
fisubl
out
cli
daa
rcl
shrl
xor
lock
sbb
xchg
mov
jne
xor
mov
dec
jp
scas
daa
fstl
sbb
out
insb
cmpsb
ss
das
call
mov
xor
or
lret
movsb
pop
ret
jne
push
popf
cmpsb
sbb
mov
mov
ljmp
pusha
jns
jae
subb
ds
push
arpl
xor
adc
xchg
lret
or
int
fs
add
add
jmp
roll
mov
adc
sub
inc
inc
xor
repz
bound
and
daa
movsl
inc
or
stos
iret
or
jl
mov
cmpsl
jl
sbb
and
idivl
repz
cmc
cmp
mov
dec
stc
orl
movsl
clc
jle
pop
sub
cs
fidivrl
fdivs
inc
scas
lods
es
and
aas
dec
dec
insb
neg
mov
mov
icebp
inc
iret
cmpsb
cmp
and
add
xchg
push
lods
outsb
mov
pop
sbb
bound
test
ja
jne
in
xor
mov
sub
mov
push
jl
sub
xchg
jo
insb
addr16
inc
sub
clc
out
out
fwait
je
or
out
pop
jmp
aad
inc
pop
add
dec
mov
cmpsl
in
stc
ror
cmp
jg
stc
jae
scas
add
outsl
jp
and
mov
mov
pop
xchg
and
mov
or
loop
shr
lods
dec
push
sub
testb
mov
and
add
cmp
cmp
push
cmp
xor
cmc
push
xchg
push
sbb
push
aaa
dec
cwtl
daa
iret
inc
rolb
xchg
es
lea
dec
cmp
test
loop
lret
adc
cmc
inc
xchg
sbb
ljmp
push
jnp
imul
jge
iret
mov
xor
adc
imul
inc
inc
cmp
or
push
mov
inc
pusha
dec
sbb
jno
cmpsb
pop
dec
lods
lcall
cld
and
fcom
cltd
cli
lods
mov
sub
lret
cli
das
cltd
jo
in
stos
xchg
jl
dec
fwait
leave
nop
shlb
or
adc
and
dec
mov
inc
pop
add
inc
pop
pop
nop
xlat
fistpll
subb
pop
sub
orb
call
jbe
out
sub
stc
dec
pop
dec
in
xor
or
mov
jns
sti
xchg
pop
xor
jbe
movq
stos
loopne
addr16
jb
rorb
xor
jns
sbb
lods
mov
xchg
mov
lods
std
fdivrs
sbb
shr
out
stc
jno
inc
or
in
sub
loopne
cmp
xor
fwait
or
addr16
mov
push
cmp
imul
xor
jnp
push
test
and
scas
repnz
add
lock
mov
mov
cmp
adc
or
lds
fcmovb
nop
bound
bound
xchg
adc
jmp
test
je
stos
adc
outsb
or
pop
lcall
lret
xchg
dec
push
nop
pop
stc
push
std
adc
iret
mov
scas
test
mov
cltd
data16
xchg
pop
cmp
xor
into
mov
addr16
fistpll
shl
xchg
icebp
into
icebp
icebp
inc
xorl
icebp
xchg
or
and
push
icebp
adc
jg
aaa
ljmp
lock
pop
cmpsb
push
cmpsb
sub
stc
test
into
es
mov
imul
fwait
jmp
andl
jne
daa
jae
insb
jecxz
fldt
insl
mov
aam
push
add
push
mov
repz
out
xor
daa
jb
outsl
xorl
mov
or
stos
lods
fwait
call
or
sbb
pop
out
loopne
xchg
das
push
sub
aam
aad
shrl
sub
movsb
pop
jle
lcall
mov
out
mov
jo
and
push
scas
push
sub
cmp
ret
pusha
lods
push
mov
adc
and
adc
aas
xchg
lods
test
mov
mov
sarb
jnp
push
fwait
add
sbb
xchg
cs
movsl
mov
xor
xchg
mov
jbe
int3
cmpsb
mov
scas
adc
mov
int
out
or
test
hlt
out
jno
push
and
std
push
cmp
push
sahf
cmp
xchg
sub
jo
subl
test
mov
inc
inc
add
lret
sbb
xchg
and
jmp
outsl
and
stos
lods
icebp
adc
adcb
push
pop
shll
add
xor
adc
dec
pusha
cs
mov
xchg
push
pop
jae
jl
mov
mul
fidivrs
add
adc
imul
stos
cwtl
jo
shlb
rorl
lcall
sbb
sbb
ret
push
pop
test
insl
xor
pop
xchg
test
and
jge
adc
lock
sbb
jb
fwait
cmpsb
les
xchg
je
push
aas
mov
sbb
aas
and
stc
sub
bound
fidivs
jno
push
sbb
and
pushf
std
cmp
sbb
jge
sahf
inc
jbe
mov
jge
mov
and
sub
outsb
push
aaa
lcall
xor
jnp
daa
mov
in
dec
adc
push
lret
sahf
adc
lret
aas
cmp
fistpl
sbb
jae
dec
pop
scas
iret
cmp
xchg
push
add
shl
sbb
loope
es
add
add
dec
xchg
aam
jl
mov
mov
xor
adc
inc
jp
cmp
adc
dec
sub
cwtl
jbe
cmpsl
push
clc
push
cmc
fsubrl
lahf
adc
je
mov
sub
inc
sbb
fidivrs
in
pop
add
sahf
sti
push
cltd
pushf
popf
pop
xchg
fcmovbe
push
jg
rol
popf
nop
loope
loopne
cmp
cmpl
int3
dec
mov
sbb
sbb
js
mov
pop
ss
movsb
jecxz
pop
test
jmp
out
jp
dec
lea
das
inc
out
xor
push
fidivl
stos
mov
push
mov
cmpl
xchg
dec
outsl
sti
in
jecxz
lods
xchg
popa
je
mov
cmpsl
int
ret
mov
jae
stos
into
and
push
mov
sub
dec
sti
je
xor
cmpsb
popa
sbbl
sbb
imul
aaa
xlat
inc
add
out
mov
jb
dec
lods
incl
loopne
xchg
lods
mov
outsl
je
pop
addr16
test
push
dec
dec
mov
sarb
mov
sub
xchg
je
jb
mov
jo
mov
in
lds
shrl
mov
rcr
punpckhdq
push
jne
dec
lods
xor
inc
test
mov
insb
sbb
bound
insl
and
sbb
out
je
dec
inc
or
cs
clc
mov
hlt
pop
lret
push
xchg
fmul
xchg
and
or
mov
cmpsl
test
leave
movsb
repnz
std
sti
mov
stos
jecxz,pn
cmp
pop
push
call
cwtl
and
mov
orl
icebp
insb
imul
inc
xor
jp
cmpsl
mov
enter
ret
mov
icebp
inc
push
sbb
push
jge
xor
mov
mov
push
xchg
daa
or
mov
mov
jl
ss
movsl
push
es
push
scas
push
in
xchg
or
mov
add
aas
dec
jle
in
std
aas
icebp
data16
mov
ficompl
imul
inc
mov
mov
insb
jns
push
sbb
loope
ret
cmp
iret
and
pop
add
dec
lds
push
aad
cmc
xchg
or
fldl
dec
mov
inc
cmpsb
hlt
test
pop
push
add
lock
sti
test
aaa
add
dec
push
and
or
enter
std
add
and
pop
mov
pop
mov
imul
or
jae
push
and
addb
pop
fwait
mov
cmp
push
sbb
jle
hlt
dec
pop
xor
in
inc
mov
cs
repnz
notl
and
and
push
adc
cmp
inc
inc
inc
mov
push
xchg
push
je
adc
push
lcall
lahf
fmull
or
push
ja
pop
insb
cs
push
jae
dec
xchg
lods
out
mov
adc
lret
pop
sub
sub
sbb
push
pushf
dec
rorb
cmpsl
leave
xchg
pop
scas
sbb
icebp
push
fcoms
vaddsubpd
ret
push
ljmp
out
dec
into
loopne
scas
and
fwait
test
bound
mov
xor
ret
inc
dec
adc
ss
subl
insl
inc
sbb
adc
inc
jne
mov
xlat
adc
and
push
imul
in
cmp
insb
or
ret
adc
roll
pop
mov
cwtl
das
mov
xlat
or
dec
icebp
out
inc
and
fst
inc
out
pop
jne
fildl
je
inc
cltd
add
ret
int3
xlat
xchg
lods
mov
jl
loopne
fs
sbb
fdivrl
das
mov
jle
in
push
push
inc
cwtl
jns
gs
subb
stos
lds
or
push
push
push
cmpsb
mov
iret
cmp
lret
or
sti
je
ficomps
imul
ret
ljmp
xchg
das
add
jnp
in
mov
push
pop
xchg
mov
cmpsl
andb
roll
test
xor
imul
outsl
stos
or
add
dec
xor
adc
movsb
cmp
mov
stos
ss
test
jecxz
lds
imull
mov
xlat
push
lods
cmpsl
xchg
mov
outsb
add
mov
ds
flds
xchg
push
and
cmp
lea
pop
add
bsf
into
dec
sub
outsl
arpl
aas
xor
loop
and
push
test
adc
cs
mov
imul
xchg
pusha
repz
jnp
and
dec
push
push
outsb
in
aaa
sub
inc
dec
lret
das
or
cmp
sub
push
not
leave
daa
fmul
xor
fsts
pop
or
adc
fdiv
ficomps
and
mov
mov
add
and
xchg
ds
shl
jge
push
rorb
jo
lds
pop
sbbl
adc
sbb
lcall
push
outsl
loope
sbb
mov
xor
jmp
mov
push
fisttpl
data16
jmp
hlt
leave
sub
pop
or
rcll
aaa
inc
sub
cltd
pop
out
push
test
out
sub
test
iret
shlb
out
mov
lret
out
inc
xor
lock
insb
fwait
mov
xchg
or
ja
dec
fists
add
ja
mov
sbb
aad
push
or
dec
js
mov
ret
or
bound
aam
andb
out
fidivrs
lahf
dec
outsb
bound
icebp
ds
xchg
test
and
loopne
adc
mov
ds
int3
cmpsl
out
test
addr16
mov
mov
jae
xor
jnp
xchg
fdivs
push
cmp
jae
mov
jne
pop
xchg
inc
lds
sbbb
cmp
pop
clc
mov
sub
pop
mov
jge
aas
imulb
add
sub
pop
pusha
add
lahf
movsb
inc
dec
cmpsb
mov
push
dec
mov
pop
mov
jno
arpl
sub
sub
ret
gs
addr16
nop
mov
xchg
and
lods
test
lods
jbe
xchg
cwtl
test
movsb
fcoml
xor
scas
arpl
xchg
push
pop
out
mov
mov
cltd
arpl
inc
pop
stc
adc
or
sub
in
cltd
es
xchg
imull
imul
sbb
cmp
cmc
or
outsb
sarb
lcall
das
scas
test
push
mov
sub
or
mov
dec
mov
sbb
mov
adc
cmpsl
and
push
mov
mov
int3
repnz
or
loope
jns
mov
clc
arpl
pop
inc
push
pop
and
and
mov
cld
sbb
sub
sbb
dec
mov
xchg
or
adc
inc
rol
outsb
push
mov
mov
xor
xchg
add
jne
mov
jnp
xor
adc
out
popa
test
ljmp
stc
and
fcmovne
sub
fadd
stos
lds
dec
orb
dec
hlt
imul
sub
pusha
fists
rorb
sub
cmp
pop
sub
jb
mov
mov
imul
imul
out
loope
mov
mov
js
mov
inc
and
in
dec
dec
inc
lret
xchg
jno
push
xor
jmp
dec
mov
je
jge
cmp
jne
cmp
scas
add
xchg
xchg
jbe
in
cli
and
push
xor
enter
sbb
ja
pop
adc
scas
mov
inc
in
bound
xchg
xor
aaa
lea
cs
shl
push
xor
cwtl
push
sbb
sbb
push
jo
xchg
adc
cmp
jae
and
les
xchg
push
leave
push
xorb
cmp
xchg
aam
mov
movsb
cmp
jno
or
mov
mov
dec
mov
mov
sbb
or
shll
das
cltd
repz
mov
rcrl
pushf
mov
lods
xlat
jae
fnstenv
fs
nop
or
sahf
repnz
push
sub
ds
xor
rcll
mov
push
lret
ds
and
popa
jb
sub
mov
mov
and
add
rclb
mov
xor
sbb
xchg
ret
xor
pop
mov
mov
xor
pop
pop
test
xchg
mov
movsl
lcall
cwtl
xor
ljmp
xor
ret
inc
xchg
in
adc
cmp
lods
mov
test
inc
movsl
popf
std
cmp
mov
inc
xor
lock
inc
iret
xor
stos
cmc
push
div
add
outsb
jns
scas
outsb
pop
jecxz
cmp
sbb
jg
cmp
incb
jbe
push
cmp
hlt
imul
inc
das
pop
adc
in
aas
aam
pop
pop
imul
repz
mov
add
lods
fsubl
rorl
xchg
test
es
add
xchg
xchg
mov
xchg
dec
adc
mov
sarl
sbb
lcall
fdivrl
fwait
popa
or
outsl
repz
sbb
test
mov
mov
xlat
jmp
ret
sbb
sub
mov
mov
or
pusha
mov
in
bound
insb
sbb
stos
adc
dec
pop
lods
mov
dec
pop
insb
int
xchg
add
pusha
mov
add
adc
fildll
xchg
or
cmpsl
cltd
pop
and
push
add
in
daa
imul
or
cli
sbb
loopne
jo
in
out
enter
mov
mull
push
scas
mov
stos
and
lahf
pop
cmp
sbb
push
test
xchg
fadds
jge
cwtl
adc
in
pop
mov
sbb
das
mov
pop
mov
dec
sahf
aas
pop
cmp
mov
repnz
sbb
xor
xchg
and
jbe
inc
test
outsl
adc
jbe
sub
repz
aaa
sahf
inc
jg
sbb
mov
push
fistl
fs
push
jg
cmp
push
xchg
dec
mov
out
and
adc
sub
mov
inc
add
inc
pop
xchg
xor
lahf
lock
mov
ss
enter
nop
sbb
sarl
ljmp
test
lds
sub
pushf
sbbl
sbb
xor
test
in
in
ja
test
dec
jb
add
xor
pop
xchg
mov
test
loope
xor
push
out
mov
jecxz
je
mov
mov
or
adc
insl
jo
mov
test
pushf
xchg
or
outsb
cmp
mov
into
insb
cmc
repz
dec
not
or
loopne
shrl
lahf
in
jnp
andb
jnp
shlb
mov
ss
das
sbb
scas
dec
mov
cmc
repz
aaa
js
and
push
or
jns
pusha
sbb
adc
aas
rcrb
push
ret
jecxz
fisubrl
push
mov
dec
jno
jl
insl
movsl
fisttpl
hlt
xchg
in
in
jbe
push
xchg
enter
adc
icebp
add
out
fstpt
mov
fsubs
cmpsl
aaa
or
fimull
lods
cmovb
mov
je
push
out
and
dec
es
sbb
mov
or
call
xchg
stos
cwtl
or
in
dec
je
add
add
outsb
xchg
iret
lahf
fbld
test
or
rcl
jecxz
cmp
shl
sub
repnz
adc
sub
repnz
fidivrs
insl
mov
mov
jnp
xchg
xchg
or
stos
lock
push
xchg
add
call
mov
rcll
sbb
cmp
out
xlat
ja
scas
mov
xchg
mov
or
mov
and
and
dec
adc
addr16
xlat
push
pop
push
xor
pop
iret
movsb
stc
mov
mov
or
cltd
int3
test
mov
in
jge
xchg
xchg
movsb
popl
mov
sub
and
pop
loope
dec
stos
lods
ds
pop
insb
and
adc
dec
mov
scas
call
jge
sub
add
adc
and
idivb
in
add
mov
gs
movsl
sbb
and
xchg
jns
inc
loop
sub
or
idiv
push
pop
dec
jge
and
loopne
xor
loop
push
addl
cltd
jne
jnp
mov
add
mov
mov
adc
jnp
sbb
out
lahf
cmp
push
xor
mov
sbb
lret
lods
or
jecxz
cltd
bound
test
push
pop
loopne
iret
jl
xchg
arpl
scas
ljmp
call
add
sbb
sbb
adc
dec
out
push
enter
lret
push
xchg
mov
push
dec
inc
sbb
pop
pop
cmp
arpl
xchg
and
gs
insb
out
cli
xchg
pop
pop
xor
cli
icebp
jmp
dec
sbb
aad
dec
stos
loopne
je
push
mov
push
xor
stos
xchg
ss
pop
xor
loope
ret
sti
mov
loopnew
mov
scas
or
push
cmp
ljmp
jbe
dec
test
cwtl
adc
add
fidivs
mov
xchg
out
mov
and
aas
imul
sub
test
sbb
jmp
adc
loop
subl
inc
cmp
aas
movsl
push
out
rclb
lods
xchg
mov
mov
les
inc
mov
test
xor
push
pop
add
push
insb
arpl
cltd
stc
repz
arpl
jae
dec
mov
pop
dec
sbb
imul
es
roll
mov
mov
stc
mov
gs
loop
inc
je
jae
mov
dec
jg,pt
loopne
test
fsubrs
jne
dec
out
test
enter
sbb
and
inc
or
and
aas
cli
aaa
inc
xchg
fcomps
or
cmp
push
into
inc
testl
xor
xor
mov
out
test
das
cli
shll
rolb
mov
cmpsl
data16
lods
adc
sub
pusha
mov
push
and
pop
ficompl
lcall
int3
mov
dec
xor
cmp
bound
jne
test
push
mov
enter
into
push
sti
hlt
les
pushf
pop
xor
loop,pn
xchg
and
clc
and
xor
das
jecxz
outsb
sbb
iret
cmp
sub
fists
sbb
push
inc
jge
pop
subb
add
xor
pop
stos
repz
sti
push
or
je
outsb
movsb
or
pushf
ljmp
imul
stos
arpl
pop
mov
test
adc
enter
jmp
imul
adc
xchg
mov
or
sbb
arpl
hlt
addr16
mov
sub
or
and
sbb
inc
into
xchg
lahf
mov
sub
lods
fisubrl
fidivs
sti
push
loope
lcall
je
movsl
inc
iret
add
cmp
insl
jns
adc
adc
loope
into
pop
lret
pop
int3
inc
sarb
call
icebp
xchg
into
rcl
divl
sbb
adc
adc
rcr
cmpsl
outsl
mov
or
jge
push
push
movsl
outsl
or
cmp
clc
imul
add
cmp
mov
mov
sbb
xor
in
pop
xchg
push
cmp
test
iret
mov
test
jmp
orl
addr16
dec
out
push
jnp
jne
cwtl
repz
fistps
pop
sar
push
das
leave
mov
test
or
fucomip
mov
pop
es
repz
xchg
or
cmp
daa
cmp
push
cmp
dec
in
icebp
rcll
push
pop
js
popa
or
xor
pop
sbb
inc
push
mov
adc
popf
cmp
xor
incb
sub
pop
sahf
mov
std
nop
fldt
call
mov
jecxz
rclb
fidivrl
incl
pop
bnd
je
cli
dec
js
stc
sbb
jl
rol
lcall
adc
jmp
scas
loopne
cld
enter
test
rorb
mov
sbb
cld
xor
shrb
adc
xchg
mov
push
jecxz
stos
daa
lods
sbb
test
popf
jge
fstl
stc
lods
push
not
xor
mov
sub
cmpsl
jbe
scas
aaa
scas
inc
loopne
test
outsb
cmp
inc
aam
stc
dec
inc
or
test
xchg
dec
in
out
cmp
sbb
in
sub
jge
dec
jb
fcoms
jmp
data16
pop
inc
aam
mov
imul
xor
stos
xchg
fnstenv
sti
pop
in
popa
mov
and
insb
mov
push
icebp
and
push
es
cmpsb
jg
movsb
mov
sbb
push
je
mul
mov
xor
pop
adc
push
ror
test
pop
ret
andl
add
fldl
inc
out
inc
cld
stos
pushf
stc
xchg
cmc
push
jb,pt
push
shl
lods
fstpl
mov
mov
push
sti
xchg
add
out
outsb
dec
dec
jg
or
sub
loopne
or
pop
sbb
inc
aam
push
cltd
adc
pop
xchg
arpl
and
imul
cmp
enter
packsswb
cld
mov
jo
ret
cmp
push
pusha
lcall
sbb
push
ret
gs
xor
xor
aam
xor
adc
add
xchg
aas
shll
clc
scas
mov
pop
dec
rcrl
outsl
sub
mov
mov
movsb
sub
xor
imul
pop
adcl
xchg
xchg
aad
lcall
test
popf
lds
sub
mov
pop
xchg
add
test
xchg
cmp
ret
or
jge
mov
shll
shrl
push
pop
icebp
jno
sbb
int3
pop
xchg
int
imul
je
dec
xchg
lods
test
arpl
inc
mov
mov
sbb
aaa
and
mov
pop
sub
jp
dec
aad
int3
xor
mov
jecxz
out
mov
adc
cltd
daa
xlat
dec
js
add
jmp
aas
mov
xor
test
pop
xchg
out
movsb
jp
xchg
lea
mov
cmp
lds
xchg
divb
mov
cmp
sbb
pushf
push
in
mov
and
or
add
data16
fdivl
mov
xor
test
jge
sub
or
sti
or
push
mov
inc
pop
and
jmp
xor
fisubl
je
notl
xchg
dec
sbb
mov
xchg
mov
pop
and
push
inc
div
pop
hlt
fmull
cld
jmp
cli
add
sub
jmp
out
cs
and
aaa
cmp
push
lods
test
gs
jne
adc
xchg
dec
sahf
push
sti
in
xor
cli
ret
mov
dec
mov
jb
or
into
inc
fwait
enter
in
adc
sahf
call
jne
sbb
arpl
dec
mov
mov
in
ret
cmpsb
outsl
mov
mov
inc
mov
adc
ljmp
pop
jge
js
scas
or
xchg
into
jne
imul
add
or
dec
outsb
pop
xchg
rolb
fwait
movsl
adc
mov
pop
sti
or
xor
sub
jbe
insl
push
adc
movsl
xchg
adc
pop
loopne
int
jo
dec
out
pop
inc
cmc
outsb
cli
fldenv
mov
or
xor
test
cmpsb
mov
pop
and
or
gs
leave
xchg
sub
bound
fstps
cs
daa
adc
hlt
nop
add
push
fdivr
mov
add
loopne
or
jmp
nop
inc
mov
adcl
cld
inc
adc
cmpsl
inc
sub
dec
sbb
test
sti
jecxz
lds
push
adc
test
cvtps2pi
jle
pushl
sub
insb
add
jno
add
jne
roll
dec
test
mov
add
dec
sub
test
rorb
jp
sti
pop
push
push
mov
pop
repnz
and
adc
out
fcomps
mov
inc
dec
out
or
cli
into
mov
test
sbb
xchg
sti
cltd
rcl
dec
adc
test
mov
xor
or
push
adc
out
movsl
pop
mov
outsb
aad
icebp
rcrb
adc
aas
popa
fistpl
and
notb
loop
xchg
rorl
ffree
sub
lcall
mov
out
pop
pop
movsl
sti
sub
jo
out
pop
test
fsubs
cmp
inc
jae
xor
popf
nop
mov
leave
mov
out
and
cmpsb
out
push
push
ret
pop
sbb
and
jo
dec
mov
fimull
cld
push
movsb
into
lahf
sbb
lods
addr16
fs
js
ljmp
adc
stc
inc
pop
lods
or
and
push
mov
ficomps
adc
es
insb
jg
cmp
add
sbb
test
cmp
subl
xchg
sbb
or
inc
notl
aas
xchg
pop
outsb
arpl
mov
cltd
lods
add
sti
lret
and
sub
ds
stos
inc
sarl
negb
inc
push
int
mov
es
lret
dec
jo
pop
or
or
ret
xor
dec
inc
lds
add
pushf
push
subb
cld
pop
ljmp
jbe
mov
rcrl
xlat
mov
fwait
dec
ret
fwait
roll
lret
mov
hlt
mov
scas
push
adc
ret
adc
rcr
shll
lods
pop
movsl
push
outsb
cmp
leave
outsb
jmp
fcmovu
rcll
or
jns
xor
mov
sub
lahf
nop
mov
dec
iret
jl
add
mov
push
inc
subl
push
shr
adc
pop
loopne
bound
pop
sbb
inc
fildll
leave
cmc
sahf
sahf
adc
sub
lods
sub
shrb
mov
pop
lret
lret
pop
mov
xor
ja
pop
mov
loop
icebp
and
fidivrs
sbb
stos
sarl
dec
shl
bound
loop
jecxz
and
xchg
mov
fldenv
add
push
ret
enter
mov
adc
inc
nop
jmp
mov
in
mov
sub
push
aas
cwtl
fistl
pop
cmp
xor
sbb
orb
push
xor
cmp
sub
outsb
sbbl
pop
xchg
fcmove
cli
sti
aaa
xchg
insl
fld
arpl
sub
push
idivb
fisttps
mov
scas
shlb
out
mov
movsb
ss
mov
inc
inc
and
or
push
rorb
push
int
pop
push
push
xorl
pushf
scas
cmp
leave
mov
ljmp
es
das
pop
mov
movsl
lds
ja
add
add
fwait
mov
cmpsl
shrl
push
scas
adc
out
pop
mov
pop
mov
daa
insl
sub
pop
call
enter
cmc
flds
out
jp
clc
testb
inc
js
xchg
xor
data16
lock
enter
cmp
sbb
icebp
cmpsb
insb
push
addr16
mov
sub
add
rolb
add
pop
ds
cmpsb
xor
sbb
negl
xchg
ror
jae
adc
stos
into
jo
xchg
inc
std
stos
fs
ficoml
cs
cmpsb
push
push
mov
cmpsb
mov
je
mov
stos
pop
test
gs
shlb
jle
sbb
inc
test
cmc
in
jnp
out
adc
xor
outsl
rorb
sbb
in
pusha
pushl
jo
mov
and
mov
ss
add
lahf
ja
inc
nop
ficompl
les
sti
int
add
bound
push
add
pop
in
lret
jo
in
pusha
mov
cltd
xor
pusha
jae
xchg
loopne
int
xor
jg
xor
push
sub
sbb
loopne
int3
mov
pop
arpl
mov
or
jno
xchg
popf
dec
out
add
push
repnz
inc
xor
sbb
mov
clc
iret
jae
icebp
mov
xor
scas
js
push
mov
mov
mov
jns
das
icebp
arpl
testb
add
int3
nop
adc
sub
inc
and
xor
in
sub
aas
movsb
bsf
xor
daa
dec
xor
mov
dec
or
rcr
arpl
daa
outsb
test
enter
notb
popa
out
mov
cli
pop
push
movsl
fldcw
mov
inc
insb
xchg
lds
loope
mov
arpl
inc
sub
movsb
testl
cli
dec
cltd
hlt
ds
pop
inc
sahf
xchg
hlt
daa
and
insl
frndint
jo
pop
xchg
inc
adc
dec
imul
jle
jae
test
repz
dec
loop
or
loope
xor
ret
or
mov
xor
inc
mov
xor
rorl
pop
push
popa
fstpl
insb
xor
aam
sarb
mov
xchg
jmp
jle
ret
mov
mov
cwtl
sarl
pop
sub
xchg
push
subb
in
jno
cmpsl
push
mov
orb
pop
sub
mov
call
mov
or
mov
or
stos
sahf
data16
cmpsl
out
popa
mov
je
xor
mov
mov
int
jne
in
add
je
into
and
pop
testl
dec
lret
lret
in
aad
xchg
pop
ja
cmovo
xchg
mov
dec
subl
mov
xchg
pop
mov
lcall
sub
add
cmpsl
xorl
xor
sub
push
add
fs
xor
arpl
sti
pop
cmp
lahf
fdivs
xchg
and
inc
scas
xor
add
mov
mov
push
xchg
adc
ljmp
repz
xchg
call
pusha
add
push
int3
jp
and
mov
js
mov
sub
lea
sub
hlt
mov
pusha
mov
jle
push
popa
cmp
jb
jnp
push
cwtl
sbb
ffreep
ficoms
and
mov
cltd
xor
add
not
mov
mov
jb
push
lcall
into
add
fidivs
xchg
leave
test
ss
push
std
push
imul
js
mov
jb
mov
cmpsb
mov
lcall
pop
sahf
pop
jecxz
mov
and
mov
pop
or
insb
aam
fwait
imul
mov
imul
jns
outsl
inc
push
and
imul
mov
orl
dec
or
or
adc
xchg
std
jg
pushf
jge
cmp
rolb
inc
adc
push
test
test
jl
and
adc
lahf
cld
imul
sbb
outsb
int
mov
or
dec
inc
xlat
outsb
movsl
sbb
push
sub
pop
jg
jnp
rorl
pushf
inc
sub
daa
mov
filds
push
sti
sbb
push
and
mov
jno
push
pushl
inc
iret
lds
inc
mov
cmp
loope
loopne
test
or
sub
fs
lock
cmp
rcrb
movsl
das
xor
lods
fdivr
mull
adc
jo
adc
lea
in
push
cmpsl
adc
sbb
scas
clc
les
adc
and
aas
sub
or
add
xchg
xchg
pop
fsubs
negl
mov
sbb
ljmp
push
ljmp
sub
clc
xchg
lods
cmp
and
outsb
dec
out
cmc
adc
in
jl
mov
cmpsb
jo
clc
lods
mov
add
mov
mov
add
pop
std
pop
mov
mov
mov
jbe
scas
lret
mov
arpl
sbb
lock
std
insl
rolb
movsb
fistps
shll
mov
sbb
lods
movl
shrl
test
pusha
cltd
nop
mov
push
cmp
scas
sub
aad
jecxz
mov
addr16
cli
mov
scas
adc
test
in
imul
jl
xor
add
js
dec
enter
push
negl
xchg
pusha
sbb
dec
mov
mov
scas
sub
inc
lods
sbb
scas
push
xchg
xor
jl
bndldx
imul
dec
repnz
loopne
bound
xchg
xchg
std
mov
pop
jnp
stc
jge
pusha
and
lret
lods
das
push
mov
cmc
notb
cmp
mov
shll
mov
sbb
sahf
daa
and
xor
jp
pop
into
xchg
dec
adc
add
imul
xlat
and
pop
cwtl
or
inc
jno
fucomp
jge
inc
nop
push
clc
movsl
mov
jle
into
into
mov
jne,pn
cwtl
insb
cmp
fcomps
sahf
dec
subb
int3
inc
scas
in
sbb
inc
pop
mov
loope
les
push
xlat
inc
jle
mov
xchg
rcl
xchg
subl
dec
test
into
iret
and
mov
push
push
adc
mov
jb
cmpsb
fiadds
das
or
xlat
sbb
mov
fst
or
mov
add
daa
jbe
fwait
mov
inc
or
cmp
test
push
and
inc
pop
jae
push
ret
sbb
int
cs
mov
pop
xor
mov
xor
adc
or
sbb
aas
pop
cwtl
std
ds
mov
or
xchg
dec
push
adc
rorb
xor
sbb
mov
dec
pop
shll
dec
cltd
inc
nop
cmpsl
dec
in
xchg
nop
aaa
sbbb
divl
outsl
test
out
sbb
daa
test
fcompl
das
mov
xchg
repz
stos
dec
popa
fcomip
push
out
mov
aad
pop
push
ret
pushf
es
js
xor
cltd
imul
pop
jno
xorb
nop
cmp
sub
mov
cwtl
repnz
shl
jge
rcr
mov
shll
test
cmp
sti
aam
jecxz
push
pop
stos
cmp
dec
andl
mov
aad
push
ffreep
jne
addb
outsb
xor
xor
mov
loope
fildl
arpl
mov
mov
sti
mov
loop
stc
and
and
pushf
sbb
and
xlat
dec
in
rcrl
call
mov
sub
fcmovnb
pushf
mov
in
lock
repz
jle
cmp
and
shlb
cmp
inc
pop
sub
stc
push
icebp
jmp
leave
cmp
push
jnp
jne
aam
call
int
movl
test
jae
lods
mov
fadd
push
test
stos
xchg
aaa
pcmpeqb
out
inc
rcr
and
insb
xor
aam
pop
loope
mov
jno
xchg
out
jnp
fwait
lock
xchg
inc
pop
sbb
pop
out
arpl
adc
jnp
jmp
icebp
add
push
jb
xchg
mov
stos
shr
dec
lods
adc
out
dec
jae
mov
out
inc
loop
cmp
loop
dec
popa
enter
lcall
mov
jo
dec
ss
xchg
jne
mov
fs
jns
adc
jecxz
icebp
leave
repz
lret
xor
fmull
je
pop
psubsb
lea
xchg
adc
jge
or
jge
add
dec
lods
std
leave
in
mov
or
pushf
and
lea
ljmp
jae
loopne
mov
into
out
test
sbb
hlt
sbb
mov
call
out
dec
push
popf
aad
pop
test
loopne
sbb
mov
or
aas
cmpsb
sub
cmp
fmull
jbe
in
add
data16
xor
mov
lcall
pop
aas
fs
xor
cmp
push
repz
mov
mov
dec
mov
cmp
jl
leave
or
xor
pop
cmpl
pop
push
out
sahf
js
cld
fstpl
test
adc
test
xor
dec
pop
test
push
les
mov
pop
ja
mov
inc
mov
xor
inc
pop
and
xchg
jmp
adc
sahf
sbb
sub
call
ret
pop
jb
movsl
mov
pop
inc
pop
inc
xor
jnp
cs
dec
cmp
xchg
push
sub
sub
es
adcl
sahf
mov
jp
nop
decl
daa
mov
xor
push
outsl
add
fists
fwait
int
cmc
cmc
jmp
jb
pop
outsb
mov
xor
fisubrl
xchg
or
jno
jecxz
add
aad
mov
xchg
sbb
cld
lahf
sahf
insl
pusha
fistpl
psraw
pop
push
es
xchg
lahf
mov
data16
into
push
and
and
dec
mov
mov
inc
and
hlt
xchg
loopne
fs
and
add
and
in
fldenv
cmc
std
or
les
xchg
xor
inc
stos
ljmp
inc
out
nop
out
xchg
mov
or
push
roll
jnp
ret
xor
dec
ja
fsubrs
mov
in
jp
or
xchg
aas
enter
subb
mov
xlat
lahf
mov
subb
dec
fs
and
mov
test
jge
decl
out
lock
lcall
call
daa
sub
push
xchg
push
rcrb
jb
je
inc
jl
push
nop
mov
sbb
loope
push
aad
jle
and
sub
cs
mov
addr16
stos
out
cmp
lahf
xor
nop
cli
mov
test
aam
rcll
insl
lret
and
xor
fcmovne
inc
inc
sub
mov
and
fmull
xchg
test
pop
int
jnp
mov
adc
ficomps
ret
shll
or
jne
xor
outsb
jg
add
mov
sbb
shll
sub
aas
out
inc
mov
scas
loop
add
sbb
xlat
dec
hlt
push
inc
ficoml
ja
fsts
inc
pop
arpl
fs
mov
xchg
sbb
push
push
xchg
jp
jbe
xor
and
ja
mov
mov
and
fadd
push
pop
andb
pushf
dec
stos
out
xor
ss
pop
add
jge
std
fs
adc
mov
mov
rcrb
sbbl
mov
mov
test
adc
inc
shll
mov
mov
jle
movsl
xchg
ljmp
xchg
adc
cmp
aad
loope
xlat
int
pop
int
dec
push
data16
sub
jne
pop
jle
fcmove
or
jg
push
daa
lahf
push
movsl
push
mov
stos
adc
mov
adc
and
pop
xchg
in
sbb
cmp
dec
fcmovu
aam
adc
dec
add
mov
popf
dec
xchg
sub
repnz
pop
dec
inc
cli
pop
call
aad
inc
data16
adc
je
shr
loop
imul
mov
jo
adc
jg
das
sti
jge
out
cmpsl
stc
rolb
ror
cmp
out
jae
pop
ljmp
aam
sar
jecxz
outsb
cmp
outsb
push
fstpl
out
mov
hlt
xor
push
push
xacquire
mov
or
or
mov
xor
out
fiadds
pushf
lds
or
cmp
jbe
cmp
cltd
loope
jns
outsb
bound
daa
fs
mov
jmp
imul
rorb
xchg
mov
inc
lods
sub
leave
stos
in
into
cli
insb
int
push
mov
test
or
pushf
adc
and
aas
sbb
jecxz
imulb
rcll
mov
push
sub
es
xor
lret
sbb
daa
xchg
xor
mov
pop
in
inc
repnz
mov
pusha
aaa
mov
inc
cwtl
bound
dec
and
cmc
pop
pop
xchg
cltd
mov
jmp
imul
inc
mov
or
add
scas
insb
movsb
in
cmp
dec
and
mov
iret
rolb
jl
push
mov
add
iret
cmp
ds
mov
jge
ret
xchg
mov
push
add
adc
andl
sbb
scas
ja
push
mov
scas
sbb
push
add
std
mov
rolb
in
dec
jae
movsl
inc
ffree
add
mov
and
add
fwait
outsl
adc
push
xchg
push
push
out
std
mov
ret
add
and
ss
cmp
mov
scas
insb
mov
pop
sub
mov
xchg
testb
and
nop
cmp
stos
imul
sbb
xor
in
xchg
push
loop
rcr
sub
ret
enter
and
int
jno
or
in
mov
data16
push
stos
pop
shlb
dec
dec
or
pop
mov
fcomps
sahf
sub
push
xchg
std
dec
leave
cld
fistl
sub
das
and
in
push
add
mov
xchg
mov
adc
xor
or
cltd
dec
fs
dec
es
mov
dec
jne
mov
lcall
pop
cltd
ja
int3
pusha
pop
push
pop
lret
fldt
cs
add
dec
push
popf
xor
lock
xchg
stos
inc
das
and
add
cli
ss
arpl
in
fs
jno
xchg
jbe
or
mov
or
dec
scas
ljmp
mov
jnp
fwait
push
jmp
cmp
fucomi
and
xor
push
scas
scas
ja
jg
or
jl
push
icebp
sbb
mov
fcompl
mov
icebp
ret
mov
add
jo
add
jmp
cmp
call
neg
out
xchg
pop
mov
pop
add
xor
mov
push
xchg
xchg
push
insl
jne
inc
mov
lds
fnstcw
push
lds
lahf
pusha
jge
sbb
in
sbb
add
pop
inc
aas
mov
mov
push
push
scas
into
dec
cltd
push
add
mov
xchg
sub
inc
out
push
iret
mov
and
mov
xchg
pop
ja
test
and
sub
in
jb
insl
jmp
xchg
fmulp
aad
push
std
sub
mov
xlat
or
loopne
loope
xchg
xor
dec
es
js
xor
mov
scas
pop
xchg
movsb
cmc
fwait
movsb
rorb
je
sbb
inc
jno
repz
fdivs
mov
dec
fisttpl
fisubrs
loope
mov
add
cmp
pop
jp
mov
cmp
pop
and
popf
mov
shlb
les
push
push
hlt
loop
sub
push
jne
sbb
xor
fidivl
cmp
mov
dec
push
sub
int3
or
cmpsb
mov
cmp
mov
mov
jno
ljmp
push
sti
je
cmpb
nop
iret
mov
sbb
into
xor
stos
push
ficoms
or
push
mov
pop
pushw
pop
data16
nop
mov
sbb
icebp
lret
js
iret
in
xor
mov
aam
xor
cwtl
in
ret
push
mov
test
rcll
cmp
movsb
movsb
out
cmc
sub
test
cmp
adc
das
sub
bound
test
ret
xchg
xor
and
push
inc
jno
cs
ret
dec
pop
fs
mov
cmpl
sbb
add
xchg
dec
lods
jge
mov
pop
ds
push
xor
and
out
xor
inc
ficompl
jno
pusha
sbb
mov
sub
pushf
sub
push
call
push
outsb
or
push
mov
inc
xchg
gs
mov
mov
adc
mov
pop
in
call
stos
pop
and
aas
adc
aas
mov
out
mov
mov
je
icebp
sub
pop
shr
hlt
scas
jns
xor
fsub
arpl
adc
or
xchg
or
dec
mov
das
add
lcall
into
data16
lahf
daa
mov
sub
loopne
lcall
rcll
sar
pop
loopne
sub
mov
add
cmpl
jns
call
pop
outsl
mov
jae
das
stc
and
hlt
es
fildll
ja
fwait
push
xchg
dec
cmpsl
jb
es
mov
daa
sbb
fs
push
mov
fcomp
in
jl
adc
dec
mov
xchg
lcall
inc
inc
fisttpll
sbb
dec
ret
pop
icebp
xor
or
or
cwtl
sub
mov
or
popa
fcomip
enter
stos
xchg
pop
inc
lds
dec
inc
mov
ds
je
mov
mov
cmp
ds
adc
mull
mov
lods
pop
inc
lock
hlt
jl
outsb
cmpsb
rolb
pop
movsb
mov
nop
push
mov
arpl
sti
imul
nop
pushf
jae
dec
jns
xchg
in
flds
hlt
in
flds
add
dec
into
push
sarb
xchg
add
dec
stc
int
imul
cmp
stc
or
adc
scas
ds
inc
sbb
sti
sbb
repz
sbb
push
dec
sbbb
faddl
sub
jno
icebp
shll
jnp
lods
jmp
mov
ret
pusha
jmp
or
out
mov
pop
scas
inc
dec
aad
cmp
sarl
mov
sbb
shlb
jecxz
inc
and
lea
mov
mov
ljmp
sbb
and
popa
dec
popf
cld
pop
test
pop
ret
sub
int3
mov
lods
and
lods
fidivrs
pusha
cmp
dec
push
dec
and
and
js
outsb
mov
ret
jge
ret
jl
inc
jp
push
mov
mov
pop
shll
push
ss
stos
imul
rcrl
mov
inc
inc
fwait
xchg
sbb
jns
pcmpgtd
inc
enter
gs
das
sub
scas
mov
ret
subb
jae
mov
idiv
push
repz
adc
ret
push
mov
xchg
or
inc
jae
mov
enter
xchg
inc
jg
add
mov
dec
into
je
aad
xor
xchg
sbbb
repz
mov
sub
gs
mov
pop
rcr
repnz
stos
pop
lret
scas
loop
xchg
sti
subb
sarl
repnz
imul
push
pop
or
cmp
popf
gs
in
in
cmp
shlb
sbb
std
mov
inc
mov
inc
push
pop
mov
aad
mov
dec
sbb
loope
in
jecxz
imul
fdivl
jle
cmp
iret
aad
cmpsb
mov
call
fsts
scas
push
imul
decw
pop
pop
jecxz
inc
xchg
inc
inc
loope
in
rcrl
pop
push
popf
ret
pop
cmp
leave
dec
data16
aad
sbb
hlt
add
ss
xorl
je
cltd
pop
xchg
xor
mov
inc
popa
push
insl
lock
mov
xchg
adc
hlt
lods
aam
mov
dec
movsb
cmpl
pop
pop
out
lds
lods
clc
xor
aam
jge
sarb
nop
or
xchg
imul
aam
rcr
and
cs
push
xchg
jnp
arpl
jg
test
sbb
sub
mov
jne
scas
popa
in
aad
push
pop
and
fidivrs
jbe
sahf
or
mov
mov
xlat
in
or
xchg
pop
orb
movsl
sub
mov
adc
popf
mov
mov
and
lock
scas
call
loop,pn
shl
pop
or
fsub
sbb
push
xor
cmp
push
or
xchg
mov
push
inc
and
mov
ja
mov
xchg
cmpsb
sbb
imul
sbb
adc
lods
xor
jno
sub
nop
mov
sub
or
xchg
outsl
xor
andl
leave
fldcw
shlb
xor
test
lock
dec
out
add
sbbl
lcall
pushf
loop
jbe
dec
fcoml
sbb
testl
inc
adc
fildll
dec
cmp
xchg
sub
rclb
adc
pop
insb
popf
scas
inc
inc
push
sbb
and
fisttps
push
jae
imul
sarl
or
adc
inc
mov
int3
in
lock
inc
pop
fs
mov
pop
je
shrb
imul
cmpsb
inc
pop
jbe
push
sub
insb
shrb
into
std
aad
aam
sbb
add
inc
cmp
in
insb
inc
fcmovb
pop
into
gs
add
insl
out
fcmove
mov
and
adc
popa
lcall
xchg
sbb
adc
push
cmp
pushf
fildl
leave
ja
and
ret
mov
xchg
inc
push
sub
adc
ret
and
add
pop
stc
lods
mov
jp
push
push
jnp
scas
inc
iret
adc
inc
push
push
lret
pusha
scas
pop
loopne
jo
jnp
cmp
fucomip
iret
inc
arpl
push
inc
or
das
mov
pop
xor
cmp
lods
sub
mov
repz
mov
ljmp
mov
sti
pop
inc
imul
pop
xor
jp
sahf
push
popa
cmpsl
or
loopne
test
dec
xchg
mov
dec
xor
add
lock
daa
jp
cltd
lcall
add
xchg
cmp
insb
jmp
mov
push
ret
pop
push
adc
cwtl
call
xor
and
push
add
mov
repz
xor
push
mov
shlb
nop
dec
and
lea
mov
adc
into
call
push
mov
xchg
sub
xchg
fs
sbb
in
stos
xor
mov
inc
sbb
fisttpll
aas
mov
dec
in
jle
mov
xor
loopne
lcall
lahf
xor
mov
adc
lahf
leave
dec
ds
lods
lods
xchg
push
icebp
pop
push
cs
cmp
cli
sub
test
jb
loopne
adc
cmovo
enter
nop
and
repz
xchg
dec
push
mov
sub
js
sub
cmp
jmp
xor
clc
dec
mov
sbb
mov
jo
call
dec
gs
or
aad
mov
jae
icebp
cmp
mov
push
cmpsb
and
xchg
scas
gs
push
adc
cmpsl
std
add
imul
rorl
clc
xchg
mov
dec
jg
mov
push
push
xor
aaa
jne
cmp
lock
sub
aam
xor
xor
jne
jae
mov
fsubr
add
and
push
popf
inc
test
and
aaa
and
das
fdivrl
mov
sbb
adc
cld
jmp
aas
fwait
push
add
ss
rcll
pop
into
repz
lock
flds
pop
push
add
xor
or
push
or
pop
les
add
or
sbb
adc
fwait
mov
push
or
ret
dec
pop
sbb
xchg
test
adc
imul
loop
sbb
mov
inc
imul
enter
fiadds
dec
xchg
cmp
mov
jbe
or
inc
in
mov
push
xchg
inc
ja
cmpsb
test
popa
std
insl
in
add
or
daa
adc
or
test
add
mov
fwait
xlat
push
pop
sbb
mov
add
cmp
cmp
shl
push
imul
mov
int3
pop
and
shlb
adc
mov
or
pop
in
inc
mov
pusha
add
jnp
cli
adc
cmp
mov
mov
sbb
mov
sahf
jmp
and
xorl
testl
jl
cmpsl
in
jno
int
gs
sbb
enter
jg
arpl
into
mov
lret
jae
arpl
jle
push
xchg
or
mov
jp
aad
or
out
xchg
mov
push
stc
mov
das
sbb
mov
and
fwait
cmpsb
dec
sbb
push
repnz
in
jbe
jge
mov
jnp
jmp
mov
rclb
pop
wbinvd
js
mov
pop
test
rcl
aam
aam
jns
push
sub
mov
fucomp
pop
es
fistl
jg
cwtl
jno
js
pop
push
or
adc
cmc
jbe
inc
xor
mov
xor
imul
in
push
jbe
js
stos
push
xor
mov
xchg
and
cwtl
inc
cwtl
cwtl
icebp
adc
mov
pop
cltd
aas
sub
adc
sub
and
mov
clc
fbstp
cmpsb
stos
imul
pop
or
out
pushf
std
or
xor
js
jmp
shlb
mov
xor
jmp
xor
sbb
loopne
jge
or
out
dec
and
dec
xchg
fsubrl
rcrl
bound
jbe
cmp
ljmp
xchg
or
xchg
icebp
xor
mov
leave
xchg
fimuls
xor
adc
ljmp
jnp
lcall
mov
or
add
mov
fdivr
and
gs
cmp
jns
mov
ss
loop
mov
jle
and
pop
cmpsb
xor
jnp
test
mov
popa
and
lds
jae
mov
xor
in
imul
or
mov
scas
cmpsl
add
leave
cmp
stc
lods
test
into
ljmp
cmp
cltd
shll
add
insb
cwtl
cs
cmpsl
cmpsl
xchg
sbb
pop
mov
shll
notb
push
jecxz
cmc
cwtl
mov
movsl
mov
dec
imul
loop
jl
movsb
adc
mov
xorl
lds
jns
pop
pop
cmpsb
hlt
jp
jnp
fwait
inc
mov
mov
jbe
sbb
and
sub
sub
mov
and
les
and
cwtl
mov
mul
adc
test
outsl
test
in
mov
in
mov
adc
loope
jb
pop
orl
mov
dec
in
addr16
sub
mov
jmp
mov
cmp
dec
jmp
adc
cmc
push
hlt
test
data16
or
mov
out
sbb
push
push
and
jl
test
adc
jp
bound
mov
xchg
nop
cmp
je
rcll
es
subb
cwtl
lds
pop
cmpsl
xor
mov
sbb
aad
ret
or
sarl
mov
fadds
mov
fiaddl
outsb
lods
out
push
and
mov
mov
lods
dec
mov
jmp
loope
pop
xorl
pop
inc
js
call
sub
push
sbb
dec
xchg
movsl
and
roll
inc
xchg
xchg
movsb
adc
pop
mov
sbb
rolb
sub
iret
ja
lock
loop
fistl
or
and
or
mov
pop
imul
hlt
dec
sbb
fistpll
pusha
pop
and
dec
cmp
xor
aam
je
stc
cli
pop
insl
pushf
inc
inc
xor
sub
mov
inc
popf
fstpl
pop
call
adc
mov
and
xchg
fdivs
xchg
pop
add
pop
repz
push
cltd
std
rorl
ds
mov
pop
and
push
mov
in
cmp
mov
pop
sbb
movsl
test
cmp
xchg
outsb
xchg
rcll
cmpsb
lods
sbb
in
jbe
push
mov
in
ja
lods
stos
xchg
stc
sbb
cmp
mov
fwait
mov
dec
jmp
sti
int
gs
outsl
push
lea
inc
mov
icebp
jle
imul
pop
sbb
fstp
sti
add
dec
push
ds
mov
sbb
movb
fsubp
or
fisubrs
fucom
pusha
outsl
dec
aas
jbe
test
cmpsl
out
inc
add
inc
cmc
fstpl
rclb
pop
mov
dec
mov
divb
push
jne
pop
mov
mov
push
sbb
mov
sub
xor
jne
mov
pushf
push
test
mov
je
in
adc
scas
pop
cltd
and
ss
stos
mov
in
aad
xchg
mov
insl
xchg
add
mov
and
dec
je
dec
push
rorl
insl
cs
xor
movsl
shlb
sbb
out
jmp
rcrb
stc
fldt
leave
fbstp
pop
movsl
pop
icebp
lret
mov
ja
jg
push
cmp
pop
fildll
pop
cmp
jno
fcomp
in
insb
imul
cmc
xlat
cmc
xchg
int3
add
sbb
nop
test
in
jae
and
sbb
shrl
xor
inc
cmp
adc
les
sbb
sbb
add
sub
das
dec
sbb
cmp
push
cmpsl
cld
inc
mov
add
inc
push
lret
cmp
ret
or
sti
aam
call
insl
pusha
inc
cmpl
fs
mov
lcall
enter
in
push
aas
imul
ret
mov
into
cld
sarb
dec
jo
push
xchg
cmp
pop
sbb
enter
or
popf
pusha
repnz
xchg
and
pop
mov
cmpsb
add
cltd
mov
out
cmpsb
aad
lret
push
in
xorl
stos
lret
push
ja
rcll
mov
out
fucomi
out
gs
push
adc
dec
ss
in
fmul
cli
mov
ret
fiaddl
enter
cltd
rcr
shrl
mov
jg
fcmovb
lret
mov
das
std
xor
mov
adc
mov
shll
dec
arpl
pop
test
fdivrs
jmp
loopne
aad
inc
sub
stc
in
mov
dec
jns
xchg
xor
imul
and
cli
adc
cmp
and
lahf
mov
das
cmp
xor
fldt
or
dec
cmc
sub
call
clc
lret
adc
lock
int
test
mov
push
std
out
andl
adc
dec
inc
or
setns
push
or
dec
inc
dec
xchg
rcr
add
sub
add
push
inc
in
bound
and
sbb
xchg
jns
frstor
xchg
cwtl
fdivr
test
dec
or
push
dec
in
dec
or
mov
sahf
cmpsb
sbb
sub
test
clc
in
jnp
bound
mov
repnz
push
addb
in
cmp
hlt
jns
in
fsubs
das
sub
imul
adc
mov
and
dec
jno
test
jo
jg
mov
cld
xor
notb
iret
lock
cmpsb
inc
mov
aam
push
inc
ret
negb
mov
jmp
rcll
cltd
lock
pop
mov
dec
ja
popfw
and
mov
sti
mov
mov
add
enter
icebp
insb
push
inc
push
insb
icebp
mov
and
adc
in
sub
sbb
insb
inc
cmpsb
and
xchg
mov
sbb
je
mov
xor
aas
dec
insl
out
ja
std
push
sub
mov
out
out
xor
mov
xchg
xchg
call
sbb
lea
into
int3
in
data16
nop
pop
mov
iret
inc
pop
lret
sub
or
jae
push
maxps
fwait
loop
in
sub
insl
xor
ds
rol
jne
lds
aaa
sub
testb
test
pop
xor
mov
stos
pushf
jl
jne
sub
rclb
test
cmp
and
xor
scas
xchg
sub
lahf
ss
push
jmp
insl
lcall
scas
add
call
jae
mov
js
mov
in
out
repnz
in
iret
jmp
sahf
movsl
push
push
jne
jg
jmp
scas
mov
mov
sbb
movsl
fidivrl
daa
push
rclb
push
push
test
incl
fidivl
jnp
fmuls
shll
mov
ret
imul
rorl
push
mov
sbbb
jns
inc
mov
fs
fsubs
lret
mov
xchg
nop
cmp
mov
fs
testl
cmc
pop
outsb
in
adc
xchg
jo
sub
mov
add
pop
mov
adc
dec
jns
pop
outsb
nop
push
jmp
imulb
sub
shll
mov
jecxz
dec
out
je
lret
test
scas
jb
orb
movsb
xchg
pop
cmp
movsb
popf
leave
sub
mov
pop
mov
inc
insl
sbb
jnp
es
add
movsl
testb
test
sub
repnz
xchg
rol
in
sbb
arpl
lret
sub
scas
iret
cmp
or
ret
adc
cwtl
cltd
mov
mov
jmp
push
fstps
jb
movsl
sub
lea
stos
imul
mov
mov
lea
daa
dec
imul
cmp
arpl
inc
adc
xor
testl
fdivrl
add
mov
pop
jg
jmp
mov
jbe
gs
and
pop
cs
imul
push
leave
sub
push
or
xchg
mov
test
mov
push
mov
aaa
jbe
data16
add
aad
jg
push
movsb
lods
dec
mov
xchg
ja
and
inc
addr16
repz
sub
pop
push
jb
pusha
iret
movsl
nop
inc
dec
sbb
int3
loop
std
jno
int
insl
sub
in
jo
repz
insl
inc
pop
inc
fwait
test
dec
dec
es
int
sbb
aad
out
and
loope
cmp
pop
adc
jae
adc
mov
xor
sub
cltd
sub
push
jmp
mov
ja
jno
dec
jle
lcall
out
fisttps
push
xor
inc
jae
mov
nop
pop
dec
scas
loop
dec
jg
pop
fsts
dec
mov
lds
mov
push
xor
and
iret
jbe
cmc
sbb
xchg
pop
arpl
and
pop
cwtl
ja
mov
popa
loope
popf
rcrb
xor
cmp
adc
mov
add
and
call
aam
jecxz
nop
pop
sub
lret
data16
and
jp
mov
ss
sbb
push
outsb
adc
mov
mov
pop
mov
xchg
decb
inc
cmp
in
scas
inc
test
icebp
insb
jmp
dec
pop
ret
cmp
enter
mov
cwtl
or
mov
loope
pushf
xchg
dec
fistl
and
dec
pop
mov
add
arpl
mov
xor
fwait
pushf
ljmp
sub
add
notb
push
xchg
fiaddl
inc
pop
xlat
int
mov
out
lret
sahf
mov
push
in
cmp
jp
ljmp
imul
push
repnz
jnp
adc
mov
pusha
nop
lock
rcrb
mov
stc
sti
adc
or
jmp
mov
dec
xor
cmp
sarb
fisubl
adc
pop
and
ja
xlat
xchg
xchg
inc
fisttps
outsb
jmp
pop
cmp
sbb
dec
xchg
pop
and
dec
sub
add
loope
mov
nop
iret
fs
jbe
sub
sbb
mov
xchg
nop
pop
and
test
ds
insb
push
jg
addr16
inc
stc
data16
rorb
add
popf
nop
sahf
xchg
cmp
sbb
cmpsb
jmp
jmp
call
cs
test
and
adc
or
jg
ret
xor
ja
xchg
jnp
sahf
inc
nop
fsts
fs
mov
inc
aam
xor
sbb
inc
imul
add
pop
mov
xor
add
fdivrs
dec
mov
push
jb
ret
call
cmpsb
ficoms
arpl
xchg
lret
add
mov
push
jno
add
insl
sbb
lods
jle
adc
stc
bnd
fsubl
adc
stc
push
or
inc
jae
ret
pusha
call
dec
test
xor
xor
inc
arpl
in
stc
jmp
mov
or
jbe
add
popa
inc
test
shll
daa
lock
or
sub
popa
inc
es
sbb
stc
and
jno
sahf
or
mov
lret
jne
and
cwtl
dec
cmp
push
mov
dec
xchg
rclb
lock
sbb
push
lret
and
xchg
cmp
and
mov
out
add
in
lcall
lods
or
and
mov
outsl
sub
mov
jge
aaa
in
dec
cmp
aas
push
mov
inc
gs
out
int3
or
dec
push
fldl
mov
mov
mov
lahf
dec
xor
je
inc
lret
mov
and
enter
mov
test
mov
in
stos
shll
cmpsl
cmpsb
sub
mov
and
inc
fadd
repnz
cld
mov
ss
cld
inc
cs
faddp
sbb
test
mov
ljmp
scas
add
mov
adc
std
mov
inc
push
xor
mov
mov
test
pop
icebp
adc
pop
cmp
ja
and
adc
in
imul
inc
adc
loopne
lcall
lock
insl
sbbl
lret
test
lds
pop
and
push
sub
dec
leave
cmpsl
sub
outsl
xor
cmp
shl
sub
sub
sbb
mov
mov
sub
loop
rcl
out
mov
je
popf
dec
sub
les
dec
jmp
push
mov
inc
in
mov
addb
cmpsl
push
xchg
mov
sbb
std
or
pop
or
outsb
lds
jb
pop
ss
and
push
pop
loope
nop
push
repz
shlb
inc
dec
imul
jno
jne
lret
xchg
add
dec
scas
daa
add
loope
sti
jnp
lret
push
stc
dec
aam
dec
and
addr16
pop
fwait
dec
stos
icebp
test
xchg
mov
or
ror
fbstp
push
jo
push
mov
mov
lcall
adc
pop
xchg
xor
pushf
out
push
roll
xor
pop
mov
sbb
cmp
adc
xor
stc
stc
cli
inc
in
movsl
stos
stc
loope
sarl
stos
mov
push
in
inc
out
cmp
jo
popf
lcall
pushl
pop
xchg
cmovbe
pop
adc
pop
das
movsl
divl
mov
scas
movsb
inc
fmuls
pusha
add
stos
fmuls
icebp
inc
cmp
clc
mov
insl
and
cmp
sarl
mov
mov
in
jp
dec
sbb
add
inc
xlat
lock
jo
push
mov
mov
hlt
pop
repz
sbb
lcall
loop
lods
lcall
cmp
out
dec
jo
mov
arpl
and
sub
out
fsubrl
adc
and
and
mov
pusha
mov
xorb
stos
push
inc
sub
test
mov
adc
adc
movsl
inc
inc
daa
shlb
out
cmp
cmpb
inc
divb
fildl
stos
mov
enter
or
pushl
mov
dec
les
ret
sbb
push
sub
hlt
clc
mov
ret
xchg
sahf
push
roll
pop
inc
fwait
jne
adc
pop
adc
fdivr
mov
pop
lods
lods
scas
push
fiadds
dec
mov
andl
imul
fs
bound
ja
ds
pop
mov
inc
vprotd
daa
int
lds
pop
jns
pop
sbb
int3
ror
jge
aad
test
loope
outsl
pop
jl
gs
cmp
out
mov
pop
or
sbb
xor
push
adc
inc
rcl
in
iret
and
fmul
into
inc
out
aas
xor
out
test
and
cmp
loope
inc
add
decb
push
mov
or
scas
xchg
xor
repnz
int3
sbb
punpckldq
push
sub
jecxz
ret
inc
pop
sbb
sub
lods
lret
push
sub
push
mov
inc
mov
fadds
repnz
fmul
stc
nop
mov
push
xchg
pop
fstl
fstpt
dec
outsl
jo
mov
scas
outsb
and
mov
loope
and
pop
out
xlat
mov
in
in
mov
test
adc
iret
jecxz
xchg
nop
cmp
jg
dec
lods
and
es
cli
xor
push
test
push
cmpsl
cmp
mov
out
repz
into
sub
mov
ret
cmc
leave
xchg
aam
push
mov
adc
sbb
mov
inc
pop
icebp
push
lcall
sub
adc
jg
or
mov
test
stos
pop
add
mov
hlt
mov
jl
std
lods
icebp
lcall
jl
mov
pusha
mov
imul
shrb
mov
lods
add
lfence
dec
pop
xchg
dec
lods
cmp
loope
rcl
in
ds
sub
jmp
mov
jno
and
pushf
sbb
add
movsl
xchg
mov
adc
pop
add
mov
jp
ret
mov
xlat
jmp
sbb
sub
rorb
push
pop
mov
xchg
mov
sti
sbb
pop
bound
sbb
sbb
xor
or
enter
je
data16
jns
xor
mov
lahf
mov
dec
outsl
jl
sbb
shll
cwtl
mov
cwtl
les
mov
jo
or
stc
inc
sbb
lea
lret
dec
xor
rcll
push
inc
mov
clc
popa
std
inc
jmp
xchg
sbb
ficoml
pop
jae
subb
jge
imul
rcrl
jno
xchg
ss
mov
or
adc
inc
ret
mov
xchg
movl
add
in
dec
pusha
pop
fldenv
pop
ljmp
jmp
fwait
cmc
imul
push
loopne
orb
out
dec
push
mov
cs
aaa
ret
pop
adc
bound
fwait
inc
lock
out
in
add
in
stos
push
lods
mov
fisubrs
imul
enter
sbb
cmp
add
add
cltd
icebp
pop
imul
lock
cltd
xlat
pop
mov
adc
pop
xor
lret
sbb
pop
addb
add
or
mov
push
push
cmpsl
mov
sbb
repnz
movl
lahf
inc
sbb
iret
popa
aam
fxch
mov
jle
inc
addl
pusha
adc
mov
mov
xchg
or
out
cmp
je
rol
lahf
and
or
xchg
movsl
dec
or
leave
sarb
mov
repz
andb
dec
xchg
cwtl
imul
out
sbb
mov
push
push
test
fildll
pop
push
imull
ds
adc
les
rolb
sti
std
pop
xchg
inc
lds
inc
inc
fnstenv
pop
jmp
std
inc
push
ret
cmp
repnz
cmp
push
and
mov
mov
mov
nop
leave
push
mov
ja
rcrb
dec
fiadds
mov
or
or
cmp
mov
mov
cmp
pop
lods
enter
mov
xchg
lods
leave
les
mov
push
in
js
push
insl
nop
or
sub
mov
inc
or
xor
imul
sbb
scas
sbb
push
mov
xor
pop
out
std
and
jae
xor
dec
mov
xchg
adc
rdtsc
cmp
and
xchg
cld
ss
adc
pop
insl
push
cs
and
sub
les
push
pusha
mov
sbb
jmp
and
daa
into
and
and
push
daa
dec
shll
loop
int3
and
mov
inc
ljmp
popl
mov
jae
ret
and
cld
inc
mov
jbe
outsl
pop
lahf
jno
repnz
icebp
mov
jg
mov
xor
pop
dec
mov
fisttps
push
pop
pop
je
cwtl
lcall
dec
inc
mov
push
mov
mov
jae
in
mov
sub
xchg
xchg
sbb
push
inc
push
ret
data16
pop
adc
adc
fst
mov
xor
mov
adc
addr16
mov
push
xchg
arpl
mov
sbb
mov
fmull
pop
cld
arpl
cmp
sbb
pop
jne
cmp
pop
inc
int3
lcall
insb
pop
fldt
ljmp
jns
sub
jmp
fs
push
add
and
adc
or
dec
xcrypt-ecb
cmpsl
mov
jp
sub
cwtl
pusha
mov
enter
push
jecxz
dec
stos
negb
out
jmp
adc
ss
fstpl
js
test
push
push
mov
sbb
addb
test
insb
sub
clc
mov
fcmovb
sti
inc
mov
cmpsl
add
pop
outsb
add
dec
jne
mul
cmpsl
push
mov
pop
or
dec
cltd
sub
xor
xchg
cwtl
xor
insb
sub
repnz
mov
inc
ja
pop
inc
jg
cld
enter
xor
inc
clc
in
xlat
jb
and
es
or
mov
loop
add
jo
and
jne
jecxz
push
je
mov
add
or
dec
adc
dec
mov
je
in
xchg
cmp
and
xchg
or
pop
gs
jecxz
and
pop
hlt
test
jecxz
cmpb
pop
sahf
lahf
outsb
inc
and
sub
incl
push
hlt
clc
pop
shlb
insl
inc
lods
push
dec
out
pop
xor
rcr
and
cs
das
aad
mov
cmpsb
jecxz
xchg
jle
push
cltd
push
movsb
stos
mov
fisubrs
mov
es
and
nop
cli
and
inc
inc
push
pusha
mov
xchg
pop
xchg
jg
mov
out
or
add
lock
mov
jno
ds
inc
add
and
in
cmp
lahf
in
add
call
pop
shrl
sbb
push
pop
sbb
cld
ret
arpl
cmp
cmp
fiaddl
pop
xchg
push
pop
loopne
pushf
jb
push
xchg
adc
xchg
repnz
fdivr
and
xchg
xor
lahf
dec
popf
mov
push
and
dec
mov
dec
sbb
test
adc
dec
sub
repz
sti
imul
and
in
iret
sahf
into
loopne
dec
jns
mov
push
pop
xor
add
ja
xor
inc
mov
sub
inc
mov
push
or
mov
xchg
cmpsb
push
cmpsl
xor
xor
fsts
inc
insb
out
lock
push
cld
in
lret
int
cs
test
mov
jge
pop
cwtl
cwtl
push
popf
sub
mov
lahf
fstpl
add
mov
mulb
inc
loop
enter
sub
leave
pop
sahf
clc
outsl
dec
lods
cmp
jnp
add
rol
xchg
jl
test
neg
es
adc
loop,pn
jle
and
mov
push
mov
cmp
cltd
mov
mov
das
mov
shll
test
rcrl
inc
in
repz
or
and
cmpsl
mov
mov
outsl
jne
fnstenv
into
lahf
mulb
dec
cld
push
shl
das
jmp
mov
loopne
shll
cld
sub
fnstcw
jb
push
lcall
inc
sbb
mov
xor
add
sti
fsubrl
test
sti
xchg
push
ja
insb
fucomi
test
and
aaa
enter
clc
insl
movsl
out
mov
xor
insb
push
int3
es
mov
sbb
das
cmp
mov
jnp
xchg
jb
mov
movsl
push
les
mov
call
xchg
mov
push
int3
loope
mov
negb
mov
or
mov
xchg
out
ret
lahf
mov
adc
nop
mov
sbb
mov
rorl
lret
lods
inc
inc
lcall
inc
sbb
cmp
adc
xchg
in
daa
call
cwtl
dec
xor
dec
shrb
sub
mov
cmp
in
pop
popa
xchg
push
fwait
scas
mov
or
mov
mov
cmp
mov
mov
push
sar
sbb
jp
mov
mov
xor
add
insl
stc
and
and
lds
and
jo
jo
pop
nop
pop
jne
jge
addr16
and
push
fwait
orb
arpl
sbb
xchg
pushf
mov
pop
stos
je
mov
cltd
mov
clc
or
das
pop
movsl
adc
jmp
inc
sub
andl
xor
push
push
adc
nop
mov
fsubrl
in
xchg
xchg
in
xchg
lret
xor
adcl
std
rcrl
mov
mov
stc
jmp
push
and
sbb
push
sub
lahf
mov
aad
inc
lock
pop
sub
pusha
loop
fs
jns
xor
shlb
jecxz
or
adc
ljmp
cmp
mov
sbb
imul
or
push
sahf
int
add
jb
mov
scas
pop
mov
inc
xor
jmp
aas
xor
xchg
cmp
imul
repz
sbb
jo
add
pusha
fisubrs
mov
pop
mov
sub
cmp
icebp
pushf
mov
cs
insb
and
fsubp
or
inc
adc
mov
sbb
xorl
adc
mov
jecxz
push
or
and
rcll
xchg
pop
add
lcall
push
mov
pop
xchg
mov
lahf
in
xchg
mov
push
add
adc
fldcw
stc
mov
push
jecxz
movsb
fiadds
outsl
popa
xchg
lahf
int
fcomip
mov
push
cmpl
or
pop
adc
cmp
popf
outsl
dec
lret
inc
int3
ret
push
cli
cmp
sbb
jl
mov
xor
mov
aam
in
sbb
jecxz
jbe
int
fdivl
jmp
movsl
rol
xor
cmpsb
jmp
inc
xorl
insl
adc
test
xchg
inc
cmp
mov
mov
das
insb
imul
test
shl
pop
mov
mov
out
cmp
ja
cmp
shlb
inc
mov
adc
movsb
inc
xchg
fildll
xor
lea
mov
mov
loope
lret
add
cmp
add
pusha
add
xchg
push
jno
mov
fisubrs
pop
pop
pop
mov
rorl
sahf
sbb
xchg
inc
mov
rorb
aad
cmpsb
pop
mov
pusha
push
xchg
mov
push
inc
dec
fldt
jecxz
hlt
iret
mov
mov
cmp
rcrb
bsr
sub
jge
mov
jmp
enter
jmp
pusha
fdivs
xchg
sub
rcr
fsubrp
into
jecxz
push
sbb
imul
and
mov
add
jmp
xor
stos
adc
mov
cli
or
adc
mov
xor
pushf
dec
outsb
add
pusha
out
and
test
push
dec
or
cmp
inc
ret
pop
dec
popf
stos
ljmp
loopne
call
adc
xchg
fcmovu
fldl
in
in
call
not
cmp
adcl
push
jp
into
push
fsubrp
test
jp
or
fidivl
lock
add
out
ficoml
int
push
scas
lea
fistpll
bound
pop
mov
addb
imul
mov
test
ljmp
hlt
jno
fwait
jp
sbb
push
xor
stos
cs
test
bnd
mov
into
call
cmpsl
pop
jne
lock
outsb
cwtl
dec
push
test
aad
mov
mov
add
out
mov
mov
add
int3
insb
lea
or
outsl
or
jb
sbb
cmpsb
jp
push
daa
daa
xchg
ret
inc
adc
sub
adc
insl
cmpsb
popf
mov
outsb
lret
and
adc
pop
loopne
jnp
add
xor
or
aas
jns
imul
fld
mov
push
jg
sbb
push
in
jle
ja
mov
jmp
call
push
inc
ret
xorb
mov
add
daa
aas
fiaddl
cmp
loopne
pop
test
in
xorb
inc
sbb
sub
iret
mov
pushl
test
das
unpcklps
inc
and
mov
push
aas
test
fadd
mov
mov
sub
push
sti
adc
insb
out
lret
aaa
ret
adc
out
fdivs
sub
ds
xor
jecxz
mov
repnz
mov
popf
jg
ret
pop
out
cs
sub
mov
adc
aad
pop
mov
inc
add
jbe
adc
nop
jg
rorb
inc
cmp
repnz
inc
and
inc
lcall
mov
test
push
sbb
out
sbb
mov
jb
icebp
add
xor
xchg
loopne
pop
js
data16
fcompl
mov
mov
xchg
out
fisttpll
orl
mov
lods
shll
push
inc
mov
sub
inc
pop
jmp
iret
inc
scas
aad
cltd
cs
xchg
ds
int3
pop
dec
mov
std
push
das
cmp
es
adc
inc
outsb
xor
add
xchg
adcb
test
js
cmp
add
pop
nop
stos
lock
fdivrs
inc
js
nop
add
jmp
fs
and
adc
pop
shll
xchg
dec
test
xchg
or
icebp
movsl
jns
dec
and
push
fdecstp
pop
and
lret
movsl
enter
nop
loope
jecxz
mov
repz
fwait
dec
xor
jmp
pop
inc
adc
mov
lcall
inc
dec
jb
sbb
ss
cli
sbb
mov
xchg
sbb
mov
xchg
mov
mov
mov
outsl
leave
mov
in
mov
or
in
clc
popf
pop
nop
mov
pusha
or
repz
addr16
add
adc
mov
mov
or
xor
out
jp
or
clc
mov
xor
loop
add
push
fsubrl
lret
ficomps
xor
loope
addr16
rcl
jp
xchg
xchg
xchg
test
pop
imul
bound
add
xchg
cvtps2pi
popf
push
jmp
stos
in
inc
cmp
xchg
jne
or
leave
xchg
ss
add
push
rorl
arpl
ret
xchg
sub
dec
add
xchg
aaa
mov
xlat
subl
xchg
mov
in
pop
pop
sbb
pusha
and
test
pushf
int
leave
outsb
pop
clc
ljmp
inc
push
inc
inc
pop
cmp
jne
inc
jp
int
icebp
fxch
pop
push
pxor
mov
lods
out
popa
adc
je
imul
out
mov
in
cmp
daa
sbb
mov
icebp
add
data16
xchg
pop
lock
dec
insb
addr16
call
push
or
push
das
dec
xor
xor
xchg
lock
js
test
dec
jmp
xor
stos
pop
sarl
incb
dec
nop
fs
mov
jmp
mov
push
add
fistps
imul
sbb
data16
shlb
mov
es
rorl
aad
je
fisttpl
add
adc
mov
add
add
push
or
jb
xor
pop
push
push
stos
mov
jmp
xor
ljmp
inc
iret
rcll
ret
mov
xchg
and
cwtl
xchg
dec
mov
dec
cmp
adc
cmp
insb
mov
lcall
fwait
popa
xchg
fidivs
pop
xor
popf
push
in
sbb
push
rcrb
pop
cmc
adc
enter
faddl
or
rcrb
loope
pop
in
push
cs
test
and
cmp
adc
jno
mov
call
cmp
loopne
jmp
add
repnz
lea
push
inc
jecxz
mov
jb
test
lods
add
xchg
test
mov
add
fnstcw
cmc
cltd
in
jge
mov
ja
or
cwtl
xor
ret
xchg
pop
lret
mov
daa
add
or
out
pop
or
pushf
or
repnz
jmp
lret
adc
xlat
fwait
hlt
mov
jg
inc
adc
movsl
add
cmove
gs
push
test
mov
or
pop
cmpsb
cltd
cmp
xchg
nop
xor
stc
push
into
pop
xchg
out
xor
aam
adc
and
push
sarb
icebp
pop
xchg
mov
movsb
push
mov
xchg
xor
subb
xchg
fmuls
mov
divl
pushf
clc
shll
testb
jno
fcomps
xchg
pusha
xor
mov
in
inc
pop
divl
cmp
insb
pop
rclb
aaa
jge
popl
fidivs
jno
sbb
loope
xchg
add
jl
xchg
shll
pop
cmpsl
scas
mov
int
pop
jl
pop
fdiv
dec
xchg
lock
xor
add
dec
adc
enter
push
mov
test
pop
in
jo
sbb
cmpsb
or
enter
hlt
push
xor
push
or
stos
call
ss
fnclex
sti
out
leave
mov
pop
pusha
adc
jmp
rcll
cld
sbb
mov
push
aas
xor
add
dec
push
lret
loopne
dec
rolb
not
or
movsl
lds
fidivrl
and
cmc
into
and
mov
or
push
mov
xchg
mov
cmp
mov
sbbb
xor
mov
xchg
mov
mov
cwtl
test
shll
or
adc
or
shrl
in
hlt
mov
xor
mov
cmp
bound
je
or
aas
imul
loope
xor
mov
jae
loope
mov
dec
mov
mov
xchg
test
in
iret
sahf
adc
ret
mov
pop
aad
push
xchg
mov
std
add
dec
jbe
lods
data16
add
xor
push
mul
fwait
mov
jge
cmpsl
iret
cmp
gs
dec
ficoms
insl
adc
cmovno
pop
push
imul
pop
sub
pushf
imul
popf
and
dec
mov
xchg
adc
xchg
int
aad
cwtl
in
and
loop
les
mov
scas
dec
outsl
xorb
bound
daa
push
pop
nop
insl
sub
stc
xor
aas
into
pushf
pop
mov
loope
jnp
stos
out
ret
cwtl
scas
mov
adc
out
pop
push
and
stos
aaa
iret
sbb
clc
mov
outsl
push
xor
pop
push
pop
insl
sub
fchs
add
xchg
ljmp
xchg
rolb
gs
xchg
repz
fucomi
sbb
popf
mov
sub
dec
jae
fiadds
mov
dec
movsl
or
sarb
hlt
push
xor
sbb
je
adc
or
jl
fsub
mov
das
or
add
add
inc
lds
outsl
xchg
and
or
sub
pop
sbb
xchg
mov
lret
std
cmp
scas
fildl
stos
cltd
std
mov
out
sub
pop
das
or
aas
aam
mov
mov
xor
mov
fildll
scas
pop
and
js
je
mov
shll
inc
out
pop
jg
aas
call
call
subb
fdiv
cmp
movsl
xor
and
stos
xor
arpl
andb
push
xor
in
fmull
cmp
es
adc
in
repnz
scas
adc
mov
mov
mov
nop
sub
test
cmp
scas
pop
cmpb
or
fwait
dec
pushf
mov
icebp
ds
or
cmp
mov
pop
push
add
aad
incl
in
sub
cmp
pop
rorl
je
mov
inc
pop
ljmp
mull
cmp
cwtl
mull
sub
inc
adc
cs
mov
adc
arpl
pop
mov
rolb
daa
sahf
inc
or
mov
lcall
xlat
cmpb
sub
int3
jecxz
notb
test
mov
mov
or
xor
cltd
stos
xor
jp
popf
mov
xor
cmp
adc
cld
pop
cmp
cmp
inc
aas
icebp
call
adc
xchg
loopne
lods
ret
aaa
xchg
mov
rorb
xor
push
sub
adc
out
cli
push
inc
jmp
xor
arpl
pop
iret
and
add
sub
pop
fists
les
scas
jg
lret
sarl
shr
push
ljmp
xlat
stos
push
mov
pop
adc
jmp
fwait
ljmp
mov
insl
shlb
pop
int3
and
cmp
scas
adc
imul
adcl
mov
sbb
test
stos
mov
cmpsb
jno
call
jae
or
adc
add
cmp
call
xchg
in
and
es
pop
loopne
leave
add
sub
iret
hlt
jmp
xor
add
aad
or
enter
lea
mov
ds
call
xchg
ffreep
mov
push
shrl
pushf
jp
loope
sahf
and
mov
pop
sbb
or
xchg
push
sub
xchg
rcll
push
cld
push
pop
lea
ja
stos
lret
push
push
scas
mov
pop
mov
add
pop
xor
inc
and
mov
popf
sbb
bndstx
mov
pop
or
cld
call
cmp
aad
into
iret
hlt
pushf
sub
jmp
out
sub
lahf
mov
dec
pop
jmp
xor
inc
fcmovb
pop
test
lods
sbbb
sarb
fucomip
cmp
mov
in
mov
add
adc
fsubp
mov
mov
xchg
lahf
mov
jno
jle
mov
imul
in
leave
enter
fld
ja
mov
sarl
int3
push
jg
xor
notl
mov
sbbb
test
pop
ss
xchg
inc
pop
divl
sahf
sbb
aaa
pop
mov
ret
clc
and
and
out
loop
lret
shll
push
xchg
insb
mov
xor
jne
add
scas
mov
ret
jns
mov
and
into
push
jle
xchg
add
rol
in
mov
cmp
addr16
adc
ror
lahf
add
stc
jg
xlat
sbb
and
cmp
xchg
fst
push
call
xchg
push
mov
call
das
inc
stc
shrl
fisubrl
xchg
mov
cmp
jbe
sti
and
js
push
mov
call
sti
jmp
xchg
enter
fdivs
xchg
jnp
sbb
movsb
sahf
add
fld
mov
fwait
pushl
fmull
or
cltd
into
lock
push
lret
mov
sbb
adc
dec
sub
dec
ss
ror
in
lcall
popa
xchg
shrb
lods
push
mov
sub
jns
sub
in
sahf
repnz
test
adc
jmp
lahf
outsb
dec
xchg
add
fwait
outsl
stos
add
mov
mov
test
mov
test
ss
aad
sbb
or
cmp
imul
stos
push
jbe
scas
pop
mov
hlt
imul
out
xor
ror
xor
cmc
and
adc
repz
jbe
xlat
sbb
add
addb
rorb
ret
das
xchg
push
mov
mov
jl
dec
dec
test
in
add
into
xchg
push
pop
and
inc
pop
out
std
test
je
popf
out
mov
nop
dec
pusha
aaa
loopne
fcmovnb
sti
stos
int3
dec
cmpsb
xchg
jnp
xor
push
test
incb
mov
mov
jg
repnz
mov
incl
add
and
in
xor
push
sub
pop
and
sbb
and
cmpsb
sbb
hlt
arpl
ret
mov
les
push
ret
xchg
shll
nop
xor
je
test
out
pop
test
imul
popf
pop
mov
daa
cld
dec
xchg
jmp
lea
mov
scas
cmp
inc
stos
fistpll
inc
pop
jge
push
popa
std
sub
push
gs
scas
pushf
stos
js,pt
push
in
rorl
movsb
mov
pop
dec
mov
je
push
test
jno
xchg
in
pop
adcb
call
or
test
hlt
and
fs
scas
xchg
fwait
loopne
imul
rcll
movsl
fidivrs
mov
push
jo
adc
sub
lods
xchg
stos
add
jne
dec
divps
out
push
mov
fcomps
jecxz
cmp
bound
sti
lret
cltd
fwait
je
or
dec
xchg
cli
mov
xlat
ljmp
das
mov
adc
int
mov
rcrb
scas
insl
les
int3
sbb
lahf
js
push
cld
cmpsb
pop
or
jnp
in
repnz
scas
add
cld
in
dec
lret
cmpl
pop
adc
jnp
sub
pushf
mov
mov
test
push
lret
scas
jno
push
dec
mov
or
and
lods
pop
xchg
stos
rcrb
pop
cmp
mov
test
or
add
jecxz
xchg
sub
in
inc
rolb
sbb
pop
xchg
xchg
insb
std
outsb
fbld
les
movsl
in
sub
push
mov
or
je
add
jnp
shl
iret
jae
or
xchg
jae
pushf
push
clc
jmp
cmp
rorl
faddl
es
push
mov
outsb
dec
mov
adc
pop
pop
nop
out
rcl
mov
jge
jnp
mov
push
negl
push
rcrb
mov
mov
or
inc
mov
adc
je
nop
xor
in
mov
or
orb
and
clc
divl
sub
std
sbb
and
iret
das
push
mov
jns
sbb
jne
dec
addr16
adc
add
jmp
stos
lahf
pusha
stos
cmc
nop
adc
lret
mov
inc
js
clc
jno
dec
push
pop
es
test
lret
ds
imull
test
fs
iret
xor
add
hlt
out
xchg
js
jne
cmc
pop
sti
push
mov
mov
xlat
mov
sub
mov
insb
fdivrl
addr16
test
mov
xor
sbb
pusha
dec
mov
cmp
or
loope
pop
xchg
fsub
jl
pop
out
or
outsb
sub
add
shlb
dec
fnstcw
pop
dec
mov
mov
mov
fs
and
mov
mov
jmp
xlat
test
pop
mov
test
fnsave
xchg
xchg
jle
xchg
je
mov
sbb
pop
inc
mov
xchg
push
mov
push
stc
mov
decb
pop
shl
xchg
push
xchg
out
adc
fisubrs
push
and
sbb
enter
lret
scas
jmp
stos
je
cmp
or
and
jle
rorb
mov
adc
lret
mov
lcall
or
mov
in
fisttpll
jle
jno
xchg
jo
std
mov
inc
mov
push
pop
jns
es
stc
imul
fisubs
pushf
dec
cmp
test
dec
or
or
mov
sub
mov
mov
xchg
lock
and
sub
out
test
jnp
xchg
jnp
fs
pop
mov
lds
inc
loop
add
les
dec
and
adcl
push
sbb
adc
shrl
std
cmp
fsubrs
cld
and
push
and
mov
into
int3
sub
xor
sahf
fidivrs
insb
sbb
or
jge
insl
popf
mov
add
xor
es
ss
lret
mov
inc
and
stos
lea
sub
and
in
and
or
pandn
xchg
movsl
ljmp
addr16
cld
test
stos
sub
cmp
jp
jg
nop
adc
fxch
pop
bound
mov
push
xchg
add
adc
xchg
cld
mov
push
movb
adc
jae
int3
call
enter
sahf
or
pop
lret
jne
ljmp
pop
mov
aam
push
in
sbb
loopne
dec
mov
in
cmpsb
aam
cmp
test
push
pop
idiv
or
mov
sub
jg
popf
adc
pop
xor
mov
pop
xor
mov
mov
andb
pop
xchg
fs
sub
push
popa
push
test
fwait
repnz
mov
pop
lcall
pushf
sub
sbb
lret
sbb
test
jg
push
and
jno
xchg
sbb
insl
jno
popf
push
sub
mov
test
out
cli
cmpsb
call
in
int3
inc
add
xchg
cmp
and
and
add
sahf
xor
es
in
ret
push
inc
cltd
xchg
jmp
add
or
and
push
add
arpl
jae
stos
pop
iret
mov
enter
pop
inc
js
pop
jns
decl
jns
cmp
rcrl
adc
les
out
mov
ja
insl
insl
pop
mov
mov
xchg
xchg
jne
lcall
cmp
push
and
or
test
mov
xchg
jo
mov
push
aad
fisubrs
push
and
in
into
pop
sahf
sbb
or
int3
repz
add
into
test
adc
pushw
cmpsb
cs
lcall
nop
mov
sub
notl
lcall
cmp
inc
in
jno
pusha
cmc
leave
pop
loop
out
cmpsb
dec
adc
sbb
adc
fistpl
mov
fcompl
fistps
add
jmp
mulb
dec
pop
mov
roll
ret
lock
in
repnz
aas
scas
lock
int3
mov
push
xchg
cmp
xor
outsb
mov
adc
ficomps
cmp
fcoml
sahf
sbb
mov
dec
xchg
cmp
repz
and
inc
idiv
pop
sbb
pushf
movsl
sub
cmp
inc
lcall
sub
enter
or
and
movsb
lods
in
popa
test
pop
xchg
out
add
lret
sub
jecxz
mov
fstpl
add
pop
lock
rcrb
xor
mov
test
movsl
in
dec
sbb
lahf
scas
loope
jne
sub
shll
push
mov
jmp
mov
and
fsts
inc
add
shlb
imul
mov
pop
dec
lods
dec
les
lahf
int3
in
mov
cmp
sbb
insl
insl
lahf
pop
incb
mov
bound
loopew
mov
pop
sub
iret
mov
fs
insl
or
scas
push
inc
std
add
jbe
out
push
mov
lds
sahf
xor
ret
mov
xchg
mov
jae
xor
dec
add
mov
adc
cmpsb
mov
in
rcrl
or
jo
and
in
mov
ja
mov
add
jne
xor
push
pop
fimuls
addr16
pop
cmpsl
jmp
leave
sub
sbb
imul
test
cmp
mov
lods
js
dec
sub
cli
js
push
in
rcr
pop
push
daa
jno
mov
push
adc
insl
pushf
imul
mov
xlat
es
fisttpll
daa
add
xor
outsl
xchg
jae
jle
scas
xchg
ret
subb
cmp
aad
mov
pop
in
mov
lea
std
push
sub
xchg
clc
mov
adc
dec
das
jns
imul
inc
push
xchg
imul
scas
or
stos
push
xchg
add
add
test
insl
orb
sti
enter
cmp
in
cs
icebp
sbb
jne
add
daa
xchg
popa
adc
outsb
mov
pop
in
insb
mov
adc
hlt
fmull
mov
fwait
and
inc
add
arpl
mov
mov
xchg
dec
ljmp
fwait
mov
mov
dec
xor
mov
lret
adc
cltd
xchg
aas
jg
call
into
xchg
movsb
nop
fiaddl
inc
mov
mov
fistpll
mov
pextrw
orl
mov
push
jp
test
icebp
gs
pop
mov
mov
sub
movsl
loopne
jne
dec
cli
daa
xor
dec
inc
mov
outsl
mov
in
lret
sbb
loope
dec
pop
push
and
enter
add
pushf
mov
loop
out
test
dec
stos
mov
adc
insl
mov
jmp
add
mov
push
jmp
popf
jg
push
xchg
mov
xchg
imul
lcall
in
addr16
sub
inc
jecxz
jno
push
mov
jb
dec
or
push
push
pop
lods
push
add
pop
loope
sbb
mov
mov
lods
scas
jmp
fs
pushl
push
scas
jecxz
in
lahf
xor
movsl
sbb
fiaddl
in
test
rclb
fidivs
call
cmp
icebp
mov
push
or
adc
in
cmpsl
shrb
xchg
mov
popa
inc
daa
insb
test
fstpl
iret
scas
movsb
dec
jns
add
jns
or
pop
iret
data16
jmp
nop
cltd
loope
sbb
or
add
enter
jmp
jne
ret
jmp
pushf
imul
or
cmpsb
scas
sbb
lahf
xorb
loop
xchg
jbe
jo
into
xor
xchg
mov
scas
ds
push
mov
outsb
idivl
jecxz
fwait
adc
out
mov
jnp
sti
and
arpl
xor
movsb
jo
sahf
adc
mov
les
ret
ds
ss
or
pop
mov
shrb
shl
hlt
mov
divl
pusha
mov
int3
in
pop
lcall
dec
pop
mov
test
cmp
adc
or
pop
fdivrl
out
xor
out
sbbl
xchg
aaa
push
loop
aad
fimull
mov
dec
in
rcrl
mov
sbb
xchg
dec
mov
aam
and
jle
ret
out
stc
stos
mov
mov
pusha
daa
loope
push
mov
pop
aam
pushf
insl
bound
xchg
push
rol
pop
test
sbb
and
lsl
lods
mov
jp
movsl
jl
iret
pop
pusha
jecxz
mov
push
jns
in
aas
cli
jnp
jg
lds
xchg
jge
mov
xchg
adc
ljmp
sub
jg
stos
add
dec
mov
fwait
mov
je
cmp
scas
repz
pusha
stos
xor
rcll
jle
aam
icebp
repnz
bnd
je
dec
dec
xor
repnz
bnd
adc
mov
das
pop
cmpsl
jp
lods
fdivs
mov
out
jmp
mov
bound
das
push
pusha
jno
scas
add
aad
pushl
cwtl
sub
ds
and
cmc
addr16
mov
mov
mov
seta
mov
aas
xor
pop
jecxz
in
push
test
pop
movsb
xacquire
mov
popa
clc
push
cwtl
repz
out
popa
xor
bound
ret
lret
daa
push
rcrb
jg
pop
dec
aas
aaa
xchg
xchg
outsl
rclb
insl
or
dec
mov
aam
xchg
mov
xor
pop
nop
andb
daa
addl
xchg
call
fiadds
or
xor
pop
les
fists
sbb
jo
dec
fsubrl
mov
fucomp
push
mov
stc
mov
jne
data16
movsb
mov
in
push
and
mov
sub
icebp
stc
mov
rcll
je
and
arpl
dec
mov
in
aaa
fldenv
sbb
dec
push
fwait
adc
je
aad
add
mov
mov
loopne
aas
fldcw
mov
and
inc
repz
ret
xchg
rcrl
cmp
add
lods
add
enter
xor
jns
mov
sub
jae
mov
lcall
in
jo
mov
dec
repnz
push
aad
sbb
data16
adc
xor
adc
mov
pusha
pop
lea
and
in
mov
icebp
into
repz
jge
pop
ds
xchg
repnz
jge
icebp
jle
sbb
pop
stos
lock
ret
cmp
or
ret
insb
sub
pushf
mov
push
lea
lods
popa
std
cli
scas
or
adc
loop
and
cmpsb
int3
cwtl
shrl
cmp
rcl
inc
cmp
pusha
jo
or
jb
cli
jns
outsl
cwtl
mov
subb
cmp
daa
push
xor
cli
shlb
pop
mov
mov
xchg
in
sarb
clc
aas
mov
jmp
xchg
sub
xchg
mov
loop
ljmp
lahf
mov
ja
cli
xor
scas
loope
cmc
loopne
push
jecxz
mov
loopne
aam
pop
clc
enter
jecxz
and
sub
mov
hlt
xorb
sbb
xchg
push
inc
adc
mov
add
jbe
shll
xor
aad
add
in
imul
jno
jns
pop
xchg
in
ret
repnz
and
mov
xchg
mov
stos
rorl
or
shr
addb
js
sbb
cltd
sahf
ds
sub
testb
scas
adc
repnz
jb
fs
cmp
scas
sbb
iret
sbb
fwait
xor
and
insb
sbb
xchg
popa
jb
pop
xor
mov
mov
pop
dec
adc
test
jl
lret
or
sbb
mov
fwait
and
scas
out
jb
enter
sbb
sub
mov
add
jns
jecxz
lds
in
roll
mov
lahf
popa
decb
push
das
push
push
ret
or
inc
or
mov
int
movsb
inc
sub
or
jmp
popf
ret
sti
and
test
add
in
xor
push
mov
mov
add
cmp
je
fdivs
ret
mov
sub
add
pop
inc
adc
sbb
sbb
dec
xorl
sub
push
cmc
je
and
shll
adc
inc
roll
in
leave
sar
push
out
push
addb
ljmp
ss
stos
pop
cmp
ljmp
stos
gs
dec
inc
stos
push
add
rclb
out
adc
fs
enter
imul
aam
inc
lret
ret
popa
mov
xor
bound
dec
ds
pop
cmp
and
pop
adc
mov
jl
mov
stc
jbe
cwtl
xor
repnz
sti
xor
repnz
aad
mov
xchg
pushf
jns
cmp
sbb
fldenv
stos
jne
mov
icebp
pushf
fistpll
xchg
retw
push
aaa
cmc
xor
lods
pop
mov
and
or
cwtl
addb
rcll
loope
mov
test
cs
std
out
lock
sti
or
or
xchg
lds
add
out
cltd
in
push
je
lahf
adc
xor
mov
repz
jns
lcall
inc
mov
jl
sbb
mov
dec
jno
adc
hlt
das
adc
enter
stc
mov
cltd
jns
dec
imul
lods
sub
pop
popa
mov
push
adc
push
mov
sti
xchg
iret
into
push
jne
and
leave
push
cmc
scas
imull
xchg
push
dec
cli
insl
insl
fwait
cmp
dec
or
cmpsb
adc
adc
loop
xor
aas
aaa
adc
xor
xorb
xor
mov
scas
and
mov
mov
mov
in
push
int3
mov
mov
mov
dec
imul
push
push
dec
sub
jp
cli
out
es
cmp
xor
sbb
test
inc
sub
or
sti
int3
jo
mov
mov
push
orl
int
repz
jmp
jne
test
xchg
cli
in
pushf
aad
or
loopne
mov
adc
ret
sub
lret
shl
aad
push
rolb
stc
popa
sub
aam
lcall
ret
cmp
repz
and
xlat
insb
adcl
pop
xlat
imul
std
sub
sahf
stos
ficomps
push
mov
movsb
lods
cmpsl
push
in
rorb
out
jg
push
in
clc
push
pop
sub
mov
cmp
imul
lret
jno
sahf
inc
push
inc
pop
mov
add
mov
aad
sub
mov
or
int3
adc
lea
rcrl
pop
movsl
cmp
jmp
aaa
scas
iret
fisttpl
adc
dec
fnsave
cmp
test
cmp
and
push
pop
cmpsb
pop
xlat
pop
add
stos
test
sub
mov
pushf
and
inc
push
je
jns
fsubrs
ret
cmpb
outsb
or
outsb
out
and
out
popa
cltd
paddb
fbstp
int
push
pop
mov
inc
mov
cmc
jle
sti
push
mov
push
cli
xchg
jb
out
pop
push
or
jl
scas
inc
insb
xchg
mov
push
pop
cmpsb
pop
cmp
push
dec
repz
pop
mov
mov
pushf
repz
adc
inc
push
test
shlb
xchg
repnz
fstl
addr16
xchg
or
mov
shll
lds
mov
mov
js
xor
sub
mov
in
ret
jo
in
test
dec
dec
mov
jg
mov
sar
and
inc
cmp
xchg
mull
ret
mov
sbb
push
mov
xchg
jge
shll
lcall
or
sbb
pop
mov
cmp
mov
orl
cs
add
mov
fidivrl
addr16
fs
sub
xor
fsubrl
jo
aad
mov
retw
shrl
popa
enter
push
jmp
jb
lret
jp
push
mov
repnz
lods
dec
cmpsb
or
aaa
insb
push
cli
stc
dec
push
xor
cmp
cmp
ss
mov
sub
dec
pop
rcrl
pop
mov
in
mov
sbb
mov
sub
ss
mov
ss
jnp
jne
cli
outsb
mov
add
cs
mov
mov
out
enter
pop
iret
mov
cmc
scas
sbb
xor
fisubrs
test
jecxz
sub
frstor
sbb
pop
test
repnz
xchg
aas
push
repz
mov
shr
fstpl
jg
push
xchg
popa
push
or
test
leave
sub
mov
stc
mov
pop
daa
sahf
out
ret
aad
or
jg
jns
push
shll
icebp
stos
lock
mov
gs
cmpsb
push
pop
test
cmp
pop
pop
dec
lods
popf
mov
mov
jbe
and
mov
scas
imul
cltd
pop
in
sbb
rcll
mov
mov
mov
and
push
loopne
lods
mov
ljmp
sbb
dec
into
hlt
or
sahf
pop
sub
loope
repz
pop
std
int
lret
sbb
pop
xchg
cmp
les
inc
outsl
outsl
cmp
xchg
xchg
or
or
scas
push
adc
leave
data16
iret
jb
sbb
pop
test
jno
xor
sub
pop
lret
insl
mov
aaa
stos
jno
add
cmpsl
lds
jb
test
push
out
pusha
push
arpl
arpl
repnz
in
xor
out
out
rclb
pop
fs
mov
pop
enter
movsl
push
cmp
into
push
or
sub
jge
adc
adc
fsubl
shrb
dec
in
lret
mov
daa
pause
out
jno,pt
pop
jle
loop
out
cmp
mov
lods
mov
add
mov
push
rcrl
pop
cmpsl
ljmp
jae
test
imul
scas
push
enter
xchg
or
xor
fldl
test
scas
or
scas
scas
and
lock
sbb
jg
test
xlat
div
mov
mov
lds
ss
sbb
pop
test
jg
stos
and
ljmp
cmc
shlb
lcall
and
dec
inc
xorl
cltd
fwait
jae
adc
push
insb
addl
sbb
jp
or
sub
sbb
cmp
pop
mov
adc
ss
shrl
sub
adc
cmpsl
pop
mov
push
sbb
sub
ret
inc
fs
mov
fisubs
scas
iret
popa
jmp
fs
sbb
adcb
push
enter
pop
in
xor
xchg
push
lock
adc
mov
aad
mov
pop
mov
cmp
ljmp
xchg
and
lcall
sbb
clc
mov
movsl
mov
in
lods
nop
sub
ds
xor
sub
aad
mov
jle
or
sbb
mov
add
test
jns
in
sbb
cmpsl
mov
inc
pop
scas
dec
jmp
rorl
adc
movsb
xchg
mov
cmp
jbe
pop
outsl
je
aaa
sbb
push
jle
mov
std
clc
mov
icebp
xchg
fadd
js
addr16
mov
int3
add
xchg
adc
xor
jnp
inc
sarl
cmp
push
add
orb
jnp
cmpsb
cli
jmp
pop
fidivrl
stos
push
add
movsl
mov
or
test
adc
inc
xchg
push
lods
jp
icebp
aas
xor
cmp
or
insl
adc
pop
xchg
or
aaa
test
dec
std
mov
xlat
addl
sbb
mov
inc
adc
int
es
mov
sbb
mov
mov
pop
jle
fwait
pop
sub
repz
xlat
das
and
xchg
fwait
sub
cmp
xor
jmp
flds
aas
adc
mov
test
cmp
pop
cmp
mov
xor
jnp
outsl
pop
jle
jns
jle
andb
mov
mov
cmp
or
out
or
sub
mov
lds
dec
xlat
and
dec
pop
xor
int
notb
mov
jl
das
jbe
bound
sbb
das
push
sbb
cmp
xchg
iret
int
or
enter
setbe
jmp
and
mov
dec
imul
push
scas
sbb
mov
rcl
pop
xor
ret
addb
push
sub
xchg
jecxz
clc
push
lods
mov
mov
jbe
sbb
and
lahf
xchg
cmpsb
push
mov
addl
icebp
xchg
cld
pop
sbbb
call
jl
arpl
popf
mov
dec
movsl
and
sbb
xor
fwait
jge
fmuls
or
int3
lds
jge
lock
int3
and
push
pop
inc
mov
adc
hlt
hlt
xchg
xchg
out
mov
fucomip
enter
ja
out
loopne
scas
fildll
mov
push
pop
add
mov
dec
scas
cli
ljmp
pop
xchg
xor
rcrb
jg
sub
in
iret
push
xor
push
call
or
jae
mov
inc
lock
loop
call
cmp
clc
mov
push
pop
push
xchg
push
mov
pop
sub
mov
push
xchg
aad
test
dec
ljmp
repnz
ljmp
fists
cli
sahf
test
fmuls
movsl
inc
xor
flds
testb
insl
inc
cmovnp
ret
fwait
adc
cmp
jge
sahf
stc
sti
cld
lret
pop
mov
jno
push
movsl
jns
dec
jmp
fistpl
lcall
shrb
dec
sub
jo
add
mov
cmp
aas
test
lret
in
inc
push
rcr
xor
repz
addr16
cli
sub
fwait
inc
ss
sahf
aaa
scas
pop
dec
push
mull
not
btsl
in
addr16
sbb
mov
sub
jnp
mov
xlat
sahf
lcall
mov
dec
inc
int
fstps
fsubrs
lret
cwtl
inc
jnp
cli
xchg
dec
xor
std
mov
xor
push
out
data16
jae,pt
push
ja
je
jno
and
in
jb
fstl
mov
imulb
add
cmpsb
callw
and
test
stc
inc
or
pop
and
int3
loopne
and
out
cmp
jmpw
andl
mov
insl
stos
das
stos
out
mov
mov
push
cmp
mov
push
and
loop
icebp
rclb
imul
jle
push
test
enter
push
movsb
push
mov
adc
test
fs
pop
xor
jp
lea
xchg
mov
mov
fdivl
insb
movsl
sahf
push
fldl
cmp
fstpl
and
loop
pop
roll
popa
imul
test
sub
adc
pop
push
fsts
jecxz
xchg
adc
inc
ljmp
insb
lods
mov
inc
jg
divl
mov
in
add
movsl
pop
dec
icebp
inc
lods
cwtl
fsubl
adc
out
lret
mov
repz
or
arpl
test
popa
idivb
mov
cmp
in
call
lcall
inc
jae
stos
scas
movsl
fstpt
lods
push
pushf
idivb
sbb
or
inc
dec
mov
mov
cld
cmp
sbb
sahf
mov
cmp
xchg
add
adcl
xchg
loopne
ljmp
repz
sub
fabs
mov
mov
iret
push
in
lret
sti
push
push
pavgb
iret
add
lret
cmp
lods
mov
push
pop
pop
jl
adc
xor
mov
mov
pop
ffreep
and
lea
inc
push
std
fadds
in
and
es
push
xchg
pop
cmp
in
add
mov
fnsave
adc
ret
cmpsl
xchg
push
popa
jbe
test
nop
cs
loopne
les
sbb
or
mov
lock
aas
call
push
js
pop
leave
repnz
int3
xchg
les
je
add
inc
cmp
loopne
dec
lret
adcb
aam
inc
dec
adc
lea
push
aad
lahf
nop
xor
rcll
test
inc
lds
shlb
std
push
inc
xchg
cmp
aad
and
dec
xchg
fcmovbe
jo
call
push
jp
rcr
add
xchg
push
ja
popf
lock
out
mov
mov
pushf
loope
dec
cs
bound
mov
popa
nop
sub
adc
bound
push
sbb
cli
cmpsb
orb
movsl
xor
sbb
aam
ret
enter
jae
loope
inc
push
leave
imul
mov
stc
daa
xor
mov
test
jle
push
xchg
lods
mov
pop
sbb
or
stos
shll
xor
sbb
daa
arpl
mov
cmp
mov
fwait
out
insl
dec
mov
pop
lock
or
loop
aam
lcall
adcw
int3
sbb
mov
push
xchg
cwtl
popa
adc
cmpsl
mov
in
leave
cmpsl
push
dec
xchg
dec
loope
push
insl
ss
repnz
prefetch
or
xor
adc
in
push
outsb
or
ja
mov
std
mov
cmpsb
int3
std
xor
sub
xor
adc
sbb
mov
orb
xchg
mov
adc
pop
add
pop
mov
movsb
test
int
add
mov
push
sbb
mov
jmp
xor
dec
inc
or
frstor
lret
mov
cmpsb
inc
je
dec
pushf
pop
cmp
and
fdivrs
movsb
insl
xchg
push
test
pop
mov
or
sub
pop
pop
or
mov
pop
das
addr16
lock
or
cli
mov
adc
shl
shrl
ret
jmp
cmp
adc
aam
je
jno
fists
push
mov
mov
sub
mov
dec
pop
xchg
popa
push
mov
cmp
dec
mov
sub
push
inc
jae
push
faddp
lock
gs
out
pop
xchg
or
js
jae
mov
mov
pop
cmpsb
out
rcll
cmp
cmp
dec
push
movsl
xor
cli
xchg
idivb
fs
daa
repnz
loopne
fsubl
scas
iret
shrb
mov
mov
outsl
jno
sbb
inc
pop
pushl
pop
jbe
mov
xor
mov
loope
xchg
mov
icebp
lock
sar
jb
xchg
jbe
lods
mov
xor
jbe
std
in
mov
push
fstpt
ljmp
dec
push
xor
xchg
sahf
cs
jg
pop
pushf
popa
clc
xchg
clc
adc
mov
fs
fstp
dec
fsubrl
mov
or
push
enter
push
int
inc
add
iret
jae
mov
lods
xor
hlt
push
lahf
sbb
cs
dec
and
outsb
dec
popa
sahf
pop
out
lods
movb
stos
int
or
and
xchg
adc
mov
int3
sub
jne
inc
mov
mov
testl
jb
sub
cmpb
divb
bound
pop
push
push
jge
inc
mov
iret
mov
aam
fadds
pop
or
negl
lcall
and
fiaddl
cmp
mov
cli
hlt
fcmovnb
rolb
imul
sub
dec
inc
fistps
bound
adc
insl
out
into
das
sbb
mov
inc
cltd
mov
in
sub
sti
lods
push
gs
loope
ret
mov
jp
lcall
dec
dec
mov
es
adcb
pop
orb
add
ljmp
cmc
add
ret
cmp
fldenv
cmp
sub
push
pop
ds
mov
insb
jae
sbb
fcomps
sbb
es
adc
mov
pop
push
data16
fisubs
mov
fmuls
add
sti
movsl
cmp
or
test
dec
push
inc
jb
dec
and
dec
loopne
mov
out
popf
imul
scas
cwtl
sahf
xchg
loope
pop
push
xchg
ja
lcall
push
enter
xchg
out
and
scas
pop
fcomip
inc
aam
ja
ret
fsubrs
push
pop
jno
in
loop
call
lahf
ss
rcrl
jbe
fsubrs
sbb
fsubrp
mov
sub
add
out
cmp
jbe
arpl
sub
and
xor
sub
xchg
std
add
mov
dec
les
xlat
negl
loope
inc
and
dec
and
dec
dec
sbb
loope,pn
fsts
in
jno
sbb
or
cmp
sbb
pop
push
sbb
jb
sbb
jne
pop
inc
dec
mov
addr16
int
mov
jne
xchg
cmp
fcoms
in
imul
push
sbb
or
testb
std
mov
das
pop
push
sub
shrl
sbbl
cmpsl
repz
cmp
adc
test
out
js
pop
pop
or
lret
pop
test
aam
sub
aad
inc
cmp
add
adc
xor
hlt
ret
mov
inc
hlt
mov
repz
mov
pop
push
ljmp
mov
iret
fisubrl
sub
xchg
shr
ror
aad
sub
add
subb
jns
movsb
and
sbb
adc
cmp
adc
push
jle
stos
adc
xchg
cmpsl
adc
notb
inc
adc
sub
cld
sub
mov
and
cmpsl
popf
cmp
jo
leave
mov
jb
arpl
mov
sub
les
js
mov
cmpsb
test
ds
enter
dec
push
rcll
mov
ret
aaa
mov
pushf
test
pop
dec
dec
scas
sub
or
arpl
sbb
xor
mov
jno
jmp
cld
mov
fs
lods
add
outsl
xor
jo
jg
out
xor
das
test
aaa
adc
xchg
aaa
dec
inc
dec
cmp
insl
popf
jnp
pop
sbb
out
pop
lret
xor
lahf
cmpsb
cltd
add
xchg
repz
fcmovbe
jl
out
loop
dec
push
shlb
arpl
xchg
sub
cltd
insb
push
outsb
add
shl
in
out
mov
or
sbb
push
bound
aaa
cwtl
mov
sub
daa
std
pop
out
xchg
push
jmp
xor
cld
cmp
sarl
aad
repnz
shll
adc
mov
sub
pushaw
lods
repnz
mov
xchg
mov
scas
xchg
sbb
mov
pop
push
sbb
lea
mov
dec
mov
sbb
mov
xchg
ret
movsl
sub
scas
fwait
dec
xlat
or
repnz
mov
nop
iret
aas
sbb
sub
push
roll
push
pop
sarb
ds
arpl
stos
jb
int3
nop
ss
lahf
movsb
in
and
shrb
cmpsb
js
cmpsl
cmpsb
xchg
arpl
psrld
jo
cmc
fidivrs
xor
cmp
js
push
clc
lahf
out
pop
in
fstps
jb
cmp
aaa
push
bound
nop
movq
lret
lahf
stc
sbb
dec
mov
mov
pop
pop
jns
pop
jbe
js
test
mov
inc
push
fcoml
notl
mov
push
shl
xchg
xor
xor
cmp
repnz
adc
mov
clc
rorl
push
iret
es
adc
fildl
xchg
decb
fstps
mov
add
data16
cmp
xor
loop
dec
clc
lcall
repz
mov
test
sar
push
inc
adc
and
popa
cmp
ljmp
dec
sub
or
mov
insl
and
rclb
popf
test
mov
cld
xchg
add
mov
lret
es
ret
push
mov
rcrl
dec
loopne
pusha
xor
scas
inc
pushf
jg
mov
call
cmp
ds
and
cltd
xor
mov
movsl
js
and
andb
mov
xchg
or
mov
dec
inc
adc
ss
add
lods
inc
sub
dec
push
mov
outsb
jge
pop
mov
or
push
sbb
mov
ret
push
xchg
inc
pop
cmp
fs
imul
mov
xchg
fisttpl
gs
push
rcll
aaa
sbbl
icebp
xchg
add
jb
popa
xor
gs
mov
inc
adc
scas
mov
shrl
decb
push
or
or
jbe
push
push
shlb
adc
add
cmp
sbb
push
stos
inc
cmp
outsb
jecxz
shl
in
lea
negl
add
inc
daa
js
jo
xchg
jno
push
outsb
scas
fdivr
cmc
in
mov
js
sub
inc
adc
in
jle
jecxz
es
fwait
sub
jecxz
push
push
lret
inc
push
cmc
mov
out
adc
add
nop
mov
out
fdivs
ss
pop
jl
test
and
add
int3
inc
jb
mov
jb
push
andb
mov
jle
sub
jle
mov
jecxz
rolb
mov
aam
test
test
mov
aaa
add
fwait
cmp
ds
dec
test
jp
cmp
scas
stc
add
push
ljmp
mov
lret
add
dec
int
out
lret
and
pop
iret
mov
cmc
mov
mov
and
adc
jb
add
test
data16
xor
pop
mov
loopne
and
jle
andl
fnstcw
aas
dec
cmp
daa
jmp
jl
push
outsl
and
inc
aam
pushf
aaa
or
jg
inc
out
inc
ljmp
sub
dec
sub
outsl
fists
ror
cmp
jno
loope
push
sub
je
dec
cmc
dec
xor
jbe
sub
lods
movsl
jo
add
cmp
ret
mov
mov
dec
mov
scas
rorl
movl
pop
inc
sub
test
push
lahf
adc
sbbb
pop
out
enter
push
popa
cmp
jl
cmp
pop
out
scas
pop
fnstcw
addr16
scas
aam
test
out
push
xchg
jno
xlat
sub
lcall
lret
mov
stos
mov
add
xchg
jl
cmp
js
mov
cwtl
scas
mov
incb
cmp
shrb
xchg
push
add
aas
int
add
and
jp
scas
mov
mov
jle
cwtl
scas
loopne
das
sub
jb
sub
inc
lret
dec
push
sbb
fwait
scas
jmp
mov
aaa
orl
dec
shlb
clc
out
hlt
sbb
dec
call
repz
sub
xchg
sti
inc
pop
dec
dec
in
lret
jecxz
cld
or
pop
push
jne
push
and
fistpl
and
sub
and
add
js
xchg
loop
pop
rol
cld
leave
pop
filds
jb
xchg
insl
js
fs
jns
ljmp
jg
jno
sub
push
xor
gs
mov
or
dec
enter
and
fdivs
dec
rcrb
and
aaa
mov
pop
mov
jg
sbb
aaa
cmp
aaa
dec
sub
jg
mov
cwtl
imul
aad
or
pop
adc
icebp
mov
jbe
push
out
inc
mov
outsl
sub
inc
jmp
mov
insb
adc
std
sti
adc
sarb
sbb
fmull
lock
out
jmp
stc
sub
bswap
je
and
mov
adc
sbb
loop
andb
xor
pop
xchg
mov
clc
inc
mov
fisubl
add
pop
into
mov
and
and
adc
loope
daa
cwtl
add
sti
fwait
sbb
dec
aam
inc
arpl
xchg
sub
fwait
test
out
and
mov
mov
adc
add
aaa
mov
in
push
adc
bound
xor
jp
jb
loop
subb
xlat
pop
jp
cwtl
inc
int3
xchg
push
push
add
cmc
pop
cs
cmp
cmp
jp
fdivrl
out
push
push
xlat
pusha
pusha
ficomps
testb
push
testl
pop
or
push
test
cmp
gs
fadd
and
mov
or
das
cmp
mov
push
add
imul
sub
nop
sbb
pop
jne
mov
js
or
popf
adc
jge
rcrl
lret
bound
loop
cli
in
adc
dec
xchg
cld
cmpsb
add
mov
mov
aam
sub
mov
dec
insl
cmpsb
mov
push
pop
push
aaa
and
adc
mov
add
pusha
lods
std
pop
lds
daa
jg
mov
jno
std
sub
sbb
ret
repnz
jns
int
bound
mov
inc
inc
sub
lahf
test
jg
push
xchg
pop
leave
push
out
and
cmp
mov
je
les
into
jle
in
in
clc
cld
fistpll
push
jb
jp
mov
sbbb
mov
or
cltd
movsb
lods
adc
iret
cli
or
je
inc
movsl
sub
mov
lcall
and
xchg
loop
imul
add
shll
lcall
clc
mov
fdivrs
mov
cld
inc
nop
popf
push
lods
push
adc
jo
ja
lret
push
mov
inc
clc
push
or
fdiv
enter
push
imul
lods
xlat
std
push
xchg
mov
and
cmp
cli
jecxz
imul
pop
test
pop
xor
int3
fcomps
std
cmp
adc
lds
add
in
pop
call
mov
push
xchg
pop
mov
or
fisubs
jmp
mov
enter
cmp
out
lret
lock
int
cmpsl
adc
stos
mov
or
and
and
dec
sbb
orb
add
shr
loop
movsb
mov
dec
out
xor
dec
and
adc
xor
push
jbe
pusha
xor
lcall
fwait
jns
sbb
int3
push
sbb
out
cltd
test
mov
outsb
jnp
aas
cmp
mov
movsl
xor
mov
sbb
cmp
cmpsb
lahf
imul
stos
lods
iret
fisttps
fcmovne
test
inc
test
jno
inc
int
ficoml
test
sti
add
adcb
and
dec
imul
mov
js
jmp
jmp
mov
sbb
push
aad
jge
adc
xor
xchg
dec
pop
stos
cmc
sub
add
cmp
mov
jo
push
jne
sbb
dec
lods
fxch
insb
outsb
or
jg
lea
loopne
xchg
cmp
lds
adc
pop
stos
push
xchg
cwtl
cmp
mov
inc
movsb
mov
dec
sub
xor
addb
divb
adc
and
lcall
sub
and
aas
and
data16
jl
les
cmp
and
divl
outsb
inc
xchg
je
out
aas
daa
stc
fwait
xor
test
dec
jne
clc
das
sbbl
in
cmpsl
dec
add
mov
jmp
sub
nop
pop
dec
pop
push
addb
adc
sub
imul
aas
inc
mov
push
xor
das
pop
inc
jb
push
dec
pop
cmp
fisttpll
and
push
xchg
cmpsl
out
jl
jle
xor
adc
lds
push
mov
insb
and
mov
out
pop
sbb
std
les
and
sub
pop
cs
fwait
cmp
lcall
dec
dec
pushf
lds
popf
out
pushf
fs
cmpsl
cli
out
out
pop
sbb
xor
testl
mov
lock
inc
outsb
sarb
inc
popa
test
ja
xchg
xchg
add
hlt
subb
add
jmp
clc
lods
das
das
pop
fwait
mov
ret
nop
lock
hlt
stc
sub
loop
mov
test
mov
sbb
jno
es
sub
push
push
cli
jge
jae
jp
xchg
mov
cltd
or
jb
jb
aaa
and
cwtl
jns
or
les
add
or
mov
dec
sbb
pushf
cli
stos
pop
jae
push
cmpsb
jb
cmp
jp
lods
mov
loop
outsb
stc
lahf
dec
xor
fs
test
xlat
xchg
xchg
mov
sub
mov
jne
cmp
mov
lea
leave
fdivs
data16
inc
jmp
mov
mov
leave
jns
es
mov
mov
cmpsl
mov
dec
mov
das
imul
test
mov
sbb
les
pop
nop
jmp
mov
test
shl
jne
aam
subl
xor
mov
jle
fisttpl
push
imul
and
xor
ds
sbb
fbld
dec
pusha
data16
mov
test
mov
aaa
mov
or
loopne
mov
pushf
cld
pop
gs
aad
pop
add
push
mov
mov
mov
xor
xor
repz
imul
inc
insl
ret
dec
out
dec
inc
add
or
push
nop
or
sub
lret
lret
mov
mov
push
cwtl
add
mov
inc
mov
fisttpll
cld
cmp
or
adc
xchg
cmp
push
divb
out
adc
lahf
and
lds
or
in
xchg
rclb
enter
pop
das
pop
fstpt
mov
inc
fs
push
ja
data16
push
xor
mov
movsl
insl
inc
xchg
mov
cmp
fs
bound
gs
iret
xchg
in
and
rorb
adc
adc
mov
adc
add
sbb
testl
fcompl
in
xor
daa
dec
lods
dec
fdivrl
into
add
je
inc
clc
int
enter
push
mov
push
and
inc
mov
shrb
in
lea
lods
mov
mov
nop
mov
add
mov
adc
daa
imul
xchg
mov
inc
or
sarl
cmp
scas
add
push
lods
cmp
lahf
sete
hlt
mov
pop
cmp
fwait
fs
clc
out
fistl
dec
mov
aas
lahf
or
sbb
jae
test
sub
mov
in
ja
cmc
mov
cmpsl
or
dec
mov
add
outsb
call
in
inc
xor
cmp
popa
mov
cmp
lea
sbb
adc
add
rcrl
insl
icebp
ret
push
bnd
scas
xor
hlt
arpl
pop
push
mov
and
mov
mov
cmp
fisubl
lahf
pop
cmp
insb
pop
pop
adc
push
pop
mov
sub
jp
ljmp
ja
ror
jg
repz
pushf
test
cld
stos
roll
adc
test
xchg
lds
cmp
jecxz
jae
cmp
stc
sbb
and
inc
and
ret
scas
or
sbb
lret
pop
lahf
arpl
pop
sub
pop
lret
aaa
inc
insl
jne
xlat
cmpsl
das
jno
jae
adc
inc
add
cmpsb
pop
inc
mov
imull
scas
push
or
cwtl
jle
jp
dec
scas
fnstenv
inc
adc
inc
out
and
xor
xchg
sub
and
pop
dec
lods
inc
push
xchg
sbb
sbb
push
lret
loopne
inc
testl
cmp
fld
push
inc
jecxz
addr16
xchg
das
ss
bound
jmp
xorb
push
mov
or
mov
mov
lcall
sub
push
ja
add
xchg
ds
sub
pop
test
add
jg
test
fsts
lret
jb
clc
inc
outsb
or
xor
push
rcr
add
int
mov
mulb
dec
sub
add
pop
iret
mov
pop
imul
pop
imul
sti
decl
rorb
into
daa
mov
ret
pop
lret
or
mov
pushf
mov
mov
push
icebp
and
add
test
leave
stos
adc
dec
cmp
ja
enter
cs
shl
pop
je
mov
xor
aas
dec
cmp
jo
sbb
dec
andb
pop
jno
incl
lods
addr16
push
pop
repz
adc
rcll
orl
ret
push
bound
push
xchg
sar
pop
rcll
inc
out
or
inc
fidivrs
xchg
cmp
jl
lods
push
add
cwtl
aaa
fsts
test
cmp
cmp
pop
xchg
xchg
mov
sbb
sahf
je
pusha
mov
mov
jbe
jno
or
outsl
add
es
or
into
dec
xor
xchg
inc
sar
jmp
es
addr16
mov
and
ret
adc
shrd
lods
jecxz
enter
adc
fldl
pop
mov
out
ja
jae
ds
push
push
fsubrs
pushf
scas
aam
jecxz
pop
jns
jle
push
nop
adc
scas
into
shl
push
xor
inc
and
cltd
notb
cmp
pmovmskb
xchg
test
jns
rcrl
test
pushf
stos
movsb
jbe,pt
xor
add
or
jmp
rcll
test
ljmp
push
in
ja
xor
push
mov
and
loopne
popa
push
adc
mov
ss
sbb
rorl
mov
sbb
andl
and
mov
outsb
popa
into
scas
ss
rorb
xor
addr16
push
insb
inc
jp
cmp
pop
mov
sub
dec
xor
adc
mov
jns
pusha
leave
test
or
repnz
enter
fwait
sub
adc
test
int3
cmp
mov
dec
fnsetpm(287
shll
xor
inc
lret
in
push
cmc
lret
or
dec
sbb
shll
lds
repnz
or
mov
jg
jmp
dec
add
sbb
mov
shl
aad
xlat
cmp
cmp
pop
xor
xor
and
packsswb
icebp
push
mov
jecxz
mov
pop
push
inc
sub
fs
imul
pusha
daa
mov
je
popf
fdivrl
rcpps
jle
sbbl
lcall
arpl
mov
je
fwait
shl
push
movsb
and
adc
mov
lea
pop
xor
adc
mov
mov
sub
call
inc
lea
popl
mov
in
fwait
jmp
inc
stos
adc
into
cld
mov
push
aas
xchg
inc
and
add
nop
adcl
jmp
in
aad
pop
leave
roll
clc
cmp
rolb
js
imulb
in
repnz
xchg
mov
push
jp
repz
rolb
sub
jge
scas
mov
sbb
xor
lea
mov
xchg
shlb
adc
xor
push
movsl
xor
mov
test
fldcw
sub
and
push
mov
dec
jecxz
int
ret
sbb
dec
pop
inc
fsubs
and
outsb
inc
inc
pop
mov
out
and
popa
mov
sbb
movsl
add
mov
lock
xchg
lods
mov
sarl
adc
loopne
and
add
imul
pushf
icebp
mov
dec
push
repnz
repnz
ja
cld
add
scas
add
cmpsl
or
jnp
sub
testb
pop
cmc
jnp
test
fidivs
imul
imul
mov
add
add
hlt
cld
xchg
mov
push
stos
cli
icebp
mov
into
testl
in
scas
cmp
popf
push
test
adc
inc
cwtl
je
mov
cmp
xlat
ja
add
movsl
xlat
in
lahf
andl
xchg
inc
fsubrp
addr16
ljmp
jno
mov
in
mov
addr16
push
lahf
pop
jbe
push
push
adcl
mov
out
in
jmp
inc
pop
mov
pop
xor
dec
loopne
incl
repnz
fdivrl
inc
mov
sbb
xchg
stos
pop
testl
push
mov
pop
add
popf
shlb
bound
dec
sub
jge
mov
jb
add
jne
jp
lret
out
pushf
sub
mov
ja
fcmovnbe
fst
lret
sub
pop
xor
sbb
fimuls
cmc
mov
test
lods
push
jae
jmp
ljmp
andb
push
cli
pop
and
mov
imul
xchg
adc
cmp
cmp
add
inc
jno
sub
jae
fistps
dec
push
pop
xchg
shl
cld
xlat
sahf
pusha
cmp
mov
or
in
ljmp
test
fstpt
and
lcall
rclb
jb
adc
rcr
mov
push
jmp
imul
nop
jno
shl
cld
mull
ss
pop
dec
mov
push
aam
cld
mov
movsl
mov
jo
mov
outsl
sub
or
mov
fnstcw
jle
cmp
xor
jl
jnp
fs
in
and
and
mov
or
inc
or
ret
inc
push
fldcw
in
clc
xchg
xorl
cwtl
jg
push
loope
mov
inc
and
push
push
and
fisubl
cmc
jecxz
inc
pushf
jmp
and
stos
cltd
sarb
push
inc
push
sbb
mov
imul
cmp
jg
cmp
push
push
mov
dec
stos
out
insl
ljmp
test
test
adc
sti
std
mov
sbb
mov
pop
daa
push
pop
insb
pop
call
push
ret
jmp
orl
imul
jge
mov
test
or
lods
and
stos
out
stc
in
sub
sub
jmp
js
push
and
or
lret
sahf
mov
imul
outsl
cld
or
aas
cltd
sub
movsb
or
dec
push
fs
jmp
dec
aam
insl
cs
repnz
je
push
mov
insb
fistpll
leave
mov
or
mov
inc
mov
lret
inc
pop
jns
push
jmp
dec
call
pop
lret
in
lock
jecxz
data16
mov
int3
fiaddl
mov
mov
xchg
push
pop
sub
data16
inc
pop
inc
jle
cs
aaa
ds
out
mov
mov
mov
out
aam
dec
cwtl
xchg
scas
jb
add
mov
in
outsb
cld
jae
lahf
adc
orb
and
shl
sub
add
and
in
dec
andl
pop
popf
push
std
xor
iret
ss
popa
xor
cmp
push
scas
fwait
inc
pop
loope
cltd
cwtl
cmp
add
lods
icebp
sub
mov
data16
or
imul
insb
leave
inc
ja
into
or
add
xchg
stos
fadds
hlt
mov
cwtl
xchg
cld
cmp
xor
lea
and
sbb
dec
out
mov
mov
hlt
arpl
push
mov
sub
push
in
xor
cltd
xor
insl
iret
xchg
jb
inc
mov
cmc
xlat
pushf
xchg
xor
outsb
aaa
jae
aas
out
push
popa
xchg
sub
sbb
jge
das
pop
sbb
and
jb
cld
out
inc
pop
add
xchg
xchg
testb
mov
xlat
gs
jle
or
inc
lods
fsubl
mov
pop
stos
jge
xor
mov
mov
cmc
out
jbe
sub
adc
push
lfs
xor
outsb
mov
xchg
mov
jbe
jmp
ja
push
loop
es
pop
test
out
stc
dec
movsb
aaa
jg
mov
popa
ss
gs
xor
subl
add
sbb
andb
push
sub
aad
mov
mov
and
sub
xchg
cltd
inc
hlt
fsts
mov
and
out
dec
xor
iret
in
mov
sub
mov
xor
push
jmp
inc
lcall
dec
fisubrl
sbb
jp
xchg
and
icebp
xor
popa
pop
rorb
mov
loop
scas
push
fcoms
mov
pop
sbb
call
xor
mov
fcmove
les
imul
mov
or
lods
push
mov
mov
cmp
dec
or
in
mov
push
ds
mov
cmp
sub
xchg
ljmp
or
decb
add
inc
daa
ds
pop
pushf
push
pop
xchg
adc
and
xchg
jae
scas
xchg
xchg
push
jnp
clc
imul
outsl
cld
mull
repnz
hlt
orl
push
data16
jne
cmp
lahf
nop
hlt
pushl
inc
mov
cmp
mov
pop
cmp
dec
pop
rdpmc
xchg
inc
inc
sahf
stos
sbb
push
mov
mov
sub
add
or
mov
lret
int
sti
mov
movsb
mov
jl
pop
mov
fs
into
ret
sub
inc
ret
xchg
jo
inc
mov
jo
arpl
jmp
mov
data16
inc
inc
pop
adc
cwtl
outsb
mov
pop
xor
xor
add
ja
add
cmp
mov
add
ret
out
mov
test
leave
hlt
out
pop
decb
cmpsb
scas
sahf
cmp
rclb
mov
sahf
xor
cld
or
cmc
in
in
push
cmp
jle
sub
xlat
mov
push
es
fsubrs
imul
icebp
adc
cmp
jbe
cmp
sbb
outsl
mov
add
inc
rclb
push
pop
add
ret
cmp
aas
push
lret
iret
add
iret
adc
sub
outsl
int
jmp
call
enter
in
mov
mov
push
cmp
ss
pusha
mov
fwait
xchg
cmp
mov
push
xchg
outsl
jne
jl
ss
shll
sbb
sahf
repz
ret
or
or
adc
mov
pop
dec
subb
arpl
daa
sub
pop
push
int3
roll
adc
add
mov
push
mov
aad
pusha
dec
push
mov
je
test
popf
mov
push
mov
insl
mov
in
lahf
outsl
scas
int3
jbe
jp
scas
jge
add
push
xlat
lcall
or
add
rorl
inc
push
scas
fldt
jg
and
into
call
dec
popa
xchg
loop
push
xor
je
add
mov
orb
lods
mov
lea
push
jmp
mov
nop
in
dec
cmp
xor
pop
sbb
ljmp
inc
popf
es
mov
jno
jno
sub
cmp
jg
pop
cmpsl
mov
push
jno
nop
test
loopne
and
cmp
jne
inc
shrl
sbb
stc
rorb
addr16
cmp
or
sub
push
rcrb
int
mov
inc
lock
add
xor
cmp
cli
xor
cld
and
xchg
fstpl
mov
xor
and
pop
mov
inc
cmp
inc
jmp
pop
les
jae
popa
mov
stos
cld
xor
das
icebp
arpl
cmp
fsub
xor
scas
xchg
adc
scas
jmp
push
dec
push
shlb
jge
pop
mov
lret
jbe
loopne
mov
inc
imul
test
out
je
pop
push
pop
hlt
out
or
fsubr
inc
add
dec
push
pop
test
sahf
cmp
mov
mov
add
js
lock
jecxz
jnp
and
push
jo
pop
js
bound
test
mov
cmpsl
xchg
mov
addr16
mov
neg
scas
cli
sub
mov
xchg
xchg
out
ret
bound
sub
mov
cwtl
loopne
in
lret
loope
repnz
cwtl
mov
js
mov
xlat
fstpl
or
shrb
mov
leave
cwtl
ja
mov
jg
notb
jp
aad
lea
inc
push
pop
movsl
xchg
push
cltd
mov
mov
jg
xchg
lret
cmpsl
inc
into
popa
test
push
and
inc
insb
mov
mov
cmp
and
es
ret
lock
flds
push
xor
imul
cld
or
subb
mov
movsl
out
push
lods
cltd
sub
jne
sahf
call
inc
or
and
xchg
push
xor
xor
insb
and
or
push
xchg
adc
adc
movsl
pop
push
jp
outsb
jbe
dec
xchg
or
xor
les
cmpsl
outsl
ja
rol
cmp
repz
pop
div
bound
push
dec
orl
xchg
mov
mov
cmp
xchg
ljmp
jae
sahf
aam
xchg
leave
adc
sub
cmpsl
in
pop
and
shll
fstpl
fidivl
and
fadd
out
push
das
imul
or
repz
out
cmp
shl
aas
leave
xchg
or
mov
daa
push
rcrb
push
in
xor
hlt
out
out
push
adc
bound
push
jae
sbbb
daa
cmp
into
adc
roll
adc
data16
mov
xchg
xor
and
sbbb
mov
cli
in
mov
andl
dec
push
cmp
arpl
das
push
mov
and
mov
scas
add
sub
adc
sbb
stos
jg
stos
xor
jnp
loop
lods
movsb
shrl
pop
and
ljmp
jae
pop
pop
out
arpl
xchg
fdivrl
mov
in
pop
adc
and
aaa
pop
sub
xchg
test
mov
insb
push
cmpsl
lods
jecxz
loopne
xchg
pop
les
jge
xor
mov
loop
xlat
int
mov
repz
imul
ror
inc
negl
and
jge
sub
push
pop
lret
or
mov
sbb
loopne
push
sub
mov
pop
add
pop
jmp
cmp
jg
push
pop
cli
lcall
xor
jmp
dec
std
jg
mov
lret
cmpsl
dec
xlat
push
movsb
mov
mov
mov
cli
adc
and
mov
and
fld
insb
push
cltd
js
jl
jmp
daa
or
aad
clc
push
imul
shrl
sub
xchg
in
dec
adc
dec
jp
rolb
cmp
movsl
out
ficoml
sbb
div
jbe
pop
adc
stos
cmp
aam
jbe
jl
das
out
int3
add
pop
daa
pop
or
cmp
pop
dec
cmp
test
and
sub
mov
fdivrp
add
inc
cmp
imul
orb
push
or
cmp
pop
test
jl
inc
or
mov
xchg
sub
add
xor
in
add
mov
push
movsl
out
test
pop
aas
xlat
jecxz
mov
add
xchg
andl
outsl
rorb
dec
adc
test
inc
jo
test
sarb
in
push
ud1
lds
outsb
lret
xor
sub
mov
pop
pop
fbstp
mull
push
shlb
adc
inc
out
add
stos
pop
jge
add
push
lods
xor
sbb
and
movsb
mov
xchg
stc
sbb
std
gs
andl
sub
cmpsb
sub
mov
fdivr
inc
orb
mov
jno
jns
movsl
jne
push
cld
lods
ror
push
movsl
stos
lret
lea
xor
lods
sahf
xor
fbld
daa
orb
scas
out
push
rol
rcrl
jp
lods
inc
add
or
push
addr16
ljmp
cmp
stos
cmp
inc
stos
inc
insl
test
lcall
dec
xor
dec
jg
out
dec
ljmp
mov
inc
lcall
and
mov
xchg
adc
inc
rcrl
pushaw
in
push
cmp
dec
jb
sbb
fcmovne
mov
jmp
test
dec
jge
mov
hlt
insb
mov
and
push
lret
cltd
xor
enter
xor
adc
iret
inc
ljmp
aas
jmp
arpl
dec
cmp
inc
sub
inc
xchg
xchg
aaa
or
sarb
add
cmpsl
inc
cli
sbbl
imul
inc
pop
adc
mov
mov
imul
movsl
xchg
shll
lods
cli
int3
les
xor
sbb
push
add
jae
mov
fdivp
and
jae
cltd
add
sbbb
adc
xor
loop
inc
insl
jb
fiaddl
pop
cmp
ret
les
iret
repz
test
lods
fiaddl
cs
jnp
xor
fimuls
mov
dec
or
lds
mov
daa
aas
lea
cmpsl
and
xchg
loopne
gs
in
jmp
out
aaa
shlb
and
push
dec
pop
fucomi
addr16
mov
jge
test
sbb
or
adc
out
mov
pop
loope
lret
inc
sbb
jge
push
stc
dec
fndisi(8087
push
cmpsb
pop
mov
mov
mov
and
ficompl
mov
loope
lock
outsb
loopne
ja
fdivl
mov
fcmovb
jg
ljmp
cmp
xlat
ja
cld
cmpsl
push
push
jo
dec
fs
sarb
push
mov
lcall
xor
in
mov
in
jns
hlt
movsb
ret
cmp
lods
cmc
sub
mov
test
mov
mov
loope
push
lods
jecxz
movsb
ss
push
call
sub
ret
idiv
push
ss
inc
insb
addr16
test
sub
ficompl
cmpsl
inc
mov
and
adc
add
cltd
lret
fnstcw
mov
repz
loope
pop
sbb
xchg
mull
shll
jo
sbb
rcrb
xchg
lds
repz
out
xchg
sub
mov
pop
cmpl
fcomps
movsb
sbbl
push
sub
or
adc
mov
jo
add
repz
xchg
cmpsb
les
jmp
int
dec
push
ret
test
add
pop
mov
mov
dec
and
mov
mov
mov
xchg
cs
cli
dec
pop
mov
xchg
adc
aad
arpl
aas
fdiv
push
push
sar
dec
mov
loope
add
data16
insl
dec
leave
jae
icebp
mov
mov
xchg
pop
out
pop
ret
xorl
cwtl
cs
adc
inc
cmp
jg
clc
push
fsubrl
jae
into
push
or
pop
mov
jg
shrl
push
and
lds
test
mov
xchg
add
fcomp
cld
aaa
adc
pop
add
push
sbb
pop
insl
sub
aad
dec
inc
cwtl
std
push
clc
cltd
lahf
or
shrb
sbb
cwtl
xor
jg
xor
adc
pop
dec
fsubs
popf
push
sbb
push
popa
aas
and
xor
push
mov
push
fimuls
mov
inc
inc
jns
xchg
jae
dec
adc
adc
icebp
mov
jbe
mov
inc
je
lds
jge
loop
leave
ja
dec
cwtl
jecxz
pop
out
lea
mov
mov
fsubs
in
adc
hlt
jp
ljmp
movsl
and
pop
mov
mov
daa
fiadds
fsts
cmp
fdivr
mov
dec
cwtl
popf
addr16
xor
sub
test
aad
xchg
dec
xor
mov
shlb
out
insb
inc
sub
jg
out
lods
lods
lods
cld
sub
lods
jp
jne
xchg
push
and
push
adc
sarb
popa
outsb
pop
repz
mov
sbb
push
inc
mov
in
das
inc
imul
fsubrs
or
cltd
insb
xor
xor
neg
fwait
mov
movsb
cmpsl
out
shll
ja
mov
fimuls
dec
adc
in
stc
jg
nop
sbb
sub
push
je
lea
jl
jbe
pusha
add
jo
enter
xor
aam
lret
movsl
mov
mov
mov
xchg
in
jae
mov
mov
fsubrl
mov
add
push
xchg
in
cli
pop
xor
lcall
fnstsw
movsl
dec
lods
push
adc
arpl
insb
rcrb
mov
push
sti
xchg
pop
sub
mov
int3
pop
and
hlt
cmp
and
inc
pop
mov
imul
lahf
insb
gs
cs
jecxz
push
lahf
hlt
ret
bound
aam
in
push
je
xchg
movsb
xor
mov
sub
pusha
sub
repnz
aad
sti
sub
jge
gs
stos
jae
sarl
stc
leave
xor
rorl
stos
sar
fnstcw
mov
mov
in
jle
gs
xchg
data16
andb
fidivl
or
and
sbb
dec
pop
push
fcompl
mov
adc
and
dec
sarl
cli
push
xor
shrl
loopne
rolb
add
adc
iret
push
lret
mov
add
stgi
mov
add
pop
add
pop
lock
push
mov
movsl
add
mov
and
xor
mov
add
rol
xchg
sbb
sub
call
adc
xlat
and
gs
add
push
or
test
jmp
outsb
js
fdivp
add
fcmovnbe
mov
ret
dec
push
mov
rcrl
and
jns
enter
imul
lret
xchg
jb
inc
cs
inc
inc
sbb
es
not
jp
idivl
test
add
jmp
or
jnp
dec
mov
xchg
mov
sbb
cmp
push
sub
mov
repz
mov
popf
repz
in
and
add
andb
push
lret
dec
jge
shll
cmpsl
fcoms
mov
leave
jge
sbb
je
mov
pop
add
inc
dec
xchg
and
and
scas
xor
jbe
mov
mov
xchg
push
adc
les
dec
push
push
sbb
out
sub
ljmp
push
mov
jo
sbb
ljmp
lcall
mov
jnp
or
leave
in
shll
sbb
mov
push
sbb
mov
pusha
sub
xor
outsb
pop
out
jmp
mov
dec
adc
and
xchg
js
ljmp
lcall
pop
xor
xchg
add
and
xor
xlat
mov
fld
jnp
jle
in
in
adc
mov
es
fsubs
iret
jp
cmp
lret
lea
psubusb
mov
pop
or
jmp
add
mov
imul
or
push
sbb
pop
ljmp
lods
icebp
xor
cmp
lret
testl
or
int
and
add
push
push
pop
push
mov
push
rcll
xor
sub
push
adc
cmp
stos
cmp
lock
mov
lea
mov
not
mov
sbb
mov
jne
cwtl
shl
sbb
xor
pop
imul
iret
cmpsl
icebp
rorb
das
mov
mov
mov
aas
lea
inc
mov
sub
xchg
mov
dec
lret
loopne
jnp
test
outsl
cmpl
lds
xor
sbbl
flds
lret
dec
aam
mov
test
mov
xchg
adc
dec
pop
sahf
int3
mov
and
fsubs
xchg
mov
jnp
cmp
arpl
lahf
mov
push
add
dec
aaa
dec
shl
or
mov
out
leave
imul
sub
xchg
push
xchg
xchg
cwtl
push
es
test
xchg
and
mov
adc
sub
icebp
cmp
subb
cwtl
lret
shlb
mov
push
sbb
and
mov
aam
push
xorl
mov
cltd
outsb
inc
pop
aam
mov
fiaddl
rclb
mov
cmp
fistpl
cmp
shll
call
lods
lcall
insl
cwtl
jp
fmull
insb
cs
sbb
mov
sub
xchg
shlb
cmp
pop
ficompl
push
adc
inc
dec
test
pusha
fistpl
mov
nop
test
and
in
jmp
jo
xchg
dec
cwtl
add
dec
inc
inc
mov
xchg
sbb
insb
mov
xchg
into
cmp
repz
out
popf
mov
test
mov
sub
pop
add
shrl
xchg
push
das
outsb
xchg
jl
in
mov
jle
shlb
jmp
in
jno
jge
adc
and
xchg
sti
xor
mov
shlb
sbb
cmpsl
xor
or
lds
and
pop
sbb
jb
sub
jo
test
aam
shrb
pop
or
sub
lock
mov
rcll
and
sbb
jo
lret
fcompl
sarl
pop
dec
push
and
cwtl
push
mov
adc
imul
xor
enter
push
mov
out
xchg
adc
addr16
sub
iret
in
xor
adc
ret
rol
xor
scas
mov
enter
xor
fs
cmc
out
push
sbb
xchg
pushf
int
shll
and
dec
cmc
or
call
mov
sbb
and
adc
fucomi
cmp
xchg
dec
ljmp
sarl
pusha
js
pushf
je
repz
pop
sub
clc
pop
cld
mov
ja
cltd
xchg
outsl
inc
lret
pop
xor
insb
cmp
add
pop
fs
and
jns
sub
mov
pusha
cmp
or
adcl
outsb
mov
mov
and
into
loope
cmc
or
adc
cmp
or
sub
rcl
jle
xchg
mov
mov
dec
mov
cmp
das
fbld
jno
mov
jle
adc
lahf
iret
jne
rcl
inc
dec
notb
fidivs
push
mov
fdiv
scas
xchg
test
cmc
dec
rcl
dec
dec
xchg
mov
mov
lcall
jmp
xchg
ja
xor
push
jmp
inc
lds
push
lds
sbb
jbe
out
mov
outsb
push
push
mov
xor
bound
push
sbb
xchg
int3
inc
call
inc
push
dec
inc
or
and
xchg
popa
cmp
mov
int3
xchg
stos
out
sti
cmp
pop
testb
cmp
repz
cltd
sahf
dec
icebp
rcrl
test
xchg
and
out
movsl
mov
push
or
pop
dec
cmc
mov
roll
shll
out
push
xchg
mov
sahf
ss
pop
add
jecxz
ficomps
cmpsl
fistpll
mov
in
add
mov
addr16
xchg
aas
push
jo
mov
dec
pop
cmp
or
xchg
mov
in
jae
adc
mov
xorl
inc
mov
mov
jg
push
loope
sbb
addl
into
cwtl
push
in
inc
xchg
inc
cmp
add
imul
aaa
mov
add
add
sub
push
inc
fldl
icebp
mov
push
sbb
mov
xchg
stos
cmp
outsb
sbb
in
pop
xor
push
call
cmp
loopne
adcl
pop
std
cmpb
sub
mov
push
fisubrl
repz
pushf
aaa
lods
pop
or
xchg
add
idivb
frstor
adc
jle
cmpsl
sbb
lret
adc
inc
repnz
dec
icebp
mov
repnz
in
mov
test
outsl
lea
mov
imul
es
scas
push
adc
xor
clc
and
sbb
jo
call
ror
scas
sub
push
or
gs
mov
addr16
xor
mov
mov
pop
fldt
add
mov
sub
mov
inc
cmpsb
movsb
add
push
jo
cs
test
inc
iret
mov
adc
repnz
adcb
pop
pop
fidivl
or
imul
mov
jnp
imull
popf
mov
dec
adc
jno
push
pop
xchg
jb
add
jle
cmp
xchg
dec
inc
jnp
mov
xchg
jge
cltd
js
or
mov
pushaw
mov
lret
outsb
push
mov
jle
cs
jbe
dec
punpckhdq
push
lea
rclb
add
arpl
adc
mov
add
xchg
inc
fs
cld
out
jbe
cmpl
dec
out
int3
outsb
jae
push
cmp
ss
jle
dec
daa
mov
xor
test
pop
jmp
mov
mov
outsl
inc
xchg
stc
inc
jo
jbe
sbb
mov
sbb
jg
cmc
mov
fs
jb
jmp
sbb
test
repnz
ja
test
inc
mull
and
xor
mulb
pop
cmpsb
mov
enter
aaa
xchg
and
fwait
and
lock
sahf
cli
add
aas
lcall
mov
out
movsb
mov
mov
outsb
and
push
dec
orb
loope
popf
mov
daa
jo
xor
ljmp
out
pop
shrb
popf
outsb
jg,pt
push
test
dec
imul
cmpsl
sub
mov
fisttps
dec
clc
aas
lods
lret
xor
addr16
test
test
sub
cli
sbb
and
push
mov
inc
mov
pop
leave
inc
mov
xorl
call
test
in
fcompl
cwtl
aaa
call
mov
mov
jo
jp
or
mov
xchg
js
mov
ja
fdivr
fildll
scas
xchg
stos
inc
hlt
dec
int3
jne
int
push
jle
fs
sub
cmpl
jmp
push
fdivr
jb
shl
lret
scas
enter
inc
add
xchg
nop
shll
sbb
aaa
subb
rol
sti
and
mov
xchg
loopne
jae
pop
ds
pop
cltd
notb
inc
add
nop
mov
mov
pop
lds
mov
pop
mov
jb
push
int3
test
mov
aaa
sub
imul
cltd
push
push
sub
leave
push
jmp
inc
push
icebp
repz
adc
lahf
sub
xor
fdivs
jbe
insl
mov
xor
cmc
fistps
add
mov
rorl
pop
dec
mov
or
sub
cmp
mov
pop
outsb
sub
cmp
sbb
push
sub
sbb
jg
jmp
fiadds
jo
xor
pop
lahf
lock
into
bnd
mov
and
popa
xchg
int
adc
jnp
push
hlt
sub
add
insl
sbb
mov
out
leave
lahf
outsb
add
hlt
cli
sbb
xchg
ret
pop
aam
dec
test
iret
push
dec
cmpsl
xchg
add
popa
adc
lret
enter
mov
lock
sub
fsubrl
pop
out
fists
and
mov
dec
cli
lods
sbb
xor
sbb
mov
nop
push
xchg
mov
test
rorl
incb
icebp
aam
adc
xor
stos
pop
call
out
or
shrw
leave
mov
pop
add
les
not
pusha
stos
jae
pushf
cmpsl
das
inc
shlb
push
cmp
in
cltd
js
aad
test
push
clc
add
cmpsb
mov
pop
incb
hlt
pop
mov
into
clc
in
or
xchg
sub
push
xchg
mov
sub
and
inc
inc
enter
imul
call
lret
and
in
loop
lods
dec
mov
andb
or
push
mov
ss
pop
sbb
enter
xchg
cmp
push
fstpl
rolb
pop
mov
fwait
repnz
pop
test
push
mov
xlat
cmp
enter
aad
xchg
ret
lret
mov
lret
pushf
pusha
dec
jbe
dec
sbb
jp
popf
sbb
in
add
xchg
sbb
adc
mov
xor
scas
stos
out
xor
sbb
inc
clc
out
sub
mov
stos
not
bound
jmp
fwait
pop
pop
fistpll
dec
into
adc
loop
aaa
scas
test
pop
or
aaa
adc
loopne
jne
aaa
movups
leave
adc
xlat
fwait
pop
jne
jmp
cmp
popa
divl
push
fstl
xor
sbb
cltd
add
repz
in
cmp
jge
jne
and
xchg
cli
idiv
lds
jle
repnz
mov
in
out
mov
stos
gs
jo
imul
mov
lock
les
or
aaa
test
push
std
in
xchg
xor
out
lods
outsb
cmpsb
inc
push
icebp
pop
out
or
mov
mov
daa
push
jae
fdivp
rcr
scas
jmp
jg
dec
cmp
jle
inc
divl
dec
stc
shl
popa
jmp
add
add
dec
xchg
and
addr16
sti
and
sarl
out
setno
call
lcall
xchg
mov
pop
inc
test
jle
jnp
mov
cmp
out
loope
incb
test
fildll
loopne
jno
in
xorb
push
or
adc
xchg
lods
shlb
lcall
and
mov
iret
inc
pop
js
les
sbb
cltd
js
cmp
pop
aam
call
insb
mov
loopne
inc
pusha
push
lcall
mov
jne
loop
or
aam
jbe
lea
and
mov
aad
push
iret
pop
dec
or
inc
cmp
xor
arpl
xor
sub
pop
loop
fwait
push
fabs
out
aas
stos
aaa
push
hlt
ljmp
cmpsl
fcoml
mov
loopne
push
loop
cli
je
mov
mov
jmp
mov
out
ss
fsub
xlat
inc
mov
cltd
push
cmp
cmp
lock
jns
mov
popa
repz
in
sbb
dec
in
mov
pushf
sahf
je
int
gs
mov
sbb
mov
insl
mov
iret
cli
pop
mov
filds
mov
push
or
jno
les
iret
outsl
aaa
clc
mov
cmpsl
sub
roll
out
lock
and
inc
and
in
pop
mov
inc
scas
fildl
ljmp
jae
add
xor
aaa
jecxz
push
add
mov
divb
int3
mov
xchg
clc
xchg
repz
push
scas
lock
mov
mov
xchg
ja
mov
inc
je
sbb
fwait
call
push
sbbb
shll
xchg
ljmp
std
adc
jo
bound
call
xor
gs
inc
test
add
outsb
jecxz
movsb
mov
mov
cmc
clc
insl
fsubr
stos
add
dec
lahf
and
daa
or
loopne
mov
push
ljmp
lret
jle
lahf
ljmp
stos
push
shrb
or
adcl
and
lods
lretw
or
xchg
fs
jg
sbb
ss
jp
or
or
mov
xchg
dec
pop
jp
and
ffree
mov
xlat
movsl
mov
rorl
loope
jg
dec
ja
push
or
mov
adcb
mov
or
dec
push
aaa
test
fwait
js
cmp
or
out
pop
sbb
faddl
jns
aaa
ret
push
jne
jge
int3
add
sbb
jge
xchg
sub
mov
outsl
faddl
inc
ror
mov
lahf
rep
lds
cltd
push
push
push
divl
addr16
repz
sbb
outsb
sub
adc
cmpsl
and
cmp
push
sub
sub
cmpsl
int3
fcmovnu
mov
ja
sub
aad
or
mov
pop
xchg
dec
add
mov
insb
ljmp
out
mov
pop
jns
insb
ret
sub
adc
pop
xchg
nop
clc
scas
test
jb
mov
leave
loop
pop
jnp
dec
test
cvtps2pd
inc
orb
enter
adc
adc
in
out
mov
push
ja
call
sbb
cld
loop
and
rclb
testb
pop
les
fmul
aas
ret
and
pushf
push
adc
mov
mov
fistl
mov
and
icebp
repnz
cmp
popf
mov
push
push
xor
cmpsl
push
lods
pusha
sbbl
mov
pop
in
dec
or
pop
aaa
pop
jl
dec
lret
int3
faddl
sarl
sbb
out
hlt
or
push
jge
mov
in
sbb
xor
test
and
mov
jge
sbb
mov
out
push
addl
stc
out
outsl
inc
in
ss
sbb
jle
jmp
ds
das
xor
pop
in
cmpsb
pop
outsl
int
add
dec
sahf
pop
dec
xchg
out
call
test
push
xchg
orl
mov
fwait
sub
xchg
lock
mov
pusha
cmp
sub
jnp
imul
inc
mov
scas
clc
clc
mov
fdiv
js
rol
lret
arpl
mov
inc
cltd
xchg
push
mov
dec
push
mov
popa
mov
xor
dec
lods
in
out
test
arpl
add
in
dec
xor
mov
jno
sbb
icebp
xchg
xchg
inc
ljmp
sub
and
cmp
movlps
or
inc
in
sbb
leave
testb
in
insb
aam
std
les
sti
pop
mov
jo
sahf
push
stos
cmp
xchg
bound
xchg
xchg
sahf
xor
jb
pop
outsl
bswap
int3
leave
push
xchg
insl
enter
mov
stc
hlt
push
inc
pop
fstps
xor
mov
test
adcl
pop
lds
incb
dec
lret
neg
adc
push
mov
insb
add
leave
pop
rorb
pop
in
adc
sub
mov
rcr
sub
into
jno
add
jo
call
add
ds
xchg
mov
cmp
ljmp
adc
mov
mov
scas
xchg
push
sbb
sub
int
clc
popf
xchg
and
push
ljmp
xchg
sarb
fists
push
or
jbe
dec
cmpsl
mov
adc
jnp
cmp
adc
xchg
push
insl
lock
jmp
fstl
inc
xchg
mov
gs
fcmovb
and
cs
aas
cmpsb
int3
test
loopne
adc
lea
imul
mov
adc
sbb
gs
in
std
and
mov
out
rcl
xchg
jb
clc
fwait
adc
or
xchg
pushf
je
sbb
cmc
add
std
mov
cli
mov
jnp
mov
xor
lock
gs
addr16
jmp
fwait
pushf
int3
mov
sbb
sarl
lods
insb
mov
std
sub
movsb
xor
sbb
xor
fsubrp
loope
aad
xchg
pop
aaa
inc
gs
rcrb
mov
dec
dec
jl
in
jg
and
test
cmp
cmp
add
sbb
mov
je
test
mov
add
and
aad
xchg
std
cmp
dec
inc
adc
mov
cmp
bound
roll
ret
mov
or
jmp
or
insb
add
mov
lcall
lds
mov
mov
inc
sub
lret
rcl
mov
orb
push
xor
ja
mov
pop
push
fcompl
add
xchg
or
xchg
dec
xchg
cmp
and
in
insl
push
leave
aam
ret
lea
imul
fadds
ret
outsb
adc
orb
dec
fstl
mov
bound
cmp
loopne
add
cmp
fs
cli
test
jno
xchg
mov
xor
and
jle
add
lret
add
pop
adc
dec
pop
mov
mov
mov
int
pop
cmp
js
mov
cmpsl
fsub
nop
ja
sub
lret
cld
add
scas
mov
lret
push
popf
stos
xchg
pusha
call
cmpl
cmp
jne
jns
ret
sbb
mov
outsl
mov
fsubs
loopne
add
pop
repnz
in
mov
icebp
pop
sub
aaa
or
and
shrb
pop
mov
movsl
jl
push
adc
xchg
loope
xor
fbstp
jb
fdivrp
jnp
mov
popa
fisttps
add
add
push
push
lods
dec
addr16
jae
std
lods
dec
rcrb
icebp
pop
mull
fimull
inc
push
cli
ficomps
xor
cmp
and
int
lret
mov
inc
push
adc
pop
stc
mulb
xchg
xchg
popf
mov
cmc
pop
je
call
leave
cli
int3
xor
iret
push
xchg
pop
jnp
pushf
out
jecxz
xchg
push
pushw
mov
gs
sbb
pop
shlb
hlt
fnstsw
jnp
adc
push
inc
jb
lret
xor
mov
sub
pop
out
or
mov
pop
xor
arpl
pusha
dec
rorl
xchg
pop
sbb
pusha
mov
ss
push
cmpsb
fisttpll
dec
pop
loopne
jb
stos
cld
ljmp
add
add
pop
mov
mov
lret
mov
push
fwait
jge
jl
bswap
pop
mov
fstl
fldt
add
inc
adc
or
xchg
dec
mov
mov
cmpl
push
mov
mov
aaa
cmp
xchg
inc
movsb
leave
or
add
pop
ud0
clc
cmpsl
out
outsb
fwait
loope
out
or
mov
cmp
cmp
or
sbb
and
pop
hlt
ds
sub
push
roll
inc
lods
negb
std
sbb
dec
dec
sbb
xchg
dec
push
push
push
push
xor
mov
xchg
pop
jae
add
int3
mov
imul
imul
mov
xor
sub
cmpb
sbb
xor
jbe,pn
enter
and
mov
mov
jne
mov
cmpsl
sub
push
mov
or
ljmp
into
in
mov
loop
jae
dec
or
shrb
ja
inc
std
xor
add
xchg
ds
rcrb
push
call
add
mull
mov
ret
lahf
jae
and
sbb
outsb
mov
xorl
push
mov
mov
shlb
insl
jg
xor
repnz
add
inc
lcall
sti
pminub
icebp
or
sbb
xor
ds
mov
sbb
pop
dec
inc
inc
test
mov
xorb
cltd
xchg
out
inc
into
sbb
pop
scas
imul
add
movsb
adc
mov
cwtl
mov
mov
pop
sbb
and
ud2
aam
je
mov
jnp
les
xchg
mov
lds
or
sarl
dec
add
rcrb
mov
cwtl
mov
jns
imul
in
xor
pop
push
xlat
aam
sahf
dec
scas
sub
sub
mov
push
mov
cmp
sub
push
dec
jne
inc
leave
xor
punpckhbw
movsl
rol
addr16
dec
adc
dec
sbb
add
push
loope
mov
jmp
gs
mov
cld
add
sub
lds
in
les
add
add
cmp
push
and
push
lock
into
fcmove
in
out
push
push
stos
mov
or
pushf
jmp
repz
lods
pushl
push
and
adc
fsubrs
jno
push
xor
lds
nop
and
inc
sub
push
fcmovnbe
xchg
and
fdivrs
shl
stos
test
dec
imul
mov
pop
pop
cmovg
push
pop
out
push
xor
or
movsb
add
ficompl
xlat
mov
cli
dec
xor
fwait
cli
adc
dec
in
or
mov
sub
rclb
mov
adc
frstor
outsl
lods
aam
es
js
fildll
insl
addb
loopne
loop
dec
mov
ds
adcb
fs
jns
sub
rorl
push
sub
pop
scas
mov
add
adc
jg
pop
je
aas
pop
nop
sbb
iret
test
pop
sbb
imul
enter
jnp
xchg
and
mov
jmp
xor
sub
out
aaa
and
ja
ret
push
add
ljmp
movsl
ljmp
insb
ljmp
inc
adc
mov
dec
jg
mov
pop
cwtl
pusha
mov
sbb
bound
out
call
fimull
xchg
punpckhdq
outsl
jo
jp
shlb
data16
push
bound
sti
jae
leave
mov
std
data16
mov
mov
ret
sbb
push
movsl
in
inc
jl
test
inc
sbb
sbb
shrl
adc
jg
ret
xchg
pop
shll
dec
and
jl
inc
mov
push
shl
and
add
lods
mov
pop
adc
push
and
lods
fucomi
imulb
push
sbb
sbb
xor
fsubl
dec
cmpsb
sub
push
sbb
out
pop
mov
int
pop
or
movsb
adc
popf
bound
hlt
insb
push
pop
lret
fldt
dec
rcr
imul
ja
shlb
xchg
xchg
idivl
push
xchg
add
mov
push
cmp
pusha
inc
add
xchg
mov
ljmp
inc
test
jg
adc
xor
push
rcrb
les
jg,pn
jb
xchg
sahf
dec
jmp
mov
mov
test
sahf
inc
jo
call
pushf
sbb
movsb
inc
xchg
mov
jle
fcoml
roll
push
cmp
ds
xchg
lods
repnz
mov
iret
aam
jne
out
jno
je
mov
mov
xchg
je
inc
lret
repz
fs
shrb
cli
xor
stos
sbb
push
lods
mov
aam
push
fcmovnu
les
mov
out
xchg
sbb
push
inc
icebp
mov
in
test
lret
roll
adc
add
test
jmp
loop
jnp
testl
sub
ja
lret
rolb
cmp
lret
or
dec
mov
dec
nop
imul
dec
add
mov
sahf
push
int
shrb
sub
sub
push
mov
loopne
gs
xchg
cwtl
mov
adc
xchg
in
lds
and
xchg
mov
fs
adc
sbb
insb
jae
jb
add
pop
pop
push
jae
pop
jle
mov
mov
mov
sahf
sbb
push
fnstenv
inc
sbb
mov
out
mov
mov
or
arpl
push
ljmp
aam
insb
push
ja
adc
jg
cltd
lods
xchg
inc
mov
dec
pop
movsb
in
push
dec
test
adc
mov
and
stos
push
inc
sahf
aam
pusha
mov
aaa
fs
mov
lahf
mov
bound
lcall
mov
mov
dec
jns
pop
movsl
and
and
sahf
icebp
push
pop
mov
inc
adc
mov
pop
cmp
rcrb
sub
stos
jne
ja
jecxz
mov
xchg
pushf
cld
mov
pop
push
psrlw
and
inc
aam
in
movsb
mov
sub
adc
lcall
mov
aam
push
sahf
repnz
rcrb
jb
add
mov
mov
dec
mov
ficoms
divb
push
test
aad
jbe
outsb
adc
push
adc
ss
dec
mov
nopl
cmpb
jmp
mov
push
aad
daa
imulb
jns
nop
cs
mov
cs
mov
mov
testl
push
ret
mov
and
xchg
iret
repz
push
mov
jne
xchg
mov
rcrl
push
stos
jo
mov
leave
adc
std
mov
sub
mov
jns
jbe
daa
adc
scas
insb
int
out
add
cmp
andb
sub
popf
fiaddl
xor
outsb
rcll
ja
inc
push
or
pusha
xor
leave
in
mov
cmp
inc
inc
fdivp
nop
adc
in
xorb
xchg
push
push
cmp
xor
in
sti
add
pop
ljmp
nop
out
lea
dec
scas
mov
popa
inc
js
adc
es
fs
jo
dec
xchg
sbb
or
jmp
in
jb
bswap
cmpsb
into
dec
addr16
inc
icebp
sbb
add
je
inc
rcrb
loope
jns
mov
xchg
test
scas
icebp
or
add
fsub
or
loope
mov
in
sets
xchg
xchg
cmp
push
hlt
in
inc
imul
mov
lods
movb
jae
fucomip
dec
mov
jl
adc
aaa
inc
imul
and
pop
fsts
or
sbb
push
or
mov
in
dec
movsb
jbe
es
mov
test
mov
addl
sbb
adc
enter
pop
ret
mov
jmp
cmp
mov
stc
aaa
xlat
faddp
loopne
cld
lods
mov
hlt
inc
mov
mov
ds
adc
fs
xchg
mov
addr16
out
scas
or
mov
arpl
xor
orl
into
push
in
daa
xor
mov
repnz
out
pop
fstpt
loop
jle
or
inc
call
popa
mov
enter
xorb
lods
adc
out
adc
dec
and
push
into
pop
into
testl
mov
mov
mov
dec
cmp
sbb
je
gs
or
or
jno
mov
cmp
xchg
in
repz
adc
je
pop
test
je
pop
and
inc
push
cmpsb
mov
in
insl
iret
outsl
invd
clc
insb
dec
pop
push
mov
std
js
in
into
stos
sti
sub
xor
sub
out
aam
addr16
jae
in
out
repnz
movsb
pop
mov
fcoml
inc
sbb
inc
lret
je
insb
fiadds
fdivs
frstor
std
mov
push
outsb
fisttpll
fmuls
out
cmp
mov
xchg
popa
push
call
and
push
mov
or
push
imul
insb
ds
jno
shll
sbb
cmp
push
aaa
repnz
fimull
and
jle
addl
pushf
cwtl
test
jg
lock
jmp
xchg
sub
inc
filds
mov
and
insb
pusha
daa
divb
loop
mov
sub
movsb
outsl
insl
or
xor
or
jnp
addr16
fstps
jno
in
sbb
dec
imul
jg
imul
xchg
xchg
pop
leave
sub
gs
sbb
imul
add
lcall
cmc
imul
addr16
jmp
fcoms
mov
leave
lcall
bound
jns
push
xchg
xchg
mov
adc
adc
sbb
pop
subb
aad
sub
and
icebp
pop
lret
rcll
out
pop
ss
mov
test
push
cmc
fimuls
outsb
xor
sti
mov
je
ret
mov
mov
popa
push
xchg
mov
sbb
repnz
sbb
sahf
dec
in
int
repnz
hlt
jmp
cmpsb
push
jl
hlt
sub
xor
add
movsb
add
repnz
fadd
sub
pop
and
sub
pop
outsl
sbb
xlat
and
or
push
fdivl
rorb
mov
setle
push
movsl
iret
stos
sbb
js
fs
movsl
movsb
aaa
ss
inc
or
mov
out
popa
dec
movsl
xchg
sbb
cmp
pop
xchg
cmpsl
add
clc
hlt
mov
lods
push
aam
mov
mov
jbe
sti
xchg
pop
cmp
shlb
jae
inc
aas
mov
mov
shl
jmp
push
pop
mov
pop
mov
pop
call
sub
outsl
xor
push
dec
xchg
push
pop
pop
daa
es
sbb
les
fldl
dec
mov
pop
iret
sub
lcall
jmp
mov
movsl
adc
push
out
jmp
add
cs
or
fcom
mov
mov
arpl
push
xchg
decl
jb
cmpsl
mov
out
or
divb
push
int3
mov
outsl
add
jmp
cmp
or
pop
lret
dec
sbb
icebp
mov
xchg
test
cltd
jge
xor
cmp
fdivl
sbb
pushf
lods
adc
mov
and
pop
lea
mov
das
mov
les
add
add
lods
dec
hlt
std
sub
fsts
mov
xor
or
test
or
movsl
push
and
std
clc
test
add
push
cmp
ret
add
xor
dec
xchg
and
sub
int3
rcl
gs
or
mov
xchg
insb
jmp
adc
int3
es
pop
movsb
jge
sahf
in
push
sbb
cmp
cmp
cmp
add
add
push
push
dec
sub
adc
call
scas
xchg
jecxz
insb
pop
orb
sbb
repz
jmp
push
gs
adc
jne
mov
arpl
clc
pop
mov
jmp
lret
adc
lcall
call
cmpsl
xor
int
push
sub
loope
xchg
inc
mov
pop
std
sbb
pusha
arpl
outsl
mov
pop
lea
cwtl
jl
jbe
mov
xchg
sbb
jle
mov
mov
nop
pop
mov
fwait
adc
sbb
aad
xchg
mov
adc
hlt
and
mov
jne
mov
test
loop
in
mov
jge
sbb
mov
push
lods
xor
aaa
in
daa
gs
add
stc
add
mov
ret
xchg
xchg
xchg
arpl
and
dec
call
and
adc
cmp
mov
or
and
dec
aas
sub
arpl
mov
push
mov
dec
arpl
mov
cmp
clc
sbb
inc
fmulp
adc
call
sub
push
gs
adc
adc
sub
xchg
mov
mov
ss
xor
xor
jmp
pushf
ficoml
inc
cmpsb
inc
packuswb
loop
outsb
imul
and
fstps
stos
xchg
dec
xchg
xlat
clc
lret
cli
jae
das
mov
or
outsl
inc
push
mov
mov
push
loope
push
int3
sub
xchg
jns
lods
inc
pusha
jo
dec
mov
call
mov
adc
std
mov
add
cmp
mov
adc
lods
push
addr16
pop
pusha
sub
jne
test
mov
into
and
push
dec
xor
stos
push
popa
mov
dec
ja
sub
cwtl
push
lea
roll
roll
int3
sub
imul
subl
dec
sub
lock
out
lods
and
es
loop
out
cld
mov
mov
xor
mov
xchg
sarl
dec
xchg
mov
cmp
sub
jae
outsb
push
dec
xchg
cmpsb
ljmp
push
mov
dec
add
jl
mov
loope
ss
out
cwtl
mov
mov
js
inc
mov
test
adc
adc
scas
roll
pop
fisubs
push
mov
mov
mov
imul
cmp
sbb
inc
jp
addr16
or
jp
mov
rolb
inc
xchg
icebp
sub
and
dec
bnd
inc
xchg
mov
xor
insb
jmp
mov
insb
mov
sarb
loope
dec
test
mov
dec
jg
pop
int
dec
in
or
or
jmp
incb
cli
fldl
jnp
pop
jl
or
ljmp
mov
test
in
mov
cmp
xchg
jmp
lods
icebp
rorb
or
flds
ja
adc
or
jl
inc
loopne
mov
sub
pop
mov
lock
arpl
sub
sbb
repz
arpl
sbb
inc
cwtl
movsb
jns
pusha
mov
clc
aas
fs
sbb
or
ja
or
lea
pop
dec
mov
sub
or
xchg
rcl
mov
add
inc
int3
adc
xchg
imul
outsb
fadds
mov
ror
dec
cmp
mov
loop
mov
lods
inc
mov
push
inc
loope
pop
mov
pop
adc
insb
and
xchg
cmp
lret
lahf
inc
and
mov
js
out
adc
pop
pushl
lds
ret
dec
jns
mov
pop
es
add
out
sbb
mov
mov
jecxz
test
jmp
push
mov
xchg
pushf
dec
mov
add
mov
pop
inc
xchg
and
fld
mov
push
mov
aas
aad
mov
ret
xor
push
push
inc
mov
sbb
lock
ljmp
nop
add
adc
xlat
mov
jecxz
pusha
bound
xor
cmpb
sub
stos
or
call
outsb
adcl
subl
pop
lret
xchg
icebp
mov
mov
dec
stos
clc
pushf
sub
mov
jne
cmpsl
sub
jbe
leave
xor
imul
mov
rcr
and
dec
jle
hlt
aam
ret
mov
push
add
pop
xorl
adc
rorb
movsb
les
cmpsl
aaa
mov
loop
fnstcw
in
xlat
mov
cmpsl
mov
daa
sub
mov
mov
mov
dec
cwtl
dec
pop
sub
popa
push
daa
add
popf
xchg
aam
movsb
loopne
jnp
sub
xor
ror
popf
addr16
dec
mov
fisttps
inc
sub
stos
ja
lahf
test
movsl
sub
popa
nop
jbe
dec
sub
cmp
push
sti
dec
dec
sub
jb
fcmovnb
xchg
xchg
sbb
movsb
push
sbb
xchg
es
addr16
sub
rcll
add
lock
xor
mov
jb
dec
not
iret
pop
xchg
pop
popf
push
and
pop
sbb
mov
push
scas
pop
mov
add
fsubrl
loopne
mov
aam
scas
in
jge
shlb
fsts
mov
icebp
and
into
add
out
add
stc
mov
insb
in
and
dec
test
mov
cmp
pop
push
leave
inc
or
out
in
push
mov
sbb
hlt
les
lods
xchg
stc
add
das
inc
and
or
shlb
dec
pusha
in
sti
divb
lcall
jb
iret
aas
roll
jge
lahf
mov
add
xor
fldt
outsl
mov
aaa
xchg
lcall
loop
cld
inc
xor
xchg
and
xor
mov
dec
dec
mov
hlt
mov
inc
jmp
jne
in
test
ret
sub
or
out
xor
in
push
inc
pop
in
fcoml
loope
xchg
mov
fimull
push
add
dec
inc
dec
test
and
inc
scas
jmp
push
and
and
jecxz
jmp
jge
leave
mov
cmp
das
dec
ja
imul
cltd
dec
int
hlt
sbb
cmp
int
popa
bound
push
mov
es
sbb
adc
insb
js
jb
xor
mov
jno
jle
std
add
idiv
fwait
add
sbb
movb
ret
fmuls
cmp
sbb
dec
out
mov
sti
nop
xor
push
cmc
push
push
sahf
xor
scas
sahf
cmc
popf
jge
adc
dec
mov
in
bound
sidtl
ljmp
mov
fwait
ret
shrl
xor
ds
sub
das
jge
add
shll
lret
cmp
repnz
fwait
in
cs
fimull
jmp
dec
sbb
pushf
fwait
xlat
mov
cli
sub
loope
test
push
int3
insb
adc
jns
or
lods
and
sbb
mov
movl
jno
ss
decb
std
testb
in
jns
cmc
pop
xlat
out
mov
movsl
fs
sbb
mov
xchg
xor
rcll
pusha
jle
dec
and
mov
fadds
in
add
mov
jno
add
pop
lahf
in
out
push
cmp
daa
mov
pop
and
adc
ljmp
adc
pushf
std
adc
lret
notl
cs
jecxz
data16
cmp
aas
push
jmp
inc
and
pop
int3
pusha
clc
sub
in
push
pop
test
icebp
mov
movsl
cmp
rcrb
pop
lahf
mov
push
das
pop
adc
test
add
jg
add
out
mov
mov
cld
fldenv
pop
mov
andl
sti
xor
pop
add
push
shr
push
mov
pop
dec
test
mov
cmc
lret
dec
mov
xor
aas
and
pop
jp
sub
dec
inc
jp
lds
rcll
fcmovne
adc
ja
ret
push
test
out
lret
mov
push
or
test
cmp
fiaddl
xlat
jno
nop
dec
sbb
cmc
dec
hlt
jns
ss
stos
cmp
dec
pop
push
movsl
divl
xor
shlb
sti
pop
push
cmp
mov
lods
popf
and
adc
lods
in
stos
scas
adc
jecxz
mov
xchg
sti
cmp
adc
stos
xchg
add
push
test
push
ja
push
sub
inc
xlat
call
jno
pop
das
inc
popf
ret
aad
ds
xchg
je
or
mov
sub
sbb
call
xchg
add
xchg
mov
movsl
jno
pop
pop
mov
adc
push
or
outsb
out
fs
ret
and
lahf
in
xchg
enter
mov
fcoms
les
jb
into
sbb
push
fs
jmp
fdivrl
inc
scas
xor
mov
mov
mov
mov
add
test
imul
lea
inc
and
add
testl
pop
pop
jne,pt
inc
sub
and
push
jb
neg
imul
or
jecxz
pop
dec
orl
lcall
addb
sub
add
pop
pop
cmp
and
mov
xlat
push
add
loope
xchg
roll
jecxz
movsb
sub
int
mov
stos
jo
adc
loop
fistpl
das
std
jne
je
push
hlt
cmp
mov
fwait
data16
pop
pop
mov
inc
lock
cmp
jle
lret
push
xor
clc
pop
loopne
mov
cmp
sbb
xor
mov
outsl
arpl
mov
mov
je
aas
ds
mov
push
lods
push
cmp
adc
push
fstps
jp
in
adc
add
popl
shrl
jnp
adc
fbld
push
decl
push
pop
and
and
jg
jmp
rclb
fdivs
sbb
roll
mov
xor
sbb
mov
add
popf
out
out
stc
inc
dec
stos
xor
inc
xlat
fdiv
cld
cld
add
pop
imul
test
cld
mov
jne
cmp
pushf
mov
dec
sub
mov
je
push
stos
dec
mov
repz
inc
jmp
test
les
imul
or
add
adc
sbb
jnp
shll
xchg
stc
xor
lret
push
mov
mov
jno
inc
arpl
push
fidivs
mov
and
jecxz
cmp
cmc
sub
data16
outsl
mov
inc
xchg
adc
cmp
lcall
nop
out
andb
movsl
shl
lods
mov
psllq
xchg
mov
lcall
mov
hlt
mov
mov
push
adc
addb
std
sbb
mov
pop
mov
ficoml
push
movsb
mov
fisubl
pop
mov
and
inc
lret
mov
mov
fiaddl
xor
pop
mov
scas
movsb
mov
imul
int
mov
rorl
dec
arpl
int3
xchg
lret
aas
movl
inc
add
mov
inc
fisubrs
scas
in
mov
push
leave
int
xor
lock
fbstp
loop
xchg
in
repz
imul
popf
lods
leave
xchg
xlat
pushf
fwait
push
ljmp
pop
aad
push
adc
mov
loope
adc
mov
and
test
sub
push
call
ja
out
mov
jb
jp
into
cmp
popf
push
repnz
mov
adc
in
movsl
dec
rcrb
cmp
ss
jecxz
adc
lods
test
cmp
mov
push
xor
mov
aaa
cwtl
popf
mov
outsl
arpl
cmp
in
mov
stos
mov
inc
push
outsl
int
adc
sti
jmp
push
xor
out
sub
mov
shlb
add
flds
rcl
adc
push
jnp
add
jne
cltd
cmc
cmp
cmp
or
mov
push
pop
dec
daa
andl
test
xor
mov
test
cltd
enter
mov
rorl
ljmp
dec
rcl
icebp
mov
stc
in
lcall
xor
jge
push
mov
ret
in
xchg
fisubrs
stos
test
pusha
repz
inc
repnz
fisubrl
sub
add
mov
push
cmp
js
sub
loope
jp
mov
adc
decb
fs
sub
imul
pop
cmp
push
push
and
and
cmp
sbbl
imul
pusha
stc
in
or
inc
and
add
or
int3
jno
repnz
fwait
xchg
adc
xchg
pop
jg
jmp
imul
xchg
ljmp
jbe
cmp
mov
fs
fsubrl
push
mov
add
push
test
push
push
insl
stos
sarb
movsl
dec
push
inc
xor
dec
incl
jge
shll
inc
adc
movsl
orl
lock
int
in
bnd
aad
sbb
jns
sahf
popa
out
stos
jle
push
mov
push
sub
cltd
ficoml
shll
add
jmp
mov
cli
push
push
jg
bound
dec
mov
nop
inc
int3
sub
scas
jle
shlb
fistpll
mov
cmp
adc
data16
and
xchg
popf
out
cli
cmp
lcall
xchg
scas
mov
aam
lock
jb
fwait
loope
ja
jnp
roll
mulb
and
and
mov
xchg
popa
call
movsb
push
out
or
sub
movsl
fsts
sbb
inc
pop
call
test
scas
xor
adc
xchg
add
adc
ljmp
xchg
inc
push
clc
fcmovnb
add
shr
popa
stos
enter
jecxz
mov
mov
sub
clc
test
out
mov
or
lcall
sub
cltd
lock
nop
cmp
mov
ret
add
in
mov
jge
ret
pop
rcrl
push
pop
pop
sbb
dec
mov
mov
sub
fmull
pop
or
lea
imul
test
jp
das
jg
out
mov
cmpb
adc
popl
jp
pop
pop
mov
pop
xor
rcrb
xchg
das
shll
rcll
outsl
pop
rcrl
xchg
leave
shll
jne
pop
gs
mov
fmuls
push
stos
insw
jp
mov
mov
pop
loop
out
cli
and
sub
cmp
ljmp
mov
cltd
mov
pop
jne
loope
dec
lods
sbb
js
je
arpl
ret
or
subl
mov
mov
das
inc
push
sbb
ficoml
testb
add
dec
imul
call
adc
test
test
sub
mov
movsl
cmp
and
jo
cmpsb
add
inc
icebp
add
rolb
fst
lds
aas
inc
or
and
push
out
jge
jne
clc
cmp
dec
sub
pop
packssdw
cmpsb
arpl
add
outsb
sub
decl
test
add
push
ret
subl
pop
outsb
addr16
fsubrl
add
mov
mov
mov
cs
out
or
fildll
popf
push
jp
inc
in
dec
aaa
jbe
scas
test
sbb
or
cmp
call
jge
into
xchg
scas
aas
mov
inc
je
or
add
pop
jae
pop
jmp
loop
jnp
jecxz
push
pop
inc
icebp
mov
push
pusha
cs
adc
cmp
cwtl
add
cmp
xchg
scas
mov
stc
sbbb
hlt
cmp
out
mov
add
out
scas
into
sahf
fbld
jp
dec
imul
popl
lahf
clc
inc
dec
jns
loop
popf
lock
or
stc
negb
out
jg
sbb
pop
dec
or
fldenv
repnz
sub
mov
push
add
and
hlt
adc
out
pop
rclb
inc
xchg
jl
pop
inc
lret
pusha
jo
test
sub
cmpsl
negb
icebp
pop
insl
sbb
mov
push
aas
cli
sbb
cmp
dec
jns
push
and
add
inc
xchg
test
sub
stos
cmp
jecxz
repnz
pop
sub
jp
popa
js
mov
push
dec
pop
xchg
call
orb
rcll
lock
loope
sbb
ja
adcb
mov
cltd
cmp
aam
adc
xor
jne
cltd
test
popf
imul
pop
jbe
inc
ds
sbbl
mov
test
cmc
add
push
lret
mov
inc
pop
das
mov
mov
in
frstor
add
cltd
dec
jle
jl
ja
push
stos
lret
push
lock
loopne
pop
ljmp
in
push
fisttps
cmp
subl
or
sbb
daa
pop
pop
pop
inc
push
in
mov
lods
cmpsb
in
arpl
outsb
cltd
jle
mull
dec
js
repnz
test
inc
push
dec
xchg
add
ret
int
std
inc
push
cmp
pop
mov
out
shr
lds
xchg
js
int
pop
in
movsb
sub
lahf
mov
pop
aam
jo
subb
cmpsb
aaa
je
dec
popa
and
push
dec
push
xor
adc
data16
and
xlat
sub
js
cmp
dec
mov
and
add
data16
pop
andb
sbb
mov
fstpt
inc
mov
daa
dec
sbb
add
int3
sbb
rol
loop
cmp
outsl
sub
lcall
sbb
add
jnp
lea
mov
cmp
clc
clc
inc
loope
andb
pop
enter
pop
pop
push
jge
int3
jns
mov
mov
jbe
in
hlt
mov
sbb
fnstsw
fisubrs
adc
mov
sub
push
lods
add
jb
xor
aas
xchg
cmp
scas
hlt
repnz
jecxz
insb
mov
xchg
add
mov
iret
pusha
push
imul
fbstp
sub
daa
xchg
and
inc
insl
nop
int
push
sub
add
cmp
sahf
sbb
sarb
stos
rclb
mov
mov
pop
cwtl
sbb
scas
hlt
cmp
shrb
or
lret
and
mov
test
int3
lcall
fs
in
mov
jl
enter
lea
daa
dec
ds
lcall
in
and
xchg
sahf
in
or
pop
mov
jnp
shlb
sub
enter
leave
stos
leave
lret
push
in
bswap
jne
data16
xlat
xchg
stc
dec
scas
ljmp
repz
mov
aas
and
outsb
xor
rorl
hlt
mov
pop
inc
mov
mov
pop
add
in
lea
mov
xchg
inc
jbe
outsb
push
sbb
mov
out
hlt
je
and
cmp
or
inc
jl
mov
stc
pop
addb
inc
pop
sbb
std
add
xor
xor
pop
xor
mov
fcmovnu
cmpsl
test
adc
mov
ja
cmp
outsb
rcll
inc
pop
sbb
mov
inc
scas
lret
das
mov
cmp
jmp
pop
cmc
mov
sub
sub
mov
mov
int3
jle
xor
cmp
fwait
xor
cmp
es
pop
or
int3
push
loope
test
mov
cltd
lcall
jecxz
xchg
xchg
call
nop
xor
shl
adc
dec
das
std
arpl
test
push
notl
andb
jns
push
rcll
xchg
pop
int
dec
or
aam
nop
ret
inc
std
push
sbb
mov
mov
outsb
nop
sbb
pop
lock
jp
cltd
rclb
push
jne
ret
push
ljmp
repnz
enter
shrl
orl
dec
xchg
dec
lret
or
mov
leave
xor
pop
fbld
stc
popa
adc
mov
in
xchg
repnz
stos
push
sub
sub
mov
xchg
push
stc
mov
xchg
fs
in
add
inc
gs
pop
mov
hlt
or
mov
int3
mov
and
sub
jle
inc
ret
imulb
or
push
jnp
pop
aas
int3
xor
addl
dec
add
out
mov
fs
mov
test
faddl
dec
mov
xor
loopne
and
sti
dec
add
and
lret
ss
mov
mov
cmc
cwtl
rorl
pop
cmp
cmc
adc
mov
lock
insl
add
mov
mov
and
call
divb
mov
es
mov
mov
xor
aam
pop
inc
mov
fadds
loopne
cs
stc
aad
inc
hlt
pop
mov
rcrl
and
xor
scas
dec
int
jge
ud2
repnz
mov
arpl
push
scas
adc
xchg
jp
cmp
pop
ds
pmaxsw
inc
xor
sbb
dec
lds
sub
mov
enter
repnz
jo
jge
movsb
int3
dec
sahf
outsb
ljmp
jb
mov
mov
xor
pop
lds
cmpsb
jl
daa
ror
pop
push
xor
inc
jl
loope
out
arpl
xor
cmp
adc
and
cmpb
or
insb
scas
jae
mov
xor
popl
jnp
pop
inc
repz
mov
lret
pop
rcll
mov
movsb
dec
sti
jnp
rcrl
subb
cmpsb
xor
and
js
das
cmp
add
cli
dec
dec
add
mov
dec
inc
adc
sbb
sub
mov
cltd
addr16
and
insb
sbb
insb
mov
sbb
cmp
xchg
mov
xor
pop
lcall
test
or
adc
lahf
lret
adc
xor
ljmp
pushl
sbbl
insl
ljmp
scas
out
xchg
xchg
test
pop
movsb
sub
sub
and
sub
xor
pop
mov
sarl
sub
mov
pop
sub
adc
lcall
gs
inc
popf
sahf
dec
andb
dec
pushf
mov
mov
insl
add
cmp
data16
mov
add
fcomps
out
pop
mov
cmp
pop
adcb
nop
xchg
inc
aam
sbb
scas
sbb
jg
pop
ret
or
sti
dec
ds
call
fdivl
sbb
push
roll
push
xchg
mov
ljmp
test
loop
sti
loop
cld
xchg
js
xor
sarl
dec
dec
or
mov
sbb
xor
inc
out
jge
lea
adc
sbb
insl
add
dec
pop
rcrb
sbb
dec
psubw
rclb
inc
mov
xchg
out
mov
pop
movsb
test
das
mov
add
push
dec
cmp
sbb
push
in
sub
jg
pop
pop
cmp
aaa
mov
add
push
jp
sub
pop
movb
mov
jae
icebp
cmpsl
repz
pop
pop
lea
movsb
jb
push
stos
loopne
std
mov
das
and
push
mov
cmc
push
fsts
and
gs
add
movups
fcmovne
xor
insl
cmp
mov
push
sub
popf
out
sbb
push
lret
int3
mov
out
hlt
je
lea
or
enter
call
xor
mov
mov
fmull
subl
sbb
xor
xor
jp
test
mov
incb
inc
xchg
gs
jmp
icebp
outsl
andl
jge
xor
and
xor
in
xchg
mov
lods
jae
xchg
add
jae
es
shll
test
lahf
push
out
jg
sarb
cltd
ret
out
imul
pop
inc
fidivrs
lods
or
std
xor
ja
in
movsb
inc
inc
or
sub
mov
adc
mov
int
sti
xchg
bound
lock
pusha
xor
sub
es
imulb
jge
mov
movsl
mov
arpl
push
idivb
dec
push
mov
out
cmpb
jg
je
or
pop
lock
movsb
or
test
jl
dec
lret
mov
fs
idiv
lods
mov
les
out
fisubl
loop
cmp
mov
inc
cmpsl
test
ret
pushf
pop
cmp
in
es
loope
inc
cltd
movsl
xor
mov
fiaddl
dec
add
adc
int
lret
push
scas
push
jo
cs
shl
popa
inc
int
dec
adc
sti
and
add
rolb
in
xor
jge
cmp
xor
out
mov
mov
pop
lods
arpl
mov
ljmp
push
cmpl
cs
pop
ljmp
cltd
xor
sbb
xchg
cmp
sbb
and
scas
ror
push
mov
fisttpll
leave
leave
mov
push
mov
or
in
mov
jno
mov
xchg
je
and
jno
call
jns
jmp
dec
inc
cmp
xchg
lahf
sbb
cmp
hlt
in
lret
pusha
popa
ds
test
clc
add
loop
mov
fadd
sbb
icebp
loopne
lea
xchg
lea
test
ret
sbb
loope
mov
pop
sub
scas
jp
sahf
mov
mov
pop
add
call
xchg
mov
outsl
cmpsl
daa
lahf
std
imul
sti
mov
jnp
dec
or
out
lock
test
and
frstor
add
dec
ret
cwtl
lock
mov
pop
je
rol
insl
cs
sbb
subb
xchg
mov
sub
repnz
rclb
xchg
pop
nop
les
inc
sub
enter
mov
aad
push
pop
cmc
add
sti
mov
add
add
fstpl
adc
push
jb
les
pop
and
call
clc
sbb
call
adc
fnstcw
xchg
adc
rsqrtps
xor
cltd
cmp
sub
subb
mov
rorl
in
call
push
pop
xchg
frstor
insb
dec
orl
loop
mov
shl
add
adc
xchg
aam
fcoml
fsub
or
push
test
in
ficompl
lea
pop
push
mov
stos
in
pop
rol
adcl
add
adc
repnz
mov
mov
nop
mov
or
test
call
leave
ljmp
push
add
dec
cs
insb
xchg
iret
sbb
fdivrp
push
xchg
daa
je
mov
stc
adc
fwait
paddd
lret
loope
adc
inc
inc
add
aaa
vpmacssdql
mov
cmp
cmp
or
dec
and
cmp
jno
or
aas
adc
into
iret
or
mov
subb
jo
shl
sub
div
cmc
cmc
and
cmp
pushl
lahf
insb
js
fadds
push
lahf
cmp
addb
pop
mov
jns
pop
inc
push
or
xor
popf
jnp
aam
clc
cltd
sti
scas
push
ds
mov
inc
sub
adc
dec
jp
cmp
out
xor
inc
jb
loopne
lock
or
mov
js
pop
and
int3
cmp
pushf
xor
sub
adc
xor
insl
mov
add
repnz
ljmp
mov
addr16
xchg
sub
push
or
jo
add
call
add
icebp
movsb
jg
insl
pop
insl
adc
ja
jecxz
shl
pop
cmp
pusha
fisubrl
inc
dec
idivb
in
cltd
pop
neg
adc
lret
pushf
sarb
mov
fnstcw
sbb
pop
add
aad
addr16
mov
cmp
shlb
outsb
test
nop
mov
push
and
outsl
adc
daa
leave
and
and
xchg
out
sub
addr16
loope
es
les
push
or
or
ret
jle
les
fimuls
dec
mov
push
sarl
push
mov
and
loopne
mov
mov
cli
adc
inc
cmpb
call
xchg
push
sub
push
jo
xlat
sbb
and
movb
or
adc
push
fidivrl
ret
xchg
mov
inc
in
sahf
jge
in
aad
and
inc
jb
jb
movsb
xchg
aaa
mov
mov
xchg
aam
fcompl
aas
mov
xor
mov
lods
into
ja
mov
stc
push
pop
and
sti
xchg
jmp
xchg
push
mov
inc
fadd
or
mov
dec
scas
add
movsl
test
ss
sahf
jne
mov
in
xchg
push
orb
lock
add
stos
iret
cmp
std
xorl
into
daa
shlb
loope
mov
mov
addr16
mov
lods
mov
std
inc
aad
lahf
fstl
ja,pn
fwait
jg
int
sub
out
jge
pop
pop
int3
mov
sbb
test
push
sub
xchg
cli
std
das
aam
repnz
add
imul
out
scas
int3
cltd
sub
stc
pop
je
stc
sbb
and
enter
mov
jp
add
push
dec
add
jo
cmpsl
rorb
scas
dec
sub
and
data16
lea
je
adc
and
movsl
rclb
movsb
stos
stc
push
aaa
sub
pop
jbe
inc
cmp
ja
mov
or
inc
mov
mov
popf
out
pop
insb
adc
cmp
push
jmp
pop
setb
arpl
ja
inc
xchg
inc
pop
lods
sub
iret
lods
jne
inc
push
push
inc
insl
adc
dec
push
mov
push
lret
lea
std
pop
pop
imul
pop
push
mov
arpl
aas
xchg
pop
fwait
mov
flds
xor
mov
les
outsb
adc
mov
adc
mov
sbb
int
jl
imul
push
inc
mov
fbld
lods
pushf
xor
pop
sub
dec
lea
aas
lret
mov
pop
sub
lods
mov
pop
sub
pop
mov
mov
mull
insl
adc
decb
jns
push
xor
call
in
mov
ret
inc
insl
mov
repnz
daa
xor
into
or
mov
mov
repnz
inc
add
test
mov
inc
cmp
inc
jns
jg
mov
int3
and
push
ss
sub
mov
and
or
sti
or
jae
and
loopne
jnp
fwait
jo
mov
and
sar
dec
repz
push
mov
xchg
push
cmp
mov
fs
shrl
scas
dec
pop
push
aad
push
adc
fidivs
js
inc
mov
pop
leave
pop
fs
push
cmpb
or
inc
xchg
sbb
sti
dec
cmpsb
lds
add
ja
cmp
and
pop
jle
bnd
aaa
jne
je
dec
mov
jp
test
lods
push
cmc
cmpb
cmc
outsb
adc
jbe
push
push
lods
mov
jmp
sbb
add
clc
xchg
cmp
loop
repz
pop
in
out
sub
fwait
or
sbb
dec
bound
push
insl
add
ljmp
cmp
xchg
nop
mov
in
add
cmp
and
iret
jae
ret
pop
add
push
xor
gs
movsl
mov
mov
out
enter
lcall
sbb
push
mov
call
in
xchg
xchg
nop
mov
cmp
push
jg
and
jle
pop
mov
jno
push
dec
mov
push
push
push
push
stc
hlt
xchg
jae
jg
pop
and
mov
pushf
js
cmc
push
icebp
and
inc
adc
jl
xor
addr16
fmuls
mov
lock
movsb
lahf
mov
inc
adc
push
inc
test
sbb
mov
cmpl
xchg
adc
jbe
lea
jge
dec
aas
xlat
loope
in
pop
push
dec
arpl
imul
imul
fistps
inc
pop
sbbb
push
xchg
pop
mov
mov
lds
jnp
jmp
cmp
jb
add
negl
aam
out
movsl
sbb
testb
mov
arpl
push
call
and
adc
or
add
jecxz
in
outsb
arpl
enter
adc
inc
mov
or
mov
pop
xchg
push
fs
mov
or
pusha
ds
imul
inc
add
hlt
dec
lahf
mov
out
mov
sub
lock
sbb
popa
mov
mov
jae
cwtl
mov
mov
sbb
setg
rcr
test
mov
je
jo
inc
mov
pop
fistpll
cmp
add
ret
mov
add
inc
shrl
idivl
je
xchg
xchg
mov
dec
jp
push
jnp
ss
stos
shll
jle
mov
popf
dec
jmp
mov
cmp
push
and
lods
jg
inc
ret
mov
mov
dec
nop
xor
scas
int
and
dec
pop
pusha
push
stos
enter
mov
push
inc
jmp
inc
dec
test
fwait
mov
and
imul
jecxz
adc
xchg
out
lock
mov
xchg
dec
mov
or
mov
jnp
pavgw
jae
ja
fldl
in
fisttps
inc
pushf
popa
addb
rcll
out
es
scas
push
les
loope
int
imul
xchg
mov
push
dec
sbb
in
insl
fcomps
xlat
jnp
inc
adc
xlat
std
movsb
repnz
cmp
insb
popa
inc
movsl
repnz
scas
dec
xor
paddw
inc
mov
pop
outsb
xchg
cmpl
pop
fsubl
cmpsb
stos
xorb
popa
stos
pop
imul
jb
in
fisubrl
sub
push
stc
and
pop
cmpb
jne
ds
scas
icebp
int
inc
mov
inc
dec
inc
sub
jnp
add
sub
addl
je
ja
xchg
les
adc
sub
cmp
pop
mov
pop
call
xor
shrb
sahf
aam
aaa
or
cmp
sbb
mov
mov
and
xor
sub
lret
adc
in
mov
dec
jge
rcll
sbb
pinsrw
outsl
pop
cmp
outsb
dec
add
jecxz
or
imul
stc
pushl
in
push
aam
into
xor
lods
mov
scas
fcmovne
sbb
push
add
setne
push
xchg
mov
jge
jmp
dec
lret
adc
loopne
dec
adc
inc
sbb
ljmp
cmpsl
sbb
enter
nop
dec
mov
pop
sub
push
jle
sbb
rol
push
dec
jns
push
xchg
xchg
pop
decb
lods
outsl
movsb
inc
paddsw
and
mov
mov
cmp
inc
adc
add
sub
test
or
inc
int
dec
sub
inc
sahf
xchg
xchg
repnz
mov
aad
daa
mov
lock
add
add
xchg
mov
mov
fcomps
add
pop
push
xchg
mov
xorl
add
out
push
push
mov
inc
js
imull
in
pop
dec
shl
jne
push
or
or
xor
pop
loope
fs
ss
shl
add
imul
sbb
add
pmaxub
adc
and
jns
rorl
cwtl
in
push
sbb
into
mov
int3
arpl
dec
mov
pop
sti
dec
inc
and
imul
or
scas
xor
ja
push
mov
movsb
or
int
int
icebp
and
sahf
sbb
mov
mov
and
addr16
dec
movsb
sub
and
out
cmp
jb
and
sahf
aam
dec
cld
cli
aam
jmp
pusha
jp
ljmp
cld
loopne
hlt
outsb
outsl
push
fldt
mov
pop
sbb
rcl
push
lods
sbb
sahf
add
sbb
inc
jb
loope
adc
pop
fs
cmp
push
hlt
xor
pop
call
sti
xchg
in
mov
or
and
jmp
push
fnstcw
mov
inc
add
aad
movsb
loopne
rcll
mov
fwait
sbb
loopne
imul
xchg
push
enter
and
cld
push
in
in
and
jne
mov
mov
sbb
mov
xor
adc
cs
inc
cmp
adc
imul
mov
addr16
adc
xchg
sarb
in
dec
fnsetpm(287
js
jmp
xor
cld
out
ss
jecxz
mov
adc
xlat
xor
sbbl
inc
dec
adc
lods
shl
inc
add
sub
push
xorb
xchg
xor
test
xchg
push
push
pop
dec
pop
int3
data16
lahf
mov
stos
cmpsb
inc
xor
jg
mov
aam
je
arpl
inc
dec
out
and
stos
aad
sbb
cli
scas
cmp
mov
insb
loopne
lret
push
mov
and
jbe
pop
inc
or
inc
bound
mov
pusha
mov
push
sbb
je
push
mov
and
push
add
out
aaa
xor
mov
testl
aad
pop
outsl
lcall
add
xchg
hlt
dec
out
sti
mov
daa
lret
xlat
jnp
test
adc
add
mov
mov
lds
aad
add
or
add
mov
jmp
push
js
into
xchg
lahf
xchg
jmp
jns
mov
jb
fcomps
mull
add
outsl
inc
mov
dec
push
pop
sub
mov
sbb
push
les
sbb
xchg
xchg
jle
and
push
cmp
fstps
or
or
xchg
int
aaa
stos
idivl
sbb
cmpl
imul
adc
sahf
nop
jmp
lea
push
xchg
jmp
push
adc
jp
xchg
repnz
imul
xor
pop
jo
mov
sbb
mov
dec
cmp
pop
gs
mov
movsl
clc
inc
adcb
add
push
iret
mov
sbb
cli
cli
mov
pop
nop
js
in
leave
imul
jecxz
push
dec
mov
or
add
ds
ljmp
push
and
es
cmpsl
ljmp
pop
testb
out
push
or
jae
inc
mov
dec
adc
xchg
cmpsl
sub
mov
or
mov
xchg
xchg
cmp
rorl
push
mov
mov
or
adc
pop
fistpll
cs
es
jae
movsl
lods
stos
jmp
sub
into
xchg
jb
or
push
cmc
push
xchg
jmp
pop
out
jl
dec
insb
icebp
jbe
cld
adc
jb
fnstcw
fs
sub
mov
inc
mov
jo
sti
push
dec
ret
js
mov
notl
pop
iret
data16
mov
test
adc
mov
and
mov
mov
aad
mov
scas
pop
push
lock
in
inc
enter
loopne
xor
inc
xchg
and
scas
in
cli
mov
movl
xor
fwait
inc
add
sub
cmpsl
mov
push
imul
cmp
ror
or
add
mov
sub
pop
scas
loop
jp
jg
out
jg
jae
cli
fimuls
fsubrl
int
in
mov
in
cltd
in
fsubs
inc
inc
std
cld
push
sub
fnstenv
xchg
pop
jo
cmc
and
and
cmpsl
popa
ret
mov
out
inc
jno
nop
sub
and
mov
mov
cmp
imul
cltd
jns
cmp
in
out
push
iret
push
pop
inc
in
in
fs
push
push
or
inc
std
push
jns
xor
fisubl
insl
cmp
inc
and
mov
outsb
mov
push
xlat
loop
test
les
lock
and
jnp
and
adc
test
insb
decl
ss
aad
lcall
shll
aas
xor
ds
add
nop
emms
mov
mov
xchg
call
cmp
cmp
jae
sbb
mov
bound
sbb
cmp
shr
xor
ror
orb
leave
xorb
pop
insb
pop
xor
xchg
adc
or
inc
add
or
cmp
jp
inc
mov
and
cmp
dec
andb
jg
or
push
das
aam
xor
jne
inc
fxch
sbb
loope
mov
xchg
lods
jns
inc
inc
out
sub
cmpsb
push
sub
leave
mov
jmp
es
jb
out
movl
or
mov
push
test
dec
lahf
outsb
cmp
data16
imul
xchg
xchg
ret
loop
cs
mov
push
adc
adcb
and
bound
std
aad
jecxz
fwait
inc
push
pop
cld
jecxz
adc
mov
gs
lret
pop
loopne
mov
mov
rcl
pop
sti
aad
data16
fistpll
testl
jo
aaa
cltd
push
push
sub
test
jnp
lret
fbstp
pop
inc
mov
sahf
into
xchg
push
mov
das
in
sti
inc
daa
aad
stos
in
cli
leave
lods
add
inc
or
inc
add
jo
jge
push
push
cmpb
or
pushf
pop
sub
adc
mov
xchg
into
xchg
popl
mov
rcrb
push
mov
xor
lret
mov
cltd
sub
xchg
and
xchg
jno
rclb
repnz
add
inc
lret
sub
and
mov
rorb
mov
sub
push
push
jmp
jnp
fstpt
pusha
adc
sub
cmp
cmp
in
mov
mov
divl
fsts
testb
arpl
jmp
dec
in
pop
int3
mov
outsb
pop
xor
and
dec
mov
inc
sbb
xchg
xchg
fsubp
cmc
inc
add
jle
or
fs
fstp
cwtl
push
in
rorl
out
test
mov
fadd
sub
rcrb
in
push
mov
cli
addr16
dec
ret
xor
mov
jmp
xchg
je
pop
or
mov
out
ret
lods
imul
push
es
xchg
or
mov
call
sbb
add
btc
xor
jl
jecxz
test
and
cmpsl
jb
cwtl
pop
test
test
decb
inc
movsl
xor
rolb
jle
push
cmc
scas
fcmovu
int3
sbb
mov
fsubrp
fnstenv
add
inc
bound
test
dec
cmp
mov
xlat
je
in
mov
sbb
pop
leave
mov
sti
sbbl
cmpl
mov
les
ds
fldenv
dec
jg,pt
popa
lods
or
mov
inc
sbbl
and
mul
dec
add
mov
ja
push
pop
test
das
cmpsl
mov
mov
into
sqrtps
inc
mov
xor
jb
lock
xor
push
xor
add
cmc
push
sarb
push
cmp
dec
pop
stc
movsl
clc
or
test
in
mov
mov
cmpsb
mov
mov
pop
aam
and
push
mov
pop
mov
loope
adc
pop
push
and
lret
aad
pop
cmp
xchg
outsb
cmc
xchg
stc
push
adc
jecxz
jmp
jmp
outsb
cmp
or
test
icebp
std
aam
xchg
cli
push
jo
ljmp
movsl
push
sahf
enter
ljmp
push
ss
xchg
jnp
imul
aam
xchg
jb
add
dec
sahf
or
cmp
dec
jae
xchg
jmp
and
nop
in
xor
sbb
adc
and
cmp
into
xor
mov
sub
xor
aam
daa
stos
stc
mov
negl
push
inc
in
addb
test
sbb
ljmp
adc
fs
xchg
dec
rclb
jne
mov
jg
xor
ds
movsl
repz
push
in
mov
pusha
fwait
dec
sub
into
imul
jae
push
jecxz
push
mov
jnp
add
xchg
xor
scas
xchg
jns
pop
xchg
mov
aaa
adc
mov
add
stc
andb
xlat
jge
fmul
jmp
mov
adc
xor
add
pusha
scas
andb
cltd
sbb
or
test
mov
jno
jge
mov
or
add
and
dec
in
mov
mov
cmp
push
aas
xchg
aaa
into
fcmovu
jecxz
pop
rcll
scas
dec
cld
jae
fisubrl
pusha
imul
icebp
bound
and
inc
pop
xchg
jecxz
push
loop
aaa
inc
sub
sbb
sbb
mov
mov
insl
jl
test
xchg
nop
pop
popf
insl
and
xor
push
inc
mov
fcoml
jecxz
daa
das
and
mov
jnp
cltd
and
gs
jle
cmp
mov
std
cmpb
shll
adc
jg
push
sahf
jo
scas
test
jb
sbb
jnp
mov
push
mov
mov
xchg
ljmp
mov
push
mov
xchg
lea
loopne
adc
push
inc
in
loopne
jns
sub
pusha
loope
cli
mov
call
je
jge
cltd
inc
iret
out
popf
cmp
inc
scas
ret
xchg
insl
es
cli
notl
inc
xchg
leave
testb
jo
pop
leave
ficoml
cmp
jle
imul
packuswb
and
adc
mov
popf
or
and
and
or
xor
dec
shrb
jmp
outsb
ss
jae
imul
movl
stos
lahf
or
loope
insb
fcoml
xchg
cmpsl
dec
and
mov
lret
xchg
push
dec
or
xchg
mov
xor
dec
loopne
icebp
leave
cmc
fcom
jne
dec
fadds
sbb
out
mov
or
jnp
mov
sbb
jbe
jne
repnz
es
mov
push
mov
iret
cltd
sahf
lds
shlb
jns
test
sahf
mov
sbb
iret
and
mov
jnp
leave
ret
in
shrl
pop
int3
jno
ja
or
jno
jne
repnz
or
roll
pop
out
add
push
mov
mov
lea
lret
inc
and
sti
or
add
ficoms
mov
jp
push
inc
mov
and
jbe
notl
jl
ja
inc
les
and
jne
pop
jb
pop
pop
movsb
lcall
push
jle
sub
imul
xor
arpl
mov
jp,pt
jge
popa
cmpsb
mov
pusha
and
into
or
mov
jbe
or
or
testb
xchg
dec
dec
mov
popa
inc
nop
test
push
insb
int
xor
nop
dec
icebp
int3
jl
add
ficoms
in
test
cmp
sbb
mov
mov
shr
mov
mov
and
aaa
iret
pushf
iret
add
jl
int3
movsb
jg
push
cmp
adc
xchg
push
mov
out
xor
mov
mov
outsb
pop
outsl
inc
adc
mov
mov
xor
sub
cli
push
fldl
cmp
data16
cmp
and
aad
cltd
mov
push
out
jge
adc
decl
incb
sbbb
iret
fdivr
cmp
or
inc
push
mov
and
cmp
imul
hlt
out
sahf
icebp
xchg
in
push
pop
jns
ja
xchg
jae
into
cmp
adc
test
or
dec
adc
es
jg
in
mov
pop
inc
pop
js
leave
mov
imul
jle
out
in
data16
outsl
sti
bound
sbb
test
bound
inc
out
sub
pop
jb
imul
xor
pop
test
inc
add
push
bound
dec
push
nop
cli
out
pop
push
mov
in
mov
sub
and
stc
dec
loop
dec
aad
sbb
in
xchg
push
jb
repnz
ret
xor
jg
stos
lock
aaa
lods
cmova
nop
scas
dec
push
daa
in
cltd
rcll
repnz
mov
push
lret
insl
add
dec
add
push
mov
xchg
dec
lret
lods
mov
addr16
mov
mov
lods
xchg
and
xor
pusha
sub
xchg
adc
mov
push
movups
mov
or
mulb
push
dec
lcall
dec
jle
pop
pop
sub
sub
sahf
scas
pop
or
mov
or
sub
jne
ja
add
cmp
mov
mov
cmp
mov
jl
dec
or
and
jb
ss
sbb
and
jmp
dec
cs
push
shrb
or
add
add
adc
and
lods
inc
pop
add
cmp
jmp
inc
push
pop
cltd
pushl
sbb
loopne
xor
pop
mov
fwait
or
or
push
xchg
mov
cwtl
stos
sar
sahf
mov
or
jmp
jge
test
out
jmp
ljmp
ds
outsb
cmp
pop
jbe
jno
add
mov
xor
pop
jno
lret
lods
rcrb
push
leave
iret
cmp
lock
add
cmp
lock
cs
out
adc
pop
sbb
imul
hlt
xor
jg
cmp
push
out
lods
sar
xchg
cmp
sub
xchg
in
mov
inc
xchg
xchg
sub
or
jnp
cmp
sbb
sbb
jnp
arpl
push
and
jle
in
jbe
lcall
pop
or
mov
addb
test
sub
nop
xor
xchg
fs
push
sbb
xor
int
sbb
popf
imul
clc
jmp
out
push
aas
xorb
mul
xorb
push
sub
push
pop
sahf
vorps
sahf
xor
adc
dec
pop
or
jnp
push
and
test
rolb
add
ret
es
sti
repz
dec
mov
ret
or
sub
inc
ss
push
push
mov
adc
pushf
dec
cmpsl
hlt
cmp
jg
sbb
xchg
dec
jp
inc
sub
jbe
xlat
adc
repz
mov
fiadds
mov
jecxz
xchg
adc
push
jns
push
adc
rcrb
js
push
dec
in
mov
in
mov
adc
dec
inc
sbb
jnp
nop
sti
add
idiv
dec
stos
dec
xchg
pop
aaa
lret
lret
clc
test
lods
mov
les
ret
sarl
jnp
add
andb
shlb
cli
ret
lea
pop
int3
dec
jne
jns
fmull
xor
lahf
and
cmp
fidivl
jnp
xor
add
jg
into
mov
cmp
xchg
sahf
pop
push
loope
cmc
push
lds
loopne
shlb
jl
inc
mov
mulb
sub
pop
xor
jo
mov
test
mov
adc
icebp
ficoml
cwtl
xchg
jbe
or
mov
jecxz
cmp
sbb
stc
dec
testb
pop
pop
push
cmc
cltd
add
dec
and
pop
xchg
push
or
and
pushf
jae
arpl
xchg
lret
cmp
leave
add
sbb
sub
addr16
push
cmp
aad
and
or
gs
popa
sbb
mov
mov
faddl
dec
fmulp
mov
cltd
pop
sbb
and
xorl
popa
pusha
xor
out
imul
int
shlb
mov
cmp
xchg
inc
hlt
cli
jge
aas
inc
jp
adc
jb
inc
fld
add
ljmp
lea
cltd
mov
dec
pushf
xchg
mov
outsl
or
out
ss
cmc
mov
andb
stos
lock
adc
cmpsl
bnd
inc
dec
cmp
mov
mov
sub
add
notb
xchg
lods
out
mov
pop
push
adc
dec
cmpsb
mov
pop
and
outsl
fcompl
fimuls
xchg
adc
repz
lea
jns
and
lds
dec
pop
aas
add
notl
mov
mov
cld
js
lret
sub
dec
lret
mov
loopne
iret
sub
xchg
test
std
dec
rol
or
loop
in
mov
or
pop
jne
pop
xchg
lret
outsb
push
mov
pop
movsb
jg
loopne
dec
mov
mov
push
dec
pusha
mov
xorb
ret
xor
jbe
popa
pop
nop
in
and
or
stos
rcrb
inc
fimull
jp
ss
add
sub
or
aad
ret
aaa
mov
pop
aas
rcrb
bound
pop
jmp
sbb
xchg
imul
loope
pop
or
or
jp
sbb
sahf
mov
roll
popf
fidivl
lods
cmp
addr16
insl
cwtl
mov
movsb
dec
iret
test
daa
dec
jg
dec
pop
pop
mov
mov
dec
mov
jbe
stc
cmp
imul
jo
iret
fmuls
aam
jbe
cltd
add
popf
into
cmpl
les
mov
push
rcr
dec
adc
fimull
pop
lret
iret
mov
xchg
cmp
pop
lock
pop
dec
cltd
or
loop
xor
xchg
push
mov
push
jno
in
xchg
push
mov
ds
push
ret
sub
gs
fcomps
push
jnp
das
je
stc
xor
or
or
push
push
and
cmp
jmp
lods
pop
addl
clc
jmp
sbb
push
in
lea
movhlps
cmp
push
cwtl
rolb
mull
xchg
shlb
mov
or
fs
ret
jnp
test
jl
mov
cmpsb
aam
cmp
and
and
add
inc
mov
scas
inc
lret
lea
cmpb
push
dec
jno
or
jno
in
inc
mov
je
popf
in
pop
jb
and
fisubrs
leave
cmp
xlat
js
cwtl
inc
add
xor
je
and
cmpsb
push
outsl
fmull
stos
adc
mov
lret
aaa
test
fs
cli
sub
inc
das
and
jno
insl
mov
dec
xchg
sub
and
inc
les
inc
cmp
mov
pusha
jp
arpl
popf
js
scas
aaa
sub
daa
and
sub
push
mov
jb
push
xchg
fcoml
arpl
xchg
clc
sub
rcll
int3
xor
lret
cltd
int3
imul
cwtl
leave
aas
mov
mov
inc
insb
testb
jne
cvtss2sd
fs
ja
pop
sbb
notl
add
lea
xor
xor
pop
popa
and
movsb
in
mov
repz
insb
call
sub
aam
pop
in
sbb
pop
je
pop
xchg
mov
fisubrs
int3
jge
popa
movsb
bound
add
or
ljmp
addb
movsb
filds
call
das
mov
pushf
jae
outsl
or
out
lds
sbb
fiaddl
test
xor
aaa
mov
iret
pop
mov
outsl
ss
push
and
mov
push
xor
add
mov
enter
add
and
pop
int3
es
mov
push
pop
cmpb
stos
mov
mov
sub
xchg
nopl
dec
sub
add
lcall
pop
dec
fldcw
xlat
call
and
jl
scas
test
pop
rorl
movb
mov
pop
mov
pop
leave
and
xor
call
add
ljmp
outsb
inc
gs
or
popf
push
pusha
packsswb
cwtl
es
andb
test
sub
loop
mov
jbe
scas
call
cmpsl
call
xor
jle
ret
mov
xchg
jb
adc
loopne
push
jbe
adc
inc
insb
mov
jl
ret
add
cltd
mov
out
push
dec
adc
push
push
sub
adc
jg
jno
std
push
cmp
jecxz
aas
mov
jecxz
sub
popf
std
push
es
loopne
mov
mov
popa
cmp
sub
jae
shrb
push
lcall
lock
mov
ret
or
rclb
mov
pop
xchg
nop
xchg
leave
sbb
in
inc
into
mov
insl
fisubrs
in
push
js
mov
insl
inc
cmp
mov
shr
rclb
cmp
add
aam
cmc
or
mov
and
mov
mov
leave
fistl
mov
sarb
fadd
inc
inc
rcll
dec
repnz
sbbb
cmc
jne
mov
les
stos
mov
jne
mov
xor
aad
or
ficompl
mov
adc
aam
cmpl
fs
test
test
push
sbb
test
mov
mov
addl
es
push
insl
inc
cli
repnz
lret
pusha
sub
pop
sbb
jge
push
imul
sbb
fmul
push
out
ret
inc
int
les
adc
xlat
mov
pop
jns
inc
je
pop
ja
jne
sub
in
add
data16
add
cmp
inc
subb
in
rorl
dec
cmpsl
ss
stc
jecxz
ja
notl
inc
sub
xor
adc
jns
cld
mov
mov
scas
fisttps
xchg
or
fdivr
mov
sbb
cmp
mov
sbb
sbb
push
aaa
outsb
mov
sbb
push
bound
cmpsb
xor
lret
sub
push
sbb
cmpb
xor
insl
aaa
mov
aas
bound
pop
aam
out
jl
sbb
fdiv
fmull
mov
jle
mov
push
and
jmp
jnp
roll
sbbl
push
dec
inc
lods
and
or
test
lock
mov
rcrl
lds
jle
xchg
mov
and
cmp
push
movsb
in
stc
lcall
stos
cmp
popf
fcoms
sbb
enter
xchg
or
shlb
xorl
mov
test
pop
pusha
mov
adcb
popf
icebp
fdivs
cmp
jle
adc
adc
pushf
in
and
gs
imul
cld
jge
das
cltd
jae
sub
sbb
cmp
decl
inc
xchg
in
jno
adcl
loop
int3
pop
sub
xor
popf
popa
adc
mov
mov
hlt
mov
jle
lahf
mulb
leave
orl
int3
idivb
mov
stos
loop
negl
std
jnp
mov
in
xor
hlt
pop
mov
cmc
and
scas
add
push
adc
mov
or
ja
cmp
mov
push
repnz
rcr
je
jge
cmp
pop
aaa
outsl
lcall
mov
lret
inc
cmpb
mov
push
add
hlt
xchg
cmpsl
mov
jl
outsb
or
push
fisttpl
xor
jle
mov
mov
fsub
push
push
push
cmp
movsb
in
mov
arpl
dec
jns
insb
out
push
mov
rorl
sub
aaa
fiaddl
add
add
xchg
pusha
adc
and
or
mov
push
pop
adc
or
pop
sbb
arpl
nop
lret
daa
xchg
mov
in
lods
or
daa
mov
bound
scas
mov
loop
es
stos
pop
push
ret
stc
add
and
ror
rcl
cmpsb
fimull
mov
dec
push
jmp
push
add
lods
daa
notb
scas
sbb
sub
int
lods
clc
dec
fwait
pop
sbb
add
and
dec
shll
mov
jmp
pop
aad
inc
mov
push
aas
jg
cmp
subl
mov
cmp
loopne
mov
out
adcl
sbb
inc
pop
pop
sub
in
add
insb
pop
sti
push
xor
pop
mov
push
fnstenv
and
xor
inc
adc
xchg
xchg
hlt
jne
clc
mov
pop
arpl
mov
mov
iret
xor
mov
sbb
and
or
ss
int
inc
and
loope
xchg
std
mov
and
je
out
leave
jge
push
adc
ds
icebp
jnp
test
mov
pop
and
stos
fiadds
sbb
pop
ja
push
push
movsb
push
cmp
out
push
lock
xor
and
add
push
and
xchg
ja
pop
aas
jge
sub
xor
enter
fsubs
push
shrb
mov
shl
mov
rcrb
insb
in
pop
std
mov
push
jle
push
movsl
mov
cmp
xchg
lret
jecxz
les
dec
andl
xor
cmp
shl
sub
mov
leave
dec
cmpsb
or
jb
lret
scas
or
adc
inc
jbe
cli
or
sub
sub
std
pusha
fs
cmc
inc
ljmp
inc
test
add
in
rcl
xorl
hlt
add
cmpsb
nop
dec
sub
jmp
push
jp
rcr
neg
adc
sarl
jmp
aad
adc
adc
je
rcll
dec
or
push
mov
jp
adc
fs
dec
xchg
lcall
test
jns
rorl
or
mov
mov
int
les
jmp
movsb
in
inc
lock
push
dec
iret
out
or
sub
mov
mov
in
mov
push
mov
test
popf
popa
or
in
xchg
add
dec
vpsubusb
mov
push
pop
mov
pop
push
sbb
cmp
mov
mov
dec
cmp
test
gs
xchg
push
pop
mov
xchg
mov
daa
int3
sub
push
dec
sub
das
cwtl
push
cmpsl
repz
mov
je
adc
outsb
aam
adc
push
lods
out
outsl
mov
jl
xchg
jo
loope
dec
inc
aam
lock
iret
subl
in
lahf
popf
add
jb
out
cmp
ror
mov
pop
rcpps
jnp
push
xchg
lods
arpl
jbe
inc
mull
mov
ljmp
mov
fdivs
adc
shlb
iret
test
dec
lea
jne
jge
or
mov
mov
negb
mov
mov
pop
addb
pushf
ss
lret
add
xchg
in
out
fdivrs
cmp
cmp
adc
or
ss
into
push
ja
repnz
dec
out
push
aam
xchg
sbb
or
bound
ret
popf
mov
movsl
adc
cmp
dec
and
arpl
data16
into
jns
inc
inc
dec
repz
imul
aam
or
mov
xor
add
test
ljmp
sub
jb,pn
frstor
or
loope
test
es
sub
mov
dec
notb
pop
xchg
repz
lods
ss
in
cmpsb
scas
inc
jb
loop
xchg
pusha
push
sbb
addr16
pop
mov
lods
or
into
or
roll
or
push
jmp
out
call
test
push
imul
push
out
mov
inc
jae
xor
jl
xor
jns
inc
push
inc
adc
aam
mov
rorl
icebp
pop
fdivrl
cmpsb
and
adc
cli
xor
lods
sbb
mov
jns
jbe
sahf
push
cmpsl
cltd
in
rcrb
pop
mov
push
push
test
sub
mov
jnp
std
pop
ror
dec
fdivrl
mov
bound
or
out
ss
scas
loopne
lock
mov
sub
dec
dec
cmp
pop
push
jb
mov
pop
jbe
inc
movsl
icebp
rorb
stos
dec
lea
jle
jmp
or
cmp
xchg
dec
outsb
push
sbb
out
push
cmc
dec
std
jmp
jp
and
fadds
xchg
es
hlt
mov
inc
jp
js
das
std
push
cmp
dec
adc
into
dec
fistl
mov
loopne
ja
lds
ret
inc
je
add
sub
sahf
mov
jg
adc
outsl
or
pop
mov
sub
mov
sti
and
adc
sbb
lods
jmp
adc
adc
push
fidivs
push
popa
xorl
jle
jmp
adc
sub
jo
jno
or
jnp
imul
ja
jl
outsl
mov
in
and
pop
push
mov
push
add
inc
jmp
faddl
cmp
out
loopne
push
pop
test
shll
pushf
lea
ficompl
inc
pop
xchg
jb
xchg
mov
xchg
xor
cltd
inc
imul
or
add
push
in
xor
cmp
out
mov
repnz
adc
aad
shrl
scas
shll
hlt
xor
insl
ret
sarl
xchg
mov
bound
shl
cmpsb
mov
in
add
and
sub
adc
les
pop
scas
in
and
cli
cmp
jno
pop
adc
cmc
cmp
inc
inc
push
fsubs
out
push
cmc
xchg
fs
nop
sub
repz
cmp
cmc
xor
mov
arpl
dec
fsubrs
stos
dec
aam
mov
jg
in
and
push
mov
pop
inc
cmp
sbb
xchg
ljmp
sbb
pop
in
xchg
lahf
jg
leave
adc
and
adc
outsl
es
lret
test
adc
stos
xor
imul
sahf
pop
pop
call
ds
adc
std
bound
mov
pop
jns
jo
addr16
sub
cmp
popf
xchg
jmp
mov
pop
rorl
push
leave
loopne
xchg
xchg
nop
pop
repnz
xor
push
hlt
or
lods
dec
dec
and
and
sub
popl
jge
jl
pop
mov
sub
bound
pushf
xor
hlt
cmp
mov
lret
cwtl
xchg
xchg
xchg
dec
fildl
mov
sahf
clc
and
dec
add
imul
jmp
or
mov
mov
in
jle
sbbb
rcrl
fs
out
iret
in
rorb
inc
cs
fiadds
mov
out
xchg
and
lods
cmp
ror
add
inc
std
cmp
mov
or
cli
pop
sub
and
push
dec
ljmp
lret
outsl
cmp
adc
adc
popf
xchg
adc
popf
or
mov
xor
sti
scas
mov
xchg
out
aaa
hlt
mov
repz
jg
sub
dec
cmpsb
daa
jg
lods
test
mov
jl
test
gs
push
decl
inc
mov
push
lret
mov
add
pop
push
iret
aad
cmpl
fcompl
push
std
sub
inc
mov
xor
mov
xchg
mov
mov
push
sbb
sarb
in
scas
xchg
mov
mov
imul
push
sbbb
sbb
sbb
sub
stos
ret
adc
push
icebp
data16
ja
push
jp
bound
das
testl
sbb
pop
notl
mov
fildl
es
outsb
stos
sbb
imul
pushf
arpl
daa
dec
cwtl
wrmsr
pop
jecxz
subl
cwtl
xor
outsb
adc
jb
mov
push
cmpl
loopne
movsb
shrb
out
or
xchg
ret
inc
mov
fsubs
call
and
xchg
bound
pop
jle
push
and
add
imul
rol
or
jo
xor
xor
sub
push
adc
fimull
aad
outsb
jne
hlt
push
jns
jb
fsubr
push
lret
sub
mov
add
cs
cld
mov
mov
inc
ret
xlat
cltd
or
mov
fcompl
loop
arpl
ficoml
das
ja
xchg
outsl
fiaddl
adc
aam
ljmp
sbbb
cld
pop
push
cmp
jae
adc
daa
add
sbb
xor
mov
out
repz
pop
jo
aam
mov
in
daa
ret
add
je
test
movsl
pusha
jmp
and
jbe
and
cmpsl
push
aad
mov
das
xchg
stc
adc
and
and
mov
jno
cmpb
jns
ds
add
dec
xor
xor
inc
fnstenv
jbe
cmp
enter
icebp
loop
xchg
pusha
inc
mov
mov
out
std
test
out
movsb
mov
test
cmpb
loope
mov
test
aas
jne
sbb
test
data16
inc
in
mov
pushf
mov
mov
out
inc
insb
jle
in
lcall
xchg
into
jns
sub
jo
rorl
xchg
mov
out
sbb
fisubl
jmp
cmp
push
inc
stos
inc
data16
mov
das
idivb
jb
scas
or
test
mov
cs
mov
mov
inc
sbb
std
and
fistps
testb
xor
cmp
sbb
add
lcall
clc
xchg
sahf
mov
push
sub
int3
jl
repnz
or
xor
es
inc
call
mov
or
sbb
sub
jg
dec
xlat
movsb
mov
andb
lahf
jns
sbb
enter
ret
int3
stc
cmpl
repz
push
es
adc
xchg
loopne
cmpsb
add
popa
loop
dec
and
and
mov
loopw
mov
faddp
outsb
fmull
outsb
fnsave
mov
cmc
mov
add
mov
adc
mov
les
sbb
sbb
divb
inc
sbb
xor
lret
push
push
imul
movsb
roll
jbe
stos
add
int
pop
out
in
test
xchg
xchg
sub
xlat
dec
dec
inc
out
sbb
cltd
pop
fsubrs
ret
scas
jne
jle
xchg
jno
and
ror
bnd
out
or
jne
xlat
sub
incl
rcrb
das
adc
add
jno
xor
lods
sub
pop
dec
dec
pop
orl
mov
repnz
lret
push
rcr
jecxz
dec
push
testb
std
cmc
cmpsl
xor
add
sub
shll
xchg
dec
inc
std
mov
cmc
dec
push
lock
xchg
pop
nop
push
jmp
cmpsb
jecxz
jle
xor
loop
popa
int3
mov
mov
in
insl
mov
fadds
inc
jbe
pusha
mov
fcomp
jb,pt
leave
xor
std
cmpsb
int
sbb
xchg
xor
and
dec
mov
insl
mov
ss
mov
clc
repnz
stc
sbb
fisttps
cwtl
je
push
mov
imul
aad
mov
pop
leave
jo
mov
add
jmp
xor
mov
jmp
pusha
and
push
sarb
xchg
inc
dec
sbb
dec
xor
jp
fsts
movsl
hlt
push
daa
in
insb
scas
outsb
cmp
gs
std
push
aad
iret
add
adc
je
push
jp
push
imulb
xchg
lret
inc
rcr
ja
ret
das
pop
stc
mov
mov
push
cltd
xor
inc
ficompl
fwait
pop
xlat
repnz
repnz
sbb
mov
pop
or
and
imul
jp
sbb
jns
arpl
push
push
lods
insb
outsb
int3
sub
imul
ja
aam
add
mov
add
fyl2x
pop
leave
insb
test
inc
iret
xchg
or
mov
cmp
push
je
lret
xor
fucomp
mov
inc
add
xchg
mov
xchg
jle
push
fisttpll
hlt
add
mov
int3
push
push
xchg
lea
mov
int3
shlb
fdivs
into
shrl
loopne
jg
jns
nop
cmp
and
nop
mov
insl
jne
mov
shlb
hlt
pop
ret
dec
or
sbb
adc
dec
push
out
scas
jl
push
cmc
jg
iret
jl
and
aas
mov
cvtpi2ps
cmp
imul
mov
nop
mov
push
lds
adc
mov
jmp
ret
jmp
jmp
push
mov
bound
push
iret
ds
int
pusha
cmp
sbb
pushf
xchg
pop
and
add
loop
sub
add
xlat
sbb
mov
ss
icebp
loope
xor
pop
addr16
aaa
mov
cmpsl
push
xor
lret
push
jle
sarl
fucomip
push
mov
notl
call
pop
bound
adc
pop
sub
shll
add
into
sub
movsl
dec
dec
pop
dec
gs
repnz
cli
lock
pop
sub
aas
sub
mov
inc
and
adc
test
mov
aam
pushf
push
adc
test
fisttpll
pop
jg
insb
xchg
push
push
push
adc
sub
lea
repz
xor
sbb
cmc
sub
filds
sbb
mov
in
iret
mov
jo
add
loopne
popa
xchg
mov
inc
sub
pop
cmp
mov
jo
cs
push
enter
push
mov
aad
mov
pushf
jg
sub
in
es
inc
negb
popa
sbb
push
xchg
iret
sbb
test
pop
or
push
dec
mov
mov
mov
inc
jae
pop
xor
fs
xchg
and
fistpl
bound
fsubs
mov
mov
mov
jmp
sub
loope
mov
pop
ret
sahf
or
test
jbe
pop
rol
loope
and
mov
adc
popf
mov
inc
and
lock
and
addb
jle
push
pop
inc
jmp
ss
sub
out
lock
cmp
mov
xchg
ror
in
and
inc
or
jne
pop
inc
pop
jp
lea
cwtl
inc
outsl
or
pop
cmpsb
test
pusha
pushf
loopne
stc
test
scas
and
shrl
mov
mov
sbb
stos
inc
loope
aad
push
leave
mov
jns
addr16
ss
jb
sub
adc
jnp
dec
mov
rorb
in
adc
les
mov
add
push
mov
lods
lret
pop
dec
xor
dec
push
add
inc
iretw
pop
out
pop
and
xchg
mov
mov
jb
mov
es
lods
test
xchg
and
jle
xchg
lret
or
testb
int
cmp
xchg
mov
and
lret
sbb
cmp
inc
pusha
lods
push
aam
daa
fs
aam
pop
add
loope
push
adc
lcall
mov
and
xchg
pop
pushf
hlt
bound
cmp
pop
mov
loopne
shl
sbb
enter
jle
inc
jb
dec
inc
cld
adc
push
cld
sub
mov
inc
jge
outsb
shrl
dec
ss
xchg
dec
cmp
popf
dec
mov
out
sub
fwait
or
lock
jne
xchg
jg
and
stc
in
aaa
mov
xor
cs
mov
adc
aad
sub
test
movsb
cmp
inc
test
inc
jg
lods
add
cmp
fwait
popf
cmp
pop
fwait
push
add
xor
hlt
pop
call
popf
mov
fisubl
inc
lret
lods
or
setbe
cmp
into
pop
sbb
les
mov
mov
cmpsb
sti
fsts
nop
inc
ja
int3
das
mov
popf
and
mov
lret
lods
mov
js
and
jo
das
mov
sub
std
ja
push
pop
sbb
out
outsl
out
push
jne
out
data16
orl
clc
jne
into
push
repz
pushf
aad
ret
addr16
add
pop
and
push
cs
jns
pusha
inc
cmp
out
cld
xchg
pop
pop
push
cmpsb
ljmp
xor
pushf
nop
out
mov
or
test
mov
inc
mov
sarb
loopne
sub
fsub
sub
mov
loop
cmp
neg
pushf
or
cmp
xor
xor
mov
sub
adc
pop
mov
pop
aam
pop
orl
add
or
xchg
push
addr16
popa
sub
xchg
push
sub
push
popa
jl
lret
xchg
inc
stc
loope
cmpb
clc
cmpsb
sbb
jne
imul
fstps
shll
mov
rcr
data16
or
shrb
mov
and
pop
popa
xchg
rcrb
sti
jl
mov
rcll
cmpsl
loope
jle
add
xor
das
iret
mov
cld
jmp
jl
rolb
push
loopne
mov
jmp
ficompl
divl
int3
pop
or
adc
ljmp
push
mov
repz
rorl
cmp
mov
push
leave
test
and
adc
data16
cmp
add
cmp
or
sub
add
hlt
and
mov
push
jo
in
xor
mov
ljmp
lods
into
push
cli
lret
xlat
sbb
jbe
mov
dec
and
and
xor
add
mov
clc
inc
in
and
mov
cmp
ljmp
test
push
rcrl
sub
push
dec
sti
repnz
nop
enter
jnp
mov
es
shl
and
mov
and
or
fistps
bound
nop
xchg
and
lock
add
adc
push
mov
mov
add
fistps
dec
jl
pushf
or
scas
add
test
stc
push
aas
adc
loope
sub
sbb
jecxz
es
outsb
pop
dec
icebp
leave
inc
add
cmc
das
leave
pusha
ja
sbb
sub
pop
jecxz
out
test
lds
fsubrl
in
ficomps
sub
fidivs
mov
mov
andl
push
xor
cmpsb
sub
mov
sbb
into
fs
aam
sbb
mov
sahf
cmpsl
punpckhdq
or
fnstsw
mov
pop
imul
loop
loopne
cltd
and
fisubrl
testb
xor
or
insl
inc
cmpl
or
pop
nop
sbb
dec
stc
ret
int
clc
cmp
xchg
jae
into
cmp
je
stos
jmp
sbb
or
or
mov
jmp
mov
shlb
test
gs
test
mov
cs
cmpb
cmp
std
test
cmp
mov
mov
or
push
push
dec
mov
enter
sti
sub
outsb
sub
pop
xchg
or
or
dec
std
clc
psadbw
stc
shll
pusha
in
mov
cmpsl
stc
pop
les
jecxz
dec
mov
xchg
inc
in
lahf
cmpsb
xor
shll
add
fs
xor
jne
ret
movsb
push
push
jp
xchg
cmpsl
xlat
out
pop
pop
mov
adc
jmp
or
imul
jmp
decl
outsl
fwait
mov
pop
cmpsl
jecxz
daa
divb
jecxz
cmpsb
dec
add
cmp
fidivs
pinsrw
xlat
pop
pop
push
jns
test
mov
mov
sahf
push
subl
pop
insl
adcb
push
arpl
roll
lahf
inc
bound
decb
pop
pop
xchg
outsl
shll
push
xchg
or
sub
repz
adc
cmp
cmp
into
fwait
sahf
shlb
cmpsb
xchg
in
stos
xor
lret
add
pop
fnstsw
icebp
jne
xchg
addr16
rorb
repz
fs
mov
sub
mov
rcl
push
and
add
enter
xor
loopne
es
je
and
sub
clc
jmp
fstpt
ljmp
push
cmpsl
sub
jo
adc
mov
mov
outsb
sahf
push
in
bound
fwait
nop
aad
arpl
jge
into
stc
mov
adc
push
pop
jge
outsl
rcrb
mov
lahf
or
mov
aaa
sarb
in
xchg
scas
ds
add
cld
repz
adc
xrelease
mov
xchg
add
mov
jbe
dec
cmc
clc
and
ljmp
mov
adc
dec
mov
jbe
xchg
das
pop
ficoms
adc
sbb
push
into
mov
mov
or
push
jns
xlat
push
xchg
in
faddl
out
inc
mov
mov
mov
loopne
out
mov
dec
pop
hlt
sahf
cld
pop
push
push
pop
mov
daa
add
cmp
mov
xor
fists
int
ja
mov
and
push
xor
mov
loope
cmpsl
daa
aad
test
mov
xor
mov
enter
pop
adc
loop
xchg
ja
push
push
lock
ljmp
rolb
push
mov
or
cli
stc
psrld
dec
mov
sarl
divl
pop
test
sbb
push
divl
sbb
and
adc
cmp
int
mov
cld
inc
push
adc
daa
ljmp
mov
push
mov
loop
pusha
push
imul
into
mov
mov
pop
das
mov
pop
int
insl
jmp
or
int
sub
push
and
popa
ds
repnz
cmp
and
dec
fdivrs
cld
sub
mov
js
push
cmp
setb
jb
daa
and
pop
fs
cli
mov
dec
js
add
cmp
xchg
lret
lods
dec
les
fsts
push
dec
pop
sbb
sahf
and
bound
lcall
in
adc
sub
mov
movsl
xchg
scas
rclb
lods
out
push
sarl
xor
pop
test
pop
add
push
imul
fisubrs
out
jnp
test
sub
dec
mov
push
cmp
jnp
adc
and
and
movsl
mov
cmpsb
or
js
or
pop
mov
rorl
adc
lods
mov
sub
stos
bound
data16
popa
pop
xchg
es
jae
test
mov
outsb
sub
cs
cmpb
or
pusha
aad
pop
stos
cmp
cli
in
cmp
cld
push
xor
call
xor
rcrl
repz
xor
xchg
xor
mov
fcom
push
xchg
inc
xchg
xor
shll
ljmp
or
jnp
lods
int
add
cmp
enter
cmp
sub
xchg
lahf
jmp
xor
sbb
sub
mov
jnp
fmulp
imull
mov
xchg
dec
fimull
jbe
cmp
xchg
push
or
cmp
mov
mov
imull
jb
lods
pop
fwait
enter
cs
setns
aas
mov
push
lds
dec
dec
jge
jmp
mov
add
in
fdivrl
in
shlb
mov
lods
shlb
sbb
insb
sub
nop
and
jle
xchg
jp
stos
mov
inc
adc
fmul
mov
test
jle
adc
cltd
dec
into
std
test
jae
sarl
xchg
push
notl
dec
inc
sti
nop
imul
cmp
sub
arpl
pop
out
sbb
adc
pop
arpl
gs
in
mov
in
loope
cld
xchg
pop
rcll
std
mov
and
std
push
call
pop
loop
mov
jle
xchg
lea
shll
jns
pop
pop
stos
xchg
cmp
hlt
sbb
sbb
add
ret
bound
xchg
xchg
xchg
sub
adc
lcall
push
mov
inc
and
dec
ret
je
je
dec
adc
in
stc
loop
imul
pushf
dec
jl
inc
dec
and
repz
xchg
dec
arpl
pushf
push
xchg
fwait
test
jle
or
int3
data16
and
mov
cwtl
jg
icebp
jp
cwtl
fs
loop
jo
hlt
fcompl
add
push
scas
pop
inc
les
push
and
mov
fucomi
and
jp
mov
xchg
adc
icebp
xchg
cmp
add
mov
in
fcmovbe
into
mov
push
fnstenv
jp
or
data16
jno
jnp
aam
jle
jmp
out
xor
jge
stos
mov
icebp
leave
xchg
mov
fs
pop
mov
inc
test
ficoms
jmp
push
lds
dec
xor
xchg
pushf
sub
inc
aas
andb
cmpsb
jl
cwtl
sti
cmp
jb
or
cmp
inc
les
popf
dec
sub
in
sti
data16
int
push
xchg
xchg
jne
pop
pop
mov
nop
in
scas
xchg
and
jb
mov
ljmp
pop
xchg
adc
ljmp
es
jns
inc
cmp
test
leave
data16
mov
mov
inc
push
jnp
cmp
loope
xchg
clc
outsb
add
push
jl
mov
fdivs
push
das
cpuid
cltd
scas
movsl
ds
mov
iret
hlt
sbb
lret
mov
icebp
add
push
pop
ja
into
pop
aas
or
mov
xchg
jbe
mov
pop
inc
xchg
and
dec
test
xchg
out
outsb
cmp
fadd
inc
loope
push
repz
outsb
fs
rorb
bound
dec
js
cs
hlt
pop
sub
out
cld
pop
jae
mov
xchg
inc
sbb
cmp
push
inc
ret
es
or
fnstsw
sub
cld
ret
and
and
mov
icebp
fwait
popa
cwtl
je
mov
or
das
jno
repz
xlat
sub
dec
sbb
mov
imul
adc
iret
and
pop
aam
xchg
imul
insb
data16
test
mov
and
xlat
push
mov
mov
loopne
adc
xchg
push
idivb
push
pushf
xchg
mov
sub
dec
stos
mov
insl
inc
jae
or
std
in
pop
jmp
jg
adc
mov
mov
test
inc
cmp
dec
fsubrp
pushl
sub
outsb
int3
repnz
jmp
xchg
inc
mov
jae
sub
lods
int3
movsl
sub
sbb
mov
leave
mov
les
pushf
lods
jg
ret
icebp
mov
and
cltd
xchg
pop
notb
cmpsl
jg
adc
dec
xor
lret
add
stc
dec
push
sub
mov
cmc
imul
xchg
stos
jp
mov
subb
sbb
mov
push
fdivl
and
jmp
sbb
mov
mov
fwait
sahf
pop
jle
mov
cli
test
leave
movsb
addb
adcb
push
das
add
mov
xchg
sar
mov
andb
xchg
inc
or
sub
out
ret
ja
push
adc
mov
xor
adc
jle
dec
push
outsb
sbb
add
adc
test
jbe
and
and
and
mov
push
cwtl
lret
popa
rorl
jo
dec
repnz
push
inc
adc
ds
jbe
dec
roll
push
stos
aaa
mov
add
pop
loope
push
cmpsl
pushf
test
mov
sbb
xchg
pop
outsb
or
out
inc
in
mov
sbb
pop
cmp
icebp
add
pop
cwtl
adc
xchg
push
jp
add
test
adc
sub
push
ret
shlb
lods
aaa
int3
sbbb
and
jb
in
lret
inc
lret
mov
pusha
xchg
mov
movb
mov
repz
outsb
out
xor
inc
insb
sti
and
popa
jo
cmp
movsb
mov
add
push
gs
mov
iret
xchg
mov
mov
xor
dec
out
xchg
sarl
dec
mov
shrl
fcom
sub
clc
into
ds
mov
in
sub
int3
mov
fldenv
fstpt
rcrl
subl
push
lret
out
imul
sbb
xchg
ljmp
push
outsb
sbb
ds
clc
test
mov
dec
or
jmp
sub
neg
or
cmp
pusha
fidivl
addr16
jbe
xchg
and
arpl
fwait
aam
orb
movb
loope
stos
xchg
pop
notb
mov
jge
das
jnp
stos
scas
or
xchg
sub
push
mov
sbbb
sti
stos
push
push
jno
push
in
iret
pop
popa
jnp
idivl
push
aaa
push
cmp
adc
pop
test
scas
out
jmp
or
inc
out
int3
push
adc
inc
and
pop
loope
ret
loope
sbb
fs
pop
stos
inc
pop
add
leave
movb
xchg
imul
aas
fdiv
imul
sub
xchg
pushf
xor
lret
jle
adc
scas
lea
xchg
fisubs
jl
fnstsw
add
cmc
loop
push
cmc
aas
sub
jmp
fimull
jge
push
inc
cld
dec
or
mov
dec
add
idivl
pop
xlat
pop
xchg
mov
in
fldcw
fimuls
jmp
mov
fcoml
std
das
outsl
insb
adc
lahf
add
pop
push
mov
push
adc
pop
xor
leave
pop
pop
xor
pop
sbb
inc
add
int
out
push
pushf
xchg
inc
push
sbb
movsl
dec
sub
scas
lock
enter
mov
rcrb
dec
leave
cs
out
xor
in
adc
mov
aas
fsubrp
arpl
pop
adc
push
cmp
testb
popa
jmp
pusha
in
add
mov
sbb
mov
imul
lcall
push
xor
inc
mov
leave
bound
sub
rorl
stos
mov
stos
dec
sbb
pop
pop
stos
mov
push
into
cmp
leave
lahf
lock
sbb
das
out
movsl
imull
arpl
repnz
repz
mov
mov
test
ljmp
jecxz
xchg
or
in
add
dec
pop
pop
das
sbb
jns
cmp
lahf
imul
fcoml
mov
xchg
adc
repnz
inc
add
add
mov
cmc
xchg
pop
xchg
dec
push
das
or
adc
pop
aas
and
dec
cwtl
adc
sub
or
sarl
mov
mov
gs
or
xor
out
cmp
cmp
mov
or
pop
jns
mov
fucomi
push
dec
and
addr16
mov
insl
and
pop
or
xchg
cli
sub
lcall
out
dec
sub
sarb
push
movsl
sahf
mov
movsb
mov
pop
std
pusha
mov
js
push
inc
test
adcb
out
inc
dec
mov
inc
aaa
add
inc
cli
enter
or
int3
push
cld
pop
incb
sbb
pop
les
jns
fs
cltd
in
inc
imul
and
loopne
cmpsl
lret
mov
mov
sarl
lcall
xor
mov
loopne
push
push
inc
cmp
xor
add
div
sbb
jo
mov
pop
jge
adc
insb
pop
sti
mov
cmp
mov
pop
lds
sub
hlt
out
push
ss
xchg
arpl
xlat
jno
mov
cld
sub
clc
and
jg
mov
dec
xor
add
pop
ja
jmp
aad
je
jo
or
bound
shlb
add
in
lds
adc
nop
lods
loop
lds
in
iret
mov
push
mov
pop
mov
add
aad
and
pop
xchg
fsubrl
mov
jp
out
cmpsb
jg
cmp
mov
cs
into
dec
dec
and
inc
test
jb
mov
mov
in
add
jb
loope
out
lcall
aas
notb
int
insl
inc
sbb
mov
lret
popf
int
ja
std
or
lds
pop
inc
in
dec
jp
lret
lahf
mov
fcomp
aad
inc
pop
stc
xor
cwtl
add
popa
mov
sub
sub
popa
push
inc
outsl
mov
fnstsw
pop
jb
pushf
les
outsb
xchg
cmpsl
push
cmpsb
mov
mov
sub
fbstp
mov
cld
std
cmpl
inc
dec
aam
inc
push
cmpsl
ss
bound
subb
adc
push
add
fcmovne
jp
cmp
cmp
and
imul
or
mov
test
icebp
fildl
fnstenv
push
inc
mov
addr16
outsl
loop
stos
pusha
popf
rorl
pop
push
xor
testb
inc
loopne
test
ss
cli
lods
test
out
ss
scas
clc
mov
mov
push
jecxz
jmp
mov
push
pop
aaa
lock
pop
sub
xchg
loope
mov
pop
je
mov
cmpsb
out
push
leave
sub
test
into
fs
bound
mov
jg
jle
into
ds
push
and
fwait
xor
jecxz
or
jae
rcrb
pop
clc
adc
add
xchg
addb
cmc
inc
movsb
add
push
add
xor
gs
cld
les
sti
ret
dec
cli
and
sub
add
cmc
les
push
mov
lret
js
xchg
and
test
xchg
mov
lret
orb
mov
sbb
xchg
pop
pop
lcall
sbbb
pop
push
push
mov
ja
lods
mov
xchg
jg
aas
mov
ja
adc
jle
inc
icebp
das
pop
rcll
lods
inc
in
sbb
add
rcll
ja
mov
outsl
cmp
add
pop
pop
sbb
cltd
cmc
fdivs
sub
lret
lea
ret
loopne
and
push
imul
mov
and
popa
jae
lahf
mov
dec
add
pushf
push
sub
insb
cmpsb
cmc
xchg
mov
push
rcll
sarl
mov
stos
cmpsl
in
int3
stos
lds
hlt
xor
dec
add
popa
dec
ljmp
inc
push
jl
mov
dec
cld
scas
inc
push
add
daa
in
jae
xchg
sub
int
imul
fucomp
scas
iret
pop
ds
push
xchg
or
scas
sbb
lds
aaa
mov
nop
std
and
pop
aaa
or
cmp
sub
jl
add
insb
cmpsl
and
lcall
stc
popa
ds
fs
lods
pop
mov
push
fbstp
ds
fmuls
push
mov
fdivrl
cmp
inc
cltd
push
nop
jb
jp
sti
push
inc
add
push
cmc
inc
fs
and
push
cmc
in
mov
xor
dec
or
movsl
jne
sub
int
dec
lahf
negl
mov
out
mov
int3
sub
andl
data16
jle
in
mov
mov
add
mov
in
and
cmp
out
rcrl
lock
pause
test
adc
dec
lcall
mov
cmc
jae
push
sbb
and
loop
addl
rorb
cmpsb
aam
pushf
mov
scas
cmpb
push
ja
sub
adc
jo
jb
xchg
jmp
xchg
cmpsl
ss
iret
test
loope
ljmp
negb
outsl
loope
mov
jp
xor
lahf
jl
xor
mov
or
cs
outsb
adc
loope
mov
les
mov
jmp
loopne
movsl
nop
xor
test
xlat
add
rorb
mov
add
movb
es
pushf
inc
roll
in
fsub
pop
rcrb
xor
and
jno
pusha
dec
sbb
inc
sti
add
add
jmp
loopne
pop
or
dec
out
or
push
push
and
inc
sub
int3
xor
addb
or
mov
add
ret
sub
js
push
insb
in
enter
and
lahf
ja
ja
jae
fimuls
insb
cli
mov
mov
adcb
int3
xor
or
sbb
test
pushf
xchg
ret
ret
pop
in
or
mov
sahf
imul
push
nop
jne
cmpsb
imul
cmc
test
filds
xchg
sub
mov
inc
inc
outsb
push
ja
inc
imul
mov
into
sbb
daa
add
xor
mov
or
aaa
adc
push
mov
xchg
mov
mov
dec
jo
mov
sahf
jmp
mov
jp
jmp
movsl
mov
jmp
sub
pop
pop
adc
popf
mov
call
pop
adc
push
psubusb
dec
xor
cwtl
lods
dec
add
add
push
imul
inc
clc
lret
mov
rorb
xchg
mov
sbb
push
xchg
mov
in
dec
pusha
mov
sbb
push
rclb
lock
or
or
sub
test
mov
dec
jbe
cmp
jb
stos
stc
addb
and
jne
push
pusha
cmp
and
mov
jge
cmp
lea
dec
in
lds
fistpll
dec
sub
bound
nop
fxch
gs
jne
loop
fwait
push
sub
inc
and
pushf
sub
mov
sub
cli
test
pop
xlat
sub
sub
sub
fwait
jne
sti
movsb
and
pop
mov
or
cmpsl
stc
and
fadds
mov
xchg
push
imul
inc
push
pop
adcl
push
or
dec
mov
sub
xlat
sbb
ror
push
loop
xchg
xchg
sarl
jno
cmpsb
pusha
adc
enter
cli
mov
jb
xchg
lds
mov
dec
xor
mov
add
xchg
test
mov
xchg
jmp
xchg
pop
mov
iret
mov
sbb
sbb
adc
popa
inc
sub
pop
int
add
repz
loopne
sbb
sub
adc
xchg
mov
mov
mov
sub
ss
jnp
mov
pop
pop
jb
ret
pushf
into
shr
and
xor
or
mov
mov
mov
cmc
hlt
loopne
cmp
mov
jle
push
addb
es
lock
xor
rcrb
insb
push
or
push
adc
daa
add
push
dec
insl
ss
das
sub
aaa
popf
fsts
ss
aam
inc
sub
and
mov
mov
nop
ret
dec
adc
lcall
and
mov
imul
int3
test
stos
or
inc
adc
mov
or
movsl
mov
push
stc
push
gs
cmp
or
bnd
adc
and
pusha
jge
ss
pop
sarl
std
aas
repnz
add
jecxz
ret
cli
sub
or
inc
mov
adc
in
pushf
fcoms
or
icebp
dec
lahf
rcll
test
test
cmp
dec
pop
mov
sbb
xchg
xor
mov
stos
insl
mov
dec
sbb
mov
fucomip
outsb
pop
push
into
js
jnp
cs
mov
push
cmc
dec
mov
push
hlt
adc
mov
and
lret
add
stos
pushf
mov
mov
outsl
sub
cmp
cmp
adc
sbb
sub
dec
daa
push
inc
push
jbe
sbb
cmp
ds
int3
xchg
or
lcall
mov
mov
and
add
lods
xchg
and
fidivl
cmp
shr
ficoms
leave
adc
jnp
nop
jbe
pop
xor
adc
repz
shrl
js
js
jmp
cmpsl
cs
mov
xchg
aad
push
inc
add
jne
sbb
pop
sub
add
hlt
scas
xchg
bound
xor
mov
ljmp
cltd
jecxz
and
jbe
inc
adc
imul
jae
push
pop
pop
mov
imul
adc
loop
push
fwait
jecxz
sub
les
movsb
inc
test
daa
movsb
inc
dec
mov
mov
add
cld
xor
lock
fisubs
or
xor
or
mov
sub
jae
scas
push
sbb
and
jle
in
cmp
mov
xor
or
std
mov
fldt
push
inc
push
adc
test
fsubrs
cmpsb
cli
sti
inc
jg
mov
repnz
icebp
adc
dec
xlat
jnp
and
jnp
jg
and
jmp
and
loopne
dec
in
movsb
ret
mov
into
lock
adc
mov
fwait
mov
lods
sbb
pop
mov
push
jmp
pusha
fistpl
gs
aad
mov
leave
lods
cmpsb
mov
cmp
or
pop
jg
stc
in
inc
int
iret
push
push
inc
addr16
sbb
lret
adc
outsl
cmp
shr
lcall
jg
call
pop
mov
xor
jb
cmp
xchg
push
mov
rcr
stos
decb
cmp
mov
mov
jbe
and
add
in
test
cmp
dec
mov
mov
adc
cli
jmp
psllw
lahf
pop
mov
xorl
adc
xlat
jmp
imulb
adc
mov
and
mov
push
inc
test
pushf
and
das
sbb
jp
xchg
in
jg
add
xor
fistpll
cmpl
fstpl
jnp
xchg
clc
repz
pop
ds
loop
sub
lret
push
out
sbb
mov
lods
xor
add
test
scas
inc
mov
dec
pop
jg
mov
fnstenv
xor
or
stc
pusha
iret
bound
and
lea
idivb
sahf
popf
jl
test
pop
pop
mov
jo
outsb
shll
cmp
idivb
push
sbb
scas
mov
xchg
jl
mov
mov
pop
mov
out
or
push
cmc
aad
pop
test
xor
fwait
pop
push
add
fwait
roll
test
and
fs
jns
xchg
sub
pop
sub
aam
xbegin
inc
nop
push
xorl
mov
movsl
push
lods
gs
mov
insb
dec
dec
mov
cld
sub
jnp
mov
xchg
mov
mov
stc
leave
push
aad
mov
sub
mov
mov
push
test
mov
pop
sub
icebp
or
movsl
hlt
mov
les
xor
pop
mov
shlb
xchg
sbb
cld
mov
es
mov
xchg
inc
cmpsl
scas
or
pop
shll
and
adc
shll
mov
or
iret
jo
shrb
mov
jle
push
pop
repz
xchg
stos
pop
stc
mov
and
in
or
les
and
jo
add
add
push
jg
xchg
inc
xor
mov
adc
lahf
and
fsubrs
mov
popa
mov
adc
push
jle
and
pop
or
xchg
aas
bound
out
aad
pop
mov
dec
or
jb
cli
popl
bound
dec
fistpl
nop
sub
popa
or
sbbl
roll
xor
pop
test
sbb
add
xor
jl
xchg
push
outsb
push
push
push
push
prefetchnta
addr16
mov
scas
out
icebp
int3
or
push
sbb
xor
sbb
dec
std
das
cltd
add
add
lock
dec
xlat
filds
insl
cmp
sub
shrl
push
inc
sub
cmpsl
add
mov
xor
xor
std
or
pop
addb
lahf
xchg
dec
les
push
cmp
int3
aam
jecxz
fcoml
mov
incb
push
adc
xlat
jnp
xchg
pop
adc
pop
dec
out
in
orl
pop
ljmp
mov
cli
pusha
cs
mov
test
les
movsl
pop
jmp
sbb
nopl
nop
aam
jns
pushf
gs
jbe
and
xchg
outsb
add
mov
mov
jle
pop
mov
aam
movsl
divl
mov
mov
adc
fsubr
stos
lock
inc
jle
and
add
imul
cmp
jo
jg
arpl
mov
xchg
add
inc
out
repz
add
shlb
mov
rorb
inc
dec
lock
add
mov
ds
loop
jecxz
pop
jp
adc
int3
rcrl
and
pop
andl
mov
cmp
stos
cmp
dec
or
and
adc
test
imul
sub
push
cmpsb
add
cmp
inc
pop
cmp
mov
mov
xchg
and
dec
cltd
push
je
testb
or
sub
ret
mov
hlt
ficompl
xorb
arpl
es
mov
cmc
shll
mov
sub
pop
mov
or
aas
cld
fcomps
mov
movsb
into
fisubl
lods
cmpsl
mov
xor
lret
lds
cld
out
mov
mov
ds
in
xchg
sti
int
lret
fsub
fcmove
push
call
xchg
pop
mov
pop
loopne
mov
lcall
dec
cmp
xchg
shlb
setg
dec
orb
pop
inc
mov
arpl
sbb
or
test
bswap
lods
pop
add
adc
scas
lret
stc
add
mov
push
out
cmp
cmp
and
ret
xor
pop
push
imul
push
loop
adc
std
into
aaa
xchg
push
add
cmpsl
xchg
mov
and
adc
adcl
divl
push
adc
movsl
rclb
jnp
jge
into
pop
push
jg
cmp
lret
jae
jns
aam
inc
popf
les
insl
push
push
xor
leave
ret
push
icebp
mov
dec
push
cmp
movsb
negl
stos
sti
insl
int3
jmp
scas
mov
dec
dec
orl
sbb
jo
out
outsl
fucomi
push
orl
cmp
or
lods
daa
mov
xchg
out
test
lahf
ss
pop
cli
or
daa
mov
js
popf
mov
jmp
divb
mov
rcll
addl
lahf
fs
xor
mov
addr16
add
add
sarl
sub
test
iret
cmp
mov
pop
and
lea
lods
push
cmp
loope
ret
fidivl
sub
sub
outsb
in
js
push
jae
mov
and
pop
mov
inc
or
nop
ljmp
lea
mov
mov
jb
call
xchg
pop
loop
mov
pop
outsb
mov
dec
cmp
mov
mov
xor
adc
sbb
pop
and
ror
loope
add
data16
mov
test
jmp
sbb
test
or
sub
push
and
inc
rcrl
xlat
jge
pop
fdivs
and
mov
jbe
sbb
and
movsl
test
js
push
push
bound
lock
incl
pop
out
or
cmpsl
cmc
jb
testb
dec
xchg
sub
cmpsb
lods
mov
shlb
pop
es
ret
jp
test
in
test
dec
pop
pop
insl
and
adc
stc
jmp
out
imul
sbb
iret
test
sahf
fwait
and
in
pop
addb
push
pop
icebp
mov
adc
lahf
jge
cmp
push
scas
dec
mov
fstpl
push
fistps
push
add
adc
push
loopne
sub
ljmp
imul
loopne
xor
cli
cmp
iret
jmp
mov
idivl
adc
int
cmp
push
push
stos
push
push
in
je
pop
repz
add
loop
cmp
in
int3
xchg
push
movsl
adc
mov
push
xor
xchg
mov
pop
push
test
xor
dec
orb
xor
jecxz
jno
jle
pusha
lods
xchg
andl
dec
call
and
je
repnz
fs
and
test
sahf
and
mov
sar
jns
loop
jns
dec
jae
push
pop
shlb
stc
subb
pop
fcmovne
jno
daa
cmpl
mov
lock
mov
sub
or
push
aas
pop
in
mov
pushf
jle
outsl
add
pop
jmp
scas
cmpsb
xor
imul
in
xchg
xlat
xor
sbb
out
mov
lret
lret
xchg
or
daa
cmp
xchg
jge
xor
in
cmp
lock
add
test
fwait
inc
inc
repz
mov
ficoml
mov
sar
push
mov
mov
add
lods
sbb
or
das
sbb
inc
icebp
and
xchg
xlat
jecxz
int3
leave
add
mov
mov
insb
mov
pop
xchg
jg
sub
xchg
out
ja
stos
add
lds
stos
mov
shll
dec
cmp
int3
cmpsl
adc
or
sbb
or
aaa
mov
cmp
lea
inc
mov
xchg
mov
addr16
cltd
inc
dec
sub
fsubs
push
adcl
cmp
pop
sub
or
xor
inc
cmp
push
ds
pop
js
lods
ficompl
pop
add
stc
leave
iret
push
cmpsb
mov
push
inc
outsl
sbb
mov
cmp
das
enter
call
rcrl
fmul
pushf
adc
cmpsb
pop
jns
ja
sbb
bound
outsl
addb
int
cld
stos
in
add
in
das
xor
les
out
in
andl
dec
xchg
pop
cmp
fmull
cmp
push
mov
dec
outsb
movsb
das
add
fcmovbe
sbb
ret
adc
xchg
dec
xchg
dec
push
or
push
add
push
add
mov
movsl
stc
inc
pop
scas
cmc
pop
pop
add
fsubrl
in
add
imul
push
int
mov
test
stc
fstpt
jecxz
popf
pop
int3
adcb
cmc
jmp
pop
cmp
imul
fwait
mov
adcl
aad
sub
stc
stos
repz
das
jmp
add
push
push
push
cmp
scas
mov
sub
bound
push
mov
mov
lock
pushfw
sub
shlb
xchg
in
push
xchg
add
and
jb
popa
mov
cmp
dec
xor
and
dec
jecxz
movsb
fidivl
in
repnz
cmp
sbbl
mov
test
shlb
insl
sar
movsl
andb
and
jne
cmp
call
add
jae
test
repz
repz
or
pop
inc
sub
mov
mov
dec
iret
push
mov
stos
outsl
and
je
jae
repnz
xchg
imul
sub
hlt
fwait
icebp
xor
stos
pop
or
fistpll
push
xor
lcall
mov
enter
ja
lock
and
mov
out
jmp
lods
jecxz
adc
popf
or
and
inc
add
in
jb
leave
push
cmp
or
jne
sub
mov
push
stc
cmp
adc
popf
int3
addb
mov
jno
nop
xchg
popa
pop
aaa
xorl
popa
add
xor
fsubs
xchg
adc
incl
movsb
popa
fxch
fs
add
test
sub
inc
add
push
pop
roll
divl
mov
fistpl
sbb
dec
or
adc
xor
aaa
adc
xchg
fsts
jl
jbe
inc
xor
movsb
scas
push
shrl
mov
out
roll
pop
rol
mov
sub
int3
push
lea
std
sbb
mov
sub
sahf
out
mov
les
shlb
stos
fucomi
or
jo
jbe
dec
mov
or
dec
mov
mov
xorb
pop
cmp
inc
lds
mov
mov
push
cmp
xchg
jp
pop
mov
add
rclb
xor
jl
stos
out
movl
jne
dec
dec
dec
cmp
subb
movl
xor
adc
sbb
pop
sub
verw
fbstp
xor
pop
outsb
jb
adc
mov
lods
stc
icebp
lret
mov
inc
aaa
lret
imull
stc
les
js
mov
jo
sbb
xor
das
push
in
inc
fists
imul
ss
mov
jae
roll
shrb
stos
push
fs
adc
cmc
inc
scas
xchg
dec
mov
lret
mov
fsubrs
jae
xchg
cmpsb
mov
mov
pop
sbb
ret
mov
aaa
xor
fcoml
jne
imul
jb
sbb
cmovb
fwait
inc
data16
xchg
inc
xchg
in
fsubl
and
aas
ret
or
pop
nop
cmp
js
mov
jmp
call
mov
and
push
add
mov
push
fidivrs
arpl
sbb
dec
push
inc
in
lods
jmp
ds
data16
jae
mov
jge
jo
lret
xor
scas
dec
jg
mov
flds
cwtl
jnp
pushf
aaa
fs
xchg
sbb
je
test
cld
mov
sbb
call
paddw
loop
sub
movsl
adc
in
and
inc
ja
loop
sbb
inc
adc
stc
jns
loopne
push
stos
into
xchg
adc
ror
into
adc
pop
xor
xor
pop
sub
popf
cmp
jecxz
das
inc
dec
movsb
and
lahf
push
push
add
das
in
xchg
xor
rcrl
jl
mov
sbb
sub
clc
enter
jmp
daa
mov
xchg
mov
push
outsl
rclb
pop
and
movsb
sub
mov
mov
xor
lds
dec
and
pop
js
fwait
lcall
push
mov
ds
ds
jne
jecxz
pushf
xchg
test
sti
push
xchg
and
cmpb
or
push
js
xchg
lock
sub
outsb
movsb
out
jg
stos
sbb
lahf
mov
cmc
outsl
ja
lock
loopne
rolb
loope
push
jae
mov
add
les
arpl
cmp
es
ret
push
cmp
repz
push
rcrb
or
jl
shlb
pop
inc
ret
decl
dec
xchg
pop
adc
aam
movsl
loopne
push
push
mov
sbb
cmp
mov
shr
mov
clc
test
fistpl
mov
jmp
sbb
pop
pop
cmpb
xlat
scas
ret
addr16
cld
lea
or
push
dec
nop
cmpsl
dec
sarl
mov
pop
mov
and
loope
pop
cli
xor
ja
sub
and
push
inc
enter
jo
pop
arpl
mov
xlat
mov
push
xlat
dec
jg
push
dec
add
or
pop
inc
popf
adc
pop
push
add
adc
pop
jle
in
pop
inc
pop
es
sub
ja
jge
mov
cmpb
and
mov
aas
mov
jbe
sbb
lcall
push
fdivrs
cld
outsb
shl
gs
loope
in
pop
and
loop
clc
mov
push
movsb
xor
mov
lret
inc
outsl
lret
add
push
loop
loope
mov
inc
xor
ret
out
mov
mov
jo
fdivrp
pushf
pop
repz
cmp
add
loope
call
pop
mov
repnz
mov
and
les
xlat
sahf
imul
xchg
lods
fdivl
shl
mov
mov
cmpsl
enter
xchg
add
mov
xchg
jbe
jl
je
sahf
jp
std
ljmp
fstl
das
and
fucomip
or
lret
mov
inc
flds
syscall
out
inc
add
jp
mov
xor
jb
mov
mov
sbbl
inc
dec
mov
sbb
fstps
xchg
xor
daa
push
xchg
xlat
cltd
mov
adc
pop
jns,pn
pusha
inc
mov
fimuls
jo
out
stc
test
inc
sarb
out
call
push
or
jmp
pushf
clc
and
je
mov
movsb
lahf
xor
cmp
mov
xchg
xor
jno
inc
decb
mov
adc
sub
sbb
aam
mov
inc
sub
in
fucom
inc
ror
cmp
lcall
leave
jecxz
scas
rorl
push
dec
test
outsb
mov
add
loop
sub
push
xchg
sub
arpl
adc
mov
std
mov
and
sub
inc
data16
pop
lock
adc
out
cmp
inc
push
sbb
sub
push
mov
jmp
pop
push
mov
loopne
jl
cs
outsb
mov
lret
xchg
add
psubd
test
movsb
cmp
xor
outsb
xor
pusha
scas
or
dec
ds
call
sub
cwtl
mov
sbb
push
loop
ret
fstpt
and
sbb
popf
push
xor
dec
fidivl
sub
js
insl
jne
data16
ljmp
lea
aas
dec
sub
adc
mov
add
jp
push
cmpsl
subl
mov
nop
mov
lret
pop
xchg
jno
sbb
fidivl
std
adc
testl
inc
stc
repz
outsl
sbbl
mov
mov
add
xor
mov
jge
stc
cmp
push
pop
sbb
stc
pushf
loopne
xchg
or
cmpsl
and
or
call
push
das
pop
and
mov
cmp
cwtl
jle
add
loope
add
icebp
clc
nop
mov
pop
rorl
cmpsl
pop
sub
popa
sarl
add
xor
xchg
stos
cmp
out
xor
arpl
jg
inc
inc
and
dec
cmp
les
mov
test
mov
inc
mov
add
addb
xchg
cwtl
jle
sbbb
mov
scas
mov
push
popa
rol
mov
out
outsb
jle
jno
leave
xchg
mov
add
nop
pop
push
pop
sbb
sub
in
dec
lcall
sarl
cli
daa
mov
jle
pushf
ret
jecxz
fdivrl
pushf
inc
mov
sbb
pop
dec
mov
popa
fwait
movsl
inc
stos
xor
je
leave
sub
dec
cmp
out
shr
sahf
push
sub
inc
and
mov
cli
jns
outsb
xchg
inc
cmc
call
fcomps
enter
ror
mov
rcrb
mul
dec
bound
mov
add
mov
stos
mov
adc
lcall
and
dec
mov
movsl
daa
sbb
and
fmulp
aad
inc
jns
inc
movsb
mov
mov
lret
int3
push
mov
ret
lds
xchg
mov
xor
cmpsb
arpl
inc
mov
inc
cmpl
loope
imul
pop
lret
insl
push
jmp
sub
xchg
sbb
movsb
aad
loope
sbb
and
out
adc
enter
loop
ret
xlat
pop
pop
sbb
das
mov
xor
dec
jnp
xchg
cltd
les
or
push
lods
pushf
out
lcall
xchg
xor
leave
inc
je
pop
jmp
out
push
insl
adc
movsb
pop
cmp
gs
in
and
inc
hlt
out
daa
lods
inc
mov
scas
inc
ficomps
std
push
lret
rcl
pop
xor
fstps
loopne
inc
adc
adc
rcrl
and
dec
cwtl
push
dec
inc
add
xor
ret
push
test
add
imul
dec
sub
push
pop
addr16
cmc
test
jae
inc
popa
sbb
fldenv
cmp
adc
pusha
loop
out
xchg
rol
sbbb
mov
jecxz
outsl
xchg
shl
jns
repnz
insl
stc
inc
stos
xor
and
lcall
test
sub
jl
push
mov
pop
dec
pop
xchg
roll
mov
out
mov
test
lock
xchg
mov
aaa
jns
jb
push
pop
push
mov
push
or
mov
clc
cmp
mov
inc
incb
ljmp
pop
jp
aaa
sbb
ja
mov
cltd
test
lcall
ret
push
hlt
in
lcall
test
imul
pop
addr16
push
adc
js
popa
lds
fcomps
lcall
outsb
jo
scas
ss
leave
in
cmp
jnp
mov
cld
fldenv
adc
pop
loopne
in
xor
sahf
ret
jge
and
pop
pop
daa
stos
push
add
dec
mov
lds
psubq
xor
hlt
mov
inc
xchg
repnz
lods
and
in
sbb
sbb
popa
repnz
jno
in
adc
xchg
gs
cmp
xchg
les
xor
and
shlb
cmp
fstl
popf
mov
adc
shll
int
cld
cwtl
cmp
xchg
mov
stc
sub
cmc
add
or
push
add
lahf
jnp
mov
push
xchg
shrl
adc
shll
adc
jno
dec
mov
lods
mov
jp
mov
mov
adc
mov
and
lret
mov
daa
sbb
sbb
pop
sahf
jo
xchg
jge
pop
in
inc
lock
push
call
mov
push
inc
addb
xchg
adc
paddd
mov
je
pop
mov
xlat
in
cwtl
jae
adc
mov
stos
add
dec
xchg
movsb
adc
or
push
in
xor
loop
ret
mov
fldt
aas
fwait
xchg
iret
pop
shll
in
cmp
aad
cli
and
scas
mov
mov
shlb
in
jae
jnp
sbb
xchg
bound
pop
jmp
shlb
mov
aam
jg
or
adc
dec
mov
xchg
roll
in
rolb
hlt
cmp
int
pop
inc
stos
rcr
cmp
cmp
mov
pushf
sbb
inc
test
inc
xchg
pop
or
test
test
mov
push
sarb
in
mov
popf
lea
or
jb,pt
stos
xchg
orb
mov
loopne
repz
cmp
imulb
or
pop
shlb
stos
pop
ljmp
mov
aas
into
push
or
dec
lods
outsb
mov
clc
imul
es
arpl
sbb
subb
les
push
cs
xor
adc
sbbl
mov
xor
add
xchg
fsubs
sub
mov
xchg
popl
sub
daa
and
scas
xchg
aas
std
xchg
std
inc
pop
lds
xchg
movd
xor
lods
dec
lock
mov
js
sbb
mov
push
sub
cs
mov
mov
fs
xchg
mov
jge
loop
sub
inc
iret
aad
push
sub
repz
lahf
mov
mov
notb
mov
add
lods
xchg
aad
out
cwtl
mov
xor
aaa
pop
pushf
push
cmpsb
in
sub
sbb
cmp
shrb
iret
ja
dec
stc
mov
push
push
push
sahf
lret
sub
push
imul
loope
inc
adc
fs
sbb
mov
lods
xor
repnz
dec
or
fsubr
roll
inc
cmpsl
inc
push
jmp
divb
xchg
out
std
lds
aad
es
cmpb
mov
mov
js
xchg
sbb
dec
mov
ret
push
ja
xor
mov
cli
enter
sbb
and
orl
stos
fs
sbb
nop
cli
and
mov
xlat
shlb
std
dec
imul
sti
pop
push
adc
jae
add
dec
sbb
inc
popa
aam
sub
xchg
aaa
mov
inc
imul
push
jb
test
dec
mov
out
iret
push
mov
das
inc
inc
aam
xor
inc
lahf
out
and
inc
popa
xor
loopne
xchg
add
dec
lea
jns
outsl
xchg
iret
cmpsb
insb
test
mov
jne
xor
nop
mov
std
mov
xchg
sbb
movsl
mov
mov
jmp
fcoml
pop
and
xchg
loop
inc
iret
subl
std
inc
xchg
fchs
fwait
sub
push
addb
or
inc
in
mov
or
movsb
rol
stos
test
xchg
jo
lods
addr16
loopne
xor
std
inc
xchg
lds
dec
inc
pop
dec
lods
pop
push
lock
sbb
nop
fbstp
popa
and
nop
rcr
leave
xchg
sbbb
int
mov
push
push
dec
jne
jbe
adc
shrl
add
repnz
sbb
sbb
push
out
fnstsw
call
lret
add
push
data16
dec
pop
push
fdivrl
xor
pop
ss
xor
sbb
mov
inc
sub
xor
cmpsb
jns
aaa
pop
cltd
stos
jecxz
adc
aam
mov
inc
add
sbb
test
in
inc
insl
scas
test
loop
rcrl
cld
cmp
cmp
jo
lods
ljmp
xor
xchg
xchg
xchg
int3
shll
and
movsl
mov
das
fwait
mov
add
scas
int
xlat
push
pop
add
add
push
jmp
ret
cwtl
ret
test
ret
add
mov
xchg
xchg
movsb
mov
jg
les
inc
sti
mov
cs
lret
mov
sbb
outsl
xchg
das
pop
pop
lods
mov
syscall
addr16
mov
lods
int
es
inc
out
in
xor
and
pop
les
mov
cmp
xchg
mov
cmp
cmpb
push
inc
arpl
mov
lret
aaa
pusha
sti
sub
mov
movsb
add
aaa
call
dec
adc
dec
pop
dec
cmp
aaa
loop,pt
jp
mov
cmp
inc
insb
jne
push
cmpl
sub
addr16
push
mov
ret
pop
sbb
xor
adcb
loop
leave
sbb
inc
inc
push
inc
cwtl
gs
fs
loop
stos
fs
mov
aam
mov
and
push
jo
pop
stos
out
mov
cmp
out
ja
mov
sub
push
push
mov
test
pop
jo
ret
out
aam
lcall
hlt
ret
int3
jne
add
jo
aaa
push
clc
aad
add
call
mov
icebp
daa
adc
rcll
or
mov
scas
in
cmp
pmaddwd
loopne
jb
in
inc
xchg
icebp
sbb
incl
mov
fidivrl
iret
mov
adc
jae
outsb
call
js
aad
sub
into
movsb
or
inc
arpl
in
or
ror
pushl
imul
lret
mov
pminsw
mov
adc
sbb
inc
xchg
jp
mov
dec
push
lock
adcb
jmp
cmpl
mov
jno
xchg
xchg
mov
cmp
pop
jne
jmp
in
add
inc
hlt
daa
repnz
imul
pop
or
jge
mov
and
jo
xchg
pop
lcall
in
inc
mov
les
inc
pop
test
sti
mov
jle
or
pop
outsb
pop
add
cmp
fidivrl
pop
jmp
jns
jle
dec
xchg
jnp
repnz
and
dec
lret
sbb
rorb
test
scas
loop
shlb
push
mov
sbb
ljmp
aam
mov
inc
mov
dec
pop
or
mov
push
xchg
adc
or
addl
sahf
loop
leave
icebp
pop
sbb
int
jg
clc
fucompp
xor
push
data16
js
add
push
test
dec
and
mov
cli
scas
in
rcl
nop
mov
cmpsl
mov
jmp
push
icebp
les
mov
aam
and
imul
jmp
mov
mov
pop
scas
pop
jno
dec
sti
add
pop
or
push
mov
sbb
sub
lock
xchg
dec
loop
pushf
cli
or
addr16
push
push
fs
ljmp
ds
or
in
pop
mov
xchg
fstl
xchg
push
test
outsb
lods
pop
push
stc
loop
rolb
cmp
aas
sbb
repnz
add
mov
inc
testl
lret
adc
push
pop
pop
ja
fcomps
jge,pn
pop
add
ljmp
test
jle
and
in
adc
ljmp
fimull
lahf
jg
sbb
jo
cmp
stos
fistl
insl
cmp
push
inc
sub
sbb
sbb
jg
and
mov
scas
aam
enter
int3
adc
outsl
rcll
xchg
add
rcl
ljmp
mov
outsl
adc
ret
xor
pop
push
fwait
push
push
std
jl
mov
pop
lcall
aad
pop
cmpsl
push
cmp
mov
xchg
aad
jp
mov
rolb
mov
xchg
leave
nop
out
jge
movsl
add
loopne
in
popl
arpl
xor
jmp
out
ljmp
xor
xlat
xor
cld
in
xor
and
sub
bound
dec
or
inc
outsl
jle
fisttpll
inc
sub
sbb
and
mov
jmp
leave
push
xchg
dec
inc
cmc
subps
pushf
mov
xor
push
cmp
in
addr16
or
push
std
xchg
mov
adc
jge
gs
add
cmp
outsl
adcb
pusha
add
xchg
lahf
repnz
or
cmp
loopne
gs
pop
rcll
mov
rorl
je
pop
or
out
fisubs
pop
push
ljmp
dec
adc
je
mov
insb
subb
cmp
sub
in
fsqrt
and
jle
jge
add
pop
je
je
dec
pop
aam
movsl
push
push
or
pop
push
push
sub
xlat
stos
fidivrl
sub
push
ss
xlat
out
dec
clc
or
rolb
xlat
dec
push
adc
jns
aas
cmp
push
sbb
cmp
ljmp
push
cmp
mov
fisubrl
push
popf
test
out
int3
adc
jecxz
in
out
dec
cmpsb
ret
lret
inc
faddl
sbb
sbb
pop
cmp
in
mov
stos
sbb
test
pop
int
mov
inc
test
stos
jno
je
push
nop
jb
loop
and
sbb
idivb
lea
ds
or
adc
pop
mov
and
push
loope
scas
repnz
push
aaa
xor
dec
dec
imul
ja
stc
gs
mov
cmp
lcall
clc
push
sbb
fistpl
mov
test
push
inc
adc
dec
leave
hlt
in
ficompl
xchg
pop
lock
push
cmp
sahf
sbb
jecxz
outsl
cmp
adc
or
pop
cmpsl
sbb
fldl
mov
nop
iret
dec
xchg
pop
xchg
xor
inc
xor
mov
ficomps
push
ret
mov
mov
in
sub
ret
fdiv
inc
xchg
xchg
in
cmpsb
cli
ret
push
sub
and
add
add
mov
enter
lods
test
imul
jmp
lods
stc
shrl
jle
leave
movsb
mov
popf
in
sub
mov
mov
sub
push
test
sub
jmp
movb
psrld
icebp
insb
and
std
and
push
movsb
int
dec
les
mov
es
enter
jbe
ss
cwtl
test
les
push
les
mov
daa
lahf
dec
sarl
nop
stos
cmp
jnp
cltd
test
rclb
stc
fdivrp
int3
mov
pop
mov
cmp
add
mov
out
andb
mov
dec
jle
bound
sbb
add
adc
jl
nop
jecxz
mov
in
add
lahf
ljmp
fsubrs
aas
add
mov
pop
dec
sub
add
adcb
xchg
mov
adc
imul
lahf
popf
rorb
adc
dec
jge
sbb
xchg
mov
pushf
xchg
push
mov
movsb
sahf
test
insl
repz
ja
negl
mov
int
push
mov
sbb
inc
fdivr
in
jmp
sub
lock
sbb
rolb
stos
inc
sahf
in
and
mov
mov
ljmp
stos
addb
mov
pop
lcall
sub
mov
and
test
mov
shr
mov
mov
or
mov
mov
in
sahf
pushf
mov
push
cmp
jno
cmp
adc
stc
adc
adc
mov
data16
das
mov
inc
in
daa
pop
cmp
fadd
pop
test
outsb
and
pop
sbb
bound
jge
dec
push
aam
mov
jns
xchg
and
fnstsw
fwait
sub
idiv
mov
fnstcw
mov
testb
xor
push
xchg
out
insl
rcrb
insl
lock
jb
fdivs
push
fimull
fisubrl
and
fistpll
stos
dec
or
xchg
sub
clc
mov
push
mov
fwait
aad
push
jle
xor
mov
rcll
gs
jne
arpl
addr16
pusha
fmuls
lds
jno
lods
mov
out
fsubs
jecxz
or
xor
push
cli
notb
mov
inc
mov
pusha
sarb
enter
bound
add
das
imul
pop
push
adc
jae
xchg
faddl
xor
hlt
rorl
pop
nop
xor
sbb
or
xchg
jbe
pop
pop
lcall
and
xor
pop
xor
xchg
fistpll
aam
or
inc
jp
and
jae
mov
adc
cmp
jnp
lcall
shrl
popa
fisttpll
scas
scas
test
fcmovnu
jle
mov
pop
inc
mov
pop
and
xchg
cs
out
es
pushf
orb
pushf
lcall
cld
clc
loope
ljmp
int
jns
push
lcall
repz
or
rolb
das
jno
aaa
xchg
mov
pop
nop
jecxz
mov
aas
inc
dec
xchg
xchg
jae
sub
mov
mov
dec
add
and
add
mov
and
push
push
or
movsb
or
jo
mov
cmp
gs
out
mov
and
pcmpgtd
xchg
jg
mov
cltd
push
ss
jl
jns
mov
xor
fcoms
test
inc
push
add
nop
cwtl
mov
mov
data16
iret
sbb
outsb
pop
mov
and
ljmp
inc
shll
mov
std
xor
inc
popf
mov
fdivl
inc
fstpl
jno
fbld
push
pop
xor
data16
das
aas
jle
and
dec
adcb
insl
mov
push
lods
mov
push
aam
idivb
dec
idivb
mov
mov
jns
adcl
inc
pop
mov
les
repnz
popf
mov
push
stc
cld
sahf
stos
or
jns
cmp
mov
sbb
stos
repnz
shll
out
imul
jge
dec
xlat
mov
sub
jne
pop
mov
dec
dec
pop
repnz
test
cmp
mov
xchg
xor
or
aam
aas
faddl
outsl
ret
stos
stc
and
cmp
cmp
out
push
sub
ss
xlat
lret
jmp
fistps
scas
adc
rorb
or
dec
insl
lods
mov
es
pop
jbe
sbb
cwtl
dec
clc
repnz
add
out
shll
pop
movsb
out
push
xor
cmpl
shrb
jno
mov
mov
aas
ret
xor
adc
ja
and
dec
jnp
je
jmp
add
sub
sarl
or
arpl
xchg
fbstp
loop
in
cmp
jne
jno
push
sub
lods
sbb
xor
push
fisttps
jns
xor
xchg
pop
lods
adc
imul
sub
jb
das
ljmp
jmp
test
addb
stos
xchg
pusha
icebp
mull
in
subl
or
jge
inc
enter
and
test
inc
mov
or
mov
mov
jle
or
dec
hlt
int
test
out
fstps
jnp
jle
shrl
fwait
mov
mov
jns
xchg
push
adc
add
push
mov
mov
shrl
inc
fstpl
and
test
lret
inc
loopne
jmp
pop
push
inc
rolb
sbb
lret
out
loope
adc
push
adc
scas
xchg
cld
mov
fcmovnbe
xchg
jle
lahf
mov
pop
out
ror
lods
mov
fistpl
clc
sbb
xor
mov
mov
mov
daa
inc
jne
mov
mov
and
xchg
push
adc
inc
stos
xchg
jnp
mov
mov
fisttpl
pop
xchg
mov
in
in
xchg
xor
mov
xchg
sub
jle
cmp
jne
cmp
fs
dec
fistpl
pop
fwait
data16
mov
outsb
loop
add
pop
daa
outsl
sub
push
xor
jmp
out
sbb
daa
cmp
sbb
inc
push
adcb
or
sbb
sbb
js
iret
ficoms
into
cmpb
inc
fwait
mov
xchg
sbb
ret
mov
mov
stos
mov
outsl
add
xor
jo
lods
test
jo
mov
mov
jmp
mov
loopne
repz
lret
xchg
adc
or
rorl
adc
lahf
push
out
mov
adc
sbb
adc
sbb
pop
and
mov
cmpsb
cmp
cltd
sub
ret
xor
push
dec
pop
pop
jb
int
data16
loopne
out
insb
js
nop
xchg
aaa
daa
jge
pop
in
fbstp
add
cmp
hlt
jge
ret
jp
dec
xchg
and
shrb
testb
jmp
pop
cmp
jbe
dec
pop
nop
pop
imul
or
cmp
mov
rcrl
sahf
adc
pop
mov
lret
jecxz
push
mov
js
mov
and
xchg
aam
test
sub
iret
aam
cmp
push
jp,pt
insl
xor
insl
sarl
out
xlat
push
scas
inc
mov
mov
nop
mov
xchg
fs
imul
mov
mov
inc
stos
test
pop
push
push
fsubrl
arpl
push
and
jns
popf
mov
mov
push
xor
movsb
int3
out
int
rolb
push
rcll
jo
loope
mov
sub
mov
aam
jbe
xchg
lds
daa
lds
sbb
lahf
out
dec
insl
jmp
ljmp
or
cmp
in
mov
hlt
mov
mov
mov
lods
pop
dec
pop
mov
imul
xor
push
jns
pop
inc
dec
sub
add
ds
push
movsb
xor
cs
stos
xor
les
xor
xchg
fwait
xor
jle
jl
dec
jge
popa
dec
scas
mov
imul
or
ret
fwait
mov
cmp
repnz
adc
movsl
pop
mov
sub
call
aaa
ret
sti
mov
push
int3
enter
fsts
andl
sbb
dec
adc
aad
xchg
xlat
pushf
loop
outsl
cs
sub
cmp
xor
xchg
ror
repz
cmp
aad
inc
jg
jmp
pop
test
jns
push
in
mov
push
push
xchg
imul
cwtl
push
movsl
mov
push
bound
jp
adc
cmc
aas
mov
es
pop
adcl
lret
jmp
cmp
cltd
xchg
push
xchg
dec
jl
cs
cmp
xor
mov
mov
rolb
xorb
int
in
icebp
adc
sbb
or
js
movsb
sahf
xor
imul
mov
sub
sti
popa
iret
mov
or
mov
cmp
dec
add
mov
jns
push
add
xchg
mov
mov
sub
push
rcr
nop
rolb
into
jne
sub
es
xchg
clc
addr16
sbb
mov
jb
mov
mov
xor
stos
cli
leave
mov
stos
pop
lds
sahf
push
insb
dec
ficomps
es
pushf
clc
stc
pop
mov
lcall
push
add
jmp
ret
sti
mov
xchg
pushf
add
fists
cli
adc
les
aaa
andl
pop
hlt
insl
adc
sbb
test
or
add
push
in
or
mov
dec
push
into
iret
xor
lods
inc
test
loopne
xor
icebp
test
xchg
pushl
les
jecxz
add
mov
movsl
sub
pop
popf
jg
ficoms
fwait
int3
xchg
fsubp
dec
loopw
xor
or
loop
sti
push
adc
xchg
mov
test
add
xor
rcrl
sbb
fadds
or
or
xchg
lret
das
adc
mov
sbb
and
outsl
mov
in
push
add
lock
pop
andl
cwtl
lcall
rclb
mov
inc
pushf
push
xor
add
testl
js
adc
jae
addr16
push
andl
sbb
nop
mov
cld
mov
xlat
addb
mov
in
cmp
mov
and
adc
add
mov
dec
loope
addb
stos
pop
arpl
push
stos
pop
push
pop
pusha
mov
sbb
mov
inc
push
shrl
mov
add
jle
inc
lea
pop
pop
pop
xchg
mov
sbb
sbb
ret
xchg
xchg
shrb
sbb
xchg
clc
mov
or
movsl
cmpsl
jg
cmp
inc
hlt
ret
in
jnp
mov
add
stos
cmp
les
sahf
lahf
push
jl
pop
decb
lds
int
jno
xor
sub
pop
loopne
mov
fucom
in
pop
inc
pop
or
shll
fisttpll
jmp
ss
sti
inc
insb
cmp
inc
xor
leave
sub
fs
add
std
mov
mov
mov
mov
int3
outsl
mov
adc
pop
je
rcll
push
cltd
loop
mov
inc
ret
cmp
cmp
clc
cwtl
movsb
fcomip
xor
pop
jae
sti
lods
inc
int3
call
mov
sub
pop
imul
popa
xchg
mov
sbb
inc
sub
xor
test
inc
ror
push
fwait
leave
pop
iret
and
mov
and
pop
pop
adc
mov
ret
inc
mov
fwait
inc
gs
or
outsl
nop
pop
dec
aas
hlt
iret
arpl
sahf
nop
adc
mov
sub
clc
cmp
jno
add
mov
push
les
scas
fs
enter
or
int3
in
loopne
imul
out
adcl
call
inc
sbb
in
pop
pop
cltd
sbb
popf
test
scas
sub
mov
cli
rolb
sub
push
push
or
and
out
ds
inc
sbb
xchg
in
movsb
lret
sub
jo
iret
jmp
test
ffree
xlat
fcompl
cmp
sub
xchg
mov
nop
push
or
jno
jmp
cmp
shlb
cmp
mov
out
mov
dec
ljmp
lret
xor
push
cmp
rolb
movsb
sub
je
scas
outsb
and
xchg
dec
xchg
data16
aam
push
push
or
mov
xchg
loopne
ret
jmp
rclb
jo
fists
jg
iret
fcomps
mov
sub
dec
sub
push
xchg
rorb
pop
loope
icebp
sahf
subl
ret
mov
fisubrl
into
adc
addb
shl
and
jecxz
add
cmpsl
cmp
into
mov
inc
out
imul
cmc
add
sub
jl
pusha
rcrl
loopne
jmp
jns
jmp
xchg
dec
lret
xchg
movsb
pop
xor
jns
shl
add
inc
sbb
sbb
cmpsb
into
mov
daa
xchg
push
mov
ljmp
ds
add
imul
adc
xchg
dec
xchg
ret
sbb
dec
adc
cmp
push
push
das
cmp
push
jb
sbb
icebp
imul
mov
sti
ret
add
sbb
leave
sub
nop
push
and
pop
mov
movsl
cmp
push
pop
inc
ret
shl
sbb
xchg
dec
int3
xchg
xor
sbb
repnz
cld
cltd
sub
dec
dec
xor
cmpsb
xlat
fidivrl
mov
repnz
aaa
mov
fs
shrb
adc
inc
pop
call
push
je
shl
test
jg
shr
mov
inc
rcr
mov
pusha
pop
pop
add
stos
jp
adc
jnp
call
pop
sahf
andb
negl
sarb
and
dec
pushf
js
decb
pop
out
push
pop
out
adc
test
push
cmpsl
push
filds
pop
aam
aas
xchg
fld
jb
std
and
xor
add
mov
fldt
xor
shl
sub
cs
pop
dec
sub
inc
mov
xor
std
test
mov
jns
popf
vaddpd
ds
inc
and
test
push
out
inc
mov
out
xchg
or
nop
hlt
mov
fdivrl
dec
daa
mov
push
mov
orl
xchg
push
jl
push
xor
xchg
push
push
sub
jbe
sbb
xor
adc
lret
pop
xchg
mov
cwtl
adc
xchg
dec
jecxz
out
push
dec
pop
gs
push
scas
mov
inc
mov
jbe
xorl
xchg
xor
push
jns
cmpsl
or
pop
sbb
xor
dec
insl
stos
les
aaa
mov
lds
push
incb
testb
ja
in
mov
push
loop
jns
mov
adc
cli
mov
sahf
or
shlb
aam
int3
idivb
pop
dec
pop
inc
push
fidivrl
dec
adc
mov
cmpsb
add
xlat
data16
mov
and
addl
insb
jno
sub
mov
insb
inc
fnstenv
mov
mull
adc
inc
rcll
dec
jo
adc
rcl
and
daa
orb
in
or
into
push
mov
daa
sbb
push
push
sub
les
aad
addr16
ljmp
test
fwait
adc
inc
int3
cld
mov
cmp
mov
adc
xor
stos
inc
loop
fcom
insl
dec
arpl
test
aaa
xchg
scas
adc
in
jge
xchg
stc
or
lcall
mov
push
push
popa
and
mov
aaa
xchg
pop
into
and
adc
mov
or
or
das
sub
aas
pop
xor
fdivrp
xchg
inc
dec
xchg
fdivl
and
xlat
or
jmp
cmc
adc
cmpsl
inc
cmp
and
push
jl
jmp
cwtl
popf
dec
fimuls
or
cmp
add
mov
movsb
pushf
mov
push
lock
mov
cs
xor
ljmp
frstor
mov
lods
fistpll
dec
pop
out
loopne
sub
and
adc
cltd
and
int3
ret
loope
call
fwait
scas
jno
adc
cli
stos
push
xor
jge
sbb
nop
add
dec
pusha
call
sub
mov
icebp
push
mov
insb
aas
cld
pop
mov
cltd
or
std
or
dec
pop
push
mov
jmp
xchg
mov
ret
out
dec
pop
dec
and
inc
push
dec
movsl
incl
xchg
jno
jg
mov
nop
cltd
mov
sbb
cmp
les
mov
push
mov
pushf
test
int
cmp
int
ljmp
add
add
cltd
in
ljmp
pop
cmp
std
arpl
push
ja
adc
mov
push
fbld
lahf
icebp
adc
push
cltd
mov
adc
mov
notb
js
xor
in
add
leave
repz
push
iret
mov
push
subb
dec
push
xlat
push
out
fwait
lahf
pop
push
enter
imulb
cmpsb
mov
lods
mov
adc
popf
call
and
push
push
shrl
push
pop
add
cli
mov
dec
dec
pushf
and
and
cmp
inc
pop
push
mov
idivl
or
dec
push
fstpt
aaa
dec
mov
fsin
in
lock
push
aad
jno
dec
lret
mov
mov
ljmp
sahf
jl
push
in
shll
jge
dec
insb
sarl
pop
xor
bound
sti
out
inc
sbb
lock
daa
pop
add
mov
xchg
inc
movsb
insl
mov
mov
pop
cmp
inc
roll
fstpt
jle
loop
je
inc
stc
scas
dec
test
idivl
or
cmp
fucompp
xchg
add
push
jno
stc
arpl
leave
arpl
lret
rclb
arpl
jnp
outsb
lods
inc
aas
mov
jp
mov
jmp
sbb
cmp
inc
inc
insb
mov
add
decl
push
popa
jne
inc
xchg
mov
or
push
mulb
pop
dec
or
lret
inc
imul
sub
push
ds
or
das
and
shrb
subb
fsubrs
shlb
xlat
xor
nop
pop
push
pop
dec
inc
inc
mov
sub
lods
sub
test
add
lcall
adc
adc
mov
push
sub
mov
std
bnd
dec
inc
pushf
jae
loope
sbb
clc
push
xor
mov
int
push
scas
xor
iret
rcrl
daa
popf
stos
push
jp
fdivrs
cpuid
fiaddl
inc
std
xchg
cmp
iret
ret
mov
scas
and
sbb
inc
je
sub
incl
out
fadds
inc
popa
adc
or
mov
gs
xorb
cmpsl
lret
outsl
pop
dec
adc
loop
mov
xor
fcoms
lcall
leave
cmpsl
mov
and
inc
shlb
in
lods
imul
fdivrl
mov
adc
in
stc
mov
int
lock
jp
movsb
xor
dec
mov
xorb
ss
pop
aaa
aas
jns
popa
call
and
push
jnp
leave
stc
int3
xor
hlt
and
fisttpll
test
lods
ljmp
movsl
mov
shr
or
test
pop
xlat
ds
faddl
imul
call
mov
push
rcrb
adc
cs
jle
or
testb
jl
push
mov
addl
fimuls
sarl
or
lahf
pop
cmp
pop
cmp
in
cmc
mov
pop
insl
test
xor
sub
inc
sub
jl
xchg
test
out
xor
iret
and
cmpsl
pop
pop
sub
cmp
mov
and
or
imull
push
push
or
mov
mov
nop
mov
gs
jmp
fsubrl
stos
mov
mov
imul
mov
pop
pusha
cmp
insb
les
scas
loope
mov
stc
xchg
fisttpl
cmp
fwait
push
iret
lahf
inc
imul
inc
aam
pop
std
loope
pop
push
sub
cmp
pop
outsb
jmp
or
mov
mov
ljmp
fwait
icebp
jl
xchg
push
repz
mov
insl
ret
popa
in
pop
jge
cmpsl
mov
aam
hlt
sub
in
jecxz
add
sbb
shrb
inc
mov
cli
cmpl
scas
lcall
mov
xchg
in
mov
testl
roll
fnstsw
lret
mov
mov
mov
add
jecxz
sub
pop
lock
push
cld
jmp
outsb
pop
jg
or
insl
push
cmc
aaa
xchg
scas
fcompl
xorb
ds
lret
shll
jecxz
enter
in
shrl
out
sub
mov
pop
dec
or
imul
jnp
or
dec
jg
jno
mov
shrb
imul
stos
sbb
outsb
pop
sub
idivb
push
scas
arpl
fistps
add
mov
and
push
test
and
into
sahf
fs
loopne
adc
mov
jge
cmp
fmulp
ret
je
jns
dec
fildl
add
cmpsl
divl
xchg
dec
push
jo
test
or
or
jp
cmpsb
xchg
cmp
cld
loope
sbb
sbb
mov
into
bound
aad
dec
imul
test
inc
sub
mul
jl
dec
in
xchg
and
dec
sub
scas
stos
fildll
fucom
lret
enter
lods
negl
rcl
scas
repz
loope
sub
sbb
dec
xor
loopne
out
loopne
xor
insl
sub
insb
stos
mov
popf
and
call
hlt
cmp
rolb
mov
fwait
pop
out
fsubrl
dec
mull
roll
lahf
enter
mov
dec
mov
outsb
jnp
add
mov
or
push
mov
bnd
push
pop
mov
and
mov
pop
lea
cmp
mov
cmc
lock
call
ja
mov
mov
aad
enter
jle
and
xchg
and
mov
arpl
shl
jb
shll
xchg
into
jg
sbbb
mov
mov
push
rolb
addr16
fisubrl
stos
leave
inc
sti
mov
dec
bound
enter
scas
nop
push
xlat
in
xlat
mov
int
aas
push
xchg
lahf
lock
mov
push
jle
push
ja
mov
or
push
mov
adc
lods
pop
push
leave
pop
popf
jb
jg
stos
mov
sbb
mov
movsb
cwtl
jmp
lods
call
add
gs
orb
pushf
pop
sub
daa
xchg
xchg
xchg
rorb
fsubrl
lods
cmc
inc
inc
clc
stos
mov
int
in
ss
push
push
lret
bound
jg
mov
xchg
cmc
sub
lea
roll
cs
pop
setb
inc
pop
adc
fidivrl
xchg
push
sub
test
sub
pop
xor
dec
mov
scas
pop
cs
cmp
scas
jae
aam
gs
test
and
mov
lock
mov
pop
fnstcw
int
fs
rcrl
mov
adc
pushf
loope
push
mov
das
inc
fndisi(8087
movsl
scas
jno
jo
movl
cmpsl
inc
or
and
mov
fs
imul
ds
jbe
push
cmp
pusha
push
andl
dec
mov
scas
xchg
mov
sub
ds
cld
adc
ja,pn
test
es
roll
cmp
xlat
push
or
pop
xor
lock
and
xchg
das
arpl
fistps
lock
lret
xchg
mov
jmp
popa
mov
cmp
xchg
cs
jbe
jg
je
setne
in
xchg
add
cmp
test
aaa
imul
pop
xchg
rolb
lret
add
in
mov
cmpsl
xchg
mov
mov
in
lcall
xlat
dec
cmovs
pop
sbb
sbb
in
cli
fwait
movsb
shld
js
cld
or
xor
popa
rcrb
mov
push
jge
push
lret
aaa
sti
lahf
add
push
inc
popf
ffree
mov
cltd
push
mov
nop
addr16
mov
insl
in
jnp
mov
les
ficoml
outsl
push
cmp
mov
adc
adc
nop
filds
mov
pop
loopne
cwtl
repz
repz
ljmp
iret
or
sub
les
add
inc
add
insl
popa
and
je
stc
push
icebp
sbbl
xchg
es
pop
push
call
ja
fwait
and
pop
pusha
xchg
adc
add
cmp
imul
lcall
add
dec
hlt
orl
inc
popf
cmp
insl
add
mov
push
push
push
mul
mov
dec
or
shll
daa
adc
inc
adc
cmp
aas
pop
jge
pop
or
dec
aad
lcall
shl
shlb
fmul
test
mov
jnp
mov
rcr
dec
mov
cmc
xchg
or
cmp
pop
aas
push
inc
pop
or
out
xor
testb
jbe
adc
xchg
imul
loope
in
sbb
inc
xchg
into
daa
jnp
int
lds
loopne
push
pop
add
fnstcw
std
jp
aam
dec
nop
jbe
jp
scas
cmp
insb
pop
push
sbb
in
push
pop
dec
pop
cmc
ljmp
ljmp
hlt
push
inc
pop
pop
sbb
adc
xchg
add
xchg
dec
jp
rorb
adc
mov
mov
sbb
sbb
xchg
nop
dec
jle
lods
sbb
lea
clc
jno
rcrl
imul
out
pop
jle
sbb
ja
ljmp
fwait
sub
add
sub
pop
call
jnp
iret
je
movsl
xchg
mov
pop
pop
sahf
push
movb
sub
mov
lods
mov
je
adc
lret
mov
or
xor
in
adc
dec
addr16
or
pop
popl
in
loop
push
dec
in
mov
clc
je
adcb
xchg
sub
push
add
sub
jbe
sahf
call
mov
movsl
cmpsl
fnstenv
cs
push
add
daa
out
mov
mov
in
fldl
xor
das
lods
add
sbb
mov
cli
imul
pop
jmp
movsl
push
notb
push
jbe
push
xlat
sbb
xchg
ret
scas
out
lods
out
dec
dec
test
movb
xchg
xor
and
pop
leave
sbb
and
xchg
rcll
push
gs
subl
add
movsb
nop
in
lret
adc
jns
ss
xlat
mov
fst
scas
dec
fs
test
movsb
es
mov
ret
mov
cmc
cmpl
sub
sarb
inc
dec
jnp
mov
push
mov
sub
movsb
sbb
outsl
cld
mov
int
in
push
aaa
ss
negb
ret
test
sub
xchg
addr16
xchg
lds
ja
imul
dec
mov
not
jge
out
push
push
push
mov
ja
loop
test
scas
daa
mov
mov
in
scas
mov
int3
inc
push
add
popl
scas
xlat
jmp
in
mov
mov
lock
movsl
mov
pusha
xor
lods
aas
push
jne
inc
test
scas
hlt
fimuls
out
insb
mov
mov
xor
or
sahf
pushl
mov
fsubs
pop
fidivs
mov
out
xchg
cmp
sbb
repnz
addb
das
ficoms
pop
adc
jmp
inc
cld
pop
sbb
stos
cltd
xor
loop
or
and
hlt
dec
jnp
cmp
sahf
xchg
imul
out
les
xlat
test
fldl
mov
inc
push
jae
cltd
imul
loopne
lods
cmp
xchg
sti
scas
push
scas
fisubs
in
cs
dec
push
dec
jg
scas
jnp
jl
aad
outsb
mov
addb
dec
jns
push
and
sub
or
adc
js
call
or
das
subb
push
arpl
in
jo
jae
ret
and
pop
hlt
stos
push
mov
lods
inc
es
es
push
xlat
xor
test
ds
adc
jl
enter
cs
int
in
outsb
adc
out
nop
pushf
neg
sbb
jge
xor
push
dec
adc
mov
mov
fidivrs
add
test
inc
dec
dec
add
stos
mov
dec
xchg
outsl
inc
mov
data16
es
push
xchg
pop
mov
mov
inc
and
xchg
cltd
fisubs
dec
pushf
or
outsl
push
or
push
xor
cmp
insb
outsl
xor
xor
add
sbb
enter
mov
sti
cmpl
mov
inc
mov
repz
pop
stos
push
fadds
into
jno
sbb
ss
mov
add
cmpsl
dec
push
and
xchg
adc
mov
mov
xchg
xchg
inc
and
push
repnz
jge
push
push
popf
xlat
pusha
scas
xchg
dec
pop
imul
mov
test
das
aaa
adc
sub
mov
sub
push
fld
cmp
push
xor
test
xor
out
lods
lods
xor
add
inc
pushf
pop
rorb
insb
insl
xor
cmp
mov
rcl
lret
xor
leave
lcall
and
fldenv
dec
loope
in
xchg
pop
mov
flds
loope
mov
xlat
mov
fadd
in
dec
call
sbb
pop
clc
test
inc
test
ss
sub
sub
xchg
daa
xor
popf
or
lea
lret
mov
pop
xor
insb
sbb
jne
pop
adc
aam
int
jp
pop
gs
lods
add
jae
fsts
call
sub
dec
test
mov
movsb
xor
push
enter
jmp
jbe
sub
ror
push
adc
iret
xchg
pop
pusha
cmp
nop
fs
faddl
shrb
adc
lock
xchg
sub
scas
push
inc
mov
mov
pusha
sub
filds
call
test
sbb
mov
pop
mov
shrl
data16
insb
lods
adc
mov
sarl
dec
push
add
popl
mov
adc
push
pop
lods
shr
shll
daa
lret
cs
dec
sbb
outsb
push
test
test
xorl
jge
dec
mov
jmp
test
popf
jne
inc
mov
mov
scas
insb
cmpsb
aas
xor
sub
lock
enter
xchg
pusha
cmc
sub
sbbb
mov
rcrb
inc
add
cltd
and
cwtl
adc
xchg
test
mov
push
insb
xchg
loope
fisubrl
xor
sbb
fdivs
jge
inc
addl
xorl
cltd
popf
ret
ret
sti
jns
lods
jge
xchg
imul
xchg
pop
adc
das
xchg
pop
out
adc
cld
push
aam
and
sub
testl
subb
mov
inc
mov
test
push
mov
test
fiadds
orl
pusha
push
loopne
pop
out
divb
fwait
into
inc
call
in
push
cmp
push
add
arpl
in
test
xchg
es
ljmp
pusha
push
cmp
ja
unpcklps
hlt
sbb
dec
adc
das
sbb
pop
dec
mov
add
pop
lcall
les
dec
mov
push
add
ljmp
test
pop
cmpsb
jg
add
and
xor
or
xchg
lret
ret
scas
adc
pop
xor
xor
dec
lcall
jecxz
ror
xlat
pop
sbb
cmpsb
int
shll
das
sbb
or
cld
add
push
lret
xor
cmpsb
add
ret
sub
aam
xchg
inc
add
outsl
xor
pop
stos
inc
pop
fistl
inc
push
jo
jb
fidivs
inc
xorl
cmpsb
pop
ret
mov
cmc
mov
sbb
mov
mov
jecxz
test
xchg
aam
lret
add
mov
add
xchg
fs
mov
push
mov
stos
mov
mov
add
xchg
or
add
dec
cmpsl
movsl
pusha
push
rcr
adc
xor
adc
push
or
pop
les
jb
mov
clc
inc
stos
jmp
pop
lea
pop
je
lret
sub
out
mov
fisubrl
adc
cmp
cwtl
insl
or
mov
xchg
adc
sub
lcall
arpl
sarl
mov
daa
stos
orl
or
push
push
or
cld
aad
mov
cmp
inc
mov
adc
xor
repnz
inc
mov
aas
xor
mov
cmp
fisubrl
sbbl
cld
jo
inc
push
xor
aas
sub
ret
sti
pavgw
lods
and
bound
sbb
mov
shlb
pop
in
adc
adc
or
in
sbbl
loop
or
pop
add
mov
cmp
mov
scas
insb
jno
loop
xchg
add
cwtl
jge
and
daa
jb
sti
leave
imul
and
mov
out
je
lahf
and
outsl
mov
mov
sub
mov
ja
cmp
aas
fdivl
mov
mov
fsub
mov
adc
push
jae
pop
jno
adc
daa
jnp
jne
ret
or
mov
in
sbb
stc
dec
jge
insl
dec
ds
xchg
mov
mov
push
out
cmpb
inc
cs
jae
xchg
lds
xchg
je
fstps
cbtw
sub
out
adc
and
and
es
adc
inc
loope
push
insl
sahf
outsb
push
jo
inc
pop
test
cld
fdivr
pop
jmp
push
lods
xor
lds
fs
outsl
push
mov
loopne
jg
push
sub
fs
mov
roll
pop
fs
jo
mov
add
xchg
cwtl
and
cmp
inc
xchg
dec
je
loopne
pop
xor
inc
inc
push
les
xor
lods
mov
orl
or
adc
mov
sub
ret
inc
rorl
fs
xchg
lret
lret
or
loope
sbb
xlat
push
xchg
pop
jo
stos
pop
adc
int3
cmp
mov
scas
outsb
ds
and
fldl
pop
mov
cmp
int
shlb
push
in
mov
pop
and
filds
push
cmp
or
ret
mov
adc
addb
add
sbb
outsb
push
imul
fimuls
addl
cmp
out
leave
sub
into
out
enter
jmp
fs
xchg
mov
stc
daa
loop
xlat
adc
xchg
mov
xorl
sub
in
push
jecxz
sbb
shrb
movsb
outsl
outsl
push
out
iret
cvttps2pi
addr16
xchg
xor
js
xchg
mov
cltd
pop
loop
out
test
cld
lods
cmpsl
sub
iret
stos
daa
or
sar
mov
jp
dec
test
jb
push
pushf
pop
ljmp
jnp
sbb
scas
mov
ljmp
push
ss
test
mov
cmp
jmp
dec
inc
fiaddl
loope
mov
test
insl
fmuls
das
sbbl
lock
cli
jo
lea
inc
es
icebp
call
sbb
scas
fwait
int
nop
fsubrs
and
inc
mov
test
sahf
dec
loopne
or
push
out
push
sub
jae,pt
inc
in
mov
jp
imul
cld
xchg
push
push
out
adc
and
sbb
xor
jb
sub
adc
movsb
lods
adc
inc
xchg
stos
testb
enter
push
or
xchg
fildl
jnp
rorb
mov
out
add
aam
js
ss
xchg
daa
jmp
lcall
xorb
jmp
clc
nop
cmpl
cmp
roll
cltd
int
stos
call
or
lds
lcall
data16
pop
cltd
loope
cmpb
movsb
out
and
andl
addr16
out
jecxz
push
sbb
in
jmp
mov
or
sbb
xchg
popf
pop
and
out
and
pop
jbe
sahf
mov
jle
aam
jae
add
xor
mov
inc
pop
push
fcmovnb
or
sbb
jo
out
xor
mov
xchg
jo
pop
xor
push
xor
mov
jne
cld
xchg
scas
add
mov
xlat
pop
fcoml
gs
imul
xchg
mov
mov
mov
lea
push
jns
xor
mov
sub
push
ja
push
sub
or
inc
or
or
jl
push
out
shll
hlt
dec
pop
mov
stos
test
dec
mov
imul
fsin
or
adc
cmp
shll
test
push
rol
add
push
fwait
or
push
insl
push
imul
adc
jl
loop
sub
and
xchg
lcall
xchg
pop
xor
repnz
jmp
movsb
xor
mov
mov
stos
aam
xor
adc
popf
ljmp
push
push
fsts
or
sbb
cmpsl
divb
sti
push
aam
sbb
jno
pop
or
mov
push
jp
into
cltd
int
add
jmp
into
sub
jo
les
and
jnp
nop
pop
sbb
xchg
fcoms
mov
dec
aaa
aaa
sub
daa
pop
leave
pushf
out
sub
insb
inc
lahf
jb
repnz
add
loope
ds
adc
jbe
adc
mov
mov
test
fisttpll
call
outsb
or
test
shl
jg
into
or
and
mov
outsl
mov
pop
and
or
aaa
or
pop
lahf
dec
std
out
cmp
or
pop
jl
bound
dec
inc
iret
into
fildl
inc
or
dec
stos
jmp
movsb
imul
out
xchg
xchg
or
rcll
popf
xchg
sub
aaa
jb
add
mov
xchg
pop
shlb
xor
pop
cmp
and
jbe
inc
pop
test
movsb
pop
cmc
push
pop
cmpsb
dec
insl
sub
push
jo
mov
xor
mov
mov
fnsave
mov
mov
mov
sbb
cmp
ljmp
gs
mov
loop
jae
test
mov
js
nop
xor
scas
imul
sbb
into
call
pop
out
das
sub
movsl
les
push
cltd
sub
add
pop
dec
add
ds
pop
sbb
and
or
push
xorl
cli
jo
xchg
or
test
inc
div
lcall
ja
push
or
lds
push
das
mov
shlb
mov
lret
sub
test
jns
rcrb
inc
aad
movsl
adc
shrb
shrb
dec
lds
ja
adc
sbb
jl
xchg
std
jmp
cmp
xchg
and
lods
add
aas
pop
rcr
loop
and
aas
dec
push
cmp
and
mov
mov
addl
mov
mov
lea
xor
push
pop
jbe
hlt
arpl
rcl
mov
push
jo
xchg
popf
ret
xchg
mov
insb
ficoms
push
xor
cmc
jnp
int
adc
inc
mov
sbb
cmp
mov
push
jnp
jl
mov
xchg
js
jge
mov
pextrw
mov
pop
inc
mov
sarb
jmp
test
stc
jb
jb,pt
and
xchg
mov
mov
test
cmp
sbb
xchg
popl
add
cmpl
dec
fiadds
cld
mov
je
jp
jnp
inc
mov
mov
popa
test
test
cmpsl
out
push
or
orl
imul
popa
mov
pop
dec
outsb
ljmp
push
notl
cmpsb
mov
shlb
ja
test
out
or
sub
and
fisubs
cmp
in
lahf
test
xchg
dec
les
loope
xor
ljmp
pusha
adc
pop
loope
adc
in
pop
dec
insb
inc
imull
loop
ja
nop
movsl
cmc
test
adc
adc
mov
fisttps
outsb
dec
popf
test
push
xchg
outsl
pop
js
imull
adc
subl
movsb
pop
cmp
mov
jg
insl
xchg
adc
xchg
jno
or
adc
bound
clc
mov
outsb
sbb
mov
dec
bswap
pop
bound
fcmove
adc
into
mov
adc
repz
faddp
pop
mov
and
dec
xor
add
into
xchg
add
insl
add
adc
inc
sbb
scas
xlat
mov
inc
and
inc
insb
mov
shrb
daa
fwait
jmp
inc
nop
jecxz
fcompl
incl
ljmp
pop
cwtl
mov
dec
gs
or
mov
fs
out
sbb
outsb
push
fwait
in
mov
sahf
cmp
outsb
ljmp
mov
cmp
cmpsb
cmc
je
xchg
seto
mov
mov
xor
popa
mov
jae
pop
mov
cmp
stos
fisttpll
cmp
jae
aam
sub
rcrb
icebp
adc
xor
cmp
shll
nop
xchg
mov
mov
push
fadds
jne
mov
jbe
in
mov
and
lds
mov
push
or
xchg
sbb
lret
ret
push
outsb
shrl
cmp
movsl
aam
xor
fdivs
fsubrp
addr16
xor
add
pop
jns
mov
inc
dec
movl
test
stos
cltd
jmp
int3
add
xlat
push
popa
pop
cwtl
mov
mov
cmp
or
int3
and
xchg
or
push
pop
pop
push
ret
dec
xchg
and
popa
loop
sbb
je
in
inc
jmp
pop
fsts
dec
cmp
dec
dec
test
xor
cmpsl
mov
dec
repz
test
push
push
movsb
cltd
dec
mov
lods
orl
mov
scas
popa
loopne
mov
mov
jnp
ret
ss
inc
jl
xchg
xchg
mov
fwait
ror
gs
sbb
pop
cmp
outsb
cmp
mov
int
stc
push
sbb
xlat
outsl
mov
jno
cli
cs
pop
lahf
int
push
add
cmc
adc
fstl
adc
lods
add
push
push
sti
jns
stos
dec
jo
jmp
sahf
jp
jp
dec
mov
test
push
inc
inc
outsl
push
sbb
adc
test
dec
imul
inc
jns
mov
arpl
sbb
out
mov
mov
mov
outsb
lret
jnp
dec
repz
xchg
ret
xchg
adc
mov
test
lahf
mov
mov
pop
movsl
imul
jbe
fnstcw
xor
push
das
jo
sub
fs
in
xchg
test
rorl
pop
cmp
incb
fucom
xchg
pop
mov
imul
outsb
lods
jecxz
scas
cmp
dec
jle
mov
sbb
sub
pop
rorb
jno
lock
xchg
repz
cmc
and
aas
cmpsb
add
jl
mov
mov
aaa
iret
xchg
lahf
adc
xor
mov
mov
jl
pop
add
outsb
enter
mov
mov
dec
add
and
fisubl
and
jmp
fldl
lahf
loope
outsb
loopne
fwait
rcrl
sbb
daa
dec
adc
outsl
outsl
rorl
mov
repz
cmpsl
out
je
push
cmp
fildl
mov
push
ret
fs
and
divl
lods
inc
insl
mov
xchg
test
cltd
mov
dec
jle
sahf
jbe
insl
data16
lods
mov
fdivr
dec
test
sub
mov
scas
fdivr
sbb
sub
sbb
dec
lods
jo
push
jne
lods
dec
adc
rcll
or
mov
ret
adc
cmp
aam
cmc
dec
outsb
xchg
jb
aas
inc
mov
rolb
shl
pop
imul
std
xchg
out
ds
inc
xchg
out
imulb
xor
mov
push
push
fwait
mov
rolb
out
mov
rorl
popf
addr16
movl
in
xchg
nop
imul
aam
mov
jne
jns
push
dec
push
sbbb
pop
repz
loopne
sbb
sub
push
fwait
in
out
lods
mov
ss
shl
and
cmp
dec
cmpsl
movsl
jo
inc
add
mov
mov
in
or
bound
mov
addr16
add
popa
sub
jmp
sub
mull
cld
mov
adc
fnstenv
push
push
jl
jb
pop
out
dec
mov
push
push
fcoms
je
sub
sub
insl
adc
pop
lods
mov
movsb
mov
push
ss
daa
stos
push
nop
testb
xchg
ljmp
mov
add
or
stos
xchg
and
imul
daa
mov
sbb
fcoml
jb
push
cmc
inc
clc
and
sahf
inc
rolb
mov
into
jns
arpl
gs
cmp
lods
adc
mov
popf
cli
scas
jg
push
mov
rclb
cli
push
mov
cmpsl
icebp
shrb
std
sub
xchg
push
sub
cli
scas
ret
add
rorl
cwtl
or
adc
jns
adc
add
sbb
push
xor
out
dec
or
popa
sbb
dec
dec
inc
mov
in
out
mov
test
inc
mov
outsl
testb
mov
clc
jns
ss
or
test
mov
cmpsl
cmc
inc
and
cmp
xlat
pop
test
popf
xchg
repnz
adc
out
orl
and
push
jnp
xchg
imul
sub
pusha
and
fs
ja
jne
loope
out
scas
test
jbe
cmp
mov
sbb
sub
gs
outsl
addr16
cmp
lret
insl
adc
cmp
xchg
and
dec
arpl
jns
je
mov
test
cmpsb
incl
and
xor
out
adc
mov
mov
call
in
and
lock
lods
adc
jns
xor
sar
movsb
mov
and
ret
into
jmp
scas
in
jo
jo
cmp
push
mov
and
xchg
xchg
mov
movsl
sub
push
popf
sub
insb
dec
sub
sbb
sub
ja
pop
jl
insb
imul
mov
test
idiv
adc
out
inc
lret
cld
jne
dec
shll
cli
out
loope
cld
lods
push
ret
mov
jmp
sub
adc
lret
popa
or
sbb
out
add
inc
loop
outsl
adc
mov
test
rcr
or
jmp
fcoml
das
test
lret
push
fnstenv
mov
ret
mov
dec
fucomp
push
mov
sub
add
sub
pusha
and
dec
stos
fsubs
fs
stos
and
stos
xlat
push
jmp
int
cmp
hlt
pop
sub
cmpsb
inc
cwtl
into
in
sbb
test
mov
push
add
pop
cmp
mov
dec
xor
fcoms
jno
xlat
das
xchg
sarb
loop
dec
rcrl
clc
sbb
dec
jmp
cmp
dec
push
xor
out
lret
minps
ficompl
mov
std
cmp
sbb
lcall
aam
pop
xchg
inc
mov
mov
scas
or
xor
inc
hlt
xchg
fdivrs
sbb
std
add
lds
mov
dec
pop
xchg
pop
jge
data16
add
or
jle
aas
mov
push
fists
das
fdivl
call
call
adc
xchg
xchg
in
dec
mov
xchg
int
testl
xor
xchg
adc
mov
dec
scas
mov
clc
test
les
sahf
popf
ret
mov
fcomps
push
fs
or
ds
in
dec
dec
add
jecxz
sub
pop
add
loope
out
jp
pavgb
mov
in
jbe
xchg
sbb
test
xor
js
sbb
jp
jp
mov
negl
das
fucom
cld
mov
xor
mov
test
into
xor
inc
adc
std
xor
jb
xlat
mov
stos
pop
in
cmp
xchg
inc
pop
inc
jg
out
out
jns
xor
pop
add
mov
sbbl
mov
xchg
lahf
pcmpgtw
mov
adc
jae
enter
stc
adc
xchg
jb
arpl
sbb
or
jg
or
outsl
sbb
cli
xor
dec
sub
adc
fdivrl
jnp
xchg
icebp
in
mov
pop
in
add
xchg
jecxz
adc
nop
mov
mov
movaps
cld
lahf
nop
add
xchg
adcb
push
sbb
xor
repnz
lds
stc
adc
test
and
psubb
mulb
test
sbb
mov
out
add
enter
arpl
mov
lahf
mov
push
scas
hlt
in
mov
sbb
adc
dec
mov
fisubs
fstpt
inc
mov
xchg
add
int3
push
inc
sbb
lods
sbb
aad
or
loopne
das
adc
dec
mov
mov
rcll
shlb
and
mov
add
add
addr16
pop
push
cmp
pop
inc
fldl
mov
das
add
inc
lahf
ja
mov
loop
jge
popa
mov
ja
fildl
sbb
sbb
cwtl
xchg
jmp
pop
mov
jge
inc
ret
add
int3
fistl
into
mov
push
jns
cld
lea
insb
push
push
fs
negb
daa
gs
es
outsl
or
loopne
and
icebp
pop
add
fdiv
aam
lret
push
mov
jns
lahf
mov
es
dec
test
ljmp
daa
xor
mov
push
cmpsl
xor
push
and
sbbl
daa
mov
fcomps
je
dec
repz
clc
aad
mov
fsubl
sbb
stc
in
pusha
ja
out
fwait
movsb
es
and
and
addl
mov
movsb
jg
aas
jne
std
call
mulb
adc
push
lcall
cmpsl
jo
jns
popa
insl
subl
mov
add
push
fists
ljmp
lods
jns
das
cmp
sbb
out
mov
cli
mov
and
push
loop
push
mov
and
lock
add
outsb
push
and
fcom
mov
leave
sub
mov
mov
or
jg
je
fwait
adc
and
jo
repz
pop
pop
xor
iret
je
pop
pop
mov
pop
dec
jle
mov
cwtl
or
pushf
and
add
xor
int3
hlt
pop
in
in
mov
adc
xor
or
push
in
xchg
xchg
jbe
xchg
mov
pop
call
mov
addr16
cmc
inc
in
push
rolb
popf
lods
mov
dec
sbb
jne
mov
dec
jne
into
jp
rcr
sub
aas
adc
sbb
call
sub
mov
sub
cs
xor
mov
mov
or
push
xchg
mov
stos
jecxz
jg
repz
mov
sbb
daa
mov
inc
jbe
xor
mov
cld
cwtl
jg
xchg
icebp
add
lret
push
mov
jecxz
push
inc
mov
mov
inc
sti
add
ss
cmp
jb
and
ficompl
mov
test
inc
fwait
sbb
push
in
fidivrl
inc
cli
pop
add
push
and
xchg
rorl
xor
and
pop
mov
and
push
mov
daa
mov
sbb
xchg
daa
out
popa
enter
mov
jnp
lret
fmuls
pop
xchg
xor
ljmp
and
adc
inc
mov
ljmp
adcl
movsl
mov
cwtl
jecxz
cltd
and
lds
push
xor
aaa
xchg
mov
xor
aam
int
mov
cmp
sbb
test
mov
adc
adc
xor
gs
repz
mov
leave
push
xor
loop
sbb
inc
flds
mov
incl
cpuid
sahf
pop
mov
mov
test
imul
popf
xor
pop
movsb
in
adc
fmuls
jg
nop
or
add
mov
sub
mov
dec
xcrypt-cfb
cmpsl
daa
pusha
xchg
repz
in
scas
xchg
jl
or
data16
andps
inc
ljmp
jae
das
insb
std
mov
fcmovnbe
stos
xchg
je
leave
pop
es
arpl
push
push
mov
push
test
pop
inc
jle
jns
bound
xchg
and
jg
mov
inc
out
pop
sarl
cmp
scas
add
cli
lods
repnz
or
adc
cmpsl
pop
push
sbb
ret
sub
dec
mov
dec
in
push
fcom
mov
popa
daa
mov
aaa
sbb
cmp
dec
mov
xor
sub
clc
push
push
aad
cltd
aaa
jbe
aam
mov
and
jl
dec
mov
mov
imul
xchg
xchg
jae
in
cmp
push
mov
xchg
pop
push
jbe
and
lahf
mov
mov
xor
adc
sub
inc
test
in
and
jbe
ds
xchg
adc
sarl
mov
add
ds
sub
xor
sub
push
repnz
mov
nop
sahf
lea
adc
push
or
mov
dec
addr16
adc
aad
leave
loopne
sbb
pop
cmpsb
out
jne,pt
pop
rcl
mov
xor
mov
pop
lea
test
addb
jp
fistpll
dec
mov
cli
scas
mov
cltd
cltd
cli
or
cli
hlt
inc
in
sub
cs
mov
dec
xchg
inc
test
pop
jmp
jb
inc
cld
iret
das
mov
pop
fcomi
push
sbb
inc
data16
xchg
sub
jl
mov
cmpsl
sbb
aas
mov
and
fsubrs
cld
pop
pop
jge
ss
add
xchg
movsl
dec
push
js
leave
js,pt
jmp
stc
mov
jbe
fsubrp
test
pop
cs
inc
subb
aam
es
adc
adc
push
ljmp
add
pop
xchg
push
test
mov
adc
loop
mov
cld
jo
insb
fcoml
repz
push
adc
cmp
mov
aas
fucomip
fldt
fnstenv
pop
imul
pop
push
out
mov
xchg
mov
sbb
inc
pop
sbb
dec
adc
xchg
cwtl
icebp
shll
and
in
pop
mov
int3
sahf
in
sarl
cli
dec
jno
jmp
xchg
outsb
cs
orl
mov
data16
test
xor
xchg
and
shl
cmp
mov
cwtl
mov
fists
shll
mov
jmp
and
ret
add
sbb
insl
add
leave
and
pusha
sbb
mov
sub
cmp
pop
les
inc
call
test
mov
je
add
in
mov
mov
sub
jb
sub
testb
mov
inc
xchg
jo
inc
push
jo
call
stos
fistps
cs
orb
ss
and
push
xchg
bound
push
fs
rcll
xor
lods
xor
mov
pop
jns
fnstenv
popf
fnstcw
outsl
mov
mov
cs
inc
xor
push
out
lods
mov
imull
inc
into
lcall
push
inc
inc
mov
pushf
jno
scas
push
add
mov
xor
scas
mov
mov
mov
add
xchg
aas
addr16
inc
andb
mov
ljmp
mov
int3
push
xchg
pop
lods
lea
jns
jns
jne
add
jnp
inc
outsl
outsl
xor
pop
sbb
aam
ret
cs
add
adc
jnp
cmpl
popf
jg
cmp
mov
sub
outsb
jle
jne
mov
cmp
ss
nop
cmpsb
es
sub
mov
in
test
push
sbb
xor
push
or
decb
mov
mov
lods
mov
mov
or
out
push
insl
addb
push
fcmovnb
adc
or
fbstp
mov
sbb
test
xor
dec
xor
popf
dec
xchg
clc
in
mov
mov
popf
pop
xchg
xchg
out
xchg
dec
cltd
inc
scas
out
arpl
ret
push
mov
test
negl
push
inc
push
js
lahf
mov
mov
les
mov
cwtl
sbb
in
inc
sbb
mov
mov
xchg
jbe
adc
inc
movsb
cltd
pop
dec
adc
xchg
rclb
movb
jg
frstor
insb
inc
xor
jp
jmp
mov
jl
or
imul
insb
pop
push
jmp
push
popf
adc
lods
hlt
push
addr16
xor
pop
imul
lcall
xchg
sub
cld
push
cwtl
ret
push
jb
ret
jno
xchg
dec
imul
jno
jle
in
imul
ss
sbb
sahf
adc
stos
cld
movsl
lret
inc
loope
push
jecxz
popa
fmull
roll
aas
dec
mov
adc
repnz
mov
cmp
xor
bound
jl
or
stos
mov
xlat
out
addl
or
jno
xor
in
xchg
jmp
jle
cmp
in
jns
into
jmp
aaa
rcrb
lcall
or
enter
imull
sub
xchg
outsl
in
mov
jae
or
movsb
sbb
std
sub
fidivs
cmp
and
mov
push
cmpsl
push
xchg
data16
sbb
and
jmp
inc
fsubrl
int3
popa
mov
es
out
test
mov
cmc
ret
sub
stos
mov
sahf
jg
xor
imul
arpl
cs
fmuls
mov
add
push
jnp
outsb
popf
fs
sub
lea
imull
cs
mov
sub
ret
jmp
scas
jle
or
mov
or
dec
jmp
lret
lods
ljmp
adc
jl
mov
aas
push
jle
call
clc
and
inc
in
sbb
mov
inc
int3
mov
mov
or
mov
sub
shl
das
pop
dec
or
dec
incl
bound
cltd
sub
es
dec
faddp
int3
cwtl
out
adc
in
insb
mov
mov
mov
push
adc
shll
dec
fidivs
lcall
movsb
xor
add
jmp
mov
jb
pop
mov
sarb
or
lea
mov
push
outsb
rcl
xor
jb
andb
adc
xor
jl
call
sub
call
push
sbb
test
sahf
loope
xchg
and
xchg
xor
xchg
and
mov
lods
push
cmp
mov
fs
dec
addl
out
aaa
cmp
mov
xchg
push
test
dec
call
add
pusha
mov
xchg
cwtl
mov
mov
and
adc
add
in
ds
insb
fiadds
ja
rclb
pop
cmp
arpl
icebp
cmp
push
ret
stc
subb
fsubs
jmp
dec
pop
adc
loope
leave
cmp
cvttps2pi
sub
push
mov
jno
inc
mov
mov
fdivrp
adc
dec
adc
out
std
int3
aaa
lods
push
fistpll
fsubrs
sbb
xchg
ret
jmp
inc
int
cmp
scas
test
mov
jbe
jnp
or
fdivs
fdivrl
xor
inc
mov
mov
jne
in
std
jbe
mov
enter
pop
mov
cmp
lock
insl
jg
mov
mov
jno
jg
es
dec
mov
push
nop
test
mov
xor
cmpsb
push
xor
mulb
sbb
adc
loope
jne
js
jg
clc
xor
cli
cwtl
fs
xor
mov
mov
sbb
and
iret
bnd
ja
rclb
scas
fistl
mov
fadd
stos
cs
and
in
adc
xchg
repnz
aad
test
jbe
cltd
sbb
xchg
adc
inc
pop
jp
test
mov
pusha
adc
jae
ret
jg
loope
outsb
push
fisubs
pop
rorl
push
divb
or
mov
mov
pop
lcall
pop
ja
or
cmp
lahf
lret
cld
push
xor
mov
ficoml
mov
cmp
pusha
gs
xor
inc
add
testb
movl
test
fdivs
and
sahf
stos
rolb
daa
mov
aas
fnstcw
and
pop
and
pop
test
stos
mov
jmp
xor
add
scas
call
cwtl
scas
js
call
pop
pop
arpl
scas
ret
in
in
leave
inc
nop
leave
push
mov
add
cmp
xchg
push
mov
sub
sbb
sub
daa
mov
and
in
popf
fists
lret
sbb
inc
lret
in
adc
cmpsl
lret
inc
pusha
and
xchg
stos
ret
outsl
repnz
mov
inc
loop
clc
adc
stos
sub
pop
sub
and
inc
pop
xchg
fstl
int3
or
cmp
pop
xchg
sub
bound
pop
movb
fldcw
mov
inc
jp
int3
or
ljmp
inc
add
out
add
pop
adc
std
movsl
pop
pop
in
xor
push
enter
adc
fbstp
daa
imul
lds
xchg
bound
mov
push
bound
cmpsb
mov
sub
je
lea
sub
and
xor
bound
es
push
cmp
pop
pop
mov
sbb
xchg
out
xchg
dec
and
or
mov
fld
mov
repnz
lahf
sub
jno
pushf
push
cli
das
push
mov
ljmp
sbb
lods
outsb
negb
add
bound
std
add
mov
lcall
and
sub
scas
push
adc
sbb
shl
or
jmp
jo
js
pop
lea
lret
add
jbe
inc
sbb
cli
test
inc
call
test
cmp
jnp
lcall
cld
loop
jae
jmp
and
cli
repz
jae
comiss
fnsave
xchg
push
or
call
jl
out
ljmp
insl
sbb
shll
dec
dec
lea
leave
ret
dec
hlt
rcll
add
adcl
mov
pushf
stos
mov
adc
pop
xor
mov
ret
pop
mov
out
pop
adc
jl
dec
outsb
shrb
mov
pop
dec
imul
add
sub
test
loop
fwait
cmpsl
loopne
es
mov
scas
and
stos
jae
jbe
inc
bound
xchg
dec
bound
lcall
mov
into
mov
jmp
jg
mov
mov
fsubr
sbb
outsl
daa
add
and
push
xor
or
aas
jmp
loopne
fidivs
out
sub
in
insb
daa
cwtl
rcrb
popa
fdivs
fidivs
sbb
enter
pop
xchg
mov
xor
loope
inc
ror
fdivrp
into
mov
popa
movsb
jecxz
cmpsb
fsubs
lods
in
cmc
sbb
cmpsl
xor
arpl
icebp
cmpsl
std
sbb
test
jo
xor
inc
or
cmp
jbe
cmpsb
mov
imul
jae
add
pop
in
inc
jg
add
sbb
adc
inc
xchg
std
dec
mov
rcr
or
xchg
in
rcll
std
popa
fstps
and
sub
cld
popa
imul
xor
leave
mov
sub
enter
sub
or
fsubrl
mov
push
mov
xor
lcall
imul
aad
xchg
push
cmp
add
bound
in
xchg
sub
test
mov
mov
fidivrl
in
lock
fistps
sub
dec
add
xor
xchg
inc
or
rolb
sub
pslld
sub
inc
push
fcoms
xor
sub
adc
add
sbb
cmp
inc
arpl
jo
mov
mov
pop
icebp
lock
lock
jl,pn
xor
lea
add
sub
cs
push
xchg
pop
lret
ss
test
scas
inc
int3
mov
pand
jecxz
sti
inc
cmp
push
pop
lret
jl
push
mov
outsb
pop
test
out
adc
arpl
pop
sbb
and
nop
and
aaa
js
aad
fistps
add
fstpt
mov
jb
jo
push
clc
lret
sbb
jnp
xor
popf
andb
out
jnp
movsb
mov
and
dec
arpl
outsl
sti
lds
fistpll
dec
xchg
lea
and
pushf
dec
jnp
xlat
push
sbbb
pop
adc
sbb
cmp
and
shrl
mov
lret
jo
mov
pushf
mov
mov
mov
pop
rcrb
ljmp
div
adc
repz
dec
dec
jp
gs
int
push
inc
hlt
int3
in
lahf
push
pop
mov
jl
mov
shrl
inc
movsl
lea
jb
jmp
pop
sti
jo
and
fstl
movsb
cld
sub
push
stos
lds
sub
movsl
cld
pop
xchg
fbstp
dec
dec
aaa
or
sbb
out
push
and
pop
push
xor
iret
jns
aam
mov
inc
stos
pop
mov
notl
div
xor
cwtl
mov
adc
mov
sbb
jnp
stc
mov
subb
xor
insb
and
cmp
sbb
mov
je
popa
mov
out
les
int3
inc
add
js
mov
and
jp,pt
lret
mov
cmc
xlat
jb
jne
mov
shl
int
insb
xchg
mov
jmp
lcall
mov
fstpl
or
mov
mov
push
stc
shrl
xor
cwtl
lea
jae
lcall
mov
movsb
xchg
jno
out
xor
pop
out
sbb
sub
mov
out
pop
push
jo
fidivs
push
lahf
aad
fs
pop
test
pop
xchg
cmp
test
inc
inc
mov
je
imul
int3
movsl
test
and
aaa
arpl
xor
xchg
sbb
jl
repz
incl
lea
ja
pop
or
int3
lret
test
out
dec
adc
adc
sbb
rcrl
cmpsl
adc
addr16
add
je
xchg
dec
jns
insl
pop
push
xor
loopne
rcrl
outsl
push
mov
test
mulb
xor
loopew
aaa
push
mov
mov
ds
xor
cmp
mov
in
mov
sar
test
shrl
in
popa
or
scas
mov
das
pop
testb
mov
in
cld
xchg
stos
cmpb
mov
cmp
out
push
jle
cmpsb
xorb
add
mov
mov
fnstenv
ret
mov
es
pop
xor
in
insl
add
xlat
mov
adc
imul
jle
aas
cmp
add
mov
je
movsl
shlb
add
hlt
fbstp
js
xor
inc
jb,pt
sbb
cmp
ret
mov
icebp
xlat
jge
jo
imul
and
sbb
inc
push
sub
jg
fsubr
outsb
fldenv
mov
sub
pop
inc
xchg
lret
sub
in
xchg
fcoml
idivl
outsb
or
bswap
cmpsb
in
or
arpl
addr16
jle
xor
pop
mov
and
push
sub
push
inc
ja
xchg
lea
ret
pushf
test
pop
lods
jmp
xchg
andl
fxch
jnp
xor
stc
das
fidivrl
insl
xchg
mov
xchg
cld
adc
mov
notl
ret
test
dec
sbb
icebp
lock
sub
sbb
das
cmovnp
movsb
repnz
addr16
jp
es
xchg
or
negb
mov
inc
push
sbb
or
sarb
hlt
rcrl
mov
movl
inc
adc
sub
aas
jne
inc
sbb
stos
cmpsb
push
jmp
aad
inc
and
mov
das
xchg
jb
out
inc
xchg
loope
pop
adcb
andl
dec
mov
and
adc
sbb
sbb
push
sub
mov
aas
sbb
cmc
test
push
jecxz
push
adc
gs
jbe
pop
fcomp
dec
cmc
repz
mov
jp
push
mov
cld
cmpsb
xchg
sbb
repnz
sbb
cmp
and
jmp
jb
icebp
jae
fwait
mov
sbb
inc
xchg
cld
outsb
ret
dec
and
sbb
pop
cmpsl
mov
ds
aad
dec
push
mov
mov
adc
popl
sub
jbe
xor
cmp
mov
dec
notl
testb
xor
inc
aaa
sti
repnz
sti
fwait
add
out
sbb
insb
out
mov
cwtl
pushf
loope
into
xchg
adc
popa
adc
cmpsb
mov
nop
test
subb
sub
jae
jnp
add
stos
sub
insl
xchg
cmp
lock
out
pop
popa
or
jno
sbb
in
jecxz
sub
xchg
shll
int3
push
stos
loope
lds
push
dec
xchg
sbb
unpcklps
inc
testb
fs
pop
mov
add
test
jo
sbbb
icebp
mov
ljmp
insb
aad
push
push
xchg
out
add
std
stos
cmc
aam
imul
stos
cmpsb
sbb
ja
mov
or
aaa
inc
mov
pop
xchg
inc
pop
in
pop
daa
lret
mov
out
cmc
dec
mov
pushf
or
jne
ss
inc
pop
jle
jno
mov
mov
lahf
lret
scas
jmp
jo
sub
outsb
aad
mov
sub
insb
fs
and
sbb
ljmp
push
scas
js
stc
negl
repz
out
dec
xor
ljmp
mov
std
movsbl
mov
cmp
dec
aad
push
mov
fcomip
inc
lcall
pushf
loopne
xchg
std
pop
pop
adc
adc
loope
or
xlat
inc
jg
xor
iret
push
mov
cwtl
cmp
test
movsb
dec
mov
push
fldt
hlt
xor
jo
and
shlb
call
call
lock
stos
out
js
cmp
add
push
es
sbb
scas
inc
bound
mov
cmp
and
sub
int
adc
pop
fmuls
aas
inc
mov
pop
mov
mov
mov
sub
fstpl
add
adc
pop
inc
dec
xchg
cwtl
outsb
hlt
js
push
inc
sahf
xchg
pop
leave
push
push
mov
jecxz
inc
stos
inc
call
mov
or
inc
adc
or
rcrl
sbb
stos
and
test
ret
push
or
dec
movsb
lods
pop
adc
enter
jns
lea
sbb
jle
mov
mov
inc
repnz
xchg
push
ja
fsts
fiaddl
scas
daa
adc
cmpl
fs
push
jl
psrlw
inc
stos
push
mov
cmp
adc
inc
fdivrl
mov
inc
mov
sbb
jo
push
fnstenv
mov
gs
mov
out
imulb
out
aad
push
ret
nop
movsl
push
dec
fcomps
cli
lock
ljmp
pop
jbe
cmp
mov
sarb
int3
mov
or
sti
mov
mov
test
ficoms
push
out
frstor
aaa
fcomps
or
bound
gs
cmc
cmp
lret
xlat
lcall
mov
dec
adc
repz
dec
mov
adc
adc
cmp
xlat
pop
cwtl
stos
mov
xchg
mov
in
or
jecxz
ret
xchg
adc
xchg
xchg
ljmp
movsb
sub
cli
sbb
adc
sbb
adc
ret
fs
sbb
push
ret
subb
pop
sarl
out
cmpsb
xchg
sti
cwtl
dec
cmp
cmpsl
gs
aam
iret
cli
sbb
fldcw
mov
push
push
and
pop
push
xchg
mov
fmulp
aad
xor
out
jno
xor
je
cmp
scas
leave
push
push
pushl
mov
inc
xchg
scas
outsl
int3
pop
adc
mov
add
lahf
jmp
xchg
stos
scas
stos
fdivs
sub
lods
pop
mov
mov
jnp
jmp
jge
add
sbb
rcll
fdivrs
inc
mov
mov
insb
cmp
jne
sti
ja
aas
or
fsts
mov
pop
cli
mov
cmp
jbe
pop
add
add
jns
cmpsb
scas
xchg
pop
fcompl
mov
dec
dec
imul
rol
cmpsb
mov
movsb
add
cmp
repnz
icebp
push
std
sub
xchg
dec
sub
jg
xor
test
push
push
or
pop
out
xchg
dec
gs
cwtd
aad
loop
es
or
pop
sub
jle
mov
cmp
xchg
outsb
ret
inc
out
lea
adcb
es
loop
out
insb
in
fcompl
clc
xchg
adc
xor
xchg
movsb
mov
jae
repnz
add
ret
lea
jge
ret
fcomip
mov
sub
hlt
fistpl
movsb
mov
push
in
test
ror
lcall
pop
test
xchg
xor
stc
adc
test
mov
ficomps
jmp
das
pusha
aam
xlat
mov
fs
dec
rorb
sub
push
ret
mov
xchg
push
enter
adc
ljmp
sbb
hlt
xor
rclb
pop
lods
mov
dec
add
pop
out
or
xchg
cmc
hlt
mov
xchg
xchg
xor
push
outsb
push
lock
push
mov
pop
pop
add
aad
mov
fldt
subb
addl
push
lods
fdivp
mov
xchg
out
es
les
into
sbb
loopne
testl
or
arpl
dec
nop
xchg
in
xchg
mov
xlat
test
out
lods
lahf
jnp
ret
cltd
scas
lds
insb
xchg
fstpt
addb
sbb
add
jle
bound
jge
cs
pop
rcrl
cmp
or
rcrl
add
xor
jns
cmpsb
imul
hlt
shrl
or
test
or
jmp
ljmp
and
add
jmp
cwtl
and
bound
shrb
jl
jno
std
pop
sbb
clc
arpl
mov
dec
cltd
fstpl
loop
pop
push
icebp
pop
or
ficompl
sub
push
xchg
sbb
sub
jle
jl
mov
mov
imul
cs
cmp
call
xor
xchg
and
xchg
mov
cmpsl
or
xor
adc
inc
cltd
pop
xchg
in
jp
sbb
or
pop
mov
popf
shll
cmp
pop
and
xchg
dec
lods
gs
push
sub
ret
fs
lods
mov
mov
scas
mov
imul
jle
push
push
push
fsubl
fstps
xchg
sub
lcall
cmp
jb
ja
rorb
fadds
sbb
stos
xchg
sub
or
das
xorl
push
movsb
mov
jns
cmp
test
leave
stos
jo
sbb
cs
xchg
adc
xor
mov
notb
ret
mov
xchg
int3
dec
out
mov
lahf
lock
and
jnp
mov
popa
mov
arpl
aaa
xor
or
fisttpl
cmp
stos
repz
imul
push
arpl
xchg
push
push
push
jg
cli
leave
mov
daa
push
xor
in
pop
or
cmp
push
sbb
out
jno
out
pop
mov
mov
sti
aaa
int3
pop
shll
xchg
lods
xor
and
sbb
push
xchg
mov
out
dec
jo
bound
and
int3
fstpt
ljmp
scas
jns
push
out
cmp
mov
jg
fistl
aam
push
ljmp
nop
addb
adc
cmp
add
jmp
push
mov
addr16
mov
fcomps
inc
push
mov
fwait
jmp
ds
shll
sub
ret
xchg
jmp
jl
aam
insb
jle
nop
insl
jp
lea
push
fimull
xchg
add
in
adc
fnsave
addb
pop
sub
cmp
inc
adc
stos
aad
xabort
ds
or
cmpsl
sub
fimuls
adc
addb
in
popf
sbb
jge
jae
add
jge
and
mov
fistpll
ret
pushf
add
movsl
repz
mov
push
cli
flds
mov
push
xor
fists
pop
push
push
addl
ss
or
insb
sahf
negb
inc
js
negl
mov
jno
in
and
aam
dec
mov
dec
pop
sub
push
inc
pop
inc
pop
mov
dec
jo
insb
into
cmpsb
add
or
lcall
cmp
ret
xor
ds
aad
mov
mov
insl
pop
inc
mov
mov
cmp
fadd
xor
pop
sti
hlt
mov
in
inc
cmp
data16
push
sahf
and
jmp
jl
xchg
and
pcmpgtb
and
ja
sbb
xchg
js
test
mov
dec
std
jbe,pn
push
aam
icebp
mov
sarb
adc
adc
cmp
dec
dec
adc
xchg
ljmp
insb
push
mov
sbb
inc
add
fidivrl
jp
mov
pop
lret
stc
and
lock
jge
add
dec
and
add
push
push
sub
cltd
push
jo
push
pop
aad
fwait
icebp
mull
aad
decl
insl
pop
clc
push
es
adc
test
ds
add
xchg
call
into
es
mov
jle
iret
and
lock
mov
gs
mov
cltd
cmp
popf
mov
in
or
jno
add
icebp
xor
push
sub
dec
pop
mov
jle
pop
data16
push
lods
movsl
cmpsb
mov
dec
fsubrl
inc
cmp
mov
je
shr
push
sbb
dec
mov
mov
xor
pop
xchg
push
add
push
mov
inc
push
lds
pop
shll
mov
xchg
xchg
and
into
add
ret
int3
in
push
mov
pop
jecxz
cwtl
clc
xlat
std
or
cmp
dec
pop
loope
mov
push
loope
mov
push
inc
pop
insl
subl
push
fcoms
fidivrs
mov
enter
dec
pop
inc
cmp
in
xchg
rol
sbb
push
jno
mov
les
loopne
movsl
mov
scas
push
jbe
jbe
movsb
fcomi
stc
adc
cld
or
int
es
dec
jg
push
sbb
clc
cmp
adcl
test
sbb
leave
xchg
sbb
cmpsl
mov
ror
add
inc
ds
cmpsb
inc
stc
stos
aad
mov
xchg
mov
sub
sar
out
inc
bound
stos
adc
test
cmp
test
lret
and
rorb
cmp
cmp
dec
cmpl
jne
outsb
add
rorb
push
xchg
push
sub
mov
and
fistl
sbb
mov
mov
pop
sbb
lods
cmp
fdivr
test
addr16
sub
scas
cmpsl
shrb
jge
repnz
cmp
cs
lods
pop
rorl
inc
lahf
mov
adc
inc
sbbb
daa
xchg
push
adc
sbb
push
push
test
push
imul
and
scas
ljmp
push
dec
cmp
in
jo
out
mov
scas
shlb
dec
lods
cmp
int
sbb
inc
ficomps
inc
jp
movsb
jae
sub
inc
jle
fisubl
push
and
push
sbb
imul
ret
clc
js
in
add
imul
mov
mov
adc
popa
pop
pop
or
repz
data16
mov
aad
gs
adc
cmp
mov
ljmp
and
push
orl
or
out
insl
dec
daa
xchg
adc
aaa
fisubl
and
je
mov
leave
ret
or
insl
ljmp
jmp
adc
push
rcl
and
mov
in
jmp
aas
cmp
mov
lock
cwtl
jecxz
ja
pop
or
pop
or
lahf
add
pop
jns
lock
stc
cmp
enter
mov
fimuls
xchg
repz
adc
in
and
adc
imul
cltd
xchg
outsl
sti
shlb
mov
adc
aas
inc
ja
xchg
xor
out
mov
push
push
cmp
sbb
scas
mov
pop
mov
add
mov
mov
push
sbb
test
jp
jb
add
cmp
xchg
and
aaa
ljmp
stos
sbb
movsl
mov
mulb
and
mov
mov
scas
cltd
sub
mov
loope
xchg
push
rcl
sub
mov
insb
lock
dec
lret
cli
iret
pop
test
adc
xchg
lahf
fldcw
or
cmp
and
inc
pop
mov
je
or
insl
insb
adc
dec
aad
adc
std
mov
pop
and
jno
adc
scas
pop
test
push
cmp
add
mov
xchg
insl
push
subl
cmc
fiadds
pusha
push
je
test
sub
loopne
or
in
jo
int
mov
jnp
xchg
push
dec
mov
cli
loop
cmp
in
sub
icebp
add
in
sahf
int3
fildll
sub
fnsave
pop
imul
pop
dec
push
sbb
cltd
xor
push
dec
cld
adc
mov
dec
adc
sbb
mov
out
daa
jecxz
and
pop
cmp
push
push
loop
adc
aaa
pop
jns
adc
ret
inc
fcmovbe
pop
dec
sbb
jnp
ret
fmull
fdivl
mov
or
push
mov
push
cld
faddl
rcr
add
daa
notl
cmp
dec
or
dec
xor
movsl
sbb
addl
out
dec
loop
mov
pop
mov
outsb
push
pushf
stc
mov
jecxz
aaa
push
std
mov
inc
mov
sbb
push
mov
xchg
and
jmp
dec
out
js
scas
jl
hlt
lods
ret
int
adc
xorl
inc
test
add
cli
sbb
inc
adc
ret
jno
xor
mov
pushw
push
loopne
add
cmp
cmp
lcall
aaa
in
data16
mov
and
lods
addr16
xchg
ret
jge
and
sar
lods
mov
jmp
xor
and
call
cmp
jg
mov
jmp
pop
xchg
and
out
mov
push
shrl
or
mov
dec
stos
lods
clc
jecxz
std
arpl
lcall
inc
dec
inc
cmp
in
lods
subb
mov
clc
push
mov
testl
push
mov
shl
ja
in
sbb
shll
loopne
outsl
in
icebp
xor
inc
jp
das
aam
lock
push
jbe
mov
xchg
fwait
jmp
push
cltd
and
jecxz
out
js
sti
jmp
es
data16
mov
cmpsb
gs
repnz
xchg
pop
jns
dec
ret
shrb
mov
out
inc
mov
push
add
imul
xchg
jl
jmp
lcall
stos
mov
gs
out
jb
xchg
dec
xchg
packsswb
out
or
sub
push
gs
lods
sti
add
mov
or
or
inc
shrl
mov
ret
lods
mov
xchg
xchg
and
testl
rol
scas
jne
test
fs
mov
test
aad
pusha
popf
add
dec
jne
mov
repnz
pusha
push
adc
sbb
stos
in
adc
inc
flds
loopne
and
add
push
jnp
data16
and
test
pop
mov
pushw
fwait
loope
loope
mov
repnz
stos
inc
popa
xor
pop
jns
das
nop
lcall
sbb
movsl
mov
or
xor
sbb
loopne
lcall
jl
es
cmc
adc
xchg
cmpsl
fnstenv
cmpsb
or
and
adc
jo
adc
aas
shlb
jno
cmp
push
ja
jge
movsl
ds
jl
xchg
cld
test
lahf
cwtl
mov
das
adc
dec
pusha
clc
jge
add
inc
daa
mov
or
es
push
push
roll
mov
rcrl
lods
inc
lods
sub
jg
cltd
dec
add
xrelease
sub
mov
and
not
pop
fmul
mov
or
and
out
xchg
iret
dec
xchg
jnp
dec
fwait
sbb
xor
jno
jbe
adc
jl
xchg
sub
stos
xchg
xchg
in
dec
or
mov
lods
and
and
sub
psllw
jnp
test
shrb
xchg
cmp
leave
xchg
shll
push
mov
and
inc
add
mov
push
push
std
dec
rorb
lret
das
or
mov
in
in
sbb
hlt
test
jo
leave
andb
push
xlat
adc
sbb
sbb
push
mov
jmp
jp
cmp
aam
and
rcll
lahf
fisubl
jmp
js
jno
bound
ss
and
or
add
and
outsl
sti
out
imul
fcmovnu
aad
nop
sub
pop
fcmovnbe
imul
push
movsb
les
mov
dec
sbb
cmp
sbb
pop
sbb
js
es
dec
cli
lahf
test
aad
and
pop
inc
xor
cltd
mov
xchg
rorl
cli
inc
out
sar
aam
jb
sar
repnz
dec
xrelease
popf
xor
movsl
cwtl
pop
adc
loopne
shrb
das
adc
push
or
jmp
jecxz
movsb
lea
xchg
ret
and
test
pop
sub
sbb
mov
test
fstps
icebp
ret
pop
xchg
stos
repz
divl
sbb
sub
nopl
mov
lea
xorl
adc
cmp
or
lods
js
xchg
sub
mov
idivb
pop
dec
dec
and
aad
mov
push
inc
repnz
fs
or
cmpl
lcall
arpl
xor
ret
pushf
mov
inc
test
cmc
xor
adc
jno
push
and
les
mov
and
adc
jno
sub
sahf
sub
mov
and
add
stc
std
dec
add
adc
enter
adc
sub
nop
sub
loopne
je
jecxz
mov
adc
pop
sbb
add
sbb
mov
jge
xchg
jge
cmp
mov
insb
pop
in
xchg
fmull
daa
inc
pavgb
sub
roll
lret
cmp
or
insb
adc
or
mov
adc
dec
sahf
mov
sbb
sub
test
test
inc
loope
test
pop
aad
xchg
xor
and
xor
sub
push
shr
xor
imul
mov
mov
adc
push
mov
rorb
pop
dec
out
sar
sbb
xor
stos
dec
std
imulb
call
or
js
push
mov
xlat
rclb
outsl
xor
test
mov
mov
mov
sti
push
mov
aad
sahf
mov
pop
inc
dec
jg
push
incl
shll
cmc
adc
mov
test
rcrb
in
lods
adc
xlat
fcmovu
sub
push
int
ds
insb
stos
test
dec
aad
jmp
lahf
test
and
fstps
insl
push
aad
cld
xor
test
gs
pushf
and
pop
popaw
shll
mov
pop
sbb
dec
rcl
adc
clc
mov
xchg
addr16
mov
insl
ds
jle
pop
in
test
cmpsb
outsl
addl
mov
out
gs
sbb
push
cmp
sub
in
and
mov
pop
mov
pop
sub
cmpl
push
and
pop
orl
push
jmp
enter
xlat
mov
jl
dec
test
adc
hlt
loope
fnstcw
test
cmpsl
lods
aas
cmp
mov
jmp
les
sub
rclb
setge
fisubrl
ljmp
mov
adc
adc
fdivl
popa
adc
outsb
pop
cltd
push
out
in
and
jmp
hlt
popf
mov
and
adc
test
inc
mov
push
cmpsl
divb
dec
mov
ret
lea
les
lcall
jns
fildl
mov
adc
inc
enter
jne
mov
xorb
jnp
and
addb
gs
add
stos
aam
sub
jo
lds
lock
xor
pop
push
sbb
and
jne
add
int
hlt
dec
pop
cmp
pop
adc
and
icebp
ljmp
mov
sbb
pop
mov
cld
daa
xchg
mov
jae
dec
fildll
dec
or
jno
xchg
fcoml
cmp
dec
and
test
in
inc
scas
test
jl
mov
ror
inc
mov
pop
and
sub
and
cmpxchg8b
adc
sub
inc
sub
xor
mov
icebp
pop
sti
pop
into
fistpl
sub
sar
sbbl
imul
pop
cmovbe
mov
scas
dec
les
jno
cmovs
out
addl
dec
sub
push
mov
push
mov
xchg
adc
into
and
pop
mov
iret
jg
and
fisubrs
and
cmpsb
je
cmpsl
xchg
ljmp
mov
push
fbld
mov
xor
mov
ss
pop
cs
mov
popa
std
and
xor
inc
int
mov
rcll
shll
mov
hlt
cwtl
orb
adc
pop
inc
loop
ss
andb
clc
mov
dec
sbbl
in
fidivs
xlat
inc
xor
pushf
mov
jecxz
push
outsb
mov
sub
aas
lret
cmp
cltd
lds
xchg
jp
sub
repnz
inc
scas
popa
mov
push
sti
test
and
ret
les
and
mov
clc
lea
jg
mov
testl
cmpsl
mov
in
inc
jp
sub
mov
mov
inc
add
jo
mov
data16
repz
mov
inc
fsubs
aad
inc
data16
push
rorl
adc
mov
push
dec
lret
push
jge
shlb
dec
pop
sbb
jge
mov
add
out
lahf
scas
dec
rclb
xor
mov
mov
cmpsl
ret
cmp
push
daa
or
sbb
xor
stc
daa
aas
adc
in
fistpl
lds
pop
into
aas
xchg
push
mov
insl
fwait
lahf
mov
push
loopne
ljmp
mov
xchg
mull
xchg
sub
sub
mov
xchg
repz
adc
xor
loopne
test
mov
push
cmp
imul
mov
and
sbb
pop
aad
aam
sbb
jp
rcl
dec
pop
jp
aas
sbb
scas
lods
fucomip
nop
adc
cmpsb
inc
mov
aad
dec
jmp
xchg
sbbl
inc
xor
mov
jo
or
mov
and
xor
insl
movsl
mov
and
xchg
adc
or
jne
adc
ss
aaa
adc
push
mov
fstpl
push
xor
add
movsb
mov
in
jns
add
in
adc
sub
inc
fnstenv
dec
cs
mov
mov
int3
mov
pop
lods
and
mov
xchg
in
add
pop
dec
mov
arpl
jns
shll
jge
xor
insl
in
movsb
mov
ljmp
insl
outsl
test
sub
jne
fstp
in
pop
lret
pop
aad
and
xchg
ds
rol
or
sub
mov
hlt
fld1
xor
inc
pop
push
and
mov
cwtl
xchg
fwait
shrl
inc
icebp
stos
mov
push
repnz
inc
mov
and
imul
call
inc
pop
data16
add
in
sbb
mov
dec
cmp
xor
test
jae
in
lods
inc
repz
add
lcall
sbb
push
push
cmp
adc
nop
fimuls
out
pop
adc
push
daa
testl
inc
stc
fucomi
lret
in
add
fnsave
ror
pop
sbb
inc
xchg
push
cmp
adc
cmp
rorl
aad
fildl
test
arpl
push
xor
inc
cmpsb
imul
or
pop
xchg
imul
sbb
stos
xchg
sub
lret
lods
pop
fsubs
fdivl
call
push
push
mov
repz
cmp
mov
or
push
aad
mov
jae
call
jle
movsb
shrb
divl
cmpl
lahf
xchg
daa
out
hlt
fidivrl
rolb
add
cmpsl
insl
notl
inc
mov
or
es
jge
clc
mov
in
out
adc
adc
xchg
stc
scas
and
imul
je
cwtl
cmpsb
imul
mov
mov
je
mov
in
cltd
mov
pop
xchg
ffree
push
imul
addr16
aam
in
xchg
clc
xor
orl
shrb
jg
ljmp
dec
cmp
mov
push
nop
or
push
clc
hlt
fstpt
sbb
dec
mov
lods
mov
mov
xor
shrl
sbb
movsb
mov
sbb
sub
mov
scas
pop
pushf
mov
fldl
stos
pop
movsl
popf
int3
jmp
repz
push
lret
lret
lea
mov
stos
ljmp
mov
pop
out
add
mov
ffree
cmp
es
mov
adc
xor
mov
xchg
xor
sbb
sub
arpl
mov
mov
pop
bound
mov
leave
lods
mov
xchg
insb
ljmp
pop
imul
fdivr
inc
hlt
pop
dec
adc
mov
movsb
inc
dec
int3
jbe
jle
cmp
jl
mov
movsl
ljmp
out
out
cmp
xor
outsl
scas
sbbb
xchg
and
push
andb
jle,pn
add
mov
sbb
cmp
mov
shll
xor
vmovhpd
push
inc
neg
mov
scas
mov
lret
and
mov
dec
jge
stc
push
adc
pop
mov
in
sbb
sub
adc
ficoml
pop
add
aad
stc
cltd
hlt
sarb
call
scas
dec
push
xchg
idiv
fcompl
repnz
mov
and
and
subl
arpl
dec
push
adc
mov
xchg
mov
mov
pop
fildl
imul
mov
xchg
negb
cli
outsb
aad
dec
sahf
insl
sbb
lahf
les
shll
in
in
pop
fdivrl
lret
sbbl
cwtl
test
cwtl
popf
repnz
xchg
mov
push
dec
xchg
cmp
adcl
xor
cli
mov
dec
sbb
jns
sahf
out
pop
dec
insb
pushf
sbb
jne
sti
mov
js
push
arpl
jns
jo
inc
int3
ret
push
negl
test
xchg
popa
add
dec
push
mov
cmp
mov
pusha
push
dec
aam
repz
outsl
sbb
hlt
or
dec
inc
cld
fcomps
inc
scas
pop
jno
es
inc
ljmp
lahf
jae
lds
stc
aam
mov
inc
scas
pop
scas
loop
sahf
in
lods
push
lods
test
sub
shrl
pusha
inc
iret
jbe
dec
jecxz
fists
pop
outsl
mov
add
cmp
xor
mov
xor
jo
std
cmp
adc
mov
cmp
mov
mov
pop
hlt
xlat
push
cmp
sahf
jne
jne
cmp
xlat
sbb
mov
scas
icebp
aad
mov
cmp
mov
test
pop
add
jne
inc
add
ret
adc
xlat
ss
test
mov
dec
dec
add
and
test
outsb
enter
movsb
add
pop
mov
dec
xor
ljmp
repz
push
and
dec
lea
pusha
xor
mov
and
sbb
and
jl
mov
push
out
cmpsl
je
movntq
call
push
add
push
aad
ss
out
dec
sub
jnp
divl
je
xchg
sbb
clc
add
push
sbb
pslld
push
outsb
hlt
or
mov
push
lcall
lock
mov
jl
mov
fdivrs
jle
loope
xchg
fstl
es
call
or
mov
lahf
lcall
mov
jmp
out
popaw
ficoml
dec
insb
or
mov
adc
sub
adc
je
and
pop
repnz
xchg
push
cmp
imul
scas
mov
xor
mov
mov
mov
sarb
iret
sub
std
dec
jmp
in
test
ds
jae
jnp
inc
in
in
mov
mov
xchg
aad
jne
or
ffreep
test
das
push
enter
xchg
insl
xchg
push
les
inc
mov
mov
push
cmp
lds
push
mov
test
negb
test
loope
pop
insl
jmp
in
or
add
dec
cmp
fsubrl
nop
loopne
or
push
adc
out
in
loopne
scas
fimuls
ds
mov
loopne
ret
adc
outsb
cmpsl
test
mov
dec
inc
insl
loope
test
mov
lret
cmp
push
mov
lods
mov
mov
sarl
inc
inc
or
cmp
insb
and
xlat
les
fists
ja
pop
jno
shl
pop
sub
sbb
mov
out
scas
in
out
sbb
sbb
and
push
mov
cltd
and
in
push
and
jns
dec
push
jo
xor
pop
cmp
mov
pop
dec
enter
ret
out
mov
jb
pushf
cmp
push
cld
movb
ja
test
dec
mov
call
and
xor
nop
loop
psraw
xor
test
sar
ljmp
pmullw
int
xchg
and
js
add
les
inc
mov
fwait
mov
in
adc
cmpsb
iret
and
inc
push
mov
sub
or
imul
sbb
outsl
roll
mov
fimuls
push
lret
lea
mov
jno
aad
xchg
test
dec
mov
push
mov
pop
rcrb
dec
loope
jns
pop
fistl
adc
into
ja
mov
test
gs
rolb
std
sbb
dec
sbb
pop
mov
mov
ds
mov
loopne
std
les
inc
inc
sub
dec
sbb
cmp
or
xor
cmpsl
sar
dec
inc
das
fldl
jg
test
sti
stc
lods
inc
xor
dec
pop
pop
nop
in
inc
sbb
cli
mov
sub
or
xchg
ret
push
xchg
add
mov
clc
pop
xchg
push
pop
aad
or
xchg
xor
icebp
mov
or
inc
fistpl
push
or
dec
mov
repz
push
mov
icebp
std
and
xor
js
fsubrl
push
push
cmpl
negb
notb
movl
dec
pushf
cs
xor
leave
lret
es
sahf
pop
xor
lret
stos
cmp
push
jne
ret
push
or
cs
shlb
bound
addr16
aas
mov
and
cli
push
sub
add
xchg
popa
jne
jge
out
out
sti
call
push
int3
push
outsb
push
loop
jmp
repz
mov
ljmp
sub
ja
sub
test
rorl
cli
push
jae
shr
dec
out
popf
fisubl
mov
cmp
les
popf
jns
cmp
jbe
test
int3
out
aam
into
ljmp
andb
mov
pop
push
loopne
adcl
in
mov
sbb
dec
mov
andl
imul
pop
push
outsl
add
cmp
inc
cmc
inc
lea
mov
fwait
inc
roll
mov
jg
mov
jmp
cmp
addr16
clc
mov
sub
sbb
lret
inc
push
add
jae
std
cmp
shl
pop
cmp
jo
call
cmp
mov
fsubrl
mov
fbld
divb
es
call
push
adc
lahf
mov
or
adc
push
add
orb
leave
scas
stc
in
jne
xor
jno
mov
inc
repz
cmp
aas
jge
test
icebp
popf
sbb
aam
lods
sarb
out
addr16
nop
mov
in
lret
outsb
inc
in
jge
fs
xchg
jo
and
sbb
clc
sbb
push
adc
mov
inc
fistpll
repnz
int3
stos
mov
ss
in
bound
adc
sub
insb
mov
or
mov
jnp
fisubs
cli
imull
jecxz
ds
xor
out
hlt
arpl
shll
leave
dec
mov
jecxz
sbb
pop
in
mov
icebp
sbb
cmp
imul
cli
loope
in
or
xor
jns
inc
test
pop
xlat
inc
mov
jge
or
movsl
mov
push
or
fcoml
roll
push
insl
cmpsl
jnp
pop
add
leave
and
jae
xchg
jmp
cmp
adc
lods
ret
sbb
lret
iret
jp
mov
xchg
fisubrl
leave
ss
scas
test
roll
or
xor
sbb
je
movsl
rolb
ss
cltd
cld
sbb
pop
lcall
pop
fisubl
and
xlat
movsl
cmpsl
cmp
mov
leave
neg
lret
lcall
inc
push
inc
dec
bound
int
or
push
xchg
dec
out
mov
dec
dec
pop
loope
add
dec
clc
arpl
add
int
xchg
push
cwtl
rcr
adcb
jno
push
mov
test
out
inc
les
or
es
xor
ja
ljmp
mov
xor
xchg
sub
cmpsb
mov
ror
lea
jne
fldenv
pushf
cmp
jl
cmpsb
lea
xor
fcomps
stc
outsl
dec
ljmp
jecxz
iret
mov
xchg
shlb
dec
stos
xchg
ljmp
lahf
ss
pop
sub
testl
stc
call
jnp
add
push
hlt
jne
push
xlat
xchg
or
enter
cltd
std
add
cltd
push
sbb
sub
cmpsb
loope
mov
adc
jo
imul
sub
mov
sbb
dec
cmp
arpl
frstor
cmpsb
mov
test
xchg
shll
pop
jge
push
add
push
jge
lret
jae
push
jns
pop
cmp
pop
outsb
in
jne
xor
icebp
mov
test
add
outsl
rorb
add
mov
sahf
dec
fsubs
arpl
xor
mov
pop
cmp
jno
ljmp
ret
jbe
sahf
jmp
or
ljmp
dec
inc
sub
cmp
shl
add
aam
xchg
push
sbbb
outsl
call
bound
mov
or
sbb
bound
jge
rcrl
ljmp
je
cs
jae
push
ss
inc
mov
les
jnp
xor
cmpb
out
rcrb
imul
scas
sarb
into
mov
fistpll
loopne
xor
add
sbb
fisubl
mov
addb
insb
enter
inc
xor
lret
mov
cmp
xchg
and
ret
pop
mov
cld
dec
inc
pop
icebp
push
dec
mov
outsb
mov
fidivrs
mov
sbb
or
sub
inc
repnz
out
jp
movsb
or
shrl
jnp
test
and
lock
xlat
sub
jae
sub
sbb
push
outsl
add
cltd
clc
lock
enter
cmp
push
movb
push
push
daa
inc
leave
imul
das
loopne
inc
ja
pop
cmp
in
enter
in
xchg
cmp
leave
jg
push
mov
out
push
mov
and
mov
cmpsb
dec
jb
decb
nop
jg
mov
das
xchg
insb
jbe
cmpl
iret
push
in
fbld
roll
rorl
mov
pop
mov
xchg
push
aas
or
pop
aad
popf
fidivs
xlat
rep
bnd
pop
dec
in
xchg
out
iret
repz
mov
and
sub
outsb
lods
push
cli
and
push
loopne
jbe
cmp
nop
sbb
push
jo
sbb
rorl
sbb
xor
and
cli
or
nop
out
lret
jne
adc
mov
lock
adc
and
jns
inc
or
cmp
ljmp
cltd
dec
insl
sub
mov
or
xchg
add
repz
jg
sub
xlat
testb
pop
inc
loope
add
adc
mov
je
aas
fistpl
sbb
and
dec
sti
add
ss
out
push
adc
push
adcb
cmp
or
out
adc
js
popa
daa
jle
xlat
mov
ficompl
pop
mov
adcl
mov
sbb
inc
lret
jo
bound
xor
and
cmp
cwtd
stos
inc
loope
lods
stos
dec
sbb
or
mov
into
daa
imul
xchg
push
mov
sub
sub
arpl
xchg
push
shlb
imul
js
and
sbb
mov
fidivs
add
cld
or
fwait
mov
inc
inc
stos
mov
aas
dec
xor
daa
push
ja
mov
sbbl
std
or
sub
pop
rcrl
adc
dec
lods
mov
sub
cmpsb
int
xchg
cmp
adc
push
mov
sub
mov
mov
test
inc
sbb
and
jl
inc
mov
in
xchg
push
lret
jno
fdivr
pop
test
add
xchg
cld
lret
lds
enter
pop
out
scas
inc
loopne
lcall
xchg
pop
lock
push
mov
imul
cmc
test
xor
ljmp
les
mov
hlt
jg
xor
std
sbb
sti
pop
fwait
sbbl
rcll
popf
xor
in
lods
mov
add
push
fistl
cmp
popf
arpl
cmp
dec
jns
sti
dec
shl
or
dec
or
mov
sbb
in
sub
mov
xchg
pusha
rclb
inc
orl
mov
push
xchg
in
cmp
jnp
mov
sahf
mov
outsl
fwait
sbb
test
enter
iret
adc
push
push
into
mov
lock
xchg
push
fs
cmp
or
shll
pusha
mov
xchg
adc
push
cwtl
xchg
add
popa
cmp
stos
mov
xor
sbb
sub
in
xor
sub
dec
sub
out
aam
arpl
and
cmpb
dec
xchg
test
cmp
dec
pushf
movsl
sbb
sub
sbb
jl
addr16
lods
or
xor
adc
mov
inc
es
jns
popa
popa
aaa
aad
or
outsb
imul
pop
pusha
insb
leave
fstpl
or
dec
cmp
popaw
ss
add
mov
subl
mov
add
outsl
incb
cltd
lret
repz
lahf
sbb
in
dec
adc
jl
mov
cmp
pop
mov
fdivs
mov
out
cwtl
daa
xchg
sbb
or
mov
int3
mov
mov
and
add
rcrb
aad
xor
in
outsl
cld
inc
dec
jmp
jecxz
mov
cwtl
les
aam
lea
jae
jnp
mov
xor
and
mov
add
inc
leave
push
jecxz
adc
rclb
mulb
xchg
out
aam
xchg
cmp
pop
mov
pop
out
push
icebp
addb
fnstsw
fbld
pop
lods
sub
movsb
cmp
and
out
add
mov
push
rcll
mov
push
aad
jae
imul
fldl
inc
loope
test
ret
mov
xor
or
add
aas
jecxz
stos
lahf
pop
aad
pusha
movsl
loope
inc
mov
iret
sbb
jmp
xor
mov
lods
pusha
repz
cli
subl
out
call
xor
xchg
xchg
in
imul
push
xchg
and
imul
out
push
cli
xchg
xlat
das
cmp
out
aaa
sbb
div
cmpsb
pop
xchg
xchg
hlt
rcll
mov
xchg
les
pop
push
inc
lret
stos
lds
dec
es
gs
test
fcmovnb
adc
pop
jle
pop
pop
inc
push
cmpsb
test
mov
loope
call
jmp
es
push
dec
sbb
cmpsl
mov
cmpsb
cmp
ret
xor
fistpll
sbb
popf
lret
lret
icebp
xchg
enter
push
inc
xor
cli
cmp
cltd
xchg
fbstp
push
add
stc
jbe
pop
jmp
outsb
nop
adc
push
jno
jo
and
data16
mov
pop
int
jbe
ret
cltd
adc
pop
fldenv
push
test
sbb
push
lret
mov
nop
pop
and
loopne
punpckldq
ja
addl
mov
jg
push
out
mov
out
inc
movsl
fwait
call
mov
fbstp
dec
gs
call
fisttps
mov
out
sub
push
lahf
xchg
mov
testl
dec
add
sub
sbb
xchg
adc
push
cmp
or
fwait
adc
repnz
adc
sub
mov
mov
sahf
pop
push
inc
xor
push
nop
sarb
dec
jnp
pop
adc
ret
and
lret
mov
int
push
addr16
jno
mov
ja
xor
fsts
mov
arpl
cmp
push
insl
lret
dec
bnd
mov
inc
cs
xor
mov
pop
jnp
imul
xor
and
adc
fildll
rcrl
jmp
dec
xor
and
in
dec
ret
adc
inc
pop
sti
dec
jne
addr16
jl
xchg
pop
mov
pop
xchg
cmp
cwtd
stos
xchg
or
push
ret
xchg
mov
jo
add
cltd
dec
imul
mov
dec
push
xor
push
incb
cltd
test
xchg
fcmove
push
cs
pushf
rorl
test
sbb
jb
xchg
js
inc
or
test
cmp
addb
adc
mov
imulb
pop
mov
adc
std
xchg
push
jo
loopne
xlat
fs
push
sub
aad
data16
leave
mov
ret
mov
add
loope
mov
add
dec
inc
xor
push
inc
pop
sahf
cmpsb
mov
mov
movsl
test
push
fmul
bound
cmpsl
aas
sub
xor
sti
rcrl
jns
mov
xor
adc
inc
mov
mov
and
add
scas
mov
push
jne
jns
cmpsl
hlt
scas
lods
fcmovb
fsubrs
cmp
and
xchg
jmp
ss
rolb
loope
jg
repnz
sbb
sub
outsl
cltd
in
mov
jae
adc
hlt
repnz
insb
mov
stos
jl
ret
pop
cli
in
add
xor
cli
and
pop
and
aam
push
mov
mov
pop
sbb
sub
adc
roll
jl
pushf
and
in
mov
fsubr
aas
rolb
pop
jns
lea
into
mov
xchg
or
sbb
popf
ret
frstor
xor
and
addl
or
dec
adcl
xchg
aad
ret
jecxz
cli
and
cmp
mov
movsb
in
jno
out
test
cmpsl
sbb
aaa
mov
dec
pop
or
pop
jnp
dec
lds
or
sub
pop
test
imul
xchg
clc
cwtl
shrb
push
or
mov
roll
fcompl
nop
push
xor
inc
pop
dec
lock
push
ret
mov
std
push
dec
jno
outsb
les
mov
cmp
jl
lret
xchg
push
xlat
setns
ret
inc
sbb
push
fstpt
add
pop
pop
pop
dec
jecxz
lret
dec
test
mov
pop
inc
mov
pop
lds
mov
sbb
dec
cmp
add
sbb
jbe
jns
inc
ficompl
xchg
xchg
pop
push
stos
and
rcrl
pop
js
shr
mov
adc
scas
pop
divb
inc
xchg
jo
les
mov
ljmp
iret
movsb
pusha
dec
in
pop
mov
mov
mov
jecxz
ljmp
inc
push
pusha
sub
adc
inc
popa
xchg
sub
mov
pusha
sub
adc
fwait
inc
imul
push
sbb
jecxz
add
push
dec
inc
in
push
add
mov
mov
jns
xchg
push
push
movsl
fwait
stos
insb
xchg
ljmp
enter
sbbb
jmp
filds
es
les
flds
icebp
sarb
and
sub
mov
cmp
cltd
in
push
inc
mov
scas
ds
pop
dec
popf
mov
clc
dec
test
inc
pop
xor
mov
or
out
add
fcoml
ud0
dec
lock
adc
inc
stos
call
xchg
dec
call
pop
jae
imul
in
push
xor
sbb
jge
int
rorb
jmp
lret
loop
pop
mov
imul
cmp
scas
mov
add
and
in
mov
pop
pushf
ja
in
add
insb
cmp
insb
fstl
nop
movsl
fimull
adc
loope
stos
dec
stos
clc
lret
and
enter
push
push
mov
sbb
das
or
ret
push
add
js
dec
mov
cmp
jmp
pusha
leave
dec
aad
sti
pushf
cmc
sti
sbb
jmp
pop
xchg
push
jl
sbb
mov
mov
loopne
lahf
xchg
stos
aaa
sub
aas
push
and
pop
fidivrs
ljmp
pop
mov
mov
fdivs
push
hlt
push
std
mov
add
cmc
pusha
mov
adc
gs
or
fsincos
addl
xor
push
push
out
add
cltd
cmp
cmpsl
shll
cmp
dec
pop
ss
negl
out
movsl
inc
xchg
into
movsl
scas
rorl
jb
lea
jecxz
icebp
inc
movsl
rcll
scas
outsb
fwait
shl
mov
into
xor
sbb
leave
out
sub
test
pusha
fwait
les
lods
inc
jle
aaa
lret
jecxz
stos
stos
out
sbbl
adc
out
out
scas
xor
xchg
sarb
add
mov
scas
fstl
out
jg
pop
add
shll
mov
jno
push
out
jl
jecxz
arpl
mov
es
stos
or
add
ljmp
pop
test
mov
mov
cmp
ja
lcall
sub
cs
and
aas
loop
sbb
stos
xor
xchg
jno
adc
mov
jae
xlat
les
or
mov
rolb
add
orb
stos
orl
cs
fldl
pop
nop
lret
hlt
inc
mov
dec
test
mov
bound
insb
jle
movsl
mov
call
sub
xchg
and
mov
sbb
cmpl
xor
bound
inc
fiadds
pusha
call
sbb
icebp
imul
lods
cmp
mov
cmpsb
test
stos
adc
pop
jae
lcall
xchg
xor
loopne
mov
icebp
insl
mov
mov
jmp
mov
or
ret
cli
mov
cltd
mov
xchg
xor
adc
push
and
and
mov
dec
mov
inc
movsl
fs
pop
jl
enter
push
call
cmp
or
ret
stos
sbb
sub
inc
rcrb
pop
in
out
pop
xchg
out
add
pop
outsl
clc
push
push
ja
and
sub
pop
pop
jp
test
mov
push
stc
jg
add
mov
rcrl
xor
push
xchg
std
inc
cmp
dec
lret
sbb
imul
iret
in
je
clc
add
mov
rorb
cmp
imul
jno
sub
mov
cmp
inc
loopne
fdiv
cmc
adc
push
jbe
mov
scas
mov
mov
icebp
cmp
cli
and
fistpll
lock
flds
cld
aad
out
mov
xor
aas
fbld
insb
jg
push
and
arpl
sbb
pop
dec
mov
mov
cmp
xchg
and
and
mov
mov
movsb
incb
ret
mov
fs
xchg
xor
sub
sub
jp
inc
adc
adc
aaa
mov
sub
add
mov
sahf
adc
movsb
fildll
in
and
loopne
or
inc
leave
movntps
fucom
sbb
nop
cmpsl
xchg
mov
mov
jp
and
jmp
jmp
loopne
jns
inc
mov
adc
pop
push
mov
shl
test
sbbl
out
pop
daa
push
mov
xchg
pop
in
push
aaa
push
dec
rorb
mov
popa
jo
fwait
push
nop
hlt
cmp
pop
mov
or
inc
ret
push
cmp
cltd
out
aad
out
cmpsl
nop
push
in
sarb
jecxz
ss
dec
cmpsb
inc
outsb
jb
loopne
cmp
and
data16
sahf
sti
inc
imul
ja
mov
ja
push
out
xchg
jno
in
imul
dec
xchg
mov
jmp
and
push
sbb
into
fists
push
adc
sub
repnz
in
push
stc
mov
or
xchg
xor
xor
and
cwtl
adcl
jle
pop
in
mov
mov
xor
xor
mov
scas
icebp
pop
ret
ret
ds
cmpsl
repz
int3
repz
fucomp
mov
mov
outsl
mov
jb
lret
jl
push
or
push
sbb
rol
repz
rcrl
xlat
dec
push
cmp
shrb
scas
adcb
inc
mov
dec
pop
sti
movsl
js
icebp
adc
fcomp
mov
and
adc
mov
push
lea
loop
das
mov
cmc
ja
iret
rorb
cmpsb
push
clc
shrb
push
lahf
and
push
xchg
sub
inc
inc
shll
test
or
outsl
push
jo
and
lds
aad
mov
mov
sbb
add
xor
and
xchg
pop
xor
imul
int
push
fcoml
stos
mov
jecxz
xchg
mov
jbe
push
mov
adc
dec
inc
shlb
dec
loope
and
push
push
loopne
jg
mov
and
cmp
push
rcrl
adc
imul
js
dec
clc
inc
dec
addr16
enter
cmp
pusha
popa
lods
mov
fs
pop
daa
jns
dec
lea
xchg
scas
xchg
repz
pop
ret
jae
pop
cmp
xchg
jbe
mov
mov
fwait
out
cmc
push
ret
add
fcompl
pop
dec
into
mov
mov
jae
out
cs
lcall
pop
jge
imul
add
scas
mov
sub
sahf
xor
bound
das
xchg
cli
push
test
cmpsl
add
add
inc
push
movb
cwtl
mov
add
adc
adc
in
pop
or
out
mov
jmp
pop
fdivs
aam
mov
ja
push
adc
shrb
jge
lods
fs
andb
pop
add
pop
sbb
mov
jnp
push
in
je
ret
sbbb
xor
scas
rcll
imul
insl
and
int
or
inc
into
mov
and
mov
out
pop
xor
jbe
pop
lea
shrl
ds
jns
dec
jle
daa
das
mov
mov
sbb
cmp
xchg
push
fnsave
repnz
xor
es
pusha
pop
leave
in
shrb
sbb
and
daa
push
movsw
scas
jg
cs
gs
or
fwait
sbb
and
repnz
repnz
test
and
adc
scas
pushf
xchg
xlat
jnp
in
mov
cli
jl
subb
xor
sub
push
dec
cltd
sahf
push
icebp
fmull
fcomps
dec
test
adcl
addl
or
je
push
fadds
pop
mov
add
pop
jmp
addl
xchg
cltd
dec
push
sub
xlat
sbb
jb
cmp
rorl
pop
pop
push
jae
cmpsl
inc
jl
rolb
jns
xlat
out
cltd
call
or
xor
xchg
sahf
out
shrl
xchg
fs
mov
shrb
pop
or
in
dec
sti
fdivs
sub
jmp
dec
xor
data16
xchg
in
outsl
sti
mov
push
cmpsb
insl
mov
inc
mov
inc
pusha
mov
shll
imul
into
lcall
sbb
mov
lahf
jg
js
sbb
push
lretw
data16
idivb
mov
lds
xchg
dec
mov
sub
mov
data16
xchg
arpl
test
clc
mov
into
popa
mov
jno
lods
sub
outsl
mov
xlat
xchg
cmp
xchg
sbb
dec
sti
icebp
sbb
pop
and
mov
pop
ds
or
sar
sbb
fisubrl
pop
dec
rcrl
push
cmc
outsl
mov
cmpsb
cmpsl
cltd
adc
lea
or
das
out
mov
sub
imul
mov
fmul
pushf
mov
sahf
or
xor
imull
cli
fistps
pop
es
hlt
mov
out
sti
inc
push
jl
int3
mov
mov
daa
xor
cmp
test
dec
fldlg2
add
fdivl
mov
das
outsb
jno
sub
sub
pushf
es
inc
jecxz
xchg
pop
dec
or
xchg
je
cs
test
lahf
sbb
or
sub
testl
imul
mov
pop
mov
in
aaa
lock
mov
cld
scas
push
pop
in
in
sbbb
mov
daa
and
cltd
mov
inc
loop
lods
xchg
cltd
add
sar
mov
out
sub
nop
mov
data16
mov
cmpsb
push
fistl
mov
cmp
inc
or
xchg
mov
push
and
in
lret
lcall
jnp
mov
adc
push
mov
lcall
lods
andl
addb
push
repnz
mov
sub
jae
cltd
cvtpi2ps
cmpsl
push
mov
outsl
inc
xlat
fldl
inc
push
sub
enter
add
xor
stc
xlat
pop
sub
sbb
add
xchg
insl
mov
jb
mov
jno
sbb
push
jle
xchg
push
xchg
or
and
in
rcr
and
push
or
sbb
lcall
sub
cmp
push
sqrtps
enter
out
jmp
mov
mov
loopne
pusha
das
dec
push
nop
scas
add
cmpsl
cltd
adc
sbb
and
cmp
je
dec
push
movsb
pop
fcoml
xchg
adc
push
dec
and
pop
mov
mov
je
popf
push
hlt
jmp
imul
lds
sbb
lahf
mov
daa
inc
dec
rclb
lcall
xchg
aam
xchg
jne
stc
aaa
ja
push
xchg
ds
and
jl
or
pop
test
decb
push
and
loop
push
mov
gs
shr
lock
jbe
cmpsl
sbb
add
xor
push
xchg
push
cmp
rcrb
shl
in
sbb
out
fs
xor
push
stos
addr16
outsl
xor
outsl
fidivrl
enter
adcb
adc
movsl
test
js
jae
sub
dec
into
mov
jo
lock
aaa
mov
dec
xor
rorb
fiaddl
inc
pop
mov
lcall
push
adc
mov
cmpsl
aam
mov
out
or
adc
je
dec
jnp
pop
or
xor
or
lcall
mov
mov
xor
and
cmp
pop
cmp
std
das
add
jns
push
dec
mov
test
enter
icebp
mov
xchg
sub
lock
dec
incb
stos
movsl
xor
loopne
mov
and
lahf
hlt
loopne
data16
mov
rcll
xor
push
rcll
mov
pushf
fwait
sbb
sbb
ja
add
imulb
test
fisubrs
pop
dec
push
jp
enter
pop
add
addr16
mov
mov
incb
push
es
mov
pusha
inc
ret
outsl
imulb
test
cmp
dec
lods
xlat
dec
fdivs
jecxz
fildll
cmp
pop
dec
pop
fstp
pushf
push
pop
mov
or
pop
cmpsb
cmp
dec
xor
cmp
jp
xchg
fiadds
jb
pop
shll
pop
in
mov
dec
in
or
xchg
test
lock
add
frstor
out
mov
fisubs
das
dec
mov
outsb
inc
out
pop
in
fchs
mov
sub
adc
mov
sub
mov
add
imul
stos
xor
cmpsl
sub
add
mov
aad
insb
mov
or
sti
dec
aas
push
push
ja
arpl
jmp
pop
insb
out
xor
cmpl
dec
aaa
inc
sahf
push
dec
fucomi
data16
fwait
pop
call
adc
mov
dec
or
adc
mov
mov
lret
es
add
push
dec
leave
mov
out
xchg
mov
sub
jg
mov
fnstenv
mov
data16
xchg
mov
and
cmp
pop
out
cmc
pop
outsb
pusha
xchg
inc
lret
pop
int
test
mov
pusha
jecxz
pop
mov
leave
xrelease
push
sbb
fidivrs
cmc
and
xchg
and
popf
and
cmp
outsl
pop
cmp
lea
call
imul
xchg
inc
dec
inc
mov
nop
dec
sub
or
lret
aad
adc
pop
arpl
test
aam
js
lret
lret
jbe
xchg
xor
or
nop
adc
xor
insb
and
dec
data16
lret
xor
rol
insl
sub
xor
movsl
test
mov
das
test
adc
outsl
jo
push
into
adc
enter
xor
rcll
adc
movsb
mov
repnz
sub
nop
jecxz
aaa
mov
test
cmc
fcompl
vpackuswb
cmp
arpl
lret
mov
jno
adc
ss
nop
jno
iret
mov
outsl
cli
mov
fcom
or
mov
adc
cmpsl
dec
test
dec
test
ljmp
xchg
xchg
or
test
xchg
test
adc
xchg
xchg
mov
lock
sbb
xchg
push
xchg
xchg
test
mov
fimull
pop
sbb
shlb
js
imul
jnp
or
jne
mov
daa
or
les
inc
push
push
sti
scas
push
lods
imull
sbb
dec
in
aam
popf
cmp
jecxz
cmp
lret
push
in
std
in
xchg
cmpsl
icebp
lcall
shrl
cmp
mov
nop
lahf
fisttpl
into
fisubrl
into
cmp
mov
in
ds
rcrb
push
add
in
stos
loopne
push
mov
montmul
cmpsb
rcrl
add
insb
pusha
pop
xor
cltd
stos
loope
xchg
das
sub
sbb
or
mov
pop
dec
dec
cwtl
int3
loope
stc
jmp
into
jmp
ja
jbe
jns
xor
sbb
fistpll
or
or
cmp
fidivs
xchg
imul
aas
jb
popa
pop
sbbb
xchg
enter
add
jno
faddl
and
push
mov
or
scas
roll
cs
ror
inc
sti
jbe
push
dec
outsb
maxps
aam
sub
jmp
pushl
mov
les
cmp
or
xchg
push
push
or
stc
clc
ret
inc
mulb
xchg
adc
mov
insb
mov
movsb
out
sub
icebp
movsl
inc
mov
xor
jns
cmp
sub
sub
add
dec
adc
in
test
inc
push
mov
fwait
mov
pop
cmp
ret
outsb
dec
jb
xor
aam
or
jo
dec
cltd
pop
ja
mov
aam
sbb
pop
cmp
dec
popa
mov
out
sbb
pop
int3
insl
mov
imul
aaa
cmpsb
push
movsb
pop
sbb
ret
mov
push
sub
fsubr
xchg
mov
in
push
sub
inc
xor
dec
dec
inc
mov
dec
call
nop
jg
das
cmp
sub
mov
cmp
inc
test
sub
xchg
pop
stos
aam
bound
xorl
stos
mov
out
jge
mov
fadd
dec
loope
jbe
int
cmp
jns
mull
inc
rcr
out
push
push
xor
or
xor
imul
out
hlt
bound
ljmp
mov
or
jl
push
xchg
mov
test
cmpsl
push
push
sbb
inc
mov
sub
xchg
in
push
jge
or
sbb
or
lock
xchg
push
loop
es
leave
mov
push
repnz
mov
add
leave
movsl
mov
movsl
pop
lock
xchg
dec
call
push
in
fidivs
inc
ror
cmp
push
adc
pop
dec
jp
and
ret
test
mov
out
mov
cld
push
lods
sub
fld
sbb
xlat
int
sti
xor
jne
loope
test
movsb
jge
sahf
fimull
adc
das
pop
mov
push
mov
loope
add
and
and
mov
sub
push
mov
daa
int3
out
mov
mov
sbb
gs
pop
dec
pop
and
icebp
imul
subb
or
popf
pop
sbb
sti
add
mov
sub
sbb
xchg
aam
pop
inc
jnp
pop
sbb
mov
mov
add
movsb
xchg
cs
jb
lahf
stc
in
inc
adc
repz
mov
jns
outsb
pop
or
leave
push
sahf
xchg
scas
jae
sbb
popf
push
fs
rol
lahf
jmp
push
cmp
scas
mov
xchg
push
mov
nop
lods
aad
jecxz
pushl
push
xor
pop
pop
mov
adc
imul
dec
jle
leave
daa
out
addl
ja
dec
sti
pop
insb
shlb
push
mov
sub
mov
push
mov
jne
inc
dec
dec
loop
fisubs
scas
push
jmp
cmpsl
lods
pop
jp
sti
js
fbld
outsl
jne
xchg
idiv
push
repz
mov
sbb
and
es
add
pop
lods
test
xlat
mov
sbb
hlt
daa
xchg
inc
mov
loope
mov
cmp
pop
rorb
out
ret
shrl
mov
and
pop
popl
xor
dec
push
insb
int3
push
sub
sahf
pop
xorb
cmp
xchg
stos
mov
outsb
ja
or
jp
cmp
jp
lods
push
jo
out
mov
sti
and
jb
jo
cmpsl
popa
fbld
frstor
cmp
clc
inc
inc
pop
popa
ficoml
cwtl
xchg
test
fistps
mov
mov
mov
fmuls
fwait
pop
pop
jmp
out
cmpsb
or
clc
das
cli
mov
pop
cmp
dec
pop
leave
jg
cmp
cmp
jae
in
imul
movsb
jnp
pop
cmp
dec
jbe
test
loope
cmp
fldl
ljmp
lret
dec
xchg
pusha
xor
dec
cmp
int
cmp
rcll
xor
push
pop
jecxz
mov
subb
mov
inc
mov
cld
and
push
sub
xor
mov
mov
cwtl
jmp
push
das
mov
dec
push
arpl
sub
sub
scas
imul
dec
inc
dec
sub
push
movsb
jbe
sbb
push
subl
push
pop
lcall
fs
mov
cmpl
pop
cmc
cs
adc
add
adc
jb
pop
push
mov
inc
jns
test
jns
ret
test
pop
shrb
inc
or
fstpt
mov
lret
int
ja
test
mov
sarl
fwait
movsb
in
ljmp
sbb
aam
mov
icebp
adc
mov
xchg
daa
cmc
mov
jb
shl
js
ja
sbb
cli
jl
jb
cmp
inc
or
adc
cli
pop
sti
mov
int3
insl
scas
movsb
lcall
daa
outsl
add
pusha
xchg
aas
movsb
in
pop
movsb
arpl
fisubs
xor
xlat
add
pusha
imul
mov
cmp
fldz
sbb
mov
sub
xor
pop
out
xchg
popl
adc
out
stos
mov
dec
mov
inc
fcmovbe
push
cltd
andb
out
jo
cwtl
xchg
andb
movsb
xchg
pop
in
sub
cli
pushf
xor
jl
jae
xor
fwait
into
sbb
fisubs
inc
fildll
lahf
stos
arpl
jmp
xchg
xchg
mov
arpl
add
int
xchg
and
dec
mov
adcb
iret
xorb
hlt
cli
and
dec
mov
shll
xchg
push
in
inc
cmp
inc
pusha
or
shrl
add
or
sub
adc
rorb
dec
xchg
cmpsb
dec
pop
dec
cmp
push
fnsave
xchg
cmpsb
daa
stos
adc
cmp
imul
movsl
or
push
fbstp
dec
xchg
lods
int3
or
lret
test
cmp
and
or
sbb
xchg
push
push
pop
add
sub
push
mov
mov
add
pushf
aas
neg
mov
xchg
bound
mov
into
jo
cmp
pop
cmp
cmp
jg
xchg
cltd
sub
test
push
sub
daa
jecxz
jmp
and
repz
jnp
icebp
enter
dec
jmp
pop
mov
mov
leave
inc
je
leave
pop
ds
or
and
and
dec
dec
adc
sbb
repnz
subb
lock
xchg
or
hlt
dec
xor
xchg
sub
mov
push
xchg
cwtl
int
jge
repz
mov
fidivl
mov
mov
pop
mov
movsb
push
lret
sti
xchg
rorl
and
fmulp
xchg
sub
dec
fimuls
test
fidivs
pop
sub
loop
inc
lret
fdivrl
sbb
push
or
sbb
rorb
dec
mov
or
push
mov
inc
cmp
pop
adc
clc
in
test
mov
mov
aam
pop
jp
dec
sbb
repnz
and
inc
lret
pop
jae
ja
mov
mov
cmpsl
dec
mov
gs
inc
jp
jecxz
push
pop
xchg
lret
and
lret
sub
jne
sahf
xchg
loop
sbb
fs
pop
enter
lods
cvttps2pi
push
and
and
ror
aam
jmp
es
mov
out
jp
xlat
xor
cmpsb
inc
and
jne
js
pop
das
or
cmp
inc
sub
daa
push
push
lds
push
scas
jb
in
int3
mov
lods
push
pusha
or
inc
jns
orb
or
push
enter
sti
and
cltd
inc
xchg
mov
outsb
fadd
add
js
sarb
mov
pop
push
inc
sub
loope
movsb
test
dec
mov
aaa
aad
dec
push
jg
jo
mov
hlt
push
mov
xchg
jae
js
and
push
lods
xor
push
loope
add
test
test
mov
pop
jle
inc
lock
or
and
sub
pop
decl
or
in
clc
mov
ds
sti
push
cwtl
test
cld
ret
inc
insl
or
jbe
out
pop
push
lods
cli
or
faddl
dec
imul
add
dec
mov
dec
ljmp
dec
iret
push
pop
xor
cmp
jo
and
add
wbinvd
out
push
out
bound
mov
stc
xor
dec
rcrl
aad
aaa
dec
mov
and
xor
jb
ss
xor
fimuls
bound
cltd
insl
mov
jno
loopne
adc
xor
addr16
mov
or
rcr
jg
ja
jge
jl
add
sarb
lds
vpsrld
out
sbb
xchg
adc
pop
scas
movsb
xchg
filds
fbstp
andps
push
les
pop
sub
pop
mov
adc
es
data16
dec
in
xchg
fcoms
mov
aaa
jnp
ret
sbb
mov
and
ss
mov
cld
test
or
jo
mov
push
jb
xchg
imul
cmp
jb
test
dec
fwait
loope
adc
mov
sub
sbb
lods
push
cmp
std
cmp
pop
jns
adc
and
xchg
adc
jnp
in
and
neg
sub
inc
sbb
mov
mov
or
cwtl
pop
or
jp
out
dec
jb
dec
mov
sub
int
and
arpl
mov
mov
ja
push
add
out
ds
outsl
mov
clc
ret
popa
push
xchg
xchg
fistpll
xlat
sbb
add
pop
lret
leave
cmpsl
psraw
xchg
ficoml
movsl
xor
js
adc
adc
mov
test
icebp
push
inc
push
add
jnp
sub
clc
test
stc
sbb
push
aas
pop
out
mov
aaa
xor
int
adc
xor
daa
mov
out
insl
ficompl
stos
xorl
push
xorb
enter
push
scas
mov
ds
jns
xchg
fs
pop
mov
sbb
test
sbb
dec
call
lds
scas
pusha
mov
fisubl
pushf
jl
mov
popa
mov
lea
mov
out
rolb
add
mov
dec
and
xchg
mov
cmp
push
mov
rcll
push
arpl
cld
inc
imul
sti
sub
lods
jbe
stc
mov
sahf
ds
fs
mov
jge
xor
pop
jp
int
fs
adc
inc
push
push
and
scas
xor
loopne
add
xchg
or
xchg
dec
mov
sub
inc
mov
dec
pop
push
jns
enter
lods
jnp
push
and
mov
adc
mov
pop
cltd
out
dec
xchg
or
xor
stc
adc
in
out
pop
xchg
add
int
mov
lock
inc
jae
jp
mov
maskmovq
add
test
mov
pop
xchg
or
mov
dec
lret
push
pop
add
cld
mov
mov
pop
dec
pop
imul
ljmp
and
dec
shll
pushf
xchg
sub
push
push
aam
mov
cwtl
push
or
cwtl
sbb
ficomps
and
bound
or
and
mov
fdivl
out
adc
call
les
dec
push
dec
inc
mov
loopne
mov
in
xchg
jmp
shll
fidivrl
fdivp
roll
std
out
mov
jbe
repz
mov
stc
pop
and
jg
rcr
out
xchg
push
add
mov
push
mov
add
inc
add
mov
pusha
cmpsl
pop
scas
int
and
dec
fisubl
js
popf
cmp
popf
clc
cltd
adc
shll
lods
testl
popf
lea
loop
push
sbb
add
pushf
mov
push
jmp
bnd
mov
das
cmp
in
jb
mov
xlat
add
out
ret
inc
mull
sub
push
sub
mov
sarb
std
pushf
cwtl
cli
cmpsl
or
negb
jecxz
and
sub
fisubs
lahf
dec
cmp
sub
inc
xor
jmp
std
test
add
jne
mov
pop
adc
lret
push
cli
ficoml
push
dec
push
ljmp
mov
add
jae
bswap
xor
in
adc
lock
sarl
imulb
ja
shrl
pop
fisttpll
hlt
js
dec
int3
push
inc
push
mov
cmpsb
ds
mov
jnp
addr16
push
sub
adc
mov
outsl
in
or
xchg
cmp
sti
pop
fcoml
jno
cli
add
mov
ljmp
das
and
cld
fadds
sar
dec
inc
insb
pop
dec
push
leave
in
movsb
outsb
adc
faddl
mov
cs
mov
sbb
dec
inc
sahf
mov
cmp
lret
test
or
int
rcr
outsb
push
daa
sub
adc
add
dec
pop
outsb
iret
push
test
mov
lods
jl
dec
pop
movsl
mov
dec
push
enter
fcmovnb
push
clc
jae
lods
out
daa
jmp
dec
add
inc
je
aas
mov
ja
add
mov
outsb
pusha
lret
ljmp
fsub
aas
mov
push
mov
jnp
repz
in
inc
test
mov
fyl2xp1
enter
mov
movsb
push
sbb
dec
push
hlt
xchg
adc
cli
adcl
pop
pextrw
sbbb
push
int3
push
shrb
je
jnp
mov
inc
daa
ror
mov
mov
xchg
cmp
mov
in
aaa
pushf
mov
es
cmp
mov
jnp
cmp
push
cwtl
cmpsb
ret
mov
stc
cmp
imul
ja
or
and
jl
dec
or
sbb
scas
cmp
pop
mov
test
loop
icebp
xchg
sbb
scas
dec
pop
aad
jg
inc
or
enter
bound
or
sbb
sahf
fcompl
mov
ficompl
std
or
mov
in
pop
aas
cmp
fcompl
pop
jo
call
mov
ret
imul
test
add
inc
in
lods
adc
mov
adc
out
mov
dec
test
into
mov
popa
cmp
movsb
jae
adc
sub
shl
leave
sahf
sub
sbb
xor
jg
fistpll
loop
jo
sbbl
mov
jge
loope
pop
mov
movsl
jl
pushf
jge
data16
out
int3
pop
pop
bound
imul
out
jmp
js
in
pushf
fsubrp
sbb
cwtl
jo
dec
mov
cmp
pop
sub
and
les
jns
stos
fbld
xchg
cltd
xor
push
mov
inc
cmp
sub
adc
movsl
popl
mov
outsl
add
movsl
adc
pop
data16
movsl
inc
retw
sbb
adc
pop
test
mov
inc
push
daa
inc
scas
imul
stos
add
xor
sub
and
add
stos
out
jg
push
push
jle
outsl
mov
cwtl
mov
mov
dec
fistpl
inc
fdivp
aam
clc
icebp
test
pop
sub
cs
pop
mov
sub
repz
jno
mov
lock
lea
fisttps
fildl
or
shrl
mov
add
xor
jmp
sahf
mov
adc
xor
cs
out
into
les
arpl
inc
xorl
fldenv
dec
inc
or
lret
xor
repz
jge
xchg
xchg
lgs
in
adcb
xchg
and
cld
or
int
jp
mov
xlat
mov
lods
xchg
mov
dec
add
inc
aad
cmpsb
rorb
push
nop
cmp
fisubrl
push
outsl
movsb
es
rol
push
xchg
push
std
icebp
inc
pop
cmp
lret
jmp
dec
jmp
loopne
nop
push
sub
jno
pop
add
addl
cmp
and
push
xchg
jmp
or
inc
lcall
aam
movsl
push
in
daa
dec
pusha
push
sti
and
mov
jb
sar
lock
icebp
mov
cwtl
xor
out
and
into
iret
xchg
jb
dec
inc
xor
mov
mov
rcr
xchg
ss
sbb
out
jl
cld
lahf
shl
xor
jmp
mov
mov
pop
js
mov
das
gs
imul
xchg
push
popf
jns
incl
push
in
cltd
mov
or
xlat
mov
inc
cld
cmp
rcll
push
or
sub
inc
adc
and
leave
lods
jns
cwtl
jb
sub
inc
stos
lret
push
pusha
clc
xor
fdivs
mov
ficompl
lods
and
pop
push
sub
mov
jge
shlb
dec
lret
les
lret
sub
pop
inc
mov
mov
fistps
dec
xor
adc
out
jmp
andb
xor
fwait
or
sub
xchg
mov
pop
lahf
mov
adc
sbb
ljmp
in
scas
lock
pop
xor
fildl
movsl
dec
sub
ret
sti
mov
dec
lahf
xchg
add
push
aad
aad
add
out
mov
inc
pop
xchg
std
xor
in
xor
loopne
negb
pushf
xchg
mov
jmp
sbb
fiaddl
dec
adc
push
lea
mov
jg
fs
jbe
cmp
lock
cmp
aas
mov
jmp
pop
in
xchg
stos
xchg
insl
andl
sub
shll
hlt
cmp
add
cmc
pop
rcr
jo
push
push
mov
repz
ss
mov
xchg
push
sub
pop
xchg
fcoms
push
inc
pop
xchg
cs
leave
fwait
stos
mov
filds
add
fs
addr16
arpl
push
fidivl
pop
xor
sbb
mov
cmp
in
dec
cld
dec
pop
mov
ljmp
or
xor
repz
inc
sbb
popf
xor
add
push
jo
sarl
roll
mov
movsb
lcall
ds
mov
int
gs
cmpl
mov
xor
outsl
add
mov
daa
std
jp
jge
mov
adc
lock
jo
push
inc
add
push
ficoml
scas
push
push
xor
mov
sub
imul
fucomi
gs
cmpsl
insb
outsl
xrelease
daa
dec
dec
add
loopne
dec
dec
cmp
mov
mov
push
shrd
sbb
add
jo
dec
mov
fsubrl
lea
incb
dec
or
mov
or
push
imul
inc
jg
mov
cmp
inc
in
stos
sub
or
jg
aaa
sbb
data16
pushf
pop
imul
jmp
addr16
test
sbb
mov
in
cli
ljmp
xchg
ja
sub
or
ret
mov
dec
fstp
fs
popa
sub
mov
lods
xchg
sub
test
in
and
pop
add
je
pop
pop
mov
dec
xor
pop
and
aad
test
dec
cld
movsb
cmp
inc
cmp
in
mov
sub
pop
dec
push
jge
push
pop
cs
mov
sahf
mov
js
mov
andl
jg
arpl
jg
das
popf
outsl
xor
popa
mov
cmpsb
jo
inc
push
jne
mov
xchg
inc
imul
dec
repz
sub
pop
mov
or
aad
xor
inc
add
lret
fs
dec
xor
mov
mov
jns
sbb
sbb
pop
and
push
pop
xor
xchg
rcrb
mov
ja
js
cmpsl
in
add
jl
mov
pop
sbb
out
jb
dec
cmp
insl
push
mov
idivb
int3
mov
or
xor
outsb
push
mov
push
popa
mov
call
mov
sbb
shrl
pop
test
lods
aad
arpl
into
aam
fsub
call
and
cmpsb
push
das
xor
jae
adc
xchg
rorl
push
cltd
lret
push
add
out
mov
jmp
jae
jns
shl
xchg
lcall
jg
mov
lods
inc
mov
mov
push
scas
push
add
lret
hlt
int
stos
adc
stos
lds
mov
pop
xor
mov
adc
sub
pusha
mov
mov
fcomps
shlb
xor
mov
std
sub
lods
aaa
adc
mov
mov
sub
lea
mov
cli
enter
xchg
roll
add
out
push
sub
push
cmc
xchg
nop
push
and
push
or
xchg
push
pop
push
xor
mov
sti
fs
jmp
lds
push
adc
divb
and
and
sub
pop
pop
adc
cmp
hlt
push
or
pop
cmp
mov
subb
sub
shlb
fs
jae
and
imul
mov
ss
enter
das
stc
out
cmp
pop
and
jmp
je
dec
mov
jecxz
movsb
into
rolb
push
add
stc
movb
mov
lds
jg
mov
test
push
add
repnz
pusha
jge
cmp
rolb
pop
into
je
mov
xor
cltd
mov
mov
inc
sub
and
dec
sahf
je
in
fistl
push
mov
in
cwtl
sbbl
popa
inc
sub
js
push
scas
push
aas
in
hlt
pop
pop
push
das
mov
mov
ja
movsb
or
in
mov
mov
ffree
mov
mov
mov
cli
add
loope
jle
jp
nop
addb
mov
cmc
mulb
idivb
mov
faddl
imul
in
fildll
notl
call
jl
adcb
popa
jo
lret
arpl
jno
shlb
adc
bound
or
fildll
or
inc
shr
mov
and
jp
jae
sub
lods
add
aad
jg
dec
mov
push
aaa
nop
das
dec
stos
pop
leave
scas
out
int3
push
pop
mov
and
pop
shrl
aaa
mov
jns
insb
inc
sbb
pop
sub
lea
cs
aam
and
sti
lock
int
mov
mov
push
dec
dec
inc
cltd
gs
and
jge
imul
push
inc
mov
push
jl
test
bound
mov
loope
jb
jbe
shll
dec
mov
fnstenv
scas
das
lods
dec
xor
test
cmp
mov
sub
adc
push
xlat
jns
aam
cs
mov
jp
data16
mov
inc
push
sbb
cmpsl
ret
dec
lea
sbb
pop
outsb
inc
mov
ret
lds
jno
imulb
iret
xchg
push
mov
je
ljmp
cs
add
lods
outsb
dec
mov
jnp
faddp
int
cmpsl
imul
and
jl
jp
sub
out
int
add
mov
adc
cwtl
cld
jle
or
das
sub
xor
cmp
or
pop
sbb
jnp
xlat
fstps
xchg
mov
mov
shll
loope
pop
testl
jmp
mov
int3
jecxz
jmp
cmp
dec
jl
and
and
popf
in
mov
test
jp
ds
imul
int3
pop
adc
add
mov
add
push
lea
push
mov
loope
das
push
xor
cli
jecxz
mov
imul
mov
aam
lret
pusha
fists
sbb
mov
push
xchg
push
push
bound
arpl
mov
cli
insb
leave
xor
cmp
jge
sahf
icebp
cltd
mov
aad
cltd
out
out
push
cmpsl
mov
out
or
cmpsl
pop
push
push
add
push
jecxz,pt
test
push
cmpsb
add
mov
in
sub
inc
aas
cltd
mov
cmpsl
rclb
mov
movsl
cltd
xchg
or
mov
adc
mov
lahf
or
sub
xchg
sahf
mov
xchg
inc
cs
dec
pop
push
imul
fld
jns
mov
adc
pop
sub
lcall
sbb
aad
mov
mov
loop
enter
cltd
xor
push
cmp
cld
or
add
add
test
in
into
xchg
push
data16
pop
scas
adc
add
jno
daa
cs
sarl
scas
jae
int3
movsb
push
push
jle
sub
lock
fsincos
fsubl
mov
dec
xchg
pusha
mov
dec
nop
push
jb
mov
or
inc
add
jmp
je
add
outsb
inc
imul
sbb
shll
xchg
mov
push
pop
adcl
je
mov
mov
push
mov
loope
sub
mov
push
inc
cmpsl
ret
mov
ret
iret
fyl2xp1
push
cld
sti
jbe
pop
mov
mov
fs
pop
mov
cli
xchg
ficompl
lahf
je
xor
outsb
icebp
ret
pop
mov
xor
or
mov
cltd
or
inc
aaa
cmp
adc
or
inc
out
cmp
in
and
xchg
xchg
aaa
lods
sti
outsb
or
fsubrp
aad
fwait
and
mov
cmp
mov
sahf
add
int3
push
pushf
pop
out
sti
inc
xchg
shlb
iret
hlt
pop
outsl
push
lock
cld
lahf
add
push
mov
aad
jp
pusha
xchg
lret
adc
push
jnp
inc
xchg
mov
push
adc
shr
cmp
pop
cmpsb
es
es
fwait
add
clc
les
or
adc
scas
xlat
dec
inc
pop
je
and
out
repnz
add
out
movsl
popw
in
arpl
insb
pop
orb
jl
cmp
mov
shlb
scas
dec
cmp
pop
cmp
and
ret
jmp
jnp
xchg
jbe
int3
mov
stc
outsb
push
mov
out
inc
or
mov
xchg
xor
outsb
jmp
and
ds
sbb
lock
adc
add
mov
scas
mov
das
addb
sti
mov
jae
or
lcall
jmp
outsl
dec
mov
test
fildl
imul
les
sub
sub
scas
pop
sahf
cmpsb
dec
pop
xor
sub
push
and
mov
fsubl
mov
popa
push
dec
xor
mov
rcrb
arpl
testl
leave
jbe
repz
out
filds
jo
jnp
ss
popa
push
into
out
xlat
movsl
mov
add
test
daa
dec
cmp
jnp
jb
and
ljmp
rclb
inc
push
pop
cltd
lods
dec
test
jecxz
mov
xchg
mov
arpl
lock
dec
sarl
sub
out
push
push
pop
mov
outsb
cltd
lea
fidivl
rcrb
xchg
cmovb
dec
sub
insb
fisubs
fisttps
outsb
jne
sbb
jle
int
ljmp
mov
sub
repz
adc
loope
lods
mov
adc
dec
mov
xchg
out
pushf
jecxz
pop
pop
or
pushf
cmp
sbbl
adc
ja,pt
xor
push
mov
cmp
xor
add
and
clc
cs
mov
mov
dec
aad
testl
add
dec
scas
cs
repz
push
call
daa
ret
psubsb
lock
add
cwtl
fwait
lods
lretw
int
lea
jne
ss
cmpsl
ljmp
shrb
sti
jo
loope
das
xchg
pop
int
mov
pop
mov
dec
mov
xor
aaa
sbb
cltd
fiaddl
ljmp
mov
int
shl
enter
fwait
mov
or
mov
lods
mov
mov
jmp
xchg
jnp
ljmp
ja
pop
lahf
push
fs
and
xchg
in
or
mov
sahf
cli
dec
icebp
pop
sahf
or
add
fiadds
pop
insl
mulb
push
xchg
and
push
imul
pop
dec
ja
and
sbb
enter
or
test
and
movsb
xor
lds
std
cmp
fldt
in
pop
call
stc
push
xor
daa
mov
push
movaps
mov
mov
insl
cmp
add
lret
xor
ret
xlat
xchg
sub
nop
mov
mov
sub
push
adc
daa
xchg
pop
mov
mov
jae
jnp
in
in
and
sbbb
push
cmp
int
leave
sbb
outsb
and
lods
or
push
test
mov
cmp
pop
aas
sub
mov
xchg
clc
outsl
imul
dec
scas
faddp
ficompl
cwtl
inc
add
xchg
mov
jbe
sti
mov
push
bound
mov
pop
popa
xchg
ljmp
daa
shrb
adcb
sahf
in
rcrl
shll
inc
pop
mov
xlat
jle
test
xchg
cld
rolb
xchg
dec
xchg
bound
mov
pop
hlt
mov
aad
pusha
dec
lahf
mov
int
nop
int
cmp
jl
and
scas
je
sbb
and
andb
pop
pop
mov
push
mov
shlb
dec
repnz
pop
lods
sbb
imul
mov
into
push
push
lahf
pusha
sub
or
cltd
cs
xchg
adc
addr16
mov
dec
ret
nop
pop
or
mov
fmuls
lret
xchg
sub
scas
popa
or
fisubrs
jb
loop
inc
repnz
dec
jo
xor
icebp
xlat
pop
and
bound
sbb
mov
loope
in
add
int3
cmc
pop
bound
and
mov
inc
shr
into
ret
mov
gs
dec
and
int
les
sahf
or
fs
and
dec
popf
add
and
andb
cmp
xchg
addb
imul
mov
sub
xchg
aaa
movsb
fs
jp
mov
roll
outsl
or
jb
lods
imul
leave
or
sub
pop
ret
push
xor
lret
sbb
cmp
inc
xchg
daa
cltd
leave
pop
push
sub
arpl
mov
sub
insb
and
pop
fists
imul
std
xor
in
jp
lods
xor
jb
rorb
mov
mov
test
out
outsb
nop
adc
jno
sbb
and
int3
adc
xor
ljmp
fistl
testl
cmp
mov
shll
cltd
cmp
fucom
mov
xlat
cli
insl
outsl
leave
pop
push
test
hlt
into
mov
loopne
mov
loope
fs
add
outsl
pop
xchg
jl,pn
ficoms
jle
dec
ds
jo
jg
out
and
pop
lock
sub
xor
adc
shlb
lret
dec
lea
je
mov
jb
mov
and
popf
int3
dec
into
dec
pushf
dec
mov
test
fwait
or
fnsave
and
cmp
fildl
mov
push
cli
sbb
sub
jno
sbb
mov
jmp
fcoms
loopne
mov
adc
cmc
loopne
lcall
stos
xchg
incb
push
jmp
xchg
lret
fs
stc
dec
pop
mov
insb
xchg
xor
int
test
or
sbb
int3
xor
leave
or
sub
lock
mov
aas
aaa
mov
rcl
lahf
pop
sub
pop
add
mov
jne
in
mov
cli
std
mov
mov
mov
xor
subl
nop
notb
sbb
rorb
mov
loop
div
push
mov
xor
jp
movsl
testl
cmp
and
lods
mulb
and
push
inc
nop
xchg
adc
cmpb
xor
sbb
dec
or
and
pop
cmp
inc
mov
mov
je
mov
in
addr16
ret
js
pushf
sbb
sti
pop
icebp
stos
add
cs
rorb
push
loop
arpl
add
mov
xchg
adc
cmpb
xchg
rclb
sub
push
iret
sbb
xorb
and
xchg
dec
dec
sbb
mov
fsts
sarb
mov
pushf
push
fsubr
mov
push
xor
inc
push
out
andl
and
push
into
mov
pop
and
mov
sbb
ss
push
pop
jo
mov
or
scas
mov
mov
mov
aas
cwtl
loope
pop
or
es
mov
scas
mov
scas
mov
loop
xchg
dec
push
xchg
mov
mov
push
and
xchg
sub
sbb
xor
mov
icebp
or
jge
cwtl
shr
or
adcb
in
lret
inc
jle
xchg
add
sub
addr16
sbbw
dec
add
pop
aas
rcrb
xor
add
jge
sbb
scas
inc
push
imul
and
shrl
mov
and
cmp
pusha
sahf
aad
adc
insl
repnz
outsb
sub
in
loope
dec
test
cli
mov
in
insl
int3
popa
test
testb
sahf
mov
push
sbb
jb
bt
fildll
sbb
jne
mov
xor
cmpsl
jne
sbb
sbb
stc
sahf
aam
ss
sbb
mov
mov
negl
xchg
xchg
mov
xor
and
inc
inc
sub
xchg
incl
xchg
xchg
or
jge
jmp
xchg
lods
lret
dec
cld
imul
icebp
jb
dec
mov
imul
dec
je
sub
pusha
negl
cmp
xor
lret
pop
clc
sub
aaa
xor
sbb
test
mov
imul
rcl
sbb
cmpsl
or
daa
loopne
jge
inc
in
scas
movsl
insl
in
jns
mov
mov
outsb
in
pop
add
decl
pop
add
insb
pop
sub
lahf
dec
movb
shl
aaa
aas
andl
loop
les
mov
xchg
add
iret
or
fdivrs
fbld
imul
push
inc
icebp
lret
ja
dec
pop
push
popa
scas
rcll
ret
stc
lds
dec
mov
or
or
mov
mov
dec
dec
mov
sub
mov
pop
or
scas
pop
sub
shll
scas
cmpsl
out
xchg
jno
ss
sbb
jmp
push
test
fwait
mov
sbb
sbb
jne
std
imul
aam
loopnew
divl
jmp
inc
push
or
push
cmp
into
or
out
repz
mov
mov
roll
in
sub
mov
add
loope,pn
sar
dec
or
test
bound
jmp
push
idiv
es
jne
mov
movsb
int
adc
ror
xlat
das
mov
mov
pusha
insb
push
inc
loop
ljmp
mov
cmp
or
lds
or
sahf
dec
test
inc
scas
pop
test
xchg
dec
jge
mov
fidivs
pop
shlb
std
lock
and
dec
insb
popf
push
add
cmp
jo
cmp
in
mov
aaa
clc
mov
jns
mov
incl
lret
dec
mov
sub
orl
shl
mov
mov
xchg
jp
mov
test
jb
and
jecxz
sbb
or
adc
sub
movsl
mov
mov
sarl
cli
rcrb
nop
mov
popf
mov
pop
jp
add
je
sbb
jne
es
push
xor
int
inc
cmpsb
sbb
shl
xor
repnz
xor
scas
lret
aas
jl
cmp
outsb
xchg
mov
std
inc
out
mov
je
popf
push
lea
jge
shlb
sbb
xor
aad
xor
xlat
mov
xlat
and
push
push
push
test
jnp
xchg
rcr
test
push
pop
xor
int
add
leave
cmpsb
sub
xchg
call
fbstp
out
lea
cmp
pop
mov
fiaddl
jmp
dec
mov
adc
jnp
popa
mov
adc
rcll
fisttpl
dec
fldenv
and
push
pop
xchg
mov
icebp
sti
mov
daa
inc
fcmovnu
push
pop
loop
sti
in
mov
fstpt
pop
adc
dec
rcll
imul
dec
xor
test
adc
dec
je
repnz
popf
inc
pushf
insb
shl
push
adc
lods
jne
cwtl
adc
call
ds
mov
bnd
jbe
xor
dec
mov
lret
mov
add
adc
pusha
fdivp
xchg
aas
add
ret
mov
out
or
in
lret
outsl
lock
mov
jmp
sub
xchg
fidivl
out
test
sub
iret
add
jno
adcl
das
das
pop
xchg
aad
shrd
xor
call
std
int
jmp
lock
jmp
testl
jns
inc
xor
stc
imull
inc
sbb
fwait
sbb
outsl
add
cs
lods
movsl
daa
mov
jp
int
jo
dec
or
mov
addr16
ljmp
mov
cltd
sub
fnstenv
and
out
enter
xchg
jae
movsb
push
sti
inc
xchg
fdivl
loop
sub
inc
mov
mov
fisubs
dec
cmpsb
gs
sbb
test
and
pop
ja
shll
add
outsl
incl
ret
dec
popf
scas
mov
frstor
pop
dec
fbld
stos
push
fwait
inc
xchg
xorl
aam
iret
xchg
xchg
sbb
xchg
jns
sub
jecxz
add
or
add
mov
leave
inc
lods
add
mov
or
push
sub
push
call
sti
ljmp
pop
sbb
pop
dec
inc
push
pop
xor
lods
mov
cmp
out
mov
push
test
mov
and
jmp
cli
and
lcall
negb
aad
mov
xchg
sbb
jp
ja
sub
filds
jmp
or
sahf
fcoms
push
cmc
hlt
xor
sahf
jo
mov
leave
and
mov
add
loop
nop
lock
shll
in
or
aam
inc
in
push
push
icebp
lahf
clc
push
jae
sbb
cmp
out
pusha
or
cmp
into
sub
push
sbb
xchg
lods
lods
and
push
stos
incb
ljmp
lock
aam
lret
push
cmp
iret
push
daa
mov
add
add
mov
mov
push
pop
mov
les
loop
loope
xor
in
sbb
ja
adc
xor
sbbl
js
hlt
add
and
loope
mov
xchg
jno
adc
mov
ja
mov
mov
lock
jns
aam
mov
jo
jno
jl
jno
xchg
sar
dec
and
cmpsb
or
rorb
repz
loopne
and
mov
decb
test
cmp
fstpl
ljmp
cmp
mov
jp
xchg
dec
add
dec
jnp
push
sub
gs
cmpsl
cld
popa
aas
pop
stos
jo
dec
sahf
out
and
mov
dec
xchg
or
inc
test
mov
push
into
adc
mov
stos
jge
push
push
in
push
sub
pop
call
or
mov
dec
popl
sbb
dec
mov
mov
pop
in
mov
xorl
mov
push
movsl
inc
adc
fstps
add
popf
aaa
mov
aas
and
inc
pop
jp
lock
mov
sub
push
fs
and
and
mov
cmp
xlat
and
bound
mov
jp
stos
mov
int
movsl
dec
pop
pop
aam
and
push
xchg
into
sbb
push
mov
and
cmp
inc
adc
arpl
jae
in
mov
inc
int3
mov
xchg
dec
lds
inc
ret
jb
ficomps
sbbb
pop
add
ja,pt
and
fwait
pop
out
rcr
xchg
xor
xchg
push
jb
push
sbb
xor
and
and
mov
loope
sbb
cmp
int
mov
js
inc
xchg
mov
sub
loope
sbbb
jbe
cmp
mov
mov
int3
mov
pop
jg
pop
sbb
inc
push
pop
dec
in
int3
insb
adc
enter
push
add
mov
int
rolb
or
inc
push
mov
xchg
lret
pushf
lret
fstpl
int3
pop
adc
dec
outsb
stc
pop
adc
pop
jne
push
cmpsl
jbe
add
subl
fstp
mov
dec
adc
adc
popf
int
inc
mov
movsb
sbb
sub
mov
pop
shrb
sbb
mov
jge
push
addl
push
mov
aaa
mov
push
ret
pusha
xchg
xchg
cmpb
ret
mov
pop
lea
mov
mov
popa
xor
sahf
adc
push
movsl
xchg
ss
and
in
insl
daa
pop
jns
push
sarl
inc
sahf
jb
xchg
out
cmp
ret
add
fldenv
loop
inc
lret
loopne
imul
dec
xchg
aam
xlat
dec
pop
lea
lea
pop
ficomps
cltd
mov
or
test
out
in
je
in
cmpsb
inc
adc
mov
mov
je
jo
push
jnp
sbbl
daa
stc
mov
cmp
paddd
filds
cmp
mov
pop
inc
jl
sub
push
mov
test
fs
cli
pop
sbb
fucomp
cltd
ljmp
int3
lret
rcrl
in
lods
fsubrp
mov
cmc
jb
mov
sub
sbb
outsl
cwtl
sbbb
jl
xchg
inc
xchg
mov
ljmp
pop
insl
addr16
mov
sub
aam
xchg
bound
mov
dec
push
push
mov
gs
pop
bound
add
mov
xchg
in
imul
inc
push
repnz
int3
sub
dec
outsl
cmp
cmp
enter
dec
mov
add
sarb
std
bound
addr16
scas
jae
orl
imul
shrb
mov
out
jbe
mov
sub
xor
mov
jne
pop
xor
outsb
scas
lcall
add
sub
les
enter
lods
bound
out
lock
rcl
pop
push
xlat
xor
xchg
je
or
sahf
and
int3
cmpsb
mov
aad
shrl
mov
insb
dec
add
fcomps
or
add
jbe
iret
aad
pop
fs
lock
jb
cmpb
dec
pushf
push
push
lret
int3
adc
pusha
add
jg
push
in
lret
push
xchg
lahf
and
xchg
aam
shlb
js
lock
int
mov
add
mov
jecxz
mov
filds
test
jl
xor
pop
xor
scas
mov
cmp
inc
data16
test
push
ljmp
lock
sbb
lds
inc
repnz
idivb
ss
mov
sub
pop
leave
add
stc
xchg
aas
pop
roll
add
call
mov
movsb
adc
mov
or
in
icebp
cmp
lret
inc
push
pushf
movsl
adcb
imul
push
imul
xchg
mov
les
jo
jg
dec
mov
leave
sbb
mov
jns
icebp
imull
xor
pop
imulb
std
xchg
loope
mov
lcall
inc
mov
inc
xchg
idivb
es
dec
or
jo
out
repnz
orl
clc
addb
cmp
ljmp
ljmp
and
adc
mull
movsl
es
adc
popf
add
bound
inc
addr16
fisttpll
push
and
jae
sub
push
idiv
mov
cs
dec
dec
scas
frstor
out
lods
xchg
enter
fisubl
adc
push
sub
mov
dec
jl
cmp
cmp
icebp
test
insl
enter
outsb
pop
or
scas
lcall
mov
ficoms
stos
inc
pop
sbb
sub
pushf
pop
je
mov
adc
jns
jp
pop
enter
lock
push
xchg
or
xor
and
adc
repz
xor
sub
and
inc
mov
inc
gs
jns
xor
push
imul
xchg
inc
stos
push
mov
mov
jbe
ret
fisubs
sti
ja
mov
mov
inc
mov
ror
aad
out
jb
ret
add
jns
lret
mov
xchg
addl
xor
ss
lds
cmc
in
imul
jle
pop
jle
subl
push
inc
cmp
mov
jnp
push
inc
out
push
ljmp
sbb
cwtl
pop
cmp
ds
into
cmp
push
imul
jbe
popf
pop
les
movsb
imul
or
in
mov
cmpsl
movsb
push
fisubl
pop
jno
dec
rclb
nop
jne
pop
scas
bound
fisttpl
push
cmc
movsb
and
push
jle
aad
ss
xlat
test
mull
sbb
sbb
mov
pop
jmp
sbb
sti
jo
cld
adc
outsb
aam
loopne
add
ret
in
sbb
dec
clc
cld
movsl
mov
movsb
sub
add
mov
inc
inc
xor
data16
leave
filds
aad
test
loopne
and
cs
mov
jmp
rcl
jb
out
popf
psadbw
ljmp
or
mov
jae
fstpt
inc
cmp
mov
jo
dec
lcall
mov
lret
inc
adc
or
jg
inc
mov
cmp
mov
sbb
sti
addl
outsb
cmp
pop
sti
ficoml
cmp
add
test
cmpsl
xchg
sbb
cmp
clc
adc
mov
int3
add
clc
lea
push
inc
mov
mov
divl
out
pop
int3
xchg
xlat
sti
add
jmp
rol
pop
inc
and
hlt
test
js
ja
mov
arpl
push
aad
lea
mov
jne
jo
ficoms
stos
out
add
mov
vdivpd
imul
sub
test
stos
inc
jae
fldenv
mov
inc
sbb
sub
aas
xchg
push
fsubrs
jecxz
mov
push
sbb
mov
xor
or
xlat
and
cmpsl
daa
push
scas
sub
xor
xchg
pushf
mov
cmp
icebp
in
adc
jbe
inc
js
ds
or
cmc
lods
enter
nop
and
mulb
jge
pop
mov
mov
lods
aad
xor
xor
xor
aas
scas
fldl
or
cwtl
femms
rcrb
mov
xchg
push
fstps
inc
jecxz
ljmp
sub
push
mull
mov
out
leave
xchg
dec
rcr
xchg
ljmp
cltd
lods
jae
push
inc
mov
mov
fs
push
sbb
mov
dec
rclb
push
repnz
mov
cld
pusha
sub
clc
fmull
or
clc
imul
movb
shl
jae
sub
dec
sub
push
imul
push
inc
sub
xchg
jo
cmp
cmpl
jno
mov
or
repnz
jg
in
push
out
mov
adc
movsb
cmp
in
repz
insl
movsl
mov
sub
stc
jae
dec
add
call
in
xor
jecxz
fmull
add
lds
out
cmp
sub
mov
in
pop
cmp
cmp
cs
push
cmpsl
testb
into
xor
shlb
jno
xor
or
jb
sub
xchg
movsl
movsl
fs
jbe
mov
fwait
sahf
push
adc
lds
push
and
and
push
push
lods
xchg
mov
jge
idivl
sbb
outsl
adc
sub
mov
xchg
pop
imul
sub
repz
sar
push
jns
push
mov
sub
xchg
ret
add
and
imul
repz
mov
jnp
inc
jne
jecxz
xchg
jp
adc
or
cmp
pushf
int3
cmp
push
jno
lret
mov
shlb
push
jns
imul
arpl
rcll
icebp
pop
call
test
arpl
sub
jne
jmp
push
cmpsl
ror
in
jl
or
rcrl
pop
in
push
gs
pop
mov
cmp
adc
cmp
xor
xchg
out
push
mov
mov
sub
mov
lea
mov
pop
mov
xor
mov
mov
call
jmp
mov
mov
mov
loope
add
cwtl
jo
cmp
mov
jno
mov
lret
sub
addr16
jmp
push
cmc
add
xor
insb
mov
ds
test
xchg
xor
popf
filds
adc
xor
fildll
hlt
jnp
push
adc
lods
add
int
push
mov
pop
dec
loopne
jecxz
cmpsb
pop
stos
xor
fucomi
repz
ljmp
push
push
addr16
movsl
test
enter
jp
stc
fisubl
out
pop
aam
mov
fisttps
je
push
mov
jmp
lock
sub
jno
or
xor
jg
jge
pop
sub
lahf
pop
dec
mov
andl
loop
push
popa
inc
out
movsb
mov
mov
lods
pop
ja
xchg
ret
jmpw
pop
sahf
mov
shrb
stc
xor
sub
mov
shrl
inc
jmp
mov
xchg
cmp
imul
cmpsl
sbb
xchg
xor
push
daa
jmp
lds
ret
pop
push
xor
xor
in
add
and
inc
mov
pop
lahf
mov
rorl
jae
into
int
call
jle
adc
adc
pop
jns
gs
mov
add
push
push
ljmp
xchg
movsb
call
sub
movsb
mov
into
pop
add
lahf
push
ja
xchg
dec
sub
jl
scas
fisttps
mov
movsl
enter
jmp
pop
push
shlb
xchg
aam
scas
push
jbe
lret
and
add
adc
mov
call
js
rcll
pop
orb
outsl
push
mov
dec
call
iret
pop
mov
mov
fcmovne
mov
inc
in
in
rorb
cmp
mov
test
inc
aaa
cmp
test
leave
xor
cmpsl
sub
dec
mov
sbb
inc
fnstsw
add
lea
insb
mov
in
mov
xor
int3
cli
mov
cmpsb
fidivs
rcll
rep
xchg
mov
pusha
mov
outsb
adc
mov
out
xchg
fstpt
or
xor
loop
popf
inc
mov
enter
push
fmulp
outsb
das
push
addr16
push
sti
scas
ljmp
dec
push
iret
sub
popa
inc
mov
icebp
cld
or
jnp
adc
cltd
jge
adc
push
inc
sahf
mov
push
and
push
ss
pop
int3
inc
inc
xor
adc
push
std
push
in
nop
sahf
inc
stos
add
jne
cld
jp
test
cmp
int
mov
adc
or
repnz
ss
dec
jmp
pusha
push
and
sub
shr
add
xchg
pop
mov
mov
mov
into
fsubl
pop
cmpsl
pop
pop
into
xor
inc
mov
cmp
xchg
jge
dec
shl
mov
imul
insl
call
cmp
imul
lock
inc
inc
jnp
insb
js
std
mov
mov
fxch
sub
fcomi
sbb
or
bound
mov
fwait
pop
cltd
call
std
xchg
cmpsb
mov
xor
xchg
pop
sbb
in
sbb
pop
jno
fistps
fidivrs
adc
mov
outsb
stos
jnp
lds
dec
lret
data16
mov
enter
ds
jmp
adc
and
sub
mov
bound
and
mov
sti
hlt
adc
push
push
nop
add
fwait
das
pop
adc
loope
xchg
in
ljmp
xor
xor
shr
cs
movsl
mov
pop
jbe
mov
cmpsb
mov
jns
ficomps
dec
and
pop
pop
sub
push
mov
sub
mov
jne
iret
xchg
jp
xor
dec
inc
ja
in
fmuls
aaa
mov
xchg
adc
pop
das
or
loop
jp
sbb
inc
nop
movsb
call
mov
sarl
bound
add
lahf
push
lock
push
mov
xchg
xchg
insb
sbb
insb
mov
xchg
out
xor
jb
mov
push
pop
test
dec
jns
pop
sub
cmp
out
lds
inc
shlb
pop
shl
push
mov
cli
jmp
xor
add
fs
xor
dec
iret
scas
mov
mov
call
cmpl
les
out
in
jge
movsb
xchg
mov
popa
pop
scas
lret
adc
hlt
fbld
cmp
lods
cwtl
inc
jae
xor
add
gs
int3
mov
lret
xchg
aam
dec
aad
mull
or
cmc
test
movsl
dec
sbbl
rorb
jl
pushf
pop
stos
out
or
inc
or
xorb
int3
adc
iret
cmp
lret
inc
xor
lock
and
scas
loop
les
shr
xlat
das
mov
jl
xor
pop
into
pop
push
push
mov
sbb
fsubrs
fcomp
shll
in
xlat
inc
insb
jae
sbb
xchg
xor
adc
fcmovnu
inc
rcrb
aas
dec
cmp
mov
jno
scas
jne
sbb
inc
add
outsl
sbbl
popf
push
shrl
or
shl
lahf
ljmp
adc
inc
mov
pop
insl
and
lods
or
mov
sub
pop
es
mov
push
test
fidivs
adc
cmpsb
out
cmpsb
leave
cmp
js
lods
sub
test
mov
jmp
enter
xorl
lret
ds
and
sbb
push
sub
ret
imul
mov
jecxz
push
test
cmp
aaa
mov
jnp
inc
nop
outsb
mov
das
dec
sub
xchg
or
int3
pop
cltd
mov
in
xor
pop
lds
rcl
sub
movsl
jp
scas
out
mov
xchg
fistpll
fwait
ret
sub
inc
mov
mov
sub
aaa
xchg
mov
addb
jp
outsb
and
inc
mov
mov
gs
pushf
xchg
std
push
test
in
xor
sub
inc
sbb
fld
out
std
xor
pop
jecxz
push
testb
out
sub
pop
std
cmp
or
mov
out
pop
mov
mov
mov
mov
lods
adc
jmp
jmp
into
fstpl
fwait
fwait
cmp
xor
ret
mov
xorl
pop
jmp
push
sub
inc
dec
ljmp
add
push
mov
push
and
rol
inc
fidivrl
fadds
sbb
insl
das
popf
std
rcrb
sub
ror
sub
cmp
lahf
ds
sbb
pop
and
mov
cmp
dec
jl
js
mov
lock
js
adc
jo
sarl
and
inc
push
jecxz
movsl
nop
imul
inc
sbb
mov
mov
into
mov
add
mov
jb
xor
test
mov
clc
jmp
add
add
push
rcrl
mov
arpl
cmp
aad
cmc
push
cli
xchg
in
mov
lea
andl
popf
adc
icebp
fldl
pusha
xchg
ss
sub
pop
dec
loopne
sahf
cmpsb
cmpsl
scas
imul
fwait
loop
imul
or
inc
inc
popf
test
add
aas
loope
rcrb
enter
push
inc
jle
jle
dec
mov
mov
pop
aam
hlt
stc
aas
cmpl
inc
sbb
sahf
int3
add
ljmp
icebp
push
das
pop
stos
sbb
adc
sbb
nop
out
jp
cli
cmpsl
inc
je
fucom
into
movb
repz
pop
mov
pop
push
cmp
test
cmpsb
dec
negb
rorl
stc
leave
fstpl
sub
fldt
jle
insb
add
pushf
fstpl
mov
lcall
pop
sbb
jns
ret
sahf
xchg
lods
repz
inc
sbb
dec
push
fcmovnbe
dec
cmp
int3
loopne
jne
push
clc
jb
sahf
lahf
in
add
xchg
aad
push
lods
or
add
push
mov
push
shlb
inc
daa
adc
adc
aad
sbb
push
out
jg
and
adc
add
push
scas
sub
in
cmp
lret
jl
xchg
add
mov
icebp
push
mov
fidivs
aam
les
push
int
fnstenv
outsb
mov
aam
push
loope
je
push
xchg
xchg
mov
loope
pop
imul
add
and
stos
shlb
je,pt
dec
iret
test
jbe
cmp
adc
popf
mov
sti
repnz
and
orb
rorl
mov
pop
sub
fimuls
loop
push
lods
jb
ret
pop
sub
jns
add
fwait
push
xor
outsb
mov
addr16
rclb
fistpl
xchg
mov
ds
and
jecxz
jo
movd
decb
jle
mov
adc
popf
xchg
in
std
leave
fadds
xchg
pop
stc
mov
xchg
nopl
inc
cmc
add
pop
sub
dec
and
inc
stc
xchg
scas
push
stc
mov
lock
xchg
sti
lret
in
adc
das
or
xchg
sti
aad
insb
shll
fdivp
sahf
scas
add
fwait
adc
jp
xchg
jg
stos
jns
and
divb
dec
test
std
test
mov
fnstsw
xor
xchg
cmp
dec
pop
les
sub
movsb
mov
lods
js
in
js
jl
mov
jle
push
aas
cld
mov
mov
in
inc
lods
cmpsl
adc
cltd
fmul
cmp
push
jp
xchg
test
mov
xchg
rcrb
mov
insb
in
xchg
insb
in
subb
push
fs
mov
jmp
xchg
call
mov
mov
mov
push
movsb
pop
cmp
ficoms
inc
loope
mov
call
xchg
adc
imul
mov
xor
cli
inc
int
imulb
sti
mov
mov
in
dec
mov
jbe
rorb
push
aaa
outsl
test
movsb
ds
jbe
inc
ja
add
shrl
ret
xchg
dec
js
xchg
loop
scas
mov
cli
orl
sub
or
fcoml
fucom
hlt
adc
push
loop
xor
cmp
adc
lods
inc
inc
dec
xchg
adc
adc
repz
int
push
mov
pop
popa
pop
cmp
fwait
adc
lods
das
inc
aam
fcompl
add
xchg
cltd
sti
sub
js
jo
nop
add
lcall
mov
push
pusha
fwait
pop
xlat
add
mov
xchg
sbb
int3
xor
cmp
out
femms
ljmp
movsb
xor
in
bound
fdivp
in
inc
cmp
push
les
outsl
and
jecxz
push
jle
sbb
jne
nop
mov
lcall
popf
push
adc
mov
ret
add
sbb
mov
or
mov
xor
fcoms
xor
std
lods
int
das
dec
and
adc
and
mov
inc
imul
xchg
adc
push
roll
or
mov
mov
jnp
lock
aaa
loop
mov
jnp
mov
sbb
shl
repz
rcl
cmpsb
add
fnsave
xor
adc
lahf
add
and
stos
loop
inc
or
scas
andl
pop
jle
sbb
mov
jbe
in
mov
push
mov
and
pop
sub
leave
nopl
in
xlat
in
fisubrl
cmp
mull
and
adcb
xor
xlat
movsl
mov
imul
movsl
add
mov
sub
mov
les
std
in
fucomp
or
and
jo
sbb
mov
add
sbb
jns
adc
or
sbb
jge
push
push
pop
mov
ja
xchg
dec
roll
add
inc
mov
scas
sub
cli
fs
add
push
andl
push
leave
ds
and
xchg
mov
mov
dec
mov
sub
mov
or
test
cmpsl
sti
jl
push
stc
xor
mov
inc
ja
fwait
add
repnz
xchg
add
pop
lods
fstpt
mov
cli
sbb
out
inc
ret
js
enter
rorl
je
lret
jp
pop
jmp
out
jns
mov
xchg
imul
mov
test
inc
or
sbb
jne
or
mov
or
inc
lods
mov
and
dec
xchg
sbb
inc
jge
xchg
adc
fs
adc
out
ljmp
ret
adc
scas
dec
test
pop
jge
add
add
dec
int
xchg
jbe
shl
pop
add
cmp
lods
mov
or
cmp
mov
addb
adc
pop
xor
jnp
mov
dec
jb
cmp
mov
sbb
out
jno
xchg
addr16
dec
xor
adc
mov
pop
jge
and
cmp
mov
mov
ja
inc
loope
std
jle
and
addr16
fldl
mov
pop
dec
adc
xor
jmp
sub
sub
xor
xchg
sub
pop
shl
negl
outsl
pusha
or
sbb
push
sbb
addr16
outsl
mov
xor
mov
pop
orb
gs
mov
inc
sbbl
out
iret
subb
outsl
or
jmp
and
nop
test
cmc
sub
and
and
sub
in
and
sub
add
mov
pop
mov
out
mov
mov
dec
shll
cmp
es
ss
lret
push
lods
dec
jo
lcall
data16
repz
adc
xchg
call
repnz
hlt
les
icebp
cs
cmp
mov
xlat
pushf
jo
adc
lret
int3
or
ret
xchg
repnz
and
pop
in
and
mov
lret
bound
fwait
imul
lahf
xchg
jns
push
cmpsb
in
push
push
je
lods
icebp
push
js
into
pop
sub
push
cmpsl
adc
sbb
or
lcall
icebp
call
insb
xchg
or
pop
sbbb
arpl
xor
lret
jle
std
and
dec
mov
sbb
cs
fs
mov
ljmp
adc
push
mov
stos
shrl
repnz
loopne
out
cmp
push
xorl
jns
sub
int3
mov
push
insl
in
push
mov
nop
mov
adc
mov
loop
adc
mov
lods
dec
mov
and
pop
ret
into
pop
pusha
dec
cmp
push
js
mov
repz
jge
mov
or
lahf
clc
jmp
xchg
call
insl
stos
repz
pop
cltd
int
jae
sub
inc
nop
mov
mov
xchg
iret
cmp
cmp
mov
cmp
ss
push
outsb
adc
test
fst
dec
imul
jmp
dec
pop
roll
std
out
jae
xor
decl
lahf
mov
rcr
aam
into
outsl
jmp
add
jle
leave
lret
idivl
imul
and
push
pop
xchg
inc
pop
cs
and
sbb
lods
cmp
pop
loopne
pop
and
mov
cld
call
jle
es
scas
es
pop
aaa
ljmp
cwtl
sub
mov
rcr
fwait
sbbb
add
outsb
stos
enter
test
mov
add
lret
xor
outsl
add
pusha
lods
cmp
push
jp
cmp
in
daa
push
out
mov
push
jne
inc
je
popa
in
add
cltd
sbbb
icebp
sti
ret
fldenv
add
jbe
mov
dec
sbb
adc
mov
lahf
rcrl
loope
push
xor
rclb
adc
call
sbb
pop
jmp
cwtl
sub
mov
xor
xor
movsb
jns
push
and
cmp
sarb
add
pop
mov
fbld
rcll
cmp
in
data16
push
cs
cmp
in
jo
mov
pushl
jnp
push
cmpsl
in
out
movsb
lds
fdivl
inc
ret
jnp
data16
pop
int3
jecxz
lock
call
pop
push
shrl
cmc
mov
xchg
adc
fcmovne
je
jge
icebp
lock
sbb
push
push
fidivs
push
xor
sbb
jnp
in
sub
xchg
leave
sub
fmuls
jne
pop
xchg
movsb
and
stc
negb
add
push
push
lea
daa
sub
jecxz
loope
and
dec
inc
xor
jg
cltd
es
push
push
cmp
xchg
cmp
fmul
push
adc
repz
xchg
movsl
mov
jo
push
sub
ret
outsl
dec
sub
out
mov
pop
stos
aam
faddl
cmove
ficoml
sub
xchg
iret
jae
dec
adc
pusha
fcom
insb
sbb
cli
pop
pop
mov
pop
xchg
push
mov
orb
ja
shl
dec
jg
out
icebp
sbb
cmp
mov
repnz
sti
dec
leave
std
cmc
mov
pop
enter
lret
and
int
inc
fcomps
aas
popf
cli
arpl
hlt
push
das
in
lock
subb
popf
bnd
sbb
jecxz
pop
movsb
xchg
mov
outsl
or
mov
inc
int
movsl
cmp
pop
jg
mov
or
into
imul
dec
aaa
jns
jnp
or
nop
mov
js
cmp
push
cwtl
fisttpl
lea
scas
cli
call
cwtl
pop
dec
jae
loop
sub
jmp
out
sbbl
pop
or
int3
lock
push
pop
inc
int3
mov
pop
and
and
mov
gs
cltd
pop
sub
jns
ds
mov
hlt
outsl
out
pop
clc
in
and
jge
mov
push
mov
cmp
pop
inc
jo
sub
clc
add
data16
iret
and
insb
mov
dec
mov
pop
ret
sub
mov
jp
sub
imul
mov
sub
mov
ljmp
sub
rcrb
lret
test
aam
lods
mov
inc
jbe
mov
jb
xchg
test
add
mov
pop
and
stos
fwait
pushf
jbe
dec
cmp
dec
aam
jl
inc
scas
cmpl
jns
xchg
jne
loop
psubusb
icebp
sbb
and
mov
push
pop
add
sub
ret
sti
shrb
or
cmp
jb
daa
cli
clc
jg
cmp
shll
xlat
dec
popa
add
mov
ss
mov
subl
cltd
lahf
into
scas
xor
mov
ror
jbe
sar
loopne
and
push
dec
xlat
xchg
add
rolb
andl
and
mov
sarb
out
hlt
stc
test
pop
xchg
cmp
ror
and
mov
xchg
or
mov
mov
clc
ret
punpcklwd
and
sbb
dec
imulb
icebp
push
cmp
out
xorl
stos
das
push
push
fwait
test
outsl
sbb
push
ljmp
xchg
pop
fidivs
adc
lea
ret
xor
outsl
push
push
leave
sub
test
push
or
test
jb
and
pop
dec
xchg
in
fisubl
mov
mov
adcb
in
adc
push
sbb
insl
inc
aad
dec
jmp
mov
sub
push
sub
sub
mov
cli
fstps
mov
test
xchg
mov
xchg
sub
xchg
shll
fs
out
outsl
sub
inc
mov
dec
xchg
jbe
dec
and
jp
inc
js
addr16
icebp
push
lcall
ja
pop
cmp
leave
movsl
cld
pop
push
jmp
jl
xchg
xchg
sbb
sub
mov
and
loopne
mov
push
insb
xchg
push
ds
mov
bndldx
fwait
xor
pushf
mov
repnz
cmpsl
test
cld
loop
arpl
xchg
xchg
aaa
jl
aas
pop
adc
mov
incl
arpl
and
push
push
xchg
sti
in
cli
and
adc
shll
mov
sub
in
popa
sub
rcrb
pop
call
or
ret
fnsave
sbb
out
test
in
cmpl
add
movsb
call
popa
xchg
outsl
and
xchg
xchg
inc
arpl
xchg
mov
xor
addr16
dec
push
mov
daa
pusha
mov
cmp
fsubs
imulb
ret
neg
cwtl
popa
dec
xchg
and
xchg
dec
mov
int3
lea
sub
daa
out
rolb
rcr
cmp
ret
shl
or
gs
test
aaa
stos
sub
cmp
imul
mov
sub
clc
jbe
into
and
scas
in
ss
adc
test
adc
sarl
jno
inc
adc
add
pop
push
and
pop
xlat
xor
repnz
in
jo
xchg
shlb
rcrl
push
inc
pushf
add
push
ljmp
jl
mov
jb
jno
lds
in
mov
in
add
mov
jmp
sub
cmp
movsl
pushf
add
cmp
mov
pop
adc
lock
and
test
pop
test
ds
cwtl
xor
aad
jo
add
xor
jle
shll
pop
lahf
xchg
call
dec
insb
mov
aas
or
fdivs
and
xor
neg
mov
sub
jp
dec
pop
mov
jecxz
add
jl
push
xchg
sbb
inc
pop
cltd
int3
orb
mov
mov
and
jb
pusha
das
cmc
rol
mov
pop
movsb
push
stos
test
call
mov
rdtsc
add
adc
dec
mov
in
pop
lds
push
mov
test
inc
mov
jmp
xchg
jnp
rcll
xorb
outsl
adc
imul
mov
push
or
repnz
cmpsl
loop
mov
pop
stos
mov
dec
pop
insl
lahf
xchg
sub
and
mov
sbb
aad
ja
icebp
cltd
xor
lcall
dec
je
xor
sti
mov
lret
xchg
negb
aad
xchg
dec
push
lods
pop
add
add
add
pop
es
mov
in
or
pop
push
iret
add
enter
out
fcoml
es
mov
inc
sub
std
rcrb
dec
into
inc
aas
pop
sub
push
fs
mov
mov
mov
push
xchg
iret
mov
icebp
jg
xchg
fprem1
sub
xchg
xorl
mov
cltd
aas
dec
adc
and
jo
clc
mov
pushf
xor
ret
ljmp
loope
jp
mov
dec
cmp
mov
jle
pop
mov
inc
pop
jbe
mov
lret
mov
test
imul
insl
inc
decb
mov
mov
sbb
and
lret
es
je
std
insl
shl
mov
div
call
in
push
stc
ja
or
add
enter
jecxz
xchg
clc
dec
pop
xor
dec
ret
stc
inc
adc
pop
add
repnz
and
jb
ss
inc
dec
inc
pop
addr16
pop
fs
and
sbb
test
bound
pushf
lret
adc
fisubrl
sbb
dec
add
repnz
inc
jne
movsl
add
mov
movsl
rcll
sub
push
push
popa
add
xchg
mov
or
or
jecxz
pop
jo
mov
and
sbb
cmpl
mov
pop
xor
fs
jbe
cmpsl
stos
imul
fsubl
ljmp
xchg
shrb
ljmp
in
roll
dec
cmp
add
xchg
cmp
scas
adc
imul
sbb
pop
and
jae
pshufw
ret
shlb
cltd
cmpsl
inc
dec
mov
inc
mov
dec
jo
aas
push
xorb
inc
ljmp
idivl
or
or
adc
sub
ss
mov
lret
cmpsb
mov
pushf
mov
mov
mov
pusha
and
xchg
fcmovb
xlat
pop
sbb
xchg
sbb
inc
xchg
hlt
push
lret
pop
mov
mov
ss
je
pop
mov
cltd
xchg
cmpsb
lahf
lea
xchg
mov
cmpb
and
das
jno
xor
xor
push
rcrl
mov
inc
xchg
jnp
xchg
pop
enter
out
mul
xchg
push
pop
repnz
add
inc
mov
xor
rorb
xlat
adc
mov
pop
lret
cmp
sbb
sub
push
xor
std
xchg
lcall
mov
cmpl
pop
sub
push
mov
sub
movsb
pop
clc
loope
jl
loop
jae
not
fisubrl
filds
push
js
adc
loop
das
mov
rolb
cmc
adc
mov
ds
pop
scas
test
or
rclb
xchg
add
push
mov
gs
jge
fnstsw
ret
push
add
add
or
in
mov
and
mov
imulb
cmp
mov
lahf
aas
pushf
sub
adc
ss
jne
sti
pushf
pop
das
imull
mov
cmp
pop
sbb
imul
or
dec
or
xchg
leave
fidivrl
cmp
aaa
push
push
or
hlt
pop
clc
add
data16
scas
daa
sbb
pushf
roll
jne
test
jnp
aas
cld
push
dec
inc
mov
pusha
add
popaw
jbe
push
mov
mov
push
cmp
xchg
mov
mov
sbb
arpl
imul
xor
push
leave
add
jecxz
xchg
sub
cmp
push
arpl
push
lcall
lcall
sbb
les
mov
pop
push
push
fcmovnu
arpl
test
lret
jb
cmp
loope
cmp
nop
lahf
cmpsl
sub
adc
in
call
mov
addr16
aas
fcomps
xchg
mov
test
push
movsb
xchg
subl
lret
push
pushf
jg
js
or
cmp
aad
fcomp
repnz
cli
repnz
movsb
repnz
inc
xchg
cmp
inc
stos
add
cld
inc
xchg
je
fs
sbb
ret
popf
sub
mov
sub
mov
push
stos
cmp
jbe
xchg
xchg
and
push
imul
ja
inc
gs
lea
and
repnz
popf
fbld
es
jle
xchg
inc
push
and
insl
lahf
jg
xchg
add
mov
jl
pop
dec
out
enter
push
es
stc
repz
in
push
dec
add
mov
icebp
sub
cmp
jl
add
inc
inc
loopne
xlat
inc
lds
adc
adc
inc
je
bound
pop
arpl
dec
inc
add
jge
jb
dec
mov
cmp
pop
out
mov
int3
cwtl
inc
add
loope
sti
sub
mov
incb
mov
fstpl
pop
mov
xor
imul
xor
out
mov
stos
and
mov
fdivs
inc
mov
pop
shll
xor
xchg
inc
ljmp
ret
test
pop
sbb
dec
or
aad
pop
cmp
lcall
outsb
push
addr16
push
test
add
imul
jmp
int3
ret
sti
inc
pop
pushf
sbb
add
xlat
int
shl
test
jmp
jo
loope
test
pop
cmp
xchg
jge
test
scas
dec
pop
add
cmpsb
inc
outsb
push
arpl
in
push
mov
inc
xchg
add
cmc
outsl
mov
push
sbb
pop
mov
mov
sbb
aam
add
or
mov
jb
out
movsl
cmpsl
xlat
add
iret
jbe
add
adc
push
mov
decb
xor
dec
adc
into
pop
mov
in
sub
fs
ja
aad
frstor
pop
idiv
repnz
inc
mov
test
mov
mov
dec
mov
xchg
mov
inc
lea
movsb
mov
rcrl
je
pop
imul
es
cltd
movsb
push
or
or
cltd
gs
sbb
orb
imul
sub
and
clc
mov
sub
adc
lahf
sub
insl
leave
cmc
inc
pop
test
shll
cs
adc
xor
cmpsb
mov
mov
inc
sub
pop
inc
push
jmp
sahf
test
js
cmpsl
mov
aaa
xchg
imul
dec
cmp
stos
jne
adc
dec
fcompl
xchg
fiadds
push
pushf
data16
jbe
dec
out
mov
pop
stc
loopne
xor
lcall
mov
mov
int3
and
sub
cmp
ret
dec
loop
in
sahf
shr
dec
mov
cld
push
fdiv
xchg
sub
popa
nop
jb
int3
lahf
xor
mov
cwtl
js
sbbb
xor
cmp
cli
es
cltd
fstps
insl
add
frstor
addl
and
push
push
mov
add
dec
outsb
add
rcrb
add
adc
negl
in
jl
cmpsl
scas
sub
pop
and
pop
inc
xor
add
leave
lock
or
fists
mov
mov
cmc
stos
ja
test
pop
les
aad
scas
faddp
les
mov
and
cmp
ret
sub
push
shl
add
dec
rcll
add
adc
loopne
mov
fnstenv
pop
mov
mov
pop
jmp
mov
int3
cmp
adc
cld
dec
lret
inc
add
sbb
jns
adc
jne
into
xchg
pop
scas
pop
pusha
das
cld
aam
pop
jge
push
mov
enter
cmp
dec
inc
dec
stos
sbb
or
inc
mov
xor
adc
fcomps
mov
inc
or
pop
fwait
addr16
lcall
pop
adc
jbe
data16
adc
xor
push
hlt
test
aad
mov
hlt
sub
dec
cli
mov
xor
mov
int
xor
gs
rcll
cmp
or
js
push
cmpsb
xor
push
shlb
jo
test
bound
mov
inc
movsl
cmp
jno
cmp
mov
dec
insb
mov
repz
xchg
les
xchg
pop
stos
in
call
mov
cmpsb
push
jne
xchg
or
mov
push
mov
sub
call
ret
das
loopne
icebp
xchg
ret
or
in
push
int
fcompl
push
rorb
scas
in
incb
fdivl
test
jmp
cmp
mov
mov
iret
push
repnz
cltd
shll
and
or
add
in
xorb
repnz
lods
adc
inc
mov
jo
or
push
xchg
pusha
int3
xchg
mov
jge
aam
paddusw
scas
inc
sub
mov
pop
mov
mov
or
jnp
add
loop
test
mov
mov
cmp
inc
sub
and
std
out
cli
push
loop
add
inc
pop
inc
sbb
xchg
xchg
rorb
push
push
leave
xchg
mov
xor
jae
notb
sub
mov
popf
cli
sub
lret
jae
mov
lock
push
arpl
xchg
scas
xor
sub
sbbl
pop
not
test
mov
dec
js
jp
adc
lret
aas
icebp
jmp
je
pop
pop
adc
cmp
imul
mov
or
mov
insl
sbb
push
adc
lock
int
lods
loop
mov
icebp
sbb
sub
test
insl
je
aad
mov
insl
dec
lods
rcr
mov
push
out
scas
and
sahf
sbb
cmp
out
mov
imull
aaa
mov
and
push
xlat
insl
pop
icebp
into
mov
aaa
pop
jne
pop
rcr
push
inc
sarl
loop,pt
sti
jne
inc
pop
addl
jns
push
filds
clc
clc
mov
pop
cltd
add
pop
movsl
lods
jno
push
nop
and
jns
cmpsl
shr
push
cmp
das
loopne
loope
hlt
ss
inc
xchg
xchg
or
popa
outsb
jae
xchg
fsubl
pop
cli
sbb
mov
cmpsb
dec
dec
std
sbb
fwait
mov
jbe
or
clc
jg
mov
jmp
cmp
or
cld
mov
adc
cmpsb
xor
dec
inc
mov
jne
add
mov
mov
arpl
push
dec
push
sub
and
xchg
in
repz
jge
shrb
mov
mov
dec
js
inc
add
adc
dec
ret
fcompl
push
outsb
adc
fsubr
rolb
repz
dec
sub
mov
stos
loop
mov
ret
mov
dec
adc
fwait
stos
sub
xor
xchg
inc
mov
jp
sbb
out
lret
mov
iret
sahf
xor
clc
mov
pusha
jmp
loop
mov
fidivs
lods
mov
xlat
xchg
or
fists
lock
das
sub
xchg
cli
sub
lds
cwtl
fisttpl
lods
adc
out
icebp
jl
xor
xlat
push
cmp
cmpsb
jmp
arpl
je
in
pop
jb
jns
pop
shlb
and
loope
aam
cmc
cmp
mov
add
jl
mov
stc
mov
cmp
pop
ret
popa
push
gs
lock
es
outsl
frstor
push
outsb
enter
push
xchg
nop
push
clc
test
cmp
adc
jl
jmp
jg
fldl
lahf
aas
xchg
cs
pop
xchg
bound
jbe
mov
dec
lea
dec
fisubrl
fdivrs
and
aas
or
ret
jnp
jecxz
test
jmp
xchg
loop
or
ja
orb
cmp
lea
jae
lock
jns
and
sbb
popa
jp
push
push
mov
out
cmp
dec
pop
daa
fs
cmpsl
mov
and
xor
pop
ss
inc
std
es
jne
pop
push
xchg
sub
xor
pop
jle
inc
ret
jo
leave
insb
add
xlat
mov
push
lock
inc
dec
and
repz
cmpsb
or
inc
mov
add
scas
push
mov
dec
dec
out
push
adc
xor
inc
int3
daa
pop
ret
and
mulps
cmp
ja
inc
xor
jae
icebp
lcall
jnp
sub
mov
jp
adc
leave
mov
jns
iret
push
mov
xor
jmp
andb
shl
out
je
sbb
adc
and
push
out
pop
jecxz
mov
xorb
mov
inc
xchg
jg
adc
or
leave
add
nop
or
loop
into
and
fisttps
sbbb
mov
fnstsw
add
dec
ret
cmp
movsl
hlt
inc
pop
insl
dec
jle
cld
add
push
cmpsb
mov
jo
jmp
adc
jae
les
jno
xor
gs
nop
out
jl
sbb
dec
push
pop
jns
pop
add
lods
enter
fiaddl
jp
or
xchg
in
test
fmuls
and
cmp
pushf
add
add
jecxz
jne
push
in
daa
lahf
and
sahf
bound
in
cld
stc
and
fbstp
pop
add
mov
inc
lret
cmp
sub
push
adc
add
push
aam
mov
mov
jmp
stc
loopne
adc
xchg
iret
mov
sbb
shl
cltd
jp
pop
lret
lcall
inc
adc
mov
add
xchg
or
outsw
lods
lock
inc
testb
push
add
pop
fld1
dec
jle
adc
pop
add
xor
add
xchg
push
jg
push
push
xchg
movb
xorb
adc
xchg
push
shrl
inc
cmpb
test
fcomi
test
mov
cmc
shll
dec
scas
push
jne
inc
ljmp
ss
bound
ja
inc
pushf
xchg
lods
and
xor
mov
and
jl
dec
pop
andb
arpl
and
pop
mov
jns
out
mov
or
dec
xchg
repnz
cmpsb
lret
daa
clc
lahf
gs
hlt
add
xor
divb
ds
or
sbb
push
push
daa
inc
pop
ret
mov
jmp
jae
cmpsl
jp
jbe
push
push
popf
pop
mov
mov
pop
mov
pop
mov
sti
popa
sub
sbb
adc
or
stos
and
sub
dec
dec
mov
push
adc
fcoml
sahf
dec
test
mov
shlb
jne
lods
out
or
push
jmp
adc
stos
imul
repz
add
jo
and
pop
pop
jbe
das
and
inc
sbb
add
in
mov
imulb
std
movsl
sbb
pop
xchg
roll
and
nop
scas
sbb
rclb
sub
pop
cli
mov
add
in
ss
pop
fdivs
xor
popf
fnstsw
pop
push
bound
adc
and
mov
dec
stos
ss
dec
outsl
dec
aaa
int
pop
divb
or
movl
xchg
sub
or
dec
mov
jmp
in
stos
or
xchg
cmp
xchg
in
mov
mov
repnz
pusha
rcrb
pushf
shl
xchg
mov
xchg
push
sub
mov
clc
jns
xor
call
test
add
adc
ret
push
cltd
mov
fstp
inc
movsb
xchg
sub
lods
mov
mov
es
adcb
adc
int
add
out
push
nop
sahf
mov
xchg
not
cmp
hlt
ficompl
into
or
inc
or
fidivl
int
cmp
stc
jge
fiadds
cwtl
scas
or
inc
jmp
sub
movsl
mov
aam
pop
xorb
cmpsb
lret
and
mov
scas
dec
iret
ss
inc
fdivrl
jg
push
inc
lahf
cwtl
ret
sbb
dec
inc
xchg
mov
jmp
lea
push
mov
push
and
lods
cmp
sbb
adc
outsl
or
or
push
dec
or
mov
adc
sub
call
dec
add
cli
mov
add
jmp
test
mov
gs
rcll
mov
fsubl
mov
pop
add
shrb
xchg
add
sahf
xchg
je
cmp
push
lea
push
gs
popa
cmpsb
adc
mov
push
xor
mov
adc
dec
pop
movsl
cmp
js
inc
add
insb
outsb
add
and
push
xor
or
or
or
push
lea
jge
in
sbb
cmp
out
fwait
cltd
fs
sbb
adc
ret
imull
push
sub
sbb
cvtpi2ps
mov
mov
jge
adc
xchg
inc
jmp
enter
arpl
repnz
lods
fstpl
inc
mov
out
or
mov
jo
imul
add
rol
sub
out
xor
dec
movb
movsb
mov
add
and
imul
stos
pusha
out
mov
lds
imul
dec
mov
or
mov
jb
cmp
out
pop
cmp
mov
rol
int
pop
mov
aam
adc
sbb
push
push
mov
mov
out
lcall
das
add
pop
jbe
mov
aaa
sahf
xlat
xchg
addl
push
mov
pop
imul
mov
ds
ljmp
jmp
arpl
pop
cmpsl
jmp
sbb
mov
inc
or
inc
pushf
inc
out
loop
push
insl
mov
pop
sti
out
adc
lret
mov
add
mov
sbbb
xorl
xchg
push
jo
mov
rcrl
or
pop
mov
lahf
addl
fsubr
call
sub
xchg
pop
mov
sbb
sub
jl
cmp
pop
and
xor
lcall
or
ds
push
inc
xor
cmp
add
push
sar
jge
inc
icebp
test
xchg
pop
std
push
sub
idivl
gs
jecxz
inc
imul
or
inc
inc
test
jge
stc
cmpsl
xor
and
fidivs
ja
push
jecxz
lock
push
pop
xchg
arpl
pop
hlt
add
cmp
test
jns
push
cmp
repnz
adc
call
push
dec
arpl
and
or
into
lods
fs
sub
imul
mov
mov
and
push
pop
add
ss
push
hlt
mov
and
movsb
je
dec
add
js
mov
loope
inc
mov
fwait
cmp
test
test
loope
test
cmp
pop
inc
aad
dec
xor
bsr
adc
sub
popf
sub
adc
sub
mov
ds
jp
mov
jo
les
adc
xchg
jne
sbb
sub
mov
xchg
mov
push
ror
mov
dec
add
lock
inc
cmp
jne
call
mov
sub
int3
ret
mov
mov
stos
loop
fwait
add
pop
jno
shr
jmp
cmp
je
pop
add
inc
lcall
xchg
daa
push
sbb
cmp
add
in
push
clc
jmp
std
mov
sub
or
add
jle
push
sahf
pushf
movsl
add
loop
std
sarb
adc
sub
dec
or
adc
jne
call
stos
or
cmp
mov
and
mov
jle
les
movb
jle
sub
or
inc
insl
into
adcb
inc
mov
mov
or
out
mov
xchg
sub
leave
cmp
dec
push
pop
and
add
xor
dec
cwtl
add
mov
in
sub
xlat
sbb
inc
repnz
out
out
aam
js
mov
pusha
test
push
pop
jnp
ljmp
dec
xor
outsl
pop
cmpl
sarb
mov
popf
in
xchg
test
pop
sbb
clc
sarl
jbe
imul
mov
adc
filds
sar
test
js
imul
std
fdivrs
mov
rcll
dec
mov
lcall
ret
cmpb
or
fldenv
xchg
movsl
xorl
or
leave
add
in
cmp
repz
gs
and
add
jbe
enter
lods
in
addr16
in
jp
clc
sti
cbtw
sbbl
popf
sti
shrb
push
inc
adc
cmp
push
dec
xor
mov
movsb
lret
ljmp
orb
adc
mov
adc
not
icebp
mov
jge
lods
adc
sbb
cmp
orps
jnp
les
repz
and
popf
xor
lea
pop
imul
sarb
mov
adc
xor
fisubrs
sti
mov
pop
orl
je
jne
int
and
xor
cmpsb
jns
mov
push
daa
inc
adc
stos
aas
mov
sub
neg
jnp
add
dec
xor
add
imul
in
mov
out
sti
pop
sahf
lods
xchg
xor
dec
dec
imul
xchg
lcall
mov
movsl
ja
push
jle
gs
stos
cmp
cltd
imul
or
pop
neg
pop
stc
mov
dec
std
xchg
in
testl
insb
popf
out
xor
test
in
fildll
cwtl
jl
movsl
dec
inc
jecxz
loop
mov
sbb
rol
jmp
mov
add
and
inc
fnstenv
push
mov
cmp
jge
add
sti
push
das
dec
push
stos
xchg
mov
xor
mov
push
loope
mov
sbb
faddl
cwtl
cld
bound
push
xor
cmc
add
mov
ret
sub
sbb
test
xor
xchg
out
test
shr
loopne
push
aas
pusha
enter
pop
mov
mov
dec
cld
xchg
mov
repnz
and
xlat
out
ret
fnstsw
lret
repz
cwtl
lret
ja
adc
rorb
cmp
nop
out
adc
xor
ret
xchg
add
cmp
ja
sti
imul
daa
xor
xor
leave
push
lcall
or
push
mov
mov
adc
adc
pop
lahf
into
movsl
pop
xor
lret
mov
cli
adc
cmpsl
jle
cltd
movl
xchg
pop
mov
pushf
push
sub
cli
jne
loop
imul
add
out
sbb
cli
call
mov
mov
mov
cmpl
mov
xor
inc
mov
rorb
xchg
sub
rcrl
or
fwait
xchg
cmpsb
jb,pn
push
jno
mov
adc
out
dec
sbb
out
div
mov
pop
jecxz
ljmp
dec
repz
test
dec
and
sub
sbb
pop
data16
xchg
mov
call
push
lret
pop
movsb
and
arpl
xor
scas
inc
xchg
cwtl
push
pushf
mov
repnz
test
test
lret
out
xor
push
outsl
adc
push
in
cld
fsub
mov
pop
inc
mov
mov
cli
addl
daa
fisubs
rcrl
xchg
fadd
ret
mov
push
popa
adc
mov
lea
or
cmp
jbe
jbe
mov
mov
je
in
decl
push
xor
lret
dec
int
div
pmulhuw
pop
push
xor
mov
outsl
pusha
inc
mov
adc
shrl
sbb
dec
jmp
push
insb
xchg
and
pusha
mov
push
cmp
mov
imul
mov
and
mov
stc
insb
xor
sbb
xchg
lea
and
out
cmpsb
or
cmp
testb
pop
mov
in
jnp
lods
or
xchg
cmp
out
dec
mov
or
xchg
mov
lahf
outsl
jg
out
xor
fcmovu
insl
lods
inc
pop
aas
leave
in
add
std
movsl
ss
stc
and
jno
mov
insl
push
enter
mov
adc
inc
xor
lds
jge
xor
mov
movsl
push
decb
out
pop
or
xchg
xor
push
xchg
and
cmc
jnp
loop
aaa
inc
data16
pop
pop
jb
mov
mov
sbbb
xchg
xchg
stc
xor
pop
aam
ljmp
js
cli
sbb
push
sub
es
outsb
cmp
aaa
nop
test
cmc
lahf
jl
add
shlb
subl
push
out
mov
icebp
push
inc
adc
mov
outsb
mov
jg
dec
pop
xchg
and
mov
adc
addb
pop
xor
mov
ljmp
xor
dec
pop
mov
push
xchg
xchg
les
lret
or
cmp
dec
insb
shlb
xor
adc
mov
lcall
stc
xchg
adc
adcb
ret
fistps
stos
pop
movsl
jo
sub
jns
sbb
das
push
frstor
push
xor
inc
xchg
cs
mov
adc
daa
push
xchg
cmpsb
or
out
insb
fnstsw
push
xlat
sbb
out
les
sub
dec
rol
fcompl
sti
jmp
out
dec
xchg
xor
cmp
outsb
shll
push
sbb
test
and
mov
mov
add
dec
or
out
cmp
push
add
jmp
cld
dec
add
jp
sahf
mov
loope
ljmp
mov
stc
xchg
push
jl
mov
mov
mov
sbbb
in
scas
lret
mov
leave
mov
jb
shlb
inc
push
cmpsb
push
xchg
and
pop
push
cmp
sub
popa
sbb
movsl
cs
cld
scas
jge
cltd
call
out
adc
pop
pop
adc
xchg
and
js
in
mov
sub
pop
jl
add
cmp
out
in
mov
int3
mov
push
lds
mov
ret
loopne
bound
or
sub
mov
adc
nop
outsl
aam
add
aas
sub
sahf
out
mov
aad
inc
push
pop
or
imul
mov
xor
jno
and
das
inc
lods
add
xchg
mov
fidivl
mov
enter
adc
jbe
mov
cmp
or
insb
pop
mov
push
inc
pop
xchg
xchg
add
cmpsb
xchg
push
jmp
xlat
xorl
lahf
sub
jbe
in
in
xor
es
loopne
pop
push
scas
call
fdivl
enter
mov
sarb
mov
shl
fnsave
push
jb
icebp
cltd
push
stos
das
fdivrl
ss
sbb
pop
popa
xchg
or
in
pusha
cli
mov
dec
pop
jo
pop
mov
fstpt
fs
pop
cwtl
pop
sub
or
xchg
and
nop
jne
pop
call
insb
test
popa
cmpsb
sbb
dec
int
jnp
push
outsl
repnz
mov
cwtl
insb
dec
xchg
xor
xchg
cs
pop
sahf
dec
popa
sbb
loope
xor
sti
inc
pop
xchg
xor
es
sar
add
cmp
xor
imul
mov
mov
ja
push
pop
incl
sbb
pop
mov
aad
xchg
mov
adc
stos
cmovb
test
bound
jae
and
push
int
lods
add
lea
scas
jae
repnz
outsl
in
mov
jno,pt
es
mov
loopne
cli
lcall
or
stos
pop
test
xchg
sub
xchg
das
jbe
ss
loope
in
lahf
mov
ljmp
test
in
mov
sarb
out
ret
lcall
pop
inc
jl
mov
cmp
sbb
add
xor
jmp
mov
or
or
sbb
int3
or
pusha
je
sub
inc
sub
mov
inc
les
pushw
pop
nop
push
lret
loope
push
test
stos
push
cmc
add
sahf
pop
cld
adc
mov
jl
stos
js
shr
insl
adc
mov
lods
lods
popa
jno
cli
outsl
out
scas
mov
jp
fld
aas
xchg
in
es
or
cmp
int3
out
shl
inc
mov
sub
out
push
jg
ss
add
adc
push
adc
in
jnp
xchg
mov
sub
adc
pop
pop
cmpsl
inc
fwait
cltd
test
shrb
jbe
dec
or
rcr
lods
pop
nop
in
call
lcall
nop
mov
xor
xor
or
sbb
aam
or
pop
test
pop
fldt
or
jno
cs
cwtl
mov
lret
push
fwait
jp
fs
mov
push
lea
xlat
das
ljmp
inc
inc
cld
cmpl
push
sbb
jo
call
rorl
sbb
xor
or
pop
mov
mov
subb
or
jg
dec
pop
ljmp
or
mov
ficoml
divl
arpl
lar
pop
out
mov
push
outsb
jno
lock
push
nop
aam
popf
stos
and
pop
or
adc
push
or
mov
dec
ffreep
pop
lods
js
in
mov
shl
test
sbb
xchg
and
in
into
sbb
dec
jecxz
dec
mov
add
xchg
loop
nop
xor
or
push
das
inc
cmp
sbb
cmpsl
pop
mov
int
leave
dec
adcl
fsubp
testb
int3
das
or
mov
mov
xor
inc
orl
jmp
mov
or
fistl
movsb
sbb
push
jbe
mov
in
xchg
testl
cmp
notl
xor
add
cld
or
loop
in
mov
adc
loope
jae
test
fs
sub
negl
xchg
and
push
cmpsl
stos
sahf
add
inc
push
xchg
in
inc
daa
imul
and
lea
and
inc
mov
pop
mov
sub
cwtl
pop
sub
cld
bound
pop
pop
cmc
sbb
sub
pop
mov
jo
xor
jmp
dec
mov
mov
mov
stc
data16
ds
popa
mov
pop
fs
loop
loope
jnp
jmp
lcall
adc
lods
xchg
pop
outsb
rorb
push
fdivs
cld
push
or
mov
outsb
inc
in
and
lcall
push
shl
mov
mov
mov
arpl
adc
in
cmpsb
subl
xchg
jne
clc
psubusb
xchg
push
mov
iret
inc
push
inc
mov
in
xlat
pop
adc
push
ss
xchg
and
lahf
pop
xchg
sarb
pop
mov
xchg
loope
push
sbb
test
in
scas
mov
test
add
xlat
out
sub
sbb
bound
adc
imul
cmp
xorl
jns
fbld
popf
mov
cld
ficomps
je
mov
movsb
test
or
sub
popf
addr16
stos
enter
lea
jbe
sahf
and
dec
in
cmp
mov
mov
jle
xchg
sub
pop
lret
or
or
mov
out
xor
add
mov
cwtl
stos
lock
adc
jp
call
bound
shll
popa
adc
lea
inc
inc
xor
adc
stos
mov
out
mov
lret
je,pt
mov
in
int3
cmp
loop
pusha
ret
cli
inc
xchg
sub
sbb
std
mov
and
pop
xor
sbb
fcmovnbe
and
adc
and
jb
push
sbb
jmp
out
lods
add
mov
jnp
mov
and
pusha
bound
cmpb
popa
dec
rol
xor
push
aaa
sahf
xchg
sub
lock
mov
into
pop
jne
and
cmc
cmc
jecxz
popa
cmp
cmp
jbe
xchg
pushl
sub
dec
fdivrs
sub
arpl
cld
jns
sti
cltd
mov
fs
mov
pop
lds
lds
push
addr16
ret
sbb
add
out
jns
int
arpl
std
imul
shrl
push
aad
clc
dec
leave
mov
aad
push
xchg
repnz
pop
mov
xor
sub
xlat
bound
out
lret
mov
arpl
sti
xor
mov
xchg
or
dec
inc
pop
inc
jns
push
xor
push
flds
cwtl
popf
xchg
bound
mov
add
add
lds
pop
loop
mov
xlat
in
mov
or
les
jo
stos
sti
pop
ja
inc
push
mov
test
pop
adc
ja
pop
shr
mov
stc
xchg
dec
stc
outsb
inc
aaa
xor
sbb
jp
xchg
inc
mov
fidivs
xorb
and
mov
sbb
in
pusha
and
std
rcr
push
out
pop
adc
shrl
icebp
aas
mul
movb
jbe
fs
sub
pop
add
push
push
jb
xor
fs
pushf
jns
fsubrs
js
sbb
pop
mov
or
xchg
cwtl
out
xchg
lds
mov
faddl
sbb
and
das
aad
cli
aaa
in
ja
fsubs
push
mov
mov
adc
mov
adc
scas
adc
outsb
test
sub
jae
mov
cmpsl
sub
test
push
mov
out
and
es
dec
fstp
push
push
xor
dec
shr
cwtl
add
sub
lahf
dec
jecxz
subb
pop
inc
or
aaa
test
add
cmp
inc
mov
push
xchg
call
into
pop
in
mov
rcl
loope
lcall
push
sub
ret
and
nop
inc
inc
or
fimuls
pop
aaa
jns
jo,pt
mov
lock
fists
mov
dec
and
hlt
pop
sbb
or
push
in
fstps
out
xchg
jnp
ds
sbb
mov
mov
xor
int3
sar
stos
test
scas
imul
jbe
bound
lods
sahf
jmp
ja
loopne
loop
or
out
jns
mov
cmp
lds
dec
pusha
mov
sti
jb
pop
sub
push
sub
adc
add
icebp
mov
repnz
jmp
xchg
ret
xchg
lret
pop
push
dec
imul
dec
adc
dec
mov
test
dec
out
mov
pushf
aas
cld
dec
push
mov
inc
pop
mov
je
into
mov
xchg
cs
sbb
fimuls
mov
enter
out
cmpsb
and
mov
in
das
push
js
jno
pop
sub
jge
xor
mov
out
push
add
aad
mov
sub
dec
mov
cld
fisubs
roll
dec
ds
add
xor
jmp
icebp
andl
jmp
and
mov
aaa
scas
clc
stos
aaa
inc
fwait
les
repz
sub
jae
and
mov
xchg
push
fldl
pop
adc
in
xchg
sub
cmp
cmpsb
mov
aad
dec
cltd
jge
movsb
lret
shlb
out
push
aas
jns
fmull
out
cmp
rclb
fidivrs
cmp
sub
sub
xchg
cmpsl
pop
push
dec
je
out
jnp
dec
push
xchg
lock
mov
mov
fidivl
jae
popa
inc
je
ret
out
popf
sbb
jecxz
rolb
sbb
fcomip
out
sbb
fiaddl
mov
push
cmp
movsl
jp
lea
adc
nop
loop
sub
jno
push
sahf
in
lret
mov
push
lret
std
out
jbe
daa
dec
popf
xor
pop
out
push
jmp
dec
xlat
arpl
icebp
jge
cs
dec
test
js
test
int3
movsb
jno
pop
mov
js
out
je
repnz
fbstp
mov
es
fwait
mov
cmpsl
xor
sti
inc
xor
fcoml
hlt
out
rcl
fdivl
mov
dec
insl
ret
push
and
sbb
inc
ljmp
push
aam
sub
and
ds
jb
sub
and
mov
lods
int
dec
mov
hlt
int
pop
xchg
iret
adc
lock
dec
push
jne
sbb
daa
and
out
or
push
int
loope
pop
ret
sub
add
jge
xor
cmpsl
pop
psrld
dec
mov
sbb
sub
dec
dec
subb
frstor
dec
stos
rol
mov
and
dec
jecxz
xor
arpl
mov
jg
jmp
jecxz
fdivs
rcr
sahf
cs
loopne
pop
xchg
dec
xor
ret
dec
xchg
mov
mov
ja
mov
add
jge
sub
lods
mov
mov
add
inc
adc
cs
mov
jge
test
add
stc
cwtl
and
mov
or
jge
cmpsb
sub
fnstcw
inc
inc
sub
mov
inc
xchg
pop
stos
jne
jno
sbb
xchg
jge
pop
out
or
mov
mov
jo
daa
push
lea
arpl
addr16
mov
dec
test
cmpsb
xchg
cmpsb
loopne
add
addr16
dec
inc
adc
add
std
out
mov
mov
ss
adc
push
jp
mov
mov
mov
notl
std
cmp
in
push
adc
push
cmp
pop
xor
imul
shlb
jbe
sarb
mov
fstpt
push
sub
ss
cmp
shll
ror
mov
movsl
rorb
and
push
or
subb
testb
imull
pushf
ljmp
or
push
push
jmp
push
dec
iret
pop
dec
push
fadd
das
pusha
insb
add
pop
cli
in
mov
lods
dec
gs
push
std
mov
gs
sti
push
sub
movsb
insl
mov
ljmp
push
add
inc
pop
pop
fwait
or
and
xchg
stc
mov
in
jecxz
mov
push
pop
mov
lret
jne
mov
in
xchg
ret
mov
sub
push
sbb
fistl
iret
int3
pop
pop
das
jo
aaa
test
fldt
cmp
or
push
xchg
imul
out
fsubr
or
in
mov
inc
push
mov
jle
push
addr16
adcb
xchg
lea
and
adc
mov
sbb
pop
ret
push
xchg
fwait
inc
testb
mov
sub
gs
nop
dec
mov
stc
rcrl
mov
sub
adc
stos
cltd
loop
push
add
pop
sbb
jl
test
out
mov
cmc
fadd
xor
mov
lcall
rcrl
cmp
or
das
pop
add
rcr
in
mov
imul
push
jb
xchg
xor
adc
push
in
cltd
stc
loop
sbb
add
and
shll
or
xor
cmp
icebp
mull
push
insb
pop
jg
jb
pop
ret
pop
stc
testb
dec
xchg
jne
jnp
ljmp
jp
popf
xchg
jg
jns
and
out
jp
arpl
xchg
dec
lcall
jg
sbb
mov
dec
or
pop
xor
test
rorb
jl
lret
pop
or
dec
mov
pop
or
dec
aas
jle
xor
ja
pop
pop
outsb
aas
and
int3
dec
and
out
loopne
lock
lods
rclb
iret
push
test
push
int3
or
and
inc
dec
rcrb
sbb
or
popf
pop
test
aad
roll
idivb
dec
sub
lahf
lret
lahf
push
add
nop
xor
dec
add
je
push
push
out
mov
dec
idivb
cmp
push
loope
mov
out
dec
movsb
cmp
movsl
popf
notb
movb
fwait
daa
shr
and
cmc
cmpsb
bound
xchg
shlb
jns
adcb
enter
push
cwtl
fnstenv
hlt
hlt
pop
mov
inc
sbb
ds
movsb
imull
ffreep
adc
mov
jle
insb
cmp
dec
sub
jb
mov
lea
sbb
cmpl
mov
jecxz
cli
fdivl
and
out
ret
fistpll
por
incl
mov
fcompl
inc
push
mov
gs
cld
sbb
notb
fmul
cmp
lods
xor
sub
xor
sub
ret
fsubr
stos
sbb
insb
jp
movsl
jg
lea
adc
test
pop
and
rclb
dec
inc
cmc
adc
mov
and
das
lods
pop
rcr
pop
push
ret
fisttpl
das
mov
adc
dec
adc
fisttpl
xor
mov
dec
mov
mov
pop
dec
inc
inc
fcmovnbe
cmp
xchg
ret
jle
lret
movsb
inc
jo
adcb
sub
sti
shr
pop
sbb
cmpsb
in
imul
mov
in
ljmp
pop
js
push
inc
enter
cltd
mov
inc
sub
in
mov
xchg
mov
inc
insl
jnp
arpl
rolb
std
out
mov
rorb
or
xchg
mov
int
and
xchg
push
rclb
add
test
pop
stc
fmuls
imulb
loopne
or
mov
iret
dec
mov
inc
cld
stc
into
imul
sbb
xchg
clc
xor
adcb
fwait
push
inc
test
adc
inc
push
pop
out
pop
sti
lret
adc
or
addr16
mov
inc
test
jp
popf
or
inc
inc
dec
mul
push
mov
nop
es
push
push
jns
mov
je
jmp
add
adcb
cmpsl
into
sub
mov
insb
in
pop
lcall
loop
dec
push
out
rclb
in
push
cltd
add
arpl
icebp
dec
xlat
or
push
mov
mov
cmp
pop
dec
test
outsl
vmovdqa
fcoml
ret
cmpsl
mov
nop
outsb
out
rclb
pushf
das
adc
jl
inc
mov
inc
fiaddl
pop
js
cli
test
es
cmp
leave
mov
int3
xchg
std
xchg
add
cmpsl
adc
je
sbb
or
jbe
dec
out
cmpsl
fdivrl
inc
enter
faddl
hlt
ret
enter
popf
lods
or
or
shlb
bound
sti
cld
int3
pushf
jnp
dec
jecxz
jmp
fisubs
jo
int
rolb
add
or
ficomps
stos
dec
mov
pop
addr16
out
insb
cwtl
fildll
mov
fs
daa
iret
imul
xchg
pusha
inc
mov
sub
aas
fdivrp
dec
repnz
movsb
mov
int
mov
cmp
lods
clc
push
jb
popf
dec
shlb
out
cmp
shrb
xlat
mov
jae
orl
and
adc
xor
daa
mov
pop
fcmovu
pop
lods
pop
jmp
inc
test
jmp
push
pop
xchg
pushf
cmp
scas
lods
shl
ds
in
adc
pushw
cs
jmp
push
roll
shrl
push
lahf
int3
cli
mov
mov
daa
lret
sub
add
sbb
xor
xchg
fidivl
add
sbb
sbb
loope
dec
mov
aad
adc
and
xchg
mov
lods
int
jo,pt
hlt
push
and
lea
out
jb
leave
pop
mov
jo
dec
inc
jecxz
ds
in
dec
push
push
sub
xchg
ss
leave
in
inc
lret
jns
rcrb
in
push
popa
inc
push
scas
in
xor
outsl
dec
lds
shlb
push
cli
je
sub
mov
dec
add
rdmsr
clc
dec
cli
add
cmpsl
xor
inc
add
in
jle
xor
lock
enter
outsb
and
or
dec
jne
mov
out
lret
inc
jb
lds
inc
es
sub
aad
pop
dec
sbb
in
insl
jns
movb
and
inc
or
pushf
mov
rcr
xor
and
in
sub
add
xchg
xor
std
jne
jb
mov
or
inc
pop
jge
dec
sbb
push
enter
lea
sub
out
scas
jne
enter
test
loope
ret
jg
lea
fstpl
pop
stos
lcall
sbb
ret
shrl
lcall
stos
jl
jge
xor
outsb
repnz
cwtl
push
repnz
in
xchg
setae
out
jns
xor
xlat
inc
mov
shl
inc
mov
lahf
stos
test
cs
je
mov
cld
push
cmpb
push
imul
cli
sub
fisubl
sbb
mov
enter
mov
jno
outsb
sub
loope
mov
out
fs
test
xor
clc
mov
jmp
popf
aad
out
aam
add
inc
sbbb
mov
pop
inc
movsl
jne
mov
fsts
push
adc
mull
test
push
les
add
dec
inc
push
fcomp
les
and
add
pop
ljmp
cmc
test
mov
add
push
cmp
sub
in
enter
ja
lahf
out
xchg
imul
pop
jbe
add
lret
lcall
inc
cmpsb
mov
arpl
push
fadd
dec
gs
cmp
andb
pop
popf
push
subl
xchg
ds
lea
popf
mov
push
jne
in
fistpll
repz
mov
and
ja
mov
dec
stos
lcall
mov
jb
dec
jecxz
std
xchg
or
adc
daa
jnp
daa
dec
mov
mov
fildll
lcall
mov
int3
fiadds
xlat
adc
fs
cmpsb
cmp
lock
rorl
and
mov
sbb
pop
inc
sahf
mov
mov
sub
jne
icebp
dec
adc
sbbb
mov
mov
add
lock
xchg
xor
and
mov
pop
mov
mov
pusha
jnp
or
jo
jo
std
or
lods
outsl
mov
add
jbe
outsl
pop
inc
rcrb
leave
test
rorb
push
fwait
mov
lcallw
xor
cmpsl
jbe
add
fnsave
aaa
mov
insl
mov
frstor
mov
xor
std
cmp
pusha
into
jg
lea
pop
xor
sbb
clc
or
scas
ficompl
xchg
dec
inc
mov
pop
dec
push
fsubr
push
addr16
push
je
lret
mov
xchg
bound
sbb
inc
jg
ljmp
or
add
xchg
mov
movsl
lds
sti
cmpsl
jbe
sub
push
cmp
push
pop
mov
inc
dec
push
ret
mov
cmc
scas
pop
push
pop
xor
jns
mov
sub
aas
rclb
mov
ss
cmp
jbe
mov
jmp
ret
mov
sbb
test
in
out
cli
xorl
jne
roll
adc
dec
add
pop
xchg
stc
lret
xor
rclb
inc
or
ror
out
data16
add
inc
adc
add
pop
jnp
xchg
lea
mov
xor
pop
cmp
aad
push
add
xchg
push
in
sub
in
aaa
mov
mov
mov
dec
negb
inc
and
call
push
mov
mov
push
cmp
nop
cmp
mov
mov
sub
fbld
inc
ljmp
or
test
pop
sub
test
xchg
add
or
stos
dec
lea
mov
pushf
mov
addr16
imul
movsl
in
repnz
lahf
xchg
jnp
cmpsl
aad
dec
js
dec
bound
das
and
mov
in
inc
adc
aam
pop
mov
push
repnz
sahf
lods
outsl
xchg
sub
pushf
pop
mov
outsb
mov
in
jmp
mov
push
stos
lret
mov
add
cmc
imul
xor
lahf
fdivp
mov
fldl
push
sub
je
mov
jecxz
dec
aad
arpl
lret
call
inc
int
shlb
lret
push
roll
cmp
mov
fisubrl
lods
xchg
jecxz
in
fidivrs
push
jnp
mov
adc
cmpsb
fucomi
das
push
out
and
aam
and
loope
or
adcb
fwait
outsl
pop
pushf
outsb
fucom
and
cmpb
or
repnz
movsb
jge
jnp
jbe
out
sbb
pop
dec
dec
mov
leave
add
and
cmp
dec
xor
mov
testb
pop
repz
mov
mov
in
mov
sub
cwtl
cwtl
inc
mov
pop
pop
cmp
pop
sbb
ret
push
in
inc
xor
outsb
jae
jecxz
out
aad
mov
and
xor
sahf
xchg
mov
rolb
jle
subb
mov
push
jo
mov
arpl
sub
inc
xchg
xor
sbb
cmp
push
xor
cmp
lds
ret
clc
ret
sbb
ja
pop
jns
repz
pop
fiadds
addl
xor
arpl
jl
lods
in
fiaddl
rcrl
jne
inc
mov
in
mov
sbb
mov
in
cmp
fimuls
mov
xor
sbb
rorb
lods
loope
jae
imull
add
sub
push
dec
test
jb
rorb
dec
lds
shrl
push
jle
sub
xchg
scas
xor
add
lock
xchg
jl
jb
mov
mov
ss
roll
insb
ret
loope
mov
jb
insl
sbb
sbb
add
scas
mov
arpl
cmp
or
aaa
xchg
adc
jae
stos
push
fcomps
in
inc
test
int
push
sbb
das
fidivl
mov
fcompl
mov
adc
add
std
imul
xchg
xlat
call
push
movsb
ja
popf
jl
jp
shl
fisubl
test
pop
sub
sbb
xor
iret
bound
fstpt
cmp
mov
cmpsb
mov
rcll
movsl
or
dec
push
roll
sub
sub
fs
jb
mov
or
loopne
mov
push
adc
mov
dec
sub
and
push
lret
clc
filds
int3
inc
or
dec
out
push
mov
addr16
mov
mov
cmpsl
fiaddl
inc
fsub
sub
mov
mov
add
or
jae
loope
iret
popf
out
inc
push
add
xchg
xchg
pop
pop
or
cmp
adc
mov
xchg
or
popf
jmp
loop
mov
aaa
cmp
cli
or
sub
xor
jecxz
out
mov
inc
push
out
mov
je
arpl
push
or
or
push
iret
test
insb
mov
xor
xlat
pop
add
outsb
scas
add
add
ficompl
xor
xchg
ret
adcb
aad
inc
repnz
outsl
or
mov
hlt
pop
sub
adc
adc
sub
and
jge
jmp
mov
sub
jecxz
pop
mov
pop
push
into
ja
pop
mov
push
xor
cs
les
adc
xor
jg
sub
add
mov
xor
mov
or
outsl
mov
imul
add
into
dec
in
xchg
mov
inc
xor
stos
xor
dec
pcmpgtd
repnz
mov
sub
divb
rcrl
add
dec
xlat
push
call
inc
repz
cld
sbb
out
cs
call
out
leave
sbb
ret
mov
rcr
and
xor
js
imul
ja
leave
out
mov
shr
pushl
mov
adcl
inc
mov
or
push
and
notl
movsb
cmp
push
inc
subl
stos
test
rcrb
pop
dec
inc
std
xor
mov
iret
pop
xor
dec
mov
fucomp
mov
xor
out
sub
sbb
xchg
mov
lods
inc
stos
arpl
mov
mov
imul
out
repz
arpl
mov
sbb
pop
jo
pop
mov
jne
mov
imul
push
int
pop
shlb
pop
or
into
mov
leave
stc
add
pop
sbb
inc
push
mov
cmpsb
mov
sbb
push
fimull
inc
ss
and
dec
sub
cmp
in
mov
xchg
mov
mov
mov
xor
sarl
xchg
sti
imull
ja
push
gs
xchg
or
icebp
rcrl
cmc
notb
shll
mov
out
shlb
pop
iret
stos
sbb
and
xor
scas
or
adc
pop
cmp
add
jo
mov
out
xchg
xchg
or
sub
or
jge
jle
push
push
and
xchg
pop
xor
push
dec
in
fdivl
fs
or
dec
pop
jle
mov
andl
and
clc
imul
pop
jb
in
add
add
jns
ljmp
sbb
clc
sub
test
add
dec
dec
addl
es
outsl
cmp
push
pushf
xchg
adcb
imul
push
push
jecxz
lret
inc
in
jnp
test
das
sub
and
outsb
and
inc
dec
jmp
sahf
pop
sub
divl
pop
js
out
ja
ret
scas
or
out
add
insl
mov
xor
addr16
cli
or
pop
jae
jns
jb
imul
xchg
xor
mov
int
call
ficomps
mov
cwtl
lds
inc
or
mov
sbb
jecxz
sub
aaa
cmp
mov
loope
int
xor
mov
or
sahf
movl
push
xchg
push
bound
mov
cwtl
mov
pop
xchg
sbb
scas
push
test
pop
repnz
xchg
div
pop
popa
push
cmp
xchg
jl
mov
lods
in
inc
aaa
and
popl
aas
ficomps
out
cmp
adc
mov
xchg
fidivrl
andl
mov
pop
mov
repz
adc
mulb
std
inc
iret
inc
iret
and
push
popf
insb
sbb
jmp
std
stos
es
and
pop
push
scas
sbb
xchg
std
or
mov
cmp
mov
sbb
cmp
fiadds
icebp
or
into
and
lret
jmp
test
mov
pop
fnstcw
or
aam
xor
jae
movsb
fs
shlb
bound
dec
icebp
xor
mov
movsl
and
pop
addr16
fistps
cmpsb
int
stos
popa
loope
loope
jp
adc
dec
movsb
and
and
jg
xchg
push
add
sbb
fistl
in
xchg
scas
lods
outsb
push
dec
jnp
xor
pop
cmc
movsl
aad
loope
fcmove
fidivl
mov
loopne
and
lock
push
adc
pop
and
call
push
adc
dec
pop
xor
sub
idiv
mov
xchg
sbb
ror
adc
sbb
cmp
sub
mull
scas
shrl
sti
and
outsl
andnps
xor
sbb
decb
es
sub
imul
add
imul
mov
and
test
mov
xor
pop
or
mov
sub
mov
cmp
dec
js
mov
loopne
or
cmpsb
mov
xlat
lahf
mov
jmp
sub
out
xchg
push
in
mov
out
add
lcall
push
aaa
jecxz
hlt
mov
jp
divb
mov
or
in
pop
sbb
push
ds
loope
cld
push
decl
adc
in
add
sbb
adc
insb
pop
imul
xchg
inc
sub
shlb
xor
and
outsb
cmp
out
pusha
pop
adc
shlb
xchg
stc
outsb
sbb
js
mov
inc
fs
fwait
gs
push
add
adc
cmc
or
cmp
sti
jno
addb
lods
xchg
xchg
jb
sbb
clc
and
lret
in
xchg
js
xlat
sbb
repnz
insb
jmp
cmpsl
adc
mov
fisubrl
ret
xlat
dec
xor
xchg
xchg
pushf
pop
xor
sbb
add
es
jle
rclb
test
mov
lock
xchg
mov
inc
sarb
cmpb
jne
icebp
ja
addr16
push
jp
mov
xchg
push
cmp
dec
mov
popf
dec
lahf
adc
pop
pop
ljmp
cmp
inc
xor
mov
xlat
dec
xchg
andb
pusha
arpl
call
ret
imulb
in
rclb
inc
leave
lods
movsl
out
outsb
mov
jno
push
nop
into
dec
outsb
mov
fcomip
nop
gs
mov
adc
movsb
inc
aaa
adc
sbb
insl
mov
jp
dec
cld
cld
cmp
sub
ret
lret
outsl
mov
cmp
cmp
repz
xor
outsl
lret
filds
pop
outsb
cmp
retw
popf
pop
fdivs
ficompl
sbb
bound
pop
mov
cmp
inc
in
and
mov
sub
push
jo
mov
xor
jns
cld
addl
imul
pop
sub
xchg
xor
jb
aam
and
jbe
xor
test
cwtl
loop
lret
xchg
lret
and
and
mov
shlb
fwait
mov
lea
outsb
rclb
add
cmp
lock
sbbb
lock
out
sbb
orl
in
mov
sbb
fsubl
mov
push
sbbl
adc
mov
xchg
jg
pusha
stc
dec
push
mov
adc
pop
mov
std
sbb
sarl
cmp
fnsave
mov
mov
xor
or
hlt
cli
jle
mov
jno
aaa
xor
dec
mov
xchg
and
cmp
fs
hlt
or
rolb
ljmp
data16
mov
fcmove
not
mov
sahf
xor
xchg
popl
icebp
jae
stos
loop
loope
and
sub
pusha
push
mov
xchg
jne
xlat
popa
xchg
test
or
mov
jns
out
stos
orl
aad
test
in
mov
das
js
ds
xchg
outsl
cmp
inc
or
lcall
add
cmpsb
je
call
insl
xchg
jp
mov
inc
adc
mov
and
sbb
mov
lods
daa
lret
add
mov
push
add
sub
popf
push
mov
roll
inc
xor
aad
loop
arpl
pop
adc
inc
sub
add
xchg
jecxz
test
mov
mov
int3
and
mov
pop
int
call
dec
pop
xchg
aas
lea
lods
jbe
adc
stos
mov
or
jbe
xor
mov
stos
dec
add
fdivr
aam
mov
mov
les
mov
inc
loope
lret
stc
stc
sub
pop
dec
inc
pusha
lods
aas
outsb
ss
mov
shrb
sub
push
cmpsb
dec
sahf
das
dec
adc
scas
jns
xchg
dec
mov
or
sub
dec
sub
fistps
repz
in
daa
cmp
test
jno
xchg
dec
aad
sub
test
jge
repnz
xor
daa
pop
cmpsl
out
adc
sub
jmp
fstp
cmpl
mov
in
jg
pop
sub
and
dec
mov
out
subl
push
dec
sbb
imul
xchg
fstpt
adc
cs
test
cmp
shlb
adc
scas
aam
adc
mov
dec
sub
cmc
ja
aaa
pop
jb
sub
lods
push
adc
cmpl
sti
ljmp
subb
scas
jmp
nop
xor
icebp
inc
sub
jecxz
pop
xor
ror
lods
fstl
xor
cmp
mov
or
cld
add
cmp
xchg
test
adc
jp
mov
mov
lods
cmpsb
cs
stc
xor
xchg
fucompp
in
call
pop
imul
addl
imul
je
mov
imulb
out
mov
jne
pushf
and
jns
add
or
bound
inc
sub
cmp
aad
repz
cmp
arpl
xchg
sub
mov
xchg
loop
out
in
mov
mov
dec
xchg
sub
xorl
jmp
cmp
add
sbb
sbb
xor
aad
test
lds
cmp
xor
leave
mov
jl
mov
inc
icebp
mov
outsl
repnz
xchg
lcall
pop
bound
aas
mov
in
sbb
pop
jmp
pop
dec
js
mov
inc
lods
dec
lret
ret
and
or
push
push
jo
add
inc
in
mov
movsl
add
cmp
cwtl
mov
jae
decb
lods
cmp
hlt
mov
jle
mov
adc
sub
cmp
imul
data16
ljmp
or
lds
xchg
insb
xchg
leave
fistl
dec
sub
fwait
mov
inc
sti
enter
pusha
ljmp
or
jp
aam
adc
test
stc
scas
idivb
adc
mov
popa
bnd
adc
jnp
cmp
mov
mov
sbb
xchg
stos
adc
jge
add
icebp
repz
idivl
out
mov
test
test
pop
mov
push
out
mov
outsl
lahf
mov
xchg
arpl
test
sbb
mov
xchg
sub
hlt
sub
push
leave
xor
jo
mov
sbb
cmp
divb
subb
ljmp
adc
cwtl
dec
xor
push
fdivl
cmp
xor
shr
loop
rcrl
lods
jmp
inc
mov
push
loop
mov
mov
pop
fs
enter
in
mov
adc
sarb
push
push
push
inc
push
cmp
mov
mov
test
mov
mov
add
xchg
cltd
xor
imul
mov
rol
into
ss
mov
pop
lock
jae
cli
mov
mov
addr16
mov
das
les
jae
aaa
jb
jecxz
enter
sbb
stc
and
pushf
pop
jmp
out
cmp
push
pop
cwtl
push
or
adc
daa
xchg
pop
outsl
scas
xchg
cmpsl
cwtl
mov
mov
ret
cmp
or
xchg
inc
adc
xchg
mov
sub
mov
stos
out
xchg
dec
push
mov
popf
mov
sahf
sbb
cmpsl
push
xor
mov
or
ficompl
mov
ficomps
subl
dec
movsl
out
jb
imul
push
adc
xchg
xchg
inc
das
leave
or
jle
movsb
or
jge
pop
ds
sarl
out
pop
aaa
and
nop
pop
dec
imul
divb
cwtl
cld
test
xchg
rcrb
fbld
jns
lcall
lret
repz
aaa
mov
xchg
pop
cmc
add
lods
lods
pushf
test
or
les
outsb
bound
in
mov
mov
adc
dec
mov
push
mov
pop
xor
out
cmp
nop
jb
add
aas
out
pushf
jb
mov
cli
sub
adc
cmp
push
mov
add
in
loop
sub
pusha
mov
xor
sbb
scas
mov
clc
push
push
push
and
add
sbb
ljmp
cmc
fwait
mov
or
push
push
lahf
or
lds
decb
mov
push
jae
aaa
xor
sbb
nop
les
pusha
rclb
mov
cmp
lods
rorl
js
push
xchg
pop
fimuls
insl
dec
cmp
pushf
fsubl
mov
cvtps2pd
cltd
das
xor
repz
mov
sbb
fldenv
je
pop
daa
leave
adc
fucomi
pusha
push
out
aas
fwait
mov
pop
fcoms
movsb
dec
test
fnsave
iret
sub
adc
or
std
aaa
das
fwait
decb
jp
pop
negb
jmp
xchg
call
cwtl
mov
cmp
dec
cltd
pop
insb
divb
cmc
lret
sbb
hlt
out
sbb
push
mov
cmp
jge
fdivl
outsl
pop
icebp
inc
pushf
imul
xchg
test
enter
in
mov
adc
out
andl
and
ds
jl
sub
lcall
add
gs
ret
das
push
push
rorb
out
push
and
test
jp
push
push
jecxz
popa
in
push
pop
adc
ret
pusha
lret
inc
movsb
mov
ljmp
or
dec
out
push
add
cli
arpl
fs
ss
push
xor
jns
sbb
jno
xor
inc
push
add
pushf
popa
dec
fwait
les
mov
outsb
mov
sbb
mov
ss
mov
and
rep
sbb
ljmp
rcll
or
dec
inc
out
inc
xor
jbe
sahf
stos
sub
jb
scas
mov
sbb
mov
test
test
jg
icebp
sbb
push
sub
dec
push
mov
cltd
dec
stc
lret
fldcw
testb
cwtl
cmp
gs
ds
ds
adc
xor
loop
out
push
and
mov
adc
shlb
or
stos
push
pop
add
push
fistpl
mov
stc
xor
xlat
frstor
bnd
jle
xor
sbb
adc
xor
dec
and
fistpll
aam
jb
xor
push
sub
popf
xor
mov
ficoml
pop
adc
cld
dec
clc
inc
dec
repz
je,pt
jae
xchg
into
add
fisttpl
and
rcrl
jp
iret
notl
aad
mov
or
jnp
mulb
cmp
loop
mov
pop
hlt
add
pop
movsb
out
out
adc
shlb
jg
test
dec
pop
std
pop
push
lret
daa
dec
fiadds
xchg
cwtl
jne
cmpsl
scas
mov
pop
adc
call
xor
mov
mov
jge
std
and
cmp
jg
imul
add
aad
mov
pop
push
jg
xchg
adc
loop
pop
outsb
flds
data16
outsb
stos
adc
mov
leave
xor
push
in
sbb
flds
rcr
mov
mov
sub
andl
push
dec
push
cwtl
pop
loope
or
jno
sbb
push
fnstenv
in
mov
cmp
adc
andl
fldcw
ficomps
adc
jmp
mov
aam
lds
adc
data16
sbb
jae
xchg
sbb
outsb
add
inc
inc
or
gs
and
fs
shll
push
lret
mov
or
jne
iret
sbb
imul
jle
arpl
out
ljmp
mov
or
or
stos
pop
cmp
mov
jbe
push
cmp
jbe
pop
mov
xorb
fbld
fistps
jbe
pop
cmc
test
push
enter
les
das
imul
adc
outsl
repnz
arpl
push
sub
push
repnz
push
push
enter
jg
stos
loope
je
xorl
inc
in
pop
adc
pusha
je
push
and
sbb
add
es
cli
movsb
push
aaa
ds
sarl
sbb
inc
cmp
push
add
xlat
pop
sub
and
sahf
mov
aaa
add
mov
clc
pop
pop
lods
setno
jno
insb
push
dec
arpl
std
js
jbe
popf
inc
mov
lcall
mov
out
pop
pop
lds
sub
pop
cli
or
sti
das
or
shl
mov
sarl
dec
fadd
movsb
adc
xlat
ja
mov
repz
mov
outsb
mov
sbb
loope
je
mov
sbb
jecxz
ss
add
mov
push
mov
jno
sarl
mov
jmp
xor
push
xchg
sub
and
jne
xchg
inc
xchg
add
std
iret
mov
bound
sub
bound
pop
aaa
sub
mov
mov
leave
adc
mov
mov
scas
push
fisubrl
and
in
insl
or
inc
cmp
fs
fs
popf
test
add
xchg
mov
sbb
dec
inc
mov
int
or
hlt
mov
lahf
gs
add
call
jns
cld
xchg
push
fsubr
movsl
xor
adc
cmp
add
and
add
push
or
push
stos
test
in
sub
cwtl
adc
pop
pop
cmp
sti
mov
sti
pop
iret
enter
fs
daa
dec
adc
and
inc
xlat
scas
add
and
jecxz
push
dec
orb
hlt
or
les
inc
stos
adc
mov
pusha
inc
pop
push
push
mov
and
mov
cmp
out
mov
pushf
jbe
mov
outsb
scas
pop
vpshab
push
xchg
mov
sbb
les
ds
les
repnz
std
hlt
test
mov
lcall
mov
mov
adc
xchg
mov
xchg
subl
je
push
or
dec
pop
sahf
lods
jmp
mov
mov
push
dec
or
lods
inc
mov
sbb
fsubr
clc
push
jo
insl
cld
test
les
push
fsubrp
sbb
push
lods
mov
push
mov
fnstcw
dec
mov
sbb
int3
in
mov
xchg
or
hlt
dec
sub
adc
sub
mov
sub
and
mov
xchg
dec
sahf
push
aam
xchg
push
sub
fs
outsl
shrb
loopne
push
mov
xchg
jnp
outsl
dec
xchg
xlat
into
cmpsb
aad
rclb
adc
inc
mov
mov
dec
insl
pop
inc
dec
int
xor
loopne
adc
xchg
inc
push
vmovupd
xchg
lds
fists
sub
adc
xchg
cli
add
mov
jnp
hlt
mov
cmp
sub
cltd
xchg
lock
mov
data16
xchg
rorl
cwtl
ret
in
pop
push
neg
dec
sub
mov
or
sub
xchg
inc
movsl
rorl
ficoms
movsl
pushf
cmp
sbb
push
xlat
jns
cli
lods
in
ret
dec
daa
pop
push
ja
mov
xchg
mov
xchg
orl
fstpl
lea
dec
in
add
in
jo
dec
loopne
ss
push
ljmp
adc
ja
cmp
dec
in
fdivl
xor
mov
mov
rclb
loopne
xchg
mov
xchg
adc
roll
add
int
cmp
inc
js
aaa
cs
xchg
mov
fsts
sets
push
pushf
enter
outsl
dec
cmpsb
inc
hlt
cmp
std
fidivrl
gs
jmp
and
dec
je
lcall
cmpxchg
arpl
outsb
fs
sbb
ret
mov
cmp
outsl
mov
outsb
ljmp
aad
and
xor
jmp
orl
sbb
adc
push
mov
sub
sarb
xchg
pop
jmp
jmp
adc
fists
sub
dec
rcrb
add
xchg
jae
push
imull
out
test
icebp
push
pop
mov
mov
jp
stc
ja
mov
inc
iret
popf
ss
inc
pop
xor
arpl
jge
mov
sub
and
mov
mov
ds
fucom
inc
sub
mov
xchg
pushf
pusha
fstpt
push
xchg
xchg
mov
cltd
or
pop
push
gs
jo
mov
inc
ret
out
out
test
add
jecxz
dec
cmpsb
add
add
out
mov
or
pop
pop
ja
mov
adc
pop
in
imull
mov
mov
cwtl
jecxz
jb
cld
sub
lea
adc
fnsave
enter
int
stos
jge
or
call
mull
das
xor
or
jmp
push
shrb
jae
mov
pop
movsl
int3
mov
xor
jo
adc
ret
adc
call
insl
sahf
xor
out
mov
imul
mov
out
cmc
pop
loop
les
push
jg
cs
mov
sbb
int
pop
movsl
add
and
in
jno
sbb
in
out
popa
pop
loope
mov
arpl
cmp
add
and
push
mov
sbb
push
lret
test
cwtl
push
lea
mov
imul
sbbl
mov
repz
stos
jp
movups
xor
arpl
cmc
fldcw
sub
pop
xchg
int
mov
loope
lret
out
mov
mov
dec
leave
test
cli
mov
jbe
das
mov
sbb
sub
call
stos
push
enter
inc
gs
or
xchg
iret
lds
push
pushf
mov
cmp
pop
mov
cld
adc
push
or
jle
out
dec
fwait
and
sti
in
or
ss
les
lahf
and
subb
mov
lcall
push
xchg
loopne
pusha
rcr
mov
or
enter
in
test
mov
std
push
push
push
fsubl
leave
push
sub
imul
jbe
mov
int
cmpsl
loopew
push
out
and
mov
subl
icebp
ja
mov
jne
xchg
mov
pop
fsubrp
xor
xchg
pop
cltd
das
pop
decl
inc
or
scas
or
lahf
cmp
mov
lds
stc
sti
pusha
pop
fcmovbe
inc
imul
mov
stc
stos
aad
ret
xchg
mov
clc
test
jge
adc
push
adc
pusha
repz
js
test
push
ficoms
cs
fadd
xchg
xchg
adc
xor
cmp
jp
pusha
mov
or
pop
test
sbb
test
and
pop
cmp
mov
push
cmp
sbb
insl
aad
mov
fistps
xor
pusha
lods
sbb
cmp
fs
jmp
das
test
incb
scas
int3
ret
fildll
xchg
sbb
cwtl
dec
ficoms
inc
xchg
out
cs
imul
test
stos
outsb
push
dec
xchg
push
xor
xlat
mov
in
adc
sarb
xor
xor
cmpsb
movsl
adc
hlt
jmp
je
or
pop
loop
daa
add
xor
jle
cmp
inc
int3
sub
mov
adc
xchg
pop
fcoml
jae
mov
cmp
sbb
cwtl
cmpsb
sub
mov
and
test
js
fcoms
or
hlt
arpl
mov
int3
cmp
xchg
jne
movsb
lds
or
test
imul
enter
xor
add
out
aaa
jl
fsubl
shlb
mov
es
or
cli
popa
popa
sub
iret
rcr
lahf
xchg
inc
jge
mov
imul
out
inc
dec
mov
adc
jnp
sub
cltd
pop
outsl
xor
adc
pop
daa
dec
adc
xchg
fwait
das
adc
sahf
ret
mov
shrb
movsl
lock
and
or
and
mov
xor
or
inc
mov
mov
xchg
sub
outsl
test
and
jnp
faddp
cs
mov
pop
lcall
invd
jbe
jb
dec
pushf
and
int3
loope
ja
std
push
xor
mov
popa
inc
mov
sbb
lods
xlat
or
int3
inc
mov
repz
xchg
dec
pop
out
push
xlat
shlb
mov
pop
jg
pop
mov
jge
ja
jb
mov
inc
push
mov
pop
pop
mov
inc
imul
filds
mull
fnstcw
mov
cltd
mov
lahf
pop
aad
xchg
jg
lods
push
pop
dec
aad
clc
bound
and
js
fdivrl
lods
sbb
dec
pop
ja
dec
mov
jae
adc
xchg
jno
lcall
divl
cld
imul
fbstp
jle
push
into
andb
leave
cmc
adc
jo
cmp
and
jo
mov
ds
inc
adc
xchg
in
xchg
adc
dec
xchg
mov
sbb
mov
sbb
adc
cltd
sbb
addb
scas
fwait
xor
inc
sbb
adc
lcall
in
ss
sbb
push
pop
hlt
xor
je
fsubs
into
xor
pop
push
cmpsb
xor
jb
jns
insb
nop
scas
dec
mov
fnstenv
cmc
outsl
frstor
mov
sbb
cmp
push
mov
stc
jg
lock
pusha
pop
js
iret
jnp
mov
adc
fcompl
enter
imul
jg
lea
inc
sahf
aam
push
jb
pop
js
int3
cmp
shll
ja
sbb
cs
xchg
sub
movsl
sbb
repnz
fnstenv
xchg
lods
dec
scas
push
inc
je
push
sbb
insl
ss
out
mov
js
fists
jge
imulb
sub
testb
mov
pop
lret
sub
mov
pusha
mov
dec
int
mov
imul
push
subb
mov
push
repz
bound
adc
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
fucomi
mov
loopne
or
jbe
stc
subl
outsb
in
lods
xchg
pusha
fcompl
into
jl
shrb
cmp
lea
inc
inc
push
adc
mov
stc
dec
jge
les
pop
jne
xchg
dec
adcb
arpl
mov
ret
pop
shl
xchg
imul
xlat
decb
stos
mov
mov
roll
call
sub
call
stc
jge
cltd
pop
mov
testb
xchg
popa
pop
fildll
aaa
xchg
fistl
pop
or
jmp
pop
sub
cmp
jbe
mov
lods
dec
mov
xchg
mov
gs
cs
sbb
jo
hlt
mov
ja
push
adc
mov
int
inc
cs
lods
pop
int3
push
hlt
dec
jl
add
jo
aad
shll
lret
mov
push
pop
iret
and
mov
loopne
push
mov
add
xchg
fbstp
das
add
out
mov
in
and
ds
enter
jbe
xchg
es
or
adc
arpl
dec
lock
std
sub
or
cwtl
out
or
xlat
jb
adc
mov
cwtl
sbb
mov
test
mov
adc
jg
call
adc
push
mov
inc
jnp
dec
mov
lcall
xorb
pop
imul
ret
sbb
xor
inc
arpl
and
push
inc
loope
xor
xchg
adc
orl
sub
jmp
dec
out
push
fcom
ds
inc
sub
lret
clc
mov
stos
scas
jb
pop
addb
mov
in
ljmp
notl
adc
out
fwait
les
add
test
aam
sti
mov
adc
mov
cmp
lahf
mov
pop
dec
pop
lods
std
push
jle
pusha
inc
shrl
cmp
push
xlat
fstp
addl
sbb
adc
iret
mov
scas
lcall
cmpsl
jg
cmp
cmp
jecxz
jbe
ds
lods
push
push
xchg
daa
mov
stos
cmp
test
cmpsb
pop
jns
cwtl
mov
and
mov
push
and
into
adc
pop
adcb
xchg
fcoms
ss
ja
sbb
or
push
cs
ret
cmp
inc
cmp
or
cld
or
mov
stos
pop
icebp
mov
and
movl
and
push
test
les
iret
adc
xchg
jns
lock
mov
push
dec
push
cmp
lret
fidivrl
addr16
das
jno
mov
and
mov
sti
cmp
sub
stos
xchg
cmp
mov
das
xchg
mov
add
pushf
push
and
frstor
or
lret
aas
xchg
push
push
fcomi
ret
ja
mov
cld
fs
and
sbb
push
pop
sti
aad
ret
lahf
bound
mov
mov
sbb
in
insl
jno
mov
addr16
inc
mov
cwtl
iret
mov
enter
popf
xchg
mov
xor
rcrb
mov
mov
movsb
in
push
sahf
cmc
test
stc
ss
cld
add
inc
fstps
mov
jg
dec
je
hlt
adc
mov
cmp
daa
out
jmp
dec
mov
daa
addl
push
arpl
scas
cmp
in
icebp
push
xor
out
pop
call
es
pop
data16
fucom
cmpb
mull
mov
jecxz
in
sub
movb
adc
and
cmp
jl
aad
jns
cld
and
aam
lahf
sbb
pop
mov
in
rcrb
adc
cmp
int
gs
cmp
jp
and
cmp
arpl
pop
lret
jecxz
inc
icebp
shl
xor
ret
fldt
jmp
addl
jg
jbe
sub
pop
push
repnz
inc
addl
xor
lahf
jl
adc
jge
mov
imul
insb
or
in
lcall
std
mov
push
std
push
xor
cld
mov
icebp
cld
xor
pop
cmp
dec
mov
mov
sbb
cmp
lret
mov
jge
aam
imul
mov
jge
arpl
dec
sbb
mov
jo
mov
or
inc
and
int3
lret
pop
repz
mov
push
in
xlat
cltd
mov
mov
jecxz
push
and
push
fwait
mov
int3
fwait
jne
xor
mov
ds
or
cmp
lock
push
sub
test
pop
ffreep
enter
fs
dec
cld
mov
scas
lahf
xchg
sbb
mov
pop
push
cli
push
push
adc
lds
pop
scas
outsl
mov
sub
jno
mov
add
sahf
xchg
jp
enter
pusha
or
sbb
mov
jbe
das
mov
mov
aaa
jno
out
and
test
lahf
dec
push
cld
rcrb
and
sub
loope
push
mov
cmp
sbb
fisttpl
and
push
pop
js
outsb
sbb
lock
mov
or
pop
inc
add
test
stc
pop
adc
mov
sub
lods
or
lahf
inc
enter
push
and
jo
cmc
add
jno
rcrb
add
and
sti
dec
and
dec
adc
outsl
jnp
cld
or
lods
push
pusha
ret
cs
loopne
popl
inc
lods
push
test
inc
mov
inc
gs
jnp
fistps
xor
rcrl
jge
ss
mov
loopne
cmp
cmp
data16
subps
mov
mov
es
pop
dec
outsb
mov
test
add
out
xor
pop
cmpsb
xor
stc
xchg
push
xchg
lret
sbb
and
subl
dec
aam
out
xchg
scas
cmp
adc
nop
cld
and
xchg
lcall
leave
mov
sub
repz
addr16
push
and
cli
mov
cmp
inc
push
jmp
pop
cld
daa
lret
inc
push
mov
fwait
or
in
jg
jae
mov
sti
sar
xchg
mov
push
mov
scas
mov
cmp
add
jge
movsb
icebp
cmp
add
pop
daa
xchg
mov
fcoms
ja
sub
fwait
mov
int3
pop
cmp
movsl
inc
add
repnz
jno
popf
xchg
ja
mov
incb
mov
es
test
xchg
push
or
lock
hlt
jmp
add
mov
xorb
or
cmp
pop
lds
daa
lods
adc
subb
popf
insb
adc
loope
jns
cmp
xlat
enter
fsubl
xchg
icebp
data16
je
jno
lret
fisttpl
je
xor
and
test
bound
and
xchg
popa
data16
lcall
ss
push
aaa
insl
adc
inc
cmp
mov
inc
xchg
into
in
fsubs
in
sahf
mov
mov
xor
imul
std
daa
std
push
pop
hlt
aas
or
sbbb
push
ficompl
mov
mov
add
ret
inc
mov
rorb
rcll
jmp
leave
int
ss
inc
sbb
push
and
lock
movsb
inc
pop
mov
cmp
hlt
fnstsw
dec
test
outsb
fs
jge
inc
mov
test
lahf
pop
outsb
enter
out
xor
hlt
imul
jbe
lods
or
push
add
cwtl
fidivrs
fs
mov
daa
fmul
cli
into
aaa
test
fimuls
ficomps
stc
outsb
movsl
xor
rorl
dec
pop
sahf
pop
sbbl
xor
inc
lods
sub
std
decl
mov
xor
mov
push
adc
push
mov
aaa
in
clc
mov
sub
movb
ds
adc
insl
test
jecxz
stc
mov
xchg
lcall
leave
xchg
sbb
je
pmaxsw
stos
jb
popf
inc
sbb
jge
cli
hlt
pop
in
push
push
lds
fwait
dec
mov
push
xor
dec
adc
dec
mov
enter
mov
in
inc
xchg
and
pop
push
lds
and
sarb
ljmp
sub
imul
std
push
cld
inc
add
xchg
scas
ds
lods
push
into
cld
orl
cmp
mov
and
cs
stc
loope
dec
lahf
mov
cli
dec
push
mov
sbb
loopne
mov
adc
cwtl
data16
dec
test
adc
mov
or
inc
push
adcl
fsubp
bound
sti
fidivrl
fstl
fcoml
mov
in
mov
add
mov
cmp
push
mov
xchg
pop
mov
cmp
sub
cmp
aad
mov
pusha
mov
cmp
mov
mov
mov
jmp
aaa
adc
xorb
inc
xchg
pop
cmp
in
jmp
bound
sub
mov
xor
lret
into
ja
sahf
cmc
jnp
iret
shll
test
je
repnz
push
mov
cmp
push
ret
push
daa
mov
imul
std
adc
test
lea
mov
shlb
xchg
push
mov
sarb
les
clc
sbb
and
lods
cmp
fwait
popf
and
push
ds
jae
ja
jae
inc
mov
dec
push
add
mov
insb
test
cmpsb
and
popl
imul
bound
addb
mov
fs
inc
lods
xchg
sti
mov
xchg
dec
xchg
in
mov
sbb
adc
add
aam
mov
xor
ljmp
sub
jmp
cli
rorl
imull
sti
add
mov
or
pop
sub
icebp
add
fsubrp
sub
insl
dec
sbb
movsb
push
fwait
pop
iret
stos
lds
loop
pop
ror
std
scas
xor
popa
ret
xorl
dec
loop
adc
and
repz
xor
and
or
decb
jbe
add
sub
cmpsl
sbb
push
push
sti
lret
call
jecxz
cmp
mov
mov
push
jp
xchg
cmpb
es
lahf
push
sbb
inc
xor
adc
or
pop
out
or
mov
fimuls
xchg
adc
xchg
cmc
mov
mov
fwait
and
pop
adc
inc
and
inc
adc
xchg
mov
inc
xchg
mov
jno
arpl
stos
std
push
cmp
mov
inc
icebp
popfw
pop
clc
pop
fwait
mov
clc
ds
and
lods
cmp
call
push
lcall
lods
lahf
push
jg
aam
add
or
cmp
out
xchg
sti
pop
lods
push
or
cmp
pop
mov
mov
movsl
jae
fdivrs
rcrb
sub
sti
or
mov
sub
mov
or
mov
data16
push
mov
mov
testb
adc
mov
bound
shll
fcoml
push
xlat
popf
data16
in
inc
dec
mov
dec
inc
mov
xchg
movsb
btr
movsl
jmp
push
xchg
in
fiaddl
pop
pushf
das
mov
pop
push
adc
pop
das
addr16
rcrl
add
scas
mov
loopne
stc
neg
sub
inc
mov
lock
cmp
loop
lods
shll
out
xor
je
push
adc
pop
test
lret
and
mov
mov
sahf
ds
aas
mov
sarl
in
les
push
fbstp
inc
sub
aam
or
mov
and
adc
push
adc
dec
mov
sbb
add
sub
cmp
in
xor
mov
mov
out
mov
push
loope
xchg
lret
lret
jle
and
mov
out
lock
sub
xchg
push
mov
push
in
and
adc
add
out
addl
scas
sbb
push
int
scas
test
test
imul
adc
add
add
jg,pt
das
outsb
fnstenv
inc
sub
mov
rclb
push
jmp
lea
clc
sahf
cli
aad
push
xor
mov
mov
jbe
inc
mov
push
xchg
mov
and
loope
in
pop
pop
push
lret
mov
mov
test
mov
out
inc
popf
mov
int3
or
mov
jecxz
inc
push
push
fldl
sub
xchg
inc
lahf
push
dec
push
and
dec
inc
ret
and
das
add
lds
dec
into
lods
pop
fsubrl
mov
mov
dec
inc
in
cmp
fstl
negb
cld
mov
aas
and
push
xchg
sbb
pop
int3
lcall
cltd
mov
pop
mov
push
adc
cmp
testb
add
cs
aaa
xchg
mov
push
out
stos
lods
int3
push
bound
ret
push
lock
inc
mov
push
mov
mov
fwait
pop
add
lahf
adc
xchg
inc
in
lahf
mov
in
popf
out
js
out
es
sub
xor
dec
outsl
loop
in
mov
imul
test
mov
shlb
mov
std
jmp
loopne
rclb
imul
inc
push
aam
xchg
hlt
sahf
insb
mov
lds
ret
cmp
jecxz
enter
and
rorl
adc
push
xchg
adc
insb
test
jno
adc
int3
popa
pusha
mov
sbb
test
pusha
mov
rcrb
xchg
cmp
pop
fldenv
or
popf
insb
or
xorl
jno
shll
faddp
dec
mov
xor
cld
push
js
or
jbe
std
cmp
adc
icebp
fwait
clc
sub
shll
enter
cs
lret
add
aas
mov
dec
popa
cmp
or
mov
sub
dec
mov
inc
add
movsb
adc
xorb
jne
push
pop
mov
adc
insl
imul
test
loop
pop
ja
jmp
sbb
leave
mov
mov
push
or
shlb
out
cld
cld
pushf
and
out
mov
xor
push
rcll
ljmp
ja
aam
cmp
push
sub
pop
pop
test
enter
dec
jns
mov
xchg
sbb
sbb
or
test
push
add
mov
mov
pop
mov
test
adc
loopne
int
fistl
sub
mov
fistpl
mov
divb
mov
adc
lret
rcrb
jbe
lcall
fwait
add
out
mov
mov
fdivrs
popf
dec
pop
hlt
iret
or
adc
stc
cmp
sbb
xor
pop
incb
cmp
loop
or
mov
mov
cltd
mov
daa
and
adc
push
fbld
and
inc
insb
sub
je
in
lret
bound
adc
add
dec
mov
mov
je
push
adcl
pop
add
lret
arpl
lock
sub
add
repnz
mov
int
jbe
sub
daa
fld1
add
cmpsb
movsb
cmpsl
cmp
add
fidivrs
test
out
inc
call
out
test
daa
mov
out
into
mov
and
scas
add
and
dec
sub
xor
daa
sub
mov
mov
lahf
jecxz
incb
and
jne
idivl
add
dec
sub
nop
es
inc
add
adc
mov
mov
insb
call
outsl
iret
or
jne
push
in
cs
ds
out
fs
mov
dec
nop
inc
ret
sub
scas
es
cli
rol
xor
push
push
enter
mov
dec
xchg
inc
lods
and
int3
sub
mov
or
mov
inc
repz
jo
data16
push
cmp
or
pop
xchg
cmp
js
lock
add
ds
cmc
cmpsl
aad
movl
mov
push
cwtl
icebp
les
jnp
mov
adc
pop
rorb
sbb
sub
in
das
jnp
mov
mov
pop
rclb
jmp
add
push
lcall
push
jne
js
shr
pop
add
push
inc
bound
mov
fcmovne
jnp
imul
aaa
xlat
xor
xchg
jle
mov
adc
not
sti
outsb
pop
outsl
idivl
and
idivb
hlt
int
fldt
aaa
add
add
outsb
push
add
mov
inc
mov
popa
xchg
sbb
jp
sub
scas
ret
cmpsb
add
sub
vcvtsi2sdl
pusha
xlat
loope
mov
jg
pop
std
xchg
mov
mov
push
sbb
int
nop
jo
adc
or
addl
pop
cwtl
insl
pop
divl
jno
jecxz
add
lret
cmp
sbb
imul
xlat
xchg
divb
aaa
push
loope
nop
into
xchg
inc
xchg
in
sbb
xor
adc
iret
pusha
pop
mov
in
add
mov
mov
and
xchg
stos
stos
adc
hlt
adc
fildll
cltd
xchg
fisubrl
xchg
loop
and
push
bound
ljmp
fcoms
inc
xlat
arpl
cmpsl
fs
cmp
cmpsl
push
push
push
stos
scas
out
adc
outsb
or
inc
lret
pop
cmp
outsb
aam
cmpb
enter
ljmp
repnz
push
roll
sbb
lds
mov
pop
mov
push
inc
push
mov
icebp
fldt
sti
in
int3
jo
pop
jb
rolb
push
rcl
scas
sub
mov
mov
add
subl
add
cmp
xchg
arpl
fs
push
pop
mov
jmp
pop
and
les
xchg
test
cld
mov
jecxz
lods
hlt
add
inc
call
test
mov
adc
repz
outsb
popa
repz
gs
aas
pop
sub
cmp
pop
push
roll
or
add
cli
mov
in
mov
and
mov
imul
mov
mov
test
dec
pop
vpcmpgtw
sbb
std
cli
cmc
inc
lock
dec
out
sub
add
add
mov
inc
fildll
xor
movsb
nop
ja
mov
rcll
mov
lcall
fldt
push
out
out
sbb
mov
cmpl
loop
into
outsl
jge
adc
pop
rcrl
lds
inc
push
dec
imul
mov
adc
mov
cmp
lods
push
call
or
mov
push
dec
sub
lds
mov
cli
pxor
dec
xchg
mov
test
xor
test
hlt
fwait
mov
movsb
adc
add
adcb
xchg
mov
inc
popa
test
cmpsl
out
and
adc
aas
push
stos
dec
dec
dec
leave
fbstp
xchg
xor
das
jl
out
fnsave
mov
mov
cs
pop
js
add
lret
sbb
sbb
add
movsl
cwtl
jecxz
notb
push
cld
sarl
inc
dec
imul
push
out
and
repnz
cmp
imulb
mov
insb
inc
and
sti
leave
mov
dec
push
aaa
divb
sbb
push
mov
scas
jmp
xor
push
lahf
vcomiss
add
mov
cmp
stos
lods
and
repnz
jp
xchg
cmp
cwtl
xor
inc
dec
decb
mov
mov
push
adc
loope
sbb
mov
add
mov
mov
pop
lods
cli
jecxz
push
out
mov
mov
fldcw
fcmovne
xchg
mov
and
andl
jne
mov
aam
in
mov
mov
lea
shlb
cld
sub
int
mov
shrb
sub
mov
mov
sbb
int3
lods
fidivrl
inc
or
xchg
and
js
inc
dec
or
test
jg
in
add
pusha
inc
std
dec
std
roll
add
mov
test
test
sahf
popa
adc
mov
fchs
pop
scas
fcompl
or
push
jp
test
js
lcall
fsubrp
pop
lds
pop
cmp
xor
inc
push
jge
ja
push
jmp
sub
cld
in
xor
lahf
dec
inc
xchg
loopne
pop
hlt
push
cmp
ror
enter
cmp
clc
cmp
repnz
int3
mov
mov
aas
pop
xchg
xorb
out
or
cmp
pop
ficomps
pushf
or
mov
loope
int
inc
cmp
mov
pop
subl
fistl
test
xchg
nop
mov
repnz
push
jb
decb
jmp
mov
fs
xchg
mov
mov
repnz
sbb
cltd
or
fnstcw
cmpsb
lds
andl
mov
ljmp
cmp
inc
cmc
push
pop
sbbl
mov
adc
clc
pusha
push
je
fs
pop
lahf
or
rorb
add
mov
jle
mov
les
jae
lds
test
push
fnsave
add
push
mov
pop
or
nop
in
add
push
ret
inc
sbb
xlat
lahf
std
xlat
or
cmp
jo
cmp
or
push
aaa
gs
mov
or
ret
inc
aad
push
test
in
jae
stos
pop
sti
xorb
sbb
mov
mov
dec
int3
clc
inc
scas
lock
scas
cs
call
cmp
sbb
add
pop
pop
cmp
jge
insl
scas
mov
arpl
inc
lret
fs
subl
xchg
mov
cmpsl
jg
mov
and
or
push
shlb
push
xchg
and
and
lahf
stos
pushf
push
enter
mov
mov
lods
out
aam
inc
xor
stc
cmp
pop
in
mov
xchg
sbb
test
inc
xor
pushf
mov
jb
mov
rcrb
cli
adc
xlat
mov
es
ljmp
xchg
stos
dec
addr16
stos
inc
dec
stos
sti
inc
cmp
ret
mov
xchg
pop
daa
insb
arpl
xchg
mov
shrb
shlb
imull
xchg
xor
orb
jno
mov
pushf
sbb
in
andl
sub
sub
ret
xor
andb
lret
sub
gs
jnp
pop
lcall
idiv
dec
sbb
sbb
loop
aad
and
imul
imul
sbb
pop
xchg
enter
bound
mov
xor
mov
push
imul
psubq
push
adc
ss
lock
aad
jb
shrl
ret
fcomp
xchg
jb
pop
xchg
sbb
push
inc
repnz
rclb
push
bswap
or
push
fstpt
add
popf
inc
sbb
loop
and
shlb
pop
hlt
in
ljmp
rcll
cmp
int3
jae
jae
mov
repz
cmp
pushf
flds
dec
xor
pop
cmp
ljmp
rcrb
xchg
cmpsl
popa
mov
or
out
js
lds
mov
pop
cmp
ds
int
adc
lock
lock
sub
sub
repz
popf
or
popf
mov
mov
sbb
or
sbb
call
dec
lret
rcll
gs
inc
insb
pusha
mov
and
xchg
addr16
jae
movsb
cmpsb
movsl
inc
sbb
sbb
lods
loop
adc
jg
in
loope
adc
mov
xchg
imul
cmpsl
lahf
push
jae
and
fdivl
xchg
enter
lods
out
test
gs
popf
dec
loopne
add
movsb
cmp
scas
iret
aas
shrl
sti
push
mov
adc
and
mov
mov
sbb
ljmp
push
adc
mov
adc
ljmp
xor
call
dec
out
adc
or
aas
movsb
cmp
cmp
xchg
mov
ret
ja
dec
movsl
fsubrs
and
call
loopne
dec
fimull
pop
incl
mov
pop
xlat
mov
fistl
cmp
ja
andb
stos
or
stos
dec
push
pop
aam
inc
rcrb
xchg
mov
out
into
hlt
dec
cmpsb
push
or
pop
jne
adc
or
repnz
cmpsb
jp
les
addr16
inc
cmpsb
jmp
out
xor
out
mov
xor
fcompl
pop
loop
pop
and
nop
aaa
cld
fstps
or
repz
cld
jl
jge
repz
fidivrs
nop
ror
cli
push
push
ret
push
js
inc
fidivrl
aam
cmp
pop
add
add
addl
or
pop
sarl
lret
addb
jae
bound
dec
mov
cmp
stos
jg
jg
mov
dec
push
dec
push
xchg
push
pop
xchg
fisubrs
lock
xor
fs
shrl
fsubl
cld
jnp
xchg
xor
push
push
dec
subb
test
daa
jmp
mov
mov
jge
aaa
mov
xor
stos
sub
pop
or
pop
clc
dec
fmuls
pop
jns
mov
inc
jnp
xor
pop
mov
sti
adc
adc
inc
dec
xchg
mov
lret
jle
sub
adc
adc
adc
rcll
mov
xchg
inc
lahf
mov
mov
std
dec
clc
aam
cltd
repz
sub
adc
dec
jae
sbb
xchg
xchg
pop
and
bound
les
pop
push
sub
xor
xchg
push
lods
inc
dec
movsl
sbb
or
outsl
lods
mov
clc
push
in
lcall
xchg
sarb
push
add
fsubl
jno
inc
sub
adc
lahf
pop
fmulp
sbb
out
mov
jnp
ss
idivb
dec
lods
jecxz
test
movl
cmp
sti
push
dec
or
sub
cmp
xchg
xchg
movsb
int3
shl
ljmp
ljmp
mov
test
imul
xcrypt-ctr
cmpsl
fisubrl
shrl
das
push
xchg
cmp
sbb
roll
int3
iret
add
cmp
sbb
and
pop
mov
sub
fnstenv
popf
jns
in
aam
push
mov
inc
int
lahf
add
push
lahf
pop
adc
dec
sub
push
pop
les
xchg
mov
adc
lcall
lret
jnp
mov
pop
rcl
adc
dec
in
daa
xor
xchg
mov
dec
pop
adc
xchg
xchg
push
repz
and
mov
ret
rcrl
push
mov
out
into
imul
xlat
in
and
cmpsl
pop
sbb
cli
sbb
and
sarl
arpl
xor
out
aad
int3
aas
pop
fstps
cmp
jbe
mov
ror
add
clc
xorb
push
icebp
mov
popf
pop
enter
addr16
mov
sbb
jae
fistl
xchg
push
mov
shlb
aad
xor
std
mov
sub
mov
ds
lahf
add
or
outsl
mov
dec
cmp
jno
in
pop
xor
xor
sti
sbb
dec
subb
outsb
aam
adc
idivb
aaa
subl
mov
into
mov
add
jb
sbb
test
aam
fwait
pop
int
jb
mov
test
in
xor
or
test
xchg
xchg
push
sub
in
mov
es
sahf
add
and
nop
xchg
aaa
int
pusha
add
lcall
andb
inc
ret
roll
outsb
lret
sbb
cmp
sub
mov
push
out
mov
lret
stos
or
xchg
shl
rcl
sub
dec
cld
mov
leave
and
aad
loope
pop
imul
pop
and
sub
dec
test
fdivrs
imul
mov
inc
mov
push
xor
jno
int
inc
mov
scas
je
sbb
mov
or
call
jge
and
shlb
adc
jp,pt
add
popa
je
sub
xchg
mov
cltd
lea
stos
inc
mov
adc
mov
xchg
xchg
sar
jl
sub
push
je
fs
cmp
sti
pop
and
add
jl
xor
sub
dec
mov
rcrl
mov
jb
fmuls
icebp
xchg
jo
mov
mov
into
sbb
jp
icebp
mov
or
cmpsl
cmpsl
popl
sbb
loop
cs
add
or
divl
push
ja
stos
testl
ja
adc
loopne
dec
or
movsb
or
mov
test
cmp
mov
push
cmp
xorb
out
popa
adc
jge
dec
push
jo
addl
shlb
out
or
loopne
dec
cltd
add
add
xchg
and
sbb
sub
dec
popf
inc
sti
inc
lea
ja
jle
ljmp
push
add
frstor
fsubrl
fistpll
cld
and
repz
inc
jns
scas
aad
lret
pop
xor
mov
les
xchg
fisubrl
pushf
iret
scas
negb
out
imul
adc
js
adc
xchg
rorb
mov
mov
dec
jns
pusha
lods
pop
out
popl
cmc
popa
mov
mov
jne
xlat
mov
in
cltd
xchg
shlb
xor
rolb
fldenv
xor
jle
pop
ss
sbbb
and
dec
adc
fisubrl
dec
mov
mov
xchg
jl
dec
mov
cs
sub
int
add
push
push
inc
test
cmp
mov
leave
dec
jle
call
in
cmc
ret
xchg
es
int
add
fbstp
int
jae
iret
pop
sbb
add
dec
das
sub
and
inc
push
mov
dec
in
jmp
fisubl
dec
pop
das
aas
or
movsl
xor
inc
xchg
sbb
sbb
fdiv
and
lret
cwtl
mov
int3
xor
stos
js
aaa
sub
shl
mov
pop
aas
dec
cmp
and
cwtl
into
pop
cmp
fwait
adc
xor
movsb
fcmove
pop
inc
cld
loop
test
imul
add
pushf
mov
fnsave
xor
mov
aam
dec
addr16
push
int
sub
roll
adc
pop
jae
push
inc
lock
repz
jnp
or
fwait
lea
in
jmp
adc
arpl
lcall
add
fldt
icebp
and
call
or
lock
cmpsl
pop
cmp
push
fistps
flds
pop
mov
cs
orb
xor
fiadds
mov
adc
repnz
pop
mov
push
or
orb
gs
mov
inc
lahf
mov
imul
xor
jmp
mov
push
push
shll
enter
cmp
cs
push
jmp
int3
scas
test
push
in
sahf
aam
mov
ret
push
mov
pop
dec
lret
cmpsl
cmp
cmp
cbtw
hlt
decl
and
ret
xchg
jbe
pop
fcom
push
shrb
mov
lahf
stc
das
cld
inc
add
mov
es
or
cmc
jno
ror
icebp
cltd
pop
arpl
push
js
xchg
insb
pop
pop
sbb
xor
pop
ja
andl
arpl
pop
inc
adc
mov
in
outsl
xlat
fistps
xchg
mov
cmp
push
movb
push
mov
adc
enter
mov
mov
adc
sbb
add
aam
in
je
mov
dec
les
insb
or
xor
sub
adc
arpl
ret
loop
int
add
stos
bnd
push
push
insb
xchg
pushf
cld
jl
dec
ss
dec
pop
sub
test
subl
add
xchg
js
aaa
hlt
sub
lea
fildl
mov
sbb
xchg
add
push
cmc
xor
ljmp
jp
ja
cmpsb
cmp
adc
xchg
or
shl
out
mov
dec
aam
jge
popa
je
aaa
inc
xor
xchg
cmpsb
fdivs
sub
outsb
aas
push
jns
into
int3
sub
rcrl
xor
loop
jae
and
pop
lcall
inc
mov
je
lret
jnp
sbb
inc
or
inc
mov
out
xor
test
lret
add
or
std
and
mov
ss
mov
fstl
in
push
lds
mov
xor
mov
fmul
addr16
adc
ja
xor
movsb
rolb
stc
fisubl
xchg
loop
mov
in
pop
dec
testb
in
jno
rcll
dec
cmc
negb
push
fistl
pop
mov
int
leave
push
cmp
add
clc
std
ss
mov
mov
ss
or
arpl
jae
std
xor
push
push
pop
sbb
xor
push
addr16
fcmovne
cmp
sbb
push
iret
add
imul
pop
fwait
sahf
std
sbb
adcl
popf
lcall
das
xchg
ret
cli
mov
inc
adc
push
jp
mov
mov
test
cmp
xor
stos
fdivs
loop
xchg
filds
add
push
cmp
mov
mov
inc
int
bnd
pop
mov
rcrb
dec
orb
fsubs
insl
or
lock
dec
inc
xchg
jb
lods
xlat
idivb
cmpl
pop
jbe
mov
out
aas
repnz
movsb
inc
outsl
push
dec
lods
cmc
shlb
cmp
pop
cs
sbb
xor
push
ret
int3
or
mov
sub
pusha
iret
loope
or
xchg
xchg
sbb
outsl
jg
inc
push
mov
jle
mov
adc
xchg
lahf
int3
outsb
fstpl
inc
cmp
xchg
dec
mov
fwait
jge
push
outsl
cmp
jl
mov
adcb
and
das
jno
fwait
in
mov
pop
iret
mov
cli
add
mov
sub
shlb
or
lcall
push
fdiv
add
js
jge
xor
pop
ret
jae,pt
imul
frstor
inc
push
popa
and
je
rorl
stos
mov
sub
add
add
add
add
add
add
inc
xchg
push
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cmp
outsb
add
outsb
add
